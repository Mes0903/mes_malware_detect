
dd9072fd3669dcb43e3e6990da55b84d2bfb571b2a73b5cc7fc8202f8e84e01d.exe:     file format pei-i386


Disassembly of section .text:

65001000 <.text>:
65001000:	mov    DWORD PTR [ecx],0x65024b44
65001006:	jmp    0x65011fd6
6500100b:	int3   
6500100c:	int3   
6500100d:	int3   
6500100e:	int3   
6500100f:	int3   
65001010:	push   esi
65001011:	mov    esi,ecx
65001013:	mov    DWORD PTR [esi],0x65024b44
65001019:	call   0x65011fd6
6500101e:	test   BYTE PTR [esp+0x8],0x1
65001023:	je     0x6500102e
65001025:	push   esi
65001026:	call   0x65011f02
6500102b:	add    esp,0x4
6500102e:	mov    eax,esi
65001030:	pop    esi
65001031:	ret    0x4
65001034:	int3   
65001035:	int3   
65001036:	int3   
65001037:	int3   
65001038:	int3   
65001039:	int3   
6500103a:	int3   
6500103b:	int3   
6500103c:	int3   
6500103d:	int3   
6500103e:	int3   
6500103f:	int3   
65001040:	mov    eax,DWORD PTR [esp+0x4]
65001044:	push   0x65029dc4
65001049:	lea    ecx,[esp+0x8]
6500104d:	push   ecx
6500104e:	mov    DWORD PTR [esp+0xc],eax
65001052:	call   0x65012306
65001057:	int3   
65001058:	int3   
65001059:	int3   
6500105a:	int3   
6500105b:	int3   
6500105c:	int3   
6500105d:	int3   
6500105e:	int3   
6500105f:	int3   
65001060:	push   ecx
65001061:	push   ebx
65001062:	push   esi
65001063:	push   edi
65001064:	push   0x2710
65001069:	call   DWORD PTR ds:0x6502404c
6500106f:	mov    esi,DWORD PTR [esp+0x14]
65001073:	mov    ebx,DWORD PTR ds:0x65024088
65001079:	mov    DWORD PTR [esp+0xc],0x0
65001081:	xor    edi,edi
65001083:	push   0x0
65001085:	lea    eax,[esp+0x18]
65001089:	push   eax
6500108a:	push   0x4
6500108c:	lea    ecx,[esp+0x18]
65001090:	push   ecx
65001091:	push   esi
65001092:	call   ebx
65001094:	test   eax,eax
65001096:	je     0x650010a0
65001098:	add    edi,0x1
6500109b:	cmp    edi,0xa
6500109e:	jne    0x65001083
650010a0:	test   esi,esi
650010a2:	je     0x650010ba
650010a4:	call   DWORD PTR ds:0x65024044
650010aa:	push   esi
650010ab:	mov    edi,eax
650010ad:	call   DWORD PTR ds:0x65024040
650010b3:	push   edi
650010b4:	call   DWORD PTR ds:0x6502405c
650010ba:	pop    edi
650010bb:	pop    esi
650010bc:	xor    eax,eax
650010be:	pop    ebx
650010bf:	pop    ecx
650010c0:	ret    0x4
650010c3:	int3   
650010c4:	int3   
650010c5:	int3   
650010c6:	int3   
650010c7:	int3   
650010c8:	int3   
650010c9:	int3   
650010ca:	int3   
650010cb:	int3   
650010cc:	int3   
650010cd:	int3   
650010ce:	int3   
650010cf:	int3   
650010d0:	sub    esp,0x14
650010d3:	push   ebx
650010d4:	mov    ebx,DWORD PTR ds:0x65024048
650010da:	push   esi
650010db:	mov    esi,DWORD PTR [esp+0x20]
650010df:	push   edi
650010e0:	mov    edi,DWORD PTR [esi+0xc]
650010e3:	push   0x2
650010e5:	push   0x0
650010e7:	push   0x0
650010e9:	lea    eax,[esp+0x18]
650010ed:	push   eax
650010ee:	mov    DWORD PTR [esp+0x1c],0x0
650010f6:	call   ebx
650010f8:	push   eax
650010f9:	push   edi
650010fa:	call   ebx
650010fc:	push   eax
650010fd:	call   DWORD PTR ds:0x6502407c
65001103:	test   eax,eax
65001105:	je     0x65001199
6500110b:	mov    ecx,DWORD PTR [esp+0xc]
6500110f:	push   0x0
65001111:	push   0x0
65001113:	push   ecx
65001114:	push   0x65001060
65001119:	push   0x0
6500111b:	push   0x0
6500111d:	call   DWORD PTR ds:0x6502406c
65001123:	push   0x0
65001125:	lea    edx,[esp+0x18]
65001129:	push   edx
6500112a:	push   0x4
6500112c:	mov    edi,eax
6500112e:	mov    eax,DWORD PTR [esi+0x8]
65001131:	lea    ecx,[esp+0x30]
65001135:	push   ecx
65001136:	push   eax
65001137:	mov    DWORD PTR [esp+0x24],edi
6500113b:	mov    DWORD PTR [esp+0x38],0x0
65001143:	call   DWORD PTR ds:0x65024080
65001149:	test   eax,eax
6500114b:	je     0x6500117f
6500114d:	cmp    DWORD PTR [esp+0x14],0x4
65001152:	jne    0x6500117f
65001154:	mov    edx,DWORD PTR [esp+0x24]
65001158:	mov    eax,DWORD PTR [esi+0x4]
6500115b:	push   0x0
6500115d:	lea    ecx,[esp+0x20]
65001161:	push   ecx
65001162:	mov    DWORD PTR [esp+0x20],edx
65001166:	push   0x4
65001168:	lea    edx,[esp+0x24]
6500116c:	push   edx
6500116d:	push   eax
6500116e:	call   DWORD PTR ds:0x65024088
65001174:	lea    ecx,[esp+0x10]
65001178:	call   0x65001680
6500117d:	jmp    0x65001199
6500117f:	test   edi,edi
65001181:	je     0x65001199
65001183:	call   DWORD PTR ds:0x65024044
65001189:	push   edi
6500118a:	mov    ebx,eax
6500118c:	call   DWORD PTR ds:0x65024040
65001192:	push   ebx
65001193:	call   DWORD PTR ds:0x6502405c
65001199:	call   0x650016d0
6500119e:	push   esi
6500119f:	call   0x65011f02
650011a4:	add    esp,0x4
650011a7:	pop    edi
650011a8:	pop    esi
650011a9:	xor    eax,eax
650011ab:	pop    ebx
650011ac:	add    esp,0x14
650011af:	ret    0x4
650011b2:	int3   
650011b3:	int3   
650011b4:	int3   
650011b5:	int3   
650011b6:	int3   
650011b7:	int3   
650011b8:	int3   
650011b9:	int3   
650011ba:	int3   
650011bb:	int3   
650011bc:	int3   
650011bd:	int3   
650011be:	int3   
650011bf:	int3   
650011c0:	push   0xffffffff
650011c2:	push   0x65022549
650011c7:	mov    eax,fs:0x0
650011cd:	push   eax
650011ce:	sub    esp,0x30
650011d1:	mov    eax,ds:0x6502c09c
650011d6:	xor    eax,esp
650011d8:	mov    DWORD PTR [esp+0x2c],eax
650011dc:	push   ebx
650011dd:	push   ebp
650011de:	push   esi
650011df:	push   edi
650011e0:	mov    eax,ds:0x6502c09c
650011e5:	xor    eax,esp
650011e7:	push   eax
650011e8:	lea    eax,[esp+0x44]
650011ec:	mov    fs:0x0,eax
650011f2:	mov    esi,ecx
650011f4:	xor    ebx,ebx
650011f6:	mov    DWORD PTR [esp+0x1c],ebx
650011fa:	mov    edi,edx
650011fc:	mov    DWORD PTR [esi+0x18],0xf
65001203:	mov    DWORD PTR [esi+0x14],ebx
65001206:	mov    DWORD PTR [esp+0x20],esi
6500120a:	mov    DWORD PTR [esp+0x18],edi
6500120e:	mov    BYTE PTR [esi+0x4],bl
65001211:	mov    DWORD PTR [esp+0x4c],ebx
65001215:	mov    ebp,0x1
6500121a:	mov    DWORD PTR [esp+0x1c],ebp
6500121e:	call   DWORD PTR ds:0x65024084
65001224:	xor    ecx,ecx
65001226:	cmp    ecx,ebx
65001228:	jle    0x65001237
6500122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6500122f:	jne    0x65001237
65001231:	cmp    WORD PTR [eax+ecx*2],bx
65001235:	je     0x6500123b
65001237:	add    ecx,ebp
65001239:	jmp    0x65001226
6500123b:	add    ecx,ecx
6500123d:	push   ecx
6500123e:	push   eax
6500123f:	lea    ecx,[esp+0x2c]
65001243:	mov    DWORD PTR [esp+0x44],0xf
6500124b:	mov    DWORD PTR [esp+0x40],ebx
6500124f:	mov    BYTE PTR [esp+0x30],bl
65001253:	call   0x65001860
65001258:	push   ebx
65001259:	lea    edx,[esp+0x28]
6500125d:	push   edx
6500125e:	or     eax,0xffffffff
65001261:	mov    DWORD PTR [esp+0x54],ebp
65001265:	call   0x650019d0
6500126a:	mov    BYTE PTR [esp+0x4c],bl
6500126e:	cmp    DWORD PTR [esp+0x3c],0x10
65001273:	jb     0x65001282
65001275:	mov    eax,DWORD PTR [esp+0x28]
65001279:	push   eax
6500127a:	call   0x65011f02
6500127f:	add    esp,0x4
65001282:	mov    edx,DWORD PTR ds:0x6502d560
65001288:	mov    eax,DWORD PTR [edx+0xc]
6500128b:	mov    ecx,0x6502d560
65001290:	call   eax
65001292:	add    eax,0x10
65001295:	mov    DWORD PTR [esp+0x14],eax
65001299:	mov    DWORD PTR [esp+0x4c],0x2
650012a1:	mov    eax,DWORD PTR [edi]
650012a3:	push   eax
650012a4:	lea    ecx,[esp+0x18]
650012a8:	push   0x650265f8
650012ad:	push   ecx
650012ae:	call   0x65001d40
650012b3:	mov    edi,DWORD PTR [esp+0x20]
650012b7:	mov    ebp,DWORD PTR [edi-0xc]
650012ba:	add    esp,0xc
650012bd:	cmp    DWORD PTR [edi-0x4],0x1
650012c1:	jle    0x650012d3
650012c3:	mov    edx,ebp
650012c5:	push   edx
650012c6:	lea    ecx,[esp+0x18]
650012ca:	call   0x65001950
650012cf:	mov    edi,DWORD PTR [esp+0x14]
650012d3:	lea    eax,[ebp+ebp*1+0x2]
650012d7:	push   eax
650012d8:	push   edi
650012d9:	lea    ecx,[esp+0x2c]
650012dd:	mov    DWORD PTR [esp+0x44],0xf
650012e5:	mov    DWORD PTR [esp+0x40],ebx
650012e9:	mov    BYTE PTR [esp+0x30],bl
650012ed:	call   0x65001860
650012f2:	push   ebx
650012f3:	lea    ecx,[esp+0x28]
650012f7:	push   ecx
650012f8:	or     eax,0xffffffff
650012fb:	mov    BYTE PTR [esp+0x54],0x3
65001300:	call   0x650019d0
65001305:	cmp    DWORD PTR [esp+0x3c],0x10
6500130a:	jb     0x65001319
6500130c:	mov    edx,DWORD PTR [esp+0x28]
65001310:	push   edx
65001311:	call   0x65011f02
65001316:	add    esp,0x4
65001319:	add    edi,0xfffffff0
6500131c:	mov    DWORD PTR [esp+0x3c],0xf
65001324:	mov    DWORD PTR [esp+0x38],ebx
65001328:	mov    BYTE PTR [esp+0x28],bl
6500132c:	mov    BYTE PTR [esp+0x4c],bl
65001330:	lea    eax,[edi+0xc]
65001333:	or     ecx,0xffffffff
65001336:	lock xadd DWORD PTR [eax],ecx
6500133a:	dec    ecx
6500133b:	test   ecx,ecx
6500133d:	jg     0x65001349
6500133f:	mov    ecx,DWORD PTR [edi]
65001341:	mov    edx,DWORD PTR [ecx]
65001343:	mov    eax,DWORD PTR [edx+0x4]
65001346:	push   edi
65001347:	call   eax
65001349:	mov    edx,DWORD PTR ds:0x6502d560
6500134f:	mov    eax,DWORD PTR [edx+0xc]
65001352:	mov    ecx,0x6502d560
65001357:	call   eax
65001359:	add    eax,0x10
6500135c:	mov    DWORD PTR [esp+0x14],eax
65001360:	mov    ecx,DWORD PTR [esp+0x18]
65001364:	mov    DWORD PTR [esp+0x4c],0x4
6500136c:	mov    eax,DWORD PTR [ecx+0xc]
6500136f:	push   eax
65001370:	lea    edx,[esp+0x18]
65001374:	push   0x65026604
65001379:	push   edx
6500137a:	call   0x65001d40
6500137f:	mov    edi,DWORD PTR [esp+0x20]
65001383:	mov    ebp,DWORD PTR [edi-0xc]
65001386:	add    esp,0xc
65001389:	cmp    DWORD PTR [edi-0x4],0x1
6500138d:	jle    0x6500139f
6500138f:	mov    eax,ebp
65001391:	push   eax
65001392:	lea    ecx,[esp+0x18]
65001396:	call   0x65001950
6500139b:	mov    edi,DWORD PTR [esp+0x14]
6500139f:	lea    ecx,[ebp+ebp*1+0x2]
650013a3:	push   ecx
650013a4:	push   edi
650013a5:	lea    ecx,[esp+0x2c]
650013a9:	mov    DWORD PTR [esp+0x44],0xf
650013b1:	mov    DWORD PTR [esp+0x40],ebx
650013b5:	mov    BYTE PTR [esp+0x30],bl
650013b9:	call   0x65001860
650013be:	push   ebx
650013bf:	lea    edx,[esp+0x28]
650013c3:	push   edx
650013c4:	or     eax,0xffffffff
650013c7:	mov    BYTE PTR [esp+0x54],0x5
650013cc:	call   0x650019d0
650013d1:	cmp    DWORD PTR [esp+0x3c],0x10
650013d6:	jb     0x650013e5
650013d8:	mov    eax,DWORD PTR [esp+0x28]
650013dc:	push   eax
650013dd:	call   0x65011f02
650013e2:	add    esp,0x4
650013e5:	mov    ebp,0xf
650013ea:	add    edi,0xfffffff0
650013ed:	mov    DWORD PTR [esp+0x3c],ebp
650013f1:	mov    DWORD PTR [esp+0x38],ebx
650013f5:	mov    BYTE PTR [esp+0x28],bl
650013f9:	mov    BYTE PTR [esp+0x4c],bl
650013fd:	lea    ecx,[edi+0xc]
65001400:	or     edx,0xffffffff
65001403:	lock xadd DWORD PTR [ecx],edx
65001407:	dec    edx
65001408:	test   edx,edx
6500140a:	jg     0x65001416
6500140c:	mov    ecx,DWORD PTR [edi]
6500140e:	mov    eax,DWORD PTR [ecx]
65001410:	mov    edx,DWORD PTR [eax+0x4]
65001413:	push   edi
65001414:	call   edx
65001416:	push   0x2
65001418:	push   0x65026610
6500141d:	lea    eax,[esp+0x30]
65001421:	push   ebp
65001422:	push   eax
65001423:	mov    DWORD PTR [esp+0x4c],ebp
65001427:	mov    DWORD PTR [esp+0x48],ebx
6500142b:	mov    BYTE PTR [esp+0x38],bl
6500142f:	call   0x65012073
65001434:	mov    eax,DWORD PTR [esp+0x38]
65001438:	mov    edi,0x10
6500143d:	add    esp,0x10
65001440:	cmp    DWORD PTR [esp+0x3c],edi
65001444:	mov    DWORD PTR [esp+0x38],0x2
6500144c:	jae    0x65001452
6500144e:	lea    eax,[esp+0x28]
65001452:	mov    BYTE PTR [eax+0x2],bl
65001455:	push   ebx
65001456:	lea    ecx,[esp+0x28]
6500145a:	push   ecx
6500145b:	or     eax,0xffffffff
6500145e:	mov    DWORD PTR [esp+0x54],0x6
65001466:	call   0x650019d0
6500146b:	cmp    DWORD PTR [esp+0x3c],edi
6500146f:	jb     0x6500147e
65001471:	mov    edx,DWORD PTR [esp+0x28]
65001475:	push   edx
65001476:	call   0x65011f02
6500147b:	add    esp,0x4
6500147e:	mov    eax,esi
65001480:	mov    ecx,DWORD PTR [esp+0x44]
65001484:	mov    DWORD PTR fs:0x0,ecx
6500148b:	pop    ecx
6500148c:	pop    edi
6500148d:	pop    esi
6500148e:	pop    ebp
6500148f:	pop    ebx
65001490:	mov    ecx,DWORD PTR [esp+0x2c]
65001494:	xor    ecx,esp
65001496:	call   0x6501275c
6500149b:	add    esp,0x3c
6500149e:	ret    
6500149f:	int3   
650014a0:	push   0xffffffff
650014a2:	push   0x650226b8
650014a7:	mov    eax,fs:0x0
650014ad:	push   eax
650014ae:	sub    esp,0x24
650014b1:	push   ebx
650014b2:	push   ebp
650014b3:	push   esi
650014b4:	push   edi
650014b5:	mov    eax,ds:0x6502c09c
650014ba:	xor    eax,esp
650014bc:	push   eax
650014bd:	lea    eax,[esp+0x38]
650014c1:	mov    fs:0x0,eax
650014c7:	mov    eax,DWORD PTR [esp+0x48]
650014cb:	xor    edi,edi
650014cd:	push   0x10
650014cf:	mov    DWORD PTR [esp+0x28],eax
650014d3:	mov    DWORD PTR [esp+0x18],edi
650014d7:	call   0x6501229c
650014dc:	add    esp,0x4
650014df:	cmp    eax,edi
650014e1:	je     0x650014f2
650014e3:	mov    DWORD PTR [eax],edi
650014e5:	mov    DWORD PTR [eax+0x4],edi
650014e8:	mov    DWORD PTR [eax+0x8],edi
650014eb:	mov    DWORD PTR [eax+0xc],edi
650014ee:	mov    esi,eax
650014f0:	jmp    0x650014f4
650014f2:	xor    esi,esi
650014f4:	mov    DWORD PTR [esp+0x34],esi
650014f8:	push   edi
650014f9:	lea    ecx,[esp+0x2c]
650014fd:	push   ecx
650014fe:	mov    DWORD PTR [esp+0x48],edi
65001502:	lea    edx,[esp+0x24]
65001506:	push   edx
65001507:	lea    eax,[esp+0x2c]
6500150b:	push   eax
6500150c:	mov    DWORD PTR [esp+0x38],0xc
65001514:	mov    DWORD PTR [esp+0x40],0x1
6500151c:	mov    DWORD PTR [esp+0x3c],edi
65001520:	mov    DWORD PTR [esp+0x30],edi
65001524:	mov    DWORD PTR [esp+0x2c],edi
65001528:	call   DWORD PTR ds:0x65024078
6500152e:	test   eax,eax
65001530:	mov    ebx,DWORD PTR ds:0x65024044
65001536:	mov    ebp,DWORD PTR ds:0x65024040
6500153c:	je     0x65001594
6500153e:	mov    edi,DWORD PTR [esi+0x8]
65001541:	test   edi,edi
65001543:	mov    ecx,DWORD PTR [esp+0x20]
65001547:	mov    DWORD PTR [esp+0x14],ecx
6500154b:	je     0x65001561
6500154d:	call   ebx
6500154f:	push   edi
65001550:	mov    DWORD PTR [esp+0x1c],eax
65001554:	call   ebp
65001556:	mov    edx,DWORD PTR [esp+0x18]
6500155a:	push   edx
6500155b:	call   DWORD PTR ds:0x6502405c
65001561:	mov    eax,DWORD PTR [esp+0x14]
65001565:	mov    DWORD PTR [esi+0x8],eax
65001568:	mov    edi,DWORD PTR [esi+0xc]
6500156b:	test   edi,edi
6500156d:	mov    ecx,DWORD PTR [esp+0x1c]
65001571:	mov    DWORD PTR [esp+0x18],ecx
65001575:	je     0x6500158b
65001577:	call   ebx
65001579:	push   edi
6500157a:	mov    DWORD PTR [esp+0x18],eax
6500157e:	call   ebp
65001580:	mov    edx,DWORD PTR [esp+0x14]
65001584:	push   edx
65001585:	call   DWORD PTR ds:0x6502405c
6500158b:	mov    eax,DWORD PTR [esp+0x18]
6500158f:	mov    DWORD PTR [esi+0xc],eax
65001592:	xor    edi,edi
65001594:	push   edi
65001595:	lea    ecx,[esp+0x2c]
65001599:	push   ecx
6500159a:	lea    edx,[esp+0x24]
6500159e:	push   edx
6500159f:	lea    eax,[esp+0x2c]
650015a3:	push   eax
650015a4:	call   DWORD PTR ds:0x65024078
650015aa:	test   eax,eax
650015ac:	je     0x65001602
650015ae:	mov    edi,DWORD PTR [esi]
650015b0:	test   edi,edi
650015b2:	mov    ecx,DWORD PTR [esp+0x20]
650015b6:	mov    DWORD PTR [esp+0x18],ecx
650015ba:	je     0x650015d0
650015bc:	call   ebx
650015be:	push   edi
650015bf:	mov    DWORD PTR [esp+0x18],eax
650015c3:	call   ebp
650015c5:	mov    edx,DWORD PTR [esp+0x14]
650015c9:	push   edx
650015ca:	call   DWORD PTR ds:0x6502405c
650015d0:	mov    eax,DWORD PTR [esp+0x18]
650015d4:	mov    DWORD PTR [esi],eax
650015d6:	mov    edi,DWORD PTR [esi+0x4]
650015d9:	test   edi,edi
650015db:	mov    ecx,DWORD PTR [esp+0x1c]
650015df:	mov    DWORD PTR [esp+0x18],ecx
650015e3:	je     0x650015f9
650015e5:	call   ebx
650015e7:	push   edi
650015e8:	mov    DWORD PTR [esp+0x18],eax
650015ec:	call   ebp
650015ee:	mov    edx,DWORD PTR [esp+0x14]
650015f2:	push   edx
650015f3:	call   DWORD PTR ds:0x6502405c
650015f9:	mov    eax,DWORD PTR [esp+0x18]
650015fd:	mov    DWORD PTR [esi+0x4],eax
65001600:	xor    edi,edi
65001602:	mov    ecx,DWORD PTR [esp+0x24]
65001606:	mov    edx,esi
65001608:	call   0x650011c0
6500160d:	push   edi
6500160e:	push   edi
6500160f:	push   esi
65001610:	push   0x650010d0
65001615:	push   edi
65001616:	push   edi
65001617:	call   DWORD PTR ds:0x6502406c
6500161d:	mov    esi,eax
6500161f:	cmp    esi,edi
65001621:	je     0x65001631
65001623:	call   ebx
65001625:	push   esi
65001626:	mov    edi,eax
65001628:	call   ebp
6500162a:	push   edi
6500162b:	call   DWORD PTR ds:0x6502405c
65001631:	mov    eax,DWORD PTR [esp+0x24]
65001635:	mov    ecx,DWORD PTR [esp+0x38]
65001639:	mov    DWORD PTR fs:0x0,ecx
65001640:	pop    ecx
65001641:	pop    edi
65001642:	pop    esi
65001643:	pop    ebp
65001644:	pop    ebx
65001645:	add    esp,0x30
65001648:	ret    
65001649:	int3   
6500164a:	int3   
6500164b:	int3   
6500164c:	int3   
6500164d:	int3   
6500164e:	int3   
6500164f:	int3   
65001650:	push   esi
65001651:	mov    esi,ecx
65001653:	cmp    DWORD PTR [esi+0x18],0x10
65001657:	jb     0x65001665
65001659:	mov    eax,DWORD PTR [esi+0x4]
6500165c:	push   eax
6500165d:	call   0x65011f02
65001662:	add    esp,0x4
65001665:	xor    eax,eax
65001667:	mov    DWORD PTR [esi+0x18],0xf
6500166e:	mov    DWORD PTR [esi+0x14],eax
65001671:	mov    BYTE PTR [esi+0x4],al
65001674:	pop    esi
65001675:	ret    
65001676:	int3   
65001677:	int3   
65001678:	int3   
65001679:	int3   
6500167a:	int3   
6500167b:	int3   
6500167c:	int3   
6500167d:	int3   
6500167e:	int3   
6500167f:	int3   
65001680:	push   esi
65001681:	mov    esi,ecx
65001683:	push   edi
65001684:	mov    edi,DWORD PTR [esi]
65001686:	test   edi,edi
65001688:	je     0x650016a2
6500168a:	push   ebx
6500168b:	call   DWORD PTR ds:0x65024044
65001691:	push   edi
65001692:	mov    ebx,eax
65001694:	call   DWORD PTR ds:0x65024040
6500169a:	push   ebx
6500169b:	call   DWORD PTR ds:0x6502405c
650016a1:	pop    ebx
650016a2:	pop    edi
650016a3:	mov    DWORD PTR [esi],0x0
650016a9:	pop    esi
650016aa:	ret    
650016ab:	int3   
650016ac:	int3   
650016ad:	int3   
650016ae:	int3   
650016af:	int3   
650016b0:	push   esi
650016b1:	mov    esi,DWORD PTR [eax]
650016b3:	test   esi,esi
650016b5:	je     0x650016c5
650016b7:	call   0x650016d0
650016bc:	push   esi
650016bd:	call   0x65011f02
650016c2:	add    esp,0x4
650016c5:	pop    esi
650016c6:	ret    
650016c7:	int3   
650016c8:	int3   
650016c9:	int3   
650016ca:	int3   
650016cb:	int3   
650016cc:	int3   
650016cd:	int3   
650016ce:	int3   
650016cf:	int3   
650016d0:	sub    esp,0x8
650016d3:	mov    eax,DWORD PTR [esi+0xc]
650016d6:	test   eax,eax
650016d8:	push   ebx
650016d9:	mov    ebx,DWORD PTR ds:0x65024040
650016df:	push   ebp
650016e0:	mov    ebp,DWORD PTR ds:0x6502405c
650016e6:	push   edi
650016e7:	mov    edi,DWORD PTR ds:0x65024044
650016ed:	mov    DWORD PTR [esp+0xc],eax
650016f1:	je     0x65001707
650016f3:	call   edi
650016f5:	mov    DWORD PTR [esp+0x10],eax
650016f9:	mov    eax,DWORD PTR [esp+0xc]
650016fd:	push   eax
650016fe:	call   ebx
65001700:	mov    ecx,DWORD PTR [esp+0x10]
65001704:	push   ecx
65001705:	call   ebp
65001707:	mov    DWORD PTR [esi+0xc],0x0
6500170e:	mov    eax,DWORD PTR [esi+0x8]
65001711:	test   eax,eax
65001713:	mov    DWORD PTR [esp+0x10],eax
65001717:	je     0x6500172d
65001719:	call   edi
6500171b:	mov    edx,DWORD PTR [esp+0x10]
6500171f:	push   edx
65001720:	mov    DWORD PTR [esp+0x10],eax
65001724:	call   ebx
65001726:	mov    eax,DWORD PTR [esp+0xc]
6500172a:	push   eax
6500172b:	call   ebp
6500172d:	mov    DWORD PTR [esi+0x8],0x0
65001734:	mov    eax,DWORD PTR [esi+0x4]
65001737:	test   eax,eax
65001739:	mov    DWORD PTR [esp+0x10],eax
6500173d:	je     0x65001753
6500173f:	call   edi
65001741:	mov    ecx,DWORD PTR [esp+0x10]
65001745:	push   ecx
65001746:	mov    DWORD PTR [esp+0x10],eax
6500174a:	call   ebx
6500174c:	mov    edx,DWORD PTR [esp+0xc]
65001750:	push   edx
65001751:	call   ebp
65001753:	mov    DWORD PTR [esi+0x4],0x0
6500175a:	mov    eax,DWORD PTR [esi]
6500175c:	test   eax,eax
6500175e:	mov    DWORD PTR [esp+0x10],eax
65001762:	je     0x65001772
65001764:	call   edi
65001766:	mov    edi,eax
65001768:	mov    eax,DWORD PTR [esp+0x10]
6500176c:	push   eax
6500176d:	call   ebx
6500176f:	push   edi
65001770:	call   ebp
65001772:	pop    edi
65001773:	pop    ebp
65001774:	mov    DWORD PTR [esi],0x0
6500177a:	pop    ebx
6500177b:	add    esp,0x8
6500177e:	ret    
6500177f:	int3   
65001780:	push   ebx
65001781:	mov    ebx,DWORD PTR [esp+0x8]
65001785:	push   ebp
65001786:	mov    ebp,DWORD PTR [esp+0x10]
6500178a:	cmp    DWORD PTR [ebx+0x14],ebp
6500178d:	push   esi
6500178e:	push   edi
6500178f:	mov    esi,ecx
65001791:	jae    0x65001798
65001793:	call   0x65011ebe
65001798:	mov    edi,DWORD PTR [ebx+0x14]
6500179b:	mov    eax,DWORD PTR [esp+0x1c]
6500179f:	sub    edi,ebp
650017a1:	cmp    eax,edi
650017a3:	jae    0x650017a7
650017a5:	mov    edi,eax
650017a7:	cmp    esi,ebx
650017a9:	jne    0x650017ca
650017ab:	push   0xffffffff
650017ad:	add    edi,ebp
650017af:	push   edi
650017b0:	mov    ecx,esi
650017b2:	call   0x65001ac0
650017b7:	push   ebp
650017b8:	push   0x0
650017ba:	mov    ecx,esi
650017bc:	call   0x65001ac0
650017c1:	pop    edi
650017c2:	mov    eax,esi
650017c4:	pop    esi
650017c5:	pop    ebp
650017c6:	pop    ebx
650017c7:	ret    0xc
650017ca:	cmp    edi,0xfffffffe
650017cd:	jbe    0x650017d4
650017cf:	call   0x65011e7f
650017d4:	mov    eax,DWORD PTR [esi+0x18]
650017d7:	cmp    eax,edi
650017d9:	jae    0x650017f6
650017db:	mov    eax,DWORD PTR [esi+0x14]
650017de:	push   eax
650017df:	push   edi
650017e0:	mov    ecx,esi
650017e2:	call   0x65001b60
650017e7:	test   edi,edi
650017e9:	jbe    0x65001851
650017eb:	cmp    DWORD PTR [ebx+0x18],0x10
650017ef:	jb     0x65001820
650017f1:	mov    edx,DWORD PTR [ebx+0x4]
650017f4:	jmp    0x65001823
650017f6:	test   edi,edi
650017f8:	jne    0x650017e9
650017fa:	cmp    eax,0x10
650017fd:	mov    DWORD PTR [esi+0x14],edi
65001800:	jb     0x65001811
65001802:	mov    eax,DWORD PTR [esi+0x4]
65001805:	pop    edi
65001806:	mov    BYTE PTR [eax],0x0
65001809:	mov    eax,esi
6500180b:	pop    esi
6500180c:	pop    ebp
6500180d:	pop    ebx
6500180e:	ret    0xc
65001811:	lea    eax,[esi+0x4]
65001814:	pop    edi
65001815:	mov    BYTE PTR [eax],0x0
65001818:	mov    eax,esi
6500181a:	pop    esi
6500181b:	pop    ebp
6500181c:	pop    ebx
6500181d:	ret    0xc
65001820:	lea    edx,[ebx+0x4]
65001823:	mov    ecx,DWORD PTR [esi+0x18]
65001826:	cmp    ecx,0x10
65001829:	lea    ebx,[esi+0x4]
6500182c:	jb     0x65001832
6500182e:	mov    eax,DWORD PTR [ebx]
65001830:	jmp    0x65001834
65001832:	mov    eax,ebx
65001834:	push   edi
65001835:	add    edx,ebp
65001837:	push   edx
65001838:	push   ecx
65001839:	push   eax
6500183a:	call   0x65012073
6500183f:	add    esp,0x10
65001842:	cmp    DWORD PTR [esi+0x18],0x10
65001846:	mov    DWORD PTR [esi+0x14],edi
65001849:	jb     0x6500184d
6500184b:	mov    ebx,DWORD PTR [ebx]
6500184d:	mov    BYTE PTR [ebx+edi*1],0x0
65001851:	pop    edi
65001852:	mov    eax,esi
65001854:	pop    esi
65001855:	pop    ebp
65001856:	pop    ebx
65001857:	ret    0xc
6500185a:	int3   
6500185b:	int3   
6500185c:	int3   
6500185d:	int3   
6500185e:	int3   
6500185f:	int3   
65001860:	push   ebx
65001861:	push   ebp
65001862:	push   esi
65001863:	mov    esi,ecx
65001865:	mov    ecx,DWORD PTR [esi+0x18]
65001868:	cmp    ecx,0x10
6500186b:	lea    ebx,[esi+0x4]
6500186e:	jb     0x65001874
65001870:	mov    eax,DWORD PTR [ebx]
65001872:	jmp    0x65001876
65001874:	mov    eax,ebx
65001876:	mov    ebp,DWORD PTR [esp+0x10]
6500187a:	cmp    ebp,eax
6500187c:	jb     0x650018af
6500187e:	cmp    ecx,0x10
65001881:	jb     0x65001887
65001883:	mov    eax,DWORD PTR [ebx]
65001885:	jmp    0x65001889
65001887:	mov    eax,ebx
65001889:	mov    edx,DWORD PTR [esi+0x14]
6500188c:	add    edx,eax
6500188e:	cmp    edx,ebp
65001890:	jbe    0x650018af
65001892:	cmp    ecx,0x10
65001895:	jb     0x65001899
65001897:	mov    ebx,DWORD PTR [ebx]
65001899:	mov    eax,DWORD PTR [esp+0x14]
6500189d:	push   eax
6500189e:	sub    ebp,ebx
650018a0:	push   ebp
650018a1:	push   esi
650018a2:	mov    ecx,esi
650018a4:	call   0x65001780
650018a9:	pop    esi
650018aa:	pop    ebp
650018ab:	pop    ebx
650018ac:	ret    0x8
650018af:	push   edi
650018b0:	mov    edi,DWORD PTR [esp+0x18]
650018b4:	cmp    edi,0xfffffffe
650018b7:	jbe    0x650018be
650018b9:	call   0x65011e7f
650018be:	mov    eax,DWORD PTR [esi+0x18]
650018c1:	cmp    eax,edi
650018c3:	jae    0x650018e1
650018c5:	mov    ecx,DWORD PTR [esi+0x14]
650018c8:	push   ecx
650018c9:	push   edi
650018ca:	mov    ecx,esi
650018cc:	call   0x65001b60
650018d1:	test   edi,edi
650018d3:	jbe    0x65001918
650018d5:	mov    ecx,DWORD PTR [esi+0x18]
650018d8:	cmp    ecx,0x10
650018db:	jb     0x650018fb
650018dd:	mov    eax,DWORD PTR [ebx]
650018df:	jmp    0x650018fd
650018e1:	test   edi,edi
650018e3:	jne    0x650018d3
650018e5:	cmp    eax,0x10
650018e8:	mov    DWORD PTR [esi+0x14],edi
650018eb:	jb     0x650018ef
650018ed:	mov    ebx,DWORD PTR [ebx]
650018ef:	pop    edi
650018f0:	mov    eax,esi
650018f2:	pop    esi
650018f3:	pop    ebp
650018f4:	mov    BYTE PTR [ebx],0x0
650018f7:	pop    ebx
650018f8:	ret    0x8
650018fb:	mov    eax,ebx
650018fd:	push   edi
650018fe:	push   ebp
650018ff:	push   ecx
65001900:	push   eax
65001901:	call   0x65012073
65001906:	add    esp,0x10
65001909:	cmp    DWORD PTR [esi+0x18],0x10
6500190d:	mov    DWORD PTR [esi+0x14],edi
65001910:	jb     0x65001914
65001912:	mov    ebx,DWORD PTR [ebx]
65001914:	mov    BYTE PTR [ebx+edi*1],0x0
65001918:	pop    edi
65001919:	mov    eax,esi
6500191b:	pop    esi
6500191c:	pop    ebp
6500191d:	pop    ebx
6500191e:	ret    0x8
65001921:	int3   
65001922:	int3   
65001923:	int3   
65001924:	int3   
65001925:	int3   
65001926:	int3   
65001927:	int3   
65001928:	int3   
65001929:	int3   
6500192a:	int3   
6500192b:	int3   
6500192c:	int3   
6500192d:	int3   
6500192e:	int3   
6500192f:	int3   
65001930:	mov    eax,DWORD PTR [ecx]
65001932:	sub    eax,0x10
65001935:	lea    ecx,[eax+0xc]
65001938:	or     edx,0xffffffff
6500193b:	lock xadd DWORD PTR [ecx],edx
6500193f:	dec    edx
65001940:	test   edx,edx
65001942:	jg     0x6500194e
65001944:	mov    ecx,DWORD PTR [eax]
65001946:	mov    edx,DWORD PTR [ecx]
65001948:	push   eax
65001949:	mov    eax,DWORD PTR [edx+0x4]
6500194c:	call   eax
6500194e:	ret    
6500194f:	int3   
65001950:	push   ecx
65001951:	push   ebx
65001952:	push   ebp
65001953:	push   esi
65001954:	mov    esi,DWORD PTR [ecx]
65001956:	mov    ebx,DWORD PTR [esi-0xc]
65001959:	sub    esi,0x10
6500195c:	mov    DWORD PTR [esp+0xc],ecx
65001960:	mov    ecx,DWORD PTR [esi]
65001962:	mov    eax,DWORD PTR [ecx]
65001964:	mov    edx,DWORD PTR [eax+0x10]
65001967:	push   edi
65001968:	call   edx
6500196a:	mov    edx,DWORD PTR [eax]
6500196c:	mov    ebp,DWORD PTR [esp+0x18]
65001970:	push   0x2
65001972:	mov    ecx,eax
65001974:	mov    eax,DWORD PTR [edx]
65001976:	push   ebp
65001977:	call   eax
65001979:	mov    edi,eax
6500197b:	test   edi,edi
6500197d:	jne    0x65001984
6500197f:	call   0x65001b50
65001984:	cmp    ebx,ebp
65001986:	jge    0x6500198a
65001988:	mov    ebp,ebx
6500198a:	lea    eax,[ebp+ebp*1+0x2]
6500198e:	push   eax
6500198f:	lea    ecx,[esi+0x10]
65001992:	push   ecx
65001993:	push   eax
65001994:	lea    ebp,[edi+0x10]
65001997:	push   ebp
65001998:	call   0x65012073
6500199d:	add    esp,0x10
650019a0:	mov    DWORD PTR [edi+0x4],ebx
650019a3:	lea    edx,[esi+0xc]
650019a6:	or     eax,0xffffffff
650019a9:	lock xadd DWORD PTR [edx],eax
650019ad:	dec    eax
650019ae:	test   eax,eax
650019b0:	jg     0x650019bc
650019b2:	mov    ecx,DWORD PTR [esi]
650019b4:	mov    edx,DWORD PTR [ecx]
650019b6:	mov    eax,DWORD PTR [edx+0x4]
650019b9:	push   esi
650019ba:	call   eax
650019bc:	mov    ecx,DWORD PTR [esp+0x10]
650019c0:	pop    edi
650019c1:	pop    esi
650019c2:	mov    DWORD PTR [ecx],ebp
650019c4:	pop    ebp
650019c5:	pop    ebx
650019c6:	pop    ecx
650019c7:	ret    0x4
650019ca:	int3   
650019cb:	int3   
650019cc:	int3   
650019cd:	int3   
650019ce:	int3   
650019cf:	int3   
650019d0:	push   ebx
650019d1:	push   ebp
650019d2:	mov    ebp,DWORD PTR [esp+0xc]
650019d6:	push   edi
650019d7:	mov    edi,DWORD PTR [esp+0x14]
650019db:	cmp    DWORD PTR [ebp+0x14],edi
650019de:	mov    ebx,eax
650019e0:	jae    0x650019e7
650019e2:	call   0x65011ebe
650019e7:	mov    eax,DWORD PTR [ebp+0x14]
650019ea:	sub    eax,edi
650019ec:	cmp    eax,ebx
650019ee:	jae    0x650019f2
650019f0:	mov    ebx,eax
650019f2:	mov    eax,DWORD PTR [esi+0x14]
650019f5:	or     ecx,0xffffffff
650019f8:	sub    ecx,eax
650019fa:	cmp    ecx,ebx
650019fc:	jbe    0x65001a05
650019fe:	lea    edx,[eax+ebx*1]
65001a01:	cmp    edx,eax
65001a03:	jae    0x65001a0a
65001a05:	call   0x65011e7f
65001a0a:	test   ebx,ebx
65001a0c:	jbe    0x65001ab6
65001a12:	mov    edi,DWORD PTR [esi+0x14]
65001a15:	add    edi,ebx
65001a17:	cmp    edi,0xfffffffe
65001a1a:	jbe    0x65001a21
65001a1c:	call   0x65011e7f
65001a21:	mov    eax,DWORD PTR [esi+0x18]
65001a24:	cmp    eax,edi
65001a26:	jae    0x65001a43
65001a28:	mov    eax,DWORD PTR [esi+0x14]
65001a2b:	push   eax
65001a2c:	push   edi
65001a2d:	mov    ecx,esi
65001a2f:	call   0x65001b60
65001a34:	test   edi,edi
65001a36:	jbe    0x65001ab6
65001a38:	cmp    DWORD PTR [ebp+0x18],0x10
65001a3c:	jb     0x65001a6b
65001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
65001a41:	jmp    0x65001a6e
65001a43:	test   edi,edi
65001a45:	jne    0x65001a36
65001a47:	cmp    eax,0x10
65001a4a:	mov    DWORD PTR [esi+0x14],edi
65001a4d:	jb     0x65001a5d
65001a4f:	mov    eax,DWORD PTR [esi+0x4]
65001a52:	pop    edi
65001a53:	pop    ebp
65001a54:	mov    BYTE PTR [eax],0x0
65001a57:	mov    eax,esi
65001a59:	pop    ebx
65001a5a:	ret    0x8
65001a5d:	pop    edi
65001a5e:	lea    eax,[esi+0x4]
65001a61:	pop    ebp
65001a62:	mov    BYTE PTR [eax],0x0
65001a65:	mov    eax,esi
65001a67:	pop    ebx
65001a68:	ret    0x8
65001a6b:	add    ebp,0x4
65001a6e:	mov    eax,DWORD PTR [esi+0x18]
65001a71:	cmp    eax,0x10
65001a74:	jb     0x65001a7b
65001a76:	mov    edx,DWORD PTR [esi+0x4]
65001a79:	jmp    0x65001a7e
65001a7b:	lea    edx,[esi+0x4]
65001a7e:	mov    ecx,DWORD PTR [esi+0x14]
65001a81:	push   ebx
65001a82:	mov    ebx,DWORD PTR [esp+0x18]
65001a86:	add    ebp,ebx
65001a88:	sub    eax,ecx
65001a8a:	push   ebp
65001a8b:	push   eax
65001a8c:	add    ecx,edx
65001a8e:	push   ecx
65001a8f:	call   0x65012073
65001a94:	add    esp,0x10
65001a97:	cmp    DWORD PTR [esi+0x18],0x10
65001a9b:	mov    DWORD PTR [esi+0x14],edi
65001a9e:	jb     0x65001aaf
65001aa0:	mov    eax,DWORD PTR [esi+0x4]
65001aa3:	mov    BYTE PTR [eax+edi*1],0x0
65001aa7:	pop    edi
65001aa8:	pop    ebp
65001aa9:	mov    eax,esi
65001aab:	pop    ebx
65001aac:	ret    0x8
65001aaf:	lea    eax,[esi+0x4]
65001ab2:	mov    BYTE PTR [eax+edi*1],0x0
65001ab6:	pop    edi
65001ab7:	pop    ebp
65001ab8:	mov    eax,esi
65001aba:	pop    ebx
65001abb:	ret    0x8
65001abe:	int3   
65001abf:	int3   
65001ac0:	push   ebx
65001ac1:	mov    ebx,DWORD PTR [esp+0x8]
65001ac5:	push   esi
65001ac6:	mov    esi,ecx
65001ac8:	cmp    DWORD PTR [esi+0x14],ebx
65001acb:	push   edi
65001acc:	jae    0x65001ad3
65001ace:	call   0x65011ebe
65001ad3:	mov    eax,DWORD PTR [esi+0x14]
65001ad6:	mov    edi,DWORD PTR [esp+0x14]
65001ada:	sub    eax,ebx
65001adc:	cmp    eax,edi
65001ade:	jae    0x65001ae2
65001ae0:	mov    edi,eax
65001ae2:	test   edi,edi
65001ae4:	jbe    0x65001b3b
65001ae6:	mov    ecx,DWORD PTR [esi+0x18]
65001ae9:	cmp    ecx,0x10
65001aec:	push   ebp
65001aed:	lea    ebp,[esi+0x4]
65001af0:	jb     0x65001afb
65001af2:	mov    edx,DWORD PTR [ebp+0x0]
65001af5:	mov    DWORD PTR [esp+0x14],edx
65001af9:	jmp    0x65001aff
65001afb:	mov    DWORD PTR [esp+0x14],ebp
65001aff:	cmp    ecx,0x10
65001b02:	jb     0x65001b09
65001b04:	mov    edx,DWORD PTR [ebp+0x0]
65001b07:	jmp    0x65001b0b
65001b09:	mov    edx,ebp
65001b0b:	sub    eax,edi
65001b0d:	push   eax
65001b0e:	mov    eax,DWORD PTR [esp+0x18]
65001b12:	add    eax,ebx
65001b14:	add    eax,edi
65001b16:	push   eax
65001b17:	sub    ecx,ebx
65001b19:	push   ecx
65001b1a:	add    edx,ebx
65001b1c:	push   edx
65001b1d:	call   0x650120ee
65001b22:	mov    eax,DWORD PTR [esi+0x14]
65001b25:	sub    eax,edi
65001b27:	add    esp,0x10
65001b2a:	cmp    DWORD PTR [esi+0x18],0x10
65001b2e:	mov    DWORD PTR [esi+0x14],eax
65001b31:	jb     0x65001b36
65001b33:	mov    ebp,DWORD PTR [ebp+0x0]
65001b36:	mov    BYTE PTR [eax+ebp*1],0x0
65001b3a:	pop    ebp
65001b3b:	pop    edi
65001b3c:	mov    eax,esi
65001b3e:	pop    esi
65001b3f:	pop    ebx
65001b40:	ret    0x8
65001b43:	int3   
65001b44:	int3   
65001b45:	int3   
65001b46:	int3   
65001b47:	int3   
65001b48:	int3   
65001b49:	int3   
65001b4a:	int3   
65001b4b:	int3   
65001b4c:	int3   
65001b4d:	int3   
65001b4e:	int3   
65001b4f:	int3   
65001b50:	push   0x8007000e
65001b55:	call   0x65001040
65001b5a:	int3   
65001b5b:	int3   
65001b5c:	int3   
65001b5d:	int3   
65001b5e:	int3   
65001b5f:	int3   
65001b60:	push   ebp
65001b61:	mov    ebp,esp
65001b63:	push   0xffffffff
65001b65:	push   0x65022200
65001b6a:	mov    eax,fs:0x0
65001b70:	push   eax
65001b71:	sub    esp,0x1c
65001b74:	push   ebx
65001b75:	push   esi
65001b76:	push   edi
65001b77:	mov    eax,ds:0x6502c09c
65001b7c:	xor    eax,ebp
65001b7e:	push   eax
65001b7f:	lea    eax,[ebp-0xc]
65001b82:	mov    fs:0x0,eax
65001b88:	mov    DWORD PTR [ebp-0x10],esp
65001b8b:	mov    edi,ecx
65001b8d:	mov    DWORD PTR [ebp-0x14],edi
65001b90:	mov    eax,DWORD PTR [ebp+0x8]
65001b93:	mov    esi,eax
65001b95:	or     esi,0xf
65001b98:	cmp    esi,0xfffffffe
65001b9b:	jbe    0x65001ba1
65001b9d:	mov    esi,eax
65001b9f:	jmp    0x65001bc3
65001ba1:	mov    ebx,DWORD PTR [edi+0x18]
65001ba4:	mov    eax,0xaaaaaaab
65001ba9:	mul    esi
65001bab:	mov    ecx,ebx
65001bad:	shr    ecx,1
65001baf:	shr    edx,1
65001bb1:	cmp    edx,ecx
65001bb3:	jae    0x65001bc3
65001bb5:	mov    eax,0xfffffffe
65001bba:	sub    eax,ecx
65001bbc:	cmp    ebx,eax
65001bbe:	ja     0x65001bc3
65001bc0:	lea    esi,[ecx+ebx*1]
65001bc3:	xor    ebx,ebx
65001bc5:	lea    ecx,[esi+0x1]
65001bc8:	cmp    ecx,ebx
65001bca:	mov    DWORD PTR [ebp-0x4],ebx
65001bcd:	ja     0x65001bdf
65001bcf:	xor    ecx,ecx
65001bd1:	push   ecx
65001bd2:	call   0x6501229c
65001bd7:	add    esp,0x4
65001bda:	mov    DWORD PTR [ebp+0x8],eax
65001bdd:	jmp    0x65001c37
65001bdf:	or     eax,0xffffffff
65001be2:	xor    edx,edx
65001be4:	div    ecx
65001be6:	cmp    eax,0x1
65001be9:	jae    0x65001bd1
65001beb:	lea    ecx,[ebp-0x18]
65001bee:	push   ecx
65001bef:	lea    ecx,[ebp-0x28]
65001bf2:	mov    DWORD PTR [ebp-0x18],ebx
65001bf5:	call   0x65011f18
65001bfa:	push   0x65029dfc
65001bff:	lea    edx,[ebp-0x28]
65001c02:	push   edx
65001c03:	mov    DWORD PTR [ebp-0x28],0x65024b44
65001c0a:	call   0x65012306
65001c0f:	mov    eax,DWORD PTR [ebp+0x8]
65001c12:	mov    ecx,DWORD PTR [ebp-0x14]
65001c15:	mov    DWORD PTR [ebp-0x1c],eax
65001c18:	add    eax,0x1
65001c1b:	mov    DWORD PTR [ebp-0x10],esp
65001c1e:	push   eax
65001c1f:	mov    BYTE PTR [ebp-0x4],0x2
65001c23:	call   0x65001ce0
65001c28:	mov    DWORD PTR [ebp+0x8],eax
65001c2b:	mov    eax,0x65001c31
65001c30:	ret    
65001c31:	mov    edi,DWORD PTR [ebp-0x14]
65001c34:	mov    esi,DWORD PTR [ebp-0x1c]
65001c37:	mov    ebx,DWORD PTR [ebp+0xc]
65001c3a:	test   ebx,ebx
65001c3c:	jbe    0x65001c5e
65001c3e:	cmp    DWORD PTR [edi+0x18],0x10
65001c42:	jb     0x65001c49
65001c44:	mov    eax,DWORD PTR [edi+0x4]
65001c47:	jmp    0x65001c4c
65001c49:	lea    eax,[edi+0x4]
65001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
65001c4f:	push   ebx
65001c50:	push   eax
65001c51:	lea    eax,[esi+0x1]
65001c54:	push   eax
65001c55:	push   ecx
65001c56:	call   0x65012073
65001c5b:	add    esp,0x10
65001c5e:	cmp    DWORD PTR [edi+0x18],0x10
65001c62:	jb     0x65001c70
65001c64:	mov    edx,DWORD PTR [edi+0x4]
65001c67:	push   edx
65001c68:	call   0x65011f02
65001c6d:	add    esp,0x4
65001c70:	cmp    esi,0x10
65001c73:	mov    ecx,DWORD PTR [ebp+0x8]
65001c76:	lea    eax,[edi+0x4]
65001c79:	mov    BYTE PTR [eax],0x0
65001c7c:	mov    DWORD PTR [eax],ecx
65001c7e:	mov    DWORD PTR [edi+0x18],esi
65001c81:	mov    DWORD PTR [edi+0x14],ebx
65001c84:	jb     0x65001c88
65001c86:	mov    eax,ecx
65001c88:	mov    BYTE PTR [eax+ebx*1],0x0
65001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
65001c8f:	mov    DWORD PTR fs:0x0,ecx
65001c96:	pop    ecx
65001c97:	pop    edi
65001c98:	pop    esi
65001c99:	pop    ebx
65001c9a:	mov    esp,ebp
65001c9c:	pop    ebp
65001c9d:	ret    0x8
65001ca0:	mov    esi,DWORD PTR [ebp-0x14]
65001ca3:	cmp    DWORD PTR [esi+0x18],0x10
65001ca7:	jb     0x65001cb5
65001ca9:	mov    eax,DWORD PTR [esi+0x4]
65001cac:	push   eax
65001cad:	call   0x65011f02
65001cb2:	add    esp,0x4
65001cb5:	push   0x0
65001cb7:	mov    DWORD PTR [esi+0x18],0xf
65001cbe:	mov    DWORD PTR [esi+0x14],0x0
65001cc5:	push   0x0
65001cc7:	mov    BYTE PTR [esi+0x4],0x0
65001ccb:	call   0x65012306
65001cd0:	int3   
65001cd1:	int3   
65001cd2:	int3   
65001cd3:	int3   
65001cd4:	int3   
65001cd5:	int3   
65001cd6:	int3   
65001cd7:	int3   
65001cd8:	int3   
65001cd9:	int3   
65001cda:	int3   
65001cdb:	int3   
65001cdc:	int3   
65001cdd:	int3   
65001cde:	int3   
65001cdf:	int3   
65001ce0:	mov    ecx,DWORD PTR [esp+0x4]
65001ce4:	sub    esp,0xc
65001ce7:	test   ecx,ecx
65001ce9:	ja     0x65001cfc
65001ceb:	xor    ecx,ecx
65001ced:	push   ecx
65001cee:	call   0x6501229c
65001cf3:	add    esp,0x4
65001cf6:	add    esp,0xc
65001cf9:	ret    0x4
65001cfc:	or     eax,0xffffffff
65001cff:	xor    edx,edx
65001d01:	div    ecx
65001d03:	cmp    eax,0x1
65001d06:	jae    0x65001ced
65001d08:	lea    eax,[esp+0x10]
65001d0c:	push   eax
65001d0d:	lea    ecx,[esp+0x4]
65001d11:	mov    DWORD PTR [esp+0x14],0x0
65001d19:	call   0x65011f18
65001d1e:	push   0x65029dfc
65001d23:	lea    ecx,[esp+0x4]
65001d27:	push   ecx
65001d28:	mov    DWORD PTR [esp+0x8],0x65024b44
65001d30:	call   0x65012306
65001d35:	int3   
65001d36:	int3   
65001d37:	int3   
65001d38:	int3   
65001d39:	int3   
65001d3a:	int3   
65001d3b:	int3   
65001d3c:	int3   
65001d3d:	int3   
65001d3e:	int3   
65001d3f:	int3   
65001d40:	mov    ecx,DWORD PTR [esp+0x8]
65001d44:	lea    eax,[esp+0xc]
65001d48:	push   eax
65001d49:	push   ecx
65001d4a:	mov    ecx,DWORD PTR [esp+0xc]
65001d4e:	call   0x65001d80
65001d53:	ret    
65001d54:	int3   
65001d55:	int3   
65001d56:	int3   
65001d57:	int3   
65001d58:	int3   
65001d59:	int3   
65001d5a:	int3   
65001d5b:	int3   
65001d5c:	int3   
65001d5d:	int3   
65001d5e:	int3   
65001d5f:	int3   
65001d60:	mov    eax,DWORD PTR [esp+0x4]
65001d64:	push   esi
65001d65:	push   eax
65001d66:	mov    esi,ecx
65001d68:	call   0x65011f7e
65001d6d:	mov    DWORD PTR [esi],0x65024b44
65001d73:	mov    eax,esi
65001d75:	pop    esi
65001d76:	ret    0x4
65001d79:	int3   
65001d7a:	int3   
65001d7b:	int3   
65001d7c:	int3   
65001d7d:	int3   
65001d7e:	int3   
65001d7f:	int3   
65001d80:	push   ebx
65001d81:	mov    ebx,DWORD PTR [esp+0x8]
65001d85:	test   ebx,ebx
65001d87:	push   edi
65001d88:	mov    edi,ecx
65001d8a:	jne    0x65001d96
65001d8c:	push   0x80070057
65001d91:	call   0x65001040
65001d96:	push   ebp
65001d97:	mov    ebp,DWORD PTR [esp+0x14]
65001d9b:	push   esi
65001d9c:	push   ebp
65001d9d:	push   ebx
65001d9e:	call   0x650129d6
65001da3:	mov    esi,eax
65001da5:	mov    eax,DWORD PTR [edi]
65001da7:	mov    edx,DWORD PTR [eax-0x8]
65001daa:	sub    eax,0x10
65001dad:	mov    ecx,0x1
65001db2:	sub    ecx,DWORD PTR [eax+0xc]
65001db5:	sub    edx,esi
65001db7:	add    esp,0x8
65001dba:	or     ecx,edx
65001dbc:	jge    0x65001dc6
65001dbe:	push   esi
65001dbf:	mov    ecx,edi
65001dc1:	call   0x65001e00
65001dc6:	mov    ecx,DWORD PTR [edi]
65001dc8:	push   ebp
65001dc9:	push   ebx
65001dca:	lea    eax,[esi+0x1]
65001dcd:	push   eax
65001dce:	push   ecx
65001dcf:	call   0x65012b6b
65001dd4:	add    esp,0x10
65001dd7:	test   esi,esi
65001dd9:	jl     0x65001df4
65001ddb:	mov    eax,DWORD PTR [edi]
65001ddd:	cmp    esi,DWORD PTR [eax-0x8]
65001de0:	jg     0x65001df4
65001de2:	mov    DWORD PTR [eax-0xc],esi
65001de5:	mov    edx,DWORD PTR [edi]
65001de7:	mov    WORD PTR [edx+esi*2],0x0
65001ded:	pop    esi
65001dee:	pop    ebp
65001def:	pop    edi
65001df0:	pop    ebx
65001df1:	ret    0x8
65001df4:	push   0x80070057
65001df9:	call   0x65001040
65001dfe:	int3   
65001dff:	int3   
65001e00:	mov    eax,DWORD PTR [ecx]
65001e02:	mov    edx,DWORD PTR [esp+0x4]
65001e06:	sub    eax,0x10
65001e09:	push   esi
65001e0a:	mov    esi,DWORD PTR [eax+0x4]
65001e0d:	cmp    esi,edx
65001e0f:	jle    0x65001e13
65001e11:	mov    edx,esi
65001e13:	cmp    DWORD PTR [eax+0xc],0x1
65001e17:	pop    esi
65001e18:	jle    0x65001e23
65001e1a:	mov    DWORD PTR [esp+0x4],edx
65001e1e:	jmp    0x65001950
65001e23:	mov    eax,DWORD PTR [eax+0x8]
65001e26:	cmp    eax,edx
65001e28:	jge    0x65001e49
65001e2a:	cmp    eax,0x400
65001e2f:	jle    0x65001e38
65001e31:	add    eax,0x400
65001e36:	jmp    0x65001e3a
65001e38:	add    eax,eax
65001e3a:	cmp    eax,edx
65001e3c:	jge    0x65001e40
65001e3e:	mov    eax,edx
65001e40:	mov    DWORD PTR [esp+0x4],eax
65001e44:	jmp    0x65001e50
65001e49:	ret    0x4
65001e4c:	int3   
65001e4d:	int3   
65001e4e:	int3   
65001e4f:	int3   
65001e50:	mov    edx,DWORD PTR [esp+0x4]
65001e54:	push   esi
65001e55:	mov    esi,ecx
65001e57:	mov    eax,DWORD PTR [esi]
65001e59:	mov    ecx,DWORD PTR [eax-0x10]
65001e5c:	sub    eax,0x10
65001e5f:	cmp    DWORD PTR [eax+0x8],edx
65001e62:	jge    0x65001e79
65001e64:	test   edx,edx
65001e66:	jle    0x65001e79
65001e68:	push   edi
65001e69:	mov    edi,DWORD PTR [ecx]
65001e6b:	push   0x2
65001e6d:	push   edx
65001e6e:	push   eax
65001e6f:	mov    eax,DWORD PTR [edi+0x8]
65001e72:	call   eax
65001e74:	test   eax,eax
65001e76:	pop    edi
65001e77:	jne    0x65001e7e
65001e79:	call   0x65001b50
65001e7e:	add    eax,0x10
65001e81:	mov    DWORD PTR [esi],eax
65001e83:	pop    esi
65001e84:	ret    0x4
65001e87:	int3   
65001e88:	int3   
65001e89:	int3   
65001e8a:	int3   
65001e8b:	int3   
65001e8c:	int3   
65001e8d:	int3   
65001e8e:	int3   
65001e8f:	int3   
65001e90:	mov    eax,DWORD PTR [esp+0x4]
65001e94:	cmp    eax,0x50
65001e97:	ja     0x65001ebb
65001e99:	movzx  ecx,BYTE PTR [eax+0x65001ed8]
65001ea0:	jmp    DWORD PTR [ecx*4+0x65001ec8]
65001ea7:	push   0x8007000e
65001eac:	call   0x65001040
65001eb1:	push   0x80070057
65001eb6:	call   0x65001040
65001ebb:	push   0x80004005
65001ec0:	call   0x65001040
65001ec5:	ret    
65001ec6:	mov    edi,edi
65001ec8:	lds    ebx,FWORD PTR [esi]
65001eca:	add    BYTE PTR [ebp-0x59],ah
65001ecd:	push   ds
65001ece:	add    BYTE PTR [ebp-0x4f],ah
65001ed1:	push   ds
65001ed2:	add    BYTE PTR [ebp-0x45],ah
65001ed5:	push   ds
65001ed6:	add    BYTE PTR [ebp+0x0],ah
65001ed9:	add    eax,DWORD PTR [ebx]
65001edb:	add    eax,DWORD PTR [ebx]
65001edd:	add    eax,DWORD PTR [ebx]
65001edf:	add    eax,DWORD PTR [ebx]
65001ee1:	add    eax,DWORD PTR [ebx]
65001ee3:	add    eax,DWORD PTR [ecx]
65001ee5:	add    eax,DWORD PTR [ebx]
65001ee7:	add    eax,DWORD PTR [ebx]
65001ee9:	add    eax,DWORD PTR [ebx]
65001eeb:	add    eax,DWORD PTR [ebx]
65001eed:	add    eax,DWORD PTR [edx]
65001eef:	add    eax,DWORD PTR [ebx]
65001ef1:	add    eax,DWORD PTR [ebx]
65001ef3:	add    eax,DWORD PTR [ebx]
65001ef5:	add    eax,DWORD PTR [ebx]
65001ef7:	add    eax,DWORD PTR [ebx]
65001ef9:	add    eax,DWORD PTR [edx]
65001efb:	add    eax,DWORD PTR [ebx]
65001efd:	add    eax,DWORD PTR [ebx]
65001eff:	add    eax,DWORD PTR [ebx]
65001f01:	add    eax,DWORD PTR [ebx]
65001f03:	add    eax,DWORD PTR [ebx]
65001f05:	add    eax,DWORD PTR [ebx]
65001f07:	add    eax,DWORD PTR [ebx]
65001f09:	add    eax,DWORD PTR [ebx]
65001f0b:	add    eax,DWORD PTR [ebx]
65001f0d:	add    eax,DWORD PTR [ebx]
65001f0f:	add    eax,DWORD PTR [ebx]
65001f11:	add    eax,DWORD PTR [ebx]
65001f13:	add    eax,DWORD PTR [ebx]
65001f15:	add    eax,DWORD PTR [ebx]
65001f17:	add    eax,DWORD PTR [ebx]
65001f19:	add    eax,DWORD PTR [ebx]
65001f1b:	add    eax,DWORD PTR [ebx]
65001f1d:	add    eax,DWORD PTR [ebx]
65001f1f:	add    eax,DWORD PTR [ebx]
65001f21:	add    eax,DWORD PTR [ebx]
65001f23:	add    eax,DWORD PTR [ebx]
65001f25:	add    eax,DWORD PTR [ebx]
65001f27:	add    eax,DWORD PTR [eax]
65001f29:	int3   
65001f2a:	int3   
65001f2b:	int3   
65001f2c:	int3   
65001f2d:	int3   
65001f2e:	int3   
65001f2f:	int3   
65001f30:	push   ebx
65001f31:	mov    ebx,DWORD PTR [esp+0x8]
65001f35:	push   edi
65001f36:	mov    edi,DWORD PTR [esp+0x10]
65001f3a:	push   edi
65001f3b:	push   ebx
65001f3c:	call   DWORD PTR ds:0x65024034
65001f42:	test   eax,eax
65001f44:	jne    0x65001f49
65001f46:	pop    edi
65001f47:	pop    ebx
65001f48:	ret    
65001f49:	push   esi
65001f4a:	push   eax
65001f4b:	call   DWORD PTR ds:0x65024030
65001f51:	mov    esi,eax
65001f53:	test   esi,esi
65001f55:	je     0x65001f84
65001f57:	push   edi
65001f58:	push   ebx
65001f59:	call   DWORD PTR ds:0x6502402c
65001f5f:	mov    ecx,DWORD PTR [esp+0x18]
65001f63:	add    eax,esi
65001f65:	and    ecx,0xf
65001f68:	jbe    0x65001f80
65001f6a:	lea    ebx,[ebx+0x0]
65001f70:	cmp    esi,eax
65001f72:	jae    0x65001f84
65001f74:	sub    ecx,0x1
65001f77:	movzx  edx,WORD PTR [esi]
65001f7a:	lea    esi,[esi+edx*2+0x2]
65001f7e:	jne    0x65001f70
65001f80:	cmp    esi,eax
65001f82:	jb     0x65001f8a
65001f84:	pop    esi
65001f85:	pop    edi
65001f86:	xor    eax,eax
65001f88:	pop    ebx
65001f89:	ret    
65001f8a:	mov    ax,WORD PTR [esi]
65001f8d:	neg    ax
65001f90:	sbb    eax,eax
65001f92:	and    eax,esi
65001f94:	pop    esi
65001f95:	pop    edi
65001f96:	pop    ebx
65001f97:	ret    
65001f98:	int3   
65001f99:	int3   
65001f9a:	int3   
65001f9b:	int3   
65001f9c:	int3   
65001f9d:	int3   
65001f9e:	int3   
65001f9f:	int3   
65001fa0:	push   ebx
65001fa1:	push   ebp
65001fa2:	push   esi
65001fa3:	push   edi
65001fa4:	xor    edi,edi
65001fa6:	push   edi
65001fa7:	mov    ecx,0x6502d4ec
65001fac:	call   0x65011b31
65001fb1:	mov    esi,eax
65001fb3:	test   esi,esi
65001fb5:	lea    ebp,[edi+0x1]
65001fb8:	je     0x65002007
65001fba:	mov    ebx,DWORD PTR [esp+0x14]
65001fbe:	mov    edi,edi
65001fc0:	test   edi,edi
65001fc2:	jne    0x65002007
65001fc4:	mov    eax,DWORD PTR [esp+0x18]
65001fc8:	mov    ecx,ebx
65001fca:	shr    ecx,0x4
65001fcd:	add    ecx,0x1
65001fd0:	push   eax
65001fd1:	movzx  edx,cx
65001fd4:	push   edx
65001fd5:	push   0x6
65001fd7:	push   esi
65001fd8:	call   DWORD PTR ds:0x6502403c
65001fde:	test   eax,eax
65001fe0:	je     0x65001ff3
65001fe2:	push   ebx
65001fe3:	push   eax
65001fe4:	push   esi
65001fe5:	call   0x65001f30
65001fea:	mov    edi,eax
65001fec:	add    esp,0xc
65001fef:	test   edi,edi
65001ff1:	jne    0x6500200e
65001ff3:	push   ebp
65001ff4:	mov    ecx,0x6502d4ec
65001ff9:	call   0x65011b31
65001ffe:	mov    esi,eax
65002000:	add    ebp,0x1
65002003:	test   esi,esi
65002005:	jne    0x65001fc0
65002007:	pop    edi
65002008:	pop    esi
65002009:	pop    ebp
6500200a:	xor    eax,eax
6500200c:	pop    ebx
6500200d:	ret    
6500200e:	pop    edi
6500200f:	mov    eax,esi
65002011:	pop    esi
65002012:	pop    ebp
65002013:	pop    ebx
65002014:	ret    
65002015:	int3   
65002016:	int3   
65002017:	int3   
65002018:	int3   
65002019:	int3   
6500201a:	int3   
6500201b:	int3   
6500201c:	int3   
6500201d:	int3   
6500201e:	int3   
6500201f:	int3   
65002020:	push   0xffffffff
65002022:	push   0x650224d8
65002027:	mov    eax,fs:0x0
6500202d:	push   eax
6500202e:	push   ecx
6500202f:	push   esi
65002030:	mov    eax,ds:0x6502c09c
65002035:	xor    eax,esp
65002037:	push   eax
65002038:	lea    eax,[esp+0xc]
6500203c:	mov    fs:0x0,eax
65002042:	mov    esi,ecx
65002044:	mov    DWORD PTR [esp+0x8],esi
65002048:	call   0x65011f07
6500204d:	xor    eax,eax
6500204f:	mov    DWORD PTR [esp+0x14],eax
65002053:	lea    ecx,[esi+0xc]
65002056:	mov    DWORD PTR [esi],0x65026624
6500205c:	push   0xffffffff
6500205e:	mov    DWORD PTR [ecx+0x14],eax
65002061:	mov    DWORD PTR [ecx+0x18],0xf
65002068:	push   eax
65002069:	mov    BYTE PTR [ecx+0x4],al
6500206c:	mov    eax,DWORD PTR [esp+0x24]
65002070:	push   eax
65002071:	call   0x65001780
65002076:	mov    eax,esi
65002078:	mov    ecx,DWORD PTR [esp+0xc]
6500207c:	mov    DWORD PTR fs:0x0,ecx
65002083:	pop    ecx
65002084:	pop    esi
65002085:	add    esp,0x10
65002088:	ret    0x4
6500208b:	int3   
6500208c:	int3   
6500208d:	int3   
6500208e:	int3   
6500208f:	int3   
65002090:	push   esi
65002091:	mov    esi,ecx
65002093:	mov    DWORD PTR [esi],0x65026624
65002099:	cmp    DWORD PTR [esi+0x24],0x10
6500209d:	jb     0x650020ab
6500209f:	mov    eax,DWORD PTR [esi+0x10]
650020a2:	push   eax
650020a3:	call   0x65011f02
650020a8:	add    esp,0x4
650020ab:	xor    eax,eax
650020ad:	mov    DWORD PTR [esi+0x24],0xf
650020b4:	mov    DWORD PTR [esi+0x20],eax
650020b7:	mov    ecx,esi
650020b9:	mov    BYTE PTR [esi+0x10],al
650020bc:	call   0x65011fd6
650020c1:	test   BYTE PTR [esp+0x8],0x1
650020c6:	je     0x650020d1
650020c8:	push   esi
650020c9:	call   0x65011f02
650020ce:	add    esp,0x4
650020d1:	mov    eax,esi
650020d3:	pop    esi
650020d4:	ret    0x4
650020d7:	int3   
650020d8:	int3   
650020d9:	int3   
650020da:	int3   
650020db:	int3   
650020dc:	int3   
650020dd:	int3   
650020de:	int3   
650020df:	int3   
650020e0:	push   0xffffffff
650020e2:	push   0x650224a8
650020e7:	mov    eax,fs:0x0
650020ed:	push   eax
650020ee:	push   ecx
650020ef:	push   esi
650020f0:	push   edi
650020f1:	mov    eax,ds:0x6502c09c
650020f6:	xor    eax,esp
650020f8:	push   eax
650020f9:	lea    eax,[esp+0x10]
650020fd:	mov    fs:0x0,eax
65002103:	mov    esi,ecx
65002105:	mov    DWORD PTR [esp+0xc],esi
65002109:	mov    edi,DWORD PTR [esp+0x20]
6500210d:	push   edi
6500210e:	call   0x65011f7e
65002113:	xor    edx,edx
65002115:	mov    DWORD PTR [esp+0x18],edx
65002119:	push   0xffffffff
6500211b:	lea    ecx,[esi+0xc]
6500211e:	mov    DWORD PTR [esi],0x65026624
65002124:	lea    eax,[edi+0xc]
65002127:	push   edx
65002128:	mov    DWORD PTR [ecx+0x18],0xf
6500212f:	mov    DWORD PTR [ecx+0x14],edx
65002132:	push   eax
65002133:	mov    BYTE PTR [ecx+0x4],dl
65002136:	call   0x65001780
6500213b:	mov    eax,esi
6500213d:	mov    ecx,DWORD PTR [esp+0x10]
65002141:	mov    DWORD PTR fs:0x0,ecx
65002148:	pop    ecx
65002149:	pop    edi
6500214a:	pop    esi
6500214b:	add    esp,0x10
6500214e:	ret    0x4
65002151:	int3   
65002152:	int3   
65002153:	int3   
65002154:	int3   
65002155:	int3   
65002156:	int3   
65002157:	int3   
65002158:	int3   
65002159:	int3   
6500215a:	int3   
6500215b:	int3   
6500215c:	int3   
6500215d:	int3   
6500215e:	int3   
6500215f:	int3   
65002160:	push   ebp
65002161:	mov    ebp,esp
65002163:	and    esp,0xfffffff8
65002166:	push   0xffffffff
65002168:	push   0x65022d7b
6500216d:	mov    eax,fs:0x0
65002173:	push   eax
65002174:	sub    esp,0x428
6500217a:	mov    eax,ds:0x6502c09c
6500217f:	xor    eax,esp
65002181:	mov    DWORD PTR [esp+0x420],eax
65002188:	push   ebx
65002189:	push   esi
6500218a:	push   edi
6500218b:	mov    eax,ds:0x6502c09c
65002190:	xor    eax,esp
65002192:	push   eax
65002193:	lea    eax,[esp+0x438]
6500219a:	mov    fs:0x0,eax
650021a0:	mov    eax,DWORD PTR [ebp+0x10]
650021a3:	mov    esi,DWORD PTR [ebp+0x8]
650021a6:	mov    ebx,DWORD PTR [ebp+0xc]
650021a9:	lea    ecx,[esp+0x224]
650021b0:	push   ecx
650021b1:	push   0x100
650021b6:	mov    DWORD PTR [esp+0x1c],esi
650021ba:	mov    DWORD PTR [esp+0x20],eax
650021be:	mov    DWORD PTR [esp+0x18],0x0
650021c6:	call   0x6500e1b0
650021cb:	call   eax
650021cd:	cmp    eax,0x100
650021d2:	jbe    0x650021e5
650021d4:	push   0x65026614
650021d9:	mov    ecx,esi
650021db:	call   0x65002550
650021e0:	jmp    0x65002377
650021e5:	lea    edx,[esp+0x1c]
650021e9:	push   edx
650021ea:	push   0x0
650021ec:	lea    eax,[esp+0x22c]
650021f3:	push   0x65026618
650021f8:	push   eax
650021f9:	call   0x6500e230
650021fe:	call   eax
65002200:	test   eax,eax
65002202:	je     0x650021d4
65002204:	mov    edi,DWORD PTR ds:0x6502404c
6500220a:	xor    esi,esi
6500220c:	lea    esp,[esp+0x0]
65002210:	cmp    esi,0x708
65002216:	je     0x650022f5
6500221c:	lea    ecx,[esp+0x1c]
65002220:	push   ecx
65002221:	call   0x6500e090
65002226:	call   eax
65002228:	test   eax,eax
6500222a:	jne    0x6500223d
6500222c:	push   esi
6500222d:	call   edi
6500222f:	add    esi,0xc8
65002235:	cmp    esi,0x7d0
6500223b:	jne    0x65002210
6500223d:	xor    esi,esi
6500223f:	cmp    esi,0x708
65002245:	je     0x650022f5
6500224b:	lea    edx,[esp+0x1c]
6500224f:	push   0x0
65002251:	push   edx
65002252:	call   0x6500e2b0
65002257:	call   eax
65002259:	test   eax,eax
6500225b:	jne    0x6500226e
6500225d:	push   esi
6500225e:	call   edi
65002260:	add    esi,0xc8
65002266:	cmp    esi,0x7d0
6500226c:	jne    0x6500223f
6500226e:	lea    eax,[esp+0x1c]
65002272:	lea    edx,[eax+0x2]
65002275:	mov    cx,WORD PTR [eax]
65002278:	add    eax,0x2
6500227b:	test   cx,cx
6500227e:	jne    0x65002275
65002280:	mov    ecx,DWORD PTR [esp+0x18]
65002284:	sub    eax,edx
65002286:	sar    eax,1
65002288:	push   eax
65002289:	lea    eax,[esp+0x20]
6500228d:	push   eax
6500228e:	call   0x65002aa0
65002293:	lea    ecx,[esp+0x1c]
65002297:	push   ecx
65002298:	lea    ecx,[esp+0x14]
6500229c:	call   0x65002550
650022a1:	push   0x65026620
650022a6:	lea    ecx,[esp+0x14]
650022aa:	mov    DWORD PTR [esp+0x444],0x0
650022b5:	call   0x65002620
650022ba:	mov    eax,DWORD PTR [ebx]
650022bc:	mov    ecx,DWORD PTR [eax-0xc]
650022bf:	push   ecx
650022c0:	push   eax
650022c1:	lea    ecx,[esp+0x18]
650022c5:	call   0x650029a0
650022ca:	mov    esi,DWORD PTR [esp+0x10]
650022ce:	mov    ecx,DWORD PTR [esi-0x10]
650022d1:	mov    edx,DWORD PTR [ecx]
650022d3:	mov    eax,DWORD PTR [edx+0x10]
650022d6:	add    esi,0xfffffff0
650022d9:	call   eax
650022db:	cmp    DWORD PTR [esi+0xc],0x0
650022df:	lea    edx,[esi+0xc]
650022e2:	jl     0x65002307
650022e4:	cmp    eax,DWORD PTR [esi]
650022e6:	jne    0x65002307
650022e8:	mov    edi,esi
650022ea:	mov    ecx,0x1
650022ef:	lock xadd DWORD PTR [edx],ecx
650022f3:	jmp    0x65002343
650022f5:	mov    esi,DWORD PTR [esp+0x14]
650022f9:	push   0x65026614
650022fe:	mov    ecx,esi
65002300:	call   0x65002550
65002305:	jmp    0x65002377
65002307:	mov    ecx,DWORD PTR [esi+0x4]
6500230a:	mov    edx,DWORD PTR [eax]
6500230c:	mov    edx,DWORD PTR [edx]
6500230e:	push   0x2
65002310:	push   ecx
65002311:	mov    ecx,eax
65002313:	call   edx
65002315:	mov    edi,eax
65002317:	test   edi,edi
65002319:	jne    0x65002320
6500231b:	jmp    0x65001b50
65002320:	mov    eax,DWORD PTR [esi+0x4]
65002323:	mov    DWORD PTR [edi+0x4],eax
65002326:	mov    eax,DWORD PTR [esi+0x4]
65002329:	lea    ecx,[eax+eax*1+0x2]
6500232d:	push   ecx
6500232e:	add    esi,0x10
65002331:	lea    edx,[eax+eax*1+0x2]
65002335:	push   esi
65002336:	push   edx
65002337:	lea    eax,[edi+0x10]
6500233a:	push   eax
6500233b:	call   0x65012073
65002340:	add    esp,0x10
65002343:	mov    esi,DWORD PTR [esp+0x14]
65002347:	mov    DWORD PTR [esp+0x440],0xffffffff
65002352:	mov    eax,DWORD PTR [esp+0x10]
65002356:	add    edi,0x10
65002359:	add    eax,0xfffffff0
6500235c:	mov    DWORD PTR [esi],edi
6500235e:	lea    ecx,[eax+0xc]
65002361:	or     edx,0xffffffff
65002364:	lock xadd DWORD PTR [ecx],edx
65002368:	dec    edx
65002369:	test   edx,edx
6500236b:	jg     0x65002377
6500236d:	mov    ecx,DWORD PTR [eax]
6500236f:	mov    edx,DWORD PTR [ecx]
65002371:	push   eax
65002372:	mov    eax,DWORD PTR [edx+0x4]
65002375:	call   eax
65002377:	mov    eax,esi
65002379:	mov    ecx,DWORD PTR [esp+0x438]
65002380:	mov    DWORD PTR fs:0x0,ecx
65002387:	pop    ecx
65002388:	pop    edi
65002389:	pop    esi
6500238a:	pop    ebx
6500238b:	mov    ecx,DWORD PTR [esp+0x420]
65002392:	xor    ecx,esp
65002394:	call   0x6501275c
65002399:	mov    esp,ebp
6500239b:	pop    ebp
6500239c:	ret    
6500239d:	int3   
6500239e:	int3   
6500239f:	int3   
650023a0:	push   0xffffffff
650023a2:	push   0x65022d50
650023a7:	mov    eax,fs:0x0
650023ad:	push   eax
650023ae:	sub    esp,0x4c
650023b1:	push   ebx
650023b2:	push   esi
650023b3:	push   edi
650023b4:	mov    eax,ds:0x6502c09c
650023b9:	xor    eax,esp
650023bb:	push   eax
650023bc:	lea    eax,[esp+0x5c]
650023c0:	mov    fs:0x0,eax
650023c6:	xor    ebx,ebx
650023c8:	push   ebx
650023c9:	push   0x80
650023ce:	push   0x2
650023d0:	push   ebx
650023d1:	push   ebx
650023d2:	mov    DWORD PTR [esp+0x78],ebx
650023d6:	mov    edi,DWORD PTR [esp+0x80]
650023dd:	push   0x40000000
650023e2:	push   edi
650023e3:	call   0x6500e120
650023e8:	call   eax
650023ea:	mov    esi,eax
650023ec:	mov    DWORD PTR [esp+0x10],esi
650023f0:	cmp    esi,0xffffffff
650023f3:	mov    BYTE PTR [esp+0x64],0x1
650023f8:	push   ebx
650023f9:	jne    0x6500243b
650023fb:	push   0x65026616
65002400:	lea    ecx,[esp+0x20]
65002404:	mov    DWORD PTR [esp+0x38],0xf
6500240c:	mov    DWORD PTR [esp+0x34],ebx
65002410:	mov    BYTE PTR [esp+0x24],bl
65002414:	call   0x65001860
65002419:	lea    eax,[esp+0x18]
6500241d:	push   eax
6500241e:	lea    ecx,[esp+0x38]
65002422:	mov    BYTE PTR [esp+0x68],0x2
65002427:	call   0x65002020
6500242c:	push   0x65029e34
65002431:	lea    ecx,[esp+0x38]
65002435:	push   ecx
65002436:	call   0x65012306
6500243b:	mov    eax,DWORD PTR [esp+0x78]
6500243f:	mov    ecx,DWORD PTR [esp+0x74]
65002443:	lea    edx,[esp+0x18]
65002447:	push   edx
65002448:	push   eax
65002449:	push   ecx
6500244a:	push   esi
6500244b:	call   DWORD PTR ds:0x65024088
65002451:	test   eax,eax
65002453:	jne    0x65002496
65002455:	push   ebx
65002456:	push   0x65026616
6500245b:	lea    ecx,[esp+0x20]
6500245f:	mov    DWORD PTR [esp+0x38],0xf
65002467:	mov    DWORD PTR [esp+0x34],ebx
6500246b:	mov    BYTE PTR [esp+0x24],bl
6500246f:	call   0x65001860
65002474:	lea    edx,[esp+0x18]
65002478:	push   edx
65002479:	lea    ecx,[esp+0x38]
6500247d:	mov    BYTE PTR [esp+0x68],0x3
65002482:	call   0x65002020
65002487:	push   0x65029e34
6500248c:	lea    eax,[esp+0x38]
65002490:	push   eax
65002491:	call   0x65012306
65002496:	cmp    esi,ebx
65002498:	je     0x650024b0
6500249a:	call   DWORD PTR ds:0x65024044
650024a0:	push   esi
650024a1:	mov    ebx,eax
650024a3:	call   DWORD PTR ds:0x65024040
650024a9:	push   ebx
650024aa:	call   DWORD PTR ds:0x6502405c
650024b0:	lea    eax,[edi-0x10]
650024b3:	mov    DWORD PTR [esp+0x64],0xffffffff
650024bb:	lea    ecx,[eax+0xc]
650024be:	or     edx,0xffffffff
650024c1:	lock xadd DWORD PTR [ecx],edx
650024c5:	dec    edx
650024c6:	test   edx,edx
650024c8:	jg     0x650024d4
650024ca:	mov    ecx,DWORD PTR [eax]
650024cc:	mov    edx,DWORD PTR [ecx]
650024ce:	push   eax
650024cf:	mov    eax,DWORD PTR [edx+0x4]
650024d2:	call   eax
650024d4:	mov    ecx,DWORD PTR [esp+0x5c]
650024d8:	mov    DWORD PTR fs:0x0,ecx
650024df:	pop    ecx
650024e0:	pop    edi
650024e1:	pop    esi
650024e2:	pop    ebx
650024e3:	add    esp,0x58
650024e6:	ret    
650024e7:	int3   
650024e8:	int3   
650024e9:	int3   
650024ea:	int3   
650024eb:	int3   
650024ec:	int3   
650024ed:	int3   
650024ee:	int3   
650024ef:	int3   
650024f0:	sub    esp,0x8
650024f3:	mov    DWORD PTR [esp],0x0
650024fa:	mov    DWORD PTR [esp+0x4],0x0
65002502:	call   DWORD PTR ds:0x6502c06c
65002508:	mov    eax,DWORD PTR [esp+0x10]
6500250c:	mov    eax,DWORD PTR [eax]
6500250e:	lea    ecx,[esp+0x4]
65002512:	push   ecx
65002513:	push   0x0
65002515:	lea    edx,[esp+0x8]
65002519:	push   edx
6500251a:	push   0x0
6500251c:	push   0x0
6500251e:	push   0x5
65002520:	push   0x1
65002522:	push   eax
65002523:	call   0x6500e560
65002528:	call   eax
6500252a:	test   eax,eax
6500252c:	jne    0x6500254a
6500252e:	mov    ecx,DWORD PTR [esp]
65002531:	mov    eax,DWORD PTR [esp+0xc]
65002535:	mov    eax,DWORD PTR [eax]
65002537:	push   0x0
65002539:	push   ecx
6500253a:	push   0x0
6500253c:	push   0x0
6500253e:	push   0x4
65002540:	push   0x1
65002542:	push   eax
65002543:	call   0x6500e5f0
65002548:	call   eax
6500254a:	add    esp,0x8
6500254d:	ret    
6500254e:	int3   
6500254f:	int3   
65002550:	push   0xffffffff
65002552:	push   0x65022a18
65002557:	mov    eax,fs:0x0
6500255d:	push   eax
6500255e:	push   ecx
6500255f:	push   esi
65002560:	push   edi
65002561:	mov    eax,ds:0x6502c09c
65002566:	xor    eax,esp
65002568:	push   eax
65002569:	lea    eax,[esp+0x10]
6500256d:	mov    fs:0x0,eax
65002573:	mov    edi,ecx
65002575:	mov    DWORD PTR [esp+0xc],edi
65002579:	mov    eax,ds:0x6502d560
6500257e:	mov    edx,DWORD PTR [eax+0xc]
65002581:	mov    ecx,0x6502d560
65002586:	call   edx
65002588:	add    eax,0x10
6500258b:	mov    DWORD PTR [edi],eax
6500258d:	mov    edx,DWORD PTR [esp+0x20]
65002591:	test   edx,edx
65002593:	mov    DWORD PTR [esp+0x18],0x0
6500259b:	je     0x650025c2
6500259d:	test   edx,0xffff0000
650025a3:	jne    0x650025c6
650025a5:	movzx  esi,dx
650025a8:	push   0x0
650025aa:	push   esi
650025ab:	call   0x65001fa0
650025b0:	add    esp,0x8
650025b3:	test   eax,eax
650025b5:	je     0x650025e8
650025b7:	push   esi
650025b8:	push   eax
650025b9:	mov    ecx,edi
650025bb:	call   0x650028d0
650025c0:	jmp    0x650025e8
650025c2:	xor    eax,eax
650025c4:	jmp    0x650025df
650025c6:	mov    eax,edx
650025c8:	lea    esi,[eax+0x2]
650025cb:	jmp    0x650025d0
650025cd:	lea    ecx,[ecx+0x0]
650025d0:	mov    cx,WORD PTR [eax]
650025d3:	add    eax,0x2
650025d6:	test   cx,cx
650025d9:	jne    0x650025d0
650025db:	sub    eax,esi
650025dd:	sar    eax,1
650025df:	push   eax
650025e0:	push   edx
650025e1:	mov    ecx,edi
650025e3:	call   0x65002aa0
650025e8:	mov    eax,edi
650025ea:	mov    ecx,DWORD PTR [esp+0x10]
650025ee:	mov    DWORD PTR fs:0x0,ecx
650025f5:	pop    ecx
650025f6:	pop    edi
650025f7:	pop    esi
650025f8:	add    esp,0x10
650025fb:	ret    0x4
650025fe:	int3   
650025ff:	int3   
65002600:	mov    eax,DWORD PTR [esp+0x4]
65002604:	mov    eax,DWORD PTR [eax]
65002606:	push   esi
65002607:	mov    esi,ecx
65002609:	mov    ecx,DWORD PTR [eax-0xc]
6500260c:	push   ecx
6500260d:	push   eax
6500260e:	mov    ecx,esi
65002610:	call   0x650029a0
65002615:	mov    eax,esi
65002617:	pop    esi
65002618:	ret    0x4
6500261b:	int3   
6500261c:	int3   
6500261d:	int3   
6500261e:	int3   
6500261f:	int3   
65002620:	push   0xffffffff
65002622:	push   0x650229e8
65002627:	mov    eax,fs:0x0
6500262d:	push   eax
6500262e:	push   ecx
6500262f:	push   esi
65002630:	mov    eax,ds:0x6502c09c
65002635:	xor    eax,esp
65002637:	push   eax
65002638:	lea    eax,[esp+0xc]
6500263c:	mov    fs:0x0,eax
65002642:	mov    esi,ecx
65002644:	mov    eax,DWORD PTR [esi]
65002646:	mov    ecx,DWORD PTR [eax-0x10]
65002649:	test   ecx,ecx
6500264b:	je     0x65002658
6500264d:	mov    edx,DWORD PTR [ecx]
6500264f:	mov    eax,DWORD PTR [edx+0x10]
65002652:	call   eax
65002654:	test   eax,eax
65002656:	jne    0x65002668
65002658:	mov    edx,DWORD PTR ds:0x6502d560
6500265e:	mov    eax,DWORD PTR [edx+0x10]
65002661:	mov    ecx,0x6502d560
65002666:	call   eax
65002668:	mov    ecx,DWORD PTR [esp+0x1c]
6500266c:	push   eax
6500266d:	push   ecx
6500266e:	lea    ecx,[esp+0x10]
65002672:	call   0x65002720
65002677:	mov    DWORD PTR [esp+0x14],0x0
6500267f:	mov    eax,DWORD PTR [esp+0x8]
65002683:	mov    ecx,DWORD PTR [eax-0xc]
65002686:	push   ecx
65002687:	push   eax
65002688:	mov    ecx,esi
6500268a:	call   0x650029a0
6500268f:	mov    DWORD PTR [esp+0x14],0xffffffff
65002697:	mov    eax,DWORD PTR [esp+0x8]
6500269b:	add    eax,0xfffffff0
6500269e:	lea    edx,[eax+0xc]
650026a1:	or     ecx,0xffffffff
650026a4:	lock xadd DWORD PTR [edx],ecx
650026a8:	dec    ecx
650026a9:	test   ecx,ecx
650026ab:	jg     0x650026b7
650026ad:	mov    ecx,DWORD PTR [eax]
650026af:	mov    edx,DWORD PTR [ecx]
650026b1:	push   eax
650026b2:	mov    eax,DWORD PTR [edx+0x4]
650026b5:	call   eax
650026b7:	mov    eax,esi
650026b9:	mov    ecx,DWORD PTR [esp+0xc]
650026bd:	mov    DWORD PTR fs:0x0,ecx
650026c4:	pop    ecx
650026c5:	pop    esi
650026c6:	add    esp,0x10
650026c9:	ret    0x4
650026cc:	int3   
650026cd:	int3   
650026ce:	int3   
650026cf:	int3   
650026d0:	mov    edx,DWORD PTR [esp+0x4]
650026d4:	push   esi
650026d5:	mov    esi,ecx
650026d7:	mov    eax,edx
650026d9:	push   edi
650026da:	mov    DWORD PTR [esi+0x18],0xf
650026e1:	mov    DWORD PTR [esi+0x14],0x0
650026e8:	mov    BYTE PTR [esi+0x4],0x0
650026ec:	lea    edi,[eax+0x1]
650026ef:	nop
650026f0:	mov    cl,BYTE PTR [eax]
650026f2:	add    eax,0x1
650026f5:	test   cl,cl
650026f7:	jne    0x650026f0
650026f9:	sub    eax,edi
650026fb:	push   eax
650026fc:	push   edx
650026fd:	mov    ecx,esi
650026ff:	call   0x65001860
65002704:	pop    edi
65002705:	mov    eax,esi
65002707:	pop    esi
65002708:	ret    0x4
6500270b:	int3   
6500270c:	int3   
6500270d:	int3   
6500270e:	int3   
6500270f:	int3   
65002710:	mov    eax,DWORD PTR [ecx]
65002712:	push   eax
65002713:	call   0x65011f02
65002718:	pop    ecx
65002719:	ret    
6500271a:	int3   
6500271b:	int3   
6500271c:	int3   
6500271d:	int3   
6500271e:	int3   
6500271f:	int3   
65002720:	push   0xffffffff
65002722:	push   0x650229b8
65002727:	mov    eax,fs:0x0
6500272d:	push   eax
6500272e:	push   ecx
6500272f:	push   esi
65002730:	push   edi
65002731:	mov    eax,ds:0x6502c09c
65002736:	xor    eax,esp
65002738:	push   eax
65002739:	lea    eax,[esp+0x10]
6500273d:	mov    fs:0x0,eax
65002743:	mov    esi,ecx
65002745:	mov    DWORD PTR [esp+0xc],esi
65002749:	mov    ecx,DWORD PTR [esp+0x24]
6500274d:	xor    eax,eax
6500274f:	test   ecx,ecx
65002751:	setne  al
65002754:	test   eax,eax
65002756:	jne    0x65002762
65002758:	push   0x80004005
6500275d:	call   0x65001040
65002762:	mov    eax,DWORD PTR [ecx]
65002764:	mov    edx,DWORD PTR [eax+0xc]
65002767:	call   edx
65002769:	add    eax,0x10
6500276c:	mov    DWORD PTR [esi],eax
6500276e:	mov    eax,DWORD PTR [esp+0x20]
65002772:	test   eax,eax
65002774:	mov    DWORD PTR [esp+0x18],0x0
6500277c:	je     0x650027a2
6500277e:	test   eax,0xffff0000
65002783:	jne    0x650027a2
65002785:	movzx  edi,ax
65002788:	push   0x0
6500278a:	push   edi
6500278b:	call   0x65001fa0
65002790:	add    esp,0x8
65002793:	test   eax,eax
65002795:	je     0x650027aa
65002797:	push   edi
65002798:	push   eax
65002799:	mov    ecx,esi
6500279b:	call   0x650028d0
650027a0:	jmp    0x650027aa
650027a2:	push   eax
650027a3:	mov    ecx,esi
650027a5:	call   0x650027c0
650027aa:	mov    eax,esi
650027ac:	mov    ecx,DWORD PTR [esp+0x10]
650027b0:	mov    DWORD PTR fs:0x0,ecx
650027b7:	pop    ecx
650027b8:	pop    edi
650027b9:	pop    esi
650027ba:	add    esp,0x10
650027bd:	ret    0x8
650027c0:	push   ebx
650027c1:	mov    ebx,DWORD PTR [esp+0x8]
650027c5:	test   ebx,ebx
650027c7:	push   ebp
650027c8:	push   esi
650027c9:	push   edi
650027ca:	mov    edi,ecx
650027cc:	je     0x65002844
650027ce:	call   DWORD PTR ds:0x6502c06c
650027d4:	mov    ebp,DWORD PTR ds:0x65024024
650027da:	push   0x0
650027dc:	push   0x0
650027de:	push   0xffffffff
650027e0:	push   ebx
650027e1:	push   0x0
650027e3:	push   eax
650027e4:	call   ebp
650027e6:	mov    esi,eax
650027e8:	sub    esi,0x1
650027eb:	test   esi,esi
650027ed:	jle    0x65002844
650027ef:	mov    eax,DWORD PTR [edi]
650027f1:	mov    edx,DWORD PTR [eax-0x8]
650027f4:	sub    eax,0x10
650027f7:	mov    ecx,0x1
650027fc:	sub    ecx,DWORD PTR [eax+0xc]
650027ff:	sub    edx,esi
65002801:	or     ecx,edx
65002803:	jge    0x6500280d
65002805:	push   esi
65002806:	mov    ecx,edi
65002808:	call   0x65001e00
6500280d:	mov    eax,DWORD PTR [edi]
6500280f:	push   esi
65002810:	push   eax
65002811:	push   0xffffffff
65002813:	push   ebx
65002814:	push   0x0
65002816:	call   DWORD PTR ds:0x6502c06c
6500281c:	push   eax
6500281d:	call   ebp
6500281f:	mov    eax,DWORD PTR [edi]
65002821:	cmp    esi,DWORD PTR [eax-0x8]
65002824:	jg     0x6500283a
65002826:	mov    DWORD PTR [eax-0xc],esi
65002829:	mov    eax,DWORD PTR [edi]
6500282b:	mov    WORD PTR [eax+esi*2],0x0
65002831:	mov    eax,edi
65002833:	pop    edi
65002834:	pop    esi
65002835:	pop    ebp
65002836:	pop    ebx
65002837:	ret    0x4
6500283a:	push   0x80070057
6500283f:	call   0x65001040
65002844:	mov    ecx,edi
65002846:	call   0x65002a30
6500284b:	mov    eax,edi
6500284d:	pop    edi
6500284e:	pop    esi
6500284f:	pop    ebp
65002850:	pop    ebx
65002851:	ret    0x4
65002854:	int3   
65002855:	int3   
65002856:	int3   
65002857:	int3   
65002858:	int3   
65002859:	int3   
6500285a:	int3   
6500285b:	int3   
6500285c:	int3   
6500285d:	int3   
6500285e:	int3   
6500285f:	int3   
65002860:	push   esi
65002861:	mov    esi,DWORD PTR [esp+0x8]
65002865:	mov    ecx,DWORD PTR [esi]
65002867:	mov    eax,DWORD PTR [ecx]
65002869:	mov    edx,DWORD PTR [eax+0x10]
6500286c:	push   edi
6500286d:	call   edx
6500286f:	cmp    DWORD PTR [esi+0xc],0x0
65002873:	lea    ecx,[esi+0xc]
65002876:	jl     0x6500288c
65002878:	cmp    eax,DWORD PTR [esi]
6500287a:	jne    0x6500288c
6500287c:	mov    edi,esi
6500287e:	mov    eax,0x1
65002883:	lock xadd DWORD PTR [ecx],eax
65002887:	mov    eax,edi
65002889:	pop    edi
6500288a:	pop    esi
6500288b:	ret    
6500288c:	mov    ecx,DWORD PTR [esi+0x4]
6500288f:	mov    edx,DWORD PTR [eax]
65002891:	mov    edx,DWORD PTR [edx]
65002893:	push   0x2
65002895:	push   ecx
65002896:	mov    ecx,eax
65002898:	call   edx
6500289a:	mov    edi,eax
6500289c:	test   edi,edi
6500289e:	jne    0x650028a5
650028a0:	jmp    0x65001b50
650028a5:	mov    eax,DWORD PTR [esi+0x4]
650028a8:	mov    DWORD PTR [edi+0x4],eax
650028ab:	mov    eax,DWORD PTR [esi+0x4]
650028ae:	lea    eax,[eax+eax*1+0x2]
650028b2:	push   eax
650028b3:	add    esi,0x10
650028b6:	push   esi
650028b7:	push   eax
650028b8:	lea    ecx,[edi+0x10]
650028bb:	push   ecx
650028bc:	call   0x65012073
650028c1:	add    esp,0x10
650028c4:	mov    eax,edi
650028c6:	pop    edi
650028c7:	pop    esi
650028c8:	ret    
650028c9:	int3   
650028ca:	int3   
650028cb:	int3   
650028cc:	int3   
650028cd:	int3   
650028ce:	int3   
650028cf:	int3   
650028d0:	push   ebx
650028d1:	push   esi
650028d2:	mov    esi,DWORD PTR [esp+0x10]
650028d6:	mov    eax,esi
650028d8:	shr    eax,0x4
650028db:	push   edi
650028dc:	mov    edi,DWORD PTR [esp+0x10]
650028e0:	add    eax,0x1
650028e3:	mov    ebx,ecx
650028e5:	movzx  ecx,ax
650028e8:	push   0x6
650028ea:	push   ecx
650028eb:	push   edi
650028ec:	call   DWORD PTR ds:0x65024038
650028f2:	test   eax,eax
650028f4:	je     0x65002907
650028f6:	push   esi
650028f7:	push   eax
650028f8:	push   edi
650028f9:	call   0x65001f30
650028fe:	mov    esi,eax
65002900:	add    esp,0xc
65002903:	test   esi,esi
65002905:	jne    0x6500290f
65002907:	pop    edi
65002908:	pop    esi
65002909:	xor    eax,eax
6500290b:	pop    ebx
6500290c:	ret    0x8
6500290f:	mov    eax,DWORD PTR [ebx]
65002911:	movzx  edi,WORD PTR [esi]
65002914:	sub    eax,0x10
65002917:	mov    edx,0x1
6500291c:	sub    edx,DWORD PTR [eax+0xc]
6500291f:	mov    eax,DWORD PTR [eax+0x8]
65002922:	sub    eax,edi
65002924:	or     edx,eax
65002926:	jge    0x65002930
65002928:	push   edi
65002929:	mov    ecx,ebx
6500292b:	call   0x65001e00
65002930:	movzx  eax,WORD PTR [esi]
65002933:	cmp    eax,0xffffffff
65002936:	push   ebp
65002937:	mov    ebp,DWORD PTR [ebx]
65002939:	lea    edx,[esi+0x2]
6500293c:	jne    0x65002955
6500293e:	mov    eax,edx
65002940:	lea    esi,[eax+0x2]
65002943:	mov    cx,WORD PTR [eax]
65002946:	add    eax,0x2
65002949:	test   cx,cx
6500294c:	jne    0x65002943
6500294e:	sub    eax,esi
65002950:	sar    eax,1
65002952:	add    eax,0x1
65002955:	lea    ecx,[eax+eax*1]
65002958:	push   ecx
65002959:	push   edx
6500295a:	lea    esi,[edi+edi*1]
6500295d:	push   esi
6500295e:	push   ebp
6500295f:	call   0x65012073
65002964:	push   eax
65002965:	call   0x65001e90
6500296a:	add    esp,0x14
6500296d:	test   edi,edi
6500296f:	pop    ebp
65002970:	jl     0x6500298f
65002972:	mov    eax,DWORD PTR [ebx]
65002974:	cmp    edi,DWORD PTR [eax-0x8]
65002977:	jg     0x6500298f
65002979:	mov    DWORD PTR [eax-0xc],edi
6500297c:	mov    edx,DWORD PTR [ebx]
6500297e:	pop    edi
6500297f:	mov    WORD PTR [esi+edx*1],0x0
65002985:	pop    esi
65002986:	mov    eax,0x1
6500298b:	pop    ebx
6500298c:	ret    0x8
6500298f:	push   0x80070057
65002994:	call   0x65001040
65002999:	int3   
6500299a:	int3   
6500299b:	int3   
6500299c:	int3   
6500299d:	int3   
6500299e:	int3   
6500299f:	int3   
650029a0:	push   ebx
650029a1:	push   ebp
650029a2:	push   esi
650029a3:	mov    esi,DWORD PTR [esp+0x10]
650029a7:	mov    ebp,ecx
650029a9:	mov    eax,DWORD PTR [ebp+0x0]
650029ac:	mov    ebx,DWORD PTR [eax-0xc]
650029af:	mov    ecx,DWORD PTR [esp+0x14]
650029b3:	sub    esi,eax
650029b5:	mov    edx,0x1
650029ba:	sub    edx,DWORD PTR [eax-0x4]
650029bd:	mov    eax,DWORD PTR [eax-0x8]
650029c0:	push   edi
650029c1:	lea    edi,[ebx+ecx*1]
650029c4:	sub    eax,edi
650029c6:	sar    esi,1
650029c8:	or     edx,eax
650029ca:	jge    0x650029d4
650029cc:	push   edi
650029cd:	mov    ecx,ebp
650029cf:	call   0x65001e00
650029d4:	cmp    esi,ebx
650029d6:	mov    ecx,DWORD PTR [ebp+0x0]
650029d9:	ja     0x650029e2
650029db:	lea    edx,[ecx+esi*2]
650029de:	mov    DWORD PTR [esp+0x14],edx
650029e2:	mov    eax,DWORD PTR [esp+0x18]
650029e6:	mov    edx,DWORD PTR [esp+0x14]
650029ea:	add    eax,eax
650029ec:	push   eax
650029ed:	push   edx
650029ee:	push   eax
650029ef:	lea    eax,[ecx+ebx*2]
650029f2:	push   eax
650029f3:	call   0x65012073
650029f8:	add    esp,0x10
650029fb:	test   edi,edi
650029fd:	jl     0x65002a1a
650029ff:	mov    eax,DWORD PTR [ebp+0x0]
65002a02:	cmp    edi,DWORD PTR [eax-0x8]
65002a05:	jg     0x65002a1a
65002a07:	mov    DWORD PTR [eax-0xc],edi
65002a0a:	mov    ecx,DWORD PTR [ebp+0x0]
65002a0d:	mov    WORD PTR [ecx+edi*2],0x0
65002a13:	pop    edi
65002a14:	pop    esi
65002a15:	pop    ebp
65002a16:	pop    ebx
65002a17:	ret    0x8
65002a1a:	push   0x80070057
65002a1f:	call   0x65001040
65002a24:	int3   
65002a25:	int3   
65002a26:	int3   
65002a27:	int3   
65002a28:	int3   
65002a29:	int3   
65002a2a:	int3   
65002a2b:	int3   
65002a2c:	int3   
65002a2d:	int3   
65002a2e:	int3   
65002a2f:	int3   
65002a30:	push   esi
65002a31:	mov    esi,ecx
65002a33:	mov    ecx,DWORD PTR [esi]
65002a35:	cmp    DWORD PTR [ecx-0xc],0x0
65002a39:	lea    eax,[ecx-0x10]
65002a3c:	push   edi
65002a3d:	mov    edi,DWORD PTR [eax]
65002a3f:	je     0x65002a8f
65002a41:	cmp    DWORD PTR [eax+0xc],0x0
65002a45:	lea    edx,[eax+0xc]
65002a48:	jge    0x65002a6b
65002a4a:	cmp    DWORD PTR [ecx-0x8],0x0
65002a4e:	jge    0x65002a5a
65002a50:	push   0x80070057
65002a55:	call   0x65001040
65002a5a:	mov    DWORD PTR [ecx-0xc],0x0
65002a61:	mov    eax,DWORD PTR [esi]
65002a63:	pop    edi
65002a64:	mov    WORD PTR [eax],0x0
65002a69:	pop    esi
65002a6a:	ret    
65002a6b:	or     ecx,0xffffffff
65002a6e:	lock xadd DWORD PTR [edx],ecx
65002a72:	dec    ecx
65002a73:	test   ecx,ecx
65002a75:	jg     0x65002a81
65002a77:	mov    ecx,DWORD PTR [eax]
65002a79:	mov    edx,DWORD PTR [ecx]
65002a7b:	push   eax
65002a7c:	mov    eax,DWORD PTR [edx+0x4]
65002a7f:	call   eax
65002a81:	mov    edx,DWORD PTR [edi]
65002a83:	mov    eax,DWORD PTR [edx+0xc]
65002a86:	mov    ecx,edi
65002a88:	call   eax
65002a8a:	add    eax,0x10
65002a8d:	mov    DWORD PTR [esi],eax
65002a8f:	pop    edi
65002a90:	pop    esi
65002a91:	ret    
65002a92:	int3   
65002a93:	int3   
65002a94:	int3   
65002a95:	int3   
65002a96:	int3   
65002a97:	int3   
65002a98:	int3   
65002a99:	int3   
65002a9a:	int3   
65002a9b:	int3   
65002a9c:	int3   
65002a9d:	int3   
65002a9e:	int3   
65002a9f:	int3   
65002aa0:	push   ebx
65002aa1:	mov    ebx,DWORD PTR [esp+0xc]
65002aa5:	test   ebx,ebx
65002aa7:	push   ebp
65002aa8:	mov    ebp,ecx
65002aaa:	jne    0x65002ab6
65002aac:	call   0x65002a30
65002ab1:	pop    ebp
65002ab2:	pop    ebx
65002ab3:	ret    0x8
65002ab6:	push   esi
65002ab7:	mov    esi,DWORD PTR [esp+0x10]
65002abb:	test   esi,esi
65002abd:	jne    0x65002ac9
65002abf:	push   0x80070057
65002ac4:	call   0x65001040
65002ac9:	mov    eax,DWORD PTR [ebp+0x0]
65002acc:	mov    edx,DWORD PTR [eax-0x8]
65002acf:	mov    ecx,0x1
65002ad4:	sub    ecx,DWORD PTR [eax-0x4]
65002ad7:	sub    esi,eax
65002ad9:	sub    edx,ebx
65002adb:	sar    esi,1
65002add:	or     ecx,edx
65002adf:	push   edi
65002ae0:	mov    edi,DWORD PTR [eax-0xc]
65002ae3:	jge    0x65002aed
65002ae5:	push   ebx
65002ae6:	mov    ecx,ebp
65002ae8:	call   0x65001e00
65002aed:	mov    eax,DWORD PTR [ebp+0x0]
65002af0:	cmp    esi,edi
65002af2:	lea    edi,[ebx+ebx*1]
65002af5:	push   edi
65002af6:	ja     0x65002b05
65002af8:	lea    ecx,[eax+esi*2]
65002afb:	push   ecx
65002afc:	push   edi
65002afd:	push   eax
65002afe:	call   0x650120ee
65002b03:	jmp    0x65002b11
65002b05:	mov    edx,DWORD PTR [esp+0x18]
65002b09:	push   edx
65002b0a:	push   edi
65002b0b:	push   eax
65002b0c:	call   0x65012073
65002b11:	add    esp,0x10
65002b14:	test   ebx,ebx
65002b16:	jl     0x65002b33
65002b18:	mov    eax,DWORD PTR [ebp+0x0]
65002b1b:	cmp    ebx,DWORD PTR [eax-0x8]
65002b1e:	jg     0x65002b33
65002b20:	mov    DWORD PTR [eax-0xc],ebx
65002b23:	mov    eax,DWORD PTR [ebp+0x0]
65002b26:	mov    WORD PTR [edi+eax*1],0x0
65002b2c:	pop    edi
65002b2d:	pop    esi
65002b2e:	pop    ebp
65002b2f:	pop    ebx
65002b30:	ret    0x8
65002b33:	push   0x80070057
65002b38:	call   0x65001040
65002b3d:	int3   
65002b3e:	int3   
65002b3f:	int3   
65002b40:	push   esi
65002b41:	mov    esi,DWORD PTR [esp+0x8]
65002b45:	test   esi,esi
65002b47:	je     0x65002b78
65002b49:	mov    eax,DWORD PTR [esp+0xc]
65002b4d:	test   eax,eax
65002b4f:	je     0x65002b78
65002b51:	mov    ecx,DWORD PTR [esp+0x10]
65002b55:	mov    edx,DWORD PTR [esp+0x14]
65002b59:	push   0x0
65002b5b:	push   0x0
65002b5d:	push   ecx
65002b5e:	push   esi
65002b5f:	push   0xffffffff
65002b61:	push   eax
65002b62:	push   0x0
65002b64:	push   edx
65002b65:	mov    BYTE PTR [esi],0x0
65002b68:	call   DWORD PTR ds:0x65024028
65002b6e:	neg    eax
65002b70:	sbb    eax,eax
65002b72:	and    eax,esi
65002b74:	pop    esi
65002b75:	ret    0x10
65002b78:	xor    eax,eax
65002b7a:	pop    esi
65002b7b:	ret    0x10
65002b7e:	int3   
65002b7f:	int3   
65002b80:	mov    eax,DWORD PTR [esi]
65002b82:	test   eax,eax
65002b84:	je     0x65002b93
65002b86:	push   eax
65002b87:	call   DWORD PTR ds:0x65024000
65002b8d:	mov    DWORD PTR [esi],0x0
65002b93:	ret    
65002b94:	int3   
65002b95:	int3   
65002b96:	int3   
65002b97:	int3   
65002b98:	int3   
65002b99:	int3   
65002b9a:	int3   
65002b9b:	int3   
65002b9c:	int3   
65002b9d:	int3   
65002b9e:	int3   
65002b9f:	int3   
65002ba0:	push   ecx
65002ba1:	mov    eax,DWORD PTR [edi]
65002ba3:	lea    ecx,[esp]
65002ba6:	push   ecx
65002ba7:	mov    ecx,DWORD PTR [esp+0xc]
65002bab:	push   esi
65002bac:	add    eax,eax
65002bae:	lea    edx,[esp+0x14]
65002bb2:	push   edx
65002bb3:	mov    DWORD PTR [esp+0xc],eax
65002bb7:	mov    eax,DWORD PTR [esp+0x18]
65002bbb:	push   0x0
65002bbd:	mov    DWORD PTR [edi],0x0
65002bc3:	mov    edx,DWORD PTR [ecx]
65002bc5:	push   eax
65002bc6:	push   edx
65002bc7:	call   DWORD PTR ds:0x65024008
65002bcd:	test   eax,eax
65002bcf:	jne    0x65002c0e
65002bd1:	mov    eax,DWORD PTR [esp+0xc]
65002bd5:	cmp    eax,0x1
65002bd8:	je     0x65002bdf
65002bda:	cmp    eax,0x2
65002bdd:	jne    0x65002bfa
65002bdf:	test   esi,esi
65002be1:	mov    eax,DWORD PTR [esp]
65002be4:	je     0x65002c08
65002be6:	test   eax,eax
65002be8:	je     0x65002c03
65002bea:	test   al,0x1
65002bec:	jne    0x65002bfa
65002bee:	mov    ecx,eax
65002bf0:	shr    ecx,1
65002bf2:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
65002bf8:	je     0x65002c08
65002bfa:	mov    eax,0xd
65002bff:	pop    ecx
65002c00:	ret    0x8
65002c03:	mov    WORD PTR [esi],0x0
65002c08:	shr    eax,1
65002c0a:	mov    DWORD PTR [edi],eax
65002c0c:	xor    eax,eax
65002c0e:	pop    ecx
65002c0f:	ret    0x8
65002c12:	int3   
65002c13:	int3   
65002c14:	int3   
65002c15:	int3   
65002c16:	int3   
65002c17:	int3   
65002c18:	int3   
65002c19:	int3   
65002c1a:	int3   
65002c1b:	int3   
65002c1c:	int3   
65002c1d:	int3   
65002c1e:	int3   
65002c1f:	int3   
65002c20:	ret    
65002c21:	int3   
65002c22:	int3   
65002c23:	int3   
65002c24:	int3   
65002c25:	int3   
65002c26:	int3   
65002c27:	int3   
65002c28:	int3   
65002c29:	int3   
65002c2a:	int3   
65002c2b:	int3   
65002c2c:	int3   
65002c2d:	int3   
65002c2e:	int3   
65002c2f:	int3   
65002c30:	mov    eax,DWORD PTR [esp+0xc]
65002c34:	cmp    eax,0x4
65002c37:	mov    ecx,DWORD PTR [esp+0x8]
65002c3b:	mov    edx,DWORD PTR [esp+0x4]
65002c3f:	push   esi
65002c40:	push   edi
65002c41:	jb     0x65002c57
65002c43:	mov    esi,DWORD PTR [edx]
65002c45:	cmp    esi,DWORD PTR [ecx]
65002c47:	jne    0x65002c5b
65002c49:	sub    eax,0x4
65002c4c:	add    ecx,0x4
65002c4f:	add    edx,0x4
65002c52:	cmp    eax,0x4
65002c55:	jae    0x65002c43
65002c57:	test   eax,eax
65002c59:	je     0x65002cb9
65002c5b:	movzx  esi,BYTE PTR [edx]
65002c5e:	movzx  edi,BYTE PTR [ecx]
65002c61:	sub    esi,edi
65002c63:	jne    0x65002caa
65002c65:	sub    eax,0x1
65002c68:	add    ecx,0x1
65002c6b:	add    edx,0x1
65002c6e:	test   eax,eax
65002c70:	je     0x65002cb9
65002c72:	movzx  esi,BYTE PTR [edx]
65002c75:	movzx  edi,BYTE PTR [ecx]
65002c78:	sub    esi,edi
65002c7a:	jne    0x65002caa
65002c7c:	sub    eax,0x1
65002c7f:	add    ecx,0x1
65002c82:	add    edx,0x1
65002c85:	test   eax,eax
65002c87:	je     0x65002cb9
65002c89:	movzx  esi,BYTE PTR [edx]
65002c8c:	movzx  edi,BYTE PTR [ecx]
65002c8f:	sub    esi,edi
65002c91:	jne    0x65002caa
65002c93:	sub    eax,0x1
65002c96:	add    ecx,0x1
65002c99:	add    edx,0x1
65002c9c:	test   eax,eax
65002c9e:	je     0x65002cb9
65002ca0:	movzx  esi,BYTE PTR [edx]
65002ca3:	movzx  eax,BYTE PTR [ecx]
65002ca6:	sub    esi,eax
65002ca8:	je     0x65002cb9
65002caa:	test   esi,esi
65002cac:	mov    eax,0x1
65002cb1:	jg     0x65002cbb
65002cb3:	pop    edi
65002cb4:	or     eax,0xffffffff
65002cb7:	pop    esi
65002cb8:	ret    
65002cb9:	xor    eax,eax
65002cbb:	pop    edi
65002cbc:	pop    esi
65002cbd:	ret    
65002cbe:	int3   
65002cbf:	int3   
65002cc0:	push   0xffffffff
65002cc2:	push   0x65022478
65002cc7:	mov    eax,fs:0x0
65002ccd:	push   eax
65002cce:	push   ecx
65002ccf:	push   esi
65002cd0:	mov    eax,ds:0x6502c09c
65002cd5:	xor    eax,esp
65002cd7:	push   eax
65002cd8:	lea    eax,[esp+0xc]
65002cdc:	mov    fs:0x0,eax
65002ce2:	mov    esi,ecx
65002ce4:	mov    DWORD PTR [esp+0x8],esi
65002ce8:	call   0x65011f07
65002ced:	xor    eax,eax
65002cef:	mov    DWORD PTR [esp+0x14],eax
65002cf3:	lea    ecx,[esi+0xc]
65002cf6:	mov    DWORD PTR [esi],0x65024b50
65002cfc:	push   0xffffffff
65002cfe:	mov    DWORD PTR [ecx+0x14],eax
65002d01:	mov    DWORD PTR [ecx+0x18],0xf
65002d08:	push   eax
65002d09:	mov    BYTE PTR [ecx+0x4],al
65002d0c:	mov    eax,DWORD PTR [esp+0x24]
65002d10:	push   eax
65002d11:	call   0x65001780
65002d16:	mov    eax,esi
65002d18:	mov    ecx,DWORD PTR [esp+0xc]
65002d1c:	mov    DWORD PTR fs:0x0,ecx
65002d23:	pop    ecx
65002d24:	pop    esi
65002d25:	add    esp,0x10
65002d28:	ret    0x4
65002d2b:	int3   
65002d2c:	int3   
65002d2d:	int3   
65002d2e:	int3   
65002d2f:	int3   
65002d30:	cmp    DWORD PTR [ecx+0x24],0x10
65002d34:	jb     0x65002d3a
65002d36:	mov    eax,DWORD PTR [ecx+0x10]
65002d39:	ret    
65002d3a:	lea    eax,[ecx+0x10]
65002d3d:	ret    
65002d3e:	int3   
65002d3f:	int3   
65002d40:	push   esi
65002d41:	mov    esi,ecx
65002d43:	mov    DWORD PTR [esi],0x65024b50
65002d49:	cmp    DWORD PTR [esi+0x24],0x10
65002d4d:	jb     0x65002d5b
65002d4f:	mov    eax,DWORD PTR [esi+0x10]
65002d52:	push   eax
65002d53:	call   0x65011f02
65002d58:	add    esp,0x4
65002d5b:	xor    eax,eax
65002d5d:	mov    DWORD PTR [esi+0x24],0xf
65002d64:	mov    DWORD PTR [esi+0x20],eax
65002d67:	mov    BYTE PTR [esi+0x10],al
65002d6a:	mov    ecx,esi
65002d6c:	pop    esi
65002d6d:	jmp    0x65011fd6
65002d72:	int3   
65002d73:	int3   
65002d74:	int3   
65002d75:	int3   
65002d76:	int3   
65002d77:	int3   
65002d78:	int3   
65002d79:	int3   
65002d7a:	int3   
65002d7b:	int3   
65002d7c:	int3   
65002d7d:	int3   
65002d7e:	int3   
65002d7f:	int3   
65002d80:	push   esi
65002d81:	mov    esi,ecx
65002d83:	mov    DWORD PTR [esi],0x65024b50
65002d89:	cmp    DWORD PTR [esi+0x24],0x10
65002d8d:	jb     0x65002d9b
65002d8f:	mov    eax,DWORD PTR [esi+0x10]
65002d92:	push   eax
65002d93:	call   0x65011f02
65002d98:	add    esp,0x4
65002d9b:	xor    eax,eax
65002d9d:	mov    DWORD PTR [esi+0x24],0xf
65002da4:	mov    DWORD PTR [esi+0x20],eax
65002da7:	mov    ecx,esi
65002da9:	mov    BYTE PTR [esi+0x10],al
65002dac:	call   0x65011fd6
65002db1:	test   BYTE PTR [esp+0x8],0x1
65002db6:	je     0x65002dc1
65002db8:	push   esi
65002db9:	call   0x65011f02
65002dbe:	add    esp,0x4
65002dc1:	mov    eax,esi
65002dc3:	pop    esi
65002dc4:	ret    0x4
65002dc7:	int3   
65002dc8:	int3   
65002dc9:	int3   
65002dca:	int3   
65002dcb:	int3   
65002dcc:	int3   
65002dcd:	int3   
65002dce:	int3   
65002dcf:	int3   
65002dd0:	mov    eax,DWORD PTR [esp+0x4]
65002dd4:	push   esi
65002dd5:	push   eax
65002dd6:	mov    esi,ecx
65002dd8:	call   0x65002df0
65002ddd:	mov    DWORD PTR [esi],0x65024b68
65002de3:	mov    eax,esi
65002de5:	pop    esi
65002de6:	ret    0x4
65002de9:	int3   
65002dea:	int3   
65002deb:	int3   
65002dec:	int3   
65002ded:	int3   
65002dee:	int3   
65002def:	int3   
65002df0:	push   0xffffffff
65002df2:	push   0x65022448
65002df7:	mov    eax,fs:0x0
65002dfd:	push   eax
65002dfe:	push   ecx
65002dff:	push   esi
65002e00:	push   edi
65002e01:	mov    eax,ds:0x6502c09c
65002e06:	xor    eax,esp
65002e08:	push   eax
65002e09:	lea    eax,[esp+0x10]
65002e0d:	mov    fs:0x0,eax
65002e13:	mov    esi,ecx
65002e15:	mov    DWORD PTR [esp+0xc],esi
65002e19:	mov    edi,DWORD PTR [esp+0x20]
65002e1d:	push   edi
65002e1e:	call   0x65011f7e
65002e23:	xor    edx,edx
65002e25:	mov    DWORD PTR [esp+0x18],edx
65002e29:	push   0xffffffff
65002e2b:	lea    ecx,[esi+0xc]
65002e2e:	mov    DWORD PTR [esi],0x65024b50
65002e34:	lea    eax,[edi+0xc]
65002e37:	push   edx
65002e38:	mov    DWORD PTR [ecx+0x18],0xf
65002e3f:	mov    DWORD PTR [ecx+0x14],edx
65002e42:	push   eax
65002e43:	mov    BYTE PTR [ecx+0x4],dl
65002e46:	call   0x65001780
65002e4b:	mov    eax,esi
65002e4d:	mov    ecx,DWORD PTR [esp+0x10]
65002e51:	mov    DWORD PTR fs:0x0,ecx
65002e58:	pop    ecx
65002e59:	pop    edi
65002e5a:	pop    esi
65002e5b:	add    esp,0x10
65002e5e:	ret    0x4
65002e61:	int3   
65002e62:	int3   
65002e63:	int3   
65002e64:	int3   
65002e65:	int3   
65002e66:	int3   
65002e67:	int3   
65002e68:	int3   
65002e69:	int3   
65002e6a:	int3   
65002e6b:	int3   
65002e6c:	int3   
65002e6d:	int3   
65002e6e:	int3   
65002e6f:	int3   
65002e70:	sub    esp,0x6c
65002e73:	mov    eax,ds:0x6502c09c
65002e78:	xor    eax,esp
65002e7a:	mov    DWORD PTR [esp+0x68],eax
65002e7e:	mov    eax,DWORD PTR [esp+0x74]
65002e82:	movzx  ecx,BYTE PTR [eax+0xf]
65002e86:	movzx  edx,BYTE PTR [eax+0xe]
65002e8a:	push   esi
65002e8b:	push   ecx
65002e8c:	movzx  ecx,BYTE PTR [eax+0xd]
65002e90:	push   edx
65002e91:	movzx  edx,BYTE PTR [eax+0xc]
65002e95:	push   ecx
65002e96:	movzx  ecx,BYTE PTR [eax+0xb]
65002e9a:	push   edx
65002e9b:	movzx  edx,BYTE PTR [eax+0xa]
65002e9f:	mov    esi,DWORD PTR [esp+0x84]
65002ea6:	push   ecx
65002ea7:	movzx  ecx,BYTE PTR [eax+0x9]
65002eab:	push   edx
65002eac:	movzx  edx,BYTE PTR [eax+0x8]
65002eb0:	push   ecx
65002eb1:	movzx  ecx,WORD PTR [eax+0x6]
65002eb5:	push   edx
65002eb6:	movzx  edx,WORD PTR [eax+0x4]
65002eba:	mov    eax,DWORD PTR [eax]
65002ebc:	push   ecx
65002ebd:	push   edx
65002ebe:	push   eax
65002ebf:	push   0x6502662c
65002ec4:	push   0x32
65002ec6:	push   0x65026664
65002ecb:	mov    DWORD PTR [esp+0x3c],0x0
65002ed3:	call   0x65006a10
65002ed8:	add    esp,0xc
65002edb:	push   eax
65002edc:	lea    ecx,[esp+0x38]
65002ee0:	push   0x64
65002ee2:	push   ecx
65002ee3:	call   0x650132ae
65002ee8:	add    esp,0x38
65002eeb:	lea    edx,[esp+0x8]
65002eef:	push   edx
65002ef0:	mov    ecx,esi
65002ef2:	call   0x65006770
65002ef7:	mov    ecx,DWORD PTR [esp+0x6c]
65002efb:	mov    eax,esi
65002efd:	pop    esi
65002efe:	xor    ecx,esp
65002f00:	call   0x6501275c
65002f05:	add    esp,0x6c
65002f08:	ret    
65002f09:	int3   
65002f0a:	int3   
65002f0b:	int3   
65002f0c:	int3   
65002f0d:	int3   
65002f0e:	int3   
65002f0f:	int3   
65002f10:	push   0xffffffff
65002f12:	push   0x65022988
65002f17:	mov    eax,fs:0x0
65002f1d:	push   eax
65002f1e:	sub    esp,0x24
65002f21:	mov    eax,ds:0x6502c09c
65002f26:	xor    eax,esp
65002f28:	mov    DWORD PTR [esp+0x20],eax
65002f2c:	push   ebx
65002f2d:	push   ebp
65002f2e:	push   edi
65002f2f:	mov    eax,ds:0x6502c09c
65002f34:	xor    eax,esp
65002f36:	push   eax
65002f37:	lea    eax,[esp+0x34]
65002f3b:	mov    fs:0x0,eax
65002f41:	mov    DWORD PTR [esp+0x3c],0x0
65002f49:	call   DWORD PTR ds:0x6502c06c
65002f4f:	mov    eax,ds:0x65024ae4
65002f54:	mov    ecx,DWORD PTR ds:0x65024ae8
65002f5a:	mov    edx,DWORD PTR ds:0x65024aec
65002f60:	mov    DWORD PTR [esp+0x20],eax
65002f64:	mov    eax,ds:0x65024af0
65002f69:	mov    DWORD PTR [esp+0x2c],eax
65002f6d:	mov    eax,DWORD PTR [esp+0x44]
65002f71:	mov    DWORD PTR [esp+0x24],ecx
65002f75:	mov    DWORD PTR [esp+0x28],edx
65002f79:	cmp    DWORD PTR [eax-0xc],0x0
65002f7d:	jle    0x65002f9d
65002f7f:	lea    ebx,[esp+0x44]
65002f83:	call   0x65006940
65002f88:	mov    edi,ebx
65002f8a:	call   0x65007300
65002f8f:	call   0x650068c0
65002f94:	call   0x65007300
65002f99:	mov    eax,DWORD PTR [esp+0x44]
65002f9d:	cmp    DWORD PTR [eax-0x4],0x1
65002fa1:	jle    0x65002fb4
65002fa3:	mov    ecx,DWORD PTR [eax-0xc]
65002fa6:	push   ecx
65002fa7:	lea    ecx,[esp+0x48]
65002fab:	call   0x65001950
65002fb0:	mov    eax,DWORD PTR [esp+0x44]
65002fb4:	lea    edx,[esp+0x20]
65002fb8:	push   edx
65002fb9:	push   eax
65002fba:	call   DWORD PTR ds:0x650241ac
65002fc0:	test   eax,eax
65002fc2:	je     0x65002fe1
65002fc4:	mov    eax,ds:0x65024af0
65002fc9:	mov    edi,DWORD PTR ds:0x65024ae4
65002fcf:	mov    ebx,DWORD PTR ds:0x65024ae8
65002fd5:	mov    ebp,DWORD PTR ds:0x65024aec
65002fdb:	mov    DWORD PTR [esp+0x1c],eax
65002fdf:	jmp    0x65002ff5
65002fe1:	mov    edx,DWORD PTR [esp+0x2c]
65002fe5:	mov    edi,DWORD PTR [esp+0x20]
65002fe9:	mov    ebx,DWORD PTR [esp+0x24]
65002fed:	mov    ebp,DWORD PTR [esp+0x28]
65002ff1:	mov    DWORD PTR [esp+0x1c],edx
65002ff5:	mov    DWORD PTR [esp+0x3c],0xffffffff
65002ffd:	mov    eax,DWORD PTR [esp+0x44]
65003001:	add    eax,0xfffffff0
65003004:	or     edx,0xffffffff
65003007:	lea    ecx,[eax+0xc]
6500300a:	lock xadd DWORD PTR [ecx],edx
6500300e:	dec    edx
6500300f:	test   edx,edx
65003011:	jg     0x6500301d
65003013:	mov    ecx,DWORD PTR [eax]
65003015:	mov    edx,DWORD PTR [ecx]
65003017:	push   eax
65003018:	mov    eax,DWORD PTR [edx+0x4]
6500301b:	call   eax
6500301d:	mov    ecx,DWORD PTR [esp+0x1c]
65003021:	mov    DWORD PTR [esi],edi
65003023:	mov    DWORD PTR [esi+0x4],ebx
65003026:	mov    DWORD PTR [esi+0x8],ebp
65003029:	mov    eax,esi
6500302b:	mov    DWORD PTR [esi+0xc],ecx
6500302e:	mov    ecx,DWORD PTR [esp+0x34]
65003032:	mov    DWORD PTR fs:0x0,ecx
65003039:	pop    ecx
6500303a:	pop    edi
6500303b:	pop    ebp
6500303c:	pop    ebx
6500303d:	mov    ecx,DWORD PTR [esp+0x20]
65003041:	xor    ecx,esp
65003043:	call   0x6501275c
65003048:	add    esp,0x30
6500304b:	ret    
6500304c:	int3   
6500304d:	int3   
6500304e:	int3   
6500304f:	int3   
65003050:	push   ebp
65003051:	mov    ebp,esp
65003053:	sub    esp,0x18
65003056:	mov    eax,ds:0x6502c09c
6500305b:	xor    eax,ebp
6500305d:	mov    DWORD PTR [ebp-0x4],eax
65003060:	mov    eax,DWORD PTR [ebp+0x8]
65003063:	push   ebx
65003064:	push   esi
65003065:	push   edi
65003066:	mov    DWORD PTR [ebp-0x14],eax
65003069:	mov    DWORD PTR [ebp-0x18],0x0
65003070:	call   DWORD PTR ds:0x6502c06c
65003076:	movzx  ecx,BYTE PTR [ebp+0xc]
6500307a:	push   ecx
6500307b:	push   0x65026698
65003080:	push   0x6
65003082:	push   0x650266c8
65003087:	mov    ebx,eax
65003089:	call   0x65006a10
6500308e:	add    esp,0xc
65003091:	push   eax
65003092:	lea    edx,[ebp-0x10]
65003095:	push   edx
65003096:	call   0x65013233
6500309b:	add    esp,0xc
6500309e:	lea    eax,[ebp-0x10]
650030a1:	push   eax
650030a2:	call   DWORD PTR ds:0x65024054
650030a8:	mov    esi,eax
650030aa:	add    esi,0x1
650030ad:	cmp    esi,0x3fffffff
650030b3:	jg     0x650030e1
650030b5:	lea    eax,[esi+esi*1]
650030b8:	call   0x65012e60
650030bd:	mov    edi,esp
650030bf:	test   edi,edi
650030c1:	je     0x650030e1
650030c3:	push   esi
650030c4:	push   edi
650030c5:	push   0xffffffff
650030c7:	lea    ecx,[ebp-0x10]
650030ca:	push   ecx
650030cb:	push   0x0
650030cd:	push   ebx
650030ce:	mov    WORD PTR [edi],0x0
650030d3:	call   DWORD PTR ds:0x65024024
650030d9:	neg    eax
650030db:	sbb    eax,eax
650030dd:	and    eax,edi
650030df:	jmp    0x650030e3
650030e1:	xor    eax,eax
650030e3:	mov    esi,DWORD PTR [ebp-0x14]
650030e6:	push   eax
650030e7:	mov    ecx,esi
650030e9:	call   0x65002550
650030ee:	mov    eax,esi
650030f0:	lea    esp,[ebp-0x24]
650030f3:	pop    edi
650030f4:	pop    esi
650030f5:	pop    ebx
650030f6:	mov    ecx,DWORD PTR [ebp-0x4]
650030f9:	xor    ecx,ebp
650030fb:	call   0x6501275c
65003100:	mov    esp,ebp
65003102:	pop    ebp
65003103:	ret    
65003104:	int3   
65003105:	int3   
65003106:	int3   
65003107:	int3   
65003108:	int3   
65003109:	int3   
6500310a:	int3   
6500310b:	int3   
6500310c:	int3   
6500310d:	int3   
6500310e:	int3   
6500310f:	int3   
65003110:	push   0xffffffff
65003112:	push   0x65023249
65003117:	mov    eax,fs:0x0
6500311d:	push   eax
6500311e:	sub    esp,0x20
65003121:	push   ebx
65003122:	push   ebp
65003123:	push   esi
65003124:	push   edi
65003125:	mov    eax,ds:0x6502c09c
6500312a:	xor    eax,esp
6500312c:	push   eax
6500312d:	lea    eax,[esp+0x34]
65003131:	mov    fs:0x0,eax
65003137:	xor    ebx,ebx
65003139:	mov    DWORD PTR [esp+0x3c],ebx
6500313d:	mov    DWORD PTR [esp+0x18],ebx
65003141:	mov    eax,ds:0x6502d560
65003146:	mov    edx,DWORD PTR [eax+0xc]
65003149:	mov    ecx,0x6502d560
6500314e:	call   edx
65003150:	mov    edi,DWORD PTR [esp+0x44]
65003154:	add    eax,0x10
65003157:	mov    DWORD PTR [edi],eax
65003159:	mov    esi,DWORD PTR [esp+0x48]
6500315d:	mov    DWORD PTR [esp+0x3c],ebx
65003161:	mov    eax,DWORD PTR [esi]
65003163:	mov    ecx,0x1
65003168:	sub    eax,0x10
6500316b:	cmp    DWORD PTR [eax+0xc],ecx
6500316e:	mov    DWORD PTR [esp+0x18],ecx
65003172:	jle    0x6500317f
65003174:	mov    eax,DWORD PTR [eax+0x4]
65003177:	push   eax
65003178:	mov    ecx,esi
6500317a:	call   0x65001950
6500317f:	mov    ebp,DWORD PTR [esi]
65003181:	movzx  eax,WORD PTR [ebp+0x0]
65003185:	cmp    ax,bx
65003188:	je     0x65003429
6500318e:	cmp    ax,0x41
65003192:	jb     0x6500319e
65003194:	cmp    ax,0x5a
65003198:	jbe    0x650033cf
6500319e:	cmp    ax,0x61
650031a2:	jb     0x650031ae
650031a4:	cmp    ax,0x7a
650031a8:	jbe    0x650033cf
650031ae:	cmp    ax,0x30
650031b2:	jb     0x650031c9
650031b4:	cmp    ax,0x39
650031b8:	ja     0x650031c9
650031ba:	movzx  ecx,BYTE PTR [ebp+0x0]
650031be:	push   ecx
650031bf:	call   0x65006800
650031c4:	jmp    0x65003419
650031c9:	cmp    ax,0x20
650031cd:	jne    0x6500321b
650031cf:	mov    eax,DWORD PTR [edi]
650031d1:	mov    ebx,DWORD PTR [eax-0xc]
650031d4:	mov    ecx,0x1
650031d9:	sub    ecx,DWORD PTR [eax-0x4]
650031dc:	mov    eax,DWORD PTR [eax-0x8]
650031df:	lea    esi,[ebx+0x1]
650031e2:	sub    eax,esi
650031e4:	or     eax,ecx
650031e6:	jge    0x650031f0
650031e8:	push   esi
650031e9:	mov    ecx,edi
650031eb:	call   0x65001e00
650031f0:	test   esi,esi
650031f2:	mov    eax,DWORD PTR [edi]
650031f4:	mov    WORD PTR [eax+ebx*2],0x2b
650031fa:	jl     0x6500343f
65003200:	mov    eax,DWORD PTR [edi]
65003202:	cmp    esi,DWORD PTR [eax-0x8]
65003205:	jg     0x6500343f
6500320b:	mov    DWORD PTR [eax-0xc],esi
6500320e:	mov    edx,DWORD PTR [edi]
65003210:	mov    WORD PTR [edx+esi*2],0x0
65003216:	jmp    0x65003419
6500321b:	cmp    ax,0x2d
6500321f:	je     0x650033cf
65003225:	cmp    ax,0x5f
65003229:	je     0x650033cf
6500322f:	cmp    ax,0x2e
65003233:	je     0x650033cf
65003239:	cmp    ax,0x21
6500323d:	je     0x650033cf
65003243:	cmp    ax,0x7e
65003247:	je     0x650033cf
6500324d:	cmp    ax,0x2a
65003251:	je     0x650033cf
65003257:	cmp    ax,0x27
6500325b:	je     0x650033cf
65003261:	cmp    ax,0x28
65003265:	je     0x650033cf
6500326b:	cmp    ax,0x29
6500326f:	je     0x650033cf
65003275:	cmp    ax,0x7f
65003279:	ja     0x650032b0
6500327b:	movzx  eax,BYTE PTR [ebp+0x0]
6500327f:	push   eax
65003280:	lea    ecx,[esp+0x20]
65003284:	push   ecx
65003285:	call   0x65003050
6500328a:	add    esp,0x8
6500328d:	push   eax
6500328e:	mov    ecx,edi
65003290:	mov    DWORD PTR [esp+0x40],0x1
65003298:	call   0x65002600
6500329d:	lea    ecx,[esp+0x1c]
650032a1:	mov    BYTE PTR [esp+0x3c],0x0
650032a6:	call   0x65001930
650032ab:	jmp    0x65003419
650032b0:	cmp    ax,0x7ff
650032b4:	ja     0x65003325
650032b6:	shr    eax,0x6
650032b9:	or     eax,0xffffffc0
650032bc:	push   eax
650032bd:	lea    edx,[esp+0x24]
650032c1:	push   edx
650032c2:	call   0x65003050
650032c7:	add    esp,0x8
650032ca:	push   eax
650032cb:	mov    ecx,edi
650032cd:	mov    DWORD PTR [esp+0x40],0x2
650032d5:	call   0x65002600
650032da:	lea    ecx,[esp+0x20]
650032de:	mov    BYTE PTR [esp+0x3c],0x0
650032e3:	call   0x65001930
650032e8:	movzx  eax,BYTE PTR [ebp+0x0]
650032ec:	and    eax,0xffffff3f
650032f1:	or     eax,0xffffff80
650032f4:	push   eax
650032f5:	lea    ecx,[esp+0x28]
650032f9:	push   ecx
650032fa:	call   0x65003050
650032ff:	add    esp,0x8
65003302:	push   eax
65003303:	mov    ecx,edi
65003305:	mov    DWORD PTR [esp+0x40],0x3
6500330d:	call   0x65002600
65003312:	lea    ecx,[esp+0x24]
65003316:	mov    BYTE PTR [esp+0x3c],0x0
6500331b:	call   0x65001930
65003320:	jmp    0x65003419
65003325:	shr    ax,0xc
65003329:	lea    edx,[esp+0x28]
6500332d:	or     eax,0xffffffe0
65003330:	push   eax
65003331:	push   edx
65003332:	call   0x65003050
65003337:	add    esp,0x8
6500333a:	push   eax
6500333b:	mov    ecx,edi
6500333d:	mov    DWORD PTR [esp+0x40],0x4
65003345:	call   0x65002600
6500334a:	lea    ecx,[esp+0x28]
6500334e:	mov    BYTE PTR [esp+0x3c],0x0
65003353:	call   0x65001930
65003358:	movzx  eax,WORD PTR [ebp+0x0]
6500335c:	shr    ax,0x6
65003360:	lea    ecx,[esp+0x2c]
65003364:	and    eax,0xffffff3f
65003369:	or     eax,0xffffff80
6500336c:	push   eax
6500336d:	push   ecx
6500336e:	call   0x65003050
65003373:	add    esp,0x8
65003376:	push   eax
65003377:	mov    ecx,edi
65003379:	mov    DWORD PTR [esp+0x40],0x5
65003381:	call   0x65002600
65003386:	lea    ecx,[esp+0x2c]
6500338a:	mov    BYTE PTR [esp+0x3c],0x0
6500338f:	call   0x65001930
65003394:	movzx  edx,BYTE PTR [ebp+0x0]
65003398:	and    edx,0xffffff3f
6500339e:	or     edx,0xffffff80
650033a1:	push   edx
650033a2:	lea    eax,[esp+0x34]
650033a6:	push   eax
650033a7:	call   0x65003050
650033ac:	add    esp,0x8
650033af:	push   eax
650033b0:	mov    ecx,edi
650033b2:	mov    DWORD PTR [esp+0x40],0x6
650033ba:	call   0x65002600
650033bf:	lea    ecx,[esp+0x30]
650033c3:	mov    BYTE PTR [esp+0x3c],0x0
650033c8:	call   0x65001930
650033cd:	jmp    0x65003419
650033cf:	mov    cl,BYTE PTR [ebp+0x0]
650033d2:	mov    eax,DWORD PTR [edi]
650033d4:	mov    ebx,DWORD PTR [eax-0xc]
650033d7:	mov    BYTE PTR [esp+0x14],cl
650033db:	mov    ecx,0x1
650033e0:	sub    ecx,DWORD PTR [eax-0x4]
650033e3:	mov    eax,DWORD PTR [eax-0x8]
650033e6:	lea    esi,[ebx+0x1]
650033e9:	sub    eax,esi
650033eb:	or     eax,ecx
650033ed:	jge    0x650033f7
650033ef:	push   esi
650033f0:	mov    ecx,edi
650033f2:	call   0x65001e00
650033f7:	test   esi,esi
650033f9:	movsx  dx,BYTE PTR [esp+0x14]
650033ff:	mov    eax,DWORD PTR [edi]
65003401:	mov    WORD PTR [eax+ebx*2],dx
65003405:	jl     0x6500343f
65003407:	mov    eax,DWORD PTR [edi]
65003409:	cmp    esi,DWORD PTR [eax-0x8]
6500340c:	jg     0x6500343f
6500340e:	mov    DWORD PTR [eax-0xc],esi
65003411:	mov    eax,DWORD PTR [edi]
65003413:	mov    WORD PTR [eax+esi*2],0x0
65003419:	movzx  eax,WORD PTR [ebp+0x2]
6500341d:	add    ebp,0x2
65003420:	test   ax,ax
65003423:	jne    0x6500318e
65003429:	mov    eax,edi
6500342b:	mov    ecx,DWORD PTR [esp+0x34]
6500342f:	mov    DWORD PTR fs:0x0,ecx
65003436:	pop    ecx
65003437:	pop    edi
65003438:	pop    esi
65003439:	pop    ebp
6500343a:	pop    ebx
6500343b:	add    esp,0x2c
6500343e:	ret    
6500343f:	push   0x80070057
65003444:	call   0x65001040
65003449:	int3   
6500344a:	int3   
6500344b:	int3   
6500344c:	int3   
6500344d:	int3   
6500344e:	int3   
6500344f:	int3   
65003450:	push   0xffffffff
65003452:	push   0x65022d09
65003457:	mov    eax,fs:0x0
6500345d:	push   eax
6500345e:	sub    esp,0x48
65003461:	push   ebx
65003462:	push   esi
65003463:	push   edi
65003464:	mov    eax,ds:0x6502c09c
65003469:	xor    eax,esp
6500346b:	push   eax
6500346c:	lea    eax,[esp+0x58]
65003470:	mov    fs:0x0,eax
65003476:	xor    ebx,ebx
65003478:	mov    DWORD PTR [esp+0x60],ebx
6500347c:	mov    DWORD PTR [esp+0x10],ebx
65003480:	mov    eax,ds:0x6502d560
65003485:	mov    edx,DWORD PTR [eax+0xc]
65003488:	mov    ecx,0x6502d560
6500348d:	call   edx
6500348f:	mov    edi,DWORD PTR [esp+0x68]
65003493:	add    eax,0x10
65003496:	mov    DWORD PTR [edi],eax
65003498:	mov    DWORD PTR [esp+0x60],ebx
6500349c:	mov    ecx,0x1
650034a1:	sub    ecx,DWORD PTR [eax-0x4]
650034a4:	mov    eax,DWORD PTR [eax-0x8]
650034a7:	sub    eax,0x800
650034ac:	cmp    BYTE PTR [esp+0x6c],bl
650034b0:	mov    DWORD PTR [esp+0x10],0x1
650034b8:	je     0x6500354b
650034be:	or     eax,ecx
650034c0:	jge    0x650034ce
650034c2:	push   0x800
650034c7:	mov    ecx,edi
650034c9:	call   0x65001e00
650034ce:	mov    eax,DWORD PTR [edi]
650034d0:	push   0x800
650034d5:	push   eax
650034d6:	call   0x6500e3c0
650034db:	call   eax
650034dd:	test   eax,eax
650034df:	jne    0x650035d2
650034e5:	push   0x650266d0
650034ea:	push   0x22
650034ec:	push   0x65026700
650034f1:	call   0x65006a10
650034f6:	mov    ecx,eax
650034f8:	add    esp,0xc
650034fb:	mov    DWORD PTR [esp+0x2c],0xf
65003503:	mov    DWORD PTR [esp+0x28],ebx
65003507:	mov    BYTE PTR [esp+0x18],bl
6500350b:	lea    esi,[ecx+0x1]
6500350e:	mov    edi,edi
65003510:	mov    dl,BYTE PTR [ecx]
65003512:	add    ecx,0x1
65003515:	cmp    dl,bl
65003517:	jne    0x65003510
65003519:	sub    ecx,esi
6500351b:	push   ecx
6500351c:	push   eax
6500351d:	lea    ecx,[esp+0x1c]
65003521:	call   0x65001860
65003526:	lea    eax,[esp+0x14]
6500352a:	push   eax
6500352b:	lea    ecx,[esp+0x34]
6500352f:	mov    DWORD PTR [esp+0x64],0x1
65003537:	call   0x65002020
6500353c:	push   0x65029e34
65003541:	lea    ecx,[esp+0x34]
65003545:	push   ecx
65003546:	call   0x65012306
6500354b:	or     eax,ecx
6500354d:	jge    0x6500355b
6500354f:	push   0x800
65003554:	mov    ecx,edi
65003556:	call   0x65001e00
6500355b:	mov    eax,DWORD PTR [edi]
6500355d:	push   0x800
65003562:	push   eax
65003563:	call   0x6500ded0
65003568:	call   eax
6500356a:	test   eax,eax
6500356c:	jne    0x650035d2
6500356e:	push   0x65026724
65003573:	push   0x1c
65003575:	push   0x65026764
6500357a:	call   0x65006a10
6500357f:	mov    ecx,eax
65003581:	add    esp,0xc
65003584:	mov    DWORD PTR [esp+0x2c],0xf
6500358c:	mov    DWORD PTR [esp+0x28],ebx
65003590:	mov    BYTE PTR [esp+0x18],bl
65003594:	lea    esi,[ecx+0x1]
65003597:	mov    dl,BYTE PTR [ecx]
65003599:	add    ecx,0x1
6500359c:	cmp    dl,bl
6500359e:	jne    0x65003597
650035a0:	sub    ecx,esi
650035a2:	push   ecx
650035a3:	push   eax
650035a4:	lea    ecx,[esp+0x1c]
650035a8:	call   0x65001860
650035ad:	lea    edx,[esp+0x14]
650035b1:	push   edx
650035b2:	lea    ecx,[esp+0x34]
650035b6:	mov    DWORD PTR [esp+0x64],0x2
650035be:	call   0x65002020
650035c3:	push   0x65029e34
650035c8:	lea    eax,[esp+0x34]
650035cc:	push   eax
650035cd:	call   0x65012306
650035d2:	mov    edx,DWORD PTR [edi]
650035d4:	cmp    edx,ebx
650035d6:	jne    0x650035dc
650035d8:	xor    eax,eax
650035da:	jmp    0x650035f2
650035dc:	mov    eax,edx
650035de:	lea    esi,[eax+0x2]
650035e1:	mov    cx,WORD PTR [eax]
650035e4:	add    eax,0x2
650035e7:	cmp    cx,bx
650035ea:	jne    0x650035e1
650035ec:	sub    eax,esi
650035ee:	sar    eax,1
650035f0:	js     0x65003634
650035f2:	cmp    eax,DWORD PTR [edx-0x8]
650035f5:	jg     0x65003634
650035f7:	mov    DWORD PTR [edx-0xc],eax
650035fa:	mov    ecx,DWORD PTR [edi]
650035fc:	mov    WORD PTR [ecx+eax*2],bx
65003600:	mov    ecx,DWORD PTR [edi]
65003602:	mov    edx,DWORD PTR [ecx-0xc]
65003605:	lea    eax,[edx-0x1]
65003608:	cmp    eax,ebx
6500360a:	jl     0x65003634
6500360c:	cmp    eax,edx
6500360e:	jg     0x65003634
65003610:	movzx  eax,WORD PTR [ecx+eax*2]
65003614:	cmp    ax,0x5c
65003618:	je     0x6500361f
6500361a:	call   0x65006860
6500361f:	mov    eax,edi
65003621:	mov    ecx,DWORD PTR [esp+0x58]
65003625:	mov    DWORD PTR fs:0x0,ecx
6500362c:	pop    ecx
6500362d:	pop    edi
6500362e:	pop    esi
6500362f:	pop    ebx
65003630:	add    esp,0x54
65003633:	ret    
65003634:	push   0x80070057
65003639:	call   0x65001040
6500363e:	int3   
6500363f:	int3   
65003640:	push   0xffffffff
65003642:	push   0x650231e1
65003647:	mov    eax,fs:0x0
6500364d:	push   eax
6500364e:	sub    esp,0x48
65003651:	push   ebx
65003652:	push   ebp
65003653:	push   esi
65003654:	push   edi
65003655:	mov    eax,ds:0x6502c09c
6500365a:	xor    eax,esp
6500365c:	push   eax
6500365d:	lea    eax,[esp+0x5c]
65003661:	mov    fs:0x0,eax
65003667:	mov    esi,DWORD PTR [esp+0x6c]
6500366b:	xor    ebx,ebx
6500366d:	push   ebx
6500366e:	mov    DWORD PTR [esp+0x68],ebx
65003672:	push   esi
65003673:	mov    DWORD PTR [esp+0x1c],ebx
65003677:	call   0x65003450
6500367c:	add    esp,0x8
6500367f:	mov    DWORD PTR [esp+0x64],ebx
65003683:	mov    eax,DWORD PTR [esi]
65003685:	mov    ebp,0x1
6500368a:	sub    eax,0x10
6500368d:	cmp    DWORD PTR [eax+0xc],ebp
65003690:	mov    DWORD PTR [esp+0x14],ebp
65003694:	jle    0x650036a1
65003696:	mov    eax,DWORD PTR [eax+0x4]
65003699:	push   eax
6500369a:	mov    ecx,esi
6500369c:	call   0x65001950
650036a1:	mov    eax,DWORD PTR [esi]
650036a3:	push   0x5c
650036a5:	push   eax
650036a6:	call   0x650131ac
650036ab:	mov    edi,eax
650036ad:	add    esp,0x8
650036b0:	cmp    edi,ebx
650036b2:	jne    0x65003716
650036b4:	push   0x65026784
650036b9:	push   0x18
650036bb:	push   0x650267a8
650036c0:	call   0x65006a10
650036c5:	mov    ecx,eax
650036c7:	add    esp,0xc
650036ca:	mov    DWORD PTR [esp+0x30],0xf
650036d2:	mov    DWORD PTR [esp+0x2c],ebx
650036d6:	mov    BYTE PTR [esp+0x1c],bl
650036da:	lea    esi,[ecx+0x1]
650036dd:	lea    ecx,[ecx+0x0]
650036e0:	mov    dl,BYTE PTR [ecx]
650036e2:	add    ecx,ebp
650036e4:	cmp    dl,bl
650036e6:	jne    0x650036e0
650036e8:	sub    ecx,esi
650036ea:	push   ecx
650036eb:	push   eax
650036ec:	lea    ecx,[esp+0x20]
650036f0:	call   0x65001860
650036f5:	lea    ecx,[esp+0x18]
650036f9:	push   ecx
650036fa:	lea    ecx,[esp+0x38]
650036fe:	mov    DWORD PTR [esp+0x68],ebp
65003702:	call   0x65002020
65003707:	push   0x65029e34
6500370c:	lea    edx,[esp+0x38]
65003710:	push   edx
65003711:	call   0x65012306
65003716:	mov    eax,DWORD PTR [esi]
65003718:	sub    eax,0x10
6500371b:	cmp    DWORD PTR [eax+0xc],ebp
6500371e:	jle    0x6500372b
65003720:	mov    eax,DWORD PTR [eax+0x4]
65003723:	push   eax
65003724:	mov    ecx,esi
65003726:	call   0x65001950
6500372b:	mov    ecx,DWORD PTR [esi]
6500372d:	sub    edi,ecx
6500372f:	sar    edi,1
65003731:	add    edi,ebp
65003733:	cmp    ecx,ebx
65003735:	jne    0x6500373b
65003737:	xor    eax,eax
65003739:	jmp    0x65003756
6500373b:	mov    eax,ecx
6500373d:	lea    ebp,[eax+0x2]
65003740:	mov    dx,WORD PTR [eax]
65003743:	add    eax,0x2
65003746:	cmp    dx,bx
65003749:	jne    0x65003740
6500374b:	sub    eax,ebp
6500374d:	sar    eax,1
6500374f:	js     0x650037a9
65003751:	mov    ebp,0x1
65003756:	cmp    eax,DWORD PTR [ecx-0x8]
65003759:	jg     0x650037a9
6500375b:	mov    DWORD PTR [ecx-0xc],eax
6500375e:	mov    ecx,DWORD PTR [esi]
65003760:	mov    WORD PTR [ecx+eax*2],bx
65003764:	mov    eax,DWORD PTR [esi]
65003766:	sub    eax,0x10
65003769:	mov    ecx,ebp
6500376b:	sub    ecx,DWORD PTR [eax+0xc]
6500376e:	mov    eax,DWORD PTR [eax+0x8]
65003771:	sub    eax,edi
65003773:	or     eax,ecx
65003775:	jge    0x6500377f
65003777:	push   edi
65003778:	mov    ecx,esi
6500377a:	call   0x65001e00
6500377f:	cmp    edi,ebx
65003781:	jl     0x650037a9
65003783:	mov    eax,DWORD PTR [esi]
65003785:	cmp    edi,DWORD PTR [eax-0x8]
65003788:	jg     0x650037a9
6500378a:	mov    DWORD PTR [eax-0xc],edi
6500378d:	mov    edx,DWORD PTR [esi]
6500378f:	mov    WORD PTR [edx+edi*2],bx
65003793:	mov    eax,esi
65003795:	mov    ecx,DWORD PTR [esp+0x5c]
65003799:	mov    DWORD PTR fs:0x0,ecx
650037a0:	pop    ecx
650037a1:	pop    edi
650037a2:	pop    esi
650037a3:	pop    ebp
650037a4:	pop    ebx
650037a5:	add    esp,0x54
650037a8:	ret    
650037a9:	push   0x80070057
650037ae:	call   0x65001040
650037b3:	int3   
650037b4:	int3   
650037b5:	int3   
650037b6:	int3   
650037b7:	int3   
650037b8:	int3   
650037b9:	int3   
650037ba:	int3   
650037bb:	int3   
650037bc:	int3   
650037bd:	int3   
650037be:	int3   
650037bf:	int3   
650037c0:	push   ebp
650037c1:	lea    ebp,[esp-0x78]
650037c5:	sub    esp,0x78
650037c8:	push   0xffffffff
650037ca:	push   0x650232f9
650037cf:	mov    eax,fs:0x0
650037d5:	push   eax
650037d6:	sub    esp,0xb4
650037dc:	mov    eax,ds:0x6502c09c
650037e1:	xor    eax,ebp
650037e3:	mov    DWORD PTR [ebp+0x74],eax
650037e6:	push   ebx
650037e7:	push   esi
650037e8:	push   edi
650037e9:	push   eax
650037ea:	lea    eax,[ebp-0xc]
650037ed:	mov    fs:0x0,eax
650037f3:	call   DWORD PTR ds:0x6502c06c
650037f9:	mov    ebx,eax
650037fb:	lea    eax,[ebp+0xc]
650037fe:	push   eax
650037ff:	call   0x65003640
65003804:	add    esp,0x4
65003807:	push   0x0
65003809:	push   0x0
6500380b:	lea    ecx,[ebp+0x0]
6500380e:	push   ecx
6500380f:	lea    edx,[ebp+0x4]
65003812:	push   edx
65003813:	lea    eax,[ebp+0x8]
65003816:	push   eax
65003817:	push   0x0
65003819:	mov    DWORD PTR [ebp-0x4],0x0
65003820:	mov    ecx,DWORD PTR [ebp+0xc]
65003823:	push   0x0
65003825:	push   ecx
65003826:	call   0x6500e330
6500382b:	call   eax
6500382d:	test   eax,eax
6500382f:	jne    0x65003940
65003835:	call   DWORD PTR ds:0x65024044
6500383b:	push   0xa
6500383d:	lea    edx,[ebp+0x10]
65003840:	push   edx
65003841:	push   eax
65003842:	call   0x6501320e
65003847:	mov    eax,DWORD PTR [ebp+0xc]
6500384a:	add    esp,0xc
6500384d:	test   eax,eax
6500384f:	mov    edi,eax
65003851:	je     0x6500387f
65003853:	push   eax
65003854:	call   DWORD PTR ds:0x65024050
6500385a:	add    eax,0x1
6500385d:	cmp    eax,0x3fffffff
65003862:	jle    0x65003868
65003864:	xor    edi,edi
65003866:	jmp    0x6500387f
65003868:	lea    esi,[eax+eax*1]
6500386b:	mov    eax,esi
6500386d:	call   0x65012e60
65003872:	mov    eax,esp
65003874:	push   ebx
65003875:	push   esi
65003876:	push   edi
65003877:	push   eax
65003878:	call   0x65002b40
6500387d:	mov    edi,eax
6500387f:	push   0x6502680c
65003884:	push   0x21
65003886:	push   0x6502683c
6500388b:	call   0x65006a10
65003890:	mov    ecx,eax
65003892:	add    esp,0xc
65003895:	mov    DWORD PTR [ebp-0x10],0xf
6500389c:	mov    DWORD PTR [ebp-0x14],0x0
650038a3:	mov    BYTE PTR [ebp-0x24],0x0
650038a7:	lea    esi,[ecx+0x1]
650038aa:	lea    ebx,[ebx+0x0]
650038b0:	mov    dl,BYTE PTR [ecx]
650038b2:	add    ecx,0x1
650038b5:	test   dl,dl
650038b7:	jne    0x650038b0
650038b9:	sub    ecx,esi
650038bb:	push   ecx
650038bc:	push   eax
650038bd:	lea    ecx,[ebp-0x28]
650038c0:	call   0x65001860
650038c5:	lea    eax,[ebp-0x28]
650038c8:	push   eax
650038c9:	lea    esi,[ebp-0x6c]
650038cc:	mov    BYTE PTR [ebp-0x4],0x1
650038d0:	call   0x65009e50
650038d5:	mov    esi,eax
650038d7:	push   0x650267c8
650038dc:	push   0x7
650038de:	push   0x65026804
650038e3:	mov    BYTE PTR [ebp-0x4],0x2
650038e7:	call   0x65006a10
650038ec:	push   esi
650038ed:	mov    edi,eax
650038ef:	lea    esi,[ebp-0x88]
650038f5:	call   0x65009e50
650038fa:	push   eax
650038fb:	lea    edi,[ebp+0x10]
650038fe:	lea    esi,[ebp-0xc0]
65003904:	mov    BYTE PTR [ebp-0x4],0x3
65003908:	call   0x65009e50
6500390d:	push   eax
6500390e:	mov    edi,0x650267c4
65003913:	lea    esi,[ebp-0xa4]
65003919:	mov    BYTE PTR [ebp-0x4],0x4
6500391d:	call   0x65009e50
65003922:	add    esp,0x1c
65003925:	push   eax
65003926:	lea    ecx,[ebp-0x50]
65003929:	mov    BYTE PTR [ebp-0x4],0x5
6500392d:	call   0x65002020
65003932:	push   0x65029e34
65003937:	lea    ecx,[ebp-0x50]
6500393a:	push   ecx
6500393b:	call   0x65012306
65003940:	mov    esi,DWORD PTR [ebp+0x8]
65003943:	mov    DWORD PTR [ebp-0x4],0xffffffff
6500394a:	mov    eax,DWORD PTR [ebp+0xc]
6500394d:	add    eax,0xfffffff0
65003950:	lea    edx,[eax+0xc]
65003953:	or     ecx,0xffffffff
65003956:	lock xadd DWORD PTR [edx],ecx
6500395a:	dec    ecx
6500395b:	test   ecx,ecx
6500395d:	jg     0x65003969
6500395f:	mov    ecx,DWORD PTR [eax]
65003961:	mov    edx,DWORD PTR [ecx]
65003963:	push   eax
65003964:	mov    eax,DWORD PTR [edx+0x4]
65003967:	call   eax
65003969:	mov    eax,esi
6500396b:	lea    esp,[ebp-0xd0]
65003971:	mov    ecx,DWORD PTR [ebp-0xc]
65003974:	mov    DWORD PTR fs:0x0,ecx
6500397b:	pop    ecx
6500397c:	pop    edi
6500397d:	pop    esi
6500397e:	pop    ebx
6500397f:	mov    ecx,DWORD PTR [ebp+0x74]
65003982:	xor    ecx,ebp
65003984:	call   0x6501275c
65003989:	add    ebp,0x78
6500398c:	mov    esp,ebp
6500398e:	pop    ebp
6500398f:	ret    
65003990:	push   ebp
65003991:	mov    ebp,esp
65003993:	and    esp,0xfffffff8
65003996:	push   0xffffffff
65003998:	push   0x65022ca6
6500399d:	mov    eax,fs:0x0
650039a3:	push   eax
650039a4:	sub    esp,0x840
650039aa:	mov    eax,ds:0x6502c09c
650039af:	xor    eax,esp
650039b1:	mov    DWORD PTR [esp+0x838],eax
650039b8:	push   ebx
650039b9:	push   esi
650039ba:	push   edi
650039bb:	mov    eax,ds:0x6502c09c
650039c0:	xor    eax,esp
650039c2:	push   eax
650039c3:	lea    eax,[esp+0x850]
650039ca:	mov    fs:0x0,eax
650039d0:	xor    eax,eax
650039d2:	xor    ebx,ebx
650039d4:	mov    DWORD PTR [esp+0x34],ebx
650039d8:	mov    DWORD PTR [esp+0x38],eax
650039dc:	mov    DWORD PTR [esp+0x3c],eax
650039e0:	mov    DWORD PTR [esp+0x40],eax
650039e4:	mov    DWORD PTR [esp+0x1c],ebx
650039e8:	push   0x65026860
650039ed:	push   0x1f
650039ef:	push   0x65026890
650039f4:	mov    DWORD PTR [esp+0x864],ebx
650039fb:	call   0x65006d00
65003a00:	add    esp,0xc
65003a03:	lea    ecx,[esp+0x18]
65003a07:	push   ecx
65003a08:	push   0x20019
65003a0d:	push   ebx
65003a0e:	push   eax
65003a0f:	push   0x80000002
65003a14:	mov    DWORD PTR [esp+0x2c],ebx
65003a18:	call   DWORD PTR ds:0x6502400c
65003a1e:	cmp    eax,ebx
65003a20:	jne    0x65003a97
65003a22:	mov    edx,DWORD PTR [esp+0x18]
65003a26:	push   0x650268d0
65003a2b:	push   0xb
65003a2d:	push   0x650268f8
65003a32:	mov    DWORD PTR [esp+0x28],edx
65003a36:	mov    DWORD PTR [esp+0x2c],0x400
65003a3e:	call   0x65006d00
65003a43:	add    esp,0xc
65003a46:	push   eax
65003a47:	lea    eax,[esp+0x20]
65003a4b:	push   eax
65003a4c:	lea    edi,[esp+0x28]
65003a50:	lea    esi,[esp+0x4c]
65003a54:	call   0x65002ba0
65003a59:	test   eax,eax
65003a5b:	je     0x65003aba
65003a5d:	mov    eax,DWORD PTR [esp+0x18]
65003a61:	test   eax,eax
65003a63:	mov    ecx,DWORD PTR [esp+0x40]
65003a67:	mov    esi,DWORD PTR [esp+0x34]
65003a6b:	mov    edi,DWORD PTR [esp+0x38]
65003a6f:	mov    ebx,DWORD PTR [esp+0x3c]
65003a73:	mov    DWORD PTR [esp+0x30],ecx
65003a77:	je     0x65003a80
65003a79:	push   eax
65003a7a:	call   DWORD PTR ds:0x65024000
65003a80:	mov    eax,DWORD PTR [ebp+0x8]
65003a83:	mov    edx,DWORD PTR [esp+0x30]
65003a87:	mov    DWORD PTR [eax],esi
65003a89:	mov    DWORD PTR [eax+0x4],edi
65003a8c:	mov    DWORD PTR [eax+0x8],ebx
65003a8f:	mov    DWORD PTR [eax+0xc],edx
65003a92:	jmp    0x65003b89
65003a97:	mov    eax,DWORD PTR [ebp+0x8]
65003a9a:	mov    ecx,DWORD PTR [esp+0x34]
65003a9e:	mov    edx,DWORD PTR [esp+0x38]
65003aa2:	mov    DWORD PTR [eax],ecx
65003aa4:	mov    ecx,DWORD PTR [esp+0x3c]
65003aa8:	mov    DWORD PTR [eax+0x4],edx
65003aab:	mov    edx,DWORD PTR [esp+0x40]
65003aaf:	mov    DWORD PTR [eax+0x8],ecx
65003ab2:	mov    DWORD PTR [eax+0xc],edx
65003ab5:	jmp    0x65003b89
65003aba:	push   0x65026910
65003abf:	lea    ecx,[esp+0x18]
65003ac3:	call   0x65002550
65003ac8:	lea    eax,[esp+0x44]
65003acc:	mov    BYTE PTR [esp+0x858],0x1
65003ad4:	lea    edx,[eax+0x2]
65003ad7:	mov    cx,WORD PTR [eax]
65003ada:	add    eax,0x2
65003add:	cmp    cx,bx
65003ae0:	jne    0x65003ad7
65003ae2:	sub    eax,edx
65003ae4:	sar    eax,1
65003ae6:	push   eax
65003ae7:	lea    eax,[esp+0x48]
65003aeb:	push   eax
65003aec:	lea    ecx,[esp+0x1c]
65003af0:	call   0x650029a0
65003af5:	push   0x1
65003af7:	push   0x65026914
65003afc:	lea    ecx,[esp+0x1c]
65003b00:	call   0x650029a0
65003b05:	mov    eax,DWORD PTR [esp+0x14]
65003b09:	cmp    DWORD PTR [eax-0x4],0x1
65003b0d:	jle    0x65003b20
65003b0f:	mov    ecx,DWORD PTR [eax-0xc]
65003b12:	push   ecx
65003b13:	lea    ecx,[esp+0x18]
65003b17:	call   0x65001950
65003b1c:	mov    eax,DWORD PTR [esp+0x14]
65003b20:	lea    edx,[esp+0x34]
65003b24:	push   edx
65003b25:	push   eax
65003b26:	call   DWORD PTR ds:0x650241d8
65003b2c:	mov    eax,DWORD PTR [esp+0x40]
65003b30:	mov    esi,DWORD PTR [esp+0x34]
65003b34:	mov    edi,DWORD PTR [esp+0x38]
65003b38:	mov    ebx,DWORD PTR [esp+0x3c]
65003b3c:	mov    DWORD PTR [esp+0x30],eax
65003b40:	mov    BYTE PTR [esp+0x858],0x0
65003b48:	mov    eax,DWORD PTR [esp+0x14]
65003b4c:	add    eax,0xfffffff0
65003b4f:	lea    ecx,[eax+0xc]
65003b52:	or     edx,0xffffffff
65003b55:	lock xadd DWORD PTR [ecx],edx
65003b59:	dec    edx
65003b5a:	test   edx,edx
65003b5c:	jg     0x65003b68
65003b5e:	mov    ecx,DWORD PTR [eax]
65003b60:	mov    edx,DWORD PTR [ecx]
65003b62:	push   eax
65003b63:	mov    eax,DWORD PTR [edx+0x4]
65003b66:	call   eax
65003b68:	mov    eax,DWORD PTR [esp+0x18]
65003b6c:	test   eax,eax
65003b6e:	je     0x65003b77
65003b70:	push   eax
65003b71:	call   DWORD PTR ds:0x65024000
65003b77:	mov    eax,DWORD PTR [ebp+0x8]
65003b7a:	mov    ecx,DWORD PTR [esp+0x30]
65003b7e:	mov    DWORD PTR [eax],esi
65003b80:	mov    DWORD PTR [eax+0x4],edi
65003b83:	mov    DWORD PTR [eax+0x8],ebx
65003b86:	mov    DWORD PTR [eax+0xc],ecx
65003b89:	mov    ecx,DWORD PTR [esp+0x850]
65003b90:	mov    DWORD PTR fs:0x0,ecx
65003b97:	pop    ecx
65003b98:	pop    edi
65003b99:	pop    esi
65003b9a:	pop    ebx
65003b9b:	mov    ecx,DWORD PTR [esp+0x838]
65003ba2:	xor    ecx,esp
65003ba4:	call   0x6501275c
65003ba9:	mov    esp,ebp
65003bab:	pop    ebp
65003bac:	ret    
65003bad:	int3   
65003bae:	int3   
65003baf:	int3   
65003bb0:	push   ebp
65003bb1:	mov    ebp,esp
65003bb3:	and    esp,0xfffffff8
65003bb6:	push   0xffffffff
65003bb8:	push   0x65022c54
65003bbd:	mov    eax,fs:0x0
65003bc3:	push   eax
65003bc4:	sub    esp,0x460
65003bca:	mov    eax,ds:0x6502c09c
65003bcf:	xor    eax,esp
65003bd1:	mov    DWORD PTR [esp+0x458],eax
65003bd8:	push   ebx
65003bd9:	push   esi
65003bda:	push   edi
65003bdb:	mov    eax,ds:0x6502c09c
65003be0:	xor    eax,esp
65003be2:	push   eax
65003be3:	lea    eax,[esp+0x470]
65003bea:	mov    fs:0x0,eax
65003bf0:	mov    eax,DWORD PTR [ebp+0x8]
65003bf3:	xor    ebx,ebx
65003bf5:	test   BYTE PTR ds:0x650303dc,0x1
65003bfc:	mov    esi,ecx
65003bfe:	mov    DWORD PTR [esp+0x18],eax
65003c02:	mov    DWORD PTR [esp+0x14],esi
65003c06:	mov    DWORD PTR [esp+0x38],ebx
65003c0a:	jne    0x65003c5d
65003c0c:	or     DWORD PTR ds:0x650303dc,0x1
65003c13:	mov    DWORD PTR [esp+0x478],ebx
65003c1a:	call   0x650083d0
65003c1f:	mov    ds:0x650303d4,eax
65003c24:	mov    BYTE PTR [eax+0x29],0x1
65003c28:	mov    eax,ds:0x650303d4
65003c2d:	mov    DWORD PTR [eax+0x4],eax
65003c30:	mov    eax,ds:0x650303d4
65003c35:	mov    DWORD PTR [eax],eax
65003c37:	mov    eax,ds:0x650303d4
65003c3c:	mov    DWORD PTR [eax+0x8],eax
65003c3f:	push   0x650233b0
65003c44:	mov    DWORD PTR ds:0x650303d8,ebx
65003c4a:	call   0x6501288f
65003c4f:	add    esp,0x4
65003c52:	mov    DWORD PTR [esp+0x478],0xffffffff
65003c5d:	mov    eax,DWORD PTR [esi+0x4]
65003c60:	mov    esi,DWORD PTR [eax]
65003c62:	mov    eax,DWORD PTR [esp+0x14]
65003c66:	cmp    esi,DWORD PTR [eax+0x4]
65003c69:	je     0x65003dce
65003c6f:	cmp    DWORD PTR [esi+0x24],0x10
65003c73:	lea    edi,[esi+0xc]
65003c76:	jb     0x65003c7d
65003c78:	mov    ecx,DWORD PTR [edi+0x4]
65003c7b:	jmp    0x65003c80
65003c7d:	lea    ecx,[edi+0x4]
65003c80:	lea    edx,[esp+0x64]
65003c84:	mov    al,BYTE PTR [ecx]
65003c86:	mov    BYTE PTR [edx],al
65003c88:	add    ecx,0x1
65003c8b:	add    edx,0x1
65003c8e:	cmp    al,bl
65003c90:	jne    0x65003c84
65003c92:	mov    ecx,DWORD PTR [esp+0x14]
65003c96:	cmp    esi,DWORD PTR [ecx+0x4]
65003c99:	jne    0x65003ca0
65003c9b:	call   0x65012273
65003ca0:	push   0xffffffff
65003ca2:	push   ebx
65003ca3:	push   edi
65003ca4:	lea    ecx,[esp+0x54]
65003ca8:	mov    DWORD PTR [esp+0x6c],0xf
65003cb0:	mov    DWORD PTR [esp+0x68],ebx
65003cb4:	mov    BYTE PTR [esp+0x58],bl
65003cb8:	call   0x65001780
65003cbd:	lea    edx,[esp+0x64]
65003cc1:	push   edx
65003cc2:	mov    DWORD PTR [esp+0x47c],0x1
65003ccd:	call   0x6501eb05
65003cd2:	lea    eax,[esp+0x68]
65003cd6:	add    esp,0x4
65003cd9:	mov    DWORD PTR [esp+0x34],0xf
65003ce1:	mov    DWORD PTR [esp+0x30],ebx
65003ce5:	mov    BYTE PTR [esp+0x20],bl
65003ce9:	lea    edx,[eax+0x1]
65003cec:	lea    esp,[esp+0x0]
65003cf0:	mov    cl,BYTE PTR [eax]
65003cf2:	add    eax,0x1
65003cf5:	cmp    cl,bl
65003cf7:	jne    0x65003cf0
65003cf9:	sub    eax,edx
65003cfb:	push   eax
65003cfc:	lea    eax,[esp+0x68]
65003d00:	push   eax
65003d01:	lea    ecx,[esp+0x24]
65003d05:	call   0x65001860
65003d0a:	lea    ecx,[esp+0x1c]
65003d0e:	push   ecx
65003d0f:	lea    edx,[esp+0x40]
65003d13:	push   edx
65003d14:	push   0x650303d0
65003d19:	mov    BYTE PTR [esp+0x484],0x2
65003d21:	call   0x650070c0
65003d26:	mov    edi,0x10
65003d2b:	cmp    DWORD PTR [esp+0x34],edi
65003d2f:	jb     0x65003d3e
65003d31:	mov    eax,DWORD PTR [esp+0x20]
65003d35:	push   eax
65003d36:	call   0x65011f02
65003d3b:	add    esp,0x4
65003d3e:	mov    DWORD PTR [esp+0x478],0xffffffff
65003d49:	cmp    DWORD PTR [esp+0x60],edi
65003d4d:	mov    DWORD PTR [esp+0x34],0xf
65003d55:	mov    DWORD PTR [esp+0x30],ebx
65003d59:	mov    BYTE PTR [esp+0x20],bl
65003d5d:	jb     0x65003d6c
65003d5f:	mov    ecx,DWORD PTR [esp+0x4c]
65003d63:	push   ecx
65003d64:	call   0x65011f02
65003d69:	add    esp,0x4
65003d6c:	cmp    BYTE PTR [esi+0x29],bl
65003d6f:	mov    DWORD PTR [esp+0x60],0xf
65003d77:	mov    DWORD PTR [esp+0x5c],ebx
65003d7b:	mov    BYTE PTR [esp+0x4c],bl
65003d7f:	je     0x65003d8b
65003d81:	call   0x65012273
65003d86:	jmp    0x65003c62
65003d8b:	mov    ecx,DWORD PTR [esi+0x8]
65003d8e:	cmp    BYTE PTR [ecx+0x29],bl
65003d91:	jne    0x65003db0
65003d93:	mov    eax,DWORD PTR [ecx]
65003d95:	cmp    BYTE PTR [eax+0x29],bl
65003d98:	jne    0x65003da9
65003d9a:	lea    ebx,[ebx+0x0]
65003da0:	mov    ecx,eax
65003da2:	mov    eax,DWORD PTR [ecx]
65003da4:	cmp    BYTE PTR [eax+0x29],bl
65003da7:	je     0x65003da0
65003da9:	mov    esi,ecx
65003dab:	jmp    0x65003c62
65003db0:	mov    eax,DWORD PTR [esi+0x4]
65003db3:	cmp    BYTE PTR [eax+0x29],bl
65003db6:	jne    0x65003dc7
65003db8:	cmp    esi,DWORD PTR [eax+0x8]
65003dbb:	jne    0x65003dc7
65003dbd:	mov    esi,eax
65003dbf:	mov    eax,DWORD PTR [eax+0x4]
65003dc2:	cmp    BYTE PTR [eax+0x29],bl
65003dc5:	je     0x65003db8
65003dc7:	mov    esi,eax
65003dc9:	jmp    0x65003c62
65003dce:	mov    esi,DWORD PTR [esp+0x18]
65003dd2:	push   esi
65003dd3:	call   0x65006ff0
65003dd8:	mov    eax,esi
65003dda:	mov    ecx,DWORD PTR [esp+0x470]
65003de1:	mov    DWORD PTR fs:0x0,ecx
65003de8:	pop    ecx
65003de9:	pop    edi
65003dea:	pop    esi
65003deb:	pop    ebx
65003dec:	mov    ecx,DWORD PTR [esp+0x458]
65003df3:	xor    ecx,esp
65003df5:	call   0x6501275c
65003dfa:	mov    esp,ebp
65003dfc:	pop    ebp
65003dfd:	ret    
65003dfe:	int3   
65003dff:	int3   
65003e00:	push   ecx
65003e01:	call   0x65007aa0
65003e06:	pop    ecx
65003e07:	ret    
65003e08:	int3   
65003e09:	int3   
65003e0a:	int3   
65003e0b:	int3   
65003e0c:	int3   
65003e0d:	int3   
65003e0e:	int3   
65003e0f:	int3   
65003e10:	push   ebp
65003e11:	lea    ebp,[esp-0x404]
65003e18:	sub    esp,0x404
65003e1e:	push   0xffffffff
65003e20:	push   0x65023191
65003e25:	mov    eax,fs:0x0
65003e2b:	push   eax
65003e2c:	sub    esp,0x3c
65003e2f:	mov    eax,ds:0x6502c09c
65003e34:	xor    eax,ebp
65003e36:	mov    DWORD PTR [ebp+0x400],eax
65003e3c:	push   ebx
65003e3d:	push   esi
65003e3e:	push   edi
65003e3f:	push   eax
65003e40:	lea    eax,[ebp-0xc]
65003e43:	mov    fs:0x0,eax
65003e49:	xor    ebx,ebx
65003e4b:	mov    DWORD PTR [ebp-0x4],ebx
65003e4e:	test   BYTE PTR ds:0x650303fc,0x1
65003e55:	jne    0x65003e9d
65003e57:	or     DWORD PTR ds:0x650303fc,0x1
65003e5e:	mov    BYTE PTR [ebp-0x4],0x1
65003e62:	call   0x650083d0
65003e67:	mov    ds:0x650303f4,eax
65003e6c:	mov    BYTE PTR [eax+0x29],0x1
65003e70:	mov    eax,ds:0x650303f4
65003e75:	mov    DWORD PTR [eax+0x4],eax
65003e78:	mov    eax,ds:0x650303f4
65003e7d:	mov    DWORD PTR [eax],eax
65003e7f:	mov    eax,ds:0x650303f4
65003e84:	mov    DWORD PTR [eax+0x8],eax
65003e87:	push   0x650233c0
65003e8c:	mov    DWORD PTR ds:0x650303f8,ebx
65003e92:	call   0x6501288f
65003e97:	add    esp,0x4
65003e9a:	mov    BYTE PTR [ebp-0x4],bl
65003e9d:	cmp    DWORD PTR ds:0x650303f8,ebx
65003ea3:	jne    0x65004c69
65003ea9:	call   0x650083d0
65003eae:	mov    DWORD PTR [ebp-0x30],eax
65003eb1:	mov    BYTE PTR [eax+0x29],0x1
65003eb5:	mov    eax,DWORD PTR [ebp-0x30]
65003eb8:	mov    DWORD PTR [eax+0x4],eax
65003ebb:	mov    eax,DWORD PTR [ebp-0x30]
65003ebe:	mov    DWORD PTR [eax],eax
65003ec0:	mov    eax,DWORD PTR [ebp-0x30]
65003ec3:	mov    DWORD PTR [eax+0x8],eax
65003ec6:	mov    DWORD PTR [ebp-0x2c],ebx
65003ec9:	push   0x65026918
65003ece:	push   0x3
65003ed0:	push   0x65026948
65003ed5:	mov    BYTE PTR [ebp-0x4],0x2
65003ed9:	call   0x65006a10
65003ede:	mov    esi,eax
65003ee0:	mov    ecx,esi
65003ee2:	add    esp,0xc
65003ee5:	mov    DWORD PTR [ebp-0x10],0xf
65003eec:	mov    DWORD PTR [ebp-0x14],ebx
65003eef:	mov    BYTE PTR [ebp-0x24],bl
65003ef2:	lea    edi,[ecx+0x1]
65003ef5:	mov    al,BYTE PTR [ecx]
65003ef7:	add    ecx,0x1
65003efa:	cmp    al,bl
65003efc:	jne    0x65003ef5
65003efe:	sub    ecx,edi
65003f00:	push   ecx
65003f01:	push   esi
65003f02:	lea    ecx,[ebp-0x28]
65003f05:	call   0x65001860
65003f0a:	lea    eax,[ebp-0x28]
65003f0d:	push   eax
65003f0e:	lea    ecx,[ebp-0x40]
65003f11:	push   ecx
65003f12:	lea    edx,[ebp-0x34]
65003f15:	push   edx
65003f16:	mov    BYTE PTR [ebp-0x4],0x3
65003f1a:	call   0x650070c0
65003f1f:	mov    BYTE PTR [ebp-0x4],0x2
65003f23:	cmp    DWORD PTR [ebp-0x10],0x10
65003f27:	jb     0x65003f35
65003f29:	mov    eax,DWORD PTR [ebp-0x24]
65003f2c:	push   eax
65003f2d:	call   0x65011f02
65003f32:	add    esp,0x4
65003f35:	push   0x6502694c
65003f3a:	push   0x8
65003f3c:	push   0x65026988
65003f41:	call   0x65006a10
65003f46:	mov    esi,eax
65003f48:	mov    ecx,esi
65003f4a:	add    esp,0xc
65003f4d:	mov    DWORD PTR [ebp-0x10],0xf
65003f54:	mov    DWORD PTR [ebp-0x14],ebx
65003f57:	mov    BYTE PTR [ebp-0x24],bl
65003f5a:	lea    edx,[ecx+0x1]
65003f5d:	lea    ecx,[ecx+0x0]
65003f60:	mov    al,BYTE PTR [ecx]
65003f62:	add    ecx,0x1
65003f65:	cmp    al,bl
65003f67:	jne    0x65003f60
65003f69:	sub    ecx,edx
65003f6b:	push   ecx
65003f6c:	push   esi
65003f6d:	lea    ecx,[ebp-0x28]
65003f70:	call   0x65001860
65003f75:	lea    ecx,[ebp-0x28]
65003f78:	push   ecx
65003f79:	lea    edx,[ebp-0x40]
65003f7c:	push   edx
65003f7d:	lea    eax,[ebp-0x34]
65003f80:	push   eax
65003f81:	mov    BYTE PTR [ebp-0x4],0x4
65003f85:	call   0x650070c0
65003f8a:	mov    edi,0x10
65003f8f:	mov    BYTE PTR [ebp-0x4],0x2
65003f93:	cmp    DWORD PTR [ebp-0x10],edi
65003f96:	jb     0x65003fa4
65003f98:	mov    ecx,DWORD PTR [ebp-0x24]
65003f9b:	push   ecx
65003f9c:	call   0x65011f02
65003fa1:	add    esp,0x4
65003fa4:	push   0x65026994
65003fa9:	push   0x8
65003fab:	push   0x650269d4
65003fb0:	call   0x65006a10
65003fb5:	mov    esi,eax
65003fb7:	mov    ecx,esi
65003fb9:	add    esp,0xc
65003fbc:	mov    DWORD PTR [ebp-0x10],0xf
65003fc3:	mov    DWORD PTR [ebp-0x14],ebx
65003fc6:	mov    BYTE PTR [ebp-0x24],bl
65003fc9:	lea    edx,[ecx+0x1]
65003fcc:	lea    esp,[esp+0x0]
65003fd0:	mov    al,BYTE PTR [ecx]
65003fd2:	add    ecx,0x1
65003fd5:	cmp    al,bl
65003fd7:	jne    0x65003fd0
65003fd9:	sub    ecx,edx
65003fdb:	push   ecx
65003fdc:	push   esi
65003fdd:	lea    ecx,[ebp-0x28]
65003fe0:	call   0x65001860
65003fe5:	lea    edx,[ebp-0x28]
65003fe8:	push   edx
65003fe9:	lea    eax,[ebp-0x40]
65003fec:	push   eax
65003fed:	lea    ecx,[ebp-0x34]
65003ff0:	push   ecx
65003ff1:	mov    BYTE PTR [ebp-0x4],0x5
65003ff5:	call   0x650070c0
65003ffa:	mov    BYTE PTR [ebp-0x4],0x2
65003ffe:	cmp    DWORD PTR [ebp-0x10],edi
65004001:	jb     0x6500400f
65004003:	mov    edx,DWORD PTR [ebp-0x24]
65004006:	push   edx
65004007:	call   0x65011f02
6500400c:	add    esp,0x4
6500400f:	push   0x650269e0
65004014:	push   0xa
65004016:	push   0x65026a1c
6500401b:	call   0x65006a10
65004020:	mov    esi,eax
65004022:	mov    ecx,esi
65004024:	add    esp,0xc
65004027:	mov    DWORD PTR [ebp-0x10],0xf
6500402e:	mov    DWORD PTR [ebp-0x14],ebx
65004031:	mov    BYTE PTR [ebp-0x24],bl
65004034:	lea    edx,[ecx+0x1]
65004037:	mov    al,BYTE PTR [ecx]
65004039:	add    ecx,0x1
6500403c:	cmp    al,bl
6500403e:	jne    0x65004037
65004040:	sub    ecx,edx
65004042:	push   ecx
65004043:	push   esi
65004044:	lea    ecx,[ebp-0x28]
65004047:	call   0x65001860
6500404c:	lea    eax,[ebp-0x28]
6500404f:	push   eax
65004050:	lea    ecx,[ebp-0x40]
65004053:	push   ecx
65004054:	lea    edx,[ebp-0x34]
65004057:	push   edx
65004058:	mov    BYTE PTR [ebp-0x4],0x6
6500405c:	call   0x650070c0
65004061:	mov    BYTE PTR [ebp-0x4],0x2
65004065:	cmp    DWORD PTR [ebp-0x10],edi
65004068:	jb     0x65004076
6500406a:	mov    eax,DWORD PTR [ebp-0x24]
6500406d:	push   eax
6500406e:	call   0x65011f02
65004073:	add    esp,0x4
65004076:	push   0x65026a28
6500407b:	push   0x4
6500407d:	push   0x65026a64
65004082:	call   0x65006a10
65004087:	mov    esi,eax
65004089:	mov    ecx,esi
6500408b:	add    esp,0xc
6500408e:	mov    DWORD PTR [ebp-0x10],0xf
65004095:	mov    DWORD PTR [ebp-0x14],ebx
65004098:	mov    BYTE PTR [ebp-0x24],bl
6500409b:	lea    edx,[ecx+0x1]
6500409e:	mov    edi,edi
650040a0:	mov    al,BYTE PTR [ecx]
650040a2:	add    ecx,0x1
650040a5:	cmp    al,bl
650040a7:	jne    0x650040a0
650040a9:	sub    ecx,edx
650040ab:	push   ecx
650040ac:	push   esi
650040ad:	lea    ecx,[ebp-0x28]
650040b0:	call   0x65001860
650040b5:	lea    ecx,[ebp-0x28]
650040b8:	push   ecx
650040b9:	lea    edx,[ebp-0x40]
650040bc:	push   edx
650040bd:	lea    eax,[ebp-0x34]
650040c0:	push   eax
650040c1:	mov    BYTE PTR [ebp-0x4],0x7
650040c5:	call   0x650070c0
650040ca:	mov    BYTE PTR [ebp-0x4],0x2
650040ce:	cmp    DWORD PTR [ebp-0x10],edi
650040d1:	jb     0x650040df
650040d3:	mov    ecx,DWORD PTR [ebp-0x24]
650040d6:	push   ecx
650040d7:	call   0x65011f02
650040dc:	add    esp,0x4
650040df:	push   0x65026a6c
650040e4:	push   0x8
650040e6:	push   0x65026a94
650040eb:	call   0x65006a10
650040f0:	mov    esi,eax
650040f2:	mov    ecx,esi
650040f4:	add    esp,0xc
650040f7:	mov    DWORD PTR [ebp-0x10],0xf
650040fe:	mov    DWORD PTR [ebp-0x14],ebx
65004101:	mov    BYTE PTR [ebp-0x24],bl
65004104:	lea    edx,[ecx+0x1]
65004107:	mov    al,BYTE PTR [ecx]
65004109:	add    ecx,0x1
6500410c:	cmp    al,bl
6500410e:	jne    0x65004107
65004110:	sub    ecx,edx
65004112:	push   ecx
65004113:	push   esi
65004114:	lea    ecx,[ebp-0x28]
65004117:	call   0x65001860
6500411c:	lea    edx,[ebp-0x28]
6500411f:	push   edx
65004120:	lea    eax,[ebp-0x40]
65004123:	push   eax
65004124:	lea    ecx,[ebp-0x34]
65004127:	push   ecx
65004128:	mov    BYTE PTR [ebp-0x4],0x8
6500412c:	call   0x650070c0
65004131:	mov    BYTE PTR [ebp-0x4],0x2
65004135:	cmp    DWORD PTR [ebp-0x10],edi
65004138:	jb     0x65004146
6500413a:	mov    edx,DWORD PTR [ebp-0x24]
6500413d:	push   edx
6500413e:	call   0x65011f02
65004143:	add    esp,0x4
65004146:	push   0x65026aa0
6500414b:	push   0x5
6500414d:	push   0x65026adc
65004152:	call   0x65006a10
65004157:	mov    esi,eax
65004159:	mov    ecx,esi
6500415b:	add    esp,0xc
6500415e:	mov    DWORD PTR [ebp-0x10],0xf
65004165:	mov    DWORD PTR [ebp-0x14],ebx
65004168:	mov    BYTE PTR [ebp-0x24],bl
6500416b:	lea    edx,[ecx+0x1]
6500416e:	mov    edi,edi
65004170:	mov    al,BYTE PTR [ecx]
65004172:	add    ecx,0x1
65004175:	cmp    al,bl
65004177:	jne    0x65004170
65004179:	sub    ecx,edx
6500417b:	push   ecx
6500417c:	push   esi
6500417d:	lea    ecx,[ebp-0x28]
65004180:	call   0x65001860
65004185:	lea    eax,[ebp-0x28]
65004188:	push   eax
65004189:	lea    ecx,[ebp-0x40]
6500418c:	push   ecx
6500418d:	lea    edx,[ebp-0x34]
65004190:	push   edx
65004191:	mov    BYTE PTR [ebp-0x4],0x9
65004195:	call   0x650070c0
6500419a:	mov    BYTE PTR [ebp-0x4],0x2
6500419e:	cmp    DWORD PTR [ebp-0x10],edi
650041a1:	jb     0x650041af
650041a3:	mov    eax,DWORD PTR [ebp-0x24]
650041a6:	push   eax
650041a7:	call   0x65011f02
650041ac:	add    esp,0x4
650041af:	push   0x65026ae4
650041b4:	push   0x8
650041b6:	push   0x65026b24
650041bb:	call   0x65006a10
650041c0:	mov    esi,eax
650041c2:	mov    ecx,esi
650041c4:	add    esp,0xc
650041c7:	mov    DWORD PTR [ebp-0x10],0xf
650041ce:	mov    DWORD PTR [ebp-0x14],ebx
650041d1:	mov    BYTE PTR [ebp-0x24],bl
650041d4:	lea    edx,[ecx+0x1]
650041d7:	mov    al,BYTE PTR [ecx]
650041d9:	add    ecx,0x1
650041dc:	cmp    al,bl
650041de:	jne    0x650041d7
650041e0:	sub    ecx,edx
650041e2:	push   ecx
650041e3:	push   esi
650041e4:	lea    ecx,[ebp-0x28]
650041e7:	call   0x65001860
650041ec:	lea    ecx,[ebp-0x28]
650041ef:	push   ecx
650041f0:	lea    edx,[ebp-0x40]
650041f3:	push   edx
650041f4:	lea    eax,[ebp-0x34]
650041f7:	push   eax
650041f8:	mov    BYTE PTR [ebp-0x4],0xa
650041fc:	call   0x650070c0
65004201:	mov    BYTE PTR [ebp-0x4],0x2
65004205:	cmp    DWORD PTR [ebp-0x10],edi
65004208:	jb     0x65004216
6500420a:	mov    ecx,DWORD PTR [ebp-0x24]
6500420d:	push   ecx
6500420e:	call   0x65011f02
65004213:	add    esp,0x4
65004216:	push   0x65026b30
6500421b:	push   0xb
6500421d:	push   0x65026b70
65004222:	call   0x65006a10
65004227:	mov    esi,eax
65004229:	mov    ecx,esi
6500422b:	add    esp,0xc
6500422e:	mov    DWORD PTR [ebp-0x10],0xf
65004235:	mov    DWORD PTR [ebp-0x14],ebx
65004238:	mov    BYTE PTR [ebp-0x24],bl
6500423b:	lea    edx,[ecx+0x1]
6500423e:	mov    edi,edi
65004240:	mov    al,BYTE PTR [ecx]
65004242:	add    ecx,0x1
65004245:	cmp    al,bl
65004247:	jne    0x65004240
65004249:	sub    ecx,edx
6500424b:	push   ecx
6500424c:	push   esi
6500424d:	lea    ecx,[ebp-0x28]
65004250:	call   0x65001860
65004255:	lea    edx,[ebp-0x28]
65004258:	push   edx
65004259:	lea    eax,[ebp-0x40]
6500425c:	push   eax
6500425d:	lea    ecx,[ebp-0x34]
65004260:	push   ecx
65004261:	mov    BYTE PTR [ebp-0x4],0xb
65004265:	call   0x650070c0
6500426a:	mov    BYTE PTR [ebp-0x4],0x2
6500426e:	cmp    DWORD PTR [ebp-0x10],edi
65004271:	jb     0x6500427f
65004273:	mov    edx,DWORD PTR [ebp-0x24]
65004276:	push   edx
65004277:	call   0x65011f02
6500427c:	add    esp,0x4
6500427f:	push   0x65026b7c
65004284:	push   0x1e
65004286:	push   0x65026ba4
6500428b:	call   0x65006a10
65004290:	mov    esi,eax
65004292:	mov    ecx,esi
65004294:	add    esp,0xc
65004297:	mov    DWORD PTR [ebp-0x10],0xf
6500429e:	mov    DWORD PTR [ebp-0x14],ebx
650042a1:	mov    BYTE PTR [ebp-0x24],bl
650042a4:	lea    edx,[ecx+0x1]
650042a7:	mov    al,BYTE PTR [ecx]
650042a9:	add    ecx,0x1
650042ac:	cmp    al,bl
650042ae:	jne    0x650042a7
650042b0:	sub    ecx,edx
650042b2:	push   ecx
650042b3:	push   esi
650042b4:	lea    ecx,[ebp-0x28]
650042b7:	call   0x65001860
650042bc:	lea    eax,[ebp-0x28]
650042bf:	push   eax
650042c0:	lea    ecx,[ebp-0x40]
650042c3:	push   ecx
650042c4:	lea    edx,[ebp-0x34]
650042c7:	push   edx
650042c8:	mov    BYTE PTR [ebp-0x4],0xc
650042cc:	call   0x650070c0
650042d1:	mov    BYTE PTR [ebp-0x4],0x2
650042d5:	cmp    DWORD PTR [ebp-0x10],edi
650042d8:	jb     0x650042e6
650042da:	mov    eax,DWORD PTR [ebp-0x24]
650042dd:	push   eax
650042de:	call   0x65011f02
650042e3:	add    esp,0x4
650042e6:	push   0x65026bc4
650042eb:	push   0x7
650042ed:	push   0x65026be8
650042f2:	call   0x65006a10
650042f7:	mov    esi,eax
650042f9:	mov    ecx,esi
650042fb:	add    esp,0xc
650042fe:	mov    DWORD PTR [ebp-0x10],0xf
65004305:	mov    DWORD PTR [ebp-0x14],ebx
65004308:	mov    BYTE PTR [ebp-0x24],bl
6500430b:	lea    edx,[ecx+0x1]
6500430e:	mov    edi,edi
65004310:	mov    al,BYTE PTR [ecx]
65004312:	add    ecx,0x1
65004315:	cmp    al,bl
65004317:	jne    0x65004310
65004319:	sub    ecx,edx
6500431b:	push   ecx
6500431c:	push   esi
6500431d:	lea    ecx,[ebp-0x28]
65004320:	call   0x65001860
65004325:	lea    ecx,[ebp-0x28]
65004328:	push   ecx
65004329:	lea    edx,[ebp-0x40]
6500432c:	push   edx
6500432d:	lea    eax,[ebp-0x34]
65004330:	push   eax
65004331:	mov    BYTE PTR [ebp-0x4],0xd
65004335:	call   0x650070c0
6500433a:	mov    BYTE PTR [ebp-0x4],0x2
6500433e:	cmp    DWORD PTR [ebp-0x10],edi
65004341:	jb     0x6500434f
65004343:	mov    ecx,DWORD PTR [ebp-0x24]
65004346:	push   ecx
65004347:	call   0x65011f02
6500434c:	add    esp,0x4
6500434f:	push   0x65026bf0
65004354:	push   0xc
65004356:	push   0x65026c14
6500435b:	call   0x65006a10
65004360:	mov    esi,eax
65004362:	mov    ecx,esi
65004364:	add    esp,0xc
65004367:	mov    DWORD PTR [ebp-0x10],0xf
6500436e:	mov    DWORD PTR [ebp-0x14],ebx
65004371:	mov    BYTE PTR [ebp-0x24],bl
65004374:	lea    edx,[ecx+0x1]
65004377:	mov    al,BYTE PTR [ecx]
65004379:	add    ecx,0x1
6500437c:	cmp    al,bl
6500437e:	jne    0x65004377
65004380:	sub    ecx,edx
65004382:	push   ecx
65004383:	push   esi
65004384:	lea    ecx,[ebp-0x28]
65004387:	call   0x65001860
6500438c:	lea    edx,[ebp-0x28]
6500438f:	push   edx
65004390:	lea    eax,[ebp-0x40]
65004393:	push   eax
65004394:	lea    ecx,[ebp-0x34]
65004397:	push   ecx
65004398:	mov    BYTE PTR [ebp-0x4],0xe
6500439c:	call   0x650070c0
650043a1:	mov    BYTE PTR [ebp-0x4],0x2
650043a5:	cmp    DWORD PTR [ebp-0x10],edi
650043a8:	jb     0x650043b6
650043aa:	mov    edx,DWORD PTR [ebp-0x24]
650043ad:	push   edx
650043ae:	call   0x65011f02
650043b3:	add    esp,0x4
650043b6:	push   0x65026c24
650043bb:	push   0x11
650043bd:	push   0x65026c5c
650043c2:	call   0x65006a10
650043c7:	mov    esi,eax
650043c9:	mov    ecx,esi
650043cb:	add    esp,0xc
650043ce:	mov    DWORD PTR [ebp-0x10],0xf
650043d5:	mov    DWORD PTR [ebp-0x14],ebx
650043d8:	mov    BYTE PTR [ebp-0x24],bl
650043db:	lea    edx,[ecx+0x1]
650043de:	mov    edi,edi
650043e0:	mov    al,BYTE PTR [ecx]
650043e2:	add    ecx,0x1
650043e5:	cmp    al,bl
650043e7:	jne    0x650043e0
650043e9:	sub    ecx,edx
650043eb:	push   ecx
650043ec:	push   esi
650043ed:	lea    ecx,[ebp-0x28]
650043f0:	call   0x65001860
650043f5:	lea    eax,[ebp-0x28]
650043f8:	push   eax
650043f9:	lea    ecx,[ebp-0x40]
650043fc:	push   ecx
650043fd:	lea    edx,[ebp-0x34]
65004400:	push   edx
65004401:	mov    BYTE PTR [ebp-0x4],0xf
65004405:	call   0x650070c0
6500440a:	mov    BYTE PTR [ebp-0x4],0x2
6500440e:	cmp    DWORD PTR [ebp-0x10],edi
65004411:	jb     0x6500441f
65004413:	mov    eax,DWORD PTR [ebp-0x24]
65004416:	push   eax
65004417:	call   0x65011f02
6500441c:	add    esp,0x4
6500441f:	push   0x65026c70
65004424:	push   0x7
65004426:	push   0x65026ca0
6500442b:	call   0x65006a10
65004430:	mov    esi,eax
65004432:	mov    ecx,esi
65004434:	add    esp,0xc
65004437:	mov    DWORD PTR [ebp-0x10],0xf
6500443e:	mov    DWORD PTR [ebp-0x14],ebx
65004441:	mov    BYTE PTR [ebp-0x24],bl
65004444:	lea    edx,[ecx+0x1]
65004447:	mov    al,BYTE PTR [ecx]
65004449:	add    ecx,0x1
6500444c:	cmp    al,bl
6500444e:	jne    0x65004447
65004450:	sub    ecx,edx
65004452:	push   ecx
65004453:	push   esi
65004454:	lea    ecx,[ebp-0x28]
65004457:	call   0x65001860
6500445c:	lea    ecx,[ebp-0x28]
6500445f:	push   ecx
65004460:	lea    edx,[ebp-0x40]
65004463:	push   edx
65004464:	lea    eax,[ebp-0x34]
65004467:	push   eax
65004468:	mov    BYTE PTR [ebp-0x4],0x10
6500446c:	call   0x650070c0
65004471:	mov    BYTE PTR [ebp-0x4],0x2
65004475:	cmp    DWORD PTR [ebp-0x10],edi
65004478:	jb     0x65004486
6500447a:	mov    ecx,DWORD PTR [ebp-0x24]
6500447d:	push   ecx
6500447e:	call   0x65011f02
65004483:	add    esp,0x4
65004486:	push   0x65026ca8
6500448b:	push   0x6
6500448d:	push   0x65026ce0
65004492:	call   0x65006a10
65004497:	mov    esi,eax
65004499:	mov    ecx,esi
6500449b:	add    esp,0xc
6500449e:	mov    DWORD PTR [ebp-0x10],0xf
650044a5:	mov    DWORD PTR [ebp-0x14],ebx
650044a8:	mov    BYTE PTR [ebp-0x24],bl
650044ab:	lea    edx,[ecx+0x1]
650044ae:	mov    edi,edi
650044b0:	mov    al,BYTE PTR [ecx]
650044b2:	add    ecx,0x1
650044b5:	cmp    al,bl
650044b7:	jne    0x650044b0
650044b9:	sub    ecx,edx
650044bb:	push   ecx
650044bc:	push   esi
650044bd:	lea    ecx,[ebp-0x28]
650044c0:	call   0x65001860
650044c5:	lea    edx,[ebp-0x28]
650044c8:	push   edx
650044c9:	lea    eax,[ebp-0x40]
650044cc:	push   eax
650044cd:	lea    ecx,[ebp-0x34]
650044d0:	push   ecx
650044d1:	mov    BYTE PTR [ebp-0x4],0x11
650044d5:	call   0x650070c0
650044da:	mov    BYTE PTR [ebp-0x4],0x2
650044de:	cmp    DWORD PTR [ebp-0x10],edi
650044e1:	jb     0x650044ef
650044e3:	mov    edx,DWORD PTR [ebp-0x24]
650044e6:	push   edx
650044e7:	call   0x65011f02
650044ec:	add    esp,0x4
650044ef:	push   0x65026ce8
650044f4:	push   0x3
650044f6:	push   0x65026d1c
650044fb:	call   0x65006a10
65004500:	mov    esi,eax
65004502:	mov    ecx,esi
65004504:	add    esp,0xc
65004507:	mov    DWORD PTR [ebp-0x10],0xf
6500450e:	mov    DWORD PTR [ebp-0x14],ebx
65004511:	mov    BYTE PTR [ebp-0x24],bl
65004514:	lea    edx,[ecx+0x1]
65004517:	mov    al,BYTE PTR [ecx]
65004519:	add    ecx,0x1
6500451c:	cmp    al,bl
6500451e:	jne    0x65004517
65004520:	sub    ecx,edx
65004522:	push   ecx
65004523:	push   esi
65004524:	lea    ecx,[ebp-0x28]
65004527:	call   0x65001860
6500452c:	lea    eax,[ebp-0x28]
6500452f:	push   eax
65004530:	lea    ecx,[ebp-0x40]
65004533:	push   ecx
65004534:	lea    edx,[ebp-0x34]
65004537:	push   edx
65004538:	mov    BYTE PTR [ebp-0x4],0x12
6500453c:	call   0x650070c0
65004541:	mov    BYTE PTR [ebp-0x4],0x2
65004545:	cmp    DWORD PTR [ebp-0x10],edi
65004548:	jb     0x65004556
6500454a:	mov    eax,DWORD PTR [ebp-0x24]
6500454d:	push   eax
6500454e:	call   0x65011f02
65004553:	add    esp,0x4
65004556:	push   0x65026d20
6500455b:	push   0x8
6500455d:	push   0x65026d50
65004562:	call   0x65006a10
65004567:	mov    esi,eax
65004569:	mov    ecx,esi
6500456b:	add    esp,0xc
6500456e:	mov    DWORD PTR [ebp-0x10],0xf
65004575:	mov    DWORD PTR [ebp-0x14],ebx
65004578:	mov    BYTE PTR [ebp-0x24],bl
6500457b:	lea    edx,[ecx+0x1]
6500457e:	mov    edi,edi
65004580:	mov    al,BYTE PTR [ecx]
65004582:	add    ecx,0x1
65004585:	cmp    al,bl
65004587:	jne    0x65004580
65004589:	sub    ecx,edx
6500458b:	push   ecx
6500458c:	push   esi
6500458d:	lea    ecx,[ebp-0x28]
65004590:	call   0x65001860
65004595:	lea    ecx,[ebp-0x28]
65004598:	push   ecx
65004599:	lea    edx,[ebp-0x40]
6500459c:	push   edx
6500459d:	lea    eax,[ebp-0x34]
650045a0:	push   eax
650045a1:	mov    BYTE PTR [ebp-0x4],0x13
650045a5:	call   0x650070c0
650045aa:	mov    BYTE PTR [ebp-0x4],0x2
650045ae:	cmp    DWORD PTR [ebp-0x10],edi
650045b1:	jb     0x650045bf
650045b3:	mov    ecx,DWORD PTR [ebp-0x24]
650045b6:	push   ecx
650045b7:	call   0x65011f02
650045bc:	add    esp,0x4
650045bf:	push   0x65026d5c
650045c4:	push   0xb
650045c6:	push   0x65026d9c
650045cb:	call   0x65006a10
650045d0:	mov    esi,eax
650045d2:	mov    ecx,esi
650045d4:	add    esp,0xc
650045d7:	mov    DWORD PTR [ebp-0x10],0xf
650045de:	mov    DWORD PTR [ebp-0x14],ebx
650045e1:	mov    BYTE PTR [ebp-0x24],bl
650045e4:	lea    edx,[ecx+0x1]
650045e7:	mov    al,BYTE PTR [ecx]
650045e9:	add    ecx,0x1
650045ec:	cmp    al,bl
650045ee:	jne    0x650045e7
650045f0:	sub    ecx,edx
650045f2:	push   ecx
650045f3:	push   esi
650045f4:	lea    ecx,[ebp-0x28]
650045f7:	call   0x65001860
650045fc:	lea    edx,[ebp-0x28]
650045ff:	push   edx
65004600:	lea    eax,[ebp-0x40]
65004603:	push   eax
65004604:	lea    ecx,[ebp-0x34]
65004607:	push   ecx
65004608:	mov    BYTE PTR [ebp-0x4],0x14
6500460c:	call   0x650070c0
65004611:	mov    BYTE PTR [ebp-0x4],0x2
65004615:	cmp    DWORD PTR [ebp-0x10],edi
65004618:	jb     0x65004626
6500461a:	mov    edx,DWORD PTR [ebp-0x24]
6500461d:	push   edx
6500461e:	call   0x65011f02
65004623:	add    esp,0x4
65004626:	push   0x65026da8
6500462b:	push   edi
6500462c:	push   0x65026dd8
65004631:	call   0x65006a10
65004636:	mov    esi,eax
65004638:	mov    ecx,esi
6500463a:	add    esp,0xc
6500463d:	mov    DWORD PTR [ebp-0x10],0xf
65004644:	mov    DWORD PTR [ebp-0x14],ebx
65004647:	mov    BYTE PTR [ebp-0x24],bl
6500464a:	lea    edx,[ecx+0x1]
6500464d:	lea    ecx,[ecx+0x0]
65004650:	mov    al,BYTE PTR [ecx]
65004652:	add    ecx,0x1
65004655:	cmp    al,bl
65004657:	jne    0x65004650
65004659:	sub    ecx,edx
6500465b:	push   ecx
6500465c:	push   esi
6500465d:	lea    ecx,[ebp-0x28]
65004660:	call   0x65001860
65004665:	lea    eax,[ebp-0x28]
65004668:	push   eax
65004669:	lea    ecx,[ebp-0x40]
6500466c:	push   ecx
6500466d:	lea    edx,[ebp-0x34]
65004670:	push   edx
65004671:	mov    BYTE PTR [ebp-0x4],0x15
65004675:	call   0x650070c0
6500467a:	mov    BYTE PTR [ebp-0x4],0x2
6500467e:	cmp    DWORD PTR [ebp-0x10],edi
65004681:	jb     0x6500468f
65004683:	mov    eax,DWORD PTR [ebp-0x24]
65004686:	push   eax
65004687:	call   0x65011f02
6500468c:	add    esp,0x4
6500468f:	push   0x65026dec
65004694:	push   0x5
65004696:	push   0x65026e28
6500469b:	call   0x65006a10
650046a0:	mov    esi,eax
650046a2:	mov    ecx,esi
650046a4:	add    esp,0xc
650046a7:	mov    DWORD PTR [ebp-0x10],0xf
650046ae:	mov    DWORD PTR [ebp-0x14],ebx
650046b1:	mov    BYTE PTR [ebp-0x24],bl
650046b4:	lea    edx,[ecx+0x1]
650046b7:	mov    al,BYTE PTR [ecx]
650046b9:	add    ecx,0x1
650046bc:	cmp    al,bl
650046be:	jne    0x650046b7
650046c0:	sub    ecx,edx
650046c2:	push   ecx
650046c3:	push   esi
650046c4:	lea    ecx,[ebp-0x28]
650046c7:	call   0x65001860
650046cc:	lea    ecx,[ebp-0x28]
650046cf:	push   ecx
650046d0:	lea    edx,[ebp-0x40]
650046d3:	push   edx
650046d4:	lea    eax,[ebp-0x34]
650046d7:	push   eax
650046d8:	mov    BYTE PTR [ebp-0x4],0x16
650046dc:	call   0x650070c0
650046e1:	mov    BYTE PTR [ebp-0x4],0x2
650046e5:	cmp    DWORD PTR [ebp-0x10],edi
650046e8:	jb     0x650046f6
650046ea:	mov    ecx,DWORD PTR [ebp-0x24]
650046ed:	push   ecx
650046ee:	call   0x65011f02
650046f3:	add    esp,0x4
650046f6:	push   0x65026e30
650046fb:	push   0x5
650046fd:	push   0x65026e60
65004702:	call   0x65006a10
65004707:	mov    esi,eax
65004709:	mov    ecx,esi
6500470b:	add    esp,0xc
6500470e:	mov    DWORD PTR [ebp-0x10],0xf
65004715:	mov    DWORD PTR [ebp-0x14],ebx
65004718:	mov    BYTE PTR [ebp-0x24],bl
6500471b:	lea    edx,[ecx+0x1]
6500471e:	mov    edi,edi
65004720:	mov    al,BYTE PTR [ecx]
65004722:	add    ecx,0x1
65004725:	cmp    al,bl
65004727:	jne    0x65004720
65004729:	sub    ecx,edx
6500472b:	push   ecx
6500472c:	push   esi
6500472d:	lea    ecx,[ebp-0x28]
65004730:	call   0x65001860
65004735:	lea    edx,[ebp-0x28]
65004738:	push   edx
65004739:	lea    eax,[ebp-0x40]
6500473c:	push   eax
6500473d:	lea    ecx,[ebp-0x34]
65004740:	push   ecx
65004741:	mov    BYTE PTR [ebp-0x4],0x17
65004745:	call   0x650070c0
6500474a:	mov    BYTE PTR [ebp-0x4],0x2
6500474e:	cmp    DWORD PTR [ebp-0x10],edi
65004751:	jb     0x6500475f
65004753:	mov    edx,DWORD PTR [ebp-0x24]
65004756:	push   edx
65004757:	call   0x65011f02
6500475c:	add    esp,0x4
6500475f:	push   0x65026e68
65004764:	push   0x8
65004766:	push   0x65026e94
6500476b:	call   0x65006a10
65004770:	mov    esi,eax
65004772:	mov    ecx,esi
65004774:	add    esp,0xc
65004777:	mov    DWORD PTR [ebp-0x10],0xf
6500477e:	mov    DWORD PTR [ebp-0x14],ebx
65004781:	mov    BYTE PTR [ebp-0x24],bl
65004784:	lea    edx,[ecx+0x1]
65004787:	mov    al,BYTE PTR [ecx]
65004789:	add    ecx,0x1
6500478c:	cmp    al,bl
6500478e:	jne    0x65004787
65004790:	sub    ecx,edx
65004792:	push   ecx
65004793:	push   esi
65004794:	lea    ecx,[ebp-0x28]
65004797:	call   0x65001860
6500479c:	lea    eax,[ebp-0x28]
6500479f:	push   eax
650047a0:	lea    ecx,[ebp-0x40]
650047a3:	push   ecx
650047a4:	lea    edx,[ebp-0x34]
650047a7:	push   edx
650047a8:	mov    BYTE PTR [ebp-0x4],0x18
650047ac:	call   0x650070c0
650047b1:	mov    BYTE PTR [ebp-0x4],0x2
650047b5:	cmp    DWORD PTR [ebp-0x10],edi
650047b8:	jb     0x650047c6
650047ba:	mov    eax,DWORD PTR [ebp-0x24]
650047bd:	push   eax
650047be:	call   0x65011f02
650047c3:	add    esp,0x4
650047c6:	push   0x65026ea0
650047cb:	push   0x8
650047cd:	push   0x65026ed4
650047d2:	call   0x65006a10
650047d7:	add    esp,0xc
650047da:	push   eax
650047db:	lea    ecx,[ebp-0x28]
650047de:	call   0x650026d0
650047e3:	lea    ecx,[ebp-0x28]
650047e6:	push   ecx
650047e7:	lea    edx,[ebp-0x40]
650047ea:	push   edx
650047eb:	lea    eax,[ebp-0x34]
650047ee:	push   eax
650047ef:	mov    BYTE PTR [ebp-0x4],0x19
650047f3:	call   0x650070c0
650047f8:	mov    BYTE PTR [ebp-0x4],0x2
650047fc:	cmp    DWORD PTR [ebp-0x10],edi
650047ff:	jb     0x6500480d
65004801:	mov    ecx,DWORD PTR [ebp-0x24]
65004804:	push   ecx
65004805:	call   0x65011f02
6500480a:	add    esp,0x4
6500480d:	push   0x65026ee0
65004812:	push   0x4
65004814:	push   0x65026f04
65004819:	call   0x65006a10
6500481e:	add    esp,0xc
65004821:	push   eax
65004822:	lea    ecx,[ebp-0x28]
65004825:	call   0x650026d0
6500482a:	lea    edx,[ebp-0x28]
6500482d:	push   edx
6500482e:	lea    eax,[ebp-0x40]
65004831:	push   eax
65004832:	lea    ecx,[ebp-0x34]
65004835:	push   ecx
65004836:	mov    BYTE PTR [ebp-0x4],0x1a
6500483a:	call   0x650070c0
6500483f:	mov    BYTE PTR [ebp-0x4],0x2
65004843:	cmp    DWORD PTR [ebp-0x10],edi
65004846:	jb     0x65004854
65004848:	mov    edx,DWORD PTR [ebp-0x24]
6500484b:	push   edx
6500484c:	call   0x65011f02
65004851:	add    esp,0x4
65004854:	push   0x65026f0c
65004859:	push   0xc
6500485b:	push   0x65026f40
65004860:	call   0x65006a10
65004865:	add    esp,0xc
65004868:	push   eax
65004869:	lea    ecx,[ebp-0x28]
6500486c:	call   0x650026d0
65004871:	lea    eax,[ebp-0x28]
65004874:	push   eax
65004875:	lea    ecx,[ebp-0x40]
65004878:	push   ecx
65004879:	lea    edx,[ebp-0x34]
6500487c:	push   edx
6500487d:	mov    BYTE PTR [ebp-0x4],0x1b
65004881:	call   0x650070c0
65004886:	mov    BYTE PTR [ebp-0x4],0x2
6500488a:	cmp    DWORD PTR [ebp-0x10],edi
6500488d:	jb     0x6500489b
6500488f:	mov    eax,DWORD PTR [ebp-0x24]
65004892:	push   eax
65004893:	call   0x65011f02
65004898:	add    esp,0x4
6500489b:	push   0x65026f50
650048a0:	push   edi
650048a1:	push   0x65026f84
650048a6:	call   0x65006a10
650048ab:	add    esp,0xc
650048ae:	push   eax
650048af:	lea    ecx,[ebp-0x28]
650048b2:	call   0x650026d0
650048b7:	lea    ecx,[ebp-0x28]
650048ba:	push   ecx
650048bb:	lea    edx,[ebp-0x40]
650048be:	push   edx
650048bf:	lea    eax,[ebp-0x34]
650048c2:	push   eax
650048c3:	mov    BYTE PTR [ebp-0x4],0x1c
650048c7:	call   0x650070c0
650048cc:	mov    BYTE PTR [ebp-0x4],0x2
650048d0:	cmp    DWORD PTR [ebp-0x10],edi
650048d3:	jb     0x650048e1
650048d5:	mov    ecx,DWORD PTR [ebp-0x24]
650048d8:	push   ecx
650048d9:	call   0x65011f02
650048de:	add    esp,0x4
650048e1:	push   0x65026f98
650048e6:	push   0x7
650048e8:	push   0x65026fc4
650048ed:	call   0x65006a10
650048f2:	add    esp,0xc
650048f5:	push   eax
650048f6:	lea    ecx,[ebp-0x28]
650048f9:	call   0x650026d0
650048fe:	lea    edx,[ebp-0x28]
65004901:	push   edx
65004902:	lea    eax,[ebp-0x40]
65004905:	push   eax
65004906:	lea    ecx,[ebp-0x34]
65004909:	push   ecx
6500490a:	mov    BYTE PTR [ebp-0x4],0x1d
6500490e:	call   0x650070c0
65004913:	mov    BYTE PTR [ebp-0x4],0x2
65004917:	cmp    DWORD PTR [ebp-0x10],edi
6500491a:	jb     0x65004928
6500491c:	mov    edx,DWORD PTR [ebp-0x24]
6500491f:	push   edx
65004920:	call   0x65011f02
65004925:	add    esp,0x4
65004928:	push   0x65026fcc
6500492d:	push   0x9
6500492f:	push   0x65027008
65004934:	call   0x65006a10
65004939:	add    esp,0xc
6500493c:	push   eax
6500493d:	lea    ecx,[ebp-0x28]
65004940:	call   0x650026d0
65004945:	lea    eax,[ebp-0x28]
65004948:	push   eax
65004949:	lea    ecx,[ebp-0x40]
6500494c:	push   ecx
6500494d:	lea    edx,[ebp-0x34]
65004950:	push   edx
65004951:	mov    BYTE PTR [ebp-0x4],0x1e
65004955:	call   0x650070c0
6500495a:	mov    BYTE PTR [ebp-0x4],0x2
6500495e:	cmp    DWORD PTR [ebp-0x10],edi
65004961:	jb     0x6500496f
65004963:	mov    eax,DWORD PTR [ebp-0x24]
65004966:	push   eax
65004967:	call   0x65011f02
6500496c:	add    esp,0x4
6500496f:	push   0x65027014
65004974:	push   0x7
65004976:	push   0x65027050
6500497b:	call   0x65006a10
65004980:	add    esp,0xc
65004983:	push   eax
65004984:	lea    ecx,[ebp-0x28]
65004987:	call   0x650026d0
6500498c:	lea    ecx,[ebp-0x28]
6500498f:	push   ecx
65004990:	lea    edx,[ebp-0x40]
65004993:	push   edx
65004994:	lea    eax,[ebp-0x34]
65004997:	push   eax
65004998:	mov    BYTE PTR [ebp-0x4],0x1f
6500499c:	call   0x650070c0
650049a1:	mov    BYTE PTR [ebp-0x4],0x2
650049a5:	cmp    DWORD PTR [ebp-0x10],edi
650049a8:	jb     0x650049b6
650049aa:	mov    ecx,DWORD PTR [ebp-0x24]
650049ad:	push   ecx
650049ae:	call   0x65011f02
650049b3:	add    esp,0x4
650049b6:	push   0x65027058
650049bb:	push   0xb
650049bd:	push   0x65027088
650049c2:	call   0x65006a10
650049c7:	add    esp,0xc
650049ca:	push   eax
650049cb:	lea    ecx,[ebp-0x28]
650049ce:	call   0x650026d0
650049d3:	lea    edx,[ebp-0x28]
650049d6:	push   edx
650049d7:	lea    eax,[ebp-0x40]
650049da:	push   eax
650049db:	lea    ecx,[ebp-0x34]
650049de:	push   ecx
650049df:	mov    BYTE PTR [ebp-0x4],0x20
650049e3:	call   0x650070c0
650049e8:	mov    BYTE PTR [ebp-0x4],0x2
650049ec:	cmp    DWORD PTR [ebp-0x10],edi
650049ef:	jb     0x650049fd
650049f1:	mov    edx,DWORD PTR [ebp-0x24]
650049f4:	push   edx
650049f5:	call   0x65011f02
650049fa:	add    esp,0x4
650049fd:	push   0x65027094
65004a02:	push   0x6
65004a04:	push   0x650270d0
65004a09:	call   0x65006a10
65004a0e:	add    esp,0xc
65004a11:	push   eax
65004a12:	lea    ecx,[ebp-0x28]
65004a15:	call   0x650026d0
65004a1a:	lea    eax,[ebp-0x28]
65004a1d:	push   eax
65004a1e:	lea    ecx,[ebp-0x40]
65004a21:	push   ecx
65004a22:	lea    edx,[ebp-0x34]
65004a25:	push   edx
65004a26:	mov    BYTE PTR [ebp-0x4],0x21
65004a2a:	call   0x650070c0
65004a2f:	mov    BYTE PTR [ebp-0x4],0x2
65004a33:	cmp    DWORD PTR [ebp-0x10],edi
65004a36:	jb     0x65004a44
65004a38:	mov    eax,DWORD PTR [ebp-0x24]
65004a3b:	push   eax
65004a3c:	call   0x65011f02
65004a41:	add    esp,0x4
65004a44:	push   0x650270d8
65004a49:	push   0x6
65004a4b:	push   0x65027114
65004a50:	call   0x65006a10
65004a55:	add    esp,0xc
65004a58:	push   eax
65004a59:	lea    ecx,[ebp-0x28]
65004a5c:	call   0x650026d0
65004a61:	lea    ecx,[ebp-0x28]
65004a64:	push   ecx
65004a65:	lea    edx,[ebp-0x40]
65004a68:	push   edx
65004a69:	lea    eax,[ebp-0x34]
65004a6c:	push   eax
65004a6d:	mov    BYTE PTR [ebp-0x4],0x22
65004a71:	call   0x650070c0
65004a76:	mov    BYTE PTR [ebp-0x4],0x2
65004a7a:	cmp    DWORD PTR [ebp-0x10],edi
65004a7d:	jb     0x65004a8b
65004a7f:	mov    ecx,DWORD PTR [ebp-0x24]
65004a82:	push   ecx
65004a83:	call   0x65011f02
65004a88:	add    esp,0x4
65004a8b:	push   0x6502711c
65004a90:	push   0x7
65004a92:	push   0x65027154
65004a97:	call   0x65006a10
65004a9c:	add    esp,0xc
65004a9f:	push   eax
65004aa0:	lea    ecx,[ebp-0x28]
65004aa3:	call   0x650026d0
65004aa8:	lea    edx,[ebp-0x28]
65004aab:	push   edx
65004aac:	lea    eax,[ebp-0x40]
65004aaf:	push   eax
65004ab0:	lea    ecx,[ebp-0x34]
65004ab3:	push   ecx
65004ab4:	mov    BYTE PTR [ebp-0x4],0x23
65004ab8:	call   0x650070c0
65004abd:	mov    BYTE PTR [ebp-0x4],0x2
65004ac1:	cmp    DWORD PTR [ebp-0x10],edi
65004ac4:	jb     0x65004ad2
65004ac6:	mov    edx,DWORD PTR [ebp-0x24]
65004ac9:	push   edx
65004aca:	call   0x65011f02
65004acf:	add    esp,0x4
65004ad2:	push   0x6502715c
65004ad7:	push   0x9
65004ad9:	push   0x65027190
65004ade:	call   0x65006a10
65004ae3:	add    esp,0xc
65004ae6:	push   eax
65004ae7:	lea    ecx,[ebp-0x28]
65004aea:	call   0x650026d0
65004aef:	lea    eax,[ebp-0x28]
65004af2:	push   eax
65004af3:	lea    ecx,[ebp-0x40]
65004af6:	push   ecx
65004af7:	lea    edx,[ebp-0x34]
65004afa:	push   edx
65004afb:	mov    BYTE PTR [ebp-0x4],0x24
65004aff:	call   0x650070c0
65004b04:	mov    BYTE PTR [ebp-0x4],0x2
65004b08:	cmp    DWORD PTR [ebp-0x10],edi
65004b0b:	jb     0x65004b19
65004b0d:	mov    eax,DWORD PTR [ebp-0x24]
65004b10:	push   eax
65004b11:	call   0x65011f02
65004b16:	add    esp,0x4
65004b19:	push   0x6502719c
65004b1e:	push   0x7
65004b20:	push   0x650271d4
65004b25:	call   0x65006a10
65004b2a:	add    esp,0xc
65004b2d:	push   eax
65004b2e:	lea    ecx,[ebp-0x28]
65004b31:	call   0x650026d0
65004b36:	lea    ecx,[ebp-0x28]
65004b39:	push   ecx
65004b3a:	lea    edx,[ebp-0x40]
65004b3d:	push   edx
65004b3e:	lea    eax,[ebp-0x34]
65004b41:	push   eax
65004b42:	mov    BYTE PTR [ebp-0x4],0x25
65004b46:	call   0x650070c0
65004b4b:	mov    BYTE PTR [ebp-0x4],0x2
65004b4f:	cmp    DWORD PTR [ebp-0x10],edi
65004b52:	jb     0x65004b60
65004b54:	mov    ecx,DWORD PTR [ebp-0x24]
65004b57:	push   ecx
65004b58:	call   0x65011f02
65004b5d:	add    esp,0x4
65004b60:	push   0x650271dc
65004b65:	push   0x6
65004b67:	push   0x6502721c
65004b6c:	call   0x65006a10
65004b71:	add    esp,0xc
65004b74:	push   eax
65004b75:	lea    ecx,[ebp-0x28]
65004b78:	call   0x650026d0
65004b7d:	lea    edx,[ebp-0x28]
65004b80:	push   edx
65004b81:	lea    eax,[ebp-0x40]
65004b84:	push   eax
65004b85:	lea    ecx,[ebp-0x34]
65004b88:	push   ecx
65004b89:	mov    BYTE PTR [ebp-0x4],0x26
65004b8d:	call   0x650070c0
65004b92:	mov    BYTE PTR [ebp-0x4],0x2
65004b96:	cmp    DWORD PTR [ebp-0x10],edi
65004b99:	jb     0x65004ba7
65004b9b:	mov    edx,DWORD PTR [ebp-0x24]
65004b9e:	push   edx
65004b9f:	call   0x65011f02
65004ba4:	add    esp,0x4
65004ba7:	push   0x65027224
65004bac:	push   0x8
65004bae:	push   0x65027248
65004bb3:	call   0x65006a10
65004bb8:	add    esp,0xc
65004bbb:	push   eax
65004bbc:	lea    ecx,[ebp-0x28]
65004bbf:	call   0x650026d0
65004bc4:	lea    eax,[ebp-0x28]
65004bc7:	push   eax
65004bc8:	lea    ecx,[ebp-0x40]
65004bcb:	push   ecx
65004bcc:	lea    edx,[ebp-0x34]
65004bcf:	push   edx
65004bd0:	mov    BYTE PTR [ebp-0x4],0x27
65004bd4:	call   0x650070c0
65004bd9:	mov    BYTE PTR [ebp-0x4],0x2
65004bdd:	cmp    DWORD PTR [ebp-0x10],edi
65004be0:	jb     0x65004bee
65004be2:	mov    eax,DWORD PTR [ebp-0x24]
65004be5:	push   eax
65004be6:	call   0x65011f02
65004beb:	add    esp,0x4
65004bee:	push   0x65027254
65004bf3:	push   0x6
65004bf5:	push   0x65027278
65004bfa:	call   0x65006a10
65004bff:	add    esp,0xc
65004c02:	push   eax
65004c03:	lea    ecx,[ebp-0x28]
65004c06:	call   0x650026d0
65004c0b:	lea    ecx,[ebp-0x28]
65004c0e:	push   ecx
65004c0f:	lea    edx,[ebp-0x40]
65004c12:	push   edx
65004c13:	lea    eax,[ebp-0x34]
65004c16:	push   eax
65004c17:	mov    BYTE PTR [ebp-0x4],0x28
65004c1b:	call   0x650070c0
65004c20:	mov    BYTE PTR [ebp-0x4],0x2
65004c24:	cmp    DWORD PTR [ebp-0x10],edi
65004c27:	jb     0x65004c35
65004c29:	mov    ecx,DWORD PTR [ebp-0x24]
65004c2c:	push   ecx
65004c2d:	call   0x65011f02
65004c32:	add    esp,0x4
65004c35:	lea    edx,[ebp-0x40]
65004c38:	push   edx
65004c39:	lea    ecx,[ebp-0x34]
65004c3c:	call   0x65003bb0
65004c41:	add    esp,0x4
65004c44:	mov    ecx,0x650303f0
65004c49:	mov    BYTE PTR [ebp-0x4],0x29
65004c4d:	call   0x65007080
65004c52:	lea    eax,[ebp-0x40]
65004c55:	mov    BYTE PTR [ebp-0x4],0x2
65004c59:	call   0x65007aa0
65004c5e:	lea    eax,[ebp-0x34]
65004c61:	mov    BYTE PTR [ebp-0x4],bl
65004c64:	call   0x65007aa0
65004c69:	call   DWORD PTR ds:0x6502c06c
65004c6f:	mov    edi,DWORD PTR [ebp+0x40c]
65004c75:	cmp    DWORD PTR [edi-0x4],0x1
65004c79:	mov    DWORD PTR [ebp-0x48],eax
65004c7c:	jle    0x65004c93
65004c7e:	mov    eax,DWORD PTR [edi-0xc]
65004c81:	push   eax
65004c82:	lea    ecx,[ebp+0x40c]
65004c88:	call   0x65001950
65004c8d:	mov    edi,DWORD PTR [ebp+0x40c]
65004c93:	cmp    edi,ebx
65004c95:	jne    0x65004c9b
65004c97:	xor    eax,eax
65004c99:	jmp    0x65004cc8
65004c9b:	push   edi
65004c9c:	call   DWORD PTR ds:0x65024050
65004ca2:	add    eax,0x1
65004ca5:	cmp    eax,0x3fffffff
65004caa:	jle    0x65004cb0
65004cac:	xor    eax,eax
65004cae:	jmp    0x65004cc8
65004cb0:	lea    esi,[eax+eax*1]
65004cb3:	mov    eax,esi
65004cb5:	call   0x65012e60
65004cba:	mov    ecx,DWORD PTR [ebp-0x48]
65004cbd:	mov    eax,esp
65004cbf:	push   ecx
65004cc0:	push   esi
65004cc1:	push   edi
65004cc2:	push   eax
65004cc3:	call   0x65002b40
65004cc8:	lea    edx,[ebp+0x0]
65004ccb:	jmp    0x65004cd0
65004ccd:	lea    ecx,[ecx+0x0]
65004cd0:	mov    cl,BYTE PTR [eax]
65004cd2:	mov    BYTE PTR [edx],cl
65004cd4:	add    eax,0x1
65004cd7:	add    edx,0x1
65004cda:	cmp    cl,bl
65004cdc:	jne    0x65004cd0
65004cde:	lea    edx,[ebp+0x0]
65004ce1:	push   edx
65004ce2:	call   0x6501eb05
65004ce7:	add    esp,0x4
65004cea:	lea    eax,[ebp+0x0]
65004ced:	push   eax
65004cee:	lea    ecx,[ebp-0x28]
65004cf1:	call   0x650026d0
65004cf6:	lea    eax,[ebp-0x28]
65004cf9:	mov    esi,0x650303f0
65004cfe:	mov    BYTE PTR [ebp-0x4],0x2a
65004d02:	call   0x65007250
65004d07:	test   eax,eax
65004d09:	setne  BYTE PTR [ebp-0x41]
65004d0d:	cmp    DWORD PTR [ebp-0x10],0x10
65004d11:	jb     0x65004d1f
65004d13:	mov    ecx,DWORD PTR [ebp-0x24]
65004d16:	push   ecx
65004d17:	call   0x65011f02
65004d1c:	add    esp,0x4
65004d1f:	lea    eax,[edi-0x10]
65004d22:	mov    DWORD PTR [ebp-0x10],0xf
65004d29:	mov    DWORD PTR [ebp-0x14],ebx
65004d2c:	mov    BYTE PTR [ebp-0x24],bl
65004d2f:	mov    DWORD PTR [ebp-0x4],0xffffffff
65004d36:	lea    edx,[eax+0xc]
65004d39:	or     ecx,0xffffffff
65004d3c:	lock xadd DWORD PTR [edx],ecx
65004d40:	dec    ecx
65004d41:	test   ecx,ecx
65004d43:	jg     0x65004d4f
65004d45:	mov    ecx,DWORD PTR [eax]
65004d47:	mov    edx,DWORD PTR [ecx]
65004d49:	push   eax
65004d4a:	mov    eax,DWORD PTR [edx+0x4]
65004d4d:	call   eax
65004d4f:	mov    al,BYTE PTR [ebp-0x41]
65004d52:	lea    esp,[ebp-0x58]
65004d55:	mov    ecx,DWORD PTR [ebp-0xc]
65004d58:	mov    DWORD PTR fs:0x0,ecx
65004d5f:	pop    ecx
65004d60:	pop    edi
65004d61:	pop    esi
65004d62:	pop    ebx
65004d63:	mov    ecx,DWORD PTR [ebp+0x400]
65004d69:	xor    ecx,ebp
65004d6b:	call   0x6501275c
65004d70:	add    ebp,0x404
65004d76:	mov    esp,ebp
65004d78:	pop    ebp
65004d79:	ret    
65004d7a:	int3   
65004d7b:	int3   
65004d7c:	int3   
65004d7d:	int3   
65004d7e:	int3   
65004d7f:	int3   
65004d80:	push   ebp
65004d81:	lea    ebp,[esp-0x404]
65004d88:	sub    esp,0x404
65004d8e:	push   0xffffffff
65004d90:	push   0x65022ff9
65004d95:	mov    eax,fs:0x0
65004d9b:	push   eax
65004d9c:	sub    esp,0x3c
65004d9f:	mov    eax,ds:0x6502c09c
65004da4:	xor    eax,ebp
65004da6:	mov    DWORD PTR [ebp+0x400],eax
65004dac:	push   ebx
65004dad:	push   esi
65004dae:	push   edi
65004daf:	push   eax
65004db0:	lea    eax,[ebp-0xc]
65004db3:	mov    fs:0x0,eax
65004db9:	xor    ebx,ebx
65004dbb:	mov    DWORD PTR [ebp-0x4],ebx
65004dbe:	test   BYTE PTR ds:0x650303ec,0x1
65004dc5:	jne    0x65004e0d
65004dc7:	or     DWORD PTR ds:0x650303ec,0x1
65004dce:	mov    BYTE PTR [ebp-0x4],0x1
65004dd2:	call   0x650083d0
65004dd7:	mov    ds:0x650303e4,eax
65004ddc:	mov    BYTE PTR [eax+0x29],0x1
65004de0:	mov    eax,ds:0x650303e4
65004de5:	mov    DWORD PTR [eax+0x4],eax
65004de8:	mov    eax,ds:0x650303e4
65004ded:	mov    DWORD PTR [eax],eax
65004def:	mov    eax,ds:0x650303e4
65004df4:	mov    DWORD PTR [eax+0x8],eax
65004df7:	push   0x650233d0
65004dfc:	mov    DWORD PTR ds:0x650303e8,ebx
65004e02:	call   0x6501288f
65004e07:	add    esp,0x4
65004e0a:	mov    BYTE PTR [ebp-0x4],bl
65004e0d:	cmp    DWORD PTR ds:0x650303e8,ebx
65004e13:	mov    edi,0x10
65004e18:	jne    0x6500617a
65004e1e:	call   0x650083d0
65004e23:	mov    DWORD PTR [ebp-0x30],eax
65004e26:	mov    BYTE PTR [eax+0x29],0x1
65004e2a:	mov    eax,DWORD PTR [ebp-0x30]
65004e2d:	mov    DWORD PTR [eax+0x4],eax
65004e30:	mov    eax,DWORD PTR [ebp-0x30]
65004e33:	mov    DWORD PTR [eax],eax
65004e35:	mov    eax,DWORD PTR [ebp-0x30]
65004e38:	mov    DWORD PTR [eax+0x8],eax
65004e3b:	mov    DWORD PTR [ebp-0x2c],ebx
65004e3e:	push   0x65027280
65004e43:	push   0xd
65004e45:	push   0x650272b8
65004e4a:	mov    BYTE PTR [ebp-0x4],0x2
65004e4e:	call   0x65006a10
65004e53:	mov    ecx,eax
65004e55:	add    esp,0xc
65004e58:	mov    DWORD PTR [ebp-0x10],0xf
65004e5f:	mov    DWORD PTR [ebp-0x14],ebx
65004e62:	mov    BYTE PTR [ebp-0x24],bl
65004e65:	lea    esi,[ecx+0x1]
65004e68:	mov    dl,BYTE PTR [ecx]
65004e6a:	add    ecx,0x1
65004e6d:	cmp    dl,bl
65004e6f:	jne    0x65004e68
65004e71:	sub    ecx,esi
65004e73:	push   ecx
65004e74:	push   eax
65004e75:	lea    ecx,[ebp-0x28]
65004e78:	call   0x65001860
65004e7d:	lea    eax,[ebp-0x28]
65004e80:	push   eax
65004e81:	lea    ecx,[ebp-0x40]
65004e84:	push   ecx
65004e85:	lea    edx,[ebp-0x34]
65004e88:	push   edx
65004e89:	mov    BYTE PTR [ebp-0x4],0x3
65004e8d:	call   0x650070c0
65004e92:	mov    BYTE PTR [ebp-0x4],0x2
65004e96:	cmp    DWORD PTR [ebp-0x10],0x10
65004e9a:	jb     0x65004ea8
65004e9c:	mov    eax,DWORD PTR [ebp-0x24]
65004e9f:	push   eax
65004ea0:	call   0x65011f02
65004ea5:	add    esp,0x4
65004ea8:	push   0x650272c8
65004ead:	push   0x5
65004eaf:	push   0x650272ec
65004eb4:	call   0x65006a10
65004eb9:	mov    ecx,eax
65004ebb:	add    esp,0xc
65004ebe:	mov    DWORD PTR [ebp-0x10],0xf
65004ec5:	mov    DWORD PTR [ebp-0x14],ebx
65004ec8:	mov    BYTE PTR [ebp-0x24],bl
65004ecb:	lea    esi,[ecx+0x1]
65004ece:	mov    edi,edi
65004ed0:	mov    dl,BYTE PTR [ecx]
65004ed2:	add    ecx,0x1
65004ed5:	cmp    dl,bl
65004ed7:	jne    0x65004ed0
65004ed9:	sub    ecx,esi
65004edb:	push   ecx
65004edc:	push   eax
65004edd:	lea    ecx,[ebp-0x28]
65004ee0:	call   0x65001860
65004ee5:	lea    ecx,[ebp-0x28]
65004ee8:	push   ecx
65004ee9:	lea    edx,[ebp-0x40]
65004eec:	push   edx
65004eed:	lea    eax,[ebp-0x34]
65004ef0:	push   eax
65004ef1:	mov    BYTE PTR [ebp-0x4],0x4
65004ef5:	call   0x650070c0
65004efa:	mov    BYTE PTR [ebp-0x4],0x2
65004efe:	cmp    DWORD PTR [ebp-0x10],0x10
65004f02:	jb     0x65004f10
65004f04:	mov    ecx,DWORD PTR [ebp-0x24]
65004f07:	push   ecx
65004f08:	call   0x65011f02
65004f0d:	add    esp,0x4
65004f10:	push   0x650272f4
65004f15:	push   0x5
65004f17:	push   0x65027320
65004f1c:	call   0x65006a10
65004f21:	mov    ecx,eax
65004f23:	add    esp,0xc
65004f26:	mov    DWORD PTR [ebp-0x10],0xf
65004f2d:	mov    DWORD PTR [ebp-0x14],ebx
65004f30:	mov    BYTE PTR [ebp-0x24],bl
65004f33:	lea    esi,[ecx+0x1]
65004f36:	mov    dl,BYTE PTR [ecx]
65004f38:	add    ecx,0x1
65004f3b:	cmp    dl,bl
65004f3d:	jne    0x65004f36
65004f3f:	sub    ecx,esi
65004f41:	push   ecx
65004f42:	push   eax
65004f43:	lea    ecx,[ebp-0x28]
65004f46:	call   0x65001860
65004f4b:	lea    edx,[ebp-0x28]
65004f4e:	push   edx
65004f4f:	lea    eax,[ebp-0x40]
65004f52:	push   eax
65004f53:	lea    ecx,[ebp-0x34]
65004f56:	push   ecx
65004f57:	mov    BYTE PTR [ebp-0x4],0x5
65004f5b:	call   0x650070c0
65004f60:	mov    BYTE PTR [ebp-0x4],0x2
65004f64:	cmp    DWORD PTR [ebp-0x10],0x10
65004f68:	jb     0x65004f76
65004f6a:	mov    edx,DWORD PTR [ebp-0x24]
65004f6d:	push   edx
65004f6e:	call   0x65011f02
65004f73:	add    esp,0x4
65004f76:	push   0x65027328
65004f7b:	push   0x11
65004f7d:	push   0x6502735c
65004f82:	call   0x65006a10
65004f87:	mov    ecx,eax
65004f89:	add    esp,0xc
65004f8c:	mov    DWORD PTR [ebp-0x10],0xf
65004f93:	mov    DWORD PTR [ebp-0x14],ebx
65004f96:	mov    BYTE PTR [ebp-0x24],bl
65004f99:	lea    esi,[ecx+0x1]
65004f9c:	lea    esp,[esp+0x0]
65004fa0:	mov    dl,BYTE PTR [ecx]
65004fa2:	add    ecx,0x1
65004fa5:	cmp    dl,bl
65004fa7:	jne    0x65004fa0
65004fa9:	sub    ecx,esi
65004fab:	push   ecx
65004fac:	push   eax
65004fad:	lea    ecx,[ebp-0x28]
65004fb0:	call   0x65001860
65004fb5:	lea    eax,[ebp-0x28]
65004fb8:	push   eax
65004fb9:	lea    ecx,[ebp-0x40]
65004fbc:	push   ecx
65004fbd:	lea    edx,[ebp-0x34]
65004fc0:	push   edx
65004fc1:	mov    BYTE PTR [ebp-0x4],0x6
65004fc5:	call   0x650070c0
65004fca:	mov    BYTE PTR [ebp-0x4],0x2
65004fce:	cmp    DWORD PTR [ebp-0x10],0x10
65004fd2:	jb     0x65004fe0
65004fd4:	mov    eax,DWORD PTR [ebp-0x24]
65004fd7:	push   eax
65004fd8:	call   0x65011f02
65004fdd:	add    esp,0x4
65004fe0:	push   0x65027370
65004fe5:	push   0x6
65004fe7:	push   0x650273a8
65004fec:	call   0x65006a10
65004ff1:	mov    ecx,eax
65004ff3:	add    esp,0xc
65004ff6:	mov    DWORD PTR [ebp-0x10],0xf
65004ffd:	mov    DWORD PTR [ebp-0x14],ebx
65005000:	mov    BYTE PTR [ebp-0x24],bl
65005003:	lea    esi,[ecx+0x1]
65005006:	mov    dl,BYTE PTR [ecx]
65005008:	add    ecx,0x1
6500500b:	cmp    dl,bl
6500500d:	jne    0x65005006
6500500f:	sub    ecx,esi
65005011:	push   ecx
65005012:	push   eax
65005013:	lea    ecx,[ebp-0x28]
65005016:	call   0x65001860
6500501b:	lea    ecx,[ebp-0x28]
6500501e:	push   ecx
6500501f:	lea    edx,[ebp-0x40]
65005022:	push   edx
65005023:	lea    eax,[ebp-0x34]
65005026:	push   eax
65005027:	mov    BYTE PTR [ebp-0x4],0x7
6500502b:	call   0x650070c0
65005030:	mov    BYTE PTR [ebp-0x4],0x2
65005034:	cmp    DWORD PTR [ebp-0x10],0x10
65005038:	jb     0x65005046
6500503a:	mov    ecx,DWORD PTR [ebp-0x24]
6500503d:	push   ecx
6500503e:	call   0x65011f02
65005043:	add    esp,0x4
65005046:	push   0x650273b0
6500504b:	push   0x5
6500504d:	push   0x650273e0
65005052:	call   0x65006a10
65005057:	mov    ecx,eax
65005059:	add    esp,0xc
6500505c:	mov    DWORD PTR [ebp-0x10],0xf
65005063:	mov    DWORD PTR [ebp-0x14],ebx
65005066:	mov    BYTE PTR [ebp-0x24],bl
65005069:	lea    esi,[ecx+0x1]
6500506c:	lea    esp,[esp+0x0]
65005070:	mov    dl,BYTE PTR [ecx]
65005072:	add    ecx,0x1
65005075:	cmp    dl,bl
65005077:	jne    0x65005070
65005079:	sub    ecx,esi
6500507b:	push   ecx
6500507c:	push   eax
6500507d:	lea    ecx,[ebp-0x28]
65005080:	call   0x65001860
65005085:	lea    edx,[ebp-0x28]
65005088:	push   edx
65005089:	lea    eax,[ebp-0x40]
6500508c:	push   eax
6500508d:	lea    ecx,[ebp-0x34]
65005090:	push   ecx
65005091:	mov    BYTE PTR [ebp-0x4],0x8
65005095:	call   0x650070c0
6500509a:	mov    BYTE PTR [ebp-0x4],0x2
6500509e:	cmp    DWORD PTR [ebp-0x10],0x10
650050a2:	jb     0x650050b0
650050a4:	mov    edx,DWORD PTR [ebp-0x24]
650050a7:	push   edx
650050a8:	call   0x65011f02
650050ad:	add    esp,0x4
650050b0:	push   0x650273e8
650050b5:	push   0x8
650050b7:	push   0x65027414
650050bc:	call   0x65006a10
650050c1:	mov    esi,eax
650050c3:	mov    edi,0xf
650050c8:	mov    ecx,esi
650050ca:	add    esp,0xc
650050cd:	mov    DWORD PTR [ebp-0x10],edi
650050d0:	mov    DWORD PTR [ebp-0x14],ebx
650050d3:	mov    BYTE PTR [ebp-0x24],bl
650050d6:	lea    edx,[ecx+0x1]
650050d9:	lea    esp,[esp+0x0]
650050e0:	mov    al,BYTE PTR [ecx]
650050e2:	add    ecx,0x1
650050e5:	cmp    al,bl
650050e7:	jne    0x650050e0
650050e9:	sub    ecx,edx
650050eb:	push   ecx
650050ec:	push   esi
650050ed:	lea    ecx,[ebp-0x28]
650050f0:	call   0x65001860
650050f5:	lea    eax,[ebp-0x28]
650050f8:	push   eax
650050f9:	lea    ecx,[ebp-0x40]
650050fc:	push   ecx
650050fd:	lea    edx,[ebp-0x34]
65005100:	push   edx
65005101:	mov    BYTE PTR [ebp-0x4],0x9
65005105:	call   0x650070c0
6500510a:	mov    BYTE PTR [ebp-0x4],0x2
6500510e:	cmp    DWORD PTR [ebp-0x10],0x10
65005112:	jb     0x65005120
65005114:	mov    eax,DWORD PTR [ebp-0x24]
65005117:	push   eax
65005118:	call   0x65011f02
6500511d:	add    esp,0x4
65005120:	push   0x65027420
65005125:	push   0x7
65005127:	push   0x6502744c
6500512c:	call   0x65006a10
65005131:	mov    ecx,eax
65005133:	add    esp,0xc
65005136:	mov    DWORD PTR [ebp-0x10],edi
65005139:	mov    DWORD PTR [ebp-0x14],ebx
6500513c:	mov    BYTE PTR [ebp-0x24],bl
6500513f:	lea    esi,[ecx+0x1]
65005142:	mov    dl,BYTE PTR [ecx]
65005144:	add    ecx,0x1
65005147:	cmp    dl,bl
65005149:	jne    0x65005142
6500514b:	sub    ecx,esi
6500514d:	push   ecx
6500514e:	push   eax
6500514f:	lea    ecx,[ebp-0x28]
65005152:	call   0x65001860
65005157:	lea    ecx,[ebp-0x28]
6500515a:	push   ecx
6500515b:	lea    edx,[ebp-0x40]
6500515e:	push   edx
6500515f:	lea    eax,[ebp-0x34]
65005162:	push   eax
65005163:	mov    BYTE PTR [ebp-0x4],0xa
65005167:	call   0x650070c0
6500516c:	mov    BYTE PTR [ebp-0x4],0x2
65005170:	cmp    DWORD PTR [ebp-0x10],0x10
65005174:	jb     0x65005182
65005176:	mov    ecx,DWORD PTR [ebp-0x24]
65005179:	push   ecx
6500517a:	call   0x65011f02
6500517f:	add    esp,0x4
65005182:	push   0x65027454
65005187:	push   0x5
65005189:	push   0x65027494
6500518e:	call   0x65006a10
65005193:	mov    ecx,eax
65005195:	add    esp,0xc
65005198:	mov    DWORD PTR [ebp-0x10],0xf
6500519f:	mov    DWORD PTR [ebp-0x14],ebx
650051a2:	mov    BYTE PTR [ebp-0x24],bl
650051a5:	lea    esi,[ecx+0x1]
650051a8:	mov    dl,BYTE PTR [ecx]
650051aa:	add    ecx,0x1
650051ad:	cmp    dl,bl
650051af:	jne    0x650051a8
650051b1:	sub    ecx,esi
650051b3:	push   ecx
650051b4:	push   eax
650051b5:	lea    ecx,[ebp-0x28]
650051b8:	call   0x65001860
650051bd:	lea    edx,[ebp-0x28]
650051c0:	push   edx
650051c1:	lea    eax,[ebp-0x40]
650051c4:	push   eax
650051c5:	lea    ecx,[ebp-0x34]
650051c8:	push   ecx
650051c9:	mov    BYTE PTR [ebp-0x4],0xb
650051cd:	call   0x650070c0
650051d2:	mov    BYTE PTR [ebp-0x4],0x2
650051d6:	cmp    DWORD PTR [ebp-0x10],0x10
650051da:	jb     0x650051e8
650051dc:	mov    edx,DWORD PTR [ebp-0x24]
650051df:	push   edx
650051e0:	call   0x65011f02
650051e5:	add    esp,0x4
650051e8:	push   0x6502749c
650051ed:	push   0x5
650051ef:	push   0x650274c8
650051f4:	call   0x65006a10
650051f9:	mov    ecx,eax
650051fb:	add    esp,0xc
650051fe:	mov    DWORD PTR [ebp-0x10],0xf
65005205:	mov    DWORD PTR [ebp-0x14],ebx
65005208:	mov    BYTE PTR [ebp-0x24],bl
6500520b:	lea    esi,[ecx+0x1]
6500520e:	mov    edi,edi
65005210:	mov    dl,BYTE PTR [ecx]
65005212:	add    ecx,0x1
65005215:	cmp    dl,bl
65005217:	jne    0x65005210
65005219:	sub    ecx,esi
6500521b:	push   ecx
6500521c:	push   eax
6500521d:	lea    ecx,[ebp-0x28]
65005220:	call   0x65001860
65005225:	lea    eax,[ebp-0x28]
65005228:	push   eax
65005229:	lea    ecx,[ebp-0x40]
6500522c:	push   ecx
6500522d:	lea    edx,[ebp-0x34]
65005230:	push   edx
65005231:	mov    BYTE PTR [ebp-0x4],0xc
65005235:	call   0x650070c0
6500523a:	mov    BYTE PTR [ebp-0x4],0x2
6500523e:	cmp    DWORD PTR [ebp-0x10],0x10
65005242:	jb     0x65005250
65005244:	mov    eax,DWORD PTR [ebp-0x24]
65005247:	push   eax
65005248:	call   0x65011f02
6500524d:	add    esp,0x4
65005250:	push   0x650274d0
65005255:	push   0xe
65005257:	push   0x65027500
6500525c:	call   0x65006a10
65005261:	mov    ecx,eax
65005263:	add    esp,0xc
65005266:	mov    DWORD PTR [ebp-0x10],0xf
6500526d:	mov    DWORD PTR [ebp-0x14],ebx
65005270:	mov    BYTE PTR [ebp-0x24],bl
65005273:	lea    esi,[ecx+0x1]
65005276:	mov    dl,BYTE PTR [ecx]
65005278:	add    ecx,0x1
6500527b:	cmp    dl,bl
6500527d:	jne    0x65005276
6500527f:	sub    ecx,esi
65005281:	push   ecx
65005282:	push   eax
65005283:	lea    ecx,[ebp-0x28]
65005286:	call   0x65001860
6500528b:	lea    ecx,[ebp-0x28]
6500528e:	push   ecx
6500528f:	lea    edx,[ebp-0x40]
65005292:	push   edx
65005293:	lea    eax,[ebp-0x34]
65005296:	push   eax
65005297:	mov    BYTE PTR [ebp-0x4],0xd
6500529b:	call   0x650070c0
650052a0:	mov    BYTE PTR [ebp-0x4],0x2
650052a4:	cmp    DWORD PTR [ebp-0x10],0x10
650052a8:	jb     0x650052b6
650052aa:	mov    ecx,DWORD PTR [ebp-0x24]
650052ad:	push   ecx
650052ae:	call   0x65011f02
650052b3:	add    esp,0x4
650052b6:	push   0x65027510
650052bb:	push   0x6
650052bd:	push   0x65027538
650052c2:	call   0x65006a10
650052c7:	mov    ecx,eax
650052c9:	add    esp,0xc
650052cc:	mov    DWORD PTR [ebp-0x10],0xf
650052d3:	mov    DWORD PTR [ebp-0x14],ebx
650052d6:	mov    BYTE PTR [ebp-0x24],bl
650052d9:	lea    esi,[ecx+0x1]
650052dc:	lea    esp,[esp+0x0]
650052e0:	mov    dl,BYTE PTR [ecx]
650052e2:	add    ecx,0x1
650052e5:	cmp    dl,bl
650052e7:	jne    0x650052e0
650052e9:	sub    ecx,esi
650052eb:	push   ecx
650052ec:	push   eax
650052ed:	lea    ecx,[ebp-0x28]
650052f0:	call   0x65001860
650052f5:	lea    edx,[ebp-0x28]
650052f8:	push   edx
650052f9:	lea    eax,[ebp-0x40]
650052fc:	push   eax
650052fd:	lea    ecx,[ebp-0x34]
65005300:	push   ecx
65005301:	mov    BYTE PTR [ebp-0x4],0xe
65005305:	call   0x650070c0
6500530a:	mov    BYTE PTR [ebp-0x4],0x2
6500530e:	cmp    DWORD PTR [ebp-0x10],0x10
65005312:	jb     0x65005320
65005314:	mov    edx,DWORD PTR [ebp-0x24]
65005317:	push   edx
65005318:	call   0x65011f02
6500531d:	add    esp,0x4
65005320:	push   0x65027540
65005325:	push   0x3
65005327:	push   0x65027578
6500532c:	call   0x65006a10
65005331:	mov    ecx,eax
65005333:	add    esp,0xc
65005336:	mov    DWORD PTR [ebp-0x10],0xf
6500533d:	mov    DWORD PTR [ebp-0x14],ebx
65005340:	mov    BYTE PTR [ebp-0x24],bl
65005343:	lea    esi,[ecx+0x1]
65005346:	mov    dl,BYTE PTR [ecx]
65005348:	add    ecx,0x1
6500534b:	cmp    dl,bl
6500534d:	jne    0x65005346
6500534f:	sub    ecx,esi
65005351:	push   ecx
65005352:	push   eax
65005353:	lea    ecx,[ebp-0x28]
65005356:	call   0x65001860
6500535b:	lea    eax,[ebp-0x28]
6500535e:	push   eax
6500535f:	lea    ecx,[ebp-0x40]
65005362:	push   ecx
65005363:	lea    edx,[ebp-0x34]
65005366:	push   edx
65005367:	mov    BYTE PTR [ebp-0x4],0xf
6500536b:	call   0x650070c0
65005370:	mov    BYTE PTR [ebp-0x4],0x2
65005374:	cmp    DWORD PTR [ebp-0x10],0x10
65005378:	jb     0x65005386
6500537a:	mov    eax,DWORD PTR [ebp-0x24]
6500537d:	push   eax
6500537e:	call   0x65011f02
65005383:	add    esp,0x4
65005386:	push   0x6502757c
6500538b:	push   0x3
6500538d:	push   0x650275b4
65005392:	call   0x65006a10
65005397:	mov    esi,eax
65005399:	mov    edi,0xf
6500539e:	mov    ecx,esi
650053a0:	add    esp,0xc
650053a3:	mov    DWORD PTR [ebp-0x10],edi
650053a6:	mov    DWORD PTR [ebp-0x14],ebx
650053a9:	mov    BYTE PTR [ebp-0x24],bl
650053ac:	lea    edx,[ecx+0x1]
650053af:	nop
650053b0:	mov    al,BYTE PTR [ecx]
650053b2:	add    ecx,0x1
650053b5:	cmp    al,bl
650053b7:	jne    0x650053b0
650053b9:	sub    ecx,edx
650053bb:	push   ecx
650053bc:	push   esi
650053bd:	lea    ecx,[ebp-0x28]
650053c0:	call   0x65001860
650053c5:	lea    ecx,[ebp-0x28]
650053c8:	push   ecx
650053c9:	lea    edx,[ebp-0x40]
650053cc:	push   edx
650053cd:	lea    eax,[ebp-0x34]
650053d0:	push   eax
650053d1:	mov    BYTE PTR [ebp-0x4],0x10
650053d5:	call   0x650070c0
650053da:	mov    BYTE PTR [ebp-0x4],0x2
650053de:	cmp    DWORD PTR [ebp-0x10],0x10
650053e2:	jb     0x650053f0
650053e4:	mov    ecx,DWORD PTR [ebp-0x24]
650053e7:	push   ecx
650053e8:	call   0x65011f02
650053ed:	add    esp,0x4
650053f0:	push   0x650275b8
650053f5:	push   0x3
650053f7:	push   0x650275f4
650053fc:	call   0x65006a10
65005401:	mov    ecx,eax
65005403:	add    esp,0xc
65005406:	mov    DWORD PTR [ebp-0x10],edi
65005409:	mov    DWORD PTR [ebp-0x14],ebx
6500540c:	mov    BYTE PTR [ebp-0x24],bl
6500540f:	lea    esi,[ecx+0x1]
65005412:	mov    dl,BYTE PTR [ecx]
65005414:	add    ecx,0x1
65005417:	cmp    dl,bl
65005419:	jne    0x65005412
6500541b:	sub    ecx,esi
6500541d:	push   ecx
6500541e:	push   eax
6500541f:	lea    ecx,[ebp-0x28]
65005422:	call   0x65001860
65005427:	lea    edx,[ebp-0x28]
6500542a:	push   edx
6500542b:	lea    eax,[ebp-0x40]
6500542e:	push   eax
6500542f:	lea    ecx,[ebp-0x34]
65005432:	push   ecx
65005433:	mov    BYTE PTR [ebp-0x4],0x11
65005437:	call   0x650070c0
6500543c:	mov    BYTE PTR [ebp-0x4],0x2
65005440:	cmp    DWORD PTR [ebp-0x10],0x10
65005444:	jb     0x65005452
65005446:	mov    edx,DWORD PTR [ebp-0x24]
65005449:	push   edx
6500544a:	call   0x65011f02
6500544f:	add    esp,0x4
65005452:	push   0x650275f8
65005457:	push   0x4
65005459:	push   0x65027634
6500545e:	call   0x65006a10
65005463:	mov    ecx,eax
65005465:	add    esp,0xc
65005468:	mov    DWORD PTR [ebp-0x10],0xf
6500546f:	mov    DWORD PTR [ebp-0x14],ebx
65005472:	mov    BYTE PTR [ebp-0x24],bl
65005475:	lea    esi,[ecx+0x1]
65005478:	mov    dl,BYTE PTR [ecx]
6500547a:	add    ecx,0x1
6500547d:	cmp    dl,bl
6500547f:	jne    0x65005478
65005481:	sub    ecx,esi
65005483:	push   ecx
65005484:	push   eax
65005485:	lea    ecx,[ebp-0x28]
65005488:	call   0x65001860
6500548d:	lea    eax,[ebp-0x28]
65005490:	push   eax
65005491:	lea    ecx,[ebp-0x40]
65005494:	push   ecx
65005495:	lea    edx,[ebp-0x34]
65005498:	push   edx
65005499:	mov    BYTE PTR [ebp-0x4],0x12
6500549d:	call   0x650070c0
650054a2:	mov    BYTE PTR [ebp-0x4],0x2
650054a6:	cmp    DWORD PTR [ebp-0x10],0x10
650054aa:	jb     0x650054b8
650054ac:	mov    eax,DWORD PTR [ebp-0x24]
650054af:	push   eax
650054b0:	call   0x65011f02
650054b5:	add    esp,0x4
650054b8:	push   0x6502763c
650054bd:	push   0x5
650054bf:	push   0x6502767c
650054c4:	call   0x65006a10
650054c9:	mov    esi,eax
650054cb:	mov    edi,0xf
650054d0:	mov    ecx,esi
650054d2:	add    esp,0xc
650054d5:	mov    DWORD PTR [ebp-0x10],edi
650054d8:	mov    DWORD PTR [ebp-0x14],ebx
650054db:	mov    BYTE PTR [ebp-0x24],bl
650054de:	lea    edx,[ecx+0x1]
650054e1:	mov    al,BYTE PTR [ecx]
650054e3:	add    ecx,0x1
650054e6:	cmp    al,bl
650054e8:	jne    0x650054e1
650054ea:	sub    ecx,edx
650054ec:	push   ecx
650054ed:	push   esi
650054ee:	lea    ecx,[ebp-0x28]
650054f1:	call   0x65001860
650054f6:	lea    ecx,[ebp-0x28]
650054f9:	push   ecx
650054fa:	lea    edx,[ebp-0x40]
650054fd:	push   edx
650054fe:	lea    eax,[ebp-0x34]
65005501:	push   eax
65005502:	mov    BYTE PTR [ebp-0x4],0x13
65005506:	call   0x650070c0
6500550b:	mov    BYTE PTR [ebp-0x4],0x2
6500550f:	cmp    DWORD PTR [ebp-0x10],0x10
65005513:	jb     0x65005521
65005515:	mov    ecx,DWORD PTR [ebp-0x24]
65005518:	push   ecx
65005519:	call   0x65011f02
6500551e:	add    esp,0x4
65005521:	push   0x65027684
65005526:	push   0x8
65005528:	push   0x650276a8
6500552d:	call   0x65006a10
65005532:	mov    esi,eax
65005534:	mov    ecx,esi
65005536:	add    esp,0xc
65005539:	mov    DWORD PTR [ebp-0x10],edi
6500553c:	mov    DWORD PTR [ebp-0x14],ebx
6500553f:	mov    BYTE PTR [ebp-0x24],bl
65005542:	lea    edx,[ecx+0x1]
65005545:	mov    al,BYTE PTR [ecx]
65005547:	add    ecx,0x1
6500554a:	cmp    al,bl
6500554c:	jne    0x65005545
6500554e:	sub    ecx,edx
65005550:	push   ecx
65005551:	push   esi
65005552:	lea    ecx,[ebp-0x28]
65005555:	call   0x65001860
6500555a:	lea    edx,[ebp-0x28]
6500555d:	push   edx
6500555e:	lea    eax,[ebp-0x40]
65005561:	push   eax
65005562:	lea    ecx,[ebp-0x34]
65005565:	push   ecx
65005566:	mov    BYTE PTR [ebp-0x4],0x14
6500556a:	call   0x650070c0
6500556f:	mov    BYTE PTR [ebp-0x4],0x2
65005573:	cmp    DWORD PTR [ebp-0x10],0x10
65005577:	jb     0x65005585
65005579:	mov    edx,DWORD PTR [ebp-0x24]
6500557c:	push   edx
6500557d:	call   0x65011f02
65005582:	add    esp,0x4
65005585:	push   0x650276b4
6500558a:	push   0x4
6500558c:	push   0x650276d8
65005591:	call   0x65006a10
65005596:	mov    esi,eax
65005598:	mov    ecx,esi
6500559a:	add    esp,0xc
6500559d:	mov    DWORD PTR [ebp-0x10],edi
650055a0:	mov    DWORD PTR [ebp-0x14],ebx
650055a3:	mov    BYTE PTR [ebp-0x24],bl
650055a6:	lea    edx,[ecx+0x1]
650055a9:	lea    esp,[esp+0x0]
650055b0:	mov    al,BYTE PTR [ecx]
650055b2:	add    ecx,0x1
650055b5:	cmp    al,bl
650055b7:	jne    0x650055b0
650055b9:	sub    ecx,edx
650055bb:	push   ecx
650055bc:	push   esi
650055bd:	lea    ecx,[ebp-0x28]
650055c0:	call   0x65001860
650055c5:	lea    eax,[ebp-0x28]
650055c8:	push   eax
650055c9:	lea    ecx,[ebp-0x40]
650055cc:	push   ecx
650055cd:	lea    edx,[ebp-0x34]
650055d0:	push   edx
650055d1:	mov    BYTE PTR [ebp-0x4],0x15
650055d5:	call   0x650070c0
650055da:	mov    BYTE PTR [ebp-0x4],0x2
650055de:	cmp    DWORD PTR [ebp-0x10],0x10
650055e2:	jb     0x650055f0
650055e4:	mov    eax,DWORD PTR [ebp-0x24]
650055e7:	push   eax
650055e8:	call   0x65011f02
650055ed:	add    esp,0x4
650055f0:	push   0x650276e0
650055f5:	push   0x5
650055f7:	push   0x65027704
650055fc:	call   0x65006a10
65005601:	mov    ecx,eax
65005603:	add    esp,0xc
65005606:	mov    DWORD PTR [ebp-0x10],edi
65005609:	mov    DWORD PTR [ebp-0x14],ebx
6500560c:	mov    BYTE PTR [ebp-0x24],bl
6500560f:	lea    esi,[ecx+0x1]
65005612:	mov    dl,BYTE PTR [ecx]
65005614:	add    ecx,0x1
65005617:	cmp    dl,bl
65005619:	jne    0x65005612
6500561b:	sub    ecx,esi
6500561d:	push   ecx
6500561e:	push   eax
6500561f:	lea    ecx,[ebp-0x28]
65005622:	call   0x65001860
65005627:	lea    ecx,[ebp-0x28]
6500562a:	push   ecx
6500562b:	lea    edx,[ebp-0x40]
6500562e:	push   edx
6500562f:	lea    eax,[ebp-0x34]
65005632:	push   eax
65005633:	mov    BYTE PTR [ebp-0x4],0x16
65005637:	call   0x650070c0
6500563c:	mov    BYTE PTR [ebp-0x4],0x2
65005640:	cmp    DWORD PTR [ebp-0x10],0x10
65005644:	jb     0x65005652
65005646:	mov    ecx,DWORD PTR [ebp-0x24]
65005649:	push   ecx
6500564a:	call   0x65011f02
6500564f:	add    esp,0x4
65005652:	push   0x6502770c
65005657:	push   0x5
65005659:	push   0x65027740
6500565e:	call   0x65006a10
65005663:	mov    ecx,eax
65005665:	add    esp,0xc
65005668:	mov    DWORD PTR [ebp-0x10],0xf
6500566f:	mov    DWORD PTR [ebp-0x14],ebx
65005672:	mov    BYTE PTR [ebp-0x24],bl
65005675:	lea    esi,[ecx+0x1]
65005678:	mov    dl,BYTE PTR [ecx]
6500567a:	add    ecx,0x1
6500567d:	cmp    dl,bl
6500567f:	jne    0x65005678
65005681:	sub    ecx,esi
65005683:	push   ecx
65005684:	push   eax
65005685:	lea    ecx,[ebp-0x28]
65005688:	call   0x65001860
6500568d:	lea    edx,[ebp-0x28]
65005690:	push   edx
65005691:	lea    eax,[ebp-0x40]
65005694:	push   eax
65005695:	lea    ecx,[ebp-0x34]
65005698:	push   ecx
65005699:	mov    BYTE PTR [ebp-0x4],0x17
6500569d:	call   0x650070c0
650056a2:	mov    edi,0x10
650056a7:	mov    BYTE PTR [ebp-0x4],0x2
650056ab:	cmp    DWORD PTR [ebp-0x10],edi
650056ae:	jb     0x650056bc
650056b0:	mov    edx,DWORD PTR [ebp-0x24]
650056b3:	push   edx
650056b4:	call   0x65011f02
650056b9:	add    esp,0x4
650056bc:	push   0x65027748
650056c1:	push   0x4
650056c3:	push   0x6502777c
650056c8:	call   0x65006a10
650056cd:	add    esp,0xc
650056d0:	push   eax
650056d1:	lea    ecx,[ebp-0x28]
650056d4:	call   0x650026d0
650056d9:	lea    eax,[ebp-0x28]
650056dc:	push   eax
650056dd:	lea    ecx,[ebp-0x40]
650056e0:	push   ecx
650056e1:	lea    edx,[ebp-0x34]
650056e4:	push   edx
650056e5:	mov    BYTE PTR [ebp-0x4],0x18
650056e9:	call   0x650070c0
650056ee:	mov    BYTE PTR [ebp-0x4],0x2
650056f2:	cmp    DWORD PTR [ebp-0x10],edi
650056f5:	jb     0x65005703
650056f7:	mov    eax,DWORD PTR [ebp-0x24]
650056fa:	push   eax
650056fb:	call   0x65011f02
65005700:	add    esp,0x4
65005703:	push   0x65027784
65005708:	push   0x8
6500570a:	push   0x650277b8
6500570f:	call   0x65006a10
65005714:	add    esp,0xc
65005717:	push   eax
65005718:	lea    ecx,[ebp-0x28]
6500571b:	call   0x650026d0
65005720:	lea    ecx,[ebp-0x28]
65005723:	push   ecx
65005724:	lea    edx,[ebp-0x40]
65005727:	push   edx
65005728:	lea    eax,[ebp-0x34]
6500572b:	push   eax
6500572c:	mov    BYTE PTR [ebp-0x4],0x19
65005730:	call   0x650070c0
65005735:	mov    BYTE PTR [ebp-0x4],0x2
65005739:	cmp    DWORD PTR [ebp-0x10],edi
6500573c:	jb     0x6500574a
6500573e:	mov    ecx,DWORD PTR [ebp-0x24]
65005741:	push   ecx
65005742:	call   0x65011f02
65005747:	add    esp,0x4
6500574a:	push   0x650277c4
6500574f:	push   0x6
65005751:	push   0x650277f0
65005756:	call   0x65006a10
6500575b:	add    esp,0xc
6500575e:	push   eax
6500575f:	lea    ecx,[ebp-0x28]
65005762:	call   0x650026d0
65005767:	lea    edx,[ebp-0x28]
6500576a:	push   edx
6500576b:	lea    eax,[ebp-0x40]
6500576e:	push   eax
6500576f:	lea    ecx,[ebp-0x34]
65005772:	push   ecx
65005773:	mov    BYTE PTR [ebp-0x4],0x1a
65005777:	call   0x650070c0
6500577c:	mov    BYTE PTR [ebp-0x4],0x2
65005780:	cmp    DWORD PTR [ebp-0x10],edi
65005783:	jb     0x65005791
65005785:	mov    edx,DWORD PTR [ebp-0x24]
65005788:	push   edx
65005789:	call   0x65011f02
6500578e:	add    esp,0x4
65005791:	push   0x650277f8
65005796:	push   0x8
65005798:	push   0x65027834
6500579d:	call   0x65006a10
650057a2:	add    esp,0xc
650057a5:	push   eax
650057a6:	lea    ecx,[ebp-0x28]
650057a9:	call   0x650026d0
650057ae:	lea    eax,[ebp-0x28]
650057b1:	push   eax
650057b2:	lea    ecx,[ebp-0x40]
650057b5:	push   ecx
650057b6:	lea    edx,[ebp-0x34]
650057b9:	push   edx
650057ba:	mov    BYTE PTR [ebp-0x4],0x1b
650057be:	call   0x650070c0
650057c3:	mov    BYTE PTR [ebp-0x4],0x2
650057c7:	cmp    DWORD PTR [ebp-0x10],edi
650057ca:	jb     0x650057d8
650057cc:	mov    eax,DWORD PTR [ebp-0x24]
650057cf:	push   eax
650057d0:	call   0x65011f02
650057d5:	add    esp,0x4
650057d8:	push   0x65027840
650057dd:	push   0x6
650057df:	push   0x6502786c
650057e4:	call   0x65006a10
650057e9:	add    esp,0xc
650057ec:	push   eax
650057ed:	lea    ecx,[ebp-0x28]
650057f0:	call   0x650026d0
650057f5:	lea    ecx,[ebp-0x28]
650057f8:	push   ecx
650057f9:	lea    edx,[ebp-0x40]
650057fc:	push   edx
650057fd:	lea    eax,[ebp-0x34]
65005800:	push   eax
65005801:	mov    BYTE PTR [ebp-0x4],0x1c
65005805:	call   0x650070c0
6500580a:	mov    BYTE PTR [ebp-0x4],0x2
6500580e:	cmp    DWORD PTR [ebp-0x10],edi
65005811:	jb     0x6500581f
65005813:	mov    ecx,DWORD PTR [ebp-0x24]
65005816:	push   ecx
65005817:	call   0x65011f02
6500581c:	add    esp,0x4
6500581f:	push   0x65027874
65005824:	push   0x7
65005826:	push   0x6502789c
6500582b:	call   0x65006a10
65005830:	add    esp,0xc
65005833:	push   eax
65005834:	lea    ecx,[ebp-0x28]
65005837:	call   0x650026d0
6500583c:	lea    edx,[ebp-0x28]
6500583f:	push   edx
65005840:	lea    eax,[ebp-0x40]
65005843:	push   eax
65005844:	lea    ecx,[ebp-0x34]
65005847:	push   ecx
65005848:	mov    BYTE PTR [ebp-0x4],0x1d
6500584c:	call   0x650070c0
65005851:	mov    BYTE PTR [ebp-0x4],0x2
65005855:	cmp    DWORD PTR [ebp-0x10],edi
65005858:	jb     0x65005866
6500585a:	mov    edx,DWORD PTR [ebp-0x24]
6500585d:	push   edx
6500585e:	call   0x65011f02
65005863:	add    esp,0x4
65005866:	push   0x650278a4
6500586b:	push   0x5
6500586d:	push   0x650278d0
65005872:	call   0x65006a10
65005877:	add    esp,0xc
6500587a:	push   eax
6500587b:	lea    ecx,[ebp-0x28]
6500587e:	call   0x650026d0
65005883:	lea    eax,[ebp-0x28]
65005886:	push   eax
65005887:	lea    ecx,[ebp-0x40]
6500588a:	push   ecx
6500588b:	lea    edx,[ebp-0x34]
6500588e:	push   edx
6500588f:	mov    BYTE PTR [ebp-0x4],0x1e
65005893:	call   0x650070c0
65005898:	mov    BYTE PTR [ebp-0x4],0x2
6500589c:	cmp    DWORD PTR [ebp-0x10],edi
6500589f:	jb     0x650058ad
650058a1:	mov    eax,DWORD PTR [ebp-0x24]
650058a4:	push   eax
650058a5:	call   0x65011f02
650058aa:	add    esp,0x4
650058ad:	push   0x650278d8
650058b2:	push   0x5
650058b4:	push   0x650278fc
650058b9:	call   0x65006a10
650058be:	add    esp,0xc
650058c1:	push   eax
650058c2:	lea    ecx,[ebp-0x28]
650058c5:	call   0x650026d0
650058ca:	lea    ecx,[ebp-0x28]
650058cd:	push   ecx
650058ce:	lea    edx,[ebp-0x40]
650058d1:	push   edx
650058d2:	lea    eax,[ebp-0x34]
650058d5:	push   eax
650058d6:	mov    BYTE PTR [ebp-0x4],0x1f
650058da:	call   0x650070c0
650058df:	mov    BYTE PTR [ebp-0x4],0x2
650058e3:	cmp    DWORD PTR [ebp-0x10],edi
650058e6:	jb     0x650058f4
650058e8:	mov    ecx,DWORD PTR [ebp-0x24]
650058eb:	push   ecx
650058ec:	call   0x65011f02
650058f1:	add    esp,0x4
650058f4:	push   0x65027904
650058f9:	push   0x7
650058fb:	push   0x65027930
65005900:	call   0x65006a10
65005905:	add    esp,0xc
65005908:	push   eax
65005909:	lea    ecx,[ebp-0x28]
6500590c:	call   0x650026d0
65005911:	lea    edx,[ebp-0x28]
65005914:	push   edx
65005915:	lea    eax,[ebp-0x40]
65005918:	push   eax
65005919:	lea    ecx,[ebp-0x34]
6500591c:	push   ecx
6500591d:	mov    BYTE PTR [ebp-0x4],0x20
65005921:	call   0x650070c0
65005926:	mov    BYTE PTR [ebp-0x4],0x2
6500592a:	cmp    DWORD PTR [ebp-0x10],edi
6500592d:	jb     0x6500593b
6500592f:	mov    edx,DWORD PTR [ebp-0x24]
65005932:	push   edx
65005933:	call   0x65011f02
65005938:	add    esp,0x4
6500593b:	push   0x65027938
65005940:	push   0x6
65005942:	push   0x6502796c
65005947:	call   0x65006a10
6500594c:	add    esp,0xc
6500594f:	push   eax
65005950:	lea    ecx,[ebp-0x28]
65005953:	call   0x650026d0
65005958:	lea    eax,[ebp-0x28]
6500595b:	push   eax
6500595c:	lea    ecx,[ebp-0x40]
6500595f:	push   ecx
65005960:	lea    edx,[ebp-0x34]
65005963:	push   edx
65005964:	mov    BYTE PTR [ebp-0x4],0x21
65005968:	call   0x650070c0
6500596d:	mov    BYTE PTR [ebp-0x4],0x2
65005971:	cmp    DWORD PTR [ebp-0x10],edi
65005974:	jb     0x65005982
65005976:	mov    eax,DWORD PTR [ebp-0x24]
65005979:	push   eax
6500597a:	call   0x65011f02
6500597f:	add    esp,0x4
65005982:	push   0x65027974
65005987:	push   0xe
65005989:	push   0x650279a0
6500598e:	call   0x65006a10
65005993:	add    esp,0xc
65005996:	push   eax
65005997:	lea    ecx,[ebp-0x28]
6500599a:	call   0x650026d0
6500599f:	lea    ecx,[ebp-0x28]
650059a2:	push   ecx
650059a3:	lea    edx,[ebp-0x40]
650059a6:	push   edx
650059a7:	lea    eax,[ebp-0x34]
650059aa:	push   eax
650059ab:	mov    BYTE PTR [ebp-0x4],0x22
650059af:	call   0x650070c0
650059b4:	mov    BYTE PTR [ebp-0x4],0x2
650059b8:	cmp    DWORD PTR [ebp-0x10],edi
650059bb:	jb     0x650059c9
650059bd:	mov    ecx,DWORD PTR [ebp-0x24]
650059c0:	push   ecx
650059c1:	call   0x65011f02
650059c6:	add    esp,0x4
650059c9:	push   0x650279b0
650059ce:	push   0x12
650059d0:	push   0x650279d4
650059d5:	call   0x65006a10
650059da:	add    esp,0xc
650059dd:	push   eax
650059de:	lea    ecx,[ebp-0x28]
650059e1:	call   0x650026d0
650059e6:	lea    edx,[ebp-0x28]
650059e9:	push   edx
650059ea:	lea    eax,[ebp-0x40]
650059ed:	push   eax
650059ee:	lea    ecx,[ebp-0x34]
650059f1:	push   ecx
650059f2:	mov    BYTE PTR [ebp-0x4],0x23
650059f6:	call   0x650070c0
650059fb:	mov    BYTE PTR [ebp-0x4],0x2
650059ff:	cmp    DWORD PTR [ebp-0x10],edi
65005a02:	jb     0x65005a10
65005a04:	mov    edx,DWORD PTR [ebp-0x24]
65005a07:	push   edx
65005a08:	call   0x65011f02
65005a0d:	add    esp,0x4
65005a10:	push   0x650279e8
65005a15:	push   0x17
65005a17:	push   0x65027a20
65005a1c:	call   0x65006a10
65005a21:	add    esp,0xc
65005a24:	push   eax
65005a25:	lea    ecx,[ebp-0x28]
65005a28:	call   0x650026d0
65005a2d:	lea    eax,[ebp-0x28]
65005a30:	push   eax
65005a31:	lea    ecx,[ebp-0x40]
65005a34:	push   ecx
65005a35:	lea    edx,[ebp-0x34]
65005a38:	push   edx
65005a39:	mov    BYTE PTR [ebp-0x4],0x24
65005a3d:	call   0x650070c0
65005a42:	mov    BYTE PTR [ebp-0x4],0x2
65005a46:	cmp    DWORD PTR [ebp-0x10],edi
65005a49:	jb     0x65005a57
65005a4b:	mov    eax,DWORD PTR [ebp-0x24]
65005a4e:	push   eax
65005a4f:	call   0x65011f02
65005a54:	add    esp,0x4
65005a57:	push   0x65027a38
65005a5c:	push   0x11
65005a5e:	push   0x65027a60
65005a63:	call   0x65006a10
65005a68:	add    esp,0xc
65005a6b:	push   eax
65005a6c:	lea    ecx,[ebp-0x28]
65005a6f:	call   0x650026d0
65005a74:	lea    ecx,[ebp-0x28]
65005a77:	push   ecx
65005a78:	lea    edx,[ebp-0x40]
65005a7b:	push   edx
65005a7c:	lea    eax,[ebp-0x34]
65005a7f:	push   eax
65005a80:	mov    BYTE PTR [ebp-0x4],0x25
65005a84:	call   0x650070c0
65005a89:	mov    BYTE PTR [ebp-0x4],0x2
65005a8d:	cmp    DWORD PTR [ebp-0x10],edi
65005a90:	jb     0x65005a9e
65005a92:	mov    ecx,DWORD PTR [ebp-0x24]
65005a95:	push   ecx
65005a96:	call   0x65011f02
65005a9b:	add    esp,0x4
65005a9e:	push   0x65027a74
65005aa3:	push   0x8
65005aa5:	push   0x65027aac
65005aaa:	call   0x65006a10
65005aaf:	add    esp,0xc
65005ab2:	push   eax
65005ab3:	lea    ecx,[ebp-0x28]
65005ab6:	call   0x650026d0
65005abb:	lea    edx,[ebp-0x28]
65005abe:	push   edx
65005abf:	lea    eax,[ebp-0x40]
65005ac2:	push   eax
65005ac3:	lea    ecx,[ebp-0x34]
65005ac6:	push   ecx
65005ac7:	mov    BYTE PTR [ebp-0x4],0x26
65005acb:	call   0x650070c0
65005ad0:	mov    BYTE PTR [ebp-0x4],0x2
65005ad4:	cmp    DWORD PTR [ebp-0x10],edi
65005ad7:	jb     0x65005ae5
65005ad9:	mov    edx,DWORD PTR [ebp-0x24]
65005adc:	push   edx
65005add:	call   0x65011f02
65005ae2:	add    esp,0x4
65005ae5:	push   0x65027ab8
65005aea:	push   0x6
65005aec:	push   0x65027aec
65005af1:	call   0x65006a10
65005af6:	add    esp,0xc
65005af9:	push   eax
65005afa:	lea    ecx,[ebp-0x28]
65005afd:	call   0x650026d0
65005b02:	lea    eax,[ebp-0x28]
65005b05:	push   eax
65005b06:	lea    ecx,[ebp-0x40]
65005b09:	push   ecx
65005b0a:	lea    edx,[ebp-0x34]
65005b0d:	push   edx
65005b0e:	mov    BYTE PTR [ebp-0x4],0x27
65005b12:	call   0x650070c0
65005b17:	mov    BYTE PTR [ebp-0x4],0x2
65005b1b:	cmp    DWORD PTR [ebp-0x10],edi
65005b1e:	jb     0x65005b2c
65005b20:	mov    eax,DWORD PTR [ebp-0x24]
65005b23:	push   eax
65005b24:	call   0x65011f02
65005b29:	add    esp,0x4
65005b2c:	push   0x65027af4
65005b31:	push   0x6
65005b33:	push   0x65027b28
65005b38:	call   0x65006a10
65005b3d:	add    esp,0xc
65005b40:	push   eax
65005b41:	lea    ecx,[ebp-0x28]
65005b44:	call   0x650026d0
65005b49:	lea    ecx,[ebp-0x28]
65005b4c:	push   ecx
65005b4d:	lea    edx,[ebp-0x40]
65005b50:	push   edx
65005b51:	lea    eax,[ebp-0x34]
65005b54:	push   eax
65005b55:	mov    BYTE PTR [ebp-0x4],0x28
65005b59:	call   0x650070c0
65005b5e:	mov    BYTE PTR [ebp-0x4],0x2
65005b62:	cmp    DWORD PTR [ebp-0x10],edi
65005b65:	jb     0x65005b73
65005b67:	mov    ecx,DWORD PTR [ebp-0x24]
65005b6a:	push   ecx
65005b6b:	call   0x65011f02
65005b70:	add    esp,0x4
65005b73:	push   0x65027b30
65005b78:	push   0x8
65005b7a:	push   0x65027b54
65005b7f:	call   0x65006a10
65005b84:	add    esp,0xc
65005b87:	push   eax
65005b88:	lea    ecx,[ebp-0x28]
65005b8b:	call   0x650026d0
65005b90:	lea    edx,[ebp-0x28]
65005b93:	push   edx
65005b94:	lea    eax,[ebp-0x40]
65005b97:	push   eax
65005b98:	lea    ecx,[ebp-0x34]
65005b9b:	push   ecx
65005b9c:	mov    BYTE PTR [ebp-0x4],0x29
65005ba0:	call   0x650070c0
65005ba5:	mov    BYTE PTR [ebp-0x4],0x2
65005ba9:	cmp    DWORD PTR [ebp-0x10],edi
65005bac:	jb     0x65005bba
65005bae:	mov    edx,DWORD PTR [ebp-0x24]
65005bb1:	push   edx
65005bb2:	call   0x65011f02
65005bb7:	add    esp,0x4
65005bba:	push   0x65027b60
65005bbf:	push   0x6
65005bc1:	push   0x65027b90
65005bc6:	call   0x65006a10
65005bcb:	add    esp,0xc
65005bce:	push   eax
65005bcf:	lea    ecx,[ebp-0x28]
65005bd2:	call   0x650026d0
65005bd7:	lea    eax,[ebp-0x28]
65005bda:	push   eax
65005bdb:	lea    ecx,[ebp-0x40]
65005bde:	push   ecx
65005bdf:	lea    edx,[ebp-0x34]
65005be2:	push   edx
65005be3:	mov    BYTE PTR [ebp-0x4],0x2a
65005be7:	call   0x650070c0
65005bec:	mov    BYTE PTR [ebp-0x4],0x2
65005bf0:	cmp    DWORD PTR [ebp-0x10],edi
65005bf3:	jb     0x65005c01
65005bf5:	mov    eax,DWORD PTR [ebp-0x24]
65005bf8:	push   eax
65005bf9:	call   0x65011f02
65005bfe:	add    esp,0x4
65005c01:	push   0x65027b98
65005c06:	push   0x7
65005c08:	push   0x65027bc8
65005c0d:	call   0x65006a10
65005c12:	add    esp,0xc
65005c15:	push   eax
65005c16:	lea    ecx,[ebp-0x28]
65005c19:	call   0x650026d0
65005c1e:	lea    ecx,[ebp-0x28]
65005c21:	push   ecx
65005c22:	lea    edx,[ebp-0x40]
65005c25:	push   edx
65005c26:	lea    eax,[ebp-0x34]
65005c29:	push   eax
65005c2a:	mov    BYTE PTR [ebp-0x4],0x2b
65005c2e:	call   0x650070c0
65005c33:	mov    BYTE PTR [ebp-0x4],0x2
65005c37:	cmp    DWORD PTR [ebp-0x10],edi
65005c3a:	jb     0x65005c48
65005c3c:	mov    ecx,DWORD PTR [ebp-0x24]
65005c3f:	push   ecx
65005c40:	call   0x65011f02
65005c45:	add    esp,0x4
65005c48:	push   0x65027bd0
65005c4d:	push   0x6
65005c4f:	push   0x65027bfc
65005c54:	call   0x65006a10
65005c59:	add    esp,0xc
65005c5c:	push   eax
65005c5d:	lea    ecx,[ebp-0x28]
65005c60:	call   0x650026d0
65005c65:	lea    edx,[ebp-0x28]
65005c68:	push   edx
65005c69:	lea    eax,[ebp-0x40]
65005c6c:	push   eax
65005c6d:	lea    ecx,[ebp-0x34]
65005c70:	push   ecx
65005c71:	mov    BYTE PTR [ebp-0x4],0x2c
65005c75:	call   0x650070c0
65005c7a:	mov    BYTE PTR [ebp-0x4],0x2
65005c7e:	cmp    DWORD PTR [ebp-0x10],edi
65005c81:	jb     0x65005c8f
65005c83:	mov    edx,DWORD PTR [ebp-0x24]
65005c86:	push   edx
65005c87:	call   0x65011f02
65005c8c:	add    esp,0x4
65005c8f:	push   0x65027c04
65005c94:	push   0x6
65005c96:	push   0x65027c28
65005c9b:	call   0x65006a10
65005ca0:	add    esp,0xc
65005ca3:	push   eax
65005ca4:	lea    ecx,[ebp-0x28]
65005ca7:	call   0x650026d0
65005cac:	lea    eax,[ebp-0x28]
65005caf:	push   eax
65005cb0:	lea    ecx,[ebp-0x40]
65005cb3:	push   ecx
65005cb4:	lea    edx,[ebp-0x34]
65005cb7:	push   edx
65005cb8:	mov    BYTE PTR [ebp-0x4],0x2d
65005cbc:	call   0x650070c0
65005cc1:	mov    BYTE PTR [ebp-0x4],0x2
65005cc5:	cmp    DWORD PTR [ebp-0x10],edi
65005cc8:	jb     0x65005cd6
65005cca:	mov    eax,DWORD PTR [ebp-0x24]
65005ccd:	push   eax
65005cce:	call   0x65011f02
65005cd3:	add    esp,0x4
65005cd6:	push   0x65027c30
65005cdb:	push   0x5
65005cdd:	push   0x65027c70
65005ce2:	call   0x65006a10
65005ce7:	add    esp,0xc
65005cea:	push   eax
65005ceb:	lea    ecx,[ebp-0x28]
65005cee:	call   0x650026d0
65005cf3:	lea    ecx,[ebp-0x28]
65005cf6:	push   ecx
65005cf7:	lea    edx,[ebp-0x40]
65005cfa:	push   edx
65005cfb:	lea    eax,[ebp-0x34]
65005cfe:	push   eax
65005cff:	mov    BYTE PTR [ebp-0x4],0x2e
65005d03:	call   0x650070c0
65005d08:	mov    BYTE PTR [ebp-0x4],0x2
65005d0c:	cmp    DWORD PTR [ebp-0x10],edi
65005d0f:	jb     0x65005d1d
65005d11:	mov    ecx,DWORD PTR [ebp-0x24]
65005d14:	push   ecx
65005d15:	call   0x65011f02
65005d1a:	add    esp,0x4
65005d1d:	push   0x65027c78
65005d22:	push   0x6
65005d24:	push   0x65027cb8
65005d29:	call   0x65006a10
65005d2e:	add    esp,0xc
65005d31:	push   eax
65005d32:	lea    ecx,[ebp-0x28]
65005d35:	call   0x650026d0
65005d3a:	lea    edx,[ebp-0x28]
65005d3d:	push   edx
65005d3e:	lea    eax,[ebp-0x40]
65005d41:	push   eax
65005d42:	lea    ecx,[ebp-0x34]
65005d45:	push   ecx
65005d46:	mov    BYTE PTR [ebp-0x4],0x2f
65005d4a:	call   0x650070c0
65005d4f:	mov    BYTE PTR [ebp-0x4],0x2
65005d53:	cmp    DWORD PTR [ebp-0x10],edi
65005d56:	jb     0x65005d64
65005d58:	mov    edx,DWORD PTR [ebp-0x24]
65005d5b:	push   edx
65005d5c:	call   0x65011f02
65005d61:	add    esp,0x4
65005d64:	push   0x65027cc0
65005d69:	push   0xa
65005d6b:	push   0x65027cfc
65005d70:	call   0x65006a10
65005d75:	add    esp,0xc
65005d78:	push   eax
65005d79:	lea    ecx,[ebp-0x28]
65005d7c:	call   0x650026d0
65005d81:	lea    eax,[ebp-0x28]
65005d84:	push   eax
65005d85:	lea    ecx,[ebp-0x40]
65005d88:	push   ecx
65005d89:	lea    edx,[ebp-0x34]
65005d8c:	push   edx
65005d8d:	mov    BYTE PTR [ebp-0x4],0x30
65005d91:	call   0x650070c0
65005d96:	mov    BYTE PTR [ebp-0x4],0x2
65005d9a:	cmp    DWORD PTR [ebp-0x10],edi
65005d9d:	jb     0x65005dab
65005d9f:	mov    eax,DWORD PTR [ebp-0x24]
65005da2:	push   eax
65005da3:	call   0x65011f02
65005da8:	add    esp,0x4
65005dab:	push   0x65027d08
65005db0:	push   0xf
65005db2:	push   0x65027d34
65005db7:	call   0x65006a10
65005dbc:	add    esp,0xc
65005dbf:	push   eax
65005dc0:	lea    ecx,[ebp-0x28]
65005dc3:	call   0x650026d0
65005dc8:	lea    ecx,[ebp-0x28]
65005dcb:	push   ecx
65005dcc:	lea    edx,[ebp-0x40]
65005dcf:	push   edx
65005dd0:	lea    eax,[ebp-0x34]
65005dd3:	push   eax
65005dd4:	mov    BYTE PTR [ebp-0x4],0x31
65005dd8:	call   0x650070c0
65005ddd:	mov    BYTE PTR [ebp-0x4],0x2
65005de1:	cmp    DWORD PTR [ebp-0x10],edi
65005de4:	jb     0x65005df2
65005de6:	mov    ecx,DWORD PTR [ebp-0x24]
65005de9:	push   ecx
65005dea:	call   0x65011f02
65005def:	add    esp,0x4
65005df2:	push   0x65027d44
65005df7:	push   0xa
65005df9:	push   0x65027d80
65005dfe:	call   0x65006a10
65005e03:	add    esp,0xc
65005e06:	push   eax
65005e07:	lea    ecx,[ebp-0x28]
65005e0a:	call   0x650026d0
65005e0f:	lea    edx,[ebp-0x28]
65005e12:	push   edx
65005e13:	lea    eax,[ebp-0x40]
65005e16:	push   eax
65005e17:	lea    ecx,[ebp-0x34]
65005e1a:	push   ecx
65005e1b:	mov    BYTE PTR [ebp-0x4],0x32
65005e1f:	call   0x650070c0
65005e24:	mov    BYTE PTR [ebp-0x4],0x2
65005e28:	cmp    DWORD PTR [ebp-0x10],edi
65005e2b:	jb     0x65005e39
65005e2d:	mov    edx,DWORD PTR [ebp-0x24]
65005e30:	push   edx
65005e31:	call   0x65011f02
65005e36:	add    esp,0x4
65005e39:	push   0x65027d8c
65005e3e:	push   0xb
65005e40:	push   0x65027dbc
65005e45:	call   0x65006a10
65005e4a:	add    esp,0xc
65005e4d:	push   eax
65005e4e:	lea    ecx,[ebp-0x28]
65005e51:	call   0x650026d0
65005e56:	lea    eax,[ebp-0x28]
65005e59:	push   eax
65005e5a:	lea    ecx,[ebp-0x40]
65005e5d:	push   ecx
65005e5e:	lea    edx,[ebp-0x34]
65005e61:	push   edx
65005e62:	mov    BYTE PTR [ebp-0x4],0x33
65005e66:	call   0x650070c0
65005e6b:	mov    BYTE PTR [ebp-0x4],0x2
65005e6f:	cmp    DWORD PTR [ebp-0x10],edi
65005e72:	jb     0x65005e80
65005e74:	mov    eax,DWORD PTR [ebp-0x24]
65005e77:	push   eax
65005e78:	call   0x65011f02
65005e7d:	add    esp,0x4
65005e80:	push   0x65027dc8
65005e85:	push   0x1e
65005e87:	push   0x65027df4
65005e8c:	call   0x65006a10
65005e91:	add    esp,0xc
65005e94:	push   eax
65005e95:	lea    ecx,[ebp-0x28]
65005e98:	call   0x650026d0
65005e9d:	lea    ecx,[ebp-0x28]
65005ea0:	push   ecx
65005ea1:	lea    edx,[ebp-0x40]
65005ea4:	push   edx
65005ea5:	lea    eax,[ebp-0x34]
65005ea8:	push   eax
65005ea9:	mov    BYTE PTR [ebp-0x4],0x34
65005ead:	call   0x650070c0
65005eb2:	mov    BYTE PTR [ebp-0x4],0x2
65005eb6:	cmp    DWORD PTR [ebp-0x10],edi
65005eb9:	jb     0x65005ec7
65005ebb:	mov    ecx,DWORD PTR [ebp-0x24]
65005ebe:	push   ecx
65005ebf:	call   0x65011f02
65005ec4:	add    esp,0x4
65005ec7:	push   0x65027e14
65005ecc:	push   0x16
65005ece:	push   0x65027e48
65005ed3:	call   0x65006a10
65005ed8:	add    esp,0xc
65005edb:	push   eax
65005edc:	lea    ecx,[ebp-0x28]
65005edf:	call   0x650026d0
65005ee4:	lea    edx,[ebp-0x28]
65005ee7:	push   edx
65005ee8:	lea    eax,[ebp-0x40]
65005eeb:	push   eax
65005eec:	lea    ecx,[ebp-0x34]
65005eef:	push   ecx
65005ef0:	mov    BYTE PTR [ebp-0x4],0x35
65005ef4:	call   0x650070c0
65005ef9:	mov    BYTE PTR [ebp-0x4],0x2
65005efd:	cmp    DWORD PTR [ebp-0x10],edi
65005f00:	jb     0x65005f0e
65005f02:	mov    edx,DWORD PTR [ebp-0x24]
65005f05:	push   edx
65005f06:	call   0x65011f02
65005f0b:	add    esp,0x4
65005f0e:	push   0x65027e60
65005f13:	push   0x19
65005f15:	push   0x65027e90
65005f1a:	call   0x65006a10
65005f1f:	add    esp,0xc
65005f22:	push   eax
65005f23:	lea    ecx,[ebp-0x28]
65005f26:	call   0x650026d0
65005f2b:	lea    eax,[ebp-0x28]
65005f2e:	push   eax
65005f2f:	lea    ecx,[ebp-0x40]
65005f32:	push   ecx
65005f33:	lea    edx,[ebp-0x34]
65005f36:	push   edx
65005f37:	mov    BYTE PTR [ebp-0x4],0x36
65005f3b:	call   0x650070c0
65005f40:	mov    BYTE PTR [ebp-0x4],0x2
65005f44:	cmp    DWORD PTR [ebp-0x10],edi
65005f47:	jb     0x65005f55
65005f49:	mov    eax,DWORD PTR [ebp-0x24]
65005f4c:	push   eax
65005f4d:	call   0x65011f02
65005f52:	add    esp,0x4
65005f55:	push   0x65027eac
65005f5a:	push   0x7
65005f5c:	push   0x65027edc
65005f61:	call   0x65006a10
65005f66:	add    esp,0xc
65005f69:	push   eax
65005f6a:	lea    ecx,[ebp-0x28]
65005f6d:	call   0x650026d0
65005f72:	lea    ecx,[ebp-0x28]
65005f75:	push   ecx
65005f76:	lea    edx,[ebp-0x40]
65005f79:	push   edx
65005f7a:	lea    eax,[ebp-0x34]
65005f7d:	push   eax
65005f7e:	mov    BYTE PTR [ebp-0x4],0x37
65005f82:	call   0x650070c0
65005f87:	mov    BYTE PTR [ebp-0x4],0x2
65005f8b:	cmp    DWORD PTR [ebp-0x10],edi
65005f8e:	jb     0x65005f9c
65005f90:	mov    ecx,DWORD PTR [ebp-0x24]
65005f93:	push   ecx
65005f94:	call   0x65011f02
65005f99:	add    esp,0x4
65005f9c:	push   0x65027ee4
65005fa1:	push   0x5
65005fa3:	push   0x65027f1c
65005fa8:	call   0x65006a10
65005fad:	add    esp,0xc
65005fb0:	push   eax
65005fb1:	lea    ecx,[ebp-0x28]
65005fb4:	call   0x650026d0
65005fb9:	lea    edx,[ebp-0x28]
65005fbc:	push   edx
65005fbd:	lea    eax,[ebp-0x40]
65005fc0:	push   eax
65005fc1:	lea    ecx,[ebp-0x34]
65005fc4:	push   ecx
65005fc5:	mov    BYTE PTR [ebp-0x4],0x38
65005fc9:	call   0x650070c0
65005fce:	mov    BYTE PTR [ebp-0x4],0x2
65005fd2:	cmp    DWORD PTR [ebp-0x10],edi
65005fd5:	jb     0x65005fe3
65005fd7:	mov    edx,DWORD PTR [ebp-0x24]
65005fda:	push   edx
65005fdb:	call   0x65011f02
65005fe0:	add    esp,0x4
65005fe3:	push   0x65027f24
65005fe8:	push   0xb
65005fea:	push   0x65027f64
65005fef:	call   0x65006a10
65005ff4:	add    esp,0xc
65005ff7:	push   eax
65005ff8:	lea    ecx,[ebp-0x28]
65005ffb:	call   0x650026d0
65006000:	lea    eax,[ebp-0x28]
65006003:	push   eax
65006004:	lea    ecx,[ebp-0x40]
65006007:	push   ecx
65006008:	lea    edx,[ebp-0x34]
6500600b:	push   edx
6500600c:	mov    BYTE PTR [ebp-0x4],0x39
65006010:	call   0x650070c0
65006015:	mov    BYTE PTR [ebp-0x4],0x2
65006019:	cmp    DWORD PTR [ebp-0x10],edi
6500601c:	jb     0x6500602a
6500601e:	mov    eax,DWORD PTR [ebp-0x24]
65006021:	push   eax
65006022:	call   0x65011f02
65006027:	add    esp,0x4
6500602a:	push   0x65027f70
6500602f:	push   0xc
65006031:	push   0x65027fb0
65006036:	call   0x65006a10
6500603b:	add    esp,0xc
6500603e:	push   eax
6500603f:	lea    ecx,[ebp-0x28]
65006042:	call   0x650026d0
65006047:	lea    ecx,[ebp-0x28]
6500604a:	push   ecx
6500604b:	lea    edx,[ebp-0x40]
6500604e:	push   edx
6500604f:	lea    eax,[ebp-0x34]
65006052:	push   eax
65006053:	mov    BYTE PTR [ebp-0x4],0x3a
65006057:	call   0x650070c0
6500605c:	mov    BYTE PTR [ebp-0x4],0x2
65006060:	cmp    DWORD PTR [ebp-0x10],edi
65006063:	jb     0x65006071
65006065:	mov    ecx,DWORD PTR [ebp-0x24]
65006068:	push   ecx
65006069:	call   0x65011f02
6500606e:	add    esp,0x4
65006071:	push   0x65027fc0
65006076:	push   0x8
65006078:	push   0x65027fe8
6500607d:	call   0x65006a10
65006082:	add    esp,0xc
65006085:	push   eax
65006086:	lea    ecx,[ebp-0x28]
65006089:	call   0x650026d0
6500608e:	lea    edx,[ebp-0x28]
65006091:	push   edx
65006092:	lea    eax,[ebp-0x40]
65006095:	push   eax
65006096:	lea    ecx,[ebp-0x34]
65006099:	push   ecx
6500609a:	mov    BYTE PTR [ebp-0x4],0x3b
6500609e:	call   0x650070c0
650060a3:	mov    BYTE PTR [ebp-0x4],0x2
650060a7:	cmp    DWORD PTR [ebp-0x10],edi
650060aa:	jb     0x650060b8
650060ac:	mov    edx,DWORD PTR [ebp-0x24]
650060af:	push   edx
650060b0:	call   0x65011f02
650060b5:	add    esp,0x4
650060b8:	push   0x65027ff4
650060bd:	push   0xc
650060bf:	push   0x65028018
650060c4:	call   0x65006a10
650060c9:	add    esp,0xc
650060cc:	push   eax
650060cd:	lea    ecx,[ebp-0x28]
650060d0:	call   0x650026d0
650060d5:	lea    eax,[ebp-0x28]
650060d8:	push   eax
650060d9:	lea    ecx,[ebp-0x40]
650060dc:	push   ecx
650060dd:	lea    edx,[ebp-0x34]
650060e0:	push   edx
650060e1:	mov    BYTE PTR [ebp-0x4],0x3c
650060e5:	call   0x650070c0
650060ea:	mov    BYTE PTR [ebp-0x4],0x2
650060ee:	cmp    DWORD PTR [ebp-0x10],edi
650060f1:	jb     0x650060ff
650060f3:	mov    eax,DWORD PTR [ebp-0x24]
650060f6:	push   eax
650060f7:	call   0x65011f02
650060fc:	add    esp,0x4
650060ff:	push   0x65028028
65006104:	push   0xa
65006106:	push   0x65028058
6500610b:	call   0x65006a10
65006110:	add    esp,0xc
65006113:	push   eax
65006114:	lea    ecx,[ebp-0x28]
65006117:	call   0x650026d0
6500611c:	lea    ecx,[ebp-0x28]
6500611f:	push   ecx
65006120:	lea    edx,[ebp-0x40]
65006123:	push   edx
65006124:	lea    eax,[ebp-0x34]
65006127:	push   eax
65006128:	mov    BYTE PTR [ebp-0x4],0x3d
6500612c:	call   0x650070c0
65006131:	mov    BYTE PTR [ebp-0x4],0x2
65006135:	cmp    DWORD PTR [ebp-0x10],edi
65006138:	jb     0x65006146
6500613a:	mov    ecx,DWORD PTR [ebp-0x24]
6500613d:	push   ecx
6500613e:	call   0x65011f02
65006143:	add    esp,0x4
65006146:	lea    edx,[ebp-0x40]
65006149:	push   edx
6500614a:	lea    ecx,[ebp-0x34]
6500614d:	call   0x65003bb0
65006152:	add    esp,0x4
65006155:	mov    ecx,0x650303e0
6500615a:	mov    BYTE PTR [ebp-0x4],0x3e
6500615e:	call   0x65007080
65006163:	lea    eax,[ebp-0x40]
65006166:	mov    BYTE PTR [ebp-0x4],0x2
6500616a:	call   0x65007aa0
6500616f:	lea    eax,[ebp-0x34]
65006172:	mov    BYTE PTR [ebp-0x4],bl
65006175:	call   0x65007aa0
6500617a:	call   DWORD PTR ds:0x6502c06c
65006180:	mov    DWORD PTR [ebp-0x48],eax
65006183:	mov    eax,DWORD PTR [ebp+0x40c]
65006189:	cmp    DWORD PTR [eax-0x4],0x1
6500618d:	jle    0x650061a4
6500618f:	mov    eax,DWORD PTR [eax-0xc]
65006192:	push   eax
65006193:	lea    ecx,[ebp+0x40c]
65006199:	call   0x65001950
6500619e:	mov    eax,DWORD PTR [ebp+0x40c]
650061a4:	cmp    eax,ebx
650061a6:	jne    0x650061ac
650061a8:	xor    eax,eax
650061aa:	jmp    0x650061df
650061ac:	push   eax
650061ad:	call   DWORD PTR ds:0x65024050
650061b3:	add    eax,0x1
650061b6:	cmp    eax,0x3fffffff
650061bb:	jle    0x650061c1
650061bd:	xor    eax,eax
650061bf:	jmp    0x650061df
650061c1:	lea    esi,[eax+eax*1]
650061c4:	mov    eax,esi
650061c6:	call   0x65012e60
650061cb:	mov    ecx,DWORD PTR [ebp-0x48]
650061ce:	mov    edx,DWORD PTR [ebp+0x40c]
650061d4:	mov    eax,esp
650061d6:	push   ecx
650061d7:	push   esi
650061d8:	push   edx
650061d9:	push   eax
650061da:	call   0x65002b40
650061df:	lea    edx,[ebp+0x0]
650061e2:	mov    cl,BYTE PTR [eax]
650061e4:	mov    BYTE PTR [edx],cl
650061e6:	add    eax,0x1
650061e9:	add    edx,0x1
650061ec:	cmp    cl,bl
650061ee:	jne    0x650061e2
650061f0:	lea    eax,[ebp+0x0]
650061f3:	push   eax
650061f4:	call   0x6501eb05
650061f9:	add    esp,0x4
650061fc:	lea    ecx,[ebp+0x0]
650061ff:	push   ecx
65006200:	lea    ecx,[ebp-0x28]
65006203:	call   0x650026d0
65006208:	lea    eax,[ebp-0x28]
6500620b:	mov    esi,0x650303e0
65006210:	mov    BYTE PTR [ebp-0x4],0x3f
65006214:	call   0x65007250
65006219:	test   eax,eax
6500621b:	setne  BYTE PTR [ebp-0x41]
6500621f:	cmp    DWORD PTR [ebp-0x10],edi
65006222:	jb     0x65006230
65006224:	mov    edx,DWORD PTR [ebp-0x24]
65006227:	push   edx
65006228:	call   0x65011f02
6500622d:	add    esp,0x4
65006230:	mov    DWORD PTR [ebp-0x4],0xffffffff
65006237:	mov    eax,DWORD PTR [ebp+0x40c]
6500623d:	add    eax,0xfffffff0
65006240:	mov    DWORD PTR [ebp-0x10],0xf
65006247:	mov    DWORD PTR [ebp-0x14],ebx
6500624a:	mov    BYTE PTR [ebp-0x24],bl
6500624d:	lea    ecx,[eax+0xc]
65006250:	or     edx,0xffffffff
65006253:	lock xadd DWORD PTR [ecx],edx
65006257:	dec    edx
65006258:	test   edx,edx
6500625a:	jg     0x65006266
6500625c:	mov    ecx,DWORD PTR [eax]
6500625e:	mov    edx,DWORD PTR [ecx]
65006260:	push   eax
65006261:	mov    eax,DWORD PTR [edx+0x4]
65006264:	call   eax
65006266:	mov    al,BYTE PTR [ebp-0x41]
65006269:	lea    esp,[ebp-0x58]
6500626c:	mov    ecx,DWORD PTR [ebp-0xc]
6500626f:	mov    DWORD PTR fs:0x0,ecx
65006276:	pop    ecx
65006277:	pop    edi
65006278:	pop    esi
65006279:	pop    ebx
6500627a:	mov    ecx,DWORD PTR [ebp+0x400]
65006280:	xor    ecx,ebp
65006282:	call   0x6501275c
65006287:	add    ebp,0x404
6500628d:	mov    esp,ebp
6500628f:	pop    ebp
65006290:	ret    
65006291:	int3   
65006292:	int3   
65006293:	int3   
65006294:	int3   
65006295:	int3   
65006296:	int3   
65006297:	int3   
65006298:	int3   
65006299:	int3   
6500629a:	int3   
6500629b:	int3   
6500629c:	int3   
6500629d:	int3   
6500629e:	int3   
6500629f:	int3   
650062a0:	push   0xffffffff
650062a2:	push   0x65023299
650062a7:	mov    eax,fs:0x0
650062ad:	push   eax
650062ae:	sub    esp,0x44
650062b1:	push   ebx
650062b2:	push   ebp
650062b3:	push   esi
650062b4:	push   edi
650062b5:	mov    eax,ds:0x6502c09c
650062ba:	xor    eax,esp
650062bc:	push   eax
650062bd:	lea    eax,[esp+0x58]
650062c1:	mov    fs:0x0,eax
650062c7:	xor    edi,edi
650062c9:	mov    DWORD PTR [esp+0x60],edi
650062cd:	mov    DWORD PTR [esp+0x28],edi
650062d1:	call   DWORD PTR ds:0x6502c06c
650062d7:	mov    eax,ds:0x6502d560
650062dc:	mov    edx,DWORD PTR [eax+0xc]
650062df:	mov    ecx,0x6502d560
650062e4:	call   edx
650062e6:	mov    ebx,DWORD PTR [esp+0x68]
650062ea:	add    eax,0x10
650062ed:	mov    DWORD PTR [ebx],eax
650062ef:	push   0x4
650062f1:	push   edi
650062f2:	mov    DWORD PTR [esp+0x68],edi
650062f6:	push   edi
650062f7:	mov    DWORD PTR [esp+0x34],0x1
650062ff:	call   0x6500e700
65006304:	call   eax
65006306:	cmp    eax,edi
65006308:	mov    DWORD PTR [esp+0x1c],eax
6500630c:	je     0x65006494
65006312:	mov    ebp,DWORD PTR ds:0x65024004
65006318:	lea    ecx,[esp+0x20]
6500631c:	push   ecx
6500631d:	lea    edx,[esp+0x1c]
65006321:	push   edx
65006322:	lea    ecx,[esp+0x2c]
65006326:	push   ecx
65006327:	push   0x24
65006329:	lea    edx,[esp+0x44]
6500632d:	push   edx
6500632e:	push   0x3
65006330:	push   0x13f
65006335:	push   eax
65006336:	mov    DWORD PTR [esp+0x40],edi
6500633a:	call   ebp
6500633c:	mov    esi,eax
6500633e:	call   DWORD PTR ds:0x65024044
65006344:	cmp    esi,edi
65006346:	je     0x6500634f
65006348:	cmp    eax,0xea
6500634d:	jne    0x65006394
6500634f:	mov    esi,DWORD PTR [esp+0x24]
65006353:	add    esi,0x24
65006356:	xor    ecx,ecx
65006358:	mov    eax,esi
6500635a:	mov    edx,0x24
6500635f:	mul    edx
65006361:	seto   cl
65006364:	neg    ecx
65006366:	or     ecx,eax
65006368:	push   ecx
65006369:	call   0x65011efd
6500636e:	add    esp,0x4
65006371:	mov    edi,eax
65006373:	lea    eax,[esp+0x20]
65006377:	push   eax
65006378:	mov    eax,DWORD PTR [esp+0x20]
6500637c:	lea    ecx,[esp+0x1c]
65006380:	push   ecx
65006381:	lea    edx,[esp+0x2c]
65006385:	push   edx
65006386:	push   esi
65006387:	push   edi
65006388:	push   0x3
6500638a:	push   0x13f
6500638f:	push   eax
65006390:	call   ebp
65006392:	jmp    0x65006398
65006394:	mov    edi,DWORD PTR [esp+0x2c]
65006398:	xor    ebp,ebp
6500639a:	cmp    DWORD PTR [esp+0x18],ebp
6500639e:	jbe    0x65006490
650063a4:	mov    ecx,DWORD PTR [edi]
650063a6:	push   ecx
650063a7:	lea    ecx,[esp+0x18]
650063ab:	call   0x65002550
650063b0:	mov    DWORD PTR [esp+0x60],0x1
650063b8:	mov    eax,DWORD PTR [esp+0x14]
650063bc:	push   ecx
650063bd:	add    eax,0xfffffff0
650063c0:	mov    DWORD PTR [esp+0x34],esp
650063c4:	mov    esi,esp
650063c6:	push   eax
650063c7:	call   0x65002860
650063cc:	add    eax,0x10
650063cf:	add    esp,0x4
650063d2:	cmp    BYTE PTR [esp+0x70],0x0
650063d7:	mov    DWORD PTR [esi],eax
650063d9:	je     0x650063e9
650063db:	call   0x65004d80
650063e0:	add    esp,0x4
650063e3:	test   al,al
650063e5:	jne    0x650063f5
650063e7:	jmp    0x6500645b
650063e9:	call   0x65003e10
650063ee:	add    esp,0x4
650063f1:	test   al,al
650063f3:	jne    0x6500645b
650063f5:	push   0x65028064
650063fa:	push   0x4
650063fc:	push   0x65028090
65006401:	call   0x65006a10
65006406:	add    esp,0xc
65006409:	push   eax
6500640a:	mov    ecx,ebx
6500640c:	call   0x65002620
65006411:	lea    edx,[esp+0x14]
65006415:	push   edx
65006416:	lea    eax,[esp+0x30]
6500641a:	push   eax
6500641b:	call   0x65003110
65006420:	add    esp,0x8
65006423:	mov    BYTE PTR [esp+0x60],0x2
65006428:	mov    eax,DWORD PTR [eax]
6500642a:	mov    ecx,DWORD PTR [eax-0xc]
6500642d:	push   ecx
6500642e:	push   eax
6500642f:	mov    ecx,ebx
65006431:	call   0x650029a0
65006436:	mov    BYTE PTR [esp+0x60],0x1
6500643b:	mov    eax,DWORD PTR [esp+0x2c]
6500643f:	add    eax,0xfffffff0
65006442:	lea    ecx,[eax+0xc]
65006445:	or     edx,0xffffffff
65006448:	lock xadd DWORD PTR [ecx],edx
6500644c:	dec    edx
6500644d:	test   edx,edx
6500644f:	jg     0x6500645b
65006451:	mov    ecx,DWORD PTR [eax]
65006453:	mov    edx,DWORD PTR [ecx]
65006455:	push   eax
65006456:	mov    eax,DWORD PTR [edx+0x4]
65006459:	call   eax
6500645b:	mov    BYTE PTR [esp+0x60],0x0
65006460:	mov    eax,DWORD PTR [esp+0x14]
65006464:	add    eax,0xfffffff0
65006467:	lea    ecx,[eax+0xc]
6500646a:	or     edx,0xffffffff
6500646d:	lock xadd DWORD PTR [ecx],edx
65006471:	dec    edx
65006472:	test   edx,edx
65006474:	jg     0x65006480
65006476:	mov    ecx,DWORD PTR [eax]
65006478:	mov    edx,DWORD PTR [ecx]
6500647a:	push   eax
6500647b:	mov    eax,DWORD PTR [edx+0x4]
6500647e:	call   eax
65006480:	add    ebp,0x1
65006483:	add    edi,0x24
65006486:	cmp    ebp,DWORD PTR [esp+0x18]
6500648a:	jb     0x650063a4
65006490:	mov    eax,DWORD PTR [esp+0x1c]
65006494:	push   eax
65006495:	call   0x6500e790
6500649a:	call   eax
6500649c:	mov    eax,ebx
6500649e:	mov    ecx,DWORD PTR [esp+0x58]
650064a2:	mov    DWORD PTR fs:0x0,ecx
650064a9:	pop    ecx
650064aa:	pop    edi
650064ab:	pop    esi
650064ac:	pop    ebp
650064ad:	pop    ebx
650064ae:	add    esp,0x50
650064b1:	ret    
650064b2:	int3   
650064b3:	int3   
650064b4:	int3   
650064b5:	int3   
650064b6:	int3   
650064b7:	int3   
650064b8:	int3   
650064b9:	int3   
650064ba:	int3   
650064bb:	int3   
650064bc:	int3   
650064bd:	int3   
650064be:	int3   
650064bf:	int3   
650064c0:	push   ebp
650064c1:	mov    ebp,esp
650064c3:	push   0xffffffff
650064c5:	push   0x65022c00
650064ca:	mov    eax,fs:0x0
650064d0:	push   eax
650064d1:	sub    esp,0x15c
650064d7:	mov    eax,ds:0x6502c09c
650064dc:	xor    eax,ebp
650064de:	mov    DWORD PTR [ebp-0x14],eax
650064e1:	push   ebx
650064e2:	push   esi
650064e3:	push   edi
650064e4:	push   eax
650064e5:	lea    eax,[ebp-0xc]
650064e8:	mov    fs:0x0,eax
650064ee:	mov    DWORD PTR [ebp-0x10],esp
650064f1:	mov    edi,DWORD PTR [ebp+0x8]
650064f4:	push   0xa0
650064f9:	lea    eax,[ebp-0x154]
650064ff:	push   eax
65006500:	push   0x7d0
65006505:	push   0x65000000
6500650a:	mov    DWORD PTR [ebp-0x4],0x0
65006511:	call   DWORD PTR ds:0x650241b4
65006517:	test   eax,eax
65006519:	je     0x65006560
6500651b:	push   ecx
6500651c:	lea    edx,[ebp-0x154]
65006522:	mov    ecx,esp
65006524:	mov    DWORD PTR [ebp-0x158],esp
6500652a:	push   edx
6500652b:	call   0x65002550
65006530:	lea    esi,[ebp-0x168]
65006536:	call   0x65002f10
6500653b:	mov    ecx,DWORD PTR [eax]
6500653d:	mov    DWORD PTR [edi],ecx
6500653f:	mov    edx,DWORD PTR [eax+0x4]
65006542:	mov    DWORD PTR [edi+0x4],edx
65006545:	mov    ecx,DWORD PTR [eax+0x8]
65006548:	mov    DWORD PTR [edi+0x8],ecx
6500654b:	mov    edx,DWORD PTR [eax+0xc]
6500654e:	add    esp,0x4
65006551:	mov    DWORD PTR [edi+0xc],edx
65006554:	mov    al,0x1
65006556:	jmp    0x65006583
65006558:	mov    eax,0x6500655e
6500655d:	ret    
6500655e:	jmp    0x65006581
65006560:	mov    eax,ds:0x65024ae4
65006565:	mov    DWORD PTR [edi],eax
65006567:	mov    ecx,DWORD PTR ds:0x65024ae8
6500656d:	mov    DWORD PTR [edi+0x4],ecx
65006570:	mov    edx,DWORD PTR ds:0x65024aec
65006576:	mov    DWORD PTR [edi+0x8],edx
65006579:	mov    eax,ds:0x65024af0
6500657e:	mov    DWORD PTR [edi+0xc],eax
65006581:	xor    al,al
65006583:	mov    ecx,DWORD PTR [ebp-0xc]
65006586:	mov    DWORD PTR fs:0x0,ecx
6500658d:	pop    ecx
6500658e:	pop    edi
6500658f:	pop    esi
65006590:	pop    ebx
65006591:	mov    ecx,DWORD PTR [ebp-0x14]
65006594:	xor    ecx,ebp
65006596:	call   0x6501275c
6500659b:	mov    esp,ebp
6500659d:	pop    ebp
6500659e:	ret    
6500659f:	int3   
650065a0:	sub    esp,0x118
650065a6:	mov    eax,ds:0x6502c09c
650065ab:	xor    eax,esp
650065ad:	mov    DWORD PTR [esp+0x114],eax
650065b4:	push   esi
650065b5:	push   0x110
650065ba:	lea    eax,[esp+0xc]
650065be:	push   0x0
650065c0:	push   eax
650065c1:	call   0x65012de0
650065c6:	mov    edx,DWORD PTR ds:0x6502d560
650065cc:	mov    eax,DWORD PTR [edx+0xc]
650065cf:	add    esp,0xc
650065d2:	mov    ecx,0x6502d560
650065d7:	mov    DWORD PTR [esp+0x4],0x114
650065df:	call   eax
650065e1:	lea    ecx,[esp+0x4]
650065e5:	mov    esi,eax
650065e7:	push   ecx
650065e8:	add    esi,0x10
650065eb:	call   DWORD PTR ds:0x65024068
650065f1:	test   eax,eax
650065f3:	je     0x65006635
650065f5:	mov    edx,DWORD PTR [esp+0x8]
650065f9:	mov    eax,DWORD PTR [esp+0xc]
650065fd:	mov    DWORD PTR [edi],edx
650065ff:	mov    DWORD PTR [ebx],eax
65006601:	lea    eax,[esi-0x10]
65006604:	lea    ecx,[eax+0xc]
65006607:	or     edx,0xffffffff
6500660a:	lock xadd DWORD PTR [ecx],edx
6500660e:	dec    edx
6500660f:	test   edx,edx
65006611:	jg     0x6500661d
65006613:	mov    ecx,DWORD PTR [eax]
65006615:	mov    edx,DWORD PTR [ecx]
65006617:	push   eax
65006618:	mov    eax,DWORD PTR [edx+0x4]
6500661b:	call   eax
6500661d:	mov    al,0x1
6500661f:	pop    esi
65006620:	mov    ecx,DWORD PTR [esp+0x114]
65006627:	xor    ecx,esp
65006629:	call   0x6501275c
6500662e:	add    esp,0x118
65006634:	ret    
65006635:	lea    eax,[esi-0x10]
65006638:	lea    ecx,[eax+0xc]
6500663b:	or     edx,0xffffffff
6500663e:	lock xadd DWORD PTR [ecx],edx
65006642:	dec    edx
65006643:	test   edx,edx
65006645:	jg     0x65006651
65006647:	mov    ecx,DWORD PTR [eax]
65006649:	mov    edx,DWORD PTR [ecx]
6500664b:	push   eax
6500664c:	mov    eax,DWORD PTR [edx+0x4]
6500664f:	call   eax
65006651:	mov    ecx,DWORD PTR [esp+0x118]
65006658:	pop    esi
65006659:	xor    ecx,esp
6500665b:	xor    al,al
6500665d:	call   0x6501275c
65006662:	add    esp,0x118
65006668:	ret    
65006669:	int3   
6500666a:	int3   
6500666b:	int3   
6500666c:	int3   
6500666d:	int3   
6500666e:	int3   
6500666f:	int3   
65006670:	push   ebp
65006671:	mov    ebp,esp
65006673:	and    esp,0xfffffff8
65006676:	push   0xffffffff
65006678:	push   0x65022bd8
6500667d:	mov    eax,fs:0x0
65006683:	push   eax
65006684:	sub    esp,0x14
65006687:	push   ebx
65006688:	push   edi
65006689:	mov    eax,ds:0x6502c09c
6500668e:	xor    eax,esp
65006690:	push   eax
65006691:	lea    eax,[esp+0x20]
65006695:	mov    fs:0x0,eax
6500669b:	cmp    DWORD PTR ds:0x65030368,0x0
650066a2:	jne    0x65006755
650066a8:	push   0x65028098
650066ad:	push   0x12
650066af:	push   0x650280d8
650066b4:	mov    DWORD PTR ds:0x65030368,0xc
650066be:	mov    DWORD PTR ds:0x65030370,0x0
650066c8:	call   0x65006d00
650066cd:	add    esp,0xc
650066d0:	push   eax
650066d1:	lea    ecx,[esp+0x14]
650066d5:	call   0x65002550
650066da:	lea    ebx,[esp+0x18]
650066de:	lea    edi,[esp+0x14]
650066e2:	mov    DWORD PTR [esp+0x28],0x0
650066ea:	call   0x650065a0
650066ef:	test   al,al
650066f1:	je     0x65006718
650066f3:	cmp    DWORD PTR [esp+0x14],0x6
650066f8:	jb     0x65006718
650066fa:	push   0x65028100
650066ff:	push   0xf
65006701:	push   0x65028128
65006706:	call   0x65006d00
6500670b:	add    esp,0xc
6500670e:	push   eax
6500670f:	lea    ecx,[esp+0x14]
65006713:	call   0x650069d0
65006718:	mov    eax,DWORD PTR [esp+0x10]
6500671c:	push   0x0
6500671e:	push   0x6503036c
65006723:	push   0x1
65006725:	push   eax
65006726:	call   0x6500e680
6500672b:	call   eax
6500672d:	mov    DWORD PTR [esp+0x28],0xffffffff
65006735:	mov    eax,DWORD PTR [esp+0x10]
65006739:	add    eax,0xfffffff0
6500673c:	lea    ecx,[eax+0xc]
6500673f:	or     edx,0xffffffff
65006742:	lock xadd DWORD PTR [ecx],edx
65006746:	dec    edx
65006747:	test   edx,edx
65006749:	jg     0x65006755
6500674b:	mov    ecx,DWORD PTR [eax]
6500674d:	mov    edx,DWORD PTR [ecx]
6500674f:	push   eax
65006750:	mov    eax,DWORD PTR [edx+0x4]
65006753:	call   eax
65006755:	mov    eax,0x65030368
6500675a:	mov    ecx,DWORD PTR [esp+0x20]
6500675e:	mov    DWORD PTR fs:0x0,ecx
65006765:	pop    ecx
65006766:	pop    edi
65006767:	pop    ebx
65006768:	mov    esp,ebp
6500676a:	pop    ebp
6500676b:	ret    
6500676c:	int3   
6500676d:	int3   
6500676e:	int3   
6500676f:	int3   
65006770:	push   0xffffffff
65006772:	push   0x65022ba8
65006777:	mov    eax,fs:0x0
6500677d:	push   eax
6500677e:	push   ecx
6500677f:	push   esi
65006780:	push   edi
65006781:	mov    eax,ds:0x6502c09c
65006786:	xor    eax,esp
65006788:	push   eax
65006789:	lea    eax,[esp+0x10]
6500678d:	mov    fs:0x0,eax
65006793:	mov    esi,ecx
65006795:	mov    DWORD PTR [esp+0xc],esi
65006799:	mov    eax,ds:0x6502d560
6500679e:	mov    edx,DWORD PTR [eax+0xc]
650067a1:	mov    ecx,0x6502d560
650067a6:	call   edx
650067a8:	add    eax,0x10
650067ab:	mov    DWORD PTR [esi],eax
650067ad:	mov    eax,DWORD PTR [esp+0x20]
650067b1:	test   eax,eax
650067b3:	mov    DWORD PTR [esp+0x18],0x0
650067bb:	je     0x650067e1
650067bd:	test   eax,0xffff0000
650067c2:	jne    0x650067e1
650067c4:	movzx  edi,ax
650067c7:	push   0x0
650067c9:	push   edi
650067ca:	call   0x65001fa0
650067cf:	add    esp,0x8
650067d2:	test   eax,eax
650067d4:	je     0x650067e9
650067d6:	push   edi
650067d7:	push   eax
650067d8:	mov    ecx,esi
650067da:	call   0x650028d0
650067df:	jmp    0x650067e9
650067e1:	push   eax
650067e2:	mov    ecx,esi
650067e4:	call   0x650027c0
650067e9:	mov    eax,esi
650067eb:	mov    ecx,DWORD PTR [esp+0x10]
650067ef:	mov    DWORD PTR fs:0x0,ecx
650067f6:	pop    ecx
650067f7:	pop    edi
650067f8:	pop    esi
650067f9:	add    esp,0x10
650067fc:	ret    0x4
650067ff:	int3   
65006800:	mov    eax,DWORD PTR [edi]
65006802:	mov    edx,DWORD PTR [eax-0x8]
65006805:	push   ebx
65006806:	mov    ebx,DWORD PTR [eax-0xc]
65006809:	push   esi
6500680a:	mov    ecx,0x1
6500680f:	sub    ecx,DWORD PTR [eax-0x4]
65006812:	lea    esi,[ebx+0x1]
65006815:	sub    edx,esi
65006817:	or     ecx,edx
65006819:	jge    0x65006823
6500681b:	push   esi
6500681c:	mov    ecx,edi
6500681e:	call   0x65001e00
65006823:	test   esi,esi
65006825:	movsx  ax,BYTE PTR [esp+0xc]
6500682b:	mov    ecx,DWORD PTR [edi]
6500682d:	mov    WORD PTR [ecx+ebx*2],ax
65006831:	jl     0x6500684c
65006833:	mov    eax,DWORD PTR [edi]
65006835:	cmp    esi,DWORD PTR [eax-0x8]
65006838:	jg     0x6500684c
6500683a:	mov    DWORD PTR [eax-0xc],esi
6500683d:	mov    edx,DWORD PTR [edi]
6500683f:	mov    WORD PTR [edx+esi*2],0x0
65006845:	pop    esi
65006846:	mov    eax,edi
65006848:	pop    ebx
65006849:	ret    0x4
6500684c:	push   0x80070057
65006851:	call   0x65001040
65006856:	int3   
65006857:	int3   
65006858:	int3   
65006859:	int3   
6500685a:	int3   
6500685b:	int3   
6500685c:	int3   
6500685d:	int3   
6500685e:	int3   
6500685f:	int3   
65006860:	mov    eax,DWORD PTR [edi]
65006862:	mov    edx,DWORD PTR [eax-0x8]
65006865:	push   ebx
65006866:	mov    ebx,DWORD PTR [eax-0xc]
65006869:	push   esi
6500686a:	mov    ecx,0x1
6500686f:	sub    ecx,DWORD PTR [eax-0x4]
65006872:	lea    esi,[ebx+0x1]
65006875:	sub    edx,esi
65006877:	or     ecx,edx
65006879:	jge    0x65006883
6500687b:	push   esi
6500687c:	mov    ecx,edi
6500687e:	call   0x65001e00
65006883:	test   esi,esi
65006885:	mov    eax,DWORD PTR [edi]
65006887:	mov    WORD PTR [eax+ebx*2],0x5c
6500688d:	jl     0x650068a6
6500688f:	mov    eax,DWORD PTR [edi]
65006891:	cmp    esi,DWORD PTR [eax-0x8]
65006894:	jg     0x650068a6
65006896:	mov    DWORD PTR [eax-0xc],esi
65006899:	mov    ecx,DWORD PTR [edi]
6500689b:	mov    WORD PTR [ecx+esi*2],0x0
650068a1:	pop    esi
650068a2:	mov    eax,edi
650068a4:	pop    ebx
650068a5:	ret    
650068a6:	push   0x80070057
650068ab:	call   0x65001040
650068b0:	int3   
650068b1:	int3   
650068b2:	int3   
650068b3:	int3   
650068b4:	int3   
650068b5:	int3   
650068b6:	int3   
650068b7:	int3   
650068b8:	int3   
650068b9:	int3   
650068ba:	int3   
650068bb:	int3   
650068bc:	int3   
650068bd:	int3   
650068be:	int3   
650068bf:	int3   
650068c0:	push   esi
650068c1:	push   edi
650068c2:	mov    edi,DWORD PTR [ebx]
650068c4:	mov    ecx,edi
650068c6:	movzx  eax,WORD PTR [ecx]
650068c9:	xor    edx,edx
650068cb:	test   ax,ax
650068ce:	je     0x65006925
650068d0:	cmp    ax,0x7d
650068d4:	jne    0x650068de
650068d6:	test   edx,edx
650068d8:	jne    0x650068e0
650068da:	mov    edx,ecx
650068dc:	jmp    0x650068e0
650068de:	xor    edx,edx
650068e0:	movzx  eax,WORD PTR [ecx+0x2]
650068e4:	add    ecx,0x2
650068e7:	test   ax,ax
650068ea:	jne    0x650068d0
650068ec:	test   edx,edx
650068ee:	je     0x65006925
650068f0:	mov    ecx,DWORD PTR [edi-0x8]
650068f3:	sub    edx,edi
650068f5:	sar    edx,1
650068f7:	mov    eax,0x1
650068fc:	sub    eax,DWORD PTR [edi-0x4]
650068ff:	mov    esi,edx
65006901:	sub    ecx,esi
65006903:	or     eax,ecx
65006905:	jge    0x6500690f
65006907:	push   esi
65006908:	mov    ecx,ebx
6500690a:	call   0x65001e00
6500690f:	test   esi,esi
65006911:	jl     0x6500692a
65006913:	mov    eax,DWORD PTR [ebx]
65006915:	cmp    esi,DWORD PTR [eax-0x8]
65006918:	jg     0x6500692a
6500691a:	mov    DWORD PTR [eax-0xc],esi
6500691d:	mov    edx,DWORD PTR [ebx]
6500691f:	mov    WORD PTR [edx+esi*2],0x0
65006925:	pop    edi
65006926:	mov    eax,ebx
65006928:	pop    esi
65006929:	ret    
6500692a:	push   0x80070057
6500692f:	call   0x65001040
65006934:	int3   
65006935:	int3   
65006936:	int3   
65006937:	int3   
65006938:	int3   
65006939:	int3   
6500693a:	int3   
6500693b:	int3   
6500693c:	int3   
6500693d:	int3   
6500693e:	int3   
6500693f:	int3   
65006940:	mov    ecx,DWORD PTR [ebx]
65006942:	mov    eax,ecx
65006944:	cmp    WORD PTR [eax],0x7b
65006948:	jne    0x65006959
6500694a:	lea    ebx,[ebx+0x0]
65006950:	add    eax,0x2
65006953:	cmp    WORD PTR [eax],0x7b
65006957:	je     0x65006950
65006959:	cmp    eax,ecx
6500695b:	push   esi
6500695c:	je     0x650069b8
6500695e:	sub    eax,ecx
65006960:	sar    eax,1
65006962:	push   edi
65006963:	mov    edx,0x1
65006968:	sub    edx,DWORD PTR [ecx-0x4]
6500696b:	mov    edi,eax
6500696d:	mov    eax,DWORD PTR [ecx-0xc]
65006970:	mov    ecx,DWORD PTR [ecx-0x8]
65006973:	sub    ecx,eax
65006975:	or     edx,ecx
65006977:	jge    0x65006981
65006979:	push   eax
6500697a:	mov    ecx,ebx
6500697c:	call   0x65001e00
65006981:	mov    eax,DWORD PTR [ebx]
65006983:	mov    esi,DWORD PTR [eax-0xc]
65006986:	sub    esi,edi
65006988:	lea    ecx,[esi+esi*1+0x2]
6500698c:	push   ecx
6500698d:	lea    edx,[eax+edi*2]
65006990:	push   edx
65006991:	push   ecx
65006992:	push   eax
65006993:	call   0x650120ee
65006998:	push   eax
65006999:	call   0x65001e90
6500699e:	add    esp,0x14
650069a1:	test   esi,esi
650069a3:	pop    edi
650069a4:	jl     0x650069bc
650069a6:	mov    eax,DWORD PTR [ebx]
650069a8:	cmp    esi,DWORD PTR [eax-0x8]
650069ab:	jg     0x650069bc
650069ad:	mov    DWORD PTR [eax-0xc],esi
650069b0:	mov    eax,DWORD PTR [ebx]
650069b2:	mov    WORD PTR [eax+esi*2],0x0
650069b8:	mov    eax,ebx
650069ba:	pop    esi
650069bb:	ret    
650069bc:	push   0x80070057
650069c1:	call   0x65001040
650069c6:	int3   
650069c7:	int3   
650069c8:	int3   
650069c9:	int3   
650069ca:	int3   
650069cb:	int3   
650069cc:	int3   
650069cd:	int3   
650069ce:	int3   
650069cf:	int3   
650069d0:	push   esi
650069d1:	mov    esi,DWORD PTR [esp+0x8]
650069d5:	test   esi,esi
650069d7:	jne    0x650069e6
650069d9:	xor    eax,eax
650069db:	push   eax
650069dc:	push   esi
650069dd:	call   0x650029a0
650069e2:	pop    esi
650069e3:	ret    0x4
650069e6:	mov    eax,esi
650069e8:	push   edi
650069e9:	lea    edi,[eax+0x2]
650069ec:	lea    esp,[esp+0x0]
650069f0:	mov    dx,WORD PTR [eax]
650069f3:	add    eax,0x2
650069f6:	test   dx,dx
650069f9:	jne    0x650069f0
650069fb:	sub    eax,edi
650069fd:	pop    edi
650069fe:	sar    eax,1
65006a00:	push   eax
65006a01:	push   esi
65006a02:	call   0x650029a0
65006a07:	pop    esi
65006a08:	ret    0x4
65006a0b:	int3   
65006a0c:	int3   
65006a0d:	int3   
65006a0e:	int3   
65006a0f:	int3   
65006a10:	push   ebp
65006a11:	mov    ebp,esp
65006a13:	and    esp,0xfffffff8
65006a16:	push   0xffffffff
65006a18:	push   0x65022951
65006a1d:	mov    eax,fs:0x0
65006a23:	push   eax
65006a24:	sub    esp,0xd0
65006a2a:	mov    eax,ds:0x6502c09c
65006a2f:	xor    eax,esp
65006a31:	mov    DWORD PTR [esp+0xc8],eax
65006a38:	push   ebx
65006a39:	push   esi
65006a3a:	push   edi
65006a3b:	mov    eax,ds:0x6502c09c
65006a40:	xor    eax,esp
65006a42:	push   eax
65006a43:	lea    eax,[esp+0xe0]
65006a4a:	mov    fs:0x0,eax
65006a50:	mov    eax,ds:0x65030290
65006a55:	mov    esi,DWORD PTR [ebp+0x8]
65006a58:	xor    ebx,ebx
65006a5a:	cmp    eax,ebx
65006a5c:	mov    DWORD PTR [esp+0x28],esi
65006a60:	jne    0x65006a70
65006a62:	push   ebx
65006a63:	push   ebx
65006a64:	push   ebx
65006a65:	call   DWORD PTR ds:0x65024060
65006a6b:	mov    ds:0x65030290,eax
65006a70:	push   0xffffffff
65006a72:	push   eax
65006a73:	call   DWORD PTR ds:0x650240b4
65006a79:	test   eax,eax
65006a7b:	je     0x65006a84
65006a7d:	mov    eax,esi
65006a7f:	jmp    0x65006ccf
65006a84:	mov    eax,DWORD PTR [ebp+0xc]
65006a87:	push   eax
65006a88:	mov    edi,0xf
65006a8d:	push   esi
65006a8e:	lea    ecx,[esp+0xa8]
65006a95:	mov    DWORD PTR [esp+0xc0],edi
65006a9c:	mov    DWORD PTR [esp+0xbc],ebx
65006aa3:	mov    BYTE PTR [esp+0xac],bl
65006aaa:	call   0x65001860
65006aaf:	lea    ecx,[esp+0xa0]
65006ab6:	push   ecx
65006ab7:	lea    edx,[esp+0x18]
65006abb:	push   edx
65006abc:	mov    DWORD PTR [esp+0xf0],ebx
65006ac3:	call   0x650073e0
65006ac8:	mov    ecx,eax
65006aca:	call   0x65007ce0
65006acf:	call   0x650073e0
65006ad4:	mov    esi,DWORD PTR [esp+0x14]
65006ad8:	cmp    esi,ebx
65006ada:	mov    ecx,DWORD PTR [eax+0x4]
65006add:	mov    DWORD PTR [esp+0x20],ecx
65006ae1:	je     0x65006ae7
65006ae3:	cmp    esi,eax
65006ae5:	je     0x65006aec
65006ae7:	call   0x65012273
65006aec:	mov    edx,DWORD PTR [esp+0x20]
65006af0:	cmp    DWORD PTR [esp+0x18],edx
65006af4:	jne    0x65006bf8
65006afa:	sub    esp,0x1c
65006afd:	mov    ecx,esp
65006aff:	mov    DWORD PTR [esp+0x48],esp
65006b03:	push   0xffffffff
65006b05:	push   ebx
65006b06:	lea    eax,[esp+0xc4]
65006b0d:	mov    DWORD PTR [ecx+0x18],edi
65006b10:	mov    DWORD PTR [ecx+0x14],ebx
65006b13:	push   eax
65006b14:	mov    BYTE PTR [ecx+0x4],bl
65006b17:	call   0x65001780
65006b1c:	lea    ecx,[esp+0xd8]
65006b23:	push   ecx
65006b24:	call   0x65007470
65006b29:	add    esp,0x4
65006b2c:	mov    ecx,esp
65006b2e:	mov    BYTE PTR [esp+0x104],0x1
65006b36:	mov    DWORD PTR [esp+0x48],esp
65006b3a:	push   0xffffffff
65006b3c:	push   ebx
65006b3d:	lea    edx,[esp+0xe0]
65006b44:	mov    DWORD PTR [ecx+0x18],edi
65006b47:	mov    DWORD PTR [ecx+0x14],ebx
65006b4a:	push   edx
65006b4b:	mov    BYTE PTR [ecx+0x4],bl
65006b4e:	call   0x65001780
65006b53:	sub    esp,0x1c
65006b56:	mov    ecx,esp
65006b58:	mov    BYTE PTR [esp+0x120],0x2
65006b60:	mov    DWORD PTR [esp+0x54],esp
65006b64:	push   0xffffffff
65006b66:	push   ebx
65006b67:	lea    eax,[esp+0xe0]
65006b6e:	mov    DWORD PTR [ecx+0x18],edi
65006b71:	mov    DWORD PTR [ecx+0x14],ebx
65006b74:	push   eax
65006b75:	mov    BYTE PTR [ecx+0x4],bl
65006b78:	call   0x65001780
65006b7d:	lea    ecx,[esp+0xa0]
65006b84:	push   ecx
65006b85:	mov    BYTE PTR [esp+0x124],0x1
65006b8d:	call   0x65009f00
65006b92:	add    esp,0x3c
65006b95:	push   eax
65006b96:	lea    ecx,[esp+0x34]
65006b9a:	mov    BYTE PTR [esp+0xec],0x3
65006ba2:	call   0x65009fa0
65006ba7:	lea    edx,[esp+0x30]
65006bab:	push   edx
65006bac:	lea    eax,[esp+0x20]
65006bb0:	push   eax
65006bb1:	mov    BYTE PTR [esp+0xf0],0x4
65006bb9:	call   0x650073e0
65006bbe:	mov    ecx,eax
65006bc0:	call   0x65007b50
65006bc5:	lea    ecx,[esp+0x30]
65006bc9:	call   0x6500f820
65006bce:	lea    ecx,[esp+0x68]
65006bd2:	call   0x6500f820
65006bd7:	mov    BYTE PTR [esp+0xe8],bl
65006bde:	cmp    DWORD PTR [esp+0xd4],0x10
65006be6:	jb     0x65006bf8
65006be8:	mov    ecx,DWORD PTR [esp+0xc0]
65006bef:	push   ecx
65006bf0:	call   0x65011f02
65006bf5:	add    esp,0x4
65006bf8:	mov    edx,DWORD PTR [ebp+0x10]
65006bfb:	movzx  eax,BYTE PTR [edx]
65006bfe:	cmp    eax,0x100
65006c03:	jge    0x65006c27
65006c05:	lea    ecx,[esp+0xa0]
65006c0c:	push   ecx
65006c0d:	lea    edx,[esp+0x20]
65006c11:	push   edx
65006c12:	call   0x650073e0
65006c17:	mov    ecx,eax
65006c19:	call   0x65007ce0
65006c1e:	mov    esi,DWORD PTR [eax]
65006c20:	mov    eax,DWORD PTR [eax+0x4]
65006c23:	mov    DWORD PTR [esp+0x18],eax
65006c27:	call   0x650073e0
65006c2c:	cmp    esi,ebx
65006c2e:	mov    ecx,DWORD PTR [eax+0x4]
65006c31:	mov    DWORD PTR [esp+0x20],ecx
65006c35:	je     0x65006c3b
65006c37:	cmp    esi,eax
65006c39:	je     0x65006c40
65006c3b:	call   0x65012273
65006c40:	mov    edi,DWORD PTR [esp+0x18]
65006c44:	cmp    edi,DWORD PTR [esp+0x20]
65006c48:	je     0x65006c6d
65006c4a:	cmp    esi,ebx
65006c4c:	jne    0x65006c53
65006c4e:	call   0x65012273
65006c53:	cmp    edi,DWORD PTR [esi+0x4]
65006c56:	jne    0x65006c5d
65006c58:	call   0x65012273
65006c5d:	cmp    DWORD PTR [edi+0x40],0x10
65006c61:	jb     0x65006c68
65006c63:	mov    edi,DWORD PTR [edi+0x2c]
65006c66:	jmp    0x65006c71
65006c68:	add    edi,0x2c
65006c6b:	jmp    0x65006c71
65006c6d:	mov    edi,DWORD PTR [esp+0x28]
65006c71:	cmp    DWORD PTR ds:0x6502e060,ebx
65006c77:	jne    0x65006c95
65006c79:	push   0x65026578
65006c7e:	push   0x65026588
65006c83:	call   DWORD PTR ds:0x65024074
65006c89:	push   eax
65006c8a:	call   DWORD PTR ds:0x65024014
65006c90:	mov    ds:0x6502e060,eax
65006c95:	mov    eax,ds:0x65030290
65006c9a:	cmp    eax,ebx
65006c9c:	jne    0x65006cac
65006c9e:	push   ebx
65006c9f:	push   ebx
65006ca0:	push   ebx
65006ca1:	call   DWORD PTR ds:0x65024060
65006ca7:	mov    ds:0x65030290,eax
65006cac:	push   eax
65006cad:	call   DWORD PTR ds:0x6502e060
65006cb3:	cmp    DWORD PTR [esp+0xb8],0x10
65006cbb:	jb     0x65006ccd
65006cbd:	mov    edx,DWORD PTR [esp+0xa4]
65006cc4:	push   edx
65006cc5:	call   0x65011f02
65006cca:	add    esp,0x4
65006ccd:	mov    eax,edi
65006ccf:	mov    ecx,DWORD PTR [esp+0xe0]
65006cd6:	mov    DWORD PTR fs:0x0,ecx
65006cdd:	pop    ecx
65006cde:	pop    edi
65006cdf:	pop    esi
65006ce0:	pop    ebx
65006ce1:	mov    ecx,DWORD PTR [esp+0xc8]
65006ce8:	xor    ecx,esp
65006cea:	call   0x6501275c
65006cef:	mov    esp,ebp
65006cf1:	pop    ebp
65006cf2:	ret    
65006cf3:	int3   
65006cf4:	int3   
65006cf5:	int3   
65006cf6:	int3   
65006cf7:	int3   
65006cf8:	int3   
65006cf9:	int3   
65006cfa:	int3   
65006cfb:	int3   
65006cfc:	int3   
65006cfd:	int3   
65006cfe:	int3   
65006cff:	int3   
65006d00:	push   ebp
65006d01:	mov    ebp,esp
65006d03:	and    esp,0xfffffff8
65006d06:	push   0xffffffff
65006d08:	push   0x650228f1
65006d0d:	mov    eax,fs:0x0
65006d13:	push   eax
65006d14:	sub    esp,0xd0
65006d1a:	mov    eax,ds:0x6502c09c
65006d1f:	xor    eax,esp
65006d21:	mov    DWORD PTR [esp+0xc8],eax
65006d28:	push   ebx
65006d29:	push   esi
65006d2a:	push   edi
65006d2b:	mov    eax,ds:0x6502c09c
65006d30:	xor    eax,esp
65006d32:	push   eax
65006d33:	lea    eax,[esp+0xe0]
65006d3a:	mov    fs:0x0,eax
65006d40:	mov    eax,ds:0x65030290
65006d45:	mov    esi,DWORD PTR [ebp+0x8]
65006d48:	xor    ebx,ebx
65006d4a:	cmp    eax,ebx
65006d4c:	mov    DWORD PTR [esp+0x28],esi
65006d50:	jne    0x65006d60
65006d52:	push   ebx
65006d53:	push   ebx
65006d54:	push   ebx
65006d55:	call   DWORD PTR ds:0x65024060
65006d5b:	mov    ds:0x65030290,eax
65006d60:	push   0xffffffff
65006d62:	push   eax
65006d63:	call   DWORD PTR ds:0x650240b4
65006d69:	test   eax,eax
65006d6b:	je     0x65006d74
65006d6d:	mov    eax,esi
65006d6f:	jmp    0x65006fc3
65006d74:	mov    eax,DWORD PTR [ebp+0xc]
65006d77:	push   eax
65006d78:	mov    edi,0x7
65006d7d:	push   esi
65006d7e:	lea    ecx,[esp+0xa8]
65006d85:	mov    DWORD PTR [esp+0xc0],edi
65006d8c:	mov    DWORD PTR [esp+0xbc],ebx
65006d93:	mov    WORD PTR [esp+0xac],bx
65006d9b:	call   0x65008800
65006da0:	lea    ecx,[esp+0xa0]
65006da7:	push   ecx
65006da8:	lea    edx,[esp+0x18]
65006dac:	push   edx
65006dad:	mov    DWORD PTR [esp+0xf0],ebx
65006db4:	call   0x65007540
65006db9:	mov    ecx,eax
65006dbb:	call   0x65007ea0
65006dc0:	call   0x65007540
65006dc5:	mov    esi,DWORD PTR [esp+0x14]
65006dc9:	cmp    esi,ebx
65006dcb:	mov    ecx,DWORD PTR [eax+0x4]
65006dce:	mov    DWORD PTR [esp+0x20],ecx
65006dd2:	je     0x65006dd8
65006dd4:	cmp    esi,eax
65006dd6:	je     0x65006ddd
65006dd8:	call   0x65012273
65006ddd:	mov    edx,DWORD PTR [esp+0x20]
65006de1:	cmp    DWORD PTR [esp+0x18],edx
65006de5:	jne    0x65006eec
65006deb:	sub    esp,0x1c
65006dee:	mov    ecx,esp
65006df0:	mov    DWORD PTR [esp+0x48],esp
65006df4:	push   0xffffffff
65006df6:	push   ebx
65006df7:	lea    eax,[esp+0xc4]
65006dfe:	mov    DWORD PTR [ecx+0x18],edi
65006e01:	mov    DWORD PTR [ecx+0x14],ebx
65006e04:	push   eax
65006e05:	mov    WORD PTR [ecx+0x4],bx
65006e09:	call   0x65008710
65006e0e:	lea    ecx,[esp+0xd8]
65006e15:	push   ecx
65006e16:	call   0x650075d0
65006e1b:	add    esp,0x4
65006e1e:	mov    ecx,esp
65006e20:	mov    BYTE PTR [esp+0x104],0x1
65006e28:	mov    DWORD PTR [esp+0x48],esp
65006e2c:	push   0xffffffff
65006e2e:	push   ebx
65006e2f:	lea    edx,[esp+0xe0]
65006e36:	mov    DWORD PTR [ecx+0x18],edi
65006e39:	mov    DWORD PTR [ecx+0x14],ebx
65006e3c:	push   edx
65006e3d:	mov    WORD PTR [ecx+0x4],bx
65006e41:	call   0x65008710
65006e46:	sub    esp,0x1c
65006e49:	mov    ecx,esp
65006e4b:	mov    BYTE PTR [esp+0x120],0x2
65006e53:	mov    DWORD PTR [esp+0x54],esp
65006e57:	push   0xffffffff
65006e59:	push   ebx
65006e5a:	lea    eax,[esp+0xe0]
65006e61:	mov    DWORD PTR [ecx+0x18],edi
65006e64:	mov    DWORD PTR [ecx+0x14],ebx
65006e67:	push   eax
65006e68:	mov    WORD PTR [ecx+0x4],bx
65006e6c:	call   0x65008710
65006e71:	lea    ecx,[esp+0xa0]
65006e78:	push   ecx
65006e79:	mov    BYTE PTR [esp+0x124],0x1
65006e81:	call   0x6500a020
65006e86:	add    esp,0x3c
65006e89:	push   eax
65006e8a:	lea    ecx,[esp+0x34]
65006e8e:	mov    BYTE PTR [esp+0xec],0x3
65006e96:	call   0x6500a0c0
65006e9b:	lea    edx,[esp+0x30]
65006e9f:	push   edx
65006ea0:	lea    eax,[esp+0x20]
65006ea4:	push   eax
65006ea5:	mov    BYTE PTR [esp+0xf0],0x4
65006ead:	call   0x65007540
65006eb2:	mov    ecx,eax
65006eb4:	call   0x65007d90
65006eb9:	lea    ecx,[esp+0x30]
65006ebd:	call   0x650072b0
65006ec2:	lea    ecx,[esp+0x68]
65006ec6:	call   0x650072b0
65006ecb:	mov    BYTE PTR [esp+0xe8],bl
65006ed2:	cmp    DWORD PTR [esp+0xd4],0x8
65006eda:	jb     0x65006eec
65006edc:	mov    ecx,DWORD PTR [esp+0xc0]
65006ee3:	push   ecx
65006ee4:	call   0x65011f02
65006ee9:	add    esp,0x4
65006eec:	mov    edx,DWORD PTR [ebp+0x10]
65006eef:	movzx  eax,BYTE PTR [edx]
65006ef2:	cmp    eax,0x100
65006ef7:	jge    0x65006f1b
65006ef9:	lea    ecx,[esp+0xa0]
65006f00:	push   ecx
65006f01:	lea    edx,[esp+0x20]
65006f05:	push   edx
65006f06:	call   0x65007540
65006f0b:	mov    ecx,eax
65006f0d:	call   0x65007ea0
65006f12:	mov    esi,DWORD PTR [eax]
65006f14:	mov    eax,DWORD PTR [eax+0x4]
65006f17:	mov    DWORD PTR [esp+0x18],eax
65006f1b:	call   0x65007540
65006f20:	cmp    esi,ebx
65006f22:	mov    ecx,DWORD PTR [eax+0x4]
65006f25:	mov    DWORD PTR [esp+0x20],ecx
65006f29:	je     0x65006f2f
65006f2b:	cmp    esi,eax
65006f2d:	je     0x65006f34
65006f2f:	call   0x65012273
65006f34:	mov    edi,DWORD PTR [esp+0x18]
65006f38:	cmp    edi,DWORD PTR [esp+0x20]
65006f3c:	je     0x65006f61
65006f3e:	cmp    esi,ebx
65006f40:	jne    0x65006f47
65006f42:	call   0x65012273
65006f47:	cmp    edi,DWORD PTR [esi+0x4]
65006f4a:	jne    0x65006f51
65006f4c:	call   0x65012273
65006f51:	cmp    DWORD PTR [edi+0x40],0x8
65006f55:	jb     0x65006f5c
65006f57:	mov    edi,DWORD PTR [edi+0x2c]
65006f5a:	jmp    0x65006f65
65006f5c:	add    edi,0x2c
65006f5f:	jmp    0x65006f65
65006f61:	mov    edi,DWORD PTR [esp+0x28]
65006f65:	cmp    DWORD PTR ds:0x6502e060,ebx
65006f6b:	jne    0x65006f89
65006f6d:	push   0x65026578
65006f72:	push   0x65026588
65006f77:	call   DWORD PTR ds:0x65024074
65006f7d:	push   eax
65006f7e:	call   DWORD PTR ds:0x65024014
65006f84:	mov    ds:0x6502e060,eax
65006f89:	mov    eax,ds:0x65030290
65006f8e:	cmp    eax,ebx
65006f90:	jne    0x65006fa0
65006f92:	push   ebx
65006f93:	push   ebx
65006f94:	push   ebx
65006f95:	call   DWORD PTR ds:0x65024060
65006f9b:	mov    ds:0x65030290,eax
65006fa0:	push   eax
65006fa1:	call   DWORD PTR ds:0x6502e060
65006fa7:	cmp    DWORD PTR [esp+0xb8],0x8
65006faf:	jb     0x65006fc1
65006fb1:	mov    edx,DWORD PTR [esp+0xa4]
65006fb8:	push   edx
65006fb9:	call   0x65011f02
65006fbe:	add    esp,0x4
65006fc1:	mov    eax,edi
65006fc3:	mov    ecx,DWORD PTR [esp+0xe0]
65006fca:	mov    DWORD PTR fs:0x0,ecx
65006fd1:	pop    ecx
65006fd2:	pop    edi
65006fd3:	pop    esi
65006fd4:	pop    ebx
65006fd5:	mov    ecx,DWORD PTR [esp+0xc8]
65006fdc:	xor    ecx,esp
65006fde:	call   0x6501275c
65006fe3:	mov    esp,ebp
65006fe5:	pop    ebp
65006fe6:	ret    
65006fe7:	int3   
65006fe8:	int3   
65006fe9:	int3   
65006fea:	int3   
65006feb:	int3   
65006fec:	int3   
65006fed:	int3   
65006fee:	int3   
65006fef:	int3   
65006ff0:	push   ebp
65006ff1:	mov    ebp,esp
65006ff3:	push   0xffffffff
65006ff5:	push   0x65022b80
65006ffa:	mov    eax,fs:0x0
65007000:	push   eax
65007001:	push   ecx
65007002:	push   ebx
65007003:	push   esi
65007004:	push   edi
65007005:	mov    eax,ds:0x6502c09c
6500700a:	xor    eax,ebp
6500700c:	push   eax
6500700d:	lea    eax,[ebp-0xc]
65007010:	mov    fs:0x0,eax
65007016:	mov    DWORD PTR [ebp-0x10],esp
65007019:	mov    esi,DWORD PTR [ebp+0x8]
6500701c:	call   0x650083d0
65007021:	mov    DWORD PTR [esi+0x4],eax
65007024:	mov    BYTE PTR [eax+0x29],0x1
65007028:	mov    eax,DWORD PTR [esi+0x4]
6500702b:	mov    DWORD PTR [eax+0x4],eax
6500702e:	mov    eax,DWORD PTR [esi+0x4]
65007031:	mov    DWORD PTR [eax],eax
65007033:	mov    eax,DWORD PTR [esi+0x4]
65007036:	mov    DWORD PTR [eax+0x8],eax
65007039:	mov    ebx,0x650303d0
6500703e:	mov    eax,esi
65007040:	mov    DWORD PTR [esi+0x8],0x0
65007047:	mov    DWORD PTR [ebp-0x4],0x0
6500704e:	call   0x650077b0
65007053:	mov    eax,esi
65007055:	mov    ecx,DWORD PTR [ebp-0xc]
65007058:	mov    DWORD PTR fs:0x0,ecx
6500705f:	pop    ecx
65007060:	pop    edi
65007061:	pop    esi
65007062:	pop    ebx
65007063:	mov    esp,ebp
65007065:	pop    ebp
65007066:	ret    0x4
65007069:	mov    eax,DWORD PTR [ebp+0x8]
6500706c:	call   0x65007aa0
65007071:	push   0x0
65007073:	push   0x0
65007075:	call   0x65012306
6500707a:	int3   
6500707b:	int3   
6500707c:	int3   
6500707d:	int3   
6500707e:	int3   
6500707f:	int3   
65007080:	push   ebp
65007081:	mov    ebp,esp
65007083:	and    esp,0xfffffff8
65007086:	sub    esp,0x8
65007089:	push   ebx
6500708a:	push   edi
6500708b:	mov    ebx,eax
6500708d:	mov    edi,ecx
6500708f:	cmp    edi,ebx
65007091:	je     0x650070ad
65007093:	mov    eax,DWORD PTR [edi+0x4]
65007096:	mov    ecx,DWORD PTR [eax]
65007098:	push   eax
65007099:	push   edi
6500709a:	push   ecx
6500709b:	push   edi
6500709c:	lea    eax,[esp+0x18]
650070a0:	push   eax
650070a1:	call   0x650076a0
650070a6:	mov    eax,edi
650070a8:	call   0x650077b0
650070ad:	mov    eax,edi
650070af:	pop    edi
650070b0:	pop    ebx
650070b1:	mov    esp,ebp
650070b3:	pop    ebp
650070b4:	ret    
650070b5:	int3   
650070b6:	int3   
650070b7:	int3   
650070b8:	int3   
650070b9:	int3   
650070ba:	int3   
650070bb:	int3   
650070bc:	int3   
650070bd:	int3   
650070be:	int3   
650070bf:	int3   
650070c0:	push   ebp
650070c1:	mov    ebp,esp
650070c3:	and    esp,0xfffffff8
650070c6:	sub    esp,0x1c
650070c9:	mov    ecx,DWORD PTR [ebp+0x8]
650070cc:	mov    eax,DWORD PTR [ecx+0x4]
650070cf:	push   ebx
650070d0:	push   esi
650070d1:	mov    esi,DWORD PTR [eax+0x4]
650070d4:	cmp    BYTE PTR [esi+0x29],0x0
650070d8:	mov    ebx,eax
650070da:	mov    al,0x1
650070dc:	push   edi
650070dd:	mov    BYTE PTR [esp+0x10],al
650070e1:	jne    0x65007182
650070e7:	mov    edx,DWORD PTR [ebp+0x10]
650070ea:	mov    eax,DWORD PTR [edx+0x14]
650070ed:	mov    ecx,DWORD PTR [edx+0x18]
650070f0:	mov    DWORD PTR [esp+0x18],eax
650070f4:	mov    DWORD PTR [esp+0x14],eax
650070f8:	mov    DWORD PTR [esp+0x1c],ecx
650070fc:	jmp    0x65007107
650070fe:	mov    edi,edi
65007100:	mov    edx,DWORD PTR [ebp+0x10]
65007103:	mov    eax,DWORD PTR [esp+0x14]
65007107:	cmp    DWORD PTR [esi+0x24],0x10
6500710b:	mov    ebx,DWORD PTR [esi+0x20]
6500710e:	mov    DWORD PTR [esp+0x20],esi
65007112:	jb     0x65007119
65007114:	mov    ecx,DWORD PTR [esi+0x10]
65007117:	jmp    0x6500711c
65007119:	lea    ecx,[esi+0x10]
6500711c:	mov    edi,DWORD PTR [esp+0x18]
65007120:	cmp    eax,edi
65007122:	mov    DWORD PTR [esp+0xc],ecx
65007126:	jae    0x6500712a
65007128:	mov    edi,eax
6500712a:	cmp    edi,ebx
6500712c:	mov    ecx,edi
6500712e:	jb     0x65007132
65007130:	mov    ecx,ebx
65007132:	cmp    DWORD PTR [esp+0x1c],0x10
65007137:	lea    eax,[edx+0x4]
6500713a:	jb     0x6500713e
6500713c:	mov    eax,DWORD PTR [eax]
6500713e:	mov    edx,DWORD PTR [esp+0xc]
65007142:	push   ecx
65007143:	push   edx
65007144:	push   eax
65007145:	call   0x65002c30
6500714a:	add    esp,0xc
6500714d:	test   eax,eax
6500714f:	jne    0x65007163
65007151:	cmp    edi,ebx
65007153:	jae    0x6500715a
65007155:	or     eax,0xffffffff
65007158:	jmp    0x65007161
6500715a:	xor    eax,eax
6500715c:	cmp    edi,ebx
6500715e:	setne  al
65007161:	test   eax,eax
65007163:	setl   al
65007166:	test   al,al
65007168:	mov    BYTE PTR [esp+0x10],al
6500716c:	je     0x65007172
6500716e:	mov    esi,DWORD PTR [esi]
65007170:	jmp    0x65007175
65007172:	mov    esi,DWORD PTR [esi+0x8]
65007175:	cmp    BYTE PTR [esi+0x29],0x0
65007179:	je     0x65007100
6500717b:	mov    ebx,DWORD PTR [esp+0x20]
6500717f:	mov    ecx,DWORD PTR [ebp+0x8]
65007182:	test   al,al
65007184:	mov    esi,ebx
65007186:	mov    DWORD PTR [esp+0x24],esi
6500718a:	mov    DWORD PTR [esp+0x20],ecx
6500718e:	je     0x650071d3
65007190:	mov    eax,DWORD PTR [ecx+0x4]
65007193:	cmp    ebx,DWORD PTR [eax]
65007195:	jne    0x650071c6
65007197:	mov    edx,DWORD PTR [ebp+0x10]
6500719a:	push   edx
6500719b:	push   0x1
6500719d:	lea    eax,[esp+0x28]
650071a1:	push   eax
650071a2:	push   ecx
650071a3:	mov    ecx,ebx
650071a5:	call   0x65007820
650071aa:	mov    edx,DWORD PTR [eax]
650071ac:	mov    ecx,DWORD PTR [ebp+0xc]
650071af:	mov    eax,DWORD PTR [eax+0x4]
650071b2:	mov    DWORD PTR [ecx+0x4],eax
650071b5:	mov    DWORD PTR [ecx],edx
650071b7:	mov    BYTE PTR [ecx+0x8],0x1
650071bb:	mov    eax,ecx
650071bd:	pop    edi
650071be:	pop    esi
650071bf:	pop    ebx
650071c0:	mov    esp,ebp
650071c2:	pop    ebp
650071c3:	ret    0xc
650071c6:	lea    esi,[esp+0x20]
650071ca:	call   0x65008cc0
650071cf:	mov    esi,DWORD PTR [esp+0x24]
650071d3:	mov    edi,DWORD PTR [ebp+0x10]
650071d6:	cmp    DWORD PTR [edi+0x18],0x10
650071da:	mov    edx,DWORD PTR [edi+0x14]
650071dd:	lea    ecx,[esi+0xc]
650071e0:	jb     0x650071e7
650071e2:	mov    eax,DWORD PTR [edi+0x4]
650071e5:	jmp    0x650071ea
650071e7:	lea    eax,[edi+0x4]
650071ea:	push   edx
650071eb:	mov    edx,DWORD PTR [ecx+0x14]
650071ee:	push   eax
650071ef:	push   edx
650071f0:	push   0x0
650071f2:	call   0x65007370
650071f7:	test   eax,eax
650071f9:	jge    0x6500722d
650071fb:	mov    eax,DWORD PTR [esp+0x10]
650071ff:	mov    edx,DWORD PTR [ebp+0x8]
65007202:	push   edi
65007203:	push   eax
65007204:	lea    ecx,[esp+0x28]
65007208:	push   ecx
65007209:	push   edx
6500720a:	mov    ecx,ebx
6500720c:	call   0x65007820
65007211:	mov    edx,DWORD PTR [eax]
65007213:	mov    ecx,DWORD PTR [ebp+0xc]
65007216:	mov    eax,DWORD PTR [eax+0x4]
65007219:	mov    DWORD PTR [ecx+0x4],eax
6500721c:	mov    DWORD PTR [ecx],edx
6500721e:	mov    BYTE PTR [ecx+0x8],0x1
65007222:	mov    eax,ecx
65007224:	pop    edi
65007225:	pop    esi
65007226:	pop    ebx
65007227:	mov    esp,ebp
65007229:	pop    ebp
6500722a:	ret    0xc
6500722d:	mov    eax,DWORD PTR [ebp+0xc]
65007230:	mov    ecx,DWORD PTR [esp+0x20]
65007234:	pop    edi
65007235:	mov    DWORD PTR [eax+0x4],esi
65007238:	pop    esi
65007239:	mov    DWORD PTR [eax],ecx
6500723b:	mov    BYTE PTR [eax+0x8],0x0
6500723f:	pop    ebx
65007240:	mov    esp,ebp
65007242:	pop    ebp
65007243:	ret    0xc
65007246:	int3   
65007247:	int3   
65007248:	int3   
65007249:	int3   
6500724a:	int3   
6500724b:	int3   
6500724c:	int3   
6500724d:	int3   
6500724e:	int3   
6500724f:	int3   
65007250:	push   ebp
65007251:	mov    ebp,esp
65007253:	and    esp,0xfffffff8
65007256:	sub    esp,0x8
65007259:	push   ebx
6500725a:	push   edi
6500725b:	mov    ecx,esi
6500725d:	mov    edi,eax
6500725f:	call   0x65008c20
65007264:	test   esi,esi
65007266:	mov    ebx,eax
65007268:	jne    0x6500726f
6500726a:	call   0x65012273
6500726f:	mov    ecx,edi
65007271:	mov    eax,esi
65007273:	call   0x65008b90
65007278:	test   esi,esi
6500727a:	mov    edi,eax
6500727c:	jne    0x65007283
6500727e:	call   0x65012273
65007283:	mov    DWORD PTR [esp+0xc],0x0
6500728b:	mov    eax,DWORD PTR [esp+0xc]
6500728f:	push   eax
65007290:	push   ebx
65007291:	push   esi
65007292:	push   edi
65007293:	push   esi
65007294:	lea    ebx,[esp+0x20]
65007298:	call   0x6500a3c0
6500729d:	mov    eax,DWORD PTR [esp+0x20]
650072a1:	add    esp,0x14
650072a4:	pop    edi
650072a5:	pop    ebx
650072a6:	mov    esp,ebp
650072a8:	pop    ebp
650072a9:	ret    
650072aa:	int3   
650072ab:	int3   
650072ac:	int3   
650072ad:	int3   
650072ae:	int3   
650072af:	int3   
650072b0:	push   esi
650072b1:	mov    esi,ecx
650072b3:	cmp    DWORD PTR [esi+0x34],0x8
650072b7:	push   edi
650072b8:	jb     0x650072c6
650072ba:	mov    eax,DWORD PTR [esi+0x20]
650072bd:	push   eax
650072be:	call   0x65011f02
650072c3:	add    esp,0x4
650072c6:	xor    edi,edi
650072c8:	mov    DWORD PTR [esi+0x34],0x7
650072cf:	mov    DWORD PTR [esi+0x30],edi
650072d2:	mov    WORD PTR [esi+0x20],di
650072d6:	cmp    DWORD PTR [esi+0x18],0x8
650072da:	jb     0x650072e8
650072dc:	mov    ecx,DWORD PTR [esi+0x4]
650072df:	push   ecx
650072e0:	call   0x65011f02
650072e5:	add    esp,0x4
650072e8:	mov    DWORD PTR [esi+0x14],edi
650072eb:	mov    DWORD PTR [esi+0x18],0x7
650072f2:	mov    WORD PTR [esi+0x4],di
650072f6:	pop    edi
650072f7:	pop    esi
650072f8:	ret    
650072f9:	int3   
650072fa:	int3   
650072fb:	int3   
650072fc:	int3   
650072fd:	int3   
650072fe:	int3   
650072ff:	int3   
65007300:	mov    ecx,DWORD PTR [eax]
65007302:	push   esi
65007303:	mov    esi,DWORD PTR [edi]
65007305:	lea    eax,[ecx-0x10]
65007308:	sub    esi,0x10
6500730b:	cmp    eax,esi
6500730d:	je     0x6500735d
6500730f:	cmp    DWORD PTR [esi+0xc],0x0
65007313:	push   ebx
65007314:	lea    ebx,[esi+0xc]
65007317:	jl     0x6500734c
65007319:	mov    edx,DWORD PTR [eax]
6500731b:	cmp    edx,DWORD PTR [esi]
6500731d:	jne    0x6500734c
6500731f:	push   ebp
65007320:	push   eax
65007321:	call   0x65002860
65007326:	mov    ebp,eax
65007328:	add    esp,0x4
6500732b:	or     eax,0xffffffff
6500732e:	lock xadd DWORD PTR [ebx],eax
65007332:	dec    eax
65007333:	test   eax,eax
65007335:	jg     0x65007341
65007337:	mov    ecx,DWORD PTR [esi]
65007339:	mov    edx,DWORD PTR [ecx]
6500733b:	mov    eax,DWORD PTR [edx+0x4]
6500733e:	push   esi
6500733f:	call   eax
65007341:	add    ebp,0x10
65007344:	mov    DWORD PTR [edi],ebp
65007346:	pop    ebp
65007347:	pop    ebx
65007348:	mov    eax,edi
6500734a:	pop    esi
6500734b:	ret    
6500734c:	mov    edx,DWORD PTR [ecx-0xc]
6500734f:	push   edx
65007350:	push   ecx
65007351:	mov    ecx,edi
65007353:	call   0x65002aa0
65007358:	pop    ebx
65007359:	mov    eax,edi
6500735b:	pop    esi
6500735c:	ret    
6500735d:	mov    eax,edi
6500735f:	pop    esi
65007360:	ret    
65007361:	int3   
65007362:	int3   
65007363:	int3   
65007364:	int3   
65007365:	int3   
65007366:	int3   
65007367:	int3   
65007368:	int3   
65007369:	int3   
6500736a:	int3   
6500736b:	int3   
6500736c:	int3   
6500736d:	int3   
6500736e:	int3   
6500736f:	int3   
65007370:	push   ebx
65007371:	push   ebp
65007372:	mov    ebp,DWORD PTR [esp+0xc]
65007376:	push   esi
65007377:	push   edi
65007378:	mov    edi,ecx
6500737a:	cmp    DWORD PTR [edi+0x14],ebp
6500737d:	jae    0x65007384
6500737f:	call   0x65011ebe
65007384:	mov    eax,DWORD PTR [edi+0x14]
65007387:	mov    esi,DWORD PTR [esp+0x18]
6500738b:	sub    eax,ebp
6500738d:	cmp    eax,esi
6500738f:	jae    0x65007393
65007391:	mov    esi,eax
65007393:	mov    ebx,DWORD PTR [esp+0x20]
65007397:	cmp    esi,ebx
65007399:	mov    eax,esi
6500739b:	jb     0x6500739f
6500739d:	mov    eax,ebx
6500739f:	cmp    DWORD PTR [edi+0x18],0x10
650073a3:	jb     0x650073aa
650073a5:	mov    edi,DWORD PTR [edi+0x4]
650073a8:	jmp    0x650073ad
650073aa:	add    edi,0x4
650073ad:	push   eax
650073ae:	mov    eax,DWORD PTR [esp+0x20]
650073b2:	push   eax
650073b3:	add    edi,ebp
650073b5:	push   edi
650073b6:	call   0x65002c30
650073bb:	add    esp,0xc
650073be:	test   eax,eax
650073c0:	jne    0x650073d7
650073c2:	cmp    esi,ebx
650073c4:	jae    0x650073d0
650073c6:	pop    edi
650073c7:	pop    esi
650073c8:	pop    ebp
650073c9:	or     eax,0xffffffff
650073cc:	pop    ebx
650073cd:	ret    0x10
650073d0:	xor    eax,eax
650073d2:	cmp    esi,ebx
650073d4:	setne  al
650073d7:	pop    edi
650073d8:	pop    esi
650073d9:	pop    ebp
650073da:	pop    ebx
650073db:	ret    0x10
650073de:	int3   
650073df:	int3   
650073e0:	push   0xffffffff
650073e2:	push   0x6502289e
650073e7:	mov    eax,fs:0x0
650073ed:	push   eax
650073ee:	mov    eax,ds:0x6502c09c
650073f3:	xor    eax,esp
650073f5:	push   eax
650073f6:	lea    eax,[esp+0x4]
650073fa:	mov    fs:0x0,eax
65007400:	test   BYTE PTR ds:0x65030364,0x1
65007407:	jne    0x65007459
65007409:	or     DWORD PTR ds:0x65030364,0x1
65007410:	mov    ecx,0x65030348
65007415:	mov    DWORD PTR [esp+0xc],0x0
6500741d:	call   0x650098e0
65007422:	mov    ds:0x6503034c,eax
65007427:	mov    BYTE PTR [eax+0x45],0x1
6500742b:	mov    eax,ds:0x6503034c
65007430:	mov    DWORD PTR [eax+0x4],eax
65007433:	mov    eax,ds:0x6503034c
65007438:	mov    DWORD PTR [eax],eax
6500743a:	mov    eax,ds:0x6503034c
6500743f:	mov    DWORD PTR [eax+0x8],eax
65007442:	push   0x65023430
65007447:	mov    DWORD PTR ds:0x65030350,0x0
65007451:	call   0x6501288f
65007456:	add    esp,0x4
65007459:	mov    eax,0x65030348
6500745e:	mov    ecx,DWORD PTR [esp+0x4]
65007462:	mov    DWORD PTR fs:0x0,ecx
65007469:	pop    ecx
6500746a:	add    esp,0xc
6500746d:	ret    
6500746e:	int3   
6500746f:	int3   
65007470:	push   0xffffffff
65007472:	push   0x65022418
65007477:	mov    eax,fs:0x0
6500747d:	push   eax
6500747e:	push   ecx
6500747f:	push   ebx
65007480:	push   ebp
65007481:	push   esi
65007482:	push   edi
65007483:	mov    eax,ds:0x6502c09c
65007488:	xor    eax,esp
6500748a:	push   eax
6500748b:	lea    eax,[esp+0x18]
6500748f:	mov    fs:0x0,eax
65007495:	mov    esi,DWORD PTR [esp+0x28]
65007499:	xor    eax,eax
6500749b:	mov    DWORD PTR [esp+0x14],eax
6500749f:	mov    DWORD PTR [esp+0x20],eax
650074a3:	push   0xffffffff
650074a5:	mov    DWORD PTR [esi+0x14],eax
650074a8:	mov    DWORD PTR [esi+0x18],0xf
650074af:	lea    ebp,[esi+0x4]
650074b2:	push   eax
650074b3:	mov    BYTE PTR [ebp+0x0],al
650074b6:	lea    eax,[esp+0x34]
650074ba:	push   eax
650074bb:	mov    ecx,esi
650074bd:	call   0x65001780
650074c2:	mov    eax,DWORD PTR [esi+0x14]
650074c5:	mov    edi,0x1
650074ca:	cmp    eax,edi
650074cc:	jbe    0x6500750d
650074ce:	cmp    edi,eax
650074d0:	jbe    0x650074d7
650074d2:	call   0x65012273
650074d7:	cmp    DWORD PTR [esi+0x18],0x10
650074db:	jb     0x650074e2
650074dd:	mov    ebx,DWORD PTR [ebp+0x0]
650074e0:	jmp    0x650074e4
650074e2:	mov    ebx,ebp
650074e4:	lea    ecx,[edi-0x1]
650074e7:	cmp    ecx,DWORD PTR [esi+0x14]
650074ea:	jbe    0x650074f1
650074ec:	call   0x65012273
650074f1:	cmp    DWORD PTR [esi+0x18],0x10
650074f5:	jb     0x650074fc
650074f7:	mov    eax,DWORD PTR [ebp+0x0]
650074fa:	jmp    0x650074fe
650074fc:	mov    eax,ebp
650074fe:	mov    dl,BYTE PTR [eax+edi*1-0x1]
65007502:	xor    BYTE PTR [ebx+edi*1],dl
65007505:	add    edi,0x1
65007508:	cmp    edi,DWORD PTR [esi+0x14]
6500750b:	jb     0x650074d7
6500750d:	cmp    DWORD PTR [esp+0x44],0x10
65007512:	jb     0x65007521
65007514:	mov    eax,DWORD PTR [esp+0x30]
65007518:	push   eax
65007519:	call   0x65011f02
6500751e:	add    esp,0x4
65007521:	mov    eax,esi
65007523:	mov    ecx,DWORD PTR [esp+0x18]
65007527:	mov    DWORD PTR fs:0x0,ecx
6500752e:	pop    ecx
6500752f:	pop    edi
65007530:	pop    esi
65007531:	pop    ebp
65007532:	pop    ebx
65007533:	add    esp,0x10
65007536:	ret    
65007537:	int3   
65007538:	int3   
65007539:	int3   
6500753a:	int3   
6500753b:	int3   
6500753c:	int3   
6500753d:	int3   
6500753e:	int3   
6500753f:	int3   
65007540:	push   0xffffffff
65007542:	push   0x6502286e
65007547:	mov    eax,fs:0x0
6500754d:	push   eax
6500754e:	mov    eax,ds:0x6502c09c
65007553:	xor    eax,esp
65007555:	push   eax
65007556:	lea    eax,[esp+0x4]
6500755a:	mov    fs:0x0,eax
65007560:	test   BYTE PTR ds:0x65030360,0x1
65007567:	jne    0x650075b9
65007569:	or     DWORD PTR ds:0x65030360,0x1
65007570:	mov    ecx,0x65030354
65007575:	mov    DWORD PTR [esp+0xc],0x0
6500757d:	call   0x650098e0
65007582:	mov    ds:0x65030358,eax
65007587:	mov    BYTE PTR [eax+0x45],0x1
6500758b:	mov    eax,ds:0x65030358
65007590:	mov    DWORD PTR [eax+0x4],eax
65007593:	mov    eax,ds:0x65030358
65007598:	mov    DWORD PTR [eax],eax
6500759a:	mov    eax,ds:0x65030358
6500759f:	mov    DWORD PTR [eax+0x8],eax
650075a2:	push   0x650233e0
650075a7:	mov    DWORD PTR ds:0x6503035c,0x0
650075b1:	call   0x6501288f
650075b6:	add    esp,0x4
650075b9:	mov    eax,0x65030354
650075be:	mov    ecx,DWORD PTR [esp+0x4]
650075c2:	mov    DWORD PTR fs:0x0,ecx
650075c9:	pop    ecx
650075ca:	add    esp,0xc
650075cd:	ret    
650075ce:	int3   
650075cf:	int3   
650075d0:	push   0xffffffff
650075d2:	push   0x650223e8
650075d7:	mov    eax,fs:0x0
650075dd:	push   eax
650075de:	push   ecx
650075df:	push   ebx
650075e0:	push   ebp
650075e1:	push   esi
650075e2:	push   edi
650075e3:	mov    eax,ds:0x6502c09c
650075e8:	xor    eax,esp
650075ea:	push   eax
650075eb:	lea    eax,[esp+0x18]
650075ef:	mov    fs:0x0,eax
650075f5:	mov    esi,DWORD PTR [esp+0x28]
650075f9:	xor    eax,eax
650075fb:	mov    DWORD PTR [esp+0x14],eax
650075ff:	mov    DWORD PTR [esp+0x20],eax
65007603:	push   0xffffffff
65007605:	mov    DWORD PTR [esi+0x14],eax
65007608:	mov    DWORD PTR [esi+0x18],0x7
6500760f:	lea    ebp,[esi+0x4]
65007612:	push   eax
65007613:	mov    WORD PTR [ebp+0x0],ax
65007617:	lea    eax,[esp+0x34]
6500761b:	push   eax
6500761c:	mov    ecx,esi
6500761e:	call   0x65008710
65007623:	mov    eax,DWORD PTR [esi+0x14]
65007626:	mov    edi,0x1
6500762b:	cmp    eax,edi
6500762d:	jbe    0x65007670
6500762f:	cmp    edi,eax
65007631:	jbe    0x65007638
65007633:	call   0x65012273
65007638:	cmp    DWORD PTR [esi+0x18],0x8
6500763c:	jb     0x65007643
6500763e:	mov    ebx,DWORD PTR [ebp+0x0]
65007641:	jmp    0x65007645
65007643:	mov    ebx,ebp
65007645:	lea    ecx,[edi-0x1]
65007648:	cmp    ecx,DWORD PTR [esi+0x14]
6500764b:	jbe    0x65007652
6500764d:	call   0x65012273
65007652:	cmp    DWORD PTR [esi+0x18],0x8
65007656:	jb     0x6500765d
65007658:	mov    eax,DWORD PTR [ebp+0x0]
6500765b:	jmp    0x6500765f
6500765d:	mov    eax,ebp
6500765f:	mov    dx,WORD PTR [eax+edi*2-0x2]
65007664:	xor    WORD PTR [ebx+edi*2],dx
65007668:	add    edi,0x1
6500766b:	cmp    edi,DWORD PTR [esi+0x14]
6500766e:	jb     0x65007638
65007670:	cmp    DWORD PTR [esp+0x44],0x8
65007675:	jb     0x65007684
65007677:	mov    eax,DWORD PTR [esp+0x30]
6500767b:	push   eax
6500767c:	call   0x65011f02
65007681:	add    esp,0x4
65007684:	mov    eax,esi
65007686:	mov    ecx,DWORD PTR [esp+0x18]
6500768a:	mov    DWORD PTR fs:0x0,ecx
65007691:	pop    ecx
65007692:	pop    edi
65007693:	pop    esi
65007694:	pop    ebp
65007695:	pop    ebx
65007696:	add    esp,0x10
65007699:	ret    
6500769a:	int3   
6500769b:	int3   
6500769c:	int3   
6500769d:	int3   
6500769e:	int3   
6500769f:	int3   
650076a0:	mov    eax,DWORD PTR [edi+0x4]
650076a3:	sub    esp,0xc
650076a6:	push   ebx
650076a7:	mov    ebx,DWORD PTR [eax]
650076a9:	push   ebp
650076aa:	mov    ebp,DWORD PTR [esp+0x1c]
650076ae:	test   ebp,ebp
650076b0:	push   esi
650076b1:	je     0x650076b7
650076b3:	cmp    ebp,edi
650076b5:	je     0x650076bc
650076b7:	call   0x65012273
650076bc:	mov    esi,DWORD PTR [esp+0x24]
650076c0:	cmp    esi,ebx
650076c2:	jne    0x65007720
650076c4:	mov    eax,DWORD PTR [esp+0x28]
650076c8:	test   eax,eax
650076ca:	mov    ebx,DWORD PTR [edi+0x4]
650076cd:	je     0x650076d3
650076cf:	cmp    eax,edi
650076d1:	je     0x650076d8
650076d3:	call   0x65012273
650076d8:	cmp    DWORD PTR [esp+0x2c],ebx
650076dc:	jne    0x65007720
650076de:	mov    ecx,DWORD PTR [edi+0x4]
650076e1:	mov    edx,DWORD PTR [ecx+0x4]
650076e4:	push   edx
650076e5:	mov    ecx,edi
650076e7:	call   0x65008b30
650076ec:	mov    eax,DWORD PTR [edi+0x4]
650076ef:	mov    DWORD PTR [eax+0x4],eax
650076f2:	mov    eax,DWORD PTR [edi+0x4]
650076f5:	mov    DWORD PTR [edi+0x8],0x0
650076fc:	mov    DWORD PTR [eax],eax
650076fe:	mov    eax,DWORD PTR [edi+0x4]
65007701:	mov    DWORD PTR [eax+0x8],eax
65007704:	mov    eax,DWORD PTR [edi+0x4]
65007707:	mov    ecx,DWORD PTR [eax]
65007709:	mov    eax,DWORD PTR [esp+0x1c]
6500770d:	mov    DWORD PTR [eax+0x4],ecx
65007710:	mov    DWORD PTR [eax],edi
65007712:	pop    esi
65007713:	pop    ebp
65007714:	pop    ebx
65007715:	add    esp,0xc
65007718:	ret    0x14
6500771b:	jmp    0x65007720
6500771d:	lea    ecx,[ecx+0x0]
65007720:	test   ebp,ebp
65007722:	je     0x6500772a
65007724:	cmp    ebp,DWORD PTR [esp+0x28]
65007728:	je     0x6500772f
6500772a:	call   0x65012273
6500772f:	cmp    esi,DWORD PTR [esp+0x2c]
65007733:	je     0x6500779c
65007735:	test   ebp,ebp
65007737:	mov    DWORD PTR [esp+0x24],esi
6500773b:	jne    0x65007742
6500773d:	call   0x65012273
65007742:	cmp    BYTE PTR [esi+0x29],0x0
65007746:	je     0x6500774f
65007748:	call   0x65012273
6500774d:	jmp    0x65007789
6500774f:	mov    eax,DWORD PTR [esi+0x8]
65007752:	cmp    BYTE PTR [eax+0x29],0x0
65007756:	jne    0x6500776e
65007758:	mov    esi,eax
6500775a:	mov    eax,DWORD PTR [esi]
6500775c:	cmp    BYTE PTR [eax+0x29],0x0
65007760:	jne    0x65007789
65007762:	mov    esi,eax
65007764:	mov    eax,DWORD PTR [esi]
65007766:	cmp    BYTE PTR [eax+0x29],0x0
6500776a:	je     0x65007762
6500776c:	jmp    0x65007789
6500776e:	mov    eax,DWORD PTR [esi+0x4]
65007771:	cmp    BYTE PTR [eax+0x29],0x0
65007775:	jne    0x65007787
65007777:	cmp    esi,DWORD PTR [eax+0x8]
6500777a:	jne    0x65007787
6500777c:	mov    esi,eax
6500777e:	mov    eax,DWORD PTR [eax+0x4]
65007781:	cmp    BYTE PTR [eax+0x29],0x0
65007785:	je     0x65007777
65007787:	mov    esi,eax
65007789:	mov    edx,DWORD PTR [esp+0x24]
6500778d:	push   edx
6500778e:	push   ebp
6500778f:	lea    eax,[esp+0x18]
65007793:	push   eax
65007794:	push   edi
65007795:	call   0x65007f40
6500779a:	jmp    0x65007720
6500779c:	mov    eax,DWORD PTR [esp+0x1c]
650077a0:	mov    DWORD PTR [eax+0x4],esi
650077a3:	pop    esi
650077a4:	mov    DWORD PTR [eax],ebp
650077a6:	pop    ebp
650077a7:	pop    ebx
650077a8:	add    esp,0xc
650077ab:	ret    0x14
650077ae:	int3   
650077af:	int3   
650077b0:	push   esi
650077b1:	mov    esi,eax
650077b3:	mov    eax,DWORD PTR [ebx+0x4]
650077b6:	push   edi
650077b7:	mov    edi,DWORD PTR [esi+0x4]
650077ba:	add    eax,0x4
650077bd:	mov    eax,DWORD PTR [eax]
650077bf:	push   edi
650077c0:	push   eax
650077c1:	mov    ecx,esi
650077c3:	call   0x65008250
650077c8:	mov    DWORD PTR [edi+0x4],eax
650077cb:	mov    ecx,DWORD PTR [ebx+0x8]
650077ce:	mov    edx,DWORD PTR [esi+0x4]
650077d1:	mov    DWORD PTR [esi+0x8],ecx
650077d4:	mov    eax,DWORD PTR [edx+0x4]
650077d7:	cmp    BYTE PTR [eax+0x29],0x0
650077db:	jne    0x65007811
650077dd:	mov    ecx,DWORD PTR [eax]
650077df:	cmp    BYTE PTR [ecx+0x29],0x0
650077e3:	jne    0x650077ef
650077e5:	mov    eax,ecx
650077e7:	mov    ecx,DWORD PTR [eax]
650077e9:	cmp    BYTE PTR [ecx+0x29],0x0
650077ed:	je     0x650077e5
650077ef:	mov    DWORD PTR [edx],eax
650077f1:	mov    esi,DWORD PTR [esi+0x4]
650077f4:	mov    ecx,DWORD PTR [esi+0x4]
650077f7:	mov    eax,DWORD PTR [ecx+0x8]
650077fa:	cmp    BYTE PTR [eax+0x29],0x0
650077fe:	jne    0x6500780b
65007800:	mov    ecx,eax
65007802:	mov    eax,DWORD PTR [ecx+0x8]
65007805:	cmp    BYTE PTR [eax+0x29],0x0
65007809:	je     0x65007800
6500780b:	pop    edi
6500780c:	mov    DWORD PTR [esi+0x8],ecx
6500780f:	pop    esi
65007810:	ret    
65007811:	mov    DWORD PTR [edx],edx
65007813:	mov    esi,DWORD PTR [esi+0x4]
65007816:	pop    edi
65007817:	mov    DWORD PTR [esi+0x8],esi
6500781a:	pop    esi
6500781b:	ret    
6500781c:	int3   
6500781d:	int3   
6500781e:	int3   
6500781f:	int3   
65007820:	push   0xffffffff
65007822:	push   0x65022838
65007827:	mov    eax,fs:0x0
6500782d:	push   eax
6500782e:	sub    esp,0x44
65007831:	push   ebx
65007832:	push   ebp
65007833:	push   esi
65007834:	push   edi
65007835:	mov    eax,ds:0x6502c09c
6500783a:	xor    eax,esp
6500783c:	push   eax
6500783d:	lea    eax,[esp+0x58]
65007841:	mov    fs:0x0,eax
65007847:	mov    esi,ecx
65007849:	mov    ebp,DWORD PTR [esp+0x68]
6500784d:	xor    ebx,ebx
6500784f:	cmp    DWORD PTR [ebp+0x8],0x9249248
65007856:	jb     0x650078a1
65007858:	push   0x13
6500785a:	push   0x65028148
6500785f:	lea    ecx,[esp+0x1c]
65007863:	mov    DWORD PTR [esp+0x34],0xf
6500786b:	mov    DWORD PTR [esp+0x30],ebx
6500786f:	mov    BYTE PTR [esp+0x20],bl
65007873:	call   0x65001860
65007878:	lea    eax,[esp+0x14]
6500787c:	push   eax
6500787d:	lea    ecx,[esp+0x34]
65007881:	mov    DWORD PTR [esp+0x64],ebx
65007885:	call   0x65002cc0
6500788a:	push   0x65029ec8
6500788f:	lea    ecx,[esp+0x34]
65007893:	push   ecx
65007894:	mov    DWORD PTR [esp+0x38],0x65024b5c
6500789c:	call   0x65012306
650078a1:	mov    edx,DWORD PTR [esp+0x74]
650078a5:	mov    eax,DWORD PTR [ebp+0x4]
650078a8:	push   ebx
650078a9:	push   edx
650078aa:	push   eax
650078ab:	push   esi
650078ac:	push   eax
650078ad:	call   0x65008410
650078b2:	mov    ecx,DWORD PTR [ebp+0x4]
650078b5:	mov    edx,eax
650078b7:	mov    eax,0x1
650078bc:	add    DWORD PTR [ebp+0x8],eax
650078bf:	cmp    esi,ecx
650078c1:	mov    DWORD PTR [esp+0x68],edx
650078c5:	jne    0x650078d4
650078c7:	mov    DWORD PTR [ecx+0x4],edx
650078ca:	mov    ecx,DWORD PTR [ebp+0x4]
650078cd:	mov    DWORD PTR [ecx],edx
650078cf:	mov    ecx,DWORD PTR [ebp+0x4]
650078d2:	jmp    0x650078f2
650078d4:	cmp    BYTE PTR [esp+0x70],bl
650078d8:	je     0x650078e7
650078da:	mov    DWORD PTR [esi],edx
650078dc:	mov    ecx,DWORD PTR [ebp+0x4]
650078df:	cmp    esi,DWORD PTR [ecx]
650078e1:	jne    0x650078f5
650078e3:	mov    DWORD PTR [ecx],edx
650078e5:	jmp    0x650078f5
650078e7:	mov    DWORD PTR [esi+0x8],edx
650078ea:	mov    ecx,DWORD PTR [ebp+0x4]
650078ed:	cmp    esi,DWORD PTR [ecx+0x8]
650078f0:	jne    0x650078f5
650078f2:	mov    DWORD PTR [ecx+0x8],edx
650078f5:	mov    esi,DWORD PTR [edx+0x4]
650078f8:	cmp    BYTE PTR [esi+0x28],bl
650078fb:	lea    ecx,[edx+0x4]
650078fe:	jne    0x65007a76
65007904:	mov    esi,DWORD PTR [ecx]
65007906:	mov    edi,DWORD PTR [esi+0x4]
65007909:	cmp    esi,DWORD PTR [edi]
6500790b:	jne    0x650079b7
65007911:	mov    edi,DWORD PTR [edi+0x8]
65007914:	cmp    BYTE PTR [edi+0x28],bl
65007917:	je     0x650079be
6500791d:	cmp    edx,DWORD PTR [esi+0x8]
65007920:	jne    0x6500795d
65007922:	mov    edx,esi
65007924:	mov    esi,DWORD PTR [edx+0x8]
65007927:	mov    ecx,DWORD PTR [esi]
65007929:	mov    DWORD PTR [edx+0x8],ecx
6500792c:	mov    ecx,DWORD PTR [esi]
6500792e:	cmp    BYTE PTR [ecx+0x29],bl
65007931:	jne    0x65007936
65007933:	mov    DWORD PTR [ecx+0x4],edx
65007936:	mov    edi,DWORD PTR [edx+0x4]
65007939:	lea    ecx,[edx+0x4]
6500793c:	mov    DWORD PTR [esi+0x4],edi
6500793f:	mov    edi,DWORD PTR [ebp+0x4]
65007942:	cmp    edx,DWORD PTR [edi+0x4]
65007945:	jne    0x6500794c
65007947:	mov    DWORD PTR [edi+0x4],esi
6500794a:	jmp    0x65007959
6500794c:	mov    edi,DWORD PTR [ecx]
6500794e:	cmp    edx,DWORD PTR [edi]
65007950:	jne    0x65007956
65007952:	mov    DWORD PTR [edi],esi
65007954:	jmp    0x65007959
65007956:	mov    DWORD PTR [edi+0x8],esi
65007959:	mov    DWORD PTR [esi],edx
6500795b:	mov    DWORD PTR [ecx],esi
6500795d:	mov    esi,DWORD PTR [ecx]
6500795f:	mov    BYTE PTR [esi+0x28],al
65007962:	mov    esi,DWORD PTR [ecx]
65007964:	mov    esi,DWORD PTR [esi+0x4]
65007967:	mov    BYTE PTR [esi+0x28],bl
6500796a:	mov    ecx,DWORD PTR [ecx]
6500796c:	mov    ecx,DWORD PTR [ecx+0x4]
6500796f:	mov    esi,DWORD PTR [ecx]
65007971:	mov    edi,DWORD PTR [esi+0x8]
65007974:	mov    DWORD PTR [ecx],edi
65007976:	mov    edi,DWORD PTR [esi+0x8]
65007979:	cmp    BYTE PTR [edi+0x29],bl
6500797c:	jne    0x65007981
6500797e:	mov    DWORD PTR [edi+0x4],ecx
65007981:	mov    edi,DWORD PTR [ecx+0x4]
65007984:	mov    DWORD PTR [esi+0x4],edi
65007987:	mov    edi,DWORD PTR [ebp+0x4]
6500798a:	cmp    ecx,DWORD PTR [edi+0x4]
6500798d:	jne    0x6500799a
6500798f:	mov    DWORD PTR [edi+0x4],esi
65007992:	mov    DWORD PTR [esi+0x8],ecx
65007995:	jmp    0x65007a60
6500799a:	mov    edi,DWORD PTR [ecx+0x4]
6500799d:	cmp    ecx,DWORD PTR [edi+0x8]
650079a0:	jne    0x650079ad
650079a2:	mov    DWORD PTR [edi+0x8],esi
650079a5:	mov    DWORD PTR [esi+0x8],ecx
650079a8:	jmp    0x65007a60
650079ad:	mov    DWORD PTR [edi],esi
650079af:	mov    DWORD PTR [esi+0x8],ecx
650079b2:	jmp    0x65007a60
650079b7:	mov    edi,DWORD PTR [edi]
650079b9:	cmp    BYTE PTR [edi+0x28],bl
650079bc:	jne    0x650079d8
650079be:	mov    edx,esi
650079c0:	mov    BYTE PTR [edx+0x28],al
650079c3:	mov    BYTE PTR [edi+0x28],al
650079c6:	mov    edx,DWORD PTR [ecx]
650079c8:	mov    edx,DWORD PTR [edx+0x4]
650079cb:	mov    BYTE PTR [edx+0x28],bl
650079ce:	mov    ecx,DWORD PTR [ecx]
650079d0:	mov    edx,DWORD PTR [ecx+0x4]
650079d3:	jmp    0x65007a63
650079d8:	cmp    edx,DWORD PTR [esi]
650079da:	jne    0x65007a19
650079dc:	mov    edx,esi
650079de:	mov    esi,DWORD PTR [edx]
650079e0:	mov    ecx,DWORD PTR [esi+0x8]
650079e3:	mov    DWORD PTR [edx],ecx
650079e5:	mov    ecx,DWORD PTR [esi+0x8]
650079e8:	cmp    BYTE PTR [ecx+0x29],bl
650079eb:	jne    0x650079f0
650079ed:	mov    DWORD PTR [ecx+0x4],edx
650079f0:	mov    edi,DWORD PTR [edx+0x4]
650079f3:	lea    ecx,[edx+0x4]
650079f6:	mov    DWORD PTR [esi+0x4],edi
650079f9:	mov    edi,DWORD PTR [ebp+0x4]
650079fc:	cmp    edx,DWORD PTR [edi+0x4]
650079ff:	jne    0x65007a06
65007a01:	mov    DWORD PTR [edi+0x4],esi
65007a04:	jmp    0x65007a14
65007a06:	mov    edi,DWORD PTR [ecx]
65007a08:	cmp    edx,DWORD PTR [edi+0x8]
65007a0b:	jne    0x65007a12
65007a0d:	mov    DWORD PTR [edi+0x8],esi
65007a10:	jmp    0x65007a14
65007a12:	mov    DWORD PTR [edi],esi
65007a14:	mov    DWORD PTR [esi+0x8],edx
65007a17:	mov    DWORD PTR [ecx],esi
65007a19:	mov    esi,DWORD PTR [ecx]
65007a1b:	mov    BYTE PTR [esi+0x28],al
65007a1e:	mov    esi,DWORD PTR [ecx]
65007a20:	mov    esi,DWORD PTR [esi+0x4]
65007a23:	mov    BYTE PTR [esi+0x28],bl
65007a26:	mov    ecx,DWORD PTR [ecx]
65007a28:	mov    ecx,DWORD PTR [ecx+0x4]
65007a2b:	mov    esi,DWORD PTR [ecx+0x8]
65007a2e:	mov    edi,DWORD PTR [esi]
65007a30:	mov    DWORD PTR [ecx+0x8],edi
65007a33:	mov    edi,DWORD PTR [esi]
65007a35:	cmp    BYTE PTR [edi+0x29],bl
65007a38:	jne    0x65007a3d
65007a3a:	mov    DWORD PTR [edi+0x4],ecx
65007a3d:	mov    edi,DWORD PTR [ecx+0x4]
65007a40:	mov    DWORD PTR [esi+0x4],edi
65007a43:	mov    edi,DWORD PTR [ebp+0x4]
65007a46:	cmp    ecx,DWORD PTR [edi+0x4]
65007a49:	jne    0x65007a50
65007a4b:	mov    DWORD PTR [edi+0x4],esi
65007a4e:	jmp    0x65007a5e
65007a50:	mov    edi,DWORD PTR [ecx+0x4]
65007a53:	cmp    ecx,DWORD PTR [edi]
65007a55:	jne    0x65007a5b
65007a57:	mov    DWORD PTR [edi],esi
65007a59:	jmp    0x65007a5e
65007a5b:	mov    DWORD PTR [edi+0x8],esi
65007a5e:	mov    DWORD PTR [esi],ecx
65007a60:	mov    DWORD PTR [ecx+0x4],esi
65007a63:	mov    esi,DWORD PTR [edx+0x4]
65007a66:	cmp    BYTE PTR [esi+0x28],bl
65007a69:	lea    ecx,[edx+0x4]
65007a6c:	je     0x65007904
65007a72:	mov    edx,DWORD PTR [esp+0x68]
65007a76:	mov    ecx,DWORD PTR [ebp+0x4]
65007a79:	mov    ecx,DWORD PTR [ecx+0x4]
65007a7c:	mov    BYTE PTR [ecx+0x28],al
65007a7f:	mov    ecx,DWORD PTR [esp+0x6c]
65007a83:	mov    DWORD PTR [ecx+0x4],edx
65007a86:	mov    DWORD PTR [ecx],ebp
65007a88:	mov    eax,ecx
65007a8a:	mov    ecx,DWORD PTR [esp+0x58]
65007a8e:	mov    DWORD PTR fs:0x0,ecx
65007a95:	pop    ecx
65007a96:	pop    edi
65007a97:	pop    esi
65007a98:	pop    ebp
65007a99:	pop    ebx
65007a9a:	add    esp,0x50
65007a9d:	ret    0x10
65007aa0:	push   ebp
65007aa1:	mov    ebp,esp
65007aa3:	and    esp,0xfffffff8
65007aa6:	sub    esp,0xc
65007aa9:	push   edi
65007aaa:	mov    edi,eax
65007aac:	mov    eax,DWORD PTR [edi+0x4]
65007aaf:	mov    ecx,DWORD PTR [eax]
65007ab1:	push   eax
65007ab2:	push   edi
65007ab3:	push   ecx
65007ab4:	push   edi
65007ab5:	lea    eax,[esp+0x18]
65007ab9:	push   eax
65007aba:	call   0x650076a0
65007abf:	mov    ecx,DWORD PTR [edi+0x4]
65007ac2:	push   ecx
65007ac3:	call   0x65011f02
65007ac8:	add    esp,0x4
65007acb:	xor    eax,eax
65007acd:	mov    DWORD PTR [edi+0x4],eax
65007ad0:	mov    DWORD PTR [edi+0x8],eax
65007ad3:	pop    edi
65007ad4:	mov    esp,ebp
65007ad6:	pop    ebp
65007ad7:	ret    
65007ad8:	int3   
65007ad9:	int3   
65007ada:	int3   
65007adb:	int3   
65007adc:	int3   
65007add:	int3   
65007ade:	int3   
65007adf:	int3   
65007ae0:	cmp    DWORD PTR [esi],0x0
65007ae3:	jne    0x65007aea
65007ae5:	call   0x65012273
65007aea:	mov    eax,DWORD PTR [esi+0x4]
65007aed:	cmp    BYTE PTR [eax+0x29],0x0
65007af1:	je     0x65007af8
65007af3:	jmp    0x65012273
65007af8:	mov    ecx,DWORD PTR [eax+0x8]
65007afb:	cmp    BYTE PTR [ecx+0x29],0x0
65007aff:	jne    0x65007b1e
65007b01:	mov    eax,DWORD PTR [ecx]
65007b03:	cmp    BYTE PTR [eax+0x29],0x0
65007b07:	jne    0x65007b1a
65007b09:	lea    esp,[esp+0x0]
65007b10:	mov    ecx,eax
65007b12:	mov    eax,DWORD PTR [ecx]
65007b14:	cmp    BYTE PTR [eax+0x29],0x0
65007b18:	je     0x65007b10
65007b1a:	mov    DWORD PTR [esi+0x4],ecx
65007b1d:	ret    
65007b1e:	mov    eax,DWORD PTR [eax+0x4]
65007b21:	cmp    BYTE PTR [eax+0x29],0x0
65007b25:	jne    0x65007b3d
65007b27:	mov    ecx,DWORD PTR [esi+0x4]
65007b2a:	cmp    ecx,DWORD PTR [eax+0x8]
65007b2d:	jne    0x65007b3d
65007b2f:	mov    DWORD PTR [esi+0x4],eax
65007b32:	mov    edx,eax
65007b34:	mov    eax,DWORD PTR [edx+0x4]
65007b37:	cmp    BYTE PTR [eax+0x29],0x0
65007b3b:	je     0x65007b27
65007b3d:	mov    DWORD PTR [esi+0x4],eax
65007b40:	ret    
65007b41:	int3   
65007b42:	int3   
65007b43:	int3   
65007b44:	int3   
65007b45:	int3   
65007b46:	int3   
65007b47:	int3   
65007b48:	int3   
65007b49:	int3   
65007b4a:	int3   
65007b4b:	int3   
65007b4c:	int3   
65007b4d:	int3   
65007b4e:	int3   
65007b4f:	int3   
65007b50:	push   ebp
65007b51:	mov    ebp,esp
65007b53:	and    esp,0xfffffff8
65007b56:	sub    esp,0x24
65007b59:	push   ebx
65007b5a:	push   esi
65007b5b:	push   edi
65007b5c:	mov    edi,ecx
65007b5e:	mov    eax,DWORD PTR [edi+0x4]
65007b61:	mov    esi,DWORD PTR [eax+0x4]
65007b64:	cmp    BYTE PTR [esi+0x45],0x0
65007b68:	mov    ecx,eax
65007b6a:	mov    al,0x1
65007b6c:	mov    DWORD PTR [esp+0x28],edi
65007b70:	mov    DWORD PTR [esp+0x10],ecx
65007b74:	mov    BYTE PTR [esp+0x18],al
65007b78:	jne    0x65007c18
65007b7e:	mov    edx,DWORD PTR [ebp+0xc]
65007b81:	mov    eax,DWORD PTR [edx+0x14]
65007b84:	mov    ecx,DWORD PTR [edx+0x18]
65007b87:	mov    DWORD PTR [esp+0x20],eax
65007b8b:	mov    DWORD PTR [esp+0x1c],eax
65007b8f:	mov    DWORD PTR [esp+0x24],ecx
65007b93:	jmp    0x65007b9c
65007b95:	mov    edx,DWORD PTR [ebp+0xc]
65007b98:	mov    eax,DWORD PTR [esp+0x1c]
65007b9c:	cmp    DWORD PTR [esi+0x24],0x10
65007ba0:	mov    ebx,DWORD PTR [esi+0x20]
65007ba3:	mov    DWORD PTR [esp+0x10],esi
65007ba7:	jb     0x65007bae
65007ba9:	mov    ecx,DWORD PTR [esi+0x10]
65007bac:	jmp    0x65007bb1
65007bae:	lea    ecx,[esi+0x10]
65007bb1:	mov    edi,DWORD PTR [esp+0x20]
65007bb5:	cmp    eax,edi
65007bb7:	mov    DWORD PTR [esp+0x14],ecx
65007bbb:	jae    0x65007bbf
65007bbd:	mov    edi,eax
65007bbf:	cmp    edi,ebx
65007bc1:	mov    ecx,edi
65007bc3:	jb     0x65007bc7
65007bc5:	mov    ecx,ebx
65007bc7:	cmp    DWORD PTR [esp+0x24],0x10
65007bcc:	lea    eax,[edx+0x4]
65007bcf:	jb     0x65007bd3
65007bd1:	mov    eax,DWORD PTR [eax]
65007bd3:	mov    edx,DWORD PTR [esp+0x14]
65007bd7:	push   ecx
65007bd8:	push   edx
65007bd9:	push   eax
65007bda:	call   0x65002c30
65007bdf:	add    esp,0xc
65007be2:	test   eax,eax
65007be4:	jne    0x65007bf8
65007be6:	cmp    edi,ebx
65007be8:	jae    0x65007bef
65007bea:	or     eax,0xffffffff
65007bed:	jmp    0x65007bf6
65007bef:	xor    eax,eax
65007bf1:	cmp    edi,ebx
65007bf3:	setne  al
65007bf6:	test   eax,eax
65007bf8:	setl   al
65007bfb:	test   al,al
65007bfd:	mov    BYTE PTR [esp+0x18],al
65007c01:	je     0x65007c07
65007c03:	mov    esi,DWORD PTR [esi]
65007c05:	jmp    0x65007c0a
65007c07:	mov    esi,DWORD PTR [esi+0x8]
65007c0a:	cmp    BYTE PTR [esi+0x45],0x0
65007c0e:	je     0x65007b95
65007c10:	mov    edi,DWORD PTR [esp+0x28]
65007c14:	mov    ecx,DWORD PTR [esp+0x10]
65007c18:	test   al,al
65007c1a:	mov    esi,ecx
65007c1c:	mov    DWORD PTR [esp+0x2c],esi
65007c20:	mov    DWORD PTR [esp+0x28],edi
65007c24:	je     0x65007c69
65007c26:	mov    eax,DWORD PTR [edi+0x4]
65007c29:	cmp    ecx,DWORD PTR [eax]
65007c2b:	jne    0x65007c5c
65007c2d:	mov    edx,DWORD PTR [ebp+0xc]
65007c30:	push   edx
65007c31:	push   ecx
65007c32:	push   0x1
65007c34:	lea    eax,[esp+0x34]
65007c38:	push   eax
65007c39:	mov    ecx,edi
65007c3b:	call   0x650084c0
65007c40:	mov    ecx,eax
65007c42:	mov    edx,DWORD PTR [ecx]
65007c44:	mov    eax,DWORD PTR [ebp+0x8]
65007c47:	mov    ecx,DWORD PTR [ecx+0x4]
65007c4a:	mov    DWORD PTR [eax+0x4],ecx
65007c4d:	mov    BYTE PTR [eax+0x8],0x1
65007c51:	mov    DWORD PTR [eax],edx
65007c53:	pop    edi
65007c54:	pop    esi
65007c55:	pop    ebx
65007c56:	mov    esp,ebp
65007c58:	pop    ebp
65007c59:	ret    0x8
65007c5c:	lea    ecx,[esp+0x28]
65007c60:	call   0x650091d0
65007c65:	mov    esi,DWORD PTR [esp+0x2c]
65007c69:	mov    ebx,DWORD PTR [ebp+0xc]
65007c6c:	cmp    DWORD PTR [ebx+0x18],0x10
65007c70:	mov    edx,DWORD PTR [ebx+0x14]
65007c73:	lea    ecx,[esi+0xc]
65007c76:	jb     0x65007c7d
65007c78:	mov    eax,DWORD PTR [ebx+0x4]
65007c7b:	jmp    0x65007c80
65007c7d:	lea    eax,[ebx+0x4]
65007c80:	push   edx
65007c81:	mov    edx,DWORD PTR [ecx+0x14]
65007c84:	push   eax
65007c85:	push   edx
65007c86:	push   0x0
65007c88:	call   0x65007370
65007c8d:	test   eax,eax
65007c8f:	jge    0x65007cc4
65007c91:	mov    eax,DWORD PTR [esp+0x10]
65007c95:	mov    ecx,DWORD PTR [esp+0x18]
65007c99:	push   ebx
65007c9a:	push   eax
65007c9b:	push   ecx
65007c9c:	lea    edx,[esp+0x34]
65007ca0:	push   edx
65007ca1:	mov    ecx,edi
65007ca3:	call   0x650084c0
65007ca8:	mov    ecx,eax
65007caa:	mov    edx,DWORD PTR [ecx]
65007cac:	mov    eax,DWORD PTR [ebp+0x8]
65007caf:	mov    ecx,DWORD PTR [ecx+0x4]
65007cb2:	mov    DWORD PTR [eax+0x4],ecx
65007cb5:	mov    BYTE PTR [eax+0x8],0x1
65007cb9:	mov    DWORD PTR [eax],edx
65007cbb:	pop    edi
65007cbc:	pop    esi
65007cbd:	pop    ebx
65007cbe:	mov    esp,ebp
65007cc0:	pop    ebp
65007cc1:	ret    0x8
65007cc4:	mov    eax,DWORD PTR [ebp+0x8]
65007cc7:	mov    edx,DWORD PTR [esp+0x28]
65007ccb:	pop    edi
65007ccc:	mov    DWORD PTR [eax+0x4],esi
65007ccf:	pop    esi
65007cd0:	mov    BYTE PTR [eax+0x8],0x0
65007cd4:	mov    DWORD PTR [eax],edx
65007cd6:	pop    ebx
65007cd7:	mov    esp,ebp
65007cd9:	pop    ebp
65007cda:	ret    0x8
65007cdd:	int3   
65007cde:	int3   
65007cdf:	int3   
65007ce0:	sub    esp,0x18
65007ce3:	push   ebx
65007ce4:	mov    ebx,DWORD PTR [esp+0x24]
65007ce8:	push   esi
65007ce9:	push   edi
65007cea:	push   ebx
65007ceb:	mov    esi,ecx
65007ced:	call   0x65008d40
65007cf2:	test   esi,esi
65007cf4:	mov    edi,eax
65007cf6:	mov    DWORD PTR [esp+0x14],edi
65007cfa:	jne    0x65007d01
65007cfc:	call   0x65012273
65007d01:	cmp    edi,DWORD PTR [esi+0x4]
65007d04:	mov    DWORD PTR [esp+0x10],esi
65007d08:	je     0x65007d34
65007d0a:	cmp    DWORD PTR [edi+0x24],0x10
65007d0e:	mov    eax,DWORD PTR [edi+0x20]
65007d11:	jb     0x65007d18
65007d13:	mov    edi,DWORD PTR [edi+0x10]
65007d16:	jmp    0x65007d1b
65007d18:	add    edi,0x10
65007d1b:	push   eax
65007d1c:	mov    eax,DWORD PTR [ebx+0x14]
65007d1f:	push   edi
65007d20:	push   eax
65007d21:	push   0x0
65007d23:	mov    ecx,ebx
65007d25:	call   0x65007370
65007d2a:	test   eax,eax
65007d2c:	jl     0x65007d34
65007d2e:	lea    ecx,[esp+0x10]
65007d32:	jmp    0x65007d43
65007d34:	mov    ecx,DWORD PTR [esi+0x4]
65007d37:	mov    DWORD PTR [esp+0x1c],ecx
65007d3b:	mov    DWORD PTR [esp+0x18],esi
65007d3f:	lea    ecx,[esp+0x18]
65007d43:	mov    edx,DWORD PTR [ecx]
65007d45:	mov    eax,DWORD PTR [esp+0x28]
65007d49:	mov    ecx,DWORD PTR [ecx+0x4]
65007d4c:	pop    edi
65007d4d:	pop    esi
65007d4e:	mov    DWORD PTR [eax],edx
65007d50:	mov    DWORD PTR [eax+0x4],ecx
65007d53:	pop    ebx
65007d54:	add    esp,0x18
65007d57:	ret    0x8
65007d5a:	int3   
65007d5b:	int3   
65007d5c:	int3   
65007d5d:	int3   
65007d5e:	int3   
65007d5f:	int3   
65007d60:	push   esi
65007d61:	mov    esi,ecx
65007d63:	cmp    DWORD PTR [esi+0x18],0x8
65007d67:	jb     0x65007d75
65007d69:	mov    eax,DWORD PTR [esi+0x4]
65007d6c:	push   eax
65007d6d:	call   0x65011f02
65007d72:	add    esp,0x4
65007d75:	xor    eax,eax
65007d77:	mov    DWORD PTR [esi+0x18],0x7
65007d7e:	mov    DWORD PTR [esi+0x14],eax
65007d81:	mov    WORD PTR [esi+0x4],ax
65007d85:	pop    esi
65007d86:	ret    
65007d87:	int3   
65007d88:	int3   
65007d89:	int3   
65007d8a:	int3   
65007d8b:	int3   
65007d8c:	int3   
65007d8d:	int3   
65007d8e:	int3   
65007d8f:	int3   
65007d90:	push   ebp
65007d91:	mov    ebp,esp
65007d93:	and    esp,0xfffffff8
65007d96:	sub    esp,0x14
65007d99:	mov    eax,DWORD PTR [ecx+0x4]
65007d9c:	push   ebx
65007d9d:	push   esi
65007d9e:	mov    esi,DWORD PTR [eax+0x4]
65007da1:	cmp    BYTE PTR [esi+0x45],0x0
65007da5:	mov    ebx,eax
65007da7:	mov    al,0x1
65007da9:	push   edi
65007daa:	mov    edi,DWORD PTR [ebp+0xc]
65007dad:	mov    DWORD PTR [esp+0x14],ecx
65007db1:	mov    BYTE PTR [esp+0x10],al
65007db5:	jne    0x65007df7
65007db7:	cmp    DWORD PTR [esi+0x24],0x8
65007dbb:	mov    ecx,DWORD PTR [esi+0x20]
65007dbe:	mov    ebx,esi
65007dc0:	jb     0x65007dc7
65007dc2:	mov    eax,DWORD PTR [esi+0x10]
65007dc5:	jmp    0x65007dca
65007dc7:	lea    eax,[esi+0x10]
65007dca:	push   ecx
65007dcb:	push   eax
65007dcc:	mov    eax,DWORD PTR [edi+0x14]
65007dcf:	push   eax
65007dd0:	push   0x0
65007dd2:	mov    ecx,edi
65007dd4:	call   0x6500a240
65007dd9:	test   eax,eax
65007ddb:	setl   al
65007dde:	test   al,al
65007de0:	mov    BYTE PTR [esp+0x10],al
65007de4:	je     0x65007dea
65007de6:	mov    esi,DWORD PTR [esi]
65007de8:	jmp    0x65007ded
65007dea:	mov    esi,DWORD PTR [esi+0x8]
65007ded:	cmp    BYTE PTR [esi+0x45],0x0
65007df1:	je     0x65007db7
65007df3:	mov    ecx,DWORD PTR [esp+0x14]
65007df7:	test   al,al
65007df9:	mov    esi,ebx
65007dfb:	mov    DWORD PTR [esp+0x1c],esi
65007dff:	mov    DWORD PTR [esp+0x18],ecx
65007e03:	je     0x65007e43
65007e05:	mov    edx,DWORD PTR [ecx+0x4]
65007e08:	cmp    ebx,DWORD PTR [edx]
65007e0a:	jne    0x65007e36
65007e0c:	push   edi
65007e0d:	push   ebx
65007e0e:	push   0x1
65007e10:	lea    eax,[esp+0x24]
65007e14:	push   eax
65007e15:	call   0x650088e0
65007e1a:	mov    ecx,eax
65007e1c:	mov    edx,DWORD PTR [ecx]
65007e1e:	mov    eax,DWORD PTR [ebp+0x8]
65007e21:	mov    ecx,DWORD PTR [ecx+0x4]
65007e24:	mov    DWORD PTR [eax+0x4],ecx
65007e27:	mov    BYTE PTR [eax+0x8],0x1
65007e2b:	mov    DWORD PTR [eax],edx
65007e2d:	pop    edi
65007e2e:	pop    esi
65007e2f:	pop    ebx
65007e30:	mov    esp,ebp
65007e32:	pop    ebp
65007e33:	ret    0x8
65007e36:	lea    ecx,[esp+0x18]
65007e3a:	call   0x650091d0
65007e3f:	mov    esi,DWORD PTR [esp+0x1c]
65007e43:	cmp    DWORD PTR [edi+0x18],0x8
65007e47:	mov    edx,DWORD PTR [edi+0x14]
65007e4a:	lea    ecx,[esi+0xc]
65007e4d:	jb     0x65007e54
65007e4f:	mov    eax,DWORD PTR [edi+0x4]
65007e52:	jmp    0x65007e57
65007e54:	lea    eax,[edi+0x4]
65007e57:	push   edx
65007e58:	mov    edx,DWORD PTR [ecx+0x14]
65007e5b:	push   eax
65007e5c:	push   edx
65007e5d:	push   0x0
65007e5f:	call   0x6500a240
65007e64:	test   eax,eax
65007e66:	jge    0x65007e7a
65007e68:	mov    eax,DWORD PTR [esp+0x10]
65007e6c:	push   edi
65007e6d:	push   ebx
65007e6e:	lea    ecx,[esp+0x20]
65007e72:	push   eax
65007e73:	push   ecx
65007e74:	mov    ecx,DWORD PTR [esp+0x24]
65007e78:	jmp    0x65007e15
65007e7a:	mov    eax,DWORD PTR [ebp+0x8]
65007e7d:	mov    edx,DWORD PTR [esp+0x18]
65007e81:	pop    edi
65007e82:	mov    DWORD PTR [eax+0x4],esi
65007e85:	pop    esi
65007e86:	mov    BYTE PTR [eax+0x8],0x0
65007e8a:	mov    DWORD PTR [eax],edx
65007e8c:	pop    ebx
65007e8d:	mov    esp,ebp
65007e8f:	pop    ebp
65007e90:	ret    0x8
65007e93:	int3   
65007e94:	int3   
65007e95:	int3   
65007e96:	int3   
65007e97:	int3   
65007e98:	int3   
65007e99:	int3   
65007e9a:	int3   
65007e9b:	int3   
65007e9c:	int3   
65007e9d:	int3   
65007e9e:	int3   
65007e9f:	int3   
65007ea0:	sub    esp,0x18
65007ea3:	push   ebx
65007ea4:	mov    ebx,DWORD PTR [esp+0x24]
65007ea8:	push   esi
65007ea9:	push   edi
65007eaa:	push   ebx
65007eab:	mov    esi,ecx
65007ead:	call   0x65008f60
65007eb2:	test   esi,esi
65007eb4:	mov    edi,eax
65007eb6:	mov    DWORD PTR [esp+0x14],edi
65007eba:	jne    0x65007ec1
65007ebc:	call   0x65012273
65007ec1:	cmp    edi,DWORD PTR [esi+0x4]
65007ec4:	mov    DWORD PTR [esp+0x10],esi
65007ec8:	je     0x65007ef4
65007eca:	cmp    DWORD PTR [edi+0x24],0x8
65007ece:	mov    eax,DWORD PTR [edi+0x20]
65007ed1:	jb     0x65007ed8
65007ed3:	mov    edi,DWORD PTR [edi+0x10]
65007ed6:	jmp    0x65007edb
65007ed8:	add    edi,0x10
65007edb:	push   eax
65007edc:	mov    eax,DWORD PTR [ebx+0x14]
65007edf:	push   edi
65007ee0:	push   eax
65007ee1:	push   0x0
65007ee3:	mov    ecx,ebx
65007ee5:	call   0x6500a240
65007eea:	test   eax,eax
65007eec:	jl     0x65007ef4
65007eee:	lea    ecx,[esp+0x10]
65007ef2:	jmp    0x65007f03
65007ef4:	mov    ecx,DWORD PTR [esi+0x4]
65007ef7:	mov    DWORD PTR [esp+0x1c],ecx
65007efb:	mov    DWORD PTR [esp+0x18],esi
65007eff:	lea    ecx,[esp+0x18]
65007f03:	mov    edx,DWORD PTR [ecx]
65007f05:	mov    eax,DWORD PTR [esp+0x28]
65007f09:	mov    ecx,DWORD PTR [ecx+0x4]
65007f0c:	pop    edi
65007f0d:	pop    esi
65007f0e:	mov    DWORD PTR [eax],edx
65007f10:	mov    DWORD PTR [eax+0x4],ecx
65007f13:	pop    ebx
65007f14:	add    esp,0x18
65007f17:	ret    0x8
65007f1a:	int3   
65007f1b:	int3   
65007f1c:	int3   
65007f1d:	int3   
65007f1e:	int3   
65007f1f:	int3   
65007f20:	mov    eax,DWORD PTR [esp+0x4]
65007f24:	push   esi
65007f25:	push   eax
65007f26:	mov    esi,ecx
65007f28:	call   0x65002df0
65007f2d:	mov    DWORD PTR [esi],0x65024b5c
65007f33:	mov    eax,esi
65007f35:	pop    esi
65007f36:	ret    0x4
65007f39:	int3   
65007f3a:	int3   
65007f3b:	int3   
65007f3c:	int3   
65007f3d:	int3   
65007f3e:	int3   
65007f3f:	int3   
65007f40:	push   0xffffffff
65007f42:	push   0x65022808
65007f47:	mov    eax,fs:0x0
65007f4d:	push   eax
65007f4e:	sub    esp,0x44
65007f51:	push   ebx
65007f52:	push   ebp
65007f53:	push   esi
65007f54:	push   edi
65007f55:	mov    eax,ds:0x6502c09c
65007f5a:	xor    eax,esp
65007f5c:	push   eax
65007f5d:	lea    eax,[esp+0x58]
65007f61:	mov    fs:0x0,eax
65007f67:	mov    eax,DWORD PTR [esp+0x74]
65007f6b:	cmp    BYTE PTR [eax+0x29],0x0
65007f6f:	je     0x65007fbd
65007f71:	push   0x1b
65007f73:	xor    esi,esi
65007f75:	push   0x6502815c
65007f7a:	lea    ecx,[esp+0x1c]
65007f7e:	mov    DWORD PTR [esp+0x34],0xf
65007f86:	mov    DWORD PTR [esp+0x30],esi
65007f8a:	mov    BYTE PTR [esp+0x20],0x0
65007f8f:	call   0x65001860
65007f94:	lea    eax,[esp+0x14]
65007f98:	push   eax
65007f99:	lea    ecx,[esp+0x34]
65007f9d:	mov    DWORD PTR [esp+0x64],esi
65007fa1:	call   0x65002cc0
65007fa6:	push   0x65029e8c
65007fab:	lea    ecx,[esp+0x34]
65007faf:	push   ecx
65007fb0:	mov    DWORD PTR [esp+0x38],0x65024b68
65007fb8:	call   0x65012306
65007fbd:	lea    esi,[esp+0x70]
65007fc1:	mov    ebp,eax
65007fc3:	call   0x65007ae0
65007fc8:	mov    eax,DWORD PTR [ebp+0x0]
65007fcb:	cmp    BYTE PTR [eax+0x29],0x0
65007fcf:	je     0x65007fd6
65007fd1:	mov    edi,DWORD PTR [ebp+0x8]
65007fd4:	jmp    0x65007fee
65007fd6:	mov    edx,DWORD PTR [ebp+0x8]
65007fd9:	cmp    BYTE PTR [edx+0x29],0x0
65007fdd:	je     0x65007fe3
65007fdf:	mov    edi,eax
65007fe1:	jmp    0x65007fee
65007fe3:	mov    ecx,DWORD PTR [esp+0x74]
65007fe7:	cmp    ecx,ebp
65007fe9:	mov    edi,DWORD PTR [ecx+0x8]
65007fec:	jne    0x65008062
65007fee:	cmp    BYTE PTR [edi+0x29],0x0
65007ff2:	mov    esi,DWORD PTR [ebp+0x4]
65007ff5:	jne    0x65007ffa
65007ff7:	mov    DWORD PTR [edi+0x4],esi
65007ffa:	mov    ecx,DWORD PTR [esp+0x68]
65007ffe:	mov    eax,DWORD PTR [ecx+0x4]
65008001:	cmp    DWORD PTR [eax+0x4],ebp
65008004:	jne    0x6500800b
65008006:	mov    DWORD PTR [eax+0x4],edi
65008009:	jmp    0x65008016
6500800b:	cmp    DWORD PTR [esi],ebp
6500800d:	jne    0x65008013
6500800f:	mov    DWORD PTR [esi],edi
65008011:	jmp    0x65008016
65008013:	mov    DWORD PTR [esi+0x8],edi
65008016:	mov    edx,DWORD PTR [ecx+0x4]
65008019:	cmp    DWORD PTR [edx],ebp
6500801b:	jne    0x6500803d
6500801d:	cmp    BYTE PTR [edi+0x29],0x0
65008021:	je     0x65008027
65008023:	mov    ecx,esi
65008025:	jmp    0x6500803b
65008027:	mov    eax,DWORD PTR [edi]
65008029:	cmp    BYTE PTR [eax+0x29],0x0
6500802d:	mov    ecx,edi
6500802f:	jne    0x6500803b
65008031:	mov    ecx,eax
65008033:	mov    eax,DWORD PTR [ecx]
65008035:	cmp    BYTE PTR [eax+0x29],0x0
65008039:	je     0x65008031
6500803b:	mov    DWORD PTR [edx],ecx
6500803d:	mov    eax,DWORD PTR [esp+0x68]
65008041:	mov    ebx,DWORD PTR [eax+0x4]
65008044:	cmp    DWORD PTR [ebx+0x8],ebp
65008047:	jne    0x650080be
65008049:	cmp    BYTE PTR [edi+0x29],0x0
6500804d:	je     0x65008056
6500804f:	mov    eax,esi
65008051:	mov    DWORD PTR [ebx+0x8],eax
65008054:	jmp    0x650080be
65008056:	mov    eax,edi
65008058:	call   0x65008360
6500805d:	mov    DWORD PTR [ebx+0x8],eax
65008060:	jmp    0x650080be
65008062:	mov    DWORD PTR [eax+0x4],ecx
65008065:	mov    edx,DWORD PTR [ebp+0x0]
65008068:	mov    DWORD PTR [ecx],edx
6500806a:	cmp    ecx,DWORD PTR [ebp+0x8]
6500806d:	jne    0x65008073
6500806f:	mov    esi,ecx
65008071:	jmp    0x6500808d
65008073:	cmp    BYTE PTR [edi+0x29],0x0
65008077:	mov    esi,DWORD PTR [ecx+0x4]
6500807a:	jne    0x6500807f
6500807c:	mov    DWORD PTR [edi+0x4],esi
6500807f:	mov    DWORD PTR [esi],edi
65008081:	mov    eax,DWORD PTR [ebp+0x8]
65008084:	mov    DWORD PTR [ecx+0x8],eax
65008087:	mov    edx,DWORD PTR [ebp+0x8]
6500808a:	mov    DWORD PTR [edx+0x4],ecx
6500808d:	mov    eax,DWORD PTR [esp+0x68]
65008091:	mov    eax,DWORD PTR [eax+0x4]
65008094:	cmp    DWORD PTR [eax+0x4],ebp
65008097:	jne    0x6500809e
65008099:	mov    DWORD PTR [eax+0x4],ecx
6500809c:	jmp    0x650080ac
6500809e:	mov    eax,DWORD PTR [ebp+0x4]
650080a1:	cmp    DWORD PTR [eax],ebp
650080a3:	jne    0x650080a9
650080a5:	mov    DWORD PTR [eax],ecx
650080a7:	jmp    0x650080ac
650080a9:	mov    DWORD PTR [eax+0x8],ecx
650080ac:	mov    edx,DWORD PTR [ebp+0x4]
650080af:	mov    DWORD PTR [ecx+0x4],edx
650080b2:	mov    dl,BYTE PTR [ebp+0x28]
650080b5:	mov    al,BYTE PTR [ecx+0x28]
650080b8:	mov    BYTE PTR [ecx+0x28],dl
650080bb:	mov    BYTE PTR [ebp+0x28],al
650080be:	mov    bl,0x1
650080c0:	cmp    BYTE PTR [ebp+0x28],bl
650080c3:	jne    0x650081ea
650080c9:	mov    eax,DWORD PTR [esp+0x68]
650080cd:	mov    ecx,DWORD PTR [eax+0x4]
650080d0:	cmp    edi,DWORD PTR [ecx+0x4]
650080d3:	je     0x650081e7
650080d9:	lea    esp,[esp+0x0]
650080e0:	cmp    BYTE PTR [edi+0x28],bl
650080e3:	jne    0x650081e7
650080e9:	mov    ecx,DWORD PTR [esi]
650080eb:	cmp    edi,ecx
650080ed:	jne    0x65008165
650080ef:	mov    ecx,DWORD PTR [esi+0x8]
650080f2:	cmp    BYTE PTR [ecx+0x28],0x0
650080f6:	jne    0x6500810e
650080f8:	mov    edx,DWORD PTR [esp+0x68]
650080fc:	mov    BYTE PTR [ecx+0x28],bl
650080ff:	push   edx
65008100:	mov    ecx,esi
65008102:	mov    BYTE PTR [esi+0x28],0x0
65008106:	call   0x65008310
6500810b:	mov    ecx,DWORD PTR [esi+0x8]
6500810e:	cmp    BYTE PTR [ecx+0x29],0x0
65008112:	jne    0x65008199
65008118:	mov    eax,DWORD PTR [ecx]
6500811a:	cmp    BYTE PTR [eax+0x28],bl
6500811d:	jne    0x65008127
6500811f:	mov    edx,DWORD PTR [ecx+0x8]
65008122:	cmp    BYTE PTR [edx+0x28],bl
65008125:	je     0x65008195
65008127:	mov    eax,DWORD PTR [ecx+0x8]
6500812a:	cmp    BYTE PTR [eax+0x28],bl
6500812d:	jne    0x65008145
6500812f:	mov    edx,DWORD PTR [ecx]
65008131:	mov    eax,DWORD PTR [esp+0x68]
65008135:	mov    BYTE PTR [edx+0x28],bl
65008138:	push   eax
65008139:	mov    BYTE PTR [ecx+0x28],0x0
6500813d:	call   0x65008380
65008142:	mov    ecx,DWORD PTR [esi+0x8]
65008145:	mov    dl,BYTE PTR [esi+0x28]
65008148:	mov    BYTE PTR [ecx+0x28],dl
6500814b:	mov    BYTE PTR [esi+0x28],bl
6500814e:	mov    eax,DWORD PTR [ecx+0x8]
65008151:	mov    ecx,DWORD PTR [esp+0x68]
65008155:	push   ecx
65008156:	mov    ecx,esi
65008158:	mov    BYTE PTR [eax+0x28],bl
6500815b:	call   0x65008310
65008160:	jmp    0x650081e7
65008165:	cmp    BYTE PTR [ecx+0x28],0x0
65008169:	jne    0x65008180
6500816b:	mov    eax,DWORD PTR [esp+0x68]
6500816f:	mov    BYTE PTR [ecx+0x28],bl
65008172:	push   eax
65008173:	mov    ecx,esi
65008175:	mov    BYTE PTR [esi+0x28],0x0
65008179:	call   0x65008380
6500817e:	mov    ecx,DWORD PTR [esi]
65008180:	cmp    BYTE PTR [ecx+0x29],0x0
65008184:	jne    0x65008199
65008186:	mov    edx,DWORD PTR [ecx+0x8]
65008189:	cmp    BYTE PTR [edx+0x28],bl
6500818c:	jne    0x650081b0
6500818e:	mov    eax,DWORD PTR [ecx]
65008190:	cmp    BYTE PTR [eax+0x28],bl
65008193:	jne    0x650081b0
65008195:	mov    BYTE PTR [ecx+0x28],0x0
65008199:	mov    ecx,DWORD PTR [esp+0x68]
6500819d:	mov    edx,DWORD PTR [ecx+0x4]
650081a0:	mov    edi,esi
650081a2:	cmp    edi,DWORD PTR [edx+0x4]
650081a5:	mov    esi,DWORD PTR [esi+0x4]
650081a8:	jne    0x650080e0
650081ae:	jmp    0x650081e7
650081b0:	mov    edx,DWORD PTR [ecx]
650081b2:	cmp    BYTE PTR [edx+0x28],bl
650081b5:	jne    0x650081cd
650081b7:	mov    eax,DWORD PTR [ecx+0x8]
650081ba:	mov    edx,DWORD PTR [esp+0x68]
650081be:	mov    BYTE PTR [eax+0x28],bl
650081c1:	push   edx
650081c2:	mov    BYTE PTR [ecx+0x28],0x0
650081c6:	call   0x65008310
650081cb:	mov    ecx,DWORD PTR [esi]
650081cd:	mov    al,BYTE PTR [esi+0x28]
650081d0:	mov    edx,DWORD PTR [esp+0x68]
650081d4:	mov    BYTE PTR [ecx+0x28],al
650081d7:	mov    BYTE PTR [esi+0x28],bl
650081da:	mov    ecx,DWORD PTR [ecx]
650081dc:	mov    BYTE PTR [ecx+0x28],bl
650081df:	push   edx
650081e0:	mov    ecx,esi
650081e2:	call   0x65008380
650081e7:	mov    BYTE PTR [edi+0x28],bl
650081ea:	cmp    DWORD PTR [ebp+0x24],0x10
650081ee:	jb     0x650081fc
650081f0:	mov    eax,DWORD PTR [ebp+0x10]
650081f3:	push   eax
650081f4:	call   0x65011f02
650081f9:	add    esp,0x4
650081fc:	mov    DWORD PTR [ebp+0x24],0xf
65008203:	mov    DWORD PTR [ebp+0x20],0x0
6500820a:	push   ebp
6500820b:	mov    BYTE PTR [ebp+0x10],0x0
6500820f:	call   0x65011f02
65008214:	mov    ecx,DWORD PTR [esp+0x6c]
65008218:	mov    eax,DWORD PTR [ecx+0x8]
6500821b:	add    esp,0x4
6500821e:	test   eax,eax
65008220:	jbe    0x65008228
65008222:	add    eax,0xffffffff
65008225:	mov    DWORD PTR [ecx+0x8],eax
65008228:	mov    eax,DWORD PTR [esp+0x6c]
6500822c:	mov    ecx,DWORD PTR [esp+0x70]
65008230:	mov    edx,DWORD PTR [esp+0x74]
65008234:	mov    DWORD PTR [eax],ecx
65008236:	mov    DWORD PTR [eax+0x4],edx
65008239:	mov    ecx,DWORD PTR [esp+0x58]
6500823d:	mov    DWORD PTR fs:0x0,ecx
65008244:	pop    ecx
65008245:	pop    edi
65008246:	pop    esi
65008247:	pop    ebp
65008248:	pop    ebx
65008249:	add    esp,0x50
6500824c:	ret    0x10
6500824f:	int3   
65008250:	push   ebp
65008251:	mov    ebp,esp
65008253:	push   0xffffffff
65008255:	push   0x650223c0
6500825a:	mov    eax,fs:0x0
65008260:	push   eax
65008261:	sub    esp,0xc
65008264:	push   ebx
65008265:	push   esi
65008266:	push   edi
65008267:	mov    eax,ds:0x6502c09c
6500826c:	xor    eax,ebp
6500826e:	push   eax
6500826f:	lea    eax,[ebp-0xc]
65008272:	mov    fs:0x0,eax
65008278:	mov    DWORD PTR [ebp-0x10],esp
6500827b:	mov    ebx,ecx
6500827d:	mov    DWORD PTR [ebp-0x18],ebx
65008280:	mov    edi,DWORD PTR [ebp+0x8]
65008283:	cmp    BYTE PTR [edi+0x29],0x0
65008287:	mov    eax,DWORD PTR [ebx+0x4]
6500828a:	mov    DWORD PTR [ebp-0x14],eax
6500828d:	jne    0x650082d4
6500828f:	movzx  ecx,BYTE PTR [edi+0x28]
65008293:	push   ecx
65008294:	mov    ecx,DWORD PTR [ebp+0xc]
65008297:	lea    edx,[edi+0xc]
6500829a:	push   edx
6500829b:	push   eax
6500829c:	push   ecx
6500829d:	push   eax
6500829e:	call   0x65008410
650082a3:	mov    edx,DWORD PTR [ebp-0x14]
650082a6:	cmp    BYTE PTR [edx+0x29],0x0
650082aa:	mov    esi,eax
650082ac:	je     0x650082b1
650082ae:	mov    DWORD PTR [ebp-0x14],esi
650082b1:	mov    DWORD PTR [ebp-0x4],0x0
650082b8:	mov    eax,DWORD PTR [edi]
650082ba:	push   esi
650082bb:	push   eax
650082bc:	mov    ecx,ebx
650082be:	call   0x65008250
650082c3:	mov    DWORD PTR [esi],eax
650082c5:	mov    ecx,DWORD PTR [edi+0x8]
650082c8:	push   esi
650082c9:	push   ecx
650082ca:	mov    ecx,ebx
650082cc:	call   0x65008250
650082d1:	mov    DWORD PTR [esi+0x8],eax
650082d4:	mov    eax,DWORD PTR [ebp-0x14]
650082d7:	mov    ecx,DWORD PTR [ebp-0xc]
650082da:	mov    DWORD PTR fs:0x0,ecx
650082e1:	pop    ecx
650082e2:	pop    edi
650082e3:	pop    esi
650082e4:	pop    ebx
650082e5:	mov    esp,ebp
650082e7:	pop    ebp
650082e8:	ret    0x8
650082eb:	mov    edx,DWORD PTR [ebp-0x14]
650082ee:	mov    ecx,DWORD PTR [ebp-0x18]
650082f1:	push   edx
650082f2:	call   0x65008b30
650082f7:	push   0x0
650082f9:	push   0x0
650082fb:	call   0x65012306
65008300:	int3   
65008301:	int3   
65008302:	int3   
65008303:	int3   
65008304:	int3   
65008305:	int3   
65008306:	int3   
65008307:	int3   
65008308:	int3   
65008309:	int3   
6500830a:	int3   
6500830b:	int3   
6500830c:	int3   
6500830d:	int3   
6500830e:	int3   
6500830f:	int3   
65008310:	mov    eax,DWORD PTR [ecx+0x8]
65008313:	mov    edx,DWORD PTR [eax]
65008315:	mov    DWORD PTR [ecx+0x8],edx
65008318:	mov    edx,DWORD PTR [eax]
6500831a:	cmp    BYTE PTR [edx+0x29],0x0
6500831e:	jne    0x65008323
65008320:	mov    DWORD PTR [edx+0x4],ecx
65008323:	mov    edx,DWORD PTR [ecx+0x4]
65008326:	mov    DWORD PTR [eax+0x4],edx
65008329:	mov    edx,DWORD PTR [esp+0x4]
6500832d:	mov    edx,DWORD PTR [edx+0x4]
65008330:	cmp    ecx,DWORD PTR [edx+0x4]
65008333:	jne    0x65008340
65008335:	mov    DWORD PTR [edx+0x4],eax
65008338:	mov    DWORD PTR [eax],ecx
6500833a:	mov    DWORD PTR [ecx+0x4],eax
6500833d:	ret    0x4
65008340:	mov    edx,DWORD PTR [ecx+0x4]
65008343:	cmp    ecx,DWORD PTR [edx]
65008345:	jne    0x65008351
65008347:	mov    DWORD PTR [edx],eax
65008349:	mov    DWORD PTR [eax],ecx
6500834b:	mov    DWORD PTR [ecx+0x4],eax
6500834e:	ret    0x4
65008351:	mov    DWORD PTR [edx+0x8],eax
65008354:	mov    DWORD PTR [eax],ecx
65008356:	mov    DWORD PTR [ecx+0x4],eax
65008359:	ret    0x4
6500835c:	int3   
6500835d:	int3   
6500835e:	int3   
6500835f:	int3   
65008360:	mov    ecx,DWORD PTR [eax+0x8]
65008363:	cmp    BYTE PTR [ecx+0x29],0x0
65008367:	jne    0x6500837b
65008369:	lea    esp,[esp+0x0]
65008370:	mov    eax,ecx
65008372:	mov    ecx,DWORD PTR [eax+0x8]
65008375:	cmp    BYTE PTR [ecx+0x29],0x0
65008379:	je     0x65008370
6500837b:	ret    
6500837c:	int3   
6500837d:	int3   
6500837e:	int3   
6500837f:	int3   
65008380:	mov    eax,DWORD PTR [ecx]
65008382:	mov    edx,DWORD PTR [eax+0x8]
65008385:	mov    DWORD PTR [ecx],edx
65008387:	mov    edx,DWORD PTR [eax+0x8]
6500838a:	cmp    BYTE PTR [edx+0x29],0x0
6500838e:	jne    0x65008393
65008390:	mov    DWORD PTR [edx+0x4],ecx
65008393:	mov    edx,DWORD PTR [ecx+0x4]
65008396:	mov    DWORD PTR [eax+0x4],edx
65008399:	mov    edx,DWORD PTR [esp+0x4]
6500839d:	mov    edx,DWORD PTR [edx+0x4]
650083a0:	cmp    ecx,DWORD PTR [edx+0x4]
650083a3:	jne    0x650083b1
650083a5:	mov    DWORD PTR [edx+0x4],eax
650083a8:	mov    DWORD PTR [eax+0x8],ecx
650083ab:	mov    DWORD PTR [ecx+0x4],eax
650083ae:	ret    0x4
650083b1:	mov    edx,DWORD PTR [ecx+0x4]
650083b4:	cmp    ecx,DWORD PTR [edx+0x8]
650083b7:	jne    0x650083c5
650083b9:	mov    DWORD PTR [edx+0x8],eax
650083bc:	mov    DWORD PTR [eax+0x8],ecx
650083bf:	mov    DWORD PTR [ecx+0x4],eax
650083c2:	ret    0x4
650083c5:	mov    DWORD PTR [edx],eax
650083c7:	mov    DWORD PTR [eax+0x8],ecx
650083ca:	mov    DWORD PTR [ecx+0x4],eax
650083cd:	ret    0x4
650083d0:	push   0x2c
650083d2:	call   0x6501229c
650083d7:	add    esp,0x4
650083da:	test   eax,eax
650083dc:	je     0x650083e4
650083de:	mov    DWORD PTR [eax],0x0
650083e4:	lea    ecx,[eax+0x4]
650083e7:	test   ecx,ecx
650083e9:	je     0x650083f1
650083eb:	mov    DWORD PTR [ecx],0x0
650083f1:	lea    ecx,[eax+0x8]
650083f4:	test   ecx,ecx
650083f6:	je     0x650083fe
650083f8:	mov    DWORD PTR [ecx],0x0
650083fe:	mov    BYTE PTR [eax+0x28],0x1
65008402:	mov    BYTE PTR [eax+0x29],0x0
65008406:	ret    
65008407:	int3   
65008408:	int3   
65008409:	int3   
6500840a:	int3   
6500840b:	int3   
6500840c:	int3   
6500840d:	int3   
6500840e:	int3   
6500840f:	int3   
65008410:	push   ebp
65008411:	mov    ebp,esp
65008413:	push   0xffffffff
65008415:	push   0x650223a1
6500841a:	mov    eax,fs:0x0
65008420:	push   eax
65008421:	sub    esp,0xc
65008424:	push   ebx
65008425:	push   esi
65008426:	push   edi
65008427:	mov    eax,ds:0x6502c09c
6500842c:	xor    eax,ebp
6500842e:	push   eax
6500842f:	lea    eax,[ebp-0xc]
65008432:	mov    fs:0x0,eax
65008438:	mov    DWORD PTR [ebp-0x10],esp
6500843b:	push   0x2c
6500843d:	call   0x6501229c
65008442:	mov    esi,eax
65008444:	xor    ebx,ebx
65008446:	mov    DWORD PTR [ebp-0x4],ebx
65008449:	add    esp,0x4
6500844c:	mov    DWORD PTR [ebp-0x14],esi
6500844f:	mov    DWORD PTR [ebp-0x18],esi
65008452:	cmp    esi,ebx
65008454:	mov    BYTE PTR [ebp-0x4],0x1
65008458:	je     0x65008490
6500845a:	mov    eax,DWORD PTR [ebp+0x8]
6500845d:	mov    ecx,DWORD PTR [ebp+0xc]
65008460:	mov    edx,DWORD PTR [ebp+0x10]
65008463:	mov    DWORD PTR [esi],eax
65008465:	mov    eax,DWORD PTR [ebp+0x14]
65008468:	mov    DWORD PTR [esi+0x4],ecx
6500846b:	push   0xffffffff
6500846d:	lea    ecx,[esi+0xc]
65008470:	mov    DWORD PTR [esi+0x8],edx
65008473:	push   ebx
65008474:	mov    DWORD PTR [ecx+0x18],0xf
6500847b:	mov    DWORD PTR [ecx+0x14],ebx
6500847e:	push   eax
6500847f:	mov    BYTE PTR [ecx+0x4],bl
65008482:	call   0x65001780
65008487:	mov    cl,BYTE PTR [ebp+0x18]
6500848a:	mov    BYTE PTR [esi+0x28],cl
6500848d:	mov    BYTE PTR [esi+0x29],bl
65008490:	mov    eax,esi
65008492:	mov    ecx,DWORD PTR [ebp-0xc]
65008495:	mov    DWORD PTR fs:0x0,ecx
6500849c:	pop    ecx
6500849d:	pop    edi
6500849e:	pop    esi
6500849f:	pop    ebx
650084a0:	mov    esp,ebp
650084a2:	pop    ebp
650084a3:	ret    0x14
650084a6:	mov    edx,DWORD PTR [ebp-0x14]
650084a9:	push   edx
650084aa:	call   0x65011f02
650084af:	add    esp,0x4
650084b2:	xor    ebx,ebx
650084b4:	push   ebx
650084b5:	push   ebx
650084b6:	call   0x65012306
650084bb:	int3   
650084bc:	int3   
650084bd:	int3   
650084be:	int3   
650084bf:	int3   
650084c0:	push   ebp
650084c1:	mov    ebp,esp
650084c3:	and    esp,0xfffffff8
650084c6:	push   0xffffffff
650084c8:	push   0x650227d8
650084cd:	mov    eax,fs:0x0
650084d3:	push   eax
650084d4:	sub    esp,0x50
650084d7:	push   ebx
650084d8:	push   esi
650084d9:	push   edi
650084da:	mov    eax,ds:0x6502c09c
650084df:	xor    eax,esp
650084e1:	push   eax
650084e2:	lea    eax,[esp+0x60]
650084e6:	mov    fs:0x0,eax
650084ec:	mov    edi,ecx
650084ee:	xor    ebx,ebx
650084f0:	cmp    DWORD PTR [edi+0x8],0x4924923
650084f7:	jb     0x65008542
650084f9:	push   0x13
650084fb:	push   0x65028148
65008500:	lea    ecx,[esp+0x20]
65008504:	mov    DWORD PTR [esp+0x38],0xf
6500850c:	mov    DWORD PTR [esp+0x34],ebx
65008510:	mov    BYTE PTR [esp+0x24],bl
65008514:	call   0x65001860
65008519:	lea    eax,[esp+0x18]
6500851d:	push   eax
6500851e:	lea    ecx,[esp+0x38]
65008522:	mov    DWORD PTR [esp+0x6c],ebx
65008526:	call   0x65002cc0
6500852b:	push   0x65029ec8
65008530:	lea    ecx,[esp+0x38]
65008534:	push   ecx
65008535:	mov    DWORD PTR [esp+0x3c],0x65024b5c
6500853d:	call   0x65012306
65008542:	mov    edx,DWORD PTR [ebp+0x14]
65008545:	mov    eax,DWORD PTR [edi+0x4]
65008548:	mov    esi,DWORD PTR [ebp+0x10]
6500854b:	push   ebx
6500854c:	push   edx
6500854d:	push   eax
6500854e:	push   esi
6500854f:	push   eax
65008550:	call   0x65008e20
65008555:	add    DWORD PTR [edi+0x8],0x1
65008559:	mov    ecx,eax
6500855b:	mov    eax,DWORD PTR [edi+0x4]
6500855e:	cmp    esi,eax
65008560:	mov    DWORD PTR [esp+0x14],ecx
65008564:	jne    0x65008576
65008566:	mov    DWORD PTR [eax+0x4],ecx
65008569:	mov    eax,DWORD PTR [edi+0x4]
6500856c:	mov    DWORD PTR [eax],ecx
6500856e:	mov    edx,DWORD PTR [edi+0x4]
65008571:	mov    DWORD PTR [edx+0x8],ecx
65008574:	jmp    0x65008596
65008576:	cmp    BYTE PTR [ebp+0xc],bl
65008579:	je     0x65008588
6500857b:	mov    DWORD PTR [esi],ecx
6500857d:	mov    eax,DWORD PTR [edi+0x4]
65008580:	cmp    esi,DWORD PTR [eax]
65008582:	jne    0x65008596
65008584:	mov    DWORD PTR [eax],ecx
65008586:	jmp    0x65008596
65008588:	mov    DWORD PTR [esi+0x8],ecx
6500858b:	mov    eax,DWORD PTR [edi+0x4]
6500858e:	cmp    esi,DWORD PTR [eax+0x8]
65008591:	jne    0x65008596
65008593:	mov    DWORD PTR [eax+0x8],ecx
65008596:	mov    edx,DWORD PTR [ecx+0x4]
65008599:	cmp    BYTE PTR [edx+0x44],bl
6500859c:	lea    eax,[ecx+0x4]
6500859f:	mov    esi,ecx
650085a1:	jne    0x650086e2
650085a7:	mov    ecx,DWORD PTR [eax]
650085a9:	mov    edx,DWORD PTR [ecx+0x4]
650085ac:	cmp    ecx,DWORD PTR [edx]
650085ae:	jne    0x65008655
650085b4:	mov    edx,DWORD PTR [edx+0x8]
650085b7:	cmp    BYTE PTR [edx+0x44],bl
650085ba:	je     0x6500865c
650085c0:	cmp    esi,DWORD PTR [ecx+0x8]
650085c3:	jne    0x65008600
650085c5:	mov    esi,ecx
650085c7:	mov    ecx,DWORD PTR [esi+0x8]
650085ca:	mov    eax,DWORD PTR [ecx]
650085cc:	mov    DWORD PTR [esi+0x8],eax
650085cf:	mov    eax,DWORD PTR [ecx]
650085d1:	cmp    BYTE PTR [eax+0x45],bl
650085d4:	jne    0x650085d9
650085d6:	mov    DWORD PTR [eax+0x4],esi
650085d9:	mov    edx,DWORD PTR [esi+0x4]
650085dc:	lea    eax,[esi+0x4]
650085df:	mov    DWORD PTR [ecx+0x4],edx
650085e2:	mov    edx,DWORD PTR [edi+0x4]
650085e5:	cmp    esi,DWORD PTR [edx+0x4]
650085e8:	jne    0x650085ef
650085ea:	mov    DWORD PTR [edx+0x4],ecx
650085ed:	jmp    0x650085fc
650085ef:	mov    edx,DWORD PTR [eax]
650085f1:	cmp    esi,DWORD PTR [edx]
650085f3:	jne    0x650085f9
650085f5:	mov    DWORD PTR [edx],ecx
650085f7:	jmp    0x650085fc
650085f9:	mov    DWORD PTR [edx+0x8],ecx
650085fc:	mov    DWORD PTR [ecx],esi
650085fe:	mov    DWORD PTR [eax],ecx
65008600:	mov    ecx,DWORD PTR [eax]
65008602:	mov    BYTE PTR [ecx+0x44],0x1
65008606:	mov    edx,DWORD PTR [eax]
65008608:	mov    ecx,DWORD PTR [edx+0x4]
6500860b:	mov    BYTE PTR [ecx+0x44],bl
6500860e:	mov    edx,DWORD PTR [eax]
65008610:	mov    eax,DWORD PTR [edx+0x4]
65008613:	mov    ecx,DWORD PTR [eax]
65008615:	mov    edx,DWORD PTR [ecx+0x8]
65008618:	mov    DWORD PTR [eax],edx
6500861a:	mov    edx,DWORD PTR [ecx+0x8]
6500861d:	cmp    BYTE PTR [edx+0x45],bl
65008620:	jne    0x65008625
65008622:	mov    DWORD PTR [edx+0x4],eax
65008625:	mov    edx,DWORD PTR [eax+0x4]
65008628:	mov    DWORD PTR [ecx+0x4],edx
6500862b:	mov    edx,DWORD PTR [edi+0x4]
6500862e:	cmp    eax,DWORD PTR [edx+0x4]
65008631:	jne    0x6500863e
65008633:	mov    DWORD PTR [edx+0x4],ecx
65008636:	mov    DWORD PTR [ecx+0x8],eax
65008639:	jmp    0x650086cc
6500863e:	mov    edx,DWORD PTR [eax+0x4]
65008641:	cmp    eax,DWORD PTR [edx+0x8]
65008644:	jne    0x6500864e
65008646:	mov    DWORD PTR [edx+0x8],ecx
65008649:	mov    DWORD PTR [ecx+0x8],eax
6500864c:	jmp    0x650086cc
6500864e:	mov    DWORD PTR [edx],ecx
65008650:	mov    DWORD PTR [ecx+0x8],eax
65008653:	jmp    0x650086cc
65008655:	mov    edx,DWORD PTR [edx]
65008657:	cmp    BYTE PTR [edx+0x44],bl
6500865a:	jne    0x65008673
6500865c:	mov    BYTE PTR [ecx+0x44],0x1
65008660:	mov    BYTE PTR [edx+0x44],0x1
65008664:	mov    edx,DWORD PTR [eax]
65008666:	mov    ecx,DWORD PTR [edx+0x4]
65008669:	mov    BYTE PTR [ecx+0x44],bl
6500866c:	mov    edx,DWORD PTR [eax]
6500866e:	mov    esi,DWORD PTR [edx+0x4]
65008671:	jmp    0x650086cf
65008673:	cmp    esi,DWORD PTR [ecx]
65008675:	jne    0x65008681
65008677:	mov    esi,ecx
65008679:	push   esi
6500867a:	mov    ecx,edi
6500867c:	call   0x65008fc0
65008681:	mov    eax,DWORD PTR [esi+0x4]
65008684:	mov    BYTE PTR [eax+0x44],0x1
65008688:	mov    ecx,DWORD PTR [esi+0x4]
6500868b:	mov    edx,DWORD PTR [ecx+0x4]
6500868e:	mov    BYTE PTR [edx+0x44],bl
65008691:	mov    eax,DWORD PTR [esi+0x4]
65008694:	mov    eax,DWORD PTR [eax+0x4]
65008697:	mov    ecx,DWORD PTR [eax+0x8]
6500869a:	mov    edx,DWORD PTR [ecx]
6500869c:	mov    DWORD PTR [eax+0x8],edx
6500869f:	mov    edx,DWORD PTR [ecx]
650086a1:	cmp    BYTE PTR [edx+0x45],bl
650086a4:	jne    0x650086a9
650086a6:	mov    DWORD PTR [edx+0x4],eax
650086a9:	mov    edx,DWORD PTR [eax+0x4]
650086ac:	mov    DWORD PTR [ecx+0x4],edx
650086af:	mov    edx,DWORD PTR [edi+0x4]
650086b2:	cmp    eax,DWORD PTR [edx+0x4]
650086b5:	jne    0x650086bc
650086b7:	mov    DWORD PTR [edx+0x4],ecx
650086ba:	jmp    0x650086ca
650086bc:	mov    edx,DWORD PTR [eax+0x4]
650086bf:	cmp    eax,DWORD PTR [edx]
650086c1:	jne    0x650086c7
650086c3:	mov    DWORD PTR [edx],ecx
650086c5:	jmp    0x650086ca
650086c7:	mov    DWORD PTR [edx+0x8],ecx
650086ca:	mov    DWORD PTR [ecx],eax
650086cc:	mov    DWORD PTR [eax+0x4],ecx
650086cf:	mov    ecx,DWORD PTR [esi+0x4]
650086d2:	cmp    BYTE PTR [ecx+0x44],bl
650086d5:	lea    eax,[esi+0x4]
650086d8:	je     0x650085a7
650086de:	mov    ecx,DWORD PTR [esp+0x14]
650086e2:	mov    edx,DWORD PTR [edi+0x4]
650086e5:	mov    eax,DWORD PTR [edx+0x4]
650086e8:	mov    BYTE PTR [eax+0x44],0x1
650086ec:	mov    eax,DWORD PTR [ebp+0x8]
650086ef:	mov    DWORD PTR [eax+0x4],ecx
650086f2:	mov    DWORD PTR [eax],edi
650086f4:	mov    ecx,DWORD PTR [esp+0x60]
650086f8:	mov    DWORD PTR fs:0x0,ecx
650086ff:	pop    ecx
65008700:	pop    edi
65008701:	pop    esi
65008702:	pop    ebx
65008703:	mov    esp,ebp
65008705:	pop    ebp
65008706:	ret    0x10
65008709:	int3   
6500870a:	int3   
6500870b:	int3   
6500870c:	int3   
6500870d:	int3   
6500870e:	int3   
6500870f:	int3   
65008710:	push   ebx
65008711:	mov    ebx,DWORD PTR [esp+0xc]
65008715:	push   ebp
65008716:	mov    ebp,DWORD PTR [esp+0xc]
6500871a:	cmp    DWORD PTR [ebp+0x14],ebx
6500871d:	push   esi
6500871e:	push   edi
6500871f:	mov    esi,ecx
65008721:	jae    0x65008728
65008723:	call   0x65011ebe
65008728:	mov    edi,DWORD PTR [ebp+0x14]
6500872b:	mov    eax,DWORD PTR [esp+0x1c]
6500872f:	sub    edi,ebx
65008731:	cmp    eax,edi
65008733:	jae    0x65008737
65008735:	mov    edi,eax
65008737:	cmp    esi,ebp
65008739:	jne    0x6500875a
6500873b:	push   0xffffffff
6500873d:	add    edi,ebx
6500873f:	push   edi
65008740:	mov    ecx,esi
65008742:	call   0x65008ec0
65008747:	push   ebx
65008748:	push   0x0
6500874a:	mov    ecx,esi
6500874c:	call   0x65008ec0
65008751:	pop    edi
65008752:	mov    eax,esi
65008754:	pop    esi
65008755:	pop    ebp
65008756:	pop    ebx
65008757:	ret    0xc
6500875a:	cmp    edi,0x7ffffffe
65008760:	jbe    0x65008767
65008762:	call   0x65011e7f
65008767:	mov    eax,DWORD PTR [esi+0x18]
6500876a:	cmp    eax,edi
6500876c:	jae    0x65008789
6500876e:	mov    eax,DWORD PTR [esi+0x14]
65008771:	push   eax
65008772:	push   edi
65008773:	mov    ecx,esi
65008775:	call   0x65009260
6500877a:	test   edi,edi
6500877c:	jbe    0x650087f6
6500877e:	cmp    DWORD PTR [ebp+0x18],0x8
65008782:	jb     0x650087b5
65008784:	mov    ecx,DWORD PTR [ebp+0x4]
65008787:	jmp    0x650087b8
65008789:	test   edi,edi
6500878b:	jne    0x6500877c
6500878d:	cmp    eax,0x8
65008790:	mov    DWORD PTR [esi+0x14],edi
65008793:	jb     0x650087a4
65008795:	mov    eax,DWORD PTR [esi+0x4]
65008798:	mov    WORD PTR [eax],di
6500879b:	pop    edi
6500879c:	mov    eax,esi
6500879e:	pop    esi
6500879f:	pop    ebp
650087a0:	pop    ebx
650087a1:	ret    0xc
650087a4:	lea    eax,[esi+0x4]
650087a7:	pop    edi
650087a8:	mov    WORD PTR [eax],0x0
650087ad:	mov    eax,esi
650087af:	pop    esi
650087b0:	pop    ebp
650087b1:	pop    ebx
650087b2:	ret    0xc
650087b5:	lea    ecx,[ebp+0x4]
650087b8:	cmp    DWORD PTR [esi+0x18],0x8
650087bc:	lea    ebp,[esi+0x4]
650087bf:	jb     0x650087c6
650087c1:	mov    eax,DWORD PTR [ebp+0x0]
650087c4:	jmp    0x650087c8
650087c6:	mov    eax,ebp
650087c8:	mov    edx,DWORD PTR [esp+0x18]
650087cc:	lea    ecx,[ecx+edx*2]
650087cf:	lea    ebx,[edi+edi*1]
650087d2:	push   ebx
650087d3:	push   ecx
650087d4:	mov    ecx,DWORD PTR [esi+0x18]
650087d7:	lea    edx,[ecx+ecx*1]
650087da:	push   edx
650087db:	push   eax
650087dc:	call   0x65012073
650087e1:	add    esp,0x10
650087e4:	cmp    DWORD PTR [esi+0x18],0x8
650087e8:	mov    DWORD PTR [esi+0x14],edi
650087eb:	jb     0x650087f0
650087ed:	mov    ebp,DWORD PTR [ebp+0x0]
650087f0:	mov    WORD PTR [ebx+ebp*1],0x0
650087f6:	pop    edi
650087f7:	mov    eax,esi
650087f9:	pop    esi
650087fa:	pop    ebp
650087fb:	pop    ebx
650087fc:	ret    0xc
650087ff:	int3   
65008800:	push   ebp
65008801:	push   esi
65008802:	mov    esi,ecx
65008804:	mov    edx,DWORD PTR [esi+0x18]
65008807:	cmp    edx,0x8
6500880a:	push   edi
6500880b:	lea    ebp,[esi+0x4]
6500880e:	jb     0x65008815
65008810:	mov    ecx,DWORD PTR [ebp+0x0]
65008813:	jmp    0x65008817
65008815:	mov    ecx,ebp
65008817:	mov    eax,DWORD PTR [esp+0x10]
6500881b:	cmp    eax,ecx
6500881d:	jb     0x65008855
6500881f:	cmp    edx,0x8
65008822:	jb     0x65008829
65008824:	mov    ecx,DWORD PTR [ebp+0x0]
65008827:	jmp    0x6500882b
65008829:	mov    ecx,ebp
6500882b:	mov    edi,DWORD PTR [esi+0x14]
6500882e:	lea    ecx,[ecx+edi*2]
65008831:	cmp    ecx,eax
65008833:	jbe    0x65008855
65008835:	cmp    edx,0x8
65008838:	jb     0x6500883d
6500883a:	mov    ebp,DWORD PTR [ebp+0x0]
6500883d:	mov    edx,DWORD PTR [esp+0x14]
65008841:	sub    eax,ebp
65008843:	push   edx
65008844:	sar    eax,1
65008846:	push   eax
65008847:	push   esi
65008848:	mov    ecx,esi
6500884a:	call   0x65008710
6500884f:	pop    edi
65008850:	pop    esi
65008851:	pop    ebp
65008852:	ret    0x8
65008855:	mov    edi,DWORD PTR [esp+0x14]
65008859:	cmp    edi,0x7ffffffe
6500885f:	jbe    0x65008866
65008861:	call   0x65011e7f
65008866:	mov    eax,DWORD PTR [esi+0x18]
65008869:	cmp    eax,edi
6500886b:	jae    0x6500888a
6500886d:	mov    eax,DWORD PTR [esi+0x14]
65008870:	push   eax
65008871:	push   edi
65008872:	mov    ecx,esi
65008874:	call   0x65009260
65008879:	test   edi,edi
6500887b:	jbe    0x650088d2
6500887d:	mov    ecx,DWORD PTR [esi+0x18]
65008880:	cmp    ecx,0x8
65008883:	jb     0x650088a7
65008885:	mov    eax,DWORD PTR [ebp+0x0]
65008888:	jmp    0x650088a9
6500888a:	test   edi,edi
6500888c:	jne    0x6500887b
6500888e:	cmp    eax,0x8
65008891:	mov    DWORD PTR [esi+0x14],edi
65008894:	jb     0x65008899
65008896:	mov    ebp,DWORD PTR [ebp+0x0]
65008899:	pop    edi
6500889a:	mov    eax,esi
6500889c:	pop    esi
6500889d:	mov    WORD PTR [ebp+0x0],0x0
650088a3:	pop    ebp
650088a4:	ret    0x8
650088a7:	mov    eax,ebp
650088a9:	mov    edx,DWORD PTR [esp+0x10]
650088ad:	push   ebx
650088ae:	lea    ebx,[edi+edi*1]
650088b1:	push   ebx
650088b2:	push   edx
650088b3:	add    ecx,ecx
650088b5:	push   ecx
650088b6:	push   eax
650088b7:	call   0x65012073
650088bc:	add    esp,0x10
650088bf:	cmp    DWORD PTR [esi+0x18],0x8
650088c3:	mov    DWORD PTR [esi+0x14],edi
650088c6:	jb     0x650088cb
650088c8:	mov    ebp,DWORD PTR [ebp+0x0]
650088cb:	mov    WORD PTR [ebx+ebp*1],0x0
650088d1:	pop    ebx
650088d2:	pop    edi
650088d3:	mov    eax,esi
650088d5:	pop    esi
650088d6:	pop    ebp
650088d7:	ret    0x8
650088da:	int3   
650088db:	int3   
650088dc:	int3   
650088dd:	int3   
650088de:	int3   
650088df:	int3   
650088e0:	push   ebp
650088e1:	mov    ebp,esp
650088e3:	and    esp,0xfffffff8
650088e6:	push   0xffffffff
650088e8:	push   0x650227a8
650088ed:	mov    eax,fs:0x0
650088f3:	push   eax
650088f4:	sub    esp,0x50
650088f7:	push   ebx
650088f8:	push   esi
650088f9:	push   edi
650088fa:	mov    eax,ds:0x6502c09c
650088ff:	xor    eax,esp
65008901:	push   eax
65008902:	lea    eax,[esp+0x60]
65008906:	mov    fs:0x0,eax
6500890c:	mov    edi,ecx
6500890e:	xor    ebx,ebx
65008910:	cmp    DWORD PTR [edi+0x8],0x4924923
65008917:	jb     0x65008962
65008919:	push   0x13
6500891b:	push   0x65028148
65008920:	lea    ecx,[esp+0x20]
65008924:	mov    DWORD PTR [esp+0x38],0xf
6500892c:	mov    DWORD PTR [esp+0x34],ebx
65008930:	mov    BYTE PTR [esp+0x24],bl
65008934:	call   0x65001860
65008939:	lea    eax,[esp+0x18]
6500893d:	push   eax
6500893e:	lea    ecx,[esp+0x38]
65008942:	mov    DWORD PTR [esp+0x6c],ebx
65008946:	call   0x65002cc0
6500894b:	push   0x65029ec8
65008950:	lea    ecx,[esp+0x38]
65008954:	push   ecx
65008955:	mov    DWORD PTR [esp+0x3c],0x65024b5c
6500895d:	call   0x65012306
65008962:	mov    edx,DWORD PTR [ebp+0x14]
65008965:	mov    eax,DWORD PTR [edi+0x4]
65008968:	mov    esi,DWORD PTR [ebp+0x10]
6500896b:	push   ebx
6500896c:	push   edx
6500896d:	push   eax
6500896e:	push   esi
6500896f:	push   eax
65008970:	call   0x65009020
65008975:	add    DWORD PTR [edi+0x8],0x1
65008979:	mov    ecx,eax
6500897b:	mov    eax,DWORD PTR [edi+0x4]
6500897e:	cmp    esi,eax
65008980:	mov    DWORD PTR [esp+0x14],ecx
65008984:	jne    0x65008996
65008986:	mov    DWORD PTR [eax+0x4],ecx
65008989:	mov    eax,DWORD PTR [edi+0x4]
6500898c:	mov    DWORD PTR [eax],ecx
6500898e:	mov    edx,DWORD PTR [edi+0x4]
65008991:	mov    DWORD PTR [edx+0x8],ecx
65008994:	jmp    0x650089b6
65008996:	cmp    BYTE PTR [ebp+0xc],bl
65008999:	je     0x650089a8
6500899b:	mov    DWORD PTR [esi],ecx
6500899d:	mov    eax,DWORD PTR [edi+0x4]
650089a0:	cmp    esi,DWORD PTR [eax]
650089a2:	jne    0x650089b6
650089a4:	mov    DWORD PTR [eax],ecx
650089a6:	jmp    0x650089b6
650089a8:	mov    DWORD PTR [esi+0x8],ecx
650089ab:	mov    eax,DWORD PTR [edi+0x4]
650089ae:	cmp    esi,DWORD PTR [eax+0x8]
650089b1:	jne    0x650089b6
650089b3:	mov    DWORD PTR [eax+0x8],ecx
650089b6:	mov    edx,DWORD PTR [ecx+0x4]
650089b9:	cmp    BYTE PTR [edx+0x44],bl
650089bc:	lea    eax,[ecx+0x4]
650089bf:	mov    esi,ecx
650089c1:	jne    0x65008b02
650089c7:	mov    ecx,DWORD PTR [eax]
650089c9:	mov    edx,DWORD PTR [ecx+0x4]
650089cc:	cmp    ecx,DWORD PTR [edx]
650089ce:	jne    0x65008a75
650089d4:	mov    edx,DWORD PTR [edx+0x8]
650089d7:	cmp    BYTE PTR [edx+0x44],bl
650089da:	je     0x65008a7c
650089e0:	cmp    esi,DWORD PTR [ecx+0x8]
650089e3:	jne    0x65008a20
650089e5:	mov    esi,ecx
650089e7:	mov    ecx,DWORD PTR [esi+0x8]
650089ea:	mov    eax,DWORD PTR [ecx]
650089ec:	mov    DWORD PTR [esi+0x8],eax
650089ef:	mov    eax,DWORD PTR [ecx]
650089f1:	cmp    BYTE PTR [eax+0x45],bl
650089f4:	jne    0x650089f9
650089f6:	mov    DWORD PTR [eax+0x4],esi
650089f9:	mov    edx,DWORD PTR [esi+0x4]
650089fc:	lea    eax,[esi+0x4]
650089ff:	mov    DWORD PTR [ecx+0x4],edx
65008a02:	mov    edx,DWORD PTR [edi+0x4]
65008a05:	cmp    esi,DWORD PTR [edx+0x4]
65008a08:	jne    0x65008a0f
65008a0a:	mov    DWORD PTR [edx+0x4],ecx
65008a0d:	jmp    0x65008a1c
65008a0f:	mov    edx,DWORD PTR [eax]
65008a11:	cmp    esi,DWORD PTR [edx]
65008a13:	jne    0x65008a19
65008a15:	mov    DWORD PTR [edx],ecx
65008a17:	jmp    0x65008a1c
65008a19:	mov    DWORD PTR [edx+0x8],ecx
65008a1c:	mov    DWORD PTR [ecx],esi
65008a1e:	mov    DWORD PTR [eax],ecx
65008a20:	mov    ecx,DWORD PTR [eax]
65008a22:	mov    BYTE PTR [ecx+0x44],0x1
65008a26:	mov    edx,DWORD PTR [eax]
65008a28:	mov    ecx,DWORD PTR [edx+0x4]
65008a2b:	mov    BYTE PTR [ecx+0x44],bl
65008a2e:	mov    edx,DWORD PTR [eax]
65008a30:	mov    eax,DWORD PTR [edx+0x4]
65008a33:	mov    ecx,DWORD PTR [eax]
65008a35:	mov    edx,DWORD PTR [ecx+0x8]
65008a38:	mov    DWORD PTR [eax],edx
65008a3a:	mov    edx,DWORD PTR [ecx+0x8]
65008a3d:	cmp    BYTE PTR [edx+0x45],bl
65008a40:	jne    0x65008a45
65008a42:	mov    DWORD PTR [edx+0x4],eax
65008a45:	mov    edx,DWORD PTR [eax+0x4]
65008a48:	mov    DWORD PTR [ecx+0x4],edx
65008a4b:	mov    edx,DWORD PTR [edi+0x4]
65008a4e:	cmp    eax,DWORD PTR [edx+0x4]
65008a51:	jne    0x65008a5e
65008a53:	mov    DWORD PTR [edx+0x4],ecx
65008a56:	mov    DWORD PTR [ecx+0x8],eax
65008a59:	jmp    0x65008aec
65008a5e:	mov    edx,DWORD PTR [eax+0x4]
65008a61:	cmp    eax,DWORD PTR [edx+0x8]
65008a64:	jne    0x65008a6e
65008a66:	mov    DWORD PTR [edx+0x8],ecx
65008a69:	mov    DWORD PTR [ecx+0x8],eax
65008a6c:	jmp    0x65008aec
65008a6e:	mov    DWORD PTR [edx],ecx
65008a70:	mov    DWORD PTR [ecx+0x8],eax
65008a73:	jmp    0x65008aec
65008a75:	mov    edx,DWORD PTR [edx]
65008a77:	cmp    BYTE PTR [edx+0x44],bl
65008a7a:	jne    0x65008a93
65008a7c:	mov    BYTE PTR [ecx+0x44],0x1
65008a80:	mov    BYTE PTR [edx+0x44],0x1
65008a84:	mov    edx,DWORD PTR [eax]
65008a86:	mov    ecx,DWORD PTR [edx+0x4]
65008a89:	mov    BYTE PTR [ecx+0x44],bl
65008a8c:	mov    edx,DWORD PTR [eax]
65008a8e:	mov    esi,DWORD PTR [edx+0x4]
65008a91:	jmp    0x65008aef
65008a93:	cmp    esi,DWORD PTR [ecx]
65008a95:	jne    0x65008aa1
65008a97:	mov    esi,ecx
65008a99:	push   esi
65008a9a:	mov    ecx,edi
65008a9c:	call   0x65008fc0
65008aa1:	mov    eax,DWORD PTR [esi+0x4]
65008aa4:	mov    BYTE PTR [eax+0x44],0x1
65008aa8:	mov    ecx,DWORD PTR [esi+0x4]
65008aab:	mov    edx,DWORD PTR [ecx+0x4]
65008aae:	mov    BYTE PTR [edx+0x44],bl
65008ab1:	mov    eax,DWORD PTR [esi+0x4]
65008ab4:	mov    eax,DWORD PTR [eax+0x4]
65008ab7:	mov    ecx,DWORD PTR [eax+0x8]
65008aba:	mov    edx,DWORD PTR [ecx]
65008abc:	mov    DWORD PTR [eax+0x8],edx
65008abf:	mov    edx,DWORD PTR [ecx]
65008ac1:	cmp    BYTE PTR [edx+0x45],bl
65008ac4:	jne    0x65008ac9
65008ac6:	mov    DWORD PTR [edx+0x4],eax
65008ac9:	mov    edx,DWORD PTR [eax+0x4]
65008acc:	mov    DWORD PTR [ecx+0x4],edx
65008acf:	mov    edx,DWORD PTR [edi+0x4]
65008ad2:	cmp    eax,DWORD PTR [edx+0x4]
65008ad5:	jne    0x65008adc
65008ad7:	mov    DWORD PTR [edx+0x4],ecx
65008ada:	jmp    0x65008aea
65008adc:	mov    edx,DWORD PTR [eax+0x4]
65008adf:	cmp    eax,DWORD PTR [edx]
65008ae1:	jne    0x65008ae7
65008ae3:	mov    DWORD PTR [edx],ecx
65008ae5:	jmp    0x65008aea
65008ae7:	mov    DWORD PTR [edx+0x8],ecx
65008aea:	mov    DWORD PTR [ecx],eax
65008aec:	mov    DWORD PTR [eax+0x4],ecx
65008aef:	mov    ecx,DWORD PTR [esi+0x4]
65008af2:	cmp    BYTE PTR [ecx+0x44],bl
65008af5:	lea    eax,[esi+0x4]
65008af8:	je     0x650089c7
65008afe:	mov    ecx,DWORD PTR [esp+0x14]
65008b02:	mov    edx,DWORD PTR [edi+0x4]
65008b05:	mov    eax,DWORD PTR [edx+0x4]
65008b08:	mov    BYTE PTR [eax+0x44],0x1
65008b0c:	mov    eax,DWORD PTR [ebp+0x8]
65008b0f:	mov    DWORD PTR [eax+0x4],ecx
65008b12:	mov    DWORD PTR [eax],edi
65008b14:	mov    ecx,DWORD PTR [esp+0x60]
65008b18:	mov    DWORD PTR fs:0x0,ecx
65008b1f:	pop    ecx
65008b20:	pop    edi
65008b21:	pop    esi
65008b22:	pop    ebx
65008b23:	mov    esp,ebp
65008b25:	pop    ebp
65008b26:	ret    0x10
65008b29:	int3   
65008b2a:	int3   
65008b2b:	int3   
65008b2c:	int3   
65008b2d:	int3   
65008b2e:	int3   
65008b2f:	int3   
65008b30:	push   ebx
65008b31:	push   ebp
65008b32:	push   esi
65008b33:	mov    esi,DWORD PTR [esp+0x10]
65008b37:	xor    ebx,ebx
65008b39:	cmp    BYTE PTR [esi+0x29],bl
65008b3c:	push   edi
65008b3d:	mov    ebp,ecx
65008b3f:	mov    edi,esi
65008b41:	jne    0x65008b7f
65008b43:	mov    eax,DWORD PTR [edi+0x8]
65008b46:	push   eax
65008b47:	mov    ecx,ebp
65008b49:	call   0x65008b30
65008b4e:	cmp    DWORD PTR [esi+0x24],0x10
65008b52:	mov    edi,DWORD PTR [edi]
65008b54:	jb     0x65008b62
65008b56:	mov    ecx,DWORD PTR [esi+0x10]
65008b59:	push   ecx
65008b5a:	call   0x65011f02
65008b5f:	add    esp,0x4
65008b62:	mov    DWORD PTR [esi+0x24],0xf
65008b69:	mov    DWORD PTR [esi+0x20],ebx
65008b6c:	push   esi
65008b6d:	mov    BYTE PTR [esi+0x10],bl
65008b70:	call   0x65011f02
65008b75:	add    esp,0x4
65008b78:	cmp    BYTE PTR [edi+0x29],bl
65008b7b:	mov    esi,edi
65008b7d:	je     0x65008b43
65008b7f:	pop    edi
65008b80:	pop    esi
65008b81:	pop    ebp
65008b82:	pop    ebx
65008b83:	ret    0x4
65008b86:	int3   
65008b87:	int3   
65008b88:	int3   
65008b89:	int3   
65008b8a:	int3   
65008b8b:	int3   
65008b8c:	int3   
65008b8d:	int3   
65008b8e:	int3   
65008b8f:	int3   
65008b90:	sub    esp,0x8
65008b93:	mov    eax,DWORD PTR [eax+0x4]
65008b96:	push   esi
65008b97:	mov    esi,DWORD PTR [eax+0x4]
65008b9a:	cmp    BYTE PTR [esi+0x29],0x0
65008b9e:	mov    DWORD PTR [esp+0x4],eax
65008ba2:	jne    0x65008c15
65008ba4:	mov    edx,DWORD PTR [ecx+0x18]
65008ba7:	push   ebx
65008ba8:	mov    ebx,DWORD PTR [ecx+0x14]
65008bab:	push   ebp
65008bac:	push   edi
65008bad:	mov    DWORD PTR [esp+0x14],edx
65008bb1:	lea    ebp,[ecx+0x4]
65008bb4:	cmp    DWORD PTR [esp+0x14],0x10
65008bb9:	jb     0x65008bc0
65008bbb:	mov    edx,DWORD PTR [ebp+0x0]
65008bbe:	jmp    0x65008bc2
65008bc0:	mov    edx,ebp
65008bc2:	mov    edi,DWORD PTR [esi+0x20]
65008bc5:	mov    eax,edi
65008bc7:	cmp    eax,edi
65008bc9:	jae    0x65008bcb
65008bcb:	cmp    edi,ebx
65008bcd:	mov    ecx,edi
65008bcf:	jb     0x65008bd3
65008bd1:	mov    ecx,ebx
65008bd3:	cmp    DWORD PTR [esi+0x24],0x10
65008bd7:	jb     0x65008bde
65008bd9:	mov    eax,DWORD PTR [esi+0x10]
65008bdc:	jmp    0x65008be1
65008bde:	lea    eax,[esi+0x10]
65008be1:	push   ecx
65008be2:	push   edx
65008be3:	push   eax
65008be4:	call   0x65002c30
65008be9:	add    esp,0xc
65008bec:	test   eax,eax
65008bee:	jne    0x65008bfb
65008bf0:	cmp    edi,ebx
65008bf2:	jb     0x65008bfd
65008bf4:	cmp    edi,ebx
65008bf6:	setne  al
65008bf9:	test   eax,eax
65008bfb:	jge    0x65008c02
65008bfd:	mov    esi,DWORD PTR [esi+0x8]
65008c00:	jmp    0x65008c08
65008c02:	mov    DWORD PTR [esp+0x10],esi
65008c06:	mov    esi,DWORD PTR [esi]
65008c08:	cmp    BYTE PTR [esi+0x29],0x0
65008c0c:	je     0x65008bb4
65008c0e:	mov    eax,DWORD PTR [esp+0x10]
65008c12:	pop    edi
65008c13:	pop    ebp
65008c14:	pop    ebx
65008c15:	pop    esi
65008c16:	add    esp,0x8
65008c19:	ret    
65008c1a:	int3   
65008c1b:	int3   
65008c1c:	int3   
65008c1d:	int3   
65008c1e:	int3   
65008c1f:	int3   
65008c20:	sub    esp,0x10
65008c23:	mov    ecx,DWORD PTR [ecx+0x4]
65008c26:	push   edi
65008c27:	mov    edi,DWORD PTR [ecx+0x4]
65008c2a:	cmp    BYTE PTR [edi+0x29],0x0
65008c2e:	mov    DWORD PTR [esp+0x8],ecx
65008c32:	jne    0x65008cb1
65008c34:	mov    edx,DWORD PTR [eax+0x14]
65008c37:	mov    ecx,DWORD PTR [eax+0x18]
65008c3a:	push   ebx
65008c3b:	push   ebp
65008c3c:	add    eax,0x4
65008c3f:	push   esi
65008c40:	mov    ebp,edx
65008c42:	mov    DWORD PTR [esp+0x1c],ecx
65008c46:	mov    DWORD PTR [esp+0x10],eax
65008c4a:	lea    ebx,[ebx+0x0]
65008c50:	cmp    DWORD PTR [edi+0x24],0x10
65008c54:	mov    ebx,DWORD PTR [edi+0x20]
65008c57:	jb     0x65008c5e
65008c59:	mov    edx,DWORD PTR [edi+0x10]
65008c5c:	jmp    0x65008c61
65008c5e:	lea    edx,[edi+0x10]
65008c61:	mov    esi,ebp
65008c63:	cmp    esi,ebx
65008c65:	mov    ecx,esi
65008c67:	jb     0x65008c6b
65008c69:	mov    ecx,ebx
65008c6b:	cmp    DWORD PTR [esp+0x1c],0x10
65008c70:	mov    eax,DWORD PTR [esp+0x10]
65008c74:	jb     0x65008c78
65008c76:	mov    eax,DWORD PTR [eax]
65008c78:	push   ecx
65008c79:	push   edx
65008c7a:	push   eax
65008c7b:	call   0x65002c30
65008c80:	add    esp,0xc
65008c83:	test   eax,eax
65008c85:	jne    0x65008c92
65008c87:	cmp    esi,ebx
65008c89:	jb     0x65008c94
65008c8b:	cmp    esi,ebx
65008c8d:	setne  al
65008c90:	test   eax,eax
65008c92:	jge    0x65008c9c
65008c94:	mov    DWORD PTR [esp+0x14],edi
65008c98:	mov    edi,DWORD PTR [edi]
65008c9a:	jmp    0x65008c9f
65008c9c:	mov    edi,DWORD PTR [edi+0x8]
65008c9f:	cmp    BYTE PTR [edi+0x29],0x0
65008ca3:	je     0x65008c50
65008ca5:	mov    eax,DWORD PTR [esp+0x14]
65008ca9:	pop    esi
65008caa:	pop    ebp
65008cab:	pop    ebx
65008cac:	pop    edi
65008cad:	add    esp,0x10
65008cb0:	ret    
65008cb1:	mov    eax,ecx
65008cb3:	pop    edi
65008cb4:	add    esp,0x10
65008cb7:	ret    
65008cb8:	int3   
65008cb9:	int3   
65008cba:	int3   
65008cbb:	int3   
65008cbc:	int3   
65008cbd:	int3   
65008cbe:	int3   
65008cbf:	int3   
65008cc0:	cmp    DWORD PTR [esi],0x0
65008cc3:	jne    0x65008cca
65008cc5:	call   0x65012273
65008cca:	mov    eax,DWORD PTR [esi+0x4]
65008ccd:	cmp    BYTE PTR [eax+0x29],0x0
65008cd1:	je     0x65008ce4
65008cd3:	mov    eax,DWORD PTR [eax+0x8]
65008cd6:	mov    DWORD PTR [esi+0x4],eax
65008cd9:	cmp    BYTE PTR [eax+0x29],0x0
65008cdd:	je     0x65008d36
65008cdf:	jmp    0x65012273
65008ce4:	mov    ecx,DWORD PTR [eax]
65008ce6:	cmp    BYTE PTR [ecx+0x29],0x0
65008cea:	jne    0x65008d04
65008cec:	mov    eax,DWORD PTR [ecx+0x8]
65008cef:	cmp    BYTE PTR [eax+0x29],0x0
65008cf3:	jne    0x65008d00
65008cf5:	mov    ecx,eax
65008cf7:	mov    eax,DWORD PTR [ecx+0x8]
65008cfa:	cmp    BYTE PTR [eax+0x29],0x0
65008cfe:	je     0x65008cf5
65008d00:	mov    DWORD PTR [esi+0x4],ecx
65008d03:	ret    
65008d04:	mov    eax,DWORD PTR [eax+0x4]
65008d07:	cmp    BYTE PTR [eax+0x29],0x0
65008d0b:	jne    0x65008d25
65008d0d:	lea    ecx,[ecx+0x0]
65008d10:	mov    ecx,DWORD PTR [esi+0x4]
65008d13:	cmp    ecx,DWORD PTR [eax]
65008d15:	jne    0x65008d25
65008d17:	mov    DWORD PTR [esi+0x4],eax
65008d1a:	mov    edx,eax
65008d1c:	mov    eax,DWORD PTR [edx+0x4]
65008d1f:	cmp    BYTE PTR [eax+0x29],0x0
65008d23:	je     0x65008d10
65008d25:	mov    ecx,DWORD PTR [esi+0x4]
65008d28:	cmp    BYTE PTR [ecx+0x29],0x0
65008d2c:	je     0x65008d33
65008d2e:	jmp    0x65012273
65008d33:	mov    DWORD PTR [esi+0x4],eax
65008d36:	ret    
65008d37:	int3   
65008d38:	int3   
65008d39:	int3   
65008d3a:	int3   
65008d3b:	int3   
65008d3c:	int3   
65008d3d:	int3   
65008d3e:	int3   
65008d3f:	int3   
65008d40:	push   ecx
65008d41:	mov    eax,DWORD PTR [ecx+0x4]
65008d44:	push   esi
65008d45:	mov    esi,DWORD PTR [eax+0x4]
65008d48:	cmp    BYTE PTR [esi+0x45],0x0
65008d4c:	mov    DWORD PTR [esp+0x4],eax
65008d50:	jne    0x65008dc7
65008d52:	mov    eax,DWORD PTR [esp+0xc]
65008d56:	mov    ecx,DWORD PTR [eax+0x18]
65008d59:	push   ebx
65008d5a:	mov    ebx,DWORD PTR [eax+0x14]
65008d5d:	push   ebp
65008d5e:	push   edi
65008d5f:	mov    DWORD PTR [esp+0x18],ecx
65008d63:	lea    ebp,[eax+0x4]
65008d66:	cmp    DWORD PTR [esp+0x18],0x10
65008d6b:	jb     0x65008d72
65008d6d:	mov    edx,DWORD PTR [ebp+0x0]
65008d70:	jmp    0x65008d74
65008d72:	mov    edx,ebp
65008d74:	mov    edi,DWORD PTR [esi+0x20]
65008d77:	mov    eax,edi
65008d79:	cmp    eax,edi
65008d7b:	jae    0x65008d7d
65008d7d:	cmp    edi,ebx
65008d7f:	mov    ecx,edi
65008d81:	jb     0x65008d85
65008d83:	mov    ecx,ebx
65008d85:	cmp    DWORD PTR [esi+0x24],0x10
65008d89:	jb     0x65008d90
65008d8b:	mov    eax,DWORD PTR [esi+0x10]
65008d8e:	jmp    0x65008d93
65008d90:	lea    eax,[esi+0x10]
65008d93:	push   ecx
65008d94:	push   edx
65008d95:	push   eax
65008d96:	call   0x65002c30
65008d9b:	add    esp,0xc
65008d9e:	test   eax,eax
65008da0:	jne    0x65008dad
65008da2:	cmp    edi,ebx
65008da4:	jb     0x65008daf
65008da6:	cmp    edi,ebx
65008da8:	setne  al
65008dab:	test   eax,eax
65008dad:	jge    0x65008db4
65008daf:	mov    esi,DWORD PTR [esi+0x8]
65008db2:	jmp    0x65008dba
65008db4:	mov    DWORD PTR [esp+0x10],esi
65008db8:	mov    esi,DWORD PTR [esi]
65008dba:	cmp    BYTE PTR [esi+0x45],0x0
65008dbe:	je     0x65008d66
65008dc0:	mov    eax,DWORD PTR [esp+0x10]
65008dc4:	pop    edi
65008dc5:	pop    ebp
65008dc6:	pop    ebx
65008dc7:	pop    esi
65008dc8:	pop    ecx
65008dc9:	ret    0x4
65008dcc:	int3   
65008dcd:	int3   
65008dce:	int3   
65008dcf:	int3   
65008dd0:	mov    edx,DWORD PTR [esp+0x4]
65008dd4:	mov    eax,DWORD PTR [edx+0x8]
65008dd7:	push   esi
65008dd8:	mov    esi,DWORD PTR [eax]
65008dda:	mov    DWORD PTR [edx+0x8],esi
65008ddd:	mov    esi,DWORD PTR [eax]
65008ddf:	cmp    BYTE PTR [esi+0x45],0x0
65008de3:	jne    0x65008de8
65008de5:	mov    DWORD PTR [esi+0x4],edx
65008de8:	mov    esi,DWORD PTR [edx+0x4]
65008deb:	mov    DWORD PTR [eax+0x4],esi
65008dee:	mov    ecx,DWORD PTR [ecx+0x4]
65008df1:	cmp    edx,DWORD PTR [ecx+0x4]
65008df4:	pop    esi
65008df5:	jne    0x65008e02
65008df7:	mov    DWORD PTR [ecx+0x4],eax
65008dfa:	mov    DWORD PTR [eax],edx
65008dfc:	mov    DWORD PTR [edx+0x4],eax
65008dff:	ret    0x4
65008e02:	mov    ecx,DWORD PTR [edx+0x4]
65008e05:	cmp    edx,DWORD PTR [ecx]
65008e07:	jne    0x65008e13
65008e09:	mov    DWORD PTR [ecx],eax
65008e0b:	mov    DWORD PTR [eax],edx
65008e0d:	mov    DWORD PTR [edx+0x4],eax
65008e10:	ret    0x4
65008e13:	mov    DWORD PTR [ecx+0x8],eax
65008e16:	mov    DWORD PTR [eax],edx
65008e18:	mov    DWORD PTR [edx+0x4],eax
65008e1b:	ret    0x4
65008e1e:	int3   
65008e1f:	int3   
65008e20:	push   ebp
65008e21:	mov    ebp,esp
65008e23:	push   0xffffffff
65008e25:	push   0x65022371
65008e2a:	mov    eax,fs:0x0
65008e30:	push   eax
65008e31:	sub    esp,0xc
65008e34:	push   ebx
65008e35:	push   esi
65008e36:	push   edi
65008e37:	mov    eax,ds:0x6502c09c
65008e3c:	xor    eax,ebp
65008e3e:	push   eax
65008e3f:	lea    eax,[ebp-0xc]
65008e42:	mov    fs:0x0,eax
65008e48:	mov    DWORD PTR [ebp-0x10],esp
65008e4b:	push   0x48
65008e4d:	call   0x6501229c
65008e52:	mov    esi,eax
65008e54:	mov    DWORD PTR [ebp-0x4],0x0
65008e5b:	add    esp,0x4
65008e5e:	mov    DWORD PTR [ebp-0x14],esi
65008e61:	mov    DWORD PTR [ebp-0x18],esi
65008e64:	test   esi,esi
65008e66:	mov    BYTE PTR [ebp-0x4],0x1
65008e6a:	je     0x65008e93
65008e6c:	mov    eax,DWORD PTR [ebp+0x8]
65008e6f:	mov    ecx,DWORD PTR [ebp+0xc]
65008e72:	mov    edx,DWORD PTR [ebp+0x10]
65008e75:	mov    DWORD PTR [esi],eax
65008e77:	mov    eax,DWORD PTR [ebp+0x14]
65008e7a:	mov    DWORD PTR [esi+0x4],ecx
65008e7d:	push   eax
65008e7e:	lea    ecx,[esi+0xc]
65008e81:	mov    DWORD PTR [esi+0x8],edx
65008e84:	call   0x650094c0
65008e89:	mov    cl,BYTE PTR [ebp+0x18]
65008e8c:	mov    BYTE PTR [esi+0x44],cl
65008e8f:	mov    BYTE PTR [esi+0x45],0x0
65008e93:	mov    eax,esi
65008e95:	mov    ecx,DWORD PTR [ebp-0xc]
65008e98:	mov    DWORD PTR fs:0x0,ecx
65008e9f:	pop    ecx
65008ea0:	pop    edi
65008ea1:	pop    esi
65008ea2:	pop    ebx
65008ea3:	mov    esp,ebp
65008ea5:	pop    ebp
65008ea6:	ret    0x14
65008ea9:	mov    edx,DWORD PTR [ebp-0x14]
65008eac:	push   edx
65008ead:	call   0x65011f02
65008eb2:	add    esp,0x4
65008eb5:	push   0x0
65008eb7:	push   0x0
65008eb9:	call   0x65012306
65008ebe:	int3   
65008ebf:	int3   
65008ec0:	push   ebx
65008ec1:	mov    ebx,DWORD PTR [esp+0x8]
65008ec5:	push   esi
65008ec6:	mov    esi,ecx
65008ec8:	cmp    DWORD PTR [esi+0x14],ebx
65008ecb:	push   edi
65008ecc:	jae    0x65008ed3
65008ece:	call   0x65011ebe
65008ed3:	mov    eax,DWORD PTR [esi+0x14]
65008ed6:	mov    edi,DWORD PTR [esp+0x14]
65008eda:	sub    eax,ebx
65008edc:	cmp    eax,edi
65008ede:	jae    0x65008ee2
65008ee0:	mov    edi,eax
65008ee2:	test   edi,edi
65008ee4:	jbe    0x65008f4f
65008ee6:	mov    ecx,DWORD PTR [esi+0x18]
65008ee9:	cmp    ecx,0x8
65008eec:	push   ebp
65008eed:	lea    ebp,[esi+0x4]
65008ef0:	jb     0x65008efb
65008ef2:	mov    edx,DWORD PTR [ebp+0x0]
65008ef5:	mov    DWORD PTR [esp+0x14],edx
65008ef9:	jmp    0x65008eff
65008efb:	mov    DWORD PTR [esp+0x14],ebp
65008eff:	cmp    ecx,0x8
65008f02:	jb     0x65008f0d
65008f04:	mov    edx,DWORD PTR [ebp+0x0]
65008f07:	mov    DWORD PTR [esp+0x18],edx
65008f0b:	jmp    0x65008f11
65008f0d:	mov    DWORD PTR [esp+0x18],ebp
65008f11:	mov    edx,DWORD PTR [esp+0x14]
65008f15:	sub    eax,edi
65008f17:	add    eax,eax
65008f19:	push   eax
65008f1a:	lea    eax,[ebx+edi*1]
65008f1d:	lea    eax,[edx+eax*2]
65008f20:	sub    ecx,ebx
65008f22:	push   eax
65008f23:	add    ecx,ecx
65008f25:	push   ecx
65008f26:	mov    ecx,DWORD PTR [esp+0x24]
65008f2a:	lea    edx,[ecx+ebx*2]
65008f2d:	push   edx
65008f2e:	call   0x650120ee
65008f33:	mov    eax,DWORD PTR [esi+0x14]
65008f36:	sub    eax,edi
65008f38:	add    esp,0x10
65008f3b:	cmp    DWORD PTR [esi+0x18],0x8
65008f3f:	mov    DWORD PTR [esi+0x14],eax
65008f42:	jb     0x65008f47
65008f44:	mov    ebp,DWORD PTR [ebp+0x0]
65008f47:	mov    WORD PTR [ebp+eax*2+0x0],0x0
65008f4e:	pop    ebp
65008f4f:	pop    edi
65008f50:	mov    eax,esi
65008f52:	pop    esi
65008f53:	pop    ebx
65008f54:	ret    0x8
65008f57:	int3   
65008f58:	int3   
65008f59:	int3   
65008f5a:	int3   
65008f5b:	int3   
65008f5c:	int3   
65008f5d:	int3   
65008f5e:	int3   
65008f5f:	int3   
65008f60:	mov    eax,DWORD PTR [ecx+0x4]
65008f63:	push   ebp
65008f64:	push   esi
65008f65:	mov    esi,DWORD PTR [eax+0x4]
65008f68:	cmp    BYTE PTR [esi+0x45],0x0
65008f6c:	mov    ebp,eax
65008f6e:	jne    0x65008fb6
65008f70:	push   ebx
65008f71:	push   edi
65008f72:	mov    edi,DWORD PTR [esp+0x14]
65008f76:	lea    ebx,[edi+0x4]
65008f79:	lea    esp,[esp+0x0]
65008f80:	cmp    DWORD PTR [edi+0x18],0x8
65008f84:	mov    edx,DWORD PTR [edi+0x14]
65008f87:	lea    ecx,[esi+0xc]
65008f8a:	jb     0x65008f90
65008f8c:	mov    eax,DWORD PTR [ebx]
65008f8e:	jmp    0x65008f92
65008f90:	mov    eax,ebx
65008f92:	push   edx
65008f93:	push   eax
65008f94:	mov    eax,DWORD PTR [ecx+0x14]
65008f97:	push   eax
65008f98:	push   0x0
65008f9a:	call   0x6500a240
65008f9f:	test   eax,eax
65008fa1:	jge    0x65008fa8
65008fa3:	mov    esi,DWORD PTR [esi+0x8]
65008fa6:	jmp    0x65008fac
65008fa8:	mov    ebp,esi
65008faa:	mov    esi,DWORD PTR [esi]
65008fac:	cmp    BYTE PTR [esi+0x45],0x0
65008fb0:	je     0x65008f80
65008fb2:	pop    edi
65008fb3:	mov    eax,ebp
65008fb5:	pop    ebx
65008fb6:	pop    esi
65008fb7:	pop    ebp
65008fb8:	ret    0x4
65008fbb:	int3   
65008fbc:	int3   
65008fbd:	int3   
65008fbe:	int3   
65008fbf:	int3   
65008fc0:	mov    edx,DWORD PTR [esp+0x4]
65008fc4:	mov    eax,DWORD PTR [edx]
65008fc6:	push   esi
65008fc7:	mov    esi,DWORD PTR [eax+0x8]
65008fca:	mov    DWORD PTR [edx],esi
65008fcc:	mov    esi,DWORD PTR [eax+0x8]
65008fcf:	cmp    BYTE PTR [esi+0x45],0x0
65008fd3:	jne    0x65008fd8
65008fd5:	mov    DWORD PTR [esi+0x4],edx
65008fd8:	mov    esi,DWORD PTR [edx+0x4]
65008fdb:	mov    DWORD PTR [eax+0x4],esi
65008fde:	mov    ecx,DWORD PTR [ecx+0x4]
65008fe1:	cmp    edx,DWORD PTR [ecx+0x4]
65008fe4:	pop    esi
65008fe5:	jne    0x65008ff3
65008fe7:	mov    DWORD PTR [ecx+0x4],eax
65008fea:	mov    DWORD PTR [eax+0x8],edx
65008fed:	mov    DWORD PTR [edx+0x4],eax
65008ff0:	ret    0x4
65008ff3:	mov    ecx,DWORD PTR [edx+0x4]
65008ff6:	cmp    edx,DWORD PTR [ecx+0x8]
65008ff9:	jne    0x65009007
65008ffb:	mov    DWORD PTR [ecx+0x8],eax
65008ffe:	mov    DWORD PTR [eax+0x8],edx
65009001:	mov    DWORD PTR [edx+0x4],eax
65009004:	ret    0x4
65009007:	mov    DWORD PTR [ecx],eax
65009009:	mov    DWORD PTR [eax+0x8],edx
6500900c:	mov    DWORD PTR [edx+0x4],eax
6500900f:	ret    0x4
65009012:	int3   
65009013:	int3   
65009014:	int3   
65009015:	int3   
65009016:	int3   
65009017:	int3   
65009018:	int3   
65009019:	int3   
6500901a:	int3   
6500901b:	int3   
6500901c:	int3   
6500901d:	int3   
6500901e:	int3   
6500901f:	int3   
65009020:	push   ebp
65009021:	mov    ebp,esp
65009023:	push   0xffffffff
65009025:	push   0x65022691
6500902a:	mov    eax,fs:0x0
65009030:	push   eax
65009031:	sub    esp,0xc
65009034:	push   ebx
65009035:	push   esi
65009036:	push   edi
65009037:	mov    eax,ds:0x6502c09c
6500903c:	xor    eax,ebp
6500903e:	push   eax
6500903f:	lea    eax,[ebp-0xc]
65009042:	mov    fs:0x0,eax
65009048:	mov    DWORD PTR [ebp-0x10],esp
6500904b:	push   0x48
6500904d:	call   0x6501229c
65009052:	mov    esi,eax
65009054:	mov    DWORD PTR [ebp-0x4],0x0
6500905b:	add    esp,0x4
6500905e:	mov    DWORD PTR [ebp-0x14],esi
65009061:	mov    DWORD PTR [ebp-0x18],esi
65009064:	test   esi,esi
65009066:	mov    BYTE PTR [ebp-0x4],0x1
6500906a:	je     0x65009093
6500906c:	mov    eax,DWORD PTR [ebp+0x8]
6500906f:	mov    ecx,DWORD PTR [ebp+0xc]
65009072:	mov    edx,DWORD PTR [ebp+0x10]
65009075:	mov    DWORD PTR [esi],eax
65009077:	mov    eax,DWORD PTR [ebp+0x14]
6500907a:	mov    DWORD PTR [esi+0x4],ecx
6500907d:	push   eax
6500907e:	lea    ecx,[esi+0xc]
65009081:	mov    DWORD PTR [esi+0x8],edx
65009084:	call   0x65009540
65009089:	mov    cl,BYTE PTR [ebp+0x18]
6500908c:	mov    BYTE PTR [esi+0x44],cl
6500908f:	mov    BYTE PTR [esi+0x45],0x0
65009093:	mov    eax,esi
65009095:	mov    ecx,DWORD PTR [ebp-0xc]
65009098:	mov    DWORD PTR fs:0x0,ecx
6500909f:	pop    ecx
650090a0:	pop    edi
650090a1:	pop    esi
650090a2:	pop    ebx
650090a3:	mov    esp,ebp
650090a5:	pop    ebp
650090a6:	ret    0x14
650090a9:	mov    edx,DWORD PTR [ebp-0x14]
650090ac:	push   edx
650090ad:	call   0x65011f02
650090b2:	add    esp,0x4
650090b5:	push   0x0
650090b7:	push   0x0
650090b9:	call   0x65012306
650090be:	int3   
650090bf:	int3   
650090c0:	push   ebp
650090c1:	mov    ebp,esp
650090c3:	and    esp,0xfffffff8
650090c6:	sub    esp,0x14
650090c9:	push   ebx
650090ca:	push   esi
650090cb:	push   edi
650090cc:	mov    edi,ecx
650090ce:	mov    eax,DWORD PTR [edi+0x4]
650090d1:	mov    ebx,DWORD PTR [eax]
650090d3:	mov    eax,DWORD PTR [ebp+0xc]
650090d6:	test   eax,eax
650090d8:	je     0x650090de
650090da:	cmp    eax,edi
650090dc:	je     0x650090e3
650090de:	call   0x65012273
650090e3:	mov    esi,DWORD PTR [ebp+0x10]
650090e6:	cmp    esi,ebx
650090e8:	jne    0x65009140
650090ea:	mov    eax,DWORD PTR [ebp+0x14]
650090ed:	test   eax,eax
650090ef:	mov    ebx,DWORD PTR [edi+0x4]
650090f2:	je     0x650090f8
650090f4:	cmp    eax,edi
650090f6:	je     0x650090fd
650090f8:	call   0x65012273
650090fd:	cmp    DWORD PTR [ebp+0x18],ebx
65009100:	jne    0x65009140
65009102:	mov    ecx,DWORD PTR [edi+0x4]
65009105:	mov    edx,DWORD PTR [ecx+0x4]
65009108:	push   edx
65009109:	mov    ecx,edi
6500910b:	call   0x65009cc0
65009110:	mov    eax,DWORD PTR [edi+0x4]
65009113:	mov    DWORD PTR [eax+0x4],eax
65009116:	mov    eax,DWORD PTR [edi+0x4]
65009119:	mov    DWORD PTR [edi+0x8],0x0
65009120:	mov    DWORD PTR [eax],eax
65009122:	mov    eax,DWORD PTR [edi+0x4]
65009125:	mov    DWORD PTR [eax+0x8],eax
65009128:	mov    eax,DWORD PTR [edi+0x4]
6500912b:	mov    ecx,DWORD PTR [eax]
6500912d:	mov    eax,DWORD PTR [ebp+0x8]
65009130:	mov    DWORD PTR [eax+0x4],ecx
65009133:	mov    DWORD PTR [eax],edi
65009135:	pop    edi
65009136:	pop    esi
65009137:	pop    ebx
65009138:	mov    esp,ebp
6500913a:	pop    ebp
6500913b:	ret    0x14
6500913e:	mov    edi,edi
65009140:	mov    ebx,DWORD PTR [ebp+0xc]
65009143:	test   ebx,ebx
65009145:	je     0x6500914c
65009147:	cmp    ebx,DWORD PTR [ebp+0x14]
6500914a:	je     0x65009151
6500914c:	call   0x65012273
65009151:	cmp    esi,DWORD PTR [ebp+0x18]
65009154:	je     0x650091be
65009156:	test   ebx,ebx
65009158:	mov    DWORD PTR [esp+0x14],esi
6500915c:	jne    0x65009163
6500915e:	call   0x65012273
65009163:	cmp    BYTE PTR [esi+0x45],0x0
65009167:	je     0x65009170
65009169:	call   0x65012273
6500916e:	jmp    0x650091aa
65009170:	mov    eax,DWORD PTR [esi+0x8]
65009173:	cmp    BYTE PTR [eax+0x45],0x0
65009177:	jne    0x6500918f
65009179:	mov    esi,eax
6500917b:	mov    eax,DWORD PTR [esi]
6500917d:	cmp    BYTE PTR [eax+0x45],0x0
65009181:	jne    0x650091aa
65009183:	mov    esi,eax
65009185:	mov    eax,DWORD PTR [esi]
65009187:	cmp    BYTE PTR [eax+0x45],0x0
6500918b:	je     0x65009183
6500918d:	jmp    0x650091aa
6500918f:	mov    eax,DWORD PTR [esi+0x4]
65009192:	cmp    BYTE PTR [eax+0x45],0x0
65009196:	jne    0x650091a8
65009198:	cmp    esi,DWORD PTR [eax+0x8]
6500919b:	jne    0x650091a8
6500919d:	mov    esi,eax
6500919f:	mov    eax,DWORD PTR [eax+0x4]
650091a2:	cmp    BYTE PTR [eax+0x45],0x0
650091a6:	je     0x65009198
650091a8:	mov    esi,eax
650091aa:	mov    edx,DWORD PTR [esp+0x14]
650091ae:	push   edx
650091af:	push   ebx
650091b0:	lea    eax,[esp+0x20]
650091b4:	push   eax
650091b5:	mov    ecx,edi
650091b7:	call   0x650095c0
650091bc:	jmp    0x65009140
650091be:	mov    eax,DWORD PTR [ebp+0x8]
650091c1:	pop    edi
650091c2:	mov    DWORD PTR [eax+0x4],esi
650091c5:	pop    esi
650091c6:	mov    DWORD PTR [eax],ebx
650091c8:	pop    ebx
650091c9:	mov    esp,ebp
650091cb:	pop    ebp
650091cc:	ret    0x14
650091cf:	int3   
650091d0:	push   esi
650091d1:	mov    esi,ecx
650091d3:	cmp    DWORD PTR [esi],0x0
650091d6:	jne    0x650091dd
650091d8:	call   0x65012273
650091dd:	mov    eax,DWORD PTR [esi+0x4]
650091e0:	cmp    BYTE PTR [eax+0x45],0x0
650091e4:	je     0x650091f8
650091e6:	mov    eax,DWORD PTR [eax+0x8]
650091e9:	mov    DWORD PTR [esi+0x4],eax
650091ec:	cmp    BYTE PTR [eax+0x45],0x0
650091f0:	je     0x65009257
650091f2:	pop    esi
650091f3:	jmp    0x65012273
650091f8:	mov    ecx,DWORD PTR [eax]
650091fa:	cmp    BYTE PTR [ecx+0x45],0x0
650091fe:	jne    0x65009220
65009200:	mov    eax,DWORD PTR [ecx+0x8]
65009203:	cmp    BYTE PTR [eax+0x45],0x0
65009207:	jne    0x6500921b
65009209:	lea    esp,[esp+0x0]
65009210:	mov    ecx,eax
65009212:	mov    eax,DWORD PTR [ecx+0x8]
65009215:	cmp    BYTE PTR [eax+0x45],0x0
65009219:	je     0x65009210
6500921b:	mov    DWORD PTR [esi+0x4],ecx
6500921e:	pop    esi
6500921f:	ret    
65009220:	mov    eax,DWORD PTR [eax+0x4]
65009223:	cmp    BYTE PTR [eax+0x45],0x0
65009227:	jne    0x65009245
65009229:	lea    esp,[esp+0x0]
65009230:	mov    ecx,DWORD PTR [esi+0x4]
65009233:	cmp    ecx,DWORD PTR [eax]
65009235:	jne    0x65009245
65009237:	mov    DWORD PTR [esi+0x4],eax
6500923a:	mov    edx,eax
6500923c:	mov    eax,DWORD PTR [edx+0x4]
6500923f:	cmp    BYTE PTR [eax+0x45],0x0
65009243:	je     0x65009230
65009245:	mov    ecx,DWORD PTR [esi+0x4]
65009248:	cmp    BYTE PTR [ecx+0x45],0x0
6500924c:	je     0x65009254
6500924e:	pop    esi
6500924f:	jmp    0x65012273
65009254:	mov    DWORD PTR [esi+0x4],eax
65009257:	pop    esi
65009258:	ret    
65009259:	int3   
6500925a:	int3   
6500925b:	int3   
6500925c:	int3   
6500925d:	int3   
6500925e:	int3   
6500925f:	int3   
65009260:	push   ebp
65009261:	mov    ebp,esp
65009263:	push   0xffffffff
65009265:	push   0x65022340
6500926a:	mov    eax,fs:0x0
65009270:	push   eax
65009271:	sub    esp,0xc
65009274:	push   ebx
65009275:	push   esi
65009276:	push   edi
65009277:	mov    eax,ds:0x6502c09c
6500927c:	xor    eax,ebp
6500927e:	push   eax
6500927f:	lea    eax,[ebp-0xc]
65009282:	mov    fs:0x0,eax
65009288:	mov    DWORD PTR [ebp-0x10],esp
6500928b:	mov    edi,ecx
6500928d:	mov    DWORD PTR [ebp-0x14],edi
65009290:	mov    eax,DWORD PTR [ebp+0x8]
65009293:	mov    esi,eax
65009295:	or     esi,0x7
65009298:	cmp    esi,0x7ffffffe
6500929e:	jbe    0x650092a4
650092a0:	mov    esi,eax
650092a2:	jmp    0x650092c6
650092a4:	mov    ebx,DWORD PTR [edi+0x18]
650092a7:	mov    eax,0xaaaaaaab
650092ac:	mul    esi
650092ae:	mov    ecx,ebx
650092b0:	shr    ecx,1
650092b2:	shr    edx,1
650092b4:	cmp    edx,ecx
650092b6:	jae    0x650092c6
650092b8:	mov    eax,0x7ffffffe
650092bd:	sub    eax,ecx
650092bf:	cmp    ebx,eax
650092c1:	ja     0x650092c6
650092c3:	lea    esi,[ecx+ebx*1]
650092c6:	lea    ecx,[esi+0x1]
650092c9:	push   ecx
650092ca:	mov    ecx,edi
650092cc:	mov    DWORD PTR [ebp-0x4],0x0
650092d3:	call   0x65009920
650092d8:	mov    DWORD PTR [ebp+0x8],eax
650092db:	jmp    0x65009305
650092dd:	mov    eax,DWORD PTR [ebp+0x8]
650092e0:	mov    ecx,DWORD PTR [ebp-0x14]
650092e3:	mov    DWORD PTR [ebp-0x18],eax
650092e6:	add    eax,0x1
650092e9:	mov    DWORD PTR [ebp-0x10],esp
650092ec:	push   eax
650092ed:	mov    BYTE PTR [ebp-0x4],0x2
650092f1:	call   0x65009920
650092f6:	mov    DWORD PTR [ebp+0x8],eax
650092f9:	mov    eax,0x650092ff
650092fe:	ret    
650092ff:	mov    edi,DWORD PTR [ebp-0x14]
65009302:	mov    esi,DWORD PTR [ebp-0x18]
65009305:	mov    ebx,DWORD PTR [ebp+0xc]
65009308:	test   ebx,ebx
6500930a:	jbe    0x65009330
6500930c:	cmp    DWORD PTR [edi+0x18],0x8
65009310:	jb     0x65009317
65009312:	mov    eax,DWORD PTR [edi+0x4]
65009315:	jmp    0x6500931a
65009317:	lea    eax,[edi+0x4]
6500931a:	mov    ecx,DWORD PTR [ebp+0x8]
6500931d:	lea    edx,[ebx+ebx*1]
65009320:	push   edx
65009321:	push   eax
65009322:	lea    eax,[esi+esi*1+0x2]
65009326:	push   eax
65009327:	push   ecx
65009328:	call   0x65012073
6500932d:	add    esp,0x10
65009330:	cmp    DWORD PTR [edi+0x18],0x8
65009334:	jb     0x65009342
65009336:	mov    edx,DWORD PTR [edi+0x4]
65009339:	push   edx
6500933a:	call   0x65011f02
6500933f:	add    esp,0x4
65009342:	cmp    esi,0x8
65009345:	mov    ecx,DWORD PTR [ebp+0x8]
65009348:	lea    eax,[edi+0x4]
6500934b:	mov    WORD PTR [eax],0x0
65009350:	mov    DWORD PTR [eax],ecx
65009352:	mov    DWORD PTR [edi+0x18],esi
65009355:	mov    DWORD PTR [edi+0x14],ebx
65009358:	jb     0x6500935c
6500935a:	mov    eax,ecx
6500935c:	mov    WORD PTR [eax+ebx*2],0x0
65009362:	mov    ecx,DWORD PTR [ebp-0xc]
65009365:	mov    DWORD PTR fs:0x0,ecx
6500936c:	pop    ecx
6500936d:	pop    edi
6500936e:	pop    esi
6500936f:	pop    ebx
65009370:	mov    esp,ebp
65009372:	pop    ebp
65009373:	ret    0x8
65009376:	mov    esi,DWORD PTR [ebp-0x14]
65009379:	cmp    DWORD PTR [esi+0x18],0x8
6500937d:	jb     0x6500938b
6500937f:	mov    eax,DWORD PTR [esi+0x4]
65009382:	push   eax
65009383:	call   0x65011f02
65009388:	add    esp,0x4
6500938b:	xor    eax,eax
6500938d:	push   eax
6500938e:	mov    DWORD PTR [esi+0x18],0x7
65009395:	mov    DWORD PTR [esi+0x14],eax
65009398:	push   eax
65009399:	mov    WORD PTR [esi+0x4],ax
6500939d:	call   0x65012306
650093a2:	int3   
650093a3:	int3   
650093a4:	int3   
650093a5:	int3   
650093a6:	int3   
650093a7:	int3   
650093a8:	int3   
650093a9:	int3   
650093aa:	int3   
650093ab:	int3   
650093ac:	int3   
650093ad:	int3   
650093ae:	int3   
650093af:	int3   
650093b0:	push   ebp
650093b1:	mov    ebp,esp
650093b3:	and    esp,0xfffffff8
650093b6:	sub    esp,0x14
650093b9:	push   ebx
650093ba:	push   esi
650093bb:	push   edi
650093bc:	mov    edi,ecx
650093be:	mov    eax,DWORD PTR [edi+0x4]
650093c1:	mov    ebx,DWORD PTR [eax]
650093c3:	mov    eax,DWORD PTR [ebp+0xc]
650093c6:	test   eax,eax
650093c8:	je     0x650093ce
650093ca:	cmp    eax,edi
650093cc:	je     0x650093d3
650093ce:	call   0x65012273
650093d3:	mov    esi,DWORD PTR [ebp+0x10]
650093d6:	cmp    esi,ebx
650093d8:	jne    0x65009430
650093da:	mov    eax,DWORD PTR [ebp+0x14]
650093dd:	test   eax,eax
650093df:	mov    ebx,DWORD PTR [edi+0x4]
650093e2:	je     0x650093e8
650093e4:	cmp    eax,edi
650093e6:	je     0x650093ed
650093e8:	call   0x65012273
650093ed:	cmp    DWORD PTR [ebp+0x18],ebx
650093f0:	jne    0x65009430
650093f2:	mov    ecx,DWORD PTR [edi+0x4]
650093f5:	mov    edx,DWORD PTR [ecx+0x4]
650093f8:	push   edx
650093f9:	mov    ecx,edi
650093fb:	call   0x65009d40
65009400:	mov    eax,DWORD PTR [edi+0x4]
65009403:	mov    DWORD PTR [eax+0x4],eax
65009406:	mov    eax,DWORD PTR [edi+0x4]
65009409:	mov    DWORD PTR [edi+0x8],0x0
65009410:	mov    DWORD PTR [eax],eax
65009412:	mov    eax,DWORD PTR [edi+0x4]
65009415:	mov    DWORD PTR [eax+0x8],eax
65009418:	mov    eax,DWORD PTR [edi+0x4]
6500941b:	mov    ecx,DWORD PTR [eax]
6500941d:	mov    eax,DWORD PTR [ebp+0x8]
65009420:	mov    DWORD PTR [eax+0x4],ecx
65009423:	mov    DWORD PTR [eax],edi
65009425:	pop    edi
65009426:	pop    esi
65009427:	pop    ebx
65009428:	mov    esp,ebp
6500942a:	pop    ebp
6500942b:	ret    0x14
6500942e:	mov    edi,edi
65009430:	mov    ebx,DWORD PTR [ebp+0xc]
65009433:	test   ebx,ebx
65009435:	je     0x6500943c
65009437:	cmp    ebx,DWORD PTR [ebp+0x14]
6500943a:	je     0x65009441
6500943c:	call   0x65012273
65009441:	cmp    esi,DWORD PTR [ebp+0x18]
65009444:	je     0x650094ae
65009446:	test   ebx,ebx
65009448:	mov    DWORD PTR [esp+0x14],esi
6500944c:	jne    0x65009453
6500944e:	call   0x65012273
65009453:	cmp    BYTE PTR [esi+0x45],0x0
65009457:	je     0x65009460
65009459:	call   0x65012273
6500945e:	jmp    0x6500949a
65009460:	mov    eax,DWORD PTR [esi+0x8]
65009463:	cmp    BYTE PTR [eax+0x45],0x0
65009467:	jne    0x6500947f
65009469:	mov    esi,eax
6500946b:	mov    eax,DWORD PTR [esi]
6500946d:	cmp    BYTE PTR [eax+0x45],0x0
65009471:	jne    0x6500949a
65009473:	mov    esi,eax
65009475:	mov    eax,DWORD PTR [esi]
65009477:	cmp    BYTE PTR [eax+0x45],0x0
6500947b:	je     0x65009473
6500947d:	jmp    0x6500949a
6500947f:	mov    eax,DWORD PTR [esi+0x4]
65009482:	cmp    BYTE PTR [eax+0x45],0x0
65009486:	jne    0x65009498
65009488:	cmp    esi,DWORD PTR [eax+0x8]
6500948b:	jne    0x65009498
6500948d:	mov    esi,eax
6500948f:	mov    eax,DWORD PTR [eax+0x4]
65009492:	cmp    BYTE PTR [eax+0x45],0x0
65009496:	je     0x65009488
65009498:	mov    esi,eax
6500949a:	mov    edx,DWORD PTR [esp+0x14]
6500949e:	push   edx
6500949f:	push   ebx
650094a0:	lea    eax,[esp+0x20]
650094a4:	push   eax
650094a5:	mov    ecx,edi
650094a7:	call   0x65009980
650094ac:	jmp    0x65009430
650094ae:	mov    eax,DWORD PTR [ebp+0x8]
650094b1:	pop    edi
650094b2:	mov    DWORD PTR [eax+0x4],esi
650094b5:	pop    esi
650094b6:	mov    DWORD PTR [eax],ebx
650094b8:	pop    ebx
650094b9:	mov    esp,ebp
650094bb:	pop    ebp
650094bc:	ret    0x14
650094bf:	int3   
650094c0:	push   0xffffffff
650094c2:	push   0x65022318
650094c7:	mov    eax,fs:0x0
650094cd:	push   eax
650094ce:	push   ecx
650094cf:	push   ebx
650094d0:	push   esi
650094d1:	push   edi
650094d2:	mov    eax,ds:0x6502c09c
650094d7:	xor    eax,esp
650094d9:	push   eax
650094da:	lea    eax,[esp+0x14]
650094de:	mov    fs:0x0,eax
650094e4:	mov    esi,ecx
650094e6:	mov    DWORD PTR [esp+0x10],esi
650094ea:	mov    edi,DWORD PTR [esp+0x24]
650094ee:	xor    ebx,ebx
650094f0:	push   0xffffffff
650094f2:	push   ebx
650094f3:	mov    DWORD PTR [esi+0x18],0xf
650094fa:	mov    DWORD PTR [esi+0x14],ebx
650094fd:	push   edi
650094fe:	mov    BYTE PTR [esi+0x4],bl
65009501:	call   0x65001780
65009506:	push   0xffffffff
65009508:	lea    ecx,[esi+0x1c]
6500950b:	mov    DWORD PTR [esp+0x20],ebx
6500950f:	lea    eax,[edi+0x1c]
65009512:	push   ebx
65009513:	mov    DWORD PTR [ecx+0x18],0xf
6500951a:	mov    DWORD PTR [ecx+0x14],ebx
6500951d:	push   eax
6500951e:	mov    BYTE PTR [ecx+0x4],bl
65009521:	call   0x65001780
65009526:	mov    eax,esi
65009528:	mov    ecx,DWORD PTR [esp+0x14]
6500952c:	mov    DWORD PTR fs:0x0,ecx
65009533:	pop    ecx
65009534:	pop    edi
65009535:	pop    esi
65009536:	pop    ebx
65009537:	add    esp,0x10
6500953a:	ret    0x4
6500953d:	int3   
6500953e:	int3   
6500953f:	int3   
65009540:	push   0xffffffff
65009542:	push   0x65022658
65009547:	mov    eax,fs:0x0
6500954d:	push   eax
6500954e:	push   ecx
6500954f:	push   ebx
65009550:	push   esi
65009551:	push   edi
65009552:	mov    eax,ds:0x6502c09c
65009557:	xor    eax,esp
65009559:	push   eax
6500955a:	lea    eax,[esp+0x14]
6500955e:	mov    fs:0x0,eax
65009564:	mov    esi,ecx
65009566:	mov    DWORD PTR [esp+0x10],esi
6500956a:	mov    ebx,DWORD PTR [esp+0x24]
6500956e:	xor    edi,edi
65009570:	push   0xffffffff
65009572:	push   edi
65009573:	mov    DWORD PTR [esi+0x18],0x7
6500957a:	mov    DWORD PTR [esi+0x14],edi
6500957d:	push   ebx
6500957e:	mov    WORD PTR [esi+0x4],di
65009582:	call   0x65008710
65009587:	push   0xffffffff
65009589:	lea    ecx,[esi+0x1c]
6500958c:	mov    DWORD PTR [esp+0x20],edi
65009590:	lea    eax,[ebx+0x1c]
65009593:	push   edi
65009594:	mov    DWORD PTR [ecx+0x18],0x7
6500959b:	mov    DWORD PTR [ecx+0x14],edi
6500959e:	push   eax
6500959f:	mov    WORD PTR [ecx+0x4],di
650095a3:	call   0x65008710
650095a8:	mov    eax,esi
650095aa:	mov    ecx,DWORD PTR [esp+0x14]
650095ae:	mov    DWORD PTR fs:0x0,ecx
650095b5:	pop    ecx
650095b6:	pop    edi
650095b7:	pop    esi
650095b8:	pop    ebx
650095b9:	add    esp,0x10
650095bc:	ret    0x4
650095bf:	int3   
650095c0:	push   ebp
650095c1:	mov    ebp,esp
650095c3:	and    esp,0xfffffff8
650095c6:	push   0xffffffff
650095c8:	push   0x65022778
650095cd:	mov    eax,fs:0x0
650095d3:	push   eax
650095d4:	sub    esp,0x50
650095d7:	push   ebx
650095d8:	push   esi
650095d9:	push   edi
650095da:	mov    eax,ds:0x6502c09c
650095df:	xor    eax,esp
650095e1:	push   eax
650095e2:	lea    eax,[esp+0x60]
650095e6:	mov    fs:0x0,eax
650095ec:	mov    DWORD PTR [esp+0x14],ecx
650095f0:	mov    edi,DWORD PTR [ebp+0x10]
650095f3:	cmp    BYTE PTR [edi+0x45],0x0
650095f7:	je     0x65009645
650095f9:	push   0x1b
650095fb:	xor    esi,esi
650095fd:	push   0x6502815c
65009602:	lea    ecx,[esp+0x20]
65009606:	mov    DWORD PTR [esp+0x38],0xf
6500960e:	mov    DWORD PTR [esp+0x34],esi
65009612:	mov    BYTE PTR [esp+0x24],0x0
65009617:	call   0x65001860
6500961c:	lea    eax,[esp+0x18]
65009620:	push   eax
65009621:	lea    ecx,[esp+0x38]
65009625:	mov    DWORD PTR [esp+0x6c],esi
65009629:	call   0x65002cc0
6500962e:	push   0x65029e8c
65009633:	lea    ecx,[esp+0x38]
65009637:	push   ecx
65009638:	mov    DWORD PTR [esp+0x3c],0x65024b68
65009640:	call   0x65012306
65009645:	lea    ecx,[ebp+0xc]
65009648:	call   0x65009de0
6500964d:	mov    ecx,DWORD PTR [edi]
6500964f:	cmp    BYTE PTR [ecx+0x45],0x0
65009653:	je     0x6500965a
65009655:	mov    ebx,DWORD PTR [edi+0x8]
65009658:	jmp    0x65009671
6500965a:	mov    edx,DWORD PTR [edi+0x8]
6500965d:	cmp    BYTE PTR [edx+0x45],0x0
65009661:	je     0x65009667
65009663:	mov    ebx,ecx
65009665:	jmp    0x65009671
65009667:	mov    eax,DWORD PTR [ebp+0x10]
6500966a:	cmp    eax,edi
6500966c:	mov    ebx,DWORD PTR [eax+0x8]
6500966f:	jne    0x650096ed
65009671:	cmp    BYTE PTR [ebx+0x45],0x0
65009675:	mov    esi,DWORD PTR [edi+0x4]
65009678:	jne    0x6500967d
6500967a:	mov    DWORD PTR [ebx+0x4],esi
6500967d:	mov    ecx,DWORD PTR [esp+0x14]
65009681:	mov    eax,DWORD PTR [ecx+0x4]
65009684:	cmp    DWORD PTR [eax+0x4],edi
65009687:	jne    0x6500968e
65009689:	mov    DWORD PTR [eax+0x4],ebx
6500968c:	jmp    0x65009699
6500968e:	cmp    DWORD PTR [esi],edi
65009690:	jne    0x65009696
65009692:	mov    DWORD PTR [esi],ebx
65009694:	jmp    0x65009699
65009696:	mov    DWORD PTR [esi+0x8],ebx
65009699:	mov    eax,DWORD PTR [ecx+0x4]
6500969c:	cmp    DWORD PTR [eax],edi
6500969e:	jne    0x650096bc
650096a0:	cmp    BYTE PTR [ebx+0x45],0x0
650096a4:	je     0x650096aa
650096a6:	mov    eax,esi
650096a8:	jmp    0x650096b7
650096aa:	push   ebx
650096ab:	call   0x65009dc0
650096b0:	mov    ecx,DWORD PTR [esp+0x18]
650096b4:	add    esp,0x4
650096b7:	mov    edx,DWORD PTR [ecx+0x4]
650096ba:	mov    DWORD PTR [edx],eax
650096bc:	mov    eax,DWORD PTR [ecx+0x4]
650096bf:	cmp    DWORD PTR [eax+0x8],edi
650096c2:	jne    0x6500974c
650096c8:	cmp    BYTE PTR [ebx+0x45],0x0
650096cc:	je     0x650096d8
650096ce:	mov    edx,DWORD PTR [ecx+0x4]
650096d1:	mov    eax,esi
650096d3:	mov    DWORD PTR [edx+0x8],eax
650096d6:	jmp    0x6500974c
650096d8:	push   ebx
650096d9:	call   0x65009ca0
650096de:	mov    ecx,DWORD PTR [esp+0x18]
650096e2:	mov    edx,DWORD PTR [ecx+0x4]
650096e5:	add    esp,0x4
650096e8:	mov    DWORD PTR [edx+0x8],eax
650096eb:	jmp    0x6500974c
650096ed:	mov    DWORD PTR [ecx+0x4],eax
650096f0:	mov    ecx,DWORD PTR [edi]
650096f2:	mov    DWORD PTR [eax],ecx
650096f4:	cmp    eax,DWORD PTR [edi+0x8]
650096f7:	jne    0x650096fd
650096f9:	mov    esi,eax
650096fb:	jmp    0x65009717
650096fd:	cmp    BYTE PTR [ebx+0x45],0x0
65009701:	mov    esi,DWORD PTR [eax+0x4]
65009704:	jne    0x65009709
65009706:	mov    DWORD PTR [ebx+0x4],esi
65009709:	mov    DWORD PTR [esi],ebx
6500970b:	mov    edx,DWORD PTR [edi+0x8]
6500970e:	mov    DWORD PTR [eax+0x8],edx
65009711:	mov    ecx,DWORD PTR [edi+0x8]
65009714:	mov    DWORD PTR [ecx+0x4],eax
65009717:	mov    edx,DWORD PTR [esp+0x14]
6500971b:	mov    ecx,DWORD PTR [edx+0x4]
6500971e:	cmp    DWORD PTR [ecx+0x4],edi
65009721:	jne    0x65009728
65009723:	mov    DWORD PTR [ecx+0x4],eax
65009726:	jmp    0x65009736
65009728:	mov    ecx,DWORD PTR [edi+0x4]
6500972b:	cmp    DWORD PTR [ecx],edi
6500972d:	jne    0x65009733
6500972f:	mov    DWORD PTR [ecx],eax
65009731:	jmp    0x65009736
65009733:	mov    DWORD PTR [ecx+0x8],eax
65009736:	mov    ecx,DWORD PTR [edi+0x4]
65009739:	mov    DWORD PTR [eax+0x4],ecx
6500973c:	mov    cl,BYTE PTR [eax+0x44]
6500973f:	mov    dl,BYTE PTR [edi+0x44]
65009742:	mov    BYTE PTR [eax+0x44],dl
65009745:	mov    BYTE PTR [edi+0x44],cl
65009748:	mov    ecx,DWORD PTR [esp+0x14]
6500974c:	cmp    BYTE PTR [edi+0x44],0x1
65009750:	jne    0x65009861
65009756:	mov    eax,DWORD PTR [ecx+0x4]
65009759:	cmp    ebx,DWORD PTR [eax+0x4]
6500975c:	je     0x6500985d
65009762:	cmp    BYTE PTR [ebx+0x44],0x1
65009766:	jne    0x6500985d
6500976c:	mov    eax,DWORD PTR [esi]
6500976e:	cmp    ebx,eax
65009770:	jne    0x650097e0
65009772:	mov    eax,DWORD PTR [esi+0x8]
65009775:	cmp    BYTE PTR [eax+0x44],0x0
65009779:	jne    0x65009790
6500977b:	mov    BYTE PTR [eax+0x44],0x1
6500977f:	push   esi
65009780:	mov    BYTE PTR [esi+0x44],0x0
65009784:	call   0x65008dd0
65009789:	mov    eax,DWORD PTR [esi+0x8]
6500978c:	mov    ecx,DWORD PTR [esp+0x14]
65009790:	cmp    BYTE PTR [eax+0x45],0x0
65009794:	jne    0x65009815
65009796:	mov    edx,DWORD PTR [eax]
65009798:	cmp    BYTE PTR [edx+0x44],0x1
6500979c:	jne    0x650097a7
6500979e:	mov    edx,DWORD PTR [eax+0x8]
650097a1:	cmp    BYTE PTR [edx+0x44],0x1
650097a5:	je     0x65009811
650097a7:	mov    edx,DWORD PTR [eax+0x8]
650097aa:	cmp    BYTE PTR [edx+0x44],0x1
650097ae:	jne    0x650097c7
650097b0:	mov    edx,DWORD PTR [eax]
650097b2:	mov    BYTE PTR [edx+0x44],0x1
650097b6:	push   eax
650097b7:	mov    BYTE PTR [eax+0x44],0x0
650097bb:	call   0x65008fc0
650097c0:	mov    eax,DWORD PTR [esi+0x8]
650097c3:	mov    ecx,DWORD PTR [esp+0x14]
650097c7:	mov    dl,BYTE PTR [esi+0x44]
650097ca:	mov    BYTE PTR [eax+0x44],dl
650097cd:	mov    BYTE PTR [esi+0x44],0x1
650097d1:	mov    eax,DWORD PTR [eax+0x8]
650097d4:	push   esi
650097d5:	mov    BYTE PTR [eax+0x44],0x1
650097d9:	call   0x65008dd0
650097de:	jmp    0x6500985d
650097e0:	cmp    BYTE PTR [eax+0x44],0x0
650097e4:	jne    0x650097fa
650097e6:	mov    BYTE PTR [eax+0x44],0x1
650097ea:	push   esi
650097eb:	mov    BYTE PTR [esi+0x44],0x0
650097ef:	call   0x65008fc0
650097f4:	mov    eax,DWORD PTR [esi]
650097f6:	mov    ecx,DWORD PTR [esp+0x14]
650097fa:	cmp    BYTE PTR [eax+0x45],0x0
650097fe:	jne    0x65009815
65009800:	mov    edx,DWORD PTR [eax+0x8]
65009803:	cmp    BYTE PTR [edx+0x44],0x1
65009807:	jne    0x65009828
65009809:	mov    edx,DWORD PTR [eax]
6500980b:	cmp    BYTE PTR [edx+0x44],0x1
6500980f:	jne    0x65009828
65009811:	mov    BYTE PTR [eax+0x44],0x0
65009815:	mov    eax,DWORD PTR [ecx+0x4]
65009818:	mov    ebx,esi
6500981a:	cmp    ebx,DWORD PTR [eax+0x4]
6500981d:	mov    esi,DWORD PTR [esi+0x4]
65009820:	jne    0x65009762
65009826:	jmp    0x6500985d
65009828:	mov    edx,DWORD PTR [eax]
6500982a:	cmp    BYTE PTR [edx+0x44],0x1
6500982e:	jne    0x65009847
65009830:	mov    edx,DWORD PTR [eax+0x8]
65009833:	mov    BYTE PTR [edx+0x44],0x1
65009837:	push   eax
65009838:	mov    BYTE PTR [eax+0x44],0x0
6500983c:	call   0x65008dd0
65009841:	mov    eax,DWORD PTR [esi]
65009843:	mov    ecx,DWORD PTR [esp+0x14]
65009847:	mov    dl,BYTE PTR [esi+0x44]
6500984a:	mov    BYTE PTR [eax+0x44],dl
6500984d:	mov    BYTE PTR [esi+0x44],0x1
65009851:	mov    eax,DWORD PTR [eax]
65009853:	push   esi
65009854:	mov    BYTE PTR [eax+0x44],0x1
65009858:	call   0x65008fc0
6500985d:	mov    BYTE PTR [ebx+0x44],0x1
65009861:	cmp    DWORD PTR [edi+0x40],0x10
65009865:	jb     0x65009873
65009867:	mov    ecx,DWORD PTR [edi+0x2c]
6500986a:	push   ecx
6500986b:	call   0x65011f02
65009870:	add    esp,0x4
65009873:	xor    esi,esi
65009875:	mov    ebx,0xf
6500987a:	mov    DWORD PTR [edi+0x40],ebx
6500987d:	mov    DWORD PTR [edi+0x3c],esi
65009880:	mov    BYTE PTR [edi+0x2c],0x0
65009884:	cmp    DWORD PTR [edi+0x24],0x10
65009888:	jb     0x65009896
6500988a:	mov    edx,DWORD PTR [edi+0x10]
6500988d:	push   edx
6500988e:	call   0x65011f02
65009893:	add    esp,0x4
65009896:	mov    DWORD PTR [edi+0x24],ebx
65009899:	mov    DWORD PTR [edi+0x20],esi
6500989c:	push   edi
6500989d:	mov    BYTE PTR [edi+0x10],0x0
650098a1:	call   0x65011f02
650098a6:	mov    ecx,DWORD PTR [esp+0x18]
650098aa:	mov    eax,DWORD PTR [ecx+0x8]
650098ad:	add    esp,0x4
650098b0:	cmp    eax,esi
650098b2:	jbe    0x650098ba
650098b4:	add    eax,0xffffffff
650098b7:	mov    DWORD PTR [ecx+0x8],eax
650098ba:	mov    eax,DWORD PTR [ebp+0x8]
650098bd:	mov    ecx,DWORD PTR [ebp+0xc]
650098c0:	mov    edx,DWORD PTR [ebp+0x10]
650098c3:	mov    DWORD PTR [eax],ecx
650098c5:	mov    DWORD PTR [eax+0x4],edx
650098c8:	mov    ecx,DWORD PTR [esp+0x60]
650098cc:	mov    DWORD PTR fs:0x0,ecx
650098d3:	pop    ecx
650098d4:	pop    edi
650098d5:	pop    esi
650098d6:	pop    ebx
650098d7:	mov    esp,ebp
650098d9:	pop    ebp
650098da:	ret    0xc
650098dd:	int3   
650098de:	int3   
650098df:	int3   
650098e0:	push   0x48
650098e2:	call   0x6501229c
650098e7:	add    esp,0x4
650098ea:	test   eax,eax
650098ec:	je     0x650098f4
650098ee:	mov    DWORD PTR [eax],0x0
650098f4:	lea    ecx,[eax+0x4]
650098f7:	test   ecx,ecx
650098f9:	je     0x65009901
650098fb:	mov    DWORD PTR [ecx],0x0
65009901:	lea    ecx,[eax+0x8]
65009904:	test   ecx,ecx
65009906:	je     0x6500990e
65009908:	mov    DWORD PTR [ecx],0x0
6500990e:	mov    BYTE PTR [eax+0x44],0x1
65009912:	mov    BYTE PTR [eax+0x45],0x0
65009916:	ret    
65009917:	int3   
65009918:	int3   
65009919:	int3   
6500991a:	int3   
6500991b:	int3   
6500991c:	int3   
6500991d:	int3   
6500991e:	int3   
6500991f:	int3   
65009920:	mov    ecx,DWORD PTR [esp+0x4]
65009924:	sub    esp,0xc
65009927:	test   ecx,ecx
65009929:	ja     0x6500993f
6500992b:	xor    ecx,ecx
6500992d:	lea    edx,[ecx+ecx*1]
65009930:	push   edx
65009931:	call   0x6501229c
65009936:	add    esp,0x4
65009939:	add    esp,0xc
6500993c:	ret    0x4
6500993f:	or     eax,0xffffffff
65009942:	xor    edx,edx
65009944:	div    ecx
65009946:	cmp    eax,0x2
65009949:	jae    0x6500992d
6500994b:	lea    eax,[esp+0x10]
6500994f:	push   eax
65009950:	lea    ecx,[esp+0x4]
65009954:	mov    DWORD PTR [esp+0x14],0x0
6500995c:	call   0x65011f18
65009961:	push   0x65029dfc
65009966:	lea    ecx,[esp+0x4]
6500996a:	push   ecx
6500996b:	mov    DWORD PTR [esp+0x8],0x65024b44
65009973:	call   0x65012306
65009978:	int3   
65009979:	int3   
6500997a:	int3   
6500997b:	int3   
6500997c:	int3   
6500997d:	int3   
6500997e:	int3   
6500997f:	int3   
65009980:	push   ebp
65009981:	mov    ebp,esp
65009983:	and    esp,0xfffffff8
65009986:	push   0xffffffff
65009988:	push   0x65022748
6500998d:	mov    eax,fs:0x0
65009993:	push   eax
65009994:	sub    esp,0x50
65009997:	push   ebx
65009998:	push   esi
65009999:	push   edi
6500999a:	mov    eax,ds:0x6502c09c
6500999f:	xor    eax,esp
650099a1:	push   eax
650099a2:	lea    eax,[esp+0x60]
650099a6:	mov    fs:0x0,eax
650099ac:	mov    DWORD PTR [esp+0x14],ecx
650099b0:	mov    edi,DWORD PTR [ebp+0x10]
650099b3:	cmp    BYTE PTR [edi+0x45],0x0
650099b7:	je     0x65009a05
650099b9:	push   0x1b
650099bb:	xor    esi,esi
650099bd:	push   0x6502815c
650099c2:	lea    ecx,[esp+0x20]
650099c6:	mov    DWORD PTR [esp+0x38],0xf
650099ce:	mov    DWORD PTR [esp+0x34],esi
650099d2:	mov    BYTE PTR [esp+0x24],0x0
650099d7:	call   0x65001860
650099dc:	lea    eax,[esp+0x18]
650099e0:	push   eax
650099e1:	lea    ecx,[esp+0x38]
650099e5:	mov    DWORD PTR [esp+0x6c],esi
650099e9:	call   0x65002cc0
650099ee:	push   0x65029e8c
650099f3:	lea    ecx,[esp+0x38]
650099f7:	push   ecx
650099f8:	mov    DWORD PTR [esp+0x3c],0x65024b68
65009a00:	call   0x65012306
65009a05:	lea    ecx,[ebp+0xc]
65009a08:	call   0x65009de0
65009a0d:	mov    ecx,DWORD PTR [edi]
65009a0f:	cmp    BYTE PTR [ecx+0x45],0x0
65009a13:	je     0x65009a1a
65009a15:	mov    ebx,DWORD PTR [edi+0x8]
65009a18:	jmp    0x65009a31
65009a1a:	mov    edx,DWORD PTR [edi+0x8]
65009a1d:	cmp    BYTE PTR [edx+0x45],0x0
65009a21:	je     0x65009a27
65009a23:	mov    ebx,ecx
65009a25:	jmp    0x65009a31
65009a27:	mov    eax,DWORD PTR [ebp+0x10]
65009a2a:	cmp    eax,edi
65009a2c:	mov    ebx,DWORD PTR [eax+0x8]
65009a2f:	jne    0x65009aad
65009a31:	cmp    BYTE PTR [ebx+0x45],0x0
65009a35:	mov    esi,DWORD PTR [edi+0x4]
65009a38:	jne    0x65009a3d
65009a3a:	mov    DWORD PTR [ebx+0x4],esi
65009a3d:	mov    ecx,DWORD PTR [esp+0x14]
65009a41:	mov    eax,DWORD PTR [ecx+0x4]
65009a44:	cmp    DWORD PTR [eax+0x4],edi
65009a47:	jne    0x65009a4e
65009a49:	mov    DWORD PTR [eax+0x4],ebx
65009a4c:	jmp    0x65009a59
65009a4e:	cmp    DWORD PTR [esi],edi
65009a50:	jne    0x65009a56
65009a52:	mov    DWORD PTR [esi],ebx
65009a54:	jmp    0x65009a59
65009a56:	mov    DWORD PTR [esi+0x8],ebx
65009a59:	mov    eax,DWORD PTR [ecx+0x4]
65009a5c:	cmp    DWORD PTR [eax],edi
65009a5e:	jne    0x65009a7c
65009a60:	cmp    BYTE PTR [ebx+0x45],0x0
65009a64:	je     0x65009a6a
65009a66:	mov    eax,esi
65009a68:	jmp    0x65009a77
65009a6a:	push   ebx
65009a6b:	call   0x65009dc0
65009a70:	mov    ecx,DWORD PTR [esp+0x18]
65009a74:	add    esp,0x4
65009a77:	mov    edx,DWORD PTR [ecx+0x4]
65009a7a:	mov    DWORD PTR [edx],eax
65009a7c:	mov    eax,DWORD PTR [ecx+0x4]
65009a7f:	cmp    DWORD PTR [eax+0x8],edi
65009a82:	jne    0x65009b0c
65009a88:	cmp    BYTE PTR [ebx+0x45],0x0
65009a8c:	je     0x65009a98
65009a8e:	mov    edx,DWORD PTR [ecx+0x4]
65009a91:	mov    eax,esi
65009a93:	mov    DWORD PTR [edx+0x8],eax
65009a96:	jmp    0x65009b0c
65009a98:	push   ebx
65009a99:	call   0x65009ca0
65009a9e:	mov    ecx,DWORD PTR [esp+0x18]
65009aa2:	mov    edx,DWORD PTR [ecx+0x4]
65009aa5:	add    esp,0x4
65009aa8:	mov    DWORD PTR [edx+0x8],eax
65009aab:	jmp    0x65009b0c
65009aad:	mov    DWORD PTR [ecx+0x4],eax
65009ab0:	mov    ecx,DWORD PTR [edi]
65009ab2:	mov    DWORD PTR [eax],ecx
65009ab4:	cmp    eax,DWORD PTR [edi+0x8]
65009ab7:	jne    0x65009abd
65009ab9:	mov    esi,eax
65009abb:	jmp    0x65009ad7
65009abd:	cmp    BYTE PTR [ebx+0x45],0x0
65009ac1:	mov    esi,DWORD PTR [eax+0x4]
65009ac4:	jne    0x65009ac9
65009ac6:	mov    DWORD PTR [ebx+0x4],esi
65009ac9:	mov    DWORD PTR [esi],ebx
65009acb:	mov    edx,DWORD PTR [edi+0x8]
65009ace:	mov    DWORD PTR [eax+0x8],edx
65009ad1:	mov    ecx,DWORD PTR [edi+0x8]
65009ad4:	mov    DWORD PTR [ecx+0x4],eax
65009ad7:	mov    edx,DWORD PTR [esp+0x14]
65009adb:	mov    ecx,DWORD PTR [edx+0x4]
65009ade:	cmp    DWORD PTR [ecx+0x4],edi
65009ae1:	jne    0x65009ae8
65009ae3:	mov    DWORD PTR [ecx+0x4],eax
65009ae6:	jmp    0x65009af6
65009ae8:	mov    ecx,DWORD PTR [edi+0x4]
65009aeb:	cmp    DWORD PTR [ecx],edi
65009aed:	jne    0x65009af3
65009aef:	mov    DWORD PTR [ecx],eax
65009af1:	jmp    0x65009af6
65009af3:	mov    DWORD PTR [ecx+0x8],eax
65009af6:	mov    ecx,DWORD PTR [edi+0x4]
65009af9:	mov    DWORD PTR [eax+0x4],ecx
65009afc:	mov    cl,BYTE PTR [eax+0x44]
65009aff:	mov    dl,BYTE PTR [edi+0x44]
65009b02:	mov    BYTE PTR [eax+0x44],dl
65009b05:	mov    BYTE PTR [edi+0x44],cl
65009b08:	mov    ecx,DWORD PTR [esp+0x14]
65009b0c:	cmp    BYTE PTR [edi+0x44],0x1
65009b10:	jne    0x65009c21
65009b16:	mov    eax,DWORD PTR [ecx+0x4]
65009b19:	cmp    ebx,DWORD PTR [eax+0x4]
65009b1c:	je     0x65009c1d
65009b22:	cmp    BYTE PTR [ebx+0x44],0x1
65009b26:	jne    0x65009c1d
65009b2c:	mov    eax,DWORD PTR [esi]
65009b2e:	cmp    ebx,eax
65009b30:	jne    0x65009ba0
65009b32:	mov    eax,DWORD PTR [esi+0x8]
65009b35:	cmp    BYTE PTR [eax+0x44],0x0
65009b39:	jne    0x65009b50
65009b3b:	mov    BYTE PTR [eax+0x44],0x1
65009b3f:	push   esi
65009b40:	mov    BYTE PTR [esi+0x44],0x0
65009b44:	call   0x65008dd0
65009b49:	mov    eax,DWORD PTR [esi+0x8]
65009b4c:	mov    ecx,DWORD PTR [esp+0x14]
65009b50:	cmp    BYTE PTR [eax+0x45],0x0
65009b54:	jne    0x65009bd5
65009b56:	mov    edx,DWORD PTR [eax]
65009b58:	cmp    BYTE PTR [edx+0x44],0x1
65009b5c:	jne    0x65009b67
65009b5e:	mov    edx,DWORD PTR [eax+0x8]
65009b61:	cmp    BYTE PTR [edx+0x44],0x1
65009b65:	je     0x65009bd1
65009b67:	mov    edx,DWORD PTR [eax+0x8]
65009b6a:	cmp    BYTE PTR [edx+0x44],0x1
65009b6e:	jne    0x65009b87
65009b70:	mov    edx,DWORD PTR [eax]
65009b72:	mov    BYTE PTR [edx+0x44],0x1
65009b76:	push   eax
65009b77:	mov    BYTE PTR [eax+0x44],0x0
65009b7b:	call   0x65008fc0
65009b80:	mov    eax,DWORD PTR [esi+0x8]
65009b83:	mov    ecx,DWORD PTR [esp+0x14]
65009b87:	mov    dl,BYTE PTR [esi+0x44]
65009b8a:	mov    BYTE PTR [eax+0x44],dl
65009b8d:	mov    BYTE PTR [esi+0x44],0x1
65009b91:	mov    eax,DWORD PTR [eax+0x8]
65009b94:	push   esi
65009b95:	mov    BYTE PTR [eax+0x44],0x1
65009b99:	call   0x65008dd0
65009b9e:	jmp    0x65009c1d
65009ba0:	cmp    BYTE PTR [eax+0x44],0x0
65009ba4:	jne    0x65009bba
65009ba6:	mov    BYTE PTR [eax+0x44],0x1
65009baa:	push   esi
65009bab:	mov    BYTE PTR [esi+0x44],0x0
65009baf:	call   0x65008fc0
65009bb4:	mov    eax,DWORD PTR [esi]
65009bb6:	mov    ecx,DWORD PTR [esp+0x14]
65009bba:	cmp    BYTE PTR [eax+0x45],0x0
65009bbe:	jne    0x65009bd5
65009bc0:	mov    edx,DWORD PTR [eax+0x8]
65009bc3:	cmp    BYTE PTR [edx+0x44],0x1
65009bc7:	jne    0x65009be8
65009bc9:	mov    edx,DWORD PTR [eax]
65009bcb:	cmp    BYTE PTR [edx+0x44],0x1
65009bcf:	jne    0x65009be8
65009bd1:	mov    BYTE PTR [eax+0x44],0x0
65009bd5:	mov    eax,DWORD PTR [ecx+0x4]
65009bd8:	mov    ebx,esi
65009bda:	cmp    ebx,DWORD PTR [eax+0x4]
65009bdd:	mov    esi,DWORD PTR [esi+0x4]
65009be0:	jne    0x65009b22
65009be6:	jmp    0x65009c1d
65009be8:	mov    edx,DWORD PTR [eax]
65009bea:	cmp    BYTE PTR [edx+0x44],0x1
65009bee:	jne    0x65009c07
65009bf0:	mov    edx,DWORD PTR [eax+0x8]
65009bf3:	mov    BYTE PTR [edx+0x44],0x1
65009bf7:	push   eax
65009bf8:	mov    BYTE PTR [eax+0x44],0x0
65009bfc:	call   0x65008dd0
65009c01:	mov    eax,DWORD PTR [esi]
65009c03:	mov    ecx,DWORD PTR [esp+0x14]
65009c07:	mov    dl,BYTE PTR [esi+0x44]
65009c0a:	mov    BYTE PTR [eax+0x44],dl
65009c0d:	mov    BYTE PTR [esi+0x44],0x1
65009c11:	mov    eax,DWORD PTR [eax]
65009c13:	push   esi
65009c14:	mov    BYTE PTR [eax+0x44],0x1
65009c18:	call   0x65008fc0
65009c1d:	mov    BYTE PTR [ebx+0x44],0x1
65009c21:	cmp    DWORD PTR [edi+0x40],0x8
65009c25:	jb     0x65009c33
65009c27:	mov    ecx,DWORD PTR [edi+0x2c]
65009c2a:	push   ecx
65009c2b:	call   0x65011f02
65009c30:	add    esp,0x4
65009c33:	xor    esi,esi
65009c35:	mov    ebx,0x7
65009c3a:	mov    DWORD PTR [edi+0x40],ebx
65009c3d:	mov    DWORD PTR [edi+0x3c],esi
65009c40:	mov    WORD PTR [edi+0x2c],si
65009c44:	cmp    DWORD PTR [edi+0x24],0x8
65009c48:	jb     0x65009c56
65009c4a:	mov    edx,DWORD PTR [edi+0x10]
65009c4d:	push   edx
65009c4e:	call   0x65011f02
65009c53:	add    esp,0x4
65009c56:	mov    DWORD PTR [edi+0x24],ebx
65009c59:	mov    DWORD PTR [edi+0x20],esi
65009c5c:	push   edi
65009c5d:	mov    WORD PTR [edi+0x10],si
65009c61:	call   0x65011f02
65009c66:	mov    ecx,DWORD PTR [esp+0x18]
65009c6a:	mov    eax,DWORD PTR [ecx+0x8]
65009c6d:	add    esp,0x4
65009c70:	cmp    eax,esi
65009c72:	jbe    0x65009c7a
65009c74:	add    eax,0xffffffff
65009c77:	mov    DWORD PTR [ecx+0x8],eax
65009c7a:	mov    eax,DWORD PTR [ebp+0x8]
65009c7d:	mov    ecx,DWORD PTR [ebp+0xc]
65009c80:	mov    edx,DWORD PTR [ebp+0x10]
65009c83:	mov    DWORD PTR [eax],ecx
65009c85:	mov    DWORD PTR [eax+0x4],edx
65009c88:	mov    ecx,DWORD PTR [esp+0x60]
65009c8c:	mov    DWORD PTR fs:0x0,ecx
65009c93:	pop    ecx
65009c94:	pop    edi
65009c95:	pop    esi
65009c96:	pop    ebx
65009c97:	mov    esp,ebp
65009c99:	pop    ebp
65009c9a:	ret    0xc
65009c9d:	int3   
65009c9e:	int3   
65009c9f:	int3   
65009ca0:	mov    eax,DWORD PTR [esp+0x4]
65009ca4:	mov    ecx,DWORD PTR [eax+0x8]
65009ca7:	cmp    BYTE PTR [ecx+0x45],0x0
65009cab:	jne    0x65009cbb
65009cad:	lea    ecx,[ecx+0x0]
65009cb0:	mov    eax,ecx
65009cb2:	mov    ecx,DWORD PTR [eax+0x8]
65009cb5:	cmp    BYTE PTR [ecx+0x45],0x0
65009cb9:	je     0x65009cb0
65009cbb:	ret    
65009cbc:	int3   
65009cbd:	int3   
65009cbe:	int3   
65009cbf:	int3   
65009cc0:	push   ecx
65009cc1:	push   ebx
65009cc2:	push   esi
65009cc3:	mov    esi,DWORD PTR [esp+0x10]
65009cc7:	xor    ebx,ebx
65009cc9:	cmp    BYTE PTR [esi+0x45],bl
65009ccc:	push   edi
65009ccd:	mov    DWORD PTR [esp+0xc],ecx
65009cd1:	mov    edi,esi
65009cd3:	jne    0x65009d36
65009cd5:	push   ebp
65009cd6:	lea    ebp,[ebx+0xf]
65009cd9:	lea    esp,[esp+0x0]
65009ce0:	mov    eax,DWORD PTR [edi+0x8]
65009ce3:	mov    ecx,DWORD PTR [esp+0x10]
65009ce7:	push   eax
65009ce8:	call   0x65009cc0
65009ced:	cmp    DWORD PTR [esi+0x40],0x10
65009cf1:	mov    edi,DWORD PTR [edi]
65009cf3:	jb     0x65009d01
65009cf5:	mov    ecx,DWORD PTR [esi+0x2c]
65009cf8:	push   ecx
65009cf9:	call   0x65011f02
65009cfe:	add    esp,0x4
65009d01:	mov    DWORD PTR [esi+0x40],ebp
65009d04:	mov    DWORD PTR [esi+0x3c],ebx
65009d07:	mov    BYTE PTR [esi+0x2c],bl
65009d0a:	cmp    DWORD PTR [esi+0x24],0x10
65009d0e:	jb     0x65009d1c
65009d10:	mov    edx,DWORD PTR [esi+0x10]
65009d13:	push   edx
65009d14:	call   0x65011f02
65009d19:	add    esp,0x4
65009d1c:	mov    DWORD PTR [esi+0x24],ebp
65009d1f:	mov    DWORD PTR [esi+0x20],ebx
65009d22:	push   esi
65009d23:	mov    BYTE PTR [esi+0x10],bl
65009d26:	call   0x65011f02
65009d2b:	add    esp,0x4
65009d2e:	cmp    BYTE PTR [edi+0x45],bl
65009d31:	mov    esi,edi
65009d33:	je     0x65009ce0
65009d35:	pop    ebp
65009d36:	pop    edi
65009d37:	pop    esi
65009d38:	pop    ebx
65009d39:	pop    ecx
65009d3a:	ret    0x4
65009d3d:	int3   
65009d3e:	int3   
65009d3f:	int3   
65009d40:	push   ecx
65009d41:	push   ebx
65009d42:	push   esi
65009d43:	mov    esi,DWORD PTR [esp+0x10]
65009d47:	xor    ebx,ebx
65009d49:	cmp    BYTE PTR [esi+0x45],bl
65009d4c:	push   edi
65009d4d:	mov    DWORD PTR [esp+0xc],ecx
65009d51:	mov    edi,esi
65009d53:	jne    0x65009db8
65009d55:	push   ebp
65009d56:	lea    ebp,[ebx+0x7]
65009d59:	lea    esp,[esp+0x0]
65009d60:	mov    eax,DWORD PTR [edi+0x8]
65009d63:	mov    ecx,DWORD PTR [esp+0x10]
65009d67:	push   eax
65009d68:	call   0x65009d40
65009d6d:	cmp    DWORD PTR [esi+0x40],0x8
65009d71:	mov    edi,DWORD PTR [edi]
65009d73:	jb     0x65009d81
65009d75:	mov    ecx,DWORD PTR [esi+0x2c]
65009d78:	push   ecx
65009d79:	call   0x65011f02
65009d7e:	add    esp,0x4
65009d81:	mov    DWORD PTR [esi+0x40],ebp
65009d84:	mov    DWORD PTR [esi+0x3c],ebx
65009d87:	mov    WORD PTR [esi+0x2c],bx
65009d8b:	cmp    DWORD PTR [esi+0x24],0x8
65009d8f:	jb     0x65009d9d
65009d91:	mov    edx,DWORD PTR [esi+0x10]
65009d94:	push   edx
65009d95:	call   0x65011f02
65009d9a:	add    esp,0x4
65009d9d:	mov    DWORD PTR [esi+0x24],ebp
65009da0:	mov    DWORD PTR [esi+0x20],ebx
65009da3:	push   esi
65009da4:	mov    WORD PTR [esi+0x10],bx
65009da8:	call   0x65011f02
65009dad:	add    esp,0x4
65009db0:	cmp    BYTE PTR [edi+0x45],bl
65009db3:	mov    esi,edi
65009db5:	je     0x65009d60
65009db7:	pop    ebp
65009db8:	pop    edi
65009db9:	pop    esi
65009dba:	pop    ebx
65009dbb:	pop    ecx
65009dbc:	ret    0x4
65009dbf:	int3   
65009dc0:	mov    eax,DWORD PTR [esp+0x4]
65009dc4:	mov    ecx,DWORD PTR [eax]
65009dc6:	cmp    BYTE PTR [ecx+0x45],0x0
65009dca:	jne    0x65009dda
65009dcc:	lea    esp,[esp+0x0]
65009dd0:	mov    eax,ecx
65009dd2:	mov    ecx,DWORD PTR [eax]
65009dd4:	cmp    BYTE PTR [ecx+0x45],0x0
65009dd8:	je     0x65009dd0
65009dda:	ret    
65009ddb:	int3   
65009ddc:	int3   
65009ddd:	int3   
65009dde:	int3   
65009ddf:	int3   
65009de0:	push   esi
65009de1:	mov    esi,ecx
65009de3:	cmp    DWORD PTR [esi],0x0
65009de6:	jne    0x65009ded
65009de8:	call   0x65012273
65009ded:	mov    eax,DWORD PTR [esi+0x4]
65009df0:	cmp    BYTE PTR [eax+0x45],0x0
65009df4:	je     0x65009dfc
65009df6:	pop    esi
65009df7:	jmp    0x65012273
65009dfc:	mov    ecx,DWORD PTR [eax+0x8]
65009dff:	cmp    BYTE PTR [ecx+0x45],0x0
65009e03:	jne    0x65009e1f
65009e05:	mov    eax,DWORD PTR [ecx]
65009e07:	cmp    BYTE PTR [eax+0x45],0x0
65009e0b:	jne    0x65009e1a
65009e0d:	lea    ecx,[ecx+0x0]
65009e10:	mov    ecx,eax
65009e12:	mov    eax,DWORD PTR [ecx]
65009e14:	cmp    BYTE PTR [eax+0x45],0x0
65009e18:	je     0x65009e10
65009e1a:	mov    DWORD PTR [esi+0x4],ecx
65009e1d:	pop    esi
65009e1e:	ret    
65009e1f:	mov    eax,DWORD PTR [eax+0x4]
65009e22:	cmp    BYTE PTR [eax+0x45],0x0
65009e26:	jne    0x65009e3e
65009e28:	mov    ecx,DWORD PTR [esi+0x4]
65009e2b:	cmp    ecx,DWORD PTR [eax+0x8]
65009e2e:	jne    0x65009e3e
65009e30:	mov    DWORD PTR [esi+0x4],eax
65009e33:	mov    edx,eax
65009e35:	mov    eax,DWORD PTR [edx+0x4]
65009e38:	cmp    BYTE PTR [eax+0x45],0x0
65009e3c:	je     0x65009e28
65009e3e:	mov    DWORD PTR [esi+0x4],eax
65009e41:	pop    esi
65009e42:	ret    
65009e43:	int3   
65009e44:	int3   
65009e45:	int3   
65009e46:	int3   
65009e47:	int3   
65009e48:	int3   
65009e49:	int3   
65009e4a:	int3   
65009e4b:	int3   
65009e4c:	int3   
65009e4d:	int3   
65009e4e:	int3   
65009e4f:	int3   
65009e50:	push   0xffffffff
65009e52:	push   0x650222e8
65009e57:	mov    eax,fs:0x0
65009e5d:	push   eax
65009e5e:	sub    esp,0x20
65009e61:	push   ebx
65009e62:	push   ebp
65009e63:	mov    eax,ds:0x6502c09c
65009e68:	xor    eax,esp
65009e6a:	push   eax
65009e6b:	lea    eax,[esp+0x2c]
65009e6f:	mov    fs:0x0,eax
65009e75:	mov    eax,DWORD PTR [esp+0x3c]
65009e79:	xor    ebx,ebx
65009e7b:	push   0xffffffff
65009e7d:	push   ebx
65009e7e:	push   eax
65009e7f:	lea    ecx,[esp+0x1c]
65009e83:	mov    DWORD PTR [esp+0x18],ebx
65009e87:	mov    DWORD PTR [esp+0x34],0xf
65009e8f:	mov    DWORD PTR [esp+0x30],ebx
65009e93:	mov    BYTE PTR [esp+0x20],bl
65009e97:	call   0x65001780
65009e9c:	mov    eax,edi
65009e9e:	mov    DWORD PTR [esp+0x34],ebx
65009ea2:	lea    ebp,[eax+0x1]
65009ea5:	mov    cl,BYTE PTR [eax]
65009ea7:	add    eax,0x1
65009eaa:	cmp    cl,bl
65009eac:	jne    0x65009ea5
65009eae:	sub    eax,ebp
65009eb0:	push   eax
65009eb1:	push   edi
65009eb2:	lea    eax,[esp+0x18]
65009eb6:	call   0x6500a2d0
65009ebb:	push   0xffffffff
65009ebd:	push   ebx
65009ebe:	mov    DWORD PTR [esi+0x18],0xf
65009ec5:	mov    DWORD PTR [esi+0x14],ebx
65009ec8:	push   eax
65009ec9:	mov    ecx,esi
65009ecb:	mov    BYTE PTR [esi+0x4],bl
65009ece:	call   0x65001780
65009ed3:	cmp    DWORD PTR [esp+0x28],0x10
65009ed8:	jb     0x65009ee7
65009eda:	mov    ecx,DWORD PTR [esp+0x14]
65009ede:	push   ecx
65009edf:	call   0x65011f02
65009ee4:	add    esp,0x4
65009ee7:	mov    eax,esi
65009ee9:	mov    ecx,DWORD PTR [esp+0x2c]
65009eed:	mov    DWORD PTR fs:0x0,ecx
65009ef4:	pop    ecx
65009ef5:	pop    ebp
65009ef6:	pop    ebx
65009ef7:	add    esp,0x2c
65009efa:	ret    
65009efb:	int3   
65009efc:	int3   
65009efd:	int3   
65009efe:	int3   
65009eff:	int3   
65009f00:	push   0xffffffff
65009f02:	push   0x650222c0
65009f07:	mov    eax,fs:0x0
65009f0d:	push   eax
65009f0e:	push   ecx
65009f0f:	push   esi
65009f10:	mov    eax,ds:0x6502c09c
65009f15:	xor    eax,esp
65009f17:	push   eax
65009f18:	lea    eax,[esp+0xc]
65009f1c:	mov    fs:0x0,eax
65009f22:	mov    esi,DWORD PTR [esp+0x1c]
65009f26:	mov    DWORD PTR [esp+0x8],0x0
65009f2e:	lea    eax,[esp+0x3c]
65009f32:	push   eax
65009f33:	lea    ecx,[esp+0x24]
65009f37:	push   ecx
65009f38:	mov    ecx,esi
65009f3a:	mov    DWORD PTR [esp+0x1c],0x1
65009f42:	call   0x6500a140
65009f47:	cmp    DWORD PTR [esp+0x38],0x10
65009f4c:	jb     0x65009f5b
65009f4e:	mov    edx,DWORD PTR [esp+0x24]
65009f52:	push   edx
65009f53:	call   0x65011f02
65009f58:	add    esp,0x4
65009f5b:	cmp    DWORD PTR [esp+0x54],0x10
65009f60:	mov    DWORD PTR [esp+0x38],0xf
65009f68:	mov    DWORD PTR [esp+0x34],0x0
65009f70:	mov    BYTE PTR [esp+0x24],0x0
65009f75:	jb     0x65009f84
65009f77:	mov    eax,DWORD PTR [esp+0x40]
65009f7b:	push   eax
65009f7c:	call   0x65011f02
65009f81:	add    esp,0x4
65009f84:	mov    eax,esi
65009f86:	mov    ecx,DWORD PTR [esp+0xc]
65009f8a:	mov    DWORD PTR fs:0x0,ecx
65009f91:	pop    ecx
65009f92:	pop    esi
65009f93:	add    esp,0x10
65009f96:	ret    
65009f97:	int3   
65009f98:	int3   
65009f99:	int3   
65009f9a:	int3   
65009f9b:	int3   
65009f9c:	int3   
65009f9d:	int3   
65009f9e:	int3   
65009f9f:	int3   
65009fa0:	push   0xffffffff
65009fa2:	push   0x65022288
65009fa7:	mov    eax,fs:0x0
65009fad:	push   eax
65009fae:	push   ecx
65009faf:	push   ebx
65009fb0:	push   esi
65009fb1:	push   edi
65009fb2:	mov    eax,ds:0x6502c09c
65009fb7:	xor    eax,esp
65009fb9:	push   eax
65009fba:	lea    eax,[esp+0x14]
65009fbe:	mov    fs:0x0,eax
65009fc4:	mov    esi,ecx
65009fc6:	mov    DWORD PTR [esp+0x10],esi
65009fca:	mov    edi,DWORD PTR [esp+0x24]
65009fce:	xor    ebx,ebx
65009fd0:	push   0xffffffff
65009fd2:	push   ebx
65009fd3:	mov    DWORD PTR [esi+0x18],0xf
65009fda:	mov    DWORD PTR [esi+0x14],ebx
65009fdd:	push   edi
65009fde:	mov    BYTE PTR [esi+0x4],bl
65009fe1:	call   0x65001780
65009fe6:	push   0xffffffff
65009fe8:	lea    ecx,[esi+0x1c]
65009feb:	mov    DWORD PTR [esp+0x20],ebx
65009fef:	lea    eax,[edi+0x1c]
65009ff2:	push   ebx
65009ff3:	mov    DWORD PTR [ecx+0x18],0xf
65009ffa:	mov    DWORD PTR [ecx+0x14],ebx
65009ffd:	push   eax
65009ffe:	mov    BYTE PTR [ecx+0x4],bl
6500a001:	call   0x65001780
6500a006:	mov    eax,esi
6500a008:	mov    ecx,DWORD PTR [esp+0x14]
6500a00c:	mov    DWORD PTR fs:0x0,ecx
6500a013:	pop    ecx
6500a014:	pop    edi
6500a015:	pop    esi
6500a016:	pop    ebx
6500a017:	add    esp,0x10
6500a01a:	ret    0x4
6500a01d:	int3   
6500a01e:	int3   
6500a01f:	int3   
6500a020:	push   0xffffffff
6500a022:	push   0x65022630
6500a027:	mov    eax,fs:0x0
6500a02d:	push   eax
6500a02e:	push   ecx
6500a02f:	push   esi
6500a030:	mov    eax,ds:0x6502c09c
6500a035:	xor    eax,esp
6500a037:	push   eax
6500a038:	lea    eax,[esp+0xc]
6500a03c:	mov    fs:0x0,eax
6500a042:	mov    esi,DWORD PTR [esp+0x1c]
6500a046:	mov    DWORD PTR [esp+0x8],0x0
6500a04e:	lea    eax,[esp+0x3c]
6500a052:	push   eax
6500a053:	lea    ecx,[esp+0x24]
6500a057:	push   ecx
6500a058:	mov    ecx,esi
6500a05a:	mov    DWORD PTR [esp+0x1c],0x1
6500a062:	call   0x6500a1c0
6500a067:	cmp    DWORD PTR [esp+0x38],0x8
6500a06c:	jb     0x6500a07b
6500a06e:	mov    edx,DWORD PTR [esp+0x24]
6500a072:	push   edx
6500a073:	call   0x65011f02
6500a078:	add    esp,0x4
6500a07b:	cmp    DWORD PTR [esp+0x54],0x8
6500a080:	mov    DWORD PTR [esp+0x38],0x7
6500a088:	mov    DWORD PTR [esp+0x34],0x0
6500a090:	mov    WORD PTR [esp+0x24],0x0
6500a097:	jb     0x6500a0a6
6500a099:	mov    eax,DWORD PTR [esp+0x40]
6500a09d:	push   eax
6500a09e:	call   0x65011f02
6500a0a3:	add    esp,0x4
6500a0a6:	mov    eax,esi
6500a0a8:	mov    ecx,DWORD PTR [esp+0xc]
6500a0ac:	mov    DWORD PTR fs:0x0,ecx
6500a0b3:	pop    ecx
6500a0b4:	pop    esi
6500a0b5:	add    esp,0x10
6500a0b8:	ret    
6500a0b9:	int3   
6500a0ba:	int3   
6500a0bb:	int3   
6500a0bc:	int3   
6500a0bd:	int3   
6500a0be:	int3   
6500a0bf:	int3   
6500a0c0:	push   0xffffffff
6500a0c2:	push   0x650225f8
6500a0c7:	mov    eax,fs:0x0
6500a0cd:	push   eax
6500a0ce:	push   ecx
6500a0cf:	push   ebx
6500a0d0:	push   esi
6500a0d1:	push   edi
6500a0d2:	mov    eax,ds:0x6502c09c
6500a0d7:	xor    eax,esp
6500a0d9:	push   eax
6500a0da:	lea    eax,[esp+0x14]
6500a0de:	mov    fs:0x0,eax
6500a0e4:	mov    esi,ecx
6500a0e6:	mov    DWORD PTR [esp+0x10],esi
6500a0ea:	mov    ebx,DWORD PTR [esp+0x24]
6500a0ee:	xor    edi,edi
6500a0f0:	push   0xffffffff
6500a0f2:	push   edi
6500a0f3:	mov    DWORD PTR [esi+0x18],0x7
6500a0fa:	mov    DWORD PTR [esi+0x14],edi
6500a0fd:	push   ebx
6500a0fe:	mov    WORD PTR [esi+0x4],di
6500a102:	call   0x65008710
6500a107:	push   0xffffffff
6500a109:	lea    ecx,[esi+0x1c]
6500a10c:	mov    DWORD PTR [esp+0x20],edi
6500a110:	lea    eax,[ebx+0x1c]
6500a113:	push   edi
6500a114:	mov    DWORD PTR [ecx+0x18],0x7
6500a11b:	mov    DWORD PTR [ecx+0x14],edi
6500a11e:	push   eax
6500a11f:	mov    WORD PTR [ecx+0x4],di
6500a123:	call   0x65008710
6500a128:	mov    eax,esi
6500a12a:	mov    ecx,DWORD PTR [esp+0x14]
6500a12e:	mov    DWORD PTR fs:0x0,ecx
6500a135:	pop    ecx
6500a136:	pop    edi
6500a137:	pop    esi
6500a138:	pop    ebx
6500a139:	add    esp,0x10
6500a13c:	ret    0x4
6500a13f:	int3   
6500a140:	push   0xffffffff
6500a142:	push   0x65022258
6500a147:	mov    eax,fs:0x0
6500a14d:	push   eax
6500a14e:	push   ecx
6500a14f:	push   ebx
6500a150:	push   esi
6500a151:	mov    eax,ds:0x6502c09c
6500a156:	xor    eax,esp
6500a158:	push   eax
6500a159:	lea    eax,[esp+0x10]
6500a15d:	mov    fs:0x0,eax
6500a163:	mov    esi,ecx
6500a165:	mov    DWORD PTR [esp+0xc],esi
6500a169:	mov    eax,DWORD PTR [esp+0x20]
6500a16d:	xor    ebx,ebx
6500a16f:	push   0xffffffff
6500a171:	push   ebx
6500a172:	mov    DWORD PTR [esi+0x18],0xf
6500a179:	mov    DWORD PTR [esi+0x14],ebx
6500a17c:	push   eax
6500a17d:	mov    BYTE PTR [esi+0x4],bl
6500a180:	call   0x65001780
6500a185:	mov    edx,DWORD PTR [esp+0x24]
6500a189:	push   0xffffffff
6500a18b:	lea    ecx,[esi+0x1c]
6500a18e:	mov    DWORD PTR [esp+0x1c],ebx
6500a192:	push   ebx
6500a193:	mov    DWORD PTR [ecx+0x18],0xf
6500a19a:	mov    DWORD PTR [ecx+0x14],ebx
6500a19d:	push   edx
6500a19e:	mov    BYTE PTR [ecx+0x4],bl
6500a1a1:	call   0x65001780
6500a1a6:	mov    eax,esi
6500a1a8:	mov    ecx,DWORD PTR [esp+0x10]
6500a1ac:	mov    DWORD PTR fs:0x0,ecx
6500a1b3:	pop    ecx
6500a1b4:	pop    esi
6500a1b5:	pop    ebx
6500a1b6:	add    esp,0x10
6500a1b9:	ret    0x8
6500a1bc:	int3   
6500a1bd:	int3   
6500a1be:	int3   
6500a1bf:	int3   
6500a1c0:	push   0xffffffff
6500a1c2:	push   0x650225c8
6500a1c7:	mov    eax,fs:0x0
6500a1cd:	push   eax
6500a1ce:	push   ecx
6500a1cf:	push   esi
6500a1d0:	push   edi
6500a1d1:	mov    eax,ds:0x6502c09c
6500a1d6:	xor    eax,esp
6500a1d8:	push   eax
6500a1d9:	lea    eax,[esp+0x10]
6500a1dd:	mov    fs:0x0,eax
6500a1e3:	mov    esi,ecx
6500a1e5:	mov    DWORD PTR [esp+0xc],esi
6500a1e9:	mov    eax,DWORD PTR [esp+0x20]
6500a1ed:	xor    edi,edi
6500a1ef:	push   0xffffffff
6500a1f1:	push   edi
6500a1f2:	mov    DWORD PTR [esi+0x18],0x7
6500a1f9:	mov    DWORD PTR [esi+0x14],edi
6500a1fc:	push   eax
6500a1fd:	mov    WORD PTR [esi+0x4],di
6500a201:	call   0x65008710
6500a206:	mov    edx,DWORD PTR [esp+0x24]
6500a20a:	push   0xffffffff
6500a20c:	lea    ecx,[esi+0x1c]
6500a20f:	mov    DWORD PTR [esp+0x1c],edi
6500a213:	push   edi
6500a214:	mov    DWORD PTR [ecx+0x18],0x7
6500a21b:	mov    DWORD PTR [ecx+0x14],edi
6500a21e:	push   edx
6500a21f:	mov    WORD PTR [ecx+0x4],di
6500a223:	call   0x65008710
6500a228:	mov    eax,esi
6500a22a:	mov    ecx,DWORD PTR [esp+0x10]
6500a22e:	mov    DWORD PTR fs:0x0,ecx
6500a235:	pop    ecx
6500a236:	pop    edi
6500a237:	pop    esi
6500a238:	add    esp,0x10
6500a23b:	ret    0x8
6500a23e:	int3   
6500a23f:	int3   
6500a240:	push   ebx
6500a241:	push   ebp
6500a242:	push   esi
6500a243:	push   edi
6500a244:	mov    edi,DWORD PTR [esp+0x14]
6500a248:	mov    esi,ecx
6500a24a:	cmp    DWORD PTR [esi+0x14],edi
6500a24d:	jae    0x6500a254
6500a24f:	call   0x65011ebe
6500a254:	mov    eax,DWORD PTR [esi+0x14]
6500a257:	mov    ebx,DWORD PTR [esp+0x18]
6500a25b:	sub    eax,edi
6500a25d:	cmp    eax,ebx
6500a25f:	jae    0x6500a263
6500a261:	mov    ebx,eax
6500a263:	mov    ebp,DWORD PTR [esp+0x20]
6500a267:	cmp    ebx,ebp
6500a269:	mov    edx,ebx
6500a26b:	jb     0x6500a26f
6500a26d:	mov    edx,ebp
6500a26f:	cmp    DWORD PTR [esi+0x18],0x8
6500a273:	jb     0x6500a27a
6500a275:	mov    eax,DWORD PTR [esi+0x4]
6500a278:	jmp    0x6500a27d
6500a27a:	lea    eax,[esi+0x4]
6500a27d:	test   edx,edx
6500a27f:	mov    ecx,DWORD PTR [esp+0x1c]
6500a283:	lea    eax,[eax+edi*2]
6500a286:	jbe    0x6500a2ad
6500a288:	mov    si,WORD PTR [eax]
6500a28b:	cmp    si,WORD PTR [ecx]
6500a28e:	jne    0x6500a29d
6500a290:	add    eax,0x2
6500a293:	add    ecx,0x2
6500a296:	sub    edx,0x1
6500a299:	jne    0x6500a288
6500a29b:	jmp    0x6500a2ad
6500a29d:	movzx  eax,WORD PTR [eax]
6500a2a0:	cmp    ax,WORD PTR [ecx]
6500a2a3:	sbb    eax,eax
6500a2a5:	and    eax,0xfffffffe
6500a2a8:	add    eax,0x1
6500a2ab:	jne    0x6500a2c2
6500a2ad:	cmp    ebx,ebp
6500a2af:	jae    0x6500a2bb
6500a2b1:	pop    edi
6500a2b2:	pop    esi
6500a2b3:	pop    ebp
6500a2b4:	or     eax,0xffffffff
6500a2b7:	pop    ebx
6500a2b8:	ret    0x10
6500a2bb:	xor    eax,eax
6500a2bd:	cmp    ebx,ebp
6500a2bf:	setne  al
6500a2c2:	pop    edi
6500a2c3:	pop    esi
6500a2c4:	pop    ebp
6500a2c5:	pop    ebx
6500a2c6:	ret    0x10
6500a2c9:	int3   
6500a2ca:	int3   
6500a2cb:	int3   
6500a2cc:	int3   
6500a2cd:	int3   
6500a2ce:	int3   
6500a2cf:	int3   
6500a2d0:	mov    ecx,DWORD PTR [esp+0x4]
6500a2d4:	push   ebx
6500a2d5:	push   ebp
6500a2d6:	mov    ebp,DWORD PTR [esp+0x10]
6500a2da:	push   esi
6500a2db:	mov    esi,eax
6500a2dd:	mov    edx,DWORD PTR [esi+0x18]
6500a2e0:	cmp    edx,0x10
6500a2e3:	push   edi
6500a2e4:	lea    ebx,[esi+0x4]
6500a2e7:	jb     0x6500a2ed
6500a2e9:	mov    eax,DWORD PTR [ebx]
6500a2eb:	jmp    0x6500a2ef
6500a2ed:	mov    eax,ebx
6500a2ef:	cmp    ecx,eax
6500a2f1:	jb     0x6500a320
6500a2f3:	cmp    edx,0x10
6500a2f6:	jb     0x6500a2fc
6500a2f8:	mov    eax,DWORD PTR [ebx]
6500a2fa:	jmp    0x6500a2fe
6500a2fc:	mov    eax,ebx
6500a2fe:	mov    edi,DWORD PTR [esi+0x14]
6500a301:	add    edi,eax
6500a303:	cmp    edi,ecx
6500a305:	jbe    0x6500a320
6500a307:	cmp    edx,0x10
6500a30a:	jb     0x6500a30e
6500a30c:	mov    ebx,DWORD PTR [ebx]
6500a30e:	sub    ecx,ebx
6500a310:	push   ecx
6500a311:	push   esi
6500a312:	mov    eax,ebp
6500a314:	call   0x650019d0
6500a319:	pop    edi
6500a31a:	pop    esi
6500a31b:	pop    ebp
6500a31c:	pop    ebx
6500a31d:	ret    0x8
6500a320:	mov    eax,DWORD PTR [esi+0x14]
6500a323:	or     ecx,0xffffffff
6500a326:	sub    ecx,eax
6500a328:	cmp    ecx,ebp
6500a32a:	jbe    0x6500a333
6500a32c:	lea    edx,[eax+ebp*1]
6500a32f:	cmp    edx,eax
6500a331:	jae    0x6500a338
6500a333:	call   0x65011e7f
6500a338:	test   ebp,ebp
6500a33a:	jbe    0x6500a3b0
6500a33c:	mov    edi,DWORD PTR [esi+0x14]
6500a33f:	add    edi,ebp
6500a341:	cmp    edi,0xfffffffe
6500a344:	jbe    0x6500a34b
6500a346:	call   0x65011e7f
6500a34b:	mov    eax,DWORD PTR [esi+0x18]
6500a34e:	cmp    eax,edi
6500a350:	jae    0x6500a36e
6500a352:	mov    eax,DWORD PTR [esi+0x14]
6500a355:	push   eax
6500a356:	push   edi
6500a357:	mov    ecx,esi
6500a359:	call   0x65001b60
6500a35e:	test   edi,edi
6500a360:	jbe    0x6500a3b0
6500a362:	mov    eax,DWORD PTR [esi+0x18]
6500a365:	cmp    eax,0x10
6500a368:	jb     0x6500a388
6500a36a:	mov    edx,DWORD PTR [ebx]
6500a36c:	jmp    0x6500a38a
6500a36e:	test   edi,edi
6500a370:	jne    0x6500a360
6500a372:	cmp    eax,0x10
6500a375:	mov    DWORD PTR [esi+0x14],edi
6500a378:	jb     0x6500a37c
6500a37a:	mov    ebx,DWORD PTR [ebx]
6500a37c:	pop    edi
6500a37d:	mov    eax,esi
6500a37f:	pop    esi
6500a380:	pop    ebp
6500a381:	mov    BYTE PTR [ebx],0x0
6500a384:	pop    ebx
6500a385:	ret    0x8
6500a388:	mov    edx,ebx
6500a38a:	mov    ecx,DWORD PTR [esi+0x14]
6500a38d:	push   ebp
6500a38e:	mov    ebp,DWORD PTR [esp+0x18]
6500a392:	sub    eax,ecx
6500a394:	push   ebp
6500a395:	push   eax
6500a396:	add    ecx,edx
6500a398:	push   ecx
6500a399:	call   0x65012073
6500a39e:	add    esp,0x10
6500a3a1:	cmp    DWORD PTR [esi+0x18],0x10
6500a3a5:	mov    DWORD PTR [esi+0x14],edi
6500a3a8:	jb     0x6500a3ac
6500a3aa:	mov    ebx,DWORD PTR [ebx]
6500a3ac:	mov    BYTE PTR [ebx+edi*1],0x0
6500a3b0:	pop    edi
6500a3b1:	mov    eax,esi
6500a3b3:	pop    esi
6500a3b4:	pop    ebp
6500a3b5:	pop    ebx
6500a3b6:	ret    0x8
6500a3b9:	int3   
6500a3ba:	int3   
6500a3bb:	int3   
6500a3bc:	int3   
6500a3bd:	int3   
6500a3be:	int3   
6500a3bf:	int3   
6500a3c0:	push   ebp
6500a3c1:	mov    ebp,DWORD PTR [esp+0x14]
6500a3c5:	push   esi
6500a3c6:	mov    esi,DWORD PTR [esp+0x10]
6500a3ca:	push   edi
6500a3cb:	mov    edi,DWORD PTR [esp+0x10]
6500a3cf:	nop
6500a3d0:	test   edi,edi
6500a3d2:	je     0x6500a3da
6500a3d4:	cmp    edi,DWORD PTR [esp+0x18]
6500a3d8:	je     0x6500a3df
6500a3da:	call   0x65012273
6500a3df:	cmp    esi,ebp
6500a3e1:	je     0x6500a43b
6500a3e3:	add    DWORD PTR [ebx],0x1
6500a3e6:	test   edi,edi
6500a3e8:	jne    0x6500a3ef
6500a3ea:	call   0x65012273
6500a3ef:	cmp    BYTE PTR [esi+0x29],0x0
6500a3f3:	je     0x6500a3fc
6500a3f5:	call   0x65012273
6500a3fa:	jmp    0x6500a3d0
6500a3fc:	mov    ecx,DWORD PTR [esi+0x8]
6500a3ff:	cmp    BYTE PTR [ecx+0x29],0x0
6500a403:	jne    0x6500a41e
6500a405:	mov    eax,DWORD PTR [ecx]
6500a407:	cmp    BYTE PTR [eax+0x29],0x0
6500a40b:	jne    0x6500a41a
6500a40d:	lea    ecx,[ecx+0x0]
6500a410:	mov    ecx,eax
6500a412:	mov    eax,DWORD PTR [ecx]
6500a414:	cmp    BYTE PTR [eax+0x29],0x0
6500a418:	je     0x6500a410
6500a41a:	mov    esi,ecx
6500a41c:	jmp    0x6500a3d0
6500a41e:	mov    eax,DWORD PTR [esi+0x4]
6500a421:	cmp    BYTE PTR [eax+0x29],0x0
6500a425:	jne    0x6500a437
6500a427:	cmp    esi,DWORD PTR [eax+0x8]
6500a42a:	jne    0x6500a437
6500a42c:	mov    esi,eax
6500a42e:	mov    eax,DWORD PTR [eax+0x4]
6500a431:	cmp    BYTE PTR [eax+0x29],0x0
6500a435:	je     0x6500a427
6500a437:	mov    esi,eax
6500a439:	jmp    0x6500a3d0
6500a43b:	pop    edi
6500a43c:	pop    esi
6500a43d:	pop    ebp
6500a43e:	ret    
6500a43f:	int3   
6500a440:	push   esi
6500a441:	mov    esi,ecx
6500a443:	call   0x6500dd20
6500a448:	call   eax
6500a44a:	mov    DWORD PTR [esi],eax
6500a44c:	mov    eax,esi
6500a44e:	pop    esi
6500a44f:	ret    
6500a450:	mov    eax,DWORD PTR [ecx]
6500a452:	push   eax
6500a453:	call   0x6500ddb0
6500a458:	call   eax
6500a45a:	ret    
6500a45b:	int3   
6500a45c:	int3   
6500a45d:	int3   
6500a45e:	int3   
6500a45f:	int3   
6500a460:	push   ebp
6500a461:	mov    ebp,esp
6500a463:	and    esp,0xfffffff8
6500a466:	push   0xffffffff
6500a468:	push   0x65022b50
6500a46d:	mov    eax,fs:0x0
6500a473:	push   eax
6500a474:	sub    esp,0x68
6500a477:	mov    eax,ds:0x6502c09c
6500a47c:	xor    eax,esp
6500a47e:	mov    DWORD PTR [esp+0x60],eax
6500a482:	push   ebx
6500a483:	push   esi
6500a484:	push   edi
6500a485:	mov    eax,ds:0x6502c09c
6500a48a:	xor    eax,esp
6500a48c:	push   eax
6500a48d:	lea    eax,[esp+0x78]
6500a491:	mov    fs:0x0,eax
6500a497:	mov    eax,DWORD PTR [ebp+0x14]
6500a49a:	mov    ebx,DWORD PTR [ebp+0xc]
6500a49d:	mov    DWORD PTR [esp+0x1c],ecx
6500a4a1:	mov    DWORD PTR [esp+0x18],eax
6500a4a5:	call   DWORD PTR ds:0x65024058
6500a4ab:	lea    ecx,[esp+0x44]
6500a4af:	push   ecx
6500a4b0:	mov    DWORD PTR [esp+0x24],eax
6500a4b4:	call   0x6500e820
6500a4b9:	call   eax
6500a4bb:	xor    edi,edi
6500a4bd:	mov    DWORD PTR [esp+0x6c],0xf
6500a4c5:	mov    DWORD PTR [esp+0x68],edi
6500a4c9:	mov    BYTE PTR [esp+0x58],0x0
6500a4ce:	mov    ecx,DWORD PTR [ebp+0x10]
6500a4d1:	mov    eax,0x8d3dcb09
6500a4d6:	mul    ecx
6500a4d8:	mov    esi,edx
6500a4da:	shr    esi,0x8
6500a4dd:	lea    eax,[esi+0x1]
6500a4e0:	cmp    eax,edi
6500a4e2:	mov    DWORD PTR [esp+0x80],edi
6500a4e9:	mov    BYTE PTR [esp+0x13],0x1
6500a4ee:	je     0x6500a5b4
6500a4f4:	mov    edx,0x1d0
6500a4f9:	sub    edx,ebx
6500a4fb:	mov    DWORD PTR [esp+0x14],ebx
6500a4ff:	mov    DWORD PTR [esp+0x24],edx
6500a503:	mov    eax,DWORD PTR [esp+0x14]
6500a507:	add    eax,edx
6500a509:	cmp    eax,ecx
6500a50b:	jb     0x6500a606
6500a511:	mov    eax,esi
6500a513:	imul   eax,eax,0x1d0
6500a519:	mov    ebx,ecx
6500a51b:	sub    ebx,eax
6500a51d:	test   ebx,ebx
6500a51f:	je     0x6500a59c
6500a521:	or     ecx,0xffffffff
6500a524:	cmp    DWORD PTR [ebp+0x18],ecx
6500a527:	je     0x6500a540
6500a529:	call   DWORD PTR ds:0x65024058
6500a52f:	sub    eax,DWORD PTR [esp+0x20]
6500a533:	mov    ecx,DWORD PTR [ebp+0x18]
6500a536:	cmp    eax,ecx
6500a538:	ja     0x6500a610
6500a53e:	sub    ecx,eax
6500a540:	mov    edx,DWORD PTR [esp+0x44]
6500a544:	sub    esp,0x10
6500a547:	mov    eax,esp
6500a549:	mov    DWORD PTR [eax],edx
6500a54b:	mov    edx,DWORD PTR [esp+0x58]
6500a54f:	mov    DWORD PTR [eax+0x4],edx
6500a552:	mov    edx,DWORD PTR [esp+0x5c]
6500a556:	mov    DWORD PTR [eax+0x8],edx
6500a559:	mov    edx,DWORD PTR [esp+0x60]
6500a55d:	mov    DWORD PTR [eax+0xc],edx
6500a560:	mov    edx,DWORD PTR [esp+0x24]
6500a564:	test   edi,edi
6500a566:	setne  al
6500a569:	cmp    edi,esi
6500a56b:	push   eax
6500a56c:	mov    eax,DWORD PTR [ebp+0x8]
6500a56f:	push   ecx
6500a570:	setb   cl
6500a573:	push   ecx
6500a574:	mov    ecx,DWORD PTR [esp+0x38]
6500a578:	push   edi
6500a579:	push   ebx
6500a57a:	push   edx
6500a57b:	push   eax
6500a57c:	push   ecx
6500a57d:	lea    edx,[esp+0x43]
6500a581:	lea    ecx,[esp+0x84]
6500a588:	call   0x6500a7a0
6500a58d:	test   al,al
6500a58f:	je     0x6500a62b
6500a595:	mov    ecx,DWORD PTR [ebp+0x10]
6500a598:	mov    edx,DWORD PTR [esp+0x24]
6500a59c:	add    DWORD PTR [esp+0x14],0x1d0
6500a5a4:	add    edi,0x1
6500a5a7:	lea    eax,[esi+0x1]
6500a5aa:	cmp    edi,eax
6500a5ac:	jne    0x6500a503
6500a5b2:	xor    edi,edi
6500a5b4:	mov    esi,DWORD PTR [esp+0x18]
6500a5b8:	push   edi
6500a5b9:	lea    ecx,[esp+0x58]
6500a5bd:	push   ecx
6500a5be:	or     eax,0xffffffff
6500a5c1:	call   0x650019d0
6500a5c6:	cmp    BYTE PTR [esp+0x13],0x0
6500a5cb:	je     0x6500a75b
6500a5d1:	mov    DWORD PTR [esp+0x14],0xfffffffe
6500a5d9:	lea    esp,[esp+0x0]
6500a5e0:	mov    esi,0xf
6500a5e5:	mov    DWORD PTR [esp+0x40],esi
6500a5e9:	mov    DWORD PTR [esp+0x3c],edi
6500a5ed:	mov    BYTE PTR [esp+0x2c],0x0
6500a5f2:	mov    ebx,DWORD PTR [ebp+0x18]
6500a5f5:	cmp    ebx,0xffffffff
6500a5f8:	mov    BYTE PTR [esp+0x80],0x1
6500a600:	jne    0x6500a646
6500a602:	or     ecx,ebx
6500a604:	jmp    0x6500a65c
6500a606:	mov    ebx,0x1d0
6500a60b:	jmp    0x6500a521
6500a610:	cmp    DWORD PTR [esp+0x6c],0x10
6500a615:	jb     0x6500a624
6500a617:	mov    edx,DWORD PTR [esp+0x58]
6500a61b:	push   edx
6500a61c:	call   0x65011f02
6500a621:	add    esp,0x4
6500a624:	xor    al,al
6500a626:	jmp    0x6500a771
6500a62b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a630:	jb     0x6500a624
6500a632:	mov    eax,DWORD PTR [esp+0x58]
6500a636:	push   eax
6500a637:	call   0x65011f02
6500a63c:	add    esp,0x4
6500a63f:	xor    al,al
6500a641:	jmp    0x6500a771
6500a646:	call   DWORD PTR ds:0x65024058
6500a64c:	sub    eax,DWORD PTR [esp+0x20]
6500a650:	cmp    eax,ebx
6500a652:	ja     0x6500a6eb
6500a658:	mov    ecx,ebx
6500a65a:	sub    ecx,eax
6500a65c:	mov    edx,DWORD PTR [esp+0x44]
6500a660:	sub    esp,0x10
6500a663:	mov    eax,esp
6500a665:	mov    DWORD PTR [eax],edx
6500a667:	mov    edx,DWORD PTR [esp+0x58]
6500a66b:	mov    DWORD PTR [eax+0x4],edx
6500a66e:	mov    edx,DWORD PTR [esp+0x5c]
6500a672:	push   0x1
6500a674:	push   ecx
6500a675:	mov    ecx,DWORD PTR [ebp+0x8]
6500a678:	mov    DWORD PTR [eax+0x8],edx
6500a67b:	mov    edx,DWORD PTR [esp+0x68]
6500a67f:	push   edi
6500a680:	mov    DWORD PTR [eax+0xc],edx
6500a683:	mov    eax,DWORD PTR [esp+0x30]
6500a687:	mov    edx,DWORD PTR [esp+0x38]
6500a68b:	push   eax
6500a68c:	push   edi
6500a68d:	push   edi
6500a68e:	push   ecx
6500a68f:	push   edx
6500a690:	lea    edx,[esp+0x43]
6500a694:	lea    ecx,[esp+0x58]
6500a698:	call   0x6500a7a0
6500a69d:	test   al,al
6500a69f:	je     0x6500a719
6500a6a1:	cmp    DWORD PTR [esp+0x3c],edi
6500a6a5:	je     0x6500a747
6500a6ab:	mov    esi,DWORD PTR [esp+0x18]
6500a6af:	push   edi
6500a6b0:	lea    eax,[esp+0x2c]
6500a6b4:	push   eax
6500a6b5:	or     eax,0xffffffff
6500a6b8:	call   0x650019d0
6500a6bd:	mov    BYTE PTR [esp+0x80],0x0
6500a6c5:	cmp    DWORD PTR [esp+0x40],0x10
6500a6ca:	jb     0x6500a6d9
6500a6cc:	mov    ecx,DWORD PTR [esp+0x2c]
6500a6d0:	push   ecx
6500a6d1:	call   0x65011f02
6500a6d6:	add    esp,0x4
6500a6d9:	sub    DWORD PTR [esp+0x14],0x1
6500a6de:	cmp    BYTE PTR [esp+0x13],0x0
6500a6e3:	jne    0x6500a5e0
6500a6e9:	jmp    0x6500a75b
6500a6eb:	mov    ebx,0x10
6500a6f0:	cmp    DWORD PTR [esp+0x40],ebx
6500a6f4:	jb     0x6500a703
6500a6f6:	mov    edx,DWORD PTR [esp+0x2c]
6500a6fa:	push   edx
6500a6fb:	call   0x65011f02
6500a700:	add    esp,0x4
6500a703:	cmp    DWORD PTR [esp+0x6c],ebx
6500a707:	mov    DWORD PTR [esp+0x40],esi
6500a70b:	mov    DWORD PTR [esp+0x3c],edi
6500a70f:	mov    BYTE PTR [esp+0x2c],0x0
6500a714:	jmp    0x6500a630
6500a719:	mov    ebx,0x10
6500a71e:	cmp    DWORD PTR [esp+0x40],ebx
6500a722:	jb     0x6500a731
6500a724:	mov    ecx,DWORD PTR [esp+0x2c]
6500a728:	push   ecx
6500a729:	call   0x65011f02
6500a72e:	add    esp,0x4
6500a731:	cmp    DWORD PTR [esp+0x6c],ebx
6500a735:	mov    DWORD PTR [esp+0x40],esi
6500a739:	mov    DWORD PTR [esp+0x3c],edi
6500a73d:	mov    BYTE PTR [esp+0x2c],0x0
6500a742:	jmp    0x6500a615
6500a747:	cmp    DWORD PTR [esp+0x40],0x10
6500a74c:	jb     0x6500a75b
6500a74e:	mov    eax,DWORD PTR [esp+0x2c]
6500a752:	push   eax
6500a753:	call   0x65011f02
6500a758:	add    esp,0x4
6500a75b:	cmp    DWORD PTR [esp+0x6c],0x10
6500a760:	jb     0x6500a76f
6500a762:	mov    ecx,DWORD PTR [esp+0x58]
6500a766:	push   ecx
6500a767:	call   0x65011f02
6500a76c:	add    esp,0x4
6500a76f:	mov    al,0x1
6500a771:	mov    ecx,DWORD PTR [esp+0x78]
6500a775:	mov    DWORD PTR fs:0x0,ecx
6500a77c:	pop    ecx
6500a77d:	pop    edi
6500a77e:	pop    esi
6500a77f:	pop    ebx
6500a780:	mov    ecx,DWORD PTR [esp+0x60]
6500a784:	xor    ecx,esp
6500a786:	call   0x6501275c
6500a78b:	mov    esp,ebp
6500a78d:	pop    ebp
6500a78e:	ret    0x14
6500a791:	int3   
6500a792:	int3   
6500a793:	int3   
6500a794:	int3   
6500a795:	int3   
6500a796:	int3   
6500a797:	int3   
6500a798:	int3   
6500a799:	int3   
6500a79a:	int3   
6500a79b:	int3   
6500a79c:	int3   
6500a79d:	int3   
6500a79e:	int3   
6500a79f:	int3   
6500a7a0:	push   0xffffffff
6500a7a2:	push   0x65022b0c
6500a7a7:	mov    eax,fs:0x0
6500a7ad:	push   eax
6500a7ae:	mov    eax,0x10074
6500a7b3:	call   0x65017fd0
6500a7b8:	mov    eax,ds:0x6502c09c
6500a7bd:	xor    eax,esp
6500a7bf:	mov    DWORD PTR [esp+0x10070],eax
6500a7c6:	push   ebx
6500a7c7:	push   ebp
6500a7c8:	push   esi
6500a7c9:	push   edi
6500a7ca:	mov    eax,ds:0x6502c09c
6500a7cf:	xor    eax,esp
6500a7d1:	push   eax
6500a7d2:	lea    eax,[esp+0x10088]
6500a7d9:	mov    fs:0x0,eax
6500a7df:	mov    eax,DWORD PTR [esp+0x10098]
6500a7e6:	mov    esi,DWORD PTR [esp+0x100a0]
6500a7ed:	mov    ebp,DWORD PTR ds:0x650241c0
6500a7f3:	mov    DWORD PTR [esp+0x18],eax
6500a7f7:	mov    eax,DWORD PTR [esp+0x100b8]
6500a7fe:	mov    DWORD PTR [esp+0x2c],ecx
6500a802:	mov    ecx,DWORD PTR [esp+0x100bc]
6500a809:	mov    DWORD PTR [esp+0x28],edx
6500a80d:	mov    edx,DWORD PTR [esp+0x100c0]
6500a814:	mov    DWORD PTR [esp+0x54],eax
6500a818:	mov    eax,DWORD PTR [esp+0x100c4]
6500a81f:	xor    ebx,ebx
6500a821:	mov    DWORD PTR [esp+0x1c],esi
6500a825:	mov    DWORD PTR [esp+0x58],ecx
6500a829:	mov    DWORD PTR [esp+0x5c],edx
6500a82d:	mov    DWORD PTR [esp+0x60],eax
6500a831:	mov    BYTE PTR [esp+0x17],bl
6500a835:	xor    edi,edi
6500a837:	jmp    0x6500a840
6500a839:	lea    esp,[esp+0x0]
6500a840:	mov    DWORD PTR [esp+0x50],0xf
6500a848:	mov    DWORD PTR [esp+0x4c],ebx
6500a84c:	mov    BYTE PTR [esp+0x3c],bl
6500a850:	mov    DWORD PTR [esp+0x10090],ebx
6500a857:	mov    edx,DWORD PTR [esp+0x58]
6500a85b:	mov    eax,DWORD PTR [esp+0x5c]
6500a85f:	mov    ecx,DWORD PTR [esp+0x54]
6500a863:	mov    DWORD PTR [esp+0x70],eax
6500a867:	mov    eax,DWORD PTR [esp+0x100a8]
6500a86e:	mov    DWORD PTR [esp+0x68],ecx
6500a872:	mov    ecx,DWORD PTR [esp+0x60]
6500a876:	mov    DWORD PTR [esp+0x6c],edx
6500a87a:	mov    dl,BYTE PTR [esp+0x100ac]
6500a881:	push   eax
6500a882:	mov    DWORD PTR [esp+0x78],ecx
6500a886:	mov    DWORD PTR [esp+0x7c],eax
6500a88a:	mov    DWORD PTR [esp+0x80],edi
6500a891:	mov    BYTE PTR [esp+0x84],dl
6500a898:	call   ebp
6500a89a:	mov    DWORD PTR [esp+0x78],eax
6500a89e:	mov    eax,DWORD PTR [esp+0x7c]
6500a8a2:	push   eax
6500a8a3:	call   ebp
6500a8a5:	push   0x19
6500a8a7:	lea    ecx,[esp+0x6c]
6500a8ab:	mov    DWORD PTR [esp+0x80],eax
6500a8b2:	push   ecx
6500a8b3:	lea    eax,[esp+0x40]
6500a8b7:	call   0x6500a2d0
6500a8bc:	cmp    esi,ebx
6500a8be:	je     0x6500a8d2
6500a8c0:	mov    edx,DWORD PTR [esp+0x100a4]
6500a8c7:	push   edx
6500a8c8:	push   esi
6500a8c9:	lea    eax,[esp+0x40]
6500a8cd:	call   0x6500a2d0
6500a8d2:	cmp    DWORD PTR [esp+0x50],0x10
6500a8d7:	mov    eax,DWORD PTR [esp+0x3c]
6500a8db:	jae    0x6500a8e1
6500a8dd:	lea    eax,[esp+0x3c]
6500a8e1:	mov    ecx,DWORD PTR [esp+0x4c]
6500a8e5:	push   ecx
6500a8e6:	push   eax
6500a8e7:	lea    ecx,[esp+0x2c]
6500a8eb:	lea    ebx,[esp+0x38]
6500a8ef:	call   0x6500da70
6500a8f4:	mov    edx,DWORD PTR [eax]
6500a8f6:	mov    esi,edx
6500a8f8:	mov    DWORD PTR [eax],0x0
6500a8fe:	mov    DWORD PTR [esp+0x28],esi
6500a902:	mov    BYTE PTR [esp+0x10098],0x1
6500a90a:	mov    eax,DWORD PTR [esp+0x38]
6500a90e:	push   eax
6500a90f:	call   0x65011f02
6500a914:	add    esp,0xc
6500a917:	lea    ecx,[esp+0x34]
6500a91b:	push   0x0
6500a91d:	push   ecx
6500a91e:	mov    DWORD PTR [esp+0x3c],0x0
6500a926:	call   0x6500e4d0
6500a92b:	call   eax
6500a92d:	test   eax,eax
6500a92f:	je     0x6500a9be
6500a935:	mov    eax,DWORD PTR [esp+0x100b0]
6500a93c:	cmp    eax,0x1388
6500a941:	jb     0x6500a948
6500a943:	mov    eax,0x1388
6500a948:	mov    ecx,DWORD PTR [esp+0x1009c]
6500a94f:	push   eax
6500a950:	mov    eax,DWORD PTR [esp+0x28]
6500a954:	push   0xffff
6500a959:	lea    edx,[esp+0x8c]
6500a960:	push   edx
6500a961:	mov    edx,DWORD PTR [esp+0x24]
6500a965:	push   0x0
6500a967:	push   eax
6500a968:	mov    eax,DWORD PTR [edx]
6500a96a:	push   esi
6500a96b:	push   ecx
6500a96c:	push   eax
6500a96d:	call   0x6500dca0
6500a972:	call   eax
6500a974:	mov    ebx,eax
6500a976:	test   ebx,ebx
6500a978:	jne    0x6500a9c1
6500a97a:	push   esi
6500a97b:	call   0x65011f02
6500a980:	add    esp,0x4
6500a983:	cmp    BYTE PTR [esp+0x100b4],bl
6500a98a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a995:	je     0x6500a9e3
6500a997:	cmp    DWORD PTR [esp+0x50],0x10
6500a99c:	jb     0x6500a9ab
6500a99e:	mov    ecx,DWORD PTR [esp+0x3c]
6500a9a2:	push   ecx
6500a9a3:	call   0x65011f02
6500a9a8:	add    esp,0x4
6500a9ab:	add    edi,0x1
6500a9ae:	cmp    edi,0x5
6500a9b1:	je     0x6500a9f7
6500a9b3:	mov    esi,DWORD PTR [esp+0x1c]
6500a9b7:	xor    ebx,ebx
6500a9b9:	jmp    0x6500a840
6500a9be:	or     ebx,0xffffffff
6500a9c1:	push   esi
6500a9c2:	call   0x65011f02
6500a9c7:	add    esp,0x4
6500a9ca:	mov    DWORD PTR [esp+0x10090],0xffffffff
6500a9d5:	cmp    DWORD PTR [esp+0x50],0x10
6500a9da:	jb     0x6500a9f7
6500a9dc:	mov    edx,DWORD PTR [esp+0x3c]
6500a9e0:	push   edx
6500a9e1:	jmp    0x6500a9ef
6500a9e3:	cmp    DWORD PTR [esp+0x50],0x10
6500a9e8:	jb     0x6500a9f7
6500a9ea:	mov    eax,DWORD PTR [esp+0x3c]
6500a9ee:	push   eax
6500a9ef:	call   0x65011f02
6500a9f4:	add    esp,0x4
6500a9f7:	test   ebx,ebx
6500a9f9:	je     0x6500ab9f
6500a9ff:	mov    ax,WORD PTR [esp+0x90]
6500aa07:	test   ax,ax
6500aa0a:	je     0x6500ab93
6500aa10:	lea    ecx,[esp+0x24]
6500aa14:	push   ecx
6500aa15:	lea    edx,[esp+0xa4]
6500aa1c:	movzx  ebx,ax
6500aa1f:	push   edx
6500aa20:	lea    edi,[esp+0x24]
6500aa24:	call   0x6500dba0
6500aa29:	mov    ecx,DWORD PTR [eax]
6500aa2b:	mov    ebp,ecx
6500aa2d:	xor    ebx,ebx
6500aa2f:	mov    DWORD PTR [eax],ebx
6500aa31:	mov    DWORD PTR [esp+0x28],ebp
6500aa35:	mov    DWORD PTR [esp+0x10098],0x2
6500aa40:	mov    edx,DWORD PTR [esp+0x24]
6500aa44:	push   edx
6500aa45:	call   0x65011f02
6500aa4a:	add    esp,0xc
6500aa4d:	cmp    ebp,ebx
6500aa4f:	je     0x6500ab82
6500aa55:	mov    eax,DWORD PTR [ebp+0x10]
6500aa58:	push   eax
6500aa59:	call   DWORD PTR ds:0x650241c4
6500aa5f:	cmp    BYTE PTR [esp+0x100ac],bl
6500aa66:	mov    DWORD PTR [esp+0x18],eax
6500aa6a:	mov    DWORD PTR [ebp+0x10],eax
6500aa6d:	jne    0x6500aa7f
6500aa6f:	cmp    DWORD PTR [esp+0x100a8],ebx
6500aa76:	jle    0x6500aa7f
6500aa78:	mov    DWORD PTR [esp+0x100a8],ebx
6500aa7f:	mov    ecx,0x10
6500aa84:	lea    edx,[esp+0x54]
6500aa88:	mov    esi,ebp
6500aa8a:	lea    ebx,[ebx+0x0]
6500aa90:	mov    eax,DWORD PTR [esi]
6500aa92:	cmp    eax,DWORD PTR [edx]
6500aa94:	jne    0x6500aaa8
6500aa96:	sub    ecx,0x4
6500aa99:	add    edx,0x4
6500aa9c:	add    esi,0x4
6500aa9f:	cmp    ecx,0x4
6500aaa2:	jae    0x6500aa90
6500aaa4:	cmp    ecx,ebx
6500aaa6:	je     0x6500ab05
6500aaa8:	movzx  edi,BYTE PTR [esi]
6500aaab:	movzx  eax,BYTE PTR [edx]
6500aaae:	sub    edi,eax
6500aab0:	jne    0x6500aaf7
6500aab2:	sub    ecx,0x1
6500aab5:	add    edx,0x1
6500aab8:	add    esi,0x1
6500aabb:	cmp    ecx,ebx
6500aabd:	je     0x6500ab05
6500aabf:	movzx  edi,BYTE PTR [esi]
6500aac2:	movzx  eax,BYTE PTR [edx]
6500aac5:	sub    edi,eax
6500aac7:	jne    0x6500aaf7
6500aac9:	sub    ecx,0x1
6500aacc:	add    edx,0x1
6500aacf:	add    esi,0x1
6500aad2:	cmp    ecx,ebx
6500aad4:	je     0x6500ab05
6500aad6:	movzx  edi,BYTE PTR [esi]
6500aad9:	movzx  eax,BYTE PTR [edx]
6500aadc:	sub    edi,eax
6500aade:	jne    0x6500aaf7
6500aae0:	sub    ecx,0x1
6500aae3:	add    edx,0x1
6500aae6:	add    esi,0x1
6500aae9:	cmp    ecx,ebx
6500aaeb:	je     0x6500ab05
6500aaed:	movzx  edi,BYTE PTR [esi]
6500aaf0:	movzx  ecx,BYTE PTR [edx]
6500aaf3:	sub    edi,ecx
6500aaf5:	je     0x6500ab05
6500aaf7:	cmp    edi,ebx
6500aaf9:	mov    ecx,0x1
6500aafe:	jg     0x6500ab07
6500ab00:	or     ecx,0xffffffff
6500ab03:	jmp    0x6500ab07
6500ab05:	xor    ecx,ecx
6500ab07:	cmp    ecx,ebx
6500ab09:	jne    0x6500ab82
6500ab0b:	mov    edx,DWORD PTR [esp+0x100a8]
6500ab12:	cmp    DWORD PTR [esp+0x18],edx
6500ab16:	jne    0x6500ab82
6500ab18:	mov    al,BYTE PTR [ebp+0x14]
6500ab1b:	mov    ecx,DWORD PTR [esp+0x28]
6500ab1f:	mov    BYTE PTR [ecx],al
6500ab21:	mov    eax,DWORD PTR [esp+0x24]
6500ab25:	add    eax,0xffffffeb
6500ab28:	push   eax
6500ab29:	lea    edx,[ebp+0x15]
6500ab2c:	push   edx
6500ab2d:	lea    ecx,[esp+0x40]
6500ab31:	mov    DWORD PTR [esp+0x58],0xf
6500ab39:	mov    DWORD PTR [esp+0x54],ebx
6500ab3d:	mov    BYTE PTR [esp+0x44],bl
6500ab41:	call   0x65001860
6500ab46:	mov    ecx,DWORD PTR [esp+0x2c]
6500ab4a:	push   0xffffffff
6500ab4c:	push   ebx
6500ab4d:	lea    eax,[esp+0x40]
6500ab51:	push   eax
6500ab52:	mov    BYTE PTR [esp+0x1009c],0x3
6500ab5a:	call   0x65001780
6500ab5f:	cmp    DWORD PTR [esp+0x50],0x10
6500ab64:	jb     0x6500ab73
6500ab66:	mov    ecx,DWORD PTR [esp+0x3c]
6500ab6a:	push   ecx
6500ab6b:	call   0x65011f02
6500ab70:	add    esp,0x4
6500ab73:	push   ebp
6500ab74:	mov    bl,0x1
6500ab76:	call   0x65011f02
6500ab7b:	add    esp,0x4
6500ab7e:	mov    al,bl
6500ab80:	jmp    0x6500aba3
6500ab82:	mov    bl,BYTE PTR [esp+0x17]
6500ab86:	push   ebp
6500ab87:	call   0x65011f02
6500ab8c:	add    esp,0x4
6500ab8f:	mov    al,bl
6500ab91:	jmp    0x6500aba3
6500ab93:	cmp    BYTE PTR [esp+0x100ac],0x0
6500ab9b:	mov    al,0x1
6500ab9d:	jne    0x6500aba3
6500ab9f:	mov    al,BYTE PTR [esp+0x17]
6500aba3:	mov    ecx,DWORD PTR [esp+0x10088]
6500abaa:	mov    DWORD PTR fs:0x0,ecx
6500abb1:	pop    ecx
6500abb2:	pop    edi
6500abb3:	pop    esi
6500abb4:	pop    ebp
6500abb5:	pop    ebx
6500abb6:	mov    ecx,DWORD PTR [esp+0x10070]
6500abbd:	xor    ecx,esp
6500abbf:	call   0x6501275c
6500abc4:	add    esp,0x10080
6500abca:	ret    0x30
6500abcd:	int3   
6500abce:	int3   
6500abcf:	int3   
6500abd0:	push   0xffffffff
6500abd2:	push   0x650220fb
6500abd7:	mov    eax,fs:0x0
6500abdd:	push   eax
6500abde:	push   ecx
6500abdf:	push   esi
6500abe0:	mov    eax,ds:0x6502c09c
6500abe5:	xor    eax,esp
6500abe7:	push   eax
6500abe8:	lea    eax,[esp+0xc]
6500abec:	mov    fs:0x0,eax
6500abf2:	push   0xc
6500abf4:	call   0x6501229c
6500abf9:	mov    esi,eax
6500abfb:	add    esp,0x4
6500abfe:	mov    DWORD PTR [esp+0x8],esi
6500ac02:	test   esi,esi
6500ac04:	mov    DWORD PTR [esp+0x14],0x0
6500ac0c:	je     0x6500ac2a
6500ac0e:	mov    eax,DWORD PTR [esp+0x1c]
6500ac12:	push   eax
6500ac13:	mov    DWORD PTR [esi+0x4],0x0
6500ac1a:	mov    DWORD PTR [esi+0x8],0x1
6500ac21:	call   0x6501e6b0
6500ac26:	mov    DWORD PTR [esi],eax
6500ac28:	jmp    0x6500ac2c
6500ac2a:	xor    esi,esi
6500ac2c:	test   esi,esi
6500ac2e:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ac36:	mov    DWORD PTR [ebx],esi
6500ac38:	jne    0x6500ac44
6500ac3a:	push   0x8007000e
6500ac3f:	call   0x6501e6a0
6500ac44:	mov    eax,ebx
6500ac46:	mov    ecx,DWORD PTR [esp+0xc]
6500ac4a:	mov    DWORD PTR fs:0x0,ecx
6500ac51:	pop    ecx
6500ac52:	pop    esi
6500ac53:	add    esp,0x10
6500ac56:	ret    0x4
6500ac59:	int3   
6500ac5a:	int3   
6500ac5b:	int3   
6500ac5c:	int3   
6500ac5d:	int3   
6500ac5e:	int3   
6500ac5f:	int3   
6500ac60:	push   0xffffffff
6500ac62:	push   0x650220cb
6500ac67:	mov    eax,fs:0x0
6500ac6d:	push   eax
6500ac6e:	push   ebp
6500ac6f:	push   esi
6500ac70:	mov    eax,ds:0x6502c09c
6500ac75:	xor    eax,esp
6500ac77:	push   eax
6500ac78:	lea    eax,[esp+0xc]
6500ac7c:	mov    fs:0x0,eax
6500ac82:	mov    ebp,DWORD PTR [esp+0x1c]
6500ac86:	push   0xc
6500ac88:	call   0x6501229c
6500ac8d:	mov    esi,eax
6500ac8f:	add    esp,0x4
6500ac92:	mov    DWORD PTR [esp+0x1c],esi
6500ac96:	test   esi,esi
6500ac98:	mov    DWORD PTR [esp+0x14],0x0
6500aca0:	je     0x6500accd
6500aca2:	push   edi
6500aca3:	mov    DWORD PTR [esi+0x4],0x0
6500acaa:	mov    DWORD PTR [esi+0x8],0x1
6500acb1:	call   DWORD PTR ds:0x65024198
6500acb7:	test   eax,eax
6500acb9:	mov    DWORD PTR [esi],eax
6500acbb:	jne    0x6500accf
6500acbd:	test   edi,edi
6500acbf:	je     0x6500accf
6500acc1:	push   0x8007000e
6500acc6:	call   0x6501e6a0
6500accb:	jmp    0x6500accf
6500accd:	xor    esi,esi
6500accf:	test   esi,esi
6500acd1:	mov    DWORD PTR [esp+0x14],0xffffffff
6500acd9:	mov    DWORD PTR [ebp+0x0],esi
6500acdc:	jne    0x6500ace8
6500acde:	push   0x8007000e
6500ace3:	call   0x6501e6a0
6500ace8:	mov    eax,ebp
6500acea:	mov    ecx,DWORD PTR [esp+0xc]
6500acee:	mov    DWORD PTR fs:0x0,ecx
6500acf5:	pop    ecx
6500acf6:	pop    esi
6500acf7:	pop    ebp
6500acf8:	add    esp,0xc
6500acfb:	ret    0x4
6500acfe:	int3   
6500acff:	int3   
6500ad00:	push   esi
6500ad01:	mov    esi,DWORD PTR [edi]
6500ad03:	test   esi,esi
6500ad05:	je     0x6500ad45
6500ad07:	lea    eax,[esi+0x8]
6500ad0a:	push   eax
6500ad0b:	call   DWORD PTR ds:0x65024098
6500ad11:	test   eax,eax
6500ad13:	jne    0x6500ad3f
6500ad15:	test   esi,esi
6500ad17:	je     0x6500ad3f
6500ad19:	mov    eax,DWORD PTR [esi]
6500ad1b:	test   eax,eax
6500ad1d:	je     0x6500ad26
6500ad1f:	push   eax
6500ad20:	call   DWORD PTR ds:0x650241a0
6500ad26:	mov    eax,DWORD PTR [esi+0x4]
6500ad29:	test   eax,eax
6500ad2b:	je     0x6500ad36
6500ad2d:	push   eax
6500ad2e:	call   0x65012dda
6500ad33:	add    esp,0x4
6500ad36:	push   esi
6500ad37:	call   0x65011f02
6500ad3c:	add    esp,0x4
6500ad3f:	mov    DWORD PTR [edi],0x0
6500ad45:	pop    esi
6500ad46:	ret    
6500ad47:	int3   
6500ad48:	int3   
6500ad49:	int3   
6500ad4a:	int3   
6500ad4b:	int3   
6500ad4c:	int3   
6500ad4d:	int3   
6500ad4e:	int3   
6500ad4f:	int3   
6500ad50:	push   0xffffffff
6500ad52:	push   0x6502209b
6500ad57:	mov    eax,fs:0x0
6500ad5d:	push   eax
6500ad5e:	push   ebp
6500ad5f:	push   esi
6500ad60:	mov    eax,ds:0x6502c09c
6500ad65:	xor    eax,esp
6500ad67:	push   eax
6500ad68:	lea    eax,[esp+0xc]
6500ad6c:	mov    fs:0x0,eax
6500ad72:	mov    ebp,DWORD PTR [esp+0x1c]
6500ad76:	test   ebp,ebp
6500ad78:	je     0x6500ad8e
6500ad7a:	mov    eax,DWORD PTR [ebx]
6500ad7c:	test   eax,eax
6500ad7e:	je     0x6500ad84
6500ad80:	mov    eax,DWORD PTR [eax]
6500ad82:	jmp    0x6500ad86
6500ad84:	xor    eax,eax
6500ad86:	cmp    eax,ebp
6500ad88:	je     0x6500ae33
6500ad8e:	mov    esi,DWORD PTR [ebx]
6500ad90:	test   esi,esi
6500ad92:	je     0x6500add2
6500ad94:	lea    eax,[esi+0x8]
6500ad97:	push   eax
6500ad98:	call   DWORD PTR ds:0x65024098
6500ad9e:	test   eax,eax
6500ada0:	jne    0x6500adcc
6500ada2:	test   esi,esi
6500ada4:	je     0x6500adcc
6500ada6:	mov    eax,DWORD PTR [esi]
6500ada8:	test   eax,eax
6500adaa:	je     0x6500adb3
6500adac:	push   eax
6500adad:	call   DWORD PTR ds:0x650241a0
6500adb3:	mov    eax,DWORD PTR [esi+0x4]
6500adb6:	test   eax,eax
6500adb8:	je     0x6500adc3
6500adba:	push   eax
6500adbb:	call   0x65012dda
6500adc0:	add    esp,0x4
6500adc3:	push   esi
6500adc4:	call   0x65011f02
6500adc9:	add    esp,0x4
6500adcc:	mov    DWORD PTR [ebx],0x0
6500add2:	push   0xc
6500add4:	call   0x6501229c
6500add9:	mov    esi,eax
6500addb:	add    esp,0x4
6500adde:	mov    DWORD PTR [esp+0x1c],esi
6500ade2:	test   esi,esi
6500ade4:	mov    DWORD PTR [esp+0x14],0x0
6500adec:	je     0x6500ae19
6500adee:	push   ebp
6500adef:	mov    DWORD PTR [esi+0x4],0x0
6500adf6:	mov    DWORD PTR [esi+0x8],0x1
6500adfd:	call   DWORD PTR ds:0x65024198
6500ae03:	test   eax,eax
6500ae05:	mov    DWORD PTR [esi],eax
6500ae07:	jne    0x6500ae1b
6500ae09:	test   ebp,ebp
6500ae0b:	je     0x6500ae1b
6500ae0d:	push   0x8007000e
6500ae12:	call   0x6501e6a0
6500ae17:	jmp    0x6500ae1b
6500ae19:	xor    esi,esi
6500ae1b:	test   esi,esi
6500ae1d:	mov    DWORD PTR [esp+0x14],0xffffffff
6500ae25:	mov    DWORD PTR [ebx],esi
6500ae27:	jne    0x6500ae33
6500ae29:	push   0x8007000e
6500ae2e:	call   0x6501e6a0
6500ae33:	mov    eax,ebx
6500ae35:	mov    ecx,DWORD PTR [esp+0xc]
6500ae39:	mov    DWORD PTR fs:0x0,ecx
6500ae40:	pop    ecx
6500ae41:	pop    esi
6500ae42:	pop    ebp
6500ae43:	add    esp,0xc
6500ae46:	ret    0x4
6500ae49:	int3   
6500ae4a:	int3   
6500ae4b:	int3   
6500ae4c:	int3   
6500ae4d:	int3   
6500ae4e:	int3   
6500ae4f:	int3   
6500ae50:	push   0xffffffff
6500ae52:	push   0x6502212b
6500ae57:	mov    eax,fs:0x0
6500ae5d:	push   eax
6500ae5e:	push   ecx
6500ae5f:	push   esi
6500ae60:	push   edi
6500ae61:	mov    eax,ds:0x6502c09c
6500ae66:	xor    eax,esp
6500ae68:	push   eax
6500ae69:	lea    eax,[esp+0x10]
6500ae6d:	mov    fs:0x0,eax
6500ae73:	push   0xc
6500ae75:	call   0x6501229c
6500ae7a:	add    esp,0x4
6500ae7d:	mov    DWORD PTR [esp+0xc],eax
6500ae81:	test   eax,eax
6500ae83:	mov    DWORD PTR [esp+0x18],0x0
6500ae8b:	je     0x6500ae9e
6500ae8d:	mov    ecx,DWORD PTR [esp+0x20]
6500ae91:	push   ecx
6500ae92:	push   ebx
6500ae93:	mov    edi,eax
6500ae95:	call   0x6500afc0
6500ae9a:	mov    edi,eax
6500ae9c:	jmp    0x6500aea0
6500ae9e:	xor    edi,edi
6500aea0:	test   edi,edi
6500aea2:	mov    DWORD PTR [esp+0x18],0xffffffff
6500aeaa:	jne    0x6500aeb8
6500aeac:	push   0x8007000e
6500aeb1:	call   0x6501e6a0
6500aeb6:	jmp    0x6500aefe
6500aeb8:	mov    esi,DWORD PTR [ebx]
6500aeba:	test   esi,esi
6500aebc:	je     0x6500aefc
6500aebe:	lea    edx,[esi+0x8]
6500aec1:	push   edx
6500aec2:	call   DWORD PTR ds:0x65024098
6500aec8:	test   eax,eax
6500aeca:	jne    0x6500aef6
6500aecc:	test   esi,esi
6500aece:	je     0x6500aef6
6500aed0:	mov    eax,DWORD PTR [esi]
6500aed2:	test   eax,eax
6500aed4:	je     0x6500aedd
6500aed6:	push   eax
6500aed7:	call   DWORD PTR ds:0x650241a0
6500aedd:	mov    eax,DWORD PTR [esi+0x4]
6500aee0:	test   eax,eax
6500aee2:	je     0x6500aeed
6500aee4:	push   eax
6500aee5:	call   0x65012dda
6500aeea:	add    esp,0x4
6500aeed:	push   esi
6500aeee:	call   0x65011f02
6500aef3:	add    esp,0x4
6500aef6:	mov    DWORD PTR [ebx],0x0
6500aefc:	mov    DWORD PTR [ebx],edi
6500aefe:	mov    eax,ebx
6500af00:	mov    ecx,DWORD PTR [esp+0x10]
6500af04:	mov    DWORD PTR fs:0x0,ecx
6500af0b:	pop    ecx
6500af0c:	pop    edi
6500af0d:	pop    esi
6500af0e:	add    esp,0x10
6500af11:	ret    0x4
6500af14:	int3   
6500af15:	int3   
6500af16:	int3   
6500af17:	int3   
6500af18:	int3   
6500af19:	int3   
6500af1a:	int3   
6500af1b:	int3   
6500af1c:	int3   
6500af1d:	int3   
6500af1e:	int3   
6500af1f:	int3   
6500af20:	push   0xffffffff
6500af22:	push   0x650221d9
6500af27:	mov    eax,fs:0x0
6500af2d:	push   eax
6500af2e:	push   ecx
6500af2f:	push   ebx
6500af30:	mov    eax,ds:0x6502c09c
6500af35:	xor    eax,esp
6500af37:	push   eax
6500af38:	lea    eax,[esp+0xc]
6500af3c:	mov    fs:0x0,eax
6500af42:	mov    ebx,DWORD PTR [esp+0x20]
6500af46:	mov    eax,DWORD PTR [esp+0x1c]
6500af4a:	mov    DWORD PTR [esp+0x8],0x0
6500af52:	mov    eax,DWORD PTR [eax]
6500af54:	test   eax,eax
6500af56:	mov    DWORD PTR [ebx],eax
6500af58:	je     0x6500af64
6500af5a:	add    eax,0x8
6500af5d:	push   eax
6500af5e:	call   DWORD PTR ds:0x65024020
6500af64:	mov    ecx,DWORD PTR [esp+0x24]
6500af68:	mov    DWORD PTR [esp+0x14],0x0
6500af70:	push   ecx
6500af71:	mov    DWORD PTR [esp+0xc],0x1
6500af79:	call   0x6500ae50
6500af7e:	mov    eax,ebx
6500af80:	mov    ecx,DWORD PTR [esp+0xc]
6500af84:	mov    DWORD PTR fs:0x0,ecx
6500af8b:	pop    ecx
6500af8c:	pop    ebx
6500af8d:	add    esp,0x10
6500af90:	ret    0xc
6500af93:	int3   
6500af94:	int3   
6500af95:	int3   
6500af96:	int3   
6500af97:	int3   
6500af98:	int3   
6500af99:	int3   
6500af9a:	int3   
6500af9b:	int3   
6500af9c:	int3   
6500af9d:	int3   
6500af9e:	int3   
6500af9f:	int3   
6500afa0:	mov    eax,DWORD PTR [eax]
6500afa2:	test   eax,eax
6500afa4:	je     0x6500afa9
6500afa6:	mov    eax,DWORD PTR [eax]
6500afa8:	ret    
6500afa9:	xor    eax,eax
6500afab:	ret    
6500afac:	int3   
6500afad:	int3   
6500afae:	int3   
6500afaf:	int3   
6500afb0:	int3   
6500afb1:	int3   
6500afb2:	int3   
6500afb3:	int3   
6500afb4:	int3   
6500afb5:	int3   
6500afb6:	int3   
6500afb7:	int3   
6500afb8:	int3   
6500afb9:	int3   
6500afba:	int3   
6500afbb:	int3   
6500afbc:	int3   
6500afbd:	int3   
6500afbe:	int3   
6500afbf:	int3   
6500afc0:	mov    eax,DWORD PTR [esp+0x4]
6500afc4:	push   ebx
6500afc5:	xor    ebx,ebx
6500afc7:	mov    DWORD PTR [edi+0x4],ebx
6500afca:	mov    DWORD PTR [edi+0x8],0x1
6500afd1:	mov    eax,DWORD PTR [eax]
6500afd3:	cmp    eax,ebx
6500afd5:	push   ebp
6500afd6:	push   esi
6500afd7:	mov    esi,DWORD PTR ds:0x6502418c
6500afdd:	je     0x6500afec
6500afdf:	mov    eax,DWORD PTR [eax]
6500afe1:	cmp    eax,ebx
6500afe3:	je     0x6500afec
6500afe5:	push   eax
6500afe6:	call   esi
6500afe8:	mov    ebp,eax
6500afea:	jmp    0x6500afee
6500afec:	xor    ebp,ebp
6500afee:	mov    ecx,DWORD PTR [esp+0x14]
6500aff2:	mov    eax,DWORD PTR [ecx]
6500aff4:	cmp    eax,ebx
6500aff6:	je     0x6500b003
6500aff8:	mov    eax,DWORD PTR [eax]
6500affa:	cmp    eax,ebx
6500affc:	je     0x6500b003
6500affe:	push   eax
6500afff:	call   esi
6500b001:	mov    ebx,eax
6500b003:	lea    esi,[ebx+ebp*1]
6500b006:	add    esi,esi
6500b008:	push   esi
6500b009:	push   0x0
6500b00b:	call   DWORD PTR ds:0x6502419c
6500b011:	test   eax,eax
6500b013:	mov    DWORD PTR [edi],eax
6500b015:	jne    0x6500b029
6500b017:	push   0x8007000e
6500b01c:	call   0x6501e6a0
6500b021:	pop    esi
6500b022:	pop    ebp
6500b023:	mov    eax,edi
6500b025:	pop    ebx
6500b026:	ret    0x8
6500b029:	mov    edx,DWORD PTR [esp+0x10]
6500b02d:	mov    ecx,DWORD PTR [edx]
6500b02f:	test   ecx,ecx
6500b031:	je     0x6500b04c
6500b033:	mov    ecx,DWORD PTR [ecx]
6500b035:	test   ecx,ecx
6500b037:	je     0x6500b04c
6500b039:	lea    edx,[ebp+ebp*1+0x2]
6500b03d:	push   edx
6500b03e:	push   ecx
6500b03f:	add    esi,0x2
6500b042:	push   esi
6500b043:	push   eax
6500b044:	call   0x65012073
6500b049:	add    esp,0x10
6500b04c:	mov    eax,DWORD PTR [esp+0x14]
6500b050:	mov    eax,DWORD PTR [eax]
6500b052:	test   eax,eax
6500b054:	je     0x6500b071
6500b056:	mov    ecx,DWORD PTR [eax]
6500b058:	test   ecx,ecx
6500b05a:	je     0x6500b071
6500b05c:	lea    eax,[ebx+ebx*1+0x2]
6500b060:	push   eax
6500b061:	push   ecx
6500b062:	mov    ecx,DWORD PTR [edi]
6500b064:	push   eax
6500b065:	lea    edx,[ecx+ebp*2]
6500b068:	push   edx
6500b069:	call   0x65012073
6500b06e:	add    esp,0x10
6500b071:	pop    esi
6500b072:	pop    ebp
6500b073:	mov    eax,edi
6500b075:	pop    ebx
6500b076:	ret    0x8
6500b079:	int3   
6500b07a:	int3   
6500b07b:	int3   
6500b07c:	int3   
6500b07d:	int3   
6500b07e:	int3   
6500b07f:	int3   
6500b080:	push   ecx
6500b081:	call   DWORD PTR ds:0x650241a4
6500b087:	ret    
6500b088:	int3   
6500b089:	int3   
6500b08a:	int3   
6500b08b:	int3   
6500b08c:	int3   
6500b08d:	int3   
6500b08e:	int3   
6500b08f:	int3   
6500b090:	push   0xffffffff
6500b092:	push   0x65022198
6500b097:	mov    eax,fs:0x0
6500b09d:	push   eax
6500b09e:	sub    esp,0x18
6500b0a1:	push   ebx
6500b0a2:	mov    eax,ds:0x6502c09c
6500b0a7:	xor    eax,esp
6500b0a9:	push   eax
6500b0aa:	lea    eax,[esp+0x20]
6500b0ae:	mov    fs:0x0,eax
6500b0b4:	mov    ebx,ecx
6500b0b6:	cmp    WORD PTR [esi],0x8
6500b0ba:	jne    0x6500b0d8
6500b0bc:	mov    eax,DWORD PTR [esi+0x8]
6500b0bf:	push   eax
6500b0c0:	call   0x6500ad50
6500b0c5:	mov    eax,ebx
6500b0c7:	mov    ecx,DWORD PTR [esp+0x20]
6500b0cb:	mov    DWORD PTR fs:0x0,ecx
6500b0d2:	pop    ecx
6500b0d3:	pop    ebx
6500b0d4:	add    esp,0x24
6500b0d7:	ret    
6500b0d8:	lea    ecx,[esp+0xc]
6500b0dc:	push   ecx
6500b0dd:	call   DWORD PTR ds:0x65024190
6500b0e3:	lea    edx,[esp+0xc]
6500b0e7:	cmp    edx,esi
6500b0e9:	mov    DWORD PTR [esp+0x28],0x0
6500b0f1:	jne    0x6500b0fb
6500b0f3:	cmp    WORD PTR [esp+0xc],0x8
6500b0f9:	je     0x6500b115
6500b0fb:	push   0x8
6500b0fd:	push   0x0
6500b0ff:	push   esi
6500b100:	lea    eax,[esp+0x18]
6500b104:	push   eax
6500b105:	call   DWORD PTR ds:0x65024194
6500b10b:	test   eax,eax
6500b10d:	jge    0x6500b115
6500b10f:	push   eax
6500b110:	call   0x6501e6a0
6500b115:	mov    ecx,DWORD PTR [esp+0x14]
6500b119:	push   ecx
6500b11a:	call   0x6500ad50
6500b11f:	lea    edx,[esp+0xc]
6500b123:	push   edx
6500b124:	call   DWORD PTR ds:0x650241a4
6500b12a:	mov    eax,ebx
6500b12c:	mov    ecx,DWORD PTR [esp+0x20]
6500b130:	mov    DWORD PTR fs:0x0,ecx
6500b137:	pop    ecx
6500b138:	pop    ebx
6500b139:	add    esp,0x24
6500b13c:	ret    
6500b13d:	int3   
6500b13e:	int3   
6500b13f:	int3   
6500b140:	sub    esp,0x8
6500b143:	test   eax,eax
6500b145:	mov    BYTE PTR [edi],0x0
6500b148:	jle    0x6500b29e
6500b14e:	push   ebx
6500b14f:	push   ebp
6500b150:	push   esi
6500b151:	xor    esi,esi
6500b153:	add    eax,ecx
6500b155:	mov    BYTE PTR [esp+0xf],0x0
6500b15a:	mov    BYTE PTR [edi],0x0
6500b15d:	mov    DWORD PTR [esp+0x10],eax
6500b161:	mov    ebp,eax
6500b163:	mov    al,BYTE PTR [ebp+0x0]
6500b166:	test   al,al
6500b168:	je     0x6500b214
6500b16e:	movsx  edx,al
6500b171:	push   edx
6500b172:	call   0x65013550
6500b177:	mov    bl,al
6500b179:	movsx  eax,bl
6500b17c:	push   eax
6500b17d:	call   0x65013391
6500b182:	add    esp,0x8
6500b185:	test   eax,eax
6500b187:	je     0x6500b18b
6500b189:	mov    bl,0x30
6500b18b:	shl    BYTE PTR [esi+edi*1],0x4
6500b18f:	add    BYTE PTR [esp+0xf],0x1
6500b194:	mov    cl,BYTE PTR [esi+edi*1]
6500b197:	mov    al,bl
6500b199:	sub    al,0x30
6500b19b:	cmp    al,0x9
6500b19d:	ja     0x6500b1a6
6500b19f:	or     al,cl
6500b1a1:	mov    BYTE PTR [esi+edi*1],al
6500b1a4:	jmp    0x6500b1b8
6500b1a6:	mov    dl,bl
6500b1a8:	sub    dl,0x61
6500b1ab:	cmp    dl,0x5
6500b1ae:	ja     0x6500b1ea
6500b1b0:	sub    bl,0x57
6500b1b3:	or     bl,cl
6500b1b5:	mov    BYTE PTR [esi+edi*1],bl
6500b1b8:	cmp    BYTE PTR [esp+0xf],0x2
6500b1bd:	jne    0x6500b1e2
6500b1bf:	mov    al,BYTE PTR [esi+edi*1]
6500b1c2:	test   al,al
6500b1c4:	je     0x6500b1d6
6500b1c6:	movsx  eax,al
6500b1c9:	push   eax
6500b1ca:	call   0x6501340e
6500b1cf:	add    esp,0x4
6500b1d2:	test   eax,eax
6500b1d4:	je     0x6500b1ea
6500b1d6:	add    esi,0x1
6500b1d9:	mov    BYTE PTR [esp+0xf],0x0
6500b1de:	mov    BYTE PTR [esi+edi*1],0x0
6500b1e2:	add    ebp,0x1
6500b1e5:	jmp    0x6500b163
6500b1ea:	mov    ebp,DWORD PTR [esp+0x10]
6500b1ee:	xor    esi,esi
6500b1f0:	mov    bl,BYTE PTR [ebp+0x0]
6500b1f3:	test   bl,bl
6500b1f5:	je     0x6500b214
6500b1f7:	movsx  ecx,bl
6500b1fa:	push   ecx
6500b1fb:	call   0x6501340e
6500b200:	add    esp,0x4
6500b203:	test   eax,eax
6500b205:	je     0x6500b212
6500b207:	mov    BYTE PTR [esi+edi*1],bl
6500b20a:	add    esi,0x1
6500b20d:	add    ebp,0x1
6500b210:	jmp    0x6500b1f0
6500b212:	xor    esi,esi
6500b214:	cmp    DWORD PTR [esp+0x18],0x0
6500b219:	mov    BYTE PTR [esi+edi*1],0x0
6500b21d:	je     0x6500b242
6500b21f:	test   esi,esi
6500b221:	jle    0x6500b242
6500b223:	add    esi,0xffffffff
6500b226:	shr    esi,1
6500b228:	lea    eax,[edi+0x1]
6500b22b:	add    esi,0x1
6500b22e:	mov    edi,edi
6500b230:	mov    cl,BYTE PTR [eax-0x1]
6500b233:	mov    dl,BYTE PTR [eax]
6500b235:	mov    BYTE PTR [eax-0x1],dl
6500b238:	mov    BYTE PTR [eax],cl
6500b23a:	add    eax,0x2
6500b23d:	sub    esi,0x1
6500b240:	jne    0x6500b230
6500b242:	or     ebx,0xffffffff
6500b245:	or     ebp,ebx
6500b247:	xor    esi,esi
6500b249:	cmp    BYTE PTR [edi],0x0
6500b24c:	je     0x6500b29b
6500b24e:	mov    edi,edi
6500b250:	movsx  eax,BYTE PTR [esi+edi*1]
6500b254:	push   eax
6500b255:	call   0x65013391
6500b25a:	add    esp,0x4
6500b25d:	test   eax,eax
6500b25f:	jne    0x6500b269
6500b261:	test   ebp,ebp
6500b263:	jge    0x6500b267
6500b265:	mov    ebp,esi
6500b267:	mov    ebx,esi
6500b269:	add    esi,0x1
6500b26c:	cmp    BYTE PTR [esi+edi*1],0x0
6500b270:	jne    0x6500b250
6500b272:	test   ebp,ebp
6500b274:	jl     0x6500b29b
6500b276:	test   ebx,ebx
6500b278:	jl     0x6500b29b
6500b27a:	cmp    ebp,ebx
6500b27c:	mov    eax,ebp
6500b27e:	jg     0x6500b295
6500b280:	mov    edx,edi
6500b282:	sub    edx,ebp
6500b284:	mov    cl,BYTE PTR [eax+edi*1]
6500b287:	test   cl,cl
6500b289:	je     0x6500b295
6500b28b:	mov    BYTE PTR [edx+eax*1],cl
6500b28e:	add    eax,0x1
6500b291:	cmp    eax,ebx
6500b293:	jle    0x6500b284
6500b295:	sub    eax,ebp
6500b297:	mov    BYTE PTR [eax+edi*1],0x0
6500b29b:	pop    esi
6500b29c:	pop    ebp
6500b29d:	pop    ebx
6500b29e:	mov    eax,edi
6500b2a0:	add    esp,0x8
6500b2a3:	ret    
6500b2a4:	int3   
6500b2a5:	int3   
6500b2a6:	int3   
6500b2a7:	int3   
6500b2a8:	int3   
6500b2a9:	int3   
6500b2aa:	int3   
6500b2ab:	int3   
6500b2ac:	int3   
6500b2ad:	int3   
6500b2ae:	int3   
6500b2af:	int3   
6500b2b0:	push   ebp
6500b2b1:	mov    ebp,esp
6500b2b3:	and    esp,0xfffffff8
6500b2b6:	mov    eax,0x2f34
6500b2bb:	call   0x65017fd0
6500b2c0:	mov    eax,ds:0x6502c09c
6500b2c5:	xor    eax,esp
6500b2c7:	mov    DWORD PTR [esp+0x2f30],eax
6500b2ce:	push   ebx
6500b2cf:	mov    eax,DWORD PTR [ebp+0x8]
6500b2d2:	mov    ecx,DWORD PTR [ebp+0xc]
6500b2d5:	mov    ebx,DWORD PTR [ebp+0x10]
6500b2d8:	push   esi
6500b2d9:	push   edi
6500b2da:	xor    edi,edi
6500b2dc:	push   edi
6500b2dd:	push   edi
6500b2de:	push   0x3
6500b2e0:	push   edi
6500b2e1:	push   0x3
6500b2e3:	push   edi
6500b2e4:	push   0x65028178
6500b2e9:	push   0x12
6500b2eb:	push   0x6502819c
6500b2f0:	mov    DWORD PTR [esp+0x3c],eax
6500b2f4:	mov    DWORD PTR [esp+0x40],ecx
6500b2f8:	mov    BYTE PTR [esp+0x37],0x0
6500b2fd:	call   0x65006d00
6500b302:	add    esp,0xc
6500b305:	push   eax
6500b306:	call   0x6500e120
6500b30b:	call   eax
6500b30d:	mov    esi,eax
6500b30f:	cmp    esi,0xffffffff
6500b312:	jne    0x6500b32b
6500b314:	xor    al,al
6500b316:	pop    edi
6500b317:	pop    esi
6500b318:	pop    ebx
6500b319:	mov    ecx,DWORD PTR [esp+0x2f30]
6500b320:	xor    ecx,esp
6500b322:	call   0x6501275c
6500b327:	mov    esp,ebp
6500b329:	pop    ebp
6500b32a:	ret    
6500b32b:	xor    eax,eax
6500b32d:	push   0x2710
6500b332:	lea    edx,[esp+0x82c]
6500b339:	push   edi
6500b33a:	mov    DWORD PTR [esp+0x2c],eax
6500b33e:	mov    DWORD PTR [esp+0x30],eax
6500b342:	push   edx
6500b343:	mov    DWORD PTR [esp+0x20],edi
6500b347:	mov    DWORD PTR [esp+0x38],eax
6500b34b:	mov    DWORD PTR [esp+0x30],edi
6500b34f:	mov    DWORD PTR [esp+0x34],edi
6500b353:	call   0x65012de0
6500b358:	add    esp,0xc
6500b35b:	push   edi
6500b35c:	lea    eax,[esp+0x18]
6500b360:	push   eax
6500b361:	push   0x2710
6500b366:	lea    ecx,[esp+0x834]
6500b36d:	push   ecx
6500b36e:	push   0xc
6500b370:	lea    edx,[esp+0x38]
6500b374:	push   edx
6500b375:	push   0x2d1400
6500b37a:	push   esi
6500b37b:	call   0x6500e450
6500b380:	call   eax
6500b382:	test   eax,eax
6500b384:	je     0x6500b3e4
6500b386:	mov    eax,DWORD PTR [esp+0x838]
6500b38d:	push   edi
6500b38e:	lea    edi,[esp+0x444]
6500b395:	lea    ecx,[esp+0x82c]
6500b39c:	call   0x6500b140
6500b3a1:	mov    eax,DWORD PTR [esp+0x844]
6500b3a8:	add    esp,0x4
6500b3ab:	push   0x1
6500b3ad:	lea    edi,[esp+0x5c]
6500b3b1:	lea    ecx,[esp+0x82c]
6500b3b8:	call   0x6500b140
6500b3bd:	mov    ecx,DWORD PTR [esp+0x1c]
6500b3c1:	add    esp,0x4
6500b3c4:	mov    eax,edi
6500b3c6:	push   eax
6500b3c7:	call   0x650027c0
6500b3cc:	lea    ecx,[esp+0x440]
6500b3d3:	push   ecx
6500b3d4:	mov    ecx,DWORD PTR [esp+0x20]
6500b3d8:	call   0x650027c0
6500b3dd:	mov    BYTE PTR [esp+0x13],0x1
6500b3e2:	xor    edi,edi
6500b3e4:	xor    eax,eax
6500b3e6:	push   edi
6500b3e7:	lea    edx,[esp+0x24]
6500b3eb:	push   edx
6500b3ec:	push   0x28
6500b3ee:	mov    DWORD PTR [esp+0x40],eax
6500b3f2:	mov    DWORD PTR [esp+0x44],eax
6500b3f6:	mov    DWORD PTR [esp+0x48],eax
6500b3fa:	mov    DWORD PTR [esp+0x4c],eax
6500b3fe:	mov    DWORD PTR [esp+0x50],eax
6500b402:	mov    DWORD PTR [esp+0x54],eax
6500b406:	mov    DWORD PTR [esp+0x58],eax
6500b40a:	mov    DWORD PTR [esp+0x5c],eax
6500b40e:	mov    DWORD PTR [esp+0x60],eax
6500b412:	lea    eax,[esp+0x3c]
6500b416:	push   eax
6500b417:	push   edi
6500b418:	push   edi
6500b419:	push   0x700a0
6500b41e:	push   esi
6500b41f:	mov    DWORD PTR [esp+0x50],edi
6500b423:	mov    DWORD PTR [ebx],edi
6500b425:	mov    DWORD PTR [ebx+0x4],edi
6500b428:	call   0x6500e450
6500b42d:	call   eax
6500b42f:	test   eax,eax
6500b431:	je     0x6500b440
6500b433:	mov    ecx,DWORD PTR [esp+0x48]
6500b437:	mov    edx,DWORD PTR [esp+0x4c]
6500b43b:	mov    DWORD PTR [ebx],ecx
6500b43d:	mov    DWORD PTR [ebx+0x4],edx
6500b440:	push   esi
6500b441:	call   DWORD PTR ds:0x65024040
6500b447:	mov    ecx,DWORD PTR [esp+0x2f3c]
6500b44e:	mov    al,BYTE PTR [esp+0x13]
6500b452:	pop    edi
6500b453:	pop    esi
6500b454:	pop    ebx
6500b455:	xor    ecx,esp
6500b457:	call   0x6501275c
6500b45c:	mov    esp,ebp
6500b45e:	pop    ebp
6500b45f:	ret    
6500b460:	push   ebp
6500b461:	lea    ebp,[esp-0x28c]
6500b468:	sub    esp,0x28c
6500b46e:	push   0xffffffff
6500b470:	push   0x65022ab0
6500b475:	mov    eax,fs:0x0
6500b47b:	push   eax
6500b47c:	sub    esp,0x34
6500b47f:	mov    eax,ds:0x6502c09c
6500b484:	xor    eax,ebp
6500b486:	mov    DWORD PTR [ebp+0x288],eax
6500b48c:	push   ebx
6500b48d:	push   esi
6500b48e:	push   edi
6500b48f:	push   eax
6500b490:	lea    eax,[ebp-0xc]
6500b493:	mov    fs:0x0,eax
6500b499:	mov    eax,DWORD PTR [ebp+0x294]
6500b49f:	lea    ecx,[ebp-0x14]
6500b4a2:	push   ecx
6500b4a3:	lea    edx,[ebp+0x0]
6500b4a6:	push   edx
6500b4a7:	mov    DWORD PTR [ebp-0x20],eax
6500b4aa:	mov    DWORD PTR [ebp-0x14],0x1
6500b4b1:	call   0x6500de40
6500b4b6:	call   eax
6500b4b8:	cmp    eax,0x6f
6500b4bb:	jne    0x6500b691
6500b4c1:	mov    eax,DWORD PTR [ebp-0x14]
6500b4c4:	push   eax
6500b4c5:	call   0x65011efd
6500b4ca:	mov    ebx,eax
6500b4cc:	add    esp,0x4
6500b4cf:	mov    DWORD PTR [ebp-0x24],ebx
6500b4d2:	lea    ecx,[ebp-0x14]
6500b4d5:	push   ecx
6500b4d6:	push   ebx
6500b4d7:	mov    DWORD PTR [ebp-0x4],0x0
6500b4de:	call   0x6500de40
6500b4e3:	call   eax
6500b4e5:	test   eax,eax
6500b4e7:	je     0x6500b4ef
6500b4e9:	push   ebx
6500b4ea:	jmp    0x6500b689
6500b4ef:	call   DWORD PTR ds:0x6502c06c
6500b4f5:	mov    edx,DWORD PTR ds:0x6502d560
6500b4fb:	mov    DWORD PTR [ebp-0x1c],eax
6500b4fe:	mov    eax,DWORD PTR [edx+0xc]
6500b501:	mov    ecx,0x6502d560
6500b506:	call   eax
6500b508:	lea    edi,[eax+0x10]
6500b50b:	mov    DWORD PTR [ebp-0x10],edi
6500b50e:	xor    esi,esi
6500b510:	mov    BYTE PTR [ebp-0x4],0x1
6500b514:	cmp    DWORD PTR [ebx+0x190],esi
6500b51a:	je     0x6500b5a2
6500b520:	mov    edx,DWORD PTR ds:0x6502d560
6500b526:	mov    eax,DWORD PTR [edx+0xc]
6500b529:	mov    ecx,0x6502d560
6500b52e:	call   eax
6500b530:	add    eax,0x10
6500b533:	mov    DWORD PTR [ebp-0x18],eax
6500b536:	mov    BYTE PTR [ebp-0x4],0x2
6500b53a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6500b542:	push   ecx
6500b543:	push   0x650281c4
6500b548:	push   0x4
6500b54a:	push   0x650281f0
6500b54f:	call   0x65006d00
6500b554:	add    esp,0xc
6500b557:	push   eax
6500b558:	lea    edx,[ebp-0x18]
6500b55b:	push   edx
6500b55c:	call   0x65001d40
6500b561:	mov    edi,DWORD PTR [ebp-0x18]
6500b564:	mov    eax,DWORD PTR [edi-0xc]
6500b567:	add    esp,0xc
6500b56a:	push   eax
6500b56b:	push   edi
6500b56c:	lea    ecx,[ebp-0x10]
6500b56f:	call   0x650029a0
6500b574:	lea    eax,[edi-0x10]
6500b577:	mov    BYTE PTR [ebp-0x4],0x1
6500b57b:	lea    ecx,[eax+0xc]
6500b57e:	or     edx,0xffffffff
6500b581:	lock xadd DWORD PTR [ecx],edx
6500b585:	dec    edx
6500b586:	test   edx,edx
6500b588:	jg     0x6500b594
6500b58a:	mov    ecx,DWORD PTR [eax]
6500b58c:	mov    edx,DWORD PTR [ecx]
6500b58e:	push   eax
6500b58f:	mov    eax,DWORD PTR [edx+0x4]
6500b592:	call   eax
6500b594:	add    esi,0x1
6500b597:	cmp    esi,DWORD PTR [ebx+0x190]
6500b59d:	jne    0x6500b520
6500b59f:	mov    edi,DWORD PTR [ebp-0x10]
6500b5a2:	cmp    DWORD PTR [edi-0x4],0x1
6500b5a6:	jle    0x6500b5b7
6500b5a8:	mov    ecx,DWORD PTR [edi-0xc]
6500b5ab:	push   ecx
6500b5ac:	lea    ecx,[ebp-0x10]
6500b5af:	call   0x65001950
6500b5b4:	mov    edi,DWORD PTR [ebp-0x10]
6500b5b7:	test   edi,edi
6500b5b9:	jne    0x6500b5bf
6500b5bb:	xor    esi,esi
6500b5bd:	jmp    0x6500b60d
6500b5bf:	push   edi
6500b5c0:	call   DWORD PTR ds:0x65024050
6500b5c6:	add    eax,0x1
6500b5c9:	cmp    eax,0x3fffffff
6500b5ce:	jg     0x6500b609
6500b5d0:	lea    edi,[eax+eax*1]
6500b5d3:	mov    eax,edi
6500b5d5:	call   0x65012e60
6500b5da:	mov    esi,esp
6500b5dc:	test   esi,esi
6500b5de:	je     0x6500b606
6500b5e0:	mov    edx,DWORD PTR [ebp-0x10]
6500b5e3:	mov    eax,DWORD PTR [ebp-0x1c]
6500b5e6:	push   0x0
6500b5e8:	push   0x0
6500b5ea:	push   edi
6500b5eb:	push   esi
6500b5ec:	push   0xffffffff
6500b5ee:	push   edx
6500b5ef:	push   0x0
6500b5f1:	push   eax
6500b5f2:	mov    BYTE PTR [esi],0x0
6500b5f5:	call   DWORD PTR ds:0x65024028
6500b5fb:	mov    edi,DWORD PTR [ebp-0x10]
6500b5fe:	neg    eax
6500b600:	sbb    eax,eax
6500b602:	and    eax,esi
6500b604:	jmp    0x6500b60b
6500b606:	mov    edi,DWORD PTR [ebp-0x10]
6500b609:	xor    eax,eax
6500b60b:	mov    esi,eax
6500b60d:	mov    eax,esi
6500b60f:	mov    DWORD PTR [ebp-0x28],0xf
6500b616:	mov    DWORD PTR [ebp-0x2c],0x0
6500b61d:	mov    BYTE PTR [ebp-0x3c],0x0
6500b621:	lea    edx,[eax+0x1]
6500b624:	mov    cl,BYTE PTR [eax]
6500b626:	add    eax,0x1
6500b629:	test   cl,cl
6500b62b:	jne    0x6500b624
6500b62d:	sub    eax,edx
6500b62f:	push   eax
6500b630:	push   esi
6500b631:	lea    ecx,[ebp-0x40]
6500b634:	call   0x65001860
6500b639:	mov    esi,DWORD PTR [ebp-0x20]
6500b63c:	lea    ecx,[ebp-0x40]
6500b63f:	push   ecx
6500b640:	mov    BYTE PTR [ebp-0x4],0x3
6500b644:	call   0x6500bbb0
6500b649:	cmp    DWORD PTR [ebp-0x28],0x10
6500b64d:	jb     0x6500b65b
6500b64f:	mov    edx,DWORD PTR [ebp-0x3c]
6500b652:	push   edx
6500b653:	call   0x65011f02
6500b658:	add    esp,0x4
6500b65b:	mov    ebx,DWORD PTR [ebx]
6500b65d:	lea    eax,[edi-0x10]
6500b660:	mov    BYTE PTR [ebp-0x4],0x0
6500b664:	lea    ecx,[eax+0xc]
6500b667:	or     edx,0xffffffff
6500b66a:	lock xadd DWORD PTR [ecx],edx
6500b66e:	dec    edx
6500b66f:	test   edx,edx
6500b671:	jg     0x6500b67d
6500b673:	mov    ecx,DWORD PTR [eax]
6500b675:	mov    edx,DWORD PTR [ecx]
6500b677:	push   eax
6500b678:	mov    eax,DWORD PTR [edx+0x4]
6500b67b:	call   eax
6500b67d:	test   ebx,ebx
6500b67f:	jne    0x6500b4ef
6500b685:	mov    ecx,DWORD PTR [ebp-0x24]
6500b688:	push   ecx
6500b689:	call   0x65011f02
6500b68e:	add    esp,0x4
6500b691:	lea    esp,[ebp-0x50]
6500b694:	mov    ecx,DWORD PTR [ebp-0xc]
6500b697:	mov    DWORD PTR fs:0x0,ecx
6500b69e:	pop    ecx
6500b69f:	pop    edi
6500b6a0:	pop    esi
6500b6a1:	pop    ebx
6500b6a2:	mov    ecx,DWORD PTR [ebp+0x288]
6500b6a8:	xor    ecx,ebp
6500b6aa:	call   0x6501275c
6500b6af:	add    ebp,0x28c
6500b6b5:	mov    esp,ebp
6500b6b7:	pop    ebp
6500b6b8:	ret    
6500b6b9:	int3   
6500b6ba:	int3   
6500b6bb:	int3   
6500b6bc:	int3   
6500b6bd:	int3   
6500b6be:	int3   
6500b6bf:	int3   
6500b6c0:	push   0xffffffff
6500b6c2:	push   0x65022a70
6500b6c7:	mov    eax,fs:0x0
6500b6cd:	push   eax
6500b6ce:	sub    esp,0x50
6500b6d1:	push   ebx
6500b6d2:	push   ebp
6500b6d3:	push   esi
6500b6d4:	push   edi
6500b6d5:	mov    eax,ds:0x6502c09c
6500b6da:	xor    eax,esp
6500b6dc:	push   eax
6500b6dd:	lea    eax,[esp+0x64]
6500b6e1:	mov    fs:0x0,eax
6500b6e7:	mov    ebp,DWORD PTR [esp+0x74]
6500b6eb:	lea    eax,[esp+0x18]
6500b6ef:	xor    ebx,ebx
6500b6f1:	push   eax
6500b6f2:	mov    edi,0x65026614
6500b6f7:	mov    DWORD PTR [esp+0x3c],ebx
6500b6fb:	call   0x6500ac60
6500b700:	push   ebx
6500b701:	push   ebx
6500b702:	mov    DWORD PTR [esp+0x74],ebx
6500b706:	call   DWORD PTR ds:0x650241d0
6500b70c:	test   eax,eax
6500b70e:	jge    0x6500b763
6500b710:	mov    esi,DWORD PTR [esp+0x18]
6500b714:	cmp    esi,ebx
6500b716:	mov    DWORD PTR [ebp+0x0],esi
6500b719:	je     0x6500ba03
6500b71f:	lea    edi,[esi+0x8]
6500b722:	push   edi
6500b723:	call   DWORD PTR ds:0x65024020
6500b729:	push   edi
6500b72a:	call   DWORD PTR ds:0x65024098
6500b730:	test   eax,eax
6500b732:	jne    0x6500ba03
6500b738:	mov    eax,DWORD PTR [esi]
6500b73a:	cmp    eax,ebx
6500b73c:	je     0x6500b745
6500b73e:	push   eax
6500b73f:	call   DWORD PTR ds:0x650241a0
6500b745:	mov    eax,DWORD PTR [esi+0x4]
6500b748:	cmp    eax,ebx
6500b74a:	je     0x6500b755
6500b74c:	push   eax
6500b74d:	call   0x65012dda
6500b752:	add    esp,0x4
6500b755:	push   esi
6500b756:	call   0x65011f02
6500b75b:	add    esp,0x4
6500b75e:	jmp    0x6500ba03
6500b763:	lea    ecx,[esp+0x20]
6500b767:	push   ecx
6500b768:	push   0x65024954
6500b76d:	push   0x1
6500b76f:	push   ebx
6500b770:	push   0x65024a24
6500b775:	mov    DWORD PTR [esp+0x34],ebx
6500b779:	call   DWORD PTR ds:0x650241d4
6500b77f:	cmp    eax,ebx
6500b781:	jl     0x6500b9df
6500b787:	push   0x650281fc
6500b78c:	push   0xa
6500b78e:	push   0x65028238
6500b793:	mov    DWORD PTR [esp+0x28],ebx
6500b797:	call   0x65006d00
6500b79c:	add    esp,0xc
6500b79f:	lea    edx,[esp+0x30]
6500b7a3:	push   edx
6500b7a4:	mov    edi,eax
6500b7a6:	call   0x6500ac60
6500b7ab:	mov    BYTE PTR [esp+0x6c],0x1
6500b7b0:	mov    eax,DWORD PTR [eax]
6500b7b2:	cmp    eax,ebx
6500b7b4:	je     0x6500b7ba
6500b7b6:	mov    eax,DWORD PTR [eax]
6500b7b8:	jmp    0x6500b7bc
6500b7ba:	xor    eax,eax
6500b7bc:	mov    ecx,DWORD PTR [esp+0x20]
6500b7c0:	mov    edx,DWORD PTR [ecx]
6500b7c2:	lea    esi,[esp+0x1c]
6500b7c6:	push   esi
6500b7c7:	push   ebx
6500b7c8:	push   ebx
6500b7c9:	push   ebx
6500b7ca:	push   ebx
6500b7cb:	push   ebx
6500b7cc:	push   ebx
6500b7cd:	push   eax
6500b7ce:	mov    eax,DWORD PTR [edx+0xc]
6500b7d1:	push   ecx
6500b7d2:	call   eax
6500b7d4:	lea    edi,[esp+0x30]
6500b7d8:	mov    esi,eax
6500b7da:	mov    BYTE PTR [esp+0x6c],bl
6500b7de:	call   0x6500ad00
6500b7e3:	cmp    esi,ebx
6500b7e5:	jge    0x6500b7f0
6500b7e7:	mov    eax,DWORD PTR [esp+0x20]
6500b7eb:	jmp    0x6500b9d7
6500b7f0:	mov    eax,DWORD PTR [esp+0x1c]
6500b7f4:	push   ebx
6500b7f5:	push   ebx
6500b7f6:	push   0x3
6500b7f8:	push   0x3
6500b7fa:	push   ebx
6500b7fb:	push   ebx
6500b7fc:	push   0xa
6500b7fe:	push   eax
6500b7ff:	call   0x6500e8a0
6500b804:	call   eax
6500b806:	cmp    eax,ebx
6500b808:	jge    0x6500b81f
6500b80a:	mov    eax,DWORD PTR [esp+0x1c]
6500b80e:	mov    ecx,DWORD PTR [eax]
6500b810:	mov    edx,DWORD PTR [ecx+0x8]
6500b813:	push   eax
6500b814:	call   edx
6500b816:	mov    eax,DWORD PTR [esp+0x20]
6500b81a:	jmp    0x6500b9d7
6500b81f:	push   0x65028250
6500b824:	push   0xe
6500b826:	push   0x65028274
6500b82b:	mov    DWORD PTR [esp+0x30],ebx
6500b82f:	call   0x65006a10
6500b834:	add    esp,0xc
6500b837:	push   eax
6500b838:	lea    ebx,[esp+0x3c]
6500b83c:	call   0x6500abd0
6500b841:	mov    ecx,DWORD PTR [esp+0x78]
6500b845:	push   ecx
6500b846:	lea    edx,[esp+0x38]
6500b84a:	push   edx
6500b84b:	push   eax
6500b84c:	mov    BYTE PTR [esp+0x78],0x2
6500b851:	call   0x6500af20
6500b856:	mov    esi,eax
6500b858:	push   0x65028284
6500b85d:	push   0x3
6500b85f:	push   0x650282b0
6500b864:	mov    BYTE PTR [esp+0x78],0x3
6500b869:	call   0x65006a10
6500b86e:	add    esp,0xc
6500b871:	push   eax
6500b872:	lea    ebx,[esp+0x34]
6500b876:	call   0x6500abd0
6500b87b:	mov    BYTE PTR [esp+0x6c],0x4
6500b880:	mov    ecx,DWORD PTR [esi]
6500b882:	xor    ebx,ebx
6500b884:	cmp    ecx,ebx
6500b886:	je     0x6500b88c
6500b888:	mov    ecx,DWORD PTR [ecx]
6500b88a:	jmp    0x6500b88e
6500b88c:	xor    ecx,ecx
6500b88e:	mov    eax,DWORD PTR [eax]
6500b890:	cmp    eax,ebx
6500b892:	je     0x6500b898
6500b894:	mov    edx,DWORD PTR [eax]
6500b896:	jmp    0x6500b89a
6500b898:	xor    edx,edx
6500b89a:	mov    eax,DWORD PTR [esp+0x1c]
6500b89e:	mov    esi,DWORD PTR [eax]
6500b8a0:	lea    edi,[esp+0x24]
6500b8a4:	push   edi
6500b8a5:	push   ebx
6500b8a6:	push   0x30
6500b8a8:	push   ecx
6500b8a9:	push   edx
6500b8aa:	push   eax
6500b8ab:	mov    eax,DWORD PTR [esi+0x50]
6500b8ae:	call   eax
6500b8b0:	lea    edi,[esp+0x30]
6500b8b4:	mov    esi,eax
6500b8b6:	call   0x6500ad00
6500b8bb:	lea    edi,[esp+0x34]
6500b8bf:	call   0x6500ad00
6500b8c4:	lea    edi,[esp+0x38]
6500b8c8:	mov    BYTE PTR [esp+0x6c],bl
6500b8cc:	call   0x6500ad00
6500b8d1:	cmp    esi,ebx
6500b8d3:	jge    0x6500b8ea
6500b8d5:	mov    eax,DWORD PTR [esp+0x1c]
6500b8d9:	mov    ecx,DWORD PTR [eax]
6500b8db:	mov    edx,DWORD PTR [ecx+0x8]
6500b8de:	push   eax
6500b8df:	call   edx
6500b8e1:	mov    eax,DWORD PTR [esp+0x20]
6500b8e5:	jmp    0x6500b9d7
6500b8ea:	mov    eax,DWORD PTR [esp+0x24]
6500b8ee:	cmp    eax,ebx
6500b8f0:	mov    DWORD PTR [esp+0x2c],ebx
6500b8f4:	je     0x6500b9af
6500b8fa:	mov    edi,DWORD PTR ds:0x650241a4
6500b900:	mov    ecx,DWORD PTR [eax]
6500b902:	lea    edx,[esp+0x2c]
6500b906:	push   edx
6500b907:	lea    edx,[esp+0x2c]
6500b90b:	push   edx
6500b90c:	push   0x1
6500b90e:	push   0xffffffff
6500b910:	push   eax
6500b911:	mov    eax,DWORD PTR [ecx+0x10]
6500b914:	call   eax
6500b916:	cmp    DWORD PTR [esp+0x2c],ebx
6500b91a:	je     0x6500b9af
6500b920:	mov    esi,DWORD PTR [esp+0x28]
6500b924:	mov    eax,DWORD PTR [esp+0x7c]
6500b928:	mov    ebp,DWORD PTR [esi]
6500b92a:	push   ebx
6500b92b:	push   ebx
6500b92c:	lea    ecx,[esp+0x44]
6500b930:	push   ecx
6500b931:	push   ebx
6500b932:	call   0x6500afa0
6500b937:	mov    edx,DWORD PTR [ebp+0x10]
6500b93a:	push   eax
6500b93b:	push   esi
6500b93c:	call   edx
6500b93e:	cmp    eax,ebx
6500b940:	jl     0x6500b94a
6500b942:	cmp    WORD PTR [esp+0x3c],0x8
6500b948:	je     0x6500b96b
6500b94a:	lea    eax,[esp+0x3c]
6500b94e:	push   eax
6500b94f:	call   edi
6500b951:	mov    eax,DWORD PTR [esp+0x28]
6500b955:	mov    ecx,DWORD PTR [eax]
6500b957:	mov    edx,DWORD PTR [ecx+0x8]
6500b95a:	push   eax
6500b95b:	call   edx
6500b95d:	mov    eax,DWORD PTR [esp+0x24]
6500b961:	cmp    eax,ebx
6500b963:	mov    ebp,DWORD PTR [esp+0x74]
6500b967:	jne    0x6500b900
6500b969:	jmp    0x6500b9af
6500b96b:	lea    eax,[esp+0x4c]
6500b96f:	push   eax
6500b970:	call   DWORD PTR ds:0x65024190
6500b976:	lea    ecx,[esp+0x3c]
6500b97a:	push   ecx
6500b97b:	lea    edx,[esp+0x50]
6500b97f:	push   edx
6500b980:	call   DWORD PTR ds:0x65024188
6500b986:	cmp    eax,ebx
6500b988:	jge    0x6500b990
6500b98a:	push   eax
6500b98b:	call   0x6501e6a0
6500b990:	lea    esi,[esp+0x4c]
6500b994:	lea    ecx,[esp+0x18]
6500b998:	mov    BYTE PTR [esp+0x6c],0x5
6500b99d:	call   0x6500b090
6500b9a2:	mov    eax,esi
6500b9a4:	push   eax
6500b9a5:	mov    BYTE PTR [esp+0x70],bl
6500b9a9:	call   edi
6500b9ab:	mov    ebp,DWORD PTR [esp+0x74]
6500b9af:	mov    eax,DWORD PTR [esp+0x1c]
6500b9b3:	mov    ecx,DWORD PTR [eax]
6500b9b5:	mov    edx,DWORD PTR [ecx+0x8]
6500b9b8:	push   eax
6500b9b9:	call   edx
6500b9bb:	mov    eax,DWORD PTR [esp+0x20]
6500b9bf:	mov    ecx,DWORD PTR [eax]
6500b9c1:	mov    edx,DWORD PTR [ecx+0x8]
6500b9c4:	push   eax
6500b9c5:	call   edx
6500b9c7:	mov    eax,DWORD PTR [esp+0x24]
6500b9cb:	mov    ecx,DWORD PTR [eax]
6500b9cd:	mov    edx,DWORD PTR [ecx+0x8]
6500b9d0:	push   eax
6500b9d1:	call   edx
6500b9d3:	mov    eax,DWORD PTR [esp+0x28]
6500b9d7:	mov    ecx,DWORD PTR [eax]
6500b9d9:	mov    edx,DWORD PTR [ecx+0x8]
6500b9dc:	push   eax
6500b9dd:	call   edx
6500b9df:	call   DWORD PTR ds:0x650241dc
6500b9e5:	mov    eax,DWORD PTR [esp+0x18]
6500b9e9:	cmp    eax,ebx
6500b9eb:	mov    DWORD PTR [ebp+0x0],eax
6500b9ee:	je     0x6500b9fa
6500b9f0:	add    eax,0x8
6500b9f3:	push   eax
6500b9f4:	call   DWORD PTR ds:0x65024020
6500b9fa:	lea    edi,[esp+0x18]
6500b9fe:	call   0x6500ad00
6500ba03:	mov    eax,ebp
6500ba05:	mov    ecx,DWORD PTR [esp+0x64]
6500ba09:	mov    DWORD PTR fs:0x0,ecx
6500ba10:	pop    ecx
6500ba11:	pop    edi
6500ba12:	pop    esi
6500ba13:	pop    ebp
6500ba14:	pop    ebx
6500ba15:	add    esp,0x5c
6500ba18:	ret    
6500ba19:	int3   
6500ba1a:	int3   
6500ba1b:	int3   
6500ba1c:	int3   
6500ba1d:	int3   
6500ba1e:	int3   
6500ba1f:	int3   
6500ba20:	push   ebp
6500ba21:	mov    ebp,esp
6500ba23:	and    esp,0xfffffff8
6500ba26:	push   0xffffffff
6500ba28:	push   0x65022dc8
6500ba2d:	mov    eax,fs:0x0
6500ba33:	push   eax
6500ba34:	sub    esp,0x14
6500ba37:	push   esi
6500ba38:	push   edi
6500ba39:	mov    eax,ds:0x6502c09c
6500ba3e:	xor    eax,esp
6500ba40:	push   eax
6500ba41:	lea    eax,[esp+0x20]
6500ba45:	mov    fs:0x0,eax
6500ba4b:	mov    DWORD PTR [esp+0x18],0x0
6500ba53:	call   DWORD PTR ds:0x6502c06c
6500ba59:	push   0x650282b4
6500ba5e:	push   0xc
6500ba60:	push   0x650282ec
6500ba65:	call   0x65006d00
6500ba6a:	add    esp,0xc
6500ba6d:	lea    ecx,[esp+0x14]
6500ba71:	push   ecx
6500ba72:	mov    edi,eax
6500ba74:	call   0x6500ac60
6500ba79:	push   0x65028308
6500ba7e:	push   0x15
6500ba80:	push   0x6502832c
6500ba85:	mov    DWORD PTR [esp+0x34],0x0
6500ba8d:	call   0x65006d00
6500ba92:	add    esp,0xc
6500ba95:	lea    edx,[esp+0x10]
6500ba99:	push   edx
6500ba9a:	mov    edi,eax
6500ba9c:	call   0x6500ac60
6500baa1:	lea    eax,[esp+0x14]
6500baa5:	push   eax
6500baa6:	lea    ecx,[esp+0x14]
6500baaa:	push   ecx
6500baab:	lea    edx,[esp+0x20]
6500baaf:	push   edx
6500bab0:	mov    BYTE PTR [esp+0x34],0x1
6500bab5:	call   0x6500b6c0
6500baba:	add    esp,0xc
6500babd:	mov    esi,DWORD PTR [esp+0x10]
6500bac1:	test   esi,esi
6500bac3:	je     0x6500baf9
6500bac5:	lea    eax,[esi+0x8]
6500bac8:	push   eax
6500bac9:	call   DWORD PTR ds:0x65024098
6500bacf:	test   eax,eax
6500bad1:	jne    0x6500baf9
6500bad3:	mov    eax,DWORD PTR [esi]
6500bad5:	test   eax,eax
6500bad7:	je     0x6500bae0
6500bad9:	push   eax
6500bada:	call   DWORD PTR ds:0x650241a0
6500bae0:	mov    eax,DWORD PTR [esi+0x4]
6500bae3:	test   eax,eax
6500bae5:	je     0x6500baf0
6500bae7:	push   eax
6500bae8:	call   0x65012dda
6500baed:	add    esp,0x4
6500baf0:	push   esi
6500baf1:	call   0x65011f02
6500baf6:	add    esp,0x4
6500baf9:	mov    BYTE PTR [esp+0x28],0x4
6500bafe:	mov    esi,DWORD PTR [esp+0x14]
6500bb02:	test   esi,esi
6500bb04:	je     0x6500bb3a
6500bb06:	lea    ecx,[esi+0x8]
6500bb09:	push   ecx
6500bb0a:	call   DWORD PTR ds:0x65024098
6500bb10:	test   eax,eax
6500bb12:	jne    0x6500bb3a
6500bb14:	mov    eax,DWORD PTR [esi]
6500bb16:	test   eax,eax
6500bb18:	je     0x6500bb21
6500bb1a:	push   eax
6500bb1b:	call   DWORD PTR ds:0x650241a0
6500bb21:	mov    eax,DWORD PTR [esi+0x4]
6500bb24:	test   eax,eax
6500bb26:	je     0x6500bb31
6500bb28:	push   eax
6500bb29:	call   0x65012dda
6500bb2e:	add    esp,0x4
6500bb31:	push   esi
6500bb32:	call   0x65011f02
6500bb37:	add    esp,0x4
6500bb3a:	mov    esi,DWORD PTR [esp+0x18]
6500bb3e:	test   esi,esi
6500bb40:	je     0x6500bb46
6500bb42:	mov    eax,DWORD PTR [esi]
6500bb44:	jmp    0x6500bb48
6500bb46:	xor    eax,eax
6500bb48:	mov    edi,DWORD PTR [ebp+0x8]
6500bb4b:	push   eax
6500bb4c:	mov    ecx,edi
6500bb4e:	call   0x65002550
6500bb53:	test   esi,esi
6500bb55:	je     0x6500bb8b
6500bb57:	lea    edx,[esi+0x8]
6500bb5a:	push   edx
6500bb5b:	call   DWORD PTR ds:0x65024098
6500bb61:	test   eax,eax
6500bb63:	jne    0x6500bb8b
6500bb65:	mov    eax,DWORD PTR [esi]
6500bb67:	test   eax,eax
6500bb69:	je     0x6500bb72
6500bb6b:	push   eax
6500bb6c:	call   DWORD PTR ds:0x650241a0
6500bb72:	mov    eax,DWORD PTR [esi+0x4]
6500bb75:	test   eax,eax
6500bb77:	je     0x6500bb82
6500bb79:	push   eax
6500bb7a:	call   0x65012dda
6500bb7f:	add    esp,0x4
6500bb82:	push   esi
6500bb83:	call   0x65011f02
6500bb88:	add    esp,0x4
6500bb8b:	mov    eax,edi
6500bb8d:	mov    ecx,DWORD PTR [esp+0x20]
6500bb91:	mov    DWORD PTR fs:0x0,ecx
6500bb98:	pop    ecx
6500bb99:	pop    edi
6500bb9a:	pop    esi
6500bb9b:	mov    esp,ebp
6500bb9d:	pop    ebp
6500bb9e:	ret    
6500bb9f:	int3   
6500bba0:	mov    ecx,DWORD PTR [eax]
6500bba2:	push   ecx
6500bba3:	call   0x65011f02
6500bba8:	pop    ecx
6500bba9:	ret    
6500bbaa:	int3   
6500bbab:	int3   
6500bbac:	int3   
6500bbad:	int3   
6500bbae:	int3   
6500bbaf:	int3   
6500bbb0:	push   ebp
6500bbb1:	mov    ebp,esp
6500bbb3:	and    esp,0xfffffff8
6500bbb6:	sub    esp,0x8
6500bbb9:	push   ebx
6500bbba:	mov    ebx,DWORD PTR [esi+0x4]
6500bbbd:	test   ebx,ebx
6500bbbf:	push   edi
6500bbc0:	jne    0x6500bbc6
6500bbc2:	xor    edi,edi
6500bbc4:	jmp    0x6500bbde
6500bbc6:	mov    ecx,DWORD PTR [esi+0x8]
6500bbc9:	sub    ecx,ebx
6500bbcb:	mov    eax,0x92492493
6500bbd0:	imul   ecx
6500bbd2:	add    edx,ecx
6500bbd4:	sar    edx,0x4
6500bbd7:	mov    edi,edx
6500bbd9:	shr    edi,0x1f
6500bbdc:	add    edi,edx
6500bbde:	test   ebx,ebx
6500bbe0:	je     0x6500bc31
6500bbe2:	mov    ecx,DWORD PTR [esi+0xc]
6500bbe5:	sub    ecx,ebx
6500bbe7:	mov    eax,0x92492493
6500bbec:	imul   ecx
6500bbee:	add    edx,ecx
6500bbf0:	sar    edx,0x4
6500bbf3:	mov    eax,edx
6500bbf5:	shr    eax,0x1f
6500bbf8:	add    eax,edx
6500bbfa:	cmp    edi,eax
6500bbfc:	jae    0x6500bc31
6500bbfe:	mov    edx,DWORD PTR [ebp+0x8]
6500bc01:	mov    edi,DWORD PTR [esi+0x8]
6500bc04:	mov    BYTE PTR [esp+0x8],0x0
6500bc09:	mov    eax,DWORD PTR [esp+0x8]
6500bc0d:	mov    ecx,DWORD PTR [esp+0x8]
6500bc11:	push   eax
6500bc12:	push   ecx
6500bc13:	push   esi
6500bc14:	push   edx
6500bc15:	push   edi
6500bc16:	mov    ecx,0x1
6500bc1b:	call   0x6500c250
6500bc20:	add    esp,0x14
6500bc23:	add    edi,0x1c
6500bc26:	mov    DWORD PTR [esi+0x8],edi
6500bc29:	pop    edi
6500bc2a:	pop    ebx
6500bc2b:	mov    esp,ebp
6500bc2d:	pop    ebp
6500bc2e:	ret    0x4
6500bc31:	mov    edi,DWORD PTR [esi+0x8]
6500bc34:	cmp    ebx,edi
6500bc36:	jbe    0x6500bc3d
6500bc38:	call   0x65012273
6500bc3d:	mov    eax,DWORD PTR [ebp+0x8]
6500bc40:	push   edi
6500bc41:	push   esi
6500bc42:	push   eax
6500bc43:	lea    ecx,[esp+0x14]
6500bc47:	push   ecx
6500bc48:	mov    eax,esi
6500bc4a:	call   0x6500bc90
6500bc4f:	pop    edi
6500bc50:	pop    ebx
6500bc51:	mov    esp,ebp
6500bc53:	pop    ebp
6500bc54:	ret    0x4
6500bc57:	int3   
6500bc58:	int3   
6500bc59:	int3   
6500bc5a:	int3   
6500bc5b:	int3   
6500bc5c:	int3   
6500bc5d:	int3   
6500bc5e:	int3   
6500bc5f:	int3   
6500bc60:	mov    eax,DWORD PTR [ecx+0x4]
6500bc63:	test   eax,eax
6500bc65:	jne    0x6500bc68
6500bc67:	ret    
6500bc68:	mov    ecx,DWORD PTR [ecx+0x8]
6500bc6b:	sub    ecx,eax
6500bc6d:	mov    eax,0x92492493
6500bc72:	imul   ecx
6500bc74:	add    edx,ecx
6500bc76:	sar    edx,0x4
6500bc79:	mov    eax,edx
6500bc7b:	shr    eax,0x1f
6500bc7e:	add    eax,edx
6500bc80:	ret    
6500bc81:	int3   
6500bc82:	int3   
6500bc83:	int3   
6500bc84:	int3   
6500bc85:	int3   
6500bc86:	int3   
6500bc87:	int3   
6500bc88:	int3   
6500bc89:	int3   
6500bc8a:	int3   
6500bc8b:	int3   
6500bc8c:	int3   
6500bc8d:	int3   
6500bc8e:	int3   
6500bc8f:	int3   
6500bc90:	push   ecx
6500bc91:	push   ebx
6500bc92:	push   ebp
6500bc93:	mov    ebp,DWORD PTR [esp+0x1c]
6500bc97:	push   esi
6500bc98:	mov    esi,eax
6500bc9a:	push   edi
6500bc9b:	mov    edi,DWORD PTR [esi+0x4]
6500bc9e:	test   edi,edi
6500bca0:	je     0x6500bcbe
6500bca2:	mov    ebx,DWORD PTR [esi+0x8]
6500bca5:	mov    ecx,ebx
6500bca7:	sub    ecx,edi
6500bca9:	mov    eax,0x92492493
6500bcae:	imul   ecx
6500bcb0:	add    edx,ecx
6500bcb2:	sar    edx,0x4
6500bcb5:	mov    eax,edx
6500bcb7:	shr    eax,0x1f
6500bcba:	add    eax,edx
6500bcbc:	jne    0x6500bcc6
6500bcbe:	mov    ebx,DWORD PTR [esp+0x20]
6500bcc2:	xor    edi,edi
6500bcc4:	jmp    0x6500bcf7
6500bcc6:	cmp    edi,ebx
6500bcc8:	jbe    0x6500bccf
6500bcca:	call   0x65012273
6500bccf:	mov    ebx,DWORD PTR [esp+0x20]
6500bcd3:	test   ebx,ebx
6500bcd5:	je     0x6500bcdb
6500bcd7:	cmp    ebx,esi
6500bcd9:	je     0x6500bce0
6500bcdb:	call   0x65012273
6500bce0:	mov    ecx,ebp
6500bce2:	sub    ecx,edi
6500bce4:	mov    eax,0x92492493
6500bce9:	imul   ecx
6500bceb:	add    edx,ecx
6500bced:	sar    edx,0x4
6500bcf0:	mov    edi,edx
6500bcf2:	shr    edi,0x1f
6500bcf5:	add    edi,edx
6500bcf7:	mov    ecx,DWORD PTR [esp+0x1c]
6500bcfb:	push   ebp
6500bcfc:	push   ebx
6500bcfd:	push   ecx
6500bcfe:	mov    ecx,esi
6500bd00:	call   0x6500bd80
6500bd05:	mov    ebx,DWORD PTR [esi+0x4]
6500bd08:	cmp    ebx,DWORD PTR [esi+0x8]
6500bd0b:	jbe    0x6500bd12
6500bd0d:	call   0x65012273
6500bd12:	lea    edx,[edi*8+0x0]
6500bd19:	sub    edx,edi
6500bd1b:	lea    edi,[ebx+edx*4]
6500bd1e:	cmp    edi,DWORD PTR [esi+0x8]
6500bd21:	mov    DWORD PTR [esp+0x24],ebx
6500bd25:	ja     0x6500bd2c
6500bd27:	cmp    edi,DWORD PTR [esi+0x4]
6500bd2a:	jae    0x6500bd31
6500bd2c:	call   0x65012273
6500bd31:	mov    eax,DWORD PTR [esp+0x18]
6500bd35:	mov    DWORD PTR [eax+0x4],edi
6500bd38:	pop    edi
6500bd39:	mov    DWORD PTR [eax],esi
6500bd3b:	pop    esi
6500bd3c:	pop    ebp
6500bd3d:	pop    ebx
6500bd3e:	pop    ecx
6500bd3f:	ret    0x10
6500bd42:	int3   
6500bd43:	int3   
6500bd44:	int3   
6500bd45:	int3   
6500bd46:	int3   
6500bd47:	int3   
6500bd48:	int3   
6500bd49:	int3   
6500bd4a:	int3   
6500bd4b:	int3   
6500bd4c:	int3   
6500bd4d:	int3   
6500bd4e:	int3   
6500bd4f:	int3   
6500bd50:	push   ecx
6500bd51:	mov    ecx,DWORD PTR [esp+0x8]
6500bd55:	mov    BYTE PTR [esp],0x0
6500bd59:	mov    eax,DWORD PTR [esp]
6500bd5c:	push   eax
6500bd5d:	mov    eax,DWORD PTR [esp+0xc]
6500bd61:	push   ecx
6500bd62:	push   edx
6500bd63:	push   eax
6500bd64:	push   edi
6500bd65:	mov    ecx,esi
6500bd67:	call   0x6500c250
6500bd6c:	lea    ecx,[esi*8+0x0]
6500bd73:	sub    ecx,esi
6500bd75:	lea    eax,[edi+ecx*4]
6500bd78:	add    esp,0x18
6500bd7b:	ret    0x4
6500bd7e:	int3   
6500bd7f:	int3   
6500bd80:	push   ebp
6500bd81:	mov    ebp,esp
6500bd83:	push   0xffffffff
6500bd85:	push   0x65022718
6500bd8a:	mov    eax,fs:0x0
6500bd90:	push   eax
6500bd91:	sub    esp,0x34
6500bd94:	mov    eax,ds:0x6502c09c
6500bd99:	xor    eax,ebp
6500bd9b:	mov    DWORD PTR [ebp-0x14],eax
6500bd9e:	push   ebx
6500bd9f:	push   esi
6500bda0:	push   edi
6500bda1:	push   eax
6500bda2:	lea    eax,[ebp-0xc]
6500bda5:	mov    fs:0x0,eax
6500bdab:	mov    DWORD PTR [ebp-0x10],esp
6500bdae:	mov    eax,DWORD PTR [ebp+0x8]
6500bdb1:	push   0xffffffff
6500bdb3:	xor    edi,edi
6500bdb5:	mov    ebx,ecx
6500bdb7:	push   edi
6500bdb8:	push   eax
6500bdb9:	lea    ecx,[ebp-0x30]
6500bdbc:	mov    DWORD PTR [ebp-0x3c],ebx
6500bdbf:	mov    DWORD PTR [ebp-0x18],0xf
6500bdc6:	mov    DWORD PTR [ebp-0x1c],edi
6500bdc9:	mov    BYTE PTR [ebp-0x2c],0x0
6500bdcd:	call   0x65001780
6500bdd2:	mov    DWORD PTR [ebp-0x4],edi
6500bdd5:	mov    ecx,DWORD PTR [ebx+0x4]
6500bdd8:	cmp    ecx,edi
6500bdda:	je     0x6500bdf4
6500bddc:	mov    esi,DWORD PTR [ebx+0xc]
6500bddf:	sub    esi,ecx
6500bde1:	mov    eax,0x92492493
6500bde6:	imul   esi
6500bde8:	add    edx,esi
6500bdea:	sar    edx,0x4
6500bded:	mov    edi,edx
6500bdef:	shr    edi,0x1f
6500bdf2:	add    edi,edx
6500bdf4:	test   ecx,ecx
6500bdf6:	jne    0x6500bdfc
6500bdf8:	xor    eax,eax
6500bdfa:	jmp    0x6500be14
6500bdfc:	mov    esi,DWORD PTR [ebx+0x8]
6500bdff:	sub    esi,ecx
6500be01:	mov    eax,0x92492493
6500be06:	imul   esi
6500be08:	add    edx,esi
6500be0a:	sar    edx,0x4
6500be0d:	mov    eax,edx
6500be0f:	shr    eax,0x1f
6500be12:	add    eax,edx
6500be14:	mov    edx,0x9249249
6500be19:	sub    edx,eax
6500be1b:	cmp    edx,0x1
6500be1e:	jae    0x6500be25
6500be20:	call   0x6500c0c0
6500be25:	test   ecx,ecx
6500be27:	jne    0x6500be2d
6500be29:	xor    eax,eax
6500be2b:	jmp    0x6500be45
6500be2d:	mov    esi,DWORD PTR [ebx+0x8]
6500be30:	sub    esi,ecx
6500be32:	mov    eax,0x92492493
6500be37:	imul   esi
6500be39:	add    edx,esi
6500be3b:	sar    edx,0x4
6500be3e:	mov    eax,edx
6500be40:	shr    eax,0x1f
6500be43:	add    eax,edx
6500be45:	add    eax,0x1
6500be48:	cmp    edi,eax
6500be4a:	jae    0x6500bfa6
6500be50:	mov    eax,edi
6500be52:	shr    eax,1
6500be54:	mov    edx,0x9249249
6500be59:	sub    edx,eax
6500be5b:	cmp    edx,edi
6500be5d:	jae    0x6500be63
6500be5f:	xor    edi,edi
6500be61:	jmp    0x6500be65
6500be63:	add    edi,eax
6500be65:	test   ecx,ecx
6500be67:	jne    0x6500be6d
6500be69:	xor    eax,eax
6500be6b:	jmp    0x6500be85
6500be6d:	mov    esi,DWORD PTR [ebx+0x8]
6500be70:	sub    esi,ecx
6500be72:	mov    eax,0x92492493
6500be77:	imul   esi
6500be79:	add    edx,esi
6500be7b:	sar    edx,0x4
6500be7e:	mov    eax,edx
6500be80:	shr    eax,0x1f
6500be83:	add    eax,edx
6500be85:	add    eax,0x1
6500be88:	cmp    edi,eax
6500be8a:	jae    0x6500be98
6500be8c:	mov    ecx,ebx
6500be8e:	call   0x6500bc60
6500be93:	mov    edi,eax
6500be95:	add    edi,0x1
6500be98:	push   0x0
6500be9a:	push   edi
6500be9b:	call   0x6500c1e0
6500bea0:	mov    BYTE PTR [ebp-0x4],0x1
6500bea4:	mov    ecx,DWORD PTR [ebx+0x4]
6500bea7:	mov    BYTE PTR [ebp-0x34],0x0
6500beab:	mov    edx,DWORD PTR [ebp-0x34]
6500beae:	push   edx
6500beaf:	mov    edx,DWORD PTR [ebp-0x34]
6500beb2:	push   edx
6500beb3:	mov    edx,DWORD PTR [ebp+0x10]
6500beb6:	push   ebx
6500beb7:	push   edx
6500beb8:	mov    edx,eax
6500beba:	mov    DWORD PTR [ebp-0x40],eax
6500bebd:	mov    DWORD PTR [ebp-0x38],eax
6500bec0:	call   0x6500c370
6500bec5:	add    esp,0x18
6500bec8:	mov    esi,eax
6500beca:	mov    BYTE PTR [ebp-0x34],0x0
6500bece:	mov    eax,DWORD PTR [ebp-0x34]
6500bed1:	mov    ecx,DWORD PTR [ebp-0x34]
6500bed4:	push   eax
6500bed5:	push   ecx
6500bed6:	push   ebx
6500bed7:	lea    edx,[ebp-0x30]
6500beda:	push   edx
6500bedb:	push   esi
6500bedc:	mov    ecx,0x1
6500bee1:	mov    DWORD PTR [ebp-0x38],esi
6500bee4:	call   0x6500c250
6500bee9:	mov    eax,DWORD PTR [ebx+0x8]
6500beec:	add    esp,0x14
6500beef:	mov    BYTE PTR [ebp-0x34],0x0
6500bef3:	mov    ecx,DWORD PTR [ebp-0x34]
6500bef6:	mov    edx,DWORD PTR [ebp-0x34]
6500bef9:	push   ecx
6500befa:	mov    ecx,DWORD PTR [ebp+0x10]
6500befd:	push   edx
6500befe:	add    esi,0x1c
6500bf01:	push   ebx
6500bf02:	push   eax
6500bf03:	mov    edx,esi
6500bf05:	mov    DWORD PTR [ebp-0x38],esi
6500bf08:	call   0x6500c370
6500bf0d:	mov    esi,DWORD PTR [ebx+0x4]
6500bf10:	add    esp,0x10
6500bf13:	test   esi,esi
6500bf15:	jne    0x6500bf1b
6500bf17:	xor    eax,eax
6500bf19:	jmp    0x6500bf33
6500bf1b:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf1e:	sub    ecx,esi
6500bf20:	mov    eax,0x92492493
6500bf25:	imul   ecx
6500bf27:	add    edx,ecx
6500bf29:	sar    edx,0x4
6500bf2c:	mov    eax,edx
6500bf2e:	shr    eax,0x1f
6500bf31:	add    eax,edx
6500bf33:	add    eax,0x1
6500bf36:	test   esi,esi
6500bf38:	mov    DWORD PTR [ebp-0x34],eax
6500bf3b:	je     0x6500bf5b
6500bf3d:	mov    eax,DWORD PTR [ebp-0x34]
6500bf40:	mov    ecx,DWORD PTR [ebx+0x8]
6500bf43:	push   eax
6500bf44:	push   ebx
6500bf45:	push   ecx
6500bf46:	push   esi
6500bf47:	call   0x6500c300
6500bf4c:	mov    edx,DWORD PTR [ebx+0x4]
6500bf4f:	push   edx
6500bf50:	call   0x65011f02
6500bf55:	mov    eax,DWORD PTR [ebp-0x34]
6500bf58:	add    esp,0x14
6500bf5b:	mov    ecx,DWORD PTR [ebp-0x40]
6500bf5e:	lea    edx,[edi*8+0x0]
6500bf65:	sub    edx,edi
6500bf67:	lea    edx,[ecx+edx*4]
6500bf6a:	mov    DWORD PTR [ebx+0xc],edx
6500bf6d:	lea    edx,[eax*8+0x0]
6500bf74:	sub    edx,eax
6500bf76:	lea    eax,[ecx+edx*4]
6500bf79:	mov    DWORD PTR [ebx+0x8],eax
6500bf7c:	mov    DWORD PTR [ebx+0x4],ecx
6500bf7f:	jmp    0x6500c062
6500bf84:	mov    ecx,DWORD PTR [ebp-0x38]
6500bf87:	mov    esi,DWORD PTR [ebp-0x40]
6500bf8a:	push   ecx
6500bf8b:	mov    ecx,DWORD PTR [ebp-0x3c]
6500bf8e:	push   esi
6500bf8f:	call   0x6500c0a0
6500bf94:	push   esi
6500bf95:	call   0x65011f02
6500bf9a:	add    esp,0x4
6500bf9d:	push   0x0
6500bf9f:	push   0x0
6500bfa1:	call   0x65012306
6500bfa6:	mov    edi,DWORD PTR [ebx+0x8]
6500bfa9:	mov    esi,DWORD PTR [ebp+0x10]
6500bfac:	mov    ecx,edi
6500bfae:	sub    ecx,esi
6500bfb0:	mov    eax,0x92492493
6500bfb5:	imul   ecx
6500bfb7:	add    edx,ecx
6500bfb9:	sar    edx,0x4
6500bfbc:	mov    eax,edx
6500bfbe:	shr    eax,0x1f
6500bfc1:	add    eax,edx
6500bfc3:	cmp    eax,0x1
6500bfc6:	mov    edx,ebx
6500bfc8:	jae    0x6500c03a
6500bfca:	lea    ecx,[esi+0x1c]
6500bfcd:	push   ecx
6500bfce:	push   edi
6500bfcf:	push   esi
6500bfd0:	call   0x6500c140
6500bfd5:	mov    BYTE PTR [ebp-0x4],0x3
6500bfd9:	mov    edi,DWORD PTR [ebx+0x8]
6500bfdc:	lea    edx,[ebp-0x30]
6500bfdf:	push   edx
6500bfe0:	mov    ecx,edi
6500bfe2:	sub    ecx,esi
6500bfe4:	mov    eax,0x92492493
6500bfe9:	imul   ecx
6500bfeb:	add    edx,ecx
6500bfed:	sar    edx,0x4
6500bff0:	mov    eax,edx
6500bff2:	shr    eax,0x1f
6500bff5:	add    eax,edx
6500bff7:	mov    esi,0x1
6500bffc:	sub    esi,eax
6500bffe:	mov    edx,ebx
6500c000:	call   0x6500bd50
6500c005:	mov    eax,DWORD PTR [ebp+0x10]
6500c008:	mov    DWORD PTR [ebp-0x4],0x0
6500c00f:	add    DWORD PTR [ebx+0x8],0x1c
6500c013:	mov    ebx,DWORD PTR [ebx+0x8]
6500c016:	lea    edi,[ebx-0x1c]
6500c019:	jmp    0x6500c05a
6500c01b:	mov    ecx,DWORD PTR [ebp-0x3c]
6500c01e:	mov    edx,DWORD PTR [ecx+0x8]
6500c021:	mov    eax,DWORD PTR [ebp+0x10]
6500c024:	add    edx,0x1c
6500c027:	push   edx
6500c028:	add    eax,0x1c
6500c02b:	push   eax
6500c02c:	call   0x6500c0a0
6500c031:	push   0x0
6500c033:	push   0x0
6500c035:	call   0x65012306
6500c03a:	push   edi
6500c03b:	lea    eax,[edi-0x1c]
6500c03e:	push   edi
6500c03f:	push   eax
6500c040:	mov    DWORD PTR [ebp-0x34],eax
6500c043:	call   0x6500c140
6500c048:	mov    DWORD PTR [ebx+0x8],eax
6500c04b:	mov    eax,DWORD PTR [ebp-0x34]
6500c04e:	mov    ebx,esi
6500c050:	call   0x6500c190
6500c055:	lea    edi,[esi+0x1c]
6500c058:	mov    eax,esi
6500c05a:	lea    ebx,[ebp-0x30]
6500c05d:	call   0x6500c170
6500c062:	cmp    DWORD PTR [ebp-0x18],0x10
6500c066:	jb     0x6500c074
6500c068:	mov    ecx,DWORD PTR [ebp-0x2c]
6500c06b:	push   ecx
6500c06c:	call   0x65011f02
6500c071:	add    esp,0x4
6500c074:	mov    ecx,DWORD PTR [ebp-0xc]
6500c077:	mov    DWORD PTR fs:0x0,ecx
6500c07e:	pop    ecx
6500c07f:	pop    edi
6500c080:	pop    esi
6500c081:	pop    ebx
6500c082:	mov    ecx,DWORD PTR [ebp-0x14]
6500c085:	xor    ecx,ebp
6500c087:	call   0x6501275c
6500c08c:	mov    esp,ebp
6500c08e:	pop    ebp
6500c08f:	ret    0xc
6500c092:	int3   
6500c093:	int3   
6500c094:	int3   
6500c095:	int3   
6500c096:	int3   
6500c097:	int3   
6500c098:	int3   
6500c099:	int3   
6500c09a:	int3   
6500c09b:	int3   
6500c09c:	int3   
6500c09d:	int3   
6500c09e:	int3   
6500c09f:	int3   
6500c0a0:	mov    eax,DWORD PTR [esp+0x8]
6500c0a4:	mov    edx,DWORD PTR [esp+0x4]
6500c0a8:	push   eax
6500c0a9:	push   ecx
6500c0aa:	mov    ecx,DWORD PTR [esp+0x10]
6500c0ae:	push   ecx
6500c0af:	push   edx
6500c0b0:	call   0x6500c300
6500c0b5:	add    esp,0x10
6500c0b8:	ret    0x8
6500c0bb:	int3   
6500c0bc:	int3   
6500c0bd:	int3   
6500c0be:	int3   
6500c0bf:	int3   
6500c0c0:	push   ebp
6500c0c1:	mov    ebp,esp
6500c0c3:	and    esp,0xfffffff8
6500c0c6:	push   0xffffffff
6500c0c8:	push   0x650226e8
6500c0cd:	mov    eax,fs:0x0
6500c0d3:	push   eax
6500c0d4:	sub    esp,0x4c
6500c0d7:	mov    eax,ds:0x6502c09c
6500c0dc:	xor    eax,esp
6500c0de:	push   eax
6500c0df:	lea    eax,[esp+0x50]
6500c0e3:	mov    fs:0x0,eax
6500c0e9:	push   0x12
6500c0eb:	push   0x65028358
6500c0f0:	lea    ecx,[esp+0x10]
6500c0f4:	mov    DWORD PTR [esp+0x28],0xf
6500c0fc:	mov    DWORD PTR [esp+0x24],0x0
6500c104:	mov    BYTE PTR [esp+0x14],0x0
6500c109:	call   0x65001860
6500c10e:	lea    eax,[esp+0x8]
6500c112:	push   eax
6500c113:	lea    ecx,[esp+0x28]
6500c117:	mov    DWORD PTR [esp+0x5c],0x0
6500c11f:	call   0x65002cc0
6500c124:	push   0x65029ec8
6500c129:	lea    ecx,[esp+0x28]
6500c12d:	push   ecx
6500c12e:	mov    DWORD PTR [esp+0x2c],0x65024b5c
6500c136:	call   0x65012306
6500c13b:	int3   
6500c13c:	int3   
6500c13d:	int3   
6500c13e:	int3   
6500c13f:	int3   
6500c140:	push   ecx
6500c141:	mov    ecx,DWORD PTR [esp+0xc]
6500c145:	mov    BYTE PTR [esp],0x0
6500c149:	mov    eax,DWORD PTR [esp]
6500c14c:	push   eax
6500c14d:	mov    eax,DWORD PTR [esp+0x10]
6500c151:	push   ecx
6500c152:	mov    ecx,DWORD PTR [esp+0x10]
6500c156:	push   edx
6500c157:	mov    edx,DWORD PTR [esp+0x1c]
6500c15b:	push   eax
6500c15c:	call   0x6500c370
6500c161:	add    esp,0x14
6500c164:	ret    0xc
6500c167:	int3   
6500c168:	int3   
6500c169:	int3   
6500c16a:	int3   
6500c16b:	int3   
6500c16c:	int3   
6500c16d:	int3   
6500c16e:	int3   
6500c16f:	int3   
6500c170:	push   esi
6500c171:	mov    esi,eax
6500c173:	cmp    esi,edi
6500c175:	je     0x6500c18a
6500c177:	push   0xffffffff
6500c179:	push   0x0
6500c17b:	push   ebx
6500c17c:	mov    ecx,esi
6500c17e:	call   0x65001780
6500c183:	add    esi,0x1c
6500c186:	cmp    esi,edi
6500c188:	jne    0x6500c177
6500c18a:	pop    esi
6500c18b:	ret    
6500c18c:	int3   
6500c18d:	int3   
6500c18e:	int3   
6500c18f:	int3   
6500c190:	push   ecx
6500c191:	push   esi
6500c192:	mov    esi,eax
6500c194:	mov    BYTE PTR [esp+0x4],0x0
6500c199:	mov    eax,DWORD PTR [esp+0x4]
6500c19d:	mov    ecx,DWORD PTR [esp+0x4]
6500c1a1:	mov    edx,DWORD PTR [esp+0x4]
6500c1a5:	push   eax
6500c1a6:	push   ecx
6500c1a7:	push   edx
6500c1a8:	push   edi
6500c1a9:	push   ebx
6500c1aa:	mov    ecx,esi
6500c1ac:	call   0x6500c4b0
6500c1b1:	sub    esi,ebx
6500c1b3:	mov    eax,0x92492493
6500c1b8:	imul   esi
6500c1ba:	add    edx,esi
6500c1bc:	sar    edx,0x4
6500c1bf:	mov    eax,edx
6500c1c1:	shr    eax,0x1f
6500c1c4:	add    eax,edx
6500c1c6:	lea    ecx,[eax*8+0x0]
6500c1cd:	sub    ecx,eax
6500c1cf:	add    ecx,ecx
6500c1d1:	add    esp,0x14
6500c1d4:	add    ecx,ecx
6500c1d6:	mov    eax,edi
6500c1d8:	sub    eax,ecx
6500c1da:	pop    esi
6500c1db:	pop    ecx
6500c1dc:	ret    
6500c1dd:	int3   
6500c1de:	int3   
6500c1df:	int3   
6500c1e0:	mov    ecx,DWORD PTR [esp+0x4]
6500c1e4:	sub    esp,0xc
6500c1e7:	test   ecx,ecx
6500c1e9:	ja     0x6500c207
6500c1eb:	xor    ecx,ecx
6500c1ed:	lea    edx,[ecx*8+0x0]
6500c1f4:	sub    edx,ecx
6500c1f6:	add    edx,edx
6500c1f8:	add    edx,edx
6500c1fa:	push   edx
6500c1fb:	call   0x6501229c
6500c200:	add    esp,0x4
6500c203:	add    esp,0xc
6500c206:	ret    
6500c207:	or     eax,0xffffffff
6500c20a:	xor    edx,edx
6500c20c:	div    ecx
6500c20e:	cmp    eax,0x1c
6500c211:	jae    0x6500c1ed
6500c213:	lea    eax,[esp+0x10]
6500c217:	push   eax
6500c218:	lea    ecx,[esp+0x4]
6500c21c:	mov    DWORD PTR [esp+0x14],0x0
6500c224:	call   0x65011f18
6500c229:	push   0x65029dfc
6500c22e:	lea    ecx,[esp+0x4]
6500c232:	push   ecx
6500c233:	mov    DWORD PTR [esp+0x8],0x65024b44
6500c23b:	call   0x65012306
6500c240:	int3   
6500c241:	int3   
6500c242:	int3   
6500c243:	int3   
6500c244:	int3   
6500c245:	int3   
6500c246:	int3   
6500c247:	int3   
6500c248:	int3   
6500c249:	int3   
6500c24a:	int3   
6500c24b:	int3   
6500c24c:	int3   
6500c24d:	int3   
6500c24e:	int3   
6500c24f:	int3   
6500c250:	push   ebp
6500c251:	mov    ebp,esp
6500c253:	push   0xffffffff
6500c255:	push   0x65022231
6500c25a:	mov    eax,fs:0x0
6500c260:	push   eax
6500c261:	sub    esp,0x10
6500c264:	push   ebx
6500c265:	push   esi
6500c266:	push   edi
6500c267:	mov    eax,ds:0x6502c09c
6500c26c:	xor    eax,ebp
6500c26e:	push   eax
6500c26f:	lea    eax,[ebp-0xc]
6500c272:	mov    fs:0x0,eax
6500c278:	mov    DWORD PTR [ebp-0x10],esp
6500c27b:	mov    edi,ecx
6500c27d:	mov    esi,DWORD PTR [ebp+0x8]
6500c280:	xor    ebx,ebx
6500c282:	mov    DWORD PTR [ebp-0x14],esi
6500c285:	mov    DWORD PTR [ebp-0x4],ebx
6500c288:	cmp    edi,ebx
6500c28a:	jbe    0x6500c2e8
6500c28c:	mov    DWORD PTR [ebp-0x18],esi
6500c28f:	mov    DWORD PTR [ebp-0x1c],esi
6500c292:	cmp    esi,ebx
6500c294:	mov    BYTE PTR [ebp-0x4],0x1
6500c298:	je     0x6500c2b5
6500c29a:	mov    eax,DWORD PTR [ebp+0xc]
6500c29d:	push   0xffffffff
6500c29f:	push   ebx
6500c2a0:	mov    DWORD PTR [esi+0x18],0xf
6500c2a7:	mov    DWORD PTR [esi+0x14],ebx
6500c2aa:	push   eax
6500c2ab:	mov    ecx,esi
6500c2ad:	mov    BYTE PTR [esi+0x4],bl
6500c2b0:	call   0x65001780
6500c2b5:	sub    edi,0x1
6500c2b8:	add    esi,0x1c
6500c2bb:	mov    BYTE PTR [ebp-0x4],bl
6500c2be:	mov    DWORD PTR [ebp+0x8],esi
6500c2c1:	jmp    0x6500c288
6500c2c3:	mov    esi,DWORD PTR [ebp-0x14]
6500c2c6:	mov    edi,DWORD PTR [ebp+0x8]
6500c2c9:	cmp    esi,edi
6500c2cb:	je     0x6500c2df
6500c2cd:	mov    ebx,DWORD PTR [ebp+0x10]
6500c2d0:	push   esi
6500c2d1:	mov    ecx,ebx
6500c2d3:	call   0x6500c340
6500c2d8:	add    esi,0x1c
6500c2db:	cmp    esi,edi
6500c2dd:	jne    0x6500c2d0
6500c2df:	xor    ebx,ebx
6500c2e1:	push   ebx
6500c2e2:	push   ebx
6500c2e3:	call   0x65012306
6500c2e8:	mov    ecx,DWORD PTR [ebp-0xc]
6500c2eb:	mov    DWORD PTR fs:0x0,ecx
6500c2f2:	pop    ecx
6500c2f3:	pop    edi
6500c2f4:	pop    esi
6500c2f5:	pop    ebx
6500c2f6:	mov    esp,ebp
6500c2f8:	pop    ebp
6500c2f9:	ret    
6500c2fa:	int3   
6500c2fb:	int3   
6500c2fc:	int3   
6500c2fd:	int3   
6500c2fe:	int3   
6500c2ff:	int3   
6500c300:	push   esi
6500c301:	mov    esi,DWORD PTR [esp+0x8]
6500c305:	push   edi
6500c306:	mov    edi,DWORD PTR [esp+0x10]
6500c30a:	cmp    esi,edi
6500c30c:	je     0x6500c338
6500c30e:	push   ebx
6500c30f:	xor    ebx,ebx
6500c311:	cmp    DWORD PTR [esi+0x18],0x10
6500c315:	jb     0x6500c323
6500c317:	mov    eax,DWORD PTR [esi+0x4]
6500c31a:	push   eax
6500c31b:	call   0x65011f02
6500c320:	add    esp,0x4
6500c323:	mov    DWORD PTR [esi+0x18],0xf
6500c32a:	mov    DWORD PTR [esi+0x14],ebx
6500c32d:	mov    BYTE PTR [esi+0x4],bl
6500c330:	add    esi,0x1c
6500c333:	cmp    esi,edi
6500c335:	jne    0x6500c311
6500c337:	pop    ebx
6500c338:	pop    edi
6500c339:	pop    esi
6500c33a:	ret    
6500c33b:	int3   
6500c33c:	int3   
6500c33d:	int3   
6500c33e:	int3   
6500c33f:	int3   
6500c340:	push   esi
6500c341:	mov    esi,DWORD PTR [esp+0x8]
6500c345:	cmp    DWORD PTR [esi+0x18],0x10
6500c349:	jb     0x6500c357
6500c34b:	mov    eax,DWORD PTR [esi+0x4]
6500c34e:	push   eax
6500c34f:	call   0x65011f02
6500c354:	add    esp,0x4
6500c357:	xor    eax,eax
6500c359:	mov    DWORD PTR [esi+0x18],0xf
6500c360:	mov    DWORD PTR [esi+0x14],eax
6500c363:	mov    BYTE PTR [esi+0x4],al
6500c366:	pop    esi
6500c367:	ret    0x4
6500c36a:	int3   
6500c36b:	int3   
6500c36c:	int3   
6500c36d:	int3   
6500c36e:	int3   
6500c36f:	int3   
6500c370:	push   ebp
6500c371:	mov    ebp,esp
6500c373:	push   0xffffffff
6500c375:	push   0x65022599
6500c37a:	mov    eax,fs:0x0
6500c380:	push   eax
6500c381:	sub    esp,0x44
6500c384:	mov    eax,ds:0x6502c09c
6500c389:	xor    eax,ebp
6500c38b:	mov    DWORD PTR [ebp-0x14],eax
6500c38e:	push   ebx
6500c38f:	push   esi
6500c390:	push   edi
6500c391:	push   eax
6500c392:	lea    eax,[ebp-0xc]
6500c395:	mov    fs:0x0,eax
6500c39b:	mov    DWORD PTR [ebp-0x10],esp
6500c39e:	mov    esi,edx
6500c3a0:	xor    eax,eax
6500c3a2:	mov    edi,ecx
6500c3a4:	mov    DWORD PTR [ebp-0x44],esi
6500c3a7:	mov    DWORD PTR [ebp-0x48],esi
6500c3aa:	mov    DWORD PTR [ebp-0x18],0xf
6500c3b1:	mov    DWORD PTR [ebp-0x1c],eax
6500c3b4:	mov    BYTE PTR [ebp-0x2c],al
6500c3b7:	mov    DWORD PTR [ebp-0x4],eax
6500c3ba:	mov    BYTE PTR [ebp-0x4],0x1
6500c3be:	mov    edi,edi
6500c3c0:	cmp    edi,DWORD PTR [ebp+0x8]
6500c3c3:	je     0x6500c479
6500c3c9:	mov    DWORD PTR [ebp-0x4c],esi
6500c3cc:	mov    DWORD PTR [ebp-0x50],esi
6500c3cf:	cmp    esi,eax
6500c3d1:	mov    BYTE PTR [ebp-0x4],0x2
6500c3d5:	je     0x6500c3f2
6500c3d7:	push   0xffffffff
6500c3d9:	mov    DWORD PTR [esi+0x14],eax
6500c3dc:	mov    DWORD PTR [esi+0x18],0xf
6500c3e3:	push   eax
6500c3e4:	mov    BYTE PTR [esi+0x4],al
6500c3e7:	lea    eax,[ebp-0x30]
6500c3ea:	push   eax
6500c3eb:	mov    ecx,esi
6500c3ed:	call   0x65001780
6500c3f2:	mov    BYTE PTR [ebp-0x4],0x1
6500c3f6:	mov    ebx,DWORD PTR [esi+0x10]
6500c3f9:	mov    eax,DWORD PTR [esi+0x4]
6500c3fc:	mov    ecx,DWORD PTR [esi+0x8]
6500c3ff:	mov    edx,DWORD PTR [esi+0xc]
6500c402:	mov    DWORD PTR [ebp-0x34],ebx
6500c405:	mov    ebx,DWORD PTR [edi+0x4]
6500c408:	mov    DWORD PTR [esi+0x4],ebx
6500c40b:	mov    ebx,DWORD PTR [edi+0x8]
6500c40e:	mov    DWORD PTR [esi+0x8],ebx
6500c411:	mov    ebx,DWORD PTR [edi+0xc]
6500c414:	mov    DWORD PTR [esi+0xc],ebx
6500c417:	mov    ebx,DWORD PTR [edi+0x10]
6500c41a:	mov    DWORD PTR [esi+0x10],ebx
6500c41d:	mov    DWORD PTR [edi+0x4],eax
6500c420:	mov    DWORD PTR [edi+0x8],ecx
6500c423:	mov    ecx,DWORD PTR [ebp-0x34]
6500c426:	mov    DWORD PTR [edi+0xc],edx
6500c429:	mov    edx,DWORD PTR [edi+0x14]
6500c42c:	mov    DWORD PTR [edi+0x10],ecx
6500c42f:	mov    eax,DWORD PTR [esi+0x14]
6500c432:	mov    DWORD PTR [esi+0x14],edx
6500c435:	mov    ecx,DWORD PTR [edi+0x18]
6500c438:	mov    DWORD PTR [edi+0x14],eax
6500c43b:	mov    eax,DWORD PTR [esi+0x18]
6500c43e:	mov    DWORD PTR [esi+0x18],ecx
6500c441:	mov    DWORD PTR [edi+0x18],eax
6500c444:	add    esi,0x1c
6500c447:	add    edi,0x1c
6500c44a:	mov    DWORD PTR [ebp-0x44],esi
6500c44d:	xor    eax,eax
6500c44f:	jmp    0x6500c3c0
6500c454:	mov    esi,DWORD PTR [ebp-0x48]
6500c457:	mov    edi,DWORD PTR [ebp-0x44]
6500c45a:	cmp    esi,edi
6500c45c:	je     0x6500c470
6500c45e:	mov    ebx,DWORD PTR [ebp+0xc]
6500c461:	push   esi
6500c462:	mov    ecx,ebx
6500c464:	call   0x6500c340
6500c469:	add    esi,0x1c
6500c46c:	cmp    esi,edi
6500c46e:	jne    0x6500c461
6500c470:	push   0x0
6500c472:	push   0x0
6500c474:	call   0x65012306
6500c479:	cmp    DWORD PTR [ebp-0x18],0x10
6500c47d:	jb     0x6500c48b
6500c47f:	mov    edx,DWORD PTR [ebp-0x2c]
6500c482:	push   edx
6500c483:	call   0x65011f02
6500c488:	add    esp,0x4
6500c48b:	mov    eax,esi
6500c48d:	mov    ecx,DWORD PTR [ebp-0xc]
6500c490:	mov    DWORD PTR fs:0x0,ecx
6500c497:	pop    ecx
6500c498:	pop    edi
6500c499:	pop    esi
6500c49a:	pop    ebx
6500c49b:	mov    ecx,DWORD PTR [ebp-0x14]
6500c49e:	xor    ecx,ebp
6500c4a0:	call   0x6501275c
6500c4a5:	mov    esp,ebp
6500c4a7:	pop    ebp
6500c4a8:	ret    
6500c4a9:	int3   
6500c4aa:	int3   
6500c4ab:	int3   
6500c4ac:	int3   
6500c4ad:	int3   
6500c4ae:	int3   
6500c4af:	int3   
6500c4b0:	push   ecx
6500c4b1:	mov    eax,ds:0x6502c09c
6500c4b6:	xor    eax,esp
6500c4b8:	mov    DWORD PTR [esp],eax
6500c4bb:	cmp    DWORD PTR [esp+0x8],ecx
6500c4bf:	mov    eax,DWORD PTR [esp+0xc]
6500c4c3:	je     0x6500c528
6500c4c5:	push   ebx
6500c4c6:	push   ebp
6500c4c7:	push   esi
6500c4c8:	push   edi
6500c4c9:	lea    esp,[esp+0x0]
6500c4d0:	mov    ebp,DWORD PTR [ecx-0x18]
6500c4d3:	mov    edx,DWORD PTR [eax-0x18]
6500c4d6:	mov    esi,DWORD PTR [eax-0x14]
6500c4d9:	mov    edi,DWORD PTR [eax-0x10]
6500c4dc:	mov    ebx,DWORD PTR [eax-0xc]
6500c4df:	sub    ecx,0x1c
6500c4e2:	sub    eax,0x1c
6500c4e5:	cmp    ecx,DWORD PTR [esp+0x18]
6500c4e9:	mov    DWORD PTR [eax+0x4],ebp
6500c4ec:	mov    ebp,DWORD PTR [ecx+0x8]
6500c4ef:	mov    DWORD PTR [eax+0x8],ebp
6500c4f2:	mov    ebp,DWORD PTR [ecx+0xc]
6500c4f5:	mov    DWORD PTR [eax+0xc],ebp
6500c4f8:	mov    ebp,DWORD PTR [ecx+0x10]
6500c4fb:	mov    DWORD PTR [eax+0x10],ebp
6500c4fe:	mov    DWORD PTR [ecx+0x4],edx
6500c501:	mov    DWORD PTR [ecx+0x8],esi
6500c504:	mov    esi,DWORD PTR [ecx+0x14]
6500c507:	mov    DWORD PTR [ecx+0xc],edi
6500c50a:	mov    DWORD PTR [ecx+0x10],ebx
6500c50d:	mov    edx,DWORD PTR [eax+0x14]
6500c510:	mov    DWORD PTR [eax+0x14],esi
6500c513:	mov    esi,DWORD PTR [ecx+0x18]
6500c516:	mov    DWORD PTR [ecx+0x14],edx
6500c519:	mov    edx,DWORD PTR [eax+0x18]
6500c51c:	mov    DWORD PTR [eax+0x18],esi
6500c51f:	mov    DWORD PTR [ecx+0x18],edx
6500c522:	jne    0x6500c4d0
6500c524:	pop    edi
6500c525:	pop    esi
6500c526:	pop    ebp
6500c527:	pop    ebx
6500c528:	mov    ecx,DWORD PTR [esp]
6500c52b:	xor    ecx,esp
6500c52d:	call   0x6501275c
6500c532:	pop    ecx
6500c533:	ret    
6500c534:	int3   
6500c535:	int3   
6500c536:	int3   
6500c537:	int3   
6500c538:	int3   
6500c539:	int3   
6500c53a:	int3   
6500c53b:	int3   
6500c53c:	int3   
6500c53d:	int3   
6500c53e:	int3   
6500c53f:	int3   
6500c540:	sub    esp,0x800
6500c546:	push   ebx
6500c547:	push   ebp
6500c548:	xor    ecx,ecx
6500c54a:	push   esi
6500c54b:	lea    eax,[ecx+0x1]
6500c54e:	push   edi
6500c54f:	nop
6500c550:	mov    edx,eax
6500c552:	and    dl,0x80
6500c555:	neg    dl
6500c557:	lea    esi,[eax+eax*1]
6500c55a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6500c561:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6500c565:	sbb    edx,edx
6500c567:	and    edx,0x1b
6500c56a:	xor    edx,esi
6500c56c:	xor    edx,eax
6500c56e:	and    edx,0xff
6500c574:	add    ecx,0x1
6500c577:	cmp    ecx,0x100
6500c57d:	mov    eax,edx
6500c57f:	jl     0x6500c550
6500c581:	mov    eax,0x1
6500c586:	mov    ecx,0x6502e968
6500c58b:	jmp    0x6500c590
6500c58d:	lea    ecx,[ecx+0x0]
6500c590:	mov    edx,eax
6500c592:	and    dl,0x80
6500c595:	neg    dl
6500c597:	mov    DWORD PTR [ecx],eax
6500c599:	sbb    edx,edx
6500c59b:	and    edx,0x1b
6500c59e:	add    eax,eax
6500c5a0:	xor    edx,eax
6500c5a2:	and    edx,0xff
6500c5a8:	add    ecx,0x4
6500c5ab:	cmp    ecx,0x6502e990
6500c5b1:	mov    eax,edx
6500c5b3:	jl     0x6500c590
6500c5b5:	mov    BYTE PTR ds:0x6502e068,0x63
6500c5bc:	mov    BYTE PTR ds:0x650301f3,0x0
6500c5c3:	mov    ebx,0x1
6500c5c8:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6500c5cc:	add    ecx,ecx
6500c5ce:	add    ecx,ecx
6500c5d0:	lea    edx,[esp+0x80c]
6500c5d7:	sub    edx,ecx
6500c5d9:	mov    eax,DWORD PTR [edx]
6500c5db:	mov    ecx,eax
6500c5dd:	sar    ecx,0x7
6500c5e0:	lea    edx,[eax+eax*1]
6500c5e3:	or     ecx,edx
6500c5e5:	and    ecx,0xff
6500c5eb:	xor    eax,ecx
6500c5ed:	mov    edx,ecx
6500c5ef:	sar    edx,0x7
6500c5f2:	add    ecx,ecx
6500c5f4:	or     edx,ecx
6500c5f6:	and    edx,0xff
6500c5fc:	xor    eax,edx
6500c5fe:	mov    ecx,edx
6500c600:	add    edx,edx
6500c602:	sar    ecx,0x7
6500c605:	or     ecx,edx
6500c607:	and    ecx,0xff
6500c60d:	xor    eax,ecx
6500c60f:	mov    edx,ecx
6500c611:	sar    edx,0x7
6500c614:	add    ecx,ecx
6500c616:	or     edx,ecx
6500c618:	xor    edx,0x63
6500c61b:	and    edx,0xff
6500c621:	xor    eax,edx
6500c623:	mov    BYTE PTR [ebx+0x6502e068],al
6500c629:	mov    BYTE PTR [eax+0x65030190],bl
6500c62f:	add    ebx,0x1
6500c632:	cmp    ebx,0x100
6500c638:	jl     0x6500c5c8
6500c63a:	xor    ecx,ecx
6500c63c:	lea    esp,[esp+0x0]
6500c640:	movzx  edx,BYTE PTR [ecx+0x6502e068]
6500c647:	mov    eax,edx
6500c649:	and    al,0x80
6500c64b:	neg    al
6500c64d:	lea    esi,[edx+edx*1]
6500c650:	sbb    eax,eax
6500c652:	and    eax,0x1b
6500c655:	xor    eax,esi
6500c657:	and    eax,0xff
6500c65c:	mov    esi,eax
6500c65e:	xor    eax,edx
6500c660:	shl    eax,0x8
6500c663:	xor    eax,edx
6500c665:	shl    eax,0x8
6500c668:	xor    eax,edx
6500c66a:	shl    eax,0x8
6500c66d:	xor    eax,esi
6500c66f:	mov    DWORD PTR [ecx*4+0x6502fd90],eax
6500c676:	rol    eax,0x8
6500c679:	mov    DWORD PTR [ecx*4+0x6502f990],eax
6500c680:	rol    eax,0x8
6500c683:	mov    DWORD PTR [ecx*4+0x6502f590],eax
6500c68a:	rol    eax,0x8
6500c68d:	mov    DWORD PTR [ecx*4+0x6502f190],eax
6500c694:	movzx  eax,BYTE PTR [ecx+0x65030190]
6500c69b:	test   eax,eax
6500c69d:	je     0x6500c6f1
6500c69f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6500c6a3:	mov    edx,DWORD PTR [esp+0x48]
6500c6a7:	lea    eax,[esi+edx*1]
6500c6aa:	cdq    
6500c6ab:	mov    edi,0xff
6500c6b0:	idiv   edi
6500c6b2:	mov    eax,DWORD PTR [esp+0x34]
6500c6b6:	add    eax,esi
6500c6b8:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6500c6bf:	cdq    
6500c6c0:	idiv   edi
6500c6c2:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6500c6c9:	mov    edx,DWORD PTR [esp+0x44]
6500c6cd:	lea    eax,[esi+edx*1]
6500c6d0:	cdq    
6500c6d1:	idiv   edi
6500c6d3:	mov    eax,DWORD PTR [esp+0x3c]
6500c6d7:	add    eax,esi
6500c6d9:	mov    esi,0xff
6500c6de:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6500c6e5:	cdq    
6500c6e6:	idiv   esi
6500c6e8:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6500c6ef:	jmp    0x6500c6f9
6500c6f1:	xor    ebp,ebp
6500c6f3:	xor    ebx,ebx
6500c6f5:	xor    edi,edi
6500c6f7:	xor    edx,edx
6500c6f9:	shl    edx,0x8
6500c6fc:	xor    edx,edi
6500c6fe:	shl    edx,0x8
6500c701:	xor    edx,ebx
6500c703:	shl    edx,0x8
6500c706:	xor    edx,ebp
6500c708:	mov    DWORD PTR [ecx*4+0x6502ed90],edx
6500c70f:	rol    edx,0x8
6500c712:	mov    DWORD PTR [ecx*4+0x6502e990],edx
6500c719:	rol    edx,0x8
6500c71c:	mov    DWORD PTR [ecx*4+0x6502e568],edx
6500c723:	rol    edx,0x8
6500c726:	mov    DWORD PTR [ecx*4+0x6502e168],edx
6500c72d:	add    ecx,0x1
6500c730:	cmp    ecx,0x100
6500c736:	jl     0x6500c640
6500c73c:	pop    edi
6500c73d:	pop    esi
6500c73e:	pop    ebp
6500c73f:	pop    ebx
6500c740:	add    esp,0x800
6500c746:	ret    
6500c747:	int3   
6500c748:	int3   
6500c749:	int3   
6500c74a:	int3   
6500c74b:	int3   
6500c74c:	int3   
6500c74d:	int3   
6500c74e:	int3   
6500c74f:	int3   
6500c750:	cmp    DWORD PTR ds:0x65030294,0x0
6500c757:	push   ebx
6500c758:	push   esi
6500c759:	push   edi
6500c75a:	mov    edi,eax
6500c75c:	jne    0x6500c76d
6500c75e:	call   0x6500c540
6500c763:	mov    DWORD PTR ds:0x65030294,0x1
6500c76d:	lea    eax,[edi+0x8]
6500c770:	mov    ecx,0x6502d38a
6500c775:	mov    esi,eax
6500c777:	mov    DWORD PTR [edi],0xa
6500c77d:	mov    DWORD PTR [edi+0x4],eax
6500c780:	sub    esi,ecx
6500c782:	movzx  ebx,BYTE PTR [ecx-0x1]
6500c786:	xor    edx,edx
6500c788:	mov    dh,BYTE PTR [ecx+0x1]
6500c78b:	add    ecx,0x4
6500c78e:	mov    dl,BYTE PTR [ecx-0x4]
6500c791:	shl    edx,0x8
6500c794:	or     edx,ebx
6500c796:	movzx  ebx,BYTE PTR [ecx-0x6]
6500c79a:	shl    edx,0x8
6500c79d:	or     edx,ebx
6500c79f:	cmp    ecx,0x6502d39a
6500c7a5:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6500c7a9:	jl     0x6500c782
6500c7ab:	mov    edi,DWORD PTR [edi]
6500c7ad:	sub    edi,0xa
6500c7b0:	je     0x6500ca6c
6500c7b6:	sub    edi,0x2
6500c7b9:	je     0x6500c89f
6500c7bf:	sub    edi,0x2
6500c7c2:	jne    0x6500cc4f
6500c7c8:	push   ebp
6500c7c9:	mov    ebp,0x6502e968
6500c7ce:	mov    edi,edi
6500c7d0:	mov    edi,DWORD PTR [eax+0x1c]
6500c7d3:	xor    edx,edx
6500c7d5:	mov    ecx,edi
6500c7d7:	and    ecx,0xff
6500c7dd:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c7e3:	movzx  ecx,BYTE PTR [eax+0x1f]
6500c7e7:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c7ee:	xor    edx,ecx
6500c7f0:	movzx  ecx,BYTE PTR [eax+0x1e]
6500c7f4:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c7fb:	shl    edx,0x8
6500c7fe:	xor    edx,ecx
6500c800:	movzx  ecx,BYTE PTR [eax+0x1d]
6500c804:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c80b:	mov    esi,DWORD PTR [eax+0x8]
6500c80e:	shl    edx,0x8
6500c811:	xor    edx,ecx
6500c813:	xor    edx,DWORD PTR [eax]
6500c815:	xor    ebx,ebx
6500c817:	mov    ecx,edx
6500c819:	xor    ecx,DWORD PTR [ebp+0x0]
6500c81c:	mov    edx,DWORD PTR [eax+0x4]
6500c81f:	xor    edx,ecx
6500c821:	mov    DWORD PTR [eax+0x20],ecx
6500c824:	mov    ecx,DWORD PTR [eax+0xc]
6500c827:	xor    esi,edx
6500c829:	xor    ecx,esi
6500c82b:	mov    DWORD PTR [eax+0x2c],ecx
6500c82e:	mov    DWORD PTR [eax+0x24],edx
6500c831:	movzx  edx,BYTE PTR [eax+0x2f]
6500c835:	mov    DWORD PTR [eax+0x28],esi
6500c838:	mov    bh,BYTE PTR [edx+0x6502e068]
6500c83e:	movzx  edx,BYTE PTR [eax+0x2e]
6500c842:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c849:	xor    ebx,edx
6500c84b:	movzx  edx,BYTE PTR [eax+0x2d]
6500c84f:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c856:	and    ecx,0xff
6500c85c:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c863:	shl    ebx,0x8
6500c866:	xor    ebx,edx
6500c868:	mov    edx,DWORD PTR [eax+0x14]
6500c86b:	shl    ebx,0x8
6500c86e:	xor    ecx,ebx
6500c870:	xor    ecx,DWORD PTR [eax+0x10]
6500c873:	add    ebp,0x4
6500c876:	xor    edx,ecx
6500c878:	mov    DWORD PTR [eax+0x30],ecx
6500c87b:	mov    ecx,DWORD PTR [eax+0x18]
6500c87e:	xor    ecx,edx
6500c880:	mov    DWORD PTR [eax+0x38],ecx
6500c883:	xor    ecx,edi
6500c885:	mov    DWORD PTR [eax+0x34],edx
6500c888:	mov    DWORD PTR [eax+0x3c],ecx
6500c88b:	add    eax,0x20
6500c88e:	cmp    ebp,0x6502e984
6500c894:	jl     0x6500c7d0
6500c89a:	pop    ebp
6500c89b:	pop    edi
6500c89c:	pop    esi
6500c89d:	pop    ebx
6500c89e:	ret    
6500c89f:	mov    esi,0x6502e96c
6500c8a4:	mov    edi,DWORD PTR [eax+0x14]
6500c8a7:	xor    ecx,ecx
6500c8a9:	mov    edx,edi
6500c8ab:	and    edx,0xff
6500c8b1:	mov    ch,BYTE PTR [edx+0x6502e068]
6500c8b7:	movzx  edx,BYTE PTR [eax+0x17]
6500c8bb:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8c2:	xor    ecx,edx
6500c8c4:	movzx  edx,BYTE PTR [eax+0x16]
6500c8c8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8cf:	shl    ecx,0x8
6500c8d2:	xor    ecx,edx
6500c8d4:	movzx  edx,BYTE PTR [eax+0x15]
6500c8d8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500c8df:	shl    ecx,0x8
6500c8e2:	xor    ecx,edx
6500c8e4:	xor    ecx,DWORD PTR [esi-0x4]
6500c8e7:	mov    edx,DWORD PTR [eax+0x4]
6500c8ea:	xor    ecx,DWORD PTR [eax]
6500c8ec:	xor    edx,ecx
6500c8ee:	mov    DWORD PTR [eax+0x18],ecx
6500c8f1:	mov    ecx,DWORD PTR [eax+0x8]
6500c8f4:	xor    ecx,edx
6500c8f6:	mov    DWORD PTR [eax+0x1c],edx
6500c8f9:	mov    edx,DWORD PTR [eax+0xc]
6500c8fc:	xor    edx,ecx
6500c8fe:	mov    DWORD PTR [eax+0x20],ecx
6500c901:	mov    ecx,DWORD PTR [eax+0x10]
6500c904:	xor    ecx,edx
6500c906:	mov    DWORD PTR [eax+0x28],ecx
6500c909:	mov    DWORD PTR [eax+0x24],edx
6500c90c:	xor    ecx,edi
6500c90e:	mov    DWORD PTR [eax+0x2c],ecx
6500c911:	and    ecx,0xff
6500c917:	xor    edx,edx
6500c919:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c91f:	movzx  ecx,BYTE PTR [eax+0x2f]
6500c923:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c92a:	xor    edx,ecx
6500c92c:	movzx  ecx,BYTE PTR [eax+0x2e]
6500c930:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c937:	shl    edx,0x8
6500c93a:	xor    edx,ecx
6500c93c:	movzx  ecx,BYTE PTR [eax+0x2d]
6500c940:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c947:	mov    edi,DWORD PTR [eax+0x28]
6500c94a:	shl    edx,0x8
6500c94d:	xor    edx,ecx
6500c94f:	xor    edx,DWORD PTR [eax+0x18]
6500c952:	mov    ecx,edx
6500c954:	xor    ecx,DWORD PTR [esi]
6500c956:	mov    edx,DWORD PTR [eax+0x1c]
6500c959:	xor    edx,ecx
6500c95b:	mov    DWORD PTR [eax+0x30],ecx
6500c95e:	mov    ecx,DWORD PTR [eax+0x20]
6500c961:	xor    ecx,edx
6500c963:	mov    DWORD PTR [eax+0x34],edx
6500c966:	mov    edx,DWORD PTR [eax+0x24]
6500c969:	xor    edx,ecx
6500c96b:	mov    DWORD PTR [eax+0x38],ecx
6500c96e:	mov    ecx,DWORD PTR [eax+0x2c]
6500c971:	xor    edi,edx
6500c973:	mov    DWORD PTR [eax+0x3c],edx
6500c976:	xor    ecx,edi
6500c978:	mov    DWORD PTR [eax+0x44],ecx
6500c97b:	and    ecx,0xff
6500c981:	xor    edx,edx
6500c983:	mov    DWORD PTR [eax+0x40],edi
6500c986:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c98c:	movzx  ecx,BYTE PTR [eax+0x47]
6500c990:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c997:	xor    edx,ecx
6500c999:	movzx  ecx,BYTE PTR [eax+0x46]
6500c99d:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9a4:	shl    edx,0x8
6500c9a7:	xor    edx,ecx
6500c9a9:	movzx  ecx,BYTE PTR [eax+0x45]
6500c9ad:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500c9b4:	shl    edx,0x8
6500c9b7:	xor    edx,ecx
6500c9b9:	xor    edx,DWORD PTR [esi+0x4]
6500c9bc:	mov    ecx,edx
6500c9be:	xor    ecx,DWORD PTR [eax+0x30]
6500c9c1:	mov    edx,DWORD PTR [eax+0x34]
6500c9c4:	xor    edx,ecx
6500c9c6:	mov    DWORD PTR [eax+0x48],ecx
6500c9c9:	mov    ecx,DWORD PTR [eax+0x38]
6500c9cc:	xor    ecx,edx
6500c9ce:	mov    DWORD PTR [eax+0x4c],edx
6500c9d1:	mov    edx,DWORD PTR [eax+0x3c]
6500c9d4:	xor    edx,ecx
6500c9d6:	mov    DWORD PTR [eax+0x50],ecx
6500c9d9:	mov    ecx,DWORD PTR [eax+0x44]
6500c9dc:	xor    edi,edx
6500c9de:	mov    DWORD PTR [eax+0x54],edx
6500c9e1:	xor    ecx,edi
6500c9e3:	mov    DWORD PTR [eax+0x5c],ecx
6500c9e6:	and    ecx,0xff
6500c9ec:	xor    edx,edx
6500c9ee:	mov    DWORD PTR [eax+0x58],edi
6500c9f1:	mov    dh,BYTE PTR [ecx+0x6502e068]
6500c9f7:	movzx  ecx,BYTE PTR [eax+0x5f]
6500c9fb:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca02:	xor    edx,ecx
6500ca04:	movzx  ecx,BYTE PTR [eax+0x5e]
6500ca08:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca0f:	shl    edx,0x8
6500ca12:	xor    edx,ecx
6500ca14:	movzx  ecx,BYTE PTR [eax+0x5d]
6500ca18:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500ca1f:	shl    edx,0x8
6500ca22:	xor    edx,ecx
6500ca24:	xor    edx,DWORD PTR [esi+0x8]
6500ca27:	add    esi,0x10
6500ca2a:	mov    ecx,edx
6500ca2c:	xor    ecx,DWORD PTR [eax+0x48]
6500ca2f:	mov    edx,DWORD PTR [eax+0x4c]
6500ca32:	xor    edx,ecx
6500ca34:	mov    DWORD PTR [eax+0x60],ecx
6500ca37:	mov    ecx,DWORD PTR [eax+0x50]
6500ca3a:	xor    ecx,edx
6500ca3c:	mov    DWORD PTR [eax+0x64],edx
6500ca3f:	mov    edx,DWORD PTR [eax+0x54]
6500ca42:	xor    edx,ecx
6500ca44:	mov    DWORD PTR [eax+0x68],ecx
6500ca47:	mov    DWORD PTR [eax+0x6c],edx
6500ca4a:	mov    ecx,edi
6500ca4c:	xor    ecx,edx
6500ca4e:	mov    edx,DWORD PTR [eax+0x5c]
6500ca51:	xor    edx,ecx
6500ca53:	mov    DWORD PTR [eax+0x70],ecx
6500ca56:	mov    DWORD PTR [eax+0x74],edx
6500ca59:	add    eax,0x60
6500ca5c:	cmp    esi,0x6502e98c
6500ca62:	jl     0x6500c8a4
6500ca68:	pop    edi
6500ca69:	pop    esi
6500ca6a:	pop    ebx
6500ca6b:	ret    
6500ca6c:	mov    ecx,0x6502e96c
6500ca71:	mov    esi,DWORD PTR [eax+0xc]
6500ca74:	mov    edx,esi
6500ca76:	and    edx,0xff
6500ca7c:	xor    ebx,ebx
6500ca7e:	mov    bh,BYTE PTR [edx+0x6502e068]
6500ca84:	movzx  edx,BYTE PTR [eax+0xf]
6500ca88:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ca8f:	xor    ebx,edx
6500ca91:	movzx  edx,BYTE PTR [eax+0xe]
6500ca95:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ca9c:	mov    edi,DWORD PTR [eax+0x4]
6500ca9f:	shl    ebx,0x8
6500caa2:	xor    ebx,edx
6500caa4:	movzx  edx,BYTE PTR [eax+0xd]
6500caa8:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500caaf:	shl    ebx,0x8
6500cab2:	xor    ebx,edx
6500cab4:	xor    ebx,DWORD PTR [ecx-0x4]
6500cab7:	mov    edx,ebx
6500cab9:	xor    edx,DWORD PTR [eax]
6500cabb:	mov    DWORD PTR [eax+0x10],edx
6500cabe:	xor    edi,edx
6500cac0:	mov    edx,DWORD PTR [eax+0x8]
6500cac3:	xor    edx,edi
6500cac5:	xor    esi,edx
6500cac7:	mov    DWORD PTR [eax+0x18],edx
6500caca:	mov    DWORD PTR [eax+0x1c],esi
6500cacd:	and    esi,0xff
6500cad3:	xor    edx,edx
6500cad5:	mov    DWORD PTR [eax+0x14],edi
6500cad8:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cade:	movzx  esi,BYTE PTR [eax+0x1f]
6500cae2:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cae9:	xor    edx,esi
6500caeb:	movzx  esi,BYTE PTR [eax+0x1e]
6500caef:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500caf6:	shl    edx,0x8
6500caf9:	xor    edx,esi
6500cafb:	movzx  esi,BYTE PTR [eax+0x1d]
6500caff:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb06:	shl    edx,0x8
6500cb09:	xor    edx,esi
6500cb0b:	xor    edx,DWORD PTR [ecx]
6500cb0d:	mov    esi,edi
6500cb0f:	xor    edx,DWORD PTR [eax+0x10]
6500cb12:	xor    esi,edx
6500cb14:	mov    DWORD PTR [eax+0x20],edx
6500cb17:	mov    edx,DWORD PTR [eax+0x18]
6500cb1a:	xor    edx,esi
6500cb1c:	mov    DWORD PTR [eax+0x24],esi
6500cb1f:	mov    esi,DWORD PTR [eax+0x1c]
6500cb22:	xor    esi,edx
6500cb24:	mov    DWORD PTR [eax+0x28],edx
6500cb27:	mov    DWORD PTR [eax+0x2c],esi
6500cb2a:	and    esi,0xff
6500cb30:	xor    edx,edx
6500cb32:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cb38:	movzx  esi,BYTE PTR [eax+0x2f]
6500cb3c:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb43:	xor    edx,esi
6500cb45:	movzx  esi,BYTE PTR [eax+0x2e]
6500cb49:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb50:	shl    edx,0x8
6500cb53:	xor    edx,esi
6500cb55:	movzx  esi,BYTE PTR [eax+0x2d]
6500cb59:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb60:	shl    edx,0x8
6500cb63:	xor    edx,esi
6500cb65:	xor    edx,DWORD PTR [ecx+0x4]
6500cb68:	mov    esi,DWORD PTR [eax+0x24]
6500cb6b:	xor    edx,DWORD PTR [eax+0x20]
6500cb6e:	xor    esi,edx
6500cb70:	mov    DWORD PTR [eax+0x30],edx
6500cb73:	mov    edx,DWORD PTR [eax+0x28]
6500cb76:	xor    edx,esi
6500cb78:	mov    DWORD PTR [eax+0x34],esi
6500cb7b:	mov    esi,DWORD PTR [eax+0x2c]
6500cb7e:	xor    esi,edx
6500cb80:	mov    DWORD PTR [eax+0x3c],esi
6500cb83:	mov    DWORD PTR [eax+0x38],edx
6500cb86:	and    esi,0xff
6500cb8c:	xor    edx,edx
6500cb8e:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cb94:	movzx  esi,BYTE PTR [eax+0x3f]
6500cb98:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cb9f:	xor    edx,esi
6500cba1:	movzx  esi,BYTE PTR [eax+0x3e]
6500cba5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbac:	shl    edx,0x8
6500cbaf:	xor    edx,esi
6500cbb1:	movzx  esi,BYTE PTR [eax+0x3d]
6500cbb5:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbbc:	shl    edx,0x8
6500cbbf:	xor    edx,esi
6500cbc1:	xor    edx,DWORD PTR [ecx+0x8]
6500cbc4:	mov    esi,DWORD PTR [eax+0x34]
6500cbc7:	xor    edx,DWORD PTR [eax+0x30]
6500cbca:	add    ecx,0x14
6500cbcd:	xor    esi,edx
6500cbcf:	mov    DWORD PTR [eax+0x40],edx
6500cbd2:	mov    edx,DWORD PTR [eax+0x38]
6500cbd5:	xor    edx,esi
6500cbd7:	mov    DWORD PTR [eax+0x44],esi
6500cbda:	mov    esi,DWORD PTR [eax+0x3c]
6500cbdd:	xor    esi,edx
6500cbdf:	mov    DWORD PTR [eax+0x48],edx
6500cbe2:	mov    DWORD PTR [eax+0x4c],esi
6500cbe5:	and    esi,0xff
6500cbeb:	xor    edx,edx
6500cbed:	mov    dh,BYTE PTR [esi+0x6502e068]
6500cbf3:	movzx  esi,BYTE PTR [eax+0x4f]
6500cbf7:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cbfe:	xor    edx,esi
6500cc00:	movzx  esi,BYTE PTR [eax+0x4e]
6500cc04:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc0b:	shl    edx,0x8
6500cc0e:	xor    edx,esi
6500cc10:	movzx  esi,BYTE PTR [eax+0x4d]
6500cc14:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500cc1b:	shl    edx,0x8
6500cc1e:	xor    edx,esi
6500cc20:	xor    edx,DWORD PTR [ecx-0x8]
6500cc23:	mov    esi,DWORD PTR [eax+0x44]
6500cc26:	xor    edx,DWORD PTR [eax+0x40]
6500cc29:	add    eax,0x50
6500cc2c:	xor    esi,edx
6500cc2e:	mov    DWORD PTR [eax],edx
6500cc30:	mov    edx,DWORD PTR [eax-0x8]
6500cc33:	xor    edx,esi
6500cc35:	mov    DWORD PTR [eax+0x4],esi
6500cc38:	mov    esi,DWORD PTR [eax-0x4]
6500cc3b:	xor    esi,edx
6500cc3d:	cmp    ecx,0x6502e994
6500cc43:	mov    DWORD PTR [eax+0x8],edx
6500cc46:	mov    DWORD PTR [eax+0xc],esi
6500cc49:	jl     0x6500ca71
6500cc4f:	pop    edi
6500cc50:	pop    esi
6500cc51:	pop    ebx
6500cc52:	ret    
6500cc53:	int3   
6500cc54:	int3   
6500cc55:	int3   
6500cc56:	int3   
6500cc57:	int3   
6500cc58:	int3   
6500cc59:	int3   
6500cc5a:	int3   
6500cc5b:	int3   
6500cc5c:	int3   
6500cc5d:	int3   
6500cc5e:	int3   
6500cc5f:	int3   
6500cc60:	sub    esp,0x11c
6500cc66:	push   esi
6500cc67:	push   edi
6500cc68:	mov    edi,eax
6500cc6a:	lea    esi,[edi+0x8]
6500cc6d:	lea    eax,[esp+0x8]
6500cc71:	mov    DWORD PTR [edi],0xa
6500cc77:	mov    DWORD PTR [edi+0x4],esi
6500cc7a:	call   0x6500c750
6500cc7f:	mov    eax,DWORD PTR [esp+0x8]
6500cc83:	shl    eax,0x4
6500cc86:	add    eax,DWORD PTR [esp+0xc]
6500cc8a:	add    esi,0x4
6500cc8d:	mov    ecx,DWORD PTR [eax]
6500cc8f:	mov    DWORD PTR [esi-0x4],ecx
6500cc92:	mov    edx,DWORD PTR [eax+0x4]
6500cc95:	add    eax,0x4
6500cc98:	mov    DWORD PTR [esi],edx
6500cc9a:	mov    ecx,DWORD PTR [eax+0x4]
6500cc9d:	add    eax,0x4
6500cca0:	add    esi,0x4
6500cca3:	mov    DWORD PTR [esi],ecx
6500cca5:	mov    edx,DWORD PTR [eax+0x4]
6500cca8:	add    eax,0x4
6500ccab:	add    esi,0x4
6500ccae:	mov    DWORD PTR [esi],edx
6500ccb0:	mov    ecx,DWORD PTR [edi]
6500ccb2:	sub    ecx,0x1
6500ccb5:	add    esi,0x4
6500ccb8:	sub    eax,0x1c
6500ccbb:	test   ecx,ecx
6500ccbd:	jle    0x6500ce15
6500ccc3:	movzx  edx,BYTE PTR [eax+0x3]
6500ccc7:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500ccce:	mov    edx,DWORD PTR [edx*4+0x6502e168]
6500ccd5:	movzx  edi,BYTE PTR [eax+0x2]
6500ccd9:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cce0:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cce7:	movzx  edi,BYTE PTR [eax+0x1]
6500cceb:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ccf2:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500ccf9:	mov    edi,DWORD PTR [eax]
6500ccfb:	and    edi,0xff
6500cd01:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd08:	xor    edx,DWORD PTR [edi*4+0x6502ed90]
6500cd0f:	add    eax,0x10
6500cd12:	mov    DWORD PTR [esi],edx
6500cd14:	mov    edx,DWORD PTR [eax-0xc]
6500cd17:	movzx  edi,BYTE PTR [eax-0x9]
6500cd1b:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd22:	and    edx,0xff
6500cd28:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cd2f:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cd36:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cd3d:	movzx  edi,BYTE PTR [eax-0xa]
6500cd41:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd48:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cd4f:	movzx  edi,BYTE PTR [eax-0xb]
6500cd53:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd5a:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cd61:	sub    ecx,0x1
6500cd64:	mov    DWORD PTR [esi+0x4],edx
6500cd67:	mov    edx,DWORD PTR [eax-0x8]
6500cd6a:	movzx  edi,BYTE PTR [eax-0x5]
6500cd6e:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd75:	and    edx,0xff
6500cd7b:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cd82:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cd89:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cd90:	movzx  edi,BYTE PTR [eax-0x6]
6500cd94:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cd9b:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cda2:	movzx  edi,BYTE PTR [eax-0x7]
6500cda6:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdad:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500cdb4:	add    esi,0x10
6500cdb7:	mov    DWORD PTR [esi-0x8],edx
6500cdba:	mov    edx,DWORD PTR [eax-0x4]
6500cdbd:	movzx  edi,BYTE PTR [eax-0x1]
6500cdc1:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdc8:	and    edx,0xff
6500cdce:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500cdd5:	mov    edx,DWORD PTR [edx*4+0x6502ed90]
6500cddc:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500cde3:	movzx  edi,BYTE PTR [eax-0x2]
6500cde7:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500cdee:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500cdf5:	movzx  edi,BYTE PTR [eax-0x3]
6500cdf9:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500ce00:	xor    edx,DWORD PTR [edi*4+0x6502e990]
6500ce07:	sub    eax,0x20
6500ce0a:	test   ecx,ecx
6500ce0c:	mov    DWORD PTR [esi-0x4],edx
6500ce0f:	jg     0x6500ccc3
6500ce15:	mov    ecx,DWORD PTR [eax]
6500ce17:	mov    DWORD PTR [esi],ecx
6500ce19:	mov    edx,DWORD PTR [eax+0x4]
6500ce1c:	add    esi,0x4
6500ce1f:	add    eax,0x4
6500ce22:	mov    DWORD PTR [esi],edx
6500ce24:	mov    ecx,DWORD PTR [eax+0x4]
6500ce27:	add    esi,0x4
6500ce2a:	add    eax,0x4
6500ce2d:	mov    DWORD PTR [esi],ecx
6500ce2f:	mov    edx,DWORD PTR [eax+0x4]
6500ce32:	pop    edi
6500ce33:	mov    DWORD PTR [esi+0x4],edx
6500ce36:	pop    esi
6500ce37:	add    esp,0x11c
6500ce3d:	ret    
6500ce3e:	int3   
6500ce3f:	int3   
6500ce40:	sub    esp,0x10
6500ce43:	xor    ecx,ecx
6500ce45:	push   ebx
6500ce46:	push   ebp
6500ce47:	mov    ebp,DWORD PTR [esp+0x1c]
6500ce4b:	push   esi
6500ce4c:	push   edi
6500ce4d:	mov    edi,eax
6500ce4f:	mov    ch,BYTE PTR [edi+0x3]
6500ce52:	movzx  edx,BYTE PTR [edi+0x1]
6500ce56:	mov    eax,DWORD PTR [ebp+0x4]
6500ce59:	movzx  esi,BYTE PTR [edi+0x9]
6500ce5d:	mov    cl,BYTE PTR [edi+0x2]
6500ce60:	movzx  ebx,BYTE PTR [edi+0xd]
6500ce64:	add    eax,0x4
6500ce67:	add    eax,0x4
6500ce6a:	add    eax,0x4
6500ce6d:	shl    ecx,0x8
6500ce70:	or     ecx,edx
6500ce72:	movzx  edx,BYTE PTR [edi]
6500ce75:	shl    ecx,0x8
6500ce78:	or     ecx,edx
6500ce7a:	xor    ecx,DWORD PTR [eax-0xc]
6500ce7d:	movzx  edx,BYTE PTR [edi+0x5]
6500ce81:	mov    DWORD PTR [esp+0x24],ecx
6500ce85:	xor    ecx,ecx
6500ce87:	mov    ch,BYTE PTR [edi+0x7]
6500ce8a:	add    eax,0x4
6500ce8d:	mov    cl,BYTE PTR [edi+0x6]
6500ce90:	shl    ecx,0x8
6500ce93:	or     ecx,edx
6500ce95:	movzx  edx,BYTE PTR [edi+0x4]
6500ce99:	shl    ecx,0x8
6500ce9c:	or     ecx,edx
6500ce9e:	xor    edx,edx
6500cea0:	mov    dh,BYTE PTR [edi+0xb]
6500cea3:	xor    ecx,DWORD PTR [eax-0xc]
6500cea6:	mov    dl,BYTE PTR [edi+0xa]
6500cea9:	shl    edx,0x8
6500ceac:	or     edx,esi
6500ceae:	movzx  esi,BYTE PTR [edi+0x8]
6500ceb2:	shl    edx,0x8
6500ceb5:	or     edx,esi
6500ceb7:	xor    edx,DWORD PTR [eax-0x8]
6500ceba:	mov    esi,edx
6500cebc:	xor    edx,edx
6500cebe:	mov    dh,BYTE PTR [edi+0xf]
6500cec1:	mov    DWORD PTR [esp+0x10],esi
6500cec5:	mov    dl,BYTE PTR [edi+0xe]
6500cec8:	movzx  edi,BYTE PTR [edi+0xc]
6500cecc:	shl    edx,0x8
6500cecf:	or     edx,ebx
6500ced1:	shl    edx,0x8
6500ced4:	or     edx,edi
6500ced6:	xor    edx,DWORD PTR [eax-0x4]
6500ced9:	cmp    DWORD PTR [esp+0x28],0x0
6500cede:	jne    0x6500d379
6500cee4:	mov    ebp,DWORD PTR [ebp+0x0]
6500cee7:	sar    ebp,1
6500cee9:	sub    ebp,0x1
6500ceec:	test   ebp,ebp
6500ceee:	jle    0x6500d11f
6500cef4:	mov    ebx,esi
6500cef6:	movzx  edi,dh
6500cef9:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500cf00:	mov    edi,ecx
6500cf02:	shr    edi,0x18
6500cf05:	shr    ebx,0x10
6500cf08:	and    ebx,0xff
6500cf0e:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500cf15:	add    eax,0x4
6500cf18:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf1f:	mov    edi,DWORD PTR [esp+0x24]
6500cf23:	and    edi,0xff
6500cf29:	mov    DWORD PTR [esp+0x28],esi
6500cf2d:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf34:	movzx  edi,BYTE PTR [esp+0x25]
6500cf39:	xor    esi,DWORD PTR [eax-0x4]
6500cf3c:	add    eax,0x4
6500cf3f:	mov    DWORD PTR [esp+0x14],esi
6500cf43:	mov    esi,edx
6500cf45:	shr    esi,0x10
6500cf48:	and    esi,0xff
6500cf4e:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500cf55:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500cf5c:	mov    edi,DWORD PTR [esp+0x10]
6500cf60:	shr    edi,0x18
6500cf63:	mov    DWORD PTR [esp+0x28],esi
6500cf67:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cf6e:	mov    edi,ecx
6500cf70:	and    edi,0xff
6500cf76:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cf7d:	mov    edi,DWORD PTR [esp+0x24]
6500cf81:	xor    esi,DWORD PTR [eax-0x4]
6500cf84:	shr    edi,0x10
6500cf87:	mov    DWORD PTR [esp+0x18],esi
6500cf8b:	movzx  esi,ch
6500cf8e:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500cf95:	and    edi,0xff
6500cf9b:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500cfa2:	mov    edi,edx
6500cfa4:	shr    edi,0x18
6500cfa7:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500cfae:	mov    edi,DWORD PTR [esp+0x10]
6500cfb2:	and    edi,0xff
6500cfb8:	mov    DWORD PTR [esp+0x28],esi
6500cfbc:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500cfc3:	shr    ecx,0x10
6500cfc6:	xor    esi,DWORD PTR [eax]
6500cfc8:	and    ecx,0xff
6500cfce:	mov    DWORD PTR [esp+0x28],esi
6500cfd2:	movzx  esi,BYTE PTR [esp+0x11]
6500cfd7:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500cfde:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500cfe5:	mov    ecx,DWORD PTR [esp+0x24]
6500cfe9:	mov    esi,DWORD PTR [esp+0x28]
6500cfed:	shr    ecx,0x18
6500cff0:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500cff7:	and    edx,0xff
6500cffd:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d004:	add    eax,0x4
6500d007:	xor    ebx,DWORD PTR [eax]
6500d009:	mov    ecx,esi
6500d00b:	shr    ecx,0x10
6500d00e:	and    ecx,0xff
6500d014:	movzx  edx,bh
6500d017:	mov    edi,DWORD PTR [edx*4+0x6502e990]
6500d01e:	xor    edi,DWORD PTR [ecx*4+0x6502e568]
6500d025:	mov    edx,DWORD PTR [esp+0x18]
6500d029:	mov    ecx,edx
6500d02b:	shr    ecx,0x18
6500d02e:	xor    edi,DWORD PTR [ecx*4+0x6502e168]
6500d035:	mov    ecx,DWORD PTR [esp+0x14]
6500d039:	and    ecx,0xff
6500d03f:	xor    edi,DWORD PTR [ecx*4+0x6502ed90]
6500d046:	add    eax,0x4
6500d049:	xor    edi,DWORD PTR [eax]
6500d04b:	mov    ecx,ebx
6500d04d:	shr    ecx,0x10
6500d050:	mov    DWORD PTR [esp+0x24],edi
6500d054:	movzx  edi,BYTE PTR [esp+0x15]
6500d059:	add    eax,0x4
6500d05c:	and    ecx,0xff
6500d062:	mov    ecx,DWORD PTR [ecx*4+0x6502e568]
6500d069:	xor    ecx,DWORD PTR [edi*4+0x6502e990]
6500d070:	shr    esi,0x18
6500d073:	xor    ecx,DWORD PTR [esi*4+0x6502e168]
6500d07a:	mov    esi,edx
6500d07c:	and    esi,0xff
6500d082:	xor    ecx,DWORD PTR [esi*4+0x6502ed90]
6500d089:	mov    esi,DWORD PTR [esp+0x14]
6500d08d:	xor    ecx,DWORD PTR [eax]
6500d08f:	movzx  edx,dh
6500d092:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d099:	mov    edi,DWORD PTR [esp+0x18]
6500d09d:	shr    esi,0x10
6500d0a0:	and    esi,0xff
6500d0a6:	xor    edx,DWORD PTR [esi*4+0x6502e568]
6500d0ad:	mov    esi,ebx
6500d0af:	shr    esi,0x18
6500d0b2:	xor    edx,DWORD PTR [esi*4+0x6502e168]
6500d0b9:	mov    esi,DWORD PTR [esp+0x28]
6500d0bd:	and    esi,0xff
6500d0c3:	xor    edx,DWORD PTR [esi*4+0x6502ed90]
6500d0ca:	add    eax,0x4
6500d0cd:	xor    edx,DWORD PTR [eax]
6500d0cf:	shr    edi,0x10
6500d0d2:	mov    esi,edx
6500d0d4:	movzx  edx,BYTE PTR [esp+0x29]
6500d0d9:	mov    edx,DWORD PTR [edx*4+0x6502e990]
6500d0e0:	and    edi,0xff
6500d0e6:	xor    edx,DWORD PTR [edi*4+0x6502e568]
6500d0ed:	mov    edi,DWORD PTR [esp+0x14]
6500d0f1:	shr    edi,0x18
6500d0f4:	xor    edx,DWORD PTR [edi*4+0x6502e168]
6500d0fb:	and    ebx,0xff
6500d101:	xor    edx,DWORD PTR [ebx*4+0x6502ed90]
6500d108:	add    eax,0x4
6500d10b:	xor    edx,DWORD PTR [eax]
6500d10d:	sub    ebp,0x1
6500d110:	add    eax,0x4
6500d113:	test   ebp,ebp
6500d115:	mov    DWORD PTR [esp+0x10],esi
6500d119:	jg     0x6500cef4
6500d11f:	mov    ebx,esi
6500d121:	movzx  edi,dh
6500d124:	mov    esi,DWORD PTR [edi*4+0x6502e990]
6500d12b:	mov    edi,ecx
6500d12d:	shr    edi,0x18
6500d130:	shr    ebx,0x10
6500d133:	and    ebx,0xff
6500d139:	xor    esi,DWORD PTR [ebx*4+0x6502e568]
6500d140:	add    eax,0x4
6500d143:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d14a:	mov    edi,DWORD PTR [esp+0x24]
6500d14e:	mov    DWORD PTR [esp+0x28],esi
6500d152:	and    edi,0xff
6500d158:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d15f:	movzx  edi,BYTE PTR [esp+0x25]
6500d164:	xor    esi,DWORD PTR [eax-0x4]
6500d167:	add    eax,0x4
6500d16a:	mov    DWORD PTR [esp+0x14],esi
6500d16e:	mov    esi,edx
6500d170:	shr    esi,0x10
6500d173:	and    esi,0xff
6500d179:	mov    esi,DWORD PTR [esi*4+0x6502e568]
6500d180:	xor    esi,DWORD PTR [edi*4+0x6502e990]
6500d187:	mov    edi,DWORD PTR [esp+0x10]
6500d18b:	shr    edi,0x18
6500d18e:	mov    DWORD PTR [esp+0x28],esi
6500d192:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d199:	mov    edi,ecx
6500d19b:	and    edi,0xff
6500d1a1:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d1a8:	mov    edi,DWORD PTR [esp+0x24]
6500d1ac:	xor    esi,DWORD PTR [eax-0x4]
6500d1af:	shr    edi,0x10
6500d1b2:	mov    DWORD PTR [esp+0x18],esi
6500d1b6:	movzx  esi,ch
6500d1b9:	mov    esi,DWORD PTR [esi*4+0x6502e990]
6500d1c0:	and    edi,0xff
6500d1c6:	xor    esi,DWORD PTR [edi*4+0x6502e568]
6500d1cd:	mov    edi,edx
6500d1cf:	shr    edi,0x18
6500d1d2:	xor    esi,DWORD PTR [edi*4+0x6502e168]
6500d1d9:	mov    edi,DWORD PTR [esp+0x10]
6500d1dd:	mov    DWORD PTR [esp+0x28],esi
6500d1e1:	and    edi,0xff
6500d1e7:	xor    esi,DWORD PTR [edi*4+0x6502ed90]
6500d1ee:	shr    ecx,0x10
6500d1f1:	xor    esi,DWORD PTR [eax]
6500d1f3:	and    ecx,0xff
6500d1f9:	mov    DWORD PTR [esp+0x28],esi
6500d1fd:	movzx  esi,BYTE PTR [esp+0x11]
6500d202:	mov    ebx,DWORD PTR [esi*4+0x6502e990]
6500d209:	xor    ebx,DWORD PTR [ecx*4+0x6502e568]
6500d210:	mov    ecx,DWORD PTR [esp+0x24]
6500d214:	mov    edi,DWORD PTR [esp+0x28]
6500d218:	shr    ecx,0x18
6500d21b:	xor    ebx,DWORD PTR [ecx*4+0x6502e168]
6500d222:	mov    ecx,DWORD PTR [esp+0x18]
6500d226:	and    edx,0xff
6500d22c:	xor    ebx,DWORD PTR [edx*4+0x6502ed90]
6500d233:	add    eax,0x4
6500d236:	xor    ebx,DWORD PTR [eax]
6500d238:	add    eax,0x4
6500d23b:	shr    ecx,0x18
6500d23e:	mov    DWORD PTR [esp+0x1c],eax
6500d242:	xor    eax,eax
6500d244:	mov    ah,BYTE PTR [ecx+0x65030190]
6500d24a:	mov    edx,edi
6500d24c:	shr    edx,0x10
6500d24f:	and    edx,0xff
6500d255:	movzx  edx,BYTE PTR [edx+0x65030190]
6500d25c:	movzx  ecx,bh
6500d25f:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d266:	xor    edx,eax
6500d268:	shl    edx,0x8
6500d26b:	xor    edx,ecx
6500d26d:	mov    ecx,DWORD PTR [esp+0x14]
6500d271:	and    ecx,0xff
6500d277:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d27e:	shl    edx,0x8
6500d281:	mov    DWORD PTR [esp+0x24],ebx
6500d285:	xor    edx,ecx
6500d287:	xor    ecx,ecx
6500d289:	shr    edi,0x18
6500d28c:	mov    ch,BYTE PTR [edi+0x65030190]
6500d292:	mov    eax,DWORD PTR [esp+0x1c]
6500d296:	xor    edx,DWORD PTR [eax]
6500d298:	shr    ebx,0x10
6500d29b:	and    ebx,0xff
6500d2a1:	movzx  esi,BYTE PTR [ebx+0x65030190]
6500d2a8:	xor    esi,ecx
6500d2aa:	mov    ecx,DWORD PTR [esp+0x14]
6500d2ae:	shl    esi,0x8
6500d2b1:	movzx  edi,ch
6500d2b4:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2bb:	xor    esi,edi
6500d2bd:	mov    edi,DWORD PTR [esp+0x18]
6500d2c1:	shl    esi,0x8
6500d2c4:	and    edi,0xff
6500d2ca:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d2d1:	xor    esi,edi
6500d2d3:	xor    esi,DWORD PTR [eax+0x4]
6500d2d6:	shr    ecx,0x10
6500d2d9:	mov    DWORD PTR [esp+0x1c],esi
6500d2dd:	and    ecx,0xff
6500d2e3:	movzx  esi,BYTE PTR [ecx+0x65030190]
6500d2ea:	mov    ecx,DWORD PTR [esp+0x24]
6500d2ee:	add    eax,0x4
6500d2f1:	shr    ecx,0x18
6500d2f4:	xor    ebx,ebx
6500d2f6:	mov    bh,BYTE PTR [ecx+0x65030190]
6500d2fc:	mov    ecx,DWORD PTR [esp+0x18]
6500d300:	movzx  edi,ch
6500d303:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d30a:	xor    esi,ebx
6500d30c:	shl    esi,0x8
6500d30f:	xor    esi,edi
6500d311:	mov    edi,DWORD PTR [esp+0x28]
6500d315:	shl    esi,0x8
6500d318:	and    edi,0xff
6500d31e:	movzx  edi,BYTE PTR [edi+0x65030190]
6500d325:	xor    esi,edi
6500d327:	xor    esi,DWORD PTR [eax+0x4]
6500d32a:	add    eax,0x4
6500d32d:	mov    DWORD PTR [esp+0x10],esi
6500d331:	mov    esi,DWORD PTR [esp+0x14]
6500d335:	shr    esi,0x18
6500d338:	shr    ecx,0x10
6500d33b:	xor    ebx,ebx
6500d33d:	mov    bh,BYTE PTR [esi+0x65030190]
6500d343:	movzx  esi,BYTE PTR [esp+0x29]
6500d348:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d34f:	and    ecx,0xff
6500d355:	movzx  ecx,BYTE PTR [ecx+0x65030190]
6500d35c:	xor    ecx,ebx
6500d35e:	shl    ecx,0x8
6500d361:	xor    ecx,esi
6500d363:	mov    esi,DWORD PTR [esp+0x24]
6500d367:	and    esi,0xff
6500d36d:	movzx  esi,BYTE PTR [esi+0x65030190]
6500d374:	jmp    0x6500d80c
6500d379:	mov    edi,DWORD PTR [ebp+0x0]
6500d37c:	sar    edi,1
6500d37e:	sub    edi,0x1
6500d381:	test   edi,edi
6500d383:	mov    DWORD PTR [esp+0x1c],edi
6500d387:	jle    0x6500d5c3
6500d38d:	lea    ecx,[ecx+0x0]
6500d390:	shr    esi,0x10
6500d393:	and    esi,0xff
6500d399:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d3a0:	movzx  edi,ch
6500d3a3:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d3aa:	mov    edi,edx
6500d3ac:	shr    edi,0x18
6500d3af:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d3b6:	mov    edi,DWORD PTR [esp+0x24]
6500d3ba:	mov    DWORD PTR [esp+0x28],esi
6500d3be:	and    edi,0xff
6500d3c4:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d3cb:	movzx  edi,BYTE PTR [esp+0x11]
6500d3d0:	xor    esi,DWORD PTR [eax]
6500d3d2:	add    eax,0x4
6500d3d5:	mov    DWORD PTR [esp+0x14],esi
6500d3d9:	mov    esi,edx
6500d3db:	shr    esi,0x10
6500d3de:	and    esi,0xff
6500d3e4:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d3eb:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d3f2:	mov    edi,DWORD PTR [esp+0x24]
6500d3f6:	mov    DWORD PTR [esp+0x28],esi
6500d3fa:	shr    edi,0x18
6500d3fd:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d404:	mov    edi,ecx
6500d406:	and    edi,0xff
6500d40c:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d413:	mov    edi,DWORD PTR [esp+0x24]
6500d417:	xor    esi,DWORD PTR [eax]
6500d419:	shr    edi,0x10
6500d41c:	mov    DWORD PTR [esp+0x18],esi
6500d420:	and    edi,0xff
6500d426:	movzx  esi,dh
6500d429:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d430:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d437:	mov    edi,ecx
6500d439:	shr    edi,0x18
6500d43c:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d443:	mov    edi,DWORD PTR [esp+0x10]
6500d447:	mov    DWORD PTR [esp+0x28],esi
6500d44b:	and    edi,0xff
6500d451:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d458:	add    eax,0x4
6500d45b:	xor    esi,DWORD PTR [eax]
6500d45d:	shr    ecx,0x10
6500d460:	mov    DWORD PTR [esp+0x28],esi
6500d464:	movzx  esi,BYTE PTR [esp+0x25]
6500d469:	and    ecx,0xff
6500d46f:	mov    ebx,DWORD PTR [ecx*4+0x6502f590]
6500d476:	xor    ebx,DWORD PTR [esi*4+0x6502f990]
6500d47d:	mov    ecx,DWORD PTR [esp+0x10]
6500d481:	shr    ecx,0x18
6500d484:	xor    ebx,DWORD PTR [ecx*4+0x6502f190]
6500d48b:	mov    ecx,DWORD PTR [esp+0x18]
6500d48f:	and    edx,0xff
6500d495:	xor    ebx,DWORD PTR [edx*4+0x6502fd90]
6500d49c:	mov    edx,DWORD PTR [esp+0x28]
6500d4a0:	xor    ebx,DWORD PTR [eax+0x4]
6500d4a3:	add    eax,0x4
6500d4a6:	mov    esi,edx
6500d4a8:	shr    esi,0x10
6500d4ab:	and    esi,0xff
6500d4b1:	mov    ebp,DWORD PTR [esi*4+0x6502f590]
6500d4b8:	movzx  edi,ch
6500d4bb:	xor    ebp,DWORD PTR [edi*4+0x6502f990]
6500d4c2:	mov    esi,ebx
6500d4c4:	shr    esi,0x18
6500d4c7:	xor    ebp,DWORD PTR [esi*4+0x6502f190]
6500d4ce:	mov    esi,DWORD PTR [esp+0x14]
6500d4d2:	mov    edi,esi
6500d4d4:	and    edi,0xff
6500d4da:	xor    ebp,DWORD PTR [edi*4+0x6502fd90]
6500d4e1:	add    eax,0x4
6500d4e4:	xor    ebp,DWORD PTR [eax]
6500d4e6:	mov    edi,ebx
6500d4e8:	shr    edi,0x10
6500d4eb:	add    eax,0x4
6500d4ee:	mov    DWORD PTR [esp+0x24],ebp
6500d4f2:	and    edi,0xff
6500d4f8:	movzx  edx,dh
6500d4fb:	mov    edi,DWORD PTR [edi*4+0x6502f590]
6500d502:	xor    edi,DWORD PTR [edx*4+0x6502f990]
6500d509:	mov    edx,esi
6500d50b:	shr    edx,0x18
6500d50e:	xor    edi,DWORD PTR [edx*4+0x6502f190]
6500d515:	shr    esi,0x10
6500d518:	and    esi,0xff
6500d51e:	movzx  edx,bh
6500d521:	mov    edx,DWORD PTR [edx*4+0x6502f990]
6500d528:	xor    edx,DWORD PTR [esi*4+0x6502f590]
6500d52f:	mov    esi,DWORD PTR [esp+0x18]
6500d533:	shr    esi,0x18
6500d536:	xor    edx,DWORD PTR [esi*4+0x6502f190]
6500d53d:	mov    esi,DWORD PTR [esp+0x28]
6500d541:	and    ecx,0xff
6500d547:	xor    edi,DWORD PTR [ecx*4+0x6502fd90]
6500d54e:	and    esi,0xff
6500d554:	xor    edi,DWORD PTR [eax]
6500d556:	xor    edx,DWORD PTR [esi*4+0x6502fd90]
6500d55d:	mov    ecx,edi
6500d55f:	xor    edx,DWORD PTR [eax+0x4]
6500d562:	mov    edi,DWORD PTR [esp+0x18]
6500d566:	add    eax,0x4
6500d569:	shr    edi,0x10
6500d56c:	and    edi,0xff
6500d572:	mov    ebp,DWORD PTR [edi*4+0x6502f590]
6500d579:	mov    edi,DWORD PTR [esp+0x28]
6500d57d:	mov    esi,edx
6500d57f:	movzx  edx,BYTE PTR [esp+0x15]
6500d584:	xor    ebp,DWORD PTR [edx*4+0x6502f990]
6500d58b:	shr    edi,0x18
6500d58e:	xor    ebp,DWORD PTR [edi*4+0x6502f190]
6500d595:	mov    edi,DWORD PTR [esp+0x1c]
6500d599:	and    ebx,0xff
6500d59f:	xor    ebp,DWORD PTR [ebx*4+0x6502fd90]
6500d5a6:	add    eax,0x4
6500d5a9:	xor    ebp,DWORD PTR [eax]
6500d5ab:	sub    edi,0x1
6500d5ae:	add    eax,0x4
6500d5b1:	test   edi,edi
6500d5b3:	mov    DWORD PTR [esp+0x10],esi
6500d5b7:	mov    edx,ebp
6500d5b9:	mov    DWORD PTR [esp+0x1c],edi
6500d5bd:	jg     0x6500d390
6500d5c3:	shr    esi,0x10
6500d5c6:	and    esi,0xff
6500d5cc:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d5d3:	movzx  edi,ch
6500d5d6:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d5dd:	mov    edi,edx
6500d5df:	shr    edi,0x18
6500d5e2:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d5e9:	mov    edi,DWORD PTR [esp+0x24]
6500d5ed:	mov    DWORD PTR [esp+0x28],esi
6500d5f1:	and    edi,0xff
6500d5f7:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d5fe:	movzx  edi,BYTE PTR [esp+0x11]
6500d603:	xor    esi,DWORD PTR [eax]
6500d605:	add    eax,0x4
6500d608:	mov    DWORD PTR [esp+0x14],esi
6500d60c:	mov    esi,edx
6500d60e:	shr    esi,0x10
6500d611:	and    esi,0xff
6500d617:	mov    esi,DWORD PTR [esi*4+0x6502f590]
6500d61e:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d625:	mov    edi,DWORD PTR [esp+0x24]
6500d629:	shr    edi,0x18
6500d62c:	mov    DWORD PTR [esp+0x28],esi
6500d630:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d637:	mov    edi,ecx
6500d639:	and    edi,0xff
6500d63f:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d646:	mov    edi,DWORD PTR [esp+0x24]
6500d64a:	xor    esi,DWORD PTR [eax]
6500d64c:	shr    edi,0x10
6500d64f:	mov    DWORD PTR [esp+0x18],esi
6500d653:	movzx  esi,dh
6500d656:	mov    esi,DWORD PTR [esi*4+0x6502f990]
6500d65d:	and    edi,0xff
6500d663:	xor    esi,DWORD PTR [edi*4+0x6502f590]
6500d66a:	mov    edi,ecx
6500d66c:	shr    edi,0x18
6500d66f:	xor    esi,DWORD PTR [edi*4+0x6502f190]
6500d676:	mov    edi,DWORD PTR [esp+0x10]
6500d67a:	mov    DWORD PTR [esp+0x28],esi
6500d67e:	and    edi,0xff
6500d684:	xor    esi,DWORD PTR [edi*4+0x6502fd90]
6500d68b:	movzx  edi,BYTE PTR [esp+0x25]
6500d690:	xor    esi,DWORD PTR [eax+0x4]
6500d693:	shr    ecx,0x10
6500d696:	and    ecx,0xff
6500d69c:	add    eax,0x4
6500d69f:	mov    DWORD PTR [esp+0x28],esi
6500d6a3:	mov    esi,DWORD PTR [ecx*4+0x6502f590]
6500d6aa:	xor    esi,DWORD PTR [edi*4+0x6502f990]
6500d6b1:	mov    ecx,DWORD PTR [esp+0x10]
6500d6b5:	and    edx,0xff
6500d6bb:	shr    ecx,0x18
6500d6be:	xor    esi,DWORD PTR [ecx*4+0x6502f190]
6500d6c5:	add    eax,0x4
6500d6c8:	xor    esi,DWORD PTR [edx*4+0x6502fd90]
6500d6cf:	mov    edx,DWORD PTR [esp+0x28]
6500d6d3:	xor    esi,DWORD PTR [eax]
6500d6d5:	shr    edx,0x10
6500d6d8:	and    edx,0xff
6500d6de:	movzx  edx,BYTE PTR [edx+0x6502e068]
6500d6e5:	mov    ecx,esi
6500d6e7:	shr    ecx,0x18
6500d6ea:	xor    ebx,ebx
6500d6ec:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d6f2:	movzx  ecx,BYTE PTR [esp+0x19]
6500d6f7:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d6fe:	xor    edx,ebx
6500d700:	shl    edx,0x8
6500d703:	xor    edx,ecx
6500d705:	mov    ecx,DWORD PTR [esp+0x14]
6500d709:	mov    edi,ecx
6500d70b:	and    edi,0xff
6500d711:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d718:	shl    edx,0x8
6500d71b:	add    eax,0x4
6500d71e:	xor    edx,edi
6500d720:	xor    edx,DWORD PTR [eax]
6500d722:	mov    DWORD PTR [esp+0x24],esi
6500d726:	add    eax,0x4
6500d729:	shr    esi,0x10
6500d72c:	and    esi,0xff
6500d732:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d739:	shr    ecx,0x18
6500d73c:	xor    ebx,ebx
6500d73e:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d744:	movzx  ecx,BYTE PTR [esp+0x29]
6500d749:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d750:	xor    esi,ebx
6500d752:	shl    esi,0x8
6500d755:	xor    esi,ecx
6500d757:	mov    ecx,DWORD PTR [esp+0x18]
6500d75b:	mov    edi,ecx
6500d75d:	shl    esi,0x8
6500d760:	and    edi,0xff
6500d766:	movzx  edi,BYTE PTR [edi+0x6502e068]
6500d76d:	xor    esi,edi
6500d76f:	xor    esi,DWORD PTR [eax]
6500d771:	mov    edi,DWORD PTR [esp+0x28]
6500d775:	mov    DWORD PTR [esp+0x1c],esi
6500d779:	mov    esi,DWORD PTR [esp+0x14]
6500d77d:	shr    ecx,0x18
6500d780:	shr    esi,0x10
6500d783:	and    esi,0xff
6500d789:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d790:	xor    ebx,ebx
6500d792:	mov    bh,BYTE PTR [ecx+0x6502e068]
6500d798:	movzx  ecx,BYTE PTR [esp+0x25]
6500d79d:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7a4:	xor    esi,ebx
6500d7a6:	shl    esi,0x8
6500d7a9:	xor    esi,ecx
6500d7ab:	mov    ecx,edi
6500d7ad:	and    ecx,0xff
6500d7b3:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7ba:	shl    esi,0x8
6500d7bd:	xor    esi,ecx
6500d7bf:	xor    esi,DWORD PTR [eax+0x4]
6500d7c2:	mov    ecx,DWORD PTR [esp+0x18]
6500d7c6:	shr    ecx,0x10
6500d7c9:	xor    ebx,ebx
6500d7cb:	add    eax,0x4
6500d7ce:	shr    edi,0x18
6500d7d1:	mov    bh,BYTE PTR [edi+0x6502e068]
6500d7d7:	and    ecx,0xff
6500d7dd:	movzx  ecx,BYTE PTR [ecx+0x6502e068]
6500d7e4:	mov    DWORD PTR [esp+0x10],esi
6500d7e8:	movzx  esi,BYTE PTR [esp+0x15]
6500d7ed:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d7f4:	xor    ecx,ebx
6500d7f6:	shl    ecx,0x8
6500d7f9:	xor    ecx,esi
6500d7fb:	mov    esi,DWORD PTR [esp+0x24]
6500d7ff:	and    esi,0xff
6500d805:	movzx  esi,BYTE PTR [esi+0x6502e068]
6500d80c:	shl    ecx,0x8
6500d80f:	xor    ecx,esi
6500d811:	xor    ecx,DWORD PTR [eax+0x4]
6500d814:	mov    esi,DWORD PTR [esp+0x2c]
6500d818:	mov    eax,edx
6500d81a:	shr    eax,0x8
6500d81d:	mov    BYTE PTR [esi+0x1],al
6500d820:	mov    eax,edx
6500d822:	mov    BYTE PTR [esi],dl
6500d824:	shr    edx,0x18
6500d827:	shr    eax,0x10
6500d82a:	mov    BYTE PTR [esi+0x3],dl
6500d82d:	mov    BYTE PTR [esi+0x2],al
6500d830:	mov    eax,DWORD PTR [esp+0x1c]
6500d834:	mov    edx,eax
6500d836:	shr    edx,0x8
6500d839:	mov    BYTE PTR [esi+0x5],dl
6500d83c:	mov    BYTE PTR [esi+0x4],al
6500d83f:	mov    edx,eax
6500d841:	shr    edx,0x10
6500d844:	shr    eax,0x18
6500d847:	mov    BYTE PTR [esi+0x6],dl
6500d84a:	mov    BYTE PTR [esi+0x7],al
6500d84d:	mov    eax,DWORD PTR [esp+0x10]
6500d851:	mov    edx,eax
6500d853:	shr    edx,0x8
6500d856:	mov    BYTE PTR [esi+0x9],dl
6500d859:	mov    edx,eax
6500d85b:	mov    BYTE PTR [esi+0x8],al
6500d85e:	shr    edx,0x10
6500d861:	shr    eax,0x18
6500d864:	mov    BYTE PTR [esi+0xa],dl
6500d867:	mov    BYTE PTR [esi+0xb],al
6500d86a:	mov    eax,ecx
6500d86c:	mov    edx,ecx
6500d86e:	mov    BYTE PTR [esi+0xc],cl
6500d871:	shr    eax,0x8
6500d874:	shr    edx,0x10
6500d877:	pop    edi
6500d878:	shr    ecx,0x18
6500d87b:	mov    BYTE PTR [esi+0xd],al
6500d87e:	mov    BYTE PTR [esi+0xe],dl
6500d881:	mov    BYTE PTR [esi+0xf],cl
6500d884:	pop    esi
6500d885:	pop    ebp
6500d886:	pop    ebx
6500d887:	add    esp,0x10
6500d88a:	ret    
6500d88b:	int3   
6500d88c:	int3   
6500d88d:	int3   
6500d88e:	int3   
6500d88f:	int3   
6500d890:	sub    esp,0x30
6500d893:	mov    eax,ds:0x6502c09c
6500d898:	xor    eax,esp
6500d89a:	mov    DWORD PTR [esp+0x2c],eax
6500d89e:	cmp    DWORD PTR [esp+0x38],0x0
6500d8a3:	mov    eax,DWORD PTR [esp+0x34]
6500d8a7:	push   ebx
6500d8a8:	push   ebp
6500d8a9:	mov    ebp,DWORD PTR [esp+0x44]
6500d8ad:	push   esi
6500d8ae:	mov    esi,DWORD PTR [esp+0x4c]
6500d8b2:	push   edi
6500d8b3:	mov    edi,edx
6500d8b5:	mov    DWORD PTR [esp+0x24],eax
6500d8b9:	jne    0x6500d977
6500d8bf:	test   ecx,ecx
6500d8c1:	jle    0x6500da56
6500d8c7:	lea    eax,[ecx-0x1]
6500d8ca:	mov    ebx,ebp
6500d8cc:	shr    eax,0x4
6500d8cf:	sub    ebx,esi
6500d8d1:	add    eax,0x1
6500d8d4:	mov    DWORD PTR [esp+0x10],eax
6500d8d8:	mov    edx,DWORD PTR [edi+0x4]
6500d8db:	mov    ecx,DWORD PTR [edi]
6500d8dd:	mov    eax,DWORD PTR [edi+0x8]
6500d8e0:	push   esi
6500d8e1:	mov    DWORD PTR [esp+0x34],edx
6500d8e5:	mov    edx,DWORD PTR [esp+0x28]
6500d8e9:	mov    DWORD PTR [esp+0x30],ecx
6500d8ed:	mov    ecx,DWORD PTR [edi+0xc]
6500d8f0:	mov    DWORD PTR [esp+0x38],eax
6500d8f4:	push   0x0
6500d8f6:	push   edx
6500d8f7:	mov    eax,edi
6500d8f9:	mov    DWORD PTR [esp+0x44],ecx
6500d8fd:	call   0x6500ce40
6500d902:	mov    eax,esi
6500d904:	add    esp,0xc
6500d907:	lea    ecx,[ebp+0x2]
6500d90a:	mov    esi,0x4
6500d90f:	nop
6500d910:	movzx  edx,BYTE PTR [ebx+eax*1]
6500d914:	xor    BYTE PTR [eax],dl
6500d916:	movzx  edx,BYTE PTR [ecx-0x1]
6500d91a:	xor    BYTE PTR [eax+0x1],dl
6500d91d:	movzx  edx,BYTE PTR [ecx]
6500d920:	xor    BYTE PTR [eax+0x2],dl
6500d923:	movzx  edx,BYTE PTR [ecx+0x1]
6500d927:	xor    BYTE PTR [eax+0x3],dl
6500d92a:	add    eax,0x4
6500d92d:	add    ecx,0x4
6500d930:	sub    esi,0x1
6500d933:	jne    0x6500d910
6500d935:	mov    ecx,DWORD PTR [esp+0x2c]
6500d939:	mov    edx,DWORD PTR [esp+0x30]
6500d93d:	mov    DWORD PTR [ebp+0x0],ecx
6500d940:	mov    ecx,DWORD PTR [esp+0x34]
6500d944:	mov    DWORD PTR [ebp+0x4],edx
6500d947:	mov    edx,DWORD PTR [esp+0x38]
6500d94b:	add    edi,0x10
6500d94e:	sub    ebx,0x10
6500d951:	sub    DWORD PTR [esp+0x10],0x1
6500d956:	mov    DWORD PTR [ebp+0x8],ecx
6500d959:	mov    DWORD PTR [ebp+0xc],edx
6500d95c:	mov    esi,eax
6500d95e:	jne    0x6500d8d8
6500d964:	pop    edi
6500d965:	pop    esi
6500d966:	pop    ebp
6500d967:	pop    ebx
6500d968:	mov    ecx,DWORD PTR [esp+0x2c]
6500d96c:	xor    ecx,esp
6500d96e:	call   0x6501275c
6500d973:	add    esp,0x30
6500d976:	ret    
6500d977:	test   ecx,ecx
6500d979:	jle    0x6500da56
6500d97f:	mov    eax,ebp
6500d981:	sub    eax,esi
6500d983:	mov    DWORD PTR [esp+0x10],eax
6500d987:	mov    eax,ebp
6500d989:	sub    eax,edi
6500d98b:	mov    DWORD PTR [esp+0x14],eax
6500d98f:	lea    eax,[ecx-0x1]
6500d992:	shr    eax,0x4
6500d995:	add    eax,0x1
6500d998:	mov    DWORD PTR [esp+0x1c],eax
6500d99c:	lea    esp,[esp+0x0]
6500d9a0:	lea    eax,[ebp+0x3]
6500d9a3:	mov    edx,esi
6500d9a5:	sub    edx,edi
6500d9a7:	mov    DWORD PTR [esp+0x20],eax
6500d9ab:	lea    ecx,[esi+0x1]
6500d9ae:	mov    eax,edi
6500d9b0:	mov    DWORD PTR [esp+0x28],edx
6500d9b4:	mov    DWORD PTR [esp+0x18],0x4
6500d9bc:	jmp    0x6500d9c4
6500d9be:	mov    edi,edi
6500d9c0:	mov    edx,DWORD PTR [esp+0x28]
6500d9c4:	mov    ebx,DWORD PTR [esp+0x14]
6500d9c8:	movzx  ebx,BYTE PTR [eax+ebx*1]
6500d9cc:	xor    bl,BYTE PTR [eax]
6500d9ce:	add    eax,0x4
6500d9d1:	mov    BYTE PTR [edx+eax*1-0x4],bl
6500d9d5:	mov    edx,DWORD PTR [esp+0x10]
6500d9d9:	mov    dl,BYTE PTR [ecx+edx*1]
6500d9dc:	xor    dl,BYTE PTR [eax-0x3]
6500d9df:	add    ecx,0x4
6500d9e2:	mov    BYTE PTR [ecx-0x4],dl
6500d9e5:	movzx  ebx,BYTE PTR [eax-0x2]
6500d9e9:	mov    edx,DWORD PTR [esp+0x20]
6500d9ed:	xor    bl,BYTE PTR [edx-0x1]
6500d9f0:	add    edx,0x4
6500d9f3:	mov    BYTE PTR [ecx-0x3],bl
6500d9f6:	movzx  ebx,BYTE PTR [eax-0x1]
6500d9fa:	xor    bl,BYTE PTR [edx-0x4]
6500d9fd:	mov    DWORD PTR [esp+0x20],edx
6500da01:	mov    BYTE PTR [ecx-0x2],bl
6500da04:	mov    ebx,0x1
6500da09:	sub    DWORD PTR [esp+0x18],ebx
6500da0d:	jne    0x6500d9c0
6500da0f:	mov    eax,DWORD PTR [esp+0x48]
6500da13:	mov    ecx,DWORD PTR [esp+0x24]
6500da17:	push   esi
6500da18:	push   eax
6500da19:	push   ecx
6500da1a:	mov    eax,esi
6500da1c:	call   0x6500ce40
6500da21:	mov    edx,DWORD PTR [esi]
6500da23:	mov    DWORD PTR [ebp+0x0],edx
6500da26:	mov    eax,DWORD PTR [esi+0x4]
6500da29:	mov    DWORD PTR [ebp+0x4],eax
6500da2c:	mov    ecx,DWORD PTR [esi+0x8]
6500da2f:	mov    eax,0x10
6500da34:	sub    DWORD PTR [esp+0x20],eax
6500da38:	sub    DWORD PTR [esp+0x1c],eax
6500da3c:	mov    DWORD PTR [ebp+0x8],ecx
6500da3f:	mov    edx,DWORD PTR [esi+0xc]
6500da42:	add    esp,0xc
6500da45:	add    edi,eax
6500da47:	add    esi,eax
6500da49:	sub    DWORD PTR [esp+0x1c],ebx
6500da4d:	mov    DWORD PTR [ebp+0xc],edx
6500da50:	jne    0x6500d9a0
6500da56:	mov    ecx,DWORD PTR [esp+0x3c]
6500da5a:	pop    edi
6500da5b:	pop    esi
6500da5c:	pop    ebp
6500da5d:	pop    ebx
6500da5e:	xor    ecx,esp
6500da60:	call   0x6501275c
6500da65:	add    esp,0x30
6500da68:	ret    
6500da69:	int3   
6500da6a:	int3   
6500da6b:	int3   
6500da6c:	int3   
6500da6d:	int3   
6500da6e:	int3   
6500da6f:	int3   
6500da70:	push   0xffffffff
6500da72:	push   0x6502215b
6500da77:	mov    eax,fs:0x0
6500da7d:	push   eax
6500da7e:	sub    esp,0x138
6500da84:	mov    eax,ds:0x6502c09c
6500da89:	xor    eax,esp
6500da8b:	mov    DWORD PTR [esp+0x134],eax
6500da92:	push   ebp
6500da93:	push   esi
6500da94:	push   edi
6500da95:	mov    eax,ds:0x6502c09c
6500da9a:	xor    eax,esp
6500da9c:	push   eax
6500da9d:	lea    eax,[esp+0x148]
6500daa4:	mov    fs:0x0,eax
6500daaa:	mov    ebp,DWORD PTR [esp+0x15c]
6500dab1:	mov    eax,DWORD PTR [esp+0x158]
6500dab8:	mov    DWORD PTR [esp+0x14],eax
6500dabc:	lea    esi,[ebp+0x8]
6500dabf:	mov    eax,esi
6500dac1:	and    eax,0xf
6500dac4:	mov    DWORD PTR [esp+0x18],ecx
6500dac8:	mov    DWORD PTR [esp+0x10],0x0
6500dad0:	je     0x6500dadb
6500dad2:	mov    edx,0x10
6500dad7:	sub    edx,eax
6500dad9:	add    esi,edx
6500dadb:	push   esi
6500dadc:	call   0x65011efd
6500dae1:	mov    edi,eax
6500dae3:	mov    DWORD PTR [esp+0x14],edi
6500dae7:	push   esi
6500dae8:	mov    DWORD PTR [esp+0x158],0x0
6500daf3:	call   0x65011efd
6500daf8:	push   esi
6500daf9:	push   0x0
6500dafb:	push   edi
6500dafc:	mov    DWORD PTR [ebx],eax
6500dafe:	call   0x65012de0
6500db03:	mov    eax,DWORD PTR [esp+0x28]
6500db07:	push   ebp
6500db08:	push   eax
6500db09:	lea    ecx,[edi+0x8]
6500db0c:	mov    DWORD PTR [edi],0x52514f4b
6500db12:	push   ecx
6500db13:	mov    DWORD PTR [edi+0x4],ebp
6500db16:	call   0x65014000
6500db1b:	xor    eax,eax
6500db1d:	mov    DWORD PTR [esp+0x154],eax
6500db24:	mov    DWORD PTR [esp+0x158],eax
6500db2b:	mov    DWORD PTR [esp+0x15c],eax
6500db32:	mov    DWORD PTR [esp+0x160],eax
6500db39:	lea    eax,[esp+0x3c]
6500db3d:	call   0x6500c750
6500db42:	mov    eax,DWORD PTR [ebx]
6500db44:	push   eax
6500db45:	lea    edx,[esp+0x158]
6500db4c:	push   edx
6500db4d:	lea    eax,[esp+0x44]
6500db51:	push   0x1
6500db53:	push   eax
6500db54:	mov    edx,edi
6500db56:	mov    ecx,esi
6500db58:	call   0x6500d890
6500db5d:	mov    ecx,DWORD PTR [esp+0x48]
6500db61:	push   0x0
6500db63:	mov    DWORD PTR [ecx],esi
6500db65:	call   0x65011f02
6500db6a:	push   edi
6500db6b:	call   0x65011f02
6500db70:	add    esp,0x38
6500db73:	mov    eax,ebx
6500db75:	mov    ecx,DWORD PTR [esp+0x148]
6500db7c:	mov    DWORD PTR fs:0x0,ecx
6500db83:	pop    ecx
6500db84:	pop    edi
6500db85:	pop    esi
6500db86:	pop    ebp
6500db87:	mov    ecx,DWORD PTR [esp+0x134]
6500db8e:	xor    ecx,esp
6500db90:	call   0x6501275c
6500db95:	add    esp,0x144
6500db9b:	ret    
6500db9c:	int3   
6500db9d:	int3   
6500db9e:	int3   
6500db9f:	int3   
6500dba0:	sub    esp,0x13c
6500dba6:	mov    eax,ds:0x6502c09c
6500dbab:	xor    eax,esp
6500dbad:	mov    DWORD PTR [esp+0x134],eax
6500dbb4:	mov    eax,DWORD PTR [esp+0x144]
6500dbbb:	push   ebp
6500dbbc:	mov    ebp,DWORD PTR [esp+0x144]
6500dbc3:	mov    DWORD PTR [esp+0x8],eax
6500dbc7:	xor    eax,eax
6500dbc9:	test   bl,0xf
6500dbcc:	push   esi
6500dbcd:	mov    DWORD PTR [esp+0x8],eax
6500dbd1:	je     0x6500dbdf
6500dbd3:	mov    DWORD PTR [esp+0x8],eax
6500dbd7:	mov    DWORD PTR [edi],eax
6500dbd9:	push   eax
6500dbda:	jmp    0x6500dc7f
6500dbdf:	push   ebx
6500dbe0:	call   0x65011efd
6500dbe5:	mov    esi,eax
6500dbe7:	xor    eax,eax
6500dbe9:	mov    DWORD PTR [esp+0x130],eax
6500dbf0:	mov    DWORD PTR [esp+0x134],eax
6500dbf7:	mov    DWORD PTR [esp+0x138],eax
6500dbfe:	mov    DWORD PTR [esp+0x13c],eax
6500dc05:	add    esp,0x4
6500dc08:	lea    eax,[esp+0x10]
6500dc0c:	call   0x6500cc60
6500dc11:	push   esi
6500dc12:	lea    ecx,[esp+0x130]
6500dc19:	push   ecx
6500dc1a:	lea    edx,[esp+0x18]
6500dc1e:	push   0x0
6500dc20:	push   edx
6500dc21:	mov    edx,ebp
6500dc23:	mov    ecx,ebx
6500dc25:	call   0x6500d890
6500dc2a:	add    esp,0x10
6500dc2d:	cmp    DWORD PTR [esi],0x52534f4b
6500dc33:	je     0x6500dc5a
6500dc35:	push   0x0
6500dc37:	mov    DWORD PTR [esp+0xc],0x0
6500dc3f:	mov    DWORD PTR [edi],0x0
6500dc45:	call   0x65011f02
6500dc4a:	add    esp,0x4
6500dc4d:	push   0x0
6500dc4f:	call   0x65011f02
6500dc54:	add    esp,0x4
6500dc57:	push   esi
6500dc58:	jmp    0x6500dc7f
6500dc5a:	mov    eax,DWORD PTR [esi+0x4]
6500dc5d:	mov    ecx,DWORD PTR [esp+0xc]
6500dc61:	push   eax
6500dc62:	lea    edx,[esi+0x8]
6500dc65:	push   edx
6500dc66:	push   esi
6500dc67:	mov    DWORD PTR [ecx],eax
6500dc69:	call   0x65013720
6500dc6e:	add    esp,0xc
6500dc71:	push   0x0
6500dc73:	mov    DWORD PTR [edi],esi
6500dc75:	call   0x65011f02
6500dc7a:	add    esp,0x4
6500dc7d:	push   0x0
6500dc7f:	call   0x65011f02
6500dc84:	mov    ecx,DWORD PTR [esp+0x140]
6500dc8b:	add    esp,0x4
6500dc8e:	pop    esi
6500dc8f:	pop    ebp
6500dc90:	xor    ecx,esp
6500dc92:	mov    eax,edi
6500dc94:	call   0x6501275c
6500dc99:	add    esp,0x13c
6500dc9f:	ret    
6500dca0:	push   esi
6500dca1:	push   0x0
6500dca3:	push   0x1
6500dca5:	push   0x65030298
6500dcaa:	call   DWORD PTR ds:0x6502408c
6500dcb0:	test   eax,eax
6500dcb2:	jne    0x6500dd0c
6500dcb4:	push   0x6502836c
6500dcb9:	push   0xc
6500dcbb:	push   0x650283ac
6500dcc0:	call   0x65006a10
6500dcc5:	push   0x650283bc
6500dcca:	push   0x8
6500dccc:	push   0x650283f4
6500dcd1:	mov    esi,eax
6500dcd3:	call   0x65006d00
6500dcd8:	add    esp,0x18
6500dcdb:	push   eax
6500dcdc:	call   DWORD PTR ds:0x65024018
6500dce2:	add    DWORD PTR ds:0x6502d37c,0x1
6500dce9:	test   eax,eax
6500dceb:	je     0x6500dd03
6500dced:	push   esi
6500dcee:	push   eax
6500dcef:	call   DWORD PTR ds:0x65024014
6500dcf5:	add    DWORD PTR ds:0x6502d380,0x1
6500dcfc:	mov    ds:0x65030374,eax
6500dd01:	pop    esi
6500dd02:	ret    
6500dd03:	xor    eax,eax
6500dd05:	mov    ds:0x65030374,eax
6500dd0a:	pop    esi
6500dd0b:	ret    
6500dd0c:	mov    eax,ds:0x65030374
6500dd11:	pop    esi
6500dd12:	ret    
6500dd13:	int3   
6500dd14:	int3   
6500dd15:	int3   
6500dd16:	int3   
6500dd17:	int3   
6500dd18:	int3   
6500dd19:	int3   
6500dd1a:	int3   
6500dd1b:	int3   
6500dd1c:	int3   
6500dd1d:	int3   
6500dd1e:	int3   
6500dd1f:	int3   
6500dd20:	push   ebp
6500dd21:	mov    ebp,esp
6500dd23:	and    esp,0xfffffff8
6500dd26:	push   ecx
6500dd27:	push   esi
6500dd28:	push   0x0
6500dd2a:	push   0x1
6500dd2c:	push   0x6503029c
6500dd31:	call   DWORD PTR ds:0x6502408c
6500dd37:	test   eax,eax
6500dd39:	jne    0x6500dd99
6500dd3b:	push   0x65028408
6500dd40:	push   0xe
6500dd42:	push   0x65028434
6500dd47:	call   0x65006a10
6500dd4c:	push   0x65028444
6500dd51:	push   0x8
6500dd53:	push   0x650283f4
6500dd58:	mov    esi,eax
6500dd5a:	call   0x65006d00
6500dd5f:	add    esp,0x18
6500dd62:	push   eax
6500dd63:	call   DWORD PTR ds:0x65024018
6500dd69:	add    DWORD PTR ds:0x6502d37c,0x1
6500dd70:	test   eax,eax
6500dd72:	je     0x6500dd8d
6500dd74:	push   esi
6500dd75:	push   eax
6500dd76:	call   DWORD PTR ds:0x65024014
6500dd7c:	add    DWORD PTR ds:0x6502d380,0x1
6500dd83:	mov    ds:0x65030378,eax
6500dd88:	pop    esi
6500dd89:	mov    esp,ebp
6500dd8b:	pop    ebp
6500dd8c:	ret    
6500dd8d:	xor    eax,eax
6500dd8f:	mov    ds:0x65030378,eax
6500dd94:	pop    esi
6500dd95:	mov    esp,ebp
6500dd97:	pop    ebp
6500dd98:	ret    
6500dd99:	mov    eax,ds:0x65030378
6500dd9e:	pop    esi
6500dd9f:	mov    esp,ebp
6500dda1:	pop    ebp
6500dda2:	ret    
6500dda3:	int3   
6500dda4:	int3   
6500dda5:	int3   
6500dda6:	int3   
6500dda7:	int3   
6500dda8:	int3   
6500dda9:	int3   
6500ddaa:	int3   
6500ddab:	int3   
6500ddac:	int3   
6500ddad:	int3   
6500ddae:	int3   
6500ddaf:	int3   
6500ddb0:	push   ebp
6500ddb1:	mov    ebp,esp
6500ddb3:	and    esp,0xfffffff8
6500ddb6:	push   ecx
6500ddb7:	push   esi
6500ddb8:	push   0x0
6500ddba:	push   0x1
6500ddbc:	push   0x650302a0
6500ddc1:	call   DWORD PTR ds:0x6502408c
6500ddc7:	test   eax,eax
6500ddc9:	jne    0x6500de29
6500ddcb:	push   0x65028474
6500ddd0:	push   0xf
6500ddd2:	push   0x650284a8
6500ddd7:	call   0x65006a10
6500dddc:	push   0x650284b8
6500dde1:	push   0x8
6500dde3:	push   0x650283f4
6500dde8:	mov    esi,eax
6500ddea:	call   0x65006d00
6500ddef:	add    esp,0x18
6500ddf2:	push   eax
6500ddf3:	call   DWORD PTR ds:0x65024018
6500ddf9:	add    DWORD PTR ds:0x6502d37c,0x1
6500de00:	test   eax,eax
6500de02:	je     0x6500de1d
6500de04:	push   esi
6500de05:	push   eax
6500de06:	call   DWORD PTR ds:0x65024014
6500de0c:	add    DWORD PTR ds:0x6502d380,0x1
6500de13:	mov    ds:0x6503037c,eax
6500de18:	pop    esi
6500de19:	mov    esp,ebp
6500de1b:	pop    ebp
6500de1c:	ret    
6500de1d:	xor    eax,eax
6500de1f:	mov    ds:0x6503037c,eax
6500de24:	pop    esi
6500de25:	mov    esp,ebp
6500de27:	pop    ebp
6500de28:	ret    
6500de29:	mov    eax,ds:0x6503037c
6500de2e:	pop    esi
6500de2f:	mov    esp,ebp
6500de31:	pop    ebp
6500de32:	ret    
6500de33:	int3   
6500de34:	int3   
6500de35:	int3   
6500de36:	int3   
6500de37:	int3   
6500de38:	int3   
6500de39:	int3   
6500de3a:	int3   
6500de3b:	int3   
6500de3c:	int3   
6500de3d:	int3   
6500de3e:	int3   
6500de3f:	int3   
6500de40:	push   ebp
6500de41:	mov    ebp,esp
6500de43:	and    esp,0xfffffff8
6500de46:	push   ecx
6500de47:	push   esi
6500de48:	push   0x0
6500de4a:	push   0x1
6500de4c:	push   0x650302a4
6500de51:	call   DWORD PTR ds:0x6502408c
6500de57:	test   eax,eax
6500de59:	jne    0x6500deb9
6500de5b:	push   0x650284e0
6500de60:	push   0xf
6500de62:	push   0x65028518
6500de67:	call   0x65006a10
6500de6c:	push   0x65028528
6500de71:	push   0x8
6500de73:	push   0x650283f4
6500de78:	mov    esi,eax
6500de7a:	call   0x65006d00
6500de7f:	add    esp,0x18
6500de82:	push   eax
6500de83:	call   DWORD PTR ds:0x65024018
6500de89:	add    DWORD PTR ds:0x6502d37c,0x1
6500de90:	test   eax,eax
6500de92:	je     0x6500dead
6500de94:	push   esi
6500de95:	push   eax
6500de96:	call   DWORD PTR ds:0x65024014
6500de9c:	add    DWORD PTR ds:0x6502d380,0x1
6500dea3:	mov    ds:0x65030380,eax
6500dea8:	pop    esi
6500dea9:	mov    esp,ebp
6500deab:	pop    ebp
6500deac:	ret    
6500dead:	xor    eax,eax
6500deaf:	mov    ds:0x65030380,eax
6500deb4:	pop    esi
6500deb5:	mov    esp,ebp
6500deb7:	pop    ebp
6500deb8:	ret    
6500deb9:	mov    eax,ds:0x65030380
6500debe:	pop    esi
6500debf:	mov    esp,ebp
6500dec1:	pop    ebp
6500dec2:	ret    
6500dec3:	int3   
6500dec4:	int3   
6500dec5:	int3   
6500dec6:	int3   
6500dec7:	int3   
6500dec8:	int3   
6500dec9:	int3   
6500deca:	int3   
6500decb:	int3   
6500decc:	int3   
6500decd:	int3   
6500dece:	int3   
6500decf:	int3   
6500ded0:	push   ebp
6500ded1:	mov    ebp,esp
6500ded3:	and    esp,0xfffffff8
6500ded6:	push   ecx
6500ded7:	push   esi
6500ded8:	push   0x0
6500deda:	push   0x1
6500dedc:	push   0x650302a8
6500dee1:	call   DWORD PTR ds:0x6502408c
6500dee7:	test   eax,eax
6500dee9:	jne    0x6500df49
6500deeb:	push   0x65028568
6500def0:	push   0x13
6500def2:	push   0x65028598
6500def7:	call   0x65006a10
6500defc:	push   0x650285ac
6500df01:	push   0x8
6500df03:	push   0x650285dc
6500df08:	mov    esi,eax
6500df0a:	call   0x65006d00
6500df0f:	add    esp,0x18
6500df12:	push   eax
6500df13:	call   DWORD PTR ds:0x65024018
6500df19:	add    DWORD PTR ds:0x6502d37c,0x1
6500df20:	test   eax,eax
6500df22:	je     0x6500df3d
6500df24:	push   esi
6500df25:	push   eax
6500df26:	call   DWORD PTR ds:0x65024014
6500df2c:	add    DWORD PTR ds:0x6502d380,0x1
6500df33:	mov    ds:0x65030384,eax
6500df38:	pop    esi
6500df39:	mov    esp,ebp
6500df3b:	pop    ebp
6500df3c:	ret    
6500df3d:	xor    eax,eax
6500df3f:	mov    ds:0x65030384,eax
6500df44:	pop    esi
6500df45:	mov    esp,ebp
6500df47:	pop    ebp
6500df48:	ret    
6500df49:	mov    eax,ds:0x65030384
6500df4e:	pop    esi
6500df4f:	mov    esp,ebp
6500df51:	pop    ebp
6500df52:	ret    
6500df53:	int3   
6500df54:	int3   
6500df55:	int3   
6500df56:	int3   
6500df57:	int3   
6500df58:	int3   
6500df59:	int3   
6500df5a:	int3   
6500df5b:	int3   
6500df5c:	int3   
6500df5d:	int3   
6500df5e:	int3   
6500df5f:	int3   
6500df60:	push   ebp
6500df61:	mov    ebp,esp
6500df63:	and    esp,0xfffffff8
6500df66:	push   ecx
6500df67:	push   esi
6500df68:	push   0x0
6500df6a:	push   0x1
6500df6c:	push   0x650302ac
6500df71:	call   DWORD PTR ds:0x6502408c
6500df77:	test   eax,eax
6500df79:	jne    0x6500dfd9
6500df7b:	push   0x650285f0
6500df80:	push   0xe
6500df82:	push   0x6502862c
6500df87:	call   0x65006a10
6500df8c:	push   0x6502863c
6500df91:	push   0x8
6500df93:	push   0x650285dc
6500df98:	mov    esi,eax
6500df9a:	call   0x65006d00
6500df9f:	add    esp,0x18
6500dfa2:	push   eax
6500dfa3:	call   DWORD PTR ds:0x65024018
6500dfa9:	add    DWORD PTR ds:0x6502d37c,0x1
6500dfb0:	test   eax,eax
6500dfb2:	je     0x6500dfcd
6500dfb4:	push   esi
6500dfb5:	push   eax
6500dfb6:	call   DWORD PTR ds:0x65024014
6500dfbc:	add    DWORD PTR ds:0x6502d380,0x1
6500dfc3:	mov    ds:0x65030388,eax
6500dfc8:	pop    esi
6500dfc9:	mov    esp,ebp
6500dfcb:	pop    ebp
6500dfcc:	ret    
6500dfcd:	xor    eax,eax
6500dfcf:	mov    ds:0x65030388,eax
6500dfd4:	pop    esi
6500dfd5:	mov    esp,ebp
6500dfd7:	pop    ebp
6500dfd8:	ret    
6500dfd9:	mov    eax,ds:0x65030388
6500dfde:	pop    esi
6500dfdf:	mov    esp,ebp
6500dfe1:	pop    ebp
6500dfe2:	ret    
6500dfe3:	int3   
6500dfe4:	int3   
6500dfe5:	int3   
6500dfe6:	int3   
6500dfe7:	int3   
6500dfe8:	int3   
6500dfe9:	int3   
6500dfea:	int3   
6500dfeb:	int3   
6500dfec:	int3   
6500dfed:	int3   
6500dfee:	int3   
6500dfef:	int3   
6500dff0:	int3   
6500dff1:	int3   
6500dff2:	int3   
6500dff3:	int3   
6500dff4:	int3   
6500dff5:	int3   
6500dff6:	int3   
6500dff7:	int3   
6500dff8:	int3   
6500dff9:	int3   
6500dffa:	int3   
6500dffb:	int3   
6500dffc:	int3   
6500dffd:	int3   
6500dffe:	int3   
6500dfff:	int3   
6500e000:	push   ebp
6500e001:	mov    ebp,esp
6500e003:	and    esp,0xfffffff8
6500e006:	push   ecx
6500e007:	push   esi
6500e008:	push   0x0
6500e00a:	push   0x1
6500e00c:	push   0x650302b0
6500e011:	call   DWORD PTR ds:0x6502408c
6500e017:	test   eax,eax
6500e019:	jne    0x6500e079
6500e01b:	push   0x65028668
6500e020:	push   0xb
6500e022:	push   0x650286a0
6500e027:	call   0x65006a10
6500e02c:	push   0x650286ac
6500e031:	push   0x8
6500e033:	push   0x650285dc
6500e038:	mov    esi,eax
6500e03a:	call   0x65006d00
6500e03f:	add    esp,0x18
6500e042:	push   eax
6500e043:	call   DWORD PTR ds:0x65024018
6500e049:	add    DWORD PTR ds:0x6502d37c,0x1
6500e050:	test   eax,eax
6500e052:	je     0x6500e06d
6500e054:	push   esi
6500e055:	push   eax
6500e056:	call   DWORD PTR ds:0x65024014
6500e05c:	add    DWORD PTR ds:0x6502d380,0x1
6500e063:	mov    ds:0x6503038c,eax
6500e068:	pop    esi
6500e069:	mov    esp,ebp
6500e06b:	pop    ebp
6500e06c:	ret    
6500e06d:	xor    eax,eax
6500e06f:	mov    ds:0x6503038c,eax
6500e074:	pop    esi
6500e075:	mov    esp,ebp
6500e077:	pop    ebp
6500e078:	ret    
6500e079:	mov    eax,ds:0x6503038c
6500e07e:	pop    esi
6500e07f:	mov    esp,ebp
6500e081:	pop    ebp
6500e082:	ret    
6500e083:	int3   
6500e084:	int3   
6500e085:	int3   
6500e086:	int3   
6500e087:	int3   
6500e088:	int3   
6500e089:	int3   
6500e08a:	int3   
6500e08b:	int3   
6500e08c:	int3   
6500e08d:	int3   
6500e08e:	int3   
6500e08f:	int3   
6500e090:	push   ebp
6500e091:	mov    ebp,esp
6500e093:	and    esp,0xfffffff8
6500e096:	push   ecx
6500e097:	push   esi
6500e098:	push   0x0
6500e09a:	push   0x1
6500e09c:	push   0x650302b4
6500e0a1:	call   DWORD PTR ds:0x6502408c
6500e0a7:	test   eax,eax
6500e0a9:	jne    0x6500e109
6500e0ab:	push   0x650286e4
6500e0b0:	push   0xb
6500e0b2:	push   0x65028710
6500e0b7:	call   0x65006a10
6500e0bc:	push   0x6502871c
6500e0c1:	push   0x8
6500e0c3:	push   0x650285dc
6500e0c8:	mov    esi,eax
6500e0ca:	call   0x65006d00
6500e0cf:	add    esp,0x18
6500e0d2:	push   eax
6500e0d3:	call   DWORD PTR ds:0x65024018
6500e0d9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e0e0:	test   eax,eax
6500e0e2:	je     0x6500e0fd
6500e0e4:	push   esi
6500e0e5:	push   eax
6500e0e6:	call   DWORD PTR ds:0x65024014
6500e0ec:	add    DWORD PTR ds:0x6502d380,0x1
6500e0f3:	mov    ds:0x65030390,eax
6500e0f8:	pop    esi
6500e0f9:	mov    esp,ebp
6500e0fb:	pop    ebp
6500e0fc:	ret    
6500e0fd:	xor    eax,eax
6500e0ff:	mov    ds:0x65030390,eax
6500e104:	pop    esi
6500e105:	mov    esp,ebp
6500e107:	pop    ebp
6500e108:	ret    
6500e109:	mov    eax,ds:0x65030390
6500e10e:	pop    esi
6500e10f:	mov    esp,ebp
6500e111:	pop    ebp
6500e112:	ret    
6500e113:	int3   
6500e114:	int3   
6500e115:	int3   
6500e116:	int3   
6500e117:	int3   
6500e118:	int3   
6500e119:	int3   
6500e11a:	int3   
6500e11b:	int3   
6500e11c:	int3   
6500e11d:	int3   
6500e11e:	int3   
6500e11f:	int3   
6500e120:	push   ebp
6500e121:	mov    ebp,esp
6500e123:	and    esp,0xfffffff8
6500e126:	push   ecx
6500e127:	push   esi
6500e128:	push   0x0
6500e12a:	push   0x1
6500e12c:	push   0x650302b8
6500e131:	call   DWORD PTR ds:0x6502408c
6500e137:	test   eax,eax
6500e139:	jne    0x6500e199
6500e13b:	push   0x65028744
6500e140:	push   0xb
6500e142:	push   0x65028784
6500e147:	call   0x65006a10
6500e14c:	push   0x65028790
6500e151:	push   0x8
6500e153:	push   0x650285dc
6500e158:	mov    esi,eax
6500e15a:	call   0x65006d00
6500e15f:	add    esp,0x18
6500e162:	push   eax
6500e163:	call   DWORD PTR ds:0x65024018
6500e169:	add    DWORD PTR ds:0x6502d37c,0x1
6500e170:	test   eax,eax
6500e172:	je     0x6500e18d
6500e174:	push   esi
6500e175:	push   eax
6500e176:	call   DWORD PTR ds:0x65024014
6500e17c:	add    DWORD PTR ds:0x6502d380,0x1
6500e183:	mov    ds:0x65030394,eax
6500e188:	pop    esi
6500e189:	mov    esp,ebp
6500e18b:	pop    ebp
6500e18c:	ret    
6500e18d:	xor    eax,eax
6500e18f:	mov    ds:0x65030394,eax
6500e194:	pop    esi
6500e195:	mov    esp,ebp
6500e197:	pop    ebp
6500e198:	ret    
6500e199:	mov    eax,ds:0x65030394
6500e19e:	pop    esi
6500e19f:	mov    esp,ebp
6500e1a1:	pop    ebp
6500e1a2:	ret    
6500e1a3:	int3   
6500e1a4:	int3   
6500e1a5:	int3   
6500e1a6:	int3   
6500e1a7:	int3   
6500e1a8:	int3   
6500e1a9:	int3   
6500e1aa:	int3   
6500e1ab:	int3   
6500e1ac:	int3   
6500e1ad:	int3   
6500e1ae:	int3   
6500e1af:	int3   
6500e1b0:	push   esi
6500e1b1:	push   0x0
6500e1b3:	push   0x1
6500e1b5:	push   0x650302bc
6500e1ba:	call   DWORD PTR ds:0x6502408c
6500e1c0:	test   eax,eax
6500e1c2:	jne    0x6500e21c
6500e1c4:	push   0x650287c4
6500e1c9:	push   0xc
6500e1cb:	push   0x650287e8
6500e1d0:	call   0x65006a10
6500e1d5:	push   0x650287f8
6500e1da:	push   0x8
6500e1dc:	push   0x650285dc
6500e1e1:	mov    esi,eax
6500e1e3:	call   0x65006d00
6500e1e8:	add    esp,0x18
6500e1eb:	push   eax
6500e1ec:	call   DWORD PTR ds:0x65024018
6500e1f2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e1f9:	test   eax,eax
6500e1fb:	je     0x6500e213
6500e1fd:	push   esi
6500e1fe:	push   eax
6500e1ff:	call   DWORD PTR ds:0x65024014
6500e205:	add    DWORD PTR ds:0x6502d380,0x1
6500e20c:	mov    ds:0x65030398,eax
6500e211:	pop    esi
6500e212:	ret    
6500e213:	xor    eax,eax
6500e215:	mov    ds:0x65030398,eax
6500e21a:	pop    esi
6500e21b:	ret    
6500e21c:	mov    eax,ds:0x65030398
6500e221:	pop    esi
6500e222:	ret    
6500e223:	int3   
6500e224:	int3   
6500e225:	int3   
6500e226:	int3   
6500e227:	int3   
6500e228:	int3   
6500e229:	int3   
6500e22a:	int3   
6500e22b:	int3   
6500e22c:	int3   
6500e22d:	int3   
6500e22e:	int3   
6500e22f:	int3   
6500e230:	push   esi
6500e231:	push   0x0
6500e233:	push   0x1
6500e235:	push   0x650302c0
6500e23a:	call   DWORD PTR ds:0x6502408c
6500e240:	test   eax,eax
6500e242:	jne    0x6500e29c
6500e244:	push   0x65028820
6500e249:	push   0x10
6500e24b:	push   0x6502885c
6500e250:	call   0x65006a10
6500e255:	push   0x65028870
6500e25a:	push   0x8
6500e25c:	push   0x650285dc
6500e261:	mov    esi,eax
6500e263:	call   0x65006d00
6500e268:	add    esp,0x18
6500e26b:	push   eax
6500e26c:	call   DWORD PTR ds:0x65024018
6500e272:	add    DWORD PTR ds:0x6502d37c,0x1
6500e279:	test   eax,eax
6500e27b:	je     0x6500e293
6500e27d:	push   esi
6500e27e:	push   eax
6500e27f:	call   DWORD PTR ds:0x65024014
6500e285:	add    DWORD PTR ds:0x6502d380,0x1
6500e28c:	mov    ds:0x6503039c,eax
6500e291:	pop    esi
6500e292:	ret    
6500e293:	xor    eax,eax
6500e295:	mov    ds:0x6503039c,eax
6500e29a:	pop    esi
6500e29b:	ret    
6500e29c:	mov    eax,ds:0x6503039c
6500e2a1:	pop    esi
6500e2a2:	ret    
6500e2a3:	int3   
6500e2a4:	int3   
6500e2a5:	int3   
6500e2a6:	int3   
6500e2a7:	int3   
6500e2a8:	int3   
6500e2a9:	int3   
6500e2aa:	int3   
6500e2ab:	int3   
6500e2ac:	int3   
6500e2ad:	int3   
6500e2ae:	int3   
6500e2af:	int3   
6500e2b0:	push   esi
6500e2b1:	push   0x0
6500e2b3:	push   0x1
6500e2b5:	push   0x650302c4
6500e2ba:	call   DWORD PTR ds:0x6502408c
6500e2c0:	test   eax,eax
6500e2c2:	jne    0x6500e31c
6500e2c4:	push   0x65028894
6500e2c9:	push   0x10
6500e2cb:	push   0x650288d0
6500e2d0:	call   0x65006a10
6500e2d5:	push   0x650288e4
6500e2da:	push   0x8
6500e2dc:	push   0x650285dc
6500e2e1:	mov    esi,eax
6500e2e3:	call   0x65006d00
6500e2e8:	add    esp,0x18
6500e2eb:	push   eax
6500e2ec:	call   DWORD PTR ds:0x65024018
6500e2f2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e2f9:	test   eax,eax
6500e2fb:	je     0x6500e313
6500e2fd:	push   esi
6500e2fe:	push   eax
6500e2ff:	call   DWORD PTR ds:0x65024014
6500e305:	add    DWORD PTR ds:0x6502d380,0x1
6500e30c:	mov    ds:0x650303a0,eax
6500e311:	pop    esi
6500e312:	ret    
6500e313:	xor    eax,eax
6500e315:	mov    ds:0x650303a0,eax
6500e31a:	pop    esi
6500e31b:	ret    
6500e31c:	mov    eax,ds:0x650303a0
6500e321:	pop    esi
6500e322:	ret    
6500e323:	int3   
6500e324:	int3   
6500e325:	int3   
6500e326:	int3   
6500e327:	int3   
6500e328:	int3   
6500e329:	int3   
6500e32a:	int3   
6500e32b:	int3   
6500e32c:	int3   
6500e32d:	int3   
6500e32e:	int3   
6500e32f:	int3   
6500e330:	push   ebp
6500e331:	mov    ebp,esp
6500e333:	and    esp,0xfffffff8
6500e336:	push   ecx
6500e337:	push   esi
6500e338:	push   0x0
6500e33a:	push   0x1
6500e33c:	push   0x650302c8
6500e341:	call   DWORD PTR ds:0x6502408c
6500e347:	test   eax,eax
6500e349:	jne    0x6500e3a9
6500e34b:	push   0x65028914
6500e350:	push   0x15
6500e352:	push   0x6502893c
6500e357:	call   0x65006a10
6500e35c:	push   0x65028954
6500e361:	push   0x8
6500e363:	push   0x650285dc
6500e368:	mov    esi,eax
6500e36a:	call   0x65006d00
6500e36f:	add    esp,0x18
6500e372:	push   eax
6500e373:	call   DWORD PTR ds:0x65024018
6500e379:	add    DWORD PTR ds:0x6502d37c,0x1
6500e380:	test   eax,eax
6500e382:	je     0x6500e39d
6500e384:	push   esi
6500e385:	push   eax
6500e386:	call   DWORD PTR ds:0x65024014
6500e38c:	add    DWORD PTR ds:0x6502d380,0x1
6500e393:	mov    ds:0x650303a4,eax
6500e398:	pop    esi
6500e399:	mov    esp,ebp
6500e39b:	pop    ebp
6500e39c:	ret    
6500e39d:	xor    eax,eax
6500e39f:	mov    ds:0x650303a4,eax
6500e3a4:	pop    esi
6500e3a5:	mov    esp,ebp
6500e3a7:	pop    ebp
6500e3a8:	ret    
6500e3a9:	mov    eax,ds:0x650303a4
6500e3ae:	pop    esi
6500e3af:	mov    esp,ebp
6500e3b1:	pop    ebp
6500e3b2:	ret    
6500e3b3:	int3   
6500e3b4:	int3   
6500e3b5:	int3   
6500e3b6:	int3   
6500e3b7:	int3   
6500e3b8:	int3   
6500e3b9:	int3   
6500e3ba:	int3   
6500e3bb:	int3   
6500e3bc:	int3   
6500e3bd:	int3   
6500e3be:	int3   
6500e3bf:	int3   
6500e3c0:	push   ebp
6500e3c1:	mov    ebp,esp
6500e3c3:	and    esp,0xfffffff8
6500e3c6:	push   ecx
6500e3c7:	push   esi
6500e3c8:	push   0x0
6500e3ca:	push   0x1
6500e3cc:	push   0x650302cc
6500e3d1:	call   DWORD PTR ds:0x6502408c
6500e3d7:	test   eax,eax
6500e3d9:	jne    0x6500e439
6500e3db:	push   0x65028980
6500e3e0:	push   0x18
6500e3e2:	push   0x650289b4
6500e3e7:	call   0x65006a10
6500e3ec:	push   0x650289d0
6500e3f1:	push   0x8
6500e3f3:	push   0x650285dc
6500e3f8:	mov    esi,eax
6500e3fa:	call   0x65006d00
6500e3ff:	add    esp,0x18
6500e402:	push   eax
6500e403:	call   DWORD PTR ds:0x65024018
6500e409:	add    DWORD PTR ds:0x6502d37c,0x1
6500e410:	test   eax,eax
6500e412:	je     0x6500e42d
6500e414:	push   esi
6500e415:	push   eax
6500e416:	call   DWORD PTR ds:0x65024014
6500e41c:	add    DWORD PTR ds:0x6502d380,0x1
6500e423:	mov    ds:0x650303a8,eax
6500e428:	pop    esi
6500e429:	mov    esp,ebp
6500e42b:	pop    ebp
6500e42c:	ret    
6500e42d:	xor    eax,eax
6500e42f:	mov    ds:0x650303a8,eax
6500e434:	pop    esi
6500e435:	mov    esp,ebp
6500e437:	pop    ebp
6500e438:	ret    
6500e439:	mov    eax,ds:0x650303a8
6500e43e:	pop    esi
6500e43f:	mov    esp,ebp
6500e441:	pop    ebp
6500e442:	ret    
6500e443:	int3   
6500e444:	int3   
6500e445:	int3   
6500e446:	int3   
6500e447:	int3   
6500e448:	int3   
6500e449:	int3   
6500e44a:	int3   
6500e44b:	int3   
6500e44c:	int3   
6500e44d:	int3   
6500e44e:	int3   
6500e44f:	int3   
6500e450:	push   esi
6500e451:	push   0x0
6500e453:	push   0x1
6500e455:	push   0x650302d0
6500e45a:	call   DWORD PTR ds:0x6502408c
6500e460:	test   eax,eax
6500e462:	jne    0x6500e4bc
6500e464:	push   0x65028a08
6500e469:	push   0xf
6500e46b:	push   0x65028a48
6500e470:	call   0x65006a10
6500e475:	push   0x65028a58
6500e47a:	push   0x8
6500e47c:	push   0x650285dc
6500e481:	mov    esi,eax
6500e483:	call   0x65006d00
6500e488:	add    esp,0x18
6500e48b:	push   eax
6500e48c:	call   DWORD PTR ds:0x65024018
6500e492:	add    DWORD PTR ds:0x6502d37c,0x1
6500e499:	test   eax,eax
6500e49b:	je     0x6500e4b3
6500e49d:	push   esi
6500e49e:	push   eax
6500e49f:	call   DWORD PTR ds:0x65024014
6500e4a5:	add    DWORD PTR ds:0x6502d380,0x1
6500e4ac:	mov    ds:0x650303ac,eax
6500e4b1:	pop    esi
6500e4b2:	ret    
6500e4b3:	xor    eax,eax
6500e4b5:	mov    ds:0x650303ac,eax
6500e4ba:	pop    esi
6500e4bb:	ret    
6500e4bc:	mov    eax,ds:0x650303ac
6500e4c1:	pop    esi
6500e4c2:	ret    
6500e4c3:	int3   
6500e4c4:	int3   
6500e4c5:	int3   
6500e4c6:	int3   
6500e4c7:	int3   
6500e4c8:	int3   
6500e4c9:	int3   
6500e4ca:	int3   
6500e4cb:	int3   
6500e4cc:	int3   
6500e4cd:	int3   
6500e4ce:	int3   
6500e4cf:	int3   
6500e4d0:	push   ebp
6500e4d1:	mov    ebp,esp
6500e4d3:	and    esp,0xfffffff8
6500e4d6:	push   ecx
6500e4d7:	push   esi
6500e4d8:	push   0x0
6500e4da:	push   0x1
6500e4dc:	push   0x650302ec
6500e4e1:	call   DWORD PTR ds:0x6502408c
6500e4e7:	test   eax,eax
6500e4e9:	jne    0x6500e549
6500e4eb:	push   0x65028a88
6500e4f0:	push   0x19
6500e4f2:	push   0x65028ac0
6500e4f7:	call   0x65006a10
6500e4fc:	push   0x65028adc
6500e501:	push   0x7
6500e503:	push   0x65028b04
6500e508:	mov    esi,eax
6500e50a:	call   0x65006d00
6500e50f:	add    esp,0x18
6500e512:	push   eax
6500e513:	call   DWORD PTR ds:0x65024018
6500e519:	add    DWORD PTR ds:0x6502d37c,0x1
6500e520:	test   eax,eax
6500e522:	je     0x6500e53d
6500e524:	push   esi
6500e525:	push   eax
6500e526:	call   DWORD PTR ds:0x65024014
6500e52c:	add    DWORD PTR ds:0x6502d380,0x1
6500e533:	mov    ds:0x650303b0,eax
6500e538:	pop    esi
6500e539:	mov    esp,ebp
6500e53b:	pop    ebp
6500e53c:	ret    
6500e53d:	xor    eax,eax
6500e53f:	mov    ds:0x650303b0,eax
6500e544:	pop    esi
6500e545:	mov    esp,ebp
6500e547:	pop    ebp
6500e548:	ret    
6500e549:	mov    eax,ds:0x650303b0
6500e54e:	pop    esi
6500e54f:	mov    esp,ebp
6500e551:	pop    ebp
6500e552:	ret    
6500e553:	int3   
6500e554:	int3   
6500e555:	int3   
6500e556:	int3   
6500e557:	int3   
6500e558:	int3   
6500e559:	int3   
6500e55a:	int3   
6500e55b:	int3   
6500e55c:	int3   
6500e55d:	int3   
6500e55e:	int3   
6500e55f:	int3   
6500e560:	push   ebp
6500e561:	mov    ebp,esp
6500e563:	and    esp,0xfffffff8
6500e566:	push   ecx
6500e567:	push   esi
6500e568:	push   0x0
6500e56a:	push   0x1
6500e56c:	push   0x650302f4
6500e571:	call   DWORD PTR ds:0x6502408c
6500e577:	test   eax,eax
6500e579:	jne    0x6500e5d9
6500e57b:	push   0x65028b28
6500e580:	push   0x15
6500e582:	push   0x65028b58
6500e587:	call   0x65006a10
6500e58c:	push   0x65028b70
6500e591:	push   0x8
6500e593:	push   0x65028b14
6500e598:	mov    esi,eax
6500e59a:	call   0x65006d00
6500e59f:	add    esp,0x18
6500e5a2:	push   eax
6500e5a3:	call   DWORD PTR ds:0x65024018
6500e5a9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e5b0:	test   eax,eax
6500e5b2:	je     0x6500e5cd
6500e5b4:	push   esi
6500e5b5:	push   eax
6500e5b6:	call   DWORD PTR ds:0x65024014
6500e5bc:	add    DWORD PTR ds:0x6502d380,0x1
6500e5c3:	mov    ds:0x650303b4,eax
6500e5c8:	pop    esi
6500e5c9:	mov    esp,ebp
6500e5cb:	pop    ebp
6500e5cc:	ret    
6500e5cd:	xor    eax,eax
6500e5cf:	mov    ds:0x650303b4,eax
6500e5d4:	pop    esi
6500e5d5:	mov    esp,ebp
6500e5d7:	pop    ebp
6500e5d8:	ret    
6500e5d9:	mov    eax,ds:0x650303b4
6500e5de:	pop    esi
6500e5df:	mov    esp,ebp
6500e5e1:	pop    ebp
6500e5e2:	ret    
6500e5e3:	int3   
6500e5e4:	int3   
6500e5e5:	int3   
6500e5e6:	int3   
6500e5e7:	int3   
6500e5e8:	int3   
6500e5e9:	int3   
6500e5ea:	int3   
6500e5eb:	int3   
6500e5ec:	int3   
6500e5ed:	int3   
6500e5ee:	int3   
6500e5ef:	int3   
6500e5f0:	push   ebp
6500e5f1:	mov    ebp,esp
6500e5f3:	and    esp,0xfffffff8
6500e5f6:	push   ecx
6500e5f7:	push   esi
6500e5f8:	push   0x0
6500e5fa:	push   0x1
6500e5fc:	push   0x650302f8
6500e601:	call   DWORD PTR ds:0x6502408c
6500e607:	test   eax,eax
6500e609:	jne    0x6500e669
6500e60b:	push   0x65028ba0
6500e610:	push   0x15
6500e612:	push   0x65028be0
6500e617:	call   0x65006a10
6500e61c:	push   0x65028bf8
6500e621:	push   0x8
6500e623:	push   0x65028b14
6500e628:	mov    esi,eax
6500e62a:	call   0x65006d00
6500e62f:	add    esp,0x18
6500e632:	push   eax
6500e633:	call   DWORD PTR ds:0x65024018
6500e639:	add    DWORD PTR ds:0x6502d37c,0x1
6500e640:	test   eax,eax
6500e642:	je     0x6500e65d
6500e644:	push   esi
6500e645:	push   eax
6500e646:	call   DWORD PTR ds:0x65024014
6500e64c:	add    DWORD PTR ds:0x6502d380,0x1
6500e653:	mov    ds:0x650303b8,eax
6500e658:	pop    esi
6500e659:	mov    esp,ebp
6500e65b:	pop    ebp
6500e65c:	ret    
6500e65d:	xor    eax,eax
6500e65f:	mov    ds:0x650303b8,eax
6500e664:	pop    esi
6500e665:	mov    esp,ebp
6500e667:	pop    ebp
6500e668:	ret    
6500e669:	mov    eax,ds:0x650303b8
6500e66e:	pop    esi
6500e66f:	mov    esp,ebp
6500e671:	pop    ebp
6500e672:	ret    
6500e673:	int3   
6500e674:	int3   
6500e675:	int3   
6500e676:	int3   
6500e677:	int3   
6500e678:	int3   
6500e679:	int3   
6500e67a:	int3   
6500e67b:	int3   
6500e67c:	int3   
6500e67d:	int3   
6500e67e:	int3   
6500e67f:	int3   
6500e680:	push   esi
6500e681:	push   0x0
6500e683:	push   0x1
6500e685:	push   0x650302fc
6500e68a:	call   DWORD PTR ds:0x6502408c
6500e690:	test   eax,eax
6500e692:	jne    0x6500e6ec
6500e694:	push   0x65028c28
6500e699:	push   0x34
6500e69b:	push   0x65028c5c
6500e6a0:	call   0x65006a10
6500e6a5:	push   0x65028c94
6500e6aa:	push   0x8
6500e6ac:	push   0x65028b14
6500e6b1:	mov    esi,eax
6500e6b3:	call   0x65006d00
6500e6b8:	add    esp,0x18
6500e6bb:	push   eax
6500e6bc:	call   DWORD PTR ds:0x65024018
6500e6c2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e6c9:	test   eax,eax
6500e6cb:	je     0x6500e6e3
6500e6cd:	push   esi
6500e6ce:	push   eax
6500e6cf:	call   DWORD PTR ds:0x65024014
6500e6d5:	add    DWORD PTR ds:0x6502d380,0x1
6500e6dc:	mov    ds:0x650303bc,eax
6500e6e1:	pop    esi
6500e6e2:	ret    
6500e6e3:	xor    eax,eax
6500e6e5:	mov    ds:0x650303bc,eax
6500e6ea:	pop    esi
6500e6eb:	ret    
6500e6ec:	mov    eax,ds:0x650303bc
6500e6f1:	pop    esi
6500e6f2:	ret    
6500e6f3:	int3   
6500e6f4:	int3   
6500e6f5:	int3   
6500e6f6:	int3   
6500e6f7:	int3   
6500e6f8:	int3   
6500e6f9:	int3   
6500e6fa:	int3   
6500e6fb:	int3   
6500e6fc:	int3   
6500e6fd:	int3   
6500e6fe:	int3   
6500e6ff:	int3   
6500e700:	push   ebp
6500e701:	mov    ebp,esp
6500e703:	and    esp,0xfffffff8
6500e706:	push   ecx
6500e707:	push   esi
6500e708:	push   0x0
6500e70a:	push   0x1
6500e70c:	push   0x65030308
6500e711:	call   DWORD PTR ds:0x6502408c
6500e717:	test   eax,eax
6500e719:	jne    0x6500e779
6500e71b:	push   0x65028cc8
6500e720:	push   0xe
6500e722:	push   0x65028cec
6500e727:	call   0x65006a10
6500e72c:	push   0x65028cfc
6500e731:	push   0x8
6500e733:	push   0x65028b14
6500e738:	mov    esi,eax
6500e73a:	call   0x65006d00
6500e73f:	add    esp,0x18
6500e742:	push   eax
6500e743:	call   DWORD PTR ds:0x65024018
6500e749:	add    DWORD PTR ds:0x6502d37c,0x1
6500e750:	test   eax,eax
6500e752:	je     0x6500e76d
6500e754:	push   esi
6500e755:	push   eax
6500e756:	call   DWORD PTR ds:0x65024014
6500e75c:	add    DWORD PTR ds:0x6502d380,0x1
6500e763:	mov    ds:0x650303c0,eax
6500e768:	pop    esi
6500e769:	mov    esp,ebp
6500e76b:	pop    ebp
6500e76c:	ret    
6500e76d:	xor    eax,eax
6500e76f:	mov    ds:0x650303c0,eax
6500e774:	pop    esi
6500e775:	mov    esp,ebp
6500e777:	pop    ebp
6500e778:	ret    
6500e779:	mov    eax,ds:0x650303c0
6500e77e:	pop    esi
6500e77f:	mov    esp,ebp
6500e781:	pop    ebp
6500e782:	ret    
6500e783:	int3   
6500e784:	int3   
6500e785:	int3   
6500e786:	int3   
6500e787:	int3   
6500e788:	int3   
6500e789:	int3   
6500e78a:	int3   
6500e78b:	int3   
6500e78c:	int3   
6500e78d:	int3   
6500e78e:	int3   
6500e78f:	int3   
6500e790:	push   ebp
6500e791:	mov    ebp,esp
6500e793:	and    esp,0xfffffff8
6500e796:	push   ecx
6500e797:	push   esi
6500e798:	push   0x0
6500e79a:	push   0x1
6500e79c:	push   0x6503031c
6500e7a1:	call   DWORD PTR ds:0x6502408c
6500e7a7:	test   eax,eax
6500e7a9:	jne    0x6500e809
6500e7ab:	push   0x65028d34
6500e7b0:	push   0x12
6500e7b2:	push   0x65028d70
6500e7b7:	call   0x65006a10
6500e7bc:	push   0x65028d84
6500e7c1:	push   0x8
6500e7c3:	push   0x65028b14
6500e7c8:	mov    esi,eax
6500e7ca:	call   0x65006d00
6500e7cf:	add    esp,0x18
6500e7d2:	push   eax
6500e7d3:	call   DWORD PTR ds:0x65024018
6500e7d9:	add    DWORD PTR ds:0x6502d37c,0x1
6500e7e0:	test   eax,eax
6500e7e2:	je     0x6500e7fd
6500e7e4:	push   esi
6500e7e5:	push   eax
6500e7e6:	call   DWORD PTR ds:0x65024014
6500e7ec:	add    DWORD PTR ds:0x6502d380,0x1
6500e7f3:	mov    ds:0x650303c4,eax
6500e7f8:	pop    esi
6500e7f9:	mov    esp,ebp
6500e7fb:	pop    ebp
6500e7fc:	ret    
6500e7fd:	xor    eax,eax
6500e7ff:	mov    ds:0x650303c4,eax
6500e804:	pop    esi
6500e805:	mov    esp,ebp
6500e807:	pop    ebp
6500e808:	ret    
6500e809:	mov    eax,ds:0x650303c4
6500e80e:	pop    esi
6500e80f:	mov    esp,ebp
6500e811:	pop    ebp
6500e812:	ret    
6500e813:	int3   
6500e814:	int3   
6500e815:	int3   
6500e816:	int3   
6500e817:	int3   
6500e818:	int3   
6500e819:	int3   
6500e81a:	int3   
6500e81b:	int3   
6500e81c:	int3   
6500e81d:	int3   
6500e81e:	int3   
6500e81f:	int3   
6500e820:	push   esi
6500e821:	push   0x0
6500e823:	push   0x1
6500e825:	push   0x6503033c
6500e82a:	call   DWORD PTR ds:0x6502408c
6500e830:	test   eax,eax
6500e832:	jne    0x6500e88c
6500e834:	push   0x65028db0
6500e839:	push   0xc
6500e83b:	push   0x65028de4
6500e840:	call   0x65006a10
6500e845:	push   0x65028df4
6500e84a:	push   0x5
6500e84c:	push   0x65028e30
6500e851:	mov    esi,eax
6500e853:	call   0x65006d00
6500e858:	add    esp,0x18
6500e85b:	push   eax
6500e85c:	call   DWORD PTR ds:0x65024018
6500e862:	add    DWORD PTR ds:0x6502d37c,0x1
6500e869:	test   eax,eax
6500e86b:	je     0x6500e883
6500e86d:	push   esi
6500e86e:	push   eax
6500e86f:	call   DWORD PTR ds:0x65024014
6500e875:	add    DWORD PTR ds:0x6502d380,0x1
6500e87c:	mov    ds:0x650303c8,eax
6500e881:	pop    esi
6500e882:	ret    
6500e883:	xor    eax,eax
6500e885:	mov    ds:0x650303c8,eax
6500e88a:	pop    esi
6500e88b:	ret    
6500e88c:	mov    eax,ds:0x650303c8
6500e891:	pop    esi
6500e892:	ret    
6500e893:	int3   
6500e894:	int3   
6500e895:	int3   
6500e896:	int3   
6500e897:	int3   
6500e898:	int3   
6500e899:	int3   
6500e89a:	int3   
6500e89b:	int3   
6500e89c:	int3   
6500e89d:	int3   
6500e89e:	int3   
6500e89f:	int3   
6500e8a0:	push   esi
6500e8a1:	push   0x0
6500e8a3:	push   0x1
6500e8a5:	push   0x65030340
6500e8aa:	call   DWORD PTR ds:0x6502408c
6500e8b0:	test   eax,eax
6500e8b2:	jne    0x6500e90c
6500e8b4:	push   0x65028e3c
6500e8b9:	push   0x11
6500e8bb:	push   0x65028e78
6500e8c0:	call   0x65006a10
6500e8c5:	push   0x65028e8c
6500e8ca:	push   0x5
6500e8cc:	push   0x65028e30
6500e8d1:	mov    esi,eax
6500e8d3:	call   0x65006d00
6500e8d8:	add    esp,0x18
6500e8db:	push   eax
6500e8dc:	call   DWORD PTR ds:0x65024018
6500e8e2:	add    DWORD PTR ds:0x6502d37c,0x1
6500e8e9:	test   eax,eax
6500e8eb:	je     0x6500e903
6500e8ed:	push   esi
6500e8ee:	push   eax
6500e8ef:	call   DWORD PTR ds:0x65024014
6500e8f5:	add    DWORD PTR ds:0x6502d380,0x1
6500e8fc:	mov    ds:0x650303cc,eax
6500e901:	pop    esi
6500e902:	ret    
6500e903:	xor    eax,eax
6500e905:	mov    ds:0x650303cc,eax
6500e90a:	pop    esi
6500e90b:	ret    
6500e90c:	mov    eax,ds:0x650303cc
6500e911:	pop    esi
6500e912:	ret    
6500e913:	int3   
6500e914:	int3   
6500e915:	int3   
6500e916:	int3   
6500e917:	int3   
6500e918:	int3   
6500e919:	int3   
6500e91a:	int3   
6500e91b:	int3   
6500e91c:	int3   
6500e91d:	int3   
6500e91e:	int3   
6500e91f:	int3   
6500e920:	push   esi
6500e921:	push   edi
6500e922:	mov    edi,DWORD PTR [esp+0xc]
6500e926:	mov    esi,DWORD PTR [edi+0xc]
6500e929:	cmp    esi,DWORD PTR [edi+0x14]
6500e92c:	je     0x6500e944
6500e92e:	mov    edi,edi
6500e930:	mov    eax,DWORD PTR [esi-0x4]
6500e933:	mov    ecx,DWORD PTR [esi-0x8]
6500e936:	push   eax
6500e937:	call   ecx
6500e939:	add    esi,0xfffffff8
6500e93c:	add    esp,0x4
6500e93f:	cmp    esi,DWORD PTR [edi+0x14]
6500e942:	jne    0x6500e930
6500e944:	mov    edx,DWORD PTR [edi+0x14]
6500e947:	push   edx
6500e948:	call   0x65013577
6500e94d:	mov    edi,DWORD PTR [edi+0x8]
6500e950:	mov    esi,DWORD PTR [edi]
6500e952:	push   edi
6500e953:	call   0x65013577
6500e958:	add    esp,0x8
6500e95b:	test   esi,esi
6500e95d:	je     0x6500e971
6500e95f:	nop
6500e960:	mov    eax,esi
6500e962:	mov    esi,DWORD PTR [esi]
6500e964:	push   eax
6500e965:	call   0x65013577
6500e96a:	add    esp,0x4
6500e96d:	test   esi,esi
6500e96f:	jne    0x6500e960
6500e971:	pop    edi
6500e972:	pop    esi
6500e973:	ret    
6500e974:	int3   
6500e975:	int3   
6500e976:	int3   
6500e977:	int3   
6500e978:	int3   
6500e979:	int3   
6500e97a:	int3   
6500e97b:	int3   
6500e97c:	int3   
6500e97d:	int3   
6500e97e:	int3   
6500e97f:	int3   
6500e980:	push   esi
6500e981:	mov    esi,DWORD PTR [esp+0x8]
6500e985:	push   edi
6500e986:	mov    edi,DWORD PTR [esp+0x10]
6500e98a:	lea    eax,[edi+0x4]
6500e98d:	push   eax
6500e98e:	mov    DWORD PTR [esi+0x18],edi
6500e991:	call   0x65013654
6500e996:	xor    ecx,ecx
6500e998:	add    esp,0x4
6500e99b:	cmp    eax,ecx
6500e99d:	je     0x6500e9ba
6500e99f:	mov    DWORD PTR [esi+0x8],eax
6500e9a2:	mov    DWORD PTR [esi],edi
6500e9a4:	lea    edx,[eax+0x4]
6500e9a7:	mov    DWORD PTR [esi+0x4],edx
6500e9aa:	mov    DWORD PTR [eax],ecx
6500e9ac:	pop    edi
6500e9ad:	mov    DWORD PTR [esi+0xc],ecx
6500e9b0:	mov    DWORD PTR [esi+0x10],ecx
6500e9b3:	mov    DWORD PTR [esi+0x14],ecx
6500e9b6:	mov    al,0x1
6500e9b8:	pop    esi
6500e9b9:	ret    
6500e9ba:	pop    edi
6500e9bb:	xor    al,al
6500e9bd:	pop    esi
6500e9be:	ret    
6500e9bf:	int3   
6500e9c0:	mov    ecx,DWORD PTR [ebx]
6500e9c2:	push   esi
6500e9c3:	mov    esi,eax
6500e9c5:	add    esi,0x3
6500e9c8:	and    esi,0xfffffffc
6500e9cb:	cmp    ecx,esi
6500e9cd:	jae    0x6500ea03
6500e9cf:	push   edi
6500e9d0:	mov    edi,DWORD PTR [ebx+0x18]
6500e9d3:	cmp    edi,esi
6500e9d5:	jae    0x6500e9dd
6500e9d7:	add    edi,edi
6500e9d9:	cmp    edi,esi
6500e9db:	jb     0x6500e9d7
6500e9dd:	lea    eax,[edi+0x4]
6500e9e0:	push   eax
6500e9e1:	call   0x65013654
6500e9e6:	mov    edx,DWORD PTR [ebx+0x8]
6500e9e9:	mov    DWORD PTR [eax],edx
6500e9eb:	add    esp,0x4
6500e9ee:	sub    edi,esi
6500e9f0:	lea    ecx,[eax+0x4]
6500e9f3:	mov    DWORD PTR [ebx+0x8],eax
6500e9f6:	lea    eax,[ecx+esi*1]
6500e9f9:	mov    DWORD PTR [ebx],edi
6500e9fb:	pop    edi
6500e9fc:	mov    DWORD PTR [ebx+0x4],eax
6500e9ff:	mov    eax,ecx
6500ea01:	pop    esi
6500ea02:	ret    
6500ea03:	mov    eax,DWORD PTR [ebx+0x4]
6500ea06:	sub    ecx,esi
6500ea08:	mov    DWORD PTR [ebx],ecx
6500ea0a:	lea    ecx,[eax+esi*1]
6500ea0d:	mov    DWORD PTR [ebx+0x4],ecx
6500ea10:	pop    esi
6500ea11:	ret    
6500ea12:	int3   
6500ea13:	int3   
6500ea14:	int3   
6500ea15:	int3   
6500ea16:	int3   
6500ea17:	int3   
6500ea18:	int3   
6500ea19:	int3   
6500ea1a:	int3   
6500ea1b:	int3   
6500ea1c:	int3   
6500ea1d:	int3   
6500ea1e:	int3   
6500ea1f:	int3   
6500ea20:	push   ebx
6500ea21:	mov    DWORD PTR [esi],0x6
6500ea27:	mov    DWORD PTR [esi+0x8],0x0
6500ea2e:	mov    ebx,DWORD PTR [ecx]
6500ea30:	shl    eax,0x4
6500ea33:	call   0x6500e9c0
6500ea38:	mov    DWORD PTR [esi+0xc],eax
6500ea3b:	neg    eax
6500ea3d:	sbb    eax,eax
6500ea3f:	neg    eax
6500ea41:	sub    eax,0x1
6500ea44:	pop    ebx
6500ea45:	ret    
6500ea46:	int3   
6500ea47:	int3   
6500ea48:	int3   
6500ea49:	int3   
6500ea4a:	int3   
6500ea4b:	int3   
6500ea4c:	int3   
6500ea4d:	int3   
6500ea4e:	int3   
6500ea4f:	int3   
6500ea50:	push   ebx
6500ea51:	mov    DWORD PTR [esi],0x7
6500ea57:	mov    DWORD PTR [esi+0x8],0x0
6500ea5e:	mov    ebx,DWORD PTR [ecx]
6500ea60:	shl    eax,0x5
6500ea63:	call   0x6500e9c0
6500ea68:	mov    DWORD PTR [esi+0xc],eax
6500ea6b:	neg    eax
6500ea6d:	sbb    eax,eax
6500ea6f:	neg    eax
6500ea71:	sub    eax,0x1
6500ea74:	pop    ebx
6500ea75:	ret    
6500ea76:	int3   
6500ea77:	int3   
6500ea78:	int3   
6500ea79:	int3   
6500ea7a:	int3   
6500ea7b:	int3   
6500ea7c:	int3   
6500ea7d:	int3   
6500ea7e:	int3   
6500ea7f:	int3   
6500ea80:	sub    esp,0x44
6500ea83:	mov    eax,DWORD PTR [esp+0x54]
6500ea87:	mov    edx,DWORD PTR [esp+0x4c]
6500ea8b:	mov    ecx,DWORD PTR [esp+0x48]
6500ea8f:	mov    eax,DWORD PTR [eax]
6500ea91:	push   ebx
6500ea92:	push   ebp
6500ea93:	push   esi
6500ea94:	mov    esi,DWORD PTR [esp+0x5c]
6500ea98:	add    eax,edx
6500ea9a:	add    edx,esi
6500ea9c:	mov    esi,DWORD PTR [ecx+0xc]
6500ea9f:	mov    DWORD PTR [esp+0x18],esi
6500eaa3:	mov    esi,DWORD PTR [ecx+0x8]
6500eaa6:	mov    ecx,DWORD PTR [ecx+0x10]
6500eaa9:	push   edi
6500eaaa:	xor    edi,edi
6500eaac:	cmp    eax,edx
6500eaae:	mov    DWORD PTR [esp+0x60],ecx
6500eab2:	mov    DWORD PTR [esp+0x14],eax
6500eab6:	mov    DWORD PTR [esp+0x20],edx
6500eaba:	mov    DWORD PTR [esp+0x18],esi
6500eabe:	lea    ecx,[edi+0x20]
6500eac1:	je     0x6500f341
6500eac7:	mov    ebp,DWORD PTR [esp+0x38]
6500eacb:	jmp    0x6500ead0
6500eacd:	lea    ecx,[ecx+0x0]
6500ead0:	mov    eax,DWORD PTR [esp+0x18]
6500ead4:	test   eax,eax
6500ead6:	mov    ebx,DWORD PTR [esp+0x14]
6500eada:	jne    0x6500ebef
6500eae0:	mov    al,BYTE PTR [ebx]
6500eae2:	cmp    al,0x7f
6500eae4:	ja     0x6500eafa
6500eae6:	movzx  eax,al
6500eae9:	cdq    
6500eaea:	mov    ebx,0x2
6500eaef:	mov    ebp,eax
6500eaf1:	mov    DWORD PTR [esp+0x3c],edx
6500eaf5:	jmp    0x6500f1cc
6500eafa:	cmp    al,0xe0
6500eafc:	jb     0x6500eb22
6500eafe:	cmp    al,0xff
6500eb00:	ja     0x6500eb22
6500eb02:	test   al,al
6500eb04:	movsx  eax,al
6500eb07:	cdq    
6500eb08:	mov    ebp,eax
6500eb0a:	mov    DWORD PTR [esp+0x3c],edx
6500eb0e:	mov    DWORD PTR [esp+0x38],ebp
6500eb12:	jl     0x6500ee2b
6500eb18:	mov    ebx,0x2
6500eb1d:	jmp    0x6500f1d0
6500eb22:	cmp    al,0xc0
6500eb24:	jb     0x6500ebbe
6500eb2a:	cmp    al,0xdf
6500eb2c:	ja     0x6500ebbe
6500eb32:	movzx  eax,al
6500eb35:	lea    ecx,[eax-0xc0]
6500eb3b:	cmp    ecx,0x1f
6500eb3e:	ja     0x6500f345
6500eb44:	movzx  ecx,BYTE PTR [ecx+0x6500f390]
6500eb4b:	jmp    DWORD PTR [ecx*4+0x6500f378]
6500eb52:	xor    ebx,ebx
6500eb54:	jmp    0x6500f1d0
6500eb59:	mov    BYTE PTR [esp+0x38],0x0
6500eb5e:	mov    ebp,DWORD PTR [esp+0x38]
6500eb62:	mov    ebx,0x1
6500eb67:	jmp    0x6500f1d0
6500eb6c:	mov    ebx,0x1
6500eb71:	mov    BYTE PTR [esp+0x38],bl
6500eb75:	mov    ebp,DWORD PTR [esp+0x38]
6500eb79:	jmp    0x6500f1d0
6500eb7e:	mov    ecx,eax
6500eb80:	and    ecx,0x3
6500eb83:	mov    esi,0x1
6500eb88:	shl    esi,cl
6500eb8a:	and    eax,0x1f
6500eb8d:	add    ebx,0x1
6500eb90:	mov    DWORD PTR [esp+0x18],eax
6500eb94:	mov    DWORD PTR [esp+0x1c],esi
6500eb98:	mov    DWORD PTR [esp+0x14],ebx
6500eb9c:	jmp    0x6500ebf3
6500eb9e:	mov    ecx,eax
6500eba0:	and    ecx,0x1
6500eba3:	mov    esi,0x2
6500eba8:	shl    esi,cl
6500ebaa:	and    eax,0x1f
6500ebad:	add    ebx,0x1
6500ebb0:	mov    DWORD PTR [esp+0x18],eax
6500ebb4:	mov    DWORD PTR [esp+0x1c],esi
6500ebb8:	mov    DWORD PTR [esp+0x14],ebx
6500ebbc:	jmp    0x6500ebf3
6500ebbe:	cmp    al,0xa0
6500ebc0:	jb     0x6500f122
6500ebc6:	cmp    al,0xbf
6500ebc8:	ja     0x6500f122
6500ebce:	and    eax,0x1f
6500ebd1:	mov    esi,eax
6500ebd3:	mov    DWORD PTR [esp+0x1c],esi
6500ebd7:	je     0x6500eecd
6500ebdd:	mov    eax,0x20
6500ebe2:	add    ebx,0x1
6500ebe5:	mov    DWORD PTR [esp+0x18],eax
6500ebe9:	mov    DWORD PTR [esp+0x14],ebx
6500ebed:	jmp    0x6500ebf3
6500ebef:	mov    esi,DWORD PTR [esp+0x1c]
6500ebf3:	mov    ecx,edx
6500ebf5:	sub    ecx,ebx
6500ebf7:	cmp    ecx,esi
6500ebf9:	jb     0x6500f341
6500ebff:	mov    edi,ebx
6500ec01:	add    eax,0xfffffff6
6500ec04:	cmp    eax,0x16
6500ec07:	lea    ebx,[ebx+esi*1-0x1]
6500ec0b:	mov    DWORD PTR [esp+0x14],ebx
6500ec0f:	ja     0x6500f345
6500ec15:	jmp    DWORD PTR [eax*4+0x6500f3b0]
6500ec1c:	xor    eax,eax
6500ec1e:	mov    ah,BYTE PTR [edi]
6500ec20:	mov    al,BYTE PTR [edi+0x1]
6500ec23:	mov    esi,eax
6500ec25:	test   esi,esi
6500ec27:	jmp    0x6500ebd3
6500ec29:	movzx  eax,BYTE PTR [edi+0x2]
6500ec2d:	xor    ecx,ecx
6500ec2f:	mov    ch,BYTE PTR [edi]
6500ec31:	mov    cl,BYTE PTR [edi+0x1]
6500ec34:	shl    ecx,0x8
6500ec37:	or     ecx,eax
6500ec39:	movzx  eax,BYTE PTR [edi+0x3]
6500ec3d:	shl    ecx,0x8
6500ec40:	or     ecx,eax
6500ec42:	mov    esi,ecx
6500ec44:	jmp    0x6500ebd3
6500ec46:	movzx  edx,BYTE PTR [edi+0x2]
6500ec4a:	movzx  eax,BYTE PTR [edi+0x3]
6500ec4e:	xor    ecx,ecx
6500ec50:	mov    ch,BYTE PTR [edi]
6500ec52:	mov    ebx,0x4
6500ec57:	mov    cl,BYTE PTR [edi+0x1]
6500ec5a:	shl    ecx,0x8
6500ec5d:	or     ecx,edx
6500ec5f:	shl    ecx,0x8
6500ec62:	or     ecx,eax
6500ec64:	mov    DWORD PTR [esp+0x24],ecx
6500ec68:	fld    DWORD PTR [esp+0x24]
6500ec6c:	fstp   QWORD PTR [esp+0x38]
6500ec70:	mov    ebp,DWORD PTR [esp+0x38]
6500ec74:	jmp    0x6500f1d0
6500ec79:	movzx  eax,BYTE PTR [edi]
6500ec7c:	cdq    
6500ec7d:	shld   edx,eax,0x8
6500ec81:	shl    eax,0x8
6500ec84:	mov    ecx,eax
6500ec86:	movzx  eax,BYTE PTR [edi+0x1]
6500ec8a:	mov    esi,edx
6500ec8c:	cdq    
6500ec8d:	or     ecx,eax
6500ec8f:	movzx  eax,BYTE PTR [edi+0x2]
6500ec93:	or     esi,edx
6500ec95:	shld   esi,ecx,0x8
6500ec99:	shl    ecx,0x8
6500ec9c:	cdq    
6500ec9d:	or     ecx,eax
6500ec9f:	movzx  eax,BYTE PTR [edi+0x3]
6500eca3:	or     esi,edx
6500eca5:	shld   esi,ecx,0x8
6500eca9:	shl    ecx,0x8
6500ecac:	cdq    
6500ecad:	or     ecx,eax
6500ecaf:	movzx  eax,BYTE PTR [edi+0x4]
6500ecb3:	or     esi,edx
6500ecb5:	shld   esi,ecx,0x8
6500ecb9:	shl    ecx,0x8
6500ecbc:	cdq    
6500ecbd:	or     ecx,eax
6500ecbf:	movzx  eax,BYTE PTR [edi+0x5]
6500ecc3:	or     esi,edx
6500ecc5:	shld   esi,ecx,0x8
6500ecc9:	shl    ecx,0x8
6500eccc:	cdq    
6500eccd:	or     ecx,eax
6500eccf:	movzx  eax,BYTE PTR [edi+0x6]
6500ecd3:	or     esi,edx
6500ecd5:	shld   esi,ecx,0x8
6500ecd9:	shl    ecx,0x8
6500ecdc:	cdq    
6500ecdd:	or     ecx,eax
6500ecdf:	movzx  eax,BYTE PTR [edi+0x7]
6500ece3:	or     esi,edx
6500ece5:	shld   esi,ecx,0x8
6500ece9:	cdq    
6500ecea:	shl    ecx,0x8
6500eced:	or     ecx,eax
6500ecef:	or     esi,edx
6500ecf1:	mov    DWORD PTR [esp+0x28],ecx
6500ecf5:	mov    DWORD PTR [esp+0x2c],esi
6500ecf9:	mov    ebx,0x4
6500ecfe:	fld    QWORD PTR [esp+0x28]
6500ed02:	fstp   QWORD PTR [esp+0x38]
6500ed06:	mov    ebp,DWORD PTR [esp+0x38]
6500ed0a:	jmp    0x6500f1d0
6500ed0f:	movzx  eax,BYTE PTR [edi]
6500ed12:	cdq    
6500ed13:	mov    ebx,0x2
6500ed18:	mov    ebp,eax
6500ed1a:	mov    DWORD PTR [esp+0x3c],edx
6500ed1e:	jmp    0x6500f1cc
6500ed23:	xor    edx,edx
6500ed25:	mov    dh,BYTE PTR [edi]
6500ed27:	mov    ebx,0x2
6500ed2c:	mov    dl,BYTE PTR [edi+0x1]
6500ed2f:	movzx  eax,dx
6500ed32:	cdq    
6500ed33:	mov    ebp,eax
6500ed35:	mov    DWORD PTR [esp+0x3c],edx
6500ed39:	jmp    0x6500f1cc
6500ed3e:	movzx  ecx,BYTE PTR [edi+0x2]
6500ed42:	movzx  edx,BYTE PTR [edi+0x3]
6500ed46:	xor    eax,eax
6500ed48:	mov    ah,BYTE PTR [edi]
6500ed4a:	mov    ebx,0x2
6500ed4f:	mov    DWORD PTR [esp+0x3c],0x0
6500ed57:	mov    al,BYTE PTR [edi+0x1]
6500ed5a:	shl    eax,0x8
6500ed5d:	or     eax,ecx
6500ed5f:	shl    eax,0x8
6500ed62:	or     eax,edx
6500ed64:	mov    ebp,eax
6500ed66:	jmp    0x6500f1cc
6500ed6b:	movzx  eax,BYTE PTR [edi]
6500ed6e:	cdq    
6500ed6f:	shld   edx,eax,0x8
6500ed73:	shl    eax,0x8
6500ed76:	mov    ecx,eax
6500ed78:	movzx  eax,BYTE PTR [edi+0x1]
6500ed7c:	mov    esi,edx
6500ed7e:	cdq    
6500ed7f:	or     ecx,eax
6500ed81:	movzx  eax,BYTE PTR [edi+0x2]
6500ed85:	or     esi,edx
6500ed87:	shld   esi,ecx,0x8
6500ed8b:	shl    ecx,0x8
6500ed8e:	cdq    
6500ed8f:	or     ecx,eax
6500ed91:	movzx  eax,BYTE PTR [edi+0x3]
6500ed95:	or     esi,edx
6500ed97:	shld   esi,ecx,0x8
6500ed9b:	shl    ecx,0x8
6500ed9e:	cdq    
6500ed9f:	or     ecx,eax
6500eda1:	movzx  eax,BYTE PTR [edi+0x4]
6500eda5:	or     esi,edx
6500eda7:	shld   esi,ecx,0x8
6500edab:	shl    ecx,0x8
6500edae:	cdq    
6500edaf:	or     ecx,eax
6500edb1:	movzx  eax,BYTE PTR [edi+0x5]
6500edb5:	or     esi,edx
6500edb7:	shld   esi,ecx,0x8
6500edbb:	shl    ecx,0x8
6500edbe:	cdq    
6500edbf:	or     ecx,eax
6500edc1:	movzx  eax,BYTE PTR [edi+0x6]
6500edc5:	or     esi,edx
6500edc7:	shld   esi,ecx,0x8
6500edcb:	cdq    
6500edcc:	shl    ecx,0x8
6500edcf:	or     ecx,eax
6500edd1:	movzx  eax,BYTE PTR [edi+0x7]
6500edd5:	or     esi,edx
6500edd7:	mov    ebp,ecx
6500edd9:	mov    ecx,esi
6500eddb:	shld   ecx,ebp,0x8
6500eddf:	cdq    
6500ede0:	shl    ebp,0x8
6500ede3:	or     ebp,eax
6500ede5:	mov    ebx,0x2
6500edea:	or     ecx,edx
6500edec:	jmp    0x6500f1c8
6500edf1:	mov    al,BYTE PTR [edi]
6500edf3:	jmp    0x6500eb02
6500edf8:	xor    edx,edx
6500edfa:	mov    dh,BYTE PTR [edi]
6500edfc:	mov    dl,BYTE PTR [edi+0x1]
6500edff:	movzx  eax,dx
6500ee02:	test   ax,ax
6500ee05:	movsx  eax,ax
6500ee08:	jmp    0x6500eb07
6500ee0d:	movzx  ecx,BYTE PTR [edi+0x2]
6500ee11:	movzx  edx,BYTE PTR [edi+0x3]
6500ee15:	xor    eax,eax
6500ee17:	mov    ah,BYTE PTR [edi]
6500ee19:	mov    al,BYTE PTR [edi+0x1]
6500ee1c:	shl    eax,0x8
6500ee1f:	or     eax,ecx
6500ee21:	shl    eax,0x8
6500ee24:	or     eax,edx
6500ee26:	jmp    0x6500eb07
6500ee2b:	mov    ebx,0x3
6500ee30:	jmp    0x6500f1d0
6500ee35:	movzx  eax,BYTE PTR [edi]
6500ee38:	cdq    
6500ee39:	shld   edx,eax,0x8
6500ee3d:	shl    eax,0x8
6500ee40:	mov    ecx,eax
6500ee42:	movzx  eax,BYTE PTR [edi+0x1]
6500ee46:	mov    esi,edx
6500ee48:	cdq    
6500ee49:	or     ecx,eax
6500ee4b:	movzx  eax,BYTE PTR [edi+0x2]
6500ee4f:	or     esi,edx
6500ee51:	shld   esi,ecx,0x8
6500ee55:	shl    ecx,0x8
6500ee58:	cdq    
6500ee59:	or     ecx,eax
6500ee5b:	movzx  eax,BYTE PTR [edi+0x3]
6500ee5f:	or     esi,edx
6500ee61:	shld   esi,ecx,0x8
6500ee65:	shl    ecx,0x8
6500ee68:	cdq    
6500ee69:	or     ecx,eax
6500ee6b:	movzx  eax,BYTE PTR [edi+0x4]
6500ee6f:	or     esi,edx
6500ee71:	shld   esi,ecx,0x8
6500ee75:	shl    ecx,0x8
6500ee78:	cdq    
6500ee79:	or     ecx,eax
6500ee7b:	movzx  eax,BYTE PTR [edi+0x5]
6500ee7f:	or     esi,edx
6500ee81:	shld   esi,ecx,0x8
6500ee85:	shl    ecx,0x8
6500ee88:	cdq    
6500ee89:	or     ecx,eax
6500ee8b:	movzx  eax,BYTE PTR [edi+0x6]
6500ee8f:	or     esi,edx
6500ee91:	shld   esi,ecx,0x8
6500ee95:	cdq    
6500ee96:	shl    ecx,0x8
6500ee99:	or     ecx,eax
6500ee9b:	movzx  eax,BYTE PTR [edi+0x7]
6500ee9f:	or     esi,edx
6500eea1:	mov    ebp,ecx
6500eea3:	mov    ecx,esi
6500eea5:	shld   ecx,ebp,0x8
6500eea9:	cdq    
6500eeaa:	shl    ebp,0x8
6500eead:	or     ebp,eax
6500eeaf:	or     ecx,edx
6500eeb1:	jl     0x6500eec3
6500eeb3:	jg     0x6500eeb9
6500eeb5:	test   ebp,ebp
6500eeb7:	jb     0x6500eec3
6500eeb9:	mov    ebx,0x2
6500eebe:	jmp    0x6500f1c8
6500eec3:	mov    ebx,0x3
6500eec8:	jmp    0x6500f1c8
6500eecd:	mov    edx,DWORD PTR [esp+0x58]
6500eed1:	mov    ebx,0x5
6500eed6:	mov    DWORD PTR [esp+0x3c],edi
6500eeda:	mov    ebp,esi
6500eedc:	mov    BYTE PTR [edx+0x4],0x1
6500eee0:	jmp    0x6500f1cc
6500eee5:	cmp    DWORD PTR [esp+0x60],0x20
6500eeea:	jae    0x6500f345
6500eef0:	mov    eax,DWORD PTR [esp+0x60]
6500eef4:	mov    ecx,DWORD PTR [esp+0x58]
6500eef8:	lea    eax,[eax+eax*4]
6500eefb:	lea    esi,[ecx+eax*8+0x18]
6500eeff:	xor    eax,eax
6500ef01:	mov    ah,BYTE PTR [edi]
6500ef03:	mov    al,BYTE PTR [edi+0x1]
6500ef06:	mov    DWORD PTR [esi],0x6
6500ef0c:	mov    DWORD PTR [esi+0x8],0x0
6500ef13:	mov    ebx,DWORD PTR [ecx]
6500ef15:	shl    eax,0x4
6500ef18:	call   0x6500e9c0
6500ef1d:	test   eax,eax
6500ef1f:	mov    DWORD PTR [esi+0xc],eax
6500ef22:	je     0x6500f345
6500ef28:	xor    ecx,ecx
6500ef2a:	mov    ch,BYTE PTR [edi]
6500ef2c:	mov    cl,BYTE PTR [edi+0x1]
6500ef2f:	test   cx,cx
6500ef32:	jne    0x6500ef49
6500ef34:	mov    edx,DWORD PTR [esi+0x4]
6500ef37:	mov    ebx,DWORD PTR [esi]
6500ef39:	mov    ebp,DWORD PTR [esi+0x8]
6500ef3c:	mov    DWORD PTR [esp+0x34],edx
6500ef40:	mov    DWORD PTR [esp+0x3c],eax
6500ef44:	jmp    0x6500f1cc
6500ef49:	xor    ecx,ecx
6500ef4b:	add    DWORD PTR [esp+0x60],0x1
6500ef50:	mov    DWORD PTR [esi+0x14],0x0
6500ef57:	mov    ch,BYTE PTR [edi]
6500ef59:	mov    cl,BYTE PTR [edi+0x1]
6500ef5c:	mov    DWORD PTR [esi+0x10],ecx
6500ef5f:	jmp    0x6500f2fa
6500ef64:	cmp    DWORD PTR [esp+0x60],0x20
6500ef69:	jae    0x6500f345
6500ef6f:	mov    eax,DWORD PTR [esp+0x60]
6500ef73:	mov    ecx,DWORD PTR [esp+0x58]
6500ef77:	lea    edx,[eax+eax*4]
6500ef7a:	xor    eax,eax
6500ef7c:	mov    ah,BYTE PTR [edi]
6500ef7e:	lea    esi,[ecx+edx*8+0x18]
6500ef82:	movzx  edx,BYTE PTR [edi+0x2]
6500ef86:	mov    al,BYTE PTR [edi+0x1]
6500ef89:	shl    eax,0x8
6500ef8c:	or     eax,edx
6500ef8e:	movzx  edx,BYTE PTR [edi+0x3]
6500ef92:	shl    eax,0x8
6500ef95:	or     eax,edx
6500ef97:	mov    DWORD PTR [esi],0x6
6500ef9d:	mov    DWORD PTR [esi+0x8],0x0
6500efa4:	mov    ebx,DWORD PTR [ecx]
6500efa6:	shl    eax,0x4
6500efa9:	call   0x6500e9c0
6500efae:	test   eax,eax
6500efb0:	mov    DWORD PTR [esi+0xc],eax
6500efb3:	je     0x6500f345
6500efb9:	movzx  ecx,BYTE PTR [edi+0x2]
6500efbd:	movzx  edx,BYTE PTR [edi+0x3]
6500efc1:	xor    eax,eax
6500efc3:	mov    ah,BYTE PTR [edi]
6500efc5:	mov    al,BYTE PTR [edi+0x1]
6500efc8:	shl    eax,0x8
6500efcb:	or     eax,ecx
6500efcd:	shl    eax,0x8
6500efd0:	or     eax,edx
6500efd2:	je     0x6500f1b9
6500efd8:	xor    edx,edx
6500efda:	mov    DWORD PTR [esi+0x14],0x0
6500efe1:	mov    dh,BYTE PTR [edi]
6500efe3:	movzx  eax,BYTE PTR [edi+0x2]
6500efe7:	movzx  ecx,BYTE PTR [edi+0x3]
6500efeb:	mov    dl,BYTE PTR [edi+0x1]
6500efee:	shl    edx,0x8
6500eff1:	or     edx,eax
6500eff3:	shl    edx,0x8
6500eff6:	or     edx,ecx
6500eff8:	add    DWORD PTR [esp+0x60],0x1
6500effd:	jmp    0x6500f2f7
6500f002:	cmp    DWORD PTR [esp+0x60],0x20
6500f007:	jae    0x6500f345
6500f00d:	mov    eax,DWORD PTR [esp+0x60]
6500f011:	mov    ecx,DWORD PTR [esp+0x58]
6500f015:	lea    edx,[eax+eax*4]
6500f018:	xor    eax,eax
6500f01a:	mov    ah,BYTE PTR [edi]
6500f01c:	lea    esi,[ecx+edx*8+0x18]
6500f020:	mov    al,BYTE PTR [edi+0x1]
6500f023:	mov    DWORD PTR [esi],0x7
6500f029:	mov    DWORD PTR [esi+0x8],0x0
6500f030:	mov    ebx,DWORD PTR [ecx]
6500f032:	shl    eax,0x5
6500f035:	call   0x6500e9c0
6500f03a:	test   eax,eax
6500f03c:	mov    DWORD PTR [esi+0xc],eax
6500f03f:	je     0x6500f345
6500f045:	xor    eax,eax
6500f047:	mov    ah,BYTE PTR [edi]
6500f049:	mov    al,BYTE PTR [edi+0x1]
6500f04c:	test   ax,ax
6500f04f:	jne    0x6500f069
6500f051:	mov    ecx,DWORD PTR [esi+0x4]
6500f054:	mov    edx,DWORD PTR [esi+0xc]
6500f057:	mov    ebx,DWORD PTR [esi]
6500f059:	mov    ebp,DWORD PTR [esi+0x8]
6500f05c:	mov    DWORD PTR [esp+0x34],ecx
6500f060:	mov    DWORD PTR [esp+0x3c],edx
6500f064:	jmp    0x6500f1cc
6500f069:	xor    ecx,ecx
6500f06b:	mov    eax,0x1
6500f070:	add    DWORD PTR [esp+0x60],eax
6500f074:	mov    DWORD PTR [esi+0x14],eax
6500f077:	mov    ch,BYTE PTR [edi]
6500f079:	mov    cl,BYTE PTR [edi+0x1]
6500f07c:	mov    DWORD PTR [esi+0x10],ecx
6500f07f:	jmp    0x6500f2fa
6500f084:	cmp    DWORD PTR [esp+0x60],0x20
6500f089:	jae    0x6500f345
6500f08f:	mov    eax,DWORD PTR [esp+0x60]
6500f093:	mov    ecx,DWORD PTR [esp+0x58]
6500f097:	lea    edx,[eax+eax*4]
6500f09a:	xor    eax,eax
6500f09c:	mov    ah,BYTE PTR [edi]
6500f09e:	lea    esi,[ecx+edx*8+0x18]
6500f0a2:	movzx  edx,BYTE PTR [edi+0x2]
6500f0a6:	mov    al,BYTE PTR [edi+0x1]
6500f0a9:	shl    eax,0x8
6500f0ac:	or     eax,edx
6500f0ae:	movzx  edx,BYTE PTR [edi+0x3]
6500f0b2:	shl    eax,0x8
6500f0b5:	or     eax,edx
6500f0b7:	mov    DWORD PTR [esi],0x7
6500f0bd:	mov    DWORD PTR [esi+0x8],0x0
6500f0c4:	mov    ebx,DWORD PTR [ecx]
6500f0c6:	shl    eax,0x5
6500f0c9:	call   0x6500e9c0
6500f0ce:	test   eax,eax
6500f0d0:	mov    DWORD PTR [esi+0xc],eax
6500f0d3:	je     0x6500f345
6500f0d9:	movzx  ecx,BYTE PTR [edi+0x2]
6500f0dd:	movzx  edx,BYTE PTR [edi+0x3]
6500f0e1:	xor    eax,eax
6500f0e3:	mov    ah,BYTE PTR [edi]
6500f0e5:	mov    al,BYTE PTR [edi+0x1]
6500f0e8:	shl    eax,0x8
6500f0eb:	or     eax,ecx
6500f0ed:	shl    eax,0x8
6500f0f0:	or     eax,edx
6500f0f2:	je     0x6500f1b9
6500f0f8:	xor    edx,edx
6500f0fa:	mov    eax,0x1
6500f0ff:	mov    DWORD PTR [esi+0x14],eax
6500f102:	mov    dh,BYTE PTR [edi]
6500f104:	movzx  ecx,BYTE PTR [edi+0x2]
6500f108:	mov    dl,BYTE PTR [edi+0x1]
6500f10b:	shl    edx,0x8
6500f10e:	or     edx,ecx
6500f110:	movzx  ecx,BYTE PTR [edi+0x3]
6500f114:	shl    edx,0x8
6500f117:	or     edx,ecx
6500f119:	add    DWORD PTR [esp+0x60],eax
6500f11d:	jmp    0x6500f2f7
6500f122:	cmp    al,0x90
6500f124:	jb     0x6500f173
6500f126:	cmp    al,0x9f
6500f128:	ja     0x6500f173
6500f12a:	cmp    DWORD PTR [esp+0x60],ecx
6500f12e:	jae    0x6500f345
6500f134:	mov    ecx,DWORD PTR [esp+0x60]
6500f138:	lea    edx,[ecx+ecx*4]
6500f13b:	mov    ecx,DWORD PTR [esp+0x58]
6500f13f:	lea    esi,[ecx+edx*8+0x18]
6500f143:	and    eax,0xf
6500f146:	call   0x6500ea20
6500f14b:	test   eax,eax
6500f14d:	jl     0x6500f345
6500f153:	mov    eax,DWORD PTR [esp+0x14]
6500f157:	test   BYTE PTR [eax],0xf
6500f15a:	je     0x6500f1b9
6500f15c:	mov    DWORD PTR [esi+0x14],0x0
6500f163:	movzx  edx,BYTE PTR [eax]
6500f166:	and    edx,0xf
6500f169:	add    DWORD PTR [esp+0x60],0x1
6500f16e:	jmp    0x6500f2f7
6500f173:	cmp    al,0x80
6500f175:	jb     0x6500f345
6500f17b:	cmp    al,0x8f
6500f17d:	ja     0x6500f345
6500f183:	cmp    DWORD PTR [esp+0x60],ecx
6500f187:	jae    0x6500f345
6500f18d:	mov    ecx,DWORD PTR [esp+0x60]
6500f191:	lea    edx,[ecx+ecx*4]
6500f194:	mov    ecx,DWORD PTR [esp+0x58]
6500f198:	lea    esi,[ecx+edx*8+0x18]
6500f19c:	and    eax,0xf
6500f19f:	call   0x6500ea50
6500f1a4:	test   eax,eax
6500f1a6:	jl     0x6500f345
6500f1ac:	mov    eax,DWORD PTR [esp+0x14]
6500f1b0:	test   BYTE PTR [eax],0xf
6500f1b3:	jne    0x6500f2e5
6500f1b9:	mov    eax,DWORD PTR [esi+0x4]
6500f1bc:	mov    ecx,DWORD PTR [esi+0xc]
6500f1bf:	mov    ebp,DWORD PTR [esi+0x8]
6500f1c2:	mov    ebx,DWORD PTR [esi]
6500f1c4:	mov    DWORD PTR [esp+0x34],eax
6500f1c8:	mov    DWORD PTR [esp+0x3c],ecx
6500f1cc:	mov    DWORD PTR [esp+0x38],ebp
6500f1d0:	mov    eax,DWORD PTR [esp+0x60]
6500f1d4:	lea    edx,[eax+eax*4]
6500f1d7:	mov    eax,DWORD PTR [esp+0x58]
6500f1db:	lea    edx,[eax+edx*8+0x18]
6500f1df:	lea    eax,[edx-0x28]
6500f1e2:	add    edx,0xfffffff0
6500f1e5:	mov    esi,0x1
6500f1ea:	lea    ebx,[ebx+0x0]
6500f1f0:	cmp    DWORD PTR [esp+0x60],0x0
6500f1f5:	je     0x6500f321
6500f1fb:	mov    ecx,DWORD PTR [eax+0x14]
6500f1fe:	sub    ecx,0x0
6500f201:	je     0x6500f27d
6500f203:	sub    ecx,esi
6500f205:	je     0x6500f2c8
6500f20b:	sub    ecx,esi
6500f20d:	jne    0x6500f345
6500f213:	mov    ecx,DWORD PTR [edx+0x4]
6500f216:	mov    esi,DWORD PTR [edx]
6500f218:	mov    DWORD PTR [esp+0x44],ecx
6500f21c:	mov    ecx,DWORD PTR [edx+0x8]
6500f21f:	mov    DWORD PTR [esp+0x48],ecx
6500f223:	mov    ecx,DWORD PTR [edx+0xc]
6500f226:	mov    DWORD PTR [esp+0x4c],ecx
6500f22a:	mov    ecx,DWORD PTR [eax+0x8]
6500f22d:	shl    ecx,0x5
6500f230:	add    ecx,DWORD PTR [eax+0xc]
6500f233:	mov    DWORD PTR [ecx],esi
6500f235:	mov    esi,DWORD PTR [esp+0x44]
6500f239:	mov    DWORD PTR [ecx+0x4],esi
6500f23c:	mov    esi,DWORD PTR [esp+0x48]
6500f240:	mov    DWORD PTR [ecx+0x8],esi
6500f243:	mov    esi,DWORD PTR [esp+0x4c]
6500f247:	mov    DWORD PTR [ecx+0xc],esi
6500f24a:	mov    ecx,DWORD PTR [eax+0x8]
6500f24d:	mov    esi,DWORD PTR [eax+0xc]
6500f250:	shl    ecx,0x5
6500f253:	lea    ecx,[ecx+esi*1+0x10]
6500f257:	mov    esi,DWORD PTR [esp+0x34]
6500f25b:	mov    DWORD PTR [ecx],ebx
6500f25d:	mov    DWORD PTR [ecx+0x4],esi
6500f260:	mov    esi,DWORD PTR [esp+0x3c]
6500f264:	mov    DWORD PTR [ecx+0x8],ebp
6500f267:	mov    DWORD PTR [ecx+0xc],esi
6500f26a:	mov    esi,0x1
6500f26f:	add    DWORD PTR [eax+0x8],esi
6500f272:	add    DWORD PTR [eax+0x10],0xffffffff
6500f276:	je     0x6500f2a2
6500f278:	mov    DWORD PTR [eax+0x14],esi
6500f27b:	jmp    0x6500f2fa
6500f27d:	mov    ecx,DWORD PTR [eax+0x8]
6500f280:	shl    ecx,0x4
6500f283:	add    ecx,DWORD PTR [eax+0xc]
6500f286:	mov    DWORD PTR [ecx],ebx
6500f288:	mov    ebx,DWORD PTR [esp+0x34]
6500f28c:	mov    DWORD PTR [ecx+0x4],ebx
6500f28f:	mov    ebx,DWORD PTR [esp+0x3c]
6500f293:	mov    DWORD PTR [ecx+0x8],ebp
6500f296:	mov    DWORD PTR [ecx+0xc],ebx
6500f299:	add    DWORD PTR [eax+0x8],esi
6500f29c:	add    DWORD PTR [eax+0x10],0xffffffff
6500f2a0:	jne    0x6500f2fa
6500f2a2:	mov    ecx,DWORD PTR [eax+0x4]
6500f2a5:	mov    ebp,DWORD PTR [eax+0x8]
6500f2a8:	mov    ebx,DWORD PTR [eax]
6500f2aa:	sub    DWORD PTR [esp+0x60],esi
6500f2ae:	mov    DWORD PTR [esp+0x34],ecx
6500f2b2:	mov    ecx,DWORD PTR [eax+0xc]
6500f2b5:	sub    eax,0x28
6500f2b8:	mov    DWORD PTR [esp+0x38],ebp
6500f2bc:	mov    DWORD PTR [esp+0x3c],ecx
6500f2c0:	sub    edx,0x28
6500f2c3:	jmp    0x6500f1f0
6500f2c8:	mov    edx,DWORD PTR [esp+0x34]
6500f2cc:	mov    ecx,DWORD PTR [esp+0x3c]
6500f2d0:	mov    DWORD PTR [eax+0x18],ebx
6500f2d3:	mov    DWORD PTR [eax+0x1c],edx
6500f2d6:	mov    DWORD PTR [eax+0x20],ebp
6500f2d9:	mov    DWORD PTR [eax+0x24],ecx
6500f2dc:	mov    DWORD PTR [eax+0x14],0x2
6500f2e3:	jmp    0x6500f2fa
6500f2e5:	mov    ecx,0x1
6500f2ea:	mov    DWORD PTR [esi+0x14],ecx
6500f2ed:	movzx  edx,BYTE PTR [eax]
6500f2f0:	and    edx,0xf
6500f2f3:	add    DWORD PTR [esp+0x60],ecx
6500f2f7:	mov    DWORD PTR [esi+0x10],edx
6500f2fa:	mov    eax,DWORD PTR [esp+0x14]
6500f2fe:	add    eax,0x1
6500f301:	cmp    eax,DWORD PTR [esp+0x20]
6500f305:	mov    DWORD PTR [esp+0x18],0x0
6500f30d:	mov    DWORD PTR [esp+0x14],eax
6500f311:	je     0x6500f341
6500f313:	mov    edx,DWORD PTR [esp+0x20]
6500f317:	mov    ecx,0x20
6500f31c:	jmp    0x6500ead0
6500f321:	mov    eax,DWORD PTR [esp+0x58]
6500f325:	mov    ecx,DWORD PTR [esp+0x34]
6500f329:	mov    edx,DWORD PTR [esp+0x3c]
6500f32d:	add    DWORD PTR [esp+0x14],esi
6500f331:	mov    DWORD PTR [eax+0x18],ebx
6500f334:	mov    DWORD PTR [eax+0x1c],ecx
6500f337:	mov    DWORD PTR [eax+0x20],ebp
6500f33a:	mov    DWORD PTR [eax+0x24],edx
6500f33d:	mov    eax,esi
6500f33f:	jmp    0x6500f348
6500f341:	xor    eax,eax
6500f343:	jmp    0x6500f348
6500f345:	or     eax,0xffffffff
6500f348:	mov    ecx,DWORD PTR [esp+0x58]
6500f34c:	mov    edx,DWORD PTR [esp+0x18]
6500f350:	mov    DWORD PTR [ecx+0x8],edx
6500f353:	mov    edx,DWORD PTR [esp+0x1c]
6500f357:	mov    DWORD PTR [ecx+0xc],edx
6500f35a:	mov    edx,DWORD PTR [esp+0x60]
6500f35e:	mov    DWORD PTR [ecx+0x10],edx
6500f361:	mov    ecx,DWORD PTR [esp+0x14]
6500f365:	sub    ecx,DWORD PTR [esp+0x5c]
6500f369:	mov    edx,DWORD PTR [esp+0x64]
6500f36d:	pop    edi
6500f36e:	pop    esi
6500f36f:	pop    ebp
6500f370:	mov    DWORD PTR [edx],ecx
6500f372:	pop    ebx
6500f373:	add    esp,0x44
6500f376:	ret    
6500f377:	nop
6500f378:	push   edx
6500f379:	jmp    0x6500f37b
6500f37b:	gs pop ecx
6500f37d:	jmp    0x6500f37f
6500f37f:	gs ins BYTE PTR es:[edi],dx
6500f381:	jmp    0x6500f383
6500f383:	gs jle 0x6500f371
6500f386:	add    BYTE PTR [ebp-0x62],ah
6500f389:	jmp    0x6500f38b
6500f38b:	gs inc ebp
6500f38d:	repz add BYTE PTR [ebp+0x0],ah
6500f391:	add    eax,0x5050201
6500f396:	add    eax,0x3050505
6500f39b:	add    eax,DWORD PTR [ebx]
6500f39d:	add    eax,DWORD PTR [ebx]
6500f39f:	add    eax,DWORD PTR [ebx]
6500f3a1:	add    eax,DWORD PTR [ebx]
6500f3a3:	add    eax,DWORD PTR ds:0x5050505
6500f3a9:	add    eax,0x4040404
6500f3ae:	add    al,0x4
6500f3b0:	inc    esi
6500f3b1:	in     al,dx
6500f3b2:	add    BYTE PTR [ebp+0x79],ah
6500f3b5:	in     al,dx
6500f3b6:	add    BYTE PTR [ebp+0xf],ah
6500f3b9:	in     eax,dx
6500f3ba:	add    BYTE PTR [ebp+0x23],ah
6500f3bd:	in     eax,dx
6500f3be:	add    BYTE PTR [ebp+0x3e],ah
6500f3c1:	in     eax,dx
6500f3c2:	add    BYTE PTR [ebp+0x6b],ah
6500f3c5:	in     eax,dx
6500f3c6:	add    BYTE PTR [ebp-0xf],ah
6500f3c9:	in     eax,dx
6500f3ca:	add    BYTE PTR [ebp-0x8],ah
6500f3cd:	in     eax,dx
6500f3ce:	add    BYTE PTR [ebp+0xd],ah
6500f3d1:	out    dx,al
6500f3d2:	add    BYTE PTR [ebp+0x35],ah
6500f3d5:	out    dx,al
6500f3d6:	add    BYTE PTR [ebp+0x45],ah
6500f3d9:	repz add BYTE PTR [ebp+0x45],ah
6500f3dd:	repz add BYTE PTR [ebp+0x45],ah
6500f3e1:	repz add BYTE PTR [ebp+0x45],ah
6500f3e5:	repz add BYTE PTR [ebp+0x45],ah
6500f3e9:	repz add BYTE PTR [ebp+0x45],ah
6500f3ed:	repz add BYTE PTR [ebp+0x1c],ah
6500f3f1:	in     al,dx
6500f3f2:	add    BYTE PTR [ebp+0x29],ah
6500f3f5:	in     al,dx
6500f3f6:	add    BYTE PTR [ebp-0x1b],ah
6500f3f9:	out    dx,al
6500f3fa:	add    BYTE PTR [ebp+0x64],ah
6500f3fd:	out    dx,eax
6500f3fe:	add    BYTE PTR [ebp+0x2],ah
6500f401:	lock add BYTE PTR [ebp-0x7c],ah
6500f405:	lock add BYTE PTR [ebp-0x33],ah
6500f409:	out    dx,al
6500f40a:	add    BYTE PTR [ebp-0x34],ah
6500f40d:	int3   
6500f40e:	int3   
6500f40f:	int3   
6500f410:	push   ebp
6500f411:	mov    ebp,esp
6500f413:	and    esp,0xfffffff8
6500f416:	sub    esp,0x51c
6500f41c:	push   ebx
6500f41d:	push   esi
6500f41e:	mov    esi,DWORD PTR [ebp+0x10]
6500f421:	xor    ebx,ebx
6500f423:	xor    eax,eax
6500f425:	cmp    esi,ebx
6500f427:	push   edi
6500f428:	mov    DWORD PTR [esp+0xc],eax
6500f42c:	je     0x6500f434
6500f42e:	mov    eax,DWORD PTR [esi]
6500f430:	mov    DWORD PTR [esp+0xc],eax
6500f434:	mov    edi,DWORD PTR [ebp+0xc]
6500f437:	cmp    edi,eax
6500f439:	ja     0x6500f444
6500f43b:	xor    eax,eax
6500f43d:	pop    edi
6500f43e:	pop    esi
6500f43f:	pop    ebx
6500f440:	mov    esp,ebp
6500f442:	pop    ebp
6500f443:	ret    
6500f444:	mov    edx,DWORD PTR [ebp+0x8]
6500f447:	xor    eax,eax
6500f449:	lea    ecx,[esp+0xc]
6500f44d:	push   ecx
6500f44e:	mov    DWORD PTR [esp+0x2c],eax
6500f452:	mov    DWORD PTR [esp+0x30],eax
6500f456:	mov    DWORD PTR [esp+0x34],eax
6500f45a:	mov    DWORD PTR [esp+0x38],eax
6500f45e:	mov    eax,DWORD PTR [ebp+0x14]
6500f461:	push   edi
6500f462:	mov    DWORD PTR [esp+0x18],eax
6500f466:	push   edx
6500f467:	lea    eax,[esp+0x1c]
6500f46b:	push   eax
6500f46c:	mov    DWORD PTR [esp+0x28],ebx
6500f470:	mov    DWORD PTR [esp+0x2c],ebx
6500f474:	mov    DWORD PTR [esp+0x30],ebx
6500f478:	mov    BYTE PTR [esp+0x24],bl
6500f47c:	call   0x6500ea80
6500f481:	add    esp,0x10
6500f484:	cmp    eax,ebx
6500f486:	jge    0x6500f492
6500f488:	or     eax,0xffffffff
6500f48b:	pop    edi
6500f48c:	pop    esi
6500f48d:	pop    ebx
6500f48e:	mov    esp,ebp
6500f490:	pop    ebp
6500f491:	ret    
6500f492:	cmp    esi,ebx
6500f494:	mov    ecx,DWORD PTR [esp+0xc]
6500f498:	je     0x6500f49c
6500f49a:	mov    DWORD PTR [esi],ecx
6500f49c:	cmp    eax,ebx
6500f49e:	je     0x6500f43b
6500f4a0:	mov    eax,DWORD PTR [ebp+0x18]
6500f4a3:	mov    edx,DWORD PTR [esp+0x28]
6500f4a7:	mov    DWORD PTR [eax],edx
6500f4a9:	mov    edx,DWORD PTR [esp+0x2c]
6500f4ad:	mov    DWORD PTR [eax+0x4],edx
6500f4b0:	mov    edx,DWORD PTR [esp+0x30]
6500f4b4:	mov    DWORD PTR [eax+0x8],edx
6500f4b7:	mov    edx,DWORD PTR [esp+0x34]
6500f4bb:	cmp    ecx,edi
6500f4bd:	pop    edi
6500f4be:	mov    DWORD PTR [eax+0xc],edx
6500f4c1:	sbb    eax,eax
6500f4c3:	pop    esi
6500f4c4:	add    eax,0x2
6500f4c7:	pop    ebx
6500f4c8:	mov    esp,ebp
6500f4ca:	pop    ebp
6500f4cb:	ret    
6500f4cc:	int3   
6500f4cd:	int3   
6500f4ce:	int3   
6500f4cf:	int3   
6500f4d0:	mov    eax,DWORD PTR [esp+0x8]
6500f4d4:	sub    eax,0x1
6500f4d7:	jne    0x6500f4e2
6500f4d9:	mov    eax,DWORD PTR [esp+0x4]
6500f4dd:	mov    ds:0x6502d4c4,eax
6500f4e2:	mov    eax,0x1
6500f4e7:	ret    0xc
6500f4ea:	int3   
6500f4eb:	int3   
6500f4ec:	int3   
6500f4ed:	int3   
6500f4ee:	int3   
6500f4ef:	int3   
6500f4f0:	cmp    BYTE PTR ds:0x6502d4c0,0x0
6500f4f7:	jne    0x6500f556
6500f4f9:	push   esi
6500f4fa:	push   edi
6500f4fb:	push   0x650242e4
6500f500:	mov    BYTE PTR ds:0x6502d4c0,0x1
6500f507:	call   DWORD PTR ds:0x65024018
6500f50d:	push   0x650242b8
6500f512:	push   0xb
6500f514:	push   0x650242ac
6500f519:	mov    esi,eax
6500f51b:	call   0x65006a10
6500f520:	mov    edi,DWORD PTR ds:0x65024014
6500f526:	add    esp,0xc
6500f529:	push   eax
6500f52a:	push   esi
6500f52b:	call   edi
6500f52d:	push   0x65024274
6500f532:	push   0x19
6500f534:	push   0x65024258
6500f539:	mov    ds:0x6502d4b8,eax
6500f53e:	call   0x65006a10
6500f543:	add    esp,0xc
6500f546:	push   eax
6500f547:	push   esi
6500f548:	call   edi
6500f54a:	pop    edi
6500f54b:	mov    ds:0x6502d4bc,eax
6500f550:	pop    esi
6500f551:	jmp    0x650118a0
6500f556:	ret    
6500f557:	int3   
6500f558:	int3   
6500f559:	int3   
6500f55a:	int3   
6500f55b:	int3   
6500f55c:	int3   
6500f55d:	int3   
6500f55e:	int3   
6500f55f:	int3   
6500f560:	call   0x6500f4f0
6500f565:	mov    eax,ds:0x6502d4b8
6500f56a:	test   eax,eax
6500f56c:	je     0x6500f570
6500f56e:	jmp    eax
6500f570:	ret    0x8
6500f573:	int3   
6500f574:	int3   
6500f575:	int3   
6500f576:	int3   
6500f577:	int3   
6500f578:	int3   
6500f579:	int3   
6500f57a:	int3   
6500f57b:	int3   
6500f57c:	int3   
6500f57d:	int3   
6500f57e:	int3   
6500f57f:	int3   
6500f580:	call   0x6500f4f0
6500f585:	mov    eax,ds:0x6502d4bc
6500f58a:	test   eax,eax
6500f58c:	je     0x6500f590
6500f58e:	jmp    eax
6500f590:	ret    0x4
6500f593:	int3   
6500f594:	int3   
6500f595:	int3   
6500f596:	int3   
6500f597:	int3   
6500f598:	int3   
6500f599:	int3   
6500f59a:	int3   
6500f59b:	int3   
6500f59c:	int3   
6500f59d:	int3   
6500f59e:	int3   
6500f59f:	int3   
6500f5a0:	mov    eax,DWORD PTR [esp+0x4]
6500f5a4:	mov    edx,DWORD PTR [ecx]
6500f5a6:	mov    DWORD PTR [eax],edx
6500f5a8:	mov    edx,DWORD PTR [ecx+0x4]
6500f5ab:	mov    DWORD PTR [eax+0x4],edx
6500f5ae:	mov    edx,DWORD PTR [ecx+0x8]
6500f5b1:	mov    ecx,DWORD PTR [ecx+0xc]
6500f5b4:	mov    DWORD PTR [eax+0x8],edx
6500f5b7:	mov    DWORD PTR [eax+0xc],ecx
6500f5ba:	ret    0x4
6500f5bd:	int3   
6500f5be:	int3   
6500f5bf:	int3   
6500f5c0:	jmp    0x6501202a
6500f5c5:	int3   
6500f5c6:	int3   
6500f5c7:	int3   
6500f5c8:	int3   
6500f5c9:	int3   
6500f5ca:	int3   
6500f5cb:	int3   
6500f5cc:	int3   
6500f5cd:	int3   
6500f5ce:	int3   
6500f5cf:	int3   
6500f5d0:	push   esi
6500f5d1:	mov    esi,ecx
6500f5d3:	call   0x6501202a
6500f5d8:	test   BYTE PTR [esp+0x8],0x1
6500f5dd:	je     0x6500f5e8
6500f5df:	push   esi
6500f5e0:	call   0x65011f02
6500f5e5:	add    esp,0x4
6500f5e8:	mov    eax,esi
6500f5ea:	pop    esi
6500f5eb:	ret    0x4
6500f5ee:	int3   
6500f5ef:	int3   
6500f5f0:	push   ebx
6500f5f1:	mov    ebx,DWORD PTR ds:0x6502404c
6500f5f7:	push   esi
6500f5f8:	push   edi
6500f5f9:	mov    edi,DWORD PTR [esp+0x10]
6500f5fd:	xor    esi,esi
6500f5ff:	nop
6500f600:	lea    eax,[esp+0x10]
6500f604:	push   0x0
6500f606:	push   eax
6500f607:	mov    DWORD PTR [esp+0x18],0x0
6500f60f:	call   0x6500e4d0
6500f614:	call   eax
6500f616:	test   eax,eax
6500f618:	je     0x6500f629
6500f61a:	cmp    edi,0xffffffff
6500f61d:	je     0x6500f629
6500f61f:	add    esi,0x3e8
6500f625:	cmp    esi,edi
6500f627:	ja     0x6500f632
6500f629:	push   0x3e8
6500f62e:	call   ebx
6500f630:	jmp    0x6500f600
6500f632:	pop    edi
6500f633:	pop    esi
6500f634:	mov    al,0x1
6500f636:	pop    ebx
6500f637:	ret    
6500f638:	int3   
6500f639:	int3   
6500f63a:	int3   
6500f63b:	int3   
6500f63c:	int3   
6500f63d:	int3   
6500f63e:	int3   
6500f63f:	int3   
6500f640:	mov    ecx,DWORD PTR [esp+0x4]
6500f644:	sub    esp,0xc
6500f647:	test   ecx,ecx
6500f649:	ja     0x6500f661
6500f64b:	xor    ecx,ecx
6500f64d:	lea    edx,[ecx*4+0x0]
6500f654:	push   edx
6500f655:	call   0x6501229c
6500f65a:	add    esp,0x4
6500f65d:	add    esp,0xc
6500f660:	ret    
6500f661:	or     eax,0xffffffff
6500f664:	xor    edx,edx
6500f666:	div    ecx
6500f668:	cmp    eax,0x4
6500f66b:	jae    0x6500f64d
6500f66d:	lea    eax,[esp+0x10]
6500f671:	push   eax
6500f672:	lea    ecx,[esp+0x4]
6500f676:	mov    DWORD PTR [esp+0x14],0x0
6500f67e:	call   0x65011f18
6500f683:	push   0x65029dfc
6500f688:	lea    ecx,[esp+0x4]
6500f68c:	push   ecx
6500f68d:	mov    DWORD PTR [esp+0x8],0x65024b44
6500f695:	call   0x65012306
6500f69a:	int3   
6500f69b:	int3   
6500f69c:	int3   
6500f69d:	int3   
6500f69e:	int3   
6500f69f:	int3   
6500f6a0:	push   esi
6500f6a1:	mov    esi,DWORD PTR [ecx]
6500f6a3:	test   esi,esi
6500f6a5:	je     0x6500f6b6
6500f6a7:	push   esi
6500f6a8:	call   0x6500e920
6500f6ad:	push   esi
6500f6ae:	call   0x65011f02
6500f6b3:	add    esp,0x8
6500f6b6:	pop    esi
6500f6b7:	ret    
6500f6b8:	int3   
6500f6b9:	int3   
6500f6ba:	int3   
6500f6bb:	int3   
6500f6bc:	int3   
6500f6bd:	int3   
6500f6be:	int3   
6500f6bf:	int3   
6500f6c0:	push   esi
6500f6c1:	mov    esi,DWORD PTR [ecx+0x10]
6500f6c4:	test   esi,esi
6500f6c6:	je     0x6500f6d7
6500f6c8:	push   esi
6500f6c9:	call   0x6500e920
6500f6ce:	push   esi
6500f6cf:	call   0x65011f02
6500f6d4:	add    esp,0x8
6500f6d7:	pop    esi
6500f6d8:	ret    
6500f6d9:	int3   
6500f6da:	int3   
6500f6db:	int3   
6500f6dc:	int3   
6500f6dd:	int3   
6500f6de:	int3   
6500f6df:	int3   
6500f6e0:	mov    ecx,DWORD PTR [esp+0x8]
6500f6e4:	test   ecx,ecx
6500f6e6:	jne    0x6500f6f2
6500f6e8:	push   0x80004005
6500f6ed:	call   0x65001040
6500f6f2:	mov    eax,DWORD PTR [esp+0x4]
6500f6f6:	mov    eax,DWORD PTR [eax]
6500f6f8:	mov    dx,WORD PTR [eax]
6500f6fb:	cmp    dx,WORD PTR [ecx]
6500f6fe:	jne    0x6500f726
6500f700:	test   dx,dx
6500f703:	je     0x6500f71a
6500f705:	mov    dx,WORD PTR [eax+0x2]
6500f709:	cmp    dx,WORD PTR [ecx+0x2]
6500f70d:	jne    0x6500f726
6500f70f:	add    eax,0x4
6500f712:	add    ecx,0x4
6500f715:	test   dx,dx
6500f718:	jne    0x6500f6f8
6500f71a:	xor    eax,eax
6500f71c:	xor    ecx,ecx
6500f71e:	test   eax,eax
6500f720:	setne  cl
6500f723:	mov    al,cl
6500f725:	ret    
6500f726:	sbb    eax,eax
6500f728:	sbb    eax,0xffffffff
6500f72b:	xor    ecx,ecx
6500f72d:	test   eax,eax
6500f72f:	setne  cl
6500f732:	mov    al,cl
6500f734:	ret    
6500f735:	int3   
6500f736:	int3   
6500f737:	int3   
6500f738:	int3   
6500f739:	int3   
6500f73a:	int3   
6500f73b:	int3   
6500f73c:	int3   
6500f73d:	int3   
6500f73e:	int3   
6500f73f:	int3   
6500f740:	mov    eax,DWORD PTR [esp+0x4]
6500f744:	mov    ecx,DWORD PTR [esp+0x8]
6500f748:	cmp    eax,ecx
6500f74a:	je     0x6500f75d
6500f74c:	mov    edx,DWORD PTR [esp+0xc]
6500f750:	push   esi
6500f751:	mov    esi,DWORD PTR [edx]
6500f753:	mov    DWORD PTR [eax],esi
6500f755:	add    eax,0x4
6500f758:	cmp    eax,ecx
6500f75a:	jne    0x6500f751
6500f75c:	pop    esi
6500f75d:	ret    
6500f75e:	int3   
6500f75f:	int3   
6500f760:	mov    eax,DWORD PTR [esp+0x8]
6500f764:	mov    edx,DWORD PTR [esp+0x4]
6500f768:	sub    eax,edx
6500f76a:	sar    eax,0x2
6500f76d:	push   esi
6500f76e:	mov    esi,DWORD PTR [esp+0x10]
6500f772:	lea    ecx,[eax*4+0x0]
6500f779:	sub    esi,ecx
6500f77b:	test   eax,eax
6500f77d:	jle    0x6500f78b
6500f77f:	push   ecx
6500f780:	push   edx
6500f781:	push   ecx
6500f782:	push   esi
6500f783:	call   0x650120ee
6500f788:	add    esp,0x10
6500f78b:	mov    eax,esi
6500f78d:	pop    esi
6500f78e:	ret    
6500f78f:	int3   
6500f790:	mov    eax,DWORD PTR [esp+0x14]
6500f794:	push   ebp
6500f795:	mov    ebp,DWORD PTR [esp+0x8]
6500f799:	push   esi
6500f79a:	mov    esi,DWORD PTR [esp+0x14]
6500f79e:	push   edi
6500f79f:	lea    edi,[esi+eax*1]
6500f7a2:	mov    eax,DWORD PTR [ebp+0x0]
6500f7a5:	mov    edx,DWORD PTR [eax-0x8]
6500f7a8:	sub    eax,0x10
6500f7ab:	mov    ecx,0x1
6500f7b0:	sub    ecx,DWORD PTR [eax+0xc]
6500f7b3:	sub    edx,edi
6500f7b5:	or     ecx,edx
6500f7b7:	jge    0x6500f7c1
6500f7b9:	push   edi
6500f7ba:	mov    ecx,ebp
6500f7bc:	call   0x65001e00
6500f7c1:	mov    eax,DWORD PTR [esp+0x14]
6500f7c5:	push   ebx
6500f7c6:	mov    ebx,DWORD PTR [ebp+0x0]
6500f7c9:	add    esi,esi
6500f7cb:	push   esi
6500f7cc:	push   eax
6500f7cd:	push   esi
6500f7ce:	push   ebx
6500f7cf:	call   0x65012073
6500f7d4:	mov    eax,DWORD PTR [esp+0x34]
6500f7d8:	mov    ecx,DWORD PTR [esp+0x30]
6500f7dc:	add    eax,eax
6500f7de:	push   eax
6500f7df:	push   ecx
6500f7e0:	push   eax
6500f7e1:	add    esi,ebx
6500f7e3:	push   esi
6500f7e4:	call   0x65012073
6500f7e9:	add    esp,0x20
6500f7ec:	test   edi,edi
6500f7ee:	pop    ebx
6500f7ef:	jl     0x6500f809
6500f7f1:	mov    eax,DWORD PTR [ebp+0x0]
6500f7f4:	cmp    edi,DWORD PTR [eax-0x8]
6500f7f7:	jg     0x6500f809
6500f7f9:	mov    DWORD PTR [eax-0xc],edi
6500f7fc:	mov    edx,DWORD PTR [ebp+0x0]
6500f7ff:	mov    WORD PTR [edx+edi*2],0x0
6500f805:	pop    edi
6500f806:	pop    esi
6500f807:	pop    ebp
6500f808:	ret    
6500f809:	push   0x80070057
6500f80e:	call   0x65001040
6500f813:	int3   
6500f814:	int3   
6500f815:	int3   
6500f816:	int3   
6500f817:	int3   
6500f818:	int3   
6500f819:	int3   
6500f81a:	int3   
6500f81b:	int3   
6500f81c:	int3   
6500f81d:	int3   
6500f81e:	int3   
6500f81f:	int3   
6500f820:	push   ebx
6500f821:	push   esi
6500f822:	mov    esi,ecx
6500f824:	cmp    DWORD PTR [esi+0x34],0x10
6500f828:	jb     0x6500f836
6500f82a:	mov    eax,DWORD PTR [esi+0x20]
6500f82d:	push   eax
6500f82e:	call   0x65011f02
6500f833:	add    esp,0x4
6500f836:	xor    ebx,ebx
6500f838:	mov    DWORD PTR [esi+0x34],0xf
6500f83f:	mov    DWORD PTR [esi+0x30],ebx
6500f842:	mov    BYTE PTR [esi+0x20],bl
6500f845:	cmp    DWORD PTR [esi+0x18],0x10
6500f849:	jb     0x6500f857
6500f84b:	mov    ecx,DWORD PTR [esi+0x4]
6500f84e:	push   ecx
6500f84f:	call   0x65011f02
6500f854:	add    esp,0x4
6500f857:	mov    DWORD PTR [esi+0x14],ebx
6500f85a:	mov    DWORD PTR [esi+0x18],0xf
6500f861:	mov    BYTE PTR [esi+0x4],bl
6500f864:	pop    esi
6500f865:	pop    ebx
6500f866:	ret    
6500f867:	int3   
6500f868:	int3   
6500f869:	int3   
6500f86a:	int3   
6500f86b:	int3   
6500f86c:	int3   
6500f86d:	int3   
6500f86e:	int3   
6500f86f:	int3   
6500f870:	push   0xffffffff
6500f872:	push   0x65021cb9
6500f877:	mov    eax,fs:0x0
6500f87d:	push   eax
6500f87e:	push   ecx
6500f87f:	push   esi
6500f880:	push   edi
6500f881:	mov    eax,ds:0x6502c09c
6500f886:	xor    eax,esp
6500f888:	push   eax
6500f889:	lea    eax,[esp+0x10]
6500f88d:	mov    fs:0x0,eax
6500f893:	mov    edi,DWORD PTR [esp+0x24]
6500f897:	mov    DWORD PTR [esp+0xc],0x0
6500f89f:	mov    eax,DWORD PTR [edi]
6500f8a1:	mov    ecx,DWORD PTR [eax-0x10]
6500f8a4:	test   ecx,ecx
6500f8a6:	mov    DWORD PTR [esp+0x18],0x0
6500f8ae:	je     0x6500f8bb
6500f8b0:	mov    edx,DWORD PTR [ecx]
6500f8b2:	mov    eax,DWORD PTR [edx+0x10]
6500f8b5:	call   eax
6500f8b7:	test   eax,eax
6500f8b9:	jne    0x6500f8cb
6500f8bb:	mov    edx,DWORD PTR ds:0x6502d560
6500f8c1:	mov    eax,DWORD PTR [edx+0x10]
6500f8c4:	mov    ecx,0x6502d560
6500f8c9:	call   eax
6500f8cb:	xor    ecx,ecx
6500f8cd:	test   eax,eax
6500f8cf:	setne  cl
6500f8d2:	test   ecx,ecx
6500f8d4:	jne    0x6500f8e0
6500f8d6:	push   0x80004005
6500f8db:	call   0x65001040
6500f8e0:	mov    edx,DWORD PTR [eax]
6500f8e2:	mov    ecx,eax
6500f8e4:	mov    eax,DWORD PTR [edx+0xc]
6500f8e7:	call   eax
6500f8e9:	mov    esi,DWORD PTR [esp+0x20]
6500f8ed:	add    eax,0x10
6500f8f0:	mov    DWORD PTR [esi],eax
6500f8f2:	mov    ecx,DWORD PTR [esp+0x28]
6500f8f6:	mov    eax,DWORD PTR [ecx]
6500f8f8:	mov    edx,DWORD PTR [eax-0xc]
6500f8fb:	mov    ecx,DWORD PTR [edi]
6500f8fd:	mov    edi,DWORD PTR [ecx-0xc]
6500f900:	push   edx
6500f901:	push   eax
6500f902:	push   edi
6500f903:	push   ecx
6500f904:	push   esi
6500f905:	mov    DWORD PTR [esp+0x2c],0x0
6500f90d:	mov    DWORD PTR [esp+0x20],0x1
6500f915:	call   0x6500f790
6500f91a:	add    esp,0x14
6500f91d:	mov    eax,esi
6500f91f:	mov    ecx,DWORD PTR [esp+0x10]
6500f923:	mov    DWORD PTR fs:0x0,ecx
6500f92a:	pop    ecx
6500f92b:	pop    edi
6500f92c:	pop    esi
6500f92d:	add    esp,0x10
6500f930:	ret    
6500f931:	int3   
6500f932:	int3   
6500f933:	int3   
6500f934:	int3   
6500f935:	int3   
6500f936:	int3   
6500f937:	int3   
6500f938:	int3   
6500f939:	int3   
6500f93a:	int3   
6500f93b:	int3   
6500f93c:	int3   
6500f93d:	int3   
6500f93e:	int3   
6500f93f:	int3   
6500f940:	push   0xffffffff
6500f942:	push   0x65021cf9
6500f947:	mov    eax,fs:0x0
6500f94d:	push   eax
6500f94e:	push   ecx
6500f94f:	push   ebp
6500f950:	push   esi
6500f951:	push   edi
6500f952:	mov    eax,ds:0x6502c09c
6500f957:	xor    eax,esp
6500f959:	push   eax
6500f95a:	lea    eax,[esp+0x14]
6500f95e:	mov    fs:0x0,eax
6500f964:	mov    ebp,DWORD PTR [esp+0x28]
6500f968:	mov    DWORD PTR [esp+0x10],0x0
6500f970:	mov    eax,DWORD PTR [ebp+0x0]
6500f973:	mov    ecx,DWORD PTR [eax-0x10]
6500f976:	test   ecx,ecx
6500f978:	mov    DWORD PTR [esp+0x1c],0x0
6500f980:	je     0x6500f98d
6500f982:	mov    edx,DWORD PTR [ecx]
6500f984:	mov    eax,DWORD PTR [edx+0x10]
6500f987:	call   eax
6500f989:	test   eax,eax
6500f98b:	jne    0x6500f99d
6500f98d:	mov    edx,DWORD PTR ds:0x6502d560
6500f993:	mov    eax,DWORD PTR [edx+0x10]
6500f996:	mov    ecx,0x6502d560
6500f99b:	call   eax
6500f99d:	xor    ecx,ecx
6500f99f:	test   eax,eax
6500f9a1:	setne  cl
6500f9a4:	test   ecx,ecx
6500f9a6:	jne    0x6500f9b2
6500f9a8:	push   0x80004005
6500f9ad:	call   0x65001040
6500f9b2:	mov    edx,DWORD PTR [eax]
6500f9b4:	mov    ecx,eax
6500f9b6:	mov    eax,DWORD PTR [edx+0xc]
6500f9b9:	call   eax
6500f9bb:	mov    esi,DWORD PTR [esp+0x24]
6500f9bf:	add    eax,0x10
6500f9c2:	mov    DWORD PTR [esi],eax
6500f9c4:	mov    edi,DWORD PTR [esp+0x2c]
6500f9c8:	test   edi,edi
6500f9ca:	mov    DWORD PTR [esp+0x1c],0x0
6500f9d2:	mov    DWORD PTR [esp+0x10],0x1
6500f9da:	jne    0x6500f9e0
6500f9dc:	xor    eax,eax
6500f9de:	jmp    0x6500f9f4
6500f9e0:	mov    eax,edi
6500f9e2:	lea    edx,[eax+0x2]
6500f9e5:	mov    cx,WORD PTR [eax]
6500f9e8:	add    eax,0x2
6500f9eb:	test   cx,cx
6500f9ee:	jne    0x6500f9e5
6500f9f0:	sub    eax,edx
6500f9f2:	sar    eax,1
6500f9f4:	mov    ecx,DWORD PTR [ebp+0x0]
6500f9f7:	mov    edx,DWORD PTR [ecx-0xc]
6500f9fa:	push   eax
6500f9fb:	push   edi
6500f9fc:	push   edx
6500f9fd:	push   ecx
6500f9fe:	push   esi
6500f9ff:	call   0x6500f790
6500fa04:	add    esp,0x14
6500fa07:	mov    eax,esi
6500fa09:	mov    ecx,DWORD PTR [esp+0x14]
6500fa0d:	mov    DWORD PTR fs:0x0,ecx
6500fa14:	pop    ecx
6500fa15:	pop    edi
6500fa16:	pop    esi
6500fa17:	pop    ebp
6500fa18:	add    esp,0x10
6500fa1b:	ret    
6500fa1c:	int3   
6500fa1d:	int3   
6500fa1e:	int3   
6500fa1f:	int3   
6500fa20:	mov    eax,DWORD PTR [esp+0x8]
6500fa24:	mov    ecx,DWORD PTR [esp+0x4]
6500fa28:	mov    edx,DWORD PTR [esp+0xc]
6500fa2c:	sub    eax,ecx
6500fa2e:	sar    eax,0x2
6500fa31:	lea    eax,[eax*4+0x0]
6500fa38:	push   esi
6500fa39:	lea    esi,[eax+edx*1]
6500fa3c:	je     0x6500fa4a
6500fa3e:	push   eax
6500fa3f:	push   ecx
6500fa40:	push   eax
6500fa41:	push   edx
6500fa42:	call   0x650120ee
6500fa47:	add    esp,0x10
6500fa4a:	mov    eax,esi
6500fa4c:	pop    esi
6500fa4d:	ret    0xc
6500fa50:	push   esi
6500fa51:	mov    esi,DWORD PTR [esp+0xc]
6500fa55:	test   esi,esi
6500fa57:	push   edi
6500fa58:	mov    edi,DWORD PTR [esp+0xc]
6500fa5c:	mov    eax,esi
6500fa5e:	mov    ecx,edi
6500fa60:	jbe    0x6500fa76
6500fa62:	mov    edx,DWORD PTR [esp+0x14]
6500fa66:	push   ebx
6500fa67:	mov    ebx,DWORD PTR [edx]
6500fa69:	mov    DWORD PTR [ecx],ebx
6500fa6b:	sub    eax,0x1
6500fa6e:	add    ecx,0x4
6500fa71:	test   eax,eax
6500fa73:	ja     0x6500fa67
6500fa75:	pop    ebx
6500fa76:	lea    eax,[edi+esi*4]
6500fa79:	pop    edi
6500fa7a:	pop    esi
6500fa7b:	ret    0xc
6500fa7e:	int3   
6500fa7f:	int3   
6500fa80:	mov    eax,DWORD PTR [esp+0x4]
6500fa84:	push   esi
6500fa85:	push   eax
6500fa86:	mov    esi,ecx
6500fa88:	call   0x65012012
6500fa8d:	mov    DWORD PTR [esi],0x6502431c
6500fa93:	mov    eax,esi
6500fa95:	pop    esi
6500fa96:	ret    0x4
6500fa99:	int3   
6500fa9a:	int3   
6500fa9b:	int3   
6500fa9c:	int3   
6500fa9d:	int3   
6500fa9e:	int3   
6500fa9f:	int3   
6500faa0:	push   esi
6500faa1:	mov    esi,ecx
6500faa3:	mov    DWORD PTR [esi],0x65026624
6500faa9:	cmp    DWORD PTR [esi+0x24],0x10
6500faad:	jb     0x6500fabb
6500faaf:	mov    eax,DWORD PTR [esi+0x10]
6500fab2:	push   eax
6500fab3:	call   0x65011f02
6500fab8:	add    esp,0x4
6500fabb:	xor    eax,eax
6500fabd:	mov    DWORD PTR [esi+0x24],0xf
6500fac4:	mov    DWORD PTR [esi+0x20],eax
6500fac7:	mov    BYTE PTR [esi+0x10],al
6500faca:	mov    ecx,esi
6500facc:	pop    esi
6500facd:	jmp    0x65011fd6
6500fad2:	int3   
6500fad3:	int3   
6500fad4:	int3   
6500fad5:	int3   
6500fad6:	int3   
6500fad7:	int3   
6500fad8:	int3   
6500fad9:	int3   
6500fada:	int3   
6500fadb:	int3   
6500fadc:	int3   
6500fadd:	int3   
6500fade:	int3   
6500fadf:	int3   
6500fae0:	push   0xffffffff
6500fae2:	push   0x65021d28
6500fae7:	mov    eax,fs:0x0
6500faed:	push   eax
6500faee:	sub    esp,0x44
6500faf1:	mov    eax,ds:0x6502c09c
6500faf6:	xor    eax,esp
6500faf8:	push   eax
6500faf9:	lea    eax,[esp+0x48]
6500fafd:	mov    fs:0x0,eax
6500fb03:	push   0x12
6500fb05:	push   0x65028358
6500fb0a:	lea    ecx,[esp+0xc]
6500fb0e:	mov    DWORD PTR [esp+0x24],0xf
6500fb16:	mov    DWORD PTR [esp+0x20],0x0
6500fb1e:	mov    BYTE PTR [esp+0x10],0x0
6500fb23:	call   0x65001860
6500fb28:	lea    eax,[esp+0x4]
6500fb2c:	push   eax
6500fb2d:	lea    ecx,[esp+0x24]
6500fb31:	mov    DWORD PTR [esp+0x54],0x0
6500fb39:	call   0x65002cc0
6500fb3e:	push   0x65029ec8
6500fb43:	lea    ecx,[esp+0x24]
6500fb47:	push   ecx
6500fb48:	mov    DWORD PTR [esp+0x28],0x65024b5c
6500fb50:	call   0x65012306
6500fb55:	int3   
6500fb56:	int3   
6500fb57:	int3   
6500fb58:	int3   
6500fb59:	int3   
6500fb5a:	int3   
6500fb5b:	int3   
6500fb5c:	int3   
6500fb5d:	int3   
6500fb5e:	int3   
6500fb5f:	int3   
6500fb60:	sub    esp,0x10
6500fb63:	mov    edx,DWORD PTR [ecx+0x4]
6500fb66:	mov    eax,DWORD PTR [ecx]
6500fb68:	cmp    eax,0x5
6500fb6b:	mov    DWORD PTR [esp+0x4],edx
6500fb6f:	mov    edx,DWORD PTR [ecx+0x8]
6500fb72:	mov    ecx,DWORD PTR [ecx+0xc]
6500fb75:	je     0x6500fb9c
6500fb77:	push   0x65024324
6500fb7c:	lea    ecx,[esp+0x4]
6500fb80:	call   0x65011ff9
6500fb85:	push   0x65029378
6500fb8a:	lea    eax,[esp+0x4]
6500fb8e:	push   eax
6500fb8f:	mov    DWORD PTR [esp+0x8],0x6502431c
6500fb97:	call   0x65012306
6500fb9c:	push   edx
6500fb9d:	push   ecx
6500fb9e:	mov    ecx,DWORD PTR [esp+0x1c]
6500fba2:	call   0x65001860
6500fba7:	add    esp,0x10
6500fbaa:	ret    0x4
6500fbad:	int3   
6500fbae:	int3   
6500fbaf:	int3   
6500fbb0:	push   0xffffffff
6500fbb2:	push   0x65021d6e
6500fbb7:	mov    eax,fs:0x0
6500fbbd:	push   eax
6500fbbe:	sub    esp,0x9c
6500fbc4:	push   ebx
6500fbc5:	push   ebp
6500fbc6:	push   edi
6500fbc7:	mov    eax,ds:0x6502c09c
6500fbcc:	xor    eax,esp
6500fbce:	push   eax
6500fbcf:	lea    eax,[esp+0xac]
6500fbd6:	mov    fs:0x0,eax
6500fbdc:	xor    ebx,ebx
6500fbde:	push   0x1c
6500fbe0:	mov    DWORD PTR [esp+0x14],ebx
6500fbe4:	call   0x6501229c
6500fbe9:	mov    edi,eax
6500fbeb:	add    esp,0x4
6500fbee:	cmp    edi,ebx
6500fbf0:	je     0x6500fc02
6500fbf2:	push   0x2000
6500fbf7:	push   edi
6500fbf8:	call   0x6500e980
6500fbfd:	add    esp,0x8
6500fc00:	jmp    0x6500fc04
6500fc02:	xor    edi,edi
6500fc04:	mov    DWORD PTR [esp+0x20],edi
6500fc08:	mov    ecx,DWORD PTR [esp+0xc4]
6500fc0f:	mov    edx,DWORD PTR [esp+0xc0]
6500fc16:	lea    eax,[esp+0x10]
6500fc1a:	push   eax
6500fc1b:	mov    eax,DWORD PTR [esp+0xc0]
6500fc22:	push   edi
6500fc23:	push   ecx
6500fc24:	push   edx
6500fc25:	push   eax
6500fc26:	mov    DWORD PTR [esp+0xc8],ebx
6500fc2d:	call   0x6500f410
6500fc32:	add    esp,0x14
6500fc35:	sub    eax,ebx
6500fc37:	je     0x6500fd06
6500fc3d:	sub    eax,0x1
6500fc40:	je     0x6500fce9
6500fc46:	sub    eax,0x1
6500fc49:	je     0x6500fc98
6500fc4b:	push   0xb
6500fc4d:	push   0x6502434c
6500fc52:	lea    ecx,[esp+0x2c]
6500fc56:	mov    DWORD PTR [esp+0x44],0xf
6500fc5e:	mov    DWORD PTR [esp+0x40],ebx
6500fc62:	mov    BYTE PTR [esp+0x30],bl
6500fc66:	call   0x65001860
6500fc6b:	lea    ecx,[esp+0x24]
6500fc6f:	push   ecx
6500fc70:	lea    ecx,[esp+0x60]
6500fc74:	mov    BYTE PTR [esp+0xb8],0x2
6500fc7c:	call   0x65002020
6500fc81:	push   0x650293fc
6500fc86:	lea    edx,[esp+0x60]
6500fc8a:	push   edx
6500fc8b:	mov    DWORD PTR [esp+0x64],0x65024330
6500fc93:	call   0x65012306
6500fc98:	mov    eax,DWORD PTR [esp+0x10]
6500fc9c:	mov    ecx,DWORD PTR [esp+0x14]
6500fca0:	mov    edx,DWORD PTR [esp+0x18]
6500fca4:	mov    DWORD PTR [esi],eax
6500fca6:	mov    eax,DWORD PTR [esp+0x1c]
6500fcaa:	mov    DWORD PTR [esi+0x4],ecx
6500fcad:	mov    DWORD PTR [esi+0x8],edx
6500fcb0:	mov    DWORD PTR [esi+0xc],eax
6500fcb3:	mov    ebp,DWORD PTR [esi+0x10]
6500fcb6:	cmp    edi,ebp
6500fcb8:	je     0x6500fccd
6500fcba:	cmp    ebp,ebx
6500fcbc:	je     0x6500fccd
6500fcbe:	push   ebp
6500fcbf:	call   0x6500e920
6500fcc4:	push   ebp
6500fcc5:	call   0x65011f02
6500fcca:	add    esp,0x8
6500fccd:	mov    DWORD PTR [esi+0x10],edi
6500fcd0:	mov    ecx,DWORD PTR [esp+0xac]
6500fcd7:	mov    DWORD PTR fs:0x0,ecx
6500fcde:	pop    ecx
6500fcdf:	pop    edi
6500fce0:	pop    ebp
6500fce1:	pop    ebx
6500fce2:	add    esp,0xa8
6500fce8:	ret    
6500fce9:	mov    ecx,DWORD PTR [esp+0x10]
6500fced:	mov    edx,DWORD PTR [esp+0x14]
6500fcf1:	mov    eax,DWORD PTR [esp+0x18]
6500fcf5:	mov    DWORD PTR [esi],ecx
6500fcf7:	mov    ecx,DWORD PTR [esp+0x1c]
6500fcfb:	mov    DWORD PTR [esi+0x4],edx
6500fcfe:	mov    DWORD PTR [esi+0x8],eax
6500fd01:	mov    DWORD PTR [esi+0xc],ecx
6500fd04:	jmp    0x6500fcb3
6500fd06:	push   0x12
6500fd08:	push   0x65024338
6500fd0d:	lea    ecx,[esp+0x48]
6500fd11:	mov    DWORD PTR [esp+0x60],0xf
6500fd19:	mov    DWORD PTR [esp+0x5c],ebx
6500fd1d:	mov    BYTE PTR [esp+0x4c],bl
6500fd21:	call   0x65001860
6500fd26:	lea    edx,[esp+0x40]
6500fd2a:	push   edx
6500fd2b:	lea    ecx,[esp+0x88]
6500fd32:	mov    BYTE PTR [esp+0xb8],0x1
6500fd3a:	call   0x65002020
6500fd3f:	push   0x650293fc
6500fd44:	lea    eax,[esp+0x88]
6500fd4b:	push   eax
6500fd4c:	mov    DWORD PTR [esp+0x8c],0x65024330
6500fd57:	call   0x65012306
6500fd5c:	int3   
6500fd5d:	int3   
6500fd5e:	int3   
6500fd5f:	int3   
6500fd60:	mov    eax,DWORD PTR [esp+0x4]
6500fd64:	push   esi
6500fd65:	push   eax
6500fd66:	mov    esi,ecx
6500fd68:	call   0x650020e0
6500fd6d:	mov    DWORD PTR [esi],0x65024330
6500fd73:	mov    eax,esi
6500fd75:	pop    esi
6500fd76:	ret    0x4
6500fd79:	int3   
6500fd7a:	int3   
6500fd7b:	int3   
6500fd7c:	int3   
6500fd7d:	int3   
6500fd7e:	int3   
6500fd7f:	int3   
6500fd80:	cmp    DWORD PTR [esp+0x4],0x6
6500fd85:	push   esi
6500fd86:	mov    esi,ecx
6500fd88:	je     0x6500fdaf
6500fd8a:	push   0x65024324
6500fd8f:	lea    ecx,[esp+0xc]
6500fd93:	call   0x65011ff9
6500fd98:	push   0x65029378
6500fd9d:	lea    eax,[esp+0xc]
6500fda1:	push   eax
6500fda2:	mov    DWORD PTR [esp+0x10],0x6502431c
6500fdaa:	call   0x65012306
6500fdaf:	push   ebx
6500fdb0:	mov    ebx,DWORD PTR [esp+0x14]
6500fdb4:	test   ebx,ebx
6500fdb6:	jbe    0x6500fdd9
6500fdb8:	mov    ecx,DWORD PTR [esi]
6500fdba:	push   edi
6500fdbb:	mov    edi,DWORD PTR [esp+0x1c]
6500fdbf:	push   ecx
6500fdc0:	mov    ecx,edi
6500fdc2:	call   0x6500fb60
6500fdc7:	cmp    ebx,0x1
6500fdca:	jbe    0x6500fdd8
6500fdcc:	mov    edx,DWORD PTR [esi+0x4]
6500fdcf:	push   edx
6500fdd0:	lea    ecx,[edi+0x10]
6500fdd3:	call   0x6500fb60
6500fdd8:	pop    edi
6500fdd9:	pop    ebx
6500fdda:	pop    esi
6500fddb:	ret    0x10
6500fdde:	int3   
6500fddf:	int3   
6500fde0:	mov    eax,DWORD PTR [esp+0x10]
6500fde4:	push   ebx
6500fde5:	push   esi
6500fde6:	mov    esi,ecx
6500fde8:	mov    ecx,DWORD PTR [eax]
6500fdea:	mov    DWORD PTR [esp+0x18],ecx
6500fdee:	mov    ecx,DWORD PTR [esi+0x4]
6500fdf1:	test   ecx,ecx
6500fdf3:	push   edi
6500fdf4:	jne    0x6500fdfa
6500fdf6:	xor    edi,edi
6500fdf8:	jmp    0x6500fe02
6500fdfa:	mov    edi,DWORD PTR [esi+0xc]
6500fdfd:	sub    edi,ecx
6500fdff:	sar    edi,0x2
6500fe02:	mov    ebx,DWORD PTR [esp+0x18]
6500fe06:	test   ebx,ebx
6500fe08:	je     0x6500ff8f
6500fe0e:	test   ecx,ecx
6500fe10:	jne    0x6500fe16
6500fe12:	xor    eax,eax
6500fe14:	jmp    0x6500fe1e
6500fe16:	mov    eax,DWORD PTR [esi+0x8]
6500fe19:	sub    eax,ecx
6500fe1b:	sar    eax,0x2
6500fe1e:	mov    edx,0x3fffffff
6500fe23:	sub    edx,eax
6500fe25:	cmp    edx,ebx
6500fe27:	jae    0x6500fe2e
6500fe29:	call   0x6500fae0
6500fe2e:	test   ecx,ecx
6500fe30:	jne    0x6500fe36
6500fe32:	xor    eax,eax
6500fe34:	jmp    0x6500fe3e
6500fe36:	mov    eax,DWORD PTR [esi+0x8]
6500fe39:	sub    eax,ecx
6500fe3b:	sar    eax,0x2
6500fe3e:	add    eax,ebx
6500fe40:	cmp    edi,eax
6500fe42:	push   ebp
6500fe43:	jae    0x6500fefd
6500fe49:	mov    eax,edi
6500fe4b:	shr    eax,1
6500fe4d:	mov    edx,0x3fffffff
6500fe52:	sub    edx,eax
6500fe54:	cmp    edx,edi
6500fe56:	jae    0x6500fe5c
6500fe58:	xor    edi,edi
6500fe5a:	jmp    0x6500fe5e
6500fe5c:	add    edi,eax
6500fe5e:	test   ecx,ecx
6500fe60:	jne    0x6500fe66
6500fe62:	xor    eax,eax
6500fe64:	jmp    0x6500fe6e
6500fe66:	mov    eax,DWORD PTR [esi+0x8]
6500fe69:	sub    eax,ecx
6500fe6b:	sar    eax,0x2
6500fe6e:	add    eax,ebx
6500fe70:	cmp    edi,eax
6500fe72:	jae    0x6500fe86
6500fe74:	test   ecx,ecx
6500fe76:	jne    0x6500fe7c
6500fe78:	xor    edi,edi
6500fe7a:	jmp    0x6500fe84
6500fe7c:	mov    edi,DWORD PTR [esi+0x8]
6500fe7f:	sub    edi,ecx
6500fe81:	sar    edi,0x2
6500fe84:	add    edi,ebx
6500fe86:	push   0x0
6500fe88:	push   edi
6500fe89:	call   0x6500f640
6500fe8e:	mov    ecx,DWORD PTR [esi+0x4]
6500fe91:	add    esp,0x8
6500fe94:	mov    ebp,eax
6500fe96:	mov    eax,DWORD PTR [esp+0x18]
6500fe9a:	push   ebp
6500fe9b:	push   eax
6500fe9c:	push   ecx
6500fe9d:	mov    ecx,esi
6500fe9f:	call   0x6500fa20
6500fea4:	lea    edx,[esp+0x20]
6500fea8:	push   edx
6500fea9:	push   ebx
6500feaa:	push   eax
6500feab:	mov    ecx,esi
6500fead:	call   0x6500fa50
6500feb2:	mov    ecx,DWORD PTR [esp+0x18]
6500feb6:	push   eax
6500feb7:	mov    eax,DWORD PTR [esi+0x8]
6500feba:	push   eax
6500febb:	push   ecx
6500febc:	mov    ecx,esi
6500febe:	call   0x6500fa20
6500fec3:	mov    eax,DWORD PTR [esi+0x4]
6500fec6:	test   eax,eax
6500fec8:	jne    0x6500fece
6500feca:	xor    ecx,ecx
6500fecc:	jmp    0x6500fed6
6500fece:	mov    ecx,DWORD PTR [esi+0x8]
6500fed1:	sub    ecx,eax
6500fed3:	sar    ecx,0x2
6500fed6:	add    ebx,ecx
6500fed8:	test   eax,eax
6500feda:	je     0x6500fee5
6500fedc:	push   eax
6500fedd:	call   0x65011f02
6500fee2:	add    esp,0x4
6500fee5:	lea    edx,[ebp+edi*4+0x0]
6500fee9:	lea    eax,[ebp+ebx*4+0x0]
6500feed:	mov    DWORD PTR [esi+0x4],ebp
6500fef0:	pop    ebp
6500fef1:	pop    edi
6500fef2:	mov    DWORD PTR [esi+0xc],edx
6500fef5:	mov    DWORD PTR [esi+0x8],eax
6500fef8:	pop    esi
6500fef9:	pop    ebx
6500fefa:	ret    0x10
6500fefd:	mov    ebp,DWORD PTR [esi+0x8]
6500ff00:	mov    edi,DWORD PTR [esp+0x18]
6500ff04:	mov    ecx,ebp
6500ff06:	sub    ecx,edi
6500ff08:	sar    ecx,0x2
6500ff0b:	lea    eax,[ebx*4+0x0]
6500ff12:	cmp    ecx,ebx
6500ff14:	mov    DWORD PTR [esp+0x1c],eax
6500ff18:	mov    ecx,esi
6500ff1a:	jae    0x6500ff62
6500ff1c:	add    eax,edi
6500ff1e:	push   eax
6500ff1f:	push   ebp
6500ff20:	push   edi
6500ff21:	call   0x6500fa20
6500ff26:	mov    eax,DWORD PTR [esi+0x8]
6500ff29:	mov    ecx,eax
6500ff2b:	sub    ecx,edi
6500ff2d:	sar    ecx,0x2
6500ff30:	lea    edx,[esp+0x20]
6500ff34:	push   edx
6500ff35:	sub    ebx,ecx
6500ff37:	push   ebx
6500ff38:	push   eax
6500ff39:	mov    ecx,esi
6500ff3b:	call   0x6500fa50
6500ff40:	mov    eax,DWORD PTR [esp+0x1c]
6500ff44:	add    DWORD PTR [esi+0x8],eax
6500ff47:	mov    esi,DWORD PTR [esi+0x8]
6500ff4a:	lea    edx,[esp+0x20]
6500ff4e:	push   edx
6500ff4f:	sub    esi,eax
6500ff51:	push   esi
6500ff52:	push   edi
6500ff53:	call   0x6500f740
6500ff58:	add    esp,0xc
6500ff5b:	pop    ebp
6500ff5c:	pop    edi
6500ff5d:	pop    esi
6500ff5e:	pop    ebx
6500ff5f:	ret    0x10
6500ff62:	push   ebp
6500ff63:	mov    ebx,ebp
6500ff65:	sub    ebx,eax
6500ff67:	push   ebp
6500ff68:	push   ebx
6500ff69:	call   0x6500fa20
6500ff6e:	push   ebp
6500ff6f:	push   ebx
6500ff70:	push   edi
6500ff71:	mov    DWORD PTR [esi+0x8],eax
6500ff74:	call   0x6500f760
6500ff79:	mov    ecx,DWORD PTR [esp+0x28]
6500ff7d:	lea    eax,[esp+0x2c]
6500ff81:	push   eax
6500ff82:	add    ecx,edi
6500ff84:	push   ecx
6500ff85:	push   edi
6500ff86:	call   0x6500f740
6500ff8b:	add    esp,0x18
6500ff8e:	pop    ebp
6500ff8f:	pop    edi
6500ff90:	pop    esi
6500ff91:	pop    ebx
6500ff92:	ret    0x10
6500ff95:	int3   
6500ff96:	int3   
6500ff97:	int3   
6500ff98:	int3   
6500ff99:	int3   
6500ff9a:	int3   
6500ff9b:	int3   
6500ff9c:	int3   
6500ff9d:	int3   
6500ff9e:	int3   
6500ff9f:	int3   
6500ffa0:	push   ecx
6500ffa1:	push   ebx
6500ffa2:	push   ebp
6500ffa3:	mov    ebp,DWORD PTR [esp+0x14]
6500ffa7:	push   esi
6500ffa8:	mov    esi,ecx
6500ffaa:	push   edi
6500ffab:	mov    edi,DWORD PTR [esi+0x4]
6500ffae:	test   edi,edi
6500ffb0:	je     0x6500ffbe
6500ffb2:	mov    eax,DWORD PTR [esi+0x8]
6500ffb5:	mov    ecx,eax
6500ffb7:	sub    ecx,edi
6500ffb9:	sar    ecx,0x2
6500ffbc:	jne    0x6500ffc2
6500ffbe:	xor    ebx,ebx
6500ffc0:	jmp    0x6500ffe1
6500ffc2:	cmp    edi,eax
6500ffc4:	jbe    0x6500ffcb
6500ffc6:	call   0x65012273
6500ffcb:	test   ebp,ebp
6500ffcd:	je     0x6500ffd3
6500ffcf:	cmp    ebp,esi
6500ffd1:	je     0x6500ffd8
6500ffd3:	call   0x65012273
6500ffd8:	mov    ebx,DWORD PTR [esp+0x20]
6500ffdc:	sub    ebx,edi
6500ffde:	sar    ebx,0x2
6500ffe1:	mov    edx,DWORD PTR [esp+0x24]
6500ffe5:	mov    eax,DWORD PTR [esp+0x20]
6500ffe9:	push   edx
6500ffea:	push   0x1
6500ffec:	push   eax
6500ffed:	push   ebp
6500ffee:	mov    ecx,esi
6500fff0:	call   0x6500fde0
6500fff5:	mov    edi,DWORD PTR [esi+0x4]
6500fff8:	cmp    edi,DWORD PTR [esi+0x8]
6500fffb:	jbe    0x65010002
6500fffd:	call   0x65012273
65010002:	mov    DWORD PTR [esp+0x20],edi
65010006:	lea    edi,[edi+ebx*4]
65010009:	cmp    edi,DWORD PTR [esi+0x8]
6501000c:	ja     0x65010013
6501000e:	cmp    edi,DWORD PTR [esi+0x4]
65010011:	jae    0x65010018
65010013:	call   0x65012273
65010018:	mov    eax,DWORD PTR [esp+0x18]
6501001c:	mov    DWORD PTR [eax+0x4],edi
6501001f:	pop    edi
65010020:	mov    DWORD PTR [eax],esi
65010022:	pop    esi
65010023:	pop    ebp
65010024:	pop    ebx
65010025:	pop    ecx
65010026:	ret    0x10
65010029:	int3   
6501002a:	int3   
6501002b:	int3   
6501002c:	int3   
6501002d:	int3   
6501002e:	int3   
6501002f:	int3   
65010030:	sub    esp,0x8
65010033:	push   esi
65010034:	mov    esi,ecx
65010036:	mov    edx,DWORD PTR [esi+0x4]
65010039:	test   edx,edx
6501003b:	jne    0x65010041
6501003d:	xor    ecx,ecx
6501003f:	jmp    0x65010049
65010041:	mov    ecx,DWORD PTR [esi+0x8]
65010044:	sub    ecx,edx
65010046:	sar    ecx,0x2
65010049:	test   edx,edx
6501004b:	je     0x65010071
6501004d:	mov    eax,DWORD PTR [esi+0xc]
65010050:	sub    eax,edx
65010052:	sar    eax,0x2
65010055:	cmp    ecx,eax
65010057:	jae    0x65010071
65010059:	mov    eax,DWORD PTR [esi+0x8]
6501005c:	mov    ecx,DWORD PTR [esp+0x10]
65010060:	mov    edx,DWORD PTR [ecx]
65010062:	mov    DWORD PTR [eax],edx
65010064:	add    eax,0x4
65010067:	mov    DWORD PTR [esi+0x8],eax
6501006a:	pop    esi
6501006b:	add    esp,0x8
6501006e:	ret    0x4
65010071:	push   edi
65010072:	mov    edi,DWORD PTR [esi+0x8]
65010075:	cmp    edx,edi
65010077:	jbe    0x6501007e
65010079:	call   0x65012273
6501007e:	mov    eax,DWORD PTR [esp+0x14]
65010082:	push   eax
65010083:	push   edi
65010084:	push   esi
65010085:	lea    ecx,[esp+0x14]
65010089:	push   ecx
6501008a:	mov    ecx,esi
6501008c:	call   0x6500ffa0
65010091:	pop    edi
65010092:	pop    esi
65010093:	add    esp,0x8
65010096:	ret    0x4
65010099:	int3   
6501009a:	int3   
6501009b:	int3   
6501009c:	int3   
6501009d:	int3   
6501009e:	int3   
6501009f:	int3   
650100a0:	sub    esp,0x20
650100a3:	mov    eax,DWORD PTR [ecx]
650100a5:	mov    edx,DWORD PTR [ecx+0x4]
650100a8:	mov    DWORD PTR [esp],eax
650100ab:	mov    eax,DWORD PTR [ecx+0x8]
650100ae:	mov    ecx,DWORD PTR [ecx+0xc]
650100b1:	mov    DWORD PTR [esp+0x4],edx
650100b5:	lea    edx,[esp+0x10]
650100b9:	mov    DWORD PTR [esp+0xc],ecx
650100bd:	push   edx
650100be:	lea    ecx,[esp+0x4]
650100c2:	mov    DWORD PTR [esp+0xc],eax
650100c6:	call   0x6500f5a0
650100cb:	mov    ecx,DWORD PTR [esp+0x24]
650100cf:	lea    edx,[ecx+0x1c]
650100d2:	mov    DWORD PTR [esp],edx
650100d5:	mov    edx,DWORD PTR [eax]
650100d7:	mov    DWORD PTR [esp+0x4],ecx
650100db:	sub    esp,0x10
650100de:	mov    ecx,esp
650100e0:	mov    DWORD PTR [ecx],edx
650100e2:	mov    edx,DWORD PTR [eax+0x4]
650100e5:	mov    DWORD PTR [ecx+0x4],edx
650100e8:	mov    edx,DWORD PTR [eax+0x8]
650100eb:	mov    eax,DWORD PTR [eax+0xc]
650100ee:	mov    DWORD PTR [ecx+0x8],edx
650100f1:	mov    DWORD PTR [ecx+0xc],eax
650100f4:	lea    ecx,[esp+0x10]
650100f8:	call   0x6500fd80
650100fd:	add    esp,0x20
65010100:	ret    0x4
65010103:	int3   
65010104:	int3   
65010105:	int3   
65010106:	int3   
65010107:	int3   
65010108:	int3   
65010109:	int3   
6501010a:	int3   
6501010b:	int3   
6501010c:	int3   
6501010d:	int3   
6501010e:	int3   
6501010f:	int3   
65010110:	push   ebp
65010111:	lea    ebp,[esp-0x74]
65010115:	sub    esp,0x74
65010118:	push   0xffffffff
6501011a:	push   0x65021dd8
6501011f:	mov    eax,fs:0x0
65010125:	push   eax
65010126:	sub    esp,0x70
65010129:	mov    eax,ds:0x6502c09c
6501012e:	xor    eax,ebp
65010130:	mov    DWORD PTR [ebp+0x70],eax
65010133:	push   ebx
65010134:	push   esi
65010135:	push   edi
65010136:	push   eax
65010137:	lea    eax,[ebp-0xc]
6501013a:	mov    fs:0x0,eax
65010140:	mov    DWORD PTR [ebp-0x10],esp
65010143:	mov    eax,DWORD PTR [ebp+0x7c]
65010146:	mov    ecx,0xf
6501014b:	xor    edi,edi
6501014d:	mov    DWORD PTR [ebp+0x50],ecx
65010150:	mov    DWORD PTR [ebp+0x4c],edi
65010153:	mov    BYTE PTR [ebp+0x3c],0x0
65010157:	mov    DWORD PTR [ebp+0x6c],ecx
6501015a:	mov    DWORD PTR [ebp+0x68],edi
6501015d:	mov    BYTE PTR [ebp+0x58],0x0
65010161:	mov    DWORD PTR [ebp-0x4],edi
65010164:	mov    DWORD PTR [ebp-0x38],edi
65010167:	mov    DWORD PTR [ebp-0x28],edi
6501016a:	mov    ecx,DWORD PTR [eax+0x14]
6501016d:	mov    ebx,0x10
65010172:	cmp    DWORD PTR [eax+0x18],ebx
65010175:	mov    BYTE PTR [ebp-0x4],0x2
65010179:	jb     0x65010180
6501017b:	mov    eax,DWORD PTR [eax+0x4]
6501017e:	jmp    0x65010183
65010180:	add    eax,0x4
65010183:	push   edi
65010184:	push   ecx
65010185:	push   eax
65010186:	lea    esi,[ebp-0x38]
65010189:	call   0x6500fbb0
6501018e:	add    esp,0xc
65010191:	lea    eax,[ebp+0x38]
65010194:	push   eax
65010195:	mov    ecx,esi
65010197:	call   0x650100a0
6501019c:	mov    DWORD PTR [ebp-0x4],0x1
650101a3:	call   DWORD PTR ds:0x6502c06c
650101a9:	cmp    DWORD PTR [ebp+0x6c],ebx
650101ac:	mov    DWORD PTR [ebp+0x0],eax
650101af:	mov    BYTE PTR [ebp-0x4],0x4
650101b3:	jb     0x650101c0
650101b5:	mov    ebx,DWORD PTR [ebp+0x58]
650101b8:	cmp    ebx,edi
650101ba:	jne    0x650101c3
650101bc:	xor    eax,eax
650101be:	jmp    0x6501020a
650101c0:	lea    ebx,[ebp+0x58]
650101c3:	push   ebx
650101c4:	call   DWORD PTR ds:0x65024054
650101ca:	mov    edi,eax
650101cc:	add    edi,0x1
650101cf:	cmp    edi,0x3fffffff
650101d5:	jg     0x65010206
650101d7:	lea    eax,[edi+edi*1]
650101da:	call   0x65012e60
650101df:	mov    esi,esp
650101e1:	test   esi,esi
650101e3:	mov    DWORD PTR [ebp-0x10],esp
650101e6:	je     0x65010206
650101e8:	mov    ecx,DWORD PTR [ebp+0x0]
650101eb:	push   edi
650101ec:	push   esi
650101ed:	push   0xffffffff
650101ef:	push   ebx
650101f0:	push   0x0
650101f2:	push   ecx
650101f3:	mov    WORD PTR [esi],0x0
650101f8:	call   DWORD PTR ds:0x65024024
650101fe:	neg    eax
65010200:	sbb    eax,eax
65010202:	and    eax,esi
65010204:	jmp    0x65010208
65010206:	xor    eax,eax
65010208:	xor    edi,edi
6501020a:	push   eax
6501020b:	lea    ecx,[ebp+0x10]
6501020e:	call   0x65002550
65010213:	mov    edx,DWORD PTR ds:0x6502d560
65010219:	mov    eax,DWORD PTR [edx+0xc]
6501021c:	mov    ecx,0x6502d560
65010221:	mov    BYTE PTR [ebp-0x4],0x5
65010225:	call   eax
65010227:	add    eax,0x10
6501022a:	mov    DWORD PTR [ebp+0x14],eax
6501022d:	lea    ecx,[ebp+0x14]
65010230:	push   ecx
65010231:	lea    edx,[ebp+0x10]
65010234:	push   edx
65010235:	lea    eax,[ebp+0x18]
65010238:	push   eax
65010239:	mov    BYTE PTR [ebp-0x4],0x6
6501023d:	call   0x65002160
65010242:	add    esp,0xc
65010245:	lea    ecx,[ebp+0x18]
65010248:	push   0x65026614
6501024d:	push   ecx
6501024e:	mov    BYTE PTR [ebp-0x4],0x7
65010252:	call   0x6500f6e0
65010257:	add    esp,0x8
6501025a:	test   al,al
6501025c:	je     0x65010434
65010262:	mov    esi,DWORD PTR [ebp+0x14]
65010265:	call   0x6500e090
6501026a:	push   esi
6501026b:	call   eax
6501026d:	cmp    DWORD PTR [ebp+0x50],0x10
65010271:	mov    edx,DWORD PTR [ebp+0x4c]
65010274:	mov    eax,DWORD PTR [ebp+0x3c]
65010277:	push   edx
65010278:	jae    0x6501027d
6501027a:	lea    eax,[ebp+0x3c]
6501027d:	push   eax
6501027e:	mov    eax,DWORD PTR [ebp+0x18]
65010281:	push   ecx
65010282:	add    eax,0xfffffff0
65010285:	mov    DWORD PTR [ebp+0xc],esp
65010288:	mov    esi,esp
6501028a:	push   eax
6501028b:	call   0x65002860
65010290:	add    eax,0x10
65010293:	add    esp,0x4
65010296:	mov    DWORD PTR [esi],eax
65010298:	call   0x650023a0
6501029d:	add    esp,0xc
650102a0:	lea    eax,[ebp+0xc]
650102a3:	push   edi
650102a4:	push   eax
650102a5:	call   0x65003450
650102aa:	add    esp,0x8
650102ad:	push   0x65024358
650102b2:	push   eax
650102b3:	lea    ecx,[ebp+0x8]
650102b6:	push   ecx
650102b7:	mov    BYTE PTR [ebp-0x4],0x8
650102bb:	call   0x6500f940
650102c0:	add    esp,0xc
650102c3:	mov    eax,DWORD PTR [ebp+0xc]
650102c6:	add    eax,0xfffffff0
650102c9:	mov    BYTE PTR [ebp-0x4],0xa
650102cd:	lea    edx,[eax+0xc]
650102d0:	or     ecx,0xffffffff
650102d3:	lock xadd DWORD PTR [edx],ecx
650102d7:	dec    ecx
650102d8:	test   ecx,ecx
650102da:	jg     0x650102e6
650102dc:	mov    ecx,DWORD PTR [eax]
650102de:	mov    edx,DWORD PTR [ecx]
650102e0:	push   eax
650102e1:	mov    eax,DWORD PTR [edx+0x4]
650102e4:	call   eax
650102e6:	mov    eax,DWORD PTR [ebp+0x18]
650102e9:	cmp    eax,edi
650102eb:	mov    ebx,eax
650102ed:	jne    0x650102f3
650102ef:	xor    eax,eax
650102f1:	jmp    0x65010323
650102f3:	push   eax
650102f4:	call   DWORD PTR ds:0x65024050
650102fa:	add    eax,0x1
650102fd:	cmp    eax,0x3fffffff
65010302:	jle    0x65010308
65010304:	xor    eax,eax
65010306:	jmp    0x65010323
65010308:	lea    esi,[eax+eax*1]
6501030b:	mov    eax,esi
6501030d:	call   0x65012e60
65010312:	mov    ecx,DWORD PTR [ebp+0x0]
65010315:	mov    DWORD PTR [ebp-0x10],esp
65010318:	mov    eax,esp
6501031a:	push   ecx
6501031b:	push   esi
6501031c:	push   ebx
6501031d:	push   eax
6501031e:	call   0x65002b40
65010323:	push   eax
65010324:	lea    ecx,[ebp+0x4]
65010327:	call   0x65006770
6501032c:	lea    edx,[ebp+0x8]
6501032f:	push   edx
65010330:	lea    eax,[ebp+0x4]
65010333:	push   eax
65010334:	mov    BYTE PTR [ebp-0x4],0xb
65010338:	call   0x650024f0
6501033d:	mov    eax,DWORD PTR [ebp+0x4]
65010340:	add    eax,0xfffffff0
65010343:	add    esp,0x8
65010346:	mov    BYTE PTR [ebp-0x4],0xa
6501034a:	lea    ecx,[eax+0xc]
6501034d:	or     edx,0xffffffff
65010350:	lock xadd DWORD PTR [ecx],edx
65010354:	dec    edx
65010355:	test   edx,edx
65010357:	jg     0x65010363
65010359:	mov    ecx,DWORD PTR [eax]
6501035b:	mov    edx,DWORD PTR [ecx]
6501035d:	push   eax
6501035e:	mov    eax,DWORD PTR [edx+0x4]
65010361:	call   eax
65010363:	push   0x40
65010365:	xor    eax,eax
65010367:	lea    ecx,[ebp-0x78]
6501036a:	push   edi
6501036b:	push   ecx
6501036c:	mov    DWORD PTR [ebp-0x20],edi
6501036f:	mov    DWORD PTR [ebp-0x1c],eax
65010372:	mov    DWORD PTR [ebp-0x18],eax
65010375:	mov    DWORD PTR [ebp-0x14],eax
65010378:	call   0x65012de0
6501037d:	lea    edx,[ebp+0x1c]
65010380:	push   edx
65010381:	mov    DWORD PTR [ebp-0x7c],0x44
65010388:	call   0x650014a0
6501038d:	add    esp,0x10
65010390:	cmp    DWORD PTR [ebp+0x34],0x10
65010394:	mov    ebx,DWORD PTR [ebp+0x20]
65010397:	mov    BYTE PTR [ebp-0x4],0xc
6501039b:	jae    0x650103a0
6501039d:	lea    ebx,[ebp+0x20]
650103a0:	mov    esi,DWORD PTR [ebp+0x18]
650103a3:	call   0x6500df60
650103a8:	lea    ecx,[ebp-0x20]
650103ab:	push   ecx
650103ac:	lea    edx,[ebp-0x7c]
650103af:	push   edx
650103b0:	push   edi
650103b1:	push   ebx
650103b2:	push   0x400
650103b7:	push   0x1
650103b9:	push   edi
650103ba:	push   edi
650103bb:	push   edi
650103bc:	push   esi
650103bd:	call   eax
650103bf:	cmp    eax,edi
650103c1:	je     0x650103d5
650103c3:	mov    eax,DWORD PTR [ebp-0x1c]
650103c6:	mov    esi,DWORD PTR ds:0x65024040
650103cc:	push   eax
650103cd:	call   esi
650103cf:	mov    ecx,DWORD PTR [ebp-0x20]
650103d2:	push   ecx
650103d3:	call   esi
650103d5:	mov    esi,DWORD PTR [ebp+0x18]
650103d8:	call   0x6500e000
650103dd:	push   0x4
650103df:	push   edi
650103e0:	push   esi
650103e1:	call   eax
650103e3:	mov    esi,DWORD PTR [ebp+0x14]
650103e6:	call   0x6500e000
650103eb:	push   0x4
650103ed:	push   edi
650103ee:	push   esi
650103ef:	call   eax
650103f1:	cmp    DWORD PTR [ebp+0x34],0x10
650103f5:	jb     0x65010403
650103f7:	mov    edx,DWORD PTR [ebp+0x20]
650103fa:	push   edx
650103fb:	call   0x65011f02
65010400:	add    esp,0x4
65010403:	mov    eax,DWORD PTR [ebp+0x8]
65010406:	add    eax,0xfffffff0
65010409:	mov    DWORD PTR [ebp+0x34],0xf
65010410:	mov    DWORD PTR [ebp+0x30],edi
65010413:	mov    BYTE PTR [ebp+0x20],0x0
65010417:	mov    BYTE PTR [ebp-0x4],0x7
6501041b:	lea    ecx,[eax+0xc]
6501041e:	or     edx,0xffffffff
65010421:	lock xadd DWORD PTR [ecx],edx
65010425:	dec    edx
65010426:	test   edx,edx
65010428:	jg     0x65010434
6501042a:	mov    ecx,DWORD PTR [eax]
6501042c:	mov    edx,DWORD PTR [ecx]
6501042e:	push   eax
6501042f:	mov    eax,DWORD PTR [edx+0x4]
65010432:	call   eax
65010434:	mov    eax,DWORD PTR [ebp+0x18]
65010437:	add    eax,0xfffffff0
6501043a:	mov    BYTE PTR [ebp-0x4],0x6
6501043e:	lea    ecx,[eax+0xc]
65010441:	or     edx,0xffffffff
65010444:	lock xadd DWORD PTR [ecx],edx
65010448:	dec    edx
65010449:	test   edx,edx
6501044b:	jg     0x65010457
6501044d:	mov    ecx,DWORD PTR [eax]
6501044f:	mov    edx,DWORD PTR [ecx]
65010451:	push   eax
65010452:	mov    eax,DWORD PTR [edx+0x4]
65010455:	call   eax
65010457:	mov    eax,DWORD PTR [ebp+0x14]
6501045a:	add    eax,0xfffffff0
6501045d:	mov    BYTE PTR [ebp-0x4],0x5
65010461:	lea    ecx,[eax+0xc]
65010464:	or     edx,0xffffffff
65010467:	lock xadd DWORD PTR [ecx],edx
6501046b:	dec    edx
6501046c:	test   edx,edx
6501046e:	jg     0x6501047a
65010470:	mov    ecx,DWORD PTR [eax]
65010472:	mov    edx,DWORD PTR [ecx]
65010474:	push   eax
65010475:	mov    eax,DWORD PTR [edx+0x4]
65010478:	call   eax
6501047a:	mov    eax,DWORD PTR [ebp+0x10]
6501047d:	add    eax,0xfffffff0
65010480:	mov    BYTE PTR [ebp-0x4],0x4
65010484:	lea    ecx,[eax+0xc]
65010487:	or     edx,0xffffffff
6501048a:	lock xadd DWORD PTR [ecx],edx
6501048e:	dec    edx
6501048f:	test   edx,edx
65010491:	jg     0x650104a7
65010493:	mov    ecx,DWORD PTR [eax]
65010495:	mov    edx,DWORD PTR [ecx]
65010497:	push   eax
65010498:	mov    eax,DWORD PTR [edx+0x4]
6501049b:	call   eax
6501049d:	jmp    0x650104a7
6501049f:	mov    eax,0x650104a5
650104a4:	ret    
650104a5:	xor    edi,edi
650104a7:	mov    esi,DWORD PTR [ebp-0x28]
650104aa:	cmp    esi,edi
650104ac:	je     0x650104bd
650104ae:	push   esi
650104af:	call   0x6500e920
650104b4:	push   esi
650104b5:	call   0x65011f02
650104ba:	add    esp,0x8
650104bd:	mov    esi,0x10
650104c2:	cmp    DWORD PTR [ebp+0x6c],esi
650104c5:	jb     0x650104d3
650104c7:	mov    ecx,DWORD PTR [ebp+0x58]
650104ca:	push   ecx
650104cb:	call   0x65011f02
650104d0:	add    esp,0x4
650104d3:	cmp    DWORD PTR [ebp+0x50],esi
650104d6:	mov    DWORD PTR [ebp+0x6c],0xf
650104dd:	mov    DWORD PTR [ebp+0x68],edi
650104e0:	mov    BYTE PTR [ebp+0x58],0x0
650104e4:	jb     0x6501050a
650104e6:	mov    edx,DWORD PTR [ebp+0x3c]
650104e9:	push   edx
650104ea:	call   0x65011f02
650104ef:	add    esp,0x4
650104f2:	jmp    0x6501050a
650104f4:	mov    eax,0x650104fa
650104f9:	ret    
650104fa:	lea    ecx,[ebp-0x38]
650104fd:	call   0x6500f6c0
65010502:	lea    ecx,[ebp+0x38]
65010505:	call   0x6500f820
6501050a:	lea    esp,[ebp-0x8c]
65010510:	mov    ecx,DWORD PTR [ebp-0xc]
65010513:	mov    DWORD PTR fs:0x0,ecx
6501051a:	pop    ecx
6501051b:	pop    edi
6501051c:	pop    esi
6501051d:	pop    ebx
6501051e:	mov    ecx,DWORD PTR [ebp+0x70]
65010521:	xor    ecx,ebp
65010523:	call   0x6501275c
65010528:	add    ebp,0x74
6501052b:	mov    esp,ebp
6501052d:	pop    ebp
6501052e:	ret    
6501052f:	int3   
65010530:	push   ecx
65010531:	push   esi
65010532:	mov    esi,ecx
65010534:	mov    eax,DWORD PTR [esi+0x4]
65010537:	test   eax,eax
65010539:	je     0x65010557
6501053b:	mov    ecx,DWORD PTR [esp+0x4]
6501053f:	mov    edx,DWORD PTR [esi+0x8]
65010542:	push   ecx
65010543:	push   esi
65010544:	push   edx
65010545:	push   eax
65010546:	call   0x6500c300
6501054b:	mov    eax,DWORD PTR [esi+0x4]
6501054e:	push   eax
6501054f:	call   0x65011f02
65010554:	add    esp,0x14
65010557:	mov    DWORD PTR [esi+0x4],0x0
6501055e:	mov    DWORD PTR [esi+0x8],0x0
65010565:	mov    DWORD PTR [esi+0xc],0x0
6501056c:	pop    esi
6501056d:	pop    ecx
6501056e:	ret    
6501056f:	int3   
65010570:	push   0xffffffff
65010572:	push   0x65021e0e
65010577:	mov    eax,fs:0x0
6501057d:	push   eax
6501057e:	push   ecx
6501057f:	push   ebx
65010580:	push   esi
65010581:	push   edi
65010582:	mov    eax,ds:0x6502c09c
65010587:	xor    eax,esp
65010589:	push   eax
6501058a:	lea    eax,[esp+0x14]
6501058e:	mov    fs:0x0,eax
65010594:	mov    eax,0x1
65010599:	test   BYTE PTR ds:0x6502d4e8,al
6501059f:	jne    0x650105da
650105a1:	or     DWORD PTR ds:0x6502d4e8,eax
650105a7:	push   0x65023480
650105ac:	mov    DWORD PTR ds:0x6502d4dc,0x0
650105b6:	mov    DWORD PTR ds:0x6502d4e0,0x0
650105c0:	mov    DWORD PTR ds:0x6502d4e4,0x0
650105ca:	call   0x6501288f
650105cf:	add    esp,0x4
650105d2:	mov    DWORD PTR [esp+0x1c],0xffffffff
650105da:	mov    esi,DWORD PTR ds:0x6502d4dc
650105e0:	test   esi,esi
650105e2:	je     0x650105f7
650105e4:	mov    edi,DWORD PTR ds:0x6502d4e0
650105ea:	mov    eax,edi
650105ec:	sub    eax,esi
650105ee:	sar    eax,0x2
650105f1:	jne    0x6501070d
650105f7:	push   0x65024474
650105fc:	push   0xc
650105fe:	push   0x65024464
65010603:	call   0x65006a10
65010608:	mov    esi,DWORD PTR ds:0x650241c8
6501060e:	add    esp,0xc
65010611:	push   eax
65010612:	call   esi
65010614:	lea    ecx,[esp+0x10]
65010618:	push   ecx
65010619:	mov    ecx,0x6502d4d8
6501061e:	mov    DWORD PTR [esp+0x14],eax
65010622:	call   0x65010030
65010627:	push   0x6502443c
6501062c:	push   0xc
6501062e:	push   0x6502442c
65010633:	call   0x65006a10
65010638:	add    esp,0xc
6501063b:	push   eax
6501063c:	call   esi
6501063e:	lea    edx,[esp+0x10]
65010642:	push   edx
65010643:	mov    ecx,0x6502d4d8
65010648:	mov    DWORD PTR [esp+0x14],eax
6501064c:	call   0x65010030
65010651:	push   0x650243f0
65010656:	push   0xc
65010658:	push   0x6502442c
6501065d:	call   0x65006a10
65010662:	add    esp,0xc
65010665:	push   eax
65010666:	call   esi
65010668:	mov    DWORD PTR [esp+0x10],eax
6501066c:	lea    eax,[esp+0x10]
65010670:	push   eax
65010671:	mov    ecx,0x6502d4d8
65010676:	call   0x65010030
6501067b:	push   0x650243c0
65010680:	push   0xc
65010682:	push   0x650243b0
65010687:	call   0x65006a10
6501068c:	add    esp,0xc
6501068f:	push   eax
65010690:	call   esi
65010692:	lea    ecx,[esp+0x10]
65010696:	push   ecx
65010697:	mov    ecx,0x6502d4d8
6501069c:	mov    DWORD PTR [esp+0x14],eax
650106a0:	call   0x65010030
650106a5:	push   0x65024370
650106aa:	push   0xc
650106ac:	push   0x650243b0
650106b1:	call   0x65006a10
650106b6:	add    esp,0xc
650106b9:	push   eax
650106ba:	call   esi
650106bc:	lea    edx,[esp+0x10]
650106c0:	push   edx
650106c1:	mov    ecx,0x6502d4d8
650106c6:	mov    DWORD PTR [esp+0x14],eax
650106ca:	call   0x65010030
650106cf:	call   DWORD PTR ds:0x65024058
650106d5:	push   eax
650106d6:	call   0x65012e8c
650106db:	mov    eax,ds:0x6502d4dc
650106e0:	add    esp,0x4
650106e3:	test   eax,eax
650106e5:	jne    0x650106eb
650106e7:	xor    esi,esi
650106e9:	jmp    0x650106f6
650106eb:	mov    esi,DWORD PTR ds:0x6502d4e0
650106f1:	sub    esi,eax
650106f3:	sar    esi,0x2
650106f6:	call   0x65012e99
650106fb:	mov    edi,DWORD PTR ds:0x6502d4e0
65010701:	xor    edx,edx
65010703:	div    esi
65010705:	mov    esi,DWORD PTR ds:0x6502d4dc
6501070b:	jmp    0x65010713
6501070d:	mov    edx,DWORD PTR ds:0x6502d4d4
65010713:	test   esi,esi
65010715:	jne    0x6501071b
65010717:	xor    ecx,ecx
65010719:	jmp    0x65010722
6501071b:	mov    ecx,edi
6501071d:	sub    ecx,esi
6501071f:	sar    ecx,0x2
65010722:	lea    eax,[edx+0x1]
65010725:	xor    edx,edx
65010727:	div    ecx
65010729:	test   esi,esi
6501072b:	mov    DWORD PTR ds:0x6502d4d4,edx
65010731:	mov    ebx,edx
65010733:	je     0x6501073e
65010735:	sub    edi,esi
65010737:	sar    edi,0x2
6501073a:	cmp    edx,edi
6501073c:	jb     0x6501075e
6501073e:	call   0x65012273
65010743:	mov    eax,ds:0x6502d4dc
65010748:	mov    eax,DWORD PTR [eax+ebx*4]
6501074b:	mov    ecx,DWORD PTR [esp+0x14]
6501074f:	mov    DWORD PTR fs:0x0,ecx
65010756:	pop    ecx
65010757:	pop    edi
65010758:	pop    esi
65010759:	pop    ebx
6501075a:	add    esp,0x10
6501075d:	ret    
6501075e:	mov    eax,DWORD PTR [esi+ebx*4]
65010761:	mov    ecx,DWORD PTR [esp+0x14]
65010765:	mov    DWORD PTR fs:0x0,ecx
6501076c:	pop    ecx
6501076d:	pop    edi
6501076e:	pop    esi
6501076f:	pop    ebx
65010770:	add    esp,0x10
65010773:	ret    
65010774:	int3   
65010775:	int3   
65010776:	int3   
65010777:	int3   
65010778:	int3   
65010779:	int3   
6501077a:	int3   
6501077b:	int3   
6501077c:	int3   
6501077d:	int3   
6501077e:	int3   
6501077f:	int3   
65010780:	push   ebp
65010781:	mov    ebp,esp
65010783:	push   0xffffffff
65010785:	push   0x65021e38
6501078a:	mov    eax,fs:0x0
65010790:	push   eax
65010791:	sub    esp,0x8
65010794:	push   ebx
65010795:	push   esi
65010796:	push   edi
65010797:	mov    eax,ds:0x6502c09c
6501079c:	xor    eax,ebp
6501079e:	push   eax
6501079f:	lea    eax,[ebp-0xc]
650107a2:	mov    fs:0x0,eax
650107a8:	mov    DWORD PTR [ebp-0x10],esp
650107ab:	xor    ebx,ebx
650107ad:	mov    DWORD PTR [ebp-0x4],ebx
650107b0:	call   0x65010570
650107b5:	lea    ecx,[ebp-0x14]
650107b8:	mov    edi,eax
650107ba:	call   0x6500a440
650107bf:	mov    eax,DWORD PTR [ebp+0x8]
650107c2:	cmp    DWORD PTR [eax+0x18],0x10
650107c6:	mov    ecx,DWORD PTR [eax+0x14]
650107c9:	mov    BYTE PTR [ebp-0x4],0x1
650107cd:	jb     0x650107d4
650107cf:	mov    eax,DWORD PTR [eax+0x4]
650107d2:	jmp    0x650107d7
650107d4:	add    eax,0x4
650107d7:	mov    esi,DWORD PTR [ebp+0xc]
650107da:	push   0xffffffff
650107dc:	push   esi
650107dd:	add    ecx,0x1
650107e0:	push   ecx
650107e1:	push   eax
650107e2:	push   edi
650107e3:	lea    ecx,[ebp-0x14]
650107e6:	call   0x6500a460
650107eb:	cmp    al,bl
650107ed:	je     0x6501080e
650107ef:	lea    ecx,[ebp-0x14]
650107f2:	mov    BYTE PTR [ebp-0x4],bl
650107f5:	call   0x6500a450
650107fa:	mov    al,0x1
650107fc:	mov    ecx,DWORD PTR [ebp-0xc]
650107ff:	mov    DWORD PTR fs:0x0,ecx
65010806:	pop    ecx
65010807:	pop    edi
65010808:	pop    esi
65010809:	pop    ebx
6501080a:	mov    esp,ebp
6501080c:	pop    ebp
6501080d:	ret    
6501080e:	push   ebx
6501080f:	push   0x65026616
65010814:	mov    ecx,esi
65010816:	call   0x65001860
6501081b:	lea    ecx,[ebp-0x14]
6501081e:	mov    BYTE PTR [ebp-0x4],bl
65010821:	call   0x6500a450
65010826:	xor    al,al
65010828:	mov    ecx,DWORD PTR [ebp-0xc]
6501082b:	mov    DWORD PTR fs:0x0,ecx
65010832:	pop    ecx
65010833:	pop    edi
65010834:	pop    esi
65010835:	pop    ebx
65010836:	mov    esp,ebp
65010838:	pop    ebp
65010839:	ret    
6501083a:	mov    eax,0x65010826
6501083f:	ret    
65010840:	push   ecx
65010841:	push   esi
65010842:	push   0x650244b4
65010847:	push   0x17
65010849:	push   0x6502449c
6501084e:	mov    DWORD PTR [esp+0x10],0x0
65010856:	call   0x65006a10
6501085b:	mov    esi,DWORD PTR [esp+0x18]
6501085f:	add    esp,0xc
65010862:	push   eax
65010863:	mov    ecx,esi
65010865:	call   0x65006770
6501086a:	mov    eax,esi
6501086c:	pop    esi
6501086d:	pop    ecx
6501086e:	ret    
6501086f:	int3   
65010870:	push   0xffffffff
65010872:	push   0x65021e68
65010877:	mov    eax,fs:0x0
6501087d:	push   eax
6501087e:	push   ecx
6501087f:	push   esi
65010880:	mov    eax,ds:0x6502c09c
65010885:	xor    eax,esp
65010887:	push   eax
65010888:	lea    eax,[esp+0xc]
6501088c:	mov    fs:0x0,eax
65010892:	lea    eax,[esp+0x8]
65010896:	push   eax
65010897:	call   0x65010840
6501089c:	add    esp,0x4
6501089f:	mov    eax,DWORD PTR [eax]
650108a1:	push   eax
650108a2:	push   0x0
650108a4:	mov    DWORD PTR [esp+0x1c],0x0
650108ac:	call   0x65006670
650108b1:	push   eax
650108b2:	call   DWORD PTR ds:0x65024060
650108b8:	mov    esi,eax
650108ba:	mov    eax,DWORD PTR [esp+0x8]
650108be:	add    eax,0xfffffff0
650108c1:	mov    DWORD PTR [esp+0x14],0xffffffff
650108c9:	lea    ecx,[eax+0xc]
650108cc:	or     edx,0xffffffff
650108cf:	lock xadd DWORD PTR [ecx],edx
650108d3:	dec    edx
650108d4:	test   edx,edx
650108d6:	jg     0x650108e2
650108d8:	mov    ecx,DWORD PTR [eax]
650108da:	mov    edx,DWORD PTR [ecx]
650108dc:	push   eax
650108dd:	mov    eax,DWORD PTR [edx+0x4]
650108e0:	call   eax
650108e2:	test   esi,esi
650108e4:	jne    0x650108f9
650108e6:	xor    al,al
650108e8:	mov    ecx,DWORD PTR [esp+0xc]
650108ec:	mov    DWORD PTR fs:0x0,ecx
650108f3:	pop    ecx
650108f4:	pop    esi
650108f5:	add    esp,0x10
650108f8:	ret    
650108f9:	push   0x0
650108fb:	push   esi
650108fc:	call   DWORD PTR ds:0x650240b4
65010902:	test   eax,eax
65010904:	sete   al
65010907:	mov    ecx,DWORD PTR [esp+0xc]
6501090b:	mov    DWORD PTR fs:0x0,ecx
65010912:	pop    ecx
65010913:	pop    esi
65010914:	add    esp,0x10
65010917:	ret    
65010918:	int3   
65010919:	int3   
6501091a:	int3   
6501091b:	int3   
6501091c:	int3   
6501091d:	int3   
6501091e:	int3   
6501091f:	int3   
65010920:	push   0xffffffff
65010922:	push   0x65021ea0
65010927:	mov    eax,fs:0x0
6501092d:	push   eax
6501092e:	sub    esp,0x8
65010931:	push   ebx
65010932:	push   esi
65010933:	push   edi
65010934:	mov    eax,ds:0x6502c09c
65010939:	xor    eax,esp
6501093b:	push   eax
6501093c:	lea    eax,[esp+0x18]
65010940:	mov    fs:0x0,eax
65010946:	xor    ebx,ebx
65010948:	mov    DWORD PTR [esp+0x14],ebx
6501094c:	push   0x650244f8
65010951:	push   0xf
65010953:	push   0x650244d8
65010958:	mov    DWORD PTR [esp+0x2c],ebx
6501095c:	call   0x65006d00
65010961:	add    esp,0xc
65010964:	push   eax
65010965:	lea    ecx,[esp+0x14]
65010969:	call   0x65002550
6501096e:	mov    eax,DWORD PTR [esp+0x10]
65010972:	push   ebx
65010973:	push   ebx
65010974:	push   0x3
65010976:	push   ebx
65010977:	push   ebx
65010978:	push   0xc0000000
6501097d:	push   eax
6501097e:	mov    BYTE PTR [esp+0x3c],0x1
65010983:	call   0x6500e120
65010988:	call   eax
6501098a:	mov    esi,eax
6501098c:	mov    eax,DWORD PTR [esp+0x10]
65010990:	add    eax,0xfffffff0
65010993:	mov    DWORD PTR [esp+0x14],esi
65010997:	mov    BYTE PTR [esp+0x20],bl
6501099b:	or     edx,0xffffffff
6501099e:	lea    ecx,[eax+0xc]
650109a1:	lock xadd DWORD PTR [ecx],edx
650109a5:	dec    edx
650109a6:	cmp    esi,0xffffffff
650109a9:	je     0x650109e8
650109ab:	test   edx,edx
650109ad:	jg     0x650109b9
650109af:	mov    ecx,DWORD PTR [eax]
650109b1:	mov    edx,DWORD PTR [ecx]
650109b3:	push   eax
650109b4:	mov    eax,DWORD PTR [edx+0x4]
650109b7:	call   eax
650109b9:	cmp    esi,ebx
650109bb:	je     0x650109d3
650109bd:	call   DWORD PTR ds:0x65024044
650109c3:	push   esi
650109c4:	mov    edi,eax
650109c6:	call   DWORD PTR ds:0x65024040
650109cc:	push   edi
650109cd:	call   DWORD PTR ds:0x6502405c
650109d3:	mov    al,0x1
650109d5:	mov    ecx,DWORD PTR [esp+0x18]
650109d9:	mov    DWORD PTR fs:0x0,ecx
650109e0:	pop    ecx
650109e1:	pop    edi
650109e2:	pop    esi
650109e3:	pop    ebx
650109e4:	add    esp,0x14
650109e7:	ret    
650109e8:	test   edx,edx
650109ea:	jg     0x650109f6
650109ec:	mov    ecx,DWORD PTR [eax]
650109ee:	mov    edx,DWORD PTR [ecx]
650109f0:	push   eax
650109f1:	mov    eax,DWORD PTR [edx+0x4]
650109f4:	call   eax
650109f6:	call   DWORD PTR ds:0x65024044
650109fc:	push   0xffffffff
650109fe:	mov    esi,eax
65010a00:	call   DWORD PTR ds:0x65024040
65010a06:	push   esi
65010a07:	call   DWORD PTR ds:0x6502405c
65010a0d:	xor    al,al
65010a0f:	mov    ecx,DWORD PTR [esp+0x18]
65010a13:	mov    DWORD PTR fs:0x0,ecx
65010a1a:	pop    ecx
65010a1b:	pop    edi
65010a1c:	pop    esi
65010a1d:	pop    ebx
65010a1e:	add    esp,0x14
65010a21:	ret    
65010a22:	int3   
65010a23:	int3   
65010a24:	int3   
65010a25:	int3   
65010a26:	int3   
65010a27:	int3   
65010a28:	int3   
65010a29:	int3   
65010a2a:	int3   
65010a2b:	int3   
65010a2c:	int3   
65010a2d:	int3   
65010a2e:	int3   
65010a2f:	int3   
65010a30:	push   ebp
65010a31:	lea    ebp,[esp-0x128]
65010a38:	sub    esp,0x128
65010a3e:	push   0xffffffff
65010a40:	push   0x65021fc1
65010a45:	mov    eax,fs:0x0
65010a4b:	push   eax
65010a4c:	sub    esp,0x90
65010a52:	mov    eax,ds:0x6502c09c
65010a57:	xor    eax,ebp
65010a59:	mov    DWORD PTR [ebp+0x124],eax
65010a5f:	push   ebx
65010a60:	push   esi
65010a61:	push   edi
65010a62:	push   eax
65010a63:	lea    eax,[ebp-0xc]
65010a66:	mov    fs:0x0,eax
65010a6c:	mov    esi,DWORD PTR [ebp+0x130]
65010a72:	xor    edi,edi
65010a74:	mov    DWORD PTR [ebp-0x4],edi
65010a77:	mov    DWORD PTR [ebp-0x58],esi
65010a7a:	mov    DWORD PTR [ebp-0x50],edi
65010a7d:	call   DWORD PTR ds:0x6502c06c
65010a83:	mov    eax,ds:0x6502d560
65010a88:	mov    edx,DWORD PTR [eax+0xc]
65010a8b:	mov    ecx,0x6502d560
65010a90:	call   edx
65010a92:	add    eax,0x10
65010a95:	mov    DWORD PTR [esi],eax
65010a97:	push   0x650248b8
65010a9c:	push   0xd
65010a9e:	mov    ebx,0x1
65010aa3:	push   0x650248a8
65010aa8:	mov    DWORD PTR [ebp-0x4],edi
65010aab:	mov    DWORD PTR [ebp-0x50],ebx
65010aae:	call   0x65006a10
65010ab3:	add    esp,0xc
65010ab6:	push   eax
65010ab7:	mov    ecx,esi
65010ab9:	call   0x65002620
65010abe:	push   0x6502487c
65010ac3:	push   0x3
65010ac5:	push   0x65024878
65010aca:	call   0x65006a10
65010acf:	add    esp,0xc
65010ad2:	push   eax
65010ad3:	mov    ecx,esi
65010ad5:	call   0x65002620
65010ada:	push   0x6502486c
65010adf:	mov    ecx,esi
65010ae1:	call   0x65002620
65010ae6:	push   0x65024838
65010aeb:	push   0x3
65010aed:	push   0x65024834
65010af2:	call   0x65006a10
65010af7:	add    esp,0xc
65010afa:	push   eax
65010afb:	mov    ecx,esi
65010afd:	call   0x65002620
65010b02:	push   0x6502482c
65010b07:	mov    ecx,esi
65010b09:	call   0x65002620
65010b0e:	mov    eax,ds:0x6502d560
65010b13:	mov    edx,DWORD PTR [eax+0xc]
65010b16:	mov    ecx,0x6502d560
65010b1b:	call   edx
65010b1d:	add    eax,0x10
65010b20:	mov    DWORD PTR [ebp-0x4c],eax
65010b23:	mov    eax,ds:0x6502d560
65010b28:	mov    edx,DWORD PTR [eax+0xc]
65010b2b:	mov    ecx,0x6502d560
65010b30:	mov    DWORD PTR [ebp-0x4],ebx
65010b33:	call   edx
65010b35:	add    eax,0x10
65010b38:	mov    DWORD PTR [ebp-0x54],eax
65010b3b:	lea    eax,[ebp+0x114]
65010b41:	push   eax
65010b42:	mov    BYTE PTR [ebp-0x4],0x2
65010b46:	call   0x650064c0
65010b4b:	add    esp,0x4
65010b4e:	test   al,al
65010b50:	je     0x65010bf0
65010b56:	push   0x65024800
65010b5b:	push   0x4
65010b5d:	push   0x650247f8
65010b62:	call   0x65006a10
65010b67:	add    esp,0xc
65010b6a:	push   eax
65010b6b:	lea    ecx,[ebp-0x10]
65010b6e:	call   0x65006770
65010b73:	mov    eax,DWORD PTR [eax]
65010b75:	mov    ecx,DWORD PTR [eax-0xc]
65010b78:	push   ecx
65010b79:	push   eax
65010b7a:	mov    ecx,esi
65010b7c:	mov    BYTE PTR [ebp-0x4],0x3
65010b80:	call   0x650029a0
65010b85:	mov    eax,DWORD PTR [ebp-0x10]
65010b88:	add    eax,0xfffffff0
65010b8b:	mov    BYTE PTR [ebp-0x4],0x2
65010b8f:	lea    ecx,[eax+0xc]
65010b92:	or     edx,0xffffffff
65010b95:	lock xadd DWORD PTR [ecx],edx
65010b99:	dec    edx
65010b9a:	test   edx,edx
65010b9c:	jg     0x65010ba8
65010b9e:	mov    ecx,DWORD PTR [eax]
65010ba0:	mov    edx,DWORD PTR [ecx]
65010ba2:	push   eax
65010ba3:	mov    eax,DWORD PTR [edx+0x4]
65010ba6:	call   eax
65010ba8:	lea    ecx,[ebp+0x114]
65010bae:	push   ecx
65010baf:	lea    edx,[ebp-0x10]
65010bb2:	push   edx
65010bb3:	call   0x65002e70
65010bb8:	add    esp,0x8
65010bbb:	mov    eax,DWORD PTR [eax]
65010bbd:	mov    ecx,DWORD PTR [eax-0xc]
65010bc0:	push   ecx
65010bc1:	push   eax
65010bc2:	mov    ecx,esi
65010bc4:	mov    BYTE PTR [ebp-0x4],0x4
65010bc8:	call   0x650029a0
65010bcd:	mov    eax,DWORD PTR [ebp-0x10]
65010bd0:	add    eax,0xfffffff0
65010bd3:	mov    BYTE PTR [ebp-0x4],0x2
65010bd7:	lea    ecx,[eax+0xc]
65010bda:	or     edx,0xffffffff
65010bdd:	lock xadd DWORD PTR [ecx],edx
65010be1:	dec    edx
65010be2:	test   edx,edx
65010be4:	jg     0x65010bf0
65010be6:	mov    ecx,DWORD PTR [eax]
65010be8:	mov    edx,DWORD PTR [ecx]
65010bea:	push   eax
65010beb:	mov    eax,DWORD PTR [edx+0x4]
65010bee:	call   eax
65010bf0:	push   0x650247c0
65010bf5:	push   0x7
65010bf7:	push   0x650247b8
65010bfc:	call   0x65006a10
65010c01:	add    esp,0xc
65010c04:	push   eax
65010c05:	mov    ecx,esi
65010c07:	call   0x65002620
65010c0c:	call   0x65010920
65010c11:	test   al,al
65010c13:	je     0x65010c31
65010c15:	push   0x65024788
65010c1a:	push   0x6
65010c1c:	push   0x65024780
65010c21:	call   0x65006a10
65010c26:	add    esp,0xc
65010c29:	push   eax
65010c2a:	mov    ecx,esi
65010c2c:	call   0x65002620
65010c31:	mov    edx,DWORD PTR ds:0x6502d560
65010c37:	mov    eax,DWORD PTR [edx+0xc]
65010c3a:	mov    ecx,0x6502d560
65010c3f:	call   eax
65010c41:	add    eax,0x10
65010c44:	mov    DWORD PTR [ebp-0x28],eax
65010c47:	mov    edx,DWORD PTR ds:0x6502d560
65010c4d:	mov    eax,DWORD PTR [edx+0xc]
65010c50:	mov    ecx,0x6502d560
65010c55:	mov    BYTE PTR [ebp-0x4],0x5
65010c59:	call   eax
65010c5b:	add    eax,0x10
65010c5e:	mov    DWORD PTR [ebp-0x48],eax
65010c61:	mov    edx,DWORD PTR ds:0x6502d560
65010c67:	mov    eax,DWORD PTR [edx+0xc]
65010c6a:	mov    ecx,0x6502d560
65010c6f:	mov    BYTE PTR [ebp-0x4],0x6
65010c73:	call   eax
65010c75:	add    eax,0x10
65010c78:	mov    DWORD PTR [ebp-0x24],eax
65010c7b:	lea    ecx,[ebp-0x44]
65010c7e:	push   ecx
65010c7f:	lea    edx,[ebp-0x24]
65010c82:	push   edx
65010c83:	lea    eax,[ebp-0x28]
65010c86:	push   eax
65010c87:	mov    BYTE PTR [ebp-0x4],0x7
65010c8b:	mov    DWORD PTR [ebp-0x44],edi
65010c8e:	mov    DWORD PTR [ebp-0x40],edi
65010c91:	call   0x6500b2b0
65010c96:	add    esp,0xc
65010c99:	test   al,al
65010c9b:	je     0x65010edc
65010ca1:	lea    ecx,[ebp-0x24]
65010ca4:	push   ecx
65010ca5:	lea    edx,[ebp-0x14]
65010ca8:	push   edx
65010ca9:	call   0x65003110
65010cae:	mov    edi,eax
65010cb0:	push   0x65024758
65010cb5:	push   0x5
65010cb7:	mov    bl,0x8
65010cb9:	push   0x65024750
65010cbe:	mov    BYTE PTR [ebp-0x4],bl
65010cc1:	call   0x65006a10
65010cc6:	add    esp,0x14
65010cc9:	push   eax
65010cca:	lea    ecx,[ebp-0x18]
65010ccd:	call   0x65006770
65010cd2:	push   edi
65010cd3:	push   eax
65010cd4:	lea    eax,[ebp-0x10]
65010cd7:	push   eax
65010cd8:	mov    BYTE PTR [ebp-0x4],0x9
65010cdc:	call   0x6500f870
65010ce1:	add    esp,0xc
65010ce4:	mov    eax,DWORD PTR [eax]
65010ce6:	mov    ecx,DWORD PTR [eax-0xc]
65010ce9:	push   ecx
65010cea:	push   eax
65010ceb:	mov    ecx,esi
65010ced:	mov    BYTE PTR [ebp-0x4],0xa
65010cf1:	call   0x650029a0
65010cf6:	mov    eax,DWORD PTR [ebp-0x10]
65010cf9:	add    eax,0xfffffff0
65010cfc:	mov    BYTE PTR [ebp-0x4],0x9
65010d00:	lea    ecx,[eax+0xc]
65010d03:	or     edx,0xffffffff
65010d06:	lock xadd DWORD PTR [ecx],edx
65010d0a:	dec    edx
65010d0b:	test   edx,edx
65010d0d:	jg     0x65010d19
65010d0f:	mov    ecx,DWORD PTR [eax]
65010d11:	mov    edx,DWORD PTR [ecx]
65010d13:	push   eax
65010d14:	mov    eax,DWORD PTR [edx+0x4]
65010d17:	call   eax
65010d19:	mov    eax,DWORD PTR [ebp-0x18]
65010d1c:	add    eax,0xfffffff0
65010d1f:	mov    BYTE PTR [ebp-0x4],bl
65010d22:	lea    ecx,[eax+0xc]
65010d25:	or     edx,0xffffffff
65010d28:	lock xadd DWORD PTR [ecx],edx
65010d2c:	dec    edx
65010d2d:	test   edx,edx
65010d2f:	jg     0x65010d3b
65010d31:	mov    ecx,DWORD PTR [eax]
65010d33:	mov    edx,DWORD PTR [ecx]
65010d35:	push   eax
65010d36:	mov    eax,DWORD PTR [edx+0x4]
65010d39:	call   eax
65010d3b:	mov    eax,DWORD PTR [ebp-0x14]
65010d3e:	add    eax,0xfffffff0
65010d41:	mov    BYTE PTR [ebp-0x4],0x7
65010d45:	lea    ecx,[eax+0xc]
65010d48:	or     edx,0xffffffff
65010d4b:	lock xadd DWORD PTR [ecx],edx
65010d4f:	dec    edx
65010d50:	test   edx,edx
65010d52:	jg     0x65010d5e
65010d54:	mov    ecx,DWORD PTR [eax]
65010d56:	mov    edx,DWORD PTR [ecx]
65010d58:	push   eax
65010d59:	mov    eax,DWORD PTR [edx+0x4]
65010d5c:	call   eax
65010d5e:	lea    ecx,[ebp-0x28]
65010d61:	push   ecx
65010d62:	lea    edx,[ebp-0x10]
65010d65:	push   edx
65010d66:	call   0x65003110
65010d6b:	mov    edi,eax
65010d6d:	push   0x65024714
65010d72:	push   0x7
65010d74:	mov    bl,0xb
65010d76:	push   0x6502470c
65010d7b:	mov    BYTE PTR [ebp-0x4],bl
65010d7e:	call   0x65006a10
65010d83:	add    esp,0x14
65010d86:	push   eax
65010d87:	lea    ecx,[ebp-0x18]
65010d8a:	call   0x65006770
65010d8f:	push   edi
65010d90:	push   eax
65010d91:	lea    eax,[ebp-0x14]
65010d94:	push   eax
65010d95:	mov    BYTE PTR [ebp-0x4],0xc
65010d99:	call   0x6500f870
65010d9e:	add    esp,0xc
65010da1:	mov    eax,DWORD PTR [eax]
65010da3:	mov    ecx,DWORD PTR [eax-0xc]
65010da6:	push   ecx
65010da7:	push   eax
65010da8:	mov    ecx,esi
65010daa:	mov    BYTE PTR [ebp-0x4],0xd
65010dae:	call   0x650029a0
65010db3:	mov    eax,DWORD PTR [ebp-0x14]
65010db6:	add    eax,0xfffffff0
65010db9:	mov    BYTE PTR [ebp-0x4],0xc
65010dbd:	lea    ecx,[eax+0xc]
65010dc0:	or     edx,0xffffffff
65010dc3:	lock xadd DWORD PTR [ecx],edx
65010dc7:	dec    edx
65010dc8:	test   edx,edx
65010dca:	jg     0x65010dd6
65010dcc:	mov    ecx,DWORD PTR [eax]
65010dce:	mov    edx,DWORD PTR [ecx]
65010dd0:	push   eax
65010dd1:	mov    eax,DWORD PTR [edx+0x4]
65010dd4:	call   eax
65010dd6:	mov    eax,DWORD PTR [ebp-0x18]
65010dd9:	add    eax,0xfffffff0
65010ddc:	mov    BYTE PTR [ebp-0x4],bl
65010ddf:	lea    ecx,[eax+0xc]
65010de2:	or     edx,0xffffffff
65010de5:	lock xadd DWORD PTR [ecx],edx
65010de9:	dec    edx
65010dea:	test   edx,edx
65010dec:	jg     0x65010df8
65010dee:	mov    ecx,DWORD PTR [eax]
65010df0:	mov    edx,DWORD PTR [ecx]
65010df2:	push   eax
65010df3:	mov    eax,DWORD PTR [edx+0x4]
65010df6:	call   eax
65010df8:	mov    eax,DWORD PTR [ebp-0x10]
65010dfb:	add    eax,0xfffffff0
65010dfe:	mov    BYTE PTR [ebp-0x4],0x7
65010e02:	lea    ecx,[eax+0xc]
65010e05:	or     edx,0xffffffff
65010e08:	lock xadd DWORD PTR [ecx],edx
65010e0c:	dec    edx
65010e0d:	test   edx,edx
65010e0f:	jg     0x65010e1b
65010e11:	mov    ecx,DWORD PTR [eax]
65010e13:	mov    edx,DWORD PTR [ecx]
65010e15:	push   eax
65010e16:	mov    eax,DWORD PTR [edx+0x4]
65010e19:	call   eax
65010e1b:	mov    edx,DWORD PTR ds:0x6502d560
65010e21:	mov    eax,DWORD PTR [edx+0xc]
65010e24:	mov    ecx,0x6502d560
65010e29:	call   eax
65010e2b:	add    eax,0x10
65010e2e:	mov    DWORD PTR [ebp-0x10],eax
65010e31:	mov    ecx,DWORD PTR [ebp-0x40]
65010e34:	mov    edx,DWORD PTR [ebp-0x44]
65010e37:	push   ecx
65010e38:	push   edx
65010e39:	push   0x650246e8
65010e3e:	push   0xc
65010e40:	push   0x650246cc
65010e45:	mov    BYTE PTR [ebp-0x4],0xe
65010e49:	call   0x65006d00
65010e4e:	add    esp,0xc
65010e51:	push   eax
65010e52:	lea    eax,[ebp-0x10]
65010e55:	push   eax
65010e56:	call   0x65001d40
65010e5b:	add    esp,0x10
65010e5e:	call   DWORD PTR ds:0x6502c06c
65010e64:	mov    edi,DWORD PTR [ebp-0x10]
65010e67:	cmp    DWORD PTR [edi-0x4],0x1
65010e6b:	mov    DWORD PTR [ebp-0x14],eax
65010e6e:	jle    0x65010e7f
65010e70:	mov    ecx,DWORD PTR [edi-0xc]
65010e73:	push   ecx
65010e74:	lea    ecx,[ebp-0x10]
65010e77:	call   0x65001950
65010e7c:	mov    edi,DWORD PTR [ebp-0x10]
65010e7f:	test   edi,edi
65010e81:	jne    0x65010e87
65010e83:	xor    eax,eax
65010e85:	jmp    0x65010eb4
65010e87:	push   edi
65010e88:	call   DWORD PTR ds:0x65024050
65010e8e:	add    eax,0x1
65010e91:	cmp    eax,0x3fffffff
65010e96:	jle    0x65010e9c
65010e98:	xor    eax,eax
65010e9a:	jmp    0x65010eb4
65010e9c:	lea    ebx,[eax+eax*1]
65010e9f:	mov    eax,ebx
65010ea1:	call   0x65012e60
65010ea6:	mov    edx,DWORD PTR [ebp-0x14]
65010ea9:	mov    eax,esp
65010eab:	push   edx
65010eac:	push   ebx
65010ead:	push   edi
65010eae:	push   eax
65010eaf:	call   0x65002b40
65010eb4:	push   eax
65010eb5:	mov    ecx,esi
65010eb7:	call   0x65002620
65010ebc:	add    edi,0xfffffff0
65010ebf:	mov    BYTE PTR [ebp-0x4],0x7
65010ec3:	lea    eax,[edi+0xc]
65010ec6:	or     ecx,0xffffffff
65010ec9:	lock xadd DWORD PTR [eax],ecx
65010ecd:	dec    ecx
65010ece:	test   ecx,ecx
65010ed0:	jg     0x65010edc
65010ed2:	mov    ecx,DWORD PTR [edi]
65010ed4:	mov    edx,DWORD PTR [ecx]
65010ed6:	mov    eax,DWORD PTR [edx+0x4]
65010ed9:	push   edi
65010eda:	call   eax
65010edc:	xor    edi,edi
65010ede:	mov    DWORD PTR [ebp-0x38],edi
65010ee1:	mov    DWORD PTR [ebp-0x34],edi
65010ee4:	mov    DWORD PTR [ebp-0x30],edi
65010ee7:	lea    ecx,[ebp-0x3c]
65010eea:	push   ecx
65010eeb:	mov    BYTE PTR [ebp-0x4],0xf
65010eef:	call   0x6500b460
65010ef4:	add    esp,0x4
65010ef7:	mov    DWORD PTR [ebp-0x10],edi
65010efa:	xor    ebx,ebx
65010efc:	lea    esp,[esp+0x0]
65010f00:	mov    eax,DWORD PTR [ebp-0x38]
65010f03:	cmp    eax,edi
65010f05:	jne    0x65010f0b
65010f07:	xor    eax,eax
65010f09:	jmp    0x65010f23
65010f0b:	mov    ecx,DWORD PTR [ebp-0x34]
65010f0e:	sub    ecx,eax
65010f10:	mov    eax,0x92492493
65010f15:	imul   ecx
65010f17:	add    edx,ecx
65010f19:	sar    edx,0x4
65010f1c:	mov    eax,edx
65010f1e:	shr    eax,0x1f
65010f21:	add    eax,edx
65010f23:	cmp    DWORD PTR [ebp-0x10],eax
65010f26:	je     0x65010fd1
65010f2c:	push   0x6502469c
65010f31:	push   0x5
65010f33:	push   0x65024694
65010f38:	call   0x65006a10
65010f3d:	add    esp,0xc
65010f40:	push   eax
65010f41:	lea    ecx,[ebp-0x14]
65010f44:	call   0x65006770
65010f49:	mov    eax,DWORD PTR [eax]
65010f4b:	mov    ecx,DWORD PTR [eax-0xc]
65010f4e:	push   ecx
65010f4f:	push   eax
65010f50:	mov    ecx,esi
65010f52:	mov    BYTE PTR [ebp-0x4],0x10
65010f56:	call   0x650029a0
65010f5b:	mov    eax,DWORD PTR [ebp-0x14]
65010f5e:	add    eax,0xfffffff0
65010f61:	mov    BYTE PTR [ebp-0x4],0xf
65010f65:	lea    edx,[eax+0xc]
65010f68:	or     ecx,0xffffffff
65010f6b:	lock xadd DWORD PTR [edx],ecx
65010f6f:	dec    ecx
65010f70:	test   ecx,ecx
65010f72:	jg     0x65010f7e
65010f74:	mov    ecx,DWORD PTR [eax]
65010f76:	mov    edx,DWORD PTR [ecx]
65010f78:	push   eax
65010f79:	mov    eax,DWORD PTR [edx+0x4]
65010f7c:	call   eax
65010f7e:	mov    edi,DWORD PTR [ebp-0x38]
65010f81:	test   edi,edi
65010f83:	je     0x65010fa2
65010f85:	mov    ecx,DWORD PTR [ebp-0x34]
65010f88:	sub    ecx,edi
65010f8a:	mov    eax,0x92492493
65010f8f:	imul   ecx
65010f91:	add    edx,ecx
65010f93:	sar    edx,0x4
65010f96:	mov    eax,edx
65010f98:	shr    eax,0x1f
65010f9b:	add    eax,edx
65010f9d:	cmp    DWORD PTR [ebp-0x10],eax
65010fa0:	jb     0x65010faa
65010fa2:	call   0x65012273
65010fa7:	mov    edi,DWORD PTR [ebp-0x38]
65010faa:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
65010faf:	jb     0x65010fb7
65010fb1:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
65010fb5:	jmp    0x65010fbb
65010fb7:	lea    edi,[ebx+edi*1+0x4]
65010fbb:	push   edi
65010fbc:	mov    ecx,esi
65010fbe:	call   0x65002620
65010fc3:	add    DWORD PTR [ebp-0x10],0x1
65010fc7:	add    ebx,0x1c
65010fca:	xor    edi,edi
65010fcc:	jmp    0x65010f00
65010fd1:	call   DWORD PTR ds:0x6502c06c
65010fd7:	push   0x110
65010fdc:	lea    ecx,[ebp+0x4]
65010fdf:	push   edi
65010fe0:	push   ecx
65010fe1:	mov    DWORD PTR [ebp-0x14],eax
65010fe4:	call   0x65012de0
65010fe9:	mov    edx,DWORD PTR ds:0x6502d560
65010fef:	mov    eax,DWORD PTR [edx+0xc]
65010ff2:	add    esp,0xc
65010ff5:	mov    ecx,0x6502d560
65010ffa:	mov    DWORD PTR [ebp+0x0],0x114
65011001:	call   eax
65011003:	add    eax,0x10
65011006:	mov    DWORD PTR [ebp-0x10],eax
65011009:	lea    ecx,[ebp+0x0]
6501100c:	push   ecx
6501100d:	mov    BYTE PTR [ebp-0x4],0x11
65011011:	call   DWORD PTR ds:0x65024068
65011017:	test   eax,eax
65011019:	lea    ecx,[ebp-0x10]
6501101c:	je     0x65011036
6501101e:	mov    edx,DWORD PTR [ebp+0x8]
65011021:	mov    eax,DWORD PTR [ebp+0x4]
65011024:	push   edx
65011025:	push   eax
65011026:	push   0x6502466c
6501102b:	push   ecx
6501102c:	call   0x65001d40
65011031:	add    esp,0x10
65011034:	jmp    0x65011042
65011036:	push   0xc
65011038:	push   0x65024650
6501103d:	call   0x65002aa0
65011042:	xor    eax,eax
65011044:	lea    edx,[ebp-0x8c]
6501104a:	push   edx
6501104b:	mov    DWORD PTR [ebp-0x8c],edi
65011051:	mov    DWORD PTR [ebp-0x88],eax
65011057:	mov    DWORD PTR [ebp-0x84],eax
6501105d:	mov    DWORD PTR [ebp-0x80],eax
65011060:	mov    DWORD PTR [ebp-0x7c],eax
65011063:	mov    DWORD PTR [ebp-0x78],eax
65011066:	mov    DWORD PTR [ebp-0x74],eax
65011069:	mov    DWORD PTR [ebp-0x70],eax
6501106c:	mov    DWORD PTR [ebp-0x6c],eax
6501106f:	call   DWORD PTR ds:0x65024064
65011075:	movzx  eax,WORD PTR [ebp-0x8c]
6501107c:	cmp    eax,edi
6501107e:	je     0x6501108e
65011080:	cmp    eax,0x9
65011083:	jne    0x6501109d
65011085:	push   0x4
65011087:	push   0x65024644
6501108c:	jmp    0x65011095
6501108e:	push   0x4
65011090:	push   0x65024638
65011095:	lea    ecx,[ebp-0x10]
65011098:	call   0x650029a0
6501109d:	mov    ebx,DWORD PTR [ebp-0x10]
650110a0:	cmp    ebx,edi
650110a2:	jne    0x650110a8
650110a4:	xor    eax,eax
650110a6:	jmp    0x650110f1
650110a8:	push   ebx
650110a9:	call   DWORD PTR ds:0x65024050
650110af:	add    eax,0x1
650110b2:	cmp    eax,0x3fffffff
650110b7:	jg     0x650110ec
650110b9:	lea    ebx,[eax+eax*1]
650110bc:	mov    eax,ebx
650110be:	call   0x65012e60
650110c3:	mov    edi,esp
650110c5:	test   edi,edi
650110c7:	je     0x650110ec
650110c9:	mov    eax,DWORD PTR [ebp-0x10]
650110cc:	mov    ecx,DWORD PTR [ebp-0x14]
650110cf:	push   0x0
650110d1:	push   0x0
650110d3:	push   ebx
650110d4:	push   edi
650110d5:	push   0xffffffff
650110d7:	push   eax
650110d8:	push   0x0
650110da:	push   ecx
650110db:	mov    BYTE PTR [edi],0x0
650110de:	call   DWORD PTR ds:0x65024028
650110e4:	neg    eax
650110e6:	sbb    eax,eax
650110e8:	and    eax,edi
650110ea:	jmp    0x650110ee
650110ec:	xor    eax,eax
650110ee:	mov    ebx,DWORD PTR [ebp-0x10]
650110f1:	push   eax
650110f2:	mov    ecx,esi
650110f4:	call   0x65002620
650110f9:	lea    eax,[ebx-0x10]
650110fc:	mov    BYTE PTR [ebp-0x4],0xf
65011100:	lea    edx,[eax+0xc]
65011103:	or     ecx,0xffffffff
65011106:	lock xadd DWORD PTR [edx],ecx
6501110a:	dec    ecx
6501110b:	test   ecx,ecx
6501110d:	jg     0x65011119
6501110f:	mov    ecx,DWORD PTR [eax]
65011111:	mov    edx,DWORD PTR [ecx]
65011113:	push   eax
65011114:	mov    eax,DWORD PTR [edx+0x4]
65011117:	call   eax
65011119:	lea    ecx,[ebp-0x20]
6501111c:	push   ecx
6501111d:	call   0x6500ba20
65011122:	push   eax
65011123:	lea    edx,[ebp-0x10]
65011126:	push   edx
65011127:	mov    BYTE PTR [ebp-0x4],0x12
6501112b:	call   0x65003110
65011130:	mov    edi,eax
65011132:	push   0x650245f8
65011137:	push   0x7
65011139:	push   0x650245f0
6501113e:	mov    BYTE PTR [ebp-0x4],0x13
65011142:	call   0x65006a10
65011147:	add    esp,0x18
6501114a:	push   eax
6501114b:	lea    ecx,[ebp-0x18]
6501114e:	call   0x65006770
65011153:	push   edi
65011154:	push   eax
65011155:	lea    eax,[ebp-0x14]
65011158:	mov    bl,0x14
6501115a:	push   eax
6501115b:	mov    BYTE PTR [ebp-0x4],bl
6501115e:	call   0x6500f870
65011163:	add    esp,0xc
65011166:	mov    eax,DWORD PTR [eax]
65011168:	mov    ecx,DWORD PTR [eax-0xc]
6501116b:	push   ecx
6501116c:	push   eax
6501116d:	mov    ecx,esi
6501116f:	mov    BYTE PTR [ebp-0x4],0x15
65011173:	call   0x650029a0
65011178:	mov    eax,DWORD PTR [ebp-0x14]
6501117b:	add    eax,0xfffffff0
6501117e:	mov    BYTE PTR [ebp-0x4],bl
65011181:	lea    ecx,[eax+0xc]
65011184:	or     edx,0xffffffff
65011187:	lock xadd DWORD PTR [ecx],edx
6501118b:	dec    edx
6501118c:	test   edx,edx
6501118e:	jg     0x6501119a
65011190:	mov    ecx,DWORD PTR [eax]
65011192:	mov    edx,DWORD PTR [ecx]
65011194:	push   eax
65011195:	mov    eax,DWORD PTR [edx+0x4]
65011198:	call   eax
6501119a:	mov    eax,DWORD PTR [ebp-0x18]
6501119d:	add    eax,0xfffffff0
650111a0:	mov    BYTE PTR [ebp-0x4],0x13
650111a4:	lea    ecx,[eax+0xc]
650111a7:	or     edx,0xffffffff
650111aa:	lock xadd DWORD PTR [ecx],edx
650111ae:	dec    edx
650111af:	test   edx,edx
650111b1:	jg     0x650111bd
650111b3:	mov    ecx,DWORD PTR [eax]
650111b5:	mov    edx,DWORD PTR [ecx]
650111b7:	push   eax
650111b8:	mov    eax,DWORD PTR [edx+0x4]
650111bb:	call   eax
650111bd:	mov    eax,DWORD PTR [ebp-0x10]
650111c0:	add    eax,0xfffffff0
650111c3:	mov    BYTE PTR [ebp-0x4],0x12
650111c7:	lea    ecx,[eax+0xc]
650111ca:	or     edx,0xffffffff
650111cd:	lock xadd DWORD PTR [ecx],edx
650111d1:	dec    edx
650111d2:	test   edx,edx
650111d4:	jg     0x650111e0
650111d6:	mov    ecx,DWORD PTR [eax]
650111d8:	mov    edx,DWORD PTR [ecx]
650111da:	push   eax
650111db:	mov    eax,DWORD PTR [edx+0x4]
650111de:	call   eax
650111e0:	mov    eax,DWORD PTR [ebp-0x20]
650111e3:	add    eax,0xfffffff0
650111e6:	mov    BYTE PTR [ebp-0x4],0xf
650111ea:	lea    ecx,[eax+0xc]
650111ed:	or     edx,0xffffffff
650111f0:	lock xadd DWORD PTR [ecx],edx
650111f4:	dec    edx
650111f5:	test   edx,edx
650111f7:	jg     0x65011203
650111f9:	mov    ecx,DWORD PTR [eax]
650111fb:	mov    edx,DWORD PTR [ecx]
650111fd:	push   eax
650111fe:	mov    eax,DWORD PTR [edx+0x4]
65011201:	call   eax
65011203:	call   DWORD PTR ds:0x6502c06c
65011209:	mov    edx,DWORD PTR ds:0x6502d560
6501120f:	mov    DWORD PTR [ebp-0x14],eax
65011212:	mov    eax,DWORD PTR [edx+0xc]
65011215:	mov    ecx,0x6502d560
6501121a:	call   eax
6501121c:	add    eax,0x10
6501121f:	mov    DWORD PTR [ebp-0x10],eax
65011222:	mov    BYTE PTR [ebp-0x4],0x16
65011226:	call   0x650037c0
6501122b:	push   eax
6501122c:	push   0x650245b4
65011231:	push   0x4
65011233:	push   0x650245a8
65011238:	call   0x65006d00
6501123d:	add    esp,0xc
65011240:	push   eax
65011241:	lea    ecx,[ebp-0x10]
65011244:	push   ecx
65011245:	call   0x65001d40
6501124a:	mov    ebx,DWORD PTR [ebp-0x10]
6501124d:	mov    eax,DWORD PTR [ebx-0x8]
65011250:	mov    ecx,0x1
65011255:	sub    ecx,DWORD PTR [ebx-0x4]
65011258:	add    eax,0x1
6501125b:	add    esp,0xc
6501125e:	or     eax,ecx
65011260:	jge    0x6501126f
65011262:	push   0xffffffff
65011264:	lea    ecx,[ebp-0x10]
65011267:	call   0x65001e00
6501126c:	mov    ebx,DWORD PTR [ebp-0x10]
6501126f:	test   ebx,ebx
65011271:	je     0x650112b7
65011273:	push   ebx
65011274:	call   DWORD PTR ds:0x65024050
6501127a:	add    eax,0x1
6501127d:	cmp    eax,0x3fffffff
65011282:	jg     0x650112b7
65011284:	add    eax,eax
65011286:	mov    DWORD PTR [ebp-0x20],eax
65011289:	call   0x65012e60
6501128e:	mov    edi,esp
65011290:	test   edi,edi
65011292:	je     0x650112b7
65011294:	mov    edx,DWORD PTR [ebp-0x20]
65011297:	mov    eax,DWORD PTR [ebp-0x14]
6501129a:	push   0x0
6501129c:	push   0x0
6501129e:	push   edx
6501129f:	push   edi
650112a0:	push   0xffffffff
650112a2:	push   ebx
650112a3:	push   0x0
650112a5:	push   eax
650112a6:	mov    BYTE PTR [edi],0x0
650112a9:	call   DWORD PTR ds:0x65024028
650112af:	neg    eax
650112b1:	sbb    eax,eax
650112b3:	and    eax,edi
650112b5:	jmp    0x650112b9
650112b7:	xor    eax,eax
650112b9:	push   eax
650112ba:	lea    ecx,[ebp-0x1c]
650112bd:	call   0x65006770
650112c2:	mov    edi,eax
650112c4:	push   0x65024568
650112c9:	push   0x5
650112cb:	push   0x65024560
650112d0:	mov    BYTE PTR [ebp-0x4],0x17
650112d4:	call   0x65006a10
650112d9:	add    esp,0xc
650112dc:	push   eax
650112dd:	lea    ecx,[ebp-0x2c]
650112e0:	call   0x65006770
650112e5:	push   edi
650112e6:	push   eax
650112e7:	lea    ecx,[ebp-0x18]
650112ea:	push   ecx
650112eb:	mov    BYTE PTR [ebp-0x4],0x18
650112ef:	call   0x6500f870
650112f4:	add    esp,0xc
650112f7:	mov    eax,DWORD PTR [eax]
650112f9:	mov    ecx,DWORD PTR [eax-0xc]
650112fc:	push   ecx
650112fd:	push   eax
650112fe:	mov    ecx,esi
65011300:	mov    BYTE PTR [ebp-0x4],0x19
65011304:	call   0x650029a0
65011309:	mov    eax,DWORD PTR [ebp-0x18]
6501130c:	add    eax,0xfffffff0
6501130f:	mov    BYTE PTR [ebp-0x4],0x18
65011313:	lea    edx,[eax+0xc]
65011316:	or     ecx,0xffffffff
65011319:	lock xadd DWORD PTR [edx],ecx
6501131d:	dec    ecx
6501131e:	test   ecx,ecx
65011320:	jg     0x6501132c
65011322:	mov    ecx,DWORD PTR [eax]
65011324:	mov    edx,DWORD PTR [ecx]
65011326:	push   eax
65011327:	mov    eax,DWORD PTR [edx+0x4]
6501132a:	call   eax
6501132c:	mov    eax,DWORD PTR [ebp-0x2c]
6501132f:	add    eax,0xfffffff0
65011332:	mov    BYTE PTR [ebp-0x4],0x17
65011336:	lea    ecx,[eax+0xc]
65011339:	or     edx,0xffffffff
6501133c:	lock xadd DWORD PTR [ecx],edx
65011340:	dec    edx
65011341:	test   edx,edx
65011343:	jg     0x6501134f
65011345:	mov    ecx,DWORD PTR [eax]
65011347:	mov    edx,DWORD PTR [ecx]
65011349:	push   eax
6501134a:	mov    eax,DWORD PTR [edx+0x4]
6501134d:	call   eax
6501134f:	mov    eax,DWORD PTR [ebp-0x1c]
65011352:	add    eax,0xfffffff0
65011355:	mov    BYTE PTR [ebp-0x4],0x16
65011359:	lea    ecx,[eax+0xc]
6501135c:	or     edx,0xffffffff
6501135f:	lock xadd DWORD PTR [ecx],edx
65011363:	dec    edx
65011364:	test   edx,edx
65011366:	jg     0x65011372
65011368:	mov    ecx,DWORD PTR [eax]
6501136a:	mov    edx,DWORD PTR [ecx]
6501136c:	push   eax
6501136d:	mov    eax,DWORD PTR [edx+0x4]
65011370:	call   eax
65011372:	add    ebx,0xfffffff0
65011375:	mov    BYTE PTR [ebp-0x4],0xf
65011379:	lea    ecx,[ebx+0xc]
6501137c:	or     edx,0xffffffff
6501137f:	lock xadd DWORD PTR [ecx],edx
65011383:	dec    edx
65011384:	test   edx,edx
65011386:	jg     0x65011392
65011388:	mov    ecx,DWORD PTR [ebx]
6501138a:	mov    eax,DWORD PTR [ecx]
6501138c:	mov    edx,DWORD PTR [eax+0x4]
6501138f:	push   ebx
65011390:	call   edx
65011392:	lea    eax,[ebp-0x9c]
65011398:	push   eax
65011399:	call   0x65003990
6501139e:	mov    ecx,DWORD PTR [eax]
650113a0:	mov    DWORD PTR [ebp-0x68],ecx
650113a3:	mov    edx,DWORD PTR [eax+0x4]
650113a6:	mov    DWORD PTR [ebp-0x64],edx
650113a9:	mov    ecx,DWORD PTR [eax+0x8]
650113ac:	push   0x65024534
650113b1:	mov    DWORD PTR [ebp-0x60],ecx
650113b4:	mov    edx,DWORD PTR [eax+0xc]
650113b7:	push   0x5
650113b9:	push   0x6502452c
650113be:	mov    DWORD PTR [ebp-0x5c],edx
650113c1:	call   0x65006a10
650113c6:	add    esp,0x10
650113c9:	push   eax
650113ca:	lea    ecx,[ebp-0x10]
650113cd:	call   0x65006770
650113d2:	lea    eax,[ebp-0x68]
650113d5:	push   eax
650113d6:	lea    ecx,[ebp-0x2c]
650113d9:	push   ecx
650113da:	mov    BYTE PTR [ebp-0x4],0x1a
650113de:	call   0x65002e70
650113e3:	push   eax
650113e4:	lea    edx,[ebp-0x10]
650113e7:	push   edx
650113e8:	lea    eax,[ebp-0x1c]
650113eb:	mov    bl,0x1b
650113ed:	push   eax
650113ee:	mov    BYTE PTR [ebp-0x4],bl
650113f1:	call   0x6500f870
650113f6:	add    esp,0x14
650113f9:	mov    eax,DWORD PTR [eax]
650113fb:	mov    ecx,DWORD PTR [eax-0xc]
650113fe:	push   ecx
650113ff:	push   eax
65011400:	mov    ecx,esi
65011402:	mov    BYTE PTR [ebp-0x4],0x1c
65011406:	call   0x650029a0
6501140b:	mov    eax,DWORD PTR [ebp-0x1c]
6501140e:	add    eax,0xfffffff0
65011411:	mov    BYTE PTR [ebp-0x4],bl
65011414:	lea    ecx,[eax+0xc]
65011417:	or     edx,0xffffffff
6501141a:	lock xadd DWORD PTR [ecx],edx
6501141e:	dec    edx
6501141f:	test   edx,edx
65011421:	jg     0x6501142d
65011423:	mov    ecx,DWORD PTR [eax]
65011425:	mov    edx,DWORD PTR [ecx]
65011427:	push   eax
65011428:	mov    eax,DWORD PTR [edx+0x4]
6501142b:	call   eax
6501142d:	mov    eax,DWORD PTR [ebp-0x2c]
65011430:	add    eax,0xfffffff0
65011433:	mov    BYTE PTR [ebp-0x4],0x1a
65011437:	lea    ecx,[eax+0xc]
6501143a:	or     edx,0xffffffff
6501143d:	lock xadd DWORD PTR [ecx],edx
65011441:	dec    edx
65011442:	test   edx,edx
65011444:	jg     0x65011450
65011446:	mov    ecx,DWORD PTR [eax]
65011448:	mov    edx,DWORD PTR [ecx]
6501144a:	push   eax
6501144b:	mov    eax,DWORD PTR [edx+0x4]
6501144e:	call   eax
65011450:	mov    eax,DWORD PTR [ebp-0x10]
65011453:	add    eax,0xfffffff0
65011456:	mov    BYTE PTR [ebp-0x4],0xf
6501145a:	lea    ecx,[eax+0xc]
6501145d:	or     edx,0xffffffff
65011460:	lock xadd DWORD PTR [ecx],edx
65011464:	dec    edx
65011465:	test   edx,edx
65011467:	jg     0x65011473
65011469:	mov    ecx,DWORD PTR [eax]
6501146b:	mov    edx,DWORD PTR [ecx]
6501146d:	push   eax
6501146e:	mov    eax,DWORD PTR [edx+0x4]
65011471:	call   eax
65011473:	lea    ecx,[ebp-0x1c]
65011476:	push   0x1
65011478:	push   ecx
65011479:	call   0x650062a0
6501147e:	add    esp,0x8
65011481:	mov    eax,DWORD PTR [eax]
65011483:	mov    ecx,DWORD PTR [eax-0xc]
65011486:	push   ecx
65011487:	push   eax
65011488:	mov    ecx,esi
6501148a:	mov    BYTE PTR [ebp-0x4],0x1d
6501148e:	call   0x650029a0
65011493:	mov    eax,DWORD PTR [ebp-0x1c]
65011496:	add    eax,0xfffffff0
65011499:	mov    BYTE PTR [ebp-0x4],0xf
6501149d:	lea    edx,[eax+0xc]
650114a0:	or     ecx,0xffffffff
650114a3:	lock xadd DWORD PTR [edx],ecx
650114a7:	dec    ecx
650114a8:	test   ecx,ecx
650114aa:	jg     0x650114b6
650114ac:	mov    ecx,DWORD PTR [eax]
650114ae:	mov    edx,DWORD PTR [ecx]
650114b0:	push   eax
650114b1:	mov    eax,DWORD PTR [edx+0x4]
650114b4:	call   eax
650114b6:	mov    eax,DWORD PTR [ebp-0x38]
650114b9:	xor    edi,edi
650114bb:	cmp    eax,edi
650114bd:	je     0x650114dd
650114bf:	mov    ecx,DWORD PTR [ebp-0x58]
650114c2:	push   ecx
650114c3:	mov    ecx,DWORD PTR [ebp-0x34]
650114c6:	lea    edx,[ebp-0x3c]
650114c9:	push   edx
650114ca:	push   ecx
650114cb:	push   eax
650114cc:	call   0x6500c300
650114d1:	mov    edx,DWORD PTR [ebp-0x38]
650114d4:	push   edx
650114d5:	call   0x65011f02
650114da:	add    esp,0x14
650114dd:	mov    eax,DWORD PTR [ebp-0x24]
650114e0:	add    eax,0xfffffff0
650114e3:	mov    DWORD PTR [ebp-0x38],edi
650114e6:	mov    DWORD PTR [ebp-0x34],edi
650114e9:	mov    DWORD PTR [ebp-0x30],edi
650114ec:	mov    BYTE PTR [ebp-0x4],0x6
650114f0:	lea    ecx,[eax+0xc]
650114f3:	or     edx,0xffffffff
650114f6:	lock xadd DWORD PTR [ecx],edx
650114fa:	dec    edx
650114fb:	test   edx,edx
650114fd:	jg     0x65011509
650114ff:	mov    ecx,DWORD PTR [eax]
65011501:	mov    edx,DWORD PTR [ecx]
65011503:	push   eax
65011504:	mov    eax,DWORD PTR [edx+0x4]
65011507:	call   eax
65011509:	mov    eax,DWORD PTR [ebp-0x48]
6501150c:	add    eax,0xfffffff0
6501150f:	mov    BYTE PTR [ebp-0x4],0x5
65011513:	lea    ecx,[eax+0xc]
65011516:	or     edx,0xffffffff
65011519:	lock xadd DWORD PTR [ecx],edx
6501151d:	dec    edx
6501151e:	test   edx,edx
65011520:	jg     0x6501152c
65011522:	mov    ecx,DWORD PTR [eax]
65011524:	mov    edx,DWORD PTR [ecx]
65011526:	push   eax
65011527:	mov    eax,DWORD PTR [edx+0x4]
6501152a:	call   eax
6501152c:	mov    eax,DWORD PTR [ebp-0x28]
6501152f:	add    eax,0xfffffff0
65011532:	mov    BYTE PTR [ebp-0x4],0x2
65011536:	lea    ecx,[eax+0xc]
65011539:	or     edx,0xffffffff
6501153c:	lock xadd DWORD PTR [ecx],edx
65011540:	dec    edx
65011541:	test   edx,edx
65011543:	jg     0x6501154f
65011545:	mov    ecx,DWORD PTR [eax]
65011547:	mov    edx,DWORD PTR [ecx]
65011549:	push   eax
6501154a:	mov    eax,DWORD PTR [edx+0x4]
6501154d:	call   eax
6501154f:	mov    eax,DWORD PTR [ebp-0x54]
65011552:	add    eax,0xfffffff0
65011555:	mov    BYTE PTR [ebp-0x4],0x1
65011559:	lea    ecx,[eax+0xc]
6501155c:	or     edx,0xffffffff
6501155f:	lock xadd DWORD PTR [ecx],edx
65011563:	dec    edx
65011564:	test   edx,edx
65011566:	jg     0x65011572
65011568:	mov    ecx,DWORD PTR [eax]
6501156a:	mov    edx,DWORD PTR [ecx]
6501156c:	push   eax
6501156d:	mov    eax,DWORD PTR [edx+0x4]
65011570:	call   eax
65011572:	mov    eax,DWORD PTR [ebp-0x4c]
65011575:	add    eax,0xfffffff0
65011578:	mov    BYTE PTR [ebp-0x4],0x0
6501157c:	lea    ecx,[eax+0xc]
6501157f:	or     edx,0xffffffff
65011582:	lock xadd DWORD PTR [ecx],edx
65011586:	dec    edx
65011587:	test   edx,edx
65011589:	jg     0x65011595
6501158b:	mov    ecx,DWORD PTR [eax]
6501158d:	mov    edx,DWORD PTR [ecx]
6501158f:	push   eax
65011590:	mov    eax,DWORD PTR [edx+0x4]
65011593:	call   eax
65011595:	mov    eax,esi
65011597:	lea    esp,[ebp-0xac]
6501159d:	mov    ecx,DWORD PTR [ebp-0xc]
650115a0:	mov    DWORD PTR fs:0x0,ecx
650115a7:	pop    ecx
650115a8:	pop    edi
650115a9:	pop    esi
650115aa:	pop    ebx
650115ab:	mov    ecx,DWORD PTR [ebp+0x124]
650115b1:	xor    ecx,ebp
650115b3:	call   0x6501275c
650115b8:	add    ebp,0x128
650115be:	mov    esp,ebp
650115c0:	pop    ebp
650115c1:	ret    
650115c2:	int3   
650115c3:	int3   
650115c4:	int3   
650115c5:	int3   
650115c6:	int3   
650115c7:	int3   
650115c8:	int3   
650115c9:	int3   
650115ca:	int3   
650115cb:	int3   
650115cc:	int3   
650115cd:	int3   
650115ce:	int3   
650115cf:	int3   
650115d0:	push   ebp
650115d1:	mov    ebp,esp
650115d3:	push   0xffffffff
650115d5:	push   0x65022008
650115da:	mov    eax,fs:0x0
650115e0:	push   eax
650115e1:	sub    esp,0x50
650115e4:	mov    eax,ds:0x6502c09c
650115e9:	xor    eax,ebp
650115eb:	mov    DWORD PTR [ebp-0x10],eax
650115ee:	push   ebx
650115ef:	push   esi
650115f0:	push   edi
650115f1:	push   eax
650115f2:	lea    eax,[ebp-0xc]
650115f5:	mov    fs:0x0,eax
650115fb:	call   DWORD PTR ds:0x6502c06c
65011601:	push   0xea60
65011606:	mov    DWORD PTR [ebp-0x3c],eax
65011609:	call   0x6500f5f0
6501160e:	add    esp,0x4
65011611:	mov    DWORD PTR [ebp-0x34],0x0
65011618:	lea    eax,[ebp-0x30]
6501161b:	push   eax
6501161c:	call   0x65010a30
65011621:	add    esp,0x4
65011624:	xor    esi,esi
65011626:	mov    DWORD PTR [ebp-0x4],esi
65011629:	mov    DWORD PTR [ebp-0x14],0xf
65011630:	mov    DWORD PTR [ebp-0x18],esi
65011633:	mov    BYTE PTR [ebp-0x28],0x0
65011637:	mov    eax,DWORD PTR [ebp-0x30]
6501163a:	cmp    eax,esi
6501163c:	mov    BYTE PTR [ebp-0x4],0x1
65011640:	mov    ebx,eax
65011642:	jne    0x65011648
65011644:	xor    ecx,ecx
65011646:	jmp    0x6501168f
65011648:	push   eax
65011649:	call   DWORD PTR ds:0x65024050
6501164f:	add    eax,0x1
65011652:	cmp    eax,0x3fffffff
65011657:	jg     0x65011689
65011659:	lea    edi,[eax+eax*1]
6501165c:	mov    eax,edi
6501165e:	call   0x65012e60
65011663:	mov    esi,esp
65011665:	test   esi,esi
65011667:	je     0x65011689
65011669:	mov    ecx,DWORD PTR [ebp-0x3c]
6501166c:	push   0x0
6501166e:	push   0x0
65011670:	push   edi
65011671:	push   esi
65011672:	push   0xffffffff
65011674:	push   ebx
65011675:	push   0x0
65011677:	push   ecx
65011678:	mov    BYTE PTR [esi],0x0
6501167b:	call   DWORD PTR ds:0x65024028
65011681:	neg    eax
65011683:	sbb    eax,eax
65011685:	and    eax,esi
65011687:	jmp    0x6501168b
65011689:	xor    eax,eax
6501168b:	mov    ecx,eax
6501168d:	xor    esi,esi
6501168f:	mov    eax,ecx
65011691:	mov    DWORD PTR [ebp-0x48],esi
65011694:	mov    DWORD PTR [ebp-0x44],0xf
6501169b:	mov    BYTE PTR [ebp-0x58],0x0
6501169f:	lea    esi,[eax+0x1]
650116a2:	mov    dl,BYTE PTR [eax]
650116a4:	add    eax,0x1
650116a7:	test   dl,dl
650116a9:	jne    0x650116a2
650116ab:	sub    eax,esi
650116ad:	push   eax
650116ae:	push   ecx
650116af:	lea    ecx,[ebp-0x5c]
650116b2:	call   0x65001860
650116b7:	lea    edx,[ebp-0x2c]
650116ba:	push   edx
650116bb:	lea    eax,[ebp-0x5c]
650116be:	push   eax
650116bf:	mov    BYTE PTR [ebp-0x4],0x2
650116c3:	call   0x65010780
650116c8:	mov    edi,0x10
650116cd:	add    esp,0x8
650116d0:	cmp    DWORD PTR [ebp-0x44],edi
650116d3:	mov    bl,al
650116d5:	mov    BYTE PTR [ebp-0x4],0x1
650116d9:	jb     0x650116e7
650116db:	mov    ecx,DWORD PTR [ebp-0x58]
650116de:	push   ecx
650116df:	call   0x65011f02
650116e4:	add    esp,0x4
650116e7:	test   bl,bl
650116e9:	jne    0x6501177c
650116ef:	xor    ebx,ebx
650116f1:	xor    esi,esi
650116f3:	lea    edx,[ebp-0x38]
650116f6:	push   ebx
650116f7:	push   edx
650116f8:	mov    DWORD PTR [ebp-0x38],ebx
650116fb:	call   0x6500e4d0
65011700:	call   eax
65011702:	test   eax,eax
65011704:	je     0x65011714
65011706:	add    esi,0x3e8
6501170c:	cmp    esi,0x493e0
65011712:	ja     0x65011721
65011714:	push   0x3e8
65011719:	call   DWORD PTR ds:0x6502404c
6501171f:	jmp    0x650116f3
65011721:	cmp    DWORD PTR [ebp-0x14],edi
65011724:	jb     0x65011732
65011726:	mov    eax,DWORD PTR [ebp-0x28]
65011729:	push   eax
6501172a:	call   0x65011f02
6501172f:	add    esp,0x4
65011732:	mov    eax,DWORD PTR [ebp-0x30]
65011735:	add    eax,0xfffffff0
65011738:	mov    DWORD PTR [ebp-0x14],0xf
6501173f:	mov    DWORD PTR [ebp-0x18],ebx
65011742:	mov    BYTE PTR [ebp-0x28],0x0
65011746:	mov    DWORD PTR [ebp-0x4],0xffffffff
6501174d:	lea    ecx,[eax+0xc]
65011750:	or     edx,0xffffffff
65011753:	lock xadd DWORD PTR [ecx],edx
65011757:	dec    edx
65011758:	test   edx,edx
6501175a:	jg     0x65011766
6501175c:	mov    ecx,DWORD PTR [eax]
6501175e:	mov    edx,DWORD PTR [ecx]
65011760:	push   eax
65011761:	mov    eax,DWORD PTR [edx+0x4]
65011764:	call   eax
65011766:	mov    eax,DWORD PTR [ebp-0x34]
65011769:	add    eax,0x1
6501176c:	cmp    eax,0x3
6501176f:	mov    DWORD PTR [ebp-0x34],eax
65011772:	jne    0x65011618
65011778:	xor    ebx,ebx
6501177a:	jmp    0x650117d4
6501177c:	xor    ebx,ebx
6501177e:	cmp    DWORD PTR [ebp-0x18],ebx
65011781:	je     0x6501178f
65011783:	lea    ecx,[ebp-0x2c]
65011786:	push   ecx
65011787:	call   0x65010110
6501178c:	add    esp,0x4
6501178f:	cmp    DWORD PTR [ebp-0x14],edi
65011792:	jb     0x650117a0
65011794:	mov    edx,DWORD PTR [ebp-0x28]
65011797:	push   edx
65011798:	call   0x65011f02
6501179d:	add    esp,0x4
650117a0:	mov    eax,DWORD PTR [ebp-0x30]
650117a3:	add    eax,0xfffffff0
650117a6:	mov    DWORD PTR [ebp-0x14],0xf
650117ad:	mov    DWORD PTR [ebp-0x18],ebx
650117b0:	mov    BYTE PTR [ebp-0x28],0x0
650117b4:	mov    DWORD PTR [ebp-0x4],0xffffffff
650117bb:	lea    ecx,[eax+0xc]
650117be:	or     edx,0xffffffff
650117c1:	lock xadd DWORD PTR [ecx],edx
650117c5:	dec    edx
650117c6:	test   edx,edx
650117c8:	jg     0x650117d4
650117ca:	mov    ecx,DWORD PTR [eax]
650117cc:	mov    edx,DWORD PTR [ecx]
650117ce:	push   eax
650117cf:	mov    eax,DWORD PTR [edx+0x4]
650117d2:	call   eax
650117d4:	xor    esi,esi
650117d6:	lea    ecx,[ebp-0x40]
650117d9:	push   ebx
650117da:	push   ecx
650117db:	mov    DWORD PTR [ebp-0x40],ebx
650117de:	call   0x6500e4d0
650117e3:	call   eax
650117e5:	test   eax,eax
650117e7:	je     0x650117fb
650117e9:	add    esi,0x3e8
650117ef:	cmp    esi,0x12e1fc0
650117f5:	ja     0x65011611
650117fb:	push   0x3e8
65011800:	call   DWORD PTR ds:0x6502404c
65011806:	jmp    0x650117d6
65011808:	int3   
65011809:	int3   
6501180a:	int3   
6501180b:	int3   
6501180c:	int3   
6501180d:	int3   
6501180e:	int3   
6501180f:	int3   
65011810:	sub    esp,0x20c
65011816:	mov    eax,ds:0x6502c09c
6501181b:	xor    eax,esp
6501181d:	mov    DWORD PTR [esp+0x208],eax
65011824:	push   0x208
65011829:	lea    eax,[esp+0x4]
6501182d:	push   eax
6501182e:	push   0x0
65011830:	call   DWORD PTR ds:0x65024070
65011836:	test   eax,eax
65011838:	je     0x65011887
6501183a:	lea    ecx,[esp]
6501183d:	push   0x104
65011842:	push   ecx
65011843:	call   0x65012dc7
65011848:	lea    edx,[esp+0x8]
6501184c:	push   0x650248ec
65011851:	push   edx
65011852:	call   0x650128a1
65011857:	add    esp,0x10
6501185a:	test   eax,eax
6501185c:	je     0x65011887
6501185e:	call   0x65010870
65011863:	test   al,al
65011865:	je     0x65011887
65011867:	push   0x0
65011869:	push   0x0
6501186b:	push   0x0
6501186d:	push   0x650115d0
65011872:	push   0x0
65011874:	push   0x0
65011876:	call   DWORD PTR ds:0x6502406c
6501187c:	test   eax,eax
6501187e:	je     0x65011887
65011880:	push   eax
65011881:	call   DWORD PTR ds:0x65024040
65011887:	mov    ecx,DWORD PTR [esp+0x208]
6501188e:	xor    ecx,esp
65011890:	xor    eax,eax
65011892:	call   0x6501275c
65011897:	add    esp,0x20c
6501189d:	ret    0x4
650118a0:	push   0x0
650118a2:	push   0x0
650118a4:	push   0x0
650118a6:	push   0x65011810
650118ab:	push   0x0
650118ad:	push   0x0
650118af:	call   DWORD PTR ds:0x6502406c
650118b5:	ret    
650118b6:	push   ebp
650118b7:	mov    ebp,esp
650118b9:	sub    esp,0xc
650118bc:	mov    eax,ds:0x6502c09c
650118c1:	xor    eax,ebp
650118c3:	mov    DWORD PTR [ebp-0x4],eax
650118c6:	push   esi
650118c7:	xor    esi,esi
650118c9:	call   DWORD PTR ds:0x650240e4
650118cf:	push   0x7
650118d1:	lea    ecx,[ebp-0xc]
650118d4:	push   ecx
650118d5:	push   0x1004
650118da:	push   eax
650118db:	call   DWORD PTR ds:0x650240e0
650118e1:	test   eax,eax
650118e3:	je     0x65011904
650118e5:	mov    cl,BYTE PTR [ebp-0xc]
650118e8:	test   cl,cl
650118ea:	lea    eax,[ebp-0xc]
650118ed:	je     0x65011904
650118ef:	imul   esi,esi,0xa
650118f2:	movsx  ecx,cl
650118f5:	inc    eax
650118f6:	lea    esi,[esi+ecx*1-0x30]
650118fa:	mov    cl,BYTE PTR [eax]
650118fc:	test   cl,cl
650118fe:	jne    0x650118ef
65011900:	test   esi,esi
65011902:	jne    0x6501190c
65011904:	call   DWORD PTR ds:0x650240dc
6501190a:	mov    esi,eax
6501190c:	mov    ecx,DWORD PTR [ebp-0x4]
6501190f:	mov    eax,esi
65011911:	xor    ecx,ebp
65011913:	pop    esi
65011914:	call   0x6501275c
65011919:	leave  
6501191a:	ret    
6501191b:	push   0x3
6501191d:	pop    eax
6501191e:	ret    
6501191f:	push   ebp
65011920:	mov    ebp,esp
65011922:	sub    esp,0x98
65011928:	mov    eax,ds:0x6502c09c
6501192d:	xor    eax,ebp
6501192f:	mov    DWORD PTR [ebp-0x4],eax
65011932:	lea    eax,[ebp-0x98]
65011938:	push   eax
65011939:	mov    DWORD PTR [ebp-0x98],0x94
65011943:	call   DWORD PTR ds:0x650240e8
65011949:	cmp    DWORD PTR [ebp-0x88],0x2
65011950:	jne    0x65011960
65011952:	cmp    DWORD PTR [ebp-0x94],0x5
65011959:	mov    eax,0x6501191b
6501195e:	jae    0x65011965
65011960:	mov    eax,0x650118b6
65011965:	push   eax
65011966:	push   0x6502c06c
6501196b:	call   DWORD PTR ds:0x650240d8
65011971:	call   DWORD PTR ds:0x6502c06c
65011977:	mov    ecx,DWORD PTR [ebp-0x4]
6501197a:	xor    ecx,ebp
6501197c:	call   0x6501275c
65011981:	leave  
65011982:	ret    
65011983:	push   esi
65011984:	mov    esi,ecx
65011986:	mov    eax,DWORD PTR [esi]
65011988:	test   eax,eax
6501198a:	je     0x65011996
6501198c:	push   eax
6501198d:	call   0x65013577
65011992:	and    DWORD PTR [esi],0x0
65011995:	pop    ecx
65011996:	and    DWORD PTR [esi+0x4],0x0
6501199a:	and    DWORD PTR [esi+0x8],0x0
6501199e:	pop    esi
6501199f:	ret    
650119a0:	push   esi
650119a1:	push   0x18
650119a3:	mov    esi,ecx
650119a5:	push   0x0
650119a7:	push   esi
650119a8:	call   0x65012de0
650119ad:	add    esp,0xc
650119b0:	mov    eax,esi
650119b2:	pop    esi
650119b3:	ret    
650119b4:	push   0xc
650119b6:	push   0x65029790
650119bb:	call   0x65013ca0
650119c0:	and    DWORD PTR [ebp-0x4],0x0
650119c4:	push   ecx
650119c5:	call   DWORD PTR ds:0x6502401c
650119cb:	and    DWORD PTR [ebp-0x1c],0x0
650119cf:	jmp    0x650119ef
650119d1:	mov    eax,DWORD PTR [ebp-0x14]
650119d4:	mov    eax,DWORD PTR [eax]
650119d6:	mov    eax,DWORD PTR [eax]
650119d8:	xor    ecx,ecx
650119da:	cmp    eax,0xc0000017
650119df:	sete   cl
650119e2:	mov    eax,ecx
650119e4:	ret    
650119e5:	mov    esp,DWORD PTR [ebp-0x18]
650119e8:	mov    DWORD PTR [ebp-0x1c],0x8007000e
650119ef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650119f6:	mov    eax,DWORD PTR [ebp-0x1c]
650119f9:	call   0x65013ce5
650119fe:	ret    
650119ff:	mov    eax,DWORD PTR [esp+0x4]
65011a03:	test   eax,eax
65011a05:	jne    0x65011a0e
65011a07:	mov    eax,0x80070057
65011a0c:	jmp    0x65011a1f
65011a0e:	cmp    DWORD PTR [eax],0x2c
65011a11:	jne    0x65011a07
65011a13:	and    DWORD PTR [eax+0x1c],0x0
65011a17:	lea    ecx,[eax+0x4]
65011a1a:	call   0x650119b4
65011a1f:	ret    0x4
65011a22:	mov    eax,DWORD PTR [esp+0x4]
65011a26:	test   eax,eax
65011a28:	jl     0x65011a37
65011a2a:	cmp    eax,DWORD PTR [ecx+0x4]
65011a2d:	jge    0x65011a37
65011a2f:	mov    ecx,DWORD PTR [ecx]
65011a31:	lea    eax,[ecx+eax*2]
65011a34:	ret    0x4
65011a37:	push   0x0
65011a39:	push   0x0
65011a3b:	push   0x1
65011a3d:	push   0xc000008c
65011a42:	call   DWORD PTR ds:0x650240ec
65011a48:	int3   
65011a49:	mov    eax,DWORD PTR [esp+0x4]
65011a4d:	test   eax,eax
65011a4f:	jl     0x65011a5e
65011a51:	cmp    eax,DWORD PTR [ecx+0x4]
65011a54:	jge    0x65011a5e
65011a56:	mov    ecx,DWORD PTR [ecx]
65011a58:	lea    eax,[ecx+eax*4]
65011a5b:	ret    0x4
65011a5e:	push   0x0
65011a60:	push   0x0
65011a62:	push   0x1
65011a64:	push   0xc000008c
65011a69:	call   DWORD PTR ds:0x650240ec
65011a6f:	int3   
65011a70:	push   esi
65011a71:	mov    esi,ecx
65011a73:	lea    ecx,[esi+0x4]
65011a76:	call   0x650119a0
65011a7b:	xor    eax,eax
65011a7d:	mov    DWORD PTR [esi+0x20],eax
65011a80:	mov    DWORD PTR [esi+0x24],eax
65011a83:	mov    DWORD PTR [esi+0x28],eax
65011a86:	mov    eax,esi
65011a88:	pop    esi
65011a89:	ret    
65011a8a:	push   esi
65011a8b:	mov    esi,DWORD PTR [esp+0x8]
65011a8f:	test   esi,esi
65011a91:	jne    0x65011a9a
65011a93:	mov    eax,0x80070057
65011a98:	jmp    0x65011ae6
65011a9a:	mov    eax,DWORD PTR [esi]
65011a9c:	test   eax,eax
65011a9e:	je     0x65011ae4
65011aa0:	cmp    eax,0x2c
65011aa3:	jne    0x65011a93
65011aa5:	push   edi
65011aa6:	xor    edi,edi
65011aa8:	cmp    DWORD PTR [esi+0x24],edi
65011aab:	jle    0x65011ace
65011aad:	push   ebx
65011aae:	lea    ebx,[esi+0x20]
65011ab1:	push   edi
65011ab2:	mov    ecx,ebx
65011ab4:	call   0x65011a22
65011ab9:	movzx  eax,WORD PTR [eax]
65011abc:	push   DWORD PTR [esp+0x14]
65011ac0:	push   eax
65011ac1:	call   DWORD PTR ds:0x650241b8
65011ac7:	inc    edi
65011ac8:	cmp    edi,DWORD PTR [esi+0x24]
65011acb:	jl     0x65011ab1
65011acd:	pop    ebx
65011ace:	lea    ecx,[esi+0x20]
65011ad1:	call   0x65011983
65011ad6:	lea    eax,[esi+0x4]
65011ad9:	push   eax
65011ada:	call   DWORD PTR ds:0x650240a4
65011ae0:	and    DWORD PTR [esi],0x0
65011ae3:	pop    edi
65011ae4:	xor    eax,eax
65011ae6:	pop    esi
65011ae7:	ret    0x8
65011aea:	push   esi
65011aeb:	mov    esi,ecx
65011aed:	cmp    BYTE PTR [esi+0x4],0x0
65011af1:	je     0x65011aff
65011af3:	push   DWORD PTR [esi]
65011af5:	call   DWORD PTR ds:0x650240a0
65011afb:	mov    BYTE PTR [esi+0x4],0x0
65011aff:	pop    esi
65011b00:	ret    
65011b01:	push   esi
65011b02:	mov    esi,ecx
65011b04:	lea    ecx,[esi+0x18]
65011b07:	call   0x650119a0
65011b0c:	xor    eax,eax
65011b0e:	mov    DWORD PTR [esi+0x30],eax
65011b11:	mov    DWORD PTR [esi+0x34],eax
65011b14:	mov    DWORD PTR [esi+0x38],eax
65011b17:	mov    eax,esi
65011b19:	pop    esi
65011b1a:	ret    
65011b1b:	push   esi
65011b1c:	mov    esi,ecx
65011b1e:	lea    eax,[esi+0x18]
65011b21:	push   eax
65011b22:	call   DWORD PTR ds:0x650240a4
65011b28:	lea    ecx,[esi+0x30]
65011b2b:	pop    esi
65011b2c:	jmp    0x65011983
65011b31:	push   ebp
65011b32:	mov    ebp,esp
65011b34:	push   ecx
65011b35:	push   ecx
65011b36:	push   esi
65011b37:	mov    esi,ecx
65011b39:	lea    eax,[esi+0x18]
65011b3c:	push   eax
65011b3d:	mov    DWORD PTR [ebp-0x8],eax
65011b40:	call   DWORD PTR ds:0x6502409c
65011b46:	mov    eax,DWORD PTR [esi+0x34]
65011b49:	mov    ecx,DWORD PTR [ebp+0x8]
65011b4c:	cmp    ecx,eax
65011b4e:	mov    BYTE PTR [ebp-0x4],0x1
65011b52:	jg     0x65011b78
65011b54:	test   ecx,ecx
65011b56:	jl     0x65011b78
65011b58:	cmp    ecx,eax
65011b5a:	jne    0x65011b6b
65011b5c:	mov    esi,DWORD PTR [esi+0x8]
65011b5f:	lea    ecx,[ebp-0x8]
65011b62:	call   0x65011aea
65011b67:	mov    eax,esi
65011b69:	jmp    0x65011b82
65011b6b:	push   ecx
65011b6c:	lea    ecx,[esi+0x30]
65011b6f:	call   0x65011a49
65011b74:	mov    esi,DWORD PTR [eax]
65011b76:	jmp    0x65011b5f
65011b78:	lea    ecx,[ebp-0x8]
65011b7b:	call   0x65011aea
65011b80:	xor    eax,eax
65011b82:	pop    esi
65011b83:	leave  
65011b84:	ret    0x4
65011b87:	push   esi
65011b88:	mov    esi,ecx
65011b8a:	call   0x65011a70
65011b8f:	push   esi
65011b90:	mov    DWORD PTR [esi],0x2c
65011b96:	call   0x650119ff
65011b9b:	test   eax,eax
65011b9d:	jge    0x65011ba9
65011b9f:	mov    BYTE PTR ds:0x65030344,0x1
65011ba6:	and    DWORD PTR [esi],0x0
65011ba9:	mov    eax,esi
65011bab:	pop    esi
65011bac:	ret    
65011bad:	push   ebp
65011bae:	lea    ebp,[esp-0x78]
65011bb2:	sub    esp,0x98
65011bb8:	mov    eax,ds:0x6502c09c
65011bbd:	xor    eax,ebp
65011bbf:	mov    DWORD PTR [ebp+0x74],eax
65011bc2:	push   esi
65011bc3:	mov    esi,ecx
65011bc5:	call   0x65011b01
65011bca:	mov    eax,0x65000000
65011bcf:	push   0x94
65011bd4:	mov    DWORD PTR [esi+0x8],eax
65011bd7:	mov    DWORD PTR [esi+0x4],eax
65011bda:	lea    eax,[ebp-0x20]
65011bdd:	push   0x0
65011bdf:	push   eax
65011be0:	mov    DWORD PTR [esi],0x3c
65011be6:	mov    BYTE PTR [esi+0xc],0x0
65011bea:	call   0x65012de0
65011bef:	add    esp,0xc
65011bf2:	lea    eax,[ebp-0x20]
65011bf5:	push   eax
65011bf6:	mov    DWORD PTR [ebp-0x20],0x94
65011bfd:	call   DWORD PTR ds:0x650240e8
65011c03:	cmp    DWORD PTR [ebp-0x10],0x2
65011c07:	jne    0x65011c11
65011c09:	cmp    DWORD PTR [ebp-0x1c],0x5
65011c0d:	jb     0x65011c29
65011c0f:	jmp    0x65011c25
65011c11:	cmp    DWORD PTR [ebp-0x10],0x1
65011c15:	jne    0x65011c29
65011c17:	cmp    DWORD PTR [ebp-0x1c],0x4
65011c1b:	ja     0x65011c25
65011c1d:	jne    0x65011c29
65011c1f:	cmp    DWORD PTR [ebp-0x18],0x0
65011c23:	jbe    0x65011c29
65011c25:	mov    BYTE PTR [esi+0xc],0x1
65011c29:	lea    ecx,[esi+0x18]
65011c2c:	mov    DWORD PTR [esi+0x10],0x800
65011c33:	mov    DWORD PTR [esi+0x14],0x65024b04
65011c3a:	call   0x650119b4
65011c3f:	test   eax,eax
65011c41:	jge    0x65011c4a
65011c43:	mov    BYTE PTR ds:0x65030344,0x1
65011c4a:	mov    ecx,DWORD PTR [ebp+0x74]
65011c4d:	mov    eax,esi
65011c4f:	xor    ecx,ebp
65011c51:	pop    esi
65011c52:	call   0x6501275c
65011c57:	add    ebp,0x78
65011c5a:	leave  
65011c5b:	ret    
65011c5c:	push   esi
65011c5d:	push   DWORD PTR ds:0x6502d4f0
65011c63:	mov    esi,ecx
65011c65:	push   esi
65011c66:	call   0x65011a8a
65011c6b:	lea    ecx,[esi+0x20]
65011c6e:	pop    esi
65011c6f:	jmp    0x65011983
65011c74:	cmp    BYTE PTR [ecx+0x8],0x0
65011c78:	mov    DWORD PTR [ecx],0x65024b14
65011c7e:	je     0x65011c8e
65011c80:	mov    ecx,DWORD PTR [ecx+0x4]
65011c83:	test   ecx,ecx
65011c85:	je     0x65011c8e
65011c87:	push   ecx
65011c88:	call   DWORD PTR ds:0x650240f0
65011c8e:	ret    
65011c8f:	push   DWORD PTR [esp+0x4]
65011c93:	push   0x0
65011c95:	push   DWORD PTR [ecx+0x4]
65011c98:	call   DWORD PTR ds:0x650240f4
65011c9e:	ret    0x4
65011ca1:	cmp    DWORD PTR [esp+0x4],0x0
65011ca6:	je     0x65011cb7
65011ca8:	push   DWORD PTR [esp+0x4]
65011cac:	push   0x0
65011cae:	push   DWORD PTR [ecx+0x4]
65011cb1:	call   DWORD PTR ds:0x650240f8
65011cb7:	ret    0x4
65011cba:	push   ebp
65011cbb:	mov    ebp,esp
65011cbd:	xor    eax,eax
65011cbf:	cmp    DWORD PTR [ebp+0x8],eax
65011cc2:	jne    0x65011ccd
65011cc4:	push   DWORD PTR [ebp+0xc]
65011cc7:	mov    eax,DWORD PTR [ecx]
65011cc9:	call   DWORD PTR [eax]
65011ccb:	jmp    0x65011cee
65011ccd:	cmp    DWORD PTR [ebp+0xc],eax
65011cd0:	jne    0x65011cde
65011cd2:	push   DWORD PTR [ebp+0x8]
65011cd5:	mov    eax,DWORD PTR [ecx]
65011cd7:	call   DWORD PTR [eax+0x4]
65011cda:	xor    eax,eax
65011cdc:	jmp    0x65011cee
65011cde:	push   DWORD PTR [ebp+0xc]
65011ce1:	push   DWORD PTR [ebp+0x8]
65011ce4:	push   eax
65011ce5:	push   DWORD PTR [ecx+0x4]
65011ce8:	call   DWORD PTR ds:0x650240fc
65011cee:	pop    ebp
65011cef:	ret    0x8
65011cf2:	push   DWORD PTR [esp+0x4]
65011cf6:	push   0x0
65011cf8:	push   DWORD PTR [ecx+0x4]
65011cfb:	call   DWORD PTR ds:0x65024100
65011d01:	ret    0x4
65011d04:	push   esi
65011d05:	mov    esi,ecx
65011d07:	call   0x65011c74
65011d0c:	test   BYTE PTR [esp+0x8],0x1
65011d11:	je     0x65011d1a
65011d13:	push   esi
65011d14:	call   0x65011f02
65011d19:	pop    ecx
65011d1a:	mov    eax,esi
65011d1c:	pop    esi
65011d1d:	ret    0x4
65011d20:	mov    eax,ecx
65011d22:	mov    ecx,DWORD PTR [esp+0x4]
65011d26:	mov    DWORD PTR [eax+0x4],ecx
65011d29:	mov    DWORD PTR [eax],0x65024b28
65011d2f:	xor    ecx,ecx
65011d31:	mov    DWORD PTR [eax+0x14],0x2
65011d38:	mov    DWORD PTR [eax+0xc],ecx
65011d3b:	mov    DWORD PTR [eax+0x10],ecx
65011d3e:	mov    WORD PTR [eax+0x18],cx
65011d42:	mov    WORD PTR [eax+0x1a],cx
65011d46:	mov    DWORD PTR [eax+0x8],eax
65011d49:	ret    0x4
65011d4c:	mov    eax,DWORD PTR [esp+0x8]
65011d50:	mul    DWORD PTR [esp+0xc]
65011d54:	test   edx,edx
65011d56:	ja     0x65011d5d
65011d58:	cmp    eax,0xffffffff
65011d5b:	jbe    0x65011d63
65011d5d:	mov    eax,0x80070057
65011d62:	ret    
65011d63:	mov    ecx,DWORD PTR [esp+0x4]
65011d67:	mov    DWORD PTR [ecx],eax
65011d69:	xor    eax,eax
65011d6b:	ret    
65011d6c:	mov    ecx,DWORD PTR [ecx+0x4]
65011d6f:	mov    eax,DWORD PTR [ecx]
65011d71:	jmp    DWORD PTR [eax+0x4]
65011d74:	xor    edx,edx
65011d76:	lea    eax,[ecx+0x14]
65011d79:	inc    edx
65011d7a:	lock xadd DWORD PTR [eax],edx
65011d7e:	lea    eax,[ecx+0x8]
65011d81:	ret    
65011d82:	mov    eax,ecx
65011d84:	ret    
65011d85:	test   BYTE PTR [esp+0x4],0x1
65011d8a:	push   esi
65011d8b:	mov    esi,ecx
65011d8d:	mov    DWORD PTR [esi],0x65024b28
65011d93:	je     0x65011d9c
65011d95:	push   esi
65011d96:	call   0x65011f02
65011d9b:	pop    ecx
65011d9c:	mov    eax,esi
65011d9e:	pop    esi
65011d9f:	ret    0x4
65011da2:	mov    eax,DWORD PTR [esp+0x8]
65011da6:	mov    ecx,DWORD PTR [esp+0xc]
65011daa:	or     edx,0xffffffff
65011dad:	sub    edx,eax
65011daf:	cmp    edx,ecx
65011db1:	jae    0x65011db9
65011db3:	mov    eax,0x80070057
65011db8:	ret    
65011db9:	add    eax,ecx
65011dbb:	mov    ecx,DWORD PTR [esp+0x4]
65011dbf:	mov    DWORD PTR [ecx],eax
65011dc1:	xor    eax,eax
65011dc3:	ret    
65011dc4:	push   ebp
65011dc5:	mov    ebp,esp
65011dc7:	push   esi
65011dc8:	mov    esi,DWORD PTR [ebp+0x8]
65011dcb:	push   edi
65011dcc:	push   DWORD PTR [ebp+0xc]
65011dcf:	add    esi,0x8
65011dd2:	and    esi,0xfffffff8
65011dd5:	lea    eax,[ebp+0x8]
65011dd8:	push   esi
65011dd9:	push   eax
65011dda:	mov    edi,ecx
65011ddc:	call   0x65011d4c
65011de1:	add    esp,0xc
65011de4:	test   eax,eax
65011de6:	jl     0x65011e1e
65011de8:	push   DWORD PTR [ebp+0x8]
65011deb:	lea    eax,[ebp+0x8]
65011dee:	push   0x10
65011df0:	push   eax
65011df1:	call   0x65011da2
65011df6:	add    esp,0xc
65011df9:	test   eax,eax
65011dfb:	jl     0x65011e1e
65011dfd:	mov    ecx,DWORD PTR [edi+0x4]
65011e00:	push   DWORD PTR [ebp+0x8]
65011e03:	mov    eax,DWORD PTR [ecx]
65011e05:	call   DWORD PTR [eax]
65011e07:	test   eax,eax
65011e09:	je     0x65011e1e
65011e0b:	dec    esi
65011e0c:	and    DWORD PTR [eax+0x4],0x0
65011e10:	mov    DWORD PTR [eax],edi
65011e12:	mov    DWORD PTR [eax+0xc],0x1
65011e19:	mov    DWORD PTR [eax+0x8],esi
65011e1c:	jmp    0x65011e20
65011e1e:	xor    eax,eax
65011e20:	pop    edi
65011e21:	pop    esi
65011e22:	pop    ebp
65011e23:	ret    0x8
65011e26:	push   ebp
65011e27:	mov    ebp,esp
65011e29:	push   esi
65011e2a:	mov    esi,DWORD PTR [ebp+0xc]
65011e2d:	push   edi
65011e2e:	push   DWORD PTR [ebp+0x10]
65011e31:	add    esi,0x8
65011e34:	and    esi,0xfffffff8
65011e37:	lea    eax,[ebp+0xc]
65011e3a:	push   esi
65011e3b:	push   eax
65011e3c:	mov    edi,ecx
65011e3e:	call   0x65011d4c
65011e43:	add    esp,0xc
65011e46:	test   eax,eax
65011e48:	jl     0x65011e77
65011e4a:	push   DWORD PTR [ebp+0xc]
65011e4d:	lea    eax,[ebp+0xc]
65011e50:	push   0x10
65011e52:	push   eax
65011e53:	call   0x65011da2
65011e58:	add    esp,0xc
65011e5b:	test   eax,eax
65011e5d:	jl     0x65011e77
65011e5f:	push   DWORD PTR [ebp+0xc]
65011e62:	mov    ecx,DWORD PTR [edi+0x4]
65011e65:	push   DWORD PTR [ebp+0x8]
65011e68:	mov    eax,DWORD PTR [ecx]
65011e6a:	call   DWORD PTR [eax+0x8]
65011e6d:	test   eax,eax
65011e6f:	je     0x65011e77
65011e71:	dec    esi
65011e72:	mov    DWORD PTR [eax+0x8],esi
65011e75:	jmp    0x65011e79
65011e77:	xor    eax,eax
65011e79:	pop    edi
65011e7a:	pop    esi
65011e7b:	pop    ebp
65011e7c:	ret    0xc
65011e7f:	push   0x44
65011e81:	mov    eax,0x65022035
65011e86:	call   0x65013f2b
65011e8b:	push   0x65024b70
65011e90:	lea    ecx,[ebp-0x28]
65011e93:	call   0x650026d0
65011e98:	and    DWORD PTR [ebp-0x4],0x0
65011e9c:	lea    eax,[ebp-0x28]
65011e9f:	push   eax
65011ea0:	lea    ecx,[ebp-0x50]
65011ea3:	call   0x65002cc0
65011ea8:	push   0x65029ec8
65011ead:	lea    eax,[ebp-0x50]
65011eb0:	push   eax
65011eb1:	mov    DWORD PTR [ebp-0x50],0x65024b5c
65011eb8:	call   0x65012306
65011ebd:	int3   
65011ebe:	push   0x44
65011ec0:	mov    eax,0x65022058
65011ec5:	call   0x65013f2b
65011eca:	push   0x65024b80
65011ecf:	lea    ecx,[ebp-0x28]
65011ed2:	call   0x650026d0
65011ed7:	and    DWORD PTR [ebp-0x4],0x0
65011edb:	lea    eax,[ebp-0x28]
65011ede:	push   eax
65011edf:	lea    ecx,[ebp-0x50]
65011ee2:	call   0x65002cc0
65011ee7:	push   0x65029e8c
65011eec:	lea    eax,[ebp-0x50]
65011eef:	push   eax
65011ef0:	mov    DWORD PTR [ebp-0x50],0x65024b68
65011ef7:	call   0x65012306
65011efc:	int3   
65011efd:	jmp    0x6501229c
65011f02:	jmp    0x65013577
65011f07:	mov    eax,ecx
65011f09:	and    DWORD PTR [eax+0x4],0x0
65011f0d:	and    DWORD PTR [eax+0x8],0x0
65011f11:	mov    DWORD PTR [eax],0x65024b9c
65011f17:	ret    
65011f18:	push   ebx
65011f19:	mov    ebx,DWORD PTR [esp+0x8]
65011f1d:	push   esi
65011f1e:	push   edi
65011f1f:	mov    edi,ecx
65011f21:	mov    DWORD PTR [edi],0x65024b9c
65011f27:	mov    eax,DWORD PTR [ebx]
65011f29:	test   eax,eax
65011f2b:	je     0x65011f53
65011f2d:	push   eax
65011f2e:	call   0x65013ea0
65011f33:	mov    esi,eax
65011f35:	inc    esi
65011f36:	push   esi
65011f37:	call   0x65013654
65011f3c:	test   eax,eax
65011f3e:	pop    ecx
65011f3f:	pop    ecx
65011f40:	mov    DWORD PTR [edi+0x4],eax
65011f43:	je     0x65011f57
65011f45:	push   DWORD PTR [ebx]
65011f47:	push   esi
65011f48:	push   eax
65011f49:	call   0x65013f94
65011f4e:	add    esp,0xc
65011f51:	jmp    0x65011f57
65011f53:	and    DWORD PTR [edi+0x4],0x0
65011f57:	mov    DWORD PTR [edi+0x8],0x1
65011f5e:	mov    eax,edi
65011f60:	pop    edi
65011f61:	pop    esi
65011f62:	pop    ebx
65011f63:	ret    0x4
65011f66:	mov    eax,ecx
65011f68:	mov    ecx,DWORD PTR [esp+0x4]
65011f6c:	mov    DWORD PTR [eax],0x65024b9c
65011f72:	mov    ecx,DWORD PTR [ecx]
65011f74:	and    DWORD PTR [eax+0x8],0x0
65011f78:	mov    DWORD PTR [eax+0x4],ecx
65011f7b:	ret    0x8
65011f7e:	push   ebx
65011f7f:	mov    ebx,DWORD PTR [esp+0x8]
65011f83:	push   esi
65011f84:	mov    esi,ecx
65011f86:	mov    DWORD PTR [esi],0x65024b9c
65011f8c:	mov    eax,DWORD PTR [ebx+0x8]
65011f8f:	mov    DWORD PTR [esi+0x8],eax
65011f92:	test   eax,eax
65011f94:	mov    eax,DWORD PTR [ebx+0x4]
65011f97:	push   edi
65011f98:	je     0x65011fcb
65011f9a:	test   eax,eax
65011f9c:	je     0x65011fc5
65011f9e:	push   eax
65011f9f:	call   0x65013ea0
65011fa4:	mov    edi,eax
65011fa6:	inc    edi
65011fa7:	push   edi
65011fa8:	call   0x65013654
65011fad:	test   eax,eax
65011faf:	pop    ecx
65011fb0:	pop    ecx
65011fb1:	mov    DWORD PTR [esi+0x4],eax
65011fb4:	je     0x65011fce
65011fb6:	push   DWORD PTR [ebx+0x4]
65011fb9:	push   edi
65011fba:	push   eax
65011fbb:	call   0x65013f94
65011fc0:	add    esp,0xc
65011fc3:	jmp    0x65011fce
65011fc5:	and    DWORD PTR [esi+0x4],0x0
65011fc9:	jmp    0x65011fce
65011fcb:	mov    DWORD PTR [esi+0x4],eax
65011fce:	pop    edi
65011fcf:	mov    eax,esi
65011fd1:	pop    esi
65011fd2:	pop    ebx
65011fd3:	ret    0x4
65011fd6:	cmp    DWORD PTR [ecx+0x8],0x0
65011fda:	mov    DWORD PTR [ecx],0x65024b9c
65011fe0:	je     0x65011feb
65011fe2:	push   DWORD PTR [ecx+0x4]
65011fe5:	call   0x65013577
65011fea:	pop    ecx
65011feb:	ret    
65011fec:	mov    eax,DWORD PTR [ecx+0x4]
65011fef:	test   eax,eax
65011ff1:	jne    0x65011ff8
65011ff3:	mov    eax,0x65024ba4
65011ff8:	ret    
65011ff9:	push   esi
65011ffa:	lea    eax,[esp+0x8]
65011ffe:	push   eax
65011fff:	mov    esi,ecx
65012001:	call   0x65011f18
65012006:	mov    DWORD PTR [esi],0x65024bbc
6501200c:	mov    eax,esi
6501200e:	pop    esi
6501200f:	ret    0x4
65012012:	push   esi
65012013:	push   DWORD PTR [esp+0x8]
65012017:	mov    esi,ecx
65012019:	call   0x65011f7e
6501201e:	mov    DWORD PTR [esi],0x65024bbc
65012024:	mov    eax,esi
65012026:	pop    esi
65012027:	ret    0x4
6501202a:	mov    DWORD PTR [ecx],0x65024bbc
65012030:	jmp    0x65011fd6
65012035:	push   esi
65012036:	mov    esi,ecx
65012038:	call   0x65011fd6
6501203d:	test   BYTE PTR [esp+0x8],0x1
65012042:	je     0x6501204b
65012044:	push   esi
65012045:	call   0x65011f02
6501204a:	pop    ecx
6501204b:	mov    eax,esi
6501204d:	pop    esi
6501204e:	ret    0x4
65012051:	push   esi
65012052:	mov    esi,ecx
65012054:	mov    DWORD PTR [esi],0x65024bbc
6501205a:	call   0x65011fd6
6501205f:	test   BYTE PTR [esp+0x8],0x1
65012064:	je     0x6501206d
65012066:	push   esi
65012067:	call   0x65011f02
6501206c:	pop    ecx
6501206d:	mov    eax,esi
6501206f:	pop    esi
65012070:	ret    0x4
65012073:	push   ebp
65012074:	mov    ebp,esp
65012076:	push   esi
65012077:	mov    esi,DWORD PTR [ebp+0x14]
6501207a:	push   edi
6501207b:	xor    edi,edi
6501207d:	cmp    esi,edi
6501207f:	jne    0x65012085
65012081:	xor    eax,eax
65012083:	jmp    0x650120ea
65012085:	cmp    DWORD PTR [ebp+0x8],edi
65012088:	jne    0x650120a5
6501208a:	call   0x650143a0
6501208f:	push   0x16
65012091:	pop    esi
65012092:	mov    DWORD PTR [eax],esi
65012094:	push   edi
65012095:	push   edi
65012096:	push   edi
65012097:	push   edi
65012098:	push   edi
65012099:	call   0x6501224f
6501209e:	add    esp,0x14
650120a1:	mov    eax,esi
650120a3:	jmp    0x650120ea
650120a5:	cmp    DWORD PTR [ebp+0x10],edi
650120a8:	je     0x650120c0
650120aa:	cmp    DWORD PTR [ebp+0xc],esi
650120ad:	jb     0x650120c0
650120af:	push   esi
650120b0:	push   DWORD PTR [ebp+0x10]
650120b3:	push   DWORD PTR [ebp+0x8]
650120b6:	call   0x65014000
650120bb:	add    esp,0xc
650120be:	jmp    0x65012081
650120c0:	push   DWORD PTR [ebp+0xc]
650120c3:	push   edi
650120c4:	push   DWORD PTR [ebp+0x8]
650120c7:	call   0x65012de0
650120cc:	add    esp,0xc
650120cf:	cmp    DWORD PTR [ebp+0x10],edi
650120d2:	je     0x6501208a
650120d4:	cmp    DWORD PTR [ebp+0xc],esi
650120d7:	jae    0x650120e7
650120d9:	call   0x650143a0
650120de:	push   0x22
650120e0:	pop    ecx
650120e1:	mov    DWORD PTR [eax],ecx
650120e3:	mov    esi,ecx
650120e5:	jmp    0x65012094
650120e7:	push   0x16
650120e9:	pop    eax
650120ea:	pop    edi
650120eb:	pop    esi
650120ec:	pop    ebp
650120ed:	ret    
650120ee:	push   ebp
650120ef:	mov    ebp,esp
650120f1:	mov    eax,DWORD PTR [ebp+0x14]
650120f4:	push   esi
650120f5:	push   edi
650120f6:	xor    edi,edi
650120f8:	cmp    eax,edi
650120fa:	je     0x65012143
650120fc:	cmp    DWORD PTR [ebp+0x8],edi
650120ff:	jne    0x6501211c
65012101:	call   0x650143a0
65012106:	push   0x16
65012108:	pop    esi
65012109:	mov    DWORD PTR [eax],esi
6501210b:	push   edi
6501210c:	push   edi
6501210d:	push   edi
6501210e:	push   edi
6501210f:	push   edi
65012110:	call   0x6501224f
65012115:	add    esp,0x14
65012118:	mov    eax,esi
6501211a:	jmp    0x65012145
6501211c:	cmp    DWORD PTR [ebp+0x10],edi
6501211f:	je     0x65012101
65012121:	cmp    DWORD PTR [ebp+0xc],eax
65012124:	jae    0x65012134
65012126:	call   0x650143a0
6501212b:	push   0x22
6501212d:	pop    ecx
6501212e:	mov    DWORD PTR [eax],ecx
65012130:	mov    esi,ecx
65012132:	jmp    0x6501210b
65012134:	push   eax
65012135:	push   DWORD PTR [ebp+0x10]
65012138:	push   DWORD PTR [ebp+0x8]
6501213b:	call   0x65013720
65012140:	add    esp,0xc
65012143:	xor    eax,eax
65012145:	pop    edi
65012146:	pop    esi
65012147:	pop    ebp
65012148:	ret    
65012149:	mov    eax,DWORD PTR [esp+0x4]
6501214d:	mov    ds:0x6502d57c,eax
65012152:	ret    
65012153:	push   ebp
65012154:	lea    ebp,[esp-0x2a8]
6501215b:	sub    esp,0x328
65012161:	mov    eax,ds:0x6502c09c
65012166:	xor    eax,ebp
65012168:	mov    DWORD PTR [ebp+0x2a4],eax
6501216e:	push   esi
6501216f:	mov    DWORD PTR [ebp+0x88],eax
65012175:	mov    DWORD PTR [ebp+0x84],ecx
6501217b:	mov    DWORD PTR [ebp+0x80],edx
65012181:	mov    DWORD PTR [ebp+0x7c],ebx
65012184:	mov    DWORD PTR [ebp+0x78],esi
65012187:	mov    DWORD PTR [ebp+0x74],edi
6501218a:	data16 mov WORD PTR [ebp+0xa0],ss
65012191:	data16 mov WORD PTR [ebp+0x94],cs
65012198:	data16 mov WORD PTR [ebp+0x70],ds
6501219c:	data16 mov WORD PTR [ebp+0x6c],es
650121a0:	data16 mov WORD PTR [ebp+0x68],fs
650121a4:	data16 mov WORD PTR [ebp+0x64],gs
650121a8:	pushf  
650121a9:	pop    DWORD PTR [ebp+0x98]
650121af:	mov    esi,DWORD PTR [ebp+0x2ac]
650121b5:	lea    eax,[ebp+0x2ac]
650121bb:	mov    DWORD PTR [ebp+0x9c],eax
650121c1:	mov    DWORD PTR [ebp-0x28],0x10001
650121c8:	mov    DWORD PTR [ebp+0x90],esi
650121ce:	mov    eax,DWORD PTR [eax-0x4]
650121d1:	push   0x50
650121d3:	mov    DWORD PTR [ebp+0x8c],eax
650121d9:	lea    eax,[ebp-0x80]
650121dc:	push   0x0
650121de:	push   eax
650121df:	call   0x65012de0
650121e4:	lea    eax,[ebp-0x80]
650121e7:	mov    DWORD PTR [ebp-0x30],eax
650121ea:	lea    eax,[ebp-0x28]
650121ed:	add    esp,0xc
650121f0:	mov    DWORD PTR [ebp-0x80],0xc000000d
650121f7:	mov    DWORD PTR [ebp-0x74],esi
650121fa:	mov    DWORD PTR [ebp-0x2c],eax
650121fd:	call   DWORD PTR ds:0x65024114
65012203:	push   0x0
65012205:	mov    esi,eax
65012207:	call   DWORD PTR ds:0x65024110
6501220d:	lea    eax,[ebp-0x30]
65012210:	push   eax
65012211:	call   DWORD PTR ds:0x6502410c
65012217:	test   eax,eax
65012219:	jne    0x65012227
6501221b:	test   esi,esi
6501221d:	jne    0x65012227
6501221f:	push   0x2
65012221:	call   0x650143e4
65012226:	pop    ecx
65012227:	push   0xc000000d
6501222c:	call   DWORD PTR ds:0x65024048
65012232:	push   eax
65012233:	call   DWORD PTR ds:0x65024108
65012239:	mov    ecx,DWORD PTR [ebp+0x2a4]
6501223f:	xor    ecx,ebp
65012241:	pop    esi
65012242:	call   0x6501275c
65012247:	add    ebp,0x2a8
6501224d:	leave  
6501224e:	ret    
6501224f:	push   ebp
65012250:	mov    ebp,esp
65012252:	push   DWORD PTR ds:0x6502d57c
65012258:	call   0x650144cf
6501225d:	test   eax,eax
6501225f:	pop    ecx
65012260:	je     0x65012265
65012262:	pop    ebp
65012263:	jmp    eax
65012265:	push   0x2
65012267:	call   0x650143e4
6501226c:	pop    ecx
6501226d:	pop    ebp
6501226e:	jmp    0x65012153
65012273:	xor    eax,eax
65012275:	push   eax
65012276:	push   eax
65012277:	push   eax
65012278:	push   eax
65012279:	push   eax
6501227a:	call   0x6501224f
6501227f:	add    esp,0x14
65012282:	ret    
65012283:	push   esi
65012284:	push   0x1
65012286:	push   0x6502c07c
6501228b:	mov    esi,ecx
6501228d:	call   0x65011f66
65012292:	mov    DWORD PTR [esi],0x65024b44
65012298:	mov    eax,esi
6501229a:	pop    esi
6501229b:	ret    
6501229c:	push   ebp
6501229d:	mov    ebp,esp
6501229f:	sub    esp,0xc
650122a2:	jmp    0x650122b1
650122a4:	push   DWORD PTR [ebp+0x8]
650122a7:	call   0x65014a1b
650122ac:	test   eax,eax
650122ae:	pop    ecx
650122af:	je     0x650122c0
650122b1:	push   DWORD PTR [ebp+0x8]
650122b4:	call   0x65013654
650122b9:	test   eax,eax
650122bb:	pop    ecx
650122bc:	je     0x650122a4
650122be:	leave  
650122bf:	ret    
650122c0:	test   BYTE PTR ds:0x6502d58c,0x1
650122c7:	mov    esi,0x6502d580
650122cc:	jne    0x650122e7
650122ce:	or     DWORD PTR ds:0x6502d58c,0x1
650122d5:	mov    ecx,esi
650122d7:	call   0x65012283
650122dc:	push   0x650234da
650122e1:	call   0x6501288f
650122e6:	pop    ecx
650122e7:	push   esi
650122e8:	lea    ecx,[ebp-0xc]
650122eb:	call   0x65011f7e
650122f0:	push   0x65029dfc
650122f5:	lea    eax,[ebp-0xc]
650122f8:	push   eax
650122f9:	mov    DWORD PTR [ebp-0xc],0x65024b44
65012300:	call   0x65012306
65012305:	int3   
65012306:	push   ebp
65012307:	mov    ebp,esp
65012309:	sub    esp,0x20
6501230c:	mov    eax,DWORD PTR [ebp+0x8]
6501230f:	push   esi
65012310:	push   edi
65012311:	push   0x8
65012313:	pop    ecx
65012314:	mov    esi,0x65024bc4
65012319:	lea    edi,[ebp-0x20]
6501231c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501231e:	mov    DWORD PTR [ebp-0x8],eax
65012321:	mov    eax,DWORD PTR [ebp+0xc]
65012324:	test   eax,eax
65012326:	pop    edi
65012327:	mov    DWORD PTR [ebp-0x4],eax
6501232a:	pop    esi
6501232b:	je     0x65012339
6501232d:	test   BYTE PTR [eax],0x8
65012330:	je     0x65012339
65012332:	mov    DWORD PTR [ebp-0xc],0x1994000
65012339:	lea    eax,[ebp-0xc]
6501233c:	push   eax
6501233d:	push   DWORD PTR [ebp-0x10]
65012340:	push   DWORD PTR [ebp-0x1c]
65012343:	push   DWORD PTR [ebp-0x20]
65012346:	call   DWORD PTR ds:0x650240ec
6501234c:	leave  
6501234d:	ret    0x8
65012350:	push   ecx
65012351:	mov    DWORD PTR [ecx],0x65024be8
65012357:	call   0x65014a3d
6501235c:	pop    ecx
6501235d:	ret    
6501235e:	push   esi
6501235f:	mov    esi,ecx
65012361:	call   0x65012350
65012366:	test   BYTE PTR [esp+0x8],0x1
6501236b:	je     0x65012374
6501236d:	push   esi
6501236e:	call   0x65011f02
65012373:	pop    ecx
65012374:	mov    eax,esi
65012376:	pop    esi
65012377:	ret    0x4
6501237a:	mov    eax,DWORD PTR [esp+0x4]
6501237e:	add    ecx,0x9
65012381:	push   ecx
65012382:	add    eax,0x9
65012385:	push   eax
65012386:	call   0x65014ab0
6501238b:	neg    eax
6501238d:	pop    ecx
6501238e:	sbb    eax,eax
65012390:	pop    ecx
65012391:	inc    eax
65012392:	ret    0x4
65012395:	push   ebp
65012396:	mov    ebp,esp
65012398:	push   ecx
65012399:	push   ebx
6501239a:	mov    eax,DWORD PTR [ebp+0xc]
6501239d:	add    eax,0xc
650123a0:	mov    DWORD PTR [ebp-0x4],eax
650123a3:	mov    ebx,DWORD PTR fs:0x0
650123aa:	mov    eax,DWORD PTR [ebx]
650123ac:	mov    fs:0x0,eax
650123b2:	mov    eax,DWORD PTR [ebp+0x8]
650123b5:	mov    ebx,DWORD PTR [ebp+0xc]
650123b8:	mov    ebp,DWORD PTR [ebp-0x4]
650123bb:	mov    esp,DWORD PTR [ebx-0x4]
650123be:	jmp    eax
650123c0:	pop    ebx
650123c1:	leave  
650123c2:	ret    0x8
650123c5:	pop    eax
650123c6:	pop    ecx
650123c7:	xchg   DWORD PTR [esp],eax
650123ca:	jmp    eax
650123cc:	push   ebp
650123cd:	mov    ebp,esp
650123cf:	push   ecx
650123d0:	push   ecx
650123d1:	push   ebx
650123d2:	push   esi
650123d3:	push   edi
650123d4:	mov    esi,DWORD PTR fs:0x0
650123db:	mov    DWORD PTR [ebp-0x4],esi
650123de:	mov    DWORD PTR [ebp-0x8],0x650123f5
650123e5:	push   0x0
650123e7:	push   DWORD PTR [ebp+0xc]
650123ea:	push   DWORD PTR [ebp-0x8]
650123ed:	push   DWORD PTR [ebp+0x8]
650123f0:	call   0x6501e94c
650123f5:	mov    eax,DWORD PTR [ebp+0xc]
650123f8:	mov    eax,DWORD PTR [eax+0x4]
650123fb:	and    eax,0xfffffffd
650123fe:	mov    ecx,DWORD PTR [ebp+0xc]
65012401:	mov    DWORD PTR [ecx+0x4],eax
65012404:	mov    edi,DWORD PTR fs:0x0
6501240b:	mov    ebx,DWORD PTR [ebp-0x4]
6501240e:	mov    DWORD PTR [ebx],edi
65012410:	mov    DWORD PTR fs:0x0,ebx
65012417:	pop    edi
65012418:	pop    esi
65012419:	pop    ebx
6501241a:	leave  
6501241b:	ret    0x8
6501241e:	push   ebp
6501241f:	mov    ebp,esp
65012421:	sub    esp,0x8
65012424:	push   ebx
65012425:	push   esi
65012426:	push   edi
65012427:	cld    
65012428:	mov    DWORD PTR [ebp-0x4],eax
6501242b:	xor    eax,eax
6501242d:	push   eax
6501242e:	push   eax
6501242f:	push   eax
65012430:	push   DWORD PTR [ebp-0x4]
65012433:	push   DWORD PTR [ebp+0x14]
65012436:	push   DWORD PTR [ebp+0x10]
65012439:	push   DWORD PTR [ebp+0xc]
6501243c:	push   DWORD PTR [ebp+0x8]
6501243f:	call   0x650156de
65012444:	add    esp,0x20
65012447:	mov    DWORD PTR [ebp-0x8],eax
6501244a:	pop    edi
6501244b:	pop    esi
6501244c:	pop    ebx
6501244d:	mov    eax,DWORD PTR [ebp-0x8]
65012450:	mov    esp,ebp
65012452:	pop    ebp
65012453:	ret    
65012454:	push   esi
65012455:	cld    
65012456:	mov    esi,DWORD PTR [esp+0xc]
6501245a:	mov    ecx,DWORD PTR [esi+0x8]
6501245d:	xor    ecx,esi
6501245f:	call   0x6501275c
65012464:	push   0x0
65012466:	push   esi
65012467:	push   DWORD PTR [esi+0x14]
6501246a:	push   DWORD PTR [esi+0xc]
6501246d:	push   0x0
6501246f:	push   DWORD PTR [esp+0x24]
65012473:	push   DWORD PTR [esi+0x10]
65012476:	push   DWORD PTR [esp+0x24]
6501247a:	call   0x650156de
6501247f:	add    esp,0x20
65012482:	pop    esi
65012483:	ret    
65012484:	push   ebp
65012485:	mov    ebp,esp
65012487:	sub    esp,0x38
6501248a:	push   ebx
6501248b:	cmp    DWORD PTR [ebp+0x8],0x123
65012492:	jne    0x650124a6
65012494:	mov    eax,0x6501252d
65012499:	mov    ecx,DWORD PTR [ebp+0xc]
6501249c:	mov    DWORD PTR [ecx],eax
6501249e:	xor    eax,eax
650124a0:	inc    eax
650124a1:	jmp    0x65012556
650124a6:	and    DWORD PTR [ebp-0x28],0x0
650124aa:	mov    DWORD PTR [ebp-0x24],0x65012559
650124b1:	mov    eax,ds:0x6502c09c
650124b6:	lea    ecx,[ebp-0x28]
650124b9:	xor    eax,ecx
650124bb:	mov    DWORD PTR [ebp-0x20],eax
650124be:	mov    eax,DWORD PTR [ebp+0x18]
650124c1:	mov    DWORD PTR [ebp-0x1c],eax
650124c4:	mov    eax,DWORD PTR [ebp+0xc]
650124c7:	mov    DWORD PTR [ebp-0x18],eax
650124ca:	mov    eax,DWORD PTR [ebp+0x1c]
650124cd:	mov    DWORD PTR [ebp-0x14],eax
650124d0:	mov    eax,DWORD PTR [ebp+0x20]
650124d3:	mov    DWORD PTR [ebp-0x10],eax
650124d6:	and    DWORD PTR [ebp-0xc],0x0
650124da:	and    DWORD PTR [ebp-0x8],0x0
650124de:	and    DWORD PTR [ebp-0x4],0x0
650124e2:	mov    DWORD PTR [ebp-0xc],esp
650124e5:	mov    DWORD PTR [ebp-0x8],ebp
650124e8:	mov    eax,fs:0x0
650124ee:	mov    DWORD PTR [ebp-0x28],eax
650124f1:	lea    eax,[ebp-0x28]
650124f4:	mov    fs:0x0,eax
650124fa:	mov    DWORD PTR [ebp-0x38],0x1
65012501:	mov    eax,DWORD PTR [ebp+0x8]
65012504:	mov    DWORD PTR [ebp-0x34],eax
65012507:	mov    eax,DWORD PTR [ebp+0x10]
6501250a:	mov    DWORD PTR [ebp-0x30],eax
6501250d:	call   0x650146eb
65012512:	mov    eax,DWORD PTR [eax+0x80]
65012518:	mov    DWORD PTR [ebp-0x2c],eax
6501251b:	lea    eax,[ebp-0x34]
6501251e:	push   eax
6501251f:	mov    eax,DWORD PTR [ebp+0x8]
65012522:	push   DWORD PTR [eax]
65012524:	call   DWORD PTR [ebp-0x2c]
65012527:	pop    ecx
65012528:	pop    ecx
65012529:	and    DWORD PTR [ebp-0x38],0x0
6501252d:	cmp    DWORD PTR [ebp-0x4],0x0
65012531:	je     0x6501254a
65012533:	mov    ebx,DWORD PTR fs:0x0
6501253a:	mov    eax,DWORD PTR [ebx]
6501253c:	mov    ebx,DWORD PTR [ebp-0x28]
6501253f:	mov    DWORD PTR [ebx],eax
65012541:	mov    DWORD PTR fs:0x0,ebx
65012548:	jmp    0x65012553
6501254a:	mov    eax,DWORD PTR [ebp-0x28]
6501254d:	mov    fs:0x0,eax
65012553:	mov    eax,DWORD PTR [ebp-0x38]
65012556:	pop    ebx
65012557:	leave  
65012558:	ret    
65012559:	push   ebp
6501255a:	mov    ebp,esp
6501255c:	push   ecx
6501255d:	push   ebx
6501255e:	cld    
6501255f:	mov    eax,DWORD PTR [ebp+0xc]
65012562:	mov    ecx,DWORD PTR [eax+0x8]
65012565:	xor    ecx,DWORD PTR [ebp+0xc]
65012568:	call   0x6501275c
6501256d:	mov    eax,DWORD PTR [ebp+0x8]
65012570:	mov    eax,DWORD PTR [eax+0x4]
65012573:	and    eax,0x66
65012576:	je     0x65012589
65012578:	mov    eax,DWORD PTR [ebp+0xc]
6501257b:	mov    DWORD PTR [eax+0x24],0x1
65012582:	xor    eax,eax
65012584:	inc    eax
65012585:	jmp    0x650125f3
65012587:	jmp    0x650125f3
65012589:	push   0x1
6501258b:	mov    eax,DWORD PTR [ebp+0xc]
6501258e:	push   DWORD PTR [eax+0x18]
65012591:	mov    eax,DWORD PTR [ebp+0xc]
65012594:	push   DWORD PTR [eax+0x14]
65012597:	mov    eax,DWORD PTR [ebp+0xc]
6501259a:	push   DWORD PTR [eax+0xc]
6501259d:	push   0x0
6501259f:	push   DWORD PTR [ebp+0x10]
650125a2:	mov    eax,DWORD PTR [ebp+0xc]
650125a5:	push   DWORD PTR [eax+0x10]
650125a8:	push   DWORD PTR [ebp+0x8]
650125ab:	call   0x650156de
650125b0:	add    esp,0x20
650125b3:	mov    eax,DWORD PTR [ebp+0xc]
650125b6:	cmp    DWORD PTR [eax+0x24],0x0
650125ba:	jne    0x650125c7
650125bc:	push   DWORD PTR [ebp+0x8]
650125bf:	push   DWORD PTR [ebp+0xc]
650125c2:	call   0x650123cc
650125c7:	push   0x0
650125c9:	push   0x0
650125cb:	push   0x0
650125cd:	push   0x0
650125cf:	push   0x0
650125d1:	lea    eax,[ebp-0x4]
650125d4:	push   eax
650125d5:	push   0x123
650125da:	call   0x65012484
650125df:	add    esp,0x1c
650125e2:	mov    eax,DWORD PTR [ebp-0x4]
650125e5:	mov    ebx,DWORD PTR [ebp+0xc]
650125e8:	mov    esp,DWORD PTR [ebx+0x1c]
650125eb:	mov    ebp,DWORD PTR [ebx+0x20]
650125ee:	jmp    eax
650125f0:	xor    eax,eax
650125f2:	inc    eax
650125f3:	pop    ebx
650125f4:	leave  
650125f5:	ret    
650125f6:	push   ebp
650125f7:	mov    ebp,esp
650125f9:	push   ecx
650125fa:	push   ebx
650125fb:	push   esi
650125fc:	push   edi
650125fd:	mov    edi,DWORD PTR [ebp+0x8]
65012600:	mov    eax,DWORD PTR [edi+0x10]
65012603:	mov    esi,DWORD PTR [edi+0xc]
65012606:	mov    DWORD PTR [ebp-0x4],eax
65012609:	mov    ebx,esi
6501260b:	jmp    0x6501263a
6501260d:	cmp    esi,0xffffffff
65012610:	jne    0x65012617
65012612:	call   0x6501580e
65012617:	mov    ecx,DWORD PTR [ebp-0x4]
6501261a:	dec    esi
6501261b:	mov    eax,esi
6501261d:	imul   eax,eax,0x14
65012620:	add    eax,ecx
65012622:	mov    ecx,DWORD PTR [ebp+0x10]
65012625:	cmp    DWORD PTR [eax+0x4],ecx
65012628:	jge    0x6501262f
6501262a:	cmp    ecx,DWORD PTR [eax+0x8]
6501262d:	jle    0x65012634
6501262f:	cmp    esi,0xffffffff
65012632:	jne    0x6501263d
65012634:	dec    DWORD PTR [ebp+0xc]
65012637:	mov    ebx,DWORD PTR [ebp+0x8]
6501263a:	mov    DWORD PTR [ebp+0x8],esi
6501263d:	cmp    DWORD PTR [ebp+0xc],0x0
65012641:	jge    0x6501260d
65012643:	mov    eax,DWORD PTR [ebp+0x14]
65012646:	inc    esi
65012647:	mov    DWORD PTR [eax],esi
65012649:	mov    eax,DWORD PTR [ebp+0x18]
6501264c:	mov    DWORD PTR [eax],ebx
6501264e:	cmp    ebx,DWORD PTR [edi+0xc]
65012651:	ja     0x65012657
65012653:	cmp    esi,ebx
65012655:	jbe    0x6501265c
65012657:	call   0x6501580e
6501265c:	mov    eax,esi
6501265e:	imul   eax,eax,0x14
65012661:	add    eax,DWORD PTR [ebp-0x4]
65012664:	pop    edi
65012665:	pop    esi
65012666:	pop    ebx
65012667:	leave  
65012668:	ret    
65012669:	mov    eax,DWORD PTR [esp+0x8]
6501266d:	push   esi
6501266e:	mov    esi,DWORD PTR [esp+0x8]
65012672:	mov    DWORD PTR [esi],eax
65012674:	call   0x650146eb
65012679:	mov    eax,DWORD PTR [eax+0x98]
6501267f:	mov    DWORD PTR [esi+0x4],eax
65012682:	call   0x650146eb
65012687:	mov    DWORD PTR [eax+0x98],esi
6501268d:	mov    eax,esi
6501268f:	pop    esi
65012690:	ret    
65012691:	call   0x650146eb
65012696:	mov    eax,DWORD PTR [eax+0x98]
6501269c:	jmp    0x650126a9
6501269e:	mov    ecx,DWORD PTR [eax]
650126a0:	cmp    ecx,DWORD PTR [esp+0x4]
650126a4:	je     0x650126af
650126a6:	mov    eax,DWORD PTR [eax+0x4]
650126a9:	test   eax,eax
650126ab:	jne    0x6501269e
650126ad:	inc    eax
650126ae:	ret    
650126af:	xor    eax,eax
650126b1:	ret    
650126b2:	push   esi
650126b3:	call   0x650146eb
650126b8:	mov    esi,DWORD PTR [esp+0x8]
650126bc:	cmp    esi,DWORD PTR [eax+0x98]
650126c2:	jne    0x650126d4
650126c4:	call   0x650146eb
650126c9:	mov    ecx,DWORD PTR [esi+0x4]
650126cc:	mov    DWORD PTR [eax+0x98],ecx
650126d2:	pop    esi
650126d3:	ret    
650126d4:	call   0x650146eb
650126d9:	mov    eax,DWORD PTR [eax+0x98]
650126df:	jmp    0x650126ea
650126e1:	mov    ecx,DWORD PTR [eax+0x4]
650126e4:	cmp    esi,ecx
650126e6:	je     0x650126f6
650126e8:	mov    eax,ecx
650126ea:	cmp    DWORD PTR [eax+0x4],0x0
650126ee:	jne    0x650126e1
650126f0:	pop    esi
650126f1:	jmp    0x6501580e
650126f6:	mov    ecx,DWORD PTR [esi+0x4]
650126f9:	mov    DWORD PTR [eax+0x4],ecx
650126fc:	pop    esi
650126fd:	ret    
650126fe:	push   ebp
650126ff:	mov    ebp,esp
65012701:	sub    esp,0x18
65012704:	mov    eax,ds:0x6502c09c
65012709:	and    DWORD PTR [ebp-0x18],0x0
6501270d:	lea    ecx,[ebp-0x18]
65012710:	xor    eax,ecx
65012712:	mov    ecx,DWORD PTR [ebp+0x8]
65012715:	mov    DWORD PTR [ebp-0x10],eax
65012718:	mov    eax,DWORD PTR [ebp+0xc]
6501271b:	mov    DWORD PTR [ebp-0xc],eax
6501271e:	mov    eax,DWORD PTR [ebp+0x14]
65012721:	inc    eax
65012722:	mov    DWORD PTR [ebp-0x14],0x65012454
65012729:	mov    DWORD PTR [ebp-0x8],ecx
6501272c:	mov    DWORD PTR [ebp-0x4],eax
6501272f:	mov    eax,fs:0x0
65012735:	mov    DWORD PTR [ebp-0x18],eax
65012738:	lea    eax,[ebp-0x18]
6501273b:	mov    fs:0x0,eax
65012741:	push   DWORD PTR [ebp+0x18]
65012744:	push   ecx
65012745:	push   DWORD PTR [ebp+0x10]
65012748:	call   0x65015860
6501274d:	mov    ecx,eax
6501274f:	mov    eax,DWORD PTR [ebp-0x18]
65012752:	mov    fs:0x0,eax
65012758:	mov    eax,ecx
6501275a:	leave  
6501275b:	ret    
6501275c:	cmp    ecx,DWORD PTR ds:0x6502c09c
65012762:	jne    0x65012766
65012764:	repz ret 
65012766:	jmp    0x650158ac
6501276b:	push   ecx
6501276c:	push   ebx
6501276d:	push   ebp
6501276e:	push   esi
6501276f:	push   edi
65012770:	push   DWORD PTR ds:0x65031570
65012776:	call   0x650144cf
6501277b:	push   DWORD PTR ds:0x6503156c
65012781:	mov    esi,eax
65012783:	mov    DWORD PTR [esp+0x18],esi
65012787:	call   0x650144cf
6501278c:	mov    edi,eax
6501278e:	cmp    edi,esi
65012790:	pop    ecx
65012791:	pop    ecx
65012792:	jb     0x6501281c
65012798:	mov    ebx,edi
6501279a:	sub    ebx,esi
6501279c:	lea    ebp,[ebx+0x4]
6501279f:	cmp    ebp,0x4
650127a2:	jb     0x6501281c
650127a4:	push   esi
650127a5:	call   0x65015a83
650127aa:	mov    esi,eax
650127ac:	cmp    esi,ebp
650127ae:	pop    ecx
650127af:	jae    0x650127fb
650127b1:	mov    eax,0x800
650127b6:	cmp    esi,eax
650127b8:	jae    0x650127bc
650127ba:	mov    eax,esi
650127bc:	add    eax,esi
650127be:	cmp    eax,esi
650127c0:	jb     0x650127d2
650127c2:	push   eax
650127c3:	push   DWORD PTR [esp+0x14]
650127c7:	call   0x65015a38
650127cc:	test   eax,eax
650127ce:	pop    ecx
650127cf:	pop    ecx
650127d0:	jne    0x650127e9
650127d2:	lea    eax,[esi+0x10]
650127d5:	cmp    eax,esi
650127d7:	jb     0x6501281c
650127d9:	push   eax
650127da:	push   DWORD PTR [esp+0x14]
650127de:	call   0x65015a38
650127e3:	test   eax,eax
650127e5:	pop    ecx
650127e6:	pop    ecx
650127e7:	je     0x6501281c
650127e9:	sar    ebx,0x2
650127ec:	push   eax
650127ed:	lea    edi,[eax+ebx*4]
650127f0:	call   0x65014458
650127f5:	pop    ecx
650127f6:	mov    ds:0x65031570,eax
650127fb:	push   DWORD PTR [esp+0x18]
650127ff:	call   0x65014458
65012804:	mov    DWORD PTR [edi],eax
65012806:	add    edi,0x4
65012809:	push   edi
6501280a:	call   0x65014458
6501280f:	pop    ecx
65012810:	mov    ds:0x6503156c,eax
65012815:	mov    eax,DWORD PTR [esp+0x1c]
65012819:	pop    ecx
6501281a:	jmp    0x6501281e
6501281c:	xor    eax,eax
6501281e:	pop    edi
6501281f:	pop    esi
65012820:	pop    ebp
65012821:	pop    ebx
65012822:	pop    ecx
65012823:	ret    
65012824:	push   esi
65012825:	push   0x4
65012827:	push   0x20
65012829:	call   0x650159f0
6501282e:	mov    esi,eax
65012830:	push   esi
65012831:	call   0x65014458
65012836:	add    esp,0xc
65012839:	test   esi,esi
6501283b:	mov    ds:0x65031570,eax
65012840:	mov    ds:0x6503156c,eax
65012845:	jne    0x6501284c
65012847:	push   0x18
65012849:	pop    eax
6501284a:	pop    esi
6501284b:	ret    
6501284c:	and    DWORD PTR [esi],0x0
6501284f:	xor    eax,eax
65012851:	pop    esi
65012852:	ret    
65012853:	push   0xc
65012855:	push   0x65029808
6501285a:	call   0x65013ca0
6501285f:	call   0x65015b85
65012864:	and    DWORD PTR [ebp-0x4],0x0
65012868:	push   DWORD PTR [ebp+0x8]
6501286b:	call   0x6501276b
65012870:	pop    ecx
65012871:	mov    DWORD PTR [ebp-0x1c],eax
65012874:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501287b:	call   0x65012889
65012880:	mov    eax,DWORD PTR [ebp-0x1c]
65012883:	call   0x65013ce5
65012888:	ret    
65012889:	call   0x65015b8e
6501288e:	ret    
6501288f:	push   DWORD PTR [esp+0x4]
65012893:	call   0x65012853
65012898:	neg    eax
6501289a:	sbb    eax,eax
6501289c:	neg    eax
6501289e:	pop    ecx
6501289f:	dec    eax
650128a0:	ret    
650128a1:	mov    eax,DWORD PTR [esp+0x4]
650128a5:	push   ebx
650128a6:	mov    ebx,DWORD PTR [esp+0xc]
650128aa:	cmp    WORD PTR [ebx],0x0
650128ae:	push   edi
650128af:	mov    edi,eax
650128b1:	je     0x650128f8
650128b3:	movzx  ecx,WORD PTR [eax]
650128b6:	test   cx,cx
650128b9:	je     0x650128f6
650128bb:	movzx  edx,cx
650128be:	sub    eax,ebx
650128c0:	test   dx,dx
650128c3:	mov    ecx,DWORD PTR [esp+0x10]
650128c7:	je     0x650128e4
650128c9:	movzx  edx,WORD PTR [ecx]
650128cc:	test   dx,dx
650128cf:	je     0x650128fb
650128d1:	movzx  ebx,WORD PTR [eax+ecx*1]
650128d5:	movzx  edx,dx
650128d8:	sub    ebx,edx
650128da:	jne    0x650128e4
650128dc:	inc    ecx
650128dd:	inc    ecx
650128de:	cmp    WORD PTR [eax+ecx*1],bx
650128e2:	jne    0x650128c9
650128e4:	cmp    WORD PTR [ecx],0x0
650128e8:	je     0x650128fb
650128ea:	inc    edi
650128eb:	inc    edi
650128ec:	movzx  edx,WORD PTR [edi]
650128ef:	inc    eax
650128f0:	inc    eax
650128f1:	test   dx,dx
650128f4:	jne    0x650128c0
650128f6:	xor    eax,eax
650128f8:	pop    edi
650128f9:	pop    ebx
650128fa:	ret    
650128fb:	mov    eax,edi
650128fd:	jmp    0x650128f8
650128ff:	mov    eax,DWORD PTR [esp+0x4]
65012903:	test   eax,eax
65012905:	push   esi
65012906:	mov    esi,ecx
65012908:	mov    BYTE PTR [esi+0xc],0x0
6501290c:	jne    0x65012971
6501290e:	call   0x650146eb
65012913:	mov    DWORD PTR [esi+0x8],eax
65012916:	mov    ecx,DWORD PTR [eax+0x6c]
65012919:	mov    DWORD PTR [esi],ecx
6501291b:	mov    ecx,DWORD PTR [eax+0x68]
6501291e:	mov    DWORD PTR [esi+0x4],ecx
65012921:	mov    ecx,DWORD PTR [esi]
65012923:	cmp    ecx,DWORD PTR ds:0x6502c870
65012929:	je     0x6501293d
6501292b:	mov    ecx,DWORD PTR ds:0x6502c78c
65012931:	test   DWORD PTR [eax+0x70],ecx
65012934:	jne    0x6501293d
65012936:	call   0x6501676f
6501293b:	mov    DWORD PTR [esi],eax
6501293d:	mov    eax,DWORD PTR [esi+0x4]
65012940:	cmp    eax,DWORD PTR ds:0x6502c690
65012946:	je     0x6501295e
65012948:	mov    eax,DWORD PTR [esi+0x8]
6501294b:	mov    ecx,DWORD PTR ds:0x6502c78c
65012951:	test   DWORD PTR [eax+0x70],ecx
65012954:	jne    0x6501295e
65012956:	call   0x65016030
6501295b:	mov    DWORD PTR [esi+0x4],eax
6501295e:	mov    eax,DWORD PTR [esi+0x8]
65012961:	test   BYTE PTR [eax+0x70],0x2
65012965:	jne    0x6501297b
65012967:	or     DWORD PTR [eax+0x70],0x2
6501296b:	mov    BYTE PTR [esi+0xc],0x1
6501296f:	jmp    0x6501297b
65012971:	mov    ecx,DWORD PTR [eax]
65012973:	mov    DWORD PTR [esi],ecx
65012975:	mov    eax,DWORD PTR [eax+0x4]
65012978:	mov    DWORD PTR [esi+0x4],eax
6501297b:	mov    eax,esi
6501297d:	pop    esi
6501297e:	ret    0x4
65012981:	push   ebp
65012982:	mov    ebp,esp
65012984:	sub    esp,0x20
65012987:	push   esi
65012988:	xor    esi,esi
6501298a:	cmp    DWORD PTR [ebp+0xc],esi
6501298d:	jne    0x650129ac
6501298f:	call   0x650143a0
65012994:	push   esi
65012995:	push   esi
65012996:	push   esi
65012997:	push   esi
65012998:	push   esi
65012999:	mov    DWORD PTR [eax],0x16
6501299f:	call   0x6501224f
650129a4:	add    esp,0x14
650129a7:	or     eax,0xffffffff
650129aa:	jmp    0x650129d3
650129ac:	push   DWORD PTR [ebp+0x14]
650129af:	lea    eax,[ebp-0x20]
650129b2:	push   DWORD PTR [ebp+0x10]
650129b5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
650129bc:	push   DWORD PTR [ebp+0xc]
650129bf:	mov    DWORD PTR [ebp-0x14],0x42
650129c6:	push   eax
650129c7:	mov    DWORD PTR [ebp-0x18],esi
650129ca:	mov    DWORD PTR [ebp-0x20],esi
650129cd:	call   DWORD PTR [ebp+0x8]
650129d0:	add    esp,0x10
650129d3:	pop    esi
650129d4:	leave  
650129d5:	ret    
650129d6:	push   DWORD PTR [esp+0x8]
650129da:	push   0x0
650129dc:	push   DWORD PTR [esp+0xc]
650129e0:	push   0x6501698f
650129e5:	call   0x65012981
650129ea:	add    esp,0x10
650129ed:	ret    
650129ee:	push   ebp
650129ef:	mov    ebp,esp
650129f1:	sub    esp,0x20
650129f4:	push   ebx
650129f5:	xor    ebx,ebx
650129f7:	cmp    DWORD PTR [ebp+0x14],ebx
650129fa:	jne    0x65012a1c
650129fc:	call   0x650143a0
65012a01:	push   ebx
65012a02:	push   ebx
65012a03:	push   ebx
65012a04:	push   ebx
65012a05:	push   ebx
65012a06:	mov    DWORD PTR [eax],0x16
65012a0c:	call   0x6501224f
65012a11:	add    esp,0x14
65012a14:	or     eax,0xffffffff
65012a17:	jmp    0x65012ae1
65012a1c:	push   esi
65012a1d:	mov    esi,DWORD PTR [ebp+0xc]
65012a20:	push   edi
65012a21:	mov    edi,DWORD PTR [ebp+0x10]
65012a24:	cmp    edi,ebx
65012a26:	je     0x65012a4c
65012a28:	cmp    esi,ebx
65012a2a:	jne    0x65012a4c
65012a2c:	call   0x650143a0
65012a31:	push   ebx
65012a32:	push   ebx
65012a33:	push   ebx
65012a34:	push   ebx
65012a35:	push   ebx
65012a36:	mov    DWORD PTR [eax],0x16
65012a3c:	call   0x6501224f
65012a41:	add    esp,0x14
65012a44:	or     eax,0xffffffff
65012a47:	jmp    0x65012adf
65012a4c:	cmp    edi,0x3fffffff
65012a52:	mov    DWORD PTR [ebp-0x14],0x42
65012a59:	mov    DWORD PTR [ebp-0x18],esi
65012a5c:	mov    DWORD PTR [ebp-0x20],esi
65012a5f:	jbe    0x65012a6a
65012a61:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
65012a68:	jmp    0x65012a70
65012a6a:	lea    eax,[edi+edi*1]
65012a6d:	mov    DWORD PTR [ebp-0x1c],eax
65012a70:	push   DWORD PTR [ebp+0x1c]
65012a73:	lea    eax,[ebp-0x20]
65012a76:	push   DWORD PTR [ebp+0x18]
65012a79:	push   DWORD PTR [ebp+0x14]
65012a7c:	push   eax
65012a7d:	call   DWORD PTR [ebp+0x8]
65012a80:	add    esp,0x10
65012a83:	cmp    esi,ebx
65012a85:	mov    DWORD PTR [ebp+0x14],eax
65012a88:	je     0x65012adf
65012a8a:	cmp    eax,ebx
65012a8c:	jl     0x65012ad0
65012a8e:	dec    DWORD PTR [ebp-0x1c]
65012a91:	js     0x65012a9d
65012a93:	mov    eax,DWORD PTR [ebp-0x20]
65012a96:	mov    BYTE PTR [eax],bl
65012a98:	inc    DWORD PTR [ebp-0x20]
65012a9b:	jmp    0x65012aae
65012a9d:	lea    eax,[ebp-0x20]
65012aa0:	push   eax
65012aa1:	push   ebx
65012aa2:	call   0x650167e5
65012aa7:	cmp    eax,0xffffffff
65012aaa:	pop    ecx
65012aab:	pop    ecx
65012aac:	je     0x65012ad0
65012aae:	dec    DWORD PTR [ebp-0x1c]
65012ab1:	js     0x65012aba
65012ab3:	mov    eax,DWORD PTR [ebp-0x20]
65012ab6:	mov    BYTE PTR [eax],bl
65012ab8:	jmp    0x65012acb
65012aba:	lea    eax,[ebp-0x20]
65012abd:	push   eax
65012abe:	push   ebx
65012abf:	call   0x650167e5
65012ac4:	cmp    eax,0xffffffff
65012ac7:	pop    ecx
65012ac8:	pop    ecx
65012ac9:	je     0x65012ad0
65012acb:	mov    eax,DWORD PTR [ebp+0x14]
65012ace:	jmp    0x65012adf
65012ad0:	xor    eax,eax
65012ad2:	cmp    DWORD PTR [ebp-0x1c],ebx
65012ad5:	mov    WORD PTR [esi+edi*2-0x2],bx
65012ada:	setge  al
65012add:	dec    eax
65012ade:	dec    eax
65012adf:	pop    edi
65012ae0:	pop    esi
65012ae1:	pop    ebx
65012ae2:	leave  
65012ae3:	ret    
65012ae4:	push   ebp
65012ae5:	mov    ebp,esp
65012ae7:	push   esi
65012ae8:	xor    esi,esi
65012aea:	cmp    DWORD PTR [ebp+0x10],esi
65012aed:	jne    0x65012b0c
65012aef:	call   0x650143a0
65012af4:	push   esi
65012af5:	push   esi
65012af6:	push   esi
65012af7:	push   esi
65012af8:	push   esi
65012af9:	mov    DWORD PTR [eax],0x16
65012aff:	call   0x6501224f
65012b04:	add    esp,0x14
65012b07:	or     eax,0xffffffff
65012b0a:	jmp    0x65012b68
65012b0c:	push   edi
65012b0d:	mov    edi,DWORD PTR [ebp+0x8]
65012b10:	cmp    edi,esi
65012b12:	je     0x65012b19
65012b14:	cmp    DWORD PTR [ebp+0xc],esi
65012b17:	ja     0x65012b26
65012b19:	call   0x650143a0
65012b1e:	mov    DWORD PTR [eax],0x16
65012b24:	jmp    0x65012b57
65012b26:	push   DWORD PTR [ebp+0x18]
65012b29:	push   DWORD PTR [ebp+0x14]
65012b2c:	push   DWORD PTR [ebp+0x10]
65012b2f:	push   DWORD PTR [ebp+0xc]
65012b32:	push   edi
65012b33:	push   0x650172ee
65012b38:	call   0x650129ee
65012b3d:	add    esp,0x18
65012b40:	cmp    eax,esi
65012b42:	jge    0x65012b47
65012b44:	mov    WORD PTR [edi],si
65012b47:	cmp    eax,0xfffffffe
65012b4a:	jne    0x65012b67
65012b4c:	call   0x650143a0
65012b51:	mov    DWORD PTR [eax],0x22
65012b57:	push   esi
65012b58:	push   esi
65012b59:	push   esi
65012b5a:	push   esi
65012b5b:	push   esi
65012b5c:	call   0x6501224f
65012b61:	add    esp,0x14
65012b64:	or     eax,0xffffffff
65012b67:	pop    edi
65012b68:	pop    esi
65012b69:	pop    ebp
65012b6a:	ret    
65012b6b:	push   DWORD PTR [esp+0x10]
65012b6f:	push   0x0
65012b71:	push   DWORD PTR [esp+0x14]
65012b75:	push   DWORD PTR [esp+0x14]
65012b79:	push   DWORD PTR [esp+0x14]
65012b7d:	call   0x65012ae4
65012b82:	add    esp,0x14
65012b85:	ret    
65012b86:	mov    ecx,DWORD PTR [esp+0x4]
65012b8a:	push   ebx
65012b8b:	push   esi
65012b8c:	push   edi
65012b8d:	xor    edi,edi
65012b8f:	cmp    ecx,edi
65012b91:	je     0x65012b9b
65012b93:	mov    ebx,DWORD PTR [esp+0x14]
65012b97:	cmp    ebx,edi
65012b99:	ja     0x65012bb6
65012b9b:	call   0x650143a0
65012ba0:	push   0x16
65012ba2:	pop    esi
65012ba3:	mov    DWORD PTR [eax],esi
65012ba5:	push   edi
65012ba6:	push   edi
65012ba7:	push   edi
65012ba8:	push   edi
65012ba9:	push   edi
65012baa:	call   0x6501224f
65012baf:	add    esp,0x14
65012bb2:	mov    eax,esi
65012bb4:	jmp    0x65012bee
65012bb6:	mov    esi,DWORD PTR [esp+0x18]
65012bba:	cmp    esi,edi
65012bbc:	jne    0x65012bc3
65012bbe:	mov    WORD PTR [ecx],di
65012bc1:	jmp    0x65012b9b
65012bc3:	mov    edx,ecx
65012bc5:	movzx  eax,WORD PTR [esi]
65012bc8:	mov    WORD PTR [edx],ax
65012bcb:	inc    edx
65012bcc:	inc    edx
65012bcd:	inc    esi
65012bce:	inc    esi
65012bcf:	cmp    ax,di
65012bd2:	je     0x65012bd7
65012bd4:	dec    ebx
65012bd5:	jne    0x65012bc5
65012bd7:	cmp    ebx,edi
65012bd9:	jne    0x65012bec
65012bdb:	mov    WORD PTR [ecx],di
65012bde:	call   0x650143a0
65012be3:	push   0x22
65012be5:	pop    ecx
65012be6:	mov    DWORD PTR [eax],ecx
65012be8:	mov    esi,ecx
65012bea:	jmp    0x65012ba5
65012bec:	xor    eax,eax
65012bee:	pop    edi
65012bef:	pop    esi
65012bf0:	pop    ebx
65012bf1:	ret    
65012bf2:	mov    eax,DWORD PTR [esp+0x4]
65012bf6:	test   eax,eax
65012bf8:	je     0x65012c0c
65012bfa:	sub    eax,0x8
65012bfd:	cmp    DWORD PTR [eax],0xdddd
65012c03:	jne    0x65012c0c
65012c05:	push   eax
65012c06:	call   0x65013577
65012c0b:	pop    ecx
65012c0c:	ret    
65012c0d:	push   ebp
65012c0e:	mov    ebp,esp
65012c10:	sub    esp,0xc
65012c13:	mov    eax,ds:0x6502c09c
65012c18:	xor    eax,ebp
65012c1a:	mov    DWORD PTR [ebp-0x4],eax
65012c1d:	push   esi
65012c1e:	xor    esi,esi
65012c20:	cmp    ebx,esi
65012c22:	push   edi
65012c23:	jne    0x65012c43
65012c25:	call   0x650143a0
65012c2a:	push   0x16
65012c2c:	pop    edi
65012c2d:	push   esi
65012c2e:	push   esi
65012c2f:	push   esi
65012c30:	push   esi
65012c31:	push   esi
65012c32:	mov    DWORD PTR [eax],edi
65012c34:	call   0x6501224f
65012c39:	add    esp,0x14
65012c3c:	mov    eax,edi
65012c3e:	jmp    0x65012d83
65012c43:	push   DWORD PTR [ebp+0x8]
65012c46:	push   ebx
65012c47:	call   0x65017eab
65012c4c:	cmp    eax,DWORD PTR [ebp+0x8]
65012c4f:	pop    ecx
65012c50:	pop    ecx
65012c51:	jb     0x65012c58
65012c53:	mov    WORD PTR [ebx],si
65012c56:	jmp    0x65012c25
65012c58:	mov    edx,DWORD PTR [ebp+0xc]
65012c5b:	mov    eax,DWORD PTR [edx]
65012c5d:	mov    ecx,DWORD PTR [eax+0x14]
65012c60:	cmp    ecx,esi
65012c62:	jne    0x65012c8e
65012c64:	cmp    WORD PTR [ebx],si
65012c67:	mov    eax,ebx
65012c69:	je     0x65012c87
65012c6b:	movzx  ecx,WORD PTR [eax]
65012c6e:	cmp    cx,0x41
65012c72:	jb     0x65012c80
65012c74:	cmp    cx,0x5a
65012c78:	ja     0x65012c80
65012c7a:	add    ecx,0x20
65012c7d:	mov    WORD PTR [eax],cx
65012c80:	inc    eax
65012c81:	inc    eax
65012c82:	cmp    WORD PTR [eax],si
65012c85:	jne    0x65012c6b
65012c87:	xor    eax,eax
65012c89:	jmp    0x65012d83
65012c8e:	push   DWORD PTR [eax+0x4]
65012c91:	mov    edi,0x100
65012c96:	push   esi
65012c97:	push   esi
65012c98:	push   0xffffffff
65012c9a:	push   ebx
65012c9b:	push   edi
65012c9c:	push   ecx
65012c9d:	push   edx
65012c9e:	call   0x65017e6b
65012ca3:	mov    ecx,eax
65012ca5:	add    esp,0x20
65012ca8:	cmp    ecx,esi
65012caa:	mov    DWORD PTR [ebp-0xc],ecx
65012cad:	jne    0x65012cc6
65012caf:	call   0x650143a0
65012cb4:	mov    DWORD PTR [eax],0x2a
65012cba:	call   0x650143a0
65012cbf:	mov    eax,DWORD PTR [eax]
65012cc1:	jmp    0x65012d83
65012cc6:	cmp    DWORD PTR [ebp+0x8],ecx
65012cc9:	jae    0x65012cda
65012ccb:	mov    WORD PTR [ebx],si
65012cce:	call   0x650143a0
65012cd3:	push   0x22
65012cd5:	jmp    0x65012c2c
65012cda:	cmp    ecx,esi
65012cdc:	jle    0x65012d24
65012cde:	push   0xffffffe0
65012ce0:	xor    edx,edx
65012ce2:	pop    eax
65012ce3:	div    ecx
65012ce5:	cmp    eax,0x2
65012ce8:	jb     0x65012d24
65012cea:	lea    eax,[ecx+ecx*1+0x8]
65012cee:	cmp    eax,0x400
65012cf3:	ja     0x65012d08
65012cf5:	call   0x65012e60
65012cfa:	mov    eax,esp
65012cfc:	cmp    eax,esi
65012cfe:	je     0x65012d1c
65012d00:	mov    DWORD PTR [eax],0xcccc
65012d06:	jmp    0x65012d19
65012d08:	push   eax
65012d09:	call   0x65013654
65012d0e:	cmp    eax,esi
65012d10:	pop    ecx
65012d11:	je     0x65012d1c
65012d13:	mov    DWORD PTR [eax],0xdddd
65012d19:	add    eax,0x8
65012d1c:	mov    ecx,DWORD PTR [ebp-0xc]
65012d1f:	mov    DWORD PTR [ebp-0x8],eax
65012d22:	jmp    0x65012d27
65012d24:	mov    DWORD PTR [ebp-0x8],esi
65012d27:	cmp    DWORD PTR [ebp-0x8],esi
65012d2a:	jne    0x65012d39
65012d2c:	call   0x650143a0
65012d31:	mov    DWORD PTR [eax],0xc
65012d37:	jmp    0x65012cba
65012d39:	mov    edx,DWORD PTR [ebp+0xc]
65012d3c:	mov    eax,DWORD PTR [edx]
65012d3e:	push   DWORD PTR [eax+0x4]
65012d41:	push   ecx
65012d42:	push   DWORD PTR [ebp-0x8]
65012d45:	push   0xffffffff
65012d47:	push   ebx
65012d48:	push   edi
65012d49:	push   DWORD PTR [eax+0x14]
65012d4c:	push   edx
65012d4d:	call   0x65017e6b
65012d52:	add    esp,0x20
65012d55:	test   eax,eax
65012d57:	je     0x65012d6c
65012d59:	push   DWORD PTR [ebp-0x8]
65012d5c:	push   DWORD PTR [ebp+0x8]
65012d5f:	push   ebx
65012d60:	call   0x65012b86
65012d65:	add    esp,0xc
65012d68:	mov    esi,eax
65012d6a:	jmp    0x65012d78
65012d6c:	call   0x650143a0
65012d71:	push   0x2a
65012d73:	pop    ecx
65012d74:	mov    DWORD PTR [eax],ecx
65012d76:	mov    esi,ecx
65012d78:	push   DWORD PTR [ebp-0x8]
65012d7b:	call   0x65012bf2
65012d80:	pop    ecx
65012d81:	mov    eax,esi
65012d83:	lea    esp,[ebp-0x14]
65012d86:	pop    edi
65012d87:	pop    esi
65012d88:	mov    ecx,DWORD PTR [ebp-0x4]
65012d8b:	xor    ecx,ebp
65012d8d:	call   0x6501275c
65012d92:	leave  
65012d93:	ret    
65012d94:	push   ebp
65012d95:	mov    ebp,esp
65012d97:	sub    esp,0x10
65012d9a:	push   ebx
65012d9b:	push   DWORD PTR [ebp+0x10]
65012d9e:	lea    ecx,[ebp-0x10]
65012da1:	call   0x650128ff
65012da6:	mov    ebx,DWORD PTR [ebp+0x8]
65012da9:	lea    eax,[ebp-0x10]
65012dac:	push   eax
65012dad:	push   DWORD PTR [ebp+0xc]
65012db0:	call   0x65012c0d
65012db5:	cmp    BYTE PTR [ebp-0x4],0x0
65012db9:	pop    ecx
65012dba:	pop    ecx
65012dbb:	pop    ebx
65012dbc:	je     0x65012dc5
65012dbe:	mov    ecx,DWORD PTR [ebp-0x8]
65012dc1:	and    DWORD PTR [ecx+0x70],0xfffffffd
65012dc5:	leave  
65012dc6:	ret    
65012dc7:	push   0x0
65012dc9:	push   DWORD PTR [esp+0xc]
65012dcd:	push   DWORD PTR [esp+0xc]
65012dd1:	call   0x65012d94
65012dd6:	add    esp,0xc
65012dd9:	ret    
65012dda:	jmp    0x65011f02
65012ddf:	int3   
65012de0:	mov    edx,DWORD PTR [esp+0xc]
65012de4:	mov    ecx,DWORD PTR [esp+0x4]
65012de8:	test   edx,edx
65012dea:	je     0x65012e55
65012dec:	xor    eax,eax
65012dee:	mov    al,BYTE PTR [esp+0x8]
65012df2:	test   al,al
65012df4:	jne    0x65012e0c
65012df6:	cmp    edx,0x100
65012dfc:	jb     0x65012e0c
65012dfe:	cmp    DWORD PTR ds:0x65031564,0x0
65012e05:	je     0x65012e0c
65012e07:	jmp    0x65017f1e
65012e0c:	push   edi
65012e0d:	mov    edi,ecx
65012e0f:	cmp    edx,0x4
65012e12:	jb     0x65012e45
65012e14:	neg    ecx
65012e16:	and    ecx,0x3
65012e19:	je     0x65012e27
65012e1b:	sub    edx,ecx
65012e1d:	mov    BYTE PTR [edi],al
65012e1f:	add    edi,0x1
65012e22:	sub    ecx,0x1
65012e25:	jne    0x65012e1d
65012e27:	mov    ecx,eax
65012e29:	shl    eax,0x8
65012e2c:	add    eax,ecx
65012e2e:	mov    ecx,eax
65012e30:	shl    eax,0x10
65012e33:	add    eax,ecx
65012e35:	mov    ecx,edx
65012e37:	and    edx,0x3
65012e3a:	shr    ecx,0x2
65012e3d:	je     0x65012e45
65012e3f:	rep stos DWORD PTR es:[edi],eax
65012e41:	test   edx,edx
65012e43:	je     0x65012e4f
65012e45:	mov    BYTE PTR [edi],al
65012e47:	add    edi,0x1
65012e4a:	sub    edx,0x1
65012e4d:	jne    0x65012e45
65012e4f:	mov    eax,DWORD PTR [esp+0x8]
65012e53:	pop    edi
65012e54:	ret    
65012e55:	mov    eax,DWORD PTR [esp+0x4]
65012e59:	ret    
65012e5a:	int3   
65012e5b:	int3   
65012e5c:	int3   
65012e5d:	int3   
65012e5e:	int3   
65012e5f:	int3   
65012e60:	push   ecx
65012e61:	lea    ecx,[esp+0x8]
65012e65:	sub    ecx,eax
65012e67:	and    ecx,0xf
65012e6a:	add    eax,ecx
65012e6c:	sbb    ecx,ecx
65012e6e:	or     eax,ecx
65012e70:	pop    ecx
65012e71:	jmp    0x65017fd0
65012e76:	push   ecx
65012e77:	lea    ecx,[esp+0x8]
65012e7b:	sub    ecx,eax
65012e7d:	and    ecx,0x7
65012e80:	add    eax,ecx
65012e82:	sbb    ecx,ecx
65012e84:	or     eax,ecx
65012e86:	pop    ecx
65012e87:	jmp    0x65017fd0
65012e8c:	call   0x650146eb
65012e91:	mov    ecx,DWORD PTR [esp+0x4]
65012e95:	mov    DWORD PTR [eax+0x14],ecx
65012e98:	ret    
65012e99:	call   0x650146eb
65012e9e:	mov    ecx,DWORD PTR [eax+0x14]
65012ea1:	imul   ecx,ecx,0x343fd
65012ea7:	add    ecx,0x269ec3
65012ead:	mov    DWORD PTR [eax+0x14],ecx
65012eb0:	mov    eax,ecx
65012eb2:	shr    eax,0x10
65012eb5:	and    eax,0x7fff
65012eba:	ret    
65012ebb:	int3   
65012ebc:	push   ebp
65012ebd:	mov    ebp,esp
65012ebf:	push   ecx
65012ec0:	mov    eax,DWORD PTR [ebp+0xc]
65012ec3:	cmp    eax,0x1
65012ec6:	push   ebx
65012ec7:	push   esi
65012ec8:	push   edi
65012ec9:	jne    0x65012fe6
65012ecf:	mov    ebx,DWORD PTR ds:0x65024104
65012ed5:	mov    edi,0x94
65012eda:	push   edi
65012edb:	push   0x0
65012edd:	call   ebx
65012edf:	push   eax
65012ee0:	call   DWORD PTR ds:0x650240f4
65012ee6:	mov    esi,eax
65012ee8:	test   esi,esi
65012eea:	jne    0x65012ef3
65012eec:	xor    eax,eax
65012eee:	jmp    0x6501308e
65012ef3:	push   esi
65012ef4:	mov    DWORD PTR [esi],edi
65012ef6:	call   DWORD PTR ds:0x650240e8
65012efc:	test   eax,eax
65012efe:	push   esi
65012eff:	push   0x0
65012f01:	jne    0x65012f0e
65012f03:	call   ebx
65012f05:	push   eax
65012f06:	call   DWORD PTR ds:0x650240f8
65012f0c:	jmp    0x65012eec
65012f0e:	mov    eax,DWORD PTR [esi+0x10]
65012f11:	mov    edi,DWORD PTR [esi+0xc]
65012f14:	mov    DWORD PTR [ebp+0xc],eax
65012f17:	mov    eax,DWORD PTR [esi+0x4]
65012f1a:	mov    DWORD PTR [ebp+0x10],eax
65012f1d:	mov    eax,DWORD PTR [esi+0x8]
65012f20:	mov    DWORD PTR [ebp-0x4],eax
65012f23:	and    edi,0x7fff
65012f29:	call   ebx
65012f2b:	push   eax
65012f2c:	call   DWORD PTR ds:0x650240f8
65012f32:	mov    eax,DWORD PTR [ebp+0xc]
65012f35:	cmp    eax,0x2
65012f38:	je     0x65012f40
65012f3a:	or     edi,0x8000
65012f40:	mov    ecx,DWORD PTR [ebp-0x4]
65012f43:	mov    ds:0x6502d8f4,eax
65012f48:	mov    eax,DWORD PTR [ebp+0x10]
65012f4b:	mov    edx,eax
65012f4d:	shl    edx,0x8
65012f50:	add    edx,ecx
65012f52:	push   0x1
65012f54:	mov    DWORD PTR ds:0x6502d8fc,edx
65012f5a:	mov    ds:0x6502d900,eax
65012f5f:	mov    DWORD PTR ds:0x6502d904,ecx
65012f65:	mov    DWORD PTR ds:0x6502d8f8,edi
65012f6b:	call   0x650187a1
65012f70:	test   eax,eax
65012f72:	pop    ecx
65012f73:	je     0x65012eec
65012f79:	call   0x6501488d
65012f7e:	test   eax,eax
65012f80:	jne    0x65012f8c
65012f82:	call   0x650187fb
65012f87:	jmp    0x65012eec
65012f8c:	call   0x650186fe
65012f91:	call   DWORD PTR ds:0x65024120
65012f97:	mov    ds:0x65031580,eax
65012f9c:	call   0x650185c9
65012fa1:	mov    ds:0x6502d594,eax
65012fa6:	call   0x65017ffd
65012fab:	test   eax,eax
65012fad:	jge    0x65012fb6
65012faf:	call   0x65014578
65012fb4:	jmp    0x65012f82
65012fb6:	call   0x65018510
65012fbb:	test   eax,eax
65012fbd:	jl     0x65012fdf
65012fbf:	call   0x6501829d
65012fc4:	test   eax,eax
65012fc6:	jl     0x65012fdf
65012fc8:	push   0x0
65012fca:	call   0x65015c42
65012fcf:	test   eax,eax
65012fd1:	pop    ecx
65012fd2:	jne    0x65012fdf
65012fd4:	inc    DWORD PTR ds:0x6502d590
65012fda:	jmp    0x6501308b
65012fdf:	call   0x65018251
65012fe4:	jmp    0x65012faf
65012fe6:	xor    edi,edi
65012fe8:	cmp    eax,edi
65012fea:	jne    0x65013021
65012fec:	cmp    DWORD PTR ds:0x6502d590,edi
65012ff2:	jle    0x65012eec
65012ff8:	dec    DWORD PTR ds:0x6502d590
65012ffe:	cmp    DWORD PTR ds:0x6502d930,edi
65013004:	jne    0x6501300b
65013006:	call   0x65015dc7
6501300b:	cmp    DWORD PTR [ebp+0x10],edi
6501300e:	jne    0x6501308b
65013010:	call   0x65018251
65013015:	call   0x65014578
6501301a:	call   0x650187fb
6501301f:	jmp    0x6501308b
65013021:	cmp    eax,0x2
65013024:	jne    0x6501307f
65013026:	call   0x65014546
6501302b:	push   0x214
65013030:	push   0x1
65013032:	call   0x650159f0
65013037:	mov    esi,eax
65013039:	cmp    esi,edi
6501303b:	pop    ecx
6501303c:	pop    ecx
6501303d:	je     0x65012eec
65013043:	push   esi
65013044:	push   DWORD PTR ds:0x6502c220
6501304a:	push   DWORD PTR ds:0x6502d5ac
65013050:	call   0x650144cf
65013055:	pop    ecx
65013056:	call   eax
65013058:	test   eax,eax
6501305a:	je     0x65013073
6501305c:	push   edi
6501305d:	push   esi
6501305e:	call   0x650145b5
65013063:	pop    ecx
65013064:	pop    ecx
65013065:	call   DWORD PTR ds:0x6502411c
6501306b:	or     DWORD PTR [esi+0x4],0xffffffff
6501306f:	mov    DWORD PTR [esi],eax
65013071:	jmp    0x6501308b
65013073:	push   esi
65013074:	call   0x65013577
65013079:	pop    ecx
6501307a:	jmp    0x65012eec
6501307f:	cmp    eax,0x3
65013082:	jne    0x6501308b
65013084:	push   edi
65013085:	call   0x65014824
6501308a:	pop    ecx
6501308b:	xor    eax,eax
6501308d:	inc    eax
6501308e:	pop    edi
6501308f:	pop    esi
65013090:	pop    ebx
65013091:	leave  
65013092:	ret    0xc
65013095:	push   0xc
65013097:	push   0x65029828
6501309c:	call   0x65013ca0
650130a1:	mov    edi,ecx
650130a3:	mov    esi,edx
650130a5:	mov    ebx,DWORD PTR [ebp+0x8]
650130a8:	xor    eax,eax
650130aa:	inc    eax
650130ab:	mov    DWORD PTR [ebp-0x1c],eax
650130ae:	test   esi,esi
650130b0:	jne    0x650130be
650130b2:	cmp    DWORD PTR ds:0x6502d590,edx
650130b8:	je     0x65013183
650130be:	and    DWORD PTR [ebp-0x4],0x0
650130c2:	cmp    esi,eax
650130c4:	je     0x650130cb
650130c6:	cmp    esi,0x2
650130c9:	jne    0x650130f9
650130cb:	mov    eax,ds:0x65024bec
650130d0:	test   eax,eax
650130d2:	je     0x650130dc
650130d4:	push   edi
650130d5:	push   esi
650130d6:	push   ebx
650130d7:	call   eax
650130d9:	mov    DWORD PTR [ebp-0x1c],eax
650130dc:	cmp    DWORD PTR [ebp-0x1c],0x0
650130e0:	je     0x6501317c
650130e6:	push   edi
650130e7:	push   esi
650130e8:	push   ebx
650130e9:	call   0x65012ebc
650130ee:	mov    DWORD PTR [ebp-0x1c],eax
650130f1:	test   eax,eax
650130f3:	je     0x6501317c
650130f9:	push   edi
650130fa:	push   esi
650130fb:	push   ebx
650130fc:	call   0x6500f4d0
65013101:	mov    DWORD PTR [ebp-0x1c],eax
65013104:	cmp    esi,0x1
65013107:	jne    0x6501312d
65013109:	test   eax,eax
6501310b:	jne    0x6501312d
6501310d:	push   edi
6501310e:	push   eax
6501310f:	push   ebx
65013110:	call   0x6500f4d0
65013115:	push   edi
65013116:	push   0x0
65013118:	push   ebx
65013119:	call   0x65012ebc
6501311e:	mov    eax,ds:0x65024bec
65013123:	test   eax,eax
65013125:	je     0x6501312d
65013127:	push   edi
65013128:	push   0x0
6501312a:	push   ebx
6501312b:	call   eax
6501312d:	test   esi,esi
6501312f:	je     0x65013136
65013131:	cmp    esi,0x3
65013134:	jne    0x6501315c
65013136:	push   edi
65013137:	push   esi
65013138:	push   ebx
65013139:	call   0x65012ebc
6501313e:	test   eax,eax
65013140:	jne    0x65013145
65013142:	and    DWORD PTR [ebp-0x1c],eax
65013145:	cmp    DWORD PTR [ebp-0x1c],0x0
65013149:	je     0x6501315c
6501314b:	mov    eax,ds:0x65024bec
65013150:	test   eax,eax
65013152:	je     0x6501315c
65013154:	push   edi
65013155:	push   esi
65013156:	push   ebx
65013157:	call   eax
65013159:	mov    DWORD PTR [ebp-0x1c],eax
6501315c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013163:	mov    eax,DWORD PTR [ebp-0x1c]
65013166:	jmp    0x65013185
65013168:	mov    eax,DWORD PTR [ebp-0x14]
6501316b:	mov    ecx,DWORD PTR [eax]
6501316d:	mov    ecx,DWORD PTR [ecx]
6501316f:	push   eax
65013170:	push   ecx
65013171:	call   0x650189cd
65013176:	pop    ecx
65013177:	pop    ecx
65013178:	ret    
65013179:	mov    esp,DWORD PTR [ebp-0x18]
6501317c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013183:	xor    eax,eax
65013185:	call   0x65013ce5
6501318a:	ret    
6501318b:	cmp    DWORD PTR [esp+0x8],0x1
65013190:	jne    0x65013197
65013192:	call   0x650189e8
65013197:	push   DWORD PTR [esp+0x4]
6501319b:	mov    ecx,DWORD PTR [esp+0x10]
6501319f:	mov    edx,DWORD PTR [esp+0xc]
650131a3:	call   0x65013095
650131a8:	pop    ecx
650131a9:	ret    0xc
650131ac:	mov    eax,DWORD PTR [esp+0x4]
650131b0:	mov    dx,WORD PTR [esp+0x8]
650131b5:	jmp    0x650131be
650131b7:	cmp    cx,dx
650131ba:	je     0x650131cd
650131bc:	inc    eax
650131bd:	inc    eax
650131be:	movzx  ecx,WORD PTR [eax]
650131c1:	test   cx,cx
650131c4:	jne    0x650131b7
650131c6:	cmp    WORD PTR [eax],dx
650131c9:	je     0x650131cd
650131cb:	xor    eax,eax
650131cd:	ret    
650131ce:	cmp    DWORD PTR [esp+0x8],0x0
650131d3:	je     0x650131db
650131d5:	mov    BYTE PTR [ecx],0x2d
650131d8:	inc    ecx
650131d9:	neg    eax
650131db:	push   esi
650131dc:	mov    esi,ecx
650131de:	xor    edx,edx
650131e0:	div    DWORD PTR [esp+0x8]
650131e4:	cmp    edx,0x9
650131e7:	jbe    0x650131ee
650131e9:	add    dl,0x57
650131ec:	jmp    0x650131f1
650131ee:	add    dl,0x30
650131f1:	mov    BYTE PTR [ecx],dl
650131f3:	inc    ecx
650131f4:	test   eax,eax
650131f6:	ja     0x650131de
650131f8:	mov    BYTE PTR [ecx],0x0
650131fb:	dec    ecx
650131fc:	mov    dl,BYTE PTR [esi]
650131fe:	mov    al,BYTE PTR [ecx]
65013200:	mov    BYTE PTR [ecx],dl
65013202:	dec    ecx
65013203:	mov    BYTE PTR [esi],al
65013205:	inc    esi
65013206:	cmp    esi,ecx
65013208:	jb     0x650131fc
6501320a:	pop    esi
6501320b:	ret    0x8
6501320e:	push   ebp
6501320f:	mov    ebp,esp
65013211:	xor    eax,eax
65013213:	cmp    DWORD PTR [ebp+0x10],0xa
65013217:	jne    0x6501321f
65013219:	cmp    DWORD PTR [ebp+0x8],eax
6501321c:	jge    0x6501321f
6501321e:	inc    eax
6501321f:	mov    ecx,DWORD PTR [ebp+0xc]
65013222:	push   eax
65013223:	push   DWORD PTR [ebp+0x10]
65013226:	mov    eax,DWORD PTR [ebp+0x8]
65013229:	call   0x650131ce
6501322e:	mov    eax,DWORD PTR [ebp+0xc]
65013231:	pop    ebp
65013232:	ret    
65013233:	push   ebp
65013234:	mov    ebp,esp
65013236:	sub    esp,0x20
65013239:	push   ebx
6501323a:	xor    ebx,ebx
6501323c:	cmp    DWORD PTR [ebp+0xc],ebx
6501323f:	jne    0x6501325e
65013241:	call   0x650143a0
65013246:	push   ebx
65013247:	push   ebx
65013248:	push   ebx
65013249:	push   ebx
6501324a:	push   ebx
6501324b:	mov    DWORD PTR [eax],0x16
65013251:	call   0x6501224f
65013256:	add    esp,0x14
65013259:	or     eax,0xffffffff
6501325c:	jmp    0x650132ab
6501325e:	mov    eax,DWORD PTR [ebp+0x8]
65013261:	cmp    eax,ebx
65013263:	je     0x65013241
65013265:	push   esi
65013266:	mov    DWORD PTR [ebp-0x18],eax
65013269:	mov    DWORD PTR [ebp-0x20],eax
6501326c:	lea    eax,[ebp+0x10]
6501326f:	push   eax
65013270:	push   ebx
65013271:	push   DWORD PTR [ebp+0xc]
65013274:	lea    eax,[ebp-0x20]
65013277:	push   eax
65013278:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6501327f:	mov    DWORD PTR [ebp-0x14],0x42
65013286:	call   0x65018b5f
6501328b:	add    esp,0x10
6501328e:	dec    DWORD PTR [ebp-0x1c]
65013291:	mov    esi,eax
65013293:	js     0x6501329c
65013295:	mov    eax,DWORD PTR [ebp-0x20]
65013298:	mov    BYTE PTR [eax],bl
6501329a:	jmp    0x650132a8
6501329c:	lea    eax,[ebp-0x20]
6501329f:	push   eax
650132a0:	push   ebx
650132a1:	call   0x650167e5
650132a6:	pop    ecx
650132a7:	pop    ecx
650132a8:	mov    eax,esi
650132aa:	pop    esi
650132ab:	pop    ebx
650132ac:	leave  
650132ad:	ret    
650132ae:	lea    eax,[esp+0x10]
650132b2:	push   eax
650132b3:	push   0x0
650132b5:	push   DWORD PTR [esp+0x14]
650132b9:	push   DWORD PTR [esp+0x14]
650132bd:	push   DWORD PTR [esp+0x14]
650132c1:	call   0x650195bd
650132c6:	add    esp,0x14
650132c9:	ret    
650132ca:	push   ebp
650132cb:	mov    ebp,esp
650132cd:	sub    esp,0x10
650132d0:	push   DWORD PTR [ebp+0xc]
650132d3:	lea    ecx,[ebp-0x10]
650132d6:	call   0x650128ff
650132db:	mov    eax,DWORD PTR [ebp-0x10]
650132de:	cmp    DWORD PTR [eax+0xac],0x1
650132e5:	jle    0x650132fa
650132e7:	lea    eax,[ebp-0x10]
650132ea:	push   eax
650132eb:	push   0x4
650132ed:	push   DWORD PTR [ebp+0x8]
650132f0:	call   0x65019643
650132f5:	add    esp,0xc
650132f8:	jmp    0x6501330a
650132fa:	mov    eax,DWORD PTR [eax+0xc8]
65013300:	mov    ecx,DWORD PTR [ebp+0x8]
65013303:	movzx  eax,BYTE PTR [eax+ecx*2]
65013307:	and    eax,0x4
6501330a:	cmp    BYTE PTR [ebp-0x4],0x0
6501330e:	je     0x65013317
65013310:	mov    ecx,DWORD PTR [ebp-0x8]
65013313:	and    DWORD PTR [ecx+0x70],0xfffffffd
65013317:	leave  
65013318:	ret    
65013319:	cmp    DWORD PTR ds:0x6502d954,0x0
65013320:	jne    0x65013334
65013322:	mov    eax,DWORD PTR [esp+0x4]
65013326:	mov    ecx,DWORD PTR ds:0x6502c860
6501332c:	movzx  eax,BYTE PTR [ecx+eax*2]
65013330:	and    eax,0x4
65013333:	ret    
65013334:	push   0x0
65013336:	push   DWORD PTR [esp+0x8]
6501333a:	call   0x650132ca
6501333f:	pop    ecx
65013340:	pop    ecx
65013341:	ret    
65013342:	push   ebp
65013343:	mov    ebp,esp
65013345:	sub    esp,0x10
65013348:	push   DWORD PTR [ebp+0xc]
6501334b:	lea    ecx,[ebp-0x10]
6501334e:	call   0x650128ff
65013353:	mov    eax,DWORD PTR [ebp-0x10]
65013356:	cmp    DWORD PTR [eax+0xac],0x1
6501335d:	jle    0x65013372
6501335f:	lea    eax,[ebp-0x10]
65013362:	push   eax
65013363:	push   0x8
65013365:	push   DWORD PTR [ebp+0x8]
65013368:	call   0x65019643
6501336d:	add    esp,0xc
65013370:	jmp    0x65013382
65013372:	mov    eax,DWORD PTR [eax+0xc8]
65013378:	mov    ecx,DWORD PTR [ebp+0x8]
6501337b:	movzx  eax,BYTE PTR [eax+ecx*2]
6501337f:	and    eax,0x8
65013382:	cmp    BYTE PTR [ebp-0x4],0x0
65013386:	je     0x6501338f
65013388:	mov    ecx,DWORD PTR [ebp-0x8]
6501338b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501338f:	leave  
65013390:	ret    
65013391:	cmp    DWORD PTR ds:0x6502d954,0x0
65013398:	jne    0x650133ac
6501339a:	mov    eax,DWORD PTR [esp+0x4]
6501339e:	mov    ecx,DWORD PTR ds:0x6502c860
650133a4:	movzx  eax,BYTE PTR [ecx+eax*2]
650133a8:	and    eax,0x8
650133ab:	ret    
650133ac:	push   0x0
650133ae:	push   DWORD PTR [esp+0x8]
650133b2:	call   0x65013342
650133b7:	pop    ecx
650133b8:	pop    ecx
650133b9:	ret    
650133ba:	push   ebp
650133bb:	mov    ebp,esp
650133bd:	sub    esp,0x10
650133c0:	push   DWORD PTR [ebp+0xc]
650133c3:	lea    ecx,[ebp-0x10]
650133c6:	call   0x650128ff
650133cb:	mov    eax,DWORD PTR [ebp-0x10]
650133ce:	cmp    DWORD PTR [eax+0xac],0x1
650133d5:	jle    0x650133ed
650133d7:	lea    eax,[ebp-0x10]
650133da:	push   eax
650133db:	push   0x157
650133e0:	push   DWORD PTR [ebp+0x8]
650133e3:	call   0x65019643
650133e8:	add    esp,0xc
650133eb:	jmp    0x650133ff
650133ed:	mov    eax,DWORD PTR [eax+0xc8]
650133f3:	mov    ecx,DWORD PTR [ebp+0x8]
650133f6:	movzx  eax,WORD PTR [eax+ecx*2]
650133fa:	and    eax,0x157
650133ff:	cmp    BYTE PTR [ebp-0x4],0x0
65013403:	je     0x6501340c
65013405:	mov    ecx,DWORD PTR [ebp-0x8]
65013408:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501340c:	leave  
6501340d:	ret    
6501340e:	cmp    DWORD PTR ds:0x6502d954,0x0
65013415:	jne    0x6501342b
65013417:	mov    eax,DWORD PTR [esp+0x4]
6501341b:	mov    ecx,DWORD PTR ds:0x6502c860
65013421:	movzx  eax,WORD PTR [ecx+eax*2]
65013425:	and    eax,0x157
6501342a:	ret    
6501342b:	push   0x0
6501342d:	push   DWORD PTR [esp+0x8]
65013431:	call   0x650133ba
65013436:	pop    ecx
65013437:	pop    ecx
65013438:	ret    
65013439:	push   ebp
6501343a:	mov    ebp,esp
6501343c:	sub    esp,0x18
6501343f:	push   ebx
65013440:	push   esi
65013441:	push   DWORD PTR [ebp+0xc]
65013444:	lea    ecx,[ebp-0x18]
65013447:	call   0x650128ff
6501344c:	mov    ebx,DWORD PTR [ebp+0x8]
6501344f:	mov    esi,0x100
65013454:	cmp    ebx,esi
65013456:	jae    0x650134ac
65013458:	mov    ecx,DWORD PTR [ebp-0x18]
6501345b:	cmp    DWORD PTR [ecx+0xac],0x1
65013462:	jle    0x65013478
65013464:	lea    eax,[ebp-0x18]
65013467:	push   eax
65013468:	push   0x1
6501346a:	push   ebx
6501346b:	call   0x65019643
65013470:	mov    ecx,DWORD PTR [ebp-0x18]
65013473:	add    esp,0xc
65013476:	jmp    0x65013485
65013478:	mov    eax,DWORD PTR [ecx+0xc8]
6501347e:	movzx  eax,BYTE PTR [eax+ebx*2]
65013482:	and    eax,0x1
65013485:	test   eax,eax
65013487:	je     0x65013498
65013489:	mov    eax,DWORD PTR [ecx+0xcc]
6501348f:	movzx  eax,BYTE PTR [eax+ebx*1]
65013493:	jmp    0x6501353f
65013498:	cmp    BYTE PTR [ebp-0xc],0x0
6501349c:	je     0x650134a5
6501349e:	mov    eax,DWORD PTR [ebp-0x10]
650134a1:	and    DWORD PTR [eax+0x70],0xfffffffd
650134a5:	mov    eax,ebx
650134a7:	jmp    0x6501354c
650134ac:	mov    eax,DWORD PTR [ebp-0x18]
650134af:	cmp    DWORD PTR [eax+0xac],0x1
650134b6:	jle    0x650134e9
650134b8:	mov    DWORD PTR [ebp+0x8],ebx
650134bb:	sar    DWORD PTR [ebp+0x8],0x8
650134bf:	lea    eax,[ebp-0x18]
650134c2:	push   eax
650134c3:	mov    eax,DWORD PTR [ebp+0x8]
650134c6:	and    eax,0xff
650134cb:	push   eax
650134cc:	call   0x65019ade
650134d1:	test   eax,eax
650134d3:	pop    ecx
650134d4:	pop    ecx
650134d5:	je     0x650134e9
650134d7:	mov    al,BYTE PTR [ebp+0x8]
650134da:	push   0x2
650134dc:	mov    BYTE PTR [ebp-0x4],al
650134df:	mov    BYTE PTR [ebp-0x3],bl
650134e2:	mov    BYTE PTR [ebp-0x2],0x0
650134e6:	pop    ecx
650134e7:	jmp    0x650134fe
650134e9:	call   0x650143a0
650134ee:	mov    DWORD PTR [eax],0x2a
650134f4:	xor    ecx,ecx
650134f6:	mov    BYTE PTR [ebp-0x4],bl
650134f9:	mov    BYTE PTR [ebp-0x3],0x0
650134fd:	inc    ecx
650134fe:	mov    eax,DWORD PTR [ebp-0x18]
65013501:	push   0x1
65013503:	push   DWORD PTR [eax+0x4]
65013506:	lea    edx,[ebp-0x8]
65013509:	push   0x3
6501350b:	push   edx
6501350c:	push   ecx
6501350d:	lea    ecx,[ebp-0x4]
65013510:	push   ecx
65013511:	push   esi
65013512:	push   DWORD PTR [eax+0x14]
65013515:	lea    eax,[ebp-0x18]
65013518:	push   eax
65013519:	call   0x65019a9b
6501351e:	add    esp,0x24
65013521:	test   eax,eax
65013523:	je     0x65013498
65013529:	cmp    eax,0x1
6501352c:	jne    0x65013534
6501352e:	movzx  eax,BYTE PTR [ebp-0x8]
65013532:	jmp    0x6501353f
65013534:	movzx  ecx,BYTE PTR [ebp-0x7]
65013538:	xor    eax,eax
6501353a:	mov    ah,BYTE PTR [ebp-0x8]
6501353d:	or     eax,ecx
6501353f:	cmp    BYTE PTR [ebp-0xc],0x0
65013543:	je     0x6501354c
65013545:	mov    ecx,DWORD PTR [ebp-0x10]
65013548:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501354c:	pop    esi
6501354d:	pop    ebx
6501354e:	leave  
6501354f:	ret    
65013550:	cmp    DWORD PTR ds:0x6502d954,0x0
65013557:	jne    0x65013569
65013559:	mov    eax,DWORD PTR [esp+0x4]
6501355d:	lea    ecx,[eax-0x41]
65013560:	cmp    ecx,0x19
65013563:	ja     0x65013576
65013565:	add    eax,0x20
65013568:	ret    
65013569:	push   0x0
6501356b:	push   DWORD PTR [esp+0x8]
6501356f:	call   0x65013439
65013574:	pop    ecx
65013575:	pop    ecx
65013576:	ret    
65013577:	push   0xc
65013579:	push   0x65029848
6501357e:	call   0x65013ca0
65013583:	mov    esi,DWORD PTR [ebp+0x8]
65013586:	test   esi,esi
65013588:	je     0x650135ff
6501358a:	cmp    DWORD PTR ds:0x6503143c,0x3
65013591:	jne    0x650135d6
65013593:	push   0x4
65013595:	call   0x65019c98
6501359a:	pop    ecx
6501359b:	and    DWORD PTR [ebp-0x4],0x0
6501359f:	push   esi
650135a0:	call   0x65019d11
650135a5:	pop    ecx
650135a6:	mov    DWORD PTR [ebp-0x1c],eax
650135a9:	test   eax,eax
650135ab:	je     0x650135b6
650135ad:	push   esi
650135ae:	push   eax
650135af:	call   0x65019d3f
650135b4:	pop    ecx
650135b5:	pop    ecx
650135b6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650135bd:	call   0x650135cd
650135c2:	cmp    DWORD PTR [ebp-0x1c],0x0
650135c6:	jne    0x650135ff
650135c8:	push   DWORD PTR [ebp+0x8]
650135cb:	jmp    0x650135d7
650135cd:	push   0x4
650135cf:	call   0x65019bc0
650135d4:	pop    ecx
650135d5:	ret    
650135d6:	push   esi
650135d7:	push   0x0
650135d9:	push   DWORD PTR ds:0x6502da8c
650135df:	call   DWORD PTR ds:0x650240f8
650135e5:	test   eax,eax
650135e7:	jne    0x650135ff
650135e9:	call   0x650143a0
650135ee:	mov    esi,eax
650135f0:	call   DWORD PTR ds:0x65024044
650135f6:	push   eax
650135f7:	call   0x65014365
650135fc:	mov    DWORD PTR [esi],eax
650135fe:	pop    ecx
650135ff:	call   0x65013ce5
65013604:	ret    
65013605:	push   0xc
65013607:	push   0x65029868
6501360c:	call   0x65013ca0
65013611:	and    DWORD PTR [ebp-0x1c],0x0
65013615:	mov    esi,DWORD PTR [ebp+0x8]
65013618:	cmp    esi,DWORD PTR ds:0x6503142c
6501361e:	ja     0x65013642
65013620:	push   0x4
65013622:	call   0x65019c98
65013627:	pop    ecx
65013628:	and    DWORD PTR [ebp-0x4],0x0
6501362c:	push   esi
6501362d:	call   0x6501a4e8
65013632:	pop    ecx
65013633:	mov    DWORD PTR [ebp-0x1c],eax
65013636:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501363d:	call   0x6501364b
65013642:	mov    eax,DWORD PTR [ebp-0x1c]
65013645:	call   0x65013ce5
6501364a:	ret    
6501364b:	push   0x4
6501364d:	call   0x65019bc0
65013652:	pop    ecx
65013653:	ret    
65013654:	push   ebp
65013655:	mov    ebp,DWORD PTR [esp+0x8]
65013659:	cmp    ebp,0xffffffe0
6501365c:	ja     0x65013701
65013662:	push   ebx
65013663:	mov    ebx,DWORD PTR ds:0x650240f4
65013669:	push   esi
6501366a:	push   edi
6501366b:	xor    esi,esi
6501366d:	cmp    DWORD PTR ds:0x6502da8c,esi
65013673:	mov    edi,ebp
65013675:	jne    0x6501368f
65013677:	call   0x6501a96b
6501367c:	push   0x1e
6501367e:	call   0x6501a7cb
65013683:	push   0xff
65013688:	call   0x65015b70
6501368d:	pop    ecx
6501368e:	pop    ecx
6501368f:	mov    eax,ds:0x6503143c
65013694:	cmp    eax,0x1
65013697:	jne    0x650136a7
65013699:	cmp    ebp,esi
6501369b:	je     0x650136a1
6501369d:	mov    eax,ebp
6501369f:	jmp    0x650136a4
650136a1:	xor    eax,eax
650136a3:	inc    eax
650136a4:	push   eax
650136a5:	jmp    0x650136c5
650136a7:	cmp    eax,0x3
650136aa:	jne    0x650136b7
650136ac:	push   ebp
650136ad:	call   0x65013605
650136b2:	cmp    eax,esi
650136b4:	pop    ecx
650136b5:	jne    0x650136ce
650136b7:	cmp    ebp,esi
650136b9:	jne    0x650136be
650136bb:	xor    edi,edi
650136bd:	inc    edi
650136be:	add    edi,0xf
650136c1:	and    edi,0xfffffff0
650136c4:	push   edi
650136c5:	push   esi
650136c6:	push   DWORD PTR ds:0x6502da8c
650136cc:	call   ebx
650136ce:	mov    esi,eax
650136d0:	test   esi,esi
650136d2:	jne    0x650136fa
650136d4:	cmp    DWORD PTR ds:0x6502df04,eax
650136da:	push   0xc
650136dc:	pop    edi
650136dd:	je     0x650136ec
650136df:	push   ebp
650136e0:	call   0x65014a1b
650136e5:	test   eax,eax
650136e7:	pop    ecx
650136e8:	jne    0x6501366b
650136ea:	jmp    0x650136f3
650136ec:	call   0x650143a0
650136f1:	mov    DWORD PTR [eax],edi
650136f3:	call   0x650143a0
650136f8:	mov    DWORD PTR [eax],edi
650136fa:	pop    edi
650136fb:	mov    eax,esi
650136fd:	pop    esi
650136fe:	pop    ebx
650136ff:	pop    ebp
65013700:	ret    
65013701:	push   ebp
65013702:	call   0x65014a1b
65013707:	pop    ecx
65013708:	call   0x650143a0
6501370d:	mov    DWORD PTR [eax],0xc
65013713:	xor    eax,eax
65013715:	pop    ebp
65013716:	ret    
65013717:	int3   
65013718:	int3   
65013719:	int3   
6501371a:	int3   
6501371b:	int3   
6501371c:	int3   
6501371d:	int3   
6501371e:	int3   
6501371f:	int3   
65013720:	push   ebp
65013721:	mov    ebp,esp
65013723:	push   edi
65013724:	push   esi
65013725:	mov    esi,DWORD PTR [ebp+0xc]
65013728:	mov    ecx,DWORD PTR [ebp+0x10]
6501372b:	mov    edi,DWORD PTR [ebp+0x8]
6501372e:	mov    eax,ecx
65013730:	mov    edx,ecx
65013732:	add    eax,esi
65013734:	cmp    edi,esi
65013736:	jbe    0x65013740
65013738:	cmp    edi,eax
6501373a:	jb     0x650138e4
65013740:	cmp    ecx,0x100
65013746:	jb     0x65013767
65013748:	cmp    DWORD PTR ds:0x65031564,0x0
6501374f:	je     0x65013767
65013751:	push   edi
65013752:	push   esi
65013753:	and    edi,0xf
65013756:	and    esi,0xf
65013759:	cmp    edi,esi
6501375b:	pop    esi
6501375c:	pop    edi
6501375d:	jne    0x65013767
6501375f:	pop    esi
65013760:	pop    edi
65013761:	pop    ebp
65013762:	jmp    0x6501aa2b
65013767:	test   edi,0x3
6501376d:	jne    0x65013784
6501376f:	shr    ecx,0x2
65013772:	and    edx,0x3
65013775:	cmp    ecx,0x8
65013778:	jb     0x650137a4
6501377a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501377c:	jmp    DWORD PTR [edx*4+0x65013894]
65013783:	nop
65013784:	mov    eax,edi
65013786:	mov    edx,0x3
6501378b:	sub    ecx,0x4
6501378e:	jb     0x6501379c
65013790:	and    eax,0x3
65013793:	add    ecx,eax
65013795:	jmp    DWORD PTR [eax*4+0x650137a8]
6501379c:	jmp    DWORD PTR [ecx*4+0x650138a4]
650137a3:	nop
650137a4:	jmp    DWORD PTR [ecx*4+0x65013828]
650137ab:	nop
650137ac:	mov    eax,0xe4650137
650137b1:	aaa    
650137b2:	add    DWORD PTR [ebp+0x8],esp
650137b5:	cmp    BYTE PTR [ecx],al
650137b7:	gs and edx,ecx
650137ba:	mov    al,BYTE PTR [esi]
650137bc:	mov    BYTE PTR [edi],al
650137be:	mov    al,BYTE PTR [esi+0x1]
650137c1:	mov    BYTE PTR [edi+0x1],al
650137c4:	mov    al,BYTE PTR [esi+0x2]
650137c7:	shr    ecx,0x2
650137ca:	mov    BYTE PTR [edi+0x2],al
650137cd:	add    esi,0x3
650137d0:	add    edi,0x3
650137d3:	cmp    ecx,0x8
650137d6:	jb     0x650137a4
650137d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650137da:	jmp    DWORD PTR [edx*4+0x65013894]
650137e1:	lea    ecx,[ecx+0x0]
650137e4:	and    edx,ecx
650137e6:	mov    al,BYTE PTR [esi]
650137e8:	mov    BYTE PTR [edi],al
650137ea:	mov    al,BYTE PTR [esi+0x1]
650137ed:	shr    ecx,0x2
650137f0:	mov    BYTE PTR [edi+0x1],al
650137f3:	add    esi,0x2
650137f6:	add    edi,0x2
650137f9:	cmp    ecx,0x8
650137fc:	jb     0x650137a4
650137fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013800:	jmp    DWORD PTR [edx*4+0x65013894]
65013807:	nop
65013808:	and    edx,ecx
6501380a:	mov    al,BYTE PTR [esi]
6501380c:	mov    BYTE PTR [edi],al
6501380e:	add    esi,0x1
65013811:	shr    ecx,0x2
65013814:	add    edi,0x1
65013817:	cmp    ecx,0x8
6501381a:	jb     0x650137a4
6501381c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501381e:	jmp    DWORD PTR [edx*4+0x65013894]
65013825:	lea    ecx,[ecx+0x0]
65013828:	mov    edi,DWORD PTR [eax]
6501382a:	add    DWORD PTR [ebp+0x78],esp
6501382d:	cmp    BYTE PTR [ecx],al
6501382f:	gs jo  0x6501386a
65013832:	add    DWORD PTR [ebp+0x68],esp
65013835:	cmp    BYTE PTR [ecx],al
65013837:	gs pusha 
65013839:	cmp    BYTE PTR [ecx],al
6501383b:	gs pop eax
6501383d:	cmp    BYTE PTR [ecx],al
6501383f:	gs push eax
65013841:	cmp    BYTE PTR [ecx],al
65013843:	gs dec eax
65013845:	cmp    BYTE PTR [ecx],al
65013847:	mov    eax,DWORD PTR gs:[esi+ecx*4-0x1c]
6501384c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
65013850:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
65013854:	mov    DWORD PTR [edi+ecx*4-0x18],eax
65013858:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6501385c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
65013860:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
65013864:	mov    DWORD PTR [edi+ecx*4-0x10],eax
65013868:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6501386c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
65013870:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
65013874:	mov    DWORD PTR [edi+ecx*4-0x8],eax
65013878:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6501387c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
65013880:	lea    eax,[ecx*4+0x0]
65013887:	add    esi,eax
65013889:	add    edi,eax
6501388b:	jmp    DWORD PTR [edx*4+0x65013894]
65013892:	mov    edi,edi
65013894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
65013895:	cmp    BYTE PTR [ecx],al
65013897:	lods   al,BYTE PTR gs:[esi]
65013899:	cmp    BYTE PTR [ecx],al
6501389b:	gs mov eax,0xcc650138
650138a1:	cmp    BYTE PTR [ecx],al
650138a3:	mov    eax,DWORD PTR gs:[ebp+0x8]
650138a7:	pop    esi
650138a8:	pop    edi
650138a9:	leave  
650138aa:	ret    
650138ab:	nop
650138ac:	mov    al,BYTE PTR [esi]
650138ae:	mov    BYTE PTR [edi],al
650138b0:	mov    eax,DWORD PTR [ebp+0x8]
650138b3:	pop    esi
650138b4:	pop    edi
650138b5:	leave  
650138b6:	ret    
650138b7:	nop
650138b8:	mov    al,BYTE PTR [esi]
650138ba:	mov    BYTE PTR [edi],al
650138bc:	mov    al,BYTE PTR [esi+0x1]
650138bf:	mov    BYTE PTR [edi+0x1],al
650138c2:	mov    eax,DWORD PTR [ebp+0x8]
650138c5:	pop    esi
650138c6:	pop    edi
650138c7:	leave  
650138c8:	ret    
650138c9:	lea    ecx,[ecx+0x0]
650138cc:	mov    al,BYTE PTR [esi]
650138ce:	mov    BYTE PTR [edi],al
650138d0:	mov    al,BYTE PTR [esi+0x1]
650138d3:	mov    BYTE PTR [edi+0x1],al
650138d6:	mov    al,BYTE PTR [esi+0x2]
650138d9:	mov    BYTE PTR [edi+0x2],al
650138dc:	mov    eax,DWORD PTR [ebp+0x8]
650138df:	pop    esi
650138e0:	pop    edi
650138e1:	leave  
650138e2:	ret    
650138e3:	nop
650138e4:	lea    esi,[ecx+esi*1-0x4]
650138e8:	lea    edi,[ecx+edi*1-0x4]
650138ec:	test   edi,0x3
650138f2:	jne    0x65013918
650138f4:	shr    ecx,0x2
650138f7:	and    edx,0x3
650138fa:	cmp    ecx,0x8
650138fd:	jb     0x6501390c
650138ff:	std    
65013900:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013902:	cld    
65013903:	jmp    DWORD PTR [edx*4+0x65013a30]
6501390a:	mov    edi,edi
6501390c:	neg    ecx
6501390e:	jmp    DWORD PTR [ecx*4+0x650139e0]
65013915:	lea    ecx,[ecx+0x0]
65013918:	mov    eax,edi
6501391a:	mov    edx,0x3
6501391f:	cmp    ecx,0x4
65013922:	jb     0x65013930
65013924:	and    eax,0x3
65013927:	sub    ecx,eax
65013929:	jmp    DWORD PTR [eax*4+0x65013934]
65013930:	jmp    DWORD PTR [ecx*4+0x65013a30]
65013937:	nop
65013938:	inc    esp
65013939:	cmp    DWORD PTR [ecx],eax
6501393b:	gs push 0x90650139
65013941:	cmp    DWORD PTR [ecx],eax
65013943:	mov    al,BYTE PTR gs:[esi+0x3]
65013947:	and    edx,ecx
65013949:	mov    BYTE PTR [edi+0x3],al
6501394c:	sub    esi,0x1
6501394f:	shr    ecx,0x2
65013952:	sub    edi,0x1
65013955:	cmp    ecx,0x8
65013958:	jb     0x6501390c
6501395a:	std    
6501395b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501395d:	cld    
6501395e:	jmp    DWORD PTR [edx*4+0x65013a30]
65013965:	lea    ecx,[ecx+0x0]
65013968:	mov    al,BYTE PTR [esi+0x3]
6501396b:	and    edx,ecx
6501396d:	mov    BYTE PTR [edi+0x3],al
65013970:	mov    al,BYTE PTR [esi+0x2]
65013973:	shr    ecx,0x2
65013976:	mov    BYTE PTR [edi+0x2],al
65013979:	sub    esi,0x2
6501397c:	sub    edi,0x2
6501397f:	cmp    ecx,0x8
65013982:	jb     0x6501390c
65013984:	std    
65013985:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65013987:	cld    
65013988:	jmp    DWORD PTR [edx*4+0x65013a30]
6501398f:	nop
65013990:	mov    al,BYTE PTR [esi+0x3]
65013993:	and    edx,ecx
65013995:	mov    BYTE PTR [edi+0x3],al
65013998:	mov    al,BYTE PTR [esi+0x2]
6501399b:	mov    BYTE PTR [edi+0x2],al
6501399e:	mov    al,BYTE PTR [esi+0x1]
650139a1:	shr    ecx,0x2
650139a4:	mov    BYTE PTR [edi+0x1],al
650139a7:	sub    esi,0x3
650139aa:	sub    edi,0x3
650139ad:	cmp    ecx,0x8
650139b0:	jb     0x6501390c
650139b6:	std    
650139b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650139b9:	cld    
650139ba:	jmp    DWORD PTR [edx*4+0x65013a30]
650139c1:	lea    ecx,[ecx+0x0]
650139c4:	in     al,0x39
650139c6:	add    DWORD PTR [ebp-0x14],esp
650139c9:	cmp    DWORD PTR [ecx],eax
650139cb:	gs hlt 
650139cd:	cmp    DWORD PTR [ecx],eax
650139cf:	gs cld 
650139d1:	cmp    DWORD PTR [ecx],eax
650139d3:	gs add al,0x3a
650139d6:	add    DWORD PTR [ebp+0xc],esp
650139d9:	cmp    al,BYTE PTR [ecx]
650139db:	gs adc al,0x3a
650139de:	add    DWORD PTR [ebp+0x27],esp
650139e1:	cmp    al,BYTE PTR [ecx]
650139e3:	mov    eax,DWORD PTR gs:[esi+ecx*4+0x1c]
650139e8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
650139ec:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
650139f0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
650139f4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
650139f8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
650139fc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
65013a00:	mov    DWORD PTR [edi+ecx*4+0x10],eax
65013a04:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
65013a08:	mov    DWORD PTR [edi+ecx*4+0xc],eax
65013a0c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
65013a10:	mov    DWORD PTR [edi+ecx*4+0x8],eax
65013a14:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
65013a18:	mov    DWORD PTR [edi+ecx*4+0x4],eax
65013a1c:	lea    eax,[ecx*4+0x0]
65013a23:	add    esi,eax
65013a25:	add    edi,eax
65013a27:	jmp    DWORD PTR [edx*4+0x65013a30]
65013a2e:	mov    edi,edi
65013a30:	inc    eax
65013a31:	cmp    al,BYTE PTR [ecx]
65013a33:	gs dec eax
65013a35:	cmp    al,BYTE PTR [ecx]
65013a37:	gs pop eax
65013a39:	cmp    al,BYTE PTR [ecx]
65013a3b:	gs ins BYTE PTR es:[edi],dx
65013a3d:	cmp    al,BYTE PTR [ecx]
65013a3f:	mov    eax,DWORD PTR gs:[ebp+0x8]
65013a43:	pop    esi
65013a44:	pop    edi
65013a45:	leave  
65013a46:	ret    
65013a47:	nop
65013a48:	mov    al,BYTE PTR [esi+0x3]
65013a4b:	mov    BYTE PTR [edi+0x3],al
65013a4e:	mov    eax,DWORD PTR [ebp+0x8]
65013a51:	pop    esi
65013a52:	pop    edi
65013a53:	leave  
65013a54:	ret    
65013a55:	lea    ecx,[ecx+0x0]
65013a58:	mov    al,BYTE PTR [esi+0x3]
65013a5b:	mov    BYTE PTR [edi+0x3],al
65013a5e:	mov    al,BYTE PTR [esi+0x2]
65013a61:	mov    BYTE PTR [edi+0x2],al
65013a64:	mov    eax,DWORD PTR [ebp+0x8]
65013a67:	pop    esi
65013a68:	pop    edi
65013a69:	leave  
65013a6a:	ret    
65013a6b:	nop
65013a6c:	mov    al,BYTE PTR [esi+0x3]
65013a6f:	mov    BYTE PTR [edi+0x3],al
65013a72:	mov    al,BYTE PTR [esi+0x2]
65013a75:	mov    BYTE PTR [edi+0x2],al
65013a78:	mov    al,BYTE PTR [esi+0x1]
65013a7b:	mov    BYTE PTR [edi+0x1],al
65013a7e:	mov    eax,DWORD PTR [ebp+0x8]
65013a81:	pop    esi
65013a82:	pop    edi
65013a83:	leave  
65013a84:	ret    
65013a85:	push   0x10
65013a87:	push   0x65029888
65013a8c:	call   0x65013ca0
65013a91:	mov    ebx,DWORD PTR [ebp+0x8]
65013a94:	test   ebx,ebx
65013a96:	jne    0x65013aa6
65013a98:	push   DWORD PTR [ebp+0xc]
65013a9b:	call   0x65013654
65013aa0:	pop    ecx
65013aa1:	jmp    0x65013c72
65013aa6:	mov    esi,DWORD PTR [ebp+0xc]
65013aa9:	test   esi,esi
65013aab:	jne    0x65013ab9
65013aad:	push   ebx
65013aae:	call   0x65013577
65013ab3:	pop    ecx
65013ab4:	jmp    0x65013c70
65013ab9:	cmp    DWORD PTR ds:0x6503143c,0x3
65013ac0:	jne    0x65013c59
65013ac6:	xor    edi,edi
65013ac8:	mov    DWORD PTR [ebp-0x1c],edi
65013acb:	cmp    esi,0xffffffe0
65013ace:	ja     0x65013c5e
65013ad4:	push   0x4
65013ad6:	call   0x65019c98
65013adb:	pop    ecx
65013adc:	mov    DWORD PTR [ebp-0x4],edi
65013adf:	push   ebx
65013ae0:	call   0x65019d11
65013ae5:	pop    ecx
65013ae6:	mov    DWORD PTR [ebp-0x20],eax
65013ae9:	cmp    eax,edi
65013aeb:	je     0x65013b8f
65013af1:	cmp    esi,DWORD PTR ds:0x6503142c
65013af7:	ja     0x65013b42
65013af9:	push   esi
65013afa:	push   ebx
65013afb:	push   eax
65013afc:	call   0x6501a209
65013b01:	add    esp,0xc
65013b04:	test   eax,eax
65013b06:	je     0x65013b0d
65013b08:	mov    DWORD PTR [ebp-0x1c],ebx
65013b0b:	jmp    0x65013b42
65013b0d:	push   esi
65013b0e:	call   0x6501a4e8
65013b13:	pop    ecx
65013b14:	mov    DWORD PTR [ebp-0x1c],eax
65013b17:	cmp    eax,edi
65013b19:	je     0x65013b42
65013b1b:	mov    eax,DWORD PTR [ebx-0x4]
65013b1e:	dec    eax
65013b1f:	cmp    eax,esi
65013b21:	jb     0x65013b25
65013b23:	mov    eax,esi
65013b25:	push   eax
65013b26:	push   ebx
65013b27:	push   DWORD PTR [ebp-0x1c]
65013b2a:	call   0x65014000
65013b2f:	push   ebx
65013b30:	call   0x65019d11
65013b35:	mov    DWORD PTR [ebp-0x20],eax
65013b38:	push   ebx
65013b39:	push   eax
65013b3a:	call   0x65019d3f
65013b3f:	add    esp,0x18
65013b42:	cmp    DWORD PTR [ebp-0x1c],edi
65013b45:	jne    0x65013b8f
65013b47:	cmp    esi,edi
65013b49:	jne    0x65013b51
65013b4b:	xor    esi,esi
65013b4d:	inc    esi
65013b4e:	mov    DWORD PTR [ebp+0xc],esi
65013b51:	add    esi,0xf
65013b54:	and    esi,0xfffffff0
65013b57:	mov    DWORD PTR [ebp+0xc],esi
65013b5a:	push   esi
65013b5b:	push   edi
65013b5c:	push   DWORD PTR ds:0x6502da8c
65013b62:	call   DWORD PTR ds:0x650240f4
65013b68:	mov    DWORD PTR [ebp-0x1c],eax
65013b6b:	cmp    eax,edi
65013b6d:	je     0x65013b8f
65013b6f:	mov    eax,DWORD PTR [ebx-0x4]
65013b72:	dec    eax
65013b73:	cmp    eax,esi
65013b75:	jb     0x65013b79
65013b77:	mov    eax,esi
65013b79:	push   eax
65013b7a:	push   ebx
65013b7b:	push   DWORD PTR [ebp-0x1c]
65013b7e:	call   0x65014000
65013b83:	push   ebx
65013b84:	push   DWORD PTR [ebp-0x20]
65013b87:	call   0x65019d3f
65013b8c:	add    esp,0x14
65013b8f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013b96:	call   0x65013bc9
65013b9b:	cmp    DWORD PTR [ebp-0x20],0x0
65013b9f:	jne    0x65013bd2
65013ba1:	test   esi,esi
65013ba3:	jne    0x65013ba6
65013ba5:	inc    esi
65013ba6:	add    esi,0xf
65013ba9:	and    esi,0xfffffff0
65013bac:	mov    DWORD PTR [ebp+0xc],esi
65013baf:	push   esi
65013bb0:	push   ebx
65013bb1:	push   0x0
65013bb3:	push   DWORD PTR ds:0x6502da8c
65013bb9:	call   DWORD PTR ds:0x650240fc
65013bbf:	mov    edi,eax
65013bc1:	jmp    0x65013bd5
65013bc3:	mov    esi,DWORD PTR [ebp+0xc]
65013bc6:	mov    ebx,DWORD PTR [ebp+0x8]
65013bc9:	push   0x4
65013bcb:	call   0x65019bc0
65013bd0:	pop    ecx
65013bd1:	ret    
65013bd2:	mov    edi,DWORD PTR [ebp-0x1c]
65013bd5:	test   edi,edi
65013bd7:	jne    0x65013c9c
65013bdd:	cmp    DWORD PTR ds:0x6502df04,edi
65013be3:	je     0x65013c11
65013be5:	push   esi
65013be6:	call   0x65014a1b
65013beb:	pop    ecx
65013bec:	test   eax,eax
65013bee:	jne    0x65013ac6
65013bf4:	call   0x650143a0
65013bf9:	cmp    DWORD PTR [ebp-0x20],edi
65013bfc:	jne    0x65013c6a
65013bfe:	mov    esi,eax
65013c00:	call   DWORD PTR ds:0x65024044
65013c06:	push   eax
65013c07:	call   0x65014365
65013c0c:	pop    ecx
65013c0d:	mov    DWORD PTR [esi],eax
65013c0f:	jmp    0x65013c70
65013c11:	test   edi,edi
65013c13:	jne    0x65013c9c
65013c19:	call   0x650143a0
65013c1e:	cmp    DWORD PTR [ebp-0x20],edi
65013c21:	je     0x65013c8b
65013c23:	mov    DWORD PTR [eax],0xc
65013c29:	jmp    0x65013c9c
65013c2b:	test   esi,esi
65013c2d:	jne    0x65013c30
65013c2f:	inc    esi
65013c30:	push   esi
65013c31:	push   ebx
65013c32:	push   0x0
65013c34:	push   DWORD PTR ds:0x6502da8c
65013c3a:	call   DWORD PTR ds:0x650240fc
65013c40:	mov    edi,eax
65013c42:	test   edi,edi
65013c44:	jne    0x65013c9c
65013c46:	cmp    DWORD PTR ds:0x6502df04,eax
65013c4c:	je     0x65013c82
65013c4e:	push   esi
65013c4f:	call   0x65014a1b
65013c54:	pop    ecx
65013c55:	test   eax,eax
65013c57:	je     0x65013c78
65013c59:	cmp    esi,0xffffffe0
65013c5c:	jbe    0x65013c2b
65013c5e:	push   esi
65013c5f:	call   0x65014a1b
65013c64:	pop    ecx
65013c65:	call   0x650143a0
65013c6a:	mov    DWORD PTR [eax],0xc
65013c70:	xor    eax,eax
65013c72:	call   0x65013ce5
65013c77:	ret    
65013c78:	call   0x650143a0
65013c7d:	jmp    0x65013bfe
65013c82:	test   edi,edi
65013c84:	jne    0x65013c9c
65013c86:	call   0x650143a0
65013c8b:	mov    esi,eax
65013c8d:	call   DWORD PTR ds:0x65024044
65013c93:	push   eax
65013c94:	call   0x65014365
65013c99:	mov    DWORD PTR [esi],eax
65013c9b:	pop    ecx
65013c9c:	mov    eax,edi
65013c9e:	jmp    0x65013c72
65013ca0:	push   0x65013d00
65013ca5:	push   DWORD PTR fs:0x0
65013cac:	mov    eax,DWORD PTR [esp+0x10]
65013cb0:	mov    DWORD PTR [esp+0x10],ebp
65013cb4:	lea    ebp,[esp+0x10]
65013cb8:	sub    esp,eax
65013cba:	push   ebx
65013cbb:	push   esi
65013cbc:	push   edi
65013cbd:	mov    eax,ds:0x6502c09c
65013cc2:	xor    DWORD PTR [ebp-0x4],eax
65013cc5:	xor    eax,ebp
65013cc7:	push   eax
65013cc8:	mov    DWORD PTR [ebp-0x18],esp
65013ccb:	push   DWORD PTR [ebp-0x8]
65013cce:	mov    eax,DWORD PTR [ebp-0x4]
65013cd1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65013cd8:	mov    DWORD PTR [ebp-0x8],eax
65013cdb:	lea    eax,[ebp-0x10]
65013cde:	mov    fs:0x0,eax
65013ce4:	ret    
65013ce5:	mov    ecx,DWORD PTR [ebp-0x10]
65013ce8:	mov    DWORD PTR fs:0x0,ecx
65013cef:	pop    ecx
65013cf0:	pop    edi
65013cf1:	pop    edi
65013cf2:	pop    esi
65013cf3:	pop    ebx
65013cf4:	mov    esp,ebp
65013cf6:	pop    ebp
65013cf7:	push   ecx
65013cf8:	ret    
65013cf9:	int3   
65013cfa:	int3   
65013cfb:	int3   
65013cfc:	int3   
65013cfd:	int3   
65013cfe:	int3   
65013cff:	int3   
65013d00:	sub    esp,0x14
65013d03:	push   ebx
65013d04:	mov    ebx,DWORD PTR [esp+0x20]
65013d08:	push   ebp
65013d09:	push   esi
65013d0a:	mov    esi,DWORD PTR [ebx+0x8]
65013d0d:	xor    esi,DWORD PTR ds:0x6502c09c
65013d13:	push   edi
65013d14:	mov    eax,DWORD PTR [esi]
65013d16:	cmp    eax,0xfffffffe
65013d19:	mov    BYTE PTR [esp+0x13],0x0
65013d1e:	mov    DWORD PTR [esp+0x18],0x1
65013d26:	lea    edi,[ebx+0x10]
65013d29:	je     0x65013d38
65013d2b:	mov    ecx,DWORD PTR [esi+0x4]
65013d2e:	add    ecx,edi
65013d30:	xor    ecx,DWORD PTR [eax+edi*1]
65013d33:	call   0x6501275c
65013d38:	mov    ecx,DWORD PTR [esi+0xc]
65013d3b:	mov    eax,DWORD PTR [esi+0x8]
65013d3e:	add    ecx,edi
65013d40:	xor    ecx,DWORD PTR [eax+edi*1]
65013d43:	call   0x6501275c
65013d48:	mov    eax,DWORD PTR [esp+0x28]
65013d4c:	test   BYTE PTR [eax+0x4],0x66
65013d50:	jne    0x65013e75
65013d56:	mov    ebp,DWORD PTR [ebx+0xc]
65013d59:	cmp    ebp,0xfffffffe
65013d5c:	mov    ecx,DWORD PTR [esp+0x30]
65013d60:	lea    edx,[esp+0x1c]
65013d64:	mov    DWORD PTR [esp+0x1c],eax
65013d68:	mov    DWORD PTR [esp+0x20],ecx
65013d6c:	mov    DWORD PTR [ebx-0x4],edx
65013d6f:	je     0x65013dcf
65013d71:	lea    eax,[ebp+ebp*2+0x0]
65013d75:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
65013d79:	test   ecx,ecx
65013d7b:	lea    ebx,[esi+eax*4+0x10]
65013d7f:	mov    eax,DWORD PTR [ebx]
65013d81:	mov    DWORD PTR [esp+0x14],eax
65013d85:	je     0x65013d9d
65013d87:	mov    edx,edi
65013d89:	call   0x6501ac02
65013d8e:	test   eax,eax
65013d90:	mov    BYTE PTR [esp+0x13],0x1
65013d95:	jl     0x65013ddb
65013d97:	jg     0x65013de5
65013d99:	mov    eax,DWORD PTR [esp+0x14]
65013d9d:	cmp    eax,0xfffffffe
65013da0:	mov    ebp,eax
65013da2:	jne    0x65013d71
65013da4:	cmp    BYTE PTR [esp+0x13],0x0
65013da9:	je     0x65013dcf
65013dab:	mov    eax,DWORD PTR [esi]
65013dad:	cmp    eax,0xfffffffe
65013db0:	je     0x65013dbf
65013db2:	mov    ecx,DWORD PTR [esi+0x4]
65013db5:	add    ecx,edi
65013db7:	xor    ecx,DWORD PTR [eax+edi*1]
65013dba:	call   0x6501275c
65013dbf:	mov    ecx,DWORD PTR [esi+0xc]
65013dc2:	mov    eax,DWORD PTR [esi+0x8]
65013dc5:	add    ecx,edi
65013dc7:	xor    ecx,DWORD PTR [eax+edi*1]
65013dca:	call   0x6501275c
65013dcf:	mov    eax,DWORD PTR [esp+0x18]
65013dd3:	pop    edi
65013dd4:	pop    esi
65013dd5:	pop    ebp
65013dd6:	pop    ebx
65013dd7:	add    esp,0x14
65013dda:	ret    
65013ddb:	mov    DWORD PTR [esp+0x18],0x0
65013de3:	jmp    0x65013dab
65013de5:	mov    ecx,DWORD PTR [esp+0x28]
65013de9:	cmp    DWORD PTR [ecx],0xe06d7363
65013def:	jne    0x65013e1b
65013df1:	cmp    DWORD PTR ds:0x65024c54,0x0
65013df8:	je     0x65013e1b
65013dfa:	push   0x65024c54
65013dff:	call   0x6501acf0
65013e04:	add    esp,0x4
65013e07:	test   eax,eax
65013e09:	je     0x65013e1b
65013e0b:	mov    edx,DWORD PTR [esp+0x28]
65013e0f:	push   0x1
65013e11:	push   edx
65013e12:	call   DWORD PTR ds:0x65024c54
65013e18:	add    esp,0x8
65013e1b:	mov    ecx,DWORD PTR [esp+0x2c]
65013e1f:	call   0x6501ac32
65013e24:	mov    eax,DWORD PTR [esp+0x2c]
65013e28:	cmp    DWORD PTR [eax+0xc],ebp
65013e2b:	je     0x65013e40
65013e2d:	push   0x6502c09c
65013e32:	push   edi
65013e33:	mov    edx,ebp
65013e35:	mov    ecx,eax
65013e37:	call   0x6501ac4c
65013e3c:	mov    eax,DWORD PTR [esp+0x2c]
65013e40:	mov    ecx,DWORD PTR [esp+0x14]
65013e44:	mov    DWORD PTR [eax+0xc],ecx
65013e47:	mov    eax,DWORD PTR [esi]
65013e49:	cmp    eax,0xfffffffe
65013e4c:	je     0x65013e5b
65013e4e:	mov    ecx,DWORD PTR [esi+0x4]
65013e51:	add    ecx,edi
65013e53:	xor    ecx,DWORD PTR [eax+edi*1]
65013e56:	call   0x6501275c
65013e5b:	mov    ecx,DWORD PTR [esi+0xc]
65013e5e:	mov    edx,DWORD PTR [esi+0x8]
65013e61:	add    ecx,edi
65013e63:	xor    ecx,DWORD PTR [edx+edi*1]
65013e66:	call   0x6501275c
65013e6b:	mov    ecx,DWORD PTR [ebx+0x8]
65013e6e:	mov    edx,edi
65013e70:	jmp    0x6501ac19
65013e75:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
65013e79:	je     0x65013dcf
65013e7f:	push   0x6502c09c
65013e84:	push   edi
65013e85:	mov    ecx,ebx
65013e87:	mov    edx,0xfffffffe
65013e8c:	call   0x6501ac4c
65013e91:	jmp    0x65013dab
65013e96:	int3   
65013e97:	int3   
65013e98:	int3   
65013e99:	int3   
65013e9a:	int3   
65013e9b:	int3   
65013e9c:	int3   
65013e9d:	int3   
65013e9e:	int3   
65013e9f:	int3   
65013ea0:	mov    ecx,DWORD PTR [esp+0x4]
65013ea4:	test   ecx,0x3
65013eaa:	je     0x65013ed0
65013eac:	mov    al,BYTE PTR [ecx]
65013eae:	add    ecx,0x1
65013eb1:	test   al,al
65013eb3:	je     0x65013f03
65013eb5:	test   ecx,0x3
65013ebb:	jne    0x65013eac
65013ebd:	add    eax,0x0
65013ec2:	lea    esp,[esp+0x0]
65013ec9:	lea    esp,[esp+0x0]
65013ed0:	mov    eax,DWORD PTR [ecx]
65013ed2:	mov    edx,0x7efefeff
65013ed7:	add    edx,eax
65013ed9:	xor    eax,0xffffffff
65013edc:	xor    eax,edx
65013ede:	add    ecx,0x4
65013ee1:	test   eax,0x81010100
65013ee6:	je     0x65013ed0
65013ee8:	mov    eax,DWORD PTR [ecx-0x4]
65013eeb:	test   al,al
65013eed:	je     0x65013f21
65013eef:	test   ah,ah
65013ef1:	je     0x65013f17
65013ef3:	test   eax,0xff0000
65013ef8:	je     0x65013f0d
65013efa:	test   eax,0xff000000
65013eff:	je     0x65013f03
65013f01:	jmp    0x65013ed0
65013f03:	lea    eax,[ecx-0x1]
65013f06:	mov    ecx,DWORD PTR [esp+0x4]
65013f0a:	sub    eax,ecx
65013f0c:	ret    
65013f0d:	lea    eax,[ecx-0x2]
65013f10:	mov    ecx,DWORD PTR [esp+0x4]
65013f14:	sub    eax,ecx
65013f16:	ret    
65013f17:	lea    eax,[ecx-0x3]
65013f1a:	mov    ecx,DWORD PTR [esp+0x4]
65013f1e:	sub    eax,ecx
65013f20:	ret    
65013f21:	lea    eax,[ecx-0x4]
65013f24:	mov    ecx,DWORD PTR [esp+0x4]
65013f28:	sub    eax,ecx
65013f2a:	ret    
65013f2b:	push   eax
65013f2c:	push   DWORD PTR fs:0x0
65013f33:	lea    eax,[esp+0xc]
65013f37:	sub    esp,DWORD PTR [esp+0xc]
65013f3b:	push   ebx
65013f3c:	push   esi
65013f3d:	push   edi
65013f3e:	mov    DWORD PTR [eax],ebp
65013f40:	mov    ebp,eax
65013f42:	mov    eax,ds:0x6502c09c
65013f47:	xor    eax,ebp
65013f49:	push   eax
65013f4a:	push   DWORD PTR [ebp-0x4]
65013f4d:	mov    DWORD PTR [ebp-0x4],0xffffffff
65013f54:	lea    eax,[ebp-0xc]
65013f57:	mov    fs:0x0,eax
65013f5d:	ret    
65013f5e:	push   eax
65013f5f:	push   DWORD PTR fs:0x0
65013f66:	lea    eax,[esp+0xc]
65013f6a:	sub    esp,DWORD PTR [esp+0xc]
65013f6e:	push   ebx
65013f6f:	push   esi
65013f70:	push   edi
65013f71:	mov    DWORD PTR [eax],ebp
65013f73:	mov    ebp,eax
65013f75:	mov    eax,ds:0x6502c09c
65013f7a:	xor    eax,ebp
65013f7c:	push   eax
65013f7d:	mov    DWORD PTR [ebp-0x10],esp
65013f80:	push   DWORD PTR [ebp-0x4]
65013f83:	mov    DWORD PTR [ebp-0x4],0xffffffff
65013f8a:	lea    eax,[ebp-0xc]
65013f8d:	mov    fs:0x0,eax
65013f93:	ret    
65013f94:	mov    ecx,DWORD PTR [esp+0x4]
65013f98:	push   ebx
65013f99:	xor    ebx,ebx
65013f9b:	cmp    ecx,ebx
65013f9d:	push   esi
65013f9e:	push   edi
65013f9f:	je     0x65013fa9
65013fa1:	mov    edi,DWORD PTR [esp+0x14]
65013fa5:	cmp    edi,ebx
65013fa7:	ja     0x65013fc4
65013fa9:	call   0x650143a0
65013fae:	push   0x16
65013fb0:	pop    esi
65013fb1:	mov    DWORD PTR [eax],esi
65013fb3:	push   ebx
65013fb4:	push   ebx
65013fb5:	push   ebx
65013fb6:	push   ebx
65013fb7:	push   ebx
65013fb8:	call   0x6501224f
65013fbd:	add    esp,0x14
65013fc0:	mov    eax,esi
65013fc2:	jmp    0x65013ff5
65013fc4:	mov    esi,DWORD PTR [esp+0x18]
65013fc8:	cmp    esi,ebx
65013fca:	jne    0x65013fd0
65013fcc:	mov    BYTE PTR [ecx],bl
65013fce:	jmp    0x65013fa9
65013fd0:	mov    edx,ecx
65013fd2:	mov    al,BYTE PTR [esi]
65013fd4:	mov    BYTE PTR [edx],al
65013fd6:	inc    edx
65013fd7:	inc    esi
65013fd8:	cmp    al,bl
65013fda:	je     0x65013fdf
65013fdc:	dec    edi
65013fdd:	jne    0x65013fd2
65013fdf:	cmp    edi,ebx
65013fe1:	jne    0x65013ff3
65013fe3:	mov    BYTE PTR [ecx],bl
65013fe5:	call   0x650143a0
65013fea:	push   0x22
65013fec:	pop    ecx
65013fed:	mov    DWORD PTR [eax],ecx
65013fef:	mov    esi,ecx
65013ff1:	jmp    0x65013fb3
65013ff3:	xor    eax,eax
65013ff5:	pop    edi
65013ff6:	pop    esi
65013ff7:	pop    ebx
65013ff8:	ret    
65013ff9:	int3   
65013ffa:	int3   
65013ffb:	int3   
65013ffc:	int3   
65013ffd:	int3   
65013ffe:	int3   
65013fff:	int3   
65014000:	push   ebp
65014001:	mov    ebp,esp
65014003:	push   edi
65014004:	push   esi
65014005:	mov    esi,DWORD PTR [ebp+0xc]
65014008:	mov    ecx,DWORD PTR [ebp+0x10]
6501400b:	mov    edi,DWORD PTR [ebp+0x8]
6501400e:	mov    eax,ecx
65014010:	mov    edx,ecx
65014012:	add    eax,esi
65014014:	cmp    edi,esi
65014016:	jbe    0x65014020
65014018:	cmp    edi,eax
6501401a:	jb     0x650141c4
65014020:	cmp    ecx,0x100
65014026:	jb     0x65014047
65014028:	cmp    DWORD PTR ds:0x65031564,0x0
6501402f:	je     0x65014047
65014031:	push   edi
65014032:	push   esi
65014033:	and    edi,0xf
65014036:	and    esi,0xf
65014039:	cmp    edi,esi
6501403b:	pop    esi
6501403c:	pop    edi
6501403d:	jne    0x65014047
6501403f:	pop    esi
65014040:	pop    edi
65014041:	pop    ebp
65014042:	jmp    0x6501aa2b
65014047:	test   edi,0x3
6501404d:	jne    0x65014064
6501404f:	shr    ecx,0x2
65014052:	and    edx,0x3
65014055:	cmp    ecx,0x8
65014058:	jb     0x65014084
6501405a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501405c:	jmp    DWORD PTR [edx*4+0x65014174]
65014063:	nop
65014064:	mov    eax,edi
65014066:	mov    edx,0x3
6501406b:	sub    ecx,0x4
6501406e:	jb     0x6501407c
65014070:	and    eax,0x3
65014073:	add    ecx,eax
65014075:	jmp    DWORD PTR [eax*4+0x65014088]
6501407c:	jmp    DWORD PTR [ecx*4+0x65014184]
65014083:	nop
65014084:	jmp    DWORD PTR [ecx*4+0x65014108]
6501408b:	nop
6501408c:	cwde   
6501408d:	inc    eax
6501408e:	add    DWORD PTR [ebp-0x3c],esp
65014091:	inc    eax
65014092:	add    DWORD PTR [ebp-0x18],esp
65014095:	inc    eax
65014096:	add    DWORD PTR [ebp+0x23],esp
65014099:	ror    DWORD PTR [edx-0x75f877fa],1
6501409f:	inc    esi
650140a0:	add    DWORD PTR [eax+0x468a0147],ecx
650140a6:	add    al,cl
650140a8:	jmp    0x6748c8af
650140ad:	add    esi,0x3
650140b0:	add    edi,0x3
650140b3:	cmp    ecx,0x8
650140b6:	jb     0x65014084
650140b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650140ba:	jmp    DWORD PTR [edx*4+0x65014174]
650140c1:	lea    ecx,[ecx+0x0]
650140c4:	and    edx,ecx
650140c6:	mov    al,BYTE PTR [esi]
650140c8:	mov    BYTE PTR [edi],al
650140ca:	mov    al,BYTE PTR [esi+0x1]
650140cd:	shr    ecx,0x2
650140d0:	mov    BYTE PTR [edi+0x1],al
650140d3:	add    esi,0x2
650140d6:	add    edi,0x2
650140d9:	cmp    ecx,0x8
650140dc:	jb     0x65014084
650140de:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650140e0:	jmp    DWORD PTR [edx*4+0x65014174]
650140e7:	nop
650140e8:	and    edx,ecx
650140ea:	mov    al,BYTE PTR [esi]
650140ec:	mov    BYTE PTR [edi],al
650140ee:	add    esi,0x1
650140f1:	shr    ecx,0x2
650140f4:	add    edi,0x1
650140f7:	cmp    ecx,0x8
650140fa:	jb     0x65014084
650140fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650140fe:	jmp    DWORD PTR [edx*4+0x65014174]
65014105:	lea    ecx,[ecx+0x0]
65014108:	imul   eax,DWORD PTR [ecx+0x1],0x65
6501410c:	pop    eax
6501410d:	inc    ecx
6501410e:	add    DWORD PTR [ebp+0x50],esp
65014111:	inc    ecx
65014112:	add    DWORD PTR [ebp+0x48],esp
65014115:	inc    ecx
65014116:	add    DWORD PTR [ebp+0x40],esp
65014119:	inc    ecx
6501411a:	add    DWORD PTR [ebp+0x38],esp
6501411d:	inc    ecx
6501411e:	add    DWORD PTR [ebp+0x30],esp
65014121:	inc    ecx
65014122:	add    DWORD PTR [ebp+0x28],esp
65014125:	inc    ecx
65014126:	add    DWORD PTR [ebp-0x75],esp
65014129:	inc    esp
6501412a:	mov    fs,esp
6501412c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
65014130:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
65014134:	mov    DWORD PTR [edi+ecx*4-0x18],eax
65014138:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6501413c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
65014140:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
65014144:	mov    DWORD PTR [edi+ecx*4-0x10],eax
65014148:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6501414c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
65014150:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
65014154:	mov    DWORD PTR [edi+ecx*4-0x8],eax
65014158:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6501415c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
65014160:	lea    eax,[ecx*4+0x0]
65014167:	add    esi,eax
65014169:	add    edi,eax
6501416b:	jmp    DWORD PTR [edx*4+0x65014174]
65014172:	mov    edi,edi
65014174:	test   BYTE PTR [ecx+0x1],al
65014177:	mov    WORD PTR gs:[ecx+0x1],es
6501417b:	gs cwde 
6501417d:	inc    ecx
6501417e:	add    DWORD PTR [ebp-0x54],esp
65014181:	inc    ecx
65014182:	add    DWORD PTR [ebp-0x75],esp
65014185:	inc    ebp
65014186:	or     BYTE PTR [esi+0x5f],bl
65014189:	leave  
6501418a:	ret    
6501418b:	nop
6501418c:	mov    al,BYTE PTR [esi]
6501418e:	mov    BYTE PTR [edi],al
65014190:	mov    eax,DWORD PTR [ebp+0x8]
65014193:	pop    esi
65014194:	pop    edi
65014195:	leave  
65014196:	ret    
65014197:	nop
65014198:	mov    al,BYTE PTR [esi]
6501419a:	mov    BYTE PTR [edi],al
6501419c:	mov    al,BYTE PTR [esi+0x1]
6501419f:	mov    BYTE PTR [edi+0x1],al
650141a2:	mov    eax,DWORD PTR [ebp+0x8]
650141a5:	pop    esi
650141a6:	pop    edi
650141a7:	leave  
650141a8:	ret    
650141a9:	lea    ecx,[ecx+0x0]
650141ac:	mov    al,BYTE PTR [esi]
650141ae:	mov    BYTE PTR [edi],al
650141b0:	mov    al,BYTE PTR [esi+0x1]
650141b3:	mov    BYTE PTR [edi+0x1],al
650141b6:	mov    al,BYTE PTR [esi+0x2]
650141b9:	mov    BYTE PTR [edi+0x2],al
650141bc:	mov    eax,DWORD PTR [ebp+0x8]
650141bf:	pop    esi
650141c0:	pop    edi
650141c1:	leave  
650141c2:	ret    
650141c3:	nop
650141c4:	lea    esi,[ecx+esi*1-0x4]
650141c8:	lea    edi,[ecx+edi*1-0x4]
650141cc:	test   edi,0x3
650141d2:	jne    0x650141f8
650141d4:	shr    ecx,0x2
650141d7:	and    edx,0x3
650141da:	cmp    ecx,0x8
650141dd:	jb     0x650141ec
650141df:	std    
650141e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
650141e2:	cld    
650141e3:	jmp    DWORD PTR [edx*4+0x65014310]
650141ea:	mov    edi,edi
650141ec:	neg    ecx
650141ee:	jmp    DWORD PTR [ecx*4+0x650142c0]
650141f5:	lea    ecx,[ecx+0x0]
650141f8:	mov    eax,edi
650141fa:	mov    edx,0x3
650141ff:	cmp    ecx,0x4
65014202:	jb     0x65014210
65014204:	and    eax,0x3
65014207:	sub    ecx,eax
65014209:	jmp    DWORD PTR [eax*4+0x65014214]
65014210:	jmp    DWORD PTR [ecx*4+0x65014310]
65014217:	nop
65014218:	and    al,0x42
6501421a:	add    DWORD PTR [ebp+0x48],esp
6501421d:	inc    edx
6501421e:	add    DWORD PTR [ebp+0x70],esp
65014221:	inc    edx
65014222:	add    DWORD PTR [ebp-0x76],esp
65014225:	inc    esi
65014226:	add    esp,DWORD PTR [ebx]
65014228:	ror    DWORD PTR [eax-0x117cfcb9],1
6501422e:	add    ecx,eax
65014230:	jmp    0x66f0c537
65014235:	cmp    ecx,0x8
65014238:	jb     0x650141ec
6501423a:	std    
6501423b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501423d:	cld    
6501423e:	jmp    DWORD PTR [edx*4+0x65014310]
65014245:	lea    ecx,[ecx+0x0]
65014248:	mov    al,BYTE PTR [esi+0x3]
6501424b:	and    edx,ecx
6501424d:	mov    BYTE PTR [edi+0x3],al
65014250:	mov    al,BYTE PTR [esi+0x2]
65014253:	shr    ecx,0x2
65014256:	mov    BYTE PTR [edi+0x2],al
65014259:	sub    esi,0x2
6501425c:	sub    edi,0x2
6501425f:	cmp    ecx,0x8
65014262:	jb     0x650141ec
65014264:	std    
65014265:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014267:	cld    
65014268:	jmp    DWORD PTR [edx*4+0x65014310]
6501426f:	nop
65014270:	mov    al,BYTE PTR [esi+0x3]
65014273:	and    edx,ecx
65014275:	mov    BYTE PTR [edi+0x3],al
65014278:	mov    al,BYTE PTR [esi+0x2]
6501427b:	mov    BYTE PTR [edi+0x2],al
6501427e:	mov    al,BYTE PTR [esi+0x1]
65014281:	shr    ecx,0x2
65014284:	mov    BYTE PTR [edi+0x1],al
65014287:	sub    esi,0x3
6501428a:	sub    edi,0x3
6501428d:	cmp    ecx,0x8
65014290:	jb     0x650141ec
65014296:	std    
65014297:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
65014299:	cld    
6501429a:	jmp    DWORD PTR [edx*4+0x65014310]
650142a1:	lea    ecx,[ecx+0x0]
650142a4:	les    eax,FWORD PTR [edx+0x1]
650142a7:	gs int3 
650142a9:	inc    edx
650142aa:	add    DWORD PTR [ebp-0x2c],esp
650142ad:	inc    edx
650142ae:	add    DWORD PTR [ebp-0x24],esp
650142b1:	inc    edx
650142b2:	add    DWORD PTR [ebp-0x1c],esp
650142b5:	inc    edx
650142b6:	add    DWORD PTR [ebp-0x14],esp
650142b9:	inc    edx
650142ba:	add    DWORD PTR [ebp-0xc],esp
650142bd:	inc    edx
650142be:	add    DWORD PTR [ebp+0x7],esp
650142c1:	inc    ebx
650142c2:	add    DWORD PTR [ebp-0x75],esp
650142c5:	inc    esp
650142c6:	mov    ds,WORD PTR [ecx+ecx*4]
650142c9:	inc    esp
650142ca:	(bad)  
650142cb:	sbb    al,0x8b
650142cd:	inc    esp
650142ce:	mov    ds,WORD PTR [eax]
650142d0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
650142d4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
650142d8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
650142dc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
650142e0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
650142e4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
650142e8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
650142ec:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
650142f0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
650142f4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
650142f8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
650142fc:	lea    eax,[ecx*4+0x0]
65014303:	add    esi,eax
65014305:	add    edi,eax
65014307:	jmp    DWORD PTR [edx*4+0x65014310]
6501430e:	mov    edi,edi
65014310:	and    BYTE PTR [ebx+0x1],al
65014313:	sub    BYTE PTR gs:[ebx+0x1],al
65014317:	cmp    BYTE PTR gs:[ebx+0x1],al
6501431b:	gs dec esp
6501431d:	inc    ebx
6501431e:	add    DWORD PTR [ebp-0x75],esp
65014321:	inc    ebp
65014322:	or     BYTE PTR [esi+0x5f],bl
65014325:	leave  
65014326:	ret    
65014327:	nop
65014328:	mov    al,BYTE PTR [esi+0x3]
6501432b:	mov    BYTE PTR [edi+0x3],al
6501432e:	mov    eax,DWORD PTR [ebp+0x8]
65014331:	pop    esi
65014332:	pop    edi
65014333:	leave  
65014334:	ret    
65014335:	lea    ecx,[ecx+0x0]
65014338:	mov    al,BYTE PTR [esi+0x3]
6501433b:	mov    BYTE PTR [edi+0x3],al
6501433e:	mov    al,BYTE PTR [esi+0x2]
65014341:	mov    BYTE PTR [edi+0x2],al
65014344:	mov    eax,DWORD PTR [ebp+0x8]
65014347:	pop    esi
65014348:	pop    edi
65014349:	leave  
6501434a:	ret    
6501434b:	nop
6501434c:	mov    al,BYTE PTR [esi+0x3]
6501434f:	mov    BYTE PTR [edi+0x3],al
65014352:	mov    al,BYTE PTR [esi+0x2]
65014355:	mov    BYTE PTR [edi+0x2],al
65014358:	mov    al,BYTE PTR [esi+0x1]
6501435b:	mov    BYTE PTR [edi+0x1],al
6501435e:	mov    eax,DWORD PTR [ebp+0x8]
65014361:	pop    esi
65014362:	pop    edi
65014363:	leave  
65014364:	ret    
65014365:	mov    eax,DWORD PTR [esp+0x4]
65014369:	xor    ecx,ecx
6501436b:	cmp    eax,DWORD PTR [ecx*8+0x6502c0b0]
65014372:	je     0x65014386
65014374:	inc    ecx
65014375:	cmp    ecx,0x2d
65014378:	jb     0x6501436b
6501437a:	lea    ecx,[eax-0x13]
6501437d:	cmp    ecx,0x11
65014380:	ja     0x6501438e
65014382:	push   0xd
65014384:	pop    eax
65014385:	ret    
65014386:	mov    eax,DWORD PTR [ecx*8+0x6502c0b4]
6501438d:	ret    
6501438e:	add    eax,0xffffff44
65014393:	push   0xe
65014395:	pop    ecx
65014396:	cmp    ecx,eax
65014398:	sbb    eax,eax
6501439a:	and    eax,ecx
6501439c:	add    eax,0x8
6501439f:	ret    
650143a0:	call   0x65014674
650143a5:	test   eax,eax
650143a7:	jne    0x650143af
650143a9:	mov    eax,0x6502c218
650143ae:	ret    
650143af:	add    eax,0x8
650143b2:	ret    
650143b3:	call   0x65014674
650143b8:	test   eax,eax
650143ba:	jne    0x650143c2
650143bc:	mov    eax,0x6502c21c
650143c1:	ret    
650143c2:	add    eax,0xc
650143c5:	ret    
650143c6:	push   esi
650143c7:	call   0x650143b3
650143cc:	mov    ecx,DWORD PTR [esp+0x8]
650143d0:	push   ecx
650143d1:	mov    DWORD PTR [eax],ecx
650143d3:	call   0x65014365
650143d8:	pop    ecx
650143d9:	mov    esi,eax
650143db:	call   0x650143a0
650143e0:	mov    DWORD PTR [eax],esi
650143e2:	pop    esi
650143e3:	ret    
650143e4:	and    DWORD PTR ds:0x6503157c,0x0
650143eb:	ret    
650143ec:	push   ebp
650143ed:	mov    ebp,esp
650143ef:	push   ecx
650143f0:	push   ecx
650143f1:	push   ebx
650143f2:	push   esi
650143f3:	xor    esi,esi
650143f5:	lea    eax,[ebp-0x4]
650143f8:	inc    esi
650143f9:	xor    ebx,ebx
650143fb:	push   eax
650143fc:	mov    DWORD PTR [ebp-0x8],esi
650143ff:	mov    DWORD PTR [ebp-0x4],ebx
65014402:	call   0x65015c06
65014407:	cmp    DWORD PTR [ebp-0x4],0x5
6501440b:	pop    ecx
6501440c:	jle    0x65014412
6501440e:	mov    eax,esi
65014410:	jmp    0x65014454
65014412:	push   edi
65014413:	push   ebx
65014414:	call   DWORD PTR ds:0x65024124
6501441a:	mov    esi,DWORD PTR [eax+0x3c]
6501441d:	add    esi,eax
6501441f:	cmp    WORD PTR [esi+0x6],bx
65014423:	movzx  eax,WORD PTR [esi+0x14]
65014427:	lea    edi,[eax+esi*1+0x18]
6501442b:	jbe    0x65014450
6501442d:	push   edi
6501442e:	push   0x65024bf0
65014433:	call   0x65014ab0
65014438:	test   eax,eax
6501443a:	pop    ecx
6501443b:	pop    ecx
6501443c:	je     0x6501444c
6501443e:	movzx  eax,WORD PTR [esi+0x6]
65014442:	inc    ebx
65014443:	add    edi,0x28
65014446:	cmp    ebx,eax
65014448:	jb     0x6501442d
6501444a:	jmp    0x65014450
6501444c:	and    DWORD PTR [ebp-0x8],0x0
65014450:	mov    eax,DWORD PTR [ebp-0x8]
65014453:	pop    edi
65014454:	pop    esi
65014455:	pop    ebx
65014456:	leave  
65014457:	ret    
65014458:	push   esi
65014459:	push   DWORD PTR ds:0x6502c224
6501445f:	mov    esi,DWORD PTR ds:0x65024128
65014465:	call   esi
65014467:	test   eax,eax
65014469:	je     0x6501448c
6501446b:	mov    eax,ds:0x6502c220
65014470:	cmp    eax,0xffffffff
65014473:	je     0x6501448c
65014475:	push   eax
65014476:	push   DWORD PTR ds:0x6502c224
6501447c:	call   esi
6501447e:	call   eax
65014480:	test   eax,eax
65014482:	je     0x6501448c
65014484:	mov    eax,DWORD PTR [eax+0x1f8]
6501448a:	jmp    0x650144b2
6501448c:	push   0x65024c08
65014491:	call   DWORD PTR ds:0x65024124
65014497:	mov    esi,eax
65014499:	test   esi,esi
6501449b:	je     0x650144c0
6501449d:	call   0x650143ec
650144a2:	test   eax,eax
650144a4:	je     0x650144c0
650144a6:	push   0x65024bf8
650144ab:	push   esi
650144ac:	call   DWORD PTR ds:0x65024014
650144b2:	test   eax,eax
650144b4:	je     0x650144c0
650144b6:	push   DWORD PTR [esp+0x8]
650144ba:	call   eax
650144bc:	mov    DWORD PTR [esp+0x8],eax
650144c0:	mov    eax,DWORD PTR [esp+0x8]
650144c4:	pop    esi
650144c5:	ret    
650144c6:	push   0x0
650144c8:	call   0x65014458
650144cd:	pop    ecx
650144ce:	ret    
650144cf:	push   esi
650144d0:	push   DWORD PTR ds:0x6502c224
650144d6:	mov    esi,DWORD PTR ds:0x65024128
650144dc:	call   esi
650144de:	test   eax,eax
650144e0:	je     0x65014503
650144e2:	mov    eax,ds:0x6502c220
650144e7:	cmp    eax,0xffffffff
650144ea:	je     0x65014503
650144ec:	push   eax
650144ed:	push   DWORD PTR ds:0x6502c224
650144f3:	call   esi
650144f5:	call   eax
650144f7:	test   eax,eax
650144f9:	je     0x65014503
650144fb:	mov    eax,DWORD PTR [eax+0x1fc]
65014501:	jmp    0x65014529
65014503:	push   0x65024c08
65014508:	call   DWORD PTR ds:0x65024124
6501450e:	mov    esi,eax
65014510:	test   esi,esi
65014512:	je     0x65014537
65014514:	call   0x650143ec
65014519:	test   eax,eax
6501451b:	je     0x65014537
6501451d:	push   0x65024c18
65014522:	push   esi
65014523:	call   DWORD PTR ds:0x65024014
65014529:	test   eax,eax
6501452b:	je     0x65014537
6501452d:	push   DWORD PTR [esp+0x8]
65014531:	call   eax
65014533:	mov    DWORD PTR [esp+0x8],eax
65014537:	mov    eax,DWORD PTR [esp+0x8]
6501453b:	pop    esi
6501453c:	ret    
6501453d:	call   DWORD PTR ds:0x6502412c
65014543:	ret    0x4
65014546:	push   esi
65014547:	push   DWORD PTR ds:0x6502c224
6501454d:	call   DWORD PTR ds:0x65024128
65014553:	mov    esi,eax
65014555:	test   esi,esi
65014557:	jne    0x65014574
65014559:	push   DWORD PTR ds:0x6502d5a8
6501455f:	call   0x650144cf
65014564:	pop    ecx
65014565:	mov    esi,eax
65014567:	push   esi
65014568:	push   DWORD PTR ds:0x6502c224
6501456e:	call   DWORD PTR ds:0x65024130
65014574:	mov    eax,esi
65014576:	pop    esi
65014577:	ret    
65014578:	mov    eax,ds:0x6502c220
6501457d:	cmp    eax,0xffffffff
65014580:	je     0x65014598
65014582:	push   eax
65014583:	push   DWORD PTR ds:0x6502d5b0
65014589:	call   0x650144cf
6501458e:	pop    ecx
6501458f:	call   eax
65014591:	or     DWORD PTR ds:0x6502c220,0xffffffff
65014598:	mov    eax,ds:0x6502c224
6501459d:	cmp    eax,0xffffffff
650145a0:	je     0x650145b0
650145a2:	push   eax
650145a3:	call   DWORD PTR ds:0x65024134
650145a9:	or     DWORD PTR ds:0x6502c224,0xffffffff
650145b0:	jmp    0x65019b6b
650145b5:	push   0xc
650145b7:	push   0x650298a8
650145bc:	call   0x65013ca0
650145c1:	push   0x65024c08
650145c6:	call   DWORD PTR ds:0x65024124
650145cc:	mov    DWORD PTR [ebp-0x1c],eax
650145cf:	mov    esi,DWORD PTR [ebp+0x8]
650145d2:	mov    DWORD PTR [esi+0x5c],0x6502c8c8
650145d9:	xor    edi,edi
650145db:	inc    edi
650145dc:	mov    DWORD PTR [esi+0x14],edi
650145df:	test   eax,eax
650145e1:	je     0x65014612
650145e3:	call   0x650143ec
650145e8:	test   eax,eax
650145ea:	je     0x65014612
650145ec:	push   0x65024bf8
650145f1:	push   DWORD PTR [ebp-0x1c]
650145f4:	mov    ebx,DWORD PTR ds:0x65024014
650145fa:	call   ebx
650145fc:	mov    DWORD PTR [esi+0x1f8],eax
65014602:	push   0x65024c18
65014607:	push   DWORD PTR [ebp-0x1c]
6501460a:	call   ebx
6501460c:	mov    DWORD PTR [esi+0x1fc],eax
65014612:	mov    DWORD PTR [esi+0x70],edi
65014615:	mov    BYTE PTR [esi+0xc8],0x43
6501461c:	mov    BYTE PTR [esi+0x14b],0x43
65014623:	mov    eax,0x6502c268
65014628:	mov    DWORD PTR [esi+0x68],eax
6501462b:	push   eax
6501462c:	call   DWORD PTR ds:0x65024020
65014632:	push   0xc
65014634:	call   0x65019c98
65014639:	pop    ecx
6501463a:	and    DWORD PTR [ebp-0x4],0x0
6501463e:	mov    eax,DWORD PTR [ebp+0xc]
65014641:	mov    DWORD PTR [esi+0x6c],eax
65014644:	test   eax,eax
65014646:	jne    0x65014650
65014648:	mov    eax,ds:0x6502c870
6501464d:	mov    DWORD PTR [esi+0x6c],eax
65014650:	push   DWORD PTR [esi+0x6c]
65014653:	call   0x6501661f
65014658:	pop    ecx
65014659:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014660:	call   0x6501466b
65014665:	call   0x65013ce5
6501466a:	ret    
6501466b:	push   0xc
6501466d:	call   0x65019bc0
65014672:	pop    ecx
65014673:	ret    
65014674:	push   esi
65014675:	push   edi
65014676:	call   DWORD PTR ds:0x65024044
6501467c:	push   DWORD PTR ds:0x6502c220
65014682:	mov    edi,eax
65014684:	call   0x65014546
65014689:	call   eax
6501468b:	mov    esi,eax
6501468d:	test   esi,esi
6501468f:	jne    0x650146df
65014691:	push   0x214
65014696:	push   0x1
65014698:	call   0x650159f0
6501469d:	mov    esi,eax
6501469f:	test   esi,esi
650146a1:	pop    ecx
650146a2:	pop    ecx
650146a3:	je     0x650146df
650146a5:	push   esi
650146a6:	push   DWORD PTR ds:0x6502c220
650146ac:	push   DWORD PTR ds:0x6502d5ac
650146b2:	call   0x650144cf
650146b7:	pop    ecx
650146b8:	call   eax
650146ba:	test   eax,eax
650146bc:	je     0x650146d6
650146be:	push   0x0
650146c0:	push   esi
650146c1:	call   0x650145b5
650146c6:	pop    ecx
650146c7:	pop    ecx
650146c8:	call   DWORD PTR ds:0x6502411c
650146ce:	or     DWORD PTR [esi+0x4],0xffffffff
650146d2:	mov    DWORD PTR [esi],eax
650146d4:	jmp    0x650146df
650146d6:	push   esi
650146d7:	call   0x65013577
650146dc:	pop    ecx
650146dd:	xor    esi,esi
650146df:	push   edi
650146e0:	call   DWORD PTR ds:0x6502405c
650146e6:	pop    edi
650146e7:	mov    eax,esi
650146e9:	pop    esi
650146ea:	ret    
650146eb:	push   esi
650146ec:	call   0x65014674
650146f1:	mov    esi,eax
650146f3:	test   esi,esi
650146f5:	jne    0x650146ff
650146f7:	push   0x10
650146f9:	call   0x65015b26
650146fe:	pop    ecx
650146ff:	mov    eax,esi
65014701:	pop    esi
65014702:	ret    
65014703:	push   0x8
65014705:	push   0x650298c8
6501470a:	call   0x65013ca0
6501470f:	mov    esi,DWORD PTR [ebp+0x8]
65014712:	test   esi,esi
65014714:	je     0x65014804
6501471a:	mov    eax,DWORD PTR [esi+0x24]
6501471d:	test   eax,eax
6501471f:	je     0x65014728
65014721:	push   eax
65014722:	call   0x65013577
65014727:	pop    ecx
65014728:	mov    eax,DWORD PTR [esi+0x2c]
6501472b:	test   eax,eax
6501472d:	je     0x65014736
6501472f:	push   eax
65014730:	call   0x65013577
65014735:	pop    ecx
65014736:	mov    eax,DWORD PTR [esi+0x34]
65014739:	test   eax,eax
6501473b:	je     0x65014744
6501473d:	push   eax
6501473e:	call   0x65013577
65014743:	pop    ecx
65014744:	mov    eax,DWORD PTR [esi+0x3c]
65014747:	test   eax,eax
65014749:	je     0x65014752
6501474b:	push   eax
6501474c:	call   0x65013577
65014751:	pop    ecx
65014752:	mov    eax,DWORD PTR [esi+0x44]
65014755:	test   eax,eax
65014757:	je     0x65014760
65014759:	push   eax
6501475a:	call   0x65013577
6501475f:	pop    ecx
65014760:	mov    eax,DWORD PTR [esi+0x48]
65014763:	test   eax,eax
65014765:	je     0x6501476e
65014767:	push   eax
65014768:	call   0x65013577
6501476d:	pop    ecx
6501476e:	mov    eax,DWORD PTR [esi+0x5c]
65014771:	cmp    eax,0x6502c8c8
65014776:	je     0x6501477f
65014778:	push   eax
65014779:	call   0x65013577
6501477e:	pop    ecx
6501477f:	push   0xd
65014781:	call   0x65019c98
65014786:	pop    ecx
65014787:	and    DWORD PTR [ebp-0x4],0x0
6501478b:	mov    edi,DWORD PTR [esi+0x68]
6501478e:	test   edi,edi
65014790:	je     0x650147ac
65014792:	push   edi
65014793:	call   DWORD PTR ds:0x65024098
65014799:	test   eax,eax
6501479b:	jne    0x650147ac
6501479d:	cmp    edi,0x6502c268
650147a3:	je     0x650147ac
650147a5:	push   edi
650147a6:	call   0x65013577
650147ab:	pop    ecx
650147ac:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650147b3:	call   0x6501480f
650147b8:	push   0xc
650147ba:	call   0x65019c98
650147bf:	pop    ecx
650147c0:	mov    DWORD PTR [ebp-0x4],0x1
650147c7:	mov    edi,DWORD PTR [esi+0x6c]
650147ca:	test   edi,edi
650147cc:	je     0x650147f1
650147ce:	push   edi
650147cf:	call   0x650166a5
650147d4:	pop    ecx
650147d5:	cmp    edi,DWORD PTR ds:0x6502c870
650147db:	je     0x650147f1
650147dd:	cmp    edi,0x6502c798
650147e3:	je     0x650147f1
650147e5:	cmp    DWORD PTR [edi],0x0
650147e8:	jne    0x650147f1
650147ea:	push   edi
650147eb:	call   0x650164df
650147f0:	pop    ecx
650147f1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650147f8:	call   0x6501481b
650147fd:	push   esi
650147fe:	call   0x65013577
65014803:	pop    ecx
65014804:	call   0x65013ce5
65014809:	ret    0x4
6501480c:	mov    esi,DWORD PTR [ebp+0x8]
6501480f:	push   0xd
65014811:	call   0x65019bc0
65014816:	pop    ecx
65014817:	ret    
65014818:	mov    esi,DWORD PTR [ebp+0x8]
6501481b:	push   0xc
6501481d:	call   0x65019bc0
65014822:	pop    ecx
65014823:	ret    
65014824:	cmp    DWORD PTR ds:0x6502c220,0xffffffff
6501482b:	je     0x65014879
6501482d:	push   edi
6501482e:	mov    edi,DWORD PTR [esp+0x8]
65014832:	test   edi,edi
65014834:	jne    0x6501485c
65014836:	push   esi
65014837:	push   DWORD PTR ds:0x6502c224
6501483d:	mov    esi,DWORD PTR ds:0x65024128
65014843:	call   esi
65014845:	test   eax,eax
65014847:	je     0x6501485b
65014849:	push   DWORD PTR ds:0x6502c220
6501484f:	push   DWORD PTR ds:0x6502c224
65014855:	call   esi
65014857:	call   eax
65014859:	mov    edi,eax
6501485b:	pop    esi
6501485c:	push   0x0
6501485e:	push   DWORD PTR ds:0x6502c220
65014864:	push   DWORD PTR ds:0x6502d5ac
6501486a:	call   0x650144cf
6501486f:	pop    ecx
65014870:	call   eax
65014872:	push   edi
65014873:	call   0x65014703
65014878:	pop    edi
65014879:	mov    eax,ds:0x6502c224
6501487e:	cmp    eax,0xffffffff
65014881:	je     0x6501488c
65014883:	push   0x0
65014885:	push   eax
65014886:	call   DWORD PTR ds:0x65024130
6501488c:	ret    
6501488d:	push   edi
6501488e:	push   0x65024c08
65014893:	call   DWORD PTR ds:0x65024124
65014899:	mov    edi,eax
6501489b:	test   edi,edi
6501489d:	jne    0x650148a8
6501489f:	call   0x65014578
650148a4:	xor    eax,eax
650148a6:	pop    edi
650148a7:	ret    
650148a8:	push   esi
650148a9:	mov    esi,DWORD PTR ds:0x65024014
650148af:	push   0x65024c48
650148b4:	push   edi
650148b5:	call   esi
650148b7:	push   0x65024c3c
650148bc:	push   edi
650148bd:	mov    ds:0x6502d5a4,eax
650148c2:	call   esi
650148c4:	push   0x65024c30
650148c9:	push   edi
650148ca:	mov    ds:0x6502d5a8,eax
650148cf:	call   esi
650148d1:	push   0x65024c28
650148d6:	push   edi
650148d7:	mov    ds:0x6502d5ac,eax
650148dc:	call   esi
650148de:	cmp    DWORD PTR ds:0x6502d5a4,0x0
650148e5:	mov    esi,DWORD PTR ds:0x65024130
650148eb:	mov    ds:0x6502d5b0,eax
650148f0:	je     0x65014908
650148f2:	cmp    DWORD PTR ds:0x6502d5a8,0x0
650148f9:	je     0x65014908
650148fb:	cmp    DWORD PTR ds:0x6502d5ac,0x0
65014902:	je     0x65014908
65014904:	test   eax,eax
65014906:	jne    0x6501492c
65014908:	mov    eax,ds:0x65024128
6501490d:	mov    ds:0x6502d5a8,eax
65014912:	mov    eax,ds:0x65024134
65014917:	mov    DWORD PTR ds:0x6502d5a4,0x6501453d
65014921:	mov    DWORD PTR ds:0x6502d5ac,esi
65014927:	mov    ds:0x6502d5b0,eax
6501492c:	call   DWORD PTR ds:0x6502412c
65014932:	cmp    eax,0xffffffff
65014935:	mov    ds:0x6502c224,eax
6501493a:	je     0x65014a0c
65014940:	push   DWORD PTR ds:0x6502d5a8
65014946:	push   eax
65014947:	call   esi
65014949:	test   eax,eax
6501494b:	je     0x65014a0c
65014951:	call   0x65015dd6
65014956:	push   DWORD PTR ds:0x6502d5a4
6501495c:	call   0x65014458
65014961:	push   DWORD PTR ds:0x6502d5a8
65014967:	mov    ds:0x6502d5a4,eax
6501496c:	call   0x65014458
65014971:	push   DWORD PTR ds:0x6502d5ac
65014977:	mov    ds:0x6502d5a8,eax
6501497c:	call   0x65014458
65014981:	push   DWORD PTR ds:0x6502d5b0
65014987:	mov    ds:0x6502d5ac,eax
6501498c:	call   0x65014458
65014991:	add    esp,0x10
65014994:	mov    ds:0x6502d5b0,eax
65014999:	call   0x65019b22
6501499e:	test   eax,eax
650149a0:	je     0x65014a07
650149a2:	push   0x65014703
650149a7:	push   DWORD PTR ds:0x6502d5a4
650149ad:	call   0x650144cf
650149b2:	pop    ecx
650149b3:	call   eax
650149b5:	cmp    eax,0xffffffff
650149b8:	mov    ds:0x6502c220,eax
650149bd:	je     0x65014a07
650149bf:	push   0x214
650149c4:	push   0x1
650149c6:	call   0x650159f0
650149cb:	mov    esi,eax
650149cd:	test   esi,esi
650149cf:	pop    ecx
650149d0:	pop    ecx
650149d1:	je     0x65014a07
650149d3:	push   esi
650149d4:	push   DWORD PTR ds:0x6502c220
650149da:	push   DWORD PTR ds:0x6502d5ac
650149e0:	call   0x650144cf
650149e5:	pop    ecx
650149e6:	call   eax
650149e8:	test   eax,eax
650149ea:	je     0x65014a07
650149ec:	push   0x0
650149ee:	push   esi
650149ef:	call   0x650145b5
650149f4:	pop    ecx
650149f5:	pop    ecx
650149f6:	call   DWORD PTR ds:0x6502411c
650149fc:	or     DWORD PTR [esi+0x4],0xffffffff
65014a00:	mov    DWORD PTR [esi],eax
65014a02:	xor    eax,eax
65014a04:	inc    eax
65014a05:	jmp    0x65014a0e
65014a07:	call   0x65014578
65014a0c:	xor    eax,eax
65014a0e:	pop    esi
65014a0f:	pop    edi
65014a10:	ret    
65014a11:	mov    eax,DWORD PTR [esp+0x4]
65014a15:	mov    ds:0x6502d5b4,eax
65014a1a:	ret    
65014a1b:	push   DWORD PTR ds:0x6502d5b4
65014a21:	call   0x650144cf
65014a26:	test   eax,eax
65014a28:	pop    ecx
65014a29:	je     0x65014a3a
65014a2b:	push   DWORD PTR [esp+0x4]
65014a2f:	call   eax
65014a31:	test   eax,eax
65014a33:	pop    ecx
65014a34:	je     0x65014a3a
65014a36:	xor    eax,eax
65014a38:	inc    eax
65014a39:	ret    
65014a3a:	xor    eax,eax
65014a3c:	ret    
65014a3d:	push   0xc
65014a3f:	push   0x650298f0
65014a44:	call   0x65013ca0
65014a49:	push   0xe
65014a4b:	call   0x65019c98
65014a50:	pop    ecx
65014a51:	and    DWORD PTR [ebp-0x4],0x0
65014a55:	mov    esi,DWORD PTR [ebp+0x8]
65014a58:	mov    ecx,DWORD PTR [esi+0x4]
65014a5b:	test   ecx,ecx
65014a5d:	je     0x65014a8e
65014a5f:	mov    eax,ds:0x6502d5bc
65014a64:	mov    edx,0x6502d5b8
65014a69:	mov    DWORD PTR [ebp-0x1c],eax
65014a6c:	test   eax,eax
65014a6e:	je     0x65014a81
65014a70:	cmp    DWORD PTR [eax],ecx
65014a72:	jne    0x65014aa0
65014a74:	mov    ecx,DWORD PTR [eax+0x4]
65014a77:	mov    DWORD PTR [edx+0x4],ecx
65014a7a:	push   eax
65014a7b:	call   0x65013577
65014a80:	pop    ecx
65014a81:	push   DWORD PTR [esi+0x4]
65014a84:	call   0x65013577
65014a89:	pop    ecx
65014a8a:	and    DWORD PTR [esi+0x4],0x0
65014a8e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014a95:	call   0x65014aa4
65014a9a:	call   0x65013ce5
65014a9f:	ret    
65014aa0:	mov    edx,eax
65014aa2:	jmp    0x65014a69
65014aa4:	push   0xe
65014aa6:	call   0x65019bc0
65014aab:	pop    ecx
65014aac:	ret    
65014aad:	int3   
65014aae:	int3   
65014aaf:	int3   
65014ab0:	mov    edx,DWORD PTR [esp+0x4]
65014ab4:	mov    ecx,DWORD PTR [esp+0x8]
65014ab8:	test   edx,0x3
65014abe:	jne    0x65014afc
65014ac0:	mov    eax,DWORD PTR [edx]
65014ac2:	cmp    al,BYTE PTR [ecx]
65014ac4:	jne    0x65014af4
65014ac6:	or     al,al
65014ac8:	je     0x65014af0
65014aca:	cmp    ah,BYTE PTR [ecx+0x1]
65014acd:	jne    0x65014af4
65014acf:	or     ah,ah
65014ad1:	je     0x65014af0
65014ad3:	shr    eax,0x10
65014ad6:	cmp    al,BYTE PTR [ecx+0x2]
65014ad9:	jne    0x65014af4
65014adb:	or     al,al
65014add:	je     0x65014af0
65014adf:	cmp    ah,BYTE PTR [ecx+0x3]
65014ae2:	jne    0x65014af4
65014ae4:	add    ecx,0x4
65014ae7:	add    edx,0x4
65014aea:	or     ah,ah
65014aec:	jne    0x65014ac0
65014aee:	mov    edi,edi
65014af0:	xor    eax,eax
65014af2:	ret    
65014af3:	nop
65014af4:	sbb    eax,eax
65014af6:	shl    eax,1
65014af8:	add    eax,0x1
65014afb:	ret    
65014afc:	test   edx,0x1
65014b02:	je     0x65014b1c
65014b04:	mov    al,BYTE PTR [edx]
65014b06:	add    edx,0x1
65014b09:	cmp    al,BYTE PTR [ecx]
65014b0b:	jne    0x65014af4
65014b0d:	add    ecx,0x1
65014b10:	or     al,al
65014b12:	je     0x65014af0
65014b14:	test   edx,0x2
65014b1a:	je     0x65014ac0
65014b1c:	mov    ax,WORD PTR [edx]
65014b1f:	add    edx,0x2
65014b22:	cmp    al,BYTE PTR [ecx]
65014b24:	jne    0x65014af4
65014b26:	or     al,al
65014b28:	je     0x65014af0
65014b2a:	cmp    ah,BYTE PTR [ecx+0x1]
65014b2d:	jne    0x65014af4
65014b2f:	or     ah,ah
65014b31:	je     0x65014af0
65014b33:	add    ecx,0x2
65014b36:	jmp    0x65014ac0
65014b38:	mov    DWORD PTR [ecx],0x65024c5c
65014b3e:	jmp    0x65011fd6
65014b43:	push   esi
65014b44:	mov    esi,ecx
65014b46:	mov    DWORD PTR [esi],0x65024c5c
65014b4c:	call   0x65011fd6
65014b51:	test   BYTE PTR [esp+0x8],0x1
65014b56:	je     0x65014b5f
65014b58:	push   esi
65014b59:	call   0x65011f02
65014b5e:	pop    ecx
65014b5f:	mov    eax,esi
65014b61:	pop    esi
65014b62:	ret    0x4
65014b65:	push   esi
65014b66:	push   edi
65014b67:	mov    edi,DWORD PTR [esp+0xc]
65014b6b:	mov    eax,DWORD PTR [edi+0x4]
65014b6e:	test   eax,eax
65014b70:	je     0x65014bbb
65014b72:	lea    edx,[eax+0x8]
65014b75:	cmp    BYTE PTR [edx],0x0
65014b78:	je     0x65014bbb
65014b7a:	mov    esi,DWORD PTR [esp+0x10]
65014b7e:	mov    ecx,DWORD PTR [esi+0x4]
65014b81:	cmp    eax,ecx
65014b83:	je     0x65014b99
65014b85:	add    ecx,0x8
65014b88:	push   ecx
65014b89:	push   edx
65014b8a:	call   0x65014ab0
65014b8f:	test   eax,eax
65014b91:	pop    ecx
65014b92:	pop    ecx
65014b93:	je     0x65014b99
65014b95:	xor    eax,eax
65014b97:	jmp    0x65014bbe
65014b99:	test   BYTE PTR [esi],0x2
65014b9c:	je     0x65014ba3
65014b9e:	test   BYTE PTR [edi],0x8
65014ba1:	je     0x65014b95
65014ba3:	mov    eax,DWORD PTR [esp+0x14]
65014ba7:	mov    eax,DWORD PTR [eax]
65014ba9:	test   al,0x1
65014bab:	je     0x65014bb2
65014bad:	test   BYTE PTR [edi],0x1
65014bb0:	je     0x65014b95
65014bb2:	test   al,0x2
65014bb4:	je     0x65014bbb
65014bb6:	test   BYTE PTR [edi],0x2
65014bb9:	je     0x65014b95
65014bbb:	xor    eax,eax
65014bbd:	inc    eax
65014bbe:	pop    edi
65014bbf:	pop    esi
65014bc0:	ret    
65014bc1:	mov    eax,DWORD PTR [esp+0x4]
65014bc5:	mov    eax,DWORD PTR [eax]
65014bc7:	mov    eax,DWORD PTR [eax]
65014bc9:	cmp    eax,0xe0434f4d
65014bce:	je     0x65014be8
65014bd0:	cmp    eax,0xe06d7363
65014bd5:	jne    0x65014c02
65014bd7:	call   0x650146eb
65014bdc:	and    DWORD PTR [eax+0x90],0x0
65014be3:	jmp    0x650157c2
65014be8:	call   0x650146eb
65014bed:	cmp    DWORD PTR [eax+0x90],0x0
65014bf4:	jle    0x65014c02
65014bf6:	call   0x650146eb
65014bfb:	add    eax,0x90
65014c00:	dec    DWORD PTR [eax]
65014c02:	xor    eax,eax
65014c04:	ret    
65014c05:	push   0x10
65014c07:	push   0x65029910
65014c0c:	call   0x65013ca0
65014c11:	mov    edi,DWORD PTR [ebp+0x10]
65014c14:	mov    ebx,DWORD PTR [ebp+0x8]
65014c17:	cmp    DWORD PTR [edi+0x4],0x80
65014c1e:	jg     0x65014c26
65014c20:	movsx  esi,BYTE PTR [ebx+0x8]
65014c24:	jmp    0x65014c29
65014c26:	mov    esi,DWORD PTR [ebx+0x8]
65014c29:	mov    DWORD PTR [ebp-0x1c],esi
65014c2c:	call   0x650146eb
65014c31:	add    eax,0x90
65014c36:	inc    DWORD PTR [eax]
65014c38:	and    DWORD PTR [ebp-0x4],0x0
65014c3c:	cmp    esi,DWORD PTR [ebp+0x14]
65014c3f:	je     0x65014ca6
65014c41:	cmp    esi,0xffffffff
65014c44:	jle    0x65014c4b
65014c46:	cmp    esi,DWORD PTR [edi+0x4]
65014c49:	jl     0x65014c50
65014c4b:	call   0x6501580e
65014c50:	mov    eax,esi
65014c52:	shl    eax,0x3
65014c55:	mov    ecx,DWORD PTR [edi+0x8]
65014c58:	add    ecx,eax
65014c5a:	mov    esi,DWORD PTR [ecx]
65014c5c:	mov    DWORD PTR [ebp-0x20],esi
65014c5f:	mov    DWORD PTR [ebp-0x4],0x1
65014c66:	cmp    DWORD PTR [ecx+0x4],0x0
65014c6a:	je     0x65014c81
65014c6c:	mov    DWORD PTR [ebx+0x8],esi
65014c6f:	push   0x103
65014c74:	push   ebx
65014c75:	mov    ecx,DWORD PTR [edi+0x8]
65014c78:	push   DWORD PTR [ecx+eax*1+0x4]
65014c7c:	call   0x65015860
65014c81:	and    DWORD PTR [ebp-0x4],0x0
65014c85:	jmp    0x65014ca1
65014c87:	push   DWORD PTR [ebp-0x14]
65014c8a:	call   0x65014bc1
65014c8f:	pop    ecx
65014c90:	ret    
65014c91:	mov    esp,DWORD PTR [ebp-0x18]
65014c94:	and    DWORD PTR [ebp-0x4],0x0
65014c98:	mov    edi,DWORD PTR [ebp+0x10]
65014c9b:	mov    ebx,DWORD PTR [ebp+0x8]
65014c9e:	mov    esi,DWORD PTR [ebp-0x20]
65014ca1:	mov    DWORD PTR [ebp-0x1c],esi
65014ca4:	jmp    0x65014c3c
65014ca6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014cad:	call   0x65014ccb
65014cb2:	cmp    esi,DWORD PTR [ebp+0x14]
65014cb5:	je     0x65014cbc
65014cb7:	call   0x6501580e
65014cbc:	mov    DWORD PTR [ebx+0x8],esi
65014cbf:	call   0x65013ce5
65014cc4:	ret    
65014cc5:	mov    ebx,DWORD PTR [ebp+0x8]
65014cc8:	mov    esi,DWORD PTR [ebp-0x1c]
65014ccb:	call   0x650146eb
65014cd0:	cmp    DWORD PTR [eax+0x90],0x0
65014cd7:	jle    0x65014ce5
65014cd9:	call   0x650146eb
65014cde:	add    eax,0x90
65014ce3:	dec    DWORD PTR [eax]
65014ce5:	ret    
65014ce6:	mov    eax,DWORD PTR [eax]
65014ce8:	cmp    DWORD PTR [eax],0xe06d7363
65014cee:	jne    0x65014d28
65014cf0:	cmp    DWORD PTR [eax+0x10],0x3
65014cf4:	jne    0x65014d28
65014cf6:	mov    ecx,DWORD PTR [eax+0x14]
65014cf9:	cmp    ecx,0x19930520
65014cff:	je     0x65014d11
65014d01:	cmp    ecx,0x19930521
65014d07:	je     0x65014d11
65014d09:	cmp    ecx,0x19930522
65014d0f:	jne    0x65014d28
65014d11:	cmp    DWORD PTR [eax+0x1c],0x0
65014d15:	jne    0x65014d28
65014d17:	call   0x650146eb
65014d1c:	xor    ecx,ecx
65014d1e:	inc    ecx
65014d1f:	mov    DWORD PTR [eax+0x20c],ecx
65014d25:	mov    eax,ecx
65014d27:	ret    
65014d28:	xor    eax,eax
65014d2a:	ret    
65014d2b:	push   0x8
65014d2d:	push   0x65029938
65014d32:	call   0x65013ca0
65014d37:	mov    ecx,DWORD PTR [ebp+0x8]
65014d3a:	test   ecx,ecx
65014d3c:	je     0x65014d68
65014d3e:	cmp    DWORD PTR [ecx],0xe06d7363
65014d44:	jne    0x65014d68
65014d46:	mov    eax,DWORD PTR [ecx+0x1c]
65014d49:	test   eax,eax
65014d4b:	je     0x65014d68
65014d4d:	mov    eax,DWORD PTR [eax+0x4]
65014d50:	test   eax,eax
65014d52:	je     0x65014d68
65014d54:	and    DWORD PTR [ebp-0x4],0x0
65014d58:	push   eax
65014d59:	push   DWORD PTR [ecx+0x18]
65014d5c:	call   0x650123c5
65014d61:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014d68:	call   0x65013ce5
65014d6d:	ret    
65014d6e:	xor    eax,eax
65014d70:	cmp    BYTE PTR [ebp+0xc],al
65014d73:	setne  al
65014d76:	ret    
65014d77:	mov    esp,DWORD PTR [ebp-0x18]
65014d7a:	jmp    0x650157c2
65014d7f:	mov    ecx,DWORD PTR [esp+0x8]
65014d83:	mov    eax,DWORD PTR [ecx]
65014d85:	push   esi
65014d86:	mov    esi,DWORD PTR [esp+0x8]
65014d8a:	add    eax,esi
65014d8c:	cmp    DWORD PTR [ecx+0x4],0x0
65014d90:	jl     0x65014da2
65014d92:	mov    edx,DWORD PTR [ecx+0x4]
65014d95:	mov    ecx,DWORD PTR [ecx+0x8]
65014d98:	mov    esi,DWORD PTR [edx+esi*1]
65014d9b:	mov    ecx,DWORD PTR [esi+ecx*1]
65014d9e:	add    ecx,edx
65014da0:	add    eax,ecx
65014da2:	pop    esi
65014da3:	ret    
65014da4:	push   ebp
65014da5:	mov    ebp,esp
65014da7:	sub    esp,0xc
65014daa:	test   edi,edi
65014dac:	jne    0x65014db8
65014dae:	call   0x6501580e
65014db3:	jmp    0x650157c2
65014db8:	and    DWORD PTR [ebp-0x8],0x0
65014dbc:	cmp    DWORD PTR [edi],0x0
65014dbf:	mov    BYTE PTR [ebp-0x1],0x0
65014dc3:	jle    0x65014e18
65014dc5:	push   ebx
65014dc6:	push   esi
65014dc7:	mov    eax,DWORD PTR [ebp+0x8]
65014dca:	mov    eax,DWORD PTR [eax+0x1c]
65014dcd:	mov    eax,DWORD PTR [eax+0xc]
65014dd0:	mov    ebx,DWORD PTR [eax]
65014dd2:	test   ebx,ebx
65014dd4:	lea    esi,[eax+0x4]
65014dd7:	jle    0x65014e0c
65014dd9:	mov    eax,DWORD PTR [ebp-0x8]
65014ddc:	shl    eax,0x4
65014ddf:	mov    DWORD PTR [ebp-0xc],eax
65014de2:	mov    ecx,DWORD PTR [ebp+0x8]
65014de5:	push   DWORD PTR [ecx+0x1c]
65014de8:	mov    eax,DWORD PTR [esi]
65014dea:	push   eax
65014deb:	mov    eax,DWORD PTR [edi+0x4]
65014dee:	add    eax,DWORD PTR [ebp-0xc]
65014df1:	push   eax
65014df2:	call   0x65014b65
65014df7:	add    esp,0xc
65014dfa:	test   eax,eax
65014dfc:	jne    0x65014e08
65014dfe:	dec    ebx
65014dff:	add    esi,0x4
65014e02:	test   ebx,ebx
65014e04:	jg     0x65014de2
65014e06:	jmp    0x65014e0c
65014e08:	mov    BYTE PTR [ebp-0x1],0x1
65014e0c:	inc    DWORD PTR [ebp-0x8]
65014e0f:	mov    eax,DWORD PTR [ebp-0x8]
65014e12:	cmp    eax,DWORD PTR [edi]
65014e14:	jl     0x65014dc7
65014e16:	pop    esi
65014e17:	pop    ebx
65014e18:	mov    al,BYTE PTR [ebp-0x1]
65014e1b:	leave  
65014e1c:	ret    
65014e1d:	push   0x4
65014e1f:	mov    eax,0x65022073
65014e24:	call   0x65013f5e
65014e29:	call   0x650146eb
65014e2e:	cmp    DWORD PTR [eax+0x94],0x0
65014e35:	je     0x65014e3c
65014e37:	call   0x6501580e
65014e3c:	and    DWORD PTR [ebp-0x4],0x0
65014e40:	call   0x650157fb
65014e45:	or     DWORD PTR [ebp-0x4],0xffffffff
65014e49:	jmp    0x650157c2
65014e4e:	call   0x650146eb
65014e53:	mov    ecx,DWORD PTR [ebp+0x8]
65014e56:	push   0x0
65014e58:	push   0x0
65014e5a:	mov    DWORD PTR [eax+0x94],ecx
65014e60:	call   0x65012306
65014e65:	int3   
65014e66:	push   0x2c
65014e68:	push   0x650299b0
65014e6d:	call   0x65013ca0
65014e72:	mov    ebx,ecx
65014e74:	mov    edi,DWORD PTR [ebp+0xc]
65014e77:	mov    esi,DWORD PTR [ebp+0x8]
65014e7a:	mov    DWORD PTR [ebp-0x1c],ebx
65014e7d:	and    DWORD PTR [ebp-0x34],0x0
65014e81:	mov    eax,DWORD PTR [edi-0x4]
65014e84:	mov    DWORD PTR [ebp-0x24],eax
65014e87:	push   DWORD PTR [esi+0x18]
65014e8a:	lea    eax,[ebp-0x3c]
65014e8d:	push   eax
65014e8e:	call   0x65012669
65014e93:	pop    ecx
65014e94:	pop    ecx
65014e95:	mov    DWORD PTR [ebp-0x28],eax
65014e98:	call   0x650146eb
65014e9d:	mov    eax,DWORD PTR [eax+0x88]
65014ea3:	mov    DWORD PTR [ebp-0x2c],eax
65014ea6:	call   0x650146eb
65014eab:	mov    eax,DWORD PTR [eax+0x8c]
65014eb1:	mov    DWORD PTR [ebp-0x30],eax
65014eb4:	call   0x650146eb
65014eb9:	mov    DWORD PTR [eax+0x88],esi
65014ebf:	call   0x650146eb
65014ec4:	mov    ecx,DWORD PTR [ebp+0x10]
65014ec7:	mov    DWORD PTR [eax+0x8c],ecx
65014ecd:	and    DWORD PTR [ebp-0x4],0x0
65014ed1:	xor    eax,eax
65014ed3:	inc    eax
65014ed4:	mov    DWORD PTR [ebp+0x10],eax
65014ed7:	mov    DWORD PTR [ebp-0x4],eax
65014eda:	push   DWORD PTR [ebp+0x1c]
65014edd:	push   DWORD PTR [ebp+0x18]
65014ee0:	push   ebx
65014ee1:	push   DWORD PTR [ebp+0x14]
65014ee4:	push   edi
65014ee5:	call   0x650126fe
65014eea:	add    esp,0x14
65014eed:	mov    DWORD PTR [ebp-0x1c],eax
65014ef0:	and    DWORD PTR [ebp-0x4],0x0
65014ef4:	jmp    0x65014f65
65014ef6:	mov    eax,DWORD PTR [ebp-0x14]
65014ef9:	call   0x65014ce6
65014efe:	ret    
65014eff:	mov    esp,DWORD PTR [ebp-0x18]
65014f02:	call   0x650146eb
65014f07:	and    DWORD PTR [eax+0x20c],0x0
65014f0e:	mov    esi,DWORD PTR [ebp+0x14]
65014f11:	mov    edi,DWORD PTR [ebp+0xc]
65014f14:	cmp    DWORD PTR [esi+0x4],0x80
65014f1b:	jg     0x65014f23
65014f1d:	movsx  ecx,BYTE PTR [edi+0x8]
65014f21:	jmp    0x65014f26
65014f23:	mov    ecx,DWORD PTR [edi+0x8]
65014f26:	mov    ebx,DWORD PTR [esi+0x10]
65014f29:	and    DWORD PTR [ebp-0x20],0x0
65014f2d:	mov    eax,DWORD PTR [ebp-0x20]
65014f30:	cmp    eax,DWORD PTR [esi+0xc]
65014f33:	jae    0x65014f4d
65014f35:	imul   eax,eax,0x14
65014f38:	add    eax,ebx
65014f3a:	mov    edx,DWORD PTR [eax+0x4]
65014f3d:	cmp    ecx,edx
65014f3f:	jle    0x65014f81
65014f41:	cmp    ecx,DWORD PTR [eax+0x8]
65014f44:	jg     0x65014f81
65014f46:	mov    eax,DWORD PTR [esi+0x8]
65014f49:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
65014f4d:	push   ecx
65014f4e:	push   esi
65014f4f:	push   0x0
65014f51:	push   edi
65014f52:	call   0x65014c05
65014f57:	add    esp,0x10
65014f5a:	and    DWORD PTR [ebp-0x1c],0x0
65014f5e:	and    DWORD PTR [ebp-0x4],0x0
65014f62:	mov    esi,DWORD PTR [ebp+0x8]
65014f65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65014f6c:	mov    DWORD PTR [ebp+0x10],0x0
65014f73:	call   0x65014f8c
65014f78:	mov    eax,DWORD PTR [ebp-0x1c]
65014f7b:	call   0x65013ce5
65014f80:	ret    
65014f81:	inc    DWORD PTR [ebp-0x20]
65014f84:	jmp    0x65014f2d
65014f86:	mov    edi,DWORD PTR [ebp+0xc]
65014f89:	mov    esi,DWORD PTR [ebp+0x8]
65014f8c:	mov    eax,DWORD PTR [ebp-0x24]
65014f8f:	mov    DWORD PTR [edi-0x4],eax
65014f92:	push   DWORD PTR [ebp-0x28]
65014f95:	call   0x650126b2
65014f9a:	pop    ecx
65014f9b:	call   0x650146eb
65014fa0:	mov    ecx,DWORD PTR [ebp-0x2c]
65014fa3:	mov    DWORD PTR [eax+0x88],ecx
65014fa9:	call   0x650146eb
65014fae:	mov    ecx,DWORD PTR [ebp-0x30]
65014fb1:	mov    DWORD PTR [eax+0x8c],ecx
65014fb7:	cmp    DWORD PTR [esi],0xe06d7363
65014fbd:	jne    0x65015001
65014fbf:	cmp    DWORD PTR [esi+0x10],0x3
65014fc3:	jne    0x65015001
65014fc5:	mov    eax,DWORD PTR [esi+0x14]
65014fc8:	cmp    eax,0x19930520
65014fcd:	je     0x65014fdd
65014fcf:	cmp    eax,0x19930521
65014fd4:	je     0x65014fdd
65014fd6:	cmp    eax,0x19930522
65014fdb:	jne    0x65015001
65014fdd:	cmp    DWORD PTR [ebp-0x34],0x0
65014fe1:	jne    0x65015001
65014fe3:	cmp    DWORD PTR [ebp-0x1c],0x0
65014fe7:	je     0x65015001
65014fe9:	push   DWORD PTR [esi+0x18]
65014fec:	call   0x65012691
65014ff1:	pop    ecx
65014ff2:	test   eax,eax
65014ff4:	je     0x65015001
65014ff6:	push   DWORD PTR [ebp+0x10]
65014ff9:	push   esi
65014ffa:	call   0x65014d2b
65014fff:	pop    ecx
65015000:	pop    ecx
65015001:	ret    
65015002:	push   0xc
65015004:	push   0x650299d8
65015009:	call   0x65013ca0
6501500e:	xor    edx,edx
65015010:	mov    DWORD PTR [ebp-0x1c],edx
65015013:	mov    eax,DWORD PTR [ebp+0x10]
65015016:	mov    ecx,DWORD PTR [eax+0x4]
65015019:	cmp    ecx,edx
6501501b:	je     0x65015179
65015021:	cmp    BYTE PTR [ecx+0x8],dl
65015024:	je     0x65015179
6501502a:	mov    ecx,DWORD PTR [eax+0x8]
6501502d:	cmp    ecx,edx
6501502f:	jne    0x6501503d
65015031:	test   DWORD PTR [eax],0x80000000
65015037:	je     0x65015179
6501503d:	mov    eax,DWORD PTR [eax]
6501503f:	mov    esi,DWORD PTR [ebp+0xc]
65015042:	test   eax,eax
65015044:	js     0x6501504a
65015046:	lea    esi,[ecx+esi*1+0xc]
6501504a:	mov    DWORD PTR [ebp-0x4],edx
6501504d:	xor    ebx,ebx
6501504f:	inc    ebx
65015050:	push   ebx
65015051:	test   al,0x8
65015053:	je     0x65015096
65015055:	mov    edi,DWORD PTR [ebp+0x8]
65015058:	push   DWORD PTR [edi+0x18]
6501505b:	call   0x6501adab
65015060:	pop    ecx
65015061:	pop    ecx
65015062:	test   eax,eax
65015064:	je     0x6501515c
6501506a:	push   ebx
6501506b:	push   esi
6501506c:	call   0x6501adab
65015071:	pop    ecx
65015072:	pop    ecx
65015073:	test   eax,eax
65015075:	je     0x6501515c
6501507b:	mov    eax,DWORD PTR [edi+0x18]
6501507e:	mov    DWORD PTR [esi],eax
65015080:	mov    ecx,DWORD PTR [ebp+0x14]
65015083:	add    ecx,0x8
65015086:	push   ecx
65015087:	push   eax
65015088:	call   0x65014d7f
6501508d:	pop    ecx
6501508e:	pop    ecx
6501508f:	mov    DWORD PTR [esi],eax
65015091:	jmp    0x65015161
65015096:	mov    edi,DWORD PTR [ebp+0x14]
65015099:	mov    eax,DWORD PTR [ebp+0x8]
6501509c:	push   DWORD PTR [eax+0x18]
6501509f:	test   BYTE PTR [edi],bl
650150a1:	je     0x650150eb
650150a3:	call   0x6501adab
650150a8:	pop    ecx
650150a9:	pop    ecx
650150aa:	test   eax,eax
650150ac:	je     0x6501515c
650150b2:	push   ebx
650150b3:	push   esi
650150b4:	call   0x6501adab
650150b9:	pop    ecx
650150ba:	pop    ecx
650150bb:	test   eax,eax
650150bd:	je     0x6501515c
650150c3:	push   DWORD PTR [edi+0x14]
650150c6:	mov    eax,DWORD PTR [ebp+0x8]
650150c9:	push   DWORD PTR [eax+0x18]
650150cc:	push   esi
650150cd:	call   0x65013720
650150d2:	add    esp,0xc
650150d5:	cmp    DWORD PTR [edi+0x14],0x4
650150d9:	jne    0x65015161
650150df:	mov    eax,DWORD PTR [esi]
650150e1:	test   eax,eax
650150e3:	je     0x65015161
650150e5:	add    edi,0x8
650150e8:	push   edi
650150e9:	jmp    0x65015087
650150eb:	cmp    DWORD PTR [edi+0x18],edx
650150ee:	jne    0x65015128
650150f0:	call   0x6501adab
650150f5:	pop    ecx
650150f6:	pop    ecx
650150f7:	test   eax,eax
650150f9:	je     0x6501515c
650150fb:	push   ebx
650150fc:	push   esi
650150fd:	call   0x6501adab
65015102:	pop    ecx
65015103:	pop    ecx
65015104:	test   eax,eax
65015106:	je     0x6501515c
65015108:	push   DWORD PTR [edi+0x14]
6501510b:	add    edi,0x8
6501510e:	push   edi
6501510f:	mov    eax,DWORD PTR [ebp+0x8]
65015112:	push   DWORD PTR [eax+0x18]
65015115:	call   0x65014d7f
6501511a:	pop    ecx
6501511b:	pop    ecx
6501511c:	push   eax
6501511d:	push   esi
6501511e:	call   0x65013720
65015123:	add    esp,0xc
65015126:	jmp    0x65015161
65015128:	call   0x6501adab
6501512d:	pop    ecx
6501512e:	pop    ecx
6501512f:	test   eax,eax
65015131:	je     0x6501515c
65015133:	push   ebx
65015134:	push   esi
65015135:	call   0x6501adab
6501513a:	pop    ecx
6501513b:	pop    ecx
6501513c:	test   eax,eax
6501513e:	je     0x6501515c
65015140:	push   DWORD PTR [edi+0x18]
65015143:	call   0x6501adab
65015148:	pop    ecx
65015149:	test   eax,eax
6501514b:	je     0x6501515c
6501514d:	test   BYTE PTR [edi],0x4
65015150:	push   0x0
65015152:	pop    eax
65015153:	setne  al
65015156:	inc    eax
65015157:	mov    DWORD PTR [ebp-0x1c],eax
6501515a:	jmp    0x65015161
6501515c:	call   0x6501580e
65015161:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015168:	mov    eax,DWORD PTR [ebp-0x1c]
6501516b:	jmp    0x6501517b
6501516d:	xor    eax,eax
6501516f:	inc    eax
65015170:	ret    
65015171:	mov    esp,DWORD PTR [ebp-0x18]
65015174:	jmp    0x650157c2
65015179:	xor    eax,eax
6501517b:	call   0x65013ce5
65015180:	ret    
65015181:	push   0x8
65015183:	push   0x650299f8
65015188:	call   0x65013ca0
6501518d:	mov    eax,DWORD PTR [ebp+0x10]
65015190:	test   DWORD PTR [eax],0x80000000
65015196:	je     0x6501519d
65015198:	mov    ebx,DWORD PTR [ebp+0xc]
6501519b:	jmp    0x650151a7
6501519d:	mov    ecx,DWORD PTR [eax+0x8]
650151a0:	mov    edx,DWORD PTR [ebp+0xc]
650151a3:	lea    ebx,[ecx+edx*1+0xc]
650151a7:	and    DWORD PTR [ebp-0x4],0x0
650151ab:	mov    esi,DWORD PTR [ebp+0x14]
650151ae:	push   esi
650151af:	push   eax
650151b0:	push   DWORD PTR [ebp+0xc]
650151b3:	mov    edi,DWORD PTR [ebp+0x8]
650151b6:	push   edi
650151b7:	call   0x65015002
650151bc:	add    esp,0x10
650151bf:	dec    eax
650151c0:	je     0x650151e1
650151c2:	dec    eax
650151c3:	jne    0x650151f9
650151c5:	push   0x1
650151c7:	lea    eax,[esi+0x8]
650151ca:	push   eax
650151cb:	push   DWORD PTR [edi+0x18]
650151ce:	call   0x65014d7f
650151d3:	pop    ecx
650151d4:	pop    ecx
650151d5:	push   eax
650151d6:	push   DWORD PTR [esi+0x18]
650151d9:	push   ebx
650151da:	call   0x650123c5
650151df:	jmp    0x650151f9
650151e1:	lea    eax,[esi+0x8]
650151e4:	push   eax
650151e5:	push   DWORD PTR [edi+0x18]
650151e8:	call   0x65014d7f
650151ed:	pop    ecx
650151ee:	pop    ecx
650151ef:	push   eax
650151f0:	push   DWORD PTR [esi+0x18]
650151f3:	push   ebx
650151f4:	call   0x650123c5
650151f9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015200:	call   0x65013ce5
65015205:	ret    
65015206:	xor    eax,eax
65015208:	inc    eax
65015209:	ret    
6501520a:	mov    esp,DWORD PTR [ebp-0x18]
6501520d:	jmp    0x650157c2
65015212:	push   ebp
65015213:	mov    ebp,esp
65015215:	cmp    DWORD PTR [ebp+0x18],0x0
65015219:	je     0x6501522b
6501521b:	push   DWORD PTR [ebp+0x18]
6501521e:	push   ebx
6501521f:	push   esi
65015220:	push   DWORD PTR [ebp+0x8]
65015223:	call   0x65015181
65015228:	add    esp,0x10
6501522b:	cmp    DWORD PTR [ebp+0x20],0x0
6501522f:	push   DWORD PTR [ebp+0x8]
65015232:	jne    0x65015237
65015234:	push   esi
65015235:	jmp    0x6501523a
65015237:	push   DWORD PTR [ebp+0x20]
6501523a:	call   0x650123cc
6501523f:	push   DWORD PTR [edi]
65015241:	push   DWORD PTR [ebp+0x14]
65015244:	push   DWORD PTR [ebp+0x10]
65015247:	push   esi
65015248:	call   0x65014c05
6501524d:	mov    eax,DWORD PTR [edi+0x4]
65015250:	push   0x100
65015255:	push   DWORD PTR [ebp+0x1c]
65015258:	inc    eax
65015259:	push   DWORD PTR [ebp+0x14]
6501525c:	mov    DWORD PTR [esi+0x8],eax
6501525f:	push   DWORD PTR [ebp+0xc]
65015262:	mov    ecx,DWORD PTR [ebx+0xc]
65015265:	push   esi
65015266:	push   DWORD PTR [ebp+0x8]
65015269:	call   0x65014e66
6501526e:	add    esp,0x28
65015271:	test   eax,eax
65015273:	je     0x6501527c
65015275:	push   esi
65015276:	push   eax
65015277:	call   0x65012395
6501527c:	pop    ebp
6501527d:	ret    
6501527e:	push   ebp
6501527f:	mov    ebp,esp
65015281:	push   ecx
65015282:	push   ecx
65015283:	push   esi
65015284:	mov    esi,DWORD PTR [ebp+0x8]
65015287:	cmp    DWORD PTR [esi],0x80000003
6501528d:	je     0x6501536d
65015293:	push   edi
65015294:	call   0x650146eb
65015299:	cmp    DWORD PTR [eax+0x80],0x0
650152a0:	je     0x650152e1
650152a2:	call   0x650146eb
650152a7:	lea    edi,[eax+0x80]
650152ad:	call   0x650144c6
650152b2:	cmp    DWORD PTR [edi],eax
650152b4:	je     0x650152e1
650152b6:	cmp    DWORD PTR [esi],0xe0434f4d
650152bc:	je     0x650152e1
650152be:	push   DWORD PTR [ebp+0x24]
650152c1:	push   DWORD PTR [ebp+0x20]
650152c4:	push   DWORD PTR [ebp+0x18]
650152c7:	push   DWORD PTR [ebp+0x14]
650152ca:	push   DWORD PTR [ebp+0x10]
650152cd:	push   DWORD PTR [ebp+0xc]
650152d0:	push   esi
650152d1:	call   0x65012484
650152d6:	add    esp,0x1c
650152d9:	test   eax,eax
650152db:	jne    0x6501536c
650152e1:	mov    edi,DWORD PTR [ebp+0x18]
650152e4:	cmp    DWORD PTR [edi+0xc],0x0
650152e8:	jne    0x650152ef
650152ea:	call   0x6501580e
650152ef:	mov    esi,DWORD PTR [ebp+0x1c]
650152f2:	lea    eax,[ebp-0x8]
650152f5:	push   eax
650152f6:	lea    eax,[ebp-0x4]
650152f9:	push   eax
650152fa:	push   esi
650152fb:	push   DWORD PTR [ebp+0x20]
650152fe:	push   edi
650152ff:	call   0x650125f6
65015304:	mov    edi,eax
65015306:	mov    eax,DWORD PTR [ebp-0x4]
65015309:	add    esp,0x14
6501530c:	cmp    eax,DWORD PTR [ebp-0x8]
6501530f:	jae    0x6501536c
65015311:	push   ebx
65015312:	cmp    esi,DWORD PTR [edi]
65015314:	jl     0x6501535d
65015316:	cmp    esi,DWORD PTR [edi+0x4]
65015319:	jg     0x6501535d
6501531b:	mov    eax,DWORD PTR [edi+0xc]
6501531e:	mov    ecx,DWORD PTR [edi+0x10]
65015321:	shl    eax,0x4
65015324:	add    eax,ecx
65015326:	mov    ecx,DWORD PTR [eax-0xc]
65015329:	test   ecx,ecx
6501532b:	je     0x65015333
6501532d:	cmp    BYTE PTR [ecx+0x8],0x0
65015331:	jne    0x6501535d
65015333:	lea    ebx,[eax-0x10]
65015336:	test   BYTE PTR [ebx],0x40
65015339:	jne    0x6501535d
6501533b:	push   DWORD PTR [ebp+0x24]
6501533e:	mov    esi,DWORD PTR [ebp+0xc]
65015341:	push   DWORD PTR [ebp+0x20]
65015344:	push   0x0
65015346:	push   DWORD PTR [ebp+0x18]
65015349:	push   DWORD PTR [ebp+0x14]
6501534c:	push   DWORD PTR [ebp+0x10]
6501534f:	push   DWORD PTR [ebp+0x8]
65015352:	call   0x65015212
65015357:	mov    esi,DWORD PTR [ebp+0x1c]
6501535a:	add    esp,0x1c
6501535d:	inc    DWORD PTR [ebp-0x4]
65015360:	mov    eax,DWORD PTR [ebp-0x4]
65015363:	add    edi,0x14
65015366:	cmp    eax,DWORD PTR [ebp-0x8]
65015369:	jb     0x65015312
6501536b:	pop    ebx
6501536c:	pop    edi
6501536d:	pop    esi
6501536e:	leave  
6501536f:	ret    
65015370:	push   ebp
65015371:	mov    ebp,esp
65015373:	sub    esp,0x2c
65015376:	mov    ecx,DWORD PTR [ebp+0xc]
65015379:	push   ebx
6501537a:	mov    ebx,DWORD PTR [ebp+0x18]
6501537d:	mov    eax,DWORD PTR [ebx+0x4]
65015380:	cmp    eax,0x80
65015385:	push   esi
65015386:	push   edi
65015387:	mov    BYTE PTR [ebp-0x1],0x0
6501538b:	jg     0x65015393
6501538d:	movsx  ecx,BYTE PTR [ecx+0x8]
65015391:	jmp    0x65015396
65015393:	mov    ecx,DWORD PTR [ecx+0x8]
65015396:	cmp    ecx,0xffffffff
65015399:	mov    DWORD PTR [ebp-0x8],ecx
6501539c:	jl     0x650153a2
6501539e:	cmp    ecx,eax
650153a0:	jl     0x650153a7
650153a2:	call   0x6501580e
650153a7:	mov    esi,DWORD PTR [ebp+0x8]
650153aa:	mov    edi,0xe06d7363
650153af:	cmp    DWORD PTR [esi],edi
650153b1:	jne    0x65015682
650153b7:	cmp    DWORD PTR [esi+0x10],0x3
650153bb:	mov    ebx,0x19930520
650153c0:	jne    0x650154ef
650153c6:	mov    eax,DWORD PTR [esi+0x14]
650153c9:	cmp    eax,ebx
650153cb:	je     0x650153df
650153cd:	cmp    eax,0x19930521
650153d2:	je     0x650153df
650153d4:	cmp    eax,0x19930522
650153d9:	jne    0x650154ef
650153df:	cmp    DWORD PTR [esi+0x1c],0x0
650153e3:	jne    0x650154ef
650153e9:	call   0x650146eb
650153ee:	cmp    DWORD PTR [eax+0x88],0x0
650153f5:	je     0x650156c1
650153fb:	call   0x650146eb
65015400:	mov    esi,DWORD PTR [eax+0x88]
65015406:	mov    DWORD PTR [ebp+0x8],esi
65015409:	call   0x650146eb
6501540e:	mov    eax,DWORD PTR [eax+0x8c]
65015414:	push   0x1
65015416:	push   esi
65015417:	mov    DWORD PTR [ebp+0x10],eax
6501541a:	call   0x6501adab
6501541f:	test   eax,eax
65015421:	pop    ecx
65015422:	pop    ecx
65015423:	jne    0x6501542a
65015425:	call   0x6501580e
6501542a:	cmp    DWORD PTR [esi],edi
6501542c:	jne    0x65015454
6501542e:	cmp    DWORD PTR [esi+0x10],0x3
65015432:	jne    0x65015454
65015434:	mov    eax,DWORD PTR [esi+0x14]
65015437:	cmp    eax,ebx
65015439:	je     0x65015449
6501543b:	cmp    eax,0x19930521
65015440:	je     0x65015449
65015442:	cmp    eax,0x19930522
65015447:	jne    0x65015454
65015449:	cmp    DWORD PTR [esi+0x1c],0x0
6501544d:	jne    0x65015454
6501544f:	call   0x6501580e
65015454:	call   0x650146eb
65015459:	cmp    DWORD PTR [eax+0x94],0x0
65015460:	je     0x650154ef
65015466:	call   0x650146eb
6501546b:	mov    edi,DWORD PTR [eax+0x94]
65015471:	call   0x650146eb
65015476:	push   DWORD PTR [ebp+0x8]
65015479:	xor    esi,esi
6501547b:	mov    DWORD PTR [eax+0x94],esi
65015481:	call   0x65014da4
65015486:	test   al,al
65015488:	pop    ecx
65015489:	jne    0x650154e7
6501548b:	xor    ebx,ebx
6501548d:	cmp    DWORD PTR [edi],ebx
6501548f:	jle    0x650154ae
65015491:	mov    eax,DWORD PTR [edi+0x4]
65015494:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
65015498:	push   0x6502c234
6501549d:	call   0x6501237a
650154a2:	test   al,al
650154a4:	jne    0x650154b3
650154a6:	inc    esi
650154a7:	add    ebx,0x10
650154aa:	cmp    esi,DWORD PTR [edi]
650154ac:	jl     0x65015491
650154ae:	jmp    0x650157c2
650154b3:	push   0x1
650154b5:	push   DWORD PTR [ebp+0x8]
650154b8:	call   0x65014d2b
650154bd:	pop    ecx
650154be:	pop    ecx
650154bf:	lea    eax,[ebp+0x8]
650154c2:	push   eax
650154c3:	lea    ecx,[ebp-0x2c]
650154c6:	mov    DWORD PTR [ebp+0x8],0x65024c64
650154cd:	call   0x65011f18
650154d2:	push   0x65029a14
650154d7:	lea    eax,[ebp-0x2c]
650154da:	push   eax
650154db:	mov    DWORD PTR [ebp-0x2c],0x65024c5c
650154e2:	call   0x65012306
650154e7:	mov    esi,DWORD PTR [ebp+0x8]
650154ea:	mov    edi,0xe06d7363
650154ef:	cmp    DWORD PTR [esi],edi
650154f1:	jne    0x6501567f
650154f7:	cmp    DWORD PTR [esi+0x10],0x3
650154fb:	jne    0x6501567f
65015501:	mov    eax,DWORD PTR [esi+0x14]
65015504:	cmp    eax,ebx
65015506:	je     0x6501551a
65015508:	cmp    eax,0x19930521
6501550d:	je     0x6501551a
6501550f:	cmp    eax,0x19930522
65015514:	jne    0x6501567f
6501551a:	mov    edi,DWORD PTR [ebp+0x18]
6501551d:	cmp    DWORD PTR [edi+0xc],0x0
65015521:	jbe    0x650155e6
65015527:	lea    eax,[ebp-0x1c]
6501552a:	push   eax
6501552b:	lea    eax,[ebp-0x10]
6501552e:	push   eax
6501552f:	push   DWORD PTR [ebp-0x8]
65015532:	push   DWORD PTR [ebp+0x20]
65015535:	push   edi
65015536:	call   0x650125f6
6501553b:	add    esp,0x14
6501553e:	mov    edi,eax
65015540:	mov    eax,DWORD PTR [ebp-0x10]
65015543:	cmp    eax,DWORD PTR [ebp-0x1c]
65015546:	jae    0x650155e3
6501554c:	mov    eax,DWORD PTR [ebp-0x8]
6501554f:	cmp    DWORD PTR [edi],eax
65015551:	jg     0x650155d8
65015557:	cmp    eax,DWORD PTR [edi+0x4]
6501555a:	jg     0x650155d8
6501555c:	mov    eax,DWORD PTR [edi+0x10]
6501555f:	mov    DWORD PTR [ebp-0xc],eax
65015562:	mov    eax,DWORD PTR [edi+0xc]
65015565:	test   eax,eax
65015567:	mov    DWORD PTR [ebp-0x18],eax
6501556a:	jle    0x650155d8
6501556c:	mov    eax,DWORD PTR [esi+0x1c]
6501556f:	mov    eax,DWORD PTR [eax+0xc]
65015572:	lea    ebx,[eax+0x4]
65015575:	mov    eax,DWORD PTR [eax]
65015577:	test   eax,eax
65015579:	mov    DWORD PTR [ebp-0x14],eax
6501557c:	jle    0x650155a1
6501557e:	push   DWORD PTR [esi+0x1c]
65015581:	mov    eax,DWORD PTR [ebx]
65015583:	push   eax
65015584:	push   DWORD PTR [ebp-0xc]
65015587:	mov    DWORD PTR [ebp-0x20],eax
6501558a:	call   0x65014b65
6501558f:	add    esp,0xc
65015592:	test   eax,eax
65015594:	jne    0x650155b0
65015596:	dec    DWORD PTR [ebp-0x14]
65015599:	add    ebx,0x4
6501559c:	cmp    DWORD PTR [ebp-0x14],eax
6501559f:	jg     0x6501557e
650155a1:	dec    DWORD PTR [ebp-0x18]
650155a4:	add    DWORD PTR [ebp-0xc],0x10
650155a8:	cmp    DWORD PTR [ebp-0x18],0x0
650155ac:	jg     0x6501556c
650155ae:	jmp    0x650155d8
650155b0:	push   DWORD PTR [ebp+0x24]
650155b3:	mov    ebx,DWORD PTR [ebp-0xc]
650155b6:	push   DWORD PTR [ebp+0x20]
650155b9:	mov    BYTE PTR [ebp-0x1],0x1
650155bd:	push   DWORD PTR [ebp-0x20]
650155c0:	push   DWORD PTR [ebp+0x18]
650155c3:	push   DWORD PTR [ebp+0x14]
650155c6:	push   DWORD PTR [ebp+0x10]
650155c9:	push   esi
650155ca:	mov    esi,DWORD PTR [ebp+0xc]
650155cd:	call   0x65015212
650155d2:	mov    esi,DWORD PTR [ebp+0x8]
650155d5:	add    esp,0x1c
650155d8:	inc    DWORD PTR [ebp-0x10]
650155db:	add    edi,0x14
650155de:	jmp    0x65015540
650155e3:	mov    edi,DWORD PTR [ebp+0x18]
650155e6:	cmp    BYTE PTR [ebp+0x1c],0x0
650155ea:	je     0x650155f6
650155ec:	push   0x1
650155ee:	push   esi
650155ef:	call   0x65014d2b
650155f4:	pop    ecx
650155f5:	pop    ecx
650155f6:	cmp    BYTE PTR [ebp-0x1],0x0
650155fa:	jne    0x650156ae
65015600:	mov    eax,DWORD PTR [edi]
65015602:	and    eax,0x1fffffff
65015607:	cmp    eax,0x19930521
6501560c:	jb     0x650156ae
65015612:	mov    edi,DWORD PTR [edi+0x1c]
65015615:	test   edi,edi
65015617:	je     0x650156ae
6501561d:	push   esi
6501561e:	call   0x65014da4
65015623:	test   al,al
65015625:	pop    ecx
65015626:	jne    0x650156ae
6501562c:	call   0x650146eb
65015631:	call   0x650146eb
65015636:	call   0x650146eb
6501563b:	mov    DWORD PTR [eax+0x88],esi
65015641:	call   0x650146eb
65015646:	cmp    DWORD PTR [ebp+0x24],0x0
6501564a:	mov    ecx,DWORD PTR [ebp+0x10]
6501564d:	mov    DWORD PTR [eax+0x8c],ecx
65015653:	push   esi
65015654:	jne    0x6501565b
65015656:	push   DWORD PTR [ebp+0xc]
65015659:	jmp    0x6501565e
6501565b:	push   DWORD PTR [ebp+0x24]
6501565e:	call   0x650123cc
65015663:	mov    esi,DWORD PTR [ebp+0x18]
65015666:	push   0xffffffff
65015668:	push   esi
65015669:	push   DWORD PTR [ebp+0x14]
6501566c:	push   DWORD PTR [ebp+0xc]
6501566f:	call   0x65014c05
65015674:	add    esp,0x10
65015677:	push   DWORD PTR [esi+0x1c]
6501567a:	call   0x65014e1d
6501567f:	mov    ebx,DWORD PTR [ebp+0x18]
65015682:	cmp    DWORD PTR [ebx+0xc],0x0
65015686:	jbe    0x650156ae
65015688:	cmp    BYTE PTR [ebp+0x1c],0x0
6501568c:	jne    0x650154ae
65015692:	push   DWORD PTR [ebp+0x24]
65015695:	push   DWORD PTR [ebp+0x20]
65015698:	push   DWORD PTR [ebp-0x8]
6501569b:	push   ebx
6501569c:	push   DWORD PTR [ebp+0x14]
6501569f:	push   DWORD PTR [ebp+0x10]
650156a2:	push   DWORD PTR [ebp+0xc]
650156a5:	push   esi
650156a6:	call   0x6501527e
650156ab:	add    esp,0x20
650156ae:	call   0x650146eb
650156b3:	cmp    DWORD PTR [eax+0x94],0x0
650156ba:	je     0x650156c1
650156bc:	call   0x6501580e
650156c1:	pop    edi
650156c2:	pop    esi
650156c3:	pop    ebx
650156c4:	leave  
650156c5:	ret    
650156c6:	push   esi
650156c7:	push   DWORD PTR [esp+0x8]
650156cb:	mov    esi,ecx
650156cd:	call   0x65011f7e
650156d2:	mov    DWORD PTR [esi],0x65024c5c
650156d8:	mov    eax,esi
650156da:	pop    esi
650156db:	ret    0x4
650156de:	push   ebp
650156df:	mov    ebp,esp
650156e1:	push   ebx
650156e2:	push   esi
650156e3:	push   edi
650156e4:	call   0x650146eb
650156e9:	cmp    DWORD PTR [eax+0x20c],0x0
650156f0:	mov    eax,DWORD PTR [ebp+0x18]
650156f3:	mov    ecx,DWORD PTR [ebp+0x8]
650156f6:	mov    edi,0xe06d7363
650156fb:	mov    esi,0x1fffffff
65015700:	mov    ebx,0x19930522
65015705:	jne    0x65015727
65015707:	mov    edx,DWORD PTR [ecx]
65015709:	cmp    edx,edi
6501570b:	je     0x65015727
6501570d:	cmp    edx,0x80000026
65015713:	je     0x65015727
65015715:	mov    edx,DWORD PTR [eax]
65015717:	and    edx,esi
65015719:	cmp    edx,ebx
6501571b:	jb     0x65015727
6501571d:	test   BYTE PTR [eax+0x20],0x1
65015721:	jne    0x650157ba
65015727:	test   BYTE PTR [ecx+0x4],0x66
6501572b:	je     0x65015750
6501572d:	cmp    DWORD PTR [eax+0x4],0x0
65015731:	je     0x650157ba
65015737:	cmp    DWORD PTR [ebp+0x1c],0x0
6501573b:	jne    0x650157ba
6501573d:	push   0xffffffff
6501573f:	push   eax
65015740:	push   DWORD PTR [ebp+0x14]
65015743:	push   DWORD PTR [ebp+0xc]
65015746:	call   0x65014c05
6501574b:	add    esp,0x10
6501574e:	jmp    0x650157ba
65015750:	cmp    DWORD PTR [eax+0xc],0x0
65015754:	jne    0x65015768
65015756:	mov    edx,DWORD PTR [eax]
65015758:	and    edx,esi
6501575a:	cmp    edx,0x19930521
65015760:	jb     0x650157ba
65015762:	cmp    DWORD PTR [eax+0x1c],0x0
65015766:	je     0x650157ba
65015768:	cmp    DWORD PTR [ecx],edi
6501576a:	jne    0x6501579e
6501576c:	cmp    DWORD PTR [ecx+0x10],0x3
65015770:	jb     0x6501579e
65015772:	cmp    DWORD PTR [ecx+0x14],ebx
65015775:	jbe    0x6501579e
65015777:	mov    edx,DWORD PTR [ecx+0x1c]
6501577a:	mov    edx,DWORD PTR [edx+0x8]
6501577d:	test   edx,edx
6501577f:	je     0x6501579e
65015781:	movzx  esi,BYTE PTR [ebp+0x24]
65015785:	push   esi
65015786:	push   DWORD PTR [ebp+0x20]
65015789:	push   DWORD PTR [ebp+0x1c]
6501578c:	push   eax
6501578d:	push   DWORD PTR [ebp+0x14]
65015790:	push   DWORD PTR [ebp+0x10]
65015793:	push   DWORD PTR [ebp+0xc]
65015796:	push   ecx
65015797:	call   edx
65015799:	add    esp,0x20
6501579c:	jmp    0x650157bd
6501579e:	push   DWORD PTR [ebp+0x20]
650157a1:	push   DWORD PTR [ebp+0x1c]
650157a4:	push   DWORD PTR [ebp+0x24]
650157a7:	push   eax
650157a8:	push   DWORD PTR [ebp+0x14]
650157ab:	push   DWORD PTR [ebp+0x10]
650157ae:	push   DWORD PTR [ebp+0xc]
650157b1:	push   ecx
650157b2:	call   0x65015370
650157b7:	add    esp,0x20
650157ba:	xor    eax,eax
650157bc:	inc    eax
650157bd:	pop    edi
650157be:	pop    esi
650157bf:	pop    ebx
650157c0:	pop    ebp
650157c1:	ret    
650157c2:	push   0x8
650157c4:	push   0x65029a50
650157c9:	call   0x65013ca0
650157ce:	call   0x650146eb
650157d3:	mov    eax,DWORD PTR [eax+0x78]
650157d6:	test   eax,eax
650157d8:	je     0x650157f0
650157da:	and    DWORD PTR [ebp-0x4],0x0
650157de:	call   eax
650157e0:	jmp    0x650157e9
650157e2:	xor    eax,eax
650157e4:	inc    eax
650157e5:	ret    
650157e6:	mov    esp,DWORD PTR [ebp-0x18]
650157e9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650157f0:	call   0x6501adb8
650157f5:	call   0x65013ce5
650157fa:	ret    
650157fb:	call   0x650146eb
65015800:	mov    eax,DWORD PTR [eax+0x7c]
65015803:	test   eax,eax
65015805:	je     0x65015809
65015807:	call   eax
65015809:	jmp    0x650157c2
6501580e:	push   0x8
65015810:	push   0x65029a70
65015815:	call   0x65013ca0
6501581a:	push   DWORD PTR ds:0x6502d5c0
65015820:	call   0x650144cf
65015825:	pop    ecx
65015826:	test   eax,eax
65015828:	je     0x65015840
6501582a:	and    DWORD PTR [ebp-0x4],0x0
6501582e:	call   eax
65015830:	jmp    0x65015839
65015832:	xor    eax,eax
65015834:	inc    eax
65015835:	ret    
65015836:	mov    esp,DWORD PTR [ebp-0x18]
65015839:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015840:	jmp    0x650157c2
65015845:	push   0x650157c2
6501584a:	call   0x65014458
6501584f:	pop    ecx
65015850:	mov    ds:0x6502d5c0,eax
65015855:	ret    
65015856:	int3   
65015857:	int3   
65015858:	int3   
65015859:	int3   
6501585a:	int3   
6501585b:	int3   
6501585c:	int3   
6501585d:	int3   
6501585e:	int3   
6501585f:	int3   
65015860:	push   ebp
65015861:	mov    ebp,esp
65015863:	sub    esp,0x4
65015866:	push   ebx
65015867:	push   ecx
65015868:	mov    eax,DWORD PTR [ebp+0xc]
6501586b:	add    eax,0xc
6501586e:	mov    DWORD PTR [ebp-0x4],eax
65015871:	mov    eax,DWORD PTR [ebp+0x8]
65015874:	push   ebp
65015875:	push   DWORD PTR [ebp+0x10]
65015878:	mov    ecx,DWORD PTR [ebp+0x10]
6501587b:	mov    ebp,DWORD PTR [ebp-0x4]
6501587e:	call   0x6501afb8
65015883:	push   esi
65015884:	push   edi
65015885:	call   eax
65015887:	pop    edi
65015888:	pop    esi
65015889:	mov    ebx,ebp
6501588b:	pop    ebp
6501588c:	mov    ecx,DWORD PTR [ebp+0x10]
6501588f:	push   ebp
65015890:	mov    ebp,ebx
65015892:	cmp    ecx,0x100
65015898:	jne    0x6501589f
6501589a:	mov    ecx,0x2
6501589f:	push   ecx
650158a0:	call   0x6501afb8
650158a5:	pop    ebp
650158a6:	pop    ecx
650158a7:	pop    ebx
650158a8:	leave  
650158a9:	ret    0xc
650158ac:	push   ebp
650158ad:	mov    ebp,esp
650158af:	sub    esp,0x328
650158b5:	mov    ds:0x6502d6d0,eax
650158ba:	mov    DWORD PTR ds:0x6502d6cc,ecx
650158c0:	mov    DWORD PTR ds:0x6502d6c8,edx
650158c6:	mov    DWORD PTR ds:0x6502d6c4,ebx
650158cc:	mov    DWORD PTR ds:0x6502d6c0,esi
650158d2:	mov    DWORD PTR ds:0x6502d6bc,edi
650158d8:	data16 mov WORD PTR ds:0x6502d6e8,ss
650158df:	data16 mov WORD PTR ds:0x6502d6dc,cs
650158e6:	data16 mov WORD PTR ds:0x6502d6b8,ds
650158ed:	data16 mov WORD PTR ds:0x6502d6b4,es
650158f4:	data16 mov WORD PTR ds:0x6502d6b0,fs
650158fb:	data16 mov WORD PTR ds:0x6502d6ac,gs
65015902:	pushf  
65015903:	pop    DWORD PTR ds:0x6502d6e0
65015909:	mov    eax,DWORD PTR [ebp+0x0]
6501590c:	mov    ds:0x6502d6d4,eax
65015911:	mov    eax,DWORD PTR [ebp+0x4]
65015914:	mov    ds:0x6502d6d8,eax
65015919:	lea    eax,[ebp+0x8]
6501591c:	mov    ds:0x6502d6e4,eax
65015921:	mov    eax,DWORD PTR [ebp-0x320]
65015927:	mov    DWORD PTR ds:0x6502d620,0x10001
65015931:	mov    eax,ds:0x6502d6d8
65015936:	mov    ds:0x6502d5d4,eax
6501593b:	mov    DWORD PTR ds:0x6502d5c8,0xc0000409
65015945:	mov    DWORD PTR ds:0x6502d5cc,0x1
6501594f:	mov    eax,ds:0x6502c09c
65015954:	mov    DWORD PTR [ebp-0x328],eax
6501595a:	mov    eax,ds:0x6502c0a0
6501595f:	mov    DWORD PTR [ebp-0x324],eax
65015965:	call   DWORD PTR ds:0x65024114
6501596b:	mov    ds:0x6502d618,eax
65015970:	push   0x1
65015972:	call   0x650143e4
65015977:	pop    ecx
65015978:	push   0x0
6501597a:	call   DWORD PTR ds:0x65024110
65015980:	push   0x65024c74
65015985:	call   DWORD PTR ds:0x6502410c
6501598b:	cmp    DWORD PTR ds:0x6502d618,0x0
65015992:	jne    0x6501599c
65015994:	push   0x1
65015996:	call   0x650143e4
6501599b:	pop    ecx
6501599c:	push   0xc0000409
650159a1:	call   DWORD PTR ds:0x65024048
650159a7:	push   eax
650159a8:	call   DWORD PTR ds:0x65024108
650159ae:	leave  
650159af:	ret    
650159b0:	push   esi
650159b1:	push   edi
650159b2:	xor    esi,esi
650159b4:	push   DWORD PTR [esp+0xc]
650159b8:	call   0x65013654
650159bd:	mov    edi,eax
650159bf:	test   edi,edi
650159c1:	pop    ecx
650159c2:	jne    0x650159eb
650159c4:	cmp    DWORD PTR ds:0x6502d8ec,eax
650159ca:	jbe    0x650159eb
650159cc:	push   esi
650159cd:	call   DWORD PTR ds:0x6502404c
650159d3:	lea    eax,[esi+0x3e8]
650159d9:	cmp    eax,DWORD PTR ds:0x6502d8ec
650159df:	jbe    0x650159e4
650159e1:	or     eax,0xffffffff
650159e4:	cmp    eax,0xffffffff
650159e7:	mov    esi,eax
650159e9:	jne    0x650159b4
650159eb:	mov    eax,edi
650159ed:	pop    edi
650159ee:	pop    esi
650159ef:	ret    
650159f0:	push   esi
650159f1:	push   edi
650159f2:	xor    esi,esi
650159f4:	push   0x0
650159f6:	push   DWORD PTR [esp+0x14]
650159fa:	push   DWORD PTR [esp+0x14]
650159fe:	call   0x6501afe3
65015a03:	mov    edi,eax
65015a05:	add    esp,0xc
65015a08:	test   edi,edi
65015a0a:	jne    0x65015a33
65015a0c:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015a12:	jbe    0x65015a33
65015a14:	push   esi
65015a15:	call   DWORD PTR ds:0x6502404c
65015a1b:	lea    eax,[esi+0x3e8]
65015a21:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015a27:	jbe    0x65015a2c
65015a29:	or     eax,0xffffffff
65015a2c:	cmp    eax,0xffffffff
65015a2f:	mov    esi,eax
65015a31:	jne    0x650159f4
65015a33:	mov    eax,edi
65015a35:	pop    edi
65015a36:	pop    esi
65015a37:	ret    
65015a38:	push   esi
65015a39:	push   edi
65015a3a:	xor    esi,esi
65015a3c:	push   DWORD PTR [esp+0x10]
65015a40:	push   DWORD PTR [esp+0x10]
65015a44:	call   0x65013a85
65015a49:	mov    edi,eax
65015a4b:	test   edi,edi
65015a4d:	pop    ecx
65015a4e:	pop    ecx
65015a4f:	jne    0x65015a7e
65015a51:	cmp    DWORD PTR [esp+0x10],eax
65015a55:	je     0x65015a7e
65015a57:	cmp    DWORD PTR ds:0x6502d8ec,eax
65015a5d:	jbe    0x65015a7e
65015a5f:	push   esi
65015a60:	call   DWORD PTR ds:0x6502404c
65015a66:	lea    eax,[esi+0x3e8]
65015a6c:	cmp    eax,DWORD PTR ds:0x6502d8ec
65015a72:	jbe    0x65015a77
65015a74:	or     eax,0xffffffff
65015a77:	cmp    eax,0xffffffff
65015a7a:	mov    esi,eax
65015a7c:	jne    0x65015a3c
65015a7e:	mov    eax,edi
65015a80:	pop    edi
65015a81:	pop    esi
65015a82:	ret    
65015a83:	push   0x10
65015a85:	push   0x65029a90
65015a8a:	call   0x65013ca0
65015a8f:	xor    eax,eax
65015a91:	mov    ebx,DWORD PTR [ebp+0x8]
65015a94:	xor    edi,edi
65015a96:	cmp    ebx,edi
65015a98:	setne  al
65015a9b:	cmp    eax,edi
65015a9d:	jne    0x65015abc
65015a9f:	call   0x650143a0
65015aa4:	mov    DWORD PTR [eax],0x16
65015aaa:	push   edi
65015aab:	push   edi
65015aac:	push   edi
65015aad:	push   edi
65015aae:	push   edi
65015aaf:	call   0x6501224f
65015ab4:	add    esp,0x14
65015ab7:	or     eax,0xffffffff
65015aba:	jmp    0x65015b0f
65015abc:	cmp    DWORD PTR ds:0x6503143c,0x3
65015ac3:	jne    0x65015afd
65015ac5:	push   0x4
65015ac7:	call   0x65019c98
65015acc:	pop    ecx
65015acd:	mov    DWORD PTR [ebp-0x4],edi
65015ad0:	push   ebx
65015ad1:	call   0x65019d11
65015ad6:	pop    ecx
65015ad7:	mov    DWORD PTR [ebp-0x20],eax
65015ada:	cmp    eax,edi
65015adc:	je     0x65015ae9
65015ade:	mov    esi,DWORD PTR [ebx-0x4]
65015ae1:	sub    esi,0x9
65015ae4:	mov    DWORD PTR [ebp-0x1c],esi
65015ae7:	jmp    0x65015aec
65015ae9:	mov    esi,DWORD PTR [ebp-0x1c]
65015aec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015af3:	call   0x65015b1d
65015af8:	cmp    DWORD PTR [ebp-0x20],edi
65015afb:	jne    0x65015b0d
65015afd:	push   ebx
65015afe:	push   edi
65015aff:	push   DWORD PTR ds:0x6502da8c
65015b05:	call   DWORD PTR ds:0x65024100
65015b0b:	mov    esi,eax
65015b0d:	mov    eax,esi
65015b0f:	call   0x65013ce5
65015b14:	ret    
65015b15:	xor    edi,edi
65015b17:	mov    ebx,DWORD PTR [ebp+0x8]
65015b1a:	mov    esi,DWORD PTR [ebp-0x1c]
65015b1d:	push   0x4
65015b1f:	call   0x65019bc0
65015b24:	pop    ecx
65015b25:	ret    
65015b26:	call   0x6501a96b
65015b2b:	push   DWORD PTR [esp+0x4]
65015b2f:	call   0x6501a7cb
65015b34:	push   DWORD PTR ds:0x6502c260
65015b3a:	call   0x650144cf
65015b3f:	push   0xff
65015b44:	call   eax
65015b46:	add    esp,0xc
65015b49:	ret    
65015b4a:	push   0x65024c8c
65015b4f:	call   DWORD PTR ds:0x65024124
65015b55:	test   eax,eax
65015b57:	je     0x65015b6f
65015b59:	push   0x65024c7c
65015b5e:	push   eax
65015b5f:	call   DWORD PTR ds:0x65024014
65015b65:	test   eax,eax
65015b67:	je     0x65015b6f
65015b69:	push   DWORD PTR [esp+0x4]
65015b6d:	call   eax
65015b6f:	ret    
65015b70:	push   DWORD PTR [esp+0x4]
65015b74:	call   0x65015b4a
65015b79:	pop    ecx
65015b7a:	push   DWORD PTR [esp+0x4]
65015b7e:	call   DWORD PTR ds:0x65024138
65015b84:	int3   
65015b85:	push   0x8
65015b87:	call   0x65019c98
65015b8c:	pop    ecx
65015b8d:	ret    
65015b8e:	push   0x8
65015b90:	call   0x65019bc0
65015b95:	pop    ecx
65015b96:	ret    
65015b97:	push   esi
65015b98:	mov    esi,eax
65015b9a:	jmp    0x65015ba7
65015b9c:	mov    eax,DWORD PTR [esi]
65015b9e:	test   eax,eax
65015ba0:	je     0x65015ba4
65015ba2:	call   eax
65015ba4:	add    esi,0x4
65015ba7:	cmp    esi,DWORD PTR [esp+0x8]
65015bab:	jb     0x65015b9c
65015bad:	pop    esi
65015bae:	ret    
65015baf:	push   esi
65015bb0:	mov    esi,DWORD PTR [esp+0x8]
65015bb4:	xor    eax,eax
65015bb6:	jmp    0x65015bc7
65015bb8:	test   eax,eax
65015bba:	jne    0x65015bcd
65015bbc:	mov    ecx,DWORD PTR [esi]
65015bbe:	test   ecx,ecx
65015bc0:	je     0x65015bc4
65015bc2:	call   ecx
65015bc4:	add    esi,0x4
65015bc7:	cmp    esi,DWORD PTR [esp+0xc]
65015bcb:	jb     0x65015bb8
65015bcd:	pop    esi
65015bce:	ret    
65015bcf:	mov    ecx,DWORD PTR [esp+0x4]
65015bd3:	push   esi
65015bd4:	xor    esi,esi
65015bd6:	cmp    ecx,esi
65015bd8:	jne    0x65015bf7
65015bda:	call   0x650143a0
65015bdf:	push   esi
65015be0:	push   esi
65015be1:	push   esi
65015be2:	push   esi
65015be3:	push   esi
65015be4:	mov    DWORD PTR [eax],0x16
65015bea:	call   0x6501224f
65015bef:	add    esp,0x14
65015bf2:	push   0x16
65015bf4:	pop    eax
65015bf5:	pop    esi
65015bf6:	ret    
65015bf7:	mov    eax,ds:0x6502d8f4
65015bfc:	cmp    eax,esi
65015bfe:	je     0x65015bda
65015c00:	mov    DWORD PTR [ecx],eax
65015c02:	xor    eax,eax
65015c04:	pop    esi
65015c05:	ret    
65015c06:	mov    eax,DWORD PTR [esp+0x4]
65015c0a:	push   esi
65015c0b:	xor    esi,esi
65015c0d:	cmp    eax,esi
65015c0f:	jne    0x65015c2e
65015c11:	call   0x650143a0
65015c16:	push   esi
65015c17:	push   esi
65015c18:	push   esi
65015c19:	push   esi
65015c1a:	push   esi
65015c1b:	mov    DWORD PTR [eax],0x16
65015c21:	call   0x6501224f
65015c26:	add    esp,0x14
65015c29:	push   0x16
65015c2b:	pop    eax
65015c2c:	pop    esi
65015c2d:	ret    
65015c2e:	cmp    DWORD PTR ds:0x6502d8f4,esi
65015c34:	je     0x65015c11
65015c36:	mov    ecx,DWORD PTR ds:0x6502d900
65015c3c:	mov    DWORD PTR [eax],ecx
65015c3e:	xor    eax,eax
65015c40:	pop    esi
65015c41:	ret    
65015c42:	cmp    DWORD PTR ds:0x650264fc,0x0
65015c49:	je     0x65015c65
65015c4b:	push   0x650264fc
65015c50:	call   0x6501acf0
65015c55:	test   eax,eax
65015c57:	pop    ecx
65015c58:	je     0x65015c65
65015c5a:	push   DWORD PTR [esp+0x4]
65015c5e:	call   DWORD PTR ds:0x650264fc
65015c64:	pop    ecx
65015c65:	call   0x6501b101
65015c6a:	push   0x65024218
65015c6f:	push   0x65024200
65015c74:	call   0x65015baf
65015c79:	test   eax,eax
65015c7b:	pop    ecx
65015c7c:	pop    ecx
65015c7d:	jne    0x65015cd3
65015c7f:	push   esi
65015c80:	push   edi
65015c81:	push   0x65018722
65015c86:	call   0x6501288f
65015c8b:	mov    esi,0x650241e4
65015c90:	mov    eax,esi
65015c92:	mov    edi,0x650241fc
65015c97:	cmp    eax,edi
65015c99:	pop    ecx
65015c9a:	jae    0x65015cab
65015c9c:	mov    eax,DWORD PTR [esi]
65015c9e:	test   eax,eax
65015ca0:	je     0x65015ca4
65015ca2:	call   eax
65015ca4:	add    esi,0x4
65015ca7:	cmp    esi,edi
65015ca9:	jb     0x65015c9c
65015cab:	cmp    DWORD PTR ds:0x65031578,0x0
65015cb2:	pop    edi
65015cb3:	pop    esi
65015cb4:	je     0x65015cd1
65015cb6:	push   0x65031578
65015cbb:	call   0x6501acf0
65015cc0:	test   eax,eax
65015cc2:	pop    ecx
65015cc3:	je     0x65015cd1
65015cc5:	push   0x0
65015cc7:	push   0x2
65015cc9:	push   0x0
65015ccb:	call   DWORD PTR ds:0x65031578
65015cd1:	xor    eax,eax
65015cd3:	ret    
65015cd4:	push   0x10
65015cd6:	push   0x65029ab0
65015cdb:	call   0x65013ca0
65015ce0:	push   0x8
65015ce2:	call   0x65019c98
65015ce7:	pop    ecx
65015ce8:	xor    edi,edi
65015cea:	mov    DWORD PTR [ebp-0x4],edi
65015ced:	xor    ebx,ebx
65015cef:	inc    ebx
65015cf0:	cmp    DWORD PTR ds:0x6502d934,ebx
65015cf6:	je     0x65015d76
65015cf8:	mov    DWORD PTR ds:0x6502d930,ebx
65015cfe:	mov    al,BYTE PTR [ebp+0x10]
65015d01:	mov    ds:0x6502d92c,al
65015d06:	cmp    DWORD PTR [ebp+0xc],edi
65015d09:	jne    0x65015d66
65015d0b:	push   DWORD PTR ds:0x65031570
65015d11:	call   0x650144cf
65015d16:	mov    DWORD PTR [ebp-0x1c],eax
65015d19:	push   DWORD PTR ds:0x6503156c
65015d1f:	call   0x650144cf
65015d24:	pop    ecx
65015d25:	pop    ecx
65015d26:	mov    esi,eax
65015d28:	mov    DWORD PTR [ebp-0x20],esi
65015d2b:	cmp    DWORD PTR [ebp-0x1c],edi
65015d2e:	je     0x65015d56
65015d30:	sub    esi,0x4
65015d33:	mov    DWORD PTR [ebp-0x20],esi
65015d36:	cmp    esi,DWORD PTR [ebp-0x1c]
65015d39:	jb     0x65015d56
65015d3b:	cmp    DWORD PTR [esi],0x0
65015d3e:	je     0x65015d30
65015d40:	mov    edi,DWORD PTR [esi]
65015d42:	call   0x650144c6
65015d47:	cmp    edi,eax
65015d49:	je     0x65015d30
65015d4b:	push   edi
65015d4c:	call   0x650144cf
65015d51:	pop    ecx
65015d52:	call   eax
65015d54:	jmp    0x65015d30
65015d56:	push   0x65024228
65015d5b:	mov    eax,0x6502421c
65015d60:	call   0x65015b97
65015d65:	pop    ecx
65015d66:	push   0x65024230
65015d6b:	mov    eax,0x6502422c
65015d70:	call   0x65015b97
65015d75:	pop    ecx
65015d76:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65015d7d:	call   0x65015da1
65015d82:	cmp    DWORD PTR [ebp+0x10],0x0
65015d86:	jne    0x65015db0
65015d88:	mov    DWORD PTR ds:0x6502d934,ebx
65015d8e:	push   0x8
65015d90:	call   0x65019bc0
65015d95:	pop    ecx
65015d96:	push   DWORD PTR [ebp+0x8]
65015d99:	call   0x65015b70
65015d9e:	xor    ebx,ebx
65015da0:	inc    ebx
65015da1:	cmp    DWORD PTR [ebp+0x10],0x0
65015da5:	je     0x65015daf
65015da7:	push   0x8
65015da9:	call   0x65019bc0
65015dae:	pop    ecx
65015daf:	ret    
65015db0:	call   0x65013ce5
65015db5:	ret    
65015db6:	push   0x0
65015db8:	push   0x1
65015dba:	push   DWORD PTR [esp+0xc]
65015dbe:	call   0x65015cd4
65015dc3:	add    esp,0xc
65015dc6:	ret    
65015dc7:	push   0x1
65015dc9:	push   0x0
65015dcb:	push   0x0
65015dcd:	call   0x65015cd4
65015dd2:	add    esp,0xc
65015dd5:	ret    
65015dd6:	push   esi
65015dd7:	call   0x650144c6
65015ddc:	mov    esi,eax
65015dde:	push   esi
65015ddf:	call   0x65014a11
65015de4:	push   esi
65015de5:	call   0x6501b33e
65015dea:	push   esi
65015deb:	call   0x65012149
65015df0:	push   esi
65015df1:	call   0x6501b334
65015df6:	push   esi
65015df7:	call   0x6501b32a
65015dfc:	push   esi
65015dfd:	call   0x6501b120
65015e02:	push   esi
65015e03:	call   0x6501eb67
65015e08:	push   esi
65015e09:	call   0x65015845
65015e0e:	push   0x65015db6
65015e13:	call   0x65014458
65015e18:	add    esp,0x24
65015e1b:	mov    ds:0x6502c260,eax
65015e20:	pop    esi
65015e21:	ret    
65015e22:	sub    eax,0x3a4
65015e27:	je     0x65015e4b
65015e29:	sub    eax,0x4
65015e2c:	je     0x65015e45
65015e2e:	sub    eax,0xd
65015e31:	je     0x65015e3f
65015e33:	dec    eax
65015e34:	je     0x65015e39
65015e36:	xor    eax,eax
65015e38:	ret    
65015e39:	mov    eax,0x404
65015e3e:	ret    
65015e3f:	mov    eax,0x412
65015e44:	ret    
65015e45:	mov    eax,0x804
65015e4a:	ret    
65015e4b:	mov    eax,0x411
65015e50:	ret    
65015e51:	push   ebx
65015e52:	push   ebp
65015e53:	push   esi
65015e54:	push   edi
65015e55:	mov    ebp,0x101
65015e5a:	mov    esi,eax
65015e5c:	push   ebp
65015e5d:	xor    edi,edi
65015e5f:	lea    ebx,[esi+0x1c]
65015e62:	push   edi
65015e63:	push   ebx
65015e64:	call   0x65012de0
65015e69:	mov    DWORD PTR [esi+0x4],edi
65015e6c:	mov    DWORD PTR [esi+0x8],edi
65015e6f:	mov    DWORD PTR [esi+0xc],edi
65015e72:	xor    eax,eax
65015e74:	lea    edi,[esi+0x10]
65015e77:	stos   DWORD PTR es:[edi],eax
65015e78:	stos   DWORD PTR es:[edi],eax
65015e79:	stos   DWORD PTR es:[edi],eax
65015e7a:	mov    eax,0x6502c268
65015e7f:	add    esp,0xc
65015e82:	sub    eax,esi
65015e84:	mov    cl,BYTE PTR [eax+ebx*1]
65015e87:	mov    BYTE PTR [ebx],cl
65015e89:	inc    ebx
65015e8a:	dec    ebp
65015e8b:	jne    0x65015e84
65015e8d:	lea    ecx,[esi+0x11d]
65015e93:	mov    esi,0x100
65015e98:	mov    dl,BYTE PTR [ecx+eax*1]
65015e9b:	mov    BYTE PTR [ecx],dl
65015e9d:	inc    ecx
65015e9e:	dec    esi
65015e9f:	jne    0x65015e98
65015ea1:	pop    edi
65015ea2:	pop    esi
65015ea3:	pop    ebp
65015ea4:	pop    ebx
65015ea5:	ret    
65015ea6:	push   ebp
65015ea7:	lea    ebp,[esp-0x49c]
65015eae:	sub    esp,0x51c
65015eb4:	mov    eax,ds:0x6502c09c
65015eb9:	xor    eax,ebp
65015ebb:	mov    DWORD PTR [ebp+0x498],eax
65015ec1:	push   ebx
65015ec2:	push   edi
65015ec3:	lea    eax,[ebp-0x7c]
65015ec6:	push   eax
65015ec7:	push   DWORD PTR [esi+0x4]
65015eca:	call   DWORD PTR ds:0x6502413c
65015ed0:	test   eax,eax
65015ed2:	mov    edi,0x100
65015ed7:	je     0x65015fcc
65015edd:	xor    eax,eax
65015edf:	mov    BYTE PTR [ebp+eax*1+0x398],al
65015ee6:	inc    eax
65015ee7:	cmp    eax,edi
65015ee9:	jb     0x65015edf
65015eeb:	mov    al,BYTE PTR [ebp-0x76]
65015eee:	test   al,al
65015ef0:	mov    BYTE PTR [ebp+0x398],0x20
65015ef7:	je     0x65015f24
65015ef9:	lea    ebx,[ebp-0x75]
65015efc:	movzx  ecx,al
65015eff:	movzx  eax,BYTE PTR [ebx]
65015f02:	cmp    ecx,eax
65015f04:	ja     0x65015f1c
65015f06:	sub    eax,ecx
65015f08:	inc    eax
65015f09:	push   eax
65015f0a:	lea    edx,[ebp+ecx*1+0x398]
65015f11:	push   0x20
65015f13:	push   edx
65015f14:	call   0x65012de0
65015f19:	add    esp,0xc
65015f1c:	inc    ebx
65015f1d:	mov    al,BYTE PTR [ebx]
65015f1f:	inc    ebx
65015f20:	test   al,al
65015f22:	jne    0x65015efc
65015f24:	push   0x0
65015f26:	push   DWORD PTR [esi+0xc]
65015f29:	lea    eax,[ebp-0x68]
65015f2c:	push   DWORD PTR [esi+0x4]
65015f2f:	push   eax
65015f30:	push   edi
65015f31:	lea    eax,[ebp+0x398]
65015f37:	push   eax
65015f38:	push   0x1
65015f3a:	push   0x0
65015f3c:	call   0x6501b5d5
65015f41:	xor    ebx,ebx
65015f43:	push   ebx
65015f44:	push   DWORD PTR [esi+0x4]
65015f47:	lea    eax,[ebp+0x298]
65015f4d:	push   edi
65015f4e:	push   eax
65015f4f:	push   edi
65015f50:	lea    eax,[ebp+0x398]
65015f56:	push   eax
65015f57:	push   edi
65015f58:	push   DWORD PTR [esi+0xc]
65015f5b:	push   ebx
65015f5c:	call   0x65019a9b
65015f61:	add    esp,0x44
65015f64:	push   ebx
65015f65:	push   DWORD PTR [esi+0x4]
65015f68:	lea    eax,[ebp+0x198]
65015f6e:	push   edi
65015f6f:	push   eax
65015f70:	push   edi
65015f71:	lea    eax,[ebp+0x398]
65015f77:	push   eax
65015f78:	push   0x200
65015f7d:	push   DWORD PTR [esi+0xc]
65015f80:	push   ebx
65015f81:	call   0x65019a9b
65015f86:	add    esp,0x24
65015f89:	xor    eax,eax
65015f8b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
65015f90:	test   cl,0x1
65015f93:	je     0x65015fa3
65015f95:	or     BYTE PTR [esi+eax*1+0x1d],0x10
65015f9a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
65015fa1:	jmp    0x65015fb4
65015fa3:	test   cl,0x2
65015fa6:	je     0x65015fbd
65015fa8:	or     BYTE PTR [esi+eax*1+0x1d],0x20
65015fad:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
65015fb4:	mov    BYTE PTR [esi+eax*1+0x11d],cl
65015fbb:	jmp    0x65015fc5
65015fbd:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
65015fc5:	inc    eax
65015fc6:	cmp    eax,edi
65015fc8:	jb     0x65015f8b
65015fca:	jmp    0x65016019
65015fcc:	lea    eax,[esi+0x11d]
65015fd2:	mov    DWORD PTR [ebp-0x80],0xffffff9f
65015fd9:	xor    ecx,ecx
65015fdb:	sub    DWORD PTR [ebp-0x80],eax
65015fde:	mov    edx,DWORD PTR [ebp-0x80]
65015fe1:	lea    eax,[esi+ecx*1+0x11d]
65015fe8:	add    edx,eax
65015fea:	lea    ebx,[edx+0x20]
65015fed:	cmp    ebx,0x19
65015ff0:	ja     0x65015ffe
65015ff2:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
65015ff7:	mov    dl,cl
65015ff9:	add    dl,0x20
65015ffc:	jmp    0x6501600d
65015ffe:	cmp    edx,0x19
65016001:	ja     0x65016011
65016003:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
65016008:	mov    dl,cl
6501600a:	sub    dl,0x20
6501600d:	mov    BYTE PTR [eax],dl
6501600f:	jmp    0x65016014
65016011:	mov    BYTE PTR [eax],0x0
65016014:	inc    ecx
65016015:	cmp    ecx,edi
65016017:	jb     0x65015fde
65016019:	mov    ecx,DWORD PTR [ebp+0x498]
6501601f:	pop    edi
65016020:	xor    ecx,ebp
65016022:	pop    ebx
65016023:	call   0x6501275c
65016028:	add    ebp,0x49c
6501602e:	leave  
6501602f:	ret    
65016030:	push   0xc
65016032:	push   0x65029ad0
65016037:	call   0x65013ca0
6501603c:	call   0x650146eb
65016041:	mov    edi,eax
65016043:	mov    eax,ds:0x6502c78c
65016048:	test   DWORD PTR [edi+0x70],eax
6501604b:	je     0x6501606a
6501604d:	cmp    DWORD PTR [edi+0x6c],0x0
65016051:	je     0x6501606a
65016053:	mov    esi,DWORD PTR [edi+0x68]
65016056:	test   esi,esi
65016058:	jne    0x65016062
6501605a:	push   0x20
6501605c:	call   0x65015b26
65016061:	pop    ecx
65016062:	mov    eax,esi
65016064:	call   0x65013ce5
65016069:	ret    
6501606a:	push   0xd
6501606c:	call   0x65019c98
65016071:	pop    ecx
65016072:	and    DWORD PTR [ebp-0x4],0x0
65016076:	mov    esi,DWORD PTR [edi+0x68]
65016079:	mov    DWORD PTR [ebp-0x1c],esi
6501607c:	cmp    esi,DWORD PTR ds:0x6502c690
65016082:	je     0x650160ba
65016084:	test   esi,esi
65016086:	je     0x650160a2
65016088:	push   esi
65016089:	call   DWORD PTR ds:0x65024098
6501608f:	test   eax,eax
65016091:	jne    0x650160a2
65016093:	cmp    esi,0x6502c268
65016099:	je     0x650160a2
6501609b:	push   esi
6501609c:	call   0x65013577
650160a1:	pop    ecx
650160a2:	mov    eax,ds:0x6502c690
650160a7:	mov    DWORD PTR [edi+0x68],eax
650160aa:	mov    esi,DWORD PTR ds:0x6502c690
650160b0:	mov    DWORD PTR [ebp-0x1c],esi
650160b3:	push   esi
650160b4:	call   DWORD PTR ds:0x65024020
650160ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650160c1:	call   0x650160cb
650160c6:	jmp    0x65016056
650160c8:	mov    esi,DWORD PTR [ebp-0x1c]
650160cb:	push   0xd
650160cd:	call   0x65019bc0
650160d2:	pop    ecx
650160d3:	ret    
650160d4:	push   ebp
650160d5:	mov    ebp,esp
650160d7:	sub    esp,0x10
650160da:	push   ebx
650160db:	xor    ebx,ebx
650160dd:	push   ebx
650160de:	lea    ecx,[ebp-0x10]
650160e1:	call   0x650128ff
650160e6:	cmp    esi,0xfffffffe
650160e9:	mov    DWORD PTR ds:0x6502d938,ebx
650160ef:	jne    0x6501610f
650160f1:	mov    DWORD PTR ds:0x6502d938,0x1
650160fb:	call   DWORD PTR ds:0x65024140
65016101:	cmp    BYTE PTR [ebp-0x4],bl
65016104:	je     0x6501614b
65016106:	mov    ecx,DWORD PTR [ebp-0x8]
65016109:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501610d:	jmp    0x6501614b
6501610f:	cmp    esi,0xfffffffd
65016112:	jne    0x65016126
65016114:	mov    DWORD PTR ds:0x6502d938,0x1
6501611e:	call   DWORD PTR ds:0x650240dc
65016124:	jmp    0x65016101
65016126:	cmp    esi,0xfffffffc
65016129:	jne    0x6501613d
6501612b:	mov    eax,DWORD PTR [ebp-0x10]
6501612e:	mov    eax,DWORD PTR [eax+0x4]
65016131:	mov    DWORD PTR ds:0x6502d938,0x1
6501613b:	jmp    0x65016101
6501613d:	cmp    BYTE PTR [ebp-0x4],bl
65016140:	je     0x65016149
65016142:	mov    eax,DWORD PTR [ebp-0x8]
65016145:	and    DWORD PTR [eax+0x70],0xfffffffd
65016149:	mov    eax,esi
6501614b:	pop    ebx
6501614c:	leave  
6501614d:	ret    
6501614e:	push   ebp
6501614f:	mov    ebp,esp
65016151:	sub    esp,0x20
65016154:	mov    eax,ds:0x6502c09c
65016159:	xor    eax,ebp
6501615b:	mov    DWORD PTR [ebp-0x4],eax
6501615e:	push   ebx
6501615f:	mov    ebx,DWORD PTR [ebp+0xc]
65016162:	push   esi
65016163:	mov    esi,DWORD PTR [ebp+0x8]
65016166:	push   edi
65016167:	call   0x650160d4
6501616c:	mov    edi,eax
6501616e:	xor    esi,esi
65016170:	cmp    edi,esi
65016172:	mov    DWORD PTR [ebp+0x8],edi
65016175:	jne    0x65016185
65016177:	mov    eax,ebx
65016179:	call   0x65015e51
6501617e:	xor    eax,eax
65016180:	jmp    0x65016318
65016185:	mov    DWORD PTR [ebp-0x1c],esi
65016188:	xor    eax,eax
6501618a:	cmp    DWORD PTR [eax+0x6502c698],edi
65016190:	je     0x65016227
65016196:	inc    DWORD PTR [ebp-0x1c]
65016199:	add    eax,0x30
6501619c:	cmp    eax,0xf0
650161a1:	jb     0x6501618a
650161a3:	cmp    edi,0xfde8
650161a9:	je     0x65016315
650161af:	cmp    edi,0xfde9
650161b5:	je     0x65016315
650161bb:	movzx  eax,di
650161be:	push   eax
650161bf:	call   DWORD PTR ds:0x65024144
650161c5:	test   eax,eax
650161c7:	je     0x65016315
650161cd:	lea    eax,[ebp-0x18]
650161d0:	push   eax
650161d1:	push   edi
650161d2:	call   DWORD PTR ds:0x6502413c
650161d8:	test   eax,eax
650161da:	je     0x65016309
650161e0:	push   0x101
650161e5:	lea    eax,[ebx+0x1c]
650161e8:	push   esi
650161e9:	push   eax
650161ea:	call   0x65012de0
650161ef:	xor    edx,edx
650161f1:	inc    edx
650161f2:	add    esp,0xc
650161f5:	cmp    DWORD PTR [ebp-0x18],edx
650161f8:	mov    DWORD PTR [ebx+0x4],edi
650161fb:	mov    DWORD PTR [ebx+0xc],esi
650161fe:	jbe    0x650162fc
65016204:	cmp    BYTE PTR [ebp-0x12],0x0
65016208:	je     0x650162dd
6501620e:	lea    esi,[ebp-0x11]
65016211:	mov    cl,BYTE PTR [esi]
65016213:	test   cl,cl
65016215:	je     0x650162dd
6501621b:	movzx  eax,BYTE PTR [esi-0x1]
6501621f:	movzx  ecx,cl
65016222:	jmp    0x650162cd
65016227:	push   0x101
6501622c:	lea    eax,[ebx+0x1c]
6501622f:	push   esi
65016230:	push   eax
65016231:	call   0x65012de0
65016236:	mov    ecx,DWORD PTR [ebp-0x1c]
65016239:	add    esp,0xc
6501623c:	imul   ecx,ecx,0x30
6501623f:	mov    DWORD PTR [ebp-0x20],esi
65016242:	lea    esi,[ecx+0x6502c6a8]
65016248:	mov    DWORD PTR [ebp-0x1c],esi
6501624b:	jmp    0x65016277
6501624d:	mov    al,BYTE PTR [esi+0x1]
65016250:	test   al,al
65016252:	je     0x6501627c
65016254:	movzx  edi,BYTE PTR [esi]
65016257:	movzx  eax,al
6501625a:	jmp    0x6501626e
6501625c:	mov    eax,DWORD PTR [ebp-0x20]
6501625f:	mov    al,BYTE PTR [eax+0x6502c694]
65016265:	or     BYTE PTR [ebx+edi*1+0x1d],al
65016269:	movzx  eax,BYTE PTR [esi+0x1]
6501626d:	inc    edi
6501626e:	cmp    edi,eax
65016270:	jbe    0x6501625c
65016272:	mov    edi,DWORD PTR [ebp+0x8]
65016275:	inc    esi
65016276:	inc    esi
65016277:	cmp    BYTE PTR [esi],0x0
6501627a:	jne    0x6501624d
6501627c:	mov    esi,DWORD PTR [ebp-0x1c]
6501627f:	inc    DWORD PTR [ebp-0x20]
65016282:	add    esi,0x8
65016285:	cmp    DWORD PTR [ebp-0x20],0x4
65016289:	mov    DWORD PTR [ebp-0x1c],esi
6501628c:	jb     0x65016277
6501628e:	mov    eax,edi
65016290:	mov    DWORD PTR [ebx+0x4],edi
65016293:	mov    DWORD PTR [ebx+0x8],0x1
6501629a:	call   0x65015e22
6501629f:	push   0x6
650162a1:	mov    DWORD PTR [ebx+0xc],eax
650162a4:	lea    eax,[ebx+0x10]
650162a7:	lea    ecx,[ecx+0x6502c69c]
650162ad:	pop    edx
650162ae:	mov    si,WORD PTR [ecx]
650162b1:	inc    ecx
650162b2:	mov    WORD PTR [eax],si
650162b5:	inc    ecx
650162b6:	inc    eax
650162b7:	inc    eax
650162b8:	dec    edx
650162b9:	jne    0x650162ae
650162bb:	mov    esi,ebx
650162bd:	call   0x65015ea6
650162c2:	jmp    0x6501617e
650162c7:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
650162cc:	inc    eax
650162cd:	cmp    eax,ecx
650162cf:	jbe    0x650162c7
650162d1:	inc    esi
650162d2:	inc    esi
650162d3:	cmp    BYTE PTR [esi-0x1],0x0
650162d7:	jne    0x65016211
650162dd:	lea    eax,[ebx+0x1e]
650162e0:	mov    ecx,0xfe
650162e5:	or     BYTE PTR [eax],0x8
650162e8:	inc    eax
650162e9:	dec    ecx
650162ea:	jne    0x650162e5
650162ec:	mov    eax,DWORD PTR [ebx+0x4]
650162ef:	call   0x65015e22
650162f4:	mov    DWORD PTR [ebx+0xc],eax
650162f7:	mov    DWORD PTR [ebx+0x8],edx
650162fa:	jmp    0x650162ff
650162fc:	mov    DWORD PTR [ebx+0x8],esi
650162ff:	xor    eax,eax
65016301:	lea    edi,[ebx+0x10]
65016304:	stos   DWORD PTR es:[edi],eax
65016305:	stos   DWORD PTR es:[edi],eax
65016306:	stos   DWORD PTR es:[edi],eax
65016307:	jmp    0x650162bb
65016309:	cmp    DWORD PTR ds:0x6502d938,esi
6501630f:	jne    0x65016177
65016315:	or     eax,0xffffffff
65016318:	mov    ecx,DWORD PTR [ebp-0x4]
6501631b:	pop    edi
6501631c:	pop    esi
6501631d:	xor    ecx,ebp
6501631f:	pop    ebx
65016320:	call   0x6501275c
65016325:	leave  
65016326:	ret    
65016327:	push   0x14
65016329:	push   0x65029af0
6501632e:	call   0x65013ca0
65016333:	or     DWORD PTR [ebp-0x20],0xffffffff
65016337:	call   0x650146eb
6501633c:	mov    edi,eax
6501633e:	mov    DWORD PTR [ebp-0x24],edi
65016341:	call   0x65016030
65016346:	mov    ebx,DWORD PTR [edi+0x68]
65016349:	mov    esi,DWORD PTR [ebp+0x8]
6501634c:	call   0x650160d4
65016351:	mov    DWORD PTR [ebp+0x8],eax
65016354:	cmp    eax,DWORD PTR [ebx+0x4]
65016357:	je     0x650164b4
6501635d:	push   0x220
65016362:	call   0x650159b0
65016367:	pop    ecx
65016368:	mov    ebx,eax
6501636a:	test   ebx,ebx
6501636c:	je     0x650164b8
65016372:	mov    ecx,0x88
65016377:	mov    esi,DWORD PTR [edi+0x68]
6501637a:	mov    edi,ebx
6501637c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501637e:	and    DWORD PTR [ebx],0x0
65016381:	push   ebx
65016382:	push   DWORD PTR [ebp+0x8]
65016385:	call   0x6501614e
6501638a:	pop    ecx
6501638b:	pop    ecx
6501638c:	mov    DWORD PTR [ebp-0x20],eax
6501638f:	test   eax,eax
65016391:	jne    0x65016493
65016397:	mov    esi,DWORD PTR [ebp-0x24]
6501639a:	push   DWORD PTR [esi+0x68]
6501639d:	call   DWORD PTR ds:0x65024098
650163a3:	test   eax,eax
650163a5:	jne    0x650163b8
650163a7:	mov    eax,DWORD PTR [esi+0x68]
650163aa:	cmp    eax,0x6502c268
650163af:	je     0x650163b8
650163b1:	push   eax
650163b2:	call   0x65013577
650163b7:	pop    ecx
650163b8:	mov    DWORD PTR [esi+0x68],ebx
650163bb:	push   ebx
650163bc:	mov    edi,DWORD PTR ds:0x65024020
650163c2:	call   edi
650163c4:	test   BYTE PTR [esi+0x70],0x2
650163c8:	jne    0x650164b8
650163ce:	test   BYTE PTR ds:0x6502c78c,0x1
650163d5:	jne    0x650164b8
650163db:	push   0xd
650163dd:	call   0x65019c98
650163e2:	pop    ecx
650163e3:	and    DWORD PTR [ebp-0x4],0x0
650163e7:	mov    eax,DWORD PTR [ebx+0x4]
650163ea:	mov    ds:0x6502d948,eax
650163ef:	mov    eax,DWORD PTR [ebx+0x8]
650163f2:	mov    ds:0x6502d94c,eax
650163f7:	mov    eax,DWORD PTR [ebx+0xc]
650163fa:	mov    ds:0x6502d950,eax
650163ff:	xor    eax,eax
65016401:	mov    DWORD PTR [ebp-0x1c],eax
65016404:	cmp    eax,0x5
65016407:	jge    0x65016419
65016409:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6501640e:	mov    WORD PTR [eax*2+0x6502d93c],cx
65016416:	inc    eax
65016417:	jmp    0x65016401
65016419:	xor    eax,eax
6501641b:	mov    DWORD PTR [ebp-0x1c],eax
6501641e:	cmp    eax,0x101
65016423:	jge    0x65016432
65016425:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
65016429:	mov    BYTE PTR [eax+0x6502c488],cl
6501642f:	inc    eax
65016430:	jmp    0x6501641b
65016432:	xor    eax,eax
65016434:	mov    DWORD PTR [ebp-0x1c],eax
65016437:	cmp    eax,0x100
6501643c:	jge    0x6501644e
6501643e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
65016445:	mov    BYTE PTR [eax+0x6502c590],cl
6501644b:	inc    eax
6501644c:	jmp    0x65016434
6501644e:	push   DWORD PTR ds:0x6502c690
65016454:	call   DWORD PTR ds:0x65024098
6501645a:	test   eax,eax
6501645c:	jne    0x65016471
6501645e:	mov    eax,ds:0x6502c690
65016463:	cmp    eax,0x6502c268
65016468:	je     0x65016471
6501646a:	push   eax
6501646b:	call   0x65013577
65016470:	pop    ecx
65016471:	mov    DWORD PTR ds:0x6502c690,ebx
65016477:	push   ebx
65016478:	call   edi
6501647a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65016481:	call   0x65016488
65016486:	jmp    0x650164b8
65016488:	push   0xd
6501648a:	call   0x65019bc0
6501648f:	pop    ecx
65016490:	ret    
65016491:	jmp    0x650164b8
65016493:	cmp    eax,0xffffffff
65016496:	jne    0x650164b8
65016498:	cmp    ebx,0x6502c268
6501649e:	je     0x650164a7
650164a0:	push   ebx
650164a1:	call   0x65013577
650164a6:	pop    ecx
650164a7:	call   0x650143a0
650164ac:	mov    DWORD PTR [eax],0x16
650164b2:	jmp    0x650164b8
650164b4:	and    DWORD PTR [ebp-0x20],0x0
650164b8:	mov    eax,DWORD PTR [ebp-0x20]
650164bb:	call   0x65013ce5
650164c0:	ret    
650164c1:	cmp    DWORD PTR ds:0x65031574,0x0
650164c8:	jne    0x650164dc
650164ca:	push   0xfffffffd
650164cc:	call   0x65016327
650164d1:	pop    ecx
650164d2:	mov    DWORD PTR ds:0x65031574,0x1
650164dc:	xor    eax,eax
650164de:	ret    
650164df:	push   ebx
650164e0:	push   ebp
650164e1:	push   esi
650164e2:	mov    esi,DWORD PTR [esp+0x10]
650164e6:	mov    eax,DWORD PTR [esi+0xbc]
650164ec:	xor    ebp,ebp
650164ee:	cmp    eax,ebp
650164f0:	push   edi
650164f1:	je     0x65016562
650164f3:	cmp    eax,0x6502cc38
650164f8:	je     0x65016562
650164fa:	mov    eax,DWORD PTR [esi+0xb0]
65016500:	cmp    eax,ebp
65016502:	je     0x65016562
65016504:	cmp    DWORD PTR [eax],ebp
65016506:	jne    0x65016562
65016508:	mov    eax,DWORD PTR [esi+0xb8]
6501650e:	cmp    eax,ebp
65016510:	je     0x65016529
65016512:	cmp    DWORD PTR [eax],ebp
65016514:	jne    0x65016529
65016516:	push   eax
65016517:	call   0x65013577
6501651c:	push   DWORD PTR [esi+0xbc]
65016522:	call   0x6501b7e5
65016527:	pop    ecx
65016528:	pop    ecx
65016529:	mov    eax,DWORD PTR [esi+0xb4]
6501652f:	cmp    eax,ebp
65016531:	je     0x6501654a
65016533:	cmp    DWORD PTR [eax],ebp
65016535:	jne    0x6501654a
65016537:	push   eax
65016538:	call   0x65013577
6501653d:	push   DWORD PTR [esi+0xbc]
65016543:	call   0x6501b7a5
65016548:	pop    ecx
65016549:	pop    ecx
6501654a:	push   DWORD PTR [esi+0xb0]
65016550:	call   0x65013577
65016555:	push   DWORD PTR [esi+0xbc]
6501655b:	call   0x65013577
65016560:	pop    ecx
65016561:	pop    ecx
65016562:	mov    eax,DWORD PTR [esi+0xc0]
65016568:	cmp    eax,ebp
6501656a:	je     0x650165b0
6501656c:	cmp    DWORD PTR [eax],ebp
6501656e:	jne    0x650165b0
65016570:	mov    eax,DWORD PTR [esi+0xc4]
65016576:	sub    eax,0xfe
6501657b:	push   eax
6501657c:	call   0x65013577
65016581:	mov    eax,DWORD PTR [esi+0xcc]
65016587:	mov    edi,0x80
6501658c:	sub    eax,edi
6501658e:	push   eax
6501658f:	call   0x65013577
65016594:	mov    eax,DWORD PTR [esi+0xd0]
6501659a:	sub    eax,edi
6501659c:	push   eax
6501659d:	call   0x65013577
650165a2:	push   DWORD PTR [esi+0xc0]
650165a8:	call   0x65013577
650165ad:	add    esp,0x10
650165b0:	lea    edi,[esi+0xd4]
650165b6:	mov    eax,DWORD PTR [edi]
650165b8:	cmp    eax,0x6502cb78
650165bd:	je     0x650165d6
650165bf:	cmp    DWORD PTR [eax+0xb4],ebp
650165c5:	jne    0x650165d6
650165c7:	push   eax
650165c8:	call   0x6501b615
650165cd:	push   DWORD PTR [edi]
650165cf:	call   0x65013577
650165d4:	pop    ecx
650165d5:	pop    ecx
650165d6:	push   0x6
650165d8:	lea    edi,[esi+0x50]
650165db:	pop    ebx
650165dc:	cmp    DWORD PTR [edi-0x8],0x6502c790
650165e3:	je     0x650165f6
650165e5:	mov    eax,DWORD PTR [edi]
650165e7:	cmp    eax,ebp
650165e9:	je     0x650165f6
650165eb:	cmp    DWORD PTR [eax],ebp
650165ed:	jne    0x650165f6
650165ef:	push   eax
650165f0:	call   0x65013577
650165f5:	pop    ecx
650165f6:	cmp    DWORD PTR [edi-0x4],ebp
650165f9:	je     0x6501660d
650165fb:	mov    eax,DWORD PTR [edi+0x4]
650165fe:	cmp    eax,ebp
65016600:	je     0x6501660d
65016602:	cmp    DWORD PTR [eax],ebp
65016604:	jne    0x6501660d
65016606:	push   eax
65016607:	call   0x65013577
6501660c:	pop    ecx
6501660d:	add    edi,0x10
65016610:	dec    ebx
65016611:	jne    0x650165dc
65016613:	push   esi
65016614:	call   0x65013577
65016619:	pop    ecx
6501661a:	pop    edi
6501661b:	pop    esi
6501661c:	pop    ebp
6501661d:	pop    ebx
6501661e:	ret    
6501661f:	push   ebx
65016620:	push   ebp
65016621:	push   esi
65016622:	mov    esi,DWORD PTR [esp+0x10]
65016626:	push   edi
65016627:	mov    edi,DWORD PTR ds:0x65024020
6501662d:	push   esi
6501662e:	call   edi
65016630:	mov    eax,DWORD PTR [esi+0xb0]
65016636:	test   eax,eax
65016638:	je     0x6501663d
6501663a:	push   eax
6501663b:	call   edi
6501663d:	mov    eax,DWORD PTR [esi+0xb8]
65016643:	test   eax,eax
65016645:	je     0x6501664a
65016647:	push   eax
65016648:	call   edi
6501664a:	mov    eax,DWORD PTR [esi+0xb4]
65016650:	test   eax,eax
65016652:	je     0x65016657
65016654:	push   eax
65016655:	call   edi
65016657:	mov    eax,DWORD PTR [esi+0xc0]
6501665d:	test   eax,eax
6501665f:	je     0x65016664
65016661:	push   eax
65016662:	call   edi
65016664:	push   0x6
65016666:	lea    ebx,[esi+0x50]
65016669:	pop    ebp
6501666a:	cmp    DWORD PTR [ebx-0x8],0x6502c790
65016671:	je     0x6501667c
65016673:	mov    eax,DWORD PTR [ebx]
65016675:	test   eax,eax
65016677:	je     0x6501667c
65016679:	push   eax
6501667a:	call   edi
6501667c:	cmp    DWORD PTR [ebx-0x4],0x0
65016680:	je     0x6501668c
65016682:	mov    eax,DWORD PTR [ebx+0x4]
65016685:	test   eax,eax
65016687:	je     0x6501668c
65016689:	push   eax
6501668a:	call   edi
6501668c:	add    ebx,0x10
6501668f:	dec    ebp
65016690:	jne    0x6501666a
65016692:	mov    eax,DWORD PTR [esi+0xd4]
65016698:	add    eax,0xb4
6501669d:	push   eax
6501669e:	call   edi
650166a0:	pop    edi
650166a1:	pop    esi
650166a2:	pop    ebp
650166a3:	pop    ebx
650166a4:	ret    
650166a5:	push   esi
650166a6:	mov    esi,DWORD PTR [esp+0x8]
650166aa:	test   esi,esi
650166ac:	je     0x6501672d
650166ae:	push   ebx
650166af:	push   ebp
650166b0:	push   edi
650166b1:	mov    edi,DWORD PTR ds:0x65024098
650166b7:	push   esi
650166b8:	call   edi
650166ba:	mov    eax,DWORD PTR [esi+0xb0]
650166c0:	test   eax,eax
650166c2:	je     0x650166c7
650166c4:	push   eax
650166c5:	call   edi
650166c7:	mov    eax,DWORD PTR [esi+0xb8]
650166cd:	test   eax,eax
650166cf:	je     0x650166d4
650166d1:	push   eax
650166d2:	call   edi
650166d4:	mov    eax,DWORD PTR [esi+0xb4]
650166da:	test   eax,eax
650166dc:	je     0x650166e1
650166de:	push   eax
650166df:	call   edi
650166e1:	mov    eax,DWORD PTR [esi+0xc0]
650166e7:	test   eax,eax
650166e9:	je     0x650166ee
650166eb:	push   eax
650166ec:	call   edi
650166ee:	push   0x6
650166f0:	lea    ebx,[esi+0x50]
650166f3:	pop    ebp
650166f4:	cmp    DWORD PTR [ebx-0x8],0x6502c790
650166fb:	je     0x65016706
650166fd:	mov    eax,DWORD PTR [ebx]
650166ff:	test   eax,eax
65016701:	je     0x65016706
65016703:	push   eax
65016704:	call   edi
65016706:	cmp    DWORD PTR [ebx-0x4],0x0
6501670a:	je     0x65016716
6501670c:	mov    eax,DWORD PTR [ebx+0x4]
6501670f:	test   eax,eax
65016711:	je     0x65016716
65016713:	push   eax
65016714:	call   edi
65016716:	add    ebx,0x10
65016719:	dec    ebp
6501671a:	jne    0x650166f4
6501671c:	mov    eax,DWORD PTR [esi+0xd4]
65016722:	add    eax,0xb4
65016727:	push   eax
65016728:	call   edi
6501672a:	pop    edi
6501672b:	pop    ebp
6501672c:	pop    ebx
6501672d:	mov    eax,esi
6501672f:	pop    esi
65016730:	ret    
65016731:	test   edi,edi
65016733:	je     0x6501676c
65016735:	test   eax,eax
65016737:	je     0x6501676c
65016739:	push   esi
6501673a:	mov    esi,DWORD PTR [eax]
6501673c:	cmp    esi,edi
6501673e:	je     0x65016768
65016740:	push   edi
65016741:	mov    DWORD PTR [eax],edi
65016743:	call   0x6501661f
65016748:	test   esi,esi
6501674a:	pop    ecx
6501674b:	je     0x65016768
6501674d:	push   esi
6501674e:	call   0x650166a5
65016753:	cmp    DWORD PTR [esi],0x0
65016756:	pop    ecx
65016757:	jne    0x65016768
65016759:	cmp    esi,0x6502c798
6501675f:	je     0x65016768
65016761:	push   esi
65016762:	call   0x650164df
65016767:	pop    ecx
65016768:	mov    eax,edi
6501676a:	pop    esi
6501676b:	ret    
6501676c:	xor    eax,eax
6501676e:	ret    
6501676f:	push   0xc
65016771:	push   0x65029b10
65016776:	call   0x65013ca0
6501677b:	call   0x650146eb
65016780:	mov    esi,eax
65016782:	mov    eax,ds:0x6502c78c
65016787:	test   DWORD PTR [esi+0x70],eax
6501678a:	je     0x650167ae
6501678c:	cmp    DWORD PTR [esi+0x6c],0x0
65016790:	je     0x650167ae
65016792:	call   0x650146eb
65016797:	mov    esi,DWORD PTR [eax+0x6c]
6501679a:	test   esi,esi
6501679c:	jne    0x650167a6
6501679e:	push   0x20
650167a0:	call   0x65015b26
650167a5:	pop    ecx
650167a6:	mov    eax,esi
650167a8:	call   0x65013ce5
650167ad:	ret    
650167ae:	push   0xc
650167b0:	call   0x65019c98
650167b5:	pop    ecx
650167b6:	and    DWORD PTR [ebp-0x4],0x0
650167ba:	lea    eax,[esi+0x6c]
650167bd:	mov    edi,DWORD PTR ds:0x6502c870
650167c3:	call   0x65016731
650167c8:	mov    DWORD PTR [ebp-0x1c],eax
650167cb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
650167d2:	call   0x650167d9
650167d7:	jmp    0x6501679a
650167d9:	push   0xc
650167db:	call   0x65019bc0
650167e0:	pop    ecx
650167e1:	mov    esi,DWORD PTR [ebp-0x1c]
650167e4:	ret    
650167e5:	push   ebp
650167e6:	mov    ebp,esp
650167e8:	push   ecx
650167e9:	push   esi
650167ea:	mov    esi,DWORD PTR [ebp+0xc]
650167ed:	push   esi
650167ee:	call   0x6501c4fd
650167f3:	mov    DWORD PTR [ebp+0xc],eax
650167f6:	mov    eax,DWORD PTR [esi+0xc]
650167f9:	test   al,0x82
650167fb:	pop    ecx
650167fc:	jne    0x65016815
650167fe:	call   0x650143a0
65016803:	mov    DWORD PTR [eax],0x9
65016809:	or     DWORD PTR [esi+0xc],0x20
6501680d:	or     eax,0xffffffff
65016810:	jmp    0x65016942
65016815:	test   al,0x40
65016817:	je     0x65016826
65016819:	call   0x650143a0
6501681e:	mov    DWORD PTR [eax],0x22
65016824:	jmp    0x65016809
65016826:	push   ebx
65016827:	xor    ebx,ebx
65016829:	test   al,0x1
6501682b:	je     0x65016843
6501682d:	test   al,0x10
6501682f:	mov    DWORD PTR [esi+0x4],ebx
65016832:	je     0x650168bd
65016838:	mov    ecx,DWORD PTR [esi+0x8]
6501683b:	and    eax,0xfffffffe
6501683e:	mov    DWORD PTR [esi],ecx
65016840:	mov    DWORD PTR [esi+0xc],eax
65016843:	mov    eax,DWORD PTR [esi+0xc]
65016846:	and    eax,0xffffffef
65016849:	or     eax,0x2
6501684c:	test   ax,0x10c
65016850:	mov    DWORD PTR [esi+0xc],eax
65016853:	mov    DWORD PTR [esi+0x4],ebx
65016856:	mov    DWORD PTR [ebp-0x4],ebx
65016859:	jne    0x65016887
6501685b:	call   0x6501c35c
65016860:	add    eax,0x20
65016863:	cmp    esi,eax
65016865:	je     0x65016873
65016867:	call   0x6501c35c
6501686c:	add    eax,0x40
6501686f:	cmp    esi,eax
65016871:	jne    0x65016880
65016873:	push   DWORD PTR [ebp+0xc]
65016876:	call   0x6501c2fe
6501687b:	test   eax,eax
6501687d:	pop    ecx
6501687e:	jne    0x65016887
65016880:	push   esi
65016881:	call   0x6501c2ba
65016886:	pop    ecx
65016887:	test   WORD PTR [esi+0xc],0x108
6501688d:	push   edi
6501688e:	je     0x65016914
65016894:	mov    eax,DWORD PTR [esi+0x8]
65016897:	mov    edi,DWORD PTR [esi]
65016899:	lea    ecx,[eax+0x1]
6501689c:	mov    DWORD PTR [esi],ecx
6501689e:	mov    ecx,DWORD PTR [esi+0x18]
650168a1:	sub    edi,eax
650168a3:	dec    ecx
650168a4:	cmp    edi,ebx
650168a6:	mov    DWORD PTR [esi+0x4],ecx
650168a9:	jle    0x650168c8
650168ab:	push   edi
650168ac:	push   eax
650168ad:	push   DWORD PTR [ebp+0xc]
650168b0:	call   0x6501c1de
650168b5:	add    esp,0xc
650168b8:	mov    DWORD PTR [ebp-0x4],eax
650168bb:	jmp    0x6501690a
650168bd:	or     eax,0x20
650168c0:	mov    DWORD PTR [esi+0xc],eax
650168c3:	or     eax,0xffffffff
650168c6:	jmp    0x65016941
650168c8:	mov    ecx,DWORD PTR [ebp+0xc]
650168cb:	cmp    ecx,0xffffffff
650168ce:	je     0x650168eb
650168d0:	cmp    ecx,0xfffffffe
650168d3:	je     0x650168eb
650168d5:	mov    eax,ecx
650168d7:	and    eax,0x1f
650168da:	mov    edx,ecx
650168dc:	sar    edx,0x5
650168df:	shl    eax,0x6
650168e2:	add    eax,DWORD PTR [edx*4+0x65031460]
650168e9:	jmp    0x650168f0
650168eb:	mov    eax,0x6502c880
650168f0:	test   BYTE PTR [eax+0x4],0x20
650168f4:	je     0x6501690a
650168f6:	push   0x2
650168f8:	push   ebx
650168f9:	push   ebx
650168fa:	push   ecx
650168fb:	call   0x6501baa3
65016900:	and    eax,edx
65016902:	add    esp,0x10
65016905:	cmp    eax,0xffffffff
65016908:	je     0x6501692f
6501690a:	mov    eax,DWORD PTR [esi+0x8]
6501690d:	mov    cl,BYTE PTR [ebp+0x8]
65016910:	mov    BYTE PTR [eax],cl
65016912:	jmp    0x6501692a
65016914:	xor    edi,edi
65016916:	inc    edi
65016917:	push   edi
65016918:	lea    eax,[ebp+0x8]
6501691b:	push   eax
6501691c:	push   DWORD PTR [ebp+0xc]
6501691f:	call   0x6501c1de
65016924:	add    esp,0xc
65016927:	mov    DWORD PTR [ebp-0x4],eax
6501692a:	cmp    DWORD PTR [ebp-0x4],edi
6501692d:	je     0x65016938
6501692f:	or     DWORD PTR [esi+0xc],0x20
65016933:	or     eax,0xffffffff
65016936:	jmp    0x65016940
65016938:	mov    eax,DWORD PTR [ebp+0x8]
6501693b:	and    eax,0xff
65016940:	pop    edi
65016941:	pop    ebx
65016942:	pop    esi
65016943:	leave  
65016944:	ret    
65016945:	test   BYTE PTR [eax+0xc],0x40
65016949:	je     0x65016951
6501694b:	cmp    DWORD PTR [eax+0x8],0x0
6501694f:	je     0x65016967
65016951:	push   eax
65016952:	push   DWORD PTR [esp+0x8]
65016956:	call   0x6501c52a
6501695b:	cmp    ax,0xffff
6501695f:	pop    ecx
65016960:	pop    ecx
65016961:	jne    0x65016967
65016963:	or     DWORD PTR [esi],0xffffffff
65016966:	ret    
65016967:	inc    DWORD PTR [esi]
65016969:	ret    
6501696a:	push   ebp
6501696b:	mov    ebp,esp
6501696d:	push   esi
6501696e:	mov    esi,eax
65016970:	jmp    0x65016986
65016972:	push   DWORD PTR [ebp+0x8]
65016975:	mov    eax,DWORD PTR [ebp+0x10]
65016978:	dec    DWORD PTR [ebp+0xc]
6501697b:	call   0x65016945
65016980:	cmp    DWORD PTR [esi],0xffffffff
65016983:	pop    ecx
65016984:	je     0x6501698c
65016986:	cmp    DWORD PTR [ebp+0xc],0x0
6501698a:	jg     0x65016972
6501698c:	pop    esi
6501698d:	pop    ebp
6501698e:	ret    
6501698f:	push   ebp
65016990:	lea    ebp,[esp-0x3f4]
65016997:	sub    esp,0x474
6501699d:	mov    eax,ds:0x6502c09c
650169a2:	xor    eax,ebp
650169a4:	mov    DWORD PTR [ebp+0x3f0],eax
650169aa:	mov    eax,DWORD PTR [ebp+0x3fc]
650169b0:	push   ebx
650169b1:	mov    ebx,DWORD PTR [ebp+0x408]
650169b7:	push   esi
650169b8:	mov    esi,DWORD PTR [ebp+0x400]
650169be:	push   edi
650169bf:	push   DWORD PTR [ebp+0x404]
650169c5:	xor    edi,edi
650169c7:	lea    ecx,[ebp-0x64]
650169ca:	mov    DWORD PTR [ebp-0x3c],eax
650169cd:	mov    DWORD PTR [ebp-0x28],ebx
650169d0:	mov    DWORD PTR [ebp-0x54],edi
650169d3:	mov    DWORD PTR [ebp-0x14],edi
650169d6:	mov    DWORD PTR [ebp-0x38],edi
650169d9:	mov    DWORD PTR [ebp-0x18],edi
650169dc:	mov    DWORD PTR [ebp-0x30],edi
650169df:	mov    DWORD PTR [ebp-0x48],edi
650169e2:	mov    DWORD PTR [ebp-0x34],edi
650169e5:	call   0x650128ff
650169ea:	cmp    DWORD PTR [ebp-0x3c],edi
650169ed:	jne    0x65016a1c
650169ef:	call   0x650143a0
650169f4:	push   edi
650169f5:	push   edi
650169f6:	push   edi
650169f7:	push   edi
650169f8:	mov    DWORD PTR [eax],0x16
650169fe:	push   edi
650169ff:	call   0x6501224f
65016a04:	add    esp,0x14
65016a07:	cmp    BYTE PTR [ebp-0x58],0x0
65016a0b:	je     0x65016a14
65016a0d:	mov    eax,DWORD PTR [ebp-0x5c]
65016a10:	and    DWORD PTR [eax+0x70],0xfffffffd
65016a14:	or     eax,0xffffffff
65016a17:	jmp    0x65017267
65016a1c:	cmp    esi,edi
65016a1e:	je     0x650169ef
65016a20:	movzx  edx,WORD PTR [esi]
65016a23:	xor    ecx,ecx
65016a25:	cmp    dx,di
65016a28:	mov    DWORD PTR [ebp-0x2c],edi
65016a2b:	mov    DWORD PTR [ebp-0x20],edi
65016a2e:	mov    DWORD PTR [ebp-0x50],edi
65016a31:	mov    DWORD PTR [ebp-0x24],edx
65016a34:	je     0x65017257
65016a3a:	push   0x2
65016a3c:	pop    edi
65016a3d:	add    esi,edi
65016a3f:	cmp    DWORD PTR [ebp-0x2c],0x0
65016a43:	mov    DWORD PTR [ebp-0x4c],esi
65016a46:	jl     0x65017257
65016a4c:	lea    eax,[edx-0x20]
65016a4f:	cmp    ax,0x58
65016a53:	ja     0x65016a64
65016a55:	movzx  eax,dx
65016a58:	movzx  eax,BYTE PTR [eax+0x65024d18]
65016a5f:	and    eax,0xf
65016a62:	jmp    0x65016a66
65016a64:	xor    eax,eax
65016a66:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024d38]
65016a6e:	push   0x7
65016a70:	sar    eax,0x4
65016a73:	pop    ecx
65016a74:	cmp    eax,ecx
65016a76:	mov    DWORD PTR [ebp-0x68],eax
65016a79:	ja     0x65017225
65016a7f:	jmp    DWORD PTR [eax*4+0x6501727f]
65016a86:	xor    eax,eax
65016a88:	or     DWORD PTR [ebp-0x18],0xffffffff
65016a8c:	mov    DWORD PTR [ebp-0x6c],eax
65016a8f:	mov    DWORD PTR [ebp-0x48],eax
65016a92:	mov    DWORD PTR [ebp-0x38],eax
65016a95:	mov    DWORD PTR [ebp-0x30],eax
65016a98:	mov    DWORD PTR [ebp-0x14],eax
65016a9b:	mov    DWORD PTR [ebp-0x34],eax
65016a9e:	jmp    0x65017225
65016aa3:	movzx  eax,dx
65016aa6:	sub    eax,0x20
65016aa9:	je     0x65016ae9
65016aab:	sub    eax,0x3
65016aae:	je     0x65016add
65016ab0:	sub    eax,0x8
65016ab3:	je     0x65016ad4
65016ab5:	sub    eax,edi
65016ab7:	je     0x65016acb
65016ab9:	sub    eax,0x3
65016abc:	jne    0x65017225
65016ac2:	or     DWORD PTR [ebp-0x14],0x8
65016ac6:	jmp    0x65017225
65016acb:	or     DWORD PTR [ebp-0x14],0x4
65016acf:	jmp    0x65017225
65016ad4:	or     DWORD PTR [ebp-0x14],0x1
65016ad8:	jmp    0x65017225
65016add:	or     DWORD PTR [ebp-0x14],0x80
65016ae4:	jmp    0x65017225
65016ae9:	or     DWORD PTR [ebp-0x14],edi
65016aec:	jmp    0x65017225
65016af1:	cmp    dx,0x2a
65016af5:	jne    0x65016b17
65016af7:	add    ebx,0x4
65016afa:	mov    DWORD PTR [ebp-0x28],ebx
65016afd:	mov    ebx,DWORD PTR [ebx-0x4]
65016b00:	test   ebx,ebx
65016b02:	mov    DWORD PTR [ebp-0x38],ebx
65016b05:	jge    0x65017225
65016b0b:	or     DWORD PTR [ebp-0x14],0x4
65016b0f:	neg    DWORD PTR [ebp-0x38]
65016b12:	jmp    0x65017225
65016b17:	mov    eax,DWORD PTR [ebp-0x38]
65016b1a:	imul   eax,eax,0xa
65016b1d:	movzx  ecx,dx
65016b20:	lea    eax,[eax+ecx*1-0x30]
65016b24:	mov    DWORD PTR [ebp-0x38],eax
65016b27:	jmp    0x65017225
65016b2c:	and    DWORD PTR [ebp-0x18],0x0
65016b30:	jmp    0x65017225
65016b35:	cmp    dx,0x2a
65016b39:	jne    0x65016b58
65016b3b:	add    ebx,0x4
65016b3e:	mov    DWORD PTR [ebp-0x28],ebx
65016b41:	mov    ebx,DWORD PTR [ebx-0x4]
65016b44:	test   ebx,ebx
65016b46:	mov    DWORD PTR [ebp-0x18],ebx
65016b49:	jge    0x65017225
65016b4f:	or     DWORD PTR [ebp-0x18],0xffffffff
65016b53:	jmp    0x65017225
65016b58:	mov    eax,DWORD PTR [ebp-0x18]
65016b5b:	imul   eax,eax,0xa
65016b5e:	movzx  ecx,dx
65016b61:	lea    eax,[eax+ecx*1-0x30]
65016b65:	mov    DWORD PTR [ebp-0x18],eax
65016b68:	jmp    0x65017225
65016b6d:	movzx  eax,dx
65016b70:	cmp    eax,0x49
65016b73:	je     0x65016bbd
65016b75:	cmp    eax,0x68
65016b78:	je     0x65016bb4
65016b7a:	cmp    eax,0x6c
65016b7d:	je     0x65016b94
65016b7f:	cmp    eax,0x77
65016b82:	jne    0x65017225
65016b88:	or     DWORD PTR [ebp-0x14],0x800
65016b8f:	jmp    0x65017225
65016b94:	cmp    WORD PTR [esi],0x6c
65016b98:	jne    0x65016bab
65016b9a:	add    esi,edi
65016b9c:	or     DWORD PTR [ebp-0x14],0x1000
65016ba3:	mov    DWORD PTR [ebp-0x4c],esi
65016ba6:	jmp    0x65017225
65016bab:	or     DWORD PTR [ebp-0x14],0x10
65016baf:	jmp    0x65017225
65016bb4:	or     DWORD PTR [ebp-0x14],0x20
65016bb8:	jmp    0x65017225
65016bbd:	movzx  eax,WORD PTR [esi]
65016bc0:	cmp    ax,0x36
65016bc4:	jne    0x65016bdf
65016bc6:	cmp    WORD PTR [esi+0x2],0x34
65016bcb:	jne    0x65016bdf
65016bcd:	add    esi,0x4
65016bd0:	or     DWORD PTR [ebp-0x14],0x8000
65016bd7:	mov    DWORD PTR [ebp-0x4c],esi
65016bda:	jmp    0x65017225
65016bdf:	cmp    ax,0x33
65016be3:	jne    0x65016bfe
65016be5:	cmp    WORD PTR [esi+0x2],0x32
65016bea:	jne    0x65016bfe
65016bec:	add    esi,0x4
65016bef:	and    DWORD PTR [ebp-0x14],0xffff7fff
65016bf6:	mov    DWORD PTR [ebp-0x4c],esi
65016bf9:	jmp    0x65017225
65016bfe:	cmp    ax,0x64
65016c02:	je     0x65017225
65016c08:	cmp    ax,0x69
65016c0c:	je     0x65017225
65016c12:	cmp    ax,0x6f
65016c16:	je     0x65017225
65016c1c:	cmp    ax,0x75
65016c20:	je     0x65017225
65016c26:	cmp    ax,0x78
65016c2a:	je     0x65017225
65016c30:	cmp    ax,0x58
65016c34:	je     0x65017225
65016c3a:	and    DWORD PTR [ebp-0x68],0x0
65016c3e:	mov    eax,DWORD PTR [ebp-0x3c]
65016c41:	push   edx
65016c42:	lea    esi,[ebp-0x2c]
65016c45:	mov    DWORD PTR [ebp-0x34],0x1
65016c4c:	call   0x65016945
65016c51:	jmp    0x65017224
65016c56:	movzx  eax,dx
65016c59:	cmp    eax,0x64
65016c5c:	jg     0x65016e09
65016c62:	je     0x65016e88
65016c68:	cmp    eax,0x53
65016c6b:	jg     0x65016d48
65016c71:	je     0x65016cd2
65016c73:	sub    eax,0x41
65016c76:	je     0x65016c88
65016c78:	sub    eax,edi
65016c7a:	je     0x65016cbd
65016c7c:	sub    eax,edi
65016c7e:	je     0x65016c88
65016c80:	sub    eax,edi
65016c82:	jne    0x65017109
65016c88:	add    edx,0x20
65016c8b:	mov    DWORD PTR [ebp-0x6c],0x1
65016c92:	mov    DWORD PTR [ebp-0x24],edx
65016c95:	or     DWORD PTR [ebp-0x14],0x40
65016c99:	cmp    DWORD PTR [ebp-0x18],0x0
65016c9d:	lea    esi,[ebp-0x10]
65016ca0:	mov    eax,0x200
65016ca5:	mov    DWORD PTR [ebp-0x1c],esi
65016ca8:	mov    DWORD PTR [ebp-0x20],eax
65016cab:	jge    0x65016eac
65016cb1:	mov    DWORD PTR [ebp-0x18],0x6
65016cb8:	jmp    0x65016ef9
65016cbd:	test   WORD PTR [ebp-0x14],0x830
65016cc3:	jne    0x65016d65
65016cc9:	or     DWORD PTR [ebp-0x14],0x20
65016ccd:	jmp    0x65016d65
65016cd2:	test   WORD PTR [ebp-0x14],0x830
65016cd8:	jne    0x65016cde
65016cda:	or     DWORD PTR [ebp-0x14],0x20
65016cde:	mov    edi,DWORD PTR [ebp-0x18]
65016ce1:	cmp    edi,0xffffffff
65016ce4:	jne    0x65016ceb
65016ce6:	mov    edi,0x7fffffff
65016ceb:	add    ebx,0x4
65016cee:	test   BYTE PTR [ebp-0x14],0x20
65016cf2:	mov    DWORD PTR [ebp-0x28],ebx
65016cf5:	mov    ebx,DWORD PTR [ebx-0x4]
65016cf8:	mov    DWORD PTR [ebp-0x1c],ebx
65016cfb:	je     0x650170dc
65016d01:	test   ebx,ebx
65016d03:	jne    0x65016d0d
65016d05:	mov    eax,ds:0x6502c950
65016d0a:	mov    DWORD PTR [ebp-0x1c],eax
65016d0d:	and    DWORD PTR [ebp-0x20],0x0
65016d11:	test   edi,edi
65016d13:	mov    esi,DWORD PTR [ebp-0x1c]
65016d16:	jle    0x65017109
65016d1c:	mov    al,BYTE PTR [esi]
65016d1e:	test   al,al
65016d20:	je     0x65017109
65016d26:	lea    ecx,[ebp-0x64]
65016d29:	movzx  eax,al
65016d2c:	push   ecx
65016d2d:	push   eax
65016d2e:	call   0x65019ade
65016d33:	test   eax,eax
65016d35:	pop    ecx
65016d36:	pop    ecx
65016d37:	je     0x65016d3a
65016d39:	inc    esi
65016d3a:	inc    esi
65016d3b:	inc    DWORD PTR [ebp-0x20]
65016d3e:	cmp    DWORD PTR [ebp-0x20],edi
65016d41:	jl     0x65016d1c
65016d43:	jmp    0x65017109
65016d48:	sub    eax,0x58
65016d4b:	je     0x65016f94
65016d51:	sub    eax,edi
65016d53:	je     0x65016dbc
65016d55:	sub    eax,ecx
65016d57:	je     0x65016c95
65016d5d:	sub    eax,edi
65016d5f:	jne    0x65017109
65016d65:	movzx  eax,WORD PTR [ebx]
65016d68:	add    ebx,0x4
65016d6b:	xor    esi,esi
65016d6d:	inc    esi
65016d6e:	test   BYTE PTR [ebp-0x14],0x20
65016d72:	mov    DWORD PTR [ebp-0x34],esi
65016d75:	mov    DWORD PTR [ebp-0x28],ebx
65016d78:	mov    DWORD PTR [ebp-0x70],eax
65016d7b:	je     0x65016daa
65016d7d:	mov    BYTE PTR [ebp-0x40],al
65016d80:	lea    eax,[ebp-0x64]
65016d83:	push   eax
65016d84:	mov    eax,DWORD PTR [ebp-0x64]
65016d87:	mov    BYTE PTR [ebp-0x3f],0x0
65016d8b:	push   DWORD PTR [eax+0xac]
65016d91:	lea    eax,[ebp-0x40]
65016d94:	push   eax
65016d95:	lea    eax,[ebp-0x10]
65016d98:	push   eax
65016d99:	call   0x6501c71e
65016d9e:	add    esp,0x10
65016da1:	test   eax,eax
65016da3:	jge    0x65016dae
65016da5:	mov    DWORD PTR [ebp-0x48],esi
65016da8:	jmp    0x65016dae
65016daa:	mov    WORD PTR [ebp-0x10],ax
65016dae:	lea    eax,[ebp-0x10]
65016db1:	mov    DWORD PTR [ebp-0x1c],eax
65016db4:	mov    DWORD PTR [ebp-0x20],esi
65016db7:	jmp    0x65017109
65016dbc:	mov    eax,DWORD PTR [ebx]
65016dbe:	add    ebx,0x4
65016dc1:	test   eax,eax
65016dc3:	mov    DWORD PTR [ebp-0x28],ebx
65016dc6:	je     0x65016df5
65016dc8:	mov    ecx,DWORD PTR [eax+0x4]
65016dcb:	test   ecx,ecx
65016dcd:	je     0x65016df5
65016dcf:	test   WORD PTR [ebp-0x14],0x800
65016dd5:	movsx  eax,WORD PTR [eax]
65016dd8:	mov    DWORD PTR [ebp-0x1c],ecx
65016ddb:	je     0x65016dec
65016ddd:	cdq    
65016dde:	sub    eax,edx
65016de0:	mov    DWORD PTR [ebp-0x34],0x1
65016de7:	jmp    0x65017104
65016dec:	and    DWORD PTR [ebp-0x34],0x0
65016df0:	jmp    0x65017106
65016df5:	mov    eax,ds:0x6502c950
65016dfa:	mov    DWORD PTR [ebp-0x1c],eax
65016dfd:	push   eax
65016dfe:	call   0x65013ea0
65016e03:	pop    ecx
65016e04:	jmp    0x65017106
65016e09:	cmp    eax,0x70
65016e0c:	jg     0x65016f99
65016e12:	je     0x65016f8d
65016e18:	cmp    eax,0x65
65016e1b:	jl     0x65017109
65016e21:	cmp    eax,0x67
65016e24:	jle    0x65016c95
65016e2a:	cmp    eax,0x69
65016e2d:	je     0x65016e88
65016e2f:	cmp    eax,0x6e
65016e32:	je     0x65016e53
65016e34:	cmp    eax,0x6f
65016e37:	jne    0x65017109
65016e3d:	test   BYTE PTR [ebp-0x14],0x80
65016e41:	mov    DWORD PTR [ebp-0x24],0x8
65016e48:	je     0x65016e93
65016e4a:	or     DWORD PTR [ebp-0x14],0x200
65016e51:	jmp    0x65016e93
65016e53:	mov    esi,DWORD PTR [ebx]
65016e55:	add    ebx,0x4
65016e58:	mov    DWORD PTR [ebp-0x28],ebx
65016e5b:	call   0x6501c708
65016e60:	test   eax,eax
65016e62:	je     0x65017240
65016e68:	test   BYTE PTR [ebp-0x14],0x20
65016e6c:	je     0x65016e77
65016e6e:	mov    ax,WORD PTR [ebp-0x2c]
65016e72:	mov    WORD PTR [esi],ax
65016e75:	jmp    0x65016e7c
65016e77:	mov    eax,DWORD PTR [ebp-0x2c]
65016e7a:	mov    DWORD PTR [esi],eax
65016e7c:	mov    DWORD PTR [ebp-0x48],0x1
65016e83:	jmp    0x65017212
65016e88:	or     DWORD PTR [ebp-0x14],0x40
65016e8c:	mov    DWORD PTR [ebp-0x24],0xa
65016e93:	test   WORD PTR [ebp-0x14],0x8000
65016e99:	je     0x65016fe3
65016e9f:	mov    eax,DWORD PTR [ebx]
65016ea1:	mov    edx,DWORD PTR [ebx+0x4]
65016ea4:	add    ebx,0x8
65016ea7:	jmp    0x6501701c
65016eac:	jne    0x65016ebd
65016eae:	cmp    dx,0x67
65016eb2:	jne    0x65016ef9
65016eb4:	mov    DWORD PTR [ebp-0x18],0x1
65016ebb:	jmp    0x65016ef9
65016ebd:	cmp    DWORD PTR [ebp-0x18],eax
65016ec0:	jle    0x65016ec5
65016ec2:	mov    DWORD PTR [ebp-0x18],eax
65016ec5:	cmp    DWORD PTR [ebp-0x18],0xa3
65016ecc:	jle    0x65016ef9
65016ece:	mov    edi,DWORD PTR [ebp-0x18]
65016ed1:	add    edi,0x15d
65016ed7:	push   edi
65016ed8:	call   0x650159b0
65016edd:	test   eax,eax
65016edf:	mov    edx,DWORD PTR [ebp-0x24]
65016ee2:	pop    ecx
65016ee3:	mov    DWORD PTR [ebp-0x50],eax
65016ee6:	je     0x65016ef2
65016ee8:	mov    DWORD PTR [ebp-0x1c],eax
65016eeb:	mov    DWORD PTR [ebp-0x20],edi
65016eee:	mov    esi,eax
65016ef0:	jmp    0x65016ef9
65016ef2:	mov    DWORD PTR [ebp-0x18],0xa3
65016ef9:	mov    eax,DWORD PTR [ebx]
65016efb:	add    ebx,0x8
65016efe:	mov    DWORD PTR [ebp-0x78],eax
65016f01:	mov    eax,DWORD PTR [ebx-0x4]
65016f04:	mov    DWORD PTR [ebp-0x74],eax
65016f07:	lea    eax,[ebp-0x64]
65016f0a:	push   eax
65016f0b:	push   DWORD PTR [ebp-0x6c]
65016f0e:	movsx  eax,dl
65016f11:	push   DWORD PTR [ebp-0x18]
65016f14:	mov    DWORD PTR [ebp-0x28],ebx
65016f17:	push   eax
65016f18:	push   DWORD PTR [ebp-0x20]
65016f1b:	lea    eax,[ebp-0x78]
65016f1e:	push   esi
65016f1f:	push   eax
65016f20:	push   DWORD PTR ds:0x6502cb5c
65016f26:	call   0x650144cf
65016f2b:	pop    ecx
65016f2c:	call   eax
65016f2e:	mov    ebx,DWORD PTR [ebp-0x14]
65016f31:	add    esp,0x1c
65016f34:	and    ebx,0x80
65016f3a:	je     0x65016f57
65016f3c:	cmp    DWORD PTR [ebp-0x18],0x0
65016f40:	jne    0x65016f57
65016f42:	lea    eax,[ebp-0x64]
65016f45:	push   eax
65016f46:	push   esi
65016f47:	push   DWORD PTR ds:0x6502cb68
65016f4d:	call   0x650144cf
65016f52:	pop    ecx
65016f53:	call   eax
65016f55:	pop    ecx
65016f56:	pop    ecx
65016f57:	cmp    WORD PTR [ebp-0x24],0x67
65016f5c:	jne    0x65016f77
65016f5e:	test   ebx,ebx
65016f60:	jne    0x65016f77
65016f62:	lea    eax,[ebp-0x64]
65016f65:	push   eax
65016f66:	push   esi
65016f67:	push   DWORD PTR ds:0x6502cb64
65016f6d:	call   0x650144cf
65016f72:	pop    ecx
65016f73:	call   eax
65016f75:	pop    ecx
65016f76:	pop    ecx
65016f77:	cmp    BYTE PTR [esi],0x2d
65016f7a:	jne    0x65016f87
65016f7c:	or     DWORD PTR [ebp-0x14],0x100
65016f83:	inc    esi
65016f84:	mov    DWORD PTR [ebp-0x1c],esi
65016f87:	push   esi
65016f88:	jmp    0x65016dfe
65016f8d:	mov    DWORD PTR [ebp-0x18],0x8
65016f94:	mov    DWORD PTR [ebp-0x54],ecx
65016f97:	jmp    0x65016fba
65016f99:	sub    eax,0x73
65016f9c:	je     0x65016cde
65016fa2:	sub    eax,edi
65016fa4:	je     0x65016e8c
65016faa:	sub    eax,0x3
65016fad:	jne    0x65017109
65016fb3:	mov    DWORD PTR [ebp-0x54],0x27
65016fba:	test   BYTE PTR [ebp-0x14],0x80
65016fbe:	mov    DWORD PTR [ebp-0x24],0x10
65016fc5:	je     0x65016e93
65016fcb:	mov    eax,DWORD PTR [ebp-0x54]
65016fce:	add    eax,0x51
65016fd1:	mov    WORD PTR [ebp-0x44],0x30
65016fd7:	mov    WORD PTR [ebp-0x42],ax
65016fdb:	mov    DWORD PTR [ebp-0x30],edi
65016fde:	jmp    0x65016e93
65016fe3:	test   WORD PTR [ebp-0x14],0x1000
65016fe9:	jne    0x65016e9f
65016fef:	add    ebx,0x4
65016ff2:	test   BYTE PTR [ebp-0x14],0x20
65016ff6:	je     0x6501700e
65016ff8:	test   BYTE PTR [ebp-0x14],0x40
65016ffc:	mov    DWORD PTR [ebp-0x28],ebx
65016fff:	je     0x65017007
65017001:	movsx  eax,WORD PTR [ebx-0x4]
65017005:	jmp    0x6501700b
65017007:	movzx  eax,WORD PTR [ebx-0x4]
6501700b:	cdq    
6501700c:	jmp    0x6501701f
6501700e:	test   BYTE PTR [ebp-0x14],0x40
65017012:	mov    eax,DWORD PTR [ebx-0x4]
65017015:	je     0x6501701a
65017017:	cdq    
65017018:	jmp    0x6501701c
6501701a:	xor    edx,edx
6501701c:	mov    DWORD PTR [ebp-0x28],ebx
6501701f:	test   BYTE PTR [ebp-0x14],0x40
65017023:	je     0x6501703d
65017025:	test   edx,edx
65017027:	jg     0x6501703d
65017029:	jl     0x6501702f
6501702b:	test   eax,eax
6501702d:	jae    0x6501703d
6501702f:	neg    eax
65017031:	adc    edx,0x0
65017034:	neg    edx
65017036:	or     DWORD PTR [ebp-0x14],0x100
6501703d:	test   WORD PTR [ebp-0x14],0x9000
65017043:	mov    ebx,edx
65017045:	mov    edi,eax
65017047:	jne    0x6501704b
65017049:	xor    ebx,ebx
6501704b:	cmp    DWORD PTR [ebp-0x18],0x0
6501704f:	jge    0x6501705a
65017051:	mov    DWORD PTR [ebp-0x18],0x1
65017058:	jmp    0x6501706b
6501705a:	and    DWORD PTR [ebp-0x14],0xfffffff7
6501705e:	mov    eax,0x200
65017063:	cmp    DWORD PTR [ebp-0x18],eax
65017066:	jle    0x6501706b
65017068:	mov    DWORD PTR [ebp-0x18],eax
6501706b:	mov    eax,edi
6501706d:	or     eax,ebx
6501706f:	jne    0x65017074
65017071:	and    DWORD PTR [ebp-0x30],eax
65017074:	lea    esi,[ebp+0x1ef]
6501707a:	mov    eax,DWORD PTR [ebp-0x18]
6501707d:	dec    DWORD PTR [ebp-0x18]
65017080:	test   eax,eax
65017082:	jg     0x6501708a
65017084:	mov    eax,edi
65017086:	or     eax,ebx
65017088:	je     0x650170ae
6501708a:	mov    eax,DWORD PTR [ebp-0x24]
6501708d:	cdq    
6501708e:	push   edx
6501708f:	push   eax
65017090:	push   ebx
65017091:	push   edi
65017092:	call   0x65018a80
65017097:	add    ecx,0x30
6501709a:	cmp    ecx,0x39
6501709d:	mov    DWORD PTR [ebp-0x7c],ebx
650170a0:	mov    edi,eax
650170a2:	mov    ebx,edx
650170a4:	jle    0x650170a9
650170a6:	add    ecx,DWORD PTR [ebp-0x54]
650170a9:	mov    BYTE PTR [esi],cl
650170ab:	dec    esi
650170ac:	jmp    0x6501707a
650170ae:	lea    eax,[ebp+0x1ef]
650170b4:	sub    eax,esi
650170b6:	inc    esi
650170b7:	test   WORD PTR [ebp-0x14],0x200
650170bd:	mov    DWORD PTR [ebp-0x20],eax
650170c0:	mov    DWORD PTR [ebp-0x1c],esi
650170c3:	je     0x65017109
650170c5:	test   eax,eax
650170c7:	je     0x650170d0
650170c9:	mov    ecx,esi
650170cb:	cmp    BYTE PTR [ecx],0x30
650170ce:	je     0x65017109
650170d0:	dec    DWORD PTR [ebp-0x1c]
650170d3:	mov    ecx,DWORD PTR [ebp-0x1c]
650170d6:	mov    BYTE PTR [ecx],0x30
650170d9:	inc    eax
650170da:	jmp    0x65017106
650170dc:	test   ebx,ebx
650170de:	jne    0x650170e8
650170e0:	mov    eax,ds:0x6502c954
650170e5:	mov    DWORD PTR [ebp-0x1c],eax
650170e8:	mov    eax,DWORD PTR [ebp-0x1c]
650170eb:	mov    DWORD PTR [ebp-0x34],0x1
650170f2:	jmp    0x650170fd
650170f4:	dec    edi
650170f5:	cmp    WORD PTR [eax],0x0
650170f9:	je     0x65017101
650170fb:	inc    eax
650170fc:	inc    eax
650170fd:	test   edi,edi
650170ff:	jne    0x650170f4
65017101:	sub    eax,DWORD PTR [ebp-0x1c]
65017104:	sar    eax,1
65017106:	mov    DWORD PTR [ebp-0x20],eax
65017109:	cmp    DWORD PTR [ebp-0x48],0x0
6501710d:	jne    0x65017212
65017113:	mov    eax,DWORD PTR [ebp-0x14]
65017116:	test   al,0x40
65017118:	je     0x65017145
6501711a:	test   ax,0x100
6501711e:	je     0x65017128
65017120:	mov    WORD PTR [ebp-0x44],0x2d
65017126:	jmp    0x6501713e
65017128:	test   al,0x1
6501712a:	je     0x65017134
6501712c:	mov    WORD PTR [ebp-0x44],0x2b
65017132:	jmp    0x6501713e
65017134:	test   al,0x2
65017136:	je     0x65017145
65017138:	mov    WORD PTR [ebp-0x44],0x20
6501713e:	mov    DWORD PTR [ebp-0x30],0x1
65017145:	mov    ebx,DWORD PTR [ebp-0x38]
65017148:	mov    esi,DWORD PTR [ebp-0x20]
6501714b:	sub    ebx,esi
6501714d:	sub    ebx,DWORD PTR [ebp-0x30]
65017150:	test   BYTE PTR [ebp-0x14],0xc
65017154:	jne    0x65017167
65017156:	push   DWORD PTR [ebp-0x3c]
65017159:	lea    eax,[ebp-0x2c]
6501715c:	push   ebx
6501715d:	push   0x20
6501715f:	call   0x6501696a
65017164:	add    esp,0xc
65017167:	push   DWORD PTR [ebp-0x30]
6501716a:	mov    edi,DWORD PTR [ebp-0x3c]
6501716d:	lea    eax,[ebp-0x2c]
65017170:	lea    ecx,[ebp-0x44]
65017173:	call   0x6501729f
65017178:	test   BYTE PTR [ebp-0x14],0x8
6501717c:	pop    ecx
6501717d:	je     0x65017194
6501717f:	test   BYTE PTR [ebp-0x14],0x4
65017183:	jne    0x65017194
65017185:	push   edi
65017186:	push   ebx
65017187:	push   0x30
65017189:	lea    eax,[ebp-0x2c]
6501718c:	call   0x6501696a
65017191:	add    esp,0xc
65017194:	cmp    DWORD PTR [ebp-0x34],0x0
65017198:	jne    0x650171e8
6501719a:	test   esi,esi
6501719c:	jle    0x650171e8
6501719e:	mov    edi,DWORD PTR [ebp-0x1c]
650171a1:	mov    DWORD PTR [ebp-0x24],esi
650171a4:	dec    DWORD PTR [ebp-0x24]
650171a7:	lea    eax,[ebp-0x64]
650171aa:	push   eax
650171ab:	mov    eax,DWORD PTR [ebp-0x64]
650171ae:	push   DWORD PTR [eax+0xac]
650171b4:	lea    eax,[ebp-0x70]
650171b7:	push   edi
650171b8:	push   eax
650171b9:	call   0x6501c71e
650171be:	add    esp,0x10
650171c1:	test   eax,eax
650171c3:	mov    DWORD PTR [ebp-0x7c],eax
650171c6:	jle    0x650171e2
650171c8:	push   DWORD PTR [ebp-0x70]
650171cb:	mov    eax,DWORD PTR [ebp-0x3c]
650171ce:	lea    esi,[ebp-0x2c]
650171d1:	call   0x65016945
650171d6:	add    edi,DWORD PTR [ebp-0x7c]
650171d9:	cmp    DWORD PTR [ebp-0x24],0x0
650171dd:	pop    ecx
650171de:	jg     0x650171a4
650171e0:	jmp    0x650171f5
650171e2:	or     DWORD PTR [ebp-0x2c],0xffffffff
650171e6:	jmp    0x650171f5
650171e8:	mov    ecx,DWORD PTR [ebp-0x1c]
650171eb:	push   esi
650171ec:	lea    eax,[ebp-0x2c]
650171ef:	call   0x6501729f
650171f4:	pop    ecx
650171f5:	cmp    DWORD PTR [ebp-0x2c],0x0
650171f9:	jl     0x65017212
650171fb:	test   BYTE PTR [ebp-0x14],0x4
650171ff:	je     0x65017212
65017201:	push   DWORD PTR [ebp-0x3c]
65017204:	lea    eax,[ebp-0x2c]
65017207:	push   ebx
65017208:	push   0x20
6501720a:	call   0x6501696a
6501720f:	add    esp,0xc
65017212:	cmp    DWORD PTR [ebp-0x50],0x0
65017216:	je     0x65017225
65017218:	push   DWORD PTR [ebp-0x50]
6501721b:	call   0x65013577
65017220:	and    DWORD PTR [ebp-0x50],0x0
65017224:	pop    ecx
65017225:	mov    esi,DWORD PTR [ebp-0x4c]
65017228:	movzx  eax,WORD PTR [esi]
6501722b:	test   ax,ax
6501722e:	mov    DWORD PTR [ebp-0x24],eax
65017231:	je     0x65017257
65017233:	mov    ecx,DWORD PTR [ebp-0x68]
65017236:	mov    ebx,DWORD PTR [ebp-0x28]
65017239:	mov    edx,eax
6501723b:	jmp    0x65016a3a
65017240:	call   0x650143a0
65017245:	mov    DWORD PTR [eax],0x16
6501724b:	xor    eax,eax
6501724d:	push   eax
6501724e:	push   eax
6501724f:	push   eax
65017250:	push   eax
65017251:	push   eax
65017252:	jmp    0x650169ff
65017257:	cmp    BYTE PTR [ebp-0x58],0x0
6501725b:	je     0x65017264
6501725d:	mov    eax,DWORD PTR [ebp-0x5c]
65017260:	and    DWORD PTR [eax+0x70],0xfffffffd
65017264:	mov    eax,DWORD PTR [ebp-0x2c]
65017267:	mov    ecx,DWORD PTR [ebp+0x3f0]
6501726d:	pop    edi
6501726e:	pop    esi
6501726f:	xor    ecx,ebp
65017271:	pop    ebx
65017272:	call   0x6501275c
65017277:	add    ebp,0x3f4
6501727d:	leave  
6501727e:	ret    
6501727f:	ds ins BYTE PTR es:[edi],dx
65017281:	add    DWORD PTR [ebp-0x7a],esp
65017284:	push   0x1
65017286:	mov    gs:0xf165016a,eax
6501728c:	push   0x1
6501728e:	gs sub al,0x6b
65017291:	add    DWORD PTR [ebp+0x35],esp
65017294:	imul   eax,DWORD PTR [ecx],0x65
65017297:	ins    DWORD PTR es:[edi],dx
65017298:	imul   eax,DWORD PTR [ecx],0x65
6501729b:	push   esi
6501729c:	ins    BYTE PTR es:[edi],dx
6501729d:	add    DWORD PTR [ebp-0xa],esp
650172a0:	inc    edi
650172a1:	or     al,0x40
650172a3:	push   ebx
650172a4:	push   esi
650172a5:	mov    esi,eax
650172a7:	mov    ebx,ecx
650172a9:	je     0x650172e4
650172ab:	cmp    DWORD PTR [edi+0x8],0x0
650172af:	jne    0x650172e4
650172b1:	mov    eax,DWORD PTR [esp+0xc]
650172b5:	add    DWORD PTR [esi],eax
650172b7:	jmp    0x650172eb
650172b9:	movzx  eax,WORD PTR [ebx]
650172bc:	dec    DWORD PTR [esp+0xc]
650172c0:	push   eax
650172c1:	mov    eax,edi
650172c3:	call   0x65016945
650172c8:	inc    ebx
650172c9:	inc    ebx
650172ca:	cmp    DWORD PTR [esi],0xffffffff
650172cd:	pop    ecx
650172ce:	jne    0x650172e4
650172d0:	call   0x650143a0
650172d5:	cmp    DWORD PTR [eax],0x2a
650172d8:	jne    0x650172eb
650172da:	push   0x3f
650172dc:	mov    eax,edi
650172de:	call   0x65016945
650172e3:	pop    ecx
650172e4:	cmp    DWORD PTR [esp+0xc],0x0
650172e9:	jg     0x650172b9
650172eb:	pop    esi
650172ec:	pop    ebx
650172ed:	ret    
650172ee:	push   ebp
650172ef:	lea    ebp,[esp-0x3f4]
650172f6:	sub    esp,0x474
650172fc:	mov    eax,ds:0x6502c09c
65017301:	xor    eax,ebp
65017303:	mov    DWORD PTR [ebp+0x3f0],eax
65017309:	push   ebx
6501730a:	mov    ebx,DWORD PTR [ebp+0x408]
65017310:	push   esi
65017311:	mov    esi,DWORD PTR [ebp+0x3fc]
65017317:	xor    eax,eax
65017319:	push   edi
6501731a:	push   DWORD PTR [ebp+0x404]
65017320:	mov    edi,DWORD PTR [ebp+0x400]
65017326:	lea    ecx,[ebp-0x58]
65017329:	mov    DWORD PTR [ebp-0x48],esi
6501732c:	mov    DWORD PTR [ebp-0x24],ebx
6501732f:	mov    DWORD PTR [ebp-0x60],eax
65017332:	mov    DWORD PTR [ebp-0x14],eax
65017335:	mov    DWORD PTR [ebp-0x38],eax
65017338:	mov    DWORD PTR [ebp-0x18],eax
6501733b:	mov    DWORD PTR [ebp-0x30],eax
6501733e:	mov    DWORD PTR [ebp-0x5c],eax
65017341:	mov    DWORD PTR [ebp-0x34],eax
65017344:	call   0x650128ff
65017349:	test   esi,esi
6501734b:	jne    0x6501737c
6501734d:	call   0x650143a0
65017352:	mov    DWORD PTR [eax],0x16
65017358:	xor    eax,eax
6501735a:	push   eax
6501735b:	push   eax
6501735c:	push   eax
6501735d:	push   eax
6501735e:	push   eax
6501735f:	call   0x6501224f
65017364:	add    esp,0x14
65017367:	cmp    BYTE PTR [ebp-0x4c],0x0
6501736b:	je     0x65017374
6501736d:	mov    eax,DWORD PTR [ebp-0x50]
65017370:	and    DWORD PTR [eax+0x70],0xfffffffd
65017374:	or     eax,0xffffffff
65017377:	jmp    0x65017bd2
6501737c:	xor    esi,esi
6501737e:	cmp    edi,esi
65017380:	jne    0x65017394
65017382:	call   0x650143a0
65017387:	push   esi
65017388:	push   esi
65017389:	push   esi
6501738a:	push   esi
6501738b:	mov    DWORD PTR [eax],0x16
65017391:	push   esi
65017392:	jmp    0x6501735f
65017394:	movzx  ecx,WORD PTR [edi]
65017397:	cmp    cx,si
6501739a:	mov    DWORD PTR [ebp-0x2c],esi
6501739d:	mov    DWORD PTR [ebp-0x20],esi
650173a0:	mov    DWORD PTR [ebp-0x40],esi
650173a3:	mov    DWORD PTR [ebp-0x64],esi
650173a6:	mov    DWORD PTR [ebp-0x28],ecx
650173a9:	je     0x65017bc2
650173af:	push   0x2
650173b1:	pop    esi
650173b2:	add    edi,esi
650173b4:	xor    eax,eax
650173b6:	cmp    DWORD PTR [ebp-0x2c],eax
650173b9:	mov    DWORD PTR [ebp-0x6c],edi
650173bc:	jl     0x65017bb2
650173c2:	lea    edx,[ecx-0x20]
650173c5:	cmp    dx,0x58
650173c9:	ja     0x650173d8
650173cb:	movzx  eax,cx
650173ce:	movzx  eax,BYTE PTR [eax+0x650263c0]
650173d5:	and    eax,0xf
650173d8:	mov    edx,DWORD PTR [ebp-0x40]
650173db:	imul   eax,eax,0x9
650173de:	movzx  eax,BYTE PTR [eax+edx*1+0x650263e0]
650173e6:	push   0x8
650173e8:	shr    eax,0x4
650173eb:	pop    edx
650173ec:	cmp    eax,edx
650173ee:	mov    DWORD PTR [ebp-0x40],eax
650173f1:	je     0x6501734d
650173f7:	cmp    eax,0x7
650173fa:	ja     0x65017b9a
65017400:	jmp    DWORD PTR [eax*4+0x65017bea]
65017407:	xor    eax,eax
65017409:	or     DWORD PTR [ebp-0x18],0xffffffff
6501740d:	mov    DWORD PTR [ebp-0x68],eax
65017410:	mov    DWORD PTR [ebp-0x5c],eax
65017413:	mov    DWORD PTR [ebp-0x38],eax
65017416:	mov    DWORD PTR [ebp-0x30],eax
65017419:	mov    DWORD PTR [ebp-0x14],eax
6501741c:	mov    DWORD PTR [ebp-0x34],eax
6501741f:	jmp    0x65017ba0
65017424:	movzx  eax,cx
65017427:	sub    eax,0x20
6501742a:	je     0x65017468
6501742c:	sub    eax,0x3
6501742f:	je     0x6501745c
65017431:	sub    eax,edx
65017433:	je     0x65017453
65017435:	sub    eax,esi
65017437:	je     0x6501744a
65017439:	sub    eax,0x3
6501743c:	jne    0x65017b9a
65017442:	or     DWORD PTR [ebp-0x14],edx
65017445:	jmp    0x65017ba0
6501744a:	or     DWORD PTR [ebp-0x14],0x4
6501744e:	jmp    0x65017ba0
65017453:	or     DWORD PTR [ebp-0x14],0x1
65017457:	jmp    0x65017ba0
6501745c:	or     DWORD PTR [ebp-0x14],0x80
65017463:	jmp    0x65017ba0
65017468:	or     DWORD PTR [ebp-0x14],esi
6501746b:	jmp    0x65017ba0
65017470:	cmp    cx,0x2a
65017474:	jne    0x65017495
65017476:	mov    eax,DWORD PTR [ebx]
65017478:	add    ebx,0x4
6501747b:	test   eax,eax
6501747d:	mov    DWORD PTR [ebp-0x24],ebx
65017480:	mov    DWORD PTR [ebp-0x38],eax
65017483:	jge    0x65017ba0
65017489:	or     DWORD PTR [ebp-0x14],0x4
6501748d:	neg    DWORD PTR [ebp-0x38]
65017490:	jmp    0x65017ba0
65017495:	mov    eax,DWORD PTR [ebp-0x38]
65017498:	imul   eax,eax,0xa
6501749b:	movzx  ecx,cx
6501749e:	lea    eax,[eax+ecx*1-0x30]
650174a2:	mov    DWORD PTR [ebp-0x38],eax
650174a5:	jmp    0x65017ba0
650174aa:	and    DWORD PTR [ebp-0x18],0x0
650174ae:	jmp    0x65017ba0
650174b3:	cmp    cx,0x2a
650174b7:	jne    0x650174d5
650174b9:	mov    eax,DWORD PTR [ebx]
650174bb:	add    ebx,0x4
650174be:	test   eax,eax
650174c0:	mov    DWORD PTR [ebp-0x24],ebx
650174c3:	mov    DWORD PTR [ebp-0x18],eax
650174c6:	jge    0x65017ba0
650174cc:	or     DWORD PTR [ebp-0x18],0xffffffff
650174d0:	jmp    0x65017ba0
650174d5:	mov    eax,DWORD PTR [ebp-0x18]
650174d8:	imul   eax,eax,0xa
650174db:	movzx  ecx,cx
650174de:	lea    eax,[eax+ecx*1-0x30]
650174e2:	mov    DWORD PTR [ebp-0x18],eax
650174e5:	jmp    0x65017ba0
650174ea:	movzx  eax,cx
650174ed:	cmp    eax,0x49
650174f0:	je     0x65017537
650174f2:	cmp    eax,0x68
650174f5:	je     0x6501752e
650174f7:	cmp    eax,0x6c
650174fa:	je     0x65017511
650174fc:	cmp    eax,0x77
650174ff:	jne    0x65017ba0
65017505:	or     DWORD PTR [ebp-0x14],0x800
6501750c:	jmp    0x65017ba0
65017511:	cmp    WORD PTR [edi],0x6c
65017515:	jne    0x65017525
65017517:	add    edi,esi
65017519:	or     DWORD PTR [ebp-0x14],0x1000
65017520:	jmp    0x65017ba0
65017525:	or     DWORD PTR [ebp-0x14],0x10
65017529:	jmp    0x65017ba0
6501752e:	or     DWORD PTR [ebp-0x14],0x20
65017532:	jmp    0x65017ba0
65017537:	movzx  eax,WORD PTR [edi]
6501753a:	cmp    ax,0x36
6501753e:	jne    0x65017556
65017540:	cmp    WORD PTR [edi+0x2],0x34
65017545:	jne    0x65017556
65017547:	add    edi,0x4
6501754a:	or     DWORD PTR [ebp-0x14],0x8000
65017551:	jmp    0x65017ba0
65017556:	cmp    ax,0x33
6501755a:	jne    0x65017572
6501755c:	cmp    WORD PTR [edi+0x2],0x32
65017561:	jne    0x65017572
65017563:	add    edi,0x4
65017566:	and    DWORD PTR [ebp-0x14],0xffff7fff
6501756d:	jmp    0x65017ba0
65017572:	cmp    ax,0x64
65017576:	je     0x65017ba0
6501757c:	cmp    ax,0x69
65017580:	je     0x65017ba0
65017586:	cmp    ax,0x6f
6501758a:	je     0x65017ba0
65017590:	cmp    ax,0x75
65017594:	je     0x65017ba0
6501759a:	cmp    ax,0x78
6501759e:	je     0x65017ba0
650175a4:	cmp    ax,0x58
650175a8:	je     0x65017ba0
650175ae:	and    DWORD PTR [ebp-0x40],0x0
650175b2:	mov    eax,DWORD PTR [ebp-0x48]
650175b5:	push   ecx
650175b6:	lea    esi,[ebp-0x2c]
650175b9:	mov    DWORD PTR [ebp-0x34],0x1
650175c0:	call   0x65016945
650175c5:	pop    ecx
650175c6:	jmp    0x65017ba0
650175cb:	movzx  eax,cx
650175ce:	cmp    eax,0x64
650175d1:	jg     0x6501777f
650175d7:	je     0x650177fa
650175dd:	cmp    eax,0x53
650175e0:	jg     0x650176bd
650175e6:	je     0x65017647
650175e8:	sub    eax,0x41
650175eb:	je     0x650175fd
650175ed:	sub    eax,esi
650175ef:	je     0x65017632
650175f1:	sub    eax,esi
650175f3:	je     0x650175fd
650175f5:	sub    eax,esi
650175f7:	jne    0x65017a7e
650175fd:	add    ecx,0x20
65017600:	mov    DWORD PTR [ebp-0x68],0x1
65017607:	mov    DWORD PTR [ebp-0x28],ecx
6501760a:	or     DWORD PTR [ebp-0x14],0x40
6501760e:	cmp    DWORD PTR [ebp-0x18],0x0
65017612:	lea    esi,[ebp-0x10]
65017615:	mov    eax,0x200
6501761a:	mov    DWORD PTR [ebp-0x1c],esi
6501761d:	mov    DWORD PTR [ebp-0x20],eax
65017620:	jge    0x6501781e
65017626:	mov    DWORD PTR [ebp-0x18],0x6
6501762d:	jmp    0x6501786e
65017632:	test   WORD PTR [ebp-0x14],0x830
65017638:	jne    0x650176db
6501763e:	or     DWORD PTR [ebp-0x14],0x20
65017642:	jmp    0x650176db
65017647:	test   WORD PTR [ebp-0x14],0x830
6501764d:	jne    0x65017653
6501764f:	or     DWORD PTR [ebp-0x14],0x20
65017653:	mov    edi,DWORD PTR [ebp-0x18]
65017656:	cmp    edi,0xffffffff
65017659:	jne    0x65017660
6501765b:	mov    edi,0x7fffffff
65017660:	add    ebx,0x4
65017663:	test   BYTE PTR [ebp-0x14],0x20
65017667:	mov    DWORD PTR [ebp-0x24],ebx
6501766a:	mov    ebx,DWORD PTR [ebx-0x4]
6501766d:	mov    DWORD PTR [ebp-0x1c],ebx
65017670:	je     0x65017a51
65017676:	test   ebx,ebx
65017678:	jne    0x65017682
6501767a:	mov    eax,ds:0x6502c950
6501767f:	mov    DWORD PTR [ebp-0x1c],eax
65017682:	and    DWORD PTR [ebp-0x20],0x0
65017686:	test   edi,edi
65017688:	mov    esi,DWORD PTR [ebp-0x1c]
6501768b:	jle    0x65017a7e
65017691:	mov    al,BYTE PTR [esi]
65017693:	test   al,al
65017695:	je     0x65017a7e
6501769b:	lea    ecx,[ebp-0x58]
6501769e:	movzx  eax,al
650176a1:	push   ecx
650176a2:	push   eax
650176a3:	call   0x65019ade
650176a8:	test   eax,eax
650176aa:	pop    ecx
650176ab:	pop    ecx
650176ac:	je     0x650176af
650176ae:	inc    esi
650176af:	inc    esi
650176b0:	inc    DWORD PTR [ebp-0x20]
650176b3:	cmp    DWORD PTR [ebp-0x20],edi
650176b6:	jl     0x65017691
650176b8:	jmp    0x65017a7e
650176bd:	sub    eax,0x58
650176c0:	je     0x65017905
650176c6:	sub    eax,esi
650176c8:	je     0x65017732
650176ca:	sub    eax,0x7
650176cd:	je     0x6501760a
650176d3:	sub    eax,esi
650176d5:	jne    0x65017a7e
650176db:	movzx  eax,WORD PTR [ebx]
650176de:	add    ebx,0x4
650176e1:	xor    esi,esi
650176e3:	inc    esi
650176e4:	test   BYTE PTR [ebp-0x14],0x20
650176e8:	mov    DWORD PTR [ebp-0x34],esi
650176eb:	mov    DWORD PTR [ebp-0x24],ebx
650176ee:	mov    DWORD PTR [ebp-0x70],eax
650176f1:	je     0x65017720
650176f3:	mov    BYTE PTR [ebp-0x44],al
650176f6:	lea    eax,[ebp-0x58]
650176f9:	push   eax
650176fa:	mov    eax,DWORD PTR [ebp-0x58]
650176fd:	mov    BYTE PTR [ebp-0x43],0x0
65017701:	push   DWORD PTR [eax+0xac]
65017707:	lea    eax,[ebp-0x44]
6501770a:	push   eax
6501770b:	lea    eax,[ebp-0x10]
6501770e:	push   eax
6501770f:	call   0x6501c71e
65017714:	add    esp,0x10
65017717:	test   eax,eax
65017719:	jge    0x65017724
6501771b:	mov    DWORD PTR [ebp-0x5c],esi
6501771e:	jmp    0x65017724
65017720:	mov    WORD PTR [ebp-0x10],ax
65017724:	lea    eax,[ebp-0x10]
65017727:	mov    DWORD PTR [ebp-0x1c],eax
6501772a:	mov    DWORD PTR [ebp-0x20],esi
6501772d:	jmp    0x65017a7e
65017732:	mov    eax,DWORD PTR [ebx]
65017734:	add    ebx,0x4
65017737:	test   eax,eax
65017739:	mov    DWORD PTR [ebp-0x24],ebx
6501773c:	je     0x6501776b
6501773e:	mov    ecx,DWORD PTR [eax+0x4]
65017741:	test   ecx,ecx
65017743:	je     0x6501776b
65017745:	test   WORD PTR [ebp-0x14],0x800
6501774b:	movsx  eax,WORD PTR [eax]
6501774e:	mov    DWORD PTR [ebp-0x1c],ecx
65017751:	je     0x65017762
65017753:	cdq    
65017754:	sub    eax,edx
65017756:	mov    DWORD PTR [ebp-0x34],0x1
6501775d:	jmp    0x65017a79
65017762:	and    DWORD PTR [ebp-0x34],0x0
65017766:	jmp    0x65017a7b
6501776b:	mov    eax,ds:0x6502c950
65017770:	mov    DWORD PTR [ebp-0x1c],eax
65017773:	push   eax
65017774:	call   0x65013ea0
65017779:	pop    ecx
6501777a:	jmp    0x65017a7b
6501777f:	cmp    eax,0x70
65017782:	jg     0x6501790e
65017788:	je     0x65017902
6501778e:	cmp    eax,0x65
65017791:	jl     0x65017a7e
65017797:	cmp    eax,0x67
6501779a:	jle    0x6501760a
650177a0:	cmp    eax,0x69
650177a3:	je     0x650177fa
650177a5:	cmp    eax,0x6e
650177a8:	je     0x650177c5
650177aa:	cmp    eax,0x6f
650177ad:	jne    0x65017a7e
650177b3:	test   BYTE PTR [ebp-0x14],0x80
650177b7:	mov    DWORD PTR [ebp-0x28],edx
650177ba:	je     0x65017805
650177bc:	or     DWORD PTR [ebp-0x14],0x200
650177c3:	jmp    0x65017805
650177c5:	mov    esi,DWORD PTR [ebx]
650177c7:	add    ebx,0x4
650177ca:	mov    DWORD PTR [ebp-0x24],ebx
650177cd:	call   0x6501c708
650177d2:	test   eax,eax
650177d4:	je     0x6501734d
650177da:	test   BYTE PTR [ebp-0x14],0x20
650177de:	je     0x650177e9
650177e0:	mov    ax,WORD PTR [ebp-0x2c]
650177e4:	mov    WORD PTR [esi],ax
650177e7:	jmp    0x650177ee
650177e9:	mov    eax,DWORD PTR [ebp-0x2c]
650177ec:	mov    DWORD PTR [esi],eax
650177ee:	mov    DWORD PTR [ebp-0x5c],0x1
650177f5:	jmp    0x65017b87
650177fa:	or     DWORD PTR [ebp-0x14],0x40
650177fe:	mov    DWORD PTR [ebp-0x28],0xa
65017805:	test   WORD PTR [ebp-0x14],0x8000
6501780b:	je     0x65017958
65017811:	add    ebx,edx
65017813:	mov    eax,DWORD PTR [ebx-0x8]
65017816:	mov    edx,DWORD PTR [ebx-0x4]
65017819:	jmp    0x65017991
6501781e:	jne    0x6501782f
65017820:	cmp    cx,0x67
65017824:	jne    0x6501786e
65017826:	mov    DWORD PTR [ebp-0x18],0x1
6501782d:	jmp    0x6501786e
6501782f:	cmp    DWORD PTR [ebp-0x18],eax
65017832:	jle    0x65017837
65017834:	mov    DWORD PTR [ebp-0x18],eax
65017837:	cmp    DWORD PTR [ebp-0x18],0xa3
6501783e:	jle    0x6501786e
65017840:	mov    edi,DWORD PTR [ebp-0x18]
65017843:	add    edi,0x15d
65017849:	push   edi
6501784a:	call   0x650159b0
6501784f:	test   eax,eax
65017851:	pop    ecx
65017852:	mov    ecx,DWORD PTR [ebp-0x28]
65017855:	push   0x8
65017857:	mov    DWORD PTR [ebp-0x64],eax
6501785a:	pop    edx
6501785b:	je     0x65017867
6501785d:	mov    DWORD PTR [ebp-0x1c],eax
65017860:	mov    DWORD PTR [ebp-0x20],edi
65017863:	mov    esi,eax
65017865:	jmp    0x6501786e
65017867:	mov    DWORD PTR [ebp-0x18],0xa3
6501786e:	add    ebx,edx
65017870:	mov    eax,DWORD PTR [ebx-0x8]
65017873:	mov    DWORD PTR [ebp-0x78],eax
65017876:	mov    eax,DWORD PTR [ebx-0x4]
65017879:	mov    DWORD PTR [ebp-0x74],eax
6501787c:	lea    eax,[ebp-0x58]
6501787f:	push   eax
65017880:	push   DWORD PTR [ebp-0x68]
65017883:	movsx  eax,cl
65017886:	push   DWORD PTR [ebp-0x18]
65017889:	mov    DWORD PTR [ebp-0x24],ebx
6501788c:	push   eax
6501788d:	push   DWORD PTR [ebp-0x20]
65017890:	lea    eax,[ebp-0x78]
65017893:	push   esi
65017894:	push   eax
65017895:	push   DWORD PTR ds:0x6502cb5c
6501789b:	call   0x650144cf
650178a0:	pop    ecx
650178a1:	call   eax
650178a3:	mov    ebx,DWORD PTR [ebp-0x14]
650178a6:	add    esp,0x1c
650178a9:	and    ebx,0x80
650178af:	je     0x650178cc
650178b1:	cmp    DWORD PTR [ebp-0x18],0x0
650178b5:	jne    0x650178cc
650178b7:	lea    eax,[ebp-0x58]
650178ba:	push   eax
650178bb:	push   esi
650178bc:	push   DWORD PTR ds:0x6502cb68
650178c2:	call   0x650144cf
650178c7:	pop    ecx
650178c8:	call   eax
650178ca:	pop    ecx
650178cb:	pop    ecx
650178cc:	cmp    WORD PTR [ebp-0x28],0x67
650178d1:	jne    0x650178ec
650178d3:	test   ebx,ebx
650178d5:	jne    0x650178ec
650178d7:	lea    eax,[ebp-0x58]
650178da:	push   eax
650178db:	push   esi
650178dc:	push   DWORD PTR ds:0x6502cb64
650178e2:	call   0x650144cf
650178e7:	pop    ecx
650178e8:	call   eax
650178ea:	pop    ecx
650178eb:	pop    ecx
650178ec:	cmp    BYTE PTR [esi],0x2d
650178ef:	jne    0x650178fc
650178f1:	or     DWORD PTR [ebp-0x14],0x100
650178f8:	inc    esi
650178f9:	mov    DWORD PTR [ebp-0x1c],esi
650178fc:	push   esi
650178fd:	jmp    0x65017774
65017902:	mov    DWORD PTR [ebp-0x18],edx
65017905:	mov    DWORD PTR [ebp-0x60],0x7
6501790c:	jmp    0x6501792f
6501790e:	sub    eax,0x73
65017911:	je     0x65017653
65017917:	sub    eax,esi
65017919:	je     0x650177fe
6501791f:	sub    eax,0x3
65017922:	jne    0x65017a7e
65017928:	mov    DWORD PTR [ebp-0x60],0x27
6501792f:	test   BYTE PTR [ebp-0x14],0x80
65017933:	mov    DWORD PTR [ebp-0x28],0x10
6501793a:	je     0x65017805
65017940:	mov    eax,DWORD PTR [ebp-0x60]
65017943:	add    eax,0x51
65017946:	mov    WORD PTR [ebp-0x3c],0x30
6501794c:	mov    WORD PTR [ebp-0x3a],ax
65017950:	mov    DWORD PTR [ebp-0x30],esi
65017953:	jmp    0x65017805
65017958:	test   WORD PTR [ebp-0x14],0x1000
6501795e:	jne    0x65017811
65017964:	add    ebx,0x4
65017967:	test   BYTE PTR [ebp-0x14],0x20
6501796b:	je     0x65017983
6501796d:	test   BYTE PTR [ebp-0x14],0x40
65017971:	mov    DWORD PTR [ebp-0x24],ebx
65017974:	je     0x6501797c
65017976:	movsx  eax,WORD PTR [ebx-0x4]
6501797a:	jmp    0x65017980
6501797c:	movzx  eax,WORD PTR [ebx-0x4]
65017980:	cdq    
65017981:	jmp    0x65017994
65017983:	test   BYTE PTR [ebp-0x14],0x40
65017987:	mov    eax,DWORD PTR [ebx-0x4]
6501798a:	je     0x6501798f
6501798c:	cdq    
6501798d:	jmp    0x65017991
6501798f:	xor    edx,edx
65017991:	mov    DWORD PTR [ebp-0x24],ebx
65017994:	test   BYTE PTR [ebp-0x14],0x40
65017998:	je     0x650179b2
6501799a:	test   edx,edx
6501799c:	jg     0x650179b2
6501799e:	jl     0x650179a4
650179a0:	test   eax,eax
650179a2:	jae    0x650179b2
650179a4:	neg    eax
650179a6:	adc    edx,0x0
650179a9:	neg    edx
650179ab:	or     DWORD PTR [ebp-0x14],0x100
650179b2:	test   WORD PTR [ebp-0x14],0x9000
650179b8:	mov    ebx,edx
650179ba:	mov    edi,eax
650179bc:	jne    0x650179c0
650179be:	xor    ebx,ebx
650179c0:	cmp    DWORD PTR [ebp-0x18],0x0
650179c4:	jge    0x650179cf
650179c6:	mov    DWORD PTR [ebp-0x18],0x1
650179cd:	jmp    0x650179e0
650179cf:	and    DWORD PTR [ebp-0x14],0xfffffff7
650179d3:	mov    eax,0x200
650179d8:	cmp    DWORD PTR [ebp-0x18],eax
650179db:	jle    0x650179e0
650179dd:	mov    DWORD PTR [ebp-0x18],eax
650179e0:	mov    eax,edi
650179e2:	or     eax,ebx
650179e4:	jne    0x650179e9
650179e6:	and    DWORD PTR [ebp-0x30],eax
650179e9:	lea    esi,[ebp+0x1ef]
650179ef:	mov    eax,DWORD PTR [ebp-0x18]
650179f2:	dec    DWORD PTR [ebp-0x18]
650179f5:	test   eax,eax
650179f7:	jg     0x650179ff
650179f9:	mov    eax,edi
650179fb:	or     eax,ebx
650179fd:	je     0x65017a23
650179ff:	mov    eax,DWORD PTR [ebp-0x28]
65017a02:	cdq    
65017a03:	push   edx
65017a04:	push   eax
65017a05:	push   ebx
65017a06:	push   edi
65017a07:	call   0x65018a80
65017a0c:	add    ecx,0x30
65017a0f:	cmp    ecx,0x39
65017a12:	mov    DWORD PTR [ebp-0x7c],ebx
65017a15:	mov    edi,eax
65017a17:	mov    ebx,edx
65017a19:	jle    0x65017a1e
65017a1b:	add    ecx,DWORD PTR [ebp-0x60]
65017a1e:	mov    BYTE PTR [esi],cl
65017a20:	dec    esi
65017a21:	jmp    0x650179ef
65017a23:	lea    eax,[ebp+0x1ef]
65017a29:	sub    eax,esi
65017a2b:	inc    esi
65017a2c:	test   WORD PTR [ebp-0x14],0x200
65017a32:	mov    DWORD PTR [ebp-0x20],eax
65017a35:	mov    DWORD PTR [ebp-0x1c],esi
65017a38:	je     0x65017a7e
65017a3a:	test   eax,eax
65017a3c:	je     0x65017a45
65017a3e:	mov    ecx,esi
65017a40:	cmp    BYTE PTR [ecx],0x30
65017a43:	je     0x65017a7e
65017a45:	dec    DWORD PTR [ebp-0x1c]
65017a48:	mov    ecx,DWORD PTR [ebp-0x1c]
65017a4b:	mov    BYTE PTR [ecx],0x30
65017a4e:	inc    eax
65017a4f:	jmp    0x65017a7b
65017a51:	test   ebx,ebx
65017a53:	jne    0x65017a5d
65017a55:	mov    eax,ds:0x6502c954
65017a5a:	mov    DWORD PTR [ebp-0x1c],eax
65017a5d:	mov    eax,DWORD PTR [ebp-0x1c]
65017a60:	mov    DWORD PTR [ebp-0x34],0x1
65017a67:	jmp    0x65017a72
65017a69:	dec    edi
65017a6a:	cmp    WORD PTR [eax],0x0
65017a6e:	je     0x65017a76
65017a70:	add    eax,esi
65017a72:	test   edi,edi
65017a74:	jne    0x65017a69
65017a76:	sub    eax,DWORD PTR [ebp-0x1c]
65017a79:	sar    eax,1
65017a7b:	mov    DWORD PTR [ebp-0x20],eax
65017a7e:	cmp    DWORD PTR [ebp-0x5c],0x0
65017a82:	jne    0x65017b87
65017a88:	mov    eax,DWORD PTR [ebp-0x14]
65017a8b:	test   al,0x40
65017a8d:	je     0x65017aba
65017a8f:	test   ax,0x100
65017a93:	je     0x65017a9d
65017a95:	mov    WORD PTR [ebp-0x3c],0x2d
65017a9b:	jmp    0x65017ab3
65017a9d:	test   al,0x1
65017a9f:	je     0x65017aa9
65017aa1:	mov    WORD PTR [ebp-0x3c],0x2b
65017aa7:	jmp    0x65017ab3
65017aa9:	test   al,0x2
65017aab:	je     0x65017aba
65017aad:	mov    WORD PTR [ebp-0x3c],0x20
65017ab3:	mov    DWORD PTR [ebp-0x30],0x1
65017aba:	mov    ebx,DWORD PTR [ebp-0x38]
65017abd:	mov    esi,DWORD PTR [ebp-0x20]
65017ac0:	sub    ebx,esi
65017ac2:	sub    ebx,DWORD PTR [ebp-0x30]
65017ac5:	test   BYTE PTR [ebp-0x14],0xc
65017ac9:	jne    0x65017adc
65017acb:	push   DWORD PTR [ebp-0x48]
65017ace:	lea    eax,[ebp-0x2c]
65017ad1:	push   ebx
65017ad2:	push   0x20
65017ad4:	call   0x6501696a
65017ad9:	add    esp,0xc
65017adc:	push   DWORD PTR [ebp-0x30]
65017adf:	mov    edi,DWORD PTR [ebp-0x48]
65017ae2:	lea    eax,[ebp-0x2c]
65017ae5:	lea    ecx,[ebp-0x3c]
65017ae8:	call   0x6501729f
65017aed:	test   BYTE PTR [ebp-0x14],0x8
65017af1:	pop    ecx
65017af2:	je     0x65017b09
65017af4:	test   BYTE PTR [ebp-0x14],0x4
65017af8:	jne    0x65017b09
65017afa:	push   edi
65017afb:	push   ebx
65017afc:	push   0x30
65017afe:	lea    eax,[ebp-0x2c]
65017b01:	call   0x6501696a
65017b06:	add    esp,0xc
65017b09:	cmp    DWORD PTR [ebp-0x34],0x0
65017b0d:	jne    0x65017b5d
65017b0f:	test   esi,esi
65017b11:	jle    0x65017b5d
65017b13:	mov    edi,DWORD PTR [ebp-0x1c]
65017b16:	mov    DWORD PTR [ebp-0x28],esi
65017b19:	dec    DWORD PTR [ebp-0x28]
65017b1c:	lea    eax,[ebp-0x58]
65017b1f:	push   eax
65017b20:	mov    eax,DWORD PTR [ebp-0x58]
65017b23:	push   DWORD PTR [eax+0xac]
65017b29:	lea    eax,[ebp-0x70]
65017b2c:	push   edi
65017b2d:	push   eax
65017b2e:	call   0x6501c71e
65017b33:	add    esp,0x10
65017b36:	test   eax,eax
65017b38:	mov    DWORD PTR [ebp-0x7c],eax
65017b3b:	jle    0x65017b57
65017b3d:	push   DWORD PTR [ebp-0x70]
65017b40:	mov    eax,DWORD PTR [ebp-0x48]
65017b43:	lea    esi,[ebp-0x2c]
65017b46:	call   0x65016945
65017b4b:	add    edi,DWORD PTR [ebp-0x7c]
65017b4e:	cmp    DWORD PTR [ebp-0x28],0x0
65017b52:	pop    ecx
65017b53:	jg     0x65017b19
65017b55:	jmp    0x65017b6a
65017b57:	or     DWORD PTR [ebp-0x2c],0xffffffff
65017b5b:	jmp    0x65017b6a
65017b5d:	mov    ecx,DWORD PTR [ebp-0x1c]
65017b60:	push   esi
65017b61:	lea    eax,[ebp-0x2c]
65017b64:	call   0x6501729f
65017b69:	pop    ecx
65017b6a:	cmp    DWORD PTR [ebp-0x2c],0x0
65017b6e:	jl     0x65017b87
65017b70:	test   BYTE PTR [ebp-0x14],0x4
65017b74:	je     0x65017b87
65017b76:	push   DWORD PTR [ebp-0x48]
65017b79:	lea    eax,[ebp-0x2c]
65017b7c:	push   ebx
65017b7d:	push   0x20
65017b7f:	call   0x6501696a
65017b84:	add    esp,0xc
65017b87:	cmp    DWORD PTR [ebp-0x64],0x0
65017b8b:	je     0x65017b9a
65017b8d:	push   DWORD PTR [ebp-0x64]
65017b90:	call   0x65013577
65017b95:	and    DWORD PTR [ebp-0x64],0x0
65017b99:	pop    ecx
65017b9a:	mov    edi,DWORD PTR [ebp-0x6c]
65017b9d:	mov    ebx,DWORD PTR [ebp-0x24]
65017ba0:	movzx  eax,WORD PTR [edi]
65017ba3:	test   ax,ax
65017ba6:	mov    DWORD PTR [ebp-0x28],eax
65017ba9:	je     0x65017bb2
65017bab:	mov    ecx,eax
65017bad:	jmp    0x650173af
65017bb2:	cmp    DWORD PTR [ebp-0x40],0x0
65017bb6:	je     0x65017bc2
65017bb8:	cmp    DWORD PTR [ebp-0x40],0x7
65017bbc:	jne    0x6501734d
65017bc2:	cmp    BYTE PTR [ebp-0x4c],0x0
65017bc6:	je     0x65017bcf
65017bc8:	mov    eax,DWORD PTR [ebp-0x50]
65017bcb:	and    DWORD PTR [eax+0x70],0xfffffffd
65017bcf:	mov    eax,DWORD PTR [ebp-0x2c]
65017bd2:	mov    ecx,DWORD PTR [ebp+0x3f0]
65017bd8:	pop    edi
65017bd9:	pop    esi
65017bda:	xor    ecx,ebp
65017bdc:	pop    ebx
65017bdd:	call   0x6501275c
65017be2:	add    ebp,0x3f4
65017be8:	leave  
65017be9:	ret    
65017bea:	mov    dl,0x75
65017bec:	add    DWORD PTR [ebp+0x7],esp
65017bef:	je     0x65017bf2
65017bf1:	gs and al,0x74
65017bf4:	add    DWORD PTR [ebp+0x70],esp
65017bf7:	je     0x65017bfa
65017bf9:	gs stos BYTE PTR es:[edi],al
65017bfb:	je     0x65017bfe
65017bfd:	gs mov bl,0x74
65017c00:	add    DWORD PTR [ebp-0x16],esp
65017c03:	je     0x65017c06
65017c05:	gs retf 
65017c07:	jne    0x65017c0a
65017c09:	gs push ebp
65017c0b:	mov    ebp,esp
65017c0d:	sub    esp,0x10
65017c10:	mov    eax,ds:0x6502c09c
65017c15:	xor    eax,ebp
65017c17:	mov    DWORD PTR [ebp-0x4],eax
65017c1a:	push   ebx
65017c1b:	push   esi
65017c1c:	mov    esi,DWORD PTR ds:0x6502414c
65017c22:	xor    ebx,ebx
65017c24:	cmp    DWORD PTR ds:0x6502d978,ebx
65017c2a:	push   edi
65017c2b:	mov    edi,ecx
65017c2d:	jne    0x65017c65
65017c2f:	push   ebx
65017c30:	push   ebx
65017c31:	push   0x1
65017c33:	push   0x65026610
65017c38:	push   0x100
65017c3d:	push   ebx
65017c3e:	call   esi
65017c40:	test   eax,eax
65017c42:	je     0x65017c50
65017c44:	mov    DWORD PTR ds:0x6502d978,0x1
65017c4e:	jmp    0x65017c65
65017c50:	call   DWORD PTR ds:0x65024044
65017c56:	cmp    eax,0x78
65017c59:	jne    0x65017c65
65017c5b:	mov    DWORD PTR ds:0x6502d978,0x2
65017c65:	cmp    DWORD PTR [ebp+0x14],ebx
65017c68:	jle    0x65017c87
65017c6a:	mov    ecx,DWORD PTR [ebp+0x14]
65017c6d:	mov    eax,DWORD PTR [ebp+0x10]
65017c70:	dec    ecx
65017c71:	cmp    WORD PTR [eax],bx
65017c74:	je     0x65017c7f
65017c76:	inc    eax
65017c77:	inc    eax
65017c78:	cmp    ecx,ebx
65017c7a:	jne    0x65017c70
65017c7c:	or     ecx,0xffffffff
65017c7f:	or     eax,0xffffffff
65017c82:	sub    eax,ecx
65017c84:	add    DWORD PTR [ebp+0x14],eax
65017c87:	mov    eax,ds:0x6502d978
65017c8c:	cmp    eax,0x1
65017c8f:	jne    0x65017caa
65017c91:	push   DWORD PTR [ebp+0x1c]
65017c94:	push   DWORD PTR [ebp+0x18]
65017c97:	push   DWORD PTR [ebp+0x14]
65017c9a:	push   DWORD PTR [ebp+0x10]
65017c9d:	push   DWORD PTR [ebp+0xc]
65017ca0:	push   DWORD PTR [ebp+0x8]
65017ca3:	call   esi
65017ca5:	jmp    0x65017e59
65017caa:	cmp    eax,0x2
65017cad:	je     0x65017cb3
65017caf:	cmp    eax,ebx
65017cb1:	jne    0x65017d05
65017cb3:	cmp    DWORD PTR [ebp+0x8],ebx
65017cb6:	mov    DWORD PTR [ebp-0xc],ebx
65017cb9:	jne    0x65017cc3
65017cbb:	mov    eax,DWORD PTR [edi]
65017cbd:	mov    eax,DWORD PTR [eax+0x14]
65017cc0:	mov    DWORD PTR [ebp+0x8],eax
65017cc3:	cmp    DWORD PTR [ebp+0x20],ebx
65017cc6:	jne    0x65017cd0
65017cc8:	mov    eax,DWORD PTR [edi]
65017cca:	mov    eax,DWORD PTR [eax+0x4]
65017ccd:	mov    DWORD PTR [ebp+0x20],eax
65017cd0:	push   DWORD PTR [ebp+0x8]
65017cd3:	call   0x6501d24f
65017cd8:	cmp    DWORD PTR [ebp+0x20],eax
65017cdb:	pop    ecx
65017cdc:	je     0x65017ce6
65017cde:	cmp    eax,0xffffffff
65017ce1:	je     0x65017ce6
65017ce3:	mov    DWORD PTR [ebp+0x20],eax
65017ce6:	mov    esi,DWORD PTR ds:0x65024028
65017cec:	push   ebx
65017ced:	push   ebx
65017cee:	push   ebx
65017cef:	push   ebx
65017cf0:	push   DWORD PTR [ebp+0x14]
65017cf3:	push   DWORD PTR [ebp+0x10]
65017cf6:	push   ebx
65017cf7:	push   DWORD PTR [ebp+0x20]
65017cfa:	call   esi
65017cfc:	mov    edi,eax
65017cfe:	cmp    edi,ebx
65017d00:	mov    DWORD PTR [ebp-0x10],edi
65017d03:	jne    0x65017d0c
65017d05:	xor    eax,eax
65017d07:	jmp    0x65017e59
65017d0c:	jle    0x65017d50
65017d0e:	push   0xffffffe0
65017d10:	xor    edx,edx
65017d12:	pop    eax
65017d13:	div    edi
65017d15:	cmp    eax,0x1
65017d18:	jb     0x65017d50
65017d1a:	lea    eax,[edi+0x8]
65017d1d:	cmp    eax,0x400
65017d22:	ja     0x65017d37
65017d24:	call   0x65012e60
65017d29:	mov    eax,esp
65017d2b:	cmp    eax,ebx
65017d2d:	je     0x65017d4b
65017d2f:	mov    DWORD PTR [eax],0xcccc
65017d35:	jmp    0x65017d48
65017d37:	push   eax
65017d38:	call   0x65013654
65017d3d:	cmp    eax,ebx
65017d3f:	pop    ecx
65017d40:	je     0x65017d4b
65017d42:	mov    DWORD PTR [eax],0xdddd
65017d48:	add    eax,0x8
65017d4b:	mov    DWORD PTR [ebp-0x8],eax
65017d4e:	jmp    0x65017d53
65017d50:	mov    DWORD PTR [ebp-0x8],ebx
65017d53:	cmp    DWORD PTR [ebp-0x8],ebx
65017d56:	je     0x65017d05
65017d58:	push   ebx
65017d59:	push   ebx
65017d5a:	push   edi
65017d5b:	push   DWORD PTR [ebp-0x8]
65017d5e:	push   DWORD PTR [ebp+0x14]
65017d61:	push   DWORD PTR [ebp+0x10]
65017d64:	push   ebx
65017d65:	push   DWORD PTR [ebp+0x20]
65017d68:	call   esi
65017d6a:	test   eax,eax
65017d6c:	je     0x65017e4d
65017d72:	push   ebx
65017d73:	push   ebx
65017d74:	push   edi
65017d75:	push   DWORD PTR [ebp-0x8]
65017d78:	mov    edi,DWORD PTR ds:0x65024148
65017d7e:	push   DWORD PTR [ebp+0xc]
65017d81:	push   DWORD PTR [ebp+0x8]
65017d84:	call   edi
65017d86:	mov    esi,eax
65017d88:	cmp    esi,ebx
65017d8a:	je     0x65017e4d
65017d90:	jle    0x65017dd1
65017d92:	push   0xffffffe0
65017d94:	xor    edx,edx
65017d96:	pop    eax
65017d97:	div    esi
65017d99:	cmp    eax,0x1
65017d9c:	jb     0x65017dd1
65017d9e:	lea    eax,[esi+0x8]
65017da1:	cmp    eax,0x400
65017da6:	ja     0x65017dbb
65017da8:	call   0x65012e60
65017dad:	mov    eax,esp
65017daf:	cmp    eax,ebx
65017db1:	je     0x65017dcf
65017db3:	mov    DWORD PTR [eax],0xcccc
65017db9:	jmp    0x65017dcc
65017dbb:	push   eax
65017dbc:	call   0x65013654
65017dc1:	cmp    eax,ebx
65017dc3:	pop    ecx
65017dc4:	je     0x65017dcf
65017dc6:	mov    DWORD PTR [eax],0xdddd
65017dcc:	add    eax,0x8
65017dcf:	mov    ebx,eax
65017dd1:	test   ebx,ebx
65017dd3:	je     0x65017e4d
65017dd5:	push   esi
65017dd6:	push   ebx
65017dd7:	push   DWORD PTR [ebp-0x10]
65017dda:	push   DWORD PTR [ebp-0x8]
65017ddd:	push   DWORD PTR [ebp+0xc]
65017de0:	push   DWORD PTR [ebp+0x8]
65017de3:	call   edi
65017de5:	test   eax,eax
65017de7:	je     0x65017e46
65017de9:	test   WORD PTR [ebp+0xc],0x400
65017def:	je     0x65017e25
65017df1:	mov    eax,DWORD PTR [ebp+0x1c]
65017df4:	xor    edi,edi
65017df6:	cmp    eax,edi
65017df8:	mov    DWORD PTR [ebp-0xc],esi
65017dfb:	je     0x65017e46
65017dfd:	cmp    eax,esi
65017dff:	jg     0x65017e04
65017e01:	lea    esi,[eax-0x1]
65017e04:	push   esi
65017e05:	push   ebx
65017e06:	push   eax
65017e07:	push   DWORD PTR [ebp+0x18]
65017e0a:	call   0x6501b926
65017e0f:	add    esp,0x10
65017e12:	test   eax,eax
65017e14:	je     0x65017e46
65017e16:	push   edi
65017e17:	push   edi
65017e18:	push   edi
65017e19:	push   edi
65017e1a:	push   edi
65017e1b:	call   0x65012153
65017e20:	add    esp,0x14
65017e23:	jmp    0x65017e46
65017e25:	xor    eax,eax
65017e27:	cmp    DWORD PTR [ebp+0x1c],eax
65017e2a:	jne    0x65017e30
65017e2c:	push   eax
65017e2d:	push   eax
65017e2e:	jmp    0x65017e36
65017e30:	push   DWORD PTR [ebp+0x1c]
65017e33:	push   DWORD PTR [ebp+0x18]
65017e36:	push   esi
65017e37:	push   ebx
65017e38:	push   0x1
65017e3a:	push   DWORD PTR [ebp+0x20]
65017e3d:	call   DWORD PTR ds:0x65024024
65017e43:	mov    DWORD PTR [ebp-0xc],eax
65017e46:	push   ebx
65017e47:	call   0x65012bf2
65017e4c:	pop    ecx
65017e4d:	push   DWORD PTR [ebp-0x8]
65017e50:	call   0x65012bf2
65017e55:	mov    eax,DWORD PTR [ebp-0xc]
65017e58:	pop    ecx
65017e59:	lea    esp,[ebp-0x1c]
65017e5c:	pop    edi
65017e5d:	pop    esi
65017e5e:	pop    ebx
65017e5f:	mov    ecx,DWORD PTR [ebp-0x4]
65017e62:	xor    ecx,ebp
65017e64:	call   0x6501275c
65017e69:	leave  
65017e6a:	ret    
65017e6b:	push   ebp
65017e6c:	mov    ebp,esp
65017e6e:	sub    esp,0x10
65017e71:	push   DWORD PTR [ebp+0x8]
65017e74:	lea    ecx,[ebp-0x10]
65017e77:	call   0x650128ff
65017e7c:	push   DWORD PTR [ebp+0x24]
65017e7f:	lea    ecx,[ebp-0x10]
65017e82:	push   DWORD PTR [ebp+0x20]
65017e85:	push   DWORD PTR [ebp+0x1c]
65017e88:	push   DWORD PTR [ebp+0x18]
65017e8b:	push   DWORD PTR [ebp+0x14]
65017e8e:	push   DWORD PTR [ebp+0x10]
65017e91:	push   DWORD PTR [ebp+0xc]
65017e94:	call   0x65017c0a
65017e99:	add    esp,0x1c
65017e9c:	cmp    BYTE PTR [ebp-0x4],0x0
65017ea0:	je     0x65017ea9
65017ea2:	mov    ecx,DWORD PTR [ebp-0x8]
65017ea5:	and    DWORD PTR [ecx+0x70],0xfffffffd
65017ea9:	leave  
65017eaa:	ret    
65017eab:	xor    eax,eax
65017ead:	cmp    DWORD PTR [esp+0x8],eax
65017eb1:	jbe    0x65017ec6
65017eb3:	mov    ecx,DWORD PTR [esp+0x4]
65017eb7:	cmp    WORD PTR [ecx],0x0
65017ebb:	je     0x65017ec6
65017ebd:	inc    eax
65017ebe:	inc    ecx
65017ebf:	inc    ecx
65017ec0:	cmp    eax,DWORD PTR [esp+0x8]
65017ec4:	jb     0x65017eb7
65017ec6:	ret    
65017ec7:	push   ebp
65017ec8:	mov    ebp,esp
65017eca:	sub    esp,0x4
65017ecd:	mov    DWORD PTR [ebp-0x4],edi
65017ed0:	mov    edi,DWORD PTR [ebp+0x8]
65017ed3:	mov    ecx,DWORD PTR [ebp+0xc]
65017ed6:	shr    ecx,0x7
65017ed9:	pxor   xmm0,xmm0
65017edd:	jmp    0x65017ee7
65017edf:	lea    esp,[esp+0x0]
65017ee6:	nop
65017ee7:	movdqa XMMWORD PTR [edi],xmm0
65017eeb:	movdqa XMMWORD PTR [edi+0x10],xmm0
65017ef0:	movdqa XMMWORD PTR [edi+0x20],xmm0
65017ef5:	movdqa XMMWORD PTR [edi+0x30],xmm0
65017efa:	movdqa XMMWORD PTR [edi+0x40],xmm0
65017eff:	movdqa XMMWORD PTR [edi+0x50],xmm0
65017f04:	movdqa XMMWORD PTR [edi+0x60],xmm0
65017f09:	movdqa XMMWORD PTR [edi+0x70],xmm0
65017f0e:	lea    edi,[edi+0x80]
65017f14:	dec    ecx
65017f15:	jne    0x65017ee7
65017f17:	mov    edi,DWORD PTR [ebp-0x4]
65017f1a:	mov    esp,ebp
65017f1c:	pop    ebp
65017f1d:	ret    
65017f1e:	push   ebp
65017f1f:	mov    ebp,esp
65017f21:	sub    esp,0x10
65017f24:	mov    DWORD PTR [ebp-0x4],edi
65017f27:	mov    eax,DWORD PTR [ebp+0x8]
65017f2a:	cdq    
65017f2b:	mov    edi,eax
65017f2d:	xor    edi,edx
65017f2f:	sub    edi,edx
65017f31:	and    edi,0xf
65017f34:	xor    edi,edx
65017f36:	sub    edi,edx
65017f38:	test   edi,edi
65017f3a:	jne    0x65017f78
65017f3c:	mov    ecx,DWORD PTR [ebp+0x10]
65017f3f:	mov    edx,ecx
65017f41:	and    edx,0x7f
65017f44:	mov    DWORD PTR [ebp-0xc],edx
65017f47:	cmp    ecx,edx
65017f49:	je     0x65017f5d
65017f4b:	sub    ecx,edx
65017f4d:	push   ecx
65017f4e:	push   eax
65017f4f:	call   0x65017ec7
65017f54:	add    esp,0x8
65017f57:	mov    eax,DWORD PTR [ebp+0x8]
65017f5a:	mov    edx,DWORD PTR [ebp-0xc]
65017f5d:	test   edx,edx
65017f5f:	je     0x65017fa6
65017f61:	add    eax,DWORD PTR [ebp+0x10]
65017f64:	sub    eax,edx
65017f66:	mov    DWORD PTR [ebp-0x8],eax
65017f69:	xor    eax,eax
65017f6b:	mov    edi,DWORD PTR [ebp-0x8]
65017f6e:	mov    ecx,DWORD PTR [ebp-0xc]
65017f71:	rep stos BYTE PTR es:[edi],al
65017f73:	mov    eax,DWORD PTR [ebp+0x8]
65017f76:	jmp    0x65017fa6
65017f78:	neg    edi
65017f7a:	add    edi,0x10
65017f7d:	mov    DWORD PTR [ebp-0x10],edi
65017f80:	xor    eax,eax
65017f82:	mov    edi,DWORD PTR [ebp+0x8]
65017f85:	mov    ecx,DWORD PTR [ebp-0x10]
65017f88:	rep stos BYTE PTR es:[edi],al
65017f8a:	mov    eax,DWORD PTR [ebp-0x10]
65017f8d:	mov    ecx,DWORD PTR [ebp+0x8]
65017f90:	mov    edx,DWORD PTR [ebp+0x10]
65017f93:	add    ecx,eax
65017f95:	sub    edx,eax
65017f97:	push   edx
65017f98:	push   0x0
65017f9a:	push   ecx
65017f9b:	call   0x65017f1e
65017fa0:	add    esp,0xc
65017fa3:	mov    eax,DWORD PTR [ebp+0x8]
65017fa6:	mov    edi,DWORD PTR [ebp-0x4]
65017fa9:	mov    esp,ebp
65017fab:	pop    ebp
65017fac:	ret    
65017fad:	and    DWORD PTR ds:0x65031560,0x0
65017fb4:	call   0x6501d498
65017fb9:	mov    ds:0x65031560,eax
65017fbe:	xor    eax,eax
65017fc0:	ret    
65017fc1:	int3   
65017fc2:	int3   
65017fc3:	int3   
65017fc4:	int3   
65017fc5:	int3   
65017fc6:	int3   
65017fc7:	int3   
65017fc8:	int3   
65017fc9:	int3   
65017fca:	int3   
65017fcb:	int3   
65017fcc:	int3   
65017fcd:	int3   
65017fce:	int3   
65017fcf:	int3   
65017fd0:	push   ecx
65017fd1:	lea    ecx,[esp+0x4]
65017fd5:	sub    ecx,eax
65017fd7:	sbb    eax,eax
65017fd9:	not    eax
65017fdb:	and    ecx,eax
65017fdd:	mov    eax,esp
65017fdf:	and    eax,0xfffff000
65017fe4:	cmp    ecx,eax
65017fe6:	jb     0x65017ff2
65017fe8:	mov    eax,ecx
65017fea:	pop    ecx
65017feb:	xchg   esp,eax
65017fec:	mov    eax,DWORD PTR [eax]
65017fee:	mov    DWORD PTR [esp],eax
65017ff1:	ret    
65017ff2:	sub    eax,0x1000
65017ff7:	test   DWORD PTR [eax],eax
65017ff9:	jmp    0x65017fe4
65017ffb:	int3   
65017ffc:	int3   
65017ffd:	push   0x54
65017fff:	push   0x65029b30
65018004:	call   0x65013ca0
65018009:	xor    edi,edi
6501800b:	mov    DWORD PTR [ebp-0x4],edi
6501800e:	lea    eax,[ebp-0x64]
65018011:	push   eax
65018012:	call   DWORD PTR ds:0x6502415c
65018018:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501801f:	push   0x40
65018021:	push   0x20
65018023:	pop    esi
65018024:	push   esi
65018025:	call   0x650159f0
6501802a:	pop    ecx
6501802b:	pop    ecx
6501802c:	cmp    eax,edi
6501802e:	je     0x65018248
65018034:	mov    ds:0x65031460,eax
65018039:	mov    DWORD PTR ds:0x65031440,esi
6501803f:	lea    ecx,[eax+0x800]
65018045:	jmp    0x65018077
65018047:	mov    BYTE PTR [eax+0x4],0x0
6501804b:	or     DWORD PTR [eax],0xffffffff
6501804e:	mov    BYTE PTR [eax+0x5],0xa
65018052:	mov    DWORD PTR [eax+0x8],edi
65018055:	mov    BYTE PTR [eax+0x24],0x0
65018059:	mov    BYTE PTR [eax+0x25],0xa
6501805d:	mov    BYTE PTR [eax+0x26],0xa
65018061:	mov    DWORD PTR [eax+0x38],edi
65018064:	mov    BYTE PTR [eax+0x34],0x0
65018068:	add    eax,0x40
6501806b:	mov    ecx,DWORD PTR ds:0x65031460
65018071:	add    ecx,0x800
65018077:	cmp    eax,ecx
65018079:	jb     0x65018047
6501807b:	cmp    WORD PTR [ebp-0x32],di
6501807f:	je     0x6501818f
65018085:	mov    eax,DWORD PTR [ebp-0x30]
65018088:	cmp    eax,edi
6501808a:	je     0x6501818f
65018090:	mov    edi,DWORD PTR [eax]
65018092:	lea    ebx,[eax+0x4]
65018095:	lea    eax,[ebx+edi*1]
65018098:	mov    DWORD PTR [ebp-0x1c],eax
6501809b:	mov    esi,0x800
650180a0:	cmp    edi,esi
650180a2:	jl     0x650180a6
650180a4:	mov    edi,esi
650180a6:	mov    DWORD PTR [ebp-0x20],0x1
650180ad:	jmp    0x6501810a
650180af:	push   0x40
650180b1:	push   0x20
650180b3:	call   0x650159f0
650180b8:	pop    ecx
650180b9:	pop    ecx
650180ba:	test   eax,eax
650180bc:	je     0x65018114
650180be:	mov    ecx,DWORD PTR [ebp-0x20]
650180c1:	lea    ecx,[ecx*4+0x65031460]
650180c8:	mov    DWORD PTR [ecx],eax
650180ca:	add    DWORD PTR ds:0x65031440,0x20
650180d1:	lea    edx,[eax+0x800]
650180d7:	jmp    0x65018103
650180d9:	mov    BYTE PTR [eax+0x4],0x0
650180dd:	or     DWORD PTR [eax],0xffffffff
650180e0:	mov    BYTE PTR [eax+0x5],0xa
650180e4:	and    DWORD PTR [eax+0x8],0x0
650180e8:	and    BYTE PTR [eax+0x24],0x80
650180ec:	mov    BYTE PTR [eax+0x25],0xa
650180f0:	mov    BYTE PTR [eax+0x26],0xa
650180f4:	and    DWORD PTR [eax+0x38],0x0
650180f8:	mov    BYTE PTR [eax+0x34],0x0
650180fc:	add    eax,0x40
650180ff:	mov    edx,DWORD PTR [ecx]
65018101:	add    edx,esi
65018103:	cmp    eax,edx
65018105:	jb     0x650180d9
65018107:	inc    DWORD PTR [ebp-0x20]
6501810a:	cmp    DWORD PTR ds:0x65031440,edi
65018110:	jl     0x650180af
65018112:	jmp    0x6501811a
65018114:	mov    edi,DWORD PTR ds:0x65031440
6501811a:	and    DWORD PTR [ebp-0x20],0x0
6501811e:	test   edi,edi
65018120:	jle    0x6501818f
65018122:	mov    eax,DWORD PTR [ebp-0x1c]
65018125:	mov    ecx,DWORD PTR [eax]
65018127:	cmp    ecx,0xffffffff
6501812a:	je     0x65018182
6501812c:	cmp    ecx,0xfffffffe
6501812f:	je     0x65018182
65018131:	mov    al,BYTE PTR [ebx]
65018133:	test   al,0x1
65018135:	je     0x65018182
65018137:	test   al,0x8
65018139:	jne    0x65018146
6501813b:	push   ecx
6501813c:	call   DWORD PTR ds:0x65024158
65018142:	test   eax,eax
65018144:	je     0x65018182
65018146:	mov    esi,DWORD PTR [ebp-0x20]
65018149:	mov    eax,esi
6501814b:	sar    eax,0x5
6501814e:	and    esi,0x1f
65018151:	shl    esi,0x6
65018154:	add    esi,DWORD PTR [eax*4+0x65031460]
6501815b:	mov    eax,DWORD PTR [ebp-0x1c]
6501815e:	mov    eax,DWORD PTR [eax]
65018160:	mov    DWORD PTR [esi],eax
65018162:	mov    al,BYTE PTR [ebx]
65018164:	mov    BYTE PTR [esi+0x4],al
65018167:	push   0xfa0
6501816c:	lea    eax,[esi+0xc]
6501816f:	push   eax
65018170:	call   0x6501b358
65018175:	pop    ecx
65018176:	pop    ecx
65018177:	test   eax,eax
65018179:	je     0x65018248
6501817f:	inc    DWORD PTR [esi+0x8]
65018182:	inc    DWORD PTR [ebp-0x20]
65018185:	inc    ebx
65018186:	add    DWORD PTR [ebp-0x1c],0x4
6501818a:	cmp    DWORD PTR [ebp-0x20],edi
6501818d:	jl     0x65018122
6501818f:	xor    ebx,ebx
65018191:	mov    esi,ebx
65018193:	shl    esi,0x6
65018196:	add    esi,DWORD PTR ds:0x65031460
6501819c:	mov    eax,DWORD PTR [esi]
6501819e:	cmp    eax,0xffffffff
650181a1:	je     0x650181ae
650181a3:	cmp    eax,0xfffffffe
650181a6:	je     0x650181ae
650181a8:	or     BYTE PTR [esi+0x4],0x80
650181ac:	jmp    0x65018220
650181ae:	mov    BYTE PTR [esi+0x4],0x81
650181b2:	test   ebx,ebx
650181b4:	jne    0x650181bb
650181b6:	push   0xfffffff6
650181b8:	pop    eax
650181b9:	jmp    0x650181c5
650181bb:	mov    eax,ebx
650181bd:	dec    eax
650181be:	neg    eax
650181c0:	sbb    eax,eax
650181c2:	add    eax,0xfffffff5
650181c5:	push   eax
650181c6:	call   DWORD PTR ds:0x65024154
650181cc:	mov    edi,eax
650181ce:	cmp    edi,0xffffffff
650181d1:	je     0x65018216
650181d3:	test   edi,edi
650181d5:	je     0x65018216
650181d7:	push   edi
650181d8:	call   DWORD PTR ds:0x65024158
650181de:	test   eax,eax
650181e0:	je     0x65018216
650181e2:	mov    DWORD PTR [esi],edi
650181e4:	and    eax,0xff
650181e9:	cmp    eax,0x2
650181ec:	jne    0x650181f4
650181ee:	or     BYTE PTR [esi+0x4],0x40
650181f2:	jmp    0x650181fd
650181f4:	cmp    eax,0x3
650181f7:	jne    0x650181fd
650181f9:	or     BYTE PTR [esi+0x4],0x8
650181fd:	push   0xfa0
65018202:	lea    eax,[esi+0xc]
65018205:	push   eax
65018206:	call   0x6501b358
6501820b:	pop    ecx
6501820c:	pop    ecx
6501820d:	test   eax,eax
6501820f:	je     0x65018248
65018211:	inc    DWORD PTR [esi+0x8]
65018214:	jmp    0x65018220
65018216:	or     BYTE PTR [esi+0x4],0x40
6501821a:	mov    DWORD PTR [esi],0xfffffffe
65018220:	inc    ebx
65018221:	cmp    ebx,0x3
65018224:	jl     0x65018191
6501822a:	push   DWORD PTR ds:0x65031440
65018230:	call   DWORD PTR ds:0x65024150
65018236:	xor    eax,eax
65018238:	jmp    0x6501824b
6501823a:	xor    eax,eax
6501823c:	inc    eax
6501823d:	ret    
6501823e:	mov    esp,DWORD PTR [ebp-0x18]
65018241:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65018248:	or     eax,0xffffffff
6501824b:	call   0x65013ce5
65018250:	ret    
65018251:	push   esi
65018252:	push   edi
65018253:	mov    esi,0x65031460
65018258:	mov    edi,DWORD PTR [esi]
6501825a:	test   edi,edi
6501825c:	je     0x6501828f
6501825e:	lea    eax,[edi+0x800]
65018264:	jmp    0x65018280
65018266:	cmp    DWORD PTR [edi+0x8],0x0
6501826a:	je     0x65018276
6501826c:	lea    eax,[edi+0xc]
6501826f:	push   eax
65018270:	call   DWORD PTR ds:0x650240a4
65018276:	mov    eax,DWORD PTR [esi]
65018278:	add    edi,0x40
6501827b:	add    eax,0x800
65018280:	cmp    edi,eax
65018282:	jb     0x65018266
65018284:	push   DWORD PTR [esi]
65018286:	call   0x65013577
6501828b:	and    DWORD PTR [esi],0x0
6501828e:	pop    ecx
6501828f:	add    esi,0x4
65018292:	cmp    esi,0x65031560
65018298:	jl     0x65018258
6501829a:	pop    edi
6501829b:	pop    esi
6501829c:	ret    
6501829d:	push   ebx
6501829e:	xor    ebx,ebx
650182a0:	cmp    DWORD PTR ds:0x65031574,ebx
650182a6:	push   esi
650182a7:	push   edi
650182a8:	jne    0x650182af
650182aa:	call   0x650164c1
650182af:	mov    esi,DWORD PTR ds:0x6502d594
650182b5:	xor    edi,edi
650182b7:	cmp    esi,ebx
650182b9:	jne    0x650182d3
650182bb:	or     eax,0xffffffff
650182be:	jmp    0x6501835e
650182c3:	cmp    al,0x3d
650182c5:	je     0x650182c8
650182c7:	inc    edi
650182c8:	push   esi
650182c9:	call   0x65013ea0
650182ce:	pop    ecx
650182cf:	lea    esi,[esi+eax*1+0x1]
650182d3:	mov    al,BYTE PTR [esi]
650182d5:	cmp    al,bl
650182d7:	jne    0x650182c3
650182d9:	push   0x4
650182db:	inc    edi
650182dc:	push   edi
650182dd:	call   0x650159f0
650182e2:	mov    edi,eax
650182e4:	cmp    edi,ebx
650182e6:	pop    ecx
650182e7:	pop    ecx
650182e8:	mov    DWORD PTR ds:0x6502d914,edi
650182ee:	je     0x650182bb
650182f0:	mov    esi,DWORD PTR ds:0x6502d594
650182f6:	push   ebp
650182f7:	jmp    0x65018339
650182f9:	push   esi
650182fa:	call   0x65013ea0
650182ff:	mov    ebp,eax
65018301:	inc    ebp
65018302:	cmp    BYTE PTR [esi],0x3d
65018305:	pop    ecx
65018306:	je     0x65018337
65018308:	push   0x1
6501830a:	push   ebp
6501830b:	call   0x650159f0
65018310:	cmp    eax,ebx
65018312:	pop    ecx
65018313:	pop    ecx
65018314:	mov    DWORD PTR [edi],eax
65018316:	je     0x65018362
65018318:	push   esi
65018319:	push   ebp
6501831a:	push   eax
6501831b:	call   0x65013f94
65018320:	add    esp,0xc
65018323:	test   eax,eax
65018325:	je     0x65018334
65018327:	push   ebx
65018328:	push   ebx
65018329:	push   ebx
6501832a:	push   ebx
6501832b:	push   ebx
6501832c:	call   0x65012153
65018331:	add    esp,0x14
65018334:	add    edi,0x4
65018337:	add    esi,ebp
65018339:	cmp    BYTE PTR [esi],bl
6501833b:	jne    0x650182f9
6501833d:	push   DWORD PTR ds:0x6502d594
65018343:	call   0x65013577
65018348:	mov    DWORD PTR ds:0x6502d594,ebx
6501834e:	mov    DWORD PTR [edi],ebx
65018350:	mov    DWORD PTR ds:0x65031568,0x1
6501835a:	xor    eax,eax
6501835c:	pop    ecx
6501835d:	pop    ebp
6501835e:	pop    edi
6501835f:	pop    esi
65018360:	pop    ebx
65018361:	ret    
65018362:	push   DWORD PTR ds:0x6502d914
65018368:	call   0x65013577
6501836d:	mov    DWORD PTR ds:0x6502d914,ebx
65018373:	or     eax,0xffffffff
65018376:	jmp    0x6501835c
65018378:	push   ebp
65018379:	mov    ebp,esp
6501837b:	push   ecx
6501837c:	mov    ecx,DWORD PTR [ebp+0x10]
6501837f:	push   ebx
65018380:	xor    eax,eax
65018382:	cmp    DWORD PTR [ebp+0x8],eax
65018385:	push   esi
65018386:	mov    DWORD PTR [edi],eax
65018388:	mov    esi,edx
6501838a:	mov    edx,DWORD PTR [ebp+0xc]
6501838d:	mov    DWORD PTR [ecx],0x1
65018393:	je     0x6501839e
65018395:	mov    ebx,DWORD PTR [ebp+0x8]
65018398:	add    DWORD PTR [ebp+0x8],0x4
6501839c:	mov    DWORD PTR [ebx],edx
6501839e:	mov    DWORD PTR [ebp-0x4],eax
650183a1:	cmp    BYTE PTR [esi],0x22
650183a4:	jne    0x650183b6
650183a6:	xor    eax,eax
650183a8:	cmp    DWORD PTR [ebp-0x4],eax
650183ab:	mov    bl,0x22
650183ad:	sete   al
650183b0:	inc    esi
650183b1:	mov    DWORD PTR [ebp-0x4],eax
650183b4:	jmp    0x650183f2
650183b6:	inc    DWORD PTR [edi]
650183b8:	test   edx,edx
650183ba:	je     0x650183c4
650183bc:	mov    al,BYTE PTR [esi]
650183be:	mov    BYTE PTR [edx],al
650183c0:	inc    edx
650183c1:	mov    DWORD PTR [ebp+0xc],edx
650183c4:	mov    bl,BYTE PTR [esi]
650183c6:	movzx  eax,bl
650183c9:	push   eax
650183ca:	inc    esi
650183cb:	call   0x6501d556
650183d0:	test   eax,eax
650183d2:	pop    ecx
650183d3:	je     0x650183e8
650183d5:	inc    DWORD PTR [edi]
650183d7:	cmp    DWORD PTR [ebp+0xc],0x0
650183db:	je     0x650183e7
650183dd:	mov    ecx,DWORD PTR [ebp+0xc]
650183e0:	mov    al,BYTE PTR [esi]
650183e2:	inc    DWORD PTR [ebp+0xc]
650183e5:	mov    BYTE PTR [ecx],al
650183e7:	inc    esi
650183e8:	test   bl,bl
650183ea:	mov    edx,DWORD PTR [ebp+0xc]
650183ed:	mov    ecx,DWORD PTR [ebp+0x10]
650183f0:	je     0x65018424
650183f2:	cmp    DWORD PTR [ebp-0x4],0x0
650183f6:	jne    0x650183a1
650183f8:	cmp    bl,0x20
650183fb:	je     0x65018402
650183fd:	cmp    bl,0x9
65018400:	jne    0x650183a1
65018402:	test   edx,edx
65018404:	je     0x6501840a
65018406:	mov    BYTE PTR [edx-0x1],0x0
6501840a:	and    DWORD PTR [ebp-0x4],0x0
6501840e:	cmp    BYTE PTR [esi],0x0
65018411:	je     0x65018500
65018417:	mov    al,BYTE PTR [esi]
65018419:	cmp    al,0x20
6501841b:	je     0x65018421
6501841d:	cmp    al,0x9
6501841f:	jne    0x65018427
65018421:	inc    esi
65018422:	jmp    0x65018417
65018424:	dec    esi
65018425:	jmp    0x6501840a
65018427:	cmp    BYTE PTR [esi],0x0
6501842a:	je     0x65018500
65018430:	cmp    DWORD PTR [ebp+0x8],0x0
65018434:	je     0x6501843f
65018436:	mov    eax,DWORD PTR [ebp+0x8]
65018439:	add    DWORD PTR [ebp+0x8],0x4
6501843d:	mov    DWORD PTR [eax],edx
6501843f:	inc    DWORD PTR [ecx]
65018441:	xor    ebx,ebx
65018443:	inc    ebx
65018444:	xor    ecx,ecx
65018446:	jmp    0x6501844a
65018448:	inc    esi
65018449:	inc    ecx
6501844a:	cmp    BYTE PTR [esi],0x5c
6501844d:	je     0x65018448
6501844f:	cmp    BYTE PTR [esi],0x22
65018452:	jne    0x6501847a
65018454:	test   cl,0x1
65018457:	jne    0x65018478
65018459:	cmp    DWORD PTR [ebp-0x4],0x0
6501845d:	je     0x6501846b
6501845f:	lea    eax,[esi+0x1]
65018462:	cmp    BYTE PTR [eax],0x22
65018465:	jne    0x6501846b
65018467:	mov    esi,eax
65018469:	jmp    0x65018478
6501846b:	xor    eax,eax
6501846d:	xor    ebx,ebx
6501846f:	cmp    DWORD PTR [ebp-0x4],eax
65018472:	sete   al
65018475:	mov    DWORD PTR [ebp-0x4],eax
65018478:	shr    ecx,1
6501847a:	test   ecx,ecx
6501847c:	je     0x65018490
6501847e:	dec    ecx
6501847f:	test   edx,edx
65018481:	je     0x65018487
65018483:	mov    BYTE PTR [edx],0x5c
65018486:	inc    edx
65018487:	inc    DWORD PTR [edi]
65018489:	test   ecx,ecx
6501848b:	jne    0x6501847e
6501848d:	mov    DWORD PTR [ebp+0xc],edx
65018490:	mov    al,BYTE PTR [esi]
65018492:	test   al,al
65018494:	je     0x650184eb
65018496:	cmp    DWORD PTR [ebp-0x4],0x0
6501849a:	jne    0x650184a4
6501849c:	cmp    al,0x20
6501849e:	je     0x650184eb
650184a0:	cmp    al,0x9
650184a2:	je     0x650184eb
650184a4:	test   ebx,ebx
650184a6:	je     0x650184e5
650184a8:	test   edx,edx
650184aa:	movsx  eax,al
650184ad:	push   eax
650184ae:	je     0x650184d3
650184b0:	call   0x6501d556
650184b5:	test   eax,eax
650184b7:	pop    ecx
650184b8:	je     0x650184c7
650184ba:	mov    al,BYTE PTR [esi]
650184bc:	mov    ecx,DWORD PTR [ebp+0xc]
650184bf:	inc    DWORD PTR [ebp+0xc]
650184c2:	mov    BYTE PTR [ecx],al
650184c4:	inc    esi
650184c5:	inc    DWORD PTR [edi]
650184c7:	mov    ecx,DWORD PTR [ebp+0xc]
650184ca:	mov    al,BYTE PTR [esi]
650184cc:	inc    DWORD PTR [ebp+0xc]
650184cf:	mov    BYTE PTR [ecx],al
650184d1:	jmp    0x650184e0
650184d3:	call   0x6501d556
650184d8:	test   eax,eax
650184da:	pop    ecx
650184db:	je     0x650184e0
650184dd:	inc    esi
650184de:	inc    DWORD PTR [edi]
650184e0:	inc    DWORD PTR [edi]
650184e2:	mov    edx,DWORD PTR [ebp+0xc]
650184e5:	inc    esi
650184e6:	jmp    0x65018441
650184eb:	test   edx,edx
650184ed:	je     0x650184f6
650184ef:	mov    BYTE PTR [edx],0x0
650184f2:	inc    edx
650184f3:	mov    DWORD PTR [ebp+0xc],edx
650184f6:	inc    DWORD PTR [edi]
650184f8:	mov    ecx,DWORD PTR [ebp+0x10]
650184fb:	jmp    0x6501840e
65018500:	mov    eax,DWORD PTR [ebp+0x8]
65018503:	test   eax,eax
65018505:	pop    esi
65018506:	pop    ebx
65018507:	je     0x6501850c
65018509:	and    DWORD PTR [eax],0x0
6501850c:	inc    DWORD PTR [ecx]
6501850e:	leave  
6501850f:	ret    
65018510:	push   ebp
65018511:	mov    ebp,esp
65018513:	sub    esp,0xc
65018516:	push   ebx
65018517:	xor    ebx,ebx
65018519:	cmp    DWORD PTR ds:0x65031574,ebx
6501851f:	push   esi
65018520:	push   edi
65018521:	jne    0x65018528
65018523:	call   0x650164c1
65018528:	push   0x104
6501852d:	mov    esi,0x6502d980
65018532:	push   esi
65018533:	push   ebx
65018534:	mov    BYTE PTR ds:0x6502da84,bl
6501853a:	call   DWORD PTR ds:0x65024160
65018540:	mov    eax,ds:0x65031580
65018545:	cmp    eax,ebx
65018547:	mov    DWORD PTR ds:0x6502d924,esi
6501854d:	je     0x65018556
6501854f:	cmp    BYTE PTR [eax],bl
65018551:	mov    DWORD PTR [ebp-0x4],eax
65018554:	jne    0x65018559
65018556:	mov    DWORD PTR [ebp-0x4],esi
65018559:	mov    edx,DWORD PTR [ebp-0x4]
6501855c:	lea    eax,[ebp-0x8]
6501855f:	push   eax
65018560:	push   ebx
65018561:	push   ebx
65018562:	lea    edi,[ebp-0xc]
65018565:	call   0x65018378
6501856a:	mov    eax,DWORD PTR [ebp-0x8]
6501856d:	add    esp,0xc
65018570:	cmp    eax,0x3fffffff
65018575:	jae    0x650185c1
65018577:	mov    ecx,DWORD PTR [ebp-0xc]
6501857a:	cmp    ecx,0xffffffff
6501857d:	jae    0x650185c1
6501857f:	mov    edi,eax
65018581:	shl    edi,0x2
65018584:	lea    eax,[edi+ecx*1]
65018587:	cmp    eax,ecx
65018589:	jb     0x650185c1
6501858b:	push   eax
6501858c:	call   0x650159b0
65018591:	mov    esi,eax
65018593:	cmp    esi,ebx
65018595:	pop    ecx
65018596:	je     0x650185c1
65018598:	mov    edx,DWORD PTR [ebp-0x4]
6501859b:	lea    eax,[ebp-0x8]
6501859e:	push   eax
6501859f:	add    edi,esi
650185a1:	push   edi
650185a2:	push   esi
650185a3:	lea    edi,[ebp-0xc]
650185a6:	call   0x65018378
650185ab:	mov    eax,DWORD PTR [ebp-0x8]
650185ae:	add    esp,0xc
650185b1:	dec    eax
650185b2:	mov    ds:0x6502d908,eax
650185b7:	mov    DWORD PTR ds:0x6502d90c,esi
650185bd:	xor    eax,eax
650185bf:	jmp    0x650185c4
650185c1:	or     eax,0xffffffff
650185c4:	pop    edi
650185c5:	pop    esi
650185c6:	pop    ebx
650185c7:	leave  
650185c8:	ret    
650185c9:	push   ecx
650185ca:	push   ecx
650185cb:	mov    eax,ds:0x6502da88
650185d0:	push   ebx
650185d1:	push   ebp
650185d2:	push   esi
650185d3:	push   edi
650185d4:	mov    edi,DWORD PTR ds:0x65024084
650185da:	xor    ebx,ebx
650185dc:	xor    esi,esi
650185de:	cmp    eax,ebx
650185e0:	push   0x2
650185e2:	pop    ebp
650185e3:	jne    0x65018612
650185e5:	call   edi
650185e7:	mov    esi,eax
650185e9:	cmp    esi,ebx
650185eb:	je     0x650185f9
650185ed:	mov    DWORD PTR ds:0x6502da88,0x1
650185f7:	jmp    0x6501861b
650185f9:	call   DWORD PTR ds:0x65024044
650185ff:	cmp    eax,0x78
65018602:	jne    0x6501860d
65018604:	mov    eax,ebp
65018606:	mov    ds:0x6502da88,eax
6501860b:	jmp    0x65018612
6501860d:	mov    eax,ds:0x6502da88
65018612:	cmp    eax,0x1
65018615:	jne    0x6501869f
6501861b:	cmp    esi,ebx
6501861d:	jne    0x6501862e
6501861f:	call   edi
65018621:	mov    esi,eax
65018623:	cmp    esi,ebx
65018625:	jne    0x6501862e
65018627:	xor    eax,eax
65018629:	jmp    0x650186f7
6501862e:	cmp    WORD PTR [esi],bx
65018631:	mov    eax,esi
65018633:	je     0x65018643
65018635:	add    eax,ebp
65018637:	cmp    WORD PTR [eax],bx
6501863a:	jne    0x65018635
6501863c:	add    eax,ebp
6501863e:	cmp    WORD PTR [eax],bx
65018641:	jne    0x65018635
65018643:	mov    edi,DWORD PTR ds:0x65024028
65018649:	push   ebx
6501864a:	push   ebx
6501864b:	push   ebx
6501864c:	sub    eax,esi
6501864e:	push   ebx
6501864f:	sar    eax,1
65018651:	inc    eax
65018652:	push   eax
65018653:	push   esi
65018654:	push   ebx
65018655:	push   ebx
65018656:	mov    DWORD PTR [esp+0x34],eax
6501865a:	call   edi
6501865c:	mov    ebp,eax
6501865e:	cmp    ebp,ebx
65018660:	je     0x65018694
65018662:	push   ebp
65018663:	call   0x650159b0
65018668:	cmp    eax,ebx
6501866a:	pop    ecx
6501866b:	mov    DWORD PTR [esp+0x10],eax
6501866f:	je     0x65018694
65018671:	push   ebx
65018672:	push   ebx
65018673:	push   ebp
65018674:	push   eax
65018675:	push   DWORD PTR [esp+0x24]
65018679:	push   esi
6501867a:	push   ebx
6501867b:	push   ebx
6501867c:	call   edi
6501867e:	test   eax,eax
65018680:	jne    0x65018690
65018682:	push   DWORD PTR [esp+0x10]
65018686:	call   0x65013577
6501868b:	pop    ecx
6501868c:	mov    DWORD PTR [esp+0x10],ebx
65018690:	mov    ebx,DWORD PTR [esp+0x10]
65018694:	push   esi
65018695:	call   DWORD PTR ds:0x6502416c
6501869b:	mov    eax,ebx
6501869d:	jmp    0x650186f7
6501869f:	cmp    eax,ebp
650186a1:	je     0x650186a7
650186a3:	cmp    eax,ebx
650186a5:	jne    0x65018627
650186a7:	call   DWORD PTR ds:0x65024168
650186ad:	mov    esi,eax
650186af:	cmp    esi,ebx
650186b1:	je     0x65018627
650186b7:	cmp    BYTE PTR [esi],bl
650186b9:	je     0x650186c5
650186bb:	inc    eax
650186bc:	cmp    BYTE PTR [eax],bl
650186be:	jne    0x650186bb
650186c0:	inc    eax
650186c1:	cmp    BYTE PTR [eax],bl
650186c3:	jne    0x650186bb
650186c5:	sub    eax,esi
650186c7:	inc    eax
650186c8:	mov    ebp,eax
650186ca:	push   ebp
650186cb:	call   0x650159b0
650186d0:	mov    edi,eax
650186d2:	cmp    edi,ebx
650186d4:	pop    ecx
650186d5:	jne    0x650186e3
650186d7:	push   esi
650186d8:	call   DWORD PTR ds:0x65024164
650186de:	jmp    0x65018627
650186e3:	push   ebp
650186e4:	push   esi
650186e5:	push   edi
650186e6:	call   0x65014000
650186eb:	add    esp,0xc
650186ee:	push   esi
650186ef:	call   DWORD PTR ds:0x65024164
650186f5:	mov    eax,edi
650186f7:	pop    edi
650186f8:	pop    esi
650186f9:	pop    ebp
650186fa:	pop    ebx
650186fb:	pop    ecx
650186fc:	pop    ecx
650186fd:	ret    
650186fe:	push   esi
650186ff:	push   edi
65018700:	mov    eax,0x65029310
65018705:	mov    edi,0x65029310
6501870a:	cmp    eax,edi
6501870c:	mov    esi,eax
6501870e:	jae    0x6501871f
65018710:	mov    eax,DWORD PTR [esi]
65018712:	test   eax,eax
65018714:	je     0x65018718
65018716:	call   eax
65018718:	add    esi,0x4
6501871b:	cmp    esi,edi
6501871d:	jb     0x65018710
6501871f:	pop    edi
65018720:	pop    esi
65018721:	ret    
65018722:	push   esi
65018723:	push   edi
65018724:	mov    eax,0x65029318
65018729:	mov    edi,0x65029318
6501872e:	cmp    eax,edi
65018730:	mov    esi,eax
65018732:	jae    0x65018743
65018734:	mov    eax,DWORD PTR [esi]
65018736:	test   eax,eax
65018738:	je     0x6501873c
6501873a:	call   eax
6501873c:	add    esi,0x4
6501873f:	cmp    esi,edi
65018741:	jb     0x65018734
65018743:	pop    edi
65018744:	pop    esi
65018745:	ret    
65018746:	push   ebp
65018747:	mov    ebp,esp
65018749:	push   ecx
6501874a:	push   ecx
6501874b:	push   esi
6501874c:	lea    eax,[ebp-0x4]
6501874f:	xor    esi,esi
65018751:	push   eax
65018752:	mov    DWORD PTR [ebp-0x4],esi
65018755:	mov    DWORD PTR [ebp-0x8],esi
65018758:	call   0x65015bcf
6501875d:	test   eax,eax
6501875f:	pop    ecx
65018760:	je     0x6501876f
65018762:	push   esi
65018763:	push   esi
65018764:	push   esi
65018765:	push   esi
65018766:	push   esi
65018767:	call   0x65012153
6501876c:	add    esp,0x14
6501876f:	lea    eax,[ebp-0x8]
65018772:	push   eax
65018773:	call   0x65015c06
65018778:	test   eax,eax
6501877a:	pop    ecx
6501877b:	je     0x6501878a
6501877d:	push   esi
6501877e:	push   esi
6501877f:	push   esi
65018780:	push   esi
65018781:	push   esi
65018782:	call   0x65012153
65018787:	add    esp,0x14
6501878a:	cmp    DWORD PTR [ebp-0x4],0x2
6501878e:	pop    esi
6501878f:	jne    0x6501879c
65018791:	cmp    DWORD PTR [ebp-0x8],0x5
65018795:	jb     0x6501879c
65018797:	xor    eax,eax
65018799:	inc    eax
6501879a:	leave  
6501879b:	ret    
6501879c:	push   0x3
6501879e:	pop    eax
6501879f:	leave  
650187a0:	ret    
650187a1:	xor    eax,eax
650187a3:	cmp    DWORD PTR [esp+0x4],eax
650187a7:	push   0x0
650187a9:	sete   al
650187ac:	push   0x1000
650187b1:	push   eax
650187b2:	call   DWORD PTR ds:0x65024170
650187b8:	test   eax,eax
650187ba:	mov    ds:0x6502da8c,eax
650187bf:	jne    0x650187c4
650187c1:	xor    eax,eax
650187c3:	ret    
650187c4:	call   0x65018746
650187c9:	cmp    eax,0x3
650187cc:	mov    ds:0x6503143c,eax
650187d1:	jne    0x650187f7
650187d3:	push   0x3f8
650187d8:	call   0x65019cc9
650187dd:	test   eax,eax
650187df:	pop    ecx
650187e0:	jne    0x650187f7
650187e2:	push   DWORD PTR ds:0x6502da8c
650187e8:	call   DWORD PTR ds:0x650240f0
650187ee:	and    DWORD PTR ds:0x6502da8c,0x0
650187f5:	jmp    0x650187c1
650187f7:	xor    eax,eax
650187f9:	inc    eax
650187fa:	ret    
650187fb:	push   ebp
650187fc:	xor    ebp,ebp
650187fe:	cmp    DWORD PTR ds:0x6503143c,0x3
65018805:	jne    0x6501885b
65018807:	push   ebx
65018808:	mov    ebx,DWORD PTR ds:0x650240f8
6501880e:	push   edi
6501880f:	xor    edi,edi
65018811:	cmp    DWORD PTR ds:0x65031424,ebp
65018817:	jle    0x6501884a
65018819:	push   esi
6501881a:	mov    esi,DWORD PTR ds:0x65031428
65018820:	add    esi,0x10
65018823:	push   0x8000
65018828:	push   ebp
65018829:	push   DWORD PTR [esi-0x4]
6501882c:	call   DWORD PTR ds:0x65024174
65018832:	push   DWORD PTR [esi]
65018834:	push   ebp
65018835:	push   DWORD PTR ds:0x6502da8c
6501883b:	call   ebx
6501883d:	add    esi,0x14
65018840:	inc    edi
65018841:	cmp    edi,DWORD PTR ds:0x65031424
65018847:	jl     0x65018823
65018849:	pop    esi
6501884a:	push   DWORD PTR ds:0x65031428
65018850:	push   ebp
65018851:	push   DWORD PTR ds:0x6502da8c
65018857:	call   ebx
65018859:	pop    edi
6501885a:	pop    ebx
6501885b:	push   DWORD PTR ds:0x6502da8c
65018861:	call   DWORD PTR ds:0x650240f0
65018867:	mov    DWORD PTR ds:0x6502da8c,ebp
6501886d:	pop    ebp
6501886e:	ret    
6501886f:	push   ebp
65018870:	mov    ebp,esp
65018872:	push   ecx
65018873:	push   ecx
65018874:	push   esi
65018875:	call   0x65014674
6501887a:	mov    esi,eax
6501887c:	test   esi,esi
6501887e:	je     0x650189ca
65018884:	mov    edx,DWORD PTR [esi+0x5c]
65018887:	mov    eax,ds:0x6502c94c
6501888c:	push   edi
6501888d:	mov    edi,DWORD PTR [ebp+0x8]
65018890:	mov    ecx,edx
65018892:	push   ebx
65018893:	cmp    DWORD PTR [ecx],edi
65018895:	je     0x650188a5
65018897:	mov    ebx,eax
65018899:	imul   ebx,ebx,0xc
6501889c:	add    ecx,0xc
6501889f:	add    ebx,edx
650188a1:	cmp    ecx,ebx
650188a3:	jb     0x65018893
650188a5:	imul   eax,eax,0xc
650188a8:	add    eax,edx
650188aa:	cmp    ecx,eax
650188ac:	jae    0x650188b6
650188ae:	cmp    DWORD PTR [ecx],edi
650188b0:	jne    0x650188b6
650188b2:	mov    eax,ecx
650188b4:	jmp    0x650188b8
650188b6:	xor    eax,eax
650188b8:	test   eax,eax
650188ba:	je     0x650188c6
650188bc:	mov    ebx,DWORD PTR [eax+0x8]
650188bf:	test   ebx,ebx
650188c1:	mov    DWORD PTR [ebp-0x4],ebx
650188c4:	jne    0x650188cd
650188c6:	xor    eax,eax
650188c8:	jmp    0x650189c8
650188cd:	cmp    ebx,0x5
650188d0:	jne    0x650188de
650188d2:	and    DWORD PTR [eax+0x8],0x0
650188d6:	xor    eax,eax
650188d8:	inc    eax
650188d9:	jmp    0x650189c8
650188de:	cmp    ebx,0x1
650188e1:	je     0x650189c5
650188e7:	mov    ecx,DWORD PTR [esi+0x60]
650188ea:	mov    DWORD PTR [ebp-0x8],ecx
650188ed:	mov    ecx,DWORD PTR [ebp+0xc]
650188f0:	mov    DWORD PTR [esi+0x60],ecx
650188f3:	mov    ecx,DWORD PTR [eax+0x4]
650188f6:	cmp    ecx,0x8
650188f9:	jne    0x650189b7
650188ff:	mov    ecx,DWORD PTR ds:0x6502c940
65018905:	mov    edi,DWORD PTR ds:0x6502c944
6501890b:	mov    edx,ecx
6501890d:	add    edi,ecx
6501890f:	cmp    edx,edi
65018911:	jge    0x65018937
65018913:	imul   ecx,ecx,0xc
65018916:	mov    edi,DWORD PTR [esi+0x5c]
65018919:	and    DWORD PTR [ecx+edi*1+0x8],0x0
6501891e:	mov    edi,DWORD PTR ds:0x6502c940
65018924:	mov    ebx,DWORD PTR ds:0x6502c944
6501892a:	inc    edx
6501892b:	add    ebx,edi
6501892d:	add    ecx,0xc
65018930:	cmp    edx,ebx
65018932:	jl     0x65018916
65018934:	mov    ebx,DWORD PTR [ebp-0x4]
65018937:	mov    eax,DWORD PTR [eax]
65018939:	cmp    eax,0xc000008e
6501893e:	mov    edi,DWORD PTR [esi+0x64]
65018941:	jne    0x6501894c
65018943:	mov    DWORD PTR [esi+0x64],0x83
6501894a:	jmp    0x650189aa
6501894c:	cmp    eax,0xc0000090
65018951:	jne    0x6501895c
65018953:	mov    DWORD PTR [esi+0x64],0x81
6501895a:	jmp    0x650189aa
6501895c:	cmp    eax,0xc0000091
65018961:	jne    0x6501896c
65018963:	mov    DWORD PTR [esi+0x64],0x84
6501896a:	jmp    0x650189aa
6501896c:	cmp    eax,0xc0000093
65018971:	jne    0x6501897c
65018973:	mov    DWORD PTR [esi+0x64],0x85
6501897a:	jmp    0x650189aa
6501897c:	cmp    eax,0xc000008d
65018981:	jne    0x6501898c
65018983:	mov    DWORD PTR [esi+0x64],0x82
6501898a:	jmp    0x650189aa
6501898c:	cmp    eax,0xc000008f
65018991:	jne    0x6501899c
65018993:	mov    DWORD PTR [esi+0x64],0x86
6501899a:	jmp    0x650189aa
6501899c:	cmp    eax,0xc0000092
650189a1:	jne    0x650189aa
650189a3:	mov    DWORD PTR [esi+0x64],0x8a
650189aa:	push   DWORD PTR [esi+0x64]
650189ad:	push   0x8
650189af:	call   ebx
650189b1:	pop    ecx
650189b2:	mov    DWORD PTR [esi+0x64],edi
650189b5:	jmp    0x650189be
650189b7:	and    DWORD PTR [eax+0x8],0x0
650189bb:	push   ecx
650189bc:	call   ebx
650189be:	mov    eax,DWORD PTR [ebp-0x8]
650189c1:	pop    ecx
650189c2:	mov    DWORD PTR [esi+0x60],eax
650189c5:	or     eax,0xffffffff
650189c8:	pop    ebx
650189c9:	pop    edi
650189ca:	pop    esi
650189cb:	leave  
650189cc:	ret    
650189cd:	mov    eax,0xe06d7363
650189d2:	cmp    DWORD PTR [esp+0x4],eax
650189d6:	jne    0x650189e5
650189d8:	push   DWORD PTR [esp+0x8]
650189dc:	push   eax
650189dd:	call   0x6501886f
650189e2:	pop    ecx
650189e3:	pop    ecx
650189e4:	ret    
650189e5:	xor    eax,eax
650189e7:	ret    
650189e8:	push   ebp
650189e9:	mov    ebp,esp
650189eb:	sub    esp,0x10
650189ee:	mov    eax,ds:0x6502c09c
650189f3:	and    DWORD PTR [ebp-0x8],0x0
650189f7:	and    DWORD PTR [ebp-0x4],0x0
650189fb:	push   ebx
650189fc:	push   edi
650189fd:	mov    edi,0xbb40e64e
65018a02:	cmp    eax,edi
65018a04:	mov    ebx,0xffff0000
65018a09:	je     0x65018a18
65018a0b:	test   ebx,eax
65018a0d:	je     0x65018a18
65018a0f:	not    eax
65018a11:	mov    ds:0x6502c0a0,eax
65018a16:	jmp    0x65018a78
65018a18:	push   esi
65018a19:	lea    eax,[ebp-0x8]
65018a1c:	push   eax
65018a1d:	call   DWORD PTR ds:0x65024180
65018a23:	mov    esi,DWORD PTR [ebp-0x4]
65018a26:	xor    esi,DWORD PTR [ebp-0x8]
65018a29:	call   DWORD PTR ds:0x6502417c
65018a2f:	xor    esi,eax
65018a31:	call   DWORD PTR ds:0x6502411c
65018a37:	xor    esi,eax
65018a39:	call   DWORD PTR ds:0x65024058
65018a3f:	xor    esi,eax
65018a41:	lea    eax,[ebp-0x10]
65018a44:	push   eax
65018a45:	call   DWORD PTR ds:0x65024178
65018a4b:	mov    eax,DWORD PTR [ebp-0xc]
65018a4e:	xor    eax,DWORD PTR [ebp-0x10]
65018a51:	xor    esi,eax
65018a53:	cmp    esi,edi
65018a55:	jne    0x65018a5e
65018a57:	mov    esi,0xbb40e64f
65018a5c:	jmp    0x65018a69
65018a5e:	test   ebx,esi
65018a60:	jne    0x65018a69
65018a62:	mov    eax,esi
65018a64:	shl    eax,0x10
65018a67:	or     esi,eax
65018a69:	mov    DWORD PTR ds:0x6502c09c,esi
65018a6f:	not    esi
65018a71:	mov    DWORD PTR ds:0x6502c0a0,esi
65018a77:	pop    esi
65018a78:	pop    edi
65018a79:	pop    ebx
65018a7a:	leave  
65018a7b:	ret    
65018a7c:	int3   
65018a7d:	int3   
65018a7e:	int3   
65018a7f:	int3   
65018a80:	push   esi
65018a81:	mov    eax,DWORD PTR [esp+0x14]
65018a85:	or     eax,eax
65018a87:	jne    0x65018ab1
65018a89:	mov    ecx,DWORD PTR [esp+0x10]
65018a8d:	mov    eax,DWORD PTR [esp+0xc]
65018a91:	xor    edx,edx
65018a93:	div    ecx
65018a95:	mov    ebx,eax
65018a97:	mov    eax,DWORD PTR [esp+0x8]
65018a9b:	div    ecx
65018a9d:	mov    esi,eax
65018a9f:	mov    eax,ebx
65018aa1:	mul    DWORD PTR [esp+0x10]
65018aa5:	mov    ecx,eax
65018aa7:	mov    eax,esi
65018aa9:	mul    DWORD PTR [esp+0x10]
65018aad:	add    edx,ecx
65018aaf:	jmp    0x65018af8
65018ab1:	mov    ecx,eax
65018ab3:	mov    ebx,DWORD PTR [esp+0x10]
65018ab7:	mov    edx,DWORD PTR [esp+0xc]
65018abb:	mov    eax,DWORD PTR [esp+0x8]
65018abf:	shr    ecx,1
65018ac1:	rcr    ebx,1
65018ac3:	shr    edx,1
65018ac5:	rcr    eax,1
65018ac7:	or     ecx,ecx
65018ac9:	jne    0x65018abf
65018acb:	div    ebx
65018acd:	mov    esi,eax
65018acf:	mul    DWORD PTR [esp+0x14]
65018ad3:	mov    ecx,eax
65018ad5:	mov    eax,DWORD PTR [esp+0x10]
65018ad9:	mul    esi
65018adb:	add    edx,ecx
65018add:	jb     0x65018aed
65018adf:	cmp    edx,DWORD PTR [esp+0xc]
65018ae3:	ja     0x65018aed
65018ae5:	jb     0x65018af6
65018ae7:	cmp    eax,DWORD PTR [esp+0x8]
65018aeb:	jbe    0x65018af6
65018aed:	dec    esi
65018aee:	sub    eax,DWORD PTR [esp+0x10]
65018af2:	sbb    edx,DWORD PTR [esp+0x14]
65018af6:	xor    ebx,ebx
65018af8:	sub    eax,DWORD PTR [esp+0x8]
65018afc:	sbb    edx,DWORD PTR [esp+0xc]
65018b00:	neg    edx
65018b02:	neg    eax
65018b04:	sbb    edx,0x0
65018b07:	mov    ecx,edx
65018b09:	mov    edx,ebx
65018b0b:	mov    ebx,ecx
65018b0d:	mov    ecx,eax
65018b0f:	mov    eax,esi
65018b11:	pop    esi
65018b12:	ret    0x10
65018b15:	test   BYTE PTR [edi+0xc],0x40
65018b19:	push   ebx
65018b1a:	push   esi
65018b1b:	mov    esi,eax
65018b1d:	mov    ebx,ecx
65018b1f:	je     0x65018b55
65018b21:	cmp    DWORD PTR [edi+0x8],0x0
65018b25:	jne    0x65018b55
65018b27:	mov    eax,DWORD PTR [esp+0xc]
65018b2b:	add    DWORD PTR [esi],eax
65018b2d:	jmp    0x65018b5c
65018b2f:	mov    al,BYTE PTR [ebx]
65018b31:	dec    DWORD PTR [esp+0xc]
65018b35:	mov    ecx,edi
65018b37:	call   0x6501c848
65018b3c:	inc    ebx
65018b3d:	cmp    DWORD PTR [esi],0xffffffff
65018b40:	jne    0x65018b55
65018b42:	call   0x650143a0
65018b47:	cmp    DWORD PTR [eax],0x2a
65018b4a:	jne    0x65018b5c
65018b4c:	mov    ecx,edi
65018b4e:	mov    al,0x3f
65018b50:	call   0x6501c848
65018b55:	cmp    DWORD PTR [esp+0xc],0x0
65018b5a:	jg     0x65018b2f
65018b5c:	pop    esi
65018b5d:	pop    ebx
65018b5e:	ret    
65018b5f:	push   ebp
65018b60:	lea    ebp,[esp-0x1f8]
65018b67:	sub    esp,0x278
65018b6d:	mov    eax,ds:0x6502c09c
65018b72:	xor    eax,ebp
65018b74:	mov    DWORD PTR [ebp+0x1f4],eax
65018b7a:	mov    eax,DWORD PTR [ebp+0x200]
65018b80:	push   ebx
65018b81:	mov    ebx,DWORD PTR [ebp+0x204]
65018b87:	push   esi
65018b88:	xor    esi,esi
65018b8a:	push   edi
65018b8b:	mov    edi,DWORD PTR [ebp+0x20c]
65018b91:	push   DWORD PTR [ebp+0x208]
65018b97:	lea    ecx,[ebp-0x64]
65018b9a:	mov    DWORD PTR [ebp-0x30],eax
65018b9d:	mov    DWORD PTR [ebp-0x2c],edi
65018ba0:	mov    DWORD PTR [ebp-0x4c],esi
65018ba3:	mov    DWORD PTR [ebp-0x18],esi
65018ba6:	mov    DWORD PTR [ebp-0x40],esi
65018ba9:	mov    DWORD PTR [ebp-0x20],esi
65018bac:	mov    DWORD PTR [ebp-0x3c],esi
65018baf:	mov    DWORD PTR [ebp-0x50],esi
65018bb2:	mov    DWORD PTR [ebp-0x44],esi
65018bb5:	call   0x650128ff
65018bba:	cmp    DWORD PTR [ebp-0x30],esi
65018bbd:	jne    0x65018bec
65018bbf:	call   0x650143a0
65018bc4:	push   esi
65018bc5:	push   esi
65018bc6:	push   esi
65018bc7:	push   esi
65018bc8:	mov    DWORD PTR [eax],0x16
65018bce:	push   esi
65018bcf:	call   0x6501224f
65018bd4:	add    esp,0x14
65018bd7:	cmp    BYTE PTR [ebp-0x58],0x0
65018bdb:	je     0x65018be4
65018bdd:	mov    eax,DWORD PTR [ebp-0x5c]
65018be0:	and    DWORD PTR [eax+0x70],0xfffffffd
65018be4:	or     eax,0xffffffff
65018be7:	jmp    0x650194bb
65018bec:	mov    eax,DWORD PTR [ebp-0x30]
65018bef:	test   BYTE PTR [eax+0xc],0x40
65018bf3:	jne    0x65018c9d
65018bf9:	push   eax
65018bfa:	call   0x6501c4fd
65018bff:	cmp    eax,0xffffffff
65018c02:	pop    ecx
65018c03:	je     0x65018c3b
65018c05:	push   DWORD PTR [ebp-0x30]
65018c08:	call   0x6501c4fd
65018c0d:	cmp    eax,0xfffffffe
65018c10:	pop    ecx
65018c11:	je     0x65018c3b
65018c13:	push   DWORD PTR [ebp-0x30]
65018c16:	call   0x6501c4fd
65018c1b:	push   DWORD PTR [ebp-0x30]
65018c1e:	sar    eax,0x5
65018c21:	lea    esi,[eax*4+0x65031460]
65018c28:	call   0x6501c4fd
65018c2d:	and    eax,0x1f
65018c30:	shl    eax,0x6
65018c33:	add    eax,DWORD PTR [esi]
65018c35:	pop    ecx
65018c36:	pop    ecx
65018c37:	xor    esi,esi
65018c39:	jmp    0x65018c40
65018c3b:	mov    eax,0x6502c880
65018c40:	test   BYTE PTR [eax+0x24],0x7f
65018c44:	jne    0x65018bbf
65018c4a:	push   DWORD PTR [ebp-0x30]
65018c4d:	call   0x6501c4fd
65018c52:	cmp    eax,0xffffffff
65018c55:	pop    ecx
65018c56:	je     0x65018c8e
65018c58:	push   DWORD PTR [ebp-0x30]
65018c5b:	call   0x6501c4fd
65018c60:	cmp    eax,0xfffffffe
65018c63:	pop    ecx
65018c64:	je     0x65018c8e
65018c66:	push   DWORD PTR [ebp-0x30]
65018c69:	call   0x6501c4fd
65018c6e:	push   DWORD PTR [ebp-0x30]
65018c71:	sar    eax,0x5
65018c74:	lea    esi,[eax*4+0x65031460]
65018c7b:	call   0x6501c4fd
65018c80:	and    eax,0x1f
65018c83:	shl    eax,0x6
65018c86:	add    eax,DWORD PTR [esi]
65018c88:	pop    ecx
65018c89:	pop    ecx
65018c8a:	xor    esi,esi
65018c8c:	jmp    0x65018c93
65018c8e:	mov    eax,0x6502c880
65018c93:	test   BYTE PTR [eax+0x24],0x80
65018c97:	jne    0x65018bbf
65018c9d:	cmp    ebx,esi
65018c9f:	je     0x65018bbf
65018ca5:	mov    dl,BYTE PTR [ebx]
65018ca7:	xor    ecx,ecx
65018ca9:	test   dl,dl
65018cab:	mov    DWORD PTR [ebp-0x34],esi
65018cae:	mov    DWORD PTR [ebp-0x28],esi
65018cb1:	mov    DWORD PTR [ebp-0x54],esi
65018cb4:	mov    BYTE PTR [ebp-0x19],dl
65018cb7:	je     0x650194ab
65018cbd:	inc    ebx
65018cbe:	cmp    DWORD PTR [ebp-0x34],0x0
65018cc2:	mov    DWORD PTR [ebp-0x48],ebx
65018cc5:	jl     0x650194ab
65018ccb:	mov    al,dl
65018ccd:	sub    al,0x20
65018ccf:	cmp    al,0x58
65018cd1:	ja     0x65018ce4
65018cd3:	movsx  eax,dl
65018cd6:	movzx  eax,BYTE PTR [eax+0x65024d18]
65018cdd:	and    eax,0xf
65018ce0:	xor    esi,esi
65018ce2:	jmp    0x65018ce8
65018ce4:	xor    esi,esi
65018ce6:	xor    eax,eax
65018ce8:	movsx  eax,BYTE PTR [ecx+eax*8+0x65024d38]
65018cf0:	push   0x7
65018cf2:	sar    eax,0x4
65018cf5:	pop    ecx
65018cf6:	cmp    eax,ecx
65018cf8:	mov    DWORD PTR [ebp-0x74],eax
65018cfb:	ja     0x6501947b
65018d01:	jmp    DWORD PTR [eax*4+0x650194d3]
65018d08:	or     DWORD PTR [ebp-0x20],0xffffffff
65018d0c:	mov    DWORD PTR [ebp-0x78],esi
65018d0f:	mov    DWORD PTR [ebp-0x50],esi
65018d12:	mov    DWORD PTR [ebp-0x40],esi
65018d15:	mov    DWORD PTR [ebp-0x3c],esi
65018d18:	mov    DWORD PTR [ebp-0x18],esi
65018d1b:	mov    DWORD PTR [ebp-0x44],esi
65018d1e:	jmp    0x6501947b
65018d23:	movsx  eax,dl
65018d26:	sub    eax,0x20
65018d29:	je     0x65018d69
65018d2b:	sub    eax,0x3
65018d2e:	je     0x65018d5d
65018d30:	sub    eax,0x8
65018d33:	je     0x65018d54
65018d35:	dec    eax
65018d36:	dec    eax
65018d37:	je     0x65018d4b
65018d39:	sub    eax,0x3
65018d3c:	jne    0x6501947b
65018d42:	or     DWORD PTR [ebp-0x18],0x8
65018d46:	jmp    0x6501947b
65018d4b:	or     DWORD PTR [ebp-0x18],0x4
65018d4f:	jmp    0x6501947b
65018d54:	or     DWORD PTR [ebp-0x18],0x1
65018d58:	jmp    0x6501947b
65018d5d:	or     DWORD PTR [ebp-0x18],0x80
65018d64:	jmp    0x6501947b
65018d69:	or     DWORD PTR [ebp-0x18],0x2
65018d6d:	jmp    0x6501947b
65018d72:	cmp    dl,0x2a
65018d75:	jne    0x65018d97
65018d77:	add    edi,0x4
65018d7a:	mov    DWORD PTR [ebp-0x2c],edi
65018d7d:	mov    edi,DWORD PTR [edi-0x4]
65018d80:	cmp    edi,esi
65018d82:	mov    DWORD PTR [ebp-0x40],edi
65018d85:	jge    0x6501947b
65018d8b:	or     DWORD PTR [ebp-0x18],0x4
65018d8f:	neg    DWORD PTR [ebp-0x40]
65018d92:	jmp    0x6501947b
65018d97:	mov    eax,DWORD PTR [ebp-0x40]
65018d9a:	imul   eax,eax,0xa
65018d9d:	movsx  ecx,dl
65018da0:	lea    eax,[eax+ecx*1-0x30]
65018da4:	mov    DWORD PTR [ebp-0x40],eax
65018da7:	jmp    0x6501947b
65018dac:	mov    DWORD PTR [ebp-0x20],esi
65018daf:	jmp    0x6501947b
65018db4:	cmp    dl,0x2a
65018db7:	jne    0x65018dd6
65018db9:	add    edi,0x4
65018dbc:	mov    DWORD PTR [ebp-0x2c],edi
65018dbf:	mov    edi,DWORD PTR [edi-0x4]
65018dc2:	cmp    edi,esi
65018dc4:	mov    DWORD PTR [ebp-0x20],edi
65018dc7:	jge    0x6501947b
65018dcd:	or     DWORD PTR [ebp-0x20],0xffffffff
65018dd1:	jmp    0x6501947b
65018dd6:	mov    eax,DWORD PTR [ebp-0x20]
65018dd9:	imul   eax,eax,0xa
65018ddc:	movsx  ecx,dl
65018ddf:	lea    eax,[eax+ecx*1-0x30]
65018de3:	mov    DWORD PTR [ebp-0x20],eax
65018de6:	jmp    0x6501947b
65018deb:	cmp    dl,0x49
65018dee:	je     0x65018e36
65018df0:	cmp    dl,0x68
65018df3:	je     0x65018e2d
65018df5:	cmp    dl,0x6c
65018df8:	je     0x65018e0f
65018dfa:	cmp    dl,0x77
65018dfd:	jne    0x6501947b
65018e03:	or     DWORD PTR [ebp-0x18],0x800
65018e0a:	jmp    0x6501947b
65018e0f:	cmp    BYTE PTR [ebx],0x6c
65018e12:	jne    0x65018e24
65018e14:	inc    ebx
65018e15:	or     DWORD PTR [ebp-0x18],0x1000
65018e1c:	mov    DWORD PTR [ebp-0x48],ebx
65018e1f:	jmp    0x6501947b
65018e24:	or     DWORD PTR [ebp-0x18],0x10
65018e28:	jmp    0x6501947b
65018e2d:	or     DWORD PTR [ebp-0x18],0x20
65018e31:	jmp    0x6501947b
65018e36:	mov    al,BYTE PTR [ebx]
65018e38:	cmp    al,0x36
65018e3a:	jne    0x65018e53
65018e3c:	cmp    BYTE PTR [ebx+0x1],0x34
65018e40:	jne    0x65018e53
65018e42:	inc    ebx
65018e43:	inc    ebx
65018e44:	or     DWORD PTR [ebp-0x18],0x8000
65018e4b:	mov    DWORD PTR [ebp-0x48],ebx
65018e4e:	jmp    0x6501947b
65018e53:	cmp    al,0x33
65018e55:	jne    0x65018e6e
65018e57:	cmp    BYTE PTR [ebx+0x1],0x32
65018e5b:	jne    0x65018e6e
65018e5d:	inc    ebx
65018e5e:	inc    ebx
65018e5f:	and    DWORD PTR [ebp-0x18],0xffff7fff
65018e66:	mov    DWORD PTR [ebp-0x48],ebx
65018e69:	jmp    0x6501947b
65018e6e:	cmp    al,0x64
65018e70:	je     0x6501947b
65018e76:	cmp    al,0x69
65018e78:	je     0x6501947b
65018e7e:	cmp    al,0x6f
65018e80:	je     0x6501947b
65018e86:	cmp    al,0x75
65018e88:	je     0x6501947b
65018e8e:	cmp    al,0x78
65018e90:	je     0x6501947b
65018e96:	cmp    al,0x58
65018e98:	je     0x6501947b
65018e9e:	mov    DWORD PTR [ebp-0x74],esi
65018ea1:	lea    eax,[ebp-0x64]
65018ea4:	push   eax
65018ea5:	movzx  eax,dl
65018ea8:	push   eax
65018ea9:	mov    DWORD PTR [ebp-0x44],esi
65018eac:	call   0x65019ade
65018eb1:	pop    ecx
65018eb2:	test   eax,eax
65018eb4:	mov    al,BYTE PTR [ebp-0x19]
65018eb7:	pop    ecx
65018eb8:	je     0x65018ed3
65018eba:	mov    ecx,DWORD PTR [ebp-0x30]
65018ebd:	lea    esi,[ebp-0x34]
65018ec0:	call   0x6501c848
65018ec5:	mov    al,BYTE PTR [ebx]
65018ec7:	inc    ebx
65018ec8:	test   al,al
65018eca:	mov    DWORD PTR [ebp-0x48],ebx
65018ecd:	je     0x65019494
65018ed3:	mov    ecx,DWORD PTR [ebp-0x30]
65018ed6:	lea    esi,[ebp-0x34]
65018ed9:	call   0x6501c848
65018ede:	jmp    0x6501947b
65018ee3:	movsx  eax,dl
65018ee6:	cmp    eax,0x64
65018ee9:	jg     0x65019061
65018eef:	je     0x650190e0
65018ef5:	cmp    eax,0x53
65018ef8:	jg     0x65018fa9
65018efe:	je     0x65018f5a
65018f00:	sub    eax,0x41
65018f03:	je     0x65018f15
65018f05:	dec    eax
65018f06:	dec    eax
65018f07:	je     0x65018f49
65018f09:	dec    eax
65018f0a:	dec    eax
65018f0b:	je     0x65018f15
65018f0d:	dec    eax
65018f0e:	dec    eax
65018f0f:	jne    0x65019363
65018f15:	add    dl,0x20
65018f18:	mov    DWORD PTR [ebp-0x78],0x1
65018f1f:	mov    BYTE PTR [ebp-0x19],dl
65018f22:	or     DWORD PTR [ebp-0x18],0x40
65018f26:	cmp    DWORD PTR [ebp-0x20],esi
65018f29:	lea    ebx,[ebp-0x14]
65018f2c:	mov    eax,0x200
65018f31:	mov    DWORD PTR [ebp-0x24],ebx
65018f34:	mov    DWORD PTR [ebp-0x68],eax
65018f37:	jge    0x65019104
65018f3d:	mov    DWORD PTR [ebp-0x20],0x6
65018f44:	jmp    0x65019152
65018f49:	test   WORD PTR [ebp-0x18],0x830
65018f4f:	jne    0x65018fc6
65018f51:	or     DWORD PTR [ebp-0x18],0x800
65018f58:	jmp    0x65018fc6
65018f5a:	test   WORD PTR [ebp-0x18],0x830
65018f60:	jne    0x65018f69
65018f62:	or     DWORD PTR [ebp-0x18],0x800
65018f69:	mov    ecx,DWORD PTR [ebp-0x20]
65018f6c:	cmp    ecx,0xffffffff
65018f6f:	jne    0x65018f76
65018f71:	mov    ecx,0x7fffffff
65018f76:	add    edi,0x4
65018f79:	test   WORD PTR [ebp-0x18],0x810
65018f7f:	mov    DWORD PTR [ebp-0x2c],edi
65018f82:	mov    edi,DWORD PTR [edi-0x4]
65018f85:	mov    DWORD PTR [ebp-0x24],edi
65018f88:	je     0x65019341
65018f8e:	cmp    edi,esi
65018f90:	jne    0x65018f9a
65018f92:	mov    eax,ds:0x6502c954
65018f97:	mov    DWORD PTR [ebp-0x24],eax
65018f9a:	mov    eax,DWORD PTR [ebp-0x24]
65018f9d:	mov    DWORD PTR [ebp-0x44],0x1
65018fa4:	jmp    0x65019336
65018fa9:	sub    eax,0x58
65018fac:	je     0x650191eb
65018fb2:	dec    eax
65018fb3:	dec    eax
65018fb4:	je     0x65019013
65018fb6:	sub    eax,ecx
65018fb8:	je     0x65018f22
65018fbe:	dec    eax
65018fbf:	dec    eax
65018fc0:	jne    0x65019363
65018fc6:	add    edi,0x4
65018fc9:	test   WORD PTR [ebp-0x18],0x810
65018fcf:	mov    DWORD PTR [ebp-0x2c],edi
65018fd2:	je     0x65018ffb
65018fd4:	movzx  eax,WORD PTR [edi-0x4]
65018fd8:	push   eax
65018fd9:	push   0x200
65018fde:	lea    eax,[ebp-0x14]
65018fe1:	push   eax
65018fe2:	lea    eax,[ebp-0x28]
65018fe5:	push   eax
65018fe6:	call   0x6501d6c8
65018feb:	add    esp,0x10
65018fee:	test   eax,eax
65018ff0:	je     0x65019008
65018ff2:	mov    DWORD PTR [ebp-0x50],0x1
65018ff9:	jmp    0x65019008
65018ffb:	mov    al,BYTE PTR [edi-0x4]
65018ffe:	mov    BYTE PTR [ebp-0x14],al
65019001:	mov    DWORD PTR [ebp-0x28],0x1
65019008:	lea    eax,[ebp-0x14]
6501900b:	mov    DWORD PTR [ebp-0x24],eax
6501900e:	jmp    0x65019363
65019013:	mov    eax,DWORD PTR [edi]
65019015:	add    edi,0x4
65019018:	cmp    eax,esi
6501901a:	mov    DWORD PTR [ebp-0x2c],edi
6501901d:	je     0x6501904d
6501901f:	mov    ecx,DWORD PTR [eax+0x4]
65019022:	cmp    ecx,esi
65019024:	je     0x6501904d
65019026:	test   WORD PTR [ebp-0x18],0x800
6501902c:	movsx  eax,WORD PTR [eax]
6501902f:	mov    DWORD PTR [ebp-0x24],ecx
65019032:	je     0x65019045
65019034:	cdq    
65019035:	sub    eax,edx
65019037:	sar    eax,1
65019039:	mov    DWORD PTR [ebp-0x44],0x1
65019040:	jmp    0x65019360
65019045:	mov    DWORD PTR [ebp-0x44],esi
65019048:	jmp    0x65019360
6501904d:	mov    eax,ds:0x6502c950
65019052:	mov    DWORD PTR [ebp-0x24],eax
65019055:	push   eax
65019056:	call   0x65013ea0
6501905b:	pop    ecx
6501905c:	jmp    0x65019360
65019061:	cmp    eax,0x70
65019064:	jg     0x650191f0
6501906a:	je     0x650191e4
65019070:	cmp    eax,0x65
65019073:	jl     0x65019363
65019079:	cmp    eax,0x67
6501907c:	jle    0x65018f22
65019082:	cmp    eax,0x69
65019085:	je     0x650190e0
65019087:	cmp    eax,0x6e
6501908a:	je     0x650190ab
6501908c:	cmp    eax,0x6f
6501908f:	jne    0x65019363
65019095:	test   BYTE PTR [ebp-0x18],0x80
65019099:	mov    DWORD PTR [ebp-0x28],0x8
650190a0:	je     0x650190eb
650190a2:	or     DWORD PTR [ebp-0x18],0x200
650190a9:	jmp    0x650190eb
650190ab:	mov    esi,DWORD PTR [edi]
650190ad:	add    edi,0x4
650190b0:	mov    DWORD PTR [ebp-0x2c],edi
650190b3:	call   0x6501c708
650190b8:	test   eax,eax
650190ba:	je     0x65019494
650190c0:	test   BYTE PTR [ebp-0x18],0x20
650190c4:	je     0x650190cf
650190c6:	mov    ax,WORD PTR [ebp-0x34]
650190ca:	mov    WORD PTR [esi],ax
650190cd:	jmp    0x650190d4
650190cf:	mov    eax,DWORD PTR [ebp-0x34]
650190d2:	mov    DWORD PTR [esi],eax
650190d4:	mov    DWORD PTR [ebp-0x50],0x1
650190db:	jmp    0x65019468
650190e0:	or     DWORD PTR [ebp-0x18],0x40
650190e4:	mov    DWORD PTR [ebp-0x28],0xa
650190eb:	mov    ecx,DWORD PTR [ebp-0x18]
650190ee:	test   cx,cx
650190f1:	jns    0x6501923a
650190f7:	mov    eax,DWORD PTR [edi]
650190f9:	mov    edx,DWORD PTR [edi+0x4]
650190fc:	add    edi,0x8
650190ff:	jmp    0x6501926f
65019104:	jne    0x65019114
65019106:	cmp    dl,0x67
65019109:	jne    0x65019152
6501910b:	mov    DWORD PTR [ebp-0x20],0x1
65019112:	jmp    0x65019152
65019114:	cmp    DWORD PTR [ebp-0x20],eax
65019117:	jle    0x6501911c
65019119:	mov    DWORD PTR [ebp-0x20],eax
6501911c:	cmp    DWORD PTR [ebp-0x20],0xa3
65019123:	jle    0x65019152
65019125:	mov    esi,DWORD PTR [ebp-0x20]
65019128:	add    esi,0x15d
6501912e:	push   esi
6501912f:	call   0x650159b0
65019134:	test   eax,eax
65019136:	mov    dl,BYTE PTR [ebp-0x19]
65019139:	pop    ecx
6501913a:	mov    DWORD PTR [ebp-0x54],eax
6501913d:	je     0x65019149
6501913f:	mov    DWORD PTR [ebp-0x24],eax
65019142:	mov    DWORD PTR [ebp-0x68],esi
65019145:	mov    ebx,eax
65019147:	jmp    0x65019150
65019149:	mov    DWORD PTR [ebp-0x20],0xa3
65019150:	xor    esi,esi
65019152:	mov    eax,DWORD PTR [edi]
65019154:	add    edi,0x8
65019157:	mov    DWORD PTR [ebp-0x80],eax
6501915a:	mov    eax,DWORD PTR [edi-0x4]
6501915d:	mov    DWORD PTR [ebp-0x7c],eax
65019160:	lea    eax,[ebp-0x64]
65019163:	push   eax
65019164:	push   DWORD PTR [ebp-0x78]
65019167:	movsx  eax,dl
6501916a:	push   DWORD PTR [ebp-0x20]
6501916d:	mov    DWORD PTR [ebp-0x2c],edi
65019170:	push   eax
65019171:	push   DWORD PTR [ebp-0x68]
65019174:	lea    eax,[ebp-0x80]
65019177:	push   ebx
65019178:	push   eax
65019179:	push   DWORD PTR ds:0x6502cb5c
6501917f:	call   0x650144cf
65019184:	pop    ecx
65019185:	call   eax
65019187:	mov    edi,DWORD PTR [ebp-0x18]
6501918a:	add    esp,0x1c
6501918d:	and    edi,0x80
65019193:	je     0x650191af
65019195:	cmp    DWORD PTR [ebp-0x20],esi
65019198:	jne    0x650191af
6501919a:	lea    eax,[ebp-0x64]
6501919d:	push   eax
6501919e:	push   ebx
6501919f:	push   DWORD PTR ds:0x6502cb68
650191a5:	call   0x650144cf
650191aa:	pop    ecx
650191ab:	call   eax
650191ad:	pop    ecx
650191ae:	pop    ecx
650191af:	cmp    BYTE PTR [ebp-0x19],0x67
650191b3:	jne    0x650191ce
650191b5:	cmp    edi,esi
650191b7:	jne    0x650191ce
650191b9:	lea    eax,[ebp-0x64]
650191bc:	push   eax
650191bd:	push   ebx
650191be:	push   DWORD PTR ds:0x6502cb64
650191c4:	call   0x650144cf
650191c9:	pop    ecx
650191ca:	call   eax
650191cc:	pop    ecx
650191cd:	pop    ecx
650191ce:	cmp    BYTE PTR [ebx],0x2d
650191d1:	jne    0x650191de
650191d3:	or     DWORD PTR [ebp-0x18],0x100
650191da:	inc    ebx
650191db:	mov    DWORD PTR [ebp-0x24],ebx
650191de:	push   ebx
650191df:	jmp    0x65019056
650191e4:	mov    DWORD PTR [ebp-0x20],0x8
650191eb:	mov    DWORD PTR [ebp-0x4c],ecx
650191ee:	jmp    0x65019211
650191f0:	sub    eax,0x73
650191f3:	je     0x65018f69
650191f9:	dec    eax
650191fa:	dec    eax
650191fb:	je     0x650190e4
65019201:	sub    eax,0x3
65019204:	jne    0x65019363
6501920a:	mov    DWORD PTR [ebp-0x4c],0x27
65019211:	test   BYTE PTR [ebp-0x18],0x80
65019215:	mov    DWORD PTR [ebp-0x28],0x10
6501921c:	je     0x650190eb
65019222:	mov    al,BYTE PTR [ebp-0x4c]
65019225:	add    al,0x51
65019227:	mov    BYTE PTR [ebp-0x38],0x30
6501922b:	mov    BYTE PTR [ebp-0x37],al
6501922e:	mov    DWORD PTR [ebp-0x3c],0x2
65019235:	jmp    0x650190eb
6501923a:	test   cx,0x1000
6501923f:	jne    0x650190f7
65019245:	add    edi,0x4
65019248:	test   cl,0x20
6501924b:	je     0x65019262
6501924d:	test   cl,0x40
65019250:	mov    DWORD PTR [ebp-0x2c],edi
65019253:	je     0x6501925b
65019255:	movsx  eax,WORD PTR [edi-0x4]
65019259:	jmp    0x6501925f
6501925b:	movzx  eax,WORD PTR [edi-0x4]
6501925f:	cdq    
65019260:	jmp    0x65019272
65019262:	test   cl,0x40
65019265:	mov    eax,DWORD PTR [edi-0x4]
65019268:	je     0x6501926d
6501926a:	cdq    
6501926b:	jmp    0x6501926f
6501926d:	xor    edx,edx
6501926f:	mov    DWORD PTR [ebp-0x2c],edi
65019272:	test   cl,0x40
65019275:	je     0x6501928f
65019277:	cmp    edx,esi
65019279:	jg     0x6501928f
6501927b:	jl     0x65019281
6501927d:	cmp    eax,esi
6501927f:	jae    0x6501928f
65019281:	neg    eax
65019283:	adc    edx,0x0
65019286:	neg    edx
65019288:	or     DWORD PTR [ebp-0x18],0x100
6501928f:	test   WORD PTR [ebp-0x18],0x9000
65019295:	mov    ebx,edx
65019297:	mov    edi,eax
65019299:	jne    0x6501929d
6501929b:	xor    ebx,ebx
6501929d:	cmp    DWORD PTR [ebp-0x20],0x0
650192a1:	jge    0x650192ac
650192a3:	mov    DWORD PTR [ebp-0x20],0x1
650192aa:	jmp    0x650192bd
650192ac:	and    DWORD PTR [ebp-0x18],0xfffffff7
650192b0:	mov    eax,0x200
650192b5:	cmp    DWORD PTR [ebp-0x20],eax
650192b8:	jle    0x650192bd
650192ba:	mov    DWORD PTR [ebp-0x20],eax
650192bd:	mov    eax,edi
650192bf:	or     eax,ebx
650192c1:	jne    0x650192c6
650192c3:	and    DWORD PTR [ebp-0x3c],eax
650192c6:	lea    esi,[ebp+0x1eb]
650192cc:	mov    eax,DWORD PTR [ebp-0x20]
650192cf:	dec    DWORD PTR [ebp-0x20]
650192d2:	test   eax,eax
650192d4:	jg     0x650192dc
650192d6:	mov    eax,edi
650192d8:	or     eax,ebx
650192da:	je     0x65019300
650192dc:	mov    eax,DWORD PTR [ebp-0x28]
650192df:	cdq    
650192e0:	push   edx
650192e1:	push   eax
650192e2:	push   ebx
650192e3:	push   edi
650192e4:	call   0x65018a80
650192e9:	add    ecx,0x30
650192ec:	cmp    ecx,0x39
650192ef:	mov    DWORD PTR [ebp-0x68],ebx
650192f2:	mov    edi,eax
650192f4:	mov    ebx,edx
650192f6:	jle    0x650192fb
650192f8:	add    ecx,DWORD PTR [ebp-0x4c]
650192fb:	mov    BYTE PTR [esi],cl
650192fd:	dec    esi
650192fe:	jmp    0x650192cc
65019300:	lea    eax,[ebp+0x1eb]
65019306:	sub    eax,esi
65019308:	inc    esi
65019309:	test   WORD PTR [ebp-0x18],0x200
6501930f:	mov    DWORD PTR [ebp-0x28],eax
65019312:	mov    DWORD PTR [ebp-0x24],esi
65019315:	je     0x65019363
65019317:	test   eax,eax
65019319:	je     0x65019322
6501931b:	mov    ecx,esi
6501931d:	cmp    BYTE PTR [ecx],0x30
65019320:	je     0x65019363
65019322:	dec    DWORD PTR [ebp-0x24]
65019325:	mov    ecx,DWORD PTR [ebp-0x24]
65019328:	mov    BYTE PTR [ecx],0x30
6501932b:	inc    eax
6501932c:	jmp    0x65019360
6501932e:	dec    ecx
6501932f:	cmp    WORD PTR [eax],si
65019332:	je     0x6501933a
65019334:	inc    eax
65019335:	inc    eax
65019336:	cmp    ecx,esi
65019338:	jne    0x6501932e
6501933a:	sub    eax,DWORD PTR [ebp-0x24]
6501933d:	sar    eax,1
6501933f:	jmp    0x65019360
65019341:	cmp    edi,esi
65019343:	jne    0x6501934d
65019345:	mov    eax,ds:0x6502c950
6501934a:	mov    DWORD PTR [ebp-0x24],eax
6501934d:	mov    eax,DWORD PTR [ebp-0x24]
65019350:	jmp    0x65019359
65019352:	dec    ecx
65019353:	cmp    BYTE PTR [eax],0x0
65019356:	je     0x6501935d
65019358:	inc    eax
65019359:	cmp    ecx,esi
6501935b:	jne    0x65019352
6501935d:	sub    eax,DWORD PTR [ebp-0x24]
65019360:	mov    DWORD PTR [ebp-0x28],eax
65019363:	cmp    DWORD PTR [ebp-0x50],0x0
65019367:	jne    0x65019468
6501936d:	mov    eax,DWORD PTR [ebp-0x18]
65019370:	test   al,0x40
65019372:	je     0x65019399
65019374:	test   ax,0x100
65019378:	je     0x65019380
6501937a:	mov    BYTE PTR [ebp-0x38],0x2d
6501937e:	jmp    0x65019392
65019380:	test   al,0x1
65019382:	je     0x6501938a
65019384:	mov    BYTE PTR [ebp-0x38],0x2b
65019388:	jmp    0x65019392
6501938a:	test   al,0x2
6501938c:	je     0x65019399
6501938e:	mov    BYTE PTR [ebp-0x38],0x20
65019392:	mov    DWORD PTR [ebp-0x3c],0x1
65019399:	mov    ebx,DWORD PTR [ebp-0x40]
6501939c:	sub    ebx,DWORD PTR [ebp-0x28]
6501939f:	sub    ebx,DWORD PTR [ebp-0x3c]
650193a2:	test   BYTE PTR [ebp-0x18],0xc
650193a6:	jne    0x650193b9
650193a8:	push   DWORD PTR [ebp-0x30]
650193ab:	lea    eax,[ebp-0x34]
650193ae:	push   ebx
650193af:	push   0x20
650193b1:	call   0x6501c87b
650193b6:	add    esp,0xc
650193b9:	push   DWORD PTR [ebp-0x3c]
650193bc:	mov    edi,DWORD PTR [ebp-0x30]
650193bf:	lea    eax,[ebp-0x34]
650193c2:	lea    ecx,[ebp-0x38]
650193c5:	call   0x65018b15
650193ca:	test   BYTE PTR [ebp-0x18],0x8
650193ce:	pop    ecx
650193cf:	je     0x650193e6
650193d1:	test   BYTE PTR [ebp-0x18],0x4
650193d5:	jne    0x650193e6
650193d7:	push   edi
650193d8:	push   ebx
650193d9:	push   0x30
650193db:	lea    eax,[ebp-0x34]
650193de:	call   0x6501c87b
650193e3:	add    esp,0xc
650193e6:	cmp    DWORD PTR [ebp-0x44],0x0
650193ea:	mov    eax,DWORD PTR [ebp-0x28]
650193ed:	je     0x65019440
650193ef:	test   eax,eax
650193f1:	jle    0x65019440
650193f3:	mov    esi,DWORD PTR [ebp-0x24]
650193f6:	mov    DWORD PTR [ebp-0x68],eax
650193f9:	movzx  eax,WORD PTR [esi]
650193fc:	dec    DWORD PTR [ebp-0x68]
650193ff:	push   eax
65019400:	push   0x6
65019402:	lea    eax,[ebp+0x1ec]
65019408:	push   eax
65019409:	lea    eax,[ebp-0x70]
6501940c:	inc    esi
6501940d:	push   eax
6501940e:	inc    esi
6501940f:	call   0x6501d6c8
65019414:	add    esp,0x10
65019417:	test   eax,eax
65019419:	jne    0x6501943a
6501941b:	cmp    DWORD PTR [ebp-0x70],eax
6501941e:	je     0x6501943a
65019420:	push   DWORD PTR [ebp-0x70]
65019423:	lea    eax,[ebp-0x34]
65019426:	lea    ecx,[ebp+0x1ec]
6501942c:	call   0x65018b15
65019431:	cmp    DWORD PTR [ebp-0x68],0x0
65019435:	pop    ecx
65019436:	jne    0x650193f9
65019438:	jmp    0x6501944d
6501943a:	or     DWORD PTR [ebp-0x34],0xffffffff
6501943e:	jmp    0x6501944d
65019440:	mov    ecx,DWORD PTR [ebp-0x24]
65019443:	push   eax
65019444:	lea    eax,[ebp-0x34]
65019447:	call   0x65018b15
6501944c:	pop    ecx
6501944d:	cmp    DWORD PTR [ebp-0x34],0x0
65019451:	jl     0x65019468
65019453:	test   BYTE PTR [ebp-0x18],0x4
65019457:	je     0x65019468
65019459:	push   edi
6501945a:	push   ebx
6501945b:	push   0x20
6501945d:	lea    eax,[ebp-0x34]
65019460:	call   0x6501c87b
65019465:	add    esp,0xc
65019468:	cmp    DWORD PTR [ebp-0x54],0x0
6501946c:	je     0x6501947b
6501946e:	push   DWORD PTR [ebp-0x54]
65019471:	call   0x65013577
65019476:	and    DWORD PTR [ebp-0x54],0x0
6501947a:	pop    ecx
6501947b:	mov    ebx,DWORD PTR [ebp-0x48]
6501947e:	mov    al,BYTE PTR [ebx]
65019480:	test   al,al
65019482:	mov    BYTE PTR [ebp-0x19],al
65019485:	je     0x650194ab
65019487:	mov    ecx,DWORD PTR [ebp-0x74]
6501948a:	mov    edi,DWORD PTR [ebp-0x2c]
6501948d:	mov    dl,al
6501948f:	jmp    0x65018cbd
65019494:	call   0x650143a0
65019499:	mov    DWORD PTR [eax],0x16
6501949f:	xor    eax,eax
650194a1:	push   eax
650194a2:	push   eax
650194a3:	push   eax
650194a4:	push   eax
650194a5:	push   eax
650194a6:	jmp    0x65018bcf
650194ab:	cmp    BYTE PTR [ebp-0x58],0x0
650194af:	je     0x650194b8
650194b1:	mov    eax,DWORD PTR [ebp-0x5c]
650194b4:	and    DWORD PTR [eax+0x70],0xfffffffd
650194b8:	mov    eax,DWORD PTR [ebp-0x34]
650194bb:	mov    ecx,DWORD PTR [ebp+0x1f4]
650194c1:	pop    edi
650194c2:	pop    esi
650194c3:	xor    ecx,ebp
650194c5:	pop    ebx
650194c6:	call   0x6501275c
650194cb:	add    ebp,0x1f8
650194d1:	leave  
650194d2:	ret    
650194d3:	mov    eax,ds:0x865018e
650194d8:	lea    eax,[ecx]
650194da:	and    ecx,DWORD PTR gs:[ebp-0x728d9aff]
650194e1:	add    DWORD PTR [ebp-0x54],esp
650194e4:	lea    eax,[ecx]
650194e6:	gs mov ah,0x8d
650194e9:	add    DWORD PTR [ebp-0x15],esp
650194ec:	lea    eax,[ecx]
650194ee:	gs jecxz 0x6501947f
650194f1:	add    DWORD PTR [ebp+0x55],esp
650194f4:	mov    ebp,esp
650194f6:	sub    esp,0x20
650194f9:	push   ebx
650194fa:	xor    ebx,ebx
650194fc:	cmp    DWORD PTR [ebp+0x14],ebx
650194ff:	jne    0x65019521
65019501:	call   0x650143a0
65019506:	push   ebx
65019507:	push   ebx
65019508:	push   ebx
65019509:	push   ebx
6501950a:	push   ebx
6501950b:	mov    DWORD PTR [eax],0x16
65019511:	call   0x6501224f
65019516:	add    esp,0x14
65019519:	or     eax,0xffffffff
6501951c:	jmp    0x650195ba
65019521:	push   esi
65019522:	mov    esi,DWORD PTR [ebp+0xc]
65019525:	push   edi
65019526:	mov    edi,DWORD PTR [ebp+0x10]
65019529:	cmp    edi,ebx
6501952b:	je     0x6501954e
6501952d:	cmp    esi,ebx
6501952f:	jne    0x6501954e
65019531:	call   0x650143a0
65019536:	push   ebx
65019537:	push   ebx
65019538:	push   ebx
65019539:	push   ebx
6501953a:	push   ebx
6501953b:	mov    DWORD PTR [eax],0x16
65019541:	call   0x6501224f
65019546:	add    esp,0x14
65019549:	or     eax,0xffffffff
6501954c:	jmp    0x650195b8
6501954e:	mov    eax,0x7fffffff
65019553:	cmp    edi,eax
65019555:	mov    DWORD PTR [ebp-0x1c],eax
65019558:	ja     0x6501955d
6501955a:	mov    DWORD PTR [ebp-0x1c],edi
6501955d:	push   DWORD PTR [ebp+0x1c]
65019560:	lea    eax,[ebp-0x20]
65019563:	push   DWORD PTR [ebp+0x18]
65019566:	mov    DWORD PTR [ebp-0x14],0x42
6501956d:	push   DWORD PTR [ebp+0x14]
65019570:	mov    DWORD PTR [ebp-0x18],esi
65019573:	push   eax
65019574:	mov    DWORD PTR [ebp-0x20],esi
65019577:	call   DWORD PTR [ebp+0x8]
6501957a:	add    esp,0x10
6501957d:	cmp    esi,ebx
6501957f:	mov    DWORD PTR [ebp+0x14],eax
65019582:	je     0x650195b8
65019584:	cmp    eax,ebx
65019586:	jl     0x650195aa
65019588:	dec    DWORD PTR [ebp-0x1c]
6501958b:	js     0x65019594
6501958d:	mov    eax,DWORD PTR [ebp-0x20]
65019590:	mov    BYTE PTR [eax],bl
65019592:	jmp    0x650195a5
65019594:	lea    eax,[ebp-0x20]
65019597:	push   eax
65019598:	push   ebx
65019599:	call   0x650167e5
6501959e:	cmp    eax,0xffffffff
650195a1:	pop    ecx
650195a2:	pop    ecx
650195a3:	je     0x650195aa
650195a5:	mov    eax,DWORD PTR [ebp+0x14]
650195a8:	jmp    0x650195b8
650195aa:	xor    eax,eax
650195ac:	cmp    DWORD PTR [ebp-0x1c],ebx
650195af:	mov    BYTE PTR [esi+edi*1-0x1],bl
650195b3:	setge  al
650195b6:	dec    eax
650195b7:	dec    eax
650195b8:	pop    edi
650195b9:	pop    esi
650195ba:	pop    ebx
650195bb:	leave  
650195bc:	ret    
650195bd:	push   ebp
650195be:	mov    ebp,esp
650195c0:	push   ebx
650195c1:	xor    ebx,ebx
650195c3:	cmp    DWORD PTR [ebp+0x10],ebx
650195c6:	jne    0x650195e5
650195c8:	call   0x650143a0
650195cd:	push   ebx
650195ce:	push   ebx
650195cf:	push   ebx
650195d0:	push   ebx
650195d1:	push   ebx
650195d2:	mov    DWORD PTR [eax],0x16
650195d8:	call   0x6501224f
650195dd:	add    esp,0x14
650195e0:	or     eax,0xffffffff
650195e3:	jmp    0x65019640
650195e5:	push   esi
650195e6:	mov    esi,DWORD PTR [ebp+0x8]
650195e9:	cmp    esi,ebx
650195eb:	je     0x650195f2
650195ed:	cmp    DWORD PTR [ebp+0xc],ebx
650195f0:	ja     0x650195ff
650195f2:	call   0x650143a0
650195f7:	mov    DWORD PTR [eax],0x16
650195fd:	jmp    0x6501962f
650195ff:	push   DWORD PTR [ebp+0x18]
65019602:	push   DWORD PTR [ebp+0x14]
65019605:	push   DWORD PTR [ebp+0x10]
65019608:	push   DWORD PTR [ebp+0xc]
6501960b:	push   esi
6501960c:	push   0x6501c89f
65019611:	call   0x650194f3
65019616:	add    esp,0x18
65019619:	cmp    eax,ebx
6501961b:	jge    0x6501961f
6501961d:	mov    BYTE PTR [esi],bl
6501961f:	cmp    eax,0xfffffffe
65019622:	jne    0x6501963f
65019624:	call   0x650143a0
65019629:	mov    DWORD PTR [eax],0x22
6501962f:	push   ebx
65019630:	push   ebx
65019631:	push   ebx
65019632:	push   ebx
65019633:	push   ebx
65019634:	call   0x6501224f
65019639:	add    esp,0x14
6501963c:	or     eax,0xffffffff
6501963f:	pop    esi
65019640:	pop    ebx
65019641:	pop    ebp
65019642:	ret    
65019643:	push   ebp
65019644:	mov    ebp,esp
65019646:	sub    esp,0x18
65019649:	push   ebx
6501964a:	push   DWORD PTR [ebp+0x10]
6501964d:	lea    ecx,[ebp-0x18]
65019650:	call   0x650128ff
65019655:	mov    ebx,DWORD PTR [ebp+0x8]
65019658:	lea    eax,[ebx+0x1]
6501965b:	cmp    eax,0x100
65019660:	ja     0x65019671
65019662:	mov    eax,DWORD PTR [ebp-0x18]
65019665:	mov    eax,DWORD PTR [eax+0xc8]
6501966b:	movzx  eax,WORD PTR [eax+ebx*2]
6501966f:	jmp    0x650196e6
65019671:	mov    DWORD PTR [ebp+0x8],ebx
65019674:	sar    DWORD PTR [ebp+0x8],0x8
65019678:	lea    eax,[ebp-0x18]
6501967b:	push   eax
6501967c:	mov    eax,DWORD PTR [ebp+0x8]
6501967f:	and    eax,0xff
65019684:	push   eax
65019685:	call   0x65019ade
6501968a:	test   eax,eax
6501968c:	pop    ecx
6501968d:	pop    ecx
6501968e:	je     0x650196a2
65019690:	mov    al,BYTE PTR [ebp+0x8]
65019693:	push   0x2
65019695:	mov    BYTE PTR [ebp-0x8],al
65019698:	mov    BYTE PTR [ebp-0x7],bl
6501969b:	mov    BYTE PTR [ebp-0x6],0x0
6501969f:	pop    ecx
650196a0:	jmp    0x650196ac
650196a2:	xor    ecx,ecx
650196a4:	mov    BYTE PTR [ebp-0x8],bl
650196a7:	mov    BYTE PTR [ebp-0x7],0x0
650196ab:	inc    ecx
650196ac:	mov    eax,DWORD PTR [ebp-0x18]
650196af:	push   0x1
650196b1:	push   DWORD PTR [eax+0x14]
650196b4:	push   DWORD PTR [eax+0x4]
650196b7:	lea    eax,[ebp-0x4]
650196ba:	push   eax
650196bb:	push   ecx
650196bc:	lea    eax,[ebp-0x8]
650196bf:	push   eax
650196c0:	lea    eax,[ebp-0x18]
650196c3:	push   0x1
650196c5:	push   eax
650196c6:	call   0x6501b5d5
650196cb:	add    esp,0x20
650196ce:	test   eax,eax
650196d0:	jne    0x650196e2
650196d2:	cmp    BYTE PTR [ebp-0xc],al
650196d5:	je     0x650196de
650196d7:	mov    eax,DWORD PTR [ebp-0x10]
650196da:	and    DWORD PTR [eax+0x70],0xfffffffd
650196de:	xor    eax,eax
650196e0:	jmp    0x650196f6
650196e2:	movzx  eax,WORD PTR [ebp-0x4]
650196e6:	and    eax,DWORD PTR [ebp+0xc]
650196e9:	cmp    BYTE PTR [ebp-0xc],0x0
650196ed:	je     0x650196f6
650196ef:	mov    ecx,DWORD PTR [ebp-0x10]
650196f2:	and    DWORD PTR [ecx+0x70],0xfffffffd
650196f6:	pop    ebx
650196f7:	leave  
650196f8:	ret    
650196f9:	push   ebp
650196fa:	mov    ebp,esp
650196fc:	sub    esp,0x14
650196ff:	mov    eax,ds:0x6502c09c
65019704:	xor    eax,ebp
65019706:	mov    DWORD PTR [ebp-0x4],eax
65019709:	push   ebx
6501970a:	push   esi
6501970b:	xor    ebx,ebx
6501970d:	cmp    DWORD PTR ds:0x6502da90,ebx
65019713:	push   edi
65019714:	mov    esi,ecx
65019716:	jne    0x65019750
65019718:	push   ebx
65019719:	push   ebx
6501971a:	xor    edi,edi
6501971c:	inc    edi
6501971d:	push   edi
6501971e:	push   0x65026610
65019723:	push   0x100
65019728:	push   ebx
65019729:	call   DWORD PTR ds:0x6502414c
6501972f:	test   eax,eax
65019731:	je     0x6501973b
65019733:	mov    DWORD PTR ds:0x6502da90,edi
65019739:	jmp    0x65019750
6501973b:	call   DWORD PTR ds:0x65024044
65019741:	cmp    eax,0x78
65019744:	jne    0x65019750
65019746:	mov    DWORD PTR ds:0x6502da90,0x2
65019750:	cmp    DWORD PTR [ebp+0x14],ebx
65019753:	jle    0x65019777
65019755:	mov    ecx,DWORD PTR [ebp+0x14]
65019758:	mov    eax,DWORD PTR [ebp+0x10]
6501975b:	dec    ecx
6501975c:	cmp    BYTE PTR [eax],bl
6501975e:	je     0x65019768
65019760:	inc    eax
65019761:	cmp    ecx,ebx
65019763:	jne    0x6501975b
65019765:	or     ecx,0xffffffff
65019768:	mov    eax,DWORD PTR [ebp+0x14]
6501976b:	sub    eax,ecx
6501976d:	dec    eax
6501976e:	cmp    eax,DWORD PTR [ebp+0x14]
65019771:	jge    0x65019774
65019773:	inc    eax
65019774:	mov    DWORD PTR [ebp+0x14],eax
65019777:	mov    eax,ds:0x6502da90
6501977c:	cmp    eax,0x2
6501977f:	je     0x65019930
65019785:	cmp    eax,ebx
65019787:	je     0x65019930
6501978d:	cmp    eax,0x1
65019790:	jne    0x65019961
65019796:	cmp    DWORD PTR [ebp+0x20],ebx
65019799:	mov    DWORD PTR [ebp-0x8],ebx
6501979c:	jne    0x650197a6
6501979e:	mov    eax,DWORD PTR [esi]
650197a0:	mov    eax,DWORD PTR [eax+0x4]
650197a3:	mov    DWORD PTR [ebp+0x20],eax
650197a6:	mov    esi,DWORD PTR ds:0x65024024
650197ac:	xor    eax,eax
650197ae:	cmp    DWORD PTR [ebp+0x24],ebx
650197b1:	push   ebx
650197b2:	push   ebx
650197b3:	push   DWORD PTR [ebp+0x14]
650197b6:	setne  al
650197b9:	push   DWORD PTR [ebp+0x10]
650197bc:	lea    eax,[eax*8+0x1]
650197c3:	push   eax
650197c4:	push   DWORD PTR [ebp+0x20]
650197c7:	call   esi
650197c9:	mov    edi,eax
650197cb:	cmp    edi,ebx
650197cd:	je     0x65019961
650197d3:	jle    0x65019818
650197d5:	push   0xffffffe0
650197d7:	xor    edx,edx
650197d9:	pop    eax
650197da:	div    edi
650197dc:	cmp    eax,0x2
650197df:	jb     0x65019818
650197e1:	lea    eax,[edi+edi*1+0x8]
650197e5:	cmp    eax,0x400
650197ea:	ja     0x650197ff
650197ec:	call   0x65012e60
650197f1:	mov    eax,esp
650197f3:	cmp    eax,ebx
650197f5:	je     0x65019813
650197f7:	mov    DWORD PTR [eax],0xcccc
650197fd:	jmp    0x65019810
650197ff:	push   eax
65019800:	call   0x65013654
65019805:	cmp    eax,ebx
65019807:	pop    ecx
65019808:	je     0x65019813
6501980a:	mov    DWORD PTR [eax],0xdddd
65019810:	add    eax,0x8
65019813:	mov    DWORD PTR [ebp-0xc],eax
65019816:	jmp    0x6501981b
65019818:	mov    DWORD PTR [ebp-0xc],ebx
6501981b:	cmp    DWORD PTR [ebp-0xc],ebx
6501981e:	je     0x65019961
65019824:	push   edi
65019825:	push   DWORD PTR [ebp-0xc]
65019828:	push   DWORD PTR [ebp+0x14]
6501982b:	push   DWORD PTR [ebp+0x10]
6501982e:	push   0x1
65019830:	push   DWORD PTR [ebp+0x20]
65019833:	call   esi
65019835:	test   eax,eax
65019837:	je     0x6501991f
6501983d:	mov    esi,DWORD PTR ds:0x6502414c
65019843:	push   ebx
65019844:	push   ebx
65019845:	push   edi
65019846:	push   DWORD PTR [ebp-0xc]
65019849:	push   DWORD PTR [ebp+0xc]
6501984c:	push   DWORD PTR [ebp+0x8]
6501984f:	call   esi
65019851:	mov    ecx,eax
65019853:	cmp    ecx,ebx
65019855:	mov    DWORD PTR [ebp-0x8],ecx
65019858:	je     0x6501991f
6501985e:	test   WORD PTR [ebp+0xc],0x400
65019864:	je     0x6501988f
65019866:	cmp    DWORD PTR [ebp+0x1c],ebx
65019869:	je     0x6501991f
6501986f:	cmp    ecx,DWORD PTR [ebp+0x1c]
65019872:	jg     0x6501991f
65019878:	push   DWORD PTR [ebp+0x1c]
6501987b:	push   DWORD PTR [ebp+0x18]
6501987e:	push   edi
6501987f:	push   DWORD PTR [ebp-0xc]
65019882:	push   DWORD PTR [ebp+0xc]
65019885:	push   DWORD PTR [ebp+0x8]
65019888:	call   esi
6501988a:	jmp    0x6501991f
6501988f:	cmp    ecx,ebx
65019891:	jle    0x650198d8
65019893:	push   0xffffffe0
65019895:	xor    edx,edx
65019897:	pop    eax
65019898:	div    ecx
6501989a:	cmp    eax,0x2
6501989d:	jb     0x650198d8
6501989f:	lea    eax,[ecx+ecx*1+0x8]
650198a3:	cmp    eax,0x400
650198a8:	ja     0x650198c0
650198aa:	call   0x65012e60
650198af:	mov    esi,esp
650198b1:	cmp    esi,ebx
650198b3:	je     0x6501991f
650198b5:	mov    DWORD PTR [esi],0xcccc
650198bb:	add    esi,0x8
650198be:	jmp    0x650198da
650198c0:	push   eax
650198c1:	call   0x65013654
650198c6:	cmp    eax,ebx
650198c8:	pop    ecx
650198c9:	je     0x650198d4
650198cb:	mov    DWORD PTR [eax],0xdddd
650198d1:	add    eax,0x8
650198d4:	mov    esi,eax
650198d6:	jmp    0x650198da
650198d8:	xor    esi,esi
650198da:	cmp    esi,ebx
650198dc:	je     0x6501991f
650198de:	push   DWORD PTR [ebp-0x8]
650198e1:	push   esi
650198e2:	push   edi
650198e3:	push   DWORD PTR [ebp-0xc]
650198e6:	push   DWORD PTR [ebp+0xc]
650198e9:	push   DWORD PTR [ebp+0x8]
650198ec:	call   DWORD PTR ds:0x6502414c
650198f2:	test   eax,eax
650198f4:	je     0x65019918
650198f6:	cmp    DWORD PTR [ebp+0x1c],ebx
650198f9:	push   ebx
650198fa:	push   ebx
650198fb:	jne    0x65019901
650198fd:	push   ebx
650198fe:	push   ebx
650198ff:	jmp    0x65019907
65019901:	push   DWORD PTR [ebp+0x1c]
65019904:	push   DWORD PTR [ebp+0x18]
65019907:	push   DWORD PTR [ebp-0x8]
6501990a:	push   esi
6501990b:	push   ebx
6501990c:	push   DWORD PTR [ebp+0x20]
6501990f:	call   DWORD PTR ds:0x65024028
65019915:	mov    DWORD PTR [ebp-0x8],eax
65019918:	push   esi
65019919:	call   0x65012bf2
6501991e:	pop    ecx
6501991f:	push   DWORD PTR [ebp-0xc]
65019922:	call   0x65012bf2
65019927:	mov    eax,DWORD PTR [ebp-0x8]
6501992a:	pop    ecx
6501992b:	jmp    0x65019a89
65019930:	cmp    DWORD PTR [ebp+0x8],ebx
65019933:	mov    DWORD PTR [ebp-0xc],ebx
65019936:	mov    DWORD PTR [ebp-0x10],ebx
65019939:	jne    0x65019943
6501993b:	mov    eax,DWORD PTR [esi]
6501993d:	mov    eax,DWORD PTR [eax+0x14]
65019940:	mov    DWORD PTR [ebp+0x8],eax
65019943:	cmp    DWORD PTR [ebp+0x20],ebx
65019946:	jne    0x65019950
65019948:	mov    eax,DWORD PTR [esi]
6501994a:	mov    eax,DWORD PTR [eax+0x4]
6501994d:	mov    DWORD PTR [ebp+0x20],eax
65019950:	push   DWORD PTR [ebp+0x8]
65019953:	call   0x6501d24f
65019958:	cmp    eax,0xffffffff
6501995b:	pop    ecx
6501995c:	mov    DWORD PTR [ebp-0x14],eax
6501995f:	jne    0x65019968
65019961:	xor    eax,eax
65019963:	jmp    0x65019a89
65019968:	cmp    eax,DWORD PTR [ebp+0x20]
6501996b:	je     0x65019a4c
65019971:	push   ebx
65019972:	push   ebx
65019973:	lea    ecx,[ebp+0x14]
65019976:	push   ecx
65019977:	push   DWORD PTR [ebp+0x10]
6501997a:	push   eax
6501997b:	push   DWORD PTR [ebp+0x20]
6501997e:	call   0x6501d296
65019983:	add    esp,0x18
65019986:	cmp    eax,ebx
65019988:	mov    DWORD PTR [ebp-0xc],eax
6501998b:	je     0x65019961
6501998d:	mov    esi,DWORD PTR ds:0x65024148
65019993:	push   ebx
65019994:	push   ebx
65019995:	push   DWORD PTR [ebp+0x14]
65019998:	push   eax
65019999:	push   DWORD PTR [ebp+0xc]
6501999c:	push   DWORD PTR [ebp+0x8]
6501999f:	call   esi
650199a1:	cmp    eax,ebx
650199a3:	mov    DWORD PTR [ebp-0x8],eax
650199a6:	jne    0x650199af
650199a8:	xor    esi,esi
650199aa:	jmp    0x65019a66
650199af:	jle    0x650199ee
650199b1:	cmp    eax,0xffffffe0
650199b4:	ja     0x650199ee
650199b6:	add    eax,0x8
650199b9:	cmp    eax,0x400
650199be:	ja     0x650199d6
650199c0:	call   0x65012e60
650199c5:	mov    edi,esp
650199c7:	cmp    edi,ebx
650199c9:	je     0x650199a8
650199cb:	mov    DWORD PTR [edi],0xcccc
650199d1:	add    edi,0x8
650199d4:	jmp    0x650199f0
650199d6:	push   eax
650199d7:	call   0x65013654
650199dc:	cmp    eax,ebx
650199de:	pop    ecx
650199df:	je     0x650199ea
650199e1:	mov    DWORD PTR [eax],0xdddd
650199e7:	add    eax,0x8
650199ea:	mov    edi,eax
650199ec:	jmp    0x650199f0
650199ee:	xor    edi,edi
650199f0:	cmp    edi,ebx
650199f2:	je     0x650199a8
650199f4:	push   DWORD PTR [ebp-0x8]
650199f7:	push   ebx
650199f8:	push   edi
650199f9:	call   0x65012de0
650199fe:	add    esp,0xc
65019a01:	push   DWORD PTR [ebp-0x8]
65019a04:	push   edi
65019a05:	push   DWORD PTR [ebp+0x14]
65019a08:	push   DWORD PTR [ebp-0xc]
65019a0b:	push   DWORD PTR [ebp+0xc]
65019a0e:	push   DWORD PTR [ebp+0x8]
65019a11:	call   esi
65019a13:	cmp    eax,ebx
65019a15:	mov    DWORD PTR [ebp-0x8],eax
65019a18:	jne    0x65019a1e
65019a1a:	xor    esi,esi
65019a1c:	jmp    0x65019a43
65019a1e:	push   DWORD PTR [ebp+0x1c]
65019a21:	lea    eax,[ebp-0x8]
65019a24:	push   DWORD PTR [ebp+0x18]
65019a27:	push   eax
65019a28:	push   edi
65019a29:	push   DWORD PTR [ebp+0x20]
65019a2c:	push   DWORD PTR [ebp-0x14]
65019a2f:	call   0x6501d296
65019a34:	mov    esi,eax
65019a36:	mov    DWORD PTR [ebp-0x10],esi
65019a39:	add    esp,0x18
65019a3c:	neg    esi
65019a3e:	sbb    esi,esi
65019a40:	and    esi,DWORD PTR [ebp-0x8]
65019a43:	push   edi
65019a44:	call   0x65012bf2
65019a49:	pop    ecx
65019a4a:	jmp    0x65019a66
65019a4c:	push   DWORD PTR [ebp+0x1c]
65019a4f:	push   DWORD PTR [ebp+0x18]
65019a52:	push   DWORD PTR [ebp+0x14]
65019a55:	push   DWORD PTR [ebp+0x10]
65019a58:	push   DWORD PTR [ebp+0xc]
65019a5b:	push   DWORD PTR [ebp+0x8]
65019a5e:	call   DWORD PTR ds:0x65024148
65019a64:	mov    esi,eax
65019a66:	cmp    DWORD PTR [ebp-0xc],ebx
65019a69:	je     0x65019a74
65019a6b:	push   DWORD PTR [ebp-0xc]
65019a6e:	call   0x65013577
65019a73:	pop    ecx
65019a74:	mov    eax,DWORD PTR [ebp-0x10]
65019a77:	cmp    eax,ebx
65019a79:	je     0x65019a87
65019a7b:	cmp    DWORD PTR [ebp+0x18],eax
65019a7e:	je     0x65019a87
65019a80:	push   eax
65019a81:	call   0x65013577
65019a86:	pop    ecx
65019a87:	mov    eax,esi
65019a89:	lea    esp,[ebp-0x20]
65019a8c:	pop    edi
65019a8d:	pop    esi
65019a8e:	pop    ebx
65019a8f:	mov    ecx,DWORD PTR [ebp-0x4]
65019a92:	xor    ecx,ebp
65019a94:	call   0x6501275c
65019a99:	leave  
65019a9a:	ret    
65019a9b:	push   ebp
65019a9c:	mov    ebp,esp
65019a9e:	sub    esp,0x10
65019aa1:	push   DWORD PTR [ebp+0x8]
65019aa4:	lea    ecx,[ebp-0x10]
65019aa7:	call   0x650128ff
65019aac:	push   DWORD PTR [ebp+0x28]
65019aaf:	lea    ecx,[ebp-0x10]
65019ab2:	push   DWORD PTR [ebp+0x24]
65019ab5:	push   DWORD PTR [ebp+0x20]
65019ab8:	push   DWORD PTR [ebp+0x1c]
65019abb:	push   DWORD PTR [ebp+0x18]
65019abe:	push   DWORD PTR [ebp+0x14]
65019ac1:	push   DWORD PTR [ebp+0x10]
65019ac4:	push   DWORD PTR [ebp+0xc]
65019ac7:	call   0x650196f9
65019acc:	add    esp,0x20
65019acf:	cmp    BYTE PTR [ebp-0x4],0x0
65019ad3:	je     0x65019adc
65019ad5:	mov    ecx,DWORD PTR [ebp-0x8]
65019ad8:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019adc:	leave  
65019add:	ret    
65019ade:	push   ebp
65019adf:	mov    ebp,esp
65019ae1:	sub    esp,0x10
65019ae4:	push   DWORD PTR [ebp+0xc]
65019ae7:	lea    ecx,[ebp-0x10]
65019aea:	call   0x650128ff
65019aef:	movzx  eax,BYTE PTR [ebp+0x8]
65019af3:	mov    ecx,DWORD PTR [ebp-0x10]
65019af6:	mov    ecx,DWORD PTR [ecx+0xc8]
65019afc:	movzx  eax,WORD PTR [ecx+eax*2]
65019b00:	and    eax,0x8000
65019b05:	cmp    BYTE PTR [ebp-0x4],0x0
65019b09:	je     0x65019b12
65019b0b:	mov    ecx,DWORD PTR [ebp-0x8]
65019b0e:	and    DWORD PTR [ecx+0x70],0xfffffffd
65019b12:	leave  
65019b13:	ret    
65019b14:	push   0x0
65019b16:	push   DWORD PTR [esp+0x8]
65019b1a:	call   0x65019ade
65019b1f:	pop    ecx
65019b20:	pop    ecx
65019b21:	ret    
65019b22:	push   esi
65019b23:	push   edi
65019b24:	xor    esi,esi
65019b26:	mov    edi,0x6502da98
65019b2b:	cmp    DWORD PTR [esi*8+0x6502c95c],0x1
65019b33:	jne    0x65019b53
65019b35:	lea    eax,[esi*8+0x6502c958]
65019b3c:	mov    DWORD PTR [eax],edi
65019b3e:	push   0xfa0
65019b43:	push   DWORD PTR [eax]
65019b45:	add    edi,0x18
65019b48:	call   0x6501b358
65019b4d:	test   eax,eax
65019b4f:	pop    ecx
65019b50:	pop    ecx
65019b51:	je     0x65019b5f
65019b53:	inc    esi
65019b54:	cmp    esi,0x24
65019b57:	jl     0x65019b2b
65019b59:	xor    eax,eax
65019b5b:	inc    eax
65019b5c:	pop    edi
65019b5d:	pop    esi
65019b5e:	ret    
65019b5f:	and    DWORD PTR [esi*8+0x6502c958],0x0
65019b67:	xor    eax,eax
65019b69:	jmp    0x65019b5c
65019b6b:	push   ebx
65019b6c:	mov    ebx,DWORD PTR ds:0x650240a4
65019b72:	push   esi
65019b73:	mov    esi,0x6502c958
65019b78:	push   edi
65019b79:	mov    edi,DWORD PTR [esi]
65019b7b:	test   edi,edi
65019b7d:	je     0x65019b92
65019b7f:	cmp    DWORD PTR [esi+0x4],0x1
65019b83:	je     0x65019b92
65019b85:	push   edi
65019b86:	call   ebx
65019b88:	push   edi
65019b89:	call   0x65013577
65019b8e:	and    DWORD PTR [esi],0x0
65019b91:	pop    ecx
65019b92:	add    esi,0x8
65019b95:	cmp    esi,0x6502ca78
65019b9b:	jl     0x65019b79
65019b9d:	mov    esi,0x6502c958
65019ba2:	pop    edi
65019ba3:	mov    eax,DWORD PTR [esi]
65019ba5:	test   eax,eax
65019ba7:	je     0x65019bb2
65019ba9:	cmp    DWORD PTR [esi+0x4],0x1
65019bad:	jne    0x65019bb2
65019baf:	push   eax
65019bb0:	call   ebx
65019bb2:	add    esi,0x8
65019bb5:	cmp    esi,0x6502ca78
65019bbb:	jl     0x65019ba3
65019bbd:	pop    esi
65019bbe:	pop    ebx
65019bbf:	ret    
65019bc0:	push   ebp
65019bc1:	mov    ebp,esp
65019bc3:	mov    eax,DWORD PTR [ebp+0x8]
65019bc6:	push   DWORD PTR [eax*8+0x6502c958]
65019bcd:	call   DWORD PTR ds:0x650240a0
65019bd3:	pop    ebp
65019bd4:	ret    
65019bd5:	push   0xc
65019bd7:	push   0x65029b50
65019bdc:	call   0x65013ca0
65019be1:	xor    edi,edi
65019be3:	inc    edi
65019be4:	mov    DWORD PTR [ebp-0x1c],edi
65019be7:	xor    ebx,ebx
65019be9:	cmp    DWORD PTR ds:0x6502da8c,ebx
65019bef:	jne    0x65019c09
65019bf1:	call   0x6501a96b
65019bf6:	push   0x1e
65019bf8:	call   0x6501a7cb
65019bfd:	push   0xff
65019c02:	call   0x65015b70
65019c07:	pop    ecx
65019c08:	pop    ecx
65019c09:	mov    esi,DWORD PTR [ebp+0x8]
65019c0c:	lea    esi,[esi*8+0x6502c958]
65019c13:	cmp    DWORD PTR [esi],ebx
65019c15:	je     0x65019c1b
65019c17:	mov    eax,edi
65019c19:	jmp    0x65019c89
65019c1b:	push   0x18
65019c1d:	call   0x650159b0
65019c22:	pop    ecx
65019c23:	mov    edi,eax
65019c25:	cmp    edi,ebx
65019c27:	jne    0x65019c38
65019c29:	call   0x650143a0
65019c2e:	mov    DWORD PTR [eax],0xc
65019c34:	xor    eax,eax
65019c36:	jmp    0x65019c89
65019c38:	push   0xa
65019c3a:	call   0x65019c98
65019c3f:	pop    ecx
65019c40:	mov    DWORD PTR [ebp-0x4],ebx
65019c43:	cmp    DWORD PTR [esi],ebx
65019c45:	jne    0x65019c73
65019c47:	push   0xfa0
65019c4c:	push   edi
65019c4d:	call   0x6501b358
65019c52:	pop    ecx
65019c53:	pop    ecx
65019c54:	test   eax,eax
65019c56:	jne    0x65019c6f
65019c58:	push   edi
65019c59:	call   0x65013577
65019c5e:	pop    ecx
65019c5f:	call   0x650143a0
65019c64:	mov    DWORD PTR [eax],0xc
65019c6a:	mov    DWORD PTR [ebp-0x1c],ebx
65019c6d:	jmp    0x65019c7a
65019c6f:	mov    DWORD PTR [esi],edi
65019c71:	jmp    0x65019c7a
65019c73:	push   edi
65019c74:	call   0x65013577
65019c79:	pop    ecx
65019c7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65019c81:	call   0x65019c8f
65019c86:	mov    eax,DWORD PTR [ebp-0x1c]
65019c89:	call   0x65013ce5
65019c8e:	ret    
65019c8f:	push   0xa
65019c91:	call   0x65019bc0
65019c96:	pop    ecx
65019c97:	ret    
65019c98:	push   ebp
65019c99:	mov    ebp,esp
65019c9b:	mov    eax,DWORD PTR [ebp+0x8]
65019c9e:	push   esi
65019c9f:	lea    esi,[eax*8+0x6502c958]
65019ca6:	cmp    DWORD PTR [esi],0x0
65019ca9:	jne    0x65019cbe
65019cab:	push   eax
65019cac:	call   0x65019bd5
65019cb1:	test   eax,eax
65019cb3:	pop    ecx
65019cb4:	jne    0x65019cbe
65019cb6:	push   0x11
65019cb8:	call   0x65015b26
65019cbd:	pop    ecx
65019cbe:	push   DWORD PTR [esi]
65019cc0:	call   DWORD PTR ds:0x6502409c
65019cc6:	pop    esi
65019cc7:	pop    ebp
65019cc8:	ret    
65019cc9:	push   0x140
65019cce:	push   0x0
65019cd0:	push   DWORD PTR ds:0x6502da8c
65019cd6:	call   DWORD PTR ds:0x650240f4
65019cdc:	test   eax,eax
65019cde:	mov    ds:0x65031428,eax
65019ce3:	jne    0x65019ce6
65019ce5:	ret    
65019ce6:	mov    ecx,DWORD PTR [esp+0x4]
65019cea:	and    DWORD PTR ds:0x6502dbe8,0x0
65019cf1:	and    DWORD PTR ds:0x65031424,0x0
65019cf8:	mov    ds:0x65031430,eax
65019cfd:	xor    eax,eax
65019cff:	mov    DWORD PTR ds:0x6503142c,ecx
65019d05:	mov    DWORD PTR ds:0x65031434,0x10
65019d0f:	inc    eax
65019d10:	ret    
65019d11:	mov    ecx,DWORD PTR ds:0x65031424
65019d17:	mov    eax,ds:0x65031428
65019d1c:	imul   ecx,ecx,0x14
65019d1f:	add    ecx,eax
65019d21:	jmp    0x65019d35
65019d23:	mov    edx,DWORD PTR [esp+0x4]
65019d27:	sub    edx,DWORD PTR [eax+0xc]
65019d2a:	cmp    edx,0x100000
65019d30:	jb     0x65019d3b
65019d32:	add    eax,0x14
65019d35:	cmp    eax,ecx
65019d37:	jb     0x65019d23
65019d39:	xor    eax,eax
65019d3b:	ret    
65019d3c:	int3   
65019d3d:	int3   
65019d3e:	int3   
65019d3f:	push   ebp
65019d40:	mov    ebp,esp
65019d42:	sub    esp,0x10
65019d45:	mov    ecx,DWORD PTR [ebp+0x8]
65019d48:	mov    eax,DWORD PTR [ecx+0x10]
65019d4b:	push   esi
65019d4c:	mov    esi,DWORD PTR [ebp+0xc]
65019d4f:	push   edi
65019d50:	mov    edi,esi
65019d52:	sub    edi,DWORD PTR [ecx+0xc]
65019d55:	add    esi,0xfffffffc
65019d58:	shr    edi,0xf
65019d5b:	mov    ecx,edi
65019d5d:	imul   ecx,ecx,0x204
65019d63:	lea    ecx,[ecx+eax*1+0x144]
65019d6a:	mov    DWORD PTR [ebp-0x10],ecx
65019d6d:	mov    ecx,DWORD PTR [esi]
65019d6f:	dec    ecx
65019d70:	test   cl,0x1
65019d73:	mov    DWORD PTR [ebp-0x4],ecx
65019d76:	jne    0x6501a04f
65019d7c:	push   ebx
65019d7d:	lea    ebx,[ecx+esi*1]
65019d80:	mov    edx,DWORD PTR [ebx]
65019d82:	mov    DWORD PTR [ebp-0xc],edx
65019d85:	mov    edx,DWORD PTR [esi-0x4]
65019d88:	mov    DWORD PTR [ebp-0x8],edx
65019d8b:	mov    edx,DWORD PTR [ebp-0xc]
65019d8e:	test   dl,0x1
65019d91:	mov    DWORD PTR [ebp+0xc],ebx
65019d94:	jne    0x65019e0a
65019d96:	sar    edx,0x4
65019d99:	dec    edx
65019d9a:	cmp    edx,0x3f
65019d9d:	jbe    0x65019da2
65019d9f:	push   0x3f
65019da1:	pop    edx
65019da2:	mov    ecx,DWORD PTR [ebx+0x4]
65019da5:	cmp    ecx,DWORD PTR [ebx+0x8]
65019da8:	jne    0x65019dec
65019daa:	cmp    edx,0x20
65019dad:	mov    ebx,0x80000000
65019db2:	jae    0x65019dcd
65019db4:	mov    ecx,edx
65019db6:	shr    ebx,cl
65019db8:	lea    ecx,[edx+eax*1+0x4]
65019dbc:	not    ebx
65019dbe:	and    DWORD PTR [eax+edi*4+0x44],ebx
65019dc2:	dec    BYTE PTR [ecx]
65019dc4:	jne    0x65019de9
65019dc6:	mov    ecx,DWORD PTR [ebp+0x8]
65019dc9:	and    DWORD PTR [ecx],ebx
65019dcb:	jmp    0x65019de9
65019dcd:	lea    ecx,[edx-0x20]
65019dd0:	shr    ebx,cl
65019dd2:	lea    ecx,[edx+eax*1+0x4]
65019dd6:	not    ebx
65019dd8:	and    DWORD PTR [eax+edi*4+0xc4],ebx
65019ddf:	dec    BYTE PTR [ecx]
65019de1:	jne    0x65019de9
65019de3:	mov    ecx,DWORD PTR [ebp+0x8]
65019de6:	and    DWORD PTR [ecx+0x4],ebx
65019de9:	mov    ebx,DWORD PTR [ebp+0xc]
65019dec:	mov    edx,DWORD PTR [ebx+0x8]
65019def:	mov    ebx,DWORD PTR [ebx+0x4]
65019df2:	mov    ecx,DWORD PTR [ebp-0x4]
65019df5:	add    ecx,DWORD PTR [ebp-0xc]
65019df8:	mov    DWORD PTR [edx+0x4],ebx
65019dfb:	mov    edx,DWORD PTR [ebp+0xc]
65019dfe:	mov    ebx,DWORD PTR [edx+0x4]
65019e01:	mov    edx,DWORD PTR [edx+0x8]
65019e04:	mov    DWORD PTR [ebx+0x8],edx
65019e07:	mov    DWORD PTR [ebp-0x4],ecx
65019e0a:	mov    edx,ecx
65019e0c:	sar    edx,0x4
65019e0f:	dec    edx
65019e10:	cmp    edx,0x3f
65019e13:	jbe    0x65019e18
65019e15:	push   0x3f
65019e17:	pop    edx
65019e18:	mov    ebx,DWORD PTR [ebp-0x8]
65019e1b:	and    ebx,0x1
65019e1e:	mov    DWORD PTR [ebp-0xc],ebx
65019e21:	jne    0x65019eb6
65019e27:	sub    esi,DWORD PTR [ebp-0x8]
65019e2a:	mov    ebx,DWORD PTR [ebp-0x8]
65019e2d:	sar    ebx,0x4
65019e30:	push   0x3f
65019e32:	mov    DWORD PTR [ebp+0xc],esi
65019e35:	dec    ebx
65019e36:	pop    esi
65019e37:	cmp    ebx,esi
65019e39:	jbe    0x65019e3d
65019e3b:	mov    ebx,esi
65019e3d:	add    ecx,DWORD PTR [ebp-0x8]
65019e40:	mov    edx,ecx
65019e42:	sar    edx,0x4
65019e45:	dec    edx
65019e46:	cmp    edx,esi
65019e48:	mov    DWORD PTR [ebp-0x4],ecx
65019e4b:	jbe    0x65019e4f
65019e4d:	mov    edx,esi
65019e4f:	cmp    ebx,edx
65019e51:	je     0x65019eb1
65019e53:	mov    ecx,DWORD PTR [ebp+0xc]
65019e56:	mov    esi,DWORD PTR [ecx+0x4]
65019e59:	cmp    esi,DWORD PTR [ecx+0x8]
65019e5c:	jne    0x65019e99
65019e5e:	cmp    ebx,0x20
65019e61:	mov    esi,0x80000000
65019e66:	jae    0x65019e7f
65019e68:	mov    ecx,ebx
65019e6a:	shr    esi,cl
65019e6c:	not    esi
65019e6e:	and    DWORD PTR [eax+edi*4+0x44],esi
65019e72:	dec    BYTE PTR [ebx+eax*1+0x4]
65019e76:	jne    0x65019e99
65019e78:	mov    ecx,DWORD PTR [ebp+0x8]
65019e7b:	and    DWORD PTR [ecx],esi
65019e7d:	jmp    0x65019e99
65019e7f:	lea    ecx,[ebx-0x20]
65019e82:	shr    esi,cl
65019e84:	not    esi
65019e86:	and    DWORD PTR [eax+edi*4+0xc4],esi
65019e8d:	dec    BYTE PTR [ebx+eax*1+0x4]
65019e91:	jne    0x65019e99
65019e93:	mov    ecx,DWORD PTR [ebp+0x8]
65019e96:	and    DWORD PTR [ecx+0x4],esi
65019e99:	mov    ecx,DWORD PTR [ebp+0xc]
65019e9c:	mov    esi,DWORD PTR [ecx+0x8]
65019e9f:	mov    ecx,DWORD PTR [ecx+0x4]
65019ea2:	mov    DWORD PTR [esi+0x4],ecx
65019ea5:	mov    ecx,DWORD PTR [ebp+0xc]
65019ea8:	mov    esi,DWORD PTR [ecx+0x4]
65019eab:	mov    ecx,DWORD PTR [ecx+0x8]
65019eae:	mov    DWORD PTR [esi+0x8],ecx
65019eb1:	mov    esi,DWORD PTR [ebp+0xc]
65019eb4:	jmp    0x65019eb9
65019eb6:	mov    ebx,DWORD PTR [ebp+0x8]
65019eb9:	cmp    DWORD PTR [ebp-0xc],0x0
65019ebd:	jne    0x65019ec7
65019ebf:	cmp    ebx,edx
65019ec1:	je     0x65019f47
65019ec7:	mov    ecx,DWORD PTR [ebp-0x10]
65019eca:	lea    ecx,[ecx+edx*8]
65019ecd:	mov    ebx,DWORD PTR [ecx+0x4]
65019ed0:	mov    DWORD PTR [esi+0x8],ecx
65019ed3:	mov    DWORD PTR [esi+0x4],ebx
65019ed6:	mov    DWORD PTR [ecx+0x4],esi
65019ed9:	mov    ecx,DWORD PTR [esi+0x4]
65019edc:	mov    DWORD PTR [ecx+0x8],esi
65019edf:	mov    ecx,DWORD PTR [esi+0x4]
65019ee2:	cmp    ecx,DWORD PTR [esi+0x8]
65019ee5:	jne    0x65019f47
65019ee7:	mov    cl,BYTE PTR [edx+eax*1+0x4]
65019eeb:	mov    BYTE PTR [ebp+0xf],cl
65019eee:	inc    cl
65019ef0:	cmp    edx,0x20
65019ef3:	mov    BYTE PTR [edx+eax*1+0x4],cl
65019ef7:	jae    0x65019f1e
65019ef9:	cmp    BYTE PTR [ebp+0xf],0x0
65019efd:	jne    0x65019f0d
65019eff:	mov    ecx,edx
65019f01:	mov    ebx,0x80000000
65019f06:	shr    ebx,cl
65019f08:	mov    ecx,DWORD PTR [ebp+0x8]
65019f0b:	or     DWORD PTR [ecx],ebx
65019f0d:	mov    ebx,0x80000000
65019f12:	mov    ecx,edx
65019f14:	shr    ebx,cl
65019f16:	lea    eax,[eax+edi*4+0x44]
65019f1a:	or     DWORD PTR [eax],ebx
65019f1c:	jmp    0x65019f47
65019f1e:	cmp    BYTE PTR [ebp+0xf],0x0
65019f22:	jne    0x65019f34
65019f24:	lea    ecx,[edx-0x20]
65019f27:	mov    ebx,0x80000000
65019f2c:	shr    ebx,cl
65019f2e:	mov    ecx,DWORD PTR [ebp+0x8]
65019f31:	or     DWORD PTR [ecx+0x4],ebx
65019f34:	lea    ecx,[edx-0x20]
65019f37:	mov    edx,0x80000000
65019f3c:	shr    edx,cl
65019f3e:	lea    eax,[eax+edi*4+0xc4]
65019f45:	or     DWORD PTR [eax],edx
65019f47:	mov    eax,DWORD PTR [ebp-0x4]
65019f4a:	mov    DWORD PTR [esi],eax
65019f4c:	mov    DWORD PTR [eax+esi*1-0x4],eax
65019f50:	mov    eax,DWORD PTR [ebp-0x10]
65019f53:	dec    DWORD PTR [eax]
65019f55:	jne    0x6501a04e
65019f5b:	mov    eax,ds:0x6502dbe8
65019f60:	test   eax,eax
65019f62:	je     0x6501a040
65019f68:	mov    ecx,DWORD PTR ds:0x65031438
65019f6e:	mov    esi,DWORD PTR ds:0x65024174
65019f74:	push   0x4000
65019f79:	shl    ecx,0xf
65019f7c:	add    ecx,DWORD PTR [eax+0xc]
65019f7f:	mov    ebx,0x8000
65019f84:	push   ebx
65019f85:	push   ecx
65019f86:	call   esi
65019f88:	mov    ecx,DWORD PTR ds:0x65031438
65019f8e:	mov    eax,ds:0x6502dbe8
65019f93:	mov    edx,0x80000000
65019f98:	shr    edx,cl
65019f9a:	or     DWORD PTR [eax+0x8],edx
65019f9d:	mov    eax,ds:0x6502dbe8
65019fa2:	mov    eax,DWORD PTR [eax+0x10]
65019fa5:	mov    ecx,DWORD PTR ds:0x65031438
65019fab:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
65019fb3:	mov    eax,ds:0x6502dbe8
65019fb8:	mov    eax,DWORD PTR [eax+0x10]
65019fbb:	dec    BYTE PTR [eax+0x43]
65019fbe:	mov    eax,ds:0x6502dbe8
65019fc3:	mov    ecx,DWORD PTR [eax+0x10]
65019fc6:	cmp    BYTE PTR [ecx+0x43],0x0
65019fca:	jne    0x65019fd5
65019fcc:	and    DWORD PTR [eax+0x4],0xfffffffe
65019fd0:	mov    eax,ds:0x6502dbe8
65019fd5:	cmp    DWORD PTR [eax+0x8],0xffffffff
65019fd9:	jne    0x6501a040
65019fdb:	push   ebx
65019fdc:	push   0x0
65019fde:	push   DWORD PTR [eax+0xc]
65019fe1:	call   esi
65019fe3:	mov    eax,ds:0x6502dbe8
65019fe8:	push   DWORD PTR [eax+0x10]
65019feb:	push   0x0
65019fed:	push   DWORD PTR ds:0x6502da8c
65019ff3:	call   DWORD PTR ds:0x650240f8
65019ff9:	mov    ecx,DWORD PTR ds:0x65031424
65019fff:	mov    eax,ds:0x6502dbe8
6501a004:	imul   ecx,ecx,0x14
6501a007:	mov    edx,DWORD PTR ds:0x65031428
6501a00d:	sub    ecx,eax
6501a00f:	lea    ecx,[ecx+edx*1-0x14]
6501a013:	push   ecx
6501a014:	lea    ecx,[eax+0x14]
6501a017:	push   ecx
6501a018:	push   eax
6501a019:	call   0x65013720
6501a01e:	mov    eax,DWORD PTR [ebp+0x8]
6501a021:	add    esp,0xc
6501a024:	dec    DWORD PTR ds:0x65031424
6501a02a:	cmp    eax,DWORD PTR ds:0x6502dbe8
6501a030:	jbe    0x6501a036
6501a032:	sub    DWORD PTR [ebp+0x8],0x14
6501a036:	mov    eax,ds:0x65031428
6501a03b:	mov    ds:0x65031430,eax
6501a040:	mov    eax,DWORD PTR [ebp+0x8]
6501a043:	mov    ds:0x6502dbe8,eax
6501a048:	mov    DWORD PTR ds:0x65031438,edi
6501a04e:	pop    ebx
6501a04f:	pop    edi
6501a050:	pop    esi
6501a051:	leave  
6501a052:	ret    
6501a053:	mov    eax,ds:0x65031434
6501a058:	push   esi
6501a059:	mov    esi,DWORD PTR ds:0x65031424
6501a05f:	push   edi
6501a060:	xor    edi,edi
6501a062:	cmp    esi,eax
6501a064:	jne    0x6501a09a
6501a066:	add    eax,0x10
6501a069:	imul   eax,eax,0x14
6501a06c:	push   eax
6501a06d:	push   DWORD PTR ds:0x65031428
6501a073:	push   edi
6501a074:	push   DWORD PTR ds:0x6502da8c
6501a07a:	call   DWORD PTR ds:0x650240fc
6501a080:	cmp    eax,edi
6501a082:	jne    0x6501a088
6501a084:	xor    eax,eax
6501a086:	jmp    0x6501a100
6501a088:	add    DWORD PTR ds:0x65031434,0x10
6501a08f:	mov    esi,DWORD PTR ds:0x65031424
6501a095:	mov    ds:0x65031428,eax
6501a09a:	imul   esi,esi,0x14
6501a09d:	add    esi,DWORD PTR ds:0x65031428
6501a0a3:	push   0x41c4
6501a0a8:	push   0x8
6501a0aa:	push   DWORD PTR ds:0x6502da8c
6501a0b0:	call   DWORD PTR ds:0x650240f4
6501a0b6:	cmp    eax,edi
6501a0b8:	mov    DWORD PTR [esi+0x10],eax
6501a0bb:	je     0x6501a084
6501a0bd:	push   0x4
6501a0bf:	push   0x2000
6501a0c4:	push   0x100000
6501a0c9:	push   edi
6501a0ca:	call   DWORD PTR ds:0x650240c8
6501a0d0:	cmp    eax,edi
6501a0d2:	mov    DWORD PTR [esi+0xc],eax
6501a0d5:	jne    0x6501a0e9
6501a0d7:	push   DWORD PTR [esi+0x10]
6501a0da:	push   edi
6501a0db:	push   DWORD PTR ds:0x6502da8c
6501a0e1:	call   DWORD PTR ds:0x650240f8
6501a0e7:	jmp    0x6501a084
6501a0e9:	or     DWORD PTR [esi+0x8],0xffffffff
6501a0ed:	mov    DWORD PTR [esi],edi
6501a0ef:	mov    DWORD PTR [esi+0x4],edi
6501a0f2:	inc    DWORD PTR ds:0x65031424
6501a0f8:	mov    eax,DWORD PTR [esi+0x10]
6501a0fb:	or     DWORD PTR [eax],0xffffffff
6501a0fe:	mov    eax,esi
6501a100:	pop    edi
6501a101:	pop    esi
6501a102:	ret    
6501a103:	push   ebp
6501a104:	mov    ebp,esp
6501a106:	push   ecx
6501a107:	push   ecx
6501a108:	mov    ecx,DWORD PTR [ebp+0x8]
6501a10b:	mov    eax,DWORD PTR [ecx+0x8]
6501a10e:	push   ebx
6501a10f:	push   esi
6501a110:	mov    esi,DWORD PTR [ecx+0x10]
6501a113:	push   edi
6501a114:	xor    ebx,ebx
6501a116:	jmp    0x6501a11b
6501a118:	add    eax,eax
6501a11a:	inc    ebx
6501a11b:	test   eax,eax
6501a11d:	jge    0x6501a118
6501a11f:	mov    eax,ebx
6501a121:	imul   eax,eax,0x204
6501a127:	lea    eax,[eax+esi*1+0x144]
6501a12e:	push   0x3f
6501a130:	mov    DWORD PTR [ebp-0x8],eax
6501a133:	pop    edx
6501a134:	mov    DWORD PTR [eax+0x8],eax
6501a137:	mov    DWORD PTR [eax+0x4],eax
6501a13a:	add    eax,0x8
6501a13d:	dec    edx
6501a13e:	jne    0x6501a134
6501a140:	push   0x4
6501a142:	mov    edi,ebx
6501a144:	push   0x1000
6501a149:	shl    edi,0xf
6501a14c:	add    edi,DWORD PTR [ecx+0xc]
6501a14f:	push   0x8000
6501a154:	push   edi
6501a155:	call   DWORD PTR ds:0x650240c8
6501a15b:	test   eax,eax
6501a15d:	jne    0x6501a167
6501a15f:	or     eax,0xffffffff
6501a162:	jmp    0x6501a204
6501a167:	lea    edx,[edi+0x7000]
6501a16d:	cmp    edi,edx
6501a16f:	mov    DWORD PTR [ebp-0x4],edx
6501a172:	ja     0x6501a1b7
6501a174:	mov    ecx,edx
6501a176:	sub    ecx,edi
6501a178:	shr    ecx,0xc
6501a17b:	lea    eax,[edi+0x10]
6501a17e:	inc    ecx
6501a17f:	or     DWORD PTR [eax-0x8],0xffffffff
6501a183:	or     DWORD PTR [eax+0xfec],0xffffffff
6501a18a:	lea    edx,[eax+0xffc]
6501a190:	mov    DWORD PTR [eax],edx
6501a192:	lea    edx,[eax-0x1004]
6501a198:	mov    DWORD PTR [eax-0x4],0xff0
6501a19f:	mov    DWORD PTR [eax+0x4],edx
6501a1a2:	mov    DWORD PTR [eax+0xfe8],0xff0
6501a1ac:	add    eax,0x1000
6501a1b1:	dec    ecx
6501a1b2:	jne    0x6501a17f
6501a1b4:	mov    edx,DWORD PTR [ebp-0x4]
6501a1b7:	mov    eax,DWORD PTR [ebp-0x8]
6501a1ba:	add    eax,0x1f8
6501a1bf:	lea    ecx,[edi+0xc]
6501a1c2:	mov    DWORD PTR [eax+0x4],ecx
6501a1c5:	mov    DWORD PTR [ecx+0x8],eax
6501a1c8:	lea    ecx,[edx+0xc]
6501a1cb:	mov    DWORD PTR [eax+0x8],ecx
6501a1ce:	mov    DWORD PTR [ecx+0x4],eax
6501a1d1:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6501a1d6:	xor    edi,edi
6501a1d8:	inc    edi
6501a1d9:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6501a1e0:	mov    al,BYTE PTR [esi+0x43]
6501a1e3:	mov    cl,al
6501a1e5:	inc    cl
6501a1e7:	test   al,al
6501a1e9:	mov    eax,DWORD PTR [ebp+0x8]
6501a1ec:	mov    BYTE PTR [esi+0x43],cl
6501a1ef:	jne    0x6501a1f4
6501a1f1:	or     DWORD PTR [eax+0x4],edi
6501a1f4:	mov    edx,0x80000000
6501a1f9:	mov    ecx,ebx
6501a1fb:	shr    edx,cl
6501a1fd:	not    edx
6501a1ff:	and    DWORD PTR [eax+0x8],edx
6501a202:	mov    eax,ebx
6501a204:	pop    edi
6501a205:	pop    esi
6501a206:	pop    ebx
6501a207:	leave  
6501a208:	ret    
6501a209:	push   ebp
6501a20a:	mov    ebp,esp
6501a20c:	sub    esp,0xc
6501a20f:	mov    ecx,DWORD PTR [ebp+0x8]
6501a212:	mov    eax,DWORD PTR [ecx+0x10]
6501a215:	push   ebx
6501a216:	push   esi
6501a217:	mov    esi,DWORD PTR [ebp+0x10]
6501a21a:	push   edi
6501a21b:	mov    edi,DWORD PTR [ebp+0xc]
6501a21e:	mov    edx,edi
6501a220:	sub    edx,DWORD PTR [ecx+0xc]
6501a223:	add    esi,0x17
6501a226:	shr    edx,0xf
6501a229:	mov    ecx,edx
6501a22b:	imul   ecx,ecx,0x204
6501a231:	lea    ecx,[ecx+eax*1+0x144]
6501a238:	mov    DWORD PTR [ebp-0xc],ecx
6501a23b:	mov    ecx,DWORD PTR [edi-0x4]
6501a23e:	and    esi,0xfffffff0
6501a241:	dec    ecx
6501a242:	cmp    esi,ecx
6501a244:	lea    edi,[ecx+edi*1-0x4]
6501a248:	mov    ebx,DWORD PTR [edi]
6501a24a:	mov    DWORD PTR [ebp+0x10],ecx
6501a24d:	mov    DWORD PTR [ebp-0x4],ebx
6501a250:	jle    0x6501a3ab
6501a256:	test   bl,0x1
6501a259:	jne    0x6501a3a4
6501a25f:	add    ebx,ecx
6501a261:	cmp    esi,ebx
6501a263:	jg     0x6501a3a4
6501a269:	mov    ecx,DWORD PTR [ebp-0x4]
6501a26c:	sar    ecx,0x4
6501a26f:	dec    ecx
6501a270:	cmp    ecx,0x3f
6501a273:	mov    DWORD PTR [ebp-0x8],ecx
6501a276:	jbe    0x6501a27e
6501a278:	push   0x3f
6501a27a:	pop    ecx
6501a27b:	mov    DWORD PTR [ebp-0x8],ecx
6501a27e:	mov    ebx,DWORD PTR [edi+0x4]
6501a281:	cmp    ebx,DWORD PTR [edi+0x8]
6501a284:	jne    0x6501a2c9
6501a286:	cmp    ecx,0x20
6501a289:	mov    ebx,0x80000000
6501a28e:	jae    0x6501a2aa
6501a290:	shr    ebx,cl
6501a292:	mov    ecx,DWORD PTR [ebp-0x8]
6501a295:	lea    ecx,[ecx+eax*1+0x4]
6501a299:	not    ebx
6501a29b:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a29f:	dec    BYTE PTR [ecx]
6501a2a1:	jne    0x6501a2c9
6501a2a3:	mov    ecx,DWORD PTR [ebp+0x8]
6501a2a6:	and    DWORD PTR [ecx],ebx
6501a2a8:	jmp    0x6501a2c9
6501a2aa:	add    ecx,0xffffffe0
6501a2ad:	shr    ebx,cl
6501a2af:	mov    ecx,DWORD PTR [ebp-0x8]
6501a2b2:	lea    ecx,[ecx+eax*1+0x4]
6501a2b6:	not    ebx
6501a2b8:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a2bf:	dec    BYTE PTR [ecx]
6501a2c1:	jne    0x6501a2c9
6501a2c3:	mov    ecx,DWORD PTR [ebp+0x8]
6501a2c6:	and    DWORD PTR [ecx+0x4],ebx
6501a2c9:	mov    ecx,DWORD PTR [edi+0x8]
6501a2cc:	mov    ebx,DWORD PTR [edi+0x4]
6501a2cf:	mov    DWORD PTR [ecx+0x4],ebx
6501a2d2:	mov    ecx,DWORD PTR [edi+0x4]
6501a2d5:	mov    edi,DWORD PTR [edi+0x8]
6501a2d8:	mov    DWORD PTR [ecx+0x8],edi
6501a2db:	mov    ecx,DWORD PTR [ebp+0x10]
6501a2de:	sub    ecx,esi
6501a2e0:	add    DWORD PTR [ebp-0x4],ecx
6501a2e3:	cmp    DWORD PTR [ebp-0x4],0x0
6501a2e7:	jle    0x6501a392
6501a2ed:	mov    edi,DWORD PTR [ebp-0x4]
6501a2f0:	mov    ecx,DWORD PTR [ebp+0xc]
6501a2f3:	sar    edi,0x4
6501a2f6:	dec    edi
6501a2f7:	cmp    edi,0x3f
6501a2fa:	lea    ecx,[ecx+esi*1-0x4]
6501a2fe:	jbe    0x6501a303
6501a300:	push   0x3f
6501a302:	pop    edi
6501a303:	mov    ebx,DWORD PTR [ebp-0xc]
6501a306:	lea    ebx,[ebx+edi*8]
6501a309:	mov    DWORD PTR [ebp+0x10],ebx
6501a30c:	mov    ebx,DWORD PTR [ebx+0x4]
6501a30f:	mov    DWORD PTR [ecx+0x4],ebx
6501a312:	mov    ebx,DWORD PTR [ebp+0x10]
6501a315:	mov    DWORD PTR [ecx+0x8],ebx
6501a318:	mov    DWORD PTR [ebx+0x4],ecx
6501a31b:	mov    ebx,DWORD PTR [ecx+0x4]
6501a31e:	mov    DWORD PTR [ebx+0x8],ecx
6501a321:	mov    ebx,DWORD PTR [ecx+0x4]
6501a324:	cmp    ebx,DWORD PTR [ecx+0x8]
6501a327:	jne    0x6501a380
6501a329:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6501a32d:	mov    BYTE PTR [ebp+0x13],cl
6501a330:	inc    cl
6501a332:	cmp    edi,0x20
6501a335:	mov    BYTE PTR [edi+eax*1+0x4],cl
6501a339:	jae    0x6501a357
6501a33b:	cmp    BYTE PTR [ebp+0x13],0x0
6501a33f:	jne    0x6501a34f
6501a341:	mov    ecx,edi
6501a343:	mov    ebx,0x80000000
6501a348:	shr    ebx,cl
6501a34a:	mov    ecx,DWORD PTR [ebp+0x8]
6501a34d:	or     DWORD PTR [ecx],ebx
6501a34f:	lea    eax,[eax+edx*4+0x44]
6501a353:	mov    ecx,edi
6501a355:	jmp    0x6501a377
6501a357:	cmp    BYTE PTR [ebp+0x13],0x0
6501a35b:	jne    0x6501a36d
6501a35d:	lea    ecx,[edi-0x20]
6501a360:	mov    ebx,0x80000000
6501a365:	shr    ebx,cl
6501a367:	mov    ecx,DWORD PTR [ebp+0x8]
6501a36a:	or     DWORD PTR [ecx+0x4],ebx
6501a36d:	lea    eax,[eax+edx*4+0xc4]
6501a374:	lea    ecx,[edi-0x20]
6501a377:	mov    edx,0x80000000
6501a37c:	shr    edx,cl
6501a37e:	or     DWORD PTR [eax],edx
6501a380:	mov    edx,DWORD PTR [ebp+0xc]
6501a383:	mov    ecx,DWORD PTR [ebp-0x4]
6501a386:	lea    eax,[edx+esi*1-0x4]
6501a38a:	mov    DWORD PTR [eax],ecx
6501a38c:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6501a390:	jmp    0x6501a395
6501a392:	mov    edx,DWORD PTR [ebp+0xc]
6501a395:	lea    eax,[esi+0x1]
6501a398:	mov    DWORD PTR [edx-0x4],eax
6501a39b:	mov    DWORD PTR [edx+esi*1-0x8],eax
6501a39f:	jmp    0x6501a4e0
6501a3a4:	xor    eax,eax
6501a3a6:	jmp    0x6501a4e3
6501a3ab:	jge    0x6501a4e0
6501a3b1:	mov    ebx,DWORD PTR [ebp+0xc]
6501a3b4:	sub    DWORD PTR [ebp+0x10],esi
6501a3b7:	lea    ecx,[esi+0x1]
6501a3ba:	mov    DWORD PTR [ebx-0x4],ecx
6501a3bd:	lea    ebx,[ebx+esi*1-0x4]
6501a3c1:	mov    esi,DWORD PTR [ebp+0x10]
6501a3c4:	sar    esi,0x4
6501a3c7:	dec    esi
6501a3c8:	cmp    esi,0x3f
6501a3cb:	mov    DWORD PTR [ebp+0xc],ebx
6501a3ce:	mov    DWORD PTR [ebx-0x4],ecx
6501a3d1:	jbe    0x6501a3d6
6501a3d3:	push   0x3f
6501a3d5:	pop    esi
6501a3d6:	test   BYTE PTR [ebp-0x4],0x1
6501a3da:	jne    0x6501a460
6501a3e0:	mov    esi,DWORD PTR [ebp-0x4]
6501a3e3:	sar    esi,0x4
6501a3e6:	dec    esi
6501a3e7:	cmp    esi,0x3f
6501a3ea:	jbe    0x6501a3ef
6501a3ec:	push   0x3f
6501a3ee:	pop    esi
6501a3ef:	mov    ecx,DWORD PTR [edi+0x4]
6501a3f2:	cmp    ecx,DWORD PTR [edi+0x8]
6501a3f5:	jne    0x6501a439
6501a3f7:	cmp    esi,0x20
6501a3fa:	mov    ebx,0x80000000
6501a3ff:	jae    0x6501a41a
6501a401:	mov    ecx,esi
6501a403:	shr    ebx,cl
6501a405:	lea    esi,[esi+eax*1+0x4]
6501a409:	not    ebx
6501a40b:	and    DWORD PTR [eax+edx*4+0x44],ebx
6501a40f:	dec    BYTE PTR [esi]
6501a411:	jne    0x6501a436
6501a413:	mov    ecx,DWORD PTR [ebp+0x8]
6501a416:	and    DWORD PTR [ecx],ebx
6501a418:	jmp    0x6501a436
6501a41a:	lea    ecx,[esi-0x20]
6501a41d:	shr    ebx,cl
6501a41f:	lea    ecx,[esi+eax*1+0x4]
6501a423:	not    ebx
6501a425:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6501a42c:	dec    BYTE PTR [ecx]
6501a42e:	jne    0x6501a436
6501a430:	mov    ecx,DWORD PTR [ebp+0x8]
6501a433:	and    DWORD PTR [ecx+0x4],ebx
6501a436:	mov    ebx,DWORD PTR [ebp+0xc]
6501a439:	mov    ecx,DWORD PTR [edi+0x8]
6501a43c:	mov    esi,DWORD PTR [edi+0x4]
6501a43f:	mov    DWORD PTR [ecx+0x4],esi
6501a442:	mov    esi,DWORD PTR [edi+0x8]
6501a445:	mov    ecx,DWORD PTR [edi+0x4]
6501a448:	mov    DWORD PTR [ecx+0x8],esi
6501a44b:	mov    esi,DWORD PTR [ebp+0x10]
6501a44e:	add    esi,DWORD PTR [ebp-0x4]
6501a451:	mov    DWORD PTR [ebp+0x10],esi
6501a454:	sar    esi,0x4
6501a457:	dec    esi
6501a458:	cmp    esi,0x3f
6501a45b:	jbe    0x6501a460
6501a45d:	push   0x3f
6501a45f:	pop    esi
6501a460:	mov    ecx,DWORD PTR [ebp-0xc]
6501a463:	lea    ecx,[ecx+esi*8]
6501a466:	mov    edi,DWORD PTR [ecx+0x4]
6501a469:	mov    DWORD PTR [ebx+0x8],ecx
6501a46c:	mov    DWORD PTR [ebx+0x4],edi
6501a46f:	mov    DWORD PTR [ecx+0x4],ebx
6501a472:	mov    ecx,DWORD PTR [ebx+0x4]
6501a475:	mov    DWORD PTR [ecx+0x8],ebx
6501a478:	mov    ecx,DWORD PTR [ebx+0x4]
6501a47b:	cmp    ecx,DWORD PTR [ebx+0x8]
6501a47e:	jne    0x6501a4d7
6501a480:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a484:	mov    BYTE PTR [ebp+0xf],cl
6501a487:	inc    cl
6501a489:	cmp    esi,0x20
6501a48c:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a490:	jae    0x6501a4ae
6501a492:	cmp    BYTE PTR [ebp+0xf],0x0
6501a496:	jne    0x6501a4a6
6501a498:	mov    ecx,esi
6501a49a:	mov    edi,0x80000000
6501a49f:	shr    edi,cl
6501a4a1:	mov    ecx,DWORD PTR [ebp+0x8]
6501a4a4:	or     DWORD PTR [ecx],edi
6501a4a6:	lea    eax,[eax+edx*4+0x44]
6501a4aa:	mov    ecx,esi
6501a4ac:	jmp    0x6501a4ce
6501a4ae:	cmp    BYTE PTR [ebp+0xf],0x0
6501a4b2:	jne    0x6501a4c4
6501a4b4:	lea    ecx,[esi-0x20]
6501a4b7:	mov    edi,0x80000000
6501a4bc:	shr    edi,cl
6501a4be:	mov    ecx,DWORD PTR [ebp+0x8]
6501a4c1:	or     DWORD PTR [ecx+0x4],edi
6501a4c4:	lea    eax,[eax+edx*4+0xc4]
6501a4cb:	lea    ecx,[esi-0x20]
6501a4ce:	mov    edx,0x80000000
6501a4d3:	shr    edx,cl
6501a4d5:	or     DWORD PTR [eax],edx
6501a4d7:	mov    eax,DWORD PTR [ebp+0x10]
6501a4da:	mov    DWORD PTR [ebx],eax
6501a4dc:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6501a4e0:	xor    eax,eax
6501a4e2:	inc    eax
6501a4e3:	pop    edi
6501a4e4:	pop    esi
6501a4e5:	pop    ebx
6501a4e6:	leave  
6501a4e7:	ret    
6501a4e8:	push   ebp
6501a4e9:	mov    ebp,esp
6501a4eb:	sub    esp,0x14
6501a4ee:	mov    eax,ds:0x65031424
6501a4f3:	mov    ecx,DWORD PTR [ebp+0x8]
6501a4f6:	imul   eax,eax,0x14
6501a4f9:	add    eax,DWORD PTR ds:0x65031428
6501a4ff:	add    ecx,0x17
6501a502:	and    ecx,0xfffffff0
6501a505:	mov    DWORD PTR [ebp-0x10],ecx
6501a508:	sar    ecx,0x4
6501a50b:	push   ebx
6501a50c:	dec    ecx
6501a50d:	cmp    ecx,0x20
6501a510:	push   esi
6501a511:	push   edi
6501a512:	jge    0x6501a51f
6501a514:	or     esi,0xffffffff
6501a517:	shr    esi,cl
6501a519:	or     DWORD PTR [ebp-0x8],0xffffffff
6501a51d:	jmp    0x6501a52c
6501a51f:	add    ecx,0xffffffe0
6501a522:	or     edx,0xffffffff
6501a525:	xor    esi,esi
6501a527:	shr    edx,cl
6501a529:	mov    DWORD PTR [ebp-0x8],edx
6501a52c:	mov    ecx,DWORD PTR ds:0x65031430
6501a532:	mov    ebx,ecx
6501a534:	jmp    0x6501a547
6501a536:	mov    edx,DWORD PTR [ebx+0x4]
6501a539:	mov    edi,DWORD PTR [ebx]
6501a53b:	and    edx,DWORD PTR [ebp-0x8]
6501a53e:	and    edi,esi
6501a540:	or     edx,edi
6501a542:	jne    0x6501a54e
6501a544:	add    ebx,0x14
6501a547:	cmp    ebx,eax
6501a549:	mov    DWORD PTR [ebp+0x8],ebx
6501a54c:	jb     0x6501a536
6501a54e:	cmp    ebx,eax
6501a550:	jne    0x6501a5d1
6501a552:	mov    ebx,DWORD PTR ds:0x65031428
6501a558:	jmp    0x6501a56b
6501a55a:	mov    edx,DWORD PTR [ebx+0x4]
6501a55d:	mov    edi,DWORD PTR [ebx]
6501a55f:	and    edx,DWORD PTR [ebp-0x8]
6501a562:	and    edi,esi
6501a564:	or     edx,edi
6501a566:	jne    0x6501a572
6501a568:	add    ebx,0x14
6501a56b:	cmp    ebx,ecx
6501a56d:	mov    DWORD PTR [ebp+0x8],ebx
6501a570:	jb     0x6501a55a
6501a572:	cmp    ebx,ecx
6501a574:	jne    0x6501a5d1
6501a576:	jmp    0x6501a584
6501a578:	cmp    DWORD PTR [ebx+0x8],0x0
6501a57c:	jne    0x6501a588
6501a57e:	add    ebx,0x14
6501a581:	mov    DWORD PTR [ebp+0x8],ebx
6501a584:	cmp    ebx,eax
6501a586:	jb     0x6501a578
6501a588:	cmp    ebx,eax
6501a58a:	jne    0x6501a5bd
6501a58c:	mov    ebx,DWORD PTR ds:0x65031428
6501a592:	jmp    0x6501a59d
6501a594:	cmp    DWORD PTR [ebx+0x8],0x0
6501a598:	jne    0x6501a5a4
6501a59a:	add    ebx,0x14
6501a59d:	cmp    ebx,ecx
6501a59f:	mov    DWORD PTR [ebp+0x8],ebx
6501a5a2:	jb     0x6501a594
6501a5a4:	cmp    ebx,ecx
6501a5a6:	jne    0x6501a5bd
6501a5a8:	call   0x6501a053
6501a5ad:	mov    ebx,eax
6501a5af:	test   ebx,ebx
6501a5b1:	mov    DWORD PTR [ebp+0x8],ebx
6501a5b4:	jne    0x6501a5bd
6501a5b6:	xor    eax,eax
6501a5b8:	jmp    0x6501a7c6
6501a5bd:	push   ebx
6501a5be:	call   0x6501a103
6501a5c3:	pop    ecx
6501a5c4:	mov    ecx,DWORD PTR [ebx+0x10]
6501a5c7:	mov    DWORD PTR [ecx],eax
6501a5c9:	mov    eax,DWORD PTR [ebx+0x10]
6501a5cc:	cmp    DWORD PTR [eax],0xffffffff
6501a5cf:	je     0x6501a5b6
6501a5d1:	mov    DWORD PTR ds:0x65031430,ebx
6501a5d7:	mov    eax,DWORD PTR [ebx+0x10]
6501a5da:	mov    edx,DWORD PTR [eax]
6501a5dc:	cmp    edx,0xffffffff
6501a5df:	mov    DWORD PTR [ebp-0x4],edx
6501a5e2:	je     0x6501a5f8
6501a5e4:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a5eb:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6501a5ef:	and    ecx,DWORD PTR [ebp-0x8]
6501a5f2:	and    edi,esi
6501a5f4:	or     ecx,edi
6501a5f6:	jne    0x6501a621
6501a5f8:	and    DWORD PTR [ebp-0x4],0x0
6501a5fc:	mov    edx,DWORD PTR [eax+0xc4]
6501a602:	lea    ecx,[eax+0x44]
6501a605:	mov    edi,DWORD PTR [ecx]
6501a607:	and    edx,DWORD PTR [ebp-0x8]
6501a60a:	and    edi,esi
6501a60c:	or     edx,edi
6501a60e:	jne    0x6501a61e
6501a610:	inc    DWORD PTR [ebp-0x4]
6501a613:	mov    edx,DWORD PTR [ecx+0x84]
6501a619:	add    ecx,0x4
6501a61c:	jmp    0x6501a605
6501a61e:	mov    edx,DWORD PTR [ebp-0x4]
6501a621:	mov    ecx,edx
6501a623:	imul   ecx,ecx,0x204
6501a629:	lea    ecx,[ecx+eax*1+0x144]
6501a630:	mov    DWORD PTR [ebp-0xc],ecx
6501a633:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6501a637:	xor    edi,edi
6501a639:	and    ecx,esi
6501a63b:	jne    0x6501a64f
6501a63d:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6501a644:	and    ecx,DWORD PTR [ebp-0x8]
6501a647:	push   0x20
6501a649:	pop    edi
6501a64a:	jmp    0x6501a64f
6501a64c:	add    ecx,ecx
6501a64e:	inc    edi
6501a64f:	test   ecx,ecx
6501a651:	jge    0x6501a64c
6501a653:	mov    ecx,DWORD PTR [ebp-0xc]
6501a656:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6501a65a:	mov    ecx,DWORD PTR [edx]
6501a65c:	sub    ecx,DWORD PTR [ebp-0x10]
6501a65f:	mov    esi,ecx
6501a661:	sar    esi,0x4
6501a664:	dec    esi
6501a665:	cmp    esi,0x3f
6501a668:	mov    DWORD PTR [ebp-0x8],ecx
6501a66b:	jle    0x6501a670
6501a66d:	push   0x3f
6501a66f:	pop    esi
6501a670:	cmp    esi,edi
6501a672:	je     0x6501a779
6501a678:	mov    ecx,DWORD PTR [edx+0x4]
6501a67b:	cmp    ecx,DWORD PTR [edx+0x8]
6501a67e:	jne    0x6501a6dc
6501a680:	cmp    edi,0x20
6501a683:	mov    ebx,0x80000000
6501a688:	jge    0x6501a6b0
6501a68a:	mov    ecx,edi
6501a68c:	shr    ebx,cl
6501a68e:	mov    ecx,DWORD PTR [ebp-0x4]
6501a691:	lea    edi,[eax+edi*1+0x4]
6501a695:	not    ebx
6501a697:	mov    DWORD PTR [ebp-0x14],ebx
6501a69a:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6501a69e:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6501a6a2:	dec    BYTE PTR [edi]
6501a6a4:	jne    0x6501a6d9
6501a6a6:	mov    ecx,DWORD PTR [ebp-0x14]
6501a6a9:	mov    ebx,DWORD PTR [ebp+0x8]
6501a6ac:	and    DWORD PTR [ebx],ecx
6501a6ae:	jmp    0x6501a6dc
6501a6b0:	lea    ecx,[edi-0x20]
6501a6b3:	shr    ebx,cl
6501a6b5:	mov    ecx,DWORD PTR [ebp-0x4]
6501a6b8:	lea    ecx,[eax+ecx*4+0xc4]
6501a6bf:	lea    edi,[eax+edi*1+0x4]
6501a6c3:	not    ebx
6501a6c5:	and    DWORD PTR [ecx],ebx
6501a6c7:	dec    BYTE PTR [edi]
6501a6c9:	mov    DWORD PTR [ebp-0x14],ebx
6501a6cc:	jne    0x6501a6d9
6501a6ce:	mov    ebx,DWORD PTR [ebp+0x8]
6501a6d1:	mov    ecx,DWORD PTR [ebp-0x14]
6501a6d4:	and    DWORD PTR [ebx+0x4],ecx
6501a6d7:	jmp    0x6501a6dc
6501a6d9:	mov    ebx,DWORD PTR [ebp+0x8]
6501a6dc:	cmp    DWORD PTR [ebp-0x8],0x0
6501a6e0:	mov    ecx,DWORD PTR [edx+0x8]
6501a6e3:	mov    edi,DWORD PTR [edx+0x4]
6501a6e6:	mov    DWORD PTR [ecx+0x4],edi
6501a6e9:	mov    ecx,DWORD PTR [edx+0x4]
6501a6ec:	mov    edi,DWORD PTR [edx+0x8]
6501a6ef:	mov    DWORD PTR [ecx+0x8],edi
6501a6f2:	je     0x6501a785
6501a6f8:	mov    ecx,DWORD PTR [ebp-0xc]
6501a6fb:	lea    ecx,[ecx+esi*8]
6501a6fe:	mov    edi,DWORD PTR [ecx+0x4]
6501a701:	mov    DWORD PTR [edx+0x8],ecx
6501a704:	mov    DWORD PTR [edx+0x4],edi
6501a707:	mov    DWORD PTR [ecx+0x4],edx
6501a70a:	mov    ecx,DWORD PTR [edx+0x4]
6501a70d:	mov    DWORD PTR [ecx+0x8],edx
6501a710:	mov    ecx,DWORD PTR [edx+0x4]
6501a713:	cmp    ecx,DWORD PTR [edx+0x8]
6501a716:	jne    0x6501a776
6501a718:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6501a71c:	mov    BYTE PTR [ebp+0xb],cl
6501a71f:	inc    cl
6501a721:	cmp    esi,0x20
6501a724:	mov    BYTE PTR [esi+eax*1+0x4],cl
6501a728:	jge    0x6501a74d
6501a72a:	cmp    BYTE PTR [ebp+0xb],0x0
6501a72e:	jne    0x6501a73b
6501a730:	mov    edi,0x80000000
6501a735:	mov    ecx,esi
6501a737:	shr    edi,cl
6501a739:	or     DWORD PTR [ebx],edi
6501a73b:	mov    ecx,esi
6501a73d:	mov    edi,0x80000000
6501a742:	shr    edi,cl
6501a744:	mov    ecx,DWORD PTR [ebp-0x4]
6501a747:	or     DWORD PTR [eax+ecx*4+0x44],edi
6501a74b:	jmp    0x6501a776
6501a74d:	cmp    BYTE PTR [ebp+0xb],0x0
6501a751:	jne    0x6501a760
6501a753:	lea    ecx,[esi-0x20]
6501a756:	mov    edi,0x80000000
6501a75b:	shr    edi,cl
6501a75d:	or     DWORD PTR [ebx+0x4],edi
6501a760:	mov    ecx,DWORD PTR [ebp-0x4]
6501a763:	lea    edi,[eax+ecx*4+0xc4]
6501a76a:	lea    ecx,[esi-0x20]
6501a76d:	mov    esi,0x80000000
6501a772:	shr    esi,cl
6501a774:	or     DWORD PTR [edi],esi
6501a776:	mov    ecx,DWORD PTR [ebp-0x8]
6501a779:	test   ecx,ecx
6501a77b:	je     0x6501a788
6501a77d:	mov    DWORD PTR [edx],ecx
6501a77f:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6501a783:	jmp    0x6501a788
6501a785:	mov    ecx,DWORD PTR [ebp-0x8]
6501a788:	mov    esi,DWORD PTR [ebp-0x10]
6501a78b:	add    edx,ecx
6501a78d:	lea    ecx,[esi+0x1]
6501a790:	mov    DWORD PTR [edx],ecx
6501a792:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6501a796:	mov    esi,DWORD PTR [ebp-0xc]
6501a799:	mov    ecx,DWORD PTR [esi]
6501a79b:	test   ecx,ecx
6501a79d:	lea    edi,[ecx+0x1]
6501a7a0:	mov    DWORD PTR [esi],edi
6501a7a2:	jne    0x6501a7be
6501a7a4:	cmp    ebx,DWORD PTR ds:0x6502dbe8
6501a7aa:	jne    0x6501a7be
6501a7ac:	mov    ecx,DWORD PTR [ebp-0x4]
6501a7af:	cmp    ecx,DWORD PTR ds:0x65031438
6501a7b5:	jne    0x6501a7be
6501a7b7:	and    DWORD PTR ds:0x6502dbe8,0x0
6501a7be:	mov    ecx,DWORD PTR [ebp-0x4]
6501a7c1:	mov    DWORD PTR [eax],ecx
6501a7c3:	lea    eax,[edx+0x4]
6501a7c6:	pop    edi
6501a7c7:	pop    esi
6501a7c8:	pop    ebx
6501a7c9:	leave  
6501a7ca:	ret    
6501a7cb:	push   ecx
6501a7cc:	push   ebx
6501a7cd:	mov    ebx,DWORD PTR [esp+0xc]
6501a7d1:	push   esi
6501a7d2:	push   edi
6501a7d3:	xor    esi,esi
6501a7d5:	xor    edi,edi
6501a7d7:	cmp    ebx,DWORD PTR [edi*8+0x6502ca78]
6501a7de:	je     0x6501a7e6
6501a7e0:	inc    edi
6501a7e1:	cmp    edi,0x17
6501a7e4:	jb     0x6501a7d7
6501a7e6:	cmp    edi,0x17
6501a7e9:	jae    0x6501a966
6501a7ef:	push   ebp
6501a7f0:	push   0x3
6501a7f2:	call   0x6501d8a0
6501a7f7:	cmp    eax,0x1
6501a7fa:	pop    ecx
6501a7fb:	je     0x6501a932
6501a801:	push   0x3
6501a803:	call   0x6501d8a0
6501a808:	test   eax,eax
6501a80a:	pop    ecx
6501a80b:	jne    0x6501a81a
6501a80d:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501a814:	je     0x6501a932
6501a81a:	cmp    ebx,0xfc
6501a820:	je     0x6501a965
6501a826:	push   0x65025338
6501a82b:	mov    ebx,0x314
6501a830:	push   ebx
6501a831:	mov    ebp,0x6502dbf0
6501a836:	push   ebp
6501a837:	call   0x65013f94
6501a83c:	add    esp,0xc
6501a83f:	test   eax,eax
6501a841:	je     0x6501a850
6501a843:	push   esi
6501a844:	push   esi
6501a845:	push   esi
6501a846:	push   esi
6501a847:	push   esi
6501a848:	call   0x65012153
6501a84d:	add    esp,0x14
6501a850:	push   0x104
6501a855:	mov    esi,0x6502dc09
6501a85a:	push   esi
6501a85b:	push   0x0
6501a85d:	mov    BYTE PTR ds:0x6502dd0d,0x0
6501a864:	call   DWORD PTR ds:0x65024160
6501a86a:	test   eax,eax
6501a86c:	jne    0x6501a894
6501a86e:	push   0x65025320
6501a873:	push   0x2fb
6501a878:	push   esi
6501a879:	call   0x65013f94
6501a87e:	add    esp,0xc
6501a881:	test   eax,eax
6501a883:	je     0x6501a894
6501a885:	xor    eax,eax
6501a887:	push   eax
6501a888:	push   eax
6501a889:	push   eax
6501a88a:	push   eax
6501a88b:	push   eax
6501a88c:	call   0x65012153
6501a891:	add    esp,0x14
6501a894:	push   esi
6501a895:	call   0x65013ea0
6501a89a:	inc    eax
6501a89b:	cmp    eax,0x3c
6501a89e:	pop    ecx
6501a89f:	jbe    0x6501a8d9
6501a8a1:	push   esi
6501a8a2:	call   0x65013ea0
6501a8a7:	sub    esi,0x3b
6501a8aa:	add    eax,esi
6501a8ac:	push   0x3
6501a8ae:	mov    ecx,0x6502df04
6501a8b3:	push   0x6502531c
6501a8b8:	sub    ecx,eax
6501a8ba:	push   ecx
6501a8bb:	push   eax
6501a8bc:	call   0x6501b926
6501a8c1:	add    esp,0x14
6501a8c4:	test   eax,eax
6501a8c6:	je     0x6501a8d9
6501a8c8:	xor    esi,esi
6501a8ca:	push   esi
6501a8cb:	push   esi
6501a8cc:	push   esi
6501a8cd:	push   esi
6501a8ce:	push   esi
6501a8cf:	call   0x65012153
6501a8d4:	add    esp,0x14
6501a8d7:	jmp    0x6501a8db
6501a8d9:	xor    esi,esi
6501a8db:	push   0x65025318
6501a8e0:	push   ebx
6501a8e1:	push   ebp
6501a8e2:	call   0x6501b86e
6501a8e7:	add    esp,0xc
6501a8ea:	test   eax,eax
6501a8ec:	je     0x6501a8fb
6501a8ee:	push   esi
6501a8ef:	push   esi
6501a8f0:	push   esi
6501a8f1:	push   esi
6501a8f2:	push   esi
6501a8f3:	call   0x65012153
6501a8f8:	add    esp,0x14
6501a8fb:	push   DWORD PTR [edi*8+0x6502ca7c]
6501a902:	push   ebx
6501a903:	push   ebp
6501a904:	call   0x6501b86e
6501a909:	add    esp,0xc
6501a90c:	test   eax,eax
6501a90e:	je     0x6501a91d
6501a910:	push   esi
6501a911:	push   esi
6501a912:	push   esi
6501a913:	push   esi
6501a914:	push   esi
6501a915:	call   0x65012153
6501a91a:	add    esp,0x14
6501a91d:	push   0x12010
6501a922:	push   0x650252f0
6501a927:	push   ebp
6501a928:	call   0x6501d6e3
6501a92d:	add    esp,0xc
6501a930:	jmp    0x6501a965
6501a932:	push   0xfffffff4
6501a934:	call   DWORD PTR ds:0x65024154
6501a93a:	mov    ebp,eax
6501a93c:	cmp    ebp,esi
6501a93e:	je     0x6501a965
6501a940:	cmp    ebp,0xffffffff
6501a943:	je     0x6501a965
6501a945:	push   0x0
6501a947:	lea    eax,[esp+0x14]
6501a94b:	push   eax
6501a94c:	lea    esi,[edi*8+0x6502ca7c]
6501a953:	push   DWORD PTR [esi]
6501a955:	call   0x65013ea0
6501a95a:	pop    ecx
6501a95b:	push   eax
6501a95c:	push   DWORD PTR [esi]
6501a95e:	push   ebp
6501a95f:	call   DWORD PTR ds:0x65024088
6501a965:	pop    ebp
6501a966:	pop    edi
6501a967:	pop    esi
6501a968:	pop    ebx
6501a969:	pop    ecx
6501a96a:	ret    
6501a96b:	push   0x3
6501a96d:	call   0x6501d8a0
6501a972:	cmp    eax,0x1
6501a975:	pop    ecx
6501a976:	je     0x6501a98d
6501a978:	push   0x3
6501a97a:	call   0x6501d8a0
6501a97f:	test   eax,eax
6501a981:	pop    ecx
6501a982:	jne    0x6501a9a3
6501a984:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501a98b:	jne    0x6501a9a3
6501a98d:	push   0xfc
6501a992:	call   0x6501a7cb
6501a997:	push   0xff
6501a99c:	call   0x6501a7cb
6501a9a1:	pop    ecx
6501a9a2:	pop    ecx
6501a9a3:	ret    
6501a9a4:	push   ebp
6501a9a5:	mov    ebp,esp
6501a9a7:	sub    esp,0x8
6501a9aa:	mov    DWORD PTR [ebp-0x4],edi
6501a9ad:	mov    DWORD PTR [ebp-0x8],esi
6501a9b0:	mov    esi,DWORD PTR [ebp+0xc]
6501a9b3:	mov    edi,DWORD PTR [ebp+0x8]
6501a9b6:	mov    ecx,DWORD PTR [ebp+0x10]
6501a9b9:	shr    ecx,0x7
6501a9bc:	jmp    0x6501a9c4
6501a9be:	lea    ebx,[ebx+0x0]
6501a9c4:	movdqa xmm0,XMMWORD PTR [esi]
6501a9c8:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6501a9cd:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6501a9d2:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6501a9d7:	movdqa XMMWORD PTR [edi],xmm0
6501a9db:	movdqa XMMWORD PTR [edi+0x10],xmm1
6501a9e0:	movdqa XMMWORD PTR [edi+0x20],xmm2
6501a9e5:	movdqa XMMWORD PTR [edi+0x30],xmm3
6501a9ea:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6501a9ef:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6501a9f4:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6501a9f9:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6501a9fe:	movdqa XMMWORD PTR [edi+0x40],xmm4
6501aa03:	movdqa XMMWORD PTR [edi+0x50],xmm5
6501aa08:	movdqa XMMWORD PTR [edi+0x60],xmm6
6501aa0d:	movdqa XMMWORD PTR [edi+0x70],xmm7
6501aa12:	lea    esi,[esi+0x80]
6501aa18:	lea    edi,[edi+0x80]
6501aa1e:	dec    ecx
6501aa1f:	jne    0x6501a9c4
6501aa21:	mov    esi,DWORD PTR [ebp-0x8]
6501aa24:	mov    edi,DWORD PTR [ebp-0x4]
6501aa27:	mov    esp,ebp
6501aa29:	pop    ebp
6501aa2a:	ret    
6501aa2b:	push   ebp
6501aa2c:	mov    ebp,esp
6501aa2e:	sub    esp,0x1c
6501aa31:	mov    DWORD PTR [ebp-0xc],edi
6501aa34:	mov    DWORD PTR [ebp-0x8],esi
6501aa37:	mov    DWORD PTR [ebp-0x4],ebx
6501aa3a:	mov    ebx,DWORD PTR [ebp+0xc]
6501aa3d:	mov    eax,ebx
6501aa3f:	cdq    
6501aa40:	mov    ecx,eax
6501aa42:	mov    eax,DWORD PTR [ebp+0x8]
6501aa45:	xor    ecx,edx
6501aa47:	sub    ecx,edx
6501aa49:	and    ecx,0xf
6501aa4c:	xor    ecx,edx
6501aa4e:	sub    ecx,edx
6501aa50:	cdq    
6501aa51:	mov    edi,eax
6501aa53:	xor    edi,edx
6501aa55:	sub    edi,edx
6501aa57:	and    edi,0xf
6501aa5a:	xor    edi,edx
6501aa5c:	sub    edi,edx
6501aa5e:	mov    edx,ecx
6501aa60:	or     edx,edi
6501aa62:	jne    0x6501aaae
6501aa64:	mov    esi,DWORD PTR [ebp+0x10]
6501aa67:	mov    ecx,esi
6501aa69:	and    ecx,0x7f
6501aa6c:	mov    DWORD PTR [ebp-0x18],ecx
6501aa6f:	cmp    esi,ecx
6501aa71:	je     0x6501aa86
6501aa73:	sub    esi,ecx
6501aa75:	push   esi
6501aa76:	push   ebx
6501aa77:	push   eax
6501aa78:	call   0x6501a9a4
6501aa7d:	add    esp,0xc
6501aa80:	mov    eax,DWORD PTR [ebp+0x8]
6501aa83:	mov    ecx,DWORD PTR [ebp-0x18]
6501aa86:	test   ecx,ecx
6501aa88:	je     0x6501ab01
6501aa8a:	mov    ebx,DWORD PTR [ebp+0x10]
6501aa8d:	mov    edx,DWORD PTR [ebp+0xc]
6501aa90:	add    edx,ebx
6501aa92:	sub    edx,ecx
6501aa94:	mov    DWORD PTR [ebp-0x14],edx
6501aa97:	add    ebx,eax
6501aa99:	sub    ebx,ecx
6501aa9b:	mov    DWORD PTR [ebp-0x10],ebx
6501aa9e:	mov    esi,DWORD PTR [ebp-0x14]
6501aaa1:	mov    edi,DWORD PTR [ebp-0x10]
6501aaa4:	mov    ecx,DWORD PTR [ebp-0x18]
6501aaa7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501aaa9:	mov    eax,DWORD PTR [ebp+0x8]
6501aaac:	jmp    0x6501ab01
6501aaae:	cmp    ecx,edi
6501aab0:	jne    0x6501aae7
6501aab2:	neg    ecx
6501aab4:	add    ecx,0x10
6501aab7:	mov    DWORD PTR [ebp-0x1c],ecx
6501aaba:	mov    esi,DWORD PTR [ebp+0xc]
6501aabd:	mov    edi,DWORD PTR [ebp+0x8]
6501aac0:	mov    ecx,DWORD PTR [ebp-0x1c]
6501aac3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501aac5:	mov    ecx,DWORD PTR [ebp+0x8]
6501aac8:	add    ecx,DWORD PTR [ebp-0x1c]
6501aacb:	mov    edx,DWORD PTR [ebp+0xc]
6501aace:	add    edx,DWORD PTR [ebp-0x1c]
6501aad1:	mov    eax,DWORD PTR [ebp+0x10]
6501aad4:	sub    eax,DWORD PTR [ebp-0x1c]
6501aad7:	push   eax
6501aad8:	push   edx
6501aad9:	push   ecx
6501aada:	call   0x6501aa2b
6501aadf:	add    esp,0xc
6501aae2:	mov    eax,DWORD PTR [ebp+0x8]
6501aae5:	jmp    0x6501ab01
6501aae7:	mov    esi,DWORD PTR [ebp+0xc]
6501aaea:	mov    edi,DWORD PTR [ebp+0x8]
6501aaed:	mov    ecx,DWORD PTR [ebp+0x10]
6501aaf0:	mov    edx,ecx
6501aaf2:	shr    ecx,0x2
6501aaf5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501aaf7:	mov    ecx,edx
6501aaf9:	and    ecx,0x3
6501aafc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6501aafe:	mov    eax,DWORD PTR [ebp+0x8]
6501ab01:	mov    ebx,DWORD PTR [ebp-0x4]
6501ab04:	mov    esi,DWORD PTR [ebp-0x8]
6501ab07:	mov    edi,DWORD PTR [ebp-0xc]
6501ab0a:	mov    esp,ebp
6501ab0c:	pop    ebp
6501ab0d:	ret    
6501ab0e:	int3   
6501ab0f:	int3   
6501ab10:	push   ebx
6501ab11:	push   esi
6501ab12:	push   edi
6501ab13:	mov    edx,DWORD PTR [esp+0x10]
6501ab17:	mov    eax,DWORD PTR [esp+0x14]
6501ab1b:	mov    ecx,DWORD PTR [esp+0x18]
6501ab1f:	push   ebp
6501ab20:	push   edx
6501ab21:	push   eax
6501ab22:	push   ecx
6501ab23:	push   ecx
6501ab24:	push   0x6501aba0
6501ab29:	push   DWORD PTR fs:0x0
6501ab30:	mov    eax,ds:0x6502c09c
6501ab35:	xor    eax,esp
6501ab37:	mov    DWORD PTR [esp+0x8],eax
6501ab3b:	mov    DWORD PTR fs:0x0,esp
6501ab42:	mov    eax,DWORD PTR [esp+0x30]
6501ab46:	mov    ebx,DWORD PTR [eax+0x8]
6501ab49:	mov    ecx,DWORD PTR [esp+0x2c]
6501ab4d:	xor    ebx,DWORD PTR [ecx]
6501ab4f:	mov    esi,DWORD PTR [eax+0xc]
6501ab52:	cmp    esi,0xfffffffe
6501ab55:	je     0x6501ab92
6501ab57:	mov    edx,DWORD PTR [esp+0x34]
6501ab5b:	cmp    edx,0xfffffffe
6501ab5e:	je     0x6501ab64
6501ab60:	cmp    esi,edx
6501ab62:	jbe    0x6501ab92
6501ab64:	lea    esi,[esi+esi*2]
6501ab67:	lea    ebx,[ebx+esi*4+0x10]
6501ab6b:	mov    ecx,DWORD PTR [ebx]
6501ab6d:	mov    DWORD PTR [eax+0xc],ecx
6501ab70:	cmp    DWORD PTR [ebx+0x4],0x0
6501ab74:	jne    0x6501ab42
6501ab76:	push   0x101
6501ab7b:	mov    eax,DWORD PTR [ebx+0x8]
6501ab7e:	call   0x6501afc1
6501ab83:	mov    ecx,0x1
6501ab88:	mov    eax,DWORD PTR [ebx+0x8]
6501ab8b:	call   0x6501afe0
6501ab90:	jmp    0x6501ab42
6501ab92:	pop    DWORD PTR fs:0x0
6501ab99:	add    esp,0x18
6501ab9c:	pop    edi
6501ab9d:	pop    esi
6501ab9e:	pop    ebx
6501ab9f:	ret    
6501aba0:	mov    ecx,DWORD PTR [esp+0x4]
6501aba4:	test   DWORD PTR [ecx+0x4],0x6
6501abab:	mov    eax,0x1
6501abb0:	je     0x6501abe5
6501abb2:	mov    eax,DWORD PTR [esp+0x8]
6501abb6:	mov    ecx,DWORD PTR [eax+0x8]
6501abb9:	xor    ecx,eax
6501abbb:	call   0x6501275c
6501abc0:	push   ebp
6501abc1:	mov    ebp,DWORD PTR [eax+0x18]
6501abc4:	push   DWORD PTR [eax+0xc]
6501abc7:	push   DWORD PTR [eax+0x10]
6501abca:	push   DWORD PTR [eax+0x14]
6501abcd:	call   0x6501ab10
6501abd2:	add    esp,0xc
6501abd5:	pop    ebp
6501abd6:	mov    eax,DWORD PTR [esp+0x8]
6501abda:	mov    edx,DWORD PTR [esp+0x10]
6501abde:	mov    DWORD PTR [edx],eax
6501abe0:	mov    eax,0x3
6501abe5:	ret    
6501abe6:	push   ebp
6501abe7:	mov    ecx,DWORD PTR [esp+0x8]
6501abeb:	mov    ebp,DWORD PTR [ecx]
6501abed:	push   DWORD PTR [ecx+0x1c]
6501abf0:	push   DWORD PTR [ecx+0x18]
6501abf3:	push   DWORD PTR [ecx+0x28]
6501abf6:	call   0x6501ab10
6501abfb:	add    esp,0xc
6501abfe:	pop    ebp
6501abff:	ret    0x4
6501ac02:	push   ebp
6501ac03:	push   esi
6501ac04:	push   edi
6501ac05:	push   ebx
6501ac06:	mov    ebp,edx
6501ac08:	xor    eax,eax
6501ac0a:	xor    ebx,ebx
6501ac0c:	xor    edx,edx
6501ac0e:	xor    esi,esi
6501ac10:	xor    edi,edi
6501ac12:	call   ecx
6501ac14:	pop    ebx
6501ac15:	pop    edi
6501ac16:	pop    esi
6501ac17:	pop    ebp
6501ac18:	ret    
6501ac19:	mov    ebp,edx
6501ac1b:	mov    esi,ecx
6501ac1d:	mov    eax,ecx
6501ac1f:	push   0x1
6501ac21:	call   0x6501afc1
6501ac26:	xor    eax,eax
6501ac28:	xor    ebx,ebx
6501ac2a:	xor    ecx,ecx
6501ac2c:	xor    edx,edx
6501ac2e:	xor    edi,edi
6501ac30:	jmp    esi
6501ac32:	push   ebp
6501ac33:	mov    ebp,esp
6501ac35:	push   ebx
6501ac36:	push   esi
6501ac37:	push   edi
6501ac38:	push   0x0
6501ac3a:	push   0x0
6501ac3c:	push   0x6501ac47
6501ac41:	push   ecx
6501ac42:	call   0x6501e94c
6501ac47:	pop    edi
6501ac48:	pop    esi
6501ac49:	pop    ebx
6501ac4a:	pop    ebp
6501ac4b:	ret    
6501ac4c:	push   ebp
6501ac4d:	mov    ebp,DWORD PTR [esp+0x8]
6501ac51:	push   edx
6501ac52:	push   ecx
6501ac53:	push   DWORD PTR [esp+0x14]
6501ac57:	call   0x6501ab10
6501ac5c:	add    esp,0xc
6501ac5f:	pop    ebp
6501ac60:	ret    0x8
6501ac63:	int3   
6501ac64:	int3   
6501ac65:	int3   
6501ac66:	int3   
6501ac67:	int3   
6501ac68:	int3   
6501ac69:	int3   
6501ac6a:	int3   
6501ac6b:	int3   
6501ac6c:	int3   
6501ac6d:	int3   
6501ac6e:	int3   
6501ac6f:	int3   
6501ac70:	mov    ecx,DWORD PTR [esp+0x4]
6501ac74:	cmp    WORD PTR [ecx],0x5a4d
6501ac79:	je     0x6501ac7e
6501ac7b:	xor    eax,eax
6501ac7d:	ret    
6501ac7e:	mov    eax,DWORD PTR [ecx+0x3c]
6501ac81:	add    eax,ecx
6501ac83:	cmp    DWORD PTR [eax],0x4550
6501ac89:	jne    0x6501ac7b
6501ac8b:	xor    ecx,ecx
6501ac8d:	cmp    WORD PTR [eax+0x18],0x10b
6501ac93:	sete   cl
6501ac96:	mov    eax,ecx
6501ac98:	ret    
6501ac99:	int3   
6501ac9a:	int3   
6501ac9b:	int3   
6501ac9c:	int3   
6501ac9d:	int3   
6501ac9e:	int3   
6501ac9f:	int3   
6501aca0:	mov    eax,DWORD PTR [esp+0x4]
6501aca4:	mov    ecx,DWORD PTR [eax+0x3c]
6501aca7:	add    ecx,eax
6501aca9:	movzx  eax,WORD PTR [ecx+0x14]
6501acad:	push   ebx
6501acae:	push   esi
6501acaf:	movzx  esi,WORD PTR [ecx+0x6]
6501acb3:	xor    edx,edx
6501acb5:	test   esi,esi
6501acb7:	push   edi
6501acb8:	lea    eax,[eax+ecx*1+0x18]
6501acbc:	jbe    0x6501acdc
6501acbe:	mov    edi,DWORD PTR [esp+0x14]
6501acc2:	mov    ecx,DWORD PTR [eax+0xc]
6501acc5:	cmp    edi,ecx
6501acc7:	jb     0x6501acd2
6501acc9:	mov    ebx,DWORD PTR [eax+0x8]
6501accc:	add    ebx,ecx
6501acce:	cmp    edi,ebx
6501acd0:	jb     0x6501acde
6501acd2:	add    edx,0x1
6501acd5:	add    eax,0x28
6501acd8:	cmp    edx,esi
6501acda:	jb     0x6501acc2
6501acdc:	xor    eax,eax
6501acde:	pop    edi
6501acdf:	pop    esi
6501ace0:	pop    ebx
6501ace1:	ret    
6501ace2:	int3   
6501ace3:	int3   
6501ace4:	int3   
6501ace5:	int3   
6501ace6:	int3   
6501ace7:	int3   
6501ace8:	int3   
6501ace9:	int3   
6501acea:	int3   
6501aceb:	int3   
6501acec:	int3   
6501aced:	int3   
6501acee:	int3   
6501acef:	int3   
6501acf0:	push   ebp
6501acf1:	mov    ebp,esp
6501acf3:	push   0xfffffffe
6501acf5:	push   0x65029b70
6501acfa:	push   0x65013d00
6501acff:	mov    eax,fs:0x0
6501ad05:	push   eax
6501ad06:	sub    esp,0x8
6501ad09:	push   ebx
6501ad0a:	push   esi
6501ad0b:	push   edi
6501ad0c:	mov    eax,ds:0x6502c09c
6501ad11:	xor    DWORD PTR [ebp-0x8],eax
6501ad14:	xor    eax,ebp
6501ad16:	push   eax
6501ad17:	lea    eax,[ebp-0x10]
6501ad1a:	mov    fs:0x0,eax
6501ad20:	mov    DWORD PTR [ebp-0x18],esp
6501ad23:	mov    DWORD PTR [ebp-0x4],0x0
6501ad2a:	push   0x65000000
6501ad2f:	call   0x6501ac70
6501ad34:	add    esp,0x4
6501ad37:	test   eax,eax
6501ad39:	je     0x6501ad90
6501ad3b:	mov    eax,DWORD PTR [ebp+0x8]
6501ad3e:	sub    eax,0x65000000
6501ad43:	push   eax
6501ad44:	push   0x65000000
6501ad49:	call   0x6501aca0
6501ad4e:	add    esp,0x8
6501ad51:	test   eax,eax
6501ad53:	je     0x6501ad90
6501ad55:	mov    eax,DWORD PTR [eax+0x24]
6501ad58:	shr    eax,0x1f
6501ad5b:	not    eax
6501ad5d:	and    eax,0x1
6501ad60:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501ad67:	mov    ecx,DWORD PTR [ebp-0x10]
6501ad6a:	mov    DWORD PTR fs:0x0,ecx
6501ad71:	pop    ecx
6501ad72:	pop    edi
6501ad73:	pop    esi
6501ad74:	pop    ebx
6501ad75:	mov    esp,ebp
6501ad77:	pop    ebp
6501ad78:	ret    
6501ad79:	mov    eax,DWORD PTR [ebp-0x14]
6501ad7c:	mov    ecx,DWORD PTR [eax]
6501ad7e:	mov    eax,DWORD PTR [ecx]
6501ad80:	xor    edx,edx
6501ad82:	cmp    eax,0xc0000005
6501ad87:	sete   dl
6501ad8a:	mov    eax,edx
6501ad8c:	ret    
6501ad8d:	mov    esp,DWORD PTR [ebp-0x18]
6501ad90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501ad97:	xor    eax,eax
6501ad99:	mov    ecx,DWORD PTR [ebp-0x10]
6501ad9c:	mov    DWORD PTR fs:0x0,ecx
6501ada3:	pop    ecx
6501ada4:	pop    edi
6501ada5:	pop    esi
6501ada6:	pop    ebx
6501ada7:	mov    esp,ebp
6501ada9:	pop    ebp
6501adaa:	ret    
6501adab:	xor    eax,eax
6501adad:	inc    eax
6501adae:	cmp    DWORD PTR [esp+0x4],0x0
6501adb3:	jne    0x6501adb7
6501adb5:	xor    eax,eax
6501adb7:	ret    
6501adb8:	push   ebp
6501adb9:	lea    ebp,[esp-0x2a8]
6501adc0:	sub    esp,0x328
6501adc6:	mov    eax,ds:0x6502c09c
6501adcb:	xor    eax,ebp
6501adcd:	mov    DWORD PTR [ebp+0x2a4],eax
6501add3:	test   BYTE PTR ds:0x6502cb30,0x1
6501adda:	push   esi
6501addb:	je     0x6501ade5
6501addd:	push   0xa
6501addf:	call   0x6501a7cb
6501ade4:	pop    ecx
6501ade5:	call   0x6501b16d
6501adea:	test   eax,eax
6501adec:	je     0x6501adf6
6501adee:	push   0x16
6501adf0:	call   0x6501b17a
6501adf5:	pop    ecx
6501adf6:	test   BYTE PTR ds:0x6502cb30,0x2
6501adfd:	je     0x6501aea3
6501ae03:	mov    DWORD PTR [ebp+0x88],eax
6501ae09:	mov    DWORD PTR [ebp+0x84],ecx
6501ae0f:	mov    DWORD PTR [ebp+0x80],edx
6501ae15:	mov    DWORD PTR [ebp+0x7c],ebx
6501ae18:	mov    DWORD PTR [ebp+0x78],esi
6501ae1b:	mov    DWORD PTR [ebp+0x74],edi
6501ae1e:	data16 mov WORD PTR [ebp+0xa0],ss
6501ae25:	data16 mov WORD PTR [ebp+0x94],cs
6501ae2c:	data16 mov WORD PTR [ebp+0x70],ds
6501ae30:	data16 mov WORD PTR [ebp+0x6c],es
6501ae34:	data16 mov WORD PTR [ebp+0x68],fs
6501ae38:	data16 mov WORD PTR [ebp+0x64],gs
6501ae3c:	pushf  
6501ae3d:	pop    DWORD PTR [ebp+0x98]
6501ae43:	mov    esi,DWORD PTR [ebp+0x2ac]
6501ae49:	lea    eax,[ebp+0x2ac]
6501ae4f:	mov    DWORD PTR [ebp+0x9c],eax
6501ae55:	mov    DWORD PTR [ebp-0x28],0x10001
6501ae5c:	mov    DWORD PTR [ebp+0x90],esi
6501ae62:	mov    eax,DWORD PTR [eax-0x4]
6501ae65:	push   0x50
6501ae67:	mov    DWORD PTR [ebp+0x8c],eax
6501ae6d:	lea    eax,[ebp-0x80]
6501ae70:	push   0x0
6501ae72:	push   eax
6501ae73:	call   0x65012de0
6501ae78:	lea    eax,[ebp-0x80]
6501ae7b:	add    esp,0xc
6501ae7e:	mov    DWORD PTR [ebp-0x30],eax
6501ae81:	lea    eax,[ebp-0x28]
6501ae84:	push   0x0
6501ae86:	mov    DWORD PTR [ebp-0x80],0x40000015
6501ae8d:	mov    DWORD PTR [ebp-0x74],esi
6501ae90:	mov    DWORD PTR [ebp-0x2c],eax
6501ae93:	call   DWORD PTR ds:0x65024110
6501ae99:	lea    eax,[ebp-0x30]
6501ae9c:	push   eax
6501ae9d:	call   DWORD PTR ds:0x6502410c
6501aea3:	push   0x3
6501aea5:	call   0x65015db6
6501aeaa:	int3   
6501aeab:	int3   
6501aeac:	push   ebp
6501aead:	mov    ebp,esp
6501aeaf:	push   ebx
6501aeb0:	push   esi
6501aeb1:	push   edi
6501aeb2:	push   ebp
6501aeb3:	push   0x0
6501aeb5:	push   0x0
6501aeb7:	push   0x6501aec4
6501aebc:	push   DWORD PTR [ebp+0x8]
6501aebf:	call   0x6501e94c
6501aec4:	pop    ebp
6501aec5:	pop    edi
6501aec6:	pop    esi
6501aec7:	pop    ebx
6501aec8:	mov    esp,ebp
6501aeca:	pop    ebp
6501aecb:	ret    
6501aecc:	mov    ecx,DWORD PTR [esp+0x4]
6501aed0:	test   DWORD PTR [ecx+0x4],0x6
6501aed7:	mov    eax,0x1
6501aedc:	je     0x6501af10
6501aede:	mov    eax,DWORD PTR [esp+0x14]
6501aee2:	mov    ecx,DWORD PTR [eax-0x4]
6501aee5:	xor    ecx,eax
6501aee7:	call   0x6501275c
6501aeec:	push   ebp
6501aeed:	mov    ebp,DWORD PTR [eax+0x10]
6501aef0:	mov    edx,DWORD PTR [eax+0x28]
6501aef3:	push   edx
6501aef4:	mov    edx,DWORD PTR [eax+0x24]
6501aef7:	push   edx
6501aef8:	call   0x6501af11
6501aefd:	add    esp,0x8
6501af00:	pop    ebp
6501af01:	mov    eax,DWORD PTR [esp+0x8]
6501af05:	mov    edx,DWORD PTR [esp+0x10]
6501af09:	mov    DWORD PTR [edx],eax
6501af0b:	mov    eax,0x3
6501af10:	ret    
6501af11:	push   ebx
6501af12:	push   esi
6501af13:	push   edi
6501af14:	mov    eax,DWORD PTR [esp+0x10]
6501af18:	push   ebp
6501af19:	push   eax
6501af1a:	push   0xfffffffe
6501af1c:	push   0x6501aecc
6501af21:	push   DWORD PTR fs:0x0
6501af28:	mov    eax,ds:0x6502c09c
6501af2d:	xor    eax,esp
6501af2f:	push   eax
6501af30:	lea    eax,[esp+0x4]
6501af34:	mov    fs:0x0,eax
6501af3a:	mov    eax,DWORD PTR [esp+0x28]
6501af3e:	mov    ebx,DWORD PTR [eax+0x8]
6501af41:	mov    esi,DWORD PTR [eax+0xc]
6501af44:	cmp    esi,0xffffffff
6501af47:	je     0x6501af83
6501af49:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6501af4e:	je     0x6501af56
6501af50:	cmp    esi,DWORD PTR [esp+0x2c]
6501af54:	jbe    0x6501af83
6501af56:	lea    esi,[esi+esi*2]
6501af59:	mov    ecx,DWORD PTR [ebx+esi*4]
6501af5c:	mov    DWORD PTR [esp+0xc],ecx
6501af60:	mov    DWORD PTR [eax+0xc],ecx
6501af63:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6501af68:	jne    0x6501af81
6501af6a:	push   0x101
6501af6f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501af73:	call   0x6501afc1
6501af78:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6501af7c:	call   0x6501afe0
6501af81:	jmp    0x6501af3a
6501af83:	mov    ecx,DWORD PTR [esp+0x4]
6501af87:	mov    DWORD PTR fs:0x0,ecx
6501af8e:	add    esp,0x18
6501af91:	pop    edi
6501af92:	pop    esi
6501af93:	pop    ebx
6501af94:	ret    
6501af95:	xor    eax,eax
6501af97:	mov    ecx,DWORD PTR fs:0x0
6501af9e:	cmp    DWORD PTR [ecx+0x4],0x6501aecc
6501afa5:	jne    0x6501afb7
6501afa7:	mov    edx,DWORD PTR [ecx+0xc]
6501afaa:	mov    edx,DWORD PTR [edx+0xc]
6501afad:	cmp    DWORD PTR [ecx+0x8],edx
6501afb0:	jne    0x6501afb7
6501afb2:	mov    eax,0x1
6501afb7:	ret    
6501afb8:	push   ebx
6501afb9:	push   ecx
6501afba:	mov    ebx,0x6502cb34
6501afbf:	jmp    0x6501afcc
6501afc1:	push   ebx
6501afc2:	push   ecx
6501afc3:	mov    ebx,0x6502cb34
6501afc8:	mov    ecx,DWORD PTR [esp+0xc]
6501afcc:	mov    DWORD PTR [ebx+0x8],ecx
6501afcf:	mov    DWORD PTR [ebx+0x4],eax
6501afd2:	mov    DWORD PTR [ebx+0xc],ebp
6501afd5:	push   ebp
6501afd6:	push   ecx
6501afd7:	push   eax
6501afd8:	pop    eax
6501afd9:	pop    ecx
6501afda:	pop    ebp
6501afdb:	pop    ecx
6501afdc:	pop    ebx
6501afdd:	ret    0x4
6501afe0:	call   eax
6501afe2:	ret    
6501afe3:	push   0xc
6501afe5:	push   0x65029b90
6501afea:	call   0x65013ca0
6501afef:	mov    ecx,DWORD PTR [ebp+0x8]
6501aff2:	xor    edi,edi
6501aff4:	cmp    ecx,edi
6501aff6:	jbe    0x6501b026
6501aff8:	push   0xffffffe0
6501affa:	pop    eax
6501affb:	xor    edx,edx
6501affd:	div    ecx
6501afff:	cmp    eax,DWORD PTR [ebp+0xc]
6501b002:	sbb    eax,eax
6501b004:	inc    eax
6501b005:	jne    0x6501b026
6501b007:	call   0x650143a0
6501b00c:	mov    DWORD PTR [eax],0xc
6501b012:	push   edi
6501b013:	push   edi
6501b014:	push   edi
6501b015:	push   edi
6501b016:	push   edi
6501b017:	call   0x6501224f
6501b01c:	add    esp,0x14
6501b01f:	xor    eax,eax
6501b021:	jmp    0x6501b0fb
6501b026:	imul   ecx,DWORD PTR [ebp+0xc]
6501b02a:	mov    esi,ecx
6501b02c:	mov    DWORD PTR [ebp+0x8],esi
6501b02f:	cmp    esi,edi
6501b031:	jne    0x6501b036
6501b033:	xor    esi,esi
6501b035:	inc    esi
6501b036:	xor    ebx,ebx
6501b038:	mov    DWORD PTR [ebp-0x1c],ebx
6501b03b:	cmp    esi,0xffffffe0
6501b03e:	ja     0x6501b0a9
6501b040:	cmp    DWORD PTR ds:0x6503143c,0x3
6501b047:	jne    0x6501b094
6501b049:	add    esi,0xf
6501b04c:	and    esi,0xfffffff0
6501b04f:	mov    DWORD PTR [ebp+0xc],esi
6501b052:	mov    eax,DWORD PTR [ebp+0x8]
6501b055:	cmp    eax,DWORD PTR ds:0x6503142c
6501b05b:	ja     0x6501b094
6501b05d:	push   0x4
6501b05f:	call   0x65019c98
6501b064:	pop    ecx
6501b065:	mov    DWORD PTR [ebp-0x4],edi
6501b068:	push   DWORD PTR [ebp+0x8]
6501b06b:	call   0x6501a4e8
6501b070:	pop    ecx
6501b071:	mov    DWORD PTR [ebp-0x1c],eax
6501b074:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b07b:	call   0x6501b0df
6501b080:	mov    ebx,DWORD PTR [ebp-0x1c]
6501b083:	cmp    ebx,edi
6501b085:	je     0x6501b098
6501b087:	push   DWORD PTR [ebp+0x8]
6501b08a:	push   edi
6501b08b:	push   ebx
6501b08c:	call   0x65012de0
6501b091:	add    esp,0xc
6501b094:	cmp    ebx,edi
6501b096:	jne    0x6501b0f9
6501b098:	push   esi
6501b099:	push   0x8
6501b09b:	push   DWORD PTR ds:0x6502da8c
6501b0a1:	call   DWORD PTR ds:0x650240f4
6501b0a7:	mov    ebx,eax
6501b0a9:	cmp    ebx,edi
6501b0ab:	jne    0x6501b0f9
6501b0ad:	cmp    DWORD PTR ds:0x6502df04,edi
6501b0b3:	je     0x6501b0e8
6501b0b5:	push   esi
6501b0b6:	call   0x65014a1b
6501b0bb:	pop    ecx
6501b0bc:	test   eax,eax
6501b0be:	jne    0x6501b036
6501b0c4:	mov    eax,DWORD PTR [ebp+0x10]
6501b0c7:	cmp    eax,edi
6501b0c9:	je     0x6501b01f
6501b0cf:	mov    DWORD PTR [eax],0xc
6501b0d5:	jmp    0x6501b01f
6501b0da:	xor    edi,edi
6501b0dc:	mov    esi,DWORD PTR [ebp+0xc]
6501b0df:	push   0x4
6501b0e1:	call   0x65019bc0
6501b0e6:	pop    ecx
6501b0e7:	ret    
6501b0e8:	cmp    ebx,edi
6501b0ea:	jne    0x6501b0f9
6501b0ec:	mov    eax,DWORD PTR [ebp+0x10]
6501b0ef:	cmp    eax,edi
6501b0f1:	je     0x6501b0f9
6501b0f3:	mov    DWORD PTR [eax],0xc
6501b0f9:	mov    eax,ebx
6501b0fb:	call   0x65013ce5
6501b100:	ret    
6501b101:	push   esi
6501b102:	push   edi
6501b103:	xor    edi,edi
6501b105:	lea    esi,[edi+0x6502cb44]
6501b10b:	push   DWORD PTR [esi]
6501b10d:	call   0x65014458
6501b112:	add    edi,0x4
6501b115:	cmp    edi,0x28
6501b118:	pop    ecx
6501b119:	mov    DWORD PTR [esi],eax
6501b11b:	jb     0x6501b105
6501b11d:	pop    edi
6501b11e:	pop    esi
6501b11f:	ret    
6501b120:	mov    eax,DWORD PTR [esp+0x4]
6501b124:	mov    ds:0x6502df44,eax
6501b129:	mov    ds:0x6502df48,eax
6501b12e:	mov    ds:0x6502df4c,eax
6501b133:	mov    ds:0x6502df50,eax
6501b138:	ret    
6501b139:	mov    eax,DWORD PTR [esp+0x4]
6501b13d:	mov    ecx,DWORD PTR ds:0x6502c94c
6501b143:	push   esi
6501b144:	cmp    DWORD PTR [eax+0x4],edx
6501b147:	je     0x6501b159
6501b149:	mov    esi,ecx
6501b14b:	imul   esi,esi,0xc
6501b14e:	add    esi,DWORD PTR [esp+0x8]
6501b152:	add    eax,0xc
6501b155:	cmp    eax,esi
6501b157:	jb     0x6501b144
6501b159:	imul   ecx,ecx,0xc
6501b15c:	add    ecx,DWORD PTR [esp+0x8]
6501b160:	pop    esi
6501b161:	cmp    eax,ecx
6501b163:	jae    0x6501b16a
6501b165:	cmp    DWORD PTR [eax+0x4],edx
6501b168:	je     0x6501b16c
6501b16a:	xor    eax,eax
6501b16c:	ret    
6501b16d:	push   DWORD PTR ds:0x6502df4c
6501b173:	call   0x650144cf
6501b178:	pop    ecx
6501b179:	ret    
6501b17a:	push   0x20
6501b17c:	push   0x65029bb0
6501b181:	call   0x65013ca0
6501b186:	xor    edi,edi
6501b188:	mov    DWORD PTR [ebp-0x1c],edi
6501b18b:	mov    DWORD PTR [ebp-0x28],edi
6501b18e:	mov    ebx,DWORD PTR [ebp+0x8]
6501b191:	cmp    ebx,0xb
6501b194:	jg     0x6501b1e2
6501b196:	je     0x6501b1ad
6501b198:	mov    eax,ebx
6501b19a:	push   0x2
6501b19c:	pop    ecx
6501b19d:	sub    eax,ecx
6501b19f:	je     0x6501b1c3
6501b1a1:	sub    eax,ecx
6501b1a3:	je     0x6501b1ad
6501b1a5:	sub    eax,ecx
6501b1a7:	je     0x6501b20d
6501b1a9:	sub    eax,ecx
6501b1ab:	jne    0x6501b1f1
6501b1ad:	call   0x65014674
6501b1b2:	mov    edi,eax
6501b1b4:	mov    DWORD PTR [ebp-0x28],edi
6501b1b7:	test   edi,edi
6501b1b9:	jne    0x6501b1cf
6501b1bb:	or     eax,0xffffffff
6501b1be:	jmp    0x6501b324
6501b1c3:	mov    esi,0x6502df44
6501b1c8:	mov    eax,ds:0x6502df44
6501b1cd:	jmp    0x6501b22f
6501b1cf:	push   DWORD PTR [edi+0x5c]
6501b1d2:	mov    edx,ebx
6501b1d4:	call   0x6501b139
6501b1d9:	mov    esi,eax
6501b1db:	add    esi,0x8
6501b1de:	mov    eax,DWORD PTR [esi]
6501b1e0:	jmp    0x6501b23c
6501b1e2:	mov    eax,ebx
6501b1e4:	sub    eax,0xf
6501b1e7:	je     0x6501b225
6501b1e9:	sub    eax,0x6
6501b1ec:	je     0x6501b219
6501b1ee:	dec    eax
6501b1ef:	je     0x6501b20d
6501b1f1:	call   0x650143a0
6501b1f6:	mov    DWORD PTR [eax],0x16
6501b1fc:	xor    eax,eax
6501b1fe:	push   eax
6501b1ff:	push   eax
6501b200:	push   eax
6501b201:	push   eax
6501b202:	push   eax
6501b203:	call   0x6501224f
6501b208:	add    esp,0x14
6501b20b:	jmp    0x6501b1bb
6501b20d:	mov    esi,0x6502df4c
6501b212:	mov    eax,ds:0x6502df4c
6501b217:	jmp    0x6501b22f
6501b219:	mov    esi,0x6502df48
6501b21e:	mov    eax,ds:0x6502df48
6501b223:	jmp    0x6501b22f
6501b225:	mov    esi,0x6502df50
6501b22a:	mov    eax,ds:0x6502df50
6501b22f:	mov    DWORD PTR [ebp-0x1c],0x1
6501b236:	push   eax
6501b237:	call   0x650144cf
6501b23c:	mov    DWORD PTR [ebp-0x20],eax
6501b23f:	pop    ecx
6501b240:	xor    eax,eax
6501b242:	cmp    DWORD PTR [ebp-0x20],0x1
6501b246:	je     0x6501b324
6501b24c:	cmp    DWORD PTR [ebp-0x20],eax
6501b24f:	jne    0x6501b258
6501b251:	push   0x3
6501b253:	call   0x65015db6
6501b258:	cmp    DWORD PTR [ebp-0x1c],eax
6501b25b:	je     0x6501b264
6501b25d:	push   eax
6501b25e:	call   0x65019c98
6501b263:	pop    ecx
6501b264:	xor    eax,eax
6501b266:	mov    DWORD PTR [ebp-0x4],eax
6501b269:	cmp    ebx,0x8
6501b26c:	je     0x6501b278
6501b26e:	cmp    ebx,0xb
6501b271:	je     0x6501b278
6501b273:	cmp    ebx,0x4
6501b276:	jne    0x6501b293
6501b278:	mov    ecx,DWORD PTR [edi+0x60]
6501b27b:	mov    DWORD PTR [ebp-0x2c],ecx
6501b27e:	mov    DWORD PTR [edi+0x60],eax
6501b281:	cmp    ebx,0x8
6501b284:	jne    0x6501b2c6
6501b286:	mov    ecx,DWORD PTR [edi+0x64]
6501b289:	mov    DWORD PTR [ebp-0x30],ecx
6501b28c:	mov    DWORD PTR [edi+0x64],0x8c
6501b293:	cmp    ebx,0x8
6501b296:	jne    0x6501b2c6
6501b298:	mov    ecx,DWORD PTR ds:0x6502c940
6501b29e:	mov    DWORD PTR [ebp-0x24],ecx
6501b2a1:	mov    ecx,DWORD PTR ds:0x6502c944
6501b2a7:	mov    edx,DWORD PTR ds:0x6502c940
6501b2ad:	add    ecx,edx
6501b2af:	cmp    DWORD PTR [ebp-0x24],ecx
6501b2b2:	jge    0x6501b2cd
6501b2b4:	mov    ecx,DWORD PTR [ebp-0x24]
6501b2b7:	imul   ecx,ecx,0xc
6501b2ba:	mov    edx,DWORD PTR [edi+0x5c]
6501b2bd:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6501b2c1:	inc    DWORD PTR [ebp-0x24]
6501b2c4:	jmp    0x6501b2a1
6501b2c6:	call   0x650144c6
6501b2cb:	mov    DWORD PTR [esi],eax
6501b2cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b2d4:	call   0x6501b2ee
6501b2d9:	cmp    ebx,0x8
6501b2dc:	jne    0x6501b2fd
6501b2de:	push   DWORD PTR [edi+0x64]
6501b2e1:	push   ebx
6501b2e2:	call   DWORD PTR [ebp-0x20]
6501b2e5:	pop    ecx
6501b2e6:	jmp    0x6501b301
6501b2e8:	mov    ebx,DWORD PTR [ebp+0x8]
6501b2eb:	mov    edi,DWORD PTR [ebp-0x28]
6501b2ee:	cmp    DWORD PTR [ebp-0x1c],0x0
6501b2f2:	je     0x6501b2fc
6501b2f4:	push   0x0
6501b2f6:	call   0x65019bc0
6501b2fb:	pop    ecx
6501b2fc:	ret    
6501b2fd:	push   ebx
6501b2fe:	call   DWORD PTR [ebp-0x20]
6501b301:	pop    ecx
6501b302:	cmp    ebx,0x8
6501b305:	je     0x6501b311
6501b307:	cmp    ebx,0xb
6501b30a:	je     0x6501b311
6501b30c:	cmp    ebx,0x4
6501b30f:	jne    0x6501b322
6501b311:	mov    eax,DWORD PTR [ebp-0x2c]
6501b314:	mov    DWORD PTR [edi+0x60],eax
6501b317:	cmp    ebx,0x8
6501b31a:	jne    0x6501b322
6501b31c:	mov    eax,DWORD PTR [ebp-0x30]
6501b31f:	mov    DWORD PTR [edi+0x64],eax
6501b322:	xor    eax,eax
6501b324:	call   0x65013ce5
6501b329:	ret    
6501b32a:	mov    eax,DWORD PTR [esp+0x4]
6501b32e:	mov    ds:0x6502df58,eax
6501b333:	ret    
6501b334:	mov    eax,DWORD PTR [esp+0x4]
6501b338:	mov    ds:0x6502df64,eax
6501b33d:	ret    
6501b33e:	mov    eax,DWORD PTR [esp+0x4]
6501b342:	mov    ds:0x6502df68,eax
6501b347:	ret    
6501b348:	push   DWORD PTR [esp+0x4]
6501b34c:	call   DWORD PTR ds:0x6502401c
6501b352:	xor    eax,eax
6501b354:	inc    eax
6501b355:	ret    0x8
6501b358:	push   0x14
6501b35a:	push   0x65029bd0
6501b35f:	call   0x65013ca0
6501b364:	xor    edi,edi
6501b366:	mov    DWORD PTR [ebp-0x1c],edi
6501b369:	push   DWORD PTR ds:0x6502df68
6501b36f:	call   0x650144cf
6501b374:	pop    ecx
6501b375:	mov    esi,eax
6501b377:	cmp    esi,edi
6501b379:	jne    0x6501b3ce
6501b37b:	lea    eax,[ebp-0x1c]
6501b37e:	push   eax
6501b37f:	call   0x65015bcf
6501b384:	pop    ecx
6501b385:	cmp    eax,edi
6501b387:	je     0x6501b396
6501b389:	push   edi
6501b38a:	push   edi
6501b38b:	push   edi
6501b38c:	push   edi
6501b38d:	push   edi
6501b38e:	call   0x65012153
6501b393:	add    esp,0x14
6501b396:	cmp    DWORD PTR [ebp-0x1c],0x1
6501b39a:	je     0x6501b3bd
6501b39c:	push   0x65025a98
6501b3a1:	call   DWORD PTR ds:0x65024124
6501b3a7:	cmp    eax,edi
6501b3a9:	je     0x6501b3bd
6501b3ab:	push   0x65025a70
6501b3b0:	push   eax
6501b3b1:	call   DWORD PTR ds:0x65024014
6501b3b7:	mov    esi,eax
6501b3b9:	cmp    esi,edi
6501b3bb:	jne    0x6501b3c2
6501b3bd:	mov    esi,0x6501b348
6501b3c2:	push   esi
6501b3c3:	call   0x65014458
6501b3c8:	pop    ecx
6501b3c9:	mov    ds:0x6502df68,eax
6501b3ce:	mov    DWORD PTR [ebp-0x4],edi
6501b3d1:	push   DWORD PTR [ebp+0xc]
6501b3d4:	push   DWORD PTR [ebp+0x8]
6501b3d7:	call   esi
6501b3d9:	mov    DWORD PTR [ebp-0x20],eax
6501b3dc:	jmp    0x6501b40d
6501b3de:	mov    eax,DWORD PTR [ebp-0x14]
6501b3e1:	mov    eax,DWORD PTR [eax]
6501b3e3:	mov    eax,DWORD PTR [eax]
6501b3e5:	mov    DWORD PTR [ebp-0x24],eax
6501b3e8:	xor    ecx,ecx
6501b3ea:	cmp    eax,0xc0000017
6501b3ef:	sete   cl
6501b3f2:	mov    eax,ecx
6501b3f4:	ret    
6501b3f5:	mov    esp,DWORD PTR [ebp-0x18]
6501b3f8:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6501b3ff:	jne    0x6501b409
6501b401:	push   0x8
6501b403:	call   DWORD PTR ds:0x6502405c
6501b409:	and    DWORD PTR [ebp-0x20],0x0
6501b40d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501b414:	mov    eax,DWORD PTR [ebp-0x20]
6501b417:	call   0x65013ce5
6501b41c:	ret    
6501b41d:	push   ebp
6501b41e:	mov    ebp,esp
6501b420:	push   ecx
6501b421:	push   ecx
6501b422:	mov    eax,ds:0x6502c09c
6501b427:	xor    eax,ebp
6501b429:	mov    DWORD PTR [ebp-0x4],eax
6501b42c:	mov    eax,ds:0x6502df6c
6501b431:	push   ebx
6501b432:	push   esi
6501b433:	xor    ebx,ebx
6501b435:	cmp    eax,ebx
6501b437:	push   edi
6501b438:	mov    edi,ecx
6501b43a:	jne    0x6501b476
6501b43c:	lea    eax,[ebp-0x8]
6501b43f:	push   eax
6501b440:	xor    esi,esi
6501b442:	inc    esi
6501b443:	push   esi
6501b444:	push   0x65026610
6501b449:	push   esi
6501b44a:	call   DWORD PTR ds:0x650240bc
6501b450:	test   eax,eax
6501b452:	je     0x6501b45c
6501b454:	mov    DWORD PTR ds:0x6502df6c,esi
6501b45a:	jmp    0x6501b490
6501b45c:	call   DWORD PTR ds:0x65024044
6501b462:	cmp    eax,0x78
6501b465:	jne    0x6501b471
6501b467:	push   0x2
6501b469:	pop    eax
6501b46a:	mov    ds:0x6502df6c,eax
6501b46f:	jmp    0x6501b476
6501b471:	mov    eax,ds:0x6502df6c
6501b476:	cmp    eax,0x2
6501b479:	je     0x6501b54e
6501b47f:	cmp    eax,ebx
6501b481:	je     0x6501b54e
6501b487:	cmp    eax,0x1
6501b48a:	jne    0x6501b578
6501b490:	cmp    DWORD PTR [ebp+0x18],ebx
6501b493:	mov    DWORD PTR [ebp-0x8],ebx
6501b496:	jne    0x6501b4a0
6501b498:	mov    eax,DWORD PTR [edi]
6501b49a:	mov    eax,DWORD PTR [eax+0x4]
6501b49d:	mov    DWORD PTR [ebp+0x18],eax
6501b4a0:	mov    esi,DWORD PTR ds:0x65024024
6501b4a6:	xor    eax,eax
6501b4a8:	cmp    DWORD PTR [ebp+0x20],ebx
6501b4ab:	push   ebx
6501b4ac:	push   ebx
6501b4ad:	push   DWORD PTR [ebp+0x10]
6501b4b0:	setne  al
6501b4b3:	push   DWORD PTR [ebp+0xc]
6501b4b6:	lea    eax,[eax*8+0x1]
6501b4bd:	push   eax
6501b4be:	push   DWORD PTR [ebp+0x18]
6501b4c1:	call   esi
6501b4c3:	mov    edi,eax
6501b4c5:	cmp    edi,ebx
6501b4c7:	je     0x6501b578
6501b4cd:	jle    0x6501b50b
6501b4cf:	cmp    edi,0x7ffffff0
6501b4d5:	ja     0x6501b50b
6501b4d7:	lea    eax,[edi+edi*1+0x8]
6501b4db:	cmp    eax,0x400
6501b4e0:	ja     0x6501b4f5
6501b4e2:	call   0x65012e60
6501b4e7:	mov    eax,esp
6501b4e9:	cmp    eax,ebx
6501b4eb:	je     0x6501b509
6501b4ed:	mov    DWORD PTR [eax],0xcccc
6501b4f3:	jmp    0x6501b506
6501b4f5:	push   eax
6501b4f6:	call   0x65013654
6501b4fb:	cmp    eax,ebx
6501b4fd:	pop    ecx
6501b4fe:	je     0x6501b509
6501b500:	mov    DWORD PTR [eax],0xdddd
6501b506:	add    eax,0x8
6501b509:	mov    ebx,eax
6501b50b:	test   ebx,ebx
6501b50d:	je     0x6501b578
6501b50f:	lea    eax,[edi+edi*1]
6501b512:	push   eax
6501b513:	push   0x0
6501b515:	push   ebx
6501b516:	call   0x65012de0
6501b51b:	add    esp,0xc
6501b51e:	push   edi
6501b51f:	push   ebx
6501b520:	push   DWORD PTR [ebp+0x10]
6501b523:	push   DWORD PTR [ebp+0xc]
6501b526:	push   0x1
6501b528:	push   DWORD PTR [ebp+0x18]
6501b52b:	call   esi
6501b52d:	test   eax,eax
6501b52f:	je     0x6501b542
6501b531:	push   DWORD PTR [ebp+0x14]
6501b534:	push   eax
6501b535:	push   ebx
6501b536:	push   DWORD PTR [ebp+0x8]
6501b539:	call   DWORD PTR ds:0x650240bc
6501b53f:	mov    DWORD PTR [ebp-0x8],eax
6501b542:	push   ebx
6501b543:	call   0x65012bf2
6501b548:	mov    eax,DWORD PTR [ebp-0x8]
6501b54b:	pop    ecx
6501b54c:	jmp    0x6501b5c3
6501b54e:	xor    esi,esi
6501b550:	cmp    DWORD PTR [ebp+0x1c],ebx
6501b553:	jne    0x6501b55d
6501b555:	mov    eax,DWORD PTR [edi]
6501b557:	mov    eax,DWORD PTR [eax+0x14]
6501b55a:	mov    DWORD PTR [ebp+0x1c],eax
6501b55d:	cmp    DWORD PTR [ebp+0x18],ebx
6501b560:	jne    0x6501b56a
6501b562:	mov    eax,DWORD PTR [edi]
6501b564:	mov    eax,DWORD PTR [eax+0x4]
6501b567:	mov    DWORD PTR [ebp+0x18],eax
6501b56a:	push   DWORD PTR [ebp+0x1c]
6501b56d:	call   0x6501d24f
6501b572:	cmp    eax,0xffffffff
6501b575:	pop    ecx
6501b576:	jne    0x6501b57c
6501b578:	xor    eax,eax
6501b57a:	jmp    0x6501b5c3
6501b57c:	cmp    eax,DWORD PTR [ebp+0x18]
6501b57f:	je     0x6501b59f
6501b581:	push   ebx
6501b582:	push   ebx
6501b583:	lea    ecx,[ebp+0x10]
6501b586:	push   ecx
6501b587:	push   DWORD PTR [ebp+0xc]
6501b58a:	push   eax
6501b58b:	push   DWORD PTR [ebp+0x18]
6501b58e:	call   0x6501d296
6501b593:	mov    esi,eax
6501b595:	add    esp,0x18
6501b598:	cmp    esi,ebx
6501b59a:	je     0x6501b578
6501b59c:	mov    DWORD PTR [ebp+0xc],esi
6501b59f:	push   DWORD PTR [ebp+0x14]
6501b5a2:	push   DWORD PTR [ebp+0x10]
6501b5a5:	push   DWORD PTR [ebp+0xc]
6501b5a8:	push   DWORD PTR [ebp+0x8]
6501b5ab:	push   DWORD PTR [ebp+0x1c]
6501b5ae:	call   DWORD PTR ds:0x650240c0
6501b5b4:	cmp    esi,ebx
6501b5b6:	mov    edi,eax
6501b5b8:	je     0x6501b5c1
6501b5ba:	push   esi
6501b5bb:	call   0x65013577
6501b5c0:	pop    ecx
6501b5c1:	mov    eax,edi
6501b5c3:	lea    esp,[ebp-0x14]
6501b5c6:	pop    edi
6501b5c7:	pop    esi
6501b5c8:	pop    ebx
6501b5c9:	mov    ecx,DWORD PTR [ebp-0x4]
6501b5cc:	xor    ecx,ebp
6501b5ce:	call   0x6501275c
6501b5d3:	leave  
6501b5d4:	ret    
6501b5d5:	push   ebp
6501b5d6:	mov    ebp,esp
6501b5d8:	sub    esp,0x10
6501b5db:	push   DWORD PTR [ebp+0x8]
6501b5de:	lea    ecx,[ebp-0x10]
6501b5e1:	call   0x650128ff
6501b5e6:	push   DWORD PTR [ebp+0x24]
6501b5e9:	lea    ecx,[ebp-0x10]
6501b5ec:	push   DWORD PTR [ebp+0x20]
6501b5ef:	push   DWORD PTR [ebp+0x1c]
6501b5f2:	push   DWORD PTR [ebp+0x18]
6501b5f5:	push   DWORD PTR [ebp+0x14]
6501b5f8:	push   DWORD PTR [ebp+0x10]
6501b5fb:	push   DWORD PTR [ebp+0xc]
6501b5fe:	call   0x6501b41d
6501b603:	add    esp,0x1c
6501b606:	cmp    BYTE PTR [ebp-0x4],0x0
6501b60a:	je     0x6501b613
6501b60c:	mov    ecx,DWORD PTR [ebp-0x8]
6501b60f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501b613:	leave  
6501b614:	ret    
6501b615:	push   esi
6501b616:	mov    esi,DWORD PTR [esp+0x8]
6501b61a:	test   esi,esi
6501b61c:	je     0x6501b7a3
6501b622:	push   DWORD PTR [esi+0x4]
6501b625:	call   0x65013577
6501b62a:	push   DWORD PTR [esi+0x8]
6501b62d:	call   0x65013577
6501b632:	push   DWORD PTR [esi+0xc]
6501b635:	call   0x65013577
6501b63a:	push   DWORD PTR [esi+0x10]
6501b63d:	call   0x65013577
6501b642:	push   DWORD PTR [esi+0x14]
6501b645:	call   0x65013577
6501b64a:	push   DWORD PTR [esi+0x18]
6501b64d:	call   0x65013577
6501b652:	push   DWORD PTR [esi]
6501b654:	call   0x65013577
6501b659:	push   DWORD PTR [esi+0x20]
6501b65c:	call   0x65013577
6501b661:	push   DWORD PTR [esi+0x24]
6501b664:	call   0x65013577
6501b669:	push   DWORD PTR [esi+0x28]
6501b66c:	call   0x65013577
6501b671:	push   DWORD PTR [esi+0x2c]
6501b674:	call   0x65013577
6501b679:	push   DWORD PTR [esi+0x30]
6501b67c:	call   0x65013577
6501b681:	push   DWORD PTR [esi+0x34]
6501b684:	call   0x65013577
6501b689:	push   DWORD PTR [esi+0x1c]
6501b68c:	call   0x65013577
6501b691:	push   DWORD PTR [esi+0x38]
6501b694:	call   0x65013577
6501b699:	push   DWORD PTR [esi+0x3c]
6501b69c:	call   0x65013577
6501b6a1:	add    esp,0x40
6501b6a4:	push   DWORD PTR [esi+0x40]
6501b6a7:	call   0x65013577
6501b6ac:	push   DWORD PTR [esi+0x44]
6501b6af:	call   0x65013577
6501b6b4:	push   DWORD PTR [esi+0x48]
6501b6b7:	call   0x65013577
6501b6bc:	push   DWORD PTR [esi+0x4c]
6501b6bf:	call   0x65013577
6501b6c4:	push   DWORD PTR [esi+0x50]
6501b6c7:	call   0x65013577
6501b6cc:	push   DWORD PTR [esi+0x54]
6501b6cf:	call   0x65013577
6501b6d4:	push   DWORD PTR [esi+0x58]
6501b6d7:	call   0x65013577
6501b6dc:	push   DWORD PTR [esi+0x5c]
6501b6df:	call   0x65013577
6501b6e4:	push   DWORD PTR [esi+0x60]
6501b6e7:	call   0x65013577
6501b6ec:	push   DWORD PTR [esi+0x64]
6501b6ef:	call   0x65013577
6501b6f4:	push   DWORD PTR [esi+0x68]
6501b6f7:	call   0x65013577
6501b6fc:	push   DWORD PTR [esi+0x6c]
6501b6ff:	call   0x65013577
6501b704:	push   DWORD PTR [esi+0x70]
6501b707:	call   0x65013577
6501b70c:	push   DWORD PTR [esi+0x74]
6501b70f:	call   0x65013577
6501b714:	push   DWORD PTR [esi+0x78]
6501b717:	call   0x65013577
6501b71c:	push   DWORD PTR [esi+0x7c]
6501b71f:	call   0x65013577
6501b724:	add    esp,0x40
6501b727:	push   DWORD PTR [esi+0x80]
6501b72d:	call   0x65013577
6501b732:	push   DWORD PTR [esi+0x84]
6501b738:	call   0x65013577
6501b73d:	push   DWORD PTR [esi+0x88]
6501b743:	call   0x65013577
6501b748:	push   DWORD PTR [esi+0x8c]
6501b74e:	call   0x65013577
6501b753:	push   DWORD PTR [esi+0x90]
6501b759:	call   0x65013577
6501b75e:	push   DWORD PTR [esi+0x94]
6501b764:	call   0x65013577
6501b769:	push   DWORD PTR [esi+0x98]
6501b76f:	call   0x65013577
6501b774:	push   DWORD PTR [esi+0x9c]
6501b77a:	call   0x65013577
6501b77f:	push   DWORD PTR [esi+0xa0]
6501b785:	call   0x65013577
6501b78a:	push   DWORD PTR [esi+0xa4]
6501b790:	call   0x65013577
6501b795:	push   DWORD PTR [esi+0xa8]
6501b79b:	call   0x65013577
6501b7a0:	add    esp,0x2c
6501b7a3:	pop    esi
6501b7a4:	ret    
6501b7a5:	push   esi
6501b7a6:	mov    esi,DWORD PTR [esp+0x8]
6501b7aa:	test   esi,esi
6501b7ac:	je     0x6501b7e3
6501b7ae:	mov    eax,DWORD PTR [esi]
6501b7b0:	cmp    eax,DWORD PTR ds:0x6502cc38
6501b7b6:	je     0x6501b7bf
6501b7b8:	push   eax
6501b7b9:	call   0x65013577
6501b7be:	pop    ecx
6501b7bf:	mov    eax,DWORD PTR [esi+0x4]
6501b7c2:	cmp    eax,DWORD PTR ds:0x6502cc3c
6501b7c8:	je     0x6501b7d1
6501b7ca:	push   eax
6501b7cb:	call   0x65013577
6501b7d0:	pop    ecx
6501b7d1:	mov    esi,DWORD PTR [esi+0x8]
6501b7d4:	cmp    esi,DWORD PTR ds:0x6502cc40
6501b7da:	je     0x6501b7e3
6501b7dc:	push   esi
6501b7dd:	call   0x65013577
6501b7e2:	pop    ecx
6501b7e3:	pop    esi
6501b7e4:	ret    
6501b7e5:	push   esi
6501b7e6:	mov    esi,DWORD PTR [esp+0x8]
6501b7ea:	test   esi,esi
6501b7ec:	je     0x6501b86c
6501b7ee:	mov    eax,DWORD PTR [esi+0xc]
6501b7f1:	cmp    eax,DWORD PTR ds:0x6502cc44
6501b7f7:	je     0x6501b800
6501b7f9:	push   eax
6501b7fa:	call   0x65013577
6501b7ff:	pop    ecx
6501b800:	mov    eax,DWORD PTR [esi+0x10]
6501b803:	cmp    eax,DWORD PTR ds:0x6502cc48
6501b809:	je     0x6501b812
6501b80b:	push   eax
6501b80c:	call   0x65013577
6501b811:	pop    ecx
6501b812:	mov    eax,DWORD PTR [esi+0x14]
6501b815:	cmp    eax,DWORD PTR ds:0x6502cc4c
6501b81b:	je     0x6501b824
6501b81d:	push   eax
6501b81e:	call   0x65013577
6501b823:	pop    ecx
6501b824:	mov    eax,DWORD PTR [esi+0x18]
6501b827:	cmp    eax,DWORD PTR ds:0x6502cc50
6501b82d:	je     0x6501b836
6501b82f:	push   eax
6501b830:	call   0x65013577
6501b835:	pop    ecx
6501b836:	mov    eax,DWORD PTR [esi+0x1c]
6501b839:	cmp    eax,DWORD PTR ds:0x6502cc54
6501b83f:	je     0x6501b848
6501b841:	push   eax
6501b842:	call   0x65013577
6501b847:	pop    ecx
6501b848:	mov    eax,DWORD PTR [esi+0x20]
6501b84b:	cmp    eax,DWORD PTR ds:0x6502cc58
6501b851:	je     0x6501b85a
6501b853:	push   eax
6501b854:	call   0x65013577
6501b859:	pop    ecx
6501b85a:	mov    esi,DWORD PTR [esi+0x24]
6501b85d:	cmp    esi,DWORD PTR ds:0x6502cc5c
6501b863:	je     0x6501b86c
6501b865:	push   esi
6501b866:	call   0x65013577
6501b86b:	pop    ecx
6501b86c:	pop    esi
6501b86d:	ret    
6501b86e:	mov    eax,DWORD PTR [esp+0x4]
6501b872:	push   ebx
6501b873:	xor    ebx,ebx
6501b875:	cmp    eax,ebx
6501b877:	push   esi
6501b878:	push   edi
6501b879:	je     0x6501b883
6501b87b:	mov    edi,DWORD PTR [esp+0x14]
6501b87f:	cmp    edi,ebx
6501b881:	ja     0x6501b89e
6501b883:	call   0x650143a0
6501b888:	push   0x16
6501b88a:	pop    esi
6501b88b:	mov    DWORD PTR [eax],esi
6501b88d:	push   ebx
6501b88e:	push   ebx
6501b88f:	push   ebx
6501b890:	push   ebx
6501b891:	push   ebx
6501b892:	call   0x6501224f
6501b897:	add    esp,0x14
6501b89a:	mov    eax,esi
6501b89c:	jmp    0x6501b8db
6501b89e:	mov    esi,DWORD PTR [esp+0x18]
6501b8a2:	cmp    esi,ebx
6501b8a4:	jne    0x6501b8aa
6501b8a6:	mov    BYTE PTR [eax],bl
6501b8a8:	jmp    0x6501b883
6501b8aa:	mov    edx,eax
6501b8ac:	cmp    BYTE PTR [edx],bl
6501b8ae:	je     0x6501b8b4
6501b8b0:	inc    edx
6501b8b1:	dec    edi
6501b8b2:	jne    0x6501b8ac
6501b8b4:	cmp    edi,ebx
6501b8b6:	je     0x6501b8a6
6501b8b8:	mov    cl,BYTE PTR [esi]
6501b8ba:	mov    BYTE PTR [edx],cl
6501b8bc:	inc    edx
6501b8bd:	inc    esi
6501b8be:	cmp    cl,bl
6501b8c0:	je     0x6501b8c5
6501b8c2:	dec    edi
6501b8c3:	jne    0x6501b8b8
6501b8c5:	cmp    edi,ebx
6501b8c7:	jne    0x6501b8d9
6501b8c9:	mov    BYTE PTR [eax],bl
6501b8cb:	call   0x650143a0
6501b8d0:	push   0x22
6501b8d2:	pop    ecx
6501b8d3:	mov    DWORD PTR [eax],ecx
6501b8d5:	mov    esi,ecx
6501b8d7:	jmp    0x6501b88d
6501b8d9:	xor    eax,eax
6501b8db:	pop    edi
6501b8dc:	pop    esi
6501b8dd:	pop    ebx
6501b8de:	ret    
6501b8df:	int3   
6501b8e0:	push   ebp
6501b8e1:	mov    ebp,esp
6501b8e3:	push   esi
6501b8e4:	xor    eax,eax
6501b8e6:	push   eax
6501b8e7:	push   eax
6501b8e8:	push   eax
6501b8e9:	push   eax
6501b8ea:	push   eax
6501b8eb:	push   eax
6501b8ec:	push   eax
6501b8ed:	push   eax
6501b8ee:	mov    edx,DWORD PTR [ebp+0xc]
6501b8f1:	lea    ecx,[ecx+0x0]
6501b8f4:	mov    al,BYTE PTR [edx]
6501b8f6:	or     al,al
6501b8f8:	je     0x6501b903
6501b8fa:	add    edx,0x1
6501b8fd:	bts    DWORD PTR [esp],eax
6501b901:	jmp    0x6501b8f4
6501b903:	mov    esi,DWORD PTR [ebp+0x8]
6501b906:	or     ecx,0xffffffff
6501b909:	lea    ecx,[ecx+0x0]
6501b90c:	add    ecx,0x1
6501b90f:	mov    al,BYTE PTR [esi]
6501b911:	or     al,al
6501b913:	je     0x6501b91e
6501b915:	add    esi,0x1
6501b918:	bt     DWORD PTR [esp],eax
6501b91c:	jae    0x6501b90c
6501b91e:	mov    eax,ecx
6501b920:	add    esp,0x20
6501b923:	pop    esi
6501b924:	leave  
6501b925:	ret    
6501b926:	push   ebp
6501b927:	mov    ebp,esp
6501b929:	push   ebx
6501b92a:	push   esi
6501b92b:	mov    esi,DWORD PTR [ebp+0x8]
6501b92e:	xor    ebx,ebx
6501b930:	cmp    DWORD PTR [ebp+0x14],ebx
6501b933:	push   edi
6501b934:	jne    0x6501b946
6501b936:	cmp    esi,ebx
6501b938:	jne    0x6501b94a
6501b93a:	cmp    DWORD PTR [ebp+0xc],ebx
6501b93d:	jne    0x6501b951
6501b93f:	xor    eax,eax
6501b941:	pop    edi
6501b942:	pop    esi
6501b943:	pop    ebx
6501b944:	pop    ebp
6501b945:	ret    
6501b946:	cmp    esi,ebx
6501b948:	je     0x6501b951
6501b94a:	mov    edi,DWORD PTR [ebp+0xc]
6501b94d:	cmp    edi,ebx
6501b94f:	ja     0x6501b96c
6501b951:	call   0x650143a0
6501b956:	push   0x16
6501b958:	pop    esi
6501b959:	mov    DWORD PTR [eax],esi
6501b95b:	push   ebx
6501b95c:	push   ebx
6501b95d:	push   ebx
6501b95e:	push   ebx
6501b95f:	push   ebx
6501b960:	call   0x6501224f
6501b965:	add    esp,0x14
6501b968:	mov    eax,esi
6501b96a:	jmp    0x6501b941
6501b96c:	cmp    DWORD PTR [ebp+0x14],ebx
6501b96f:	jne    0x6501b975
6501b971:	mov    BYTE PTR [esi],bl
6501b973:	jmp    0x6501b93f
6501b975:	mov    edx,DWORD PTR [ebp+0x10]
6501b978:	cmp    edx,ebx
6501b97a:	jne    0x6501b980
6501b97c:	mov    BYTE PTR [esi],bl
6501b97e:	jmp    0x6501b951
6501b980:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501b984:	mov    eax,esi
6501b986:	jne    0x6501b997
6501b988:	mov    cl,BYTE PTR [edx]
6501b98a:	mov    BYTE PTR [eax],cl
6501b98c:	inc    eax
6501b98d:	inc    edx
6501b98e:	cmp    cl,bl
6501b990:	je     0x6501b9b0
6501b992:	dec    edi
6501b993:	jne    0x6501b988
6501b995:	jmp    0x6501b9b0
6501b997:	mov    cl,BYTE PTR [edx]
6501b999:	mov    BYTE PTR [eax],cl
6501b99b:	inc    eax
6501b99c:	inc    edx
6501b99d:	cmp    cl,bl
6501b99f:	je     0x6501b9a9
6501b9a1:	dec    edi
6501b9a2:	je     0x6501b9a9
6501b9a4:	dec    DWORD PTR [ebp+0x14]
6501b9a7:	jne    0x6501b997
6501b9a9:	cmp    DWORD PTR [ebp+0x14],ebx
6501b9ac:	jne    0x6501b9b0
6501b9ae:	mov    BYTE PTR [eax],bl
6501b9b0:	cmp    edi,ebx
6501b9b2:	jne    0x6501b93f
6501b9b4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6501b9b8:	jne    0x6501b9c9
6501b9ba:	mov    eax,DWORD PTR [ebp+0xc]
6501b9bd:	push   0x50
6501b9bf:	mov    BYTE PTR [esi+eax*1-0x1],bl
6501b9c3:	pop    eax
6501b9c4:	jmp    0x6501b941
6501b9c9:	mov    BYTE PTR [esi],bl
6501b9cb:	call   0x650143a0
6501b9d0:	push   0x22
6501b9d2:	pop    ecx
6501b9d3:	mov    DWORD PTR [eax],ecx
6501b9d5:	mov    esi,ecx
6501b9d7:	jmp    0x6501b95b
6501b9d9:	int3   
6501b9da:	int3   
6501b9db:	int3   
6501b9dc:	int3   
6501b9dd:	int3   
6501b9de:	int3   
6501b9df:	int3   
6501b9e0:	push   ebp
6501b9e1:	mov    ebp,esp
6501b9e3:	push   esi
6501b9e4:	xor    eax,eax
6501b9e6:	push   eax
6501b9e7:	push   eax
6501b9e8:	push   eax
6501b9e9:	push   eax
6501b9ea:	push   eax
6501b9eb:	push   eax
6501b9ec:	push   eax
6501b9ed:	push   eax
6501b9ee:	mov    edx,DWORD PTR [ebp+0xc]
6501b9f1:	lea    ecx,[ecx+0x0]
6501b9f4:	mov    al,BYTE PTR [edx]
6501b9f6:	or     al,al
6501b9f8:	je     0x6501ba03
6501b9fa:	add    edx,0x1
6501b9fd:	bts    DWORD PTR [esp],eax
6501ba01:	jmp    0x6501b9f4
6501ba03:	mov    esi,DWORD PTR [ebp+0x8]
6501ba06:	mov    edi,edi
6501ba08:	mov    al,BYTE PTR [esi]
6501ba0a:	or     al,al
6501ba0c:	je     0x6501ba1a
6501ba0e:	add    esi,0x1
6501ba11:	bt     DWORD PTR [esp],eax
6501ba15:	jae    0x6501ba08
6501ba17:	lea    eax,[esi-0x1]
6501ba1a:	add    esp,0x20
6501ba1d:	pop    esi
6501ba1e:	leave  
6501ba1f:	ret    
6501ba20:	push   ebp
6501ba21:	mov    ebp,esp
6501ba23:	push   ecx
6501ba24:	push   ecx
6501ba25:	mov    eax,DWORD PTR [ebp+0xc]
6501ba28:	push   esi
6501ba29:	mov    esi,DWORD PTR [ebp+0x8]
6501ba2c:	mov    DWORD PTR [ebp-0x8],eax
6501ba2f:	mov    eax,DWORD PTR [ebp+0x10]
6501ba32:	push   edi
6501ba33:	push   esi
6501ba34:	mov    DWORD PTR [ebp-0x4],eax
6501ba37:	call   0x6501d9bf
6501ba3c:	or     edi,0xffffffff
6501ba3f:	cmp    eax,edi
6501ba41:	pop    ecx
6501ba42:	jne    0x6501ba55
6501ba44:	call   0x650143a0
6501ba49:	mov    DWORD PTR [eax],0x9
6501ba4f:	mov    eax,edi
6501ba51:	mov    edx,edi
6501ba53:	jmp    0x6501ba9f
6501ba55:	push   DWORD PTR [ebp+0x14]
6501ba58:	lea    ecx,[ebp-0x4]
6501ba5b:	push   ecx
6501ba5c:	push   DWORD PTR [ebp-0x8]
6501ba5f:	push   eax
6501ba60:	call   DWORD PTR ds:0x650240d4
6501ba66:	cmp    eax,edi
6501ba68:	mov    DWORD PTR [ebp-0x8],eax
6501ba6b:	jne    0x6501ba80
6501ba6d:	call   DWORD PTR ds:0x65024044
6501ba73:	test   eax,eax
6501ba75:	je     0x6501ba80
6501ba77:	push   eax
6501ba78:	call   0x650143c6
6501ba7d:	pop    ecx
6501ba7e:	jmp    0x6501ba4f
6501ba80:	mov    eax,esi
6501ba82:	sar    eax,0x5
6501ba85:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501ba8c:	and    esi,0x1f
6501ba8f:	shl    esi,0x6
6501ba92:	lea    eax,[eax+esi*1+0x4]
6501ba96:	and    BYTE PTR [eax],0xfd
6501ba99:	mov    eax,DWORD PTR [ebp-0x8]
6501ba9c:	mov    edx,DWORD PTR [ebp-0x4]
6501ba9f:	pop    edi
6501baa0:	pop    esi
6501baa1:	leave  
6501baa2:	ret    
6501baa3:	push   0x14
6501baa5:	push   0x65029bf0
6501baaa:	call   0x65013ca0
6501baaf:	or     esi,0xffffffff
6501bab2:	mov    DWORD PTR [ebp-0x24],esi
6501bab5:	mov    DWORD PTR [ebp-0x20],esi
6501bab8:	mov    eax,DWORD PTR [ebp+0x8]
6501babb:	cmp    eax,0xfffffffe
6501babe:	jne    0x6501badc
6501bac0:	call   0x650143b3
6501bac5:	and    DWORD PTR [eax],0x0
6501bac8:	call   0x650143a0
6501bacd:	mov    DWORD PTR [eax],0x9
6501bad3:	mov    eax,esi
6501bad5:	mov    edx,esi
6501bad7:	jmp    0x6501bbac
6501badc:	xor    edi,edi
6501bade:	cmp    eax,edi
6501bae0:	jl     0x6501baea
6501bae2:	cmp    eax,DWORD PTR ds:0x65031440
6501bae8:	jb     0x6501bb0b
6501baea:	call   0x650143b3
6501baef:	mov    DWORD PTR [eax],edi
6501baf1:	call   0x650143a0
6501baf6:	mov    DWORD PTR [eax],0x9
6501bafc:	push   edi
6501bafd:	push   edi
6501bafe:	push   edi
6501baff:	push   edi
6501bb00:	push   edi
6501bb01:	call   0x6501224f
6501bb06:	add    esp,0x14
6501bb09:	jmp    0x6501bad3
6501bb0b:	mov    ecx,eax
6501bb0d:	sar    ecx,0x5
6501bb10:	lea    ebx,[ecx*4+0x65031460]
6501bb17:	mov    esi,eax
6501bb19:	and    esi,0x1f
6501bb1c:	shl    esi,0x6
6501bb1f:	mov    ecx,DWORD PTR [ebx]
6501bb21:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501bb26:	and    ecx,0x1
6501bb29:	jne    0x6501bb51
6501bb2b:	call   0x650143b3
6501bb30:	mov    DWORD PTR [eax],edi
6501bb32:	call   0x650143a0
6501bb37:	mov    DWORD PTR [eax],0x9
6501bb3d:	push   edi
6501bb3e:	push   edi
6501bb3f:	push   edi
6501bb40:	push   edi
6501bb41:	push   edi
6501bb42:	call   0x6501224f
6501bb47:	add    esp,0x14
6501bb4a:	or     edx,0xffffffff
6501bb4d:	mov    eax,edx
6501bb4f:	jmp    0x6501bbac
6501bb51:	push   eax
6501bb52:	call   0x6501da30
6501bb57:	pop    ecx
6501bb58:	mov    DWORD PTR [ebp-0x4],edi
6501bb5b:	mov    eax,DWORD PTR [ebx]
6501bb5d:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501bb62:	je     0x6501bb80
6501bb64:	push   DWORD PTR [ebp+0x14]
6501bb67:	push   DWORD PTR [ebp+0x10]
6501bb6a:	push   DWORD PTR [ebp+0xc]
6501bb6d:	push   DWORD PTR [ebp+0x8]
6501bb70:	call   0x6501ba20
6501bb75:	add    esp,0x10
6501bb78:	mov    DWORD PTR [ebp-0x24],eax
6501bb7b:	mov    DWORD PTR [ebp-0x20],edx
6501bb7e:	jmp    0x6501bb9a
6501bb80:	call   0x650143a0
6501bb85:	mov    DWORD PTR [eax],0x9
6501bb8b:	call   0x650143b3
6501bb90:	mov    DWORD PTR [eax],edi
6501bb92:	or     DWORD PTR [ebp-0x24],0xffffffff
6501bb96:	or     DWORD PTR [ebp-0x20],0xffffffff
6501bb9a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501bba1:	call   0x6501bbb2
6501bba6:	mov    eax,DWORD PTR [ebp-0x24]
6501bba9:	mov    edx,DWORD PTR [ebp-0x20]
6501bbac:	call   0x65013ce5
6501bbb1:	ret    
6501bbb2:	push   DWORD PTR [ebp+0x8]
6501bbb5:	call   0x6501dad0
6501bbba:	pop    ecx
6501bbbb:	ret    
6501bbbc:	push   ebp
6501bbbd:	lea    ebp,[esp-0x514]
6501bbc4:	sub    esp,0x590
6501bbca:	mov    eax,ds:0x6502c09c
6501bbcf:	xor    eax,ebp
6501bbd1:	mov    DWORD PTR [ebp+0x510],eax
6501bbd7:	mov    eax,DWORD PTR [ebp+0x520]
6501bbdd:	push   esi
6501bbde:	xor    esi,esi
6501bbe0:	cmp    DWORD PTR [ebp+0x524],esi
6501bbe6:	mov    DWORD PTR [ebp-0x64],eax
6501bbe9:	mov    DWORD PTR [ebp-0x60],esi
6501bbec:	mov    DWORD PTR [ebp-0x68],esi
6501bbef:	jne    0x6501bbf8
6501bbf1:	xor    eax,eax
6501bbf3:	jmp    0x6501c1c8
6501bbf8:	cmp    eax,esi
6501bbfa:	jne    0x6501bc23
6501bbfc:	call   0x650143b3
6501bc01:	mov    DWORD PTR [eax],esi
6501bc03:	call   0x650143a0
6501bc08:	push   esi
6501bc09:	push   esi
6501bc0a:	push   esi
6501bc0b:	push   esi
6501bc0c:	push   esi
6501bc0d:	mov    DWORD PTR [eax],0x16
6501bc13:	call   0x6501224f
6501bc18:	add    esp,0x14
6501bc1b:	or     eax,0xffffffff
6501bc1e:	jmp    0x6501c1c8
6501bc23:	push   ebx
6501bc24:	push   edi
6501bc25:	mov    edi,DWORD PTR [ebp+0x51c]
6501bc2b:	mov    eax,edi
6501bc2d:	sar    eax,0x5
6501bc30:	lea    esi,[eax*4+0x65031460]
6501bc37:	mov    eax,DWORD PTR [esi]
6501bc39:	and    edi,0x1f
6501bc3c:	shl    edi,0x6
6501bc3f:	add    eax,edi
6501bc41:	mov    bl,BYTE PTR [eax+0x24]
6501bc44:	add    bl,bl
6501bc46:	sar    bl,1
6501bc48:	cmp    bl,0x2
6501bc4b:	mov    DWORD PTR [ebp-0x70],esi
6501bc4e:	mov    BYTE PTR [ebp-0x71],bl
6501bc51:	je     0x6501bc58
6501bc53:	cmp    bl,0x1
6501bc56:	jne    0x6501bc8b
6501bc58:	mov    ecx,DWORD PTR [ebp+0x524]
6501bc5e:	not    ecx
6501bc60:	test   cl,0x1
6501bc63:	jne    0x6501bc8b
6501bc65:	call   0x650143b3
6501bc6a:	xor    esi,esi
6501bc6c:	mov    DWORD PTR [eax],esi
6501bc6e:	call   0x650143a0
6501bc73:	push   esi
6501bc74:	push   esi
6501bc75:	push   esi
6501bc76:	push   esi
6501bc77:	push   esi
6501bc78:	mov    DWORD PTR [eax],0x16
6501bc7e:	call   0x6501224f
6501bc83:	add    esp,0x14
6501bc86:	jmp    0x6501c1bb
6501bc8b:	test   BYTE PTR [eax+0x4],0x20
6501bc8f:	je     0x6501bca5
6501bc91:	push   0x2
6501bc93:	push   0x0
6501bc95:	push   0x0
6501bc97:	push   DWORD PTR [ebp+0x51c]
6501bc9d:	call   0x6501ba20
6501bca2:	add    esp,0x10
6501bca5:	push   DWORD PTR [ebp+0x51c]
6501bcab:	call   0x6501c2fe
6501bcb0:	test   eax,eax
6501bcb2:	pop    ecx
6501bcb3:	je     0x6501bef2
6501bcb9:	mov    eax,DWORD PTR [esi]
6501bcbb:	test   BYTE PTR [edi+eax*1+0x4],0x80
6501bcc0:	je     0x6501bef2
6501bcc6:	call   0x650146eb
6501bccb:	mov    eax,DWORD PTR [eax+0x6c]
6501bcce:	xor    ecx,ecx
6501bcd0:	cmp    DWORD PTR [eax+0x14],ecx
6501bcd3:	lea    eax,[ebp-0x7c]
6501bcd6:	sete   cl
6501bcd9:	push   eax
6501bcda:	mov    eax,DWORD PTR [esi]
6501bcdc:	push   DWORD PTR [edi+eax*1]
6501bcdf:	mov    DWORD PTR [ebp-0x78],ecx
6501bce2:	call   DWORD PTR ds:0x650240cc
6501bce8:	test   eax,eax
6501bcea:	je     0x6501bef2
6501bcf0:	xor    ecx,ecx
6501bcf2:	cmp    DWORD PTR [ebp-0x78],ecx
6501bcf5:	je     0x6501bcff
6501bcf7:	test   bl,bl
6501bcf9:	je     0x6501bef4
6501bcff:	call   DWORD PTR ds:0x650240d0
6501bd05:	mov    ebx,DWORD PTR [ebp-0x64]
6501bd08:	mov    DWORD PTR [ebp-0x7c],eax
6501bd0b:	xor    eax,eax
6501bd0d:	cmp    DWORD PTR [ebp+0x524],eax
6501bd13:	mov    DWORD PTR [ebp-0x5c],eax
6501bd16:	jbe    0x6501c163
6501bd1c:	mov    DWORD PTR [ebp-0x54],eax
6501bd1f:	mov    al,BYTE PTR [ebp-0x71]
6501bd22:	test   al,al
6501bd24:	jne    0x6501be67
6501bd2a:	mov    cl,BYTE PTR [ebx]
6501bd2c:	mov    esi,DWORD PTR [ebp-0x70]
6501bd2f:	xor    eax,eax
6501bd31:	cmp    cl,0xa
6501bd34:	sete   al
6501bd37:	mov    DWORD PTR [ebp-0x78],eax
6501bd3a:	mov    eax,DWORD PTR [esi]
6501bd3c:	add    eax,edi
6501bd3e:	cmp    DWORD PTR [eax+0x38],0x0
6501bd42:	je     0x6501bd62
6501bd44:	mov    dl,BYTE PTR [eax+0x34]
6501bd47:	mov    BYTE PTR [ebp+0x508],dl
6501bd4d:	mov    BYTE PTR [ebp+0x509],cl
6501bd53:	and    DWORD PTR [eax+0x38],0x0
6501bd57:	push   0x2
6501bd59:	lea    eax,[ebp+0x508]
6501bd5f:	push   eax
6501bd60:	jmp    0x6501bda7
6501bd62:	movsx  eax,cl
6501bd65:	push   eax
6501bd66:	call   0x65019b14
6501bd6b:	test   eax,eax
6501bd6d:	pop    ecx
6501bd6e:	je     0x6501bda4
6501bd70:	mov    ecx,DWORD PTR [ebp-0x64]
6501bd73:	sub    ecx,ebx
6501bd75:	add    ecx,DWORD PTR [ebp+0x524]
6501bd7b:	xor    eax,eax
6501bd7d:	inc    eax
6501bd7e:	cmp    ecx,eax
6501bd80:	jbe    0x6501bedc
6501bd86:	push   0x2
6501bd88:	lea    eax,[ebp-0x58]
6501bd8b:	push   ebx
6501bd8c:	push   eax
6501bd8d:	call   0x6501c831
6501bd92:	add    esp,0xc
6501bd95:	cmp    eax,0xffffffff
6501bd98:	je     0x6501c15d
6501bd9e:	inc    ebx
6501bd9f:	inc    DWORD PTR [ebp-0x54]
6501bda2:	jmp    0x6501bdbc
6501bda4:	push   0x1
6501bda6:	push   ebx
6501bda7:	lea    eax,[ebp-0x58]
6501bdaa:	push   eax
6501bdab:	call   0x6501c831
6501bdb0:	add    esp,0xc
6501bdb3:	cmp    eax,0xffffffff
6501bdb6:	je     0x6501c15d
6501bdbc:	xor    eax,eax
6501bdbe:	push   eax
6501bdbf:	push   eax
6501bdc0:	push   0x5
6501bdc2:	lea    ecx,[ebp+0x508]
6501bdc8:	push   ecx
6501bdc9:	push   0x1
6501bdcb:	lea    ecx,[ebp-0x58]
6501bdce:	push   ecx
6501bdcf:	push   eax
6501bdd0:	push   DWORD PTR [ebp-0x7c]
6501bdd3:	inc    ebx
6501bdd4:	inc    DWORD PTR [ebp-0x54]
6501bdd7:	call   DWORD PTR ds:0x65024028
6501bddd:	mov    esi,eax
6501bddf:	test   esi,esi
6501bde1:	je     0x6501c15d
6501bde7:	push   0x0
6501bde9:	lea    eax,[ebp-0x5c]
6501bdec:	push   eax
6501bded:	push   esi
6501bdee:	lea    eax,[ebp+0x508]
6501bdf4:	push   eax
6501bdf5:	mov    eax,DWORD PTR [ebp-0x70]
6501bdf8:	mov    eax,DWORD PTR [eax]
6501bdfa:	push   DWORD PTR [edi+eax*1]
6501bdfd:	call   DWORD PTR ds:0x65024088
6501be03:	test   eax,eax
6501be05:	je     0x6501c154
6501be0b:	mov    eax,DWORD PTR [ebp-0x54]
6501be0e:	mov    ecx,DWORD PTR [ebp-0x68]
6501be11:	add    eax,ecx
6501be13:	cmp    DWORD PTR [ebp-0x5c],esi
6501be16:	mov    DWORD PTR [ebp-0x60],eax
6501be19:	jl     0x6501c15d
6501be1f:	cmp    DWORD PTR [ebp-0x78],0x0
6501be23:	je     0x6501bec8
6501be29:	push   0x0
6501be2b:	lea    eax,[ebp-0x5c]
6501be2e:	push   eax
6501be2f:	push   0x1
6501be31:	lea    eax,[ebp+0x508]
6501be37:	push   eax
6501be38:	mov    eax,DWORD PTR [ebp-0x70]
6501be3b:	mov    eax,DWORD PTR [eax]
6501be3d:	mov    BYTE PTR [ebp+0x508],0xd
6501be44:	push   DWORD PTR [edi+eax*1]
6501be47:	call   DWORD PTR ds:0x65024088
6501be4d:	test   eax,eax
6501be4f:	je     0x6501c154
6501be55:	cmp    DWORD PTR [ebp-0x5c],0x1
6501be59:	jl     0x6501c15d
6501be5f:	inc    DWORD PTR [ebp-0x68]
6501be62:	inc    DWORD PTR [ebp-0x60]
6501be65:	jmp    0x6501bec8
6501be67:	cmp    al,0x1
6501be69:	je     0x6501be6f
6501be6b:	cmp    al,0x2
6501be6d:	jne    0x6501be87
6501be6f:	movzx  esi,WORD PTR [ebx]
6501be72:	xor    ecx,ecx
6501be74:	cmp    si,0xa
6501be78:	sete   cl
6501be7b:	inc    ebx
6501be7c:	inc    ebx
6501be7d:	add    DWORD PTR [ebp-0x54],0x2
6501be81:	mov    DWORD PTR [ebp-0x58],esi
6501be84:	mov    DWORD PTR [ebp-0x78],ecx
6501be87:	cmp    al,0x1
6501be89:	je     0x6501be8f
6501be8b:	cmp    al,0x2
6501be8d:	jne    0x6501bec8
6501be8f:	push   DWORD PTR [ebp-0x58]
6501be92:	call   0x6501daf2
6501be97:	cmp    ax,WORD PTR [ebp-0x58]
6501be9b:	pop    ecx
6501be9c:	jne    0x6501c154
6501bea2:	inc    DWORD PTR [ebp-0x60]
6501bea5:	cmp    DWORD PTR [ebp-0x78],0x0
6501bea9:	je     0x6501bec8
6501beab:	push   0xd
6501bead:	pop    eax
6501beae:	push   eax
6501beaf:	mov    DWORD PTR [ebp-0x58],eax
6501beb2:	call   0x6501daf2
6501beb7:	cmp    ax,WORD PTR [ebp-0x58]
6501bebb:	pop    ecx
6501bebc:	jne    0x6501c154
6501bec2:	inc    DWORD PTR [ebp-0x60]
6501bec5:	inc    DWORD PTR [ebp-0x68]
6501bec8:	mov    eax,DWORD PTR [ebp+0x524]
6501bece:	cmp    DWORD PTR [ebp-0x54],eax
6501bed1:	jb     0x6501bd1f
6501bed7:	jmp    0x6501c15d
6501bedc:	mov    ecx,DWORD PTR [esi]
6501bede:	mov    dl,BYTE PTR [ebx]
6501bee0:	inc    DWORD PTR [ebp-0x60]
6501bee3:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6501bee7:	mov    ecx,DWORD PTR [esi]
6501bee9:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6501beed:	jmp    0x6501c15d
6501bef2:	xor    ecx,ecx
6501bef4:	mov    eax,DWORD PTR [esi]
6501bef6:	add    eax,edi
6501bef8:	test   BYTE PTR [eax+0x4],0x80
6501befc:	je     0x6501c12d
6501bf02:	test   bl,bl
6501bf04:	mov    eax,DWORD PTR [ebp-0x64]
6501bf07:	mov    DWORD PTR [ebp-0x58],ecx
6501bf0a:	jne    0x6501bfa6
6501bf10:	cmp    DWORD PTR [ebp+0x524],ecx
6501bf16:	mov    DWORD PTR [ebp-0x5c],eax
6501bf19:	jbe    0x6501c193
6501bf1f:	jmp    0x6501bf24
6501bf21:	mov    esi,DWORD PTR [ebp-0x70]
6501bf24:	mov    ecx,DWORD PTR [ebp-0x5c]
6501bf27:	and    DWORD PTR [ebp-0x54],0x0
6501bf2b:	sub    ecx,DWORD PTR [ebp-0x64]
6501bf2e:	lea    eax,[ebp-0x50]
6501bf31:	cmp    ecx,DWORD PTR [ebp+0x524]
6501bf37:	jae    0x6501bf60
6501bf39:	mov    edx,DWORD PTR [ebp-0x5c]
6501bf3c:	inc    DWORD PTR [ebp-0x5c]
6501bf3f:	mov    dl,BYTE PTR [edx]
6501bf41:	inc    ecx
6501bf42:	cmp    dl,0xa
6501bf45:	jne    0x6501bf51
6501bf47:	inc    DWORD PTR [ebp-0x68]
6501bf4a:	mov    BYTE PTR [eax],0xd
6501bf4d:	inc    eax
6501bf4e:	inc    DWORD PTR [ebp-0x54]
6501bf51:	mov    BYTE PTR [eax],dl
6501bf53:	inc    eax
6501bf54:	inc    DWORD PTR [ebp-0x54]
6501bf57:	cmp    DWORD PTR [ebp-0x54],0x400
6501bf5e:	jb     0x6501bf31
6501bf60:	mov    ebx,eax
6501bf62:	lea    eax,[ebp-0x50]
6501bf65:	sub    ebx,eax
6501bf67:	push   0x0
6501bf69:	lea    eax,[ebp-0x6c]
6501bf6c:	push   eax
6501bf6d:	push   ebx
6501bf6e:	lea    eax,[ebp-0x50]
6501bf71:	push   eax
6501bf72:	mov    eax,DWORD PTR [esi]
6501bf74:	push   DWORD PTR [edi+eax*1]
6501bf77:	call   DWORD PTR ds:0x65024088
6501bf7d:	test   eax,eax
6501bf7f:	je     0x6501c154
6501bf85:	mov    eax,DWORD PTR [ebp-0x6c]
6501bf88:	add    DWORD PTR [ebp-0x60],eax
6501bf8b:	cmp    eax,ebx
6501bf8d:	jl     0x6501c15d
6501bf93:	mov    eax,DWORD PTR [ebp-0x5c]
6501bf96:	sub    eax,DWORD PTR [ebp-0x64]
6501bf99:	cmp    eax,DWORD PTR [ebp+0x524]
6501bf9f:	jb     0x6501bf21
6501bfa1:	jmp    0x6501c15d
6501bfa6:	cmp    bl,0x2
6501bfa9:	mov    DWORD PTR [ebp-0x54],eax
6501bfac:	jne    0x6501c055
6501bfb2:	cmp    DWORD PTR [ebp+0x524],ecx
6501bfb8:	jbe    0x6501c193
6501bfbe:	jmp    0x6501bfc3
6501bfc0:	mov    esi,DWORD PTR [ebp-0x70]
6501bfc3:	mov    ecx,DWORD PTR [ebp-0x54]
6501bfc6:	and    DWORD PTR [ebp-0x5c],0x0
6501bfca:	sub    ecx,DWORD PTR [ebp-0x64]
6501bfcd:	lea    eax,[ebp-0x50]
6501bfd0:	cmp    ecx,DWORD PTR [ebp+0x524]
6501bfd6:	jae    0x6501c00b
6501bfd8:	mov    edx,DWORD PTR [ebp-0x54]
6501bfdb:	add    DWORD PTR [ebp-0x54],0x2
6501bfdf:	movzx  edx,WORD PTR [edx]
6501bfe2:	inc    ecx
6501bfe3:	inc    ecx
6501bfe4:	cmp    dx,0xa
6501bfe8:	jne    0x6501bff9
6501bfea:	add    DWORD PTR [ebp-0x68],0x2
6501bfee:	mov    WORD PTR [eax],0xd
6501bff3:	inc    eax
6501bff4:	inc    eax
6501bff5:	add    DWORD PTR [ebp-0x5c],0x2
6501bff9:	add    DWORD PTR [ebp-0x5c],0x2
6501bffd:	mov    WORD PTR [eax],dx
6501c000:	inc    eax
6501c001:	inc    eax
6501c002:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6501c009:	jb     0x6501bfd0
6501c00b:	mov    ebx,eax
6501c00d:	lea    eax,[ebp-0x50]
6501c010:	sub    ebx,eax
6501c012:	push   0x0
6501c014:	lea    eax,[ebp-0x6c]
6501c017:	push   eax
6501c018:	push   ebx
6501c019:	lea    eax,[ebp-0x50]
6501c01c:	push   eax
6501c01d:	mov    eax,DWORD PTR [esi]
6501c01f:	push   DWORD PTR [edi+eax*1]
6501c022:	call   DWORD PTR ds:0x65024088
6501c028:	test   eax,eax
6501c02a:	je     0x6501c154
6501c030:	mov    eax,DWORD PTR [ebp-0x6c]
6501c033:	add    DWORD PTR [ebp-0x60],eax
6501c036:	cmp    eax,ebx
6501c038:	jl     0x6501c15d
6501c03e:	mov    eax,DWORD PTR [ebp-0x54]
6501c041:	sub    eax,DWORD PTR [ebp-0x64]
6501c044:	cmp    eax,DWORD PTR [ebp+0x524]
6501c04a:	jb     0x6501bfc0
6501c050:	jmp    0x6501c15d
6501c055:	cmp    DWORD PTR [ebp+0x524],ecx
6501c05b:	jbe    0x6501c193
6501c061:	mov    ecx,DWORD PTR [ebp-0x54]
6501c064:	and    DWORD PTR [ebp-0x5c],0x0
6501c068:	sub    ecx,DWORD PTR [ebp-0x64]
6501c06b:	push   0x2
6501c06d:	lea    eax,[ebp+0x3b4]
6501c073:	pop    esi
6501c074:	cmp    ecx,DWORD PTR [ebp+0x524]
6501c07a:	jae    0x6501c0a8
6501c07c:	mov    edx,DWORD PTR [ebp-0x54]
6501c07f:	movzx  edx,WORD PTR [edx]
6501c082:	add    DWORD PTR [ebp-0x54],esi
6501c085:	add    ecx,esi
6501c087:	cmp    dx,0xa
6501c08b:	jne    0x6501c097
6501c08d:	mov    WORD PTR [eax],0xd
6501c092:	add    eax,esi
6501c094:	add    DWORD PTR [ebp-0x5c],esi
6501c097:	add    DWORD PTR [ebp-0x5c],esi
6501c09a:	mov    WORD PTR [eax],dx
6501c09d:	add    eax,esi
6501c09f:	cmp    DWORD PTR [ebp-0x5c],0x152
6501c0a6:	jb     0x6501c074
6501c0a8:	xor    esi,esi
6501c0aa:	push   esi
6501c0ab:	push   esi
6501c0ac:	push   0x2ab
6501c0b1:	lea    ecx,[ebp+0x104]
6501c0b7:	push   ecx
6501c0b8:	lea    ecx,[ebp+0x3b4]
6501c0be:	sub    eax,ecx
6501c0c0:	cdq    
6501c0c1:	sub    eax,edx
6501c0c3:	sar    eax,1
6501c0c5:	push   eax
6501c0c6:	mov    eax,ecx
6501c0c8:	push   eax
6501c0c9:	push   esi
6501c0ca:	push   0xfde9
6501c0cf:	call   DWORD PTR ds:0x65024028
6501c0d5:	mov    ebx,eax
6501c0d7:	cmp    ebx,esi
6501c0d9:	je     0x6501c154
6501c0db:	push   0x0
6501c0dd:	lea    eax,[ebp-0x6c]
6501c0e0:	push   eax
6501c0e1:	mov    eax,ebx
6501c0e3:	sub    eax,esi
6501c0e5:	push   eax
6501c0e6:	lea    eax,[ebp+esi*1+0x104]
6501c0ed:	push   eax
6501c0ee:	mov    eax,DWORD PTR [ebp-0x70]
6501c0f1:	mov    eax,DWORD PTR [eax]
6501c0f3:	push   DWORD PTR [edi+eax*1]
6501c0f6:	call   DWORD PTR ds:0x65024088
6501c0fc:	test   eax,eax
6501c0fe:	je     0x6501c109
6501c100:	add    esi,DWORD PTR [ebp-0x6c]
6501c103:	cmp    ebx,esi
6501c105:	jg     0x6501c0db
6501c107:	jmp    0x6501c112
6501c109:	call   DWORD PTR ds:0x65024044
6501c10f:	mov    DWORD PTR [ebp-0x58],eax
6501c112:	cmp    ebx,esi
6501c114:	jg     0x6501c15d
6501c116:	mov    eax,DWORD PTR [ebp-0x54]
6501c119:	sub    eax,DWORD PTR [ebp-0x64]
6501c11c:	cmp    eax,DWORD PTR [ebp+0x524]
6501c122:	mov    DWORD PTR [ebp-0x60],eax
6501c125:	jb     0x6501c061
6501c12b:	jmp    0x6501c15d
6501c12d:	push   0x0
6501c12f:	lea    ecx,[ebp-0x6c]
6501c132:	push   ecx
6501c133:	push   DWORD PTR [ebp+0x524]
6501c139:	push   DWORD PTR [ebp-0x64]
6501c13c:	push   DWORD PTR [eax]
6501c13e:	call   DWORD PTR ds:0x65024088
6501c144:	test   eax,eax
6501c146:	je     0x6501c154
6501c148:	mov    eax,DWORD PTR [ebp-0x6c]
6501c14b:	and    DWORD PTR [ebp-0x58],0x0
6501c14f:	mov    DWORD PTR [ebp-0x60],eax
6501c152:	jmp    0x6501c15d
6501c154:	call   DWORD PTR ds:0x65024044
6501c15a:	mov    DWORD PTR [ebp-0x58],eax
6501c15d:	cmp    DWORD PTR [ebp-0x60],0x0
6501c161:	jne    0x6501c1c0
6501c163:	cmp    DWORD PTR [ebp-0x58],0x0
6501c167:	je     0x6501c190
6501c169:	push   0x5
6501c16b:	pop    esi
6501c16c:	cmp    DWORD PTR [ebp-0x58],esi
6501c16f:	jne    0x6501c185
6501c171:	call   0x650143a0
6501c176:	mov    DWORD PTR [eax],0x9
6501c17c:	call   0x650143b3
6501c181:	mov    DWORD PTR [eax],esi
6501c183:	jmp    0x6501c1bb
6501c185:	push   DWORD PTR [ebp-0x58]
6501c188:	call   0x650143c6
6501c18d:	pop    ecx
6501c18e:	jmp    0x6501c1bb
6501c190:	mov    esi,DWORD PTR [ebp-0x70]
6501c193:	mov    eax,DWORD PTR [esi]
6501c195:	test   BYTE PTR [edi+eax*1+0x4],0x40
6501c19a:	je     0x6501c1a8
6501c19c:	mov    eax,DWORD PTR [ebp-0x64]
6501c19f:	cmp    BYTE PTR [eax],0x1a
6501c1a2:	jne    0x6501c1a8
6501c1a4:	xor    eax,eax
6501c1a6:	jmp    0x6501c1c6
6501c1a8:	call   0x650143a0
6501c1ad:	mov    DWORD PTR [eax],0x1c
6501c1b3:	call   0x650143b3
6501c1b8:	and    DWORD PTR [eax],0x0
6501c1bb:	or     eax,0xffffffff
6501c1be:	jmp    0x6501c1c6
6501c1c0:	mov    eax,DWORD PTR [ebp-0x60]
6501c1c3:	sub    eax,DWORD PTR [ebp-0x68]
6501c1c6:	pop    edi
6501c1c7:	pop    ebx
6501c1c8:	mov    ecx,DWORD PTR [ebp+0x510]
6501c1ce:	xor    ecx,ebp
6501c1d0:	pop    esi
6501c1d1:	call   0x6501275c
6501c1d6:	add    ebp,0x514
6501c1dc:	leave  
6501c1dd:	ret    
6501c1de:	push   0x10
6501c1e0:	push   0x65029c10
6501c1e5:	call   0x65013ca0
6501c1ea:	mov    eax,DWORD PTR [ebp+0x8]
6501c1ed:	cmp    eax,0xfffffffe
6501c1f0:	jne    0x6501c20d
6501c1f2:	call   0x650143b3
6501c1f7:	and    DWORD PTR [eax],0x0
6501c1fa:	call   0x650143a0
6501c1ff:	mov    DWORD PTR [eax],0x9
6501c205:	or     eax,0xffffffff
6501c208:	jmp    0x6501c2aa
6501c20d:	xor    edi,edi
6501c20f:	cmp    eax,edi
6501c211:	jl     0x6501c21b
6501c213:	cmp    eax,DWORD PTR ds:0x65031440
6501c219:	jb     0x6501c23c
6501c21b:	call   0x650143b3
6501c220:	mov    DWORD PTR [eax],edi
6501c222:	call   0x650143a0
6501c227:	mov    DWORD PTR [eax],0x9
6501c22d:	push   edi
6501c22e:	push   edi
6501c22f:	push   edi
6501c230:	push   edi
6501c231:	push   edi
6501c232:	call   0x6501224f
6501c237:	add    esp,0x14
6501c23a:	jmp    0x6501c205
6501c23c:	mov    ecx,eax
6501c23e:	sar    ecx,0x5
6501c241:	lea    ebx,[ecx*4+0x65031460]
6501c248:	mov    esi,eax
6501c24a:	and    esi,0x1f
6501c24d:	shl    esi,0x6
6501c250:	mov    ecx,DWORD PTR [ebx]
6501c252:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501c257:	and    ecx,0x1
6501c25a:	je     0x6501c21b
6501c25c:	push   eax
6501c25d:	call   0x6501da30
6501c262:	pop    ecx
6501c263:	mov    DWORD PTR [ebp-0x4],edi
6501c266:	mov    eax,DWORD PTR [ebx]
6501c268:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501c26d:	je     0x6501c285
6501c26f:	push   DWORD PTR [ebp+0x10]
6501c272:	push   DWORD PTR [ebp+0xc]
6501c275:	push   DWORD PTR [ebp+0x8]
6501c278:	call   0x6501bbbc
6501c27d:	add    esp,0xc
6501c280:	mov    DWORD PTR [ebp-0x1c],eax
6501c283:	jmp    0x6501c29b
6501c285:	call   0x650143a0
6501c28a:	mov    DWORD PTR [eax],0x9
6501c290:	call   0x650143b3
6501c295:	mov    DWORD PTR [eax],edi
6501c297:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501c29b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501c2a2:	call   0x6501c2b0
6501c2a7:	mov    eax,DWORD PTR [ebp-0x1c]
6501c2aa:	call   0x65013ce5
6501c2af:	ret    
6501c2b0:	push   DWORD PTR [ebp+0x8]
6501c2b3:	call   0x6501dad0
6501c2b8:	pop    ecx
6501c2b9:	ret    
6501c2ba:	inc    DWORD PTR ds:0x6502df74
6501c2c0:	push   0x1000
6501c2c5:	call   0x650159b0
6501c2ca:	test   eax,eax
6501c2cc:	pop    ecx
6501c2cd:	mov    ecx,DWORD PTR [esp+0x4]
6501c2d1:	mov    DWORD PTR [ecx+0x8],eax
6501c2d4:	je     0x6501c2e3
6501c2d6:	or     DWORD PTR [ecx+0xc],0x8
6501c2da:	mov    DWORD PTR [ecx+0x18],0x1000
6501c2e1:	jmp    0x6501c2f4
6501c2e3:	or     DWORD PTR [ecx+0xc],0x4
6501c2e7:	lea    eax,[ecx+0x14]
6501c2ea:	mov    DWORD PTR [ecx+0x8],eax
6501c2ed:	mov    DWORD PTR [ecx+0x18],0x2
6501c2f4:	mov    eax,DWORD PTR [ecx+0x8]
6501c2f7:	and    DWORD PTR [ecx+0x4],0x0
6501c2fb:	mov    DWORD PTR [ecx],eax
6501c2fd:	ret    
6501c2fe:	mov    eax,DWORD PTR [esp+0x4]
6501c302:	cmp    eax,0xfffffffe
6501c305:	jne    0x6501c315
6501c307:	call   0x650143a0
6501c30c:	mov    DWORD PTR [eax],0x9
6501c312:	xor    eax,eax
6501c314:	ret    
6501c315:	push   esi
6501c316:	xor    esi,esi
6501c318:	cmp    eax,esi
6501c31a:	jl     0x6501c324
6501c31c:	cmp    eax,DWORD PTR ds:0x65031440
6501c322:	jb     0x6501c340
6501c324:	call   0x650143a0
6501c329:	push   esi
6501c32a:	push   esi
6501c32b:	push   esi
6501c32c:	push   esi
6501c32d:	push   esi
6501c32e:	mov    DWORD PTR [eax],0x9
6501c334:	call   0x6501224f
6501c339:	add    esp,0x14
6501c33c:	xor    eax,eax
6501c33e:	pop    esi
6501c33f:	ret    
6501c340:	mov    ecx,eax
6501c342:	and    eax,0x1f
6501c345:	sar    ecx,0x5
6501c348:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501c34f:	shl    eax,0x6
6501c352:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6501c357:	and    eax,0x40
6501c35a:	pop    esi
6501c35b:	ret    
6501c35c:	mov    eax,0x6502cc80
6501c361:	ret    
6501c362:	mov    eax,ds:0x65031420
6501c367:	test   eax,eax
6501c369:	push   esi
6501c36a:	push   0x14
6501c36c:	pop    esi
6501c36d:	jne    0x6501c376
6501c36f:	mov    eax,0x200
6501c374:	jmp    0x6501c37c
6501c376:	cmp    eax,esi
6501c378:	jge    0x6501c381
6501c37a:	mov    eax,esi
6501c37c:	mov    ds:0x65031420,eax
6501c381:	push   0x4
6501c383:	push   eax
6501c384:	call   0x650159f0
6501c389:	test   eax,eax
6501c38b:	pop    ecx
6501c38c:	pop    ecx
6501c38d:	mov    ds:0x65030400,eax
6501c392:	jne    0x6501c3b2
6501c394:	push   0x4
6501c396:	push   esi
6501c397:	mov    DWORD PTR ds:0x65031420,esi
6501c39d:	call   0x650159f0
6501c3a2:	test   eax,eax
6501c3a4:	pop    ecx
6501c3a5:	pop    ecx
6501c3a6:	mov    ds:0x65030400,eax
6501c3ab:	jne    0x6501c3b2
6501c3ad:	push   0x1a
6501c3af:	pop    eax
6501c3b0:	pop    esi
6501c3b1:	ret    
6501c3b2:	xor    edx,edx
6501c3b4:	mov    ecx,0x6502cc80
6501c3b9:	jmp    0x6501c3c0
6501c3bb:	mov    eax,ds:0x65030400
6501c3c0:	mov    DWORD PTR [edx+eax*1],ecx
6501c3c3:	add    ecx,0x20
6501c3c6:	add    edx,0x4
6501c3c9:	cmp    ecx,0x6502cf00
6501c3cf:	jl     0x6501c3bb
6501c3d1:	push   0xfffffffe
6501c3d3:	pop    esi
6501c3d4:	xor    edx,edx
6501c3d6:	mov    ecx,0x6502cc90
6501c3db:	push   edi
6501c3dc:	mov    eax,edx
6501c3de:	sar    eax,0x5
6501c3e1:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501c3e8:	mov    edi,edx
6501c3ea:	and    edi,0x1f
6501c3ed:	shl    edi,0x6
6501c3f0:	mov    eax,DWORD PTR [edi+eax*1]
6501c3f3:	cmp    eax,0xffffffff
6501c3f6:	je     0x6501c400
6501c3f8:	cmp    eax,esi
6501c3fa:	je     0x6501c400
6501c3fc:	test   eax,eax
6501c3fe:	jne    0x6501c402
6501c400:	mov    DWORD PTR [ecx],esi
6501c402:	add    ecx,0x20
6501c405:	inc    edx
6501c406:	cmp    ecx,0x6502ccf0
6501c40c:	jl     0x6501c3dc
6501c40e:	pop    edi
6501c40f:	xor    eax,eax
6501c411:	pop    esi
6501c412:	ret    
6501c413:	call   0x6501ddd1
6501c418:	cmp    BYTE PTR ds:0x6502d92c,0x0
6501c41f:	je     0x6501c426
6501c421:	call   0x6501dbb4
6501c426:	push   DWORD PTR ds:0x65030400
6501c42c:	call   0x65013577
6501c431:	pop    ecx
6501c432:	ret    
6501c433:	push   esi
6501c434:	mov    esi,DWORD PTR [esp+0x8]
6501c438:	mov    eax,0x6502cc80
6501c43d:	cmp    esi,eax
6501c43f:	jb     0x6501c463
6501c441:	cmp    esi,0x6502cee0
6501c447:	ja     0x6501c463
6501c449:	mov    ecx,esi
6501c44b:	sub    ecx,eax
6501c44d:	sar    ecx,0x5
6501c450:	add    ecx,0x10
6501c453:	push   ecx
6501c454:	call   0x65019c98
6501c459:	or     DWORD PTR [esi+0xc],0x8000
6501c460:	pop    ecx
6501c461:	pop    esi
6501c462:	ret    
6501c463:	add    esi,0x20
6501c466:	push   esi
6501c467:	call   DWORD PTR ds:0x6502409c
6501c46d:	pop    esi
6501c46e:	ret    
6501c46f:	mov    eax,DWORD PTR [esp+0x4]
6501c473:	cmp    eax,0x14
6501c476:	jge    0x6501c48e
6501c478:	add    eax,0x10
6501c47b:	push   eax
6501c47c:	call   0x65019c98
6501c481:	mov    eax,DWORD PTR [esp+0xc]
6501c485:	or     DWORD PTR [eax+0xc],0x8000
6501c48c:	pop    ecx
6501c48d:	ret    
6501c48e:	mov    eax,DWORD PTR [esp+0x8]
6501c492:	add    eax,0x20
6501c495:	push   eax
6501c496:	call   DWORD PTR ds:0x6502409c
6501c49c:	ret    
6501c49d:	mov    eax,DWORD PTR [esp+0x4]
6501c4a1:	mov    ecx,0x6502cc80
6501c4a6:	cmp    eax,ecx
6501c4a8:	jb     0x6501c4c8
6501c4aa:	cmp    eax,0x6502cee0
6501c4af:	ja     0x6501c4c8
6501c4b1:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c4b8:	sub    eax,ecx
6501c4ba:	sar    eax,0x5
6501c4bd:	add    eax,0x10
6501c4c0:	push   eax
6501c4c1:	call   0x65019bc0
6501c4c6:	pop    ecx
6501c4c7:	ret    
6501c4c8:	add    eax,0x20
6501c4cb:	push   eax
6501c4cc:	call   DWORD PTR ds:0x650240a0
6501c4d2:	ret    
6501c4d3:	mov    ecx,DWORD PTR [esp+0x4]
6501c4d7:	cmp    ecx,0x14
6501c4da:	mov    eax,DWORD PTR [esp+0x8]
6501c4de:	jge    0x6501c4f2
6501c4e0:	and    DWORD PTR [eax+0xc],0xffff7fff
6501c4e7:	add    ecx,0x10
6501c4ea:	push   ecx
6501c4eb:	call   0x65019bc0
6501c4f0:	pop    ecx
6501c4f1:	ret    
6501c4f2:	add    eax,0x20
6501c4f5:	push   eax
6501c4f6:	call   DWORD PTR ds:0x650240a0
6501c4fc:	ret    
6501c4fd:	mov    eax,DWORD PTR [esp+0x4]
6501c501:	push   esi
6501c502:	xor    esi,esi
6501c504:	cmp    eax,esi
6501c506:	jne    0x6501c525
6501c508:	call   0x650143a0
6501c50d:	push   esi
6501c50e:	push   esi
6501c50f:	push   esi
6501c510:	push   esi
6501c511:	push   esi
6501c512:	mov    DWORD PTR [eax],0x16
6501c518:	call   0x6501224f
6501c51d:	add    esp,0x14
6501c520:	or     eax,0xffffffff
6501c523:	pop    esi
6501c524:	ret    
6501c525:	mov    eax,DWORD PTR [eax+0x10]
6501c528:	pop    esi
6501c529:	ret    
6501c52a:	push   ebp
6501c52b:	mov    ebp,esp
6501c52d:	sub    esp,0x10
6501c530:	mov    eax,ds:0x6502c09c
6501c535:	xor    eax,ebp
6501c537:	mov    DWORD PTR [ebp-0x4],eax
6501c53a:	push   ebx
6501c53b:	push   esi
6501c53c:	mov    esi,DWORD PTR [ebp+0xc]
6501c53f:	test   BYTE PTR [esi+0xc],0x40
6501c543:	push   edi
6501c544:	jne    0x6501c6d9
6501c54a:	push   esi
6501c54b:	call   0x6501c4fd
6501c550:	cmp    eax,0xffffffff
6501c553:	pop    ecx
6501c554:	mov    edi,0x6502c880
6501c559:	je     0x6501c589
6501c55b:	push   esi
6501c55c:	call   0x6501c4fd
6501c561:	cmp    eax,0xfffffffe
6501c564:	pop    ecx
6501c565:	je     0x6501c589
6501c567:	push   esi
6501c568:	call   0x6501c4fd
6501c56d:	sar    eax,0x5
6501c570:	push   esi
6501c571:	lea    ebx,[eax*4+0x65031460]
6501c578:	call   0x6501c4fd
6501c57d:	and    eax,0x1f
6501c580:	pop    ecx
6501c581:	shl    eax,0x6
6501c584:	add    eax,DWORD PTR [ebx]
6501c586:	pop    ecx
6501c587:	jmp    0x6501c58b
6501c589:	mov    eax,edi
6501c58b:	mov    al,BYTE PTR [eax+0x24]
6501c58e:	and    al,0x7f
6501c590:	cmp    al,0x2
6501c592:	je     0x6501c6d9
6501c598:	push   esi
6501c599:	call   0x6501c4fd
6501c59e:	cmp    eax,0xffffffff
6501c5a1:	pop    ecx
6501c5a2:	je     0x6501c5d2
6501c5a4:	push   esi
6501c5a5:	call   0x6501c4fd
6501c5aa:	cmp    eax,0xfffffffe
6501c5ad:	pop    ecx
6501c5ae:	je     0x6501c5d2
6501c5b0:	push   esi
6501c5b1:	call   0x6501c4fd
6501c5b6:	sar    eax,0x5
6501c5b9:	push   esi
6501c5ba:	lea    ebx,[eax*4+0x65031460]
6501c5c1:	call   0x6501c4fd
6501c5c6:	and    eax,0x1f
6501c5c9:	pop    ecx
6501c5ca:	shl    eax,0x6
6501c5cd:	add    eax,DWORD PTR [ebx]
6501c5cf:	pop    ecx
6501c5d0:	jmp    0x6501c5d4
6501c5d2:	mov    eax,edi
6501c5d4:	mov    al,BYTE PTR [eax+0x24]
6501c5d7:	and    al,0x7f
6501c5d9:	cmp    al,0x1
6501c5db:	jne    0x6501c639
6501c5dd:	dec    DWORD PTR [esi+0x4]
6501c5e0:	mov    ebx,DWORD PTR [ebp+0x8]
6501c5e3:	js     0x6501c5f3
6501c5e5:	mov    eax,DWORD PTR [esi]
6501c5e7:	mov    BYTE PTR [eax],bl
6501c5e9:	mov    ecx,DWORD PTR [esi]
6501c5eb:	movzx  eax,BYTE PTR [ecx]
6501c5ee:	inc    ecx
6501c5ef:	mov    DWORD PTR [esi],ecx
6501c5f1:	jmp    0x6501c5ff
6501c5f3:	movsx  eax,bl
6501c5f6:	push   esi
6501c5f7:	push   eax
6501c5f8:	call   0x650167e5
6501c5fd:	pop    ecx
6501c5fe:	pop    ecx
6501c5ff:	cmp    eax,0xffffffff
6501c602:	jne    0x6501c60d
6501c604:	or     ax,0xffff
6501c608:	jmp    0x6501c6f9
6501c60d:	dec    DWORD PTR [esi+0x4]
6501c610:	js     0x6501c620
6501c612:	mov    eax,DWORD PTR [esi]
6501c614:	mov    BYTE PTR [eax],bh
6501c616:	mov    ecx,DWORD PTR [esi]
6501c618:	movzx  eax,BYTE PTR [ecx]
6501c61b:	inc    ecx
6501c61c:	mov    DWORD PTR [esi],ecx
6501c61e:	jmp    0x6501c62c
6501c620:	movsx  eax,bh
6501c623:	push   esi
6501c624:	push   eax
6501c625:	call   0x650167e5
6501c62a:	pop    ecx
6501c62b:	pop    ecx
6501c62c:	cmp    eax,0xffffffff
6501c62f:	je     0x6501c604
6501c631:	mov    ax,bx
6501c634:	jmp    0x6501c6f9
6501c639:	push   esi
6501c63a:	call   0x6501c4fd
6501c63f:	cmp    eax,0xffffffff
6501c642:	pop    ecx
6501c643:	je     0x6501c673
6501c645:	push   esi
6501c646:	call   0x6501c4fd
6501c64b:	cmp    eax,0xfffffffe
6501c64e:	pop    ecx
6501c64f:	je     0x6501c673
6501c651:	push   esi
6501c652:	call   0x6501c4fd
6501c657:	sar    eax,0x5
6501c65a:	push   esi
6501c65b:	lea    ebx,[eax*4+0x65031460]
6501c662:	call   0x6501c4fd
6501c667:	and    eax,0x1f
6501c66a:	pop    ecx
6501c66b:	shl    eax,0x6
6501c66e:	add    eax,DWORD PTR [ebx]
6501c670:	pop    ecx
6501c671:	jmp    0x6501c675
6501c673:	mov    eax,edi
6501c675:	test   BYTE PTR [eax+0x4],0x80
6501c679:	je     0x6501c6d9
6501c67b:	push   DWORD PTR [ebp+0x8]
6501c67e:	lea    eax,[ebp-0xc]
6501c681:	push   0x5
6501c683:	push   eax
6501c684:	lea    eax,[ebp-0x10]
6501c687:	push   eax
6501c688:	call   0x6501d6c8
6501c68d:	add    esp,0x10
6501c690:	test   eax,eax
6501c692:	jne    0x6501c604
6501c698:	xor    ebx,ebx
6501c69a:	cmp    DWORD PTR [ebp-0x10],ebx
6501c69d:	jle    0x6501c6d3
6501c69f:	dec    DWORD PTR [esi+0x4]
6501c6a2:	js     0x6501c6b6
6501c6a4:	mov    eax,DWORD PTR [esi]
6501c6a6:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6501c6aa:	mov    BYTE PTR [eax],cl
6501c6ac:	mov    ecx,DWORD PTR [esi]
6501c6ae:	movzx  eax,BYTE PTR [ecx]
6501c6b1:	inc    ecx
6501c6b2:	mov    DWORD PTR [esi],ecx
6501c6b4:	jmp    0x6501c6c4
6501c6b6:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6501c6bb:	push   esi
6501c6bc:	push   eax
6501c6bd:	call   0x650167e5
6501c6c2:	pop    ecx
6501c6c3:	pop    ecx
6501c6c4:	cmp    eax,0xffffffff
6501c6c7:	je     0x6501c604
6501c6cd:	inc    ebx
6501c6ce:	cmp    ebx,DWORD PTR [ebp-0x10]
6501c6d1:	jl     0x6501c69f
6501c6d3:	mov    ax,WORD PTR [ebp+0x8]
6501c6d7:	jmp    0x6501c6f9
6501c6d9:	add    DWORD PTR [esi+0x4],0xfffffffe
6501c6dd:	js     0x6501c6ec
6501c6df:	mov    ecx,DWORD PTR [esi]
6501c6e1:	mov    eax,DWORD PTR [ebp+0x8]
6501c6e4:	mov    WORD PTR [ecx],ax
6501c6e7:	add    DWORD PTR [esi],0x2
6501c6ea:	jmp    0x6501c6f9
6501c6ec:	movzx  eax,WORD PTR [ebp+0x8]
6501c6f0:	push   esi
6501c6f1:	push   eax
6501c6f2:	call   0x6501ddda
6501c6f7:	pop    ecx
6501c6f8:	pop    ecx
6501c6f9:	mov    ecx,DWORD PTR [ebp-0x4]
6501c6fc:	pop    edi
6501c6fd:	pop    esi
6501c6fe:	xor    ecx,ebp
6501c700:	pop    ebx
6501c701:	call   0x6501275c
6501c706:	leave  
6501c707:	ret    
6501c708:	mov    eax,ds:0x6502c09c
6501c70d:	or     eax,0x1
6501c710:	xor    ecx,ecx
6501c712:	cmp    DWORD PTR ds:0x6502df78,eax
6501c718:	sete   cl
6501c71b:	mov    eax,ecx
6501c71d:	ret    
6501c71e:	push   ebp
6501c71f:	mov    ebp,esp
6501c721:	sub    esp,0x10
6501c724:	push   ebx
6501c725:	push   esi
6501c726:	mov    esi,DWORD PTR [ebp+0xc]
6501c729:	xor    ebx,ebx
6501c72b:	cmp    esi,ebx
6501c72d:	je     0x6501c742
6501c72f:	cmp    DWORD PTR [ebp+0x10],ebx
6501c732:	je     0x6501c742
6501c734:	cmp    BYTE PTR [esi],bl
6501c736:	jne    0x6501c748
6501c738:	mov    eax,DWORD PTR [ebp+0x8]
6501c73b:	cmp    eax,ebx
6501c73d:	je     0x6501c742
6501c73f:	mov    WORD PTR [eax],bx
6501c742:	xor    eax,eax
6501c744:	pop    esi
6501c745:	pop    ebx
6501c746:	leave  
6501c747:	ret    
6501c748:	push   DWORD PTR [ebp+0x14]
6501c74b:	lea    ecx,[ebp-0x10]
6501c74e:	call   0x650128ff
6501c753:	mov    eax,DWORD PTR [ebp-0x10]
6501c756:	cmp    DWORD PTR [eax+0x14],ebx
6501c759:	jne    0x6501c77a
6501c75b:	mov    eax,DWORD PTR [ebp+0x8]
6501c75e:	cmp    eax,ebx
6501c760:	je     0x6501c769
6501c762:	movzx  cx,BYTE PTR [esi]
6501c766:	mov    WORD PTR [eax],cx
6501c769:	cmp    BYTE PTR [ebp-0x4],bl
6501c76c:	je     0x6501c775
6501c76e:	mov    eax,DWORD PTR [ebp-0x8]
6501c771:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c775:	xor    eax,eax
6501c777:	inc    eax
6501c778:	jmp    0x6501c744
6501c77a:	lea    eax,[ebp-0x10]
6501c77d:	push   eax
6501c77e:	movzx  eax,BYTE PTR [esi]
6501c781:	push   eax
6501c782:	call   0x65019ade
6501c787:	test   eax,eax
6501c789:	pop    ecx
6501c78a:	pop    ecx
6501c78b:	je     0x6501c80a
6501c78d:	mov    eax,DWORD PTR [ebp-0x10]
6501c790:	mov    ecx,DWORD PTR [eax+0xac]
6501c796:	cmp    ecx,0x1
6501c799:	jle    0x6501c7c0
6501c79b:	cmp    DWORD PTR [ebp+0x10],ecx
6501c79e:	jl     0x6501c7c0
6501c7a0:	xor    edx,edx
6501c7a2:	cmp    DWORD PTR [ebp+0x8],ebx
6501c7a5:	setne  dl
6501c7a8:	push   edx
6501c7a9:	push   DWORD PTR [ebp+0x8]
6501c7ac:	push   ecx
6501c7ad:	push   esi
6501c7ae:	push   0x9
6501c7b0:	push   DWORD PTR [eax+0x4]
6501c7b3:	call   DWORD PTR ds:0x65024024
6501c7b9:	test   eax,eax
6501c7bb:	mov    eax,DWORD PTR [ebp-0x10]
6501c7be:	jne    0x6501c7d0
6501c7c0:	mov    ecx,DWORD PTR [ebp+0x10]
6501c7c3:	cmp    ecx,DWORD PTR [eax+0xac]
6501c7c9:	jb     0x6501c7eb
6501c7cb:	cmp    BYTE PTR [esi+0x1],bl
6501c7ce:	je     0x6501c7eb
6501c7d0:	cmp    BYTE PTR [ebp-0x4],bl
6501c7d3:	mov    eax,DWORD PTR [eax+0xac]
6501c7d9:	je     0x6501c744
6501c7df:	mov    ecx,DWORD PTR [ebp-0x8]
6501c7e2:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501c7e6:	jmp    0x6501c744
6501c7eb:	call   0x650143a0
6501c7f0:	mov    DWORD PTR [eax],0x2a
6501c7f6:	cmp    BYTE PTR [ebp-0x4],bl
6501c7f9:	je     0x6501c802
6501c7fb:	mov    eax,DWORD PTR [ebp-0x8]
6501c7fe:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c802:	or     eax,0xffffffff
6501c805:	jmp    0x6501c744
6501c80a:	xor    eax,eax
6501c80c:	cmp    DWORD PTR [ebp+0x8],ebx
6501c80f:	setne  al
6501c812:	push   eax
6501c813:	push   DWORD PTR [ebp+0x8]
6501c816:	mov    eax,DWORD PTR [ebp-0x10]
6501c819:	push   0x1
6501c81b:	push   esi
6501c81c:	push   0x9
6501c81e:	push   DWORD PTR [eax+0x4]
6501c821:	call   DWORD PTR ds:0x65024024
6501c827:	test   eax,eax
6501c829:	jne    0x6501c769
6501c82f:	jmp    0x6501c7eb
6501c831:	push   0x0
6501c833:	push   DWORD PTR [esp+0x10]
6501c837:	push   DWORD PTR [esp+0x10]
6501c83b:	push   DWORD PTR [esp+0x10]
6501c83f:	call   0x6501c71e
6501c844:	add    esp,0x10
6501c847:	ret    
6501c848:	test   BYTE PTR [ecx+0xc],0x40
6501c84c:	je     0x6501c854
6501c84e:	cmp    DWORD PTR [ecx+0x8],0x0
6501c852:	je     0x6501c878
6501c854:	dec    DWORD PTR [ecx+0x4]
6501c857:	js     0x6501c864
6501c859:	mov    edx,DWORD PTR [ecx]
6501c85b:	mov    BYTE PTR [edx],al
6501c85d:	inc    DWORD PTR [ecx]
6501c85f:	movzx  eax,al
6501c862:	jmp    0x6501c870
6501c864:	movsx  eax,al
6501c867:	push   ecx
6501c868:	push   eax
6501c869:	call   0x650167e5
6501c86e:	pop    ecx
6501c86f:	pop    ecx
6501c870:	cmp    eax,0xffffffff
6501c873:	jne    0x6501c878
6501c875:	or     DWORD PTR [esi],eax
6501c877:	ret    
6501c878:	inc    DWORD PTR [esi]
6501c87a:	ret    
6501c87b:	push   ebp
6501c87c:	mov    ebp,esp
6501c87e:	push   esi
6501c87f:	mov    esi,eax
6501c881:	jmp    0x6501c896
6501c883:	mov    ecx,DWORD PTR [ebp+0x10]
6501c886:	mov    al,BYTE PTR [ebp+0x8]
6501c889:	dec    DWORD PTR [ebp+0xc]
6501c88c:	call   0x6501c848
6501c891:	cmp    DWORD PTR [esi],0xffffffff
6501c894:	je     0x6501c89c
6501c896:	cmp    DWORD PTR [ebp+0xc],0x0
6501c89a:	jg     0x6501c883
6501c89c:	pop    esi
6501c89d:	pop    ebp
6501c89e:	ret    
6501c89f:	push   ebp
6501c8a0:	lea    ebp,[esp-0x1f8]
6501c8a7:	sub    esp,0x278
6501c8ad:	mov    eax,ds:0x6502c09c
6501c8b2:	xor    eax,ebp
6501c8b4:	mov    DWORD PTR [ebp+0x1f4],eax
6501c8ba:	mov    eax,DWORD PTR [ebp+0x200]
6501c8c0:	push   ebx
6501c8c1:	mov    ebx,DWORD PTR [ebp+0x204]
6501c8c7:	push   esi
6501c8c8:	xor    esi,esi
6501c8ca:	push   edi
6501c8cb:	mov    edi,DWORD PTR [ebp+0x20c]
6501c8d1:	push   DWORD PTR [ebp+0x208]
6501c8d7:	lea    ecx,[ebp-0x5c]
6501c8da:	mov    DWORD PTR [ebp-0x30],eax
6501c8dd:	mov    DWORD PTR [ebp-0x2c],edi
6501c8e0:	mov    DWORD PTR [ebp-0x64],esi
6501c8e3:	mov    DWORD PTR [ebp-0x18],esi
6501c8e6:	mov    DWORD PTR [ebp-0x40],esi
6501c8e9:	mov    DWORD PTR [ebp-0x20],esi
6501c8ec:	mov    DWORD PTR [ebp-0x3c],esi
6501c8ef:	mov    DWORD PTR [ebp-0x68],esi
6501c8f2:	mov    DWORD PTR [ebp-0x44],esi
6501c8f5:	call   0x650128ff
6501c8fa:	cmp    DWORD PTR [ebp-0x30],esi
6501c8fd:	jne    0x6501c92c
6501c8ff:	call   0x650143a0
6501c904:	push   esi
6501c905:	push   esi
6501c906:	push   esi
6501c907:	push   esi
6501c908:	mov    DWORD PTR [eax],0x16
6501c90e:	push   esi
6501c90f:	call   0x6501224f
6501c914:	add    esp,0x14
6501c917:	cmp    BYTE PTR [ebp-0x50],0x0
6501c91b:	je     0x6501c924
6501c91d:	mov    eax,DWORD PTR [ebp-0x54]
6501c920:	and    DWORD PTR [eax+0x70],0xfffffffd
6501c924:	or     eax,0xffffffff
6501c927:	jmp    0x6501d216
6501c92c:	mov    eax,DWORD PTR [ebp-0x30]
6501c92f:	test   BYTE PTR [eax+0xc],0x40
6501c933:	jne    0x6501c9dd
6501c939:	push   eax
6501c93a:	call   0x6501c4fd
6501c93f:	cmp    eax,0xffffffff
6501c942:	pop    ecx
6501c943:	je     0x6501c97b
6501c945:	push   DWORD PTR [ebp-0x30]
6501c948:	call   0x6501c4fd
6501c94d:	cmp    eax,0xfffffffe
6501c950:	pop    ecx
6501c951:	je     0x6501c97b
6501c953:	push   DWORD PTR [ebp-0x30]
6501c956:	call   0x6501c4fd
6501c95b:	push   DWORD PTR [ebp-0x30]
6501c95e:	sar    eax,0x5
6501c961:	lea    esi,[eax*4+0x65031460]
6501c968:	call   0x6501c4fd
6501c96d:	and    eax,0x1f
6501c970:	shl    eax,0x6
6501c973:	add    eax,DWORD PTR [esi]
6501c975:	pop    ecx
6501c976:	pop    ecx
6501c977:	xor    esi,esi
6501c979:	jmp    0x6501c980
6501c97b:	mov    eax,0x6502c880
6501c980:	test   BYTE PTR [eax+0x24],0x7f
6501c984:	jne    0x6501c8ff
6501c98a:	push   DWORD PTR [ebp-0x30]
6501c98d:	call   0x6501c4fd
6501c992:	cmp    eax,0xffffffff
6501c995:	pop    ecx
6501c996:	je     0x6501c9ce
6501c998:	push   DWORD PTR [ebp-0x30]
6501c99b:	call   0x6501c4fd
6501c9a0:	cmp    eax,0xfffffffe
6501c9a3:	pop    ecx
6501c9a4:	je     0x6501c9ce
6501c9a6:	push   DWORD PTR [ebp-0x30]
6501c9a9:	call   0x6501c4fd
6501c9ae:	push   DWORD PTR [ebp-0x30]
6501c9b1:	sar    eax,0x5
6501c9b4:	lea    esi,[eax*4+0x65031460]
6501c9bb:	call   0x6501c4fd
6501c9c0:	and    eax,0x1f
6501c9c3:	shl    eax,0x6
6501c9c6:	add    eax,DWORD PTR [esi]
6501c9c8:	pop    ecx
6501c9c9:	pop    ecx
6501c9ca:	xor    esi,esi
6501c9cc:	jmp    0x6501c9d3
6501c9ce:	mov    eax,0x6502c880
6501c9d3:	test   BYTE PTR [eax+0x24],0x80
6501c9d7:	jne    0x6501c8ff
6501c9dd:	cmp    ebx,esi
6501c9df:	je     0x6501c8ff
6501c9e5:	mov    dl,BYTE PTR [ebx]
6501c9e7:	test   dl,dl
6501c9e9:	mov    DWORD PTR [ebp-0x34],esi
6501c9ec:	mov    DWORD PTR [ebp-0x28],esi
6501c9ef:	mov    DWORD PTR [ebp-0x48],esi
6501c9f2:	mov    DWORD PTR [ebp-0x60],esi
6501c9f5:	mov    BYTE PTR [ebp-0x19],dl
6501c9f8:	je     0x6501d206
6501c9fe:	inc    ebx
6501c9ff:	xor    eax,eax
6501ca01:	cmp    DWORD PTR [ebp-0x34],eax
6501ca04:	mov    DWORD PTR [ebp-0x4c],ebx
6501ca07:	jl     0x6501d1f5
6501ca0d:	mov    cl,dl
6501ca0f:	sub    cl,0x20
6501ca12:	cmp    cl,0x58
6501ca15:	ja     0x6501ca24
6501ca17:	movsx  eax,dl
6501ca1a:	movzx  eax,BYTE PTR [eax+0x650263c0]
6501ca21:	and    eax,0xf
6501ca24:	mov    ecx,DWORD PTR [ebp-0x48]
6501ca27:	imul   eax,eax,0x9
6501ca2a:	movzx  eax,BYTE PTR [eax+ecx*1+0x650263e0]
6501ca32:	push   0x8
6501ca34:	shr    eax,0x4
6501ca37:	pop    esi
6501ca38:	cmp    eax,esi
6501ca3a:	mov    DWORD PTR [ebp-0x48],eax
6501ca3d:	je     0x6501d1de
6501ca43:	push   0x7
6501ca45:	pop    ecx
6501ca46:	cmp    eax,ecx
6501ca48:	ja     0x6501d1c8
6501ca4e:	jmp    DWORD PTR [eax*4+0x6501d22f]
6501ca55:	xor    eax,eax
6501ca57:	or     DWORD PTR [ebp-0x20],0xffffffff
6501ca5b:	mov    DWORD PTR [ebp-0x74],eax
6501ca5e:	mov    DWORD PTR [ebp-0x68],eax
6501ca61:	mov    DWORD PTR [ebp-0x40],eax
6501ca64:	mov    DWORD PTR [ebp-0x3c],eax
6501ca67:	mov    DWORD PTR [ebp-0x18],eax
6501ca6a:	mov    DWORD PTR [ebp-0x44],eax
6501ca6d:	jmp    0x6501d1c8
6501ca72:	movsx  eax,dl
6501ca75:	sub    eax,0x20
6501ca78:	je     0x6501cab6
6501ca7a:	sub    eax,0x3
6501ca7d:	je     0x6501caaa
6501ca7f:	sub    eax,esi
6501ca81:	je     0x6501caa1
6501ca83:	dec    eax
6501ca84:	dec    eax
6501ca85:	je     0x6501ca98
6501ca87:	sub    eax,0x3
6501ca8a:	jne    0x6501d1c8
6501ca90:	or     DWORD PTR [ebp-0x18],esi
6501ca93:	jmp    0x6501d1c8
6501ca98:	or     DWORD PTR [ebp-0x18],0x4
6501ca9c:	jmp    0x6501d1c8
6501caa1:	or     DWORD PTR [ebp-0x18],0x1
6501caa5:	jmp    0x6501d1c8
6501caaa:	or     DWORD PTR [ebp-0x18],0x80
6501cab1:	jmp    0x6501d1c8
6501cab6:	or     DWORD PTR [ebp-0x18],0x2
6501caba:	jmp    0x6501d1c8
6501cabf:	cmp    dl,0x2a
6501cac2:	jne    0x6501cae4
6501cac4:	add    edi,0x4
6501cac7:	mov    DWORD PTR [ebp-0x2c],edi
6501caca:	mov    edi,DWORD PTR [edi-0x4]
6501cacd:	test   edi,edi
6501cacf:	mov    DWORD PTR [ebp-0x40],edi
6501cad2:	jge    0x6501d1c8
6501cad8:	or     DWORD PTR [ebp-0x18],0x4
6501cadc:	neg    DWORD PTR [ebp-0x40]
6501cadf:	jmp    0x6501d1c8
6501cae4:	mov    eax,DWORD PTR [ebp-0x40]
6501cae7:	imul   eax,eax,0xa
6501caea:	movsx  ecx,dl
6501caed:	lea    eax,[eax+ecx*1-0x30]
6501caf1:	mov    DWORD PTR [ebp-0x40],eax
6501caf4:	jmp    0x6501d1c8
6501caf9:	and    DWORD PTR [ebp-0x20],0x0
6501cafd:	jmp    0x6501d1c8
6501cb02:	cmp    dl,0x2a
6501cb05:	jne    0x6501cb24
6501cb07:	add    edi,0x4
6501cb0a:	mov    DWORD PTR [ebp-0x2c],edi
6501cb0d:	mov    edi,DWORD PTR [edi-0x4]
6501cb10:	test   edi,edi
6501cb12:	mov    DWORD PTR [ebp-0x20],edi
6501cb15:	jge    0x6501d1c8
6501cb1b:	or     DWORD PTR [ebp-0x20],0xffffffff
6501cb1f:	jmp    0x6501d1c8
6501cb24:	mov    eax,DWORD PTR [ebp-0x20]
6501cb27:	imul   eax,eax,0xa
6501cb2a:	movsx  ecx,dl
6501cb2d:	lea    eax,[eax+ecx*1-0x30]
6501cb31:	mov    DWORD PTR [ebp-0x20],eax
6501cb34:	jmp    0x6501d1c8
6501cb39:	cmp    dl,0x49
6501cb3c:	je     0x6501cb84
6501cb3e:	cmp    dl,0x68
6501cb41:	je     0x6501cb7b
6501cb43:	cmp    dl,0x6c
6501cb46:	je     0x6501cb5d
6501cb48:	cmp    dl,0x77
6501cb4b:	jne    0x6501d1c8
6501cb51:	or     DWORD PTR [ebp-0x18],0x800
6501cb58:	jmp    0x6501d1c8
6501cb5d:	cmp    BYTE PTR [ebx],0x6c
6501cb60:	jne    0x6501cb72
6501cb62:	inc    ebx
6501cb63:	or     DWORD PTR [ebp-0x18],0x1000
6501cb6a:	mov    DWORD PTR [ebp-0x4c],ebx
6501cb6d:	jmp    0x6501d1c8
6501cb72:	or     DWORD PTR [ebp-0x18],0x10
6501cb76:	jmp    0x6501d1c8
6501cb7b:	or     DWORD PTR [ebp-0x18],0x20
6501cb7f:	jmp    0x6501d1c8
6501cb84:	mov    al,BYTE PTR [ebx]
6501cb86:	cmp    al,0x36
6501cb88:	jne    0x6501cba1
6501cb8a:	cmp    BYTE PTR [ebx+0x1],0x34
6501cb8e:	jne    0x6501cba1
6501cb90:	inc    ebx
6501cb91:	inc    ebx
6501cb92:	or     DWORD PTR [ebp-0x18],0x8000
6501cb99:	mov    DWORD PTR [ebp-0x4c],ebx
6501cb9c:	jmp    0x6501d1c8
6501cba1:	cmp    al,0x33
6501cba3:	jne    0x6501cbbc
6501cba5:	cmp    BYTE PTR [ebx+0x1],0x32
6501cba9:	jne    0x6501cbbc
6501cbab:	inc    ebx
6501cbac:	inc    ebx
6501cbad:	and    DWORD PTR [ebp-0x18],0xffff7fff
6501cbb4:	mov    DWORD PTR [ebp-0x4c],ebx
6501cbb7:	jmp    0x6501d1c8
6501cbbc:	cmp    al,0x64
6501cbbe:	je     0x6501d1c8
6501cbc4:	cmp    al,0x69
6501cbc6:	je     0x6501d1c8
6501cbcc:	cmp    al,0x6f
6501cbce:	je     0x6501d1c8
6501cbd4:	cmp    al,0x75
6501cbd6:	je     0x6501d1c8
6501cbdc:	cmp    al,0x78
6501cbde:	je     0x6501d1c8
6501cbe4:	cmp    al,0x58
6501cbe6:	je     0x6501d1c8
6501cbec:	and    DWORD PTR [ebp-0x48],0x0
6501cbf0:	and    DWORD PTR [ebp-0x44],0x0
6501cbf4:	lea    eax,[ebp-0x5c]
6501cbf7:	push   eax
6501cbf8:	movzx  eax,dl
6501cbfb:	push   eax
6501cbfc:	call   0x65019ade
6501cc01:	pop    ecx
6501cc02:	test   eax,eax
6501cc04:	mov    al,BYTE PTR [ebp-0x19]
6501cc07:	pop    ecx
6501cc08:	je     0x6501cc23
6501cc0a:	mov    ecx,DWORD PTR [ebp-0x30]
6501cc0d:	lea    esi,[ebp-0x34]
6501cc10:	call   0x6501c848
6501cc15:	mov    al,BYTE PTR [ebx]
6501cc17:	inc    ebx
6501cc18:	test   al,al
6501cc1a:	mov    DWORD PTR [ebp-0x4c],ebx
6501cc1d:	je     0x6501d1de
6501cc23:	mov    ecx,DWORD PTR [ebp-0x30]
6501cc26:	lea    esi,[ebp-0x34]
6501cc29:	call   0x6501c848
6501cc2e:	jmp    0x6501d1c8
6501cc33:	movsx  eax,dl
6501cc36:	cmp    eax,0x64
6501cc39:	jg     0x6501cdb3
6501cc3f:	je     0x6501ce2e
6501cc45:	cmp    eax,0x53
6501cc48:	jg     0x6501ccfa
6501cc4e:	je     0x6501ccab
6501cc50:	sub    eax,0x41
6501cc53:	je     0x6501cc65
6501cc55:	dec    eax
6501cc56:	dec    eax
6501cc57:	je     0x6501cc9a
6501cc59:	dec    eax
6501cc5a:	dec    eax
6501cc5b:	je     0x6501cc65
6501cc5d:	dec    eax
6501cc5e:	dec    eax
6501cc5f:	jne    0x6501d0b0
6501cc65:	add    dl,0x20
6501cc68:	mov    DWORD PTR [ebp-0x74],0x1
6501cc6f:	mov    BYTE PTR [ebp-0x19],dl
6501cc72:	or     DWORD PTR [ebp-0x18],0x40
6501cc76:	cmp    DWORD PTR [ebp-0x20],0x0
6501cc7a:	lea    ebx,[ebp-0x14]
6501cc7d:	mov    eax,0x200
6501cc82:	mov    DWORD PTR [ebp-0x24],ebx
6501cc85:	mov    DWORD PTR [ebp-0x6c],eax
6501cc88:	jge    0x6501ce52
6501cc8e:	mov    DWORD PTR [ebp-0x20],0x6
6501cc95:	jmp    0x6501cea1
6501cc9a:	test   WORD PTR [ebp-0x18],0x830
6501cca0:	jne    0x6501cd17
6501cca2:	or     DWORD PTR [ebp-0x18],0x800
6501cca9:	jmp    0x6501cd17
6501ccab:	test   WORD PTR [ebp-0x18],0x830
6501ccb1:	jne    0x6501ccba
6501ccb3:	or     DWORD PTR [ebp-0x18],0x800
6501ccba:	mov    ecx,DWORD PTR [ebp-0x20]
6501ccbd:	cmp    ecx,0xffffffff
6501ccc0:	jne    0x6501ccc7
6501ccc2:	mov    ecx,0x7fffffff
6501ccc7:	add    edi,0x4
6501ccca:	test   WORD PTR [ebp-0x18],0x810
6501ccd0:	mov    DWORD PTR [ebp-0x2c],edi
6501ccd3:	mov    edi,DWORD PTR [edi-0x4]
6501ccd6:	mov    DWORD PTR [ebp-0x24],edi
6501ccd9:	je     0x6501d08e
6501ccdf:	test   edi,edi
6501cce1:	jne    0x6501cceb
6501cce3:	mov    eax,ds:0x6502c954
6501cce8:	mov    DWORD PTR [ebp-0x24],eax
6501cceb:	mov    eax,DWORD PTR [ebp-0x24]
6501ccee:	mov    DWORD PTR [ebp-0x44],0x1
6501ccf5:	jmp    0x6501d083
6501ccfa:	sub    eax,0x58
6501ccfd:	je     0x6501cf37
6501cd03:	dec    eax
6501cd04:	dec    eax
6501cd05:	je     0x6501cd64
6501cd07:	sub    eax,ecx
6501cd09:	je     0x6501cc72
6501cd0f:	dec    eax
6501cd10:	dec    eax
6501cd11:	jne    0x6501d0b0
6501cd17:	add    edi,0x4
6501cd1a:	test   WORD PTR [ebp-0x18],0x810
6501cd20:	mov    DWORD PTR [ebp-0x2c],edi
6501cd23:	je     0x6501cd4c
6501cd25:	movzx  eax,WORD PTR [edi-0x4]
6501cd29:	push   eax
6501cd2a:	push   0x200
6501cd2f:	lea    eax,[ebp-0x14]
6501cd32:	push   eax
6501cd33:	lea    eax,[ebp-0x28]
6501cd36:	push   eax
6501cd37:	call   0x6501d6c8
6501cd3c:	add    esp,0x10
6501cd3f:	test   eax,eax
6501cd41:	je     0x6501cd59
6501cd43:	mov    DWORD PTR [ebp-0x68],0x1
6501cd4a:	jmp    0x6501cd59
6501cd4c:	mov    al,BYTE PTR [edi-0x4]
6501cd4f:	mov    BYTE PTR [ebp-0x14],al
6501cd52:	mov    DWORD PTR [ebp-0x28],0x1
6501cd59:	lea    eax,[ebp-0x14]
6501cd5c:	mov    DWORD PTR [ebp-0x24],eax
6501cd5f:	jmp    0x6501d0b0
6501cd64:	mov    eax,DWORD PTR [edi]
6501cd66:	add    edi,0x4
6501cd69:	test   eax,eax
6501cd6b:	mov    DWORD PTR [ebp-0x2c],edi
6501cd6e:	je     0x6501cd9f
6501cd70:	mov    ecx,DWORD PTR [eax+0x4]
6501cd73:	test   ecx,ecx
6501cd75:	je     0x6501cd9f
6501cd77:	test   WORD PTR [ebp-0x18],0x800
6501cd7d:	movsx  eax,WORD PTR [eax]
6501cd80:	mov    DWORD PTR [ebp-0x24],ecx
6501cd83:	je     0x6501cd96
6501cd85:	cdq    
6501cd86:	sub    eax,edx
6501cd88:	sar    eax,1
6501cd8a:	mov    DWORD PTR [ebp-0x44],0x1
6501cd91:	jmp    0x6501d0ad
6501cd96:	and    DWORD PTR [ebp-0x44],0x0
6501cd9a:	jmp    0x6501d0ad
6501cd9f:	mov    eax,ds:0x6502c950
6501cda4:	mov    DWORD PTR [ebp-0x24],eax
6501cda7:	push   eax
6501cda8:	call   0x65013ea0
6501cdad:	pop    ecx
6501cdae:	jmp    0x6501d0ad
6501cdb3:	cmp    eax,0x70
6501cdb6:	jg     0x6501cf3c
6501cdbc:	je     0x6501cf34
6501cdc2:	cmp    eax,0x65
6501cdc5:	jl     0x6501d0b0
6501cdcb:	cmp    eax,0x67
6501cdce:	jle    0x6501cc72
6501cdd4:	cmp    eax,0x69
6501cdd7:	je     0x6501ce2e
6501cdd9:	cmp    eax,0x6e
6501cddc:	je     0x6501cdf9
6501cdde:	cmp    eax,0x6f
6501cde1:	jne    0x6501d0b0
6501cde7:	test   BYTE PTR [ebp-0x18],0x80
6501cdeb:	mov    DWORD PTR [ebp-0x28],esi
6501cdee:	je     0x6501ce39
6501cdf0:	or     DWORD PTR [ebp-0x18],0x200
6501cdf7:	jmp    0x6501ce39
6501cdf9:	mov    esi,DWORD PTR [edi]
6501cdfb:	add    edi,0x4
6501cdfe:	mov    DWORD PTR [ebp-0x2c],edi
6501ce01:	call   0x6501c708
6501ce06:	test   eax,eax
6501ce08:	je     0x6501d1de
6501ce0e:	test   BYTE PTR [ebp-0x18],0x20
6501ce12:	je     0x6501ce1d
6501ce14:	mov    ax,WORD PTR [ebp-0x34]
6501ce18:	mov    WORD PTR [esi],ax
6501ce1b:	jmp    0x6501ce22
6501ce1d:	mov    eax,DWORD PTR [ebp-0x34]
6501ce20:	mov    DWORD PTR [esi],eax
6501ce22:	mov    DWORD PTR [ebp-0x68],0x1
6501ce29:	jmp    0x6501d1b5
6501ce2e:	or     DWORD PTR [ebp-0x18],0x40
6501ce32:	mov    DWORD PTR [ebp-0x28],0xa
6501ce39:	mov    ecx,DWORD PTR [ebp-0x18]
6501ce3c:	test   cx,cx
6501ce3f:	jns    0x6501cf86
6501ce45:	add    edi,esi
6501ce47:	mov    eax,DWORD PTR [edi-0x8]
6501ce4a:	mov    edx,DWORD PTR [edi-0x4]
6501ce4d:	jmp    0x6501cfbb
6501ce52:	jne    0x6501ce62
6501ce54:	cmp    dl,0x67
6501ce57:	jne    0x6501cea1
6501ce59:	mov    DWORD PTR [ebp-0x20],0x1
6501ce60:	jmp    0x6501cea1
6501ce62:	cmp    DWORD PTR [ebp-0x20],eax
6501ce65:	jle    0x6501ce6a
6501ce67:	mov    DWORD PTR [ebp-0x20],eax
6501ce6a:	cmp    DWORD PTR [ebp-0x20],0xa3
6501ce71:	jle    0x6501cea1
6501ce73:	mov    esi,DWORD PTR [ebp-0x20]
6501ce76:	add    esi,0x15d
6501ce7c:	push   esi
6501ce7d:	call   0x650159b0
6501ce82:	test   eax,eax
6501ce84:	mov    dl,BYTE PTR [ebp-0x19]
6501ce87:	pop    ecx
6501ce88:	mov    DWORD PTR [ebp-0x60],eax
6501ce8b:	push   0x8
6501ce8d:	je     0x6501ce99
6501ce8f:	mov    DWORD PTR [ebp-0x24],eax
6501ce92:	mov    DWORD PTR [ebp-0x6c],esi
6501ce95:	mov    ebx,eax
6501ce97:	jmp    0x6501cea0
6501ce99:	mov    DWORD PTR [ebp-0x20],0xa3
6501cea0:	pop    esi
6501cea1:	add    edi,esi
6501cea3:	mov    eax,DWORD PTR [edi-0x8]
6501cea6:	mov    DWORD PTR [ebp-0x80],eax
6501cea9:	mov    eax,DWORD PTR [edi-0x4]
6501ceac:	mov    DWORD PTR [ebp-0x7c],eax
6501ceaf:	lea    eax,[ebp-0x5c]
6501ceb2:	push   eax
6501ceb3:	push   DWORD PTR [ebp-0x74]
6501ceb6:	movsx  eax,dl
6501ceb9:	push   DWORD PTR [ebp-0x20]
6501cebc:	mov    DWORD PTR [ebp-0x2c],edi
6501cebf:	push   eax
6501cec0:	push   DWORD PTR [ebp-0x6c]
6501cec3:	lea    eax,[ebp-0x80]
6501cec6:	push   ebx
6501cec7:	push   eax
6501cec8:	push   DWORD PTR ds:0x6502cb5c
6501cece:	call   0x650144cf
6501ced3:	pop    ecx
6501ced4:	call   eax
6501ced6:	mov    edi,DWORD PTR [ebp-0x18]
6501ced9:	add    esp,0x1c
6501cedc:	and    edi,0x80
6501cee2:	je     0x6501ceff
6501cee4:	cmp    DWORD PTR [ebp-0x20],0x0
6501cee8:	jne    0x6501ceff
6501ceea:	lea    eax,[ebp-0x5c]
6501ceed:	push   eax
6501ceee:	push   ebx
6501ceef:	push   DWORD PTR ds:0x6502cb68
6501cef5:	call   0x650144cf
6501cefa:	pop    ecx
6501cefb:	call   eax
6501cefd:	pop    ecx
6501cefe:	pop    ecx
6501ceff:	cmp    BYTE PTR [ebp-0x19],0x67
6501cf03:	jne    0x6501cf1e
6501cf05:	test   edi,edi
6501cf07:	jne    0x6501cf1e
6501cf09:	lea    eax,[ebp-0x5c]
6501cf0c:	push   eax
6501cf0d:	push   ebx
6501cf0e:	push   DWORD PTR ds:0x6502cb64
6501cf14:	call   0x650144cf
6501cf19:	pop    ecx
6501cf1a:	call   eax
6501cf1c:	pop    ecx
6501cf1d:	pop    ecx
6501cf1e:	cmp    BYTE PTR [ebx],0x2d
6501cf21:	jne    0x6501cf2e
6501cf23:	or     DWORD PTR [ebp-0x18],0x100
6501cf2a:	inc    ebx
6501cf2b:	mov    DWORD PTR [ebp-0x24],ebx
6501cf2e:	push   ebx
6501cf2f:	jmp    0x6501cda8
6501cf34:	mov    DWORD PTR [ebp-0x20],esi
6501cf37:	mov    DWORD PTR [ebp-0x64],ecx
6501cf3a:	jmp    0x6501cf5d
6501cf3c:	sub    eax,0x73
6501cf3f:	je     0x6501ccba
6501cf45:	dec    eax
6501cf46:	dec    eax
6501cf47:	je     0x6501ce32
6501cf4d:	sub    eax,0x3
6501cf50:	jne    0x6501d0b0
6501cf56:	mov    DWORD PTR [ebp-0x64],0x27
6501cf5d:	test   BYTE PTR [ebp-0x18],0x80
6501cf61:	mov    DWORD PTR [ebp-0x28],0x10
6501cf68:	je     0x6501ce39
6501cf6e:	mov    al,BYTE PTR [ebp-0x64]
6501cf71:	add    al,0x51
6501cf73:	mov    BYTE PTR [ebp-0x38],0x30
6501cf77:	mov    BYTE PTR [ebp-0x37],al
6501cf7a:	mov    DWORD PTR [ebp-0x3c],0x2
6501cf81:	jmp    0x6501ce39
6501cf86:	test   cx,0x1000
6501cf8b:	jne    0x6501ce45
6501cf91:	add    edi,0x4
6501cf94:	test   cl,0x20
6501cf97:	je     0x6501cfae
6501cf99:	test   cl,0x40
6501cf9c:	mov    DWORD PTR [ebp-0x2c],edi
6501cf9f:	je     0x6501cfa7
6501cfa1:	movsx  eax,WORD PTR [edi-0x4]
6501cfa5:	jmp    0x6501cfab
6501cfa7:	movzx  eax,WORD PTR [edi-0x4]
6501cfab:	cdq    
6501cfac:	jmp    0x6501cfbe
6501cfae:	test   cl,0x40
6501cfb1:	mov    eax,DWORD PTR [edi-0x4]
6501cfb4:	je     0x6501cfb9
6501cfb6:	cdq    
6501cfb7:	jmp    0x6501cfbb
6501cfb9:	xor    edx,edx
6501cfbb:	mov    DWORD PTR [ebp-0x2c],edi
6501cfbe:	test   cl,0x40
6501cfc1:	je     0x6501cfdb
6501cfc3:	test   edx,edx
6501cfc5:	jg     0x6501cfdb
6501cfc7:	jl     0x6501cfcd
6501cfc9:	test   eax,eax
6501cfcb:	jae    0x6501cfdb
6501cfcd:	neg    eax
6501cfcf:	adc    edx,0x0
6501cfd2:	neg    edx
6501cfd4:	or     DWORD PTR [ebp-0x18],0x100
6501cfdb:	test   WORD PTR [ebp-0x18],0x9000
6501cfe1:	mov    ebx,edx
6501cfe3:	mov    edi,eax
6501cfe5:	jne    0x6501cfe9
6501cfe7:	xor    ebx,ebx
6501cfe9:	cmp    DWORD PTR [ebp-0x20],0x0
6501cfed:	jge    0x6501cff8
6501cfef:	mov    DWORD PTR [ebp-0x20],0x1
6501cff6:	jmp    0x6501d009
6501cff8:	and    DWORD PTR [ebp-0x18],0xfffffff7
6501cffc:	mov    eax,0x200
6501d001:	cmp    DWORD PTR [ebp-0x20],eax
6501d004:	jle    0x6501d009
6501d006:	mov    DWORD PTR [ebp-0x20],eax
6501d009:	mov    eax,edi
6501d00b:	or     eax,ebx
6501d00d:	jne    0x6501d012
6501d00f:	and    DWORD PTR [ebp-0x3c],eax
6501d012:	lea    esi,[ebp+0x1eb]
6501d018:	mov    eax,DWORD PTR [ebp-0x20]
6501d01b:	dec    DWORD PTR [ebp-0x20]
6501d01e:	test   eax,eax
6501d020:	jg     0x6501d028
6501d022:	mov    eax,edi
6501d024:	or     eax,ebx
6501d026:	je     0x6501d04c
6501d028:	mov    eax,DWORD PTR [ebp-0x28]
6501d02b:	cdq    
6501d02c:	push   edx
6501d02d:	push   eax
6501d02e:	push   ebx
6501d02f:	push   edi
6501d030:	call   0x65018a80
6501d035:	add    ecx,0x30
6501d038:	cmp    ecx,0x39
6501d03b:	mov    DWORD PTR [ebp-0x6c],ebx
6501d03e:	mov    edi,eax
6501d040:	mov    ebx,edx
6501d042:	jle    0x6501d047
6501d044:	add    ecx,DWORD PTR [ebp-0x64]
6501d047:	mov    BYTE PTR [esi],cl
6501d049:	dec    esi
6501d04a:	jmp    0x6501d018
6501d04c:	lea    eax,[ebp+0x1eb]
6501d052:	sub    eax,esi
6501d054:	inc    esi
6501d055:	test   WORD PTR [ebp-0x18],0x200
6501d05b:	mov    DWORD PTR [ebp-0x28],eax
6501d05e:	mov    DWORD PTR [ebp-0x24],esi
6501d061:	je     0x6501d0b0
6501d063:	test   eax,eax
6501d065:	je     0x6501d06e
6501d067:	mov    ecx,esi
6501d069:	cmp    BYTE PTR [ecx],0x30
6501d06c:	je     0x6501d0b0
6501d06e:	dec    DWORD PTR [ebp-0x24]
6501d071:	mov    ecx,DWORD PTR [ebp-0x24]
6501d074:	mov    BYTE PTR [ecx],0x30
6501d077:	inc    eax
6501d078:	jmp    0x6501d0ad
6501d07a:	dec    ecx
6501d07b:	cmp    WORD PTR [eax],0x0
6501d07f:	je     0x6501d087
6501d081:	inc    eax
6501d082:	inc    eax
6501d083:	test   ecx,ecx
6501d085:	jne    0x6501d07a
6501d087:	sub    eax,DWORD PTR [ebp-0x24]
6501d08a:	sar    eax,1
6501d08c:	jmp    0x6501d0ad
6501d08e:	test   edi,edi
6501d090:	jne    0x6501d09a
6501d092:	mov    eax,ds:0x6502c950
6501d097:	mov    DWORD PTR [ebp-0x24],eax
6501d09a:	mov    eax,DWORD PTR [ebp-0x24]
6501d09d:	jmp    0x6501d0a6
6501d09f:	dec    ecx
6501d0a0:	cmp    BYTE PTR [eax],0x0
6501d0a3:	je     0x6501d0aa
6501d0a5:	inc    eax
6501d0a6:	test   ecx,ecx
6501d0a8:	jne    0x6501d09f
6501d0aa:	sub    eax,DWORD PTR [ebp-0x24]
6501d0ad:	mov    DWORD PTR [ebp-0x28],eax
6501d0b0:	cmp    DWORD PTR [ebp-0x68],0x0
6501d0b4:	jne    0x6501d1b5
6501d0ba:	mov    eax,DWORD PTR [ebp-0x18]
6501d0bd:	test   al,0x40
6501d0bf:	je     0x6501d0e6
6501d0c1:	test   ax,0x100
6501d0c5:	je     0x6501d0cd
6501d0c7:	mov    BYTE PTR [ebp-0x38],0x2d
6501d0cb:	jmp    0x6501d0df
6501d0cd:	test   al,0x1
6501d0cf:	je     0x6501d0d7
6501d0d1:	mov    BYTE PTR [ebp-0x38],0x2b
6501d0d5:	jmp    0x6501d0df
6501d0d7:	test   al,0x2
6501d0d9:	je     0x6501d0e6
6501d0db:	mov    BYTE PTR [ebp-0x38],0x20
6501d0df:	mov    DWORD PTR [ebp-0x3c],0x1
6501d0e6:	mov    ebx,DWORD PTR [ebp-0x40]
6501d0e9:	sub    ebx,DWORD PTR [ebp-0x28]
6501d0ec:	sub    ebx,DWORD PTR [ebp-0x3c]
6501d0ef:	test   BYTE PTR [ebp-0x18],0xc
6501d0f3:	jne    0x6501d106
6501d0f5:	push   DWORD PTR [ebp-0x30]
6501d0f8:	lea    eax,[ebp-0x34]
6501d0fb:	push   ebx
6501d0fc:	push   0x20
6501d0fe:	call   0x6501c87b
6501d103:	add    esp,0xc
6501d106:	push   DWORD PTR [ebp-0x3c]
6501d109:	mov    edi,DWORD PTR [ebp-0x30]
6501d10c:	lea    eax,[ebp-0x34]
6501d10f:	lea    ecx,[ebp-0x38]
6501d112:	call   0x65018b15
6501d117:	test   BYTE PTR [ebp-0x18],0x8
6501d11b:	pop    ecx
6501d11c:	je     0x6501d133
6501d11e:	test   BYTE PTR [ebp-0x18],0x4
6501d122:	jne    0x6501d133
6501d124:	push   edi
6501d125:	push   ebx
6501d126:	push   0x30
6501d128:	lea    eax,[ebp-0x34]
6501d12b:	call   0x6501c87b
6501d130:	add    esp,0xc
6501d133:	cmp    DWORD PTR [ebp-0x44],0x0
6501d137:	mov    eax,DWORD PTR [ebp-0x28]
6501d13a:	je     0x6501d18d
6501d13c:	test   eax,eax
6501d13e:	jle    0x6501d18d
6501d140:	mov    esi,DWORD PTR [ebp-0x24]
6501d143:	mov    DWORD PTR [ebp-0x6c],eax
6501d146:	movzx  eax,WORD PTR [esi]
6501d149:	dec    DWORD PTR [ebp-0x6c]
6501d14c:	push   eax
6501d14d:	push   0x6
6501d14f:	lea    eax,[ebp+0x1ec]
6501d155:	push   eax
6501d156:	lea    eax,[ebp-0x78]
6501d159:	inc    esi
6501d15a:	push   eax
6501d15b:	inc    esi
6501d15c:	call   0x6501d6c8
6501d161:	add    esp,0x10
6501d164:	test   eax,eax
6501d166:	jne    0x6501d187
6501d168:	cmp    DWORD PTR [ebp-0x78],eax
6501d16b:	je     0x6501d187
6501d16d:	push   DWORD PTR [ebp-0x78]
6501d170:	lea    eax,[ebp-0x34]
6501d173:	lea    ecx,[ebp+0x1ec]
6501d179:	call   0x65018b15
6501d17e:	cmp    DWORD PTR [ebp-0x6c],0x0
6501d182:	pop    ecx
6501d183:	jne    0x6501d146
6501d185:	jmp    0x6501d19a
6501d187:	or     DWORD PTR [ebp-0x34],0xffffffff
6501d18b:	jmp    0x6501d19a
6501d18d:	mov    ecx,DWORD PTR [ebp-0x24]
6501d190:	push   eax
6501d191:	lea    eax,[ebp-0x34]
6501d194:	call   0x65018b15
6501d199:	pop    ecx
6501d19a:	cmp    DWORD PTR [ebp-0x34],0x0
6501d19e:	jl     0x6501d1b5
6501d1a0:	test   BYTE PTR [ebp-0x18],0x4
6501d1a4:	je     0x6501d1b5
6501d1a6:	push   edi
6501d1a7:	push   ebx
6501d1a8:	push   0x20
6501d1aa:	lea    eax,[ebp-0x34]
6501d1ad:	call   0x6501c87b
6501d1b2:	add    esp,0xc
6501d1b5:	cmp    DWORD PTR [ebp-0x60],0x0
6501d1b9:	je     0x6501d1c8
6501d1bb:	push   DWORD PTR [ebp-0x60]
6501d1be:	call   0x65013577
6501d1c3:	and    DWORD PTR [ebp-0x60],0x0
6501d1c7:	pop    ecx
6501d1c8:	mov    ebx,DWORD PTR [ebp-0x4c]
6501d1cb:	mov    al,BYTE PTR [ebx]
6501d1cd:	test   al,al
6501d1cf:	mov    BYTE PTR [ebp-0x19],al
6501d1d2:	je     0x6501d1f5
6501d1d4:	mov    edi,DWORD PTR [ebp-0x2c]
6501d1d7:	mov    dl,al
6501d1d9:	jmp    0x6501c9fe
6501d1de:	call   0x650143a0
6501d1e3:	mov    DWORD PTR [eax],0x16
6501d1e9:	xor    eax,eax
6501d1eb:	push   eax
6501d1ec:	push   eax
6501d1ed:	push   eax
6501d1ee:	push   eax
6501d1ef:	push   eax
6501d1f0:	jmp    0x6501c90f
6501d1f5:	xor    esi,esi
6501d1f7:	cmp    DWORD PTR [ebp-0x48],esi
6501d1fa:	je     0x6501d206
6501d1fc:	cmp    DWORD PTR [ebp-0x48],0x7
6501d200:	jne    0x6501c8ff
6501d206:	cmp    BYTE PTR [ebp-0x50],0x0
6501d20a:	je     0x6501d213
6501d20c:	mov    eax,DWORD PTR [ebp-0x54]
6501d20f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d213:	mov    eax,DWORD PTR [ebp-0x34]
6501d216:	mov    ecx,DWORD PTR [ebp+0x1f4]
6501d21c:	pop    edi
6501d21d:	pop    esi
6501d21e:	xor    ecx,ebp
6501d220:	pop    ebx
6501d221:	call   0x6501275c
6501d226:	add    ebp,0x1f8
6501d22c:	leave  
6501d22d:	ret    
6501d22e:	nop
6501d22f:	lock retf 
6501d231:	add    DWORD PTR [ebp+0x55],esp
6501d234:	retf   0x6501
6501d237:	jb     0x6501d203
6501d239:	add    DWORD PTR [ebp-0x41],esp
6501d23c:	retf   0x6501
6501d23f:	stc    
6501d240:	retf   0x6501
6501d243:	add    cl,bl
6501d245:	add    DWORD PTR [ebp+0x39],esp
6501d248:	retf   
6501d249:	add    DWORD PTR [ebp+0x33],esp
6501d24c:	int3   
6501d24d:	add    DWORD PTR [ebp+0x55],esp
6501d250:	mov    ebp,esp
6501d252:	sub    esp,0xc
6501d255:	mov    eax,ds:0x6502c09c
6501d25a:	xor    eax,ebp
6501d25c:	mov    DWORD PTR [ebp-0x4],eax
6501d25f:	push   0x6
6501d261:	lea    eax,[ebp-0xc]
6501d264:	push   eax
6501d265:	push   0x1004
6501d26a:	push   DWORD PTR [ebp+0x8]
6501d26d:	mov    BYTE PTR [ebp-0x6],0x0
6501d271:	call   DWORD PTR ds:0x650240e0
6501d277:	test   eax,eax
6501d279:	jne    0x6501d280
6501d27b:	or     eax,0xffffffff
6501d27e:	jmp    0x6501d28a
6501d280:	lea    eax,[ebp-0xc]
6501d283:	push   eax
6501d284:	call   0x6501d924
6501d289:	pop    ecx
6501d28a:	mov    ecx,DWORD PTR [ebp-0x4]
6501d28d:	xor    ecx,ebp
6501d28f:	call   0x6501275c
6501d294:	leave  
6501d295:	ret    
6501d296:	push   ebp
6501d297:	mov    ebp,esp
6501d299:	sub    esp,0x34
6501d29c:	mov    eax,ds:0x6502c09c
6501d2a1:	xor    eax,ebp
6501d2a3:	mov    DWORD PTR [ebp-0x4],eax
6501d2a6:	mov    eax,DWORD PTR [ebp+0x10]
6501d2a9:	mov    ecx,DWORD PTR [ebp+0x18]
6501d2ac:	mov    DWORD PTR [ebp-0x28],eax
6501d2af:	mov    eax,DWORD PTR [ebp+0x14]
6501d2b2:	push   ebx
6501d2b3:	mov    DWORD PTR [ebp-0x30],eax
6501d2b6:	mov    eax,DWORD PTR [eax]
6501d2b8:	push   esi
6501d2b9:	mov    DWORD PTR [ebp-0x24],eax
6501d2bc:	mov    eax,DWORD PTR [ebp+0x8]
6501d2bf:	push   edi
6501d2c0:	xor    edi,edi
6501d2c2:	cmp    eax,DWORD PTR [ebp+0xc]
6501d2c5:	mov    DWORD PTR [ebp-0x34],ecx
6501d2c8:	mov    DWORD PTR [ebp-0x20],edi
6501d2cb:	mov    DWORD PTR [ebp-0x2c],edi
6501d2ce:	je     0x6501d433
6501d2d4:	mov    esi,DWORD PTR ds:0x6502413c
6501d2da:	lea    ecx,[ebp-0x18]
6501d2dd:	push   ecx
6501d2de:	push   eax
6501d2df:	call   esi
6501d2e1:	test   eax,eax
6501d2e3:	mov    ebx,DWORD PTR ds:0x65024024
6501d2e9:	je     0x6501d349
6501d2eb:	cmp    DWORD PTR [ebp-0x18],0x1
6501d2ef:	jne    0x6501d349
6501d2f1:	lea    eax,[ebp-0x18]
6501d2f4:	push   eax
6501d2f5:	push   DWORD PTR [ebp+0xc]
6501d2f8:	call   esi
6501d2fa:	test   eax,eax
6501d2fc:	je     0x6501d349
6501d2fe:	cmp    DWORD PTR [ebp-0x18],0x1
6501d302:	jne    0x6501d349
6501d304:	mov    esi,DWORD PTR [ebp-0x24]
6501d307:	cmp    esi,0xffffffff
6501d30a:	mov    DWORD PTR [ebp-0x2c],0x1
6501d311:	jne    0x6501d31f
6501d313:	push   DWORD PTR [ebp-0x28]
6501d316:	call   0x65013ea0
6501d31b:	mov    esi,eax
6501d31d:	pop    ecx
6501d31e:	inc    esi
6501d31f:	cmp    esi,edi
6501d321:	jle    0x6501d37e
6501d323:	cmp    esi,0x7ffffff0
6501d329:	ja     0x6501d37e
6501d32b:	lea    eax,[esi+esi*1+0x8]
6501d32f:	cmp    eax,0x400
6501d334:	ja     0x6501d365
6501d336:	call   0x65012e60
6501d33b:	mov    eax,esp
6501d33d:	cmp    eax,edi
6501d33f:	je     0x6501d379
6501d341:	mov    DWORD PTR [eax],0xcccc
6501d347:	jmp    0x6501d376
6501d349:	push   edi
6501d34a:	push   edi
6501d34b:	push   DWORD PTR [ebp-0x24]
6501d34e:	push   DWORD PTR [ebp-0x28]
6501d351:	push   0x1
6501d353:	push   DWORD PTR [ebp+0x8]
6501d356:	call   ebx
6501d358:	mov    esi,eax
6501d35a:	cmp    esi,edi
6501d35c:	jne    0x6501d321
6501d35e:	xor    eax,eax
6501d360:	jmp    0x6501d436
6501d365:	push   eax
6501d366:	call   0x65013654
6501d36b:	cmp    eax,edi
6501d36d:	pop    ecx
6501d36e:	je     0x6501d379
6501d370:	mov    DWORD PTR [eax],0xdddd
6501d376:	add    eax,0x8
6501d379:	mov    DWORD PTR [ebp-0x1c],eax
6501d37c:	jmp    0x6501d381
6501d37e:	mov    DWORD PTR [ebp-0x1c],edi
6501d381:	cmp    DWORD PTR [ebp-0x1c],edi
6501d384:	je     0x6501d35e
6501d386:	lea    eax,[esi+esi*1]
6501d389:	push   eax
6501d38a:	push   edi
6501d38b:	push   DWORD PTR [ebp-0x1c]
6501d38e:	call   0x65012de0
6501d393:	add    esp,0xc
6501d396:	push   esi
6501d397:	push   DWORD PTR [ebp-0x1c]
6501d39a:	push   DWORD PTR [ebp-0x24]
6501d39d:	push   DWORD PTR [ebp-0x28]
6501d3a0:	push   0x1
6501d3a2:	push   DWORD PTR [ebp+0x8]
6501d3a5:	call   ebx
6501d3a7:	test   eax,eax
6501d3a9:	je     0x6501d42a
6501d3ab:	mov    ebx,DWORD PTR [ebp-0x34]
6501d3ae:	cmp    ebx,edi
6501d3b0:	je     0x6501d3cf
6501d3b2:	push   edi
6501d3b3:	push   edi
6501d3b4:	push   DWORD PTR [ebp+0x1c]
6501d3b7:	push   ebx
6501d3b8:	push   esi
6501d3b9:	push   DWORD PTR [ebp-0x1c]
6501d3bc:	push   edi
6501d3bd:	push   DWORD PTR [ebp+0xc]
6501d3c0:	call   DWORD PTR ds:0x65024028
6501d3c6:	test   eax,eax
6501d3c8:	je     0x6501d42a
6501d3ca:	mov    DWORD PTR [ebp-0x20],ebx
6501d3cd:	jmp    0x6501d42a
6501d3cf:	cmp    DWORD PTR [ebp-0x2c],edi
6501d3d2:	mov    ebx,DWORD PTR ds:0x65024028
6501d3d8:	jne    0x6501d3ee
6501d3da:	push   edi
6501d3db:	push   edi
6501d3dc:	push   edi
6501d3dd:	push   edi
6501d3de:	push   esi
6501d3df:	push   DWORD PTR [ebp-0x1c]
6501d3e2:	push   edi
6501d3e3:	push   DWORD PTR [ebp+0xc]
6501d3e6:	call   ebx
6501d3e8:	mov    esi,eax
6501d3ea:	cmp    esi,edi
6501d3ec:	je     0x6501d42a
6501d3ee:	push   esi
6501d3ef:	push   0x1
6501d3f1:	call   0x650159f0
6501d3f6:	cmp    eax,edi
6501d3f8:	pop    ecx
6501d3f9:	pop    ecx
6501d3fa:	mov    DWORD PTR [ebp-0x20],eax
6501d3fd:	je     0x6501d42a
6501d3ff:	push   edi
6501d400:	push   edi
6501d401:	push   esi
6501d402:	push   eax
6501d403:	push   esi
6501d404:	push   DWORD PTR [ebp-0x1c]
6501d407:	push   edi
6501d408:	push   DWORD PTR [ebp+0xc]
6501d40b:	call   ebx
6501d40d:	cmp    eax,edi
6501d40f:	jne    0x6501d41f
6501d411:	push   DWORD PTR [ebp-0x20]
6501d414:	call   0x65013577
6501d419:	pop    ecx
6501d41a:	mov    DWORD PTR [ebp-0x20],edi
6501d41d:	jmp    0x6501d42a
6501d41f:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6501d423:	je     0x6501d42a
6501d425:	mov    ecx,DWORD PTR [ebp-0x30]
6501d428:	mov    DWORD PTR [ecx],eax
6501d42a:	push   DWORD PTR [ebp-0x1c]
6501d42d:	call   0x65012bf2
6501d432:	pop    ecx
6501d433:	mov    eax,DWORD PTR [ebp-0x20]
6501d436:	lea    esp,[ebp-0x40]
6501d439:	pop    edi
6501d43a:	pop    esi
6501d43b:	pop    ebx
6501d43c:	mov    ecx,DWORD PTR [ebp-0x4]
6501d43f:	xor    ecx,ebp
6501d441:	call   0x6501275c
6501d446:	leave  
6501d447:	ret    
6501d448:	push   0xc
6501d44a:	push   0x65029c30
6501d44f:	call   0x65013ca0
6501d454:	and    DWORD PTR [ebp-0x4],0x0
6501d458:	movapd xmm0,xmm1
6501d45c:	mov    DWORD PTR [ebp-0x1c],0x1
6501d463:	jmp    0x6501d488
6501d465:	mov    eax,DWORD PTR [ebp-0x14]
6501d468:	mov    eax,DWORD PTR [eax]
6501d46a:	mov    eax,DWORD PTR [eax]
6501d46c:	cmp    eax,0xc0000005
6501d471:	je     0x6501d47d
6501d473:	cmp    eax,0xc000001d
6501d478:	je     0x6501d47d
6501d47a:	xor    eax,eax
6501d47c:	ret    
6501d47d:	xor    eax,eax
6501d47f:	inc    eax
6501d480:	ret    
6501d481:	mov    esp,DWORD PTR [ebp-0x18]
6501d484:	and    DWORD PTR [ebp-0x1c],0x0
6501d488:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501d48f:	mov    eax,DWORD PTR [ebp-0x1c]
6501d492:	call   0x65013ce5
6501d497:	ret    
6501d498:	push   ebp
6501d499:	mov    ebp,esp
6501d49b:	sub    esp,0x18
6501d49e:	xor    eax,eax
6501d4a0:	push   ebx
6501d4a1:	mov    DWORD PTR [ebp-0x4],eax
6501d4a4:	mov    DWORD PTR [ebp-0xc],eax
6501d4a7:	mov    DWORD PTR [ebp-0x8],eax
6501d4aa:	push   ebx
6501d4ab:	pushf  
6501d4ac:	pop    eax
6501d4ad:	mov    ecx,eax
6501d4af:	xor    eax,0x200000
6501d4b4:	push   eax
6501d4b5:	popf   
6501d4b6:	pushf  
6501d4b7:	pop    edx
6501d4b8:	sub    edx,ecx
6501d4ba:	je     0x6501d4db
6501d4bc:	push   ecx
6501d4bd:	popf   
6501d4be:	xor    eax,eax
6501d4c0:	cpuid  
6501d4c2:	mov    DWORD PTR [ebp-0xc],eax
6501d4c5:	mov    DWORD PTR [ebp-0x18],ebx
6501d4c8:	mov    DWORD PTR [ebp-0x14],edx
6501d4cb:	mov    DWORD PTR [ebp-0x10],ecx
6501d4ce:	mov    eax,0x1
6501d4d3:	cpuid  
6501d4d5:	mov    DWORD PTR [ebp-0x4],edx
6501d4d8:	mov    DWORD PTR [ebp-0x8],eax
6501d4db:	pop    ebx
6501d4dc:	test   DWORD PTR [ebp-0x4],0x4000000
6501d4e3:	je     0x6501d4f3
6501d4e5:	call   0x6501d448
6501d4ea:	test   eax,eax
6501d4ec:	je     0x6501d4f3
6501d4ee:	xor    eax,eax
6501d4f0:	inc    eax
6501d4f1:	jmp    0x6501d4f5
6501d4f3:	xor    eax,eax
6501d4f5:	pop    ebx
6501d4f6:	leave  
6501d4f7:	ret    
6501d4f8:	call   0x6501d498
6501d4fd:	mov    ds:0x65031564,eax
6501d502:	xor    eax,eax
6501d504:	ret    
6501d505:	push   ebp
6501d506:	mov    ebp,esp
6501d508:	sub    esp,0x10
6501d50b:	push   DWORD PTR [ebp+0x8]
6501d50e:	lea    ecx,[ebp-0x10]
6501d511:	call   0x650128ff
6501d516:	movzx  eax,BYTE PTR [ebp+0xc]
6501d51a:	mov    ecx,DWORD PTR [ebp-0xc]
6501d51d:	mov    dl,BYTE PTR [ebp+0x14]
6501d520:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6501d524:	jne    0x6501d544
6501d526:	cmp    DWORD PTR [ebp+0x10],0x0
6501d52a:	je     0x6501d53e
6501d52c:	mov    ecx,DWORD PTR [ebp-0x10]
6501d52f:	mov    ecx,DWORD PTR [ecx+0xc8]
6501d535:	movzx  eax,WORD PTR [ecx+eax*2]
6501d539:	and    eax,DWORD PTR [ebp+0x10]
6501d53c:	jmp    0x6501d540
6501d53e:	xor    eax,eax
6501d540:	test   eax,eax
6501d542:	je     0x6501d547
6501d544:	xor    eax,eax
6501d546:	inc    eax
6501d547:	cmp    BYTE PTR [ebp-0x4],0x0
6501d54b:	je     0x6501d554
6501d54d:	mov    ecx,DWORD PTR [ebp-0x8]
6501d550:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d554:	leave  
6501d555:	ret    
6501d556:	push   0x4
6501d558:	push   0x0
6501d55a:	push   DWORD PTR [esp+0xc]
6501d55e:	push   0x0
6501d560:	call   0x6501d505
6501d565:	add    esp,0x10
6501d568:	ret    
6501d569:	push   ebp
6501d56a:	mov    ebp,esp
6501d56c:	sub    esp,0x10
6501d56f:	push   ebx
6501d570:	push   esi
6501d571:	mov    esi,DWORD PTR [ebp+0xc]
6501d574:	xor    ebx,ebx
6501d576:	cmp    esi,ebx
6501d578:	push   edi
6501d579:	mov    edi,DWORD PTR [ebp+0x10]
6501d57c:	jne    0x6501d58f
6501d57e:	cmp    edi,ebx
6501d580:	jbe    0x6501d58f
6501d582:	mov    eax,DWORD PTR [ebp+0x8]
6501d585:	cmp    eax,ebx
6501d587:	je     0x6501d58b
6501d589:	mov    DWORD PTR [eax],ebx
6501d58b:	xor    eax,eax
6501d58d:	jmp    0x6501d60e
6501d58f:	mov    eax,DWORD PTR [ebp+0x8]
6501d592:	cmp    eax,ebx
6501d594:	je     0x6501d599
6501d596:	or     DWORD PTR [eax],0xffffffff
6501d599:	cmp    edi,0x7fffffff
6501d59f:	jbe    0x6501d5bc
6501d5a1:	call   0x650143a0
6501d5a6:	push   0x16
6501d5a8:	pop    esi
6501d5a9:	push   ebx
6501d5aa:	push   ebx
6501d5ab:	push   ebx
6501d5ac:	push   ebx
6501d5ad:	push   ebx
6501d5ae:	mov    DWORD PTR [eax],esi
6501d5b0:	call   0x6501224f
6501d5b5:	add    esp,0x14
6501d5b8:	mov    eax,esi
6501d5ba:	jmp    0x6501d60e
6501d5bc:	push   DWORD PTR [ebp+0x18]
6501d5bf:	lea    ecx,[ebp-0x10]
6501d5c2:	call   0x650128ff
6501d5c7:	mov    eax,DWORD PTR [ebp-0x10]
6501d5ca:	cmp    DWORD PTR [eax+0x14],ebx
6501d5cd:	jne    0x6501d667
6501d5d3:	mov    ax,WORD PTR [ebp+0x14]
6501d5d7:	cmp    ax,0xff
6501d5db:	jbe    0x6501d613
6501d5dd:	cmp    esi,ebx
6501d5df:	je     0x6501d5f0
6501d5e1:	cmp    edi,ebx
6501d5e3:	jbe    0x6501d5f0
6501d5e5:	push   edi
6501d5e6:	push   ebx
6501d5e7:	push   esi
6501d5e8:	call   0x65012de0
6501d5ed:	add    esp,0xc
6501d5f0:	call   0x650143a0
6501d5f5:	mov    DWORD PTR [eax],0x2a
6501d5fb:	call   0x650143a0
6501d600:	cmp    BYTE PTR [ebp-0x4],bl
6501d603:	mov    eax,DWORD PTR [eax]
6501d605:	je     0x6501d60e
6501d607:	mov    ecx,DWORD PTR [ebp-0x8]
6501d60a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501d60e:	pop    edi
6501d60f:	pop    esi
6501d610:	pop    ebx
6501d611:	leave  
6501d612:	ret    
6501d613:	cmp    esi,ebx
6501d615:	je     0x6501d645
6501d617:	cmp    edi,ebx
6501d619:	ja     0x6501d643
6501d61b:	call   0x650143a0
6501d620:	push   0x22
6501d622:	pop    esi
6501d623:	push   ebx
6501d624:	push   ebx
6501d625:	push   ebx
6501d626:	push   ebx
6501d627:	push   ebx
6501d628:	mov    DWORD PTR [eax],esi
6501d62a:	call   0x6501224f
6501d62f:	add    esp,0x14
6501d632:	cmp    BYTE PTR [ebp-0x4],bl
6501d635:	je     0x6501d5b8
6501d637:	mov    eax,DWORD PTR [ebp-0x8]
6501d63a:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d63e:	jmp    0x6501d5b8
6501d643:	mov    BYTE PTR [esi],al
6501d645:	mov    eax,DWORD PTR [ebp+0x8]
6501d648:	cmp    eax,ebx
6501d64a:	je     0x6501d652
6501d64c:	mov    DWORD PTR [eax],0x1
6501d652:	cmp    BYTE PTR [ebp-0x4],bl
6501d655:	je     0x6501d58b
6501d65b:	mov    eax,DWORD PTR [ebp-0x8]
6501d65e:	and    DWORD PTR [eax+0x70],0xfffffffd
6501d662:	jmp    0x6501d58b
6501d667:	lea    ecx,[ebp+0xc]
6501d66a:	push   ecx
6501d66b:	push   ebx
6501d66c:	push   edi
6501d66d:	push   esi
6501d66e:	push   0x1
6501d670:	lea    ecx,[ebp+0x14]
6501d673:	push   ecx
6501d674:	push   ebx
6501d675:	mov    DWORD PTR [ebp+0xc],ebx
6501d678:	push   DWORD PTR [eax+0x4]
6501d67b:	call   DWORD PTR ds:0x65024028
6501d681:	cmp    eax,ebx
6501d683:	je     0x6501d699
6501d685:	cmp    DWORD PTR [ebp+0xc],ebx
6501d688:	jne    0x6501d5f0
6501d68e:	mov    ecx,DWORD PTR [ebp+0x8]
6501d691:	cmp    ecx,ebx
6501d693:	je     0x6501d652
6501d695:	mov    DWORD PTR [ecx],eax
6501d697:	jmp    0x6501d652
6501d699:	call   DWORD PTR ds:0x65024044
6501d69f:	cmp    eax,0x7a
6501d6a2:	jne    0x6501d5f0
6501d6a8:	cmp    esi,ebx
6501d6aa:	je     0x6501d61b
6501d6b0:	cmp    edi,ebx
6501d6b2:	jbe    0x6501d61b
6501d6b8:	push   edi
6501d6b9:	push   ebx
6501d6ba:	push   esi
6501d6bb:	call   0x65012de0
6501d6c0:	add    esp,0xc
6501d6c3:	jmp    0x6501d61b
6501d6c8:	push   0x0
6501d6ca:	push   DWORD PTR [esp+0x14]
6501d6ce:	push   DWORD PTR [esp+0x14]
6501d6d2:	push   DWORD PTR [esp+0x14]
6501d6d6:	push   DWORD PTR [esp+0x14]
6501d6da:	call   0x6501d569
6501d6df:	add    esp,0x14
6501d6e2:	ret    
6501d6e3:	push   ebp
6501d6e4:	mov    ebp,esp
6501d6e6:	sub    esp,0x20
6501d6e9:	push   ebx
6501d6ea:	push   esi
6501d6eb:	push   edi
6501d6ec:	call   0x650144c6
6501d6f1:	xor    ebx,ebx
6501d6f3:	cmp    DWORD PTR ds:0x6502df7c,ebx
6501d6f9:	mov    DWORD PTR [ebp-0x8],eax
6501d6fc:	mov    DWORD PTR [ebp-0x4],ebx
6501d6ff:	mov    DWORD PTR [ebp-0xc],ebx
6501d702:	mov    DWORD PTR [ebp-0x10],ebx
6501d705:	jne    0x6501d7b9
6501d70b:	push   0x650264a0
6501d710:	call   DWORD PTR ds:0x650240c4
6501d716:	mov    edi,eax
6501d718:	cmp    edi,ebx
6501d71a:	je     0x6501d899
6501d720:	mov    esi,DWORD PTR ds:0x65024014
6501d726:	push   0x65026494
6501d72b:	push   edi
6501d72c:	call   esi
6501d72e:	cmp    eax,ebx
6501d730:	je     0x6501d899
6501d736:	push   eax
6501d737:	call   0x65014458
6501d73c:	mov    DWORD PTR [esp],0x65026484
6501d743:	push   edi
6501d744:	mov    ds:0x6502df7c,eax
6501d749:	call   esi
6501d74b:	push   eax
6501d74c:	call   0x65014458
6501d751:	mov    DWORD PTR [esp],0x65026470
6501d758:	push   edi
6501d759:	mov    ds:0x6502df80,eax
6501d75e:	call   esi
6501d760:	push   eax
6501d761:	call   0x65014458
6501d766:	mov    ds:0x6502df84,eax
6501d76b:	lea    eax,[ebp-0xc]
6501d76e:	push   eax
6501d76f:	call   0x65015bcf
6501d774:	test   eax,eax
6501d776:	pop    ecx
6501d777:	pop    ecx
6501d778:	je     0x6501d787
6501d77a:	push   ebx
6501d77b:	push   ebx
6501d77c:	push   ebx
6501d77d:	push   ebx
6501d77e:	push   ebx
6501d77f:	call   0x65012153
6501d784:	add    esp,0x14
6501d787:	cmp    DWORD PTR [ebp-0xc],0x2
6501d78b:	jne    0x6501d7b9
6501d78d:	push   0x65026454
6501d792:	push   edi
6501d793:	call   esi
6501d795:	push   eax
6501d796:	call   0x65014458
6501d79b:	cmp    eax,ebx
6501d79d:	pop    ecx
6501d79e:	mov    ds:0x6502df8c,eax
6501d7a3:	je     0x6501d7b9
6501d7a5:	push   0x6502643c
6501d7aa:	push   edi
6501d7ab:	call   esi
6501d7ad:	push   eax
6501d7ae:	call   0x65014458
6501d7b3:	pop    ecx
6501d7b4:	mov    ds:0x6502df88,eax
6501d7b9:	mov    eax,ds:0x6502df88
6501d7be:	mov    ecx,DWORD PTR [ebp-0x8]
6501d7c1:	cmp    eax,ecx
6501d7c3:	je     0x6501d83e
6501d7c5:	cmp    DWORD PTR ds:0x6502df8c,ecx
6501d7cb:	je     0x6501d83e
6501d7cd:	push   eax
6501d7ce:	call   0x650144cf
6501d7d3:	push   DWORD PTR ds:0x6502df8c
6501d7d9:	mov    esi,eax
6501d7db:	call   0x650144cf
6501d7e0:	cmp    esi,ebx
6501d7e2:	pop    ecx
6501d7e3:	pop    ecx
6501d7e4:	mov    edi,eax
6501d7e6:	je     0x6501d83e
6501d7e8:	cmp    edi,ebx
6501d7ea:	je     0x6501d83e
6501d7ec:	call   esi
6501d7ee:	cmp    eax,ebx
6501d7f0:	je     0x6501d80b
6501d7f2:	lea    ecx,[ebp-0x14]
6501d7f5:	push   ecx
6501d7f6:	push   0xc
6501d7f8:	lea    ecx,[ebp-0x20]
6501d7fb:	push   ecx
6501d7fc:	push   0x1
6501d7fe:	push   eax
6501d7ff:	call   edi
6501d801:	test   eax,eax
6501d803:	je     0x6501d80b
6501d805:	test   BYTE PTR [ebp-0x18],0x1
6501d809:	jne    0x6501d83e
6501d80b:	lea    eax,[ebp-0x10]
6501d80e:	push   eax
6501d80f:	call   0x65015c06
6501d814:	test   eax,eax
6501d816:	pop    ecx
6501d817:	je     0x6501d826
6501d819:	push   ebx
6501d81a:	push   ebx
6501d81b:	push   ebx
6501d81c:	push   ebx
6501d81d:	push   ebx
6501d81e:	call   0x65012153
6501d823:	add    esp,0x14
6501d826:	cmp    DWORD PTR [ebp-0x10],0x4
6501d82a:	jb     0x6501d835
6501d82c:	or     DWORD PTR [ebp+0x10],0x200000
6501d833:	jmp    0x6501d879
6501d835:	or     DWORD PTR [ebp+0x10],0x40000
6501d83c:	jmp    0x6501d879
6501d83e:	mov    eax,ds:0x6502df80
6501d843:	cmp    eax,DWORD PTR [ebp-0x8]
6501d846:	je     0x6501d879
6501d848:	push   eax
6501d849:	call   0x650144cf
6501d84e:	cmp    eax,ebx
6501d850:	pop    ecx
6501d851:	je     0x6501d879
6501d853:	call   eax
6501d855:	cmp    eax,ebx
6501d857:	mov    DWORD PTR [ebp-0x4],eax
6501d85a:	je     0x6501d879
6501d85c:	mov    eax,ds:0x6502df84
6501d861:	cmp    eax,DWORD PTR [ebp-0x8]
6501d864:	je     0x6501d879
6501d866:	push   eax
6501d867:	call   0x650144cf
6501d86c:	cmp    eax,ebx
6501d86e:	pop    ecx
6501d86f:	je     0x6501d879
6501d871:	push   DWORD PTR [ebp-0x4]
6501d874:	call   eax
6501d876:	mov    DWORD PTR [ebp-0x4],eax
6501d879:	push   DWORD PTR ds:0x6502df7c
6501d87f:	call   0x650144cf
6501d884:	cmp    eax,ebx
6501d886:	pop    ecx
6501d887:	je     0x6501d899
6501d889:	push   DWORD PTR [ebp+0x10]
6501d88c:	push   DWORD PTR [ebp+0xc]
6501d88f:	push   DWORD PTR [ebp+0x8]
6501d892:	push   DWORD PTR [ebp-0x4]
6501d895:	call   eax
6501d897:	jmp    0x6501d89b
6501d899:	xor    eax,eax
6501d89b:	pop    edi
6501d89c:	pop    esi
6501d89d:	pop    ebx
6501d89e:	leave  
6501d89f:	ret    
6501d8a0:	mov    ecx,DWORD PTR [esp+0x4]
6501d8a4:	push   esi
6501d8a5:	xor    esi,esi
6501d8a7:	cmp    ecx,esi
6501d8a9:	jl     0x6501d8c9
6501d8ab:	cmp    ecx,0x2
6501d8ae:	jle    0x6501d8bc
6501d8b0:	cmp    ecx,0x3
6501d8b3:	jne    0x6501d8c9
6501d8b5:	mov    eax,ds:0x6502d59c
6501d8ba:	pop    esi
6501d8bb:	ret    
6501d8bc:	mov    eax,ds:0x6502d59c
6501d8c1:	mov    DWORD PTR ds:0x6502d59c,ecx
6501d8c7:	pop    esi
6501d8c8:	ret    
6501d8c9:	call   0x650143a0
6501d8ce:	push   esi
6501d8cf:	push   esi
6501d8d0:	push   esi
6501d8d1:	push   esi
6501d8d2:	push   esi
6501d8d3:	mov    DWORD PTR [eax],0x16
6501d8d9:	call   0x6501224f
6501d8de:	add    esp,0x14
6501d8e1:	or     eax,0xffffffff
6501d8e4:	pop    esi
6501d8e5:	ret    
6501d8e6:	int3   
6501d8e7:	int3   
6501d8e8:	int3   
6501d8e9:	int3   
6501d8ea:	int3   
6501d8eb:	int3   
6501d8ec:	int3   
6501d8ed:	int3   
6501d8ee:	int3   
6501d8ef:	int3   
6501d8f0:	mov    eax,DWORD PTR [esp+0x8]
6501d8f4:	mov    ecx,DWORD PTR [esp+0x10]
6501d8f8:	or     ecx,eax
6501d8fa:	mov    ecx,DWORD PTR [esp+0xc]
6501d8fe:	jne    0x6501d909
6501d900:	mov    eax,DWORD PTR [esp+0x4]
6501d904:	mul    ecx
6501d906:	ret    0x10
6501d909:	push   ebx
6501d90a:	mul    ecx
6501d90c:	mov    ebx,eax
6501d90e:	mov    eax,DWORD PTR [esp+0x8]
6501d912:	mul    DWORD PTR [esp+0x14]
6501d916:	add    ebx,eax
6501d918:	mov    eax,DWORD PTR [esp+0x8]
6501d91c:	mul    ecx
6501d91e:	add    edx,ebx
6501d920:	pop    ebx
6501d921:	ret    0x10
6501d924:	push   0xa
6501d926:	push   0x0
6501d928:	push   DWORD PTR [esp+0xc]
6501d92c:	call   0x6501e175
6501d931:	add    esp,0xc
6501d934:	ret    
6501d935:	push   0x2
6501d937:	call   0x65015b26
6501d93c:	pop    ecx
6501d93d:	ret    
6501d93e:	mov    ecx,DWORD PTR [esp+0x4]
6501d942:	push   ebx
6501d943:	xor    ebx,ebx
6501d945:	cmp    ecx,ebx
6501d947:	push   esi
6501d948:	push   edi
6501d949:	jl     0x6501d9a6
6501d94b:	cmp    ecx,DWORD PTR ds:0x65031440
6501d951:	jae    0x6501d9a6
6501d953:	mov    eax,ecx
6501d955:	sar    eax,0x5
6501d958:	mov    esi,ecx
6501d95a:	lea    edi,[eax*4+0x65031460]
6501d961:	mov    eax,DWORD PTR [edi]
6501d963:	and    esi,0x1f
6501d966:	shl    esi,0x6
6501d969:	add    eax,esi
6501d96b:	test   BYTE PTR [eax+0x4],0x1
6501d96f:	je     0x6501d9a6
6501d971:	cmp    DWORD PTR [eax],0xffffffff
6501d974:	je     0x6501d9a6
6501d976:	cmp    DWORD PTR ds:0x6502d5a0,0x1
6501d97d:	jne    0x6501d99c
6501d97f:	sub    ecx,ebx
6501d981:	je     0x6501d993
6501d983:	dec    ecx
6501d984:	je     0x6501d98e
6501d986:	dec    ecx
6501d987:	jne    0x6501d99c
6501d989:	push   ebx
6501d98a:	push   0xfffffff4
6501d98c:	jmp    0x6501d996
6501d98e:	push   ebx
6501d98f:	push   0xfffffff5
6501d991:	jmp    0x6501d996
6501d993:	push   ebx
6501d994:	push   0xfffffff6
6501d996:	call   DWORD PTR ds:0x650240b8
6501d99c:	mov    eax,DWORD PTR [edi]
6501d99e:	or     DWORD PTR [esi+eax*1],0xffffffff
6501d9a2:	xor    eax,eax
6501d9a4:	jmp    0x6501d9bb
6501d9a6:	call   0x650143a0
6501d9ab:	mov    DWORD PTR [eax],0x9
6501d9b1:	call   0x650143b3
6501d9b6:	mov    DWORD PTR [eax],ebx
6501d9b8:	or     eax,0xffffffff
6501d9bb:	pop    edi
6501d9bc:	pop    esi
6501d9bd:	pop    ebx
6501d9be:	ret    
6501d9bf:	mov    eax,DWORD PTR [esp+0x4]
6501d9c3:	cmp    eax,0xfffffffe
6501d9c6:	jne    0x6501d9df
6501d9c8:	call   0x650143b3
6501d9cd:	and    DWORD PTR [eax],0x0
6501d9d0:	call   0x650143a0
6501d9d5:	mov    DWORD PTR [eax],0x9
6501d9db:	or     eax,0xffffffff
6501d9de:	ret    
6501d9df:	push   esi
6501d9e0:	xor    esi,esi
6501d9e2:	cmp    eax,esi
6501d9e4:	jl     0x6501da08
6501d9e6:	cmp    eax,DWORD PTR ds:0x65031440
6501d9ec:	jae    0x6501da08
6501d9ee:	mov    ecx,eax
6501d9f0:	and    eax,0x1f
6501d9f3:	sar    ecx,0x5
6501d9f6:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501d9fd:	shl    eax,0x6
6501da00:	add    eax,ecx
6501da02:	test   BYTE PTR [eax+0x4],0x1
6501da06:	jne    0x6501da2c
6501da08:	call   0x650143b3
6501da0d:	mov    DWORD PTR [eax],esi
6501da0f:	call   0x650143a0
6501da14:	push   esi
6501da15:	push   esi
6501da16:	push   esi
6501da17:	push   esi
6501da18:	push   esi
6501da19:	mov    DWORD PTR [eax],0x9
6501da1f:	call   0x6501224f
6501da24:	add    esp,0x14
6501da27:	or     eax,0xffffffff
6501da2a:	pop    esi
6501da2b:	ret    
6501da2c:	mov    eax,DWORD PTR [eax]
6501da2e:	pop    esi
6501da2f:	ret    
6501da30:	push   0xc
6501da32:	push   0x65029c50
6501da37:	call   0x65013ca0
6501da3c:	mov    edi,DWORD PTR [ebp+0x8]
6501da3f:	mov    eax,edi
6501da41:	sar    eax,0x5
6501da44:	mov    esi,edi
6501da46:	and    esi,0x1f
6501da49:	shl    esi,0x6
6501da4c:	add    esi,DWORD PTR [eax*4+0x65031460]
6501da53:	mov    DWORD PTR [ebp-0x1c],0x1
6501da5a:	xor    ebx,ebx
6501da5c:	cmp    DWORD PTR [esi+0x8],ebx
6501da5f:	jne    0x6501da97
6501da61:	push   0xa
6501da63:	call   0x65019c98
6501da68:	pop    ecx
6501da69:	mov    DWORD PTR [ebp-0x4],ebx
6501da6c:	cmp    DWORD PTR [esi+0x8],ebx
6501da6f:	jne    0x6501da8b
6501da71:	push   0xfa0
6501da76:	lea    eax,[esi+0xc]
6501da79:	push   eax
6501da7a:	call   0x6501b358
6501da7f:	pop    ecx
6501da80:	pop    ecx
6501da81:	test   eax,eax
6501da83:	jne    0x6501da88
6501da85:	mov    DWORD PTR [ebp-0x1c],ebx
6501da88:	inc    DWORD PTR [esi+0x8]
6501da8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501da92:	call   0x6501dac7
6501da97:	cmp    DWORD PTR [ebp-0x1c],ebx
6501da9a:	je     0x6501dab9
6501da9c:	mov    eax,edi
6501da9e:	sar    eax,0x5
6501daa1:	and    edi,0x1f
6501daa4:	shl    edi,0x6
6501daa7:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501daae:	lea    eax,[eax+edi*1+0xc]
6501dab2:	push   eax
6501dab3:	call   DWORD PTR ds:0x6502409c
6501dab9:	mov    eax,DWORD PTR [ebp-0x1c]
6501dabc:	call   0x65013ce5
6501dac1:	ret    
6501dac2:	xor    ebx,ebx
6501dac4:	mov    edi,DWORD PTR [ebp+0x8]
6501dac7:	push   0xa
6501dac9:	call   0x65019bc0
6501dace:	pop    ecx
6501dacf:	ret    
6501dad0:	mov    eax,DWORD PTR [esp+0x4]
6501dad4:	mov    ecx,eax
6501dad6:	and    eax,0x1f
6501dad9:	sar    ecx,0x5
6501dadc:	mov    ecx,DWORD PTR [ecx*4+0x65031460]
6501dae3:	shl    eax,0x6
6501dae6:	lea    eax,[ecx+eax*1+0xc]
6501daea:	push   eax
6501daeb:	call   DWORD PTR ds:0x650240a0
6501daf1:	ret    
6501daf2:	push   ebp
6501daf3:	mov    ebp,esp
6501daf5:	sub    esp,0x10
6501daf8:	mov    eax,ds:0x6502c09c
6501dafd:	xor    eax,ebp
6501daff:	mov    DWORD PTR [ebp-0x4],eax
6501db02:	push   esi
6501db03:	xor    esi,esi
6501db05:	cmp    DWORD PTR ds:0x6502cfb0,esi
6501db0b:	je     0x6501db5b
6501db0d:	cmp    DWORD PTR ds:0x6502d024,0xfffffffe
6501db14:	jne    0x6501db1b
6501db16:	call   0x6501e201
6501db1b:	mov    eax,ds:0x6502d024
6501db20:	cmp    eax,0xffffffff
6501db23:	jne    0x6501db2b
6501db25:	or     ax,0xffff
6501db29:	jmp    0x6501db9b
6501db2b:	push   esi
6501db2c:	lea    ecx,[ebp-0x10]
6501db2f:	push   ecx
6501db30:	push   0x1
6501db32:	lea    ecx,[ebp+0x8]
6501db35:	push   ecx
6501db36:	push   eax
6501db37:	call   DWORD PTR ds:0x650240a8
6501db3d:	test   eax,eax
6501db3f:	jne    0x6501dba8
6501db41:	cmp    DWORD PTR ds:0x6502cfb0,0x2
6501db48:	jne    0x6501db25
6501db4a:	call   DWORD PTR ds:0x65024044
6501db50:	cmp    eax,0x78
6501db53:	jne    0x6501db25
6501db55:	mov    DWORD PTR ds:0x6502cfb0,esi
6501db5b:	push   esi
6501db5c:	push   esi
6501db5d:	push   0x5
6501db5f:	lea    eax,[ebp-0xc]
6501db62:	push   eax
6501db63:	push   0x1
6501db65:	lea    eax,[ebp+0x8]
6501db68:	push   eax
6501db69:	push   esi
6501db6a:	call   DWORD PTR ds:0x65024090
6501db70:	push   eax
6501db71:	call   DWORD PTR ds:0x65024028
6501db77:	mov    ecx,DWORD PTR ds:0x6502d024
6501db7d:	cmp    ecx,0xffffffff
6501db80:	je     0x6501db25
6501db82:	push   esi
6501db83:	lea    edx,[ebp-0x10]
6501db86:	push   edx
6501db87:	push   eax
6501db88:	lea    eax,[ebp-0xc]
6501db8b:	push   eax
6501db8c:	push   ecx
6501db8d:	call   DWORD PTR ds:0x65024094
6501db93:	test   eax,eax
6501db95:	je     0x6501db25
6501db97:	mov    ax,WORD PTR [ebp+0x8]
6501db9b:	mov    ecx,DWORD PTR [ebp-0x4]
6501db9e:	xor    ecx,ebp
6501dba0:	pop    esi
6501dba1:	call   0x6501275c
6501dba6:	leave  
6501dba7:	ret    
6501dba8:	mov    DWORD PTR ds:0x6502cfb0,0x1
6501dbb2:	jmp    0x6501db97
6501dbb4:	push   0x10
6501dbb6:	push   0x65029c70
6501dbbb:	call   0x65013ca0
6501dbc0:	xor    ebx,ebx
6501dbc2:	mov    DWORD PTR [ebp-0x1c],ebx
6501dbc5:	push   0x1
6501dbc7:	call   0x65019c98
6501dbcc:	pop    ecx
6501dbcd:	mov    DWORD PTR [ebp-0x4],ebx
6501dbd0:	push   0x3
6501dbd2:	pop    edi
6501dbd3:	mov    DWORD PTR [ebp-0x20],edi
6501dbd6:	cmp    edi,DWORD PTR ds:0x65031420
6501dbdc:	jge    0x6501dc35
6501dbde:	mov    esi,edi
6501dbe0:	shl    esi,0x2
6501dbe3:	mov    eax,ds:0x65030400
6501dbe8:	add    eax,esi
6501dbea:	cmp    DWORD PTR [eax],ebx
6501dbec:	je     0x6501dc32
6501dbee:	mov    eax,DWORD PTR [eax]
6501dbf0:	test   BYTE PTR [eax+0xc],0x83
6501dbf4:	je     0x6501dc05
6501dbf6:	push   eax
6501dbf7:	call   0x6501e2bf
6501dbfc:	pop    ecx
6501dbfd:	cmp    eax,0xffffffff
6501dc00:	je     0x6501dc05
6501dc02:	inc    DWORD PTR [ebp-0x1c]
6501dc05:	cmp    edi,0x14
6501dc08:	jl     0x6501dc32
6501dc0a:	mov    eax,ds:0x65030400
6501dc0f:	mov    eax,DWORD PTR [esi+eax*1]
6501dc12:	add    eax,0x20
6501dc15:	push   eax
6501dc16:	call   DWORD PTR ds:0x650240a4
6501dc1c:	mov    eax,ds:0x65030400
6501dc21:	push   DWORD PTR [esi+eax*1]
6501dc24:	call   0x65013577
6501dc29:	pop    ecx
6501dc2a:	mov    eax,ds:0x65030400
6501dc2f:	mov    DWORD PTR [esi+eax*1],ebx
6501dc32:	inc    edi
6501dc33:	jmp    0x6501dbd3
6501dc35:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501dc3c:	call   0x6501dc4a
6501dc41:	mov    eax,DWORD PTR [ebp-0x1c]
6501dc44:	call   0x65013ce5
6501dc49:	ret    
6501dc4a:	push   0x1
6501dc4c:	call   0x65019bc0
6501dc51:	pop    ecx
6501dc52:	ret    
6501dc53:	push   ebx
6501dc54:	push   esi
6501dc55:	mov    esi,DWORD PTR [esp+0xc]
6501dc59:	mov    eax,DWORD PTR [esi+0xc]
6501dc5c:	mov    ecx,eax
6501dc5e:	and    cl,0x3
6501dc61:	xor    ebx,ebx
6501dc63:	cmp    cl,0x2
6501dc66:	jne    0x6501dca7
6501dc68:	test   ax,0x108
6501dc6c:	je     0x6501dca7
6501dc6e:	mov    eax,DWORD PTR [esi+0x8]
6501dc71:	push   edi
6501dc72:	mov    edi,DWORD PTR [esi]
6501dc74:	sub    edi,eax
6501dc76:	test   edi,edi
6501dc78:	jle    0x6501dca6
6501dc7a:	push   edi
6501dc7b:	push   eax
6501dc7c:	push   esi
6501dc7d:	call   0x6501c4fd
6501dc82:	pop    ecx
6501dc83:	push   eax
6501dc84:	call   0x6501c1de
6501dc89:	add    esp,0xc
6501dc8c:	cmp    eax,edi
6501dc8e:	jne    0x6501dc9f
6501dc90:	mov    eax,DWORD PTR [esi+0xc]
6501dc93:	test   al,al
6501dc95:	jns    0x6501dca6
6501dc97:	and    eax,0xfffffffd
6501dc9a:	mov    DWORD PTR [esi+0xc],eax
6501dc9d:	jmp    0x6501dca6
6501dc9f:	or     DWORD PTR [esi+0xc],0x20
6501dca3:	or     ebx,0xffffffff
6501dca6:	pop    edi
6501dca7:	mov    eax,DWORD PTR [esi+0x8]
6501dcaa:	and    DWORD PTR [esi+0x4],0x0
6501dcae:	mov    DWORD PTR [esi],eax
6501dcb0:	pop    esi
6501dcb1:	mov    eax,ebx
6501dcb3:	pop    ebx
6501dcb4:	ret    
6501dcb5:	push   esi
6501dcb6:	mov    esi,DWORD PTR [esp+0x8]
6501dcba:	test   esi,esi
6501dcbc:	jne    0x6501dcc7
6501dcbe:	push   esi
6501dcbf:	call   0x6501dcf7
6501dcc4:	pop    ecx
6501dcc5:	pop    esi
6501dcc6:	ret    
6501dcc7:	push   esi
6501dcc8:	call   0x6501dc53
6501dccd:	test   eax,eax
6501dccf:	pop    ecx
6501dcd0:	je     0x6501dcd7
6501dcd2:	or     eax,0xffffffff
6501dcd5:	pop    esi
6501dcd6:	ret    
6501dcd7:	test   WORD PTR [esi+0xc],0x4000
6501dcdd:	je     0x6501dcf3
6501dcdf:	push   esi
6501dce0:	call   0x6501c4fd
6501dce5:	push   eax
6501dce6:	call   0x6501e33b
6501dceb:	pop    ecx
6501dcec:	pop    ecx
6501dced:	neg    eax
6501dcef:	sbb    eax,eax
6501dcf1:	pop    esi
6501dcf2:	ret    
6501dcf3:	xor    eax,eax
6501dcf5:	pop    esi
6501dcf6:	ret    
6501dcf7:	push   0x14
6501dcf9:	push   0x65029c90
6501dcfe:	call   0x65013ca0
6501dd03:	xor    edi,edi
6501dd05:	mov    DWORD PTR [ebp-0x1c],edi
6501dd08:	mov    DWORD PTR [ebp-0x24],edi
6501dd0b:	push   0x1
6501dd0d:	call   0x65019c98
6501dd12:	pop    ecx
6501dd13:	mov    DWORD PTR [ebp-0x4],edi
6501dd16:	xor    esi,esi
6501dd18:	mov    DWORD PTR [ebp-0x20],esi
6501dd1b:	cmp    esi,DWORD PTR ds:0x65031420
6501dd21:	jge    0x6501ddaa
6501dd27:	mov    eax,ds:0x65030400
6501dd2c:	lea    eax,[eax+esi*4]
6501dd2f:	cmp    DWORD PTR [eax],edi
6501dd31:	je     0x6501dd91
6501dd33:	mov    eax,DWORD PTR [eax]
6501dd35:	test   BYTE PTR [eax+0xc],0x83
6501dd39:	je     0x6501dd91
6501dd3b:	push   eax
6501dd3c:	push   esi
6501dd3d:	call   0x6501c46f
6501dd42:	pop    ecx
6501dd43:	pop    ecx
6501dd44:	xor    edx,edx
6501dd46:	inc    edx
6501dd47:	mov    DWORD PTR [ebp-0x4],edx
6501dd4a:	mov    eax,ds:0x65030400
6501dd4f:	mov    eax,DWORD PTR [eax+esi*4]
6501dd52:	mov    ecx,DWORD PTR [eax+0xc]
6501dd55:	test   cl,0x83
6501dd58:	je     0x6501dd89
6501dd5a:	cmp    DWORD PTR [ebp+0x8],edx
6501dd5d:	jne    0x6501dd70
6501dd5f:	push   eax
6501dd60:	call   0x6501dcb5
6501dd65:	pop    ecx
6501dd66:	cmp    eax,0xffffffff
6501dd69:	je     0x6501dd89
6501dd6b:	inc    DWORD PTR [ebp-0x1c]
6501dd6e:	jmp    0x6501dd89
6501dd70:	cmp    DWORD PTR [ebp+0x8],edi
6501dd73:	jne    0x6501dd89
6501dd75:	test   cl,0x2
6501dd78:	je     0x6501dd89
6501dd7a:	push   eax
6501dd7b:	call   0x6501dcb5
6501dd80:	pop    ecx
6501dd81:	cmp    eax,0xffffffff
6501dd84:	jne    0x6501dd89
6501dd86:	or     DWORD PTR [ebp-0x24],eax
6501dd89:	mov    DWORD PTR [ebp-0x4],edi
6501dd8c:	call   0x6501dd99
6501dd91:	inc    esi
6501dd92:	jmp    0x6501dd18
6501dd94:	xor    edi,edi
6501dd96:	mov    esi,DWORD PTR [ebp-0x20]
6501dd99:	mov    eax,ds:0x65030400
6501dd9e:	push   DWORD PTR [eax+esi*4]
6501dda1:	push   esi
6501dda2:	call   0x6501c4d3
6501dda7:	pop    ecx
6501dda8:	pop    ecx
6501dda9:	ret    
6501ddaa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501ddb1:	call   0x6501ddc8
6501ddb6:	cmp    DWORD PTR [ebp+0x8],0x1
6501ddba:	mov    eax,DWORD PTR [ebp-0x1c]
6501ddbd:	je     0x6501ddc2
6501ddbf:	mov    eax,DWORD PTR [ebp-0x24]
6501ddc2:	call   0x65013ce5
6501ddc7:	ret    
6501ddc8:	push   0x1
6501ddca:	call   0x65019bc0
6501ddcf:	pop    ecx
6501ddd0:	ret    
6501ddd1:	push   0x1
6501ddd3:	call   0x6501dcf7
6501ddd8:	pop    ecx
6501ddd9:	ret    
6501ddda:	push   ebp
6501dddb:	mov    ebp,esp
6501dddd:	push   ecx
6501ddde:	push   esi
6501dddf:	mov    esi,DWORD PTR [ebp+0xc]
6501dde2:	push   esi
6501dde3:	call   0x6501c4fd
6501dde8:	mov    DWORD PTR [ebp+0xc],eax
6501ddeb:	mov    eax,DWORD PTR [esi+0xc]
6501ddee:	test   al,0x82
6501ddf0:	pop    ecx
6501ddf1:	jne    0x6501de0c
6501ddf3:	call   0x650143a0
6501ddf8:	mov    DWORD PTR [eax],0x9
6501ddfe:	or     DWORD PTR [esi+0xc],0x20
6501de02:	mov    eax,0xffff
6501de07:	jmp    0x6501df47
6501de0c:	test   al,0x40
6501de0e:	je     0x6501de1d
6501de10:	call   0x650143a0
6501de15:	mov    DWORD PTR [eax],0x22
6501de1b:	jmp    0x6501ddfe
6501de1d:	test   al,0x1
6501de1f:	je     0x6501de38
6501de21:	and    DWORD PTR [esi+0x4],0x0
6501de25:	test   al,0x10
6501de27:	je     0x6501deb8
6501de2d:	mov    ecx,DWORD PTR [esi+0x8]
6501de30:	and    eax,0xfffffffe
6501de33:	mov    DWORD PTR [esi],ecx
6501de35:	mov    DWORD PTR [esi+0xc],eax
6501de38:	mov    eax,DWORD PTR [esi+0xc]
6501de3b:	and    DWORD PTR [esi+0x4],0x0
6501de3f:	and    DWORD PTR [ebp-0x4],0x0
6501de43:	push   ebx
6501de44:	push   0x2
6501de46:	and    eax,0xffffffef
6501de49:	pop    ebx
6501de4a:	or     eax,ebx
6501de4c:	test   ax,0x10c
6501de50:	mov    DWORD PTR [esi+0xc],eax
6501de53:	jne    0x6501de81
6501de55:	call   0x6501c35c
6501de5a:	add    eax,0x20
6501de5d:	cmp    esi,eax
6501de5f:	je     0x6501de6d
6501de61:	call   0x6501c35c
6501de66:	add    eax,0x40
6501de69:	cmp    esi,eax
6501de6b:	jne    0x6501de7a
6501de6d:	push   DWORD PTR [ebp+0xc]
6501de70:	call   0x6501c2fe
6501de75:	test   eax,eax
6501de77:	pop    ecx
6501de78:	jne    0x6501de81
6501de7a:	push   esi
6501de7b:	call   0x6501c2ba
6501de80:	pop    ecx
6501de81:	test   WORD PTR [esi+0xc],0x108
6501de87:	push   edi
6501de88:	je     0x6501df11
6501de8e:	mov    eax,DWORD PTR [esi+0x8]
6501de91:	mov    edi,DWORD PTR [esi]
6501de93:	lea    ecx,[eax+0x2]
6501de96:	mov    DWORD PTR [esi],ecx
6501de98:	mov    ecx,DWORD PTR [esi+0x18]
6501de9b:	sub    edi,eax
6501de9d:	sub    ecx,ebx
6501de9f:	test   edi,edi
6501dea1:	mov    DWORD PTR [esi+0x4],ecx
6501dea4:	jle    0x6501dec3
6501dea6:	push   edi
6501dea7:	push   eax
6501dea8:	push   DWORD PTR [ebp+0xc]
6501deab:	call   0x6501c1de
6501deb0:	add    esp,0xc
6501deb3:	mov    DWORD PTR [ebp-0x4],eax
6501deb6:	jmp    0x6501df06
6501deb8:	or     eax,0x20
6501debb:	mov    DWORD PTR [esi+0xc],eax
6501debe:	jmp    0x6501de02
6501dec3:	mov    ecx,DWORD PTR [ebp+0xc]
6501dec6:	cmp    ecx,0xffffffff
6501dec9:	je     0x6501dee6
6501decb:	cmp    ecx,0xfffffffe
6501dece:	je     0x6501dee6
6501ded0:	mov    eax,ecx
6501ded2:	and    eax,0x1f
6501ded5:	mov    edx,ecx
6501ded7:	sar    edx,0x5
6501deda:	shl    eax,0x6
6501dedd:	add    eax,DWORD PTR [edx*4+0x65031460]
6501dee4:	jmp    0x6501deeb
6501dee6:	mov    eax,0x6502c880
6501deeb:	test   BYTE PTR [eax+0x4],0x20
6501deef:	je     0x6501df06
6501def1:	push   ebx
6501def2:	push   0x0
6501def4:	push   0x0
6501def6:	push   ecx
6501def7:	call   0x6501baa3
6501defc:	and    eax,edx
6501defe:	add    esp,0x10
6501df01:	cmp    eax,0xffffffff
6501df04:	je     0x6501df33
6501df06:	mov    eax,DWORD PTR [esi+0x8]
6501df09:	mov    ebx,DWORD PTR [ebp+0x8]
6501df0c:	mov    WORD PTR [eax],bx
6501df0f:	jmp    0x6501df2e
6501df11:	push   0x2
6501df13:	lea    eax,[ebp-0x4]
6501df16:	push   eax
6501df17:	push   DWORD PTR [ebp+0xc]
6501df1a:	mov    edi,ebx
6501df1c:	mov    ebx,DWORD PTR [ebp+0x8]
6501df1f:	mov    WORD PTR [ebp-0x4],bx
6501df23:	call   0x6501c1de
6501df28:	add    esp,0xc
6501df2b:	mov    DWORD PTR [ebp-0x4],eax
6501df2e:	cmp    DWORD PTR [ebp-0x4],edi
6501df31:	je     0x6501df3e
6501df33:	or     DWORD PTR [esi+0xc],0x20
6501df37:	mov    eax,0xffff
6501df3c:	jmp    0x6501df45
6501df3e:	mov    eax,ebx
6501df40:	and    eax,0xffff
6501df45:	pop    edi
6501df46:	pop    ebx
6501df47:	pop    esi
6501df48:	leave  
6501df49:	ret    
6501df4a:	push   ebp
6501df4b:	mov    ebp,esp
6501df4d:	sub    esp,0x14
6501df50:	push   esi
6501df51:	push   edi
6501df52:	push   DWORD PTR [ebp+0x8]
6501df55:	lea    ecx,[ebp-0x14]
6501df58:	call   0x650128ff
6501df5d:	mov    eax,DWORD PTR [ebp+0x10]
6501df60:	mov    esi,DWORD PTR [ebp+0xc]
6501df63:	xor    edi,edi
6501df65:	cmp    eax,edi
6501df67:	je     0x6501df6b
6501df69:	mov    DWORD PTR [eax],esi
6501df6b:	cmp    esi,edi
6501df6d:	jne    0x6501df9b
6501df6f:	call   0x650143a0
6501df74:	push   edi
6501df75:	push   edi
6501df76:	push   edi
6501df77:	push   edi
6501df78:	push   edi
6501df79:	mov    DWORD PTR [eax],0x16
6501df7f:	call   0x6501224f
6501df84:	add    esp,0x14
6501df87:	cmp    BYTE PTR [ebp-0x8],0x0
6501df8b:	je     0x6501df94
6501df8d:	mov    eax,DWORD PTR [ebp-0xc]
6501df90:	and    DWORD PTR [eax+0x70],0xfffffffd
6501df94:	xor    eax,eax
6501df96:	jmp    0x6501e171
6501df9b:	cmp    DWORD PTR [ebp+0x14],edi
6501df9e:	je     0x6501dfac
6501dfa0:	cmp    DWORD PTR [ebp+0x14],0x2
6501dfa4:	jl     0x6501df6f
6501dfa6:	cmp    DWORD PTR [ebp+0x14],0x24
6501dfaa:	jg     0x6501df6f
6501dfac:	mov    ecx,DWORD PTR [ebp-0x14]
6501dfaf:	push   ebx
6501dfb0:	mov    bl,BYTE PTR [esi]
6501dfb2:	mov    DWORD PTR [ebp-0x4],edi
6501dfb5:	lea    edi,[esi+0x1]
6501dfb8:	cmp    DWORD PTR [ecx+0xac],0x1
6501dfbf:	jle    0x6501dfd8
6501dfc1:	lea    eax,[ebp-0x14]
6501dfc4:	push   eax
6501dfc5:	movzx  eax,bl
6501dfc8:	push   0x8
6501dfca:	push   eax
6501dfcb:	call   0x65019643
6501dfd0:	mov    ecx,DWORD PTR [ebp-0x14]
6501dfd3:	add    esp,0xc
6501dfd6:	jmp    0x6501dfe8
6501dfd8:	mov    edx,DWORD PTR [ecx+0xc8]
6501dfde:	movzx  eax,bl
6501dfe1:	movzx  eax,BYTE PTR [edx+eax*2]
6501dfe5:	and    eax,0x8
6501dfe8:	test   eax,eax
6501dfea:	je     0x6501dff1
6501dfec:	mov    bl,BYTE PTR [edi]
6501dfee:	inc    edi
6501dfef:	jmp    0x6501dfb8
6501dff1:	cmp    bl,0x2d
6501dff4:	jne    0x6501dffc
6501dff6:	or     DWORD PTR [ebp+0x18],0x2
6501dffa:	jmp    0x6501e001
6501dffc:	cmp    bl,0x2b
6501dfff:	jne    0x6501e004
6501e001:	mov    bl,BYTE PTR [edi]
6501e003:	inc    edi
6501e004:	mov    eax,DWORD PTR [ebp+0x14]
6501e007:	test   eax,eax
6501e009:	jl     0x6501e158
6501e00f:	cmp    eax,0x1
6501e012:	je     0x6501e158
6501e018:	cmp    eax,0x24
6501e01b:	jg     0x6501e158
6501e021:	test   eax,eax
6501e023:	jne    0x6501e04f
6501e025:	cmp    bl,0x30
6501e028:	je     0x6501e033
6501e02a:	mov    DWORD PTR [ebp+0x14],0xa
6501e031:	jmp    0x6501e067
6501e033:	mov    al,BYTE PTR [edi]
6501e035:	cmp    al,0x78
6501e037:	je     0x6501e046
6501e039:	cmp    al,0x58
6501e03b:	je     0x6501e046
6501e03d:	mov    DWORD PTR [ebp+0x14],0x8
6501e044:	jmp    0x6501e067
6501e046:	mov    DWORD PTR [ebp+0x14],0x10
6501e04d:	jmp    0x6501e059
6501e04f:	cmp    eax,0x10
6501e052:	jne    0x6501e067
6501e054:	cmp    bl,0x30
6501e057:	jne    0x6501e067
6501e059:	mov    al,BYTE PTR [edi]
6501e05b:	cmp    al,0x78
6501e05d:	je     0x6501e063
6501e05f:	cmp    al,0x58
6501e061:	jne    0x6501e067
6501e063:	inc    edi
6501e064:	mov    bl,BYTE PTR [edi]
6501e066:	inc    edi
6501e067:	mov    esi,DWORD PTR [ecx+0xc8]
6501e06d:	or     eax,0xffffffff
6501e070:	xor    edx,edx
6501e072:	div    DWORD PTR [ebp+0x14]
6501e075:	movzx  ecx,bl
6501e078:	movzx  ecx,WORD PTR [esi+ecx*2]
6501e07c:	test   cl,0x4
6501e07f:	je     0x6501e089
6501e081:	movsx  ecx,bl
6501e084:	sub    ecx,0x30
6501e087:	jmp    0x6501e0a3
6501e089:	test   cx,0x103
6501e08e:	je     0x6501e0c1
6501e090:	mov    cl,bl
6501e092:	sub    cl,0x61
6501e095:	cmp    cl,0x19
6501e098:	movsx  ecx,bl
6501e09b:	ja     0x6501e0a0
6501e09d:	sub    ecx,0x20
6501e0a0:	add    ecx,0xffffffc9
6501e0a3:	cmp    ecx,DWORD PTR [ebp+0x14]
6501e0a6:	jae    0x6501e0c1
6501e0a8:	or     DWORD PTR [ebp+0x18],0x8
6501e0ac:	cmp    DWORD PTR [ebp-0x4],eax
6501e0af:	jb     0x6501e0d8
6501e0b1:	jne    0x6501e0b7
6501e0b3:	cmp    ecx,edx
6501e0b5:	jbe    0x6501e0d8
6501e0b7:	or     DWORD PTR [ebp+0x18],0x4
6501e0bb:	cmp    DWORD PTR [ebp+0x10],0x0
6501e0bf:	jne    0x6501e0e4
6501e0c1:	mov    eax,DWORD PTR [ebp+0x18]
6501e0c4:	dec    edi
6501e0c5:	test   al,0x8
6501e0c7:	jne    0x6501e0e9
6501e0c9:	cmp    DWORD PTR [ebp+0x10],0x0
6501e0cd:	je     0x6501e0d2
6501e0cf:	mov    edi,DWORD PTR [ebp+0xc]
6501e0d2:	and    DWORD PTR [ebp-0x4],0x0
6501e0d6:	jmp    0x6501e134
6501e0d8:	mov    ebx,DWORD PTR [ebp-0x4]
6501e0db:	imul   ebx,DWORD PTR [ebp+0x14]
6501e0df:	add    ebx,ecx
6501e0e1:	mov    DWORD PTR [ebp-0x4],ebx
6501e0e4:	mov    bl,BYTE PTR [edi]
6501e0e6:	inc    edi
6501e0e7:	jmp    0x6501e075
6501e0e9:	test   al,0x4
6501e0eb:	mov    esi,0x7fffffff
6501e0f0:	jne    0x6501e10d
6501e0f2:	test   al,0x1
6501e0f4:	jne    0x6501e134
6501e0f6:	and    eax,0x2
6501e0f9:	je     0x6501e104
6501e0fb:	cmp    DWORD PTR [ebp-0x4],0x80000000
6501e102:	ja     0x6501e10d
6501e104:	test   eax,eax
6501e106:	jne    0x6501e134
6501e108:	cmp    DWORD PTR [ebp-0x4],esi
6501e10b:	jbe    0x6501e134
6501e10d:	call   0x650143a0
6501e112:	test   BYTE PTR [ebp+0x18],0x1
6501e116:	mov    DWORD PTR [eax],0x22
6501e11c:	je     0x6501e124
6501e11e:	or     DWORD PTR [ebp-0x4],0xffffffff
6501e122:	jmp    0x6501e134
6501e124:	mov    al,BYTE PTR [ebp+0x18]
6501e127:	and    al,0x2
6501e129:	neg    al
6501e12b:	sbb    eax,eax
6501e12d:	neg    eax
6501e12f:	add    eax,esi
6501e131:	mov    DWORD PTR [ebp-0x4],eax
6501e134:	mov    eax,DWORD PTR [ebp+0x10]
6501e137:	test   eax,eax
6501e139:	je     0x6501e13d
6501e13b:	mov    DWORD PTR [eax],edi
6501e13d:	test   BYTE PTR [ebp+0x18],0x2
6501e141:	je     0x6501e146
6501e143:	neg    DWORD PTR [ebp-0x4]
6501e146:	cmp    BYTE PTR [ebp-0x8],0x0
6501e14a:	je     0x6501e153
6501e14c:	mov    eax,DWORD PTR [ebp-0xc]
6501e14f:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e153:	mov    eax,DWORD PTR [ebp-0x4]
6501e156:	jmp    0x6501e170
6501e158:	mov    eax,DWORD PTR [ebp+0x10]
6501e15b:	test   eax,eax
6501e15d:	je     0x6501e161
6501e15f:	mov    DWORD PTR [eax],esi
6501e161:	cmp    BYTE PTR [ebp-0x8],0x0
6501e165:	je     0x6501e16e
6501e167:	mov    eax,DWORD PTR [ebp-0xc]
6501e16a:	and    DWORD PTR [eax+0x70],0xfffffffd
6501e16e:	xor    eax,eax
6501e170:	pop    ebx
6501e171:	pop    edi
6501e172:	pop    esi
6501e173:	leave  
6501e174:	ret    
6501e175:	push   ebp
6501e176:	mov    ebp,esp
6501e178:	xor    eax,eax
6501e17a:	cmp    DWORD PTR ds:0x6502d954,eax
6501e180:	push   eax
6501e181:	push   DWORD PTR [ebp+0x10]
6501e184:	push   DWORD PTR [ebp+0xc]
6501e187:	push   DWORD PTR [ebp+0x8]
6501e18a:	jne    0x6501e193
6501e18c:	push   0x6502c878
6501e191:	jmp    0x6501e194
6501e193:	push   eax
6501e194:	call   0x6501df4a
6501e199:	add    esp,0x14
6501e19c:	pop    ebp
6501e19d:	ret    
6501e19e:	int3   
6501e19f:	int3   
6501e1a0:	push   ebp
6501e1a1:	mov    ebp,esp
6501e1a3:	push   edi
6501e1a4:	push   esi
6501e1a5:	push   ebx
6501e1a6:	mov    ecx,DWORD PTR [ebp+0x10]
6501e1a9:	or     ecx,ecx
6501e1ab:	je     0x6501e1fa
6501e1ad:	mov    esi,DWORD PTR [ebp+0x8]
6501e1b0:	mov    edi,DWORD PTR [ebp+0xc]
6501e1b3:	mov    bh,0x41
6501e1b5:	mov    bl,0x5a
6501e1b7:	mov    dh,0x20
6501e1b9:	lea    ecx,[ecx+0x0]
6501e1bc:	mov    ah,BYTE PTR [esi]
6501e1be:	or     ah,ah
6501e1c0:	mov    al,BYTE PTR [edi]
6501e1c2:	je     0x6501e1eb
6501e1c4:	or     al,al
6501e1c6:	je     0x6501e1eb
6501e1c8:	add    esi,0x1
6501e1cb:	add    edi,0x1
6501e1ce:	cmp    ah,bh
6501e1d0:	jb     0x6501e1d8
6501e1d2:	cmp    ah,bl
6501e1d4:	ja     0x6501e1d8
6501e1d6:	add    ah,dh
6501e1d8:	cmp    al,bh
6501e1da:	jb     0x6501e1e2
6501e1dc:	cmp    al,bl
6501e1de:	ja     0x6501e1e2
6501e1e0:	add    al,dh
6501e1e2:	cmp    ah,al
6501e1e4:	jne    0x6501e1f1
6501e1e6:	sub    ecx,0x1
6501e1e9:	jne    0x6501e1bc
6501e1eb:	xor    ecx,ecx
6501e1ed:	cmp    ah,al
6501e1ef:	je     0x6501e1fa
6501e1f1:	mov    ecx,0xffffffff
6501e1f6:	jb     0x6501e1fa
6501e1f8:	neg    ecx
6501e1fa:	mov    eax,ecx
6501e1fc:	pop    ebx
6501e1fd:	pop    esi
6501e1fe:	pop    edi
6501e1ff:	leave  
6501e200:	ret    
6501e201:	xor    eax,eax
6501e203:	push   eax
6501e204:	push   eax
6501e205:	push   0x3
6501e207:	push   eax
6501e208:	push   0x3
6501e20a:	push   0x40000000
6501e20f:	push   0x650264ec
6501e214:	call   DWORD PTR ds:0x650240ac
6501e21a:	mov    ds:0x6502d024,eax
6501e21f:	ret    
6501e220:	mov    eax,ds:0x6502d024
6501e225:	cmp    eax,0xffffffff
6501e228:	push   esi
6501e229:	mov    esi,DWORD PTR ds:0x65024040
6501e22f:	je     0x6501e239
6501e231:	cmp    eax,0xfffffffe
6501e234:	je     0x6501e239
6501e236:	push   eax
6501e237:	call   esi
6501e239:	mov    eax,ds:0x6502d020
6501e23e:	cmp    eax,0xffffffff
6501e241:	je     0x6501e24b
6501e243:	cmp    eax,0xfffffffe
6501e246:	je     0x6501e24b
6501e248:	push   eax
6501e249:	call   esi
6501e24b:	pop    esi
6501e24c:	ret    
6501e24d:	push   ebx
6501e24e:	push   esi
6501e24f:	mov    esi,DWORD PTR [esp+0xc]
6501e253:	push   edi
6501e254:	xor    edi,edi
6501e256:	or     ebx,0xffffffff
6501e259:	cmp    esi,edi
6501e25b:	jne    0x6501e279
6501e25d:	call   0x650143a0
6501e262:	push   edi
6501e263:	push   edi
6501e264:	push   edi
6501e265:	push   edi
6501e266:	push   edi
6501e267:	mov    DWORD PTR [eax],0x16
6501e26d:	call   0x6501224f
6501e272:	add    esp,0x14
6501e275:	or     eax,ebx
6501e277:	jmp    0x6501e2bb
6501e279:	test   BYTE PTR [esi+0xc],0x83
6501e27d:	je     0x6501e2b6
6501e27f:	push   esi
6501e280:	call   0x6501dc53
6501e285:	push   esi
6501e286:	mov    ebx,eax
6501e288:	call   0x6501e59a
6501e28d:	push   esi
6501e28e:	call   0x6501c4fd
6501e293:	push   eax
6501e294:	call   0x6501e4cd
6501e299:	add    esp,0x10
6501e29c:	test   eax,eax
6501e29e:	jge    0x6501e2a5
6501e2a0:	or     ebx,0xffffffff
6501e2a3:	jmp    0x6501e2b6
6501e2a5:	mov    eax,DWORD PTR [esi+0x1c]
6501e2a8:	cmp    eax,edi
6501e2aa:	je     0x6501e2b6
6501e2ac:	push   eax
6501e2ad:	call   0x65013577
6501e2b2:	pop    ecx
6501e2b3:	mov    DWORD PTR [esi+0x1c],edi
6501e2b6:	mov    DWORD PTR [esi+0xc],edi
6501e2b9:	mov    eax,ebx
6501e2bb:	pop    edi
6501e2bc:	pop    esi
6501e2bd:	pop    ebx
6501e2be:	ret    
6501e2bf:	push   0xc
6501e2c1:	push   0x65029cb8
6501e2c6:	call   0x65013ca0
6501e2cb:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e2cf:	xor    eax,eax
6501e2d1:	mov    esi,DWORD PTR [ebp+0x8]
6501e2d4:	xor    edi,edi
6501e2d6:	cmp    esi,edi
6501e2d8:	setne  al
6501e2db:	cmp    eax,edi
6501e2dd:	jne    0x6501e2fc
6501e2df:	call   0x650143a0
6501e2e4:	mov    DWORD PTR [eax],0x16
6501e2ea:	push   edi
6501e2eb:	push   edi
6501e2ec:	push   edi
6501e2ed:	push   edi
6501e2ee:	push   edi
6501e2ef:	call   0x6501224f
6501e2f4:	add    esp,0x14
6501e2f7:	or     eax,0xffffffff
6501e2fa:	jmp    0x6501e308
6501e2fc:	test   BYTE PTR [esi+0xc],0x40
6501e300:	je     0x6501e30e
6501e302:	mov    DWORD PTR [esi+0xc],edi
6501e305:	mov    eax,DWORD PTR [ebp-0x1c]
6501e308:	call   0x65013ce5
6501e30d:	ret    
6501e30e:	push   esi
6501e30f:	call   0x6501c433
6501e314:	pop    ecx
6501e315:	mov    DWORD PTR [ebp-0x4],edi
6501e318:	push   esi
6501e319:	call   0x6501e24d
6501e31e:	pop    ecx
6501e31f:	mov    DWORD PTR [ebp-0x1c],eax
6501e322:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e329:	call   0x6501e333
6501e32e:	jmp    0x6501e305
6501e330:	mov    esi,DWORD PTR [ebp+0x8]
6501e333:	push   esi
6501e334:	call   0x6501c49d
6501e339:	pop    ecx
6501e33a:	ret    
6501e33b:	push   0x10
6501e33d:	push   0x65029cd8
6501e342:	call   0x65013ca0
6501e347:	mov    eax,DWORD PTR [ebp+0x8]
6501e34a:	cmp    eax,0xfffffffe
6501e34d:	jne    0x6501e362
6501e34f:	call   0x650143a0
6501e354:	mov    DWORD PTR [eax],0x9
6501e35a:	or     eax,0xffffffff
6501e35d:	jmp    0x6501e40c
6501e362:	xor    ebx,ebx
6501e364:	cmp    eax,ebx
6501e366:	jl     0x6501e370
6501e368:	cmp    eax,DWORD PTR ds:0x65031440
6501e36e:	jb     0x6501e38a
6501e370:	call   0x650143a0
6501e375:	mov    DWORD PTR [eax],0x9
6501e37b:	push   ebx
6501e37c:	push   ebx
6501e37d:	push   ebx
6501e37e:	push   ebx
6501e37f:	push   ebx
6501e380:	call   0x6501224f
6501e385:	add    esp,0x14
6501e388:	jmp    0x6501e35a
6501e38a:	mov    ecx,eax
6501e38c:	sar    ecx,0x5
6501e38f:	lea    edi,[ecx*4+0x65031460]
6501e396:	mov    esi,eax
6501e398:	and    esi,0x1f
6501e39b:	shl    esi,0x6
6501e39e:	mov    ecx,DWORD PTR [edi]
6501e3a0:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6501e3a5:	and    ecx,0x1
6501e3a8:	je     0x6501e370
6501e3aa:	push   eax
6501e3ab:	call   0x6501da30
6501e3b0:	pop    ecx
6501e3b1:	mov    DWORD PTR [ebp-0x4],ebx
6501e3b4:	mov    eax,DWORD PTR [edi]
6501e3b6:	test   BYTE PTR [esi+eax*1+0x4],0x1
6501e3bb:	je     0x6501e3ee
6501e3bd:	push   DWORD PTR [ebp+0x8]
6501e3c0:	call   0x6501d9bf
6501e3c5:	pop    ecx
6501e3c6:	push   eax
6501e3c7:	call   DWORD PTR ds:0x650240b0
6501e3cd:	test   eax,eax
6501e3cf:	jne    0x6501e3dc
6501e3d1:	call   DWORD PTR ds:0x65024044
6501e3d7:	mov    DWORD PTR [ebp-0x1c],eax
6501e3da:	jmp    0x6501e3df
6501e3dc:	mov    DWORD PTR [ebp-0x1c],ebx
6501e3df:	cmp    DWORD PTR [ebp-0x1c],ebx
6501e3e2:	je     0x6501e3fd
6501e3e4:	call   0x650143b3
6501e3e9:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e3ec:	mov    DWORD PTR [eax],ecx
6501e3ee:	call   0x650143a0
6501e3f3:	mov    DWORD PTR [eax],0x9
6501e3f9:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e3fd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e404:	call   0x6501e412
6501e409:	mov    eax,DWORD PTR [ebp-0x1c]
6501e40c:	call   0x65013ce5
6501e411:	ret    
6501e412:	push   DWORD PTR [ebp+0x8]
6501e415:	call   0x6501dad0
6501e41a:	pop    ecx
6501e41b:	ret    
6501e41c:	xor    eax,eax
6501e41e:	cmp    DWORD PTR [esp+0x8],eax
6501e422:	jbe    0x6501e435
6501e424:	mov    ecx,DWORD PTR [esp+0x4]
6501e428:	cmp    BYTE PTR [ecx],0x0
6501e42b:	je     0x6501e435
6501e42d:	inc    eax
6501e42e:	inc    ecx
6501e42f:	cmp    eax,DWORD PTR [esp+0x8]
6501e433:	jb     0x6501e428
6501e435:	ret    
6501e436:	push   esi
6501e437:	mov    esi,DWORD PTR [esp+0x8]
6501e43b:	push   edi
6501e43c:	push   esi
6501e43d:	call   0x6501d9bf
6501e442:	cmp    eax,0xffffffff
6501e445:	pop    ecx
6501e446:	je     0x6501e498
6501e448:	cmp    esi,0x1
6501e44b:	mov    eax,ds:0x65031460
6501e450:	jne    0x6501e45b
6501e452:	test   BYTE PTR [eax+0x84],0x1
6501e459:	jne    0x6501e466
6501e45b:	cmp    esi,0x2
6501e45e:	jne    0x6501e47c
6501e460:	test   BYTE PTR [eax+0x44],0x1
6501e464:	je     0x6501e47c
6501e466:	push   0x2
6501e468:	call   0x6501d9bf
6501e46d:	push   0x1
6501e46f:	mov    edi,eax
6501e471:	call   0x6501d9bf
6501e476:	cmp    eax,edi
6501e478:	pop    ecx
6501e479:	pop    ecx
6501e47a:	je     0x6501e498
6501e47c:	push   esi
6501e47d:	call   0x6501d9bf
6501e482:	pop    ecx
6501e483:	push   eax
6501e484:	call   DWORD PTR ds:0x65024040
6501e48a:	test   eax,eax
6501e48c:	jne    0x6501e498
6501e48e:	call   DWORD PTR ds:0x65024044
6501e494:	mov    edi,eax
6501e496:	jmp    0x6501e49a
6501e498:	xor    edi,edi
6501e49a:	push   esi
6501e49b:	call   0x6501d93e
6501e4a0:	mov    eax,esi
6501e4a2:	sar    eax,0x5
6501e4a5:	mov    eax,DWORD PTR [eax*4+0x65031460]
6501e4ac:	and    esi,0x1f
6501e4af:	shl    esi,0x6
6501e4b2:	test   edi,edi
6501e4b4:	pop    ecx
6501e4b5:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6501e4ba:	je     0x6501e4c8
6501e4bc:	push   edi
6501e4bd:	call   0x650143c6
6501e4c2:	pop    ecx
6501e4c3:	or     eax,0xffffffff
6501e4c6:	jmp    0x6501e4ca
6501e4c8:	xor    eax,eax
6501e4ca:	pop    edi
6501e4cb:	pop    esi
6501e4cc:	ret    
6501e4cd:	push   0x10
6501e4cf:	push   0x65029cf8
6501e4d4:	call   0x65013ca0
6501e4d9:	mov    eax,DWORD PTR [ebp+0x8]
6501e4dc:	cmp    eax,0xfffffffe
6501e4df:	jne    0x6501e4fc
6501e4e1:	call   0x650143b3
6501e4e6:	and    DWORD PTR [eax],0x0
6501e4e9:	call   0x650143a0
6501e4ee:	mov    DWORD PTR [eax],0x9
6501e4f4:	or     eax,0xffffffff
6501e4f7:	jmp    0x6501e58a
6501e4fc:	xor    edi,edi
6501e4fe:	cmp    eax,edi
6501e500:	jl     0x6501e50a
6501e502:	cmp    eax,DWORD PTR ds:0x65031440
6501e508:	jb     0x6501e52b
6501e50a:	call   0x650143b3
6501e50f:	mov    DWORD PTR [eax],edi
6501e511:	call   0x650143a0
6501e516:	mov    DWORD PTR [eax],0x9
6501e51c:	push   edi
6501e51d:	push   edi
6501e51e:	push   edi
6501e51f:	push   edi
6501e520:	push   edi
6501e521:	call   0x6501224f
6501e526:	add    esp,0x14
6501e529:	jmp    0x6501e4f4
6501e52b:	mov    ecx,eax
6501e52d:	sar    ecx,0x5
6501e530:	lea    ebx,[ecx*4+0x65031460]
6501e537:	mov    esi,eax
6501e539:	and    esi,0x1f
6501e53c:	shl    esi,0x6
6501e53f:	mov    ecx,DWORD PTR [ebx]
6501e541:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6501e546:	and    ecx,0x1
6501e549:	je     0x6501e50a
6501e54b:	push   eax
6501e54c:	call   0x6501da30
6501e551:	pop    ecx
6501e552:	mov    DWORD PTR [ebp-0x4],edi
6501e555:	mov    eax,DWORD PTR [ebx]
6501e557:	test   BYTE PTR [eax+esi*1+0x4],0x1
6501e55c:	je     0x6501e56c
6501e55e:	push   DWORD PTR [ebp+0x8]
6501e561:	call   0x6501e436
6501e566:	pop    ecx
6501e567:	mov    DWORD PTR [ebp-0x1c],eax
6501e56a:	jmp    0x6501e57b
6501e56c:	call   0x650143a0
6501e571:	mov    DWORD PTR [eax],0x9
6501e577:	or     DWORD PTR [ebp-0x1c],0xffffffff
6501e57b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e582:	call   0x6501e590
6501e587:	mov    eax,DWORD PTR [ebp-0x1c]
6501e58a:	call   0x65013ce5
6501e58f:	ret    
6501e590:	push   DWORD PTR [ebp+0x8]
6501e593:	call   0x6501dad0
6501e598:	pop    ecx
6501e599:	ret    
6501e59a:	push   esi
6501e59b:	mov    esi,DWORD PTR [esp+0x8]
6501e59f:	mov    eax,DWORD PTR [esi+0xc]
6501e5a2:	test   al,0x83
6501e5a4:	je     0x6501e5c4
6501e5a6:	test   al,0x8
6501e5a8:	je     0x6501e5c4
6501e5aa:	push   DWORD PTR [esi+0x8]
6501e5ad:	call   0x65013577
6501e5b2:	and    DWORD PTR [esi+0xc],0xfffffbf7
6501e5b9:	xor    eax,eax
6501e5bb:	pop    ecx
6501e5bc:	mov    DWORD PTR [esi],eax
6501e5be:	mov    DWORD PTR [esi+0x8],eax
6501e5c1:	mov    DWORD PTR [esi+0x4],eax
6501e5c4:	pop    esi
6501e5c5:	ret    
6501e5c6:	int3   
6501e5c7:	int3   
6501e5c8:	int3   
6501e5c9:	int3   
6501e5ca:	int3   
6501e5cb:	int3   
6501e5cc:	int3   
6501e5cd:	int3   
6501e5ce:	int3   
6501e5cf:	int3   
6501e5d0:	lea    eax,[edx-0x1]
6501e5d3:	pop    ebx
6501e5d4:	ret    
6501e5d5:	lea    esp,[esp+0x0]
6501e5dc:	lea    esp,[esp+0x0]
6501e5e0:	xor    eax,eax
6501e5e2:	mov    al,BYTE PTR [esp+0x8]
6501e5e6:	push   ebx
6501e5e7:	mov    ebx,eax
6501e5e9:	shl    eax,0x8
6501e5ec:	mov    edx,DWORD PTR [esp+0x8]
6501e5f0:	test   edx,0x3
6501e5f6:	je     0x6501e60d
6501e5f8:	mov    cl,BYTE PTR [edx]
6501e5fa:	add    edx,0x1
6501e5fd:	cmp    cl,bl
6501e5ff:	je     0x6501e5d0
6501e601:	test   cl,cl
6501e603:	je     0x6501e656
6501e605:	test   edx,0x3
6501e60b:	jne    0x6501e5f8
6501e60d:	or     ebx,eax
6501e60f:	push   edi
6501e610:	mov    eax,ebx
6501e612:	shl    ebx,0x10
6501e615:	push   esi
6501e616:	or     ebx,eax
6501e618:	mov    ecx,DWORD PTR [edx]
6501e61a:	mov    edi,0x7efefeff
6501e61f:	mov    eax,ecx
6501e621:	mov    esi,edi
6501e623:	xor    ecx,ebx
6501e625:	add    esi,eax
6501e627:	add    edi,ecx
6501e629:	xor    ecx,0xffffffff
6501e62c:	xor    eax,0xffffffff
6501e62f:	xor    ecx,edi
6501e631:	xor    eax,esi
6501e633:	add    edx,0x4
6501e636:	and    ecx,0x81010100
6501e63c:	jne    0x6501e65a
6501e63e:	and    eax,0x81010100
6501e643:	je     0x6501e618
6501e645:	and    eax,0x1010100
6501e64a:	jne    0x6501e654
6501e64c:	and    esi,0x80000000
6501e652:	jne    0x6501e618
6501e654:	pop    esi
6501e655:	pop    edi
6501e656:	pop    ebx
6501e657:	xor    eax,eax
6501e659:	ret    
6501e65a:	mov    eax,DWORD PTR [edx-0x4]
6501e65d:	cmp    al,bl
6501e65f:	je     0x6501e697
6501e661:	test   al,al
6501e663:	je     0x6501e654
6501e665:	cmp    ah,bl
6501e667:	je     0x6501e690
6501e669:	test   ah,ah
6501e66b:	je     0x6501e654
6501e66d:	shr    eax,0x10
6501e670:	cmp    al,bl
6501e672:	je     0x6501e689
6501e674:	test   al,al
6501e676:	je     0x6501e654
6501e678:	cmp    ah,bl
6501e67a:	je     0x6501e682
6501e67c:	test   ah,ah
6501e67e:	je     0x6501e654
6501e680:	jmp    0x6501e618
6501e682:	pop    esi
6501e683:	pop    edi
6501e684:	lea    eax,[edx-0x1]
6501e687:	pop    ebx
6501e688:	ret    
6501e689:	lea    eax,[edx-0x2]
6501e68c:	pop    esi
6501e68d:	pop    edi
6501e68e:	pop    ebx
6501e68f:	ret    
6501e690:	lea    eax,[edx-0x3]
6501e693:	pop    esi
6501e694:	pop    edi
6501e695:	pop    ebx
6501e696:	ret    
6501e697:	lea    eax,[edx-0x4]
6501e69a:	pop    esi
6501e69b:	pop    edi
6501e69c:	pop    ebx
6501e69d:	ret    
6501e69e:	int3   
6501e69f:	int3   
6501e6a0:	mov    eax,DWORD PTR [esp+0x4]
6501e6a4:	push   0x0
6501e6a6:	push   eax
6501e6a7:	call   DWORD PTR ds:0x6502d030
6501e6ad:	ret    0x4
6501e6b0:	push   ebp
6501e6b1:	mov    ebp,esp
6501e6b3:	push   0xfffffffe
6501e6b5:	push   0x65029d18
6501e6ba:	push   0x65013d00
6501e6bf:	mov    eax,fs:0x0
6501e6c5:	push   eax
6501e6c6:	sub    esp,0x18
6501e6c9:	mov    eax,ds:0x6502c09c
6501e6ce:	xor    DWORD PTR [ebp-0x8],eax
6501e6d1:	xor    eax,ebp
6501e6d3:	mov    DWORD PTR [ebp-0x1c],eax
6501e6d6:	push   ebx
6501e6d7:	push   esi
6501e6d8:	push   edi
6501e6d9:	push   eax
6501e6da:	lea    eax,[ebp-0x10]
6501e6dd:	mov    fs:0x0,eax
6501e6e3:	mov    DWORD PTR [ebp-0x18],esp
6501e6e6:	mov    esi,DWORD PTR [ebp+0x8]
6501e6e9:	test   esi,esi
6501e6eb:	je     0x6501e742
6501e6ed:	push   esi
6501e6ee:	call   DWORD PTR ds:0x65024054
6501e6f4:	mov    edi,eax
6501e6f6:	add    edi,0x1
6501e6f9:	mov    DWORD PTR [ebp-0x20],edi
6501e6fc:	push   0x0
6501e6fe:	push   0x0
6501e700:	push   edi
6501e701:	push   esi
6501e702:	push   0x0
6501e704:	push   0x0
6501e706:	call   DWORD PTR ds:0x65024024
6501e70c:	mov    esi,eax
6501e70e:	mov    DWORD PTR [ebp-0x28],esi
6501e711:	test   esi,esi
6501e713:	jne    0x6501e749
6501e715:	mov    esi,DWORD PTR ds:0x65024044
6501e71b:	call   esi
6501e71d:	test   eax,eax
6501e71f:	jg     0x6501e730
6501e721:	call   esi
6501e723:	push   eax
6501e724:	call   0x6501e6a0
6501e729:	xor    eax,eax
6501e72b:	jmp    0x6501e810
6501e730:	call   esi
6501e732:	and    eax,0xffff
6501e737:	or     eax,0x80070000
6501e73c:	push   eax
6501e73d:	call   0x6501e6a0
6501e742:	xor    eax,eax
6501e744:	jmp    0x6501e810
6501e749:	mov    DWORD PTR [ebp-0x4],0x0
6501e750:	lea    eax,[esi+esi*1]
6501e753:	cmp    esi,0x1000
6501e759:	jge    0x6501e773
6501e75b:	call   0x65012e60
6501e760:	mov    DWORD PTR [ebp-0x18],esp
6501e763:	mov    eax,esp
6501e765:	mov    ebx,eax
6501e767:	mov    DWORD PTR [ebp-0x24],ebx
6501e76a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e771:	jmp    0x6501e7a5
6501e773:	push   eax
6501e774:	call   0x65013654
6501e779:	add    esp,0x4
6501e77c:	mov    ebx,eax
6501e77e:	mov    DWORD PTR [ebp-0x24],ebx
6501e781:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e788:	jmp    0x6501e7a5
6501e78a:	mov    eax,0x1
6501e78f:	ret    
6501e790:	mov    esp,DWORD PTR [ebp-0x18]
6501e793:	xor    ebx,ebx
6501e795:	mov    DWORD PTR [ebp-0x24],ebx
6501e798:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6501e79f:	mov    edi,DWORD PTR [ebp-0x20]
6501e7a2:	mov    esi,DWORD PTR [ebp-0x28]
6501e7a5:	test   ebx,ebx
6501e7a7:	jne    0x6501e7b7
6501e7a9:	push   0x8007000e
6501e7ae:	call   0x6501e6a0
6501e7b3:	xor    eax,eax
6501e7b5:	jmp    0x6501e810
6501e7b7:	push   esi
6501e7b8:	push   ebx
6501e7b9:	push   edi
6501e7ba:	mov    ecx,DWORD PTR [ebp+0x8]
6501e7bd:	push   ecx
6501e7be:	push   0x0
6501e7c0:	push   0x0
6501e7c2:	call   DWORD PTR ds:0x65024024
6501e7c8:	test   eax,eax
6501e7ca:	jne    0x6501e7e6
6501e7cc:	cmp    esi,0x1000
6501e7d2:	jl     0x6501e715
6501e7d8:	push   ebx
6501e7d9:	call   0x65013577
6501e7de:	add    esp,0x4
6501e7e1:	jmp    0x6501e715
6501e7e6:	push   ebx
6501e7e7:	call   DWORD PTR ds:0x65024198
6501e7ed:	mov    edi,eax
6501e7ef:	cmp    esi,0x1000
6501e7f5:	jl     0x6501e800
6501e7f7:	push   ebx
6501e7f8:	call   0x65013577
6501e7fd:	add    esp,0x4
6501e800:	test   edi,edi
6501e802:	jne    0x6501e80e
6501e804:	push   0x8007000e
6501e809:	call   0x6501e6a0
6501e80e:	mov    eax,edi
6501e810:	lea    esp,[ebp-0x38]
6501e813:	mov    ecx,DWORD PTR [ebp-0x10]
6501e816:	mov    DWORD PTR fs:0x0,ecx
6501e81d:	pop    ecx
6501e81e:	pop    edi
6501e81f:	pop    esi
6501e820:	pop    ebx
6501e821:	mov    ecx,DWORD PTR [ebp-0x1c]
6501e824:	xor    ecx,ebp
6501e826:	call   0x6501275c
6501e82b:	mov    esp,ebp
6501e82d:	pop    ebp
6501e82e:	ret    0x4
6501e831:	int3   
6501e832:	int3   
6501e833:	int3   
6501e834:	int3   
6501e835:	int3   
6501e836:	int3   
6501e837:	int3   
6501e838:	int3   
6501e839:	int3   
6501e83a:	int3   
6501e83b:	int3   
6501e83c:	int3   
6501e83d:	int3   
6501e83e:	int3   
6501e83f:	int3   
6501e840:	push   esi
6501e841:	mov    esi,ecx
6501e843:	mov    eax,DWORD PTR [esi+0x8]
6501e846:	test   eax,eax
6501e848:	mov    DWORD PTR [esi],0x650264f8
6501e84e:	je     0x6501e858
6501e850:	mov    ecx,DWORD PTR [eax]
6501e852:	mov    edx,DWORD PTR [ecx+0x8]
6501e855:	push   eax
6501e856:	call   edx
6501e858:	cmp    DWORD PTR [esi+0xc],0x0
6501e85c:	je     0x6501e875
6501e85e:	call   DWORD PTR ds:0x65024104
6501e864:	test   eax,eax
6501e866:	je     0x6501e875
6501e868:	mov    ecx,DWORD PTR [esi+0xc]
6501e86b:	push   ecx
6501e86c:	push   0x0
6501e86e:	push   eax
6501e86f:	call   DWORD PTR ds:0x650240f8
6501e875:	pop    esi
6501e876:	ret    
6501e877:	int3   
6501e878:	int3   
6501e879:	int3   
6501e87a:	int3   
6501e87b:	int3   
6501e87c:	int3   
6501e87d:	int3   
6501e87e:	int3   
6501e87f:	int3   
6501e880:	sub    esp,0x10
6501e883:	mov    eax,DWORD PTR [esp+0x14]
6501e887:	mov    ecx,DWORD PTR [esp+0x18]
6501e88b:	push   0x65029d34
6501e890:	lea    edx,[esp+0x4]
6501e894:	push   edx
6501e895:	mov    DWORD PTR [esp+0x8],0x650264f8
6501e89d:	mov    DWORD PTR [esp+0xc],eax
6501e8a1:	mov    DWORD PTR [esp+0x10],ecx
6501e8a5:	mov    DWORD PTR [esp+0x14],0x0
6501e8ad:	call   0x65012306
6501e8b2:	int3   
6501e8b3:	int3   
6501e8b4:	int3   
6501e8b5:	int3   
6501e8b6:	int3   
6501e8b7:	int3   
6501e8b8:	int3   
6501e8b9:	int3   
6501e8ba:	int3   
6501e8bb:	int3   
6501e8bc:	int3   
6501e8bd:	int3   
6501e8be:	int3   
6501e8bf:	int3   
6501e8c0:	mov    eax,DWORD PTR [esp+0x4]
6501e8c4:	push   esi
6501e8c5:	mov    esi,ecx
6501e8c7:	mov    DWORD PTR [esi],0x650264f8
6501e8cd:	mov    ecx,DWORD PTR [eax+0x4]
6501e8d0:	mov    DWORD PTR [esi+0x4],ecx
6501e8d3:	mov    edx,DWORD PTR [eax+0x8]
6501e8d6:	mov    eax,edx
6501e8d8:	test   eax,eax
6501e8da:	mov    DWORD PTR [esi+0x8],edx
6501e8dd:	mov    DWORD PTR [esi+0xc],0x0
6501e8e4:	je     0x6501e8ee
6501e8e6:	mov    ecx,DWORD PTR [eax]
6501e8e8:	mov    edx,DWORD PTR [ecx+0x4]
6501e8eb:	push   eax
6501e8ec:	call   edx
6501e8ee:	mov    eax,esi
6501e8f0:	pop    esi
6501e8f1:	ret    0x4
6501e8f4:	int3   
6501e8f5:	int3   
6501e8f6:	int3   
6501e8f7:	int3   
6501e8f8:	int3   
6501e8f9:	int3   
6501e8fa:	int3   
6501e8fb:	int3   
6501e8fc:	int3   
6501e8fd:	int3   
6501e8fe:	int3   
6501e8ff:	int3   
6501e900:	push   esi
6501e901:	mov    esi,ecx
6501e903:	mov    eax,DWORD PTR [esi+0x8]
6501e906:	test   eax,eax
6501e908:	mov    DWORD PTR [esi],0x650264f8
6501e90e:	je     0x6501e918
6501e910:	mov    ecx,DWORD PTR [eax]
6501e912:	mov    edx,DWORD PTR [ecx+0x8]
6501e915:	push   eax
6501e916:	call   edx
6501e918:	cmp    DWORD PTR [esi+0xc],0x0
6501e91c:	je     0x6501e935
6501e91e:	call   DWORD PTR ds:0x65024104
6501e924:	test   eax,eax
6501e926:	je     0x6501e935
6501e928:	mov    ecx,DWORD PTR [esi+0xc]
6501e92b:	push   ecx
6501e92c:	push   0x0
6501e92e:	push   eax
6501e92f:	call   DWORD PTR ds:0x650240f8
6501e935:	test   BYTE PTR [esp+0x8],0x1
6501e93a:	je     0x6501e945
6501e93c:	push   esi
6501e93d:	call   0x65011f02
6501e942:	add    esp,0x4
6501e945:	mov    eax,esi
6501e947:	pop    esi
6501e948:	ret    0x4
6501e94b:	int3   
6501e94c:	jmp    DWORD PTR ds:0x65024118
6501e952:	push   ebp
6501e953:	mov    ebp,esp
6501e955:	sub    esp,0xc
6501e958:	mov    eax,ds:0x6502c09c
6501e95d:	xor    eax,ebp
6501e95f:	mov    DWORD PTR [ebp-0x4],eax
6501e962:	push   ebx
6501e963:	push   esi
6501e964:	push   edi
6501e965:	mov    edi,DWORD PTR [ebp+0x8]
6501e968:	xor    ebx,ebx
6501e96a:	cmp    edi,ebx
6501e96c:	jne    0x6501e98a
6501e96e:	call   0x650143a0
6501e973:	push   0x16
6501e975:	pop    esi
6501e976:	push   ebx
6501e977:	push   ebx
6501e978:	push   ebx
6501e979:	push   ebx
6501e97a:	push   ebx
6501e97b:	mov    DWORD PTR [eax],esi
6501e97d:	call   0x6501224f
6501e982:	add    esp,0x14
6501e985:	jmp    0x6501eabf
6501e98a:	push   DWORD PTR [ebp+0xc]
6501e98d:	push   edi
6501e98e:	call   0x6501e41c
6501e993:	cmp    eax,DWORD PTR [ebp+0xc]
6501e996:	pop    ecx
6501e997:	pop    ecx
6501e998:	jb     0x6501e99e
6501e99a:	mov    BYTE PTR [edi],bl
6501e99c:	jmp    0x6501e96e
6501e99e:	mov    edx,DWORD PTR [ebp+0x10]
6501e9a1:	mov    eax,DWORD PTR [edx]
6501e9a3:	mov    ecx,DWORD PTR [eax+0x14]
6501e9a6:	cmp    ecx,ebx
6501e9a8:	jne    0x6501e9ca
6501e9aa:	cmp    BYTE PTR [edi],bl
6501e9ac:	mov    ecx,edi
6501e9ae:	je     0x6501e9c3
6501e9b0:	mov    al,BYTE PTR [ecx]
6501e9b2:	cmp    al,0x41
6501e9b4:	jl     0x6501e9be
6501e9b6:	cmp    al,0x5a
6501e9b8:	jg     0x6501e9be
6501e9ba:	add    al,0x20
6501e9bc:	mov    BYTE PTR [ecx],al
6501e9be:	inc    ecx
6501e9bf:	cmp    BYTE PTR [ecx],bl
6501e9c1:	jne    0x6501e9b0
6501e9c3:	xor    eax,eax
6501e9c5:	jmp    0x6501eac1
6501e9ca:	push   0x1
6501e9cc:	push   DWORD PTR [eax+0x4]
6501e9cf:	mov    esi,0x100
6501e9d4:	push   ebx
6501e9d5:	push   ebx
6501e9d6:	push   0xffffffff
6501e9d8:	push   edi
6501e9d9:	push   esi
6501e9da:	push   ecx
6501e9db:	push   edx
6501e9dc:	call   0x65019a9b
6501e9e1:	mov    ecx,eax
6501e9e3:	add    esp,0x24
6501e9e6:	cmp    ecx,ebx
6501e9e8:	mov    DWORD PTR [ebp-0xc],ecx
6501e9eb:	jne    0x6501ea04
6501e9ed:	call   0x650143a0
6501e9f2:	mov    DWORD PTR [eax],0x2a
6501e9f8:	call   0x650143a0
6501e9fd:	mov    eax,DWORD PTR [eax]
6501e9ff:	jmp    0x6501eac1
6501ea04:	cmp    DWORD PTR [ebp+0xc],ecx
6501ea07:	jae    0x6501ea17
6501ea09:	mov    BYTE PTR [edi],bl
6501ea0b:	call   0x650143a0
6501ea10:	push   0x22
6501ea12:	jmp    0x6501e975
6501ea17:	cmp    ecx,ebx
6501ea19:	jle    0x6501ea60
6501ea1b:	push   0xffffffe0
6501ea1d:	xor    edx,edx
6501ea1f:	pop    eax
6501ea20:	div    ecx
6501ea22:	cmp    eax,0x1
6501ea25:	jb     0x6501ea60
6501ea27:	lea    eax,[ecx+0x8]
6501ea2a:	cmp    eax,0x400
6501ea2f:	ja     0x6501ea44
6501ea31:	call   0x65012e60
6501ea36:	mov    eax,esp
6501ea38:	cmp    eax,ebx
6501ea3a:	je     0x6501ea58
6501ea3c:	mov    DWORD PTR [eax],0xcccc
6501ea42:	jmp    0x6501ea55
6501ea44:	push   eax
6501ea45:	call   0x65013654
6501ea4a:	cmp    eax,ebx
6501ea4c:	pop    ecx
6501ea4d:	je     0x6501ea58
6501ea4f:	mov    DWORD PTR [eax],0xdddd
6501ea55:	add    eax,0x8
6501ea58:	mov    ecx,DWORD PTR [ebp-0xc]
6501ea5b:	mov    DWORD PTR [ebp-0x8],eax
6501ea5e:	jmp    0x6501ea63
6501ea60:	mov    DWORD PTR [ebp-0x8],ebx
6501ea63:	cmp    DWORD PTR [ebp-0x8],ebx
6501ea66:	jne    0x6501ea75
6501ea68:	call   0x650143a0
6501ea6d:	mov    DWORD PTR [eax],0xc
6501ea73:	jmp    0x6501e9f8
6501ea75:	mov    edx,DWORD PTR [ebp+0x10]
6501ea78:	mov    eax,DWORD PTR [edx]
6501ea7a:	push   0x1
6501ea7c:	push   DWORD PTR [eax+0x4]
6501ea7f:	push   ecx
6501ea80:	push   DWORD PTR [ebp-0x8]
6501ea83:	push   0xffffffff
6501ea85:	push   edi
6501ea86:	push   esi
6501ea87:	push   DWORD PTR [eax+0x14]
6501ea8a:	push   edx
6501ea8b:	call   0x65019a9b
6501ea90:	add    esp,0x24
6501ea93:	test   eax,eax
6501ea95:	je     0x6501eaaa
6501ea97:	push   DWORD PTR [ebp-0x8]
6501ea9a:	push   DWORD PTR [ebp+0xc]
6501ea9d:	push   edi
6501ea9e:	call   0x65013f94
6501eaa3:	add    esp,0xc
6501eaa6:	mov    esi,eax
6501eaa8:	jmp    0x6501eab6
6501eaaa:	call   0x650143a0
6501eaaf:	push   0x2a
6501eab1:	pop    ecx
6501eab2:	mov    DWORD PTR [eax],ecx
6501eab4:	mov    esi,ecx
6501eab6:	push   DWORD PTR [ebp-0x8]
6501eab9:	call   0x65012bf2
6501eabe:	pop    ecx
6501eabf:	mov    eax,esi
6501eac1:	lea    esp,[ebp-0x18]
6501eac4:	pop    edi
6501eac5:	pop    esi
6501eac6:	pop    ebx
6501eac7:	mov    ecx,DWORD PTR [ebp-0x4]
6501eaca:	xor    ecx,ebp
6501eacc:	call   0x6501275c
6501ead1:	leave  
6501ead2:	ret    
6501ead3:	push   ebp
6501ead4:	mov    ebp,esp
6501ead6:	sub    esp,0x10
6501ead9:	push   DWORD PTR [ebp+0x10]
6501eadc:	lea    ecx,[ebp-0x10]
6501eadf:	call   0x650128ff
6501eae4:	lea    eax,[ebp-0x10]
6501eae7:	push   eax
6501eae8:	push   DWORD PTR [ebp+0xc]
6501eaeb:	push   DWORD PTR [ebp+0x8]
6501eaee:	call   0x6501e952
6501eaf3:	add    esp,0xc
6501eaf6:	cmp    BYTE PTR [ebp-0x4],0x0
6501eafa:	je     0x6501eb03
6501eafc:	mov    ecx,DWORD PTR [ebp-0x8]
6501eaff:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501eb03:	leave  
6501eb04:	ret    
6501eb05:	push   ebx
6501eb06:	xor    ebx,ebx
6501eb08:	cmp    DWORD PTR ds:0x6502d954,ebx
6501eb0e:	jne    0x6501eb52
6501eb10:	mov    eax,DWORD PTR [esp+0x8]
6501eb14:	cmp    eax,ebx
6501eb16:	jne    0x6501eb34
6501eb18:	call   0x650143a0
6501eb1d:	push   ebx
6501eb1e:	push   ebx
6501eb1f:	push   ebx
6501eb20:	push   ebx
6501eb21:	push   ebx
6501eb22:	mov    DWORD PTR [eax],0x16
6501eb28:	call   0x6501224f
6501eb2d:	add    esp,0x14
6501eb30:	xor    eax,eax
6501eb32:	pop    ebx
6501eb33:	ret    
6501eb34:	cmp    BYTE PTR [eax],bl
6501eb36:	mov    edx,eax
6501eb38:	je     0x6501eb65
6501eb3a:	mov    cl,BYTE PTR [edx]
6501eb3c:	cmp    cl,0x41
6501eb3f:	jl     0x6501eb4b
6501eb41:	cmp    cl,0x5a
6501eb44:	jg     0x6501eb4b
6501eb46:	add    cl,0x20
6501eb49:	mov    BYTE PTR [edx],cl
6501eb4b:	inc    edx
6501eb4c:	cmp    BYTE PTR [edx],bl
6501eb4e:	jne    0x6501eb3a
6501eb50:	pop    ebx
6501eb51:	ret    
6501eb52:	push   ebx
6501eb53:	push   0xffffffff
6501eb55:	push   DWORD PTR [esp+0x10]
6501eb59:	call   0x6501ead3
6501eb5e:	mov    eax,DWORD PTR [esp+0x14]
6501eb62:	add    esp,0xc
6501eb65:	pop    ebx
6501eb66:	ret    
6501eb67:	ret    
6501eb68:	mov    eax,0x6501f673
6501eb6d:	mov    ds:0x6502cb44,eax
6501eb72:	mov    DWORD PTR ds:0x6502cb48,0x6501ed6f
6501eb7c:	mov    DWORD PTR ds:0x6502cb4c,0x6501ed2d
6501eb86:	mov    DWORD PTR ds:0x6502cb50,0x6501ed61
6501eb90:	mov    DWORD PTR ds:0x6502cb54,0x6501ecd7
6501eb9a:	mov    ds:0x6502cb58,eax
6501eb9f:	mov    DWORD PTR ds:0x6502cb5c,0x6501f5ed
6501eba9:	mov    DWORD PTR ds:0x6502cb60,0x6501eced
6501ebb3:	mov    DWORD PTR ds:0x6502cb64,0x6501ec57
6501ebbd:	mov    DWORD PTR ds:0x6502cb68,0x6501ebe6
6501ebc7:	ret    
6501ebc8:	call   0x6501eb68
6501ebcd:	call   0x6501f6f9
6501ebd2:	cmp    DWORD PTR [esp+0x4],0x0
6501ebd7:	mov    ds:0x6502e054,eax
6501ebdc:	je     0x6501ebe3
6501ebde:	call   0x6501f694
6501ebe3:	fnclex 
6501ebe5:	ret    
6501ebe6:	push   ebp
6501ebe7:	mov    ebp,esp
6501ebe9:	sub    esp,0x10
6501ebec:	push   esi
6501ebed:	push   DWORD PTR [ebp+0xc]
6501ebf0:	lea    ecx,[ebp-0x10]
6501ebf3:	call   0x650128ff
6501ebf8:	mov    esi,DWORD PTR [ebp+0x8]
6501ebfb:	movsx  eax,BYTE PTR [esi]
6501ebfe:	push   eax
6501ebff:	call   0x65013550
6501ec04:	cmp    eax,0x65
6501ec07:	jmp    0x6501ec15
6501ec09:	inc    esi
6501ec0a:	movzx  eax,BYTE PTR [esi]
6501ec0d:	push   eax
6501ec0e:	call   0x65013319
6501ec13:	test   eax,eax
6501ec15:	pop    ecx
6501ec16:	jne    0x6501ec09
6501ec18:	movsx  eax,BYTE PTR [esi]
6501ec1b:	push   eax
6501ec1c:	call   0x65013550
6501ec21:	cmp    eax,0x78
6501ec24:	pop    ecx
6501ec25:	jne    0x6501ec29
6501ec27:	inc    esi
6501ec28:	inc    esi
6501ec29:	mov    ecx,DWORD PTR [ebp-0x10]
6501ec2c:	mov    ecx,DWORD PTR [ecx+0xbc]
6501ec32:	mov    ecx,DWORD PTR [ecx]
6501ec34:	mov    al,BYTE PTR [esi]
6501ec36:	mov    cl,BYTE PTR [ecx]
6501ec38:	mov    BYTE PTR [esi],cl
6501ec3a:	inc    esi
6501ec3b:	mov    cl,BYTE PTR [esi]
6501ec3d:	mov    BYTE PTR [esi],al
6501ec3f:	mov    al,cl
6501ec41:	mov    cl,BYTE PTR [esi]
6501ec43:	inc    esi
6501ec44:	test   cl,cl
6501ec46:	jne    0x6501ec3b
6501ec48:	cmp    BYTE PTR [ebp-0x4],cl
6501ec4b:	pop    esi
6501ec4c:	je     0x6501ec55
6501ec4e:	mov    eax,DWORD PTR [ebp-0x8]
6501ec51:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ec55:	leave  
6501ec56:	ret    
6501ec57:	push   ebp
6501ec58:	mov    ebp,esp
6501ec5a:	sub    esp,0x10
6501ec5d:	push   esi
6501ec5e:	push   DWORD PTR [ebp+0xc]
6501ec61:	lea    ecx,[ebp-0x10]
6501ec64:	call   0x650128ff
6501ec69:	mov    eax,DWORD PTR [ebp+0x8]
6501ec6c:	mov    cl,BYTE PTR [eax]
6501ec6e:	test   cl,cl
6501ec70:	mov    esi,DWORD PTR [ebp-0x10]
6501ec73:	je     0x6501ec8a
6501ec75:	mov    edx,DWORD PTR [esi+0xbc]
6501ec7b:	mov    edx,DWORD PTR [edx]
6501ec7d:	mov    dl,BYTE PTR [edx]
6501ec7f:	cmp    cl,dl
6501ec81:	je     0x6501ec8a
6501ec83:	inc    eax
6501ec84:	mov    cl,BYTE PTR [eax]
6501ec86:	test   cl,cl
6501ec88:	jne    0x6501ec7f
6501ec8a:	mov    cl,BYTE PTR [eax]
6501ec8c:	inc    eax
6501ec8d:	test   cl,cl
6501ec8f:	je     0x6501ecc7
6501ec91:	jmp    0x6501ec9e
6501ec93:	cmp    cl,0x65
6501ec96:	je     0x6501eca4
6501ec98:	cmp    cl,0x45
6501ec9b:	je     0x6501eca4
6501ec9d:	inc    eax
6501ec9e:	mov    cl,BYTE PTR [eax]
6501eca0:	test   cl,cl
6501eca2:	jne    0x6501ec93
6501eca4:	mov    edx,eax
6501eca6:	dec    eax
6501eca7:	cmp    BYTE PTR [eax],0x30
6501ecaa:	je     0x6501eca6
6501ecac:	mov    ecx,DWORD PTR [esi+0xbc]
6501ecb2:	mov    ecx,DWORD PTR [ecx]
6501ecb4:	push   ebx
6501ecb5:	mov    bl,BYTE PTR [eax]
6501ecb7:	cmp    bl,BYTE PTR [ecx]
6501ecb9:	pop    ebx
6501ecba:	jne    0x6501ecbd
6501ecbc:	dec    eax
6501ecbd:	mov    cl,BYTE PTR [edx]
6501ecbf:	inc    eax
6501ecc0:	inc    edx
6501ecc1:	test   cl,cl
6501ecc3:	mov    BYTE PTR [eax],cl
6501ecc5:	jne    0x6501ecbd
6501ecc7:	cmp    BYTE PTR [ebp-0x4],0x0
6501eccb:	pop    esi
6501eccc:	je     0x6501ecd5
6501ecce:	mov    eax,DWORD PTR [ebp-0x8]
6501ecd1:	and    DWORD PTR [eax+0x70],0xfffffffd
6501ecd5:	leave  
6501ecd6:	ret    
6501ecd7:	fldz   
6501ecd9:	mov    eax,DWORD PTR [esp+0x4]
6501ecdd:	fcomp  QWORD PTR [eax]
6501ecdf:	fnstsw ax
6501ece1:	test   ah,0x41
6501ece4:	jp     0x6501ecea
6501ece6:	xor    eax,eax
6501ece8:	inc    eax
6501ece9:	ret    
6501ecea:	xor    eax,eax
6501ecec:	ret    
6501eced:	push   ebp
6501ecee:	mov    ebp,esp
6501ecf0:	push   ecx
6501ecf1:	push   ecx
6501ecf2:	cmp    DWORD PTR [ebp+0x8],0x0
6501ecf6:	push   DWORD PTR [ebp+0x14]
6501ecf9:	push   DWORD PTR [ebp+0x10]
6501ecfc:	je     0x6501ed17
6501ecfe:	lea    eax,[ebp-0x8]
6501ed01:	push   eax
6501ed02:	call   0x6501f75d
6501ed07:	mov    ecx,DWORD PTR [ebp-0x8]
6501ed0a:	mov    eax,DWORD PTR [ebp+0xc]
6501ed0d:	mov    DWORD PTR [eax],ecx
6501ed0f:	mov    ecx,DWORD PTR [ebp-0x4]
6501ed12:	mov    DWORD PTR [eax+0x4],ecx
6501ed15:	jmp    0x6501ed28
6501ed17:	lea    eax,[ebp+0x8]
6501ed1a:	push   eax
6501ed1b:	call   0x6501f803
6501ed20:	mov    eax,DWORD PTR [ebp+0xc]
6501ed23:	mov    ecx,DWORD PTR [ebp+0x8]
6501ed26:	mov    DWORD PTR [eax],ecx
6501ed28:	add    esp,0xc
6501ed2b:	leave  
6501ed2c:	ret    
6501ed2d:	push   0x0
6501ed2f:	push   DWORD PTR [esp+0x10]
6501ed33:	push   DWORD PTR [esp+0x10]
6501ed37:	push   DWORD PTR [esp+0x10]
6501ed3b:	call   0x6501eced
6501ed40:	add    esp,0x10
6501ed43:	ret    
6501ed44:	test   edi,edi
6501ed46:	push   esi
6501ed47:	mov    esi,eax
6501ed49:	je     0x6501ed5f
6501ed4b:	push   esi
6501ed4c:	call   0x65013ea0
6501ed51:	inc    eax
6501ed52:	push   eax
6501ed53:	push   esi
6501ed54:	add    esi,edi
6501ed56:	push   esi
6501ed57:	call   0x65013720
6501ed5c:	add    esp,0x10
6501ed5f:	pop    esi
6501ed60:	ret    
6501ed61:	push   0x0
6501ed63:	push   DWORD PTR [esp+0x8]
6501ed67:	call   0x6501ebe6
6501ed6c:	pop    ecx
6501ed6d:	pop    ecx
6501ed6e:	ret    
6501ed6f:	push   0x0
6501ed71:	push   DWORD PTR [esp+0x8]
6501ed75:	call   0x6501ec57
6501ed7a:	pop    ecx
6501ed7b:	pop    ecx
6501ed7c:	ret    
6501ed7d:	push   ebp
6501ed7e:	mov    ebp,esp
6501ed80:	sub    esp,0x10
6501ed83:	push   ebx
6501ed84:	push   esi
6501ed85:	push   edi
6501ed86:	push   DWORD PTR [ebp+0x1c]
6501ed89:	lea    ecx,[ebp-0x10]
6501ed8c:	mov    ebx,eax
6501ed8e:	call   0x650128ff
6501ed93:	xor    esi,esi
6501ed95:	cmp    ebx,esi
6501ed97:	jne    0x6501edc4
6501ed99:	call   0x650143a0
6501ed9e:	push   0x16
6501eda0:	pop    edi
6501eda1:	push   esi
6501eda2:	push   esi
6501eda3:	push   esi
6501eda4:	push   esi
6501eda5:	push   esi
6501eda6:	mov    DWORD PTR [eax],edi
6501eda8:	call   0x6501224f
6501edad:	add    esp,0x14
6501edb0:	cmp    BYTE PTR [ebp-0x4],0x0
6501edb4:	je     0x6501edbd
6501edb6:	mov    eax,DWORD PTR [ebp-0x8]
6501edb9:	and    DWORD PTR [eax+0x70],0xfffffffd
6501edbd:	mov    eax,edi
6501edbf:	jmp    0x6501eee5
6501edc4:	cmp    DWORD PTR [ebp+0x8],esi
6501edc7:	jbe    0x6501ed99
6501edc9:	cmp    DWORD PTR [ebp+0xc],esi
6501edcc:	jle    0x6501edd3
6501edce:	mov    eax,DWORD PTR [ebp+0xc]
6501edd1:	jmp    0x6501edd5
6501edd3:	xor    eax,eax
6501edd5:	add    eax,0x9
6501edd8:	cmp    DWORD PTR [ebp+0x8],eax
6501eddb:	ja     0x6501ede6
6501eddd:	call   0x650143a0
6501ede2:	push   0x22
6501ede4:	jmp    0x6501eda0
6501ede6:	cmp    BYTE PTR [ebp+0x18],0x0
6501edea:	je     0x6501ee0a
6501edec:	mov    edx,DWORD PTR [ebp+0x14]
6501edef:	xor    eax,eax
6501edf1:	cmp    DWORD PTR [ebp+0xc],esi
6501edf4:	setg   al
6501edf7:	xor    ecx,ecx
6501edf9:	cmp    DWORD PTR [edx],0x2d
6501edfc:	sete   cl
6501edff:	mov    edi,eax
6501ee01:	add    ecx,ebx
6501ee03:	mov    eax,ecx
6501ee05:	call   0x6501ed44
6501ee0a:	mov    edi,DWORD PTR [ebp+0x14]
6501ee0d:	cmp    DWORD PTR [edi],0x2d
6501ee10:	mov    esi,ebx
6501ee12:	jne    0x6501ee1a
6501ee14:	mov    BYTE PTR [ebx],0x2d
6501ee17:	lea    esi,[ebx+0x1]
6501ee1a:	cmp    DWORD PTR [ebp+0xc],0x0
6501ee1e:	jle    0x6501ee38
6501ee20:	lea    eax,[esi+0x1]
6501ee23:	mov    cl,BYTE PTR [eax]
6501ee25:	mov    BYTE PTR [esi],cl
6501ee27:	mov    esi,eax
6501ee29:	mov    eax,DWORD PTR [ebp-0x10]
6501ee2c:	mov    eax,DWORD PTR [eax+0xbc]
6501ee32:	mov    eax,DWORD PTR [eax]
6501ee34:	mov    al,BYTE PTR [eax]
6501ee36:	mov    BYTE PTR [esi],al
6501ee38:	xor    eax,eax
6501ee3a:	cmp    BYTE PTR [ebp+0x18],al
6501ee3d:	sete   al
6501ee40:	add    eax,DWORD PTR [ebp+0xc]
6501ee43:	add    esi,eax
6501ee45:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6501ee49:	jne    0x6501ee50
6501ee4b:	or     ebx,0xffffffff
6501ee4e:	jmp    0x6501ee55
6501ee50:	sub    ebx,esi
6501ee52:	add    ebx,DWORD PTR [ebp+0x8]
6501ee55:	push   0x65026508
6501ee5a:	push   ebx
6501ee5b:	push   esi
6501ee5c:	call   0x65013f94
6501ee61:	add    esp,0xc
6501ee64:	xor    ebx,ebx
6501ee66:	test   eax,eax
6501ee68:	je     0x6501ee77
6501ee6a:	push   ebx
6501ee6b:	push   ebx
6501ee6c:	push   ebx
6501ee6d:	push   ebx
6501ee6e:	push   ebx
6501ee6f:	call   0x65012153
6501ee74:	add    esp,0x14
6501ee77:	cmp    DWORD PTR [ebp+0x10],ebx
6501ee7a:	lea    ecx,[esi+0x2]
6501ee7d:	je     0x6501ee82
6501ee7f:	mov    BYTE PTR [esi],0x45
6501ee82:	mov    eax,DWORD PTR [edi+0xc]
6501ee85:	inc    esi
6501ee86:	cmp    BYTE PTR [eax],0x30
6501ee89:	je     0x6501eeb9
6501ee8b:	mov    eax,DWORD PTR [edi+0x4]
6501ee8e:	dec    eax
6501ee8f:	jns    0x6501ee96
6501ee91:	neg    eax
6501ee93:	mov    BYTE PTR [esi],0x2d
6501ee96:	inc    esi
6501ee97:	cmp    eax,0x64
6501ee9a:	jl     0x6501eea6
6501ee9c:	cdq    
6501ee9d:	push   0x64
6501ee9f:	pop    edi
6501eea0:	idiv   edi
6501eea2:	add    BYTE PTR [esi],al
6501eea4:	mov    eax,edx
6501eea6:	inc    esi
6501eea7:	cmp    eax,0xa
6501eeaa:	jl     0x6501eeb6
6501eeac:	cdq    
6501eead:	push   0xa
6501eeaf:	pop    edi
6501eeb0:	idiv   edi
6501eeb2:	add    BYTE PTR [esi],al
6501eeb4:	mov    eax,edx
6501eeb6:	add    BYTE PTR [esi+0x1],al
6501eeb9:	test   BYTE PTR ds:0x6502e058,0x1
6501eec0:	je     0x6501eed6
6501eec2:	cmp    BYTE PTR [ecx],0x30
6501eec5:	jne    0x6501eed6
6501eec7:	push   0x3
6501eec9:	lea    eax,[ecx+0x1]
6501eecc:	push   eax
6501eecd:	push   ecx
6501eece:	call   0x65013720
6501eed3:	add    esp,0xc
6501eed6:	cmp    BYTE PTR [ebp-0x4],0x0
6501eeda:	je     0x6501eee3
6501eedc:	mov    eax,DWORD PTR [ebp-0x8]
6501eedf:	and    DWORD PTR [eax+0x70],0xfffffffd
6501eee3:	xor    eax,eax
6501eee5:	pop    edi
6501eee6:	pop    esi
6501eee7:	pop    ebx
6501eee8:	leave  
6501eee9:	ret    
6501eeea:	push   ebp
6501eeeb:	mov    ebp,esp
6501eeed:	sub    esp,0x2c
6501eef0:	mov    eax,ds:0x6502c09c
6501eef5:	xor    eax,ebp
6501eef7:	mov    DWORD PTR [ebp-0x4],eax
6501eefa:	mov    eax,DWORD PTR [ebp+0x8]
6501eefd:	push   ebx
6501eefe:	push   esi
6501eeff:	push   edi
6501ef00:	mov    edi,DWORD PTR [ebp+0xc]
6501ef03:	push   0x16
6501ef05:	pop    esi
6501ef06:	push   esi
6501ef07:	lea    ecx,[ebp-0x1c]
6501ef0a:	push   ecx
6501ef0b:	lea    ecx,[ebp-0x2c]
6501ef0e:	push   ecx
6501ef0f:	push   DWORD PTR [eax+0x4]
6501ef12:	push   DWORD PTR [eax]
6501ef14:	call   0x6501fa21
6501ef19:	xor    ebx,ebx
6501ef1b:	add    esp,0x14
6501ef1e:	cmp    edi,ebx
6501ef20:	jne    0x6501ef3a
6501ef22:	call   0x650143a0
6501ef27:	push   ebx
6501ef28:	push   ebx
6501ef29:	push   ebx
6501ef2a:	push   ebx
6501ef2b:	push   ebx
6501ef2c:	mov    DWORD PTR [eax],esi
6501ef2e:	call   0x6501224f
6501ef33:	add    esp,0x14
6501ef36:	mov    eax,esi
6501ef38:	jmp    0x6501efa9
6501ef3a:	mov    eax,DWORD PTR [ebp+0x10]
6501ef3d:	cmp    eax,ebx
6501ef3f:	jbe    0x6501ef22
6501ef41:	cmp    eax,0xffffffff
6501ef44:	mov    esi,DWORD PTR [ebp+0x14]
6501ef47:	jne    0x6501ef4e
6501ef49:	or     eax,0xffffffff
6501ef4c:	jmp    0x6501ef62
6501ef4e:	xor    ecx,ecx
6501ef50:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501ef54:	sete   cl
6501ef57:	sub    eax,ecx
6501ef59:	xor    ecx,ecx
6501ef5b:	cmp    esi,ebx
6501ef5d:	setg   cl
6501ef60:	sub    eax,ecx
6501ef62:	lea    ecx,[ebp-0x2c]
6501ef65:	push   ecx
6501ef66:	lea    ecx,[esi+0x1]
6501ef69:	push   ecx
6501ef6a:	push   eax
6501ef6b:	xor    eax,eax
6501ef6d:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501ef71:	sete   al
6501ef74:	xor    ecx,ecx
6501ef76:	cmp    esi,ebx
6501ef78:	setg   cl
6501ef7b:	add    eax,edi
6501ef7d:	add    ecx,eax
6501ef7f:	push   ecx
6501ef80:	call   0x6501f8a9
6501ef85:	add    esp,0x10
6501ef88:	cmp    eax,ebx
6501ef8a:	je     0x6501ef90
6501ef8c:	mov    BYTE PTR [edi],bl
6501ef8e:	jmp    0x6501efa9
6501ef90:	push   DWORD PTR [ebp+0x1c]
6501ef93:	lea    eax,[ebp-0x2c]
6501ef96:	push   ebx
6501ef97:	push   eax
6501ef98:	push   DWORD PTR [ebp+0x18]
6501ef9b:	mov    eax,edi
6501ef9d:	push   esi
6501ef9e:	push   DWORD PTR [ebp+0x10]
6501efa1:	call   0x6501ed7d
6501efa6:	add    esp,0x18
6501efa9:	mov    ecx,DWORD PTR [ebp-0x4]
6501efac:	pop    edi
6501efad:	pop    esi
6501efae:	xor    ecx,ebp
6501efb0:	pop    ebx
6501efb1:	call   0x6501275c
6501efb6:	leave  
6501efb7:	ret    
6501efb8:	push   ebp
6501efb9:	mov    ebp,esp
6501efbb:	push   0x0
6501efbd:	push   DWORD PTR [ebp+0x18]
6501efc0:	push   DWORD PTR [ebp+0x14]
6501efc3:	push   DWORD PTR [ebp+0x10]
6501efc6:	push   DWORD PTR [ebp+0xc]
6501efc9:	push   DWORD PTR [ebp+0x8]
6501efcc:	call   0x6501eeea
6501efd1:	add    esp,0x18
6501efd4:	pop    ebp
6501efd5:	ret    
6501efd6:	push   ebp
6501efd7:	mov    ebp,esp
6501efd9:	sub    esp,0x24
6501efdc:	push   esi
6501efdd:	push   edi
6501efde:	push   DWORD PTR [ebp+0x1c]
6501efe1:	lea    ecx,[ebp-0x24]
6501efe4:	mov    DWORD PTR [ebp-0x14],0x3ff
6501efeb:	xor    edi,edi
6501efed:	mov    DWORD PTR [ebp-0x4],0x30
6501eff4:	call   0x650128ff
6501eff9:	cmp    DWORD PTR [ebp+0x14],edi
6501effc:	jge    0x6501f001
6501effe:	mov    DWORD PTR [ebp+0x14],edi
6501f001:	mov    esi,DWORD PTR [ebp+0xc]
6501f004:	cmp    esi,edi
6501f006:	jne    0x6501f033
6501f008:	call   0x650143a0
6501f00d:	push   0x16
6501f00f:	pop    esi
6501f010:	push   edi
6501f011:	push   edi
6501f012:	push   edi
6501f013:	push   edi
6501f014:	push   edi
6501f015:	mov    DWORD PTR [eax],esi
6501f017:	call   0x6501224f
6501f01c:	add    esp,0x14
6501f01f:	cmp    BYTE PTR [ebp-0x18],0x0
6501f023:	je     0x6501f02c
6501f025:	mov    eax,DWORD PTR [ebp-0x1c]
6501f028:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f02c:	mov    eax,esi
6501f02e:	jmp    0x6501f343
6501f033:	cmp    DWORD PTR [ebp+0x10],edi
6501f036:	jbe    0x6501f008
6501f038:	mov    eax,DWORD PTR [ebp+0x14]
6501f03b:	add    eax,0xb
6501f03e:	cmp    DWORD PTR [ebp+0x10],eax
6501f041:	mov    BYTE PTR [esi],0x0
6501f044:	ja     0x6501f04f
6501f046:	call   0x650143a0
6501f04b:	push   0x22
6501f04d:	jmp    0x6501f00f
6501f04f:	mov    edi,DWORD PTR [ebp+0x8]
6501f052:	mov    eax,DWORD PTR [edi]
6501f054:	mov    DWORD PTR [ebp-0xc],eax
6501f057:	mov    eax,DWORD PTR [edi+0x4]
6501f05a:	mov    ecx,eax
6501f05c:	shr    ecx,0x14
6501f05f:	mov    edx,0x7ff
6501f064:	push   ebx
6501f065:	and    ecx,edx
6501f067:	xor    ebx,ebx
6501f069:	cmp    ecx,edx
6501f06b:	jne    0x6501f101
6501f071:	test   ebx,ebx
6501f073:	jne    0x6501f101
6501f079:	mov    eax,DWORD PTR [ebp+0x10]
6501f07c:	cmp    eax,0xffffffff
6501f07f:	jne    0x6501f085
6501f081:	or     eax,eax
6501f083:	jmp    0x6501f088
6501f085:	add    eax,0xfffffffe
6501f088:	push   0x0
6501f08a:	push   DWORD PTR [ebp+0x14]
6501f08d:	lea    ebx,[esi+0x2]
6501f090:	push   eax
6501f091:	push   ebx
6501f092:	push   edi
6501f093:	call   0x6501efb8
6501f098:	add    esp,0x14
6501f09b:	test   eax,eax
6501f09d:	je     0x6501f0b8
6501f09f:	cmp    BYTE PTR [ebp-0x18],0x0
6501f0a3:	mov    BYTE PTR [esi],0x0
6501f0a6:	je     0x6501f342
6501f0ac:	mov    ecx,DWORD PTR [ebp-0x1c]
6501f0af:	and    DWORD PTR [ecx+0x70],0xfffffffd
6501f0b3:	jmp    0x6501f342
6501f0b8:	cmp    BYTE PTR [ebx],0x2d
6501f0bb:	jne    0x6501f0c1
6501f0bd:	mov    BYTE PTR [esi],0x2d
6501f0c0:	inc    esi
6501f0c1:	mov    BYTE PTR [esi],0x30
6501f0c4:	inc    esi
6501f0c5:	cmp    DWORD PTR [ebp+0x18],0x0
6501f0c9:	push   0x65
6501f0cb:	sete   al
6501f0ce:	dec    al
6501f0d0:	and    al,0xe0
6501f0d2:	add    al,0x78
6501f0d4:	mov    BYTE PTR [esi],al
6501f0d6:	inc    esi
6501f0d7:	push   esi
6501f0d8:	call   0x6501f730
6501f0dd:	test   eax,eax
6501f0df:	pop    ecx
6501f0e0:	pop    ecx
6501f0e1:	je     0x6501f333
6501f0e7:	cmp    DWORD PTR [ebp+0x18],0x0
6501f0eb:	sete   cl
6501f0ee:	dec    cl
6501f0f0:	and    cl,0xe0
6501f0f3:	add    cl,0x70
6501f0f6:	mov    BYTE PTR [eax],cl
6501f0f8:	mov    BYTE PTR [eax+0x3],0x0
6501f0fc:	jmp    0x6501f333
6501f101:	and    eax,0x80000000
6501f106:	xor    ecx,ecx
6501f108:	or     ecx,eax
6501f10a:	je     0x6501f110
6501f10c:	mov    BYTE PTR [esi],0x2d
6501f10f:	inc    esi
6501f110:	mov    ebx,DWORD PTR [ebp+0x18]
6501f113:	mov    BYTE PTR [esi],0x30
6501f116:	inc    esi
6501f117:	test   ebx,ebx
6501f119:	sete   al
6501f11c:	dec    al
6501f11e:	and    al,0xe0
6501f120:	add    al,0x78
6501f122:	mov    BYTE PTR [esi],al
6501f124:	mov    ecx,DWORD PTR [edi+0x4]
6501f127:	inc    esi
6501f128:	neg    ebx
6501f12a:	sbb    ebx,ebx
6501f12c:	and    ebx,0xffffffe0
6501f12f:	and    ecx,0x7ff00000
6501f135:	xor    eax,eax
6501f137:	add    ebx,0x27
6501f13a:	xor    edx,edx
6501f13c:	or     eax,ecx
6501f13e:	jne    0x6501f161
6501f140:	mov    BYTE PTR [esi],0x30
6501f143:	mov    ecx,DWORD PTR [edi+0x4]
6501f146:	mov    eax,DWORD PTR [edi]
6501f148:	and    ecx,0xfffff
6501f14e:	inc    esi
6501f14f:	or     eax,ecx
6501f151:	jne    0x6501f158
6501f153:	mov    DWORD PTR [ebp-0x14],edx
6501f156:	jmp    0x6501f165
6501f158:	mov    DWORD PTR [ebp-0x14],0x3fe
6501f15f:	jmp    0x6501f165
6501f161:	mov    BYTE PTR [esi],0x31
6501f164:	inc    esi
6501f165:	mov    eax,esi
6501f167:	inc    esi
6501f168:	cmp    DWORD PTR [ebp+0x14],edx
6501f16b:	mov    DWORD PTR [ebp+0xc],eax
6501f16e:	jne    0x6501f174
6501f170:	mov    BYTE PTR [eax],dl
6501f172:	jmp    0x6501f183
6501f174:	mov    ecx,DWORD PTR [ebp-0x24]
6501f177:	mov    ecx,DWORD PTR [ecx+0xbc]
6501f17d:	mov    ecx,DWORD PTR [ecx]
6501f17f:	mov    cl,BYTE PTR [ecx]
6501f181:	mov    BYTE PTR [eax],cl
6501f183:	mov    ecx,DWORD PTR [edi+0x4]
6501f186:	mov    eax,DWORD PTR [edi]
6501f188:	and    ecx,0xfffff
6501f18e:	mov    DWORD PTR [ebp-0x8],ecx
6501f191:	ja     0x6501f19b
6501f193:	cmp    eax,edx
6501f195:	jbe    0x6501f250
6501f19b:	mov    DWORD PTR [ebp-0xc],edx
6501f19e:	mov    DWORD PTR [ebp-0x8],0xf0000
6501f1a5:	cmp    DWORD PTR [ebp+0x14],0x0
6501f1a9:	jle    0x6501f1f8
6501f1ab:	mov    edx,DWORD PTR [edi+0x4]
6501f1ae:	and    edx,DWORD PTR [ebp-0x8]
6501f1b1:	mov    eax,DWORD PTR [edi]
6501f1b3:	movsx  ecx,WORD PTR [ebp-0x4]
6501f1b7:	and    eax,DWORD PTR [ebp-0xc]
6501f1ba:	and    edx,0xfffff
6501f1c0:	call   0x6501fb90
6501f1c5:	add    ax,0x30
6501f1c9:	movzx  eax,ax
6501f1cc:	cmp    ax,0x39
6501f1d0:	jbe    0x6501f1d4
6501f1d2:	add    eax,ebx
6501f1d4:	mov    ecx,DWORD PTR [ebp-0x8]
6501f1d7:	sub    DWORD PTR [ebp-0x4],0x4
6501f1db:	mov    BYTE PTR [esi],al
6501f1dd:	mov    eax,DWORD PTR [ebp-0xc]
6501f1e0:	shrd   eax,ecx,0x4
6501f1e4:	shr    ecx,0x4
6501f1e7:	inc    esi
6501f1e8:	dec    DWORD PTR [ebp+0x14]
6501f1eb:	cmp    WORD PTR [ebp-0x4],0x0
6501f1f0:	mov    DWORD PTR [ebp-0xc],eax
6501f1f3:	mov    DWORD PTR [ebp-0x8],ecx
6501f1f6:	jge    0x6501f1a5
6501f1f8:	cmp    WORD PTR [ebp-0x4],0x0
6501f1fd:	jl     0x6501f250
6501f1ff:	mov    edx,DWORD PTR [edi+0x4]
6501f202:	and    edx,DWORD PTR [ebp-0x8]
6501f205:	mov    eax,DWORD PTR [edi]
6501f207:	movsx  ecx,WORD PTR [ebp-0x4]
6501f20b:	and    eax,DWORD PTR [ebp-0xc]
6501f20e:	and    edx,0xfffff
6501f214:	call   0x6501fb90
6501f219:	cmp    ax,0x8
6501f21d:	jbe    0x6501f250
6501f21f:	lea    eax,[esi-0x1]
6501f222:	mov    cl,BYTE PTR [eax]
6501f224:	cmp    cl,0x66
6501f227:	je     0x6501f22e
6501f229:	cmp    cl,0x46
6501f22c:	jne    0x6501f234
6501f22e:	mov    BYTE PTR [eax],0x30
6501f231:	dec    eax
6501f232:	jmp    0x6501f222
6501f234:	cmp    eax,DWORD PTR [ebp+0xc]
6501f237:	je     0x6501f24d
6501f239:	mov    cl,BYTE PTR [eax]
6501f23b:	cmp    cl,0x39
6501f23e:	jne    0x6501f247
6501f240:	add    bl,0x3a
6501f243:	mov    BYTE PTR [eax],bl
6501f245:	jmp    0x6501f250
6501f247:	inc    cl
6501f249:	mov    BYTE PTR [eax],cl
6501f24b:	jmp    0x6501f250
6501f24d:	inc    BYTE PTR [eax-0x1]
6501f250:	cmp    DWORD PTR [ebp+0x14],0x0
6501f254:	jle    0x6501f267
6501f256:	push   DWORD PTR [ebp+0x14]
6501f259:	push   0x30
6501f25b:	push   esi
6501f25c:	call   0x65012de0
6501f261:	add    esp,0xc
6501f264:	add    esi,DWORD PTR [ebp+0x14]
6501f267:	mov    eax,DWORD PTR [ebp+0xc]
6501f26a:	cmp    BYTE PTR [eax],0x0
6501f26d:	jne    0x6501f271
6501f26f:	mov    esi,eax
6501f271:	cmp    DWORD PTR [ebp+0x18],0x0
6501f275:	mov    cl,0x34
6501f277:	sete   al
6501f27a:	dec    al
6501f27c:	and    al,0xe0
6501f27e:	add    al,0x70
6501f280:	mov    BYTE PTR [esi],al
6501f282:	mov    eax,DWORD PTR [edi]
6501f284:	mov    edx,DWORD PTR [edi+0x4]
6501f287:	inc    esi
6501f288:	call   0x6501fb90
6501f28d:	xor    ebx,ebx
6501f28f:	and    eax,0x7ff
6501f294:	and    edx,ebx
6501f296:	sub    eax,DWORD PTR [ebp-0x14]
6501f299:	push   ebx
6501f29a:	pop    ecx
6501f29b:	sbb    edx,ecx
6501f29d:	js     0x6501f2ab
6501f29f:	jg     0x6501f2a5
6501f2a1:	cmp    eax,ebx
6501f2a3:	jb     0x6501f2ab
6501f2a5:	mov    BYTE PTR [esi],0x2b
6501f2a8:	inc    esi
6501f2a9:	jmp    0x6501f2b5
6501f2ab:	mov    BYTE PTR [esi],0x2d
6501f2ae:	inc    esi
6501f2af:	neg    eax
6501f2b1:	adc    edx,ebx
6501f2b3:	neg    edx
6501f2b5:	cmp    edx,ebx
6501f2b7:	mov    edi,esi
6501f2b9:	mov    BYTE PTR [esi],0x30
6501f2bc:	jl     0x6501f2e2
6501f2be:	mov    ecx,0x3e8
6501f2c3:	jg     0x6501f2c9
6501f2c5:	cmp    eax,ecx
6501f2c7:	jb     0x6501f2e2
6501f2c9:	push   ebx
6501f2ca:	push   ecx
6501f2cb:	push   edx
6501f2cc:	push   eax
6501f2cd:	call   0x6501fab0
6501f2d2:	add    al,0x30
6501f2d4:	mov    BYTE PTR [esi],al
6501f2d6:	inc    esi
6501f2d7:	cmp    esi,edi
6501f2d9:	mov    DWORD PTR [ebp-0x10],edx
6501f2dc:	mov    eax,ecx
6501f2de:	mov    edx,ebx
6501f2e0:	jne    0x6501f2ed
6501f2e2:	test   edx,edx
6501f2e4:	jl     0x6501f304
6501f2e6:	jg     0x6501f2ed
6501f2e8:	cmp    eax,0x64
6501f2eb:	jb     0x6501f304
6501f2ed:	push   0x0
6501f2ef:	push   0x64
6501f2f1:	push   edx
6501f2f2:	push   eax
6501f2f3:	call   0x6501fab0
6501f2f8:	add    al,0x30
6501f2fa:	mov    BYTE PTR [esi],al
6501f2fc:	mov    DWORD PTR [ebp-0x10],edx
6501f2ff:	inc    esi
6501f300:	mov    eax,ecx
6501f302:	mov    edx,ebx
6501f304:	cmp    esi,edi
6501f306:	jne    0x6501f313
6501f308:	test   edx,edx
6501f30a:	jl     0x6501f32b
6501f30c:	jg     0x6501f313
6501f30e:	cmp    eax,0xa
6501f311:	jb     0x6501f32b
6501f313:	push   0x0
6501f315:	push   0xa
6501f317:	push   edx
6501f318:	push   eax
6501f319:	call   0x6501fab0
6501f31e:	add    al,0x30
6501f320:	mov    BYTE PTR [esi],al
6501f322:	mov    DWORD PTR [ebp-0x10],edx
6501f325:	inc    esi
6501f326:	mov    eax,ecx
6501f328:	mov    DWORD PTR [ebp-0x10],ebx
6501f32b:	add    al,0x30
6501f32d:	mov    BYTE PTR [esi],al
6501f32f:	mov    BYTE PTR [esi+0x1],0x0
6501f333:	cmp    BYTE PTR [ebp-0x18],0x0
6501f337:	je     0x6501f340
6501f339:	mov    eax,DWORD PTR [ebp-0x1c]
6501f33c:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f340:	xor    eax,eax
6501f342:	pop    ebx
6501f343:	pop    edi
6501f344:	pop    esi
6501f345:	leave  
6501f346:	ret    
6501f347:	push   ebp
6501f348:	mov    ebp,esp
6501f34a:	sub    esp,0x10
6501f34d:	push   ebx
6501f34e:	push   esi
6501f34f:	push   edi
6501f350:	push   DWORD PTR [ebp+0x14]
6501f353:	mov    ebx,eax
6501f355:	mov    esi,DWORD PTR [ebx+0x4]
6501f358:	mov    edi,ecx
6501f35a:	lea    ecx,[ebp-0x10]
6501f35d:	dec    esi
6501f35e:	call   0x650128ff
6501f363:	test   edi,edi
6501f365:	jne    0x6501f394
6501f367:	call   0x650143a0
6501f36c:	push   0x16
6501f36e:	pop    esi
6501f36f:	mov    DWORD PTR [eax],esi
6501f371:	xor    eax,eax
6501f373:	push   eax
6501f374:	push   eax
6501f375:	push   eax
6501f376:	push   eax
6501f377:	push   eax
6501f378:	call   0x6501224f
6501f37d:	add    esp,0x14
6501f380:	cmp    BYTE PTR [ebp-0x4],0x0
6501f384:	je     0x6501f38d
6501f386:	mov    eax,DWORD PTR [ebp-0x8]
6501f389:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f38d:	mov    eax,esi
6501f38f:	jmp    0x6501f437
6501f394:	cmp    DWORD PTR [ebp+0x8],0x0
6501f398:	jbe    0x6501f367
6501f39a:	cmp    BYTE PTR [ebp+0x10],0x0
6501f39e:	je     0x6501f3b8
6501f3a0:	cmp    esi,DWORD PTR [ebp+0xc]
6501f3a3:	jne    0x6501f3b8
6501f3a5:	xor    eax,eax
6501f3a7:	cmp    DWORD PTR [ebx],0x2d
6501f3aa:	sete   al
6501f3ad:	add    eax,esi
6501f3af:	add    eax,edi
6501f3b1:	mov    BYTE PTR [eax],0x30
6501f3b4:	mov    BYTE PTR [eax+0x1],0x0
6501f3b8:	cmp    DWORD PTR [ebx],0x2d
6501f3bb:	mov    esi,edi
6501f3bd:	jne    0x6501f3c5
6501f3bf:	mov    BYTE PTR [edi],0x2d
6501f3c2:	lea    esi,[edi+0x1]
6501f3c5:	mov    eax,DWORD PTR [ebx+0x4]
6501f3c8:	xor    edi,edi
6501f3ca:	inc    edi
6501f3cb:	test   eax,eax
6501f3cd:	jg     0x6501f3dc
6501f3cf:	mov    eax,esi
6501f3d1:	call   0x6501ed44
6501f3d6:	mov    BYTE PTR [esi],0x30
6501f3d9:	inc    esi
6501f3da:	jmp    0x6501f3de
6501f3dc:	add    esi,eax
6501f3de:	cmp    DWORD PTR [ebp+0xc],0x0
6501f3e2:	jle    0x6501f428
6501f3e4:	mov    eax,esi
6501f3e6:	call   0x6501ed44
6501f3eb:	mov    eax,DWORD PTR [ebp-0x10]
6501f3ee:	mov    eax,DWORD PTR [eax+0xbc]
6501f3f4:	mov    eax,DWORD PTR [eax]
6501f3f6:	mov    al,BYTE PTR [eax]
6501f3f8:	mov    BYTE PTR [esi],al
6501f3fa:	mov    ebx,DWORD PTR [ebx+0x4]
6501f3fd:	inc    esi
6501f3fe:	test   ebx,ebx
6501f400:	jge    0x6501f428
6501f402:	neg    ebx
6501f404:	cmp    BYTE PTR [ebp+0x10],0x0
6501f408:	jne    0x6501f40f
6501f40a:	cmp    DWORD PTR [ebp+0xc],ebx
6501f40d:	jl     0x6501f412
6501f40f:	mov    DWORD PTR [ebp+0xc],ebx
6501f412:	mov    edi,DWORD PTR [ebp+0xc]
6501f415:	mov    eax,esi
6501f417:	call   0x6501ed44
6501f41c:	push   edi
6501f41d:	push   0x30
6501f41f:	push   esi
6501f420:	call   0x65012de0
6501f425:	add    esp,0xc
6501f428:	cmp    BYTE PTR [ebp-0x4],0x0
6501f42c:	je     0x6501f435
6501f42e:	mov    eax,DWORD PTR [ebp-0x8]
6501f431:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f435:	xor    eax,eax
6501f437:	pop    edi
6501f438:	pop    esi
6501f439:	pop    ebx
6501f43a:	leave  
6501f43b:	ret    
6501f43c:	push   ebp
6501f43d:	mov    ebp,esp
6501f43f:	sub    esp,0x2c
6501f442:	mov    eax,ds:0x6502c09c
6501f447:	xor    eax,ebp
6501f449:	mov    DWORD PTR [ebp-0x4],eax
6501f44c:	mov    eax,DWORD PTR [ebp+0x8]
6501f44f:	push   ebx
6501f450:	push   esi
6501f451:	push   edi
6501f452:	mov    edi,DWORD PTR [ebp+0xc]
6501f455:	push   0x16
6501f457:	pop    esi
6501f458:	push   esi
6501f459:	lea    ecx,[ebp-0x1c]
6501f45c:	push   ecx
6501f45d:	lea    ecx,[ebp-0x2c]
6501f460:	push   ecx
6501f461:	push   DWORD PTR [eax+0x4]
6501f464:	push   DWORD PTR [eax]
6501f466:	call   0x6501fa21
6501f46b:	xor    ebx,ebx
6501f46d:	add    esp,0x14
6501f470:	cmp    edi,ebx
6501f472:	jne    0x6501f48c
6501f474:	call   0x650143a0
6501f479:	push   ebx
6501f47a:	push   ebx
6501f47b:	push   ebx
6501f47c:	push   ebx
6501f47d:	push   ebx
6501f47e:	mov    DWORD PTR [eax],esi
6501f480:	call   0x6501224f
6501f485:	add    esp,0x14
6501f488:	mov    eax,esi
6501f48a:	jmp    0x6501f4e6
6501f48c:	mov    eax,DWORD PTR [ebp+0x10]
6501f48f:	cmp    eax,ebx
6501f491:	jbe    0x6501f474
6501f493:	cmp    eax,0xffffffff
6501f496:	jne    0x6501f49c
6501f498:	or     eax,eax
6501f49a:	jmp    0x6501f4a7
6501f49c:	xor    ecx,ecx
6501f49e:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f4a2:	sete   cl
6501f4a5:	sub    eax,ecx
6501f4a7:	mov    esi,DWORD PTR [ebp+0x14]
6501f4aa:	lea    ecx,[ebp-0x2c]
6501f4ad:	push   ecx
6501f4ae:	mov    ecx,DWORD PTR [ebp-0x28]
6501f4b1:	add    ecx,esi
6501f4b3:	push   ecx
6501f4b4:	push   eax
6501f4b5:	xor    eax,eax
6501f4b7:	cmp    DWORD PTR [ebp-0x2c],0x2d
6501f4bb:	sete   al
6501f4be:	add    eax,edi
6501f4c0:	push   eax
6501f4c1:	call   0x6501f8a9
6501f4c6:	add    esp,0x10
6501f4c9:	cmp    eax,ebx
6501f4cb:	je     0x6501f4d1
6501f4cd:	mov    BYTE PTR [edi],bl
6501f4cf:	jmp    0x6501f4e6
6501f4d1:	push   DWORD PTR [ebp+0x18]
6501f4d4:	lea    eax,[ebp-0x2c]
6501f4d7:	push   ebx
6501f4d8:	push   esi
6501f4d9:	push   DWORD PTR [ebp+0x10]
6501f4dc:	mov    ecx,edi
6501f4de:	call   0x6501f347
6501f4e3:	add    esp,0x10
6501f4e6:	mov    ecx,DWORD PTR [ebp-0x4]
6501f4e9:	pop    edi
6501f4ea:	pop    esi
6501f4eb:	xor    ecx,ebp
6501f4ed:	pop    ebx
6501f4ee:	call   0x6501275c
6501f4f3:	leave  
6501f4f4:	ret    
6501f4f5:	push   ebp
6501f4f6:	mov    ebp,esp
6501f4f8:	sub    esp,0x30
6501f4fb:	mov    eax,ds:0x6502c09c
6501f500:	xor    eax,ebp
6501f502:	mov    DWORD PTR [ebp-0x4],eax
6501f505:	mov    eax,DWORD PTR [ebp+0x8]
6501f508:	push   ebx
6501f509:	push   esi
6501f50a:	mov    esi,DWORD PTR [ebp+0xc]
6501f50d:	push   edi
6501f50e:	push   0x16
6501f510:	pop    edi
6501f511:	push   edi
6501f512:	lea    ecx,[ebp-0x1c]
6501f515:	push   ecx
6501f516:	lea    ecx,[ebp-0x30]
6501f519:	push   ecx
6501f51a:	push   DWORD PTR [eax+0x4]
6501f51d:	push   DWORD PTR [eax]
6501f51f:	call   0x6501fa21
6501f524:	xor    ebx,ebx
6501f526:	add    esp,0x14
6501f529:	cmp    esi,ebx
6501f52b:	jne    0x6501f548
6501f52d:	call   0x650143a0
6501f532:	push   ebx
6501f533:	push   ebx
6501f534:	push   ebx
6501f535:	push   ebx
6501f536:	push   ebx
6501f537:	mov    DWORD PTR [eax],edi
6501f539:	call   0x6501224f
6501f53e:	add    esp,0x14
6501f541:	mov    eax,edi
6501f543:	jmp    0x6501f5de
6501f548:	mov    ecx,DWORD PTR [ebp+0x10]
6501f54b:	cmp    ecx,ebx
6501f54d:	jbe    0x6501f52d
6501f54f:	mov    eax,DWORD PTR [ebp-0x2c]
6501f552:	dec    eax
6501f553:	mov    DWORD PTR [ebp-0x20],eax
6501f556:	xor    eax,eax
6501f558:	cmp    DWORD PTR [ebp-0x30],0x2d
6501f55c:	sete   al
6501f55f:	cmp    ecx,0xffffffff
6501f562:	lea    edi,[eax+esi*1]
6501f565:	jne    0x6501f56b
6501f567:	or     ecx,ecx
6501f569:	jmp    0x6501f56d
6501f56b:	sub    ecx,eax
6501f56d:	lea    eax,[ebp-0x30]
6501f570:	push   eax
6501f571:	push   DWORD PTR [ebp+0x14]
6501f574:	push   ecx
6501f575:	push   edi
6501f576:	call   0x6501f8a9
6501f57b:	add    esp,0x10
6501f57e:	cmp    eax,ebx
6501f580:	je     0x6501f586
6501f582:	mov    BYTE PTR [esi],bl
6501f584:	jmp    0x6501f5de
6501f586:	mov    eax,DWORD PTR [ebp-0x2c]
6501f589:	dec    eax
6501f58a:	cmp    DWORD PTR [ebp-0x20],eax
6501f58d:	setl   cl
6501f590:	cmp    eax,0xfffffffc
6501f593:	jl     0x6501f5c2
6501f595:	cmp    eax,DWORD PTR [ebp+0x14]
6501f598:	jge    0x6501f5c2
6501f59a:	cmp    cl,bl
6501f59c:	je     0x6501f5a8
6501f59e:	mov    al,BYTE PTR [edi]
6501f5a0:	inc    edi
6501f5a1:	test   al,al
6501f5a3:	jne    0x6501f59e
6501f5a5:	mov    BYTE PTR [edi-0x2],bl
6501f5a8:	push   DWORD PTR [ebp+0x1c]
6501f5ab:	lea    eax,[ebp-0x30]
6501f5ae:	push   0x1
6501f5b0:	push   DWORD PTR [ebp+0x14]
6501f5b3:	mov    ecx,esi
6501f5b5:	push   DWORD PTR [ebp+0x10]
6501f5b8:	call   0x6501f347
6501f5bd:	add    esp,0x10
6501f5c0:	jmp    0x6501f5de
6501f5c2:	push   DWORD PTR [ebp+0x1c]
6501f5c5:	lea    eax,[ebp-0x30]
6501f5c8:	push   0x1
6501f5ca:	push   eax
6501f5cb:	push   DWORD PTR [ebp+0x18]
6501f5ce:	mov    eax,esi
6501f5d0:	push   DWORD PTR [ebp+0x14]
6501f5d3:	push   DWORD PTR [ebp+0x10]
6501f5d6:	call   0x6501ed7d
6501f5db:	add    esp,0x18
6501f5de:	mov    ecx,DWORD PTR [ebp-0x4]
6501f5e1:	pop    edi
6501f5e2:	pop    esi
6501f5e3:	xor    ecx,ebp
6501f5e5:	pop    ebx
6501f5e6:	call   0x6501275c
6501f5eb:	leave  
6501f5ec:	ret    
6501f5ed:	push   ebp
6501f5ee:	mov    ebp,esp
6501f5f0:	mov    eax,DWORD PTR [ebp+0x14]
6501f5f3:	cmp    eax,0x65
6501f5f6:	je     0x6501f657
6501f5f8:	cmp    eax,0x45
6501f5fb:	je     0x6501f657
6501f5fd:	cmp    eax,0x66
6501f600:	jne    0x6501f61b
6501f602:	push   DWORD PTR [ebp+0x20]
6501f605:	push   DWORD PTR [ebp+0x18]
6501f608:	push   DWORD PTR [ebp+0x10]
6501f60b:	push   DWORD PTR [ebp+0xc]
6501f60e:	push   DWORD PTR [ebp+0x8]
6501f611:	call   0x6501f43c
6501f616:	add    esp,0x14
6501f619:	pop    ebp
6501f61a:	ret    
6501f61b:	cmp    eax,0x61
6501f61e:	je     0x6501f63e
6501f620:	cmp    eax,0x41
6501f623:	je     0x6501f63e
6501f625:	push   DWORD PTR [ebp+0x20]
6501f628:	push   DWORD PTR [ebp+0x1c]
6501f62b:	push   DWORD PTR [ebp+0x18]
6501f62e:	push   DWORD PTR [ebp+0x10]
6501f631:	push   DWORD PTR [ebp+0xc]
6501f634:	push   DWORD PTR [ebp+0x8]
6501f637:	call   0x6501f4f5
6501f63c:	jmp    0x6501f66e
6501f63e:	push   DWORD PTR [ebp+0x20]
6501f641:	push   DWORD PTR [ebp+0x1c]
6501f644:	push   DWORD PTR [ebp+0x18]
6501f647:	push   DWORD PTR [ebp+0x10]
6501f64a:	push   DWORD PTR [ebp+0xc]
6501f64d:	push   DWORD PTR [ebp+0x8]
6501f650:	call   0x6501efd6
6501f655:	jmp    0x6501f66e
6501f657:	push   DWORD PTR [ebp+0x20]
6501f65a:	push   DWORD PTR [ebp+0x1c]
6501f65d:	push   DWORD PTR [ebp+0x18]
6501f660:	push   DWORD PTR [ebp+0x10]
6501f663:	push   DWORD PTR [ebp+0xc]
6501f666:	push   DWORD PTR [ebp+0x8]
6501f669:	call   0x6501eeea
6501f66e:	add    esp,0x18
6501f671:	pop    ebp
6501f672:	ret    
6501f673:	push   ebp
6501f674:	mov    ebp,esp
6501f676:	push   0x0
6501f678:	push   DWORD PTR [ebp+0x1c]
6501f67b:	push   DWORD PTR [ebp+0x18]
6501f67e:	push   DWORD PTR [ebp+0x14]
6501f681:	push   DWORD PTR [ebp+0x10]
6501f684:	push   DWORD PTR [ebp+0xc]
6501f687:	push   DWORD PTR [ebp+0x8]
6501f68a:	call   0x6501f5ed
6501f68f:	add    esp,0x1c
6501f692:	pop    ebp
6501f693:	ret    
6501f694:	push   esi
6501f695:	push   0x30000
6501f69a:	push   0x10000
6501f69f:	xor    esi,esi
6501f6a1:	push   esi
6501f6a2:	call   0x6501fbaf
6501f6a7:	add    esp,0xc
6501f6aa:	test   eax,eax
6501f6ac:	je     0x6501f6bb
6501f6ae:	push   esi
6501f6af:	push   esi
6501f6b0:	push   esi
6501f6b1:	push   esi
6501f6b2:	push   esi
6501f6b3:	call   0x65012153
6501f6b8:	add    esp,0x14
6501f6bb:	pop    esi
6501f6bc:	ret    
6501f6bd:	push   ebp
6501f6be:	mov    ebp,esp
6501f6c0:	sub    esp,0x18
6501f6c3:	fld    QWORD PTR ds:0x65026518
6501f6c9:	fstp   QWORD PTR [ebp-0x10]
6501f6cc:	fld    QWORD PTR ds:0x65026510
6501f6d2:	fstp   QWORD PTR [ebp-0x18]
6501f6d5:	fld    QWORD PTR [ebp-0x18]
6501f6d8:	fdiv   QWORD PTR [ebp-0x10]
6501f6db:	fmul   QWORD PTR [ebp-0x10]
6501f6de:	fsubr  QWORD PTR [ebp-0x18]
6501f6e1:	fstp   QWORD PTR [ebp-0x8]
6501f6e4:	fld1   
6501f6e6:	fcomp  QWORD PTR [ebp-0x8]
6501f6e9:	fnstsw ax
6501f6eb:	test   ah,0x5
6501f6ee:	jp     0x6501f6f5
6501f6f0:	xor    eax,eax
6501f6f2:	inc    eax
6501f6f3:	leave  
6501f6f4:	ret    
6501f6f5:	xor    eax,eax
6501f6f7:	leave  
6501f6f8:	ret    
6501f6f9:	push   0x6502653c
6501f6fe:	call   DWORD PTR ds:0x65024124
6501f704:	test   eax,eax
6501f706:	je     0x6501f71d
6501f708:	push   0x65026520
6501f70d:	push   eax
6501f70e:	call   DWORD PTR ds:0x65024014
6501f714:	test   eax,eax
6501f716:	je     0x6501f71d
6501f718:	push   0x0
6501f71a:	call   eax
6501f71c:	ret    
6501f71d:	jmp    0x6501f6bd
6501f722:	int3   
6501f723:	int3   
6501f724:	int3   
6501f725:	int3   
6501f726:	int3   
6501f727:	int3   
6501f728:	int3   
6501f729:	int3   
6501f72a:	int3   
6501f72b:	int3   
6501f72c:	int3   
6501f72d:	int3   
6501f72e:	int3   
6501f72f:	int3   
6501f730:	push   ebp
6501f731:	mov    ebp,esp
6501f733:	push   edi
6501f734:	mov    edi,DWORD PTR [ebp+0x8]
6501f737:	xor    eax,eax
6501f739:	or     ecx,0xffffffff
6501f73c:	repnz scas al,BYTE PTR es:[edi]
6501f73e:	add    ecx,0x1
6501f741:	neg    ecx
6501f743:	sub    edi,0x1
6501f746:	mov    al,BYTE PTR [ebp+0xc]
6501f749:	std    
6501f74a:	repnz scas al,BYTE PTR es:[edi]
6501f74c:	add    edi,0x1
6501f74f:	cmp    BYTE PTR [edi],al
6501f751:	je     0x6501f757
6501f753:	xor    eax,eax
6501f755:	jmp    0x6501f759
6501f757:	mov    eax,edi
6501f759:	cld    
6501f75a:	pop    edi
6501f75b:	leave  
6501f75c:	ret    
6501f75d:	push   ebp
6501f75e:	mov    ebp,esp
6501f760:	sub    esp,0x28
6501f763:	mov    eax,ds:0x6502c09c
6501f768:	xor    eax,ebp
6501f76a:	mov    DWORD PTR [ebp-0x4],eax
6501f76d:	push   ebx
6501f76e:	push   esi
6501f76f:	mov    esi,DWORD PTR [ebp+0x8]
6501f772:	push   edi
6501f773:	push   DWORD PTR [ebp+0x10]
6501f776:	mov    edi,DWORD PTR [ebp+0xc]
6501f779:	lea    ecx,[ebp-0x24]
6501f77c:	call   0x650128ff
6501f781:	lea    eax,[ebp-0x24]
6501f784:	push   eax
6501f785:	xor    ebx,ebx
6501f787:	push   ebx
6501f788:	push   ebx
6501f789:	push   ebx
6501f78a:	push   ebx
6501f78b:	push   edi
6501f78c:	lea    eax,[ebp-0x28]
6501f78f:	push   eax
6501f790:	lea    eax,[ebp-0x10]
6501f793:	push   eax
6501f794:	call   0x6502069d
6501f799:	mov    DWORD PTR [ebp-0x14],eax
6501f79c:	lea    eax,[ebp-0x10]
6501f79f:	push   esi
6501f7a0:	push   eax
6501f7a1:	call   0x6501fc19
6501f7a6:	add    esp,0x28
6501f7a9:	test   BYTE PTR [ebp-0x14],0x3
6501f7ad:	jne    0x6501f7da
6501f7af:	cmp    eax,0x1
6501f7b2:	jne    0x6501f7c5
6501f7b4:	cmp    BYTE PTR [ebp-0x18],bl
6501f7b7:	je     0x6501f7c0
6501f7b9:	mov    eax,DWORD PTR [ebp-0x1c]
6501f7bc:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f7c0:	push   0x3
6501f7c2:	pop    eax
6501f7c3:	jmp    0x6501f7f4
6501f7c5:	cmp    eax,0x2
6501f7c8:	jne    0x6501f7e6
6501f7ca:	cmp    BYTE PTR [ebp-0x18],bl
6501f7cd:	je     0x6501f7d6
6501f7cf:	mov    eax,DWORD PTR [ebp-0x1c]
6501f7d2:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f7d6:	push   0x4
6501f7d8:	jmp    0x6501f7c2
6501f7da:	test   BYTE PTR [ebp-0x14],0x1
6501f7de:	jne    0x6501f7ca
6501f7e0:	test   BYTE PTR [ebp-0x14],0x2
6501f7e4:	jne    0x6501f7b4
6501f7e6:	cmp    BYTE PTR [ebp-0x18],bl
6501f7e9:	je     0x6501f7f2
6501f7eb:	mov    eax,DWORD PTR [ebp-0x1c]
6501f7ee:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f7f2:	xor    eax,eax
6501f7f4:	mov    ecx,DWORD PTR [ebp-0x4]
6501f7f7:	pop    edi
6501f7f8:	pop    esi
6501f7f9:	xor    ecx,ebp
6501f7fb:	pop    ebx
6501f7fc:	call   0x6501275c
6501f801:	leave  
6501f802:	ret    
6501f803:	push   ebp
6501f804:	mov    ebp,esp
6501f806:	sub    esp,0x28
6501f809:	mov    eax,ds:0x6502c09c
6501f80e:	xor    eax,ebp
6501f810:	mov    DWORD PTR [ebp-0x4],eax
6501f813:	push   ebx
6501f814:	push   esi
6501f815:	mov    esi,DWORD PTR [ebp+0x8]
6501f818:	push   edi
6501f819:	push   DWORD PTR [ebp+0x10]
6501f81c:	mov    edi,DWORD PTR [ebp+0xc]
6501f81f:	lea    ecx,[ebp-0x24]
6501f822:	call   0x650128ff
6501f827:	lea    eax,[ebp-0x24]
6501f82a:	push   eax
6501f82b:	xor    ebx,ebx
6501f82d:	push   ebx
6501f82e:	push   ebx
6501f82f:	push   ebx
6501f830:	push   ebx
6501f831:	push   edi
6501f832:	lea    eax,[ebp-0x28]
6501f835:	push   eax
6501f836:	lea    eax,[ebp-0x10]
6501f839:	push   eax
6501f83a:	call   0x6502069d
6501f83f:	mov    DWORD PTR [ebp-0x14],eax
6501f842:	lea    eax,[ebp-0x10]
6501f845:	push   esi
6501f846:	push   eax
6501f847:	call   0x6502015b
6501f84c:	add    esp,0x28
6501f84f:	test   BYTE PTR [ebp-0x14],0x3
6501f853:	jne    0x6501f880
6501f855:	cmp    eax,0x1
6501f858:	jne    0x6501f86b
6501f85a:	cmp    BYTE PTR [ebp-0x18],bl
6501f85d:	je     0x6501f866
6501f85f:	mov    eax,DWORD PTR [ebp-0x1c]
6501f862:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f866:	push   0x3
6501f868:	pop    eax
6501f869:	jmp    0x6501f89a
6501f86b:	cmp    eax,0x2
6501f86e:	jne    0x6501f88c
6501f870:	cmp    BYTE PTR [ebp-0x18],bl
6501f873:	je     0x6501f87c
6501f875:	mov    eax,DWORD PTR [ebp-0x1c]
6501f878:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f87c:	push   0x4
6501f87e:	jmp    0x6501f868
6501f880:	test   BYTE PTR [ebp-0x14],0x1
6501f884:	jne    0x6501f870
6501f886:	test   BYTE PTR [ebp-0x14],0x2
6501f88a:	jne    0x6501f85a
6501f88c:	cmp    BYTE PTR [ebp-0x18],bl
6501f88f:	je     0x6501f898
6501f891:	mov    eax,DWORD PTR [ebp-0x1c]
6501f894:	and    DWORD PTR [eax+0x70],0xfffffffd
6501f898:	xor    eax,eax
6501f89a:	mov    ecx,DWORD PTR [ebp-0x4]
6501f89d:	pop    edi
6501f89e:	pop    esi
6501f89f:	xor    ecx,ebp
6501f8a1:	pop    ebx
6501f8a2:	call   0x6501275c
6501f8a7:	leave  
6501f8a8:	ret    
6501f8a9:	push   ebp
6501f8aa:	mov    ebp,esp
6501f8ac:	mov    ecx,DWORD PTR [ebp+0x14]
6501f8af:	push   ebx
6501f8b0:	push   esi
6501f8b1:	mov    esi,DWORD PTR [ebp+0x8]
6501f8b4:	xor    ebx,ebx
6501f8b6:	cmp    esi,ebx
6501f8b8:	push   edi
6501f8b9:	mov    edi,DWORD PTR [ecx+0xc]
6501f8bc:	jne    0x6501f8dc
6501f8be:	call   0x650143a0
6501f8c3:	push   0x16
6501f8c5:	pop    esi
6501f8c6:	mov    DWORD PTR [eax],esi
6501f8c8:	push   ebx
6501f8c9:	push   ebx
6501f8ca:	push   ebx
6501f8cb:	push   ebx
6501f8cc:	push   ebx
6501f8cd:	call   0x6501224f
6501f8d2:	add    esp,0x14
6501f8d5:	mov    eax,esi
6501f8d7:	jmp    0x6501f961
6501f8dc:	cmp    DWORD PTR [ebp+0xc],ebx
6501f8df:	jbe    0x6501f8be
6501f8e1:	mov    edx,DWORD PTR [ebp+0x10]
6501f8e4:	cmp    edx,ebx
6501f8e6:	mov    BYTE PTR [esi],bl
6501f8e8:	jle    0x6501f8ee
6501f8ea:	mov    eax,edx
6501f8ec:	jmp    0x6501f8f0
6501f8ee:	xor    eax,eax
6501f8f0:	inc    eax
6501f8f1:	cmp    DWORD PTR [ebp+0xc],eax
6501f8f4:	ja     0x6501f904
6501f8f6:	call   0x650143a0
6501f8fb:	push   0x22
6501f8fd:	pop    ecx
6501f8fe:	mov    DWORD PTR [eax],ecx
6501f900:	mov    esi,ecx
6501f902:	jmp    0x6501f8c8
6501f904:	cmp    edx,ebx
6501f906:	mov    BYTE PTR [esi],0x30
6501f909:	lea    eax,[esi+0x1]
6501f90c:	jle    0x6501f928
6501f90e:	mov    cl,BYTE PTR [edi]
6501f910:	cmp    cl,bl
6501f912:	je     0x6501f91a
6501f914:	movsx  ecx,cl
6501f917:	inc    edi
6501f918:	jmp    0x6501f91d
6501f91a:	push   0x30
6501f91c:	pop    ecx
6501f91d:	mov    BYTE PTR [eax],cl
6501f91f:	inc    eax
6501f920:	dec    edx
6501f921:	cmp    edx,ebx
6501f923:	jg     0x6501f90e
6501f925:	mov    ecx,DWORD PTR [ebp+0x14]
6501f928:	cmp    edx,ebx
6501f92a:	mov    BYTE PTR [eax],bl
6501f92c:	jl     0x6501f940
6501f92e:	cmp    BYTE PTR [edi],0x35
6501f931:	jl     0x6501f940
6501f933:	jmp    0x6501f938
6501f935:	mov    BYTE PTR [eax],0x30
6501f938:	dec    eax
6501f939:	cmp    BYTE PTR [eax],0x39
6501f93c:	je     0x6501f935
6501f93e:	inc    BYTE PTR [eax]
6501f940:	cmp    BYTE PTR [esi],0x31
6501f943:	jne    0x6501f94a
6501f945:	inc    DWORD PTR [ecx+0x4]
6501f948:	jmp    0x6501f95f
6501f94a:	lea    edi,[esi+0x1]
6501f94d:	push   edi
6501f94e:	call   0x65013ea0
6501f953:	inc    eax
6501f954:	push   eax
6501f955:	push   edi
6501f956:	push   esi
6501f957:	call   0x65013720
6501f95c:	add    esp,0x10
6501f95f:	xor    eax,eax
6501f961:	pop    edi
6501f962:	pop    esi
6501f963:	pop    ebx
6501f964:	pop    ebp
6501f965:	ret    
6501f966:	push   ebp
6501f967:	mov    ebp,esp
6501f969:	push   ecx
6501f96a:	mov    edx,DWORD PTR [ebp+0xc]
6501f96d:	movzx  eax,WORD PTR [edx+0x6]
6501f971:	push   ebx
6501f972:	mov    ecx,eax
6501f974:	push   esi
6501f975:	push   edi
6501f976:	shr    ecx,0x4
6501f979:	and    eax,0x8000
6501f97e:	mov    edi,0x7ff
6501f983:	and    ecx,edi
6501f985:	mov    DWORD PTR [ebp+0xc],eax
6501f988:	mov    eax,DWORD PTR [edx+0x4]
6501f98b:	mov    edx,DWORD PTR [edx]
6501f98d:	movzx  ebx,cx
6501f990:	mov    esi,0x80000000
6501f995:	and    eax,0xfffff
6501f99a:	test   ebx,ebx
6501f99c:	mov    DWORD PTR [ebp-0x4],esi
6501f99f:	je     0x6501f9b4
6501f9a1:	cmp    ebx,edi
6501f9a3:	je     0x6501f9ad
6501f9a5:	add    ecx,0x3c00
6501f9ab:	jmp    0x6501f9d5
6501f9ad:	mov    edi,0x7fff
6501f9b2:	jmp    0x6501f9d8
6501f9b4:	xor    ebx,ebx
6501f9b6:	cmp    eax,ebx
6501f9b8:	jne    0x6501f9cc
6501f9ba:	cmp    edx,ebx
6501f9bc:	jne    0x6501f9cc
6501f9be:	mov    eax,DWORD PTR [ebp+0x8]
6501f9c1:	mov    cx,WORD PTR [ebp+0xc]
6501f9c5:	mov    DWORD PTR [eax+0x4],ebx
6501f9c8:	mov    DWORD PTR [eax],ebx
6501f9ca:	jmp    0x6501fa18
6501f9cc:	add    ecx,0x3c01
6501f9d2:	mov    DWORD PTR [ebp-0x4],ebx
6501f9d5:	movzx  edi,cx
6501f9d8:	mov    ecx,edx
6501f9da:	shr    ecx,0x15
6501f9dd:	shl    eax,0xb
6501f9e0:	or     ecx,eax
6501f9e2:	or     ecx,DWORD PTR [ebp-0x4]
6501f9e5:	mov    eax,DWORD PTR [ebp+0x8]
6501f9e8:	shl    edx,0xb
6501f9eb:	test   esi,ecx
6501f9ed:	mov    DWORD PTR [eax+0x4],ecx
6501f9f0:	mov    DWORD PTR [eax],edx
6501f9f2:	jne    0x6501fa13
6501f9f4:	mov    ecx,DWORD PTR [eax]
6501f9f6:	mov    edx,DWORD PTR [eax+0x4]
6501f9f9:	mov    ebx,ecx
6501f9fb:	add    edx,edx
6501f9fd:	shr    ebx,0x1f
6501fa00:	or     edx,ebx
6501fa02:	add    ecx,ecx
6501fa04:	add    edi,0xffff
6501fa0a:	test   esi,edx
6501fa0c:	mov    DWORD PTR [eax+0x4],edx
6501fa0f:	mov    DWORD PTR [eax],ecx
6501fa11:	je     0x6501f9f4
6501fa13:	mov    ecx,DWORD PTR [ebp+0xc]
6501fa16:	or     ecx,edi
6501fa18:	pop    edi
6501fa19:	pop    esi
6501fa1a:	mov    WORD PTR [eax+0x8],cx
6501fa1e:	pop    ebx
6501fa1f:	leave  
6501fa20:	ret    
6501fa21:	push   ebp
6501fa22:	mov    ebp,esp
6501fa24:	sub    esp,0x30
6501fa27:	mov    eax,ds:0x6502c09c
6501fa2c:	xor    eax,ebp
6501fa2e:	mov    DWORD PTR [ebp-0x4],eax
6501fa31:	mov    eax,DWORD PTR [ebp+0x14]
6501fa34:	push   ebx
6501fa35:	mov    ebx,DWORD PTR [ebp+0x10]
6501fa38:	push   esi
6501fa39:	mov    DWORD PTR [ebp-0x30],eax
6501fa3c:	push   edi
6501fa3d:	lea    eax,[ebp+0x8]
6501fa40:	push   eax
6501fa41:	lea    eax,[ebp-0x10]
6501fa44:	push   eax
6501fa45:	call   0x6501f966
6501fa4a:	pop    ecx
6501fa4b:	pop    ecx
6501fa4c:	lea    eax,[ebp-0x2c]
6501fa4f:	push   eax
6501fa50:	push   0x0
6501fa52:	push   0x11
6501fa54:	sub    esp,0xc
6501fa57:	lea    esi,[ebp-0x10]
6501fa5a:	mov    edi,esp
6501fa5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fa5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fa5e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6501fa60:	call   0x65020d5d
6501fa65:	mov    esi,DWORD PTR [ebp-0x30]
6501fa68:	mov    DWORD PTR [ebx+0x8],eax
6501fa6b:	movsx  eax,BYTE PTR [ebp-0x2a]
6501fa6f:	mov    DWORD PTR [ebx],eax
6501fa71:	movsx  eax,WORD PTR [ebp-0x2c]
6501fa75:	mov    DWORD PTR [ebx+0x4],eax
6501fa78:	lea    eax,[ebp-0x28]
6501fa7b:	push   eax
6501fa7c:	push   DWORD PTR [ebp+0x18]
6501fa7f:	push   esi
6501fa80:	call   0x65013f94
6501fa85:	add    esp,0x24
6501fa88:	test   eax,eax
6501fa8a:	je     0x6501fa9b
6501fa8c:	xor    eax,eax
6501fa8e:	push   eax
6501fa8f:	push   eax
6501fa90:	push   eax
6501fa91:	push   eax
6501fa92:	push   eax
6501fa93:	call   0x65012153
6501fa98:	add    esp,0x14
6501fa9b:	mov    ecx,DWORD PTR [ebp-0x4]
6501fa9e:	pop    edi
6501fa9f:	mov    DWORD PTR [ebx+0xc],esi
6501faa2:	pop    esi
6501faa3:	mov    eax,ebx
6501faa5:	xor    ecx,ebp
6501faa7:	pop    ebx
6501faa8:	call   0x6501275c
6501faad:	leave  
6501faae:	ret    
6501faaf:	int3   
6501fab0:	push   edi
6501fab1:	push   esi
6501fab2:	push   ebp
6501fab3:	xor    edi,edi
6501fab5:	xor    ebp,ebp
6501fab7:	mov    eax,DWORD PTR [esp+0x14]
6501fabb:	or     eax,eax
6501fabd:	jge    0x6501fad4
6501fabf:	inc    edi
6501fac0:	inc    ebp
6501fac1:	mov    edx,DWORD PTR [esp+0x10]
6501fac5:	neg    eax
6501fac7:	neg    edx
6501fac9:	sbb    eax,0x0
6501facc:	mov    DWORD PTR [esp+0x14],eax
6501fad0:	mov    DWORD PTR [esp+0x10],edx
6501fad4:	mov    eax,DWORD PTR [esp+0x1c]
6501fad8:	or     eax,eax
6501fada:	jge    0x6501faf0
6501fadc:	inc    edi
6501fadd:	mov    edx,DWORD PTR [esp+0x18]
6501fae1:	neg    eax
6501fae3:	neg    edx
6501fae5:	sbb    eax,0x0
6501fae8:	mov    DWORD PTR [esp+0x1c],eax
6501faec:	mov    DWORD PTR [esp+0x18],edx
6501faf0:	or     eax,eax
6501faf2:	jne    0x6501fb1c
6501faf4:	mov    ecx,DWORD PTR [esp+0x18]
6501faf8:	mov    eax,DWORD PTR [esp+0x14]
6501fafc:	xor    edx,edx
6501fafe:	div    ecx
6501fb00:	mov    ebx,eax
6501fb02:	mov    eax,DWORD PTR [esp+0x10]
6501fb06:	div    ecx
6501fb08:	mov    esi,eax
6501fb0a:	mov    eax,ebx
6501fb0c:	mul    DWORD PTR [esp+0x18]
6501fb10:	mov    ecx,eax
6501fb12:	mov    eax,esi
6501fb14:	mul    DWORD PTR [esp+0x18]
6501fb18:	add    edx,ecx
6501fb1a:	jmp    0x6501fb63
6501fb1c:	mov    ebx,eax
6501fb1e:	mov    ecx,DWORD PTR [esp+0x18]
6501fb22:	mov    edx,DWORD PTR [esp+0x14]
6501fb26:	mov    eax,DWORD PTR [esp+0x10]
6501fb2a:	shr    ebx,1
6501fb2c:	rcr    ecx,1
6501fb2e:	shr    edx,1
6501fb30:	rcr    eax,1
6501fb32:	or     ebx,ebx
6501fb34:	jne    0x6501fb2a
6501fb36:	div    ecx
6501fb38:	mov    esi,eax
6501fb3a:	mul    DWORD PTR [esp+0x1c]
6501fb3e:	mov    ecx,eax
6501fb40:	mov    eax,DWORD PTR [esp+0x18]
6501fb44:	mul    esi
6501fb46:	add    edx,ecx
6501fb48:	jb     0x6501fb58
6501fb4a:	cmp    edx,DWORD PTR [esp+0x14]
6501fb4e:	ja     0x6501fb58
6501fb50:	jb     0x6501fb61
6501fb52:	cmp    eax,DWORD PTR [esp+0x10]
6501fb56:	jbe    0x6501fb61
6501fb58:	dec    esi
6501fb59:	sub    eax,DWORD PTR [esp+0x18]
6501fb5d:	sbb    edx,DWORD PTR [esp+0x1c]
6501fb61:	xor    ebx,ebx
6501fb63:	sub    eax,DWORD PTR [esp+0x10]
6501fb67:	sbb    edx,DWORD PTR [esp+0x14]
6501fb6b:	dec    ebp
6501fb6c:	jns    0x6501fb75
6501fb6e:	neg    edx
6501fb70:	neg    eax
6501fb72:	sbb    edx,0x0
6501fb75:	mov    ecx,edx
6501fb77:	mov    edx,ebx
6501fb79:	mov    ebx,ecx
6501fb7b:	mov    ecx,eax
6501fb7d:	mov    eax,esi
6501fb7f:	dec    edi
6501fb80:	jne    0x6501fb89
6501fb82:	neg    edx
6501fb84:	neg    eax
6501fb86:	sbb    edx,0x0
6501fb89:	pop    ebp
6501fb8a:	pop    esi
6501fb8b:	pop    edi
6501fb8c:	ret    0x10
6501fb8f:	int3   
6501fb90:	cmp    cl,0x40
6501fb93:	jae    0x6501fbaa
6501fb95:	cmp    cl,0x20
6501fb98:	jae    0x6501fba0
6501fb9a:	shrd   eax,edx,cl
6501fb9d:	shr    edx,cl
6501fb9f:	ret    
6501fba0:	mov    eax,edx
6501fba2:	xor    edx,edx
6501fba4:	and    cl,0x1f
6501fba7:	shr    eax,cl
6501fba9:	ret    
6501fbaa:	xor    eax,eax
6501fbac:	xor    edx,edx
6501fbae:	ret    
6501fbaf:	push   ebp
6501fbb0:	mov    ebp,esp
6501fbb2:	mov    eax,DWORD PTR [ebp+0x10]
6501fbb5:	mov    ecx,DWORD PTR [ebp+0xc]
6501fbb8:	and    eax,0xfff7ffff
6501fbbd:	and    ecx,eax
6501fbbf:	test   ecx,0xfcf0fce0
6501fbc5:	push   esi
6501fbc6:	je     0x6501fbf9
6501fbc8:	push   edi
6501fbc9:	mov    edi,DWORD PTR [ebp+0x8]
6501fbcc:	xor    esi,esi
6501fbce:	cmp    edi,esi
6501fbd0:	je     0x6501fbdd
6501fbd2:	push   esi
6501fbd3:	push   esi
6501fbd4:	call   0x65021751
6501fbd9:	pop    ecx
6501fbda:	pop    ecx
6501fbdb:	mov    DWORD PTR [edi],eax
6501fbdd:	call   0x650143a0
6501fbe2:	push   0x16
6501fbe4:	pop    edi
6501fbe5:	push   esi
6501fbe6:	push   esi
6501fbe7:	push   esi
6501fbe8:	push   esi
6501fbe9:	push   esi
6501fbea:	mov    DWORD PTR [eax],edi
6501fbec:	call   0x6501224f
6501fbf1:	add    esp,0x14
6501fbf4:	mov    eax,edi
6501fbf6:	pop    edi
6501fbf7:	jmp    0x6501fc16
6501fbf9:	mov    esi,DWORD PTR [ebp+0x8]
6501fbfc:	test   esi,esi
6501fbfe:	push   eax
6501fbff:	push   DWORD PTR [ebp+0xc]
6501fc02:	je     0x6501fc0d
6501fc04:	call   0x65021751
6501fc09:	mov    DWORD PTR [esi],eax
6501fc0b:	jmp    0x6501fc12
6501fc0d:	call   0x65021751
6501fc12:	pop    ecx
6501fc13:	pop    ecx
6501fc14:	xor    eax,eax
6501fc16:	pop    esi
6501fc17:	pop    ebp
6501fc18:	ret    
6501fc19:	push   ebp
6501fc1a:	mov    ebp,esp
6501fc1c:	sub    esp,0x2c
6501fc1f:	mov    eax,DWORD PTR [ebp+0x8]
6501fc22:	movzx  ecx,WORD PTR [eax+0xa]
6501fc26:	push   ebx
6501fc27:	mov    ebx,ecx
6501fc29:	and    ecx,0x8000
6501fc2f:	mov    DWORD PTR [ebp-0x14],ecx
6501fc32:	mov    ecx,DWORD PTR [eax+0x6]
6501fc35:	mov    DWORD PTR [ebp-0x20],ecx
6501fc38:	mov    ecx,DWORD PTR [eax+0x2]
6501fc3b:	movzx  eax,WORD PTR [eax]
6501fc3e:	and    ebx,0x7fff
6501fc44:	sub    ebx,0x3fff
6501fc4a:	shl    eax,0x10
6501fc4d:	cmp    ebx,0xffffc001
6501fc53:	push   edi
6501fc54:	mov    DWORD PTR [ebp-0x1c],ecx
6501fc57:	mov    DWORD PTR [ebp-0x18],eax
6501fc5a:	jne    0x6501fc83
6501fc5c:	xor    ebx,ebx
6501fc5e:	xor    eax,eax
6501fc60:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6501fc64:	jne    0x6501fc73
6501fc66:	inc    eax
6501fc67:	cmp    eax,0x3
6501fc6a:	jl     0x6501fc60
6501fc6c:	xor    eax,eax
6501fc6e:	jmp    0x65020118
6501fc73:	xor    eax,eax
6501fc75:	lea    edi,[ebp-0x20]
6501fc78:	stos   DWORD PTR es:[edi],eax
6501fc79:	stos   DWORD PTR es:[edi],eax
6501fc7a:	push   0x2
6501fc7c:	stos   DWORD PTR es:[edi],eax
6501fc7d:	pop    eax
6501fc7e:	jmp    0x65020118
6501fc83:	and    DWORD PTR [ebp+0x8],0x0
6501fc87:	push   esi
6501fc88:	lea    esi,[ebp-0x20]
6501fc8b:	lea    edi,[ebp-0x2c]
6501fc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fc8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fc91:	mov    esi,DWORD PTR ds:0x6502d078
6501fc97:	dec    esi
6501fc98:	lea    ecx,[esi+0x1]
6501fc9b:	mov    eax,ecx
6501fc9d:	cdq    
6501fc9e:	and    edx,0x1f
6501fca1:	add    eax,edx
6501fca3:	sar    eax,0x5
6501fca6:	mov    edx,ecx
6501fca8:	and    edx,0x8000001f
6501fcae:	mov    DWORD PTR [ebp-0x10],ebx
6501fcb1:	mov    DWORD PTR [ebp-0xc],eax
6501fcb4:	jns    0x6501fcbb
6501fcb6:	dec    edx
6501fcb7:	or     edx,0xffffffe0
6501fcba:	inc    edx
6501fcbb:	lea    edi,[ebp+eax*4-0x20]
6501fcbf:	push   0x1f
6501fcc1:	xor    eax,eax
6501fcc3:	pop    ecx
6501fcc4:	sub    ecx,edx
6501fcc6:	inc    eax
6501fcc7:	shl    eax,cl
6501fcc9:	mov    DWORD PTR [ebp-0x8],ecx
6501fccc:	test   DWORD PTR [edi],eax
6501fcce:	je     0x6501fd61
6501fcd4:	mov    eax,DWORD PTR [ebp-0xc]
6501fcd7:	or     edx,0xffffffff
6501fcda:	shl    edx,cl
6501fcdc:	not    edx
6501fcde:	test   DWORD PTR [ebp+eax*4-0x20],edx
6501fce2:	jmp    0x6501fce9
6501fce4:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6501fce9:	jne    0x6501fcf3
6501fceb:	inc    eax
6501fcec:	cmp    eax,0x3
6501fcef:	jl     0x6501fce4
6501fcf1:	jmp    0x6501fd61
6501fcf3:	mov    eax,esi
6501fcf5:	cdq    
6501fcf6:	push   0x1f
6501fcf8:	pop    ecx
6501fcf9:	and    edx,ecx
6501fcfb:	add    eax,edx
6501fcfd:	sar    eax,0x5
6501fd00:	and    esi,0x8000001f
6501fd06:	jns    0x6501fd0d
6501fd08:	dec    esi
6501fd09:	or     esi,0xffffffe0
6501fd0c:	inc    esi
6501fd0d:	and    DWORD PTR [ebp-0x4],0x0
6501fd11:	sub    ecx,esi
6501fd13:	xor    edx,edx
6501fd15:	inc    edx
6501fd16:	shl    edx,cl
6501fd18:	lea    ecx,[ebp+eax*4-0x20]
6501fd1c:	mov    esi,DWORD PTR [ecx]
6501fd1e:	add    esi,edx
6501fd20:	mov    DWORD PTR [ebp+0x8],esi
6501fd23:	mov    esi,DWORD PTR [ecx]
6501fd25:	cmp    DWORD PTR [ebp+0x8],esi
6501fd28:	jb     0x6501fd4c
6501fd2a:	cmp    DWORD PTR [ebp+0x8],edx
6501fd2d:	jmp    0x6501fd4a
6501fd2f:	test   ecx,ecx
6501fd31:	je     0x6501fd5e
6501fd33:	and    DWORD PTR [ebp-0x4],0x0
6501fd37:	lea    ecx,[ebp+eax*4-0x20]
6501fd3b:	mov    edx,DWORD PTR [ecx]
6501fd3d:	lea    esi,[edx+0x1]
6501fd40:	cmp    esi,edx
6501fd42:	mov    DWORD PTR [ebp+0x8],esi
6501fd45:	jb     0x6501fd4c
6501fd47:	cmp    esi,0x1
6501fd4a:	jae    0x6501fd53
6501fd4c:	mov    DWORD PTR [ebp-0x4],0x1
6501fd53:	dec    eax
6501fd54:	mov    edx,DWORD PTR [ebp+0x8]
6501fd57:	mov    DWORD PTR [ecx],edx
6501fd59:	mov    ecx,DWORD PTR [ebp-0x4]
6501fd5c:	jns    0x6501fd2f
6501fd5e:	mov    DWORD PTR [ebp+0x8],ecx
6501fd61:	mov    ecx,DWORD PTR [ebp-0x8]
6501fd64:	or     eax,0xffffffff
6501fd67:	shl    eax,cl
6501fd69:	and    DWORD PTR [edi],eax
6501fd6b:	mov    eax,DWORD PTR [ebp-0xc]
6501fd6e:	inc    eax
6501fd6f:	cmp    eax,0x3
6501fd72:	jge    0x6501fd81
6501fd74:	push   0x3
6501fd76:	pop    ecx
6501fd77:	lea    edi,[ebp+eax*4-0x20]
6501fd7b:	sub    ecx,eax
6501fd7d:	xor    eax,eax
6501fd7f:	rep stos DWORD PTR es:[edi],eax
6501fd81:	cmp    DWORD PTR [ebp+0x8],0x0
6501fd85:	je     0x6501fd88
6501fd87:	inc    ebx
6501fd88:	mov    eax,ds:0x6502d074
6501fd8d:	mov    ecx,eax
6501fd8f:	sub    ecx,DWORD PTR ds:0x6502d078
6501fd95:	cmp    ebx,ecx
6501fd97:	jge    0x6501fda6
6501fd99:	xor    eax,eax
6501fd9b:	lea    edi,[ebp-0x20]
6501fd9e:	stos   DWORD PTR es:[edi],eax
6501fd9f:	stos   DWORD PTR es:[edi],eax
6501fda0:	stos   DWORD PTR es:[edi],eax
6501fda1:	jmp    0x6501ffb3
6501fda6:	cmp    ebx,eax
6501fda8:	jg     0x6501ffbd
6501fdae:	sub    eax,DWORD PTR [ebp-0x10]
6501fdb1:	lea    esi,[ebp-0x2c]
6501fdb4:	mov    ecx,eax
6501fdb6:	lea    edi,[ebp-0x20]
6501fdb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fdba:	cdq    
6501fdbb:	and    edx,0x1f
6501fdbe:	add    eax,edx
6501fdc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fdc1:	mov    edx,ecx
6501fdc3:	sar    eax,0x5
6501fdc6:	and    edx,0x8000001f
6501fdcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6501fdcd:	jns    0x6501fdd4
6501fdcf:	dec    edx
6501fdd0:	or     edx,0xffffffe0
6501fdd3:	inc    edx
6501fdd4:	and    DWORD PTR [ebp-0xc],0x0
6501fdd8:	and    DWORD PTR [ebp+0x8],0x0
6501fddc:	or     edi,0xffffffff
6501fddf:	mov    ecx,edx
6501fde1:	shl    edi,cl
6501fde3:	mov    DWORD PTR [ebp-0x4],0x20
6501fdea:	sub    DWORD PTR [ebp-0x4],edx
6501fded:	not    edi
6501fdef:	mov    ebx,DWORD PTR [ebp+0x8]
6501fdf2:	lea    ebx,[ebp+ebx*4-0x20]
6501fdf6:	mov    esi,DWORD PTR [ebx]
6501fdf8:	mov    ecx,esi
6501fdfa:	and    ecx,edi
6501fdfc:	mov    DWORD PTR [ebp-0x10],ecx
6501fdff:	mov    ecx,edx
6501fe01:	shr    esi,cl
6501fe03:	mov    ecx,DWORD PTR [ebp-0x4]
6501fe06:	or     esi,DWORD PTR [ebp-0xc]
6501fe09:	mov    DWORD PTR [ebx],esi
6501fe0b:	mov    esi,DWORD PTR [ebp-0x10]
6501fe0e:	shl    esi,cl
6501fe10:	inc    DWORD PTR [ebp+0x8]
6501fe13:	cmp    DWORD PTR [ebp+0x8],0x3
6501fe17:	mov    DWORD PTR [ebp-0xc],esi
6501fe1a:	jl     0x6501fdef
6501fe1c:	mov    esi,eax
6501fe1e:	push   0x2
6501fe20:	shl    esi,0x2
6501fe23:	lea    ecx,[ebp-0x18]
6501fe26:	pop    edx
6501fe27:	sub    ecx,esi
6501fe29:	cmp    edx,eax
6501fe2b:	jl     0x6501fe35
6501fe2d:	mov    esi,DWORD PTR [ecx]
6501fe2f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6501fe33:	jmp    0x6501fe3a
6501fe35:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6501fe3a:	dec    edx
6501fe3b:	sub    ecx,0x4
6501fe3e:	test   edx,edx
6501fe40:	jge    0x6501fe29
6501fe42:	mov    esi,DWORD PTR ds:0x6502d078
6501fe48:	dec    esi
6501fe49:	lea    ecx,[esi+0x1]
6501fe4c:	mov    eax,ecx
6501fe4e:	cdq    
6501fe4f:	and    edx,0x1f
6501fe52:	add    eax,edx
6501fe54:	sar    eax,0x5
6501fe57:	mov    edx,ecx
6501fe59:	and    edx,0x8000001f
6501fe5f:	mov    DWORD PTR [ebp-0xc],eax
6501fe62:	jns    0x6501fe69
6501fe64:	dec    edx
6501fe65:	or     edx,0xffffffe0
6501fe68:	inc    edx
6501fe69:	push   0x1f
6501fe6b:	pop    ecx
6501fe6c:	sub    ecx,edx
6501fe6e:	xor    edx,edx
6501fe70:	inc    edx
6501fe71:	shl    edx,cl
6501fe73:	lea    ebx,[ebp+eax*4-0x20]
6501fe77:	mov    DWORD PTR [ebp-0x10],ecx
6501fe7a:	test   DWORD PTR [ebx],edx
6501fe7c:	je     0x6501ff04
6501fe82:	or     edx,0xffffffff
6501fe85:	shl    edx,cl
6501fe87:	not    edx
6501fe89:	test   DWORD PTR [ebp+eax*4-0x20],edx
6501fe8d:	jmp    0x6501fe94
6501fe8f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6501fe94:	jne    0x6501fe9e
6501fe96:	inc    eax
6501fe97:	cmp    eax,0x3
6501fe9a:	jl     0x6501fe8f
6501fe9c:	jmp    0x6501ff04
6501fe9e:	mov    eax,esi
6501fea0:	cdq    
6501fea1:	push   0x1f
6501fea3:	pop    ecx
6501fea4:	and    edx,ecx
6501fea6:	add    eax,edx
6501fea8:	sar    eax,0x5
6501feab:	and    esi,0x8000001f
6501feb1:	jns    0x6501feb8
6501feb3:	dec    esi
6501feb4:	or     esi,0xffffffe0
6501feb7:	inc    esi
6501feb8:	and    DWORD PTR [ebp+0x8],0x0
6501febc:	xor    edx,edx
6501febe:	sub    ecx,esi
6501fec0:	inc    edx
6501fec1:	shl    edx,cl
6501fec3:	lea    ecx,[ebp+eax*4-0x20]
6501fec7:	mov    esi,DWORD PTR [ecx]
6501fec9:	lea    edi,[esi+edx*1]
6501fecc:	cmp    edi,esi
6501fece:	jb     0x6501fed4
6501fed0:	cmp    edi,edx
6501fed2:	jae    0x6501fedb
6501fed4:	mov    DWORD PTR [ebp+0x8],0x1
6501fedb:	mov    DWORD PTR [ecx],edi
6501fedd:	mov    ecx,DWORD PTR [ebp+0x8]
6501fee0:	jmp    0x6501ff01
6501fee2:	test   ecx,ecx
6501fee4:	je     0x6501ff04
6501fee6:	lea    ecx,[ebp+eax*4-0x20]
6501feea:	mov    edx,DWORD PTR [ecx]
6501feec:	lea    esi,[edx+0x1]
6501feef:	xor    edi,edi
6501fef1:	cmp    esi,edx
6501fef3:	jb     0x6501fefa
6501fef5:	cmp    esi,0x1
6501fef8:	jae    0x6501fefd
6501fefa:	xor    edi,edi
6501fefc:	inc    edi
6501fefd:	mov    DWORD PTR [ecx],esi
6501feff:	mov    ecx,edi
6501ff01:	dec    eax
6501ff02:	jns    0x6501fee2
6501ff04:	mov    ecx,DWORD PTR [ebp-0x10]
6501ff07:	or     eax,0xffffffff
6501ff0a:	shl    eax,cl
6501ff0c:	and    DWORD PTR [ebx],eax
6501ff0e:	mov    eax,DWORD PTR [ebp-0xc]
6501ff11:	inc    eax
6501ff12:	cmp    eax,0x3
6501ff15:	jge    0x6501ff24
6501ff17:	push   0x3
6501ff19:	pop    ecx
6501ff1a:	lea    edi,[ebp+eax*4-0x20]
6501ff1e:	sub    ecx,eax
6501ff20:	xor    eax,eax
6501ff22:	rep stos DWORD PTR es:[edi],eax
6501ff24:	mov    ecx,DWORD PTR ds:0x6502d07c
6501ff2a:	inc    ecx
6501ff2b:	mov    eax,ecx
6501ff2d:	cdq    
6501ff2e:	and    edx,0x1f
6501ff31:	add    eax,edx
6501ff33:	mov    edx,ecx
6501ff35:	sar    eax,0x5
6501ff38:	and    edx,0x8000001f
6501ff3e:	jns    0x6501ff45
6501ff40:	dec    edx
6501ff41:	or     edx,0xffffffe0
6501ff44:	inc    edx
6501ff45:	and    DWORD PTR [ebp-0xc],0x0
6501ff49:	and    DWORD PTR [ebp+0x8],0x0
6501ff4d:	or     edi,0xffffffff
6501ff50:	mov    ecx,edx
6501ff52:	shl    edi,cl
6501ff54:	mov    DWORD PTR [ebp-0x4],0x20
6501ff5b:	sub    DWORD PTR [ebp-0x4],edx
6501ff5e:	not    edi
6501ff60:	mov    ebx,DWORD PTR [ebp+0x8]
6501ff63:	lea    ebx,[ebp+ebx*4-0x20]
6501ff67:	mov    esi,DWORD PTR [ebx]
6501ff69:	mov    ecx,esi
6501ff6b:	and    ecx,edi
6501ff6d:	mov    DWORD PTR [ebp-0x10],ecx
6501ff70:	mov    ecx,edx
6501ff72:	shr    esi,cl
6501ff74:	mov    ecx,DWORD PTR [ebp-0x4]
6501ff77:	or     esi,DWORD PTR [ebp-0xc]
6501ff7a:	mov    DWORD PTR [ebx],esi
6501ff7c:	mov    esi,DWORD PTR [ebp-0x10]
6501ff7f:	shl    esi,cl
6501ff81:	inc    DWORD PTR [ebp+0x8]
6501ff84:	cmp    DWORD PTR [ebp+0x8],0x3
6501ff88:	mov    DWORD PTR [ebp-0xc],esi
6501ff8b:	jl     0x6501ff60
6501ff8d:	mov    esi,eax
6501ff8f:	push   0x2
6501ff91:	shl    esi,0x2
6501ff94:	lea    ecx,[ebp-0x18]
6501ff97:	pop    edx
6501ff98:	sub    ecx,esi
6501ff9a:	cmp    edx,eax
6501ff9c:	jl     0x6501ffa6
6501ff9e:	mov    esi,DWORD PTR [ecx]
6501ffa0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6501ffa4:	jmp    0x6501ffab
6501ffa6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6501ffab:	dec    edx
6501ffac:	sub    ecx,0x4
6501ffaf:	test   edx,edx
6501ffb1:	jge    0x6501ff9a
6501ffb3:	push   0x2
6501ffb5:	xor    ebx,ebx
6501ffb7:	pop    eax
6501ffb8:	jmp    0x65020117
6501ffbd:	cmp    ebx,DWORD PTR ds:0x6502d070
6501ffc3:	mov    ecx,DWORD PTR ds:0x6502d07c
6501ffc9:	jl     0x6502007c
6501ffcf:	xor    eax,eax
6501ffd1:	lea    edi,[ebp-0x20]
6501ffd4:	stos   DWORD PTR es:[edi],eax
6501ffd5:	stos   DWORD PTR es:[edi],eax
6501ffd6:	stos   DWORD PTR es:[edi],eax
6501ffd7:	or     DWORD PTR [ebp-0x20],0x80000000
6501ffde:	mov    eax,ecx
6501ffe0:	cdq    
6501ffe1:	and    edx,0x1f
6501ffe4:	add    eax,edx
6501ffe6:	mov    edx,ecx
6501ffe8:	sar    eax,0x5
6501ffeb:	and    edx,0x8000001f
6501fff1:	jns    0x6501fff8
6501fff3:	dec    edx
6501fff4:	or     edx,0xffffffe0
6501fff7:	inc    edx
6501fff8:	and    DWORD PTR [ebp-0xc],0x0
6501fffc:	and    DWORD PTR [ebp+0x8],0x0
65020000:	or     edi,0xffffffff
65020003:	mov    ecx,edx
65020005:	shl    edi,cl
65020007:	mov    DWORD PTR [ebp-0x4],0x20
6502000e:	sub    DWORD PTR [ebp-0x4],edx
65020011:	not    edi
65020013:	mov    ebx,DWORD PTR [ebp+0x8]
65020016:	lea    ebx,[ebp+ebx*4-0x20]
6502001a:	mov    esi,DWORD PTR [ebx]
6502001c:	mov    ecx,esi
6502001e:	and    ecx,edi
65020020:	mov    DWORD PTR [ebp-0x10],ecx
65020023:	mov    ecx,edx
65020025:	shr    esi,cl
65020027:	mov    ecx,DWORD PTR [ebp-0x4]
6502002a:	or     esi,DWORD PTR [ebp-0xc]
6502002d:	mov    DWORD PTR [ebx],esi
6502002f:	mov    esi,DWORD PTR [ebp-0x10]
65020032:	shl    esi,cl
65020034:	inc    DWORD PTR [ebp+0x8]
65020037:	cmp    DWORD PTR [ebp+0x8],0x3
6502003b:	mov    DWORD PTR [ebp-0xc],esi
6502003e:	jl     0x65020013
65020040:	mov    esi,eax
65020042:	push   0x2
65020044:	shl    esi,0x2
65020047:	lea    ecx,[ebp-0x18]
6502004a:	pop    edx
6502004b:	sub    ecx,esi
6502004d:	cmp    edx,eax
6502004f:	jl     0x65020059
65020051:	mov    esi,DWORD PTR [ecx]
65020053:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020057:	jmp    0x6502005e
65020059:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502005e:	dec    edx
6502005f:	sub    ecx,0x4
65020062:	test   edx,edx
65020064:	jge    0x6502004d
65020066:	mov    eax,ds:0x6502d070
6502006b:	mov    ecx,DWORD PTR ds:0x6502d084
65020071:	lea    ebx,[ecx+eax*1]
65020074:	xor    eax,eax
65020076:	inc    eax
65020077:	jmp    0x65020117
6502007c:	mov    eax,ds:0x6502d084
65020081:	and    DWORD PTR [ebp-0x20],0x7fffffff
65020088:	add    ebx,eax
6502008a:	mov    eax,ecx
6502008c:	cdq    
6502008d:	and    edx,0x1f
65020090:	add    eax,edx
65020092:	mov    edx,ecx
65020094:	sar    eax,0x5
65020097:	and    edx,0x8000001f
6502009d:	jns    0x650200a4
6502009f:	dec    edx
650200a0:	or     edx,0xffffffe0
650200a3:	inc    edx
650200a4:	and    DWORD PTR [ebp-0xc],0x0
650200a8:	and    DWORD PTR [ebp+0x8],0x0
650200ac:	or     esi,0xffffffff
650200af:	mov    ecx,edx
650200b1:	shl    esi,cl
650200b3:	mov    DWORD PTR [ebp-0x4],0x20
650200ba:	sub    DWORD PTR [ebp-0x4],edx
650200bd:	not    esi
650200bf:	mov    ecx,DWORD PTR [ebp+0x8]
650200c2:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
650200c6:	mov    ecx,edi
650200c8:	and    ecx,esi
650200ca:	mov    DWORD PTR [ebp-0x10],ecx
650200cd:	mov    ecx,edx
650200cf:	shr    edi,cl
650200d1:	mov    ecx,DWORD PTR [ebp+0x8]
650200d4:	or     edi,DWORD PTR [ebp-0xc]
650200d7:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
650200db:	mov    edi,DWORD PTR [ebp-0x10]
650200de:	mov    ecx,DWORD PTR [ebp-0x4]
650200e1:	shl    edi,cl
650200e3:	inc    DWORD PTR [ebp+0x8]
650200e6:	cmp    DWORD PTR [ebp+0x8],0x3
650200ea:	mov    DWORD PTR [ebp-0xc],edi
650200ed:	jl     0x650200bf
650200ef:	mov    esi,eax
650200f1:	push   0x2
650200f3:	shl    esi,0x2
650200f6:	lea    ecx,[ebp-0x18]
650200f9:	pop    edx
650200fa:	sub    ecx,esi
650200fc:	cmp    edx,eax
650200fe:	jl     0x65020108
65020100:	mov    esi,DWORD PTR [ecx]
65020102:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020106:	jmp    0x6502010d
65020108:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502010d:	dec    edx
6502010e:	sub    ecx,0x4
65020111:	test   edx,edx
65020113:	jge    0x650200fc
65020115:	xor    eax,eax
65020117:	pop    esi
65020118:	push   0x1f
6502011a:	pop    ecx
6502011b:	sub    ecx,DWORD PTR ds:0x6502d07c
65020121:	shl    ebx,cl
65020123:	mov    ecx,DWORD PTR [ebp-0x14]
65020126:	neg    ecx
65020128:	sbb    ecx,ecx
6502012a:	and    ecx,0x80000000
65020130:	or     ebx,ecx
65020132:	mov    ecx,DWORD PTR ds:0x6502d080
65020138:	or     ebx,DWORD PTR [ebp-0x20]
6502013b:	cmp    ecx,0x40
6502013e:	jne    0x6502014d
65020140:	mov    ecx,DWORD PTR [ebp+0xc]
65020143:	mov    edx,DWORD PTR [ebp-0x1c]
65020146:	mov    DWORD PTR [ecx+0x4],ebx
65020149:	mov    DWORD PTR [ecx],edx
6502014b:	jmp    0x65020157
6502014d:	cmp    ecx,0x20
65020150:	jne    0x65020157
65020152:	mov    ecx,DWORD PTR [ebp+0xc]
65020155:	mov    DWORD PTR [ecx],ebx
65020157:	pop    edi
65020158:	pop    ebx
65020159:	leave  
6502015a:	ret    
6502015b:	push   ebp
6502015c:	mov    ebp,esp
6502015e:	sub    esp,0x2c
65020161:	mov    eax,DWORD PTR [ebp+0x8]
65020164:	movzx  ecx,WORD PTR [eax+0xa]
65020168:	push   ebx
65020169:	mov    ebx,ecx
6502016b:	and    ecx,0x8000
65020171:	mov    DWORD PTR [ebp-0x14],ecx
65020174:	mov    ecx,DWORD PTR [eax+0x6]
65020177:	mov    DWORD PTR [ebp-0x20],ecx
6502017a:	mov    ecx,DWORD PTR [eax+0x2]
6502017d:	movzx  eax,WORD PTR [eax]
65020180:	and    ebx,0x7fff
65020186:	sub    ebx,0x3fff
6502018c:	shl    eax,0x10
6502018f:	cmp    ebx,0xffffc001
65020195:	push   edi
65020196:	mov    DWORD PTR [ebp-0x1c],ecx
65020199:	mov    DWORD PTR [ebp-0x18],eax
6502019c:	jne    0x650201c5
6502019e:	xor    ebx,ebx
650201a0:	xor    eax,eax
650201a2:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
650201a6:	jne    0x650201b5
650201a8:	inc    eax
650201a9:	cmp    eax,0x3
650201ac:	jl     0x650201a2
650201ae:	xor    eax,eax
650201b0:	jmp    0x6502065a
650201b5:	xor    eax,eax
650201b7:	lea    edi,[ebp-0x20]
650201ba:	stos   DWORD PTR es:[edi],eax
650201bb:	stos   DWORD PTR es:[edi],eax
650201bc:	push   0x2
650201be:	stos   DWORD PTR es:[edi],eax
650201bf:	pop    eax
650201c0:	jmp    0x6502065a
650201c5:	and    DWORD PTR [ebp+0x8],0x0
650201c9:	push   esi
650201ca:	lea    esi,[ebp-0x20]
650201cd:	lea    edi,[ebp-0x2c]
650201d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650201d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650201d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650201d3:	mov    esi,DWORD PTR ds:0x6502d090
650201d9:	dec    esi
650201da:	lea    ecx,[esi+0x1]
650201dd:	mov    eax,ecx
650201df:	cdq    
650201e0:	and    edx,0x1f
650201e3:	add    eax,edx
650201e5:	sar    eax,0x5
650201e8:	mov    edx,ecx
650201ea:	and    edx,0x8000001f
650201f0:	mov    DWORD PTR [ebp-0x10],ebx
650201f3:	mov    DWORD PTR [ebp-0xc],eax
650201f6:	jns    0x650201fd
650201f8:	dec    edx
650201f9:	or     edx,0xffffffe0
650201fc:	inc    edx
650201fd:	lea    edi,[ebp+eax*4-0x20]
65020201:	push   0x1f
65020203:	xor    eax,eax
65020205:	pop    ecx
65020206:	sub    ecx,edx
65020208:	inc    eax
65020209:	shl    eax,cl
6502020b:	mov    DWORD PTR [ebp-0x8],ecx
6502020e:	test   DWORD PTR [edi],eax
65020210:	je     0x650202a3
65020216:	mov    eax,DWORD PTR [ebp-0xc]
65020219:	or     edx,0xffffffff
6502021c:	shl    edx,cl
6502021e:	not    edx
65020220:	test   DWORD PTR [ebp+eax*4-0x20],edx
65020224:	jmp    0x6502022b
65020226:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6502022b:	jne    0x65020235
6502022d:	inc    eax
6502022e:	cmp    eax,0x3
65020231:	jl     0x65020226
65020233:	jmp    0x650202a3
65020235:	mov    eax,esi
65020237:	cdq    
65020238:	push   0x1f
6502023a:	pop    ecx
6502023b:	and    edx,ecx
6502023d:	add    eax,edx
6502023f:	sar    eax,0x5
65020242:	and    esi,0x8000001f
65020248:	jns    0x6502024f
6502024a:	dec    esi
6502024b:	or     esi,0xffffffe0
6502024e:	inc    esi
6502024f:	and    DWORD PTR [ebp-0x4],0x0
65020253:	sub    ecx,esi
65020255:	xor    edx,edx
65020257:	inc    edx
65020258:	shl    edx,cl
6502025a:	lea    ecx,[ebp+eax*4-0x20]
6502025e:	mov    esi,DWORD PTR [ecx]
65020260:	add    esi,edx
65020262:	mov    DWORD PTR [ebp+0x8],esi
65020265:	mov    esi,DWORD PTR [ecx]
65020267:	cmp    DWORD PTR [ebp+0x8],esi
6502026a:	jb     0x6502028e
6502026c:	cmp    DWORD PTR [ebp+0x8],edx
6502026f:	jmp    0x6502028c
65020271:	test   ecx,ecx
65020273:	je     0x650202a0
65020275:	and    DWORD PTR [ebp-0x4],0x0
65020279:	lea    ecx,[ebp+eax*4-0x20]
6502027d:	mov    edx,DWORD PTR [ecx]
6502027f:	lea    esi,[edx+0x1]
65020282:	cmp    esi,edx
65020284:	mov    DWORD PTR [ebp+0x8],esi
65020287:	jb     0x6502028e
65020289:	cmp    esi,0x1
6502028c:	jae    0x65020295
6502028e:	mov    DWORD PTR [ebp-0x4],0x1
65020295:	dec    eax
65020296:	mov    edx,DWORD PTR [ebp+0x8]
65020299:	mov    DWORD PTR [ecx],edx
6502029b:	mov    ecx,DWORD PTR [ebp-0x4]
6502029e:	jns    0x65020271
650202a0:	mov    DWORD PTR [ebp+0x8],ecx
650202a3:	mov    ecx,DWORD PTR [ebp-0x8]
650202a6:	or     eax,0xffffffff
650202a9:	shl    eax,cl
650202ab:	and    DWORD PTR [edi],eax
650202ad:	mov    eax,DWORD PTR [ebp-0xc]
650202b0:	inc    eax
650202b1:	cmp    eax,0x3
650202b4:	jge    0x650202c3
650202b6:	push   0x3
650202b8:	pop    ecx
650202b9:	lea    edi,[ebp+eax*4-0x20]
650202bd:	sub    ecx,eax
650202bf:	xor    eax,eax
650202c1:	rep stos DWORD PTR es:[edi],eax
650202c3:	cmp    DWORD PTR [ebp+0x8],0x0
650202c7:	je     0x650202ca
650202c9:	inc    ebx
650202ca:	mov    eax,ds:0x6502d08c
650202cf:	mov    ecx,eax
650202d1:	sub    ecx,DWORD PTR ds:0x6502d090
650202d7:	cmp    ebx,ecx
650202d9:	jge    0x650202e8
650202db:	xor    eax,eax
650202dd:	lea    edi,[ebp-0x20]
650202e0:	stos   DWORD PTR es:[edi],eax
650202e1:	stos   DWORD PTR es:[edi],eax
650202e2:	stos   DWORD PTR es:[edi],eax
650202e3:	jmp    0x650204f5
650202e8:	cmp    ebx,eax
650202ea:	jg     0x650204ff
650202f0:	sub    eax,DWORD PTR [ebp-0x10]
650202f3:	lea    esi,[ebp-0x2c]
650202f6:	mov    ecx,eax
650202f8:	lea    edi,[ebp-0x20]
650202fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650202fc:	cdq    
650202fd:	and    edx,0x1f
65020300:	add    eax,edx
65020302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020303:	mov    edx,ecx
65020305:	sar    eax,0x5
65020308:	and    edx,0x8000001f
6502030e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6502030f:	jns    0x65020316
65020311:	dec    edx
65020312:	or     edx,0xffffffe0
65020315:	inc    edx
65020316:	and    DWORD PTR [ebp-0xc],0x0
6502031a:	and    DWORD PTR [ebp+0x8],0x0
6502031e:	or     edi,0xffffffff
65020321:	mov    ecx,edx
65020323:	shl    edi,cl
65020325:	mov    DWORD PTR [ebp-0x4],0x20
6502032c:	sub    DWORD PTR [ebp-0x4],edx
6502032f:	not    edi
65020331:	mov    ebx,DWORD PTR [ebp+0x8]
65020334:	lea    ebx,[ebp+ebx*4-0x20]
65020338:	mov    esi,DWORD PTR [ebx]
6502033a:	mov    ecx,esi
6502033c:	and    ecx,edi
6502033e:	mov    DWORD PTR [ebp-0x10],ecx
65020341:	mov    ecx,edx
65020343:	shr    esi,cl
65020345:	mov    ecx,DWORD PTR [ebp-0x4]
65020348:	or     esi,DWORD PTR [ebp-0xc]
6502034b:	mov    DWORD PTR [ebx],esi
6502034d:	mov    esi,DWORD PTR [ebp-0x10]
65020350:	shl    esi,cl
65020352:	inc    DWORD PTR [ebp+0x8]
65020355:	cmp    DWORD PTR [ebp+0x8],0x3
65020359:	mov    DWORD PTR [ebp-0xc],esi
6502035c:	jl     0x65020331
6502035e:	mov    esi,eax
65020360:	push   0x2
65020362:	shl    esi,0x2
65020365:	lea    ecx,[ebp-0x18]
65020368:	pop    edx
65020369:	sub    ecx,esi
6502036b:	cmp    edx,eax
6502036d:	jl     0x65020377
6502036f:	mov    esi,DWORD PTR [ecx]
65020371:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020375:	jmp    0x6502037c
65020377:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502037c:	dec    edx
6502037d:	sub    ecx,0x4
65020380:	test   edx,edx
65020382:	jge    0x6502036b
65020384:	mov    esi,DWORD PTR ds:0x6502d090
6502038a:	dec    esi
6502038b:	lea    ecx,[esi+0x1]
6502038e:	mov    eax,ecx
65020390:	cdq    
65020391:	and    edx,0x1f
65020394:	add    eax,edx
65020396:	sar    eax,0x5
65020399:	mov    edx,ecx
6502039b:	and    edx,0x8000001f
650203a1:	mov    DWORD PTR [ebp-0xc],eax
650203a4:	jns    0x650203ab
650203a6:	dec    edx
650203a7:	or     edx,0xffffffe0
650203aa:	inc    edx
650203ab:	push   0x1f
650203ad:	pop    ecx
650203ae:	sub    ecx,edx
650203b0:	xor    edx,edx
650203b2:	inc    edx
650203b3:	shl    edx,cl
650203b5:	lea    ebx,[ebp+eax*4-0x20]
650203b9:	mov    DWORD PTR [ebp-0x10],ecx
650203bc:	test   DWORD PTR [ebx],edx
650203be:	je     0x65020446
650203c4:	or     edx,0xffffffff
650203c7:	shl    edx,cl
650203c9:	not    edx
650203cb:	test   DWORD PTR [ebp+eax*4-0x20],edx
650203cf:	jmp    0x650203d6
650203d1:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
650203d6:	jne    0x650203e0
650203d8:	inc    eax
650203d9:	cmp    eax,0x3
650203dc:	jl     0x650203d1
650203de:	jmp    0x65020446
650203e0:	mov    eax,esi
650203e2:	cdq    
650203e3:	push   0x1f
650203e5:	pop    ecx
650203e6:	and    edx,ecx
650203e8:	add    eax,edx
650203ea:	sar    eax,0x5
650203ed:	and    esi,0x8000001f
650203f3:	jns    0x650203fa
650203f5:	dec    esi
650203f6:	or     esi,0xffffffe0
650203f9:	inc    esi
650203fa:	and    DWORD PTR [ebp+0x8],0x0
650203fe:	xor    edx,edx
65020400:	sub    ecx,esi
65020402:	inc    edx
65020403:	shl    edx,cl
65020405:	lea    ecx,[ebp+eax*4-0x20]
65020409:	mov    esi,DWORD PTR [ecx]
6502040b:	lea    edi,[esi+edx*1]
6502040e:	cmp    edi,esi
65020410:	jb     0x65020416
65020412:	cmp    edi,edx
65020414:	jae    0x6502041d
65020416:	mov    DWORD PTR [ebp+0x8],0x1
6502041d:	mov    DWORD PTR [ecx],edi
6502041f:	mov    ecx,DWORD PTR [ebp+0x8]
65020422:	jmp    0x65020443
65020424:	test   ecx,ecx
65020426:	je     0x65020446
65020428:	lea    ecx,[ebp+eax*4-0x20]
6502042c:	mov    edx,DWORD PTR [ecx]
6502042e:	lea    esi,[edx+0x1]
65020431:	xor    edi,edi
65020433:	cmp    esi,edx
65020435:	jb     0x6502043c
65020437:	cmp    esi,0x1
6502043a:	jae    0x6502043f
6502043c:	xor    edi,edi
6502043e:	inc    edi
6502043f:	mov    DWORD PTR [ecx],esi
65020441:	mov    ecx,edi
65020443:	dec    eax
65020444:	jns    0x65020424
65020446:	mov    ecx,DWORD PTR [ebp-0x10]
65020449:	or     eax,0xffffffff
6502044c:	shl    eax,cl
6502044e:	and    DWORD PTR [ebx],eax
65020450:	mov    eax,DWORD PTR [ebp-0xc]
65020453:	inc    eax
65020454:	cmp    eax,0x3
65020457:	jge    0x65020466
65020459:	push   0x3
6502045b:	pop    ecx
6502045c:	lea    edi,[ebp+eax*4-0x20]
65020460:	sub    ecx,eax
65020462:	xor    eax,eax
65020464:	rep stos DWORD PTR es:[edi],eax
65020466:	mov    ecx,DWORD PTR ds:0x6502d094
6502046c:	inc    ecx
6502046d:	mov    eax,ecx
6502046f:	cdq    
65020470:	and    edx,0x1f
65020473:	add    eax,edx
65020475:	mov    edx,ecx
65020477:	sar    eax,0x5
6502047a:	and    edx,0x8000001f
65020480:	jns    0x65020487
65020482:	dec    edx
65020483:	or     edx,0xffffffe0
65020486:	inc    edx
65020487:	and    DWORD PTR [ebp-0xc],0x0
6502048b:	and    DWORD PTR [ebp+0x8],0x0
6502048f:	or     edi,0xffffffff
65020492:	mov    ecx,edx
65020494:	shl    edi,cl
65020496:	mov    DWORD PTR [ebp-0x4],0x20
6502049d:	sub    DWORD PTR [ebp-0x4],edx
650204a0:	not    edi
650204a2:	mov    ebx,DWORD PTR [ebp+0x8]
650204a5:	lea    ebx,[ebp+ebx*4-0x20]
650204a9:	mov    esi,DWORD PTR [ebx]
650204ab:	mov    ecx,esi
650204ad:	and    ecx,edi
650204af:	mov    DWORD PTR [ebp-0x10],ecx
650204b2:	mov    ecx,edx
650204b4:	shr    esi,cl
650204b6:	mov    ecx,DWORD PTR [ebp-0x4]
650204b9:	or     esi,DWORD PTR [ebp-0xc]
650204bc:	mov    DWORD PTR [ebx],esi
650204be:	mov    esi,DWORD PTR [ebp-0x10]
650204c1:	shl    esi,cl
650204c3:	inc    DWORD PTR [ebp+0x8]
650204c6:	cmp    DWORD PTR [ebp+0x8],0x3
650204ca:	mov    DWORD PTR [ebp-0xc],esi
650204cd:	jl     0x650204a2
650204cf:	mov    esi,eax
650204d1:	push   0x2
650204d3:	shl    esi,0x2
650204d6:	lea    ecx,[ebp-0x18]
650204d9:	pop    edx
650204da:	sub    ecx,esi
650204dc:	cmp    edx,eax
650204de:	jl     0x650204e8
650204e0:	mov    esi,DWORD PTR [ecx]
650204e2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
650204e6:	jmp    0x650204ed
650204e8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650204ed:	dec    edx
650204ee:	sub    ecx,0x4
650204f1:	test   edx,edx
650204f3:	jge    0x650204dc
650204f5:	push   0x2
650204f7:	xor    ebx,ebx
650204f9:	pop    eax
650204fa:	jmp    0x65020659
650204ff:	cmp    ebx,DWORD PTR ds:0x6502d088
65020505:	mov    ecx,DWORD PTR ds:0x6502d094
6502050b:	jl     0x650205be
65020511:	xor    eax,eax
65020513:	lea    edi,[ebp-0x20]
65020516:	stos   DWORD PTR es:[edi],eax
65020517:	stos   DWORD PTR es:[edi],eax
65020518:	stos   DWORD PTR es:[edi],eax
65020519:	or     DWORD PTR [ebp-0x20],0x80000000
65020520:	mov    eax,ecx
65020522:	cdq    
65020523:	and    edx,0x1f
65020526:	add    eax,edx
65020528:	mov    edx,ecx
6502052a:	sar    eax,0x5
6502052d:	and    edx,0x8000001f
65020533:	jns    0x6502053a
65020535:	dec    edx
65020536:	or     edx,0xffffffe0
65020539:	inc    edx
6502053a:	and    DWORD PTR [ebp-0xc],0x0
6502053e:	and    DWORD PTR [ebp+0x8],0x0
65020542:	or     edi,0xffffffff
65020545:	mov    ecx,edx
65020547:	shl    edi,cl
65020549:	mov    DWORD PTR [ebp-0x4],0x20
65020550:	sub    DWORD PTR [ebp-0x4],edx
65020553:	not    edi
65020555:	mov    ebx,DWORD PTR [ebp+0x8]
65020558:	lea    ebx,[ebp+ebx*4-0x20]
6502055c:	mov    esi,DWORD PTR [ebx]
6502055e:	mov    ecx,esi
65020560:	and    ecx,edi
65020562:	mov    DWORD PTR [ebp-0x10],ecx
65020565:	mov    ecx,edx
65020567:	shr    esi,cl
65020569:	mov    ecx,DWORD PTR [ebp-0x4]
6502056c:	or     esi,DWORD PTR [ebp-0xc]
6502056f:	mov    DWORD PTR [ebx],esi
65020571:	mov    esi,DWORD PTR [ebp-0x10]
65020574:	shl    esi,cl
65020576:	inc    DWORD PTR [ebp+0x8]
65020579:	cmp    DWORD PTR [ebp+0x8],0x3
6502057d:	mov    DWORD PTR [ebp-0xc],esi
65020580:	jl     0x65020555
65020582:	mov    esi,eax
65020584:	push   0x2
65020586:	shl    esi,0x2
65020589:	lea    ecx,[ebp-0x18]
6502058c:	pop    edx
6502058d:	sub    ecx,esi
6502058f:	cmp    edx,eax
65020591:	jl     0x6502059b
65020593:	mov    esi,DWORD PTR [ecx]
65020595:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020599:	jmp    0x650205a0
6502059b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
650205a0:	dec    edx
650205a1:	sub    ecx,0x4
650205a4:	test   edx,edx
650205a6:	jge    0x6502058f
650205a8:	mov    eax,ds:0x6502d088
650205ad:	mov    ecx,DWORD PTR ds:0x6502d09c
650205b3:	lea    ebx,[ecx+eax*1]
650205b6:	xor    eax,eax
650205b8:	inc    eax
650205b9:	jmp    0x65020659
650205be:	mov    eax,ds:0x6502d09c
650205c3:	and    DWORD PTR [ebp-0x20],0x7fffffff
650205ca:	add    ebx,eax
650205cc:	mov    eax,ecx
650205ce:	cdq    
650205cf:	and    edx,0x1f
650205d2:	add    eax,edx
650205d4:	mov    edx,ecx
650205d6:	sar    eax,0x5
650205d9:	and    edx,0x8000001f
650205df:	jns    0x650205e6
650205e1:	dec    edx
650205e2:	or     edx,0xffffffe0
650205e5:	inc    edx
650205e6:	and    DWORD PTR [ebp-0xc],0x0
650205ea:	and    DWORD PTR [ebp+0x8],0x0
650205ee:	or     esi,0xffffffff
650205f1:	mov    ecx,edx
650205f3:	shl    esi,cl
650205f5:	mov    DWORD PTR [ebp-0x4],0x20
650205fc:	sub    DWORD PTR [ebp-0x4],edx
650205ff:	not    esi
65020601:	mov    ecx,DWORD PTR [ebp+0x8]
65020604:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
65020608:	mov    ecx,edi
6502060a:	and    ecx,esi
6502060c:	mov    DWORD PTR [ebp-0x10],ecx
6502060f:	mov    ecx,edx
65020611:	shr    edi,cl
65020613:	mov    ecx,DWORD PTR [ebp+0x8]
65020616:	or     edi,DWORD PTR [ebp-0xc]
65020619:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6502061d:	mov    edi,DWORD PTR [ebp-0x10]
65020620:	mov    ecx,DWORD PTR [ebp-0x4]
65020623:	shl    edi,cl
65020625:	inc    DWORD PTR [ebp+0x8]
65020628:	cmp    DWORD PTR [ebp+0x8],0x3
6502062c:	mov    DWORD PTR [ebp-0xc],edi
6502062f:	jl     0x65020601
65020631:	mov    esi,eax
65020633:	push   0x2
65020635:	shl    esi,0x2
65020638:	lea    ecx,[ebp-0x18]
6502063b:	pop    edx
6502063c:	sub    ecx,esi
6502063e:	cmp    edx,eax
65020640:	jl     0x6502064a
65020642:	mov    esi,DWORD PTR [ecx]
65020644:	mov    DWORD PTR [ebp+edx*4-0x20],esi
65020648:	jmp    0x6502064f
6502064a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6502064f:	dec    edx
65020650:	sub    ecx,0x4
65020653:	test   edx,edx
65020655:	jge    0x6502063e
65020657:	xor    eax,eax
65020659:	pop    esi
6502065a:	push   0x1f
6502065c:	pop    ecx
6502065d:	sub    ecx,DWORD PTR ds:0x6502d094
65020663:	shl    ebx,cl
65020665:	mov    ecx,DWORD PTR [ebp-0x14]
65020668:	neg    ecx
6502066a:	sbb    ecx,ecx
6502066c:	and    ecx,0x80000000
65020672:	or     ebx,ecx
65020674:	mov    ecx,DWORD PTR ds:0x6502d098
6502067a:	or     ebx,DWORD PTR [ebp-0x20]
6502067d:	cmp    ecx,0x40
65020680:	jne    0x6502068f
65020682:	mov    ecx,DWORD PTR [ebp+0xc]
65020685:	mov    edx,DWORD PTR [ebp-0x1c]
65020688:	mov    DWORD PTR [ecx+0x4],ebx
6502068b:	mov    DWORD PTR [ecx],edx
6502068d:	jmp    0x65020699
6502068f:	cmp    ecx,0x20
65020692:	jne    0x65020699
65020694:	mov    ecx,DWORD PTR [ebp+0xc]
65020697:	mov    DWORD PTR [ecx],ebx
65020699:	pop    edi
6502069a:	pop    ebx
6502069b:	leave  
6502069c:	ret    
6502069d:	push   ebp
6502069e:	mov    ebp,esp
650206a0:	sub    esp,0x7c
650206a3:	mov    eax,ds:0x6502c09c
650206a8:	xor    eax,ebp
650206aa:	mov    DWORD PTR [ebp-0x4],eax
650206ad:	mov    eax,DWORD PTR [ebp+0x8]
650206b0:	push   ebx
650206b1:	xor    ebx,ebx
650206b3:	push   esi
650206b4:	xor    esi,esi
650206b6:	mov    DWORD PTR [ebp-0x7c],eax
650206b9:	mov    eax,DWORD PTR [ebp+0xc]
650206bc:	inc    esi
650206bd:	xor    ecx,ecx
650206bf:	cmp    DWORD PTR [ebp+0x24],ebx
650206c2:	push   edi
650206c3:	mov    DWORD PTR [ebp-0x70],eax
650206c6:	lea    edi,[ebp-0x20]
650206c9:	mov    DWORD PTR [ebp-0x74],ebx
650206cc:	mov    DWORD PTR [ebp-0x68],esi
650206cf:	mov    DWORD PTR [ebp-0x4c],ebx
650206d2:	mov    DWORD PTR [ebp-0x58],ebx
650206d5:	mov    DWORD PTR [ebp-0x5c],ebx
650206d8:	mov    DWORD PTR [ebp-0x60],ebx
650206db:	mov    DWORD PTR [ebp-0x64],ebx
650206de:	mov    DWORD PTR [ebp-0x50],ebx
650206e1:	mov    DWORD PTR [ebp-0x6c],ebx
650206e4:	jne    0x65020705
650206e6:	call   0x650143a0
650206eb:	push   ebx
650206ec:	push   ebx
650206ed:	push   ebx
650206ee:	push   ebx
650206ef:	push   ebx
650206f0:	mov    DWORD PTR [eax],0x16
650206f6:	call   0x6501224f
650206fb:	add    esp,0x14
650206fe:	xor    eax,eax
65020700:	jmp    0x65020d1e
65020705:	mov    edx,DWORD PTR [ebp+0x10]
65020708:	mov    DWORD PTR [ebp-0x54],edx
6502070b:	mov    al,BYTE PTR [edx]
6502070d:	cmp    al,0x20
6502070f:	je     0x6502071d
65020711:	cmp    al,0x9
65020713:	je     0x6502071d
65020715:	cmp    al,0xa
65020717:	je     0x6502071d
65020719:	cmp    al,0xd
6502071b:	jne    0x65020720
6502071d:	inc    edx
6502071e:	jmp    0x6502070b
65020720:	mov    bl,0x30
65020722:	mov    al,BYTE PTR [edx]
65020724:	inc    edx
65020725:	cmp    ecx,0xb
65020728:	ja     0x6502095d
6502072e:	jmp    DWORD PTR [ecx*4+0x65020d2d]
65020735:	mov    cl,al
65020737:	sub    cl,0x31
6502073a:	cmp    cl,0x8
6502073d:	ja     0x65020745
6502073f:	push   0x3
65020741:	pop    ecx
65020742:	dec    edx
65020743:	jmp    0x65020722
65020745:	mov    ecx,DWORD PTR [ebp+0x24]
65020748:	mov    ecx,DWORD PTR [ecx]
6502074a:	mov    ecx,DWORD PTR [ecx+0xbc]
65020750:	mov    ecx,DWORD PTR [ecx]
65020752:	cmp    al,BYTE PTR [ecx]
65020754:	jne    0x6502075b
65020756:	push   0x5
65020758:	pop    ecx
65020759:	jmp    0x65020722
6502075b:	movsx  eax,al
6502075e:	sub    eax,0x2b
65020761:	je     0x65020780
65020763:	dec    eax
65020764:	dec    eax
65020765:	je     0x65020774
65020767:	sub    eax,0x3
6502076a:	jne    0x650208fb
65020770:	mov    ecx,esi
65020772:	jmp    0x65020722
65020774:	push   0x2
65020776:	pop    ecx
65020777:	mov    DWORD PTR [ebp-0x74],0x8000
6502077e:	jmp    0x65020722
65020780:	and    DWORD PTR [ebp-0x74],0x0
65020784:	push   0x2
65020786:	pop    ecx
65020787:	jmp    0x65020722
65020789:	mov    cl,al
6502078b:	sub    cl,0x31
6502078e:	cmp    cl,0x8
65020791:	mov    DWORD PTR [ebp-0x58],esi
65020794:	jbe    0x6502073f
65020796:	mov    ecx,DWORD PTR [ebp+0x24]
65020799:	mov    ecx,DWORD PTR [ecx]
6502079b:	mov    ecx,DWORD PTR [ecx+0xbc]
650207a1:	mov    ecx,DWORD PTR [ecx]
650207a3:	cmp    al,BYTE PTR [ecx]
650207a5:	jne    0x650207ab
650207a7:	push   0x4
650207a9:	jmp    0x65020758
650207ab:	cmp    al,0x2b
650207ad:	je     0x650207d7
650207af:	cmp    al,0x2d
650207b1:	je     0x650207d7
650207b3:	cmp    al,bl
650207b5:	je     0x65020770
650207b7:	cmp    al,0x43
650207b9:	jle    0x650208fb
650207bf:	cmp    al,0x45
650207c1:	jle    0x650207d3
650207c3:	cmp    al,0x63
650207c5:	jle    0x650208fb
650207cb:	cmp    al,0x65
650207cd:	jg     0x650208fb
650207d3:	push   0x6
650207d5:	jmp    0x65020758
650207d7:	dec    edx
650207d8:	push   0xb
650207da:	jmp    0x65020758
650207df:	mov    cl,al
650207e1:	sub    cl,0x31
650207e4:	cmp    cl,0x8
650207e7:	jbe    0x6502073f
650207ed:	mov    ecx,DWORD PTR [ebp+0x24]
650207f0:	mov    ecx,DWORD PTR [ecx]
650207f2:	mov    ecx,DWORD PTR [ecx+0xbc]
650207f8:	mov    ecx,DWORD PTR [ecx]
650207fa:	cmp    al,BYTE PTR [ecx]
650207fc:	je     0x65020756
65020802:	cmp    al,bl
65020804:	je     0x65020770
6502080a:	mov    edx,DWORD PTR [ebp-0x54]
6502080d:	jmp    0x65020926
65020812:	mov    DWORD PTR [ebp-0x58],esi
65020815:	jmp    0x65020831
65020817:	cmp    al,0x39
65020819:	jg     0x65020835
6502081b:	cmp    DWORD PTR [ebp-0x4c],0x19
6502081f:	jae    0x6502082b
65020821:	inc    DWORD PTR [ebp-0x4c]
65020824:	sub    al,bl
65020826:	mov    BYTE PTR [edi],al
65020828:	inc    edi
65020829:	jmp    0x6502082e
6502082b:	inc    DWORD PTR [ebp-0x50]
6502082e:	mov    al,BYTE PTR [edx]
65020830:	inc    edx
65020831:	cmp    al,bl
65020833:	jge    0x65020817
65020835:	mov    ecx,DWORD PTR [ebp+0x24]
65020838:	mov    ecx,DWORD PTR [ecx]
6502083a:	mov    ecx,DWORD PTR [ecx+0xbc]
65020840:	mov    ecx,DWORD PTR [ecx]
65020842:	cmp    al,BYTE PTR [ecx]
65020844:	je     0x650207a7
6502084a:	cmp    al,0x2b
6502084c:	je     0x650207d7
6502084e:	cmp    al,0x2d
65020850:	je     0x650207d7
65020852:	jmp    0x650207b7
65020857:	cmp    DWORD PTR [ebp-0x4c],0x0
6502085b:	mov    DWORD PTR [ebp-0x58],esi
6502085e:	mov    DWORD PTR [ebp-0x5c],esi
65020861:	jne    0x65020889
65020863:	jmp    0x6502086b
65020865:	dec    DWORD PTR [ebp-0x50]
65020868:	mov    al,BYTE PTR [edx]
6502086a:	inc    edx
6502086b:	cmp    al,bl
6502086d:	je     0x65020865
6502086f:	jmp    0x65020889
65020871:	cmp    al,0x39
65020873:	jg     0x6502084a
65020875:	cmp    DWORD PTR [ebp-0x4c],0x19
65020879:	jae    0x65020886
6502087b:	inc    DWORD PTR [ebp-0x4c]
6502087e:	sub    al,bl
65020880:	mov    BYTE PTR [edi],al
65020882:	inc    edi
65020883:	dec    DWORD PTR [ebp-0x50]
65020886:	mov    al,BYTE PTR [edx]
65020888:	inc    edx
65020889:	cmp    al,bl
6502088b:	jge    0x65020871
6502088d:	jmp    0x6502084a
6502088f:	sub    al,bl
65020891:	cmp    al,0x9
65020893:	mov    DWORD PTR [ebp-0x5c],esi
65020896:	ja     0x6502080a
6502089c:	push   0x4
6502089e:	jmp    0x65020741
650208a3:	lea    ecx,[edx-0x2]
650208a6:	mov    DWORD PTR [ebp-0x54],ecx
650208a9:	mov    cl,al
650208ab:	sub    cl,0x31
650208ae:	cmp    cl,0x8
650208b1:	ja     0x650208ba
650208b3:	push   0x9
650208b5:	jmp    0x65020741
650208ba:	movsx  eax,al
650208bd:	sub    eax,0x2b
650208c0:	je     0x650208e2
650208c2:	dec    eax
650208c3:	dec    eax
650208c4:	je     0x650208d6
650208c6:	sub    eax,0x3
650208c9:	jne    0x6502080a
650208cf:	push   0x8
650208d1:	jmp    0x65020758
650208d6:	or     DWORD PTR [ebp-0x68],0xffffffff
650208da:	push   0x7
650208dc:	pop    ecx
650208dd:	jmp    0x65020722
650208e2:	push   0x7
650208e4:	jmp    0x65020758
650208e9:	mov    DWORD PTR [ebp-0x60],esi
650208ec:	jmp    0x650208f1
650208ee:	mov    al,BYTE PTR [edx]
650208f0:	inc    edx
650208f1:	cmp    al,bl
650208f3:	je     0x650208ee
650208f5:	sub    al,0x31
650208f7:	cmp    al,0x8
650208f9:	jbe    0x650208b3
650208fb:	dec    edx
650208fc:	jmp    0x65020926
650208fe:	mov    cl,al
65020900:	sub    cl,0x31
65020903:	cmp    cl,0x8
65020906:	jbe    0x650208b3
65020908:	cmp    al,bl
6502090a:	jmp    0x650208c9
6502090c:	cmp    DWORD PTR [ebp+0x20],0x0
65020910:	je     0x65020959
65020912:	movsx  eax,al
65020915:	sub    eax,0x2b
65020918:	lea    ecx,[edx-0x1]
6502091b:	mov    DWORD PTR [ebp-0x54],ecx
6502091e:	je     0x650208e2
65020920:	dec    eax
65020921:	dec    eax
65020922:	je     0x650208d6
65020924:	mov    edx,ecx
65020926:	cmp    DWORD PTR [ebp-0x58],0x0
6502092a:	mov    eax,DWORD PTR [ebp-0x70]
6502092d:	mov    DWORD PTR [eax],edx
6502092f:	je     0x65020cd9
65020935:	push   0x18
65020937:	pop    eax
65020938:	cmp    DWORD PTR [ebp-0x4c],eax
6502093b:	jbe    0x6502094d
6502093d:	cmp    BYTE PTR [ebp-0x9],0x5
65020941:	jl     0x65020946
65020943:	inc    BYTE PTR [ebp-0x9]
65020946:	dec    edi
65020947:	inc    DWORD PTR [ebp-0x50]
6502094a:	mov    DWORD PTR [ebp-0x4c],eax
6502094d:	cmp    DWORD PTR [ebp-0x4c],0x0
65020951:	jbe    0x65020d00
65020957:	jmp    0x650209b2
65020959:	push   0xa
6502095b:	pop    ecx
6502095c:	dec    edx
6502095d:	cmp    ecx,0xa
65020960:	jne    0x65020722
65020966:	jmp    0x65020926
65020968:	mov    DWORD PTR [ebp-0x60],esi
6502096b:	xor    ecx,ecx
6502096d:	jmp    0x65020988
6502096f:	cmp    al,0x39
65020971:	jg     0x65020993
65020973:	imul   ecx,ecx,0xa
65020976:	movsx  esi,al
65020979:	lea    ecx,[ecx+esi*1-0x30]
6502097d:	cmp    ecx,0x1450
65020983:	jg     0x6502098e
65020985:	mov    al,BYTE PTR [edx]
65020987:	inc    edx
65020988:	cmp    al,bl
6502098a:	jge    0x6502096f
6502098c:	jmp    0x65020993
6502098e:	mov    ecx,0x1451
65020993:	mov    DWORD PTR [ebp-0x64],ecx
65020996:	jmp    0x650209a3
65020998:	cmp    al,0x39
6502099a:	jg     0x650208fb
650209a0:	mov    al,BYTE PTR [edx]
650209a2:	inc    edx
650209a3:	cmp    al,bl
650209a5:	jge    0x65020998
650209a7:	jmp    0x650208fb
650209ac:	dec    DWORD PTR [ebp-0x4c]
650209af:	inc    DWORD PTR [ebp-0x50]
650209b2:	dec    edi
650209b3:	cmp    BYTE PTR [edi],0x0
650209b6:	je     0x650209ac
650209b8:	lea    eax,[ebp-0x3c]
650209bb:	push   eax
650209bc:	push   DWORD PTR [ebp-0x4c]
650209bf:	lea    eax,[ebp-0x20]
650209c2:	push   eax
650209c3:	call   0x65021a54
650209c8:	mov    eax,DWORD PTR [ebp-0x64]
650209cb:	xor    ecx,ecx
650209cd:	add    esp,0xc
650209d0:	cmp    DWORD PTR [ebp-0x68],ecx
650209d3:	jge    0x650209d7
650209d5:	neg    eax
650209d7:	add    eax,DWORD PTR [ebp-0x50]
650209da:	cmp    DWORD PTR [ebp-0x60],ecx
650209dd:	jne    0x650209e2
650209df:	add    eax,DWORD PTR [ebp+0x18]
650209e2:	cmp    DWORD PTR [ebp-0x5c],ecx
650209e5:	jne    0x650209ea
650209e7:	sub    eax,DWORD PTR [ebp+0x1c]
650209ea:	cmp    eax,0x1450
650209ef:	jg     0x65020ce2
650209f5:	cmp    eax,0xffffebb0
650209fa:	jl     0x65020cf9
65020a00:	mov    esi,0x6502d0a0
65020a05:	sub    esi,0x60
65020a08:	cmp    eax,ecx
65020a0a:	mov    DWORD PTR [ebp-0x54],eax
65020a0d:	je     0x65020cc7
65020a13:	jge    0x65020a22
65020a15:	neg    eax
65020a17:	mov    esi,0x6502d200
65020a1c:	mov    DWORD PTR [ebp-0x54],eax
65020a1f:	sub    esi,0x60
65020a22:	cmp    DWORD PTR [ebp+0x14],ecx
65020a25:	jne    0x65020a2b
65020a27:	mov    WORD PTR [ebp-0x3c],cx
65020a2b:	cmp    DWORD PTR [ebp-0x54],ecx
65020a2e:	je     0x65020cc7
65020a34:	mov    eax,DWORD PTR [ebp-0x54]
65020a37:	sar    DWORD PTR [ebp-0x54],0x3
65020a3b:	add    esi,0x54
65020a3e:	and    eax,0x7
65020a41:	test   eax,eax
65020a43:	mov    DWORD PTR [ebp-0x4c],esi
65020a46:	je     0x65020cbd
65020a4c:	imul   eax,eax,0xc
65020a4f:	add    eax,esi
65020a51:	mov    ebx,eax
65020a53:	cmp    WORD PTR [ebx],0x8000
65020a58:	mov    DWORD PTR [ebp-0x70],ebx
65020a5b:	jb     0x65020a71
65020a5d:	mov    esi,ebx
65020a5f:	lea    edi,[ebp-0x48]
65020a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020a65:	dec    DWORD PTR [ebp-0x46]
65020a68:	mov    esi,DWORD PTR [ebp-0x4c]
65020a6b:	lea    ebx,[ebp-0x48]
65020a6e:	mov    DWORD PTR [ebp-0x70],ebx
65020a71:	movzx  edx,WORD PTR [ebx+0xa]
65020a75:	mov    ecx,DWORD PTR [ebp-0x32]
65020a78:	xor    eax,eax
65020a7a:	mov    DWORD PTR [ebp-0x50],eax
65020a7d:	mov    DWORD PTR [ebp-0x2c],eax
65020a80:	mov    DWORD PTR [ebp-0x28],eax
65020a83:	mov    DWORD PTR [ebp-0x24],eax
65020a86:	mov    eax,edx
65020a88:	mov    edi,0x7fff
65020a8d:	xor    eax,ecx
65020a8f:	and    ecx,edi
65020a91:	and    edx,edi
65020a93:	and    eax,0x8000
65020a98:	cmp    cx,0x7fff
65020a9d:	lea    edi,[edx+ecx*1]
65020aa0:	movzx  edi,di
65020aa3:	jae    0x65020ca3
65020aa9:	cmp    dx,0x7fff
65020aae:	jae    0x65020ca3
65020ab4:	cmp    di,0xbffd
65020ab9:	ja     0x65020ca3
65020abf:	cmp    di,0x3fbf
65020ac4:	ja     0x65020ad3
65020ac6:	xor    eax,eax
65020ac8:	mov    DWORD PTR [ebp-0x38],eax
65020acb:	mov    DWORD PTR [ebp-0x3c],eax
65020ace:	jmp    0x65020cba
65020ad3:	test   cx,cx
65020ad6:	jne    0x65020af7
65020ad8:	inc    edi
65020ad9:	test   DWORD PTR [ebp-0x34],0x7fffffff
65020ae0:	jne    0x65020af7
65020ae2:	cmp    DWORD PTR [ebp-0x38],0x0
65020ae6:	jne    0x65020af7
65020ae8:	cmp    DWORD PTR [ebp-0x3c],0x0
65020aec:	jne    0x65020af7
65020aee:	and    WORD PTR [ebp-0x32],cx
65020af2:	jmp    0x65020cbd
65020af7:	xor    ecx,ecx
65020af9:	cmp    dx,cx
65020afc:	jne    0x65020b1f
65020afe:	inc    edi
65020aff:	test   DWORD PTR [ebx+0x8],0x7fffffff
65020b06:	jne    0x65020b1f
65020b08:	cmp    DWORD PTR [ebx+0x4],ecx
65020b0b:	jne    0x65020b1f
65020b0d:	cmp    DWORD PTR [ebx],ecx
65020b0f:	jne    0x65020b1f
65020b11:	mov    DWORD PTR [ebp-0x34],ecx
65020b14:	mov    DWORD PTR [ebp-0x38],ecx
65020b17:	mov    DWORD PTR [ebp-0x3c],ecx
65020b1a:	jmp    0x65020cbd
65020b1f:	and    DWORD PTR [ebp-0x68],ecx
65020b22:	lea    esi,[ebp-0x28]
65020b25:	mov    DWORD PTR [ebp-0x58],0x5
65020b2c:	mov    ecx,DWORD PTR [ebp-0x68]
65020b2f:	mov    edx,DWORD PTR [ebp-0x58]
65020b32:	add    ecx,ecx
65020b34:	test   edx,edx
65020b36:	mov    DWORD PTR [ebp-0x64],edx
65020b39:	jle    0x65020b90
65020b3b:	lea    ecx,[ebp+ecx*1-0x3c]
65020b3f:	add    ebx,0x8
65020b42:	mov    DWORD PTR [ebp-0x5c],ecx
65020b45:	mov    DWORD PTR [ebp-0x60],ebx
65020b48:	mov    ecx,DWORD PTR [ebp-0x60]
65020b4b:	mov    edx,DWORD PTR [ebp-0x5c]
65020b4e:	movzx  edx,WORD PTR [edx]
65020b51:	movzx  ecx,WORD PTR [ecx]
65020b54:	and    DWORD PTR [ebp-0x78],0x0
65020b58:	imul   ecx,edx
65020b5b:	mov    edx,DWORD PTR [esi-0x4]
65020b5e:	lea    ebx,[edx+ecx*1]
65020b61:	cmp    ebx,edx
65020b63:	jb     0x65020b69
65020b65:	cmp    ebx,ecx
65020b67:	jae    0x65020b70
65020b69:	mov    DWORD PTR [ebp-0x78],0x1
65020b70:	cmp    DWORD PTR [ebp-0x78],0x0
65020b74:	mov    DWORD PTR [esi-0x4],ebx
65020b77:	je     0x65020b7c
65020b79:	inc    WORD PTR [esi]
65020b7c:	add    DWORD PTR [ebp-0x5c],0x2
65020b80:	sub    DWORD PTR [ebp-0x60],0x2
65020b84:	dec    DWORD PTR [ebp-0x64]
65020b87:	cmp    DWORD PTR [ebp-0x64],0x0
65020b8b:	jg     0x65020b48
65020b8d:	mov    ebx,DWORD PTR [ebp-0x70]
65020b90:	inc    esi
65020b91:	inc    esi
65020b92:	inc    DWORD PTR [ebp-0x68]
65020b95:	dec    DWORD PTR [ebp-0x58]
65020b98:	cmp    DWORD PTR [ebp-0x58],0x0
65020b9c:	jg     0x65020b2c
65020b9e:	add    edi,0xc002
65020ba4:	test   di,di
65020ba7:	jle    0x65020be4
65020ba9:	test   DWORD PTR [ebp-0x24],0x80000000
65020bb0:	jne    0x65020bdf
65020bb2:	mov    esi,DWORD PTR [ebp-0x28]
65020bb5:	mov    ecx,DWORD PTR [ebp-0x2c]
65020bb8:	shl    DWORD PTR [ebp-0x2c],1
65020bbb:	shr    ecx,0x1f
65020bbe:	mov    edx,esi
65020bc0:	add    esi,esi
65020bc2:	or     esi,ecx
65020bc4:	mov    ecx,DWORD PTR [ebp-0x24]
65020bc7:	shr    edx,0x1f
65020bca:	add    ecx,ecx
65020bcc:	or     ecx,edx
65020bce:	add    edi,0xffff
65020bd4:	test   di,di
65020bd7:	mov    DWORD PTR [ebp-0x28],esi
65020bda:	mov    DWORD PTR [ebp-0x24],ecx
65020bdd:	jg     0x65020ba9
65020bdf:	test   di,di
65020be2:	jg     0x65020c31
65020be4:	add    edi,0xffff
65020bea:	test   di,di
65020bed:	jge    0x65020c31
65020bef:	mov    ecx,edi
65020bf1:	neg    ecx
65020bf3:	movzx  esi,cx
65020bf6:	add    edi,esi
65020bf8:	test   BYTE PTR [ebp-0x2c],0x1
65020bfc:	je     0x65020c01
65020bfe:	inc    DWORD PTR [ebp-0x50]
65020c01:	mov    ecx,DWORD PTR [ebp-0x24]
65020c04:	mov    ebx,DWORD PTR [ebp-0x28]
65020c07:	mov    edx,DWORD PTR [ebp-0x28]
65020c0a:	shr    DWORD PTR [ebp-0x24],1
65020c0d:	shl    ecx,0x1f
65020c10:	shr    ebx,1
65020c12:	or     ebx,ecx
65020c14:	mov    ecx,DWORD PTR [ebp-0x2c]
65020c17:	shl    edx,0x1f
65020c1a:	shr    ecx,1
65020c1c:	or     ecx,edx
65020c1e:	dec    esi
65020c1f:	mov    DWORD PTR [ebp-0x28],ebx
65020c22:	mov    DWORD PTR [ebp-0x2c],ecx
65020c25:	jne    0x65020bf8
65020c27:	cmp    DWORD PTR [ebp-0x50],esi
65020c2a:	je     0x65020c31
65020c2c:	or     WORD PTR [ebp-0x2c],0x1
65020c31:	cmp    WORD PTR [ebp-0x2c],0x8000
65020c37:	ja     0x65020c4a
65020c39:	mov    ecx,DWORD PTR [ebp-0x2c]
65020c3c:	and    ecx,0x1ffff
65020c42:	cmp    ecx,0x18000
65020c48:	jne    0x65020c7d
65020c4a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
65020c4e:	jne    0x65020c7a
65020c50:	and    DWORD PTR [ebp-0x2a],0x0
65020c54:	cmp    DWORD PTR [ebp-0x26],0xffffffff
65020c58:	jne    0x65020c75
65020c5a:	and    DWORD PTR [ebp-0x26],0x0
65020c5e:	cmp    WORD PTR [ebp-0x22],0xffff
65020c64:	jne    0x65020c6f
65020c66:	mov    WORD PTR [ebp-0x22],0x8000
65020c6c:	inc    edi
65020c6d:	jmp    0x65020c7d
65020c6f:	inc    WORD PTR [ebp-0x22]
65020c73:	jmp    0x65020c7d
65020c75:	inc    DWORD PTR [ebp-0x26]
65020c78:	jmp    0x65020c7d
65020c7a:	inc    DWORD PTR [ebp-0x2a]
65020c7d:	cmp    di,0x7fff
65020c82:	mov    esi,DWORD PTR [ebp-0x4c]
65020c85:	jae    0x65020ca3
65020c87:	mov    cx,WORD PTR [ebp-0x2a]
65020c8b:	mov    WORD PTR [ebp-0x3c],cx
65020c8f:	mov    ecx,DWORD PTR [ebp-0x28]
65020c92:	mov    DWORD PTR [ebp-0x3a],ecx
65020c95:	mov    ecx,DWORD PTR [ebp-0x24]
65020c98:	or     edi,eax
65020c9a:	mov    DWORD PTR [ebp-0x36],ecx
65020c9d:	mov    WORD PTR [ebp-0x32],di
65020ca1:	jmp    0x65020cbd
65020ca3:	neg    ax
65020ca6:	sbb    eax,eax
65020ca8:	and    DWORD PTR [ebp-0x38],0x0
65020cac:	and    eax,0x80000000
65020cb1:	add    eax,0x7fff8000
65020cb6:	and    DWORD PTR [ebp-0x3c],0x0
65020cba:	mov    DWORD PTR [ebp-0x34],eax
65020cbd:	cmp    DWORD PTR [ebp-0x54],0x0
65020cc1:	jne    0x65020a34
65020cc7:	mov    eax,DWORD PTR [ebp-0x34]
65020cca:	movzx  ecx,WORD PTR [ebp-0x3c]
65020cce:	mov    esi,DWORD PTR [ebp-0x3a]
65020cd1:	mov    edx,DWORD PTR [ebp-0x36]
65020cd4:	shr    eax,0x10
65020cd7:	jmp    0x65020d08
65020cd9:	mov    DWORD PTR [ebp-0x6c],0x4
65020ce0:	jmp    0x65020d00
65020ce2:	xor    esi,esi
65020ce4:	mov    eax,0x7fff
65020ce9:	mov    edx,0x80000000
65020cee:	xor    ecx,ecx
65020cf0:	mov    DWORD PTR [ebp-0x6c],0x2
65020cf7:	jmp    0x65020d08
65020cf9:	mov    DWORD PTR [ebp-0x6c],0x1
65020d00:	xor    ecx,ecx
65020d02:	xor    eax,eax
65020d04:	xor    edx,edx
65020d06:	xor    esi,esi
65020d08:	mov    edi,DWORD PTR [ebp-0x7c]
65020d0b:	or     eax,DWORD PTR [ebp-0x74]
65020d0e:	mov    WORD PTR [edi],cx
65020d11:	mov    WORD PTR [edi+0xa],ax
65020d15:	mov    eax,DWORD PTR [ebp-0x6c]
65020d18:	mov    DWORD PTR [edi+0x2],esi
65020d1b:	mov    DWORD PTR [edi+0x6],edx
65020d1e:	mov    ecx,DWORD PTR [ebp-0x4]
65020d21:	pop    edi
65020d22:	pop    esi
65020d23:	xor    ecx,ebp
65020d25:	pop    ebx
65020d26:	call   0x6501275c
65020d2b:	leave  
65020d2c:	ret    
65020d2d:	xor    eax,0x89650207
65020d32:	pop    es
65020d33:	add    ah,BYTE PTR [ebp-0x21]
65020d36:	pop    es
65020d37:	add    ah,BYTE PTR [ebp+0x12]
65020d3a:	or     BYTE PTR [edx],al
65020d3c:	gs push edi
65020d3e:	or     BYTE PTR [edx],al
65020d40:	(bad)
65020d45:	mov    ds:0xfe650208,eax
65020d4a:	or     BYTE PTR [edx],al
65020d4c:	gs jmp 0xcd670f5a
65020d52:	or     DWORD PTR [edx],eax
65020d54:	gs pop ebp
65020d56:	or     DWORD PTR [edx],eax
65020d58:	gs or  al,0x9
65020d5b:	add    ah,BYTE PTR [ebp+0x55]
65020d5e:	mov    ebp,esp
65020d60:	sub    esp,0x74
65020d63:	mov    eax,ds:0x6502c09c
65020d68:	xor    eax,ebp
65020d6a:	mov    DWORD PTR [ebp-0x4],eax
65020d6d:	push   ebx
65020d6e:	mov    ebx,DWORD PTR [ebp+0x1c]
65020d71:	push   esi
65020d72:	push   edi
65020d73:	lea    esi,[ebp+0x8]
65020d76:	lea    edi,[ebp-0x10]
65020d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020d7b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
65020d7d:	mov    edx,DWORD PTR [ebp-0x8]
65020d80:	mov    ecx,edx
65020d82:	mov    eax,0x8000
65020d87:	and    ecx,eax
65020d89:	and    edx,0x7fff
65020d8f:	test   cx,cx
65020d92:	mov    DWORD PTR [ebp-0x60],ebx
65020d95:	mov    BYTE PTR [ebp-0x30],0xcc
65020d99:	mov    BYTE PTR [ebp-0x2f],0xcc
65020d9d:	mov    BYTE PTR [ebp-0x2e],0xcc
65020da1:	mov    BYTE PTR [ebp-0x2d],0xcc
65020da5:	mov    BYTE PTR [ebp-0x2c],0xcc
65020da9:	mov    BYTE PTR [ebp-0x2b],0xcc
65020dad:	mov    BYTE PTR [ebp-0x2a],0xcc
65020db1:	mov    BYTE PTR [ebp-0x29],0xcc
65020db5:	mov    BYTE PTR [ebp-0x28],0xcc
65020db9:	mov    BYTE PTR [ebp-0x27],0xcc
65020dbd:	mov    BYTE PTR [ebp-0x26],0xfb
65020dc1:	mov    BYTE PTR [ebp-0x25],0x3f
65020dc5:	mov    DWORD PTR [ebp-0x74],0x1
65020dcc:	mov    DWORD PTR [ebp-0x6c],ecx
65020dcf:	je     0x65020dd7
65020dd1:	mov    BYTE PTR [ebx+0x2],0x2d
65020dd5:	jmp    0x65020ddb
65020dd7:	mov    BYTE PTR [ebx+0x2],0x20
65020ddb:	test   dx,dx
65020dde:	mov    esi,DWORD PTR [ebp-0xc]
65020de1:	mov    edi,DWORD PTR [ebp-0x10]
65020de4:	jne    0x65020e14
65020de6:	test   esi,esi
65020de8:	jne    0x65020e14
65020dea:	test   edi,edi
65020dec:	jne    0x65020e14
65020dee:	and    WORD PTR [ebx],di
65020df1:	cmp    cx,ax
65020df4:	setne  al
65020df7:	dec    al
65020df9:	and    al,0xd
65020dfb:	add    al,0x20
65020dfd:	mov    BYTE PTR [ebx+0x2],al
65020e00:	mov    BYTE PTR [ebx+0x3],0x1
65020e04:	mov    BYTE PTR [ebx+0x4],0x30
65020e08:	mov    BYTE PTR [ebx+0x5],0x0
65020e0c:	xor    eax,eax
65020e0e:	inc    eax
65020e0f:	jmp    0x650215db
65020e14:	cmp    dx,0x7fff
65020e19:	jne    0x65020ebd
65020e1f:	mov    eax,0x80000000
65020e24:	cmp    esi,eax
65020e26:	mov    WORD PTR [ebx],0x1
65020e2b:	jne    0x65020e31
65020e2d:	test   edi,edi
65020e2f:	je     0x65020e40
65020e31:	test   esi,0x40000000
65020e37:	jne    0x65020e40
65020e39:	push   0x65026560
65020e3e:	jmp    0x65020e91
65020e40:	test   cx,cx
65020e43:	je     0x65020e58
65020e45:	cmp    esi,0xc0000000
65020e4b:	jne    0x65020e58
65020e4d:	test   edi,edi
65020e4f:	jne    0x65020e8c
65020e51:	push   0x65026558
65020e56:	jmp    0x65020e65
65020e58:	cmp    esi,eax
65020e5a:	jne    0x65020e8c
65020e5c:	test   edi,edi
65020e5e:	jne    0x65020e8c
65020e60:	push   0x65026550
65020e65:	lea    eax,[ebx+0x4]
65020e68:	push   0x16
65020e6a:	push   eax
65020e6b:	call   0x65013f94
65020e70:	add    esp,0xc
65020e73:	xor    esi,esi
65020e75:	test   eax,eax
65020e77:	je     0x65020e86
65020e79:	push   esi
65020e7a:	push   esi
65020e7b:	push   esi
65020e7c:	push   esi
65020e7d:	push   esi
65020e7e:	call   0x65012153
65020e83:	add    esp,0x14
65020e86:	mov    BYTE PTR [ebx+0x3],0x5
65020e8a:	jmp    0x65020eb6
65020e8c:	push   0x65026548
65020e91:	lea    eax,[ebx+0x4]
65020e94:	push   0x16
65020e96:	push   eax
65020e97:	call   0x65013f94
65020e9c:	add    esp,0xc
65020e9f:	xor    esi,esi
65020ea1:	test   eax,eax
65020ea3:	je     0x65020eb2
65020ea5:	push   esi
65020ea6:	push   esi
65020ea7:	push   esi
65020ea8:	push   esi
65020ea9:	push   esi
65020eaa:	call   0x65012153
65020eaf:	add    esp,0x14
65020eb2:	mov    BYTE PTR [ebx+0x3],0x6
65020eb6:	xor    eax,eax
65020eb8:	jmp    0x650215db
65020ebd:	movzx  ecx,dx
65020ec0:	mov    ebx,ecx
65020ec2:	imul   ecx,ecx,0x4d10
65020ec8:	shr    ebx,0x8
65020ecb:	mov    eax,esi
65020ecd:	shr    eax,0x18
65020ed0:	lea    eax,[ebx+eax*2]
65020ed3:	imul   eax,eax,0x4d
65020ed6:	lea    eax,[eax+ecx*1-0x134312f4]
65020edd:	sar    eax,0x10
65020ee0:	movzx  ecx,ax
65020ee3:	movsx  ebx,cx
65020ee6:	mov    DWORD PTR [ebp-0x4c],ecx
65020ee9:	xor    eax,eax
65020eeb:	mov    ecx,0x6502d0a0
65020ef0:	neg    ebx
65020ef2:	sub    ecx,0x60
65020ef5:	cmp    ebx,eax
65020ef7:	mov    WORD PTR [ebp-0x16],dx
65020efb:	mov    DWORD PTR [ebp-0x1a],esi
65020efe:	mov    DWORD PTR [ebp-0x1e],edi
65020f01:	mov    WORD PTR [ebp-0x20],ax
65020f05:	mov    DWORD PTR [ebp-0x68],ecx
65020f08:	je     0x650211bc
65020f0e:	jge    0x65020f1d
65020f10:	mov    ecx,0x6502d200
65020f15:	neg    ebx
65020f17:	sub    ecx,0x60
65020f1a:	mov    DWORD PTR [ebp-0x68],ecx
65020f1d:	cmp    ebx,eax
65020f1f:	je     0x650211bc
65020f25:	add    DWORD PTR [ebp-0x68],0x54
65020f29:	mov    ecx,ebx
65020f2b:	and    ecx,0x7
65020f2e:	sar    ebx,0x3
65020f31:	test   ecx,ecx
65020f33:	je     0x650211b2
65020f39:	imul   ecx,ecx,0xc
65020f3c:	add    ecx,DWORD PTR [ebp-0x68]
65020f3f:	cmp    WORD PTR [ecx],0x8000
65020f44:	mov    DWORD PTR [ebp-0x64],ecx
65020f47:	jb     0x65020f5c
65020f49:	mov    esi,ecx
65020f4b:	lea    edi,[ebp-0x3c]
65020f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f50:	lea    eax,[ebp-0x3c]
65020f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65020f54:	dec    DWORD PTR [ebp-0x3a]
65020f57:	mov    DWORD PTR [ebp-0x64],eax
65020f5a:	mov    ecx,eax
65020f5c:	movzx  edi,WORD PTR [ecx+0xa]
65020f60:	mov    edx,DWORD PTR [ebp-0x16]
65020f63:	xor    eax,eax
65020f65:	mov    ecx,edi
65020f67:	mov    esi,0x7fff
65020f6c:	xor    ecx,edx
65020f6e:	and    edx,esi
65020f70:	and    edi,esi
65020f72:	mov    DWORD PTR [ebp-0x48],eax
65020f75:	mov    DWORD PTR [ebp-0x10],eax
65020f78:	mov    DWORD PTR [ebp-0xc],eax
65020f7b:	mov    DWORD PTR [ebp-0x8],eax
65020f7e:	and    ecx,0x8000
65020f84:	cmp    dx,si
65020f87:	lea    eax,[edi+edx*1]
65020f8a:	movzx  eax,ax
65020f8d:	jae    0x65021196
65020f93:	cmp    di,si
65020f96:	jae    0x65021196
65020f9c:	cmp    ax,0xbffd
65020fa0:	ja     0x65021196
65020fa6:	cmp    ax,0x3fbf
65020faa:	ja     0x65020fbc
65020fac:	xor    eax,eax
65020fae:	mov    DWORD PTR [ebp-0x18],eax
65020fb1:	mov    DWORD PTR [ebp-0x1c],eax
65020fb4:	mov    DWORD PTR [ebp-0x20],eax
65020fb7:	jmp    0x650211b2
65020fbc:	xor    esi,esi
65020fbe:	cmp    dx,si
65020fc1:	jne    0x65020fe0
65020fc3:	inc    eax
65020fc4:	test   DWORD PTR [ebp-0x18],0x7fffffff
65020fcb:	jne    0x65020fe0
65020fcd:	cmp    DWORD PTR [ebp-0x1c],esi
65020fd0:	jne    0x65020fe0
65020fd2:	cmp    DWORD PTR [ebp-0x20],esi
65020fd5:	jne    0x65020fe0
65020fd7:	mov    WORD PTR [ebp-0x16],si
65020fdb:	jmp    0x650211b2
65020fe0:	cmp    di,si
65020fe3:	jne    0x65021009
65020fe5:	mov    edx,DWORD PTR [ebp-0x64]
65020fe8:	inc    eax
65020fe9:	test   DWORD PTR [edx+0x8],0x7fffffff
65020ff0:	jne    0x65021009
65020ff2:	cmp    DWORD PTR [edx+0x4],esi
65020ff5:	jne    0x65021009
65020ff7:	cmp    DWORD PTR [edx],esi
65020ff9:	jne    0x65021009
65020ffb:	mov    DWORD PTR [ebp-0x18],esi
65020ffe:	mov    DWORD PTR [ebp-0x1c],esi
65021001:	mov    DWORD PTR [ebp-0x20],esi
65021004:	jmp    0x650211b2
65021009:	lea    edi,[ebp-0xc]
6502100c:	mov    DWORD PTR [ebp-0x5c],esi
6502100f:	mov    DWORD PTR [ebp-0x44],edi
65021012:	mov    DWORD PTR [ebp-0x40],0x5
65021019:	mov    edx,DWORD PTR [ebp-0x5c]
6502101c:	mov    esi,DWORD PTR [ebp-0x40]
6502101f:	add    edx,edx
65021021:	test   esi,esi
65021023:	mov    DWORD PTR [ebp-0x50],esi
65021026:	jle    0x65021080
65021028:	lea    edx,[ebp+edx*1-0x20]
6502102c:	mov    DWORD PTR [ebp-0x58],edx
6502102f:	mov    edx,DWORD PTR [ebp-0x64]
65021032:	add    edx,0x8
65021035:	mov    DWORD PTR [ebp-0x54],edx
65021038:	mov    edx,DWORD PTR [ebp-0x58]
6502103b:	mov    esi,DWORD PTR [ebp-0x54]
6502103e:	movzx  esi,WORD PTR [esi]
65021041:	movzx  edx,WORD PTR [edx]
65021044:	mov    edi,DWORD PTR [edi-0x4]
65021047:	imul   edx,esi
6502104a:	and    DWORD PTR [ebp-0x70],0x0
6502104e:	lea    esi,[edi+edx*1]
65021051:	cmp    esi,edi
65021053:	jb     0x65021059
65021055:	cmp    esi,edx
65021057:	jae    0x65021060
65021059:	mov    DWORD PTR [ebp-0x70],0x1
65021060:	cmp    DWORD PTR [ebp-0x70],0x0
65021064:	mov    edi,DWORD PTR [ebp-0x44]
65021067:	mov    DWORD PTR [edi-0x4],esi
6502106a:	je     0x6502106f
6502106c:	inc    WORD PTR [edi]
6502106f:	add    DWORD PTR [ebp-0x58],0x2
65021073:	sub    DWORD PTR [ebp-0x54],0x2
65021077:	dec    DWORD PTR [ebp-0x50]
6502107a:	cmp    DWORD PTR [ebp-0x50],0x0
6502107e:	jg     0x65021038
65021080:	inc    edi
65021081:	inc    edi
65021082:	inc    DWORD PTR [ebp-0x5c]
65021085:	dec    DWORD PTR [ebp-0x40]
65021088:	cmp    DWORD PTR [ebp-0x40],0x0
6502108c:	mov    DWORD PTR [ebp-0x44],edi
6502108f:	jg     0x65021019
65021091:	add    eax,0xc002
65021096:	test   ax,ax
65021099:	jle    0x650210d6
6502109b:	test   DWORD PTR [ebp-0x8],0x80000000
650210a2:	jne    0x650210d1
650210a4:	mov    edx,DWORD PTR [ebp-0x10]
650210a7:	mov    edi,DWORD PTR [ebp-0xc]
650210aa:	mov    esi,DWORD PTR [ebp-0xc]
650210ad:	shl    DWORD PTR [ebp-0x10],1
650210b0:	shr    edx,0x1f
650210b3:	add    edi,edi
650210b5:	or     edi,edx
650210b7:	mov    edx,DWORD PTR [ebp-0x8]
650210ba:	shr    esi,0x1f
650210bd:	add    edx,edx
650210bf:	or     edx,esi
650210c1:	add    eax,0xffff
650210c6:	test   ax,ax
650210c9:	mov    DWORD PTR [ebp-0xc],edi
650210cc:	mov    DWORD PTR [ebp-0x8],edx
650210cf:	jg     0x6502109b
650210d1:	test   ax,ax
650210d4:	jg     0x65021128
650210d6:	add    eax,0xffff
650210db:	test   ax,ax
650210de:	jge    0x65021128
650210e0:	mov    edx,eax
650210e2:	neg    edx
650210e4:	movzx  edx,dx
650210e7:	mov    DWORD PTR [ebp-0x44],edx
650210ea:	add    eax,edx
650210ec:	test   BYTE PTR [ebp-0x10],0x1
650210f0:	je     0x650210f5
650210f2:	inc    DWORD PTR [ebp-0x48]
650210f5:	mov    edx,DWORD PTR [ebp-0x8]
650210f8:	mov    edi,DWORD PTR [ebp-0xc]
650210fb:	mov    esi,DWORD PTR [ebp-0xc]
650210fe:	shr    DWORD PTR [ebp-0x8],1
65021101:	shl    edx,0x1f
65021104:	shr    edi,1
65021106:	or     edi,edx
65021108:	mov    edx,DWORD PTR [ebp-0x10]
6502110b:	shl    esi,0x1f
6502110e:	shr    edx,1
65021110:	or     edx,esi
65021112:	dec    DWORD PTR [ebp-0x44]
65021115:	mov    DWORD PTR [ebp-0xc],edi
65021118:	mov    DWORD PTR [ebp-0x10],edx
6502111b:	jne    0x650210ec
6502111d:	cmp    DWORD PTR [ebp-0x48],0x0
65021121:	je     0x65021128
65021123:	or     WORD PTR [ebp-0x10],0x1
65021128:	cmp    WORD PTR [ebp-0x10],0x8000
6502112e:	ja     0x65021141
65021130:	mov    edx,DWORD PTR [ebp-0x10]
65021133:	and    edx,0x1ffff
65021139:	cmp    edx,0x18000
6502113f:	jne    0x65021174
65021141:	cmp    DWORD PTR [ebp-0xe],0xffffffff
65021145:	jne    0x65021171
65021147:	and    DWORD PTR [ebp-0xe],0x0
6502114b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6502114f:	jne    0x6502116c
65021151:	and    DWORD PTR [ebp-0xa],0x0
65021155:	cmp    WORD PTR [ebp-0x6],0xffff
6502115b:	jne    0x65021166
6502115d:	mov    WORD PTR [ebp-0x6],0x8000
65021163:	inc    eax
65021164:	jmp    0x65021174
65021166:	inc    WORD PTR [ebp-0x6]
6502116a:	jmp    0x65021174
6502116c:	inc    DWORD PTR [ebp-0xa]
6502116f:	jmp    0x65021174
65021171:	inc    DWORD PTR [ebp-0xe]
65021174:	cmp    ax,0x7fff
65021178:	jae    0x65021196
6502117a:	mov    dx,WORD PTR [ebp-0xe]
6502117e:	mov    WORD PTR [ebp-0x20],dx
65021182:	mov    edx,DWORD PTR [ebp-0xc]
65021185:	mov    DWORD PTR [ebp-0x1e],edx
65021188:	mov    edx,DWORD PTR [ebp-0x8]
6502118b:	or     eax,ecx
6502118d:	mov    DWORD PTR [ebp-0x1a],edx
65021190:	mov    WORD PTR [ebp-0x16],ax
65021194:	jmp    0x650211b2
65021196:	neg    cx
65021199:	sbb    ecx,ecx
6502119b:	and    DWORD PTR [ebp-0x1c],0x0
6502119f:	and    ecx,0x80000000
650211a5:	add    ecx,0x7fff8000
650211ab:	and    DWORD PTR [ebp-0x20],0x0
650211af:	mov    DWORD PTR [ebp-0x18],ecx
650211b2:	test   ebx,ebx
650211b4:	jne    0x65020f25
650211ba:	xor    eax,eax
650211bc:	mov    ecx,DWORD PTR [ebp-0x18]
650211bf:	shr    ecx,0x10
650211c2:	cmp    cx,0x3fff
650211c7:	mov    ebx,0x7fff
650211cc:	jb     0x6502141a
650211d2:	mov    esi,DWORD PTR [ebp-0x26]
650211d5:	inc    DWORD PTR [ebp-0x4c]
650211d8:	movzx  edx,cx
650211db:	mov    ecx,esi
650211dd:	xor    ecx,edx
650211df:	and    edx,ebx
650211e1:	and    esi,ebx
650211e3:	and    ecx,0x8000
650211e9:	cmp    dx,bx
650211ec:	lea    edi,[esi+edx*1]
650211ef:	mov    DWORD PTR [ebp-0x58],eax
650211f2:	mov    DWORD PTR [ebp-0x10],eax
650211f5:	mov    DWORD PTR [ebp-0xc],eax
650211f8:	mov    DWORD PTR [ebp-0x8],eax
650211fb:	movzx  edi,di
650211fe:	jae    0x65021400
65021204:	cmp    si,bx
65021207:	jae    0x65021400
6502120d:	cmp    di,0xbffd
65021212:	ja     0x65021400
65021218:	cmp    di,0x3fbf
6502121d:	ja     0x65021227
6502121f:	mov    DWORD PTR [ebp-0x18],eax
65021222:	jmp    0x65021414
65021227:	cmp    dx,ax
6502122a:	jne    0x65021249
6502122c:	inc    edi
6502122d:	test   DWORD PTR [ebp-0x18],0x7fffffff
65021234:	jne    0x65021249
65021236:	cmp    DWORD PTR [ebp-0x1c],eax
65021239:	jne    0x65021249
6502123b:	cmp    DWORD PTR [ebp-0x20],eax
6502123e:	jne    0x65021249
65021240:	mov    WORD PTR [ebp-0x16],ax
65021244:	jmp    0x6502141a
65021249:	cmp    si,ax
6502124c:	jne    0x65021262
6502124e:	inc    edi
6502124f:	test   DWORD PTR [ebp-0x28],0x7fffffff
65021256:	jne    0x65021262
65021258:	cmp    DWORD PTR [ebp-0x2c],eax
6502125b:	jne    0x65021262
6502125d:	cmp    DWORD PTR [ebp-0x30],eax
65021260:	je     0x6502121f
65021262:	and    DWORD PTR [ebp-0x54],0x0
65021266:	lea    eax,[ebp-0xc]
65021269:	mov    DWORD PTR [ebp-0x40],0x5
65021270:	mov    edx,DWORD PTR [ebp-0x54]
65021273:	mov    esi,DWORD PTR [ebp-0x40]
65021276:	add    edx,edx
65021278:	test   esi,esi
6502127a:	mov    DWORD PTR [ebp-0x50],esi
6502127d:	jle    0x650212d1
6502127f:	lea    esi,[ebp-0x28]
65021282:	lea    edx,[ebp+edx*1-0x20]
65021286:	mov    DWORD PTR [ebp-0x5c],esi
65021289:	mov    DWORD PTR [ebp-0x48],edx
6502128c:	mov    edx,DWORD PTR [ebp-0x5c]
6502128f:	mov    esi,DWORD PTR [ebp-0x48]
65021292:	movzx  esi,WORD PTR [esi]
65021295:	movzx  edx,WORD PTR [edx]
65021298:	and    DWORD PTR [ebp-0x44],0x0
6502129c:	imul   edx,esi
6502129f:	mov    esi,DWORD PTR [eax-0x4]
650212a2:	lea    ebx,[esi+edx*1]
650212a5:	cmp    ebx,esi
650212a7:	jb     0x650212ad
650212a9:	cmp    ebx,edx
650212ab:	jae    0x650212b4
650212ad:	mov    DWORD PTR [ebp-0x44],0x1
650212b4:	cmp    DWORD PTR [ebp-0x44],0x0
650212b8:	mov    DWORD PTR [eax-0x4],ebx
650212bb:	je     0x650212c0
650212bd:	inc    WORD PTR [eax]
650212c0:	add    DWORD PTR [ebp-0x48],0x2
650212c4:	sub    DWORD PTR [ebp-0x5c],0x2
650212c8:	dec    DWORD PTR [ebp-0x50]
650212cb:	cmp    DWORD PTR [ebp-0x50],0x0
650212cf:	jg     0x6502128c
650212d1:	inc    eax
650212d2:	inc    eax
650212d3:	inc    DWORD PTR [ebp-0x54]
650212d6:	dec    DWORD PTR [ebp-0x40]
650212d9:	cmp    DWORD PTR [ebp-0x40],0x0
650212dd:	jg     0x65021270
650212df:	add    edi,0xc002
650212e5:	xor    eax,eax
650212e7:	cmp    di,ax
650212ea:	jle    0x65021328
650212ec:	test   DWORD PTR [ebp-0x8],0x80000000
650212f3:	jne    0x65021323
650212f5:	mov    edx,DWORD PTR [ebp-0x10]
650212f8:	mov    ebx,DWORD PTR [ebp-0xc]
650212fb:	mov    esi,DWORD PTR [ebp-0xc]
650212fe:	shl    DWORD PTR [ebp-0x10],1
65021301:	shr    edx,0x1f
65021304:	add    ebx,ebx
65021306:	or     ebx,edx
65021308:	mov    edx,DWORD PTR [ebp-0x8]
6502130b:	shr    esi,0x1f
6502130e:	add    edx,edx
65021310:	or     edx,esi
65021312:	add    edi,0xffff
65021318:	cmp    di,ax
6502131b:	mov    DWORD PTR [ebp-0xc],ebx
6502131e:	mov    DWORD PTR [ebp-0x8],edx
65021321:	jg     0x650212ec
65021323:	cmp    di,ax
65021326:	jg     0x65021375
65021328:	add    edi,0xffff
6502132e:	cmp    di,ax
65021331:	jge    0x65021375
65021333:	mov    eax,edi
65021335:	neg    eax
65021337:	movzx  eax,ax
6502133a:	add    edi,eax
6502133c:	test   BYTE PTR [ebp-0x10],0x1
65021340:	je     0x65021345
65021342:	inc    DWORD PTR [ebp-0x58]
65021345:	mov    edx,DWORD PTR [ebp-0x8]
65021348:	mov    ebx,DWORD PTR [ebp-0xc]
6502134b:	mov    esi,DWORD PTR [ebp-0xc]
6502134e:	shr    DWORD PTR [ebp-0x8],1
65021351:	shl    edx,0x1f
65021354:	shr    ebx,1
65021356:	or     ebx,edx
65021358:	mov    edx,DWORD PTR [ebp-0x10]
6502135b:	shl    esi,0x1f
6502135e:	shr    edx,1
65021360:	or     edx,esi
65021362:	dec    eax
65021363:	mov    DWORD PTR [ebp-0xc],ebx
65021366:	mov    DWORD PTR [ebp-0x10],edx
65021369:	jne    0x6502133c
6502136b:	cmp    DWORD PTR [ebp-0x58],eax
6502136e:	je     0x65021375
65021370:	or     WORD PTR [ebp-0x10],0x1
65021375:	cmp    WORD PTR [ebp-0x10],0x8000
6502137b:	ja     0x6502138e
6502137d:	mov    edx,DWORD PTR [ebp-0x10]
65021380:	and    edx,0x1ffff
65021386:	cmp    edx,0x18000
6502138c:	jne    0x650213bf
6502138e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
65021392:	jne    0x650213bc
65021394:	cmp    DWORD PTR [ebp-0xa],0xffffffff
65021398:	mov    DWORD PTR [ebp-0xe],eax
6502139b:	jne    0x650213b7
6502139d:	cmp    WORD PTR [ebp-0x6],0xffff
650213a3:	mov    DWORD PTR [ebp-0xa],eax
650213a6:	jne    0x650213b1
650213a8:	mov    WORD PTR [ebp-0x6],0x8000
650213ae:	inc    edi
650213af:	jmp    0x650213bf
650213b1:	inc    WORD PTR [ebp-0x6]
650213b5:	jmp    0x650213bf
650213b7:	inc    DWORD PTR [ebp-0xa]
650213ba:	jmp    0x650213bf
650213bc:	inc    DWORD PTR [ebp-0xe]
650213bf:	cmp    di,0x7fff
650213c4:	jb     0x650213e4
650213c6:	neg    cx
650213c9:	mov    DWORD PTR [ebp-0x1c],eax
650213cc:	mov    DWORD PTR [ebp-0x20],eax
650213cf:	sbb    ecx,ecx
650213d1:	and    ecx,0x80000000
650213d7:	add    ecx,0x7fff8000
650213dd:	mov    DWORD PTR [ebp-0x18],ecx
650213e0:	xor    eax,eax
650213e2:	jmp    0x6502141a
650213e4:	mov    ax,WORD PTR [ebp-0xe]
650213e8:	mov    WORD PTR [ebp-0x20],ax
650213ec:	mov    eax,DWORD PTR [ebp-0xc]
650213ef:	mov    DWORD PTR [ebp-0x1e],eax
650213f2:	mov    eax,DWORD PTR [ebp-0x8]
650213f5:	or     edi,ecx
650213f7:	mov    DWORD PTR [ebp-0x1a],eax
650213fa:	mov    WORD PTR [ebp-0x16],di
650213fe:	jmp    0x650213e0
65021400:	neg    cx
65021403:	sbb    ecx,ecx
65021405:	and    ecx,0x80000000
6502140b:	add    ecx,0x7fff8000
65021411:	mov    DWORD PTR [ebp-0x18],ecx
65021414:	mov    DWORD PTR [ebp-0x1c],eax
65021417:	mov    DWORD PTR [ebp-0x20],eax
6502141a:	test   BYTE PTR [ebp+0x18],0x1
6502141e:	mov    edx,DWORD PTR [ebp-0x60]
65021421:	mov    ecx,DWORD PTR [ebp-0x4c]
65021424:	mov    WORD PTR [edx],cx
65021427:	je     0x6502145b
65021429:	movsx  ecx,cx
6502142c:	add    DWORD PTR [ebp+0x14],ecx
6502142f:	cmp    DWORD PTR [ebp+0x14],eax
65021432:	jg     0x6502145b
65021434:	and    WORD PTR [edx],0x0
65021438:	cmp    WORD PTR [ebp-0x6c],0x8000
6502143e:	mov    BYTE PTR [edx+0x3],0x1
65021442:	setne  al
65021445:	dec    al
65021447:	and    al,0xd
65021449:	add    al,0x20
6502144b:	mov    BYTE PTR [edx+0x2],al
6502144e:	mov    BYTE PTR [edx+0x4],0x30
65021452:	mov    BYTE PTR [edx+0x5],0x0
65021456:	jmp    0x65020e0c
6502145b:	push   0x15
6502145d:	pop    ecx
6502145e:	cmp    DWORD PTR [ebp+0x14],ecx
65021461:	jle    0x65021466
65021463:	mov    DWORD PTR [ebp+0x14],ecx
65021466:	mov    esi,DWORD PTR [ebp-0x18]
65021469:	shr    esi,0x10
6502146c:	push   0x8
6502146e:	sub    esi,0x3ffe
65021474:	mov    WORD PTR [ebp-0x16],ax
65021478:	pop    ebx
65021479:	mov    eax,DWORD PTR [ebp-0x20]
6502147c:	mov    edi,DWORD PTR [ebp-0x1c]
6502147f:	mov    ecx,DWORD PTR [ebp-0x1c]
65021482:	shl    DWORD PTR [ebp-0x20],1
65021485:	shr    eax,0x1f
65021488:	add    edi,edi
6502148a:	or     edi,eax
6502148c:	mov    eax,DWORD PTR [ebp-0x18]
6502148f:	shr    ecx,0x1f
65021492:	add    eax,eax
65021494:	or     eax,ecx
65021496:	dec    ebx
65021497:	mov    DWORD PTR [ebp-0x1c],edi
6502149a:	mov    DWORD PTR [ebp-0x18],eax
6502149d:	jne    0x65021479
6502149f:	test   esi,esi
650214a1:	jge    0x650214d5
650214a3:	neg    esi
650214a5:	and    esi,0xff
650214ab:	jle    0x650214d5
650214ad:	mov    eax,DWORD PTR [ebp-0x18]
650214b0:	mov    edi,DWORD PTR [ebp-0x1c]
650214b3:	mov    ecx,DWORD PTR [ebp-0x1c]
650214b6:	shr    DWORD PTR [ebp-0x18],1
650214b9:	shl    eax,0x1f
650214bc:	shr    edi,1
650214be:	or     edi,eax
650214c0:	mov    eax,DWORD PTR [ebp-0x20]
650214c3:	shl    ecx,0x1f
650214c6:	shr    eax,1
650214c8:	or     eax,ecx
650214ca:	dec    esi
650214cb:	test   esi,esi
650214cd:	mov    DWORD PTR [ebp-0x1c],edi
650214d0:	mov    DWORD PTR [ebp-0x20],eax
650214d3:	jg     0x650214ad
650214d5:	mov    eax,DWORD PTR [ebp+0x14]
650214d8:	inc    eax
650214d9:	test   eax,eax
650214db:	lea    ebx,[edx+0x4]
650214de:	mov    DWORD PTR [ebp-0x40],ebx
650214e1:	mov    DWORD PTR [ebp-0x4c],eax
650214e4:	jle    0x6502159f
650214ea:	mov    edx,DWORD PTR [ebp-0x20]
650214ed:	mov    eax,DWORD PTR [ebp-0x1c]
650214f0:	lea    esi,[ebp-0x20]
650214f3:	lea    edi,[ebp-0x3c]
650214f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650214f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650214f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
650214f9:	shl    DWORD PTR [ebp-0x20],1
650214fc:	mov    edi,DWORD PTR [ebp-0x20]
650214ff:	shl    DWORD PTR [ebp-0x20],1
65021502:	shr    edx,0x1f
65021505:	lea    ecx,[eax+eax*1]
65021508:	or     ecx,edx
6502150a:	mov    edx,DWORD PTR [ebp-0x18]
6502150d:	mov    esi,eax
6502150f:	shr    esi,0x1f
65021512:	add    edx,edx
65021514:	or     edx,esi
65021516:	mov    eax,ecx
65021518:	lea    esi,[ecx+ecx*1]
6502151b:	shr    eax,0x1f
6502151e:	lea    ecx,[edx+edx*1]
65021521:	mov    edx,DWORD PTR [ebp-0x3c]
65021524:	shr    edi,0x1f
65021527:	or     ecx,eax
65021529:	mov    eax,DWORD PTR [ebp-0x20]
6502152c:	or     esi,edi
6502152e:	lea    edi,[edx+eax*1]
65021531:	cmp    edi,eax
65021533:	jb     0x65021539
65021535:	cmp    edi,edx
65021537:	jae    0x65021551
65021539:	lea    eax,[esi+0x1]
6502153c:	xor    edx,edx
6502153e:	cmp    eax,esi
65021540:	jb     0x65021547
65021542:	cmp    eax,0x1
65021545:	jae    0x6502154a
65021547:	xor    edx,edx
65021549:	inc    edx
6502154a:	test   edx,edx
6502154c:	mov    esi,eax
6502154e:	je     0x65021551
65021550:	inc    ecx
65021551:	mov    eax,DWORD PTR [ebp-0x38]
65021554:	lea    edx,[eax+esi*1]
65021557:	cmp    edx,esi
65021559:	mov    DWORD PTR [ebp-0x44],edx
6502155c:	jb     0x65021562
6502155e:	cmp    edx,eax
65021560:	jae    0x65021563
65021562:	inc    ecx
65021563:	add    ecx,DWORD PTR [ebp-0x34]
65021566:	shr    edx,0x1f
65021569:	add    ecx,ecx
6502156b:	or     ecx,edx
6502156d:	lea    esi,[edi+edi*1]
65021570:	mov    DWORD PTR [ebp-0x20],esi
65021573:	mov    esi,DWORD PTR [ebp-0x44]
65021576:	mov    DWORD PTR [ebp-0x18],ecx
65021579:	shr    ecx,0x18
6502157c:	add    esi,esi
6502157e:	add    cl,0x30
65021581:	mov    eax,edi
65021583:	shr    eax,0x1f
65021586:	or     esi,eax
65021588:	mov    BYTE PTR [ebx],cl
6502158a:	inc    ebx
6502158b:	dec    DWORD PTR [ebp-0x4c]
6502158e:	cmp    DWORD PTR [ebp-0x4c],0x0
65021592:	mov    DWORD PTR [ebp-0x1c],esi
65021595:	mov    BYTE PTR [ebp-0x15],0x0
65021599:	jg     0x650214ea
6502159f:	dec    ebx
650215a0:	mov    al,BYTE PTR [ebx]
650215a2:	dec    ebx
650215a3:	cmp    al,0x35
650215a5:	jge    0x650215b5
650215a7:	mov    ecx,DWORD PTR [ebp-0x40]
650215aa:	jmp    0x650215f0
650215ac:	cmp    BYTE PTR [ebx],0x39
650215af:	jne    0x650215ba
650215b1:	mov    BYTE PTR [ebx],0x30
650215b4:	dec    ebx
650215b5:	cmp    ebx,DWORD PTR [ebp-0x40]
650215b8:	jae    0x650215ac
650215ba:	cmp    ebx,DWORD PTR [ebp-0x40]
650215bd:	mov    eax,DWORD PTR [ebp-0x60]
650215c0:	jae    0x650215c6
650215c2:	inc    ebx
650215c3:	inc    WORD PTR [eax]
650215c6:	inc    BYTE PTR [ebx]
650215c8:	sub    bl,al
650215ca:	sub    bl,0x3
650215cd:	movsx  ecx,bl
650215d0:	mov    BYTE PTR [eax+0x3],bl
650215d3:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
650215d8:	mov    eax,DWORD PTR [ebp-0x74]
650215db:	mov    ecx,DWORD PTR [ebp-0x4]
650215de:	pop    edi
650215df:	pop    esi
650215e0:	xor    ecx,ebp
650215e2:	pop    ebx
650215e3:	call   0x6501275c
650215e8:	leave  
650215e9:	ret    
650215ea:	cmp    BYTE PTR [ebx],0x30
650215ed:	jne    0x650215f4
650215ef:	dec    ebx
650215f0:	cmp    ebx,ecx
650215f2:	jae    0x650215ea
650215f4:	cmp    ebx,ecx
650215f6:	mov    eax,DWORD PTR [ebp-0x60]
650215f9:	jae    0x650215c8
650215fb:	and    WORD PTR [eax],0x0
650215ff:	cmp    WORD PTR [ebp-0x6c],0x8000
65021605:	mov    BYTE PTR [eax+0x3],0x1
65021609:	setne  dl
6502160c:	dec    dl
6502160e:	and    dl,0xd
65021611:	add    dl,0x20
65021614:	mov    BYTE PTR [eax+0x2],dl
65021617:	mov    BYTE PTR [ecx],0x30
6502161a:	mov    BYTE PTR [eax+0x5],0x0
6502161e:	jmp    0x65020e0c
65021623:	xor    eax,eax
65021625:	test   bl,0x10
65021628:	je     0x6502162b
6502162a:	inc    eax
6502162b:	test   bl,0x8
6502162e:	je     0x65021633
65021630:	or     eax,0x4
65021633:	test   bl,0x4
65021636:	je     0x6502163b
65021638:	or     eax,0x8
6502163b:	test   bl,0x2
6502163e:	je     0x65021643
65021640:	or     eax,0x10
65021643:	test   bl,0x1
65021646:	je     0x6502164b
65021648:	or     eax,0x20
6502164b:	test   ebx,0x80000
65021651:	je     0x65021656
65021653:	or     eax,0x2
65021656:	mov    ecx,ebx
65021658:	mov    edx,0x300
6502165d:	and    ecx,edx
6502165f:	push   esi
65021660:	mov    esi,0x200
65021665:	je     0x6502168a
65021667:	cmp    ecx,0x100
6502166d:	je     0x65021685
6502166f:	cmp    ecx,esi
65021671:	je     0x6502167e
65021673:	cmp    ecx,edx
65021675:	jne    0x6502168a
65021677:	or     eax,0xc00
6502167c:	jmp    0x6502168a
6502167e:	or     eax,0x800
65021683:	jmp    0x6502168a
65021685:	or     eax,0x400
6502168a:	mov    ecx,ebx
6502168c:	and    ecx,0x30000
65021692:	je     0x650216a0
65021694:	cmp    ecx,0x10000
6502169a:	jne    0x650216a2
6502169c:	or     eax,esi
6502169e:	jmp    0x650216a2
650216a0:	or     eax,edx
650216a2:	test   ebx,0x40000
650216a8:	pop    esi
650216a9:	je     0x650216b0
650216ab:	or     eax,0x1000
650216b0:	ret    
650216b1:	xor    eax,eax
650216b3:	test   dl,0x10
650216b6:	je     0x650216bd
650216b8:	mov    eax,0x80
650216bd:	test   dl,0x8
650216c0:	push   ebx
650216c1:	push   esi
650216c2:	push   edi
650216c3:	mov    ebx,0x200
650216c8:	je     0x650216cc
650216ca:	or     eax,ebx
650216cc:	test   dl,0x4
650216cf:	je     0x650216d6
650216d1:	or     eax,0x400
650216d6:	test   dl,0x2
650216d9:	je     0x650216e0
650216db:	or     eax,0x800
650216e0:	test   dl,0x1
650216e3:	je     0x650216ea
650216e5:	or     eax,0x1000
650216ea:	test   edx,0x80000
650216f0:	mov    edi,0x100
650216f5:	je     0x650216f9
650216f7:	or     eax,edi
650216f9:	mov    ecx,edx
650216fb:	mov    esi,0x300
65021700:	and    ecx,esi
65021702:	je     0x65021723
65021704:	cmp    ecx,edi
65021706:	je     0x6502171e
65021708:	cmp    ecx,ebx
6502170a:	je     0x65021717
6502170c:	cmp    ecx,esi
6502170e:	jne    0x65021723
65021710:	or     eax,0x6000
65021715:	jmp    0x65021723
65021717:	or     eax,0x4000
6502171c:	jmp    0x65021723
6502171e:	or     eax,0x2000
65021723:	mov    ecx,0x3000000
65021728:	pop    edi
65021729:	and    edx,ecx
6502172b:	cmp    edx,0x1000000
65021731:	pop    esi
65021732:	pop    ebx
65021733:	je     0x6502174b
65021735:	cmp    edx,0x2000000
6502173b:	je     0x65021747
6502173d:	cmp    edx,ecx
6502173f:	jne    0x65021750
65021741:	or     eax,0x8000
65021746:	ret    
65021747:	or     eax,0x40
6502174a:	ret    
6502174b:	or     eax,0x8040
65021750:	ret    
65021751:	sub    esp,0x10
65021754:	push   ebx
65021755:	push   ebp
65021756:	push   esi
65021757:	push   edi
65021758:	fstcw  WORD PTR [esp+0x14]
6502175d:	mov    ebx,DWORD PTR [esp+0x14]
65021761:	xor    edx,edx
65021763:	test   bl,0x1
65021766:	je     0x6502176b
65021768:	push   0x10
6502176a:	pop    edx
6502176b:	test   bl,0x4
6502176e:	je     0x65021773
65021770:	or     edx,0x8
65021773:	test   bl,0x8
65021776:	je     0x6502177b
65021778:	or     edx,0x4
6502177b:	test   bl,0x10
6502177e:	je     0x65021783
65021780:	or     edx,0x2
65021783:	test   bl,0x20
65021786:	je     0x6502178b
65021788:	or     edx,0x1
6502178b:	test   bl,0x2
6502178e:	je     0x65021796
65021790:	or     edx,0x80000
65021796:	movzx  ecx,bx
65021799:	mov    eax,ecx
6502179b:	mov    edi,0xc00
650217a0:	and    eax,edi
650217a2:	mov    ebp,0x300
650217a7:	mov    esi,0x200
650217ac:	je     0x650217ce
650217ae:	cmp    eax,0x400
650217b3:	je     0x650217c8
650217b5:	cmp    eax,0x800
650217ba:	je     0x650217c4
650217bc:	cmp    eax,edi
650217be:	jne    0x650217ce
650217c0:	or     edx,ebp
650217c2:	jmp    0x650217ce
650217c4:	or     edx,esi
650217c6:	jmp    0x650217ce
650217c8:	or     edx,0x100
650217ce:	and    ecx,ebp
650217d0:	je     0x650217de
650217d2:	cmp    ecx,esi
650217d4:	jne    0x650217e4
650217d6:	or     edx,0x10000
650217dc:	jmp    0x650217e4
650217de:	or     edx,0x20000
650217e4:	test   bx,0x1000
650217e9:	je     0x650217f1
650217eb:	or     edx,0x40000
650217f1:	mov    esi,DWORD PTR [esp+0x28]
650217f5:	mov    ecx,DWORD PTR [esp+0x24]
650217f9:	mov    eax,esi
650217fb:	not    eax
650217fd:	and    eax,edx
650217ff:	and    ecx,esi
65021801:	or     eax,ecx
65021803:	cmp    eax,edx
65021805:	mov    DWORD PTR [esp+0x1c],eax
65021809:	je     0x650218b9
6502180f:	mov    ebx,eax
65021811:	call   0x65021623
65021816:	movzx  eax,ax
65021819:	mov    DWORD PTR [esp+0x10],eax
6502181d:	fldcw  WORD PTR [esp+0x10]
65021821:	fstcw  WORD PTR [esp+0x10]
65021826:	mov    ebx,DWORD PTR [esp+0x10]
6502182a:	xor    edx,edx
6502182c:	test   bl,0x1
6502182f:	je     0x65021834
65021831:	push   0x10
65021833:	pop    edx
65021834:	test   bl,0x4
65021837:	je     0x6502183c
65021839:	or     edx,0x8
6502183c:	test   bl,0x8
6502183f:	je     0x65021844
65021841:	or     edx,0x4
65021844:	test   bl,0x10
65021847:	je     0x6502184c
65021849:	or     edx,0x2
6502184c:	test   bl,0x20
6502184f:	je     0x65021854
65021851:	or     edx,0x1
65021854:	test   bl,0x2
65021857:	je     0x6502185f
65021859:	or     edx,0x80000
6502185f:	movzx  ecx,bx
65021862:	mov    eax,ecx
65021864:	and    eax,edi
65021866:	je     0x6502188c
65021868:	cmp    eax,0x400
6502186d:	je     0x65021886
6502186f:	cmp    eax,0x800
65021874:	je     0x6502187e
65021876:	cmp    eax,edi
65021878:	jne    0x6502188c
6502187a:	or     edx,ebp
6502187c:	jmp    0x6502188c
6502187e:	or     edx,0x200
65021884:	jmp    0x6502188c
65021886:	or     edx,0x100
6502188c:	and    ecx,ebp
6502188e:	je     0x650218a0
65021890:	cmp    ecx,0x200
65021896:	jne    0x650218a6
65021898:	or     edx,0x10000
6502189e:	jmp    0x650218a6
650218a0:	or     edx,0x20000
650218a6:	test   bx,0x1000
650218ab:	je     0x650218b3
650218ad:	or     edx,0x40000
650218b3:	mov    eax,edx
650218b5:	mov    DWORD PTR [esp+0x1c],edx
650218b9:	cmp    DWORD PTR ds:0x65031564,0x0
650218c0:	je     0x65021a4c
650218c6:	and    esi,0x308031f
650218cc:	mov    edi,esi
650218ce:	stmxcsr DWORD PTR [esp+0x18]
650218d3:	mov    eax,DWORD PTR [esp+0x18]
650218d7:	xor    esi,esi
650218d9:	test   al,al
650218db:	jns    0x650218e0
650218dd:	push   0x10
650218df:	pop    esi
650218e0:	test   ax,0x200
650218e4:	je     0x650218e9
650218e6:	or     esi,0x8
650218e9:	test   ax,0x400
650218ed:	je     0x650218f2
650218ef:	or     esi,0x4
650218f2:	test   ax,0x800
650218f6:	je     0x650218fb
650218f8:	or     esi,0x2
650218fb:	test   ax,0x1000
650218ff:	je     0x65021904
65021901:	or     esi,0x1
65021904:	test   ax,0x100
65021908:	je     0x65021910
6502190a:	or     esi,0x80000
65021910:	mov    ecx,eax
65021912:	mov    ebp,0x6000
65021917:	and    ecx,ebp
65021919:	je     0x65021945
6502191b:	cmp    ecx,0x2000
65021921:	je     0x6502193f
65021923:	cmp    ecx,0x4000
65021929:	je     0x65021937
6502192b:	cmp    ecx,ebp
6502192d:	jne    0x65021945
6502192f:	or     esi,0x300
65021935:	jmp    0x65021945
65021937:	or     esi,0x200
6502193d:	jmp    0x65021945
6502193f:	or     esi,0x100
65021945:	mov    ebx,0x8040
6502194a:	and    eax,ebx
6502194c:	sub    eax,0x40
6502194f:	je     0x6502196d
65021951:	sub    eax,0x7fc0
65021956:	je     0x65021965
65021958:	sub    eax,0x40
6502195b:	jne    0x65021973
6502195d:	or     esi,0x1000000
65021963:	jmp    0x65021973
65021965:	or     esi,0x3000000
6502196b:	jmp    0x65021973
6502196d:	or     esi,0x2000000
65021973:	mov    edx,edi
65021975:	and    edi,DWORD PTR [esp+0x24]
65021979:	not    edx
6502197b:	and    edx,esi
6502197d:	or     edx,edi
6502197f:	cmp    edx,esi
65021981:	jne    0x6502198a
65021983:	mov    eax,esi
65021985:	jmp    0x65021a35
6502198a:	call   0x650216b1
6502198f:	push   eax
65021990:	mov    DWORD PTR [esp+0x2c],eax
65021994:	call   0x65021c20
65021999:	pop    ecx
6502199a:	stmxcsr DWORD PTR [esp+0x28]
6502199f:	mov    eax,DWORD PTR [esp+0x28]
650219a3:	xor    edx,edx
650219a5:	test   al,al
650219a7:	jns    0x650219ac
650219a9:	push   0x10
650219ab:	pop    edx
650219ac:	mov    edi,0x200
650219b1:	test   edi,eax
650219b3:	je     0x650219b8
650219b5:	or     edx,0x8
650219b8:	test   ax,0x400
650219bc:	je     0x650219c1
650219be:	or     edx,0x4
650219c1:	test   ax,0x800
650219c5:	je     0x650219ca
650219c7:	or     edx,0x2
650219ca:	test   ax,0x1000
650219ce:	je     0x650219d3
650219d0:	or     edx,0x1
650219d3:	mov    esi,0x100
650219d8:	test   esi,eax
650219da:	je     0x650219e2
650219dc:	or     edx,0x80000
650219e2:	mov    ecx,eax
650219e4:	and    ecx,ebp
650219e6:	je     0x65021a0a
650219e8:	cmp    ecx,0x2000
650219ee:	je     0x65021a08
650219f0:	cmp    ecx,0x4000
650219f6:	je     0x65021a04
650219f8:	cmp    ecx,ebp
650219fa:	jne    0x65021a0a
650219fc:	or     edx,0x300
65021a02:	jmp    0x65021a0a
65021a04:	or     edx,edi
65021a06:	jmp    0x65021a0a
65021a08:	or     edx,esi
65021a0a:	and    eax,ebx
65021a0c:	sub    eax,0x40
65021a0f:	je     0x65021a2d
65021a11:	sub    eax,0x7fc0
65021a16:	je     0x65021a25
65021a18:	sub    eax,0x40
65021a1b:	jne    0x65021a33
65021a1d:	or     edx,0x1000000
65021a23:	jmp    0x65021a33
65021a25:	or     edx,0x3000000
65021a2b:	jmp    0x65021a33
65021a2d:	or     edx,0x2000000
65021a33:	mov    eax,edx
65021a35:	mov    ecx,DWORD PTR [esp+0x1c]
65021a39:	mov    edx,eax
65021a3b:	xor    edx,ecx
65021a3d:	or     eax,ecx
65021a3f:	test   edx,0x8031f
65021a45:	je     0x65021a4c
65021a47:	or     eax,0x80000000
65021a4c:	pop    edi
65021a4d:	pop    esi
65021a4e:	pop    ebp
65021a4f:	pop    ebx
65021a50:	add    esp,0x10
65021a53:	ret    
65021a54:	push   ebp
65021a55:	mov    ebp,esp
65021a57:	sub    esp,0x18
65021a5a:	mov    eax,ds:0x6502c09c
65021a5f:	xor    eax,ebp
65021a61:	mov    DWORD PTR [ebp-0x4],eax
65021a64:	mov    eax,DWORD PTR [ebp+0x10]
65021a67:	push   ebx
65021a68:	push   esi
65021a69:	xor    esi,esi
65021a6b:	cmp    DWORD PTR [ebp+0xc],esi
65021a6e:	push   edi
65021a6f:	mov    DWORD PTR [ebp-0x18],0x404e
65021a76:	mov    DWORD PTR [eax],esi
65021a78:	mov    DWORD PTR [eax+0x4],esi
65021a7b:	mov    DWORD PTR [eax+0x8],esi
65021a7e:	jbe    0x65021bca
65021a84:	mov    edx,DWORD PTR [eax]
65021a86:	mov    ebx,DWORD PTR [eax+0x4]
65021a89:	mov    esi,eax
65021a8b:	lea    edi,[ebp-0x10]
65021a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
65021a91:	mov    ecx,edx
65021a93:	shr    ecx,0x1f
65021a96:	lea    edi,[edx+edx*1]
65021a99:	lea    edx,[ebx+ebx*1]
65021a9c:	or     edx,ecx
65021a9e:	mov    ecx,DWORD PTR [eax+0x8]
65021aa1:	mov    esi,ebx
65021aa3:	shr    esi,0x1f
65021aa6:	add    ecx,ecx
65021aa8:	or     ecx,esi
65021aaa:	mov    DWORD PTR [ebp-0x14],edi
65021aad:	mov    esi,edi
65021aaf:	and    DWORD PTR [ebp-0x14],0x0
65021ab3:	mov    ebx,edx
65021ab5:	shr    ebx,0x1f
65021ab8:	add    ecx,ecx
65021aba:	shr    edi,0x1f
65021abd:	or     ecx,ebx
65021abf:	mov    ebx,DWORD PTR [ebp-0x10]
65021ac2:	add    esi,esi
65021ac4:	add    edx,edx
65021ac6:	or     edx,edi
65021ac8:	lea    edi,[esi+ebx*1]
65021acb:	cmp    edi,esi
65021acd:	mov    DWORD PTR [eax],esi
65021acf:	mov    DWORD PTR [eax+0x4],edx
65021ad2:	mov    DWORD PTR [eax+0x8],ecx
65021ad5:	jb     0x65021adb
65021ad7:	cmp    edi,ebx
65021ad9:	jae    0x65021ae2
65021adb:	mov    DWORD PTR [ebp-0x14],0x1
65021ae2:	xor    ebx,ebx
65021ae4:	cmp    DWORD PTR [ebp-0x14],ebx
65021ae7:	mov    DWORD PTR [eax],edi
65021ae9:	je     0x65021b05
65021aeb:	lea    esi,[edx+0x1]
65021aee:	cmp    esi,edx
65021af0:	jb     0x65021af7
65021af2:	cmp    esi,0x1
65021af5:	jae    0x65021afa
65021af7:	xor    ebx,ebx
65021af9:	inc    ebx
65021afa:	test   ebx,ebx
65021afc:	mov    DWORD PTR [eax+0x4],esi
65021aff:	je     0x65021b05
65021b01:	inc    ecx
65021b02:	mov    DWORD PTR [eax+0x8],ecx
65021b05:	mov    ecx,DWORD PTR [eax+0x4]
65021b08:	mov    edx,DWORD PTR [ebp-0xc]
65021b0b:	lea    ebx,[ecx+edx*1]
65021b0e:	xor    esi,esi
65021b10:	cmp    ebx,ecx
65021b12:	jb     0x65021b18
65021b14:	cmp    ebx,edx
65021b16:	jae    0x65021b1b
65021b18:	xor    esi,esi
65021b1a:	inc    esi
65021b1b:	test   esi,esi
65021b1d:	mov    DWORD PTR [eax+0x4],ebx
65021b20:	je     0x65021b25
65021b22:	inc    DWORD PTR [eax+0x8]
65021b25:	mov    ecx,DWORD PTR [ebp-0x8]
65021b28:	add    DWORD PTR [eax+0x8],ecx
65021b2b:	and    DWORD PTR [ebp-0x14],0x0
65021b2f:	lea    ecx,[edi+edi*1]
65021b32:	mov    edx,edi
65021b34:	shr    edx,0x1f
65021b37:	lea    edi,[ebx+ebx*1]
65021b3a:	or     edi,edx
65021b3c:	mov    edx,DWORD PTR [eax+0x8]
65021b3f:	mov    esi,ebx
65021b41:	shr    esi,0x1f
65021b44:	lea    ebx,[edx+edx*1]
65021b47:	mov    edx,DWORD PTR [ebp+0x8]
65021b4a:	or     ebx,esi
65021b4c:	mov    DWORD PTR [eax],ecx
65021b4e:	mov    DWORD PTR [eax+0x4],edi
65021b51:	mov    DWORD PTR [eax+0x8],ebx
65021b54:	movsx  edx,BYTE PTR [edx]
65021b57:	lea    esi,[ecx+edx*1]
65021b5a:	cmp    esi,ecx
65021b5c:	mov    DWORD PTR [ebp-0x10],edx
65021b5f:	jb     0x65021b65
65021b61:	cmp    esi,edx
65021b63:	jae    0x65021b6c
65021b65:	mov    DWORD PTR [ebp-0x14],0x1
65021b6c:	cmp    DWORD PTR [ebp-0x14],0x0
65021b70:	mov    DWORD PTR [eax],esi
65021b72:	je     0x65021b90
65021b74:	lea    ecx,[edi+0x1]
65021b77:	xor    edx,edx
65021b79:	cmp    ecx,edi
65021b7b:	jb     0x65021b82
65021b7d:	cmp    ecx,0x1
65021b80:	jae    0x65021b85
65021b82:	xor    edx,edx
65021b84:	inc    edx
65021b85:	test   edx,edx
65021b87:	mov    DWORD PTR [eax+0x4],ecx
65021b8a:	je     0x65021b90
65021b8c:	inc    ebx
65021b8d:	mov    DWORD PTR [eax+0x8],ebx
65021b90:	dec    DWORD PTR [ebp+0xc]
65021b93:	inc    DWORD PTR [ebp+0x8]
65021b96:	cmp    DWORD PTR [ebp+0xc],0x0
65021b9a:	ja     0x65021a84
65021ba0:	xor    esi,esi
65021ba2:	jmp    0x65021bca
65021ba4:	mov    ecx,DWORD PTR [eax+0x4]
65021ba7:	mov    edx,ecx
65021ba9:	shr    edx,0x10
65021bac:	mov    DWORD PTR [eax+0x8],edx
65021baf:	mov    edx,DWORD PTR [eax]
65021bb1:	mov    edi,edx
65021bb3:	shl    ecx,0x10
65021bb6:	shr    edi,0x10
65021bb9:	or     ecx,edi
65021bbb:	shl    edx,0x10
65021bbe:	add    DWORD PTR [ebp-0x18],0xfff0
65021bc5:	mov    DWORD PTR [eax+0x4],ecx
65021bc8:	mov    DWORD PTR [eax],edx
65021bca:	cmp    DWORD PTR [eax+0x8],esi
65021bcd:	je     0x65021ba4
65021bcf:	mov    ebx,0x8000
65021bd4:	test   DWORD PTR [eax+0x8],ebx
65021bd7:	jne    0x65021c09
65021bd9:	mov    esi,DWORD PTR [eax]
65021bdb:	mov    edi,DWORD PTR [eax+0x4]
65021bde:	add    DWORD PTR [ebp-0x18],0xffff
65021be5:	mov    ecx,esi
65021be7:	add    esi,esi
65021be9:	shr    ecx,0x1f
65021bec:	mov    DWORD PTR [eax],esi
65021bee:	lea    esi,[edi+edi*1]
65021bf1:	or     esi,ecx
65021bf3:	mov    ecx,DWORD PTR [eax+0x8]
65021bf6:	mov    edx,edi
65021bf8:	shr    edx,0x1f
65021bfb:	add    ecx,ecx
65021bfd:	or     ecx,edx
65021bff:	test   ebx,ecx
65021c01:	mov    DWORD PTR [eax+0x4],esi
65021c04:	mov    DWORD PTR [eax+0x8],ecx
65021c07:	je     0x65021bd9
65021c09:	mov    cx,WORD PTR [ebp-0x18]
65021c0d:	mov    WORD PTR [eax+0xa],cx
65021c11:	mov    ecx,DWORD PTR [ebp-0x4]
65021c14:	pop    edi
65021c15:	pop    esi
65021c16:	xor    ecx,ebp
65021c18:	pop    ebx
65021c19:	call   0x6501275c
65021c1e:	leave  
65021c1f:	ret    
65021c20:	push   0x8
65021c22:	push   0x65029d68
65021c27:	call   0x65013ca0
65021c2c:	xor    eax,eax
65021c2e:	cmp    DWORD PTR ds:0x65031564,eax
65021c34:	je     0x65021c8c
65021c36:	test   BYTE PTR [ebp+0x8],0x40
65021c3a:	je     0x65021c84
65021c3c:	cmp    DWORD PTR ds:0x6502d374,eax
65021c42:	je     0x65021c84
65021c44:	mov    DWORD PTR [ebp-0x4],eax
65021c47:	ldmxcsr DWORD PTR [ebp+0x8]
65021c4b:	jmp    0x65021c7b
65021c4d:	mov    eax,DWORD PTR [ebp-0x14]
65021c50:	mov    eax,DWORD PTR [eax]
65021c52:	mov    eax,DWORD PTR [eax]
65021c54:	cmp    eax,0xc0000005
65021c59:	je     0x65021c65
65021c5b:	cmp    eax,0xc000001d
65021c60:	je     0x65021c65
65021c62:	xor    eax,eax
65021c64:	ret    
65021c65:	xor    eax,eax
65021c67:	inc    eax
65021c68:	ret    
65021c69:	mov    esp,DWORD PTR [ebp-0x18]
65021c6c:	and    DWORD PTR ds:0x6502d374,0x0
65021c73:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021c77:	ldmxcsr DWORD PTR [ebp+0x8]
65021c7b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
65021c82:	jmp    0x65021c8c
65021c84:	and    DWORD PTR [ebp+0x8],0xffffffbf
65021c88:	ldmxcsr DWORD PTR [ebp+0x8]
65021c8c:	call   0x65013ce5
65021c91:	ret    
65021c92:	int3   
65021c93:	int3   
65021c94:	int3   
65021c95:	int3   
65021c96:	int3   
65021c97:	int3   
65021c98:	int3   
65021c99:	int3   
65021c9a:	int3   
65021c9b:	int3   
65021c9c:	int3   
65021c9d:	int3   
65021c9e:	int3   
65021c9f:	int3   
65021ca0:	mov    eax,DWORD PTR [ebp-0x10]
65021ca3:	and    eax,0x1
65021ca6:	je     0x65021cb8
65021cac:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021cb0:	mov    ecx,DWORD PTR [ebp+0x4]
65021cb3:	jmp    0x65001930
65021cb8:	ret    
65021cb9:	mov    edx,DWORD PTR [esp+0x8]
65021cbd:	lea    eax,[edx-0xc]
65021cc0:	mov    ecx,DWORD PTR [edx-0x10]
65021cc3:	xor    ecx,eax
65021cc5:	call   0x6501275c
65021cca:	mov    eax,0x65029328
65021ccf:	jmp    0x6501241e
65021cd4:	int3   
65021cd5:	int3   
65021cd6:	int3   
65021cd7:	int3   
65021cd8:	int3   
65021cd9:	int3   
65021cda:	int3   
65021cdb:	int3   
65021cdc:	int3   
65021cdd:	int3   
65021cde:	int3   
65021cdf:	int3   
65021ce0:	mov    eax,DWORD PTR [ebp-0x10]
65021ce3:	and    eax,0x1
65021ce6:	je     0x65021cf8
65021cec:	and    DWORD PTR [ebp-0x10],0xfffffffe
65021cf0:	mov    ecx,DWORD PTR [ebp+0x4]
65021cf3:	jmp    0x65001930
65021cf8:	ret    
65021cf9:	mov    edx,DWORD PTR [esp+0x8]
65021cfd:	lea    eax,[edx-0x10]
65021d00:	mov    ecx,DWORD PTR [edx-0x14]
65021d03:	xor    ecx,eax
65021d05:	call   0x6501275c
65021d0a:	mov    eax,0x65029354
65021d0f:	jmp    0x6501241e
65021d14:	int3   
65021d15:	int3   
65021d16:	int3   
65021d17:	int3   
65021d18:	int3   
65021d19:	int3   
65021d1a:	int3   
65021d1b:	int3   
65021d1c:	int3   
65021d1d:	int3   
65021d1e:	int3   
65021d1f:	int3   
65021d20:	lea    ecx,[ebp-0x50]
65021d23:	jmp    0x65001650
65021d28:	mov    edx,DWORD PTR [esp+0x8]
65021d2c:	lea    eax,[edx-0x44]
65021d2f:	mov    ecx,DWORD PTR [edx-0x48]
65021d32:	xor    ecx,eax
65021d34:	call   0x6501275c
65021d39:	mov    eax,0x650293d8
65021d3e:	jmp    0x6501241e
65021d43:	int3   
65021d44:	int3   
65021d45:	int3   
65021d46:	int3   
65021d47:	int3   
65021d48:	int3   
65021d49:	int3   
65021d4a:	int3   
65021d4b:	int3   
65021d4c:	int3   
65021d4d:	int3   
65021d4e:	int3   
65021d4f:	int3   
65021d50:	lea    ecx,[ebp-0x98]
65021d56:	jmp    0x6500f6a0
65021d5b:	lea    ecx,[ebp-0x94]
65021d61:	jmp    0x65001650
65021d66:	lea    ecx,[ebp-0x78]
65021d69:	jmp    0x65001650
65021d6e:	mov    edx,DWORD PTR [esp+0x8]
65021d72:	lea    eax,[edx-0xa8]
65021d78:	mov    ecx,DWORD PTR [edx-0xac]
65021d7e:	xor    ecx,eax
65021d80:	call   0x6501275c
65021d85:	mov    eax,0x65029424
65021d8a:	jmp    0x6501241e
65021d8f:	int3   
65021d90:	lea    ecx,[ebp+0x38]
65021d93:	jmp    0x6500f820
65021d98:	lea    ecx,[ebp-0x38]
65021d9b:	jmp    0x6500f6c0
65021da0:	lea    ecx,[ebp+0x10]
65021da3:	jmp    0x65001930
65021da8:	lea    ecx,[ebp+0x14]
65021dab:	jmp    0x65001930
65021db0:	lea    ecx,[ebp+0x18]
65021db3:	jmp    0x65001930
65021db8:	lea    ecx,[ebp+0xc]
65021dbb:	jmp    0x65001930
65021dc0:	lea    ecx,[ebp+0x8]
65021dc3:	jmp    0x65001930
65021dc8:	lea    ecx,[ebp+0x4]
65021dcb:	jmp    0x65001930
65021dd0:	lea    ecx,[ebp+0x1c]
65021dd3:	jmp    0x65001650
65021dd8:	mov    edx,DWORD PTR [esp+0x8]
65021ddc:	lea    eax,[edx+0xc]
65021ddf:	mov    ecx,DWORD PTR [edx-0x80]
65021de2:	xor    ecx,eax
65021de4:	call   0x6501275c
65021de9:	mov    ecx,DWORD PTR [edx+0x7c]
65021dec:	xor    ecx,eax
65021dee:	call   0x6501275c
65021df3:	mov    eax,0x65029494
65021df8:	jmp    0x6501241e
65021dfd:	int3   
65021dfe:	int3   
65021dff:	int3   
65021e00:	mov    eax,ds:0x6502d4e8
65021e05:	and    eax,0xfffffffe
65021e08:	mov    ds:0x6502d4e8,eax
65021e0d:	ret    
65021e0e:	mov    edx,DWORD PTR [esp+0x8]
65021e12:	lea    eax,[edx-0x10]
65021e15:	mov    ecx,DWORD PTR [edx-0x14]
65021e18:	xor    ecx,eax
65021e1a:	call   0x6501275c
65021e1f:	mov    eax,0x65029558
65021e24:	jmp    0x6501241e
65021e29:	int3   
65021e2a:	int3   
65021e2b:	int3   
65021e2c:	int3   
65021e2d:	int3   
65021e2e:	int3   
65021e2f:	int3   
65021e30:	lea    ecx,[ebp-0x14]
65021e33:	jmp    0x6500a450
65021e38:	mov    edx,DWORD PTR [esp+0x8]
65021e3c:	lea    eax,[edx+0xc]
65021e3f:	mov    ecx,DWORD PTR [edx-0x18]
65021e42:	xor    ecx,eax
65021e44:	call   0x6501275c
65021e49:	mov    eax,0x650295b8
65021e4e:	jmp    0x6501241e
65021e53:	int3   
65021e54:	int3   
65021e55:	int3   
65021e56:	int3   
65021e57:	int3   
65021e58:	int3   
65021e59:	int3   
65021e5a:	int3   
65021e5b:	int3   
65021e5c:	int3   
65021e5d:	int3   
65021e5e:	int3   
65021e5f:	int3   
65021e60:	lea    ecx,[ebp-0x10]
65021e63:	jmp    0x65001930
65021e68:	mov    edx,DWORD PTR [esp+0x8]
65021e6c:	lea    eax,[edx-0x8]
65021e6f:	mov    ecx,DWORD PTR [edx-0xc]
65021e72:	xor    ecx,eax
65021e74:	call   0x6501275c
65021e79:	mov    eax,0x650295e4
65021e7e:	jmp    0x6501241e
65021e83:	int3   
65021e84:	int3   
65021e85:	int3   
65021e86:	int3   
65021e87:	int3   
65021e88:	int3   
65021e89:	int3   
65021e8a:	int3   
65021e8b:	int3   
65021e8c:	int3   
65021e8d:	int3   
65021e8e:	int3   
65021e8f:	int3   
65021e90:	lea    ecx,[ebp-0x10]
65021e93:	jmp    0x65001680
65021e98:	lea    ecx,[ebp-0x14]
65021e9b:	jmp    0x65001930
65021ea0:	mov    edx,DWORD PTR [esp+0x8]
65021ea4:	lea    eax,[edx-0x14]
65021ea7:	mov    ecx,DWORD PTR [edx-0x18]
65021eaa:	xor    ecx,eax
65021eac:	call   0x6501275c
65021eb1:	mov    eax,0x65029618
65021eb6:	jmp    0x6501241e
65021ebb:	int3   
65021ebc:	int3   
65021ebd:	int3   
65021ebe:	int3   
65021ebf:	int3   
65021ec0:	mov    eax,DWORD PTR [ebp-0x50]
65021ec3:	and    eax,0x1
65021ec6:	je     0x65021ed8
65021ecc:	and    DWORD PTR [ebp-0x50],0xfffffffe
65021ed0:	mov    ecx,DWORD PTR [ebp-0x58]
65021ed3:	jmp    0x65001930
65021ed8:	ret    
65021ed9:	lea    ecx,[ebp-0x4c]
65021edc:	jmp    0x65001930
65021ee1:	lea    ecx,[ebp-0x54]
65021ee4:	jmp    0x65001930
65021ee9:	lea    ecx,[ebp-0x10]
65021eec:	jmp    0x65001930
65021ef1:	lea    ecx,[ebp-0x10]
65021ef4:	jmp    0x65001930
65021ef9:	lea    ecx,[ebp-0x28]
65021efc:	jmp    0x65001930
65021f01:	lea    ecx,[ebp-0x48]
65021f04:	jmp    0x65001930
65021f09:	lea    ecx,[ebp-0x24]
65021f0c:	jmp    0x65001930
65021f11:	lea    ecx,[ebp-0x14]
65021f14:	jmp    0x65001930
65021f19:	lea    ecx,[ebp-0x18]
65021f1c:	jmp    0x65001930
65021f21:	lea    ecx,[ebp-0x10]
65021f24:	jmp    0x65001930
65021f29:	lea    ecx,[ebp-0x10]
65021f2c:	jmp    0x65001930
65021f31:	lea    ecx,[ebp-0x18]
65021f34:	jmp    0x65001930
65021f39:	lea    ecx,[ebp-0x14]
65021f3c:	jmp    0x65001930
65021f41:	lea    ecx,[ebp-0x10]
65021f44:	jmp    0x65001930
65021f49:	lea    ecx,[ebp-0x3c]
65021f4c:	jmp    0x65010530
65021f51:	lea    ecx,[ebp-0x14]
65021f54:	jmp    0x65001930
65021f59:	lea    ecx,[ebp-0x10]
65021f5c:	jmp    0x65001930
65021f61:	lea    ecx,[ebp-0x20]
65021f64:	jmp    0x65001930
65021f69:	lea    ecx,[ebp-0x10]
65021f6c:	jmp    0x65001930
65021f71:	lea    ecx,[ebp-0x18]
65021f74:	jmp    0x65001930
65021f79:	lea    ecx,[ebp-0x14]
65021f7c:	jmp    0x65001930
65021f81:	lea    ecx,[ebp-0x10]
65021f84:	jmp    0x65001930
65021f89:	lea    ecx,[ebp-0x1c]
65021f8c:	jmp    0x65001930
65021f91:	lea    ecx,[ebp-0x2c]
65021f94:	jmp    0x65001930
65021f99:	lea    ecx,[ebp-0x18]
65021f9c:	jmp    0x65001930
65021fa1:	lea    ecx,[ebp-0x10]
65021fa4:	jmp    0x65001930
65021fa9:	lea    ecx,[ebp-0x2c]
65021fac:	jmp    0x65001930
65021fb1:	lea    ecx,[ebp-0x1c]
65021fb4:	jmp    0x65001930
65021fb9:	lea    ecx,[ebp-0x1c]
65021fbc:	jmp    0x65001930
65021fc1:	mov    edx,DWORD PTR [esp+0x8]
65021fc5:	lea    eax,[edx+0xc]
65021fc8:	mov    ecx,DWORD PTR [edx-0xa0]
65021fce:	xor    ecx,eax
65021fd0:	call   0x6501275c
65021fd5:	mov    ecx,DWORD PTR [edx+0x130]
65021fdb:	xor    ecx,eax
65021fdd:	call   0x6501275c
65021fe2:	mov    eax,0x6502963c
65021fe7:	jmp    0x6501241e
65021fec:	int3   
65021fed:	int3   
65021fee:	int3   
65021fef:	int3   
65021ff0:	lea    ecx,[ebp-0x30]
65021ff3:	jmp    0x65001930
65021ff8:	lea    ecx,[ebp-0x2c]
65021ffb:	jmp    0x65001650
65022000:	lea    ecx,[ebp-0x5c]
65022003:	jmp    0x65001650
65022008:	mov    edx,DWORD PTR [esp+0x8]
6502200c:	lea    eax,[edx+0xc]
6502200f:	mov    ecx,DWORD PTR [edx-0x60]
65022012:	xor    ecx,eax
65022014:	call   0x6501275c
65022019:	mov    ecx,DWORD PTR [edx-0x4]
6502201c:	xor    ecx,eax
6502201e:	call   0x6501275c
65022023:	mov    eax,0x65029768
65022028:	jmp    0x6501241e
6502202d:	lea    ecx,[ebp-0x28]
65022030:	jmp    0x65001650
65022035:	mov    edx,DWORD PTR [esp+0x8]
65022039:	lea    eax,[edx+0xc]
6502203c:	mov    ecx,DWORD PTR [edx-0x54]
6502203f:	xor    ecx,eax
65022041:	call   0x6501275c
65022046:	mov    eax,0x650297b4
6502204b:	jmp    0x6501241e
65022050:	lea    ecx,[ebp-0x28]
65022053:	jmp    0x65001650
65022058:	mov    edx,DWORD PTR [esp+0x8]
6502205c:	lea    eax,[edx+0xc]
6502205f:	mov    ecx,DWORD PTR [edx-0x54]
65022062:	xor    ecx,eax
65022064:	call   0x6501275c
65022069:	mov    eax,0x650297e0
6502206e:	jmp    0x6501241e
65022073:	mov    edx,DWORD PTR [esp+0x8]
65022077:	lea    eax,[edx+0xc]
6502207a:	mov    ecx,DWORD PTR [edx-0x14]
6502207d:	xor    ecx,eax
6502207f:	call   0x6501275c
65022084:	mov    eax,0x65029988
65022089:	jmp    0x6501241e
6502208e:	int3   
6502208f:	int3   
65022090:	mov    eax,DWORD PTR [ebp+0x4]
65022093:	push   eax
65022094:	call   0x65011f02
65022099:	pop    ecx
6502209a:	ret    
6502209b:	mov    edx,DWORD PTR [esp+0x8]
6502209f:	lea    eax,[edx-0x8]
650220a2:	mov    ecx,DWORD PTR [edx-0xc]
650220a5:	xor    ecx,eax
650220a7:	call   0x6501275c
650220ac:	mov    eax,0x65029ee0
650220b1:	jmp    0x6501241e
650220b6:	int3   
650220b7:	int3   
650220b8:	int3   
650220b9:	int3   
650220ba:	int3   
650220bb:	int3   
650220bc:	int3   
650220bd:	int3   
650220be:	int3   
650220bf:	int3   
650220c0:	mov    eax,DWORD PTR [ebp+0x4]
650220c3:	push   eax
650220c4:	call   0x65011f02
650220c9:	pop    ecx
650220ca:	ret    
650220cb:	mov    edx,DWORD PTR [esp+0x8]
650220cf:	lea    eax,[edx-0x8]
650220d2:	mov    ecx,DWORD PTR [edx-0xc]
650220d5:	xor    ecx,eax
650220d7:	call   0x6501275c
650220dc:	mov    eax,0x65029f0c
650220e1:	jmp    0x6501241e
650220e6:	int3   
650220e7:	int3   
650220e8:	int3   
650220e9:	int3   
650220ea:	int3   
650220eb:	int3   
650220ec:	int3   
650220ed:	int3   
650220ee:	int3   
650220ef:	int3   
650220f0:	mov    eax,DWORD PTR [ebp-0x10]
650220f3:	push   eax
650220f4:	call   0x65011f02
650220f9:	pop    ecx
650220fa:	ret    
650220fb:	mov    edx,DWORD PTR [esp+0x8]
650220ff:	lea    eax,[edx-0x8]
65022102:	mov    ecx,DWORD PTR [edx-0xc]
65022105:	xor    ecx,eax
65022107:	call   0x6501275c
6502210c:	mov    eax,0x65029f38
65022111:	jmp    0x6501241e
65022116:	int3   
65022117:	int3   
65022118:	int3   
65022119:	int3   
6502211a:	int3   
6502211b:	int3   
6502211c:	int3   
6502211d:	int3   
6502211e:	int3   
6502211f:	int3   
65022120:	mov    eax,DWORD PTR [ebp-0x10]
65022123:	push   eax
65022124:	call   0x65011f02
65022129:	pop    ecx
6502212a:	ret    
6502212b:	mov    edx,DWORD PTR [esp+0x8]
6502212f:	lea    eax,[edx-0xc]
65022132:	mov    ecx,DWORD PTR [edx-0x10]
65022135:	xor    ecx,eax
65022137:	call   0x6501275c
6502213c:	mov    eax,0x65029f64
65022141:	jmp    0x6501241e
65022146:	int3   
65022147:	int3   
65022148:	int3   
65022149:	int3   
6502214a:	int3   
6502214b:	int3   
6502214c:	int3   
6502214d:	int3   
6502214e:	int3   
6502214f:	int3   
65022150:	lea    ecx,[ebp-0x144]
65022156:	jmp    0x65002710
6502215b:	mov    edx,DWORD PTR [esp+0x8]
6502215f:	lea    eax,[edx-0x144]
65022165:	mov    ecx,DWORD PTR [edx-0x148]
6502216b:	xor    ecx,eax
6502216d:	call   0x6501275c
65022172:	add    eax,0xc
65022175:	mov    ecx,DWORD PTR [edx-0x4]
65022178:	xor    ecx,eax
6502217a:	call   0x6501275c
6502217f:	mov    eax,0x65029f90
65022184:	jmp    0x6501241e
65022189:	int3   
6502218a:	int3   
6502218b:	int3   
6502218c:	int3   
6502218d:	int3   
6502218e:	int3   
6502218f:	int3   
65022190:	lea    ecx,[ebp-0x20]
65022193:	jmp    0x6500b080
65022198:	mov    edx,DWORD PTR [esp+0x8]
6502219c:	lea    eax,[edx-0x1c]
6502219f:	mov    ecx,DWORD PTR [edx-0x20]
650221a2:	xor    ecx,eax
650221a4:	call   0x6501275c
650221a9:	mov    eax,0x65029fbc
650221ae:	jmp    0x6501241e
650221b3:	int3   
650221b4:	int3   
650221b5:	int3   
650221b6:	int3   
650221b7:	int3   
650221b8:	int3   
650221b9:	int3   
650221ba:	int3   
650221bb:	int3   
650221bc:	int3   
650221bd:	int3   
650221be:	int3   
650221bf:	int3   
650221c0:	mov    eax,DWORD PTR [ebp-0x10]
650221c3:	and    eax,0x1
650221c6:	je     0x650221d8
650221cc:	and    DWORD PTR [ebp-0x10],0xfffffffe
650221d0:	mov    edi,DWORD PTR [ebp+0x8]
650221d3:	jmp    0x6500ad00
650221d8:	ret    
650221d9:	mov    edx,DWORD PTR [esp+0x8]
650221dd:	lea    eax,[edx-0x8]
650221e0:	mov    ecx,DWORD PTR [edx-0xc]
650221e3:	xor    ecx,eax
650221e5:	call   0x6501275c
650221ea:	mov    eax,0x65029fe8
650221ef:	jmp    0x6501241e
650221f4:	int3   
650221f5:	int3   
650221f6:	int3   
650221f7:	int3   
650221f8:	int3   
650221f9:	int3   
650221fa:	int3   
650221fb:	int3   
650221fc:	int3   
650221fd:	int3   
650221fe:	int3   
650221ff:	int3   
65022200:	mov    edx,DWORD PTR [esp+0x8]
65022204:	lea    eax,[edx+0xc]
65022207:	mov    ecx,DWORD PTR [edx-0x2c]
6502220a:	xor    ecx,eax
6502220c:	call   0x6501275c
65022211:	mov    eax,0x6502a074
65022216:	jmp    0x6501241e
6502221b:	int3   
6502221c:	int3   
6502221d:	int3   
6502221e:	int3   
6502221f:	int3   
65022220:	mov    eax,DWORD PTR [ebp-0x18]
65022223:	push   eax
65022224:	mov    ecx,DWORD PTR [ebp-0x1c]
65022227:	push   ecx
65022228:	call   0x65002c20
6502222d:	add    esp,0x8
65022230:	ret    
65022231:	mov    edx,DWORD PTR [esp+0x8]
65022235:	lea    eax,[edx+0xc]
65022238:	mov    ecx,DWORD PTR [edx-0x20]
6502223b:	xor    ecx,eax
6502223d:	call   0x6501275c
65022242:	mov    eax,0x6502a0d4
65022247:	jmp    0x6501241e
6502224c:	int3   
6502224d:	int3   
6502224e:	int3   
6502224f:	int3   
65022250:	mov    ecx,DWORD PTR [ebp-0x10]
65022253:	jmp    0x65001650
65022258:	mov    edx,DWORD PTR [esp+0x8]
6502225c:	lea    eax,[edx-0xc]
6502225f:	mov    ecx,DWORD PTR [edx-0x10]
65022262:	xor    ecx,eax
65022264:	call   0x6501275c
65022269:	mov    eax,0x6502a100
6502226e:	jmp    0x6501241e
65022273:	int3   
65022274:	int3   
65022275:	int3   
65022276:	int3   
65022277:	int3   
65022278:	int3   
65022279:	int3   
6502227a:	int3   
6502227b:	int3   
6502227c:	int3   
6502227d:	int3   
6502227e:	int3   
6502227f:	int3   
65022280:	mov    ecx,DWORD PTR [ebp-0x10]
65022283:	jmp    0x65001650
65022288:	mov    edx,DWORD PTR [esp+0x8]
6502228c:	lea    eax,[edx-0x10]
6502228f:	mov    ecx,DWORD PTR [edx-0x14]
65022292:	xor    ecx,eax
65022294:	call   0x6501275c
65022299:	mov    eax,0x6502a12c
6502229e:	jmp    0x6501241e
650222a3:	int3   
650222a4:	int3   
650222a5:	int3   
650222a6:	int3   
650222a7:	int3   
650222a8:	int3   
650222a9:	int3   
650222aa:	int3   
650222ab:	int3   
650222ac:	int3   
650222ad:	int3   
650222ae:	int3   
650222af:	int3   
650222b0:	lea    ecx,[ebp+0x24]
650222b3:	jmp    0x65001650
650222b8:	lea    ecx,[ebp+0x8]
650222bb:	jmp    0x65001650
650222c0:	mov    edx,DWORD PTR [esp+0x8]
650222c4:	lea    eax,[edx-0x8]
650222c7:	mov    ecx,DWORD PTR [edx-0xc]
650222ca:	xor    ecx,eax
650222cc:	call   0x6501275c
650222d1:	mov    eax,0x6502a160
650222d6:	jmp    0x6501241e
650222db:	int3   
650222dc:	int3   
650222dd:	int3   
650222de:	int3   
650222df:	int3   
650222e0:	lea    ecx,[ebp-0x28]
650222e3:	jmp    0x65001650
650222e8:	mov    edx,DWORD PTR [esp+0x8]
650222ec:	lea    eax,[edx-0x28]
650222ef:	mov    ecx,DWORD PTR [edx-0x2c]
650222f2:	xor    ecx,eax
650222f4:	call   0x6501275c
650222f9:	mov    eax,0x6502a18c
650222fe:	jmp    0x6501241e
65022303:	int3   
65022304:	int3   
65022305:	int3   
65022306:	int3   
65022307:	int3   
65022308:	int3   
65022309:	int3   
6502230a:	int3   
6502230b:	int3   
6502230c:	int3   
6502230d:	int3   
6502230e:	int3   
6502230f:	int3   
65022310:	mov    ecx,DWORD PTR [ebp-0x10]
65022313:	jmp    0x65001650
65022318:	mov    edx,DWORD PTR [esp+0x8]
6502231c:	lea    eax,[edx-0x10]
6502231f:	mov    ecx,DWORD PTR [edx-0x14]
65022322:	xor    ecx,eax
65022324:	call   0x6501275c
65022329:	mov    eax,0x6502a1b8
6502232e:	jmp    0x6501241e
65022333:	int3   
65022334:	int3   
65022335:	int3   
65022336:	int3   
65022337:	int3   
65022338:	int3   
65022339:	int3   
6502233a:	int3   
6502233b:	int3   
6502233c:	int3   
6502233d:	int3   
6502233e:	int3   
6502233f:	int3   
65022340:	mov    edx,DWORD PTR [esp+0x8]
65022344:	lea    eax,[edx+0xc]
65022347:	mov    ecx,DWORD PTR [edx-0x1c]
6502234a:	xor    ecx,eax
6502234c:	call   0x6501275c
65022351:	mov    eax,0x6502a244
65022356:	jmp    0x6501241e
6502235b:	int3   
6502235c:	int3   
6502235d:	int3   
6502235e:	int3   
6502235f:	int3   
65022360:	mov    eax,DWORD PTR [ebp-0x14]
65022363:	push   eax
65022364:	mov    ecx,DWORD PTR [ebp-0x18]
65022367:	push   ecx
65022368:	call   0x65002c20
6502236d:	add    esp,0x8
65022370:	ret    
65022371:	mov    edx,DWORD PTR [esp+0x8]
65022375:	lea    eax,[edx+0xc]
65022378:	mov    ecx,DWORD PTR [edx-0x1c]
6502237b:	xor    ecx,eax
6502237d:	call   0x6501275c
65022382:	mov    eax,0x6502a2a4
65022387:	jmp    0x6501241e
6502238c:	int3   
6502238d:	int3   
6502238e:	int3   
6502238f:	int3   
65022390:	mov    eax,DWORD PTR [ebp-0x14]
65022393:	push   eax
65022394:	mov    ecx,DWORD PTR [ebp-0x18]
65022397:	push   ecx
65022398:	call   0x65002c20
6502239d:	add    esp,0x8
650223a0:	ret    
650223a1:	mov    edx,DWORD PTR [esp+0x8]
650223a5:	lea    eax,[edx+0xc]
650223a8:	mov    ecx,DWORD PTR [edx-0x1c]
650223ab:	xor    ecx,eax
650223ad:	call   0x6501275c
650223b2:	mov    eax,0x6502a304
650223b7:	jmp    0x6501241e
650223bc:	int3   
650223bd:	int3   
650223be:	int3   
650223bf:	int3   
650223c0:	mov    edx,DWORD PTR [esp+0x8]
650223c4:	lea    eax,[edx+0xc]
650223c7:	mov    ecx,DWORD PTR [edx-0x1c]
650223ca:	xor    ecx,eax
650223cc:	call   0x6501275c
650223d1:	mov    eax,0x6502a35c
650223d6:	jmp    0x6501241e
650223db:	int3   
650223dc:	int3   
650223dd:	int3   
650223de:	int3   
650223df:	int3   
650223e0:	lea    ecx,[ebp+0x8]
650223e3:	jmp    0x65007d60
650223e8:	mov    edx,DWORD PTR [esp+0x8]
650223ec:	lea    eax,[edx-0x14]
650223ef:	mov    ecx,DWORD PTR [edx-0x18]
650223f2:	xor    ecx,eax
650223f4:	call   0x6501275c
650223f9:	mov    eax,0x6502a388
650223fe:	jmp    0x6501241e
65022403:	int3   
65022404:	int3   
65022405:	int3   
65022406:	int3   
65022407:	int3   
65022408:	int3   
65022409:	int3   
6502240a:	int3   
6502240b:	int3   
6502240c:	int3   
6502240d:	int3   
6502240e:	int3   
6502240f:	int3   
65022410:	lea    ecx,[ebp+0x8]
65022413:	jmp    0x65001650
65022418:	mov    edx,DWORD PTR [esp+0x8]
6502241c:	lea    eax,[edx-0x14]
6502241f:	mov    ecx,DWORD PTR [edx-0x18]
65022422:	xor    ecx,eax
65022424:	call   0x6501275c
65022429:	mov    eax,0x6502a3b4
6502242e:	jmp    0x6501241e
65022433:	int3   
65022434:	int3   
65022435:	int3   
65022436:	int3   
65022437:	int3   
65022438:	int3   
65022439:	int3   
6502243a:	int3   
6502243b:	int3   
6502243c:	int3   
6502243d:	int3   
6502243e:	int3   
6502243f:	int3   
65022440:	mov    ecx,DWORD PTR [ebp-0x10]
65022443:	jmp    0x65011fd6
65022448:	mov    edx,DWORD PTR [esp+0x8]
6502244c:	lea    eax,[edx-0xc]
6502244f:	mov    ecx,DWORD PTR [edx-0x10]
65022452:	xor    ecx,eax
65022454:	call   0x6501275c
65022459:	mov    eax,0x6502a3e0
6502245e:	jmp    0x6501241e
65022463:	int3   
65022464:	int3   
65022465:	int3   
65022466:	int3   
65022467:	int3   
65022468:	int3   
65022469:	int3   
6502246a:	int3   
6502246b:	int3   
6502246c:	int3   
6502246d:	int3   
6502246e:	int3   
6502246f:	int3   
65022470:	mov    ecx,DWORD PTR [ebp-0x10]
65022473:	jmp    0x65011fd6
65022478:	mov    edx,DWORD PTR [esp+0x8]
6502247c:	lea    eax,[edx-0x8]
6502247f:	mov    ecx,DWORD PTR [edx-0xc]
65022482:	xor    ecx,eax
65022484:	call   0x6501275c
65022489:	mov    eax,0x6502a40c
6502248e:	jmp    0x6501241e
65022493:	int3   
65022494:	int3   
65022495:	int3   
65022496:	int3   
65022497:	int3   
65022498:	int3   
65022499:	int3   
6502249a:	int3   
6502249b:	int3   
6502249c:	int3   
6502249d:	int3   
6502249e:	int3   
6502249f:	int3   
650224a0:	mov    ecx,DWORD PTR [ebp-0x10]
650224a3:	jmp    0x65011fd6
650224a8:	mov    edx,DWORD PTR [esp+0x8]
650224ac:	lea    eax,[edx-0xc]
650224af:	mov    ecx,DWORD PTR [edx-0x10]
650224b2:	xor    ecx,eax
650224b4:	call   0x6501275c
650224b9:	mov    eax,0x6502a438
650224be:	jmp    0x6501241e
650224c3:	int3   
650224c4:	int3   
650224c5:	int3   
650224c6:	int3   
650224c7:	int3   
650224c8:	int3   
650224c9:	int3   
650224ca:	int3   
650224cb:	int3   
650224cc:	int3   
650224cd:	int3   
650224ce:	int3   
650224cf:	int3   
650224d0:	mov    ecx,DWORD PTR [ebp-0x10]
650224d3:	jmp    0x65011fd6
650224d8:	mov    edx,DWORD PTR [esp+0x8]
650224dc:	lea    eax,[edx-0x8]
650224df:	mov    ecx,DWORD PTR [edx-0xc]
650224e2:	xor    ecx,eax
650224e4:	call   0x6501275c
650224e9:	mov    eax,0x6502a464
650224ee:	jmp    0x6501241e
650224f3:	int3   
650224f4:	int3   
650224f5:	int3   
650224f6:	int3   
650224f7:	int3   
650224f8:	int3   
650224f9:	int3   
650224fa:	int3   
650224fb:	int3   
650224fc:	int3   
650224fd:	int3   
650224fe:	int3   
650224ff:	int3   
65022500:	mov    eax,DWORD PTR [ebp-0x34]
65022503:	and    eax,0x1
65022506:	je     0x65022518
6502250c:	and    DWORD PTR [ebp-0x34],0xfffffffe
65022510:	mov    ecx,DWORD PTR [ebp-0x30]
65022513:	jmp    0x65001650
65022518:	ret    
65022519:	lea    ecx,[ebp-0x2c]
6502251c:	jmp    0x65001650
65022521:	lea    ecx,[ebp-0x3c]
65022524:	jmp    0x65001930
65022529:	lea    ecx,[ebp-0x2c]
6502252c:	jmp    0x65001650
65022531:	lea    ecx,[ebp-0x3c]
65022534:	jmp    0x65001930
65022539:	lea    ecx,[ebp-0x2c]
6502253c:	jmp    0x65001650
65022541:	lea    ecx,[ebp-0x2c]
65022544:	jmp    0x65001650
65022549:	mov    edx,DWORD PTR [esp+0x8]
6502254d:	lea    eax,[edx-0x40]
65022550:	mov    ecx,DWORD PTR [edx-0x44]
65022553:	xor    ecx,eax
65022555:	call   0x6501275c
6502255a:	add    eax,0x10
6502255d:	mov    ecx,DWORD PTR [edx-0x4]
65022560:	xor    ecx,eax
65022562:	call   0x6501275c
65022567:	mov    eax,0x6502a4c0
6502256c:	jmp    0x6501241e
65022571:	int3   
65022572:	int3   
65022573:	int3   
65022574:	int3   
65022575:	int3   
65022576:	int3   
65022577:	int3   
65022578:	int3   
65022579:	int3   
6502257a:	int3   
6502257b:	int3   
6502257c:	int3   
6502257d:	int3   
6502257e:	int3   
6502257f:	int3   
65022580:	lea    ecx,[ebp-0x30]
65022583:	jmp    0x65001650
65022588:	mov    eax,DWORD PTR [ebp-0x4c]
6502258b:	push   eax
6502258c:	mov    ecx,DWORD PTR [ebp-0x50]
6502258f:	push   ecx
65022590:	call   0x65002c20
65022595:	add    esp,0x8
65022598:	ret    
65022599:	mov    edx,DWORD PTR [esp+0x8]
6502259d:	lea    eax,[edx+0xc]
650225a0:	mov    ecx,DWORD PTR [edx-0x54]
650225a3:	xor    ecx,eax
650225a5:	call   0x6501275c
650225aa:	mov    ecx,DWORD PTR [edx-0x8]
650225ad:	xor    ecx,eax
650225af:	call   0x6501275c
650225b4:	mov    eax,0x6502a530
650225b9:	jmp    0x6501241e
650225be:	int3   
650225bf:	int3   
650225c0:	mov    ecx,DWORD PTR [ebp-0x10]
650225c3:	jmp    0x65007d60
650225c8:	mov    edx,DWORD PTR [esp+0x8]
650225cc:	lea    eax,[edx-0xc]
650225cf:	mov    ecx,DWORD PTR [edx-0x10]
650225d2:	xor    ecx,eax
650225d4:	call   0x6501275c
650225d9:	mov    eax,0x6502a55c
650225de:	jmp    0x6501241e
650225e3:	int3   
650225e4:	int3   
650225e5:	int3   
650225e6:	int3   
650225e7:	int3   
650225e8:	int3   
650225e9:	int3   
650225ea:	int3   
650225eb:	int3   
650225ec:	int3   
650225ed:	int3   
650225ee:	int3   
650225ef:	int3   
650225f0:	mov    ecx,DWORD PTR [ebp-0x10]
650225f3:	jmp    0x65007d60
650225f8:	mov    edx,DWORD PTR [esp+0x8]
650225fc:	lea    eax,[edx-0x10]
650225ff:	mov    ecx,DWORD PTR [edx-0x14]
65022602:	xor    ecx,eax
65022604:	call   0x6501275c
65022609:	mov    eax,0x6502a588
6502260e:	jmp    0x6501241e
65022613:	int3   
65022614:	int3   
65022615:	int3   
65022616:	int3   
65022617:	int3   
65022618:	int3   
65022619:	int3   
6502261a:	int3   
6502261b:	int3   
6502261c:	int3   
6502261d:	int3   
6502261e:	int3   
6502261f:	int3   
65022620:	lea    ecx,[ebp+0x24]
65022623:	jmp    0x65007d60
65022628:	lea    ecx,[ebp+0x8]
6502262b:	jmp    0x65007d60
65022630:	mov    edx,DWORD PTR [esp+0x8]
65022634:	lea    eax,[edx-0x8]
65022637:	mov    ecx,DWORD PTR [edx-0xc]
6502263a:	xor    ecx,eax
6502263c:	call   0x6501275c
65022641:	mov    eax,0x6502a5bc
65022646:	jmp    0x6501241e
6502264b:	int3   
6502264c:	int3   
6502264d:	int3   
6502264e:	int3   
6502264f:	int3   
65022650:	mov    ecx,DWORD PTR [ebp-0x10]
65022653:	jmp    0x65007d60
65022658:	mov    edx,DWORD PTR [esp+0x8]
6502265c:	lea    eax,[edx-0x10]
6502265f:	mov    ecx,DWORD PTR [edx-0x14]
65022662:	xor    ecx,eax
65022664:	call   0x6501275c
65022669:	mov    eax,0x6502a5e8
6502266e:	jmp    0x6501241e
65022673:	int3   
65022674:	int3   
65022675:	int3   
65022676:	int3   
65022677:	int3   
65022678:	int3   
65022679:	int3   
6502267a:	int3   
6502267b:	int3   
6502267c:	int3   
6502267d:	int3   
6502267e:	int3   
6502267f:	int3   
65022680:	mov    eax,DWORD PTR [ebp-0x14]
65022683:	push   eax
65022684:	mov    ecx,DWORD PTR [ebp-0x18]
65022687:	push   ecx
65022688:	call   0x65002c20
6502268d:	add    esp,0x8
65022690:	ret    
65022691:	mov    edx,DWORD PTR [esp+0x8]
65022695:	lea    eax,[edx+0xc]
65022698:	mov    ecx,DWORD PTR [edx-0x1c]
6502269b:	xor    ecx,eax
6502269d:	call   0x6501275c
650226a2:	mov    eax,0x6502a648
650226a7:	jmp    0x6501241e
650226ac:	int3   
650226ad:	int3   
650226ae:	int3   
650226af:	int3   
650226b0:	lea    eax,[ebp-0x10]
650226b3:	jmp    0x650016b0
650226b8:	mov    edx,DWORD PTR [esp+0x8]
650226bc:	lea    eax,[edx-0x34]
650226bf:	mov    ecx,DWORD PTR [edx-0x38]
650226c2:	xor    ecx,eax
650226c4:	call   0x6501275c
650226c9:	mov    eax,0x6502a674
650226ce:	jmp    0x6501241e
650226d3:	int3   
650226d4:	int3   
650226d5:	int3   
650226d6:	int3   
650226d7:	int3   
650226d8:	int3   
650226d9:	int3   
650226da:	int3   
650226db:	int3   
650226dc:	int3   
650226dd:	int3   
650226de:	int3   
650226df:	int3   
650226e0:	lea    ecx,[ebp-0x54]
650226e3:	jmp    0x65001650
650226e8:	mov    edx,DWORD PTR [esp+0x8]
650226ec:	lea    eax,[edx-0x4c]
650226ef:	mov    ecx,DWORD PTR [edx-0x50]
650226f2:	xor    ecx,eax
650226f4:	call   0x6501275c
650226f9:	mov    eax,0x6502a6a0
650226fe:	jmp    0x6501241e
65022703:	int3   
65022704:	int3   
65022705:	int3   
65022706:	int3   
65022707:	int3   
65022708:	int3   
65022709:	int3   
6502270a:	int3   
6502270b:	int3   
6502270c:	int3   
6502270d:	int3   
6502270e:	int3   
6502270f:	int3   
65022710:	lea    ecx,[ebp-0x30]
65022713:	jmp    0x65001650
65022718:	mov    edx,DWORD PTR [esp+0x8]
6502271c:	lea    eax,[edx+0xc]
6502271f:	mov    ecx,DWORD PTR [edx-0x44]
65022722:	xor    ecx,eax
65022724:	call   0x6501275c
65022729:	mov    ecx,DWORD PTR [edx-0x8]
6502272c:	xor    ecx,eax
6502272e:	call   0x6501275c
65022733:	mov    eax,0x6502a734
65022738:	jmp    0x6501241e
6502273d:	int3   
6502273e:	int3   
6502273f:	int3   
65022740:	lea    ecx,[ebp-0x54]
65022743:	jmp    0x65001650
65022748:	mov    edx,DWORD PTR [esp+0x8]
6502274c:	lea    eax,[edx-0x5c]
6502274f:	mov    ecx,DWORD PTR [edx-0x60]
65022752:	xor    ecx,eax
65022754:	call   0x6501275c
65022759:	mov    eax,0x6502a760
6502275e:	jmp    0x6501241e
65022763:	int3   
65022764:	int3   
65022765:	int3   
65022766:	int3   
65022767:	int3   
65022768:	int3   
65022769:	int3   
6502276a:	int3   
6502276b:	int3   
6502276c:	int3   
6502276d:	int3   
6502276e:	int3   
6502276f:	int3   
65022770:	lea    ecx,[ebp-0x54]
65022773:	jmp    0x65001650
65022778:	mov    edx,DWORD PTR [esp+0x8]
6502277c:	lea    eax,[edx-0x5c]
6502277f:	mov    ecx,DWORD PTR [edx-0x60]
65022782:	xor    ecx,eax
65022784:	call   0x6501275c
65022789:	mov    eax,0x6502a78c
6502278e:	jmp    0x6501241e
65022793:	int3   
65022794:	int3   
65022795:	int3   
65022796:	int3   
65022797:	int3   
65022798:	int3   
65022799:	int3   
6502279a:	int3   
6502279b:	int3   
6502279c:	int3   
6502279d:	int3   
6502279e:	int3   
6502279f:	int3   
650227a0:	lea    ecx,[ebp-0x54]
650227a3:	jmp    0x65001650
650227a8:	mov    edx,DWORD PTR [esp+0x8]
650227ac:	lea    eax,[edx-0x5c]
650227af:	mov    ecx,DWORD PTR [edx-0x60]
650227b2:	xor    ecx,eax
650227b4:	call   0x6501275c
650227b9:	mov    eax,0x6502a7b8
650227be:	jmp    0x6501241e
650227c3:	int3   
650227c4:	int3   
650227c5:	int3   
650227c6:	int3   
650227c7:	int3   
650227c8:	int3   
650227c9:	int3   
650227ca:	int3   
650227cb:	int3   
650227cc:	int3   
650227cd:	int3   
650227ce:	int3   
650227cf:	int3   
650227d0:	lea    ecx,[ebp-0x54]
650227d3:	jmp    0x65001650
650227d8:	mov    edx,DWORD PTR [esp+0x8]
650227dc:	lea    eax,[edx-0x5c]
650227df:	mov    ecx,DWORD PTR [edx-0x60]
650227e2:	xor    ecx,eax
650227e4:	call   0x6501275c
650227e9:	mov    eax,0x6502a7e4
650227ee:	jmp    0x6501241e
650227f3:	int3   
650227f4:	int3   
650227f5:	int3   
650227f6:	int3   
650227f7:	int3   
650227f8:	int3   
650227f9:	int3   
650227fa:	int3   
650227fb:	int3   
650227fc:	int3   
650227fd:	int3   
650227fe:	int3   
650227ff:	int3   
65022800:	lea    ecx,[ebp-0x50]
65022803:	jmp    0x65001650
65022808:	mov    edx,DWORD PTR [esp+0x8]
6502280c:	lea    eax,[edx-0x54]
6502280f:	mov    ecx,DWORD PTR [edx-0x58]
65022812:	xor    ecx,eax
65022814:	call   0x6501275c
65022819:	mov    eax,0x6502a810
6502281e:	jmp    0x6501241e
65022823:	int3   
65022824:	int3   
65022825:	int3   
65022826:	int3   
65022827:	int3   
65022828:	int3   
65022829:	int3   
6502282a:	int3   
6502282b:	int3   
6502282c:	int3   
6502282d:	int3   
6502282e:	int3   
6502282f:	int3   
65022830:	lea    ecx,[ebp-0x50]
65022833:	jmp    0x65001650
65022838:	mov    edx,DWORD PTR [esp+0x8]
6502283c:	lea    eax,[edx-0x54]
6502283f:	mov    ecx,DWORD PTR [edx-0x58]
65022842:	xor    ecx,eax
65022844:	call   0x6501275c
65022849:	mov    eax,0x6502a83c
6502284e:	jmp    0x6501241e
65022853:	int3   
65022854:	int3   
65022855:	int3   
65022856:	int3   
65022857:	int3   
65022858:	int3   
65022859:	int3   
6502285a:	int3   
6502285b:	int3   
6502285c:	int3   
6502285d:	int3   
6502285e:	int3   
6502285f:	int3   
65022860:	mov    eax,ds:0x65030360
65022865:	and    eax,0xfffffffe
65022868:	mov    ds:0x65030360,eax
6502286d:	ret    
6502286e:	mov    edx,DWORD PTR [esp+0x8]
65022872:	lea    eax,[edx]
65022874:	mov    ecx,DWORD PTR [edx-0x4]
65022877:	xor    ecx,eax
65022879:	call   0x6501275c
6502287e:	mov    eax,0x6502a868
65022883:	jmp    0x6501241e
65022888:	int3   
65022889:	int3   
6502288a:	int3   
6502288b:	int3   
6502288c:	int3   
6502288d:	int3   
6502288e:	int3   
6502288f:	int3   
65022890:	mov    eax,ds:0x65030364
65022895:	and    eax,0xfffffffe
65022898:	mov    ds:0x65030364,eax
6502289d:	ret    
6502289e:	mov    edx,DWORD PTR [esp+0x8]
650228a2:	lea    eax,[edx]
650228a4:	mov    ecx,DWORD PTR [edx-0x4]
650228a7:	xor    ecx,eax
650228a9:	call   0x6501275c
650228ae:	mov    eax,0x6502a894
650228b3:	jmp    0x6501241e
650228b8:	int3   
650228b9:	int3   
650228ba:	int3   
650228bb:	int3   
650228bc:	int3   
650228bd:	int3   
650228be:	int3   
650228bf:	int3   
650228c0:	lea    ecx,[ebp-0x4c]
650228c3:	jmp    0x65007d60
650228c8:	lea    ecx,[ebp-0x30]
650228cb:	jmp    0x65007d60
650228d0:	mov    ecx,DWORD PTR [ebp-0xc0]
650228d6:	jmp    0x65007d60
650228db:	lea    ecx,[ebp-0x84]
650228e1:	jmp    0x650072b0
650228e6:	lea    ecx,[ebp-0xbc]
650228ec:	jmp    0x650072b0
650228f1:	mov    edx,DWORD PTR [esp+0x8]
650228f5:	lea    eax,[edx-0xdc]
650228fb:	mov    ecx,DWORD PTR [edx-0xe0]
65022901:	xor    ecx,eax
65022903:	call   0x6501275c
65022908:	add    eax,0xc
6502290b:	mov    ecx,DWORD PTR [edx-0x8]
6502290e:	xor    ecx,eax
65022910:	call   0x6501275c
65022915:	mov    eax,0x6502a8e0
6502291a:	jmp    0x6501241e
6502291f:	int3   
65022920:	lea    ecx,[ebp-0x4c]
65022923:	jmp    0x65001650
65022928:	lea    ecx,[ebp-0x30]
6502292b:	jmp    0x65001650
65022930:	mov    ecx,DWORD PTR [ebp-0xc0]
65022936:	jmp    0x65001650
6502293b:	lea    ecx,[ebp-0x84]
65022941:	jmp    0x6500f820
65022946:	lea    ecx,[ebp-0xbc]
6502294c:	jmp    0x6500f820
65022951:	mov    edx,DWORD PTR [esp+0x8]
65022955:	lea    eax,[edx-0xdc]
6502295b:	mov    ecx,DWORD PTR [edx-0xe0]
65022961:	xor    ecx,eax
65022963:	call   0x6501275c
65022968:	add    eax,0xc
6502296b:	mov    ecx,DWORD PTR [edx-0x8]
6502296e:	xor    ecx,eax
65022970:	call   0x6501275c
65022975:	mov    eax,0x6502a92c
6502297a:	jmp    0x6501241e
6502297f:	int3   
65022980:	lea    ecx,[ebp+0x4]
65022983:	jmp    0x65001930
65022988:	mov    edx,DWORD PTR [esp+0x8]
6502298c:	lea    eax,[edx-0x30]
6502298f:	mov    ecx,DWORD PTR [edx-0x34]
65022992:	xor    ecx,eax
65022994:	call   0x6501275c
65022999:	add    eax,0xc
6502299c:	mov    ecx,DWORD PTR [edx-0x4]
6502299f:	xor    ecx,eax
650229a1:	call   0x6501275c
650229a6:	mov    eax,0x6502a958
650229ab:	jmp    0x6501241e
650229b0:	mov    ecx,DWORD PTR [ebp-0x10]
650229b3:	jmp    0x65001930
650229b8:	mov    edx,DWORD PTR [esp+0x8]
650229bc:	lea    eax,[edx-0xc]
650229bf:	mov    ecx,DWORD PTR [edx-0x10]
650229c2:	xor    ecx,eax
650229c4:	call   0x6501275c
650229c9:	mov    eax,0x6502a984
650229ce:	jmp    0x6501241e
650229d3:	int3   
650229d4:	int3   
650229d5:	int3   
650229d6:	int3   
650229d7:	int3   
650229d8:	int3   
650229d9:	int3   
650229da:	int3   
650229db:	int3   
650229dc:	int3   
650229dd:	int3   
650229de:	int3   
650229df:	int3   
650229e0:	lea    ecx,[ebp-0x10]
650229e3:	jmp    0x65001930
650229e8:	mov    edx,DWORD PTR [esp+0x8]
650229ec:	lea    eax,[edx-0x8]
650229ef:	mov    ecx,DWORD PTR [edx-0xc]
650229f2:	xor    ecx,eax
650229f4:	call   0x6501275c
650229f9:	mov    eax,0x6502a9b0
650229fe:	jmp    0x6501241e
65022a03:	int3   
65022a04:	int3   
65022a05:	int3   
65022a06:	int3   
65022a07:	int3   
65022a08:	int3   
65022a09:	int3   
65022a0a:	int3   
65022a0b:	int3   
65022a0c:	int3   
65022a0d:	int3   
65022a0e:	int3   
65022a0f:	int3   
65022a10:	mov    ecx,DWORD PTR [ebp-0x10]
65022a13:	jmp    0x65001930
65022a18:	mov    edx,DWORD PTR [esp+0x8]
65022a1c:	lea    eax,[edx-0xc]
65022a1f:	mov    ecx,DWORD PTR [edx-0x10]
65022a22:	xor    ecx,eax
65022a24:	call   0x6501275c
65022a29:	mov    eax,0x6502a9dc
65022a2e:	jmp    0x6501241e
65022a33:	int3   
65022a34:	int3   
65022a35:	int3   
65022a36:	int3   
65022a37:	int3   
65022a38:	int3   
65022a39:	int3   
65022a3a:	int3   
65022a3b:	int3   
65022a3c:	int3   
65022a3d:	int3   
65022a3e:	int3   
65022a3f:	int3   
65022a40:	lea    edi,[ebp-0x58]
65022a43:	jmp    0x6500ad00
65022a48:	lea    edi,[ebp-0x40]
65022a4b:	jmp    0x6500ad00
65022a50:	lea    edi,[ebp-0x38]
65022a53:	jmp    0x6500ad00
65022a58:	lea    edi,[ebp-0x3c]
65022a5b:	jmp    0x6500ad00
65022a60:	lea    edi,[ebp-0x40]
65022a63:	jmp    0x6500ad00
65022a68:	lea    ecx,[ebp-0x24]
65022a6b:	jmp    0x6500b080
65022a70:	mov    edx,DWORD PTR [esp+0x8]
65022a74:	lea    eax,[edx-0x60]
65022a77:	mov    ecx,DWORD PTR [edx-0x64]
65022a7a:	xor    ecx,eax
65022a7c:	call   0x6501275c
65022a81:	mov    eax,0x6502aa30
65022a86:	jmp    0x6501241e
65022a8b:	int3   
65022a8c:	int3   
65022a8d:	int3   
65022a8e:	int3   
65022a8f:	int3   
65022a90:	lea    eax,[ebp-0x24]
65022a93:	jmp    0x6500bba0
65022a98:	lea    ecx,[ebp-0x10]
65022a9b:	jmp    0x65001930
65022aa0:	lea    ecx,[ebp-0x18]
65022aa3:	jmp    0x65001930
65022aa8:	lea    ecx,[ebp-0x40]
65022aab:	jmp    0x65001650
65022ab0:	mov    edx,DWORD PTR [esp+0x8]
65022ab4:	lea    eax,[edx+0xc]
65022ab7:	mov    ecx,DWORD PTR [edx-0x44]
65022aba:	xor    ecx,eax
65022abc:	call   0x6501275c
65022ac1:	mov    ecx,DWORD PTR [edx+0x294]
65022ac7:	xor    ecx,eax
65022ac9:	call   0x6501275c
65022ace:	mov    eax,0x6502aa74
65022ad3:	jmp    0x6501241e
65022ad8:	int3   
65022ad9:	int3   
65022ada:	int3   
65022adb:	int3   
65022adc:	int3   
65022add:	int3   
65022ade:	int3   
65022adf:	int3   
65022ae0:	lea    ecx,[ebp-0x1005c]
65022ae6:	jmp    0x65001650
65022aeb:	lea    ecx,[ebp-0x10074]
65022af1:	jmp    0x65002710
65022af6:	lea    ecx,[ebp-0x10074]
65022afc:	jmp    0x65002710
65022b01:	lea    ecx,[ebp-0x1005c]
65022b07:	jmp    0x65001650
65022b0c:	mov    edx,DWORD PTR [esp+0x8]
65022b10:	lea    eax,[edx-0x10084]
65022b16:	mov    ecx,DWORD PTR [edx-0x10088]
65022b1c:	xor    ecx,eax
65022b1e:	call   0x6501275c
65022b23:	add    eax,0x10
65022b26:	mov    ecx,DWORD PTR [edx-0x4]
65022b29:	xor    ecx,eax
65022b2b:	call   0x6501275c
65022b30:	mov    eax,0x6502aab8
65022b35:	jmp    0x6501241e
65022b3a:	int3   
65022b3b:	int3   
65022b3c:	int3   
65022b3d:	int3   
65022b3e:	int3   
65022b3f:	int3   
65022b40:	lea    ecx,[ebp-0x30]
65022b43:	jmp    0x65001650
65022b48:	lea    ecx,[ebp-0x5c]
65022b4b:	jmp    0x65001650
65022b50:	mov    edx,DWORD PTR [esp+0x8]
65022b54:	lea    eax,[edx-0x74]
65022b57:	mov    ecx,DWORD PTR [edx-0x78]
65022b5a:	xor    ecx,eax
65022b5c:	call   0x6501275c
65022b61:	add    eax,0xc
65022b64:	mov    ecx,DWORD PTR [edx-0x8]
65022b67:	xor    ecx,eax
65022b69:	call   0x6501275c
65022b6e:	mov    eax,0x6502aaec
65022b73:	jmp    0x6501241e
65022b78:	int3   
65022b79:	int3   
65022b7a:	int3   
65022b7b:	int3   
65022b7c:	int3   
65022b7d:	int3   
65022b7e:	int3   
65022b7f:	int3   
65022b80:	mov    edx,DWORD PTR [esp+0x8]
65022b84:	lea    eax,[edx+0xc]
65022b87:	mov    ecx,DWORD PTR [edx-0x14]
65022b8a:	xor    ecx,eax
65022b8c:	call   0x6501275c
65022b91:	mov    eax,0x6502ab44
65022b96:	jmp    0x6501241e
65022b9b:	int3   
65022b9c:	int3   
65022b9d:	int3   
65022b9e:	int3   
65022b9f:	int3   
65022ba0:	mov    ecx,DWORD PTR [ebp-0x10]
65022ba3:	jmp    0x65001930
65022ba8:	mov    edx,DWORD PTR [esp+0x8]
65022bac:	lea    eax,[edx-0xc]
65022baf:	mov    ecx,DWORD PTR [edx-0x10]
65022bb2:	xor    ecx,eax
65022bb4:	call   0x6501275c
65022bb9:	mov    eax,0x6502ab70
65022bbe:	jmp    0x6501241e
65022bc3:	int3   
65022bc4:	int3   
65022bc5:	int3   
65022bc6:	int3   
65022bc7:	int3   
65022bc8:	int3   
65022bc9:	int3   
65022bca:	int3   
65022bcb:	int3   
65022bcc:	int3   
65022bcd:	int3   
65022bce:	int3   
65022bcf:	int3   
65022bd0:	lea    ecx,[ebp-0x1c]
65022bd3:	jmp    0x65001930
65022bd8:	mov    edx,DWORD PTR [esp+0x8]
65022bdc:	lea    eax,[edx-0x1c]
65022bdf:	mov    ecx,DWORD PTR [edx-0x20]
65022be2:	xor    ecx,eax
65022be4:	call   0x6501275c
65022be9:	mov    eax,0x6502ab9c
65022bee:	jmp    0x6501241e
65022bf3:	int3   
65022bf4:	int3   
65022bf5:	int3   
65022bf6:	int3   
65022bf7:	int3   
65022bf8:	int3   
65022bf9:	int3   
65022bfa:	int3   
65022bfb:	int3   
65022bfc:	int3   
65022bfd:	int3   
65022bfe:	int3   
65022bff:	int3   
65022c00:	mov    edx,DWORD PTR [esp+0x8]
65022c04:	lea    eax,[edx+0xc]
65022c07:	mov    ecx,DWORD PTR [edx-0x16c]
65022c0d:	xor    ecx,eax
65022c0f:	call   0x6501275c
65022c14:	mov    ecx,DWORD PTR [edx-0x8]
65022c17:	xor    ecx,eax
65022c19:	call   0x6501275c
65022c1e:	mov    eax,0x6502abf4
65022c23:	jmp    0x6501241e
65022c28:	int3   
65022c29:	int3   
65022c2a:	int3   
65022c2b:	int3   
65022c2c:	int3   
65022c2d:	int3   
65022c2e:	int3   
65022c2f:	int3   
65022c30:	mov    eax,ds:0x650303dc
65022c35:	and    eax,0xfffffffe
65022c38:	mov    ds:0x650303dc,eax
65022c3d:	ret    
65022c3e:	lea    ecx,[ebp-0x434]
65022c44:	jmp    0x65001650
65022c49:	lea    ecx,[ebp-0x460]
65022c4f:	jmp    0x65001650
65022c54:	mov    edx,DWORD PTR [esp+0x8]
65022c58:	lea    eax,[edx-0x46c]
65022c5e:	mov    ecx,DWORD PTR [edx-0x470]
65022c64:	xor    ecx,eax
65022c66:	call   0x6501275c
65022c6b:	add    eax,0xc
65022c6e:	mov    ecx,DWORD PTR [edx-0x8]
65022c71:	xor    ecx,eax
65022c73:	call   0x6501275c
65022c78:	mov    eax,0x6502ac30
65022c7d:	jmp    0x6501241e
65022c82:	int3   
65022c83:	int3   
65022c84:	int3   
65022c85:	int3   
65022c86:	int3   
65022c87:	int3   
65022c88:	int3   
65022c89:	int3   
65022c8a:	int3   
65022c8b:	int3   
65022c8c:	int3   
65022c8d:	int3   
65022c8e:	int3   
65022c8f:	int3   
65022c90:	lea    esi,[ebp-0x840]
65022c96:	jmp    0x65002b80
65022c9b:	lea    ecx,[ebp-0x848]
65022ca1:	jmp    0x65001930
65022ca6:	mov    edx,DWORD PTR [esp+0x8]
65022caa:	lea    eax,[edx-0x84c]
65022cb0:	mov    ecx,DWORD PTR [edx-0x850]
65022cb6:	xor    ecx,eax
65022cb8:	call   0x6501275c
65022cbd:	add    eax,0xc
65022cc0:	mov    ecx,DWORD PTR [edx-0x8]
65022cc3:	xor    ecx,eax
65022cc5:	call   0x6501275c
65022cca:	mov    eax,0x6502ac64
65022ccf:	jmp    0x6501241e
65022cd4:	int3   
65022cd5:	int3   
65022cd6:	int3   
65022cd7:	int3   
65022cd8:	int3   
65022cd9:	int3   
65022cda:	int3   
65022cdb:	int3   
65022cdc:	int3   
65022cdd:	int3   
65022cde:	int3   
65022cdf:	int3   
65022ce0:	mov    eax,DWORD PTR [ebp-0x54]
65022ce3:	and    eax,0x1
65022ce6:	je     0x65022cf8
65022cec:	and    DWORD PTR [ebp-0x54],0xfffffffe
65022cf0:	mov    ecx,DWORD PTR [ebp+0x4]
65022cf3:	jmp    0x65001930
65022cf8:	ret    
65022cf9:	lea    ecx,[ebp-0x50]
65022cfc:	jmp    0x65001650
65022d01:	lea    ecx,[ebp-0x50]
65022d04:	jmp    0x65001650
65022d09:	mov    edx,DWORD PTR [esp+0x8]
65022d0d:	lea    eax,[edx-0x54]
65022d10:	mov    ecx,DWORD PTR [edx-0x58]
65022d13:	xor    ecx,eax
65022d15:	call   0x6501275c
65022d1a:	mov    eax,0x6502aca0
65022d1f:	jmp    0x6501241e
65022d24:	int3   
65022d25:	int3   
65022d26:	int3   
65022d27:	int3   
65022d28:	int3   
65022d29:	int3   
65022d2a:	int3   
65022d2b:	int3   
65022d2c:	int3   
65022d2d:	int3   
65022d2e:	int3   
65022d2f:	int3   
65022d30:	lea    ecx,[ebp+0x4]
65022d33:	jmp    0x65001930
65022d38:	lea    ecx,[ebp-0x58]
65022d3b:	jmp    0x65001680
65022d40:	lea    ecx,[ebp-0x50]
65022d43:	jmp    0x65001650
65022d48:	lea    ecx,[ebp-0x50]
65022d4b:	jmp    0x65001650
65022d50:	mov    edx,DWORD PTR [esp+0x8]
65022d54:	lea    eax,[edx-0x58]
65022d57:	mov    ecx,DWORD PTR [edx-0x5c]
65022d5a:	xor    ecx,eax
65022d5c:	call   0x6501275c
65022d61:	mov    eax,0x6502ace4
65022d66:	jmp    0x6501241e
65022d6b:	int3   
65022d6c:	int3   
65022d6d:	int3   
65022d6e:	int3   
65022d6f:	int3   
65022d70:	lea    ecx,[ebp-0x434]
65022d76:	jmp    0x65001930
65022d7b:	mov    edx,DWORD PTR [esp+0x8]
65022d7f:	lea    eax,[edx-0x434]
65022d85:	mov    ecx,DWORD PTR [edx-0x438]
65022d8b:	xor    ecx,eax
65022d8d:	call   0x6501275c
65022d92:	add    eax,0xc
65022d95:	mov    ecx,DWORD PTR [edx-0x8]
65022d98:	xor    ecx,eax
65022d9a:	call   0x6501275c
65022d9f:	mov    eax,0x6502ad10
65022da4:	jmp    0x6501241e
65022da9:	int3   
65022daa:	int3   
65022dab:	int3   
65022dac:	int3   
65022dad:	int3   
65022dae:	int3   
65022daf:	int3   
65022db0:	lea    edi,[ebp-0x18]
65022db3:	jmp    0x6500ad00
65022db8:	lea    edi,[ebp-0x1c]
65022dbb:	jmp    0x6500ad00
65022dc0:	lea    edi,[ebp-0x14]
65022dc3:	jmp    0x6500ad00
65022dc8:	mov    edx,DWORD PTR [esp+0x8]
65022dcc:	lea    eax,[edx-0x1c]
65022dcf:	mov    ecx,DWORD PTR [edx-0x20]
65022dd2:	xor    ecx,eax
65022dd4:	call   0x6501275c
65022dd9:	mov    eax,0x6502ad5c
65022dde:	jmp    0x6501241e
65022de3:	int3   
65022de4:	int3   
65022de5:	int3   
65022de6:	int3   
65022de7:	int3   
65022de8:	int3   
65022de9:	int3   
65022dea:	int3   
65022deb:	int3   
65022dec:	int3   
65022ded:	int3   
65022dee:	int3   
65022def:	int3   
65022df0:	lea    ecx,[ebp+0x40c]
65022df6:	jmp    0x65001930
65022dfb:	mov    eax,ds:0x650303ec
65022e00:	and    eax,0xfffffffe
65022e03:	mov    ds:0x650303ec,eax
65022e08:	ret    
65022e09:	lea    eax,[ebp-0x34]
65022e0c:	jmp    0x65003e00
65022e11:	lea    ecx,[ebp-0x28]
65022e14:	jmp    0x65001650
65022e19:	lea    ecx,[ebp-0x28]
65022e1c:	jmp    0x65001650
65022e21:	lea    ecx,[ebp-0x28]
65022e24:	jmp    0x65001650
65022e29:	lea    ecx,[ebp-0x28]
65022e2c:	jmp    0x65001650
65022e31:	lea    ecx,[ebp-0x28]
65022e34:	jmp    0x65001650
65022e39:	lea    ecx,[ebp-0x28]
65022e3c:	jmp    0x65001650
65022e41:	lea    ecx,[ebp-0x28]
65022e44:	jmp    0x65001650
65022e49:	lea    ecx,[ebp-0x28]
65022e4c:	jmp    0x65001650
65022e51:	lea    ecx,[ebp-0x28]
65022e54:	jmp    0x65001650
65022e59:	lea    ecx,[ebp-0x28]
65022e5c:	jmp    0x65001650
65022e61:	lea    ecx,[ebp-0x28]
65022e64:	jmp    0x65001650
65022e69:	lea    ecx,[ebp-0x28]
65022e6c:	jmp    0x65001650
65022e71:	lea    ecx,[ebp-0x28]
65022e74:	jmp    0x65001650
65022e79:	lea    ecx,[ebp-0x28]
65022e7c:	jmp    0x65001650
65022e81:	lea    ecx,[ebp-0x28]
65022e84:	jmp    0x65001650
65022e89:	lea    ecx,[ebp-0x28]
65022e8c:	jmp    0x65001650
65022e91:	lea    ecx,[ebp-0x28]
65022e94:	jmp    0x65001650
65022e99:	lea    ecx,[ebp-0x28]
65022e9c:	jmp    0x65001650
65022ea1:	lea    ecx,[ebp-0x28]
65022ea4:	jmp    0x65001650
65022ea9:	lea    ecx,[ebp-0x28]
65022eac:	jmp    0x65001650
65022eb1:	lea    ecx,[ebp-0x28]
65022eb4:	jmp    0x65001650
65022eb9:	lea    ecx,[ebp-0x28]
65022ebc:	jmp    0x65001650
65022ec1:	lea    ecx,[ebp-0x28]
65022ec4:	jmp    0x65001650
65022ec9:	lea    ecx,[ebp-0x28]
65022ecc:	jmp    0x65001650
65022ed1:	lea    ecx,[ebp-0x28]
65022ed4:	jmp    0x65001650
65022ed9:	lea    ecx,[ebp-0x28]
65022edc:	jmp    0x65001650
65022ee1:	lea    ecx,[ebp-0x28]
65022ee4:	jmp    0x65001650
65022ee9:	lea    ecx,[ebp-0x28]
65022eec:	jmp    0x65001650
65022ef1:	lea    ecx,[ebp-0x28]
65022ef4:	jmp    0x65001650
65022ef9:	lea    ecx,[ebp-0x28]
65022efc:	jmp    0x65001650
65022f01:	lea    ecx,[ebp-0x28]
65022f04:	jmp    0x65001650
65022f09:	lea    ecx,[ebp-0x28]
65022f0c:	jmp    0x65001650
65022f11:	lea    ecx,[ebp-0x28]
65022f14:	jmp    0x65001650
65022f19:	lea    ecx,[ebp-0x28]
65022f1c:	jmp    0x65001650
65022f21:	lea    ecx,[ebp-0x28]
65022f24:	jmp    0x65001650
65022f29:	lea    ecx,[ebp-0x28]
65022f2c:	jmp    0x65001650
65022f31:	lea    ecx,[ebp-0x28]
65022f34:	jmp    0x65001650
65022f39:	lea    ecx,[ebp-0x28]
65022f3c:	jmp    0x65001650
65022f41:	lea    ecx,[ebp-0x28]
65022f44:	jmp    0x65001650
65022f49:	lea    ecx,[ebp-0x28]
65022f4c:	jmp    0x65001650
65022f51:	lea    ecx,[ebp-0x28]
65022f54:	jmp    0x65001650
65022f59:	lea    ecx,[ebp-0x28]
65022f5c:	jmp    0x65001650
65022f61:	lea    ecx,[ebp-0x28]
65022f64:	jmp    0x65001650
65022f69:	lea    ecx,[ebp-0x28]
65022f6c:	jmp    0x65001650
65022f71:	lea    ecx,[ebp-0x28]
65022f74:	jmp    0x65001650
65022f79:	lea    ecx,[ebp-0x28]
65022f7c:	jmp    0x65001650
65022f81:	lea    ecx,[ebp-0x28]
65022f84:	jmp    0x65001650
65022f89:	lea    ecx,[ebp-0x28]
65022f8c:	jmp    0x65001650
65022f91:	lea    ecx,[ebp-0x28]
65022f94:	jmp    0x65001650
65022f99:	lea    ecx,[ebp-0x28]
65022f9c:	jmp    0x65001650
65022fa1:	lea    ecx,[ebp-0x28]
65022fa4:	jmp    0x65001650
65022fa9:	lea    ecx,[ebp-0x28]
65022fac:	jmp    0x65001650
65022fb1:	lea    ecx,[ebp-0x28]
65022fb4:	jmp    0x65001650
65022fb9:	lea    ecx,[ebp-0x28]
65022fbc:	jmp    0x65001650
65022fc1:	lea    ecx,[ebp-0x28]
65022fc4:	jmp    0x65001650
65022fc9:	lea    ecx,[ebp-0x28]
65022fcc:	jmp    0x65001650
65022fd1:	lea    ecx,[ebp-0x28]
65022fd4:	jmp    0x65001650
65022fd9:	lea    ecx,[ebp-0x28]
65022fdc:	jmp    0x65001650
65022fe1:	lea    ecx,[ebp-0x28]
65022fe4:	jmp    0x65001650
65022fe9:	lea    eax,[ebp-0x40]
65022fec:	jmp    0x65003e00
65022ff1:	lea    ecx,[ebp-0x28]
65022ff4:	jmp    0x65001650
65022ff9:	mov    edx,DWORD PTR [esp+0x8]
65022ffd:	lea    eax,[edx+0xc]
65023000:	mov    ecx,DWORD PTR [edx-0x4c]
65023003:	xor    ecx,eax
65023005:	call   0x6501275c
6502300a:	mov    ecx,DWORD PTR [edx+0x40c]
65023010:	xor    ecx,eax
65023012:	call   0x6501275c
65023017:	mov    eax,0x6502af80
6502301c:	jmp    0x6501241e
65023021:	int3   
65023022:	int3   
65023023:	int3   
65023024:	int3   
65023025:	int3   
65023026:	int3   
65023027:	int3   
65023028:	int3   
65023029:	int3   
6502302a:	int3   
6502302b:	int3   
6502302c:	int3   
6502302d:	int3   
6502302e:	int3   
6502302f:	int3   
65023030:	lea    ecx,[ebp+0x40c]
65023036:	jmp    0x65001930
6502303b:	mov    eax,ds:0x650303fc
65023040:	and    eax,0xfffffffe
65023043:	mov    ds:0x650303fc,eax
65023048:	ret    
65023049:	lea    eax,[ebp-0x34]
6502304c:	jmp    0x65003e00
65023051:	lea    ecx,[ebp-0x28]
65023054:	jmp    0x65001650
65023059:	lea    ecx,[ebp-0x28]
6502305c:	jmp    0x65001650
65023061:	lea    ecx,[ebp-0x28]
65023064:	jmp    0x65001650
65023069:	lea    ecx,[ebp-0x28]
6502306c:	jmp    0x65001650
65023071:	lea    ecx,[ebp-0x28]
65023074:	jmp    0x65001650
65023079:	lea    ecx,[ebp-0x28]
6502307c:	jmp    0x65001650
65023081:	lea    ecx,[ebp-0x28]
65023084:	jmp    0x65001650
65023089:	lea    ecx,[ebp-0x28]
6502308c:	jmp    0x65001650
65023091:	lea    ecx,[ebp-0x28]
65023094:	jmp    0x65001650
65023099:	lea    ecx,[ebp-0x28]
6502309c:	jmp    0x65001650
650230a1:	lea    ecx,[ebp-0x28]
650230a4:	jmp    0x65001650
650230a9:	lea    ecx,[ebp-0x28]
650230ac:	jmp    0x65001650
650230b1:	lea    ecx,[ebp-0x28]
650230b4:	jmp    0x65001650
650230b9:	lea    ecx,[ebp-0x28]
650230bc:	jmp    0x65001650
650230c1:	lea    ecx,[ebp-0x28]
650230c4:	jmp    0x65001650
650230c9:	lea    ecx,[ebp-0x28]
650230cc:	jmp    0x65001650
650230d1:	lea    ecx,[ebp-0x28]
650230d4:	jmp    0x65001650
650230d9:	lea    ecx,[ebp-0x28]
650230dc:	jmp    0x65001650
650230e1:	lea    ecx,[ebp-0x28]
650230e4:	jmp    0x65001650
650230e9:	lea    ecx,[ebp-0x28]
650230ec:	jmp    0x65001650
650230f1:	lea    ecx,[ebp-0x28]
650230f4:	jmp    0x65001650
650230f9:	lea    ecx,[ebp-0x28]
650230fc:	jmp    0x65001650
65023101:	lea    ecx,[ebp-0x28]
65023104:	jmp    0x65001650
65023109:	lea    ecx,[ebp-0x28]
6502310c:	jmp    0x65001650
65023111:	lea    ecx,[ebp-0x28]
65023114:	jmp    0x65001650
65023119:	lea    ecx,[ebp-0x28]
6502311c:	jmp    0x65001650
65023121:	lea    ecx,[ebp-0x28]
65023124:	jmp    0x65001650
65023129:	lea    ecx,[ebp-0x28]
6502312c:	jmp    0x65001650
65023131:	lea    ecx,[ebp-0x28]
65023134:	jmp    0x65001650
65023139:	lea    ecx,[ebp-0x28]
6502313c:	jmp    0x65001650
65023141:	lea    ecx,[ebp-0x28]
65023144:	jmp    0x65001650
65023149:	lea    ecx,[ebp-0x28]
6502314c:	jmp    0x65001650
65023151:	lea    ecx,[ebp-0x28]
65023154:	jmp    0x65001650
65023159:	lea    ecx,[ebp-0x28]
6502315c:	jmp    0x65001650
65023161:	lea    ecx,[ebp-0x28]
65023164:	jmp    0x65001650
65023169:	lea    ecx,[ebp-0x28]
6502316c:	jmp    0x65001650
65023171:	lea    ecx,[ebp-0x28]
65023174:	jmp    0x65001650
65023179:	lea    ecx,[ebp-0x28]
6502317c:	jmp    0x65001650
65023181:	lea    eax,[ebp-0x40]
65023184:	jmp    0x65003e00
65023189:	lea    ecx,[ebp-0x28]
6502318c:	jmp    0x65001650
65023191:	mov    edx,DWORD PTR [esp+0x8]
65023195:	lea    eax,[edx+0xc]
65023198:	mov    ecx,DWORD PTR [edx-0x4c]
6502319b:	xor    ecx,eax
6502319d:	call   0x6501275c
650231a2:	mov    ecx,DWORD PTR [edx+0x40c]
650231a8:	xor    ecx,eax
650231aa:	call   0x6501275c
650231af:	mov    eax,0x6502b100
650231b4:	jmp    0x6501241e
650231b9:	int3   
650231ba:	int3   
650231bb:	int3   
650231bc:	int3   
650231bd:	int3   
650231be:	int3   
650231bf:	int3   
650231c0:	mov    eax,DWORD PTR [ebp-0x54]
650231c3:	and    eax,0x1
650231c6:	je     0x650231d8
650231cc:	and    DWORD PTR [ebp-0x54],0xfffffffe
650231d0:	mov    ecx,DWORD PTR [ebp+0x4]
650231d3:	jmp    0x65001930
650231d8:	ret    
650231d9:	lea    ecx,[ebp-0x50]
650231dc:	jmp    0x65001650
650231e1:	mov    edx,DWORD PTR [esp+0x8]
650231e5:	lea    eax,[edx-0x58]
650231e8:	mov    ecx,DWORD PTR [edx-0x5c]
650231eb:	xor    ecx,eax
650231ed:	call   0x6501275c
650231f2:	mov    eax,0x6502b134
650231f7:	jmp    0x6501241e
650231fc:	int3   
650231fd:	int3   
650231fe:	int3   
650231ff:	int3   
65023200:	mov    eax,DWORD PTR [ebp-0x28]
65023203:	and    eax,0x1
65023206:	je     0x65023218
6502320c:	and    DWORD PTR [ebp-0x28],0xfffffffe
65023210:	mov    ecx,DWORD PTR [ebp+0x4]
65023213:	jmp    0x65001930
65023218:	ret    
65023219:	lea    ecx,[ebp-0x24]
6502321c:	jmp    0x65001930
65023221:	lea    ecx,[ebp-0x20]
65023224:	jmp    0x65001930
65023229:	lea    ecx,[ebp-0x1c]
6502322c:	jmp    0x65001930
65023231:	lea    ecx,[ebp-0x18]
65023234:	jmp    0x65001930
65023239:	lea    ecx,[ebp-0x14]
6502323c:	jmp    0x65001930
65023241:	lea    ecx,[ebp-0x10]
65023244:	jmp    0x65001930
65023249:	mov    edx,DWORD PTR [esp+0x8]
6502324d:	lea    eax,[edx-0x30]
65023250:	mov    ecx,DWORD PTR [edx-0x34]
65023253:	xor    ecx,eax
65023255:	call   0x6501275c
6502325a:	mov    eax,0x6502b190
6502325f:	jmp    0x6501241e
65023264:	int3   
65023265:	int3   
65023266:	int3   
65023267:	int3   
65023268:	int3   
65023269:	int3   
6502326a:	int3   
6502326b:	int3   
6502326c:	int3   
6502326d:	int3   
6502326e:	int3   
6502326f:	int3   
65023270:	mov    eax,DWORD PTR [ebp-0x3c]
65023273:	and    eax,0x1
65023276:	je     0x65023288
6502327c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
65023280:	mov    ecx,DWORD PTR [ebp+0x4]
65023283:	jmp    0x65001930
65023288:	ret    
65023289:	lea    ecx,[ebp-0x50]
6502328c:	jmp    0x65001930
65023291:	lea    ecx,[ebp-0x38]
65023294:	jmp    0x65001930
65023299:	mov    edx,DWORD PTR [esp+0x8]
6502329d:	lea    eax,[edx-0x54]
650232a0:	mov    ecx,DWORD PTR [edx-0x58]
650232a3:	xor    ecx,eax
650232a5:	call   0x6501275c
650232aa:	mov    eax,0x6502b1cc
650232af:	jmp    0x6501241e
650232b4:	int3   
650232b5:	int3   
650232b6:	int3   
650232b7:	int3   
650232b8:	int3   
650232b9:	int3   
650232ba:	int3   
650232bb:	int3   
650232bc:	int3   
650232bd:	int3   
650232be:	int3   
650232bf:	int3   
650232c0:	lea    ecx,[ebp+0xc]
650232c3:	jmp    0x65001930
650232c8:	lea    ecx,[ebp-0x28]
650232cb:	jmp    0x65001650
650232d0:	lea    ecx,[ebp-0x6c]
650232d3:	jmp    0x65001650
650232d8:	lea    ecx,[ebp-0x88]
650232de:	jmp    0x65001650
650232e3:	lea    ecx,[ebp-0xc0]
650232e9:	jmp    0x65001650
650232ee:	lea    ecx,[ebp-0xa4]
650232f4:	jmp    0x65001650
650232f9:	mov    edx,DWORD PTR [esp+0x8]
650232fd:	lea    eax,[edx+0xc]
65023300:	mov    ecx,DWORD PTR [edx-0xc4]
65023306:	xor    ecx,eax
65023308:	call   0x6501275c
6502330d:	mov    ecx,DWORD PTR [edx+0x80]
65023313:	xor    ecx,eax
65023315:	call   0x6501275c
6502331a:	mov    eax,0x6502b220
6502331f:	jmp    0x6501241e
65023324:	int3   
65023325:	int3   
65023326:	int3   
65023327:	int3   
65023328:	int3   
65023329:	int3   
6502332a:	int3   
6502332b:	int3   
6502332c:	int3   
6502332d:	int3   
6502332e:	int3   
6502332f:	int3   
65023330:	mov    ecx,0x6502d4ec
65023335:	call   0x65011bad
6502333a:	push   0x650234b1
6502333f:	call   0x6501288f
65023344:	pop    ecx
65023345:	ret    
65023346:	mov    ecx,0x6502d528
6502334b:	call   0x65011b87
65023350:	push   0x650234bb
65023355:	call   0x6501288f
6502335a:	pop    ecx
6502335b:	ret    
6502335c:	call   DWORD PTR ds:0x65024104
65023362:	push   0x650234c5
65023367:	mov    DWORD PTR ds:0x6502d554,0x65024b14
65023371:	mov    ds:0x6502d558,eax
65023376:	mov    BYTE PTR ds:0x6502d55c,0x0
6502337d:	call   0x6501288f
65023382:	pop    ecx
65023383:	ret    
65023384:	push   0x6502d554
65023389:	mov    ecx,0x6502d560
6502338e:	call   0x65011d20
65023393:	push   0x650234cf
65023398:	call   0x6501288f
6502339d:	pop    ecx
6502339e:	ret    
6502339f:	int3   
650233a0:	push   0x650234f0
650233a5:	call   0x6501288f
650233aa:	pop    ecx
650233ab:	ret    
650233ac:	int3   
650233ad:	int3   
650233ae:	int3   
650233af:	int3   
650233b0:	push   ecx
650233b1:	mov    eax,0x650303d0
650233b6:	call   0x65007aa0
650233bb:	pop    ecx
650233bc:	ret    
650233bd:	int3   
650233be:	int3   
650233bf:	int3   
650233c0:	mov    eax,0x650303f0
650233c5:	jmp    0x65007aa0
650233ca:	int3   
650233cb:	int3   
650233cc:	int3   
650233cd:	int3   
650233ce:	int3   
650233cf:	int3   
650233d0:	mov    eax,0x650303e0
650233d5:	jmp    0x65007aa0
650233da:	int3   
650233db:	int3   
650233dc:	int3   
650233dd:	int3   
650233de:	int3   
650233df:	int3   
650233e0:	push   ebp
650233e1:	mov    ebp,esp
650233e3:	and    esp,0xfffffff8
650233e6:	mov    eax,ds:0x65030358
650233eb:	mov    edx,DWORD PTR [eax]
650233ed:	sub    esp,0xc
650233f0:	push   esi
650233f1:	push   eax
650233f2:	mov    ecx,0x65030354
650233f7:	push   ecx
650233f8:	push   edx
650233f9:	mov    esi,ecx
650233fb:	push   esi
650233fc:	lea    eax,[esp+0x18]
65023400:	push   eax
65023401:	call   0x650093b0
65023406:	mov    ecx,DWORD PTR ds:0x65030358
6502340c:	push   ecx
6502340d:	call   0x65011f02
65023412:	add    esp,0x4
65023415:	xor    eax,eax
65023417:	mov    ds:0x65030358,eax
6502341c:	mov    ds:0x6503035c,eax
65023421:	pop    esi
65023422:	mov    esp,ebp
65023424:	pop    ebp
65023425:	ret    
65023426:	int3   
65023427:	int3   
65023428:	int3   
65023429:	int3   
6502342a:	int3   
6502342b:	int3   
6502342c:	int3   
6502342d:	int3   
6502342e:	int3   
6502342f:	int3   
65023430:	push   ebp
65023431:	mov    ebp,esp
65023433:	and    esp,0xfffffff8
65023436:	mov    eax,ds:0x6503034c
6502343b:	mov    edx,DWORD PTR [eax]
6502343d:	sub    esp,0xc
65023440:	push   esi
65023441:	push   eax
65023442:	mov    ecx,0x65030348
65023447:	push   ecx
65023448:	push   edx
65023449:	mov    esi,ecx
6502344b:	push   esi
6502344c:	lea    eax,[esp+0x18]
65023450:	push   eax
65023451:	call   0x650090c0
65023456:	mov    ecx,DWORD PTR ds:0x6503034c
6502345c:	push   ecx
6502345d:	call   0x65011f02
65023462:	add    esp,0x4
65023465:	xor    eax,eax
65023467:	mov    ds:0x6503034c,eax
6502346c:	mov    ds:0x65030350,eax
65023471:	pop    esi
65023472:	mov    esp,ebp
65023474:	pop    ebp
65023475:	ret    
65023476:	int3   
65023477:	int3   
65023478:	int3   
65023479:	int3   
6502347a:	int3   
6502347b:	int3   
6502347c:	int3   
6502347d:	int3   
6502347e:	int3   
6502347f:	int3   
65023480:	mov    eax,ds:0x6502d4dc
65023485:	test   eax,eax
65023487:	je     0x65023492
65023489:	push   eax
6502348a:	call   0x65011f02
6502348f:	add    esp,0x4
65023492:	mov    DWORD PTR ds:0x6502d4dc,0x0
6502349c:	mov    DWORD PTR ds:0x6502d4e0,0x0
650234a6:	mov    DWORD PTR ds:0x6502d4e4,0x0
650234b0:	ret    
650234b1:	mov    ecx,0x6502d4ec
650234b6:	jmp    0x65011b1b
650234bb:	mov    ecx,0x6502d528
650234c0:	jmp    0x65011c5c
650234c5:	mov    ecx,0x6502d554
650234ca:	jmp    0x65011c74
650234cf:	mov    DWORD PTR ds:0x6502d560,0x65024b28
650234d9:	ret    
650234da:	mov    DWORD PTR ds:0x6502d580,0x65024b44
650234e4:	mov    ecx,0x6502d580
650234e9:	jmp    0x65011fd6
650234ee:	int3   
650234ef:	int3   
650234f0:	push   0x6502d038
650234f5:	call   DWORD PTR ds:0x650241a4
650234fb:	ret    
